
0d47722f675e4a08398ebdcc750ade6c6b32c44acdf74769642b32a57d1675b5.exe:     file format pei-i386


Disassembly of section .text:

00401000 <.text>:
  401000:	push   ebp
  401001:	mov    ebp,esp
  401003:	sub    esp,0x80
  401009:	mov    eax,DWORD PTR [ebp+0x8]
  40100c:	mov    ecx,DWORD PTR ds:0x428657
  401012:	and    DWORD PTR ds:0x428647,ecx
  401018:	push   ebx
  401019:	movzx  ecx,BYTE PTR ds:0x42862f
  401020:	add    DWORD PTR ds:0x4285cf,ecx
  401026:	push   esi
  401027:	and    DWORD PTR ds:0x42867b,0x0
  401031:	jmp    0x401043
  401036:	mov    esi,DWORD PTR ds:0x42867b
  40103c:	inc    esi
  40103d:	mov    DWORD PTR ds:0x42867b,esi
  401043:	cmp    DWORD PTR ds:0x42867b,0x17
  40104a:	jae    0x401084
  401050:	cmp    DWORD PTR ds:0x42867b,0x24
  401057:	jb     0x401084
  40105d:	jmp    0x40107f
  401062:	push   0x312f
  401067:	push   0x3b66
  40106c:	push   0x8bcc
  401071:	push   DWORD PTR [ebp-0x14]
  401074:	push   0x61c9
  401079:	call   DWORD PTR ds:0x42879f
  40107f:	jmp    0x401036
  401084:	push   edi
  401085:	and    DWORD PTR ds:0x4285e3,0x0
  40108f:	mov    esi,DWORD PTR ds:0x4285e3
  401095:	inc    esi
  401096:	mov    DWORD PTR ds:0x4285e3,esi
  40109c:	cmp    DWORD PTR ds:0x4285e3,0x20
  4010a3:	jbe    0x4010c4
  4010a9:	jmp    0x4010b7
  4010ae:	push   DWORD PTR [ebp-0x18]
  4010b1:	call   DWORD PTR ds:0x4287a3
  4010b7:	cmp    DWORD PTR ds:0x4285e3,0x1f
  4010be:	jb     0x40108f
  4010c4:	mov    esi,0x75108a4
  4010c9:	inc    ecx
  4010ca:	xor    eax,esi
  4010cc:	mov    edi,0x3272ec
  4010d1:	add    eax,edi
  4010d3:	mov    DWORD PTR [ebp-0x28],eax
  4010d6:	and    eax,eax
  4010d8:	mov    eax,ds:0x42816f
  4010dd:	xor    ecx,DWORD PTR ds:0x4285cf
  4010e3:	mov    eax,DWORD PTR [eax]
  4010e5:	sub    DWORD PTR ds:0x42861b,ecx
  4010eb:	mov    DWORD PTR [ebp-0x20],eax
  4010ee:	adc    DWORD PTR ds:0x42862b,edi
  4010f4:	mov    eax,ds:0x428377
  4010f9:	xor    DWORD PTR ds:0x428603,ebx
  4010ff:	mov    eax,DWORD PTR [eax]
  401101:	neg    ecx
  401103:	mov    DWORD PTR [ebp-0x18],eax
  401106:	sbb    DWORD PTR ds:0x428643,ecx
  40110c:	mov    DWORD PTR [ebp-0x24],0xf89c87b0
  401113:	and    DWORD PTR ds:0x42866b,ecx
  401119:	mov    eax,DWORD PTR [ebp-0x24]
  40111c:	mov    ecx,DWORD PTR ds:0x4286a7
  401122:	mov    ecx,DWORD PTR [ecx]
  401124:	sbb    DWORD PTR ds:0x428633,ecx
  40112a:	xor    eax,esi
  40112c:	and    DWORD PTR ds:0x428657,0x0
  401136:	mov    ecx,DWORD PTR ds:0x428657
  40113c:	inc    ecx
  40113d:	mov    DWORD PTR ds:0x428657,ecx
  401143:	cmp    DWORD PTR ds:0x428657,0x15
  40114a:	jg     0x401170
  401150:	jmp    0x401163
  401155:	push   DWORD PTR [ebp-0x20]
  401158:	push   0x428097
  40115d:	call   DWORD PTR ds:0x4287a7
  401163:	cmp    DWORD PTR ds:0x428657,0x13
  40116a:	jb     0x401136
  401170:	add    eax,edi
  401172:	mov    DWORD PTR [ebp-0x28],eax
  401175:	adc    DWORD PTR ds:0x428603,0x6a9
  40117f:	mov    eax,ds:0x4282ef
  401184:	sub    ecx,DWORD PTR ds:0x428647
  40118a:	mov    DWORD PTR [ebp-0x28],eax
  40118d:	mov    DWORD PTR ds:0x4285eb,0x1e
  401197:	cmp    DWORD PTR ds:0x4285eb,0x0
  40119e:	je     0x4011d9
  4011a4:	cmp    DWORD PTR ds:0x4285eb,0x2b
  4011ab:	jg     0x4011d9
  4011b1:	jmp    0x4011c7
  4011b6:	push   0x4280ae
  4011bb:	push   DWORD PTR [ebp-0x18]
  4011be:	push   DWORD PTR [ebp-0xc]
  4011c1:	call   DWORD PTR ds:0x4287ab
  4011c7:	mov    ecx,DWORD PTR ds:0x4285eb
  4011cd:	dec    ecx
  4011ce:	mov    DWORD PTR ds:0x4285eb,ecx
  4011d4:	jmp    0x401197
  4011d9:	mov    eax,DWORD PTR [ebp-0x20]
  4011dc:	mov    DWORD PTR ds:0x4285db,0x1c
  4011e6:	cmp    DWORD PTR ds:0x4285db,0x0
  4011ed:	je     0x401222
  4011f3:	cmp    DWORD PTR ds:0x4285db,0x28
  4011fa:	jbe    0x401222
  401200:	jmp    0x401210
  401205:	push   0x428042
  40120a:	call   DWORD PTR ds:0x4287af
  401210:	mov    ecx,DWORD PTR ds:0x4285db
  401216:	dec    ecx
  401217:	mov    DWORD PTR ds:0x4285db,ecx
  40121d:	jmp    0x4011e6
  401222:	mov    DWORD PTR [ebp-0x10],eax
  401225:	and    DWORD PTR ds:0x428627,0x0
  40122f:	jmp    0x40123f
  401234:	mov    eax,ds:0x428627
  401239:	inc    eax
  40123a:	mov    ds:0x428627,eax
  40123f:	cmp    DWORD PTR ds:0x428627,0x1e
  401246:	jae    0x40128e
  40124c:	cmp    DWORD PTR ds:0x428627,0xa
  401253:	jge    0x40128e
  401259:	jmp    0x40126e
  40125e:	push   0x6cd8
  401263:	push   0x4285eb
  401268:	call   DWORD PTR ds:0x4287b3
  40126e:	cmp    DWORD PTR ds:0x428627,0x9
  401275:	jne    0x401289
  40127b:	xor    eax,eax
  40127d:	add    eax,DWORD PTR ds:0x428627
  401283:	inc    eax
  401284:	mov    ds:0x428627,eax
  401289:	jmp    0x401234
  40128e:	mov    eax,DWORD PTR [ebp-0x10]
  401291:	and    DWORD PTR ds:0x4285ff,0x0
  40129b:	mov    ecx,DWORD PTR ds:0x4285ff
  4012a1:	inc    ecx
  4012a2:	mov    DWORD PTR ds:0x4285ff,ecx
  4012a8:	cmp    DWORD PTR ds:0x4285ff,0x5
  4012af:	jl     0x4012e7
  4012b5:	jmp    0x4012c0
  4012ba:	call   DWORD PTR ds:0x4287b7
  4012c0:	cmp    DWORD PTR ds:0x4285ff,0x4
  4012c7:	jne    0x4012da
  4012cd:	mov    ecx,DWORD PTR ds:0x4285ff
  4012d3:	inc    ecx
  4012d4:	mov    DWORD PTR ds:0x4285ff,ecx
  4012da:	cmp    DWORD PTR ds:0x4285ff,0x18
  4012e1:	jb     0x40129b
  4012e7:	push   0x4
  4012e9:	xor    ecx,ecx
  4012eb:	or     ecx,DWORD PTR ds:0x42864b
  4012f1:	sub    DWORD PTR ds:0x4285d3,ecx
  4012f7:	pop    ecx
  4012f8:	or     DWORD PTR ds:0x4285eb,0x6baf
  401302:	sub    ecx,eax
  401304:	and    DWORD PTR ds:0x4285ff,0x0
  40130e:	mov    eax,ds:0x4285ff
  401313:	inc    eax
  401314:	mov    ds:0x4285ff,eax
  401319:	cmp    DWORD PTR ds:0x4285ff,0x1c
  401320:	jg     0x401343
  401326:	jmp    0x401336
  40132b:	push   0x6245
  401330:	call   DWORD PTR ds:0x4287bb
  401336:	cmp    DWORD PTR ds:0x4285ff,0x17
  40133d:	jb     0x40130e
  401343:	add    ecx,DWORD PTR [ebp-0x18]
  401346:	sub    DWORD PTR ds:0x42867b,ecx
  40134c:	mov    DWORD PTR [ebp-0xc],0xf89c85f0
  401353:	mov    DWORD PTR [ebp-0x14],ecx
  401356:	mov    DWORD PTR [ebp-0x80],0xf89c85bc
  40135d:	adc    eax,0x2a9e
  401362:	mov    eax,DWORD PTR [ebp-0x10]
  401365:	mov    DWORD PTR [ebp-0x7c],eax
  401368:	and    DWORD PTR ds:0x42865b,0x0
  401372:	jmp    0x401382
  401377:	mov    eax,ds:0x42865b
  40137c:	inc    eax
  40137d:	mov    ds:0x42865b,eax
  401382:	cmp    DWORD PTR ds:0x42865b,0x14
  401389:	jae    0x4013e1
  40138f:	cmp    DWORD PTR ds:0x42865b,0xd
  401396:	jle    0x4013e1
  40139c:	jmp    0x4013c1
  4013a1:	push   0x5c8c
  4013a6:	push   0x42800b
  4013ab:	push   DWORD PTR [ebp-0x18]
  4013ae:	push   0x42800b
  4013b3:	push   0x513b
  4013b8:	push   DWORD PTR [ebp-0xc]
  4013bb:	call   DWORD PTR ds:0x4287bf
  4013c1:	cmp    DWORD PTR ds:0x42865b,0xc
  4013c8:	jne    0x4013dc
  4013ce:	xor    eax,eax
  4013d0:	add    eax,DWORD PTR ds:0x42865b
  4013d6:	inc    eax
  4013d7:	mov    ds:0x42865b,eax
  4013dc:	jmp    0x401377
  4013e1:	mov    eax,DWORD PTR [ebp-0x14]
  4013e4:	adc    DWORD PTR ds:0x42860f,0x676
  4013ee:	mov    DWORD PTR [ebp-0x78],eax
  4013f1:	mov    eax,DWORD PTR [ebp-0xc]
  4013f4:	sbb    DWORD PTR ds:0x4285db,0x428663
  4013fe:	xor    eax,esi
  401400:	add    eax,edi
  401402:	mov    DWORD PTR [ebp-0x74],eax
  401405:	lea    eax,[ebp-0x1c]
  401408:	mov    DWORD PTR [ebp-0x70],eax
  40140b:	mov    eax,DWORD PTR [ebp-0x80]
  40140e:	jmp    0x4037cc
  401413:	mov    eax,0x80deee36
  401418:	xchg   BYTE PTR [eax-0x320ea8e8],bh
  40141e:	pop    ebx
  40141f:	sub    DWORD PTR [edi+0x7a7a5c8a],0x7a
  401426:	jp     0x401405
  401428:	pop    edi
  401429:	jp     0x4014a5
  40142b:	and    eax,0x1931272c
  401430:	xor    eax,0x42752f1b
  401435:	imul   esi,DWORD PTR [esi-0x12],0x6d6a6a7f
  40143c:	inc    edx
  40143d:	aad    0xdc
  40143f:	icebp  
  401440:	pusha  
  401441:	dec    eax
  401442:	imul   esi,DWORD PTR [ecx+0x5b],0xffffffa0
  401446:	jo     0x4014b5
  401448:	pop    ecx
  401449:	iret   
  40144a:	pop    ebp
  40144b:	dec    edx
  40144c:	xor    BYTE PTR [edx+edi*8+0x4d678697],cl
  401453:	jg     0x40149c
  401455:	xor    BYTE PTR [esi+0x3bb2b07f],0x2c
  40145c:	push   DWORD PTR [esi-0x24]
  40145f:	cli    
  401460:	arpl   WORD PTR [edi+0x1e],di
  401463:	in     eax,dx
  401464:	cmp    ebp,ecx
  401466:	mov    edx,0xde2397ed
  40146b:	mov    ebp,DWORD PTR [ecx]
  40146d:	mulps  xmm5,XMMWORD PTR [ebx+0x6d07d48a]
  401474:	fst    QWORD PTR [esp+eiz*8]
  401477:	push   cs
  401478:	cli    
  401479:	sbb    BYTE PTR ss:[eax+0xc],cl
  40147d:	imul   ebp,DWORD PTR ss:[eax-0x47],0xffffffaf
  401482:	and    edx,DWORD PTR [ecx+0x15]
  401485:	mov    dh,0xff
  401487:	jmp    0x42c43fd5
  40148c:	enter  0xf95b,0x1a
  401490:	cli    
  401491:	js     0x401444
  401493:	jae    0x401472
  401495:	cwde   
  401496:	pop    edi
  401497:	mov    esi,DWORD PTR [ecx+0x41922417]
  40149d:	add    ebx,DWORD PTR [esi+0xb83823c]
  4014a3:	fisubr DWORD PTR ds:0x43448d62
  4014a9:	fs repz iret 
  4014ac:	mov    ch,BYTE PTR [ecx]
  4014ae:	mov    eax,eax
  4014b0:	(bad)  
  4014b1:	int3   
  4014b2:	mov    BYTE PTR [ecx-0xc],ah
  4014b5:	push   ebp
  4014b6:	bound  ecx,QWORD PTR [esp+ecx*1+0x3e]
  4014ba:	add    eax,DWORD PTR [esi+0x13]
  4014bd:	lods   eax,DWORD PTR ds:[esi]
  4014be:	dec    ebx
  4014bf:	retf   0x40b7
  4014c2:	rcl    BYTE PTR [esi+eiz*2],1
  4014c5:	std    
  4014c6:	bound  esp,QWORD PTR [esi-0x4b]
  4014c9:	stc    
  4014ca:	push   0x1252f8bf
  4014cf:	sar    DWORD PTR [ebp+0x72],0x8d
  4014d3:	test   eax,0x5b4413ae
  4014d8:	sbb    cl,BYTE PTR [ebp-0x79]
  4014db:	call   0x7190bb9f
  4014e0:	imul   esp,DWORD PTR [edi],0xffffff81
  4014e3:	lods   al,BYTE PTR ds:[esi]
  4014e4:	sbb    ch,BYTE PTR [edi+0x555f944c]
  4014ea:	pop    es
  4014eb:	retf   
  4014ec:	dec    ebp
  4014ed:	daa    
  4014ee:	jecxz  0x401541
  4014f0:	aad    0x49
  4014f2:	loop   0x401490
  4014f4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4014f5:	pusha  
  4014f6:	lea    ecx,[ecx-0x54]
  4014f9:	test   al,0xaf
  4014fb:	arpl   WORD PTR [eax+0x2e880ae7],si
  401501:	cdq    
  401502:	sahf   
  401503:	(bad)  
  401504:	hlt    
  401505:	or     al,BYTE PTR [esp+eax*1+0x1f]
  401509:	mov    ah,0xe1
  40150b:	mov    ecx,0xddcd90a9
  401510:	xor    al,0x9d
  401512:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401513:	cmp    al,0x47
  401515:	sub    DWORD PTR [ecx-0x22],ebp
  401518:	jg     0x401562
  40151a:	sub    BYTE PTR ds:0x2e99e169,ah
  401520:	push   ecx
  401521:	xchg   ebx,eax
  401522:	aam    0x4
  401524:	(bad)  
  401525:	iret   
  401526:	add    BYTE PTR [edi+0x58c929ac],cl
  40152c:	or     BYTE PTR [edx-0x2657854f],0xa9
  401533:	sbb    al,0x5d
  401535:	or     esp,esp
  401537:	adc    al,0x1c
  401539:	xchg   esi,eax
  40153a:	sub    esi,DWORD PTR es:[edx+ebx*8+0x1942730]
  401542:	in     eax,0x5f
  401544:	aam    0x22
  401546:	sub    DWORD PTR [edx+0x7f],eax
  401549:	inc    esp
  40154a:	sbb    edx,DWORD PTR [ecx-0x2f4da1e3]
  401550:	in     al,dx
  401551:	nop
  401552:	dec    ebx
  401553:	add    DWORD PTR [esi+0x38bbd9f0],0xffffffd5
  40155a:	sbb    al,0xcc
  40155c:	sub    DWORD PTR [ecx+0x49cbfdd4],0xffffffab
  401563:	jle    0x4015ad
  401565:	cli    
  401566:	pop    ecx
  401567:	ret    0x5a6f
  40156a:	ret    0x4adb
  40156d:	js     0x4015d4
  40156f:	adc    eax,eax
  401571:	not    DWORD PTR [ebp-0x7bdb8abd]
  401577:	mov    ah,0x48
  401579:	arpl   WORD PTR [edi-0x1f824f99],dx
  40157f:	mov    ds:0x37307db4,eax
  401584:	(bad)  
  401585:	fcom   DWORD PTR [ebx+0x2de3f0c9]
  40158b:	adc    ecx,DWORD PTR [edi]
  40158d:	push   ecx
  40158e:	imul   eax,DWORD PTR [esi+0xd],0xffffffcf
  401592:	xchg   ebp,eax
  401593:	pusha  
  401594:	(bad)  
  401595:	sub    al,cl
  401597:	sbb    DWORD PTR [bx+0x7],ecx
  40159b:	test   DWORD PTR [esi+0x4a],edi
  40159e:	push   edx
  40159f:	xchg   DWORD PTR [ebx+ebp*2-0x7b66e72b],eax
  4015a6:	popf   
  4015a7:	mov    ?,edx
  4015a9:	adc    DWORD PTR [edx+ebp*1+0x14a0fe12],0x55
  4015b1:	xchg   ecx,eax
  4015b2:	cld    
  4015b3:	inc    edi
  4015b4:	shl    DWORD PTR [esp+ebx*2+0xc],1
  4015b8:	and    eax,0xe0dc2afb
  4015bd:	fsub   DWORD PTR [ebx]
  4015bf:	add    dl,bl
  4015c1:	pop    ebp
  4015c2:	mov    al,BYTE PTR [ebx-0x303b8a05]
  4015c8:	rcl    DWORD PTR [ebp-0x750d3aef],0xb1
  4015cf:	and    DWORD PTR [edx],ecx
  4015d1:	fldcw  WORD PTR [esi+0x0]
  4015d4:	dec    esp
  4015d5:	pop    ecx
  4015d6:	push   esp
  4015d7:	icebp  
  4015d8:	cmp    al,0x6c
  4015da:	repnz add eax,0x49ec938d
  4015e0:	lods   eax,DWORD PTR ds:[esi]
  4015e1:	xor    BYTE PTR [edx-0x1c],bh
  4015e4:	test   al,bl
  4015e6:	xor    al,0x4a
  4015e8:	dec    ebx
  4015e9:	fwait
  4015ea:	xchg   ebx,eax
  4015eb:	nop
  4015ec:	ffree  st(6)
  4015ee:	(bad)  
  4015ef:	frstor [ebx+edi*1]
  4015f2:	add    al,BYTE PTR [edx]
  4015f4:	scas   eax,DWORD PTR es:[edi]
  4015f5:	es popa 
  4015f7:	cmp    BYTE PTR [ebx],0xf6
  4015fa:	add    al,0x16
  4015fc:	sbb    eax,0xbf44412d
  401601:	xor    BYTE PTR [ecx],ch
  401603:	xchg   esi,eax
  401604:	pop    ebx
  401605:	into   
  401606:	fwait
  401607:	stos   BYTE PTR es:[edi],al
  401608:	dec    edi
  401609:	mov    ds:0x3b4e1522,al
  40160e:	mov    eax,0x7d8b2e38
  401613:	outs   dx,BYTE PTR ds:[esi]
  401614:	lods   eax,DWORD PTR ds:[esi]
  401615:	test   al,0x19
  401617:	jge    0x4015ae
  401619:	pop    ecx
  40161a:	loopne 0x401662
  40161c:	ss jmp 0xb78caf8
  401622:	pop    esi
  401623:	cmp    esp,DWORD PTR [edx]
  401625:	fsub   QWORD PTR [ebx+0x14]
  401628:	dec    edx
  401629:	cmp    ecx,ebx
  40162b:	mov    dl,bh
  40162d:	and    BYTE PTR [ebp+0x8],0x4a
  401631:	adc    BYTE PTR [ebp-0x45abdc29],cl
  401637:	xchg   ecx,eax
  401638:	adc    al,0x38
  40163a:	mov    edi,0x245b0f69
  40163f:	fs stos BYTE PTR es:[edi],al
  401641:	adc    BYTE PTR [ebx-0x2f],dl
  401644:	push   0xe855800f
  401649:	stos   BYTE PTR es:[edi],al
  40164a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40164b:	leave  
  40164c:	adc    BYTE PTR [ecx-0x607a546c],cl
  401652:	jmp    0x401669
  401654:	pop    es
  401655:	leave  
  401656:	sti    
  401657:	add    edi,ebp
  401659:	sahf   
  40165a:	out    0x5a,eax
  40165c:	push   edi
  40165d:	add    eax,0x10111a1
  401662:	repz mov ebp,ds
  401665:	and    ebx,DWORD PTR ss:[edx+eax*1]
  401669:	and    BYTE PTR [ebx-0x6b],ah
  40166c:	adc    bl,BYTE PTR [ebx+0x33]
  40166f:	stc    
  401670:	jns    0x401600
  401672:	ins    DWORD PTR es:[edi],dx
  401673:	stc    
  401674:	mov    ebx,0xb419693a
  401679:	fcomp  QWORD PTR [ecx+0x2b]
  40167c:	push   edx
  40167d:	fistp  DWORD PTR [edi+ecx*8+0x48]
  401681:	xchg   edx,ebp
  401683:	int3   
  401684:	cmp    eax,0xa0fe8429
  401689:	xor    eax,0x98c79363
  40168e:	and    ebp,DWORD PTR [eax+ebx*2]
  401691:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401692:	cdq    
  401693:	pusha  
  401694:	mov    ch,0xac
  401696:	mov    bl,0x38
  401698:	aaa    
  401699:	lds    edi,FWORD PTR [ebx+0x5aada468]
  40169f:	mov    ecx,0x96e3f382
  4016a4:	bound  eax,QWORD PTR [eax+eax*4]
  4016a7:	cmp    ecx,edi
  4016a9:	push   eax
  4016aa:	jecxz  0x40170f
  4016ac:	mov    ss:0x9774a171,eax
  4016b2:	and    al,BYTE PTR [ebx]
  4016b4:	push   cs
  4016b5:	lds    ecx,FWORD PTR [esi-0x22dadc22]
  4016bb:	test   dh,ch
  4016bd:	jb     0x4016c5
  4016bf:	sub    al,0x88
  4016c1:	mov    esi,0x259738b1
  4016c6:	add    edx,DWORD PTR [edi+0x6a354d5b]
  4016cc:	dec    ebp
  4016cd:	leave  
  4016ce:	ss or  al,0x58
  4016d1:	stc    
  4016d2:	iret   
  4016d3:	mov    esp,edx
  4016d5:	pop    ss
  4016d6:	jl     0x40173a
  4016d8:	mov    DWORD PTR [edx+0x1897db38],eax
  4016de:	test   al,0xc6
  4016e0:	push   ebp
  4016e1:	test   al,0xb6
  4016e3:	(bad)  
  4016e5:	fistp  DWORD PTR [edx+0x19]
  4016e8:	jno    0x401754
  4016ea:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4016eb:	lea    eax,[esi+0xa]
  4016ee:	or     BYTE PTR [esi-0x65c489e1],cl
  4016f4:	sub    al,0xb8
  4016f6:	pop    edi
  4016f7:	add    eax,ecx
  4016f9:	cmp    BYTE PTR [ecx],0x4d
  4016fc:	mov    al,ds:0xe837ec3e
  401701:	scas   al,BYTE PTR es:[edi]
  401702:	popf   
  401703:	shl    BYTE PTR [esi-0x34],1
  401706:	pop    edx
  401707:	cld    
  401708:	pop    esi
  401709:	mov    cl,0xc5
  40170b:	js     0x401728
  40170d:	jmp    0x28b94550
  401712:	aam    0x69
  401714:	idiv   BYTE PTR [eax-0xb]
  401717:	dec    esp
  401718:	(bad)  
  401719:	push   ebx
  40171a:	inc    edi
  40171b:	push   eax
  40171c:	int    0x93
  40171e:	lea    eax,ss:[edx-0x43da9029]
  401725:	cmp    bl,al
  401727:	cdq    
  401728:	and    BYTE PTR [ecx-0x30],dl
  40172b:	(bad)  
  40172c:	fistp  QWORD PTR [ebx+0x27]
  40172f:	adc    ecx,DWORD PTR [ebx-0x4e]
  401732:	stos   BYTE PTR es:[edi],al
  401733:	jecxz  0x401789
  401735:	lea    esi,[esi-0x5a4a8d8e]
  40173b:	jne    0x401733
  40173d:	sub    BYTE PTR [edi],dl
  40173f:	mov    ds:0x5785a9e6,eax
  401744:	stos   BYTE PTR es:[edi],al
  401745:	mov    edi,0xe3b49dd6
  40174a:	mov    eax,ds:0xd2e61f6f
  40174f:	add    DWORD PTR [ebp-0x32],0x36
  401753:	imul   ecx,DWORD PTR [edi-0x581d57b4],0xffffffe7
  40175a:	je     0x4016df
  40175c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40175d:	clc    
  40175e:	ret    
  40175f:	dec    ebp
  401760:	test   DWORD PTR [bp+di+0x56],esi
  401764:	outs   dx,DWORD PTR ds:[esi]
  401765:	dec    esi
  401766:	pop    eax
  401767:	stc    
  401768:	mov    bl,0x21
  40176a:	sub    al,0xcf
  40176c:	fcomip st,st(1)
  40176e:	or     al,cl
  401770:	and    al,0xb
  401772:	add    BYTE PTR [edx],bl
  401774:	dec    eax
  401775:	xchg   DWORD PTR ds:0x9f14f1f8,esi
  40177b:	push   eax
  40177c:	fist   DWORD PTR [ebx+eax*2-0x41]
  401780:	jno    0x40171a
  401782:	out    0xc6,eax
  401784:	std    
  401785:	inc    esp
  401786:	mov    ebx,0x2f78c2e0
  40178b:	xor    eax,0x20e599f0
  401790:	test   DWORD PTR [ebx],ecx
  401792:	push   edx
  401793:	lock fldcw WORD PTR [edx-0x47]
  401797:	mov    ds:0x9e4fcab3,eax
  40179c:	test   BYTE PTR [esp+ebp*2-0x6afce3a7],al
  4017a3:	jecxz  0x4017be
  4017a5:	adc    ebx,DWORD PTR [esp+esi*8+0x7d]
  4017a9:	xlat   BYTE PTR ds:[ebx]
  4017aa:	add    eax,0xdd230d41
  4017af:	or     al,0xcd
  4017b1:	int3   
  4017b2:	and    al,0xc5
  4017b4:	outs   dx,DWORD PTR ds:[esi]
  4017b5:	stos   BYTE PTR es:[edi],al
  4017b6:	lock js 0x401820
  4017b9:	scas   eax,DWORD PTR es:[edi]
  4017ba:	push   0xffffffe4
  4017bc:	daa    
  4017bd:	shl    BYTE PTR [edi+0x3e],cl
  4017c0:	inc    esp
  4017c1:	mov    ebx,0xa79a528f
  4017c6:	into   
  4017c7:	dec    esp
  4017c8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4017c9:	inc    ecx
  4017ca:	or     cl,0xe4
  4017cd:	popa   
  4017ce:	or     eax,0x489f9059
  4017d3:	popf   
  4017d4:	cwde   
  4017d5:	adc    BYTE PTR [ebp+0x58],0x7c
  4017d9:	psrad  mm1,QWORD PTR [ecx-0x1f]
  4017dd:	jo     0x4017a6
  4017df:	mov    al,ds:0x6545fba0
  4017e4:	sahf   
  4017e5:	pop    ds
  4017e6:	mov    cl,0x84
  4017e8:	dec    edi
  4017e9:	enter  0xe3d1,0x8c
  4017ed:	mov    eax,DWORD PTR [edx+0x4a]
  4017f0:	push   ebx
  4017f1:	adc    DWORD PTR [ebp+0x1b],ecx
  4017f4:	out    dx,eax
  4017f5:	inc    edi
  4017f6:	pushf  
  4017f7:	(bad)  
  4017f8:	and    DWORD PTR [ecx],edx
  4017fa:	sbb    al,0x2f
  4017fc:	lods   al,BYTE PTR ds:[esi]
  4017fd:	sbb    edi,DWORD PTR [edx-0x4a]
  401800:	cmp    edx,DWORD PTR [ebp+0x7c]
  401803:	add    BYTE PTR [edi-0x7d],ch
  401806:	or     al,BYTE PTR [di+0x486]
  40180b:	arpl   sp,di
  40180d:	push   esp
  40180e:	pop    ebp
  40180f:	xor    cl,BYTE PTR [ecx]
  401811:	xchg   ecx,eax
  401812:	dec    ebp
  401813:	(bad)  
  401814:	loope  0x4017b7
  401816:	or     al,0x82
  401818:	adc    esp,DWORD PTR [esi-0x61]
  40181b:	adc    DWORD PTR [edi+0x4a261c11],ebx
  401821:	jns    0x4017e0
  401823:	pop    es
  401824:	mov    al,ds:0x1a597369
  401829:	out    dx,al
  40182a:	rcl    bl,1
  40182c:	ret    0x9d31
  40182f:	jae    0x40189f
  401831:	imul   esp,DWORD PTR [esi+eiz*2-0x54],0xaaa18170
  401839:	sbb    dl,ah
  40183b:	jge    0x4017f6
  40183d:	je     0x401873
  40183f:	int    0x2b
  401841:	sub    al,0x79
  401843:	mov    esp,0xc543b385
  401848:	lea    edi,[esi-0x6d]
  40184b:	lea    ebp,[ecx-0x7c43cce3]
  401851:	add    al,0xe3
  401853:	ja     0x4018a0
  401855:	(bad)  
  401856:	psrlq  mm6,QWORD PTR [edi-0x3b]
  40185a:	cmp    DWORD PTR [ebp+0x23db67e2],esi
  401860:	mov    ds:0x27142385,al
  401865:	push   ebp
  401866:	into   
  401867:	cmp    ah,BYTE PTR [esi+0x6b979e2]
  40186d:	pop    ecx
  40186e:	fld    DWORD PTR [eax]
  401870:	xchg   ebx,eax
  401871:	mov    ebp,0xfc19f26d
  401876:	sub    ebp,DWORD PTR [edi+0x6306ae31]
  40187c:	sahf   
  40187d:	test   al,0xc9
  40187f:	scas   al,BYTE PTR es:[edi]
  401880:	xchg   BYTE PTR [ebp+eax*1-0x7a057560],al
  401887:	xchg   edi,eax
  401888:	xchg   DWORD PTR [ecx+0x5b],esi
  40188b:	mov    ecx,0xb3096090
  401890:	sbb    al,0x56
  401892:	push   es
  401893:	fidiv  WORD PTR ds:0xbe43edf2
  401899:	mov    DWORD PTR [ebp-0x11eb0155],ecx
  40189f:	inc    ebp
  4018a0:	test   BYTE PTR [edx+eax*8-0x2f],ch
  4018a4:	sahf   
  4018a5:	cmp    eax,0x5e19974f
  4018aa:	xchg   DWORD PTR [eax],edi
  4018ac:	dec    esp
  4018ad:	xchg   esp,eax
  4018ae:	dec    eax
  4018af:	inc    esp
  4018b0:	inc    ebx
  4018b1:	inc    esi
  4018b2:	(bad)  
  4018b3:	push   edx
  4018b4:	inc    ebx
  4018b5:	(bad)  
  4018b7:	stos   BYTE PTR es:[edi],al
  4018b8:	inc    ebp
  4018b9:	dec    DWORD PTR ds:0xdc5ff2d2
  4018bf:	imul   ecx,DWORD PTR [ebp+0x68],0x19ae62a1
  4018c6:	test   al,ch
  4018c8:	loopne 0x4018d3
  4018ca:	addr16 dec ecx
  4018cc:	jg     0x4018dd
  4018ce:	xchg   esp,eax
  4018cf:	xchg   BYTE PTR [edi],cl
  4018d1:	mul    ebp
  4018d3:	loope  0x40193d
  4018d5:	fwait
  4018d6:	ds retf 
  4018d8:	pop    ecx
  4018d9:	add    cl,BYTE PTR [ebx]
  4018db:	or     al,0x6b
  4018dd:	addr16 mov bl,0xb7
  4018e0:	bound  ebx,QWORD PTR [ebp+0x32c98c23]
  4018e6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4018e7:	sub    al,0x10
  4018e9:	push   edi
  4018ea:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4018eb:	fs or  al,0xaa
  4018ee:	jo     0x401944
  4018f0:	ss daa 
  4018f2:	in     al,0x4
  4018f4:	adc    al,0x73
  4018f6:	add    eax,ebp
  4018f8:	mov    ds:0x5de694f7,al
  4018fd:	cli    
  4018fe:	fs push eax
  401900:	or     eax,0x3f759df1
  401905:	dec    esi
  401906:	add    al,0x9d
  401908:	or     eax,0x66449b69
  40190d:	fdivr  st,st(7)
  40190f:	cmp    ebp,DWORD PTR [ebx]
  401911:	outs   dx,DWORD PTR ds:[esi]
  401912:	stc    
  401913:	push   cs
  401914:	ins    DWORD PTR es:[edi],dx
  401915:	push   ebx
  401916:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401917:	sbb    BYTE PTR [edx],0x9a
  40191a:	xor    edx,ebp
  40191c:	add    edx,DWORD PTR [ebx+ecx*1-0x1]
  401920:	mov    al,ds:0x63bb782c
  401925:	sbb    bl,dh
  401927:	jb     0x401927
  401929:	das    
  40192a:	leave  
  40192b:	jp     0x4018de
  40192d:	(bad)  
  40192f:	data16 test al,0xfc
  401932:	scas   al,BYTE PTR es:[edi]
  401933:	pop    esp
  401934:	cld    
  401935:	stos   BYTE PTR es:[edi],al
  401936:	mov    al,dl
  401938:	nop
  401939:	xchg   BYTE PTR [edx],dl
  40193b:	lea    esi,[edx]
  40193d:	sbb    BYTE PTR [edx-0x32fd99e8],dh
  401943:	push   0x9f755f8f
  401948:	sbb    BYTE PTR [edx+ecx*8+0x4b9dd137],bh
  40194f:	imul   ecx,DWORD PTR [esi+0x43],0xffffff8f
  401953:	rcr    BYTE PTR ds:0x34a405d,0x4e
  40195a:	pop    ss
  40195b:	pop    ss
  40195c:	cmp    BYTE PTR [ebx-0xce02b12],bl
  401962:	fcomp  QWORD PTR [eax+esi*4-0x21f0ccee]
  401969:	repz sbb bl,BYTE PTR [edi+0x3b2a0542]
  401970:	pop    eax
  401971:	mov    ebx,0x1726cac3
  401976:	push   esi
  401977:	clc    
  401978:	push   edx
  401979:	pop    es
  40197a:	or     ecx,ecx
  40197c:	dec    BYTE PTR [ebx]
  40197e:	jns    0x4019ff
  401980:	inc    ecx
  401981:	jecxz  0x4019ad
  401983:	jae    0x401958
  401985:	scas   eax,DWORD PTR es:[edi]
  401986:	pop    ss
  401987:	xor    ah,BYTE PTR ds:0xe150347f
  40198d:	add    bl,BYTE PTR [eax]
  40198f:	dec    edi
  401990:	stc    
  401991:	(bad)  
  401992:	jmp    0x40198a
  401994:	push   eax
  401995:	sbb    ebp,ebx
  401997:	sahf   
  401998:	cmp    esp,DWORD PTR ss:[ebx-0x59bcaf7e]
  40199f:	cmp    DWORD PTR [eax+0xbc11b05],0xfc02249b
  4019a9:	imul   ebx,DWORD PTR [eax+0x7f761d23],0xc0128c18
  4019b3:	jge    0x40193a
  4019b5:	cmp    ch,BYTE PTR [ebp+0x4266176f]
  4019bb:	and    eax,DWORD PTR [esi+0x7262309e]
  4019c1:	sbb    ch,BYTE PTR [edx]
  4019c3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4019c4:	arpl   bp,sp
  4019c6:	sub    BYTE PTR [eax+0x4f],bl
  4019c9:	mov    edx,0xdccd312e
  4019ce:	mov    bl,0x7
  4019d0:	sti    
  4019d1:	sar    BYTE PTR [ebx],1
  4019d3:	ins    BYTE PTR es:[edi],dx
  4019d4:	cmp    BYTE PTR [edx-0x3cc7584f],dl
  4019da:	rol    dl,cl
  4019dc:	(bad)  
  4019dd:	in     al,0x57
  4019df:	and    al,0xca
  4019e1:	(bad)  
  4019e3:	or     cl,BYTE PTR [edx+0x48b4c098]
  4019e9:	and    bl,BYTE PTR [eax]
  4019eb:	scas   eax,DWORD PTR es:[edi]
  4019ec:	adc    al,0x9
  4019ee:	push   ss
  4019ef:	lock test al,0x2b
  4019f2:	icebp  
  4019f3:	dec    edx
  4019f4:	sti    
  4019f5:	sahf   
  4019f6:	fstp   DWORD PTR [eax+0x73d8b414]
  4019fc:	mov    ecx,0xf35f99ad
  401a01:	fs into 
  401a03:	imul   DWORD PTR [ebp-0x33]
  401a06:	dec    ecx
  401a07:	test   dl,al
  401a09:	xor    ch,ch
  401a0b:	in     eax,dx
  401a0c:	sbb    edi,ebx
  401a0e:	jae    0x401a82
  401a10:	xchg   edx,eax
  401a11:	cdq    
  401a12:	mov    edi,DWORD PTR [edi+0x79]
  401a15:	nop
  401a16:	jae    0x401a74
  401a18:	mov    dl,0x49
  401a1a:	mov    WORD PTR [ebx-0x3b0186f3],ds
  401a20:	sar    ebp,1
  401a22:	cwde   
  401a23:	sub    eax,0x39e56e55
  401a28:	dec    esp
  401a29:	push   ebp
  401a2a:	test   BYTE PTR [eax+esi*4],ah
  401a2d:	inc    edx
  401a2e:	ja     0x4019b0
  401a30:	push   esp
  401a31:	or     DWORD PTR [ebp+0x6f],eax
  401a34:	(bad)  
  401a36:	adc    al,0x60
  401a38:	ins    BYTE PTR es:[edi],dx
  401a39:	xor    bl,ch
  401a3b:	mov    edx,0x8d629ff1
  401a40:	in     eax,dx
  401a41:	cmc    
  401a42:	add    al,0xa1
  401a44:	adc    ecx,0x386aa8af
  401a4a:	pop    es
  401a4b:	push   ecx
  401a4c:	mov    ecx,0xc4328d2d
  401a51:	or     eax,0xe6763a5f
  401a56:	ret    0xd4f5
  401a59:	addr16 pop ds
  401a5b:	daa    
  401a5c:	inc    ebx
  401a5d:	xchg   edx,eax
  401a5e:	sti    
  401a5f:	mov    ebp,0xca643954
  401a64:	(bad)  
  401a65:	adc    esi,edi
  401a67:	xchg   DWORD PTR [edi-0x70],esi
  401a6a:	add    DWORD PTR [esi-0x3e],ecx
  401a6d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401a6e:	test   edx,ecx
  401a70:	sar    al,1
  401a72:	xchg   edx,eax
  401a73:	cmp    ch,BYTE PTR [edx]
  401a75:	pop    eax
  401a76:	lods   eax,DWORD PTR ds:[esi]
  401a77:	cmc    
  401a78:	aam    0x7
  401a7a:	adc    BYTE PTR [ecx],dl
  401a7c:	in     al,0xbb
  401a7e:	pusha  
  401a7f:	mov    eax,0x5e232ded
  401a84:	inc    esp
  401a85:	or     DWORD PTR [edx],esp
  401a87:	cdq    
  401a88:	jl     0x401a97
  401a8a:	mov    ch,0xd0
  401a8c:	mov    ch,0x9d
  401a8e:	push   ebp
  401a8f:	mov    BYTE PTR [edi-0x2c6c792d],bl
  401a95:	shl    BYTE PTR [ebx-0x77],0x50
  401a99:	or     al,0x25
  401a9b:	cmp    al,0xcb
  401a9d:	ror    al,0x37
  401aa0:	sbb    al,0x85
  401aa2:	jmp    0x401a27
  401aa4:	dec    ebx
  401aa5:	nop
  401aa6:	adc    bh,BYTE PTR [eax-0x26]
  401aa9:	mov    cl,0x98
  401aab:	popa   
  401aac:	es stos BYTE PTR es:[edi],al
  401aae:	cmp    dh,dh
  401ab0:	aaa    
  401ab1:	aam    0x1
  401ab3:	loope  0x401a5f
  401ab5:	or     edi,edx
  401ab7:	xor    eax,0x693afca5
  401abc:	push   esi
  401abd:	test   al,0x6b
  401abf:	jl     0x401ad0
  401ac1:	loope  0x401b12
  401ac3:	test   ecx,edi
  401ac5:	xchg   edi,eax
  401ac6:	push   edx
  401ac7:	into   
  401ac8:	add    eax,0x8a17e332
  401acd:	repz ja 0x401a58
  401ad0:	out    0x9d,eax
  401ad2:	clc    
  401ad3:	into   
  401ad4:	dec    edx
  401ad5:	cmp    edi,eax
  401ad7:	(bad)  
  401ad8:	das    
  401ad9:	xor    bl,BYTE PTR [ebx+eiz*8+0x2a]
  401add:	fild   DWORD PTR [ecx-0x377fa8dd]
  401ae3:	ss aas 
  401ae5:	outs   dx,DWORD PTR ds:[esi]
  401ae6:	aas    
  401ae7:	xchg   ecx,eax
  401ae8:	ret    
  401ae9:	xchg   BYTE PTR [esi+0x33],al
  401aec:	mov    bh,0xe8
  401aee:	dec    ebx
  401aef:	xchg   eax,ecx
  401af1:	adc    al,BYTE PTR [edx-0x7a]
  401af4:	mov    bl,0x3d
  401af6:	and    ebp,DWORD PTR [eax-0x53]
  401af9:	adc    ebx,esp
  401afb:	rol    DWORD PTR [esi],0x26
  401afe:	aaa    
  401aff:	inc    ebp
  401b00:	add    ax,0x781
  401b04:	pop    ds
  401b05:	das    
  401b06:	mov    esi,0xe001dcde
  401b0b:	inc    esp
  401b0c:	hlt    
  401b0d:	ror    BYTE PTR [esi+0x7f],1
  401b10:	in     al,dx
  401b11:	test   ch,cl
  401b13:	cld    
  401b14:	cli    
  401b15:	mov    esi,0xa148cfcc
  401b1a:	div    BYTE PTR [esi]
  401b1c:	stos   BYTE PTR es:[edi],al
  401b1d:	mov    ebp,0x5d0e315b
  401b22:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401b23:	mov    ds:0x269345cf,al
  401b28:	cmp    cl,al
  401b2a:	mov    ds:0xae638827,eax
  401b2f:	stc    
  401b30:	loope  0x401b16
  401b32:	or     esp,eax
  401b34:	in     eax,0xf7
  401b36:	jle    0x401b44
  401b38:	js     0x401b5e
  401b3a:	add    bh,BYTE PTR [edi-0x57]
  401b3d:	mov    ah,0xe4
  401b3f:	push   ss
  401b40:	lock cli 
  401b42:	xchg   esp,eax
  401b43:	pop    es
  401b44:	mov    ch,0xc6
  401b46:	icebp  
  401b47:	neg    ebx
  401b49:	lahf   
  401b4a:	cmp    esi,edx
  401b4c:	shr    DWORD PTR [ebx+0x737f94ef],1
  401b52:	add    eax,0xddb2087f
  401b57:	add    al,0x23
  401b59:	xor    edi,DWORD PTR [ebx+ebp*1]
  401b5c:	aad    0xc7
  401b5e:	xor    dh,BYTE PTR [eax+0x1f]
  401b61:	add    eax,0x5d096f00
  401b66:	test   BYTE PTR [ebx+0x13],al
  401b69:	inc    esi
  401b6a:	inc    ebx
  401b6b:	mov    ds:0x2a0649f2,al
  401b70:	arpl   WORD PTR [edx],bx
  401b72:	int3   
  401b73:	data16 mov ch,bl
  401b76:	popf   
  401b77:	cmp    edx,ebp
  401b79:	and    BYTE PTR [ebx+0x3cee044c],dl
  401b7f:	ins    DWORD PTR es:[edi],dx
  401b80:	lock dec ecx
  401b82:	out    dx,al
  401b83:	push   ecx
  401b84:	and    DWORD PTR [ebx+0x2e],ebx
  401b87:	mov    ebx,0x6101df82
  401b8c:	mov    DWORD PTR [edx-0x1a],eax
  401b8f:	push   es
  401b90:	xor    al,0x20
  401b92:	xchg   esi,eax
  401b93:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401b94:	jp     0x401bd0
  401b96:	ja     0x401bef
  401b98:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401b99:	icebp  
  401b9a:	pop    ebp
  401b9b:	cld    
  401b9c:	(bad)  
  401b9d:	mov    eax,ds:0x7c5895fb
  401ba2:	xchg   esp,eax
  401ba3:	mov    DWORD PTR [esi],esp
  401ba5:	call   DWORD PTR [ebx+edx*8+0x70]
  401ba9:	ins    BYTE PTR es:[edi],dx
  401baa:	retf   
  401bab:	in     al,0x78
  401bad:	(bad)  
  401bae:	daa    
  401baf:	mov    dl,0x8f
  401bb1:	push   0xfea51862
  401bb6:	neg    BYTE PTR [ebx-0x6d]
  401bb9:	push   ss
  401bba:	std    
  401bbb:	mov    bl,0xf7
  401bbd:	or     BYTE PTR [esp+esi*4-0x164689ec],bl
  401bc4:	and    al,0xcd
  401bc6:	push   edx
  401bc7:	scas   eax,DWORD PTR es:[edi]
  401bc8:	mov    BYTE PTR [esi+0x50dc0c44],0xc6
  401bcf:	enter  0x10d7,0x93
  401bd3:	aad    0x6f
  401bd5:	push   cs
  401bd6:	sbb    DWORD PTR [ebp+0x5f],eax
  401bd9:	loop   0x401b95
  401bdb:	mov    edi,0x98d36a8b
  401be0:	jle    0x401c55
  401be2:	das    
  401be3:	imul   edx,esi,0x4219b7f0
  401be9:	push   ss
  401bea:	lods   eax,DWORD PTR ds:[esi]
  401beb:	jmp    0x6fd04464
  401bf0:	rcl    ebp,cl
  401bf2:	push   ebp
  401bf3:	mov    ds:0xd5a52b4c,al
  401bf8:	push   edi
  401bf9:	mov    WORD PTR [ecx-0x52c4ac00],ss
  401bff:	pop    ecx
  401c00:	rol    esi,1
  401c02:	mov    ecx,0x39ba7d84
  401c07:	div    BYTE PTR [ebx+esi*4-0x35]
  401c0b:	xchg   esi,eax
  401c0c:	sahf   
  401c0d:	mov    DWORD PTR [edx],esp
  401c0f:	mov    WORD PTR [ecx-0x4b],ds
  401c12:	mov    cl,0x94
  401c14:	mov    DWORD PTR [esi],edi
  401c16:	dec    esp
  401c17:	iret   
  401c18:	cmp    al,0x3b
  401c1a:	sbb    al,0x39
  401c1c:	ss pop ecx
  401c1e:	jp     0x401c57
  401c20:	gs cdq 
  401c22:	push   cs
  401c23:	and    DWORD PTR [ecx+0x7],eax
  401c26:	mov    ds:0xda9e155c,eax
  401c2b:	fimul  WORD PTR [ebx]
  401c2d:	jb     0x401c11
  401c2f:	arpl   WORD PTR [ebx],ax
  401c31:	lock xor BYTE PTR [edx],cl
  401c34:	mov    ds:0xc8af8cd6,eax
  401c39:	scas   al,BYTE PTR es:[edi]
  401c3a:	call   0x4ae16db1
  401c3f:	jne    0x401c1f
  401c41:	pusha  
  401c42:	push   edi
  401c43:	or     eax,0x7f75c65a
  401c48:	out    dx,eax
  401c49:	daa    
  401c4a:	or     eax,0x3d5873eb
  401c4f:	add    esp,DWORD PTR [ecx+0x4a7fe2b5]
  401c55:	pop    edi
  401c56:	xor    BYTE PTR [edi+ebx*2-0x7feb996b],bh
  401c5d:	fadd   DWORD PTR [edi-0x49186e11]
  401c63:	pop    edi
  401c64:	push   ds
  401c65:	add    DWORD PTR [esi-0x1553c6e2],0x1fa88942
  401c6f:	jmp    0x401c52
  401c71:	or     eax,0xe50b3964
  401c76:	cmp    eax,DWORD PTR [ebx-0x73]
  401c79:	mov    eax,ds:0x9934d3ef
  401c7e:	ja     0x401c12
  401c80:	pop    ecx
  401c81:	mul    BYTE PTR [ebp-0x43a838ef]
  401c87:	jo     0x401c3e
  401c89:	mov    bl,0xba
  401c8b:	scas   eax,DWORD PTR es:[edi]
  401c8c:	mov    gs,WORD PTR [ecx-0x44]
  401c8f:	sub    DWORD PTR [eax+0x1e],ebp
  401c92:	stc    
  401c93:	outs   dx,DWORD PTR ds:[esi]
  401c94:	ja     0x401cfd
  401c96:	rcr    BYTE PTR [ecx+0x24],cl
  401c99:	mov    ecx,0x3a4ff0fb
  401c9e:	push   ecx
  401c9f:	sub    eax,DWORD PTR [eax-0x4cfc64b8]
  401ca5:	ret    0x253e
  401ca8:	pop    ebp
  401ca9:	and    ah,BYTE PTR [eax+0x5e]
  401cac:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401cad:	add    eax,0x1de67cfa
  401cb2:	push   0x9a4574df
  401cb7:	xchg   ebx,eax
  401cb8:	cmp    ebp,DWORD PTR [ebp+0x38364320]
  401cbe:	shl    DWORD PTR [esi-0x37],1
  401cc1:	sub    dl,ch
  401cc3:	inc    ecx
  401cc4:	(bad)  
  401cc5:	(bad)  
  401cc6:	or     ecx,esp
  401cc8:	cmp    dh,BYTE PTR [edi+eax*2-0x64]
  401ccc:	call   0x4bb6d701
  401cd1:	out    dx,al
  401cd2:	pusha  
  401cd3:	mov    al,ds:0xc2537e85
  401cd8:	jge    0x401c9f
  401cda:	jae    0x401c96
  401cdc:	pop    ecx
  401cdd:	popa   
  401cde:	adc    ebx,DWORD PTR [edi+edx*4]
  401ce1:	adc    dh,BYTE PTR [esp+eax*2-0x13]
  401ce5:	lea    edx,[ebp+ecx*1-0x2e8634b9]
  401cec:	(bad)  
  401ced:	push   edi
  401cee:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401cef:	xchg   DWORD PTR [esi],eax
  401cf1:	jle    0x401c74
  401cf3:	mov    al,ds:0xc8053990
  401cf8:	imul   ebp,ebx,0xb3a00e02
  401cfe:	icebp  
  401cff:	loope  0x401c96
  401d01:	(bad)  
  401d02:	dec    esp
  401d03:	push   eax
  401d04:	adc    edi,DWORD PTR [edi-0x5b]
  401d07:	stos   BYTE PTR es:[edi],al
  401d08:	mov    ds:0xe30ebbe6,eax
  401d0d:	jbe    0x401cee
  401d0f:	mov    al,ds:0xb0611668
  401d14:	in     eax,dx
  401d15:	adc    al,0x37
  401d17:	je     0x401d5e
  401d19:	aam    0x33
  401d1b:	jo     0x401cee
  401d1d:	mov    ah,0x84
  401d1f:	adc    al,0x24
  401d22:	dec    eax
  401d23:	rcl    dl,0xee
  401d26:	mov    esi,0xce80038d
  401d2b:	mov    cs,WORD PTR [edx-0x3b02fb09]
  401d31:	loop   0x401dac
  401d33:	out    0x36,eax
  401d35:	fisubr DWORD PTR [edi]
  401d37:	push   edi
  401d38:	cld    
  401d39:	mov    ah,bl
  401d3b:	push   cs
  401d3c:	jne    0x401d16
  401d3e:	push   ebp
  401d3f:	call   0xe535f740
  401d44:	pop    ebx
  401d45:	stc    
  401d46:	xor    al,0x9e
  401d48:	inc    esi
  401d49:	inc    ebx
  401d4a:	mov    DWORD PTR [ecx+0x34],ecx
  401d4d:	adc    ecx,DWORD PTR [eax-0x41025a0a]
  401d53:	cs cld 
  401d55:	(bad)  
  401d56:	loopne 0x401d5c
  401d58:	loop   0x401cf6
  401d5a:	shr    BYTE PTR [esi],cl
  401d5c:	xor    DWORD PTR [esi+eax*1],ecx
  401d5f:	sbb    eax,0x4245be51
  401d64:	and    BYTE PTR [ecx],bh
  401d66:	push   edx
  401d67:	retf   0x81fb
  401d6a:	test   al,0x68
  401d6c:	ret    0xd52b
  401d6f:	mov    dh,0x21
  401d71:	add    BYTE PTR [esi],bh
  401d73:	jl     0x401d45
  401d75:	sahf   
  401d76:	or     ch,0x81
  401d79:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401d7a:	stc    
  401d7b:	add    bh,cl
  401d7d:	jnp    0x3426d90c
  401d83:	js     0x401d76
  401d85:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401d86:	mov    ecx,0x2753b29e
  401d8b:	pop    ebp
  401d8c:	xor    eax,0xff580dea
  401d91:	ret    0xf02e
  401d94:	xchg   edx,eax
  401d95:	test   al,0xfa
  401d97:	inc    ecx
  401d98:	xchg   esi,eax
  401d99:	jmp    0x401db5
  401d9b:	inc    esp
  401d9c:	lea    ecx,ds:0x9a6881ee
  401da2:	imul   ebp
  401da4:	scas   al,BYTE PTR es:[edi]
  401da5:	sub    esi,edi
  401da7:	loopne 0x401d4f
  401da9:	lock sub ebp,DWORD PTR [ecx+0x24]
  401dad:	sbb    dh,BYTE PTR [ecx+0x39]
  401db0:	popa   
  401db1:	mov    bl,BYTE PTR [edx+0x57]
  401db4:	(bad)  [ecx-0x54]
  401db7:	imul   edx,DWORD PTR [esi],0x435b9b8f
  401dbd:	mov    edi,0xec7c5918
  401dc2:	mov    eax,ds:0x27ec584
  401dc7:	cmp    BYTE PTR [esi-0x72],bl
  401dca:	xchg   ebp,eax
  401dcb:	push   eax
  401dcc:	sub    DWORD PTR [ebp-0x3],ecx
  401dcf:	sbb    BYTE PTR [ebx-0x40],ch
  401dd2:	cmc    
  401dd3:	sub    al,0xa9
  401dd5:	sub    BYTE PTR [edi+edx*2],cl
  401dd8:	push   cs
  401dd9:	les    ebx,FWORD PTR [ecx+0x4b]
  401ddc:	push   ebx
  401ddd:	xchg   BYTE PTR ds:0x6b6ca0ba,bl
  401de4:	jnp    0x401e2f
  401de6:	jg     0x401dbe
  401de8:	out    dx,eax
  401de9:	lds    ecx,FWORD PTR ds:[ecx]
  401dec:	test   eax,0x2004a437
  401df1:	ficom  WORD PTR [ebx+0x164a7d7d]
  401df7:	adc    eax,DWORD PTR ds:0x81a750ca
  401dfd:	xor    al,0x82
  401dff:	dec    ecx
  401e00:	retf   0x8277
  401e03:	outs   dx,BYTE PTR ds:[esi]
  401e04:	retf   0x4ce3
  401e07:	and    ecx,0xffffffa2
  401e0a:	les    ebp,FWORD PTR [ecx+0x2e]
  401e0d:	push   0xa7dbd83c
  401e12:	sub    BYTE PTR [ebx],ch
  401e14:	cmp    DWORD PTR [eax],esp
  401e16:	mov    eax,0x61e697c7
  401e1b:	pop    ebp
  401e1c:	jecxz  0x401e46
  401e1e:	mov    gs,WORD PTR [ebp+0x3f]
  401e21:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401e22:	out    dx,eax
  401e23:	mov    ebx,0x5be2343b
  401e28:	dec    edx
  401e29:	loope  0x401ddc
  401e2b:	cmp    al,0x2c
  401e2d:	mov    ah,0x5e
  401e2f:	mov    bh,0xc8
  401e31:	mov    ebp,0x2800a8ea
  401e36:	mov    ds:0x3f28bad5,al
  401e3b:	pop    esp
  401e3c:	rcr    DWORD PTR [eax+0x1b854685],0x85
  401e43:	mov    eax,0x3ddba205
  401e48:	sub    eax,0xc7411ec6
  401e4d:	icebp  
  401e4e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401e4f:	sub    eax,0xca05ce5f
  401e54:	bound  ecx,QWORD PTR [edx-0x7e]
  401e57:	out    dx,eax
  401e58:	scas   al,BYTE PTR es:[edi]
  401e59:	fs out dx,eax
  401e5b:	into   
  401e5c:	aaa    
  401e5d:	cmp    DWORD PTR [ebx-0x4fd71f4f],edi
  401e63:	xchg   esi,eax
  401e64:	sub    BYTE PTR ds:0x44eaceee,dh
  401e6a:	xor    eax,0x23287223
  401e6f:	repz jae 0x401e14
  401e72:	push   ebx
  401e73:	sbb    DWORD PTR [esp+eiz*2],edi
  401e76:	data16 adc al,cl
  401e79:	mov    al,ds:0x36a6acae
  401e7e:	rcr    DWORD PTR [esi+0x5c24504c],1
  401e84:	sar    DWORD PTR ds:0xda9b3f23,1
  401e8a:	ret    0x78e8
  401e8d:	rol    BYTE PTR [edi-0x6],cl
  401e90:	adc    eax,0xca8232ab
  401e95:	out    dx,eax
  401e96:	leave  
  401e97:	xchg   esi,eax
  401e98:	fs in  eax,dx
  401e9a:	jl     0x401ea6
  401e9c:	add    al,0x62
  401e9e:	out    dx,al
  401e9f:	(bad)  
  401ea0:	fld    DWORD PTR [edi+0x3a15b4ee]
  401ea6:	mov    edi,0x4197e3a0
  401eab:	pushf  
  401eac:	inc    edi
  401ead:	cmc    
  401eae:	xchg   esp,eax
  401eaf:	pop    es
  401eb0:	lock push es
  401eb2:	inc    ebx
  401eb3:	mov    ebp,edx
  401eb5:	cmp    cl,BYTE PTR [esi]
  401eb7:	mov    BYTE PTR [edi+edx*8],dl
  401eba:	mov    eax,0x682355ee
  401ebf:	ret    
  401ec0:	daa    
  401ec1:	mov    al,0x5
  401ec3:	add    ebx,esi
  401ec5:	sbb    eax,eax
  401ec7:	jecxz  0x401edb
  401ec9:	pop    edi
  401eca:	retf   0x8295
  401ecd:	adc    ah,cl
  401ecf:	pop    ecx
  401ed0:	fstp   TBYTE PTR [ebx+0x34]
  401ed3:	dec    edx
  401ed4:	push   ds
  401ed5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401ed6:	lods   eax,DWORD PTR ds:[esi]
  401ed7:	sbb    cl,BYTE PTR [ebx+0x70]
  401eda:	add    eax,eax
  401edc:	xor    ebx,DWORD PTR [edi+edi*4]
  401edf:	or     eax,edi
  401ee1:	ins    BYTE PTR es:[edi],dx
  401ee2:	fmul   QWORD PTR [ebx+0x24]
  401ee5:	jmp    0xeb71:0xcca4a60c
  401eec:	cmp    BYTE PTR [esi-0x36],0xb8
  401ef0:	aaa    
  401ef1:	and    esi,DWORD PTR [ebp-0xa]
  401ef4:	xchg   edx,eax
  401ef5:	mov    DWORD PTR [eax],esp
  401ef7:	imul   ebx,DWORD PTR [ecx+0x29c9455b],0x1fef10a1
  401f01:	add    BYTE PTR [esp+edi*1],bl
  401f04:	add    BYTE PTR [esi],al
  401f06:	ja     0x401ea7
  401f08:	ja     0x401eb5
  401f0a:	mov    ebx,0xcc606515
  401f0f:	jecxz  0x401f44
  401f11:	jbe    0x401eab
  401f13:	add    BYTE PTR [ecx],ch
  401f15:	and    dl,bl
  401f17:	jb     0x401eae
  401f19:	in     eax,dx
  401f1a:	push   edx
  401f1b:	(bad)  
  401f1c:	mov    BYTE PTR ds:0x19496b3a,dl
  401f23:	nop
  401f24:	outs   dx,BYTE PTR ds:[esi]
  401f25:	push   0xffffffc7
  401f27:	mov    dl,0x60
  401f29:	dec    ebp
  401f2a:	pop    es
  401f2b:	repnz push eax
  401f2d:	push   0xa100585
  401f32:	xchg   ecx,eax
  401f33:	add    eax,0x3cd281d4
  401f38:	out    dx,eax
  401f39:	div    BYTE PTR [ebx-0x6e57de89]
  401f3f:	mov    WORD PTR gs:[ebx+ebp*2+0x56],?
  401f44:	pushf  
  401f45:	adc    edx,esp
  401f47:	ret    
  401f48:	int3   
  401f49:	cdq    
  401f4a:	mov    WORD PTR [eax],cs
  401f4c:	fist   WORD PTR [eax]
  401f4e:	in     al,0x9e
  401f50:	(bad)
  401f54:	cmc    
  401f55:	pop    ecx
  401f56:	les    esp,FWORD PTR [ebp+ecx*4-0x5550b60e]
  401f5d:	add    BYTE PTR [ebx-0x34],bh
  401f60:	inc    ecx
  401f61:	sbb    eax,0xc1760a88
  401f66:	aam    0x48
  401f68:	mov    al,0x2a
  401f6a:	clc    
  401f6b:	out    dx,al
  401f6c:	bound  edi,QWORD PTR [ecx-0x4f]
  401f6f:	add    BYTE PTR fs:[esp+esi*8],ah
  401f73:	arpl   WORD PTR [esi-0x72f4471b],cx
  401f79:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401f7a:	std    
  401f7b:	stc    
  401f7c:	test   dh,al
  401f7e:	jl     0x401ff9
  401f80:	cld    
  401f81:	mov    dl,0x30
  401f83:	pusha  
  401f84:	test   ebx,ebp
  401f86:	mov    BYTE PTR [ecx-0x7511ced7],0xaf
  401f8d:	push   0x1c
  401f8f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401f90:	jl     0x40200b
  401f92:	outs   dx,BYTE PTR fs:[esi]
  401f94:	and    BYTE PTR [edi-0x40],dh
  401f97:	jg     0x401f69
  401f99:	adc    cl,cl
  401f9b:	inc    esi
  401f9c:	repz jmp 0x62389865
  401fa2:	and    eax,0x2c68a2c
  401fa7:	(bad)
  401faa:	rol    BYTE PTR [eax],0xef
  401fad:	jecxz  0x401f88
  401faf:	pop    ss
  401fb0:	xchg   ebx,eax
  401fb1:	mov    esp,eax
  401fb3:	pop    ebp
  401fb4:	push   ebp
  401fb5:	aas    
  401fb6:	fbstp  TBYTE PTR [edi]
  401fb8:	sbb    eax,0xd6503d2e
  401fbd:	sti    
  401fbe:	xor    bl,BYTE PTR [eax-0x2c3b24d]
  401fc4:	sbb    eax,0xaef4108d
  401fc9:	rol    bh,cl
  401fcb:	dec    ebp
  401fcc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401fcd:	mov    eax,0x35248ce7
  401fd2:	inc    edi
  401fd3:	sub    esi,edi
  401fd5:	scas   al,BYTE PTR es:[edi]
  401fd6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401fd7:	cmp    al,0xcd
  401fd9:	(bad)  
  401fda:	test   BYTE PTR [ebp-0x26f6c748],bh
  401fe0:	cmc    
  401fe1:	arpl   sp,di
  401fe3:	lods   eax,DWORD PTR ds:[esi]
  401fe4:	cmp    BYTE PTR [esi],dh
  401fe6:	jo     0x401fa0
  401fe8:	add    al,0x35
  401fea:	inc    esi
  401feb:	test   BYTE PTR [ebx-0x45],0x2e
  401fef:	or     BYTE PTR [eax],al
  401ff1:	push   ss
  401ff2:	dec    eax
  401ff3:	pop    ss
  401ff4:	mov    al,ds:0x641c9d15
  401ff9:	pop    esi
  401ffa:	or     DWORD PTR [edi+0x13],0x65541713
  402001:	lds    esp,FWORD PTR [eax+ebp*2-0x395522cd]
  402008:	pop    edx
  402009:	adc    eax,0x45777322
  40200e:	aaa    
  40200f:	sub    esp,DWORD PTR [esi]
  402011:	push   0xc3055d4f
  402016:	addr16 or al,0x2
  402019:	ins    BYTE PTR es:[edi],dx
  40201a:	xchg   esi,eax
  40201b:	push   esi
  40201c:	xor    al,BYTE PTR [edi+eax*1+0x44]
  402020:	mov    bl,0xdb
  402022:	push   edx
  402023:	je     0xea185bc4
  402029:	fisub  DWORD PTR [eax+ecx*8-0x4120f9c1]
  402030:	out    dx,al
  402031:	test   BYTE PTR [esp+ebp*1],ch
  402034:	out    0x4b,eax
  402036:	mov    DWORD PTR [ecx],0x978c1f09
  40203c:	mov    edx,0x2aeae975
  402041:	out    dx,al
  402042:	inc    esi
  402043:	fs inc eax
  402045:	rol    cl,0x98
  402048:	les    ebp,FWORD PTR [ecx]
  40204a:	mov    ebx,0xbab596c1
  40204f:	xlat   BYTE PTR ds:[ebx]
  402050:	sbb    ch,dl
  402052:	mov    esp,0x96ead419
  402057:	bnd ret 0xe311
  40205b:	enter  0x4af8,0x1d
  40205f:	cmp    ecx,DWORD PTR [esi+0x20]
  402062:	pop    esp
  402063:	ds xchg esp,eax
  402065:	xchg   edx,eax
  402066:	test   al,0x56
  402068:	pop    ss
  402069:	repnz rol DWORD PTR [edx+0x6471ce62],1
  402070:	and    dl,BYTE PTR [ecx+0x43355e4d]
  402076:	aam    0x22
  402078:	adc    ebp,DWORD PTR [ecx-0x58]
  40207b:	or     bh,BYTE PTR [ebx+0x5f]
  40207e:	popa   
  40207f:	jmp    0x402083
  402081:	lahf   
  402082:	(bad)  
  402083:	push   eax
  402084:	(bad)  
  402086:	sahf   
  402087:	cmp    BYTE PTR [edx],0x68
  40208a:	inc    ebp
  40208b:	and    ebp,esi
  40208d:	mov    DWORD PTR [eax],eax
  40208f:	pop    ss
  402090:	(bad)  
  402091:	sub    al,ah
  402093:	jne    0x402026
  402095:	sub    DWORD PTR ds:0x6c891406,edx
  40209b:	mov    DWORD PTR [ecx],esi
  40209d:	sbb    ah,BYTE PTR [esi*8+0x6b193693]
  4020a4:	loop   0x40208a
  4020a6:	retf   0x7fe1
  4020a9:	xchg   esp,eax
  4020aa:	mov    ecx,0xb13f460c
  4020af:	push   esi
  4020b0:	cmp    DWORD PTR [ecx+0x46],ecx
  4020b3:	out    0xa9,al
  4020b5:	idiv   BYTE PTR [eax+0x3c0f2e78]
  4020bb:	mov    ds:0xc8b22cc3,eax
  4020c0:	dec    eax
  4020c1:	mov    al,ds:0xa0e16bfd
  4020c6:	sti    
  4020c7:	cli    
  4020c8:	push   esp
  4020c9:	inc    esi
  4020ca:	sbb    BYTE PTR [ebp+0x33],dl
  4020cd:	cmp    eax,0x4a219d16
  4020d2:	and    al,0xbe
  4020d4:	addr16 cmc 
  4020d6:	cdq    
  4020d7:	adc    al,0xe8
  4020d9:	xchg   ebx,eax
  4020da:	clc    
  4020db:	pop    ecx
  4020dc:	xor    DWORD PTR [edi+0x1d],esi
  4020df:	cwde   
  4020e0:	jmp    0x32cfa6fd
  4020e5:	push   edi
  4020e6:	xchg   BYTE PTR [eax-0x54],dl
  4020e9:	adc    cl,BYTE PTR [edi+0x6357cc82]
  4020ef:	and    edx,DWORD PTR [ebx-0x66]
  4020f2:	push   0x9d156344
  4020f7:	sub    BYTE PTR [ebp-0x71178920],0x26
  4020fe:	mov    cl,0x15
  402100:	jmp    0x9fef1ea7
  402105:	sub    DWORD PTR ds:0x697923be,edx
  40210b:	jo     0x402180
  40210d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40210e:	loopne 0x40216b
  402110:	gs loope 0x40209f
  402113:	(bad)  
  402114:	mov    esp,0x24976615
  402119:	ja     0x40218f
  40211b:	test   eax,0xf778675f
  402120:	sub    BYTE PTR [ecx],ch
  402122:	stc    
  402123:	retf   
  402124:	or     DWORD PTR [edx-0x28],edx
  402127:	std    
  402128:	aad    0x3f
  40212a:	pop    ss
  40212b:	and    ecx,esi
  40212d:	aaa    
  40212e:	mov    edx,0x1d33f9e8
  402133:	test   al,0xcb
  402135:	sbb    eax,esp
  402137:	ins    BYTE PTR es:[edi],dx
  402138:	cmp    DWORD PTR [esi+0x4c],edx
  40213b:	cmp    al,0xf8
  40213d:	mov    cl,0x71
  40213f:	dec    edi
  402140:	mov    edx,0x8864802b
  402145:	cmp    bl,al
  402147:	pushf  
  402148:	and    BYTE PTR [esi],cl
  40214a:	aas    
  40214b:	mov    dh,al
  40214d:	push   ebp
  40214e:	ja     0x4020de
  402150:	lahf   
  402151:	mov    esi,0x46f75508
  402156:	mov    ah,0x8e
  402158:	mov    al,0xcd
  40215a:	cmp    eax,0xc808b6e4
  40215f:	dec    esp
  402160:	idiv   BYTE PTR [edx-0x22a2755d]
  402166:	add    al,0xff
  402168:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402169:	jnp    0x4021a2
  40216b:	or     BYTE PTR [ebx+0x2f11d9e0],ah
  402171:	add    edi,esi
  402173:	cmp    DWORD PTR [esi],esi
  402175:	cmp    al,0x88
  402177:	lods   al,BYTE PTR ds:[esi]
  402178:	ret    
  402179:	in     eax,0x3f
  40217b:	jle    0x4021e6
  40217d:	dec    edi
  40217e:	xor    al,BYTE PTR [ebp-0xd95dbc5]
  402184:	inc    ebx
  402185:	shr    BYTE PTR [edx+0x36],cl
  402188:	xor    DWORD PTR [edi],ecx
  40218a:	push   0x15
  40218c:	(bad)  
  40218d:	push   esp
  40218e:	mov    cl,0x36
  402190:	mov    ebp,0xe9289c30
  402195:	in     eax,0xa5
  402197:	xchg   edx,eax
  402198:	pop    ds
  402199:	adc    esp,DWORD PTR [edx+0x229d4596]
  40219f:	push   0xc4c43082
  4021a4:	cmp    BYTE PTR ds:0x27325f6d,dl
  4021aa:	and    BYTE PTR [ebp-0x7a],0x82
  4021ae:	js     0x402150
  4021b0:	fidivr DWORD PTR [edx-0x4dc67f62]
  4021b6:	shr    BYTE PTR [edx],cl
  4021b8:	fldenv [ebx]
  4021ba:	cmp    cl,ah
  4021bc:	cmp    al,0x42
  4021be:	jmp    0xf2ad:0xce5027a4
  4021c5:	mov    edi,ebx
  4021c7:	dec    ecx
  4021c8:	leave  
  4021c9:	call   0x3a52622e
  4021ce:	sub    ebx,DWORD PTR [esi]
  4021d0:	xor    eax,0x45e1eaa0
  4021d5:	dec    edi
  4021d6:	call   0x9fa96449
  4021db:	mov    eax,esp
  4021dd:	ss dec esp
  4021df:	ror    DWORD PTR [edx-0x36],1
  4021e2:	repnz das 
  4021e4:	rcl    DWORD PTR [edi],cl
  4021e6:	mov    eax,ds:0x49c88134
  4021eb:	mov    dh,0x8f
  4021ed:	dec    si
  4021ef:	mov    ebx,0xe1b09bc3
  4021f4:	dec    esi
  4021f5:	dec    ebp
  4021f6:	sti    
  4021f7:	dec    esp
  4021f8:	mov    ch,0x8
  4021fa:	jg     0x4021ad
  4021fc:	jae    0x402276
  4021fe:	loopne 0x4021d6
  402200:	push   edi
  402201:	inc    ebx
  402202:	add    BYTE PTR [esp+esi*8],0x87
  402206:	outs   dx,BYTE PTR ds:[esi]
  402207:	lds    esp,FWORD PTR [ebx+0x42]
  40220a:	sub    DWORD PTR [edx],edi
  40220c:	jle    0x4021b2
  40220e:	fsub   DWORD PTR [ecx+esi*1+0x1f]
  402212:	dec    ecx
  402213:	lds    edx,FWORD PTR [esi+eiz*1]
  402216:	mov    eax,gs
  402218:	pop    ds
  402219:	add    BYTE PTR [ebp-0x57],cl
  40221c:	pop    esp
  40221d:	push   es
  40221e:	js     0x40226d
  402220:	jae    0x402214
  402222:	sbb    al,BYTE PTR ds:0xe8b6da3a
  402228:	ret    
  402229:	aaa    
  40222a:	xchg   ecx,eax
  40222b:	adc    dh,cl
  40222d:	pop    edx
  40222e:	jns    0x40228b
  402230:	std    
  402231:	jo     0x4021f8
  402233:	dec    edi
  402234:	dec    edi
  402235:	sub    ch,dh
  402237:	(bad)  
  402238:	jmp    0xd95c:0xb47cd949
  40223f:	frstor [edx+0x7c]
  402242:	jge    0x4021f5
  402244:	jae    0x4022a2
  402246:	push   ss
  402247:	fcmovne st,st(7)
  402249:	mov    ebp,0x32ef74fb
  40224e:	ins    BYTE PTR es:[edi],dx
  40224f:	mov    ah,al
  402251:	push   0xba634f50
  402256:	mov    edx,fs
  402258:	xlat   BYTE PTR ds:[ebx]
  402259:	fcomp  st(4)
  40225b:	imul   esi,DWORD PTR [edx-0x3d730eb],0x5a
  402262:	scas   al,BYTE PTR es:[edi]
  402263:	adc    ebp,DWORD PTR [eax+eax*4-0x7b]
  402267:	repnz xlat BYTE PTR ds:[ebx]
  402269:	hlt    
  40226a:	add    bl,dh
  40226c:	inc    ecx
  40226d:	sbb    DWORD PTR [eax-0x70],0xffffffe2
  402271:	sub    cl,bl
  402273:	dec    eax
  402274:	int    0x6f
  402276:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402277:	cdq    
  402278:	xchg   esp,eax
  402279:	or     bh,al
  40227b:	call   0x31cc:0xbe7abf08
  402282:	sti    
  402283:	mov    edx,DWORD PTR [eax]
  402285:	lea    esp,[edx]
  402287:	inc    edx
  402288:	pop    ebx
  402289:	dec    ebx
  40228a:	repnz sbb esp,esi
  40228d:	pop    ebx
  40228e:	shl    BYTE PTR [edx-0x64],cl
  402291:	(bad)  
  402292:	and    DWORD PTR [eax],esi
  402294:	jp     0x40222a
  402296:	out    dx,al
  402297:	nop
  402298:	mov    ah,BYTE PTR [eax+esi*1+0x37]
  40229c:	xor    eax,0x7d254d84
  4022a1:	mov    ch,0x22
  4022a3:	mov    ebp,ebp
  4022a5:	jl     0x402275
  4022a7:	lea    ecx,ds:0x95b19b2e
  4022ad:	and    al,0xf2
  4022af:	out    0xda,al
  4022b1:	xchg   BYTE PTR [edi],ch
  4022b3:	mov    ebx,0xefed0a58
  4022b8:	lock jge 0x4022cd
  4022bb:	ret    
  4022bc:	push   eax
  4022bd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4022be:	xor    eax,0x7808d3be
  4022c3:	or     BYTE PTR [edi+eax*4],ah
  4022c6:	jo     0x4022ae
  4022c8:	push   edi
  4022c9:	push   edi
  4022ca:	adc    eax,0xead46f4a
  4022cf:	mov    ds:0x1d0e65c8,al
  4022d4:	pop    esi
  4022d5:	popa   
  4022d6:	in     eax,dx
  4022d7:	(bad)  
  4022d8:	shl    DWORD PTR ds:0x774702c7,0x2d
  4022df:	jo     0x40233e
  4022e1:	lahf   
  4022e2:	fild   DWORD PTR ds:0xd23f6ae
  4022e8:	add    BYTE PTR [ebp+0x49],dl
  4022eb:	sub    al,0x20
  4022ed:	out    dx,al
  4022ee:	je     0x4022ec
  4022f0:	repnz fsubr QWORD PTR [esi+0x4e441238]
  4022f7:	xchg   ebx,eax
  4022f8:	add    BYTE PTR [edx],ah
  4022fa:	and    eax,0xc25427e4
  4022ff:	in     eax,dx
  402300:	jb     0x40228e
  402302:	aas    
  402303:	mov    dh,BYTE PTR [ebx]
  402305:	inc    edi
  402306:	inc    BYTE PTR [eax]
  402308:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402309:	(bad)  
  40230b:	retf   0x21f5
  40230e:	sub    DWORD PTR ds:0xcc6b4bc2,esp
  402314:	adc    ch,BYTE PTR [ebp-0x17]
  402317:	adc    al,0x3b
  402319:	test   DWORD PTR [esi-0x29],edi
  40231c:	xchg   esi,eax
  40231d:	adc    ch,al
  40231f:	push   esi
  402320:	out    0x87,al
  402322:	mov    bl,0x92
  402324:	xor    ebp,DWORD PTR [esi-0x66d22988]
  40232a:	(bad)  
  40232b:	and    al,0xb6
  40232d:	sbb    DWORD PTR [ebx+0xf],esp
  402330:	fild   WORD PTR [ebx-0x38703a4b]
  402336:	push   0x24826e7b
  40233b:	jne    0x402303
  40233d:	lock (bad) 
  40233f:	pop    ebp
  402340:	inc    ecx
  402341:	(bad)  
  402342:	rcl    DWORD PTR [ebx+0x20732ae3],1
  402348:	lea    ecx,[eax+eax*1+0x547e1f0c]
  40234f:	push   esp
  402350:	xchg   esp,eax
  402351:	pop    es
  402352:	call   0xb4bd84a5
  402357:	int3   
  402358:	pop    edi
  402359:	pop    esp
  40235a:	fwait
  40235b:	inc    eax
  40235c:	das    
  40235d:	call   0x3841:0xe82b0b4b
  402364:	loope  0x402385
  402366:	pushf  
  402367:	push   esp
  402368:	ror    DWORD PTR [edx+0x297646b3],cl
  40236e:	inc    ecx
  40236f:	sbb    al,0xa2
  402371:	(bad)  
  402372:	call   DWORD PTR [edi+0x1d]
  402375:	mov    esi,0x91339396
  40237a:	mov    dl,0xed
  40237c:	into   
  40237d:	imul   edi,DWORD PTR [esi],0x19e0ab0d
  402383:	add    BYTE PTR [ebx],0x8c
  402386:	push   0xffffff85
  402388:	je     0x402377
  40238a:	outs   dx,BYTE PTR ds:[esi]
  40238b:	gs jo  0x402323
  40238e:	sub    al,0x5c
  402390:	adc    al,0x92
  402392:	xchg   ebp,eax
  402393:	retf   
  402394:	push   ebx
  402395:	inc    ecx
  402396:	out    dx,al
  402397:	ja     0x4023af
  402399:	ret    0x2015
  40239c:	out    0x30,eax
  40239e:	sar    BYTE PTR [ebx],cl
  4023a0:	ds dec eax
  4023a2:	mov    ecx,ebx
  4023a4:	pop    ds
  4023a5:	js     0x40240f
  4023a7:	test   BYTE PTR [edx+0x7],0x3f
  4023ab:	enter  0xb0f6,0x6a
  4023af:	out    dx,al
  4023b0:	mov    ebx,DWORD PTR [ecx-0x33]
  4023b3:	or     al,0x6a
  4023b5:	fsub   DWORD PTR [edi]
  4023b7:	aad    0xd
  4023b9:	mov    ch,0x1d
  4023bb:	iret   
  4023bc:	mov    dl,0xf3
  4023be:	(bad)  
  4023bf:	pop    ecx
  4023c0:	lea    ebp,[ebx-0x2d]
  4023c3:	and    BYTE PTR ds:0xa5cc805e,cl
  4023c9:	pop    eax
  4023ca:	es pop esp
  4023cc:	(bad)  [ecx+0x6f]
  4023cf:	out    0xc,al
  4023d1:	call   0x7056:0x29f3972e
  4023d8:	aas    
  4023d9:	rcr    BYTE PTR [esi+esi*4],0x94
  4023dd:	ins    BYTE PTR es:[edi],dx
  4023de:	add    ecx,ebx
  4023e0:	dec    edi
  4023e1:	cmp    DWORD PTR [edx-0x78dc017d],esp
  4023e7:	div    edx
  4023e9:	mov    eax,0xab08b23c
  4023ee:	sub    DWORD PTR [edi+0x75dacfd2],ebx
  4023f4:	int3   
  4023f5:	outs   dx,DWORD PTR ds:[esi]
  4023f6:	lds    eax,FWORD PTR [ebp-0x715ed1e]
  4023fc:	test   DWORD PTR [ebx+0x6d],0x89c67bde
  402403:	out    dx,al
  402404:	dec    ebx
  402405:	enter  0x2bb4,0x1f
  402409:	fld    DWORD PTR [ebx+0x1ec8f9e1]
  40240f:	mov    al,ds:0xef5ec972
  402414:	or     DWORD PTR [ebx+0x6d84996c],esp
  40241a:	push   esp
  40241b:	xchg   edx,eax
  40241c:	das    
  40241d:	ret    
  40241e:	(bad)  
  402420:	addr16 (bad) 
  402422:	aaa    
  402423:	xor    eax,0x68464e61
  402428:	sub    eax,0xba1ff297
  40242d:	int3   
  40242e:	cmp    ecx,DWORD PTR [ecx+0x45]
  402431:	xor    BYTE PTR [edi],ah
  402433:	ds add al,0x51
  402436:	jp     0x40243d
  402438:	mov    dh,0x9a
  40243a:	fld    QWORD PTR [esi-0x253aebdb]
  402440:	adc    al,0x73
  402442:	adc    ebp,edi
  402444:	or     al,0x82
  402446:	xlat   BYTE PTR ds:[ebx]
  402447:	fimul  WORD PTR [esi+0x7323c4d6]
  40244d:	fidiv  WORD PTR [eax+0x76edeb09]
  402453:	adc    al,0xc8
  402455:	pushf  
  402456:	cld    
  402457:	xchg   edx,eax
  402458:	or     al,0x0
  40245a:	out    dx,al
  40245b:	mov    eax,ds:0x56d6ca7f
  402460:	sti    
  402461:	sub    DWORD PTR [ecx+0x2d],0x6d68e636
  402468:	mov    ebp,0xce94bd24
  40246d:	ja     0x4024e0
  40246f:	data16 scas al,BYTE PTR es:[edi]
  402471:	icebp  
  402472:	rcl    DWORD PTR [eax-0x39],cl
  402475:	fisttp QWORD PTR [ebx+0x20]
  402478:	sub    esp,ebx
  40247a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40247b:	adc    al,0xc1
  40247d:	(bad)  
  40247e:	aam    0xa0
  402480:	or     eax,0x33a78654
  402485:	sbb    DWORD PTR [esp+edi*8+0x67],0x3a
  40248a:	mov    eax,ds:0x2477ec19
  40248f:	lods   eax,DWORD PTR ds:[esi]
  402490:	mov    ?,WORD PTR [ecx]
  402492:	pop    esp
  402493:	xchg   ebp,eax
  402494:	lock adc eax,0xce30664b
  40249a:	inc    edx
  40249b:	add    DWORD PTR [edi+edi*2-0x58],ecx
  40249f:	push   0x4e5b9c72
  4024a4:	adc    BYTE PTR [eax-0x326d7829],cl
  4024aa:	packssdw mm1,mm3
  4024ad:	(bad)  [ebp-0x475accd4]
  4024b3:	ins    DWORD PTR es:[edi],dx
  4024b4:	in     al,dx
  4024b5:	loope  0x40252e
  4024b7:	and    al,ah
  4024b9:	sbb    al,0x4f
  4024bb:	adc    dh,BYTE PTR [ecx+0x50]
  4024be:	cli    
  4024bf:	push   edi
  4024c0:	push   es
  4024c1:	cmp    al,0xa2
  4024c3:	out    dx,al
  4024c4:	and    DWORD PTR [ecx-0x9],ebx
  4024c7:	inc    eax
  4024c8:	into   
  4024c9:	aaa    
  4024ca:	push   ds
  4024cb:	push   ds
  4024cc:	lea    ecx,[ecx+esi*2-0x73]
  4024d0:	es push 0xb6917b38
  4024d6:	pushf  
  4024d7:	inc    esp
  4024d8:	out    dx,eax
  4024d9:	js     0x40245e
  4024db:	sub    ebp,edx
  4024dd:	mov    es,WORD PTR [edx-0x90294dd]
  4024e3:	daa    
  4024e4:	pop    esi
  4024e5:	sub    DWORD PTR [eax],edx
  4024e7:	cmp    BYTE PTR [edi],ah
  4024e9:	jge    0x4024cc
  4024eb:	rcl    ah,1
  4024ed:	fistp  WORD PTR [esi-0x7f66d932]
  4024f3:	sbb    al,0x45
  4024f5:	aam    0x19
  4024f7:	cwde   
  4024f8:	sbb    ch,bh
  4024fa:	retf   
  4024fb:	xchg   esi,eax
  4024fc:	mov    edx,0x3a9f8a80
  402501:	in     eax,0xf1
  402503:	pop    ebx
  402504:	retf   0x4558
  402507:	daa    
  402508:	or     BYTE PTR [ecx+0x43],bh
  40250b:	imul   edx,DWORD PTR ds:0xdfbc1aac,0xffffff8f
  402512:	and    al,0x2e
  402514:	sbb    eax,eax
  402516:	imul   esi,DWORD PTR [edx+eiz*1-0x2c],0x568298f9
  40251e:	push   cs
  40251f:	xchg   esp,eax
  402520:	lods   eax,DWORD PTR ds:[esi]
  402521:	retf   0x2cb1
  402524:	call   0xfc78:0x645116ec
  40252b:	test   cl,dl
  40252d:	mov    ch,0xbc
  40252f:	or     BYTE PTR ds:0x90cedf51,dh
  402535:	jo     0x402546
  402537:	fwait
  402538:	es pushf 
  40253a:	fist   WORD PTR [edx+0x68f33dcc]
  402540:	cld    
  402541:	lods   eax,DWORD PTR ds:[esi]
  402542:	bswap  esp
  402544:	into   
  402545:	jmp    0x402570
  402547:	adc    eax,DWORD PTR [ecx+0x72678101]
  40254d:	fiadd  DWORD PTR [ecx]
  40254f:	rcr    bl,0x46
  402552:	imul   ebx,ebp,0x6b
  402555:	mov    ds,WORD PTR [ebx+0x2a]
  402558:	(bad)  
  402559:	ds push ss
  40255b:	mov    eax,0xd08c5776
  402560:	pop    ss
  402561:	sahf   
  402562:	lea    ebp,[eax+0x6b]
  402565:	and    ebx,0x6a
  402568:	frstor [ebx+0x2b]
  40256b:	leave  
  40256c:	(bad)  [ebp+edx*1+0x57]
  402570:	out    0x83,al
  402572:	(bad)  
  402573:	cmp    esp,esi
  402575:	sub    al,0xcd
  402577:	into   
  402578:	xor    esi,eax
  40257a:	mov    cl,0x39
  40257c:	mov    dl,0xe1
  40257e:	push   ebp
  40257f:	xor    DWORD PTR [ecx-0x53942665],eax
  402585:	outs   dx,DWORD PTR ds:[esi]
  402586:	gs mov bl,0x20
  402589:	xor    dh,dh
  40258b:	sbb    ch,ch
  40258d:	lock shl bh,cl
  402590:	hlt    
  402591:	xchg   ebx,eax
  402592:	mov    dh,0x54
  402594:	add    edi,DWORD PTR [ecx+eiz*1+0x47]
  402598:	mov    al,0xcd
  40259a:	fsubr  QWORD PTR [ecx]
  40259c:	sbb    BYTE PTR [esi-0x42],al
  40259f:	add    BYTE PTR ds:0x451328bf,al
  4025a5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4025a6:	lods   eax,DWORD PTR ds:[esi]
  4025a7:	xchg   DWORD PTR fs:[edx-0x22],ecx
  4025ab:	adc    bh,BYTE PTR [esi]
  4025ad:	(bad)  
  4025ae:	in     eax,dx
  4025af:	jp     0x40260f
  4025b1:	mov    DWORD PTR [eax],esp
  4025b3:	stc    
  4025b4:	mov    eax,ds:0x292f6fb4
  4025b9:	cmp    edx,ebp
  4025bb:	cmp    eax,0xdf818215
  4025c0:	sbb    al,0x3d
  4025c2:	mov    esp,ebx
  4025c4:	dec    esp
  4025c5:	icebp  
  4025c6:	xor    ecx,esp
  4025c8:	lds    esi,FWORD PTR [esi-0x1c]
  4025cb:	cmc    
  4025cc:	or     ebx,DWORD PTR [esi-0x3539585d]
  4025d2:	xor    ah,BYTE PTR [ebx-0x535b4137]
  4025d8:	into   
  4025d9:	and    eax,0x618cd3ff
  4025de:	lock addr16 daa 
  4025e1:	add    BYTE PTR [ebx-0x76],0x24
  4025e5:	(bad)  
  4025e6:	mov    al,0xda
  4025e8:	aam    0x87
  4025ea:	jbe    0x4025ae
  4025ec:	fisttp WORD PTR [eax-0x2aae1db8]
  4025f2:	je     0x4025cc
  4025f4:	enter  0x429b,0xba
  4025f8:	sbb    BYTE PTR [ebp-0x76faea71],0x85
  4025ff:	sbb    DWORD PTR [edx-0x28],edx
  402602:	mov    dh,0x6
  402604:	mov    ah,0x76
  402606:	test   DWORD PTR [eax],edi
  402608:	fiadd  DWORD PTR [eax+0x5b]
  40260b:	dec    edi
  40260c:	pushf  
  40260d:	mov    ecx,0x41bbc682
  402612:	fs jle 0x40262e
  402615:	xor    al,0x9c
  402617:	mov    esi,0x7a6d49d5
  40261c:	outs   dx,BYTE PTR ds:[esi]
  40261d:	jae    0x40267b
  40261f:	xchg   esp,eax
  402620:	inc    ebx
  402621:	pop    edi
  402622:	inc    edx
  402623:	pop    ds
  402624:	cmp    DWORD PTR [esi+0x5d0e95c7],edx
  40262a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40262b:	push   edi
  40262c:	out    0xca,eax
  40262e:	fidivr WORD PTR [eax-0x40]
  402631:	adc    al,0x23
  402633:	push   cs
  402634:	push   edx
  402635:	push   esp
  402636:	out    0xcf,al
  402638:	pop    ebx
  402639:	ins    BYTE PTR es:[edi],dx
  40263a:	out    dx,al
  40263b:	data16 cli 
  40263d:	lods   eax,DWORD PTR ds:[esi]
  40263e:	xor    eax,0xcd91dda1
  402643:	sar    ch,0x1f
  402646:	or     ebx,DWORD PTR [ebx-0x73]
  402649:	ja     0x402631
  40264b:	and    al,0xe6
  40264d:	jo     0x4025db
  40264f:	fnstcw WORD PTR [edi]
  402651:	adc    BYTE PTR [edx-0x6f],dh
  402654:	pop    edx
  402655:	test   al,0x50
  402657:	mov    dh,0xf2
  402659:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40265a:	jne    0x402677
  40265c:	cs xchg ebx,eax
  40265e:	xchg   esp,eax
  40265f:	ret    
  402660:	out    dx,eax
  402661:	cmp    BYTE PTR [edx],0x3b
  402664:	or     al,0x9a
  402666:	imul   ebp,DWORD PTR ds:0xb1881631,0xffffffaa
  40266d:	push   0x36
  40266f:	xchg   esi,eax
  402670:	push   eax
  402671:	aaa    
  402672:	or     bh,dl
  402674:	rol    BYTE PTR [edi-0x10a149c3],cl
  40267a:	jecxz  0x402688
  40267c:	(bad)  
  40267d:	xor    eax,0x4ae2b67
  402682:	dec    edx
  402683:	xchg   ebx,eax
  402684:	cmp    ebx,DWORD PTR [ecx+0x34]
  402687:	lock mov cs,WORD PTR [ecx+0x7c]
  40268b:	lods   al,BYTE PTR ds:[esi]
  40268c:	fsubr  QWORD PTR [edx]
  40268e:	sbb    eax,DWORD PTR [ecx+0x778a6fff]
  402694:	fs ins DWORD PTR es:[edi],dx
  402696:	adc    dh,BYTE PTR [edi+0xa53b5c3]
  40269c:	(bad)  
  40269d:	jle    0x402683
  40269f:	div    BYTE PTR [eax+eiz*2]
  4026a2:	push   ecx
  4026a3:	mov    edx,0x882f1632
  4026a8:	dec    eax
  4026a9:	cmp    ah,dh
  4026ab:	adc    al,0x72
  4026ad:	cmp    ebp,eax
  4026af:	jns    0x40271f
  4026b1:	mov    bl,0xeb
  4026b3:	sub    eax,0x22edc66e
  4026b8:	push   ecx
  4026b9:	ds xor eax,0xdae7d259
  4026bf:	out    dx,al
  4026c0:	xchg   esi,eax
  4026c1:	or     al,0x67
  4026c3:	mov    BYTE PTR [ebx],bl
  4026c5:	mov    bh,0x15
  4026c7:	pop    ecx
  4026c8:	xchg   edx,eax
  4026c9:	fisttp WORD PTR [ebx+0x26]
  4026cc:	jg     0x40266f
  4026ce:	(bad)  
  4026cf:	jno    0x40270f
  4026d1:	push   edx
  4026d2:	jae    0x402664
  4026d4:	pop    ds
  4026d5:	pusha  
  4026d6:	xchg   edx,eax
  4026d7:	gs scas eax,DWORD PTR es:[edi]
  4026d9:	div    DWORD PTR [ebx+0x741921f]
  4026df:	xor    DWORD PTR [ecx],edx
  4026e1:	icebp  
  4026e2:	in     eax,dx
  4026e3:	(bad)  
  4026e4:	sbb    BYTE PTR gs:[ebx-0x1f],bl
  4026e8:	adc    eax,0x50bac38c
  4026ed:	push   ss
  4026ee:	imul   eax,DWORD PTR [edi+eiz*2+0x45],0xdf4a4a76
  4026f6:	jge    0x4026cc
  4026f8:	inc    esp
  4026f9:	dec    ebx
  4026fa:	inc    esi
  4026fb:	shl    BYTE PTR [eax-0x1f],cl
  4026fe:	and    DWORD PTR [edi+ecx*1-0x60],esi
  402702:	adc    al,0x38
  402704:	pop    es
  402705:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402706:	adc    DWORD PTR [ebx+eax*1+0x32679b9f],edi
  40270d:	sbb    eax,0xd6d7987
  402712:	jae    0x4026cb
  402714:	popa   
  402715:	dec    esp
  402716:	or     al,0x31
  402718:	out    dx,eax
  402719:	cmp    edi,DWORD PTR [edx-0x1f]
  40271c:	lods   al,BYTE PTR ds:[esi]
  40271d:	in     al,0x52
  40271f:	repnz nop
  402721:	fild   QWORD PTR [ebp+ebx*4-0x63]
  402725:	fwait
  402726:	aad    0xb3
  402728:	jmp    0x402751
  40272a:	mov    ebx,0x5a15a2f1
  40272f:	push   edx
  402730:	out    0x2c,eax
  402732:	pop    eax
  402733:	mov    WORD PTR [ebx],cs
  402735:	or     BYTE PTR [ebx-0xc],cl
  402738:	sbb    dh,al
  40273a:	push   esp
  40273b:	enter  0xf328,0xa9
  40273f:	nop
  402740:	(bad)  
  402741:	in     al,dx
  402742:	inc    edx
  402743:	xchg   esi,ebp
  402745:	into   
  402746:	shr    dh,0x42
  402749:	sub    cl,cl
  40274b:	std    
  40274c:	call   0x5133db67
  402751:	shl    edx,cl
  402753:	and    dl,BYTE PTR [edi-0x7eb0bcd8]
  402759:	(bad)  
  40275a:	pusha  
  40275b:	cli    
  40275c:	lahf   
  40275d:	add    eax,0xdfb2fbbe
  402762:	shr    BYTE PTR [ebx],cl
  402764:	ror    DWORD PTR [ebx],0xc
  402767:	shl    BYTE PTR [edi-0x1f91a1eb],1
  40276d:	mov    ebx,0x8ca9aa0b
  402772:	pop    ebp
  402773:	imul   ebx,DWORD PTR [edx-0x65202276],0xffffffee
  40277a:	mov    al,ds:0xe4f60352
  40277f:	inc    esi
  402780:	bound  esi,QWORD PTR [ecx-0x795a390d]
  402786:	stos   DWORD PTR es:[edi],eax
  402787:	cmp    al,0xba
  402789:	lds    edx,FWORD PTR [ebx]
  40278b:	sub    edx,0x29
  40278e:	mov    esp,DWORD PTR [eax-0x251dc171]
  402794:	mov    ebp,0x33b6421e
  402799:	sbb    eax,0x3b2ca2c7
  40279e:	sub    bh,ah
  4027a0:	inc    eax
  4027a1:	and    eax,0x33ba3d61
  4027a6:	test   al,0x5b
  4027a8:	adc    DWORD PTR [edx],edx
  4027aa:	mov    edi,0xd0a9c8ca
  4027af:	or     BYTE PTR [ebx],dh
  4027b1:	fwait
  4027b2:	mov    esp,0xb5e94304
  4027b7:	in     al,dx
  4027b8:	jae    0x402743
  4027ba:	cmc    
  4027bb:	hlt    
  4027bc:	adc    DWORD PTR [edi],edi
  4027be:	cmp    eax,0x7ad6fbaf
  4027c3:	sbb    ecx,DWORD PTR [edx-0x26ae74ab]
  4027c9:	(bad)  
  4027ca:	jl     0x4027fa
  4027cc:	gs ins DWORD PTR es:[edi],dx
  4027ce:	test   BYTE PTR [eax-0x3c],ah
  4027d1:	lahf   
  4027d2:	inc    edx
  4027d3:	xchg   DWORD PTR [ebx-0x70],ebx
  4027d6:	lea    ecx,[esi]
  4027d8:	clc    
  4027d9:	inc    edi
  4027da:	xchg   edx,eax
  4027db:	and    al,0x4c
  4027dd:	retf   0xed2a
  4027e0:	xchg   ebx,eax
  4027e1:	and    DWORD PTR [edi-0x1b9f2ef],esi
  4027e7:	dec    esi
  4027e8:	mov    edi,0x2815f80
  4027ed:	pop    ss
  4027ee:	inc    ebp
  4027ef:	jo     0x4027c9
  4027f1:	pop    es
  4027f2:	dec    ebx
  4027f3:	call   0x1128e9a4
  4027f8:	xchg   ebp,eax
  4027f9:	mov    ds:0x9fe12394,eax
  4027fe:	push   0xeb0007ae
  402803:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402804:	pop    ebp
  402805:	mov    esi,edi
  402807:	mov    cl,0x1b
  402809:	lea    esi,[eax-0x3f]
  40280c:	sub    eax,0x2b1c594f
  402811:	in     eax,dx
  402812:	cmp    ah,BYTE PTR [edi+0x169193c]
  402818:	adc    dl,BYTE PTR [ebp+0x30fea03a]
  40281e:	jecxz  0x402815
  402820:	jp     0x402860
  402822:	ret    0x6d54
  402825:	ret    0x39ab
  402828:	sub    DWORD PTR [eax+0x50b90d6c],0xbf12ed03
  402832:	dec    ecx
  402833:	test   BYTE PTR [ecx+0x5f],dl
  402836:	fcom   QWORD PTR [edi+0xd5b5f80]
  40283c:	sti    
  40283d:	adc    eax,0xd2db63c1
  402842:	pop    ds
  402843:	push   es
  402844:	shl    edi,cl
  402846:	js     0x40287d
  402848:	mov    cl,0x76
  40284a:	mov    ah,0x44
  40284c:	sbb    dl,BYTE PTR [ebx+0x7001a44d]
  402852:	lods   eax,DWORD PTR ds:[esi]
  402853:	(bad)  
  402855:	out    dx,al
  402856:	mov    esi,0x89c82727
  40285b:	loopne 0x402888
  40285d:	in     al,dx
  40285e:	cmp    BYTE PTR [ecx-0x7b],cl
  402861:	in     al,dx
  402862:	or     edi,esp
  402864:	add    al,0x77
  402866:	test   al,0xd8
  402868:	pop    ds
  402869:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40286a:	mov    ?,WORD PTR [esi]
  40286c:	stos   DWORD PTR es:[edi],eax
  40286d:	(bad)  
  40286f:	sub    BYTE PTR [edx+0x5c5f532d],cl
  402875:	das    
  402876:	xor    cl,bh
  402878:	fdiv   DWORD PTR ds:0x52db
  40287d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40287e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40287f:	mov    dh,0xb2
  402881:	xor    DWORD PTR [eax-0x7a],0x6379983
  402888:	cmp    ah,al
  40288a:	outs   dx,DWORD PTR ds:[esi]
  40288b:	aam    0xb1
  40288d:	imul   ebp
  40288f:	mov    ebx,0x20d9d40
  402894:	xchg   esi,ebp
  402896:	int3   
  402897:	dec    ebp
  402898:	pusha  
  402899:	cmp    ebx,DWORD PTR [eax-0x73870dee]
  40289f:	scas   eax,DWORD PTR es:[edi]
  4028a0:	mov    edi,0x47f32acc
  4028a5:	int3   
  4028a6:	push   eax
  4028a7:	(bad)  
  4028a8:	iret   
  4028a9:	idiv   BYTE PTR [edx]
  4028ab:	pop    eax
  4028ac:	inc    ebx
  4028ad:	push   ebp
  4028ae:	adc    cl,dh
  4028b0:	aam    0x9b
  4028b2:	out    0xb9,eax
  4028b4:	sub    BYTE PTR [edx-0x3a],cl
  4028b7:	in     al,0xa5
  4028b9:	lock fild WORD PTR [edi+0x50]
  4028bd:	cmp    al,0x3
  4028bf:	test   al,0x64
  4028c1:	into   
  4028c2:	out    dx,al
  4028c3:	lods   al,BYTE PTR ds:[esi]
  4028c4:	add    al,0xfb
  4028c6:	xchg   esi,eax
  4028c7:	outs   dx,BYTE PTR ds:[esi]
  4028c8:	push   0x9ea1a028
  4028cd:	pop    ecx
  4028ce:	mov    ecx,0xe2f379e9
  4028d3:	pop    es
  4028d4:	dec    ebp
  4028d5:	sahf   
  4028d6:	inc    ebx
  4028d7:	sti    
  4028d8:	addr16 or eax,0xeab4edb5
  4028de:	shl    BYTE PTR [esi+eiz*8],1
  4028e1:	cli    
  4028e2:	inc    ebx
  4028e3:	or     DWORD PTR [edi-0x5],edi
  4028e6:	jl     0x402899
  4028e8:	add    al,0xb5
  4028ea:	sub    DWORD PTR [ebx+0x2c],ebp
  4028ed:	ss jns 0x402948
  4028f0:	test   ecx,edi
  4028f2:	cmc    
  4028f3:	inc    ecx
  4028f4:	mov    al,0xa6
  4028f6:	hlt    
  4028f7:	adc    DWORD PTR [edi],ebp
  4028f9:	out    0x93,eax
  4028fb:	icebp  
  4028fc:	mov    es,ebp
  4028fe:	adc    eax,0x588ec4a2
  402903:	mov    edi,0xb9000304
  402908:	jle    0x402955
  40290a:	ja     0x402892
  40290c:	test   BYTE PTR [edi+0xe],bh
  40290f:	jae    0x40295a
  402911:	repnz push ss
  402913:	sub    al,0xc4
  402916:	xlat   BYTE PTR ds:[ebx]
  402917:	inc    edx
  402918:	into   
  402919:	rcl    BYTE PTR cs:[edi],cl
  40291c:	cli    
  40291d:	inc    ebp
  40291e:	and    eax,0xabbaadad
  402923:	ret    0xeb95
  402926:	mov    esp,0xbc84a9fd
  40292b:	enter  0xefe6,0x74
  40292f:	je     0x402947
  402931:	sub    ch,cl
  402933:	lods   eax,DWORD PTR ds:[esi]
  402934:	fisttp QWORD PTR [edx+0x25]
  402937:	mov    DWORD PTR [edi+0x621ca8d1],esp
  40293d:	xor    BYTE PTR [ebx+0x599f78d],ah
  402943:	adc    dh,al
  402945:	sar    BYTE PTR [ebx],1
  402947:	dec    esi
  402948:	inc    ecx
  402949:	xchg   ecx,eax
  40294a:	adc    eax,0x1549df0a
  40294f:	lds    eax,FWORD PTR [ecx]
  402951:	je     0x402924
  402953:	dec    edi
  402954:	xchg   edx,eax
  402955:	mov    bl,0x99
  402957:	cmp    BYTE PTR cs:[edi+0x71698237],ah
  40295e:	scas   al,BYTE PTR es:[edi]
  40295f:	cs mov bl,0x4b
  402962:	aaa    
  402963:	shl    BYTE PTR [edi-0x28],cl
  402966:	jp     0x4029a7
  402968:	cmp    bl,BYTE PTR [ecx-0x16]
  40296b:	je     0x402977
  40296d:	(bad)  
  40296e:	pop    ebp
  40296f:	dec    ebx
  402970:	xor    esi,ecx
  402972:	jno    0x4029cc
  402974:	mov    ch,0x51
  402976:	(bad)  
  402977:	sub    DWORD PTR [ecx+edi*8+0x3a],edx
  40297b:	mov    dl,0xa3
  40297d:	lods   eax,DWORD PTR ds:[esi]
  40297e:	cli    
  40297f:	lds    ecx,FWORD PTR [ebx+0x5fc67f52]
  402985:	inc    esp
  402986:	sub    BYTE PTR [ebx],cl
  402988:	add    eax,0x20484e89
  40298d:	dec    ecx
  40298e:	pusha  
  40298f:	or     ch,BYTE PTR [eiz*8-0x3615c27b]
  402996:	fistp  DWORD PTR [edx+0x2251d0f1]
  40299c:	imul   eax,DWORD PTR [esi+eax*2+0x374debda],0x1
  4029a4:	repz out 0xb7,eax
  4029a7:	or     eax,0x575284dc
  4029ac:	mov    esp,0x22734201
  4029b1:	neg    BYTE PTR ds:0x4535f1d0
  4029b7:	xor    eax,0x4cb45307
  4029bc:	gs pop ebx
  4029be:	sbb    bl,BYTE PTR [ebx]
  4029c0:	outs   dx,DWORD PTR ds:[esi]
  4029c1:	sbb    dl,dl
  4029c3:	mov    al,0x30
  4029c5:	mov    cl,0xea
  4029c7:	dec    esp
  4029c8:	xor    eax,0xaf059a24
  4029cd:	mov    al,ds:0x6d803ca1
  4029d2:	loopne 0x40296f
  4029d4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4029d5:	fnstenv [edx-0x5d]
  4029d8:	stos   DWORD PTR es:[edi],eax
  4029d9:	mov    ebp,0xe3014d04
  4029de:	cdq    
  4029df:	repnz push ebp
  4029e1:	push   ebx
  4029e2:	bound  ebp,QWORD PTR [ebp-0x63]
  4029e5:	loope  0x402a38
  4029e7:	push   ebp
  4029e8:	sub    al,0x96
  4029ea:	out    dx,eax
  4029eb:	jmp    0x9e032f3e
  4029f0:	aad    0xbd
  4029f2:	and    eax,0xa2937529
  4029f7:	ret    
  4029f8:	adc    BYTE PTR [eax+0x39c30af4],ch
  4029fe:	scas   eax,DWORD PTR es:[edi]
  4029ff:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402a00:	dec    edi
  402a01:	jnp    0x4029b4
  402a03:	mov    edx,0xc692367
  402a08:	das    
  402a09:	(bad)  
  402a0a:	jns    0x402a26
  402a0c:	iret   
  402a0d:	mov    al,ds:0x1e2f79aa
  402a12:	and    BYTE PTR [edx],dl
  402a14:	xor    eax,DWORD PTR [edx-0x50]
  402a17:	cmp    BYTE PTR [eax],cl
  402a19:	pop    eax
  402a1a:	or     eax,0x38ef9b49
  402a1f:	mul    edi
  402a21:	mov    ch,0x4d
  402a23:	xchg   edi,eax
  402a24:	pusha  
  402a25:	dec    ebx
  402a26:	out    0xa0,eax
  402a28:	arpl   sp,si
  402a2a:	fsub   QWORD PTR [ecx-0x58]
  402a2d:	sub    ecx,DWORD PTR [ecx+edi*8-0x4b]
  402a31:	mov    eax,0xc81b1104
  402a36:	mov    bl,0xc
  402a38:	test   al,0xd7
  402a3a:	adc    ecx,esi
  402a3c:	rol    DWORD PTR [ebx+0x52],1
  402a3f:	add    dl,BYTE PTR [esi-0x40]
  402a42:	bound  ebp,QWORD PTR ds:0x46f7d558
  402a48:	fcmovne st,st(2)
  402a4a:	fidivr WORD PTR [ebp+0x2c]
  402a4d:	and    al,0xe6
  402a4f:	jbe    0x402aa1
  402a51:	aad    0x21
  402a53:	ins    BYTE PTR es:[edi],dx
  402a54:	lods   al,BYTE PTR ds:[esi]
  402a55:	sub    al,BYTE PTR [ecx-0x4355987f]
  402a5b:	jo     0x4029ff
  402a5d:	dec    esp
  402a5e:	dec    esi
  402a5f:	iret   
  402a60:	shl    BYTE PTR [edi+edx*4+0x40],0xe2
  402a65:	loopne 0x402a35
  402a67:	ins    BYTE PTR es:[edi],dx
  402a68:	sbb    dh,bl
  402a6a:	xlat   BYTE PTR ds:[ebx]
  402a6b:	xor    esp,DWORD PTR [esi+0x30]
  402a6e:	sbb    esi,DWORD PTR [edx-0x2]
  402a71:	xchg   BYTE PTR [ecx+0x6f],bl
  402a74:	jmp    0x402a3c
  402a76:	lea    ecx,[ecx+0x6]
  402a79:	fistp  QWORD PTR [ebp-0x61]
  402a7c:	in     al,dx
  402a7d:	mov    edx,0xdf38e0e1
  402a82:	ins    BYTE PTR es:[edi],dx
  402a83:	add    eax,0xad7a3545
  402a88:	fcos   
  402a8a:	js     0x402a65
  402a8c:	push   cs
  402a8d:	jp     0x402aad
  402a8f:	(bad)  [ebp+0x5f322d2b]
  402a95:	mov    ecx,0x68b9311b
  402a9a:	ins    BYTE PTR es:[edi],dx
  402a9b:	gs mov ebp,0x7d04a4af
  402aa1:	dec    esi
  402aa2:	test   eax,0x522e23d9
  402aa7:	(bad)  
  402aa8:	xchg   ebx,eax
  402aa9:	adc    al,0xc7
  402aab:	jae    0x402acd
  402aad:	loopne 0x402a8c
  402aaf:	pop    edi
  402ab0:	sub    cl,BYTE PTR [eax-0x6e6f95cc]
  402ab6:	jb     0x402ae5
  402ab8:	div    DWORD PTR [eax]
  402aba:	lods   al,BYTE PTR ds:[esi]
  402abb:	int3   
  402abc:	xlat   BYTE PTR ds:[ebx]
  402abd:	dec    eax
  402abe:	and    DWORD PTR ds:0xf46fd60f,ebp
  402ac4:	(bad)  
  402ac5:	js     0x402af4
  402ac7:	pop    ecx
  402ac8:	test   eax,0x6d10acd5
  402acd:	xlat   BYTE PTR ds:[ebx]
  402ace:	test   al,0xf7
  402ad0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402ad1:	repz (bad) 
  402ad3:	imul   DWORD PTR [ebx+0x77b49b82]
  402ad9:	jl     0x402b1e
  402adb:	test   dl,dh
  402add:	add    al,0xb7
  402adf:	retf   
  402ae0:	inc    eax
  402ae1:	mov    dl,0x80
  402ae3:	das    
  402ae4:	mov    ah,0xd2
  402ae6:	call   0x70b04aa3
  402aeb:	loopne 0x402b55
  402aed:	pop    eax
  402aee:	inc    edi
  402aef:	or     DWORD PTR [esi+ebx*2+0x100ed5ce],eax
  402af6:	mov    ds:0x262bcfed,al
  402afb:	stc    
  402afc:	mov    ds:0xd4a08f84,eax
  402b01:	mov    DWORD PTR [edi],ebx
  402b03:	add    DWORD PTR [edi-0x52d055c6],esp
  402b09:	jecxz  0x402aa9
  402b0b:	leave  
  402b0c:	adc    BYTE PTR [ebp+0x46e7f97],cl
  402b12:	mov    al,ds:0xf2fd4463
  402b17:	imul   edx,DWORD PTR [edi-0x55],0x2f
  402b1b:	(bad)  
  402b1c:	mov    cl,0x8f
  402b1e:	repz cmp cl,BYTE PTR [edx]
  402b21:	out    0xfd,al
  402b23:	(bad)  
  402b24:	imul   esi,DWORD PTR [edx+0xf],0xffffffd2
  402b28:	(bad)  [ecx]
  402b2a:	rcl    BYTE PTR [ebx+0x505ecfcb],0xe4
  402b31:	(bad)  
  402b32:	mov    ebx,0xd31881c3
  402b37:	push   edx
  402b38:	jns    0x402b72
  402b3a:	mov    ecx,esi
  402b3c:	inc    edi
  402b3d:	out    dx,al
  402b3e:	mov    bl,0x41
  402b40:	cmp    eax,0x2aa9f383
  402b45:	push   esi
  402b46:	pop    edi
  402b47:	add    BYTE PTR [edi-0x7a],dl
  402b4a:	push   esi
  402b4b:	cmp    ecx,DWORD PTR [eax+0x6]
  402b4e:	jmp    0x402afa
  402b50:	sar    BYTE PTR [ebx+0x79ec80f8],0x64
  402b57:	xchg   ch,dh
  402b59:	push   ebx
  402b5a:	in     eax,0xb6
  402b5c:	jl     0x402b72
  402b5e:	fld    DWORD PTR [ebx]
  402b60:	mov    ah,0xc
  402b62:	mov    ebp,0x20ff6326
  402b67:	ins    BYTE PTR es:[edi],dx
  402b68:	frstor [ecx+ebx*8-0x1f31a9a2]
  402b6f:	lea    ecx,[edi]
  402b71:	fsub   DWORD PTR [edx-0x55]
  402b74:	lds    edx,FWORD PTR [ecx]
  402b76:	xchg   ebp,eax
  402b77:	push   ebx
  402b78:	sti    
  402b79:	inc    BYTE PTR [esi-0x221fa0c1]
  402b7f:	push   esp
  402b80:	fld    QWORD PTR [edi+esi*1-0x40]
  402b84:	jnp    0x402b1a
  402b86:	sub    al,0xd4
  402b88:	mov    ecx,0xd36bd70d
  402b8d:	rcr    BYTE PTR [ecx-0x1e71678e],1
  402b93:	dec    ecx
  402b94:	mov    esi,0xda494d41
  402b99:	hlt    
  402b9a:	push   ss
  402b9b:	out    0xea,al
  402b9d:	xchg   ebx,eax
  402b9e:	cmp    BYTE PTR [ecx+ebx*4],dh
  402ba1:	push   cs
  402ba2:	adc    ecx,DWORD PTR [esi-0x49c60320]
  402ba8:	or     al,BYTE PTR [ebx-0x2a36ec6d]
  402bae:	add    ah,0x5b
  402bb1:	stc    
  402bb2:	repnz add cl,BYTE PTR [edi+0x38]
  402bb6:	ret    0x7dde
  402bb9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402bba:	pop    ebx
  402bbb:	fwait
  402bbc:	push   ebp
  402bbd:	and    edi,DWORD PTR [edx]
  402bbf:	das    
  402bc0:	sub    edi,edx
  402bc2:	leave  
  402bc3:	pop    esi
  402bc4:	pop    eax
  402bc5:	icebp  
  402bc6:	add    al,0x35
  402bc8:	scas   al,BYTE PTR es:[edi]
  402bc9:	pushf  
  402bca:	and    DWORD PTR [edx-0x1b75ae34],esi
  402bd0:	jae    0x402b78
  402bd2:	xlat   BYTE PTR ds:[ebx]
  402bd3:	pop    edx
  402bd4:	and    esp,DWORD PTR [edi]
  402bd6:	repz ret 0xe3df
  402bda:	push   esp
  402bdb:	push   ebp
  402bdc:	mov    ch,0xd8
  402bde:	jb     0x402bca
  402be0:	mov    al,ds:0xfbfffe4d
  402be5:	loop   0x402c64
  402be7:	xor    bh,BYTE PTR [ebx]
  402be9:	icebp  
  402bea:	dec    esi
  402beb:	aas    
  402bec:	sbb    ebx,DWORD PTR [ebx-0x5d]
  402bef:	adc    eax,0xea28075e
  402bf4:	mov    cl,BYTE PTR cs:[eax-0x3e996da6]
  402bfb:	jmp    0x402bf6
  402bfd:	sahf   
  402bfe:	into   
  402bff:	sub    esi,DWORD PTR [edx+0x3a]
  402c02:	fmul   st,st(4)
  402c04:	sbb    BYTE PTR [ebp-0x791af146],bl
  402c0a:	(bad)  
  402c0b:	sub    ah,dh
  402c0d:	shl    BYTE PTR [ecx],1
  402c0f:	pop    esi
  402c10:	xor    al,0x41
  402c12:	xchg   esp,eax
  402c13:	push   0x58
  402c15:	jmp    0x402c41
  402c17:	push   esi
  402c18:	add    BYTE PTR [edx-0x1d],dh
  402c1b:	or     ebx,DWORD PTR [esi+0x3a]
  402c1e:	and    al,0x40
  402c20:	imul   dh
  402c22:	jmp    0x402ba9
  402c24:	adc    al,BYTE PTR [edx+esi*8+0x49]
  402c28:	sub    dh,ah
  402c2a:	xor    DWORD PTR [esi+0x78],edi
  402c2d:	and    ah,BYTE PTR [ebx+0x7aca1bd6]
  402c33:	jne    0x402c2a
  402c35:	arpl   WORD PTR [edx-0x445d0e48],ax
  402c3b:	mov    al,ds:0xd0b2d69
  402c40:	mov    ch,ch
  402c42:	icebp  
  402c43:	sub    BYTE PTR [ebx+0x7fb85f88],ch
  402c49:	mov    DWORD PTR [eax+0x55007ad7],ecx
  402c4f:	gs in  eax,0x9c
  402c52:	adc    esp,0x676872b4
  402c58:	adc    BYTE PTR [ebx],ch
  402c5a:	aas    
  402c5b:	sub    BYTE PTR [esi-0x62],bl
  402c5e:	cmp    BYTE PTR [eax-0x55],al
  402c61:	and    esp,DWORD PTR [ebp-0x240edc2]
  402c67:	scas   al,BYTE PTR es:[edi]
  402c68:	pusha  
  402c69:	mov    esp,edi
  402c6b:	add    BYTE PTR [edi+0x3e6fd112],al
  402c71:	es into 
  402c73:	fwait
  402c74:	push   esi
  402c75:	add    BYTE PTR ds:0xc6d32357,0x8f
  402c7c:	inc    edi
  402c7d:	push   ebp
  402c7e:	inc    eax
  402c7f:	jmp    0x62e4a3ca
  402c84:	xor    ah,dl
  402c86:	pop    edi
  402c87:	les    edi,FWORD PTR [edi]
  402c89:	sar    eax,0xa
  402c8c:	jmp    0xf4ea:0xd85b8a4b
  402c93:	fucomi st,st(1)
  402c95:	sub    edi,DWORD PTR [edi-0x42]
  402c98:	outs   dx,BYTE PTR ds:[esi]
  402c99:	jns    0x402c97
  402c9b:	neg    BYTE PTR [eax-0x55]
  402c9e:	xor    DWORD PTR [ecx-0x3612a4fb],edi
  402ca4:	inc    edx
  402ca5:	ret    
  402ca6:	inc    ebp
  402ca7:	mov    esi,0x7a4d0160
  402cac:	xor    eax,0xa38aacfc
  402cb1:	rcr    BYTE PTR [eax],1
  402cb3:	int    0x74
  402cb5:	aas    
  402cb6:	mov    edi,0xb6b7d6df
  402cbb:	jmp    0xde99:0x329d8c80
  402cc2:	popa   
  402cc3:	mov    eax,ds:0x5412ede2
  402cc8:	fmul   QWORD PTR [eax+0x1f]
  402ccb:	icebp  
  402ccc:	out    0xaf,al
  402cce:	inc    esp
  402ccf:	imul   esi,ebp,0x9016a627
  402cd5:	cmp    DWORD PTR [ecx],ecx
  402cd7:	and    eax,0x474d7885
  402cdc:	popa   
  402cdd:	xor    dl,BYTE PTR [edx+edi*1-0x78]
  402ce1:	repz int3 
  402ce3:	pop    edi
  402ce4:	fisttp DWORD PTR [ecx-0x14]
  402ce7:	pop    ecx
  402ce8:	jmp    0x402cce
  402cea:	pop    esi
  402ceb:	ret    
  402cec:	push   ebp
  402ced:	shr    DWORD PTR [ebx],cl
  402cef:	add    BYTE PTR [eax-0x4cb6e213],al
  402cf5:	inc    eax
  402cf6:	dec    esi
  402cf7:	not    BYTE PTR [eax]
  402cf9:	or     ebx,edi
  402cfb:	or     BYTE PTR [edi+0x35c36b1c],dl
  402d01:	and    bh,BYTE PTR [ecx-0x7edc0aec]
  402d07:	xchg   BYTE PTR [edi-0x4f],ch
  402d0a:	cli    
  402d0b:	sub    DWORD PTR [edi-0x5cd3af14],ebp
  402d11:	dec    ecx
  402d12:	(bad)  
  402d13:	es out 0x1,eax
  402d16:	jnp    0x402c9d
  402d18:	jle    0x402d32
  402d1a:	data16 and al,0xc
  402d1d:	ds clc 
  402d1f:	xor    al,0x6d
  402d21:	and    eax,0xf9538db2
  402d26:	cld    
  402d27:	pop    eax
  402d28:	les    eax,FWORD PTR [ebx-0x73baf6f6]
  402d2e:	mov    bl,0x4d
  402d30:	sbb    ecx,DWORD PTR gs:[esi]
  402d33:	imul   esi,DWORD PTR [esi-0x33],0x7d6ed767
  402d3a:	fistp  QWORD PTR [edx-0x5c98a29d]
  402d40:	scas   eax,DWORD PTR es:[edi]
  402d41:	mov    ds:0x420b09dc,eax
  402d46:	jbe    0x402cdb
  402d48:	outs   dx,BYTE PTR ds:[esi]
  402d49:	xor    ah,BYTE PTR [edi-0x4d2b4c48]
  402d4f:	mov    dl,0xaa
  402d51:	mov    ch,0xdc
  402d53:	inc    esi
  402d54:	jge    0x402d69
  402d56:	leave  
  402d57:	and    eax,DWORD PTR [ecx+0x75]
  402d5a:	push   esi
  402d5b:	stos   DWORD PTR es:[edi],eax
  402d5c:	mov    edi,0x8e83b141
  402d61:	pop    ecx
  402d62:	jno    0x402d9f
  402d64:	push   0x41d3b065
  402d69:	stos   BYTE PTR es:[edi],al
  402d6a:	mulps  xmm3,XMMWORD PTR [edi+0x72]
  402d6e:	xchg   edi,eax
  402d6f:	jnp    0x402da6
  402d71:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402d72:	enter  0xe79e,0x3
  402d76:	in     al,dx
  402d77:	shl    DWORD PTR [ecx+0x6c],0x91
  402d7b:	push   esi
  402d7c:	jp     0x402dcb
  402d7e:	hlt    
  402d7f:	mov    bh,0xe3
  402d81:	jle    0x402d7f
  402d83:	dec    ebx
  402d84:	push   ecx
  402d85:	cmc    
  402d86:	pushf  
  402d87:	adc    al,0x2d
  402d89:	mov    BYTE PTR [esi],ah
  402d8b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402d8c:	fcomip st,st(4)
  402d8e:	jmp    0x402d3b
  402d90:	jb     0x402e10
  402d92:	xchg   esp,eax
  402d93:	je     0x402d93
  402d95:	cmp    eax,0x1b9aeafe
  402d9a:	and    ebx,ebp
  402d9c:	push   esp
  402d9d:	mov    ebx,ebx
  402d9f:	and    al,0x6b
  402da1:	addr16 jae 0x402dc3
  402da4:	xor    al,0x56
  402da6:	dec    eax
  402da7:	lahf   
  402da8:	xchg   esp,edx
  402daa:	xchg   ebx,eax
  402dab:	addr16 out 0x4f,al
  402dae:	xchg   edx,eax
  402daf:	sbb    al,0x92
  402db1:	dec    esp
  402db2:	mov    edi,0x96a6d775
  402db7:	(bad)  
  402db8:	nop
  402db9:	fcomp  QWORD PTR [eax+0x7fab997c]
  402dbf:	fwait
  402dc0:	dec    esp
  402dc1:	mov    ebx,0xb1d91540
  402dc6:	cld    
  402dc7:	call   0x520a:0x428fa295
  402dce:	mov    eax,0x4a1b363c
  402dd3:	retf   0xb481
  402dd6:	out    0x7f,eax
  402dd8:	mov    ecx,DWORD PTR [edx+0x4cbd8db2]
  402dde:	in     eax,dx
  402ddf:	dec    esi
  402de0:	popf   
  402de1:	pop    eax
  402de2:	push   0x525acf16
  402de7:	and    ah,BYTE PTR [ebx-0x577178f0]
  402ded:	imul   edi,DWORD PTR [eax],0x28b3f558
  402df3:	push   edi
  402df4:	dec    esp
  402df5:	cdq    
  402df6:	xchg   edi,eax
  402df7:	xor    esp,esp
  402df9:	mov    ch,0xe9
  402dfb:	adc    ch,BYTE PTR [edi+0xf]
  402dfe:	mov    es,edx
  402e00:	mov    cl,0xa3
  402e02:	add    bp,sp
  402e05:	xchg   DWORD PTR [ecx+0x27],esi
  402e08:	cmp    DWORD PTR [ebp+0x73],esi
  402e0b:	scas   eax,DWORD PTR es:[edi]
  402e0c:	mov    ah,0x40
  402e0e:	xor    BYTE PTR [esi],dh
  402e10:	jo     0x402e32
  402e12:	jle    0x402dfa
  402e14:	dec    esi
  402e15:	fisub  DWORD PTR [ecx+0x2f]
  402e18:	dec    ebp
  402e19:	jle    0x402e3c
  402e1b:	jo     0x402e2e
  402e1d:	sub    DWORD PTR [edx+eiz*4-0x2391ead0],ecx
  402e24:	scas   al,BYTE PTR es:[edi]
  402e25:	push   esi
  402e26:	or     eax,0x7d92b1ca
  402e2b:	push   ebp
  402e2c:	push   esp
  402e2d:	in     eax,dx
  402e2e:	ret    
  402e2f:	pop    ecx
  402e30:	call   0xb5fb:0x4415c623
  402e37:	enter  0x928f,0xab
  402e3b:	data16 shl BYTE PTR [ebp+0x67],cl
  402e3f:	sub    al,0x16
  402e41:	push   ds
  402e42:	and    ch,ch
  402e44:	cmp    edi,esi
  402e46:	mov    bl,0xc
  402e48:	adc    bl,BYTE PTR [di]
  402e4b:	inc    ebp
  402e4c:	sbb    BYTE PTR [edx],0xb1
  402e4f:	loop   0x402e77
  402e51:	js     0x402e38
  402e53:	lds    edx,FWORD PTR [ebp-0x16]
  402e56:	inc    edi
  402e57:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402e58:	sub    eax,0x6f969666
  402e5d:	xchg   edx,eax
  402e5e:	add    BYTE PTR [ebp-0x797b694],ch
  402e64:	dec    esi
  402e65:	xchg   edi,eax
  402e66:	pop    ds
  402e67:	add    al,0x11
  402e69:	in     al,0x60
  402e6b:	imul   DWORD PTR [ebp-0x25]
  402e6e:	jb     0x402e30
  402e70:	xor    ebx,edi
  402e72:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402e73:	fadd   st(3),st
  402e75:	add    eax,esi
  402e77:	lahf   
  402e78:	ror    DWORD PTR [ebp-0x22ead3b9],0x17
  402e7f:	push   ss
  402e80:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402e81:	mov    ebp,0xba13c652
  402e86:	test   ebx,0xcab90de2
  402e8c:	es xor esi,0x20
  402e90:	shl    BYTE PTR [eax+0x7],cl
  402e93:	inc    edx
  402e94:	popf   
  402e95:	rcl    DWORD PTR [ebp-0x1e],0xe1
  402e99:	(bad)  
  402e9b:	inc    ebx
  402e9c:	lods   eax,DWORD PTR ds:[esi]
  402e9d:	lds    ax,DWORD PTR [ebx]
  402ea0:	loopne 0x402ef6
  402ea2:	(bad)  
  402ea3:	cmp    eax,0x19641c70
  402ea8:	arpl   WORD PTR [ebp+0x3],bx
  402eab:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402eac:	sbb    al,0x56
  402eae:	push   ss
  402eaf:	mov    ebx,0xd188edbe
  402eb4:	aas    
  402eb5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402eb6:	mov    al,ds:0x79588fbb
  402ebb:	jg     0x402ead
  402ebd:	or     eax,0x1017a69c
  402ec2:	or     eax,0xa695dea7
  402ec7:	jp     0x402f2a
  402ec9:	iret   
  402eca:	loopne 0x402e9a
  402ecc:	pushf  
  402ecd:	in     eax,dx
  402ece:	push   ebp
  402ecf:	or     dh,ch
  402ed1:	lds    ebp,FWORD PTR [edi]
  402ed3:	cwde   
  402ed4:	(bad)  
  402ed5:	inc    ebp
  402ed6:	or     BYTE PTR [esi-0x3e],0xc3
  402eda:	xchg   ebx,eax
  402edb:	test   eax,0x99267e2e
  402ee0:	mov    ah,0x14
  402ee2:	and    cl,BYTE PTR [edx-0x3e]
  402ee5:	les    esi,FWORD PTR [edx+ecx*2]
  402ee8:	pusha  
  402ee9:	(bad)  
  402eea:	in     al,0x9d
  402eec:	test   eax,0xa7f31ad8
  402ef1:	loopne 0x402f43
  402ef3:	sub    DWORD PTR [eax],esp
  402ef5:	mov    ebx,0xab62a371
  402efa:	dec    edx
  402efb:	(bad)  
  402efc:	pop    edi
  402efd:	jp     0x402f13
  402eff:	xlat   BYTE PTR ds:[ebx]
  402f00:	mov    ah,0xd4
  402f02:	push   ebp
  402f03:	push   ebp
  402f04:	xchg   esi,eax
  402f05:	cmp    ebx,edx
  402f07:	sar    edi,0x26
  402f0a:	and    DWORD PTR [eax-0x4a],0xb97e4be8
  402f11:	int    0x2
  402f13:	pop    es
  402f14:	(bad)  
  402f15:	push   eax
  402f16:	neg    BYTE PTR ds:0x43822665
  402f1c:	out    dx,al
  402f1d:	cmp    eax,0x5c5298af
  402f22:	nop
  402f23:	lods   al,BYTE PTR ds:[esi]
  402f24:	aas    
  402f25:	add    al,0xde
  402f27:	xor    al,0x70
  402f29:	hlt    
  402f2a:	pop    esp
  402f2b:	push   ecx
  402f2c:	pop    esi
  402f2d:	gs dec eax
  402f2f:	in     al,dx
  402f30:	test   DWORD PTR [ecx],0xa34e4594
  402f36:	mov    ah,0xc8
  402f38:	mov    ebp,0x65ddd9c7
  402f3d:	jmp    0x402f4e
  402f3f:	mov    al,ds:0x4264bc5e
  402f44:	push   edi
  402f45:	fidiv  WORD PTR [ebx+0x49]
  402f48:	dec    ebp
  402f49:	pushf  
  402f4a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402f4b:	les    eax,FWORD PTR [esi]
  402f4d:	xchg   ebx,eax
  402f4e:	(bad)  
  402f4f:	and    BYTE PTR [eax+0x19c2e3d6],dl
  402f55:	jle    0x402fc6
  402f57:	fimul  DWORD PTR [edi-0x6d]
  402f5a:	imul   edi,ecx,0xd9b25433
  402f60:	sub    edi,DWORD PTR [ebx+ecx*1]
  402f63:	mov    esp,0xef735f61
  402f68:	fistp  DWORD PTR [esi+0x64f43629]
  402f6e:	mov    dh,ch
  402f70:	inc    edx
  402f71:	rcl    DWORD PTR ds:0xbbc40a3b,1
  402f77:	mov    BYTE PTR [edx-0x7a970e37],dl
  402f7d:	push   esp
  402f7e:	stc    
  402f7f:	rcl    ah,1
  402f81:	fcomp  DWORD PTR [edi+0x440c6eec]
  402f87:	clc    
  402f88:	mov    ebp,0x5f2e2471
  402f8d:	test   BYTE PTR [ecx+0xf6abfb],0x3
  402f94:	pop    ecx
  402f95:	sahf   
  402f96:	mov    esp,0x57510060
  402f9b:	ds jnp 0x402ff0
  402f9e:	(bad)  
  402f9f:	stc    
  402fa0:	dec    eax
  402fa1:	sbb    edi,esi
  402fa3:	mov    ebx,0x488f164
  402fa8:	mov    ecx,0x6a215047
  402fad:	sub    al,0x47
  402faf:	outs   dx,BYTE PTR ds:[esi]
  402fb0:	das    
  402fb1:	shl    DWORD PTR [esi-0x3bef4734],1
  402fb7:	imul   esp,DWORD PTR [ebp-0xc],0x3f9a5ee3
  402fbe:	pop    es
  402fbf:	push   cs
  402fc0:	es inc esp
  402fc2:	and    al,0x71
  402fc4:	pop    ecx
  402fc5:	mov    WORD PTR [esi+0x39f99c48],?
  402fcb:	xchg   DWORD PTR [edi+ebp*2-0x70],edx
  402fcf:	hlt    
  402fd0:	lods   al,BYTE PTR gs:[si]
  402fd3:	pop    es
  402fd4:	lds    ebp,FWORD PTR [ebx]
  402fd6:	(bad)  
  402fd7:	inc    esp
  402fd8:	retf   
  402fd9:	ficom  WORD PTR [edx-0x61d48205]
  402fdf:	imul   ebp,DWORD PTR [edx+0x22b7c4ba],0x31b346af
  402fe9:	or     BYTE PTR ds:0xb567d227,ch
  402fef:	pop    ds
  402ff0:	inc    ebp
  402ff1:	inc    edx
  402ff2:	adc    DWORD PTR [ebx+0x290c99b3],ebx
  402ff8:	fnstenv [eax+edi*4-0x6c]
  402ffc:	sub    BYTE PTR [edi+0x2e],0x79
  403000:	jge    0x402fa2
  403002:	data16 fidivr WORD PTR [edi+0x57ffc2f1]
  403009:	and    DWORD PTR fs:[edi+0x398a8ccf],0xffffffd2
  403011:	push   cs
  403012:	lods   al,BYTE PTR ds:[esi]
  403013:	stos   DWORD PTR es:[edi],eax
  403014:	outs   dx,BYTE PTR ds:[esi]
  403015:	xchg   ebp,eax
  403016:	outs   dx,DWORD PTR ds:[esi]
  403017:	ret    0x4d81
  40301a:	inc    edx
  40301b:	cdq    
  40301c:	sub    ebx,DWORD PTR ds:0x49400122
  403022:	lahf   
  403023:	sti    
  403024:	sar    DWORD PTR [edx+0x435869c3],cl
  40302a:	call   0x8eb2c974
  40302f:	inc    eax
  403030:	nop
  403031:	loopne 0x40301a
  403033:	cs xchg esp,eax
  403035:	fs loopne 0x403099
  403038:	gs leave 
  40303a:	int3   
  40303b:	test   ah,cl
  40303d:	loope  0x403029
  40303f:	int3   
  403040:	loopne 0x403036
  403042:	add    al,0xf7
  403044:	loop   0x4030b9
  403046:	adc    eax,0x2823da9f
  40304b:	mov    bh,0x33
  40304d:	or     DWORD PTR [edi-0x7a],0x178aa941
  403054:	push   ebx
  403055:	popa   
  403056:	inc    eax
  403057:	push   esi
  403058:	cmp    dh,BYTE PTR [eax+0x6d9dca90]
  40305e:	pop    ebp
  40305f:	iret   
  403060:	xor    DWORD PTR [eax+eax*1+0x114672e7],ecx
  403067:	jae    0x403046
  403069:	push   eax
  40306a:	cmp    eax,0x22202a01
  40306f:	mov    bh,0x87
  403071:	ret    0x29bc
  403074:	fstp   DWORD PTR ds:0x88fd5e27
  40307a:	fdivrp st(3),st
  40307c:	push   0xffffffe9
  40307e:	leave  
  40307f:	fcom   QWORD PTR [ebx-0x3]
  403082:	mov    bh,0xef
  403084:	lods   al,BYTE PTR gs:[esi]
  403086:	stos   BYTE PTR es:[edi],al
  403087:	xchg   esi,eax
  403088:	ja     0x403096
  40308a:	(bad)  
  40308b:	cmp    edi,DWORD PTR [ecx+ebx*8-0x79d109f3]
  403092:	(bad)  
  403094:	sahf   
  403095:	call   0xade0:0x12a68b30
  40309c:	jne    0x4030fa
  40309e:	loope  0x403034
  4030a0:	mov    cl,BYTE PTR [edi-0x604b9a2f]
  4030a6:	push   ebx
  4030a7:	pop    ss
  4030a8:	(bad)  
  4030aa:	jmp    0x403126
  4030ac:	mov    cl,0x0
  4030ae:	and    BYTE PTR [edi-0x29422d2c],al
  4030b4:	add    ch,ch
  4030b6:	pop    eax
  4030b7:	fimul  DWORD PTR [ecx-0x6ea4809a]
  4030bd:	int    0x4a
  4030bf:	add    esi,0xffffff9c
  4030c2:	popf   
  4030c3:	adc    BYTE PTR [edi-0x6c],bh
  4030c6:	scas   eax,DWORD PTR es:[edi]
  4030c7:	arpl   WORD PTR [edx-0x4d],sp
  4030ca:	and    cl,BYTE PTR [esi-0x6e]
  4030cd:	out    0xf9,eax
  4030cf:	inc    ebx
  4030d0:	ret    0x8c83
  4030d3:	ss push esi
  4030d5:	mov    WORD PTR [eax-0x6],?
  4030d8:	fdivrp st(1),st
  4030da:	out    0x81,al
  4030dc:	mov    ecx,0x7e9f0d14
  4030e1:	mov    edi,0x80c0a956
  4030e6:	(bad)  
  4030e7:	xlat   BYTE PTR ds:[ebx]
  4030e8:	jg     0x4030a8
  4030ea:	scas   eax,DWORD PTR es:[edi]
  4030eb:	cli    
  4030ec:	jge    0x403087
  4030ee:	inc    ebx
  4030ef:	sub    eax,0x60ba3d27
  4030f4:	and    BYTE PTR [ecx+0x7],dl
  4030f7:	pop    eax
  4030f8:	ror    BYTE PTR [edi-0x3],0x92
  4030fc:	dec    edx
  4030fd:	add    al,0x4
  4030ff:	cwde   
  403100:	jmp    0xc186aa8e
  403105:	jbe    0x403137
  403107:	pcmpeqw mm0,QWORD PTR [ebx+0x38c25f97]
  40310e:	xchg   edi,esi
  403110:	or     DWORD PTR [ebp-0x47e530be],esp
  403116:	adc    al,0xf7
  403118:	push   0x21969c0
  40311d:	stos   BYTE PTR es:[edi],al
  40311e:	pusha  
  40311f:	les    eax,FWORD PTR [edi]
  403121:	mov    eax,ds:0x6d4985a2
  403126:	or     al,ch
  403128:	aas    
  403129:	mov    dh,ch
  40312b:	fisttp DWORD PTR ds:0xc429c7de
  403131:	cmp    edi,DWORD PTR [eax+0x7f]
  403134:	mov    edx,0x87825f8e
  403139:	xchg   DWORD PTR [edi+0x5b61e24b],esp
  40313f:	or     eax,0x49303120
  403144:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403145:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403146:	add    al,0x38
  403148:	mov    ecx,0xea180238
  40314d:	test   eax,0xc4105134
  403152:	lea    ebx,[edi+0x41]
  403155:	xor    al,0xe3
  403157:	int    0x87
  403159:	pop    eax
  40315a:	fimul  DWORD PTR [ebx+0x3ed10aa9]
  403160:	add    BYTE PTR [edx-0x5d40bd4d],dl
  403166:	xchg   esi,eax
  403167:	test   eax,0xf4345fb
  40316c:	mov    edi,0x166228b3
  403171:	pop    ebp
  403172:	mov    edi,DWORD PTR es:[ecx+ecx*8+0x3c]
  403177:	js     0x4031c7
  403179:	pop    ebp
  40317a:	ror    DWORD PTR [esi],cl
  40317c:	imul   esp,DWORD PTR [edi-0x766cbb77],0x4af5c5f1
  403186:	add    cl,BYTE PTR [edx]
  403188:	mov    ecx,0x41d54fda
  40318d:	outs   dx,BYTE PTR ds:[esi]
  40318e:	icebp  
  40318f:	adc    bh,dh
  403191:	das    
  403192:	popf   
  403193:	cdq    
  403194:	push   es
  403195:	scas   eax,DWORD PTR es:[edi]
  403196:	pop    edi
  403197:	jbe    0x403205
  403199:	outs   dx,DWORD PTR ds:[esi]
  40319a:	xor    DWORD PTR [ebp+0x61],eax
  40319d:	jge    0x40315f
  40319f:	dec    esi
  4031a0:	imul   esi,DWORD PTR [ebp-0xa4866de],0xffffff86
  4031a7:	mov    cl,0x7e
  4031a9:	sbb    eax,0xd119222f
  4031ae:	sbb    BYTE PTR [edx],cl
  4031b0:	js     0x40320f
  4031b2:	jecxz  0x403152
  4031b4:	scas   eax,DWORD PTR es:[edi]
  4031b5:	test   BYTE PTR [edx-0x8a02f4c],bl
  4031bb:	jg     0x40315c
  4031bd:	jne    0x403151
  4031bf:	pop    ebx
  4031c0:	mov    al,ds:0x333e9b9b
  4031c5:	bound  edi,QWORD PTR [eax+0x16]
  4031c8:	cmp    bl,BYTE PTR [ecx+0x74]
  4031cb:	push   edx
  4031cc:	fwait
  4031cd:	mov    edi,DWORD PTR [ecx-0x77db1b56]
  4031d3:	and    ch,bl
  4031d5:	lods   al,BYTE PTR ds:[esi]
  4031d6:	sub    ebx,DWORD PTR [esi]
  4031d8:	xchg   esi,eax
  4031d9:	pop    ecx
  4031da:	mov    ds:0x98223c81,al
  4031df:	or     eax,0xc7fb7e59
  4031e4:	in     al,0x27
  4031e6:	xor    ebx,DWORD PTR [ebp-0x621d9c07]
  4031ec:	lahf   
  4031ed:	lahf   
  4031ee:	jno    0x40322a
  4031f0:	add    dh,BYTE PTR [ebx-0x2ef2d6ed]
  4031f6:	mov    esi,0x62603860
  4031fb:	icebp  
  4031fc:	fstp   DWORD PTR [edi]
  4031fe:	or     al,0x8e
  403200:	ja     0x403267
  403202:	sti    
  403203:	mov    esi,DWORD PTR [eax]
  403205:	pop    ss
  403206:	xchg   ebx,eax
  403207:	arpl   dx,di
  403209:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40320a:	test   BYTE PTR [edx+0x70009740],0x29
  403211:	aad    0xcd
  403213:	dec    ebp
  403214:	fist   DWORD PTR [ebx+edi*8-0x49557006]
  40321b:	das    
  40321c:	rol    DWORD PTR [di+0x1f8a],cl
  403221:	ja     0x40329a
  403223:	in     eax,0xe
  403225:	int3   
  403226:	xchg   DWORD PTR [edi-0x17a6fcba],esp
  40322c:	aad    0x97
  40322e:	push   edi
  40322f:	mov    eax,edi
  403231:	inc    ebx
  403232:	retf   0x888d
  403235:	ficom  DWORD PTR [ecx+0x58509d67]
  40323b:	jb     0x4031fb
  40323d:	push   es
  40323e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40323f:	sbb    DWORD PTR [eax],esp
  403241:	dec    ecx
  403242:	repnz cmc 
  403244:	imul   eax,DWORD PTR [ebp+0x715b112f],0xffffff96
  40324b:	fcom   QWORD PTR [eax-0x49f57efc]
  403251:	in     eax,0x82
  403253:	test   DWORD PTR [edi+ecx*1],esp
  403256:	(bad)  
  403257:	gs into 
  403259:	and    dh,0xd3
  40325c:	xchg   edx,eax
  40325d:	cs inc edx
  40325f:	dec    edx
  403260:	or     ecx,DWORD PTR [esi-0x10]
  403263:	sub    al,0xd3
  403265:	out    0xb8,al
  403267:	add    dl,BYTE PTR [ebx+0x4c]
  40326a:	test   BYTE PTR [eax+0x1d],0x31
  40326e:	ds sahf 
  403270:	int3   
  403271:	lods   al,BYTE PTR ds:[esi]
  403272:	(bad)  
  403273:	stc    
  403274:	push   eax
  403275:	xchg   ebp,eax
  403276:	push   ebx
  403277:	cs (bad) 
  403279:	push   cs
  40327a:	mov    ebx,0x54cb35d5
  40327f:	fld    DWORD PTR [edi-0x6a]
  403282:	mov    al,0x91
  403284:	cmc    
  403285:	xchg   esp,eax
  403286:	inc    edi
  403287:	and    BYTE PTR [esi+edx*2+0x2e],0xe6
  40328c:	lahf   
  40328d:	mov    dh,0xfe
  40328f:	std    
  403290:	jb     0x40326a
  403292:	mov    cl,BYTE PTR [esi]
  403294:	inc    ecx
  403295:	mov    dl,0xd2
  403297:	imul   edi
  403299:	jl     0x403254
  40329b:	lods   al,BYTE PTR ds:[esi]
  40329c:	cli    
  40329d:	pop    esi
  40329e:	cmp    bl,dh
  4032a0:	nop
  4032a1:	mov    dl,0x13
  4032a3:	dec    ecx
  4032a4:	dec    edx
  4032a5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4032a6:	(bad)  
  4032a7:	shl    BYTE PTR [eax+0x3c41a554],cl
  4032ad:	sub    ebx,edi
  4032af:	into   
  4032b0:	cmp    dl,BYTE PTR [ebx-0x499d37a2]
  4032b6:	cmp    eax,0xf7581448
  4032bb:	xchg   edi,eax
  4032bc:	mov    bh,0x82
  4032be:	test   al,0x9c
  4032c0:	push   edi
  4032c1:	xchg   edx,eax
  4032c2:	les    eax,FWORD PTR [edi-0x59]
  4032c5:	stos   BYTE PTR es:[edi],al
  4032c6:	cmp    ebp,DWORD PTR [edx+0x79d02886]
  4032cc:	loopne 0x40329a
  4032ce:	neg    BYTE PTR [edi+0x2e]
  4032d1:	mov    cl,0x8f
  4032d3:	shr    DWORD PTR [edi],1
  4032d5:	mov    eax,ds:0x35e4567a
  4032da:	sub    DWORD PTR [edx+0x2f64300b],ebx
  4032e0:	imul   BYTE PTR [ebx-0x3829c7b3]
  4032e6:	pusha  
  4032e7:	loope  0x403282
  4032e9:	dec    esp
  4032ea:	cdq    
  4032eb:	lea    esi,[ebp-0x756d85b4]
  4032f1:	xor    DWORD PTR [esi-0x23446f33],esi
  4032f7:	mov    BYTE PTR [ebx+0xf96afdb],bl
  4032fd:	mov    WORD PTR [ebp-0x7884b19a],es
  403303:	(bad)  
  403304:	repz push edx
  403306:	jne    0x403312
  403308:	cmp    BYTE PTR [edi-0x7a67feb1],ch
  40330e:	dec    edi
  40330f:	push   ss
  403310:	push   eax
  403311:	or     DWORD PTR [edx],eax
  403313:	mov    bl,0xd7
  403315:	push   edi
  403316:	fld    TBYTE PTR [ecx+0x7f]
  403319:	arpl   WORD PTR [ecx+0x41],bx
  40331c:	mov    dl,0x31
  40331e:	push   ebp
  40331f:	mov    edx,0x5736eb8e
  403325:	jbe    0x40339c
  403327:	mov    al,ah
  403329:	mov    DWORD PTR [eax+0x35],edi
  40332c:	and    BYTE PTR cs:[edx-0x4fa0895c],cl
  403333:	cmp    al,0x6a
  403335:	add    eax,0x8dfea37e
  40333a:	xchg   esp,eax
  40333b:	movups xmm7,XMMWORD PTR [esp+edx*8+0x4acf4db2]
  403343:	(bad)  
  403344:	or     eax,0x9c2d9359
  403349:	or     eax,0x5561775e
  40334e:	idiv   BYTE PTR [esi]
  403350:	pushf  
  403351:	pusha  
  403352:	push   ebx
  403353:	js     0x4032f8
  403355:	jns    0x4032fd
  403357:	mov    ds:0xe2a5d703,al
  40335c:	mov    ebx,0x8d51deb0
  403361:	imul   eax,edx,0x9712411c
  403367:	dec    edi
  403368:	mov    bl,0xa
  40336a:	in     eax,dx
  40336b:	jmp    0xd961aa44
  403370:	jae    0x40333a
  403372:	adc    DWORD PTR [ecx+0x7b1055db],ebx
  403378:	push   edi
  403379:	adc    edi,DWORD PTR [eax-0x2b047cf5]
  40337f:	or     ah,cl
  403381:	push   cs
  403382:	jno    0x403401
  403384:	mov    dh,0xa
  403386:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403387:	ins    DWORD PTR es:[edi],dx
  403388:	(bad)  
  403389:	into   
  40338a:	test   eax,0xf01c566
  40338f:	push   esp
  403390:	jo     0x4033dc
  403392:	outs   dx,DWORD PTR ds:[esi]
  403393:	test   DWORD PTR [edi+eax*8-0x62a5e008],ebx
  40339a:	cs (bad) 
  40339c:	and    DWORD PTR [ecx],0xffffffe7
  40339f:	in     al,dx
  4033a0:	xchg   edx,eax
  4033a1:	mov    ah,0x93
  4033a3:	fsub   DWORD PTR [ebx-0x1213245b]
  4033a9:	outs   dx,BYTE PTR ds:[esi]
  4033aa:	mov    ecx,0x2186da10
  4033af:	call   0xa751:0x6bb1a93e
  4033b6:	pop    ebp
  4033b7:	pop    ebp
  4033b8:	or     al,BYTE PTR [eax]
  4033ba:	inc    esi
  4033bb:	xor    ch,ah
  4033bd:	ds in  eax,0x76
  4033c0:	pop    ebx
  4033c1:	mov    esi,0xdff08fdc
  4033c6:	mov    esi,0x9802200a
  4033cb:	mov    dl,BYTE PTR [ebp+0x7]
  4033ce:	xor    DWORD PTR ss:0x7a9764f3,esp
  4033d5:	fdiv   QWORD PTR [edi]
  4033d7:	fdivp  st(7),st
  4033d9:	(bad)  
  4033db:	ret    
  4033dc:	pop    ebp
  4033dd:	ret    0xd0c
  4033e0:	xchg   ebx,eax
  4033e1:	xchg   DWORD PTR [edi+0x45],esp
  4033e4:	xor    BYTE PTR [edi],cl
  4033e6:	add    edi,esi
  4033e8:	pop    ebp
  4033e9:	or     al,0x64
  4033eb:	pop    esp
  4033ec:	dec    esp
  4033ed:	sub    eax,0x522b5ffd
  4033f2:	jge    0x403408
  4033f4:	out    dx,eax
  4033f5:	in     eax,dx
  4033f6:	rcl    DWORD PTR [edi],0x66
  4033f9:	jmp    0x403475
  4033fb:	jmp    0xaefd26c
  403400:	pop    esi
  403401:	in     al,dx
  403402:	cmp    dl,BYTE PTR [edx]
  403404:	mov    ebx,0xf8ab7318
  403409:	add    eax,0x225ef4de
  40340e:	rcr    BYTE PTR [edx-0xbcb7e71],1
  403414:	or     edx,0xffffffe4
  403417:	jecxz  0x40340d
  403419:	inc    edi
  40341a:	ficomp DWORD PTR [ebx+eax*8]
  40341d:	leave  
  40341e:	lea    edi,[edi+0x1b]
  403421:	(bad)  ds:0xfdba92f9
  403427:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403428:	xor    eax,0x246833e5
  40342d:	and    bh,BYTE PTR [eax]
  40342f:	xor    ecx,DWORD PTR [edx-0x7aca3412]
  403435:	fld    DWORD PTR [edi+ecx*8-0x41]
  403439:	fimul  WORD PTR [eax+eiz*2-0x2a]
  40343d:	stc    
  40343e:	(bad)  
  40343f:	or     al,0x7d
  403441:	call   FWORD PTR [ecx-0x64]
  403444:	ins    DWORD PTR es:[edi],dx
  403445:	mul    BYTE PTR [edi-0x698eec02]
  40344b:	mov    cl,0x8a
  40344d:	mov    DWORD PTR [edi-0x1008372e],eax
  403453:	sub    dl,BYTE PTR [eax+0x58]
  403456:	sahf   
  403457:	imul   ebp,DWORD PTR [ecx],0x45
  40345a:	jmp    0x4033ff
  40345c:	pop    edx
  40345d:	sub    eax,ebx
  40345f:	sbb    DWORD PTR [eax-0x3f3a0e06],eax
  403465:	inc    esi
  403466:	or     eax,0xcdde11ee
  40346b:	fwait
  40346c:	mov    ecx,DWORD PTR [ebx+edi*2+0x20]
  403470:	mov    ch,0x7c
  403472:	sbb    DWORD PTR [edx-0x7b91508f],edi
  403478:	fwait
  403479:	sub    BYTE PTR [ebx-0x24],al
  40347c:	dec    DWORD PTR [esi+0x6c]
  40347f:	stc    
  403480:	mov    edx,0x9418ceb3
  403485:	adc    DWORD PTR [edi],ebx
  403487:	push   esi
  403488:	jnp    0x4034ef
  40348a:	lock mov ch,0x41
  40348d:	jg     0x403489
  40348f:	outs   dx,DWORD PTR ds:[esi]
  403490:	jle    0x403420
  403492:	sar    ebx,0xb0
  403495:	push   0xee740c8f
  40349a:	(bad)  
  40349b:	call   0x87bdd3a5
  4034a0:	cmc    
  4034a1:	and    DWORD PTR [ebp-0x3a],edi
  4034a4:	pop    eax
  4034a5:	xchg   edx,eax
  4034a6:	sub    ebx,esi
  4034a8:	div    dl
  4034aa:	add    DWORD PTR [ecx],ebp
  4034ac:	jl     0x403491
  4034ae:	jmp    0x6b2c:0x1861bcff
  4034b5:	mov    al,ds:0xf29b908b
  4034ba:	je     0x40346d
  4034bc:	or     DWORD PTR [edx+0x6bc12208],edi
  4034c2:	push   0xffffffaf
  4034c4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4034c5:	push   ss
  4034c6:	mov    edi,DWORD PTR [edi]
  4034c8:	pushf  
  4034c9:	xchg   edi,eax
  4034ca:	in     eax,0xd3
  4034cc:	and    BYTE PTR [eax+0x51],al
  4034cf:	ins    DWORD PTR es:[edi],dx
  4034d0:	jne    0x403508
  4034d2:	adc    eax,0xd4fb4344
  4034d7:	or     bl,bl
  4034d9:	mov    BYTE PTR [esi+0x7e],cl
  4034dc:	ds and cl,ch
  4034df:	sbb    DWORD PTR [edx-0x20],eax
  4034e2:	jo     0x4034ce
  4034e4:	ficomp DWORD PTR [esi]
  4034e6:	inc    ebp
  4034e7:	pop    ebp
  4034e8:	cwde   
  4034e9:	loop   0x403542
  4034eb:	mov    ebp,0x7bc69156
  4034f0:	repz inc ebp
  4034f2:	adc    dl,dl
  4034f4:	jl     0x4034d4
  4034f6:	cmp    al,0x54
  4034f8:	adc    DWORD PTR ds:0x42fde419,esi
  4034fe:	jne    0x403523
  403500:	xlat   BYTE PTR ds:[ebx]
  403501:	xor    al,0x9e
  403503:	bound  edi,QWORD PTR [edi+0x1f1e71d1]
  403509:	sub    BYTE PTR [edi],0x48
  40350c:	jnp    0x403529
  40350e:	dec    esi
  40350f:	xor    esp,DWORD PTR [eax+eiz*2-0xec7f3c9]
  403516:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403517:	enter  0x6b45,0xf1
  40351b:	loopne 0x4034d6
  40351d:	add    al,0x7f
  40351f:	ds dec eax
  403521:	xchg   ebp,eax
  403522:	jno    0x40352e
  403524:	and    eax,0xea920eb1
  403529:	push   eax
  40352a:	aad    0xd1
  40352c:	cwde   
  40352d:	adc    ebx,DWORD PTR [eax+0x72]
  403530:	push   ebp
  403531:	nop
  403532:	imul   esp,DWORD PTR [edi+0x41b349a],0x274831bb
  40353c:	icebp  
  40353d:	and    al,0x51
  40353f:	xor    al,0x80
  403541:	jp     0x4034ce
  403543:	cmp    BYTE PTR [edi+0x66c9f240],0x83
  40354a:	dec    edi
  40354b:	mov    edi,0x544275bb
  403550:	xor    BYTE PTR [edi-0x58810115],dh
  403556:	or     dl,cl
  403558:	leave  
  403559:	enter  0xa3e2,0xbd
  40355d:	dec    ecx
  40355e:	push   es
  40355f:	sub    BYTE PTR [edi+edx*1],cl
  403562:	mov    dh,0xc
  403564:	sub    DWORD PTR [eax-0x4b3069ce],ebx
  40356a:	aad    0x1c
  40356c:	jno    0x40352c
  40356e:	sub    eax,0x14fc2dd5
  403573:	(bad)  
  403574:	cli    
  403575:	push   0xe77f6e72
  40357a:	jl     0x40356f
  40357c:	data16 jle 0x403543
  40357f:	aas    
  403580:	jg     0x403592
  403582:	add    cl,BYTE PTR [eax+0x49]
  403585:	fidiv  WORD PTR [edi-0x62]
  403588:	lock ret 
  40358a:	leave  
  40358b:	jle    0x4035fd
  40358d:	loope  0x4035c4
  40358f:	pop    edi
  403590:	mov    BYTE PTR [ecx],bh
  403592:	xlat   BYTE PTR ds:[ebx]
  403593:	mov    dl,0x6a
  403595:	mov    bl,0x47
  403597:	ret    
  403598:	cmp    esp,DWORD PTR [edi+0x15]
  40359b:	xor    esp,DWORD PTR ds:0x359eed23
  4035a1:	loop   0x40361b
  4035a3:	cmp    al,0x7c
  4035a5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4035a6:	sbb    ebx,ebp
  4035a8:	imul   esp,esp,0x42cd1bbb
  4035ae:	pushf  
  4035af:	into   
  4035b0:	pusha  
  4035b1:	les    ebx,FWORD PTR [ebx]
  4035b3:	fdiv   DWORD PTR [eax-0x2fe653b4]
  4035b9:	mov    ds:0x7d9a6cab,eax
  4035be:	push   0x4c05724c
  4035c3:	push   ds
  4035c4:	sbb    DWORD PTR [edx+0x642a1617],ebx
  4035ca:	mov    ds,WORD PTR [ebx-0x80]
  4035cd:	cs or  eax,0xd2e11283
  4035d3:	in     eax,0xff
  4035d5:	cdq    
  4035d6:	outs   dx,DWORD PTR ds:[esi]
  4035d7:	xor    BYTE PTR [eax+eiz*4-0x33a42499],0xc6
  4035df:	(bad)
  4035e2:	push   es
  4035e3:	hlt    
  4035e4:	inc    esp
  4035e5:	pop    ecx
  4035e6:	aaa    
  4035e7:	jnp    0x40358e
  4035e9:	jo     0x40363b
  4035eb:	int    0x72
  4035ed:	aas    
  4035ee:	retf   0x2deb
  4035f1:	mov    ch,0xca
  4035f3:	(bad)  
  4035f4:	jge    0x4035c8
  4035f6:	pop    eax
  4035f7:	iret   
  4035f8:	aas    
  4035f9:	inc    esp
  4035fa:	clc    
  4035fb:	adc    BYTE PTR [ecx],cl
  4035fd:	push   edi
  4035fe:	mov    dl,BYTE PTR [ecx]
  403600:	aam    0x5b
  403602:	pop    esp
  403603:	or     al,0xc0
  403605:	repz in al,0x4e
  403608:	cmp    eax,0x9babc282
  40360d:	test   ebp,ebx
  40360f:	mov    esp,0x9fda9ee4
  403614:	inc    esi
  403615:	fldl2e 
  403617:	jecxz  0x4035a6
  403619:	adc    BYTE PTR [esp+edx*1+0x4a38d51a],0x49
  403621:	or     DWORD PTR [edi-0x27],esi
  403624:	sbb    al,0x58
  403626:	dec    esi
  403627:	dec    esi
  403628:	xchg   BYTE PTR [edx+0x3605a57f],bl
  40362e:	aam    0x7
  403630:	adc    eax,0x6771a2d5
  403635:	pop    ebx
  403636:	cmp    BYTE PTR [ebp+0x73e2a767],al
  40363c:	mov    ds:0xef6ec7d7,eax
  403641:	sbb    al,0x9b
  403643:	xor    edx,DWORD PTR [ebx]
  403645:	imul   edx,ecx,0xa50e4628
  40364b:	pop    edx
  40364c:	xor    edx,DWORD PTR [eax-0x2812d402]
  403652:	or     eax,0xb7a6fe8d
  403657:	dec    esp
  403658:	xchg   edx,eax
  403659:	xor    eax,0xed12f9be
  40365e:	xor    al,0xdd
  403660:	loop   0x403629
  403662:	sub    bl,BYTE PTR [edi+0x621699a0]
  403668:	sub    eax,0x37b8aa10
  40366d:	fimul  WORD PTR [esi-0x3]
  403670:	bound  edx,QWORD PTR cs:[edx+0x2bd99544]
  403677:	xor    BYTE PTR [edi],ch
  403679:	sbb    dl,dh
  40367b:	xor    BYTE PTR [esp+eax*4+0x47a4dd90],cl
  403682:	mov    eax,ds:0x520fc8cb
  403687:	out    dx,eax
  403688:	test   al,0x8f
  40368a:	imul   ecx,DWORD PTR [ebx-0x617133e6],0x63b196db
  403694:	ret    
  403695:	jb     0x40366d
  403697:	cli    
  403698:	push   0x6070f1a9
  40369d:	call   0x15883e9
  4036a2:	add    ebp,ebp
  4036a4:	push   0xd
  4036a6:	inc    ebp
  4036a7:	add    eax,0x5008063
  4036ac:	adc    DWORD PTR [edx+edx*1-0x1f7c9a19],eax
  4036b3:	jno    0x4036c0
  4036b5:	enter  0x3d3d,0x75
  4036b9:	sub    eax,0x9a2a63ea
  4036be:	popf   
  4036bf:	adc    al,0x1b
  4036c1:	mov    ch,0xe4
  4036c3:	cs (bad) 
  4036c5:	daa    
  4036c6:	imul   ecx,ebp,0xfffffff6
  4036c9:	popf   
  4036ca:	sbb    bh,BYTE PTR [ebp+0x47f3a9b4]
  4036d0:	cli    
  4036d1:	outs   dx,BYTE PTR ds:[esi]
  4036d2:	mov    ah,0x34
  4036d4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4036d5:	mov    esp,0x6f31fcc8
  4036da:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4036db:	mov    WORD PTR [eax+edx*2-0x52],?
  4036df:	pop    ebx
  4036e0:	jg     0x403670
  4036e2:	pushf  
  4036e3:	jbe    0x403680
  4036e5:	jns    0x403714
  4036e7:	addr16 fxch st(1)
  4036ea:	add    edi,DWORD PTR [ebp-0xb5f0408]
  4036f0:	sbb    eax,0x980732f1
  4036f5:	pop    ebx
  4036f6:	cmp    DWORD PTR [esi+0x14],edi
  4036f9:	mov    cl,0x4f
  4036fb:	das    
  4036fc:	imul   eax,eax,0xffffffa8
  4036ff:	cmp    ch,BYTE PTR [edi]
  403701:	adc    eax,eax
  403703:	mov    ebx,0x6a71ecf2
  403708:	popf   
  403709:	scas   al,BYTE PTR es:[edi]
  40370a:	pop    ecx
  40370b:	ins    BYTE PTR es:[edi],dx
  40370c:	(bad)  
  40370d:	(bad)  
  40370e:	ret    0x7328
  403711:	push   ecx
  403712:	push   ebx
  403713:	loopne 0x403774
  403715:	mov    al,ds:0xfacbd5d
  40371a:	call   0x940f:0xae13fd69
  403721:	dec    ebx
  403722:	rol    BYTE PTR fs:[ebp-0x2489bca5],cl
  403729:	stos   BYTE PTR es:[edi],al
  40372a:	popf   
  40372b:	pop    edi
  40372c:	inc    ebp
  40372d:	loopne 0x403787
  40372f:	cmp    al,0x17
  403731:	xor    BYTE PTR ds:0xfa025d30,0xeb
  403738:	rcl    DWORD PTR [esi+0x1b700fc3],1
  40373e:	aam    0xcb
  403740:	ss jecxz 0x403798
  403743:	enter  0xb349,0x59
  403747:	jmp    0x403700
  403749:	adc    DWORD PTR [eax-0xf],ecx
  40374c:	sar    BYTE PTR [eax+0x23d18277],cl
  403752:	xor    BYTE PTR [ebx-0x13],ch
  403755:	jo     0x40372b
  403757:	or     al,0xf
  403759:	stos   DWORD PTR es:[edi],eax
  40375a:	sbb    eax,0xf43579ae
  40375f:	mov    al,ds:0x3891341d
  403764:	xchg   esi,eax
  403765:	sar    DWORD PTR [edx+0xae04e17],cl
  40376b:	retf   0x1463
  40376e:	fiadd  WORD PTR [edi+0x24c7aabf]
  403774:	pop    ds
  403775:	push   0x3e6a7bbf
  40377a:	pop    ebp
  40377b:	mov    edx,0x5c8c38de
  403780:	mov    dl,0x7a
  403782:	add    DWORD PTR [ecx],eax
  403784:	nop
  403785:	jp     0x4037d9
  403787:	push   ebx
  403788:	or     BYTE PTR [eax-0x2a8392f6],bl
  40378e:	or     al,0x90
  403790:	daa    
  403791:	data16 cmp BYTE PTR ds:0xe6c4b393,dl
  403798:	test   al,0xd0
  40379a:	sahf   
  40379b:	fdivr  st,st(4)
  40379d:	cmp    eax,0xab8d9737
  4037a2:	xchg   edi,eax
  4037a3:	mov    ah,0x9d
  4037a5:	cli    
  4037a6:	adc    al,0x45
  4037a8:	jp     0x40379e
  4037aa:	ficomp DWORD PTR [ecx+edi*2-0x17]
  4037ae:	rcr    DWORD PTR [ebx],1
  4037b0:	cmp    ch,ch
  4037b2:	xchg   edx,eax
  4037b3:	fld    QWORD PTR [esi+0x7f9cf78a]
  4037b9:	xor    al,0xeb
  4037bb:	push   ebp
  4037bc:	jmp    0x4d5c:0x7898d76f
  4037c3:	cs jg  0x4037b4
  4037c6:	xor    edx,esp
  4037c8:	adc    bl,BYTE PTR [edi-0x39cc07ab]
  4037ce:	add    eax,edi
  4037d0:	mov    DWORD PTR [ebp-0x80],eax
  4037d3:	lea    eax,[ebp-0x80]
  4037d6:	push   eax
  4037d7:	mov    eax,DWORD PTR [ebp+0xc]
  4037da:	xor    eax,esi
  4037dc:	add    eax,edi
  4037de:	push   eax
  4037df:	mov    eax,ds:0x42830f
  4037e4:	push   0x428265
  4037e9:	push   DWORD PTR [eax]
  4037eb:	call   0x42368f
  4037f0:	mov    ecx,DWORD PTR [ebp-0x10]
  4037f3:	mov    eax,DWORD PTR [ebp-0x14]
  4037f6:	mov    DWORD PTR [ebp-0x28],eax
  4037f9:	mov    DWORD PTR [ebp-0x20],0xf89c8533
  403800:	mov    edx,0xf89c85b1
  403805:	mov    DWORD PTR [ebp-0x20],edx
  403808:	lea    eax,[edx-0x1]
  40380b:	mov    DWORD PTR [ebp-0x20],eax
  40380e:	mov    DWORD PTR [ebp-0x8],edx
  403811:	mov    DWORD PTR [ebp-0x10],0xf89c85b2
  403818:	mov    edx,DWORD PTR [ebp-0x8]
  40381b:	xor    edx,esi
  40381d:	mov    ebx,0xffcd8f14
  403822:	sub    ebx,edx
  403824:	mov    DWORD PTR [ebp-0xc],ebx
  403827:	mov    DWORD PTR [ebp-0x18],0xf89c85bd
  40382e:	mov    edx,DWORD PTR [ebp-0x10]
  403831:	mov    DWORD PTR [ebp-0x24],ecx
  403834:	cmp    edx,eax
  403836:	je     0x4080be
  40383c:	mov    eax,DWORD PTR [ebp-0x8]
  40383f:	mov    edx,DWORD PTR [ebp-0x8]
  403842:	xor    eax,esi
  403844:	xor    edx,esi
  403846:	lea    ebx,[eax+edx*1+0x64e5d8]
  40384d:	mov    eax,DWORD PTR [ebp-0xc]
  403850:	xor    edx,edx
  403852:	div    ebx
  403854:	mov    eax,DWORD PTR [ebp-0x10]
  403857:	mov    ebx,DWORD PTR [ebp-0x8]
  40385a:	xor    eax,esi
  40385c:	xor    ebx,esi
  40385e:	jmp    0x405c1c
  403863:	mov    edi,0x41446183
  403868:	test   BYTE PTR [ebx-0x196ad685],cl
  40386e:	call   0x5fdd:0x9111d9b0
  403875:	jp     0x4038f1
  403877:	fstp   QWORD PTR [edi+0x7a]
  40387a:	jp     0x4038b7
  40387c:	es fs inc esp
  40387f:	jecxz  0x40380c
  403881:	pop    edi
  403882:	jge    0x4038b9
  403884:	jne    0xff484a10
  40388a:	push   ebx
  40388b:	pop    es
  40388c:	mov    ebp,0x9aafff6f
  403891:	pop    eax
  403892:	or     al,0xa0
  403894:	enter  0x4009,0x6b
  403898:	xor    bl,dh
  40389a:	and    eax,0x279a4577
  40389f:	lock push cs
  4038a1:	push   ebp
  4038a2:	cmp    DWORD PTR [edx-0x614521e2],ecx
  4038a8:	sub    BYTE PTR [edx-0x3bbc3f1d],dh
  4038ae:	inc    ecx
  4038af:	mov    edi,0x74f1df1
  4038b4:	retf   0x712a
  4038b7:	lahf   
  4038b8:	aas    
  4038b9:	dec    ebx
  4038ba:	pop    ecx
  4038bb:	fbld   TBYTE PTR [ecx-0x6fbbe1b8]
  4038c1:	fld    st(7)
  4038c3:	mov    DWORD PTR [eax],0xd5ebee42
  4038c9:	inc    ecx
  4038ca:	sbb    edi,DWORD PTR [ebx-0x13]
  4038cd:	mov    esp,0x579513b3
  4038d2:	jecxz  0x4038c1
  4038d4:	push   ebp
  4038d5:	jle    0x4038b5
  4038d7:	lods   al,BYTE PTR ds:[esi]
  4038d8:	adc    eax,0xf6031f1b
  4038dd:	lahf   
  4038de:	adc    DWORD PTR [edi+0x546a144d],ebp
  4038e4:	out    dx,eax
  4038e5:	(bad)  
  4038e6:	sbb    BYTE PTR [esi],dh
  4038e8:	in     eax,0x55
  4038ea:	mov    eax,0xee319fdb
  4038ef:	inc    eax
  4038f0:	sbb    al,0xfe
  4038f2:	popa   
  4038f3:	and    edi,0xd6af55c0
  4038f9:	aas    
  4038fa:	push   esi
  4038fb:	xor    BYTE PTR [ebp+0x1a],dh
  4038fe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4038ff:	add    dl,BYTE PTR [ecx]
  403901:	out    dx,eax
  403902:	cli    
  403903:	push   edi
  403904:	loope  0x40393e
  403906:	cmp    DWORD PTR [eax-0x20],ebp
  403909:	cmp    BYTE PTR [eax+0x25d07221],dl
  40390f:	ins    DWORD PTR es:[edi],dx
  403910:	into   
  403911:	jecxz  0x4038c6
  403913:	les    eax,FWORD PTR [eax-0x1]
  403916:	data16 addr16 loope 0x403937
  40391a:	sahf   
  40391b:	inc    edx
  40391c:	sub    esp,DWORD PTR [edx-0x67c8b593]
  403922:	cli    
  403923:	mov    ?,WORD PTR [eax]
  403925:	mov    WORD PTR [ebx],ds
  403927:	dec    eax
  403928:	push   esp
  403929:	dec    edx
  40392a:	fdivrp st(0),st
  40392c:	idiv   edx
  40392e:	inc    esp
  40392f:	ds cmp al,0xbe
  403932:	aaa    
  403933:	xor    ebx,DWORD PTR [eax+ecx*8]
  403936:	or     ebp,DWORD PTR [ecx-0x1b]
  403939:	add    esp,esp
  40393b:	cld    
  40393c:	dec    esp
  40393d:	sar    BYTE PTR [edi-0x59],cl
  403940:	fnsave [ebp-0xe]
  403943:	out    dx,al
  403944:	dec    DWORD PTR [ecx-0x427118c6]
  40394a:	and    BYTE PTR [edx-0x79],ch
  40394d:	inc    ebx
  40394e:	jns    0x40391a
  403950:	int3   
  403951:	imul   ebx,DWORD PTR [ebx+0x63405095],0x1d
  403958:	les    edx,FWORD PTR [edx+ebp*4]
  40395b:	daa    
  40395c:	cli    
  40395d:	sub    eax,0xf070117c
  403962:	imul   bl
  403964:	add    BYTE PTR [esi+0x67463512],0x39
  40396b:	sub    esi,DWORD PTR [ecx+edx*4]
  40396e:	imul   ebx,DWORD PTR [ebx+0x12],0x1c
  403972:	rcr    DWORD PTR [eax-0x3de97ee8],cl
  403978:	iret   
  403979:	or     BYTE PTR [edx+0x28dfc3ba],ch
  40397f:	mov    ds:0x8f1b6d6,al
  403984:	cld    
  403985:	xor    eax,DWORD PTR [ebx]
  403987:	mov    ah,0xb5
  403989:	and    DWORD PTR [esi-0x1e42edeb],edx
  40398f:	mov    bh,0x1d
  403991:	push   eax
  403992:	mov    al,bl
  403994:	and    ebx,DWORD PTR [esi+0x7ed2d1d4]
  40399a:	test   al,0xf5
  40399c:	push   es
  40399d:	cs retf 
  40399f:	loopne 0x4039ba
  4039a1:	fbstp  TBYTE PTR [ebp-0x6e5df6d5]
  4039a7:	leave  
  4039a8:	add    BYTE PTR ds:0xfd6fea68,dl
  4039ae:	and    cl,BYTE PTR [ecx]
  4039b0:	dec    esi
  4039b1:	inc    ebp
  4039b2:	mov    edx,0xc2df0171
  4039b7:	or     ebp,DWORD PTR [edi]
  4039b9:	(bad)  
  4039ba:	std    
  4039bb:	mov    dh,0x24
  4039bd:	sbb    BYTE PTR [edi-0x30b87d34],0x5c
  4039c4:	aam    0xa7
  4039c6:	(bad)  
  4039c7:	and    bh,BYTE PTR [ebp-0xe659c2a]
  4039cd:	sbb    ecx,DWORD PTR [esp+eax*4]
  4039d0:	mov    bh,0xa
  4039d2:	in     al,dx
  4039d3:	call   0x2af48c7d
  4039d8:	popf   
  4039d9:	xchg   ebp,eax
  4039da:	cmp    eax,0x404da790
  4039df:	mov    ds:0x9582ccdc,al
  4039e4:	sbb    BYTE PTR ss:[ebp-0x139ed745],al
  4039eb:	rol    edx,1
  4039ed:	cmp    al,0xff
  4039ef:	es push edx
  4039f1:	loop   0x4039d3
  4039f3:	dec    eax
  4039f4:	dec    esp
  4039f5:	js     0x403a37
  4039f7:	in     eax,dx
  4039f8:	mov    al,0x1c
  4039fa:	sbb    dh,BYTE PTR [ebx+0x17c7db99]
  403a00:	lock sub BYTE PTR [esi+0x4f77628c],bh
  403a07:	push   edi
  403a08:	ds mov esp,0xae88f395
  403a0e:	mov    ch,0xd8
  403a10:	cwde   
  403a11:	bound  esp,QWORD PTR [esi-0x37]
  403a14:	inc    ecx
  403a15:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403a16:	js     0x40399a
  403a18:	pusha  
  403a19:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403a1a:	int3   
  403a1b:	data16 repz jecxz 0x4039e2
  403a1f:	int    0x23
  403a21:	sub    eax,0x32b6f6ef
  403a26:	push   0xffffffaa
  403a28:	add    eax,0x782a0051
  403a2d:	dec    edi
  403a2e:	mov    ecx,0x32c057d3
  403a33:	or     dh,BYTE PTR [ecx-0x62]
  403a36:	nop
  403a37:	add    eax,0x1f9d431e
  403a3c:	sub    al,0xa7
  403a3e:	mov    esi,0x398bbf12
  403a43:	add    al,0xec
  403a45:	mov    ds:0x1c27bba,al
  403a4a:	sub    eax,0x45792756
  403a4f:	sti    
  403a50:	jo     0x403a61
  403a52:	mov    al,ds:0xb0ee80cc
  403a57:	popf   
  403a58:	jo     0x403ac9
  403a5a:	pushf  
  403a5b:	retf   0xe3f4
  403a5e:	js     0x403a21
  403a60:	sub    ecx,edx
  403a62:	fnsave [eax+0x41492c44]
  403a68:	jle    0x403a16
  403a6a:	rol    BYTE PTR [esp+ebp*8],1
  403a6d:	lds    esp,FWORD PTR [bp+si-0x605]
  403a72:	(bad)  
  403a73:	fwait
  403a74:	rcr    BYTE PTR [edi+0x32e6ecb1],cl
  403a7a:	xor    DWORD PTR [esi+0x78],ecx
  403a7d:	xor    esp,esi
  403a7f:	in     al,0x36
  403a81:	out    0x79,al
  403a83:	shr    edx,1
  403a85:	cmc    
  403a86:	pop    ebx
  403a87:	(bad)  
  403a88:	mov    al,ds:0x130439d1
  403a8d:	pop    eax
  403a8e:	lods   al,BYTE PTR ds:[esi]
  403a8f:	mov    dl,0x55
  403a91:	sar    BYTE PTR [esi+ecx*2+0x2e45de5d],cl
  403a98:	push   esp
  403a99:	inc    ecx
  403a9a:	int    0x81
  403a9c:	icebp  
  403a9d:	xor    al,0xad
  403a9f:	(bad)
  403aa3:	pop    ds
  403aa4:	xor    ebp,DWORD PTR [edx]
  403aa6:	xchg   edx,eax
  403aa7:	test   DWORD PTR [ecx],eax
  403aa9:	xchg   cl,bh
  403aab:	(bad)  
  403aac:	fidivr WORD PTR [esi+0x4536b8b8]
  403ab2:	stos   DWORD PTR es:[edi],eax
  403ab3:	fcom   QWORD PTR [ebp+0x11]
  403ab6:	pop    esi
  403ab7:	cmp    BYTE PTR [edi-0x4],ah
  403aba:	hlt    
  403abb:	call   0x5d14a9a
  403ac0:	lss    esi,FWORD PTR ss:[ecx+0x303ad480]
  403ac8:	and    DWORD PTR [esi],edx
  403aca:	(bad)  
  403acb:	lea    esp,[edi]
  403acd:	and    BYTE PTR [ebx+0x3e84f2c5],0x4f
  403ad4:	push   ss
  403ad5:	shl    ch,0xd3
  403ad8:	fs mov ah,cl
  403adb:	loope  0x403b42
  403add:	pop    ebx
  403ade:	mov    ds:0x9d5cc05b,al
  403ae3:	repnz repz enter 0xf971,0xdd
  403ae9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403aea:	pop    ebx
  403aeb:	mov    ebx,0x4f4436a0
  403af0:	jo     0x403b45
  403af2:	dec    ebp
  403af3:	add    eax,0x5a3f109
  403af8:	ror    BYTE PTR [ebp-0x1fde1d8c],cl
  403afe:	rcr    BYTE PTR [ebp+ecx*1+0x4b192a94],cl
  403b05:	mov    esi,0x445113ae
  403b0a:	js     0x7eb5584a
  403b10:	pxor   mm2,QWORD PTR [ebx-0x53]
  403b14:	test   DWORD PTR [edi+esi*8+0x77],0x265c2ebd
  403b1c:	mov    ch,0x3c
  403b1e:	fs xchg ebp,eax
  403b20:	mov    esp,0xa5c2ec
  403b25:	fwait
  403b26:	or     BYTE PTR [ebx-0x758acdba],bh
  403b2c:	sub    cl,ah
  403b2e:	lds    ebx,FWORD PTR [edi]
  403b30:	adc    DWORD PTR [edi],ebx
  403b32:	out    dx,al
  403b33:	inc    ebx
  403b34:	jae    0x403bb4
  403b36:	ficomp WORD PTR [eax+eax*2+0x33]
  403b3a:	add    DWORD PTR [edx+0x331555a1],ebx
  403b40:	cs mov cl,0xf3
  403b43:	xchg   esi,eax
  403b44:	mov    esp,0x6ec896f7
  403b49:	nop
  403b4a:	pop    ebx
  403b4b:	sbb    DWORD PTR [ecx-0x2ca5f8f1],ebx
  403b51:	mov    eax,0x2fc25fe7
  403b56:	or     DWORD PTR [ebx+0x6bfba729],esi
  403b5c:	pop    eax
  403b5d:	xchg   ebx,eax
  403b5e:	jg     0x403ae7
  403b60:	fdiv   QWORD PTR [eax+0x50]
  403b63:	dec    ecx
  403b64:	scas   al,BYTE PTR es:[edi]
  403b65:	test   BYTE PTR [ebx-0x54],bh
  403b68:	ret    
  403b69:	int3   
  403b6a:	inc    ebx
  403b6b:	leave  
  403b6c:	enter  0x9296,0xa3
  403b70:	rol    BYTE PTR [edi],1
  403b72:	inc    edi
  403b73:	and    eax,0xe7e6cbfd
  403b78:	fld    DWORD PTR [edx-0x6935e85d]
  403b7e:	pusha  
  403b7f:	stos   DWORD PTR es:[edi],eax
  403b80:	out    0xc5,eax
  403b82:	ins    DWORD PTR es:[edi],dx
  403b83:	xor    eax,DWORD PTR [ebx+0x2]
  403b86:	ror    DWORD PTR [eax],0xf2
  403b89:	dec    ecx
  403b8a:	lahf   
  403b8b:	inc    eax
  403b8c:	imul   esp,ebp,0x68
  403b8f:	xor    BYTE PTR [ebx+0x24c2dc4c],dh
  403b95:	in     eax,dx
  403b96:	les    ebp,FWORD PTR [ebx]
  403b98:	lods   al,BYTE PTR ds:[esi]
  403b99:	mov    ebp,0xf2f46e51
  403b9e:	push   esp
  403b9f:	sub    DWORD PTR [eax],esp
  403ba1:	jae    0x403ba0
  403ba3:	xor    DWORD PTR [edx-0x1b1c694],edx
  403ba9:	pop    es
  403baa:	mov    esi,0xcd028217
  403baf:	imul   esp,DWORD PTR [ecx+0x3282b56b],0x22
  403bb6:	push   cs
  403bb7:	repnz dec edi
  403bb9:	lahf   
  403bba:	mov    dh,0xf9
  403bbc:	xor    esp,ebp
  403bbe:	dec    edi
  403bbf:	push   cs
  403bc0:	cmp    al,0x2d
  403bc2:	pop    ds
  403bc3:	aaa    
  403bc4:	pop    ecx
  403bc5:	or     eax,DWORD PTR [esi]
  403bc7:	xor    eax,0x74995e70
  403bcc:	sti    
  403bcd:	cdq    
  403bce:	inc    edi
  403bcf:	cmp    BYTE PTR [ecx+0x3fb07825],dl
  403bd5:	test   BYTE PTR [ecx+0xd7ee7e8],0xa9
  403bdc:	inc    esi
  403bdd:	push   eax
  403bde:	xor    dh,BYTE PTR [ecx+0x72ab433d]
  403be4:	inc    ecx
  403be5:	pop    es
  403be6:	stos   BYTE PTR es:[edi],al
  403be7:	push   0x27
  403be9:	enter  0x9f7a,0xae
  403bed:	or     esp,DWORD PTR [edx-0x33]
  403bf0:	fcmove st,st(6)
  403bf2:	lods   eax,DWORD PTR ds:[esi]
  403bf3:	sbb    BYTE PTR ds:0x6e1d1519,dl
  403bf9:	fs mov esp,0xe06221b9
  403bff:	sbb    BYTE PTR [ebx],ah
  403c01:	xchg   DWORD PTR [ecx-0x72],eax
  403c04:	inc    ebp
  403c05:	xchg   edx,eax
  403c06:	push   ecx
  403c07:	not    BYTE PTR [edi+0x0]
  403c0a:	hlt    
  403c0b:	test   BYTE PTR [eax],al
  403c0d:	fild   WORD PTR [eax-0x43]
  403c10:	stc    
  403c11:	sub    esp,ebp
  403c13:	push   eax
  403c14:	pop    eax
  403c15:	imul   BYTE PTR [edx-0x17]
  403c18:	mov    edx,0x8221b87f
  403c1d:	jmp    0xccf4:0x77735109
  403c24:	retf   0xd917
  403c27:	jmp    0x403bb5
  403c29:	call   0x9efa05cf
  403c2e:	xchg   DWORD PTR [edx+0x5b],ebp
  403c31:	jmp    0x36f6:0x7c115bd7
  403c38:	push   esi
  403c39:	fsub   QWORD PTR [esi+0x64f24a0d]
  403c3f:	push   ds
  403c40:	and    eax,DWORD PTR [ecx-0x80]
  403c43:	icebp  
  403c44:	jp     0x403cb0
  403c46:	(bad)  
  403c47:	test   eax,0xef21fa2d
  403c4c:	jmp    0x563e77eb
  403c51:	jp     0x403c19
  403c53:	mov    edx,0xe20c0af7
  403c58:	dec    edx
  403c59:	mov    ah,0x83
  403c5b:	fxch   st(0)
  403c5d:	add    dh,BYTE PTR [ebx-0x53eb62aa]
  403c63:	out    0xb3,eax
  403c65:	imul   BYTE PTR [edi-0x4c]
  403c68:	jp     0x403c56
  403c6a:	mov    al,0x3d
  403c6c:	mov    edx,0x418b6c63
  403c71:	rcr    BYTE PTR [ecx],0x4
  403c74:	call   0x3809ba82
  403c79:	out    dx,al
  403c7a:	ror    DWORD PTR [edi-0x3302d77c],1
  403c80:	cmp    DWORD PTR [ecx-0x2d294deb],0x48
  403c87:	in     al,dx
  403c88:	mov    ds:0x8b683c91,eax
  403c8d:	popf   
  403c8e:	adc    al,BYTE PTR [esi-0x619ea896]
  403c94:	stc    
  403c95:	fs ins DWORD PTR es:[edi],dx
  403c97:	and    BYTE PTR [ecx],dl
  403c99:	mov    ebp,0xd804707b
  403c9e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403c9f:	push   ecx
  403ca0:	cmp    eax,0xc620a69e
  403ca5:	ds adc eax,0xb05267e7
  403cab:	in     eax,dx
  403cac:	xor    edi,ecx
  403cae:	sbb    eax,0x67a3f02
  403cb3:	stc    
  403cb4:	pop    ecx
  403cb5:	pushf  
  403cb6:	xchg   ebx,eax
  403cb7:	nop    ebp
  403cba:	push   edi
  403cbb:	sti    
  403cbc:	adc    ebp,DWORD PTR [ebx-0x5a]
  403cbf:	push   ecx
  403cc0:	or     al,0x45
  403cc2:	push   cs
  403cc3:	sbb    eax,0x6c1d5302
  403cc8:	fld    DWORD PTR ss:[edx]
  403ccb:	dec    ebx
  403ccc:	xchg   esp,eax
  403ccd:	mov    ds:0xd7379ac0,eax
  403cd2:	xor    bl,bl
  403cd4:	jae    0x403c91
  403cd6:	not    DWORD PTR [ebx]
  403cd8:	jecxz  0x403c8f
  403cda:	cmp    DWORD PTR [ecx],edi
  403cdc:	xlat   BYTE PTR ds:[ebx]
  403cdd:	mov    dh,0xa4
  403cdf:	pop    ebx
  403ce0:	arpl   WORD PTR [ebx],ax
  403ce2:	xchg   esp,eax
  403ce3:	mov    dh,0xf2
  403ce5:	pop    edx
  403ce6:	lea    ecx,[ebx+0x602633aa]
  403cec:	pop    ecx
  403ced:	fs or  al,0x70
  403cf0:	cmp    DWORD PTR [edx+0x70],0xffffffd0
  403cf4:	fnstsw WORD PTR [esi-0x58]
  403cf7:	js     0x403cf4
  403cf9:	jnp    0x403d12
  403cfb:	loopne 0x403c8d
  403cfd:	xor    al,0x38
  403cff:	jno    0x403c82
  403d01:	add    DWORD PTR [ebx],ebp
  403d03:	xchg   DWORD PTR ds:0x2b972f77,ebp
  403d09:	cmp    esi,DWORD PTR [ebx+0x30bdcbd9]
  403d0f:	clc    
  403d10:	add    BYTE PTR [ebx],bl
  403d12:	mov    ch,0xb3
  403d14:	js     0x403cb1
  403d16:	ins    DWORD PTR es:[edi],dx
  403d17:	cmp    eax,0x71bb312d
  403d1c:	outs   dx,DWORD PTR ds:[esi]
  403d1d:	rol    DWORD PTR [ebx],0x76
  403d20:	pushf  
  403d21:	xchg   edi,eax
  403d22:	adc    DWORD PTR [eiz*4-0x13c3c7dd],eax
  403d29:	xor    ebx,DWORD PTR [esp+ebp*8]
  403d2c:	and    DWORD PTR [ebx-0x4c55cc23],ebx
  403d32:	push   edi
  403d33:	cld    
  403d34:	lds    esi,FWORD PTR [ebx]
  403d36:	cmp    DWORD PTR [ecx-0x68d38ef3],0x3a8ee07a
  403d40:	cmp    eax,0x8450f87b
  403d45:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403d46:	jge    0x403d74
  403d48:	pop    ds
  403d49:	nop
  403d4a:	cmp    bh,BYTE PTR fs:[edi-0x4]
  403d4e:	add    dl,al
  403d50:	stos   BYTE PTR es:[edi],al
  403d51:	mov    eax,0xcb233af2
  403d56:	out    dx,eax
  403d57:	(bad)  [edx+0x38]
  403d5a:	dec    edx
  403d5b:	sbb    DWORD PTR [ebx],ebx
  403d5d:	inc    esp
  403d5e:	cld    
  403d5f:	test   al,0xf
  403d61:	lahf   
  403d62:	pop    ebp
  403d63:	pop    ecx
  403d64:	sbb    eax,0x8b17a5a5
  403d69:	lods   al,BYTE PTR ds:[esi]
  403d6a:	mov    dh,0xfb
  403d6c:	inc    ebx
  403d6d:	xor    eax,ebp
  403d6f:	loopne 0x403d71
  403d71:	lds    edx,FWORD PTR [eax]
  403d73:	jg     0x403d50
  403d75:	sbb    eax,0x83802674
  403d7a:	jbe    0x403d73
  403d7c:	push   ebx
  403d7d:	dec    edi
  403d7e:	int3   
  403d7f:	xchg   esi,eax
  403d80:	cmp    al,0xcf
  403d82:	add    esp,ebp
  403d84:	scas   eax,DWORD PTR es:[edi]
  403d85:	add    DWORD PTR [ebp+0x47],ecx
  403d88:	data16 xor bl,BYTE PTR [eax]
  403d8b:	add    DWORD PTR [edi],esi
  403d8d:	push   es
  403d8e:	pop    esp
  403d8f:	mov    cl,BYTE PTR [eax+0xa09102b]
  403d95:	add    eax,0x549863ee
  403d9a:	int3   
  403d9b:	into   
  403d9c:	jne    0x403ddd
  403d9e:	jmp    0x8795b955
  403da3:	mov    cl,cl
  403da5:	fisubr DWORD PTR [ebx+ebx*4-0x7f]
  403da9:	or     DWORD PTR [ebp-0x6ac3f898],ebx
  403daf:	xor    al,0x2a
  403db1:	gs clc 
  403db3:	adc    edi,0x62
  403db6:	btc    DWORD PTR [ebp-0x91f7b08],ebx
  403dbd:	out    dx,eax
  403dbe:	test   al,0xc1
  403dc0:	hlt    
  403dc1:	sbb    DWORD PTR [ebp-0x13007c4e],edx
  403dc7:	and    al,0xc4
  403dc9:	or     DWORD PTR [edx+0x4f1641a1],ebx
  403dcf:	adc    esi,esi
  403dd1:	mov    esi,0xc8f9bff0
  403dd6:	in     al,0x56
  403dd8:	inc    eax
  403dd9:	nop
  403dda:	xlat   BYTE PTR ds:[ebx]
  403ddb:	shl    esp,0x8b
  403dde:	movs   DWORD PTR es:[edi],DWORD PTR fs:[esi]
  403de0:	xor    dh,BYTE PTR [edi+0x7b]
  403de3:	(bad)  
  403de4:	call   0xdfec:0xc66308fa
  403deb:	out    0xf0,al
  403ded:	je     0x403e4f
  403def:	pop    ds
  403df0:	cli    
  403df1:	xor    DWORD PTR [ebp+0x2aba92f5],esp
  403df7:	pop    esp
  403df8:	jmp    FWORD PTR [edx+0x14]
  403dfb:	cmp    esi,DWORD PTR [edx+0x69a8e8de]
  403e01:	jg     0x403e2e
  403e03:	or     ebx,eax
  403e05:	cmp    al,0x74
  403e07:	xor    eax,0x524f70f2
  403e0c:	dec    eax
  403e0d:	xor    BYTE PTR [eax],ah
  403e0f:	dec    esp
  403e10:	xlat   BYTE PTR ds:[ebx]
  403e11:	mov    BYTE PTR [edx],ah
  403e13:	das    
  403e14:	mov    al,0x84
  403e16:	xor    eax,0xb9b24125
  403e1b:	xor    BYTE PTR [esi+0x69],dh
  403e1e:	push   es
  403e1f:	pop    edi
  403e20:	mov    cl,0x6d
  403e22:	push   ds
  403e23:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403e24:	xor    BYTE PTR [edi+0x78],ah
  403e27:	cmp    DWORD PTR [edi-0x2a],ebx
  403e2a:	pop    ebx
  403e2b:	dec    ebp
  403e2c:	test   esp,0xa7b81979
  403e32:	add    dl,bh
  403e34:	shl    ebx,1
  403e36:	dec    esp
  403e37:	lock cmp BYTE PTR [eax],al
  403e3a:	cmp    eax,0xf7c0c60a
  403e3f:	leave  
  403e40:	mov    esp,0x72025959
  403e45:	imul   ecx,esi,0x18
  403e48:	fistp  WORD PTR [edx-0x49169d53]
  403e4e:	mov    esp,DWORD PTR [ecx-0x127b0834]
  403e54:	push   edi
  403e55:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403e56:	sbb    al,0x45
  403e58:	out    0xdf,al
  403e5a:	sub    BYTE PTR [ebx+0x1b],cl
  403e5d:	mov    esi,0x957180cf
  403e62:	shr    cl,cl
  403e64:	bound  esi,QWORD PTR [eax-0x32]
  403e67:	mov    WORD PTR [ebp+eiz*1+0xb8a5891],cs
  403e6e:	sbb    BYTE PTR [esi],ah
  403e70:	call   0x128e8b7c
  403e75:	sub    ebp,DWORD PTR [edi]
  403e77:	cli    
  403e78:	les    ecx,FWORD PTR [ebx]
  403e7a:	jmp    0x6c1d:0x2bfc21e2
  403e81:	nop
  403e82:	sub    esi,DWORD PTR [ebx+0x1c]
  403e85:	les    esi,FWORD PTR [esi+0x12]
  403e88:	mov    ds:0xf2a597f6,eax
  403e8d:	je     0x403e7e
  403e8f:	mov    WORD PTR [esi-0x69922b37],cs
  403e95:	jmp    0x403ef1
  403e97:	rep stos DWORD PTR es:[edi],eax
  403e99:	dec    eax
  403e9a:	mov    fs,esi
  403e9c:	(bad)
  403e9f:	(bad)  
  403ea0:	call   0x4b27d005
  403ea5:	cli    
  403ea6:	stos   BYTE PTR es:[edi],al
  403ea7:	cmp    eax,0x3d570206
  403eac:	adc    eax,0xf2d0485e
  403eb1:	je     0x403ef7
  403eb3:	xor    dh,BYTE PTR [eax]
  403eb5:	add    ah,0xcc
  403eb8:	cmp    eax,0x670052f8
  403ebd:	mov    ecx,0xc18faca1
  403ec2:	lea    esp,[ebp+0xa12c7aa]
  403ec8:	mov    edx,DWORD PTR [ebp+0x5d]
  403ecb:	xchg   edx,eax
  403ecc:	lock inc esi
  403ece:	push   esi
  403ecf:	xlat   BYTE PTR ds:[ebx]
  403ed0:	dec    edx
  403ed1:	adc    al,0x16
  403ed3:	mov    ch,0xb2
  403ed5:	sbb    DWORD PTR [esi-0x126037a9],edi
  403edb:	outs   dx,DWORD PTR ds:[esi]
  403edc:	xchg   DWORD PTR [edx],edi
  403ede:	xchg   edi,eax
  403edf:	jmp    0x403e94
  403ee1:	jge    0x403f19
  403ee3:	outs   dx,BYTE PTR ds:[esi]
  403ee4:	daa    
  403ee5:	jg     0x403f60
  403ee7:	jmp    0xec880680
  403eec:	ret    
  403eed:	pop    eax
  403eee:	test   al,0x10
  403ef0:	push   ebx
  403ef1:	jecxz  0x403f36
  403ef3:	gs xor al,0x37
  403ef7:	mov    ah,0x22
  403ef9:	xchg   ah,ah
  403efb:	clc    
  403efc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403efd:	dec    esp
  403efe:	push   ebp
  403eff:	loopne 0x403f3d
  403f01:	push   0xec682f60
  403f06:	sub    ecx,DWORD PTR [ecx+ecx*1]
  403f09:	bound  ebp,QWORD PTR [ebp+0x1c]
  403f0c:	retf   
  403f0d:	mov    dl,0xe3
  403f0f:	sub    BYTE PTR [edi+0x22],al
  403f12:	data16 movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403f14:	scas   al,BYTE PTR es:[edi]
  403f15:	pop    ebp
  403f16:	fucomp st(3)
  403f18:	jg     0x403ee8
  403f1a:	fisub  WORD PTR [edi+0x44]
  403f1d:	push   es
  403f1e:	jo     0x403f70
  403f20:	jbe    0x403ea8
  403f22:	jb     0x403f96
  403f24:	mov    edx,cs
  403f26:	ficomp DWORD PTR [ecx+0x4a]
  403f29:	fld1   
  403f2b:	add    esp,edx
  403f2d:	out    0xb6,eax
  403f2f:	hlt    
  403f30:	in     al,0xbd
  403f32:	pop    eax
  403f33:	call   0x9885:0x733c092
  403f3a:	push   ebp
  403f3b:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403f3d:	sbb    al,0xa3
  403f3f:	mov    BYTE PTR [ebx+0xb],bl
  403f42:	fnstenv [edx+0x54]
  403f45:	cwde   
  403f46:	popf   
  403f47:	cmp    ecx,0xffffff82
  403f4a:	arpl   bp,cx
  403f4c:	pop    esp
  403f4d:	pop    edi
  403f4e:	jmp    0x2e2a:0xd7910d90
  403f55:	push   ebp
  403f56:	mov    edx,0xd6adda0a
  403f5b:	loop   0x403fc2
  403f5d:	ds add eax,0x31b5ad6f
  403f63:	xor    ebp,DWORD PTR [ebp-0x31]
  403f66:	dec    ecx
  403f67:	shl    BYTE PTR ds:0x94cbe85c,cl
  403f6d:	push   edi
  403f6e:	test   al,0x59
  403f70:	in     al,0xb5
  403f72:	repnz mov dl,BYTE PTR [edx]
  403f75:	cmp    BYTE PTR [edx+0x4d],cl
  403f78:	push   eax
  403f79:	not    bh
  403f7b:	jno    0x403f05
  403f7d:	cmp    al,0xf
  403f7f:	repnz in al,0x4
  403f82:	fsub   st,st(3)
  403f84:	and    dh,al
  403f86:	ficom  DWORD PTR [ebx]
  403f88:	inc    esi
  403f89:	xchg   ebp,eax
  403f8a:	add    eax,0x34137829
  403f8f:	push   cs
  403f90:	jecxz  0x403f32
  403f92:	jmp    0xccf855c8
  403f97:	int3   
  403f98:	cli    
  403f99:	push   ecx
  403f9a:	push   ebp
  403f9b:	sbb    bl,BYTE PTR [ecx+0x5d]
  403f9e:	imul   esp,DWORD PTR [esi-0x51],0xffffffe6
  403fa2:	iret   
  403fa3:	xchg   DWORD PTR fs:[ebx+0x3fc9add3],esi
  403faa:	inc    ebx
  403fab:	leave  
  403fac:	jge    0x403fb1
  403fae:	rcr    bl,0xf1
  403fb1:	div    DWORD PTR [ecx-0x5d]
  403fb4:	int    0xb
  403fb6:	mov    bl,0xcc
  403fb8:	inc    ecx
  403fb9:	add    al,0x68
  403fbb:	mov    ebp,ecx
  403fbd:	sbb    al,0x1d
  403fbf:	imul   ebx,DWORD PTR [esi+0x15],0xbf614a6c
  403fc6:	std    
  403fc7:	pushf  
  403fc8:	popa   
  403fc9:	pop    edi
  403fca:	jle    0x404005
  403fcc:	xchg   edx,eax
  403fcd:	int    0xf4
  403fcf:	sahf   
  403fd0:	inc    eax
  403fd1:	test   BYTE PTR [eax-0x7264f997],0x6b
  403fd8:	fs pusha 
  403fda:	into   
  403fdb:	mov    esp,0xf3d752b8
  403fe0:	pop    esp
  403fe1:	or     eax,0x54ac9f52
  403fe6:	in     al,dx
  403fe7:	sbb    edi,ecx
  403fe9:	outs   dx,DWORD PTR ds:[esi]
  403fea:	sub    bh,BYTE PTR [esi]
  403fec:	push   edx
  403fed:	lock xchg WORD PTR [esi+0x292c3ce1],bp
  403ff5:	fwait
  403ff6:	outs   dx,BYTE PTR ds:[esi]
  403ff7:	xlat   BYTE PTR ds:[ebx]
  403ff8:	in     al,0x9
  403ffa:	xor    eax,0x55d77515
  403fff:	add    edx,DWORD PTR [ebx]
  404001:	push   ds
  404002:	stos   DWORD PTR es:[edi],eax
  404003:	and    al,ah
  404005:	shl    DWORD PTR [edi],0x5d
  404008:	mov    ah,0x58
  40400a:	xor    DWORD PTR ds:0xef32fdcc,eax
  404010:	imul   ecx,DWORD PTR [ebx+ebx*1-0x42],0x3462742f
  404018:	loop   0x403feb
  40401a:	dec    esi
  40401b:	cwde   
  40401c:	mov    ebx,0x499c7cf7
  404021:	cmp    ch,cl
  404023:	adc    eax,DWORD PTR [eax]
  404025:	fprem  
  404027:	pop    DWORD PTR [eax-0x5c]
  40402a:	jo     0x40407e
  40402c:	loope  0x40409f
  40402e:	push   ecx
  40402f:	imul   edx,DWORD PTR [edi],0xffffffa6
  404032:	push   cs
  404033:	mov    fs,ecx
  404035:	pop    eax
  404036:	or     al,0x51
  404038:	sti    
  404039:	push   edx
  40403a:	jecxz  0x403fea
  40403c:	das    
  40403d:	stos   DWORD PTR es:[edi],eax
  40403e:	xor    ebx,DWORD PTR [edx]
  404040:	sbb    bl,BYTE PTR [eax+0x5b667860]
  404046:	add    al,0xdf
  404048:	in     al,0x8f
  40404a:	sar    BYTE PTR [ebp-0x6a933551],1
  404050:	cli    
  404051:	aad    0x4b
  404053:	sbb    al,0x2a
  404055:	xor    BYTE PTR [eax+0x3d5f35bb],0x40
  40405c:	jnp    0x404018
  40405e:	jae    0x404008
  404060:	pop    ebx
  404061:	cwde   
  404062:	lods   al,BYTE PTR ds:[esi]
  404063:	jmp    0x404008
  404065:	ja     0x404039
  404067:	stc    
  404068:	stos   BYTE PTR es:[edi],al
  404069:	or     al,0x38
  40406b:	test   DWORD PTR [ecx+0xbd429d8],ebx
  404071:	jnp    0x403ff8
  404073:	sbb    BYTE PTR [eax+ebx*8-0x2f89e34],dl
  40407a:	jae    0x4040a3
  40407c:	mov    ecx,gs
  40407e:	std    
  40407f:	outs   dx,DWORD PTR ds:[esi]
  404080:	loopne 0x404045
  404082:	fisubr WORD PTR [ebx+edi*8+0x4456c37f]
  404089:	dec    ebp
  40408a:	push   eax
  40408b:	gs fs add dl,bh
  40408f:	jg     0x4040bc
  404091:	sub    ch,BYTE PTR [esi+0x29e7ca06]
  404097:	outs   dx,BYTE PTR ds:[esi]
  404098:	xchg   ebp,eax
  404099:	jno    0x4040b0
  40409b:	xchg   ebp,eax
  40409c:	jle    0x4040b5
  40409e:	fld    QWORD PTR [edi+eiz*1+0x47a4e033]
  4040a5:	ins    DWORD PTR es:[edi],dx
  4040a6:	lahf   
  4040a7:	jb     0x40402f
  4040a9:	mov    esp,0x1c8d18a9
  4040ae:	mov    esp,0x810ef580
  4040b3:	ret    0xf4b2
  4040b6:	adc    ch,BYTE PTR [esi+0x1f37dd36]
  4040bc:	push   cs
  4040bd:	test   edx,edx
  4040bf:	xchg   edi,eax
  4040c0:	(bad)
  4040c4:	out    dx,al
  4040c5:	and    ecx,DWORD PTR [eax+0xb48afed]
  4040cb:	sahf   
  4040cc:	cmp    ah,BYTE PTR [ecx+ecx*2+0x12]
  4040d0:	test   eax,0xc1962a5e
  4040d5:	sub    dh,0xcc
  4040d8:	test   ah,ah
  4040da:	push   cs
  4040db:	jb     0x40415c
  4040dd:	mov    edi,0x301fc7ff
  4040e2:	adc    eax,0x9fe1f9b7
  4040e7:	xor    ecx,DWORD PTR [edx+0x76]
  4040ea:	add    ah,BYTE PTR [edx-0x6a316ec2]
  4040f0:	mov    WORD PTR [eax+0x1b],ss
  4040f3:	les    ebp,FWORD PTR [eax+0x7b]
  4040f6:	adc    DWORD PTR [edi+eiz*4],edi
  4040f9:	jno    0x404144
  4040fb:	xor    esp,edx
  4040fd:	xor    al,al
  4040ff:	cmp    bl,cl
  404101:	fistp  QWORD PTR [edx-0x27872375]
  404107:	inc    eax
  404108:	mov    ah,0x32
  40410a:	mov    esp,0x376a91b5
  40410f:	fwait
  404110:	bound  edx,QWORD PTR [eax-0x5ac3879a]
  404116:	pop    esp
  404117:	test   al,0xef
  404119:	ja     0x4040d6
  40411b:	icebp  
  40411c:	addr16 imul esp,ecx,0x78
  404120:	pop    eax
  404121:	cwde   
  404122:	inc    ebx
  404123:	xor    BYTE PTR [edx-0x3a],cl
  404126:	fs dec esi
  404128:	fisub  WORD PTR [esi+0x398ca31]
  40412e:	loopne 0x4040b6
  404130:	popf   
  404131:	xor    ebp,DWORD PTR [edi*8+0x4ceaaabd]
  404138:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404139:	imul   edx,DWORD PTR [eax],0x46eee88b
  40413f:	jo     0x4040cf
  404141:	dec    ebp
  404142:	jno    0x4041b8
  404144:	jns    0x404122
  404146:	dec    DWORD PTR [ebp+0x28]
  404149:	push   edi
  40414a:	push   esi
  40414b:	cmp    ah,cl
  40414d:	jmp    0x3856e45a
  404152:	pop    edx
  404153:	and    al,0x46
  404155:	lods   al,BYTE PTR ds:[esi]
  404156:	retf   0x26e7
  404159:	pushf  
  40415a:	sbb    esp,ebp
  40415c:	jae    0x40411a
  40415e:	or     eax,0x99ae602c
  404163:	popf   
  404164:	sbb    bh,al
  404166:	jl     0x4040ec
  404168:	add    bh,BYTE PTR [ecx+ebx*1]
  40416b:	arpl   WORD PTR [esi+ebx*2-0xf02a860],sp
  404172:	inc    edi
  404173:	jl     0x4041a1
  404175:	gs jge 0x404157
  404178:	enter  0xc279,0xc7
  40417c:	jb     0x4041b9
  40417e:	(bad)  
  404180:	xor    ecx,DWORD PTR [edx-0x80]
  404183:	sar    DWORD PTR [ebx-0x55],cl
  404186:	lock es inc eax
  40418a:	xchg   edi,eax
  40418b:	xchg   ebp,eax
  40418c:	xchg   esp,eax
  40418d:	jnp    0x4041c4
  40418f:	outs   dx,DWORD PTR ds:[esi]
  404190:	dec    esi
  404191:	in     eax,0xbc
  404193:	in     al,0xae
  404195:	adc    DWORD PTR [ebp-0x32],edi
  404198:	lods   eax,DWORD PTR ds:[esi]
  404199:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40419a:	jnp    0x404130
  40419c:	push   0x213c0927
  4041a1:	imul   bh
  4041a3:	gs pop es
  4041a5:	mov    edi,?
  4041a7:	je     0x40417d
  4041a9:	adc    DWORD PTR ds:0xf30d1876,ebx
  4041af:	cmp    DWORD PTR [edx],0xc7e64862
  4041b5:	mov    DWORD PTR [esi+0x675ac574],esi
  4041bb:	dec    ebp
  4041bc:	mov    esp,0xfc3e18c4
  4041c1:	daa    
  4041c2:	pop    ebp
  4041c3:	cdq    
  4041c4:	out    0xaa,al
  4041c6:	dec    esi
  4041c7:	dec    esp
  4041c8:	sub    BYTE PTR [edx],ah
  4041ca:	push   edi
  4041cb:	xor    ecx,DWORD PTR [eax]
  4041cd:	sti    
  4041ce:	(bad)  
  4041cf:	push   ebp
  4041d0:	xor    ecx,DWORD PTR [esi]
  4041d2:	retf   
  4041d3:	sub    esi,DWORD PTR [edi-0x46]
  4041d6:	das    
  4041d7:	es fs jo 0x40420e
  4041db:	sbb    DWORD PTR [esi+0x73],eax
  4041de:	push   edx
  4041df:	ja     0x404199
  4041e1:	(bad)  
  4041e2:	xor    BYTE PTR [esi+0x26],dl
  4041e5:	inc    ecx
  4041e6:	repz xchg ebp,eax
  4041e8:	push   ebp
  4041e9:	xchg   esp,eax
  4041ea:	inc    eax
  4041eb:	or     ch,ah
  4041ed:	(bad)  
  4041ee:	sar    DWORD PTR gs:[ecx-0x7c44363b],0xad
  4041f6:	dec    edx
  4041f7:	jmp    0x2a4f:0xccee516c
  4041fe:	jmp    0xed9a2387
  404203:	fst    DWORD PTR [ecx]
  404205:	mov    cl,0x3b
  404207:	cli    
  404208:	out    dx,eax
  404209:	jl     0x404233
  40420b:	jle    0x404223
  40420d:	ret    
  40420e:	mov    ah,0x76
  404210:	jbe    0x80cfa4d3
  404216:	out    dx,al
  404217:	pop    ebp
  404218:	test   al,0xfd
  40421a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40421b:	xor    eax,0x98fb9384
  404220:	aam    0xb
  404222:	pusha  
  404223:	mov    edi,0xe426fb63
  404228:	fist   WORD PTR [esi-0x48]
  40422b:	call   0x761ac12c
  404230:	or     ah,BYTE PTR [edx+eiz*8]
  404233:	std    
  404234:	mov    al,0x6c
  404236:	push   edi
  404237:	dec    esi
  404238:	popa   
  404239:	call   0xf448a9cd
  40423e:	sub    DWORD PTR [edx+0x56],ebx
  404241:	retf   
  404242:	out    0x6f,eax
  404244:	ret    0x13b5
  404247:	cli    
  404248:	mov    ch,0x82
  40424a:	jp     0x40425f
  40424c:	iret   
  40424d:	dec    ebp
  40424e:	inc    edx
  40424f:	and    esi,DWORD PTR [edi+0x5c0724bf]
  404255:	and    ebx,DWORD PTR [eax-0x7da46096]
  40425b:	(bad)  
  40425c:	stos   DWORD PTR es:[edi],eax
  40425d:	outs   dx,DWORD PTR ds:[esi]
  40425e:	cdq    
  40425f:	sbb    eax,0x9adb0911
  404264:	pop    esp
  404265:	inc    esp
  404266:	dec    esp
  404267:	xlat   BYTE PTR ds:[ebx]
  404268:	sub    ch,ah
  40426a:	aas    
  40426b:	push   edi
  40426c:	scas   eax,DWORD PTR es:[edi]
  40426d:	nop
  40426e:	pusha  
  40426f:	mov    ds:0x93f0ce70,eax
  404274:	ins    DWORD PTR es:[edi],dx
  404275:	sbb    eax,0xa9156e77
  40427a:	sbb    DWORD PTR [ebx+0x3],eax
  40427d:	xor    al,0x50
  40427f:	dec    eax
  404280:	gs cld 
  404282:	or     eax,0x1add9653
  404287:	ja     0x404269
  404289:	out    0xfd,al
  40428b:	inc    edx
  40428c:	cld    
  40428d:	jbe    0x404287
  40428f:	adc    DWORD PTR [ebx+eax*1+0x55],esi
  404293:	xchg   esp,eax
  404294:	pop    esi
  404295:	into   
  404296:	mov    esp,0x9147a432
  40429b:	or     BYTE PTR [ecx+0x2],ah
  40429e:	xor    bl,dl
  4042a0:	or     DWORD PTR [ebx],0x4ecd4d16
  4042a6:	mov    al,ds:0xef44d492
  4042ab:	fistp  DWORD PTR [eax]
  4042ad:	jb     0x4042f5
  4042af:	fisub  WORD PTR [ebx]
  4042b1:	(bad)  
  4042b2:	mov    esi,0xf777702c
  4042b7:	sbb    ebx,DWORD PTR [esi-0x2dbe9c5e]
  4042bd:	loop   0x404293
  4042bf:	nop
  4042c0:	test   bl,dh
  4042c2:	mov    ebx,0x5c4c56da
  4042c7:	pop    ds
  4042c8:	cmp    al,0x9b
  4042ca:	test   DWORD PTR [esi-0x32f87bd9],edi
  4042d0:	xchg   ebp,eax
  4042d1:	cmc    
  4042d2:	cs inc ebp
  4042d4:	fbstp  TBYTE PTR [ebx-0x19]
  4042d7:	xor    BYTE PTR [esi+0xc],ch
  4042da:	daa    
  4042db:	dec    ecx
  4042dc:	add    al,0x0
  4042de:	sub    DWORD PTR [ebx+0x5947a6fd],ebp
  4042e4:	in     eax,0x60
  4042e6:	js     0x40426f
  4042e8:	(bad)  
  4042e9:	std    
  4042ea:	ds loopne 0x4042cd
  4042ed:	jo     0x404348
  4042ef:	mov    bh,bl
  4042f1:	rcl    DWORD PTR [ecx],1
  4042f3:	ins    BYTE PTR es:[edi],dx
  4042f4:	sbb    ah,ch
  4042f6:	mov    al,0x33
  4042f8:	inc    ebx
  4042f9:	clc    
  4042fa:	in     eax,0x31
  4042fc:	mov    esi,0xcddaed63
  404301:	pop    eax
  404302:	mov    cl,0x27
  404304:	sbb    al,0x27
  404306:	test   al,0xd6
  404308:	jbe    0x4042fc
  40430a:	ret    
  40430b:	rcl    BYTE PTR [ecx-0x52],0xd4
  40430f:	leave  
  404310:	popa   
  404311:	cwde   
  404312:	and    BYTE PTR [ebx],0xc
  404315:	es xchg edi,eax
  404317:	div    al
  404319:	push   0x4d
  40431b:	fs or  al,0x9a
  40431e:	mov    esp,0x132b6e03
  404323:	jle    0x4042ff
  404325:	inc    eax
  404326:	mov    dl,0xb8
  404328:	sti    
  404329:	cmp    eax,0xb4c130f8
  40432e:	jl     0x404354
  404330:	mov    bl,BYTE PTR [ecx+0x11]
  404333:	int3   
  404334:	outs   dx,DWORD PTR ds:[esi]
  404335:	nop
  404336:	shl    DWORD PTR [eax],0x7e
  404339:	rol    BYTE PTR [eax+esi*1-0x3b],0xee
  40433e:	in     eax,0x69
  404340:	xchg   esi,eax
  404341:	or     al,0xe0
  404343:	gs xchg ecx,eax
  404345:	jp     0x4042df
  404347:	loopne 0x404302
  404349:	fiadd  WORD PTR [eax-0x6ddd9d4]
  40434f:	push   es
  404350:	out    0x3f,al
  404352:	ins    DWORD PTR es:[edi],dx
  404353:	mov    bh,0x8d
  404355:	push   edx
  404356:	mov    ebx,edi
  404358:	mov    ch,0x85
  40435a:	dec    esp
  40435b:	icebp  
  40435c:	dec    eax
  40435d:	out    dx,al
  40435e:	adc    al,0xb
  404360:	mov    eax,ds:0x4ef857dd
  404365:	sub    esp,DWORD PTR [edi+0x15ede2db]
  40436b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40436c:	imul   ecx,DWORD PTR [edx],0xffffffbd
  40436f:	pop    ss
  404370:	test   eax,0x19faac
  404375:	dec    esi
  404376:	cwde   
  404377:	adc    DWORD PTR [ebp+eax*2-0x22],esi
  40437b:	mov    edx,0xd4fe8a51
  404380:	stc    
  404381:	retf   0x11d3
  404384:	popa   
  404385:	dec    eax
  404386:	mov    ebp,0xfb61d6bc
  40438b:	(bad)  
  40438c:	jp     0x4043b6
  40438e:	mov    al,0xd4
  404390:	or     eax,0xa7ef57f4
  404395:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404396:	test   BYTE PTR [ebp+0x6c3d3140],ch
  40439c:	clc    
  40439d:	cwde   
  40439e:	aam    0xa0
  4043a0:	dec    ebx
  4043a1:	ret    
  4043a2:	jg     0x404357
  4043a4:	in     eax,0xe4
  4043a6:	adc    eax,esp
  4043a8:	pop    ss
  4043a9:	mov    cl,0xe3
  4043ab:	mul    DWORD PTR [esi+ebp*8+0xb]
  4043af:	push   es
  4043b0:	sub    bl,ch
  4043b2:	test   al,0xb9
  4043b4:	pusha  
  4043b5:	fcom   QWORD PTR [ecx]
  4043b7:	test   al,ah
  4043b9:	xor    eax,0x6491d907
  4043be:	sub    ebp,eax
  4043c0:	inc    esi
  4043c1:	jnp    0x40436c
  4043c3:	fidiv  DWORD PTR [ecx+0x6b]
  4043c6:	idiv   BYTE PTR [edx-0x35]
  4043c9:	(bad)  
  4043ca:	pushf  
  4043cb:	sub    bl,BYTE PTR [ebx+0x4b537bb6]
  4043d1:	fcmovu st,st(1)
  4043d3:	lea    ecx,[ecx]
  4043d5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4043d6:	and    BYTE PTR [ecx-0x5e],al
  4043d9:	sbb    eax,0xe3df076d
  4043de:	mov    ds:0xbf4a9762,al
  4043e3:	mov    ecx,0x65406ee3
  4043e8:	fld    TBYTE PTR ds:0xb224327d
  4043ee:	stos   BYTE PTR es:[edi],al
  4043ef:	push   esp
  4043f0:	sbb    al,BYTE PTR [eax-0x2b16e468]
  4043f6:	add    edi,DWORD PTR [edi+0x27705e54]
  4043fc:	mov    ds:0x25f4f301,al
  404401:	jne    0x404425
  404403:	jge    0x404484
  404405:	xchg   esp,edi
  404407:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404408:	sub    eax,0x22e34e79
  40440d:	jbe    0x4043c0
  40440f:	or     BYTE PTR [eax-0x6f6b0d8],ah
  404415:	hlt    
  404416:	adc    eax,0x2202a311
  40441b:	arpl   si,dx
  40441d:	in     al,dx
  40441e:	js     0x40445d
  404420:	sbb    edi,DWORD PTR ds:0x1dd59652
  404426:	jg     0x4044a3
  404428:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404429:	xor    DWORD PTR [ebp+0x36],ebx
  40442c:	in     eax,dx
  40442d:	inc    eax
  40442e:	sahf   
  40442f:	and    bl,ch
  404431:	cmp    ebx,DWORD PTR [edi]
  404433:	cs lock adc eax,0xa3963b03
  40443a:	in     eax,0x8d
  40443c:	daa    
  40443d:	and    al,0x1d
  40443f:	xchg   ecx,eax
  404440:	push   ds
  404441:	and    ah,BYTE PTR [ebx+0x6c]
  404444:	test   BYTE PTR ds:[edi-0x7fd52ff],dh
  40444b:	data16 xlat BYTE PTR ss:[ebx]
  40444e:	iret   
  40444f:	pop    edx
  404450:	inc    esi
  404451:	or     DWORD PTR [edx+0x517e6298],ebx
  404457:	out    dx,al
  404458:	cmp    ah,dh
  40445a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40445b:	imul   ecx,DWORD PTR [ecx],0x70
  40445e:	lods   eax,DWORD PTR ds:[esi]
  40445f:	mov    WORD PTR [ebx-0x10],gs
  404462:	cmp    eax,0x92173ec3
  404467:	xor    DWORD PTR [esi+0x7e7b0268],0xfffffffe
  40446e:	xor    DWORD PTR [ebp+0x33],edi
  404471:	mov    ebp,0x1adf7755
  404476:	ja     0x404465
  404478:	loope  0x404492
  40447a:	stos   BYTE PTR es:[edi],al
  40447b:	sbb    DWORD PTR [esi+0x71],esp
  40447e:	jge    0x404485
  404480:	rol    DWORD PTR [esi-0x6e],cl
  404483:	or     eax,0x3f16a73d
  404488:	sbb    DWORD PTR [ecx-0x1103ad18],esi
  40448e:	sar    DWORD PTR [ebx],0x97
  404491:	inc    eax
  404492:	rcr    BYTE PTR [ecx],cl
  404494:	stc    
  404495:	xor    DWORD PTR [ebp+0x2],esp
  404498:	add    cl,BYTE PTR [ecx]
  40449a:	iret   
  40449b:	aas    
  40449c:	fidivr WORD PTR [eax-0x5491252]
  4044a2:	add    al,0x86
  4044a4:	stc    
  4044a5:	inc    ecx
  4044a6:	imul   ebx,ecx,0xc2ccf0a3
  4044ac:	stc    
  4044ad:	fdiv   DWORD PTR [edi-0x76ebe935]
  4044b3:	stc    
  4044b4:	dec    edi
  4044b5:	repz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4044b7:	pop    ecx
  4044b8:	fxch   st(0)
  4044ba:	jmp    0x96e055cf
  4044bf:	jo     0x4044fb
  4044c1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4044c2:	jo     0x4044a2
  4044c4:	rep stos BYTE PTR es:[edi],al
  4044c6:	arpl   WORD PTR [edx-0x57],ax
  4044c9:	sbb    eax,0xba34bb72
  4044ce:	inc    ecx
  4044cf:	add    BYTE PTR [esi],ah
  4044d1:	sti    
  4044d2:	jmp    0xe9cd:0xe36d480d
  4044d9:	(bad)  
  4044db:	scas   eax,DWORD PTR es:[edi]
  4044dc:	adc    al,0x94
  4044de:	push   ss
  4044df:	in     al,dx
  4044e0:	in     eax,dx
  4044e1:	int3   
  4044e2:	adc    DWORD PTR [ebp+0x53ea9886],0x281d9619
  4044ec:	dec    ecx
  4044ed:	scas   al,BYTE PTR es:[edi]
  4044ee:	add    esp,DWORD PTR [eax]
  4044f0:	sbb    dl,bh
  4044f2:	cmp    bl,BYTE PTR [esi-0x34]
  4044f5:	jle    0x404549
  4044f7:	fs dec esi
  4044f9:	imul   edi,DWORD PTR [ebp+0xa936ca7],0x427b9edb
  404503:	adc    ah,BYTE PTR [ebp+0x1297ea2e]
  404509:	lahf   
  40450a:	mov    DWORD PTR [esi+edi*1-0x43c22ab9],esp
  404511:	test   eax,0x466d5412
  404516:	js     0x4044a0
  404518:	or     bh,BYTE PTR [edx+eiz*4-0x6c603d6f]
  40451f:	jecxz  0x404525
  404521:	retf   0x80c0
  404524:	(bad)  
  404525:	outs   dx,BYTE PTR ds:[esi]
  404526:	jbe    0x404563
  404528:	jge    0x404569
  40452a:	iret   
  40452b:	int3   
  40452c:	out    0x16,eax
  40452e:	loopne 0x404592
  404530:	leave  
  404531:	lea    esp,[edi-0x9]
  404534:	xchg   BYTE PTR [ecx-0x30],dh
  404537:	jmp    0x4045b8
  404539:	adc    al,0x4b
  40453b:	call   0x6a44:0xc1e41c03
  404542:	xor    al,0xcc
  404545:	mov    ds:0xd46a0d1d,eax
  40454a:	sub    eax,DWORD PTR [eax+ecx*1+0x7a3c7816]
  404551:	cmc    
  404552:	test   al,0x16
  404554:	enter  0x5af8,0x99
  404558:	sbb    al,0x5a
  40455a:	icebp  
  40455b:	call   0xd24:0xb416a553
  404562:	fimul  DWORD PTR [edi+0x61865811]
  404568:	and    eax,0x7f0e2d86
  40456d:	push   eax
  40456e:	stos   BYTE PTR es:[edi],al
  40456f:	stos   DWORD PTR es:[edi],eax
  404570:	and    eax,0x43bc270f
  404575:	xor    al,0x64
  404577:	test   eax,0x2320afa3
  40457c:	xchg   ecx,eax
  40457d:	imul   ecx,DWORD PTR [edx+0x28],0x5af46833
  404584:	popa   
  404585:	sub    BYTE PTR [ebx+0x4d438e2a],dh
  40458b:	outs   dx,BYTE PTR ds:[esi]
  40458c:	rcr    DWORD PTR [ecx+0x57f51f9d],cl
  404592:	dec    ebx
  404593:	out    dx,eax
  404594:	(bad)  
  404595:	jle    0x404538
  404597:	(bad)  
  404598:	frstor [ecx+0x4c2408c3]
  40459e:	pushf  
  40459f:	sbb    eax,0x5953d378
  4045a4:	les    ebx,FWORD PTR [eax-0x37]
  4045a7:	(bad)  
  4045a8:	imul   ebp,DWORD PTR [esi-0x54],0x86842648
  4045af:	fcomp  st(7)
  4045b1:	mov    esp,0x1c54f348
  4045b6:	int    0x71
  4045b8:	mov    WORD PTR ds:0x8a62041f,ss
  4045be:	lods   eax,DWORD PTR ds:[esi]
  4045bf:	jg     0x404610
  4045c1:	or     BYTE PTR [ebx-0x3b3c0848],ah
  4045c7:	jmp    0x4045f1
  4045c9:	inc    eax
  4045ca:	div    BYTE PTR [edi]
  4045cc:	inc    edx
  4045cd:	push   ebx
  4045ce:	cmp    al,0x32
  4045d0:	or     eax,ecx
  4045d2:	fcmovnb st,st(6)
  4045d4:	mov    ecx,0x22404509
  4045d9:	and    BYTE PTR [edi+ecx*8-0x55102077],ah
  4045e0:	mov    edx,edx
  4045e2:	bswap  edi
  4045e4:	repnz sub eax,0x5b46520f
  4045ea:	(bad)  
  4045ec:	sub    DWORD PTR [esi-0x3f],esi
  4045ef:	pusha  
  4045f0:	aad    0x88
  4045f2:	in     al,0xe9
  4045f4:	outs   dx,DWORD PTR ds:[esi]
  4045f5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4045f6:	icebp  
  4045f7:	and    cl,BYTE PTR [ebx+0xdc73d00]
  4045fd:	cmp    ah,BYTE PTR [esi-0x2cdf9b1a]
  404603:	dec    esi
  404604:	xchg   edx,eax
  404605:	sbb    bh,BYTE PTR [ecx-0x58a7d354]
  40460b:	cmp    esi,DWORD PTR gs:[ebx-0x18818858]
  404612:	jl     0x404611
  404614:	scas   al,BYTE PTR es:[edi]
  404615:	lea    edx,[edi-0x61]
  404618:	not    ebx
  40461a:	inc    ebp
  40461b:	mov    eax,ds:0x41873572
  404620:	dec    ebp
  404621:	cmp    bh,ch
  404623:	sbb    bh,ch
  404625:	pop    edi
  404626:	lods   al,BYTE PTR ds:[esi]
  404627:	sub    dl,BYTE PTR [ebx-0x3f7fec00]
  40462d:	aaa    
  40462e:	stos   DWORD PTR es:[edi],eax
  40462f:	frstor [edx+edx*2+0x39]
  404633:	dec    edx
  404634:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404635:	aam    0x2
  404637:	popa   
  404638:	pusha  
  404639:	test   BYTE PTR ds:[ebx],cl
  40463c:	ja     0x404667
  40463e:	xchg   edx,eax
  40463f:	dec    edx
  404640:	push   0x27
  404642:	push   esi
  404643:	sub    BYTE PTR [edi+0x11ac45ed],bl
  404649:	shl    bl,cl
  40464b:	sbb    al,BYTE PTR [ecx+0xa]
  40464e:	and    al,0x70
  404650:	xor    ebx,DWORD PTR [ebx+0x75]
  404653:	div    DWORD PTR [ecx]
  404655:	xchg   esi,eax
  404656:	add    DWORD PTR [eax+0xe431135],ebp
  40465c:	xor    edi,ebp
  40465e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40465f:	push   edi
  404660:	xchg   esi,eax
  404661:	jmp    0xf27346b4
  404666:	and    ah,al
  404668:	or     eax,0x3ca199b
  40466d:	out    0x96,eax
  40466f:	mov    ebp,DWORD PTR [esi-0xf6682c1]
  404675:	rcl    edx,0xf
  404678:	lods   al,BYTE PTR ds:[esi]
  404679:	imul   ebx,DWORD PTR [ebp-0x39dac12a],0x10adea41
  404683:	mov    al,ds:0x2f92992
  404688:	lock xor al,0xbc
  40468b:	(bad)  
  40468c:	in     al,dx
  40468d:	add    BYTE PTR [ebx-0x715bd3ab],0x35
  404694:	xchg   ebp,eax
  404695:	push   edx
  404696:	jge    0x40461d
  404698:	popa   
  404699:	mov    cl,BYTE PTR [edi]
  40469b:	push   eax
  40469c:	sar    DWORD PTR [ebx-0x3b],0xfb
  4046a0:	std    
  4046a1:	or     BYTE PTR [ebx+esi*2+0x7],0x0
  4046a6:	bound  ebx,QWORD PTR [eax]
  4046a8:	cmp    edx,DWORD PTR [edx]
  4046aa:	push   ebx
  4046ab:	nop    DWORD PTR [edi-0xa]
  4046af:	lsl    edi,WORD PTR [edi]
  4046b2:	stos   DWORD PTR es:[edi],eax
  4046b3:	adc    al,0x91
  4046b5:	in     al,dx
  4046b6:	push   ds
  4046b7:	adc    al,0xbe
  4046b9:	pop    eax
  4046ba:	sbb    BYTE PTR [esi-0x67],0x4
  4046be:	xor    edi,edx
  4046c0:	or     esp,DWORD PTR [eax+0x62832be6]
  4046c6:	mov    bl,0x59
  4046c8:	and    eax,0xf82f1a0b
  4046cd:	bound  edi,QWORD PTR [ecx-0x74]
  4046d0:	and    DWORD PTR [ebp-0x53691802],ecx
  4046d6:	loope  0x4046e5
  4046d8:	jle    0x404707
  4046da:	leave  
  4046db:	mov    BYTE PTR ds:0xcb72d71b,bh
  4046e1:	rcr    DWORD PTR [edx-0x5e],1
  4046e4:	push   edi
  4046e5:	adc    al,0xdd
  4046e7:	mov    WORD PTR [edx],ds
  4046e9:	add    DWORD PTR [ebx-0x658e29c6],0xc25801fd
  4046f3:	fwait
  4046f4:	loopne 0x404754
  4046f6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4046f7:	(bad)  
  4046f8:	call   0xa719:0xfd589b4b
  4046ff:	cdq    
  404700:	dec    ecx
  404701:	pop    edi
  404702:	sbb    esp,DWORD PTR [ebp+0x7b]
  404705:	ja     0x40469e
  404707:	add    al,0x16
  404709:	dec    esi
  40470a:	out    0xcb,eax
  40470c:	sbb    BYTE PTR [esi],0xc3
  40470f:	inc    ecx
  404710:	mov    eax,ds:0xbb02c60
  404715:	xor    ah,bh
  404717:	mov    esp,0x7a778d91
  40471c:	imul   ebx,DWORD PTR [edi+0x31],0x337079b3
  404723:	lea    edx,[ecx]
  404725:	sbb    BYTE PTR [ebx],ah
  404727:	sbb    eax,0x658a0e06
  40472c:	xor    esi,DWORD PTR [esi+0x32]
  40472f:	sbb    dh,BYTE PTR [eax-0x54cfa955]
  404735:	cwde   
  404736:	pushf  
  404737:	push   esp
  404738:	jmp    0x8a35:0x3d234622
  40473f:	imul   ebx,DWORD PTR [edi-0x2e],0x667c0959
  404746:	stos   BYTE PTR es:[edi],al
  404747:	push   ss
  404748:	pop    esi
  404749:	and    DWORD PTR [edx*8+0x3140d630],0xffffff86
  404751:	mov    edx,0x1655c739
  404756:	mov    eax,ds:0x7e7ab630
  40475b:	jge    0x4047a9
  40475d:	test   BYTE PTR [eax],al
  40475f:	pop    edi
  404761:	pop    ss
  404762:	rol    dh,1
  404764:	js     0x40475b
  404766:	pusha  
  404767:	push   0x13
  404769:	mov    dl,0x1d
  40476b:	xor    BYTE PTR [ecx-0x4f1a614b],dh
  404771:	cmp    dh,dh
  404773:	xor    eax,0x9657244c
  404778:	adc    edi,DWORD PTR [edi-0x771f59aa]
  40477e:	or     eax,0x581e4fa7
  404783:	xchg   ebp,eax
  404784:	inc    ebp
  404785:	pop    ebp
  404786:	mov    ch,0xb0
  404788:	out    dx,eax
  404789:	nop
  40478a:	xchg   edx,eax
  40478b:	sbb    esp,DWORD PTR [ecx]
  40478d:	retf   0x5ce
  404790:	clc    
  404791:	pop    edi
  404792:	aas    
  404793:	std    
  404794:	sti    
  404795:	(bad)  
  404797:	xchg   DWORD PTR [ecx-0x14],edi
  40479a:	pop    ss
  40479b:	mov    ds:0x2495b78a,eax
  4047a0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4047a1:	mov    esp,0x416cd539
  4047a6:	(bad)  
  4047a8:	sub    ch,BYTE PTR [ebx+edi*1+0x588f05db]
  4047af:	sub    eax,0x2f4cde94
  4047b4:	mov    eax,cs:0xf845051d
  4047ba:	(bad)  
  4047bc:	hlt    
  4047bd:	aas    
  4047be:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4047bf:	push   esi
  4047c0:	or     BYTE PTR [eax+0x3f],dh
  4047c3:	dec    ecx
  4047c4:	cmp    bl,BYTE PTR [ebx+0x10]
  4047c7:	xlat   BYTE PTR ds:[ebx]
  4047c8:	jb     0x404827
  4047ca:	nop
  4047cb:	inc    eax
  4047cc:	and    eax,0xdd320e5f
  4047d1:	lea    edi,[edx+edx*4+0x6e9bfb49]
  4047d8:	icebp  
  4047d9:	test   al,0x36
  4047db:	imul   edi,DWORD PTR [ecx],0x9b3941fa
  4047e1:	(bad)  
  4047e3:	pop    ebx
  4047e4:	in     eax,dx
  4047e5:	pop    es
  4047e6:	add    al,0x23
  4047e8:	add    esp,DWORD PTR [edx+0x63]
  4047eb:	mov    bh,0x61
  4047ed:	(bad)  [ecx-0x76]
  4047f0:	shl    dh,1
  4047f2:	mov    dh,0x9c
  4047f4:	inc    eax
  4047f5:	stos   BYTE PTR es:[edi],al
  4047f6:	xchg   ebp,eax
  4047f7:	cld    
  4047f8:	sti    
  4047f9:	lods   eax,DWORD PTR ds:[esi]
  4047fa:	dec    edx
  4047fb:	mov    DWORD PTR [ebx-0x2b6b2ed4],0xbbea7b0d
  404805:	pop    edi
  404806:	pop    ss
  404807:	pusha  
  404808:	or     dl,al
  40480a:	or     bh,BYTE PTR [ebx]
  40480c:	dec    edx
  40480d:	inc    ebp
  40480e:	adc    eax,0x24c0183c
  404813:	ja     0x4047b7
  404815:	jo     0x4047ae
  404817:	fiadd  WORD PTR [ebx+0x15]
  40481a:	inc    esi
  40481b:	jmp    0x36fb:0xd87242f3
  404822:	ds xchg ecx,eax
  404824:	cmp    dh,ch
  404826:	outs   dx,DWORD PTR gs:[esi]
  404828:	adc    DWORD PTR [ecx-0x5c],esi
  40482b:	xchg   DWORD PTR [edi+0x11],esp
  40482e:	retf   0x62a6
  404831:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404832:	test   BYTE PTR [edx],0xa2
  404835:	aaa    
  404836:	out    dx,eax
  404837:	aad    0x93
  404839:	inc    esi
  40483a:	mov    edx,0xa776b8cd
  40483f:	cmp    eax,esi
  404841:	xor    eax,0xe87a9250
  404846:	enter  0x51df,0xf2
  40484a:	fcomp  DWORD PTR [ebp-0x9]
  40484d:	retf   0x1a2a
  404850:	mov    esp,0x13b1069f
  404855:	(bad)  
  404857:	add    al,0xa2
  404859:	xor    BYTE PTR [ebx],bl
  40485b:	push   ds
  40485c:	je     0x40488b
  40485e:	lahf   
  40485f:	jnp    0x404883
  404861:	sub    BYTE PTR [edx],bl
  404863:	jo     0x40483e
  404865:	(bad)  
  404866:	add    BYTE PTR [ebx-0x5b3fcd68],dh
  40486c:	xchg   esp,eax
  40486d:	sbb    eax,0x125ae84d
  404872:	or     al,0x91
  404874:	inc    esp
  404875:	icebp  
  404876:	sub    eax,0xa9312025
  40487b:	and    dh,BYTE PTR [edx]
  40487d:	(bad)  
  40487e:	aam    0x83
  404880:	clc    
  404881:	jae    0x4048f0
  404883:	push   esp
  404884:	or     dh,BYTE PTR [ebp+0x21]
  404887:	xchg   ebx,eax
  404888:	pop    edx
  404889:	rcl    eax,0xb5
  40488c:	fstp   DWORD PTR [esi]
  40488e:	push   esp
  40488f:	cmp    eax,0x4191c18d
  404894:	imul   edx,DWORD PTR [esi],0xffffffeb
  404897:	mov    bh,0x9d
  404899:	push   esp
  40489a:	jae    0x40490b
  40489c:	test   eax,0x10172b54
  4048a1:	sbb    DWORD PTR [esi-0x6f2e665],esi
  4048a7:	push   ecx
  4048a8:	mov    fs,WORD PTR [esi]
  4048aa:	setne  dh
  4048ad:	jb     0x404887
  4048af:	loop   0x404889
  4048b1:	call   0xff971398
  4048b6:	(bad)  
  4048b7:	sub    eax,0x319c3d84
  4048bc:	or     al,0x97
  4048be:	fwait
  4048bf:	lods   eax,DWORD PTR ds:[esi]
  4048c0:	fsubp  st(6),st
  4048c2:	xor    ah,BYTE PTR ds:0x1aaff50b
  4048c8:	test   dh,0xf2
  4048cb:	pop    esi
  4048cc:	lea    ebp,[ecx+ebp*4-0x7aedf235]
  4048d3:	cli    
  4048d4:	stos   DWORD PTR es:[edi],eax
  4048d5:	mov    DWORD PTR ds:0x2bc7d49e,esp
  4048db:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4048dc:	pop    ds
  4048dd:	and    eax,0x601671c9
  4048e2:	jmp    0x6ab83745
  4048e7:	and    edi,DWORD PTR [ecx+0x48]
  4048ea:	xlat   BYTE PTR ds:[ebx]
  4048eb:	mov    eax,DWORD PTR [ecx-0x2468d79b]
  4048f1:	mov    bh,BYTE PTR [esi+esi*8-0x439f92]
  4048f8:	fimul  DWORD PTR [eax-0x56]
  4048fb:	sub    al,BYTE PTR [eax-0x5881c180]
  404901:	mov    dl,BYTE PTR [esp+eax*8-0x7c]
  404905:	out    0x0,eax
  404907:	fs and ch,dl
  40490a:	adc    eax,0xbfca2095
  40490f:	jnp    0x40494e
  404911:	add    ecx,ecx
  404913:	std    
  404914:	gs shr BYTE PTR es:[edx+0x5c],1
  404919:	hlt    
  40491a:	int3   
  40491b:	inc    ecx
  40491c:	push   esi
  40491d:	cmp    eax,0x40e63ae7
  404922:	cli    
  404923:	clc    
  404924:	idiv   cl
  404926:	sbb    dh,BYTE PTR [ecx-0x13]
  404929:	ret    0x9b8b
  40492c:	xlat   BYTE PTR ds:[ebx]
  40492d:	sar    dh,cl
  40492f:	mov    ch,BYTE PTR [esi]
  404931:	add    eax,0x75b371ef
  404936:	dec    esi
  404937:	mov    edi,0xfe9420e0
  40493c:	aas    
  40493d:	mov    dl,0x25
  40493f:	fisttp QWORD PTR [esi+esi*2-0x7561588b]
  404946:	sub    eax,0xef709084
  40494b:	lds    esi,FWORD PTR [esi-0x6f867049]
  404951:	rol    BYTE PTR [edx-0x24cf5a52],cl
  404957:	stos   BYTE PTR es:[edi],al
  404958:	or     al,0x24
  40495a:	jl     0x40491e
  40495c:	scas   al,BYTE PTR es:[edi]
  40495d:	push   ebx
  40495e:	inc    esp
  40495f:	pop    eax
  404960:	push   DWORD PTR [esi+ebp*2-0x67]
  404964:	inc    esi
  404965:	xor    al,0xb2
  404967:	aad    0x19
  404969:	adc    DWORD PTR [eax+eax*4],0xffffff8e
  40496d:	xchg   esp,eax
  40496e:	xor    DWORD PTR [ecx],edx
  404970:	lock ja 0x4049e3
  404973:	inc    eax
  404974:	add    BYTE PTR [ecx-0x159e7413],ch
  40497a:	paddsw mm7,QWORD PTR ss:[ebx-0x44]
  40497f:	pop    ds
  404980:	clc    
  404981:	test   DWORD PTR [ebx],esp
  404983:	mov    bl,bl
  404985:	jmp    0x56e58275
  40498a:	stos   BYTE PTR es:[edi],al
  40498b:	int3   
  40498c:	xor    esp,eax
  40498e:	jmp    0xb730e00
  404993:	mov    ebp,0x37af51de
  404998:	mov    bh,0xa0
  40499a:	adc    al,0x19
  40499c:	scas   al,BYTE PTR es:[edi]
  40499d:	add    BYTE PTR ds:0xc9309737,cl
  4049a3:	cmp    ecx,DWORD PTR [ecx+0x2ab172c6]
  4049a9:	(bad)  
  4049aa:	sbb    ah,BYTE PTR [edx]
  4049ac:	aad    0x92
  4049ae:	outs   dx,DWORD PTR ds:[esi]
  4049af:	scas   eax,DWORD PTR es:[edi]
  4049b0:	aas    
  4049b1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4049b2:	test   BYTE PTR [ecx],cl
  4049b4:	dec    edi
  4049b5:	sbb    eax,0x307e6a45
  4049ba:	mov    dh,BYTE PTR [edi-0x37]
  4049bd:	xor    cl,BYTE PTR [ebp+0x6675ffe2]
  4049c3:	mov    edi,0x60492d61
  4049c8:	adc    eax,0x386f789c
  4049cd:	je     0x40498b
  4049cf:	repnz add bh,BYTE PTR [edi-0x71]
  4049d3:	fnstcw WORD PTR [ebp-0x6b]
  4049d6:	jb     0x404991
  4049d8:	lea    ecx,ds:0x87336d4d
  4049de:	jmp    DWORD PTR [bx+si+0xc]
  4049e2:	inc    ecx
  4049e3:	xor    DWORD PTR ss:[edx],ebx
  4049e6:	mov    ah,0x28
  4049e8:	add    DWORD PTR [ebx],ebx
  4049ea:	jp     0x4049d3
  4049ec:	lock in eax,0xec
  4049ef:	data16 movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4049f1:	jae    0x404a0a
  4049f3:	shl    DWORD PTR [edi],1
  4049f5:	cwde   
  4049f6:	dec    esp
  4049f7:	xchg   edi,eax
  4049f8:	xor    DWORD PTR [edx+ebx*1-0x71ab92ea],ebp
  4049ff:	sub    bh,ch
  404a01:	xor    esi,DWORD PTR [ebx+0x15d0864]
  404a07:	mov    BYTE PTR [edx+esi*2-0x582c3a98],bh
  404a0e:	(bad)  [edi]
  404a10:	sub    al,0xb1
  404a12:	xor    BYTE PTR [edi],0xc4
  404a15:	sar    DWORD PTR [esi-0x31ea132f],cl
  404a1b:	imul   eax,ecx,0xf627af1d
  404a21:	scas   eax,DWORD PTR es:[edi]
  404a22:	pop    ss
  404a23:	dec    esi
  404a24:	fsubr  st(4),st
  404a26:	xor    al,BYTE PTR [esi+eiz*8-0x16]
  404a2a:	xor    BYTE PTR [ebp-0x5789d6cc],dl
  404a30:	js     0x4049e3
  404a32:	fprem1 
  404a34:	out    0x8c,al
  404a36:	lahf   
  404a37:	repz dec edi
  404a39:	mov    ebp,edx
  404a3b:	inc    ebx
  404a3c:	gs cwde 
  404a3e:	sub    eax,0xaaab81f1
  404a43:	sahf   
  404a44:	sub    eax,0x9633a672
  404a49:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404a4a:	pop    esp
  404a4b:	jnp    0x404a62
  404a4d:	mov    ds:0xbf58bfbc,al
  404a52:	in     eax,dx
  404a53:	add    eax,DWORD PTR [edx]
  404a55:	(bad)  
  404a56:	add    ax,0x3c0f
  404a5a:	mov    ebp,0xf0580e67
  404a5f:	jnp    0x404aad
  404a61:	dec    eax
  404a62:	adc    al,0x83
  404a64:	or     edi,DWORD PTR [ebx+0x58]
  404a67:	imul   edx,DWORD PTR [esi-0xc],0xffffff9f
  404a6b:	mov    esp,ebp
  404a6d:	ins    DWORD PTR es:[edi],dx
  404a6e:	or     ebx,DWORD PTR [esi+ecx*2]
  404a71:	jp     0x404a64
  404a73:	or     bh,dh
  404a75:	xchg   ebp,eax
  404a76:	push   0xfffffff1
  404a78:	mov    ebp,0x7dc2ccfd
  404a7d:	outs   dx,DWORD PTR ds:[esi]
  404a7e:	cli    
  404a7f:	push   ds
  404a80:	ret    0x1e15
  404a83:	(bad)  [ebx]
  404a85:	sbb    BYTE PTR [edx+0x2],cl
  404a88:	cmp    eax,0xdfe636db
  404a8d:	ja     0x404a1b
  404a8f:	push   eax
  404a90:	test   DWORD PTR [eax-0x69],esp
  404a93:	arpl   WORD PTR [ebp-0x16b82938],bp
  404a99:	and    al,0xb8
  404a9b:	push   cs
  404a9c:	(bad)  
  404a9d:	cmp    al,BYTE PTR [esi+esi*2-0x3b]
  404aa1:	add    eax,0x6c7e50a1
  404aa6:	jb     0x404aab
  404aa8:	jmp    0x404aa4
  404aaa:	mov    bl,0x41
  404aac:	mov    eax,ds:0xe6470889
  404ab1:	out    0x37,eax
  404ab3:	jmp    0x404aef
  404ab5:	(bad)
  404aba:	dec    eax
  404abb:	push   esi
  404abc:	adc    ebx,DWORD PTR [edi+0x5d]
  404abf:	ret    0x5cf8
  404ac2:	arpl   WORD PTR [edx+0x73],ax
  404ac5:	xchg   edi,eax
  404ac6:	iret   
  404ac7:	push   edi
  404ac8:	rol    BYTE PTR [ecx-0x4c],1
  404acb:	xchg   esp,eax
  404acc:	in     al,0x8d
  404ace:	jbe    0x404a55
  404ad0:	call   0x768:0x6f411500
  404ad7:	or     DWORD PTR [eax+0x5be6dc30],0x51
  404ade:	outs   dx,BYTE PTR ds:[esi]
  404adf:	adc    DWORD PTR cs:[esi-0x79413602],0xb0bf8465
  404aea:	or     DWORD PTR [ebx+0x2b67d9a2],ebp
  404af0:	sub    al,0xce
  404af2:	leave  
  404af3:	mov    eax,ds:0x8938b0f
  404af8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404af9:	sub    edi,DWORD PTR [edx]
  404afb:	xor    eax,0xb9dd0e95
  404b00:	or     bh,0x76
  404b03:	or     esp,DWORD PTR [edi]
  404b05:	into   
  404b06:	mov    al,0x1f
  404b08:	imul   ebx,ebp,0x3b652cba
  404b0e:	inc    ecx
  404b0f:	adc    DWORD PTR [edx],edx
  404b11:	rcl    DWORD PTR [edi-0x76],0x78
  404b15:	repz and ecx,DWORD PTR [esi-0x2981190]
  404b1c:	xchg   edx,eax
  404b1d:	xchg   ecx,eax
  404b1e:	push   edx
  404b1f:	mov    dh,0xa3
  404b21:	push   0x16c6ae00
  404b26:	clc    
  404b27:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404b28:	mov    ebx,0x131af740
  404b2d:	int    0x18
  404b2f:	adc    eax,0x744c570f
  404b34:	ins    DWORD PTR es:[edi],dx
  404b35:	add    edi,DWORD PTR ds:0xd300ca85
  404b3b:	out    dx,eax
  404b3c:	adc    BYTE PTR [eax-0x45],0x90
  404b40:	gs clc 
  404b42:	mov    esi,0x45b1ffd5
  404b47:	jae    0x404b83
  404b49:	inc    ebx
  404b4a:	jmp    0x928171f6
  404b4f:	xchg   ebp,eax
  404b50:	add    BYTE PTR [ecx+ebx*1+0x56bc077e],ch
  404b57:	fidivr DWORD PTR [ebx-0x60]
  404b5a:	daa    
  404b5b:	and    al,0x6e
  404b5d:	inc    edx
  404b5e:	aaa    
  404b5f:	mov    dh,0xb5
  404b61:	fild   DWORD PTR [esp+ecx*1]
  404b64:	std    
  404b65:	pop    esp
  404b66:	ja     0x404bb4
  404b68:	pop    eax
  404b69:	adc    eax,0xd8584c25
  404b6e:	(bad)  
  404b6f:	idiv   BYTE PTR [edx]
  404b71:	add    eax,0x57b2c994
  404b76:	sti    
  404b77:	dec    ebx
  404b78:	dec    esi
  404b79:	call   0xef1f:0x82b3848
  404b80:	xor    edx,DWORD PTR [eax+0x131df614]
  404b86:	jno    0x404b7a
  404b88:	pushf  
  404b89:	inc    ebp
  404b8a:	aaa    
  404b8b:	addr16 adc ecx,eax
  404b8e:	nop
  404b8f:	push   ds
  404b90:	add    ch,BYTE PTR [edi-0x76d1314b]
  404b96:	fcom   DWORD PTR [ebx]
  404b98:	jns    0x404b37
  404b9a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404b9b:	mov    ah,0xfb
  404b9d:	repnz inc edx
  404b9f:	ds int3 
  404ba1:	xchg   ebp,eax
  404ba2:	cmc    
  404ba3:	jne    0x404bb4
  404ba5:	test   ecx,0xda323928
  404bab:	rcr    DWORD PTR [ebx-0x5baf06bb],0x69
  404bb2:	in     eax,0x61
  404bb4:	jge    0x404bbd
  404bb6:	jnp    0x404c25
  404bb8:	rol    bl,1
  404bba:	(bad)  
  404bbb:	mov    ds:0x74594223,al
  404bc0:	jmp    0xe2242689
  404bc5:	sbb    BYTE PTR [ecx+eax*8],0x79
  404bc9:	mov    ecx,edx
  404bcb:	xor    al,0xdf
  404bcd:	sub    BYTE PTR [ecx],al
  404bcf:	lahf   
  404bd0:	mov    WORD PTR [ecx-0x38],cs
  404bd3:	adc    BYTE PTR [esp+esi*8],dh
  404bd6:	dec    ebp
  404bd7:	loop   0x404bbc
  404bd9:	sahf   
  404bda:	iret   
  404bdb:	mov    esp,esp
  404bdd:	jno    0x404c32
  404bdf:	xchg   ebx,eax
  404be0:	sbb    BYTE PTR [ebp-0x109a5d13],bl
  404be6:	dec    ebp
  404be7:	(bad)  
  404be8:	out    dx,al
  404be9:	aaa    
  404bea:	(bad)  
  404bec:	or     BYTE PTR [ecx+eiz*2],ah
  404bef:	fst    QWORD PTR [esi-0x2d1b6eb8]
  404bf5:	xor    ch,BYTE PTR [edi+0x22]
  404bf8:	arpl   bp,bx
  404bfa:	mov    al,0xf4
  404bfc:	sar    BYTE PTR [edi-0x7ca7dce],0x4e
  404c03:	ss aaa 
  404c05:	leave  
  404c06:	mov    ebp,0x79d4a62f
  404c0b:	xor    eax,0x711fd359
  404c10:	and    esp,ecx
  404c12:	xchg   edx,eax
  404c13:	in     al,dx
  404c14:	xor    cl,BYTE PTR [edi+0x75]
  404c17:	jp     0x404c16
  404c19:	pop    ebp
  404c1a:	push   0x5e
  404c1c:	xchg   BYTE PTR [edi-0xe6c1766],bh
  404c22:	clc    
  404c23:	gs leave 
  404c25:	(bad)  
  404c26:	and    eax,0x2aefb197
  404c2b:	xchg   esp,eax
  404c2c:	ror    BYTE PTR [ebx],cl
  404c2e:	jp     0x404bde
  404c30:	aad    0x5d
  404c32:	ins    DWORD PTR es:[edi],dx
  404c33:	lods   eax,DWORD PTR ds:[esi]
  404c34:	enter  0x99e,0x3
  404c38:	mov    al,ds:0x46a9ac7d
  404c3d:	xchg   di,ax
  404c3f:	lea    eax,[ebx+0x70]
  404c42:	pop    es
  404c43:	xlat   BYTE PTR ds:[ebx]
  404c44:	data16 cmc 
  404c46:	repz into 
  404c48:	gs leave 
  404c4a:	adc    bh,BYTE PTR [eax+esi*8+0x6d]
  404c4e:	cs in  al,dx
  404c50:	lods   eax,DWORD PTR ds:[esi]
  404c51:	jne    0x404be9
  404c53:	inc    edi
  404c54:	imul   DWORD PTR [ebp-0x52]
  404c57:	sbb    eax,0x241039d7
  404c5c:	xor    BYTE PTR [ebx+ebp*1],0xb2
  404c60:	inc    ecx
  404c61:	adc    al,0x35
  404c63:	clc    
  404c64:	mov    dh,0x7c
  404c66:	xchg   esp,eax
  404c67:	iret   
  404c68:	pop    ss
  404c69:	ficom  DWORD PTR [edi]
  404c6b:	mov    eax,ds:0x3417979c
  404c70:	sub    eax,0x80bf138d
  404c75:	cmc    
  404c76:	addr16 out dx,al
  404c78:	retf   0x2445
  404c7b:	neg    BYTE PTR [esi]
  404c7d:	xchg   esi,eax
  404c7e:	xor    edi,DWORD PTR [edi+0x5fe5b019]
  404c84:	mov    ecx,0x6235c8ef
  404c89:	sbb    al,0x66
  404c8b:	sub    DWORD PTR [edi+0x28],0x423a7a05
  404c92:	mov    al,0x75
  404c94:	cmp    bh,bh
  404c96:	inc    eax
  404c97:	sub    esp,esp
  404c99:	push   0x1c
  404c9b:	test   dh,bh
  404c9d:	mov    edi,0x3f5984cb
  404ca2:	mov    dl,0x4f
  404ca4:	loope  0x404c92
  404ca6:	cmp    BYTE PTR [ecx+0x5],dh
  404ca9:	push   ss
  404caa:	sub    bh,bl
  404cac:	or     ebx,DWORD PTR [edx+eax*4]
  404caf:	cmp    DWORD PTR [edx+ecx*2-0x6b7aea14],esp
  404cb6:	dec    ebp
  404cb7:	pop    esp
  404cb8:	stos   DWORD PTR es:[edi],eax
  404cb9:	xor    DWORD PTR [ecx+ebp*8-0x4c],esp
  404cbd:	mov    dh,0x8f
  404cbf:	(bad)  
  404cc0:	push   esp
  404cc1:	lahf   
  404cc2:	or     eax,DWORD PTR [edx+0x24a83a20]
  404cc8:	sbb    BYTE PTR [eax-0x15],0x5
  404ccc:	inc    edi
  404ccd:	adc    ah,dl
  404ccf:	add    ah,ch
  404cd1:	lods   eax,DWORD PTR ds:[esi]
  404cd2:	imul   edx,DWORD PTR [esi],0xf545579d
  404cd8:	lods   eax,DWORD PTR ds:[esi]
  404cd9:	inc    esp
  404cda:	xchg   edi,eax
  404cdb:	outs   dx,BYTE PTR ds:[esi]
  404cdc:	lea    esp,[ebx+0x168a6cf4]
  404ce2:	jecxz  0x404cc3
  404ce4:	cmc    
  404ce5:	cmp    ah,BYTE PTR [edi-0x44bb45af]
  404ceb:	push   esp
  404cec:	jnp    0x404c9e
  404cee:	call   0x7c40:0x4fa5e5
  404cf5:	mov    bl,0x7a
  404cf7:	dec    eax
  404cf8:	es push 0x11
  404cfb:	push   esp
  404cfc:	jae    0x404cbe
  404cfe:	mov    al,ds:0xf4cd71ba
  404d03:	lahf   
  404d04:	pop    ss
  404d05:	lds    ecx,FWORD PTR ds:0x86391d39
  404d0b:	push   cs
  404d0c:	push   esi
  404d0d:	jnp    0x404d88
  404d0f:	jmp    0x89b0:0x86c786f8
  404d16:	out    dx,al
  404d17:	fs xchg esp,eax
  404d19:	es int 0x2
  404d1c:	out    dx,eax
  404d1d:	or     bh,al
  404d1f:	mov    edx,DWORD PTR [edi]
  404d21:	cmp    DWORD PTR [edx],ecx
  404d23:	inc    ebx
  404d24:	(bad)  [edx]
  404d26:	push   0x57888ea6
  404d2b:	sbb    eax,0x1c29ee77
  404d30:	sbb    ch,BYTE PTR [ebx]
  404d32:	ret    0xafb5
  404d35:	adc    al,0xf0
  404d37:	mov    bl,bh
  404d39:	xor    ah,bh
  404d3b:	mov    dh,0xef
  404d3d:	aad    0xab
  404d3f:	mov    edi,0x50ef6248
  404d44:	(bad)  
  404d45:	cli    
  404d46:	xchg   edx,eax
  404d47:	je     0x404dc7
  404d49:	ss cmc 
  404d4b:	(bad)  [edx+0x3a]
  404d4e:	and    ecx,DWORD PTR [ebp+0x62]
  404d51:	push   ss
  404d52:	fisttp DWORD PTR [bx+si-0x6a6c]
  404d57:	loopne 0x404d2a
  404d59:	aad    0x98
  404d5b:	xor    bl,al
  404d5d:	enter  0xca1c,0x8d
  404d61:	fbld   TBYTE PTR [ecx+0x6662bab3]
  404d67:	outs   dx,DWORD PTR ds:[esi]
  404d69:	push   edx
  404d6a:	and    al,0x81
  404d6c:	sub    esp,DWORD PTR [ecx+0x19]
  404d6f:	mov    bl,0xe5
  404d71:	icebp  
  404d72:	daa    
  404d73:	rol    BYTE PTR [ecx+0x1cc42ede],1
  404d79:	jl     0x404ddd
  404d7b:	rol    DWORD PTR [ecx-0x4],cl
  404d7e:	mov    DWORD PTR [esi+ebx*2-0x66],esp
  404d82:	out    0xf1,eax
  404d84:	cmp    eax,esp
  404d86:	add    DWORD PTR [eax+0x11e3ee5a],esi
  404d8c:	add    edi,ebp
  404d8e:	sbb    al,0x60
  404d90:	jge    0x404d66
  404d92:	mov    bh,0x7d
  404d94:	jp     0x404d3d
  404d96:	or     al,0xf5
  404d98:	xor    eax,DWORD PTR [edx]
  404d9a:	inc    ecx
  404d9b:	mov    ds:0xa2a7e08d,eax
  404da0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404da1:	cdq    
  404da2:	xor    ah,ch
  404da4:	jns    0x404d57
  404da6:	daa    
  404da7:	jl     0x404dc9
  404da9:	mov    edi,0xe6d6dbd1
  404dae:	jb     0x404e24
  404db0:	test   al,0x48
  404db2:	jo     0x404d5a
  404db4:	mov    dl,BYTE PTR [edx]
  404db6:	les    ecx,FWORD PTR [ebx+edx*2+0x62eb33ff]
  404dbd:	dec    edi
  404dbe:	(bad)  
  404dbf:	mov    bh,0x9
  404dc1:	out    dx,eax
  404dc2:	jmp    0x908949fb
  404dc7:	sub    ch,BYTE PTR [esi]
  404dc9:	pop    ebp
  404dca:	or     al,0xe1
  404dcc:	adc    BYTE PTR [ebp-0x3],bl
  404dcf:	inc    eax
  404dd0:	fstp   QWORD PTR [esi]
  404dd2:	pop    ds
  404dd3:	xor    eax,0xdf901b11
  404dd8:	(bad)  
  404dd9:	mov    al,ds:0xbac8e48c
  404dde:	cmp    DWORD PTR [eax],edi
  404de0:	sub    al,0xa8
  404de2:	or     esp,edi
  404de4:	and    DWORD PTR [eax+0x7f],esi
  404de7:	pop    esi
  404de8:	mul    DWORD PTR ds:0x8980bcc1
  404dee:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404def:	lea    eax,[eax+0x5dda7b34]
  404df5:	dec    esp
  404df6:	retf   
  404df7:	mov    dl,0xf5
  404df9:	rcl    DWORD PTR [edx+0x77],0x40
  404dfd:	imul   ebx,eax,0x67364f3f
  404e03:	jmp    0x404e73
  404e05:	fnstenv [esp+eax*4-0x73c5c2ff]
  404e0c:	js     0x404e72
  404e0e:	in     eax,0xca
  404e10:	fwait
  404e11:	xor    DWORD PTR [ebx+0xbfefb2f],ecx
  404e17:	push   ebp
  404e18:	clc    
  404e19:	div    ebp
  404e1b:	sub    eax,0xca03ee6a
  404e20:	aas    
  404e21:	mov    edi,0xbacc0cdc
  404e26:	into   
  404e27:	les    esp,FWORD PTR [edx+0x12]
  404e2a:	cmp    al,0x9c
  404e2c:	mov    BYTE PTR [edx+ebp*8+0x2d],ah
  404e30:	push   0xffffff99
  404e32:	jge    0x404ea7
  404e34:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404e35:	xor    dh,ah
  404e37:	jbe    0x404e46
  404e39:	pop    es
  404e3a:	mov    dl,0x72
  404e3c:	pop    esp
  404e3d:	push   esp
  404e3e:	popa   
  404e3f:	cmp    BYTE PTR [edx],ch
  404e41:	mov    ch,0x6e
  404e43:	sub    BYTE PTR [ebx],bl
  404e45:	mov    esi,0x373bec60
  404e4a:	mov    al,ds:0xd3bec5a0
  404e4f:	out    0x5,al
  404e51:	cli    
  404e52:	cli    
  404e53:	add    cl,cl
  404e55:	xor    BYTE PTR [ecx+ebx*4+0x76],dh
  404e59:	cmp    DWORD PTR [ebx-0x6b],0xd630ca5
  404e60:	repz in al,dx
  404e62:	sub    bl,ch
  404e64:	fistp  QWORD PTR [ecx]
  404e66:	push   0x7be14387
  404e6b:	sub    ebp,DWORD PTR [esi-0x59]
  404e6e:	lods   eax,DWORD PTR ds:[esi]
  404e6f:	mov    ds:0x478edbc9,eax
  404e74:	inc    esi
  404e75:	(bad)  
  404e76:	push   ds
  404e77:	in     al,dx
  404e78:	dec    esi
  404e79:	sub    al,0xc3
  404e7b:	retf   0xe248
  404e7e:	mov    dh,BYTE PTR [ebp+0x5113a2aa]
  404e84:	xchg   ebx,eax
  404e85:	(bad)  
  404e86:	daa    
  404e87:	push   edi
  404e88:	popf   
  404e89:	maskmovq mm2,(bad)
  404e8a:	not    DWORD PTR [ebp+0x2c]
  404e8d:	sub    ecx,DWORD PTR [ebx-0x75]
  404e90:	aam    0x17
  404e92:	loopne 0x404f02
  404e94:	push   edi
  404e95:	arpl   WORD PTR [edx],ax
  404e97:	(bad)  
  404e98:	mov    dh,0xcf
  404e9a:	pop    ebp
  404e9b:	inc    esi
  404e9c:	add    BYTE PTR [esi-0x74fef819],al
  404ea2:	test   al,0xe2
  404ea4:	in     eax,0x8c
  404ea6:	out    0x1a,al
  404ea8:	call   0xc5d0:0x642d25b
  404eaf:	dec    ecx
  404eb0:	inc    ebx
  404eb1:	mov    ds:0x44367d53,al
  404eb6:	mov    edx,0xe8a3c971
  404ebb:	jns    0x404ef4
  404ebd:	sub    al,0xd3
  404ebf:	int    0x75
  404ec1:	jne    0x404e7d
  404ec3:	loope  0x404f3e
  404ec5:	imul   edi,DWORD PTR [esi+0x274ee61b],0x79c58e85
  404ecf:	not    BYTE PTR [edi+0x6f]
  404ed2:	cdq    
  404ed3:	jb     0x404e8e
  404ed5:	push   edx
  404ed6:	xlat   BYTE PTR ds:[ebx]
  404ed7:	pop    esi
  404ed8:	jns    0x404f50
  404eda:	ret    
  404edb:	out    0x79,eax
  404edd:	ins    DWORD PTR es:[edi],dx
  404ede:	gs das 
  404ee0:	scas   eax,DWORD PTR es:[edi]
  404ee1:	push   cs
  404ee2:	mov    ds:0xbea8769d,eax
  404ee7:	cmp    al,0x15
  404ee9:	fist   WORD PTR [edx+0x6b012f5d]
  404eef:	in     al,dx
  404ef0:	mov    ecx,ebx
  404ef2:	int3   
  404ef3:	dec    edx
  404ef4:	add    DWORD PTR [edi+0x54],ebp
  404ef7:	pop    es
  404ef8:	ror    DWORD PTR [edi+0x79],0x5
  404efc:	adc    DWORD PTR [ebx-0x529d23a4],ebp
  404f02:	sub    ebp,esp
  404f04:	repz cld 
  404f06:	(bad)  [ebx-0x4f]
  404f09:	cmc    
  404f0a:	stos   DWORD PTR es:[edi],eax
  404f0b:	xor    al,0x42
  404f0d:	pop    ss
  404f0e:	mov    edx,DWORD PTR [ecx+ecx*1]
  404f11:	loopne 0x404ef7
  404f13:	lds    esp,FWORD PTR [esi]
  404f15:	and    eax,0x2a74708e
  404f1a:	out    0xa9,al
  404f1c:	push   eax
  404f1d:	inc    ebx
  404f1e:	jecxz  0x404ee6
  404f20:	mov    ebp,0x6de35e54
  404f25:	cmp    DWORD PTR [ebx-0x77],edi
  404f28:	pop    ebp
  404f29:	dec    eax
  404f2a:	jns    0x404f2a
  404f2c:	xchg   ebp,eax
  404f2d:	add    BYTE PTR [ecx],al
  404f2f:	jmp    0xa3e0735c
  404f34:	jnp    0x404f23
  404f36:	popf   
  404f37:	fcomi  st,st(3)
  404f39:	mov    BYTE PTR [esi-0x3dad81c8],cl
  404f3f:	call   0x320b47eb
  404f44:	mov    ds:0xbdbc386b,eax
  404f49:	pop    ebx
  404f4a:	rcl    ebx,cl
  404f4c:	mov    bl,0x8b
  404f4e:	xor    BYTE PTR [ebx-0x11],0xea
  404f52:	or     BYTE PTR [ecx],dh
  404f54:	(bad)  ds:0x2443476a
  404f5a:	(bad)  
  404f5b:	jbe    0x404f63
  404f5d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404f5e:	call   0xb627:0x629c3e05
  404f65:	loop   0x404fc9
  404f67:	and    esp,DWORD PTR [edi+0x28eac411]
  404f6d:	in     eax,0x38
  404f6f:	push   ds
  404f70:	cmp    esp,DWORD PTR [esi+0x60]
  404f73:	push   edx
  404f74:	jmp    0x8510:0xbeffc7b2
  404f7b:	or     al,0xcb
  404f7d:	in     al,dx
  404f7e:	aad    0x78
  404f80:	aad    0x40
  404f82:	sub    esi,DWORD PTR [ebx+0x26]
  404f85:	ud2    
  404f87:	aaa    
  404f88:	add    ebp,ecx
  404f8a:	mov    eax,0xbeb199a4
  404f8f:	mov    DWORD PTR [esi+0x65307527],edx
  404f95:	rol    DWORD PTR [eax+edx*2],0x7b
  404f99:	mov    bl,0x4c
  404f9b:	mov    cl,0x49
  404f9d:	stos   BYTE PTR es:[edi],al
  404f9e:	add    al,0xae
  404fa0:	pop    ecx
  404fa1:	or     esi,ebp
  404fa3:	ds jns 0x404fbc
  404fa6:	fisttp DWORD PTR [edx-0x4b80c829]
  404fac:	ficom  DWORD PTR [edi-0x41d09c22]
  404fb2:	int    0xa9
  404fb4:	push   ds
  404fb5:	pop    ebx
  404fb6:	gs icebp 
  404fb8:	jns    0x404f9b
  404fba:	(bad)  
  404fbb:	loope  0x404fea
  404fbd:	mov    esi,0x38845ae4
  404fc2:	in     eax,dx
  404fc3:	hlt    
  404fc4:	pop    ss
  404fc5:	retf   0xbf7e
  404fc8:	fsubr  QWORD PTR [edi+0x17dd9d4b]
  404fce:	pop    eax
  404fcf:	jg     0x40500e
  404fd1:	aaa    
  404fd2:	out    dx,eax
  404fd3:	aam    0x80
  404fd5:	jl     0x40503e
  404fd7:	scas   al,BYTE PTR es:[edi]
  404fd8:	sub    eax,0x9da73411
  404fdd:	sti    
  404fde:	adc    eax,0xc0b4b2db
  404fe3:	and    al,0xe5
  404fe5:	inc    eax
  404fe6:	cmp    BYTE PTR [esi-0xfc8bdae],cl
  404fec:	inc    eax
  404fed:	xor    edi,edi
  404fef:	mov    ah,0xb9
  404ff1:	xor    esi,edi
  404ff3:	xlat   BYTE PTR ds:[ebx]
  404ff4:	or     al,0x59
  404ff6:	mov    dh,0xf6
  404ff8:	push   ebp
  404ff9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404ffa:	add    ch,BYTE PTR [esi+0x4312e411]
  405000:	sub    ebp,DWORD PTR fs:[eax+0x93bdf9d]
  405007:	outs   dx,BYTE PTR ds:[esi]
  405008:	ror    BYTE PTR [esi],cl
  40500a:	sub    eax,0xcfc5b1b
  40500f:	lds    edx,FWORD PTR [esi-0x4c]
  405012:	xlat   BYTE PTR ds:[ebx]
  405013:	frstor [esi-0x45]
  405016:	retf   
  405017:	mov    BYTE PTR [esi-0x9e23306],bl
  40501d:	in     eax,0x57
  40501f:	adc    esp,DWORD PTR [edx+0x1173bef0]
  405025:	cmp    DWORD PTR [edi-0x7065a03c],ecx
  40502b:	cmp    BYTE PTR [ebx+ecx*4-0x2a7de27c],0xc1
  405033:	add    ecx,DWORD PTR [ebx+0x4c]
  405036:	pop    ds
  405037:	rsqrtps xmm5,XMMWORD PTR [eax]
  40503a:	sbb    bl,BYTE PTR [edx+eax*2]
  40503d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40503e:	sub    DWORD PTR [eax+0x2e9f8b3a],ebx
  405044:	sub    edx,DWORD PTR [edi+edi*4-0x78]
  405048:	pushw  es
  40504a:	(bad)  
  40504b:	or     al,0x4c
  40504d:	(bad)  
  40504f:	mov    fs,esi
  405051:	jl     0x40508b
  405053:	mov    bl,0xbb
  405055:	inc    esi
  405056:	mov    ecx,0x2795fc17
  40505b:	in     al,dx
  40505c:	xor    al,0x86
  40505e:	pop    esp
  40505f:	jl     0x404fe4
  405061:	ins    DWORD PTR es:[edi],dx
  405062:	ss adc ch,ch
  405065:	and    edi,DWORD PTR [ebx]
  405067:	mov    ds:0x773b851,al
  40506c:	retf   
  40506d:	jmp    0xd965aab9
  405072:	or     al,0x15
  405074:	pop    edx
  405075:	imul   ebx,DWORD PTR [ecx-0x3731d994],0xb0851ec6
  40507f:	fnstcw WORD PTR [ecx+0x10]
  405082:	mov    eax,0x2015fc2c
  405087:	sub    DWORD PTR [ebx+0x24],ebx
  40508a:	cmp    esi,edi
  40508c:	(bad)  
  40508d:	or     edi,ebp
  40508f:	sahf   
  405090:	mov    ch,0x33
  405092:	push   0x91ebadde
  405097:	repnz cwde 
  405099:	ret    0x8ab1
  40509c:	dec    ecx
  40509d:	mov    dl,0x45
  40509f:	(bad)  
  4050a1:	adc    BYTE PTR [ecx+eax*8],cl
  4050a4:	xchg   ebp,eax
  4050a5:	popa   
  4050a6:	jne    0x4050cf
  4050a8:	je     0x4050b8
  4050aa:	lods   al,BYTE PTR ds:[esi]
  4050ab:	popf   
  4050ac:	and    eax,0xdd372364
  4050b1:	push   ebp
  4050b2:	mov    al,ds:0xe050b707
  4050b7:	dec    edi
  4050b8:	in     eax,dx
  4050b9:	test   eax,0xeb1af4f9
  4050be:	add    al,0x82
  4050c0:	mov    esi,DWORD PTR [ecx-0x74086d0e]
  4050c6:	repz test eax,0xe2581ff9
  4050cc:	jg     0x40505a
  4050ce:	xchg   BYTE PTR [ebp+edi*2-0x53f44ea3],ch
  4050d5:	popf   
  4050d6:	ds push ebx
  4050d8:	mov    dh,BYTE PTR [ebp-0xdf97395]
  4050de:	(bad)  
  4050df:	sar    BYTE PTR [esp+eiz*2+0xc],cl
  4050e3:	retf   0xbdac
  4050e6:	ret    0x3047
  4050e9:	add    DWORD PTR [ebx+0x18fbd6ba],0x61ad20f0
  4050f3:	enter  0x43f5,0xbe
  4050f7:	mov    ecx,0x60952ea4
  4050fc:	jecxz  0x405145
  4050fe:	lods   eax,DWORD PTR ds:[esi]
  4050ff:	rcl    bh,cl
  405101:	mov    al,0x7c
  405103:	shr    DWORD PTR [ebx+0x35ac4e4b],0xc5
  40510a:	arpl   WORD PTR [ecx+0x40],bx
  40510d:	jge    0x4050b0
  40510f:	jmp    0x4050b4
  405111:	mov    edi,0x2a47d649
  405116:	movs   DWORD PTR es:[edi],DWORD PTR es:[esi]
  405118:	pop    es
  405119:	ret    0x56e6
  40511c:	mov    DWORD PTR [ecx-0x62],esi
  40511f:	inc    ebp
  405120:	mov    ds:0xe7f0cfda,al
  405125:	icebp  
  405126:	outs   dx,BYTE PTR ds:[esi]
  405127:	cdq    
  405128:	repz hlt 
  40512a:	mov    WORD PTR [ebp+0x4e6d325],es
  405130:	mov    ch,0x3b
  405132:	sbb    ebx,DWORD PTR [ebx+0x23]
  405135:	cld    
  405136:	sar    DWORD PTR [edi+ebx*2-0x79],1
  40513a:	into   
  40513b:	scas   al,BYTE PTR es:[edi]
  40513c:	inc    edi
  40513d:	add    esp,edx
  40513f:	cmc    
  405140:	jl     0x405171
  405142:	mov    ebx,0x6d444cec
  405147:	rcl    BYTE PTR [edx],cl
  405149:	je     0x4050f3
  40514b:	and    eax,0x12701ea2
  405150:	rcl    edi,1
  405152:	imul   eax,esp,0xcf934a5e
  405158:	sti    
  405159:	add    eax,0x6c993ce4
  40515e:	test   BYTE PTR [ebx],cl
  405160:	mov    edi,0xda5fa924
  405165:	dec    ecx
  405166:	or     al,0x97
  405168:	push   cs
  405169:	icebp  
  40516a:	or     ecx,esp
  40516c:	shl    DWORD PTR [ecx],0x42
  40516f:	sub    dl,BYTE PTR [eax-0x43bd8851]
  405175:	ss sahf 
  405177:	mov    esi,0x2d90a9fa
  40517c:	sbb    BYTE PTR [edi+0x3f5b5e15],0x9f
  405183:	lods   eax,DWORD PTR ds:[esi]
  405184:	sbb    dh,al
  405186:	ret    0x3120
  405189:	call   0x93de:0x8e833ab1
  405190:	cmp    bl,BYTE PTR [edx-0x67]
  405193:	push   ebx
  405194:	jne    0x4051fd
  405196:	enter  0x7e85,0xc7
  40519a:	lahf   
  40519b:	jbe    0x4051de
  40519d:	pop    eax
  40519e:	xchg   esp,eax
  40519f:	fst    DWORD PTR [edi]
  4051a1:	ror    DWORD PTR [ecx-0x2fffde80],cl
  4051a7:	mov    ebx,0xa50c2624
  4051ac:	xchg   BYTE PTR [eax],ah
  4051ae:	(bad)  
  4051af:	int3   
  4051b0:	sub    esi,esp
  4051b2:	outs   dx,DWORD PTR ds:[esi]
  4051b3:	out    0xc8,al
  4051b5:	inc    edi
  4051b6:	xchg   ebp,eax
  4051b7:	and    DWORD PTR [eax],esp
  4051b9:	lea    ebp,[ecx]
  4051bb:	into   
  4051bc:	clc    
  4051bd:	(bad)  
  4051bf:	inc    ecx
  4051c0:	loopne 0x405157
  4051c2:	push   esp
  4051c3:	cld    
  4051c4:	mov    eax,ds:0x648b255d
  4051c9:	nop
  4051ca:	mov    ebx,0x233f363c
  4051cf:	add    dl,BYTE PTR [esp+edi*2+0x52118eb7]
  4051d6:	xchg   esi,eax
  4051d7:	jnp    0x4051ca
  4051d9:	adc    cl,al
  4051db:	fdivr  QWORD PTR [ecx-0x67]
  4051de:	jne    0x40524e
  4051e0:	(bad)  
  4051e1:	xor    eax,0x6fcc29e8
  4051e6:	jp     0x4051c9
  4051e8:	(bad)  
  4051e9:	jmp    0x40521d
  4051eb:	jmp    0x4051c6
  4051ed:	pop    es
  4051ee:	iret   
  4051ef:	int    0xf9
  4051f1:	xor    al,0x12
  4051f3:	scas   eax,DWORD PTR es:[edi]
  4051f4:	test   DWORD PTR [ebx],edx
  4051f6:	mov    ds:0x3d72fe2,eax
  4051fb:	ror    BYTE PTR [ebx],cl
  4051fd:	ins    DWORD PTR es:[edi],dx
  4051fe:	and    eax,0xd5a5188f
  405203:	xchg   ebx,eax
  405204:	adc    ebx,DWORD PTR [edi+0x26]
  405207:	repnz mov ?,ebx
  40520a:	(bad)  
  40520b:	xchg   ecx,eax
  40520c:	add    eax,0xe2276658
  405211:	shl    BYTE PTR [edx],1
  405213:	fs pop ebp
  405215:	js     0x4051ba
  405217:	loop   0x405234
  405219:	push   cs
  40521a:	mov    ebp,0x8bb10ed7
  40521f:	test   bl,al
  405221:	out    0x93,eax
  405223:	mov    cl,0xd8
  405225:	push   ebp
  405226:	shr    BYTE PTR [ebx+ecx*4-0x73570b48],cl
  40522d:	dec    edx
  40522e:	cli    
  40522f:	bound  ebx,QWORD PTR [ecx+0x52ff371b]
  405235:	push   ebp
  405236:	loop   0x40520b
  405238:	mov    dl,bh
  40523a:	retf   
  40523b:	aaa    
  40523c:	jp     0x405271
  40523e:	divps  xmm1,xmm2
  405241:	call   0x73fd4ef6
  405246:	dec    esi
  405247:	ja     0x40520d
  405249:	dec    ecx
  40524a:	cmp    esp,DWORD PTR [ebx+0x2d959f85]
  405250:	test   al,0x3c
  405252:	xlat   BYTE PTR ds:[ebx]
  405253:	out    0x4f,al
  405255:	xor    al,0xd4
  405257:	mov    al,0xd0
  405259:	rol    ecx,0xa8
  40525c:	and    al,0xdb
  40525e:	loopne 0x4052c2
  405260:	xchg   edx,eax
  405261:	pop    eax
  405262:	loop   0x4052cc
  405264:	std    
  405265:	sbb    bh,BYTE PTR [esi+eiz*4]
  405268:	imul   edi,DWORD PTR [edi+0x520852c3],0xfffffffa
  40526f:	or     al,0xe
  405271:	mov    edx,0xb60b184e
  405276:	mov    bh,0xcc
  405278:	push   ebp
  405279:	mov    bl,0x64
  40527b:	bound  edx,QWORD PTR [edx]
  40527d:	das    
  40527e:	jb     0x40527e
  405280:	or     bh,BYTE PTR [edi+0x68]
  405283:	daa    
  405284:	inc    eax
  405285:	retf   0xc996
  405288:	leave  
  405289:	test   eax,0x99617dc8
  40528e:	outs   dx,DWORD PTR ds:[esi]
  40528f:	and    eax,esi
  405291:	sti    
  405292:	inc    esp
  405293:	mov    eax,0x73af9e9a
  405298:	xor    bh,cl
  40529a:	sti    
  40529b:	retf   
  40529c:	push   edx
  40529d:	cmp    eax,0x4c56a791
  4052a2:	push   edi
  4052a3:	cld    
  4052a4:	call   0x84e2:0x1d994df9
  4052ab:	call   0x398d7c69
  4052b0:	adc    ebp,DWORD PTR [edi]
  4052b2:	xchg   esp,eax
  4052b3:	push   edx
  4052b4:	push   cs
  4052b5:	inc    eax
  4052b6:	mov    ds:0x588586bc,al
  4052bb:	cli    
  4052bc:	das    
  4052bd:	jecxz  0x4052b6
  4052bf:	cld    
  4052c0:	ja     0x4052a8
  4052c2:	adc    al,0xd
  4052c4:	sub    al,0xb7
  4052c6:	dec    edx
  4052c7:	or     DWORD PTR [edx],eax
  4052c9:	sub    BYTE PTR [esi-0x6be451be],ch
  4052cf:	sub    ebp,ecx
  4052d1:	popa   
  4052d2:	ds sbb al,0xd4
  4052d5:	push   cs
  4052d6:	push   edx
  4052d7:	inc    esp
  4052d8:	shl    BYTE PTR [ecx+0x5f],1
  4052db:	xlat   BYTE PTR ds:[ebx]
  4052dc:	jne    0x405275
  4052de:	lea    eax,[ecx+0xa5d72b0]
  4052e4:	bound  edx,QWORD PTR [edx-0x6a]
  4052e7:	jl     0x405360
  4052e9:	mov    ds,WORD PTR [ebx]
  4052eb:	mov    WORD PTR [ebp-0x2a0e2616],fs
  4052f1:	fist   WORD PTR [ebp+0x10]
  4052f4:	fwait
  4052f5:	xlat   BYTE PTR ds:[ebx]
  4052f6:	repz jo 0x40536c
  4052f9:	and    ebp,edx
  4052fb:	sub    DWORD PTR [esp+ecx*1-0x3e],eax
  4052ff:	stos   BYTE PTR es:[edi],al
  405300:	cmp    dl,BYTE PTR [eax+0x294e5533]
  405306:	hlt    
  405307:	in     al,0xba
  405309:	dec    esi
  40530a:	cdq    
  40530b:	mov    dh,0x7b
  40530d:	not    DWORD PTR [esi+0x43]
  405310:	stos   BYTE PTR es:[edi],al
  405311:	fistp  QWORD PTR [esp+eax*1+0x18]
  405315:	je     0x405359
  405317:	sbb    BYTE PTR [ebx+0x61],cl
  40531a:	xchg   edi,eax
  40531b:	jp     0x405383
  40531d:	sbb    DWORD PTR [eax-0x2e],ebx
  405320:	or     DWORD PTR [ecx+0x16ec538b],edx
  405326:	in     eax,dx
  405327:	sbb    eax,0xc078b32d
  40532c:	or     BYTE PTR [ecx],bh
  40532e:	add    al,cl
  405330:	test   ebx,edx
  405332:	hlt    
  405333:	sbb    al,0xd1
  405335:	mov    edi,0x157df920
  40533a:	xchg   ebx,esp
  40533c:	call   0xf86f211b
  405341:	(bad)  
  405342:	mov    DWORD PTR [ebx],esi
  405344:	ja     0x4052e0
  405346:	xchg   esi,eax
  405347:	test   al,0xbf
  405349:	call   0xa0c8:0x8bb77aa1
  405350:	pop    ebx
  405351:	fdivr  QWORD PTR [ecx+0x1d]
  405354:	daa    
  405355:	and    al,0xf6
  405357:	lods   al,BYTE PTR ds:[esi]
  405358:	sbb    BYTE PTR [ecx-0x5c],0x96
  40535c:	sti    
  40535d:	sbb    BYTE PTR [esi-0x2e75155],dl
  405363:	adc    dl,BYTE PTR [edi+0x3599590a]
  405369:	pop    eax
  40536a:	adc    DWORD PTR [esi-0x73e1e88c],esi
  405370:	push   ecx
  405371:	je     0x4053a4
  405373:	sbb    esi,DWORD PTR [esi]
  405375:	push   edi
  405376:	push   es
  405377:	fld    DWORD PTR [ebp-0x1b]
  40537a:	and    dl,dl
  40537c:	pushf  
  40537d:	or     ebx,ecx
  40537f:	(bad)  
  405380:	repnz test al,0x62
  405383:	dec    eax
  405384:	and    ebp,edx
  405386:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405387:	(bad)  
  405388:	stos   BYTE PTR es:[edi],al
  405389:	mov    WORD PTR [ebx-0x1],gs
  40538c:	push   0xffffffaa
  40538e:	mov    al,0x92
  405390:	call   0x88cfd26e
  405395:	inc    ecx
  405396:	pop    es
  405397:	xchg   ebx,eax
  405398:	jb     0x405395
  40539a:	mov    esi,0x8833867
  40539f:	or     BYTE PTR [ebx+ebx*1],ch
  4053a2:	pushf  
  4053a3:	(bad)  
  4053a4:	fadd   DWORD PTR [ebx]
  4053a6:	dec    edi
  4053a7:	(bad)  
  4053a8:	fst    st(2)
  4053aa:	mov    al,ds:0xb5be8522
  4053af:	mov    ah,0xf
  4053b1:	data16 mov BYTE PTR [ebx+0x27a7bff7],ah
  4053b8:	dec    ecx
  4053b9:	mov    DWORD PTR [ebx],0x590001d4
  4053bf:	push   0x9c7fe582
  4053c4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4053c5:	mov    al,ds:0xb84f4708
  4053ca:	dec    esi
  4053cb:	jne    0x40542e
  4053cd:	retf   
  4053ce:	adc    al,0xb9
  4053d0:	dec    ebx
  4053d1:	jne    0x4053da
  4053d3:	pop    es
  4053d4:	aam    0xa9
  4053d6:	inc    ebp
  4053d7:	in     eax,dx
  4053d8:	cdq    
  4053d9:	jl     0x405406
  4053db:	adc    dh,al
  4053dd:	jmp    0x5553:0x86dcbf2b
  4053e4:	fdivr  QWORD PTR [edi-0x1a416154]
  4053ea:	cmp    DWORD PTR [edx+0xe],ebp
  4053ed:	es in  al,0x8d
  4053f0:	xor    al,0x9e
  4053f2:	sub    ch,BYTE PTR [eax+0x713074fd]
  4053f8:	retf   0x8740
  4053fb:	jle    0x4053a8
  4053fd:	popf   
  4053fe:	bound  ebx,QWORD PTR [ebx]
  405400:	inc    ecx
  405401:	rcr    BYTE PTR [esi-0x1c4e6013],cl
  405407:	lds    ebx,FWORD PTR [esp+eiz*4+0x5c]
  40540b:	add    BYTE PTR [eax-0x4a19832a],0xc9
  405412:	rcr    BYTE PTR [edx+ebx*8+0x2c6ae714],1
  405419:	leave  
  40541a:	add    eax,0x616173a4
  40541f:	ins    DWORD PTR es:[edi],dx
  405420:	sbb    bh,BYTE PTR [edi+ebx*4+0x711fe5fa]
  405427:	sar    bl,1
  405429:	jge    0x4053c1
  40542b:	cmp    dh,bl
  40542d:	scas   al,BYTE PTR es:[edi]
  40542e:	hlt    
  40542f:	icebp  
  405430:	mov    ebp,0x2a57171
  405435:	mov    eax,0x9bf6b858
  40543a:	fmul   DWORD PTR [eax+0x4a]
  40543d:	xchg   esi,eax
  40543e:	xor    ch,BYTE PTR [edx]
  405440:	das    
  405441:	in     eax,dx
  405442:	scas   eax,DWORD PTR es:[edi]
  405443:	fsub   DWORD PTR [esi-0x56]
  405446:	test   BYTE PTR [esi+0x2e2f449c],0x4b
  40544d:	stos   BYTE PTR es:[edi],al
  40544e:	scas   al,BYTE PTR es:[edi]
  40544f:	ror    DWORD PTR [edx-0x1d86f394],1
  405455:	push   ebp
  405456:	cld    
  405457:	jle    0x405408
  405459:	cmp    DWORD PTR [edx+0x10],eax
  40545c:	cwde   
  40545d:	push   es
  40545e:	add    eax,0x9c44c7df
  405463:	aaa    
  405464:	test   al,0x89
  405466:	xchg   ebx,eax
  405467:	and    DWORD PTR [edi-0x6d1b0f95],0xffffff88
  40546e:	push   ss
  40546f:	jno    0x4054e5
  405471:	mov    dl,0x8b
  405473:	push   0xc748f5d7
  405478:	push   edi
  405479:	pop    edx
  40547a:	xchg   ecx,eax
  40547b:	fimul  DWORD PTR [eax-0x7]
  40547f:	loope  0x4054bb
  405481:	jb     0x4054e4
  405483:	xchg   ebx,eax
  405484:	sbb    ecx,ebp
  405486:	jbe    0x40546b
  405488:	sub    ecx,esp
  40548a:	(bad)  
  40548b:	loopne 0x4054b8
  40548d:	sub    BYTE PTR [esi],dl
  40548f:	jmp    0xeb3f7561
  405494:	cmp    al,0x1f
  405496:	lds    ebx,FWORD PTR [esi-0x4cc02d18]
  40549c:	dec    esp
  40549d:	ds ja  0x4054fb
  4054a0:	mov    edx,0x219d0963
  4054a5:	adc    dl,BYTE PTR [ecx+0x1c]
  4054a8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4054a9:	and    al,0xbd
  4054ab:	enter  0x8a61,0xee
  4054af:	(bad)  [ebp+0x1a949732]
  4054b5:	in     al,0x36
  4054b7:	xchg   edi,eax
  4054b8:	sub    al,0xe1
  4054ba:	scas   eax,DWORD PTR es:[edi]
  4054bb:	inc    ecx
  4054bc:	jb     0x405460
  4054be:	mov    dl,0x7
  4054c0:	hlt    
  4054c1:	and    edx,DWORD PTR [ebx+0x5c]
  4054c4:	push   0x1e
  4054c6:	sub    esp,DWORD PTR ds:0x913299f9
  4054cc:	fadd   st,st(1)
  4054ce:	mov    esi,0x9826248f
  4054d3:	test   DWORD PTR [eax-0x2a],ecx
  4054d6:	dec    edi
  4054d7:	ret    0x206e
  4054da:	in     eax,0xaa
  4054dc:	pop    edx
  4054dd:	repnz inc cx
  4054e0:	pop    edx
  4054e1:	add    esp,edx
  4054e3:	adc    DWORD PTR [ebx-0x56],eax
  4054e6:	out    0x56,al
  4054e8:	pop    ds
  4054e9:	dec    eax
  4054ea:	cmp    edx,DWORD PTR [ecx]
  4054ec:	dec    BYTE PTR [eax-0x6cc6e525]
  4054f2:	xchg   esi,eax
  4054f3:	leave  
  4054f4:	xor    BYTE PTR [esi+0x2ef4156f],bl
  4054fa:	rcr    bx,0xfa
  4054fe:	cmp    cl,BYTE PTR [eax-0x62]
  405501:	xchg   esp,eax
  405502:	mov    ecx,0xdd39b3aa
  405507:	clc    
  405508:	adc    edi,DWORD PTR [esi+0x38]
  40550b:	mov    cl,0xfd
  40550d:	pusha  
  40550e:	xchg   ebp,eax
  40550f:	push   ss
  405510:	add    ah,BYTE PTR [ecx+0x5066fe14]
  405516:	adc    eax,DWORD PTR [eax-0x62]
  405519:	add    BYTE PTR [edx+0x71],0x74
  40551d:	cwde   
  40551e:	mov    ds:0xf6169fca,eax
  405523:	shr    DWORD PTR ds:0xad3882a7,1
  405529:	add    eax,DWORD PTR [esi+0x27]
  40552c:	fsubr  st,st(0)
  40552e:	(bad)  
  40552f:	jno    0x405552
  405531:	mov    ah,0x67
  405533:	mov    cl,0xdc
  405535:	xchg   esp,eax
  405536:	arpl   ax,bx
  405538:	call   0x7809:0x70fc3098
  40553f:	lods   eax,DWORD PTR ds:[esi]
  405540:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405541:	in     al,dx
  405542:	mov    ecx,0xae5cb7d2
  405547:	das    
  405548:	xor    al,BYTE PTR [esi]
  40554a:	fs retf 0x7a92
  40554e:	and    eax,0xeb801cfb
  405553:	out    dx,eax
  405554:	pop    ss
  405555:	mov    cl,0xa9
  405557:	test   DWORD PTR [edi],0x7dec5df9
  40555d:	sub    DWORD PTR [esi+ebx*2],edx
  405560:	(bad)  
  405561:	mov    al,0xd6
  405563:	xchg   esp,eax
  405564:	mov    ds:0x6d62eeb4,eax
  405569:	or     al,0x6d
  40556b:	test   eax,0x2a86455c
  405570:	mov    dh,0x85
  405572:	sub    eax,0x694bd01e
  405577:	push   eax
  405578:	and    eax,0x2c07324f
  40557d:	(bad)  
  40557e:	test   DWORD PTR [edi],0x6db6ae25
  405584:	jle    0x40550e
  405586:	dec    edi
  405587:	xchg   ecx,eax
  405588:	lock in al,0x8f
  40558b:	into   
  40558c:	jnp    0x40555b
  40558e:	lock fs jl 0x31e688b0
  405596:	fcmovne st,st(4)
  405598:	imul   ebp,DWORD PTR [ebx+0x11],0x30
  40559c:	and    BYTE PTR [edi-0x16e7e7a6],bh
  4055a2:	cmc    
  4055a3:	mov    ch,0x3
  4055a5:	adc    al,0x41
  4055a7:	shl    DWORD PTR ds:0xe1d65747,cl
  4055ad:	jge    0x405572
  4055af:	sti    
  4055b0:	mov    BYTE PTR [esi+ecx*1],cl
  4055b3:	(bad)  
  4055b4:	sbb    al,0xff
  4055b6:	cs push ebp
  4055b8:	fimul  WORD PTR [eax-0x693c9da8]
  4055be:	(bad)  
  4055bf:	cli    
  4055c0:	push   ss
  4055c1:	adc    eax,0xcd6a2703
  4055c6:	mov    esp,0xe142f495
  4055cb:	inc    esi
  4055cc:	sbb    eax,0xc7439aee
  4055d1:	xor    ecx,edi
  4055d3:	sub    BYTE PTR [ecx-0x7ddb2afc],bh
  4055d9:	push   eax
  4055da:	ret    0x9f30
  4055dd:	dec    esp
  4055de:	xor    al,0x41
  4055e0:	stos   DWORD PTR es:[edi],eax
  4055e1:	(bad)  
  4055e2:	fidiv  WORD PTR [esi+esi*1]
  4055e5:	loopne 0x4055ee
  4055e7:	sbb    esi,DWORD PTR [edx+0xf]
  4055ea:	push   esi
  4055eb:	adc    al,0x17
  4055ed:	fdivr  QWORD PTR [eax+0x27a47da0]
  4055f3:	cmp    DWORD PTR [ebp+0x2b],ebx
  4055f6:	aaa    
  4055f7:	loopne 0x405637
  4055f9:	in     al,dx
  4055fa:	xor    ax,0xf391
  4055fe:	mov    cl,0x10
  405600:	dec    ebx
  405601:	push   0x2e
  405603:	push   ebp
  405604:	push   ds
  405605:	(bad)
  405608:	fisttp QWORD PTR [edx+ebx*4+0x5e516b92]
  40560f:	pop    es
  405610:	xchg   edx,eax
  405611:	ret    0x4437
  405614:	ret    0xd59d
  405617:	fsub   DWORD PTR [ebp*2+0x2309e554]
  40561e:	and    DWORD PTR [edi],0xffffff96
  405621:	inc    esi
  405622:	ins    BYTE PTR es:[edi],dx
  405623:	inc    ebp
  405624:	arpl   WORD PTR [edx-0x11],sp
  405627:	jno    0x4055ec
  405629:	aaa    
  40562a:	jp     0x405628
  40562c:	arpl   cx,sp
  40562e:	sbb    eax,0xaca2a22
  405633:	retf   0x7592
  405636:	xchg   ecx,eax
  405637:	sbb    edx,ebx
  405639:	jb     0x40561e
  40563b:	xor    eax,DWORD PTR [esp+eax*8-0xff7a3f7]
  405642:	ss inc esi
  405644:	scas   al,BYTE PTR es:[edi]
  405645:	mov    bh,0x19
  405647:	xchg   esp,eax
  405648:	add    edx,ebp
  40564a:	outs   dx,DWORD PTR ds:[esi]
  40564b:	push   es
  40564c:	loope  0x405600
  40564e:	mov    ch,0xc3
  405650:	nop
  405651:	add    DWORD PTR [esp-0x12],esi
  405655:	ins    BYTE PTR es:[edi],dx
  405656:	xchg   esp,eax
  405657:	cdq    
  405658:	jl     0x405645
  40565a:	lds    edx,FWORD PTR [edi-0x7841d68a]
  405660:	scas   al,BYTE PTR es:[edi]
  405661:	push   esp
  405662:	adc    edi,DWORD PTR [esi]
  405664:	mov    ecx,0x20821111
  405669:	hlt    
  40566a:	mov    al,ds:0x21bddd95
  40566f:	sahf   
  405670:	gs aad 0xd7
  405673:	push   esi
  405674:	sbb    eax,esi
  405676:	pop    ds
  405677:	jb     0x405668
  405679:	mov    edi,0xfa54216c
  40567e:	cmc    
  40567f:	push   edx
  405680:	inc    ebx
  405681:	adc    BYTE PTR [edx],ch
  405683:	mov    bh,0x8d
  405685:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405686:	xor    eax,DWORD PTR [esi]
  405688:	dec    ebp
  405689:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40568a:	or     al,0x8
  40568c:	jnp    0x4056aa
  40568e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40568f:	pop    ecx
  405690:	lock or ecx,DWORD PTR [edx+ebx*2]
  405694:	adc    eax,0xeced9b12
  405699:	push   0xffffff8c
  40569b:	lods   al,BYTE PTR ds:[esi]
  40569c:	add    ebp,edx
  40569e:	fcom   DWORD PTR [edi+0xf]
  4056a1:	pop    ebx
  4056a2:	jmp    0x73ff8557
  4056a7:	lahf   
  4056a8:	aaa    
  4056a9:	mov    ecx,0xfac33a
  4056ae:	mov    ebx,0x6fd68e77
  4056b3:	nop
  4056b4:	test   DWORD PTR [eax+ecx*8],esi
  4056b7:	hlt    
  4056b8:	sar    ch,1
  4056ba:	dec    ebx
  4056bb:	and    edx,ebp
  4056bd:	jb     0x4056a7
  4056bf:	leave  
  4056c0:	stos   BYTE PTR es:[edi],al
  4056c1:	outs   dx,BYTE PTR ds:[esi]
  4056c2:	cmp    eax,0x294038f5
  4056c7:	mov    dh,0xce
  4056c9:	mov    ecx,0xeefd1428
  4056ce:	rcl    DWORD PTR [ecx],cl
  4056d0:	inc    ebx
  4056d1:	popa   
  4056d2:	out    0xf5,al
  4056d4:	lods   al,BYTE PTR ds:[esi]
  4056d5:	mov    ch,0x8a
  4056d7:	add    DWORD PTR ds:0x800c0f96,edx
  4056dd:	sbb    ebx,edx
  4056df:	mov    ds:0xf7a10df3,eax
  4056e4:	cli    
  4056e5:	or     al,0xde
  4056e7:	mov    ds:0x96837ad5,al
  4056ec:	mov    WORD PTR [ebx],ds
  4056ee:	mov    edi,0x884acc4
  4056f3:	call   0xb2b09428
  4056f8:	gs and eax,0xb8f0e224
  4056fe:	push   esi
  4056ff:	jnp    0x405778
  405701:	or     eax,0x51d58502
  405706:	mov    esp,0x1a492f50
  40570b:	stos   BYTE PTR es:[edi],al
  40570c:	stos   BYTE PTR es:[edi],al
  40570d:	xor    eax,0x44f5e6e1
  405712:	cld    
  405713:	ret    
  405714:	or     eax,0x8068eb06
  405719:	mov    DWORD PTR ds:0x8ba77de0,eax
  40571f:	lods   eax,DWORD PTR ds:[esi]
  405720:	jb     0x4056bc
  405722:	or     edi,DWORD PTR [esi+ebx*8]
  405725:	adc    eax,0x8b8e22b3
  40572a:	sbb    eax,0xe37febce
  40572f:	mov    al,BYTE PTR [ebp+ebx*4-0x1c96bc3]
  405736:	xor    al,0x29
  405738:	mov    edx,0x69c9a2fb
  40573d:	pop    ebx
  40573e:	mov    edx,0x97018aee
  405743:	daa    
  405744:	je     0x40573f
  405746:	xchg   edx,eax
  405747:	or     BYTE PTR [edi-0x4a],cl
  40574a:	lahf   
  40574b:	add    ch,BYTE PTR [ebx-0x5c]
  40574e:	aas    
  40574f:	aas    
  405750:	push   edi
  405751:	pop    eax
  405752:	and    esi,edx
  405754:	ror    dh,0x5e
  405757:	sub    dl,BYTE PTR [ebx-0x37b3d495]
  40575d:	(bad)  
  40575f:	sbb    bl,BYTE PTR [ebp-0xb]
  405762:	dec    edi
  405763:	xchg   edx,eax
  405764:	mov    dl,0x63
  405766:	std    
  405767:	loopne 0x4056f0
  405769:	rol    BYTE PTR [edx],cl
  40576b:	inc    esi
  40576c:	xchg   eax,eax
  40576e:	out    0xae,al
  405770:	and    al,0x8a
  405772:	inc    ebp
  405773:	and    dl,BYTE PTR [eax]
  405775:	push   ebx
  405776:	hlt    
  405777:	mov    bh,0x7
  405779:	push   edi
  40577a:	and    DWORD PTR [ebp+0x46],ecx
  40577d:	push   ss
  40577e:	adc    ebx,edx
  405780:	lods   al,BYTE PTR ds:[esi]
  405781:	xchg   BYTE PTR [edi],dl
  405783:	mov    esp,0x1777cd02
  405788:	(bad)  
  405789:	adc    al,0x69
  40578b:	pop    ss
  40578c:	and    eax,0x7f521bba
  405791:	pusha  
  405792:	aaa    
  405793:	push   ds
  405794:	sub    esp,DWORD PTR [edx]
  405796:	sahf   
  405797:	push   edi
  405798:	pop    edi
  405799:	add    eax,DWORD PTR [ebx+0x5c]
  40579c:	jp     0x4057f3
  40579e:	jns    0x40576b
  4057a0:	es push ebx
  4057a2:	jns    0x40573e
  4057a4:	lds    eax,FWORD PTR fs:[edx]
  4057a7:	out    dx,eax
  4057a8:	addr16 pop edx
  4057aa:	mov    dl,0x8d
  4057ac:	jg     0x40578e
  4057ae:	push   0xffffffd1
  4057b0:	push   cs
  4057b1:	out    dx,al
  4057b2:	mov    ch,0x2a
  4057b4:	mov    ds:0x858430df,eax
  4057b9:	push   edx
  4057ba:	pop    edi
  4057bb:	fmul   QWORD PTR [bp-0x77]
  4057bf:	xor    esp,ebx
  4057c1:	adc    eax,0x6f26d0ec
  4057c6:	aas    
  4057c7:	ins    DWORD PTR es:[edi],dx
  4057c8:	repnz push edx
  4057ca:	mov    eax,0xf072ad25
  4057cf:	mov    esp,0x706ecd7e
  4057d4:	jnp    0x405791
  4057d6:	sbb    BYTE PTR [esi+0x3ca62490],ch
  4057dc:	out    dx,al
  4057dd:	js     0x405797
  4057df:	sbb    al,0xe1
  4057e1:	pop    esi
  4057e2:	lds    ebx,FWORD PTR [ebp-0x522e678b]
  4057e8:	and    al,0xcc
  4057ea:	shl    ecx,1
  4057ec:	push   edi
  4057ed:	(bad)  [ebp-0x67]
  4057f0:	outs   dx,DWORD PTR ds:[esi]
  4057f1:	scas   al,BYTE PTR es:[edi]
  4057f2:	cmp    ecx,DWORD PTR ds:[edx+0xcfc22f0]
  4057f9:	int    0x98
  4057fb:	pop    edx
  4057fc:	in     al,0x26
  4057fe:	(bad)  
  4057ff:	pop    ebx
  405800:	mov    dh,0x8e
  405802:	cld    
  405803:	loop   0x4057d7
  405805:	pop    ecx
  405806:	dec    edx
  405807:	add    al,0x4c
  405809:	mov    al,0x45
  40580b:	cdq    
  40580c:	cmp    cl,bl
  40580e:	mov    bh,0x60
  405810:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405811:	std    
  405812:	inc    ebp
  405813:	aad    0x58
  405815:	out    0xb4,eax
  405817:	test   ebp,edx
  405819:	jnp    0x405828
  40581b:	xchg   BYTE PTR [edi-0x19],bh
  40581e:	xor    BYTE PTR [ebx+0x79e5144],ah
  405824:	popa   
  405825:	outs   dx,DWORD PTR ds:[esi]
  405826:	jmp    0x907064f2
  40582b:	sar    BYTE PTR [ebx+0x5e],1
  40582e:	adc    DWORD PTR [bx+si-0x80],ebp
  405832:	loope  0x405851
  405834:	aad    0x94
  405836:	mov    edx,DWORD PTR [ecx+0x5d]
  405839:	in     eax,0xd3
  40583b:	arpl   WORD PTR [edx],ax
  40583d:	leave  
  40583e:	sub    ebp,esp
  405840:	adc    ch,bl
  405842:	lds    esp,FWORD PTR [edx]
  405844:	and    al,0xb8
  405846:	mov    DWORD PTR [ecx-0x71],edx
  405849:	inc    ebx
  40584a:	aad    0x68
  40584c:	fs mov bh,0x8d
  40584f:	stos   BYTE PTR es:[edi],al
  405850:	dec    ecx
  405851:	shl    BYTE PTR [eax-0x2e2ca335],1
  405857:	cmp    DWORD PTR [edi-0x34],0x5f
  40585b:	leave  
  40585c:	(bad)  
  40585d:	out    dx,al
  40585e:	dec    esi
  40585f:	loop   0x4057fa
  405861:	(bad)  
  405862:	xor    eax,0x110e12b9
  405867:	jg     0x4058bb
  405869:	lds    ecx,FWORD PTR [ecx-0x4eb81e4]
  40586f:	xor    DWORD PTR [edi+0x76],0x3590c2e
  405876:	jle    0x4058ef
  405878:	popf   
  405879:	cli    
  40587a:	clc    
  40587b:	aad    0x0
  40587d:	add    DWORD PTR [ebx-0x3971b5d7],0x45
  405884:	shr    dl,1
  405886:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405887:	push   es
  405888:	xchg   DWORD PTR [edx+0x78],eax
  40588b:	fild   WORD PTR [esi+0x2e]
  40588e:	mov    ds:0x9d8c4a64,al
  405893:	mov    cl,0x54
  405895:	xchg   ebp,eax
  405896:	pop    es
  405897:	mov    esi,0x2681fcf5
  40589c:	inc    ebx
  40589d:	xchg   edx,eax
  40589e:	mov    ds:0xb2ac896f,al
  4058a3:	pushf  
  4058a4:	icebp  
  4058a5:	push   esp
  4058a6:	shl    DWORD PTR [esi+0x3b93040d],0xa5
  4058ad:	in     eax,0x4a
  4058af:	pop    ecx
  4058b0:	xchg   esp,eax
  4058b1:	and    BYTE PTR [eax],ah
  4058b3:	es dec edx
  4058b5:	push   0xffffffd1
  4058b7:	or     eax,0x779c03dc
  4058bc:	cmp    al,ah
  4058be:	jo     0x40590c
  4058c0:	sar    BYTE PTR [ebx],cl
  4058c2:	out    dx,eax
  4058c3:	dec    eax
  4058c4:	xor    BYTE PTR [eax-0x1e92c42e],dh
  4058ca:	cld    
  4058cb:	mov    eax,ds:0xc06c7f6b
  4058d0:	mov    DWORD PTR [ebx],0xb2e035f3
  4058d6:	and    DWORD PTR [eax+edx*1],edi
  4058d9:	dec    DWORD PTR ds:0xd2290982
  4058df:	push   ebx
  4058e0:	sti    
  4058e1:	push   edi
  4058e2:	imul   BYTE PTR [edi]
  4058e4:	pop    esp
  4058e5:	loope  0x405928
  4058e7:	call   0xf6d73ad0
  4058ec:	and    BYTE PTR [edx-0x3f0d0047],al
  4058f2:	xchg   DWORD PTR [esi+0x27732cc1],ebx
  4058f8:	mov    dh,0xad
  4058fa:	inc    ecx
  4058fb:	aaa    
  4058fc:	nop
  4058fd:	jg     0x40597e
  4058ff:	jae    0x4058f3
  405901:	gs mov esi,0x11cb456c
  405907:	sub    BYTE PTR [edi+0xe4cd231],ch
  40590d:	sbb    bh,BYTE PTR [ecx-0x672c90c7]
  405913:	inc    esp
  405914:	sti    
  405915:	adc    al,BYTE PTR [eax+esi*4]
  405918:	add    ecx,DWORD PTR [edi+0x53f01e49]
  40591e:	push   edi
  40591f:	mov    eax,DWORD PTR [ebp+0xa]
  405922:	in     eax,dx
  405923:	fwait
  405924:	xlat   BYTE PTR ds:[ebx]
  405925:	adc    esp,DWORD PTR [esi+0x4a]
  405928:	repnz pop ebx
  40592a:	xchg   esi,eax
  40592b:	imul   eax,eax,0xfffffff4
  40592e:	dec    edx
  40592f:	adc    edx,DWORD PTR [edi]
  405931:	out    dx,al
  405932:	cs and eax,0x963a2a16
  405938:	xchg   BYTE PTR [edi+0x34],dl
  40593b:	mov    BYTE PTR [ecx+eax*2+0x7f],dh
  40593f:	and    DWORD PTR [ebx-0x17998018],esp
  405945:	cld    
  405946:	jns    0x405998
  405948:	test   cl,ch
  40594a:	xor    cl,BYTE PTR [esi-0x67]
  40594d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40594e:	cmp    ebp,DWORD PTR [edi]
  405950:	push   ds
  405951:	push   0x53f04b1e
  405956:	push   ecx
  405957:	call   0xd008:0x902b6f3d
  40595e:	sbb    bl,bl
  405960:	in     al,dx
  405961:	sub    al,0x41
  405963:	inc    ebx
  405964:	pop    eax
  405965:	dec    eax
  405966:	push   ebx
  405967:	mov    edi,0xfe8c8318
  40596c:	daa    
  40596d:	mov    eax,ds:0xcb56b138
  405973:	pop    esp
  405974:	repz add BYTE PTR [ebx],bh
  405977:	and    DWORD PTR ds:0x8be1b34b,edi
  40597d:	ds mov ah,0xd7
  405980:	add    BYTE PTR [edi],dh
  405982:	shl    esp,cl
  405984:	or     bl,BYTE PTR [edi]
  405986:	cmp    DWORD PTR [esi+edi*8+0x8296989],ebp
  40598d:	mov    dl,0xc7
  40598f:	inc    ebx
  405990:	mov    esp,0xa744afb4
  405995:	aaa    
  405996:	mov    ebp,0xc917240e
  40599b:	adc    bl,dh
  40599d:	sub    esp,ebx
  40599f:	push   ebp
  4059a0:	jmp    0x4a2e:0xcbe0ef4f
  4059a7:	jns    0x4059a6
  4059a9:	cmp    BYTE PTR [ebx+0xb],0x29
  4059ad:	ds jo  0x4059e0
  4059b0:	sub    esp,DWORD PTR [ebx]
  4059b2:	xchg   ecx,eax
  4059b3:	xor    bh,ah
  4059b5:	imul   ebx,ebp,0xdaa229bb
  4059bb:	aad    0x1a
  4059bd:	jns    0x4059f7
  4059bf:	pop    esi
  4059c0:	mov    esi,0x3d1769f7
  4059c5:	xchg   dl,ch
  4059c7:	xchg   DWORD PTR [ecx-0x34],ebp
  4059ca:	xchg   ecx,eax
  4059cb:	out    0xd0,al
  4059cd:	ds xchg edi,eax
  4059cf:	xor    eax,0xcac34441
  4059d4:	es xor eax,0x55e8c641
  4059da:	outs   dx,BYTE PTR ds:[esi]
  4059db:	inc    ebx
  4059dc:	xchg   esp,eax
  4059dd:	arpl   si,cx
  4059df:	xor    edi,esi
  4059e1:	jae    0x4059a1
  4059e3:	shl    BYTE PTR [edx],0xf1
  4059e6:	out    0x93,eax
  4059e8:	xor    edi,DWORD PTR [esi]
  4059ea:	lahf   
  4059eb:	push   eax
  4059ec:	mov    gs,WORD PTR [eax+0x2d]
  4059ef:	ja     0x4059d9
  4059f1:	ficom  DWORD PTR [eax+0x7a5d0915]
  4059f7:	(bad)  
  4059f9:	adc    BYTE PTR [ebx],ch
  4059fb:	leave  
  4059fc:	sbb    ch,0x4b
  4059ff:	mov    edx,0xd2df1411
  405a04:	(bad)  
  405a05:	mov    BYTE PTR [eax+0x2f],dh
  405a08:	rcr    DWORD PTR [esp+eiz*4-0x46],0xda
  405a0d:	mov    eax,cs:0xbdb3a346
  405a13:	pop    eax
  405a14:	cmp    eax,DWORD PTR [ecx]
  405a16:	mov    edi,eax
  405a18:	dec    ebx
  405a19:	pop    ds
  405a1a:	mov    ecx,0xe0e09e4c
  405a1f:	inc    eax
  405a20:	aas    
  405a21:	jle    0x405a6e
  405a23:	call   0xea18:0x901c3649
  405a2a:	dec    ecx
  405a2b:	aam    0x9d
  405a2d:	lods   eax,DWORD PTR ds:[esi]
  405a2e:	fstp   st(3)
  405a30:	mov    ds:0x7f82d096,al
  405a35:	ret    0xe66a
  405a38:	cdq    
  405a39:	pusha  
  405a3a:	cmp    DWORD PTR [edi+0x1419ab8a],eax
  405a40:	jl     0x405a31
  405a42:	push   ebx
  405a43:	adc    BYTE PTR [edi+edx*2+0x60896184],bl
  405a4a:	adc    DWORD PTR [ebx+0x1674c793],ecx
  405a50:	mov    cl,BYTE PTR [esi-0xa7dd80]
  405a56:	inc    eax
  405a57:	aaa    
  405a58:	loop   0x405a8f
  405a5a:	mov    bh,0x5d
  405a5c:	jl     0x405a8e
  405a5e:	leave  
  405a5f:	pop    eax
  405a60:	ja     0x405a41
  405a62:	mov    edi,0x11203939
  405a67:	sbb    al,0x68
  405a69:	xlat   BYTE PTR ds:[ebx]
  405a6a:	xchg   ebx,eax
  405a6b:	outs   dx,DWORD PTR ds:[esi]
  405a6c:	jmp    0x86d9:0xfe87364b
  405a73:	pushf  
  405a74:	xchg   edi,eax
  405a75:	pop    es
  405a76:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405a77:	mov    ecx,0xf8afa24c
  405a7c:	jl     0x405ac2
  405a7e:	pusha  
  405a7f:	xchg   esp,eax
  405a80:	sub    ecx,DWORD PTR [esi]
  405a82:	out    0xa9,eax
  405a84:	cmp    ecx,edi
  405a86:	sahf   
  405a87:	mov    ch,0xf7
  405a89:	mov    bl,0x76
  405a8b:	and    BYTE PTR [edx+0x23],ah
  405a8e:	(bad)  
  405a8f:	stc    
  405a90:	inc    esi
  405a91:	sbb    al,0x0
  405a93:	call   FWORD PTR [edx]
  405a95:	in     eax,0x1
  405a97:	jo     0x405aa7
  405a99:	adc    DWORD PTR [edi-0x5d1d7483],0x99cc7505
  405aa3:	and    bl,bh
  405aa5:	icebp  
  405aa6:	(bad)  
  405aa7:	mov    ebx,0xd2660e10
  405aac:	xor    eax,0x57665cae
  405ab1:	xchg   edx,eax
  405ab2:	ins    BYTE PTR es:[edi],dx
  405ab3:	jle    0x405aef
  405ab5:	xchg   ebx,eax
  405ab6:	test   edi,0x4d9d9f6
  405abc:	inc    ebx
  405abd:	fimul  WORD PTR [ebp-0x64]
  405ac0:	push   ebp
  405ac1:	sahf   
  405ac2:	std    
  405ac3:	int3   
  405ac4:	push   0x1
  405ac6:	loope  0x405ab2
  405ac8:	xor    BYTE PTR [ebp-0x12],0xa8
  405acc:	cld    
  405acd:	inc    ecx
  405ace:	mov    eax,ds:0xe112c36e
  405ad3:	popf   
  405ad4:	rcr    dh,1
  405ad6:	arpl   WORD PTR [esi-0x70],sp
  405ad9:	ins    BYTE PTR es:[edi],dx
  405ada:	jge    0x405af6
  405adc:	pop    esp
  405add:	cmp    eax,DWORD PTR [eax-0x54]
  405ae0:	lahf   
  405ae1:	sub    DWORD PTR [ebp+0x36bc2179],eax
  405ae7:	push   edi
  405ae8:	cmp    al,BYTE PTR [ebx+0x18d76f48]
  405aee:	inc    ebp
  405aef:	jg     0x405aac
  405af1:	or     eax,0x352ca96f
  405af6:	jns    0x405b04
  405af8:	inc    ebp
  405af9:	jae    0x405aba
  405afb:	lods   al,BYTE PTR ds:[esi]
  405afc:	xchg   ebx,eax
  405afd:	add    BYTE PTR [eax],ch
  405aff:	jbe    0x405aed
  405b01:	push   ss
  405b02:	icebp  
  405b03:	imul   ebx,DWORD PTR [ebp-0x2e],0xffffff96
  405b07:	mov    dl,0xe1
  405b09:	dec    esp
  405b0a:	sub    ecx,ebx
  405b0c:	mov    al,0xd4
  405b0e:	aaa    
  405b0f:	sbb    eax,DWORD PTR [ecx-0x62]
  405b12:	pusha  
  405b13:	and    al,0x40
  405b15:	ret    0x57b
  405b18:	jmp    0x17a6:0x6181d89e
  405b1f:	cmp    ebx,DWORD PTR [eax+0x4a8d2496]
  405b25:	or     esi,ecx
  405b27:	aas    
  405b28:	inc    esi
  405b29:	adc    ebx,DWORD PTR [edi+0x74a7b27d]
  405b2f:	in     al,dx
  405b30:	and    dl,BYTE PTR [esi+0x5dd920e1]
  405b36:	mov    al,0xdc
  405b38:	add    DWORD PTR [ecx+ebp*1+0x76],ebx
  405b3c:	sbb    BYTE PTR [edx],ch
  405b3e:	push   edi
  405b3f:	enter  0xcf9b,0x9a
  405b43:	cli    
  405b44:	mov    ah,BYTE PTR [edx-0x27]
  405b47:	inc    esi
  405b48:	call   0x8525:0x6cd44228
  405b4f:	pop    ebx
  405b50:	pop    eax
  405b51:	test   al,0x2b
  405b53:	add    ebp,DWORD PTR [eax]
  405b55:	aaa    
  405b56:	inc    edi
  405b57:	push   ecx
  405b58:	icebp  
  405b59:	push   esi
  405b5a:	push   0xe8193666
  405b5f:	dec    edx
  405b60:	(bad)  
  405b61:	das    
  405b62:	jae    0x405b82
  405b64:	sbb    eax,0x8ae8acdf
  405b69:	cmp    ebp,DWORD PTR ds:0x18f754bf
  405b6f:	stos   DWORD PTR es:[edi],eax
  405b70:	add    BYTE PTR [ecx+ebx*8+0x6d],al
  405b74:	jmp    0x405b0a
  405b76:	lods   eax,DWORD PTR ds:[esi]
  405b77:	lea    esi,[edx]
  405b79:	ins    BYTE PTR es:[edi],dx
  405b7a:	stos   BYTE PTR es:[edi],al
  405b7b:	js     0x405b7e
  405b7d:	mov    ds,ebx
  405b7f:	add    bl,BYTE PTR [eax-0x3072f49f]
  405b85:	cli    
  405b86:	arpl   WORD PTR [eax+0x6c],bx
  405b89:	pop    esi
  405b8a:	jb     0x405b37
  405b8c:	inc    edi
  405b8d:	into   
  405b8e:	cmp    ch,al
  405b90:	push   cs
  405b91:	pop    ebp
  405b92:	(bad)  
  405b94:	ja     0x405c02
  405b96:	fs scas eax,DWORD PTR es:[edi]
  405b98:	imul   ecx
  405b9a:	aad    0x5d
  405b9c:	inc    edi
  405b9d:	push   esi
  405b9e:	(bad)  
  405b9f:	fmulp  st(6),st
  405ba1:	aam    0xa
  405ba3:	pop    esp
  405ba4:	mov    edi,0xe99aaf07
  405ba9:	(bad)  
  405baa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405bab:	lods   eax,DWORD PTR ds:[esi]
  405bac:	jno    0x405ba3
  405bae:	ret    0x1467
  405bb1:	add    eax,0x12a8ae3b
  405bb6:	test   eax,0xd3b94d79
  405bbb:	mov    ebx,DWORD PTR [ebx]
  405bbd:	in     eax,dx
  405bbe:	retf   
  405bbf:	mov    bp,0xe97b
  405bc3:	pop    es
  405bc4:	mov    edx,0x8bf94403
  405bc9:	popf   
  405bca:	xchg   DWORD PTR [edi-0x5b],ebx
  405bcd:	cmp    eax,0x92b5858
  405bd2:	add    BYTE PTR [edx-0x395e9bda],al
  405bd8:	popa   
  405bd9:	(bad)  
  405bda:	xchg   ebx,eax
  405bdb:	and    bl,BYTE PTR [edi+0x42]
  405bde:	stos   WORD PTR es:[edi],ax
  405be0:	in     al,dx
  405be1:	mov    esi,0xbaca4aa4
  405be6:	pop    ecx
  405be7:	or     ebp,DWORD PTR [ebx]
  405be9:	call   0x4798:0x1de688e7
  405bf0:	into   
  405bf1:	sbb    ebx,esp
  405bf3:	add    eax,0x7c7ec28
  405bf8:	mov    ch,0x1c
  405bfa:	stc    
  405bfb:	das    
  405bfc:	dec    ebx
  405bfd:	enter  0x2b68,0xea
  405c01:	inc    esi
  405c02:	jae    0x405c71
  405c04:	mov    esp,0xf05fa291
  405c09:	push   ebp
  405c0a:	dec    ebx
  405c0b:	call   0xaacf0fd2
  405c10:	dec    ecx
  405c11:	outs   dx,BYTE PTR ds:[esi]
  405c12:	ficomp WORD PTR [edi]
  405c14:	pop    esp
  405c15:	popa   
  405c16:	ins    BYTE PTR es:[edi],dx
  405c17:	xchg   ebp,eax
  405c18:	or     bl,bh
  405c1a:	in     eax,dx
  405c1b:	les    ebp,FWORD PTR [ebx]
  405c1d:	ret    
  405c1e:	cmp    edx,eax
  405c20:	jne    0x405caa
  405c26:	mov    eax,DWORD PTR [ebp-0xc]
  405c29:	mov    dl,BYTE PTR [eax+ecx*1+0x801]
  405c30:	mov    eax,DWORD PTR [ebp-0x20]
  405c33:	mov    ebx,DWORD PTR [ebp-0x18]
  405c36:	xor    eax,esi
  405c38:	xor    ebx,esi
  405c3a:	add    eax,edi
  405c3c:	add    ebx,edi
  405c3e:	mov    BYTE PTR [ebp-0x1],dl
  405c41:	cmp    eax,ebx
  405c43:	jae    0x405c98
  405c49:	lea    edx,[eax-0x3272ec]
  405c4f:	mov    DWORD PTR [ebp-0x14],edx
  405c52:	mov    ebx,DWORD PTR [ebp-0x14]
  405c55:	xor    ebx,esi
  405c57:	add    ebx,0x7f55d8f2
  405c5d:	lea    edx,[ebp+eax*4-0x3c]
  405c61:	mov    DWORD PTR [edx],ebx
  405c63:	mov    ebx,DWORD PTR [edx]
  405c65:	cmp    ebx,0x244ecb93
  405c6b:	jbe    0x405c7c
  405c71:	add    DWORD PTR [edx],0x405fcdc
  405c77:	jmp    0x405c82
  405c7c:	add    DWORD PTR [edx],0xfdaf4324
  405c82:	mov    edx,DWORD PTR [ebp-0x18]
  405c85:	xor    edx,esi
  405c87:	inc    eax
  405c88:	inc    DWORD PTR [ebp-0x14]
  405c8b:	add    edx,edi
  405c8d:	cmp    eax,edx
  405c8f:	jb     0x405c52
  405c95:	mov    dl,BYTE PTR [ebp-0x1]
  405c98:	xor    dl,0x79
  405c9b:	sub    dl,0x3
  405c9e:	xor    eax,eax
  405ca0:	mov    eax,DWORD PTR [ebp-0xc]
  405ca3:	mov    BYTE PTR [eax+ecx*1+0x801],dl
  405caa:	mov    eax,DWORD PTR [ebp-0xc]
  405cad:	mov    edx,DWORD PTR [ebp-0x20]
  405cb0:	sub    eax,edi
  405cb2:	xor    eax,esi
  405cb4:	cmp    eax,edx
  405cb6:	jne    0x40809e
  405cbc:	mov    eax,DWORD PTR [ebp-0x10]
  405cbf:	mov    edx,DWORD PTR [ebp-0x8]
  405cc2:	xor    eax,esi
  405cc4:	xor    edx,esi
  405cc6:	sub    eax,edx
  405cc8:	sub    eax,edi
  405cca:	xor    eax,esi
  405ccc:	mov    DWORD PTR [ebp-0x10],eax
  405ccf:	mov    eax,DWORD PTR [ebp-0x8]
  405cd2:	jmp    0x408090
  405cd7:	mov    eax,ds:0x7b519088
  405cdc:	dec    ecx
  405cdd:	mov    ds:0xeab98a78,eax
  405ce2:	(bad)  
  405ce4:	jge    0x405cd1
  405ce6:	push   edi
  405ce7:	cmp    al,0x33
  405ce9:	jp     0x405d65
  405ceb:	fstp   QWORD PTR [edi+0x7a]
  405cee:	jp     0x405c95
  405cf0:	jb     0x405d17
  405cf2:	ret    
  405cf3:	mov    ah,0xb0
  405cf5:	retf   
  405cf6:	dec    ebp
  405cf7:	cld    
  405cf8:	loopne 0x405cf9
  405cfa:	pop    ss
  405cfb:	and    al,0xa2
  405cfd:	pop    ss
  405cfe:	loope  0x405d08
  405d00:	int    0x54
  405d02:	mov    esp,0x616a40c9
  405d07:	sbb    eax,0x77f4954d
  405d0c:	(bad)  
  405d0d:	cmp    esp,DWORD PTR [ebx+0x59051ab2]
  405d13:	cs mov al,es:0xc8b4371d
  405d1a:	out    0x12,eax
  405d1c:	retf   
  405d1d:	add    WORD PTR [edx+0x26],cx
  405d21:	inc    esp
  405d22:	fs test al,0x8c
  405d25:	cmp    eax,0x182527ec
  405d2a:	or     BYTE PTR [edi],bh
  405d2c:	ss repnz (bad) 
  405d2f:	ror    esp,1
  405d31:	sbb    DWORD PTR [esi],edx
  405d33:	and    eax,0x578285fd
  405d38:	in     al,0xaa
  405d3a:	fwait
  405d3b:	jl     0x405d0d
  405d3d:	ror    BYTE PTR [ebx-0x72ec6065],cl
  405d43:	push   ds
  405d44:	add    eax,0x710e1920
  405d49:	dec    eax
  405d4a:	xchg   edx,eax
  405d4b:	add    bl,BYTE PTR [edi-0x5a]
  405d4e:	push   ds
  405d4f:	call   0x6f20:0x5a3e41ff
  405d56:	sub    ch,BYTE PTR [edi]
  405d58:	pop    edi
  405d59:	xor    al,0x0
  405d5b:	or     BYTE PTR [edi+0x1f],cl
  405d5e:	cli    
  405d5f:	js     0x405d05
  405d61:	call   0xf64102e6
  405d66:	mov    DWORD PTR [edx+0x22edbba2],edx
  405d6c:	lea    edx,[edi]
  405d6e:	sbb    esp,DWORD PTR [edi]
  405d70:	std    
  405d71:	mov    ds:0xc599feed,al
  405d76:	(bad)  
  405d77:	loope  0x405dc7
  405d79:	mov    ah,0xe5
  405d7b:	sar    ch,0x88
  405d7e:	bound  edx,QWORD PTR [ebx+0x50]
  405d81:	push   edi
  405d82:	jmp    0x405d07
  405d84:	and    cl,BYTE PTR [eax-0x6c]
  405d87:	int    0x88
  405d89:	test   al,0xb3
  405d8b:	dec    ecx
  405d8c:	hlt    
  405d8d:	jg     0x405dff
  405d8f:	outs   dx,DWORD PTR ds:[esi]
  405d90:	dec    eax
  405d91:	stc    
  405d92:	gs mov eax,0xaf082e
  405d98:	jae    0x405dfa
  405d9a:	mov    ecx,0x3736209b
  405d9f:	fs sbb cl,ah
  405da2:	sub    ah,BYTE PTR [ecx]
  405da4:	jge    0x405dfa
  405da6:	sub    DWORD PTR ds:0x2486491e,0x56
  405dad:	(bad)
  405db0:	test   BYTE PTR [eax],ah
  405db2:	add    BYTE PTR [ecx+0x73e9f71],ah
  405db8:	inc    edx
  405db9:	fisttp WORD PTR [edx-0x5cafa8b3]
  405dbf:	fistp  QWORD PTR [edx-0x351f20ec]
  405dc5:	in     eax,dx
  405dc6:	xchg   ebp,eax
  405dc7:	push   0x98eb50e9
  405dcc:	int    0x4f
  405dce:	out    dx,eax
  405dcf:	adc    ch,BYTE PTR [eax]
  405dd1:	out    dx,al
  405dd2:	in     eax,0x9e
  405dd4:	push   ds
  405dd5:	mov    edi,0xbda7a562
  405dda:	rcl    DWORD PTR [eax-0x13],0x4b
  405dde:	or     al,bl
  405de0:	lods   al,BYTE PTR ds:[esi]
  405de1:	js     0x405e5c
  405de3:	jl     0x405dc9
  405de5:	cmp    ch,BYTE PTR [edi-0x6adb24e2]
  405deb:	push   esi
  405dec:	sti    
  405ded:	int3   
  405dee:	push   ecx
  405def:	jecxz  0x405dff
  405df1:	mov    dl,bh
  405df3:	push   cs
  405df4:	xor    BYTE PTR [ebp+ebx*8-0x10],ch
  405df8:	dec    ecx
  405df9:	mov    ds:0xb591e9b0,eax
  405dfe:	jns    0x405e49
  405e00:	enter  0x67b4,0x5b
  405e04:	and    al,0x13
  405e06:	mov    DWORD PTR [ecx+ecx*1-0x4a],esi
  405e0a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405e0b:	loopne 0x405dfa
  405e0d:	scas   al,BYTE PTR es:[edi]
  405e0e:	(bad)  
  405e0f:	sub    bh,BYTE PTR [eax+0x40]
  405e12:	push   0xa1b99052
  405e17:	aad    0x19
  405e19:	neg    BYTE PTR [eax]
  405e1b:	aaa    
  405e1c:	rol    BYTE PTR [edx],1
  405e1e:	out    dx,al
  405e1f:	cs xor eax,0xa3ae01f6
  405e25:	aam    0x1b
  405e27:	or     al,0xd7
  405e29:	fcmovnb st,st(6)
  405e2b:	push   ebp
  405e2c:	and    esp,DWORD PTR [edi+0x26]
  405e2f:	aam    0xdc
  405e31:	(bad)  
  405e32:	xchg   esp,eax
  405e33:	jmp    0x8ca:0x937e8580
  405e3a:	or     ah,dl
  405e3c:	cli    
  405e3d:	inc    eax
  405e3e:	sub    BYTE PTR [eax+eax*1-0x74],dh
  405e42:	loop   0x405de8
  405e44:	dec    ecx
  405e45:	sti    
  405e46:	nop
  405e47:	inc    ecx
  405e48:	sub    dl,BYTE PTR [esi]
  405e4a:	jno    0x405de8
  405e4c:	repz xchg edi,eax
  405e4e:	sbb    edx,DWORD PTR [eax+0x7d]
  405e51:	jns    0x405e18
  405e53:	jecxz  0x405e3c
  405e55:	push   ecx
  405e56:	dec    esi
  405e57:	std    
  405e58:	jnp    0x405de2
  405e5a:	pop    esi
  405e5b:	sub    ebp,DWORD PTR [ebx-0x60]
  405e5e:	(bad)  
  405e5f:	fisub  DWORD PTR [edi]
  405e61:	cmc    
  405e62:	push   ss
  405e63:	mov    edi,0x176c0e8b
  405e68:	push   0x6841886b
  405e6d:	mov    ecx,0x30f53da3
  405e72:	pop    esp
  405e73:	shl    BYTE PTR [ecx+0x5884ebc5],0xb1
  405e7a:	call   0xf1ca0c2d
  405e7f:	bswap  esp
  405e81:	sbb    eax,0x8f5e8bb0
  405e86:	addr16 cdq 
  405e88:	jp     0x405f01
  405e8a:	popa   
  405e8b:	ret    0x5a6b
  405e8e:	jp     0x405f0d
  405e90:	xor    eax,0xbf300022
  405e95:	in     eax,dx
  405e96:	fbld   TBYTE PTR [edx]
  405e98:	iret   
  405e99:	fucom  st(6)
  405e9b:	dec    esp
  405e9c:	(bad)  
  405e9d:	ficomp DWORD PTR [esi-0x5b]
  405ea0:	int3   
  405ea1:	xchg   DWORD PTR [ebx-0x38],esi
  405ea4:	lds    ebx,FWORD PTR [ecx+ecx*8+0x7e]
  405ea8:	xlat   BYTE PTR ds:[ebx]
  405ea9:	pop    esp
  405eaa:	mov    ds:0x42160a9c,al
  405eaf:	mov    bh,0xdc
  405eb1:	push   ebp
  405eb2:	cdq    
  405eb3:	dec    esp
  405eb4:	fdivr  QWORD PTR [eax+ebp*4+0x55]
  405eb8:	por    mm6,QWORD PTR [edi+ebx*1-0x2d]
  405ebd:	fwait
  405ebe:	inc    edi
  405ebf:	ss jle 0x405ea2
  405ec2:	pusha  
  405ec3:	cli    
  405ec4:	inc    ecx
  405ec5:	jns    0x405e52
  405ec7:	and    esp,DWORD PTR [eax-0x61506acb]
  405ecd:	mov    ch,0x30
  405ecf:	jno    0x405e56
  405ed1:	jecxz  0x405efe
  405ed3:	inc    edx
  405ed4:	xor    bh,cl
  405ed6:	iret   
  405ed7:	call   0xbcb2:0x3581413f
  405ede:	jne    0x405e6c
  405ee0:	xchg   BYTE PTR ds:0xd2c43316,ah
  405ee6:	fidiv  DWORD PTR [ecx+0x243df4c4]
  405eec:	jmp    0x405eac
  405eee:	jo     0x405e96
  405ef0:	sahf   
  405ef1:	push   esp
  405ef2:	addr16 mov bl,0x34
  405ef5:	sub    ebx,DWORD PTR [ecx]
  405ef7:	or     BYTE PTR [edi],dh
  405ef9:	les    esi,FWORD PTR [edx+eiz*4+0xa]
  405efd:	scas   eax,DWORD PTR es:[edi]
  405efe:	retf   
  405eff:	(bad)  
  405f00:	push   edi
  405f01:	or     al,0xf3
  405f03:	imul   ebp,edi,0xd057d6c9
  405f09:	lods   al,BYTE PTR ds:[esi]
  405f0a:	aaa    
  405f0b:	fdivr  st(6),st
  405f0d:	add    cl,BYTE PTR [edi-0x35]
  405f10:	sub    ah,BYTE PTR [ecx-0x24]
  405f13:	addr16 imul edx,ebp,0xffffff94
  405f17:	xchg   edi,eax
  405f18:	in     eax,0x5f
  405f1a:	xchg   ebp,eax
  405f1b:	fwait
  405f1c:	jno    0x405eeb
  405f1e:	pop    ds
  405f1f:	pusha  
  405f20:	imul   esp
  405f22:	dec    ebx
  405f23:	stos   DWORD PTR es:[edi],eax
  405f24:	(bad)  
  405f25:	push   edx
  405f26:	out    0xf2,al
  405f28:	jae    0x405ed1
  405f2a:	je     0x405f70
  405f2c:	jns    0x405f97
  405f2e:	jns    0x405f2e
  405f30:	ret    0xadae
  405f33:	inc    ecx
  405f34:	in     al,dx
  405f35:	mov    ah,0x5c
  405f37:	pop    ss
  405f38:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405f39:	aas    
  405f3a:	ds icebp 
  405f3c:	sahf   
  405f3d:	mov    bl,0x6f
  405f3f:	mov    edi,0x800fd52b
  405f44:	test   DWORD PTR ds:0x951c53cd,esi
  405f4a:	mov    BYTE PTR [ebx+0x2999fa6c],bh
  405f50:	jl     0x405f35
  405f52:	mov    WORD PTR [si+0x22],cs
  405f56:	lahf   
  405f57:	idiv   DWORD PTR [eax-0xf]
  405f5a:	call   0xebaa:0xe67d3b4a
  405f61:	popa   
  405f62:	dec    esi
  405f63:	je     0x405f8e
  405f65:	loope  0x405f32
  405f67:	mov    ecx,0xe9f48062
  405f6c:	ins    BYTE PTR es:[edi],dx
  405f6d:	call   0xe3d0:0xe0410f26
  405f74:	fldcw  WORD PTR [edx-0x65543a4]
  405f7a:	ins    BYTE PTR es:[edi],dx
  405f7b:	ret    
  405f7c:	or     BYTE PTR ds:0x721c726a,bh
  405f82:	add    al,0x9a
  405f84:	jo     0x405f50
  405f86:	dec    ebx
  405f87:	fdiv   DWORD PTR [ecx-0x9]
  405f8a:	xchg   ebp,eax
  405f8b:	sbb    ebx,DWORD PTR [edi+0x53]
  405f8e:	push   es
  405f8f:	mov    ds:0x4bb1e959,al
  405f94:	inc    eax
  405f95:	inc    edx
  405f96:	mov    cl,0xf7
  405f98:	mov    ebp,DWORD PTR [eax+0x73]
  405f9b:	std    
  405f9c:	sar    BYTE PTR [ebp-0x29797c67],1
  405fa2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405fa3:	xor    al,0x48
  405fa5:	mov    ch,0x46
  405fa7:	pop    ecx
  405fa8:	mov    ds:0xf944bd60,al
  405fad:	js     0x405ffe
  405faf:	xor    cl,al
  405fb1:	(bad)  
  405fb2:	and    BYTE PTR [ecx-0x45fcc680],cl
  405fb8:	mov    dl,0x35
  405fba:	jo     0x40600a
  405fbc:	sub    ecx,DWORD PTR [ecx+0x5805c282]
  405fc2:	add    eax,0x1c1e32fd
  405fc7:	cmp    DWORD PTR [ebx+edx*2+0x2c124e04],esi
  405fce:	scas   al,BYTE PTR es:[edi]
  405fcf:	mov    cl,0xc3
  405fd1:	mov    ch,0xc8
  405fd3:	or     BYTE PTR [ecx+0xb786100],cl
  405fd9:	ja     0x405f91
  405fdb:	and    eax,0x1d2ab03b
  405fe0:	(bad)  
  405fe1:	adc    esi,ebx
  405fe3:	add    al,0x86
  405fe5:	lods   eax,DWORD PTR ds:[esi]
  405fe6:	(bad)  
  405fe7:	cld    
  405fe8:	or     eax,0x525ca6a6
  405fed:	popf   
  405fee:	push   es
  405fef:	and    DWORD PTR [ebx+ecx*1],edi
  405ff2:	out    dx,eax
  405ff3:	inc    eax
  405ff4:	xor    DWORD PTR [ebp+0x20b3fd76],ecx
  405ffa:	jae    0x406061
  405ffc:	scas   eax,DWORD PTR es:[edi]
  405ffd:	cmc    
  405ffe:	lea    eax,[ebx]
  406000:	add    bl,cl
  406002:	mov    eax,ds:0x8a6f4135
  406007:	and    al,0xcb
  406009:	dec    esp
  40600a:	fisub  DWORD PTR [eax+0x46ac39a]
  406010:	mov    ebx,0xd28dba82
  406015:	test   BYTE PTR [edi+eax*2],0x97
  406019:	test   esi,edi
  40601b:	fistp  WORD PTR [ebx-0x6]
  40601e:	out    0x34,eax
  406020:	scas   al,BYTE PTR es:[edi]
  406021:	sti    
  406022:	xor    ah,BYTE PTR [ecx]
  406024:	add    al,0xfa
  406026:	jae    0x40604b
  406028:	test   DWORD PTR [edi],ebx
  40602a:	sbb    al,0xe1
  40602c:	xchg   ebx,eax
  40602d:	shr    BYTE PTR [edi+0x7e],0x6e
  406031:	dec    eax
  406032:	jp     0x405ff7
  406034:	push   edi
  406035:	fwait
  406036:	ins    BYTE PTR es:[edi],dx
  406037:	push   cs
  406038:	xlat   BYTE PTR ds:[ebx]
  406039:	sub    BYTE PTR [eax-0x18982e14],al
  40603f:	or     BYTE PTR [ecx+0x15],dl
  406042:	sbb    edi,DWORD PTR [ecx+0x2d]
  406045:	mov    bl,0x77
  406047:	adc    dh,ch
  406049:	add    al,0xba
  40604b:	cld    
  40604c:	loop   0x40602c
  40604e:	stos   DWORD PTR es:[edi],eax
  40604f:	cmp    al,0x13
  406051:	stos   BYTE PTR es:[edi],al
  406052:	jge    0x406061
  406054:	ds cmp al,0xd8
  406057:	dec    eax
  406058:	ficom  WORD PTR [esi+0xb299c54]
  40605e:	mov    bh,0xa1
  406060:	je     0x406097
  406062:	hlt    
  406063:	dec    edx
  406064:	fld    TBYTE PTR [ebx+0x1]
  406067:	and    al,0x37
  406069:	loopne 0x406079
  40606b:	js     0x4060c8
  40606d:	or     BYTE PTR [edi+ebx*2],dl
  406070:	lock out dx,al
  406072:	pop    ss
  406073:	jae    0x405ff5
  406075:	clc    
  406076:	pop    esi
  406077:	loopne 0x40609b
  406079:	adc    ebp,eax
  40607b:	(bad)  
  40607c:	mov    esi,0x823a1423
  406081:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406082:	js     0x406012
  406084:	sub    eax,0x3b9a9e86
  406089:	mov    edx,0x48e653f2
  40608e:	gs pop edi
  406090:	es in  al,0x84
  406093:	popf   
  406094:	sub    eax,0xa84785bb
  406099:	pushf  
  40609a:	addr16 cmp al,0x12
  40609d:	mov    WORD PTR [esi],bx
  4060a0:	in     al,dx
  4060a1:	cld    
  4060a2:	jns    0x406067
  4060a4:	sub    eax,0xf1d47dec
  4060a9:	pop    es
  4060aa:	and    dl,BYTE PTR [edx+edx*1+0x340f4a50]
  4060b1:	repz pop esi
  4060b3:	xchg   esi,eax
  4060b4:	sub    al,0xe5
  4060b6:	dec    ebx
  4060b7:	retf   0x611b
  4060ba:	pop    es
  4060bb:	inc    esi
  4060bc:	test   DWORD PTR [eax],eax
  4060be:	cmp    dl,BYTE PTR [eax+edi*1+0x2da4586e]
  4060c5:	into   
  4060c6:	mov    edi,0x3216af83
  4060cb:	xchg   bh,dl
  4060cd:	sbb    al,cl
  4060cf:	push   eax
  4060d0:	popf   
  4060d1:	cmp    al,0x51
  4060d3:	ins    BYTE PTR es:[edi],dx
  4060d4:	cdq    
  4060d5:	sbb    esp,ecx
  4060d7:	jno    0x406153
  4060d9:	pusha  
  4060da:	cmp    al,0x7a
  4060dc:	in     al,0xd2
  4060de:	rdmsr  
  4060e0:	std    
  4060e1:	(bad)  [edi+esi*8-0x11]
  4060e5:	sbb    bh,cl
  4060e7:	lock (bad) 
  4060e9:	loope  0x406153
  4060eb:	aad    0x20
  4060ed:	outs   dx,BYTE PTR ds:[esi]
  4060ee:	cmp    edi,eax
  4060f0:	cmp    dl,0x45
  4060f3:	xor    BYTE PTR ds:0x7c7737d5,bl
  4060f9:	mov    edx,0x72a8b701
  4060fe:	inc    esi
  4060ff:	int3   
  406100:	pop    edi
  406101:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406102:	lods   eax,DWORD PTR ds:[esi]
  406103:	cmp    ebp,DWORD PTR [ebx-0x3fed6405]
  406109:	mov    ebp,0xd93c402
  40610e:	lock push 0x11
  406111:	or     eax,0x57c51aa2
  406116:	rol    BYTE PTR [esi],0xb4
  406119:	add    BYTE PTR [esi],cl
  40611b:	in     eax,dx
  40611c:	cmp    edi,DWORD PTR [eax]
  40611e:	test   BYTE PTR [ebx-0x218d63ee],ah
  406124:	shl    DWORD PTR [ecx+0x36],0x87
  406128:	mov    bl,0xcf
  40612a:	pop    ebx
  40612b:	les    edi,FWORD PTR [esi+0x79fbbdb]
  406131:	jnp    0x4060f1
  406133:	push   esp
  406134:	mov    ebp,0x69b06b34
  406139:	inc    ebp
  40613a:	lods   al,BYTE PTR ds:[esi]
  40613b:	mov    eax,ds:0x6426f742
  406140:	jl     0x406107
  406142:	add    DWORD PTR [ebp+0x77bb84b9],ebp
  406148:	xor    DWORD PTR [edi+0x2c],0xf9825fa0
  40614f:	loop   0x406125
  406151:	xor    eax,ecx
  406153:	jp     0x40612d
  406155:	test   al,0x5c
  406157:	and    DWORD PTR [esi-0x9],edi
  40615a:	pop    ebp
  40615b:	mul    DWORD PTR ds:0x1d682431
  406161:	or     al,0x1
  406163:	xor    edi,DWORD PTR [esi-0x6a]
  406166:	dec    esi
  406167:	add    BYTE PTR [ebx],ah
  406169:	add    DWORD PTR [eax-0x2723c742],0x30b60d04
  406173:	mov    edx,0xb3f15cb2
  406178:	call   0x4eb7:0xee5eb481
  40617f:	outs   dx,DWORD PTR ds:[esi]
  406180:	cmp    bl,ah
  406182:	sbb    al,0x66
  406184:	dec    esi
  406185:	push   cs
  406186:	(bad)  
  406187:	mov    cl,0x6a
  406189:	leave  
  40618a:	(bad)  
  40618b:	mov    al,0xb1
  40618d:	jb     0x406159
  40618f:	sar    ebp,0xb2
  406192:	dec    edi
  406193:	sub    ebp,ebp
  406195:	dec    edx
  406196:	add    ah,ah
  406198:	js     0x40612d
  40619a:	inc    edi
  40619b:	shl    DWORD PTR [ebp-0x2716e8f],0x9
  4061a2:	ins    BYTE PTR es:[edi],dx
  4061a3:	loope  0x406205
  4061a5:	out    0x2a,al
  4061a7:	(bad)  
  4061a8:	cmp    DWORD PTR [esi-0x2bfcad3d],edx
  4061ae:	(bad)  
  4061af:	pop    ecx
  4061b0:	ret    0xdf8
  4061b3:	inc    ecx
  4061b4:	stos   BYTE PTR es:[edi],al
  4061b5:	mov    ch,0xc8
  4061b7:	pop    es
  4061b8:	ret    0x9a5c
  4061bb:	adc    al,0x48
  4061bd:	cmp    ecx,ebp
  4061bf:	push   0xe1d2bb90
  4061c4:	cmp    al,0xa7
  4061c6:	fisub  WORD PTR [ebx+0x3c]
  4061c9:	sub    DWORD PTR [eax-0x5b],ebp
  4061cc:	mov    eax,DWORD PTR [edi]
  4061ce:	mov    ds,WORD PTR [ebx]
  4061d0:	scas   al,BYTE PTR es:[edi]
  4061d1:	mov    cl,0x97
  4061d3:	pop    esi
  4061d4:	dec    ebx
  4061d5:	iret   
  4061d6:	inc    ebx
  4061d7:	dec    edi
  4061d8:	out    0x72,al
  4061da:	xchg   edx,eax
  4061db:	mov    eax,ds:0x52aca17b
  4061e0:	xor    DWORD PTR [esi],0x6f
  4061e3:	and    eax,DWORD PTR [edx+esi*1]
  4061e6:	or     BYTE PTR [eax+edi*1+0x6117a8cd],bh
  4061ed:	jmp    0x406219
  4061ef:	pop    ebx
  4061f0:	ins    DWORD PTR es:[edi],dx
  4061f1:	xor    esi,DWORD PTR [ecx-0x6]
  4061f4:	adc    al,0xe3
  4061f6:	pop    ecx
  4061f7:	xchg   ebp,eax
  4061f8:	ret    0xaccc
  4061fb:	xchg   esi,eax
  4061fc:	jg     0x406242
  4061fe:	push   ds
  4061ff:	jecxz  0x40624b
  406201:	cmp    cl,BYTE PTR [eax-0x63]
  406204:	pop    ebp
  406205:	test   esi,edx
  406207:	pop    ebx
  406208:	or     al,0x2a
  40620a:	adc    esp,DWORD PTR [edx+ebx*1+0x2c]
  40620e:	pop    eax
  40620f:	fdivp  st(2),st
  406211:	ja     0x40628c
  406213:	repnz test ch,0x9b
  406217:	dec    esi
  406218:	fstp   QWORD PTR [edi-0x4]
  40621b:	sub    eax,DWORD PTR [edx]
  40621d:	pop    eax
  40621e:	mov    ebp,0x3f17ac14
  406223:	and    al,0x41
  406225:	dec    esi
  406226:	pop    ss
  406227:	pop    edx
  406228:	pop    es
  406229:	call   0xd57565d3
  40622e:	sub    DWORD PTR [ecx],edx
  406230:	sahf   
  406231:	push   edi
  406232:	sub    cl,dl
  406234:	pop    esi
  406235:	mov    edi,0x76b9c920
  40623a:	push   cs
  40623b:	xor    al,0x2f
  40623d:	stos   DWORD PTR es:[edi],eax
  40623e:	jl     0x4062a5
  406240:	vmread DWORD PTR [edi+0x35],edi
  406244:	mov    bl,0x13
  406246:	or     BYTE PTR [ebx+0x7fb67818],0x86
  40624d:	jns    0x4061e7
  40624f:	in     al,0xf4
  406251:	lods   al,BYTE PTR ds:[esi]
  406252:	and    al,0xae
  406254:	xchg   ebx,eax
  406255:	adc    ecx,DWORD PTR [edx+eiz*1]
  406258:	xchg   ecx,eax
  406259:	add    bh,BYTE PTR [eax-0x6c]
  40625c:	loopne 0x406251
  40625e:	or     bh,al
  406260:	dec    edi
  406261:	inc    esi
  406262:	lea    esi,[esi-0x73]
  406265:	sbb    BYTE PTR ds:0x4f7dc5d7,bh
  40626b:	cmp    al,0x75
  40626d:	fwait
  40626e:	jp     0x406284
  406270:	or     BYTE PTR [ecx+0x7348ef98],dh
  406276:	xchg   ebp,eax
  406277:	fimul  DWORD PTR [eax+0xc14469c]
  40627d:	into   
  40627e:	arpl   bx,cx
  406280:	shl    BYTE PTR [ecx],cl
  406282:	xchg   ebx,eax
  406283:	popa   
  406284:	(bad)  
  406285:	ins    DWORD PTR es:[edi],dx
  406286:	imul   ebx,DWORD PTR [edx+0x25],0xffffffcd
  40628a:	jno    0x4062cc
  40628c:	push   ebx
  40628d:	pusha  
  40628e:	and    eax,0xb631f350
  406293:	fs push ss
  406295:	pop    ebp
  406296:	add    al,0x85
  406298:	(bad)  
  406299:	ins    BYTE PTR es:[edi],dx
  40629a:	repnz add ch,BYTE PTR [esi-0x52]
  40629e:	jg     0x4062c8
  4062a0:	mov    esi,0xa54e97d
  4062a5:	dec    ebp
  4062a6:	mov    ebx,DWORD PTR [esp+ecx*4]
  4062a9:	and    al,0x9e
  4062ab:	ret    0x68ae
  4062ae:	jg     0x406278
  4062b0:	sti    
  4062b1:	out    dx,al
  4062b2:	dec    ebx
  4062b3:	mov    bh,dh
  4062b5:	ja     0x406264
  4062b7:	or     esp,eax
  4062b9:	popa   
  4062ba:	push   esi
  4062bb:	mov    ebp,ebx
  4062bd:	in     al,0x27
  4062bf:	mov    dh,0xcf
  4062c1:	sti    
  4062c2:	dec    ecx
  4062c3:	sub    eax,0x12873c2
  4062c8:	jl     0x406256
  4062ca:	rcr    dl,1
  4062cc:	cdq    
  4062cd:	adc    BYTE PTR [edx+0x270af755],dh
  4062d3:	inc    esp
  4062d4:	test   al,cl
  4062d6:	xchg   DWORD PTR [edi],esi
  4062d8:	and    eax,0x46cc80dd
  4062dd:	push   ds
  4062de:	add    DWORD PTR [ebx+0x6de9ab77],0x2a9b83a3
  4062e8:	and    dh,BYTE PTR [ecx]
  4062ea:	mov    bh,0x22
  4062ec:	sar    DWORD PTR [edi],cl
  4062ee:	sbb    DWORD PTR [esi+eiz*2-0x7],0xffffff96
  4062f3:	mov    esp,0xaf3a564c
  4062f8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4062f9:	fld    TBYTE PTR ds:0x3a940a5a
  4062ff:	clc    
  406300:	push   cs
  406301:	sti    
  406302:	sub    eax,0x4a5c06f8
  406307:	push   ebp
  406308:	scas   al,BYTE PTR es:[edi]
  406309:	mov    cl,0x63
  40630b:	dec    esp
  40630c:	jmp    0x40634c
  40630e:	sbb    eax,0x3277600c
  406313:	test   edx,edx
  406315:	adc    BYTE PTR [esp+eiz*4+0x40],0x3a
  40631a:	sbb    ch,BYTE PTR [ebx+0x19d44baa]
  406320:	cmp    eax,0x18dbcc03
  406325:	adc    al,0xf4
  406327:	push   ss
  406328:	test   ecx,edi
  40632a:	mov    esp,0x99368fb3
  40632f:	dec    eax
  406330:	adc    DWORD PTR [eax],ebp
  406332:	test   DWORD PTR [ebx+eax*2],ebx
  406335:	icebp  
  406336:	pop    esp
  406337:	jmp    0x501c:0x292256d9
  40633e:	dec    edi
  40633f:	dec    eax
  406340:	lods   eax,DWORD PTR ds:[esi]
  406341:	jl     0x40638a
  406343:	(bad)  
  406344:	hlt    
  406345:	scas   eax,DWORD PTR es:[edi]
  406346:	fisub  WORD PTR [esi-0x39b56de1]
  40634c:	mov    BYTE PTR [ecx+0x90c969c],bl
  406352:	xchg   edi,eax
  406353:	mov    WORD PTR [eax+0x5a],?
  406356:	pusha  
  406357:	mov    ebx,0x36f2d902
  40635c:	inc    eax
  40635d:	repnz adc DWORD PTR [edx-0xe857286],ebx
  406364:	(bad)  
  406365:	pushf  
  406366:	add    bh,al
  406368:	ja     0x4063d8
  40636a:	or     dl,BYTE PTR [eax+eax*8+0x563894e6]
  406371:	adc    eax,0x55a33da6
  406376:	sub    BYTE PTR [ebx-0x3d],0xd3
  40637a:	dec    ebx
  40637b:	inc    ebx
  40637c:	xchg   ebx,eax
  40637d:	imul   ecx,DWORD PTR [ebx],0x14
  406380:	sub    cl,0x66
  406383:	mov    eax,ds:0x6210e9c2
  406388:	mov    eax,0xa57c6230
  40638d:	cmp    ecx,DWORD PTR [edi]
  40638f:	sub    al,0x50
  406391:	into   
  406392:	or     DWORD PTR [edi+0x371acc0f],ebx
  406398:	mov    eax,ds:0xc3db717e
  40639d:	lds    ebp,FWORD PTR [ebp-0x5b]
  4063a0:	inc    ebx
  4063a1:	scas   al,BYTE PTR es:[edi]
  4063a2:	dec    ebp
  4063a3:	dec    esp
  4063a4:	imul   esp,DWORD PTR [ebx],0xffffff9a
  4063a7:	inc    ebx
  4063a8:	inc    edx
  4063a9:	lock je 0x406378
  4063ac:	dec    esp
  4063ad:	test   DWORD PTR [ebx+edi*1+0x53a895ec],ebp
  4063b4:	pop    es
  4063b5:	or     eax,0xc1c97af1
  4063ba:	sbb    ebp,edi
  4063bc:	and    bl,BYTE PTR [ebx]
  4063be:	or     eax,ebx
  4063c0:	mov    fs,WORD PTR [edi+0x5777ac0a]
  4063c6:	sbb    DWORD PTR [edi-0x27],ebp
  4063c9:	ja     0x4063f1
  4063cb:	xor    bl,BYTE PTR [esi-0x62]
  4063ce:	cli    
  4063cf:	leave  
  4063d0:	dec    esi
  4063d1:	cmp    eax,0xdbc6debe
  4063d6:	pop    ds
  4063d7:	call   0xa9e32414
  4063dc:	popf   
  4063dd:	add    al,0xbb
  4063df:	dec    edi
  4063e0:	in     al,0xdd
  4063e2:	in     eax,0x65
  4063e4:	imul   BYTE PTR [edx-0x5d]
  4063e7:	les    ecx,FWORD PTR [ebx+0x4d]
  4063ea:	add    dl,BYTE PTR [eax]
  4063ec:	mov    esp,0x5f12a06d
  4063f1:	push   edx
  4063f2:	pop    DWORD PTR [ebx+edx*8-0x7a]
  4063f6:	mov    al,0x5c
  4063f8:	cs add eax,0x4febd033
  4063fe:	stc    
  4063ff:	nop
  406400:	jecxz  0x4063de
  406402:	stos   BYTE PTR es:[edi],al
  406403:	loop   0x40640f
  406405:	pop    ebx
  406406:	call   0xb6af:0x567b67ee
  40640d:	jns    0x4063ee
  40640f:	xor    BYTE PTR [eax+0x4555dc73],dh
  406415:	sbb    bl,BYTE PTR [edx+edx*1+0x12fbc7c3]
  40641c:	imul   esp,eax,0x9e1c4c23
  406422:	in     eax,dx
  406423:	xor    al,0xed
  406425:	es lahf 
  406427:	mov    edx,DWORD PTR [ecx-0x53d252d9]
  40642d:	ret    0xf5ca
  406430:	loop   0x4063b3
  406432:	push   ds
  406433:	fsub   st(6),st
  406435:	sbb    bl,BYTE PTR [eax]
  406437:	add    esi,DWORD PTR [esi+0x181700e]
  40643d:	xor    al,BYTE PTR [eax+esi*4]
  406440:	add    al,0xad
  406442:	call   0x90d1829a
  406447:	ret    0xfe3c
  40644a:	and    cl,BYTE PTR [eax+0xefe81f6]
  406450:	iret   
  406451:	xor    DWORD PTR [ebp-0x7115d4b3],esp
  406457:	aas    
  406458:	popf   
  406459:	aaa    
  40645a:	jmp    0x70bf:0x93a86751
  406461:	hlt    
  406462:	ins    DWORD PTR es:[edi],dx
  406463:	(bad)  
  406464:	and    edi,DWORD PTR [eax+0x19]
  406467:	cs cmc 
  406469:	jp     0x406457
  40646b:	ss inc ebx
  40646d:	or     al,0x90
  40646f:	fisttp WORD PTR [eax+edi*8+0x2debed]
  406476:	jmp    0xc1fe:0x2ba11fc
  40647d:	xchg   esi,eax
  40647e:	lock ds xchg dx,ax
  406482:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406483:	lds    esp,FWORD PTR [ebp-0xdf3b0b5]
  406489:	iret   
  40648a:	call   0xb6f0:0x67cfd9ea
  406491:	add    bh,BYTE PTR [edi-0x47dcdb69]
  406497:	in     eax,0x82
  406499:	cld    
  40649a:	ja     0x406456
  40649c:	popf   
  40649d:	push   ebx
  40649e:	jmp    0xe205:0xe8f09cdd
  4064a5:	sbb    BYTE PTR [edi+0x15fb314f],al
  4064ab:	mov    al,0x91
  4064ad:	jecxz  0x406494
  4064af:	fist   DWORD PTR [edi+0x31]
  4064b2:	dec    ebx
  4064b3:	add    al,0x7e
  4064b5:	js     0x4064ec
  4064b7:	pushf  
  4064b8:	jg     0x406477
  4064ba:	sbb    BYTE PTR ds:0x66ad293,al
  4064c0:	pushf  
  4064c1:	std    
  4064c2:	lea    ecx,[ebp-0x1e]
  4064c5:	stos   BYTE PTR es:[edi],al
  4064c6:	pop    ecx
  4064c7:	jo     0x406452
  4064c9:	call   0xcf4559a1
  4064ce:	fild   QWORD PTR [ebx-0x37]
  4064d1:	inc    ebp
  4064d2:	test   eax,0x11f308d7
  4064d7:	pop    esi
  4064d8:	inc    ebx
  4064d9:	mov    dh,0x7b
  4064db:	sbb    BYTE PTR [eax],al
  4064dd:	rol    BYTE PTR [ebx],cl
  4064df:	(bad)  [ebp+0x62]
  4064e2:	cli    
  4064e3:	ins    DWORD PTR es:[edi],dx
  4064e4:	(bad)  
  4064e7:	push   edi
  4064e8:	stos   DWORD PTR es:[edi],eax
  4064e9:	scas   al,BYTE PTR es:[edi]
  4064ea:	out    0x2a,eax
  4064ec:	mov    bl,0xd0
  4064ee:	pop    edx
  4064ef:	nop
  4064f0:	mov    ebp,0x653e900
  4064f5:	pop    edx
  4064f6:	pop    edi
  4064f7:	sub    dh,cl
  4064f9:	pop    esi
  4064fa:	call   0xbd26ac8f
  4064ff:	jp     0x40657a
  406501:	jecxz  0x4064f6
  406503:	sbb    BYTE PTR [ebx],dl
  406505:	in     al,dx
  406506:	jle    0x40657d
  406508:	jb     0x406586
  40650a:	sbb    al,0x1c
  40650c:	ds (bad) 
  40650e:	mov    esp,DWORD PTR [eax+0x74]
  406511:	rcl    eax,0xa2
  406514:	mov    BYTE PTR [edx-0x50503236],bh
  40651a:	mov    DWORD PTR [esi+0x32],esi
  40651d:	ss mov edi,0x470741ba
  406523:	shl    BYTE PTR [eax-0x1c],cl
  406526:	(bad)  
  406527:	mov    edx,0xc4715e08
  40652c:	mov    DWORD PTR [eax+0xb5b3a7],ebx
  406532:	xchg   ebp,eax
  406533:	js     0x4065ac
  406535:	add    ebp,DWORD PTR [esi+0x379dd702]
  40653b:	out    0x53,eax
  40653d:	push   ss
  40653e:	inc    ebp
  40653f:	popa   
  406540:	rcr    eax,1
  406542:	fcmovne st,st(4)
  406544:	push   0x4d
  406546:	fcmovne st,st(4)
  406548:	mov    ebp,0xfb52fd42
  40654d:	jecxz  0x4064fb
  40654f:	xor    DWORD PTR [eax+0x640445fa],eax
  406555:	add    al,0xab
  406557:	sub    ebx,DWORD PTR [edx+0x343c9f24]
  40655d:	ja     0x4065bd
  40655f:	or     al,0x7
  406561:	dec    edi
  406562:	sbb    edi,DWORD PTR ds:0x5adf77a3
  406568:	fst    QWORD PTR [ecx]
  40656a:	dec    esi
  40656b:	rol    DWORD PTR [ecx-0x2235690b],0x43
  406572:	mov    ch,BYTE PTR es:[ebp+0x0]
  406576:	call   0x9f96:0xb718d767
  40657d:	nop
  40657e:	or     eax,0x75fcf4b9
  406583:	jo     0x4065e1
  406585:	ja     0x4065f8
  406587:	sbb    BYTE PTR [ecx],ah
  406589:	cmp    ax,0xb471
  40658d:	mov    ah,dh
  40658f:	xor    al,0x33
  406591:	sub    eax,0x346c1e2
  406596:	or     ch,cl
  406598:	xor    BYTE PTR [edx+0x1a],ch
  40659b:	std    
  40659c:	push   ebx
  40659d:	out    dx,al
  40659e:	pop    eax
  40659f:	fisub  WORD PTR [ebx]
  4065a1:	and    DWORD PTR [edx],edi
  4065a3:	sub    ebp,DWORD PTR [ebp+ebx*1+0x48d3538f]
  4065aa:	es adc eax,0x17ec3031
  4065b0:	jne    0x4065a1
  4065b2:	ins    DWORD PTR es:[edi],dx
  4065b3:	leave  
  4065b4:	adc    eax,0x55e323b4
  4065b9:	sub    eax,0x31d36249
  4065be:	sub    bh,ah
  4065c0:	mov    dl,0x9f
  4065c2:	or     BYTE PTR [eax],ch
  4065c4:	push   eax
  4065c5:	js     0x40655f
  4065c7:	cmp    eax,0x36f008d8
  4065cc:	adc    BYTE PTR [edi],cl
  4065ce:	ja     0x40658f
  4065d0:	clc    
  4065d1:	out    0xef,eax
  4065d3:	ds push cs
  4065d5:	in     al,dx
  4065d6:	stos   DWORD PTR es:[edi],eax
  4065d7:	sub    DWORD PTR [ebx+eiz*1-0x7e],ebx
  4065db:	adc    al,0xc3
  4065dd:	mov    ah,ch
  4065df:	gs in  eax,dx
  4065e1:	fisttp QWORD PTR [edi+0x23]
  4065e4:	in     al,0x7b
  4065e6:	(bad)  
  4065e7:	(bad)  [ebp+0x2f]
  4065ea:	push   es
  4065eb:	shr    BYTE PTR [esi-0x1d],0x11
  4065ef:	lods   al,BYTE PTR ds:[esi]
  4065f0:	cs into 
  4065f2:	test   DWORD PTR [esi+0x1f],eax
  4065f5:	cdq    
  4065f6:	jmp    0x37cc:0xd57a3768
  4065fd:	sub    al,0x93
  4065ff:	dec    esi
  406600:	push   edx
  406601:	int3   
  406602:	xor    DWORD PTR [eax+0x5c],esp
  406605:	sub    al,0xdb
  406607:	das    
  406608:	ins    BYTE PTR es:[edi],dx
  406609:	add    ecx,ebp
  40660b:	mov    ah,0x81
  40660d:	add    DWORD PTR [esi],esp
  40660f:	mov    bh,0x64
  406611:	test   al,0x71
  406613:	xchg   BYTE PTR [esp+eax*2+0x5c],bl
  406617:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406618:	mov    ebp,0x31658b06
  40661d:	retf   0x87ee
  406620:	sbb    DWORD PTR [edi-0x7e],esi
  406623:	call   0x8a83d6e
  406628:	inc    eax
  406629:	pop    ebx
  40662a:	or     DWORD PTR [eax+0x5445886],ebp
  406630:	mov    al,ds:0x60eaccd8
  406635:	loop   0x406605
  406637:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406638:	(bad)  
  40663a:	xchg   ebp,eax
  40663b:	sub    BYTE PTR [eax+0x60],dh
  40663e:	dec    ebp
  40663f:	push   es
  406640:	fist   DWORD PTR [edx+0x2a]
  406643:	fs gs push eax
  406646:	sub    edi,0xb39d3091
  40664c:	out    dx,eax
  40664d:	test   DWORD PTR [eax+0x25e2414c],ecx
  406653:	sbb    al,0x39
  406655:	sbb    al,0xa1
  406657:	stc    
  406658:	fwait
  406659:	es cmp cl,ch
  40665c:	mov    al,ds:0xe4af2b0b
  406661:	cmp    edx,DWORD PTR [edi+0xb]
  406664:	jmp    0xcbc978c2
  406669:	stc    
  40666a:	or     DWORD PTR [edx-0x1c],esi
  40666d:	xchg   ebx,eax
  40666e:	arpl   WORD PTR [ecx],si
  406670:	mov    ecx,0xf63c12d
  406675:	xlat   BYTE PTR ds:[ebx]
  406676:	aaa    
  406677:	pop    ebp
  406678:	scas   al,BYTE PTR es:[edi]
  406679:	icebp  
  40667a:	out    0x4e,al
  40667c:	clc    
  40667d:	pop    ebp
  40667e:	add    ebx,DWORD PTR [edx-0xa3101f5]
  406684:	jns    0x406652
  406686:	ror    dh,0x19
  406689:	xlat   BYTE PTR ds:[ebx]
  40668a:	ror    edx,1
  40668c:	add    ah,BYTE PTR [ebp+0x36]
  40668f:	pop    DWORD PTR [ecx-0x48]
  406692:	popa   
  406693:	sbb    edi,DWORD PTR [ebx+0x58d3d684]
  406699:	data16 out dx,al
  40669b:	popf   
  40669c:	sub    eax,esi
  40669e:	cmc    
  40669f:	stos   DWORD PTR es:[edi],eax
  4066a0:	jge    0x4066df
  4066a2:	sub    DWORD PTR [eax+0x3b],0x4034e574
  4066a9:	dec    edx
  4066aa:	or     DWORD PTR [ebp+0x5c],eax
  4066ad:	loop   0x406655
  4066af:	mov    WORD PTR [eax-0x1e],gs
  4066b2:	loope  0x406716
  4066b4:	mov    al,0x3e
  4066b6:	enter  0x572b,0x49
  4066ba:	vpaddusw xmm7,xmm1,XMMWORD PTR [eax+ebx*1+0x3d157068]
  4066c3:	cmp    ebx,DWORD PTR [edx-0x5f]
  4066c6:	jae    0x4066ad
  4066c8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4066c9:	push   cs
  4066ca:	push   edi
  4066cb:	jl     0x40666c
  4066cd:	xchg   edx,eax
  4066ce:	sub    al,0x2a
  4066d0:	xchg   ecx,eax
  4066d1:	scas   al,BYTE PTR es:[edi]
  4066d2:	lahf   
  4066d3:	mov    al,0xe4
  4066d5:	(bad)  
  4066d6:	mov    ds:0x5d96264b,al
  4066db:	scas   eax,DWORD PTR es:[edi]
  4066dc:	mov    ?,WORD PTR ds:0x86a1e153
  4066e2:	loop   0x40669c
  4066e4:	test   al,0x1c
  4066e6:	xchg   edi,eax
  4066e7:	fistp  WORD PTR [ecx]
  4066e9:	enter  0x4aa3,0x5c
  4066ed:	adc    eax,0x6e0258e1
  4066f2:	add    BYTE PTR [ecx+0x42e04476],ch
  4066f8:	(bad)  
  4066f9:	dec    edx
  4066fa:	dec    esi
  4066fb:	test   BYTE PTR [edi+edx*2-0x2b],ah
  4066ff:	(bad)  [esi+0x34]
  406702:	xor    bl,BYTE PTR [eax]
  406704:	in     eax,dx
  406705:	push   esi
  406706:	pop    edx
  406707:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406708:	push   edx
  406709:	(bad)  
  40670a:	adc    dl,BYTE PTR [edx+eax*4]
  40670d:	mov    esi,cs
  40670f:	in     eax,dx
  406710:	out    dx,al
  406711:	pop    es
  406712:	xchg   ebx,eax
  406713:	or     edi,esi
  406715:	js     0x40674a
  406717:	arpl   WORD PTR [ecx-0x3fa3bc38],bx
  40671d:	inc    ebp
  40671e:	sub    DWORD PTR [ecx],edx
  406720:	sub    al,0x96
  406722:	adc    DWORD PTR [edi],ecx
  406724:	adc    DWORD PTR [esi-0x75],esi
  406727:	sbb    DWORD PTR [ebx+ebx*8+0x385d6e65],ebp
  40672e:	stos   BYTE PTR es:[edi],al
  40672f:	test   eax,0x2eb9dc1d
  406734:	cdq    
  406735:	fisub  WORD PTR [eax-0x3ffc3bf1]
  40673b:	int    0xaa
  40673d:	cmc    
  40673e:	pusha  
  40673f:	shl    BYTE PTR ds:0x688e71d0,1
  406745:	jbe    0x406744
  406747:	cli    
  406748:	bound  eax,QWORD PTR [edx-0x1b70644e]
  40674e:	lods   eax,DWORD PTR ds:[esi]
  40674f:	add    bh,BYTE PTR [edi]
  406751:	icebp  
  406752:	in     eax,dx
  406753:	ds pushf 
  406755:	mov    ebx,0xcbd10a50
  40675a:	xor    ebp,ecx
  40675c:	shl    BYTE PTR [esi],cl
  40675e:	(bad)  
  406760:	mov    ds:0xc6e2aa42,eax
  406765:	adc    DWORD PTR [edi+0x72473b13],0xffffff87
  40676c:	adc    BYTE PTR [esi-0x2f1818ad],ch
  406772:	xor    DWORD PTR [esi],ebp
  406774:	cwde   
  406775:	mov    al,ds:0xcab4dbdd
  40677b:	inc    esp
  40677c:	jge    0x4067ae
  40677e:	pushf  
  40677f:	nop
  406780:	(bad)  
  406781:	jns    0x406767
  406783:	or     BYTE PTR [edx+eax*8-0x5aca56e7],dh
  40678a:	and    BYTE PTR [esi-0x65c87a75],cl
  406790:	or     BYTE PTR [edi-0x10],bl
  406793:	push   0x2d
  406795:	push   es
  406796:	sar    BYTE PTR [edx+eiz*1+0x53],0xed
  40679b:	xchg   ebx,eax
  40679c:	fld    DWORD PTR [edx+0x20cd57d8]
  4067a2:	jmp    0x2f5e:0x8fe7c649
  4067a9:	add    ebp,DWORD PTR [edi+0x21]
  4067ac:	xchg   DWORD PTR [edx],eax
  4067ae:	mov    dh,0x0
  4067b0:	mov    BYTE PTR [ebx+ebx*8-0x79f520c0],dh
  4067b7:	jb     0x40677f
  4067b9:	leave  
  4067ba:	fs or  ecx,esi
  4067bd:	push   ds
  4067be:	add    DWORD PTR [eax+0x5a],ecx
  4067c1:	cmp    al,0x6
  4067c3:	sar    DWORD PTR [esi],1
  4067c5:	fadd   QWORD PTR [edx+eiz*2+0x6531ea9]
  4067cc:	jb     0x4067ed
  4067ce:	sahf   
  4067cf:	adc    DWORD PTR [ecx+0x5c],ebx
  4067d2:	fisttp DWORD PTR [ebp-0x1b05c86e]
  4067d8:	lock xchg ebx,eax
  4067da:	or     ah,BYTE PTR [edi+0x1]
  4067dd:	add    BYTE PTR [edx+0x1a],0x96
  4067e1:	daa    
  4067e2:	repnz in eax,dx
  4067e4:	sti    
  4067e5:	mov    ecx,0x485c6457
  4067ea:	clc    
  4067eb:	repz push eax
  4067ed:	dec    ebp
  4067ee:	std    
  4067ef:	retf   
  4067f0:	xchg   ebx,eax
  4067f1:	aam    0xfa
  4067f3:	adc    al,dl
  4067f5:	pop    edi
  4067f6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4067f7:	lods   eax,DWORD PTR ds:[esi]
  4067f8:	fwait
  4067f9:	stc    
  4067fa:	icebp  
  4067fb:	pop    eax
  4067fc:	inc    edx
  4067fd:	call   0xc77092c5
  406802:	outs   dx,DWORD PTR ds:[esi]
  406803:	in     eax,dx
  406804:	retf   
  406805:	popa   
  406806:	arpl   WORD PTR [ecx+eiz*8-0x67],di
  40680a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40680b:	mov    dh,BYTE PTR [edi]
  40680d:	mov    esp,0x9c0da50d
  406812:	adc    ebx,DWORD PTR [edi+0x74d9a7b5]
  406818:	call   0x78a3c55f
  40681d:	push   esp
  40681e:	in     al,0x98
  406820:	cmp    ecx,eax
  406822:	mov    eax,0xde392272
  406827:	in     eax,dx
  406828:	and    dh,BYTE PTR [ecx+ecx*4-0x291e8d1f]
  40682f:	mov    eax,ds:0x1a04698c
  406834:	ins    BYTE PTR es:[edi],dx
  406835:	jecxz  0x406822
  406837:	push   esp
  406838:	leave  
  406839:	fcomp  QWORD PTR [ebx]
  40683b:	jl     0x40686e
  40683d:	fsub   QWORD PTR [ecx+0x1615babe]
  406843:	ret    0x46b9
  406846:	pop    ecx
  406847:	loope  0x406839
  406849:	les    edi,FWORD PTR [edx-0x7eee989a]
  40684f:	mov    edx,DWORD PTR [esi+0x674a478c]
  406855:	mov    eax,0xc1c5907
  40685a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40685b:	and    ch,al
  40685d:	enter  0x6056,0xdf
  406861:	dec    edi
  406862:	sub    eax,0xea83a83d
  406867:	(bad)  
  406868:	popf   
  406869:	sbb    ebp,0x13
  40686c:	sbb    DWORD PTR [ecx],0xffffff9a
  40686f:	(bad)
  406872:	inc    esi
  406873:	or     eax,0xe22b1004
  406878:	dec    ecx
  406879:	inc    ebp
  40687a:	scas   al,BYTE PTR es:[edi]
  40687b:	icebp  
  40687c:	mov    edx,DWORD PTR [edi]
  40687e:	retf   
  40687f:	pop    es
  406880:	dec    eax
  406881:	push   es
  406882:	ja     0x40688e
  406884:	adc    al,0xbd
  406886:	popf   
  406887:	lea    ecx,[ebp+0x32]
  40688a:	and    dl,BYTE PTR [ebx-0x5c]
  40688d:	dec    edx
  40688e:	pop    edi
  40688f:	(bad)  
  406890:	out    dx,eax
  406891:	jno    0x4068da
  406893:	nop
  406894:	jbe    0x4068dc
  406896:	push   ds
  406897:	out    dx,eax
  406898:	mov    al,cl
  40689a:	inc    esp
  40689b:	xchg   ebx,eax
  40689c:	pusha  
  40689d:	mov    eax,ds:0xba077977
  4068a2:	dec    ebx
  4068a3:	and    ch,BYTE PTR [esi]
  4068a5:	outs   dx,BYTE PTR ds:[esi]
  4068a6:	cs cli 
  4068a8:	sbb    ebx,esp
  4068aa:	and    al,0xb1
  4068ac:	xchg   ebp,eax
  4068ad:	or     BYTE PTR [esi],al
  4068af:	mov    cx,0xb44b
  4068b3:	fucomi st,st(6)
  4068b5:	pop    ecx
  4068b6:	retf   
  4068b7:	jp     0x7feb84ca
  4068bd:	cdq    
  4068be:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4068bf:	mul    BYTE PTR [esi-0x410d499d]
  4068c5:	lods   eax,DWORD PTR ds:[esi]
  4068c6:	jno    0x4068d6
  4068c8:	sub    DWORD PTR ds:0xf1d9f24,ecx
  4068ce:	cmp    ebx,DWORD PTR [edi]
  4068d0:	gs bswap ebx
  4068d3:	sbb    eax,0x831c6a2f
  4068d8:	hlt    
  4068d9:	inc    esp
  4068da:	call   0xe7efae41
  4068df:	push   0xffffffc0
  4068e1:	sub    esi,DWORD PTR [esi]
  4068e3:	xchg   DWORD PTR [ebx-0xa],esi
  4068e6:	in     al,dx
  4068e7:	jo     0x4068db
  4068e9:	mov    cl,0xc8
  4068eb:	dec    ebx
  4068ec:	sub    al,0x80
  4068ee:	loope  0x40694a
  4068f0:	outs   dx,DWORD PTR ds:[esi]
  4068f1:	xchg   BYTE PTR [ebx+0x2bfcde4e],ch
  4068f7:	mov    ebx,0x5a129690
  4068fc:	ret    
  4068fd:	stc    
  4068fe:	adc    ch,BYTE PTR [ecx-0x2]
  406901:	add    edi,DWORD PTR ds:0x27f19c12
  406907:	xchg   ebx,eax
  406908:	aaa    
  406909:	push   ss
  40690a:	xchg   ebp,ebp
  40690c:	pop    ds
  40690d:	ficomp WORD PTR [esi+0x6c7b4c5a]
  406913:	loopne 0x406988
  406915:	mov    eax,0xf92cc6a9
  40691a:	dec    edi
  40691b:	mov    ebp,0xf2b61e38
  406920:	ins    BYTE PTR es:[edi],dx
  406921:	xor    al,0x45
  406923:	sti    
  406924:	cs jno 0x406992
  406927:	jge    0x406988
  406929:	(bad)  
  40692a:	out    dx,al
  40692b:	repnz xor ebx,DWORD PTR [eax]
  40692e:	lods   eax,DWORD PTR ds:[esi]
  40692f:	inc    esi
  406930:	mov    bh,0xb2
  406932:	mov    ecx,0x901c32fb
  406937:	sub    ah,BYTE PTR [esi-0x31]
  40693a:	adc    cl,BYTE PTR [ebp+0xc]
  40693d:	fwait
  40693e:	add    BYTE PTR [edi],0x54
  406941:	or     eax,0x418a16f0
  406946:	enter  0x885d,0x3d
  40694a:	cs jbe 0x4069ad
  40694d:	xor    BYTE PTR [esp+ecx*4],al
  406950:	or     esi,DWORD PTR [edx]
  406952:	pushf  
  406953:	pop    esi
  406954:	daa    
  406955:	cmc    
  406956:	call   0xc332:0xf8691c0
  40695d:	addr16 popa 
  40695f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406960:	xor    eax,0xe248fe69
  406965:	push   ecx
  406966:	sar    DWORD PTR [eax+ecx*4-0x15],0x1
  40696b:	add    BYTE PTR [ebp-0x1594a2c4],dl
  406971:	fnstenv [esi+0x0]
  406974:	xor    DWORD PTR [eax+0x65],eax
  406977:	push   cs
  406978:	imul   eax,DWORD PTR ds:0x21a74c82,0xe57636b8
  406982:	pop    esi
  406983:	or     al,0xd2
  406985:	retf   0xb473
  406988:	pop    es
  406989:	fisttp WORD PTR [ebp-0x58]
  40698c:	cmp    dh,bl
  40698e:	inc    esp
  40698f:	xchg   edi,eax
  406990:	xchg   esp,eax
  406991:	inc    ecx
  406992:	imul   ebp,DWORD PTR [edx+0x4c],0x65
  406996:	cmc    
  406997:	inc    esp
  406998:	pop    ebp
  406999:	cmp    edx,esi
  40699b:	dec    DWORD PTR [edi-0xd8aeaf2]
  4069a1:	mov    edi,0x5fc0e99b
  4069a6:	ret    
  4069a7:	pop    esi
  4069a8:	jno    0x40694c
  4069aa:	cmp    edx,DWORD PTR [edx+ebp*2]
  4069ad:	push   ebx
  4069ae:	mov    ecx,0x1533a24a
  4069b3:	or     bl,BYTE PTR [edi-0x2a]
  4069b6:	ss pop es
  4069b8:	out    0x51,eax
  4069ba:	(bad)  
  4069bc:	xor    bl,dh
  4069be:	jmp    0x6ec2:0xcecc5c24
  4069c5:	int    0xba
  4069c7:	mov    bh,0x59
  4069c9:	ret    
  4069ca:	dec    eax
  4069cb:	xor    DWORD PTR [eax+0x34],esp
  4069ce:	out    0x4d,eax
  4069d0:	clc    
  4069d1:	js     0x406960
  4069d3:	and    BYTE PTR ds:0x9621ee4f,0x9e
  4069da:	not    DWORD PTR ds:0x4972708a
  4069e0:	or     BYTE PTR [esi+0x6],ah
  4069e3:	mov    dh,0x61
  4069e5:	push   edx
  4069e6:	inc    ecx
  4069e7:	out    dx,al
  4069e8:	pop    ebx
  4069e9:	mov    eax,0xe95e4076
  4069ee:	push   edi
  4069ef:	scas   al,BYTE PTR es:[edi]
  4069f0:	jle    0x406986
  4069f2:	jg     0x4069e6
  4069f4:	inc    ecx
  4069f5:	xor    eax,0x5c187dd1
  4069fa:	pushf  
  4069fb:	sahf   
  4069fc:	fisub  DWORD PTR [ebx]
  4069fe:	push   0x64c428a4
  406a03:	xchg   edx,eax
  406a04:	cmp    al,0xe4
  406a06:	and    al,0x64
  406a08:	mov    edi,0x57b5fb7
  406a0d:	test   DWORD PTR [edx-0x6],esp
  406a10:	sbb    al,0x42
  406a12:	xchg   DWORD PTR [ebx+0x36568fd7],esp
  406a18:	jae    0x406a2d
  406a1a:	mov    al,0xed
  406a1c:	dec    esi
  406a1d:	outs   dx,BYTE PTR ds:[esi]
  406a1e:	xchg   edx,eax
  406a1f:	sti    
  406a20:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406a21:	inc    edi
  406a22:	push   0x3ddd39f0
  406a27:	imul   ecx,DWORD PTR [ecx+0x3e],0xffffffca
  406a2b:	lods   eax,DWORD PTR ds:[esi]
  406a2c:	sub    bl,BYTE PTR [edx]
  406a2e:	(bad)  
  406a2f:	fdiv   st(5),st
  406a31:	xchg   edx,eax
  406a32:	xchg   edx,eax
  406a33:	xchg   BYTE PTR [ebx-0x7ad6fd68],ah
  406a39:	jl     0x406a08
  406a3b:	adc    al,0x3a
  406a3d:	sub    al,0x49
  406a3f:	mov    WORD PTR [esi+0x2b],ss
  406a42:	pop    esi
  406a43:	call   0x3d795ac0
  406a48:	jp     0x406ab1
  406a4a:	gs enter 0xc9da,0x32
  406a4f:	mov    esi,0x9f593bba
  406a54:	aas    
  406a55:	test   BYTE PTR [esi+eax*2+0x73],cl
  406a59:	sbb    eax,DWORD PTR [ebx-0x1d]
  406a5c:	and    al,0xd3
  406a5e:	call   0xb8d2:0xd00863cf
  406a65:	xor    BYTE PTR [ecx-0xd1cd615],cl
  406a6b:	jo     0x406ae7
  406a6d:	in     al,0xa0
  406a6f:	pop    eax
  406a70:	pop    es
  406a71:	icebp  
  406a72:	xchg   ebp,eax
  406a73:	xchg   BYTE PTR ds:0xd7f8d673,dl
  406a79:	mov    DWORD PTR [ecx],edi
  406a7b:	inc    ebp
  406a7c:	(bad)  
  406a7d:	retf   
  406a7e:	cmc    
  406a7f:	push   edi
  406a80:	and    ebp,ebx
  406a82:	aad    0xe8
  406a84:	cwde   
  406a85:	and    eax,0x12362508
  406a8a:	pushf  
  406a8b:	imul   ebx,DWORD PTR [ebp-0x7a6d7760],0xffffff92
  406a92:	mov    ss,edx
  406a94:	shr    BYTE PTR [ebp+esi*4+0x3],1
  406a98:	test   DWORD PTR [edx+0x65ae36d0],0x54b92746
  406aa2:	inc    esp
  406aa3:	aad    0x53
  406aa5:	ror    BYTE PTR [esi],1
  406aa7:	adc    ch,BYTE PTR [edi]
  406aa9:	jo     0x406afe
  406aab:	call   0x8f93:0xe5ba906c
  406ab2:	dec    esi
  406ab3:	jmp    0x406a84
  406ab5:	mov    ch,0x64
  406ab7:	add    al,0x24
  406ab9:	cli    
  406aba:	or     bh,0x8f
  406abd:	stos   BYTE PTR es:[edi],al
  406abe:	jno    0x406b0d
  406ac0:	call   0xd360:0x7be481dd
  406ac7:	xor    cl,bl
  406ac9:	nop
  406aca:	lods   eax,DWORD PTR ds:[esi]
  406acb:	pusha  
  406acc:	out    0x1b,eax
  406ace:	push   eax
  406acf:	xor    eax,0x82771c6c
  406ad4:	jae    0x406ad4
  406ad6:	mov    BYTE PTR [ebx-0xf85a0d9],bh
  406adc:	ror    dh,0x67
  406adf:	scas   al,BYTE PTR es:[edi]
  406ae0:	jno    0x406b2c
  406ae2:	or     bh,BYTE PTR [eax+esi*1+0x24]
  406ae6:	lahf   
  406ae7:	inc    ebx
  406ae8:	in     al,dx
  406ae9:	das    
  406aea:	adc    bh,BYTE PTR [edx-0x41]
  406aed:	sub    edi,DWORD PTR [esi]
  406aef:	inc    edi
  406af0:	jg     0x406a95
  406af2:	add    BYTE PTR [edx+0x45],ch
  406af5:	and    DWORD PTR [ecx-0x614ebd70],ebx
  406afb:	lock pop esi
  406afd:	fprem1 
  406aff:	mov    edx,0x80ea33e
  406b04:	mov    esp,ecx
  406b06:	test   al,0xd4
  406b08:	jmp    0x406b10
  406b0a:	clc    
  406b0b:	(bad)  
  406b0d:	scas   eax,DWORD PTR es:[edi]
  406b0e:	cmp    dl,dh
  406b10:	mov    al,ds:0x81e6ec7e
  406b15:	jo     0x406ae9
  406b17:	jle    0x406af4
  406b19:	imul   ecx,DWORD PTR [edi+0x384d034],0x35bbd3c2
  406b23:	jl     0x406acb
  406b25:	jge    0x406af6
  406b27:	mov    al,0x7a
  406b29:	adc    al,0xc3
  406b2b:	fld    st(4)
  406b2d:	lahf   
  406b2e:	mov    bl,0xd3
  406b30:	inc    eax
  406b31:	dec    eax
  406b32:	xor    BYTE PTR [ecx+0x79610dd2],0xd6
  406b39:	sbb    cl,ch
  406b3b:	cmp    dh,BYTE PTR [ebx+0x38]
  406b3e:	push   es
  406b3f:	inc    ebp
  406b40:	pop    ecx
  406b41:	mov    edx,0x47c3bcb0
  406b46:	retf   0x514a
  406b49:	xor    DWORD PTR [esi],edi
  406b4b:	sbb    BYTE PTR [ecx],bh
  406b4d:	(bad)  
  406b4e:	mov    al,ds:0x7a6b21d9
  406b53:	push   es
  406b54:	test   eax,0xc66342f9
  406b59:	mov    dh,0x9e
  406b5b:	fidiv  WORD PTR [eax+0x67a170ae]
  406b61:	dec    esi
  406b62:	cs pop esp
  406b64:	mov    eax,ds:0x9bca7c82
  406b69:	call   0x612d5e29
  406b6e:	pop    edi
  406b6f:	jb     0x406b11
  406b71:	aam    0x90
  406b73:	adc    BYTE PTR [ebx-0x73],bh
  406b76:	mov    al,0xd8
  406b78:	shl    DWORD PTR [eax-0x79],cl
  406b7b:	dec    ebp
  406b7c:	xchg   esp,eax
  406b7d:	sar    DWORD PTR [edx+eiz*1+0x75c773e2],cl
  406b84:	lock pop esi
  406b86:	or     BYTE PTR [esi-0x69],al
  406b89:	jmp    0x406b27
  406b8b:	or     ah,BYTE PTR [edi]
  406b8d:	jno    0x406bc1
  406b8f:	mov    DWORD PTR [ebx+0x23],ebx
  406b92:	adc    al,0x60
  406b94:	fdiv   QWORD PTR [eax-0x5cb77888]
  406b9a:	jl     0x406b43
  406b9c:	and    DWORD PTR [ebp-0x29ef5fce],esp
  406ba2:	aad    0x7d
  406ba4:	out    0xc0,al
  406ba6:	adc    ch,BYTE PTR [ebp-0x1110466]
  406bac:	scas   al,BYTE PTR es:[edi]
  406bad:	fs ret 
  406baf:	(bad)  
  406bb0:	enter  0xda6f,0xd4
  406bb4:	sub    ebx,DWORD PTR [ebp-0x2ccdcaa]
  406bba:	ja     0x406c2e
  406bbc:	sub    DWORD PTR [ebx+0x50],0xda7b3300
  406bc3:	pop    ecx
  406bc4:	fsub   DWORD PTR [esi-0x1]
  406bc7:	mov    fs:0x3b33c7e9,eax
  406bcd:	icebp  
  406bce:	test   esi,esp
  406bd0:	xchg   bh,bl
  406bd2:	ins    DWORD PTR es:[edi],dx
  406bd3:	mov    eax,ebx
  406bd5:	mov    eax,ds:0x4f56a9cb
  406bda:	sub    al,0x6d
  406bdc:	sbb    DWORD PTR [ebx],0xffffff93
  406bdf:	cli    
  406be0:	cwde   
  406be1:	mov    cl,0x9e
  406be3:	push   edx
  406be4:	stos   DWORD PTR es:[edi],eax
  406be5:	dec    esi
  406be6:	(bad)  
  406be7:	je     0x406ba5
  406be9:	ins    DWORD PTR es:[edi],dx
  406bea:	mov    eax,0xbec86c7f
  406bef:	sbb    ecx,DWORD PTR [edx+0x4c]
  406bf2:	test   bl,dh
  406bf4:	fwait
  406bf5:	mov    esp,0x808902b7
  406bfa:	mov    dl,0x24
  406bfc:	mov    bl,0x2
  406bfe:	test   DWORD PTR [edi+0x5a04f060],ebp
  406c04:	stos   DWORD PTR es:[edi],eax
  406c05:	inc    edx
  406c06:	out    dx,al
  406c07:	leave  
  406c08:	cmp    eax,0x5db4f5ab
  406c0d:	ds push eax
  406c0f:	cmp    eax,esp
  406c11:	hlt    
  406c12:	add    eax,0x56fa324c
  406c17:	loopne 0x406c98
  406c19:	fisubr WORD PTR [ebp-0x37]
  406c1c:	nop
  406c1d:	loope  0x406c58
  406c1f:	pop    esp
  406c20:	jle    0x406c72
  406c22:	out    dx,eax
  406c23:	retf   0x7a96
  406c26:	adc    bh,BYTE PTR [ecx+ebx*2+0x4a]
  406c2a:	into   
  406c2b:	adc    DWORD PTR [ecx+ebx*4-0x340afcfe],esp
  406c32:	sub    DWORD PTR [edi+0x521b387a],0x1f
  406c39:	inc    ebx
  406c3a:	mov    DWORD PTR [eax+ebp*2],ebp
  406c3d:	and    cl,BYTE PTR [eax+0x52]
  406c40:	fsub   DWORD PTR [ebp+edi*1-0x20]
  406c44:	and    DWORD PTR [esi],edx
  406c46:	inc    ebp
  406c47:	(bad)  
  406c48:	cli    
  406c49:	dec    esi
  406c4a:	pop    ebx
  406c4b:	neg    BYTE PTR [ecx]
  406c4d:	hlt    
  406c4e:	mov    BYTE PTR [esi],cl
  406c50:	pop    ebp
  406c51:	sbb    dh,BYTE PTR [ecx+0x7d5f32a4]
  406c57:	xchg   ebx,eax
  406c58:	mov    edx,0x614081c2
  406c5d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406c5e:	xor    eax,0x6b75df94
  406c63:	repz sub ecx,DWORD PTR [edx+0x7ddcfe3e]
  406c6a:	mov    ebx,0x4e7722bf
  406c6f:	add    eax,0xd23d0f55
  406c74:	cmp    ebx,DWORD PTR [ecx+0x10]
  406c77:	inc    esp
  406c78:	(bad)  
  406c79:	dec    BYTE PTR [ebx]
  406c7b:	push   esi
  406c7c:	dec    esp
  406c7d:	jle    0x406c2d
  406c7f:	pusha  
  406c80:	and    BYTE PTR ds:0x29868657,ah
  406c86:	cmp    eax,0xff204b3a
  406c8b:	jbe    0x406c80
  406c8d:	inc    ebp
  406c8e:	aad    0xe2
  406c90:	push   esi
  406c91:	aaa    
  406c92:	scas   al,BYTE PTR es:[edi]
  406c93:	nop
  406c94:	add    BYTE PTR [edi+0x50],0x28
  406c98:	idiv   DWORD PTR [ebx+0x0]
  406c9b:	adc    edx,eax
  406c9d:	xchg   BYTE PTR [edi],dl
  406c9f:	adc    ebp,ebp
  406ca1:	mov    ebp,0x9b9a6878
  406ca6:	push   esp
  406ca7:	cmc    
  406ca8:	push   eax
  406ca9:	fstp   TBYTE PTR [ebx]
  406cab:	retf   0x555e
  406cae:	lea    esp,[edi+0x4e167d09]
  406cb4:	bound  ecx,QWORD PTR ds:0x24ad680a
  406cba:	cmp    BYTE PTR [eax+esi*2],bh
  406cbd:	enter  0xe3a8,0x82
  406cc1:	leave  
  406cc2:	aas    
  406cc3:	push   cs
  406cc4:	xchg   DWORD PTR [ebx],esi
  406cc6:	dec    edx
  406cc7:	pop    eax
  406cc8:	mov    ebp,0xce73d992
  406ccd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406cce:	sub    DWORD PTR [esi-0x3a],esi
  406cd1:	adc    eax,0x17c76dd
  406cd6:	cmp    DWORD PTR [ebp-0x74c5213d],0xc22c73f3
  406ce0:	push   eax
  406ce1:	scas   eax,DWORD PTR es:[edi]
  406ce2:	fist   WORD PTR [edi]
  406ce4:	add    DWORD PTR [edi],esp
  406ce6:	jno    0x406c93
  406ce8:	sub    esi,DWORD PTR [ecx+eax*4-0x3f6c5885]
  406cef:	jmp    0xd9c3e57b
  406cf4:	scas   eax,DWORD PTR es:[edi]
  406cf5:	arpl   WORD PTR [edi-0x68],bx
  406cf8:	stos   BYTE PTR es:[edi],al
  406cf9:	jno    0x406ca3
  406cfb:	jp     0x406ce8
  406cfd:	movq   QWORD PTR [eax-0x4],mm4
  406d01:	sbb    ah,BYTE PTR [eax+0x70]
  406d04:	test   ebx,edi
  406d06:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406d07:	push   eax
  406d08:	cmp    al,0x9b
  406d0a:	or     esi,DWORD PTR [eax]
  406d0c:	imul   esp,DWORD PTR [ebp-0x36f35be9],0x3a72e14c
  406d16:	mov    al,0x31
  406d18:	js     0x406d8a
  406d1a:	xchg   BYTE PTR ds:0x9b40c015,ah
  406d20:	in     al,dx
  406d21:	enter  0x5811,0xb4
  406d25:	fst    DWORD PTR [esi+0x7b0414ca]
  406d2b:	scas   eax,DWORD PTR es:[edi]
  406d2c:	test   eax,0xb661bc3d
  406d31:	rcl    cl,0xae
  406d34:	stos   DWORD PTR es:[edi],eax
  406d35:	cmp    DWORD PTR [ebx-0x4d21dba9],ebp
  406d3b:	mov    ah,0x78
  406d3e:	push   es
  406d3f:	pushf  
  406d40:	adc    eax,0x9f31b115
  406d45:	mov    al,0x8f
  406d47:	fst    QWORD PTR [ecx]
  406d49:	je     0x406d50
  406d4b:	dec    ecx
  406d4c:	inc    esp
  406d4d:	(bad)  [eax-0x5e]
  406d50:	outs   dx,BYTE PTR ds:[esi]
  406d51:	dec    eax
  406d52:	inc    ecx
  406d53:	jbe    0x406dc8
  406d55:	jg     0x406d7c
  406d57:	adc    edi,DWORD PTR [edi-0x75]
  406d5a:	jge    0x406dae
  406d5c:	mov    dh,0xed
  406d5e:	mov    al,ds:0x78633ae7
  406d63:	shr    DWORD PTR ds:0x7f683668,1
  406d69:	sahf   
  406d6a:	mov    dh,BYTE PTR ds:[ecx]
  406d6d:	cmp    eax,ebx
  406d6f:	std    
  406d70:	pop    edx
  406d71:	or     DWORD PTR [ebp+0x7f2c5014],ebx
  406d77:	cmp    edx,DWORD PTR [esp+eax*4]
  406d7a:	push   edi
  406d7b:	dec    eax
  406d7c:	leave  
  406d7d:	inc    eax
  406d7e:	fsub   DWORD PTR [edi]
  406d80:	mov    eax,0x7a490712
  406d85:	jmp    0x5fd58951
  406d8a:	ret    
  406d8b:	dec    ebx
  406d8c:	loop   0x406d6f
  406d8e:	(bad)  
  406d8f:	jl     0x406e07
  406d91:	add    eax,DWORD PTR [ebx-0x71]
  406d94:	dec    eax
  406d95:	jg     0x406df4
  406d97:	mov    BYTE PTR [ecx],0x15
  406d9a:	ror    DWORD PTR [ecx+0x47fbcfb],0xce
  406da1:	push   edi
  406da2:	stos   DWORD PTR es:[edi],eax
  406da3:	pop    es
  406da4:	add    DWORD PTR [edi],esp
  406da6:	cmp    ebp,DWORD PTR [ebx+0x7f]
  406da9:	(bad)  
  406daa:	ror    DWORD PTR [esi+ebp*4-0x1a],1
  406dae:	cwde   
  406daf:	pop    ecx
  406db0:	jp     0x406d8d
  406db2:	scas   eax,DWORD PTR es:[edi]
  406db3:	cmp    al,0xa7
  406db5:	mov    ecx,0x59bfd95f
  406dba:	ret    
  406dbb:	and    BYTE PTR [ecx-0x78fe932c],dh
  406dc1:	sti    
  406dc2:	mov    ah,0xa7
  406dc4:	sub    ecx,ebp
  406dc6:	ret    
  406dc7:	xor    al,0x43
  406dc9:	enter  0x8585,0x5d
  406dcd:	xor    al,0x2c
  406dcf:	pop    ss
  406dd0:	mov    ecx,0xa3645d8
  406dd5:	bound  ebx,QWORD PTR [eax+ecx*8]
  406dd8:	retf   
  406dd9:	add    al,0x3c
  406ddb:	cmp    ah,BYTE PTR [edi+0x24130a57]
  406de1:	dec    edi
  406de2:	(bad)  
  406de3:	iret   
  406de4:	sub    esp,DWORD PTR es:[edi]
  406de7:	push   ecx
  406de8:	pop    es
  406de9:	pop    eax
  406dea:	xor    BYTE PTR [eax],al
  406dec:	push   ecx
  406ded:	cmp    BYTE PTR [eax-0x7a1373d0],cl
  406df3:	adc    dh,BYTE PTR [ebp+0x31]
  406df6:	jns    0x406d95
  406df8:	xor    eax,0x42e1639
  406dfd:	fadd   QWORD PTR [ecx+ebx*4]
  406e00:	loope  0x406dfd
  406e02:	out    0x70,al
  406e04:	mov    BYTE PTR [ecx+0x67],ah
  406e07:	mov    bh,0xa4
  406e09:	gs jbe 0x406e74
  406e0c:	add    al,0xfb
  406e0e:	pop    ebp
  406e0f:	push   cs
  406e10:	ja     0x406da2
  406e12:	not    ecx
  406e14:	and    al,0x32
  406e16:	adc    ebp,DWORD PTR [eax-0x49]
  406e19:	inc    esp
  406e1a:	mov    DWORD PTR [edi-0x80],esi
  406e1d:	pop    eax
  406e1e:	mov    bl,0x92
  406e20:	arpl   WORD PTR [edx+ebx*4],si
  406e23:	jmp    0xb446:0xb3cf94f6
  406e2a:	xchg   edx,eax
  406e2b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406e2c:	jmp    0x406e3e
  406e2e:	je     0x406e20
  406e30:	cmc    
  406e31:	sub    DWORD PTR [ebx+0x7f186b38],ecx
  406e37:	adc    eax,DWORD PTR [esi-0x48]
  406e3a:	in     al,0xba
  406e3c:	mov    edx,0x4f45fbaf
  406e41:	cmp    eax,0xb93badce
  406e46:	fisubr WORD PTR [edi+esi*4+0x5b9547d3]
  406e4d:	cdq    
  406e4e:	xchg   esi,eax
  406e4f:	xor    al,0xb5
  406e51:	or     cl,BYTE PTR [esi]
  406e53:	fidivr DWORD PTR [edx+0x1b]
  406e56:	push   edi
  406e57:	xor    BYTE PTR [edi+esi*2+0x1200fd55],0x67
  406e5f:	push   esp
  406e60:	cmp    ebx,DWORD PTR [edi]
  406e62:	rep stos BYTE PTR es:[edi],al
  406e64:	fs ins DWORD PTR es:[edi],dx
  406e66:	jg     0x406e67
  406e68:	mov    DWORD PTR [ebp+esi*8+0x22],ecx
  406e6c:	test   eax,esp
  406e6e:	push   edx
  406e6f:	inc    edx
  406e70:	jle    0x406eca
  406e72:	add    al,BYTE PTR [edi+0x4ec75770]
  406e78:	lahf   
  406e79:	xchg   BYTE PTR [esi+0x61],ch
  406e7c:	cli    
  406e7d:	dec    ebp
  406e7e:	and    dh,BYTE PTR [edi+0xa]
  406e81:	call   0x6fc7:0x6847426c
  406e88:	inc    edx
  406e89:	call   0x21109ac4
  406e8e:	jne    0x406e65
  406e90:	scas   al,BYTE PTR es:[edi]
  406e91:	test   al,0xac
  406e93:	ficomp WORD PTR [ecx]
  406e95:	int    0x44
  406e97:	test   al,0x5c
  406e99:	xlat   BYTE PTR ds:[ebx]
  406e9a:	cld    
  406e9b:	loopne 0x406eb9
  406e9d:	fidiv  WORD PTR [esi-0x3c]
  406ea0:	push   es
  406ea1:	sbb    edi,DWORD PTR [ebx]
  406ea3:	(bad)
  406ea7:	jle    0x406eea
  406ea9:	jge    0x406f24
  406eab:	loope  0x406e48
  406ead:	or     dl,BYTE PTR [ecx-0x4a6c2776]
  406eb3:	dec    esi
  406eb4:	inc    ebp
  406eb5:	clc    
  406eb6:	push   cs
  406eb7:	pop    edi
  406eb8:	int3   
  406eb9:	out    0xf,al
  406ebb:	xor    ebx,DWORD PTR [ecx+0x19]
  406ebe:	ror    BYTE PTR [eax+0x6bb7f087],cl
  406ec4:	fst    DWORD PTR [ebx-0x38dc21eb]
  406eca:	fcomp  st(6)
  406ecc:	fdivr  DWORD PTR [eax]
  406ece:	cmp    dl,BYTE PTR [edx-0x4b]
  406ed1:	push   es
  406ed2:	ficomp WORD PTR [edx-0x43]
  406ed5:	ss das 
  406ed7:	pop    edx
  406ed8:	pop    eax
  406ed9:	mov    ch,0x1
  406edb:	and    BYTE PTR [edi],bh
  406edd:	add    esi,ebp
  406edf:	push   ds
  406ee0:	repnz rol ebp,1
  406ee3:	sbb    BYTE PTR [ebp+0x1d8457d4],0x5c
  406eea:	pop    esi
  406eeb:	xchg   edx,eax
  406eec:	pushf  
  406eed:	mov    ah,al
  406eef:	mov    ds:0xc626f6c1,eax
  406ef4:	cli    
  406ef5:	lock cwde 
  406ef7:	call   DWORD PTR [edx]
  406ef9:	push   edi
  406efa:	inc    esi
  406efb:	repnz pop ecx
  406efd:	push   0x64
  406eff:	cwde   
  406f00:	aam    0x24
  406f02:	cmp    dl,bl
  406f04:	cwde   
  406f05:	dec    edi
  406f06:	scas   eax,DWORD PTR es:[edi]
  406f07:	inc    esi
  406f08:	js     0x406ea3
  406f0a:	xchg   esp,eax
  406f0b:	sbb    ebx,0xffffff86
  406f0e:	test   BYTE PTR [edx+0x2c141d96],0x2
  406f15:	and    DWORD PTR [eax],ecx
  406f17:	sbb    ecx,DWORD PTR [edi+eiz*4+0x24]
  406f1b:	icebp  
  406f1c:	add    eax,0x910352b6
  406f21:	pop    esi
  406f22:	push   ss
  406f23:	push   es
  406f24:	and    BYTE PTR [esi-0x3ba8a398],cl
  406f2a:	sub    al,0x68
  406f2c:	xor    ebp,DWORD PTR [esi-0x25]
  406f2f:	(bad)  [edi*2+0x53c85743]
  406f36:	mov    DWORD PTR [edx+edi*2],ebx
  406f39:	loopne 0x406f02
  406f3b:	add    ebp,DWORD PTR [ebx-0x69]
  406f3e:	xchg   edx,eax
  406f3f:	imul   ebx,DWORD PTR [esi+0x2e2d67d7],0xfffffffc
  406f46:	or     eax,0xc3584403
  406f4b:	ja     0x406f1a
  406f4d:	add    bh,dl
  406f4f:	(bad)  [edi+0x55]
  406f52:	enter  0xc261,0x38
  406f56:	loopne 0x406f9f
  406f58:	(bad)  
  406f59:	jne    0x406ee0
  406f5b:	clc    
  406f5c:	or     al,0x11
  406f5e:	into   
  406f5f:	sub    DWORD PTR ds:0x7cff0a07,eax
  406f65:	rcl    esi,1
  406f67:	xor    edi,esi
  406f69:	ds je  0x406f18
  406f6c:	xchg   ecx,eax
  406f6d:	mov    bh,0x80
  406f6f:	adc    bh,BYTE PTR [ebx-0x55]
  406f72:	mov    edx,DWORD PTR [esp+edi*8+0x9771cd8]
  406f79:	rcr    BYTE PTR [esi-0x46],1
  406f7c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406f7d:	mov    esp,0x99dc2e4d
  406f82:	mov    bl,0x98
  406f84:	pop    esi
  406f85:	shl    BYTE PTR [ebx-0x75],cl
  406f88:	mov    bh,0x4f
  406f8a:	dec    ebx
  406f8b:	outs   dx,BYTE PTR ss:[esi]
  406f8d:	mov    ah,0x3
  406f8f:	jp     0x406f98
  406f91:	ja     0x406f7b
  406f93:	adc    BYTE PTR [ebx],ch
  406f95:	hlt    
  406f96:	aam    0x53
  406f98:	ficom  DWORD PTR [esi+0x66]
  406f9b:	pop    ss
  406f9c:	push   edx
  406f9d:	arpl   WORD PTR [ecx],di
  406f9f:	jl     0x406f45
  406fa1:	sub    al,0xdc
  406fa3:	mov    WORD PTR [ebx+0x2d1db2da],ss
  406fa9:	outs   dx,DWORD PTR ds:[esi]
  406faa:	inc    esp
  406fab:	sub    bl,bl
  406fad:	inc    ecx
  406fae:	sbb    DWORD PTR ds:0xaf90467f,esi
  406fb4:	mov    BYTE PTR [ecx-0x216c59e3],cl
  406fba:	sub    edi,esp
  406fbc:	sub    BYTE PTR [eax-0x5f4eba77],bl
  406fc2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406fc3:	pop    esp
  406fc4:	push   edi
  406fc5:	rol    DWORD PTR [ebp+eiz*1+0x1ce02d63],0x47
  406fcd:	add    eax,0x68741264
  406fd2:	fstp   DWORD PTR [edi]
  406fd4:	push   edx
  406fd5:	inc    esi
  406fd6:	sub    ax,0xdae5
  406fda:	hlt    
  406fdb:	lods   eax,DWORD PTR ds:[esi]
  406fdc:	pop    ds
  406fdd:	(bad)  
  406fde:	popa   
  406fdf:	pop    edx
  406fe0:	call   0xa3be:0x8f8c2f9b
  406fe7:	lods   eax,DWORD PTR ds:[esi]
  406fe8:	jecxz  0x407023
  406fea:	xchg   esp,eax
  406feb:	push   ecx
  406fec:	xor    bh,cl
  406fee:	hlt    
  406fef:	jns    0x406fa4
  406ff1:	ret    0x246f
  406ff4:	nop
  406ff5:	lds    ebx,FWORD PTR [ebx-0x7d]
  406ff8:	call   0x190e:0xf4df0775
  406fff:	add    al,bh
  407001:	scas   al,BYTE PTR es:[edi]
  407002:	xchg   esp,eax
  407003:	(bad)  
  407004:	sbb    eax,0x4078519
  407009:	push   0x4d
  40700b:	gs in  al,dx
  40700d:	icebp  
  40700e:	inc    ebx
  40700f:	adc    DWORD PTR [edi+0x7d],edx
  407012:	or     ebp,DWORD PTR [esi-0x64]
  407015:	ja     0x406fe9
  407017:	retf   
  407018:	pop    ebx
  407019:	cmp    ah,BYTE PTR cs:[esi+0x1e]
  40701d:	jnp    0x407030
  40701f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407020:	xor    al,0x67
  407022:	mov    bh,0xb6
  407024:	cmp    al,0x97
  407026:	test   BYTE PTR [esi+0x59f49fff],dl
  40702c:	iret   
  40702d:	xor    ah,ch
  40702f:	add    BYTE PTR [edx-0x3a3c8571],0xc5
  407036:	inc    ebp
  407037:	stc    
  407038:	mov    ch,0xc
  40703a:	test   eax,0x5025fcf9
  40703f:	sub    DWORD PTR [ebp+0x72],esi
  407042:	jmp    0x406fe1
  407044:	and    DWORD PTR [ebp+edi*4+0x3],edi
  407048:	xor    BYTE PTR [eax+esi*1],bh
  40704b:	bound  esp,QWORD PTR gs:[ebx]
  40704e:	cmp    BYTE PTR [edi],0x48
  407051:	rcl    esp,0x77
  407054:	mov    al,0x57
  407056:	std    
  407057:	mov    ecx,esi
  407059:	or     al,0x28
  40705b:	jnp    0x40709a
  40705d:	dec    esp
  40705e:	jmp    0x542f:0xd9174eb1
  407065:	das    
  407066:	sub    bl,bl
  407068:	push   0xdd954ba6
  40706d:	bound  esi,QWORD PTR [edi+0x25d9b886]
  407073:	(bad)  
  407074:	lock jmp 0x6ed38342
  40707a:	inc    esp
  40707b:	pop    edi
  40707c:	iret   
  40707d:	xchg   ecx,eax
  40707e:	(bad)  
  40707f:	sahf   
  407080:	icebp  
  407081:	mov    esp,0x387ab6c5
  407086:	jnp    0x40703c
  407088:	xor    al,0x7d
  40708a:	pop    es
  40708b:	jl     0x4070a3
  40708d:	lahf   
  40708e:	push   ds
  40708f:	pop    ds
  407090:	in     eax,dx
  407091:	mov    cl,cl
  407093:	mov    bl,0x88
  407095:	sub    eax,0x2bb51d44
  40709a:	lea    esi,[ebp-0x7a]
  40709d:	jns    0x4070e0
  40709f:	mul    DWORD PTR [ebp+0x63]
  4070a2:	shr    BYTE PTR [esi+0x522b2dad],cl
  4070a8:	fst    QWORD PTR [esi+eax*2-0x2c]
  4070ac:	mov    gs,WORD PTR [eax]
  4070ae:	xchg   ecx,eax
  4070af:	addr16 dec ebx
  4070b1:	lahf   
  4070b2:	fild   QWORD PTR [eax+0x757bcd55]
  4070b8:	and    ecx,ebx
  4070ba:	scas   al,BYTE PTR es:[edi]
  4070bb:	xor    dl,ah
  4070bd:	pop    esp
  4070be:	jno    0x407104
  4070c0:	ins    DWORD PTR es:[edi],dx
  4070c1:	mov    BYTE PTR [ebp+0x3e],dl
  4070c4:	fstp   QWORD PTR [ecx+eax*8-0x2e]
  4070c8:	out    0xb,eax
  4070ca:	sbb    DWORD PTR [ebp-0x32],ebp
  4070cd:	cwde   
  4070ce:	xchg   edi,eax
  4070cf:	mov    dh,BYTE PTR [eax]
  4070d1:	inc    esi
  4070d2:	fprem1 
  4070d4:	ret    0x73d8
  4070d7:	jle    0x4070f2
  4070d9:	fs fwait
  4070db:	and    eax,0x540570c3
  4070e0:	stos   DWORD PTR es:[edi],eax
  4070e1:	dec    ebx
  4070e2:	jb     0x407141
  4070e4:	fs ret 
  4070e6:	lds    esi,FWORD PTR [eax]
  4070e8:	mov    esi,0xfcf44934
  4070ed:	add    al,0xe0
  4070ef:	mov    esi,0xb6619a87
  4070f4:	jnp    0x4070bb
  4070f6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4070f7:	out    dx,eax
  4070f8:	out    dx,al
  4070f9:	out    0xd,al
  4070fb:	lock jns 0x4070c6
  4070fe:	jbe    0x40711c
  407100:	or     BYTE PTR gs:[esi],0x57
  407104:	or     esi,eax
  407106:	sbb    edx,DWORD PTR [edx-0x780ae99]
  40710c:	mov    al,0xb6
  40710e:	out    dx,eax
  40710f:	fdiv   QWORD PTR [eax+0x76]
  407112:	cmc    
  407113:	lock xchg esp,eax
  407115:	dec    esi
  407116:	es jmp 0x4070ac
  407119:	dec    esi
  40711a:	mov    ecx,0x7ef550b4
  40711f:	jle    0x407153
  407121:	xchg   BYTE PTR [ecx-0x240b3ba4],bl
  407127:	jmp    0xa48f4876
  40712c:	mov    edx,0x5289af56
  407131:	jae    0x407113
  407133:	xchg   edi,eax
  407134:	and    eax,0x2586c181
  407139:	adc    ch,bl
  40713b:	push   0x4de0b34
  407140:	pop    esi
  407141:	push   ecx
  407142:	add    al,0x98
  407144:	mov    edx,0x696e760
  407149:	and    eax,DWORD PTR ds:0x157e4082
  40714f:	push   eax
  407150:	lock rcr BYTE PTR [edi-0xc],cl
  407154:	xor    eax,0xa968bd5f
  407159:	aad    0x9c
  40715b:	into   
  40715c:	fidiv  DWORD PTR [ecx]
  40715e:	inc    edi
  40715f:	and    al,0x8b
  407161:	dec    edx
  407162:	mov    WORD PTR [ebx+0x25d78a68],cs
  407168:	xchg   edi,eax
  407169:	jmp    0xac4c477c
  40716e:	adc    DWORD PTR [edx],ebx
  407170:	in     eax,dx
  407171:	add    al,0xae
  407173:	push   edi
  407174:	popf   
  407175:	div    DWORD PTR [esi-0x13]
  407178:	adc    DWORD PTR [ebx],edi
  40717a:	scas   al,BYTE PTR es:[edi]
  40717b:	pop    es
  40717c:	xchg   BYTE PTR [edi],bl
  40717e:	iret   
  40717f:	jno    0x407181
  407181:	pop    esi
  407182:	pop    ebx
  407183:	xor    eax,0x52bb0a3e
  407188:	mov    edi,0xc445f15e
  40718d:	rcl    DWORD PTR [ecx],1
  40718f:	out    dx,eax
  407190:	dec    eax
  407191:	sti    
  407192:	gs (bad) 
  407194:	push   ecx
  407195:	jecxz  0x40718b
  407197:	add    edx,ebx
  407199:	inc    ecx
  40719a:	cld    
  40719b:	jnp    0x4071a7
  40719d:	loope  0x4071e1
  40719f:	mov    edi,0xf12d6ac6
  4071a4:	sbb    eax,DWORD PTR [ecx-0x4b960dff]
  4071aa:	daa    
  4071ab:	pop    ds
  4071ac:	sub    BYTE PTR [edx],dh
  4071ae:	scas   al,BYTE PTR es:[edi]
  4071af:	dec    ebp
  4071b0:	out    dx,eax
  4071b1:	fdivr  st,st(0)
  4071b3:	dec    ebp
  4071b4:	in     eax,0xb9
  4071b6:	jg     0x407152
  4071b8:	xor    BYTE PTR [eax-0x49],bh
  4071bb:	adc    esp,DWORD PTR [ebx+0xcd2cd68]
  4071c1:	pop    ebp
  4071c2:	call   0xa479:0x863c36bd
  4071c9:	mov    bl,0x15
  4071cb:	or     eax,0x9832ca54
  4071d0:	call   0x4f1a:0x33162260
  4071d7:	push   ecx
  4071d8:	inc    ecx
  4071d9:	mov    bh,BYTE PTR [esi+0x5e9917d2]
  4071df:	push   esi
  4071e0:	repnz sbb dl,BYTE PTR [ecx-0x3]
  4071e4:	mov    DWORD PTR [eax-0xc],edx
  4071e7:	out    0xa9,eax
  4071e9:	cmp    al,0xec
  4071eb:	jae    0x407236
  4071ed:	push   ss
  4071ee:	pop    edi
  4071ef:	imul   esp,DWORD PTR [ebx],0x5c
  4071f2:	out    dx,al
  4071f3:	adc    al,0xcb
  4071f5:	(bad)  
  4071f6:	ins    BYTE PTR es:[edi],dx
  4071f7:	leave  
  4071f8:	sub    eax,DWORD PTR [ecx]
  4071fa:	jbe    0x407198
  4071fc:	dec    eax
  4071fd:	paddusb mm4,QWORD PTR [ecx]
  407200:	sub    DWORD PTR [ebp+0x2839fe21],0xfffffff0
  407207:	leave  
  407208:	xor    BYTE PTR [esp+ebp*8],ch
  40720b:	lods   al,BYTE PTR ds:[esi]
  40720c:	pop    edx
  40720d:	out    0x63,al
  40720f:	in     eax,dx
  407210:	inc    edx
  407211:	stos   BYTE PTR es:[edi],al
  407212:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407213:	or     eax,0x3ada7d27
  407218:	push   es
  407219:	push   edi
  40721a:	cmp    ecx,DWORD PTR ds:0x11663d59
  407220:	pop    ecx
  407221:	imul   esp,DWORD PTR [ecx-0x58],0xffffffea
  407225:	jno    0x4072a3
  407227:	cmp    bh,BYTE PTR [edi]
  407229:	test   eax,0xa737d117
  40722e:	inc    ebp
  40722f:	push   cs
  407230:	in     al,dx
  407231:	dec    esp
  407232:	mov    ebx,0x2755cb29
  407237:	jp     0x4071c4
  407239:	cmp    esi,DWORD PTR [edx]
  40723b:	outs   dx,DWORD PTR ds:[esi]
  40723c:	popf   
  40723d:	int3   
  40723e:	pop    ebx
  40723f:	icebp  
  407240:	mov    eax,ds:0x172345a5
  407245:	and    eax,0x3f1d3a66
  40724a:	scas   eax,DWORD PTR es:[edi]
  40724b:	cwde   
  40724c:	stc    
  40724d:	leave  
  40724e:	in     al,0x39
  407250:	fcom   DWORD PTR [ebx+0x4bfcabd8]
  407256:	xor    BYTE PTR [ecx+0x72],bl
  407259:	lea    esi,[edx+0x2c]
  40725c:	adc    al,0x77
  40725e:	dec    ebx
  40725f:	sbb    ah,al
  407261:	inc    esi
  407262:	pop    edx
  407263:	sbb    DWORD PTR [ecx],0xffffffac
  407266:	pop    es
  407267:	jb     0x407269
  407269:	pop    esp
  40726a:	mov    cl,0xb2
  40726c:	inc    edx
  40726d:	int3   
  40726e:	or     DWORD PTR [edx-0x61],edi
  407271:	out    0xfa,al
  407273:	test   al,0x33
  407275:	jae    0x407232
  407277:	out    0x45,eax
  407279:	ins    BYTE PTR es:[edi],dx
  40727a:	inc    esi
  40727b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40727c:	stc    
  40727d:	adc    bl,bl
  40727f:	fbld   TBYTE PTR [edx-0x3eac770d]
  407285:	outs   dx,BYTE PTR ds:[esi]
  407286:	sbb    esi,DWORD PTR [ebp+0x50]
  407289:	mov    edx,0xe82978b6
  40728e:	leave  
  40728f:	xlat   BYTE PTR ds:[ebx]
  407290:	int3   
  407291:	mov    eax,0xc3369e32
  407296:	mov    bh,0x12
  407298:	xor    bh,BYTE PTR ss:[ecx-0x44]
  40729c:	out    0xae,al
  40729e:	jmp    0xeef8:0xbd12cc58
  4072a5:	fs call 0x7854:0xbb8cbd2
  4072ad:	test   eax,0xc06cefef
  4072b2:	rol    esi,0xca
  4072b5:	push   esp
  4072b6:	pop    esp
  4072b7:	idiv   ecx
  4072b9:	aaa    
  4072ba:	fs dec ebx
  4072bc:	adc    eax,0xb3344c00
  4072c1:	ficomp DWORD PTR [ebx-0x7f]
  4072c4:	inc    eax
  4072c5:	mov    WORD PTR [esi-0x2d993fad],ss
  4072cb:	outs   dx,DWORD PTR ds:[esi]
  4072cc:	sar    dl,1
  4072ce:	fcomp  QWORD PTR [edx]
  4072d0:	mov    ebp,0xcd3b1f26
  4072d5:	sub    al,0xf0
  4072d7:	mov    esp,0xf963e836
  4072dc:	lds    eax,FWORD PTR [ecx]
  4072de:	push   fs
  4072e0:	lock jl 0x4072fa
  4072e3:	(bad)
  4072e7:	push   esp
  4072e8:	or     cl,BYTE PTR [eax]
  4072ea:	mov    al,0xaf
  4072ec:	scas   eax,DWORD PTR es:[edi]
  4072ed:	imul   ecx,DWORD PTR [edi-0x4c200c57],0xffffffb7
  4072f4:	es dec ebp
  4072f6:	cmp    ah,BYTE PTR [eax]
  4072f8:	pop    ds
  4072f9:	sbb    BYTE PTR [eax-0x5c8744c2],dh
  4072ff:	mov    eax,0xfdf9218a
  407304:	fld    DWORD PTR [ebp-0x75675206]
  40730a:	sub    esp,DWORD PTR [ebx]
  40730c:	clc    
  40730d:	div    BYTE PTR [esi]
  40730f:	sbb    BYTE PTR [ebx+0x466b8180],ch
  407315:	jp     0x4072ae
  407317:	dec    ecx
  407318:	jl     0x407370
  40731a:	icebp  
  40731b:	xchg   ebx,eax
  40731c:	leave  
  40731d:	int    0x87
  40731f:	pop    es
  407320:	dec    eax
  407321:	mov    ecx,DWORD PTR [esi+0x54cf9d50]
  407327:	mov    bh,0x31
  407329:	enter  0x5e69,0xae
  40732d:	push   0x33c2a0af
  407332:	lahf   
  407333:	fsubr  DWORD PTR [ebp-0x700a6cf6]
  407339:	test   ecx,0x48fee600
  40733f:	or     ebp,DWORD PTR [ecx-0x1c]
  407342:	inc    bp
  407344:	stos   DWORD PTR es:[edi],eax
  407345:	jnp    0x40735b
  407347:	ror    BYTE PTR ds:0x5a45151b,0x9
  40734e:	arpl   cx,bp
  407350:	outs   dx,BYTE PTR ds:[esi]
  407351:	jle    0x407305
  407353:	into   
  407354:	inc    ebp
  407355:	xlat   BYTE PTR ds:[ebx]
  407356:	sub    ebp,edx
  407358:	pop    ebp
  407359:	popa   
  40735a:	mov    eax,0x21bb0825
  40735f:	jecxz  0x40734f
  407361:	xor    ebx,edx
  407363:	int3   
  407364:	loope  0x4073df
  407366:	addr16 dec eax
  407368:	adc    ch,BYTE PTR [ebx-0x6bfdf80]
  40736e:	adc    al,0x9c
  407370:	sar    BYTE PTR [eax],0x57
  407373:	pop    ss
  407374:	fild   QWORD PTR [bp+0x44]
  407378:	loop   0x407323
  40737a:	adc    DWORD PTR [edi],esp
  40737c:	mov    ch,0x7e
  40737e:	xchg   ecx,eax
  40737f:	fsub   QWORD PTR [ebx-0x51]
  407382:	cs xor eax,0xb657b2a9
  407388:	pop    ebp
  407389:	add    DWORD PTR [esi],edi
  40738b:	pop    ss
  40738c:	in     al,dx
  40738d:	or     DWORD PTR [ecx+esi*2-0x67],ebx
  407391:	adc    ch,bl
  407393:	imul   DWORD PTR [ebp-0x6b9a01b8]
  407399:	retf   0x8ba
  40739c:	sub    DWORD PTR [edx+0x44],0x67
  4073a0:	ss add eax,0x30fff21
  4073a6:	stos   DWORD PTR es:[edi],eax
  4073a7:	sbb    eax,DWORD PTR [esp+ebp*8-0x1f2b0133]
  4073ae:	mov    bh,0xc1
  4073b0:	fidiv  WORD PTR [edi+0x44d6cf6a]
  4073b6:	add    DWORD PTR [ebx],0xffffff83
  4073b9:	mov    ch,BYTE PTR [esi+0x3b]
  4073bc:	out    dx,eax
  4073bd:	jmp    0x6e3cbd57
  4073c2:	mov    WORD PTR [ebx-0x5],gs
  4073c5:	adc    eax,0x80c67b63
  4073ca:	and    al,0x4b
  4073cc:	xchg   DWORD PTR ds:0x3ca083f6,edi
  4073d2:	in     al,0xcf
  4073d4:	add    DWORD PTR [ebp-0x6fc1ab4b],edx
  4073da:	and    eax,0x46f982b8
  4073df:	push   ebp
  4073e0:	push   esp
  4073e1:	adc    DWORD PTR ds:0x17edad85,edi
  4073e7:	or     DWORD PTR [edi+edx*4-0x349d420a],ebx
  4073ee:	aaa    
  4073ef:	pop    es
  4073f0:	push   ebp
  4073f1:	out    dx,eax
  4073f2:	or     BYTE PTR [edi+0x291bb5b6],cl
  4073f8:	cmp    ebx,esi
  4073fa:	xor    al,0xb1
  4073fc:	jbe    0x40743d
  4073fe:	push   ebp
  4073ff:	adc    DWORD PTR [edi+ebx*1+0xf],edx
  407403:	aaa    
  407404:	xchg   DWORD PTR [edi-0x3f39cfe6],eax
  40740a:	popf   
  40740b:	jne    0x4073a0
  40740d:	fcom   QWORD PTR [edi+ecx*1-0x3]
  407411:	sub    dl,dh
  407413:	xchg   DWORD PTR [eax],edx
  407415:	jecxz  0x4073d6
  407417:	mov    ds:0x2e70205b,al
  40741c:	bound  esp,QWORD PTR [edi+0x61]
  40741f:	xchg   esp,eax
  407420:	daa    
  407421:	and    al,0x32
  407423:	lahf   
  407424:	xchg   esi,eax
  407425:	sbb    DWORD PTR [edi+0x5e],esp
  407428:	mov    dl,0x4b
  40742a:	(bad)  
  40742b:	xchg   edx,eax
  40742c:	fisttp WORD PTR [ecx-0x3181e1f4]
  407432:	mov    dh,0x75
  407434:	pop    ds
  407435:	out    dx,eax
  407436:	add    DWORD PTR [edi+0x5290b3fd],ebx
  40743c:	lea    esp,[edi+0x8b5cfb6]
  407442:	mov    ecx,0x840a49b9
  407447:	or     eax,0xcd649912
  40744c:	ss out 0x82,al
  40744f:	fst    DWORD PTR [edx]
  407451:	jl     0x4074c0
  407453:	jg     0x4074a2
  407455:	lods   eax,DWORD PTR ds:[esi]
  407456:	test   BYTE PTR [ebp+0x23],al
  407459:	sub    DWORD PTR [edi-0x18ace997],ecx
  40745f:	loope  0x407472
  407461:	inc    ecx
  407462:	or     DWORD PTR [esp+edi*1-0x476896b5],ebx
  407469:	or     edi,DWORD PTR [ebx+0x6e09fcb]
  40746f:	ret    0xcbf2
  407472:	shl    DWORD PTR [edi+0x75],cl
  407475:	mov    al,0xd6
  407477:	into   
  407478:	or     ch,0x70
  40747b:	mov    eax,0xe0ebeb
  407480:	pop    esi
  407481:	mov    esp,0x406d4553
  407486:	(bad)  
  407488:	mov    eax,0x42cd2a4a
  40748d:	adc    BYTE PTR [eax],ah
  40748f:	(bad)  
  407490:	mov    esi,0x1bfc3191
  407495:	stc    
  407496:	es or  eax,0xcd8d8dd8
  40749c:	adc    DWORD PTR [edx-0xf],esp
  40749f:	scas   eax,DWORD PTR es:[edi]
  4074a0:	mul    BYTE PTR [edi+0x1db08e5f]
  4074a6:	pop    eax
  4074a7:	cdq    
  4074a8:	lods   eax,DWORD PTR ds:[esi]
  4074a9:	repz jecxz 0x4074e0
  4074ac:	scas   al,BYTE PTR es:[edi]
  4074ad:	dec    ebp
  4074ae:	ret    
  4074af:	movs   BYTE PTR es:[edi],BYTE PTR gs:[esi]
  4074b1:	cli    
  4074b2:	sbb    cl,dh
  4074b4:	scas   eax,DWORD PTR es:[edi]
  4074b5:	ss out 0x6b,al
  4074b8:	dec    eax
  4074b9:	pop    esp
  4074ba:	shl    DWORD PTR [esi+0x12],1
  4074bd:	fsub   DWORD PTR [ebp-0x629ce4b5]
  4074c3:	in     al,0xb7
  4074c5:	mov    ds:0xcf58a94b,eax
  4074ca:	add    eax,0xef859a97
  4074cf:	cs (bad) 
  4074d1:	sub    DWORD PTR [eax],0x58
  4074d4:	jb     0x40750e
  4074d6:	js     0x407480
  4074d8:	cmp    DWORD PTR [esi+0x75],edx
  4074db:	xchg   ebx,eax
  4074dc:	push   ss
  4074dd:	cmp    BYTE PTR [edx-0x13],0xba
  4074e1:	mov    ds:0xd4a17df2,al
  4074e6:	xlat   BYTE PTR ds:[ebx]
  4074e7:	xchg   ebx,eax
  4074e8:	push   es
  4074e9:	dec    eax
  4074ea:	mov    ecx,0xefbc4f84
  4074ef:	das    
  4074f0:	push   0xf2deae27
  4074f5:	lds    eax,FWORD PTR [ebx+0x4c607ecf]
  4074fb:	loopne 0x4074c2
  4074fd:	adc    cl,BYTE PTR [edi]
  4074ff:	push   ds
  407500:	push   cs
  407501:	push   esi
  407502:	loopne 0x40754a
  407504:	mov    eax,0x40b204cd
  407509:	cmp    eax,0x6fc31fd4
  40750e:	and    DWORD PTR [ebp-0x107ed9e3],esp
  407514:	ds mov edi,0x827fa4b3
  40751a:	mov    edi,0xaed529d
  407520:	sti    
  407521:	jnp    0x4074c7
  407523:	pop    ebx
  407524:	test   BYTE PTR [ecx+0x56ce14e1],al
  40752a:	test   al,0xaf
  40752c:	cmp    ah,BYTE PTR [esi+0x3a171056]
  407532:	into   
  407533:	mov    edx,DWORD PTR ds:0x84569b67
  407539:	mov    dh,0xe7
  40753b:	sar    eax,cl
  40753d:	sbb    ebp,DWORD PTR [esi]
  40753f:	cwde   
  407540:	retf   0x4c24
  407543:	in     eax,dx
  407544:	xor    esp,DWORD PTR [ecx-0x78e7fab3]
  40754a:	fnstcw WORD PTR [edi]
  40754c:	fist   DWORD PTR [edi+0x1c26e189]
  407552:	sbb    al,0xdb
  407554:	leave  
  407555:	and    ebp,esi
  407557:	mov    ecx,0xe09bb6d1
  40755c:	cmp    bh,dl
  40755e:	mov    ecx,0xdac8bd9c
  407563:	mov    eax,ds:0xc9ac4a54
  407568:	mov    dh,0x36
  40756a:	addr16 mov ds:0x822,al
  40756e:	mov    WORD PTR [edi+0x4b],fs
  407571:	imul   eax,DWORD PTR [edi+0x41],0x6c
  407575:	jbe    0x4075d4
  407577:	mov    ah,0xd1
  407579:	ret    
  40757a:	xchg   BYTE PTR [ebp+edi*2-0x65429cb9],bl
  407581:	jle    0x40755f
  407583:	or     eax,0xc79c34ff
  407588:	arpl   WORD PTR [ebp+ecx*1-0x4f],bp
  40758c:	mov    ebp,0xa720672f
  407591:	loop   0x407611
  407593:	inc    edi
  407594:	int3   
  407595:	fmul   QWORD PTR [edx]
  407597:	sbb    al,0xc6
  407599:	popa   
  40759a:	mov    ebx,0xcd6bd7a8
  40759f:	and    bh,ah
  4075a1:	sub    bl,bh
  4075a3:	push   ecx
  4075a4:	lods   eax,DWORD PTR ds:[esi]
  4075a5:	ror    BYTE PTR [edx+0x3f2fef62],0x13
  4075ac:	bound  edi,QWORD PTR [edx]
  4075ae:	outs   dx,DWORD PTR ds:[esi]
  4075af:	in     al,dx
  4075b0:	lods   eax,DWORD PTR ds:[esi]
  4075b1:	(bad)  
  4075b2:	ja     0x4075e5
  4075b4:	call   0x2205:0xaabe536c
  4075bb:	pop    edx
  4075bc:	and    al,BYTE PTR [eax]
  4075be:	ins    BYTE PTR es:[edi],dx
  4075bf:	xor    cl,dh
  4075c1:	(bad)  
  4075c2:	sub    al,0x47
  4075c4:	mov    ebp,0xd9c7c92d
  4075c9:	sbb    edx,DWORD PTR [edx]
  4075cb:	or     ch,BYTE PTR [esi-0x61a15ba4]
  4075d1:	mov    al,ds:0x92e6cc0
  4075d6:	mov    DWORD PTR [esi-0x300caef5],ecx
  4075dc:	pop    ss
  4075dd:	repnz dec edx
  4075df:	dec    esp
  4075e0:	adc    esi,DWORD PTR [esi-0x55]
  4075e3:	push   ds
  4075e4:	pop    ecx
  4075e5:	out    0x22,al
  4075e7:	lods   eax,DWORD PTR ds:[esi]
  4075e8:	mov    bh,0x84
  4075ea:	es mov ebp,?
  4075ed:	int3   
  4075ee:	loope  0x407664
  4075f0:	xchg   ebx,eax
  4075f1:	sub    al,0x66
  4075f3:	inc    ebx
  4075f4:	sbb    DWORD PTR ds:0x4cffd463,edi
  4075fa:	and    ecx,DWORD PTR [ebp+0x420afee]
  407600:	sub    esp,edx
  407602:	mov    ds:0x74f994cb,eax
  407607:	mov    ds:0x32a0321,al
  40760c:	(bad)  
  40760d:	repz clc 
  40760f:	fwait
  407610:	pop    ds
  407611:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407612:	stos   BYTE PTR es:[edi],al
  407613:	xor    al,0xfd
  407615:	pop    edi
  407616:	xor    eax,0x4f555529
  40761b:	dec    ecx
  40761c:	aaa    
  40761d:	popa   
  40761e:	sbb    eax,0xbf604cf8
  407623:	sub    DWORD PTR [ebp-0x1eeb986c],ecx
  407629:	mov    cl,0xe2
  40762b:	fidiv  DWORD PTR [edi]
  40762d:	sbb    al,0x22
  40762f:	(bad)  
  407630:	call   0xe3:0xef07ef5a
  407637:	pusha  
  407638:	add    BYTE PTR [esi],dh
  40763a:	or     ah,ch
  40763c:	imul   edi,edi,0x5a6efe39
  407642:	bt     DWORD PTR [ebx-0x5095878d],ebx
  407649:	xchg   ebx,eax
  40764a:	adc    bl,dl
  40764c:	sub    esi,DWORD PTR ss:[edi]
  40764f:	xchg   ecx,eax
  407650:	adc    al,0xcb
  407652:	lahf   
  407653:	push   ebp
  407654:	jno    0x40766d
  407656:	push   cs
  407657:	or     ebp,ebx
  407659:	jbe    0x4076a6
  40765b:	in     eax,dx
  40765c:	lods   al,BYTE PTR ds:[esi]
  40765d:	iret   
  40765e:	add    esi,DWORD PTR [esi]
  407660:	mov    BYTE PTR ds:0x52d52e7,bl
  407666:	retf   0x2173
  407669:	je     0x40763d
  40766b:	stos   BYTE PTR es:[edi],al
  40766c:	gs push ecx
  40766e:	inc    esp
  40766f:	rcl    BYTE PTR [edx],0x5f
  407672:	scas   al,BYTE PTR es:[edi]
  407673:	or     eax,0x2823eea0
  407678:	mov    al,ss:0x4e282709
  40767e:	xchg   edx,eax
  40767f:	call   0x4f09151c
  407684:	lea    edi,[esi+0x2d753636]
  40768a:	stc    
  40768b:	rcr    DWORD PTR [edx],1
  40768d:	scas   eax,DWORD PTR es:[edi]
  40768e:	pop    ds
  40768f:	in     al,dx
  407690:	pop    eax
  407691:	aad    0xb5
  407693:	pop    esp
  407694:	dec    ebp
  407695:	loopne 0x40769d
  407697:	add    eax,0x1c1bcbe4
  40769c:	xor    al,0x99
  40769e:	push   eax
  40769f:	xchg   ecx,eax
  4076a0:	(bad)  
  4076a2:	ins    DWORD PTR es:[edi],dx
  4076a3:	xor    eax,DWORD PTR [ebp+edi*1+0x6a70e43d]
  4076aa:	jmp    0x40770e
  4076ac:	adc    eax,0x744eef58
  4076b1:	je     0x40766c
  4076b3:	call   0x73e2:0xc5bde1e5
  4076ba:	jmp    0x407714
  4076bc:	nop
  4076bd:	xchg   ebx,eax
  4076be:	pop    esi
  4076bf:	shl    DWORD PTR [ebp-0x4a1a3868],1
  4076c5:	mov    eax,0x859cbdfb
  4076ca:	daa    
  4076cb:	xlat   BYTE PTR ds:[ebx]
  4076cc:	push   cs
  4076cd:	xchg   esp,eax
  4076ce:	jne    0x407729
  4076d0:	loop   0x4076be
  4076d2:	mov    DWORD PTR [edi-0x71],edx
  4076d5:	adc    BYTE PTR [edi+esi*8],0xaf
  4076d9:	adc    DWORD PTR [bp+si+0x5ec8],ecx
  4076de:	faddp  st(3),st
  4076e0:	sbb    BYTE PTR [ebx+0x3032994d],al
  4076e6:	adc    bl,bh
  4076e8:	mov    bh,0xcf
  4076ea:	fimul  DWORD PTR [eax-0x23]
  4076ed:	mov    esp,0x51f22d4a
  4076f2:	push   0x2fcd0529
  4076f7:	or     esp,DWORD PTR [ecx+0x5460a803]
  4076fd:	(bad)  
  4076fe:	(bad)  [edi+0x32af1540]
  407704:	stos   DWORD PTR es:[edi],eax
  407705:	jbe    0x40772d
  407707:	xor    al,0xc0
  407709:	sbb    ah,BYTE PTR [edi+0x51]
  40770c:	adc    ecx,DWORD PTR [ebx]
  40770e:	call   0x59ff:0xd56132bb
  407715:	or     edi,DWORD PTR [eax-0x3632434d]
  40771b:	mov    dh,cl
  40771d:	or     edx,ebx
  40771f:	fnstsw ax
  407721:	xchg   al,dl
  407723:	add    ecx,ecx
  407725:	pop    edi
  407726:	add    bh,BYTE PTR [eax]
  407728:	xor    bh,bl
  40772a:	shl    al,0x74
  40772d:	jp     0x4077aa
  40772f:	fild   DWORD PTR [esp+edi*4-0x5962e36e]
  407736:	int3   
  407737:	jl     0x407731
  407739:	xchg   ebp,eax
  40773a:	ja     0x407743
  40773c:	inc    edx
  40773d:	push   esp
  40773e:	xor    al,0x70
  407740:	jo     0x40775e
  407742:	and    eax,0xb5ebceac
  407747:	adc    ebx,0xffffffd5
  40774a:	sahf   
  40774b:	mov    ?,WORD PTR [edi-0x26adf6a9]
  407751:	or     eax,edi
  407753:	xchg   ebp,eax
  407754:	stc    
  407755:	sub    BYTE PTR [edx+ebp*8-0x1e],cl
  407759:	jp     0x4077ab
  40775b:	dec    esp
  40775c:	jecxz  0x40775e
  40775e:	push   es
  40775f:	add    DWORD PTR [edx-0x482e6776],ebp
  407765:	pop    eax
  407766:	add    eax,0xddcc995f
  40776b:	sti    
  40776c:	inc    ebx
  40776d:	mov    BYTE PTR [ecx-0x5],dl
  407770:	mov    esi,0x148cacbe
  407775:	dec    edi
  407776:	xchg   ecx,eax
  407777:	pop    esp
  407778:	and    eax,0x381ae17f
  40777d:	dec    eax
  40777e:	fld    DWORD PTR [edx-0x48]
  407781:	clc    
  407782:	pop    edx
  407783:	repz scas eax,DWORD PTR es:[edi]
  407785:	scas   al,BYTE PTR es:[edi]
  407786:	dec    ebx
  407787:	push   esp
  407788:	popf   
  407789:	cmp    al,0x25
  40778b:	aam    0x26
  40778d:	(bad)  
  40778e:	fstp   DWORD PTR [ecx+0x2e]
  407791:	test   eax,0x38be39e8
  407796:	jno    0x4077f3
  407798:	pop    ecx
  407799:	js     0x4077e2
  40779b:	xor    al,0x5e
  40779d:	lea    edx,[esi]
  40779f:	aam    0x44
  4077a1:	xor    al,0xcd
  4077a3:	loop   0x4077cd
  4077a5:	xchg   BYTE PTR [edi+0x42],dl
  4077a8:	inc    edx
  4077a9:	cs push ebx
  4077ab:	add    DWORD PTR [esi+0x200114c0],eax
  4077b1:	push   eax
  4077b2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4077b3:	bound  ecx,QWORD PTR [edi]
  4077b5:	mov    DWORD PTR [esi-0x467df70b],esp
  4077bb:	loopne 0x407751
  4077bd:	dec    ebp
  4077be:	pop    esp
  4077bf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4077c0:	mov    dh,ah
  4077c2:	mov    esi,edx
  4077c4:	xchg   esi,eax
  4077c5:	ins    DWORD PTR es:[edi],dx
  4077c6:	leave  
  4077c7:	cmp    eax,0xaeaaed6a
  4077cc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4077cd:	push   ecx
  4077ce:	mov    dh,0xcc
  4077d0:	mov    eax,DWORD PTR [esp+ebx*4]
  4077d3:	fist   DWORD PTR [eax]
  4077d5:	bswap  edx
  4077d7:	add    BYTE PTR [edx+0x1d9b07e0],al
  4077dd:	ret    0xf480
  4077e0:	pusha  
  4077e1:	mov    ch,BYTE PTR [edi+0x142cb30c]
  4077e7:	sub    DWORD PTR ds:0x331c2e4e,edi
  4077ed:	sti    
  4077ee:	inc    ecx
  4077ef:	ss out dx,eax
  4077f1:	aas    
  4077f2:	jg     0x40781a
  4077f4:	xchg   DWORD PTR [eax],ebx
  4077f6:	inc    eax
  4077f7:	fbld   TBYTE PTR [ecx+esi*2-0x241ae6f]
  4077fe:	xor    BYTE PTR [edx-0x12],al
  407801:	scas   eax,DWORD PTR es:[edi]
  407802:	lods   al,BYTE PTR ds:[esi]
  407803:	in     al,0xfd
  407805:	mov    edx,0xc4f3b391
  40780a:	popa   
  40780b:	(bad)  
  40780c:	pop    esp
  40780d:	mov    esp,0x335410cf
  407812:	push   es
  407813:	mov    ?,WORD PTR [edx-0x28d85eae]
  407819:	add    BYTE PTR [eax-0x1887eb73],al
  40781f:	imul   esp,DWORD PTR [ebx-0x24],0xffffff9d
  407823:	cmp    DWORD PTR ds:0xd0aa6baf,edx
  407829:	mov    dh,0xb9
  40782b:	jmp    0xebad2020
  407830:	sbb    eax,0x56386204
  407835:	outs   dx,BYTE PTR ds:[esi]
  407836:	pusha  
  407837:	push   ds
  407838:	dec    ecx
  407839:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40783a:	add    DWORD PTR [ecx-0x75],edi
  40783d:	lods   eax,DWORD PTR ds:[esi]
  40783e:	ficom  WORD PTR [ebp*1+0x45df9225]
  407845:	sahf   
  407846:	adc    al,0x6c
  407848:	mov    ecx,0x4b83272b
  40784d:	jmp    0x94aef90e
  407852:	fs into 
  407854:	ins    DWORD PTR es:[edi],dx
  407855:	pop    ebp
  407856:	jmp    0xd86e:0x8e5733e3
  40785d:	fiadd  DWORD PTR [ebx+ebp*4+0x19bf5053]
  407864:	sub    al,0x38
  407866:	or     eax,0x5fbace10
  40786b:	aas    
  40786c:	fidiv  WORD PTR [edi]
  40786e:	or     DWORD PTR [ebx-0x49],0xffffffd5
  407872:	push   esi
  407873:	(bad)  
  407874:	mov    esp,0x5da3ea93
  407879:	mov    cl,0x83
  40787b:	jge    0x40782c
  40787d:	shl    dl,cl
  40787f:	jecxz  0x40783a
  407881:	mov    esi,0x959a908f
  407886:	adc    edx,DWORD PTR [edi]
  407888:	jmp    0xfb3f:0xa939d117
  40788f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407890:	mov    BYTE PTR [eax],cl
  407892:	(bad)  [ebp-0x4494a1a6]
  407898:	(bad)
  40789c:	jo     0x4078a9
  40789e:	jle    0x407886
  4078a0:	in     al,0xe7
  4078a2:	idiv   DWORD PTR [ebx]
  4078a4:	das    
  4078a5:	in     eax,0x73
  4078a7:	sbb    eax,0xb24404b
  4078ac:	daa    
  4078ad:	dec    edi
  4078af:	les    edi,FWORD PTR ds:0x8a8c0099
  4078b5:	mov    dl,0x3a
  4078b7:	xchg   edi,eax
  4078b8:	or     eax,0x8cf342af
  4078bd:	leave  
  4078be:	and    DWORD PTR [edx+edi*1],esi
  4078c1:	popf   
  4078c2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4078c3:	cs sbb al,0x15
  4078c6:	xchg   edi,eax
  4078c7:	add    BYTE PTR [esi+0x5053435f],0xd9
  4078ce:	int3   
  4078cf:	adc    ebx,eax
  4078d1:	retf   0x8246
  4078d4:	xchg   esi,eax
  4078d5:	mov    ss,WORD PTR [eax]
  4078d7:	and    bl,BYTE PTR [eax]
  4078d9:	ins    BYTE PTR es:[edi],dx
  4078da:	push   0x3e
  4078dc:	std    
  4078dd:	cmc    
  4078de:	push   0x185beffb
  4078e3:	xchg   edx,eax
  4078e4:	xchg   edi,eax
  4078e5:	push   ds
  4078e6:	or     bl,dh
  4078e8:	xlat   BYTE PTR ds:[ebx]
  4078e9:	loope  0x4078b5
  4078eb:	cwde   
  4078ec:	fmul   QWORD PTR [ebp+0x41]
  4078ef:	sub    BYTE PTR [eax+ebp*8],0x9b
  4078f3:	xor    eax,0x72e14cea
  4078f8:	aad    0x99
  4078fa:	xchg   ebx,eax
  4078fb:	retf   0x2b0e
  4078fe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4078ff:	adc    eax,0x7a9ead1c
  407904:	test   eax,0x3b1e07dc
  407909:	xchg   esp,eax
  40790a:	stos   BYTE PTR es:[edi],al
  40790b:	mov    ecx,0x8522bbb8
  407910:	sbb    al,0x94
  407912:	mov    eax,ds:0x8356907a
  407917:	mov    eax,ds:0x6ff06cfe
  40791c:	rcr    BYTE PTR [ebp-0x26],1
  40791f:	jnp    0x407996
  407921:	xor    al,bl
  407923:	aad    0x2f
  407925:	push   ds
  407926:	daa    
  407927:	jne    0x4078b5
  407929:	rcr    BYTE PTR ss:[esi+ebp*2],1
  40792d:	int    0xf2
  40792f:	je     0x40796e
  407931:	cmp    ecx,DWORD PTR [esi+0x5]
  407934:	rcl    DWORD PTR [ecx+ebp*1],cl
  407937:	dec    ebp
  407938:	inc    ebp
  407939:	jge    0x40799a
  40793b:	dec    esi
  40793c:	test   al,0xb2
  40793e:	mov    ebp,0x719e5c22
  407943:	xchg   esp,eax
  407944:	push   eax
  407945:	fsub   st,st(1)
  407947:	adc    BYTE PTR [edi-0x45],cl
  40794a:	dec    ecx
  40794b:	shl    DWORD PTR [edi-0x71],0xcc
  40794f:	jle    0x4079c8
  407951:	daa    
  407952:	ds lahf 
  407954:	popa   
  407955:	mov    eax,0x303a74
  40795a:	jmp    0x4078e0
  40795c:	popa   
  40795d:	push   ebp
  40795e:	push   es
  40795f:	inc    ecx
  407960:	test   BYTE PTR [ecx-0x6d033546],dl
  407966:	sbb    al,0x19
  407968:	cld    
  407969:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40796a:	pop    ebx
  40796b:	cmp    al,0x38
  40796d:	leave  
  40796e:	clc    
  40796f:	dec    eax
  407970:	push   esi
  407971:	mov    esi,0xe8d6b97a
  407976:	stos   BYTE PTR es:[edi],al
  407977:	aad    0x83
  407979:	jo     0x4079c4
  40797b:	out    dx,eax
  40797c:	mov    ds,WORD PTR [ebx]
  40797e:	ret    
  40797f:	icebp  
  407980:	pop    ss
  407981:	xchg   ebp,eax
  407982:	xor    DWORD PTR [ebx+ebp*8-0x57],0x50a0bc6e
  40798a:	lea    ecx,[ebx+0x32]
  40798d:	aam    0x13
  40798f:	xor    eax,0x4ab7f899
  407994:	stos   BYTE PTR es:[edi],al
  407995:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407996:	mov    ebx,DWORD PTR [ebx+eiz*4-0x6c]
  40799a:	xchg   ch,al
  40799c:	ss sub eax,0xc792f733
  4079a2:	dec    ebx
  4079a3:	shl    BYTE PTR [edi+0x66ecc740],cl
  4079a9:	loop   0x40795c
  4079ab:	jmp    0x4079ee
  4079ad:	cld    
  4079ae:	fdiv   st(3),st
  4079b0:	rol    BYTE PTR [ebp+0x57e69eb7],cl
  4079b6:	dec    eax
  4079b7:	mov    DWORD PTR [ecx+0x550b57b8],ecx
  4079bd:	out    0xa9,eax
  4079bf:	and    DWORD PTR [eax],0xffffffa1
  4079c2:	mov    DWORD PTR [edx],ebp
  4079c4:	jne    0x407a1f
  4079c6:	dec    edx
  4079c7:	inc    esi
  4079c8:	fdivr  DWORD PTR [esi+0x23]
  4079cb:	add    cl,bl
  4079cd:	pop    es
  4079ce:	add    eax,0xbdc7e0a5
  4079d3:	hlt    
  4079d4:	fbstp  TBYTE PTR [eax+ecx*1]
  4079d7:	push   ss
  4079d8:	out    0x11,al
  4079da:	mov    WORD PTR [ebx-0x53],es
  4079dd:	sub    al,0xd2
  4079df:	je     0x4079cb
  4079e1:	or     BYTE PTR [ecx-0x7da9b647],dh
  4079e7:	jge    0x40796e
  4079e9:	and    eax,0xbb58a6c
  4079ee:	add    al,bh
  4079f0:	xor    eax,0x64e9d11
  4079f5:	repz mov ebp,es
  4079f8:	ja     0x407a05
  4079fa:	loope  0x407a22
  4079fc:	out    0xbe,eax
  4079fe:	dec    ecx
  4079ff:	icebp  
  407a00:	pushf  
  407a01:	sub    DWORD PTR [ecx-0x58],ebp
  407a04:	lods   eax,DWORD PTR ds:[esi]
  407a05:	std    
  407a06:	leave  
  407a07:	cdq    
  407a08:	xor    edx,DWORD PTR [edx*2-0x374060c3]
  407a0f:	jb     0x407a0f
  407a11:	push   0xf51c2d87
  407a16:	cld    
  407a17:	inc    ebp
  407a18:	adc    al,0xdd
  407a1a:	or     dl,0xf5
  407a1d:	mov    ah,0x63
  407a1f:	nop    DWORD PTR [ebx-0x5c086712]
  407a26:	xchg   ebx,eax
  407a27:	push   esi
  407a28:	out    dx,eax
  407a29:	test   al,0x8d
  407a2b:	mov    eax,ds:0x55e0adb9
  407a30:	ss sbb eax,0xb3d7d3c4
  407a36:	jp     0x407a48
  407a38:	push   esi
  407a39:	mov    ebp,0xb4c88cf
  407a3e:	lds    edx,FWORD PTR [esi]
  407a40:	adc    eax,0x1ec40433
  407a45:	js     0x407a02
  407a47:	jnp    0x4079d9
  407a49:	test   DWORD PTR [ecx],esi
  407a4b:	inc    edx
  407a4c:	retf   0xfb17
  407a4f:	or     BYTE PTR [esi+0x7],0xf3
  407a53:	mov    ecx,0xcdfb709b
  407a58:	jmp    0xa0694125
  407a5d:	xchg   esi,eax
  407a5e:	data16 (bad) 
  407a60:	mov    ebp,0x25c11470
  407a65:	test   DWORD PTR [esi],ebx
  407a67:	dec    edi
  407a68:	mov    eax,ds:0xd3d20b0c
  407a6d:	xchg   ecx,eax
  407a6e:	mov    ds:0x721207d6,al
  407a73:	dec    DWORD PTR ds:0xb3fe6f83
  407a79:	inc    ecx
  407a7a:	jmp    0x4ebd:0xbfa10f4d
  407a81:	inc    ebx
  407a82:	push   es
  407a83:	jmp    0x4a3d41b3
  407a88:	pop    ebp
  407a89:	in     al,0xc4
  407a8b:	add    ecx,edx
  407a8d:	fucomi st,st(2)
  407a8f:	mov    eax,0x62dae94e
  407a94:	scas   al,BYTE PTR es:[edi]
  407a95:	mov    WORD PTR [esi+ecx*4],?
  407a98:	mov    esp,0xcfaf5c24
  407a9d:	hlt    
  407a9e:	push   ss
  407a9f:	in     eax,0x41
  407aa1:	stos   BYTE PTR es:[edi],al
  407aa2:	cmovbe ebx,ecx
  407aa5:	cs retf 0xc3a0
  407aa9:	and    BYTE PTR ds:0xd694aa33,al
  407aaf:	xchg   edx,eax
  407ab0:	xchg   esp,eax
  407ab1:	out    0x93,al
  407ab3:	and    DWORD PTR [edi+0x6b],esi
  407ab6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407ab7:	inc    edi
  407ab8:	mov    esp,0x66a16aef
  407abd:	pop    edi
  407abe:	add    al,0x38
  407ac0:	mov    ecx,0x56b9a0a3
  407ac5:	outs   dx,DWORD PTR ds:[esi]
  407ac6:	mov    ebx,ebp
  407ac8:	cli    
  407ac9:	cmp    BYTE PTR [ecx],ah
  407acb:	js     0x407a4d
  407acd:	aaa    
  407ace:	sbb    BYTE PTR [eax+0x14],bl
  407ad1:	pop    esi
  407ad2:	pop    ss
  407ad3:	pop    ebp
  407ad4:	mov    esi,0xebd802b8
  407ad9:	in     eax,0x5a
  407adb:	push   eax
  407adc:	xchg   esp,eax
  407add:	mov    eax,0x250455d3
  407ae2:	sbb    eax,0xf55d4a7e
  407ae7:	jl     0x407afa
  407ae9:	xrelease xchg DWORD PTR ds:0x513825d3,eax
  407af0:	pop    ds
  407af1:	sub    BYTE PTR [ebx],0xc4
  407af4:	inc    esp
  407af5:	daa    
  407af6:	ret    0xce77
  407af9:	or     eax,0x9b27d6ee
  407afe:	add    al,0xa5
  407b00:	lahf   
  407b01:	sbb    DWORD PTR [ebx+0x18b9a36],eax
  407b07:	mov    al,BYTE PTR [esi]
  407b09:	mov    al,ds:0xc86d0b31
  407b0e:	pop    ss
  407b0f:	fbld   TBYTE PTR [ecx+0x53bdf805]
  407b15:	xchg   edx,eax
  407b16:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407b17:	shl    edi,1
  407b19:	or     ebp,DWORD PTR [ebp+0x1d600680]
  407b1f:	mov    bl,0xdd
  407b21:	inc    eax
  407b22:	pop    ecx
  407b23:	(bad)  
  407b24:	call   0xa9cd:0xea5040a9
  407b2b:	push   ds
  407b2c:	mov    al,0xaa
  407b2e:	dec    esp
  407b2f:	in     eax,0x2c
  407b31:	adc    esi,DWORD PTR [edi]
  407b33:	mov    bl,0x3b
  407b35:	fst    DWORD PTR [edi-0x35790482]
  407b3b:	mov    ds:0xf98a0bf7,eax
  407b40:	pop    ebp
  407b41:	mov    esi,0xe7387f8c
  407b46:	repnz aad 0xe8
  407b49:	push   0x8842e36b
  407b4e:	imul   eax,ebx,0x1b050760
  407b54:	dec    ecx
  407b55:	or     BYTE PTR [edi+esi*8],bl
  407b58:	fs sti 
  407b5a:	jmp    0x4ac4:0x7e9738df
  407b61:	inc    esi
  407b62:	test   DWORD PTR [edx],eax
  407b64:	clc    
  407b65:	call   0x7752:0xa4179bf9
  407b6c:	adc    eax,0x2e88e16b
  407b71:	sub    edx,ebp
  407b73:	add    DWORD PTR [ecx+ebx*4-0x6d],esp
  407b77:	int    0x62
  407b79:	cmc    
  407b7a:	leave  
  407b7b:	cli    
  407b7c:	and    esp,DWORD PTR [edx]
  407b7e:	jp     0x407b73
  407b80:	push   ecx
  407b81:	dec    ebp
  407b82:	xchg   DWORD PTR [ecx+0x3ee4409f],edi
  407b88:	mov    dh,0x24
  407b8a:	ja     0x407b60
  407b8c:	out    0xc7,eax
  407b8e:	mov    WORD PTR [edx],?
  407b90:	or     al,dl
  407b92:	push   edx
  407b93:	sub    edx,ecx
  407b95:	stc    
  407b96:	call   0xc82537da
  407b9b:	div    dh
  407b9d:	cmp    BYTE PTR [esi-0x27],dh
  407ba0:	mov    bh,0x73
  407ba2:	jmp    0x407bff
  407ba4:	fisttp QWORD PTR [esi]
  407ba6:	or     BYTE PTR [eax+edi*8],bl
  407ba9:	adc    edi,ebp
  407bab:	test   al,0x3f
  407bad:	push   0x8a6dbc82
  407bb2:	gs sti 
  407bb4:	pop    esi
  407bb5:	mov    dh,0xa9
  407bb7:	dec    edi
  407bb8:	mov    ebp,0xcd5fca39
  407bbd:	(bad)  
  407bbe:	(bad)  [eax-0x70]
  407bc1:	or     dh,bl
  407bc3:	adc    edi,edx
  407bc5:	sbb    dh,ch
  407bc7:	neg    BYTE PTR [esi+0x7e2046bf]
  407bcd:	mov    esi,0x5c8a6969
  407bd2:	pop    ebp
  407bd3:	jp     0x407b97
  407bd5:	mov    ebp,0x1848d2e7
  407bda:	lods   al,BYTE PTR ds:[esi]
  407bdb:	push   ebx
  407bdc:	aaa    
  407bdd:	mov    ch,0x66
  407bdf:	cmc    
  407be0:	rcl    DWORD PTR [ebx-0x70],cl
  407be3:	mov    bh,0x41
  407be5:	loope  0x407b74
  407be7:	lea    ebx,[edi+0x4b5cbd77]
  407bed:	mov    ebx,0x6cacaed0
  407bf2:	jb     0x407b98
  407bf4:	jecxz  0x407b96
  407bf6:	je     0x407bc0
  407bf8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407bf9:	sub    esi,0x484fe248
  407bff:	or     cl,al
  407c01:	aam    0xbb
  407c03:	popf   
  407c04:	xchg   edi,eax
  407c05:	xchg   edi,eax
  407c06:	lds    edi,FWORD PTR [ebp-0x4e]
  407c09:	out    dx,eax
  407c0a:	in     al,0x3b
  407c0c:	ds mov al,0xcc
  407c0f:	xchg   edi,eax
  407c10:	mov    bh,0x49
  407c12:	in     eax,dx
  407c13:	sub    BYTE PTR [ebx+0x673e5fc8],dl
  407c19:	sbb    al,0x12
  407c1b:	inc    ecx
  407c1c:	sbb    ebp,DWORD PTR [esi-0x53]
  407c1f:	cld    
  407c20:	ret    0xf67d
  407c23:	jp     0x407c7c
  407c25:	rcr    DWORD PTR [ebx],1
  407c27:	mov    bh,0x16
  407c29:	ret    
  407c2a:	lahf   
  407c2b:	cmp    esi,DWORD PTR [ebp+0x5e857cfb]
  407c31:	sar    DWORD PTR [ebx-0x38b25c04],0x15
  407c38:	inc    ecx
  407c39:	dec    edx
  407c3a:	fld    DWORD PTR [edx-0x6b9b2d25]
  407c40:	sar    DWORD PTR [eax-0x1b59ae95],1
  407c46:	retf   0x76c4
  407c49:	and    BYTE PTR [eax+0x5c8f0e66],dl
  407c4f:	aad    0x9a
  407c51:	sbb    BYTE PTR [ecx],0x7d
  407c54:	mov    ebp,0xc7562df1
  407c59:	mov    ah,0x54
  407c5b:	cs jno 0x407bf1
  407c5e:	call   0x6fc1:0x22b4424f
  407c65:	inc    ebx
  407c66:	xor    DWORD PTR [edx+0x75106fde],0xb151320b
  407c70:	xchg   esi,eax
  407c71:	or     eax,DWORD PTR [ecx-0x8]
  407c74:	and    al,0x4e
  407c76:	push   ebx
  407c77:	cmp    eax,0x16beefcb
  407c7c:	push   edx
  407c7d:	imul   ebx,DWORD PTR [edx],0xffffffc0
  407c80:	shr    DWORD PTR [edi],1
  407c82:	loopne 0x407c08
  407c84:	imul   eax,edx,0x9e620656
  407c8a:	aad    0x7d
  407c8c:	xor    al,0xe0
  407c8e:	shl    DWORD PTR [edi+0x11],cl
  407c91:	retf   0x78e7
  407c94:	dec    eax
  407c95:	fwait
  407c96:	xor    eax,0x980f7566
  407c9b:	mov    edi,0xb09cba11
  407ca0:	fidiv  WORD PTR [ebx]
  407ca2:	inc    edx
  407ca3:	xor    bl,BYTE PTR [esi+0x29]
  407ca6:	add    BYTE PTR [esi],0x7
  407ca9:	push   0xffffffb2
  407cab:	lahf   
  407cac:	fucomi st,st(0)
  407cae:	es pop es
  407cb0:	rol    BYTE PTR [edx-0x69],0x9f
  407cb4:	arpl   bx,dx
  407cb6:	cmp    DWORD PTR [edx+0x3da3d80e],0x2
  407cbd:	(bad)  
  407cbe:	dec    edx
  407cbf:	sub    cl,BYTE PTR [eax+0x332bccf9]
  407cc5:	cld    
  407cc6:	addr16 ret 0x5b36
  407cca:	ficom  WORD PTR [ecx]
  407ccc:	pop    ss
  407ccd:	aas    
  407cce:	mov    ch,0x8d
  407cd0:	lahf   
  407cd1:	shl    BYTE PTR [edx-0x8],cl
  407cd4:	lods   eax,DWORD PTR ds:[esi]
  407cd5:	mov    bh,0xbc
  407cd7:	adc    eax,0x5d027137
  407cdc:	imul   ecx,DWORD PTR [edx],0x74687d6b
  407ce2:	lods   eax,DWORD PTR ds:[esi]
  407ce3:	aad    0xed
  407ce5:	push   eax
  407ce6:	jb     0x594f351d
  407cec:	jmp    0xf3950d99
  407cf1:	xchg   esp,eax
  407cf2:	lods   eax,DWORD PTR ds:[esi]
  407cf3:	sbb    ecx,0xffffffb1
  407cf6:	sbb    dh,BYTE PTR fs:[ecx+0x73]
  407cfa:	outs   dx,DWORD PTR ds:[esi]
  407cfb:	rcl    dl,1
  407cfd:	adc    al,0x39
  407cff:	inc    esi
  407d00:	(bad)  
  407d01:	xlat   BYTE PTR ds:[ebx]
  407d02:	mov    ds:0x59a70af8,al
  407d07:	je     0x407d42
  407d09:	mov    ds:0xd0e5fef9,al
  407d0e:	sar    ecx,cl
  407d10:	xor    edi,ecx
  407d12:	fninit 
  407d14:	xor    al,0x9a
  407d16:	test   eax,0xf7f899b6
  407d1b:	cwde   
  407d1c:	add    cl,BYTE PTR [eax-0x52f7f44e]
  407d22:	adc    DWORD PTR [ebp+0x47],esp
  407d25:	aaa    
  407d26:	or     DWORD PTR [ecx],edx
  407d28:	jne    0x407d41
  407d2a:	mov    ds:0x6e2a4e02,eax
  407d2f:	pop    edi
  407d30:	dec    esi
  407d31:	outs   dx,DWORD PTR ds:[esi]
  407d32:	out    dx,al
  407d33:	adc    ah,BYTE PTR [edi+0xc]
  407d36:	jp     0x407cd1
  407d38:	retf   0xcc21
  407d3b:	ss loop 0x407d0c
  407d3e:	rcr    ah,cl
  407d40:	adc    BYTE PTR [ecx],dl
  407d42:	jb     0x407d6e
  407d44:	inc    esi
  407d45:	inc    edi
  407d46:	cmp    esp,esi
  407d48:	xchg   edi,eax
  407d49:	inc    edi
  407d4a:	adc    BYTE PTR [ebx],dl
  407d4c:	jg     0x407ce8
  407d4e:	icebp  
  407d4f:	xor    BYTE PTR [esi],0xe
  407d52:	dec    esi
  407d53:	test   eax,0x759c4c79
  407d58:	cmp    edi,ebp
  407d5a:	mov    al,ds:0x122e0a59
  407d5f:	xor    eax,0xe5b9a00b
  407d64:	retf   
  407d65:	or     dl,BYTE PTR [edi-0x57]
  407d68:	rol    edi,0xde
  407d6b:	cld    
  407d6c:	add    DWORD PTR [edx],edx
  407d6e:	ret    0x2ed2
  407d71:	inc    edx
  407d72:	jl     0x407d9a
  407d74:	adc    eax,0x21a829ba
  407d79:	inc    edx
  407d7a:	movs   WORD PTR es:[edi],WORD PTR ds:[esi]
  407d7c:	aas    
  407d7d:	mov    dl,0x7a
  407d7f:	dec    esi
  407d80:	push   ecx
  407d81:	cwde   
  407d82:	dec    esi
  407d83:	and    edi,DWORD PTR [ebx]
  407d85:	mov    eax,0x8eff3a43
  407d8a:	mov    ah,0x4f
  407d8c:	sbb    dh,bh
  407d8e:	lds    esp,FWORD PTR [edx-0x328076f6]
  407d94:	and    eax,DWORD PTR [esi-0x22b7d6e7]
  407d9a:	je     0x407df1
  407d9c:	int3   
  407d9d:	or     edx,DWORD PTR [ecx]
  407d9f:	jp     0x407d55
  407da1:	addr16 push ss
  407da3:	and    edi,DWORD PTR [ebx-0x13]
  407da6:	sub    esi,DWORD PTR [ebx]
  407da8:	mov    al,0xac
  407daa:	pop    ebp
  407dab:	pop    es
  407dac:	pop    esi
  407dad:	imul   ebp,DWORD PTR [esi+0x4499f895],0xffffff93
  407db4:	adc    al,0xd2
  407db6:	aaa    
  407db7:	pop    DWORD PTR [esi-0x6e12b020]
  407dbd:	fistp  QWORD PTR es:[edi]
  407dc0:	enter  0x636,0x3b
  407dc4:	or     al,0x6
  407dc6:	retf   
  407dc7:	mov    bl,0xff
  407dc9:	jns    0x407d6b
  407dcb:	iret   
  407dcc:	push   edx
  407dcd:	pop    ecx
  407dce:	cmp    dh,BYTE PTR [edx+0x1467545f]
  407dd4:	dec    edx
  407dd5:	dec    ebp
  407dd7:	je     0x407e44
  407dd9:	rol    BYTE PTR [esi],cl
  407ddb:	jb     0x407db9
  407ddd:	push   ss
  407dde:	xchg   BYTE PTR ds:0x6db77527,cl
  407de4:	pop    edi
  407de5:	adc    al,0xc5
  407de7:	loop   0x407d92
  407de9:	dec    DWORD PTR [ebx+0x73]
  407dec:	pop    es
  407ded:	adc    ax,0x1646
  407df1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407df2:	aaa    
  407df3:	icebp  
  407df4:	and    eax,0x27eb63e1
  407df9:	inc    ecx
  407dfa:	int3   
  407dfb:	fiadd  WORD PTR [ebx-0x1f]
  407dfe:	add    BYTE PTR [edx-0x2e22fe2c],0xcc
  407e05:	sbb    eax,DWORD PTR [ebx+0x52d9eaaa]
  407e0b:	xchg   di,ax
  407e0d:	dec    eax
  407e0e:	pushf  
  407e0f:	ja     0x407e20
  407e11:	push   ss
  407e12:	icebp  
  407e13:	sub    bh,cl
  407e15:	call   0xad4e:0x3d697752
  407e1c:	push   ss
  407e1d:	(bad)  
  407e1f:	push   ss
  407e20:	jns    0x407e87
  407e22:	or     BYTE PTR [ecx+0x26],dh
  407e25:	and    BYTE PTR [esp+ebx*8+0x476aaa4e],ah
  407e2c:	cld    
  407e2d:	pushf  
  407e2e:	inc    ecx
  407e2f:	iret   
  407e30:	adc    al,0xb6
  407e32:	dec    eax
  407e33:	sbb    DWORD PTR [ecx],ebx
  407e35:	ins    BYTE PTR es:[edi],dx
  407e36:	push   edx
  407e37:	mov    BYTE PTR [ecx],dh
  407e39:	loope  0x407e39
  407e3b:	push   esi
  407e3c:	jbe    0x407eaa
  407e3e:	pop    edx
  407e3f:	add    al,0x24
  407e41:	int3   
  407e42:	int    0x97
  407e44:	add    eax,DWORD PTR [edi-0x6]
  407e47:	ror    BYTE PTR [esi],cl
  407e49:	sahf   
  407e4a:	xchg   edx,eax
  407e4b:	popf   
  407e4c:	fst    st(6)
  407e4e:	pop    ebp
  407e4f:	adc    ah,BYTE PTR [esi+eax*4-0x277c6d2d]
  407e56:	into   
  407e57:	lods   eax,DWORD PTR ds:[esi]
  407e58:	dec    edx
  407e59:	dec    esp
  407e5a:	xor    BYTE PTR [esi+0x1dfbcd98],dl
  407e60:	aaa    
  407e61:	xchg   ecx,eax
  407e62:	gs sub eax,0xcc620b68
  407e68:	xlat   BYTE PTR ds:[ebx]
  407e69:	out    0x98,eax
  407e6b:	mov    edi,DWORD PTR [esi+0x67]
  407e6e:	sbb    al,0x43
  407e70:	stos   BYTE PTR es:[edi],al
  407e71:	popa   
  407e72:	sbb    ecx,0x56a203ed
  407e78:	jno    0x407e94
  407e7a:	mov    gs,WORD PTR [edx-0x9]
  407e7d:	popa   
  407e7e:	and    ebp,DWORD PTR [esi]
  407e80:	fisttp QWORD PTR [edi]
  407e82:	mov    edx,0xab5ed7d1
  407e87:	xchg   esp,eax
  407e88:	je     0x407e24
  407e8a:	out    dx,eax
  407e8b:	xor    al,0x71
  407e8d:	xor    edi,edx
  407e8f:	pop    edi
  407e90:	call   0x2b1a:0xd8ae42c5
  407e97:	dec    esi
  407e98:	or     al,BYTE PTR [esi+ecx*8-0x76]
  407e9c:	(bad)  [eax-0x24]
  407e9f:	out    dx,eax
  407ea0:	push   0x33ca42b8
  407ea5:	jmp    0x80fd6298
  407eaa:	test   ebp,edi
  407eac:	ret    
  407ead:	imul   ecx,DWORD PTR [edi],0xfffffffb
  407eb0:	cmp    eax,0xece19be4
  407eb5:	mov    WORD PTR [edi+0x5e8eee0e],cs
  407ebb:	rol    DWORD PTR [edx],1
  407ebd:	pusha  
  407ebe:	xchg   esp,eax
  407ebf:	cli    
  407ec0:	ror    BYTE PTR [edx],cl
  407ec2:	mov    esi,0x23a041af
  407ec7:	xchg   DWORD PTR [ebp-0x11],ebx
  407eca:	ss pop eax
  407ecc:	loop   0x407f3e
  407ece:	inc    edx
  407ecf:	jo     0x407e80
  407ed1:	mov    ecx,?
  407ed3:	mov    edx,0x88724782
  407ed8:	mov    ebx,0x49f735de
  407edd:	ret    
  407ede:	sub    al,0xd
  407ee0:	sti    
  407ee1:	fdivr  DWORD PTR [esi+0x2e]
  407ee4:	adc    DWORD PTR [edi+ebx*4],esp
  407ee7:	inc    ecx
  407ee8:	inc    esi
  407ee9:	mov    al,ds:0x3ba94157
  407eee:	jl     0x407ef3
  407ef0:	sub    ebp,edi
  407ef2:	cmp    eax,0x270cf3ae
  407ef7:	stos   DWORD PTR es:[edi],eax
  407ef8:	mov    ds:0x1dfdbfc6,al
  407efd:	jp     0x407eb1
  407eff:	mov    bl,0x3e
  407f01:	push   edx
  407f02:	in     al,0x36
  407f04:	xor    eax,0x2129ed4f
  407f09:	or     eax,0x2060f4d7
  407f0e:	mov    eax,ds:0x7cd85fee
  407f13:	out    dx,al
  407f14:	dec    esp
  407f15:	aaa    
  407f16:	jg     0x407ea3
  407f18:	push   ebp
  407f19:	push   esi
  407f1a:	cmp    BYTE PTR [ecx],0x65
  407f1d:	sbb    edi,DWORD PTR [edx+eax*1-0x6477df2d]
  407f24:	xlat   BYTE PTR ds:[ebx]
  407f25:	stc    
  407f26:	xchg   esp,eax
  407f27:	loopne 0x407f97
  407f29:	sub    eax,0x3858c05f
  407f2e:	add    DWORD PTR [edx+0x36],0x111afcd8
  407f35:	ds jmp 0x407edb
  407f38:	lock inc esp
  407f3a:	loope  0x407efc
  407f3c:	push   edi
  407f3d:	es inc eax
  407f3f:	mov    bh,ah
  407f41:	dec    esp
  407f42:	into   
  407f43:	inc    esp
  407f44:	mov    esp,0x53d6ae85
  407f49:	xor    edi,DWORD PTR [ecx-0x3cd5cf2f]
  407f4f:	inc    eax
  407f50:	mov    ebx,DWORD PTR ds:0xacf0230b
  407f56:	adc    edx,DWORD PTR [ecx+eiz*8-0x6b]
  407f5a:	push   cs
  407f5b:	push   edx
  407f5c:	cli    
  407f5d:	hlt    
  407f5e:	(bad)  
  407f60:	push   0xffffffde
  407f62:	call   0x1035d1fa
  407f67:	xchg   edi,eax
  407f68:	jo     0x407f4a
  407f6a:	pop    ebp
  407f6b:	xchg   BYTE PTR [edi],al
  407f6d:	jmp    0x55c8a4a1
  407f72:	push   edx
  407f73:	push   esp
  407f74:	lock or BYTE PTR [ecx+0x6a],0xf8
  407f79:	gs mov ecx,0x6d611f21
  407f7f:	add    eax,0x8258f88d
  407f84:	dec    eax
  407f85:	mov    edx,0xc355ab41
  407f8a:	mov    bl,0x94
  407f8c:	sbb    dh,cl
  407f8e:	lahf   
  407f8f:	jo     0x407fff
  407f91:	sbb    DWORD PTR [ecx],esi
  407f93:	pop    eax
  407f94:	scas   al,BYTE PTR es:[edi]
  407f95:	sub    DWORD PTR ds:[ecx],edx
  407f98:	scas   al,BYTE PTR es:[edi]
  407f99:	pop    ds
  407f9a:	push   0xffffffd8
  407f9c:	jb     0x407fbb
  407f9e:	mov    ecx,0xfdfae2a1
  407fa3:	xlat   BYTE PTR ds:[ebx]
  407fa4:	popa   
  407fa5:	cld    
  407fa6:	xor    eax,DWORD PTR [edx+0x76]
  407fa9:	in     eax,dx
  407faa:	pushf  
  407fab:	call   0x27da:0xbbf68e2d
  407fb2:	(bad)  
  407fb3:	jo     0x40802f
  407fb5:	dec    esi
  407fb6:	in     al,0xc5
  407fb8:	adc    BYTE PTR [ebp-0xa7e2725],bh
  407fbe:	pop    esp
  407fbf:	lods   eax,DWORD PTR ds:[esi]
  407fc0:	enter  0xd12b,0x37
  407fc4:	pop    es
  407fc5:	xlat   BYTE PTR ds:[ebx]
  407fc6:	and    bl,BYTE PTR [esi]
  407fc8:	mov    ebp,0xc52e6dd7
  407fcd:	jge    0x407fc6
  407fcf:	pop    ebx
  407fd0:	mov    eax,ds:0x5453c088
  407fd5:	xchg   ebx,eax
  407fd6:	jno    0x407f6b
  407fd8:	nop
  407fd9:	pop    ebp
  407fda:	jecxz  0x407f68
  407fdc:	in     al,dx
  407fdd:	adc    al,0xcc
  407fdf:	pop    edi
  407fe0:	and    al,0xce
  407fe2:	ja     0x40803c
  407fe4:	stc    
  407fe5:	jbe    0x408005
  407fe7:	mov    WORD PTR [ebp+esi*4-0x22],?
  407feb:	and    al,BYTE PTR [edi+0x7d]
  407fee:	lods   al,BYTE PTR ds:[esi]
  407fef:	and    esi,DWORD PTR [edx]
  407ff1:	popf   
  407ff2:	cmp    cl,ah
  407ff4:	push   edi
  407ff5:	aad    0x5
  407ff7:	sar    ebx,1
  407ff9:	xchg   esp,eax
  407ffa:	gs int 0xbc
  407ffd:	retf   
  407ffe:	mov    dh,0x1e
  408000:	xor    eax,0x530878e2
  408005:	ds js  0x40803b
  408008:	dec    ebp
  408009:	push   es
  40800a:	je     0x407fa5
  40800c:	cli    
  40800d:	mov    bh,0x2f
  40800f:	pop    edx
  408010:	mov    cl,0xaf
  408012:	push   eax
  408013:	sbb    eax,DWORD PTR [ebp-0x36]
  408016:	popa   
  408017:	hlt    
  408018:	rcr    DWORD PTR [ecx+0x59],cl
  40801b:	imul   ecx,DWORD PTR [edi+0x6ad56415],0x238f4b2d
  408025:	mov    ebp,0xda1201f3
  40802a:	pop    ss
  40802b:	add    BYTE PTR [ecx-0x60b5eeb],dl
  408031:	cwde   
  408032:	jmp    0x78f8:0xdc3552a8
  408039:	out    0x87,eax
  40803b:	xchg   edi,eax
  40803c:	jb     0x407ff3
  40803e:	mov    ebx,0xb6bf460a
  408043:	xor    ebx,DWORD PTR ds:0x36f67d00
  408049:	gs fmul st,st(2)
  40804c:	sub    ecx,DWORD PTR [eax+0x694fa1bc]
  408052:	pushf  
  408053:	dec    edx
  408054:	cli    
  408055:	xor    ebp,edx
  408057:	cs pop ss
  408059:	call   0x34b4:0xb415f96f
  408060:	sar    BYTE PTR [esp+eax*4],cl
  408063:	or     ecx,esp
  408065:	xlat   BYTE PTR ds:[ebx]
  408066:	jp     0x4080d2
  408068:	enter  0xaa88,0xc4
  40806c:	mov    DWORD PTR ds:[ebx],0x76caafb2
  408073:	jmp    0x9d07db3f
  408078:	sbb    BYTE PTR [ebp-0x69],ch
  40807b:	imul   edx,DWORD PTR [edi-0x1a],0xca2ab218
  408082:	adc    dh,al
  408084:	add    BYTE PTR [ebx-0x70],cl
  408087:	(bad)  
  408088:	enter  0xe2f8,0x88
  40808c:	sbb    ah,bh
  40808e:	test   eax,0xbac633a4
  408093:	adc    al,0x8f
  408095:	int    0xff
  408097:	sub    edx,eax
  408099:	jmp    0x4080ad
  40809e:	mov    eax,DWORD PTR [ebp-0x8]
  4080a1:	xor    eax,esi
  4080a3:	mov    edx,0xffcd8d14
  4080a8:	sub    edx,eax
  4080aa:	add    edx,DWORD PTR [ebp-0xc]
  4080ad:	mov    DWORD PTR [ebp-0xc],edx
  4080b0:	mov    eax,DWORD PTR [ebp-0x10]
  4080b3:	cmp    eax,0xf89c85b0
  4080b8:	jne    0x40383c
  4080be:	mov    DWORD PTR [ebp-0x20],0xa
  4080c5:	mov    ebx,DWORD PTR [ebp+0x8]
  4080c8:	xor    ebx,esi
  4080ca:	add    ebx,edi
  4080cc:	lea    eax,[ebx-0x3272ec]
  4080d2:	xor    eax,esi
  4080d4:	cmp    eax,0xf89c95b0
  4080d9:	je     0x40810c
  4080df:	lea    eax,[ebx+ecx*1]
  4080e2:	mov    DWORD PTR [ebp-0x14],eax
  4080e5:	mov    eax,DWORD PTR [ebp-0x28]
  4080e8:	sub    eax,ebx
  4080ea:	mov    DWORD PTR [ebp-0x18],eax
  4080ed:	push   DWORD PTR [ebp-0x18]
  4080f0:	push   DWORD PTR [ebp-0x14]
  4080f3:	call   0x408153
  4080f8:	mov    eax,DWORD PTR [ebp+0xc]
  4080fb:	mov    ecx,DWORD PTR [ebp-0x24]
  4080fe:	xor    eax,esi
  408100:	lea    ebx,[ebx+eax*1+0x3272ec]
  408107:	jmp    0x4080cc
  40810c:	dec    DWORD PTR [ebp-0x20]
  40810f:	jne    0x4080c5
  408115:	mov    eax,DWORD PTR [ebp+0x8]
  408118:	mov    edx,DWORD PTR [ebp+0xc]
  40811b:	mov    ebx,DWORD PTR [ebp+0x8]
  40811e:	xor    edx,esi
  408120:	mov    dl,BYTE PTR [edx+ecx*1+0x3272ec]
  408127:	xor    eax,esi
  408129:	mov    al,BYTE PTR [eax+ecx*1+0x3272ec]
  408130:	xor    ebx,esi
  408132:	mov    BYTE PTR [ebx+ecx*1+0x3272ec],dl
  408139:	mov    edx,DWORD PTR [ebp+0xc]
  40813c:	xor    edx,esi
  40813e:	mov    BYTE PTR [edx+ecx*1+0x3272ec],al
  408145:	mov    eax,DWORD PTR [ebp+0xc]
  408148:	xor    eax,esi
  40814a:	add    eax,edi
  40814c:	pop    edi
  40814d:	pop    esi
  40814e:	pop    ebx
  40814f:	leave  
  408150:	ret    0x8
  408153:	push   ebp
  408154:	mov    ebp,esp
  408156:	sub    esp,0x40
  408159:	add    edx,edx
  40815b:	mov    eax,DWORD PTR [ebp+0xc]
  40815e:	mov    DWORD PTR [ebp-0x18],eax
  408161:	mov    DWORD PTR ds:0x428663,0x712d
  40816b:	mov    eax,DWORD PTR [ebp+0x8]
  40816e:	mov    DWORD PTR [ebp-0x14],0xf89c85b0
  408175:	mov    DWORD PTR ds:0x428613,0x5be4
  40817f:	mov    DWORD PTR [ebp-0x30],eax
  408182:	sub    DWORD PTR ds:0x428667,ebx
  408188:	push   esi
  408189:	xor    DWORD PTR ds:0x42867b,0x42861b
  408193:	push   edi
  408194:	movzx  edi,WORD PTR ds:0x428647
  40819b:	add    DWORD PTR ds:0x428603,edi
  4081a1:	mov    edi,0xf89c85b1
  4081a6:	mov    DWORD PTR ds:0x428653,0x19
  4081b0:	cmp    DWORD PTR ds:0x428653,0x0
  4081b7:	je     0x408208
  4081bd:	cmp    DWORD PTR ds:0x428653,0x7
  4081c4:	jg     0x408208
  4081ca:	jmp    0x4081da
  4081cf:	push   0x428097
  4081d4:	call   DWORD PTR ds:0x4287c3
  4081da:	cmp    DWORD PTR ds:0x428653,0x8
  4081e1:	jne    0x4081f4
  4081e7:	mov    edx,DWORD PTR ds:0x428653
  4081ed:	dec    edx
  4081ee:	mov    DWORD PTR ds:0x428653,edx
  4081f4:	xor    edx,edx
  4081f6:	or     edx,DWORD PTR ds:0x428653
  4081fc:	dec    edx
  4081fd:	mov    DWORD PTR ds:0x428653,edx
  408203:	jmp    0x4081b0
  408208:	mov    DWORD PTR [ebp-0x8],edi
  40820b:	sbb    ecx,0x4b70
  408211:	mov    eax,DWORD PTR [ebp-0x14]
  408214:	mov    edx,DWORD PTR ds:0x4285cf
  40821a:	xor    DWORD PTR ds:0x4285e7,edx
  408220:	mov    ecx,0x75108a4
  408225:	or     DWORD PTR ds:0x4285ef,ecx
  40822b:	xor    eax,ecx
  40822d:	mov    esi,0x3272ec
  408232:	adc    DWORD PTR ds:0x4285db,edi
  408238:	add    eax,esi
  40823a:	mov    DWORD PTR [ebp-0x4],eax
  40823d:	mov    DWORD PTR ds:0x428667,0x1d
  408247:	cmp    DWORD PTR ds:0x428667,0x0
  40824e:	je     0x408296
  408254:	cmp    DWORD PTR ds:0x428667,0x28
  40825b:	jg     0x408296
  408261:	jmp    0x408284
  408266:	push   0x428633
  40826b:	push   DWORD PTR [ebp-0x10]
  40826e:	push   0x7f16
  408273:	push   0x6682
  408278:	push   DWORD PTR [ebp-0x20]
  40827b:	push   DWORD PTR [ebp-0x20]
  40827e:	call   DWORD PTR ds:0x4287c7
  408284:	mov    edx,DWORD PTR ds:0x428667
  40828a:	dec    edx
  40828b:	mov    DWORD PTR ds:0x428667,edx
  408291:	jmp    0x408247
  408296:	mov    eax,DWORD PTR [ebp-0x14]
  408299:	xor    eax,ecx
  40829b:	add    eax,esi
  40829d:	mov    DWORD PTR [ebp+0x8],eax
  4082a0:	mov    DWORD PTR [ebp-0x28],0xf89c8590
  4082a7:	xor    eax,DWORD PTR ds:0x428623
  4082ad:	mov    DWORD PTR [ebp-0x24],0xf89c85bf
  4082b4:	mov    eax,ds:0x4286d7
  4082b9:	mov    edx,DWORD PTR ds:0x4286eb
  4082bf:	sub    eax,edx
  4082c1:	xor    eax,DWORD PTR [eax+edx*1]
  4082c4:	mov    eax,DWORD PTR [ebp-0x14]
  4082c7:	mov    edx,DWORD PTR [ebp-0x18]
  4082ca:	xor    eax,ecx
  4082cc:	sbb    DWORD PTR ds:0x428677,0x289b
  4082d6:	add    eax,esi
  4082d8:	mov    DWORD PTR ds:0x428653,0x7663
  4082e2:	cmp    edx,eax
  4082e4:	je     0x40aa55
  4082ea:	mov    DWORD PTR ds:0x42861f,0x1f7b
  4082f4:	push   ebx
  4082f5:	jmp    0x40aa30
  4082fa:	mov    eax,ds:0x428607
  4082ff:	add    DWORD PTR ds:0x42865b,eax
  408305:	mov    edx,DWORD PTR [ebp-0x4]
  408308:	dec    eax
  408309:	mov    eax,DWORD PTR [ebp-0x18]
  40830c:	and    DWORD PTR ds:0x4285ef,0x33ad
  408316:	mov    ebx,DWORD PTR [ebp-0x28]
  408319:	sub    eax,edx
  40831b:	xor    ebx,ecx
  40831d:	adc    DWORD PTR ds:0x42863f,0x20c9
  408327:	xor    edx,edx
  408329:	add    ebx,esi
  40832b:	sub    DWORD PTR ds:0x428603,0x441d
  408335:	div    ebx
  408337:	xor    edx,DWORD PTR ds:0x42863b
  40833d:	jmp    0x40a6e1
  408342:	sbb    ecx,DWORD PTR [esi+0x78d7a47c]
  408348:	fwait
  408349:	and    esi,0x5c16ec02
  40834f:	das    
  408350:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408351:	jp     0x4082f2
  408353:	adc    al,0x7a
  408355:	jp     0x40834a
  408357:	pop    edi
  408358:	jp     0x4083d4
  40835a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40835b:	retf   
  40835c:	js     0x408393
  40835e:	mov    esp,0xaf6968b3
  408363:	je     0x40833a
  408365:	mov    ?,WORD PTR [ebx+0x3c]
  408368:	xchg   esp,eax
  408369:	cs (bad) 
  40836c:	test   BYTE PTR [edi+0x27442b77],cl
  408372:	mov    esp,0xe1121372
  408377:	in     al,0xa5
  408379:	call   0xf30b:0xb323e986
  408380:	mov    bh,BYTE PTR [ebp+0x26883a7a]
  408386:	sbb    dl,BYTE PTR [ebp+0x23cd393e]
  40838c:	cmp    eax,eax
  40838e:	adc    eax,0x5b67535a
  408393:	jbe    0x4083e5
  408395:	mov    ebp,0xbe45481e
  40839a:	fild   QWORD PTR [eax-0x250af011]
  4083a0:	jne    0x408403
  4083a2:	pushf  
  4083a3:	add    DWORD PTR [edx+eiz*1-0x1a],edx
  4083a7:	mov    al,0x30
  4083a9:	mov    ds:0x69a58c7b,al
  4083ae:	inc    BYTE PTR [ecx-0x4bd6e4]
  4083b4:	outs   dx,DWORD PTR ds:[esi]
  4083b5:	mov    ecx,0x25222c84
  4083ba:	xchg   ebx,eax
  4083bb:	mov    bl,0xab
  4083bd:	bound  ebp,QWORD PTR [esi-0x5dcfebb0]
  4083c3:	sbb    dl,al
  4083c5:	loope  0x40837d
  4083c7:	dec    ebx
  4083c8:	mov    ds:0xfc7977b9,al
  4083cd:	(bad)  
  4083ce:	enter  0xcbe2,0xea
  4083d2:	inc    eax
  4083d3:	outs   dx,DWORD PTR ds:[esi]
  4083d4:	pop    edx
  4083d5:	cmp    dh,BYTE PTR [edi]
  4083d7:	mov    ss,WORD PTR [edi+0x167bcb3]
  4083dd:	xchg   edi,eax
  4083de:	mov    eax,ecx
  4083e0:	mov    edi,0xadd8b2df
  4083e5:	mov    ds:0x582dde89,eax
  4083ea:	test   ebx,edi
  4083ec:	mov    esi,0xafc16f76
  4083f1:	inc    edx
  4083f2:	xchg   ecx,eax
  4083f3:	xchg   esi,ebx
  4083f5:	pop    edi
  4083f6:	mov    ebp,0x304e8afa
  4083fb:	pop    es
  4083fc:	jns    0x408390
  4083fe:	fmul   st,st(3)
  408400:	ins    BYTE PTR es:[edi],dx
  408401:	imul   DWORD PTR [ebx+0xd9d864b]
  408407:	push   ebx
  408408:	inc    esp
  408409:	nop
  40840a:	jmp    0x40841d
  40840c:	popa   
  40840d:	arpl   si,di
  40840f:	scas   al,BYTE PTR es:[edi]
  408410:	aam    0x67
  408412:	and    BYTE PTR [esi-0x6f],al
  408415:	(bad)  
  408416:	test   al,0x2e
  408418:	ins    DWORD PTR es:[edi],dx
  408419:	lods   eax,DWORD PTR ds:[esi]
  40841a:	mov    ebp,0x737289f3
  40841f:	add    eax,0x71f9ed34
  408424:	out    dx,al
  408425:	and    eax,0xa794d808
  40842a:	call   0x83df251a
  40842f:	dec    edx
  408430:	hlt    
  408431:	cli    
  408432:	in     eax,dx
  408433:	ds cld 
  408435:	mov    al,0x94
  408437:	fsubrp st(6),st
  408439:	mov    dl,0xec
  40843b:	mov    ebx,0xc83faecc
  408440:	jecxz  0x4084ae
  408442:	stos   DWORD PTR es:[edi],eax
  408443:	jmp    0xa4f8:0xcf31c497
  40844a:	inc    esp
  40844b:	sbb    BYTE PTR [edi+0x3147d17],bh
  408451:	stc    
  408452:	neg    ebx
  408454:	sub    DWORD PTR [esi+0x694597e7],0xb92e61bc
  40845e:	pop    esi
  40845f:	sbb    BYTE PTR [ebp-0x21],dh
  408462:	gs iret 
  408464:	ins    DWORD PTR es:[edi],dx
  408465:	xchg   edx,eax
  408466:	fxch   st(6)
  408468:	cmp    edi,edx
  40846a:	arpl   WORD PTR [eax],di
  40846c:	jmp    0x408418
  40846e:	cld    
  40846f:	shl    DWORD PTR [esi+eax*8-0x7027a31a],1
  408476:	or     esi,edi
  408478:	cmp    al,0x11
  40847a:	scas   eax,DWORD PTR es:[edi]
  40847b:	call   0x461324d3
  408480:	mov    bl,0xf5
  408482:	ins    BYTE PTR es:[edi],dx
  408483:	pop    eax
  408484:	dec    edx
  408485:	and    esi,DWORD PTR [ebx+0x6b]
  408488:	push   esi
  408489:	jl     0x4084e9
  40848b:	cwde   
  40848c:	nop
  40848d:	sbb    al,0xcc
  40848f:	mov    esi,0x7cc5d988
  408494:	mov    ds:0x389134b5,eax
  408499:	and    eax,0xb9d25d76
  40849e:	xchg   edi,eax
  40849f:	sub    ecx,DWORD PTR [ecx]
  4084a1:	in     al,dx
  4084a2:	push   esi
  4084a3:	adc    BYTE PTR [edx+ebp*1+0x6],ah
  4084a7:	int3   
  4084a8:	push   0x5876bb3c
  4084ad:	sub    al,0x4
  4084af:	and    esi,DWORD PTR ss:[esi]
  4084b2:	fcmovnbe st,st(7)
  4084b4:	inc    ecx
  4084b5:	mov    ds:0xfb2cd96a,eax
  4084ba:	sub    DWORD PTR [edi+eax*8],esi
  4084bd:	(bad)  
  4084be:	cmp    al,0xb
  4084c0:	in     eax,dx
  4084c1:	inc    edx
  4084c2:	imul   edx,DWORD PTR [eax-0x24e624e4],0xffffff96
  4084c9:	or     bl,BYTE PTR [ebp-0x76b87b2f]
  4084cf:	arpl   WORD PTR [edx-0x79401fdb],dx
  4084d5:	adc    eax,0x77ddf60a
  4084da:	or     al,0x9a
  4084dc:	xor    al,0xc6
  4084de:	(bad)  
  4084df:	push   ecx
  4084e0:	pop    ds
  4084e1:	fimul  DWORD PTR [ebx+edi*1-0x39f05542]
  4084e8:	pusha  
  4084e9:	les    edx,FWORD PTR [edi+0x1a]
  4084ec:	in     eax,0xc5
  4084ee:	mov    edx,0x771e93ea
  4084f3:	or     ebx,edi
  4084f5:	adc    bh,BYTE PTR ds:0x437e7aed
  4084fb:	dec    edx
  4084fc:	popf   
  4084fd:	std    
  4084fe:	fstp   TBYTE PTR [edx+0xf]
  408501:	mov    cs,ebx
  408503:	mov    ds:0x5da4c62c,al
  408508:	jge    0x408566
  40850a:	(bad)
  40850e:	ret    
  40850f:	sub    bl,al
  408511:	fldenv fs:[edx]
  408514:	cli    
  408515:	aas    
  408516:	sub    bh,cl
  408518:	in     al,0xef
  40851a:	or     ah,al
  40851c:	mov    edi,0xc0b8f7e1
  408521:	jg     0x4084a5
  408523:	cdq    
  408524:	clc    
  408525:	call   0x892a:0x965b89ef
  40852c:	test   BYTE PTR [ecx+0x7f],0xa0
  408530:	mov    ecx,0x3befa83d
  408535:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408536:	cmc    
  408537:	xor    dh,ah
  408539:	and    bh,BYTE PTR [eax-0x6]
  40853c:	nop
  40853d:	shr    ch,0xba
  408540:	cwde   
  408541:	adc    DWORD PTR [eax+0x61],esi
  408544:	lahf   
  408545:	inc    esp
  408546:	mov    WORD PTR [ebx-0x2d],fs
  408549:	sub    al,0x4
  40854b:	mov    ds:0xe8eb1716,eax
  408550:	rcl    DWORD PTR [edx+0x47],0x62
  408554:	daa    
  408555:	and    BYTE PTR ds:0xd75bfe52,bl
  40855b:	push   ecx
  40855c:	cmc    
  40855d:	dec    edx
  40855e:	xor    eax,0x6571769e
  408563:	pusha  
  408564:	mov    edi,0x29a92f34
  408569:	call   0x1d5f7583
  40856e:	stos   BYTE PTR es:[edi],al
  40856f:	ja     0x40855f
  408571:	xor    al,0xf
  408573:	(bad)  
  408574:	call   0x163acb22
  408579:	jo     0x40856a
  40857b:	cwde   
  40857c:	rcl    DWORD PTR ss:[esi-0x5b],1
  408580:	aam    0x43
  408582:	les    esp,FWORD PTR [edx]
  408584:	mov    ebx,ebp
  408586:	dec    eax
  408587:	or     DWORD PTR [ecx-0x46],ebp
  40858a:	cdq    
  40858b:	or     esi,DWORD PTR [eax-0x5c]
  40858e:	push   eax
  40858f:	scas   eax,DWORD PTR es:[edi]
  408590:	or     BYTE PTR [ecx-0xc],dh
  408593:	or     al,0x1a
  408595:	jno    0x40852a
  408597:	cmp    dh,0x1e
  40859a:	clc    
  40859b:	mov    esp,0xb6050939
  4085a0:	int3   
  4085a1:	jnp    0x40857e
  4085a3:	ds pop edi
  4085a5:	mov    esi,0x5c02fc8c
  4085aa:	cmp    DWORD PTR [eax-0x38cad1fb],0xffffffae
  4085b1:	and    eax,DWORD PTR ds:0xa584fbaf
  4085b7:	mov    eax,0x2c3b31aa
  4085bc:	into   
  4085bd:	out    dx,al
  4085be:	ret    0x7859
  4085c1:	sbb    edx,ecx
  4085c3:	mov    ds:0x46557574,al
  4085c8:	xchg   ebp,eax
  4085c9:	jmp    FWORD PTR [ecx]
  4085cb:	mov    dh,0xd
  4085cd:	retf   0x8934
  4085d0:	dec    esi
  4085d1:	aas    
  4085d2:	dec    edx
  4085d3:	out    0xb9,al
  4085d5:	(bad)  
  4085d6:	jmp    0x40859e
  4085d8:	inc    edx
  4085d9:	fiadd  WORD PTR [ecx+0x42]
  4085dc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4085dd:	lods   al,BYTE PTR ds:[esi]
  4085de:	push   eax
  4085df:	mov    ds:0x48e68cc6,eax
  4085e4:	inc    esp
  4085e5:	and    BYTE PTR [ebx-0x31],bl
  4085e8:	mov    ebx,0xc2f36218
  4085ed:	repz cld 
  4085ef:	stos   BYTE PTR es:[edi],al
  4085f0:	sub    DWORD PTR [ecx],ecx
  4085f2:	or     edx,DWORD PTR [eax]
  4085f4:	sahf   
  4085f5:	push   ecx
  4085f6:	adc    edx,DWORD PTR [edx+0x5b475d7a]
  4085fc:	add    ch,BYTE PTR [ebp-0xc314521]
  408602:	inc    esp
  408603:	scas   al,BYTE PTR es:[edi]
  408604:	and    eax,0x899d2d84
  408609:	not    DWORD PTR [ebp+0x58]
  40860c:	retf   
  40860d:	stos   DWORD PTR es:[edi],eax
  40860e:	jmp    0x408590
  408610:	cmp    bl,BYTE PTR [eax+0x7644bd25]
  408616:	sbb    eax,0x33f769a7
  40861b:	enter  0x9df7,0x9d
  40861f:	ret    0xf653
  408622:	push   edi
  408623:	mov    edx,esp
  408625:	dec    eax
  408626:	sub    BYTE PTR [ecx-0xa],bh
  408629:	dec    eax
  40862a:	fistp  DWORD PTR [eax-0x1a]
  40862d:	sub    al,0x6b
  40862f:	sub    eax,0xa88917fe
  408634:	les    esi,FWORD PTR [eax]
  408636:	cmp    BYTE PTR cs:[ebx],al
  408639:	cs pusha 
  40863b:	loopne 0x40862e
  40863d:	cmp    ecx,DWORD PTR [ecx-0x2bfc6d]
  408643:	call   0x6bc2:0x22e42599
  40864a:	icebp  
  40864b:	outs   dx,DWORD PTR ds:[esi]
  40864c:	leave  
  40864d:	mov    eax,ds:0xc405aace
  408652:	jbe    0x4086a6
  408654:	mov    dl,0x1a
  408656:	push   es
  408657:	iret   
  408658:	test   al,0x9c
  40865a:	outs   dx,BYTE PTR ds:[esi]
  40865b:	jecxz  0x408636
  40865d:	repz add DWORD PTR [edi+0xd],ebx
  408661:	stc    
  408662:	mov    dl,0x43
  408664:	(bad)  
  408665:	and    eax,0xb8745cc2
  40866a:	fcom   QWORD PTR [ebp-0x39d72ee9]
  408670:	shr    DWORD PTR [esi],1
  408672:	and    ebp,DWORD PTR [eax+edx*8+0x7b]
  408676:	fs push ss
  408678:	cmp    eax,0x4d3a45c1
  40867d:	clc    
  40867e:	icebp  
  40867f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408680:	jno    0x4086f8
  408682:	cmp    eax,0xee894fb9
  408687:	sti    
  408688:	pop    ss
  408689:	repnz pop esp
  40868b:	mov    esp,0x6418f6b2
  408690:	xchg   esi,eax
  408691:	cli    
  408692:	sbb    DWORD PTR [ebp+ecx*4+0x68],esp
  408696:	cmc    
  408697:	test   BYTE PTR [ebx],ch
  408699:	enter  0x3ab8,0xa
  40869d:	inc    ebx
  40869e:	out    0xe9,al
  4086a0:	aaa    
  4086a1:	adc    ebp,DWORD PTR [esp+eax*2]
  4086a4:	call   DWORD PTR [ebx]
  4086a6:	das    
  4086a7:	add    eax,edx
  4086a9:	xchg   esp,eax
  4086aa:	cmc    
  4086ab:	jge    0x40864f
  4086ad:	mov    ah,0xbf
  4086af:	test   eax,0x1241294f
  4086b4:	xchg   edx,eax
  4086b5:	adc    DWORD PTR [esi+0x71],0x23db548c
  4086bc:	push   0x8eb1ec6d
  4086c1:	icebp  
  4086c2:	icebp  
  4086c3:	into   
  4086c4:	push   ss
  4086c5:	mov    eax,DWORD PTR [edx]
  4086c7:	cmp    al,0xfd
  4086c9:	es sub al,0x71
  4086cc:	push   ecx
  4086cd:	cdq    
  4086ce:	add    esi,DWORD PTR [ecx+0xd22141e]
  4086d4:	jnp    0x408663
  4086d6:	into   
  4086d7:	jns    0x408750
  4086d9:	fbld   TBYTE PTR [ebx+0x1d0dc407]
  4086df:	call   0x9b97:0x82f5477a
  4086e6:	and    DWORD PTR [edx-0x38],ecx
  4086e9:	pop    es
  4086ea:	sahf   
  4086eb:	popf   
  4086ec:	adc    DWORD PTR [esp+edi*1+0xcdfb74b],0xffffffc3
  4086f4:	out    dx,eax
  4086f5:	adc    DWORD PTR [edx+ebp*8-0x76],esp
  4086f9:	bound  ecx,QWORD PTR [edi-0x31]
  4086fc:	outs   dx,BYTE PTR ds:[esi]
  4086fd:	aad    0x72
  4086ff:	cmp    al,0x59
  408701:	ret    
  408702:	xor    al,0x60
  408704:	sahf   
  408705:	xor    edi,DWORD PTR [esi+ebx*2-0x6f]
  408709:	push   0x8996b4ac
  40870e:	push   ds
  40870f:	xchg   eax,esi
  408711:	xchg   ebx,eax
  408712:	ror    BYTE PTR [esp+eiz*2-0x43],1
  408716:	shl    esi,0xb4
  408719:	push   ecx
  40871a:	cmp    BYTE PTR [edx+0x7c],ch
  40871d:	jne    0x408737
  40871f:	pop    eax
  408720:	cs cli 
  408722:	push   esp
  408723:	mov    cl,BYTE PTR [esi]
  408725:	adc    DWORD PTR [ecx+0x3c0a8315],edi
  40872b:	scas   eax,DWORD PTR es:[edi]
  40872c:	je     0x408705
  40872e:	imul   ebp,DWORD PTR [ebx],0x597b3e06
  408734:	inc    edi
  408735:	xor    BYTE PTR [eax+0x4b],0x9
  408739:	stc    
  40873a:	sub    ebx,DWORD PTR [ecx]
  40873c:	je     0x40873d
  40873e:	test   BYTE PTR [esi],0x42
  408741:	sti    
  408742:	outs   dx,BYTE PTR ds:[esi]
  408743:	or     eax,0x473707ce
  408748:	push   edx
  408749:	jnp    0x40876d
  40874b:	jnp    0x4087a5
  40874d:	inc    ebp
  40874e:	sub    cl,BYTE PTR [edi]
  408750:	test   al,0x3b
  408752:	mov    al,0xe0
  408754:	dec    ebx
  408755:	xor    eax,ebp
  408757:	imul   eax,DWORD PTR [ecx+0x73091213],0xffffffcb
  40875e:	mul    BYTE PTR [edi-0x59]
  408761:	fdiv   DWORD PTR [ebx]
  408763:	iret   
  408764:	retf   0x3980
  408767:	adc    eax,0x5be8ac81
  40876c:	bound  ebx,QWORD PTR [ecx]
  40876e:	in     eax,0x9a
  408770:	mov    ds:0xff2fb41c,eax
  408775:	mov    edi,0xfc94c9d6
  40877a:	into   
  40877b:	dec    edi
  40877c:	pop    edx
  40877d:	mov    ecx,0x756358d5
  408782:	mov    ecx,0x35a6c433
  408787:	pop    ds
  408788:	mov    eax,ds:0xed29a927
  40878d:	add    ah,BYTE PTR [edi+0x7d7f4f6f]
  408793:	fnstsw WORD PTR [edx+0x7a3953f4]
  408799:	pop    ss
  40879a:	push   cs
  40879b:	sub    esi,DWORD PTR [ebx-0x34467b17]
  4087a1:	cli    
  4087a2:	aas    
  4087a3:	xchg   DWORD PTR [eax-0x52],esi
  4087a6:	dec    ebx
  4087a7:	add    eax,DWORD PTR [edx+0x309f7225]
  4087ad:	cmp    BYTE PTR [ebp-0x57464d56],bh
  4087b3:	mov    WORD PTR [edi],fs
  4087b5:	jne    0x4087e1
  4087b7:	aas    
  4087b8:	setp   BYTE PTR [ebx-0xd]
  4087bc:	dec    ebx
  4087bd:	(bad)
  4087c0:	out    0x53,eax
  4087c2:	rol    DWORD PTR ss:[ecx*1-0x6318174a],1
  4087ca:	mov    gs,WORD PTR [esi+0x2d]
  4087cd:	mov    edi,0x6c5fdb3
  4087d2:	add    ecx,0xffffffbc
  4087d5:	pop    ss
  4087d6:	add    eax,0x333ab197
  4087db:	adc    dl,BYTE PTR [edx]
  4087dd:	stos   BYTE PTR es:[edi],al
  4087de:	hlt    
  4087df:	and    cl,BYTE PTR [edx-0x4912f055]
  4087e5:	sar    DWORD PTR [edi],0xb2
  4087e8:	add    esi,edx
  4087ea:	ret    
  4087eb:	inc    eax
  4087ec:	jge    0x408797
  4087ee:	mov    eax,ds:0xd6faa96d
  4087f3:	leave  
  4087f4:	mov    edx,0xabfbebc9
  4087f9:	(bad)  
  4087fa:	push   ebx
  4087fb:	jge    0x4087c5
  4087fd:	sub    ebp,DWORD PTR [edx-0x769b01bf]
  408803:	jp     0x4087a6
  408805:	mov    ah,0x3
  408807:	xchg   esi,eax
  408808:	clc    
  408809:	and    DWORD PTR [eax],ebx
  40880b:	push   ss
  40880c:	dec    esp
  40880d:	pop    ebx
  40880e:	aam    0x91
  408810:	inc    ebp
  408811:	loopne 0x4087f9
  408813:	xchg   BYTE PTR [edx+0x3c728690],al
  408819:	add    eax,0x6bb0651d
  40881e:	pop    ss
  40881f:	sbb    al,0xe1
  408821:	or     al,BYTE PTR [esi+eax*1-0x4e7eb0be]
  408828:	dec    edx
  408829:	mov    edx,0xf4a30886
  40882e:	xor    eax,0x65966204
  408833:	xchg   ecx,eax
  408834:	dec    esp
  408835:	adc    DWORD PTR [ebp+0x1d],ecx
  408838:	push   ecx
  408839:	mov    ah,0xd8
  40883b:	cdq    
  40883c:	adc    DWORD PTR [edx-0x11],esp
  40883f:	aad    0x33
  408841:	inc    edi
  408842:	jmp    0xa92060d1
  408847:	cli    
  408848:	push   esp
  408849:	mov    ah,0x7a
  40884b:	fsubr  st(2),st
  40884d:	mov    cl,0xfc
  40884f:	mov    al,ds:0x7abeb93c
  408854:	lock mov eax,0xc141dcc3
  40885a:	outs   dx,BYTE PTR ds:[esi]
  40885b:	xchg   ecx,eax
  40885c:	(bad)  
  40885e:	cmp    eax,eax
  408860:	pusha  
  408861:	ins    BYTE PTR es:[edi],dx
  408862:	push   edi
  408863:	mov    eax,es
  408865:	and    DWORD PTR ds:0xe424f7e9,eax
  40886b:	in     al,dx
  40886c:	daa    
  40886d:	inc    esp
  40886e:	sbb    eax,0x51e77eea
  408873:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408874:	cmc    
  408875:	mov    dl,0x18
  408877:	xchg   sp,ax
  408879:	jl     0x4087fd
  40887b:	pop    ds
  40887c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40887d:	not    DWORD PTR [esp+ebx*4]
  408880:	in     eax,dx
  408881:	pop    es
  408882:	ins    BYTE PTR es:[edi],dx
  408883:	mov    WORD PTR [edi-0x4f],ss
  408886:	call   0x79a8:0xcffef44d
  40888d:	retf   
  40888e:	retf   
  40888f:	test   al,0xd6
  408891:	jne    0x4088d2
  408893:	repnz mov esi,0x50ebc781
  408899:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40889a:	call   0xc6b2:0x710056f6
  4088a1:	cmp    eax,0x90908103
  4088a6:	jne    0x408916
  4088a8:	pfcmpgt mm5,mm5
  4088ac:	jge    0x4088fb
  4088ae:	adc    cl,BYTE PTR [ebx]
  4088b0:	lods   al,BYTE PTR ds:[esi]
  4088b1:	(bad)  
  4088b2:	pop    ebp
  4088b3:	mul    BYTE PTR [edx]
  4088b5:	inc    esi
  4088b6:	push   ecx
  4088b7:	cmp    esi,ebx
  4088b9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4088ba:	retf   
  4088bb:	mov    ds:0x690e1518,al
  4088c0:	xchg   ebx,eax
  4088c1:	scas   eax,DWORD PTR es:[edi]
  4088c2:	push   es
  4088c3:	lahf   
  4088c4:	or     DWORD PTR [edx],ebp
  4088c6:	xor    ebx,DWORD PTR [edi-0x1a419283]
  4088cc:	fist   DWORD PTR [ecx-0x36ade891]
  4088d2:	mov    cl,0x46
  4088d4:	or     esi,DWORD PTR [eax+eiz*8+0x6c6ee0ce]
  4088db:	stos   DWORD PTR es:[edi],eax
  4088dc:	repnz (bad) 
  4088de:	fcmovu st,st(1)
  4088e0:	cmp    ecx,DWORD PTR [ebp-0x5a]
  4088e3:	mov    ebp,0x8dc591f8
  4088e8:	fimul  DWORD PTR [edi]
  4088ea:	inc    esp
  4088eb:	push   eax
  4088ec:	push   ebx
  4088ed:	jbe    0x408870
  4088ef:	sbb    al,0xe3
  4088f1:	cdq    
  4088f2:	push   edi
  4088f3:	out    0x52,al
  4088f5:	dec    ebx
  4088f6:	sahf   
  4088f7:	out    dx,al
  4088f8:	inc    ebp
  4088f9:	(bad)  
  4088fa:	jl     0x408906
  4088fc:	outs   dx,BYTE PTR ds:[esi]
  4088fd:	adc    eax,DWORD PTR [ebp-0x30]
  408900:	jle    0x408894
  408902:	pushf  
  408903:	stc    
  408904:	std    
  408905:	mov    BYTE PTR es:[edx-0x5cd687e2],ch
  40890c:	inc    esi
  40890d:	inc    esi
  40890e:	cmp    BYTE PTR [edi+0x66d3adf9],bh
  408914:	inc    ebx
  408915:	iret   
  408916:	dec    ecx
  408917:	(bad)  
  408918:	aam    0x88
  40891a:	adc    eax,0xeb8ecc52
  40891f:	adc    eax,0xa46151ef
  408924:	arpl   WORD PTR [ebx-0x48],bp
  408927:	mov    al,ds:0x9b5a49e0
  40892c:	cmp    edi,DWORD PTR [eax-0x47]
  40892f:	push   ebp
  408930:	mov    eax,0xa0163f67
  408935:	mov    edi,0xaeba668f
  40893a:	dec    DWORD PTR ds:0x9a06303f
  408940:	push   esi
  408941:	pop    edx
  408942:	enter  0x28b4,0x27
  408946:	jmp    0x7fcc79a6
  40894b:	push   0x21
  40894d:	ss jecxz 0x408989
  408950:	scas   eax,DWORD PTR es:[edi]
  408951:	fisubr DWORD PTR [ebx]
  408953:	or     al,0xf
  408955:	and    eax,0x7058ef63
  40895a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40895b:	jecxz  0x4089d3
  40895d:	lock jecxz 0x40890d
  408960:	fidivr WORD PTR [ebx+esi*1-0x7f363597]
  408967:	shr    BYTE PTR [edi+0x50],0x70
  40896b:	in     al,dx
  40896c:	test   eax,0xc172d33a
  408971:	inc    ecx
  408972:	mov    cl,0xba
  408974:	or     esi,ebp
  408976:	cdq    
  408977:	aaa    
  408978:	cdq    
  408979:	inc    esi
  40897a:	or     DWORD PTR [esi-0x25],ebp
  40897d:	adc    al,0x8a
  40897f:	and    ah,BYTE PTR [esi+ebx*8-0x4f2f4011]
  408986:	loop   0x4089a8
  408988:	popf   
  408989:	hlt    
  40898a:	push   eax
  40898b:	dec    esp
  40898c:	xchg   BYTE PTR [ecx+0x41],bl
  40898f:	mov    dh,BYTE PTR [esi-0x2a6c1205]
  408995:	push   cs
  408996:	popa   
  408997:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408998:	xlat   BYTE PTR ds:[ebx]
  408999:	std    
  40899a:	aas    
  40899b:	shl    ebx,0x76
  40899e:	shl    BYTE PTR [edx],1
  4089a0:	jbe    0x4089c6
  4089a2:	pop    es
  4089a3:	ins    DWORD PTR es:[edi],dx
  4089a4:	mov    eax,ds:0xb194f665
  4089a9:	adc    dl,BYTE PTR [edi+0x7862d733]
  4089af:	std    
  4089b0:	mov    eax,ds:0x474e2775
  4089b5:	int    0x2b
  4089b7:	dec    ebp
  4089b8:	or     ebx,DWORD PTR [edx+edx*2]
  4089bb:	add    BYTE PTR [esi],cl
  4089bd:	push   es
  4089be:	xor    eax,0xc4a8d2a6
  4089c3:	mov    dl,dh
  4089c5:	dec    esp
  4089c6:	push   ebp
  4089c7:	test   eax,0x69d2f7b6
  4089cc:	ins    DWORD PTR es:[edi],dx
  4089cd:	pop    ebx
  4089ce:	(bad)  
  4089d0:	mov    esp,edi
  4089d2:	push   cs
  4089d3:	in     eax,0x89
  4089d5:	rol    DWORD PTR [ebx],cl
  4089d7:	stc    
  4089d8:	or     al,BYTE PTR [ebp-0x3870395d]
  4089de:	push   ebp
  4089df:	mov    esi,DWORD PTR [edx-0x13]
  4089e2:	inc    edi
  4089e3:	fimul  DWORD PTR [edi+0x6c]
  4089e6:	and    ch,ch
  4089e8:	repz fdiv QWORD PTR [eax+0x5c45b774]
  4089ef:	pop    es
  4089f0:	nop
  4089f1:	push   edi
  4089f2:	fnstsw WORD PTR [eax-0x7f5e527]
  4089f8:	sar    BYTE PTR [ecx+eax*1-0x7e],cl
  4089fc:	mov    edx,0xc9458170
  408a01:	les    esi,FWORD PTR [eax-0x6ed219a2]
  408a07:	xchg   edi,eax
  408a08:	push   ds
  408a09:	mov    dh,0x45
  408a0b:	dec    esi
  408a0c:	sahf   
  408a0d:	daa    
  408a0e:	into   
  408a0f:	rcr    BYTE PTR [esi],cl
  408a11:	mov    edx,0x11b1ee6a
  408a16:	add    ah,BYTE PTR [edx+0x22]
  408a19:	or     al,0x3a
  408a1b:	out    dx,al
  408a1c:	mov    bl,0xf
  408a1e:	shr    BYTE PTR [ecx+ebx*1+0x20],0x18
  408a23:	push   es
  408a24:	sbb    ah,BYTE PTR [edi+0x4b]
  408a27:	fsub   st(4),st
  408a29:	dec    ebp
  408a2a:	push   ebp
  408a2b:	aas    
  408a2c:	je     0x4089eb
  408a2e:	dec    ecx
  408a2f:	jecxz  0x4089de
  408a31:	test   BYTE PTR [ebp-0x23e1cf5a],al
  408a37:	xor    BYTE PTR [esi],dh
  408a39:	das    
  408a3a:	jb     0x408ab0
  408a3c:	mov    edi,0xafe6455c
  408a41:	repz inc ebp
  408a43:	and    ch,BYTE PTR [esi+eax*8+0x7f]
  408a47:	mov    al,ds:0x4f8ddb1c
  408a4c:	or     DWORD PTR [edx-0x16f69b00],0xafe5e208
  408a56:	into   
  408a57:	sub    BYTE PTR [eax],cl
  408a59:	cmp    esi,DWORD PTR [eax+0x50cf3710]
  408a5f:	shl    DWORD PTR [esi-0xf],cl
  408a62:	mov    esp,DWORD PTR [ebx-0x68]
  408a65:	fwait
  408a66:	xor    al,0x2e
  408a68:	sbb    eax,0xe44c35ce
  408a6d:	in     al,dx
  408a6e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408a6f:	aam    0x97
  408a71:	jl     0x408a23
  408a73:	jnp    0x408ae9
  408a75:	add    al,0x81
  408a77:	xchg   ax,ax
  408a79:	(bad)  
  408a7a:	mov    esi,DWORD PTR [edi]
  408a7c:	popa   
  408a7d:	mov    ebx,0xdb22717f
  408a82:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408a83:	cmp    eax,0x933360eb
  408a88:	daa    
  408a89:	dec    eax
  408a8a:	adc    eax,0x902d9f8d
  408a8f:	inc    eax
  408a90:	mov    dl,0xdf
  408a92:	aas    
  408a93:	dec    ebp
  408a94:	push   ss
  408a95:	xlat   BYTE PTR ds:[ebx]
  408a96:	popf   
  408a97:	sub    esi,edi
  408a99:	add    BYTE PTR [edx],bh
  408a9b:	fcom   DWORD PTR [edi+0x13]
  408a9e:	(bad)  
  408a9f:	lahf   
  408aa0:	inc    edx
  408aa1:	outs   dx,BYTE PTR ds:[esi]
  408aa2:	out    0x2f,al
  408aa4:	mov    WORD PTR [eax],?
  408aa6:	and    DWORD PTR [edx+0x2c],eax
  408aa9:	in     al,0x4a
  408aab:	popf   
  408aac:	(bad)  
  408aad:	jp     0x408a7e
  408aaf:	(bad)  
  408ab0:	shl    bh,cl
  408ab2:	ins    BYTE PTR es:[edi],dx
  408ab3:	(bad)  
  408ab4:	int    0x7c
  408ab6:	mov    eax,ds:0xc0281161
  408abb:	cmp    eax,0x95a1da5d
  408ac0:	and    al,0x7a
  408ac2:	lods   al,BYTE PTR ds:[esi]
  408ac3:	cli    
  408ac4:	ds jle 0x408af7
  408ac7:	mov    eax,0x81405ba2
  408acc:	jne    0x408a78
  408ace:	aam    0xfc
  408ad0:	or     BYTE PTR [esp+0x7c9ef415],bh
  408ad7:	clc    
  408ad8:	(bad)  
  408ada:	mov    ds,WORD PTR [ebx]
  408adc:	dec    eax
  408add:	scas   al,BYTE PTR es:[edi]
  408ade:	jne    0x408b01
  408ae0:	lock mov ?,WORD PTR [ebx-0x48ebe549]
  408ae7:	lock jge 0x408af0
  408aea:	outs   dx,DWORD PTR ds:[esi]
  408aeb:	dec    eax
  408aec:	ds pop edx
  408aee:	sub    eax,0x3e92258a
  408af3:	hlt    
  408af4:	push   DWORD PTR [ecx]
  408af6:	or     BYTE PTR [ebp+0x34],cl
  408af9:	out    dx,eax
  408afa:	inc    ebx
  408afb:	test   eax,0x8351e9d3
  408b00:	(bad)  [edi-0x65]
  408b03:	pop    ss
  408b04:	push   ebx
  408b05:	xchg   BYTE PTR [ebx+0x59],ah
  408b08:	xchg   ebp,eax
  408b09:	dec    edi
  408b0a:	pop    edi
  408b0b:	loop   0x408b8c
  408b0d:	cdq    
  408b0e:	mov    ds:0x8a21b012,eax
  408b13:	shr    DWORD PTR [ecx],cl
  408b15:	fdivr  DWORD PTR [esi+0x61f59480]
  408b1b:	out    dx,eax
  408b1c:	xlat   BYTE PTR ds:[ebx]
  408b1d:	push   cs
  408b1e:	mov    dl,BYTE PTR [edx]
  408b20:	ins    BYTE PTR es:[edi],dx
  408b21:	loop   0x408b64
  408b23:	adc    BYTE PTR [ebp-0x4095a549],ah
  408b29:	sbb    BYTE PTR [edi],cl
  408b2b:	inc    ebp
  408b2c:	imul   esp,DWORD PTR [edx+eax*1],0xffffffd9
  408b30:	or     BYTE PTR [ebx-0x11],cl
  408b33:	aas    
  408b34:	inc    edi
  408b35:	cmp    al,0x36
  408b37:	add    dh,BYTE PTR [ebx+0x25]
  408b3a:	les    ecx,FWORD PTR [eax+ebp*4-0x37]
  408b3e:	pusha  
  408b3f:	out    0x98,eax
  408b41:	jl     0x408afe
  408b43:	pop    es
  408b44:	jecxz  0x408b63
  408b46:	gs push ss
  408b48:	(bad)  
  408b49:	dec    edi
  408b4a:	pop    ebx
  408b4b:	adc    ecx,DWORD PTR [esi-0x16]
  408b4e:	push   eax
  408b4f:	stos   DWORD PTR es:[edi],eax
  408b50:	or     al,0x3f
  408b52:	mov    ebp,0xf53924fc
  408b57:	mov    ebp,0xfbba5c6f
  408b5c:	out    dx,eax
  408b5d:	cld    
  408b5e:	enter  0x68ee,0xf3
  408b62:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408b63:	(bad)  
  408b64:	(bad)  
  408b65:	rol    BYTE PTR [ecx],1
  408b67:	and    BYTE PTR [edx-0x5d],0xc3
  408b6b:	pop    eax
  408b6c:	leave  
  408b6d:	int    0x87
  408b6f:	jge    0x408b6f
  408b71:	lock fs push ebp
  408b74:	jge    0x408b55
  408b76:	cwde   
  408b77:	mov    ds:0x1b2a7f44,al
  408b7c:	dec    ecx
  408b7d:	and    DWORD PTR [edi],eax
  408b7f:	mov    ecx,0x614e9713
  408b84:	mov    ch,0xc2
  408b86:	jmp    0xac7f:0x4a33a724
  408b8d:	popf   
  408b8e:	(bad)  
  408b8f:	sar    esi,1
  408b91:	daa    
  408b92:	loopne 0x408b8b
  408b94:	push   0xcdb86edf
  408b99:	les    ecx,FWORD PTR [esi]
  408b9b:	add    eax,DWORD PTR [edi+0x2a72c808]
  408ba1:	jae    0x408bb3
  408ba3:	mov    ebp,0x85ad4714
  408ba8:	add    BYTE PTR [eax+edx*2-0x4167601d],ch
  408baf:	xchg   ecx,eax
  408bb0:	adc    ebx,DWORD PTR [ecx-0x6b]
  408bb3:	jmp    0x408c0b
  408bb5:	sbb    eax,0xb2e73a28
  408bba:	sub    eax,0x3f387d19
  408bbf:	bnd jbe 0x408b67
  408bc2:	add    al,0x97
  408bc4:	or     ebp,esp
  408bc6:	pop    eax
  408bc7:	scas   al,BYTE PTR es:[edi]
  408bc8:	ret    0x2558
  408bcb:	adc    BYTE PTR [esi+0x74],0xef
  408bcf:	rcl    DWORD PTR [ebx-0x80],cl
  408bd2:	mov    eax,0xb097c16f
  408bd7:	adc    BYTE PTR ds:0xad3c41e2,bl
  408bdd:	pusha  
  408bde:	iret   
  408bdf:	gs fwait
  408be1:	test   DWORD PTR [esi+eiz*1],ecx
  408be4:	js     0x408c2f
  408be6:	jmp    0x3a577e9f
  408beb:	clc    
  408bec:	in     al,dx
  408bed:	sti    
  408bee:	mov    WORD PTR [ecx-0x60],ss
  408bf1:	fdiv   st(3),st
  408bf3:	or     dh,BYTE PTR [edx+0x6a]
  408bf6:	jne    0x408b86
  408bf8:	sub    dl,BYTE PTR [edx+0x1a]
  408bfb:	dec    esi
  408bfc:	pop    ecx
  408bfd:	pop    eax
  408bfe:	inc    esi
  408bff:	fwait
  408c00:	(bad)  
  408c01:	out    dx,al
  408c02:	adc    eax,0x446a4eae
  408c07:	add    cl,BYTE PTR ds:0xb327c169
  408c0d:	mov    eax,ds:0x734f4c50
  408c12:	rol    BYTE PTR ds:0xfe6b1711,cl
  408c18:	mov    ds,WORD PTR [edx-0x68db5c43]
  408c1e:	mov    eax,0x513c900b
  408c23:	dec    eax
  408c24:	pop    edi
  408c25:	popf   
  408c26:	out    0x8a,eax
  408c28:	jo     0x408c38
  408c2a:	(bad)
  408c2e:	icebp  
  408c2f:	clc    
  408c30:	adc    eax,esi
  408c32:	push   cs
  408c33:	ins    DWORD PTR es:[edi],dx
  408c34:	adc    bh,BYTE PTR [esi]
  408c36:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408c37:	fldlg2 
  408c39:	push   cs
  408c3a:	inc    esp
  408c3b:	dec    eax
  408c3c:	mov    esp,0x5287066c
  408c41:	xchg   edi,eax
  408c42:	and    ah,BYTE PTR [edx+ecx*2-0x40d5c1e5]
  408c49:	mov    BYTE PTR [esi-0x31],bl
  408c4c:	inc    edx
  408c4d:	in     al,dx
  408c4e:	mov    dl,bl
  408c50:	and    DWORD PTR [eax],esp
  408c52:	sub    esi,ecx
  408c54:	mov    ebp,0xcb383eaa
  408c59:	xchg   edi,eax
  408c5a:	xor    eax,DWORD PTR [ebx]
  408c5c:	stos   DWORD PTR es:[edi],eax
  408c5d:	jns    0x408c4e
  408c5f:	xchg   ebp,eax
  408c60:	inc    esp
  408c61:	mov    eax,0x28e64daf
  408c66:	shl    BYTE PTR [ebx+0x289a9ed1],cl
  408c6c:	add    al,0x4e
  408c6e:	push   eax
  408c6f:	fcomp  QWORD PTR [ecx+0x57e7d9dd]
  408c75:	daa    
  408c76:	call   0x758e26c6
  408c7b:	push   ds
  408c7c:	test   BYTE PTR [edi],al
  408c7e:	dec    dh
  408c80:	pop    edx
  408c81:	mov    ebp,0xd74e326a
  408c86:	dec    esi
  408c87:	xor    BYTE PTR cs:[ecx+eiz*1],al
  408c8b:	sbb    DWORD PTR [ebp-0x52],edx
  408c8e:	push   0x91f14560
  408c93:	cs aas 
  408c95:	lods   eax,DWORD PTR ds:[esi]
  408c96:	jecxz  0x408d01
  408c98:	xor    ecx,eax
  408c9a:	push   esi
  408c9b:	cdq    
  408c9c:	mov    al,BYTE PTR [edi]
  408c9e:	push   0x4
  408ca0:	jnp    0x408d14
  408ca2:	lods   al,BYTE PTR ds:[si]
  408ca4:	fwait
  408ca5:	jg     0x408c2e
  408ca7:	data16 test al,0xa0
  408caa:	gs xchg esi,eax
  408cac:	icebp  
  408cad:	clc    
  408cae:	pusha  
  408caf:	outs   dx,DWORD PTR ds:[esi]
  408cb0:	data16 jge 0x408c49
  408cb3:	shr    BYTE PTR [esi],0xdc
  408cb6:	ficomp DWORD PTR ss:[ecx+edx*4-0x61ce2010]
  408cbe:	stc    
  408cbf:	aas    
  408cc0:	xor    al,0xd5
  408cc2:	clc    
  408cc3:	pop    ecx
  408cc4:	inc    ebx
  408cc5:	mov    ah,0xd1
  408cc7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408cc8:	out    dx,eax
  408cc9:	add    BYTE PTR [eax-0x61],bh
  408ccc:	jne    0x408ca1
  408cce:	fdivr  DWORD PTR [ecx]
  408cd0:	pusha  
  408cd1:	sbb    BYTE PTR [edi-0x5ee35288],bl
  408cd7:	sahf   
  408cd8:	sbb    BYTE PTR [esi+0x13],ch
  408cdb:	cmp    eax,0xf4cd865f
  408ce0:	sub    al,BYTE PTR es:[ecx+eiz*4-0x5f]
  408ce5:	into   
  408ce6:	cmc    
  408ce7:	jb     0x408d30
  408ce9:	pushf  
  408cea:	mov    edx,0xef424179
  408cef:	push   edx
  408cf0:	ins    BYTE PTR es:[edi],dx
  408cf1:	retf   0xb55
  408cf4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408cf5:	push   ecx
  408cf6:	jecxz  0x408d64
  408cf8:	dec    esi
  408cf9:	into   
  408cfa:	fisub  WORD PTR [esi-0x10bed370]
  408d00:	ret    
  408d01:	out    dx,eax
  408d02:	xchg   esp,eax
  408d03:	jbe    0x408ceb
  408d05:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408d06:	push   esi
  408d07:	cmp    eax,0xa9982149
  408d0c:	push   ss
  408d0d:	fnstenv [ebp+0x37]
  408d10:	xchg   ecx,eax
  408d11:	xlat   BYTE PTR ds:[ebx]
  408d12:	add    ah,BYTE PTR [esi+0x56]
  408d15:	lea    esi,[edx-0x65]
  408d18:	retf   0xb5d5
  408d1b:	push   esp
  408d1c:	inc    ebx
  408d1d:	fiadd  DWORD PTR [edx+0x427347fa]
  408d23:	or     esi,eax
  408d25:	or     ah,BYTE PTR [edx-0x45]
  408d28:	and    al,0xff
  408d2a:	jne    0x408cd6
  408d2c:	test   DWORD PTR [edx-0x68],ebx
  408d2f:	sahf   
  408d30:	xchg   esi,eax
  408d31:	sub    DWORD PTR [esi+0x467169fb],esp
  408d37:	mov    ecx,0x4d2bd7f7
  408d3c:	adc    DWORD PTR [ebp+esi*1+0x7c],esi
  408d40:	fwait
  408d41:	leave  
  408d42:	out    dx,eax
  408d43:	mov    ebx,0xec083215
  408d48:	lahf   
  408d49:	sahf   
  408d4a:	shr    DWORD PTR [ebp-0xa],1
  408d4d:	sbb    eax,0xc5231c66
  408d52:	mov    al,ds:0x76b6fbab
  408d57:	shl    ch,cl
  408d59:	sbb    esp,edx
  408d5b:	adc    edi,edx
  408d5d:	pop    esp
  408d5e:	or     DWORD PTR [eax-0x5a],eax
  408d61:	outs   dx,BYTE PTR ds:[esi]
  408d62:	inc    edx
  408d63:	data16 rcr BYTE PTR [eax+0x8f38cea],1
  408d6a:	loop   0x408cf1
  408d6c:	dec    ecx
  408d6d:	(bad)  
  408d6e:	mov    al,0x43
  408d70:	mov    ds:0x332815d3,al
  408d75:	mov    ch,0x31
  408d77:	xlat   BYTE PTR ds:[ebx]
  408d78:	dec    ebp
  408d79:	push   ss
  408d7a:	add    al,BYTE PTR [esi]
  408d7c:	push   es
  408d7d:	ret    
  408d7e:	jmp    0x6308:0x78a2416f
  408d85:	hlt    
  408d86:	and    BYTE PTR ds:0x8e067dc,ch
  408d8c:	mov    eax,ds:0x11388bd4
  408d91:	lods   eax,DWORD PTR ds:[esi]
  408d92:	gs cmp al,0x89
  408d95:	mov    ch,0x4e
  408d97:	pusha  
  408d98:	jmp    0x408d49
  408d9a:	mov    al,0x8c
  408d9c:	pop    ds
  408d9d:	and    ch,BYTE PTR [edx+0x30]
  408da0:	xchg   ecx,eax
  408da1:	js     0x408d8d
  408da3:	dec    esi
  408da4:	pop    ss
  408da5:	fist   WORD PTR [esi-0x34]
  408da8:	and    ebp,DWORD PTR [eax]
  408daa:	mul    ebp
  408dac:	add    eax,0x2f1a5d0a
  408db1:	cdq    
  408db2:	(bad)  
  408db3:	aas    
  408db4:	(bad)  
  408db5:	std    
  408db6:	aam    0xd3
  408db8:	sub    eax,ebp
  408dba:	(bad)  
  408dbb:	jg     0x408d3d
  408dbd:	int    0x95
  408dbf:	mov    ebx,DWORD PTR [edi]
  408dc1:	xchg   esi,eax
  408dc2:	xchg   edi,eax
  408dc3:	or     ecx,edi
  408dc5:	jl     0x408dad
  408dc7:	cmp    BYTE PTR [ebx-0x43c0b2f9],cl
  408dcd:	ret    0x6db
  408dd0:	jmp    0x408da2
  408dd2:	imul   eax,DWORD PTR [esi+0x6d],0xb756ac35
  408dd9:	imul   edx,DWORD PTR [esi+ebp*1],0x83572e82
  408de0:	mov    esp,0x1055bd97
  408de5:	ror    DWORD PTR [ebx-0x63a311f0],cl
  408deb:	jae    0x408e22
  408ded:	icebp  
  408dee:	cdq    
  408def:	cli    
  408df0:	jmp    0x408d7e
  408df2:	cmp    BYTE PTR [ecx],dh
  408df4:	iret   
  408df5:	push   0xffffffb0
  408df7:	add    ebp,DWORD PTR [edi]
  408df9:	sbb    eax,0xd6444c9d
  408dfe:	(bad)  
  408dff:	adc    ebp,DWORD PTR [ebp+ebp*2+0x40]
  408e03:	push   es
  408e04:	in     al,0x65
  408e06:	dec    eax
  408e07:	imul   esp,DWORD PTR [edi],0x6
  408e0a:	mov    edx,0x4c2880d1
  408e0f:	sti    
  408e10:	jmp    0x26f6:0x560109a9
  408e17:	gs pop esp
  408e19:	aas    
  408e1a:	ss clc 
  408e1c:	cwde   
  408e1d:	ins    DWORD PTR es:[edi],dx
  408e1e:	jns    0x408e91
  408e20:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408e21:	jge    0x408ea0
  408e23:	call   0x7529936e
  408e28:	(bad)  
  408e29:	sbb    DWORD PTR [eax+0x5c],edx
  408e2c:	mov    ds:0x7aa31bf7,eax
  408e31:	adc    eax,0x593e796b
  408e36:	dec    ecx
  408e37:	xor    eax,0x5ddbf050
  408e3c:	cmp    eax,0xbfcbac13
  408e41:	arpl   WORD PTR [ebp-0x6520eddf],di
  408e47:	or     ebp,DWORD PTR [edx+0x216537a3]
  408e4d:	aad    0xa8
  408e4f:	mov    ecx,0x95a35156
  408e54:	ss stos BYTE PTR es:[edi],al
  408e56:	add    al,0xe8
  408e58:	xor    ch,BYTE PTR [eax-0x80]
  408e5b:	pusha  
  408e5c:	mov    ah,0x9
  408e5e:	int    0xd3
  408e60:	fiadd  DWORD PTR [ebx]
  408e62:	aam    0xf4
  408e64:	push   0x212e49fd
  408e69:	pop    ss
  408e6a:	mov    WORD PTR [ebx-0x33],cs
  408e6d:	and    dl,ch
  408e6f:	inc    ecx
  408e70:	pop    ecx
  408e71:	fnsave [edi-0x30]
  408e74:	sbb    DWORD PTR [ebx-0x5f],edi
  408e77:	sub    al,0xaf
  408e7a:	test   BYTE PTR [ecx+0x739e52ea],0xf5
  408e81:	xchg   esp,eax
  408e82:	mov    ecx,0x257ecfa3
  408e87:	out    dx,al
  408e88:	sti    
  408e89:	xor    al,0x54
  408e8b:	push   esp
  408e8c:	imul   ecx,DWORD PTR [ecx],0xfffffffa
  408e8f:	adc    cl,0xdc
  408e92:	data16 fstp DWORD PTR [ebx]
  408e95:	(bad)  
  408e97:	sub    edi,DWORD PTR [ecx+0x7e01f7e0]
  408e9d:	mov    dl,dl
  408e9f:	xchg   esp,eax
  408ea0:	mov    ch,0x86
  408ea2:	ins    BYTE PTR es:[edi],dx
  408ea3:	ror    BYTE PTR [ecx+0x7e],cl
  408ea6:	jecxz  0x408e41
  408ea8:	add    ch,BYTE PTR [edx]
  408eaa:	xchg   esi,eax
  408eab:	mov    eax,0x901f54af
  408eb0:	fist   DWORD PTR [esi+eiz*1-0x52]
  408eb4:	dec    ebp
  408eb5:	mov    esp,esi
  408eb7:	mov    eax,0xa1f7d73
  408ebc:	push   eax
  408ebd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408ebe:	sub    al,0x46
  408ec0:	loope  0x408ea2
  408ec2:	mov    al,0x10
  408ec4:	mov    ecx,0x611b519c
  408ec9:	(bad)  
  408eca:	mov    cl,0x5
  408ecc:	int    0x53
  408ece:	out    dx,al
  408ecf:	cmc    
  408ed0:	jae    0x408e61
  408ed2:	cmc    
  408ed3:	dec    esp
  408ed4:	add    BYTE PTR [ebx],ch
  408ed6:	push   es
  408ed7:	mov    ds:0x1a9a625b,eax
  408edc:	mov    al,0xdf
  408ede:	push   esi
  408edf:	mov    eax,ds:0xf2826a26
  408ee4:	call   0xc8b8:0x78e22028
  408eeb:	je     0x408f55
  408eed:	test   eax,0x80946db
  408ef2:	test   BYTE PTR [esi+0x5c385165],ch
  408ef8:	xor    BYTE PTR [esi+eax*4+0x46],0x9c
  408efd:	ss or  al,0xd7
  408f00:	mov    DWORD PTR [edx-0x1cfa1782],esp
  408f06:	rcr    BYTE PTR [ebp+0x78568f3a],cl
  408f0c:	outs   dx,DWORD PTR ds:[esi]
  408f0d:	addr16 shr esi,1
  408f10:	(bad)  
  408f11:	(bad)  
  408f12:	pop    ebx
  408f13:	scas   eax,DWORD PTR es:[edi]
  408f14:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408f15:	mov    eax,0x88a0d5cd
  408f1a:	jb     0x408f0a
  408f1c:	dec    eax
  408f1d:	fxch   st(1)
  408f1f:	xor    eax,0xba38b4b7
  408f24:	and    BYTE PTR [ebp+0x6e],dh
  408f27:	pop    ebx
  408f28:	mov    bh,0xfc
  408f2a:	jmp    0xcbec:0x833db8eb
  408f31:	lock or DWORD PTR [ecx],edi
  408f34:	pop    ebx
  408f35:	push   ecx
  408f36:	in     al,0xae
  408f38:	jmp    0x6a2571a6
  408f3d:	dec    edi
  408f3e:	fwait
  408f3f:	mov    ds:0xc2930627,eax
  408f44:	or     ecx,DWORD PTR [edi]
  408f46:	into   
  408f47:	mov    dl,0x79
  408f49:	in     al,0xe6
  408f4b:	jmp    0xbd80:0xbb07
  408f51:	std    
  408f52:	out    dx,al
  408f53:	cmp    DWORD PTR [ecx+ebx*1+0x14b8849],0xffffff91
  408f5b:	aad    0x3a
  408f5d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408f5e:	mov    esi,0x6199943e
  408f63:	lock and eax,0xbbc4c344
  408f69:	pop    ds
  408f6a:	es inc edi
  408f6c:	xchg   edi,eax
  408f6d:	mov    bh,0xa5
  408f6f:	mov    edx,0x50f1e6c3
  408f74:	mov    eax,ds:0x5e58acda
  408f79:	fistp  WORD PTR [esi-0x2c78ef44]
  408f7f:	mov    edx,DWORD PTR [eax-0x453ac0fb]
  408f85:	loope  0x408f8c
  408f87:	dec    ecx
  408f88:	inc    esi
  408f89:	mov    cl,0x5a
  408f8b:	push   cs
  408f8c:	rcr    BYTE PTR [edx],cl
  408f8e:	or     DWORD PTR [ebp+0x4469c78f],ebx
  408f94:	out    0x76,al
  408f96:	retf   
  408f97:	stos   BYTE PTR es:[edi],al
  408f98:	xchg   ebp,eax
  408f99:	int    0xd1
  408f9b:	test   eax,0x6848016d
  408fa0:	sti    
  408fa1:	push   edi
  408fa2:	xchg   dx,ax
  408fa4:	fnstenv ds:0x74ca16c1
  408faa:	ins    BYTE PTR es:[edi],dx
  408fab:	in     al,0x36
  408fad:	out    0x72,al
  408faf:	push   edi
  408fb0:	mov    bh,0xe6
  408fb2:	xchg   ebp,eax
  408fb3:	and    DWORD PTR es:[ecx],edi
  408fb6:	mov    WORD PTR [ebp-0x62],fs
  408fb9:	inc    edi
  408fba:	test   BYTE PTR [eax+0x41223f79],al
  408fc0:	jmp    0x409014
  408fc2:	dec    edi
  408fc3:	sbb    al,BYTE PTR [edx]
  408fc5:	mov    eax,0x8707a7d0
  408fca:	xchg   edx,eax
  408fcb:	pop    ecx
  408fcc:	xchg   BYTE PTR [edi],ch
  408fce:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408fcf:	mov    esp,0x9073c138
  408fd4:	(bad)  
  408fd5:	leave  
  408fd6:	dec    edi
  408fd7:	aad    0x9
  408fd9:	mov    edx,0x56a5f4b6
  408fde:	les    esi,FWORD PTR [edx-0x4ac95470]
  408fe4:	pop    edx
  408fe5:	xchg   esi,eax
  408fe6:	into   
  408fe7:	addr16 push ebx
  408fe9:	add    al,dh
  408feb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408fec:	pop    ebx
  408fed:	mov    ?,eax
  408fef:	daa    
  408ff0:	ret    
  408ff1:	cmp    al,0xc1
  408ff3:	in     eax,dx
  408ff4:	cwde   
  408ff5:	retw   0x2755
  408ff9:	lock or al,0xca
  408ffc:	pop    ecx
  408ffd:	fisttp WORD PTR [edi-0x59]
  409000:	or     bh,cl
  409002:	and    al,0x3d
  409004:	jmp    0x720f10bd
  409009:	out    dx,al
  40900a:	or     edi,edi
  40900c:	dec    edx
  40900d:	jbe    0x408ff0
  40900f:	jb     0x408f97
  409011:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409012:	add    DWORD PTR ds:0x56fc4dd,esp
  409018:	fsubr  QWORD PTR [ebx+0x17]
  40901b:	into   
  40901c:	push   ds
  40901d:	sbb    DWORD PTR [edx+0x1e60349e],esp
  409023:	pop    ss
  409024:	xor    al,0xf6
  409026:	iret   
  409027:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409028:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409029:	ret    
  40902a:	loop   0x409040
  40902c:	jmp    0x408ff9
  40902e:	mov    WORD PTR [esi+0x1e],es
  409031:	jmp    0xa51:0x2e2df81f
  409038:	neg    DWORD PTR [esi+edx*1+0x4c]
  40903c:	push   ds
  40903d:	(bad)  
  40903e:	sahf   
  40903f:	std    
  409040:	cmp    al,al
  409042:	adc    ah,dh
  409044:	jno    0x40902f
  409046:	sbb    BYTE PTR [ebx],ch
  409048:	mov    edi,0x1b41d62d
  40904d:	jo     0x40908a
  40904f:	sbb    ebp,DWORD PTR [edx]
  409051:	loope  0x4090ab
  409053:	(bad)  
  409054:	cmp    ebx,esi
  409056:	iret   
  409057:	adc    al,0x2e
  409059:	adc    al,0x19
  40905b:	imul   esi,DWORD PTR [eax-0x2e],0xe731b685
  409062:	mov    ecx,0xd9e04cfb
  409067:	fdivr  st,st(3)
  409069:	out    dx,eax
  40906a:	mov    edi,DWORD PTR [ebx-0x19]
  40906d:	xchg   BYTE PTR [esi-0x79],ch
  409070:	ficomp WORD PTR [ecx]
  409072:	rcl    DWORD PTR [ecx+0x70dc0b78],cl
  409078:	xchg   DWORD PTR [edx],edi
  40907a:	push   ecx
  40907b:	mov    BYTE PTR [esi+0x31572ad1],0x26
  409082:	std    
  409083:	push   cs
  409084:	and    cl,dh
  409086:	out    0xa9,al
  409088:	sub    al,0xd0
  40908a:	mov    ebx,0xc22eff92
  40908f:	lock aad 0xfb
  409092:	fisubr WORD PTR [edi+0x32e2a8c9]
  409098:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409099:	ret    
  40909a:	shl    DWORD PTR [ebp-0x23],0x86
  40909e:	jno    0x4090d9
  4090a0:	jle    0x40904e
  4090a2:	lock push edx
  4090a4:	mov    ebx,0x7bf26715
  4090a9:	pop    esi
  4090aa:	fadd   QWORD PTR [esi]
  4090ac:	int    0x3a
  4090ae:	pop    edx
  4090af:	pop    ss
  4090b0:	jge    0x409079
  4090b2:	mov    eax,ds:0xe4c2ac86
  4090b7:	sbb    eax,0x391b1eea
  4090bc:	jecxz  0x4090ad
  4090be:	ret    
  4090bf:	cli    
  4090c0:	mov    ds:0x56be2c8e,eax
  4090c5:	scas   eax,DWORD PTR es:[edi]
  4090c6:	loopne 0x40906b
  4090c8:	cli    
  4090c9:	mov    dl,BYTE PTR [edx]
  4090cb:	mov    DWORD PTR [ecx],eax
  4090cd:	fsubr  QWORD PTR [ebp+eax*2-0x4ffe4d7a]
  4090d4:	push   edx
  4090d5:	ins    BYTE PTR es:[edi],dx
  4090d6:	stos   DWORD PTR es:[edi],eax
  4090d7:	or     DWORD PTR [edi-0x520be802],0xffffff8f
  4090de:	(bad)  
  4090df:	inc    ebx
  4090e0:	xchg   esi,eax
  4090e1:	addr16 leave 
  4090e3:	inc    eax
  4090e4:	stos   BYTE PTR es:[edi],al
  4090e5:	outs   dx,DWORD PTR fs:[esi]
  4090e7:	lahf   
  4090e8:	test   dl,ah
  4090ea:	xchg   ebp,eax
  4090eb:	call   0xd5ed:0xf173bdc6
  4090f2:	aam    0x17
  4090f4:	cmp    BYTE PTR [esi+0x14cd3e96],dh
  4090fa:	xor    al,0xa
  4090fc:	into   
  4090fd:	or     eax,0xecfc0b56
  409102:	ss ds call 0x39ed:0x2c72529e
  40910b:	out    dx,al
  40910c:	in     eax,0xd4
  40910e:	(bad)  
  40910f:	and    BYTE PTR [ebp+0x529f0b27],0xfe
  409116:	hlt    
  409117:	inc    ebp
  409118:	in     al,dx
  409119:	xchg   edi,eax
  40911a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40911b:	inc    edi
  40911c:	daa    
  40911d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40911e:	test   BYTE PTR [edx],bl
  409120:	in     al,dx
  409121:	clc    
  409122:	push   eax
  409123:	inc    esp
  409124:	out    dx,al
  409125:	inc    ebp
  409126:	test   al,0xd7
  409128:	add    eax,0xaa014795
  40912d:	outs   dx,BYTE PTR ds:[esi]
  40912e:	call   0x26e9ff4d
  409133:	(bad)  
  409134:	or     DWORD PTR [esi+0x287cc162],edi
  40913a:	adc    DWORD PTR [ebx],ebp
  40913c:	scas   al,BYTE PTR es:[edi]
  40913d:	add    al,0xa
  40913f:	pop    esp
  409140:	icebp  
  409141:	(bad)  
  409142:	mov    eax,0x41188cbf
  409147:	int    0x94
  409149:	inc    edx
  40914a:	retf   0x9248
  40914d:	in     al,0xc2
  40914f:	cdq    
  409150:	pop    edx
  409151:	inc    ebp
  409152:	jg     0x409127
  409154:	jge    0x40911c
  409156:	repz cmp edi,ebx
  409159:	pushf  
  40915a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40915b:	sbb    BYTE PTR [esi+0xd],0xc7
  40915f:	out    0x37,eax
  409161:	jge    0x40914d
  409163:	jg     0x409133
  409165:	aam    0x96
  409167:	xchg   ebp,eax
  409168:	mov    esi,0x468e722c
  40916d:	or     eax,0x6ccfe1d2
  409172:	cmp    ecx,DWORD PTR [ecx-0x710ddbe1]
  409178:	mov    cl,0x6a
  40917a:	push   cs
  40917b:	mov    dl,0x36
  40917d:	adc    al,BYTE PTR [esi]
  40917f:	jle    0x40914e
  409181:	mov    gs,ebp
  409183:	nop
  409184:	ret    0xfcc
  409187:	sbb    DWORD PTR [eax+0x19],edx
  40918a:	shl    BYTE PTR [edx-0x232471e7],1
  409190:	ja     0x409114
  409192:	mov    ds:0x98fa93e3,al
  409197:	out    0x4c,eax
  409199:	xor    eax,0x7f163fca
  40919e:	push   ds
  40919f:	cmp    BYTE PTR [edi-0x57],al
  4091a2:	iret   
  4091a3:	aam    0x1a
  4091a5:	(bad)  [edx]
  4091a7:	cld    
  4091a8:	loope  0x40916e
  4091aa:	push   ds
  4091ab:	adc    eax,0x31d06f79
  4091b0:	pop    edx
  4091b1:	into   
  4091b2:	jmp    0x4091f1
  4091b4:	inc    esp
  4091b5:	repz pop edx
  4091b8:	call   0x997010a7
  4091bd:	push   cs
  4091be:	(bad)  [ecx+0x5f]
  4091c1:	fsubr  st(2),st
  4091c3:	push   eax
  4091c4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4091c5:	cmp    DWORD PTR [ecx],ebp
  4091c7:	adc    al,0x4b
  4091c9:	ins    BYTE PTR es:[edi],dx
  4091ca:	push   eax
  4091cb:	jbe    0x4091bc
  4091cd:	mov    ds:0x9484f122,eax
  4091d2:	and    DWORD PTR [edi+0x1e2cb0be],esi
  4091d8:	jae    0x409205
  4091da:	test   al,0x20
  4091dc:	out    0x88,eax
  4091de:	(bad)  
  4091df:	cmovl  ebp,DWORD PTR [ecx]
  4091e2:	or     bh,0x82
  4091e5:	cli    
  4091e6:	xchg   esi,eax
  4091e7:	mov    WORD PTR [ebx+eiz*1-0x1],?
  4091eb:	gs (bad) 
  4091ed:	call   FWORD PTR [edx-0x5f]
  4091f0:	xchg   edi,eax
  4091f2:	xor    eax,0xad4e2cde
  4091f7:	fs xchg esi,eax
  4091f9:	lahf   
  4091fa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4091fb:	int3   
  4091fc:	mov    ecx,0x283ebfb9
  409201:	dec    ebp
  409202:	sub    al,BYTE PTR [ebx]
  409204:	pop    ebp
  409205:	popf   
  409206:	jbe    0x40926c
  409208:	mov    ds:0xa8e71e19,eax
  40920d:	mov    dl,0xb2
  40920f:	or     al,0x82
  409211:	xchg   dh,dl
  409213:	mov    ch,0xfd
  409215:	dec    eax
  409216:	stc    
  409217:	xor    DWORD PTR ds:0x16098ce,edi
  40921d:	mov    edi,0x1127c1e2
  409222:	or     ch,BYTE PTR [eax+esi*1]
  409225:	add    dl,BYTE PTR [eax-0x46f8abc8]
  40922b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40922d:	push   esp
  40922e:	das    
  40922f:	repz jmp 0x409239
  409232:	cwde   
  409233:	sbb    al,0xab
  409235:	bound  esi,QWORD PTR [si+0x1e]
  409239:	dec    ebp
  40923a:	or     al,0x26
  40923c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40923d:	pushf  
  40923e:	imul   esp,DWORD PTR [esi+0x22af3275],0x66864e4
  409248:	mov    dh,0x82
  40924a:	mov    edi,0x605c1fda
  40924f:	outs   dx,DWORD PTR ds:[esi]
  409250:	jge    0x4092a1
  409252:	inc    edx
  409253:	mov    ebx,0x98d6ba30
  409258:	xchg   ebx,eax
  409259:	or     ah,bl
  40925b:	sbb    edi,esp
  40925d:	fild   QWORD PTR [edx+0x39]
  409260:	fimul  DWORD PTR [eax-0x23b09025]
  409266:	pushf  
  409267:	ret    
  409268:	dec    edx
  409269:	fistp  WORD PTR [esi]
  40926b:	mov    bl,0x80
  40926d:	sbb    DWORD PTR [edi-0x50c5937e],edi
  409273:	push   ebp
  409274:	add    eax,0x3676b83d
  409279:	mov    bl,0x7e
  40927b:	jbe    0x4092f7
  40927d:	dec    ecx
  40927e:	dec    edx
  40927f:	loopne 0x40929f
  409281:	jnp    0x409238
  409283:	inc    ebx
  409284:	adc    dl,0x89
  409287:	cwde   
  409288:	push   esi
  409289:	in     al,0xbb
  40928b:	pop    esp
  40928c:	pop    esi
  40928d:	ja     0x409242
  40928f:	icebp  
  409290:	in     eax,0xc7
  409292:	cld    
  409293:	test   DWORD PTR [ecx-0x76191a34],edi
  409299:	adc    ah,BYTE PTR [ebp-0x1b7b3dd2]
  40929f:	pop    ds
  4092a0:	xlat   BYTE PTR ds:[ebx]
  4092a1:	(bad)  
  4092a2:	imul   ebx,esp,0xb311310a
  4092a8:	gs out dx,al
  4092aa:	sbb    al,cl
  4092ac:	test   BYTE PTR [esi-0x13],bh
  4092af:	mov    ebp,0xa049e965
  4092b5:	adc    DWORD PTR [eax],esp
  4092b7:	popf   
  4092b8:	and    al,0x12
  4092ba:	and    ebx,DWORD PTR [eax+0x5e02daa1]
  4092c0:	dec    eax
  4092c1:	add    bl,0x52
  4092c4:	loop   0x409263
  4092c6:	xchg   esi,eax
  4092c7:	pop    edi
  4092c8:	pop    ss
  4092c9:	push   edi
  4092ca:	aad    0x4e
  4092cc:	icebp  
  4092cd:	test   al,0x4e
  4092cf:	push   edx
  4092d0:	mov    edx,0x5599034c
  4092d5:	int    0x61
  4092d7:	adc    DWORD PTR [ebp-0x11b59e09],0x1644a186
  4092e1:	xor    cl,BYTE PTR [edi-0x7f949e60]
  4092e7:	sbb    eax,0xb127be42
  4092ec:	jge    0x409347
  4092ee:	int3   
  4092ef:	mov    edx,0xb8c7d5fb
  4092f4:	std    
  4092f5:	mov    ecx,0x6a99b24c
  4092fa:	push   cs
  4092fb:	inc    ecx
  4092fd:	mov    DWORD PTR [eax+esi*2-0x532843ce],ecx
  409304:	cdq    
  409305:	hlt    
  409306:	stc    
  409307:	test   BYTE PTR [ecx+0x5d],0x1c
  40930b:	test   eax,ecx
  40930d:	or     al,BYTE PTR [edi]
  40930f:	cdq    
  409310:	popf   
  409311:	jl     0x409324
  409313:	lods   eax,DWORD PTR ds:[esi]
  409314:	inc    esp
  409315:	dec    eax
  409316:	and    al,al
  409318:	fwait
  409319:	nop    ecx
  40931c:	dec    ecx
  40931d:	cmp    dh,BYTE PTR [esi+0x46]
  409320:	int3   
  409321:	clc    
  409322:	fdiv   DWORD PTR [ecx-0x31c8f212]
  409328:	jle    0x409308
  40932a:	dec    ebp
  40932b:	mov    esi,0x1fcd04d4
  409330:	sbb    bl,cl
  409332:	into   
  409333:	or     eax,0x9c715ef0
  409338:	fidivr DWORD PTR ds:0xef1b3a8e
  40933e:	(bad)  
  40933f:	mov    bh,BYTE PTR [edx]
  409341:	lea    ebx,[ebx+0xe]
  409344:	ret    
  409345:	pminsw mm7,QWORD PTR ds:[edi+0x56a364d3]
  40934d:	loopne 0x4093c5
  40934f:	out    dx,al
  409350:	mov    esi,0x8baf34af
  409355:	sbb    eax,0xe2244d50
  40935a:	mov    dl,0x3e
  40935c:	shl    DWORD PTR [ebp+esi*1+0x1],cl
  409360:	repnz lahf 
  409362:	mov    bh,dl
  409364:	aad    0x65
  409366:	or     BYTE PTR [ecx-0x55],ah
  409369:	jns    0x40937a
  40936b:	push   eax
  40936c:	loop   0x40939a
  40936e:	das    
  40936f:	inc    ecx
  409370:	je     0x409352
  409372:	jae    0x409394
  409374:	sub    esp,DWORD PTR [edx+0x3551edd7]
  40937a:	das    
  40937b:	pop    ebx
  40937c:	push   ss
  40937d:	push   eax
  40937e:	jnp    0x4093c9
  409380:	mov    eax,ds:0x7e0aa9e2
  409385:	rcr    BYTE PTR [ecx+ebp*4],cl
  409388:	fcmovu st,st(1)
  40938a:	retf   0x13dc
  40938d:	mov    esi,0x340778bd
  409392:	inc    edi
  409393:	pop    ebp
  409394:	ret    
  409395:	mov    edx,0x5eb35f22
  40939a:	cli    
  40939b:	(bad)  
  40939c:	mov    dl,0xa1
  40939e:	mov    ss,ebx
  4093a0:	(bad)  
  4093a1:	fsubr  DWORD PTR [eax-0x7]
  4093a4:	cmp    bl,BYTE PTR [edi+0x6b]
  4093a7:	shl    ah,cl
  4093a9:	mov    esp,0x8336ce23
  4093ae:	adc    al,0x36
  4093b0:	jo     0x4093ad
  4093b2:	inc    eax
  4093b3:	jge    0x4093f1
  4093b5:	jns    0x409351
  4093b7:	push   ebx
  4093b8:	pop    edx
  4093b9:	jmp    0x7d4df4fe
  4093be:	jo     0x409350
  4093c0:	cmp    DWORD PTR [edi-0xf],0xffffff9d
  4093c4:	retf   
  4093c5:	pop    ebp
  4093c6:	inc    esp
  4093c7:	jno    0x409435
  4093c9:	rcl    DWORD PTR [ebx-0x41a02c14],1
  4093cf:	jmp    0x75ca:0x98dca2b6
  4093d6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4093d7:	lods   eax,DWORD PTR ds:[esi]
  4093d8:	adc    al,0x30
  4093da:	test   esi,ebx
  4093dc:	arpl   WORD PTR [esi],cx
  4093de:	xor    DWORD PTR [ecx-0x4c9c321c],0xffffff80
  4093e5:	arpl   WORD PTR [esi+0x73],bp
  4093e8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4093e9:	popa   
  4093ea:	mov    ds:0xb6741b65,al
  4093ef:	in     al,0x19
  4093f1:	cli    
  4093f2:	cld    
  4093f3:	lods   al,BYTE PTR ds:[esi]
  4093f4:	inc    esi
  4093f5:	or     DWORD PTR [esi-0x2c1ca6ba],edi
  4093fb:	out    0xdf,eax
  4093fd:	out    0xa6,eax
  4093ff:	pop    edx
  409400:	int3   
  409401:	test   al,0x34
  409403:	push   cs
  409404:	iret   
  409405:	dec    edx
  409406:	(bad)  
  409407:	repnz (bad) 
  409409:	in     al,dx
  40940a:	loop   0x40938e
  40940c:	out    0xfe,al
  40940e:	push   0x47a0516f
  409413:	push   ss
  409414:	fisub  WORD PTR [esi]
  409416:	sbb    DWORD PTR [edi],ecx
  409418:	bound  edx,QWORD PTR [ebp+0x53]
  40941b:	mov    esi,0x37c407c3
  409420:	add    DWORD PTR [edx],0x9136d8df
  409426:	sub    eax,0x5fa4614f
  40942b:	aad    0x5
  40942d:	scas   eax,DWORD PTR es:[edi]
  40942e:	sahf   
  40942f:	or     cl,BYTE PTR [ecx-0x32]
  409432:	out    dx,eax
  409433:	add    dl,BYTE PTR [ebx+0x486e65f]
  409439:	retf   0x63e0
  40943c:	lock cld 
  40943e:	mov    dh,BYTE PTR [eax+0x59a10f6c]
  409444:	mov    es,WORD PTR [esi]
  409446:	dec    esi
  409447:	jbe    0x40945b
  409449:	xchg   esp,eax
  40944a:	popf   
  40944b:	outs   dx,BYTE PTR ds:[esi]
  40944c:	jb     0x4093f0
  40944e:	pop    es
  40944f:	js     0x409439
  409451:	jle    0x4094b3
  409453:	sbb    DWORD PTR [ebx+0x11b12f3f],esp
  409459:	ins    DWORD PTR es:[edi],dx
  40945a:	add    eax,0x74b703da
  40945f:	(bad)  
  409460:	xchg   ecx,eax
  409461:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409463:	cmp    al,0x56
  409465:	loop   0x4094a5
  409467:	and    edi,DWORD PTR [edx+0x30]
  40946a:	sub    al,0x41
  40946c:	xchg   BYTE PTR [edx],cl
  40946e:	loope  0x40941d
  409470:	lods   eax,DWORD PTR ds:[esi]
  409471:	push   esp
  409472:	cmc    
  409473:	mov    cl,0x23
  409475:	mov    al,0x61
  409477:	sbb    eax,0x67ba8fb
  40947c:	pop    eax
  40947d:	ss aas 
  40947f:	dec    edx
  409480:	dec    ecx
  409481:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409482:	inc    ebp
  409483:	cli    
  409484:	loope  0x40946d
  409486:	xchg   ebx,eax
  409487:	and    edi,DWORD PTR [esi]
  409489:	xchg   DWORD PTR [ebp-0x7105f9c8],ecx
  40948f:	cld    
  409490:	or     DWORD PTR [ecx],0xffffffe7
  409493:	stc    
  409494:	popf   
  409495:	(bad)  
  409496:	js     0x4094ba
  409498:	sbb    al,ah
  40949a:	pushf  
  40949b:	pop    es
  40949c:	outs   dx,BYTE PTR ds:[esi]
  40949d:	pushf  
  40949e:	add    DWORD PTR [edi],ebx
  4094a0:	jl     0x4094fa
  4094a2:	or     al,0x92
  4094a4:	xchg   edx,eax
  4094a5:	out    0xce,al
  4094a7:	add    BYTE PTR [edx-0x4ca207d],dl
  4094ad:	adc    ecx,DWORD PTR [esi-0x1d]
  4094b0:	das    
  4094b1:	js     0x409511
  4094b3:	xor    al,0xba
  4094b5:	ds imul eax,ecx,0x45a0283d
  4094bc:	pop    edi
  4094bd:	inc    ebp
  4094be:	mov    al,ds:0x40c230db
  4094c3:	out    dx,al
  4094c4:	dec    ebp
  4094c5:	clc    
  4094c6:	pop    eax
  4094c7:	sbb    ah,BYTE PTR [edi-0x49]
  4094ca:	leave  
  4094cb:	rol    DWORD PTR [ecx],1
  4094cd:	jecxz  0x40949a
  4094cf:	popf   
  4094d0:	push   esp
  4094d1:	loope  0x409549
  4094d3:	mov    ch,0x53
  4094d5:	cmp    al,0xa5
  4094d7:	inc    ecx
  4094d8:	rol    DWORD PTR [ebx],1
  4094da:	sar    DWORD PTR [edi-0xb395de8],cl
  4094e0:	or     al,0x7d
  4094e2:	imul   edi,DWORD PTR [ebp-0x51],0x3e48c523
  4094e9:	cli    
  4094ea:	ds xor al,0x1d
  4094ed:	dec    esi
  4094ee:	out    dx,al
  4094ef:	repnz out 0xf1,eax
  4094f2:	inc    DWORD PTR [eax-0x51]
  4094f5:	popa   
  4094f6:	mov    ds:0x6d1989e5,al
  4094fb:	mov    ah,0x9e
  4094fd:	dec    esi
  4094fe:	cmovne esp,edi
  409501:	dec    ebx
  409502:	call   DWORD PTR [esi+ebx*4]
  409505:	cs in  al,dx
  409507:	mov    DWORD PTR [edi],ebx
  409509:	sbb    al,0x16
  40950b:	sub    al,0x51
  40950d:	fsubr  st,st(6)
  40950f:	iret   
  409510:	sub    al,0xe3
  409512:	ficomp DWORD PTR [edx-0x417d7570]
  409518:	mov    ah,0xa8
  40951a:	fld    DWORD PTR [ecx]
  40951c:	push   esp
  40951d:	or     ebx,esp
  40951f:	pop    ebp
  409520:	pop    esp
  409521:	aam    0xeb
  409523:	mov    ch,0xd4
  409525:	jno    0x40953e
  409527:	fldenv [ebx-0xdc4db8]
  40952d:	mov    ds,WORD PTR [eax]
  40952f:	aad    0x16
  409531:	pop    ds
  409532:	retf   
  409533:	ret    
  409534:	call   0x1b3430a1
  409539:	and    eax,0xe090c9c7
  40953e:	ret    0x8359
  409541:	cli    
  409542:	aas    
  409543:	shl    DWORD PTR [ebx+0x48],0x6a
  409547:	dec    edi
  409548:	xor    eax,0x4db15780
  40954d:	hlt    
  40954e:	jno    0x4094ec
  409550:	add    eax,0x9c98d86
  409555:	inc    eax
  409556:	addr16 dec ebx
  409558:	lock out dx,eax
  40955a:	and    dh,BYTE PTR [eax]
  40955c:	in     eax,dx
  40955d:	enter  0x3a08,0xc8
  409561:	mov    ecx,0x8ed135f8
  409566:	cdq    
  409567:	push   0xffffffff
  409569:	ror    BYTE PTR [edi],cl
  40956b:	add    al,0x8e
  40956d:	xchg   edi,eax
  40956e:	cmp    BYTE PTR [edi-0x52531e44],bh
  409574:	ficomp WORD PTR [edi]
  409576:	or     BYTE PTR [ecx],0xcf
  409579:	daa    
  40957a:	(bad)  
  40957b:	hlt    
  40957c:	and    al,0x6
  40957e:	mov    edx,0xc7b0e389
  409583:	push   edx
  409584:	(bad)  gs:[ecx+0x3ab4f1a9]
  40958b:	xchg   BYTE PTR [eax],dh
  40958d:	(bad)  
  40958e:	(bad)  
  40958f:	cmp    al,0x0
  409591:	xor    DWORD PTR [esi-0x4a30db88],esp
  409597:	std    
  409598:	lods   eax,DWORD PTR ds:[esi]
  409599:	push   eax
  40959a:	arpl   WORD PTR [ebx-0x6b],si
  40959d:	jo     0x4095f9
  40959f:	in     al,dx
  4095a0:	enter  0x822e,0x87
  4095a4:	mov    ds:0x436426e1,eax
  4095a9:	pop    edx
  4095aa:	arpl   WORD PTR [esi],sp
  4095ac:	lock adc eax,0x8be25a99
  4095b2:	add    ch,BYTE PTR [esi+0x1d]
  4095b5:	or     BYTE PTR [eax],al
  4095b7:	xchg   esp,eax
  4095b8:	mov    ds:0x8ca02138,al
  4095bd:	sbb    eax,DWORD PTR [ebp-0x2ddd7719]
  4095c3:	and    DWORD PTR [eax+0x4a],ebp
  4095c6:	sub    ecx,DWORD PTR [edi-0x48171ba8]
  4095cc:	inc    ebp
  4095cd:	jne    0x409598
  4095cf:	stos   DWORD PTR es:[edi],eax
  4095d0:	das    
  4095d1:	and    ecx,0xffffffaa
  4095d4:	cs je  0x4095f2
  4095d7:	pop    ss
  4095d8:	gs cld 
  4095da:	adc    eax,0x254ccefe
  4095df:	pop    eax
  4095e0:	retf   0x18d3
  4095e3:	jne    0x409577
  4095e5:	inc    esp
  4095e6:	xchg   edi,eax
  4095e7:	push   esi
  4095e8:	rcr    esi,1
  4095ea:	add    al,0x1d
  4095ec:	dec    esi
  4095ed:	sub    esp,DWORD PTR [esi+0xb]
  4095f0:	fiadd  WORD PTR [esi-0x39f21c72]
  4095f6:	leave  
  4095f7:	in     al,dx
  4095f8:	sbb    DWORD PTR [esi],esp
  4095fa:	push   ebx
  4095fb:	jmp    0x40559006
  409600:	outs   dx,BYTE PTR ds:[esi]
  409601:	mov    ecx,DWORD PTR [eax-0x2f]
  409604:	push   edi
  409605:	adc    ch,BYTE PTR [esi+0x9]
  409608:	fsub   DWORD PTR [edi+0x696420de]
  40960e:	loope  0x4095d7
  409610:	adc    al,0xd3
  409612:	pushf  
  409613:	jmp    FWORD PTR [ebx+0x29c13ead]
  409619:	adc    ch,bh
  40961b:	inc    edx
  40961c:	leave  
  40961d:	leave  
  40961e:	(bad)  
  40961f:	mov    dh,0x26
  409621:	arpl   WORD PTR [ebp+0xa],bp
  409624:	add    BYTE PTR [esi+0x7c3da677],ch
  40962a:	and    al,BYTE PTR [ebx-0x10]
  40962d:	pop    esp
  40962e:	or     DWORD PTR ds:0x202785ea,ebx
  409634:	mov    bl,dh
  409636:	lahf   
  409637:	dec    eax
  409638:	outs   dx,DWORD PTR ds:[esi]
  409639:	or     ecx,DWORD PTR [ecx+0x56de680e]
  40963f:	js     0x4096ac
  409641:	push   ecx
  409642:	ret    0xe0a9
  409645:	sbb    esp,DWORD PTR gs:[ebx]
  409648:	pop    esi
  409649:	fwait
  40964a:	xor    DWORD PTR [ebx-0x5f],edi
  40964d:	ret    
  40964e:	in     al,dx
  40964f:	mov    bh,0x86
  409651:	inc    ebp
  409652:	arpl   WORD PTR ds:0x5815c21f,di
  409658:	hlt    
  409659:	inc    edi
  40965a:	outs   dx,BYTE PTR ds:[esi]
  40965b:	hlt    
  40965c:	ror    DWORD PTR cs:[eax+0x71],0x6d
  409661:	inc    esi
  409662:	jne    0x409674
  409664:	popa   
  409665:	adc    al,0xae
  409667:	cmp    BYTE PTR [edi-0x60],dh
  40966a:	repz inc ebx
  40966c:	rol    ecx,cl
  40966e:	sub    edi,DWORD PTR [edx+0x6a]
  409671:	jmp    0xc375:0x79bdd1c7
  409678:	icebp  
  409679:	cmp    bh,ch
  40967b:	xchg   esi,eax
  40967c:	jns    0x40964b
  40967e:	sub    al,0x5e
  409680:	cmp    DWORD PTR [eax-0x7a],ecx
  409683:	or     DWORD PTR [eax],ebx
  409685:	push   edi
  409686:	aad    0xad
  409688:	loopne 0x409665
  40968a:	and    BYTE PTR [esi],0x81
  40968d:	inc    edx
  40968e:	call   0x1b56:0x1d5859df
  409695:	lock in eax,dx
  409697:	sahf   
  409698:	or     al,0x2
  40969a:	mov    ch,0xf1
  40969c:	sub    eax,0xc177f23c
  4096a1:	mov    esi,0x4a38f881
  4096a6:	nop
  4096a7:	sti    
  4096a8:	shr    BYTE PTR [ebx+esi*8-0x6e],1
  4096ac:	lods   al,BYTE PTR ds:[esi]
  4096ad:	cdq    
  4096ae:	pop    esp
  4096af:	pop    esi
  4096b0:	xchg   ecx,eax
  4096b1:	gs sti 
  4096b3:	jmp    0x409673
  4096b5:	add    DWORD PTR [edi+0x61],eax
  4096b8:	xchg   esi,eax
  4096b9:	dec    ecx
  4096ba:	call   0x8af7322a
  4096bf:	es pusha 
  4096c1:	stc    
  4096c2:	jle    0x409736
  4096c4:	jecxz  0x4096d3
  4096c6:	cs jne 0x4096f0
  4096c9:	jb     0x409713
  4096cb:	push   esi
  4096cc:	push   cs
  4096cd:	outs   dx,DWORD PTR ds:[esi]
  4096ce:	jb     0x409727
  4096d0:	fsub   st(6),st
  4096d2:	push   edi
  4096d3:	mov    bl,0x15
  4096d5:	adc    BYTE PTR [edi+0x77dca135],0x3b
  4096dc:	push   0xb06becd7
  4096e1:	push   ebp
  4096e2:	loopne 0x40974d
  4096e4:	popf   
  4096e5:	mov    BYTE PTR [eax-0x55],bh
  4096e8:	(bad)  
  4096e9:	push   ds
  4096ea:	out    dx,al
  4096eb:	push   ebp
  4096ec:	(bad)  
  4096ed:	and    ah,bl
  4096ef:	dec    BYTE PTR [esi+0x7efdc529]
  4096f5:	mov    ecx,0x526e8439
  4096fa:	sar    DWORD PTR [esi+0x27],1
  4096fd:	adc    bl,BYTE PTR [esi+0x62d9e845]
  409703:	cwde   
  409704:	jne    0x4096ce
  409706:	into   
  409707:	mov    ebx,0x89f89ff
  40970c:	in     eax,dx
  40970d:	outs   dx,DWORD PTR ds:[esi]
  40970e:	sbb    edx,DWORD PTR [ebx]
  409710:	jo     0x40972f
  409712:	es stos DWORD PTR es:[edi],eax
  409714:	dec    ebx
  409715:	stos   BYTE PTR es:[edi],al
  409716:	int3   
  409717:	cdq    
  409718:	inc    eax
  409719:	or     al,0x9c
  40971b:	mov    edx,0x56d82851
  409720:	bound  edx,QWORD PTR [esi+ebx*8-0x32]
  409724:	or     edi,DWORD PTR [esi+0x42]
  409727:	repz xor eax,0x2db4cf31
  40972d:	jp     0x409794
  40972f:	imul   ecx,DWORD PTR [ecx+eax*2+0x68],0x26
  409734:	in     al,dx
  409735:	sub    BYTE PTR fs:[esi-0x6a],dl
  409739:	mov    cl,0x49
  40973b:	sub    bh,BYTE PTR gs:[edi]
  40973e:	repnz stos BYTE PTR es:[edi],al
  409740:	pushf  
  409741:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409742:	or     BYTE PTR [ecx+0xc],ch
  409745:	ds rol edi,cl
  409748:	(bad)  
  409749:	call   0xbdef51bf
  40974e:	adc    eax,0x88ae6e2d
  409753:	jmp    0xbb24:0x9f457ebf
  40975a:	or     ebp,esi
  40975c:	in     al,0x48
  40975e:	fwait
  40975f:	popa   
  409760:	mov    DWORD PTR [esi+0x71a2527d],edx
  409766:	jnp    0x409735
  409768:	pop    edx
  409769:	cs xchg eax,edx
  40976c:	jl     0x4097c4
  40976e:	in     al,0xa9
  409770:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409771:	mov    ds:0x5c560a19,al
  409776:	stos   BYTE PTR es:[edi],al
  409777:	test   DWORD PTR [ecx+0x1c693202],0xa71b8bdd
  409781:	lahf   
  409782:	cmp    eax,0x759417a1
  409787:	xor    BYTE PTR [ebx+0x71ad8762],0xde
  40978e:	loop   0x4097fe
  409790:	std    
  409791:	int3   
  409792:	mov    al,ds:0xf23a9148
  409797:	mov    esp,0x3a508651
  40979c:	loopne 0x409754
  40979e:	mov    ecx,0xded8cfb3
  4097a3:	sbb    DWORD PTR [edi+esi*2],ebx
  4097a6:	jb     0x4097ce
  4097a8:	call   FWORD PTR [edi+0x6e]
  4097ab:	ds cld 
  4097ad:	pop    edx
  4097ae:	int3   
  4097af:	adc    DWORD PTR [ebx+0x33],0x49
  4097b3:	xchg   ebx,eax
  4097b4:	fidiv  WORD PTR [eax-0x3002ce46]
  4097ba:	mov    ebp,0xb1145371
  4097bf:	das    
  4097c0:	fld    DWORD PTR [ebx+0x33034eb4]
  4097c6:	inc    eax
  4097c7:	push   0x5a
  4097c9:	inc    ebx
  4097ca:	ins    DWORD PTR es:[edi],dx
  4097cb:	test   DWORD PTR [ebx],0xbc712cf9
  4097d1:	fcmovnu st,st(3)
  4097d3:	jb     0x4097b7
  4097d5:	clc    
  4097d6:	dec    edx
  4097d7:	iret   
  4097d8:	or     cl,al
  4097da:	add    BYTE PTR [eax+0x5c],0xce
  4097de:	push   0x7d
  4097e0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4097e1:	lea    edx,[ebp-0x21]
  4097e4:	jecxz  0x409849
  4097e6:	cmp    esi,esp
  4097e8:	xor    al,0x19
  4097ea:	cs call 0x789d:0x628fe268
  4097f2:	dec    eax
  4097f3:	clc    
  4097f4:	mov    ds:0x81c57a13,eax
  4097f9:	clc    
  4097fa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4097fb:	mov    esp,0x4ac51127
  409800:	inc    edx
  409801:	push   esi
  409802:	inc    eax
  409803:	test   eax,0x903131de
  409808:	pop    ds
  409809:	xchg   esp,eax
  40980a:	aas    
  40980b:	shl    ebp,1
  40980d:	xchg   edi,eax
  40980e:	dec    ecx
  40980f:	mov    ds:0xc0ebdb1d,al
  409814:	pop    ds
  409815:	mov    esi,0xae455107
  40981a:	adc    DWORD PTR [esp+eiz*4-0x43],edi
  40981e:	imul   ebx,DWORD PTR [ebx-0x2],0x6075f3f6
  409825:	adc    BYTE PTR [eax],ch
  409827:	(bad)  
  409828:	(bad)  
  40982a:	in     eax,dx
  40982b:	mov    edx,0x9a90e24e
  409830:	xlat   BYTE PTR ds:[ebx]
  409831:	scas   al,BYTE PTR es:[edi]
  409832:	sbb    esi,edx
  409834:	pushf  
  409835:	imul   eax,DWORD PTR [esi],0x3b
  409838:	rcl    WORD PTR [esi+0x6e],cl
  40983c:	int    0x4a
  40983e:	adc    dh,BYTE PTR [edx+0x35]
  409841:	sbb    cl,dl
  409843:	jmp    0x4097f9
  409845:	repz add cl,BYTE PTR [eax]
  409848:	push   ecx
  409849:	pop    esp
  40984a:	fild   QWORD PTR [ebx+ebp*1]
  40984d:	in     al,dx
  40984e:	dec    edx
  40984f:	and    ecx,DWORD PTR [edx-0x1d144d31]
  409855:	sahf   
  409856:	in     eax,0x63
  409858:	fisttp DWORD PTR [eax-0x4a5f7896]
  40985e:	xor    edx,eax
  409860:	mov    al,0x67
  409862:	inc    esi
  409863:	push   edi
  409864:	or     BYTE PTR [eax-0x16],0x6e
  409868:	hlt    
  409869:	dec    edx
  40986a:	mov    ds:0xaf7005de,al
  40986f:	lock pop ecx
  409871:	out    dx,eax
  409872:	pop    edi
  409873:	adc    eax,0x29ea6e54
  409878:	mov    cl,0x18
  40987a:	jl     0x4098ab
  40987c:	repz jnp 0x4098e1
  40987f:	inc    ecx
  409880:	jp     0x4098dd
  409882:	adc    edi,eax
  409884:	call   0x5f55:0x9e6e1dbd
  40988b:	lods   eax,DWORD PTR ds:[esi]
  40988c:	repz gs jae 0x4098ff
  409890:	test   ch,cl
  409892:	sti    
  409893:	fwait
  409894:	inc    ebx
  409895:	xor    eax,ebp
  409897:	xchg   edx,eax
  409898:	repnz push ss
  40989a:	xor    esi,esi
  40989c:	lds    eax,FWORD PTR [esi+0x6afe3996]
  4098a2:	pop    ss
  4098a3:	inc    esp
  4098a4:	rol    DWORD PTR [ebp+0x3b39f55a],cl
  4098aa:	imul   eax,DWORD PTR [edi],0x3ee9a317
  4098b0:	in     al,0x9e
  4098b2:	jo     0x409926
  4098b4:	(bad)  
  4098b5:	in     eax,0xf9
  4098b7:	dec    DWORD PTR [esi-0x1d]
  4098ba:	cs xchg ebx,eax
  4098bc:	pop    ss
  4098bd:	ret    
  4098be:	daa    
  4098bf:	daa    
  4098c0:	in     al,0x32
  4098c2:	mov    dl,0x51
  4098c4:	shl    esp,0x85
  4098c7:	hlt    
  4098c8:	sti    
  4098c9:	sbb    ebx,ebx
  4098cb:	xchg   ebp,eax
  4098cc:	sub    BYTE PTR [edi],cl
  4098ce:	mov    ds,ecx
  4098d0:	mov    eax,0x12dabc52
  4098d5:	retf   
  4098d6:	bound  edi,QWORD PTR [edx-0x64]
  4098d9:	pop    edx
  4098da:	int3   
  4098db:	adc    BYTE PTR fs:[ebp+0x61],bl
  4098df:	popf   
  4098e0:	cmp    al,0xd6
  4098e2:	jne    0x4098ad
  4098e4:	cmp    edx,DWORD PTR [esi-0x60]
  4098e7:	push   es
  4098e8:	dec    ecx
  4098e9:	add    BYTE PTR [edx],0x53
  4098ec:	dec    ebp
  4098ed:	scas   al,BYTE PTR es:[edi]
  4098ee:	cdq    
  4098ef:	jo     0x409930
  4098f1:	ja     0x409931
  4098f3:	sbb    DWORD PTR [eax],edx
  4098f5:	pusha  
  4098f6:	lods   eax,DWORD PTR ds:[esi]
  4098f7:	ja     0x40988a
  4098f9:	aad    0x94
  4098fb:	fnsave [esi-0x4]
  4098fe:	inc    ebp
  4098ff:	out    0x3c,al
  409901:	div    DWORD PTR [ecx]
  409903:	nop
  409904:	jl     0x4098c3
  409906:	mov    ah,0x41
  409908:	fsubr  DWORD PTR [ebx-0x6d]
  40990b:	jnp    0x409924
  40990d:	sti    
  40990e:	xor    al,0x54
  409910:	adc    bh,ch
  409912:	push   ss
  409913:	out    dx,eax
  409914:	(bad)  
  409915:	dec    esi
  409916:	je     0x4098ec
  409918:	out    dx,al
  409919:	ss pop esp
  40991b:	push   edx
  40991c:	xor    dl,BYTE PTR [edx-0xc]
  40991f:	mov    esp,0xa9227f96
  409924:	int3   
  409925:	inc    esp
  409926:	into   
  409927:	pop    ss
  409928:	fwait
  409929:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40992a:	(bad)  
  40992b:	out    0x2c,al
  40992d:	mov    ebp,0xb8a05cd0
  409932:	mov    es,WORD PTR [edi]
  409934:	jecxz  0x409953
  409936:	lea    eax,[edx+0xf]
  409939:	out    0x9,al
  40993b:	jo     0x40997b
  40993d:	or     ecx,edx
  40993f:	jmp    0x409905
  409941:	repnz xlat BYTE PTR ds:[ebx]
  409943:	or     ecx,esi
  409945:	pop    ebx
  409946:	xchg   edi,eax
  409947:	sub    al,0x9a
  409949:	jae    0x4098ed
  40994b:	sub    edx,DWORD PTR ds:0xa62674fe
  409951:	xor    eax,0x3ebde87e
  409956:	push   esp
  409957:	aad    0xd
  409959:	rcr    DWORD PTR [edx+0x62],1
  40995c:	enter  0x611f,0x33
  409960:	shl    DWORD PTR [edx-0x1c],cl
  409963:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409964:	and    dh,0x68
  409967:	stos   BYTE PTR es:[edi],al
  409968:	adc    BYTE PTR [ebx-0x70a496b3],al
  40996e:	mov    ebp,0xed0569b4
  409973:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409974:	and    edi,edx
  409976:	int3   
  409977:	add    BYTE PTR [esi-0x1d],ah
  40997a:	repnz loope 0x409984
  40997d:	mov    al,0x6a
  40997f:	sbb    dh,BYTE PTR [ecx]
  409981:	mov    ebp,DWORD PTR [edi]
  409983:	imul   eax,ecx,0xac9ed9c0
  409989:	retf   
  40998a:	out    0x36,al
  40998c:	in     al,dx
  40998d:	pop    es
  40998e:	ss scas eax,DWORD PTR es:[edi]
  409990:	sub    eax,0xc443966e
  409995:	mov    ebp,0xb070d619
  40999a:	rcr    BYTE PTR [eax+0x70131aa5],0xc2
  4099a1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4099a2:	push   es
  4099a3:	outs   dx,DWORD PTR ds:[esi]
  4099a4:	mov    edi,0xb460c42
  4099a9:	dec    ebp
  4099aa:	icebp  
  4099ab:	shr    BYTE PTR [esi],1
  4099ad:	sub    DWORD PTR [eax+0x2abd584b],eax
  4099b3:	and    esp,ebx
  4099b5:	sti    
  4099b6:	push   edx
  4099b7:	and    BYTE PTR [ecx],al
  4099b9:	push   ss
  4099ba:	jg     0x409976
  4099bc:	xchg   edx,eax
  4099bd:	ret    0xe84b
  4099c0:	ret    
  4099c1:	out    dx,al
  4099c2:	lock jmp 0xdee:0x70525694
  4099ca:	pop    edi
  4099cb:	je     0x409985
  4099cd:	repz pop esi
  4099cf:	cmp    edx,esi
  4099d1:	and    eax,0xa8f94019
  4099d6:	mov    esp,0x1fcfa630
  4099db:	stos   DWORD PTR es:[edi],eax
  4099dc:	push   ecx
  4099dd:	dec    eax
  4099de:	or     DWORD PTR [ebp-0x71],0x3d
  4099e2:	xlat   BYTE PTR ds:[ebx]
  4099e3:	xor    eax,0x7ad27816
  4099e8:	ins    DWORD PTR es:[edi],dx
  4099e9:	stos   DWORD PTR es:[edi],eax
  4099ea:	scas   eax,DWORD PTR es:[edi]
  4099eb:	sbb    cl,BYTE PTR [edi+0x71218a79]
  4099f1:	jno    0x409a26
  4099f3:	adc    edi,esi
  4099f5:	out    0xba,eax
  4099f7:	pushf  
  4099f8:	lock mov bl,0xf9
  4099fb:	add    DWORD PTR [edi],eax
  4099fd:	pop    es
  4099fe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4099ff:	xor    eax,0xb7bb00f3
  409a04:	push   0xffffff92
  409a06:	sub    DWORD PTR [ecx+ebp*8+0x52365ef9],edx
  409a0d:	retf   
  409a0e:	bound  edi,QWORD PTR [edi+0x3c]
  409a11:	aaa    
  409a12:	jns    0x409a6d
  409a14:	sbb    eax,0xf05bfd23
  409a19:	out    dx,eax
  409a1a:	jns    0x409a17
  409a1c:	stc    
  409a1d:	mov    esp,0xbc5c6068
  409a22:	jmp    0x409a3a
  409a24:	fs pushf 
  409a26:	lods   eax,DWORD PTR ds:[esi]
  409a27:	sub    BYTE PTR [edx+ebp*1],ch
  409a2a:	aam    0x5
  409a2c:	or     DWORD PTR [edi-0x7dbdfc11],0x33c78621
  409a36:	pop    ds
  409a37:	mov    ebp,ebx
  409a39:	inc    ebp
  409a3a:	sub    ecx,DWORD PTR [edx-0x21386fcf]
  409a40:	xchg   edx,eax
  409a41:	out    dx,al
  409a42:	mov    esi,0x95cb280a
  409a47:	add    eax,0x276b83bc
  409a4c:	xor    al,0xfc
  409a4e:	add    eax,0xb40c5ed2
  409a53:	jmp    0xad99b2ce
  409a58:	enter  0x3358,0x63
  409a5c:	push   ss
  409a5d:	mov    ah,0xcd
  409a5f:	jg     0x409a57
  409a61:	jg     0x409a39
  409a63:	mov    edx,0xbb1a9419
  409a68:	push   DWORD PTR [edx+0x771c5c7e]
  409a6e:	cdq    
  409a6f:	pop    edx
  409a70:	jns    0x409ae0
  409a72:	int3   
  409a73:	push   0x4a2ca3cd
  409a78:	pop    ss
  409a79:	inc    esi
  409a7a:	inc    esi
  409a7b:	outs   dx,DWORD PTR ds:[esi]
  409a7c:	inc    edx
  409a7d:	aas    
  409a7e:	mov    bl,dl
  409a80:	(bad)  
  409a81:	xor    DWORD PTR [eax-0x797c8d81],esp
  409a87:	lds    ecx,FWORD PTR ds:0x6bf9fbe8
  409a8d:	adc    DWORD PTR [esi-0x5a],ebx
  409a90:	imul   eax,DWORD PTR [eax+ebx*2],0x8aaeaef8
  409a97:	or     DWORD PTR [ecx+0x4c],esi
  409a9a:	js     0x409a75
  409a9c:	or     eax,eax
  409a9e:	dec    ebx
  409a9f:	mov    eax,0xb546607d
  409aa4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409aa5:	std    
  409aa6:	shl    DWORD PTR [ebx-0x1e1d0ca9],1
  409aac:	xchg   ebx,eax
  409aad:	mov    edi,0x640e5005
  409ab2:	stos   DWORD PTR es:[edi],eax
  409ab3:	and    cl,BYTE PTR [esi]
  409ab5:	mov    bh,0x8e
  409ab7:	mov    ds:0x4de5cd80,eax
  409abc:	dec    ebp
  409abd:	push   ss
  409abe:	shl    BYTE PTR [esi+0x18cb399c],0x3b
  409ac5:	xor    DWORD PTR [ecx],esp
  409ac7:	mov    ds:0xfc6e55e1,eax
  409acc:	xor    BYTE PTR [ecx-0x7d],bh
  409acf:	sbb    dl,BYTE PTR [ecx+0x2e]
  409ad2:	sbb    eax,0xf3794302
  409ad7:	pop    es
  409ad8:	les    edi,FWORD PTR es:[eax]
  409adb:	inc    esi
  409adc:	dec    eax
  409add:	cmp    BYTE PTR [edx-0x5e],ah
  409ae0:	lock mov esp,0x88652be2
  409ae6:	rol    BYTE PTR [edx+0x3b],1
  409ae9:	call   0xd86a:0x3cc337f2
  409af0:	inc    esp
  409af1:	dec    edi
  409af2:	(bad)  
  409af3:	stc    
  409af4:	xchg   BYTE PTR [ebx],cl
  409af6:	xchg   edx,eax
  409af7:	in     eax,0x5
  409af9:	pop    ds
  409afa:	fisttp WORD PTR [edx+ecx*8]
  409afd:	pusha  
  409afe:	rcr    DWORD PTR [esi-0x78],1
  409b01:	cmp    BYTE PTR [edi+0x7e],ah
  409b04:	and    BYTE PTR [ebx+0x5e],ah
  409b07:	js     0x409b74
  409b09:	sbb    dl,al
  409b0b:	test   eax,0x3327a3bd
  409b10:	jmp    0x3d33:0x5ab8a4f4
  409b17:	dec    ecx
  409b18:	pusha  
  409b19:	mov    edi,0xf5a71258
  409b1e:	jmp    0x73c7:0x24e0cea3
  409b25:	enter  0xb386,0x47
  409b29:	xor    al,0xb8
  409b2b:	cmp    DWORD PTR ds:0x4f258f9e,edx
  409b31:	sub    al,0xbe
  409b33:	clc    
  409b34:	fimul  DWORD PTR [ebx-0x10]
  409b37:	lahf   
  409b38:	pop    edi
  409b39:	aad    0x10
  409b3b:	cmp    ecx,ebp
  409b3d:	cs clc 
  409b3f:	ins    DWORD PTR es:[edi],dx
  409b40:	sub    eax,0x6d7fde24
  409b45:	sub    eax,0x9da50d43
  409b4a:	or     eax,0x73e1af8
  409b4f:	push   ss
  409b50:	or     eax,0xb043c17f
  409b55:	mov    bl,0x35
  409b57:	pop    ebp
  409b58:	xchg   ebx,edi
  409b5a:	jle    0x409b94
  409b5c:	cmp    al,0x82
  409b5e:	cli    
  409b5f:	mov    al,0x7
  409b61:	fmul   QWORD PTR [edx-0x1b]
  409b64:	out    dx,al
  409b65:	or     eax,DWORD PTR ds:0xab28f40f
  409b6b:	adc    cl,BYTE PTR [eax-0xe]
  409b6e:	test   edx,edx
  409b70:	jg     0x409bce
  409b72:	xchg   edi,eax
  409b73:	xor    bl,BYTE PTR [ecx]
  409b75:	inc    esi
  409b76:	je     0x409b46
  409b78:	out    0x4e,eax
  409b7a:	add    DWORD PTR [edx],esi
  409b7c:	dec    esi
  409b7d:	pop    es
  409b7e:	inc    ebp
  409b7f:	shr    BYTE PTR [edx+0x5e9ca15d],1
  409b85:	in     al,0x5c
  409b87:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409b88:	bound  edx,QWORD PTR [ebx]
  409b8a:	iret   
  409b8b:	xchg   ecx,eax
  409b8c:	jl     0x409b56
  409b8e:	push   0x49
  409b90:	xchg   edi,eax
  409b91:	fist   DWORD PTR [ecx-0x7]
  409b94:	ins    BYTE PTR es:[edi],dx
  409b95:	mov    ch,0xe6
  409b97:	add    DWORD PTR [ebp-0x7a],ebp
  409b9a:	sub    BYTE PTR [ebx+0x27],ch
  409b9d:	mov    bh,0xad
  409b9f:	adc    dh,BYTE PTR [eax+eiz*8-0x29]
  409ba3:	push   esi
  409ba4:	and    dh,BYTE PTR [ecx]
  409ba6:	loope  0x409b29
  409ba8:	js     0x409bd2
  409baa:	xchg   ebp,eax
  409bab:	pushf  
  409bac:	(bad)  
  409bad:	fisub  WORD PTR [ebp+0xf]
  409bb0:	pusha  
  409bb1:	je     0x409bf7
  409bb3:	xchg   ebx,eax
  409bb4:	add    ah,ah
  409bb6:	or     BYTE PTR [edi],ch
  409bb8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409bb9:	adc    BYTE PTR [edi-0x2f],0xd5
  409bbd:	mov    dh,BYTE PTR [eax-0x2bae2a4]
  409bc3:	cmc    
  409bc4:	mov    bl,0x80
  409bc6:	xor    esi,DWORD PTR [ebx+0x28]
  409bc9:	xor    eax,0x556013f5
  409bce:	jae    0x409c25
  409bd0:	adc    al,0xa5
  409bd2:	rcl    BYTE PTR [edx+0x1b5212f6],cl
  409bd8:	xor    eax,0x60f21da0
  409bdd:	ins    DWORD PTR es:[edi],dx
  409bde:	inc    edi
  409bdf:	xchg   esp,eax
  409be0:	add    DWORD PTR [edi+0xf86ac59],ecx
  409be6:	and    DWORD PTR [edx],edi
  409be8:	sbb    BYTE PTR [edi],cl
  409bea:	call   0x2a8587e1
  409bef:	mov    bl,0x46
  409bf1:	in     al,dx
  409bf2:	and    edx,DWORD PTR [edx+eiz*2]
  409bf5:	inc    edx
  409bf6:	hlt    
  409bf7:	test   ebp,ebp
  409bf9:	fs dec ebx
  409bfb:	push   0x912b0559
  409c00:	sar    dh,0x61
  409c03:	push   ds
  409c04:	sub    al,0x92
  409c06:	gs inc esp
  409c08:	popf   
  409c09:	les    esi,FWORD PTR [esi]
  409c0b:	xchg   BYTE PTR [eax-0x7da705b6],bl
  409c11:	inc    esp
  409c12:	mov    ds:0xe31aeb8d,al
  409c17:	pop    ebx
  409c18:	pop    edi
  409c19:	add    esp,DWORD PTR [ebx+edi*2-0x1f]
  409c1d:	cmp    al,0xfe
  409c1f:	fstp   DWORD PTR [edi-0x76]
  409c22:	jmp    0x36b1:0xc55ae9c8
  409c29:	out    dx,al
  409c2a:	dec    eax
  409c2b:	cli    
  409c2c:	loop   0x409bc6
  409c2e:	repz xchg ebx,eax
  409c30:	or     edi,ebx
  409c32:	sub    DWORD PTR [ecx],eax
  409c34:	icebp  
  409c35:	cmp    al,dh
  409c37:	bound  ebx,QWORD PTR [edx+edx*8-0x2f35c4a8]
  409c3e:	mov    edi,0x266d9da1
  409c43:	nop
  409c44:	jecxz  0x409c92
  409c46:	jmp    0xf718:0xc4ca8efe
  409c4d:	leave  
  409c4e:	repz jg 0x409bdd
  409c51:	imul   ecx,DWORD PTR [ebx+0x2d],0x66
  409c55:	stc    
  409c56:	out    0x67,al
  409c58:	push   cs
  409c59:	fild   QWORD PTR [edi]
  409c5b:	push   esp
  409c5c:	ficomp WORD PTR fs:[edx-0x6f0ee3b0]
  409c63:	loop   0x409c1f
  409c65:	or     eax,0x7a091ba7
  409c6a:	mov    bh,0x19
  409c6c:	dec    eax
  409c6d:	adc    ch,BYTE PTR [eax+0x178a7cd]
  409c73:	enter  0x7fef,0x47
  409c77:	ja     0x409cef
  409c79:	int    0x8c
  409c7b:	test   eax,0x9acb8f95
  409c80:	xor    edi,DWORD PTR [ecx-0x5f]
  409c83:	add    bl,0x27
  409c86:	xchg   ebp,eax
  409c87:	dec    ebx
  409c88:	mov    bh,BYTE PTR [edi+edx*4]
  409c8b:	dec    esp
  409c8c:	(bad)  
  409c8d:	fxch   st(3)
  409c8f:	mov    DWORD PTR [ebx],ebp
  409c91:	bound  edx,QWORD PTR [edi-0x5691ad35]
  409c97:	pop    ss
  409c98:	int    0x4f
  409c9a:	lods   al,BYTE PTR ds:[esi]
  409c9b:	je     0x409c3c
  409c9d:	test   al,0x92
  409c9f:	(bad)  
  409ca0:	lods   al,BYTE PTR ds:[esi]
  409ca1:	ins    BYTE PTR es:[edi],dx
  409ca2:	(bad)  
  409ca3:	fwait
  409ca4:	out    dx,eax
  409ca5:	fcomip st,st(2)
  409ca7:	add    BYTE PTR [ebx],cl
  409ca9:	retf   
  409caa:	lock aad 0xc9
  409cad:	int    0x63
  409caf:	out    0x14,eax
  409cb1:	xor    DWORD PTR [ebx-0xe966f8],ecx
  409cb7:	sub    eax,0x29746cf1
  409cbc:	ins    DWORD PTR es:[edi],dx
  409cbd:	mov    gs,WORD PTR [edx+0x4e]
  409cc0:	mov    DWORD PTR [esi+eiz*2-0x2d],esp
  409cc4:	xor    bh,BYTE PTR [ecx]
  409cc6:	(bad)  
  409cc8:	rol    DWORD PTR [edi+0x23],0x75
  409ccc:	cwde   
  409ccd:	rcl    BYTE PTR [ebx-0x4a],0xb3
  409cd1:	int    0x5b
  409cd3:	daa    
  409cd4:	mov    ah,0xce
  409cd6:	pop    ds
  409cd7:	sbb    eax,0x990c899b
  409cdc:	mov    eax,0x9eb90652
  409ce1:	ficomp WORD PTR [ebx]
  409ce3:	xor    al,0x3
  409ce5:	stc    
  409ce6:	daa    
  409ce7:	mov    es,eax
  409ce9:	je     0x409cf7
  409ceb:	jbe    0x409d14
  409ced:	sub    al,0xc8
  409cef:	adc    BYTE PTR [esi-0x30],ch
  409cf2:	das    
  409cf3:	pop    edx
  409cf4:	and    eax,0x4f115b52
  409cf9:	mov    DWORD PTR ds:0xe0551e28,esp
  409cff:	dec    ecx
  409d00:	enter  0xf313,0xa7
  409d04:	(bad)  
  409d06:	mov    BYTE PTR [eax-0x7],dh
  409d09:	loope  0x409d49
  409d0b:	jl     0x409cc3
  409d0d:	ds ss ins DWORD PTR es:[edi],dx
  409d10:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409d11:	cwde   
  409d12:	fstp   QWORD PTR [esi+edi*1+0x40e5cc87]
  409d19:	inc    esp
  409d1a:	int    0xd8
  409d1c:	xchg   esi,eax
  409d1d:	cmp    DWORD PTR [eax-0x5f],ebx
  409d20:	mov    ecx,0x8389966a
  409d25:	cmp    al,0x3e
  409d27:	jno    0x409d17
  409d29:	jmp    0xffdf:0x3c4b812
  409d30:	lahf   
  409d31:	push   cs
  409d32:	push   eax
  409d33:	test   eax,0xbe85668c
  409d38:	lods   eax,DWORD PTR ds:[esi]
  409d39:	cli    
  409d3a:	jle    0x409da7
  409d3c:	std    
  409d3d:	pop    ebx
  409d3e:	(bad)  
  409d3f:	adc    eax,0x5ae711af
  409d44:	stc    
  409d45:	xor    bh,BYTE PTR [eax-0x35f34bff]
  409d4b:	sar    DWORD PTR [ecx],1
  409d4d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409d4e:	retf   
  409d4f:	sbb    BYTE PTR [edi-0x395104d2],0x15
  409d56:	or     edx,DWORD PTR [ebx+eiz*1+0x628eb655]
  409d5d:	sahf   
  409d5e:	jge    0x409dcf
  409d60:	js     0x409d7a
  409d62:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409d63:	mov    dl,0xb6
  409d65:	lahf   
  409d66:	sub    al,dl
  409d68:	push   ebp
  409d69:	fadd   DWORD PTR [eax+0x519f1231]
  409d6f:	xchg   edx,eax
  409d70:	shl    BYTE PTR [ebp+0x6d45e966],1
  409d76:	xlat   BYTE PTR ds:[ebx]
  409d77:	mov    dh,0xb1
  409d79:	fadd   QWORD PTR [ebp+0x1ffd4fbe]
  409d7f:	or     esp,DWORD PTR [esi+0x32]
  409d82:	sbb    al,0x6c
  409d84:	es and ah,0x52
  409d88:	push   edi
  409d89:	je     0x409d46
  409d8b:	adc    BYTE PTR [ebx-0x57],0x5
  409d8f:	pushf  
  409d90:	mov    dh,0xb2
  409d92:	or     dh,dh
  409d94:	push   0x73
  409d96:	or     eax,0x8c0bbe6e
  409d9b:	xor    al,0xf6
  409d9d:	cdq    
  409d9e:	into   
  409d9f:	cmp    al,0x5f
  409da1:	stos   BYTE PTR es:[edi],al
  409da2:	rcl    BYTE PTR [edx+0x25],0x6c
  409da6:	push   ecx
  409da7:	xchg   BYTE PTR [ebx-0x3c2e7b60],cl
  409dad:	dec    esi
  409dae:	retf   
  409daf:	ss xchg edx,eax
  409db1:	or     BYTE PTR [ebp-0x2086cb4e],dl
  409db7:	mov    ch,0x28
  409db9:	xchg   ebp,esp
  409dbb:	ret    
  409dbc:	shl    DWORD PTR [esi-0x3b9d6e35],cl
  409dc2:	imul   edx,DWORD PTR [edx-0x1f],0x4138113d
  409dc9:	jae    0x409e43
  409dcb:	out    dx,al
  409dcc:	jns    0x409d63
  409dce:	(bad)  
  409dcf:	int3   
  409dd0:	rcl    DWORD PTR [ebx],1
  409dd2:	and    ah,BYTE PTR [edi-0x29]
  409dd5:	arpl   WORD PTR [ecx-0xd],bx
  409dd8:	fstp   TBYTE PTR [edi]
  409dda:	loop   0x409e0c
  409ddc:	dec    ecx
  409ddd:	call   0xbcd6:0x6488aa9e
  409de4:	(bad)  
  409de5:	jmp    0x409e44
  409de7:	repz pop edx
  409de9:	push   esi
  409dea:	nop
  409deb:	jge    0x409d7c
  409ded:	mov    bh,BYTE PTR [eax-0x6b]
  409df0:	js     0x409e16
  409df2:	adc    bh,ah
  409df4:	jecxz  0x409d7e
  409df6:	fsubr  DWORD PTR ds:0x3bc566e4
  409dfc:	arpl   bx,cx
  409dfe:	ror    DWORD PTR [edi+0x33],0x99
  409e02:	xor    al,0xeb
  409e04:	mov    ds:0x39db8411,eax
  409e09:	jmp    FWORD PTR [esi-0x3b160451]
  409e0f:	mov    esi,0x36f25945
  409e14:	sbb    bh,BYTE PTR [edi]
  409e16:	sbb    ebx,DWORD PTR [esi]
  409e18:	adc    eax,0xc17dde73
  409e1d:	loopne 0x409e6a
  409e1f:	jp     0x409db8
  409e21:	mov    ds:0xa36fae4d,eax
  409e26:	dec    esi
  409e27:	cwde   
  409e28:	(bad)  
  409e29:	jl     0x409dfe
  409e2b:	cdq    
  409e2c:	cld    
  409e2d:	(bad)  
  409e2e:	stc    
  409e2f:	mov    esp,0x3d024020
  409e34:	and    al,0x20
  409e36:	cmp    eax,0xb74baa1a
  409e3b:	or     eax,0xcc0ac10b
  409e40:	je     0x409dc9
  409e42:	shr    DWORD PTR [eax-0x435deee7],0xa5
  409e49:	dec    edi
  409e4a:	xlat   BYTE PTR ds:[ebx]
  409e4b:	jmp    0x8ad0:0x9ecaf4c0
  409e52:	ins    DWORD PTR es:[edi],dx
  409e53:	push   esi
  409e54:	ret    
  409e55:	mov    ah,0x9b
  409e57:	sbb    al,0xe2
  409e59:	cmp    ah,bl
  409e5b:	(bad)  
  409e5c:	and    al,0x31
  409e5e:	sbb    BYTE PTR [edi+ebp*4-0x50],cl
  409e62:	sbb    edx,edx
  409e64:	mov    cl,0xb1
  409e66:	mov    cl,0xbf
  409e68:	add    ebp,ecx
  409e6a:	sar    DWORD PTR [eax+0x74],1
  409e6d:	mov    cl,0xb9
  409e6f:	inc    eax
  409e70:	or     DWORD PTR ds:0x69825eaa,0x710076dc
  409e7a:	or     edi,DWORD PTR [ecx-0x40]
  409e7d:	in     al,0xa
  409e7f:	fld    QWORD PTR [ebx-0x47]
  409e82:	repnz mov esp,0x8b1f71a6
  409e88:	xlat   BYTE PTR ds:[ebx]
  409e89:	pop    esp
  409e8a:	sti    
  409e8b:	ja     0x409e57
  409e8d:	or     bh,BYTE PTR [ebx]
  409e8f:	jns    0x409e4b
  409e91:	pop    es
  409e92:	or     BYTE PTR [edi],ch
  409e94:	or     BYTE PTR [ebp-0x1d],ah
  409e97:	aaa    
  409e98:	push   es
  409e99:	mov    bh,0x6a
  409e9b:	mov    BYTE PTR [ecx],ah
  409e9d:	and    BYTE PTR [eax+0x57b7890e],cl
  409ea3:	fistp  DWORD PTR fs:[ebx+0x67290506]
  409eaa:	cmp    eax,DWORD PTR [ecx]
  409eac:	outs   dx,DWORD PTR cs:[esi]
  409eae:	mov    esi,0x367155c
  409eb3:	xchg   edi,eax
  409eb4:	pop    esi
  409eb5:	or     ecx,DWORD PTR ds:0x67ebf56c
  409ebb:	xchg   DWORD PTR [ebp+0x17],edi
  409ebe:	sub    al,0x6f
  409ec0:	and    DWORD PTR [eax-0x2],edi
  409ec3:	fisub  DWORD PTR [ecx+eiz*1]
  409ec6:	xchg   DWORD PTR [ecx],ecx
  409ec8:	loop   0x409e69
  409eca:	std    
  409ecb:	sub    ecx,esp
  409ecd:	les    esi,FWORD PTR [esi+0x10]
  409ed0:	jae    0x409f19
  409ed2:	fstp   st(2)
  409ed4:	inc    edx
  409ed5:	fist   DWORD PTR [ebp+0x34c416ee]
  409edb:	js     0x409e9a
  409edd:	test   al,0xf9
  409edf:	push   cs
  409ee0:	outs   dx,DWORD PTR ds:[esi]
  409ee1:	add    BYTE PTR [ebp-0x1be46713],al
  409ee7:	ins    BYTE PTR es:[edi],dx
  409ee8:	or     ebx,DWORD PTR [eax+0x13dba3ff]
  409eee:	sbb    DWORD PTR ds:0x76b3d9e,ebp
  409ef4:	and    DWORD PTR [ecx+edx*4],ecx
  409ef7:	mov    es,ebp
  409ef9:	jg     0x409e87
  409efb:	pop    es
  409efc:	adc    eax,0x14963545
  409f01:	jmp    0x9607dc64
  409f06:	cmp    BYTE PTR [eax+0x48],bh
  409f09:	sti    
  409f0a:	lahf   
  409f0b:	pop    edx
  409f0c:	js     0x409f70
  409f0e:	xor    edx,DWORD PTR [ebx+0x1d92c329]
  409f14:	fiadd  DWORD PTR [eax+0x7a]
  409f17:	rcr    BYTE PTR [ebp+0x31],1
  409f1a:	add    DWORD PTR [esi],ecx
  409f1c:	sub    DWORD PTR [edi+0x558570d9],ebx
  409f22:	pop    ecx
  409f23:	sar    bh,cl
  409f25:	xchg   DWORD PTR [ebp-0x7d412e90],edi
  409f2b:	jne    0x409f2f
  409f2d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409f2e:	dec    eax
  409f2f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409f30:	gs jg  0x409f03
  409f33:	adc    edi,eax
  409f35:	retf   
  409f36:	xor    eax,0xaa2d9968
  409f3b:	(bad)  
  409f3c:	adc    DWORD PTR [edx+0x3cc084d4],0x968bc130
  409f46:	push   eax
  409f47:	mov    eax,0xb9ff7065
  409f4c:	jge    0x409f3d
  409f4e:	sbb    DWORD PTR [eax],ebp
  409f50:	ret    0x83bc
  409f53:	xchg   ecx,eax
  409f54:	inc    ebp
  409f55:	les    esp,FWORD PTR [edx-0x7f924d0f]
  409f5b:	mov    esi,0xd257a4eb
  409f60:	pop    esp
  409f61:	les    esp,FWORD PTR [edx-0xd]
  409f64:	jge    0x409f18
  409f66:	mov    eax,ds:0x15fadb1e
  409f6b:	cmp    al,BYTE PTR [edx]
  409f6d:	xchg   esi,eax
  409f6e:	xchg   ecx,eax
  409f6f:	test   BYTE PTR [ebp+0x58],0x3
  409f73:	push   ecx
  409f74:	iret   
  409f75:	pop    eax
  409f76:	mov    ecx,0xbd05cbd1
  409f7b:	lahf   
  409f7c:	push   ebp
  409f7d:	shr    BYTE PTR [ecx-0x148ba2f],1
  409f83:	iret   
  409f84:	pop    ecx
  409f85:	dec    esi
  409f86:	cdq    
  409f87:	adc    DWORD PTR [edi],esi
  409f89:	ret    
  409f8a:	jmp    0xddab6da7
  409f8f:	dec    ecx
  409f90:	fwait
  409f91:	mov    ds:0xf89780a6,eax
  409f96:	call   0x72e2:0xe17a143d
  409f9d:	repz repnz aam 0xd7
  409fa1:	xor    esp,DWORD PTR [esp+edi*1]
  409fa4:	enter  0xfc02,0x38
  409fa8:	ss mov esi,0x6af42451
  409fae:	mov    al,ds:0x272480ab
  409fb3:	sar    edi,0x8e
  409fb6:	dec    edi
  409fb7:	retf   0x183c
  409fba:	sbb    DWORD PTR [edx-0x1a16b9ed],ecx
  409fc0:	int    0x97
  409fc2:	add    ch,BYTE PTR [ecx+0x10]
  409fc5:	adc    ch,BYTE PTR [ecx]
  409fc7:	loopne 0x409f79
  409fc9:	hlt    
  409fca:	(bad)  
  409fcc:	xor    esi,ebx
  409fce:	inc    eax
  409fcf:	and    DWORD PTR [edx+edi*1+0x23c23e70],esp
  409fd6:	lahf   
  409fd7:	mov    bh,bl
  409fd9:	xor    BYTE PTR [esp+ebx*8+0x36],al
  409fdd:	sub    ebx,DWORD PTR [ebp+ebx*4+0xa687116]
  409fe4:	shl    edi,1
  409fe6:	xor    ebp,ecx
  409fe8:	push   esi
  409fe9:	sub    BYTE PTR [edi+0x17],bl
  409fec:	mov    eax,0xba104ee6
  409ff1:	js     0x40a03d
  409ff3:	inc    ebp
  409ff4:	sbb    dl,BYTE PTR [edx-0x6f99a539]
  409ffa:	xor    eax,0x2f77499c
  409fff:	fxch   st(4)
  40a001:	lea    ebp,cs:[eax+0x41]
  40a005:	and    ebp,DWORD PTR [ecx-0x4c]
  40a008:	mov    eax,ds:0x661c24f6
  40a00d:	pop    ss
  40a00e:	scas   al,BYTE PTR es:[edi]
  40a00f:	sub    DWORD PTR [edx-0x9],ebx
  40a012:	das    
  40a013:	repz or DWORD PTR [edi+esi*4],esi
  40a017:	add    eax,0x63e3211b
  40a01c:	fdiv   DWORD PTR [edi-0x2ef9f55f]
  40a022:	loope  0x40a04f
  40a024:	sub    BYTE PTR [ebp-0x5f062a8c],dh
  40a02a:	or     DWORD PTR [esi+0x23],edi
  40a02d:	push   esp
  40a02e:	std    
  40a02f:	outs   dx,BYTE PTR ds:[esi]
  40a030:	push   DWORD PTR [edx]
  40a032:	call   0xa469:0xee1c6dd5
  40a039:	push   esi
  40a03a:	pop    edx
  40a03b:	xor    al,0x76
  40a03d:	add    al,0xfd
  40a03f:	test   al,0x1c
  40a041:	cmp    ch,ch
  40a043:	and    eax,0xc4616dd1
  40a048:	jae    0x40a025
  40a04a:	loope  0x40a0c3
  40a04c:	fs stc 
  40a04e:	and    al,0x6d
  40a050:	jmp    0x502a481f
  40a055:	leave  
  40a056:	sbb    eax,0x625ae3ce
  40a05b:	in     eax,0x20
  40a05d:	rcr    BYTE PTR [ebp-0xc73819b],0xb1
  40a064:	sub    al,BYTE PTR [edx]
  40a066:	push   ebx
  40a067:	not    BYTE PTR [edi-0x4862e0ad]
  40a06d:	mov    ebx,0xb2584bf8
  40a072:	stos   DWORD PTR es:[edi],eax
  40a073:	lea    edi,[edx+0x38]
  40a076:	sti    
  40a077:	push   ebp
  40a078:	dec    esi
  40a079:	sbb    BYTE PTR [eax+0x6a],dl
  40a07c:	xor    ebp,DWORD PTR [edx]
  40a07e:	and    cl,dl
  40a080:	lods   al,BYTE PTR ds:[esi]
  40a081:	loopne 0x40a089
  40a083:	mov    dh,BYTE PTR ss:[edx]
  40a086:	cmpxchg DWORD PTR [esi+ebx*4-0x3af7542e],eax
  40a08e:	and    esp,esp
  40a090:	outs   dx,DWORD PTR ds:[esi]
  40a091:	or     al,0x1b
  40a093:	rcr    BYTE PTR [edx-0x2d],1
  40a096:	sbb    ecx,DWORD PTR ds:0xe9ed267f
  40a09c:	mov    ds:0xdc9f0b7,eax
  40a0a1:	fbld   TBYTE PTR [ecx+eax*1+0x1f]
  40a0a5:	imul   esp,DWORD PTR [ecx-0x4f],0xb
  40a0a9:	retf   0x5b03
  40a0ac:	ins    BYTE PTR es:[edi],dx
  40a0ad:	sub    eax,0x9d38fb31
  40a0b2:	dec    ebx
  40a0b3:	push   ecx
  40a0b4:	dec    ecx
  40a0b5:	push   ds
  40a0b6:	sbb    eax,0x7d74cf46
  40a0bb:	push   0x58
  40a0bd:	in     al,dx
  40a0be:	sar    BYTE PTR [esi-0x1c6efade],cl
  40a0c4:	(bad)  
  40a0c5:	retf   0x6c8c
  40a0c8:	jle    0x40a076
  40a0ca:	sahf   
  40a0cb:	fidivr WORD PTR [ebx+0x489a0498]
  40a0d1:	pop    ebx
  40a0d2:	iret   
  40a0d3:	icebp  
  40a0d4:	test   al,0xef
  40a0d6:	aaa    
  40a0d7:	out    0x4a,al
  40a0d9:	arpl   WORD PTR [eax-0x6c3807ed],sp
  40a0df:	add    ch,cl
  40a0e1:	adc    al,0x2a
  40a0e3:	pmaxub mm4,QWORD PTR [edi-0x2a0f9acb]
  40a0ea:	hlt    
  40a0eb:	iret   
  40a0ec:	xchg   ebp,eax
  40a0ed:	and    eax,DWORD PTR ds:0x168d42d5
  40a0f3:	adc    BYTE PTR [edi+0x77],cl
  40a0f6:	xchg   ecx,eax
  40a0f7:	daa    
  40a0f8:	xlat   BYTE PTR ds:[ebx]
  40a0f9:	cs call 0x71a662a2
  40a0ff:	arpl   WORD PTR [eax+0x72],ax
  40a102:	je     0x40a0e4
  40a104:	(bad)  
  40a106:	adc    dh,BYTE PTR [edx]
  40a108:	jne    0x40a0de
  40a10a:	arpl   WORD PTR [esi+0x4262989a],cx
  40a110:	xor    ebp,DWORD PTR [ebp-0x60]
  40a113:	mov    ds:0x16f14d64,al
  40a118:	clc    
  40a119:	(bad)  
  40a11a:	es jnp 0x40a0a9
  40a11d:	pop    esp
  40a11e:	(bad)  
  40a11f:	cmp    al,0x43
  40a121:	pop    es
  40a122:	inc    edx
  40a123:	inc    esi
  40a124:	xchg   edi,eax
  40a125:	mov    cl,0x5
  40a127:	xchg   esi,eax
  40a128:	sub    al,0xb4
  40a12a:	pop    ebp
  40a12b:	lea    eax,[ebp+0x26]
  40a12e:	or     edx,DWORD PTR [ecx+0x5cd965bb]
  40a134:	xor    cl,bl
  40a136:	jno    0x40a0f7
  40a138:	mov    esi,0x8dc2855
  40a13d:	sub    DWORD PTR [ebx-0x7df3a532],ebx
  40a143:	or     DWORD PTR [edi+0x714827a5],ebp
  40a149:	add    BYTE PTR [esp+ebx*4+0x44],ch
  40a14d:	shl    bh,0x24
  40a150:	out    dx,al
  40a151:	jmp    0x918f468a
  40a156:	popf   
  40a157:	xlat   BYTE PTR ds:[ebx]
  40a158:	sub    eax,0xdb162213
  40a15d:	ins    BYTE PTR es:[edi],dx
  40a15e:	sub    DWORD PTR [ecx],esp
  40a160:	adc    DWORD PTR ds:0xd7260c,0x6f
  40a167:	rcl    al,1
  40a169:	(bad)  
  40a16a:	pop    ebp
  40a16b:	push   0x851ce7e3
  40a170:	mov    edi,0x761867dd
  40a175:	jb     0x40a14a
  40a177:	stos   BYTE PTR es:[edi],al
  40a178:	scas   eax,DWORD PTR es:[edi]
  40a179:	xor    DWORD PTR [ecx],esp
  40a17b:	int    0xe9
  40a17d:	fiadd  DWORD PTR [ecx-0x6c]
  40a180:	out    dx,al
  40a181:	cwde   
  40a182:	xchg   BYTE PTR ss:[eax],dh
  40a185:	js     0x40a183
  40a187:	push   ds
  40a188:	mov    ebx,0x7919782
  40a18d:	lock and DWORD PTR [eax-0x13e45019],0x3
  40a195:	out    dx,al
  40a196:	xchg   ecx,eax
  40a197:	add    DWORD PTR [ebp+0x15],esp
  40a19a:	test   eax,0x1524b2c6
  40a19f:	cmp    eax,0xee80277d
  40a1a4:	push   ss
  40a1a5:	lea    edx,[edi+0x2c938920]
  40a1ab:	xchg   edi,eax
  40a1ac:	(bad)  
  40a1ad:	push   eax
  40a1ae:	enter  0xd31c,0xac
  40a1b2:	add    DWORD PTR [edi-0x38bbaaf0],ebp
  40a1b8:	inc    esi
  40a1b9:	sub    al,BYTE PTR [edi-0x2587dab0]
  40a1bf:	mov    ds:0x1c8eb130,eax
  40a1c4:	int3   
  40a1c5:	int    0x5d
  40a1c7:	dec    esp
  40a1c8:	xchg   esp,eax
  40a1c9:	retf   0x2559
  40a1cc:	(bad)  
  40a1cd:	cmp    ecx,ebx
  40a1cf:	pushf  
  40a1d0:	call   0x464b5852
  40a1d5:	xchg   ebp,eax
  40a1d6:	fwait
  40a1d7:	adc    esp,DWORD PTR [ecx]
  40a1d9:	cmp    al,0xec
  40a1db:	or     BYTE PTR [ecx],ah
  40a1dd:	aam    0x81
  40a1df:	xchg   ebp,eax
  40a1e0:	jno    0x40a1eb
  40a1e2:	add    ebp,0x4a8750b5
  40a1e8:	sbb    DWORD PTR [edi],0x12
  40a1eb:	imul   ecx,DWORD PTR [ebx-0x5d6ad4a0],0x22bab6a1
  40a1f5:	scas   eax,DWORD PTR es:[edi]
  40a1f6:	or     edi,esp
  40a1f8:	xor    eax,0xa0a71aae
  40a1fd:	dec    esi
  40a1fe:	and    BYTE PTR [eax],dl
  40a200:	loop   0x40a1ef
  40a202:	jmp    0x97ed:0x9344b4b
  40a209:	add    eax,0x92e0499c
  40a20e:	cld    
  40a20f:	ds sbb edx,esi
  40a212:	sbb    DWORD PTR [ebx+0x20076419],ebp
  40a218:	retf   
  40a219:	push   eax
  40a21a:	cmp    eax,0x6c0619e4
  40a21f:	and    BYTE PTR [ecx+0x76],cl
  40a222:	mov    ecx,0x8d814e59
  40a227:	or     al,0x79
  40a229:	xlat   BYTE PTR ds:[ebx]
  40a22a:	lods   eax,DWORD PTR ds:[esi]
  40a22b:	call   0x87fe:0xd293436d
  40a232:	xchg   esp,eax
  40a233:	cmp    DWORD PTR [eax+0x5a6d0ce7],ebx
  40a239:	push   esi
  40a23a:	ins    BYTE PTR es:[edi],dx
  40a23b:	push   cs
  40a23c:	mov    ds:0x3ab62dbe,eax
  40a241:	outs   dx,BYTE PTR ds:[esi]
  40a242:	push   esi
  40a243:	mov    ebx,0xaddba673
  40a248:	mov    esp,0x32a21802
  40a24d:	mov    ds:0x7640ff4e,eax
  40a252:	add    eax,0xe73101af
  40a257:	fs mov ebp,0x8f3437b5
  40a25d:	push   eax
  40a25e:	gs int 0x7e
  40a261:	shl    DWORD PTR [ecx-0x5934c368],cl
  40a267:	push   ss
  40a268:	push   esp
  40a269:	fist   DWORD PTR [ebp+ebx*2+0x53]
  40a26d:	adc    DWORD PTR [esi-0x1be96548],ecx
  40a273:	xchg   ecx,eax
  40a274:	repz mov ecx,0x120fbcb2
  40a27a:	popa   
  40a27b:	push   esp
  40a27c:	or     eax,0xf3679257
  40a281:	out    0xc6,al
  40a283:	adc    eax,DWORD PTR [ebx-0x255bb700]
  40a289:	cli    
  40a28a:	pushf  
  40a28b:	xor    edx,DWORD PTR [esi+0x7c0d5639]
  40a291:	js     0x40a250
  40a293:	test   DWORD PTR [esi],0x1da9f3fd
  40a299:	outs   dx,DWORD PTR ds:[esi]
  40a29a:	mov    ecx,0x26762b5
  40a29f:	add    DWORD PTR [edx],ecx
  40a2a1:	and    al,BYTE PTR [edx]
  40a2a3:	cli    
  40a2a4:	not    edx
  40a2a6:	scas   eax,DWORD PTR es:[edi]
  40a2a7:	pop    edi
  40a2a8:	xchg   BYTE PTR [ecx+0x5a743cff],ch
  40a2ae:	fxch   st(2)
  40a2b0:	push   0xab62623f
  40a2b5:	pop    edx
  40a2b6:	je     0x40a319
  40a2b8:	adc    BYTE PTR [ebp+eax*2+0x7c3886f6],cl
  40a2bf:	fnstsw WORD PTR [ebx-0x3a1e7e76]
  40a2c5:	shl    BYTE PTR [ecx-0x2b],0xb
  40a2c9:	repz jmp 0xd8e947b5
  40a2cf:	or     ebp,DWORD PTR [edx+0x67]
  40a2d2:	inc    edi
  40a2d3:	jbe    0x40a261
  40a2d5:	push   0x7a
  40a2d7:	dec    ebp
  40a2d8:	sub    edx,DWORD PTR [esi]
  40a2da:	push   0xffffff88
  40a2dc:	inc    ebp
  40a2dd:	repnz mov DWORD PTR [ebp-0x39],ebp
  40a2e1:	out    0xbd,al
  40a2e3:	lahf   
  40a2e4:	xor    al,0x1b
  40a2e6:	fisub  WORD PTR [ebp-0x24]
  40a2e9:	cmp    DWORD PTR [ebx],edi
  40a2eb:	or     BYTE PTR [eax+eax*4-0x4f81e7e1],cl
  40a2f2:	pop    ss
  40a2f3:	sbb    edx,DWORD PTR [ebp-0x27972b64]
  40a2f9:	enter  0xa1e0,0x92
  40a2fd:	sub    BYTE PTR [esi+ecx*4+0x35],bl
  40a301:	ins    DWORD PTR es:[edi],dx
  40a302:	and    DWORD PTR [ebp-0x5],0x53f0ce5c
  40a309:	xchg   ebp,eax
  40a30a:	js     0x40a332
  40a30c:	sub    esp,DWORD PTR [eax+0x1e25d8a4]
  40a312:	sbb    al,0x91
  40a314:	adc    eax,0x691bb6bd
  40a319:	dec    edx
  40a31a:	inc    ecx
  40a31b:	push   cs
  40a31c:	sub    esp,DWORD PTR [edi-0x2e3111c7]
  40a322:	xchg   ecx,eax
  40a323:	clc    
  40a324:	loop   0x40a3a4
  40a326:	push   esi
  40a327:	cmp    dl,BYTE PTR [esi+0x72]
  40a32a:	call   0x23cb:0xe4d20242
  40a331:	cmp    BYTE PTR [edx+0x3a],al
  40a334:	lea    ebx,ds:0x49cf2080
  40a33a:	push   esp
  40a33b:	hlt    
  40a33c:	add    eax,0xd8df5d55
  40a341:	adc    ch,BYTE PTR [esi]
  40a343:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a344:	xchg   esi,eax
  40a345:	sbb    ebp,DWORD PTR [ecx+0x43]
  40a348:	dec    esp
  40a349:	sub    eax,0x29d5af5e
  40a34e:	jbe    0x40a350
  40a350:	jl     0x40a369
  40a352:	jmp    0x4ec8:0x5159adb0
  40a359:	(bad)  
  40a35a:	out    dx,eax
  40a35b:	adc    bl,BYTE PTR [ebp+0xb]
  40a35e:	shr    DWORD PTR [edi-0x265beb64],0xee
  40a365:	stos   BYTE PTR es:[edi],al
  40a366:	pushf  
  40a367:	mov    ds:0xb5739c9c,eax
  40a36c:	jb     0x40a3de
  40a36e:	int    0x2e
  40a370:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a371:	ins    DWORD PTR es:[edi],dx
  40a372:	cmp    BYTE PTR [esi+ecx*4],ah
  40a375:	mov    edi,0x69f4916a
  40a37a:	cmp    ebp,DWORD PTR [ebp-0x5659159e]
  40a380:	pop    es
  40a381:	pusha  
  40a382:	pop    esi
  40a383:	rcr    DWORD PTR [edx+0x2441b0f5],1
  40a389:	dec    esp
  40a38a:	cmp    DWORD PTR [eax+0x14],edx
  40a38d:	xor    dh,BYTE PTR [ebp-0x75]
  40a390:	lds    eax,FWORD PTR [ecx+0x43]
  40a393:	fnstenv [edx+0x11886b34]
  40a399:	adc    edx,DWORD PTR [ebx]
  40a39b:	int3   
  40a39c:	sub    al,0x81
  40a39e:	ret    
  40a39f:	cld    
  40a3a0:	repz in al,0x76
  40a3a3:	mov    WORD PTR [edi],ss
  40a3a5:	(bad)  
  40a3a6:	fdiv   DWORD PTR [esi]
  40a3a8:	and    ecx,DWORD PTR ds:0xfae7b9b4
  40a3ae:	dec    ebp
  40a3af:	jge    0x40a38f
  40a3b1:	xor    al,0x7
  40a3b3:	push   edi
  40a3b4:	xlat   BYTE PTR ds:[ebx]
  40a3b5:	inc    BYTE PTR ds:0xc359a5c3
  40a3bb:	add    al,0x5f
  40a3bd:	gs icebp 
  40a3bf:	enter  0x17fd,0xed
  40a3c3:	lahf   
  40a3c4:	push   edi
  40a3c5:	out    dx,al
  40a3c6:	lock dec esi
  40a3c8:	(bad)  
  40a3ca:	(bad)
  40a3cd:	jne    0x40a3e2
  40a3cf:	xchg   edx,eax
  40a3d0:	push   ds
  40a3d1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a3d2:	mov    ?,eax
  40a3d4:	mov    ebp,0x4effa1e9
  40a3d9:	loopne 0x40a3e7
  40a3db:	enter  0x7947,0x3c
  40a3df:	add    ebp,DWORD PTR [ecx+0x79fa3f63]
  40a3e5:	mov    dl,0xcb
  40a3e7:	imul   esp,DWORD PTR [ebx-0x3f],0xffffff9f
  40a3eb:	xor    al,0x78
  40a3ed:	(bad)  
  40a3ee:	and    BYTE PTR ds:0xee7d873f,bl
  40a3f4:	add    al,0x58
  40a3f6:	mov    edi,0x6e774fe7
  40a3fb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a3fc:	fdiv   QWORD PTR [eax]
  40a3fe:	sbb    al,0xfc
  40a400:	retf   
  40a401:	call   0x49a76bfb
  40a406:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a407:	add    edi,edi
  40a409:	ds xor eax,0xd3e47b5c
  40a40f:	clc    
  40a410:	dec    eax
  40a411:	cmp    bl,bl
  40a413:	cdq    
  40a414:	das    
  40a415:	sbb    eax,0x8c6881b0
  40a41a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a41b:	xor    eax,DWORD PTR [ecx]
  40a41d:	(bad)  
  40a41e:	je     0x40a484
  40a420:	cwde   
  40a421:	addr16 xchg ebp,eax
  40a423:	aad    0x15
  40a425:	or     DWORD PTR [edx],0x649cc098
  40a42b:	lahf   
  40a42c:	xchg   BYTE PTR [edx-0x6],ah
  40a42f:	test   BYTE PTR [ebp-0x7a],ch
  40a432:	cmp    cl,BYTE PTR [eax+eax*4]
  40a435:	xchg   BYTE PTR [ebx+0x44],ch
  40a438:	pusha  
  40a439:	aad    0xf9
  40a43b:	sbb    ecx,DWORD PTR [eax-0x5af8e868]
  40a441:	push   0xffffff81
  40a443:	mov    ah,BYTE PTR [ebp-0x7a]
  40a446:	push   cs
  40a447:	cmp    DWORD PTR [ebx],ebp
  40a449:	mov    cl,0xbd
  40a44b:	shl    cl,0x6c
  40a44e:	mov    bl,0x1e
  40a450:	cmp    DWORD PTR [esi],edi
  40a452:	push   es
  40a453:	in     eax,dx
  40a454:	ins    DWORD PTR es:[edi],dx
  40a455:	add    eax,DWORD PTR [ebx+edx*1]
  40a458:	test   BYTE PTR [ebp+esi*4+0x2b],bl
  40a45c:	or     al,0xf4
  40a45e:	mov    ds:0x936790f3,al
  40a463:	inc    esp
  40a464:	hlt    
  40a465:	ins    DWORD PTR es:[edi],dx
  40a466:	enter  0x4ae3,0x33
  40a46a:	pop    edx
  40a46b:	fst    QWORD PTR [ebx]
  40a46d:	xor    al,0x2f
  40a46f:	push   ecx
  40a470:	sbb    ch,BYTE PTR [ebp-0x2d4247e2]
  40a476:	or     eax,0x651b0dc1
  40a47b:	out    0x25,eax
  40a47d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a47e:	sbb    al,0xb1
  40a480:	popf   
  40a481:	shl    bh,1
  40a483:	sub    edx,esp
  40a485:	xor    al,0x8b
  40a487:	inc    edx
  40a488:	ret    0x2e6d
  40a48b:	gs popa 
  40a48d:	xor    BYTE PTR [esi+0x6],cl
  40a490:	cmp    cl,bl
  40a492:	jecxz  0x40a4c3
  40a494:	fidivr DWORD PTR [edx-0x7f62f324]
  40a49a:	lea    ebx,[edi]
  40a49c:	xchg   ecx,eax
  40a49d:	mov    ds:0x4de1661f,al
  40a4a2:	push   ecx
  40a4a3:	nop
  40a4a4:	fs sti 
  40a4a6:	std    
  40a4a7:	popa   
  40a4a8:	cmp    ecx,esp
  40a4aa:	fild   DWORD PTR [eax-0x6e465050]
  40a4b0:	cld    
  40a4b1:	fnstcw WORD PTR [esi+0x23ba5bbe]
  40a4b7:	push   esp
  40a4b8:	pushf  
  40a4b9:	enter  0x7429,0xb5
  40a4bd:	fcmovnbe st,st(2)
  40a4bf:	and    al,0x2a
  40a4c1:	fcom   st(2)
  40a4c3:	xchg   DWORD PTR [esi-0x3f6ff9df],eax
  40a4c9:	std    
  40a4ca:	cwde   
  40a4cb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a4cc:	stos   BYTE PTR es:[edi],al
  40a4cd:	push   esp
  40a4ce:	outs   dx,BYTE PTR ds:[esi]
  40a4cf:	sub    BYTE PTR [edx-0x3cb8ca5a],ah
  40a4d5:	jnp    0x40a45d
  40a4d7:	mov    al,ds:0xc962775
  40a4dc:	xabort 0x8d
  40a4df:	jnp    0x40a466
  40a4e1:	(bad)  
  40a4e2:	jbe    0x40a489
  40a4e4:	xchg   esp,eax
  40a4e5:	adc    ebp,DWORD PTR [eax+0x3f]
  40a4e8:	out    0xe7,eax
  40a4ea:	or     bh,BYTE PTR [ebx]
  40a4ec:	mov    WORD PTR [edi],fs
  40a4ee:	test   eax,0x844b144a
  40a4f3:	jmp    0x40a4ed
  40a4f5:	fadd   st(4),st
  40a4f7:	sub    cl,dl
  40a4f9:	lods   al,BYTE PTR ds:[esi]
  40a4fa:	scas   eax,DWORD PTR es:[edi]
  40a4fb:	jne    0x40a4a8
  40a4fd:	dec    edx
  40a4fe:	adc    DWORD PTR [edi+0x2c],ebx
  40a501:	shl    bh,1
  40a503:	dec    ebx
  40a504:	add    DWORD PTR [edx-0x10],edi
  40a507:	add    DWORD PTR [eax],edx
  40a509:	mov    ebx,0x19e1edf8
  40a50e:	pop    es
  40a50f:	cli    
  40a510:	daa    
  40a511:	dec    ebx
  40a512:	sub    BYTE PTR [edx+0x52],dh
  40a515:	scas   eax,DWORD PTR es:[edi]
  40a516:	push   esp
  40a517:	cmp    BYTE PTR [ebp+0x4094a330],bh
  40a51d:	mov    ds:0xced9c175,eax
  40a522:	mov    ah,0x91
  40a524:	fidivr DWORD PTR [esi+0x38]
  40a527:	adc    BYTE PTR [eax+0x6dce8c83],dh
  40a52d:	cld    
  40a52e:	ret    0xf665
  40a531:	xor    dl,BYTE PTR [eax-0x4fe19c17]
  40a537:	sub    eax,0x310d380a
  40a53c:	jg     0x40a570
  40a53e:	push   cs
  40a53f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a540:	aam    0x21
  40a542:	nop
  40a543:	imul   eax,DWORD PTR [ecx-0x12d26edf],0x4024013e
  40a54d:	sub    dh,bh
  40a54f:	das    
  40a550:	aam    0xad
  40a552:	imul   ebx
  40a554:	ss push esi
  40a556:	push   esi
  40a557:	ins    BYTE PTR es:[edi],dx
  40a558:	xor    al,0xa9
  40a55a:	fnsave [edi]
  40a55c:	dec    edx
  40a55d:	push   esi
  40a55e:	in     eax,0xb0
  40a560:	push   ss
  40a561:	xchg   BYTE PTR [edx-0x7198be46],bl
  40a567:	loopne 0x40a551
  40a569:	sbb    al,0x7f
  40a56b:	stos   DWORD PTR es:[edi],eax
  40a56c:	fild   DWORD PTR [edi+0xb]
  40a56f:	or     esp,edi
  40a571:	mov    BYTE PTR [ecx],al
  40a573:	loope  0x40a529
  40a575:	adc    al,0x93
  40a577:	mov    esp,0xa165a7af
  40a57c:	sbb    al,0x45
  40a57e:	cs push cs
  40a580:	popf   
  40a581:	pop    esi
  40a582:	dec    esi
  40a583:	jnp    0x40a515
  40a585:	jp     0x40a572
  40a587:	mov    esi,0xa1f8f193
  40a58c:	loop   0x40a547
  40a58e:	in     eax,dx
  40a58f:	daa    
  40a590:	jmp    0xa235d60f
  40a595:	and    cl,dl
  40a597:	inc    esi
  40a598:	push   edx
  40a599:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a59a:	aas    
  40a59b:	aam    0x43
  40a59d:	icebp  
  40a59e:	imul   ebx,DWORD PTR ds:0xe5cbb425,0xfffffffe
  40a5a5:	in     eax,0xd2
  40a5a7:	(bad)  
  40a5a8:	and    ebx,DWORD PTR [edx+0xeab0321]
  40a5ae:	adc    BYTE PTR [edx],dl
  40a5b0:	out    0xdc,eax
  40a5b2:	dec    ebp
  40a5b3:	or     eax,eax
  40a5b5:	mov    al,0x0
  40a5b7:	addr16 lahf 
  40a5b9:	es jle 0x40a591
  40a5bc:	push   eax
  40a5bd:	or     ah,BYTE PTR [esi]
  40a5bf:	add    DWORD PTR [ebx],ecx
  40a5c1:	inc    ecx
  40a5c2:	imul   esi,DWORD PTR [esi],0x5f5652ff
  40a5c8:	sub    esp,DWORD PTR [edx-0x69dc4edf]
  40a5ce:	clc    
  40a5cf:	adc    ebx,0xffffffd7
  40a5d2:	cmpxchg8b QWORD PTR [edi]
  40a5d5:	and    ebp,ebp
  40a5d7:	ret    0x5e6b
  40a5da:	dec    ebp
  40a5db:	call   0x81d4e6f9
  40a5e0:	cmp    ch,dl
  40a5e2:	rcr    ecx,cl
  40a5e4:	push   eax
  40a5e5:	sub    DWORD PTR [eax],edx
  40a5e7:	xor    ebp,ebx
  40a5e9:	sbb    edi,DWORD PTR [ecx]
  40a5eb:	or     esi,edi
  40a5ed:	aam    0xe6
  40a5ef:	sub    DWORD PTR [edx],ebp
  40a5f1:	jle    0x40a5ee
  40a5f3:	aad    0x26
  40a5f5:	pop    ebp
  40a5f6:	mov    esi,0xe521f901
  40a5fb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a5fc:	loope  0x40a5ed
  40a5fe:	rol    BYTE PTR [edx+eax*4],1
  40a601:	inc    esp
  40a602:	add    edx,DWORD PTR [eax-0x4046cf3b]
  40a608:	aas    
  40a609:	stc    
  40a60a:	sbb    DWORD PTR [edx-0x53],eax
  40a60d:	stos   DWORD PTR es:[edi],eax
  40a60e:	mov    ebp,0x1d32ce1d
  40a613:	sbb    ax,WORD PTR [eax]
  40a616:	ret    
  40a617:	add    ah,BYTE PTR [ecx-0x1f39e882]
  40a61d:	mov    ds:0x28a06253,eax
  40a622:	dec    edi
  40a623:	cs mov esi,0x57d2a2eb
  40a629:	sbb    ch,BYTE PTR [edi+ecx*8]
  40a62c:	mov    esi,0x31458547
  40a631:	push   0xe7604c22
  40a636:	test   BYTE PTR ds:0x50208679,bl
  40a63c:	call   0x3d6aa956
  40a641:	out    0x76,al
  40a643:	inc    ebp
  40a644:	shl    BYTE PTR [ecx-0x10],0x4c
  40a648:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a649:	leave  
  40a64a:	mov    ch,0x7
  40a64c:	popa   
  40a64d:	push   es
  40a64e:	push   ds
  40a64f:	push   esp
  40a650:	stc    
  40a651:	push   ecx
  40a652:	(bad)  
  40a653:	jo     0x40a69a
  40a655:	test   BYTE PTR [ebp+0x34880768],dh
  40a65b:	sbb    DWORD PTR ds:0x46e3311d,ebp
  40a661:	(bad)  
  40a662:	cwde   
  40a663:	xor    al,dh
  40a665:	(bad)  
  40a666:	sbb    DWORD PTR [eax+0x2e],ecx
  40a669:	mov    esp,0x1873c821
  40a66e:	inc    ecx
  40a66f:	mov    WORD PTR [ebx+0x3d06b63b],es
  40a675:	adc    DWORD PTR [edx-0xa8432dc],0xdc494e8b
  40a67f:	adc    BYTE PTR [ebx-0x2],bl
  40a682:	outs   dx,BYTE PTR ds:[esi]
  40a683:	movs   DWORD PTR es:[edi],DWORD PTR ss:[esi]
  40a685:	jnp    0x40a673
  40a687:	loopne 0x40a683
  40a689:	inc    esi
  40a68a:	jg     0x40a6d3
  40a68c:	fsub   QWORD PTR [ebx]
  40a68e:	sbb    DWORD PTR [eax-0x4fce27bd],eax
  40a694:	fmul   QWORD PTR [ebx-0x52]
  40a697:	sbb    eax,0x552a4496
  40a69c:	mov    ch,0x10
  40a69e:	je     0x40a6c5
  40a6a0:	inc    esp
  40a6a1:	lahf   
  40a6a2:	inc    ecx
  40a6a3:	sbb    ebx,DWORD PTR [edi+0x6a]
  40a6a6:	inc    esi
  40a6a7:	sbb    ch,BYTE PTR [edi+0x47]
  40a6aa:	sub    esp,DWORD PTR [edi]
  40a6ac:	js     0x40a71a
  40a6ae:	xlat   BYTE PTR ds:[ebx]
  40a6af:	jmp    0xd10a:0x2b34d0e2
  40a6b6:	sbb    BYTE PTR [ecx+0x12],0xf6
  40a6ba:	push   cs
  40a6bb:	mov    ss,WORD PTR [esi-0x6a]
  40a6be:	int    0x5a
  40a6c0:	jmp    0x40a679
  40a6c2:	das    
  40a6c3:	fs repnz push edi
  40a6c6:	adc    edx,eax
  40a6c8:	mov    BYTE PTR [eax-0x56],0xfe
  40a6cc:	addr16 adc eax,0xfd1740a5
  40a6d2:	mov    bh,0xa2
  40a6d4:	fdivr  QWORD PTR [ebx]
  40a6d6:	pop    esp
  40a6d7:	jp     0x40a74a
  40a6d9:	nop
  40a6da:	mov    ah,0x25
  40a6dc:	mov    ah,0xe9
  40a6de:	pop    esp
  40a6df:	pop    ebp
  40a6e0:	fimul  WORD PTR [ecx+0x5c70845]
  40a6e6:	pop    ds
  40a6e7:	xchg   BYTE PTR [edx+0x0],al
  40a6ea:	sbb    al,BYTE PTR [eax]
  40a6ec:	add    BYTE PTR [eax],al
  40a6ee:	cmp    DWORD PTR ds:0x42861f,0x0
  40a6f5:	je     0x40a72f
  40a6fb:	cmp    DWORD PTR ds:0x42861f,0x24
  40a702:	jbe    0x40a72f
  40a708:	jmp    0x40a71d
  40a70d:	push   0x42862f
  40a712:	push   0x428042
  40a717:	call   DWORD PTR ds:0x4287cb
  40a71d:	mov    edx,DWORD PTR ds:0x42861f
  40a723:	dec    edx
  40a724:	mov    DWORD PTR ds:0x42861f,edx
  40a72a:	jmp    0x40a6ee
  40a72f:	mov    eax,DWORD PTR [ebp-0x24]
  40a732:	and    DWORD PTR ds:0x42866f,0x0
  40a73c:	jmp    0x40a74e
  40a741:	mov    edx,DWORD PTR ds:0x42866f
  40a747:	inc    edx
  40a748:	mov    DWORD PTR ds:0x42866f,edx
  40a74e:	cmp    DWORD PTR ds:0x42866f,0x17
  40a755:	jae    0x40a78b
  40a75b:	cmp    DWORD PTR ds:0x42866f,0x1b
  40a762:	jl     0x40a78b
  40a768:	jmp    0x40a786
  40a76d:	push   DWORD PTR [ebp-0x28]
  40a770:	push   DWORD PTR [ebp-0x18]
  40a773:	push   0x56d8
  40a778:	push   0x2d04
  40a77d:	push   DWORD PTR [ebp-0x10]
  40a780:	call   DWORD PTR ds:0x42879f
  40a786:	jmp    0x40a741
  40a78b:	mov    edx,DWORD PTR [ebp+0x8]
  40a78e:	xor    eax,ecx
  40a790:	add    eax,esi
  40a792:	cmp    edx,eax
  40a794:	mov    DWORD PTR ds:0x42860b,0x4a21
  40a79e:	jbe    0x40a816
  40a7a4:	mov    eax,DWORD PTR [ebp-0x24]
  40a7a7:	mov    DWORD PTR ds:0x428617,0x16
  40a7b1:	cmp    DWORD PTR ds:0x428617,0x0
  40a7b8:	je     0x40a809
  40a7be:	cmp    DWORD PTR ds:0x428617,0x4
  40a7c5:	ja     0x40a809
  40a7cb:	jmp    0x40a7db
  40a7d0:	push   0x5454
  40a7d5:	call   DWORD PTR ds:0x4287a3
  40a7db:	cmp    DWORD PTR ds:0x428617,0x5
  40a7e2:	jne    0x40a7f7
  40a7e8:	xor    edx,edx
  40a7ea:	add    edx,DWORD PTR ds:0x428617
  40a7f0:	dec    edx
  40a7f1:	mov    DWORD PTR ds:0x428617,edx
  40a7f7:	mov    edx,DWORD PTR ds:0x428617
  40a7fd:	dec    edx
  40a7fe:	mov    DWORD PTR ds:0x428617,edx
  40a804:	jmp    0x40a7b1
  40a809:	xor    eax,ecx
  40a80b:	add    eax,esi
  40a80d:	adc    edx,0x5d89
  40a813:	mov    DWORD PTR [ebp+0x8],eax
  40a816:	sub    edx,DWORD PTR ds:0x42867b
  40a81c:	mov    eax,DWORD PTR [ebp-0x28]
  40a81f:	mov    edx,DWORD PTR [ebp+0x8]
  40a822:	xor    eax,ecx
  40a824:	mov    DWORD PTR ds:0x428677,0x29fb
  40a82e:	add    eax,esi
  40a830:	sub    DWORD PTR ds:0x42865f,0x428667
  40a83a:	imul   eax,edx
  40a83d:	and    DWORD PTR ds:0x42866b,0x0
  40a847:	xor    edx,edx
  40a849:	xor    edx,DWORD PTR ds:0x42866b
  40a84f:	inc    edx
  40a850:	mov    DWORD PTR ds:0x42866b,edx
  40a856:	cmp    DWORD PTR ds:0x42866b,0x4
  40a85d:	jge    0x40a89f
  40a863:	jmp    0x40a876
  40a868:	push   DWORD PTR [ebp-0x1c]
  40a86b:	push   0x428034
  40a870:	call   DWORD PTR ds:0x4287a7
  40a876:	cmp    DWORD PTR ds:0x42866b,0x3
  40a87d:	jne    0x40a892
  40a883:	xor    edx,edx
  40a885:	xor    edx,DWORD PTR ds:0x42866b
  40a88b:	inc    edx
  40a88c:	mov    DWORD PTR ds:0x42866b,edx
  40a892:	cmp    DWORD PTR ds:0x42866b,0x10
  40a899:	jb     0x40a847
  40a89f:	mov    DWORD PTR [ebp+0x8],eax
  40a8a2:	mov    edx,DWORD PTR ds:0x428693
  40a8a8:	mov    edx,DWORD PTR [edx]
  40a8aa:	sbb    DWORD PTR ds:0x42861f,edx
  40a8b0:	mov    eax,DWORD PTR [ebp-0x14]
  40a8b3:	mov    edx,DWORD PTR [ebp+0x8]
  40a8b6:	xor    eax,ecx
  40a8b8:	add    eax,esi
  40a8ba:	cmp    edx,eax
  40a8bc:	je     0x40aa1e
  40a8c2:	mov    eax,DWORD PTR [ebp+0x8]
  40a8c5:	mov    DWORD PTR [ebp-0x20],eax
  40a8c8:	mov    eax,DWORD PTR [ebp-0x4]
  40a8cb:	add    eax,DWORD PTR [ebp-0x30]
  40a8ce:	mov    DWORD PTR [ebp-0x2c],0xf89c85b0
  40a8d5:	mov    DWORD PTR [ebp-0x1c],edi
  40a8d8:	mov    DWORD PTR [ebp-0x34],0xf89c85b2
  40a8df:	mov    DWORD PTR [ebp-0x10],eax
  40a8e2:	mov    DWORD PTR [ebp-0x40],0xf89c85b3
  40a8e9:	mov    DWORD PTR [ebp-0xc],edi
  40a8ec:	mov    eax,DWORD PTR [ebp-0x2c]
  40a8ef:	xor    eax,ecx
  40a8f1:	add    eax,esi
  40a8f3:	jmp    0x40a9da
  40a8f8:	mov    DWORD PTR [ebp-0x38],0xf89c85bb
  40a8ff:	mov    DWORD PTR [ebp-0x3c],0xf89c858e
  40a906:	mov    eax,DWORD PTR [ebp-0xc]
  40a909:	mov    edx,DWORD PTR [ebp+0x8]
  40a90c:	xor    eax,ecx
  40a90e:	add    eax,esi
  40a910:	imul   eax,edx
  40a913:	mov    edx,DWORD PTR [ebp-0x10]
  40a916:	mov    al,BYTE PTR [eax+edx*1]
  40a919:	mov    BYTE PTR [ebp+0xf],al
  40a91c:	mov    eax,DWORD PTR [ebp-0xc]
  40a91f:	mov    edx,DWORD PTR [ebp+0x8]
  40a922:	xor    eax,ecx
  40a924:	add    eax,esi
  40a926:	imul   eax,edx
  40a929:	mov    edx,DWORD PTR [ebp-0x34]
  40a92c:	xor    edx,ecx
  40a92e:	add    eax,edx
  40a930:	mov    edx,DWORD PTR [ebp-0x10]
  40a933:	movzx  eax,BYTE PTR [eax+edx*1+0x3272ec]
  40a93b:	mov    edx,DWORD PTR [ebp-0x38]
  40a93e:	xor    edx,ecx
  40a940:	lea    eax,[edx+eax*1+0x3272ec]
  40a947:	movzx  edx,BYTE PTR [ebp+0xf]
  40a94b:	xor    edx,eax
  40a94d:	mov    BYTE PTR [ebp+0xf],dl
  40a950:	mov    al,BYTE PTR [ebp+0xf]
  40a953:	mov    edx,DWORD PTR [ebp-0xc]
  40a956:	mov    ebx,DWORD PTR [ebp+0x8]
  40a959:	xor    edx,ecx
  40a95b:	add    edx,esi
  40a95d:	imul   edx,ebx
  40a960:	mov    ebx,DWORD PTR [ebp-0x10]
  40a963:	mov    BYTE PTR [edx+ebx*1],al
  40a966:	mov    eax,DWORD PTR [ebp-0xc]
  40a969:	mov    edx,DWORD PTR [ebp+0x8]
  40a96c:	xor    eax,ecx
  40a96e:	add    eax,esi
  40a970:	imul   eax,edx
  40a973:	mov    edx,DWORD PTR [ebp-0x10]
  40a976:	mov    al,BYTE PTR [eax+edx*1]
  40a979:	mov    BYTE PTR [ebp+0xf],al
  40a97c:	mov    eax,DWORD PTR [ebp-0xc]
  40a97f:	mov    edx,DWORD PTR [ebp+0x8]
  40a982:	xor    eax,ecx
  40a984:	add    eax,esi
  40a986:	imul   eax,edx
  40a989:	mov    edx,DWORD PTR [ebp-0x1c]
  40a98c:	xor    edx,ecx
  40a98e:	add    eax,edx
  40a990:	mov    edx,DWORD PTR [ebp-0x10]
  40a993:	movzx  eax,BYTE PTR [eax+edx*1+0x3272ec]
  40a99b:	mov    edx,DWORD PTR [ebp-0x3c]
  40a99e:	xor    edx,ecx
  40a9a0:	lea    eax,[edx+eax*1+0x3272ec]
  40a9a7:	movzx  edx,BYTE PTR [ebp+0xf]
  40a9ab:	xor    edx,eax
  40a9ad:	mov    BYTE PTR [ebp+0xf],dl
  40a9b0:	mov    al,BYTE PTR [ebp+0xf]
  40a9b3:	mov    edx,DWORD PTR [ebp-0xc]
  40a9b6:	mov    ebx,DWORD PTR [ebp+0x8]
  40a9b9:	xor    edx,ecx
  40a9bb:	add    edx,esi
  40a9bd:	imul   edx,ebx
  40a9c0:	mov    ebx,DWORD PTR [ebp-0x10]
  40a9c3:	mov    BYTE PTR [edx+ebx*1],al
  40a9c6:	mov    eax,DWORD PTR [ebp-0x40]
  40a9c9:	mov    edx,DWORD PTR [ebp-0x1c]
  40a9cc:	xor    eax,ecx
  40a9ce:	xor    edx,ecx
  40a9d0:	add    eax,esi
  40a9d2:	add    edx,esi
  40a9d4:	imul   eax,edx
  40a9d7:	add    eax,DWORD PTR [ebp+0x8]
  40a9da:	mov    DWORD PTR [ebp+0x8],eax
  40a9dd:	mov    eax,DWORD PTR [ebp+0x8]
  40a9e0:	mov    edx,DWORD PTR [ebp-0x20]
  40a9e3:	cmp    edx,eax
  40a9e5:	jb     0x40a8f8
  40a9eb:	mov    eax,DWORD PTR [ebp-0x1c]
  40a9ee:	mov    edx,DWORD PTR [ebp-0x20]
  40a9f1:	xor    eax,ecx
  40a9f3:	add    eax,esi
  40a9f5:	imul   eax,edx
  40a9f8:	mov    edx,DWORD PTR [ebp-0x2c]
  40a9fb:	xor    edx,ecx
  40a9fd:	add    edx,esi
  40a9ff:	or     eax,edx
  40aa01:	mov    edx,DWORD PTR [ebp-0x8]
  40aa04:	xor    edx,ecx
  40aa06:	add    eax,edx
  40aa08:	mov    edx,DWORD PTR [ebp-0x8]
  40aa0b:	xor    edx,ecx
  40aa0d:	add    eax,edx
  40aa0f:	mov    edx,DWORD PTR [ebp-0x4]
  40aa12:	lea    eax,[eax+edx*1+0x64e5d8]
  40aa19:	jmp    0x40aa2d
  40aa1e:	mov    eax,DWORD PTR [ebp-0x8]
  40aa21:	mov    edx,DWORD PTR [ebp-0x4]
  40aa24:	xor    eax,ecx
  40aa26:	lea    eax,[eax+edx*1+0x3272ec]
  40aa2d:	mov    DWORD PTR [ebp-0x4],eax
  40aa30:	mov    eax,DWORD PTR [ebp-0x8]
  40aa33:	xor    eax,ecx
  40aa35:	mov    edx,0xffcd8d14
  40aa3a:	sub    edx,eax
  40aa3c:	add    edx,DWORD PTR [ebp-0x18]
  40aa3f:	mov    eax,DWORD PTR [ebp-0x8]
  40aa42:	mov    ebx,DWORD PTR [ebp-0x4]
  40aa45:	xor    eax,ecx
  40aa47:	add    eax,esi
  40aa49:	imul   eax,ebx
  40aa4c:	cmp    eax,edx
  40aa4e:	jbe    0x4082fa
  40aa54:	pop    ebx
  40aa55:	pop    edi
  40aa56:	pop    esi
  40aa57:	leave  
  40aa58:	ret    0x8
  40aa5b:	push   ebp
  40aa5c:	mov    ebp,esp
  40aa5e:	sub    esp,0x10
  40aa61:	mov    eax,ds:0x4286a3
  40aa66:	mov    ecx,DWORD PTR ds:0x428727
  40aa6c:	sub    ecx,eax
  40aa6e:	add    eax,DWORD PTR [eax+ecx*1]
  40aa71:	mov    eax,0xf89c85b0
  40aa76:	mov    DWORD PTR [ebp-0x4],eax
  40aa79:	mov    DWORD PTR [ebp-0x8],0xf89c85b1
  40aa80:	mov    edx,DWORD PTR ds:0x4286db
  40aa86:	xor    ecx,ecx
  40aa88:	or     ecx,DWORD PTR ds:0x428717
  40aa8e:	sub    ecx,edx
  40aa90:	xor    edx,DWORD PTR [edx+ecx*1]
  40aa93:	mov    ecx,DWORD PTR [ebp-0x4]
  40aa96:	or     edx,0x191e
  40aa9c:	push   esi
  40aa9d:	and    DWORD PTR ds:0x4285db,0x0
  40aaa7:	mov    edx,DWORD PTR ds:0x4285db
  40aaad:	inc    edx
  40aaae:	mov    DWORD PTR ds:0x4285db,edx
  40aab4:	cmp    DWORD PTR ds:0x4285db,0x1e
  40aabb:	jl     0x40aae5
  40aac1:	jmp    0x40aad8
  40aac6:	push   0x428028
  40aacb:	push   0x1
  40aacd:	push   0x77f2
  40aad2:	call   DWORD PTR ds:0x4287ab
  40aad8:	cmp    DWORD PTR ds:0x4285db,0x13
  40aadf:	jb     0x40aaa7
  40aae5:	mov    edx,0x75108a4
  40aaea:	sbb    esi,0x397d
  40aaf0:	xor    ecx,edx
  40aaf2:	and    DWORD PTR ds:0x42866f,0x0
  40aafc:	xor    esi,esi
  40aafe:	add    esi,DWORD PTR ds:0x42866f
  40ab04:	inc    esi
  40ab05:	mov    DWORD PTR ds:0x42866f,esi
  40ab0b:	cmp    DWORD PTR ds:0x42866f,0x21
  40ab12:	jge    0x40ceb9
  40ab18:	jmp    0x40ab28
  40ab1d:	push   0x42801b
  40ab22:	call   DWORD PTR ds:0x4287af
  40ab28:	cmp    DWORD PTR ds:0x42866f,0x1c
  40ab2f:	jb     0x40aafc
  40ab35:	jmp    0x40ceb9
  40ab3a:	jo     0x40aaf5
  40ab3c:	aam    0x1d
  40ab3e:	mov    DWORD PTR [ebx],0xd07b7bab
  40ab44:	xor    DWORD PTR [ecx],edx
  40ab46:	sbb    ecx,DWORD PTR [edx]
  40ab48:	xchg   edx,eax
  40ab49:	mov    ah,0x14
  40ab4b:	call   0x5f5425ca
  40ab50:	jp     0x40abcc
  40ab52:	int3   
  40ab53:	ss push eax
  40ab55:	sub    ecx,DWORD PTR [ebp-0x44]
  40ab58:	push   0xab708cdb
  40ab5d:	call   DWORD PTR [edx]
  40ab5f:	jmp    0x40ab38
  40ab61:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ab62:	fnsave [ebx+0x0]
  40ab65:	push   es
  40ab66:	cmp    DWORD PTR [esi+0x13],0x3c
  40ab6a:	lods   eax,DWORD PTR ds:[esi]
  40ab6b:	dec    edx
  40ab6c:	hlt    
  40ab6d:	xor    DWORD PTR [esi-0x23df4b0a],eax
  40ab73:	inc    esp
  40ab74:	ins    BYTE PTR es:[edi],dx
  40ab75:	sbb    al,0x9e
  40ab77:	jns    0x40ab9d
  40ab79:	ins    DWORD PTR es:[edi],dx
  40ab7a:	cmp    al,0xbd
  40ab7c:	stos   DWORD PTR es:[edi],eax
  40ab7d:	dec    esi
  40ab7e:	retf   
  40ab7f:	push   edx
  40ab80:	test   edi,esp
  40ab82:	pop    edx
  40ab83:	pop    ss
  40ab84:	adc    ecx,DWORD PTR [esi]
  40ab86:	out    0x9,eax
  40ab88:	ja     0x40ab48
  40ab8a:	inc    edi
  40ab8b:	in     eax,0x6a
  40ab8d:	stos   DWORD PTR es:[edi],eax
  40ab8e:	pusha  
  40ab8f:	sbb    al,0xb8
  40ab92:	pop    ecx
  40ab93:	cmc    
  40ab94:	mov    esi,DWORD PTR [ebp-0x405b5fef]
  40ab9a:	dec    edi
  40ab9b:	cld    
  40ab9c:	lods   eax,DWORD PTR ds:[esi]
  40ab9d:	push   ds
  40ab9e:	int    0xa1
  40aba0:	ja     0x40abad
  40aba2:	(bad)  
  40aba3:	and    BYTE PTR [edx+0x55f646ec],dl
  40aba9:	push   esp
  40abaa:	cmp    BYTE PTR [edi+0x7a8d000d],dl
  40abb0:	cmp    DWORD PTR [eax+0x91e5edf],esi
  40abb6:	popa   
  40abb7:	repz adc eax,0x2553318b
  40abbd:	repnz xchg ebp,eax
  40abbf:	jle    0x40abe9
  40abc1:	xchg   esp,eax
  40abc2:	jecxz  0x40ac3f
  40abc4:	ret    0xb292
  40abc7:	out    0xed,eax
  40abc9:	out    dx,al
  40abca:	fcom   QWORD PTR [edx+eiz*8]
  40abcd:	pop    eax
  40abce:	jb     0x40ab9f
  40abd0:	add    BYTE PTR [eax-0x10],dl
  40abd3:	out    dx,eax
  40abd4:	jp     0x40abe3
  40abd6:	cmc    
  40abd7:	jae    0x40ac4e
  40abd9:	dec    ebp
  40abda:	test   al,0x66
  40abdc:	retf   0xdf2c
  40abdf:	or     DWORD PTR ds:0xeeb135ad,eax
  40abe5:	fsubr  QWORD PTR [esp+edi*8-0x3e]
  40abe9:	add    DWORD PTR [ebx+0x40a2af22],esi
  40abef:	fwait
  40abf0:	xchg   esp,eax
  40abf1:	xor    BYTE PTR [esi+0x4e514913],bl
  40abf7:	jbe    0x40abfd
  40abf9:	arpl   WORD PTR [ebx],di
  40abfb:	popf   
  40abfc:	xchg   edi,eax
  40abfd:	and    esp,edx
  40abff:	gs cmp edi,esi
  40ac02:	popa   
  40ac03:	or     BYTE PTR [edx+0x6506ba5e],0x5c
  40ac0a:	pop    edi
  40ac0b:	shr    cl,0x93
  40ac0e:	mov    ebp,DWORD PTR [esi]
  40ac10:	pop    edi
  40ac11:	bound  edi,QWORD PTR [esp+ebx*2+0x49e5ef94]
  40ac18:	jge    0x40abf0
  40ac1a:	cmp    ch,bh
  40ac1c:	int3   
  40ac1d:	add    DWORD PTR [ecx],ebx
  40ac1f:	loope  0x40ac1f
  40ac21:	push   0xa5de8bb1
  40ac26:	addr16 js 0x40abb8
  40ac29:	ficom  DWORD PTR [edi]
  40ac2b:	sub    eax,0x9714b602
  40ac30:	test   eax,0x21af3910
  40ac35:	aam    0xdb
  40ac37:	(bad)  
  40ac39:	dec    edx
  40ac3a:	stos   DWORD PTR es:[edi],eax
  40ac3b:	xchg   esp,eax
  40ac3c:	cwde   
  40ac3d:	retf   
  40ac3e:	mov    ebp,0xfac9f146
  40ac43:	scas   al,BYTE PTR es:[edi]
  40ac44:	(bad)  
  40ac45:	push   edi
  40ac46:	out    0x2d,al
  40ac48:	inc    edi
  40ac49:	(bad)  
  40ac4b:	cs sbb al,0x79
  40ac4e:	out    dx,al
  40ac4f:	mov    cl,ch
  40ac51:	or     esp,DWORD PTR [esi-0x6143ac43]
  40ac57:	je     0x40ac3a
  40ac59:	xchg   ecx,eax
  40ac5a:	xor    ecx,DWORD PTR [ebp+0x6cd34fda]
  40ac60:	inc    ebx
  40ac61:	fistp  WORD PTR [esi-0x735fe59e]
  40ac67:	push   0xe1db32ad
  40ac6c:	stos   BYTE PTR es:[edi],al
  40ac6d:	jecxz  0x40abfc
  40ac6f:	inc    edi
  40ac70:	xor    al,0x84
  40ac72:	rcr    DWORD PTR [edx-0x80],1
  40ac75:	add    eax,DWORD PTR [ebx]
  40ac77:	and    ecx,DWORD PTR [ecx-0x6956c758]
  40ac7d:	mov    dh,0xa4
  40ac7f:	pop    edx
  40ac80:	adc    ch,BYTE PTR [edx+0x1]
  40ac83:	sub    esp,eax
  40ac85:	shl    DWORD PTR ds:0x8600007e,0x8a
  40ac8c:	sbb    al,0x2
  40ac8e:	pop    ecx
  40ac8f:	(bad)  
  40ac91:	pop    eax
  40ac92:	xor    al,ah
  40ac94:	mov    ?,WORD PTR [ecx+0x7b]
  40ac97:	jp     0x40acf6
  40ac99:	fisub  WORD PTR [eax]
  40ac9b:	loop   0x40ac5c
  40ac9d:	call   0x797f:0x3da0d85b
  40aca4:	ss lahf 
  40aca6:	jns    0x40ac5c
  40aca8:	xor    BYTE PTR [eax+0x4a],dl
  40acab:	fnsave [ebp+0x53]
  40acae:	and    eax,0x61615150
  40acb3:	jmp    0xccc3:0xa0bfeb4a
  40acba:	addr16 cwde 
  40acbc:	jo     0x40ac8b
  40acbe:	mov    esi,0xa70b377c
  40acc3:	dec    esp
  40acc4:	push   eax
  40acc5:	into   
  40acc6:	outs   dx,DWORD PTR ds:[esi]
  40acc7:	shl    BYTE PTR [eax+0x2a],1
  40acca:	fdivr  QWORD PTR [esi]
  40accc:	ins    DWORD PTR es:[edi],dx
  40accd:	test   BYTE PTR [esi-0x5e5e2725],bh
  40acd3:	mov    ebx,0x66e8946
  40acd8:	js     0x40ad26
  40acda:	xlat   BYTE PTR ds:[ebx]
  40acdb:	retf   
  40acdc:	and    ah,BYTE PTR [edi-0x7]
  40acdf:	lahf   
  40ace0:	or     edi,DWORD PTR [esp+esi*2]
  40ace3:	sub    eax,0xe4210aad
  40ace8:	fwait
  40ace9:	push   ds
  40acea:	dec    edx
  40aceb:	jae    0x40acf9
  40aced:	inc    ebx
  40acee:	clc    
  40acef:	stc    
  40acf0:	push   eax
  40acf1:	loopne 0x40ad0f
  40acf3:	(bad)  
  40acf5:	dec    ebx
  40acf6:	jne    0x40ad57
  40acf8:	shr    DWORD PTR [ecx],1
  40acfa:	imul   eax,eax,0x8172f2
  40ad00:	push   0x41
  40ad02:	push   esp
  40ad03:	pop    ss
  40ad04:	call   FWORD PTR [edi+0x2849b06c]
  40ad0a:	cmc    
  40ad0b:	mov    eax,0x2c4f3fe9
  40ad10:	ret    
  40ad11:	mov    eax,0xbac4aa4c
  40ad16:	stos   BYTE PTR es:[edi],al
  40ad17:	or     eax,0x27f50bd3
  40ad1c:	push   ds
  40ad1d:	aas    
  40ad1e:	aas    
  40ad1f:	push   cs
  40ad20:	xor    al,0x74
  40ad22:	jge    0x40acd1
  40ad24:	sbb    al,0xb2
  40ad26:	inc    ebx
  40ad27:	push   esi
  40ad28:	gs in  eax,0x38
  40ad2b:	dec    ecx
  40ad2c:	push   ds
  40ad2d:	(bad)  
  40ad2e:	jo     0x40acd0
  40ad30:	inc    edx
  40ad31:	mov    cl,ch
  40ad33:	add    dl,BYTE PTR [ebp+0x61]
  40ad36:	mov    DWORD PTR [edi],0x29ceffc3
  40ad3c:	jne    0x40ad94
  40ad3e:	cmc    
  40ad3f:	jmp    0x40ca4739
  40ad44:	out    0x14,eax
  40ad46:	enter  0xfd03,0xc
  40ad4a:	lock mov cl,0x5c
  40ad4d:	add    ch,ch
  40ad4f:	(bad)  
  40ad52:	adc    al,0x3b
  40ad54:	data16 mov ds:0x6d4d6f5d,al
  40ad5a:	pushf  
  40ad5b:	mul    BYTE PTR [eax+0x79]
  40ad5e:	mov    ebp,0xb196029b
  40ad63:	adc    cl,bl
  40ad65:	les    esi,FWORD PTR [ebx]
  40ad67:	call   0xfdfb:0xcd76ab94
  40ad6e:	xchg   esp,eax
  40ad6f:	or     DWORD PTR [ebx+0x15c308f1],0x3f
  40ad76:	dec    edx
  40ad77:	arpl   WORD PTR [edi+0x49],ax
  40ad7a:	sub    ecx,ebp
  40ad7c:	lea    eax,[esi+0x72]
  40ad7f:	call   DWORD PTR [eax+0x53]
  40ad82:	leave  
  40ad83:	cmp    eax,DWORD PTR [ebx+0x2b660272]
  40ad89:	data16 cmps BYTE PTR gs:[esi],BYTE PTR es:[edi]
  40ad8c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ad8d:	add    eax,0xf970ec91
  40ad92:	dec    ecx
  40ad93:	jne    0x40ad28
  40ad95:	jl     0x40adfc
  40ad97:	daa    
  40ad98:	mov    ds,WORD PTR [esi+0x2323c898]
  40ad9e:	pop    edi
  40ad9f:	jecxz  0x40adc7
  40ada1:	inc    edx
  40ada2:	iret   
  40ada3:	mov    ah,0x38
  40ada5:	je     0x40adf4
  40ada7:	sbb    esi,DWORD PTR [ecx-0x50]
  40adaa:	pop    ebp
  40adab:	data16 loop 0x40ae11
  40adae:	and    eax,0x1a3b08fd
  40adb3:	push   0x293b9903
  40adb8:	xchg   edx,eax
  40adb9:	icebp  
  40adba:	das    
  40adbb:	mov    dh,0x55
  40adbd:	out    dx,al
  40adbe:	jl     0x40ae3b
  40adc0:	dec    edi
  40adc1:	mov    ah,0x3a
  40adc3:	sub    BYTE PTR [ecx+0x6f],ch
  40adc6:	les    ecx,FWORD PTR ds:0x767e3d92
  40adcc:	mov    ds:0x790c1401,eax
  40add1:	std    
  40add2:	out    0xb1,eax
  40add4:	add    DWORD PTR [ecx],ebp
  40add6:	das    
  40add7:	inc    edi
  40add8:	imul   ebx,DWORD PTR [eax],0x8733e79d
  40adde:	push   edi
  40addf:	imul   ebp,DWORD PTR [ecx+ebp*1],0xcfc9dcdd
  40ade6:	mov    fs,WORD PTR [esi+0x45]
  40ade9:	repnz mov eax,0x2d5703fb
  40adef:	imul   DWORD PTR [ebp-0x6a2e48b0]
  40adf5:	ret    
  40adf6:	pop    DWORD PTR [ecx+0x7122ae9f]
  40adfc:	sbb    ebx,DWORD PTR [eax-0x3c]
  40adff:	jno    0x40ae63
  40ae01:	repnz mov ss,WORD PTR ds:0xbbcf0ded
  40ae08:	adc    ch,cl
  40ae0a:	lods   eax,DWORD PTR ds:[esi]
  40ae0b:	pop    ebp
  40ae0c:	addr16 mov edi,0xfc8917f1
  40ae12:	xchg   esp,eax
  40ae13:	xor    edi,ebp
  40ae15:	outs   dx,DWORD PTR ds:[esi]
  40ae16:	push   eax
  40ae17:	fcmove st,st(5)
  40ae19:	test   eax,esp
  40ae1b:	dec    esi
  40ae1c:	sbb    bh,BYTE PTR [esi+0x18]
  40ae1f:	mov    ch,0xc
  40ae21:	jae    0x40ade4
  40ae23:	fs jo  0x40ae08
  40ae26:	or     ah,BYTE PTR [eax-0xffd45a4]
  40ae2c:	or     DWORD PTR [ebp+0x47],eax
  40ae2f:	mov    eax,ds:0x55e5ca6f
  40ae34:	sbb    ecx,eax
  40ae36:	(bad)  
  40ae37:	enter  0x389a,0x4a
  40ae3b:	fisubr DWORD PTR [eax-0x67]
  40ae3e:	je     0x40ae25
  40ae40:	mov    cl,0xbb
  40ae42:	inc    ebx
  40ae43:	lods   eax,DWORD PTR ds:[esi]
  40ae44:	jp     0x40aeb5
  40ae46:	je     0x40ae21
  40ae48:	addr16 and ch,bh
  40ae4b:	push   ss
  40ae4c:	or     eax,0xfcea2236
  40ae51:	cli    
  40ae52:	popf   
  40ae53:	adc    al,0xeb
  40ae55:	xchg   BYTE PTR [ecx],dh
  40ae57:	cmp    ebx,0x2e
  40ae5a:	out    dx,eax
  40ae5b:	aad    0x9f
  40ae5d:	push   eax
  40ae5e:	gs push ebx
  40ae60:	mov    edi,0x4de97e7
  40ae65:	push   ebx
  40ae66:	mov    cl,0x5e
  40ae68:	inc    eax
  40ae69:	push   0xfffffff1
  40ae6b:	sub    al,0xbc
  40ae6d:	call   0x6d7aeea
  40ae72:	inc    esp
  40ae73:	bnd ret 0xeeec
  40ae77:	mov    ebx,0x1a52e78d
  40ae7c:	cmp    DWORD PTR ds:0x5062a9b8,ebx
  40ae82:	popa   
  40ae83:	pop    ds
  40ae84:	jmp    0x1490:0xee71361d
  40ae8b:	lds    edx,FWORD PTR ds:0x231f0d6e
  40ae91:	add    bl,dl
  40ae93:	inc    esi
  40ae94:	js     0x40af0d
  40ae96:	xlat   BYTE PTR ds:[ebx]
  40ae97:	ror    DWORD PTR [ecx-0x3],cl
  40ae9a:	xor    eax,0x2b2d457b
  40ae9f:	jne    0x40ae7c
  40aea1:	rcl    BYTE PTR [ebp+edx*1+0x7e8b0935],0x52
  40aea9:	dec    edx
  40aeaa:	adc    cl,bh
  40aeac:	xchg   esp,eax
  40aead:	outs   dx,DWORD PTR ds:[esi]
  40aeae:	(bad)  
  40aeaf:	je     0x40aeaa
  40aeb1:	sti    
  40aeb2:	call   0xe3955f14
  40aeb7:	jne    0x40af09
  40aeb9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40aeba:	pushf  
  40aebb:	bound  edx,QWORD PTR [ebp-0x54]
  40aebe:	jecxz  0x40aeac
  40aec0:	mov    ah,ch
  40aec2:	mov    al,ds:0x8928abad
  40aec7:	xor    al,BYTE PTR [ecx+0x2b]
  40aeca:	jns    0x40af2a
  40aecc:	mov    esi,0xef5cf3fe
  40aed1:	fst    QWORD PTR [ebx+0x0]
  40aed4:	xor    edi,DWORD PTR [ecx-0x1]
  40aed7:	aaa    
  40aed8:	xchg   ebp,eax
  40aed9:	mov    ebx,0x6f1e3a87
  40aede:	iret   
  40aedf:	add    DWORD PTR [esi-0x3e8fedc],esi
  40aee5:	pop    edi
  40aee6:	lea    edx,[eax]
  40aee8:	out    0x97,al
  40aeea:	retf   0x81bc
  40aeed:	call   0x7e889c94
  40aef2:	inc    ebp
  40aef3:	or     al,0x6c
  40aef5:	or     al,0x4d
  40aef7:	jb     0x40ae98
  40aef9:	jbe    0x40af61
  40aefb:	lods   eax,DWORD PTR ds:[esi]
  40aefc:	xchg   ecx,eax
  40aefd:	enter  0xcf0c,0x66
  40af01:	ds pop ebx
  40af03:	jno    0x40af29
  40af05:	sub    BYTE PTR [ebp+eiz*2+0x6147e596],dh
  40af0c:	push   es
  40af0d:	movs   BYTE PTR es:[di],BYTE PTR fs:[si]
  40af10:	dec    cx
  40af12:	int    0x8e
  40af14:	adc    esi,ebp
  40af16:	fld    QWORD PTR [ebx-0x51]
  40af19:	push   0x3
  40af1b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40af1c:	xlat   BYTE PTR ds:[ebx]
  40af1d:	dec    si
  40af1f:	(bad)  
  40af20:	in     al,0x24
  40af22:	adc    al,BYTE PTR [edx+0x7145358]
  40af28:	jno    0x40af84
  40af2a:	push   ebp
  40af2b:	repnz sub DWORD PTR ds:0xb4e884aa,0xffffff90
  40af33:	lahf   
  40af34:	leave  
  40af35:	adc    BYTE PTR [esi],ah
  40af37:	xlat   BYTE PTR ds:[ebx]
  40af38:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40af39:	jo     0x40af07
  40af3b:	jge    0x40af77
  40af3d:	cmp    edi,DWORD PTR [ecx+0x2d]
  40af40:	int    0xcc
  40af42:	(bad)  
  40af43:	int3   
  40af44:	je     0x40af2d
  40af46:	lods   al,BYTE PTR ds:[esi]
  40af47:	icebp  
  40af48:	cmp    eax,0x11840c40
  40af4d:	mov    ss,WORD PTR [ebx-0x70]
  40af50:	dec    ebp
  40af51:	or     eax,DWORD PTR [ebx-0x41f405c]
  40af57:	cmp    al,0x60
  40af59:	cli    
  40af5a:	xchg   esi,eax
  40af5b:	add    bl,dh
  40af5d:	les    ecx,FWORD PTR [ecx+eax*8]
  40af60:	(bad)  
  40af61:	js     0x40aef2
  40af63:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40af64:	push   ss
  40af65:	inc    esp
  40af66:	outs   dx,BYTE PTR ds:[esi]
  40af67:	jge    0x40af32
  40af69:	pop    ss
  40af6a:	ja     0x40af1f
  40af6c:	ins    BYTE PTR es:[edi],dx
  40af6d:	bound  esi,QWORD PTR [esp+ecx*2-0x10]
  40af71:	sub    eax,0x4ceb5630
  40af76:	mov    esi,0x71f64dc0
  40af7b:	dec    edi
  40af7c:	push   edi
  40af7d:	scas   al,BYTE PTR es:[edi]
  40af7e:	inc    esp
  40af7f:	xor    dl,BYTE PTR [edi+0x43ae531a]
  40af85:	test   BYTE PTR [ecx+0x74],dl
  40af88:	and    al,0x55
  40af8a:	sahf   
  40af8b:	dec    eax
  40af8c:	mov    eax,0x8b84b5b3
  40af91:	fadd   QWORD PTR [esi]
  40af93:	(bad)  
  40af94:	jmp    0x40afef
  40af96:	scas   eax,DWORD PTR es:[edi]
  40af97:	add    BYTE PTR [ebp-0x70b99043],ah
  40af9d:	mov    bl,0x95
  40af9f:	mov    ecx,0xa5b28448
  40afa4:	int    0x3c
  40afa6:	or     eax,0x8dff826f
  40afab:	mov    dl,ch
  40afad:	xor    ah,bl
  40afaf:	xchg   ecx,esp
  40afb1:	addr16 inc esi
  40afb3:	(bad)  
  40afb4:	jnp    0x40af6b
  40afb6:	mov    bh,BYTE PTR [ecx]
  40afb8:	jmp    0x32a88ee1
  40afbd:	call   0x2f240bf
  40afc2:	mov    ds:0xdf907851,al
  40afc7:	not    BYTE PTR [eax]
  40afc9:	and    edx,ecx
  40afcb:	jnp    0x40aff5
  40afcd:	and    al,BYTE PTR [edi+0x1a2dbb3e]
  40afd3:	int    0x20
  40afd5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40afd6:	cmc    
  40afd7:	push   0xf
  40afd9:	iret   
  40afda:	add    eax,0xc0e3efac
  40afdf:	clc    
  40afe0:	ret    
  40afe1:	add    ebx,DWORD PTR [edi-0xb00de64]
  40afe7:	popf   
  40afe8:	out    0x94,eax
  40afea:	int3   
  40afeb:	push   ds
  40afec:	neg    DWORD PTR [edi]
  40afee:	cld    
  40afef:	jbe    0x40b062
  40aff1:	dec    ecx
  40aff2:	sub    al,0x13
  40aff4:	xchg   ebx,eax
  40aff5:	and    edx,DWORD PTR [edx+0x31]
  40aff8:	ss jl  0x40b03e
  40affb:	jno    0x40afff
  40affd:	or     esp,ecx
  40afff:	fld    QWORD PTR [edi]
  40b001:	dec    esp
  40b002:	add    ah,0xa8
  40b005:	cs stos BYTE PTR es:[edi],al
  40b007:	xor    BYTE PTR [esi+0x1de44b2e],bl
  40b00d:	arpl   WORD PTR [ecx],di
  40b00f:	sub    BYTE PTR gs:[ebx+eiz*1-0x1dce2589],ah
  40b017:	jmp    0xad45:0xe8b8f17a
  40b01e:	jp     0x40b059
  40b020:	push   edi
  40b021:	or     dl,BYTE PTR [ecx-0x2afa2982]
  40b027:	shl    BYTE PTR [edi+0x0],0x0
  40b02b:	dec    ebp
  40b02c:	xchg   ebp,eax
  40b02d:	(bad)  
  40b02e:	pop    esp
  40b02f:	test   ch,cl
  40b031:	push   0x8abef35f
  40b036:	dec    ebx
  40b037:	and    ah,BYTE PTR [ebp+0x7d7fafa9]
  40b03d:	xchg   al,ah
  40b03f:	cmp    DWORD PTR [edx],ecx
  40b041:	mov    bl,0x68
  40b043:	ret    0xdf25
  40b046:	add    DWORD PTR [ebx+0x1f9c8a1b],eax
  40b04c:	ss in  eax,dx
  40b04e:	lahf   
  40b04f:	jo     0x40b0cb
  40b051:	mov    al,0x24
  40b053:	sbb    al,0xff
  40b055:	push   esp
  40b056:	adc    eax,0xaf59e17d
  40b05b:	popf   
  40b05c:	ja     0x40b07f
  40b05e:	xchg   edi,eax
  40b05f:	arpl   WORD PTR [ecx-0x40e07c71],dx
  40b065:	das    
  40b066:	pushf  
  40b067:	pusha  
  40b068:	jae    0x40b0dc
  40b06a:	pop    edi
  40b06b:	push   ss
  40b06c:	mov    eax,0xe56050cb
  40b071:	pop    ecx
  40b072:	dec    esp
  40b073:	jle    0x40b044
  40b075:	xchg   cx,ax
  40b077:	xchg   ecx,eax
  40b078:	or     al,0x56
  40b07a:	push   edi
  40b07b:	cdq    
  40b07c:	ins    DWORD PTR es:[edi],dx
  40b07d:	or     al,BYTE PTR [ecx-0x3b]
  40b080:	and    dl,BYTE PTR [edx]
  40b082:	mov    bl,0x70
  40b084:	imul   edx,DWORD PTR [eax],0x9535e57c
  40b08a:	pop    ebp
  40b08b:	mov    ecx,0x71af824
  40b090:	sbb    eax,0xc66eebe0
  40b095:	and    eax,0x720bef12
  40b09a:	test   al,bh
  40b09c:	loop   0x40b03b
  40b09e:	iret   
  40b09f:	retf   
  40b0a0:	mov    bh,0x3e
  40b0a2:	pop    esi
  40b0a3:	cli    
  40b0a4:	mov    bh,0x2a
  40b0a6:	(bad)  
  40b0a8:	es adc edx,eax
  40b0ab:	inc    edx
  40b0ac:	add    eax,0xabb64fd1
  40b0b1:	xchg   DWORD PTR [edi],eax
  40b0b3:	xchg   ecx,eax
  40b0b4:	inc    esi
  40b0b5:	and    esp,DWORD PTR [ecx+0x5]
  40b0b8:	rcr    DWORD PTR [ebx+0x40],cl
  40b0bb:	inc    eax
  40b0bc:	loope  0x40b09f
  40b0be:	jge    0x40b04b
  40b0c0:	jmp    0x6763adc
  40b0c5:	rol    DWORD PTR [edi-0x72],cl
  40b0c8:	loopne 0x40b0b0
  40b0ca:	xchg   edi,eax
  40b0cb:	mov    ecx,0x2e081f53
  40b0d1:	sti    
  40b0d2:	xor    eax,0x19ffd982
  40b0d7:	and    eax,DWORD PTR [ecx-0x7201a45c]
  40b0dd:	aas    
  40b0de:	lahf   
  40b0df:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b0e0:	(bad)  
  40b0e2:	dec    ebp
  40b0e3:	outs   dx,BYTE PTR ds:[esi]
  40b0e4:	fs lahf 
  40b0e6:	cmp    al,ah
  40b0e8:	add    al,0xd
  40b0ea:	sbb    DWORD PTR [edi+0x43],edx
  40b0ed:	mov    bl,BYTE PTR [esi]
  40b0ef:	int3   
  40b0f0:	and    dh,al
  40b0f2:	sahf   
  40b0f3:	jp     0x40b0fb
  40b0f5:	aad    0x27
  40b0f7:	inc    esp
  40b0f8:	xor    bh,BYTE PTR [esi-0xec85996]
  40b0fe:	jo     0x40b09e
  40b100:	sar    DWORD PTR [esi+0x12],cl
  40b103:	mov    bl,bl
  40b105:	ror    BYTE PTR [eax],cl
  40b107:	xchg   edi,eax
  40b108:	(bad)  
  40b109:	jmp    0x526ce82e
  40b10e:	cmp    ah,dh
  40b110:	xchg   ebx,eax
  40b111:	xchg   BYTE PTR ss:[ebp+0x25b8be0],ah
  40b118:	sahf   
  40b119:	jnp    0x40b139
  40b11b:	mov    eax,0xc55f98db
  40b120:	mov    dh,0xed
  40b122:	xchg   ebp,eax
  40b123:	out    dx,eax
  40b124:	sbb    dl,BYTE PTR [edi]
  40b126:	leave  
  40b127:	push   ebx
  40b128:	fdivp  st(2),st
  40b12a:	xchg   ecx,eax
  40b12b:	mov    esi,0xaeaa68a5
  40b130:	je     0x40b157
  40b132:	jl     0x40b106
  40b134:	mov    dl,0x3d
  40b136:	add    eax,0x768903ca
  40b13b:	retf   
  40b13c:	out    0x77,eax
  40b13e:	jmp    0x6dba:0x510aeee4
  40b145:	cmc    
  40b146:	cmp    BYTE PTR ds:0x8c08862e,ch
  40b14c:	cwde   
  40b14d:	(bad)  
  40b14e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b14f:	mov    BYTE PTR [esi-0x180484f4],0x20
  40b156:	cwde   
  40b157:	leave  
  40b158:	adc    edi,DWORD PTR [eax+0x1b7d60ff]
  40b15e:	jl     0x40b1c1
  40b160:	mov    bh,0x70
  40b162:	(bad)  
  40b164:	mov    dl,0xd7
  40b166:	inc    ecx
  40b167:	and    bl,BYTE PTR [edx]
  40b169:	fsubr  DWORD PTR [ebx+0x66babd47]
  40b16f:	aad    0x41
  40b171:	arpl   WORD PTR [esi+0x75],ax
  40b174:	loopne 0x40b163
  40b176:	fwait
  40b177:	loop   0x40b12c
  40b179:	gs push 0x4623481d
  40b17f:	dec    ebx
  40b180:	xor    BYTE PTR ds:0x41ef1853,ch
  40b186:	(bad)  
  40b187:	mov    edi,0xf73ab4c3
  40b18c:	adc    DWORD PTR [esi+0x28],esi
  40b18f:	mov    dh,0xc1
  40b191:	mov    ebp,0x2d570a36
  40b196:	cs sub eax,0xdb9e30d8
  40b19c:	data16 into 
  40b19e:	xchg   ecx,eax
  40b19f:	inc    eax
  40b1a0:	jecxz  0x40b1ef
  40b1a2:	inc    ecx
  40b1a3:	pop    esi
  40b1a4:	sbb    eax,0x28b9379b
  40b1a9:	mov    BYTE PTR ds:0xf73721ad,0xc1
  40b1b0:	adc    al,BYTE PTR [edx+ecx*2-0x3fc8ad34]
  40b1b7:	xchg   BYTE PTR [ebx+0x6a30a0ea],ch
  40b1bd:	retf   0xc4bf
  40b1c0:	cmp    esp,DWORD PTR [esi]
  40b1c2:	ja     0x40b1c1
  40b1c4:	sub    DWORD PTR [ecx*8+0x2b747ee2],ebx
  40b1cb:	mov    esp,0x8780685f
  40b1d0:	rol    BYTE PTR [edi-0x18059534],cl
  40b1d6:	cld    
  40b1d7:	mov    bl,0x22
  40b1d9:	fdiv   QWORD PTR [edx]
  40b1db:	test   al,0xc
  40b1dd:	inc    edx
  40b1de:	add    ch,BYTE PTR [edi]
  40b1e0:	idiv   BYTE PTR [edx+0x22]
  40b1e3:	mov    bl,bl
  40b1e5:	mov    ds:0x4c7b4b8c,al
  40b1ea:	loopne 0x40b1c3
  40b1ec:	aaa    
  40b1ed:	lds    esi,FWORD PTR [esi+0x6a900e7]
  40b1f3:	popa   
  40b1f4:	das    
  40b1f5:	pop    esi
  40b1f6:	repz fistp DWORD PTR [bx+di-0x26]
  40b1fb:	sub    eax,0x5da86fac
  40b200:	aaa    
  40b201:	sub    eax,DWORD PTR [edi-0x72]
  40b204:	inc    edi
  40b205:	mov    edi,0x62f485ab
  40b20a:	gs pop ecx
  40b20c:	sbb    ch,BYTE PTR [esi]
  40b20e:	and    eax,0xfbf7c7af
  40b213:	jl     0x40b222
  40b215:	popa   
  40b216:	adc    esp,DWORD PTR [eax]
  40b218:	loop   0x40b285
  40b21a:	imul   eax,DWORD PTR ds:0xfd0f5705,0x4a
  40b221:	pop    esp
  40b222:	jle    0x40b1ed
  40b224:	jne    0x40b1c9
  40b226:	mov    esi,DWORD PTR [ebp-0x295ca56e]
  40b22c:	cmp    al,0xd5
  40b22e:	stos   BYTE PTR es:[edi],al
  40b22f:	aas    
  40b230:	stos   BYTE PTR es:[edi],al
  40b231:	push   ebp
  40b232:	push   ecx
  40b233:	mov    ecx,0xc889eeba
  40b238:	xchg   edi,eax
  40b239:	sahf   
  40b23a:	inc    esi
  40b23b:	inc    DWORD PTR [ebx+0x1cf7e1bc]
  40b241:	jg     0x40b1cb
  40b243:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b244:	jl     0x40b22f
  40b246:	loop   0x40b2bc
  40b248:	aas    
  40b249:	mov    esi,0x92bca04
  40b24e:	shr    edx,0x57
  40b251:	out    dx,al
  40b252:	in     eax,0x1f
  40b254:	leave  
  40b255:	jne    0x40b1e9
  40b257:	sbb    al,0x53
  40b259:	push   eax
  40b25a:	mov    eax,ds:0x351e25f8
  40b25f:	jmp    0x17b19ab1
  40b264:	daa    
  40b265:	dec    edi
  40b266:	out    0x8f,eax
  40b268:	mov    ch,0x3d
  40b26a:	and    esi,edx
  40b26c:	nop
  40b26d:	pusha  
  40b26e:	ret    
  40b26f:	add    edx,DWORD PTR [ecx-0xd1130aa]
  40b275:	ret    0xef13
  40b278:	sub    al,0x9d
  40b27a:	ins    DWORD PTR es:[edi],dx
  40b27b:	pop    ss
  40b27c:	mov    ch,0x74
  40b27e:	pop    ecx
  40b27f:	sar    DWORD PTR [ebx+0x75669f3f],cl
  40b285:	jno    0x40b2ef
  40b287:	adc    BYTE PTR [ebx+edi*2+0x44],ch
  40b28b:	lea    eax,[edi-0x471ebb50]
  40b291:	ret    
  40b292:	push   edx
  40b293:	mov    esp,edx
  40b295:	push   0x9ea38bef
  40b29a:	inc    ebp
  40b29b:	push   ds
  40b29c:	inc    ebp
  40b29d:	clc    
  40b29e:	cmp    eax,0xd6aa4273
  40b2a3:	mov    eax,0x9e0e0ef9
  40b2a8:	push   ss
  40b2a9:	push   esp
  40b2aa:	mov    ds:0x9146f45e,eax
  40b2af:	mov    eax,ds:0xd119e36
  40b2b4:	dec    esi
  40b2b5:	not    DWORD PTR [ebx+0xef913ed]
  40b2bb:	push   ecx
  40b2bc:	out    dx,al
  40b2bd:	sub    eax,0x8d89fdd8
  40b2c2:	repz sub edx,DWORD PTR [eax]
  40b2c5:	cs xchg ecx,eax
  40b2c7:	ins    BYTE PTR es:[edi],dx
  40b2c8:	jnp    0x40b26e
  40b2ca:	sbb    edi,DWORD PTR [ebx]
  40b2cc:	outs   dx,DWORD PTR ds:[esi]
  40b2cd:	mov    al,ds:0x9c560f90
  40b2d2:	pop    eax
  40b2d3:	xor    al,0xe2
  40b2d5:	push   edi
  40b2d6:	cmp    BYTE PTR [ecx-0x36],dl
  40b2d9:	scas   al,BYTE PTR es:[edi]
  40b2da:	jbe    0x40b2ad
  40b2dc:	aaa    
  40b2dd:	jae    0x40b358
  40b2df:	cli    
  40b2e0:	fdiv   QWORD PTR [edi+0x0]
  40b2e3:	push   cs
  40b2e4:	push   ss
  40b2e5:	pop    edi
  40b2e6:	in     al,0xb7
  40b2e8:	cwde   
  40b2e9:	xor    eax,0x33fbb2b0
  40b2ee:	scas   al,BYTE PTR es:[edi]
  40b2ef:	add    eax,0x8667b8f7
  40b2f4:	jge    0x40b341
  40b2f6:	mov    bh,0xeb
  40b2f8:	sbb    BYTE PTR [ebp-0x2a],0xdd
  40b2fc:	mov    al,ds:0xa24b9489
  40b301:	pop    eax
  40b302:	imul   edi,DWORD PTR [edi+0x1f],0x2ae71604
  40b309:	(bad)  
  40b30a:	clc    
  40b30b:	mov    edx,0x2020983e
  40b310:	pushf  
  40b311:	call   0x8403:0x888505e6
  40b318:	pop    esi
  40b319:	push   es
  40b31a:	mov    ecx,0xd0732651
  40b31f:	jo     0x40b337
  40b321:	test   al,0x90
  40b323:	push   0xffffff86
  40b325:	and    bl,BYTE PTR [eax-0x13]
  40b328:	inc    ebp
  40b329:	(bad)  
  40b32a:	inc    edi
  40b32b:	gs in  eax,0xf4
  40b32e:	test   al,0xf9
  40b330:	pusha  
  40b331:	ins    DWORD PTR es:[edi],dx
  40b332:	lods   eax,DWORD PTR ds:[esi]
  40b333:	rcr    DWORD PTR [ebp-0x13ab2f81],0x6e
  40b33a:	dec    edi
  40b33b:	push   ecx
  40b33c:	ror    ah,1
  40b33e:	arpl   WORD PTR [edx+0x492467d1],dx
  40b344:	(bad)
  40b348:	(bad)  
  40b349:	test   BYTE PTR [ebp+0x60b7ab8e],0xb8
  40b350:	bound  ebp,QWORD PTR [eax+0x609fe913]
  40b356:	jbe    0x40b39b
  40b358:	pusha  
  40b359:	dec    ebx
  40b35a:	jmp    0xd0f690d3
  40b35f:	stc    
  40b360:	addr16 int 0x4c
  40b363:	ss inc edx
  40b365:	fldcw  WORD PTR [edx-0x66f86e1e]
  40b36b:	cmp    al,0xd2
  40b36d:	xchg   ebx,eax
  40b36e:	cld    
  40b36f:	enter  0xa48d,0x3c
  40b373:	loopne 0x40b3db
  40b375:	lea    esi,[edx]
  40b377:	cmp    al,0xa6
  40b379:	cmp    DWORD PTR [eax],eax
  40b37b:	loopne 0x40b3e2
  40b37d:	stc    
  40b37e:	add    BYTE PTR [edi],dl
  40b380:	cs jmp 0xb687:0x4fe7b65a
  40b388:	fs in  al,0xf0
  40b38b:	adc    ah,dl
  40b38d:	setae  BYTE PTR [edx+ebp*8]
  40b391:	jo     0x40b31c
  40b393:	call   0xff4e:0x40d6814c
  40b39a:	xchg   esi,eax
  40b39b:	retf   0xd75e
  40b39e:	scas   al,BYTE PTR es:[edi]
  40b39f:	js     0x40b325
  40b3a1:	popf   
  40b3a2:	loope  0x40b401
  40b3a4:	loopne 0x40b41a
  40b3a6:	xor    eax,DWORD PTR [ebp-0x9f59f69]
  40b3ac:	cld    
  40b3ad:	lods   eax,DWORD PTR ds:[esi]
  40b3ae:	dec    eax
  40b3af:	push   eax
  40b3b0:	data16 rcl BYTE PTR [edx+0x4b6d2f9d],1
  40b3b7:	adc    eax,0x80c4da1a
  40b3bc:	xrelease xchg BYTE PTR [ecx+ebx*4],al
  40b3c0:	adc    bh,BYTE PTR [ebp-0x7f14de05]
  40b3c6:	pop    ds
  40b3c7:	and    eax,ecx
  40b3c9:	cmp    al,ch
  40b3cb:	lods   eax,DWORD PTR ds:[esi]
  40b3cc:	addr16 xor eax,0x9cca6d0f
  40b3d2:	mov    esp,0xe7f02e6f
  40b3d7:	mov    edi,0xb6e59018
  40b3dc:	into   
  40b3dd:	xchg   ebp,eax
  40b3de:	cs mov bl,0xf2
  40b3e1:	sbb    al,0x93
  40b3e3:	scas   al,BYTE PTR es:[edi]
  40b3e4:	scas   eax,DWORD PTR es:[edi]
  40b3e5:	ss pop ss
  40b3e7:	fwait
  40b3e8:	add    ebx,DWORD PTR [ecx]
  40b3ea:	data16 mov dl,0x51
  40b3ed:	mov    eax,0xb5aaa25f
  40b3f2:	aad    0x70
  40b3f4:	sbb    al,0x41
  40b3f6:	sbb    DWORD PTR [eax-0x2cdef136],esi
  40b3fc:	test   BYTE PTR [ecx],0xec
  40b3ff:	test   BYTE PTR [eax-0x3eb237fa],ah
  40b405:	dec    edx
  40b406:	mov    al,0x62
  40b408:	cmp    BYTE PTR [ebx],ah
  40b40a:	mov    ds:0x2545a52b,al
  40b40f:	cmp    eax,0xe3fcafc9
  40b414:	dec    esi
  40b415:	sbb    ch,0x7f
  40b418:	enter  0x6e97,0x89
  40b41c:	imul   ebp,DWORD PTR [ebx+eax*8-0x19254d64],0x5fea1607
  40b427:	cmp    BYTE PTR [ebp-0x2e],cl
  40b42a:	jbe    0x40b3b7
  40b42c:	out    dx,al
  40b42d:	aam    0x10
  40b42f:	std    
  40b430:	mov    ds:0xa3648a27,eax
  40b435:	mov    DWORD PTR [edx+0x26],esi
  40b438:	int    0xa
  40b43a:	push   ds
  40b43b:	int3   
  40b43c:	shl    DWORD PTR [ecx],cl
  40b43e:	stos   BYTE PTR es:[edi],al
  40b43f:	mov    ebx,0x68414309
  40b444:	and    eax,0xb6ac459f
  40b449:	jmp    0x40b477
  40b44b:	sahf   
  40b44c:	or     al,0x0
  40b44e:	push   esp
  40b44f:	aad    0x9
  40b451:	out    0x8a,eax
  40b453:	xchg   ebp,eax
  40b454:	cmc    
  40b455:	icebp  
  40b456:	imul   eax,esp,0x7f705d
  40b45c:	fdiv   st(1),st
  40b45e:	mov    al,0x28
  40b460:	mov    al,ds:0xd5104f98
  40b465:	cmp    edi,DWORD PTR [ebp+0x76a118d6]
  40b46b:	ja     0x40b4b1
  40b46d:	pop    eax
  40b46e:	je     0x40b465
  40b470:	push   esp
  40b471:	add    al,0x97
  40b473:	gs mov ah,0xeb
  40b476:	sbb    edx,DWORD PTR [ecx]
  40b478:	in     al,dx
  40b479:	call   0x3d49:0xb09d5cae
  40b480:	add    esp,DWORD PTR [eax-0x5b]
  40b483:	mov    WORD PTR [esp+ebx*8-0x32],?
  40b487:	(bad)  
  40b488:	loopne 0x40b458
  40b48a:	sub    edi,DWORD PTR [eax]
  40b48c:	jno    0x40b42b
  40b48e:	shl    BYTE PTR [eax-0x1826d07a],0x80
  40b495:	mov    bl,0x4a
  40b497:	aad    0x10
  40b499:	mov    eax,ds:0xd22ac236
  40b49e:	scas   eax,DWORD PTR es:[edi]
  40b49f:	xor    eax,0x904d9fa7
  40b4a4:	mov    bl,0x3b
  40b4a6:	or     BYTE PTR [edx+0x78cf3f02],ah
  40b4ac:	pop    eax
  40b4ad:	aad    0x85
  40b4af:	cmp    eax,0x575d3f4d
  40b4b4:	test   eax,0x2632d8e3
  40b4b9:	cld    
  40b4ba:	aam    0xfb
  40b4bc:	ins    DWORD PTR es:[edi],dx
  40b4bd:	(bad)  
  40b4be:	mov    ch,0xf1
  40b4c0:	out    0xa3,al
  40b4c2:	sbb    eax,edx
  40b4c4:	pop    ds
  40b4c5:	cmc    
  40b4c6:	hlt    
  40b4c7:	or     ebp,edx
  40b4c9:	jne    0x40b501
  40b4cb:	pop    esi
  40b4cc:	sbb    edx,DWORD PTR [edx-0x78]
  40b4cf:	jne    0x40b480
  40b4d1:	cmp    ah,BYTE PTR [ebx-0x5206c2b8]
  40b4d7:	dec    ebp
  40b4d8:	jg     0x40b466
  40b4da:	mov    eax,0x48ffd6f6
  40b4df:	fadd   QWORD PTR [ebx+0x6c]
  40b4e2:	sar    ecx,cl
  40b4e4:	stos   BYTE PTR es:[edi],al
  40b4e5:	add    al,0xd3
  40b4e7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b4e8:	call   0xc21e8527
  40b4ed:	cmc    
  40b4ee:	loop   0x40b4e5
  40b4f0:	int    0x9a
  40b4f2:	pop    ebp
  40b4f3:	fs mov ebp,0x67f2dcde
  40b4f9:	lods   al,BYTE PTR ds:[esi]
  40b4fa:	out    dx,al
  40b4fb:	push   edx
  40b4fc:	cli    
  40b4fd:	dec    ebx
  40b4fe:	inc    ebx
  40b4ff:	call   0x44f1e08d
  40b504:	out    dx,al
  40b505:	ss cdq 
  40b507:	mov    eax,ds:0x5b3ec184
  40b50c:	mov    al,0xcb
  40b50e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b50f:	mov    esi,0xcf43d9e4
  40b514:	or     esp,edi
  40b516:	mov    bh,0x60
  40b518:	gs aam 0x88
  40b51b:	cdq    
  40b51c:	scas   eax,DWORD PTR es:[edi]
  40b51d:	imul   eax,esi,0x28c6843f
  40b523:	push   edi
  40b524:	pop    ebx
  40b525:	iret   
  40b526:	ja     0x40b53f
  40b528:	adc    eax,DWORD PTR [edi-0x719db7bf]
  40b52e:	ins    DWORD PTR es:[edi],dx
  40b52f:	iret   
  40b530:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b531:	sbb    eax,0x34777278
  40b536:	repnz cmp eax,0x3ba2fbf1
  40b53c:	cmp    esi,DWORD PTR [eax]
  40b53e:	sbb    dl,BYTE PTR [ebx+0x2c64501b]
  40b544:	fdivr  DWORD PTR [edx]
  40b546:	add    al,0xb4
  40b548:	sub    al,BYTE PTR [eax+0x20b29dc]
  40b54e:	fisttp QWORD PTR [ebx+ebp*1]
  40b551:	sub    esi,DWORD PTR [eax]
  40b553:	mov    eax,ds:0x549c2df0
  40b558:	adc    BYTE PTR [ecx+edx*1-0x1d],dh
  40b55c:	es mov ebx,0x8225ac41
  40b562:	mov    ch,0xf
  40b565:	and    dl,BYTE PTR [ebx-0x32]
  40b568:	popf   
  40b569:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b56a:	lea    esp,[edx+0x3]
  40b56d:	xor    ebx,DWORD PTR [esi]
  40b56f:	retf   
  40b570:	xor    al,0x8c
  40b572:	jne    0x40b5d9
  40b574:	push   0xf6401cc9
  40b579:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b57a:	mov    ch,BYTE PTR [ebx]
  40b57c:	loop   0x40b560
  40b57e:	in     al,0xa2
  40b580:	fsubr  QWORD PTR [ebx+0xe544469]
  40b586:	popa   
  40b587:	outs   dx,DWORD PTR ds:[esi]
  40b588:	ficomp WORD PTR [esi-0x38]
  40b58b:	(bad)  
  40b58c:	fcomp  QWORD PTR [eax+0x44]
  40b58f:	mov    ds:0x4c9ff0a7,al
  40b594:	mov    ah,0xa6
  40b596:	dec    esp
  40b597:	add    al,0xc9
  40b599:	not    eax
  40b59b:	clc    
  40b59c:	data16 mov al,0x18
  40b59f:	cs mov cl,0xb9
  40b5a2:	xchg   edi,eax
  40b5a3:	and    DWORD PTR [edi+0x20],ebp
  40b5a6:	fadd   st,st(3)
  40b5a8:	lea    eax,[ecx+0x6b]
  40b5ab:	loop   0x40b608
  40b5ad:	mov    WORD PTR [ebp-0x4d2cb9b6],ds
  40b5b3:	dec    edx
  40b5b4:	daa    
  40b5b5:	cmp    BYTE PTR [ebx+0x5b8ce370],ch
  40b5bb:	xchg   edx,eax
  40b5bc:	sub    DWORD PTR [ebp+0x2c9dc8b0],ebp
  40b5c2:	xchg   ebx,eax
  40b5c3:	xchg   esi,eax
  40b5c4:	jp     0x40b5c2
  40b5c6:	xchg   esp,eax
  40b5c7:	fisub  DWORD PTR [edi+0x6270e112]
  40b5cd:	test   DWORD PTR [esi+esi*8+0x46],ebx
  40b5d1:	and    BYTE PTR [ebp-0x5d1fd791],al
  40b5d7:	xor    bh,BYTE PTR [ebx-0x34]
  40b5da:	xchg   esp,eax
  40b5db:	mov    ebx,esi
  40b5dd:	jecxz  0x40b625
  40b5df:	outs   dx,BYTE PTR ds:[esi]
  40b5e0:	push   0x33041796
  40b5e5:	cmp    bl,BYTE PTR [ebx]
  40b5e7:	sbb    BYTE PTR ds:0x774863f9,bl
  40b5ed:	push   0xdb7a05a6
  40b5f2:	pop    esp
  40b5f3:	xor    ch,bl
  40b5f5:	scas   eax,DWORD PTR es:[edi]
  40b5f6:	stos   DWORD PTR es:[edi],eax
  40b5f7:	lock packssdw mm6,QWORD PTR fs:[ecx+edi*8]
  40b5fd:	cli    
  40b5fe:	inc    eax
  40b5ff:	mov    BYTE PTR [esi+0x64],ch
  40b602:	and    edx,DWORD PTR [ebx+0x19]
  40b605:	mov    ah,0xad
  40b607:	mov    eax,0x5c1479aa
  40b60c:	test   edx,esp
  40b60e:	push   eax
  40b60f:	and    eax,0xfff9e16
  40b614:	div    BYTE PTR [edi+0x39]
  40b617:	mov    gs,WORD PTR [edx+0x63]
  40b61a:	add    ebp,DWORD PTR [eax-0x27]
  40b61d:	push   eax
  40b61e:	pop    ecx
  40b61f:	cmp    BYTE PTR [edx+0x31cb6323],bh
  40b625:	mov    BYTE PTR [edi],ch
  40b627:	aad    0xa2
  40b629:	bound  edi,QWORD PTR [ecx+0x4a]
  40b62c:	jle    0x40b62b
  40b62e:	cmp    ah,ah
  40b630:	sub    DWORD PTR [edx],edi
  40b632:	test   esi,ecx
  40b634:	mov    al,0x7a
  40b636:	repnz out dx,al
  40b638:	data16 (bad) 
  40b63a:	push   ecx
  40b63b:	push   esi
  40b63c:	sub    eax,0x677b034b
  40b641:	leave  
  40b642:	popf   
  40b643:	xchg   edi,eax
  40b644:	outs   dx,DWORD PTR ds:[esi]
  40b645:	js     0x40b679
  40b647:	in     eax,dx
  40b648:	cld    
  40b649:	shl    ah,0x67
  40b64c:	and    ecx,DWORD PTR ds:0x34026f98
  40b652:	mov    ah,0x8d
  40b654:	fdivr  st,st(5)
  40b656:	pop    es
  40b657:	sub    BYTE PTR [edx],ch
  40b659:	fs in  ax,0x9
  40b65d:	mov    esi,0x110df584
  40b662:	pusha  
  40b663:	mov    eax,ds:0xcd2c0ec3
  40b668:	jl     0x40b62e
  40b66a:	ret    0x6a90
  40b66d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b66e:	and    eax,0x56a1ddd3
  40b673:	mov    ds:0x2783171,eax
  40b678:	scas   eax,DWORD PTR es:[edi]
  40b679:	(bad)  [ecx-0x71]
  40b67c:	add    al,0x20
  40b67e:	test   DWORD PTR es:[esi+ebp*8-0x5041a400],ecx
  40b686:	scas   al,BYTE PTR es:[edi]
  40b687:	push   esp
  40b688:	ins    DWORD PTR es:[edi],dx
  40b689:	mov    bh,0xe0
  40b68b:	adc    ebp,esp
  40b68d:	xchg   esp,eax
  40b68e:	or     BYTE PTR [ecx-0x55],0x63
  40b692:	mov    DWORD PTR [esi],ecx
  40b694:	jmp    0xb48a9d0b
  40b699:	fcomp  st(2)
  40b69b:	jno    0x40b6fb
  40b69d:	xor    eax,0x8196ddc0
  40b6a2:	pop    esp
  40b6a3:	or     bh,bl
  40b6a5:	mov    ecx,0x8f3a88a7
  40b6aa:	cmp    DWORD PTR [edi-0x10920b7d],ebp
  40b6b0:	and    ch,BYTE PTR ds:[edx-0x22]
  40b6b4:	mov    eax,ds:0x6f304dfe
  40b6b9:	dec    ecx
  40b6ba:	mov    edx,0x6befbef
  40b6bf:	(bad)  
  40b6c0:	out    dx,al
  40b6c1:	xchg   BYTE PTR [esi],dh
  40b6c3:	fwait
  40b6c4:	aaa    
  40b6c5:	call   0xb535:0xbd6e94b2
  40b6cc:	div    BYTE PTR [edx+0x70]
  40b6cf:	jne    0x40b667
  40b6d1:	mov    ah,0xd8
  40b6d3:	jmp    0x5298a07c
  40b6d8:	xchg   ebx,edx
  40b6da:	inc    ebp
  40b6db:	pop    eax
  40b6dc:	loop   0x40b6e3
  40b6de:	and    cl,dh
  40b6e0:	xor    BYTE PTR [esp+ebx*1-0x31c7ea7a],bl
  40b6e7:	ja     0x40b6b6
  40b6e9:	mov    edx,0x11395cda
  40b6ee:	(bad)  [ecx-0x7b]
  40b6f1:	or     BYTE PTR [edi+0x3b],bh
  40b6f4:	fnsave [ecx+edi*8+0x1a988afb]
  40b6fb:	push   ds
  40b6fc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b6fd:	mov    esi,0x4a043d1d
  40b702:	popa   
  40b703:	shr    BYTE PTR [edi-0x46fae5de],0x80
  40b70a:	cmp    DWORD PTR [edi+0x35d4404],eax
  40b710:	ins    DWORD PTR es:[edi],dx
  40b711:	(bad)  
  40b712:	jg     0x40b70f
  40b714:	xchg   BYTE PTR [edx+0x2775c26e],ah
  40b71a:	jp     0x40b725
  40b71c:	inc    eax
  40b71d:	mov    ebp,0x31b6b73c
  40b722:	cdq    
  40b723:	pop    edi
  40b724:	dec    edi
  40b725:	lods   eax,DWORD PTR ds:[esi]
  40b726:	mov    ebp,0xcd18ff25
  40b72b:	sbb    BYTE PTR [ebx-0x5a21594d],bh
  40b731:	sahf   
  40b732:	stc    
  40b733:	sub    ecx,ecx
  40b735:	(bad)  [eax+0x44]
  40b738:	retf   
  40b739:	icebp  
  40b73a:	cmp    ebx,ebx
  40b73c:	cs in  al,dx
  40b73e:	jge    0x40b73f
  40b740:	inc    DWORD PTR [edx+0x14]
  40b743:	sbb    eax,0xa9cfbc73
  40b748:	test   DWORD PTR [edi],eax
  40b74a:	loopne 0x40b7c0
  40b74c:	xchg   BYTE PTR [esi],cl
  40b74e:	fcomp  QWORD PTR [ebx-0x8e035b1]
  40b754:	imul   edi,DWORD PTR ds:0xc81330a4,0xffffffb1
  40b75b:	ins    BYTE PTR es:[edi],dx
  40b75c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b75d:	cli    
  40b75e:	and    DWORD PTR [esi+0x77],esi
  40b761:	mov    esp,0xb271e426
  40b766:	jmp    0xe8737bbd
  40b76b:	dec    esi
  40b76c:	iret   
  40b76d:	or     al,0x55
  40b76f:	mov    bl,0x25
  40b771:	cmp    eax,0xe28dad75
  40b776:	jbe    0x40b758
  40b778:	xchg   DWORD PTR [ecx],ebx
  40b77a:	push   ecx
  40b77b:	sbb    ebp,edx
  40b77d:	add    ah,BYTE PTR [edi]
  40b77f:	adc    bl,BYTE PTR [esi+edi*2-0x5aaee94c]
  40b786:	inc    ebp
  40b787:	xchg   DWORD PTR ds:0xc95c1e39,edi
  40b78d:	aad    0xf2
  40b78f:	addr16 jae 0x40b729
  40b792:	cdq    
  40b793:	mov    eax,ds:0xfd6deed0
  40b798:	dec    esp
  40b799:	and    edx,DWORD PTR [ecx]
  40b79b:	xlat   BYTE PTR ds:[ebx]
  40b79c:	add    eax,0x9c71bf7d
  40b7a1:	jbe    0x40b7ad
  40b7a3:	int3   
  40b7a4:	dec    ebp
  40b7a5:	les    ebp,FWORD PTR [edi+eiz*8]
  40b7a8:	push   es
  40b7a9:	pop    eax
  40b7aa:	adc    BYTE PTR [ebx],dl
  40b7ac:	inc    ecx
  40b7ad:	add    ecx,edx
  40b7af:	loop   0x40b7e2
  40b7b1:	jg     0x40b74d
  40b7b3:	mov    bl,0xba
  40b7b5:	mov    eax,0x5e04eea0
  40b7ba:	push   ebx
  40b7bb:	adc    eax,esi
  40b7bd:	mov    DWORD PTR [esi+0xf818c51],esi
  40b7c3:	cs push edi
  40b7c5:	das    
  40b7c6:	jg     0x40b80f
  40b7c8:	jns    0x40b7e5
  40b7ca:	adc    DWORD PTR [ebx],ebp
  40b7cc:	xor    esi,DWORD PTR [edi]
  40b7ce:	cmp    DWORD PTR [edx],ecx
  40b7d0:	xchg   edi,eax
  40b7d1:	and    DWORD PTR [esi],esp
  40b7d3:	jl     0x40b769
  40b7d5:	jmp    0x40b855
  40b7d7:	push   ebp
  40b7d8:	cmp    bl,bh
  40b7da:	mov    al,ds:0xe6634ac
  40b7df:	outs   dx,BYTE PTR ds:[esi]
  40b7e0:	pop    ebp
  40b7e1:	adc    BYTE PTR [ebx],cl
  40b7e3:	dec    eax
  40b7e4:	pushf  
  40b7e5:	retf   0x9ae2
  40b7e8:	sub    al,BYTE PTR [edi+0x7cd6299c]
  40b7ee:	adc    DWORD PTR [eax-0x5b],ecx
  40b7f1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b7f2:	sar    bh,1
  40b7f4:	stos   DWORD PTR es:[edi],eax
  40b7f5:	push   ds
  40b7f6:	inc    ecx
  40b7f7:	mov    cl,0x62
  40b7f9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b7fa:	sbb    ecx,DWORD PTR [ecx-0xa]
  40b7fd:	dec    edx
  40b7fe:	jg     0x40b7da
  40b800:	pop    esi
  40b801:	dec    ecx
  40b802:	call   0xee04:0xec59302c
  40b809:	test   al,0x98
  40b80b:	data16 jmp 0x40b79e
  40b80e:	push   0x40bf87c3
  40b813:	js     0x40b7a5
  40b815:	push   ebp
  40b816:	mov    ds:0xb0ad9a20,eax
  40b81b:	ficomp DWORD PTR [eax-0x72]
  40b81e:	out    dx,al
  40b81f:	repz mov cl,BYTE PTR [esi+0x4b03da2d]
  40b826:	mov    eax,0x6dd6bdbd
  40b82b:	pushf  
  40b82c:	test   al,0x44
  40b82e:	pop    ebx
  40b82f:	pop    esi
  40b830:	mov    al,ds:0xdda0a91c
  40b835:	sbb    DWORD PTR [ebx-0x1d],ecx
  40b838:	(bad)  
  40b839:	out    dx,eax
  40b83a:	xchg   esi,eax
  40b83b:	mov    bh,0xd7
  40b83d:	jbe    0x40b7f3
  40b83f:	sub    edx,DWORD PTR [edi+eiz*1-0x601d06f8]
  40b846:	rol    BYTE PTR [edx],1
  40b848:	sub    dh,al
  40b84a:	adc    bh,cl
  40b84c:	xchg   esi,eax
  40b84d:	sub    ecx,DWORD PTR [ebp-0x61]
  40b850:	or     dl,ch
  40b852:	sub    al,0x63
  40b854:	test   eax,0xce368110
  40b859:	mov    WORD PTR [eiz*4-0x20567ed9],ds
  40b860:	xchg   BYTE PTR [eax+0x1cd8fd5],ch
  40b866:	and    al,0x33
  40b868:	cs push esi
  40b86a:	sub    dl,BYTE PTR ss:[edx]
  40b86d:	lahf   
  40b86e:	cmp    cl,BYTE PTR [ebx-0x1]
  40b871:	fwait
  40b872:	cmp    al,0x4d
  40b874:	or     bh,BYTE PTR [ebx]
  40b876:	adc    dl,BYTE PTR [edx]
  40b878:	aad    0xce
  40b87a:	push   ebx
  40b87b:	jle    0x40b8ee
  40b87d:	test   DWORD PTR [ecx+0x2c934b09],edi
  40b883:	call   0x2f94:0x4c218e75
  40b88a:	dec    esi
  40b88b:	xchg   ebp,eax
  40b88c:	loop   0x40b834
  40b88e:	push   0x2fc65995
  40b893:	fsubr  QWORD PTR [ecx]
  40b895:	dec    BYTE PTR [eax]
  40b897:	and    bh,BYTE PTR [di]
  40b89a:	mov    cl,0x92
  40b89c:	dec    ebx
  40b89d:	adc    eax,0x5c08080b
  40b8a2:	ret    0x96d1
  40b8a5:	ja     0x40b8af
  40b8a7:	jno    0x40b85e
  40b8a9:	pop    esp
  40b8aa:	ss inc ebp
  40b8ac:	repnz mov ds:0x4787ad97,al
  40b8b2:	mov    ebx,0x1e581dfc
  40b8b7:	mov    cl,0xc8
  40b8b9:	dec    eax
  40b8ba:	adc    edx,DWORD PTR [edx+0x988a1dd]
  40b8c0:	mov    DWORD PTR [edx+0x15],ebx
  40b8c3:	and    dl,BYTE PTR [eax-0x5c]
  40b8c6:	std    
  40b8c7:	xchg   ebx,eax
  40b8c8:	pop    esp
  40b8c9:	test   al,0x98
  40b8cb:	inc    edi
  40b8cc:	dec    esp
  40b8cd:	xchg   edx,eax
  40b8ce:	fsubr  DWORD PTR [ebp+ecx*8-0x7b]
  40b8d2:	dec    eax
  40b8d3:	aaa    
  40b8d4:	adc    al,0x75
  40b8d6:	adc    al,0x94
  40b8d8:	stos   DWORD PTR es:[edi],eax
  40b8d9:	pop    ebp
  40b8da:	inc    ebx
  40b8db:	xchg   ebx,eax
  40b8dc:	adc    eax,0x1be2710b
  40b8e1:	fmulp  st(3),st
  40b8e3:	mov    eax,ds:0x4eaadb53
  40b8e8:	push   edi
  40b8e9:	sub    ecx,DWORD PTR [ecx+eax*4-0x6fffb6dc]
  40b8f0:	sbb    BYTE PTR [bx-0x2ead],dl
  40b8f5:	ret    0xd2df
  40b8f8:	out    dx,eax
  40b8f9:	mov    dh,ch
  40b8fb:	pop    ebx
  40b8fc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b8fd:	int3   
  40b8fe:	mov    ch,0xc6
  40b900:	nop
  40b901:	mov    ebp,0x64b182e0
  40b906:	aas    
  40b907:	in     eax,dx
  40b908:	pop    edx
  40b909:	sahf   
  40b90a:	ds sbb ah,ch
  40b90d:	inc    ebp
  40b90e:	dec    esi
  40b90f:	mov    eax,0x147b18fe
  40b914:	gs push ss
  40b916:	mov    cl,0x52
  40b918:	push   ds
  40b919:	xchg   esp,eax
  40b91a:	or     eax,0x986e8b01
  40b91f:	jmp    0xbdaccbb2
  40b924:	mov    bh,0x7f
  40b926:	push   cs
  40b927:	pop    ss
  40b928:	xor    BYTE PTR [ebx+0x3c3c27ed],dl
  40b92e:	push   es
  40b92f:	xchg   BYTE PTR [ebx+ecx*8],bh
  40b932:	jo     0x40b910
  40b934:	je     0x40b8f8
  40b936:	cmc    
  40b937:	jmp    0x75de6a8
  40b93c:	jae    0x40b9a4
  40b93e:	xchg   esi,eax
  40b93f:	push   0x2e
  40b941:	fistp  DWORD PTR [ecx-0x154a3b49]
  40b947:	adc    esi,DWORD PTR [ebp-0xd]
  40b94a:	xor    DWORD PTR [eax-0x34],0x71
  40b94e:	clc    
  40b94f:	loope  0x40b972
  40b951:	jae    0x40b97f
  40b953:	sub    DWORD PTR [eax+0x3ec054c8],edi
  40b959:	inc    ecx
  40b95a:	cdq    
  40b95b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b95c:	ret    0x1904
  40b95f:	mov    edi,0xb248d93b
  40b964:	ins    BYTE PTR es:[edi],dx
  40b965:	pushf  
  40b966:	mov    dh,0x10
  40b968:	add    ebp,0xffffffed
  40b96b:	cld    
  40b96c:	rol    ecx,0xb3
  40b96f:	imul   esp,DWORD PTR [edi+0x18],0xf8f78de4
  40b976:	pop    edi
  40b977:	push   0xfffffff6
  40b979:	add    ch,0xdc
  40b97c:	add    DWORD PTR [ebx+0xb],eax
  40b97f:	xor    al,0x3d
  40b981:	mov    ds:0xbc8a7279,eax
  40b986:	in     al,dx
  40b987:	push   es
  40b988:	mov    edx,0x47f6b758
  40b98d:	imul   edi,DWORD PTR [esi],0x6c
  40b990:	pop    eax
  40b991:	fimul  WORD PTR [esi-0x59]
  40b994:	std    
  40b995:	(bad)  
  40b996:	pop    es
  40b997:	les    si,DWORD PTR [ebx-0x6e]
  40b99b:	mov    ecx,DWORD PTR [ebp-0x35e28a1e]
  40b9a1:	(bad)  
  40b9a3:	xor    ch,BYTE PTR [ebx]
  40b9a5:	mov    bl,0xdc
  40b9a7:	or     BYTE PTR [eax-0xe],bl
  40b9aa:	lods   eax,DWORD PTR ds:[esi]
  40b9ab:	pop    ss
  40b9ac:	push   ebp
  40b9ad:	cli    
  40b9ae:	repnz mov esp,DWORD PTR ds:0x38fe21bf
  40b9b5:	dec    ecx
  40b9b6:	push   ecx
  40b9b7:	and    eax,0x52e6e1ff
  40b9bc:	push   ebp
  40b9bd:	outs   dx,BYTE PTR ds:[esi]
  40b9be:	cld    
  40b9bf:	in     eax,dx
  40b9c0:	ins    BYTE PTR es:[edi],dx
  40b9c1:	rcr    DWORD PTR [edx-0x6b],0x54
  40b9c5:	sar    esi,1
  40b9c7:	ror    DWORD PTR [edx-0x251a7459],1
  40b9cd:	icebp  
  40b9ce:	pop    esp
  40b9cf:	mov    al,0x92
  40b9d1:	setb   BYTE PTR [eax+edi*2-0x62067b40]
  40b9d9:	cmp    BYTE PTR [esi-0x77],bl
  40b9dc:	ins    DWORD PTR es:[edi],dx
  40b9dd:	xchg   ecx,eax
  40b9de:	div    cl
  40b9e0:	inc    esi
  40b9e1:	push   ds
  40b9e2:	inc    edx
  40b9e3:	sub    al,0x27
  40b9e5:	cmp    bh,bh
  40b9e7:	out    dx,al
  40b9e8:	push   edx
  40b9e9:	mov    ?,WORD PTR [ecx-0x54]
  40b9ec:	rcl    DWORD PTR [ebx-0x38],cl
  40b9ef:	mov    esi,0x73ff3d9c
  40b9f4:	sub    BYTE PTR ds:0xab1c3880,dh
  40b9fa:	xchg   esi,eax
  40b9fb:	mov    esi,DWORD PTR [ecx-0x4f39fed4]
  40ba01:	and    dl,0x8
  40ba04:	ss mov edx,0x171b8b6d
  40ba0a:	sub    BYTE PTR [ebp-0x42],dl
  40ba0d:	mov    esp,0xc90c8ce4
  40ba12:	sbb    esi,0xcff51bd0
  40ba18:	mov    ebp,0xed012c8c
  40ba1d:	and    al,0x9a
  40ba1f:	mov    ds:0x9875ebdf,al
  40ba24:	addr16 pusha 
  40ba26:	cli    
  40ba27:	mov    ds:0xd07ddd68,eax
  40ba2c:	cli    
  40ba2d:	out    dx,al
  40ba2e:	or     cl,dh
  40ba30:	lahf   
  40ba31:	cs (bad) 
  40ba35:	adc    al,0x59
  40ba37:	mov    ebx,0x40c79b73
  40ba3c:	stos   BYTE PTR es:[edi],al
  40ba3d:	loopne 0x40ba9b
  40ba3f:	and    eax,0x83f4f501
  40ba44:	js     0x40ba68
  40ba46:	aam    0xae
  40ba48:	ret    
  40ba49:	stos   BYTE PTR es:[edi],al
  40ba4a:	sub    eax,0xb6b9dcca
  40ba4f:	inc    ecx
  40ba50:	mov    ds:0xc0a6bc71,eax
  40ba55:	fsub   QWORD PTR [ebp+0x18]
  40ba58:	test   BYTE PTR [ebp-0x45246683],cl
  40ba5e:	xor    al,0xec
  40ba60:	loopne 0x40baa3
  40ba62:	pusha  
  40ba63:	xchg   esi,eax
  40ba64:	cdq    
  40ba65:	adc    DWORD PTR [esp+edx*8],0xffffffe6
  40ba69:	xchg   esp,eax
  40ba6a:	daa    
  40ba6b:	addr16 in al,0x31
  40ba6e:	push   edx
  40ba6f:	xchg   edx,eax
  40ba70:	imul   edi,DWORD PTR [esi],0xfe9e20a4
  40ba76:	ret    0xa6d2
  40ba79:	retf   
  40ba7a:	test   BYTE PTR [esi],dh
  40ba7c:	dec    ecx
  40ba7d:	jmp    0x40ba1a
  40ba7f:	jae    0x40baac
  40ba81:	mov    ch,BYTE PTR [ebp+0x33]
  40ba84:	div    eax
  40ba86:	hlt    
  40ba87:	sub    al,0xbf
  40ba89:	jmp    0x40ba5a
  40ba8b:	idiv   eax
  40ba8d:	test   BYTE PTR [ebp+0x2f],0x37
  40ba91:	pop    esp
  40ba92:	fptan  
  40ba94:	pop    es
  40ba95:	or     al,0xe7
  40ba97:	enter  0xe476,0x99
  40ba9b:	push   esp
  40ba9c:	mov    ds:0x1a96ddb6,eax
  40baa1:	jmp    0x5a3a:0xfe0aef11
  40baa8:	lea    esp,ds:0xb12d5d1f
  40baae:	push   edi
  40baaf:	lods   al,BYTE PTR fs:[esi]
  40bab1:	psllq  mm2,QWORD PTR [ecx-0x125e96eb]
  40bab8:	lds    ebp,FWORD PTR ds:0x367df753
  40babe:	or     eax,0xe9128934
  40bac3:	pop    ecx
  40bac4:	jno    0x40bb31
  40bac6:	mov    eax,0xeb699e62
  40bacb:	ret    0x9ff
  40bace:	sti    
  40bacf:	mov    eax,ds:0x4b482840
  40bad4:	jle    0x40ba7c
  40bad6:	push   0x49737ac9
  40badb:	jae    0x40ba68
  40badd:	fnstcw WORD PTR [ebx]
  40badf:	jmp    0x40baab
  40bae1:	(bad)  
  40bae2:	fist   WORD PTR [edi]
  40bae4:	add    esp,edx
  40bae6:	or     BYTE PTR [esp+edx*4-0x5e18cf72],cl
  40baed:	daa    
  40baee:	outs   dx,BYTE PTR ds:[esi]
  40baef:	cmp    esp,ebx
  40baf1:	mov    ds:0x44787035,al
  40baf6:	jge    0x40baf3
  40baf8:	shl    DWORD PTR [edx],1
  40bafa:	add    eax,0x5ba8c231
  40baff:	hlt    
  40bb00:	fndisi(8087 only) 
  40bb02:	test   BYTE PTR [eax+0x6d],cl
  40bb05:	push   edi
  40bb06:	mov    edi,0x77fc1c38
  40bb0b:	or     esp,DWORD PTR [edi+0x2535061d]
  40bb11:	jne    0x40ba9e
  40bb13:	mov    ds:0xf2f33710,eax
  40bb18:	gs pop edi
  40bb1a:	hlt    
  40bb1b:	in     al,dx
  40bb1c:	popa   
  40bb1d:	mov    bl,0xf3
  40bb1f:	int    0x2
  40bb21:	cwde   
  40bb22:	mov    bl,0xe9
  40bb24:	bound  edx,QWORD PTR ds:[ebp-0x2b707fc2]
  40bb2b:	retf   
  40bb2c:	daa    
  40bb2d:	sub    al,0x31
  40bb2f:	cmp    dh,cl
  40bb31:	je     0x40bb5b
  40bb33:	out    dx,eax
  40bb34:	hlt    
  40bb35:	add    eax,0x4c9614f4
  40bb3a:	mov    edi,ebx
  40bb3c:	xchg   edx,eax
  40bb3d:	or     al,0xdc
  40bb3f:	sub    al,0xf2
  40bb41:	push   ebx
  40bb42:	xor    DWORD PTR [eax+0x7d6b38c7],edi
  40bb48:	hlt    
  40bb49:	mov    eax,edx
  40bb4b:	das    
  40bb4c:	fwait
  40bb4d:	stos   DWORD PTR es:[edi],eax
  40bb4e:	push   ebp
  40bb4f:	retf   
  40bb50:	mov    ds:0x6de32fab,al
  40bb55:	jnp    0x40bb05
  40bb57:	jmp    0x4e1c7f74
  40bb5c:	jp     0x40bb86
  40bb5e:	pop    edi
  40bb5f:	sbb    dl,BYTE PTR [edx]
  40bb61:	cmc    
  40bb62:	gs nop
  40bb64:	icebp  
  40bb65:	inc    esi
  40bb66:	mov    eax,0x5250228e
  40bb6b:	clc    
  40bb6c:	rcl    BYTE PTR [eax+0x54],1
  40bb6f:	cwde   
  40bb70:	ins    BYTE PTR es:[edi],dx
  40bb71:	jp     0x40bb8c
  40bb73:	leave  
  40bb74:	lods   al,BYTE PTR ds:[esi]
  40bb75:	push   eax
  40bb76:	(bad)  
  40bb77:	repnz in al,dx
  40bb79:	mov    cl,0xb9
  40bb7b:	in     eax,0x39
  40bb7d:	pop    eax
  40bb7e:	jo     0x40bb58
  40bb80:	and    al,0x6
  40bb82:	fsubr  DWORD PTR [ebp-0x3de70093]
  40bb88:	pop    ebp
  40bb89:	outs   dx,DWORD PTR cs:[esi]
  40bb8b:	repz fild QWORD PTR [edi-0x6bac8ca6]
  40bb92:	adc    eax,0x848c3a4f
  40bb97:	jae    0x40bbaa
  40bb99:	mov    eax,ds:0xf8f4244f
  40bb9e:	jns    0x40bbae
  40bba0:	pop    edx
  40bba1:	adc    eax,0xc093f9c8
  40bba6:	cmp    BYTE PTR [ebx],dl
  40bba8:	cmc    
  40bba9:	stos   BYTE PTR es:[edi],al
  40bbaa:	mov    ah,0x5a
  40bbac:	bound  edi,QWORD PTR [edi+eiz*8]
  40bbaf:	pop    edi
  40bbb0:	adc    al,0x8b
  40bbb2:	cmp    BYTE PTR [ecx],al
  40bbb4:	sub    DWORD PTR [edx+0x3608c918],edi
  40bbba:	popf   
  40bbbb:	lahf   
  40bbbc:	mov    bl,0x13
  40bbbe:	mov    dl,0x2c
  40bbc0:	outs   dx,WORD PTR ds:[esi]
  40bbc2:	ss jnp 0x40bbea
  40bbc5:	repnz inc edi
  40bbc7:	mov    DWORD PTR [esi],0xa794de87
  40bbcd:	sbb    BYTE PTR [eax+edx*8+0x3],ch
  40bbd1:	addr16 mov ds:0xb35b,eax
  40bbd5:	dec    edi
  40bbd6:	jb     0x40bb83
  40bbd8:	clc    
  40bbd9:	inc    ecx
  40bbda:	mov    ch,0x2a
  40bbdc:	imul   DWORD PTR [esp+edi*4]
  40bbdf:	in     al,0x6a
  40bbe1:	mov    esp,0xa442dfdc
  40bbe6:	daa    
  40bbe7:	shl    BYTE PTR [edx+0x5e5ce41],1
  40bbed:	shr    BYTE PTR [eax],1
  40bbef:	shr    DWORD PTR [ebx-0x4d9e4fd9],cl
  40bbf5:	shr    DWORD PTR [ecx+0x1d6c5976],0x2b
  40bbfc:	push   0x588f997b
  40bc01:	cli    
  40bc02:	push   cs
  40bc03:	into   
  40bc04:	jmp    0x5866266c
  40bc09:	mov    ?,WORD PTR [ebx-0x22fad758]
  40bc0f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bc10:	arpl   WORD PTR [edi-0x36b61e87],ax
  40bc16:	mov    edx,0xe6ddb904
  40bc1b:	dec    edx
  40bc1c:	hlt    
  40bc1d:	mov    edx,0xad841b23
  40bc22:	mov    ebp,0xebd58318
  40bc27:	popf   
  40bc28:	inc    ecx
  40bc29:	xor    bh,BYTE PTR [ebx+0x1dbc9e5e]
  40bc2f:	or     cl,cl
  40bc31:	mov    DWORD PTR [ecx+0x11],0x3ac898c
  40bc38:	mov    eax,0xbed8da1d
  40bc3d:	das    
  40bc3e:	sti    
  40bc3f:	mov    bh,0xe9
  40bc41:	push   ss
  40bc42:	fsub   DWORD PTR [edx]
  40bc44:	xor    BYTE PTR [ebp+ebp*8-0x5c],0x12
  40bc49:	mov    dh,0x4d
  40bc4b:	jg     0x40bc7b
  40bc4d:	sub    esp,esp
  40bc4f:	push   0xe
  40bc51:	cs push ds
  40bc53:	(bad)  
  40bc54:	imul   ecx,DWORD PTR [edx-0x25f1cc2a],0xfffffff1
  40bc5b:	xor    al,0x45
  40bc5d:	ret    0x5e62
  40bc60:	adc    eax,0x59679bc7
  40bc65:	cmp    DWORD PTR [ebx+0x252c7a3f],ecx
  40bc6b:	mov    cl,0xaf
  40bc6d:	sbb    eax,0x2409bf68
  40bc72:	loope  0x40bcb3
  40bc74:	mov    ch,0xc9
  40bc76:	jne    0x40bc12
  40bc78:	adc    ah,cl
  40bc7a:	sti    
  40bc7b:	lahf   
  40bc7c:	pcmpgtd mm3,mm3
  40bc7f:	mov    ebp,0xe62fbcc6
  40bc84:	cmp    eax,0xf9b223fa
  40bc89:	jmp    0x40bc21
  40bc8b:	scas   eax,DWORD PTR es:[edi]
  40bc8c:	push   cs
  40bc8d:	or     ebp,ebx
  40bc8f:	loope  0x40bcda
  40bc91:	int3   
  40bc92:	xor    ebx,DWORD PTR [ebx-0x4fe80409]
  40bc98:	cmp    eax,0xb8f88396
  40bc9d:	out    0xd0,al
  40bc9f:	add    ecx,DWORD PTR [ecx-0x79c98baf]
  40bca5:	(bad)  [edx]
  40bca7:	jmp    0xae22:0xd9f1f726
  40bcae:	cmp    BYTE PTR [ebx+0x7f],dh
  40bcb1:	push   es
  40bcb2:	or     eax,0xbe819578
  40bcb7:	bound  edi,QWORD PTR [ebx-0x40f8b0d4]
  40bcbd:	mov    al,0x80
  40bcbf:	push   esp
  40bcc0:	and    al,0x48
  40bcc2:	retf   
  40bcc3:	repnz out 0xc9,eax
  40bcc6:	ins    BYTE PTR es:[edi],dx
  40bcc7:	and    DWORD PTR [edi],esp
  40bcc9:	xchg   ebp,eax
  40bccb:	xor    DWORD PTR [edx],esi
  40bccd:	add    BYTE PTR [eax+0x48],0x44
  40bcd1:	fs and eax,0xfda722d8
  40bcd7:	cwde   
  40bcd8:	loop   0x40bcc7
  40bcda:	cmp    dh,BYTE PTR [edi+0x623c91c]
  40bce0:	cdq    
  40bce1:	mov    cl,0x1e
  40bce3:	push   edx
  40bce4:	cmp    al,0xf8
  40bce6:	lock sar DWORD PTR [eax-0x3436a696],1
  40bced:	jecxz  0x40bd65
  40bcef:	fucomi st,st(4)
  40bcf1:	cmp    esp,eax
  40bcf3:	or     DWORD PTR [ebx+0x493d9e29],esi
  40bcf9:	cli    
  40bcfa:	add    BYTE PTR [ecx-0x55],0xcb
  40bcfe:	cmp    ch,bl
  40bd00:	sar    bh,0x8f
  40bd03:	outs   dx,BYTE PTR ds:[esi]
  40bd04:	outs   dx,DWORD PTR ds:[esi]
  40bd05:	sahf   
  40bd06:	stc    
  40bd07:	mov    cl,0xc9
  40bd09:	(bad)  
  40bd0a:	repz pushf 
  40bd0c:	pop    ebx
  40bd0d:	rcr    BYTE PTR [edi+0x76376472],0x2b
  40bd14:	stos   BYTE PTR es:[edi],al
  40bd15:	aad    0x72
  40bd17:	outs   dx,BYTE PTR ds:[esi]
  40bd19:	push   edx
  40bd1a:	push   ebp
  40bd1b:	jb     0x40bd0e
  40bd1d:	outs   dx,DWORD PTR ds:[esi]
  40bd1e:	addr16 inc esp
  40bd20:	xchg   ebx,eax
  40bd21:	or     al,0x63
  40bd23:	sub    DWORD PTR [ebp-0x445ae82d],esi
  40bd29:	shl    ebp,1
  40bd2b:	push   cs
  40bd2c:	inc    ebp
  40bd2d:	std    
  40bd2e:	push   ss
  40bd2f:	dec    edx
  40bd30:	ins    DWORD PTR es:[edi],dx
  40bd31:	mov    ecx,es
  40bd33:	pop    es
  40bd34:	fdiv   QWORD PTR [ebx-0x62d75771]
  40bd3a:	stos   BYTE PTR es:[edi],al
  40bd3b:	adc    ah,BYTE PTR ds:0x8992f838
  40bd41:	sbb    eax,0x839e5cad
  40bd47:	in     eax,dx
  40bd48:	sub    BYTE PTR [edi-0xd],bh
  40bd4b:	pop    esp
  40bd4c:	and    eax,0xcdeeaf1f
  40bd51:	fst    st(2)
  40bd53:	xchg   ebp,eax
  40bd54:	and    eax,0x8a6b2661
  40bd59:	pop    ebp
  40bd5a:	icebp  
  40bd5b:	xor    al,0x90
  40bd5d:	mov    ecx,0x3fa7dbbe
  40bd62:	pop    edi
  40bd63:	jecxz  0x40bd2f
  40bd65:	xor    BYTE PTR [esp+ebx*2],0xe8
  40bd69:	stc    
  40bd6a:	or     DWORD PTR [ebx+0x524db4c0],eax
  40bd70:	xor    esi,edi
  40bd72:	mov    ah,BYTE PTR [edx-0x42]
  40bd75:	pop    esp
  40bd76:	xchg   ecx,eax
  40bd77:	xor    al,0xa2
  40bd79:	and    al,0x5e
  40bd7b:	or     esi,ebp
  40bd7d:	sub    eax,0x34a29346
  40bd82:	inc    eax
  40bd83:	ins    BYTE PTR es:[edi],dx
  40bd84:	stos   DWORD PTR es:[edi],eax
  40bd85:	ret    0x3634
  40bd88:	enter  0xdc12,0x5f
  40bd8c:	hlt    
  40bd8d:	popa   
  40bd8e:	into   
  40bd8f:	call   0x9e68:0xd83cf542
  40bd96:	add    ebp,eax
  40bd98:	int3   
  40bd99:	jge    0x40bd67
  40bd9b:	rcl    edi,cl
  40bd9d:	mov    cl,0x81
  40bd9f:	lods   eax,DWORD PTR ds:[esi]
  40bda0:	pop    esp
  40bda1:	popf   
  40bda2:	pop    ebp
  40bda3:	dec    edi
  40bda4:	cmp    eax,0x1a577994
  40bda9:	pop    esp
  40bdaa:	xor    bl,al
  40bdac:	adc    eax,0x139b03b8
  40bdb1:	popf   
  40bdb2:	(bad)  
  40bdb3:	sub    al,0x13
  40bdb5:	xor    al,0xb0
  40bdb7:	ret    0xae8f
  40bdba:	int3   
  40bdbb:	xor    ebx,edi
  40bdbd:	xor    dl,al
  40bdbf:	or     eax,DWORD PTR [esi+0x7047353]
  40bdc5:	sti    
  40bdc6:	mov    fs,WORD PTR [eax]
  40bdc8:	lods   eax,DWORD PTR ds:[esi]
  40bdc9:	ja     0x40be33
  40bdcb:	xchg   esp,eax
  40bdcc:	fwait
  40bdcd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bdce:	cmp    bh,BYTE PTR [eax+0x18cbb8a8]
  40bdd4:	ja     0x40bd9a
  40bdd6:	daa    
  40bdd7:	stos   BYTE PTR es:[edi],al
  40bdd8:	clc    
  40bdd9:	xchg   ebp,eax
  40bdda:	fwait
  40bddb:	nop
  40bddc:	mov    ecx,0xdd684649
  40bde1:	ja     0x40bdff
  40bde3:	dec    esp
  40bde4:	shl    BYTE PTR [ecx],cl
  40bde6:	mov    ebp,0x24cc4b98
  40bdeb:	das    
  40bdec:	outs   dx,DWORD PTR ds:[esi]
  40bded:	pusha  
  40bdee:	push   ds
  40bdef:	ja     0x40be17
  40bdf1:	sahf   
  40bdf2:	or     esi,0x11
  40bdf5:	push   ss
  40bdf6:	jmp    0x40bd9c
  40bdf8:	sub    ebp,DWORD PTR [edx+0x4a]
  40bdfb:	addr16 stc 
  40bdfd:	lods   al,BYTE PTR ds:[esi]
  40bdfe:	lds    edx,FWORD PTR [ebp-0x1e]
  40be01:	adc    eax,0xf56bc03d
  40be06:	or     BYTE PTR [edi-0x3cc12b9e],dh
  40be0c:	retf   0x9099
  40be0f:	mov    WORD PTR [ecx-0x3be58e36],?
  40be15:	js     0x40be64
  40be17:	cmp    esi,DWORD PTR [edi]
  40be19:	test   BYTE PTR [ebx],dl
  40be1b:	add    eax,0x423c3900
  40be20:	in     eax,0x6f
  40be22:	(bad)  
  40be24:	loop   0x40bdc3
  40be26:	stos   DWORD PTR es:[edi],eax
  40be27:	pop    edi
  40be28:	clc    
  40be29:	mov    esi,0x989592f1
  40be2e:	dec    edx
  40be2f:	mov    ecx,0x9aec7f42
  40be34:	mov    edx,0x836b891d
  40be39:	cdq    
  40be3a:	test   bh,bl
  40be3c:	fidivr DWORD PTR [eax+0x75]
  40be3f:	mov    eax,0x71e9ac02
  40be44:	and    al,0x70
  40be46:	bound  edi,QWORD PTR [edi+0x464211ac]
  40be4c:	inc    esi
  40be4d:	sub    dl,BYTE PTR ds:0x65797ffe
  40be53:	leave  
  40be54:	push   esi
  40be55:	loop   0x40bea9
  40be57:	mov    ecx,0x1e2dead2
  40be5c:	in     eax,dx
  40be5d:	adc    ch,bl
  40be5f:	xchg   bl,al
  40be61:	push   ds
  40be62:	shr    DWORD PTR [esi+0x1767ed73],1
  40be68:	adc    BYTE PTR [eax],ch
  40be6a:	rcr    DWORD PTR [esi*1+0x733a237b],1
  40be71:	or     DWORD PTR [eax+0x6d2f1601],0x6c8a4098
  40be7b:	add    DWORD PTR [ebx-0x3d],0x4
  40be7f:	add    DWORD PTR [ecx+0x1b4ad04a],ebx
  40be85:	sbb    bh,ah
  40be87:	into   
  40be88:	inc    ecx
  40be89:	shl    DWORD PTR [edx],1
  40be8b:	js     0x40be24
  40be8d:	sub    DWORD PTR [ecx-0x39737dca],esi
  40be93:	sub    al,0x18
  40be95:	add    edx,edx
  40be97:	and    BYTE PTR [ecx-0x41],al
  40be9a:	in     al,0x12
  40be9c:	fsub   DWORD PTR [ecx-0x3b]
  40be9f:	sbb    eax,0xa7854464
  40bea4:	xchg   edx,eax
  40bea5:	or     DWORD PTR [edx+0x7ef903ce],ebx
  40beab:	test   BYTE PTR [ebx+0x5c],0x33
  40beaf:	gs in  al,dx
  40beb1:	mov    dl,0xa3
  40beb3:	xor    eax,0xf3388bdc
  40beb8:	dec    esp
  40beb9:	aaa    
  40beba:	or     al,0x2b
  40bebc:	jl     0x40be73
  40bebe:	cwde   
  40bebf:	push   0xffffffdf
  40bec1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bec2:	adc    DWORD PTR [edx+0x47],edx
  40bec5:	mov    ds:0x77fe6e14,al
  40beca:	test   al,0x48
  40becc:	retf   0x7cb1
  40becf:	push   0xffffff8a
  40bed1:	nop
  40bed2:	(bad)
  40bed5:	clc    
  40bed6:	mov    ebp,0xa040ee39
  40bedb:	pop    ecx
  40bedc:	jp     0x40beed
  40bede:	adc    esp,DWORD PTR [bx]
  40bee1:	mov    ah,0x6
  40bee3:	dec    eax
  40bee4:	push   edi
  40bee5:	jp     0x40bf04
  40bee7:	push   es
  40bee8:	cdq    
  40bee9:	adc    DWORD PTR [eax-0x45],0xffffffab
  40beed:	dec    ebp
  40beee:	popa   
  40beef:	mov    ecx,0xa9fca9d1
  40bef4:	inc    esi
  40bef5:	in     eax,0xe7
  40bef7:	iretw  
  40bef9:	mov    cl,0x89
  40befb:	or     eax,ebp
  40befd:	adc    BYTE PTR [ebx],dl
  40beff:	pop    esp
  40bf00:	neg    DWORD PTR [edi]
  40bf02:	(bad)
  40bf05:	(bad)  
  40bf06:	mov    dl,BYTE PTR [ebx]
  40bf08:	push   edx
  40bf09:	or     ecx,DWORD PTR [ebx-0xedd3c8]
  40bf0f:	jae    0x40bf6a
  40bf11:	test   al,0x48
  40bf13:	lock sub eax,0x988dafe1
  40bf19:	sbb    ebp,ebp
  40bf1b:	mov    DWORD PTR [edi+eiz*8+0x5eadc85],ebx
  40bf22:	jge    0x40bf44
  40bf24:	sub    BYTE PTR [ecx],dh
  40bf26:	(bad)  
  40bf27:	ret    
  40bf28:	jne    0x40bf14
  40bf2a:	sub    dh,BYTE PTR [edx]
  40bf2c:	outs   dx,DWORD PTR ds:[esi]
  40bf2d:	popf   
  40bf2e:	mov    esp,0x1ef8d79c
  40bf33:	pop    ss
  40bf34:	cwde   
  40bf35:	mov    edi,0x34ccb311
  40bf3a:	xor    DWORD PTR [esi+0x75],esi
  40bf3d:	loope  0x40bee5
  40bf3f:	sub    al,0x49
  40bf41:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bf42:	pop    esp
  40bf43:	xor    BYTE PTR [ecx+ebp*4-0x316ea605],0xcd
  40bf4b:	mov    ch,0x51
  40bf4d:	inc    edi
  40bf4e:	imul   eax,esi,0xfffffffa
  40bf51:	std    
  40bf52:	(bad)  [edi-0x3f]
  40bf55:	lods   al,BYTE PTR ds:[esi]
  40bf56:	div    BYTE PTR [ebx+0x66]
  40bf59:	sbb    ah,dl
  40bf5b:	lods   eax,DWORD PTR ds:[esi]
  40bf5c:	xchg   esi,eax
  40bf5d:	mov    ds:0x7b3e1935,al
  40bf62:	ret    0x29c9
  40bf65:	adc    BYTE PTR [ebp+0x6],ah
  40bf68:	arpl   WORD PTR [edx+ebx*4-0x74],bx
  40bf6c:	pop    esi
  40bf6d:	sahf   
  40bf6e:	mov    edx,0xd36ed0d
  40bf73:	scas   al,BYTE PTR es:[edi]
  40bf74:	outs   dx,DWORD PTR ds:[esi]
  40bf75:	aam    0x4b
  40bf77:	mov    fs,WORD PTR [ebx+0x31]
  40bf7a:	shl    BYTE PTR [ecx+0x4],0x48
  40bf7e:	xor    DWORD PTR fs:[ecx-0x709b14f5],0x50
  40bf86:	jae    0x40bf69
  40bf88:	jb     0x40bf3b
  40bf8a:	fwait
  40bf8b:	jmp    0xfd7:0xcba74109
  40bf92:	ds arpl bp,dx
  40bf95:	ins    BYTE PTR es:[edi],dx
  40bf96:	dec    esi
  40bf97:	push   cs
  40bf98:	jg     0x40bf2c
  40bf9a:	adc    BYTE PTR [ebx-0x26037818],dh
  40bfa0:	cli    
  40bfa1:	mov    WORD PTR [esi-0x17],gs
  40bfa4:	push   ds
  40bfa5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bfa6:	xor    ebx,edx
  40bfa8:	add    cl,dh
  40bfaa:	xchg   esp,eax
  40bfab:	aad    0x2b
  40bfad:	fsub   DWORD PTR ds:0xb66ea8f7
  40bfb3:	(bad)  
  40bfb5:	xor    cl,ah
  40bfb7:	rcr    eax,1
  40bfb9:	sbb    edi,0xffffff87
  40bfbc:	jecxz  0x40c02e
  40bfbe:	push   ebp
  40bfbf:	retf   0x6340
  40bfc2:	jl     0x40bfc3
  40bfc4:	push   edx
  40bfc5:	imul   ebp,DWORD PTR [edx+0x27],0x3f683f88
  40bfcc:	repnz mov ds:0x55a48135,eax
  40bfd2:	(bad)  
  40bfd3:	hlt    
  40bfd4:	mov    eax,ds:0x177f02a1
  40bfd9:	imul   ebp,DWORD PTR [eax],0xffffffe9
  40bfdc:	fld    st(7)
  40bfde:	(bad)  
  40bfe0:	jns    0x40c051
  40bfe2:	call   0x3cdc:0xe54e46d0
  40bfe9:	inc    edi
  40bfea:	dec    ebp
  40bfeb:	pusha  
  40bfec:	sub    al,0xd4
  40bfee:	cmp    BYTE PTR [eax-0x66],0xc4
  40bff2:	stos   BYTE PTR es:[edi],al
  40bff3:	xlat   BYTE PTR ds:[ebx]
  40bff4:	jge    0x40c01c
  40bff6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bff7:	sbb    BYTE PTR [esi],0xe1
  40bffa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bffb:	test   bl,ah
  40bffd:	jnp    0x40bf93
  40bfff:	pop    ebp
  40c000:	not    BYTE PTR [eax-0x74]
  40c003:	adc    edx,eax
  40c005:	popa   
  40c006:	or     cl,BYTE PTR [edx+ebx*4]
  40c009:	mov    dh,0xd5
  40c00b:	sbb    al,0x98
  40c00d:	fdiv   QWORD PTR [ebx+0x7df920eb]
  40c013:	inc    eax
  40c014:	or     eax,0x1733ea7c
  40c019:	outs   dx,BYTE PTR ds:[esi]
  40c01a:	ins    BYTE PTR es:[edi],dx
  40c01b:	in     eax,dx
  40c01c:	mov    ebp,0xaa584ab4
  40c021:	mov    al,ds:0xf9dee0e1
  40c026:	xchg   dl,ah
  40c028:	loope  0x40c046
  40c02a:	enter  0x9631,0xd0
  40c02e:	add    dh,BYTE PTR [ebx+ecx*1]
  40c031:	in     eax,dx
  40c032:	jl     0x40c078
  40c034:	in     al,0x50
  40c036:	cmp    eax,0x381bf9de
  40c03b:	push   esp
  40c03c:	dec    ebp
  40c03d:	push   0x6b
  40c03f:	cld    
  40c040:	fadd   QWORD PTR [eax]
  40c042:	cli    
  40c043:	push   edi
  40c044:	jg     0x40c0a8
  40c046:	or     DWORD PTR [edi-0x35],ebp
  40c049:	icebp  
  40c04a:	cli    
  40c04b:	aas    
  40c04c:	jp     0x40c051
  40c04e:	imul   eax,DWORD PTR [edx-0x27a5819b],0xffffffcf
  40c055:	repnz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c057:	test   al,dh
  40c059:	inc    eax
  40c05a:	jmp    0x986c:0x1b8de688
  40c061:	(bad)  
  40c062:	addr16 sub al,0xd5
  40c065:	dec    ecx
  40c066:	adc    al,0xaf
  40c068:	and    esi,DWORD PTR [eax+0x2adffd3b]
  40c06e:	retf   
  40c06f:	jo     0x40c0c0
  40c071:	enter  0x124e,0xda
  40c075:	sbb    al,0xe6
  40c077:	aam    0x69
  40c079:	addr16 inc ecx
  40c07b:	ficomp DWORD PTR [ebx-0x3d]
  40c07e:	shl    DWORD PTR [esi-0x47],0x7b
  40c082:	xchg   BYTE PTR [esi+ebp*1],bl
  40c085:	push   esi
  40c086:	mov    bl,ch
  40c088:	jl     0x40c0e9
  40c08a:	push   edi
  40c08b:	push   edx
  40c08c:	pop    ebp
  40c08d:	xchg   esp,eax
  40c08e:	lds    ecx,FWORD PTR [ecx+0x35cec0ad]
  40c094:	dec    eax
  40c095:	call   0x1d416c
  40c09a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c09b:	sbb    eax,0xc463a8a0
  40c0a0:	in     al,0x9
  40c0a2:	repz mov eax,0xd4435119
  40c0a8:	jo     0x40c093
  40c0aa:	or     edi,edi
  40c0ac:	jecxz  0x40c086
  40c0ae:	push   edx
  40c0af:	xchg   BYTE PTR [esi+0x3ce63119],ah
  40c0b5:	inc    ebx
  40c0b6:	mov    cl,0x3
  40c0b8:	jge    0x40c0b6
  40c0ba:	mov    esp,0x6f959089
  40c0bf:	enter  0x1433,0xe
  40c0c3:	addr16 jae 0x40c105
  40c0c6:	outs   dx,BYTE PTR ds:[esi]
  40c0c7:	(bad)  
  40c0c8:	hlt    
  40c0c9:	jno    0x40c08a
  40c0cb:	adc    al,0x9c
  40c0cd:	call   0xe396:0x54f841d5
  40c0d4:	jo     0x40c116
  40c0d6:	mov    ch,0x6d
  40c0d8:	je     0x40c0ad
  40c0da:	test   eax,0xc33c4019
  40c0df:	ja     0x40c096
  40c0e1:	mov    ah,0x24
  40c0e3:	or     BYTE PTR [esi-0x7a],dl
  40c0e6:	lds    edi,FWORD PTR [esi-0x8b38eab]
  40c0ec:	imul   esi,DWORD PTR [esp+eiz*2],0xc82a62e5
  40c0f3:	mov    ecx,0x899b2e29
  40c0f8:	popf   
  40c0f9:	pop    esp
  40c0fa:	fwait
  40c0fb:	rcl    DWORD PTR [edx+0x2a],1
  40c0fe:	daa    
  40c0ff:	sbb    edx,DWORD PTR [ebx-0x4a5516fe]
  40c105:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c106:	xor    ebp,DWORD PTR [ecx-0x27]
  40c109:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c10a:	fadd   DWORD PTR ds:0x4172f69a
  40c110:	out    dx,eax
  40c111:	scas   ax,WORD PTR es:[edi]
  40c113:	fwait
  40c114:	push   es
  40c115:	pop    ecx
  40c116:	mov    dl,0xa4
  40c118:	shl    BYTE PTR [eax+0x1e56c06],0xac
  40c11f:	xor    al,BYTE PTR [ebx]
  40c121:	sbb    dl,BYTE PTR [edx-0x4e]
  40c124:	push   ebp
  40c125:	ffreep st(7)
  40c127:	fnstenvw [esi+0x5]
  40c12b:	add    eax,0xfba4575c
  40c130:	and    eax,0xb9a7a2c8
  40c135:	mov    edi,0xc18f886c
  40c13a:	cli    
  40c13b:	mov    al,0x67
  40c13d:	bound  esi,QWORD PTR [ecx-0x41]
  40c140:	loopne 0x40c10c
  40c142:	std    
  40c143:	(bad)  
  40c144:	rcr    dl,1
  40c146:	call   0xbd0614ab
  40c14b:	lahf   
  40c14c:	(bad)  
  40c14d:	xacquire xchg DWORD PTR ds:0x2fa46a0d,edx
  40c154:	rol    BYTE PTR [eax-0x659b23d0],cl
  40c15a:	dec    ebp
  40c15b:	dec    esi
  40c15c:	ret    0x8911
  40c15f:	jmp    0xec2b:0x9637ab1d
  40c166:	or     BYTE PTR [ecx+0x4e5a4814],cl
  40c16c:	adc    esi,DWORD PTR [esi]
  40c16e:	xor    DWORD PTR [esp+edi*2],ebx
  40c171:	int    0x6d
  40c173:	dec    esi
  40c174:	imul   eax,DWORD PTR [ebp-0x87e9577],0x19
  40c17b:	in     al,dx
  40c17c:	(bad)  
  40c17d:	mov    ecx,0xabb03c45
  40c182:	cmp    al,0xfd
  40c184:	mov    edx,0x72624561
  40c189:	(bad)  
  40c18b:	mov    WORD PTR [edi-0x49],es
  40c18e:	mov    ds:0xa48eb2e4,al
  40c193:	pop    ds
  40c194:	daa    
  40c195:	jb     0x40c15a
  40c197:	adc    eax,0x8b8e3cf3
  40c19c:	loope  0x40c190
  40c19e:	mov    edx,0x76c5f097
  40c1a3:	and    edx,DWORD PTR [ecx]
  40c1a5:	test   eax,0x169e6065
  40c1aa:	(bad)  
  40c1ab:	push   ss
  40c1ac:	ja     0x40c1f5
  40c1ae:	ror    BYTE PTR [edx+0x36],cl
  40c1b1:	outs   dx,BYTE PTR ds:[esi]
  40c1b2:	repz add DWORD PTR [ebp+0x74769517],edx
  40c1b9:	pushw  es
  40c1bb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c1bc:	das    
  40c1bd:	inc    BYTE PTR [ecx+0x26]
  40c1c0:	cmp    ebp,esi
  40c1c2:	add    esi,DWORD PTR [ebx-0x23292803]
  40c1c8:	dec    ecx
  40c1c9:	loopne 0x40c1df
  40c1cb:	push   cs
  40c1cc:	and    edi,DWORD PTR [esi-0x596ca906]
  40c1d2:	ja     0x40c214
  40c1d4:	mov    eax,ds:0x1b79d569
  40c1d9:	sub    ebp,DWORD PTR [edx-0x38]
  40c1dc:	test   eax,0x2e1febf3
  40c1e1:	aam    0x53
  40c1e3:	and    ecx,ebx
  40c1e5:	fucomi st,st(4)
  40c1e7:	leave  
  40c1e8:	loopne 0x40c212
  40c1ea:	mov    edi,DWORD PTR [esi+0x50]
  40c1ed:	xchg   ebp,eax
  40c1ee:	sbb    al,0xee
  40c1f0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c1f1:	push   ecx
  40c1f2:	jbe    0x40c1df
  40c1f4:	push   ebx
  40c1f5:	test   al,0xe8
  40c1f7:	inc    ebp
  40c1f8:	and    eax,0x5f3c97e6
  40c1fd:	mov    ecx,DWORD PTR [edx+0x787eef09]
  40c203:	jp     0x40c1d7
  40c205:	cwde   
  40c206:	daa    
  40c207:	mov    ah,0xc8
  40c209:	mul    DWORD PTR [ecx+0x799e004b]
  40c20f:	sub    eax,0xc6d5fad
  40c214:	test   esp,esp
  40c216:	in     eax,0x5c
  40c218:	fucomi st,st(0)
  40c21a:	sub    al,0x9e
  40c21c:	mov    WORD PTR [esi],es
  40c21e:	sbb    al,0xa
  40c220:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c221:	icebp  
  40c222:	jns    0x40c23e
  40c224:	mov    ds:0xac3e6036,al
  40c229:	inc    eax
  40c22a:	pop    ebp
  40c22b:	out    0x7e,al
  40c22d:	sub    BYTE PTR es:[esi],ah
  40c230:	in     al,dx
  40c231:	xchg   DWORD PTR [eax-0x50151ac2],esp
  40c237:	dec    esp
  40c238:	outs   dx,BYTE PTR ds:[esi]
  40c239:	popf   
  40c23a:	imul   edx,DWORD PTR [esp+edi*2-0x3311c868],0x863e250b
  40c245:	adc    cl,BYTE PTR [edi+0x28119e01]
  40c24b:	jnp    0x40c272
  40c24d:	mov    edx,0xa0c5a547
  40c252:	jo     0x40c1f3
  40c254:	mov    ebx,0x565a44b7
  40c259:	scas   eax,DWORD PTR es:[edi]
  40c25a:	test   BYTE PTR [edi+0x4dc9666a],bh
  40c260:	test   DWORD PTR [esi],ecx
  40c262:	mov    esi,0x4df7d8f3
  40c267:	in     al,0xc3
  40c269:	mov    esp,0x97bd504b
  40c26e:	jge    0x40c1fb
  40c270:	adc    ebp,esp
  40c272:	and    al,0x27
  40c274:	jg     0x40c271
  40c276:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c277:	xor    DWORD PTR [esi],edi
  40c279:	pop    edi
  40c27b:	mov    dh,0x5d
  40c27d:	test   BYTE PTR [esi-0x7b],ch
  40c280:	cld    
  40c281:	xchg   edx,eax
  40c282:	in     eax,dx
  40c283:	xchg   esp,eax
  40c284:	jns    0x40c29d
  40c286:	cmp    eax,0xccaf341
  40c28b:	add    BYTE PTR [ecx+edx*1-0x51ed2597],bl
  40c292:	pop    esp
  40c293:	pop    ebp
  40c294:	cmp    bh,BYTE PTR [esp+edx*8]
  40c297:	mov    edi,0x63c9f571
  40c29c:	(bad)  
  40c29d:	sti    
  40c29e:	pusha  
  40c29f:	or     esi,DWORD PTR [edi-0x6c]
  40c2a2:	jp     0x40c2c5
  40c2a4:	imul   edi,DWORD PTR [ebx-0x44207c15],0x193fb7cb
  40c2ae:	cmc    
  40c2af:	adc    al,0x5b
  40c2b1:	inc    esp
  40c2b2:	inc    esp
  40c2b3:	jmp    0xea79:0xbeb99344
  40c2ba:	or     eax,0x6328b068
  40c2bf:	imul   eax
  40c2c1:	jl     0x40c2da
  40c2c3:	scas   al,BYTE PTR es:[edi]
  40c2c4:	in     eax,0xb5
  40c2c6:	xor    eax,0x61c22aad
  40c2cb:	bound  eax,QWORD PTR [edi]
  40c2cd:	mov    esp,0x9e5a61e5
  40c2d2:	es retf 
  40c2d4:	and    al,0xe1
  40c2d6:	aas    
  40c2d7:	dec    ebx
  40c2d8:	aad    0xd9
  40c2da:	daa    
  40c2db:	pop    edx
  40c2dc:	xor    eax,0x4b8e5295
  40c2e1:	das    
  40c2e2:	mov    ?,WORD PTR [eax+0x3feb7cad]
  40c2e8:	mov    ecx,DWORD PTR [eax]
  40c2ea:	sub    DWORD PTR [eax-0x71],esp
  40c2ed:	call   0xfbc7:0xaeb67df5
  40c2f4:	xchg   esp,eax
  40c2f5:	call   0x1b6a4170
  40c2fa:	lea    eax,[esi+0x4fc7a95d]
  40c300:	adc    ebp,DWORD PTR [eax-0x28]
  40c303:	pushf  
  40c304:	cs dec esi
  40c306:	mov    eax,ds:0x7b5c5c1
  40c30b:	cmp    dl,BYTE PTR [edi+ecx*4-0x5a2e207a]
  40c312:	jno    0x40c2d6
  40c314:	push   ebx
  40c315:	mov    ds,edx
  40c317:	xchg   ebp,eax
  40c318:	sbb    eax,0xa95894b8
  40c31d:	xchg   esp,eax
  40c31e:	shl    bh,1
  40c320:	daa    
  40c321:	sub    esi,DWORD PTR [ecx-0x260e7392]
  40c327:	jecxz  0x40c37d
  40c329:	stc    
  40c32a:	xchg   ebx,eax
  40c32b:	iret   
  40c32c:	dec    eax
  40c32d:	mov    ecx,0x5040a1d5
  40c332:	aad    0x34
  40c334:	imul   ecx,ebp,0xd
  40c337:	ficom  WORD PTR [edx-0x150fa2a0]
  40c33d:	xchg   DWORD PTR [ebx-0xa64b50],ecx
  40c343:	xchg   esp,eax
  40c344:	sbb    al,0xd6
  40c346:	dec    ebx
  40c347:	jg     0x40c360
  40c349:	push   0xaa44471
  40c34e:	add    DWORD PTR ds:0x2e691df9,0xffffffd3
  40c355:	lea    eax,[esi-0x52da6398]
  40c35b:	fldcw  WORD PTR [edi+0x506f477a]
  40c361:	nop
  40c362:	and    eax,0xb5c1da05
  40c367:	or     BYTE PTR [ebp-0x1dadb8a5],ah
  40c36d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c36e:	cmp    BYTE PTR [ebx],ch
  40c370:	loopne 0x40c388
  40c372:	sbb    DWORD PTR ds:0xc86349b0,esi
  40c378:	sub    esi,DWORD PTR [ebx-0xb]
  40c37b:	push   eax
  40c37c:	sub    al,0xd0
  40c37e:	sub    esi,DWORD PTR [ebp+0x1c1fac32]
  40c384:	add    eax,0x552c5941
  40c389:	js     0x40c33a
  40c38b:	popf   
  40c38c:	jmp    0x5713:0xd0832b9e
  40c393:	cmp    BYTE PTR [ecx+0x4ac205ac],0x91
  40c39a:	xor    bh,BYTE PTR [edx+edi*4+0x6a35b1c4]
  40c3a1:	nop
  40c3a2:	retf   
  40c3a3:	adc    BYTE PTR [ecx],ch
  40c3a5:	pop    eax
  40c3a6:	sbb    ch,BYTE PTR [edx+0x38]
  40c3a9:	lods   al,BYTE PTR ds:[esi]
  40c3aa:	(bad)  
  40c3ab:	fidiv  DWORD PTR [esi-0x4173ee85]
  40c3b1:	pop    ds
  40c3b2:	adc    ebx,edx
  40c3b4:	test   DWORD PTR [edi+0x11],edi
  40c3b7:	enter  0x9740,0x6a
  40c3bb:	xchg   BYTE PTR [edi+0x1c],al
  40c3be:	fsub   DWORD PTR [ebp-0x538abd39]
  40c3c4:	xchg   ebx,eax
  40c3c5:	or     BYTE PTR [ecx-0x27b7abaa],0xda
  40c3cc:	fdivr  st,st(2)
  40c3ce:	int3   
  40c3cf:	sbb    ah,ah
  40c3d1:	or     al,0xbe
  40c3d3:	rol    BYTE PTR [edi-0x74],0xaa
  40c3d7:	rcr    DWORD PTR [edi+0x6fe346e7],cl
  40c3dd:	out    0x7b,al
  40c3df:	adc    bl,ch
  40c3e1:	pop    eax
  40c3e2:	xchg   esi,eax
  40c3e3:	add    al,0x43
  40c3e5:	push   edi
  40c3e6:	lods   eax,DWORD PTR ds:[esi]
  40c3e7:	mov    dh,0x7e
  40c3e9:	ror    edi,1
  40c3eb:	rcl    BYTE PTR [edi+0x4a2ffd1f],1
  40c3f1:	call   0x69985608
  40c3f6:	rcr    BYTE PTR [ecx+eiz*8],0x47
  40c3fa:	div    BYTE PTR [eax+0x12096363]
  40c400:	adc    eax,0xadec8913
  40c405:	adc    ch,BYTE PTR [esi]
  40c407:	dec    ebp
  40c408:	cmp    BYTE PTR [ebp+0xd],dh
  40c40b:	call   0xb67d:0x120e5b09
  40c412:	pop    es
  40c413:	outs   dx,DWORD PTR ds:[esi]
  40c414:	lea    ebx,[esi-0x12ebe90c]
  40c41a:	ret    
  40c41b:	jmp    0x969796f1
  40c420:	ja     0x40c3d1
  40c422:	dec    edx
  40c423:	xlat   BYTE PTR ds:[ebx]
  40c424:	outs   dx,DWORD PTR ds:[esi]
  40c425:	sbb    al,0x46
  40c427:	loope  0x40c493
  40c429:	test   edx,edx
  40c42b:	addr16 int 0x76
  40c42e:	call   0x6ea28f42
  40c433:	mov    gs,ebx
  40c435:	das    
  40c436:	push   eax
  40c437:	add    edx,ecx
  40c439:	and    bl,0xde
  40c43c:	mov    ch,BYTE PTR [ebx]
  40c43e:	sbb    BYTE PTR [ebx+0x44],0x4c
  40c442:	ret    
  40c443:	jg     0x40c402
  40c445:	nop
  40c446:	mul    BYTE PTR [edx+edx*2+0x49]
  40c44a:	push   esi
  40c44b:	cwde   
  40c44c:	jne    0x40c42a
  40c44e:	push   ss
  40c44f:	jmp    0xe731:0x3e64f90
  40c456:	pop    es
  40c457:	mov    ch,0x9c
  40c459:	cdq    
  40c45a:	adc    edx,0x2c
  40c45d:	push   edx
  40c45e:	inc    ecx
  40c45f:	push   es
  40c460:	pushf  
  40c461:	xchg   esp,eax
  40c462:	mov    dl,0x2d
  40c464:	jmp    FWORD PTR [ebp+0x3d]
  40c467:	jnp    0x40c48d
  40c469:	daa    
  40c46a:	ins    BYTE PTR es:[edi],dx
  40c46b:	sbb    al,BYTE PTR [eax]
  40c46d:	xor    al,0x4f
  40c46f:	scas   eax,DWORD PTR es:[edi]
  40c470:	xchg   edx,eax
  40c471:	pusha  
  40c472:	cli    
  40c473:	pop    es
  40c474:	pop    ecx
  40c475:	or     BYTE PTR [edi],bl
  40c477:	ret    
  40c478:	test   bl,ch
  40c47a:	jnp    0x40c454
  40c47c:	in     eax,0x88
  40c47e:	rol    BYTE PTR [esi-0x5c],0x6e
  40c482:	push   0x3268e1d3
  40c487:	push   es
  40c488:	imul   ecx,DWORD PTR ss:[ecx],0xef912e2c
  40c48f:	cmp    eax,0xc721e5e7
  40c494:	adc    DWORD PTR [edx+0x78],0x3deca18b
  40c49b:	mov    ebx,0xd9ba9c7d
  40c4a0:	ds ret 
  40c4a2:	cmp    BYTE PTR [edx+0x57],0x22
  40c4a6:	dec    edi
  40c4a7:	jp     0x40c4b8
  40c4a9:	xchg   esp,eax
  40c4aa:	mov    eax,ds:0xfe7f9549
  40c4af:	leave  
  40c4b0:	imul   DWORD PTR [ebx]
  40c4b2:	sub    bh,ch
  40c4b4:	mov    dl,BYTE PTR [ebp-0x66]
  40c4b7:	sbb    BYTE PTR [edi],0xdd
  40c4ba:	mov    al,0x83
  40c4bc:	cli    
  40c4bd:	popa   
  40c4be:	mov    cl,0x30
  40c4c0:	sahf   
  40c4c1:	jecxz  0x40c472
  40c4c3:	and    al,0x83
  40c4c5:	mov    al,ds:0xf7714500
  40c4ca:	xor    BYTE PTR [edx],ah
  40c4cc:	mov    edi,0x23d74771
  40c4d1:	xchg   edx,eax
  40c4d2:	sbb    esp,DWORD PTR [ebx-0x6e]
  40c4d5:	in     al,dx
  40c4d6:	dec    esi
  40c4d7:	sbb    al,0xf9
  40c4d9:	jmp    0x40c546
  40c4db:	jmp    0xa1be7dcc
  40c4e0:	mov    al,0xc7
  40c4e2:	push   DWORD PTR [edx+0x40cb3396]
  40c4e8:	jmp    0xbde5:0xc7e7b370
  40c4ef:	mov    bh,0xd9
  40c4f1:	es add dl,bh
  40c4f4:	push   ebp
  40c4f5:	out    0xa9,al
  40c4f7:	cs dec esi
  40c4f9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c4fa:	ret    0x518b
  40c4fd:	mov    fs,ebp
  40c4ff:	jecxz  0x40c549
  40c501:	add    eax,0x3842ed49
  40c506:	xchg   ebx,eax
  40c507:	cld    
  40c508:	repnz out dx,al
  40c50a:	push   ebp
  40c50b:	outs   dx,BYTE PTR ds:[esi]
  40c50c:	pushf  
  40c50d:	mov    ds:0xeca05460,al
  40c512:	sbb    ch,BYTE PTR [eax]
  40c514:	or     BYTE PTR [ecx-0x39],0xff
  40c518:	xchg   BYTE PTR [esi+ebp*2],ah
  40c51b:	test   DWORD PTR [eax],edx
  40c51d:	fldcw  WORD PTR [eax-0x28]
  40c520:	in     eax,dx
  40c521:	xchg   BYTE PTR [edi],ch
  40c523:	fsubp  st(7),st
  40c525:	sbb    DWORD PTR [ebx+0x4f],esi
  40c528:	jge    0x40c56c
  40c52a:	pop    eax
  40c52b:	in     al,dx
  40c52c:	and    eax,0x3aa0cfc2
  40c531:	pop    es
  40c532:	xor    BYTE PTR ds:0x417ed072,cl
  40c538:	mov    fs,WORD PTR [edx+edx*2-0x2c]
  40c53c:	int3   
  40c53d:	sbb    al,dl
  40c53f:	test   al,0x3b
  40c541:	xor    ebp,eax
  40c543:	mov    ebx,0xffc6fd88
  40c548:	lds    edi,FWORD PTR [ecx]
  40c54a:	bound  ecx,QWORD PTR [edi]
  40c54c:	scas   al,BYTE PTR es:[edi]
  40c54d:	mov    al,ds:0x5582a1b2
  40c552:	sub    ah,BYTE PTR [esi+0x51]
  40c555:	outs   dx,BYTE PTR ds:[esi]
  40c556:	(bad)  
  40c557:	cmp    al,0xae
  40c559:	ins    DWORD PTR es:[edi],dx
  40c55a:	(bad)  
  40c55b:	pop    ss
  40c55c:	xor    DWORD PTR [edi+0x3c],edi
  40c55f:	mov    ecx,0x34f79b8e
  40c564:	jecxz  0x40c5ae
  40c566:	nop
  40c567:	fisubr WORD PTR [ebx-0x511d0242]
  40c56d:	or     bl,al
  40c56f:	xchg   ebx,eax
  40c570:	fiadd  DWORD PTR [edx-0x34]
  40c573:	call   0x2bbd:0xd38fd9ff
  40c57a:	cmp    bh,BYTE PTR [eax+eax*2-0x10]
  40c57e:	xchg   ebx,eax
  40c57f:	add    dh,BYTE PTR [edx]
  40c581:	cld    
  40c582:	and    BYTE PTR ds:0x4dc9a1fc,0xed
  40c589:	iret   
  40c58a:	pop    ecx
  40c58b:	test   ebx,eax
  40c58d:	adc    BYTE PTR [edx],ah
  40c58f:	add    DWORD PTR ds:0x71c1d9d,ecx
  40c595:	cwde   
  40c596:	jnp    0x40c51e
  40c598:	js     0x40c5f4
  40c59a:	out    0xd4,eax
  40c59c:	in     eax,dx
  40c59d:	push   esi
  40c59e:	loope  0x40c56c
  40c5a0:	or     BYTE PTR [ecx+0x79],cl
  40c5a3:	pop    esi
  40c5a4:	dec    edx
  40c5a5:	push   cs
  40c5a6:	ss mov ecx,ebp
  40c5a9:	xchg   esp,eax
  40c5aa:	mov    dh,0x9c
  40c5ac:	cmp    BYTE PTR [esi],0xf0
  40c5af:	xchg   ecx,eax
  40c5b0:	jg     0x40c53f
  40c5b2:	xor    DWORD PTR [esi],ebp
  40c5b4:	int3   
  40c5b5:	ret    0x1d69
  40c5b8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c5b9:	push   edi
  40c5ba:	cmc    
  40c5bb:	fsub   DWORD PTR ds:0x4bef665b
  40c5c1:	inc    ebp
  40c5c2:	ret    0x4b0
  40c5c5:	adc    edi,ecx
  40c5c7:	pop    esp
  40c5c8:	dec    ebp
  40c5c9:	sub    al,0x7b
  40c5cb:	jecxz  0x40c5c4
  40c5cd:	xchg   edx,eax
  40c5ce:	je     0x40c5b8
  40c5d0:	imul   DWORD PTR [edx+eiz*4-0x18]
  40c5d4:	jo     0x40c56c
  40c5d6:	xchg   ecx,eax
  40c5d7:	lods   al,BYTE PTR ds:[esi]
  40c5d8:	sbb    DWORD PTR [edx],edx
  40c5da:	jae    0x40c5e6
  40c5dc:	add    DWORD PTR [esi+0x76],0x79
  40c5e0:	xchg   esi,eax
  40c5e1:	xor    al,0xd2
  40c5e3:	fsubp  st(5),st
  40c5e5:	lds    esi,FWORD PTR [eax+0x4]
  40c5e8:	mov    bl,0x1
  40c5ea:	jmp    0x40c628
  40c5ec:	pop    eax
  40c5ed:	inc    ebx
  40c5ee:	iret   
  40c5ef:	popf   
  40c5f0:	dec    al
  40c5f2:	inc    ebp
  40c5f3:	xchg   esp,eax
  40c5f4:	inc    esp
  40c5f5:	sahf   
  40c5f6:	daa    
  40c5f7:	cmc    
  40c5f8:	rcr    DWORD PTR [edx],cl
  40c5fa:	fcomp  st(6)
  40c5fc:	push   ebp
  40c5fd:	ins    DWORD PTR es:[edi],dx
  40c5fe:	enter  0x1a52,0xa2
  40c602:	adc    edi,DWORD PTR [edx+0x28e50db9]
  40c608:	mov    dh,BYTE PTR [ebp+0xb]
  40c60b:	std    
  40c60c:	data16 sbb al,0x9d
  40c60f:	mov    WORD PTR [ebp+edi*4+0x50],ss
  40c613:	cmp    BYTE PTR [ebx],bl
  40c615:	in     al,0x99
  40c617:	sahf   
  40c618:	jbe    0x40c59d
  40c61a:	fist   WORD PTR [ecx-0x6cb774f1]
  40c620:	dec    ebx
  40c621:	shl    DWORD PTR [ecx-0x46f269f6],cl
  40c627:	push   es
  40c628:	mov    dh,0xce
  40c62a:	sub    ch,BYTE PTR [ebp-0x21f1b505]
  40c630:	outs   dx,DWORD PTR ds:[esi]
  40c631:	dec    ecx
  40c632:	or     BYTE PTR [edx],ch
  40c634:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c635:	adc    BYTE PTR [ecx+0x1da8f2fe],ch
  40c63b:	in     al,0xe3
  40c63d:	rcl    DWORD PTR [edi],1
  40c63f:	fstp   QWORD PTR [edi-0x2e]
  40c642:	mov    dh,bl
  40c644:	sbb    al,0xd0
  40c646:	jae    0x40c672
  40c648:	and    DWORD PTR fs:[ebx-0x9],ecx
  40c64c:	cmp    BYTE PTR [esi-0x35de0117],ah
  40c652:	push   0xba8c080e
  40c657:	pop    ebx
  40c658:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c659:	sti    
  40c65a:	pop    eax
  40c65b:	fcom   QWORD PTR ds:0x64dd8982
  40c661:	cmp    al,BYTE PTR [ecx+0x73]
  40c664:	cmp    ecx,DWORD PTR [edx+ecx*2+0x6552d76e]
  40c66b:	sub    bl,ah
  40c66d:	out    0x9e,al
  40c66f:	xchg   edx,eax
  40c670:	cmp    DWORD PTR [edx+edi*2-0x3d5f1afa],ebx
  40c677:	lods   al,BYTE PTR ds:[esi]
  40c678:	inc    esi
  40c679:	std    
  40c67a:	adc    al,BYTE PTR [edx+0x53]
  40c67d:	sbb    eax,0x3110aeb8
  40c682:	jl     0x40c62b
  40c684:	inc    esp
  40c685:	jb     0x40c660
  40c687:	cmp    DWORD PTR [edx+eiz*8-0xf648245],ecx
  40c68e:	adc    esi,DWORD PTR [ecx+0x16567da3]
  40c694:	or     DWORD PTR [edi],edx
  40c696:	dec    eax
  40c697:	push   es
  40c698:	and    bh,BYTE PTR ds:0xf1f753bd
  40c69e:	inc    edi
  40c69f:	or     BYTE PTR [esi],0x2c
  40c6a2:	cwde   
  40c6a3:	rcr    ecx,1
  40c6a5:	nop
  40c6a6:	call   0x2431:0x91f692b8
  40c6ad:	pop    ebx
  40c6ae:	dec    ecx
  40c6af:	addr16 (bad) 
  40c6b1:	fwait
  40c6b2:	push   esp
  40c6b3:	sar    DWORD PTR [esi+ecx*8+0x346edd9f],cl
  40c6ba:	dec    edx
  40c6bb:	(bad)  
  40c6bc:	loope  0x40c6a9
  40c6be:	loope  0x40c739
  40c6c0:	lods   eax,DWORD PTR ds:[esi]
  40c6c1:	and    bl,BYTE PTR [eax-0x51669e7d]
  40c6c7:	and    dh,BYTE PTR [ecx]
  40c6c9:	fdiv   DWORD PTR [ebp+0x21bb92ea]
  40c6cf:	gs pop ebx
  40c6d1:	pushf  
  40c6d2:	or     eax,0x7b4c60cf
  40c6d7:	pop    edi
  40c6d8:	mov    edx,0xa2221686
  40c6dd:	and    dh,ch
  40c6df:	fdiv   QWORD PTR [ecx]
  40c6e1:	adc    DWORD PTR [ebx],0xabc393a5
  40c6e7:	push   ss
  40c6e8:	pop    es
  40c6e9:	pop    ebp
  40c6ea:	lds    esp,FWORD PTR [esi]
  40c6ec:	jae    0x40c683
  40c6ee:	xchg   esi,eax
  40c6ef:	inc    eax
  40c6f0:	xchg   BYTE PTR [ebx],ah
  40c6f2:	fucomip st,st(6)
  40c6f4:	sbb    eax,0xbb318329
  40c6f9:	push   ebx
  40c6fa:	nop
  40c6fb:	aam    0x1f
  40c6fd:	xchg   edx,eax
  40c6fe:	push   cs
  40c6ff:	shl    esi,0x9f
  40c702:	imul   edx,DWORD PTR [ecx],0xffffffbd
  40c705:	test   al,0x70
  40c707:	and    bl,BYTE PTR [eax+0xe225c50]
  40c70d:	loop   0x40c721
  40c70f:	inc    edx
  40c710:	std    
  40c711:	mov    eax,ds:0xd4b574d6
  40c716:	aas    
  40c717:	cs (bad) 
  40c719:	mov    ch,0xae
  40c71b:	into   
  40c71c:	scas   al,BYTE PTR es:[edi]
  40c71d:	or     al,0x18
  40c71f:	push   edx
  40c720:	rol    bl,cl
  40c722:	cmp    al,0x3c
  40c724:	mov    ah,0xf2
  40c726:	push   edx
  40c727:	push   edx
  40c728:	inc    ebp
  40c729:	dec    edx
  40c72a:	sbb    dh,dh
  40c72c:	or     eax,0x1c77dc91
  40c731:	or     al,0xfc
  40c733:	stc    
  40c734:	cmc    
  40c735:	fmul   DWORD PTR [eax+0x2c]
  40c738:	and    al,0x8b
  40c73a:	add    eax,0x6b17bea5
  40c73f:	in     al,0x66
  40c741:	or     al,0x15
  40c743:	test   eax,0x52e871ff
  40c748:	les    edi,FWORD PTR [edi+ebx*1]
  40c74b:	mov    dl,0xd7
  40c74d:	daa    
  40c74e:	jo     0x40c6eb
  40c750:	mov    bh,0xa8
  40c752:	loope  0x40c733
  40c754:	(bad)  
  40c755:	cmp    bl,BYTE PTR [esi+0x4]
  40c758:	inc    edx
  40c759:	cmp    DWORD PTR ds:0x9a6940e5,ebx
  40c75f:	fwait
  40c760:	sar    DWORD PTR [eax],cl
  40c762:	and    eax,0x7ec40b14
  40c767:	fild   QWORD PTR ds:[ecx-0xa36788f]
  40c76e:	cmp    al,0xb4
  40c770:	das    
  40c771:	xlat   BYTE PTR ds:[ebx]
  40c772:	out    0xdd,al
  40c774:	loope  0x40c7e7
  40c776:	inc    ecx
  40c777:	push   0x55078363
  40c77c:	nop
  40c77d:	fwait
  40c77e:	sbb    esp,DWORD PTR [eax+0x27]
  40c781:	xchg   ebx,eax
  40c782:	sbb    ebp,ebp
  40c784:	jmp    0x56badc68
  40c789:	mov    eax,0xc3d22519
  40c78e:	(bad)  
  40c78f:	adc    ch,BYTE PTR [edi+edi*2-0x38]
  40c793:	jo     0x40c759
  40c795:	xchg   ebx,eax
  40c796:	lods   eax,DWORD PTR ds:[esi]
  40c797:	mul    DWORD PTR [eax+0x4d]
  40c79a:	inc    ebp
  40c79b:	sar    DWORD PTR [eax],1
  40c79d:	adc    al,BYTE PTR [ebx-0x71]
  40c7a0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c7a1:	add    eax,0x3be0864d
  40c7a6:	fs in  eax,dx
  40c7a8:	in     al,0xae
  40c7aa:	push   ds
  40c7ab:	and    BYTE PTR [ecx+ebx*8],dl
  40c7ae:	jg     0x40c801
  40c7b0:	inc    ebp
  40c7b1:	mov    bh,0x6d
  40c7b3:	xchg   esi,eax
  40c7b4:	popf   
  40c7b5:	xchg   DWORD PTR [ecx-0x6a135e14],edi
  40c7bb:	call   0xed2616d1
  40c7c0:	xchg   ebp,eax
  40c7c1:	mov    eax,DWORD PTR [ebx+edi*4-0x15]
  40c7c5:	pop    ss
  40c7c6:	mov    al,ds:0x1d6a7fac
  40c7cb:	fdivr  DWORD PTR [edi-0x43d89505]
  40c7d1:	scas   al,BYTE PTR es:[edi]
  40c7d2:	stos   DWORD PTR es:[edi],eax
  40c7d3:	mov    ebx,0x14d13d28
  40c7d8:	xchg   ebp,eax
  40c7d9:	jmp    0x40c797
  40c7db:	fbld   TBYTE PTR [esi]
  40c7dd:	pop    ebp
  40c7de:	xor    BYTE PTR [edx+0x599fa938],0xa7
  40c7e5:	cmc    
  40c7e6:	dec    edx
  40c7e7:	push   edi
  40c7e8:	xchg   ecx,eax
  40c7e9:	fcmovb st,st(3)
  40c7eb:	sti    
  40c7ec:	outs   dx,DWORD PTR ds:[esi]
  40c7ed:	test   DWORD PTR [eax+0x1f0c5f0b],eax
  40c7f3:	add    al,0xc
  40c7f5:	inc    edi
  40c7f6:	jno    0x40c79a
  40c7f8:	scas   eax,DWORD PTR es:[edi]
  40c7f9:	pop    eax
  40c7fa:	sbb    bl,0xa4
  40c7fd:	cwde   
  40c7fe:	cdq    
  40c7ff:	pop    ds
  40c800:	lods   eax,DWORD PTR ds:[esi]
  40c801:	ins    BYTE PTR es:[edi],dx
  40c802:	pop    ebx
  40c803:	jmp    0xe46a:0xdac9cc7e
  40c80a:	aaa    
  40c80b:	or     edi,DWORD PTR [edx]
  40c80d:	shl    BYTE PTR [eax-0x43c8343d],0x4f
  40c814:	mov    esi,0xdb43847b
  40c819:	sbb    BYTE PTR [eax+0x2a],cl
  40c81c:	(bad)  
  40c81d:	fild   DWORD PTR [edx+0x1cc00728]
  40c823:	int    0x13
  40c825:	xchg   ebp,eax
  40c826:	cs iret 
  40c828:	mov    ?,ebp
  40c82a:	repz xor eax,0x5c8871d1
  40c830:	icebp  
  40c831:	dec    edi
  40c832:	push   0xd04c9a17
  40c837:	pop    edx
  40c838:	hlt    
  40c839:	and    dl,BYTE PTR [edi]
  40c83b:	fwait
  40c83c:	xchg   ecx,eax
  40c83d:	and    eax,0x5442b1d0
  40c842:	test   eax,0x1e6974a0
  40c847:	shl    BYTE PTR [edx],cl
  40c849:	inc    eax
  40c84b:	nop
  40c84c:	mov    ds:0xca46be80,eax
  40c851:	add    al,0x1e
  40c853:	push   ds
  40c854:	jmp    0x74bd3ea4
  40c859:	cmp    al,ch
  40c85b:	or     al,0xa0
  40c85d:	and    BYTE PTR [esi],bh
  40c85f:	jg     0x40c82e
  40c861:	mov    DWORD PTR [ebx-0x80],eax
  40c864:	sbb    eax,0x2a943eb0
  40c869:	cs push edi
  40c86b:	out    0x73,al
  40c86d:	lea    edi,[esi-0x19]
  40c870:	daa    
  40c871:	sub    BYTE PTR [ebx-0x14],ch
  40c874:	fsubr  QWORD PTR [edx-0x14]
  40c877:	retf   
  40c878:	xlat   BYTE PTR ds:[ebx]
  40c879:	adc    ah,BYTE PTR [edi-0x4d7f1489]
  40c87f:	mov    ebp,0x8075fa89
  40c884:	dec    edx
  40c885:	adc    al,0x76
  40c887:	sahf   
  40c888:	or     DWORD PTR [eax],edi
  40c88a:	fcomp  QWORD PTR [edx]
  40c88c:	cli    
  40c88d:	and    edx,DWORD PTR [edx]
  40c88f:	adc    dh,BYTE PTR [eax]
  40c891:	call   0xea3b:0x6018e675
  40c898:	stc    
  40c899:	ror    BYTE PTR [ebp+0x1a98e505],1
  40c89f:	cmp    al,0x53
  40c8a1:	inc    eax
  40c8a2:	jno    0x40c906
  40c8a4:	xor    ebp,DWORD PTR [ebx-0x1aca24db]
  40c8aa:	ins    DWORD PTR es:[edi],dx
  40c8ab:	cdq    
  40c8ac:	imul   esi,DWORD PTR [esi+edx*4+0x789e5bfc],0x16
  40c8b4:	inc    esi
  40c8b5:	or     al,0xcd
  40c8b7:	add    eax,0x8b99a36
  40c8bc:	adc    bh,BYTE PTR [ebp+0x2f]
  40c8bf:	int3   
  40c8c0:	cmp    al,0xf
  40c8c2:	jbe    0x40c87f
  40c8c4:	push   0x2878c47d
  40c8c9:	mov    ds:0x6789c480,al
  40c8ce:	or     al,0xd
  40c8d0:	fsubr  QWORD PTR [ebx+0x21e6ecf]
  40c8d6:	xor    dh,BYTE PTR [edx+0x12f3e89c]
  40c8dc:	outs   dx,DWORD PTR ds:[esi]
  40c8dd:	pop    esp
  40c8de:	sar    DWORD PTR gs:[ecx],cl
  40c8e1:	jae    0x40c8de
  40c8e3:	cmp    al,BYTE PTR [edx+ebp*4-0x708a6be0]
  40c8ea:	adc    BYTE PTR [bx+si-0x1f],dh
  40c8ee:	jmp    0x3189:0xc3268551
  40c8f5:	cmp    cl,dh
  40c8f7:	and    BYTE PTR [esp+esi*4-0xd8429ef],0x9c
  40c8ff:	jle    0x40c8b5
  40c901:	jae    0x40c8b7
  40c903:	gs xchg esi,eax
  40c905:	mov    cs,WORD PTR [ebx]
  40c907:	call   0xb687:0xf0d28fc
  40c90e:	jp     0x40c984
  40c910:	js     0x40c98a
  40c912:	imul   esp,esi,0xcea38a1
  40c918:	dec    eax
  40c919:	ins    DWORD PTR es:[edi],dx
  40c91a:	out    dx,al
  40c91b:	and    eax,0x55637a5
  40c920:	retf   
  40c921:	imul   ebx,DWORD PTR [ebx-0x2496423e],0x70
  40c928:	jnp    0x40c8b7
  40c92a:	jg     0x40c8b7
  40c92c:	sbb    bh,ch
  40c92e:	fimul  DWORD PTR [ebx-0x127c9e5d]
  40c934:	test   eax,0x7a98ccc4
  40c939:	fs int 0x74
  40c93c:	jp     0x40c915
  40c93e:	test   al,0x29
  40c940:	mov    DWORD PTR [eax-0x334a9864],ebp
  40c946:	shl    ecx,1
  40c948:	mov    ds:0x28d2ce03,al
  40c94d:	and    eax,DWORD PTR [ebx]
  40c94f:	outs   dx,DWORD PTR ds:[esi]
  40c950:	test   dl,0xee
  40c953:	mov    edx,0x3f81e4d7
  40c958:	js     0x40c957
  40c95a:	outs   dx,BYTE PTR ds:[esi]
  40c95b:	sar    DWORD PTR [ecx+ebp*2-0xbca67e0],1
  40c962:	call   0x52f1:0x88670e28
  40c969:	das    
  40c96a:	xor    al,al
  40c96c:	jle    0x40c96f
  40c96e:	into   
  40c96f:	add    eax,0x5f36808d
  40c974:	jnp    0x40c9e0
  40c976:	ins    BYTE PTR es:[edi],dx
  40c977:	mov    ecx,edx
  40c979:	stc    
  40c97a:	clc    
  40c97b:	rcl    BYTE PTR [edi-0x5f46c12c],1
  40c981:	sbb    DWORD PTR [ecx-0x6fc6cb70],ebx
  40c987:	xchg   ebx,eax
  40c988:	push   ecx
  40c989:	mov    ds:0x33261579,eax
  40c98e:	and    DWORD PTR [edx-0xa],0x4d
  40c992:	and    eax,0xf2275fb0
  40c997:	sbb    esp,DWORD PTR [ebx-0x12eb2f7]
  40c99d:	mov    ah,0x9c
  40c99f:	mov    esp,0x8e4e1cba
  40c9a4:	push   ebp
  40c9a5:	mov    ch,0xd1
  40c9a7:	jp     0x40c99e
  40c9a9:	sbb    eax,0xc6e3cd4e
  40c9ae:	push   es
  40c9af:	popf   
  40c9b0:	fist   DWORD PTR [edx+0x7d666146]
  40c9b6:	push   esp
  40c9b7:	push   0x5afc5174
  40c9bc:	dec    eax
  40c9bd:	retf   
  40c9be:	loop   0x40c9e9
  40c9c0:	loopne 0x40ca1b
  40c9c2:	add    eax,0xeeec9920
  40c9c7:	retf   0xcbfc
  40c9ca:	lock sbb BYTE PTR [esi],ch
  40c9cd:	sub    al,0xe3
  40c9cf:	cld    
  40c9d0:	outs   dx,BYTE PTR ds:[esi]
  40c9d1:	jl     0x40ca4c
  40c9d3:	adc    BYTE PTR [ecx-0x86e837c],cl
  40c9d9:	jne    0x40c9c9
  40c9db:	iret   
  40c9dc:	jo     0x40ca06
  40c9de:	pop    ebx
  40c9df:	es out dx,al
  40c9e1:	lahf   
  40c9e2:	data16 into 
  40c9e4:	xor    ebx,edx
  40c9e6:	add    BYTE PTR ds:0x52d8ac4d,al
  40c9ec:	add    bl,ah
  40c9ee:	cmp    eax,0xead42927
  40c9f3:	hlt    
  40c9f4:	nop
  40c9f5:	imul   ecx,esi,0xa705a0ef
  40c9fb:	ret    
  40c9fc:	mov    edx,0x5909f866
  40ca01:	push   cs
  40ca02:	jne    0x40c9c8
  40ca04:	xor    ebp,DWORD PTR [edi+ebx*1+0x69cab562]
  40ca0b:	cmp    al,0x9d
  40ca0d:	xchg   edi,eax
  40ca0f:	pop    es
  40ca10:	cmp    al,0x2f
  40ca12:	stos   DWORD PTR es:[edi],eax
  40ca13:	dec    edi
  40ca14:	dec    edx
  40ca15:	add    al,BYTE PTR [ebx+0x3beea8a7]
  40ca1b:	sahf   
  40ca1c:	addr16 jae 0x40ca11
  40ca1f:	popf   
  40ca20:	les    esi,FWORD PTR [eax]
  40ca22:	inc    eax
  40ca23:	jno    0x40ca34
  40ca25:	adc    edx,ecx
  40ca27:	ret    0x30bd
  40ca2a:	xchg   DWORD PTR [edx+0x2],esi
  40ca2d:	aad    0x87
  40ca2f:	pushf  
  40ca30:	repnz or eax,0xc027ffb
  40ca36:	pop    ss
  40ca37:	lahf   
  40ca38:	fild   WORD PTR [ebp-0x614afdd5]
  40ca3e:	sub    esp,ebx
  40ca40:	dec    eax
  40ca41:	inc    ebp
  40ca42:	das    
  40ca43:	push   0x9a6d3b82
  40ca48:	aas    
  40ca49:	add    BYTE PTR [edi],dh
  40ca4b:	add    eax,0x7508ddc8
  40ca50:	xor    al,0xf1
  40ca52:	dec    edi
  40ca53:	xor    bl,BYTE PTR [edi]
  40ca55:	xchg   esi,eax
  40ca56:	addr16 dec edi
  40ca58:	and    eax,0x62dae26c
  40ca5d:	ins    BYTE PTR es:[edi],dx
  40ca5e:	push   edx
  40ca5f:	ror    DWORD PTR [eax-0x5f],cl
  40ca62:	cli    
  40ca63:	vmwrite esi,DWORD PTR [esi-0x60]
  40ca67:	mov    ebx,0xa4aa183c
  40ca6c:	mov    bh,0x34
  40ca6e:	and    eax,0x8c6e1d27
  40ca73:	sbb    eax,0x8d4a5ac9
  40ca78:	stc    
  40ca79:	(bad)  
  40ca7a:	in     al,dx
  40ca7b:	push   es
  40ca7c:	std    
  40ca7d:	add    edx,edi
  40ca7f:	mov    ebp,0xde22a08
  40ca84:	lock mov ecx,0xa2f0e5c1
  40ca8a:	repnz aaa 
  40ca8c:	loop   0x40ca63
  40ca8e:	ja     0x40cb08
  40ca90:	lock sub eax,0xbfa896f9
  40ca96:	jecxz  0x40ca48
  40ca98:	pop    edx
  40ca99:	xor    eax,DWORD PTR [esi-0x50473e8c]
  40ca9f:	repnz xor BYTE PTR [edx],al
  40caa2:	loop   0x40cb09
  40caa4:	test   eax,0x4ddf2d08
  40caa9:	sbb    ah,BYTE PTR [edi-0x5425ab0b]
  40caaf:	jl     0x40cab1
  40cab1:	adc    BYTE PTR [eax-0x2dddb8ef],al
  40cab7:	js     0x40cacf
  40cab9:	inc    ebp
  40caba:	xchg   esp,eax
  40cabb:	inc    edi
  40cabc:	dec    esp
  40cabd:	xchg   esi,eax
  40cabe:	pop    ss
  40cabf:	dec    edx
  40cac1:	mov    esi,0x1deb97ed
  40cac6:	dec    esi
  40cac7:	mov    ds:0xf12c92b4,al
  40cacc:	sub    al,0xc6
  40cace:	icebp  
  40cacf:	ins    BYTE PTR es:[edi],dx
  40cad0:	test   DWORD PTR [ebx],eax
  40cad2:	addr16 dec edx
  40cad4:	scas   al,BYTE PTR es:[edi]
  40cad5:	and    bh,BYTE PTR [esi+0x5e4954c2]
  40cadb:	xlat   BYTE PTR ds:[ebx]
  40cadc:	cld    
  40cadd:	adc    DWORD PTR [ebx+0x396ff85],ebx
  40cae3:	cli    
  40cae4:	adc    BYTE PTR [ecx+0x6d208913],ah
  40caea:	cwde   
  40caeb:	jmp    0x40cb5a
  40caed:	add    ecx,DWORD PTR [esi+0x3c]
  40caf0:	jmp    0xf5d30f73
  40caf5:	add    al,0x1f
  40caf7:	enter  0x961c,0x2c
  40cafb:	lods   eax,DWORD PTR ds:[esi]
  40cafc:	inc    esp
  40cafd:	(bad)  
  40caff:	cs add ax,0xeda1
  40cb04:	sbb    al,0x30
  40cb06:	shl    DWORD PTR [ebx-0x520e4064],0x6d
  40cb0d:	(bad)  
  40cb0e:	in     al,dx
  40cb0f:	or     edi,0x21
  40cb12:	sbb    dl,BYTE PTR [esp+eax*1]
  40cb15:	adc    al,0x3a
  40cb17:	ficom  DWORD PTR [edi]
  40cb19:	cmp    eax,0x72707190
  40cb1e:	cmp    ebx,DWORD PTR [edi+0x70]
  40cb21:	loopne 0x40caa6
  40cb23:	sub    al,0x59
  40cb25:	mov    ds:0x23bddc5b,al
  40cb2a:	cli    
  40cb2b:	(bad)  
  40cb2c:	mov    esp,0xb14aa120
  40cb31:	jmp    0xb548e6da
  40cb36:	push   es
  40cb37:	cwde   
  40cb38:	and    al,0xf8
  40cb3a:	scas   al,BYTE PTR es:[edi]
  40cb3b:	imul   DWORD PTR [edi-0x78ddd008]
  40cb41:	push   ebx
  40cb42:	push   es
  40cb43:	jbe    0x40cad7
  40cb45:	das    
  40cb46:	mov    ah,0x81
  40cb48:	mov    ah,0x5f
  40cb4a:	lods   eax,DWORD PTR ds:[esi]
  40cb4b:	cmp    ecx,DWORD PTR [edi-0x31f64b04]
  40cb51:	sub    ebp,DWORD PTR [edi]
  40cb53:	out    dx,eax
  40cb54:	xchg   ebp,eax
  40cb55:	aam    0xc0
  40cb57:	fst    DWORD PTR [ecx+0x348d4aa9]
  40cb5d:	sub    BYTE PTR [ebx],ah
  40cb5f:	scas   eax,DWORD PTR es:[edi]
  40cb60:	mov    esi,0x8e7acc24
  40cb65:	add    al,0x7a
  40cb67:	popa   
  40cb68:	dec    esp
  40cb69:	sbb    BYTE PTR [ecx+0x4f],cl
  40cb6c:	inc    ecx
  40cb6d:	jecxz  0x40cbcb
  40cb6f:	into   
  40cb70:	adc    al,0x70
  40cb72:	int3   
  40cb73:	or     al,0xf3
  40cb75:	(bad)  
  40cb76:	aam    0xd8
  40cb78:	iret   
  40cb79:	dec    edx
  40cb7a:	pop    ebp
  40cb7b:	dec    ebp
  40cb7c:	pop    ebp
  40cb7d:	stos   BYTE PTR es:[edi],al
  40cb7e:	out    dx,eax
  40cb7f:	je     0x40cbdf
  40cb81:	sub    DWORD PTR [edi-0x5eb78dfc],eax
  40cb87:	lahf   
  40cb88:	(bad)  
  40cb89:	js     0x40cbe5
  40cb8b:	pop    ds
  40cb8c:	jge    0x40cbba
  40cb8e:	(bad)  
  40cb8f:	jne    0x40cb76
  40cb91:	jg     0x40cb9b
  40cb93:	mov    ebx,0x14290e87
  40cb98:	pop    edx
  40cb99:	ret    0x1813
  40cb9c:	inc    ecx
  40cb9d:	ins    DWORD PTR es:[edi],dx
  40cb9e:	in     eax,dx
  40cb9f:	int3   
  40cba0:	sbb    eax,0xbffd809c
  40cba5:	pusha  
  40cba6:	mov    cl,0x29
  40cba8:	pop    edx
  40cba9:	pop    ebx
  40cbaa:	or     cl,cl
  40cbac:	rcl    BYTE PTR [ebx+0x77],cl
  40cbaf:	cmp    ecx,DWORD PTR [ecx]
  40cbb1:	xor    BYTE PTR [ebx+eax*4+0x6a],bh
  40cbb5:	and    BYTE PTR [ecx+0x16bf13fb],al
  40cbbb:	jmp    0xea79:0x589912fa
  40cbc2:	xor    ebp,ecx
  40cbc4:	int3   
  40cbc5:	loop   0x40cbc6
  40cbc7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cbc8:	shl    DWORD PTR [esi-0x30],1
  40cbcb:	in     eax,dx
  40cbcc:	ds ret 
  40cbce:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cbcf:	dec    esp
  40cbd0:	sbb    ebx,DWORD PTR [ebp+0x47272480]
  40cbd6:	(bad)  
  40cbd7:	mov    eax,0x34e16dfa
  40cbdc:	imul   edi,DWORD PTR [ebp+0x1e],0xfffffffa
  40cbe0:	pushf  
  40cbe1:	jno    0x40cc5b
  40cbe3:	lahf   
  40cbe4:	xor    BYTE PTR [ebp+esi*1-0x77caf570],cl
  40cbeb:	fwait
  40cbec:	xlat   BYTE PTR ds:[ebx]
  40cbed:	mov    WORD PTR [eax],fs
  40cbef:	imul   ecx,DWORD PTR [edx],0xa367852c
  40cbf5:	rol    BYTE PTR ds:0x9c99a5da,0x65
  40cbfc:	jae    0x40cbcb
  40cbfe:	xlat   BYTE PTR ds:[ebx]
  40cbff:	stc    
  40cc00:	outs   dx,DWORD PTR ds:[esi]
  40cc01:	bound  ebp,QWORD PTR [edx]
  40cc03:	out    0x3c,al
  40cc05:	lock xchg edx,eax
  40cc07:	mov    ebp,DWORD PTR [ebp-0x2e]
  40cc0a:	xchg   esp,eax
  40cc0b:	in     eax,0x78
  40cc0d:	or     eax,0xac74fb41
  40cc12:	and    al,0x5
  40cc14:	sub    al,0xeb
  40cc16:	dec    edi
  40cc17:	mov    al,BYTE PTR [eax+0x550ca954]
  40cc1d:	data16 mov gs,WORD PTR [ebx+0x51a3b185]
  40cc24:	sub    DWORD PTR [edi],eax
  40cc26:	and    edx,DWORD PTR [edi]
  40cc28:	sti    
  40cc29:	push   edx
  40cc2a:	or     al,0xd2
  40cc2c:	mov    fs,WORD PTR [edi-0x6e]
  40cc2f:	adc    al,0x5f
  40cc31:	jmp    0x40cc43
  40cc33:	fisub  WORD PTR [ebp+eiz*8-0x62]
  40cc37:	cmp    dh,BYTE PTR [ecx-0x48]
  40cc3a:	lahf   
  40cc3b:	fdivr  st,st(7)
  40cc3d:	fdivr  QWORD PTR ds:0x57980bc4
  40cc43:	mov    cl,0x40
  40cc45:	dec    edi
  40cc46:	or     eax,0xaeefa63d
  40cc4b:	outs   dx,DWORD PTR ds:[esi]
  40cc4c:	push   0x7e
  40cc4e:	shl    al,cl
  40cc50:	or     esi,ecx
  40cc52:	shl    BYTE PTR [edi],cl
  40cc54:	add    al,BYTE PTR [edi+0x2a35483]
  40cc5a:	fsub   DWORD PTR [eax-0x12668240]
  40cc60:	out    0xdd,eax
  40cc62:	xor    al,0xdf
  40cc64:	jecxz  0x40cc13
  40cc66:	jp     0x40cc67
  40cc68:	sahf   
  40cc69:	aad    0x45
  40cc6b:	mov    dh,0x41
  40cc6d:	out    dx,al
  40cc6e:	fcomip st,st(7)
  40cc70:	xor    eax,0x351e2800
  40cc75:	xlat   BYTE PTR ds:[ebx]
  40cc76:	outs   dx,BYTE PTR ds:[esi]
  40cc77:	and    eax,esp
  40cc79:	xchg   edx,eax
  40cc7a:	jno    0x40ccc0
  40cc7c:	cmp    ah,ch
  40cc7e:	jecxz  0x40ccb1
  40cc80:	out    0x62,al
  40cc82:	jns    0x40cc3b
  40cc84:	das    
  40cc85:	adc    al,0xd2
  40cc87:	dec    esp
  40cc88:	mov    ch,0xae
  40cc8a:	mov    edx,0x495a515f
  40cc8f:	pop    ebx
  40cc90:	jmp    0xbf42:0x8263d927
  40cc97:	mov    edx,0x18fba074
  40cc9c:	pushf  
  40cc9d:	pop    eax
  40cc9e:	in     al,dx
  40cc9f:	ins    DWORD PTR es:[edi],dx
  40cca0:	fwait
  40cca1:	pop    edi
  40cca2:	dec    esi
  40cca3:	lds    edi,FWORD PTR [ebx+edx*8-0x49149e84]
  40ccaa:	repnz (bad) 
  40ccac:	push   esp
  40ccad:	fstp   QWORD PTR [ecx]
  40ccaf:	xor    eax,0x759ec3dc
  40ccb4:	mov    cl,0xc6
  40ccb6:	out    0x9,eax
  40ccb8:	jecxz  0x40cd36
  40ccba:	xor    BYTE PTR [edx+0x67e33d15],bh
  40ccc0:	mov    cl,0x57
  40ccc2:	xor    eax,DWORD PTR [esi+0x8]
  40ccc5:	sbb    BYTE PTR ds:0x8d1b7804,dh
  40cccb:	jp     0x40ccca
  40cccd:	adc    DWORD PTR [eax+0x75],edx
  40ccd0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ccd1:	loopne 0x40cd4c
  40ccd3:	cmp    eax,0xc89bd3c3
  40ccd8:	mov    ah,0xf9
  40ccda:	sbb    edi,DWORD PTR [esi+ebp*8-0x28]
  40ccde:	call   0xbb1b:0x6e63f2ab
  40cce5:	xchg   edi,eax
  40cce6:	out    dx,al
  40cce7:	sti    
  40cce8:	push   ds
  40cce9:	add    eax,0xe30c4e97
  40ccee:	loopne 0x40ccba
  40ccf0:	(bad)  
  40ccf1:	test   eax,0x42f22275
  40ccf6:	rol    DWORD PTR [ebp-0x5a89d02f],cl
  40ccfc:	cmp    ebx,DWORD PTR [edx]
  40ccfe:	test   al,0x79
  40cd00:	lock les ecx,FWORD PTR ss:[eax-0x1dbbd256]
  40cd08:	pop    ebx
  40cd09:	(bad)  
  40cd0a:	sbb    al,0xde
  40cd0c:	stos   BYTE PTR es:[edi],al
  40cd0d:	xchg   ebx,eax
  40cd0e:	xor    al,bh
  40cd10:	repnz cmp esp,DWORD PTR [edi+0x752f1475]
  40cd17:	stos   DWORD PTR es:[edi],eax
  40cd18:	dec    esi
  40cd19:	mov    dl,0xd3
  40cd1b:	jl     0x40cd29
  40cd1d:	jmp    0x6b0965c0
  40cd22:	arpl   cx,ax
  40cd24:	jmp    0x40cd65
  40cd26:	add    dl,BYTE PTR [ebp+0x7]
  40cd29:	mov    esp,0x74953d7f
  40cd2e:	les    ebp,FWORD PTR [ebp-0x79]
  40cd31:	popa   
  40cd32:	inc    edx
  40cd33:	stc    
  40cd34:	ins    DWORD PTR es:[edi],dx
  40cd35:	mov    DWORD PTR [edi],ebp
  40cd37:	sub    DWORD PTR [edx+ecx*1],esi
  40cd3a:	xchg   ebx,eax
  40cd3b:	inc    ebp
  40cd3c:	xchg   BYTE PTR [ebx+0x5c],dl
  40cd3f:	es into 
  40cd41:	dec    eax
  40cd42:	mov    dl,0xf
  40cd44:	mov    esi,0x38a78eb6
  40cd49:	aaa    
  40cd4a:	hlt    
  40cd4b:	cmp    BYTE PTR [ebx-0x44d3eb6a],ah
  40cd51:	xchg   ecx,eax
  40cd52:	add    DWORD PTR [eax],edx
  40cd54:	enter  0xb56c,0x2b
  40cd58:	repnz cmp edx,DWORD PTR [edi+0x6b579523]
  40cd5f:	addr16 aam 0x3d
  40cd62:	(bad)  
  40cd63:	cmp    DWORD PTR [esi+0x78],esi
  40cd66:	add    eax,0xcc6008f6
  40cd6b:	enter  0xb08d,0x6d
  40cd6f:	sbb    DWORD PTR ds:0x3ec6340d,edi
  40cd75:	(bad)  
  40cd76:	ficomp WORD PTR [eax]
  40cd78:	mov    edi,0xf756acba
  40cd7d:	push   eax
  40cd7e:	ja     0x40cd73
  40cd80:	dec    ebp
  40cd81:	jb     0x40cda1
  40cd83:	fsubr  st,st(1)
  40cd85:	mov    ebp,0x6eba0944
  40cd8a:	cmp    eax,0xd2785625
  40cd8f:	and    al,0x54
  40cd91:	cmc    
  40cd92:	fsubr  QWORD PTR [ebp-0x5d]
  40cd95:	mov    edi,0x745e14c2
  40cd9a:	pusha  
  40cd9b:	(bad)  
  40cd9d:	mov    esi,0xc6d45c8b
  40cda2:	add    eax,0x80402dcc
  40cda7:	pop    ebx
  40cda8:	or     ah,bl
  40cdaa:	dec    eax
  40cdab:	mov    dl,0x8f
  40cdad:	push   ds
  40cdae:	arpl   ax,dx
  40cdb0:	dec    eax
  40cdb1:	ficom  WORD PTR [eiz*8+0x5525bcbd]
  40cdb8:	iret   
  40cdb9:	bound  edx,QWORD PTR [eax]
  40cdbb:	sbb    cl,BYTE PTR [ecx+0x1e]
  40cdbe:	je     0x40cd74
  40cdc0:	test   DWORD PTR [ebx],edx
  40cdc2:	out    dx,al
  40cdc3:	popa   
  40cdc4:	aad    0xe8
  40cdc6:	les    edi,FWORD PTR [eax]
  40cdc8:	leave  
  40cdc9:	leave  
  40cdca:	ret    
  40cdcb:	bound  esi,QWORD PTR [ebp+0x16]
  40cdce:	fs in  eax,dx
  40cdd0:	aam    0x4c
  40cdd2:	test   ebx,ecx
  40cdd4:	cmp    eax,0xb6462142
  40cdd9:	dec    esp
  40cdda:	dec    ebp
  40cddb:	xor    ah,BYTE PTR [ebp-0x24]
  40cdde:	fsub   QWORD PTR ds:0x4cd2f09c
  40cde4:	xchg   esi,eax
  40cde5:	cmp    al,0xc9
  40cde7:	les    ebx,FWORD PTR [esi]
  40cde9:	mov    ebx,eax
  40cdeb:	icebp  
  40cdec:	aam    0x8b
  40cdee:	(bad)  
  40cdef:	popf   
  40cdf0:	sar    DWORD PTR [edi+0x4f943b8b],cl
  40cdf6:	rcr    bh,cl
  40cdf8:	sbb    eax,0x92aa4ab0
  40cdfd:	mov    ebp,0xa7b45c0f
  40ce02:	mov    ch,0x80
  40ce04:	int3   
  40ce05:	test   eax,0xa2072ef2
  40ce0a:	out    dx,eax
  40ce0b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ce0c:	sbb    BYTE PTR [edx+0x4a],bl
  40ce0f:	(bad)  
  40ce10:	pop    eax
  40ce11:	addr16 mov ah,0x95
  40ce14:	aaa    
  40ce15:	ins    DWORD PTR es:[edi],dx
  40ce16:	xchg   ecx,eax
  40ce17:	jge    0x40ce16
  40ce19:	out    0xa6,al
  40ce1b:	xchg   esp,eax
  40ce1c:	adc    BYTE PTR [eax],0x48
  40ce1f:	push   cs
  40ce20:	add    BYTE PTR ds:0xb7de34be,al
  40ce26:	xchg   edi,eax
  40ce27:	adc    ebx,DWORD PTR [eax+0x5a]
  40ce2a:	(bad)  
  40ce2b:	cli    
  40ce2c:	adc    al,0xa5
  40ce2e:	sbb    dl,BYTE PTR es:[ecx-0x2e]
  40ce32:	and    BYTE PTR ds:0x6ab28491,cl
  40ce38:	aam    0x94
  40ce3a:	sti    
  40ce3b:	(bad)  
  40ce3c:	sti    
  40ce3d:	pop    eax
  40ce3e:	mov    al,dl
  40ce40:	sbb    al,0xa6
  40ce42:	pop    edx
  40ce43:	cs pop esi
  40ce45:	retf   0xde8b
  40ce48:	int    0x98
  40ce4a:	pusha  
  40ce4b:	fcomip st,st(3)
  40ce4d:	add    eax,0xf21c25f5
  40ce52:	mov    esi,0x997f0525
  40ce57:	jae    0x40ce07
  40ce59:	sbb    DWORD PTR [edx],edx
  40ce5b:	sub    al,0x17
  40ce5d:	add    esi,eax
  40ce5f:	test   BYTE PTR [ebx],dh
  40ce61:	dec    ebx
  40ce62:	sbb    cl,dh
  40ce64:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ce65:	imul   esp,DWORD PTR [edi+ecx*2-0x75],0xc4d5d2f8
  40ce6d:	jne    0x40ce6b
  40ce6f:	dec    esi
  40ce70:	stc    
  40ce71:	sbb    ecx,DWORD PTR [ebp+0x2fb467f7]
  40ce77:	dec    ebp
  40ce78:	(bad)  
  40ce7a:	lea    ebx,ss:[esi]
  40ce7d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ce7e:	lahf   
  40ce7f:	sub    BYTE PTR [edx],0xa5
  40ce82:	scas   eax,DWORD PTR es:[edi]
  40ce83:	dec    edi
  40ce84:	adc    BYTE PTR [esi+0x14],al
  40ce87:	(bad)  
  40ce88:	jmp    0x5ab00025
  40ce8d:	test   DWORD PTR ds:0xeab39c61,0x65b71618
  40ce97:	mov    DWORD PTR [ebp+eax*2+0x7e156f7],ebp
  40ce9e:	ins    BYTE PTR es:[edi],dx
  40ce9f:	clc    
  40cea0:	and    eax,0x1ac89316
  40cea5:	pop    esp
  40cea6:	stos   BYTE PTR es:[edi],al
  40cea7:	xchg   edi,eax
  40cea8:	cmp    BYTE PTR [ecx+0x7fa72a6],ch
  40ceae:	fstp   TBYTE PTR [ebx-0x65e2f201]
  40ceb4:	js     0x40cf1f
  40ceb6:	icebp  
  40ceb7:	mov    bl,0x73
  40ceb9:	mov    esi,0x3272ec
  40cebe:	jmp    0x40f242
  40cec3:	mov    cs:0xd0afdcaf,eax
  40cec9:	add    DWORD PTR [ebx+0x287882c5],eax
  40cecf:	clc    
  40ced0:	xor    al,0xb9
  40ced2:	cli    
  40ced3:	lods   eax,DWORD PTR ds:[esi]
  40ced4:	int    0x7a
  40ced6:	jp     0x40ceeb
  40ced8:	pop    edi
  40ced9:	jp     0x40cf55
  40cedb:	addr16 lahf 
  40cedd:	cmp    ch,bl
  40cedf:	sbb    BYTE PTR [ecx+0x40],dl
  40cee2:	inc    edi
  40cee3:	enter  0xb613,0xba
  40cee7:	inc    esp
  40cee8:	mov    ds:0xc0fc79a9,eax
  40ceed:	hlt    
  40ceee:	test   BYTE PTR [ebp+0x41ac0197],ah
  40cef4:	fld    TBYTE PTR [ebx]
  40cef6:	and    BYTE PTR [ebx-0x4218ade6],ah
  40cefc:	jecxz  0x40ced8
  40cefe:	imul   esi,ebp,0x6e299890
  40cf04:	xor    BYTE PTR [esi],bh
  40cf06:	and    DWORD PTR [esi],edx
  40cf08:	xor    BYTE PTR [ebx+0x25187ccd],al
  40cf0e:	mov    al,0xd8
  40cf10:	sub    BYTE PTR [ebx-0x7b037ac1],al
  40cf16:	sbb    eax,0x189942d7
  40cf1b:	outs   dx,BYTE PTR ds:[esi]
  40cf1c:	je     0x40cf6a
  40cf1e:	ret    
  40cf1f:	xor    ch,BYTE PTR [eax]
  40cf21:	jg     0x40ceeb
  40cf23:	inc    ebp
  40cf24:	(bad)
  40cf28:	xchg   edx,eax
  40cf29:	pop    ebp
  40cf2a:	jmp    0x4287:0x944ef95c
  40cf31:	lahf   
  40cf32:	scas   al,BYTE PTR es:[edi]
  40cf33:	ja     0x40cf1b
  40cf35:	adc    eax,DWORD PTR [ebp-0x1df698c1]
  40cf3b:	and    eax,DWORD PTR [eax]
  40cf3d:	xor    BYTE PTR [edx],ch
  40cf3f:	cmp    eax,0xbac65fc5
  40cf44:	loopne 0x40cf98
  40cf46:	and    BYTE PTR [eax-0x1ed4c6dc],al
  40cf4c:	retf   0xab26
  40cf4f:	loopne 0x40cf77
  40cf51:	push   0x7e5e8899
  40cf56:	inc    edx
  40cf57:	(bad)  
  40cf58:	fcomp  DWORD PTR [eax+0x532a3923]
  40cf5e:	and    DWORD PTR [eax+esi*2],edi
  40cf61:	adc    bh,BYTE PTR [ecx+eax*8+0x5c9877b7]
  40cf68:	(bad)  
  40cf69:	loope  0x40cf0a
  40cf6b:	imul   edi,DWORD PTR [edx],0x47d32a8
  40cf71:	clc    
  40cf72:	neg    BYTE PTR [edx+0x713373d4]
  40cf78:	sar    DWORD PTR [ecx-0x34ad1a4d],1
  40cf7e:	les    esp,FWORD PTR [edi+0x761a77d1]
  40cf84:	stos   BYTE PTR es:[edi],al
  40cf85:	scas   eax,DWORD PTR es:[edi]
  40cf86:	push   edi
  40cf87:	stos   BYTE PTR es:[edi],al
  40cf88:	add    al,0x8f
  40cf8a:	xor    DWORD PTR [edi+0x24],esp
  40cf8d:	xor    BYTE PTR [edi-0x62],cl
  40cf90:	dec    ebp
  40cf91:	stos   BYTE PTR es:[edi],al
  40cf92:	fwait
  40cf93:	daa    
  40cf94:	push   edi
  40cf95:	pop    esi
  40cf96:	adc    DWORD PTR [ecx],0xe213b38b
  40cf9c:	inc    esp
  40cf9d:	ins    DWORD PTR es:[edi],dx
  40cf9e:	or     al,0x8d
  40cfa0:	popa   
  40cfa1:	jmp    0x3b0:0xac8a6064
  40cfa8:	pop    ebx
  40cfa9:	adc    eax,0xc4ec7efa
  40cfae:	jg     0x40cfc2
  40cfb0:	or     al,0xd7
  40cfb2:	enter  0xa376,0x93
  40cfb6:	sbb    ebp,DWORD PTR [ecx]
  40cfb8:	xchg   edx,eax
  40cfb9:	js     0x40cf9a
  40cfbb:	inc    edi
  40cfbc:	fsubrp st(1),st
  40cfbe:	adc    BYTE PTR [edi-0x4d603fd0],dh
  40cfc4:	test   BYTE PTR [esi],0x23
  40cfc7:	inc    esp
  40cfc8:	adc    edi,DWORD PTR [edi-0x7d42bd64]
  40cfce:	rol    DWORD PTR [eax-0x29],0x43
  40cfd2:	inc    esp
  40cfd3:	test   eax,0x59c95a84
  40cfd8:	cmc    
  40cfd9:	mov    bl,0x5d
  40cfdb:	xchg   ebx,eax
  40cfdc:	mov    ebp,0xa0a0a6fc
  40cfe1:	mul    DWORD PTR [edi-0x64]
  40cfe4:	add    BYTE PTR ds:[eax+0x6d55256c],ah
  40cfeb:	mov    ds:0xea1284dd,eax
  40cff0:	mov    esp,0x66c475e5
  40cff5:	hlt    
  40cff6:	out    0x71,eax
  40cff8:	mov    esi,0x471c7bfd
  40cffd:	xchg   ebx,eax
  40cffe:	addr16 pop ebx
  40d000:	rcr    BYTE PTR [ecx+0x3f743f31],1
  40d006:	mov    dh,0x47
  40d008:	mov    WORD PTR [edx-0x2f],?
  40d00b:	xchg   DWORD PTR [edx+edx*1-0x70a4046f],esi
  40d012:	pop    edi
  40d013:	loope  0x40d057
  40d015:	add    BYTE PTR [bp-0x17],bl
  40d019:	sti    
  40d01a:	test   esp,ecx
  40d01c:	scas   eax,DWORD PTR es:[edi]
  40d01d:	(bad)  
  40d01e:	out    0x2c,eax
  40d020:	pushf  
  40d021:	sbb    ecx,DWORD PTR [ecx-0x3ce90d3f]
  40d027:	pop    edi
  40d028:	sbb    eax,0x9eb7c3e7
  40d02d:	pushf  
  40d02e:	cmc    
  40d02f:	retf   0xeccf
  40d032:	jmp    DWORD PTR [esi+eiz*1]
  40d035:	xchg   edx,eax
  40d036:	mov    BYTE PTR [ebx+0x19],bh
  40d039:	aam    0x89
  40d03b:	dec    esi
  40d03c:	int3   
  40d03d:	cwde   
  40d03e:	lods   al,BYTE PTR ds:[esi]
  40d03f:	mov    eax,0x582b60e2
  40d044:	(bad)  
  40d045:	ficom  DWORD PTR [edi+ebx*1-0x29d71019]
  40d04c:	fwait
  40d04d:	push   ebp
  40d04e:	enter  0xe354,0x5f
  40d052:	outs   dx,BYTE PTR ds:[esi]
  40d053:	jle    0x40d09a
  40d055:	outs   dx,DWORD PTR ds:[esi]
  40d056:	cmp    al,0xcd
  40d058:	mov    esp,0x34ac4d88
  40d05d:	xor    bh,al
  40d05f:	mov    bl,0xdb
  40d061:	lea    eax,[ecx+eax*8+0x21]
  40d065:	pop    ss
  40d066:	jl     0x40d01b
  40d068:	frstor [edi-0x43bcd277]
  40d06e:	and    BYTE PTR [ebx],dh
  40d070:	or     DWORD PTR [ebx-0x17],edx
  40d073:	daa    
  40d074:	pop    ds
  40d075:	pop    ds
  40d076:	mov    ch,BYTE PTR [ecx*1-0x43f75a0f]
  40d07d:	in     al,dx
  40d07e:	sbb    al,0xea
  40d080:	popa   
  40d081:	imul   esp,edi,0x8dc98033
  40d087:	arpl   WORD PTR [ecx+ecx*8-0x2f],bx
  40d08b:	xchg   esi,eax
  40d08c:	xor    DWORD PTR [ecx+0x52ecb7ee],ecx
  40d092:	ror    dl,cl
  40d094:	aad    0x98
  40d096:	cmp    BYTE PTR [ebp-0x4496af84],ch
  40d09c:	mov    eax,ds:0x92548b4
  40d0a1:	rcl    DWORD PTR [esi-0x55a46199],cl
  40d0a7:	ds ret 
  40d0a9:	sbb    DWORD PTR es:[esi-0x6d],ebx
  40d0ad:	and    BYTE PTR [ebx+0x41],0x5c
  40d0b1:	mov    edx,0xd16b5631
  40d0b6:	arpl   sp,sp
  40d0b8:	fwait
  40d0b9:	scas   al,BYTE PTR es:[edi]
  40d0ba:	int    0xb2
  40d0bc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d0bd:	mov    eax,0x8fd02afa
  40d0c2:	mov    dl,0xf6
  40d0c4:	fmulp  st(3),st
  40d0c6:	iret   
  40d0c7:	inc    ecx
  40d0c8:	retf   
  40d0c9:	pop    ebp
  40d0ca:	icebp  
  40d0cb:	jae    0x40d064
  40d0cd:	mov    edi,0x4825b12e
  40d0d2:	jo     0x40d0fe
  40d0d4:	popf   
  40d0d5:	jg     0x40d065
  40d0d7:	cs push ebp
  40d0d9:	adc    dh,dl
  40d0db:	call   0xa48efa95
  40d0e0:	add    bh,BYTE PTR [ecx-0x6a]
  40d0e3:	push   ebp
  40d0e4:	and    edi,DWORD PTR [edx-0x11]
  40d0e7:	arpl   WORD PTR [edx+0x5ed7204e],sp
  40d0ed:	faddp  st(6),st
  40d0ef:	ds test eax,0x2d63f507
  40d0f5:	into   
  40d0f6:	test   DWORD PTR [ecx],0x70ac0a3d
  40d0fc:	push   edx
  40d0fd:	psubd  mm5,QWORD PTR [ebx]
  40d100:	mov    eax,0xb48d15d9
  40d105:	test   eax,0x1052f9ff
  40d10a:	je     0x40d167
  40d10c:	pop    edi
  40d10d:	repz jp 0x40d100
  40d110:	inc    eax
  40d111:	jmp    0xcaacbf45
  40d116:	repz sub ebp,DWORD PTR [ebx+0x1c864655]
  40d11d:	cmp    ebx,DWORD PTR [eax-0x7f]
  40d120:	loope  0x40d0fe
  40d122:	outs   dx,BYTE PTR ds:[esi]
  40d123:	test   DWORD PTR [esi+eiz*2-0x39],ecx
  40d127:	push   esp
  40d128:	sub    ebx,DWORD PTR [edi]
  40d12a:	daa    
  40d12b:	test   esi,edi
  40d12d:	aam    0xac
  40d12f:	xor    edi,DWORD PTR [edi]
  40d131:	xor    BYTE PTR [edx-0x42],bl
  40d134:	xlat   BYTE PTR ds:[ebx]
  40d135:	ud2    
  40d137:	jl     0x40d0c1
  40d139:	dec    ecx
  40d13a:	out    0xa3,eax
  40d13c:	neg    DWORD PTR [ecx-0x45e28c2b]
  40d142:	jbe    0x40d186
  40d144:	fldcw  WORD PTR es:[esi]
  40d147:	dec    edi
  40d148:	out    0x88,al
  40d14a:	ja     0x40d1ba
  40d14c:	adc    BYTE PTR [esp+edx*8],dl
  40d14f:	mov    ebx,0x39a6e54a
  40d154:	xor    al,0xaa
  40d156:	dec    ebx
  40d157:	mov    eax,ds:0x72cc2387
  40d15c:	push   edi
  40d15d:	int    0x4e
  40d15f:	pop    ecx
  40d160:	push   eax
  40d161:	and    eax,0x99a0bf6b
  40d166:	fild   DWORD PTR gs:[ecx-0x76]
  40d16a:	mov    al,0x68
  40d16c:	popa   
  40d16d:	les    edi,FWORD PTR [ebx+0x2bf176e]
  40d173:	push   ebp
  40d174:	xchg   dh,dl
  40d176:	lods   al,BYTE PTR ds:[esi]
  40d177:	and    al,0xf3
  40d179:	out    0x8,eax
  40d17b:	xchg   esi,eax
  40d17c:	sub    eax,DWORD PTR [edx]
  40d17e:	fld    DWORD PTR [edi]
  40d180:	popa   
  40d181:	mov    ch,0x51
  40d183:	(bad)  
  40d184:	push   ds
  40d185:	imul   eax,DWORD PTR [edx],0x2b01ecd
  40d18b:	adc    al,0x3d
  40d18d:	jne    0x40d16b
  40d18f:	mov    al,ds:0xaec21c1e
  40d194:	xchg   edx,eax
  40d195:	outs   dx,DWORD PTR gs:[esi]
  40d197:	ficom  WORD PTR [ecx]
  40d199:	xlat   BYTE PTR ds:[ebx]
  40d19a:	aaa    
  40d19b:	ss mov ebx,0xbee1b59a
  40d1a1:	or     ch,BYTE PTR [ebp+0x1c99a007]
  40d1a7:	mov    eax,DWORD PTR [ebx]
  40d1a9:	pop    eax
  40d1aa:	pop    ds
  40d1ab:	imul   esi,DWORD PTR [ebx],0x27a67287
  40d1b1:	dec    edx
  40d1b2:	jp     0x40d15d
  40d1b4:	xor    ecx,esp
  40d1b6:	sub    eax,0x659ff10a
  40d1bb:	test   DWORD PTR [ebp-0x78533601],0xe1344310
  40d1c5:	dec    ebx
  40d1c6:	pop    ecx
  40d1c7:	adc    eax,0x7afc3eb9
  40d1cc:	mov    bh,0xf5
  40d1ce:	or     al,0xdc
  40d1d0:	and    eax,ebx
  40d1d2:	cs push ds
  40d1d4:	dec    esi
  40d1d5:	mov    ebx,0xc7db256e
  40d1da:	xchg   esp,eax
  40d1db:	xchg   esp,eax
  40d1dc:	or     eax,0xd84dd6e3
  40d1e1:	shr    BYTE PTR ds:0xeaa5fb88,0xa0
  40d1e8:	ret    0xf9f2
  40d1eb:	cmp    eax,0x564ceb00
  40d1f0:	jo     0x40d183
  40d1f2:	mov    ds:0xe53a530b,al
  40d1f7:	or     al,0x71
  40d1f9:	cdq    
  40d1fa:	fs out 0x53,eax
  40d1fd:	push   eax
  40d1fe:	mov    esi,0x9d5096cb
  40d203:	mov    eax,ds:0xa80827c1
  40d208:	repnz add eax,ebx
  40d20b:	push   0xffffff80
  40d20d:	cli    
  40d20e:	push   edi
  40d20f:	and    ebx,DWORD PTR [ebx]
  40d211:	mov    ebx,DWORD PTR [esp+edi*4+0x2a6ba493]
  40d218:	cli    
  40d219:	cli    
  40d21a:	push   ecx
  40d21b:	push   0xffffff9b
  40d21d:	fistp  DWORD PTR [ebx-0x17]
  40d220:	dec    ecx
  40d221:	popa   
  40d222:	mov    dh,0xb9
  40d224:	lock imul edi,DWORD PTR [ecx],0xbe93efc
  40d22b:	jmp    0x67375fbd
  40d230:	ss jne 0x40d1f7
  40d233:	jo     0x40d1c0
  40d235:	fwait
  40d236:	xchg   ebp,eax
  40d237:	pop    ebx
  40d238:	adc    eax,0x48e73733
  40d23d:	out    dx,eax
  40d23e:	(bad)  
  40d23f:	gs cmp eax,0xc56a0f7a
  40d245:	(bad)  
  40d246:	jb     0x40d22c
  40d248:	xor    BYTE PTR [ebx],ah
  40d24a:	sub    al,0xa3
  40d24c:	je     0x40d2ca
  40d24e:	enter  0xcb3d,0xa4
  40d252:	(bad)  
  40d253:	iret   
  40d254:	jmp    0xb5b4b2f
  40d259:	xor    al,0x44
  40d25b:	faddp  st(4),st
  40d25d:	push   esi
  40d25e:	aam    0xd5
  40d260:	mov    eax,ds:0x6f103846
  40d265:	lods   al,BYTE PTR ds:[esi]
  40d266:	inc    esi
  40d267:	mov    edi,ecx
  40d269:	xor    al,0x49
  40d26b:	mov    ch,0x99
  40d26d:	ins    BYTE PTR es:[edi],dx
  40d26e:	adc    eax,0x613a59d5
  40d273:	loope  0x40d213
  40d275:	pop    edi
  40d276:	cmc    
  40d277:	push   ss
  40d278:	jbe    0x40d275
  40d27a:	jg     0x40d2f0
  40d27c:	fisubr DWORD PTR [ecx-0x45]
  40d27f:	pop    ss
  40d280:	mov    esi,0x70670cf2
  40d285:	fisttp DWORD PTR [edx-0xeccae12]
  40d28b:	jnp    0x40d224
  40d28d:	js     0x40d30e
  40d28f:	shr    BYTE PTR [eax-0x41],0xfe
  40d293:	in     al,0x56
  40d295:	jb     0x40d2b8
  40d297:	in     al,dx
  40d298:	(bad)  
  40d29a:	mov    esi,0x284e83c9
  40d29f:	aam    0xb0
  40d2a1:	cmp    al,0x26
  40d2a3:	ins    DWORD PTR es:[edi],dx
  40d2a4:	ffreep st(3)
  40d2a6:	mov    al,ds:0xd5e5ea8a
  40d2ab:	(bad)  
  40d2ad:	cli    
  40d2ae:	jp     0x40d24b
  40d2b0:	push   cs
  40d2b1:	adc    esp,DWORD PTR [esi-0x564c6e8]
  40d2b7:	std    
  40d2b8:	loope  0x40d26c
  40d2ba:	loope  0x40d311
  40d2bc:	mov    ds:0x99b6c1f7,al
  40d2c1:	pop    es
  40d2c2:	in     al,0x58
  40d2c4:	hlt    
  40d2c5:	scas   al,BYTE PTR es:[edi]
  40d2c6:	mov    bl,BYTE PTR gs:[esi+0x5ca42a3c]
  40d2cd:	sub    edx,DWORD PTR [ecx-0x28fc4e52]
  40d2d3:	ret    0xad1f
  40d2d6:	jmp    0x40d323
  40d2d8:	ja     0x40d352
  40d2da:	outs   dx,DWORD PTR ds:[esi]
  40d2db:	sbb    DWORD PTR ds:0xfc9d8770,ebp
  40d2e1:	jg     0x40d32e
  40d2e3:	retf   0x206
  40d2e6:	mov    ecx,0x426bf8c4
  40d2eb:	clc    
  40d2ec:	xchg   al,cl
  40d2ee:	arpl   WORD PTR [ebp+0x49],bp
  40d2f1:	inc    esi
  40d2f2:	ds and ch,0xfa
  40d2f6:	ins    DWORD PTR es:[edi],dx
  40d2f7:	shl    BYTE PTR [eax-0x6791c85e],0xf8
  40d2fe:	mov    edx,0x44bc9122
  40d303:	add    DWORD PTR [eax],0xffffffb6
  40d306:	lods   eax,DWORD PTR ds:[esi]
  40d307:	mov    ah,0x61
  40d309:	out    dx,eax
  40d30a:	dec    esi
  40d30b:	js     0x40d377
  40d30d:	jb     0x40d34c
  40d30f:	and    ebp,0xffffffc8
  40d312:	call   0xaf4efe96
  40d317:	or     ebp,esp
  40d319:	inc    edx
  40d31a:	sar    ebx,0x10
  40d31d:	xchg   esi,eax
  40d31e:	jns    0x40d319
  40d320:	icebp  
  40d321:	jmp    0x40d2a9
  40d323:	fadd   st,st(3)
  40d325:	adc    al,0x34
  40d327:	cdq    
  40d328:	xchg   esp,eax
  40d329:	and    al,0xa9
  40d32b:	and    BYTE PTR ds:0x441b35a1,dl
  40d331:	mov    ?,edx
  40d333:	pushf  
  40d334:	(bad)  
  40d335:	(bad)  
  40d336:	les    ecx,FWORD PTR [edi+0x64]
  40d339:	nop
  40d33a:	inc    edx
  40d33b:	mov    esp,0x3c909fc4
  40d340:	idiv   dh
  40d342:	jmp    0x40d2fb
  40d344:	pop    ebp
  40d345:	push   ebp
  40d346:	sub    DWORD PTR [edx],esi
  40d348:	push   0xf07f0dd2
  40d34d:	stc    
  40d34e:	sub    edx,esp
  40d350:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d351:	jno    0x40d36d
  40d353:	mov    esp,0xbf0b1eb8
  40d358:	pop    ebx
  40d359:	jns    0x40d3ad
  40d35b:	mov    cl,0xb0
  40d35d:	sbb    al,0xd7
  40d35f:	pusha  
  40d360:	mov    eax,ds:0x88abcdf3
  40d365:	jno    0x40d351
  40d367:	fs daa 
  40d369:	stc    
  40d36a:	dec    ebp
  40d36b:	pop    edx
  40d36c:	popf   
  40d36d:	je     0x40d34a
  40d36f:	push   DWORD PTR [ebp-0x4c3fc3fa]
  40d375:	fbld   TBYTE PTR [esi+0x63a33ec5]
  40d37b:	ja     0x40d3d7
  40d37d:	(bad)  
  40d37e:	stc    
  40d37f:	pop    ds
  40d380:	xor    bl,al
  40d382:	cwde   
  40d383:	or     ebx,DWORD PTR [edx+0x4e7e4b92]
  40d389:	push   ebp
  40d38a:	add    eax,0xc15d40a1
  40d38f:	pushf  
  40d390:	mov    BYTE PTR [ecx+0xc],ah
  40d393:	sub    al,bl
  40d395:	add    ecx,DWORD PTR [eax+ecx*1-0x3e]
  40d399:	cmp    esp,DWORD PTR [eax]
  40d39b:	mov    dh,0xa4
  40d39d:	cmp    eax,0x35c904fe
  40d3a2:	cs cmp al,0x73
  40d3a5:	out    0x95,al
  40d3a7:	imul   edi,DWORD PTR [esi+eax*1],0x59
  40d3ab:	mov    BYTE PTR [eax-0x78],ah
  40d3ae:	aaa    
  40d3af:	mov    dl,0xd6
  40d3b1:	jecxz  0x40d3ea
  40d3b3:	(bad)  
  40d3b4:	push   ds
  40d3b5:	dec    edi
  40d3b6:	push   0x4fd693c1
  40d3bb:	push   esp
  40d3bc:	and    al,0xd2
  40d3bf:	xchg   ecx,eax
  40d3c0:	test   eax,0xf9658f0
  40d3c5:	out    dx,al
  40d3c6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d3c7:	in     eax,dx
  40d3c8:	mov    ebx,0xf86706f1
  40d3cd:	ins    DWORD PTR es:[edi],dx
  40d3ce:	jbe    0x40d3a6
  40d3d0:	mov    bl,0x7
  40d3d2:	fadd   DWORD PTR [ecx+0x3d]
  40d3d5:	mov    esp,0xfb075791
  40d3da:	jno    0x40d39c
  40d3dc:	jns    0x40d446
  40d3de:	sbb    BYTE PTR [edi+eax*1+0x30],bl
  40d3e2:	nop
  40d3e3:	mov    DWORD PTR [esi+0x22],ebx
  40d3e6:	adc    ah,BYTE PTR [eax]
  40d3e8:	pop    ds
  40d3e9:	das    
  40d3ea:	jg     0x40d38b
  40d3ec:	jl     0x40d3dd
  40d3ee:	rcr    esi,1
  40d3f0:	mov    dh,0x76
  40d3f2:	dec    ebp
  40d3f3:	fisubr WORD PTR [ebp+0x2b10bd3b]
  40d3f9:	scas   eax,DWORD PTR es:[edi]
  40d3fa:	and    esi,DWORD PTR [edx]
  40d3fc:	mov    ch,0xb4
  40d3fe:	add    al,0xfc
  40d400:	pop    ds
  40d401:	jg     0x40d467
  40d403:	pop    ebx
  40d404:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d405:	cmp    BYTE PTR [ebx+edx*8],bl
  40d408:	mov    es,WORD PTR [ebp-0x14]
  40d40b:	(bad)  
  40d40c:	cld    
  40d40d:	(bad)  
  40d40e:	daa    
  40d40f:	mov    al,0x6a
  40d411:	mov    BYTE PTR [edi-0x4d],0x89
  40d415:	sbb    BYTE PTR ds:0x58c826f8,0x54
  40d41c:	jmp    0x75a127b6
  40d421:	jle    0x40d3b4
  40d423:	jmp    0x25d2:0x3c706897
  40d42a:	imul   esi,DWORD PTR [edx+0xaa39e2d],0xffffffff
  40d431:	(bad)  
  40d432:	cmc    
  40d433:	icebp  
  40d434:	jns    0x40d490
  40d436:	push   ds
  40d437:	mov    eax,0x37c9750a
  40d43c:	repnz xor DWORD PTR [esi+0x69],0xffffff88
  40d441:	mov    WORD PTR [edi],es
  40d443:	sub    cl,dh
  40d445:	mov    al,BYTE PTR [edx]
  40d447:	outs   dx,DWORD PTR ds:[esi]
  40d448:	mov    bh,0x8d
  40d44a:	test   eax,0xe99c3e4d
  40d44f:	imul   eax,DWORD PTR [bx+si+0x1a8d],0x477f7521
  40d458:	jge    0x40d4b9
  40d45a:	xor    bh,ah
  40d45c:	push   ds
  40d45d:	dec    edx
  40d45e:	ins    DWORD PTR es:[edi],dx
  40d45f:	in     eax,0x27
  40d461:	inc    edx
  40d462:	pop    edi
  40d463:	push   0x1f31650a
  40d468:	mov    ecx,DWORD PTR [ebx-0x49184a50]
  40d46e:	push   es
  40d46f:	mov    ebx,DWORD PTR [ecx+eiz*4+0x5d]
  40d473:	jne    0x40d467
  40d475:	mov    es,WORD PTR [esi]
  40d477:	bound  esi,QWORD PTR [ebp+ebx*4+0x2f]
  40d47b:	data16 repz jmp 0x40d435
  40d47f:	xchg   edx,eax
  40d480:	pop    esp
  40d481:	dec    ebx
  40d482:	jge    0x40d4d3
  40d484:	push   cs
  40d485:	mov    ebp,0x3eed64fb
  40d48a:	shl    BYTE PTR [edx-0x7b],cl
  40d48d:	ins    BYTE PTR es:[edi],dx
  40d48e:	xor    al,0xaa
  40d490:	pop    ecx
  40d491:	fwait
  40d492:	jecxz  0x40d46d
  40d494:	xor    DWORD PTR es:[edi-0x4b74e8ea],ebx
  40d49b:	outs   dx,BYTE PTR ds:[esi]
  40d49c:	push   es
  40d49d:	call   DWORD PTR ds:0xdbccd1c2
  40d4a3:	repnz mov WORD PTR [ebx+0x79],ds
  40d4a7:	aas    
  40d4a8:	mov    al,ds:0xffa611da
  40d4ad:	repnz enter 0xfea4,0xe6
  40d4b2:	push   ebp
  40d4b3:	dec    eax
  40d4b4:	popf   
  40d4b5:	and    eax,0x51fc0efe
  40d4ba:	retf   0x21be
  40d4bd:	mov    esp,0xd54b1ecb
  40d4c2:	pop    esp
  40d4c3:	add    eax,DWORD PTR [edi+0x2075a228]
  40d4c9:	mov    ds:0x28271e42,al
  40d4ce:	lahf   
  40d4cf:	lods   al,BYTE PTR ds:[esi]
  40d4d0:	pop    eax
  40d4d1:	imul   eax,DWORD PTR [esi],0xf34da53c
  40d4d7:	les    ebp,FWORD PTR [ebx]
  40d4d9:	int3   
  40d4da:	xor    BYTE PTR [edx+ecx*1+0x78],dh
  40d4de:	fiadd  WORD PTR [ebx-0x7d964367]
  40d4e4:	sub    BYTE PTR [eax],ch
  40d4e6:	sub    BYTE PTR ds:0x32a8fb45,dh
  40d4ec:	sbb    eax,0x7b11bf14
  40d4f1:	jl     0x40d493
  40d4f3:	dec    esp
  40d4f4:	and    al,0xe
  40d4f6:	gs sub eax,0xafd57d5
  40d4fc:	data16 lahf 
  40d4fe:	or     DWORD PTR ss:[ebx+0x47a2150a],edx
  40d505:	test   eax,0xc9712895
  40d50a:	jo     0x40d50c
  40d50c:	mov    dl,0x4c
  40d50e:	bound  eax,QWORD PTR [ebx]
  40d510:	mov    ebx,0xe469f5a5
  40d515:	xor    DWORD PTR [edi-0x3a4cde6b],edi
  40d51b:	or     edx,DWORD PTR [esi]
  40d51d:	int    0x25
  40d51f:	adc    al,0x14
  40d521:	fstp   QWORD PTR [eax+0x18]
  40d524:	push   esi
  40d525:	leave  
  40d526:	rol    DWORD PTR [ebx-0x6a9da668],1
  40d52c:	jp     0x40d546
  40d52e:	xchg   ebx,eax
  40d52f:	test   eax,0x43921aa6
  40d534:	xchg   BYTE PTR [eax+0x190225ae],ah
  40d53a:	pop    ds
  40d53b:	cmovnp ebx,DWORD PTR [eax+0x3f6cb5bf]
  40d542:	rcr    DWORD PTR [esi+ebp*1-0x3c],cl
  40d546:	and    BYTE PTR [eax-0x17],dl
  40d549:	stos   BYTE PTR es:[edi],al
  40d54a:	dec    edx
  40d54b:	fs hlt 
  40d54d:	push   0x21
  40d54f:	xchg   edx,eax
  40d550:	mov    WORD PTR [eax],es
  40d552:	in     eax,dx
  40d553:	inc    esi
  40d554:	sub    eax,edi
  40d556:	hlt    
  40d557:	push   esp
  40d558:	xchg   edx,eax
  40d559:	imul   eax,DWORD PTR [ecx-0x1f],0x79d961a0
  40d560:	lods   al,BYTE PTR ds:[esi]
  40d561:	adc    ebx,eax
  40d563:	mov    dl,0x50
  40d565:	xchg   edi,eax
  40d566:	sahf   
  40d567:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d568:	dec    esp
  40d569:	not    ecx
  40d56b:	jo     0x40d4ed
  40d56d:	shl    BYTE PTR [edi+0x63],1
  40d570:	dec    ebp
  40d571:	jge    0x40d59c
  40d573:	push   edi
  40d574:	or     esp,DWORD PTR [esi-0x2d]
  40d577:	cld    
  40d578:	cwde   
  40d579:	sahf   
  40d57a:	(bad)  
  40d57b:	and    eax,0x3c1b7313
  40d580:	mov    dl,0x86
  40d582:	cmp    bh,BYTE PTR [ecx+0x148bb297]
  40d588:	adc    cl,bh
  40d58a:	int3   
  40d58b:	mov    ah,0xa5
  40d58d:	loop   0x40d5a1
  40d58f:	mov    dl,0x61
  40d591:	xor    WORD PTR [edx-0x52],0xfff5
  40d596:	ja     0x40d534
  40d598:	lods   al,BYTE PTR ds:[esi]
  40d599:	jecxz  0x40d57a
  40d59b:	repnz sub DWORD PTR [bx+di],ebx
  40d59f:	xchg   ebx,eax
  40d5a0:	(bad)  
  40d5a1:	enter  0x320f,0x82
  40d5a5:	sub    al,0x94
  40d5a7:	dec    ebx
  40d5a8:	out    0xf0,eax
  40d5aa:	dec    ebx
  40d5ab:	adc    DWORD PTR [eax-0x4e],esp
  40d5ae:	jne    0x40d566
  40d5b0:	adc    bl,BYTE PTR [esi+0x5cd51a6]
  40d5b6:	loopne 0x40d5fa
  40d5b8:	mov    eax,ds:0xb6fbfc89
  40d5bd:	arpl   WORD PTR ds:0xfaa37d91,bx
  40d5c3:	inc    ebx
  40d5c4:	xchg   edi,eax
  40d5c5:	outs   dx,DWORD PTR ds:[esi]
  40d5c6:	mov    eax,ds:0x655f35b5
  40d5cb:	pop    es
  40d5cc:	data16 clc 
  40d5ce:	(bad)  
  40d5d2:	mov    es,WORD PTR [ebp+0xc9b2746]
  40d5d8:	push   es
  40d5d9:	cmp    al,dh
  40d5db:	pop    ebx
  40d5dc:	daa    
  40d5dd:	jo     0x40d632
  40d5df:	out    dx,eax
  40d5e0:	mov    al,0xcc
  40d5e2:	rcl    BYTE PTR [esi+ecx*2-0x32d200d8],cl
  40d5e9:	ja     0x40d5e5
  40d5eb:	or     al,0x31
  40d5ed:	sahf   
  40d5ee:	pusha  
  40d5ef:	(bad)  
  40d5f0:	and    al,0x84
  40d5f2:	lock into 
  40d5f4:	out    dx,al
  40d5f5:	pop    ebx
  40d5f6:	lea    esp,[edx-0x113cb52c]
  40d5fc:	xchg   ecx,eax
  40d5fd:	push   ss
  40d5fe:	jbe    0x40d5e8
  40d600:	scas   al,BYTE PTR es:[edi]
  40d601:	add    BYTE PTR [ebp+eiz*4-0x33],dh
  40d605:	sub    esi,DWORD PTR [esi-0x6]
  40d608:	xchg   esp,eax
  40d609:	fwait
  40d60a:	(bad)  
  40d60b:	xchg   esp,eax
  40d60c:	mov    ecx,0xd9340dc5
  40d611:	xchg   ecx,eax
  40d612:	mov    ecx,0x20d4b8c6
  40d617:	ror    DWORD PTR [edi-0x20],0xb2
  40d61b:	and    ch,bh
  40d61d:	sti    
  40d61e:	mov    dl,0xc5
  40d620:	xchg   ebx,eax
  40d621:	push   ss
  40d622:	pop    ebx
  40d623:	cmp    al,0x3d
  40d625:	dec    esp
  40d626:	fwait
  40d627:	jae    0x40d641
  40d629:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d62a:	inc    ebx
  40d62b:	aaa    
  40d62c:	inc    ebx
  40d62d:	sti    
  40d62e:	mov    cs,WORD PTR [ebx+edi*1-0x114e333e]
  40d635:	add    edx,DWORD PTR [edx+0x59]
  40d638:	call   0x99fc84bd
  40d63d:	mov    eax,0xd2325277
  40d642:	xor    BYTE PTR [ebx-0x44],dh
  40d645:	ins    DWORD PTR es:[edi],dx
  40d646:	lock cmp ebp,DWORD PTR [edi+0x7b0b53d0]
  40d64d:	push   ecx
  40d64e:	pop    edi
  40d64f:	mov    bh,0x1d
  40d651:	fisubr DWORD PTR [ecx+0x71]
  40d654:	cmp    ch,BYTE PTR [ecx+ecx*4]
  40d657:	xchg   esi,eax
  40d658:	mov    eax,0x7eb1a94d
  40d65d:	lds    ecx,FWORD PTR [ebp+0x5797c282]
  40d663:	cmp    DWORD PTR [ebx-0x4ea04106],eax
  40d669:	fcomp  DWORD PTR [esi+0x4b]
  40d66c:	and    esi,edi
  40d66e:	in     al,dx
  40d66f:	arpl   si,cx
  40d671:	cmc    
  40d672:	inc    edi
  40d673:	or     ebx,eax
  40d675:	or     esp,DWORD PTR [ebp+0x3]
  40d678:	add    BYTE PTR [ebx+0x10],cl
  40d67b:	ja     0x40d69f
  40d67d:	in     al,0xc
  40d67f:	or     dh,BYTE PTR [esi+0x3cb993f3]
  40d685:	in     al,dx
  40d686:	gs in  eax,0x83
  40d689:	push   es
  40d68a:	mov    ah,0x94
  40d68c:	jo     0x40d676
  40d68e:	sbb    ebx,DWORD PTR [eax+ebx*8+0x4c]
  40d692:	movhps QWORD PTR [ebp+0x4a1eed38],xmm5
  40d699:	inc    ecx
  40d69a:	fnstsw WORD PTR [edi]
  40d69c:	loope  0x40d6d0
  40d69e:	(bad)  
  40d69f:	cld    
  40d6a0:	push   ebp
  40d6a1:	or     eax,0x829bcc6e
  40d6a6:	out    0x69,al
  40d6a8:	push   0xaac2080
  40d6ad:	pop    edx
  40d6ae:	and    ch,BYTE PTR [ecx]
  40d6b0:	xchg   DWORD PTR [edx],ebx
  40d6b2:	jmp    0x40d66b
  40d6b4:	cmp    esp,ebx
  40d6b6:	in     eax,dx
  40d6b7:	pop    ss
  40d6b8:	leave  
  40d6b9:	xchg   ecx,eax
  40d6ba:	fwait
  40d6bb:	push   ss
  40d6bc:	cmp    eax,0xe4e684bf
  40d6c1:	neg    DWORD PTR [ebx]
  40d6c3:	cmp    ebp,esp
  40d6c5:	out    dx,eax
  40d6c6:	and    bh,BYTE PTR [edx+0x5]
  40d6c9:	hlt    
  40d6ca:	out    0x48,al
  40d6cc:	xchg   esi,eax
  40d6cd:	aam    0xae
  40d6cf:	imul   ebx,DWORD PTR [ecx+0x27],0x54743cbb
  40d6d6:	pop    edi
  40d6d7:	or     BYTE PTR [ecx-0x4f8ef094],cl
  40d6dd:	mov    al,0x15
  40d6df:	call   0xdcbd:0xe20072ad
  40d6e6:	jp     0x40d716
  40d6e8:	or     ebp,DWORD PTR [ebp+eax*1+0x1]
  40d6ec:	into   
  40d6ed:	mov    esp,0xb2da00c3
  40d6f2:	cmc    
  40d6f3:	mov    eax,ds:0x3c0cf278
  40d6f8:	pushf  
  40d6f9:	inc    esi
  40d6fa:	mov    eax,0x84a82d7c
  40d6ff:	sub    cl,ch
  40d701:	or     BYTE PTR [esi],dl
  40d703:	pop    ss
  40d704:	stos   DWORD PTR es:[edi],eax
  40d705:	or     al,0xaf
  40d707:	stc    
  40d708:	fisttp QWORD PTR [edx+0x53cddaa3]
  40d70e:	xor    dh,dl
  40d710:	int    0x51
  40d712:	mov    dl,0x93
  40d714:	out    0xff,eax
  40d716:	hlt    
  40d717:	mov    ecx,0xbeeef6fa
  40d71c:	and    eax,0x877f545
  40d721:	ror    DWORD PTR [edi-0x73],cl
  40d724:	cmp    BYTE PTR [eax-0x600c6f77],0x65
  40d72b:	or     BYTE PTR [esi],dh
  40d72d:	scas   eax,DWORD PTR es:[edi]
  40d72e:	and    eax,0xa06142b3
  40d733:	into   
  40d734:	loope  0x40d70b
  40d736:	cmp    cl,bl
  40d738:	jmp    FWORD PTR [edx+0x33]
  40d73b:	cmp    al,0x8c
  40d73d:	pop    esp
  40d73e:	push   ecx
  40d73f:	scas   al,BYTE PTR es:[edi]
  40d740:	pop    ebp
  40d741:	jno    0x40d75a
  40d743:	mov    ecx,0x9c7e644e
  40d748:	sahf   
  40d749:	adc    ebp,DWORD PTR [ecx+ebp*4-0x22a8fb1c]
  40d750:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d751:	mov    edx,0x3bc0cc79
  40d756:	xlat   BYTE PTR ds:[ebx]
  40d757:	mov    ebp,DWORD PTR [edi-0xe]
  40d75a:	gs inc esp
  40d75c:	sbb    cl,BYTE PTR [edx+0x66]
  40d75f:	push   cs
  40d760:	mov    DWORD PTR [edx-0x7b],ebx
  40d763:	(bad)  
  40d764:	(bad)  
  40d765:	outs   dx,DWORD PTR ds:[esi]
  40d766:	and    al,0xa
  40d768:	ins    DWORD PTR es:[edi],dx
  40d769:	fdivrp st(0),st
  40d76b:	(bad)  
  40d76c:	repz enter 0xfc04,0x3a
  40d771:	mov    ch,BYTE PTR [ebx+ecx*1+0xa878200]
  40d778:	add    DWORD PTR [esi-0x77dab2c7],edx
  40d77e:	int    0x41
  40d780:	dec    edi
  40d781:	fiadd  DWORD PTR [ecx-0x59]
  40d784:	lods   eax,DWORD PTR ds:[esi]
  40d785:	or     al,0xe3
  40d787:	sbb    ch,BYTE PTR [edi-0x32]
  40d78a:	fild   DWORD PTR [edi]
  40d78c:	lds    ebx,FWORD PTR [eax+0x10]
  40d78f:	dec    BYTE PTR [edx+0x55cada60]
  40d795:	sbb    BYTE PTR [ebx-0x7d42ec2],0xc4
  40d79c:	rcr    BYTE PTR [ebp+0x4cb969aa],1
  40d7a2:	stos   BYTE PTR es:[edi],al
  40d7a3:	sbb    DWORD PTR [esi+ebx*8-0x42],esp
  40d7a7:	in     al,0x84
  40d7a9:	push   edi
  40d7aa:	push   cs
  40d7ab:	mov    WORD PTR [edx+0x15],?
  40d7ae:	mov    bl,0x79
  40d7b0:	call   0x9af3:0xcb65803b
  40d7b7:	inc    edi
  40d7b8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d7b9:	test   al,0x9
  40d7bb:	data16 add BYTE PTR [eax],ch
  40d7be:	icebp  
  40d7bf:	and    DWORD PTR [ecx],edi
  40d7c1:	mov    ah,0x34
  40d7c3:	sub    al,0x50
  40d7c5:	cmp    DWORD PTR [edx-0x25],ebp
  40d7c8:	dec    ecx
  40d7c9:	loopne 0x40d7c1
  40d7cb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d7cc:	mov    DWORD PTR [eax],0xf0108915
  40d7d2:	adc    al,0x82
  40d7d4:	xchg   edi,eax
  40d7d5:	inc    ebx
  40d7d6:	lods   eax,DWORD PTR ds:[esi]
  40d7d7:	add    DWORD PTR ds:0x54ecb1da,eax
  40d7dd:	jmp    0xeac0:0xa6571324
  40d7e4:	sbb    BYTE PTR [ebx+0x6ead4204],ch
  40d7ea:	xchg   BYTE PTR [edx+eax*1],dh
  40d7ed:	jmp    0xa03ed120
  40d7f2:	test   eax,0x486df179
  40d7f7:	sub    eax,0x73e79e00
  40d7fc:	dec    esp
  40d7fd:	scas   al,BYTE PTR es:[edi]
  40d7fe:	and    eax,ecx
  40d800:	sahf   
  40d801:	dec    eax
  40d802:	not    BYTE PTR [ebp-0x79]
  40d805:	xchg   DWORD PTR [esi],ebx
  40d807:	sub    eax,0xbf2f83e5
  40d80c:	mov    edi,0xe75be135
  40d811:	int    0xe3
  40d813:	in     eax,dx
  40d814:	adc    eax,0x48eff266
  40d819:	sub    BYTE PTR [edi-0x5d],bh
  40d81c:	pop    edi
  40d81d:	pusha  
  40d81e:	add    BYTE PTR [ebp+eax*4-0x5a711bbd],ah
  40d825:	adc    al,0x8d
  40d827:	sbb    eax,0xc530d46c
  40d82c:	pop    edx
  40d82d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d82e:	aad    0xac
  40d830:	mov    esi,DWORD PTR [edx-0x1d]
  40d833:	fld    DWORD PTR [esi+0x65]
  40d836:	div    dl
  40d838:	retf   0x8e30
  40d83b:	inc    ebx
  40d83c:	aas    
  40d83d:	aas    
  40d83e:	push   cs
  40d83f:	xlat   BYTE PTR ds:[ebx]
  40d840:	pop    es
  40d841:	jg     0x40d7c9
  40d843:	inc    ebp
  40d844:	mov    BYTE PTR [esi+edi*8],al
  40d847:	out    0x75,al
  40d849:	sub    eax,0x9609d9b
  40d84e:	retf   
  40d84f:	jg     0x40d7db
  40d851:	pop    eax
  40d852:	or     eax,0x441e0ce1
  40d857:	jo     0x40d860
  40d859:	sub    BYTE PTR ds:0x92a05622,ch
  40d85f:	or     BYTE PTR [edi+0x70e2dcbc],bh
  40d865:	test   al,0x65
  40d867:	inc    edi
  40d868:	pop    es
  40d869:	hlt    
  40d86a:	mov    al,0xe6
  40d86c:	jb     0x40d872
  40d86e:	enter  0x8601,0x3d
  40d872:	icebp  
  40d873:	pusha  
  40d874:	and    al,0xec
  40d876:	pop    es
  40d877:	rol    BYTE PTR [edx-0x24],cl
  40d87a:	pop    ecx
  40d87b:	sbb    eax,0x23809ccd
  40d880:	imul   edi,DWORD PTR [edi-0x23],0x5835215c
  40d887:	popf   
  40d888:	xchg   esp,eax
  40d889:	xlat   BYTE PTR ds:[ebx]
  40d88b:	lds    edx,FWORD PTR [ecx]
  40d88d:	imul   eax,DWORD PTR [edi+0x3c3c5f0e],0x2c57a80e
  40d897:	cmc    
  40d898:	jecxz  0x40d885
  40d89a:	out    dx,eax
  40d89b:	adc    DWORD PTR [esi+eax*2+0x4511970d],esp
  40d8a2:	mov    esi,0xb98516c0
  40d8a7:	div    bh
  40d8a9:	(bad)  
  40d8aa:	jmp    0x120e:0xc0cacf95
  40d8b1:	fcomp  DWORD PTR [ecx]
  40d8b3:	push   eax
  40d8b4:	pop    esi
  40d8b5:	xchg   ah,bh
  40d8b7:	pop    esi
  40d8b8:	je     0x40d879
  40d8ba:	sub    bh,dh
  40d8bc:	push   ss
  40d8bd:	in     eax,0x7a
  40d8bf:	leave  
  40d8c0:	loop   0x40d905
  40d8c2:	mov    dh,0xef
  40d8c4:	and    DWORD PTR [eax+esi*8-0x36],0xcd0f80e5
  40d8cc:	dec    ebp
  40d8cd:	sub    eax,edi
  40d8cf:	dec    ecx
  40d8d0:	(bad)  
  40d8d1:	das    
  40d8d2:	mov    esp,0x2fe69408
  40d8d7:	in     eax,dx
  40d8d8:	mov    BYTE PTR [edi+0x79],al
  40d8db:	sar    BYTE PTR [edi-0x6abb13c6],1
  40d8e1:	aad    0x1c
  40d8e3:	mov    fs,WORD PTR [esi]
  40d8e5:	mov    gs,esi
  40d8e7:	inc    ecx
  40d8e8:	and    cl,BYTE PTR [edx+0x44]
  40d8eb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d8ec:	fs adc eax,0x2b897208
  40d8f2:	inc    ebp
  40d8f3:	sbb    eax,0xa2c55dbc
  40d8f8:	jns    0x40d8aa
  40d8fa:	std    
  40d8fb:	mov    edx,0x9a92b410
  40d900:	mov    ebp,0x7bb1b4a2
  40d905:	test   al,0xbc
  40d907:	dec    edi
  40d908:	fwait
  40d909:	jno    0x40d948
  40d90b:	xor    al,0x79
  40d90d:	std    
  40d90e:	jmp    FWORD PTR [ebp-0x34f485f1]
  40d914:	mov    bh,0x85
  40d916:	jns    0x40d8c8
  40d918:	mov    ah,BYTE PTR [ecx+0x37]
  40d91b:	sub    eax,DWORD PTR [edi+0x4ead89bf]
  40d921:	xchg   edi,eax
  40d922:	jns    0x40d8ab
  40d924:	ret    0xef4e
  40d927:	jno    0x40d98e
  40d929:	fcmovu st,st(3)
  40d92b:	in     al,dx
  40d92c:	cli    
  40d92d:	sub    bh,BYTE PTR [ebp+ecx*1+0x1dfc162c]
  40d934:	jle    0x40d90b
  40d936:	out    0x0,al
  40d938:	xchg   dh,dl
  40d93a:	fmul   QWORD PTR [edx]
  40d93c:	push   DWORD PTR ds:0xbf5e6a33
  40d942:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d943:	and    esi,DWORD PTR [edi]
  40d945:	xor    al,0x6c
  40d947:	dec    ebp
  40d948:	fs xchg esi,eax
  40d94a:	cmp    cl,dh
  40d94c:	lds    esp,FWORD PTR ss:[ebx]
  40d94f:	enter  0xe38f,0xdc
  40d953:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d954:	xor    DWORD PTR [ecx+eax*4-0x5e],esi
  40d958:	aas    
  40d959:	or     bh,0xdb
  40d95c:	imul   ebp,esi,0x20462a65
  40d962:	mov    eax,0x52ee1277
  40d967:	out    0x9c,eax
  40d969:	adc    ebp,DWORD PTR [edi]
  40d96b:	das    
  40d96c:	call   0x94735db8
  40d971:	push   0xad0a828f
  40d976:	cmp    DWORD PTR [eax+0x6ec5aef5],ebp
  40d97c:	sbb    al,0x26
  40d97e:	daa    
  40d97f:	xor    DWORD PTR [eax-0x674c0e08],ebp
  40d985:	mov    dl,0x10
  40d987:	ret    
  40d988:	adc    BYTE PTR [ebp+0x3d],al
  40d98b:	sbb    DWORD PTR [esi],ecx
  40d98d:	push   ss
  40d98e:	xchg   esp,eax
  40d98f:	sub    al,0x2a
  40d992:	pop    es
  40d993:	dec    ecx
  40d994:	dec    edx
  40d995:	aaa    
  40d996:	gs mov ebx,0x216bb38f
  40d99c:	add    eax,0xdd8c09f3
  40d9a1:	std    
  40d9a2:	push   cs
  40d9a3:	inc    esi
  40d9a4:	out    dx,eax
  40d9a5:	add    al,0xbc
  40d9a7:	rcl    DWORD PTR [edi+0x62],1
  40d9aa:	cmp    ch,al
  40d9ac:	dec    edi
  40d9ad:	js     0x40d96f
  40d9af:	cmp    BYTE PTR [edi-0x58fa8540],bl
  40d9b5:	xchg   ecx,eax
  40d9b6:	ficomp WORD PTR [ecx-0x58263533]
  40d9bc:	mov    edi,0x71a208a7
  40d9c1:	mov    ds:0x54794e20,al
  40d9c6:	mov    cl,0x24
  40d9c8:	shl    DWORD PTR [ecx],0x31
  40d9cb:	pop    edi
  40d9cc:	fadd   DWORD PTR [esi]
  40d9ce:	xchg   ebx,eax
  40d9cf:	mov    edx,0x67f77c21
  40d9d4:	out    dx,eax
  40d9d5:	inc    esi
  40d9d6:	repnz imul edx,DWORD PTR [esi+0x45],0x92a084c3
  40d9de:	jns    0x40da3e
  40d9e0:	xchg   DWORD PTR [edx+0xbab57be],esi
  40d9e6:	shl    DWORD PTR [esi+0x48],0x13
  40d9ea:	dec    esi
  40d9eb:	xor    DWORD PTR [ecx-0x72],edi
  40d9ee:	shr    DWORD PTR ds:0xb05d4082,0xa
  40d9f5:	stos   DWORD PTR es:[edi],eax
  40d9f6:	dec    esi
  40d9f7:	or     ecx,DWORD PTR [ebx-0x22]
  40d9fa:	enter  0x748e,0x37
  40d9fe:	sbb    ecx,DWORD PTR [edx-0x57]
  40da01:	scas   al,BYTE PTR es:[edi]
  40da02:	sbb    al,BYTE PTR [ebx-0x3f40f429]
  40da08:	das    
  40da09:	(bad)  
  40da0a:	loopne 0x40da48
  40da0c:	jp     0x40da52
  40da0e:	jae    0x40d9dc
  40da10:	das    
  40da11:	imul   edi
  40da13:	sbb    edi,eax
  40da15:	ret    0x1561
  40da18:	call   0xde08:0xd0f8bd96
  40da1f:	ins    DWORD PTR es:[edi],dx
  40da20:	xor    al,0xc4
  40da22:	test   eax,0xe3b6c8bf
  40da27:	push   esp
  40da28:	bts    DWORD PTR [ebp-0x5cd9e36c],ebx
  40da2f:	das    
  40da30:	stc    
  40da31:	dec    edi
  40da32:	test   BYTE PTR [edi],0x6d
  40da35:	mov    cl,0xe4
  40da37:	retf   
  40da38:	xchg   esp,eax
  40da39:	repnz test BYTE PTR [eax],dl
  40da3c:	fst    st(4)
  40da3e:	mov    eax,0xa8bbb78f
  40da43:	out    0x38,eax
  40da45:	inc    edx
  40da46:	loope  0x40da16
  40da48:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40da49:	(bad)  
  40da4a:	push   ebx
  40da4b:	pop    ss
  40da4c:	or     bh,BYTE PTR [edi+0x6d3101a7]
  40da52:	inc    ecx
  40da53:	fwait
  40da54:	ja     0x40da10
  40da56:	sbb    al,0xc2
  40da58:	fcmovnu st,st(0)
  40da5a:	pop    es
  40da5b:	lahf   
  40da5c:	push   ebx
  40da5d:	out    dx,al
  40da5e:	(bad)
  40da61:	out    0xf,eax
  40da63:	mov    DWORD PTR [edi],esp
  40da65:	mov    ds:0x2222348c,al
  40da6a:	aad    0x84
  40da6c:	out    dx,eax
  40da6d:	adc    al,0x23
  40da6f:	mov    ch,BYTE PTR [edi]
  40da71:	std    
  40da72:	push   ebp
  40da73:	mov    dh,0x93
  40da75:	jge    0x40da81
  40da77:	and    bl,BYTE PTR [ebx+0x1b21a92]
  40da7d:	lahf   
  40da7e:	call   0x8db6f1b6
  40da83:	inc    edi
  40da84:	icebp  
  40da85:	test   eax,0x6191ab70
  40da8a:	pop    ecx
  40da8b:	cwde   
  40da8c:	lahf   
  40da8d:	xchg   DWORD PTR [ecx-0x424094a9],esp
  40da93:	lods   al,BYTE PTR ds:[esi]
  40da94:	sbb    esi,DWORD PTR [eax-0x4989d24f]
  40da9a:	push   es
  40da9b:	jae    0x40da26
  40da9d:	retf   0x537
  40daa0:	rol    dl,1
  40daa2:	lods   eax,DWORD PTR ds:[esi]
  40daa3:	jmp    DWORD PTR [ebp+0x17]
  40daa6:	sub    edx,edi
  40daa8:	fidiv  DWORD PTR [edi+0x29]
  40daab:	hlt    
  40daac:	mov    edx,0x66f31898
  40dab1:	jo     0x40da5c
  40dab3:	pushf  
  40dab4:	pop    esi
  40dab5:	(bad)  
  40dab6:	xchg   ecx,eax
  40dab7:	aad    0x6e
  40dab9:	push   ebp
  40daba:	test   BYTE PTR [eax+eiz*1+0x2e],bl
  40dabe:	cs adc eax,0xed72a682
  40dac4:	xchg   dl,ah
  40dac6:	cmp    BYTE PTR [edx+0x1ce53e1d],0xa8
  40dacd:	mul    DWORD PTR [edx-0x16a99d4b]
  40dad3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40dad4:	fstp   QWORD PTR [ebx+edi*2]
  40dad7:	mov    ebp,0xbb415c5f
  40dadc:	fsubr  DWORD PTR [eax+0x20]
  40dadf:	xor    eax,0xd4e7efe5
  40dae4:	or     BYTE PTR [ebx-0x7d54de9b],ah
  40daea:	xchg   ebp,eax
  40daeb:	test   esi,ecx
  40daed:	mov    dh,0xab
  40daef:	inc    esi
  40daf0:	jo     0x40db6d
  40daf2:	push   edi
  40daf3:	popa   
  40daf4:	lahf   
  40daf5:	jo     0x40daaf
  40daf7:	push   ecx
  40daf8:	vaddpd ymm0,ymm0,ymm2
  40dafc:	dec    ecx
  40dafd:	test   BYTE PTR [ebx+0x415bda26],dl
  40db03:	(bad)  
  40db04:	xor    ch,0xb
  40db07:	dec    esi
  40db08:	jge    0x40db37
  40db0a:	icebp  
  40db0b:	mov    ch,0xe2
  40db0d:	push   edi
  40db0e:	frndint 
  40db10:	mov    ds:0xcce8f5c7,eax
  40db15:	or     esi,DWORD PTR [eax+0x56]
  40db18:	loope  0x40db5f
  40db1a:	and    eax,0xa58ede87
  40db1f:	(bad)  
  40db20:	xlat   BYTE PTR ds:[ebx]
  40db21:	(bad)  
  40db22:	fidivr WORD PTR [esi-0x4ffdb7c9]
  40db28:	loope  0x40db37
  40db2a:	lea    esi,[ecx]
  40db2c:	mov    esp,0x39d7849c
  40db31:	bound  edx,QWORD PTR [ebx]
  40db33:	jmp    0xf2c9495b
  40db38:	jbe    0x40db4b
  40db3a:	shl    ah,1
  40db3c:	hlt    
  40db3d:	mov    eax,ds:0x5abf36ba
  40db42:	(bad)  
  40db43:	xchg   edx,eax
  40db44:	(bad)  [ebp-0x7c]
  40db47:	pop    es
  40db48:	jns    0x40dbaf
  40db4a:	jnp    0x40dbca
  40db4c:	jne    0x40dbc5
  40db4e:	test   DWORD PTR [ecx-0x3a],eax
  40db51:	pop    ds
  40db52:	popf   
  40db53:	rcl    BYTE PTR [ecx+0x1f7be933],1
  40db59:	in     eax,0x57
  40db5b:	lds    esi,FWORD PTR [edx+0x1b]
  40db5e:	into   
  40db5f:	psubusw mm2,QWORD PTR [edi]
  40db62:	int3   
  40db63:	cmc    
  40db64:	out    dx,eax
  40db65:	pushf  
  40db66:	pop    ecx
  40db67:	outs   dx,DWORD PTR ds:[esi]
  40db68:	les    ebx,FWORD PTR [esi+ebp*8-0x6f]
  40db6c:	lea    ecx,[ebx+ebx*1+0x75]
  40db70:	gs fucompp 
  40db73:	adc    al,0x8b
  40db75:	mov    al,ds:0x47246452
  40db7a:	in     al,dx
  40db7b:	rcr    BYTE PTR [edi-0x7151b800],cl
  40db81:	sahf   
  40db82:	(bad)  
  40db83:	push   edi
  40db84:	mov    al,0xd1
  40db86:	dec    edx
  40db87:	pop    ebp
  40db88:	inc    ecx
  40db89:	xchg   bl,al
  40db8b:	jo     0x40db50
  40db8d:	dec    ecx
  40db8e:	retf   0xa40
  40db91:	fisttp QWORD PTR [ebx]
  40db93:	xchg   esp,eax
  40db94:	xchg   ebx,eax
  40db95:	cld    
  40db96:	repz aam 0xe7
  40db99:	arpl   bp,di
  40db9b:	test   dl,bl
  40db9d:	lahf   
  40db9e:	test   DWORD PTR [esi+0x6b440bc6],0x6110cfc8
  40dba8:	xor    ebx,DWORD PTR [ebx]
  40dbaa:	stos   DWORD PTR es:[edi],eax
  40dbab:	push   ds
  40dbac:	fmul   QWORD PTR [ecx+esi*4+0x1bb0d89e]
  40dbb3:	test   al,0x84
  40dbb5:	call   0x1722ff50
  40dbba:	push   esi
  40dbbb:	rol    BYTE PTR [ebp-0x4c0c3e02],0xeb
  40dbc2:	sar    dh,cl
  40dbc4:	les    edi,FWORD PTR [ebp-0x9]
  40dbc7:	inc    esp
  40dbc8:	jae    0x40dbb7
  40dbca:	cdq    
  40dbcb:	call   0x314b:0x281d8851
  40dbd2:	mov    al,ds:0x6107b34b
  40dbd7:	pushf  
  40dbd8:	repz push eax
  40dbda:	fwait
  40dbdb:	inc    eax
  40dbdc:	mov    ebp,DWORD PTR [eax]
  40dbde:	sahf   
  40dbdf:	pop    ds
  40dbe0:	mov    edi,0x5d9da903
  40dbe5:	test   eax,0x6b87396f
  40dbea:	outs   dx,BYTE PTR ds:[esi]
  40dbeb:	leave  
  40dbec:	xchg   ecx,eax
  40dbed:	push   es
  40dbee:	jmp    0xc3c9ee9f
  40dbf3:	cdq    
  40dbf4:	or     DWORD PTR [eax-0x44186fad],esi
  40dbfa:	test   BYTE PTR [esi+0x2b],bh
  40dbfd:	mov    ds:0x7cbdb758,al
  40dc02:	cmc    
  40dc03:	in     eax,dx
  40dc04:	or     BYTE PTR [ebp-0x45620c87],dl
  40dc0a:	lods   al,BYTE PTR ds:[esi]
  40dc0b:	mov    ch,BYTE PTR [ebp-0x4d8b4ac9]
  40dc11:	jmp    0x39db5822
  40dc16:	aaa    
  40dc17:	inc    ebx
  40dc18:	jbe    0x40dc68
  40dc1a:	ins    DWORD PTR es:[edi],dx
  40dc1b:	jns    0x40dbb7
  40dc1d:	pop    ebp
  40dc1e:	std    
  40dc1f:	xor    al,0xf5
  40dc21:	jle    0x40dc9a
  40dc23:	dec    ecx
  40dc24:	xchg   edx,eax
  40dc25:	int    0x17
  40dc27:	inc    esp
  40dc28:	dec    ebx
  40dc29:	mov    edi,0xd86741cf
  40dc2e:	rcl    DWORD PTR [ecx+0x54311645],cl
  40dc34:	mov    ebp,0x43659200
  40dc39:	add    eax,0xccb387fa
  40dc3e:	pop    ebx
  40dc3f:	stc    
  40dc40:	add    DWORD PTR [ebx],0xfb3c7ac4
  40dc46:	jl     0x40dbde
  40dc48:	fcmove st,st(7)
  40dc4a:	mov    esi,0x66602bd
  40dc4f:	sbb    edx,DWORD PTR [edx+0x208fef58]
  40dc55:	sti    
  40dc56:	push   cs
  40dc57:	xchg   ecx,eax
  40dc58:	jmp    0xc223:0xc41d017b
  40dc5f:	fdivr  DWORD PTR [ebp+0x688bfe49]
  40dc65:	dec    edi
  40dc66:	inc    ecx
  40dc67:	add    al,BYTE PTR fs:[esi+0x6c]
  40dc6b:	sub    al,0xb6
  40dc6d:	xchg   edi,eax
  40dc6e:	iret   
  40dc6f:	out    0xab,eax
  40dc71:	cdq    
  40dc72:	jmp    0xc5d5:0x7c23564c
  40dc79:	and    cl,BYTE PTR [edx+edx*1+0x3a40ee23]
  40dc80:	lds    ebp,FWORD PTR [eax]
  40dc82:	xchg   edx,eax
  40dc83:	bound  esi,QWORD PTR [ebx]
  40dc85:	mov    edx,0x77651635
  40dc8a:	jae    0x40dcc1
  40dc8c:	pop    edi
  40dc8d:	popf   
  40dc8e:	arpl   WORD PTR [edx+0x7a],ax
  40dc91:	(bad)  
  40dc92:	hlt    
  40dc93:	es pop ecx
  40dc95:	mov    ds:0xf11adf34,eax
  40dc9a:	mov    bl,0x2a
  40dc9c:	jo     0x40dcfa
  40dc9e:	(bad)  
  40dc9f:	out    0xba,eax
  40dca1:	mov    ebp,0xd139f9c3
  40dca6:	leave  
  40dca7:	push   ds
  40dca8:	inc    BYTE PTR [ebx+0x43]
  40dcab:	adc    DWORD PTR [ebx-0x1],esp
  40dcae:	pop    esi
  40dcaf:	xchg   ebx,eax
  40dcb0:	hlt    
  40dcb1:	and    DWORD PTR [ebp+0x63],esi
  40dcb4:	mov    gs,WORD PTR [ecx+0x3af4649c]
  40dcba:	push   eax
  40dcbb:	push   0xffffffc6
  40dcbd:	push   esp
  40dcbe:	icebp  
  40dcbf:	nop    DWORD PTR [edi+eiz*2+0x74]
  40dcc4:	fcmovb st,st(0)
  40dcc6:	push   0x61c1ddef
  40dccb:	enter  0x1872,0xe7
  40dccf:	xlat   BYTE PTR ds:[ebx]
  40dcd0:	xchg   esi,eax
  40dcd1:	mov    WORD PTR [ebx],ss
  40dcd3:	imul   ecx,DWORD PTR [edi+0x7f0dcc12],0xb943f3a0
  40dcdd:	cmp    ebp,DWORD PTR [edi]
  40dcdf:	xchg   BYTE PTR [ebp-0x2a7eda33],dl
  40dce5:	inc    ebx
  40dce6:	cld    
  40dce7:	test   DWORD PTR ds:0xd78d591c,edi
  40dced:	add    al,BYTE PTR [ecx-0x7a734fc4]
  40dcf3:	test   al,0xe9
  40dcf5:	inc    ebp
  40dcf6:	cmp    BYTE PTR [edx],cl
  40dcf8:	iret   
  40dcf9:	xchg   edx,eax
  40dcfa:	jne    0x40dd37
  40dcfc:	inc    edx
  40dcfd:	int    0x10
  40dcff:	or     ah,BYTE PTR [ebx+0x3d]
  40dd02:	cmc    
  40dd03:	sub    edi,esp
  40dd05:	push   ds
  40dd06:	add    DWORD PTR [eax-0x53],0x314bca68
  40dd0d:	jno    0x40dcfa
  40dd0f:	xchg   esp,eax
  40dd10:	enter  0x5c65,0x21
  40dd14:	mov    eax,ds:0xeb6a8e58
  40dd19:	imul   ebp,DWORD PTR [edi+0x4eb4679c],0xffffffaa
  40dd20:	push   0x1f864e9a
  40dd25:	(bad)  
  40dd26:	cld    
  40dd27:	xor    dh,BYTE PTR [bx-0x79a4]
  40dd2c:	ja     0x40dd06
  40dd2e:	mov    esi,0x3252e53d
  40dd33:	shl    DWORD PTR [ebx+0x4],cl
  40dd36:	push   ecx
  40dd37:	push   ecx
  40dd38:	ret    
  40dd39:	pop    ds
  40dd3a:	les    esp,FWORD PTR [ebx-0x24245a7d]
  40dd40:	mov    esp,0x9816db41
  40dd45:	sub    ch,BYTE PTR [edx-0x6f]
  40dd48:	jo     0x40dd45
  40dd4a:	mov    bl,0x19
  40dd4c:	adc    dl,cl
  40dd4e:	mov    ebp,DWORD PTR [ecx+0x58ac5a44]
  40dd54:	xchg   ebx,eax
  40dd55:	xchg   ecx,esi
  40dd57:	pop    eax
  40dd58:	mov    al,0x5e
  40dd5a:	mov    ecx,0x88746250
  40dd5f:	addr16 cs push ds
  40dd62:	sbb    eax,0xa5be8e87
  40dd67:	cmp    eax,0x5a72fd4b
  40dd6c:	or     esp,DWORD PTR [edi+0x31]
  40dd6f:	mov    eax,0x69c83135
  40dd74:	or     dl,dl
  40dd76:	dec    ebx
  40dd77:	and    edx,DWORD PTR [ecx]
  40dd79:	shl    DWORD PTR ds:0x122965c8,0xd9
  40dd80:	pop    es
  40dd81:	ss sar esi,0x43
  40dd85:	xchg   edi,eax
  40dd86:	xchg   edi,eax
  40dd87:	jbe    0x40ddf3
  40dd89:	jae    0x40dd71
  40dd8b:	rol    DWORD PTR [edx-0x13],1
  40dd8e:	imul   edx,edi,0x58
  40dd91:	ret    
  40dd92:	mov    bh,BYTE PTR [ebx+0x4095443e]
  40dd98:	mov    dl,0x5
  40dd9a:	sbb    BYTE PTR [ecx],al
  40dd9c:	punpckhdq mm1,QWORD PTR [eax+0x45ded225]
  40dda3:	sar    edx,cl
  40dda5:	mov    WORD PTR [ebp-0x13],cs
  40dda8:	int3   
  40dda9:	cmp    BYTE PTR [edi],bh
  40ddab:	outs   dx,BYTE PTR ds:[esi]
  40ddac:	(bad)  
  40ddad:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ddae:	enter  0x9a6b,0xcf
  40ddb2:	aam    0xe0
  40ddb4:	jmp    0x40ddd4
  40ddb6:	cwde   
  40ddb7:	ins    DWORD PTR es:[edi],dx
  40ddb8:	das    
  40ddb9:	xchg   DWORD PTR [esi-0x10],ebx
  40ddbc:	sub    esp,DWORD PTR [eax+0x7e]
  40ddbf:	(bad)  
  40ddc0:	xlat   BYTE PTR ds:[ebx]
  40ddc1:	loope  0x40de29
  40ddc3:	ja     0x40dd4a
  40ddc5:	pop    ds
  40ddc6:	lea    edi,[edi]
  40ddc8:	popf   
  40ddc9:	jnp    0x40de16
  40ddcb:	pop    edx
  40ddcc:	pop    ecx
  40ddcd:	mov    dh,0x2d
  40ddcf:	pop    edx
  40ddd0:	add    esi,DWORD PTR [eax]
  40ddd2:	mov    BYTE PTR [eax-0x5633fb5a],al
  40ddd8:	push   ds
  40ddd9:	or     eax,0x47fd498d
  40ddde:	(bad)  
  40dddf:	mov    bl,0x71
  40dde1:	clc    
  40dde2:	dec    edi
  40dde3:	outs   dx,BYTE PTR ds:[esi]
  40dde4:	mov    esp,0x82aa2287
  40dde9:	inc    eax
  40ddea:	and    eax,ecx
  40ddec:	popf   
  40dded:	das    
  40ddee:	leave  
  40ddef:	icebp  
  40ddf0:	std    
  40ddf1:	sub    DWORD PTR [edi],edx
  40ddf3:	imul   edi,DWORD PTR ss:[edi],0x2733df0
  40ddfa:	and    esi,eax
  40ddfc:	icebp  
  40ddfd:	or     al,BYTE PTR [ecx]
  40ddff:	mov    DWORD PTR [eax+0x81b8331],ecx
  40de05:	pop    es
  40de06:	rol    BYTE PTR [edx+0x10bc2400],1
  40de0c:	cdq    
  40de0d:	fs jg  0x40ddcd
  40de10:	cwde   
  40de11:	adc    ch,BYTE PTR [eax]
  40de13:	div    BYTE PTR es:[ebp+0x35]
  40de17:	dec    ebp
  40de18:	outs   dx,DWORD PTR ds:[esi]
  40de19:	test   al,0xae
  40de1b:	inc    esp
  40de1c:	pop    esi
  40de1d:	lds    ecx,FWORD PTR [edi+0x17f367ff]
  40de23:	stos   DWORD PTR es:[edi],eax
  40de24:	sbb    ah,cl
  40de26:	add    esp,DWORD PTR [eax-0x676f746b]
  40de2c:	adc    DWORD PTR [edi-0x2e],eax
  40de2f:	sbb    DWORD PTR [edx-0x60e71465],0xffffffde
  40de36:	fisttp DWORD PTR ds:0x69f18bcd
  40de3c:	jecxz  0x40ddc7
  40de3e:	lods   eax,DWORD PTR ds:[esi]
  40de3f:	sub    dl,BYTE PTR [ecx+0x5ad5a2d3]
  40de45:	arpl   WORD PTR [ebx-0x45],bp
  40de48:	es aas 
  40de4a:	push   ebp
  40de4b:	jmp    FWORD PTR [edi]
  40de4d:	fsub   st(4),st
  40de4f:	(bad)  
  40de50:	aas    
  40de51:	and    bh,bh
  40de53:	not    BYTE PTR [esi]
  40de55:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40de56:	inc    eax
  40de57:	sbb    ebx,DWORD PTR [esi+edx*1+0x11]
  40de5b:	pop    edx
  40de5c:	xlat   BYTE PTR ds:[ebx]
  40de5d:	ss int3 
  40de5f:	jge    0x40deca
  40de61:	int3   
  40de62:	xor    edx,edi
  40de64:	pop    edx
  40de65:	pop    edx
  40de66:	jb     0x40de09
  40de68:	and    eax,0x79daa3e9
  40de6d:	jo     0x40de4b
  40de6f:	mov    ch,0x90
  40de71:	and    DWORD PTR [esi+0x1aba5798],ecx
  40de77:	and    esi,DWORD PTR [edx]
  40de79:	xchg   edi,eax
  40de7a:	lods   eax,DWORD PTR ds:[esi]
  40de7b:	xchg   ecx,eax
  40de7c:	xor    edi,DWORD PTR [esi]
  40de7e:	or     dh,BYTE PTR [edx+0x1c]
  40de81:	push   esp
  40de82:	cwde   
  40de83:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40de84:	xor    ah,BYTE PTR [edi+0x36]
  40de87:	repnz cld 
  40de89:	leave  
  40de8a:	in     eax,dx
  40de8b:	loope  0x40de3b
  40de8d:	mov    al,ds:0x68802667
  40de92:	(bad)  
  40de93:	mov    al,ds:0x9acb5403
  40de98:	cli    
  40de99:	stc    
  40de9a:	aas    
  40de9b:	test   al,0x80
  40de9d:	addr16 jg 0x40def1
  40dea0:	xchg   ecx,eax
  40dea1:	mov    esp,0x41a580a2
  40dea6:	jae    0x40df0b
  40dea8:	jb     0x40deb8
  40deaa:	rcl    BYTE PTR [esi],cl
  40deac:	fldcw  WORD PTR [ebx-0x5a]
  40deaf:	test   DWORD PTR [eax+ebx*2-0x1f],0xda415021
  40deb7:	inc    edi
  40deb8:	sub    esp,esi
  40deba:	adc    al,0xfd
  40debc:	and    al,0x7f
  40debe:	in     al,0x61
  40dec0:	test   BYTE PTR [ecx],ah
  40dec2:	add    cl,BYTE PTR [ecx-0x41]
  40dec5:	gs jae 0x40df13
  40dec8:	out    dx,al
  40dec9:	adc    ah,bh
  40decb:	aad    0xa
  40decd:	in     eax,dx
  40dece:	addr16 jbe 0x40deb4
  40ded1:	lahf   
  40ded2:	cld    
  40ded3:	sbb    esi,DWORD PTR [edx+0x1d]
  40ded6:	cmp    ecx,esi
  40ded8:	jbe    0x40de96
  40deda:	jno    0x40df20
  40dedc:	int    0x3b
  40dede:	xor    eax,0xd9f0cbe5
  40dee3:	jmp    0xbe968148
  40dee8:	lods   eax,DWORD PTR ds:[esi]
  40dee9:	mov    DWORD PTR [edi+0x79],esi
  40deec:	ret    0x59a3
  40deef:	(bad)  
  40def0:	jg     0x40df48
  40def2:	arpl   WORD PTR ds:0xbce96f04,bx
  40def8:	or     BYTE PTR [ecx-0x2b],0xd7
  40defc:	cs ins DWORD PTR es:[edi],dx
  40defe:	shl    DWORD PTR [edx],cl
  40df00:	cmovb  edi,DWORD PTR [esi]
  40df03:	sahf   
  40df04:	xchg   ebx,eax
  40df05:	outs   dx,DWORD PTR ds:[esi]
  40df06:	outs   dx,BYTE PTR ds:[esi]
  40df07:	ret    0x5d92
  40df0a:	pop    esp
  40df0b:	call   0xb30b:0x4de11617
  40df12:	push   es
  40df13:	xor    cl,BYTE PTR [ebx-0x67e77b52]
  40df19:	inc    edx
  40df1a:	dec    edx
  40df1b:	dec    ebx
  40df1c:	popa   
  40df1d:	ss dec ecx
  40df1f:	pushf  
  40df20:	mov    eax,0xafb6ee35
  40df25:	stc    
  40df26:	push   esp
  40df27:	hlt    
  40df28:	sub    BYTE PTR [ebp-0x2f],dl
  40df2b:	add    DWORD PTR gs:[ebx+0x2f16ef3d],0x43
  40df33:	inc    ebp
  40df34:	sub    eax,0x1837dc1f
  40df39:	mov    esp,0xa20c6db7
  40df3e:	inc    edi
  40df3f:	fcomp  QWORD PTR [edx-0x14]
  40df42:	icebp  
  40df43:	sub    BYTE PTR [edi-0x52],cl
  40df46:	dec    eax
  40df47:	adc    BYTE PTR [ecx+0x23c6247e],al
  40df4d:	mov    al,ds:0xef92693a
  40df52:	inc    edx
  40df54:	rcl    ecx,cl
  40df56:	cmp    BYTE PTR [eax],bh
  40df58:	retf   
  40df59:	adc    bh,bl
  40df5b:	xor    DWORD PTR [ecx+0x48],esp
  40df5e:	mov    dh,BYTE PTR [ebp-0x3b]
  40df61:	dec    ecx
  40df62:	fsub   QWORD PTR [ecx-0x200e4102]
  40df68:	data16 test al,0x15
  40df6b:	(bad)  
  40df6c:	xchg   ebp,eax
  40df6d:	addr16 mov cl,0xd6
  40df70:	loopne 0x40df04
  40df72:	int    0xf3
  40df74:	sub    al,0xb3
  40df76:	fidivr WORD PTR [edx]
  40df78:	adc    DWORD PTR [ebp-0x7a8b9770],0x69
  40df7f:	jnp    0x40dffe
  40df81:	sar    DWORD PTR [ebx+ebp*2],cl
  40df84:	hlt    
  40df85:	fisttp QWORD PTR [ebx+esi*1]
  40df88:	lods   eax,DWORD PTR ds:[esi]
  40df89:	arpl   WORD PTR [edx+0x56a0b8a0],bx
  40df8f:	mov    al,0x4a
  40df91:	retf   0xaf3c
  40df94:	popf   
  40df95:	(bad)  
  40df96:	jmp    0x40dfcf
  40df98:	dec    esi
  40df99:	shr    DWORD PTR [ebx+edi*1+0x42],1
  40df9d:	sbb    ch,BYTE PTR ds:0xc2a7519e
  40dfa3:	das    
  40dfa4:	iret   
  40dfa5:	and    bh,dl
  40dfa7:	jne    0x40df8a
  40dfa9:	retf   
  40dfaa:	pop    eax
  40dfab:	in     eax,dx
  40dfac:	mov    edx,0xa7c5b060
  40dfb1:	inc    edi
  40dfb2:	mov    bl,BYTE PTR [ebp+eiz*2+0x64d371d2]
  40dfb9:	cmp    al,cl
  40dfbb:	xchg   BYTE PTR [ebx-0x7b],al
  40dfbe:	loop   0x40e001
  40dfc0:	pop    es
  40dfc1:	dec    ebp
  40dfc2:	aaa    
  40dfc3:	pop    ecx
  40dfc4:	lahf   
  40dfc5:	mov    DWORD PTR [ebp+eiz*1+0x64],eax
  40dfc9:	fcomp  DWORD PTR [ebx]
  40dfcb:	mov    esi,0xd734a45c
  40dfd0:	(bad)  
  40dfd1:	aam    0xe8
  40dfd3:	add    eax,0x56e31d80
  40dfd8:	es mov esi,0x8b435492
  40dfde:	push   DWORD PTR [edi-0x6954f0f]
  40dfe4:	sbb    al,0x2f
  40dfe6:	sar    BYTE PTR [ebp+0x204774b7],0xb0
  40dfed:	ins    DWORD PTR es:[edi],dx
  40dfee:	pusha  
  40dfef:	adc    eax,0xd6fa0559
  40dff4:	sbb    ah,BYTE PTR [ebx+ecx*1+0x5f]
  40dff8:	xor    DWORD PTR [edi+0x55edee3],ebp
  40dffe:	mov    ecx,0x4d8d9794
  40e003:	and    cl,BYTE PTR [esi-0x1b]
  40e006:	mov    ah,BYTE PTR [edx+ebp*8+0x39dd085a]
  40e00d:	shr    DWORD PTR [esi-0x547f7b6a],cl
  40e013:	(bad)  [esi]
  40e015:	inc    ebx
  40e016:	out    0xe4,eax
  40e018:	cmc    
  40e019:	ficomp WORD PTR [edx+0xaa347b3]
  40e01f:	mov    al,0x71
  40e021:	pop    edi
  40e022:	jp     0x40dfab
  40e024:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e025:	push   esi
  40e026:	leave  
  40e027:	pop    eax
  40e028:	mov    al,0xc7
  40e02a:	aaa    
  40e02b:	pop    es
  40e02c:	ja     0x40dfec
  40e02e:	aas    
  40e02f:	inc    edi
  40e030:	dec    esp
  40e031:	pusha  
  40e032:	mov    bl,0x47
  40e034:	in     eax,0xb0
  40e036:	enter  0x8e53,0xb1
  40e03a:	or     BYTE PTR [edx+0x5459d666],bh
  40e040:	jnp    0x40e0c0
  40e042:	scas   eax,DWORD PTR es:[edi]
  40e043:	cwde   
  40e044:	ffreep st(5)
  40e046:	shl    DWORD PTR [ebp+0x14],cl
  40e049:	inc    esi
  40e04a:	add    al,0x8d
  40e04c:	imul   esp,ebx,0x72
  40e04f:	nop
  40e050:	dec    edx
  40e051:	imul   ebx,DWORD PTR [edx-0x1b200422],0xffffffd7
  40e058:	(bad)  
  40e059:	mov    al,cl
  40e05b:	(bad)  
  40e05c:	out    0x2a,al
  40e05e:	std    
  40e05f:	sub    cl,dh
  40e061:	pop    ebp
  40e062:	shr    DWORD PTR [edi+0x475a0553],1
  40e068:	(bad)  
  40e069:	lods   al,BYTE PTR ds:[esi]
  40e06a:	jmp    0xf3e6cdde
  40e06f:	lea    eax,[edx-0x59538cda]
  40e075:	test   BYTE PTR [ecx+ecx*8+0x637fca55],bl
  40e07c:	dec    esi
  40e07d:	inc    esi
  40e07e:	mov    edx,DWORD PTR [esi-0x2b]
  40e081:	(bad)  [ebx+0x30]
  40e084:	jmp    0x40e006
  40e086:	fwait
  40e087:	pop    esi
  40e088:	xchg   DWORD PTR [edx+0x5],edi
  40e08b:	popf   
  40e08c:	loopne 0x40e081
  40e08e:	inc    eax
  40e08f:	adc    dh,BYTE PTR [edx+0x4c]
  40e092:	push   ds
  40e093:	out    0xd5,eax
  40e095:	fs mov al,0x2c
  40e098:	mov    ebx,0x69a97ab8
  40e09d:	push   ds
  40e09e:	jns    0x40e027
  40e0a0:	mov    ?,edx
  40e0a2:	pop    ss
  40e0a3:	mov    ah,0xc0
  40e0a5:	jmp    0x213d:0x29254af0
  40e0ac:	popa   
  40e0ad:	xchg   BYTE PTR [edi+0x56],bh
  40e0b0:	fmul   DWORD PTR [ebx]
  40e0b2:	mov    ds:0x76648fb3,eax
  40e0b7:	add    BYTE PTR [eax],bl
  40e0b9:	adc    al,0xc6
  40e0bb:	fwait
  40e0bc:	ins    BYTE PTR es:[edi],dx
  40e0bd:	aaa    
  40e0be:	and    eax,0xc341486f
  40e0c3:	or     esp,DWORD PTR [ecx-0xf3c1494]
  40e0c9:	push   ss
  40e0ca:	xchg   BYTE PTR [edx],dh
  40e0cc:	je     0x40e07b
  40e0ce:	retf   0x817f
  40e0d1:	retf   0xdf80
  40e0d4:	sar    DWORD PTR [ecx+0xc],cl
  40e0d7:	push   ss
  40e0d8:	int3   
  40e0d9:	mov    dl,0x77
  40e0db:	pop    edx
  40e0dc:	mov    ebx,0xa4081b35
  40e0e1:	jns    0x40e148
  40e0e3:	fild   WORD PTR [ecx-0x424221c9]
  40e0e9:	scas   eax,DWORD PTR es:[edi]
  40e0ea:	mov    eax,0x66dadc4d
  40e0ef:	in     eax,dx
  40e0f0:	in     eax,0x67
  40e0f2:	aam    0x27
  40e0f4:	jne    0x40e07d
  40e0f6:	pop    ecx
  40e0f7:	jg     0x40e135
  40e0f9:	mov    bl,dh
  40e0fb:	stos   DWORD PTR es:[edi],eax
  40e0fc:	fxch   st(3)
  40e0fe:	cmc    
  40e0ff:	idiv   DWORD PTR [edx]
  40e101:	and    ah,BYTE PTR [edx-0x32]
  40e104:	pop    esi
  40e105:	pop    ds
  40e106:	jl     0x40e08b
  40e108:	sub    ah,BYTE PTR [eax+0x63]
  40e10b:	mov    ch,0x1f
  40e10d:	xchg   BYTE PTR [ebx+0x63],dh
  40e110:	adc    dl,ch
  40e112:	dec    esi
  40e113:	xor    eax,0xde854ba1
  40e118:	pop    es
  40e119:	aas    
  40e11a:	pop    esi
  40e11b:	data16 add BYTE PTR [edx],bh
  40e11e:	mov    bh,0xab
  40e120:	mov    ebp,0x270facf4
  40e125:	adc    BYTE PTR [edx-0xea20998],ah
  40e12b:	push   ds
  40e12c:	mov    ds:0x6b1bf5d3,al
  40e131:	shl    DWORD PTR [edi+edi*8-0x4b86d1e3],1
  40e138:	sahf   
  40e139:	stc    
  40e13a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e13b:	ja     0x40e0dc
  40e13d:	mov    ebp,0x2f33f9e
  40e142:	ds and esi,edi
  40e145:	imul   esp,ebp,0xffffffd8
  40e148:	inc    BYTE PTR [ecx+0x61]
  40e14b:	jns    0x40e109
  40e14d:	fdivr  QWORD PTR [ebx+0x6897f488]
  40e153:	lods   eax,DWORD PTR ds:[esi]
  40e154:	sub    eax,0x4cbcc4d1
  40e159:	xor    al,0x5c
  40e15b:	mov    bh,0x9e
  40e15d:	pop    edi
  40e15e:	inc    eax
  40e15f:	dec    eax
  40e160:	call   0x18c64016
  40e165:	xor    al,0x15
  40e167:	nop
  40e168:	push   ebp
  40e169:	push   ecx
  40e16a:	mov    DWORD PTR [ecx],edx
  40e16c:	cmp    al,0xe8
  40e16e:	or     al,0x60
  40e170:	dec    ebp
  40e171:	inc    edx
  40e172:	js     0x40e172
  40e174:	mov    ebp,0x16da63cf
  40e179:	iret   
  40e17a:	in     eax,dx
  40e17b:	cwde   
  40e17c:	and    al,0x5e
  40e17e:	cmpxchg DWORD PTR [esi+ebx*1],edx
  40e182:	inc    esi
  40e183:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e184:	cs aam 0xd6
  40e187:	dec    edx
  40e188:	push   0xe4a293d1
  40e18d:	adc    ch,cl
  40e18f:	mov    esp,DWORD PTR [ebx-0x29eecaf7]
  40e195:	adc    al,0xc1
  40e197:	jo     0x40e13b
  40e199:	push   esi
  40e19a:	mov    ah,0x43
  40e19c:	mov    ah,0xc1
  40e19e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e19f:	push   ecx
  40e1a0:	clc    
  40e1a1:	mov    ss,WORD PTR [edx-0x2]
  40e1a4:	out    0xf9,eax
  40e1a6:	push   esi
  40e1a7:	adc    bh,BYTE PTR [eax-0x4]
  40e1aa:	and    BYTE PTR cs:[edx],ch
  40e1ad:	repnz mov bh,0xbf
  40e1b0:	adc    ah,cl
  40e1b2:	sbb    ch,ch
  40e1b4:	inc    edx
  40e1b5:	push   ecx
  40e1b6:	(bad)  
  40e1b8:	call   0xe9d2c833
  40e1bd:	sub    DWORD PTR [ebp-0x59],0xcc60eeae
  40e1c4:	push   edx
  40e1c5:	mov    bh,0x27
  40e1c7:	pop    esi
  40e1c8:	sub    al,cl
  40e1ca:	or     esi,ebp
  40e1cc:	and    BYTE PTR [esi],0x69
  40e1cf:	int    0x1b
  40e1d1:	std    
  40e1d2:	outs   dx,BYTE PTR ds:[esi]
  40e1d3:	popa   
  40e1d4:	mov    bh,0x42
  40e1d6:	arpl   WORD PTR [esi+ebp*4+0x13],ax
  40e1da:	mov    gs,WORD PTR [edx]
  40e1dc:	and    eax,0xcbeaba29
  40e1e1:	sub    al,0x41
  40e1e3:	pop    ebp
  40e1e4:	push   ebp
  40e1e5:	out    dx,al
  40e1e6:	jae    0x40e16b
  40e1e8:	push   edi
  40e1e9:	scas   eax,DWORD PTR es:[edi]
  40e1ea:	push   ds
  40e1eb:	cdq    
  40e1ec:	cmp    ch,BYTE PTR [edx]
  40e1ee:	je     0x40e200
  40e1f0:	mov    eax,0xb1f4aa02
  40e1f5:	std    
  40e1f6:	add    al,0x0
  40e1f8:	mov    WORD PTR [ecx+0x5a],ds
  40e1fb:	mov    BYTE PTR [ecx+edx*4+0x23905415],dl
  40e202:	popa   
  40e203:	scas   eax,DWORD PTR es:[edi]
  40e204:	and    al,0x2a
  40e206:	sbb    DWORD PTR [edx+0x14],eax
  40e209:	jmp    0x40e1ca
  40e20b:	dec    ecx
  40e20c:	cmp    eax,0xe6e12b58
  40e211:	stos   DWORD PTR es:[edi],eax
  40e212:	das    
  40e213:	xor    DWORD PTR [edi-0x6],esi
  40e216:	cli    
  40e217:	jg     0x40e233
  40e219:	(bad)  
  40e21a:	iret   
  40e21b:	xor    BYTE PTR [esi],cl
  40e21d:	inc    edi
  40e21e:	aad    0x18
  40e220:	xchg   DWORD PTR [ebx-0x4c],ecx
  40e223:	es das 
  40e225:	data16 out dx,al
  40e227:	jno    0x40e205
  40e229:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e22a:	mov    ?,WORD PTR [ecx]
  40e22c:	stos   DWORD PTR es:[edi],eax
  40e22d:	stos   DWORD PTR es:[edi],eax
  40e22e:	(bad)  
  40e22f:	in     al,0xa1
  40e231:	sbb    eax,0x717f8976
  40e236:	inc    edx
  40e237:	(bad)  
  40e238:	push   esp
  40e239:	loopne 0x40e231
  40e23b:	cmp    eax,0xa3030027
  40e240:	or     DWORD PTR [eax*2-0xf17720e],0xc8e76c70
  40e24b:	sub    al,0xc
  40e24d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e24e:	ds dec edx
  40e250:	(bad)  
  40e252:	cmps   DWORD PTR gs:[esi],DWORD PTR es:[edi]
  40e254:	mov    ebp,DWORD PTR [edi+0x6bded9c7]
  40e25a:	or     al,BYTE PTR [ebx-0x504b5a08]
  40e260:	imul   edx,ebx,0x8e458f9c
  40e266:	xchg   BYTE PTR [ecx-0x6e357b84],ah
  40e26c:	mov    eax,0xaefed55f
  40e271:	lea    ecx,[edi-0xd3d525b]
  40e277:	pushf  
  40e278:	pop    esi
  40e279:	pop    ecx
  40e27a:	leave  
  40e27b:	bound  ebp,QWORD PTR [edi+0x2e08dc22]
  40e281:	hlt    
  40e282:	mov    fs,WORD PTR [esi+eax*2]
  40e285:	aam    0x69
  40e287:	and    edi,0x28
  40e28a:	mov    ds:0xca958d1,al
  40e28f:	repz inc ebx
  40e291:	mov    dl,0x3f
  40e293:	shl    BYTE PTR [edi],cl
  40e295:	inc    BYTE PTR [ebx-0x1d]
  40e298:	jle    0x40e2bf
  40e29a:	adc    esp,DWORD PTR [edi+0x70203298]
  40e2a0:	in     eax,0x86
  40e2a2:	xor    dh,BYTE PTR [ebx]
  40e2a4:	mov    ecx,0x6904c90d
  40e2a9:	int3   
  40e2aa:	push   ebp
  40e2ab:	loopne 0x40e2ad
  40e2ad:	outs   dx,DWORD PTR ds:[esi]
  40e2ae:	rcr    BYTE PTR ds:0x94bbf85a,1
  40e2b4:	inc    esp
  40e2b5:	jl     0x40e292
  40e2b7:	sti    
  40e2b8:	sbb    eax,edx
  40e2ba:	fwait
  40e2bb:	mov    DWORD PTR [esi+0x77f0afed],ebx
  40e2c1:	sbb    al,0x2e
  40e2c3:	iret   
  40e2c4:	scas   eax,DWORD PTR es:[edi]
  40e2c5:	inc    ebp
  40e2c6:	xchg   DWORD PTR [edi+ebp*4],esi
  40e2c9:	add    ebp,DWORD PTR [edi+edi*8-0x3b1e064e]
  40e2d0:	inc    edi
  40e2d1:	jg     0x40e26d
  40e2d3:	popa   
  40e2d4:	pop    ecx
  40e2d5:	mov    cl,0x38
  40e2d7:	fidiv  WORD PTR [ebx]
  40e2d9:	(bad)  
  40e2da:	mov    ebx,0x8d0f35d1
  40e2df:	push   ds
  40e2e0:	scas   eax,DWORD PTR es:[edi]
  40e2e1:	or     al,0x5a
  40e2e3:	scas   eax,DWORD PTR es:[edi]
  40e2e4:	adc    eax,0x189cb321
  40e2e9:	aam    0xb1
  40e2eb:	(bad)  
  40e2ed:	addr16 dec ebx
  40e2ef:	mov    bl,0x81
  40e2f1:	add    DWORD PTR [ecx+0x5f69cc89],esi
  40e2f7:	fsub   QWORD PTR [edi]
  40e2f9:	push   ds
  40e2fa:	xlat   BYTE PTR ds:[ebx]
  40e2fb:	scas   al,BYTE PTR es:[edi]
  40e2fc:	outs   dx,BYTE PTR ds:[esi]
  40e2fd:	mov    al,ds:0x92794a5d
  40e302:	push   eax
  40e303:	or     al,BYTE PTR [edi-0xc]
  40e306:	into   
  40e307:	or     al,0x28
  40e309:	imul   ecx,DWORD PTR [ecx+ebp*4+0x25],0x45a7b6f3
  40e311:	jp     0x40e300
  40e313:	das    
  40e314:	ins    BYTE PTR es:[edi],dx
  40e315:	cmp    BYTE PTR ds:0x44fc58d4,0x3
  40e31c:	popf   
  40e31d:	xchg   ebx,eax
  40e31e:	push   ecx
  40e31f:	js     0x40e2ad
  40e321:	out    0xfb,al
  40e323:	daa    
  40e324:	sub    al,0xab
  40e326:	fwait
  40e327:	pop    es
  40e328:	push   0x4b451220
  40e32d:	pop    ebp
  40e32e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e32f:	xchg   ebx,eax
  40e330:	sub    DWORD PTR [esi-0x14],ecx
  40e333:	jae    0x40e2fa
  40e335:	cli    
  40e336:	in     al,dx
  40e337:	clc    
  40e338:	xor    DWORD PTR [edi+0x53],0xffffffd4
  40e33c:	(bad)  
  40e33d:	pusha  
  40e33e:	shl    BYTE PTR [eax],0xd6
  40e341:	fdivp  st(1),st
  40e343:	or     ecx,ebx
  40e345:	pop    eax
  40e346:	inc    edx
  40e347:	dec    ebp
  40e348:	ds sbb eax,0x4f597820
  40e34e:	int    0xb6
  40e350:	mov    al,0x73
  40e352:	xor    dh,0x1b
  40e355:	jmp    0x759d:0xdfe15b6c
  40e35c:	shr    ch,1
  40e35e:	and    bh,BYTE PTR ds:0x47964501
  40e364:	jmp    0x40e3bc
  40e366:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e367:	test   bh,dh
  40e369:	mov    edi,0xef171828
  40e36e:	pop    esp
  40e36f:	jmp    0xd45b42be
  40e374:	sbb    eax,0x4cc8b0a8
  40e379:	inc    ebp
  40e37a:	push   cs
  40e37b:	pop    ds
  40e37c:	fbstp  TBYTE PTR [edi-0x50]
  40e37f:	iret   
  40e380:	ret    0xb2ca
  40e383:	bound  esp,QWORD PTR [esi-0x47]
  40e386:	mov    esp,0xa709434e
  40e38b:	add    bl,BYTE PTR [edi+0xc59522b]
  40e391:	xor    ah,BYTE PTR [edx+edi*2-0x5ef8c5d5]
  40e398:	(bad)  
  40e39a:	adc    BYTE PTR ds:0x3b460949,0x52
  40e3a1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e3a2:	xor    eax,0xc8f1ffe3
  40e3a7:	ret    
  40e3a8:	inc    esi
  40e3a9:	fld    QWORD PTR [esi+0x7]
  40e3ac:	xor    eax,0x15d858c3
  40e3b1:	cmp    DWORD PTR [esi+0x54b959f1],edx
  40e3b7:	stc    
  40e3b8:	push   edx
  40e3b9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e3ba:	mov    eax,ds:0xcb64ded7
  40e3bf:	dec    ebp
  40e3c0:	dec    edi
  40e3c1:	lahf   
  40e3c2:	dec    esp
  40e3c3:	popa   
  40e3c4:	neg    BYTE PTR [edx-0x4f82ca3f]
  40e3ca:	cmp    eax,0x74dbd1f
  40e3cf:	es (bad) 
  40e3d1:	int3   
  40e3d2:	pop    ebx
  40e3d3:	pop    ecx
  40e3d4:	mov    al,ds:0xd832c671
  40e3d9:	adc    DWORD PTR ds:[edx-0x6c9c9a0a],0x6f
  40e3e1:	sti    
  40e3e2:	aad    0x8a
  40e3e4:	fist   WORD PTR [eax+0x2308bd7c]
  40e3ea:	int3   
  40e3eb:	out    dx,al
  40e3ec:	cmp    dh,BYTE PTR [edx]
  40e3ee:	xor    eax,0xb49ea1c3
  40e3f3:	aaa    
  40e3f4:	cmp    DWORD PTR [ecx],eax
  40e3f6:	and    BYTE PTR [edi],cl
  40e3f8:	fwait
  40e3f9:	push   es
  40e3fa:	aam    0xf3
  40e3fc:	stos   DWORD PTR es:[edi],eax
  40e3fd:	arpl   WORD PTR [esi],bx
  40e3ff:	out    0xa8,eax
  40e401:	clc    
  40e402:	sti    
  40e403:	ja     0x40e44e
  40e405:	inc    eax
  40e406:	mov    eax,ds:0x8114b57b
  40e40b:	int3   
  40e40c:	lea    eax,[ecx+ebp*1+0x23c8171]
  40e413:	mov    ebp,0xdfa6e8d7
  40e418:	inc    ebx
  40e419:	nop
  40e41a:	jp     0x40e47f
  40e41c:	repz xor ecx,DWORD PTR [ebx-0x3fb5928c]
  40e423:	outs   dx,BYTE PTR ds:[esi]
  40e424:	dec    esp
  40e425:	aaa    
  40e426:	test   al,0x3d
  40e428:	and    al,0x59
  40e42a:	fs push 0x9ee60fba
  40e430:	jp     0x40e448
  40e432:	dec    ebp
  40e433:	retf   0xe065
  40e436:	retf   
  40e437:	aas    
  40e438:	push   ss
  40e439:	dec    BYTE PTR [esi+0x32f73733]
  40e43f:	adc    dl,BYTE PTR [edi+ebp*2]
  40e442:	jno    0x40e42d
  40e444:	cmp    al,0x78
  40e446:	sahf   
  40e447:	ret    
  40e448:	dec    esp
  40e449:	xor    BYTE PTR [eax+0x17],al
  40e44c:	fcom   QWORD PTR [esp+eax*1+0x2f]
  40e450:	in     al,0xa6
  40e452:	push   edi
  40e453:	popf   
  40e454:	push   ebp
  40e455:	add    BYTE PTR [esi],0x8b
  40e458:	cmp    bh,cl
  40e45a:	lahf   
  40e45b:	ror    ecx,cl
  40e45d:	mov    dh,0x92
  40e45f:	mov    edi,0x90cf3635
  40e464:	add    esi,DWORD PTR [ecx+eax*8+0x19]
  40e468:	ins    DWORD PTR es:[edi],dx
  40e469:	jmp    0x40e4b2
  40e46b:	mov    al,ds:0x7fe81d9b
  40e470:	xor    eax,edx
  40e472:	(bad)  
  40e473:	mov    cl,0xe1
  40e475:	or     al,0x2
  40e477:	mov    ebp,DWORD PTR [edx+ecx*1]
  40e47a:	inc    ebp
  40e47b:	jns    0x40e46f
  40e47d:	mov    bl,0xaa
  40e47f:	push   cs
  40e480:	imul   edx,DWORD PTR [edx+0x5b20bc40],0xffffff99
  40e487:	ss inc eax
  40e489:	scas   al,BYTE PTR es:[edi]
  40e48a:	push   es
  40e48b:	cli    
  40e48c:	dec    ebp
  40e48d:	jp     0x40e4cd
  40e48f:	cmp    ch,bh
  40e491:	adc    BYTE PTR [eax+0x1ebd10a9],0xe
  40e498:	call   0x421b:0xf00880d5
  40e49f:	fisttp DWORD PTR [edi]
  40e4a1:	fbld   TBYTE PTR [esi+0x51]
  40e4a4:	out    dx,eax
  40e4a5:	add    esp,edi
  40e4a7:	jae    0x40e4d0
  40e4a9:	les    edi,FWORD PTR [ebp+0x40]
  40e4ac:	jmp    DWORD PTR [esi]
  40e4ae:	cmp    esi,DWORD PTR [edx-0x4e674d83]
  40e4b4:	es push ebp
  40e4b6:	cmp    bl,BYTE PTR [ebx]
  40e4b8:	add    eax,0xe4b958b0
  40e4bd:	retf   
  40e4be:	shl    eax,1
  40e4c0:	into   
  40e4c1:	xchg   DWORD PTR [edx],ebx
  40e4c3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e4c4:	jne    0x40e514
  40e4c6:	lds    edx,FWORD PTR [eax+0x28190511]
  40e4cc:	mov    esp,0x574d235b
  40e4d1:	cdq    
  40e4d2:	sub    esi,eax
  40e4d4:	imul   ecx,DWORD PTR [ebx+esi*4-0x655db753],0x7f
  40e4dc:	lahf   
  40e4dd:	cmp    BYTE PTR [edi+0x14],bh
  40e4e0:	dec    ebp
  40e4e1:	mov    edi,ecx
  40e4e3:	test   eax,0xc876ba5
  40e4e8:	mov    DWORD PTR [edx],esp
  40e4ea:	aam    0x9f
  40e4ec:	(bad)  
  40e4ee:	pop    edi
  40e4ef:	retf   
  40e4f0:	popa   
  40e4f1:	and    eax,DWORD PTR [ecx+0x66]
  40e4f4:	push   esi
  40e4f5:	ror    edi,cl
  40e4f7:	imul   edi,DWORD PTR [ebx+esi*2-0x72463795],0xffffffcd
  40e4ff:	je     0x40e515
  40e501:	(bad)  
  40e502:	mov    esi,esi
  40e504:	sahf   
  40e505:	jae    0x40e4c7
  40e507:	adc    al,0x2d
  40e509:	push   edx
  40e50a:	lods   al,BYTE PTR ds:[esi]
  40e50b:	pop    ss
  40e50c:	icebp  
  40e50d:	sbb    ebx,DWORD PTR [eax-0x20f9f66b]
  40e513:	add    bh,BYTE PTR [edx+0x30]
  40e516:	push   edx
  40e517:	mov    esi,0x27644c7c
  40e51c:	rol    eax,cl
  40e51e:	add    al,BYTE PTR [esi-0x6fc1ea8]
  40e524:	sysenter 
  40e526:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e527:	jecxz  0x40e4f4
  40e529:	mov    esi,0x76771cbc
  40e52e:	jo     0x40e4bc
  40e530:	lahf   
  40e531:	cli    
  40e532:	imul   edx,DWORD PTR [eax-0x60],0xffffffd2
  40e536:	mov    cl,0x8c
  40e538:	addr16 (bad) 
  40e53a:	cdq    
  40e53b:	pop    es
  40e53c:	inc    eax
  40e53d:	pop    ss
  40e53e:	cmp    edx,ebx
  40e540:	or     ch,BYTE PTR ds:0xba5aaf3
  40e546:	popf   
  40e547:	mov    al,gs:0xecddd1f6
  40e54d:	and    BYTE PTR [esi+0x2a7311c4],ah
  40e553:	(bad)  
  40e554:	cmp    BYTE PTR [esi+0x5],al
  40e557:	add    eax,0x7b4dae66
  40e55c:	arpl   sp,dx
  40e55e:	mul    DWORD PTR ss:[edi+ebp*4-0x4ce35c2f]
  40e566:	or     ch,BYTE PTR [ebx]
  40e568:	ds out 0xf2,al
  40e56b:	jmp    0x43c9102
  40e570:	aas    
  40e571:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e572:	and    bh,0xc5
  40e575:	jmp    0xbf1d:0xeb751d70
  40e57c:	xchg   DWORD PTR [ebx-0x2749ab4d],ecx
  40e582:	adc    BYTE PTR [esi],ch
  40e584:	ret    
  40e585:	loop   0x40e543
  40e587:	dec    ebx
  40e588:	dec    ecx
  40e589:	adc    eax,0x402dcc52
  40e58e:	scas   eax,DWORD PTR es:[edi]
  40e58f:	idiv   ecx
  40e591:	test   eax,0x97a166ae
  40e597:	ins    BYTE PTR es:[edi],dx
  40e598:	pop    es
  40e599:	fadd   DWORD PTR [edi-0x74]
  40e59c:	test   BYTE PTR [ecx-0x21c05517],cl
  40e5a2:	cdq    
  40e5a3:	ror    dh,1
  40e5a5:	jecxz  0x40e53f
  40e5a7:	xchg   ebx,eax
  40e5a8:	or     esi,DWORD PTR [ebp+0x5d]
  40e5ab:	lods   eax,DWORD PTR ds:[esi]
  40e5ac:	call   FWORD PTR [ebx]
  40e5ae:	stc    
  40e5af:	lods   al,BYTE PTR ds:[esi]
  40e5b0:	jne    0x40e5e9
  40e5b2:	push   esi
  40e5b3:	call   0xdb58:0xa3993db1
  40e5ba:	or     ah,BYTE PTR [edx]
  40e5bc:	dec    ecx
  40e5bd:	and    eax,0xb562a61e
  40e5c2:	test   al,0x8e
  40e5c4:	jg     0x40e5cd
  40e5c6:	jle    0x40e5fb
  40e5c8:	shl    BYTE PTR ds:0xb7cfeaba,0xa2
  40e5cf:	dec    edx
  40e5d0:	scas   eax,DWORD PTR es:[edi]
  40e5d1:	xchg   esi,eax
  40e5d2:	inc    ebx
  40e5d3:	inc    ebp
  40e5d4:	sahf   
  40e5d5:	fld    DWORD PTR [esi-0x5a]
  40e5d8:	out    dx,al
  40e5d9:	imul   esi
  40e5db:	inc    esp
  40e5dc:	push   ecx
  40e5dd:	mov    ds:0xe02187c7,eax
  40e5e2:	popf   
  40e5e3:	pushf  
  40e5e4:	pop    ds
  40e5e5:	jle    0x40e5f4
  40e5e7:	cmp    BYTE PTR [eax],al
  40e5e9:	adc    BYTE PTR [ecx-0x36],cl
  40e5ec:	fisub  DWORD PTR [ebx]
  40e5ee:	out    0x3e,al
  40e5f0:	adc    BYTE PTR [ebp+0x55be7d88],dl
  40e5f6:	add    al,0xae
  40e5f8:	jnp    0x40e5c0
  40e5fa:	gs fmul st(4),st
  40e5fd:	sub    eax,0x26fd8476
  40e602:	cdq    
  40e603:	(bad)  
  40e604:	dec    ebx
  40e605:	iret   
  40e606:	pop    ebp
  40e607:	push   0x5994aa1e
  40e60c:	rcl    esi,0xfc
  40e60f:	mov    al,0x68
  40e611:	pop    es
  40e612:	push   esp
  40e613:	aam    0x1c
  40e615:	mov    al,ds:0x9cf2f85
  40e61a:	xor    al,0xc0
  40e61c:	xchg   ebx,eax
  40e61d:	mov    eax,0xb6fcc2cf
  40e622:	mov    ecx,0xbbd58c63
  40e627:	sub    BYTE PTR [eax+0x10a14366],ch
  40e62d:	lods   eax,DWORD PTR ds:[esi]
  40e62e:	arpl   WORD PTR [edx+0x3b30db21],bp
  40e634:	scas   eax,DWORD PTR es:[edi]
  40e635:	add    edi,DWORD PTR [eax]
  40e637:	rol    DWORD PTR [ecx+0x4590dd75],0x55
  40e63e:	ins    BYTE PTR es:[edi],dx
  40e63f:	sub    edx,DWORD PTR [esi-0x1bba474c]
  40e645:	push   ss
  40e646:	(bad)  
  40e647:	fiadd  DWORD PTR [esi]
  40e649:	push   ecx
  40e64a:	imul   eax,ebx,0xffffff95
  40e64d:	cwde   
  40e64e:	and    DWORD PTR [eax+0x37e42a11],0xbc93bf61
  40e658:	push   eax
  40e659:	push   edx
  40e65a:	fadd   QWORD PTR [edi+ecx*8]
  40e65d:	test   al,0xfb
  40e65f:	xchg   ebp,eax
  40e660:	(bad)  
  40e661:	pop    ebx
  40e662:	dec    ebx
  40e663:	mov    eax,ds:0xc2d3dd8e
  40e668:	add    DWORD PTR [eax-0x1b9615d7],edi
  40e66e:	xchg   esp,eax
  40e66f:	arpl   WORD PTR [ebx+0x1ad334ea],cx
  40e675:	lods   eax,DWORD PTR ds:[esi]
  40e676:	push   cs
  40e677:	pop    ecx
  40e678:	lahf   
  40e679:	call   0xac7caf23
  40e67e:	push   0x8fd228f3
  40e683:	cmp    eax,0x7047a497
  40e688:	dec    esi
  40e689:	push   ss
  40e68a:	mov    edx,0x5d7bea0a
  40e68f:	jo     0x40e65e
  40e691:	scas   al,BYTE PTR es:[edi]
  40e692:	(bad)  
  40e693:	sti    
  40e694:	shl    BYTE PTR [eax],0x65
  40e697:	xor    BYTE PTR [ebx+0x303a1e09],0x60
  40e69e:	or     bl,dl
  40e6a0:	xchg   esi,eax
  40e6a1:	mov    ch,0x67
  40e6a3:	add    al,0xd9
  40e6a5:	fwait
  40e6a6:	pop    edi
  40e6a7:	jg     0x40e71e
  40e6a9:	retf   
  40e6aa:	in     al,dx
  40e6ab:	xor    eax,0x1ace34c7
  40e6b0:	pop    eax
  40e6b1:	cmp    DWORD PTR ss:[edi-0x9],esp
  40e6b5:	test   DWORD PTR [edx+esi*2+0x44],ecx
  40e6b9:	or     BYTE PTR [edx+0x0],ch
  40e6bc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e6bd:	stc    
  40e6be:	inc    ebx
  40e6bf:	fmul   QWORD PTR [ebx]
  40e6c1:	sti    
  40e6c2:	leave  
  40e6c3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e6c4:	fdivrp st(0),st
  40e6c6:	push   DWORD PTR [ebx-0x5e]
  40e6c9:	sar    BYTE PTR [edx-0x356e7cfe],1
  40e6cf:	neg    DWORD PTR [ebx]
  40e6d1:	fld    TBYTE PTR [ebp-0x19]
  40e6d4:	rol    DWORD PTR [edx-0x118c3371],1
  40e6da:	push   esi
  40e6db:	jp     0x40e6fa
  40e6dd:	rol    DWORD PTR [edx+ebp*8+0x14e3c5f1],cl
  40e6e4:	ja     0x40e68d
  40e6e6:	or     BYTE PTR [esi-0x9],ch
  40e6e9:	jmp    0x4114:0x38e0cb09
  40e6f0:	sbb    BYTE PTR [edx],ah
  40e6f2:	fld    DWORD PTR [edx]
  40e6f4:	inc    BYTE PTR [esi]
  40e6f6:	imul   edx
  40e6f8:	fisttp DWORD PTR ds:0xf2e5f1c5
  40e6fe:	mov    edi,DWORD PTR [edi]
  40e700:	xchg   esp,eax
  40e701:	js     0x40e742
  40e703:	pop    eax
  40e704:	sbb    ebp,esi
  40e706:	inc    ebx
  40e707:	adc    ah,cl
  40e709:	je     0x40e76a
  40e70b:	jecxz  0x40e769
  40e70d:	in     al,dx
  40e70e:	or     ah,BYTE PTR [edx-0x72]
  40e711:	(bad)  
  40e713:	sahf   
  40e714:	mov    esp,gs
  40e716:	cmp    esi,DWORD PTR [ebp+0x1f]
  40e719:	pop    esi
  40e71a:	ftst   
  40e71c:	or     eax,0xb8b4be81
  40e721:	push   ebp
  40e722:	pop    ecx
  40e723:	dec    ebx
  40e724:	dec    esp
  40e725:	sbb    dl,BYTE PTR [ecx]
  40e727:	lahf   
  40e728:	pop    ebx
  40e729:	xchg   ecx,eax
  40e72a:	ss mov bl,0xcb
  40e72d:	arpl   WORD PTR [ebx+0x46bdcf05],di
  40e733:	push   edi
  40e734:	sub    DWORD PTR cs:[ebx+0xd90dbb5],esp
  40e73b:	xor    ah,ah
  40e73d:	and    DWORD PTR [edx+0x36],0x31
  40e741:	mov    ebp,0xdd8c43b8
  40e746:	xor    eax,DWORD PTR [edx-0x7e46a31]
  40e74c:	mov    WORD PTR [edi+0x7529d1d3],ss
  40e752:	and    BYTE PTR [ebp-0x729aba22],0x8d
  40e759:	icebp  
  40e75a:	cmp    eax,0x631df6d4
  40e75f:	daa    
  40e760:	jno    0x40e7ad
  40e762:	sbb    DWORD PTR [ebx+0x7e3e4e8b],ebx
  40e768:	mov    al,0xf0
  40e76a:	mov    bl,0x27
  40e76c:	fist   WORD PTR [ebp+0xe3220b3]
  40e772:	add    bl,BYTE PTR [esi+0x2b7d8c2b]
  40e778:	xlat   BYTE PTR ds:[ebx]
  40e779:	test   DWORD PTR ds:0x7c1b76b3,0xa8da6de8
  40e783:	leave  
  40e784:	push   edi
  40e785:	or     ecx,esi
  40e787:	scas   al,BYTE PTR es:[edi]
  40e788:	(bad)  
  40e789:	cmc    
  40e78a:	ins    DWORD PTR es:[edi],dx
  40e78b:	xor    cl,al
  40e78d:	fadd   QWORD PTR [edi+0x736fbf53]
  40e793:	cmp    al,0xce
  40e795:	jmp    0x3363:0x90d521e0
  40e79c:	jnp    0x40e76f
  40e79e:	xor    DWORD PTR [esi+0x459399af],0xa25b5ef7
  40e7a8:	lods   eax,DWORD PTR ds:[esi]
  40e7a9:	and    edi,DWORD PTR [ebx-0x6ebbca30]
  40e7af:	les    ebx,FWORD PTR [ebp+eax*2+0x66958826]
  40e7b6:	retf   0xe4aa
  40e7b9:	out    dx,eax
  40e7ba:	shl    BYTE PTR [ebp+0xd22c6c1],1
  40e7c0:	ss mov bh,0xc7
  40e7c3:	mov    eax,ds:0xa0620aa8
  40e7c8:	inc    ecx
  40e7c9:	adc    eax,0x9de3ad80
  40e7ce:	into   
  40e7cf:	xchg   DWORD PTR [esp+edi*2+0x5f],edx
  40e7d3:	hlt    
  40e7d4:	es nop
  40e7d6:	arpl   WORD PTR [esi-0x39],bp
  40e7d9:	out    0x71,eax
  40e7db:	add    al,0x38
  40e7dd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e7de:	test   DWORD PTR [eax+ecx*4],esp
  40e7e1:	or     edx,DWORD PTR [esi-0x55]
  40e7e4:	fimul  WORD PTR [edi]
  40e7e6:	ficom  DWORD PTR [ecx+0x10]
  40e7e9:	repnz cli 
  40e7eb:	jl     0x40e7a7
  40e7ed:	xchg   ebp,esp
  40e7ef:	std    
  40e7f0:	sbb    al,0x12
  40e7f2:	or     ah,BYTE PTR [ebp+esi*1-0x613d394f]
  40e7f9:	out    0xf5,al
  40e7fb:	dec    esi
  40e7fc:	sti    
  40e7fd:	mov    edx,0x71e07f2d
  40e802:	jns    0x40e84d
  40e804:	adc    eax,0xd802b518
  40e809:	nop
  40e80a:	jo     0x40e793
  40e80c:	xchg   edi,eax
  40e80d:	adc    edi,ebx
  40e80f:	cmp    BYTE PTR [edi-0x80],0x20
  40e813:	inc    ecx
  40e814:	inc    esp
  40e815:	retf   
  40e816:	sub    eax,DWORD PTR [esi]
  40e818:	sbb    eax,0x8ac190be
  40e81d:	sub    ch,BYTE PTR [ebx]
  40e81f:	inc    esp
  40e820:	mov    ds:0xd3f68eb1,eax
  40e825:	mov    al,ds:0xeca6011d
  40e82a:	repnz sbb DWORD PTR [ecx],edi
  40e82d:	stos   BYTE PTR es:[edi],al
  40e82e:	and    al,BYTE PTR [ebp-0x5377f683]
  40e834:	js     0x40e858
  40e836:	cmc    
  40e837:	dec    edi
  40e838:	dec    esi
  40e839:	and    ebp,DWORD PTR [ecx]
  40e83b:	pop    es
  40e83c:	push   ds
  40e83d:	shl    DWORD PTR [esi-0x49],cl
  40e840:	es out 0xff,al
  40e843:	imul   ebx,DWORD PTR ds:0x85ab259a,0xcfd90b
  40e84d:	(bad)  
  40e84e:	call   0x5da8:0x51fc3ab3
  40e855:	mov    eax,ds:0x342fc2b0
  40e85a:	sbb    dh,bh
  40e85c:	jns    0x40e7fb
  40e85e:	sbb    ebp,DWORD PTR [esi+0xd]
  40e861:	shl    DWORD PTR [esi+0x3],0x66
  40e865:	or     DWORD PTR [ebx+0x4e8e9789],0x5e5ca93
  40e86f:	mov    ecx,0x9f7ad1fa
  40e874:	(bad)  
  40e875:	out    dx,eax
  40e876:	in     al,dx
  40e877:	or     eax,0x13073169
  40e87c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e87d:	mov    ss,WORD PTR [ebp-0x51]
  40e880:	aas    
  40e881:	pop    edx
  40e882:	in     al,0x81
  40e884:	ja     0x40e8e7
  40e886:	cdq    
  40e887:	jo     0x40e862
  40e889:	shr    DWORD PTR [esi],cl
  40e88b:	jno    0x40e860
  40e88d:	dec    ebp
  40e88e:	push   ecx
  40e88f:	push   ebx
  40e890:	jecxz  0x40e831
  40e892:	sti    
  40e893:	pop    es
  40e894:	(bad)  
  40e895:	loopne 0x40e885
  40e897:	fdivr  DWORD PTR [edi-0x52]
  40e89a:	loop   0x40e8d6
  40e89c:	and    eax,0x81bc69e5
  40e8a1:	xchg   ebp,eax
  40e8a2:	sbb    al,0xc6
  40e8a4:	retf   0xc8b4
  40e8a7:	in     eax,dx
  40e8a8:	sbb    cl,dh
  40e8aa:	adc    eax,0x3f383396
  40e8af:	imul   edi,DWORD PTR [edx+ecx*2],0x1e
  40e8b3:	nop
  40e8b4:	or     DWORD PTR [edi+0x70],edx
  40e8b7:	cdq    
  40e8b8:	aas    
  40e8b9:	sbb    cl,0xbc
  40e8bc:	cmp    BYTE PTR [ebp-0x5d8744e6],dl
  40e8c2:	sbb    eax,0xb6e108a1
  40e8c7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e8c8:	loop   0x40e864
  40e8ca:	int    0x17
  40e8cc:	(bad)  
  40e8cd:	cld    
  40e8ce:	dec    edi
  40e8cf:	push   cs
  40e8d0:	sbb    esi,DWORD PTR [esi+ebp*1]
  40e8d3:	pop    edx
  40e8d4:	mov    ch,BYTE PTR [ecx]
  40e8d6:	and    dh,BYTE PTR [eax+0x5a53b1ed]
  40e8dc:	sub    eax,DWORD PTR [edx+0x46]
  40e8df:	and    al,0xdd
  40e8e1:	mov    BYTE PTR [edx+0x31a5de78],ah
  40e8e7:	fldenv ds:0x47d9539
  40e8ed:	mov    ebp,0xa49aeab1
  40e8f2:	iret   
  40e8f3:	cmp    ebx,DWORD PTR [ebx+0x5724cb25]
  40e8f9:	pop    ds
  40e8fa:	inc    ebp
  40e8fb:	call   0x4d09:0x8cf7fe3d
  40e902:	mov    ebp,0xca0babaf
  40e907:	fwait
  40e908:	cmp    BYTE PTR [esi],ch
  40e90a:	call   0x2b49:0xb6abe5f3
  40e911:	adc    BYTE PTR ds:0xc4a7d95c,cl
  40e917:	call   0xe844:0xa087befc
  40e91e:	pop    ebx
  40e91f:	outs   dx,DWORD PTR ds:[esi]
  40e920:	out    0xab,al
  40e922:	cmp    eax,0xfb3efc31
  40e927:	fsubr  DWORD PTR [edx+0x2e2999fc]
  40e92d:	xor    al,0xb7
  40e92f:	or     BYTE PTR [ebp+ecx*8-0xe],0xd7
  40e934:	jb     0x40e9b0
  40e936:	in     eax,0xe8
  40e938:	fs pop edi
  40e93a:	es pop eax
  40e93c:	iret   
  40e93d:	int    0xb6
  40e93f:	push   ebx
  40e940:	xor    dl,BYTE PTR [ebx+0x27]
  40e943:	outs   dx,DWORD PTR ds:[esi]
  40e944:	cmp    cl,BYTE PTR [ebp+ecx*8+0x1a73bdc]
  40e94b:	mov    esp,0xd2233f07
  40e950:	call   0xca30f18b
  40e955:	xlat   BYTE PTR ds:[ebx]
  40e956:	sbb    ecx,DWORD PTR [edx+0x16]
  40e959:	stos   DWORD PTR es:[edi],eax
  40e95a:	data16 jl 0x40e987
  40e95d:	call   0xd3b0:0x89b32f80
  40e964:	mov    eax,0x6bcedaba
  40e969:	dec    eax
  40e96a:	mov    ebp,0x2a498f08
  40e96f:	cmp    al,0x7d
  40e971:	push   edx
  40e972:	pop    ss
  40e973:	push   ss
  40e974:	into   
  40e975:	retf   
  40e976:	xor    al,BYTE PTR [edx-0x3d2234b5]
  40e97c:	push   eax
  40e97d:	adc    edi,DWORD PTR [ecx]
  40e97f:	(bad)  
  40e980:	ss xchg edi,eax
  40e982:	scas   eax,DWORD PTR es:[edi]
  40e983:	loop   0x40e960
  40e985:	adc    cl,bh
  40e987:	loop   0x40e95e
  40e989:	mov    ebx,ebx
  40e98b:	sbb    ecx,edi
  40e98d:	fwait
  40e98e:	or     edx,ebp
  40e990:	adc    BYTE PTR [ebx+0x72],ch
  40e993:	cmc    
  40e994:	mov    al,0xf4
  40e996:	push   ds
  40e997:	jp     0x40e925
  40e999:	call   0x6d9aa065
  40e99e:	mov    edx,0x41768195
  40e9a3:	sbb    edx,DWORD PTR [ebx]
  40e9a5:	xchg   ch,dh
  40e9a7:	sbb    al,0xdc
  40e9a9:	cmp    ah,BYTE PTR [edx]
  40e9ab:	je     0x40e9f1
  40e9ad:	mov    ebx,0x3fa01ae1
  40e9b2:	lds    ebx,FWORD PTR [ecx-0x5b2fc2af]
  40e9b8:	loopne 0x40e9f4
  40e9ba:	sub    esi,esi
  40e9bc:	addps  xmm2,XMMWORD PTR [ecx+0x13]
  40e9c0:	enter  0x6892,0xbe
  40e9c4:	aad    0xb4
  40e9c6:	pop    eax
  40e9c7:	lods   eax,DWORD PTR ds:[esi]
  40e9c8:	stos   DWORD PTR es:[edi],eax
  40e9c9:	cwde   
  40e9ca:	in     al,0x51
  40e9cc:	inc    eax
  40e9cd:	popa   
  40e9ce:	sub    DWORD PTR [eax+0x76],esi
  40e9d1:	cld    
  40e9d2:	sbb    dl,BYTE PTR ds:[edi+0x47c1cc8a]
  40e9d9:	rol    ah,1
  40e9db:	inc    edi
  40e9dc:	pop    ss
  40e9dd:	stc    
  40e9de:	push   ebp
  40e9df:	(bad)  
  40e9e1:	call   0x60f0:0xfb77fb20
  40e9e8:	push   esp
  40e9e9:	(bad)  
  40e9ea:	jl     0x40e983
  40e9ec:	rcr    cl,cl
  40e9ee:	clc    
  40e9ef:	adc    dh,al
  40e9f1:	mov    ?,WORD PTR [ebx-0x35f4e6ad]
  40e9f7:	fldenv [ecx]
  40e9f9:	and    al,BYTE PTR [edi]
  40e9fb:	js     0x40e9ed
  40e9fd:	test   al,0x42
  40e9ff:	dec    ebx
  40ea00:	jns    0x40ea16
  40ea02:	sub    esi,esi
  40ea04:	inc    ebx
  40ea05:	dec    ebx
  40ea06:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ea07:	or     al,0x45
  40ea09:	or     eax,0x4a019950
  40ea0e:	repnz xchg ebp,eax
  40ea10:	mov    esi,0x9e87be69
  40ea15:	retf   
  40ea16:	xchg   ebx,eax
  40ea17:	sbb    eax,0x59225c35
  40ea1c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ea1d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ea1e:	xchg   DWORD PTR [ecx-0x1c],eax
  40ea21:	push   esi
  40ea22:	(bad)  
  40ea23:	mov    al,dh
  40ea25:	pop    edx
  40ea26:	(bad)  
  40ea28:	adc    eax,0x1ce6cbd1
  40ea2d:	lods   eax,DWORD PTR ds:[esi]
  40ea2e:	shl    DWORD PTR [edi+0x3f8ed0a5],0x2b
  40ea35:	push   edx
  40ea36:	ins    BYTE PTR es:[edi],dx
  40ea37:	int    0x2c
  40ea39:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ea3a:	mov    ebp,0xac759b72
  40ea3f:	cmp    dl,BYTE PTR [ebp+0x168e3046]
  40ea45:	mov    ds:0xa99e3fda,eax
  40ea4a:	test   eax,0xfbf5491b
  40ea4f:	aas    
  40ea50:	inc    ebx
  40ea51:	pop    esi
  40ea52:	loop   0x40eab1
  40ea54:	jl     0x40ea6f
  40ea56:	mov    bh,0xa0
  40ea58:	les    esp,FWORD PTR [ecx]
  40ea5a:	adc    bh,BYTE PTR [eax+0x57a590ba]
  40ea60:	aaa    
  40ea61:	jb     0x40ea1a
  40ea63:	add    al,0x33
  40ea65:	add    DWORD PTR [ebx-0x72a813e5],0x43
  40ea6c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ea6d:	cli    
  40ea6e:	test   al,0xbc
  40ea70:	pusha  
  40ea71:	aaa    
  40ea72:	cwde   
  40ea73:	aaa    
  40ea74:	push   edx
  40ea75:	jbe    0x40eaba
  40ea77:	hlt    
  40ea78:	(bad)  
  40ea79:	fld    TBYTE PTR [ebp-0x5a073ac2]
  40ea7f:	push   0xffffffd9
  40ea81:	ins    DWORD PTR es:[edi],dx
  40ea82:	in     eax,0x24
  40ea84:	test   eax,0x88328079
  40ea89:	repz fnstenv [ecx]
  40ea8c:	ds mov cl,0x41
  40ea8f:	dec    esp
  40ea90:	and    al,0x68
  40ea92:	out    dx,eax
  40ea93:	cmp    eax,0x97c98b27
  40ea98:	sbb    BYTE PTR [ebx-0x5b],bh
  40ea9b:	mov    edx,0xe916dd73
  40eaa0:	mov    ds,esp
  40eaa2:	push   edx
  40eaa3:	into   
  40eaa4:	sub    BYTE PTR [esi],ah
  40eaa6:	dec    ecx
  40eaa7:	popa   
  40eaa8:	enter  0xe39f,0xa8
  40eaac:	call   0xe5a988b5
  40eab1:	sub    al,0xfa
  40eab3:	aad    0x64
  40eab5:	jns    0x40ea7b
  40eab7:	mov    edi,0xd7c6ceef
  40eabc:	clc    
  40eabd:	popa   
  40eabe:	jle    0x40eac4
  40eac0:	mov    ebx,0x964222f3
  40eac5:	mov    dh,0x2f
  40eac7:	rol    dh,cl
  40eac9:	out    0xa3,al
  40eacb:	sub    DWORD PTR [edi-0x5a],0xffffffb5
  40eacf:	mov    dl,0xca
  40ead1:	mov    ds:0x6dc16b22,ax
  40ead7:	popa   
  40ead8:	push   0x76c8ba37
  40eadd:	sar    DWORD PTR [edx+0x79],1
  40eae0:	xchg   esi,eax
  40eae1:	jg     0x40eae7
  40eae3:	pop    ds
  40eae4:	bound  esi,QWORD PTR ds:0xbaf31e4d
  40eaea:	pop    esi
  40eaeb:	cmp    DWORD PTR ds:0xdc90832,ebx
  40eaf1:	in     al,dx
  40eaf2:	sar    DWORD PTR [edi],1
  40eaf4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40eaf5:	jge    0x40eb28
  40eaf7:	je     0x40eb2c
  40eaf9:	sub    ebp,DWORD PTR [ebp+edx*2-0x63f48d6c]
  40eb00:	shl    BYTE PTR [esi+0x58],0xdf
  40eb04:	xchg   edx,eax
  40eb05:	fsub   st(2),st
  40eb07:	lds    ebx,FWORD PTR [edi+ebx*8]
  40eb0a:	repnz or eax,DWORD PTR [eax+0x5e37257f]
  40eb11:	inc    edi
  40eb12:	stos   BYTE PTR es:[edi],al
  40eb13:	(bad)  
  40eb14:	ffree  st(7)
  40eb16:	jb     0x40eac2
  40eb18:	mov    eax,0x9886a740
  40eb1d:	mov    cl,0xdd
  40eb1f:	lock sbb al,0xae
  40eb22:	ins    BYTE PTR es:[edi],dx
  40eb23:	mov    al,ds:0xb855872f
  40eb28:	inc    edx
  40eb29:	inc    edi
  40eb2a:	out    0x71,eax
  40eb2c:	jp     0x40eb49
  40eb2e:	popa   
  40eb2f:	jp     0x40eb96
  40eb31:	ror    DWORD PTR [esi-0x71],0x5
  40eb35:	(bad)
  40eb38:	jle    0x40eac3
  40eb3a:	xlat   BYTE PTR ds:[ebx]
  40eb3b:	inc    esp
  40eb3c:	jb     0x40eb5c
  40eb3e:	mov    edi,0xb1e5a318
  40eb43:	xor    ch,al
  40eb45:	jp     0x40ead7
  40eb47:	push   es
  40eb48:	dec    ecx
  40eb49:	mov    ds:0x46d75fbb,eax
  40eb4e:	dec    esi
  40eb4f:	mov    ebx,0xc5fdc0dc
  40eb54:	and    edi,DWORD PTR [ecx-0x38]
  40eb57:	daa    
  40eb58:	pop    ss
  40eb59:	pop    ecx
  40eb5a:	hlt    
  40eb5b:	pop    ebp
  40eb5c:	bswap  edi
  40eb5e:	sbb    eax,0xd47f8436
  40eb63:	add    eax,0x30fa6173
  40eb68:	mov    ch,0xf
  40eb6a:	repnz stos BYTE PTR es:[edi],al
  40eb6c:	neg    DWORD PTR [ebx]
  40eb6e:	mov    edx,0x124330c3
  40eb73:	ss mov ah,0x3f
  40eb76:	push   esi
  40eb77:	stos   DWORD PTR es:[edi],eax
  40eb78:	popa   
  40eb79:	fcom   DWORD PTR ds:[ebx]
  40eb7c:	add    ecx,DWORD PTR [esi+0x67]
  40eb7f:	xchg   edx,eax
  40eb80:	dec    esi
  40eb81:	or     DWORD PTR [edi-0x78717bee],0x8ca2be3b
  40eb8b:	push   0xdce31c3c
  40eb90:	sbb    ch,BYTE PTR [esi+0x5]
  40eb93:	js     0x40ebb3
  40eb95:	xchg   esi,eax
  40eb96:	int3   
  40eb97:	pusha  
  40eb98:	xchg   BYTE PTR [edx],al
  40eb9a:	adc    ebp,DWORD PTR [ebp+0x2fe49cff]
  40eba0:	xchg   edi,eax
  40eba1:	sub    ebx,DWORD PTR [ebx-0x7584ecaf]
  40eba7:	cwde   
  40eba8:	lods   eax,DWORD PTR ds:[esi]
  40eba9:	ficom  DWORD PTR [ebp+0x16]
  40ebac:	bound  edx,QWORD PTR [eax+edi*4+0x19]
  40ebb0:	sbb    DWORD PTR [edi-0x78],esi
  40ebb3:	jo     0x40ec0d
  40ebb5:	jecxz  0x40ebfb
  40ebb7:	xchg   esp,eax
  40ebb8:	cmp    al,0x0
  40ebba:	stos   BYTE PTR es:[edi],al
  40ebbb:	es push ecx
  40ebbd:	inc    edx
  40ebbe:	or     al,0x2c
  40ebc0:	mov    ebp,DWORD PTR [esi]
  40ebc2:	out    0x7f,eax
  40ebc4:	inc    ebx
  40ebc5:	push   ss
  40ebc6:	xor    bh,BYTE PTR [esp+esi*4]
  40ebc9:	ret    0x986d
  40ebcc:	add    BYTE PTR [esi-0x2f],ch
  40ebcf:	out    dx,eax
  40ebd0:	push   es
  40ebd1:	adc    al,0x79
  40ebd3:	hlt    
  40ebd4:	jb     0x40ec1f
  40ebd6:	out    0x35,eax
  40ebd8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ebd9:	inc    edi
  40ebda:	push   DWORD PTR [ebp+0x76871ee5]
  40ebe0:	test   eax,0x4cf5857e
  40ebe5:	mov    ah,0xd7
  40ebe7:	mov    bl,al
  40ebe9:	xchg   ebp,eax
  40ebea:	xchg   edx,eax
  40ebeb:	out    dx,al
  40ebec:	imul   BYTE PTR [ebp-0x60]
  40ebef:	push   eax
  40ebf0:	arpl   bx,si
  40ebf2:	cdq    
  40ebf3:	in     al,dx
  40ebf4:	sar    DWORD PTR [eax+0x26dbfe7b],0x30
  40ebfb:	xchg   BYTE PTR [ebx+0x54],ch
  40ebfe:	imul   edi
  40ec00:	lock popf 
  40ec02:	cli    
  40ec03:	inc    edx
  40ec04:	inc    edi
  40ec05:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ec06:	fbld   TBYTE PTR [ebx]
  40ec08:	xor    BYTE PTR [ebp+0x77],bl
  40ec0b:	push   esp
  40ec0c:	jl     0x40ebf2
  40ec0e:	fdecstp 
  40ec10:	adc    al,0x6c
  40ec12:	push   edx
  40ec13:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ec14:	outs   dx,BYTE PTR ds:[esi]
  40ec15:	(bad)  
  40ec16:	iret   
  40ec17:	push   0x6249d59b
  40ec1c:	clc    
  40ec1d:	xchg   esp,eax
  40ec1e:	sbb    eax,0xcc655a5
  40ec23:	cmp    BYTE PTR [ebp+0x76e6f72d],0x10
  40ec2a:	dec    DWORD PTR [ebx+0x2562554d]
  40ec30:	pop    ebp
  40ec31:	data16 jne 0x40ec86
  40ec34:	add    dh,ah
  40ec36:	mov    dh,0x9a
  40ec38:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ec39:	and    al,0x51
  40ec3b:	shl    DWORD PTR [eax],cl
  40ec3d:	shl    DWORD PTR [ecx-0x7f],cl
  40ec40:	add    eax,eax
  40ec42:	lahf   
  40ec43:	inc    ebx
  40ec44:	pop    ebp
  40ec45:	inc    esp
  40ec46:	inc    edi
  40ec47:	addr16 mov ds:0x2047,al
  40ec4b:	sub    ah,BYTE PTR [edx*4-0x3195cae]
  40ec52:	adc    bl,bh
  40ec54:	lods   al,BYTE PTR ds:[esi]
  40ec55:	dec    ecx
  40ec56:	or     BYTE PTR [ecx],0xca
  40ec59:	retf   
  40ec5a:	inc    edi
  40ec5b:	sub    cl,0xe9
  40ec5e:	sub    esi,DWORD PTR [edi+0x53fc7535]
  40ec64:	mov    al,BYTE PTR [eax-0x2ee07bcf]
  40ec6a:	outs   dx,DWORD PTR ds:[esi]
  40ec6b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ec6c:	fs mov dh,0xd8
  40ec6f:	mov    al,0xf1
  40ec71:	mov    dh,0xf6
  40ec73:	mov    ?,WORD PTR [ebx]
  40ec75:	lods   eax,DWORD PTR ss:[esi]
  40ec77:	mov    ch,0x10
  40ec79:	add    DWORD PTR [edi+0x18fc9425],ecx
  40ec7f:	push   ds
  40ec80:	jmp    0x40ec60
  40ec82:	lahf   
  40ec83:	pop    ecx
  40ec84:	fiadd  DWORD PTR [eax]
  40ec86:	aas    
  40ec87:	add    al,BYTE PTR [ebx-0x1f42c9a0]
  40ec8d:	push   0x78
  40ec8f:	push   0x3b3b3403
  40ec94:	dec    eax
  40ec95:	lock mov dl,0x33
  40ec98:	(bad)
  40ec9b:	sbb    bl,al
  40ec9d:	or     BYTE PTR [ebp-0x4e],0x13
  40eca1:	pop    esp
  40eca2:	in     al,0xc5
  40eca4:	sub    dh,BYTE PTR [edi-0x46]
  40eca7:	dec    ebp
  40eca8:	test   DWORD PTR [ebp-0x1fb03c86],ebx
  40ecae:	neg    DWORD PTR [esi-0x57]
  40ecb1:	ret    
  40ecb2:	inc    eax
  40ecb3:	jecxz  0x40ecd8
  40ecb5:	dec    edx
  40ecb6:	add    al,0xbe
  40ecb8:	ret    
  40ecb9:	pop    edx
  40ecba:	sar    BYTE PTR [edi+0x66],1
  40ecbd:	push   eax
  40ecbe:	adc    BYTE PTR [eax+0x57],ch
  40ecc1:	add    BYTE PTR [eax-0x21],dl
  40ecc4:	pop    ecx
  40ecc5:	repnz add ebp,DWORD PTR [edx+0x8]
  40ecc9:	push   ds
  40ecca:	lods   eax,DWORD PTR ds:[esi]
  40eccb:	cld    
  40eccc:	shr    DWORD PTR [esi+0x750d0eca],cl
  40ecd2:	xchg   edi,eax
  40ecd3:	(bad)  
  40ecd4:	and    eax,0x1ba41a2
  40ecd9:	sbb    ebp,DWORD PTR [edi]
  40ecdb:	shr    BYTE PTR [bp+di+0xc],0x59
  40ece0:	xor    BYTE PTR [esi+0x49],bh
  40ece3:	pop    edx
  40ece4:	pop    ecx
  40ece5:	ret    
  40ece6:	test   al,0x99
  40ece8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ece9:	in     al,0x32
  40eceb:	nop
  40ecec:	xchg   ecx,eax
  40eced:	pop    es
  40ecee:	arpl   sp,si
  40ecf0:	xor    BYTE PTR [esi+0x4c],0xe
  40ecf4:	sbb    esp,DWORD PTR [ecx+0x5e1569ee]
  40ecfa:	mov    dl,0xbc
  40ecfc:	jae    0x40ed7c
  40ecfe:	add    BYTE PTR [edx-0x49b6c028],ah
  40ed04:	data16 mov ah,0x25
  40ed07:	sbb    BYTE PTR [esi-0x39a0929e],bl
  40ed0d:	xchg   DWORD PTR [ecx+0x71],ebx
  40ed10:	pop    ecx
  40ed11:	lods   eax,DWORD PTR ds:[esi]
  40ed12:	jne    0x40ed66
  40ed14:	loop   0x40ed90
  40ed16:	xor    eax,ecx
  40ed18:	mov    ah,0xcb
  40ed1a:	inc    ebp
  40ed1b:	in     al,dx
  40ed1c:	adc    cl,dh
  40ed1e:	daa    
  40ed1f:	inc    edi
  40ed20:	ss stos BYTE PTR es:[edi],al
  40ed22:	inc    eax
  40ed23:	mov    dl,0xa7
  40ed25:	dec    ebx
  40ed26:	repz in al,0xe7
  40ed29:	push   esi
  40ed2a:	out    0xf0,eax
  40ed2c:	jo     0x40ed31
  40ed2e:	fisub  WORD PTR [edx-0x59]
  40ed31:	xor    DWORD PTR [ebp+0x10],ecx
  40ed34:	pop    ebx
  40ed35:	jg     0x40ece7
  40ed37:	ret    0x3b35
  40ed3a:	jnp    0x40ed08
  40ed3c:	jae    0x40ed1f
  40ed3e:	out    dx,eax
  40ed3f:	hlt    
  40ed40:	rcr    bh,1
  40ed42:	cs in  eax,0x77
  40ed45:	not    DWORD PTR [ecx]
  40ed47:	out    0x3a,eax
  40ed49:	jae    0x40ece8
  40ed4b:	jge    0x40ecd2
  40ed4d:	mov    fs,WORD PTR ds:0x5a065fd7
  40ed53:	stos   DWORD PTR es:[edi],eax
  40ed54:	rol    DWORD PTR [esi],cl
  40ed56:	xchg   ebx,eax
  40ed57:	dec    edx
  40ed58:	fcomip st,st(7)
  40ed5a:	ror    ch,1
  40ed5c:	mov    cl,0x1b
  40ed5e:	xchg   edi,eax
  40ed5f:	mov    bl,0xd7
  40ed61:	and    dl,BYTE PTR [ecx-0x35657b6c]
  40ed67:	cmc    
  40ed68:	ja     0x40ede2
  40ed6a:	mov    edi,0x1dbe300a
  40ed6f:	pop    esi
  40ed70:	adc    eax,0x447ebd7d
  40ed75:	ret    0xebe7
  40ed78:	les    esi,FWORD PTR [ebx+0x7b709137]
  40ed7e:	xor    BYTE PTR [esi+0x68],bl
  40ed81:	jg     0x40ed2e
  40ed83:	cwde   
  40ed84:	arpl   WORD PTR [esi+edx*8],sp
  40ed87:	jnp    0x40ed41
  40ed89:	jb     0x40ede5
  40ed8b:	leave  
  40ed8c:	jp     0x40edf7
  40ed8e:	shr    DWORD PTR [esi-0x45],0xb4
  40ed92:	imul   eax,DWORD PTR [eax],0x58
  40ed95:	pop    eax
  40ed96:	ror    DWORD PTR [ebx],0xb1
  40ed99:	and    eax,0xebe0508
  40ed9e:	retf   0xb389
  40eda1:	xor    DWORD PTR [esi+esi*8],0xc464674d
  40eda8:	sub    al,0xf2
  40edaa:	js     0x40ee0c
  40edac:	(bad)  
  40edad:	lea    esp,[ecx]
  40edaf:	scas   al,BYTE PTR es:[edi]
  40edb0:	fistp  QWORD PTR [edx+0x10]
  40edb3:	sbb    bl,bh
  40edb5:	and    cl,BYTE PTR [esi+0x6f]
  40edb8:	push   0x6416dbc8
  40edbd:	push   cs
  40edbe:	xor    al,0x5b
  40edc0:	mov    edx,0x11a93da7
  40edc5:	idiv   DWORD PTR [eax+0x42154c8a]
  40edcb:	mov    edi,0x1aad49b4
  40edd0:	test   eax,0x3b71892a
  40edd5:	sub    ecx,DWORD PTR [eax+0x5e]
  40edd8:	es out dx,eax
  40edda:	(bad)  
  40eddb:	mov    ch,0xe3
  40eddd:	sahf   
  40edde:	loope  0x40ede2
  40ede0:	mov    dh,0x42
  40ede2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ede3:	mov    ebx,0x4132301d
  40ede8:	sti    
  40ede9:	adc    eax,0xc628de0d
  40edee:	xor    eax,0xce72e846
  40edf3:	adc    al,0x90
  40edf5:	push   esi
  40edf6:	cli    
  40edf7:	daa    
  40edf8:	add    BYTE PTR [edx+edi*4+0x1787906b],dl
  40edff:	jmp    0x40ee0f
  40ee01:	xlat   BYTE PTR ds:[ebx]
  40ee02:	inc    eax
  40ee03:	(bad)  
  40ee04:	sub    ecx,DWORD PTR ds:0xf3e87012
  40ee0a:	fistp  WORD PTR [ebp+0x64]
  40ee0d:	dec    ecx
  40ee0e:	rcr    ebp,0x36
  40ee11:	mov    ebp,0x456ed797
  40ee16:	ret    0x4352
  40ee19:	sub    BYTE PTR [edi+0x2bdfad8a],0xd9
  40ee20:	pushf  
  40ee21:	fisub  DWORD PTR [esi-0x37]
  40ee24:	jmp    FWORD PTR [ebp+0x542ef673]
  40ee2a:	iret   
  40ee2b:	ror    DWORD PTR [ebx+0x3410f343],cl
  40ee31:	mov    dh,0xf8
  40ee33:	(bad)  
  40ee34:	xchg   ecx,eax
  40ee35:	and    DWORD PTR [esi],eax
  40ee37:	(bad)  
  40ee38:	mov    ecx,DWORD PTR cs:[ecx+eax*2+0x56]
  40ee3d:	pop    es
  40ee3e:	mov    ebx,0xca2eca1b
  40ee43:	xor    al,0xa7
  40ee45:	mov    WORD PTR [edx+0x79b94312],?
  40ee4b:	bswap  ebp
  40ee4d:	or     eax,0xd3dbb2c9
  40ee52:	bound  eax,QWORD PTR [ebp+eiz*8+0xbf147ad]
  40ee59:	adc    DWORD PTR [edx],0x1
  40ee5c:	push   0xffffffde
  40ee5e:	int3   
  40ee5f:	sub    dh,BYTE PTR [edx-0x37e1a9b9]
  40ee65:	adc    eax,0xd634e6ea
  40ee6a:	jae    0x40ee3c
  40ee6c:	into   
  40ee6d:	xchg   edi,eax
  40ee6e:	push   ss
  40ee6f:	int    0x1b
  40ee71:	or     DWORD PTR [eax],ecx
  40ee73:	add    al,0x84
  40ee75:	jb     0x40eeb0
  40ee77:	jle    0x40eeb9
  40ee79:	gs inc ebx
  40ee7b:	jp     0x40eed8
  40ee7d:	push   ds
  40ee7e:	sbb    al,0xcb
  40ee80:	xor    edi,DWORD PTR [eax-0x56]
  40ee83:	jp     0x40eee9
  40ee85:	mov    ebx,0x66040d5d
  40ee8a:	pop    edx
  40ee8b:	arpl   WORD PTR [ecx+edi*8+0x2efb6045],dx
  40ee92:	pop    esi
  40ee93:	(bad)  
  40ee97:	dec    edi
  40ee98:	adc    al,0x3f
  40ee9a:	aad    0x25
  40ee9c:	ss xchg edx,eax
  40ee9e:	retf   0x919e
  40eea1:	loope  0x40eeab
  40eea3:	or     DWORD PTR [esp+edi*1+0x2e],0xb8faadbc
  40eeab:	push   es
  40eeac:	ja     0x40ee84
  40eeae:	arpl   WORD PTR [ebx+0x14],sp
  40eeb1:	out    dx,eax
  40eeb2:	sti    
  40eeb3:	(bad)  {z}
  40eeb8:	push   ds
  40eeb9:	pop    ecx
  40eeba:	sbb    DWORD PTR [edi],ebx
  40eebc:	mov    WORD PTR [edi],?
  40eebe:	iret   
  40eebf:	lea    esp,[ebx+0x67]
  40eec2:	in     eax,dx
  40eec3:	mov    dl,0x91
  40eec5:	xchg   ecx,eax
  40eec6:	pop    edi
  40eec7:	mov    esp,0xdcc4439d
  40eecc:	cwde   
  40eecd:	sbb    edi,edx
  40eecf:	push   eax
  40eed0:	clc    
  40eed1:	pop    edx
  40eed2:	lods   al,BYTE PTR ds:[esi]
  40eed3:	jmp    0xd04e:0x41d45368
  40eeda:	sub    al,0x47
  40eedc:	jmp    FWORD PTR [ebp-0x6f82903]
  40eee2:	leave  
  40eee3:	test   BYTE PTR [edx],ah
  40eee5:	cmp    BYTE PTR [ebp+0x5],dl
  40eee8:	or     eax,0x8e2b0a63
  40eeed:	dec    esp
  40eeee:	inc    ebp
  40eeef:	lahf   
  40eef0:	adc    DWORD PTR [eax],esi
  40eef2:	cld    
  40eef3:	icebp  
  40eef4:	pop    es
  40eef5:	adc    al,0xfb
  40eef7:	lods   al,BYTE PTR ds:[esi]
  40eef8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40eef9:	dec    ebp
  40eefa:	dec    esp
  40eefb:	in     al,0x8b
  40eefd:	mov    DWORD PTR [eax],ebx
  40eeff:	lock addr16 pop edi
  40ef02:	push   es
  40ef03:	cmc    
  40ef04:	jno    0x40ef0f
  40ef06:	xchg   esp,eax
  40ef07:	jne    0x40ee9f
  40ef09:	push   ecx
  40ef0a:	sub    edx,edi
  40ef0c:	xor    eax,0x761b62b4
  40ef11:	lds    ecx,FWORD PTR [ecx+0x346923e3]
  40ef17:	fcomp  QWORD PTR [edi+0x67af809c]
  40ef1d:	push   es
  40ef1e:	sub    BYTE PTR [edi+0x10e2972a],bl
  40ef24:	jecxz  0x40ef94
  40ef26:	daa    
  40ef27:	dec    ebp
  40ef28:	loope  0x40ef93
  40ef2a:	jo     0x40eeca
  40ef2c:	and    eax,0x46b671fa
  40ef31:	ret    
  40ef32:	loop   0x40ef30
  40ef34:	fcmovb st,st(1)
  40ef36:	xor    al,BYTE PTR [ecx+edx*1+0x69]
  40ef3a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ef3b:	enter  0x4a19,0x10
  40ef3f:	out    dx,eax
  40ef40:	mov    ah,BYTE PTR cs:[edi+0x2]
  40ef44:	jo     0x40ef07
  40ef46:	out    0x71,eax
  40ef48:	outs   dx,BYTE PTR ds:[esi]
  40ef49:	mov    cl,0xdf
  40ef4b:	aam    0x40
  40ef4d:	jmp    0x1d1c:0x233dc4af
  40ef54:	(bad)  
  40ef56:	sahf   
  40ef57:	xor    al,ch
  40ef59:	fdivr  DWORD PTR [edi]
  40ef5b:	add    ebp,DWORD PTR [eax]
  40ef5d:	pop    edi
  40ef5e:	test   al,0x59
  40ef60:	pop    esi
  40ef61:	sbb    BYTE PTR [ecx],ch
  40ef63:	int    0x12
  40ef65:	and    BYTE PTR [edx],bl
  40ef67:	icebp  
  40ef68:	(bad)  [ecx+0x3710954a]
  40ef6e:	or     ch,ah
  40ef70:	cmp    al,0x5a
  40ef72:	or     eax,DWORD PTR [edi+edi*1-0x719c0c00]
  40ef79:	xchg   esp,eax
  40ef7a:	aam    0x69
  40ef7c:	icebp  
  40ef7d:	or     bl,BYTE PTR [ebx-0x4a37062c]
  40ef83:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ef84:	pop    ebp
  40ef85:	scas   eax,DWORD PTR es:[edi]
  40ef86:	mov    ds:0xacf868b3,al
  40ef8b:	scas   eax,DWORD PTR es:[edi]
  40ef8c:	and    al,0x39
  40ef8e:	mov    BYTE PTR [ebx-0x704a0a2e],ah
  40ef94:	xchg   esi,eax
  40ef95:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ef96:	fimul  WORD PTR [edi-0x3c]
  40ef99:	pop    esi
  40ef9a:	adc    dl,BYTE PTR [edi-0x13]
  40ef9d:	ret    0x973e
  40efa0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40efa1:	stos   DWORD PTR es:[edi],eax
  40efa2:	aaa    
  40efa3:	mov    ebp,0x360004bc
  40efa8:	mov    ecx,0x9110e23a
  40efad:	jg     0x40f001
  40efaf:	iret   
  40efb0:	mov    esi,0xded3620
  40efb5:	adc    eax,0x6386e65c
  40efba:	mov    ch,0x31
  40efbc:	pop    edi
  40efbd:	inc    edi
  40efbe:	or     DWORD PTR [ecx+0x54e720ff],esp
  40efc4:	jae    0x40ef52
  40efc6:	push   es
  40efc7:	(bad)  
  40efc8:	(bad)  
  40efc9:	cwde   
  40efca:	push   esp
  40efcb:	jbe    0x40ef9c
  40efcd:	inc    esp
  40efce:	mov    ebx,0xa8d5fa62
  40efd3:	xor    BYTE PTR [ebx],cl
  40efd5:	out    0x6e,eax
  40efd7:	pop    esp
  40efd8:	jl     0x40eff7
  40efda:	adc    bh,BYTE PTR [eax]
  40efdc:	sbb    al,0x89
  40efde:	icebp  
  40efdf:	stos   DWORD PTR es:[edi],eax
  40efe0:	add    al,0x23
  40efe2:	add    DWORD PTR ds:0x1bf48f44,ecx
  40efe8:	xor    ch,BYTE PTR [ecx+0x2c]
  40efeb:	pusha  
  40efec:	push   edx
  40efed:	xchg   edi,eax
  40efee:	fisub  DWORD PTR [edi+0x42aac76a]
  40eff4:	ror    DWORD PTR [ecx-0x7660fe61],cl
  40effa:	push   eax
  40effb:	inc    ecx
  40effc:	mov    gs,WORD PTR [ebp+0x225c1f5e]
  40f002:	or     DWORD PTR [edx+0x16],ebx
  40f005:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f006:	jmp    0xf007:0x9ef7174d
  40f00d:	scas   al,BYTE PTR es:[edi]
  40f00e:	push   ebp
  40f00f:	inc    DWORD PTR [esp+ebp*1-0xe]
  40f013:	push   cs
  40f014:	fwait
  40f015:	push   ss
  40f016:	popa   
  40f017:	add    ebp,eax
  40f019:	stos   DWORD PTR es:[edi],eax
  40f01a:	push   ebp
  40f01b:	aas    
  40f01c:	jge    0x40f07a
  40f01e:	push   esp
  40f01f:	sub    al,bh
  40f021:	or     esi,DWORD PTR ds:0x2bd1bf22
  40f027:	jno    0x40f067
  40f029:	and    dh,BYTE PTR [esi]
  40f02b:	mov    dh,BYTE PTR [ebp+0x33bd2ee5]
  40f031:	pop    edx
  40f032:	cmp    edi,esp
  40f034:	jmp    0x40efbf
  40f036:	sbb    BYTE PTR [esi-0x3b3c151],al
  40f03c:	sbb    eax,0x90a0ea7f
  40f041:	cmp    edx,DWORD PTR ds:0x9743ccd9
  40f047:	mov    edx,0xe1fba02
  40f04c:	loop   0x40efd1
  40f04e:	out    dx,al
  40f04f:	in     al,0xcf
  40f051:	adc    dl,BYTE PTR [eax-0x55448121]
  40f057:	dec    edi
  40f058:	adc    al,BYTE PTR [ebp+0x22114adb]
  40f05e:	je     0x40f0cc
  40f060:	dec    edi
  40f061:	mov    cl,0x84
  40f063:	scas   eax,DWORD PTR es:[edi]
  40f064:	pop    ss
  40f065:	pop    esi
  40f066:	ds ja  0x40f06e
  40f069:	push   ebp
  40f06a:	scas   al,BYTE PTR es:[edi]
  40f06b:	sar    bl,0xc8
  40f06e:	js     0x40f04a
  40f070:	(bad)  
  40f071:	int    0x91
  40f073:	iret   
  40f074:	mov    eax,0x64a24ae3
  40f079:	stos   BYTE PTR es:[edi],al
  40f07a:	mov    ss,WORD PTR [ebx-0x3f]
  40f07d:	enter  0x8901,0x8a
  40f081:	imul   eax,DWORD PTR [edx+0x43],0x7b
  40f085:	xchg   esi,eax
  40f086:	(bad)  
  40f087:	fisttp WORD PTR [edi-0x10]
  40f08a:	jl     0x40f0aa
  40f08c:	call   0x5eee9296
  40f091:	adc    DWORD PTR [ebx],eax
  40f093:	adc    ch,BYTE PTR [edi]
  40f095:	xorps  xmm2,XMMWORD PTR [ebp+0x1e]
  40f099:	xchg   esp,eax
  40f09a:	sahf   
  40f09b:	(bad)  [ebx]
  40f09d:	dec    ebp
  40f09e:	ficomp DWORD PTR [eax]
  40f0a0:	mov    WORD PTR [edx-0x3b9041b2],?
  40f0a6:	ins    BYTE PTR es:[edi],dx
  40f0a7:	lods   al,BYTE PTR ds:[esi]
  40f0a8:	xor    esi,edi
  40f0aa:	stos   DWORD PTR es:[edi],eax
  40f0ab:	(bad)  
  40f0ac:	(bad)  
  40f0ad:	pop    edx
  40f0ae:	push   eax
  40f0af:	loope  0x40f088
  40f0b1:	or     ah,BYTE PTR [edi]
  40f0b3:	mov    al,0x86
  40f0b5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f0b6:	adc    dh,BYTE PTR [eax-0x57]
  40f0b9:	sahf   
  40f0ba:	pop    edx
  40f0bb:	jmp    0x196e:0x9551e5ba
  40f0c2:	xchg   edi,eax
  40f0c3:	mov    edx,0xf5cc1549
  40f0c8:	arpl   WORD PTR [eax-0x4ce4aef3],dx
  40f0ce:	pop    eax
  40f0cf:	mov    al,ds:0x974da18
  40f0d4:	shl    bh,0xdb
  40f0d7:	dec    DWORD PTR [edi+ebx*1-0x76f2fcf1]
  40f0de:	fcomp  st(0)
  40f0e0:	mov    ecx,0x7afda166
  40f0e5:	xchg   esi,eax
  40f0e6:	xor    ebx,edi
  40f0e8:	(bad)  
  40f0e9:	mov    WORD PTR [edi+0x2b],?
  40f0ec:	lahf   
  40f0ed:	sub    dh,dl
  40f0ef:	rcl    BYTE PTR [edi-0x2e],1
  40f0f2:	outs   dx,BYTE PTR ds:[esi]
  40f0f3:	cmp    BYTE PTR [esi],cl
  40f0f5:	jmp    0x40f0d3
  40f0f7:	retf   
  40f0f8:	or     DWORD PTR [edi-0x3f],edx
  40f0fb:	adc    BYTE PTR [edx+0x1a],0x39
  40f0ff:	rcl    bl,1
  40f101:	fst    QWORD PTR [ebx-0x7c24bb61]
  40f107:	ins    DWORD PTR es:[edi],dx
  40f108:	dec    ebx
  40f109:	test   BYTE PTR [ebp+0x8],dl
  40f10c:	imul   ebp,DWORD PTR [edi+0xd],0xffffff87
  40f110:	loopne 0x40f0ee
  40f112:	and    DWORD PTR [ebx],eax
  40f114:	mov    al,0xab
  40f116:	jae    0x40f0ea
  40f118:	lea    esi,[ebx+ebx*2]
  40f11b:	shl    DWORD PTR [esi+0x57a2f5e3],cl
  40f121:	out    0xd4,eax
  40f123:	loope  0x40f126
  40f125:	cmp    al,0xc
  40f127:	pop    edx
  40f128:	leave  
  40f129:	jno    0x40f10f
  40f12b:	fwait
  40f12c:	adc    edi,DWORD PTR [eax+0x5efd772b]
  40f132:	inc    edi
  40f133:	out    dx,al
  40f134:	sub    eax,DWORD PTR [edx+0x6c]
  40f137:	loope  0x40f0c7
  40f139:	ret    
  40f13a:	clc    
  40f13b:	stos   DWORD PTR es:[edi],eax
  40f13c:	shr    eax,0xd8
  40f13f:	les    ecx,FWORD PTR [esi]
  40f141:	hlt    
  40f142:	add    BYTE PTR [ecx+0x14e0df24],bh
  40f148:	or     ah,BYTE PTR [ecx+0x34]
  40f14b:	inc    esp
  40f14c:	sbb    al,0x53
  40f14e:	pop    edi
  40f14f:	mov    edx,0x3cba770b
  40f154:	ss popf 
  40f156:	cmp    BYTE PTR [esi],bh
  40f158:	inc    esp
  40f159:	dec    ebx
  40f15a:	stc    
  40f15b:	mov    ?,WORD PTR [ebp-0x47]
  40f15e:	mov    eax,ds:0xafeee0f5
  40f163:	or     ebp,DWORD PTR [edi-0x10a24074]
  40f169:	add    DWORD PTR [esi-0x40],eax
  40f16c:	ret    0xf39
  40f16f:	pop    ss
  40f170:	adc    edx,DWORD PTR [ebx]
  40f172:	cmp    esp,eax
  40f174:	addr16 mov esp,0x42dc3f5f
  40f17a:	add    ecx,DWORD PTR [ebx-0x2a]
  40f17d:	test   eax,0x5cc9babc
  40f182:	inc    ebp
  40f183:	lods   al,BYTE PTR ds:[esi]
  40f184:	inc    esp
  40f185:	mov    BYTE PTR [edx+ebx*4],dl
  40f188:	hlt    
  40f189:	fwait
  40f18a:	mov    ch,0x54
  40f18c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f18d:	test   al,0x26
  40f18f:	push   ebp
  40f190:	xor    BYTE PTR [esi],dl
  40f192:	(bad)  
  40f193:	daa    
  40f194:	sub    BYTE PTR [ebp+0x6d91f450],cl
  40f19a:	vfmsubpd xmm2,xmm6,xmm4,xmm3
  40f1a0:	iret   
  40f1a1:	sbb    dl,ah
  40f1a3:	mov    es,edi
  40f1a5:	loopne 0x40f1ce
  40f1a7:	xchg   ebp,eax
  40f1a8:	mov    eax,ds:0x19c67b1f
  40f1ad:	into   
  40f1ae:	retf   
  40f1af:	mov    dh,0x1f
  40f1b1:	xadd   DWORD PTR [edx+0x390c0159],ebp
  40f1b8:	cmp    esi,DWORD PTR [edi]
  40f1ba:	inc    edx
  40f1bb:	inc    ebx
  40f1bc:	retw   
  40f1be:	fcom   DWORD PTR [ebx+ecx*1-0x50e7541]
  40f1c5:	sbb    eax,0xba61d511
  40f1ca:	dec    esi
  40f1cb:	(bad)  
  40f1cc:	jmp    0x1500f917
  40f1d1:	in     eax,dx
  40f1d2:	or     al,0x1
  40f1d4:	mov    ecx,0xa5dad0c
  40f1da:	or     ebp,edx
  40f1dc:	xchg   ecx,eax
  40f1dd:	(bad)  
  40f1de:	sbb    ah,BYTE PTR [ecx-0x68]
  40f1e1:	add    ch,BYTE PTR [edi+0x60]
  40f1e4:	(bad)  
  40f1e5:	in     eax,0x38
  40f1e7:	jmp    0x4abf:0x25c9956e
  40f1ee:	sbb    al,0xdd
  40f1f0:	repz rcr eax,cl
  40f1f3:	inc    ebp
  40f1f4:	sbb    al,0xa3
  40f1f6:	fbstp  TBYTE PTR [esi+edi*1-0x6638dba7]
  40f1fd:	ins    DWORD PTR es:[edi],dx
  40f1fe:	cmp    eax,0x8a35352
  40f203:	adc    DWORD PTR [edi+eiz*8+0x7b65305f],eax
  40f20a:	adc    bh,dh
  40f20c:	add    edx,DWORD PTR [eax-0x56fd9e50]
  40f212:	jbe    0x40f198
  40f214:	dec    edi
  40f215:	jp     0x40f201
  40f217:	inc    esi
  40f218:	push   eax
  40f219:	sbb    al,0x45
  40f21b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f21c:	xchg   ecx,eax
  40f21d:	pusha  
  40f21e:	dec    eax
  40f21f:	inc    edx
  40f220:	and    al,0xfb
  40f222:	jmp    0xb2d9e37e
  40f227:	fcmove st,st(1)
  40f229:	xor    BYTE PTR [ebp+0x54],cl
  40f22c:	dec    esp
  40f22d:	in     eax,0xe7
  40f22f:	cdq    
  40f230:	xor    ch,bh
  40f232:	clc    
  40f233:	jmp    DWORD PTR [esi]
  40f235:	scas   al,BYTE PTR es:[edi]
  40f236:	ins    DWORD PTR es:[edi],dx
  40f237:	loop   0x40f1eb
  40f239:	xchg   edx,eax
  40f23a:	sub    al,0x3b
  40f23c:	inc    edi
  40f23d:	pop    ecx
  40f23e:	push   0xffffff9f
  40f240:	les    ebp,FWORD PTR [edi+edx*2-0x7f]
  40f244:	adc    eax,0x4285d7
  40f249:	scas   al,BYTE PTR es:[edi]
  40f24a:	jp     0x40f24c
  40f24c:	add    BYTE PTR [ebx-0x31fcef83],cl
  40f252:	mov    DWORD PTR ds:0x4285ff,0x246a
  40f25c:	cmp    ecx,edi
  40f25e:	mov    DWORD PTR ds:0x428627,0x3e93
  40f268:	je     0x40f379
  40f26e:	xor    edi,edi
  40f270:	mov    ecx,DWORD PTR [ebp-0x4]
  40f273:	not    edi
  40f275:	mov    edi,DWORD PTR [ebp+0x10]
  40f278:	sub    DWORD PTR ds:0x42863f,0x4adb
  40f282:	xor    eax,eax
  40f284:	adc    DWORD PTR ds:0x42865f,0x6085
  40f28e:	xor    ecx,edx
  40f290:	xor    DWORD PTR ds:0x42860b,0x42862f
  40f29a:	add    ecx,esi
  40f29c:	xor    DWORD PTR ds:0x4285d7,0x24ca
  40f2a6:	add    edi,0xfabdbedd
  40f2ac:	not    DWORD PTR ds:0x428617
  40f2b2:	adc    eax,0xffffffff
  40f2b5:	xor    eax,0x0
  40f2b8:	and    DWORD PTR ds:0x428663,0x428617
  40f2c2:	mov    DWORD PTR [ebp-0xc],eax
  40f2c5:	or     DWORD PTR ds:0x42866f,0x42864f
  40f2cf:	push   ebx
  40f2d0:	add    DWORD PTR ds:0x428647,ecx
  40f2d6:	xor    ebx,ebx
  40f2d8:	xor    edi,0x8a29a137
  40f2de:	mov    eax,ecx
  40f2e0:	add    eax,0xfabdbedd
  40f2e5:	adc    ebx,0xffffffff
  40f2e8:	xor    eax,0x8a29a137
  40f2ed:	xor    ebx,0x0
  40f2f0:	cmp    eax,edi
  40f2f2:	jne    0x40f30b
  40f2f8:	cmp    ebx,DWORD PTR [ebp-0xc]
  40f2fb:	je     0x40f373
  40f301:	jmp    0x40f30b
  40f306:	mov    esi,0x3272ec
  40f30b:	mov    eax,DWORD PTR [ebp-0x4]
  40f30e:	mov    edi,DWORD PTR [ebp-0x8]
  40f311:	xor    edi,edx
  40f313:	add    edi,esi
  40f315:	mov    esi,DWORD PTR [ebp+0x8]
  40f318:	imul   edi,ecx
  40f31b:	mov    ebx,DWORD PTR [ebp+0xc]
  40f31e:	xor    eax,edx
  40f320:	add    eax,ecx
  40f322:	mov    al,BYTE PTR [ebx+eax*1+0x3272ec]
  40f329:	mov    BYTE PTR [edi+esi*1],al
  40f32c:	mov    eax,DWORD PTR [ebp-0x8]
  40f32f:	mov    esi,DWORD PTR [ebp+0x10]
  40f332:	xor    eax,edx
  40f334:	xor    ebx,ebx
  40f336:	add    esi,0xfabdbedd
  40f33c:	adc    ebx,0xffffffff
  40f33f:	lea    ecx,[ecx+eax*1+0x3272ec]
  40f346:	xor    edi,edi
  40f348:	xor    esi,0x8a29a137
  40f34e:	xor    ebx,0x0
  40f351:	mov    eax,ecx
  40f353:	add    eax,0xfabdbedd
  40f358:	adc    edi,0xffffffff
  40f35b:	xor    eax,0x8a29a137
  40f360:	xor    edi,0x0
  40f363:	cmp    eax,esi
  40f365:	jne    0x40f306
  40f36b:	cmp    edi,ebx
  40f36d:	jne    0x40f306
  40f373:	mov    eax,0xf89c85b1
  40f378:	pop    ebx
  40f379:	pop    edi
  40f37a:	pop    esi
  40f37b:	leave  
  40f37c:	ret    0xc
  40f37f:	push   ebp
  40f380:	mov    ebp,esp
  40f382:	push   ecx
  40f383:	xor    DWORD PTR ds:0x428677,0x1e97
  40f38d:	mov    DWORD PTR [ebp-0x4],0xf89c85bc
  40f394:	dec    edx
  40f395:	mov    eax,DWORD PTR [ebp-0x4]
  40f398:	or     DWORD PTR ds:0x42862f,0x2902
  40f3a2:	mov    edx,DWORD PTR [ebp+0x10]
  40f3a5:	mov    ecx,0x75108a4
  40f3aa:	adc    DWORD PTR ds:0x428677,0x428657
  40f3b4:	xor    eax,ecx
  40f3b6:	add    eax,0x3272ec
  40f3bb:	or     DWORD PTR ds:0x42866b,0x4f38
  40f3c5:	mov    DWORD PTR [edx],eax
  40f3c7:	and    DWORD PTR ds:0x428603,0x0
  40f3d1:	jmp    0x40f3e1
  40f3d6:	mov    eax,ds:0x428603
  40f3db:	inc    eax
  40f3dc:	mov    ds:0x428603,eax
  40f3e1:	cmp    DWORD PTR ds:0x428603,0x17
  40f3e8:	jae    0x40f42d
  40f3ee:	cmp    DWORD PTR ds:0x428603,0x5
  40f3f5:	jge    0x40f42d
  40f3fb:	jmp    0x40f410
  40f400:	push   0x8c16
  40f405:	push   0x428617
  40f40a:	call   DWORD PTR ds:0x4287b3
  40f410:	cmp    DWORD PTR ds:0x428603,0x4
  40f417:	jne    0x40f428
  40f41d:	mov    eax,ds:0x428603
  40f422:	inc    eax
  40f423:	mov    ds:0x428603,eax
  40f428:	jmp    0x40f3d6
  40f42d:	mov    eax,DWORD PTR [ebp+0xc]
  40f430:	xor    eax,ecx
  40f432:	push   esi
  40f433:	mov    esi,DWORD PTR [ebp+0x10]
  40f436:	mov    edx,0x3272ec
  40f43b:	add    eax,edx
  40f43d:	mov    DWORD PTR [esi+0x4],eax
  40f440:	mov    eax,DWORD PTR [ebp+0x14]
  40f443:	mov    esi,DWORD PTR [ebp+0x10]
  40f446:	mov    DWORD PTR [esi+0x8],eax
  40f449:	mov    eax,DWORD PTR [ebp+0x18]
  40f44c:	mov    esi,DWORD PTR [ebp+0x10]
  40f44f:	mov    DWORD PTR [esi+0xc],eax
  40f452:	mov    eax,DWORD PTR [ebp+0x1c]
  40f455:	mov    esi,DWORD PTR [ebp+0x10]
  40f458:	mov    DWORD PTR [esi+0x10],eax
  40f45b:	mov    eax,DWORD PTR [ebp+0x8]
  40f45e:	xor    eax,ecx
  40f460:	add    eax,edx
  40f462:	pop    esi
  40f463:	leave  
  40f464:	ret    0x18
  40f467:	push   ebp
  40f468:	mov    ebp,esp
  40f46a:	sub    esp,0x9c
  40f470:	dec    ecx
  40f471:	mov    ecx,DWORD PTR [ebp+0x8]
  40f474:	mov    eax,0x8a94
  40f479:	sbb    DWORD PTR ds:0x428677,0x4285eb
  40f483:	xor    ax,WORD PTR [ecx+0x20]
  40f487:	mov    ecx,DWORD PTR ds:0x42864b
  40f48d:	sub    ecx,DWORD PTR ds:0x428673
  40f493:	mov    DWORD PTR ds:0x42864b,ecx
  40f499:	mov    ecx,0x3b56
  40f49e:	add    ax,cx
  40f4a1:	movzx  eax,ax
  40f4a4:	and    DWORD PTR ds:0x42865f,0x0
  40f4ae:	jmp    0x40f4c0
  40f4b3:	mov    ecx,DWORD PTR ds:0x42865f
  40f4b9:	inc    ecx
  40f4ba:	mov    DWORD PTR ds:0x42865f,ecx
  40f4c0:	cmp    DWORD PTR ds:0x42865f,0x11
  40f4c7:	jae    0x40f4ea
  40f4cd:	cmp    DWORD PTR ds:0x42865f,0x17
  40f4d4:	jge    0x40f4ea
  40f4da:	jmp    0x40f4e5
  40f4df:	call   DWORD PTR ds:0x4287b7
  40f4e5:	jmp    0x40f4b3
  40f4ea:	mov    DWORD PTR [ebp-0x10],eax
  40f4ed:	mov    BYTE PTR [ebp-0x1],0x7d
  40f4f1:	and    DWORD PTR ds:0x42863b,0x0
  40f4fb:	jmp    0x40f50d
  40f500:	mov    ecx,DWORD PTR ds:0x42863b
  40f506:	inc    ecx
  40f507:	mov    DWORD PTR ds:0x42863b,ecx
  40f50d:	cmp    DWORD PTR ds:0x42863b,0x11
  40f514:	jae    0x40f53a
  40f51a:	cmp    DWORD PTR ds:0x42863b,0x14
  40f521:	jg     0x40f53a
  40f527:	jmp    0x40f535
  40f52c:	push   DWORD PTR [ebp-0x1c]
  40f52f:	call   DWORD PTR ds:0x4287bb
  40f535:	jmp    0x40f500
  40f53a:	lea    eax,[ebp-0x1]
  40f53d:	xor    DWORD PTR ds:0x4285d7,0x262c
  40f547:	mov    DWORD PTR [ebp-0xc],eax
  40f54a:	inc    ecx
  40f54b:	mov    al,BYTE PTR [ebp-0x1]
  40f54e:	mov    ecx,DWORD PTR [ebp-0xc]
  40f551:	xor    al,0x79
  40f553:	sub    al,0x3
  40f555:	mov    BYTE PTR [ecx],al
  40f557:	mov    DWORD PTR [ebp-0x18],0xf89c85b0
  40f55e:	mov    eax,ds:0x428697
  40f563:	mov    ecx,DWORD PTR ds:0x4286db
  40f569:	sub    ecx,eax
  40f56b:	add    eax,DWORD PTR [eax+ecx*1]
  40f56e:	push   ebx
  40f56f:	and    DWORD PTR ds:0x428603,0x0
  40f579:	jmp    0x40f58c
  40f57e:	xor    eax,eax
  40f580:	add    eax,DWORD PTR ds:0x428603
  40f586:	inc    eax
  40f587:	mov    ds:0x428603,eax
  40f58c:	cmp    DWORD PTR ds:0x428603,0x10
  40f593:	jae    0x40f5e9
  40f599:	cmp    DWORD PTR ds:0x428603,0x7
  40f5a0:	jle    0x40f5e9
  40f5a6:	jmp    0x40f5c9
  40f5ab:	push   DWORD PTR [ebp-0x28]
  40f5ae:	push   0x428034
  40f5b3:	push   DWORD PTR [ebp-0x18]
  40f5b6:	push   0x428079
  40f5bb:	push   0x5a9e
  40f5c0:	push   DWORD PTR [ebp-0x14]
  40f5c3:	call   DWORD PTR ds:0x4287bf
  40f5c9:	cmp    DWORD PTR ds:0x428603,0x6
  40f5d0:	jne    0x40f5e4
  40f5d6:	xor    eax,eax
  40f5d8:	xor    eax,DWORD PTR ds:0x428603
  40f5de:	inc    eax
  40f5df:	mov    ds:0x428603,eax
  40f5e4:	jmp    0x40f57e
  40f5e9:	mov    DWORD PTR [ebp-0x8],0xf89c85b1
  40f5f0:	sbb    DWORD PTR ds:0x42861b,ecx
  40f5f6:	mov    ecx,DWORD PTR [ebp-0x18]
  40f5f9:	push   esi
  40f5fa:	mov    eax,0x75108a4
  40f5ff:	xor    esi,esi
  40f601:	or     esi,DWORD PTR ds:0x42869f
  40f607:	mov    esi,DWORD PTR [esi]
  40f609:	or     DWORD PTR ds:0x428633,esi
  40f60f:	xor    ecx,eax
  40f611:	xor    DWORD PTR ds:0x428613,ebx
  40f617:	mov    esi,0x3272ec
  40f61c:	push   edi
  40f61d:	or     DWORD PTR ds:0x4285ef,0x42867b
  40f627:	add    ecx,esi
  40f629:	mov    DWORD PTR ds:0x42867b,0x3def
  40f633:	jmp    0x40f64d
  40f638:	mov    DWORD PTR ds:0x428633,0x70a7
  40f642:	mov    dl,BYTE PTR [ebp-0x1]
  40f645:	mov    BYTE PTR [ebp+ecx*1-0x9c],dl
  40f64c:	inc    ecx
  40f64d:	mov    DWORD PTR ds:0x4285ef,0x74bd
  40f657:	cmp    ecx,0x40
  40f65a:	mov    DWORD PTR ds:0x42865f,0x4046
  40f664:	jb     0x40f638
  40f66a:	adc    edx,0xe49
  40f670:	mov    edx,DWORD PTR [ebp-0x18]
  40f673:	xor    edx,eax
  40f675:	sub    DWORD PTR ds:0x4285d3,0x203c
  40f67f:	add    edx,esi
  40f681:	jmp    0x411adf
  40f686:	mov    edi,DWORD PTR [ebp+0x8]
  40f689:	jmp    0x411a2a
  40f68e:	sub    ah,al
  40f690:	xor    al,0xf6
  40f692:	test   al,0xa6
  40f694:	mov    al,ds:0x7e506298
  40f699:	mov    edx,DWORD PTR [edi+0x42d61eea]
  40f69f:	mov    eax,ds:0x5ffe7a7a
  40f6a4:	jp     0x40f720
  40f6a6:	adc    al,0x6c
  40f6a8:	mov    edx,0xe8e51c26
  40f6ad:	cmp    ch,BYTE PTR [esi-0x76]
  40f6b0:	and    dh,ah
  40f6b2:	push   cs
  40f6b3:	mov    dl,0xe5
  40f6b5:	in     eax,dx
  40f6b6:	jmp    FWORD PTR [ebx+0x6f23dde7]
  40f6bc:	add    eax,0x8e15e3e9
  40f6c1:	dec    esi
  40f6c2:	lea    ebx,[edx]
  40f6c4:	sbb    eax,0xa6e48bac
  40f6c9:	push   ebp
  40f6ca:	aas    
  40f6cb:	pop    ebx
  40f6cc:	jg     0x40f66d
  40f6ce:	mov    edi,DWORD PTR [esi]
  40f6d0:	cmp    al,0xc3
  40f6d2:	fistp  WORD PTR [edx]
  40f6d4:	bound  ebp,QWORD PTR [edx]
  40f6d6:	sub    eax,0x8df51960
  40f6db:	dec    eax
  40f6dc:	cwde   
  40f6dd:	pop    ebp
  40f6de:	mov    al,0xf8
  40f6e0:	hlt    
  40f6e1:	aaa    
  40f6e2:	push   DWORD PTR ds:0x4cafffd2
  40f6e8:	fimul  DWORD PTR ds:0x105c35ae
  40f6ee:	loopne 0x40f689
  40f6f0:	outs   dx,BYTE PTR ds:[esi]
  40f6f1:	ret    0xfba0
  40f6f4:	fmul   QWORD PTR [esi-0x14]
  40f6f7:	daa    
  40f6f8:	mov    esi,0xc09d4989
  40f6fd:	mov    esi,0x83cc06c8
  40f702:	dec    ebx
  40f703:	sti    
  40f704:	stos   DWORD PTR es:[edi],eax
  40f705:	inc    ebx
  40f706:	ret    
  40f707:	es cmp eax,0x79049c97
  40f70d:	jle    0x40f783
  40f70f:	mov    fs,ecx
  40f711:	icebp  
  40f712:	add    al,0x78
  40f714:	sbb    DWORD PTR [esi-0x2dcf8c6],ebp
  40f71a:	cmc    
  40f71b:	retf   0x2cd4
  40f71e:	or     ah,ch
  40f720:	push   0x10
  40f722:	cmc    
  40f723:	add    BYTE PTR [ecx-0x2e7a4b10],bl
  40f729:	xor    edi,DWORD PTR ds:0xe50104ca
  40f72f:	jmp    0xdcce1da3
  40f734:	pop    esp
  40f735:	sub    al,0x45
  40f737:	xor    al,cl
  40f739:	ins    DWORD PTR es:[edi],dx
  40f73a:	xchg   edx,eax
  40f73b:	cli    
  40f73c:	jp     0x40f7a2
  40f73e:	lods   al,BYTE PTR ds:[esi]
  40f73f:	pop    ss
  40f740:	mov    ah,dl
  40f742:	aaa    
  40f743:	adc    ch,BYTE PTR [edx-0x41]
  40f746:	daa    
  40f747:	push   edi
  40f748:	or     DWORD PTR [ecx+ebp*8],ebx
  40f74b:	push   DWORD PTR [ebx-0x3a]
  40f74e:	mov    bl,BYTE PTR [esi+0x45b50ed6]
  40f754:	jl     0x40f731
  40f756:	lds    esi,FWORD PTR [ebp+0x36926f83]
  40f75c:	xchg   ebp,ebx
  40f75e:	aam    0xcd
  40f760:	and    bh,BYTE PTR [ebp+0x16]
  40f763:	scas   al,BYTE PTR es:[edi]
  40f764:	cmp    al,0x14
  40f766:	ja     0x40f735
  40f768:	clc    
  40f769:	push   ecx
  40f76a:	std    
  40f76b:	ja     0x40f7dc
  40f76d:	ret    
  40f76e:	in     eax,0x4b
  40f770:	cmp    bh,BYTE PTR [ebp-0x6aea3715]
  40f776:	pop    es
  40f777:	adc    eax,0x82a3913a
  40f77c:	dec    ecx
  40f77d:	sbb    BYTE PTR [ecx],bh
  40f77f:	idiv   cl
  40f781:	jp     0x40f800
  40f783:	sub    ecx,ebx
  40f785:	pop    eax
  40f786:	sbb    ax,0xecdd
  40f78a:	jo     0x40f7e1
  40f78c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f78d:	and    ch,al
  40f78f:	sub    edx,DWORD PTR [ebp+0x32]
  40f792:	push   ss
  40f793:	jno    0x40f7c7
  40f795:	int    0xf6
  40f797:	into   
  40f798:	das    
  40f799:	pop    es
  40f79a:	sahf   
  40f79b:	(bad)  
  40f79c:	mov    edi,0xe366326a
  40f7a1:	aam    0x2
  40f7a3:	ret    0x6d08
  40f7a6:	aaa    
  40f7a7:	loopne 0x40f7d8
  40f7a9:	imul   ebp,DWORD PTR [edi+0x65e5e6a3],0x21
  40f7b0:	inc    edi
  40f7b1:	and    ecx,0xffffffcf
  40f7b4:	fdivr  QWORD PTR [ebx-0x80]
  40f7b7:	mov    ebp,ds
  40f7b9:	sbb    al,0x8f
  40f7bb:	jle    0x40f7ea
  40f7bd:	loope  0x40f7d1
  40f7bf:	push   0x348ada54
  40f7c4:	and    al,0x74
  40f7c6:	xchg   esp,eax
  40f7c7:	test   bl,ah
  40f7c9:	int    0xa2
  40f7cb:	imul   edi,edi,0x7f8c8ff8
  40f7d1:	invd   
  40f7d3:	dec    ebx
  40f7d4:	xchg   BYTE PTR [ebp+0x506484c],al
  40f7da:	add    cl,BYTE PTR ds:0x120d6a2a
  40f7e0:	adc    al,BYTE PTR [edi-0xd]
  40f7e3:	sbb    al,0x85
  40f7e5:	inc    ecx
  40f7e6:	and    eax,0x333526ff
  40f7eb:	adc    BYTE PTR [esi-0x675596f2],bl
  40f7f1:	add    DWORD PTR [esi],ecx
  40f7f3:	(bad)  
  40f7f4:	jecxz  0x40f78c
  40f7f6:	mov    dl,0x60
  40f7f8:	mov    bh,0x7a
  40f7fa:	mov    ecx,0xcb5ba1b
  40f7ff:	adc    edx,DWORD PTR [edi]
  40f801:	cmp    dh,BYTE PTR [ebx+0x7f1b8355]
  40f807:	ja     0x40f80d
  40f809:	sbb    edx,ecx
  40f80b:	dec    edi
  40f80c:	mov    cl,BYTE PTR [eax+0x15]
  40f80f:	ins    BYTE PTR es:[edi],dx
  40f810:	pop    edx
  40f811:	xor    cl,BYTE PTR [ecx+0x0]
  40f814:	jecxz  0x40f7ee
  40f816:	lods   al,BYTE PTR ds:[esi]
  40f817:	retf   
  40f818:	shl    BYTE PTR [ecx+0x3d2113a0],cl
  40f81e:	adc    cl,al
  40f820:	in     eax,dx
  40f821:	inc    esp
  40f822:	(bad)  
  40f823:	xchg   ebp,eax
  40f824:	jge    0x40f7aa
  40f826:	xor    BYTE PTR [esi-0x4a2fd0e6],dl
  40f82c:	mov    edi,0x84d2c642
  40f831:	dec    eax
  40f832:	push   ds
  40f833:	lods   al,BYTE PTR ds:[esi]
  40f834:	add    al,0xd2
  40f836:	es nop
  40f838:	mov    ebp,0x67a2982c
  40f83d:	(bad)  
  40f83e:	sti    
  40f83f:	jge    0x40f7ea
  40f841:	and    bl,BYTE PTR [ebx-0x1c]
  40f844:	jb     0x40f7f9
  40f846:	xor    dh,cl
  40f848:	xchg   esi,eax
  40f849:	add    cl,BYTE PTR [eax-0x554cef54]
  40f84f:	pusha  
  40f850:	pop    edi
  40f851:	cmp    al,0xdb
  40f853:	ins    DWORD PTR es:[edi],dx
  40f854:	jnp    0x40f885
  40f856:	std    
  40f857:	mov    ah,0x56
  40f859:	ret    
  40f85a:	dec    eax
  40f85b:	xchg   edx,eax
  40f85c:	outs   dx,BYTE PTR ds:[esi]
  40f85d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f85e:	pop    eax
  40f85f:	mov    al,ds:0xaefe14ba
  40f864:	arpl   WORD PTR ss:[ebx],sp
  40f867:	cmp    BYTE PTR [ebx+0x4d],0xbb
  40f86b:	inc    esi
  40f86c:	sub    eax,0x77c15acc
  40f871:	xchg   ecx,eax
  40f872:	and    BYTE PTR [ebx],ah
  40f874:	das    
  40f875:	lock add cl,BYTE PTR [edi+0x2e]
  40f879:	jmp    0xea3c:0xd65d00f3
  40f880:	pop    es
  40f881:	ins    BYTE PTR es:[edi],dx
  40f882:	pusha  
  40f883:	mov    bl,0xa0
  40f885:	ds push edi
  40f887:	popf   
  40f888:	inc    esp
  40f889:	lahf   
  40f88a:	rol    DWORD PTR [ecx],1
  40f88c:	push   esp
  40f88d:	out    0xd7,al
  40f88f:	cmp    al,al
  40f891:	sbb    esp,DWORD PTR [ecx+ebp*4-0x7d]
  40f895:	int3   
  40f896:	bound  ebx,QWORD PTR [edx]
  40f898:	sub    BYTE PTR [ebx],cl
  40f89a:	mov    WORD PTR [edi],cs
  40f89c:	addr16 jnp 0x40f89f
  40f89f:	paddsb mm1,QWORD PTR [ebx+0x50dd095]
  40f8a6:	shl    bh,1
  40f8a8:	sub    ecx,DWORD PTR [ebp+0x72]
  40f8ab:	sbb    eax,0x7e99367e
  40f8b0:	push   0xffffff8b
  40f8b2:	cmp    al,al
  40f8b4:	arpl   WORD PTR [ebp-0x3a],di
  40f8b7:	mov    BYTE PTR [ebx-0x1f189d03],bl
  40f8bd:	clc    
  40f8be:	fst    DWORD PTR [ebp+0x481ec6be]
  40f8c4:	je     0x40f90f
  40f8c6:	shr    ecx,cl
  40f8c8:	dec    edx
  40f8c9:	adc    al,0x32
  40f8cb:	data16 jae 0x40f8e5
  40f8ce:	xchg   edi,eax
  40f8cf:	test   al,0xeb
  40f8d1:	sahf   
  40f8d2:	or     BYTE PTR [edx-0x1f8739ef],0xf1
  40f8d9:	dec    edi
  40f8da:	loopne 0x40f8cb
  40f8dc:	ror    DWORD PTR [edx+0x68],cl
  40f8df:	(bad)  [eax+0x63]
  40f8e2:	outs   dx,DWORD PTR ds:[esi]
  40f8e3:	pop    ds
  40f8e4:	sbb    ebp,DWORD PTR [esi+0x1c]
  40f8e7:	fcmovu st,st(7)
  40f8e9:	aam    0xfe
  40f8eb:	fwait
  40f8ec:	add    DWORD PTR [esi-0x4f2c65c5],ebx
  40f8f2:	push   ss
  40f8f3:	pop    esi
  40f8f4:	pushf  
  40f8f5:	pop    ecx
  40f8f6:	mov    eax,ds:0xbcf392c4
  40f8fb:	ins    DWORD PTR es:[edi],dx
  40f8fc:	xor    eax,0xb6925988
  40f901:	test   BYTE PTR [ebp+0x17],bh
  40f904:	(bad)  
  40f905:	xor    ebp,DWORD PTR [ecx]
  40f907:	push   ecx
  40f908:	into   
  40f909:	aam    0x12
  40f90b:	retf   
  40f90c:	jecxz  0x40f93b
  40f90e:	lods   al,BYTE PTR ds:[esi]
  40f90f:	pop    esi
  40f910:	jg     0x40f8f0
  40f912:	jbe    0x40f8df
  40f914:	sbb    DWORD PTR [ebp-0xed483f9],esi
  40f91a:	fisub  DWORD PTR [esi+0x4f31cea8]
  40f920:	sub    DWORD PTR [edx],eax
  40f922:	clc    
  40f923:	stc    
  40f924:	dec    esp
  40f925:	pop    esi
  40f926:	pop    ecx
  40f927:	pusha  
  40f928:	mov    eax,ds:0x545482d1
  40f92d:	sbb    BYTE PTR [edi+0x3d],ch
  40f930:	jno    0x40f984
  40f932:	aad    0xfb
  40f934:	out    0xa,eax
  40f936:	iret   
  40f937:	sub    al,0xc1
  40f939:	mov    ah,0xbf
  40f93b:	test   DWORD PTR [edi],ecx
  40f93d:	jno    0x40f988
  40f93f:	cmp    eax,0x3d487ab7
  40f944:	mov    al,0xb4
  40f946:	pop    edi
  40f947:	pop    edi
  40f948:	arpl   WORD PTR [edi+eiz*1+0x597aabcf],bx
  40f94f:	push   0xf5b8d942
  40f954:	aad    0xfe
  40f956:	sub    al,0x21
  40f958:	or     al,0xc
  40f95a:	data16 scas al,BYTE PTR es:[edi]
  40f95c:	xchg   esi,eax
  40f95d:	xor    BYTE PTR [ebp+0x2d],ch
  40f960:	retf   0x8198
  40f963:	lds    edi,FWORD PTR [edi+0x53]
  40f966:	repz addr16 stc 
  40f969:	and    BYTE PTR [eax+0x2e56c954],bl
  40f96f:	call   0x3259:0xe8e1bc20
  40f976:	(bad)  
  40f977:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f978:	pop    ss
  40f979:	mov    edi,0x753b3699
  40f97e:	cmp    al,0x3f
  40f980:	xor    cl,BYTE PTR [ebx+edi*1+0x6179c4f]
  40f987:	mov    WORD PTR [ebp+edx*8+0x61d3a263],?
  40f98e:	mov    dl,0xef
  40f990:	inc    esi
  40f991:	lds    esi,FWORD PTR [ecx-0xd90e27d]
  40f997:	cmp    ebp,DWORD PTR [edx-0x2b]
  40f99a:	ins    DWORD PTR es:[edi],dx
  40f99b:	pushf  
  40f99c:	adc    DWORD PTR [edi+0x56c80908],0x5bf4c086
  40f9a6:	shl    cl,0x91
  40f9a9:	mov    cs,WORD PTR [edx]
  40f9ab:	pop    eax
  40f9ac:	push   edi
  40f9ad:	sbb    eax,0x1f390919
  40f9b2:	sbb    al,0xee
  40f9b4:	jae    0x40f951
  40f9b6:	ins    BYTE PTR es:[edi],dx
  40f9b7:	sub    bl,ch
  40f9b9:	add    eax,0x803b7350
  40f9be:	adc    DWORD PTR [esi+0x5e43f98c],eax
  40f9c4:	scas   eax,DWORD PTR es:[edi]
  40f9c5:	enter  0xada9,0xed
  40f9c9:	jmp    0x99f:0x3f2c2452
  40f9d0:	mov    bh,0xb0
  40f9d2:	and    eax,0x9453de3e
  40f9d7:	out    0xd,eax
  40f9d9:	push   0x47
  40f9db:	pop    esi
  40f9dc:	add    DWORD PTR [ebp-0x23],esp
  40f9df:	xchg   edi,eax
  40f9e0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f9e1:	dec    ebx
  40f9e2:	pop    ecx
  40f9e3:	cmp    DWORD PTR [ebx],edx
  40f9e5:	jb     0x40fa21
  40f9e7:	mov    esp,0xec8873b5
  40f9ec:	xchg   esp,eax
  40f9ed:	pusha  
  40f9ee:	cwde   
  40f9ef:	mov    ecx,0xc1ee03ef
  40f9f4:	jns    0x40f97c
  40f9f6:	sahf   
  40f9f7:	fwait
  40f9f8:	push   cs
  40f9f9:	push   esi
  40f9fa:	mov    WORD PTR [edi+0x2788fcf3],fs
  40fa00:	jne    0x40f9e6
  40fa02:	scas   al,BYTE PTR es:[edi]
  40fa03:	imul   esp,DWORD PTR [ecx+0x2a],0x40
  40fa07:	mov    edx,0xf023698e
  40fa0c:	mov    dh,0xcf
  40fa0e:	inc    eax
  40fa0f:	daa    
  40fa10:	div    DWORD PTR [ebp-0x34c91246]
  40fa16:	cmp    eax,0x87a621f1
  40fa1b:	pop    edi
  40fa1c:	in     al,dx
  40fa1d:	mov    dl,0x99
  40fa1f:	fisubr DWORD PTR [ebp-0x5ea5eebf]
  40fa25:	xor    al,0x10
  40fa27:	pop    edi
  40fa28:	fdivr  st,st(5)
  40fa2a:	int3   
  40fa2b:	jno    0x40f9f4
  40fa2d:	xchg   edx,ecx
  40fa2f:	jp     0x40fa45
  40fa31:	clc    
  40fa32:	jle    0x40fa76
  40fa34:	xchg   ecx,eax
  40fa35:	and    al,0x80
  40fa37:	rcl    DWORD PTR [edx-0x7254ae3d],cl
  40fa3d:	ds sahf 
  40fa3f:	dec    ebp
  40fa40:	fld    st(6)
  40fa42:	int3   
  40fa43:	cmp    eax,0xa1d8940c
  40fa48:	mov    esi,0xd4ef4182
  40fa4d:	xchg   esp,eax
  40fa4e:	or     eax,DWORD PTR [edx]
  40fa50:	and    eax,0xffffffc0
  40fa53:	scas   eax,DWORD PTR es:[edi]
  40fa54:	je     0x40fad4
  40fa56:	dec    edx
  40fa57:	fisubr DWORD PTR [edi-0x20]
  40fa5a:	sbb    DWORD PTR [edx+0x4df72f99],0x0
  40fa61:	cwde   
  40fa62:	sub    bh,BYTE PTR [edx+0x8]
  40fa65:	pop    edi
  40fa66:	xchg   ebx,eax
  40fa67:	in     al,dx
  40fa68:	out    0xa9,eax
  40fa6a:	push   0xffffffbe
  40fa6c:	adc    BYTE PTR [edx],dh
  40fa6e:	sbb    BYTE PTR [ecx],ah
  40fa70:	daa    
  40fa71:	test   dl,0x9b
  40fa74:	and    DWORD PTR [eax+eax*2+0x42],esi
  40fa78:	and    esp,ebp
  40fa7a:	inc    edx
  40fa7b:	outs   dx,BYTE PTR ds:[esi]
  40fa7c:	and    dh,BYTE PTR [esi-0x3]
  40fa7f:	cmc    
  40fa80:	in     al,0x3c
  40fa82:	shl    BYTE PTR [edi-0x245fdb50],1
  40fa88:	mov    ecx,0x2eb36798
  40fa8d:	imul   esi,DWORD PTR [ebx],0xffffffe6
  40fa90:	jle    0x40fa7f
  40fa92:	sbb    al,BYTE PTR [ecx-0x17]
  40fa95:	cmc    
  40fa96:	pusha  
  40fa97:	adc    ecx,DWORD PTR [esi+0x5c]
  40fa9a:	sti    
  40fa9b:	pop    edx
  40fa9c:	jne    0x40fb00
  40fa9e:	test   BYTE PTR ds:0x969084a1,ah
  40faa4:	jo     0x40fac7
  40faa6:	jmp    0x4605:0x594ef9ae
  40faad:	inc    ecx
  40faae:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40faaf:	dec    ecx
  40fab0:	jno    0x40fa5f
  40fab2:	(bad)  
  40fab3:	jne    0x40fad6
  40fab5:	scas   al,BYTE PTR es:[edi]
  40fab6:	stc    
  40fab7:	inc    esi
  40fab8:	adc    DWORD PTR [esi+edx*4-0x41dd08c5],eax
  40fabf:	fs mov edi,es
  40fac2:	pop    ss
  40fac3:	rol    DWORD PTR ds:0xb5bca79e,cl
  40fac9:	push   0xffffffe2
  40facb:	mov    bl,0x58
  40facd:	in     eax,dx
  40face:	aam    0x84
  40fad0:	sbb    eax,0x5cb58700
  40fad5:	xor    eax,0x18578c26
  40fada:	fild   DWORD PTR [eax+0x4b]
  40fadd:	cmp    BYTE PTR [edx+ebp*8-0x620b09c9],dl
  40fae4:	fs fmul st(2),st
  40fae7:	mov    esi,0x84c1c8ba
  40faec:	jmp    0x890a:0xf63a28c6
  40faf3:	push   es
  40faf4:	scas   eax,DWORD PTR es:[edi]
  40faf5:	arpl   sp,cx
  40faf7:	ret    0x7ebb
  40fafa:	cmp    al,0xa
  40fafc:	adc    eax,0xa7c7ad9a
  40fb01:	adc    bh,BYTE PTR [edx]
  40fb03:	idiv   BYTE PTR es:[edi-0x3a10967a]
  40fb0a:	popa   
  40fb0b:	cdq    
  40fb0c:	push   es
  40fb0d:	div    DWORD PTR [di+0x3b]
  40fb11:	inc    edi
  40fb12:	pop    es
  40fb13:	adc    al,0xcf
  40fb15:	push   ds
  40fb16:	rcl    BYTE PTR [eax],0x11
  40fb19:	sub    cl,al
  40fb1b:	mov    ah,0x6a
  40fb1d:	rol    BYTE PTR [ecx+0x25],1
  40fb20:	(bad)  
  40fb21:	popa   
  40fb22:	lock ins BYTE PTR es:[edi],dx
  40fb24:	sbb    esi,DWORD PTR [esi+ebp*8+0x953af9d]
  40fb2b:	pop    esi
  40fb2c:	loope  0x40fb6b
  40fb2e:	in     eax,dx
  40fb2f:	icebp  
  40fb30:	inc    ebp
  40fb31:	jae    0x40fab8
  40fb33:	adc    bh,cl
  40fb35:	adc    al,0x38
  40fb37:	push   cs
  40fb38:	jp     0x40fb83
  40fb3a:	mov    ds:0xb4828554,al
  40fb3f:	test   BYTE PTR [edi-0x7d7bbe04],dl
  40fb45:	in     al,0xaa
  40fb47:	or     eax,0xa42bff5b
  40fb4c:	cmovp  ecx,DWORD PTR fs:0x42fe9afa
  40fb54:	pop    esp
  40fb55:	pop    eax
  40fb56:	mov    ds:0x9dfbd53b,al
  40fb5b:	int    0x63
  40fb5d:	push   edx
  40fb5e:	sbb    BYTE PTR [ebx-0xc],ah
  40fb61:	pusha  
  40fb62:	jae    0x40fbd6
  40fb64:	lock jb 0x40faed
  40fb67:	push   cs
  40fb68:	int    0x2c
  40fb6a:	sbb    ebx,DWORD PTR [ebx-0x1a4c5ded]
  40fb70:	add    eax,0xaa113da9
  40fb75:	xchg   DWORD PTR [ecx],edi
  40fb77:	cmp    dl,BYTE PTR [edx+0x8097336]
  40fb7d:	push   ecx
  40fb7e:	jae    0x40fb4b
  40fb80:	sub    BYTE PTR [esi-0x4f1d278a],bl
  40fb86:	mov    esi,0xb3f5cdd6
  40fb8b:	scas   eax,DWORD PTR es:[edi]
  40fb8c:	jge    0x40fbcf
  40fb8e:	cs xchg ebp,eax
  40fb90:	or     eax,DWORD PTR [edx+esi*8-0x2c]
  40fb94:	xchg   BYTE PTR [edx+0x76],ch
  40fb97:	call   0xa127:0x3a595868
  40fb9e:	ss add eax,0xbe6b1137
  40fba4:	cs iret 
  40fba6:	mov    WORD PTR [edi+0x48],fs
  40fba9:	or     DWORD PTR [edx+0x59b6dd21],ebp
  40fbaf:	daa    
  40fbb0:	sti    
  40fbb1:	xor    ebx,DWORD PTR [esi+ebp*4]
  40fbb4:	push   esp
  40fbb5:	inc    ecx
  40fbb6:	push   cs
  40fbb7:	mov    bl,0x91
  40fbb9:	ds push cs
  40fbbb:	add    al,BYTE PTR [edx]
  40fbbd:	jge    0x40fc11
  40fbbf:	mov    eax,ds:0xb39e306c
  40fbc4:	or     edx,DWORD PTR [edi+0x273914fb]
  40fbca:	(bad)  
  40fbcb:	push   eax
  40fbcc:	std    
  40fbcd:	inc    edx
  40fbce:	adc    al,0x3f
  40fbd0:	xor    eax,0xbd766206
  40fbd5:	push   ds
  40fbd6:	mov    esi,0x1f09a8d4
  40fbdb:	test   eax,0xb41cab31
  40fbe0:	je     0x40fbcd
  40fbe2:	cmp    eax,0xa6c5d1f1
  40fbe7:	push   edi
  40fbe8:	das    
  40fbe9:	or     DWORD PTR [edx-0x11b69f36],eax
  40fbef:	xchg   edx,eax
  40fbf0:	sbb    edx,DWORD PTR [ecx+0x46f0c7b5]
  40fbf6:	inc    ebp
  40fbf7:	(bad)  
  40fbf8:	jno    0x40fb7a
  40fbfa:	inc    ecx
  40fbfb:	dec    ebx
  40fbfc:	retf   0xd675
  40fbff:	pop    edx
  40fc00:	daa    
  40fc01:	in     al,dx
  40fc02:	ins    BYTE PTR es:[edi],dx
  40fc03:	leave  
  40fc04:	fxch   st(0)
  40fc06:	pop    ds
  40fc07:	jno    0x40fc4a
  40fc09:	sub    BYTE PTR [ebx-0x19],ah
  40fc0c:	and    dh,BYTE PTR [ecx+0x5a]
  40fc0f:	add    dh,cl
  40fc11:	push   cs
  40fc12:	vshufps ymm7,ymm5,YMMWORD PTR [ebx+ebx*1+0x32e5f0cc],0x6a
  40fc1c:	daa    
  40fc1d:	push   eax
  40fc1e:	repnz scas eax,DWORD PTR es:[edi]
  40fc20:	loopne 0x40fc5f
  40fc22:	mov    eax,0x31bf5851
  40fc27:	enter  0x8dba,0xc0
  40fc2b:	xchg   ecx,eax
  40fc2c:	bound  ecx,QWORD PTR [ecx-0x17523753]
  40fc32:	(bad)  
  40fc33:	jne    0x40fc76
  40fc35:	ins    BYTE PTR es:[edi],dx
  40fc36:	into   
  40fc37:	cmp    bh,BYTE PTR ss:[ebx-0x46f77c21]
  40fc3e:	rol    edi,0x54
  40fc41:	mov    al,ds:0x2cb47fb9
  40fc46:	popa   
  40fc47:	sbb    DWORD PTR [ecx+eax*2],0x54e65ea8
  40fc4e:	push   eax
  40fc4f:	sbb    eax,ebx
  40fc51:	or     DWORD PTR [esi-0x29],0x53282081
  40fc58:	add    eax,0xe4cebd3d
  40fc5d:	push   cs
  40fc5e:	jne    0x40fc06
  40fc60:	or     al,0xae
  40fc62:	push   eax
  40fc63:	or     bh,cl
  40fc65:	loopne 0x40fc7f
  40fc67:	test   DWORD PTR [ebp+0x1068414c],ebx
  40fc6d:	mov    ecx,0xc9ab7c43
  40fc72:	push   ebx
  40fc73:	mov    eax,ds:0x9f07d511
  40fc78:	push   esp
  40fc79:	mov    al,0xc1
  40fc7b:	dec    eax
  40fc7c:	aam    0xe4
  40fc7e:	icebp  
  40fc7f:	fsubr  QWORD PTR [ecx-0x22a6b181]
  40fc85:	push   ds
  40fc86:	jmp    ebx
  40fc88:	inc    esi
  40fc89:	sahf   
  40fc8a:	mov    ebp,0xd42f37c8
  40fc8f:	dec    edx
  40fc90:	jae    0x40fc77
  40fc92:	xor    DWORD PTR [ecx+0x470e1216],0x55
  40fc99:	bound  ebp,QWORD PTR [ecx-0x2a1905f9]
  40fc9f:	scas   eax,DWORD PTR es:[edi]
  40fca0:	or     edi,DWORD PTR [ebx+ebp*8-0x1c95db28]
  40fca7:	xor    edi,DWORD PTR [edx+0x9]
  40fcaa:	mov    BYTE PTR [ecx-0x25e4dfee],cl
  40fcb0:	ret    0x257e
  40fcb3:	nop
  40fcb4:	jp     0x40fcd1
  40fcb6:	or     al,0x12
  40fcb8:	popf   
  40fcb9:	sar    BYTE PTR [ebp-0x7e30989a],0x50
  40fcc0:	sbb    ebx,DWORD PTR [eax]
  40fcc2:	jns    0x40fcf3
  40fcc4:	xlat   BYTE PTR ds:[ebx]
  40fcc5:	pop    es
  40fcc6:	cld    
  40fcc7:	js     0x40fd29
  40fcc9:	cmp    DWORD PTR [ecx-0x6a8f4163],eax
  40fccf:	call   0xcabd:0x6954e94
  40fcd6:	mov    ds:0x33d54014,al
  40fcdb:	popa   
  40fcdc:	jns    0x40fd46
  40fcde:	xor    al,0x34
  40fce0:	mov    dl,0x44
  40fce2:	jp     0x40fca1
  40fce4:	push   cs
  40fce5:	bound  edx,QWORD PTR [bx+di]
  40fce8:	(bad)
  40fcec:	addr16 mov ds:0xfe06,al
  40fcf0:	stc    
  40fcf1:	xor    edi,DWORD PTR [edi+0x7f]
  40fcf4:	mul    DWORD PTR [esi+0x404f335b]
  40fcfa:	sub    al,0x14
  40fcfc:	enter  0xa671,0x44
  40fd00:	sub    eax,0xb1df05df
  40fd05:	dec    ecx
  40fd06:	xlat   BYTE PTR ds:[ebx]
  40fd07:	lea    ecx,[esi]
  40fd09:	dec    ebp
  40fd0a:	imul   ecx,DWORD PTR [esi],0x39
  40fd0d:	and    eax,0xafb8fee0
  40fd12:	jns    0x40fd67
  40fd14:	call   0xbb62:0xf8b89687
  40fd1b:	ss xchg ebx,eax
  40fd1d:	and    ebx,edx
  40fd1f:	hlt    
  40fd20:	enter  0xe5da,0xbe
  40fd24:	dec    esp
  40fd26:	sbb    al,0xc3
  40fd28:	aad    0x17
  40fd2a:	pushf  
  40fd2b:	xor    ch,BYTE PTR [ecx+esi*8-0x41]
  40fd2f:	push   eax
  40fd30:	push   ds
  40fd31:	fldcw  WORD PTR [ebx]
  40fd33:	enter  0x7765,0xae
  40fd37:	jbe    0x40fcc3
  40fd39:	sahf   
  40fd3a:	imul   ecx,DWORD PTR [edx+esi*1-0x6a696d08],0xffffff9a
  40fd42:	outs   dx,BYTE PTR ds:[esi]
  40fd43:	call   0x32db:0x7e4cc894
  40fd4a:	mov    ecx,0xfc97ce71
  40fd4f:	ret    0x8e0a
  40fd52:	inc    esi
  40fd53:	xor    al,0x25
  40fd55:	in     al,0x4e
  40fd57:	ror    BYTE PTR [eax+0x28603e0e],0x18
  40fd5e:	out    dx,al
  40fd5f:	call   0x965e:0xdcadf1c0
  40fd66:	inc    eax
  40fd67:	push   ss
  40fd68:	sbb    DWORD PTR [ecx+0x59],esi
  40fd6b:	test   BYTE PTR [ebp-0x850f2d1],0x28
  40fd72:	push   ecx
  40fd73:	mov    ch,0x14
  40fd75:	inc    ebx
  40fd76:	jo     0x40fd13
  40fd78:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fd79:	mov    bh,0x78
  40fd7b:	pop    ebx
  40fd7c:	cmp    eax,0x1511e17f
  40fd81:	mov    dl,0xe1
  40fd83:	push   ds
  40fd84:	mov    ds,ebp
  40fd86:	jmp    0xbface991
  40fd8b:	pop    edx
  40fd8c:	imul   eax,DWORD PTR [ebx],0xcd3712ca
  40fd92:	and    DWORD PTR ds:0xf2f8018f,esp
  40fd98:	lahf   
  40fd99:	retf   0x76a
  40fd9c:	xchg   DWORD PTR [ebx],esi
  40fd9e:	xor    BYTE PTR [ebx],dh
  40fda0:	add    ch,BYTE PTR [edx]
  40fda2:	mov    al,ds:0x696631f
  40fda7:	xchg   esi,eax
  40fda8:	mov    cs,WORD PTR [eax-0x25ada966]
  40fdae:	in     al,0x77
  40fdb0:	sub    eax,0x37becc5d
  40fdb5:	adc    BYTE PTR [ecx],ch
  40fdb7:	push   ds
  40fdb8:	mov    cl,0xa3
  40fdba:	imul   esi,DWORD PTR [ecx+edx*2-0x1c],0xffffffbe
  40fdbf:	jl     0x40fd84
  40fdc1:	cmp    edx,esp
  40fdc3:	dec    ebx
  40fdc4:	adc    bl,dl
  40fdc6:	retf   0x66df
  40fdc9:	icebp  
  40fdca:	mov    cl,0x8f
  40fdcc:	lea    ecx,[ecx-0x65e60d07]
  40fdd2:	dec    eax
  40fdd3:	jge    0x40fd97
  40fdd5:	cli    
  40fdd6:	sub    al,0x3c
  40fdd8:	fsub   QWORD PTR [ebp+0x55a1bb6f]
  40fdde:	rcr    BYTE PTR [esi-0x30578116],cl
  40fde4:	sbb    eax,0x3dcf41d0
  40fde9:	inc    eax
  40fdea:	dec    esi
  40fdeb:	push   es
  40fdec:	mov    ebp,0xa7ddd2f7
  40fdf1:	call   0x5923:0x3af1417b
  40fdf8:	sub    eax,0x1c7adfab
  40fdfd:	imul   eax,DWORD PTR [eax-0x2a62002a],0x58
  40fe04:	adc    al,dl
  40fe06:	test   al,0xef
  40fe08:	ins    DWORD PTR es:[edi],dx
  40fe09:	(bad)  
  40fe0a:	cmp    esi,DWORD PTR [eax-0x422017b3]
  40fe10:	jo     0x40fdff
  40fe12:	mov    ah,0x94
  40fe14:	xchg   edx,eax
  40fe15:	dec    ebx
  40fe16:	mov    eax,?
  40fe18:	and    ecx,DWORD PTR [edx+0x29736461]
  40fe1e:	das    
  40fe1f:	fs fwait
  40fe21:	out    dx,al
  40fe22:	int3   
  40fe23:	pop    ecx
  40fe24:	fsubr  QWORD PTR [ebx-0x2fae6213]
  40fe2a:	push   esp
  40fe2b:	or     BYTE PTR [eax+ecx*4-0x5a],bl
  40fe2f:	(bad)  
  40fe30:	call   0x782a:0xbdc1e5a4
  40fe37:	in     eax,0xb8
  40fe39:	sub    eax,0xa6c14ec9
  40fe3e:	inc    esi
  40fe3f:	ins    DWORD PTR es:[edi],dx
  40fe40:	les    esi,FWORD PTR [esi]
  40fe42:	inc    esp
  40fe43:	and    BYTE PTR [edi+edi*8+0x469a2e9f],ah
  40fe4a:	lds    eax,FWORD PTR [edi+0x6b1790d7]
  40fe50:	mov    edx,0xf386b070
  40fe55:	mov    ecx,0xe50564d2
  40fe5a:	xor    BYTE PTR [eax],bh
  40fe5c:	jnp    0x40feb1
  40fe5e:	adc    eax,0x6d3b0d51
  40fe63:	call   0x28075322
  40fe68:	jbe    0x40fe0d
  40fe6a:	sti    
  40fe6b:	iret   
  40fe6c:	cmp    DWORD PTR [ebx-0xd03ff44],edi
  40fe72:	mov    ds:0x7d1309cd,eax
  40fe77:	hlt    
  40fe78:	jmp    0x1b52988e
  40fe7d:	out    dx,eax
  40fe7e:	cmp    ah,BYTE PTR [eax+edx*4]
  40fe81:	inc    edx
  40fe82:	xchg   ebp,eax
  40fe83:	sbb    esi,edi
  40fe85:	shl    BYTE PTR [ebp+0x9],0x82
  40fe89:	bound  edx,QWORD PTR [edx+eax*2+0x2279e961]
  40fe90:	jg     0x40fef0
  40fe92:	imul   esi,DWORD PTR [esp+eiz*2-0x6d],0x23
  40fe97:	mov    edi,0xfcdd89dd
  40fe9c:	lods   eax,DWORD PTR ds:[esi]
  40fe9d:	cmp    al,ah
  40fe9f:	push   esi
  40fea0:	pop    ecx
  40fea1:	arpl   bp,sp
  40fea3:	mov    ch,0xb
  40fea5:	push   ds
  40fea6:	retf   
  40fea7:	mov    WORD PTR [ecx],?
  40fea9:	inc    edi
  40feaa:	sbb    ch,dl
  40feac:	scas   al,BYTE PTR es:[edi]
  40fead:	punpcklbw mm3,DWORD PTR [edx+ebx*2]
  40feb1:	pop    esi
  40feb2:	sub    ch,dl
  40feb4:	pop    esi
  40feb5:	gs mov cl,0xbe
  40feb8:	je     0x40fe3b
  40feba:	mov    al,0x61
  40febc:	fcomp  DWORD PTR [edi-0x14]
  40febf:	pop    ebp
  40fec0:	je     0x40fe5e
  40fec2:	mov    BYTE PTR [edi+0x14],cl
  40fec5:	test   al,0xcb
  40fec7:	mov    esp,0x37d551
  40fecc:	fcom   DWORD PTR [esi]
  40fece:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fecf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fed0:	sahf   
  40fed1:	aaa    
  40fed2:	xor    eax,0xf50f0236
  40fed7:	cmp    BYTE PTR [ebx-0x433e70a0],0x8a
  40fede:	into   
  40fedf:	or     dl,0xff
  40fee2:	adc    cl,ch
  40fee4:	push   cs
  40fee5:	out    0x73,eax
  40fee7:	mov    al,0x15
  40fee9:	push   ebp
  40feea:	outs   dx,BYTE PTR ds:[esi]
  40feeb:	stos   BYTE PTR es:[edi],al
  40feec:	push   esp
  40feed:	jmp    0x40fea2
  40feef:	dec    ebp
  40fef0:	xchg   esp,eax
  40fef1:	fnstcw WORD PTR [eax+ebp*2+0x349082cd]
  40fef8:	fnstcw WORD PTR [ecx]
  40fefa:	ss pop eax
  40fefc:	inc    edi
  40fefd:	cmp    al,0xef
  40feff:	rcr    DWORD PTR ds:0xc104bc5c,0x37
  40ff06:	push   es
  40ff07:	xchg   esp,eax
  40ff08:	dec    esp
  40ff09:	jno    0x40ff12
  40ff0b:	dec    esi
  40ff0c:	add    BYTE PTR [esi+0x19f305f0],ch
  40ff12:	or     dh,BYTE PTR fs:[ebx-0x72]
  40ff16:	push   ebp
  40ff17:	test   BYTE PTR [ebx],cl
  40ff19:	and    al,0x16
  40ff1b:	mov    WORD PTR [edx+0x35],?
  40ff1e:	pop    ss
  40ff1f:	gs ins BYTE PTR es:[edi],dx
  40ff21:	sub    ah,BYTE PTR [edx-0x73]
  40ff24:	push   eax
  40ff25:	inc    edi
  40ff26:	test   DWORD PTR [ebp-0x1c],ecx
  40ff29:	sub    DWORD PTR [eax-0x47],edx
  40ff2c:	sbb    BYTE PTR [ebx-0x4fec9ff0],dh
  40ff32:	fstp   DWORD PTR [ecx-0x7]
  40ff35:	daa    
  40ff36:	test   ecx,ecx
  40ff38:	xchg   DWORD PTR [eax+0x29],ecx
  40ff3b:	and    ecx,edx
  40ff3d:	pushf  
  40ff3e:	mov    ebx,DWORD PTR [ecx-0x2de46e30]
  40ff44:	popf   
  40ff45:	cmp    bh,ah
  40ff47:	jle    0x40ff32
  40ff49:	test   bh,0xc9
  40ff4c:	retf   
  40ff4d:	lahf   
  40ff4e:	rcr    BYTE PTR [ebp+ebx*1-0x789032e4],cl
  40ff55:	cmp    bh,BYTE PTR [ebx+0xa762da3]
  40ff5b:	lahf   
  40ff5c:	(bad)  
  40ff5d:	retf   
  40ff5e:	dec    ebp
  40ff5f:	push   ecx
  40ff60:	jnp    0x40ff8e
  40ff62:	xor    bl,BYTE PTR [edi]
  40ff64:	cli    
  40ff65:	call   DWORD PTR [ecx]
  40ff67:	(bad)  
  40ff68:	iret   
  40ff69:	sbb    ebx,DWORD PTR [ebp-0x3d]
  40ff6c:	dec    edx
  40ff6d:	or     edi,ebx
  40ff6f:	mov    bh,0x4c
  40ff71:	and    al,0x8e
  40ff73:	lahf   
  40ff74:	rcl    BYTE PTR [edx-0x1b],1
  40ff77:	not    edi
  40ff79:	rcr    BYTE PTR [eax],0x3c
  40ff7c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ff7d:	add    edx,DWORD PTR [edx+0x48]
  40ff80:	jmp    0xca49:0x2ed811a8
  40ff87:	mov    dl,0x61
  40ff89:	pop    ax
  40ff8b:	sbb    DWORD PTR [edx+edi*1-0x4ae15b4a],esp
  40ff92:	mov    ebp,0x4e84aaa6
  40ff97:	mov    ch,0xfa
  40ff99:	arpl   WORD PTR [edx],sp
  40ff9b:	gs jnp 0x40ff94
  40ff9e:	add    BYTE PTR [edx],0x7a
  40ffa1:	pop    ebx
  40ffa2:	jae    0x40fff7
  40ffa4:	dec    ebx
  40ffa5:	ficom  WORD PTR [edi*2+0xae2520b]
  40ffac:	test   eax,0x8fdc1386
  40ffb1:	sub    cl,BYTE PTR [edx-0x449e0100]
  40ffb7:	clts   
  40ffb9:	add    eax,0x9c7d2279
  40ffbe:	mov    ecx,0x9cd68599
  40ffc3:	cli    
  40ffc4:	mov    ch,0x28
  40ffc6:	add    BYTE PTR [ebx+eax*4-0x64],al
  40ffca:	mov    ds:0x3648bd56,eax
  40ffcf:	shl    bh,0xc9
  40ffd2:	lods   eax,DWORD PTR ds:[esi]
  40ffd3:	mov    ch,0xb7
  40ffd5:	retf   0xb89b
  40ffd8:	inc    ebp
  40ffd9:	repz inc ecx
  40ffdb:	xchg   ebx,eax
  40ffdc:	scas   al,BYTE PTR es:[edi]
  40ffdd:	adc    DWORD PTR [edi],ebp
  40ffdf:	mov    WORD PTR [eax+0x2b],fs
  40ffe2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ffe3:	push   cs
  40ffe4:	cdq    
  40ffe5:	test   DWORD PTR [ebp+0x48a4a421],0xd0a7c855
  40ffef:	dec    esi
  40fff0:	inc    ebp
  40fff1:	aam    0x28
  40fff3:	dec    edx
  40fff4:	jns    0x40ffb2
  40fff6:	dec    ebx
  40fff7:	push   ecx
  40fff8:	cwde   
  40fff9:	ret    
  40fffa:	push   cs
  40fffb:	mov    edi,0xbf98b13d
  410000:	call   0x5ff2:0x1ee53030
  410007:	test   bh,dh
  410009:	loope  0x41002e
  41000b:	mov    ebp,0x99d38596
  410010:	sub    esi,DWORD PTR es:[ecx]
  410013:	or     DWORD PTR [ecx+0x522af355],ebp
  410019:	pop    ds
  41001a:	daa    
  41001b:	push   ebp
  41001c:	mov    edx,0xe7939015
  410021:	and    al,0x85
  410023:	aam    0x2f
  410025:	push   ecx
  410026:	je     0x410086
  410028:	std    
  410029:	xor    esp,ecx
  41002b:	push   ss
  41002c:	into   
  41002d:	add    ah,BYTE PTR [ecx+0x4]
  410030:	or     dl,bh
  410032:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410033:	pop    esi
  410034:	sub    esp,DWORD PTR [ebx-0x5f695c12]
  41003a:	stc    
  41003b:	xchg   ebp,eax
  41003c:	adc    dh,BYTE PTR [ebp-0xc]
  41003f:	dec    eax
  410040:	jmp    0x22bf98b4
  410045:	adc    dl,BYTE PTR [ebx-0x4a]
  410048:	dec    ebp
  410049:	or     edx,ebx
  41004b:	mov    DWORD PTR [edx-0xec72bed],eax
  410051:	repnz pop eax
  410053:	xchg   ebx,eax
  410054:	xchg   DWORD PTR es:[ecx+0x4d07f5ce],eax
  41005b:	enter  0x8b58,0x19
  41005f:	sbb    al,0x6d
  410061:	mov    dl,0x1
  410063:	xchg   ebx,eax
  410064:	inc    edi
  410065:	xor    DWORD PTR [ebp-0x3fad89db],edi
  41006b:	retf   
  41006c:	mov    bh,0x51
  41006e:	stos   BYTE PTR es:[edi],al
  41006f:	mov    ds:0xfe3e929,eax
  410074:	pop    edi
  410075:	push   DWORD PTR [eax-0x29]
  410078:	and    al,0x41
  41007a:	mov    ebp,0xec5156b1
  41007f:	int    0xfa
  410081:	mov    DWORD PTR [edi+edi*4+0x67],esp
  410085:	cmp    al,0x11
  410087:	ret    0x4bf9
  41008a:	je     0x4100f0
  41008c:	xchg   esi,eax
  41008d:	push   edi
  41008e:	cmp    ebx,edi
  410090:	jp     0x4100be
  410092:	xchg   bl,ah
  410094:	mov    ebp,0xa690b9d3
  410099:	cmc    
  41009a:	xor    al,0x6d
  41009c:	mov    eax,0x84f4366f
  4100a1:	jnp    0x4100d0
  4100a3:	aas    
  4100a4:	ret    0xa926
  4100a7:	jmp    0xa483:0x2ea75c9b
  4100ae:	jne    0x410048
  4100b0:	inc    ebx
  4100b1:	mov    BYTE PTR [edi+0x57d5871],cl
  4100b7:	sbb    BYTE PTR [ebp-0xec545fb],0xb7
  4100be:	mov    bl,0xf6
  4100c0:	add    ebx,DWORD PTR [edi]
  4100c2:	push   edi
  4100c3:	out    dx,al
  4100c4:	adc    edx,DWORD PTR [ebp-0x56a55b78]
  4100ca:	pop    ebx
  4100cb:	fstp   TBYTE PTR [edi+0x59caee4]
  4100d1:	xor    eax,0x484f271e
  4100d6:	pop    es
  4100d7:	in     al,0x6
  4100d9:	dec    ebx
  4100da:	mov    ds:0x3c6f09b7,al
  4100df:	add    bl,BYTE PTR ds:0xc210f0fd
  4100e5:	add    DWORD PTR [eax-0x5a],0x76
  4100e9:	call   0xa0384db9
  4100ee:	scas   al,BYTE PTR es:[edi]
  4100ef:	gs push ss
  4100f1:	lea    eax,[ebp+0x3a6ee28c]
  4100f7:	mov    BYTE PTR [edx+ebx*4+0x1a83020a],al
  4100fe:	bswap  eax
  410100:	(bad)  
  410101:	in     eax,0xc3
  410103:	push   ds
  410104:	and    eax,0xc7f04b27
  410109:	bound  ebx,QWORD PTR cs:[esi-0x5e]
  41010d:	jae    0x410148
  41010f:	mov    ds:0xaedcea03,al
  410114:	or     edi,eax
  410116:	jne    0x41015e
  410118:	out    0x1c,al
  41011a:	mov    bh,0x1
  41011c:	aaa    
  41011d:	inc    eax
  41011e:	sbb    BYTE PTR [edx],bh
  410120:	test   eax,0xd3bccd98
  410125:	(bad)  
  410126:	fistp  QWORD PTR [edx-0x3490b059]
  41012c:	mov    ds:0x2a17d1d6,eax
  410131:	pusha  
  410132:	mov    ebp,0x7d5ccdc6
  410137:	bound  ebx,QWORD PTR [edx]
  410139:	adc    eax,0xb302a641
  41013e:	in     eax,dx
  41013f:	xchg   ebx,eax
  410140:	jp     0x410157
  410142:	inc    esp
  410143:	xor    BYTE PTR [ecx],dl
  410145:	xor    eax,0xac7cb409
  41014a:	or     BYTE PTR [edi+esi*2-0x7c],al
  41014e:	jno    0x41017a
  410150:	xchg   ecx,eax
  410151:	jge    0x41017d
  410153:	lea    edx,[esp+esi*2+0x0]
  410157:	retf   
  410158:	pop    ss
  410159:	into   
  41015a:	push   0x3e
  41015c:	mov    ds:0x47c31a62,eax
  410161:	add    eax,ebp
  410163:	pop    DWORD PTR ds:[edx]
  410166:	out    0xda,eax
  410168:	icebp  
  410169:	cmc    
  41016a:	aad    0x65
  41016c:	pop    ds
  41016d:	stos   BYTE PTR es:[edi],al
  41016e:	mov    cl,0xb6
  410170:	ins    DWORD PTR es:[edi],dx
  410171:	(bad)  
  410172:	mov    esi,0xc828d500
  410177:	cdq    
  410178:	lods   al,BYTE PTR ds:[esi]
  410179:	xchg   edi,eax
  41017a:	cld    
  41017b:	leave  
  41017c:	imul   edx,eax,0x1f
  41017f:	mov    edi,ebx
  410181:	gs dec esp
  410183:	aam    0xfc
  410185:	lea    ebx,[esi-0x582796f7]
  41018b:	adc    BYTE PTR [ecx-0xfe99c20],al
  410191:	lock inc eax
  410193:	jns    0x4101a6
  410195:	dec    esi
  410196:	push   0x31
  410198:	enter  0x9c3b,0xec
  41019c:	and    DWORD PTR [edi+0x27cb5840],ecx
  4101a2:	push   ax
  4101a4:	jl     0x4101c3
  4101a6:	mov    dl,0xe7
  4101a8:	mov    DWORD PTR [eax+edi*8],esi
  4101ab:	int3   
  4101ac:	push   edx
  4101ad:	repnz jecxz 0x4101f3
  4101b0:	pop    ds
  4101b1:	jae    0x410155
  4101b3:	push   esp
  4101b4:	push   edi
  4101b5:	sub    ebx,0xd3c347c2
  4101bb:	sub    BYTE PTR ds:0x9529e44b,bl
  4101c1:	popa   
  4101c2:	cwde   
  4101c3:	lea    ebx,[eax]
  4101c5:	adc    cl,ah
  4101c7:	fstp   DWORD PTR [ebx]
  4101c9:	mov    ebp,0xeec480cc
  4101ce:	or     DWORD PTR [ebp+0x28d7da27],eax
  4101d4:	(bad)  
  4101d5:	xor    bh,BYTE PTR [ebx+ecx*1+0x455f812a]
  4101dc:	dec    ebx
  4101dd:	mov    ah,0x7c
  4101df:	inc    ecx
  4101e0:	or     esp,0x9b213dc7
  4101e6:	xchg   DWORD PTR [edi+0x7c],esp
  4101e9:	aaa    
  4101ea:	adc    al,0x33
  4101ec:	inc    ebp
  4101ed:	in     eax,0x8e
  4101ef:	ja     0x410267
  4101f1:	in     eax,0xbd
  4101f3:	in     al,0x31
  4101f5:	add    eax,DWORD PTR [edx-0x48]
  4101f8:	cld    
  4101f9:	dec    eax
  4101fa:	or     esp,DWORD PTR [bx+di]
  4101fd:	push   ds
  4101fe:	rcr    eax,cl
  410200:	es jb  0x410188
  410203:	(bad)  
  410204:	clc    
  410205:	lds    edi,FWORD PTR [edx-0x6b]
  410208:	mov    cl,0xdf
  41020a:	jp     0x410275
  41020c:	retf   0x9b9b
  41020f:	cmp    al,0x56
  410211:	cmp    cl,BYTE PTR [ebx-0x4d]
  410214:	push   0x5f
  410216:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410217:	imul   eax,DWORD PTR [ecx],0xffffffd8
  41021a:	ret    
  41021b:	fisub  WORD PTR [edx-0x2d48ef64]
  410221:	lods   eax,DWORD PTR ds:[esi]
  410222:	mov    bh,0xe
  410224:	das    
  410225:	and    DWORD PTR [ebx-0x74],ecx
  410228:	in     al,dx
  410229:	outs   dx,DWORD PTR ds:[esi]
  41022a:	cld    
  41022b:	pushw  ds
  41022d:	jne    0x41023f
  41022f:	adc    BYTE PTR [eax-0x245fac3d],ch
  410235:	fild   WORD PTR [ecx-0x2f8bc26c]
  41023b:	in     eax,dx
  41023c:	inc    esp
  41023d:	push   ebx
  41023e:	mov    dh,BYTE PTR [esi-0x51]
  410241:	sbb    al,0x70
  410243:	xchg   DWORD PTR [eax],esp
  410245:	add    BYTE PTR [eax+0x44f242c3],bl
  41024b:	mov    ch,0xb7
  41024d:	popf   
  41024e:	das    
  41024f:	adc    al,0x99
  410251:	int    0xce
  410253:	cmp    ah,BYTE PTR [esi-0x16]
  410256:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410257:	mov    bl,0xb2
  410259:	fcmovne st,st(1)
  41025b:	fsubp  st(2),st
  41025d:	repnz div BYTE PTR [esi+ebp*2+0x12]
  410262:	sub    al,0x62
  410264:	push   edi
  410265:	test   eax,0xf8836912
  41026a:	xlat   BYTE PTR ds:[ebx]
  41026b:	ret    
  41026c:	fnstcw WORD PTR [ecx-0x1b003046]
  410272:	push   edi
  410273:	fwait
  410274:	cmp    ch,BYTE PTR [ebx+0x62]
  410277:	arpl   WORD PTR [ecx],di
  410279:	mul    BYTE PTR [esi+0xdc9c975]
  41027f:	and    eax,DWORD PTR [esi+0x6de065cc]
  410285:	pop    ebx
  410286:	outs   dx,BYTE PTR ds:[esi]
  410287:	lds    edx,FWORD PTR [edx+0x4ed2a7dc]
  41028d:	pop    es
  41028e:	or     ebp,edx
  410290:	and    cl,BYTE PTR [ebx]
  410292:	nop
  410293:	imul   esp,esi,0xa21d52b5
  410299:	inc    esi
  41029a:	jecxz  0x4102e2
  41029c:	pop    edx
  41029d:	inc    eax
  41029e:	lea    edx,[ecx+edx*4+0x1]
  4102a2:	or     ebp,ebp
  4102a4:	ds mov ah,0xce
  4102a7:	nop
  4102a8:	push   es
  4102a9:	push   ebp
  4102aa:	neg    BYTE PTR [ebx]
  4102ac:	inc    esi
  4102ad:	fdiv   DWORD PTR [ecx+ebp*4]
  4102b0:	fwait
  4102b1:	sub    al,0x49
  4102b3:	push   ss
  4102b4:	fs push ebx
  4102b6:	lahf   
  4102b7:	jg     0x4102ca
  4102b9:	jmp    0x2c1c951b
  4102be:	xchg   ecx,eax
  4102bf:	out    dx,al
  4102c0:	xor    DWORD PTR [eax-0xb],0x1c873fb3
  4102c7:	int    0x1f
  4102c9:	das    
  4102ca:	add    eax,0xde7ccd2
  4102cf:	jmp    0xfbb1:0x1cd93314
  4102d6:	push   0xffffffa6
  4102d8:	imul   DWORD PTR [ecx+0x6f]
  4102db:	imul   ebx,DWORD PTR [edx],0xb
  4102de:	repz (bad) 
  4102e0:	ds jo  0x4102dd
  4102e3:	mov    bh,0x2f
  4102e5:	mov    ds:0xfac311cc,al
  4102ea:	fld    DWORD PTR [edx+0x57]
  4102ed:	in     al,0xa7
  4102ef:	sbb    DWORD PTR [edx-0x11],esi
  4102f2:	mov    dl,BYTE PTR [ebx]
  4102f4:	hlt    
  4102f5:	shl    BYTE PTR ds:[ebx],1
  4102f8:	xchg   ebx,eax
  4102f9:	test   BYTE PTR [ebx+0x40dcd3f4],bh
  4102ff:	xor    esp,DWORD PTR [esi-0xfbf9d7a]
  410305:	jo     0x41029a
  410307:	fwait
  410308:	mov    eax,0xe68dc1da
  41030d:	int    0x9
  41030f:	push   es
  410310:	mov    cl,0x3a
  410312:	test   BYTE PTR [edx+0x22],ch
  410315:	adc    ecx,0x26f5837f
  41031b:	mov    ebx,0xbf5533c
  410320:	pop    es
  410321:	inc    edi
  410322:	push   esp
  410323:	(bad)  
  410325:	jecxz  0x4102d4
  410327:	xchg   dh,dh
  410329:	pop    edi
  41032a:	mov    ah,0x8
  41032c:	dec    edi
  41032d:	sub    DWORD PTR [eax+0x536687f8],esp
  410333:	mov    bh,0xc8
  410335:	push   ds
  410336:	mov    ds,WORD PTR [ebx+0x2b]
  410339:	je     0x4102d5
  41033b:	mov    ebp,0x57d726e2
  410340:	nop
  410341:	push   esi
  410342:	dec    eax
  410343:	fprem1 
  410345:	outs   dx,BYTE PTR ds:[esi]
  410346:	xchg   edx,eax
  410347:	leave  
  410348:	sub    DWORD PTR [edx],ebp
  41034a:	(bad)  
  41034b:	mov    edx,0x34b5c5a6
  410350:	(bad)  
  410351:	ins    BYTE PTR es:[edi],dx
  410352:	scas   eax,DWORD PTR es:[edi]
  410353:	pop    eax
  410354:	xor    BYTE PTR [edi+0x55],0x10
  410358:	cs dec ebp
  41035a:	jae    0x410361
  41035c:	(bad)  
  41035d:	lds    esi,FWORD PTR [edx+0x58cbd92]
  410363:	cwde   
  410364:	xchg   DWORD PTR [edi+0x5],esi
  410367:	(bad)  
  410369:	into   
  41036a:	or     bl,ch
  41036c:	imul   ebx,DWORD PTR [edi+0x37],0xffffffd6
  410370:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410371:	or     edx,eax
  410373:	gs push 0xffffffc6
  410376:	mov    ds:0xed73e54e,al
  41037b:	and    esp,DWORD PTR [esi]
  41037d:	xor    esi,DWORD PTR [ebp+eiz*2-0x3a308646]
  410384:	or     al,0x7f
  410386:	xchg   ebp,eax
  410387:	pop    edx
  410388:	ins    DWORD PTR es:[edi],dx
  410389:	cmp    eax,0xf1f1617d
  41038e:	sub    al,0x70
  410390:	dec    eax
  410391:	inc    edx
  410392:	and    al,0xb3
  410394:	in     eax,dx
  410395:	mov    edi,0xd9df52f0
  41039a:	retf   0xba47
  41039d:	fldenv [eax+0x30f7778d]
  4103a3:	js     0x41039e
  4103a5:	dec    edi
  4103a6:	repnz push es
  4103a8:	cmp    DWORD PTR [ebx],0xfffffffc
  4103ab:	out    dx,al
  4103ac:	push   ebp
  4103ad:	(bad)  
  4103ae:	fcmovu st,st(5)
  4103b0:	sbb    ax,0x3b5c
  4103b4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4103b5:	push   ds
  4103b6:	fucomi st,st(3)
  4103b8:	or     DWORD PTR [ebx+0x25],esi
  4103bb:	jo     0x4103be
  4103bd:	cmp    dh,dl
  4103bf:	xchg   cl,ah
  4103c1:	icebp  
  4103c2:	cmc    
  4103c3:	stc    
  4103c4:	push   cs
  4103c5:	push   es
  4103c6:	mov    BYTE PTR [ecx+0x269ebce6],ah
  4103cc:	pop    ebx
  4103cd:	ds loopne 0x41044f
  4103d0:	loop   0x41035e
  4103d2:	sub    edi,esp
  4103d4:	stc    
  4103d5:	inc    ecx
  4103d6:	mov    al,ds:0x2584447a
  4103db:	stc    
  4103dc:	xor    BYTE PTR [edx-0x5bf170b2],ah
  4103e2:	jb     0x4103a2
  4103e4:	jo     0x41045f
  4103e6:	shl    BYTE PTR [ebp-0x2f],0x81
  4103ea:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4103eb:	and    dl,BYTE PTR ds:0xaabb626a
  4103f1:	test   eax,0xa7dec9a2
  4103f6:	jge    0x4103c9
  4103f8:	cmp    BYTE PTR ds:0x65490492,bl
  4103fe:	add    DWORD PTR [edi],esi
  410400:	aas    
  410401:	sbb    eax,0x5a20d390
  410406:	push   edx
  410407:	cli    
  410408:	mov    cl,0x84
  41040a:	adc    al,0x50
  41040c:	jl     0x4103e4
  41040e:	ret    0x3f07
  410411:	shl    BYTE PTR [eax+0x7932ec31],0xe0
  410418:	inc    ecx
  410419:	ja     0x4103d9
  41041b:	ror    BYTE PTR [eax-0x498fb0a7],1
  410421:	out    0xac,al
  410423:	(bad)  
  410424:	jo     0x4103a9
  410426:	xor    bl,BYTE PTR [edx]
  410428:	cld    
  410429:	xor    BYTE PTR [ebx],bh
  41042b:	cmp    DWORD PTR [edi+0x42],0x16
  41042f:	xchg   esp,eax
  410430:	cwde   
  410431:	cld    
  410432:	lods   al,BYTE PTR ds:[esi]
  410433:	jp     0x410433
  410435:	shl    ebp,0xf9
  410438:	jns    0x4103f5
  41043a:	mov    bl,0xd8
  41043c:	lea    edi,[esi+0x492e9cda]
  410442:	and    bl,0xe8
  410445:	pop    edx
  410446:	add    eax,DWORD PTR [ebx]
  410448:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410449:	mov    dh,0xf3
  41044b:	jecxz  0x41043e
  41044d:	add    al,0x89
  41044f:	sbb    esi,eax
  410451:	push   esp
  410452:	clc    
  410453:	xlat   BYTE PTR ds:[ebx]
  410454:	retf   
  410455:	pop    esi
  410456:	psrld  mm7,QWORD PTR [esi-0x4f3d1439]
  41045d:	and    eax,0x6f20108b
  410462:	jno    0x410488
  410464:	xchg   esp,eax
  410465:	add    al,dl
  410467:	and    esp,edi
  410469:	sbb    cl,BYTE PTR [ecx-0x687c4829]
  41046f:	and    DWORD PTR [esi],0x61
  410472:	xlat   BYTE PTR ds:[bx]
  410474:	jge    0x41041e
  410476:	pop    ecx
  410477:	cld    
  410478:	jmp    0x76bc7e75
  41047d:	frstor [eax+0x21]
  410480:	rcr    ebp,cl
  410482:	cli    
  410483:	mov    esp,0x3f15a04a
  410488:	jle    0x4104c6
  41048a:	bound  ebp,QWORD PTR [ebx]
  41048c:	test   al,0x39
  41048e:	sbb    esp,eax
  410490:	aam    0xbd
  410492:	xchg   BYTE PTR [esi*4+0x712387d2],al
  410499:	sub    eax,0x8dcec90f
  41049e:	aad    0xa3
  4104a0:	mov    bh,0x74
  4104a2:	jns    0x41042e
  4104a4:	xchg   esi,eax
  4104a5:	or     al,0xf3
  4104a7:	stos   DWORD PTR es:[edi],eax
  4104a8:	lock sub ebx,DWORD PTR [eax-0x585f0747]
  4104af:	test   eax,0xf23fd8d6
  4104b4:	int3   
  4104b5:	mov    dh,0xe4
  4104b7:	(bad)  
  4104b8:	push   ebx
  4104b9:	and    eax,0x8c8a5661
  4104be:	lds    eax,FWORD PTR [ebp+eiz*8+0x14b88e47]
  4104c5:	stos   BYTE PTR es:[edi],al
  4104c6:	xchg   edi,eax
  4104c7:	mov    esp,0xe915b10
  4104cc:	mov    dl,0xab
  4104ce:	outs   dx,DWORD PTR ds:[esi]
  4104cf:	ss push edx
  4104d1:	jg     0x4104fe
  4104d3:	dec    edx
  4104d4:	xchg   BYTE PTR [ebx+edi*2-0x4b40d348],ch
  4104db:	cs xor bl,al
  4104de:	repz inc esp
  4104e0:	add    al,0x80
  4104e2:	push   esi
  4104e3:	jno    0x4104bf
  4104e5:	addr16 push es
  4104e7:	cmp    eax,0xec078efe
  4104ec:	mov    DWORD PTR [esi],edx
  4104ee:	or     edx,ebx
  4104f0:	in     al,0xbf
  4104f2:	or     eax,0xdb12fab1
  4104f7:	ins    DWORD PTR es:[edi],dx
  4104f8:	fisubr DWORD PTR [eax+0x49bb2798]
  4104fe:	mov    ds:0xd0bb84fd,eax
  410503:	popf   
  410504:	push   es
  410505:	sub    DWORD PTR gs:[ebp-0x1c],0x789d4b6b
  41050d:	ret    0xf6df
  410510:	cmp    ebx,DWORD PTR [esp+eiz*8]
  410513:	jle    0x4104d1
  410515:	mov    cl,0x2d
  410517:	imul   DWORD PTR [eax+0x3cdcea4]
  41051d:	push   ecx
  41051e:	xchg   DWORD PTR ds:0xf2d80616,ebp
  410524:	xor    BYTE PTR [edi],ch
  410526:	adc    eax,0xb7def3a
  41052b:	scas   eax,DWORD PTR es:[edi]
  41052c:	lds    esp,FWORD PTR [eax-0x74]
  41052f:	mov    DWORD PTR [edx-0x3e],esi
  410532:	pop    ds
  410533:	aam    0x71
  410535:	cld    
  410536:	xlat   BYTE PTR ds:[ebx]
  410537:	aam    0xa2
  410539:	retf   
  41053a:	aaa    
  41053b:	pop    ds
  41053c:	sub    al,0x86
  41053e:	dec    ecx
  41053f:	xor    edx,esp
  410541:	mov    DWORD PTR [ecx+0x43adee05],esi
  410547:	es dec esi
  410549:	or     al,0x86
  41054b:	and    eax,0xe483c9ff
  410550:	jae    0x4104fd
  410552:	or     BYTE PTR [ebp+0x55],dl
  410555:	cmp    BYTE PTR es:[eax-0x880f149],dl
  41055c:	inc    ecx
  41055d:	pop    eax
  41055e:	arpl   WORD PTR [ebx+ebp*2],di
  410561:	pushf  
  410562:	xchg   esi,eax
  410563:	stc    
  410564:	sar    DWORD PTR [esi-0x3e57f177],0xbb
  41056b:	scas   eax,DWORD PTR es:[edi]
  41056c:	adc    DWORD PTR [ecx+0xa],esp
  41056f:	ins    DWORD PTR es:[edi],dx
  410570:	add    BYTE PTR [esi+eiz*1-0x610d87e8],cl
  410577:	push   ecx
  410578:	loope  0x4105a5
  41057a:	aas    
  41057b:	scas   al,BYTE PTR es:[edi]
  41057c:	stc    
  41057d:	sbb    al,BYTE PTR [ebx]
  41057f:	in     eax,0xe2
  410581:	fst    DWORD PTR [ebx-0xd]
  410584:	sahf   
  410585:	arpl   WORD PTR [ebp-0x5d0d88fe],bp
  41058b:	call   0xd7528f72
  410590:	imul   ebx,DWORD PTR ds:[ecx+0x1a],0x9a86083d
  410598:	jbe    0x4105f1
  41059a:	sub    ebp,esi
  41059c:	fcmove st,st(1)
  41059e:	jg     0x41054e
  4105a0:	xor    eax,0xa7d14607
  4105a5:	xchg   ecx,eax
  4105a6:	inc    ecx
  4105a7:	aaa    
  4105a8:	xor    ebx,DWORD PTR [eax+0x3]
  4105ab:	retf   
  4105ac:	push   0xffffff87
  4105ae:	push   ebx
  4105af:	pop    esp
  4105b0:	rcr    DWORD PTR [eax],0x76
  4105b3:	stos   BYTE PTR es:[edi],al
  4105b4:	and    eax,0xf984d656
  4105b9:	push   0xe9b303bd
  4105be:	pop    esi
  4105bf:	adc    eax,0x20c5c030
  4105c4:	inc    esp
  4105c5:	mov    BYTE PTR [ebx],ah
  4105c7:	ja     0x410604
  4105c9:	sub    DWORD PTR [edx+edx*8+0x43],edi
  4105cd:	stos   DWORD PTR es:[edi],eax
  4105ce:	adc    ebx,ecx
  4105d0:	mov    esi,0x896435a7
  4105d5:	lods   eax,DWORD PTR ds:[esi]
  4105d6:	ss and eax,0x516f7ea8
  4105dc:	xchg   esp,esi
  4105de:	scas   al,BYTE PTR es:[edi]
  4105df:	sbb    bh,0xcc
  4105e2:	inc    eax
  4105e3:	out    0x85,eax
  4105e5:	test   BYTE PTR [edx+0x43],dl
  4105e8:	popa   
  4105e9:	jno    0x410631
  4105eb:	ficomp DWORD PTR [ebp-0x2d]
  4105ee:	cwde   
  4105ef:	aam    0x3c
  4105f1:	cwde   
  4105f2:	xchg   ebx,eax
  4105f3:	mov    ah,BYTE PTR [esi]
  4105f5:	and    esp,DWORD PTR ds:0x6963c92e
  4105fb:	and    al,0x99
  4105fd:	sub    BYTE PTR [edx-0x4594701a],cl
  410603:	fwait
  410604:	daa    
  410605:	(bad)  
  410606:	xchg   esp,eax
  410607:	repz ret 0x8c2c
  41060b:	scas   ax,WORD PTR es:[edi]
  41060d:	add    ecx,edi
  41060f:	push   esp
  410610:	gs jge 0x410649
  410613:	lds    esp,FWORD PTR [ebp-0x5b]
  410616:	fcomp  QWORD PTR [ebp-0x3f]
  410619:	pop    ss
  41061a:	ror    BYTE PTR [ecx-0x512e244a],cl
  410620:	lds    esi,FWORD PTR [edx+0x6c]
  410623:	cmp    eax,0xbf32f4cd
  410628:	add    DWORD PTR [ecx],eax
  41062a:	outs   dx,BYTE PTR ds:[esi]
  41062b:	jns    0x4105b8
  41062d:	cld    
  41062e:	in     al,dx
  41062f:	inc    edx
  410630:	dec    esp
  410631:	retf   0x3fcc
  410634:	adc    ah,bl
  410636:	and    DWORD PTR [edx],eax
  410638:	cmp    BYTE PTR ds:[esi+0x84b8215],ah
  41063f:	push   0x57a9290
  410644:	inc    ebp
  410645:	sub    ebx,DWORD PTR [ecx+edi*8]
  410648:	pop    eax
  410649:	push   ss
  41064a:	fdecstp 
  41064c:	push   ebx
  41064d:	pop    esp
  41064e:	push   eax
  41064f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410650:	pop    ds
  410651:	stos   BYTE PTR es:[edi],al
  410652:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410653:	lahf   
  410654:	inc    eax
  410655:	addr16 pushf 
  410657:	jecxz  0x410683
  410659:	pushf  
  41065a:	js     0x410687
  41065c:	pop    es
  41065d:	mov    esi,cs
  41065f:	(bad)  
  410660:	xchg   ebp,eax
  410661:	mov    al,ds:0x193891f1
  410666:	out    dx,al
  410667:	iret   
  410668:	in     eax,dx
  410669:	add    al,0xb
  41066b:	jmp    0x41061a
  41066d:	add    eax,0x599aa693
  410672:	in     al,0x1b
  410674:	fyl2xp1 
  410676:	jmp    0x410644
  410678:	(bad)  
  410679:	aam    0xb4
  41067b:	mov    WORD PTR [ecx-0x58703a50],cs
  410681:	nop
  410682:	mov    ebp,0xb4dfc535
  410687:	pop    ss
  410688:	push   ds
  410689:	cmp    bh,BYTE PTR [edi-0x2c1b7e4c]
  41068f:	xor    al,0xca
  410691:	pop    ebp
  410692:	icebp  
  410693:	mov    ecx,DWORD PTR [ebx+edx*2]
  410696:	fsubp  st(2),st
  410698:	sbb    eax,0x282ca5c8
  41069d:	rcl    BYTE PTR [edx+eiz*1],0x88
  4106a1:	repz add esi,DWORD PTR [edi-0x1c7337cb]
  4106a8:	xor    DWORD PTR ds:0x6cfd4803,0xeed31fe2
  4106b2:	fbstp  TBYTE PTR [ebx]
  4106b4:	ins    DWORD PTR es:[edi],dx
  4106b5:	call   0xd2d7:0x73fddaa8
  4106bc:	sahf   
  4106bd:	and    ah,dl
  4106bf:	hlt    
  4106c0:	cdq    
  4106c1:	mov    edi,0xdac464c4
  4106c6:	mov    cl,0x50
  4106c8:	push   ecx
  4106c9:	into   
  4106ca:	mov    edi,0xe5f94e9c
  4106cf:	fidiv  DWORD PTR [esi+0x3afb617]
  4106d5:	lds    eax,FWORD PTR [eax*8+0x289dafec]
  4106dc:	stc    
  4106dd:	and    dh,BYTE PTR [ebp-0x37bcc48c]
  4106e3:	repnz fnstcw WORD PTR ds:0x21258109
  4106ea:	and    BYTE PTR [eax+edx*8],ch
  4106ed:	aas    
  4106ee:	leave  
  4106ef:	jne    0x4106d7
  4106f1:	idiv   DWORD PTR [esi]
  4106f3:	in     eax,dx
  4106f4:	nop
  4106f5:	jae    0x410754
  4106f7:	mov    ah,0x6a
  4106f9:	push   ebp
  4106fa:	arpl   WORD PTR ds:0x899f3d15,cx
  410700:	dec    ecx
  410701:	xor    DWORD PTR [eax+0x66],ebx
  410704:	mov    fs,ecx
  410706:	lock add DWORD PTR [ebx-0x5e15d653],ebp
  41070d:	bound  ebx,QWORD PTR [esi]
  41070f:	pop    ecx
  410710:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410711:	mov    BYTE PTR [ecx+0x319816f9],dh
  410717:	adc    bh,BYTE PTR [edx-0x3f]
  41071a:	or     eax,DWORD PTR [eax+0xb]
  41071d:	cmp    ebp,DWORD PTR [edx-0x69]
  410720:	cmp    bh,BYTE PTR [ebx-0x1e5ef96]
  410726:	push   eax
  410727:	mov    bh,0xd5
  410729:	inc    ebp
  41072a:	lods   eax,DWORD PTR ds:[esi]
  41072b:	push   0x74
  41072d:	imul   ah
  41072f:	add    esi,DWORD PTR [edx]
  410731:	bound  edx,QWORD PTR [eax]
  410733:	pop    es
  410734:	aaa    
  410735:	loopne 0x410712
  410737:	and    DWORD PTR [ebp-0x22],ebx
  41073a:	push   ds
  41073b:	into   
  41073c:	sbb    DWORD PTR [ebp-0x4f],edx
  41073f:	fild   QWORD PTR [edx-0x270e9a70]
  410745:	pusha  
  410746:	mov    ecx,0xe67392d3
  41074b:	fwait
  41074c:	dec    eax
  41074d:	cmp    BYTE PTR [edi+0x69],0x48
  410751:	sub    DWORD PTR [edi-0x5d2560aa],ebx
  410757:	push   0x905f4ce5
  41075c:	mov    BYTE PTR [edx+0x31],dl
  41075f:	in     eax,dx
  410760:	dec    edi
  410761:	add    ch,BYTE PTR [eax]
  410763:	call   0x60:0xb1ff22e5
  41076a:	sar    BYTE PTR [esi],0xd1
  41076d:	cs push edx
  41076f:	jecxz  0x410753
  410771:	addr16 (bad) 
  410773:	in     eax,dx
  410774:	outs   dx,DWORD PTR ds:[esi]
  410775:	std    
  410776:	sbb    dl,bl
  410778:	add    DWORD PTR ds:0xcfca4cee,esi
  41077e:	or     BYTE PTR ds:0xabe15e59,dl
  410784:	ja     0x4107f8
  410786:	add    dh,BYTE PTR [ebx+0x38]
  410789:	and    BYTE PTR [ebp-0x74],al
  41078c:	sub    dh,BYTE PTR [ebx+edx*8+0x48]
  410790:	clc    
  410791:	mov    dh,0xc5
  410793:	push   0x17ded9c6
  410798:	jno    0x4107ce
  41079a:	cs (bad) 
  41079c:	rcr    BYTE PTR [esi+0x2d],1
  41079f:	xor    bh,BYTE PTR [ebp+0x7bd8f43d]
  4107a5:	and    ch,BYTE PTR [edi]
  4107a7:	ins    DWORD PTR es:[edi],dx
  4107a8:	in     al,dx
  4107a9:	(bad)  
  4107aa:	lods   eax,DWORD PTR ds:[esi]
  4107ab:	outs   dx,BYTE PTR ds:[esi]
  4107ac:	mov    WORD PTR [ecx],?
  4107ae:	les    edx,FWORD PTR [ebp-0x7a4d6f95]
  4107b4:	inc    edx
  4107b5:	jne    0x41077a
  4107b7:	mov    esi,0x9ee4cc89
  4107bc:	xor    edx,ebx
  4107be:	mov    bl,0xff
  4107c0:	lds    edx,FWORD PTR [edi]
  4107c2:	mov    eax,0x44e53ab9
  4107c7:	mov    ah,0xcf
  4107c9:	stc    
  4107ca:	push   ds
  4107cb:	ret    0x244e
  4107ce:	dec    esp
  4107cf:	xchg   ecx,eax
  4107d0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4107d1:	pusha  
  4107d2:	mov    bl,0xd3
  4107d4:	jb     0x4107be
  4107d6:	into   
  4107d7:	jg     0x41080b
  4107d9:	jnp    0x410792
  4107db:	push   esp
  4107dc:	dec    esi
  4107dd:	cmp    edi,DWORD PTR [edx]
  4107df:	retf   
  4107e0:	push   eax
  4107e1:	dec    edi
  4107e2:	stos   DWORD PTR es:[edi],eax
  4107e3:	lods   al,BYTE PTR ds:[esi]
  4107e4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4107e5:	pop    edx
  4107e6:	inc    esi
  4107e7:	(bad)  
  4107e8:	popf   
  4107e9:	and    bh,BYTE PTR [eax-0xdc9b370]
  4107ef:	xor    DWORD PTR [ecx+edi*4],esi
  4107f2:	xor    eax,0x64ba04fe
  4107f7:	(bad)  
  4107f9:	test   al,0x42
  4107fb:	pop    esp
  4107fc:	sbb    ebx,ebx
  4107fe:	pop    esi
  4107ff:	mov    bh,0xd2
  410801:	xor    eax,0x41dd9d0f
  410806:	jae    0x4107c3
  410808:	icebp  
  410809:	imul   edi,DWORD PTR [ecx-0x51],0x14e7b5f9
  410810:	push   0xfbc0baaf
  410815:	mov    ds:0x4540102,eax
  41081a:	xchg   esi,eax
  41081b:	lea    edx,[ebx+ebp*1]
  41081e:	adc    dl,BYTE PTR [esi-0x416874b6]
  410824:	xchg   BYTE PTR [edi],bl
  410826:	push   edi
  410827:	pop    ecx
  410828:	and    BYTE PTR [ecx],ch
  41082a:	nop
  41082b:	lds    edi,FWORD PTR [esp+edi*2+0x34f9c8ae]
  410832:	iret   
  410833:	imul   eax,DWORD PTR [edx-0x68],0x6d
  410837:	push   0xffffffa3
  410839:	outs   dx,DWORD PTR ds:[esi]
  41083a:	inc    edi
  41083b:	push   ds
  41083c:	pop    ds
  41083d:	sub    eax,0xebd616ae
  410842:	int3   
  410843:	aaa    
  410844:	enter  0x9f59,0x9a
  410848:	dec    ebp
  410849:	xor    al,BYTE PTR [edi-0x1eee388b]
  41084f:	test   eax,0xa0241ac9
  410854:	dec    esp
  410855:	inc    eax
  410856:	gs imul ebx,esi,0xfffffffe
  41085a:	mov    eax,0xc1e069b0
  41085f:	pop    ss
  410860:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410861:	sti    
  410862:	mov    BYTE PTR [esi+0x56],dh
  410865:	cmp    eax,0xa6a28fba
  41086a:	xchg   ebx,eax
  41086b:	and    edi,DWORD PTR [edi+0x7da90c8b]
  410871:	inc    esp
  410872:	jmp    DWORD PTR [ebp-0xa1d160a]
  410878:	cmc    
  410879:	mov    edi,0x78f6cf8c
  41087e:	mov    DWORD PTR [edi+0x209f05bd],0x4e0d077e
  410888:	(bad)  
  410889:	jp     0x41085c
  41088b:	jp     0x410855
  41088d:	rcr    BYTE PTR [ebp+0x51c49b26],cl
  410893:	mov    ebx,0x59d88a69
  410898:	call   0x21e90b70
  41089d:	jb     0x4108f4
  41089f:	mov    eax,ds:0x3618eb48
  4108a4:	mov    dh,0xd
  4108a6:	imul   esi,DWORD PTR [edx],0xffffff9f
  4108a9:	loope  0x4108f2
  4108ab:	or     DWORD PTR ds:[edx+0x1a],ebp
  4108af:	mov    ah,0x5a
  4108b1:	push   edx
  4108b2:	ret    
  4108b3:	cmp    DWORD PTR [esi+0x34],edx
  4108b6:	sar    DWORD PTR ds:0xfce73e40,0x19
  4108bd:	aad    0x65
  4108bf:	dec    esi
  4108c0:	rcr    BYTE PTR [ebp+esi*8+0x1ddf3b56],1
  4108c7:	cmp    BYTE PTR [edx+edx*2+0x112299e],0x99
  4108cf:	frstor [edx]
  4108d1:	mov    ebp,0xeae52e8d
  4108d6:	mov    edx,0x39696ece
  4108db:	and    al,0x42
  4108dd:	adc    al,0x9d
  4108df:	push   esp
  4108e0:	(bad)  
  4108e1:	mov    edi,0xb92ec7a0
  4108e6:	out    dx,al
  4108e7:	push   es
  4108e8:	sub    DWORD PTR [esi+0x17da4d7b],0xffffff89
  4108ef:	in     eax,dx
  4108f0:	fnstcw WORD PTR [ecx]
  4108f2:	mov    bh,BYTE PTR [edi]
  4108f4:	cmp    eax,0x12fcfe50
  4108f9:	or     eax,0xdfd3cde6
  4108fe:	dec    ecx
  4108ff:	xchg   edi,eax
  410900:	sbb    eax,0x7701ca45
  410905:	pushf  
  410906:	call   0x14bf:0x8bf10ef6
  41090d:	imul   eax,DWORD PTR [esi-0x44],0xd
  410911:	stos   BYTE PTR es:[edi],al
  410912:	and    al,0x19
  410914:	xlat   BYTE PTR ds:[ebx]
  410915:	cmp    DWORD PTR [edi+edi*2],ecx
  410918:	mov    al,0xb7
  41091a:	aad    0x5c
  41091c:	test   BYTE PTR [esi],ch
  41091e:	xor    ebx,DWORD PTR [edx+ebx*2]
  410921:	sbb    al,0x4f
  410923:	popa   
  410924:	lahf   
  410925:	outs   dx,DWORD PTR ds:[esi]
  410926:	call   0xd800348
  41092b:	jl     0x41099a
  41092d:	cwde   
  41092e:	out    dx,eax
  41092f:	pop    ebx
  410930:	jmp    0x3bae:0x8a4dc77d
  410937:	test   al,0x85
  410939:	shl    DWORD PTR [eax+0x72f1e107],0x8a
  410940:	jmp    0x49554b74
  410945:	sbb    BYTE PTR [edi],cl
  410947:	lock inc eax
  410949:	imul   ebx,DWORD PTR [edx],0xfe439032
  41094f:	jo     0x410931
  410951:	sti    
  410952:	pop    eax
  410953:	mov    DWORD PTR [esi],ebx
  410955:	push   edx
  410956:	inc    edi
  410957:	fidiv  DWORD PTR [edx+0x61f6c582]
  41095d:	cwde   
  41095e:	sub    dh,BYTE PTR es:[ecx]
  410961:	mov    ah,BYTE PTR [eax]
  410963:	cli    
  410964:	push   0x1f
  410966:	(bad)
  410969:	pop    ds
  41096a:	xchg   BYTE PTR [esi+0x41],ch
  41096d:	mov    edx,?
  41096f:	pop    ss
  410970:	mov    cl,0x20
  410972:	pop    edi
  410973:	cmp    ah,BYTE PTR [ebx+0x2122b9be]
  410979:	jg     0x41093c
  41097b:	xor    BYTE PTR [eax+0x45],cl
  41097e:	pop    ecx
  41097f:	xchg   edx,eax
  410980:	inc    edi
  410981:	(bad)  
  410982:	cmp    eax,0xc508dc82
  410987:	mov    bl,0xb8
  410989:	test   eax,0x92520854
  41098e:	mov    edi,0xf7931f2f
  410993:	sbb    DWORD PTR [eax],edi
  410995:	nop
  410996:	test   WORD PTR [ebp+0x30],0x170e
  41099c:	jp     0x410982
  41099e:	pop    es
  41099f:	push   esi
  4109a0:	and    dh,BYTE PTR [ecx]
  4109a2:	sbb    DWORD PTR ds:[eax-0x172c31ee],ebp
  4109a9:	cmp    BYTE PTR [ebx],0x7d
  4109ac:	mov    ds:0x1b986f06,eax
  4109b1:	fldln2 
  4109b3:	test   al,0x1d
  4109b5:	es or  eax,0xf08cf666
  4109bb:	outs   dx,DWORD PTR ds:[esi]
  4109bc:	rol    DWORD PTR [esi+0x693422c7],1
  4109c2:	lock jne 0x4109f4
  4109c5:	xchg   ebp,eax
  4109c6:	fdiv   QWORD PTR [esi+0x7bf78605]
  4109cc:	outs   dx,DWORD PTR ds:[esi]
  4109cd:	mov    ebp,0x5d6233bc
  4109d2:	pop    ss
  4109d3:	xchg   ebx,eax
  4109d4:	push   ebp
  4109d5:	pop    esi
  4109d6:	loope  0x41095e
  4109d8:	rcr    BYTE PTR [ebp-0x50413c21],0xa4
  4109df:	cld    
  4109e0:	stos   BYTE PTR es:[edi],al
  4109e1:	mov    dh,0x7b
  4109e3:	call   0x5814:0xf2ce3388
  4109ea:	pushf  
  4109eb:	mov    esi,0xf784d864
  4109f0:	xor    al,0x37
  4109f2:	mov    WORD PTR [ebp-0x7],gs
  4109f5:	int3   
  4109f6:	in     al,dx
  4109f7:	cmp    al,0x8c
  4109f9:	outs   dx,BYTE PTR ds:[esi]
  4109fa:	shr    DWORD PTR [eax+0xf5f51b0],cl
  410a00:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410a01:	xchg   ebp,eax
  410a02:	loop   0x410a37
  410a04:	dec    eax
  410a05:	out    dx,eax
  410a06:	ror    BYTE PTR [ebx+0x69df3a0f],cl
  410a0c:	xor    al,0x54
  410a0e:	xor    DWORD PTR ds:0x5ff88f82,esp
  410a14:	mov    edi,0x618da0b7
  410a19:	rcl    al,1
  410a1b:	fidiv  DWORD PTR [esi]
  410a1d:	mov    al,ds:0xaeb2b3f8
  410a23:	into   
  410a24:	xchg   edi,eax
  410a25:	jo     0x4109ae
  410a27:	push   eax
  410a28:	enter  0xb626,0x11
  410a2c:	mov    ebx,0xee9d1700
  410a31:	std    
  410a32:	cmc    
  410a33:	imul   esi,DWORD PTR [ecx+0x5c7fc0fd],0xff71120f
  410a3d:	aam    0xbc
  410a3f:	out    0xa7,al
  410a41:	je     0x410a5b
  410a43:	and    DWORD PTR [edi],0xfffffff5
  410a46:	scas   eax,DWORD PTR es:[edi]
  410a47:	and    eax,0xfa9a9638
  410a4c:	mov    esp,0xc4b933c7
  410a51:	xor    edi,DWORD PTR [eax-0x1c75c0]
  410a57:	out    dx,eax
  410a58:	push   0xffffff83
  410a5a:	push   edx
  410a5b:	sub    BYTE PTR [ecx-0x5f9c3a87],dl
  410a61:	mov    eax,0x83365909
  410a66:	add    bh,BYTE PTR [ecx+0x2507614f]
  410a6c:	adc    DWORD PTR [esi],ecx
  410a6e:	adc    eax,0x99ea37db
  410a73:	sub    BYTE PTR [ebp-0x64458633],dh
  410a79:	enter  0xad1c,0x70
  410a7d:	out    0x28,al
  410a7f:	jge    0x410a66
  410a81:	fs cld 
  410a83:	cdq    
  410a84:	stos   BYTE PTR es:[edi],al
  410a85:	inc    ebx
  410a86:	xchg   ebp,eax
  410a87:	pop    ss
  410a88:	faddp  st(4),st
  410a8a:	xchg   ecx,eax
  410a8b:	dec    ebp
  410a8c:	call   0x214c:0x5ccf4a
  410a93:	retf   0xf259
  410a96:	clc    
  410a97:	dec    ebx
  410a98:	inc    edi
  410a99:	pop    ebx
  410a9a:	mov    ds:0x3a14c783,al
  410a9f:	fs xor al,0xac
  410aa2:	ror    BYTE PTR [ebp-0x70873f25],cl
  410aa8:	into   
  410aa9:	mov    cl,0x75
  410aab:	rcr    DWORD PTR [edi-0x10378437],0xed
  410ab2:	cld    
  410ab3:	push   edx
  410ab4:	cmp    al,0xc2
  410ab6:	(bad)  
  410ab7:	push   edi
  410ab8:	loopne 0x410b0d
  410aba:	int    0xc3
  410abc:	jno    0x410adc
  410abe:	fstp   DWORD PTR [ebx-0x68893f6f]
  410ac4:	in     eax,0xd3
  410ac6:	es ja  0x410a74
  410ac9:	repz mov dh,0xd7
  410acc:	jle    0x410b29
  410ace:	inc    esi
  410acf:	mov    ds:0x38bde1c,al
  410ad4:	outs   dx,BYTE PTR ds:[esi]
  410ad5:	push   edx
  410ad6:	xchg   DWORD PTR [edi+0x5d],esp
  410ad9:	add    al,al
  410adb:	imul   ecx,DWORD PTR [edx+ebp*1-0x45],0x6e
  410ae0:	sub    al,BYTE PTR [edi+0xf]
  410ae3:	retf   
  410ae4:	adc    ebp,DWORD PTR [edx-0x70]
  410ae7:	pop    es
  410ae8:	dec    ebx
  410ae9:	push   es
  410aea:	bound  edx,QWORD PTR [ebx]
  410aec:	mov    bl,bl
  410aee:	mov    edi,0xf5506929
  410af3:	in     al,0x3
  410af5:	addr16 (bad) 
  410af8:	jecxz  0x410a88
  410afa:	int    0x11
  410afc:	xor    eax,DWORD PTR ds:0xa4dc956c
  410b02:	jmp    0xa4f759e4
  410b07:	mov    ch,BYTE PTR [edi]
  410b09:	gs or  eax,0x1c051313
  410b0f:	mov    ebx,0x456d8ad0
  410b14:	ss dec ecx
  410b16:	fsub   DWORD PTR [ecx+0xe59cdaf]
  410b1c:	push   cs
  410b1d:	add    dl,dh
  410b1f:	add    edx,esp
  410b21:	cmp    dl,BYTE PTR [ecx]
  410b23:	dec    esp
  410b24:	sub    eax,0xba4410cf
  410b29:	push   ecx
  410b2a:	dec    esp
  410b2b:	mov    ebx,0x11498fc5
  410b30:	popf   
  410b31:	clc    
  410b32:	inc    ebp
  410b33:	test   ebx,edi
  410b35:	or     edi,ebx
  410b37:	xor    ebx,DWORD PTR [ecx+0x13]
  410b3a:	xchg   edx,eax
  410b3b:	ret    
  410b3c:	test   BYTE PTR [eax+0x8fd059e],0x32
  410b43:	mov    ?,WORD PTR [eax-0x6a]
  410b46:	jbe    0x410b6b
  410b48:	neg    DWORD PTR [edi+0x25]
  410b4b:	out    dx,eax
  410b4c:	loop   0x410b9b
  410b4e:	daa    
  410b4f:	jl     0x410b68
  410b51:	int    0x98
  410b53:	xor    al,0xff
  410b55:	push   ss
  410b56:	les    eax,FWORD PTR [ecx]
  410b58:	push   eax
  410b59:	cmc    
  410b5a:	pop    ds
  410b5b:	dec    eax
  410b5c:	xchg   ecx,eax
  410b5d:	push   esi
  410b5e:	jg     0x410ae0
  410b60:	(bad)  
  410b61:	jle    0x410bd8
  410b63:	cmp    al,0xdb
  410b65:	mov    ds:0x7763e2a3,eax
  410b6a:	imul   edi,DWORD PTR [ecx+0x4f],0x45d85a4d
  410b71:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410b72:	jmp    0xf5e1:0x9ce6df94
  410b79:	cmc    
  410b7a:	sbb    al,0x43
  410b7c:	fwait
  410b7d:	pop    esp
  410b7e:	fmul   QWORD PTR [ebx]
  410b80:	or     ch,BYTE PTR [edx-0x3981a8b1]
  410b86:	test   BYTE PTR [ebx-0x4d],ch
  410b89:	jmp    0x410b39
  410b8b:	xor    DWORD PTR [esi+0x6c],edx
  410b8e:	add    al,0x75
  410b90:	cmp    eax,0xd2147c04
  410b95:	scas   eax,DWORD PTR es:[edi]
  410b96:	out    0xd3,al
  410b98:	rcr    BYTE PTR [ebp-0x12],1
  410b9b:	repnz movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410b9d:	gs push ss
  410b9f:	idiv   BYTE PTR [ecx+0x7a]
  410ba2:	xchg   esi,eax
  410ba3:	xchg   ebp,eax
  410ba4:	inc    edi
  410ba5:	mov    esi,DWORD PTR [ecx]
  410ba7:	fstp   TBYTE PTR [edi]
  410ba9:	cmp    DWORD PTR [ebx-0x3686d8],ebx
  410baf:	fnsave ds:0x4c25c7ff
  410bb5:	add    bl,bh
  410bb7:	and    dh,BYTE PTR [eax+0x2fddd954]
  410bbd:	into   
  410bbe:	shl    BYTE PTR [eax+ebp*4+0x322b3cd2],0x40
  410bc6:	xchg   BYTE PTR [ebp-0x414123aa],cl
  410bcc:	mov    al,ds:0x7a519149
  410bd1:	pop    es
  410bd2:	leave  
  410bd3:	mov    esp,0x8fa7c8d2
  410bd8:	add    al,0xdc
  410bda:	mov    esp,0xbfd8260d
  410bdf:	add    eax,0x79272698
  410be4:	(bad)  
  410be6:	xchg   di,ax
  410be8:	dec    eax
  410be9:	sahf   
  410bea:	sub    al,BYTE PTR [esi+ecx*4-0x60]
  410bee:	sub    eax,0x52ab110d
  410bf3:	mov    DWORD PTR [ebx-0x47],ebp
  410bf6:	ret    
  410bf7:	sub    BYTE PTR [esi+0x19fa7490],ah
  410bfd:	dec    esi
  410bfe:	push   edx
  410bff:	lods   eax,DWORD PTR ds:[esi]
  410c00:	xor    bh,BYTE PTR ss:0xd3c68ab
  410c07:	and    ebp,0x26e0c716
  410c0d:	push   esi
  410c0e:	mov    ebx,0xbf3f2356
  410c13:	sbb    bh,al
  410c15:	mov    dh,0xd2
  410c17:	arpl   WORD PTR [eax+ebp*2+0x6cd88b97],cx
  410c1e:	push   esi
  410c1f:	xchg   BYTE PTR [ecx+0x0],ch
  410c22:	imul   edx,DWORD PTR [eax+0x58],0xdb1696dc
  410c29:	aaa    
  410c2a:	jmp    0x32875598
  410c2f:	jne    0x410bbf
  410c31:	xchg   esi,eax
  410c32:	mov    bl,0xd8
  410c34:	pop    edi
  410c35:	inc    edi
  410c36:	and    eax,0x962c1af6
  410c3b:	xchg   esp,eax
  410c3c:	cmp    dh,BYTE PTR [eax+0x591e7473]
  410c42:	jmp    0x410c80
  410c44:	cmp    ah,bh
  410c46:	jnp    0x410bf5
  410c48:	jae    0x410c99
  410c4a:	dec    ebp
  410c4b:	jge    0x410c8d
  410c4d:	jns    0x410c42
  410c4f:	call   0xa8d:0x8968fae9
  410c56:	out    dx,eax
  410c57:	div    DWORD PTR [ebp-0x47f36fe4]
  410c5d:	jg     0x410cb4
  410c5f:	and    ecx,DWORD PTR [ecx+0x7a]
  410c62:	xor    ebx,DWORD PTR [esi+0x15a88fae]
  410c68:	cdq    
  410c69:	int3   
  410c6a:	xor    DWORD PTR [ebp+0x77],ebp
  410c6d:	or     DWORD PTR [edx],eax
  410c6f:	and    eax,0xd808517e
  410c74:	dec    eax
  410c75:	inc    esp
  410c76:	push   0xbacdc9cc
  410c7b:	sbb    ebp,esp
  410c7d:	mov    dh,0x9
  410c7f:	add    bh,BYTE PTR [ebx]
  410c81:	adc    BYTE PTR [eax-0xc],dl
  410c84:	pop    eax
  410c85:	cmp    DWORD PTR [ecx],0xd062fc2f
  410c8b:	mov    al,ds:0x1bc845ac
  410c90:	push   cs
  410c91:	sub    al,0xec
  410c93:	xchg   esi,eax
  410c94:	jns    0x410d00
  410c96:	scas   al,BYTE PTR es:[edi]
  410c97:	jae    0x410c20
  410c99:	fwait
  410c9a:	imul   eax,DWORD PTR cs:[ecx-0x75588ac0],0xffffffd6
  410ca2:	lock shl DWORD PTR [esi+0x2b],cl
  410ca6:	shl    DWORD PTR [ebx+edx*1-0x5820067e],cl
  410cad:	loop   0x410d06
  410caf:	inc    edi
  410cb0:	push   ebx
  410cb1:	out    0xf8,eax
  410cb3:	and    DWORD PTR [esi-0x45],ebx
  410cb6:	jb     0x410ca2
  410cb8:	aam    0xf2
  410cba:	mov    dh,0xd2
  410cbc:	and    al,0xae
  410cbe:	repz mov esi,0x15a70b53
  410cc4:	rcl    BYTE PTR [ebx-0x42],0x9d
  410cc8:	push   edx
  410cc9:	ins    BYTE PTR es:[edi],dx
  410cca:	arpl   WORD PTR [ebx+ecx*2],ax
  410ccd:	(bad)  
  410cce:	cmp    BYTE PTR [edi+ecx*4+0x21],dl
  410cd2:	call   0xf0ec:0x614eecf7
  410cd9:	sahf   
  410cda:	dec    ebp
  410cdb:	test   DWORD PTR [edx],esi
  410cdd:	inc    edx
  410cde:	test   DWORD PTR [eax],edi
  410ce0:	pop    eax
  410ce1:	frstor [esi+0x5bddf7a9]
  410ce7:	mov    eax,ds:0x55a964f9
  410cec:	push   ds
  410ced:	mov    ebx,0xfa97c0c5
  410cf2:	jo     0x410ceb
  410cf4:	sbb    eax,0x4bd551ab
  410cf9:	lods   eax,DWORD PTR ds:[esi]
  410cfa:	test   al,0x47
  410cfc:	fdivr  st,st(7)
  410cfe:	aas    
  410cff:	add    DWORD PTR ds:0x6c301aa7,ecx
  410d05:	mov    ebp,0xa9a0a4e0
  410d0a:	leave  
  410d0b:	shl    DWORD PTR [edx-0x78],cl
  410d0e:	jno    0x410d27
  410d10:	jb     0x410d45
  410d12:	loopne 0x410d22
  410d14:	adc    al,BYTE PTR [ecx+ebp*2-0x3a070a13]
  410d1b:	rcl    DWORD PTR [edx+0x23],cl
  410d1e:	mov    esp,DWORD PTR [ebx-0x52ed2033]
  410d24:	pusha  
  410d25:	sbb    BYTE PTR [ebp+0x39],dl
  410d28:	std    
  410d29:	sbb    eax,0x9d1e0c94
  410d2e:	and    eax,0xc0188a42
  410d33:	push   ss
  410d34:	outs   dx,BYTE PTR ds:[esi]
  410d35:	pop    esi
  410d36:	sbb    esp,DWORD PTR [edx+0x5e]
  410d39:	sar    BYTE PTR [ebx-0x7fa332cc],cl
  410d3f:	mov    BYTE PTR [esp+esi*2+0x9d07cdd],bl
  410d46:	int3   
  410d47:	inc    eax
  410d48:	cmp    eax,0x36eeca1d
  410d4d:	repnz mov eax,0xf3c88701
  410d53:	mov    ds:0xda777061,al
  410d58:	push   cs
  410d59:	or     eax,0x78187818
  410d5e:	xor    eax,0xe22a8428
  410d63:	add    DWORD PTR [esi],esi
  410d65:	push   esp
  410d66:	sbb    eax,0x9e92df2d
  410d6b:	inc    edi
  410d6c:	sub    ebx,ecx
  410d6e:	loopne 0x410d76
  410d70:	cmp    al,0x92
  410d72:	je     0x410d5c
  410d74:	push   edi
  410d75:	mov    ebp,0xb340b39
  410d7a:	jbe    0x410d14
  410d7c:	popf   
  410d7d:	cwde   
  410d7e:	and    bh,BYTE PTR ds:0xb4283b
  410d84:	jecxz  0x410d75
  410d86:	jecxz  0x410db0
  410d88:	fsubr  QWORD PTR [ebx+0x6e]
  410d8b:	pop    ecx
  410d8c:	dec    eax
  410d8d:	mov    eax,?
  410d8f:	enter  0x6d5b,0xdb
  410d93:	sub    eax,0x8c01afa4
  410d98:	dec    esp
  410d99:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410d9a:	lock and edi,DWORD PTR [esi-0x3448a1ac]
  410da1:	pop    edx
  410da2:	xor    DWORD PTR [edx+0x6c],0x7d7019a
  410da9:	mov    di,0x989d
  410dad:	test   BYTE PTR [esp+eiz*4+0x30],al
  410db1:	jae    0x410db3
  410db3:	xor    BYTE PTR [edx-0x1c],ch
  410db6:	or     DWORD PTR [ebx+0x39],edx
  410db9:	xchg   ecx,eax
  410dba:	or     dh,ch
  410dbc:	shr    DWORD PTR [ecx],cl
  410dbe:	and    eax,0xb5bff7a5
  410dc3:	out    dx,eax
  410dc4:	pop    ss
  410dc5:	sub    bl,cl
  410dc7:	cmp    ebp,DWORD PTR [eax]
  410dc9:	(bad)  
  410dca:	arpl   WORD PTR ds:0x15480a6b,ax
  410dd0:	xlat   BYTE PTR ds:[ebx]
  410dd1:	dec    ecx
  410dd2:	shl    BYTE PTR [ebp-0x460bd37],cl
  410dd8:	sar    BYTE PTR [ebx+0x30],1
  410ddb:	aad    0xc1
  410ddd:	ficomp DWORD PTR [eax+0x79]
  410de0:	out    dx,eax
  410de1:	sub    edx,DWORD PTR [esi+0x3e]
  410de4:	sbb    ebp,DWORD PTR [ecx-0x2cfbfd49]
  410dea:	xchg   edx,eax
  410deb:	aas    
  410dec:	sub    eax,0x3ed3472e
  410df1:	pop    ebp
  410df2:	push   0x64
  410df4:	loop   0x410e6a
  410df6:	push   eax
  410df7:	test   al,0xf4
  410df9:	mov    dl,0x38
  410dfb:	cld    
  410dfc:	adc    eax,0xc9ad7f14
  410e01:	(bad)  
  410e02:	out    0xb7,eax
  410e04:	sbb    eax,0x6b6ed39e
  410e09:	cwde   
  410e0a:	mov    al,ds:0xcea67bf8
  410e0f:	push   ds
  410e10:	adc    esi,DWORD PTR [ecx+eax*1]
  410e13:	inc    ecx
  410e14:	(bad)  
  410e15:	call   0x3808de4e
  410e1a:	or     ebx,edi
  410e1c:	xor    DWORD PTR [edi],edi
  410e1e:	sar    BYTE PTR ds:[ebx+0x3a],cl
  410e22:	dec    ebp
  410e23:	aam    0x89
  410e25:	pop    ss
  410e26:	inc    edx
  410e27:	jmp    DWORD PTR [ecx-0x210d8ccc]
  410e2d:	sub    DWORD PTR [esi-0x49],esp
  410e30:	jl     0x410ddb
  410e32:	pop    esp
  410e33:	imul   edi,DWORD PTR [ebp+0x1c],0x1f
  410e37:	xchg   BYTE PTR [eax],bl
  410e39:	push   ebp
  410e3a:	push   cs
  410e3b:	dec    eax
  410e3c:	jle    0x410e1d
  410e3e:	pop    esp
  410e3f:	rcl    eax,cl
  410e41:	mov    esi,DWORD PTR [edx]
  410e43:	leave  
  410e44:	out    0x33,al
  410e46:	fistp  WORD PTR [ebp-0x15]
  410e49:	xor    al,0x3c
  410e4b:	pop    eax
  410e4c:	test   eax,0x938df3fa
  410e51:	pushaw 
  410e53:	dec    edi
  410e54:	fdiv   QWORD PTR [esi+0x41f9edda]
  410e5a:	adc    bl,BYTE PTR ds:0x3763825a
  410e60:	cwde   
  410e61:	jbe    0x410e54
  410e63:	scas   al,BYTE PTR es:[edi]
  410e64:	rcr    DWORD PTR ds:[ecx-0x5a25b0f7],cl
  410e6b:	cmp    ebp,ebx
  410e6d:	jl     0x410e04
  410e6f:	int    0x46
  410e71:	push   cs
  410e72:	mov    BYTE PTR [ecx],al
  410e74:	xchg   esi,eax
  410e75:	sub    al,0x97
  410e77:	rcr    BYTE PTR [ecx],1
  410e79:	jo     0x410e9f
  410e7b:	mov    bl,0xf7
  410e7d:	call   FWORD PTR ds:0xc048c5cc
  410e83:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410e84:	pop    eax
  410e85:	mov    ?,WORD PTR [esi+eiz*1]
  410e88:	jmp    0x90a7:0xa58e06ed
  410e8f:	cmp    BYTE PTR ds:0x62176657,ch
  410e95:	or     BYTE PTR [edi+0x4],0x4a
  410e99:	cli    
  410e9a:	fnstcw WORD PTR [edi+0x6a]
  410e9d:	shl    edi,0x10
  410ea0:	or     eax,0x7ea3b918
  410ea5:	imul   BYTE PTR [ecx-0x65d027aa]
  410eab:	mov    dl,0xdc
  410ead:	add    al,0xe6
  410eaf:	cs mov edx,0x511c89db
  410eb5:	dec    ebx
  410eb6:	pop    edi
  410eb7:	int    0xb4
  410eb9:	lea    ebp,[eax-0xd675023]
  410ebf:	inc    DWORD PTR [ebx]
  410ec1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410ec2:	cmc    
  410ec3:	popf   
  410ec4:	sub    ah,BYTE PTR ds:0x8445dfcf
  410eca:	adc    ch,BYTE PTR [ebx+0x2797fde3]
  410ed0:	jmp    0xcdcd067d
  410ed5:	nop
  410ed6:	sub    eax,0x1179c4d9
  410edb:	stos   DWORD PTR es:[edi],eax
  410edc:	stc    
  410edd:	es mov edi,ebx
  410ee0:	into   
  410ee1:	out    0x5b,eax
  410ee3:	or     eax,0x43279630
  410ee8:	les    eax,FWORD PTR [ecx+0x3d3fb9f]
  410eee:	cmp    eax,esi
  410ef0:	mov    ebx,0xdead8d4b
  410ef5:	jbe    0x410ef9
  410ef7:	mov    al,0xe1
  410ef9:	or     cl,BYTE PTR [eax-0x22fff76c]
  410eff:	mov    eax,ds:0x858512fb
  410f04:	mov    WORD PTR [ecx],?
  410f06:	fcom   QWORD PTR [ebx+eax*2+0x65b5ee3c]
  410f0d:	xor    BYTE PTR [eax+0x11],ch
  410f10:	sbb    al,0x9f
  410f12:	xchg   ebp,eax
  410f13:	pop    ebp
  410f14:	sti    
  410f15:	sbb    BYTE PTR [edi-0x6b7ce64c],bh
  410f1b:	arpl   WORD PTR [edi],cx
  410f1d:	pop    edi
  410f1e:	jmp    0x1f93:0x3bb51cee
  410f25:	cli    
  410f26:	mov    ds:0x4301f083,al
  410f2b:	call   0xad9f:0xf72b55dc
  410f32:	hlt    
  410f33:	cli    
  410f34:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410f35:	add    dh,BYTE PTR [edx+ebp*2-0x22c16466]
  410f3c:	rcr    bl,0x10
  410f3f:	adc    DWORD PTR [ebx],ecx
  410f41:	xchg   ebp,eax
  410f42:	jmp    0x410f8c
  410f44:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410f45:	adc    eax,0x9c076cc0
  410f4a:	hlt    
  410f4b:	or     DWORD PTR [edi+0x2fe4321e],ebx
  410f51:	scas   al,BYTE PTR es:[edi]
  410f52:	xor    ch,BYTE PTR [edi]
  410f54:	pop    es
  410f55:	in     eax,0xcf
  410f57:	aam    0x94
  410f59:	icebp  
  410f5a:	out    0x81,al
  410f5c:	dec    esp
  410f5d:	out    dx,eax
  410f5e:	mov    ds:0xf56a1de8,eax
  410f63:	sbb    al,0x4d
  410f65:	or     BYTE PTR [eax],bh
  410f67:	jmp    0xc3c10f63
  410f6c:	fild   DWORD PTR [eax-0x60]
  410f6f:	cmp    al,0x99
  410f71:	sbb    ch,BYTE PTR [edx+esi*4]
  410f74:	test   BYTE PTR [edi+0x27],0xd0
  410f78:	jae    0x410f11
  410f7a:	or     ah,BYTE PTR [eax-0x61]
  410f7d:	inc    eax
  410f7e:	or     DWORD PTR [edi+0x7c],ebx
  410f81:	ds pop ebp
  410f83:	mov    bh,0xec
  410f85:	cmc    
  410f86:	mov    edx,0xb43bdce3
  410f8b:	jbe    0x410f61
  410f8d:	test   BYTE PTR [esp+esi*2],cl
  410f90:	mul    DWORD PTR [esi]
  410f92:	mov    fs,WORD PTR [ecx-0x1c]
  410f95:	or     BYTE PTR [ebx],dl
  410f97:	mov    al,BYTE PTR [esi-0x517892ce]
  410f9d:	jge    0x410f83
  410f9f:	lea    ebp,[edi+0x28c148f5]
  410fa5:	cld    
  410fa6:	inc    eax
  410fa7:	es xchg esp,eax
  410fa9:	dec    esi
  410faa:	xchg   BYTE PTR ds:0x3b2cb102,ch
  410fb0:	sbb    BYTE PTR [eax-0x56],dh
  410fb3:	call   0x8f22:0x92d11746
  410fba:	sub    edi,0xffffffbd
  410fbd:	fidivr DWORD PTR [eax-0x78a28b34]
  410fc3:	ror    BYTE PTR [ebx],cl
  410fc5:	push   ds
  410fc6:	loop   0x411042
  410fc8:	xor    al,BYTE PTR [ebx]
  410fca:	(bad)  
  410fcb:	in     eax,0x5
  410fcd:	rcr    DWORD PTR [ebp+edi*1+0xc016b56],0xfe
  410fd5:	(bad)  
  410fd6:	loopne 0x411032
  410fd8:	fcmovbe st,st(6)
  410fda:	and    eax,0x8ec0986a
  410fdf:	inc    edx
  410fe0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410fe1:	mov    esi,0xa450e8de
  410fe6:	push   cs
  410fe7:	or     cl,BYTE PTR [eax-0x533a4158]
  410fed:	aad    0x5d
  410fef:	pop    edi
  410ff0:	hlt    
  410ff1:	dec    esi
  410ff2:	sti    
  410ff3:	mov    esp,DWORD PTR [edi+0x582b2b89]
  410ff9:	jnp    0x410f9b
  410ffb:	jnp    0x410feb
  410ffd:	push   edx
  410ffe:	jg     0x411034
  411000:	ins    BYTE PTR es:[edi],dx
  411001:	adc    al,0xd3
  411003:	pop    esi
  411004:	outs   dx,DWORD PTR gs:[esi]
  411006:	in     eax,0x57
  411008:	mov    eax,0x42d2e708
  41100d:	mov    esi,0x9e78f831
  411012:	mov    ecx,0xde19974e
  411017:	dec    ebx
  411018:	or     ebp,DWORD PTR [esp+ebx*4-0x35]
  41101c:	fldenv [eax]
  41101e:	push   0x2351f888
  411023:	fimul  WORD PTR [edi+0x8]
  411026:	push   esi
  411027:	(bad)  
  411028:	fst    QWORD PTR ds:0x5554ef87
  41102e:	call   0x9457:0xea648e2d
  411035:	push   cs
  411036:	mov    edx,0x53361772
  41103b:	ins    DWORD PTR es:[edi],dx
  41103c:	dec    edi
  41103d:	jns    0x41103c
  41103f:	xor    edx,0x5075fd51
  411045:	ss loopne 0x411057
  411048:	call   0x8f38863b
  41104d:	dec    ebx
  41104e:	aaa    
  41104f:	adc    ah,ah
  411051:	pop    esp
  411052:	jnp    0x410ffe
  411054:	out    dx,al
  411055:	cmc    
  411056:	imul   BYTE PTR cs:[ebp+0x7b]
  41105a:	add    bl,BYTE PTR ds:0x243b5081
  411060:	adc    eax,0xb9d80e63
  411065:	mov    dh,0x8
  411067:	push   ebx
  411068:	fst    st(6)
  41106a:	push   ds
  41106b:	inc    ecx
  41106c:	sahf   
  41106d:	lds    eax,FWORD PTR [ebx]
  41106f:	int3   
  411070:	ss ja  0x411078
  411073:	lds    eax,FWORD PTR [edx+0x364e0f5]
  411079:	mov    edx,0x6929e79c
  41107e:	retf   0x31d9
  411081:	aad    0xe3
  411083:	mov    dl,0x22
  411085:	and    BYTE PTR [edx-0x13],ch
  411088:	cli    
  411089:	fucomp st(5)
  41108b:	int    0xcf
  41108d:	inc    ebx
  41108e:	xchg   DWORD PTR [eax-0x26e4b638],edx
  411094:	loopne 0x411095
  411096:	(bad)  
  411097:	ror    DWORD PTR [esi-0x1290dc03],1
  41109d:	push   ebp
  41109e:	jno    0x4110e4
  4110a0:	outs   dx,DWORD PTR ds:[esi]
  4110a1:	dec    esi
  4110a2:	push   ecx
  4110a3:	inc    esp
  4110a4:	aas    
  4110a5:	xchg   esp,eax
  4110a6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4110a7:	add    esi,DWORD PTR [ecx-0x56be95c8]
  4110ad:	cmp    eax,0xa80a2fe
  4110b2:	cld    
  4110b3:	lds    esp,FWORD PTR [edx-0x6fcb7bec]
  4110b9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4110ba:	add    al,0xf4
  4110bc:	aad    0x97
  4110be:	sub    DWORD PTR [eax+0x7491e3d9],0xffffffa4
  4110c5:	ror    BYTE PTR [ebp-0x7b],1
  4110c8:	push   eax
  4110c9:	and    eax,0x1c8072a8
  4110ce:	fnstenv [esi+0x10]
  4110d1:	repnz inc ecx
  4110d3:	and    al,0x8b
  4110d5:	or     ebp,0x2dea3775
  4110db:	inc    ebp
  4110dc:	pop    eax
  4110dd:	stos   DWORD PTR es:[edi],eax
  4110de:	loopne 0x411063
  4110e0:	or     BYTE PTR [ebp+0x2c13677f],al
  4110e6:	int3   
  4110e7:	add    al,0x72
  4110e9:	jecxz  0x4110b5
  4110eb:	stc    
  4110ec:	xlat   BYTE PTR ds:[ebx]
  4110ed:	dec    edx
  4110ee:	aad    0x75
  4110f0:	outs   dx,DWORD PTR ds:[esi]
  4110f1:	jnp    0x41114e
  4110f3:	retf   
  4110f4:	jp     0x411146
  4110f6:	je     0x41114e
  4110f8:	or     edi,DWORD PTR ds:[edi-0x370da511]
  4110ff:	xchg   esp,eax
  411100:	popf   
  411101:	pop    edi
  411102:	mov    BYTE PTR [ecx+0x1d64302d],0xf
  411109:	jo     0x4110ee
  41110b:	add    al,0xd3
  41110d:	sahf   
  41110e:	pop    ss
  41110f:	mov    esp,DWORD PTR [eax+0x4b]
  411112:	cmp    BYTE PTR [eax+0x34f2e32f],0xa5
  411119:	jle    0x4110e1
  41111b:	sub    dh,BYTE PTR ds:0x91b2596d
  411121:	jbe    0x4110e7
  411123:	fxch   st(2)
  411125:	xor    al,dh
  411127:	fimul  DWORD PTR [eax-0x430c368e]
  41112d:	push   cs
  41112e:	jbe    0x411122
  411130:	fdiv   DWORD PTR [ecx+0x30]
  411133:	jecxz  0x4110fe
  411135:	dec    ebp
  411136:	out    dx,eax
  411137:	mov    eax,0x3fe4db8a
  41113c:	mov    al,0x34
  41113e:	adc    ebx,DWORD PTR [ebp+0x47c12f34]
  411144:	push   ss
  411145:	push   ds
  411146:	jnp    0x4110f2
  411148:	fsub   QWORD PTR [ecx-0x4003d434]
  41114e:	add    edi,esi
  411150:	sbb    bh,BYTE PTR [edi+edi*2+0x21]
  411154:	sbb    BYTE PTR [ebx],al
  411156:	mov    ah,0x7d
  411158:	out    0xea,al
  41115a:	adc    DWORD PTR [eax-0x1ac9b782],0x4b
  411161:	mov    ecx,0xb99070c4
  411166:	fwait
  411167:	ret    0x8635
  41116a:	push   ss
  41116b:	fistp  WORD PTR [eax-0x7ae7d58]
  411171:	push   ebp
  411172:	pusha  
  411173:	or     BYTE PTR [eax],ch
  411175:	(bad)  
  411176:	mov    ebx,0x3cbb8636
  41117b:	loope  0x4111ab
  41117d:	xchg   ecx,eax
  41117e:	pop    eax
  41117f:	cmp    al,0xd4
  411181:	loope  0x4111fc
  411183:	in     eax,0x62
  411185:	loopne 0x411111
  411187:	add    edi,DWORD PTR [eax+0x5b]
  41118a:	test   eax,0x9f7a7c6b
  41118f:	inc    eax
  411190:	inc    ebp
  411191:	dec    edi
  411192:	xchg   ebp,eax
  411193:	pop    esp
  411194:	jne    0x4111da
  411196:	fild   QWORD PTR [esi]
  411198:	cs inc ebx
  41119a:	popa   
  41119b:	mov    bh,0x91
  41119d:	inc    ecx
  41119e:	aad    0x66
  4111a0:	ror    ebp,1
  4111a2:	inc    ecx
  4111a3:	pusha  
  4111a4:	dec    esi
  4111a5:	loopne 0x4111c6
  4111a7:	mov    BYTE PTR [ebp-0x64],bl
  4111aa:	xor    eax,0x4e1db2e2
  4111af:	lods   al,BYTE PTR ds:[esi]
  4111b0:	loop   0x411212
  4111b2:	sbb    bl,BYTE PTR [ecx+0x29]
  4111b5:	cmp    ebx,DWORD PTR [ecx-0x3e]
  4111b8:	retf   
  4111b9:	cmp    eax,0xd7a0206b
  4111be:	aam    0xbc
  4111c0:	test   al,0x6f
  4111c2:	inc    ebp
  4111c3:	pop    eax
  4111c4:	div    DWORD PTR [edx-0x17]
  4111c7:	rcr    DWORD PTR [edx],1
  4111c9:	inc    esi
  4111ca:	leave  
  4111cb:	sar    DWORD PTR [ebx-0x2c],0x64
  4111cf:	jnp    0x411221
  4111d1:	adc    eax,0xeb5a0d25
  4111d6:	(bad)  
  4111d8:	(bad)
  4111dd:	test   edx,esp
  4111df:	or     eax,0x39a82842
  4111e4:	jnp    0x4111a9
  4111e6:	add    ch,dh
  4111e8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4111e9:	loope  0x4111f6
  4111eb:	jge    0x41124e
  4111ed:	xchg   esp,esp
  4111ef:	cs mov eax,?
  4111f2:	stos   DWORD PTR es:[edi],eax
  4111f3:	push   esp
  4111f4:	fild   QWORD PTR [esi-0x5c]
  4111f7:	inc    edi
  4111f8:	xor    eax,0x4a810fe
  4111fd:	aas    
  4111fe:	xor    DWORD PTR [esp-0x77],ebp
  411202:	xor    eax,DWORD PTR [esi+0x637158fa]
  411208:	or     ch,0x6b
  41120b:	loopne 0x411242
  41120d:	std    
  41120e:	in     al,0x5a
  411210:	sub    ecx,DWORD PTR ds:0xf0ba8586
  411216:	lods   al,BYTE PTR ds:[esi]
  411217:	mov    esi,0x3b099652
  41121c:	cmc    
  41121d:	cmp    esp,DWORD PTR [ebx]
  41121f:	xchg   esi,esi
  411221:	aam    0xa9
  411223:	mov    cl,0xc4
  411225:	dec    esi
  411226:	pop    eax
  411227:	sbb    esi,esi
  411229:	or     DWORD PTR [esi+ebx*4-0x7cd85742],edx
  411230:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411231:	dec    edi
  411232:	and    cl,al
  411234:	lds    esi,FWORD PTR [eax-0x2f0692ad]
  41123a:	adc    DWORD PTR [ebx],edi
  41123c:	xchg   BYTE PTR [ebx+0x5c],dl
  41123f:	xor    eax,0x5058e1e9
  411244:	xor    ebx,esi
  411246:	inc    ecx
  411247:	aam    0x24
  411249:	(bad)  
  41124a:	sti    
  41124b:	lods   al,BYTE PTR ds:[esi]
  41124c:	cdq    
  41124d:	mov    esp,0xdd801f83
  411252:	mov    esp,0xdc2c9c55
  411257:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411258:	mov    al,ds:0x86da26bb
  41125d:	push   0xffffff8a
  41125f:	call   0x187d:0x3b766b2e
  411266:	sub    BYTE PTR [ebx+0x20f37e9b],0xd9
  41126d:	test   BYTE PTR [edi],0xfc
  411270:	push   0xffffffd0
  411272:	jl     0x411252
  411274:	out    0xd8,al
  411276:	imul   ebp,edx,0xffffff8c
  411279:	pusha  
  41127a:	scas   eax,DWORD PTR es:[edi]
  41127b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41127c:	push   ebx
  41127d:	jae    0x4112ad
  41127f:	dec    edi
  411280:	mov    ecx,0x994dab7b
  411285:	and    dl,BYTE PTR [edi+eiz*2-0x115f60ac]
  41128c:	jmp    0x1891c9c3
  411291:	in     al,0xfd
  411293:	pop    DWORD PTR [esi+esi*2+0x2ce3f06]
  41129a:	ret    
  41129b:	lahf   
  41129c:	fadd   QWORD PTR [ecx+0x52]
  41129f:	fimul  WORD PTR [edi]
  4112a1:	push   esi
  4112a2:	call   0xa4b8:0xa1485702
  4112a9:	adc    DWORD PTR [edi+0x668cc98f],0xffffff8a
  4112b0:	adc    ah,BYTE PTR [ebx-0x102558c0]
  4112b6:	inc    ebx
  4112b7:	pop    esi
  4112b8:	test   edi,edi
  4112ba:	xchg   esp,eax
  4112bb:	mov    dh,0xbe
  4112bd:	enter  0x6122,0xc6
  4112c1:	push   eax
  4112c2:	test   DWORD PTR [edx+0x1e],0x54b03520
  4112c9:	add    edx,DWORD PTR [edi+0x5b]
  4112cc:	push   edx
  4112cd:	mov    ah,0x50
  4112cf:	(bad)  
  4112d0:	sti    
  4112d1:	adc    DWORD PTR [esi+0x35],edi
  4112d4:	push   ds
  4112d5:	jmp    DWORD PTR ds:0x419ad884
  4112db:	in     eax,0x57
  4112dd:	stos   BYTE PTR es:[edi],al
  4112de:	ret    
  4112df:	mov    ebx,0x7f83ff52
  4112e4:	sub    al,0x28
  4112e6:	adc    al,0x64
  4112e8:	es stos DWORD PTR es:[edi],eax
  4112ea:	std    
  4112eb:	and    dl,BYTE PTR [eax]
  4112ed:	xchg   esp,eax
  4112ee:	mov    al,0xbf
  4112f0:	cmp    DWORD PTR ds:0xe2fc0345,0xe2e7292d
  4112fa:	push   es
  4112fb:	daa    
  4112fc:	pop    edx
  4112fd:	adc    BYTE PTR [ecx],ch
  4112ff:	outs   dx,DWORD PTR ds:[esi]
  411300:	cld    
  411301:	jmp    0x290b92ec
  411306:	aaa    
  411307:	icebp  
  411308:	aaa    
  411309:	adc    ecx,esp
  41130b:	retf   
  41130c:	add    ecx,DWORD PTR [ebx-0x31ac76a2]
  411312:	and    al,0xdb
  411314:	into   
  411315:	lods   al,BYTE PTR ds:[esi]
  411316:	mov    bh,0x48
  411318:	icebp  
  411319:	shl    BYTE PTR [edi+0x744ec901],0x68
  411320:	cmp    al,0x8f
  411322:	pop    es
  411323:	adc    al,BYTE PTR [edi-0x15c5b32f]
  411329:	in     al,0xb9
  41132b:	jecxz  0x41136e
  41132d:	cmc    
  41132e:	inc    ebx
  41132f:	mov    ch,0x98
  411331:	pxor   mm7,QWORD PTR [esi+0x6f]
  411335:	mov    eax,0x993cf09e
  41133a:	cmp    DWORD PTR ss:[ecx+0x4d28403],edi
  411341:	mov    ch,0xab
  411343:	add    al,0xf0
  411345:	and    eax,0x6d7f80e5
  41134a:	dec    edx
  41134b:	daa    
  41134c:	ins    DWORD PTR es:[edi],dx
  41134d:	daa    
  41134e:	push   ebp
  41134f:	ret    
  411350:	into   
  411351:	mov    eax,ds:0x2a481e23
  411356:	mov    edi,0xacc0ec1
  41135b:	xor    BYTE PTR [ebp+0x7a],bh
  41135e:	into   
  41135f:	push   es
  411360:	int    0xf9
  411362:	in     al,0x8b
  411364:	(bad)  
  411365:	int3   
  411366:	sbb    eax,0x99ab31be
  41136b:	pop    ecx
  41136c:	enter  0xaee2,0x0
  411370:	sbb    al,0xb2
  411372:	in     al,0x27
  411374:	cmp    BYTE PTR [edi+esi*4],bl
  411377:	mov    ds:0x10c808db,eax
  41137c:	aaa    
  41137d:	and    edx,ecx
  41137f:	enter  0x99c9,0x3d
  411383:	lahf   
  411384:	lods   al,BYTE PTR ds:[esi]
  411385:	out    0xcf,al
  411387:	test   DWORD PTR [eax],0xda7f564d
  41138d:	push   eax
  41138e:	push   ebx
  41138f:	adc    ebp,DWORD PTR [edx]
  411391:	test   ch,ah
  411393:	xchg   esp,eax
  411394:	dec    eax
  411395:	and    al,0x51
  411397:	cdq    
  411398:	xchg   edx,eax
  411399:	pop    es
  41139a:	push   0xd5033cb6
  41139f:	cdq    
  4113a0:	inc    ebp
  4113a1:	test   eax,0xf1921592
  4113a6:	jmp    0x411411
  4113a8:	push   0xffffffe8
  4113aa:	fisub  WORD PTR [edx+0x1b6b3c58]
  4113b0:	shl    BYTE PTR [esi+eax*8],0x29
  4113b4:	xor    dl,BYTE PTR [eax-0x383d1ff6]
  4113ba:	and    DWORD PTR [edi],edx
  4113bc:	loop   0x411393
  4113be:	mov    esi,0x2f4cc424
  4113c3:	fwait
  4113c4:	mov    edi,0x9f700024
  4113c9:	test   al,0xe9
  4113cb:	fnstcw WORD PTR [edi+0x2f]
  4113ce:	cli    
  4113cf:	sbb    edi,ebx
  4113d1:	mov    edx,0x3afe53de
  4113d6:	add    al,0x90
  4113d8:	test   BYTE PTR [edi+0x9cc2c71],bl
  4113de:	cmp    eax,0x162b19a7
  4113e3:	jmp    0xd748:0x28212c14
  4113ea:	outs   dx,DWORD PTR ds:[esi]
  4113eb:	fwait
  4113ec:	inc    eax
  4113ed:	mov    edi,0x20e44c7b
  4113f2:	inc    ebp
  4113f3:	adc    ebp,DWORD PTR ds:0xc4297eaa
  4113f9:	leave  
  4113fa:	mov    ebx,DWORD PTR [ebx]
  4113fc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4113fd:	retf   
  4113fe:	in     eax,dx
  4113ff:	xor    BYTE PTR [esi-0x5091851a],bh
  411405:	sub    bl,dh
  411407:	mov    al,ds:0x6f663698
  41140c:	fst    QWORD PTR [esi*2-0x24449d74]
  411413:	push   ebx
  411414:	or     DWORD PTR [ebx+0x29aa40e4],esp
  41141a:	mov    ch,0x7b
  41141c:	mov    bh,0x40
  41141e:	mov    BYTE PTR [ebx-0x2dcd487d],0x7c
  411425:	mov    esp,0x7344f379
  41142a:	pop    ebx
  41142b:	popa   
  41142c:	(bad)
  41142f:	ins    BYTE PTR es:[edi],dx
  411430:	pop    edx
  411431:	mul    bh
  411433:	sti    
  411434:	sbb    eax,0xbf6a0dfa
  411439:	nop
  41143a:	xlat   BYTE PTR ds:[ebx]
  41143b:	and    BYTE PTR [eax],bh
  41143d:	pop    es
  41143e:	xchg   edi,eax
  41143f:	(bad)  
  411443:	(bad)  
  411444:	xchg   esp,eax
  411445:	fisub  DWORD PTR [eax]
  411448:	aaa    
  411449:	xlat   BYTE PTR ds:[ebx]
  41144a:	int    0xaa
  41144c:	mov    ds:0x311257ea,eax
  411451:	cmp    ch,BYTE PTR cs:[eax+0x32]
  411455:	aam    0x79
  411457:	jecxz  0x411419
  411459:	mov    dh,0xec
  41145b:	mov    dl,ch
  41145d:	call   ebp
  41145f:	push   edi
  411460:	push   ss
  411461:	mov    BYTE PTR [edx+0x31],al
  411464:	aas    
  411465:	clc    
  411466:	aad    0x3b
  411468:	popf   
  411469:	pop    ebp
  41146a:	call   0x3c99:0x42a92d13
  411471:	jae    0x41143a
  411473:	neg    DWORD PTR [edx+0x2e]
  411476:	inc    ecx
  411477:	and    al,0x28
  411479:	jecxz  0x41147b
  41147b:	rol    DWORD PTR [edi-0x7814001d],cl
  411481:	ins    BYTE PTR es:[edi],dx
  411482:	je     0x66ca107
  411488:	ja     0x4114c0
  41148a:	push   0x6df0b490
  41148f:	rcr    DWORD PTR [esp+edi*2-0x66dc722],cl
  411496:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411497:	pop    ds
  411498:	and    esi,esi
  41149a:	mov    bl,0x61
  41149c:	sbb    eax,0xdac672d6
  4114a1:	pop    esp
  4114a2:	xchg   esp,eax
  4114a3:	test   BYTE PTR [edi],0xd
  4114a6:	xchg   ebp,eax
  4114a7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4114a8:	ficomp DWORD PTR [ebx-0x35bd0eb5]
  4114ae:	fsub   QWORD PTR [edx-0x16]
  4114b1:	repz and eax,0x93646777
  4114b7:	(bad)  
  4114b8:	jae    0x411531
  4114ba:	mov    ecx,0xec9aef35
  4114bf:	lea    esi,[ebp+0x5cca2957]
  4114c5:	sbb    cl,ah
  4114c7:	mov    ebp,0x8e82561b
  4114cc:	jbe    0x41144f
  4114ce:	(bad)  
  4114cf:	jnp    0x41146e
  4114d1:	(bad)
  4114d5:	push   edi
  4114d6:	and    BYTE PTR [ebx-0x5],bh
  4114d9:	adc    cl,al
  4114db:	adc    ecx,DWORD PTR [ecx]
  4114dd:	or     esp,ebx
  4114df:	adc    al,BYTE PTR [ecx-0x2b]
  4114e2:	pop    eax
  4114e3:	dec    ebx
  4114e4:	rcr    BYTE PTR [edi+0x78],0xb9
  4114e8:	dec    edx
  4114e9:	mov    ?,WORD PTR [ebp+0x2735fc85]
  4114ef:	(bad)  
  4114f0:	jg     0x4114f0
  4114f2:	ja     0x4114c9
  4114f4:	aaa    
  4114f5:	adc    BYTE PTR [edx],al
  4114f7:	dec    esp
  4114f8:	daa    
  4114f9:	and    ecx,DWORD PTR [ecx+0x78]
  4114fc:	dec    edi
  4114fd:	jmp    0x411528
  4114ff:	push   edi
  411500:	adc    ah,bl
  411502:	sbb    DWORD PTR [esi+0x6c],0x54
  411506:	(bad)  
  411507:	out    0x80,al
  411509:	aad    0x7c
  41150b:	retf   0x741e
  41150e:	into   
  41150f:	loopne 0x4114d2
  411511:	test   cl,ah
  411513:	out    dx,eax
  411514:	lods   eax,DWORD PTR ds:[si]
  411516:	outs   dx,DWORD PTR ds:[esi]
  411517:	rcl    DWORD PTR [edx-0x422255dc],0x90
  41151e:	push   edx
  41151f:	xchg   ebp,eax
  411520:	xor    esp,DWORD PTR [ebx-0x10]
  411523:	mov    DWORD PTR [edx],esp
  411525:	rcr    BYTE PTR [ebx+0x60],0x61
  411529:	iret   
  41152a:	xor    eax,DWORD PTR ds:0xed91fe18
  411530:	inc    edx
  411531:	jne    0x411534
  411533:	xchg   edi,eax
  411534:	fmul   st,st(6)
  411536:	call   DWORD PTR [ecx+0x21]
  411539:	shl    BYTE PTR [edi-0x17],cl
  41153c:	dec    ecx
  41153d:	iret   
  41153e:	push   edx
  41153f:	pop    es
  411540:	in     eax,0x1d
  411542:	mov    dh,0xf0
  411544:	and    BYTE PTR ds:0x6bd51193,dh
  41154a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41154b:	stc    
  41154c:	dec    DWORD PTR [ecx+0x2b849a61]
  411552:	inc    eax
  411553:	mov    edx,0xaf04d6bb
  411558:	mov    ds:0x62d1b64d,eax
  41155d:	das    
  41155e:	ins    DWORD PTR es:[edi],dx
  41155f:	out    0x54,eax
  411561:	mov    WORD PTR [ecx-0x31],fs
  411564:	adc    eax,0x3db65fd4
  411569:	fsubr  st,st(4)
  41156b:	xchg   esi,eax
  41156c:	(bad)  
  41156d:	aad    0xb1
  41156f:	sbb    eax,0x78acb931
  411574:	jge    0x411511
  411576:	xchg   edi,eax
  411577:	lods   eax,DWORD PTR ds:[esi]
  411578:	ins    BYTE PTR es:[edi],dx
  411579:	pop    edx
  41157a:	pop    es
  41157b:	add    esp,0x657a90c5
  411581:	jno    0x41151d
  411583:	mov    esi,DWORD PTR [esi+0x56670daa]
  411589:	(bad)  
  41158a:	jb     0x41155c
  41158c:	in     eax,dx
  41158d:	pop    ebp
  41158e:	sbb    BYTE PTR [edx-0x4ed9a31c],dl
  411594:	jbe    0x41158c
  411596:	(bad)  
  411598:	dec    ebx
  411599:	test   eax,0xf5ae25c6
  41159e:	lds    eax,FWORD PTR [eax+ecx*2-0x39]
  4115a2:	je     0x41152d
  4115a4:	mov    dh,0x80
  4115a6:	sbb    ah,BYTE PTR [eax-0x10]
  4115a9:	mov    dl,0x17
  4115ab:	sbb    ah,BYTE PTR [edx+edi*2-0x83572cc]
  4115b2:	inc    esp
  4115b3:	retf   0x3720
  4115b6:	ins    BYTE PTR es:[edi],dx
  4115b7:	xchg   esp,eax
  4115b8:	popf   
  4115b9:	pusha  
  4115ba:	(bad)  
  4115bd:	or     DWORD PTR [eax],eax
  4115bf:	pushf  
  4115c0:	out    0x96,eax
  4115c2:	sbb    al,0x2f
  4115c4:	outs   dx,DWORD PTR ds:[esi]
  4115c5:	add    edi,DWORD PTR [eax+0x583b4918]
  4115cb:	sub    BYTE PTR [eax+0x2f],bl
  4115ce:	jae    0x411648
  4115d0:	test   eax,0x8fd1423e
  4115d5:	sub    al,0xe9
  4115d7:	inc    ebp
  4115d8:	lahf   
  4115d9:	stos   BYTE PTR es:[edi],al
  4115da:	data16 ss data16 jl 0x41157f
  4115df:	out    0xdc,eax
  4115e1:	test   al,0xd
  4115e3:	push   ebx
  4115e4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4115e5:	repz sbb eax,0xe4961dd8
  4115eb:	cmc    
  4115ec:	dec    ebp
  4115ed:	shl    BYTE PTR [esi-0x339fb8a1],cl
  4115f3:	rol    ecx,1
  4115f5:	pop    eax
  4115f6:	pop    edx
  4115f7:	adc    dh,BYTE PTR [ebx+0x76dbffe9]
  4115fd:	test   al,0xb0
  4115ff:	push   ebx
  411600:	int    0x1e
  411602:	push   eax
  411603:	stc    
  411604:	push   cs
  411605:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411606:	les    ebp,FWORD PTR [eax+0x4f]
  411609:	(bad)  
  41160a:	xchg   esi,eax
  41160b:	mov    bl,0xd1
  41160d:	jecxz  0x411624
  41160f:	sahf   
  411610:	mov    edi,0x7a5c6157
  411615:	dec    ebp
  411616:	xchg   BYTE PTR [esi],ah
  411618:	pushf  
  411619:	xor    bl,cl
  41161b:	sub    bh,dl
  41161d:	xchg   edi,eax
  41161e:	call   0x4f32:0x7700e365
  411625:	jecxz  0x41163d
  411627:	push   ebx
  411628:	sti    
  411629:	xchg   edx,eax
  41162a:	ret    0xd8b
  41162d:	(bad)  [ebx+0x4f4a3673]
  411633:	push   cs
  411634:	and    esp,DWORD PTR [eax+eiz*2]
  411637:	pop    edi
  411638:	fidivr DWORD PTR [ebx]
  41163a:	int    0x45
  41163c:	test   BYTE PTR [edi+eax*4],bh
  41163f:	scas   al,BYTE PTR es:[edi]
  411640:	add    BYTE PTR [edi+0x5c9a7bc9],bl
  411646:	sti    
  411647:	adc    DWORD PTR [edx+edx*8],edi
  41164a:	xchg   edx,eax
  41164b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41164c:	nop
  41164d:	cld    
  41164e:	jecxz  0x4115d7
  411650:	jno    0x411633
  411652:	add    BYTE PTR [ebp+0x563dda21],bl
  411658:	push   0xffffffc5
  41165a:	outs   dx,BYTE PTR ds:[esi]
  41165b:	ds in  eax,dx
  41165d:	push   0xffffffb6
  41165f:	mov    esi,0x301e17ea
  411664:	mov    eax,ds:0xb2671852
  411669:	add    BYTE PTR ds:0x87655587,dh
  41166f:	xor    eax,0x9e2639b6
  411674:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411675:	aaa    
  411676:	gs pop ss
  411678:	bound  ebp,QWORD PTR [esi]
  41167a:	or     al,0x9b
  41167c:	xchg   edx,eax
  41167d:	add    bl,BYTE PTR ds:0x7620a021
  411683:	lods   al,BYTE PTR ds:[esi]
  411684:	cs clts 
  411687:	shl    DWORD PTR [edx+0x76568665],1
  41168d:	daa    
  41168e:	jnp    0x4116d8
  411690:	test   DWORD PTR [ebx+0x151a801c],esi
  411696:	xchg   esp,eax
  411697:	adc    eax,0xc7b59eaf
  41169c:	ss ds dec edi
  41169f:	xor    al,0xe0
  4116a1:	lock cmp BYTE PTR [esi+0x26],ah
  4116a5:	xchg   esi,eax
  4116a6:	push   esi
  4116a7:	add    ecx,DWORD PTR [edx+0x5e04d31]
  4116ad:	fidivr WORD PTR [edi-0x1bcc3d1]
  4116b3:	(bad)  
  4116b4:	mov    ebx,0xa40fae05
  4116b9:	or     al,0xef
  4116bb:	icebp  
  4116bc:	cmc    
  4116bd:	pop    es
  4116be:	push   esp
  4116bf:	inc    esi
  4116c0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4116c1:	ds call 0x9045fdaf
  4116c7:	je     0x4116a5
  4116c9:	jb     0x41167b
  4116cb:	jge    0x4116d1
  4116cd:	mov    BYTE PTR [edx+edx*8],ah
  4116d0:	mov    edx,0x40bd6454
  4116d5:	mov    eax,ds:0xa1d5abcf
  4116da:	imul   eax,esp,0xd361c116
  4116e0:	scas   eax,DWORD PTR es:[edi]
  4116e1:	mov    ds:0xacbb7945,al
  4116e6:	mov    esp,0xaede43c5
  4116eb:	in     eax,0x2c
  4116ed:	mov    ecx,ebx
  4116ef:	cdq    
  4116f0:	cmp    edx,DWORD PTR es:[eax]
  4116f3:	and    al,0x7
  4116f5:	dec    ebp
  4116f6:	popa   
  4116f7:	mov    esp,0x5805f712
  4116fc:	ds aaa 
  4116fe:	icebp  
  4116ff:	lea    edx,[edx-0x53]
  411702:	mov    ds:0x6a6e786f,eax
  411707:	mov    cl,0x92
  411709:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41170a:	mov    bl,0x61
  41170c:	cld    
  41170d:	bnd call 0xe3abeea9
  411713:	shr    BYTE PTR [edi-0x4e208945],1
  411719:	push   eax
  41171a:	mov    ecx,0x4a19815d
  41171f:	sbb    edx,esp
  411721:	inc    edx
  411722:	adc    DWORD PTR [edx+0x10a56dc7],esi
  411728:	leave  
  411729:	loopne 0x411723
  41172b:	sbb    eax,0xc57e305f
  411730:	in     al,0x5a
  411732:	dec    edi
  411733:	xchg   ebp,eax
  411734:	push   edi
  411735:	ror    BYTE PTR [eax+0x20229faa],cl
  41173b:	push   ds
  41173c:	jp     0x41176e
  41173e:	shr    DWORD PTR [esi+0x37],1
  411741:	and    edi,ebx
  411743:	js     0x4116e7
  411745:	aad    0x60
  411747:	call   0x7a073f89
  41174c:	xlat   BYTE PTR ds:[ebx]
  41174d:	fidiv  DWORD PTR [ecx+0x715eaca7]
  411753:	xchg   DWORD PTR [esi+0x520324ab],edi
  411759:	xchg   ecx,eax
  41175a:	aam    0x82
  41175c:	lock or BYTE PTR [edi],ah
  41175f:	retf   
  411760:	ins    BYTE PTR es:[edi],dx
  411761:	icebp  
  411762:	iret   
  411763:	push   eax
  411764:	mov    cl,BYTE PTR [ebx-0x75]
  411767:	fstp   TBYTE PTR [ecx+0x1461d2a]
  41176d:	adc    al,0x4f
  41176f:	xor    BYTE PTR [edx],al
  411771:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411772:	xor    BYTE PTR [esi+edi*8-0x67c53b9a],bh
  411779:	jns    0x41172e
  41177b:	imul   ecx,DWORD PTR [ecx],0xffffffeb
  41177e:	and    edx,DWORD PTR [ecx+0x51]
  411781:	mov    WORD PTR [eax-0x22],gs
  411784:	je     0x4117f8
  411786:	repnz scas al,BYTE PTR es:[edi]
  411788:	mov    DWORD PTR [ebp+0x1be48955],0xa6bdf9da
  411792:	popf   
  411793:	inc    esp
  411794:	add    eax,0xf5f379b8
  411799:	adc    bl,BYTE PTR [edx-0x7776cded]
  41179f:	lock mov edi,0xcf0749ef
  4117a5:	push   esi
  4117a6:	jbe    0x411757
  4117a8:	mov    al,ds:0xf245d9bb
  4117ad:	mov    dl,0xf2
  4117af:	inc    esi
  4117b0:	stos   DWORD PTR es:[edi],eax
  4117b1:	fs jno 0x411771
  4117b4:	je     0x411738
  4117b6:	(bad)  
  4117b7:	xchg   esi,eax
  4117b8:	call   0xbcb:0x9d1b13a
  4117bf:	mov    al,ds:0x1bce9c2d
  4117c4:	mov    esi,0x82c3c12f
  4117c9:	sbb    eax,0x383b5ea
  4117ce:	stos   DWORD PTR es:[edi],eax
  4117cf:	mov    bh,0x8e
  4117d1:	std    
  4117d2:	jmp    0x4117aa
  4117d4:	xchg   DWORD PTR [ecx+ebp*8],ebp
  4117d7:	pop    ds
  4117d8:	sub    BYTE PTR [ecx],dl
  4117da:	cmp    al,0xb8
  4117dc:	shr    BYTE PTR [edx+edx*4+0x76],0xd8
  4117e1:	cdq    
  4117e2:	imul   edi,DWORD PTR [edx],0xd
  4117e5:	xlat   BYTE PTR ds:[ebx]
  4117e6:	shl    DWORD PTR [eax-0x7addd523],0x38
  4117ed:	add    BYTE PTR [eax-0x24],ah
  4117f0:	cmp    eax,0x5101534f
  4117f5:	loope  0x411798
  4117f7:	sbb    BYTE PTR [esi+0x34a12229],ch
  4117fd:	test   edx,edi
  4117ff:	iret   
  411800:	add    al,0x89
  411802:	fcomi  st,st(6)
  411804:	push   edi
  411805:	sub    ebx,edx
  411807:	lds    ebx,FWORD PTR [edx-0x5cc1a3f6]
  41180d:	fwait
  41180e:	mov    dl,0xe4
  411810:	mov    ebx,0xf6d8df11
  411815:	xchg   esp,eax
  411816:	cmp    BYTE PTR [ecx+eiz*4+0x6b],al
  41181a:	fcomp  QWORD PTR [esi]
  41181c:	std    
  41181d:	sub    cl,bh
  41181f:	or     BYTE PTR [ebp+0xf50d8e4],0xb9
  411826:	adc    eax,0x7067e181
  41182b:	add    eax,0x4169e0d3
  411830:	mov    eax,0xb80bb621
  411835:	test   al,0x8a
  411837:	jge    0x4117be
  411839:	aaa    
  41183a:	xlat   BYTE PTR ds:[ebx]
  41183b:	inc    ebp
  41183c:	xor    DWORD PTR [eax],eax
  41183e:	jmp    0x63eac874
  411843:	not    DWORD PTR [ecx+ebp*8]
  411846:	and    ch,al
  411848:	dec    ecx
  411849:	mov    ah,0x8e
  41184b:	test   ah,dl
  41184d:	popa   
  41184e:	pop    edi
  41184f:	rcr    DWORD PTR [ebx],cl
  411851:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411852:	mov    ds:0x93f42aa1,al
  411857:	inc    eax
  411858:	mov    dh,bl
  41185a:	popa   
  41185b:	and    dl,BYTE PTR [edx]
  41185d:	sbb    edi,DWORD PTR [esi-0x72]
  411860:	fistp  DWORD PTR [ebp-0x4b8c2845]
  411866:	sahf   
  411867:	push   ds
  411868:	jle    0x41183f
  41186a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41186b:	sbb    bh,ah
  41186d:	and    ebp,DWORD PTR [ecx+0x3901bf19]
  411873:	in     al,0xd2
  411875:	(bad)  
  411876:	bsr    edx,edx
  411879:	test   bl,dh
  41187b:	xor    bl,dh
  41187d:	arpl   WORD PTR [edi+0x3614aa28],ax
  411883:	cmc    
  411884:	mov    esp,esi
  411886:	push   eax
  411887:	sbb    DWORD PTR [edx],eax
  411889:	and    cl,0x18
  41188c:	add    BYTE PTR [edi+0x7040533a],cl
  411892:	cmp    DWORD PTR [ecx],ebx
  411894:	push   esp
  411895:	outs   dx,DWORD PTR ds:[esi]
  411896:	xchg   esp,eax
  411897:	les    ebp,FWORD PTR ds:0x94d1af3d
  41189d:	(bad)  
  41189e:	mov    al,0x88
  4118a0:	test   al,0x34
  4118a2:	pushf  
  4118a3:	push   eax
  4118a4:	call   0xebd00a78
  4118a9:	or     eax,0xd04aca9c
  4118ae:	and    DWORD PTR [ebp-0x1d],ebp
  4118b1:	xchg   edi,eax
  4118b2:	inc    edx
  4118b3:	xor    al,0x3b
  4118b5:	icebp  
  4118b6:	in     al,0x56
  4118b8:	push   ss
  4118b9:	and    al,0xca
  4118bb:	retf   0x4dfc
  4118be:	sbb    BYTE PTR [eax-0x229fecb2],bl
  4118c4:	sub    ebp,ebp
  4118c6:	outs   dx,DWORD PTR ds:[esi]
  4118c7:	ja     0x4118e4
  4118c9:	cmp    DWORD PTR [ecx-0x80],ebp
  4118cc:	ret    0xcc33
  4118cf:	int3   
  4118d0:	lea    edx,[edx]
  4118d2:	sbb    dh,BYTE PTR [ebp+edi*2+0x6f]
  4118d6:	fdiv   st,st(5)
  4118d8:	fistp  DWORD PTR ds:0xb7657518
  4118de:	(bad)  
  4118df:	sar    DWORD PTR [ebx],1
  4118e1:	adc    ebp,esp
  4118e3:	or     BYTE PTR [ecx-0x21d67ffe],cl
  4118e9:	and    ch,BYTE PTR [ebx+0x14]
  4118ec:	mov    edi,0xfcd1fb48
  4118f1:	cmp    al,0xb2
  4118f3:	pop    esp
  4118f4:	mov    edx,DWORD PTR [eax]
  4118f6:	cmp    BYTE PTR [edx+0x514b6bb5],dh
  4118fc:	mov    bl,BYTE PTR [edx-0x132d2cac]
  411902:	jle    0x4118df
  411904:	sar    BYTE PTR [edx+0x12c4cf1d],1
  41190a:	adc    cl,BYTE PTR [edi]
  41190c:	pop    ss
  41190d:	cs cld 
  41190f:	std    
  411910:	mov    edi,0x53000281
  411915:	lea    eax,[ebx-0x76354aed]
  41191b:	jp     0x411985
  41191d:	mov    bh,0x98
  41191f:	cdq    
  411920:	sub    eax,0x4813b5ac
  411925:	mov    DWORD PTR [ebx+0x480e8b76],ebx
  41192b:	push   esi
  41192c:	dec    esi
  41192d:	jae    0x41193f
  41192f:	inc    edx
  411930:	cmp    eax,DWORD PTR [edx-0x45cad7c4]
  411936:	ins    DWORD PTR es:[edi],dx
  411937:	jecxz  0x4118f1
  411939:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41193a:	xor    eax,0x5ea10b0e
  41193f:	mov    bh,0x2d
  411941:	nop
  411942:	sbb    al,0x5c
  411944:	adc    DWORD PTR [edi+0x6e],eax
  411947:	mov    BYTE PTR [ecx-0x30],ah
  41194a:	dec    edi
  41194b:	aaa    
  41194c:	stos   BYTE PTR es:[edi],al
  41194d:	aam    0x56
  41194f:	jns    0x411948
  411951:	jns    0x4119a4
  411953:	test   al,0xa
  411955:	movq   mm3,mm3
  411958:	cmp    al,0x78
  41195a:	sbb    dl,BYTE PTR [eax+0x39]
  41195d:	cmp    DWORD PTR ds:0x76fa6022,esi
  411963:	enter  0x83,0x1b
  411967:	nop
  411968:	rcr    esp,1
  41196a:	gs dec esi
  41196c:	mov    ds:0xe3372b4e,al
  411971:	rcl    ah,0x7f
  411974:	mov    al,ds:0xef58492b
  411979:	and    cl,BYTE PTR [ebp+eax*1+0x3be5f8db]
  411980:	push   edi
  411981:	outs   dx,BYTE PTR ds:[esi]
  411982:	popa   
  411983:	jae    0x4119a2
  411985:	sbb    esp,DWORD PTR [edi]
  411987:	add    al,0xcd
  411989:	arpl   WORD PTR [eax-0x38],di
  41198c:	cdq    
  41198d:	mov    DWORD PTR [edx-0x2f4ed49a],esp
  411993:	xor    eax,0x3f302aa3
  411998:	les    esp,FWORD PTR [esi-0x1d4755d5]
  41199e:	ins    DWORD PTR es:[edi],dx
  41199f:	pusha  
  4119a0:	and    eax,0xe87ab98e
  4119a5:	dec    eax
  4119a6:	int    0x48
  4119a8:	pop    esi
  4119a9:	shl    DWORD PTR [edi],0x6a
  4119ac:	icebp  
  4119ad:	or     al,0x74
  4119af:	sbb    al,0x3
  4119b1:	(bad)  
  4119b2:	xchg   edi,eax
  4119b3:	mov    ch,dh
  4119b5:	and    eax,0xc40819bd
  4119ba:	out    0x22,al
  4119bc:	push   ebp
  4119bd:	jmp    0x4119c2
  4119bf:	mov    dh,0x6d
  4119c1:	mov    WORD PTR [ebx-0x37903eba],ss
  4119c7:	inc    esi
  4119c8:	jp     0x4119c7
  4119ca:	mov    bh,0x45
  4119cc:	not    DWORD PTR [ecx+0x1ce94b67]
  4119d2:	ja     0x4119b7
  4119d4:	bound  ebx,QWORD PTR [edi-0x6b6d39ac]
  4119da:	jae    0x411a4d
  4119dc:	shl    DWORD PTR [esi-0x3a805109],0x62
  4119e3:	push   ecx
  4119e4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4119e5:	mov    eax,0x52088a9b
  4119ea:	retf   0x1904
  4119ed:	lods   eax,DWORD PTR ds:[esi]
  4119ee:	idiv   BYTE PTR [edx]
  4119f0:	icebp  
  4119f1:	mov    al,0x6e
  4119f3:	lahf   
  4119f4:	out    0x54,al
  4119f6:	scas   eax,DWORD PTR es:[edi]
  4119f7:	repz mov edx,0x6e32e347
  4119fd:	or     BYTE PTR [ebp+0x56],ch
  411a00:	shl    esi,cl
  411a02:	repz int3 
  411a04:	jae    0x411a25
  411a06:	xor    edx,esp
  411a08:	mov    ds:0xa950941a,eax
  411a0d:	adc    DWORD PTR [ecx+0x6485ac3b],0xe07c4c0
  411a17:	jle    0x411a04
  411a19:	ja     0x411a58
  411a1b:	push   esp
  411a1c:	xor    edi,esi
  411a1e:	add    eax,0x3d42ff2b
  411a23:	loopne 0x4119e1
  411a25:	add    BYTE PTR [edi-0x464a6086],al
  411a2b:	xchg   esp,eax
  411a2c:	mov    al,BYTE PTR [eax]
  411a2e:	add    BYTE PTR [esi+0x33],ah
  411a31:	dec    esp
  411a32:	xchg   edi,eax
  411a33:	add    al,BYTE PTR [ecx+0x42867b25]
  411a39:	add    BYTE PTR [eax],al
  411a3b:	add    BYTE PTR [eax],al
  411a3d:	add    cl,ch
  411a3f:	or     eax,0x8b000000
  411a44:	cmp    eax,0x42867b
  411a49:	inc    edi
  411a4a:	mov    DWORD PTR ds:0x42867b,edi
  411a50:	cmp    DWORD PTR ds:0x42867b,0x1d
  411a57:	jae    0x411a7f
  411a5d:	cmp    DWORD PTR ds:0x42867b,0x24
  411a64:	ja     0x411a7f
  411a6a:	jmp    0x411a7a
  411a6f:	push   0x42801b
  411a74:	call   DWORD PTR ds:0x4287c3
  411a7a:	jmp    0x411a43
  411a7f:	mov    edi,0x3b56
  411a84:	adc    DWORD PTR ds:0x428657,0x6690
  411a8e:	add    cx,di
  411a91:	sub    DWORD PTR ds:0x42863f,0x428617
  411a9b:	movzx  ecx,cx
  411a9e:	xor    DWORD PTR ds:0x428633,0x428667
  411aa8:	mov    DWORD PTR [ebp-0xc],ecx
  411aab:	or     DWORD PTR ds:0x42862f,edx
  411ab1:	mov    ecx,DWORD PTR [ebp+0x8]
  411ab4:	movzx  ecx,WORD PTR [ecx+edx*4]
  411ab8:	add    DWORD PTR ds:0x4285e7,0xc83
  411ac2:	xor    ecx,0x8a94
  411ac8:	sub    DWORD PTR ds:0x42860f,0x428677
  411ad2:	add    ecx,edi
  411ad4:	mov    edi,DWORD PTR [ebp-0xc]
  411ad7:	mov    BYTE PTR [ebp+edi*1-0x9c],cl
  411ade:	inc    edx
  411adf:	mov    ecx,DWORD PTR [ebp-0x10]
  411ae2:	mov    DWORD PTR ds:0x428637,0x76f
  411aec:	cmp    edx,ecx
  411aee:	mov    DWORD PTR ds:0x428647,0x6bd4
  411af8:	jne    0x40f686
  411afe:	and    DWORD PTR ds:0x428647,0x0
  411b08:	mov    ecx,DWORD PTR ds:0x428647
  411b0e:	inc    ecx
  411b0f:	mov    DWORD PTR ds:0x428647,ecx
  411b15:	cmp    DWORD PTR ds:0x428647,0x1b
  411b1c:	jbe    0x411b4e
  411b22:	jmp    0x411b41
  411b27:	push   0x428603
  411b2c:	push   DWORD PTR [ebp-0x14]
  411b2f:	push   DWORD PTR [ebp-0x28]
  411b32:	push   DWORD PTR [ebp-0x10]
  411b35:	push   DWORD PTR [ebp-0x10]
  411b38:	push   DWORD PTR [ebp-0x20]
  411b3b:	call   DWORD PTR ds:0x4287c7
  411b41:	cmp    DWORD PTR ds:0x428647,0x17
  411b48:	jb     0x411b08
  411b4e:	mov    ecx,DWORD PTR [ebp-0x18]
  411b51:	xor    edi,edi
  411b53:	mov    edx,DWORD PTR [ebp+0x10]
  411b56:	adc    DWORD PTR ds:0x42864b,ecx
  411b5c:	xor    ecx,eax
  411b5e:	add    ecx,esi
  411b60:	mov    DWORD PTR [edx],ecx
  411b62:	mov    ecx,DWORD PTR [ebp-0x18]
  411b65:	xor    ecx,eax
  411b67:	add    ecx,esi
  411b69:	adc    DWORD PTR ds:0x4285d7,ebx
  411b6f:	mov    DWORD PTR [ebp-0xc],ecx
  411b72:	mov    DWORD PTR [ebp+0x8],0xf89c85b0
  411b79:	adc    edi,DWORD PTR ds:0x428663
  411b7f:	mov    DWORD PTR [ebp-0x14],0xf89c8580
  411b86:	or     DWORD PTR ds:0x42866b,ebx
  411b8c:	mov    DWORD PTR [ebp-0x10],0xf89c95b0
  411b93:	sub    DWORD PTR ds:0x428673,edx
  411b99:	mov    ecx,DWORD PTR [ebp-0x14]
  411b9c:	and    DWORD PTR ds:0x428637,edi
  411ba2:	mov    DWORD PTR [ebp+0x8],ecx
  411ba5:	mov    ecx,DWORD PTR [ebp+0x8]
  411ba8:	mov    edi,DWORD PTR ds:0x42865f
  411bae:	adc    DWORD PTR ds:0x428613,edi
  411bb4:	xor    ecx,eax
  411bb6:	add    ecx,esi
  411bb8:	mov    ecx,0x242ebcc
  411bbd:	mov    DWORD PTR ds:0x428613,0x3550
  411bc7:	mov    edi,0xf641bc3
  411bcc:	mov    DWORD PTR ds:0x428633,0x2c84
  411bd6:	je     0x41b172
  411bdc:	mov    ebx,DWORD PTR ds:0x4286b7
  411be2:	mov    edx,DWORD PTR ds:0x4286e3
  411be8:	sub    edx,ebx
  411bea:	imul   ebx,DWORD PTR [ebx+edx*1]
  411bee:	mov    edx,DWORD PTR [ebp+0x8]
  411bf1:	movzx  ebx,BYTE PTR ds:0x4285ef
  411bf8:	sub    DWORD PTR ds:0x428657,ebx
  411bfe:	mov    ebx,DWORD PTR [ebp-0x8]
  411c01:	adc    DWORD PTR ds:0x42860f,0x4285eb
  411c0b:	xor    edx,eax
  411c0d:	sub    DWORD PTR ds:0x428643,0x428673
  411c17:	xor    ebx,eax
  411c19:	sub    edx,ebx
  411c1b:	and    DWORD PTR ds:0x42866f,ecx
  411c21:	sub    edx,esi
  411c23:	xor    edx,eax
  411c25:	adc    DWORD PTR ds:0x42865b,ebx
  411c2b:	mov    DWORD PTR [ebp+0x8],edx
  411c2e:	mov    edx,DWORD PTR ds:0x42867f
  411c34:	mov    ebx,DWORD PTR ds:0x4286fb
  411c3a:	sub    ebx,edx
  411c3c:	imul   edx,DWORD PTR [edx+ebx*1]
  411c40:	mov    edx,DWORD PTR [ebp+0x8]
  411c43:	and    DWORD PTR ds:0x428647,0x0
  411c4d:	jmp    0x411c61
  411c52:	xor    ebx,ebx
  411c54:	xor    ebx,DWORD PTR ds:0x428647
  411c5a:	inc    ebx
  411c5b:	mov    DWORD PTR ds:0x428647,ebx
  411c61:	cmp    DWORD PTR ds:0x428647,0x14
  411c68:	jae    0x411cb1
  411c6e:	cmp    DWORD PTR ds:0x428647,0xc
  411c75:	jle    0x411cb1
  411c7b:	jmp    0x411c90
  411c80:	push   0x4285d3
  411c85:	push   0x42800b
  411c8a:	call   DWORD PTR ds:0x4287cb
  411c90:	cmp    DWORD PTR ds:0x428647,0xb
  411c97:	jne    0x411cac
  411c9d:	xor    ebx,ebx
  411c9f:	xor    ebx,DWORD PTR ds:0x428647
  411ca5:	inc    ebx
  411ca6:	mov    DWORD PTR ds:0x428647,ebx
  411cac:	jmp    0x411c52
  411cb1:	mov    ebx,DWORD PTR [ebp-0x58]
  411cb4:	not    DWORD PTR ds:0x4285e3
  411cba:	add    edx,0x5708f1
  411cc0:	sbb    DWORD PTR ds:0x42866f,0xe9d
  411cca:	imul   edx,ebx
  411ccd:	mov    DWORD PTR [ebp-0x58],edx
  411cd0:	mov    edx,DWORD PTR [ebp+0x8]
  411cd3:	movzx  ebx,WORD PTR ds:0x42863f
  411cda:	xor    DWORD PTR ds:0x428677,ebx
  411ce0:	mov    ebx,DWORD PTR [ebp-0x54]
  411ce3:	add    edx,0x64f893
  411ce9:	or     edx,ebx
  411ceb:	dec    ebx
  411cec:	mov    DWORD PTR [ebp-0x54],edx
  411cef:	mov    edx,DWORD PTR [ebp+0x8]
  411cf2:	xor    DWORD PTR ds:0x428613,edi
  411cf8:	mov    ebx,DWORD PTR [ebp-0x50]
  411cfb:	adc    DWORD PTR ds:0x42862b,0x428663
  411d05:	add    edx,ecx
  411d07:	xor    edx,ebx
  411d09:	inc    DWORD PTR ds:0x42864b
  411d0f:	mov    DWORD PTR [ebp-0x50],edx
  411d12:	sbb    DWORD PTR ds:0x42865f,0x428633
  411d1c:	mov    edx,DWORD PTR [ebp+0x8]
  411d1f:	add    DWORD PTR ds:0x42863f,0x2dae
  411d29:	mov    ebx,DWORD PTR [ebp-0x4c]
  411d2c:	add    edx,edi
  411d2e:	inc    DWORD PTR ds:0x428617
  411d34:	and    edx,ebx
  411d36:	and    ebx,0x7d1c
  411d3c:	mov    DWORD PTR [ebp-0x4c],edx
  411d3f:	xor    DWORD PTR ds:0x428613,0x4285ef
  411d49:	mov    edx,DWORD PTR [ebp+0x8]
  411d4c:	mov    ebx,DWORD PTR [ebp-0x48]
  411d4f:	lea    edx,[ebx+edx*1+0x241fcde]
  411d56:	mov    ebx,DWORD PTR ds:0x42863f
  411d5c:	and    DWORD PTR ds:0x428633,ebx
  411d62:	mov    DWORD PTR [ebp-0x48],edx
  411d65:	or     ebx,0x3ec
  411d6b:	mov    edx,DWORD PTR [ebp+0x8]
  411d6e:	mov    ebx,0xfa5e1521
  411d73:	or     DWORD PTR ds:0x428647,0x60bd
  411d7d:	sub    ebx,edx
  411d7f:	add    edx,DWORD PTR ds:0x42866f
  411d85:	add    ebx,DWORD PTR [ebp-0x44]
  411d88:	mov    DWORD PTR [ebp-0x44],ebx
  411d8b:	and    DWORD PTR ds:0x42867b,0x0
  411d95:	jmp    0x411da7
  411d9a:	mov    edx,DWORD PTR ds:0x42867b
  411da0:	inc    edx
  411da1:	mov    DWORD PTR ds:0x42867b,edx
  411da7:	cmp    DWORD PTR ds:0x42867b,0x18
  411dae:	jae    0x411dfe
  411db4:	cmp    DWORD PTR ds:0x42867b,0xa
  411dbb:	jge    0x411dfe
  411dc1:	jmp    0x411ddf
  411dc6:	push   DWORD PTR [ebp-0x14]
  411dc9:	push   DWORD PTR [ebp-0x20]
  411dcc:	push   0x73a3
  411dd1:	push   DWORD PTR [ebp-0xc]
  411dd4:	push   0x249b
  411dd9:	call   DWORD PTR ds:0x42879f
  411ddf:	cmp    DWORD PTR ds:0x42867b,0x9
  411de6:	jne    0x411df9
  411dec:	mov    edx,DWORD PTR ds:0x42867b
  411df2:	inc    edx
  411df3:	mov    DWORD PTR ds:0x42867b,edx
  411df9:	jmp    0x411d9a
  411dfe:	mov    edx,DWORD PTR [ebp+0x8]
  411e01:	adc    DWORD PTR ds:0x4285d3,0x42865b
  411e0b:	xor    edx,eax
  411e0d:	or     DWORD PTR ds:0x428657,0x7d10
  411e17:	add    edx,esi
  411e19:	mov    DWORD PTR ds:0x428613,0x2646
  411e23:	jne    0x411bdc
  411e29:	jmp    0x41b172
  411e2e:	and    ebx,DWORD PTR ds:0x428603
  411e34:	mov    edx,DWORD PTR [ebp-0xc]
  411e37:	sub    edx,esi
  411e39:	add    ebx,0x210e
  411e3f:	xor    edx,eax
  411e41:	mov    DWORD PTR [ebp-0x5c],edx
  411e44:	and    DWORD PTR ds:0x4285ef,0x0
  411e4e:	jmp    0x411e62
  411e53:	xor    ebx,ebx
  411e55:	add    ebx,DWORD PTR ds:0x4285ef
  411e5b:	inc    ebx
  411e5c:	mov    DWORD PTR ds:0x4285ef,ebx
  411e62:	cmp    DWORD PTR ds:0x4285ef,0x17
  411e69:	jae    0x411ea9
  411e6f:	cmp    DWORD PTR ds:0x4285ef,0xe
  411e76:	ja     0x411ea9
  411e7c:	jmp    0x411e8a
  411e81:	push   DWORD PTR [ebp-0xc]
  411e84:	call   DWORD PTR ds:0x4287a3
  411e8a:	cmp    DWORD PTR ds:0x4285ef,0xd
  411e91:	jne    0x411ea4
  411e97:	mov    ebx,DWORD PTR ds:0x4285ef
  411e9d:	inc    ebx
  411e9e:	mov    DWORD PTR ds:0x4285ef,ebx
  411ea4:	jmp    0x411e53
  411ea9:	mov    edx,DWORD PTR [ebp-0x10]
  411eac:	mov    DWORD PTR ds:0x4285db,0x15
  411eb6:	cmp    DWORD PTR ds:0x4285db,0x0
  411ebd:	je     0x411f11
  411ec3:	cmp    DWORD PTR ds:0x4285db,0x6
  411eca:	jl     0x411f11
  411ed0:	jmp    0x411ee5
  411ed5:	push   0x12dd
  411eda:	push   0x428000
  411edf:	call   DWORD PTR ds:0x4287a7
  411ee5:	cmp    DWORD PTR ds:0x4285db,0x7
  411eec:	jne    0x411eff
  411ef2:	mov    ebx,DWORD PTR ds:0x4285db
  411ef8:	dec    ebx
  411ef9:	mov    DWORD PTR ds:0x4285db,ebx
  411eff:	mov    ebx,DWORD PTR ds:0x4285db
  411f05:	dec    ebx
  411f06:	mov    DWORD PTR ds:0x4285db,ebx
  411f0c:	jmp    0x411eb6
  411f11:	mov    ebx,DWORD PTR [ebp-0x8]
  411f14:	xor    edx,eax
  411f16:	xor    DWORD PTR ds:0x42863b,0x3a5d
  411f20:	xor    ebx,eax
  411f22:	sub    edx,ebx
  411f24:	adc    DWORD PTR ds:0x42860f,0x428633
  411f2e:	sub    edx,esi
  411f30:	and    DWORD PTR ds:0x42864f,0x428607
  411f3a:	xor    edx,eax
  411f3c:	mov    DWORD PTR ds:0x428663,0x12b9
  411f46:	mov    DWORD PTR [ebp-0x10],edx
  411f49:	movzx  edx,WORD PTR ds:0x42863f
  411f50:	mov    edx,DWORD PTR [ebp-0x14]
  411f53:	mov    DWORD PTR [ebp+0x8],edx
  411f56:	jmp    0x414473
  411f5b:	adc    DWORD PTR ds:0x42866b,0x365a
  411f65:	mov    edx,DWORD PTR [ebp+0x8]
  411f68:	add    DWORD PTR ds:0x42865b,0x2d5e
  411f72:	mov    ebx,DWORD PTR [ebp-0x8]
  411f75:	xor    edx,eax
  411f77:	xor    ebx,eax
  411f79:	jmp    0x41431a
  411f7e:	push   0xf
  411f80:	xor    al,0x44
  411f82:	pop    ss
  411f83:	inc    edi
  411f84:	or     al,BYTE PTR [edi]
  411f86:	into   
  411f87:	addr16 mov ds:0x49f4,al
  411f8b:	dec    ebx
  411f8c:	shl    BYTE PTR [ebp+0x7a7a82c6],cl
  411f92:	(bad)  
  411f93:	pop    edi
  411f94:	jp     0x412010
  411f96:	repz adc al,0xfb
  411f99:	mov    cl,0xd2
  411f9b:	out    dx,eax
  411f9c:	icebp  
  411f9d:	into   
  411f9e:	pop    ecx
  411f9f:	std    
  411fa0:	cli    
  411fa1:	mov    ?,WORD PTR [esi+esi*4]
  411fa4:	add    BYTE PTR [ecx-0x7eb92378],ah
  411faa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411fab:	xor    BYTE PTR [edx+0x2b],bl
  411fae:	sbb    esi,DWORD PTR [edx-0x1ad91d3e]
  411fb4:	xchg   BYTE PTR [edx],dl
  411fb6:	daa    
  411fb7:	xor    DWORD PTR [edx],ebx
  411fb9:	jmp    0xdd67:0xb2f1405c
  411fc0:	retf   
  411fc1:	ja     0x41201a
  411fc3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411fc4:	shl    BYTE PTR [edx],cl
  411fc6:	add    ecx,ebx
  411fc8:	adc    DWORD PTR ds:0x5821403f,0xd555c768
  411fd2:	mov    al,0xcc
  411fd4:	jmp    0x411f94
  411fd6:	out    dx,eax
  411fd7:	and    edx,edx
  411fd9:	fsub   DWORD PTR [eax]
  411fdb:	inc    ebp
  411fdc:	xchg   ecx,ebx
  411fde:	rcl    DWORD PTR [esi+0x68414a71],0xf1
  411fe5:	addr16 test eax,0x7988d907
  411feb:	pop    edx
  411fec:	lods   eax,DWORD PTR fs:[esi]
  411fee:	xchg   ebx,eax
  411fef:	jmp    0x411fe5
  411ff1:	imul   dh
  411ff3:	and    DWORD PTR [eax+0x13],ebp
  411ff6:	xchg   ecx,eax
  411ff7:	pop    ss
  411ff8:	rcl    BYTE PTR [edi+0x5fed2440],0xe7
  411fff:	aas    
  412000:	mov    al,ds:0x14164bf4
  412005:	ja     0x412080
  412007:	xchg   esp,eax
  412008:	jbe    0x412050
  41200a:	jno    0x41205b
  41200c:	call   0x4e79b9d5
  412011:	or     ch,bl
  412013:	cmp    BYTE PTR [ecx-0xfd66b66],cl
  412019:	cmp    BYTE PTR [edi-0x29fc10ec],bh
  41201f:	mov    edi,DWORD PTR [ebx-0x230b788c]
  412025:	mov    ch,0x5a
  412027:	mov    esp,0x285ea744
  41202c:	(bad)  
  41202d:	hlt    
  41202e:	gs jne 0x411ff1
  412031:	(bad)  
  412032:	pop    ds
  412033:	jo     0x411fea
  412035:	push   ebp
  412036:	add    ebx,DWORD PTR [edi-0xd981464]
  41203c:	mov    BYTE PTR [ecx],bh
  41203e:	inc    edi
  41203f:	lods   al,BYTE PTR ds:[esi]
  412040:	fidivr DWORD PTR [ecx-0x29d8433a]
  412046:	bound  ebp,QWORD PTR [edi+0x60]
  412049:	stos   BYTE PTR es:[edi],al
  41204a:	call   0xd216eee0
  41204f:	in     al,0x9
  412051:	mov    al,0x21
  412053:	pop    ss
  412054:	mov    bl,ch
  412056:	sub    DWORD PTR [ecx-0x20],0xffffff9e
  41205a:	shl    DWORD PTR [edi-0x5d],1
  41205d:	jmp    0x3d63633a
  412062:	xchg   ebp,eax
  412063:	sbb    ch,BYTE PTR [ebx+edx*1]
  412066:	mov    BYTE PTR [esi],ch
  412068:	push   ss
  412069:	(bad)  
  41206b:	push   ecx
  41206c:	push   ecx
  41206d:	and    BYTE PTR [ecx+0x2e],dl
  412070:	call   0x66c6:0x5af67e75
  412077:	lods   eax,DWORD PTR ds:[esi]
  412078:	mov    ds:0xb08afe40,eax
  41207d:	push   cs
  41207e:	xchg   esp,eax
  41207f:	adc    esi,ecx
  412081:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412082:	iret   
  412083:	cmp    BYTE PTR [edx+edx*8],ah
  412086:	dec    ebx
  412087:	rcr    DWORD PTR [edi+eax*1-0xc7a0d46],0xb9
  41208f:	dec    eax
  412090:	add    ebx,ebp
  412092:	adc    al,0x23
  412094:	arpl   WORD PTR [esi],bx
  412096:	xor    dh,dh
  412098:	and    ebx,ebp
  41209a:	fsub   st(3),st
  41209c:	fs push edx
  41209e:	lods   al,BYTE PTR ds:[esi]
  41209f:	dec    esp
  4120a0:	js     0x412086
  4120a2:	mov    dh,0x8f
  4120a4:	int    0xf2
  4120a6:	sub    al,0x39
  4120a8:	jbe    0x412129
  4120aa:	fmulp  st(3),st
  4120ac:	pushf  
  4120ad:	inc    ebp
  4120ae:	fsub   DWORD PTR [esi-0x338a6888]
  4120b4:	(bad)  
  4120b6:	mov    esi,0xc4c4e67
  4120bb:	and    al,0xf0
  4120bd:	sub    al,0xbd
  4120bf:	enter  0xb031,0x87
  4120c3:	rcl    DWORD PTR [ecx-0x1e],1
  4120c6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4120c7:	adc    eax,0x3dd418b5
  4120cc:	lods   al,BYTE PTR es:[esi]
  4120ce:	xchg   ebp,eax
  4120cf:	push   0xdf5e0293
  4120d4:	loope  0x41208c
  4120d6:	imul   edi,DWORD PTR [edx+0x3b],0x3a008b0d
  4120dd:	xor    edx,DWORD PTR [esp+ebx*4]
  4120e0:	mov    esp,0xbee3764d
  4120e5:	push   esi
  4120e6:	dec    eax
  4120e7:	popf   
  4120e8:	mov    ds:0x99a109bb,eax
  4120ed:	sbb    eax,0xa6fb41e6
  4120f2:	xor    bl,BYTE PTR [ebx+0x14fc886d]
  4120f8:	sub    bl,dl
  4120fa:	pusha  
  4120fb:	pop    esp
  4120fc:	arpl   WORD PTR [ebx-0x6866e645],cx
  412102:	(bad)  
  412104:	xor    esi,esi
  412106:	(bad)  
  412108:	pushf  
  412109:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41210a:	mov    al,ds:0xc4ed0a8f
  41210f:	mov    ecx,0xeeac6904
  412114:	sub    al,0xbd
  412116:	sub    eax,DWORD PTR [ecx+0x6b91577b]
  41211c:	jne    0x4120a4
  41211e:	push   eax
  41211f:	jp     0x412106
  412121:	mov    ebp,0x36c8cbbf
  412126:	xor    dh,dh
  412128:	inc    edi
  412129:	mov    cl,0x9d
  41212b:	cdq    
  41212c:	jg     0x4120c8
  41212e:	pop    eax
  41212f:	xchg   ecx,eax
  412130:	scas   eax,DWORD PTR es:[edi]
  412131:	mov    edi,0xf4f28c63
  412136:	scas   al,BYTE PTR es:[edi]
  412137:	jno    0x4120c2
  412139:	and    al,0xa8
  41213b:	loop   0x412136
  41213d:	xchg   ebx,eax
  41213e:	pop    edx
  41213f:	add    eax,0x3a47542c
  412144:	lods   eax,DWORD PTR ds:[esi]
  412145:	out    dx,eax
  412146:	cdq    
  412147:	rcl    BYTE PTR [eax],1
  412149:	scas   eax,DWORD PTR es:[edi]
  41214a:	fisttp QWORD PTR [eax]
  41214c:	dec    edi
  41214d:	add    DWORD PTR [eax],eax
  41214f:	add    DWORD PTR [ecx-0x214b6cf5],0xffffffe2
  412156:	call   0x5abad7f4
  41215b:	or     edx,DWORD PTR [ecx]
  41215d:	push   esi
  41215e:	xchg   DWORD PTR [edi],edi
  412160:	aad    0x18
  412162:	daa    
  412163:	mov    eax,ds:0xe5434275
  412168:	and    DWORD PTR [ebx-0x18],ecx
  41216b:	sub    bh,dl
  41216d:	retf   0x42d3
  412170:	adc    ecx,ebx
  412172:	out    dx,al
  412173:	jne    0x412194
  412175:	xchg   BYTE PTR [edi+0x31fa8703],bl
  41217b:	or     DWORD PTR [ecx],edx
  41217d:	push   bx
  41217f:	pushw  0x5aa5
  412183:	mov    edi,DWORD PTR [edx+0x3795c9]
  412189:	pusha  
  41218a:	aaa    
  41218b:	(bad)  
  41218c:	(bad)  
  41218e:	jmp    0xce7d6a20
  412193:	lock push ebp
  412195:	jb     0x41213f
  412197:	mov    bh,0x50
  412199:	ins    BYTE PTR es:[edi],dx
  41219a:	mov    dh,0x8d
  41219c:	adc    ebp,ebp
  41219e:	ins    BYTE PTR es:[edi],dx
  41219f:	divps  xmm4,XMMWORD PTR [edi+0x68]
  4121a3:	mov    dh,0xf7
  4121a5:	add    eax,0xc60b7f72
  4121aa:	sahf   
  4121ab:	mov    bl,0x43
  4121ad:	xor    eax,0x6a3b508d
  4121b2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4121b3:	adc    eax,0x3558d00d
  4121b8:	cld    
  4121b9:	outs   dx,BYTE PTR ds:[esi]
  4121ba:	inc    DWORD PTR [ecx+0x6e4b8cfa]
  4121c0:	jle    0x41217b
  4121c2:	(bad)  
  4121c3:	dec    edi
  4121c4:	test   al,0xfa
  4121c6:	addr16 dec dx
  4121c9:	mov    edx,0xa6a36222
  4121ce:	retf   0x1ebb
  4121d1:	enter  0x84b1,0x98
  4121d5:	(bad)  
  4121d7:	out    0x4b,al
  4121d9:	xor    al,0xf3
  4121db:	jg     0x4121a6
  4121dd:	cmc    
  4121de:	imul   ebp,edx,0xdb174b74
  4121e4:	push   ebp
  4121e5:	into   
  4121e6:	leave  
  4121e7:	jbe    0x4121ca
  4121e9:	cli    
  4121ea:	imul   edi,DWORD PTR [ebx-0x6d409f45],0xff9713ff
  4121f4:	loop   0x41222c
  4121f6:	jnp    0x412185
  4121f8:	jnp    0x4121e8
  4121fa:	je     0x4121c3
  4121fc:	sar    DWORD PTR [edx-0x33],cl
  4121ff:	jae    0x4121c4
  412201:	(bad)  
  412203:	and    BYTE PTR [ebp+0x77],dh
  412206:	sub    DWORD PTR [edi+0x60],ecx
  412209:	cwde   
  41220a:	pop    edx
  41220b:	and    edi,DWORD PTR [esi+0xcacdd76]
  412211:	stc    
  412212:	scas   eax,DWORD PTR es:[edi]
  412213:	xchg   esi,eax
  412214:	fisub  DWORD PTR [edx+ecx*2-0x55]
  412218:	and    DWORD PTR [edi],edx
  41221a:	out    dx,al
  41221b:	pop    es
  41221c:	imul   esi,eax,0x13f11bb
  412222:	ret    0xb60d
  412225:	fsubr  st,st(7)
  412227:	push   edi
  412228:	fcomp  DWORD PTR [eax+eax*2-0xe]
  41222c:	call   0x7415d5a3
  412231:	std    
  412232:	and    al,0x27
  412234:	pop    ebx
  412235:	and    eax,0xf3bbe526
  41223a:	dec    ebx
  41223b:	cmp    ebx,DWORD PTR [ebp+0x26744a83]
  412241:	jb     0x41225d
  412243:	and    edi,eax
  412245:	adc    cl,BYTE PTR [ebx-0x6cb08ed3]
  41224b:	or     al,0x71
  41224d:	jae    0x412298
  41224f:	(bad)  
  412250:	das    
  412251:	xchg   ecx,eax
  412252:	jmp    0x412215
  412254:	hlt    
  412255:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412256:	mov    WORD PTR [edx-0x2c],fs
  412259:	ins    BYTE PTR es:[edi],dx
  41225a:	pop    esi
  41225b:	sbb    dh,bl
  41225d:	in     eax,dx
  41225e:	retf   0xf4bd
  412261:	loopne 0x41221a
  412263:	(bad)  [esi-0x101d4d95]
  412269:	cmc    
  41226a:	or     DWORD PTR [ebx],ecx
  41226c:	call   0xfd71f548
  412271:	cld    
  412272:	pusha  
  412273:	push   ecx
  412274:	mov    fs,edx
  412276:	push   esp
  412277:	cs sbb eax,0xa1416af0
  41227d:	dec    edx
  41227e:	cwde   
  41227f:	xchg   ecx,eax
  412280:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412281:	push   cs
  412282:	test   al,0x83
  412284:	cwde   
  412285:	shr    BYTE PTR [esi+0x56ddd648],0xcd
  41228c:	inc    esi
  41228d:	mov    ah,0xba
  41228f:	inc    ebx
  412290:	out    0xa,eax
  412292:	rcr    ebp,0xa8
  412295:	and    dh,dl
  412297:	cs mov eax,0xc52cddd8
  41229d:	add    eax,0x8cb6e235
  4122a2:	ins    BYTE PTR es:[edi],dx
  4122a3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4122a4:	and    eax,0xe968ca94
  4122a9:	and    eax,0xab64dd89
  4122ae:	add    BYTE PTR [eax-0xd85ed7e],cl
  4122b4:	lods   al,BYTE PTR ds:[esi]
  4122b5:	push   ds
  4122b6:	xchg   ebx,eax
  4122b7:	popf   
  4122b8:	adc    ebx,DWORD PTR [esi+0x27]
  4122bb:	loop   0x412244
  4122bd:	jne    0x412254
  4122bf:	push   0xffffffd6
  4122c1:	in     eax,dx
  4122c2:	enter  0x76ff,0xbe
  4122c6:	mov    ah,0xac
  4122c8:	rcl    BYTE PTR [esi],cl
  4122ca:	push   0xdcfc07a
  4122cf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4122d0:	ins    DWORD PTR es:[edi],dx
  4122d1:	dec    esp
  4122d2:	jmp    0x412271
  4122d4:	sbb    al,0x2b
  4122d6:	sbb    esp,esi
  4122d8:	lea    ebx,[bp+0x3fcd]
  4122dd:	sti    
  4122de:	ss inc eax
  4122e0:	mov    esi,0x350f5f03
  4122e5:	ja     0x41233d
  4122e7:	push   ebp
  4122e8:	int    0x41
  4122ea:	outs   dx,BYTE PTR ds:[esi]
  4122eb:	jne    0x412363
  4122ed:	fidivr WORD PTR [ecx+0x61]
  4122f0:	xor    al,0x7f
  4122f2:	aad    0xe2
  4122f4:	leave  
  4122f5:	ins    DWORD PTR es:[edi],dx
  4122f6:	fdivr  QWORD PTR [edi-0x34]
  4122f9:	mov    ch,0xa4
  4122fb:	push   ebp
  4122fc:	and    BYTE PTR [ecx],bh
  4122fe:	sub    edx,DWORD PTR [edi+0x21]
  412301:	call   0xe15d:0xa63ae3e7
  412308:	call   0x848adb51
  41230d:	fdivr  DWORD PTR [ecx-0x5e]
  412310:	add    dh,BYTE PTR [esi-0x6700414b]
  412316:	clc    
  412317:	push   edx
  412318:	mov    ch,0x6e
  41231a:	sub    ebp,DWORD PTR [edi-0x5993e5c4]
  412320:	(bad)  
  412321:	xor    DWORD PTR [ebx],ebp
  412323:	idiv   DWORD PTR [ecx+0x6567f01a]
  412329:	rcl    esi,0x19
  41232c:	fisub  DWORD PTR [edi+0x32]
  41232f:	jae    0x4122e7
  412331:	scas   eax,DWORD PTR es:[edi]
  412332:	pop    ebp
  412333:	test   DWORD PTR [edi],edx
  412335:	pop    es
  412336:	push   ebx
  412337:	sbb    al,0xb5
  412339:	pop    edi
  41233a:	icebp  
  41233b:	sub    al,0xce
  41233d:	std    
  41233e:	ja     0x412398
  412340:	sahf   
  412341:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412342:	bnd jg 0x41238a
  412345:	pop    ebx
  412346:	mov    ebx,0x60d27976
  41234b:	push   ecx
  41234c:	test   BYTE PTR [bx+0x51cb],ch
  412351:	mov    BYTE PTR [ebp-0x10e84acd],al
  412357:	and    DWORD PTR [ecx-0x73],eax
  41235a:	ret    
  41235b:	into   
  41235c:	push   0x4d
  41235e:	test   BYTE PTR [ebp-0x2d51555e],0xe3
  412365:	test   DWORD PTR [edi-0x7c],edx
  412368:	popf   
  412369:	lea    edx,[edx]
  41236b:	scas   eax,DWORD PTR es:[edi]
  41236c:	cmp    eax,0x66a1f297
  412371:	xchg   edi,eax
  412372:	xor    eax,0x9cd7d585
  412377:	mov    ds:0xdcd80839,eax
  41237c:	clc    
  41237d:	cdq    
  41237e:	dec    edi
  41237f:	scas   eax,DWORD PTR es:[edi]
  412380:	pushf  
  412381:	lds    eax,FWORD PTR [ebx-0x188d406c]
  412387:	cmp    dl,al
  412389:	mov    eax,ds:0x478a2afa
  41238e:	jmp    0x2cef:0x8505f106
  412395:	fs clc 
  412397:	adc    eax,0x387eb8c0
  41239c:	or     dl,BYTE PTR [bp+si]
  41239f:	neg    bh
  4123a1:	ret    
  4123a2:	cmp    DWORD PTR [ebp+0x6a],esp
  4123a5:	shl    ebp,1
  4123a7:	icebp  
  4123a8:	jns    0x4123c7
  4123aa:	mov    ds,WORD PTR [esi+0x4baf7f85]
  4123b0:	jp     0x4123f2
  4123b2:	sub    al,0x32
  4123b4:	sbb    BYTE PTR es:[ebx],0xd
  4123b8:	into   
  4123b9:	pop    ss
  4123ba:	js     0x412344
  4123bc:	ja     0x4123c6
  4123be:	pop    ss
  4123bf:	arpl   WORD PTR [esi-0x1b1c5dcd],cx
  4123c5:	popa   
  4123c6:	aas    
  4123c7:	or     BYTE PTR [eax+0x7762228d],0x0
  4123ce:	fcomp  DWORD PTR [ebx]
  4123d0:	stos   BYTE PTR es:[edi],al
  4123d1:	push   0xffffffff
  4123d3:	ror    DWORD PTR [esi+0x7e],cl
  4123d6:	mov    ?,edx
  4123d8:	cdq    
  4123d9:	jbe    0x41242a
  4123db:	jge    0x4123f9
  4123dd:	push   ecx
  4123de:	nop
  4123df:	loop   0x4123c2
  4123e1:	ins    DWORD PTR es:[edi],dx
  4123e2:	push   esi
  4123e3:	aam    0x3d
  4123e5:	sbb    BYTE PTR [esi-0x613c108f],bh
  4123eb:	clc    
  4123ec:	dec    esp
  4123ed:	push   esi
  4123ee:	out    0xed,al
  4123f0:	test   al,0x5c
  4123f2:	rcl    eax,0x26
  4123f5:	push   ebp
  4123f6:	jb     0x4123f7
  4123f8:	outs   dx,BYTE PTR ds:[esi]
  4123f9:	add    al,0x6c
  4123fb:	fwait
  4123fc:	shr    BYTE PTR [ecx-0x78],0x6e
  412400:	fild   WORD PTR [ebx]
  412402:	iret   
  412403:	inc    edi
  412404:	mov    eax,ds:0x58a58610
  412409:	pop    ebx
  41240a:	inc    edi
  41240b:	mov    esi,0xddcdd222
  412410:	xchg   edx,eax
  412411:	mov    edx,0x7f4459bb
  412416:	mov    esi,0x53589cb0
  41241b:	cmp    DWORD PTR [ecx+0x58],ebx
  41241e:	cmp    DWORD PTR [ebp-0x387c704c],0x54adc950
  412428:	xor    eax,0x581a5701
  41242d:	cmp    al,0x6d
  41242f:	mov    BYTE PTR [esi+ebp*8-0x3c],ch
  412433:	(bad)  
  412434:	aad    0x8e
  412436:	scas   al,BYTE PTR es:[edi]
  412437:	shr    DWORD PTR [ecx],0xb3
  41243a:	(bad)  
  41243b:	(bad)
  41243f:	adc    al,0x43
  412441:	jge    0x4123fa
  412443:	je     0x41248d
  412445:	push   0xe4e002
  41244a:	into   
  41244b:	imul   ecx,ebx,0x710d3e56
  412451:	dec    edx
  412452:	gs push 0xd43f9213
  412458:	aad    0xfe
  41245a:	fsubr  DWORD PTR [ebx+edx*2+0x12d71150]
  412461:	je     0x4123f0
  412463:	or     ah,BYTE PTR [ebx]
  412465:	jbe    0x4124d1
  412467:	jmp    0x9d915df4
  41246c:	js     0x41241d
  41246e:	or     esp,DWORD PTR ds:0x8b445956
  412474:	pop    edi
  412475:	adc    eax,0x589f2a2e
  41247a:	lods   eax,DWORD PTR ds:[esi]
  41247b:	xor    BYTE PTR [edi+0x5ba7d4b0],0x97
  412482:	push   ebp
  412483:	ins    DWORD PTR es:[edi],dx
  412484:	jae    0x4124f9
  412486:	frndint 
  412488:	bound  ebx,QWORD PTR [edx+eiz*2-0x33]
  41248c:	inc    edx
  41248d:	std    
  41248e:	pop    ebp
  41248f:	ja     0x412444
  412491:	mov    al,ds:0xbf59a8c1
  412496:	adc    BYTE PTR [ebx+edi*4],bh
  412499:	add    al,0x9b
  41249b:	shl    BYTE PTR [ebp+0x57],cl
  41249e:	pop    ebx
  41249f:	ret    
  4124a0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4124a1:	bound  esi,QWORD PTR [esi+0x152acd58]
  4124a7:	lods   al,BYTE PTR ds:[esi]
  4124a8:	mov    dh,0x66
  4124aa:	test   DWORD PTR ds:0x2c4fe3a4,esi
  4124b0:	retf   
  4124b1:	xchg   ecx,eax
  4124b2:	and    eax,0x2423c85
  4124b7:	and    ah,BYTE PTR [esi+0x3718f295]
  4124bd:	sub    BYTE PTR [edx],al
  4124bf:	sbb    DWORD PTR [ecx-0x28],ebx
  4124c2:	and    al,0xe0
  4124c4:	sbb    esp,esi
  4124c6:	mov    ah,0x16
  4124c8:	popa   
  4124c9:	cmp    ebp,DWORD PTR [ecx+eiz*1]
  4124cc:	mov    WORD PTR [edi+0x5ce191c5],fs
  4124d2:	ss in  eax,0x83
  4124d5:	dec    ecx
  4124d6:	inc    edi
  4124d7:	push   ss
  4124d8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4124d9:	jg     0x4124db
  4124db:	out    dx,eax
  4124dc:	js     0x41252a
  4124de:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4124df:	sub    al,0xf6
  4124e1:	xlat   BYTE PTR ds:[ebx]
  4124e2:	add    al,0xc2
  4124e4:	sbb    DWORD PTR [ecx],edi
  4124e6:	ja     0x412479
  4124e8:	pop    eax
  4124e9:	jne    0x4124af
  4124eb:	mov    ?,WORD PTR ds:0x336853c2
  4124f1:	mov    eax,ds:0xc629bef1
  4124f6:	lds    ebp,FWORD PTR ds:0x7b5c877e
  4124fc:	repz dec ebp
  4124fe:	xchg   esp,eax
  4124ff:	cmc    
  412500:	hlt    
  412501:	test   al,0xd2
  412503:	xchg   edi,eax
  412504:	cld    
  412505:	jb     0x4124d3
  412507:	inc    esp
  412508:	inc    ebx
  412509:	fucom  st(7)
  41250b:	cli    
  41250c:	xchg   esp,eax
  41250d:	lea    eax,[ecx-0x6a9ad5ee]
  412513:	scas   eax,DWORD PTR es:[edi]
  412514:	mov    ah,0xe
  412516:	leave  
  412517:	bound  edi,QWORD PTR [eax-0x736ec6fe]
  41251d:	sar    WORD PTR [ebx+ecx*4],1
  412521:	inc    eax
  412522:	push   cs
  412523:	or     al,0xa1
  412525:	xor    eax,0x6be27f6f
  41252a:	cld    
  41252b:	mov    esi,0xdf7551cd
  412530:	sub    BYTE PTR [esp+ebp*1+0x6d1970a7],cl
  412537:	outs   dx,BYTE PTR ds:[esi]
  412538:	gs js  0x412513
  41253b:	inc    eax
  41253c:	mov    bh,0xca
  41253e:	dec    edi
  41253f:	rcr    DWORD PTR [ecx],cl
  412541:	pop    es
  412542:	pop    edi
  412543:	inc    esi
  412544:	sub    ch,BYTE PTR [edx-0x6775e974]
  41254a:	jno    0x412558
  41254c:	adc    ebp,DWORD PTR [ecx+0x7c178773]
  412552:	mov    BYTE PTR [ebx],bl
  412554:	jae    0x4124e1
  412556:	add    eax,0xfef8b9b
  41255b:	jmp    0x412557
  41255d:	scas   al,BYTE PTR es:[edi]
  41255e:	loope  0x41253b
  412560:	inc    eax
  412561:	push   eax
  412562:	mov    dl,0xa0
  412564:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412565:	sbb    al,0x3d
  412567:	popf   
  412568:	lea    eax,[eax-0x46edbd2]
  41256e:	and    DWORD PTR [ebx+edx*2+0xcb89551],ebp
  412575:	adc    ebp,esp
  412577:	or     cl,BYTE PTR ds:0x9953af8a
  41257d:	sbb    ebx,DWORD PTR [ebx-0x5e45547d]
  412583:	adc    BYTE PTR [edx],0xff
  412586:	scas   al,BYTE PTR es:[edi]
  412587:	fwait
  412588:	out    dx,eax
  412589:	mov    BYTE PTR gs:[ebx],dl
  41258c:	sub    eax,DWORD PTR [edi]
  41258e:	retf   0x5ecf
  412591:	mov    WORD PTR [edi-0x29],cs
  412594:	mov    eax,ds:0x1710fa80
  412599:	icebp  
  41259a:	and    al,0x2f
  41259c:	fmul   QWORD PTR ds:[esp+ebx*2-0x24]
  4125a1:	jno    0x41258b
  4125a3:	xchg   edi,eax
  4125a4:	jo     0x4125d8
  4125a6:	stos   DWORD PTR es:[edi],eax
  4125a7:	enter  0xae89,0xe1
  4125ab:	adc    eax,0x6a49f003
  4125b0:	int    0xbc
  4125b2:	push   cs
  4125b3:	xchg   DWORD PTR [edx-0x2fa07f94],ebx
  4125b9:	jne    0x41254c
  4125bb:	into   
  4125bc:	sub    eax,0xdb8f6324
  4125c1:	retf   0xedb6
  4125c4:	popa   
  4125c5:	inc    esi
  4125c6:	cmp    al,0x84
  4125c8:	xor    DWORD PTR [edi-0x222dd940],0x32
  4125cf:	enter  0xd8d0,0x3f
  4125d3:	sub    edi,DWORD PTR [ebp+edx*8+0x4e]
  4125d7:	aaa    
  4125d8:	xor    edi,DWORD PTR [ecx+0x46d3619b]
  4125de:	pop    esp
  4125df:	rcl    DWORD PTR [ebp+0x53],1
  4125e2:	out    0x4f,al
  4125e4:	sar    bl,0x3a
  4125e7:	jp     0x412630
  4125e9:	mov    ds:0xce3501be,al
  4125ee:	ret    
  4125ef:	mov    WORD PTR [esi-0x4f46dfea],es
  4125f5:	mov    edi,0x7133a570
  4125fa:	dec    ebp
  4125fb:	pop    ss
  4125fc:	clc    
  4125fd:	repnz add ch,BYTE PTR [ebp+0x1004e905]
  412604:	pop    edx
  412605:	xor    eax,0xffffff9a
  412608:	sbb    esi,DWORD PTR [edx-0x5324af83]
  41260e:	sar    BYTE PTR [ecx-0x75],1
  412611:	mov    ds:0x9533df5d,eax
  412616:	hlt    
  412617:	sub    eax,0xfebdb78b
  41261c:	xchg   ebp,eax
  41261d:	shl    DWORD PTR [esi+0x79a0d869],0xba
  412624:	repz mov ecx,0xb3664499
  41262a:	cmp    ebp,DWORD PTR [ebx]
  41262c:	xor    ah,BYTE PTR [esi+eiz*8]
  41262f:	mov    ds:0xfca8ea87,eax
  412634:	(bad)  
  412635:	daa    
  412636:	xchg   ebx,eax
  412637:	dec    eax
  412638:	fmul   QWORD PTR [esi-0x4]
  41263b:	cdq    
  41263c:	pop    esi
  41263d:	lea    esi,[ebx+0x54866118]
  412643:	scas   al,BYTE PTR es:[edi]
  412644:	div    BYTE PTR [esi+ecx*4+0x38]
  412648:	mov    BYTE PTR [edx-0xe85bb6e],ch
  41264e:	inc    edi
  41264f:	push   edi
  412650:	add    al,0xfb
  412652:	xchg   edi,eax
  412653:	sar    DWORD PTR [esp+eiz*2-0x5e],cl
  412657:	scas   eax,DWORD PTR es:[edi]
  412658:	adc    DWORD PTR [edi-0x7b],0xffffffc8
  41265c:	das    
  41265d:	lea    ebx,ds:0x762a9302
  412663:	gs cmp al,0xe2
  412666:	xchg   edx,eax
  412667:	lea    ebp,[esi+0x4830adb]
  41266d:	call   0xd55786bc
  412672:	or     dh,BYTE PTR [edi-0x4a7479c5]
  412678:	mov    dh,BYTE PTR [esi]
  41267a:	mov    eax,es
  41267c:	or     esi,DWORD PTR [ebp+0x250d277a]
  412682:	xchg   edx,eax
  412683:	lds    ecx,FWORD PTR [edi-0x15234efa]
  412689:	mov    eax,ds:0xe01cdc07
  41268e:	and    eax,0xf26b0f00
  412693:	xchg   edi,eax
  412694:	mov    WORD PTR [esi],ss
  412696:	retf   0xbab9
  412699:	xchg   esp,eax
  41269a:	mov    DWORD PTR ds:[esi-0xe],esi
  41269e:	pop    ds
  41269f:	test   DWORD PTR [edx],ebp
  4126a1:	pop    edx
  4126a2:	(bad)  [ebp+0x45]
  4126a5:	push   ss
  4126a6:	in     eax,dx
  4126a7:	test   DWORD PTR [ebp-0x5fe44d30],0xe00a6e80
  4126b1:	adc    ebx,DWORD PTR [edx-0x22940376]
  4126b7:	dec    ebp
  4126b8:	push   esi
  4126b9:	or     edi,DWORD PTR [eax+0x19]
  4126bc:	sub    ah,BYTE PTR ds:0x6a1a23a
  4126c2:	and    eax,0x2972a61f
  4126c7:	mov    DWORD PTR [ecx],ebp
  4126c9:	sub    al,0x50
  4126cb:	lahf   
  4126cc:	fadd   st(6),st
  4126ce:	mov    ds:0x9f549e83,al
  4126d3:	pop    ss
  4126d4:	retf   0x7c8e
  4126d7:	enter  0xf72e,0x26
  4126db:	xor    BYTE PTR [edx+0x6f],0x9c
  4126df:	mov    ebx,0xedca6b85
  4126e4:	arpl   WORD PTR [ebx-0x5369a41b],ax
  4126ea:	push   ebx
  4126eb:	mov    bl,0x74
  4126ed:	and    ch,0xfc
  4126f0:	cs mov bl,0xc5
  4126f3:	call   0x9c46:0xcf9b5edf
  4126fa:	jmp    0x41274a
  4126fc:	das    
  4126fd:	cmp    eax,0xc18112c4
  412702:	cmp    al,0x7d
  412704:	popf   
  412705:	push   ebx
  412706:	ss inc edx
  412708:	aad    0xe5
  41270a:	push   ss
  41270b:	xchg   esi,eax
  41270c:	jne    0x4126dc
  41270e:	mov    bl,0x8a
  412710:	sub    DWORD PTR [edx+0x2c],esp
  412713:	stos   DWORD PTR es:[edi],eax
  412714:	cmp    ebx,DWORD PTR [eax-0x2c53fcb5]
  41271a:	icebp  
  41271b:	popa   
  41271c:	xor    DWORD PTR [eax-0x76659e96],edi
  412722:	adc    DWORD PTR [edi],esi
  412724:	cmp    ecx,edx
  412726:	cmc    
  412727:	vpsubq xmm3,xmm2,xmm2
  41272b:	jb     0x4126c4
  41272d:	jns    0x4126f3
  41272f:	and    esi,DWORD PTR ds:0xdc4976e6
  412735:	mov    ebx,0xb4de2058
  41273a:	shr    BYTE PTR [ecx-0x4],cl
  41273d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41273e:	imul   ecx,DWORD PTR ds:0xedeb6c4c,0xffffffab
  412745:	mov    ebp,0x309c688e
  41274a:	push   ds
  41274b:	add    dl,cl
  41274d:	cs dec ebx
  41274f:	or     ch,BYTE PTR [esi+0x32]
  412752:	neg    esi
  412754:	or     dh,dh
  412756:	adc    esi,DWORD PTR [ebx+0x1192a2df]
  41275c:	fst    QWORD PTR [eax]
  41275e:	xor    esi,DWORD PTR [edx]
  412760:	sti    
  412761:	(bad)  
  412762:	and    eax,0xa182c069
  412767:	out    0xed,eax
  412769:	add    eax,0x7253c8f5
  41276e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41276f:	rcl    BYTE PTR [edi+0x16a3621e],cl
  412775:	mov    ds:0x62dd5d6a,eax
  41277a:	test   DWORD PTR [edi],edx
  41277c:	fistp  DWORD PTR es:[ebp-0x6a9821c6]
  412783:	mov    ch,0x59
  412785:	ret    0xd285
  412788:	mov    esp,0x99c0bb6e
  41278d:	iret   
  41278e:	popf   
  41278f:	repnz pop ss
  412791:	and    eax,0xc85a5d22
  412796:	loopne 0x4127b6
  412798:	lods   al,BYTE PTR ds:[esi]
  412799:	push   ecx
  41279a:	pop    ds
  41279b:	div    ecx
  41279d:	cmp    esp,DWORD PTR [ebp+0x3dbd3b07]
  4127a3:	outs   dx,DWORD PTR ds:[esi]
  4127a4:	mov    ebx,0x85c0d462
  4127a9:	retf   0x9361
  4127ac:	dec    esi
  4127ad:	frstor [eax]
  4127af:	mov    ebx,0xdae35e46
  4127b4:	adc    BYTE PTR [ebx-0x4e5f418f],0xc8
  4127bb:	ja     0x412786
  4127bd:	and    dh,BYTE PTR [ebx-0x1f]
  4127c0:	xchg   edi,eax
  4127c1:	push   edi
  4127c2:	out    0x5d,eax
  4127c4:	dec    esi
  4127c5:	xchg   esi,eax
  4127c6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4127c7:	and    ebx,DWORD PTR [esi]
  4127c9:	push   edi
  4127ca:	std    
  4127cb:	inc    eax
  4127cc:	mov    eax,0x40fcc24c
  4127d1:	test   eax,0xbe24658d
  4127d6:	add    ebp,DWORD PTR [esi+0x240fc614]
  4127dc:	jbe    0x4127f0
  4127de:	fcmovnu st,st(4)
  4127e0:	xor    DWORD PTR [edx+0x7f],0xffffff90
  4127e4:	jbe    0x4127eb
  4127e6:	mov    ch,0x3d
  4127e8:	sbb    al,BYTE PTR [ebp*4-0x55afceb1]
  4127ef:	sbb    BYTE PTR [esi-0x55b18de9],bh
  4127f5:	jne    0x412874
  4127f7:	sub    ecx,DWORD PTR [eax-0x5b]
  4127fa:	data16 daa 
  4127fc:	aam    0x2a
  4127fe:	aas    
  4127ff:	mov    eax,DWORD PTR [ebp+edi*8-0x43]
  412803:	aas    
  412804:	fiadd  WORD PTR [edi-0x5]
  412807:	inc    edi
  412808:	(bad)  
  412809:	mov    ebx,0xb33ea801
  41280e:	push   ecx
  41280f:	shl    BYTE PTR [edi],1
  412811:	mov    cl,0x20
  412813:	push   ds
  412814:	rol    BYTE PTR [esi+0x51],cl
  412817:	and    BYTE PTR ss:[eax-0x13],ch
  41281b:	push   0x5c
  41281d:	std    
  41281e:	mov    al,0xee
  412820:	sbb    BYTE PTR [eax],bh
  412822:	push   edi
  412823:	xor    ebp,DWORD PTR [ecx]
  412825:	inc    ebp
  412826:	xor    ebp,DWORD PTR ds:0xebfebdff
  41282c:	hlt    
  41282d:	aad    0x81
  41282f:	xchg   ebp,eax
  412830:	fdiv   DWORD PTR [ecx]
  412832:	xchg   ebp,eax
  412833:	imul   esi,DWORD PTR [esi],0x1
  412836:	jo     0x4127ea
  412838:	mov    bl,0xb6
  41283a:	js     0x4127d0
  41283c:	cmp    bh,al
  41283e:	into   
  41283f:	push   ebp
  412840:	mov    ch,0x93
  412842:	xor    BYTE PTR [ebp-0x755cfa9b],al
  412848:	adc    BYTE PTR [ebx+0x38],dh
  41284b:	sub    al,0xc4
  41284d:	mov    al,0x8b
  41284f:	push   es
  412850:	xchg   esi,eax
  412851:	sbb    ecx,ebp
  412853:	pop    edx
  412854:	cmp    DWORD PTR [ebx-0x66],ebx
  412857:	jnp    0x4128a3
  412859:	fs addr16 cld 
  41285c:	mov    ah,0xd9
  41285e:	imul   edx,DWORD PTR [esp+eax*2+0x2037bea4],0xfffffff3
  412866:	repz loope 0x4128ac
  412869:	dec    ebp
  41286a:	fdivr  DWORD PTR [edx+0x6f]
  41286d:	repnz mov eax,ds:0x2951efda
  412873:	pop    ecx
  412874:	jb     0x412875
  412876:	xlat   BYTE PTR ds:[ebx]
  412877:	mov    WORD PTR [edx],ss
  412879:	xor    DWORD PTR [esi-0x15],edx
  41287c:	mov    edx,0x3c188b89
  412881:	mov    ds:0x1907eedb,eax
  412886:	lods   al,BYTE PTR ds:[esi]
  412887:	push   ecx
  412888:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412889:	push   esp
  41288a:	data16 and bl,ah
  41288d:	push   ss
  41288e:	outs   dx,DWORD PTR ds:[esi]
  41288f:	push   es
  412890:	test   BYTE PTR [ecx+eiz*2+0x79],0xa7
  412895:	lods   al,BYTE PTR ds:[esi]
  412896:	in     eax,dx
  412897:	xor    DWORD PTR [edx-0x57190c70],esp
  41289d:	or     cl,bl
  41289f:	xor    eax,0x7e455312
  4128a4:	push   edx
  4128a5:	adc    BYTE PTR [ecx],dh
  4128a7:	loopne 0x4128dd
  4128a9:	or     bl,bh
  4128ab:	in     al,0xbb
  4128ad:	or     ebp,DWORD PTR [edx-0x9]
  4128b0:	xchg   ecx,eax
  4128b1:	cmp    bh,BYTE PTR [ebx+eiz*8-0x62]
  4128b5:	add    cl,ah
  4128b7:	pop    esi
  4128b8:	sub    eax,ebx
  4128ba:	sbb    DWORD PTR [edi],eax
  4128bc:	cmp    eax,0xdd173bdd
  4128c1:	add    ebp,DWORD PTR [ebp+0x73]
  4128c4:	clc    
  4128c5:	inc    edi
  4128c6:	outs   dx,DWORD PTR ds:[esi]
  4128c7:	mov    edx,0xc5dd312b
  4128cc:	ds jmp 0xe902:0xd9893600
  4128d4:	add    eax,0xb8adeede
  4128d9:	fs adc al,0x51
  4128dc:	addr16 push 0xffffffeb
  4128df:	aas    
  4128e0:	and    eax,DWORD PTR [edx-0x57d7fa60]
  4128e6:	adc    dh,bl
  4128e8:	sub    bl,BYTE PTR [ecx-0x38be3b25]
  4128ee:	xchg   BYTE PTR [edi],dl
  4128f0:	aaa    
  4128f1:	push   es
  4128f2:	fld    TBYTE PTR [ecx]
  4128f4:	enter  0xc290,0xe4
  4128f8:	outs   dx,DWORD PTR ds:[esi]
  4128f9:	aad    0x80
  4128fb:	sub    edx,edx
  4128fd:	mov    bh,0xdc
  4128ff:	daa    
  412900:	sub    DWORD PTR [ebp-0x3],eax
  412903:	jl     0x412976
  412905:	xchg   ecx,eax
  412906:	int3   
  412907:	xchg   edx,eax
  412908:	ins    BYTE PTR es:[edi],dx
  412909:	xor    al,bl
  41290b:	adc    cl,dh
  41290d:	pop    edx
  41290e:	xchg   ebx,eax
  41290f:	pop    ss
  412910:	mov    edx,0x3b75e34b
  412915:	dec    esi
  412916:	pop    DWORD PTR [ebx]
  412918:	mov    eax,ds:0x5e5dd89f
  41291d:	iret   
  41291e:	mov    ds,WORD PTR [edx+ebx*1-0x2fce37d5]
  412925:	cmp    eax,0xdaaef86f
  41292a:	cmp    DWORD PTR [ebp-0xbd688ce],ebx
  412930:	pop    es
  412931:	shl    ecx,0x7a
  412934:	test   eax,0x7a4a09b7
  412939:	int3   
  41293a:	jo     0x41297c
  41293c:	cmp    DWORD PTR [edi-0x2f389167],0xa4a05cd5
  412946:	jnp    0x412999
  412948:	repz xor BYTE PTR [edx+0x65],dh
  41294c:	jp     0x4128d9
  41294e:	xlat   BYTE PTR ds:[ebx]
  41294f:	sbb    DWORD PTR [edi+0xdadcbfc],edx
  412955:	js     0x412985
  412957:	adc    eax,0x6b936362
  41295c:	inc    esp
  41295d:	out    dx,eax
  41295e:	ficomp DWORD PTR [edx]
  412960:	xor    edx,esp
  412962:	xlat   BYTE PTR ds:[ebx]
  412963:	adc    BYTE PTR [edx+eiz*4-0x1dca26c2],0x32
  41296b:	xchg   ebx,eax
  41296c:	pop    ecx
  41296d:	shl    cl,0x37
  412970:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412971:	popf   
  412972:	call   0xa8c11ecb
  412977:	pop    ebp
  412978:	adc    DWORD PTR [ebx-0x2c822637],edx
  41297e:	cld    
  41297f:	sub    eax,0x22efede9
  412984:	stc    
  412985:	xor    DWORD PTR [ecx],0x165da4f9
  41298b:	adc    dl,ah
  41298d:	mov    esi,0x6a9c2612
  412992:	xor    dl,BYTE PTR [ecx+ecx*8]
  412995:	retf   
  412996:	in     al,0x44
  412998:	push   ebx
  412999:	adc    cl,BYTE PTR [ecx]
  41299b:	mov    WORD PTR [esi*1-0x32555b87],?
  4129a2:	cld    
  4129a3:	int    0x93
  4129a5:	pop    ds
  4129a6:	arpl   bx,cx
  4129a8:	not    BYTE PTR [edx+0x68087eae]
  4129ae:	(bad)  
  4129af:	and    DWORD PTR [edi-0x5455eeca],ecx
  4129b5:	jbe    0x4129f6
  4129b7:	add    dh,al
  4129b9:	imul   eax,DWORD PTR [ebp-0x86a0d59],0x14
  4129c0:	in     al,0x5d
  4129c2:	xchg   esp,eax
  4129c3:	shl    BYTE PTR [eax+0x57],cl
  4129c6:	inc    esp
  4129c7:	push   eax
  4129c8:	xchg   esi,eax
  4129c9:	ret    
  4129ca:	in     eax,0x1d
  4129cc:	inc    esi
  4129cd:	cmp    ch,bl
  4129cf:	xchg   esp,eax
  4129d0:	or     al,0xa6
  4129d2:	sub    BYTE PTR [eax],0xb7
  4129d5:	out    0x99,eax
  4129d7:	repnz inc ebp
  4129d9:	cmp    al,0x57
  4129db:	cmc    
  4129dc:	repz cdq 
  4129de:	inc    esp
  4129df:	jp     0x41296a
  4129e1:	mov    ebp,0x6640d543
  4129e6:	dec    ecx
  4129e7:	mov    al,ds:0xe7d453e9
  4129ec:	push   es
  4129ed:	jle    0x4129c7
  4129ef:	dec    edi
  4129f0:	or     BYTE PTR gs:[ecx],al
  4129f3:	data16 lods al,BYTE PTR ds:[esi]
  4129f5:	std    
  4129f6:	int    0xb6
  4129f8:	into   
  4129f9:	in     al,0x3e
  4129fb:	ffree  st(3)
  4129fd:	popa   
  4129fe:	sbb    DWORD PTR [esi],ecx
  412a00:	dec    esi
  412a01:	push   ds
  412a02:	xchg   edx,eax
  412a03:	fstp   DWORD PTR [edx-0x4d0f7949]
  412a09:	js     0x412a46
  412a0b:	fldenv [eax]
  412a0d:	imul   ebp,ecx,0x2713a601
  412a13:	mov    bl,0x82
  412a15:	(bad)  
  412a16:	icebp  
  412a17:	nop
  412a18:	and    edx,edi
  412a1a:	in     eax,dx
  412a1b:	enter  0x1e2b,0xb0
  412a1f:	mov    fs,ecx
  412a21:	xor    DWORD PTR [ebx+0x3f],0x2958ae0
  412a28:	mov    ebx,0xae8a42c4
  412a2d:	es retf 
  412a2f:	in     eax,dx
  412a30:	es push ds
  412a32:	pushw  es
  412a34:	std    
  412a35:	push   edi
  412a36:	mov    ebp,0x38410555
  412a3b:	push   es
  412a3c:	shr    ch,0x16
  412a3f:	fnsave [eax]
  412a41:	inc    edi
  412a42:	mov    DWORD PTR [edi+0x60bd3a0a],ebp
  412a48:	push   ebx
  412a49:	mov    esp,0xaf25a818
  412a4e:	in     eax,0x8d
  412a50:	push   esp
  412a51:	jns    0x412a00
  412a53:	push   0x3c
  412a55:	pushf  
  412a56:	xor    cl,BYTE PTR [ecx]
  412a58:	not    DWORD PTR [edx+0x24]
  412a5b:	xor    al,0xb7
  412a5d:	js     0x412a36
  412a5f:	mov    dl,0xe4
  412a61:	cmp    ch,dh
  412a63:	adc    ebx,DWORD PTR [ebx-0x37]
  412a66:	sub    ch,cl
  412a68:	out    0x85,eax
  412a6a:	adc    ebp,DWORD PTR [edx+0x40]
  412a6d:	hlt    
  412a6e:	fcmovu st,st(4)
  412a70:	call   0xc1ab:0xe2d1315b
  412a77:	and    esi,DWORD PTR ds:0xc81f2b02
  412a7d:	jecxz  0x412aa6
  412a7f:	pop    ecx
  412a80:	(bad)  
  412a81:	mov    eax,ds:0x4c539535
  412a86:	mov    ds:0x610ad6fd,eax
  412a8b:	lods   al,BYTE PTR ds:[esi]
  412a8c:	sub    DWORD PTR [esp+ebp*2-0x2c3a5840],ebx
  412a93:	out    0xa9,eax
  412a95:	mov    ecx,0xe2b97483
  412a9a:	inc    esp
  412a9b:	mov    edx,0x95cc0a8a
  412aa0:	retf   
  412aa1:	sub    DWORD PTR [ebp-0x6d],0x15
  412aa5:	mov    ebp,esp
  412aa7:	xor    ah,BYTE PTR [ebp+0x1b6f8e85]
  412aad:	popf   
  412aae:	pop    es
  412aaf:	es mov ecx,0x2d231035
  412ab5:	lock ss repz je 0x412a6f
  412aba:	and    al,0xdf
  412abc:	jo     0x412b31
  412abe:	dec    BYTE PTR [ecx+0x230bd793]
  412ac4:	cwde   
  412ac5:	push   esp
  412ac6:	aad    0xf7
  412ac8:	out    dx,eax
  412ac9:	mov    ch,0xd0
  412acb:	push   esi
  412acc:	mov    bl,bh
  412ace:	push   ecx
  412acf:	cwde   
  412ad0:	repnz shr DWORD PTR [ecx+0x1c],cl
  412ad4:	jns    0x412b31
  412ad6:	push   0x49
  412ad8:	sbb    eax,DWORD PTR [edx+0x1f]
  412adb:	test   al,0xb9
  412add:	js     0x412ac7
  412adf:	lock push ebp
  412ae1:	or     eax,0x121777f
  412ae6:	fisub  DWORD PTR [esi]
  412ae8:	and    DWORD PTR [edi+0x19],0x73
  412aec:	call   0x325c:0xf9350632
  412af3:	test   esi,esi
  412af5:	and    DWORD PTR [edi-0x24992d9f],ecx
  412afb:	fs pop es
  412afd:	inc    esp
  412afe:	call   0xf6fc:0xfec8a247
  412b05:	out    dx,eax
  412b06:	icebp  
  412b07:	jno    0x412b87
  412b09:	das    
  412b0a:	mov    ecx,DWORD PTR [ebx-0x241cb322]
  412b10:	and    BYTE PTR [ebx-0xb],0x4f
  412b14:	scas   al,BYTE PTR es:[edi]
  412b15:	mov    edx,ecx
  412b17:	popf   
  412b18:	dec    edi
  412b19:	pop    ebp
  412b1a:	popf   
  412b1b:	pop    ecx
  412b1c:	cmp    DWORD PTR [ebx],esi
  412b1e:	arpl   WORD PTR [edx+0x70],dx
  412b21:	rol    DWORD PTR [edx],1
  412b23:	jo     0x412b9a
  412b25:	adc    DWORD PTR [ebx-0x69],0x78
  412b29:	xchg   BYTE PTR [eax],bl
  412b2b:	or     DWORD PTR [eax-0x33901df2],esp
  412b31:	adc    DWORD PTR [ecx+0xf66586b],edx
  412b37:	iret   
  412b38:	scas   eax,DWORD PTR es:[edi]
  412b39:	inc    ebp
  412b3a:	xor    bh,BYTE PTR cs:[esi-0xbb05436]
  412b41:	loop   0x412b3d
  412b43:	loop   0x412b47
  412b45:	inc    esp
  412b46:	fmul   QWORD PTR [eax+0x68029d0]
  412b4c:	xor    bl,BYTE PTR [edx+0x31e3fc3a]
  412b52:	mov    ebp,DWORD PTR [eax]
  412b54:	jp     0x412b07
  412b56:	inc    eax
  412b57:	shr    dl,cl
  412b59:	jge    0x412b77
  412b5b:	cmp    edi,DWORD PTR [ebx]
  412b5d:	dec    ecx
  412b5e:	xchg   edi,eax
  412b5f:	addr16 and eax,0x8b01c057
  412b65:	(bad)  
  412b66:	fcmovnbe st,st(7)
  412b68:	mov    al,0xb3
  412b6a:	mov    al,ds:0x8f9968a6
  412b6f:	sub    al,0x4
  412b71:	fidivr DWORD PTR ds:[edi-0x51]
  412b75:	in     eax,0xfc
  412b77:	fldcw  WORD PTR [ecx-0x13]
  412b7a:	fisubr DWORD PTR [ebx+ebx*2-0x723bdb24]
  412b81:	and    al,0x69
  412b83:	inc    edx
  412b84:	dec    ebp
  412b85:	inc    ecx
  412b86:	nop
  412b87:	add    bl,BYTE PTR [edi-0x3]
  412b8a:	int3   
  412b8b:	sub    ch,BYTE PTR [ecx+0x4a58baa4]
  412b91:	das    
  412b92:	(bad)
  412b96:	fisttp QWORD PTR [ebx+ebx*4-0x52]
  412b9a:	frstor [edx]
  412b9c:	ins    DWORD PTR es:[edi],dx
  412b9d:	or     DWORD PTR [esi+0x10],edi
  412ba0:	gs jns 0x412b7e
  412ba3:	fcomip st,st(7)
  412ba5:	xor    al,0x57
  412ba7:	push   esp
  412ba8:	sbb    ch,BYTE PTR [ecx-0xc3e85e]
  412bae:	and    BYTE PTR [esi],0x35
  412bb1:	sahf   
  412bb2:	call   0x645c905e
  412bb7:	loopne 0x412b40
  412bb9:	add    ch,BYTE PTR [ecx+0x14e289db]
  412bbf:	cmp    ecx,DWORD PTR [ebx]
  412bc1:	pop    ecx
  412bc2:	shl    DWORD PTR [ecx-0xed7807d],0x37
  412bc9:	and    DWORD PTR [ecx+0x2e],edx
  412bcc:	cmp    DWORD PTR [eax-0x3d],edx
  412bcf:	mov    ?,WORD PTR [ebx]
  412bd1:	add    bl,BYTE PTR [eax]
  412bd3:	retf   0xca20
  412bd6:	lock sbb eax,DWORD PTR [ebp+eax*8+0x1fa8b6ec]
  412bde:	cmp    ecx,DWORD PTR [edi-0x6f]
  412be1:	fdiv   QWORD PTR [esi-0x35]
  412be4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412be5:	shr    DWORD PTR [esi-0x2f],cl
  412be8:	inc    ecx
  412be9:	sub    DWORD PTR [esi+0x7e],esi
  412bec:	sbb    dl,bh
  412bee:	sbb    bl,al
  412bf0:	adc    al,0x78
  412bf2:	sub    al,0xf6
  412bf4:	mov    ebp,0xb77eaa8e
  412bf9:	cmp    BYTE PTR ds:0x2b9f88a,ch
  412bff:	ret    0xe3c9
  412c02:	aam    0xca
  412c04:	dec    edi
  412c05:	and    eax,0x9d985d72
  412c0a:	aaa    
  412c0b:	fidivr DWORD PTR [esi+0xb]
  412c0e:	pminsw mm7,QWORD PTR [esi-0x6e37463c]
  412c15:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412c16:	sub    ebp,ecx
  412c18:	mov    esp,0xce861d69
  412c1d:	addr16 (bad) 
  412c1f:	in     al,0x42
  412c21:	js     0x412bff
  412c23:	sub    ecx,DWORD PTR [edx+edx*4]
  412c26:	jp     0x412c6c
  412c28:	mov    ecx,0xadec76f7
  412c2d:	xchg   dl,bh
  412c2f:	mov    ah,0x56
  412c31:	and    esp,DWORD PTR [edi]
  412c33:	or     cl,BYTE PTR [eax+0x0]
  412c36:	sub    bh,BYTE PTR [edi+0x74]
  412c39:	mov    bl,0xf1
  412c3b:	xor    dl,bh
  412c3d:	aas    
  412c3e:	xchg   edi,eax
  412c3f:	lahf   
  412c40:	ins    DWORD PTR es:[edi],dx
  412c41:	js     0x412c78
  412c43:	xor    BYTE PTR [ecx+edi*4-0xa63a80d],al
  412c4a:	inc    DWORD PTR [ecx]
  412c4c:	imul   esi,DWORD PTR [eax],0x43030b3b
  412c52:	push   edi
  412c53:	mov    ebp,ecx
  412c55:	mov    ds:0x5351172c,al
  412c5a:	sbb    bh,BYTE PTR [eax+0x339fc65d]
  412c60:	call   0x1b2a:0x9dfa287d
  412c67:	sbb    eax,0xa8718c40
  412c6c:	inc    ecx
  412c6d:	hlt    
  412c6e:	inc    edx
  412c6f:	lock add ebp,DWORD PTR [ebx-0x3470812e]
  412c76:	or     ch,cl
  412c78:	adc    eax,0x71adfcf1
  412c7d:	xlat   BYTE PTR ds:[ebx]
  412c7e:	inc    esi
  412c7f:	or     DWORD PTR [ebx],eax
  412c81:	pop    ds
  412c82:	repnz sub eax,0xf2a48a53
  412c88:	pop    edx
  412c89:	arpl   WORD PTR [ecx],bp
  412c8b:	jnp    0x412cdc
  412c8d:	pop    ss
  412c8e:	fcom   QWORD PTR [eax]
  412c90:	mov    esi,0x1d9bc852
  412c95:	(bad)  
  412c96:	inc    eax
  412c97:	push   0x741ee77e
  412c9c:	add    BYTE PTR [ecx],0x6d
  412c9f:	push   ecx
  412ca0:	add    al,bh
  412ca2:	retf   0x1518
  412ca5:	xchg   esp,eax
  412ca6:	cmp    esp,DWORD PTR [esp+ebp*1]
  412ca9:	(bad)  
  412cab:	js     0x412c7c
  412cad:	xor    eax,0x560bdda1
  412cb2:	mov    WORD PTR [ecx+0x5be3d4f6],fs
  412cb8:	add    edx,DWORD PTR [edx]
  412cba:	test   eax,0xf62428c4
  412cbf:	adc    DWORD PTR [esi-0x7a],edx
  412cc2:	test   DWORD PTR [ecx],0xf8b78ae9
  412cc8:	jmp    0x412c73
  412cca:	mov    ebx,0xe741a31f
  412ccf:	popf   
  412cd0:	pushf  
  412cd1:	adc    al,0x33
  412cd3:	xchg   edi,eax
  412cd4:	pop    ecx
  412cd5:	inc    ecx
  412cd6:	and    al,BYTE PTR [ecx]
  412cd8:	and    edi,DWORD PTR [esi+0x3399cdf6]
  412cde:	dec    eax
  412cdf:	and    al,0x71
  412ce1:	pop    edx
  412ce2:	jns    0x412d55
  412ce4:	ins    BYTE PTR es:[edi],dx
  412ce5:	and    ecx,0x69
  412ce8:	or     BYTE PTR [ecx],0xc9
  412ceb:	fdiv   DWORD PTR [ebp+0x42]
  412cee:	mov    esi,0xedf24ef9
  412cf3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412cf4:	sub    al,0x33
  412cf6:	dec    esp
  412cf7:	sub    DWORD PTR [ecx],esi
  412cf9:	lds    esp,FWORD PTR ds:[ebx]
  412cfc:	test   eax,0x74155d9d
  412d01:	mov    BYTE PTR [edx],al
  412d03:	es pop ds
  412d05:	fdiv   DWORD PTR [ebx]
  412d07:	stc    
  412d08:	pop    edx
  412d09:	fs sbb bh,bh
  412d0c:	sub    bh,BYTE PTR [ebx-0x3fb026f2]
  412d12:	dec    eax
  412d13:	push   ebx
  412d14:	sbb    BYTE PTR [esi],ch
  412d16:	add    al,bl
  412d18:	addr16 sbb al,0xe4
  412d1b:	iret   
  412d1c:	dec    esi
  412d1d:	xor    DWORD PTR [ebp+0x55396852],edx
  412d23:	add    DWORD PTR [ebp+edx*2+0x6aed99c7],eax
  412d2a:	sbb    ch,BYTE PTR [eax-0x22ae03af]
  412d30:	inc    ecx
  412d31:	lea    esp,[edi]
  412d33:	jmp    0x412cfa
  412d35:	jl     0x412d78
  412d37:	mov    bl,0x4d
  412d39:	and    ebx,esp
  412d3b:	outs   dx,BYTE PTR ds:[esi]
  412d3c:	js     0x412d3b
  412d3e:	ins    BYTE PTR es:[edi],dx
  412d3f:	test   BYTE PTR [edx],ah
  412d41:	inc    eax
  412d42:	mov    al,0xde
  412d44:	cmp    bh,BYTE PTR [esp+ecx*2]
  412d47:	sbb    cl,BYTE PTR [edx-0x7016bad7]
  412d4d:	cld    
  412d4e:	mov    bh,0xb7
  412d50:	or     eax,0x62262165
  412d55:	scas   eax,DWORD PTR es:[edi]
  412d56:	repz push ds
  412d58:	ss aad 0xef
  412d5b:	in     al,dx
  412d5c:	jae    0x412db6
  412d5e:	in     al,0xe3
  412d60:	mov    edi,0xc9ae4e16
  412d65:	mov    ch,BYTE PTR [edi-0x781692ff]
  412d6b:	lods   eax,DWORD PTR ds:[esi]
  412d6c:	jp     0x412cf2
  412d6e:	xchg   ebp,eax
  412d6f:	mov    BYTE PTR [edi],bl
  412d71:	add    DWORD PTR [esi],ebx
  412d73:	pop    ebp
  412d74:	adc    ah,BYTE PTR [edi+0x12]
  412d77:	mov    ch,0xf
  412d79:	sub    eax,0x5a62e535
  412d7e:	cwde   
  412d7f:	div    DWORD PTR [ebx-0x41]
  412d82:	in     al,dx
  412d83:	aam    0x50
  412d85:	sbb    al,0x53
  412d87:	mov    ds:0x26fd2908,al
  412d8c:	cmp    BYTE PTR fs:[edx-0x4e],0x9c
  412d91:	pop    edi
  412d92:	cmp    bh,BYTE PTR [edx-0x581b06bd]
  412d98:	das    
  412d99:	jae    0x412d67
  412d9b:	mov    DWORD PTR [edx-0x4d],edi
  412d9e:	pusha  
  412d9f:	pop    es
  412da0:	addr16 sbb ebp,ebx
  412da3:	adc    BYTE PTR [edx],0xbd
  412da6:	rol    BYTE PTR [edx+0x6b],cl
  412da9:	fwait
  412daa:	or     DWORD PTR [ebx],ebx
  412dac:	sub    bl,BYTE PTR gs:[esi]
  412daf:	fild   WORD PTR [esi]
  412db1:	stc    
  412db2:	ds push cs
  412db4:	sbb    al,0xcc
  412db6:	jo     0x412d9f
  412db8:	push   0xdf3f9d53
  412dbd:	mov    ebp,DWORD PTR [ecx+0x6d139681]
  412dc3:	mov    bl,0x33
  412dc5:	sub    eax,0x5dbbd400
  412dca:	mov    esi,0x2a37fb76
  412dcf:	xchg   esi,eax
  412dd0:	call   0x7d6714ae
  412dd5:	les    eax,FWORD PTR [eax+0xd]
  412dd8:	pop    ebp
  412dd9:	imul   edi,DWORD PTR [ebp+0x62],0xffffffc2
  412ddd:	pop    ecx
  412dde:	pop    esp
  412ddf:	mov    dh,0x10
  412de1:	out    0x2d,eax
  412de3:	mov    esp,0x729afceb
  412de8:	dec    esp
  412de9:	mov    edx,0x9c3ce565
  412dee:	int    0xcf
  412df0:	mov    DWORD PTR [esi-0x61],ebp
  412df3:	into   
  412df4:	add    DWORD PTR [ecx+0x2e],ecx
  412df7:	cwde   
  412df8:	jmp    0x412e65
  412dfa:	mov    ebp,0xf175a3cb
  412dff:	or     eax,0x521b2ce2
  412e04:	das    
  412e05:	xchg   DWORD PTR [ebx-0x193d920b],ebx
  412e0b:	int    0xac
  412e0d:	jge    0x412dc7
  412e0f:	ja     0x412de6
  412e11:	popf   
  412e12:	push   0x9b7ad6e
  412e17:	retf   
  412e18:	in     eax,dx
  412e19:	mov    cl,0x2
  412e1b:	outs   dx,BYTE PTR ds:[esi]
  412e1c:	sbb    bh,BYTE PTR [esi]
  412e1e:	dec    edi
  412e1f:	cmp    dl,BYTE PTR [esi+0x7a18563a]
  412e25:	jmp    0x6a0a:0xf9eb8354
  412e2c:	test   al,0x8d
  412e2e:	jmp    0x63fd:0x8263847d
  412e35:	popa   
  412e36:	jg     0x412dd5
  412e38:	(bad)  
  412e39:	ret    0x775a
  412e3c:	cmp    ah,BYTE PTR [ebp-0x7569189c]
  412e42:	pushf  
  412e43:	pop    ebx
  412e44:	cld    
  412e45:	add    dl,dh
  412e47:	push   ebp
  412e48:	mov    edx,0x8bdc3336
  412e4d:	adc    eax,0x4a53bead
  412e52:	pop    edx
  412e53:	cmp    edi,ecx
  412e55:	in     eax,0x49
  412e57:	jp     0x412def
  412e59:	adc    eax,0x30f1f539
  412e5e:	jp     0x412e3b
  412e60:	dec    ecx
  412e61:	rol    BYTE PTR ds:0x2f7f3c73,1
  412e67:	mov    BYTE PTR [eax+0x57],bh
  412e6a:	pop    ecx
  412e6b:	push   0x71
  412e6d:	pop    esi
  412e6e:	outs   dx,DWORD PTR ds:[esi]
  412e6f:	out    dx,eax
  412e70:	loope  0x412ebe
  412e72:	adc    dl,ch
  412e74:	das    
  412e75:	stos   BYTE PTR es:[edi],al
  412e76:	jp     0x412eb4
  412e78:	imul   edi,DWORD PTR ds:0x58e3ddd5,0x75790dfa
  412e82:	sbb    bh,al
  412e84:	adc    al,0xa7
  412e86:	(bad)  
  412e87:	lds    esi,FWORD PTR [ebx+0x61]
  412e8a:	xor    DWORD PTR [edi-0x32b0118b],edi
  412e90:	cmp    bl,BYTE PTR [ebp+0xda36cb9]
  412e96:	or     al,0xac
  412e98:	xchg   edi,eax
  412e99:	mov    DWORD PTR [ebx],0xa194fd0
  412e9f:	dec    ebx
  412ea0:	xor    DWORD PTR [edi],0x51
  412ea3:	cmp    eax,0x59a6baa2
  412ea8:	hlt    
  412ea9:	sub    al,0xb
  412eab:	or     BYTE PTR [edi],cl
  412ead:	inc    edi
  412eae:	call   0xf9a8aa5b
  412eb3:	inc    edx
  412eb4:	stos   DWORD PTR es:[edi],eax
  412eb5:	out    dx,al
  412eb6:	mov    ch,0x9b
  412eb8:	dec    ebx
  412eb9:	aad    0x3a
  412ebb:	retf   
  412ebc:	popa   
  412ebd:	dec    esi
  412ebe:	jae    0x412e8c
  412ec0:	mov    edx,0x56a702ec
  412ec5:	xchg   edx,eax
  412ec6:	push   esp
  412ec7:	leave  
  412ec8:	lods   al,BYTE PTR ds:[esi]
  412ec9:	pop    ebx
  412eca:	dec    edi
  412ecb:	mov    edi,DWORD PTR [eax]
  412ecd:	push   ebp
  412ecf:	mov    edx,DWORD PTR [esi-0x289ec8d1]
  412ed5:	pop    es
  412ed6:	fidivr WORD PTR [ecx-0x17]
  412ed9:	push   edi
  412eda:	cmc    
  412edb:	push   ss
  412edc:	jmp    0x4f66:0xe043ee59
  412ee3:	mov    ds:0x9b6670,al
  412ee8:	rol    DWORD PTR [ecx-0x68],cl
  412eeb:	daa    
  412eec:	jo     0x412eef
  412eee:	mov    eax,ds:0x8c05fe53
  412ef3:	add    al,0x40
  412ef5:	data16 jg 0x412f4f
  412ef8:	xchg   esp,eax
  412ef9:	out    dx,al
  412efa:	xchg   esp,eax
  412efb:	ins    DWORD PTR es:[edi],dx
  412efc:	dec    esi
  412efd:	sub    ch,dl
  412eff:	arpl   WORD PTR [edi-0x5285ec30],si
  412f05:	xchg   esp,esi
  412f07:	arpl   WORD PTR [ecx+0x4a1aa28],bp
  412f0d:	andps  xmm1,XMMWORD PTR [edi+0x1d]
  412f11:	cmps   DWORD PTR ss:[esi],DWORD PTR es:[edi]
  412f13:	shr    ebx,1
  412f15:	xchg   DWORD PTR [ecx],esi
  412f17:	rol    BYTE PTR [eax+eiz*8+0x14],0x8b
  412f1c:	inc    ebx
  412f1d:	push   0xffffffea
  412f1f:	and    BYTE PTR [ebp-0x30],0xac
  412f23:	inc    esi
  412f24:	ret    
  412f25:	cmp    ebx,DWORD PTR [esi+0x36]
  412f28:	lock add BYTE PTR [esi+0x5245795c],bh
  412f2f:	bound  ebp,QWORD PTR [edx]
  412f31:	cmc    
  412f32:	inc    esi
  412f33:	rcl    BYTE PTR [esi+0x5a9eb1f8],cl
  412f39:	jmp    0x412ef8
  412f3b:	jg     0x412f42
  412f3d:	pop    ss
  412f3e:	pop    esi
  412f3f:	(bad)  
  412f40:	adc    eax,0xd003feeb
  412f45:	(bad)  
  412f47:	sub    al,0x52
  412f49:	int    0x18
  412f4b:	popf   
  412f4c:	jmp    0xeb36:0x5612785c
  412f53:	dec    esi
  412f54:	and    BYTE PTR [esi],ch
  412f56:	hlt    
  412f57:	xchg   esp,eax
  412f58:	ret    
  412f59:	retf   0xae2a
  412f5c:	or     al,cl
  412f5e:	aad    0xee
  412f60:	in     eax,dx
  412f61:	xor    al,0x39
  412f63:	add    edi,DWORD PTR [ebp+0x7c]
  412f66:	pusha  
  412f67:	stc    
  412f68:	cld    
  412f69:	retf   
  412f6a:	mov    edx,0x54254179
  412f6f:	add    al,0x3
  412f71:	sub    DWORD PTR [edx-0x4ece499c],ecx
  412f77:	retf   
  412f78:	lea    ecx,[eax-0x4d]
  412f7b:	adc    al,0x1c
  412f7d:	cmp    BYTE PTR [ecx+0x27],cl
  412f80:	push   edx
  412f81:	jg     0x412f40
  412f83:	scas   al,BYTE PTR es:[edi]
  412f84:	aaa    
  412f85:	mov    ebx,0x7995ef35
  412f8a:	cld    
  412f8b:	xor    dl,BYTE PTR [eax+0x6ee35606]
  412f91:	in     al,0xf2
  412f93:	or     edx,DWORD PTR [eax+0xf4a5d0e]
  412f99:	sahf   
  412f9a:	les    eax,FWORD PTR [esi]
  412f9c:	sub    al,0xfe
  412f9e:	fsubr  st,st(5)
  412fa0:	jns    0x412fcf
  412fa2:	adc    al,0x25
  412fa4:	fild   QWORD PTR [edx+0x61ef5eb0]
  412faa:	sbb    eax,DWORD PTR [esi]
  412fac:	imul   DWORD PTR [ecx]
  412fae:	and    al,0x9a
  412fb0:	inc    ebx
  412fb1:	into   
  412fb2:	in     al,0xdc
  412fb4:	loopne 0x412fb0
  412fb6:	jg     0x412f5b
  412fb8:	sbb    BYTE PTR [ecx+0x3e],cl
  412fbb:	mov    ecx,0x1d905cc6
  412fc0:	(bad)  
  412fc1:	mov    esp,0x1bcd6e5d
  412fc6:	daa    
  412fc7:	push   edx
  412fc8:	scas   al,BYTE PTR es:[edi]
  412fc9:	(bad)  
  412fca:	dec    esp
  412fcb:	pop    edi
  412fcc:	fistp  WORD PTR [ecx]
  412fce:	mov    al,ds:0x2ce609bb
  412fd3:	sub    ah,cl
  412fd5:	push   ebx
  412fd6:	mov    edi,DWORD PTR [edx+0x35ef53f0]
  412fdc:	fwait
  412fdd:	gs aam 0x14
  412fe0:	scas   eax,DWORD PTR es:[edi]
  412fe1:	cmp    BYTE PTR [edx],dh
  412fe3:	mov    ebp,0xf9e1ff3f
  412fe8:	stos   DWORD PTR es:[edi],eax
  412fe9:	add    dh,BYTE PTR [ecx]
  412feb:	pusha  
  412fec:	mov    dl,0x1e
  412fee:	push   0x48
  412ff0:	dec    ecx
  412ff1:	pusha  
  412ff2:	pop    ebx
  412ff3:	and    al,0xbe
  412ff5:	xchg   ebx,eax
  412ff6:	hlt    
  412ff7:	sub    BYTE PTR [edi],dh
  412ff9:	aad    0x8d
  412ffb:	cwde   
  412ffc:	adc    edx,DWORD PTR [ebp+eiz*1-0x22]
  413000:	or     eax,0x4ccca733
  413005:	into   
  413006:	or     bh,cl
  413008:	(bad)  
  41300a:	xchg   BYTE PTR [edi],dl
  41300c:	mov    ebx,0x17e01d51
  413011:	test   al,0x91
  413013:	mov    WORD PTR [edx+0x47],gs
  413016:	sub    bl,dl
  413018:	imul   edx,DWORD PTR [edx+0x2020ee83],0x224bd749
  413022:	sub    bh,BYTE PTR [esi+eiz*8+0x8]
  413026:	or     DWORD PTR [eax+0xb1c68bb],esp
  41302c:	lods   al,BYTE PTR ds:[esi]
  41302d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41302e:	xor    ch,0xb4
  413031:	(bad)
  413034:	sbb    eax,0x95c993ca
  413039:	jle    0x41300e
  41303b:	jge    0x413096
  41303d:	stc    
  41303e:	push   0xffffffbf
  413040:	pop    es
  413041:	(bad)  
  413042:	cmp    eax,DWORD PTR ds:0xd9820ccf
  413048:	add    eax,0xe6456c2c
  41304d:	push   eax
  41304e:	jmp    0x413088
  413050:	stos   DWORD PTR es:[edi],eax
  413051:	call   0x90296112
  413056:	fbld   TBYTE PTR [ebx]
  413058:	add    eax,0xeee6ce6a
  41305d:	js     0x413007
  41305f:	sbb    eax,0x266110f3
  413064:	push   esp
  413065:	jbe    0x41309e
  413067:	in     eax,dx
  413068:	cwde   
  413069:	mov    cl,BYTE PTR [ebp-0x41]
  41306c:	mov    al,0x26
  41306e:	sub    al,0x5f
  413070:	(bad)  
  413071:	or     DWORD PTR [edx],esp
  413073:	lock ja 0x4130e2
  413076:	ret    
  413077:	mov    dl,0x5a
  413079:	das    
  41307a:	or     al,0x3
  41307c:	cs int3 
  41307e:	cmp    ecx,ebx
  413080:	add    edx,DWORD PTR [ecx]
  413082:	xchg   BYTE PTR [ebx+0xc],ah
  413085:	ror    BYTE PTR [eax+0xd],0x6d
  413089:	sbb    ch,BYTE PTR [edx-0x7d]
  41308c:	mov    cl,0x68
  41308e:	lods   eax,DWORD PTR ds:[esi]
  41308f:	call   0xe0d0:0xe8c9e0fc
  413096:	jp     0x41308c
  413098:	je     0x4130a8
  41309a:	mov    dl,0xd6
  41309c:	jg     0x4130a4
  41309e:	mov    ecx,0x1a461b69
  4130a3:	ret    0xd0b5
  4130a6:	out    0x1d,al
  4130a8:	add    ch,bl
  4130aa:	or     bl,dl
  4130ac:	mov    edx,0xa7a54079
  4130b1:	or     al,ah
  4130b3:	imul   esp,DWORD PTR [edi-0x44],0xfa9a9257
  4130ba:	jnp    0x4130ee
  4130bc:	into   
  4130bd:	inc    edx
  4130be:	push   ss
  4130bf:	ret    
  4130c0:	jmp    0xc3b5:0x5e15e9e5
  4130c7:	mov    edx,DWORD PTR [ebx]
  4130c9:	iret   
  4130ca:	xor    BYTE PTR [esi+0x23d99ea7],bh
  4130d0:	cmp    eax,0x720b16b6
  4130d5:	hlt    
  4130d6:	(bad)  
  4130d7:	mov    esi,0x308ec564
  4130dc:	ins    BYTE PTR es:[edi],dx
  4130dd:	fwait
  4130de:	call   0x402a:0x9fc36e6b
  4130e5:	or     BYTE PTR [eax],dl
  4130e7:	std    
  4130e8:	jge    0x41313f
  4130ea:	add    eax,esp
  4130ec:	inc    edi
  4130ed:	(bad)  
  4130ee:	mov    ch,0x24
  4130f0:	stc    
  4130f1:	int3   
  4130f2:	sub    BYTE PTR [edi+0x52],al
  4130f5:	rcl    BYTE PTR [ebx+edi*1+0x6a],1
  4130f9:	pop    ebp
  4130fa:	retf   0x9ac2
  4130fd:	aaa    
  4130fe:	xor    al,0xfa
  413100:	faddp  st(1),st
  413102:	and    DWORD PTR [eax],esi
  413104:	cmp    al,0x16
  413106:	mov    cl,0x4b
  413108:	psllw  mm3,QWORD PTR [edx-0x573653d]
  41310f:	(bad)  
  413110:	mov    eax,0x6fe4f364
  413115:	cmp    edx,esi
  413117:	mov    eax,0x3e294cbb
  41311c:	jp     0x413146
  41311e:	ins    BYTE PTR es:[edi],dx
  41311f:	imul   edx,DWORD PTR [eax-0x6923864e],0x88d865e5
  413129:	dec    eax
  41312a:	mov    DWORD PTR [ebp+0x7ce94a46],esi
  413130:	rcr    DWORD PTR [edi+0x5b],cl
  413133:	es in  al,0x9d
  413136:	pop    esi
  413137:	ds cld 
  413139:	inc    ebx
  41313a:	mov    eax,0x452b36a
  41313f:	push   ecx
  413140:	xor    al,0x43
  413142:	xchg   BYTE PTR [edi+esi*4+0x3],bh
  413146:	std    
  413147:	xor    edx,DWORD PTR [ebp-0x4d]
  41314a:	mov    esi,0x18648c5e
  41314f:	mov    dh,0xfb
  413151:	enter  0x763e,0x5
  413155:	pop    ds
  413156:	xor    BYTE PTR [edi+0x3078c28],0x64
  41315d:	pop    esi
  41315e:	xor    al,0x5b
  413160:	jecxz  0x41313e
  413162:	(bad)  
  413163:	and    al,0x86
  413165:	add    eax,0x4faacf8f
  41316a:	push   ss
  41316b:	not    dl
  41316d:	(bad)  
  41316f:	dec    esp
  413170:	sub    DWORD PTR [ecx+0x6d47c3b1],edx
  413176:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413177:	mov    eax,0x505fb6f7
  41317c:	daa    
  41317d:	cmovp  eax,DWORD PTR [ebp-0x789fa604]
  413184:	shl    eax,cl
  413186:	test   eax,0x4388df46
  41318b:	setge  BYTE PTR [edx+0xe]
  41318f:	out    dx,eax
  413190:	adc    BYTE PTR [esi-0x7d4d6834],cl
  413196:	das    
  413197:	sbb    DWORD PTR [eax],ebp
  413199:	imul   esi,DWORD PTR [eax-0x4327d5e1],0x50
  4131a0:	out    0x83,eax
  4131a2:	pop    ds
  4131a3:	pop    ds
  4131a4:	mov    ebx,0xef12af4a
  4131a9:	test   BYTE PTR [esi-0x32],bh
  4131ac:	(bad)  
  4131ad:	addr16 adc ecx,ebx
  4131b0:	adc    BYTE PTR [ebp-0x4d4a3d7f],al
  4131b6:	mov    ecx,0x55fbdf77
  4131bb:	and    BYTE PTR [esi+0x26c316b7],0x1
  4131c2:	nop
  4131c3:	xchg   DWORD PTR [ecx+ecx*2+0x1e557d4d],eax
  4131ca:	mov    edi,0xc785a6c2
  4131cf:	out    0x4e,al
  4131d1:	inc    esi
  4131d2:	adc    eax,esp
  4131d4:	out    0x22,al
  4131d6:	cmc    
  4131d7:	pop    ss
  4131d8:	mov    ah,0xc4
  4131da:	sub    BYTE PTR [ebp-0x35],bh
  4131dd:	dec    edi
  4131de:	inc    DWORD PTR [ebx+0x41]
  4131e1:	iret   
  4131e2:	mov    eax,ds:0xe0ada094
  4131e7:	xchg   DWORD PTR [esi-0x61073761],eax
  4131ed:	inc    edx
  4131ee:	imul   dl
  4131f0:	retf   0x7fde
  4131f3:	mov    eax,DWORD PTR [eax-0x675cf003]
  4131f9:	push   esi
  4131fa:	aas    
  4131fb:	cli    
  4131fc:	sub    edx,ecx
  4131fe:	sub    dh,bh
  413200:	mov    ebx,0xea91bf28
  413205:	pop    edi
  413206:	and    bh,cl
  413208:	push   eax
  413209:	shr    DWORD PTR [eax],1
  41320b:	out    0x1d,eax
  41320d:	jbe    0x41324d
  41320f:	push   0x8fba4ec2
  413214:	scas   al,BYTE PTR es:[edi]
  413215:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413216:	mov    ecx,0x471a824b
  41321b:	xor    bl,al
  41321d:	and    eax,0x89c0fa49
  413222:	mov    eax,0x603bb1f
  413227:	dec    edx
  413228:	adc    DWORD PTR [eax-0x52],eax
  41322b:	or     BYTE PTR [esi+0x64],bh
  41322e:	lea    ebx,[edi]
  413230:	mov    eax,0x4ee1b919
  413235:	xchg   DWORD PTR [ebp-0x39],edi
  413238:	jecxz  0x41329f
  41323a:	or     cl,BYTE PTR [ecx]
  41323c:	fstp   DWORD PTR [esi-0x56]
  41323f:	adc    eax,0x3ee318b7
  413244:	pop    esp
  413245:	xchg   ebp,eax
  413246:	lds    ebp,FWORD PTR [eax]
  413248:	cli    
  413249:	pushf  
  41324a:	sub    ebx,edx
  41324c:	add    DWORD PTR ds:0x5b66023d,0xffffff8c
  413253:	add    al,0x3a
  413255:	xor    ecx,DWORD PTR [esi-0x67f22228]
  41325b:	mov    ebx,0xd72d84a8
  413260:	dec    eax
  413261:	aad    0xe5
  413263:	push   ebp
  413264:	(bad)
  413269:	jno    0x413214
  41326b:	push   eax
  41326c:	sbb    eax,edi
  41326e:	jns    0x4132aa
  413270:	mov    ds:0xc6b904ca,eax
  413275:	mov    dl,0x97
  413277:	jno    0x41322e
  413279:	ret    0xf0a7
  41327c:	mov    esi,0x38c1efd2
  413281:	retf   
  413282:	push   ss
  413283:	retf   
  413284:	cmp    bl,BYTE PTR [esi]
  413286:	inc    edi
  413287:	jbe    0x41324d
  413289:	jle    0x413287
  41328b:	jl     0x4132cf
  41328d:	out    0x11,al
  41328f:	test   eax,0xf6dc3e36
  413294:	(bad)  
  413295:	xor    BYTE PTR [esi+0x7a070197],dl
  41329b:	sti    
  41329c:	or     al,0x25
  41329e:	dec    esi
  41329f:	shr    eax,cl
  4132a1:	call   0x27157f6f
  4132a6:	mov    ch,BYTE PTR [esi+0x6917eaaa]
  4132ac:	adc    ch,BYTE PTR [eax+0x51]
  4132af:	pop    esi
  4132b0:	iret   
  4132b1:	lods   eax,DWORD PTR ds:[esi]
  4132b2:	xor    BYTE PTR [ecx-0x112c477],ch
  4132b8:	or     al,0x6a
  4132ba:	jp     0x4132f1
  4132bc:	push   edx
  4132bd:	push   cs
  4132be:	mov    eax,0x12595227
  4132c3:	call   0xc51569d6
  4132c8:	mov    DWORD PTR [ebx],esp
  4132ca:	(bad)  
  4132cb:	out    dx,eax
  4132cc:	je     0x41328a
  4132ce:	push   ecx
  4132cf:	jmp    0x413325
  4132d1:	(bad)  
  4132d3:	mov    dh,0xed
  4132d5:	mov    esp,0x52338d12
  4132da:	sub    al,0xee
  4132dc:	cs int 0xa2
  4132df:	pop    ds
  4132e0:	adc    esp,DWORD PTR [esi-0x56ed865d]
  4132e6:	retf   
  4132e7:	int    0xb7
  4132e9:	push   ecx
  4132ea:	int    0xec
  4132ec:	iret   
  4132ed:	scas   al,BYTE PTR es:[edi]
  4132ee:	into   
  4132ef:	aad    0xee
  4132f1:	out    0x83,eax
  4132f3:	mov    edi,0x8c14e87a
  4132f8:	mov    BYTE PTR [ebx-0xa8cb80f],ch
  4132fe:	push   cs
  4132ff:	adc    eax,0x10459b4f
  413304:	test   ah,bh
  413306:	out    0xc,eax
  413308:	push   0x1a68aca6
  41330d:	in     eax,0x7d
  41330f:	(bad)  
  413310:	out    0x7d,al
  413312:	pop    esp
  413313:	cmp    ebp,DWORD PTR [edx+0x554c61d1]
  413319:	xchg   ebx,eax
  41331a:	adc    al,0x35
  41331c:	dec    esp
  41331d:	inc    ecx
  41331e:	jg     0x4132c5
  413320:	adc    bl,al
  413322:	neg    BYTE PTR [ebx+0x64]
  413325:	mov    edx,0xced07a2f
  41332a:	dec    esp
  41332b:	pop    es
  41332c:	sbb    BYTE PTR [eax],0xa3
  41332f:	pushf  
  413330:	or     eax,ecx
  413332:	dec    ecx
  413333:	xchg   ebp,eax
  413334:	pop    es
  413335:	lods   al,BYTE PTR ds:[esi]
  413336:	and    cl,dh
  413338:	xor    DWORD PTR [edx-0x72dde442],eax
  41333e:	mov    ds:0x308abcc6,al
  413343:	adc    DWORD PTR [eax+0x46750cd4],0x2681c233
  41334d:	mov    dh,0x22
  41334f:	fwait
  413350:	gs adc ebx,ebp
  413353:	cmp    ebp,DWORD PTR ds:0xc1661b7b
  413359:	and    al,0x28
  41335b:	push   0xe3d00ef7
  413360:	cld    
  413361:	pop    eax
  413362:	xchg   edx,eax
  413363:	(bad)  
  413364:	(bad)
  413367:	push   ebx
  413368:	sti    
  413369:	bound  edi,QWORD PTR [edi+0x7]
  41336c:	or     DWORD PTR [ecx-0x23],eax
  41336f:	adc    al,0xeb
  413371:	ret    0xd085
  413374:	repnz aaa 
  413376:	test   eax,0x7b024d5b
  41337b:	mov    DWORD PTR [ebp-0x8],0x379c779
  413382:	in     al,dx
  413383:	js     0x4133af
  413385:	adc    bl,BYTE PTR ds:0x18f65dca
  41338b:	inc    ecx
  41338c:	push   ss
  41338d:	push   es
  41338e:	or     BYTE PTR [ecx+edx*4],ah
  413391:	add    ebp,DWORD PTR [edi-0x649b4b2b]
  413397:	dec    edi
  413398:	sbb    cl,dh
  41339a:	pop    edx
  41339b:	mov    BYTE PTR [edx],dl
  41339d:	pusha  
  41339e:	aam    0xdb
  4133a0:	xor    esp,DWORD PTR [eax-0x1f]
  4133a3:	shl    DWORD PTR [edx+edx*1+0x34],0x89
  4133a8:	jle    0x4133f0
  4133aa:	outs   dx,DWORD PTR ds:[esi]
  4133ab:	or     DWORD PTR [ebp+0x67],esp
  4133ae:	add    al,cl
  4133b0:	or     DWORD PTR [edx],ebx
  4133b2:	adc    BYTE PTR [eax+0x3b48aa6a],ch
  4133b8:	test   ch,0xe3
  4133bb:	mov    al,ds:0x802a0631
  4133c0:	not    DWORD PTR [ecx+0x3a0198d2]
  4133c6:	adc    BYTE PTR [esi-0x31],ch
  4133c9:	sub    al,0xe
  4133cb:	cmp    eax,esp
  4133cd:	sti    
  4133ce:	push   edi
  4133cf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4133d0:	jne    0x413376
  4133d2:	mov    dh,0xf8
  4133d4:	inc    edx
  4133d5:	push   ebx
  4133d6:	lds    esp,FWORD PTR [ebp+esi*1-0x52]
  4133da:	sbb    BYTE PTR [ecx],0x9c
  4133dd:	push   ecx
  4133de:	leave  
  4133df:	sti    
  4133e0:	xlat   BYTE PTR ds:[ebx]
  4133e1:	mov    bl,0x47
  4133e3:	push   0x1d
  4133e5:	test   ebx,edi
  4133e7:	(bad)  
  4133e8:	retf   
  4133e9:	jno    0x41341a
  4133eb:	add    dh,BYTE PTR [ebx+0x4c]
  4133ee:	pushf  
  4133ef:	jg     0x413455
  4133f1:	push   esi
  4133f2:	cmp    DWORD PTR [ebx-0x623144c0],ecx
  4133f8:	popa   
  4133f9:	sbb    al,0xfe
  4133fb:	ret    
  4133fc:	pop    ds
  4133fd:	fdiv   st,st(7)
  4133ff:	fst    DWORD PTR [edx]
  413401:	mov    eax,ds:0xba0d16b
  413406:	cmp    DWORD PTR [ecx],ecx
  413408:	push   esi
  413409:	jno    0x413407
  41340b:	xchg   edi,eax
  41340c:	inc    eax
  41340d:	das    
  41340e:	sbb    eax,DWORD PTR [esp]
  413411:	js     0x41345f
  413413:	fs mov esi,0xe5712b2d
  413419:	loop   0x413480
  41341b:	test   al,0xf
  41341d:	mov    DWORD PTR [edx],ebp
  41341f:	popf   
  413420:	mov    bl,0x11
  413422:	in     eax,dx
  413423:	inc    edx
  413424:	xchg   edx,eax
  413425:	into   
  413426:	sbb    al,0xbe
  413428:	sti    
  413429:	sub    esp,ecx
  41342b:	jl     0x413432
  41342d:	in     al,0x64
  41342f:	fwait
  413430:	retf   
  413431:	push   0xfffffff3
  413433:	in     eax,dx
  413434:	xor    eax,0x9a75fc7e
  413439:	adc    BYTE PTR [edi-0x646d0829],ah
  41343f:	xchg   ebp,eax
  413440:	test   eax,0x7d9ef32f
  413445:	adc    al,0x86
  413447:	aam    0xa5
  413449:	stos   BYTE PTR es:[edi],al
  41344a:	lods   eax,DWORD PTR ds:[esi]
  41344b:	retf   
  41344c:	xor    eax,0xe1c062
  413451:	adc    eax,ecx
  413453:	add    ah,ah
  413455:	cmp    esi,DWORD PTR [edx-0x6cadec3a]
  41345b:	jnp    0x41346d
  41345d:	retf   
  41345e:	pop    ebx
  41345f:	mov    dl,BYTE PTR [edi+0x429c2e54]
  413465:	or     DWORD PTR [edx+ecx*1-0x353a14c9],edi
  41346c:	fist   DWORD PTR [edx-0x16017295]
  413472:	clc    
  413473:	push   0xffffffec
  413475:	fwait
  413476:	push   edx
  413477:	mov    ah,0xe6
  413479:	loop   0x41345b
  41347b:	sub    esi,DWORD PTR [eax]
  41347d:	pusha  
  41347e:	add    DWORD PTR [esi+0x30],ecx
  413481:	mov    al,ds:0xb04c026e
  413486:	out    dx,al
  413487:	imul   ecx,ebx,0xffffffaf
  41348a:	dec    edx
  41348b:	sbb    esi,DWORD PTR [esi-0x64]
  41348e:	jle    0x4134a3
  413490:	(bad)  
  413491:	mov    al,0x27
  413493:	inc    ebp
  413494:	das    
  413495:	xchg   edi,eax
  413496:	in     eax,dx
  413497:	fwait
  413498:	ja     0x4134dd
  41349a:	jl     0x4134db
  41349c:	ja     0x413483
  41349e:	fwait
  41349f:	aad    0x9f
  4134a1:	sub    DWORD PTR [edi+0x2a],ebx
  4134a4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4134a5:	mov    ch,0x8b
  4134a7:	shl    ah,1
  4134a9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4134aa:	ins    BYTE PTR es:[edi],dx
  4134ab:	mov    ebp,DWORD PTR [ebx-0x3e]
  4134ae:	outs   dx,BYTE PTR ds:[esi]
  4134af:	jp     0x413438
  4134b1:	jmp    0x8f1e:0xd226f3d3
  4134b8:	or     al,al
  4134ba:	(bad)  
  4134bb:	dec    edx
  4134bc:	cli    
  4134bd:	jecxz  0x413520
  4134bf:	xchg   ecx,eax
  4134c0:	add    al,bl
  4134c2:	scas   al,BYTE PTR es:[edi]
  4134c3:	fbld   TBYTE PTR [esi+0x57]
  4134c6:	pusha  
  4134c7:	fwait
  4134c8:	out    0x3e,al
  4134ca:	fsub   QWORD PTR [ebx+eiz*4]
  4134cd:	dec    ebx
  4134ce:	xchg   edi,eax
  4134cf:	mov    al,0x33
  4134d1:	inc    ebx
  4134d2:	adc    DWORD PTR [ebx],edx
  4134d4:	mov    esi,ebx
  4134d6:	sbb    BYTE PTR [esi],bh
  4134d8:	inc    ebx
  4134d9:	jae    0x4134d7
  4134db:	adc    eax,edi
  4134dd:	adc    ebx,esp
  4134df:	and    cl,BYTE PTR [ebx]
  4134e1:	ins    BYTE PTR es:[edi],dx
  4134e2:	ins    DWORD PTR es:[edi],dx
  4134e3:	pop    esp
  4134e4:	xchg   edx,eax
  4134e5:	pop    ds
  4134e6:	adc    BYTE PTR [ecx],ah
  4134e8:	push   esi
  4134e9:	pop    ebx
  4134ea:	int3   
  4134eb:	mov    edi,0x9450289f
  4134f0:	adc    ecx,DWORD PTR [ebx+ebp*1]
  4134f3:	std    
  4134f4:	and    BYTE PTR ds:0xcdea8c0,bl
  4134fa:	add    ecx,ecx
  4134fc:	(bad)
  4134ff:	adc    bl,BYTE PTR [esi-0x6727469c]
  413505:	xchg   esi,eax
  413506:	fldcw  WORD PTR [edx+0x5a]
  413509:	jnp    0x4134ed
  41350b:	lods   al,BYTE PTR ds:[esi]
  41350c:	inc    ebx
  41350d:	arpl   WORD PTR [edi+0x73d022ec],ax
  413513:	sti    
  413514:	test   eax,0x9a8569b
  413519:	lods   eax,DWORD PTR ds:[esi]
  41351a:	push   0xb
  41351c:	fdivrp st(5),st
  41351e:	out    dx,eax
  41351f:	pop    ebx
  413520:	ror    DWORD PTR [edi+0x2d],cl
  413523:	test   BYTE PTR [ecx],0xf1
  413526:	das    
  413527:	cmp    BYTE PTR [ebx+0x3ef11f5b],al
  41352d:	fldcw  WORD PTR gs:[edi-0x76ef28f8]
  413534:	dec    esp
  413535:	fnsave [ecx-0x23ed433c]
  41353b:	dec    edx
  41353c:	jge    0x4134ce
  41353e:	out    dx,al
  41353f:	test   al,0x4
  413541:	mov    ecx,DWORD PTR [eax]
  413543:	pop    edi
  413544:	into   
  413545:	shl    ebp,1
  413547:	retf   
  413548:	jmp    0x5ade:0xcbe691e9
  41354f:	bound  eax,QWORD PTR [edx+0x6d]
  413552:	add    al,BYTE PTR [ecx+0xd06e4b8]
  413558:	rcl    BYTE PTR [edi+0xf],1
  41355b:	mov    al,ds:0xfb4e7b6f
  413560:	sar    DWORD PTR [esp+ebx*4+0x2ac60420],cl
  413567:	jp     0x4135a6
  413569:	enter  0x85f6,0x36
  41356d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41356e:	aam    0x85
  413570:	ins    BYTE PTR es:[edi],dx
  413571:	adc    edi,ecx
  413573:	dec    eax
  413574:	ja     0x4135dc
  413576:	add    ah,dh
  413578:	stos   DWORD PTR es:[edi],eax
  413579:	pop    edi
  41357a:	out    0x4a,eax
  41357c:	scas   eax,DWORD PTR es:[edi]
  41357d:	imul   ebx,DWORD PTR [edi+0x5bdeb946],0x4a
  413584:	daa    
  413585:	and    DWORD PTR [eax-0x30],ebx
  413588:	(bad)  
  41358a:	sub    al,0x5b
  41358c:	mov    esp,0xdb398054
  413591:	fsubr  DWORD PTR [ebx-0x3d]
  413594:	fidivr WORD PTR [ebp+0x69870d13]
  41359a:	xchg   esi,eax
  41359b:	sbb    DWORD PTR [ecx+0x4d7de304],ecx
  4135a1:	cwde   
  4135a2:	cmc    
  4135a3:	sti    
  4135a4:	mov    ecx,0xe1b30f27
  4135a9:	aas    
  4135aa:	pop    ds
  4135ab:	add    bh,BYTE PTR [edx+ecx*4]
  4135ae:	mov    esi,0x6ae5ad2e
  4135b3:	in     al,dx
  4135b4:	ja     0x41357b
  4135b6:	dec    edx
  4135b7:	jnp    0x41357b
  4135b9:	xor    esp,DWORD PTR [edx]
  4135bb:	mov    edi,ecx
  4135bd:	sbb    cl,BYTE PTR [ecx]
  4135bf:	aaa    
  4135c0:	fcomip st,st(5)
  4135c2:	jb     0x413623
  4135c4:	jecxz  0x4135d1
  4135c6:	xor    DWORD PTR [eax+0x4],esi
  4135c9:	pop    DWORD PTR [edx-0x55749775]
  4135cf:	nop
  4135d0:	lds    ebp,FWORD PTR [esi-0x61]
  4135d3:	jb     0x4135ef
  4135d5:	xor    eax,0x7c67c295
  4135da:	xchg   ebp,edx
  4135dc:	mov    ch,0x22
  4135de:	leave  
  4135df:	pop    ecx
  4135e0:	and    DWORD PTR [ebp-0x777546ca],esi
  4135e6:	cdq    
  4135e7:	mov    ds:0xba6c7a7c,al
  4135ec:	xchg   ebp,eax
  4135ed:	xchg   ecx,eax
  4135ee:	aam    0x9d
  4135f0:	dec    esi
  4135f1:	in     eax,dx
  4135f2:	cmp    BYTE PTR [ebp+0x5b],al
  4135f5:	dec    esp
  4135f6:	sbb    BYTE PTR [ecx+eiz*8],ch
  4135f9:	mov    al,ds:0x16a9cf51
  4135fe:	imul   edi,DWORD PTR [esp+ebp*2-0x1c],0x7d1f7534
  413606:	aad    0x98
  413608:	sbb    al,0xfa
  41360a:	iret   
  41360b:	test   ecx,0x25a3c0f5
  413611:	lock xchg ecx,eax
  413613:	(bad)  
  413614:	sbb    al,0x2b
  413616:	shr    DWORD PTR [edx+0x6e],0x93
  41361a:	adc    dl,bh
  41361c:	mov    DWORD PTR [ebx-0x3bc6ad5e],0x83ae8daa
  413626:	add    al,0x9b
  413628:	es pop ds
  41362a:	leave  
  41362b:	or     al,0x21
  41362d:	pop    ebp
  41362e:	ret    0x585d
  413631:	cmp    BYTE PTR [esi-0x12],ch
  413634:	push   es
  413635:	mov    edi,0x9d58aa9e
  41363a:	dec    esi
  41363b:	push   ds
  41363c:	mov    es,WORD PTR [edi-0x35]
  41363f:	pop    esi
  413640:	inc    esp
  413641:	or     edx,edx
  413643:	es shl ch,cl
  413646:	and    eax,0x309411df
  41364b:	mov    edx,0x5f481ed8
  413650:	pushf  
  413651:	repnz sub eax,0x622eefd0
  413657:	sub    al,0xef
  413659:	mov    ecx,0x28abc3a2
  41365e:	daa    
  41365f:	jnp    0x413616
  413661:	arpl   WORD PTR [ecx+ebp*1],cx
  413664:	retf   
  413665:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413666:	mov    bh,0xdb
  413668:	mov    BYTE PTR [ecx],ah
  41366a:	mov    al,ds:0xa5a10c79
  41366f:	pop    esi
  413670:	adc    ebp,DWORD PTR [ebx-0x28]
  413673:	mov    dl,0x75
  413675:	xor    dh,0xcb
  413678:	out    0xf6,al
  41367a:	jne    0x41360c
  41367c:	sub    dl,cl
  41367e:	lea    edi,[esi+0x67]
  413681:	pop    esi
  413682:	lock cdq 
  413684:	test   BYTE PTR [esi+ecx*4-0x19],ch
  413688:	nop
  413689:	mov    bl,0xc4
  41368b:	and    DWORD PTR [ebx+0x13aadd66],esp
  413691:	inc    edx
  413692:	test   eax,0x99b27439
  413697:	hlt    
  413698:	rol    DWORD PTR [edi+0x46],0x2d
  41369c:	int    0x9
  41369e:	mov    edx,0x69942de4
  4136a3:	in     al,dx
  4136a4:	pop    es
  4136a5:	imul   ebx,DWORD PTR [eax+0x23f5a0f3],0x4c
  4136ac:	add    DWORD PTR ds:0xd3231fed,eax
  4136b2:	xor    eax,0x8d9e10e0
  4136b7:	cmp    al,0xaf
  4136b9:	sub    al,0x9e
  4136bb:	dec    esi
  4136bc:	sbb    eax,0xa6835cd1
  4136c1:	div    dh
  4136c3:	mov    eax,0x2ed40fe4
  4136c8:	fdivr  DWORD PTR [ecx]
  4136ca:	(bad)
  4136cd:	push   eax
  4136ce:	call   0xc43e:0xdb0c3e8
  4136d5:	loop   0x4136a1
  4136d7:	pushf  
  4136d8:	out    0xcf,al
  4136da:	pop    ss
  4136db:	push   eax
  4136dc:	imul   edi,DWORD PTR [edi],0xffffffe3
  4136df:	mov    WORD PTR [edi],gs
  4136e1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4136e2:	cmp    al,0xc6
  4136e4:	addr16 pop esi
  4136e6:	xor    bh,BYTE PTR [esi+0x70]
  4136e9:	mov    edx,0x474699a
  4136ee:	iret   
  4136ef:	mov    DWORD PTR [ecx+ecx*2-0x66],ecx
  4136f3:	mov    ah,0x7a
  4136f5:	in     al,dx
  4136f6:	sub    eax,0xe5e8d156
  4136fb:	dec    ebx
  4136fc:	xor    edx,ecx
  4136fe:	into   
  4136ff:	pop    ss
  413700:	jge    0x41371b
  413702:	or     eax,0xc61b5681
  413707:	push   eax
  413708:	mov    ch,0xd7
  41370a:	imul   edi,edx,0x142be2c1
  413710:	(bad)  
  413711:	popf   
  413712:	xor    BYTE PTR [eax],0x71
  413715:	cmp    edx,DWORD PTR [eax-0x3c]
  413718:	xor    BYTE PTR [eax+0x5ee59290],cl
  41371e:	xor    BYTE PTR [edx-0x63],dh
  413721:	mov    bh,0x9d
  413723:	adc    eax,0x7903db0f
  413728:	adc    al,0xfe
  41372a:	add    eax,0xbe261740
  41372f:	pop    edx
  413730:	scas   eax,DWORD PTR es:[edi]
  413731:	xor    BYTE PTR [esi+0x1c07ccaa],0xa1
  413738:	lds    ecx,FWORD PTR ds:0xad6d663b
  41373e:	sub    al,0xf8
  413740:	mov    eax,0x44abab09
  413745:	jge    0x413728
  413747:	mov    ah,0xad
  413749:	stos   DWORD PTR es:[edi],eax
  41374a:	push   0xc616b3f2
  41374f:	ins    BYTE PTR es:[edi],dx
  413750:	retf   0x1145
  413753:	and    BYTE PTR [edx+0x33f791b7],dh
  413759:	fnstcw WORD PTR [edx-0x26]
  41375c:	imul   esi,DWORD PTR [ecx+0x5c],0x7a
  413760:	inc    esp
  413761:	test   DWORD PTR [ebx+0x63],ebx
  413764:	lea    ecx,[ecx+0x7be6dcf5]
  41376a:	outs   dx,BYTE PTR ds:[esi]
  41376b:	xchg   ebp,eax
  41376c:	loope  0x413750
  41376e:	mov    cl,0x50
  413770:	cli    
  413771:	lods   eax,DWORD PTR ds:[esi]
  413772:	fwait
  413773:	mov    esi,0x23726953
  413778:	aam    0xc0
  41377a:	add    al,0xaa
  41377c:	pusha  
  41377d:	scas   eax,DWORD PTR es:[edi]
  41377e:	in     eax,0xb7
  413780:	ret    0x9374
  413783:	mov    eax,0x24d42492
  413788:	or     DWORD PTR [ecx-0xb],esp
  41378b:	adc    al,0x64
  41378d:	cld    
  41378e:	lahf   
  41378f:	out    0xa5,al
  413791:	jnp    0x4137ce
  413793:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413794:	pop    ss
  413795:	pop    ebp
  413796:	push   0x8ce8df18
  41379b:	push   cs
  41379c:	mov    WORD PTR [esi-0x2fa5182f],ds
  4137a2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4137a3:	sbb    DWORD PTR [ecx+0x6670d09d],ebp
  4137a9:	retf   
  4137aa:	mov    ecx,0x42377508
  4137af:	jo     0x413769
  4137b1:	scas   al,BYTE PTR es:[edi]
  4137b2:	dec    esi
  4137b3:	seta   BYTE PTR cs:[ebp-0x3af537c9]
  4137bb:	popa   
  4137bc:	mov    al,0x21
  4137be:	ror    BYTE PTR [ebp+0x40],1
  4137c1:	adc    esp,edx
  4137c3:	xor    al,0xf2
  4137c5:	mov    eax,ds:0x48e59565
  4137ca:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4137cb:	stos   BYTE PTR es:[edi],al
  4137cc:	aas    
  4137cd:	popf   
  4137ce:	(bad)  
  4137cf:	idiv   BYTE PTR [ecx-0x1]
  4137d2:	push   ss
  4137d3:	inc    ecx
  4137d4:	inc    ecx
  4137d5:	and    eax,0x9c64aabb
  4137da:	add    DWORD PTR [esi],esp
  4137dc:	adc    BYTE PTR [ebp-0x1b85808f],bl
  4137e2:	repz test ebx,0xe1aab3cf
  4137e9:	mov    DWORD PTR [edi+0x910e9b1],esp
  4137ef:	pop    esp
  4137f0:	mov    eax,0xd552ea95
  4137f5:	push   ebx
  4137f6:	aam    0x5c
  4137f8:	jl     0x4137fd
  4137fa:	add    DWORD PTR [ebx+0x59d94237],eax
  413800:	mov    ch,0xf5
  413802:	sub    BYTE PTR [eax],bh
  413804:	hlt    
  413805:	sub    al,0xe7
  413807:	out    0x9d,eax
  413809:	jmp    0xb377:0x3bbab770
  413810:	jne    0x413849
  413812:	inc    esi
  413813:	sahf   
  413814:	xchg   ebp,eax
  413815:	lahf   
  413816:	aaa    
  413817:	push   esp
  413818:	mov    cl,0xcb
  41381a:	(bad)  
  41381b:	xchg   edx,eax
  41381c:	or     eax,0xc18f8695
  413821:	aad    0x7c
  413823:	cmp    DWORD PTR [edi+0x36134eb0],ebp
  413829:	xor    BYTE PTR [eax],ah
  41382b:	mov    ebx,ebp
  41382d:	jbe    0x41389a
  41382f:	dec    ecx
  413830:	test   ch,bh
  413832:	in     al,dx
  413833:	dec    ebp
  413834:	cmp    dh,BYTE PTR [esi]
  413836:	pusha  
  413837:	(bad)  
  413838:	xchg   ebx,eax
  413839:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41383a:	cwde   
  41383b:	test   BYTE PTR [edi+0x5aa514fd],al
  413841:	cdq    
  413842:	and    eax,0x9431d732
  413847:	add    eax,esi
  413849:	gs scas eax,DWORD PTR es:[edi]
  41384b:	scas   al,BYTE PTR es:[edi]
  41384c:	out    0x89,eax
  41384e:	pop    ax
  413850:	inc    edi
  413851:	mov    cl,0xbf
  413853:	cmc    
  413854:	xchg   ebp,eax
  413855:	adc    al,0x32
  413857:	add    BYTE PTR [ecx],ah
  413859:	jae    0x413858
  41385b:	loope  0x413823
  41385d:	(bad)  
  41385e:	call   0xa790:0xbe28f63d
  413865:	sbb    BYTE PTR [edx+0x4c],0x44
  413869:	dec    ecx
  41386a:	fimul  DWORD PTR [ecx]
  41386c:	mov    eax,ds:0x50323870
  413871:	sbb    eax,0xbaa6d749
  413876:	push   ss
  413877:	lods   al,BYTE PTR ds:[esi]
  413878:	mov    eax,0x2812b537
  41387d:	pop    esi
  41387e:	outs   dx,DWORD PTR ds:[esi]
  41387f:	or     DWORD PTR [ebx-0x28d40bf8],ebx
  413885:	lea    eax,[edx]
  413887:	pop    esi
  413888:	dec    DWORD PTR [eax]
  41388a:	inc    edx
  41388b:	sti    
  41388c:	(bad)  
  41388e:	std    
  41388f:	ret    0x98ee
  413892:	xchg   DWORD PTR [edx+0x482ecd2],esi
  413898:	push   edx
  413899:	adc    esi,ecx
  41389b:	xchg   ecx,eax
  41389c:	loope  0x4138df
  41389e:	pop    esp
  41389f:	xchg   ebp,eax
  4138a0:	(bad)  
  4138a1:	stos   DWORD PTR es:[edi],eax
  4138a2:	mov    DWORD PTR [eax-0x162104a0],edx
  4138a8:	push   ss
  4138a9:	les    ecx,FWORD PTR [ebp+0x381bc899]
  4138af:	mov    eax,0xc6414b76
  4138b4:	mov    bh,0x18
  4138b6:	xchg   esi,eax
  4138b7:	daa    
  4138b8:	adc    ah,BYTE PTR [eax+esi*2+0x11]
  4138bc:	shr    DWORD PTR [ebx-0x3e8bdd4a],cl
  4138c2:	xchg   edx,eax
  4138c3:	cdq    
  4138c4:	in     eax,dx
  4138c5:	xorps  xmm7,XMMWORD PTR [ebp-0x28]
  4138c9:	mov    edi,0x19356152
  4138ce:	pop    esp
  4138cf:	test   DWORD PTR [esi],eax
  4138d1:	rcr    edx,0x48
  4138d4:	jmp    0x9e90b5a0
  4138d9:	(bad)  
  4138da:	arpl   WORD PTR [ebx],bp
  4138dc:	mov    bh,0xcf
  4138de:	jmp    DWORD PTR [edi]
  4138e0:	push   DWORD PTR [eax-0x31]
  4138e3:	push   cs
  4138e4:	fs fs push ebx
  4138e7:	jae    0x413921
  4138e9:	(bad)  [ecx+0x7c]
  4138ec:	xor    al,0x6b
  4138ee:	adc    BYTE PTR [eax-0x19dc4246],dh
  4138f4:	mov    ?,WORD PTR [edi-0x6cbeb1af]
  4138fa:	cli    
  4138fb:	outs   dx,BYTE PTR ds:[esi]
  4138fc:	fwait
  4138fd:	sti    
  4138fe:	rcr    DWORD PTR [eax+0x597ec013],0xda
  413905:	enter  0x9edc,0x87
  413909:	imul   edx,DWORD PTR [edx+ebp*2],0x2f4675c1
  413910:	sub    ebp,DWORD PTR [ebp+0x31]
  413913:	fstp   TBYTE PTR [ecx+edx*1]
  413916:	mov    edx,0x3ff641c4
  41391b:	sti    
  41391c:	lock push es
  41391e:	test   bh,ah
  413920:	push   esi
  413921:	push   edi
  413922:	rcl    edx,cl
  413924:	or     bh,BYTE PTR [ecx]
  413926:	xchg   edx,eax
  413927:	dec    ebx
  413928:	stos   DWORD PTR es:[edi],eax
  413929:	mov    esp,0xda07a778
  41392e:	(bad)  
  41392f:	jle    0x413970
  413931:	lods   eax,DWORD PTR ds:[esi]
  413932:	js     0x413991
  413934:	aam    0xdf
  413936:	fadd   DWORD PTR [ebx-0x3]
  413939:	test   al,0x8a
  41393b:	cmp    edi,DWORD PTR ss:[ebp-0x7c]
  41393f:	stos   BYTE PTR es:[edi],al
  413940:	lods   al,BYTE PTR ds:[esi]
  413941:	push   edi
  413942:	mov    eax,ds:0x8ba91958
  413947:	test   eax,0xc5890c1f
  41394c:	ss cdq 
  41394e:	test   DWORD PTR [ebp-0x6e],ebx
  413951:	xchg   ebp,eax
  413952:	out    0x34,eax
  413954:	mov    DWORD PTR [edi-0x7509db8e],esp
  41395a:	aad    0xbd
  41395c:	clc    
  41395d:	mov    al,bl
  41395f:	arpl   WORD PTR [ecx],bp
  413961:	xchg   ebp,eax
  413962:	inc    edi
  413963:	xchg   ebp,eax
  413964:	ins    BYTE PTR es:[edi],dx
  413965:	lea    esi,[ebx-0x62f49693]
  41396b:	inc    eax
  41396c:	sbb    ah,BYTE PTR [ebp+0x48]
  41396f:	out    0x90,al
  413971:	add    eax,0xbe6926e3
  413976:	lods   al,BYTE PTR ds:[esi]
  413977:	sub    ah,BYTE PTR [edi+ebp*4-0x5e959155]
  41397e:	jbe    0x4139b8
  413980:	pop    esp
  413981:	cmc    
  413982:	lahf   
  413983:	add    BYTE PTR [esp+eiz*8-0x37],ch
  413987:	push   eax
  413988:	and    dl,BYTE PTR [ecx-0x5d]
  41398b:	pop    esp
  41398c:	sub    DWORD PTR [edi],0x19a8a33d
  413992:	add    al,BYTE PTR [ecx-0xcf4a63f]
  413998:	inc    esi
  413999:	fbld   TBYTE PTR [ecx-0x17]
  41399c:	mov    ds,WORD PTR [ebx]
  41399e:	in     al,0xe3
  4139a0:	test   edi,ecx
  4139a2:	sbb    BYTE PTR ds:0x1d2344aa,dl
  4139a8:	pop    ebp
  4139a9:	lods   al,BYTE PTR ds:[esi]
  4139aa:	push   cs
  4139ab:	cmp    edi,0xffffffcc
  4139ae:	retf   0x4841
  4139b1:	sub    esp,eax
  4139b3:	cmp    ebp,DWORD PTR [ebp-0x50]
  4139b6:	xchg   ecx,eax
  4139b7:	or     DWORD PTR ds:0x5c286b13,ebp
  4139bd:	mov    ch,0x16
  4139bf:	nop
  4139c0:	dec    edx
  4139c1:	lods   eax,DWORD PTR ds:[esi]
  4139c2:	imul   ecx,eax,0xc390180f
  4139c8:	adc    al,0x2a
  4139ca:	stos   BYTE PTR es:[edi],al
  4139cb:	jge    0x4139b4
  4139cd:	or     eax,0x8d4647f4
  4139d2:	or     al,0xbc
  4139d4:	or     DWORD PTR [ecx+0x228441b8],edi
  4139da:	hlt    
  4139db:	das    
  4139dc:	sti    
  4139dd:	fldenv [ecx]
  4139df:	sti    
  4139e0:	lea    edx,[esi+0x593e56f9]
  4139e6:	shl    dl,1
  4139e8:	xor    BYTE PTR [esp+ebp*4+0x1b56f44b],cl
  4139ef:	ffreep st(6)
  4139f1:	div    BYTE PTR [edi+edi*1-0xc]
  4139f5:	outs   dx,BYTE PTR ds:[esi]
  4139f6:	pop    ds
  4139f7:	jns    0x4139e7
  4139f9:	adc    DWORD PTR [ebx+0x49208de1],ecx
  4139ff:	ja     0x413a21
  413a01:	outs   dx,DWORD PTR ds:[esi]
  413a02:	ja     0x413a1c
  413a04:	sbb    cl,BYTE PTR [edi]
  413a06:	push   edi
  413a07:	sub    DWORD PTR [ebp-0x35676faa],esp
  413a0d:	xchg   cx,ax
  413a0f:	xor    cl,BYTE PTR [ecx+0x1d]
  413a12:	add    DWORD PTR [eax+0x57b6084f],esi
  413a18:	and    al,0x12
  413a1a:	push   edi
  413a1b:	retf   
  413a1c:	inc    ecx
  413a1d:	iret   
  413a1e:	(bad)  
  413a1f:	mov    esi,0x3321c3c2
  413a24:	addr16 mov bh,0xde
  413a27:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413a28:	mov    ss,ebp
  413a2a:	mov    bh,0x95
  413a2c:	mov    DWORD PTR [esi+0x5dc71787],0x426af860
  413a36:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413a37:	sub    ah,cl
  413a39:	push   es
  413a3a:	mov    BYTE PTR ds:0x4c3b894a,bl
  413a40:	or     dl,BYTE PTR [edi]
  413a42:	push   edx
  413a43:	xor    cl,dl
  413a45:	sti    
  413a46:	adc    eax,0x9568bb6e
  413a4b:	sub    DWORD PTR [ecx],ecx
  413a4d:	out    0x7b,eax
  413a4f:	dec    ecx
  413a50:	pop    eax
  413a51:	ins    BYTE PTR es:[edi],dx
  413a52:	or     bl,dh
  413a54:	inc    ecx
  413a55:	and    DWORD PTR [ebx-0x65312b28],0xffffffc4
  413a5c:	and    BYTE PTR [eax-0x31],0xc2
  413a60:	mov    ecx,0xc433ef14
  413a65:	dec    ebp
  413a66:	ins    BYTE PTR es:[edi],dx
  413a67:	shr    DWORD PTR [eax-0x39],0xb5
  413a6b:	jge    0x413a11
  413a6d:	mov    ds:0x76f5010f,eax
  413a72:	or     eax,0x168dedca
  413a77:	add    BYTE PTR [edi+esi*1],al
  413a7a:	xor    esp,DWORD PTR [ebp-0x2a]
  413a7d:	pushf  
  413a7e:	retf   
  413a7f:	xchg   ebx,eax
  413a80:	iret   
  413a81:	or     eax,0x124cbfc3
  413a86:	cmc    
  413a87:	push   edx
  413a88:	mov    es,WORD PTR [edx+ebx*2+0x52]
  413a8c:	pop    eax
  413a8d:	dec    esp
  413a8e:	fsub   st,st(1)
  413a90:	jp     0x413ad6
  413a92:	mov    eax,0xc992cefe
  413a97:	(bad)  
  413a98:	sub    BYTE PTR [ebx],dh
  413a9a:	vpandn ymm3,ymm3,YMMWORD PTR [edx]
  413a9e:	add    eax,0x76adc907
  413aa3:	fsubr  DWORD PTR [ebx-0x5b]
  413aa6:	lea    eax,[ebp+0x49]
  413aa9:	adc    eax,0x19c504f9
  413aae:	adc    eax,0x1bdd847d
  413ab3:	dec    ecx
  413ab4:	popf   
  413ab5:	scas   eax,DWORD PTR es:[edi]
  413ab6:	scas   eax,DWORD PTR es:[edi]
  413ab7:	jbe    0x413a91
  413ab9:	jg     0x413a67
  413abb:	lods   eax,DWORD PTR ds:[esi]
  413abc:	fld1   
  413abe:	mov    eax,ds:0xafd81fb9
  413ac3:	sub    eax,0x44f13a4a
  413ac8:	pop    ss
  413ac9:	sti    
  413aca:	outs   dx,DWORD PTR ds:[esi]
  413acb:	adc    DWORD PTR [ecx+edi*8+0x71],0x68
  413ad0:	test   DWORD PTR [ecx],eax
  413ad2:	xor    esi,esi
  413ad4:	lock fisub WORD PTR [eax]
  413ad7:	push   0x787441
  413adc:	cmp    BYTE PTR [ecx+0x12d8afc8],dl
  413ae2:	scas   eax,DWORD PTR es:[edi]
  413ae3:	adc    dl,al
  413ae5:	jmp    0xdcb060df
  413aea:	push   ecx
  413aeb:	out    0x86,eax
  413aed:	in     al,0xe6
  413aef:	fistp  DWORD PTR [edx+0x51a4fb38]
  413af5:	das    
  413af6:	dec    esi
  413af7:	adc    ecx,DWORD PTR [ecx-0x7f165d00]
  413afd:	arpl   WORD PTR [ecx-0x531f6d28],si
  413b03:	or     eax,0x1f63d225
  413b08:	dec    ecx
  413b09:	outs   dx,DWORD PTR ds:[esi]
  413b0a:	fcom   DWORD PTR [eax-0x6043929d]
  413b10:	ss inc ebx
  413b12:	(bad)  
  413b13:	addr16 mov ds:0x96b5,al
  413b17:	push   eax
  413b18:	or     eax,DWORD PTR [eax+0x57]
  413b1b:	pusha  
  413b1c:	jb     0x413b0a
  413b1e:	aam    0x27
  413b20:	or     BYTE PTR [ecx-0x1a4cc9d9],dl
  413b26:	xchg   edi,eax
  413b27:	ins    BYTE PTR es:[edi],dx
  413b28:	dec    ebp
  413b29:	popa   
  413b2a:	in     al,0xe1
  413b2c:	cmp    DWORD PTR [edi],edi
  413b2e:	cmp    esp,esi
  413b30:	mov    BYTE PTR ds:0xec73016d,cl
  413b36:	scas   eax,DWORD PTR es:[edi]
  413b37:	mov    ah,0x49
  413b39:	stos   DWORD PTR es:[edi],eax
  413b3a:	pop    edi
  413b3b:	jo     0x413afa
  413b3d:	enter  0xb2cc,0x18
  413b41:	adc    esp,eax
  413b43:	mov    ecx,0x227c8600
  413b48:	ss shl edx,1
  413b4b:	dec    esi
  413b4c:	mov    ss,edx
  413b4e:	cld    
  413b4f:	xor    BYTE PTR [esi-0x21],ch
  413b52:	jb     0x413bb7
  413b54:	cli    
  413b55:	mov    dh,0xca
  413b57:	neg    DWORD PTR [esi-0x55]
  413b5a:	mov    bl,0xf1
  413b5c:	cld    
  413b5d:	imul   eax,DWORD PTR [ebp-0x51058d7b],0x758765d
  413b67:	inc    ebp
  413b68:	mov    ch,0x74
  413b6a:	sbb    edx,ebp
  413b6c:	sbb    DWORD PTR [edx+0x5db60fc7],esi
  413b72:	sti    
  413b73:	xor    BYTE PTR [edi],dh
  413b75:	sbb    bh,BYTE PTR [ebp-0x48]
  413b78:	fbstp  TBYTE PTR [ecx-0x1c]
  413b7b:	cli    
  413b7c:	cmc    
  413b7d:	dec    ebx
  413b7e:	sub    al,0xe1
  413b80:	aad    0x8b
  413b82:	jne    0x413bfc
  413b84:	and    BYTE PTR [edx+0x53],bh
  413b87:	add    DWORD PTR [edi],ebx
  413b89:	data16 mov ah,0xc9
  413b8c:	mov    ebx,0x8a14b791
  413b91:	mov    edi,0xcdcff825
  413b96:	push   ss
  413b97:	cmp    ebx,esi
  413b99:	dec    ecx
  413b9a:	adc    DWORD PTR [esi],0x3222a291
  413ba0:	push   ebp
  413ba1:	loop   0x413bd1
  413ba3:	(bad)  
  413ba4:	cmp    dh,bl
  413ba6:	sbb    al,0x2d
  413ba8:	addr16 retf 0xf758
  413bac:	leave  
  413bad:	jbe    0x413b31
  413baf:	xchg   edx,eax
  413bb0:	leave  
  413bb1:	jne    0x413b34
  413bb3:	adc    DWORD PTR [ecx+0x19],ecx
  413bb6:	cmp    DWORD PTR [ebx],ebx
  413bb8:	sahf   
  413bb9:	test   eax,0x9be20a78
  413bbe:	xor    eax,0xc8d6ad14
  413bc3:	(bad)  
  413bc4:	retf   0xb32c
  413bc7:	jbe    0x413ba3
  413bc9:	jns    0x413bfe
  413bcb:	bound  ebp,QWORD PTR [edi-0x3a8ef21c]
  413bd1:	fwait
  413bd2:	lds    ecx,FWORD PTR [esi]
  413bd4:	and    ebx,edi
  413bd6:	and    al,0x18
  413bd8:	push   ds
  413bd9:	shl    DWORD PTR [edi-0x5d],0x2c
  413bdd:	push   0x17817cb7
  413be2:	mov    cl,0x4d
  413be4:	in     al,0xac
  413be6:	(bad)  
  413be7:	jp     0x413c47
  413be9:	repnz sti 
  413beb:	mov    esp,0xc5fa7476
  413bf0:	aad    0x67
  413bf2:	inc    ebx
  413bf3:	stos   DWORD PTR es:[edi],eax
  413bf4:	mov    bl,0x8c
  413bf6:	enter  0xef2e,0x9
  413bfa:	ss jo  0x413c09
  413bfd:	dec    ebp
  413bfe:	mov    ebp,0x48f3f1de
  413c03:	mov    dl,0x8d
  413c05:	cmp    ebp,DWORD PTR [ebx+0x66]
  413c08:	sbb    eax,0x1267ff97
  413c0d:	push   esi
  413c0e:	mov    cl,0x2d
  413c10:	enter  0xc424,0x4c
  413c14:	cwde   
  413c15:	mov    ds:0x78234348,al
  413c1a:	adc    eax,0xa4f8281f
  413c1f:	adc    al,0xb8
  413c21:	xchg   ebp,eax
  413c22:	repz repz test eax,0x63734b0
  413c29:	inc    ebp
  413c2a:	and    al,0x72
  413c2c:	aad    0x9d
  413c2e:	jns    0x413ca1
  413c30:	cmp    eax,0x23f64dd
  413c35:	push   ss
  413c36:	jg     0x413c92
  413c38:	pop    esi
  413c39:	pushw  0x6
  413c3c:	ja     0x413c0d
  413c3e:	stos   DWORD PTR es:[edi],eax
  413c3f:	and    bl,0x16
  413c42:	xchg   ebp,eax
  413c43:	ja     0x413c15
  413c45:	lea    ebx,[edx]
  413c47:	sub    al,BYTE PTR [edx-0x275573a3]
  413c4d:	inc    ebp
  413c4e:	fld    st(3)
  413c50:	dec    ecx
  413c51:	push   eax
  413c52:	adc    bl,ah
  413c54:	xor    ch,al
  413c56:	cdq    
  413c57:	mov    DWORD PTR ds:0xc4e6c976,0x72b0982a
  413c61:	pop    ecx
  413c62:	out    0x98,eax
  413c64:	mov    ds:0x65c69fb7,eax
  413c69:	je     0x413c9e
  413c6b:	int    0x77
  413c6d:	(bad)  
  413c6e:	sar    BYTE PTR [edi+0x23],1
  413c71:	jb     0x413ca2
  413c73:	mov    ebx,0xa3a2f55b
  413c78:	test   al,0xae
  413c7a:	popa   
  413c7b:	mov    edx,0x311b3608
  413c80:	mov    ch,0xb4
  413c82:	fs inc esi
  413c84:	push   ebx
  413c85:	fwait
  413c86:	xor    DWORD PTR [eax-0x44d06fda],eax
  413c8c:	dec    edx
  413c8d:	in     eax,dx
  413c8e:	ss inc esi
  413c90:	mov    esi,0x194ebc6c
  413c95:	les    edx,FWORD PTR [ebp-0x56ee1130]
  413c9b:	int3   
  413c9c:	enter  0xf14c,0x35
  413ca0:	ins    BYTE PTR es:[edi],dx
  413ca1:	fadd   st(1),st
  413ca3:	push   es
  413ca4:	mov    esi,0x6bb977e5
  413ca9:	clc    
  413caa:	clc    
  413cab:	fstp   QWORD PTR [edi-0x12]
  413cae:	pop    ds
  413caf:	shl    DWORD PTR fs:[ebx],0x26
  413cb3:	lea    ebp,[ecx+0xab27fa7]
  413cb9:	mov    ebx,0xf48e279a
  413cbe:	adc    ebx,DWORD PTR [edi]
  413cc0:	stc    
  413cc1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413cc2:	push   edx
  413cc3:	fnclex 
  413cc5:	stc    
  413cc6:	(bad)  
  413cc8:	(bad)  
  413cc9:	into   
  413cca:	jl     0x413cdb
  413ccc:	pop    edx
  413ccd:	lss    edx,FWORD PTR [edi-0x80]
  413cd1:	into   
  413cd2:	push   ds
  413cd3:	cmp    DWORD PTR [esi-0x5a],ebx
  413cd6:	or     bh,dh
  413cd8:	rol    DWORD PTR [ebp+0x16],cl
  413cdb:	inc    edx
  413cdc:	fdiv   QWORD PTR [ecx+esi*1-0x4d]
  413ce0:	mov    esp,esp
  413ce2:	lods   al,BYTE PTR ds:[esi]
  413ce3:	rcr    BYTE PTR [eax-0x6e],0x34
  413ce7:	xchg   esi,eax
  413ce8:	sbb    bh,ch
  413cea:	out    0x23,eax
  413cec:	(bad)  
  413cee:	lods   al,BYTE PTR ds:[esi]
  413cef:	mov    al,al
  413cf1:	repz sub dl,BYTE PTR [eax+edx*8-0x3f]
  413cf6:	popf   
  413cf7:	mov    edx,0xbceb4c79
  413cfc:	dec    eax
  413cfd:	adc    DWORD PTR [edx+0x74],ebp
  413d00:	inc    edi
  413d01:	icebp  
  413d02:	ja     0x413cbf
  413d04:	mov    ch,0xf1
  413d06:	lods   eax,DWORD PTR ds:[esi]
  413d07:	or     edi,DWORD PTR [ebp+0x56]
  413d0a:	push   ecx
  413d0b:	in     eax,dx
  413d0c:	retf   0x58aa
  413d0f:	adc    bh,BYTE PTR [eax+0x61]
  413d12:	enter  0xb753,0xee
  413d16:	push   edx
  413d17:	mov    dh,0x3f
  413d19:	daa    
  413d1a:	pushf  
  413d1b:	mov    ds:0x25ad9f8f,al
  413d20:	add    bl,BYTE PTR [ecx-0x26]
  413d23:	loopne 0x413d93
  413d25:	lock movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413d27:	push   DWORD PTR [ebx+ebp*8-0x7d]
  413d2b:	icebp  
  413d2c:	pusha  
  413d2d:	fldcw  WORD PTR [ecx-0x74]
  413d30:	xor    DWORD PTR [edi-0x15],eax
  413d33:	ret    0x5f71
  413d36:	jmp    0xcc37:0x4b16908
  413d3d:	jb     0x413d1a
  413d3f:	js     0x413dad
  413d41:	cli    
  413d42:	push   ebp
  413d43:	xlat   BYTE PTR ds:[ebx]
  413d44:	cmp    DWORD PTR [edi-0x28],ebx
  413d47:	arpl   WORD PTR [edx-0x569619e4],bx
  413d4d:	scas   al,BYTE PTR es:[edi]
  413d4e:	mov    edi,eax
  413d50:	shr    bh,1
  413d52:	or     BYTE PTR [ebx],bl
  413d54:	add    eax,0x2750521d
  413d59:	cmc    
  413d5a:	mov    eax,0x93ed854c
  413d5f:	mov    esi,0x6ac0cfbd
  413d64:	dec    cx
  413d66:	and    eax,edi
  413d68:	pop    edi
  413d69:	and    eax,0x852389f6
  413d6e:	cmp    BYTE PTR [edi+0x28f3aa8a],ch
  413d74:	jae    0x413d44
  413d76:	jne    0x413d6b
  413d78:	xchg   eax,ebx
  413d7a:	sub    bl,BYTE PTR ds:0x3960aa11
  413d80:	xchg   edx,eax
  413d81:	add    al,0x5e
  413d83:	xor    eax,0x3d49a552
  413d88:	cmp    BYTE PTR [esi],ah
  413d8a:	out    0xa0,eax
  413d8c:	jmp    FWORD PTR gs:[ecx+0x73e4783]
  413d93:	popf   
  413d94:	ja     0x413d3f
  413d96:	loop   0x413d8e
  413d98:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413d99:	sbb    ebx,DWORD PTR [eax+0x32]
  413d9c:	sahf   
  413d9d:	xor    ch,bl
  413d9f:	test   BYTE PTR ds:0x3f18949c,bl
  413da5:	iret   
  413da6:	xchg   al,dh
  413da8:	jge    0x413e02
  413daa:	sub    DWORD PTR [eax+0x49c322a5],ebx
  413db0:	mov    ds:0xd70014d7,al
  413db5:	xchg   DWORD PTR [ebx*1+0x2653d531],esp
  413dbc:	neg    DWORD PTR [edx-0x7c00376f]
  413dc2:	and    eax,0x52de622f
  413dc7:	xor    al,cl
  413dc9:	jecxz  0x413da5
  413dcb:	mov    esp,0x6c050f41
  413dd0:	dec    edx
  413dd1:	imul   eax,DWORD PTR [eax],0x59f8b039
  413dd7:	rol    BYTE PTR [ecx],1
  413dd9:	cmp    al,0x8e
  413ddb:	ss iret 
  413ddd:	add    eax,0xa36c8b7f
  413de2:	(bad)  
  413de3:	push   eax
  413de4:	pop    ebp
  413de5:	icebp  
  413de6:	mov    edx,0xabe9ed26
  413deb:	mov    ebx,0xe15a8824
  413df0:	icebp  
  413df1:	ror    ecx,0xc4
  413df4:	enter  0xdf07,0x8f
  413df8:	div    BYTE PTR [edx]
  413dfa:	sahf   
  413dfb:	out    dx,al
  413dfc:	fsubr  DWORD PTR [edi]
  413dfe:	mov    bl,0x91
  413e00:	xor    dl,al
  413e02:	pop    eax
  413e03:	ins    BYTE PTR es:[edi],dx
  413e04:	dec    eax
  413e05:	bound  esi,QWORD PTR [edx-0x8d39113]
  413e0b:	dec    ecx
  413e0c:	aaa    
  413e0d:	clc    
  413e0e:	es pop bp
  413e11:	mov    esi,0x5bafb3d3
  413e16:	xchg   esp,eax
  413e17:	fwait
  413e18:	and    bh,BYTE PTR [ecx+edi*2-0x23e0d9e2]
  413e1f:	inc    ebp
  413e20:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413e21:	xchg   ebx,edi
  413e23:	fidivr DWORD PTR [edi]
  413e25:	dec    esp
  413e26:	repz jmp 0xc5f8794a
  413e2c:	fs clc 
  413e2e:	test   BYTE PTR [ebx+0x42649adf],ah
  413e34:	and    cl,dh
  413e36:	stc    
  413e37:	dec    esp
  413e38:	pop    es
  413e39:	dec    ecx
  413e3a:	(bad)  
  413e3b:	test   eax,0x47346fe3
  413e40:	or     DWORD PTR [ebp+0x39],esi
  413e43:	icebp  
  413e44:	icebp  
  413e45:	pop    eax
  413e46:	lds    eax,FWORD PTR [edi]
  413e48:	lahf   
  413e49:	test   dh,0x7f
  413e4c:	xchg   edx,eax
  413e4d:	scas   al,BYTE PTR es:[edi]
  413e4e:	shl    dh,1
  413e50:	dec    edx
  413e51:	ds jmp 0xcfb124d8
  413e57:	or     eax,0x9e434a2d
  413e5c:	stos   DWORD PTR es:[edi],eax
  413e5d:	aaa    
  413e5e:	xchg   esi,eax
  413e5f:	out    0x17,eax
  413e61:	ret    0xdacc
  413e64:	rol    BYTE PTR [esi],cl
  413e66:	aad    0x2e
  413e68:	or     al,0xb0
  413e6a:	jmp    0xbb75:0x7605d390
  413e71:	push   ds
  413e72:	nop
  413e73:	shl    BYTE PTR [edx-0x35],0xb5
  413e77:	cmp    DWORD PTR [ebx],0xfffffff7
  413e7a:	dec    ebp
  413e7b:	dec    ebx
  413e7c:	loope  0x413ed4
  413e7e:	scas   eax,DWORD PTR es:[edi]
  413e7f:	pop    ecx
  413e80:	push   0x26968e7c
  413e85:	xchg   edi,eax
  413e86:	iret   
  413e87:	stos   DWORD PTR es:[edi],eax
  413e88:	jno    0x413ec6
  413e8a:	mov    cl,0x1f
  413e8c:	sbb    BYTE PTR [edx-0x474df1fa],dh
  413e92:	sub    eax,0x5c6c81b8
  413e97:	inc    ebx
  413e98:	data16 mov al,ds:0x7f83e2ca
  413e9e:	xchg   ebp,eax
  413e9f:	pop    ss
  413ea0:	pop    edi
  413ea1:	lods   al,BYTE PTR ds:[esi]
  413ea2:	arpl   WORD PTR [ecx+ecx*4-0x7e],bx
  413ea6:	bound  edi,QWORD PTR [eax-0x68d3b617]
  413eac:	xor    ch,BYTE PTR [ecx]
  413eae:	inc    ebp
  413eaf:	out    dx,eax
  413eb0:	cs xor eax,0xbb6ad8e9
  413eb6:	adc    BYTE PTR [esi-0x5af02daf],bh
  413ebc:	mov    bh,0xb4
  413ebe:	xor    BYTE PTR [ecx+0x76],al
  413ec1:	and    eax,0xe32bf9d1
  413ec6:	cmp    edi,DWORD PTR [ecx]
  413ec8:	jmp    0xf9b1991
  413ecd:	loop   0x413eb5
  413ecf:	enter  0x1ad1,0xc2
  413ed3:	ins    BYTE PTR es:[edi],dx
  413ed4:	mov    ds:0x7f0dd2c9,al
  413ed9:	cld    
  413eda:	pop    ebp
  413edb:	inc    ecx
  413edc:	fldcw  WORD PTR [edi]
  413ede:	add    eax,0xc9f29709
  413ee3:	sub    ch,BYTE PTR [esi+0x69aacf79]
  413ee9:	jg     0x413f09
  413eeb:	adc    DWORD PTR [edx+0x5a8a4228],ebp
  413ef1:	leave  
  413ef2:	(bad)  
  413ef3:	jmp    FWORD PTR [ebp+0x6]
  413ef6:	pop    ebx
  413ef7:	into   
  413ef8:	mov    al,ds:0x1ac8a34b
  413efd:	arpl   WORD PTR [edx],cx
  413eff:	mov    eax,0xa6de40a2
  413f04:	xor    eax,0x1843c542
  413f09:	ins    BYTE PTR es:[edi],dx
  413f0a:	push   eax
  413f0b:	push   esp
  413f0c:	aaa    
  413f0d:	stc    
  413f0e:	dec    edi
  413f0f:	popf   
  413f10:	sub    ecx,DWORD PTR [esi-0x3c3ebbad]
  413f16:	push   ebp
  413f17:	lods   al,BYTE PTR ds:[esi]
  413f18:	push   ebp
  413f19:	xchg   ebx,eax
  413f1a:	retf   
  413f1b:	and    edi,DWORD PTR [ebx-0x62]
  413f1e:	mov    ebp,0xbc00a621
  413f23:	fsub   DWORD PTR [edx-0x54]
  413f26:	and    eax,0x665facd2
  413f2b:	shl    BYTE PTR ds:0x112a49de,0x9f
  413f32:	add    bl,BYTE PTR ds:0xe2a14fe4
  413f38:	arpl   WORD PTR [ecx],si
  413f3a:	in     eax,0x3b
  413f3c:	dec    ecx
  413f3d:	in     al,0xa0
  413f3f:	sbb    eax,DWORD PTR [edx+edx*2+0x3471841f]
  413f46:	lods   al,BYTE PTR ds:[esi]
  413f47:	jae    0x413fba
  413f49:	xchg   ebx,eax
  413f4a:	setno  BYTE PTR [eax+0x4b]
  413f4e:	(bad)  
  413f4f:	scas   eax,DWORD PTR es:[edi]
  413f50:	rcl    BYTE PTR [eax],0x4b
  413f53:	jo     0x413f8a
  413f55:	adc    DWORD PTR ds:0xf10ea809,ecx
  413f5b:	(bad)  
  413f5d:	ja     0x413f41
  413f5f:	xlat   BYTE PTR ds:[ebx]
  413f60:	(bad)  [edx-0x408dfd51]
  413f66:	sub    DWORD PTR ds:0x567535d9,edi
  413f6c:	pop    eax
  413f6d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413f6e:	inc    ebp
  413f6f:	dec    edx
  413f70:	mov    ds:0xd1bded4c,al
  413f75:	pslld  mm3,QWORD PTR [ebp-0x437dff57]
  413f7c:	inc    edi
  413f7d:	rol    DWORD PTR [edi],0xe4
  413f80:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413f81:	aas    
  413f82:	dec    edi
  413f83:	inc    esp
  413f84:	sub    al,0xa7
  413f86:	jae    0x413f69
  413f88:	stos   BYTE PTR es:[edi],al
  413f89:	mov    ecx,0xad105d8c
  413f8e:	mov    ecx,0xc47a926b
  413f93:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413f94:	retf   
  413f95:	mov    eax,ds:0x6eb49919
  413f9a:	(bad)  
  413f9b:	rcl    dh,0xc2
  413f9e:	(bad)  
  413f9f:	out    0xfc,eax
  413fa1:	shl    DWORD PTR [edi+eax*1+0x295610c3],0x7d
  413fa9:	xchg   esp,eax
  413faa:	rcl    BYTE PTR [esi],0x9c
  413fad:	push   0xd51a1e1a
  413fb2:	sub    BYTE PTR [ebp+0x71],dl
  413fb5:	lea    edi,[edx+0x9]
  413fb8:	xchg   BYTE PTR [ebp+ebx*1-0x572f539c],cl
  413fbf:	dec    DWORD PTR [eax+0x6b]
  413fc2:	pop    ss
  413fc3:	sub    eax,0x11f8ce38
  413fc8:	lods   eax,DWORD PTR ds:[esi]
  413fc9:	and    al,0xde
  413fcb:	xor    DWORD PTR [ecx+0x433b1b05],ebp
  413fd1:	xchg   ecx,eax
  413fd2:	lods   eax,DWORD PTR ds:[esi]
  413fd3:	push   0xffffff9e
  413fd5:	daa    
  413fd6:	jmp    DWORD PTR [edi]
  413fd8:	jne    0x413fbb
  413fda:	pop    eax
  413fdb:	mov    bl,0xea
  413fdd:	sub    DWORD PTR [edi+0x4d],ebx
  413fe0:	(bad)  
  413fe2:	fidivr DWORD PTR [ecx+0xa21a744]
  413fe8:	sbb    al,0xa2
  413fea:	mov    es,WORD PTR [eax]
  413fec:	sub    ch,al
  413fee:	add    BYTE PTR [edx],ah
  413ff0:	jmp    0x93dabbd6
  413ff5:	jb     0x414072
  413ff7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413ff8:	jmp    0x843d9734
  413ffd:	add    DWORD PTR [edi],esi
  413fff:	mov    edx,0xf17a3f65
  414004:	xor    BYTE PTR [ebp+edi*4-0x11],ch
  414008:	es push 0xe027ad7b
  41400e:	cs sbb eax,0x479dbace
  414014:	jmp    0xb1e43e81
  414019:	mov    esp,0x9ec4119
  41401e:	jle    0x414045
  414020:	in     al,0xed
  414022:	pop    ebx
  414023:	cwde   
  414024:	jns    0x41406b
  414026:	pop    esp
  414027:	call   0xee74:0xe8b37b90
  41402e:	dec    eax
  41402f:	jmp    0x414039
  414031:	dec    eax
  414032:	add    esi,edx
  414034:	adc    eax,0x5d3e4e3
  414039:	push   ebp
  41403a:	or     ch,BYTE PTR [ebp+0x601f0687]
  414040:	call   0x337f:0x9436126f
  414047:	add    BYTE PTR [ebx+ebx*2-0x7e],bh
  41404b:	push   esi
  41404c:	cmp    bl,ah
  41404e:	pop    es
  41404f:	mov    ds:0x42f97fe2,eax
  414054:	mov    WORD PTR [edi+esi*8-0x46],es
  414058:	sbb    eax,0x2bfb6384
  41405d:	push   0x9
  41405f:	xchg   ebp,eax
  414060:	jo     0x41403a
  414062:	pop    edx
  414063:	(bad)  
  414064:	ret    0x5913
  414067:	mov    edx,DWORD PTR [ecx+0x93fb903]
  41406d:	je     0x414059
  41406f:	loope  0x414069
  414071:	push   0x66a1f2a7
  414076:	push   eax
  414077:	imul   esp,DWORD PTR [eax+ebp*1+0xd],0xbb259923
  41407f:	lea    ebx,[ebp-0x52]
  414082:	mov    cl,0x67
  414084:	pusha  
  414085:	std    
  414086:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414087:	ds call 0x6ac1:0x4c8e8b88
  41408f:	and    eax,0xca25f9b4
  414094:	or     edx,DWORD PTR [esi-0xe]
  414097:	and    DWORD PTR [esp+ecx*2+0x4bc5754e],eax
  41409e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41409f:	dec    edi
  4140a0:	mov    edx,DWORD PTR [ebx-0x48]
  4140a3:	vandps ymm7,ymm1,YMMWORD PTR [edx-0x1ad3a9a3]
  4140ab:	out    0xe4,eax
  4140ad:	or     bl,BYTE PTR [esp+eax*2+0x2e]
  4140b1:	pop    ds
  4140b2:	adc    al,0xdd
  4140b4:	ins    BYTE PTR es:[edi],dx
  4140b5:	imul   ecx,DWORD PTR [esi-0x78],0xb2997135
  4140bc:	das    
  4140bd:	outs   dx,DWORD PTR ds:[esi]
  4140be:	ror    BYTE PTR [ebx+ebp*4-0x57a4553],1
  4140c5:	js     0x4140c3
  4140c7:	pop    ds
  4140c8:	sub    ah,BYTE PTR [eax+0x5f9bdc79]
  4140ce:	push   edi
  4140cf:	mov    WORD PTR [ecx+0x137bd6e],es
  4140d5:	stc    
  4140d6:	push   esp
  4140d7:	jne    0x4140c6
  4140d9:	inc    ecx
  4140da:	jns    0x414123
  4140dc:	push   edx
  4140dd:	imul   edx,DWORD PTR [ebp+edx*4-0x7f],0xcc693066
  4140e5:	ins    BYTE PTR es:[edi],dx
  4140e6:	pushf  
  4140e7:	push   edx
  4140e8:	pop    ds
  4140e9:	icebp  
  4140ea:	loop   0x41407c
  4140ec:	imul   DWORD PTR [ebx+0xd]
  4140ef:	rol    DWORD PTR [ebx+0x34],0xe7
  4140f3:	(bad)  
  4140f5:	adc    DWORD PTR [eax],edi
  4140f7:	(bad)  
  4140f8:	div    DWORD PTR [ebx-0x3]
  4140fb:	push   0xffffff86
  4140fd:	jae    0x414081
  4140ff:	bound  esp,QWORD PTR [ebx]
  414101:	dec    esp
  414102:	xor    DWORD PTR [ebx],edi
  414104:	scas   al,BYTE PTR es:[edi]
  414105:	xchg   BYTE PTR [ebp-0x6a],cl
  414108:	adc    al,0x8c
  41410a:	call   0x49ef1980
  41410f:	mov    ds:0x6e398bd7,al
  414114:	add    BYTE PTR [edx+0x72],dl
  414117:	sub    ah,BYTE PTR [esi-0x2ed54453]
  41411d:	ss dec edi
  41411f:	pop    ebp
  414120:	sub    dl,BYTE PTR [ebp-0x14c3646e]
  414126:	mov    ds,WORD PTR [edx]
  414128:	sub    esp,DWORD PTR [esi]
  41412a:	ja     0x4141a9
  41412c:	xchg   esp,eax
  41412d:	pop    esi
  41412e:	pushf  
  41412f:	test   DWORD PTR [ecx+0x569e72b2],ecx
  414135:	inc    esp
  414136:	push   edx
  414137:	test   al,0xe3
  414139:	xor    ebp,DWORD PTR [edi-0x14b6bbf7]
  41413f:	rcl    ebx,0x6a
  414142:	loop   0x41418c
  414144:	sahf   
  414145:	jg     0x41410d
  414147:	inc    eax
  414148:	sbb    BYTE PTR [esi],bh
  41414a:	sbb    eax,0x58314a05
  41414f:	jg     0x41416e
  414151:	mov    eax,0x966438d5
  414156:	add    DWORD PTR [eax],eax
  414158:	cmc    
  414159:	scas   al,BYTE PTR es:[edi]
  41415a:	ror    BYTE PTR [edi],0x7d
  41415d:	loopne 0x414181
  41415f:	std    
  414160:	mov    ecx,0xc4c30948
  414165:	jmp    0xfa0c7892
  41416a:	mov    edi,DWORD PTR [edi+0x6b]
  41416d:	cdq    
  41416e:	add    cl,BYTE PTR [edi+ebx*2+0x12]
  414172:	add    cl,BYTE PTR [ecx-0x1f]
  414175:	and    cl,dh
  414177:	aas    
  414178:	loop   0x4140ff
  41417a:	ds jns 0x4141ea
  41417d:	stc    
  41417e:	xchg   esp,eax
  41417f:	push   ecx
  414180:	dec    edx
  414181:	xchg   ebp,eax
  414182:	pop    ecx
  414183:	sub    eax,0x931b5f79
  414188:	outs   dx,BYTE PTR ds:[esi]
  414189:	sub    DWORD PTR [edx+ebp*4+0x1],esp
  41418d:	sub    BYTE PTR [ebx],ch
  41418f:	call   0x3678:0x847007f5
  414196:	adc    edi,DWORD PTR [edx-0x2fcb68e2]
  41419c:	outs   dx,BYTE PTR ds:[esi]
  41419d:	inc    eax
  41419e:	pop    ecx
  41419f:	iret   
  4141a0:	js     0x41420d
  4141a2:	jg     0x4141e7
  4141a4:	xchg   ebp,eax
  4141a5:	call   0x2d32e4bd
  4141aa:	mov    ecx,0x853118df
  4141af:	push   esi
  4141b0:	sub    DWORD PTR [eax],esp
  4141b2:	call   0x160:0x3f2e3288
  4141b9:	push   edx
  4141ba:	pop    edx
  4141bb:	ret    0xbde
  4141be:	add    al,0xa6
  4141c0:	sbb    al,0xca
  4141c2:	div    BYTE PTR [ebx-0x518cf0c4]
  4141c8:	and    esi,DWORD PTR [edi-0x5d]
  4141cb:	dec    ebp
  4141cc:	xchg   DWORD PTR [edx],edi
  4141ce:	lahf   
  4141cf:	mov    al,ds:0xe9e7d432
  4141d4:	ror    bh,1
  4141d6:	jg     0x41415d
  4141d8:	aam    0xa7
  4141da:	shl    dh,1
  4141dc:	bound  eax,QWORD PTR [ebp-0x69]
  4141df:	pop    edi
  4141e0:	in     al,dx
  4141e1:	xor    al,0x93
  4141e3:	pop    esi
  4141e4:	mov    eax,ds:0xcf3e63b5
  4141e9:	dec    edx
  4141ea:	fisub  DWORD PTR [esi-0x7d]
  4141ed:	jae    0x4141e0
  4141ef:	cli    
  4141f0:	pop    edx
  4141f1:	pop    ds
  4141f2:	clc    
  4141f3:	cmp    DWORD PTR [ebx+edx*1-0x10b0bac],0xf
  4141fb:	mov    ebp,0x7fdeb2ab
  414200:	shl    BYTE PTR [esi+edi*4+0x6427f165],cl
  414207:	mov    bl,BYTE PTR [edi+0xa]
  41420a:	ficom  DWORD PTR [eax]
  41420c:	mov    BYTE PTR [ecx-0x71],dh
  41420f:	mov    bl,0x12
  414211:	sbb    ah,BYTE PTR [esi+ebp*1+0x20]
  414215:	fwait
  414216:	pop    ecx
  414217:	jnp    0x414272
  414219:	or     eax,0xe8d2115c
  41421e:	cmp    ebx,DWORD PTR ds:0xb7ac5999
  414224:	mov    dh,0xfb
  414226:	or     al,0x6a
  414228:	or     BYTE PTR [ebp-0x2e6ea52b],al
  41422e:	xor    DWORD PTR [ebx],edi
  414230:	add    al,0x13
  414232:	idiv   DWORD PTR [edx+0x64]
  414235:	sahf   
  414236:	cli    
  414237:	fs in  al,dx
  414239:	imul   ecx,DWORD PTR ds:0xaefedd46,0x94edcfce
  414243:	stc    
  414244:	(bad)  
  414245:	mov    edx,0xb0c25848
  41424a:	and    cl,dh
  41424c:	sbb    BYTE PTR [ebp-0x44],al
  41424f:	frstor [edx+0x61]
  414252:	lods   al,BYTE PTR ds:[esi]
  414253:	dec    ebp
  414254:	ins    BYTE PTR es:[edi],dx
  414255:	inc    esi
  414256:	inc    ebp
  414257:	sub    DWORD PTR [esp+edx*1+0x4d],ecx
  41425b:	push   ebx
  41425c:	add    dl,bl
  41425e:	sub    al,0x1b
  414260:	push   cx
  414262:	icebp  
  414263:	ja     0x4142ac
  414265:	pushf  
  414266:	rol    BYTE PTR [edx-0x702d1dfa],cl
  41426c:	aad    0x5f
  41426e:	ret    0x954a
  414271:	sbb    eax,0xae317f76
  414276:	rol    WORD PTR [ebx-0x67],cl
  41427a:	mov    BYTE PTR [edi],0x8e
  41427d:	xchg   esi,eax
  41427e:	aaa    
  41427f:	adc    BYTE PTR [edi],bl
  414281:	push   0x13
  414283:	jbe    0x4142ea
  414285:	and    BYTE PTR [ecx+0x13cb966e],cl
  41428b:	test   eax,0x7393bbc0
  414290:	jbe    0x414261
  414292:	neg    BYTE PTR [esp+ebx*8-0x28dd6dc3]
  414299:	pop    es
  41429a:	cmp    DWORD PTR [edi+0x5f],ebx
  41429d:	loopne 0x4142d7
  41429f:	lods   al,BYTE PTR ds:[esi]
  4142a0:	out    0x21,eax
  4142a2:	(bad)  [edx+0x78d1da8c]
  4142a8:	aas    
  4142a9:	jg     0x414309
  4142ab:	push   ebx
  4142ac:	bound  esp,QWORD PTR [esp+ebx*4-0x1a2bd922]
  4142b3:	cs pop ebx
  4142b5:	ret    0xebb5
  4142b8:	shr    BYTE PTR [esi+0x4d],0x70
  4142bc:	inc    eax
  4142bd:	dec    ebx
  4142be:	pop    edi
  4142bf:	pop    ebp
  4142c0:	jae    0x4142ba
  4142c2:	outs   dx,BYTE PTR ds:[esi]
  4142c3:	iret   
  4142c4:	pop    ecx
  4142c5:	mov    cl,0x48
  4142c7:	pusha  
  4142c8:	pop    esi
  4142c9:	bound  ebp,QWORD PTR [edx+0x4ade1770]
  4142cf:	mov    ebp,0xbfe37d24
  4142d4:	sbb    al,0xa3
  4142d6:	sbb    DWORD PTR [edi],ecx
  4142d8:	add    eax,0xb78b9e38
  4142dd:	aad    0xe
  4142df:	add    edx,DWORD PTR [edx-0x4b710c0f]
  4142e5:	pop    edx
  4142e6:	int    0x92
  4142e8:	add    eax,0xf31fcc4e
  4142ed:	cld    
  4142ee:	xchg   edi,eax
  4142ef:	(bad)  
  4142f0:	addr16 push esi
  4142f2:	sub    DWORD PTR [edi+0x7d],ebx
  4142f5:	stos   BYTE PTR es:[di],al
  4142f7:	pop    ecx
  4142f8:	sub    ebp,DWORD PTR [ebx-0x33]
  4142fb:	mov    cl,0x68
  4142fd:	jb     0x4142e3
  4142ff:	sbb    DWORD PTR [edi-0x33535ade],0xffffffc2
  414306:	sub    BYTE PTR [eax],cl
  414308:	mov    ah,BYTE PTR [eax]
  41430a:	adc    ah,BYTE PTR [ebp-0x61]
  41430d:	mov    bl,0x35
  41430f:	(bad)  
  414310:	(bad)  
  414312:	aas    
  414313:	(bad)
  414316:	in     eax,dx
  414317:	mov    WORD PTR [edi],es
  414319:	jnp    0x414346
  41431b:	rcr    DWORD PTR [ecx],cl
  41431d:	cmp    eax,0x428647
  414322:	sub    edx,esi
  414324:	add    DWORD PTR ds:0x42863f,ecx
  41432a:	xor    edx,eax
  41432c:	mov    ebx,DWORD PTR ds:0x42864f
  414332:	add    DWORD PTR ds:0x428623,ebx
  414338:	mov    DWORD PTR [ebp+0x8],edx
  41433b:	mov    edx,DWORD PTR [ebp+0x8]
  41433e:	inc    ebx
  41433f:	mov    ebx,DWORD PTR [ebp-0x58]
  414342:	sub    DWORD PTR ds:0x428663,0x42863f
  41434c:	add    edx,0x5708f1
  414352:	and    DWORD PTR ds:0x428647,0x6a8d
  41435c:	imul   edx,ebx
  41435f:	xor    ebx,ebx
  414361:	or     ebx,DWORD PTR ds:0x42861f
  414367:	adc    DWORD PTR ds:0x42860f,ebx
  41436d:	mov    DWORD PTR [ebp-0x58],edx
  414370:	mov    edx,DWORD PTR [ebp+0x8]
  414373:	mov    ebx,DWORD PTR [ebp-0x54]
  414376:	add    edx,0x64f893
  41437c:	sbb    DWORD PTR ds:0x4285ff,0x4a3d
  414386:	or     edx,ebx
  414388:	mov    DWORD PTR [ebp-0x54],edx
  41438b:	or     DWORD PTR ds:0x4285db,edx
  414391:	mov    edx,DWORD PTR [ebp+0x8]
  414394:	mov    DWORD PTR ds:0x428653,0x1a
  41439e:	cmp    DWORD PTR ds:0x428653,0x0
  4143a5:	je     0x4143df
  4143ab:	cmp    DWORD PTR ds:0x428653,0x25
  4143b2:	ja     0x4143df
  4143b8:	jmp    0x4143cd
  4143bd:	push   0x428034
  4143c2:	push   0x0
  4143c4:	push   DWORD PTR [ebp-0xc]
  4143c7:	call   DWORD PTR ds:0x4287ab
  4143cd:	mov    ebx,DWORD PTR ds:0x428653
  4143d3:	dec    ebx
  4143d4:	mov    DWORD PTR ds:0x428653,ebx
  4143da:	jmp    0x41439e
  4143df:	mov    ebx,DWORD PTR [ebp-0x50]
  4143e2:	add    DWORD PTR ds:0x42862f,0x3490
  4143ec:	add    edx,ecx
  4143ee:	xor    edx,ebx
  4143f0:	sbb    DWORD PTR ds:0x4285f3,edi
  4143f6:	mov    DWORD PTR [ebp-0x50],edx
  4143f9:	mov    edx,DWORD PTR [ebp+0x8]
  4143fc:	mov    ebx,DWORD PTR [ebp-0x4c]
  4143ff:	add    edx,edi
  414401:	add    DWORD PTR ds:0x42866b,0x26d2
  41440b:	and    edx,ebx
  41440d:	mov    DWORD PTR [ebp-0x4c],edx
  414410:	and    DWORD PTR ds:0x42862b,0x0
  41441a:	xor    edx,edx
  41441c:	xor    edx,DWORD PTR ds:0x42862b
  414422:	inc    edx
  414423:	mov    DWORD PTR ds:0x42862b,edx
  414429:	cmp    DWORD PTR ds:0x42862b,0x2c
  414430:	jbe    0x414453
  414436:	jmp    0x414446
  41443b:	push   0x42808e
  414440:	call   DWORD PTR ds:0x4287af
  414446:	cmp    DWORD PTR ds:0x42862b,0x1f
  41444d:	jb     0x41441a
  414453:	mov    edx,DWORD PTR [ebp+0x8]
  414456:	mov    ebx,DWORD PTR [ebp-0x48]
  414459:	lea    edx,[ebx+edx*1+0x241fcde]
  414460:	mov    DWORD PTR [ebp-0x48],edx
  414463:	mov    edx,DWORD PTR [ebp+0x8]
  414466:	mov    ebx,0xfa5e1521
  41446b:	sub    ebx,edx
  41446d:	add    ebx,DWORD PTR [ebp-0x44]
  414470:	mov    DWORD PTR [ebp-0x44],ebx
  414473:	mov    edx,DWORD PTR [ebp+0x8]
  414476:	xor    edx,eax
  414478:	add    edx,esi
  41447a:	jne    0x411f5b
  414480:	mov    edx,DWORD PTR [ebp-0xc]
  414483:	mov    dl,BYTE PTR [ebp+edx*1-0x9c]
  41448a:	mov    bl,BYTE PTR [ebp-0x1]
  41448d:	cmp    dl,bl
  41448f:	je     0x41b050
  414495:	mov    ecx,DWORD PTR [ebp-0x5c]
  414498:	mov    edx,DWORD PTR [ebp-0xc]
  41449b:	mov    dl,BYTE PTR [ebp+edx*1-0x9c]
  4144a2:	mov    ebx,DWORD PTR [ebp+0xc]
  4144a5:	xor    ecx,eax
  4144a7:	cmp    dl,BYTE PTR [ebx+ecx*1+0x3272ec]
  4144ae:	jne    0x41b184
  4144b4:	mov    ecx,DWORD PTR [ebp-0x5c]
  4144b7:	mov    edx,DWORD PTR [ebp+0xc]
  4144ba:	xor    ecx,eax
  4144bc:	movsx  ecx,BYTE PTR [edx+ecx*1+0x3272ec]
  4144c4:	mov    edx,DWORD PTR [ebp-0x18]
  4144c7:	xor    edx,eax
  4144c9:	add    edx,esi
  4144cb:	cmp    ecx,edx
  4144cd:	mov    ecx,DWORD PTR [ebp-0x14]
  4144d0:	mov    DWORD PTR [ebp+0x8],ecx
  4144d3:	mov    ecx,DWORD PTR [ebp+0x8]
  4144d6:	je     0x41d62d
  4144dc:	xor    ecx,eax
  4144de:	add    ecx,esi
  4144e0:	mov    ecx,0x242ebcc
  4144e5:	je     0x41b0d8
  4144eb:	mov    edx,DWORD PTR [ebp+0x8]
  4144ee:	mov    ebx,DWORD PTR [ebp-0x8]
  4144f1:	xor    edx,eax
  4144f3:	xor    ebx,eax
  4144f5:	sub    edx,ebx
  4144f7:	sub    edx,esi
  4144f9:	xor    edx,eax
  4144fb:	mov    DWORD PTR [ebp+0x8],edx
  4144fe:	mov    edx,DWORD PTR [ebp+0x8]
  414501:	mov    ebx,DWORD PTR [ebp-0x58]
  414504:	add    edx,0x5708f1
  41450a:	imul   edx,ebx
  41450d:	jmp    0x4168ae
  414512:	dec    eax
  414513:	pop    DWORD PTR [eax+ebx*8-0x70f72485]
  41451a:	lea    ebx,[eax-0x3a]
  41451d:	push   edi
  41451e:	lock hlt 
  414520:	(bad)  
  414521:	cmp    ah,BYTE PTR ds:[esi+0x7d]
  414525:	jp     0x414525
  414527:	pop    edi
  414528:	jp     0x4145a4
  41452a:	arpl   WORD PTR [esi+0x7fca3a39],si
  414530:	push   ebp
  414531:	int3   
  414532:	ret    0x91b4
  414535:	jp     0x41452e
  414537:	cmp    BYTE PTR [eax-0x45],bl
  41453a:	out    0xc7,eax
  41453c:	jmp    0x414588
  41453e:	fs dec esp
  414540:	push   ebx
  414541:	inc    ebp
  414542:	and    ecx,DWORD PTR [eax]
  414544:	push   cs
  414545:	xor    ebp,DWORD PTR [edi-0x1cda8eb2]
  41454b:	push   ecx
  41454c:	sbb    eax,0x37dd99bc
  414551:	aad    0x2e
  414553:	ins    BYTE PTR es:[edi],dx
  414554:	jmp    0x414560
  414556:	nop
  414557:	adc    bh,BYTE PTR ds:0xa053da41
  41455d:	in     eax,0xd6
  41455f:	pop    ebp
  414560:	push   0x15191a43
  414565:	mov    edi,0x809a687a
  41456a:	dec    ebp
  41456b:	add    bl,bl
  41456d:	xchg   ebp,eax
  41456e:	shl    DWORD PTR ds:0x637de589,cl
  414574:	ret    0xaff0
  414577:	pushf  
  414578:	test   ch,bh
  41457a:	(bad)  
  41457b:	push   0xa5fc180a
  414580:	mov    cl,BYTE PTR [eax+ecx*8+0x48]
  414584:	arpl   WORD PTR [edi-0x39],bp
  414587:	imul   eax,DWORD PTR [edx],0x33
  41458a:	or     cl,cl
  41458c:	int    0x1b
  41458e:	mov    al,0xe8
  414590:	out    dx,al
  414591:	adc    bh,dh
  414593:	pushf  
  414594:	je     0x4145ca
  414596:	iret   
  414597:	mov    esp,0x4a8def1c
  41459c:	ss loope 0x414570
  41459f:	push   ecx
  4145a0:	out    0x18,eax
  4145a2:	(bad)  
  4145a3:	lahf   
  4145a4:	fstp   QWORD PTR [edi-0x55]
  4145a7:	cmc    
  4145a8:	cld    
  4145a9:	cmp    al,0x86
  4145ab:	les    ecx,FWORD PTR [ecx+esi*8]
  4145ae:	jo     0x41459f
  4145b0:	add    DWORD PTR [ecx-0x2b7801ba],eax
  4145b6:	cs (bad) 
  4145b8:	repnz cmp DWORD PTR [ebx],edx
  4145bb:	in     eax,0x5c
  4145bd:	loopne 0x4145a5
  4145bf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4145c0:	fstp   DWORD PTR [edx+0x3129cf13]
  4145c6:	retf   0x1a14
  4145c9:	jle    0x4145be
  4145cb:	fiadd  WORD PTR [esi+0x1379945f]
  4145d1:	iret   
  4145d2:	mov    dl,0x8b
  4145d4:	aad    0xda
  4145d6:	in     eax,dx
  4145d7:	(bad)  
  4145d8:	out    dx,al
  4145d9:	call   0xace8a944
  4145de:	jnp    0x4145ad
  4145e0:	push   ecx
  4145e1:	(bad)  
  4145e2:	jmp    0x414581
  4145e4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4145e5:	arpl   WORD PTR [esi],dx
  4145e7:	jmp    0xb49e:0xa2977752
  4145ee:	fidivr DWORD PTR [ecx]
  4145f0:	iret   
  4145f1:	mov    ebp,0x7ba8ba7f
  4145f6:	or     eax,0x921b5fe2
  4145fb:	ret    0x57b
  4145fe:	sbb    ebp,DWORD PTR [ecx-0xd]
  414601:	xchg   ebp,eax
  414602:	call   0xe426:0xde063b49
  414609:	rcr    BYTE PTR [ecx-0x43],1
  41460c:	rcl    DWORD PTR [eax+0x1d082595],1
  414612:	loopne 0x414659
  414614:	xchg   ebx,eax
  414615:	rol    DWORD PTR [esp+edi*8-0x1c],0x91
  41461a:	push   0x64
  41461c:	in     al,0xfd
  41461e:	test   al,0x15
  414620:	leave  
  414621:	mov    ah,0xbf
  414623:	js     0x4146a4
  414625:	cmp    dl,dh
  414627:	fcom   QWORD PTR ds:0x87f0977b
  41462d:	(bad)  
  41462e:	adc    esp,DWORD PTR ds:0xe7513b29
  414634:	dec    edx
  414635:	cmp    al,0x98
  414637:	add    DWORD PTR [edx],esp
  414639:	fiadd  DWORD PTR [ebx+ebp*4]
  41463c:	and    BYTE PTR [edi+0x12],dl
  41463f:	jno    0x41460f
  414641:	out    dx,eax
  414642:	mov    WORD PTR [esi+eiz*4],cs
  414645:	int    0xa9
  414647:	mov    eax,0xc768f4f4
  41464c:	jnp    0x414694
  41464e:	add    DWORD PTR [edx+0x30],eax
  414651:	jmp    0xabf3:0xfc065de1
  414658:	ins    DWORD PTR es:[edi],dx
  414659:	fdivr  DWORD PTR ds:0x4398e8a4
  41465f:	jae    0x41464f
  414661:	sub    eax,0x9b63e692
  414666:	aaa    
  414667:	cld    
  414668:	out    0xff,al
  41466a:	cmp    al,0xe3
  41466c:	adc    al,0xb4
  41466e:	fscale 
  414670:	pop    eax
  414671:	in     al,dx
  414672:	mov    esp,0x83f3ac40
  414677:	sbb    ah,ah
  414679:	int    0xbd
  41467b:	outs   dx,DWORD PTR ds:[esi]
  41467c:	mov    ds:0x877a71f8,eax
  414681:	pop    ebx
  414682:	or     dl,BYTE PTR [ebp+0x11]
  414685:	xlat   BYTE PTR ds:[ebx]
  414686:	(bad)  
  414687:	jp     0x414623
  414689:	stc    
  41468a:	sbb    BYTE PTR [edi+0x20],bh
  41468d:	test   eax,0x6caddb52
  414692:	mov    cl,0xd6
  414694:	sbb    esp,DWORD PTR [edx]
  414696:	push   eax
  414697:	ficom  DWORD PTR [ebp+esi*2+0x36]
  41469b:	test   al,0x10
  41469d:	xchg   DWORD PTR [edx],ecx
  41469f:	mov    esp,0x57a5b55e
  4146a4:	adc    BYTE PTR [edi+ebx*8-0x43],dl
  4146a8:	add    esi,DWORD PTR [edx+ebp*1-0x1d]
  4146ac:	xchg   esi,eax
  4146ad:	test   BYTE PTR [ecx+ebp*8-0x6f68f9f3],0xec
  4146b5:	(bad)  
  4146b6:	cld    
  4146b7:	push   ecx
  4146b8:	jbe    0x4146ac
  4146ba:	or     ch,BYTE PTR [eax+0x1226b4ff]
  4146c0:	dec    ebp
  4146c1:	mov    eax,0xd327db24
  4146c6:	or     bh,BYTE PTR [edi+ecx*1-0x57949b9]
  4146cd:	sar    BYTE PTR [esp+ebx*8-0x7b73fa20],1
  4146d4:	adc    al,BYTE PTR [esi]
  4146d6:	inc    edx
  4146d7:	sub    BYTE PTR [ebx+0x5e0952ad],0x1d
  4146de:	jl     0x4146ad
  4146e0:	inc    ecx
  4146e2:	mov    edi,0x6203f2c2
  4146e7:	or     cl,ch
  4146e9:	leave  
  4146ea:	dec    esp
  4146eb:	mov    bl,0xc3
  4146ed:	out    0x1d,eax
  4146ef:	icebp  
  4146f0:	jmp    0x57db4cee
  4146f5:	sub    bh,BYTE PTR [eax-0x10]
  4146f8:	add    al,0x60
  4146fa:	popa   
  4146fb:	jg     0x414730
  4146fd:	inc    ecx
  4146fe:	shr    DWORD PTR ds:0xbb3c6ac,cl
  414704:	sahf   
  414705:	cmp    BYTE PTR [ecx],0x2
  414708:	out    0x14,eax
  41470a:	jl     0x4146ea
  41470c:	mov    ebx,DWORD PTR [ebx]
  41470e:	mov    ah,0x89
  414710:	cld    
  414711:	icebp  
  414712:	retf   
  414713:	sub    eax,0x36236551
  414718:	iret   
  414719:	bound  ecx,QWORD PTR [edx+0xf]
  41471c:	dec    edi
  41471d:	into   
  41471e:	add    eax,0x9ad23984
  414723:	lds    esi,FWORD PTR [ebx+eax*1-0x58]
  414727:	shl    DWORD PTR [eax-0x7e],0x25
  41472b:	sub    DWORD PTR [ecx+0x37],0xfd696490
  414732:	cs enter 0x1df4,0x2d
  414737:	(bad)  
  414738:	fidivr DWORD PTR [ebx]
  41473a:	dec    ebx
  41473b:	jg     0x414779
  41473d:	mov    DWORD PTR [ebp+ebx*2+0x17d94e26],esp
  414744:	xchg   BYTE PTR [ebx+0x7d],dh
  414747:	popf   
  414748:	dec    ebp
  414749:	aas    
  41474a:	adc    BYTE PTR [ebx+0xb],ch
  41474d:	xchg   esi,eax
  41474e:	pop    ds
  41474f:	mov    al,ds:0xe5f1029f
  414754:	shr    bh,1
  414756:	xor    al,0x9f
  414758:	int3   
  414759:	inc    edi
  41475a:	jmp    0x5820:0xf4cf18f5
  414761:	add    esp,DWORD PTR [ecx-0xc]
  414764:	sbb    eax,0x3bdbd53f
  414769:	fincstp 
  41476b:	mov    dh,0xcb
  41476d:	stos   DWORD PTR es:[edi],eax
  41476e:	(bad)  
  41476f:	in     eax,dx
  414770:	rol    DWORD PTR [esi+eax*2-0x1e],1
  414774:	mov    ebx,DWORD PTR [ecx]
  414776:	fnstenv [ebp-0x314b991b]
  41477c:	popf   
  41477d:	xor    eax,0x89d9b02b
  414782:	xor    eax,0xeb5297
  414787:	jecxz  0x414751
  414789:	in     eax,0xe7
  41478b:	jmp    0xad681bcc
  414790:	(bad)  
  414791:	in     eax,0x8a
  414793:	loopne 0x4147f9
  414795:	cs addr16 jmp 0x6cee:0x722e88d3
  41479e:	mov    ss,WORD PTR [esi+0x4f]
  4147a1:	mov    bh,dh
  4147a3:	sbb    al,0x2f
  4147a5:	fldcw  WORD PTR [ebx-0x37aa2ee4]
  4147ab:	out    dx,eax
  4147ac:	mov    ebp,0xc5ec7081
  4147b1:	pop    es
  4147b2:	repnz ins BYTE PTR es:[edi],dx
  4147b4:	test   eax,0x6c5b6d37
  4147b9:	nop
  4147ba:	push   ebp
  4147bb:	mul    DWORD PTR [ebx+0xf]
  4147be:	clc    
  4147bf:	jge    0x414759
  4147c1:	(bad)  [ebx+0x8f1a590]
  4147c7:	push   edi
  4147c8:	jl     0x4147a1
  4147ca:	sbb    eax,0x611e20ca
  4147cf:	and    edx,DWORD PTR [edx]
  4147d1:	test   al,0xf5
  4147d3:	ins    BYTE PTR es:[edi],dx
  4147d4:	es mov ah,0x21
  4147d7:	xor    DWORD PTR [ecx],edi
  4147d9:	mov    eax,0x516a18a9
  4147de:	inc    esp
  4147df:	add    dl,0xd0
  4147e2:	or     al,0xff
  4147e4:	inc    ecx
  4147e5:	mov    cs,WORD PTR [ecx]
  4147e7:	push   esi
  4147e8:	sub    BYTE PTR [edx-0x22],bl
  4147eb:	xchg   ecx,eax
  4147ec:	mov    dh,0x19
  4147ee:	sbb    DWORD PTR [ebx-0x68],ebp
  4147f1:	inc    edi
  4147f2:	inc    edx
  4147f3:	ss mov bl,0xc0
  4147f6:	pop    esp
  4147f7:	mov    cl,ah
  4147f9:	in     al,0x6e
  4147fb:	xchg   esi,eax
  4147fc:	leave  
  4147fd:	inc    edi
  4147fe:	and    BYTE PTR [esp+eax*4+0x74],bh
  414802:	int3   
  414803:	ja     0x414827
  414805:	mov    edx,0x254e968b
  41480a:	mov    cl,0x9c
  41480c:	mov    al,0xfe
  41480e:	mov    ecx,0xca5ac127
  414813:	sbb    al,0xf
  414815:	push   es
  414816:	mov    ds:0x404af1e9,al
  41481b:	jmp    0x429d:0x32f1b25c
  414822:	rcr    BYTE PTR [ebp-0x4f],0x48
  414826:	fnstsw WORD PTR [eax+0x2d]
  414829:	push   0x4430ca0
  41482e:	add    esi,esp
  414830:	mov    bh,0x76
  414832:	xadd   DWORD PTR [ecx],edx
  414835:	or     DWORD PTR [esi+0x25],edx
  414838:	das    
  414839:	test   BYTE PTR [esp+eiz*2+0x2f56e413],cl
  414840:	mov    ebx,0x5a191c30
  414845:	or     DWORD PTR ds:0x9668106c,ebx
  41484b:	jg     0x41482f
  41484d:	sbb    DWORD PTR [eax+0x7f],eax
  414850:	push   esi
  414851:	cmc    
  414852:	and    edi,DWORD PTR [edi]
  414854:	sbb    DWORD PTR [edi],ebp
  414856:	push   0x19094b09
  41485b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41485c:	inc    edi
  41485d:	jg     0x414841
  41485f:	call   0x1dc65d75
  414864:	test   eax,0x2655aa7e
  414869:	or     ebp,ecx
  41486b:	xchg   ecx,eax
  41486c:	stos   BYTE PTR es:[edi],al
  41486d:	cmp    eax,0xbe73e1e3
  414872:	repnz (bad) 
  414874:	mov    eax,0x86f3baa3
  414879:	mov    ax,0x56fc
  41487d:	cs jge 0x414893
  414880:	mov    ds,WORD PTR [edi]
  414882:	pop    eax
  414883:	cdq    
  414884:	cld    
  414885:	test   BYTE PTR [esi+0x5a],0xa8
  414889:	mov    al,ds:0x199a68f0
  41488e:	and    eax,0x3991905
  414893:	test   eax,0x2aa012e3
  414898:	or     al,0x78
  41489a:	(bad)  
  41489b:	jecxz  0x414893
  41489d:	add    BYTE PTR [ecx+0xf3f24c6],bh
  4148a3:	pop    esp
  4148a4:	cmp    DWORD PTR [edi*8+0x51dcfddb],ebx
  4148ab:	inc    esi
  4148ac:	int3   
  4148ad:	dec    esi
  4148ae:	dec    eax
  4148af:	test   eax,0x196ea1d5
  4148b4:	(bad)  
  4148b5:	out    dx,eax
  4148b6:	xor    BYTE PTR [ecx+0x2e45b7f2],0xcd
  4148bd:	push   ebx
  4148be:	inc    esp
  4148bf:	sbb    BYTE PTR [eax],0x68
  4148c2:	inc    esp
  4148c3:	jmp    0x221c:0xe1e2bcc8
  4148ca:	ret    
  4148cb:	rcl    BYTE PTR [edi-0x38],0xb9
  4148cf:	in     eax,0x18
  4148d1:	loopne 0x4148e5
  4148d3:	sub    eax,0xa3649693
  4148d8:	out    0x7c,al
  4148da:	dec    ebp
  4148db:	mov    bh,0x61
  4148dd:	dec    edx
  4148de:	mov    ecx,0xa0771c27
  4148e3:	inc    edx
  4148e4:	adc    BYTE PTR [ebx+eiz*2-0x56],dl
  4148e8:	jmp    0x19a4a066
  4148ed:	mov    edx,0xaa011af5
  4148f2:	sti    
  4148f3:	jb     0x41495d
  4148f5:	nop
  4148f6:	xchg   BYTE PTR [eax+edx*2+0x2bac14a5],bh
  4148fd:	xor    BYTE PTR [bx+si-0x7270],ch
  414902:	xchg   ecx,eax
  414903:	sbb    BYTE PTR [ecx],bl
  414905:	mov    bl,0xae
  414907:	sbb    DWORD PTR [edi-0x3696dd4d],eax
  41490d:	jno    0x4148d7
  41490f:	cmc    
  414910:	mov    bl,0xb6
  414912:	lods   al,BYTE PTR ds:[esi]
  414913:	jbe    0x414896
  414915:	inc    edi
  414916:	enter  0xfbad,0xd0
  41491a:	mov    dl,0xb9
  41491c:	mov    ds:0x465c143b,eax
  414921:	and    BYTE PTR [eax-0x25],0x81
  414925:	xchg   esi,eax
  414926:	dec    esp
  414927:	loop   0x4149a0
  414929:	popf   
  41492a:	enter  0xcab0,0x51
  41492e:	jle    0x414996
  414930:	mov    edx,0x9ea5e4e1
  414935:	stos   DWORD PTR es:[edi],eax
  414936:	cdq    
  414937:	dec    ebp
  414938:	imul   ch
  41493a:	bound  esp,QWORD PTR [edi+0x2a]
  41493d:	pusha  
  41493e:	dec    BYTE PTR [ebx+0x3e65c4d4]
  414944:	mov    esp,0x285b41cb
  414949:	xchg   ebx,eax
  41494a:	pushf  
  41494b:	into   
  41494c:	or     BYTE PTR [edi-0x24],al
  41494f:	jbe    0x41499e
  414951:	fnstsw WORD PTR [eax+eax*1-0x31]
  414955:	cmp    al,0x3d
  414957:	ins    BYTE PTR es:[edi],dx
  414958:	nop
  414959:	jb     0x414929
  41495b:	sbb    edi,DWORD PTR [ecx]
  41495d:	ret    0x5caf
  414960:	stc    
  414961:	loope  0x4148f2
  414963:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414964:	pop    ss
  414965:	jecxz  0x414936
  414967:	adc    al,BYTE PTR [ebp-0x65]
  41496a:	or     al,0x43
  41496c:	scas   eax,DWORD PTR es:[edi]
  41496d:	and    al,0x72
  41496f:	out    dx,al
  414970:	push   esi
  414971:	loop   0x4149f0
  414973:	addr16 out dx,al
  414975:	mov    edx,0x60e25c88
  41497a:	inc    esi
  41497b:	fwait
  41497c:	ret    0xf1dc
  41497f:	test   ah,cl
  414981:	jle    0x414968
  414983:	adc    eax,0x7da5c874
  414988:	jae    0x414957
  41498a:	cdq    
  41498b:	in     al,dx
  41498c:	je     0x41498d
  41498e:	adc    dl,BYTE PTR [edx-0x7cfa4b8b]
  414994:	(bad)
  414997:	(bad)  
  414998:	loopne 0x41493d
  41499a:	xor    BYTE PTR ds:0xdeecc410,0x16
  4149a1:	xor    al,0xd6
  4149a3:	dec    edx
  4149a4:	in     eax,0x32
  4149a6:	stos   DWORD PTR es:[edi],eax
  4149a7:	fld    QWORD PTR [ecx]
  4149a9:	retf   0x332d
  4149ac:	xchg   ebp,eax
  4149ad:	aad    0x87
  4149af:	sbb    edx,DWORD PTR [edx-0x3388daed]
  4149b5:	cmp    ebx,esi
  4149b7:	pop    es
  4149b8:	data16 lods al,BYTE PTR ds:[esi]
  4149ba:	xor    eax,0xebb26ee0
  4149bf:	mov    esi,0xd7a53f03
  4149c4:	or     ecx,DWORD PTR [ecx+eax*8-0x6b0aa76d]
  4149cb:	rcl    DWORD PTR [esi],1
  4149cd:	loopne 0x414a00
  4149cf:	mov    dl,0xc8
  4149d1:	inc    eax
  4149d2:	(bad)  
  4149d3:	(bad)  
  4149d4:	fst    QWORD PTR [ecx+0x4a]
  4149d7:	ja     0x41499b
  4149d9:	sbb    al,0xb7
  4149db:	sahf   
  4149dc:	xor    ebx,eax
  4149de:	or     edi,DWORD PTR [eax]
  4149e0:	sbb    ebx,DWORD PTR [ebp+0xc]
  4149e3:	pop    esi
  4149e4:	sbb    ah,BYTE PTR [ecx+0x66bcdab]
  4149ea:	pusha  
  4149eb:	push   cs
  4149ec:	pop    ds
  4149ed:	(bad)  
  4149ee:	int3   
  4149ef:	jecxz  0x414a4c
  4149f1:	sub    BYTE PTR [edx-0x4b6be23],dl
  4149f7:	ja     0x414a40
  4149f9:	gs inc edx
  4149fb:	xor    eax,0x6c39f1ad
  414a00:	jnp    0x4149dc
  414a02:	sub    BYTE PTR [edi+0x3ebdaebf],dh
  414a08:	dec    edx
  414a09:	add    DWORD PTR [eax+0x3b],ebx
  414a0c:	dec    ebx
  414a0d:	sub    esi,DWORD PTR [eax-0x45]
  414a10:	mov    esi,0x2aa4e96e
  414a15:	add    eax,0xe5bfc0c5
  414a1a:	adc    esp,DWORD PTR [ecx+0x46]
  414a1d:	xchg   esp,eax
  414a1e:	jnp    0x4149ab
  414a20:	jb     0x4149a6
  414a22:	jae    0x414a37
  414a24:	mov    al,ds:0xed1d50a7
  414a29:	pop    es
  414a2a:	nop
  414a2b:	pop    edi
  414a2c:	into   
  414a2d:	cli    
  414a2e:	lock lds edi,FWORD PTR [edi+0x7ffe3000]
  414a35:	fwait
  414a36:	mov    ebx,0xd9b6701
  414a3b:	stos   BYTE PTR es:[edi],al
  414a3c:	pusha  
  414a3d:	fstp   DWORD PTR [esi-0x4cae5215]
  414a43:	stc    
  414a44:	push   edi
  414a45:	out    0xb6,eax
  414a47:	not    BYTE PTR [ebp-0x3da32c73]
  414a4d:	mov    edi,0x6c6c25bc
  414a52:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414a53:	repnz cmc 
  414a55:	and    BYTE PTR [edi],dl
  414a57:	out    0x1f,al
  414a59:	out    0xee,eax
  414a5b:	das    
  414a5c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414a5d:	mov    ah,0xd3
  414a5f:	data16 fcmovnb st,st(1)
  414a62:	retf   0x4bb5
  414a65:	les    eax,FWORD PTR [edi-0x44204501]
  414a6b:	outs   dx,DWORD PTR ds:[esi]
  414a6c:	jne    0x414ae9
  414a6e:	sbb    ah,ch
  414a70:	jae    0x4149f3
  414a72:	pop    edx
  414a73:	and    esi,DWORD PTR [edi+0x71]
  414a76:	inc    ecx
  414a77:	fs mov edx,0xb0fa753a
  414a7d:	mov    ds:0xf483bc38,eax
  414a82:	addr16 daa 
  414a84:	cld    
  414a85:	xchg   ebp,eax
  414a86:	sti    
  414a87:	mov    es,ebx
  414a89:	jnp    0x414a14
  414a8b:	lahf   
  414a8c:	dec    esi
  414a8d:	jae    0x414a6d
  414a8f:	sub    eax,0x92f440f1
  414a94:	cld    
  414a95:	cwde   
  414a96:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414a97:	jns    0x414ad2
  414a99:	mov    bh,0xf5
  414a9b:	leave  
  414a9c:	sbb    ebx,DWORD PTR ds:0x14f5b19a
  414aa2:	jmp    0x19b52470
  414aa7:	out    0xc3,eax
  414aa9:	cmp    edi,esi
  414aab:	inc    ecx
  414aac:	jo     0x414a97
  414aae:	aam    0xa0
  414ab0:	cmp    esi,DWORD PTR [esi+0x59]
  414ab3:	(bad)  
  414ab5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414ab6:	sti    
  414ab7:	mov    esi,0xd4ae33d3
  414abc:	push   ebx
  414abd:	lahf   
  414abe:	int    0x6a
  414ac0:	xchg   ebp,eax
  414ac1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414ac2:	push   edi
  414ac3:	adc    cl,dh
  414ac5:	int3   
  414ac6:	sub    eax,0x1480327b
  414acb:	pcmpgtd mm5,QWORD PTR [bp+si-0x4842]
  414ad1:	ins    BYTE PTR es:[edi],dx
  414ad2:	scas   al,BYTE PTR es:[edi]
  414ad3:	ret    0x1589
  414ad6:	jnp    0x414b54
  414ad8:	add    cl,BYTE PTR [ebp+edx*1-0x1d]
  414adc:	dec    ebp
  414add:	hlt    
  414ade:	inc    edx
  414adf:	(bad)  
  414ae0:	dec    ebp
  414ae1:	push   es
  414ae2:	rcl    BYTE PTR [eax+0x1e],0xc0
  414ae6:	cld    
  414ae7:	push   cs
  414ae8:	inc    ebx
  414ae9:	jmp    DWORD PTR [edi+edi*2+0x3fc85466]
  414af0:	push   ecx
  414af1:	push   ecx
  414af2:	or     cl,BYTE PTR [eax+eiz*1]
  414af5:	ins    BYTE PTR es:[edi],dx
  414af6:	mov    DWORD PTR [edi],esi
  414af8:	fmul   QWORD PTR [ebp+0x3f]
  414afb:	lds    ecx,FWORD PTR ds:0x8a43b93
  414b01:	div    DWORD PTR [ecx-0x37987cd5]
  414b07:	push   0xffffffd9
  414b09:	and    ebx,edx
  414b0b:	call   0xa51dbc03
  414b10:	jg     0x414aa9
  414b12:	mov    edi,DWORD PTR [bp+si]
  414b15:	iret   
  414b16:	cli    
  414b17:	sbb    DWORD PTR [eax+edx*2],0xc77eaeb5
  414b1e:	xchg   ecx,eax
  414b1f:	push   0xffffff94
  414b21:	test   ebp,edi
  414b23:	push   0xffffff85
  414b25:	pop    ss
  414b26:	int    0xbd
  414b28:	cmc    
  414b29:	loop   0x414af0
  414b2b:	jecxz  0x414ad5
  414b2d:	mov    bh,BYTE PTR [ebx-0x77]
  414b30:	sahf   
  414b31:	jne    0x414b16
  414b33:	loop   0x414bb0
  414b35:	dec    edx
  414b36:	(bad)  
  414b37:	in     eax,dx
  414b38:	jne    0x414b95
  414b3a:	call   DWORD PTR [edx+0x3a654fae]
  414b40:	(bad)
  414b44:	push   ss
  414b45:	dec    edx
  414b46:	push   ebp
  414b47:	xchg   edx,eax
  414b48:	ja     0x414ae2
  414b4a:	mov    al,0xf5
  414b4c:	call   0x4f8f:0x2612e93a
  414b53:	lock xchg BYTE PTR [eax+0x53646ee6],dh
  414b5a:	sub    eax,0x7dd826ce
  414b5f:	mov    edx,0x18cef548
  414b64:	dec    eax
  414b65:	mov    dl,0x5a
  414b67:	(bad)  
  414b68:	test   al,0x5c
  414b6a:	lahf   
  414b6b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414b6c:	(bad)  [esi+edi*4-0x3232d065]
  414b73:	fs jno 0x414b48
  414b76:	pusha  
  414b77:	pop    edi
  414b78:	mov    ecx,0xdc7ce973
  414b7d:	mov    edx,0xc3f5cc55
  414b82:	mov    al,0x1b
  414b84:	xchg   esi,eax
  414b85:	jp     0x414b24
  414b87:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414b88:	push   esp
  414b89:	xchg   ebp,eax
  414b8a:	and    DWORD PTR [esi+0x2992d4a4],0xffffff98
  414b91:	xor    ebx,edi
  414b93:	jne    0x414ba9
  414b95:	ret    
  414b96:	adc    ebp,DWORD PTR [ecx]
  414b98:	scas   al,BYTE PTR es:[edi]
  414b99:	jb     0x414b89
  414b9b:	mov    ch,0x95
  414b9d:	fmulp  st(4),st
  414b9f:	and    esi,eax
  414ba1:	push   edx
  414ba2:	ret    0xf9f9
  414ba5:	retf   0x32b3
  414ba8:	xor    eax,0x7798539d
  414bad:	push   ds
  414bae:	or     ch,al
  414bb0:	hlt    
  414bb1:	out    0xe,al
  414bb3:	mov    ah,0x3c
  414bb5:	shl    DWORD PTR [ebp+0x5f9e78a5],0x35
  414bbc:	fmul   DWORD PTR [esi]
  414bbe:	(bad)  
  414bbf:	push   esi
  414bc0:	pop    ds
  414bc1:	imul   edx,DWORD PTR [esi],0x1ee14785
  414bc7:	jg     0x414b4e
  414bc9:	and    eax,0xd49e4d7c
  414bce:	arpl   WORD PTR [ebp+esi*8-0x7ee374b0],dx
  414bd5:	inc    eax
  414bd6:	mov    esp,0xe46c282b
  414bdb:	aam    0xb0
  414bdd:	imul   eax,DWORD PTR [esi+0x4b2ab4ab],0x18c7405c
  414be7:	jmp    0x414b6b
  414be9:	fist   DWORD PTR [ecx-0x7]
  414bec:	fisubr WORD PTR [ecx]
  414bee:	iret   
  414bef:	idiv   DWORD PTR [eax]
  414bf1:	out    0xf1,al
  414bf3:	enter  0x2477,0xba
  414bf7:	jnp    0x414bf7
  414bf9:	leave  
  414bfa:	jnp    0x414c6d
  414bfc:	sbb    BYTE PTR [ecx+0x71],dl
  414bff:	sahf   
  414c00:	scas   eax,DWORD PTR es:[edi]
  414c01:	ror    BYTE PTR [ebp+0x7],1
  414c04:	inc    ebx
  414c05:	sahf   
  414c06:	loopne 0x414bdf
  414c08:	mov    edi,0x96f39173
  414c0d:	ins    BYTE PTR es:[edi],dx
  414c0e:	addr16 sar ebp,0xcb
  414c12:	push   cs
  414c13:	test   eax,ebp
  414c15:	jns    0x414bbb
  414c17:	popa   
  414c18:	jnp    0x414c27
  414c1a:	pop    eax
  414c1b:	cld    
  414c1c:	lds    edi,FWORD PTR [esi]
  414c1e:	aad    0xbb
  414c20:	sub    dh,BYTE PTR [esi]
  414c22:	scas   eax,DWORD PTR es:[edi]
  414c23:	fcomi  st,st(7)
  414c25:	xor    al,BYTE PTR ds:0x4815d1a
  414c2b:	or     eax,0xf7eddc03
  414c30:	mov    BYTE PTR [ecx+0x5496fa60],dh
  414c36:	ret    0xd46c
  414c39:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414c3a:	jecxz  0x414bf7
  414c3c:	scas   eax,DWORD PTR es:[edi]
  414c3d:	test   DWORD PTR [eax],esi
  414c3f:	ins    DWORD PTR es:[edi],dx
  414c40:	jne    0x414c22
  414c42:	lahf   
  414c43:	mov    edi,0xee32036e
  414c48:	sbb    BYTE PTR [esi+0x63857146],ah
  414c4e:	inc    ebx
  414c4f:	test   BYTE PTR ds:0x343dcf75,cl
  414c55:	lock or dh,BYTE PTR [ecx-0x4f]
  414c59:	jns    0x414ccc
  414c5b:	cmp    eax,0xab97401f
  414c60:	out    dx,eax
  414c61:	cmp    BYTE PTR [ebx+0x17],ah
  414c64:	arpl   WORD PTR [edx],dx
  414c66:	fist   WORD PTR [edx+0x4a]
  414c69:	lods   al,BYTE PTR ds:[esi]
  414c6a:	add    edi,DWORD PTR [ebx+eax*8+0x2cbc5b2e]
  414c71:	lea    edi,[ebx]
  414c73:	adc    eax,0x4b20d549
  414c78:	fs ins BYTE PTR es:[edi],dx
  414c7a:	fwait
  414c7b:	clc    
  414c7c:	outs   dx,DWORD PTR ds:[esi]
  414c7d:	jg     0x414cd7
  414c7f:	mov    dh,0x1a
  414c81:	sahf   
  414c82:	ret    0x774a
  414c85:	mov    al,ds:0xe71473d5
  414c8a:	or     DWORD PTR [ecx],esp
  414c8c:	fs jl  0x414c33
  414c8f:	sub    BYTE PTR [ebp-0x56d57efa],0x99
  414c96:	push   ds
  414c97:	imul   bx,WORD PTR [eax+0x5eb314ea],0xffb6
  414c9f:	fwait
  414ca0:	aaa    
  414ca1:	cld    
  414ca2:	sbb    ebp,DWORD PTR [eax+0xb2459cb]
  414ca8:	cmp    bh,BYTE PTR [edx+0x3db987c4]
  414cae:	pop    ecx
  414caf:	cli    
  414cb0:	aas    
  414cb1:	pop    esp
  414cb2:	loopne 0x414c50
  414cb4:	mov    BYTE PTR [ecx+ebp*2-0x4a],0x86
  414cb9:	lds    eax,FWORD PTR [ebp+0x61]
  414cbc:	call   0x9629:0x262f2211
  414cc3:	mov    ecx,0xd9f94930
  414cc8:	fsub   st(6),st
  414cca:	in     eax,dx
  414ccb:	test   eax,0x7d1ff111
  414cd0:	sub    al,0x27
  414cd2:	test   dh,bl
  414cd4:	outs   dx,DWORD PTR ds:[esi]
  414cd5:	jae    0x414d35
  414cd7:	cld    
  414cd8:	mov    ecx,0xc71677c0
  414cdd:	test   DWORD PTR [ebx+edx*1],0x9381017
  414ce4:	into   
  414ce5:	mov    dh,0xe3
  414ce7:	jg     0x414d63
  414ce9:	xchg   esp,edx
  414ceb:	and    dl,BYTE PTR [esi-0x642e9c3b]
  414cf1:	out    0xe2,eax
  414cf3:	enter  0xda81,0xd9
  414cf7:	mov    ah,0x8a
  414cf9:	fxam   
  414cfb:	les    edi,FWORD PTR [edx-0x7537aae4]
  414d01:	xchg   esp,eax
  414d02:	clc    
  414d03:	ins    BYTE PTR es:[edi],dx
  414d04:	in     eax,dx
  414d05:	jge    0x414ca1
  414d07:	jbe    0x414d33
  414d09:	bound  edi,QWORD PTR [ebx+0x5bc5cfb3]
  414d0f:	mov    edx,0x95f5d81f
  414d14:	pop    eax
  414d15:	mov    al,0xb5
  414d17:	sbb    eax,esp
  414d19:	inc    eax
  414d1a:	mov    ah,0x98
  414d1c:	gs dec esp
  414d1e:	inc    eax
  414d1f:	xchg   BYTE PTR [ebp+0x442ebd0e],dh
  414d25:	test   eax,0x811e4a8b
  414d2a:	popf   
  414d2b:	repnz and DWORD PTR [esp+esi*1+0x1f6d7883],0x64
  414d34:	neg    BYTE PTR [edx-0x6046749c]
  414d3a:	dec    ebx
  414d3b:	mov    eax,ds:0x653cfead
  414d40:	cmps   BYTE PTR es:[esi],BYTE PTR es:[edi]
  414d42:	stos   DWORD PTR es:[edi],eax
  414d43:	ficom  WORD PTR [eax+eiz*1]
  414d46:	mov    edx,0x916ccf7f
  414d4b:	dec    eax
  414d4c:	data16 in al,dx
  414d4e:	xchg   edi,eax
  414d4f:	jno    0x414cd8
  414d51:	cli    
  414d52:	sbb    edi,DWORD PTR ds:0xd150d292
  414d58:	inc    esp
  414d59:	in     al,dx
  414d5a:	hlt    
  414d5b:	adc    eax,0xf7f922e4
  414d60:	fld    DWORD PTR [edx]
  414d62:	sub    esp,esp
  414d64:	(bad)  [edi]
  414d66:	rcr    dl,0xad
  414d69:	stos   DWORD PTR es:[edi],eax
  414d6a:	lock xchg ebp,eax
  414d6c:	and    BYTE PTR [edx-0x3be8259],0x95
  414d73:	aad    0xda
  414d75:	and    al,0xfe
  414d77:	jno    0x414d13
  414d79:	aam    0x51
  414d7b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414d7c:	mov    al,ds:0xb8a1f4bd
  414d81:	jno    0x414d44
  414d83:	dec    edx
  414d84:	in     al,dx
  414d85:	push   0xeef5be73
  414d8a:	gs ficom DWORD PTR es:[edi-0x7a2c1cda]
  414d92:	(bad)  
  414d93:	ret    0x6bf5
  414d96:	adc    DWORD PTR [eax+ebx*2],esp
  414d99:	jne    0x414dd1
  414d9b:	sar    DWORD PTR [esp+esi*8-0x1322fb6e],cl
  414da2:	xchg   esp,eax
  414da3:	mov    dh,0x9c
  414da5:	push   ebx
  414da6:	(bad)  
  414da8:	inc    edx
  414da9:	pop    edx
  414daa:	mov    ebx,0x9e8332d1
  414daf:	ds mov edx,0xd841362f
  414db5:	es adc ebp,eax
  414db8:	sub    DWORD PTR [edi-0x4a],edx
  414dbb:	cld    
  414dbc:	stos   BYTE PTR es:[edi],al
  414dbd:	and    eax,0xb3929ab
  414dc2:	cmp    esi,DWORD PTR [ecx+ebx*8+0x3c]
  414dc6:	and    eax,0xf6f612d5
  414dcb:	aaa    
  414dcc:	jno    0x414e49
  414dce:	nop
  414dcf:	call   0xe2ea:0x73db4e9
  414dd6:	aam    0x5b
  414dd8:	cdq    
  414dd9:	shr    DWORD PTR [ebx-0x2],1
  414ddc:	aam    0x3a
  414dde:	xchg   ebx,eax
  414ddf:	mov    ebx,0xc5247e0
  414de4:	sbb    al,0xd1
  414de6:	clc    
  414de7:	mov    cl,0xf
  414de9:	repnz (bad) 
  414dec:	je     0x414e66
  414dee:	pop    esi
  414def:	es xchg esp,eax
  414df1:	ss loop 0x414e40
  414df4:	sub    BYTE PTR [esi+0x5e],bl
  414df7:	push   esp
  414df8:	ins    BYTE PTR es:[edi],dx
  414df9:	dec    esi
  414dfa:	and    eax,0x5b490eba
  414dff:	pop    eax
  414e00:	fstp   TBYTE PTR es:[ebx-0x2d38b68c]
  414e07:	(bad)
  414e0c:	dec    ebp
  414e0d:	ja     0x414e23
  414e0f:	fidivr WORD PTR [eax-0x37]
  414e12:	hlt    
  414e13:	ins    BYTE PTR es:[edi],dx
  414e14:	mov    ch,BYTE PTR [ebx+ecx*8]
  414e17:	add    ah,bh
  414e19:	jns    0x414e78
  414e1b:	js     0x414de6
  414e1d:	fsubp  st(1),st
  414e1f:	mov    cl,0x2d
  414e21:	dec    eax
  414e22:	xchg   edx,eax
  414e23:	fisttp QWORD PTR [ebx]
  414e25:	or     eax,0xa598e673
  414e2a:	fs xchg ecx,eax
  414e2c:	popa   
  414e2d:	push   esp
  414e2e:	pop    ss
  414e2f:	sub    DWORD PTR [eax+0x22002f55],esp
  414e35:	cs repz in eax,0x85
  414e39:	stos   BYTE PTR es:[edi],al
  414e3a:	hlt    
  414e3b:	sahf   
  414e3c:	sub    BYTE PTR [ebp+0x6],0xfe
  414e40:	aad    0x61
  414e42:	arpl   WORD PTR [ebp+0x70],sp
  414e45:	push   0xb08a2444
  414e4a:	jge    0x414e5b
  414e4c:	cmp    al,0xed
  414e4e:	ret    0xa099
  414e51:	sbb    ah,BYTE PTR [eax+0x1d]
  414e54:	pusha  
  414e55:	adc    eax,0x6843deaa
  414e5a:	sub    BYTE PTR [ebp+0x197498de],0xf8
  414e61:	dec    esp
  414e62:	push   0xffffffa0
  414e64:	lock mov esi,0x7c21b55b
  414e6a:	pop    DWORD PTR [ecx+0x254c59e9]
  414e70:	out    0x5e,eax
  414e72:	jp     0x414eac
  414e74:	into   
  414e75:	xor    eax,0x1d590abc
  414e7a:	xchg   ecx,eax
  414e7b:	gs je  0x414ec3
  414e7e:	pop    esp
  414e7f:	inc    ebx
  414e80:	adc    BYTE PTR [edx-0x33],bh
  414e83:	cmc    
  414e84:	out    dx,al
  414e85:	jbe    0x414eb8
  414e87:	sub    BYTE PTR [edi],0x6
  414e8a:	lea    ebp,[ebx+0x79a3d2ba]
  414e90:	aaa    
  414e91:	sbb    al,0x1
  414e93:	das    
  414e94:	lea    edi,[ebp+0x54]
  414e97:	xlat   BYTE PTR ds:[bx]
  414e99:	mov    ebp,0xe83e0c12
  414e9e:	mov    esi,0xa164afb
  414ea3:	inc    esp
  414ea4:	add    al,0x1c
  414ea6:	adc    ecx,DWORD PTR [edx-0x1a]
  414ea9:	call   0xb639:0x5e7fdf68
  414eb0:	xchg   BYTE PTR [edx+0x4f694edb],bl
  414eb6:	jle    0x414e51
  414eb8:	in     eax,dx
  414eb9:	iret   
  414eba:	outs   dx,DWORD PTR ds:[esi]
  414ebb:	mov    ch,0x32
  414ebd:	jle    0x414e4e
  414ebf:	fadd   QWORD PTR gs:[esi+0x1e46845f]
  414ec6:	imul   esp,DWORD PTR [edi-0x5e],0x36
  414eca:	(bad)  
  414ecb:	lock test BYTE PTR [ecx],ch
  414ece:	sub    eax,0xd524690c
  414ed3:	clc    
  414ed4:	sbb    eax,0x3d65bb87
  414ed9:	push   esi
  414eda:	add    dh,BYTE PTR [edx+0x3a3a27ff]
  414ee0:	inc    ebx
  414ee1:	xchg   ecx,eax
  414ee2:	outs   dx,BYTE PTR ds:[esi]
  414ee3:	mov    ds:0xece4aa76,al
  414ee8:	adc    eax,0x6c5d99a9
  414eed:	push   ds
  414eee:	adc    ebp,DWORD PTR [eax+0x59f48590]
  414ef4:	inc    eax
  414ef5:	cmp    al,0x3d
  414ef7:	out    0x9e,eax
  414ef9:	stos   DWORD PTR es:[edi],eax
  414efa:	lods   eax,DWORD PTR cs:[esi]
  414efc:	shr    BYTE PTR [edx-0x6c],0x14
  414f00:	cmp    al,0x1f
  414f02:	jecxz  0x414f7b
  414f04:	dec    ebp
  414f05:	ror    BYTE PTR [ebx],0x68
  414f08:	xor    eax,0x24652a22
  414f0d:	dec    edx
  414f0e:	mov    al,BYTE PTR [ecx]
  414f10:	jo     0x414ee4
  414f12:	hlt    
  414f13:	sbb    DWORD PTR [eax-0x3dc34791],ecx
  414f19:	scas   eax,DWORD PTR es:[edi]
  414f1a:	xor    DWORD PTR [esi+esi*8],esi
  414f1d:	or     al,0xdb
  414f1f:	push   ebp
  414f20:	jmp    0xd40be11
  414f25:	outs   dx,BYTE PTR ds:[esi]
  414f26:	repz gs int 0x13
  414f2a:	sub    al,0x70
  414f2c:	and    eax,0xbd80c848
  414f31:	fstp   TBYTE PTR [esi+0x75]
  414f34:	arpl   WORD PTR [esi-0x28],di
  414f37:	repz test al,0xad
  414f3a:	mov    ebp,0x9c18e14f
  414f3f:	cmc    
  414f40:	test   eax,0x3834c07c
  414f45:	mov    ah,0x75
  414f47:	inc    ebx
  414f48:	fwait
  414f49:	int3   
  414f4a:	ins    DWORD PTR es:[edi],dx
  414f4b:	fistp  QWORD PTR [eax+0x19]
  414f4e:	add    DWORD PTR [eax-0x66],0xc955dfb1
  414f55:	out    dx,eax
  414f56:	je     0x414fa6
  414f58:	cmp    cl,0x68
  414f5b:	sbb    DWORD PTR [ecx],0xffffffcc
  414f5e:	xor    eax,0xf857270b
  414f63:	mov    cs,WORD PTR [ebp+0x55]
  414f66:	or     ecx,esi
  414f68:	push   0x943ec7cc
  414f6d:	mov    ch,0x15
  414f6f:	xchg   ebx,eax
  414f70:	sahf   
  414f71:	xchg   DWORD PTR [edx],ecx
  414f73:	stos   BYTE PTR es:[edi],al
  414f74:	adc    ah,BYTE PTR [ecx+0x19]
  414f77:	push   esi
  414f78:	arpl   di,bx
  414f7a:	inc    eax
  414f7b:	adc    al,0x4a
  414f7d:	retf   0x7ae0
  414f80:	scas   al,BYTE PTR es:[edi]
  414f81:	add    DWORD PTR [ecx+0x2414f5db],0x52d4e8fc
  414f8b:	test   eax,0x4f85099a
  414f90:	push   0xffffff8b
  414f92:	cmp    eax,esi
  414f94:	or     eax,0x363cceb3
  414f99:	pop    ebx
  414f9a:	sub    ah,BYTE PTR [edx+0x1b]
  414f9d:	xchg   BYTE PTR [esi+0x13],dl
  414fa0:	push   ecx
  414fa1:	add    BYTE PTR [edi+0xc],bl
  414fa4:	jmp    0x414fa1
  414fa6:	mov    WORD PTR ds:0x24cecb2d,ds
  414fac:	call   0xbc464588
  414fb1:	cmp    eax,DWORD PTR [edi+0x32fac5e3]
  414fb7:	outs   dx,DWORD PTR ds:[esi]
  414fb8:	sub    al,0x68
  414fba:	dec    BYTE PTR [ecx-0x7173bf31]
  414fc0:	sub    BYTE PTR [esi+0x22f1025],cl
  414fc6:	mov    DWORD PTR [edi+0x64],eax
  414fc9:	mov    eax,ds:0xca42e5bd
  414fce:	nop
  414fcf:	pop    ebx
  414fd0:	std    
  414fd1:	or     dh,BYTE PTR [edx-0x10aae3f3]
  414fd7:	xchg   bh,cl
  414fd9:	push   ecx
  414fda:	add    eax,0x78ee9232
  414fdf:	shl    bl,1
  414fe1:	adc    DWORD PTR [edx+0x3fcd8c25],ebp
  414fe7:	test   eax,0x4c7f4011
  414fec:	retf   
  414fed:	mov    WORD PTR [ecx],ss
  414fef:	jl     0x41500c
  414ff1:	shr    DWORD PTR [edx+0x3a],0x6b
  414ff5:	aaa    
  414ff6:	push   es
  414ff7:	push   edx
  414ff8:	mov    cl,0x90
  414ffa:	mov    BYTE PTR [esi+0x3d9ab0a6],bl
  415000:	inc    eax
  415001:	mov    cl,0xd4
  415003:	aaa    
  415004:	out    dx,al
  415005:	inc    edi
  415006:	adc    BYTE PTR [edx+0x49],bl
  415009:	js     0x414fb9
  41500b:	jmp    0x415032
  41500d:	inc    edx
  41500e:	jbe    0x415047
  415010:	jns    0x414ff3
  415012:	mov    edx,DWORD PTR [edi+ebp*1]
  415015:	mov    ecx,0xd4a90611
  41501a:	daa    
  41501b:	mov    esp,0x67231a32
  415020:	push   es
  415021:	andps  xmm4,XMMWORD PTR ds:0xd0f7be41
  415028:	loop   0x414ffb
  41502a:	jmp    0xc8ae:0x1d6144d
  415031:	iret   
  415032:	dec    edi
  415033:	cld    
  415034:	popf   
  415035:	out    0x52,eax
  415037:	xchg   edx,eax
  415038:	stos   BYTE PTR es:[edi],al
  415039:	xor    al,0x12
  41503b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41503c:	lods   eax,DWORD PTR ds:[esi]
  41503d:	push   0xffffff99
  41503f:	pop    es
  415040:	(bad)  
  415041:	sbb    ecx,DWORD PTR [ebx]
  415043:	push   0xdb58770e
  415048:	inc    ecx
  415049:	mov    BYTE PTR [ecx+0x7e],al
  41504c:	or     BYTE PTR gs:[ebx],cl
  41504f:	int3   
  415050:	scas   eax,DWORD PTR es:[edi]
  415051:	xchg   ebx,eax
  415052:	ret    0xe4bb
  415055:	lahf   
  415056:	pusha  
  415057:	imul   edx,ecx,0xb4c8d2c7
  41505d:	mov    al,ds:0xd1c9aa1c
  415062:	mov    ds:0x19d2cfd1,al
  415067:	mul    DWORD PTR [edi+0x516059d]
  41506d:	test   al,0x3e
  41506f:	add    al,0xf4
  415071:	mov    bh,0x39
  415073:	imul   ecx,DWORD PTR [edi+0x749e4232],0xc212009f
  41507d:	(bad)  
  41507e:	push   esi
  41507f:	div    DWORD PTR [esi+0x6bbb30b]
  415085:	add    eax,0x525974bc
  41508a:	in     eax,dx
  41508b:	test   dh,dl
  41508d:	mov    WORD PTR [edx-0x60d6bbf7],gs
  415093:	push   edi
  415094:	stos   BYTE PTR es:[edi],al
  415095:	data16 scas al,BYTE PTR es:[edi]
  415097:	mov    dl,0xab
  415099:	jg     0x41503c
  41509b:	xchg   ebp,eax
  41509c:	xchg   DWORD PTR [ebx],ebx
  41509e:	out    0xaf,eax
  4150a0:	pop    edx
  4150a1:	sbb    BYTE PTR [eax],al
  4150a3:	add    eax,0xbf977e1f
  4150a8:	ss jae 0x41504b
  4150ab:	inc    edi
  4150ac:	pop    eax
  4150ad:	adc    cl,BYTE PTR [ecx+0xdc9aa31]
  4150b3:	or     esi,eax
  4150b5:	adc    al,0xb5
  4150b7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4150b8:	pop    esi
  4150b9:	jns    0x41507e
  4150bb:	ror    DWORD PTR [edx],cl
  4150bd:	rcl    esp,0xd0
  4150c0:	jb     0x4150cd
  4150c2:	clc    
  4150c3:	fsub   QWORD PTR [ecx-0x7f]
  4150c6:	pop    ecx
  4150c7:	stos   DWORD PTR es:[edi],eax
  4150c8:	push   ds
  4150c9:	imul   ebp,DWORD PTR [eax-0x5b],0x547958e9
  4150d0:	cwde   
  4150d1:	jecxz  0x415127
  4150d3:	aas    
  4150d4:	or     ebx,ebp
  4150d6:	int3   
  4150d7:	ins    BYTE PTR es:[edi],dx
  4150d8:	inc    eax
  4150d9:	dec    ebx
  4150da:	push   ss
  4150db:	fs sub eax,0x519adf1b
  4150e1:	clc    
  4150e2:	add    al,0x96
  4150e4:	lods   eax,DWORD PTR ds:[esi]
  4150e5:	fxch   st(6)
  4150e7:	ss in  al,0x71
  4150ea:	push   cs
  4150eb:	cmc    
  4150ec:	adc    dh,ch
  4150ee:	pop    eax
  4150ef:	in     eax,0x5c
  4150f1:	mov    ebp,0x1fc9d45e
  4150f6:	addr16 push 0xb49a6a7d
  4150fc:	jmp    0x415094
  4150fe:	jmp    0x4150b1
  415100:	cmp    ah,bh
  415102:	xor    DWORD PTR [edi+0x49c5d2ee],edx
  415108:	sub    DWORD PTR [ecx-0x62],ebx
  41510b:	(bad)  
  41510c:	push   0xed618a21
  415111:	xchg   ecx,eax
  415112:	mov    ebp,0xac728a0c
  415117:	push   ebx
  415118:	ds in  eax,dx
  41511a:	es push es
  41511c:	lods   eax,DWORD PTR ds:[esi]
  41511d:	push   eax
  41511e:	pushfw 
  415120:	inc    ebp
  415121:	nop
  415122:	xor    eax,0x8436769d
  415127:	aam    0x2c
  415129:	call   0xc47a8a17
  41512e:	mov    esp,0x2c621c7d
  415133:	sub    bl,BYTE PTR ds:0x5db136ce
  415139:	(bad)  
  41513a:	retf   
  41513b:	shl    BYTE PTR [esi+ebp*2-0x3f06e48c],0x1d
  415143:	test   DWORD PTR [edx-0x78],ebx
  415146:	sub    esp,DWORD PTR [esi+0x5]
  415149:	stos   BYTE PTR es:[edi],al
  41514a:	outs   dx,BYTE PTR ds:[esi]
  41514b:	popa   
  41514c:	sahf   
  41514d:	dec    ebp
  41514e:	mov    edx,0x379c5738
  415153:	(bad)  
  415154:	xchg   edx,eax
  415155:	mov    eax,ds:0xb6ddd649
  41515a:	popf   
  41515b:	adc    ch,BYTE PTR [esi-0x54]
  41515e:	(bad)  [edx]
  415160:	xor    edx,edx
  415162:	ds mov eax,0x2db1be1e
  415168:	lahf   
  415169:	mov    ds:0x686f0b3a,al
  41516e:	mov    bh,dh
  415170:	fisub  DWORD PTR [edi]
  415172:	jg     0x4151d6
  415174:	cld    
  415175:	mov    eax,ds:0xc19d3190
  41517a:	test   DWORD PTR [ecx+esi*8-0x5986765f],esi
  415181:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415182:	jne    0x41518e
  415184:	int    0xc9
  415186:	cmp    BYTE PTR [ebx],ah
  415188:	xor    eax,0xce8676a9
  41518d:	cmc    
  41518e:	and    al,0xc8
  415190:	int3   
  415191:	sahf   
  415192:	sub    cl,BYTE PTR [ebx+0x71]
  415195:	jb     0x415166
  415197:	sbb    eax,0xde774d74
  41519c:	and    eax,0xb9d11895
  4151a1:	adc    ecx,ebp
  4151a3:	ret    0xfc41
  4151a6:	rol    DWORD PTR [ecx-0x43],0xd9
  4151aa:	xchg   ebp,eax
  4151ab:	outs   dx,DWORD PTR ds:[esi]
  4151ac:	lods   eax,DWORD PTR ds:[esi]
  4151ad:	ds test al,0x91
  4151b0:	jp     0x4151d4
  4151b2:	mov    eax,ds:0xb3c105e5
  4151b7:	xor    edi,DWORD PTR [edi]
  4151b9:	dec    ecx
  4151ba:	seto   BYTE PTR [ebx-0x5e]
  4151be:	stc    
  4151bf:	dec    esp
  4151c0:	or     al,0xd6
  4151c2:	test   DWORD PTR [ecx+0x3ead0832],eax
  4151c8:	cmp    eax,DWORD PTR [eax]
  4151ca:	ins    BYTE PTR es:[edi],dx
  4151cb:	mov    DWORD PTR [ecx-0x151ce7c9],0x294cd608
  4151d5:	nop
  4151d6:	xchg   esi,eax
  4151d7:	loope  0x415185
  4151d9:	sub    DWORD PTR [esi-0x3d],esp
  4151dc:	out    0xaa,al
  4151de:	lock hlt 
  4151e0:	xchg   DWORD PTR [eax],ebp
  4151e2:	dec    ebx
  4151e3:	out    dx,al
  4151e4:	xor    esp,edx
  4151e6:	out    dx,al
  4151e7:	mov    ds:0x5a4aba1e,eax
  4151ec:	(bad)  
  4151ee:	or     edi,DWORD PTR [edx+0x41]
  4151f1:	rcl    BYTE PTR [edx-0x6a],1
  4151f4:	(bad)  
  4151f5:	pop    esp
  4151f6:	je     0x41521f
  4151f8:	mov    dl,0x2a
  4151fa:	sub    esp,esp
  4151fc:	xchg   BYTE PTR [edx+0x33],dh
  4151ff:	xor    ch,cl
  415201:	(bad)  
  415202:	mov    ds:0x2c49f552,al
  415207:	pop    ss
  415208:	shr    DWORD PTR [edi],1
  41520a:	lahf   
  41520b:	jne    0x415209
  41520d:	jns    0x4151df
  41520f:	mov    ebp,0xcbb75e19
  415214:	rol    dh,cl
  415216:	in     al,0xa3
  415218:	adc    al,0xe1
  41521a:	div    DWORD PTR [ecx+ecx*2+0x69]
  41521e:	es (bad) 
  415220:	sbb    DWORD PTR [eax],edx
  415222:	fwait
  415223:	shl    DWORD PTR gs:[edx],1
  415226:	add    DWORD PTR [esi+0x18],ebx
  415229:	adc    al,0xf9
  41522b:	loope  0x41520b
  41522d:	adc    DWORD PTR [eax],ebx
  41522f:	fdiv   st,st(4)
  415231:	adc    al,0xcc
  415233:	push   0x7035523c
  415238:	out    0x26,eax
  41523a:	cdq    
  41523b:	int    0x3a
  41523d:	sub    DWORD PTR [esp+eiz*2-0x31162ac4],ecx
  415244:	into   
  415245:	jno    0x4151dd
  415247:	stos   DWORD PTR es:[edi],eax
  415248:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415249:	mov    BYTE PTR [esi],ch
  41524b:	xor    DWORD PTR [esp+eax*2],ebx
  41524e:	lahf   
  41524f:	adc    edi,esi
  415251:	ds out 0x14,al
  415254:	mov    esp,0xf3f0e6c7
  415259:	or     ax,0xb357
  41525d:	dec    ebx
  41525e:	cmp    DWORD PTR [ebp-0x3b],ebp
  415261:	inc    ebp
  415262:	mov    cl,0x42
  415264:	inc    ebx
  415265:	popf   
  415266:	data16 cli 
  415268:	push   edx
  415269:	fcom   QWORD PTR [edx-0x78b35d7b]
  41526f:	stos   DWORD PTR es:[edi],eax
  415270:	inc    ebp
  415271:	mov    BYTE PTR [edi-0x23],ch
  415274:	lock xchg BYTE PTR ds:0x9ba976d9,cl
  41527b:	js     0x415223
  41527d:	dec    esi
  41527e:	loope  0x4152a7
  415280:	sbb    eax,esi
  415282:	add    al,cl
  415284:	imul   ecx,DWORD PTR [esi],0x13628d1b
  41528a:	xor    eax,0x552a3361
  41528f:	jo     0x41523b
  415291:	inc    edx
  415292:	call   0x4c92874
  415297:	sub    eax,0x93b1b834
  41529c:	mov    ecx,0xb4c46bd6
  4152a1:	ins    DWORD PTR es:[edi],dx
  4152a2:	fnstcw WORD PTR [ebp-0x4]
  4152a5:	mov    edi,0xf6e0758f
  4152aa:	xchg   edi,eax
  4152ab:	int    0x9b
  4152ad:	jnp    0x415246
  4152af:	clc    
  4152b0:	jecxz  0x4152c0
  4152b2:	lock out 0x23,eax
  4152b5:	fistp  QWORD PTR [edi-0x76aa77a7]
  4152bb:	add    ebx,ecx
  4152bd:	lods   al,BYTE PTR ds:[esi]
  4152be:	cli    
  4152bf:	adc    al,0x76
  4152c1:	xchg   ebp,eax
  4152c2:	mov    ebx,0xa6fa4028
  4152c7:	jle    0x415312
  4152c9:	sahf   
  4152ca:	xchg   edx,eax
  4152cb:	std    
  4152cc:	sbb    di,WORD PTR [esi]
  4152cf:	cmp    eax,eax
  4152d1:	mov    al,ds:0x4f9f8a5a
  4152d6:	xor    eax,0x28036c25
  4152db:	jmp    0xb775b041
  4152e0:	(bad)  
  4152e1:	mov    al,0x65
  4152e3:	jnp    0x415318
  4152e5:	arpl   WORD PTR ds:0x961d92f1,bx
  4152eb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4152ec:	ins    BYTE PTR es:[edi],dx
  4152ed:	mov    bh,0xad
  4152ef:	jmp    0x415300
  4152f1:	push   eax
  4152f2:	rcl    BYTE PTR [edi+0x36],0xbd
  4152f6:	sbb    ch,ch
  4152f8:	dec    eax
  4152f9:	retf   
  4152fa:	outs   dx,BYTE PTR ds:[esi]
  4152fb:	arpl   WORD PTR [ebx],bp
  4152fd:	imul   ebx,DWORD PTR [ecx+0x51],0xffffffef
  415301:	sbb    al,0x21
  415303:	test   esp,0x143d94a2
  415309:	mov    ds:0x394d3d15,al
  41530e:	xchg   BYTE PTR [eax],dl
  415310:	jbe    0x415312
  415312:	mov    al,ds:0xa53a4fe5
  415317:	xchg   bl,cl
  415319:	mov    edx,0xa4d7d079
  41531e:	popf   
  41531f:	dec    eax
  415320:	dec    edx
  415321:	iret   
  415322:	ins    BYTE PTR es:[edi],dx
  415323:	jb     0x4152d4
  415325:	mov    edi,0xf0aed6e2
  41532a:	in     eax,dx
  41532b:	vmread DWORD PTR [ebp+0x45],edi
  41532f:	(bad)  
  415330:	jge    0x415375
  415332:	imul   DWORD PTR [ebp-0x36]
  415335:	xchg   edx,eax
  415336:	adc    BYTE PTR [esi-0x46192371],dl
  41533c:	aad    0xe
  41533e:	add    eax,0x3896947
  415343:	pop    ebp
  415344:	add    eax,0x6d3f55bb
  415349:	sub    edx,esi
  41534b:	stos   BYTE PTR es:[edi],al
  41534c:	js     0x4153ab
  41534e:	mov    cl,0xec
  415350:	repz push ebp
  415352:	and    esi,0x79f6d093
  415358:	stos   DWORD PTR es:[edi],eax
  415359:	aad    0x51
  41535b:	xor    al,0x91
  41535d:	call   0x8d04:0xb9fea469
  415364:	popf   
  415365:	mov    ds:0x2267a69b,al
  41536a:	push   ecx
  41536b:	lock cdq 
  41536d:	ret    0xa084
  415370:	into   
  415371:	xor    edx,DWORD PTR [edi+0x5d1ccb4e]
  415377:	jl     0x41533b
  415379:	push   ecx
  41537a:	cs jl  0x4153f2
  41537d:	or     DWORD PTR [ecx+ebx*2+0x5b8f0cf9],ebp
  415384:	push   esi
  415385:	and    al,0x6
  415387:	cld    
  415388:	call   0x2d93:0x61024a9f
  41538f:	adc    al,0x8
  415391:	int3   
  415392:	call   0x3d730c45
  415397:	mov    eax,ds:0x6e87cf9e
  41539c:	inc    edi
  41539d:	dec    ebp
  41539e:	cli    
  41539f:	mov    al,ds:0x29207d24
  4153a4:	lock xchg BYTE PTR [eax+0x4d],ah
  4153a8:	fimul  WORD PTR [eax+0x1948513b]
  4153ae:	mov    ebp,0x9e6207a2
  4153b3:	xor    DWORD PTR [esi+0x1],ebx
  4153b6:	inc    esp
  4153b7:	pushf  
  4153b8:	mov    esp,0x1de005b
  4153bd:	cmp    eax,0x592ab265
  4153c2:	or     BYTE PTR [eax+ebp*1+0x17893353],bl
  4153c9:	add    esp,DWORD PTR [esi+0x3f253d6e]
  4153cf:	mov    ecx,esi
  4153d1:	aad    0x1a
  4153d3:	adc    eax,0x8307da9f
  4153d8:	(bad)  
  4153d9:	pop    edi
  4153da:	or     eax,0xa96a98df
  4153df:	cli    
  4153e0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4153e1:	mov    ?,WORD PTR [esi]
  4153e3:	sar    BYTE PTR [ebp-0x6e],1
  4153e6:	mov    bh,0xcf
  4153e8:	lds    edi,FWORD PTR [eax+0x5ae69347]
  4153ee:	lock nop
  4153f0:	dec    esi
  4153f1:	adc    esi,edx
  4153f3:	ror    dh,cl
  4153f5:	ins    DWORD PTR es:[edi],dx
  4153f6:	shl    DWORD PTR [eax+0x4e646525],cl
  4153fc:	inc    ebx
  4153fd:	scas   eax,DWORD PTR es:[edi]
  4153fe:	lock sbb bh,ch
  415401:	enter  0xebc1,0xe4
  415405:	ins    BYTE PTR es:[edi],dx
  415406:	sahf   
  415407:	test   DWORD PTR [eax],ebx
  415409:	movshdup xmm0,xmm7
  41540d:	sub    esp,eax
  41540f:	ds push es
  415411:	stc    
  415412:	in     al,dx
  415413:	lds    ecx,FWORD PTR [edx+esi*1+0x44]
  415417:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415418:	sahf   
  415419:	inc    ebx
  41541a:	push   ebx
  41541b:	sub    esp,edx
  41541d:	mov    cl,0xc1
  41541f:	sti    
  415420:	gs push edi
  415422:	jns    0x4153ba
  415424:	push   0x61
  415426:	das    
  415427:	mov    WORD PTR [ebx],ss
  415429:	sbb    dl,BYTE PTR [edx+0x545a6e57]
  41542f:	fnstcw WORD PTR [ecx-0x692ac9cb]
  415435:	push   edx
  415436:	daa    
  415437:	arpl   WORD PTR [edx-0x4ace8895],ax
  41543d:	outs   dx,BYTE PTR ds:[esi]
  41543e:	xchg   ecx,eax
  41543f:	cmp    cl,dh
  415441:	sti    
  415442:	and    dh,BYTE PTR [edx-0x21]
  415445:	pop    esi
  415446:	cdq    
  415447:	in     eax,0x1a
  415449:	scas   al,BYTE PTR es:[edi]
  41544a:	shl    DWORD PTR [ebp+0x58],0x9b
  41544e:	cwde   
  41544f:	jne    0x41541e
  415451:	mov    edx,0x7663118c
  415456:	xchg   eax,esi
  415458:	aad    0x92
  41545a:	xor    al,0x82
  41545c:	pop    ebx
  41545d:	jnp    0x415495
  41545f:	out    dx,al
  415460:	cld    
  415461:	cmp    BYTE PTR [eax+0x69],cl
  415464:	inc    esi
  415465:	jae    0x4154c9
  415467:	pop    ebx
  415468:	sub    al,0x78
  41546a:	mov    ebp,0x851c53d
  41546f:	cmp    eax,0x343158f3
  415474:	call   0xda242e4c
  415479:	shl    DWORD PTR [edi-0x61],0xa1
  41547d:	pushf  
  41547e:	popf   
  41547f:	pop    eax
  415480:	sub    DWORD PTR [esi-0x77a9af4f],eax
  415486:	stc    
  415487:	out    0xc0,al
  415489:	test   al,0x24
  41548b:	adc    BYTE PTR [ecx-0x712a0f19],bh
  415491:	out    0x6,eax
  415493:	mov    eax,ds:0x4b647d01
  415498:	xor    eax,0x855d53c7
  41549d:	arpl   WORD PTR [edi-0xfaeeabe],di
  4154a3:	jbe    0x4154b6
  4154a5:	push   edi
  4154a6:	adc    al,0xcb
  4154a8:	inc    edx
  4154a9:	sub    BYTE PTR [ebp-0x2b],ah
  4154ac:	imul   bx,WORD PTR [eax],0x4
  4154b0:	and    ch,dl
  4154b2:	and    cl,BYTE PTR [ecx-0x27]
  4154b5:	fptan  
  4154b7:	fcmovb st,st(5)
  4154b9:	jmp    FWORD PTR [eax+ebp*2+0x3e9c7e66]
  4154c0:	dec    ebp
  4154c1:	out    0x2e,al
  4154c3:	pop    DWORD PTR ds:0x5adc0350
  4154c9:	(bad)  
  4154ca:	mov    edi,0xc2630607
  4154cf:	sbb    ah,ah
  4154d1:	jno    0x4154da
  4154d3:	js     0x415455
  4154d5:	dec    ecx
  4154d6:	dec    edx
  4154d7:	(bad)  
  4154d9:	add    ecx,DWORD PTR [edi+ebx*4-0x645d6d86]
  4154e0:	pop    eax
  4154e1:	mov    al,0x41
  4154e3:	(bad)  
  4154e4:	xor    BYTE PTR [ebp-0x49a87c81],ah
  4154ea:	(bad)  
  4154eb:	ins    DWORD PTR es:[edi],dx
  4154ec:	imul   esp,DWORD PTR [ebx+0x39],0x39
  4154f0:	or     al,0x1a
  4154f2:	clc    
  4154f3:	stos   DWORD PTR es:[edi],eax
  4154f4:	fbld   TBYTE PTR [edi]
  4154f6:	test   DWORD PTR [edi-0x80],eax
  4154f9:	or     eax,0x372811f5
  4154fe:	adc    cl,bl
  415500:	jnp    0x4154e5
  415502:	loopne 0x4154bc
  415504:	sbb    ecx,DWORD PTR [ecx+0x59e4d917]
  41550a:	mov    esi,0x2a0c4d88
  41550f:	cmp    DWORD PTR [ebp+0x23efb56e],0x82e82dff
  415519:	(bad)  
  41551a:	ret    0x5443
  41551d:	int    0x1b
  41551f:	sub    al,ah
  415521:	fs jno 0x41558a
  415524:	aad    0x12
  415526:	adc    eax,edi
  415528:	aaa    
  415529:	test   al,0x43
  41552b:	retf   
  41552c:	nop
  41552d:	bound  edx,QWORD PTR [edi-0x4369b322]
  415533:	in     al,dx
  415534:	xlat   BYTE PTR ds:[ebx]
  415535:	outs   dx,BYTE PTR ds:[esi]
  415536:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415537:	dec    esp
  415538:	test   al,0x75
  41553a:	sub    al,0x26
  41553c:	inc    edx
  41553d:	xchg   ebp,eax
  41553e:	bound  edx,QWORD PTR [ecx]
  415540:	fist   WORD PTR [ecx-0x5edb7778]
  415546:	pushf  
  415547:	fldenv ds:0x71f82677
  41554d:	adc    bh,BYTE PTR [edi+edi*8]
  415550:	pop    edx
  415551:	sub    BYTE PTR [eax-0x7e5e0d92],ah
  415557:	mov    ah,0x76
  415559:	fidivr DWORD PTR [eax+0x9a9940a]
  41555f:	call   0xbd9cd1d1
  415564:	adc    DWORD PTR [ecx+0x45e2f8a8],ecx
  41556a:	cld    
  41556b:	cwde   
  41556c:	mov    edi,0xd964ddd
  415571:	push   cs
  415572:	xor    eax,0xc299f08c
  415577:	lods   eax,DWORD PTR ds:[esi]
  415578:	dec    esi
  415579:	xchg   ebp,eax
  41557a:	mov    dl,0x56
  41557c:	rol    bh,1
  41557e:	daa    
  41557f:	mov    edi,0xb471b73f
  415584:	in     al,0x78
  415586:	cmp    BYTE PTR [edi+0x9],cl
  415589:	mov    bl,0xd0
  41558b:	stos   BYTE PTR es:[edi],al
  41558c:	nop
  41558d:	bound  esp,QWORD PTR [edx-0x48eebb5f]
  415593:	je     0x415543
  415595:	scas   eax,DWORD PTR es:[edi]
  415596:	add    al,0x18
  415598:	pop    ebx
  415599:	inc    ebx
  41559a:	push   esp
  41559b:	push   ebp
  41559c:	js     0x41553f
  41559e:	inc    ecx
  41559f:	ss jns 0x41560d
  4155a2:	mul    DWORD PTR [ebp-0x6]
  4155a5:	sbb    al,0xe2
  4155a7:	jg     0x4155b5
  4155a9:	sbb    DWORD PTR [ebx-0x74b620e6],esi
  4155af:	stc    
  4155b0:	mov    ebp,0xf53b5a3d
  4155b5:	xchg   ebx,eax
  4155b6:	inc    ecx
  4155b7:	fld    st(2)
  4155b9:	lea    edx,[ecx+0x7f600835]
  4155bf:	js     0x415630
  4155c1:	mov    es,WORD PTR [ebp-0x1]
  4155c4:	sbb    esp,edx
  4155c6:	push   edi
  4155c7:	ins    BYTE PTR es:[edi],dx
  4155c8:	cdq    
  4155c9:	repnz pop esp
  4155cb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4155cc:	xchg   ebx,eax
  4155cd:	xchg   esp,esi
  4155cf:	loopne 0x415649
  4155d1:	mov    eax,ds:0xc028b212
  4155d6:	stos   BYTE PTR es:[edi],al
  4155d7:	adc    al,0x8d
  4155d9:	dec    ebx
  4155da:	mov    ch,0xea
  4155dc:	add    BYTE PTR [ebx+0x1b],al
  4155df:	ror    eax,cl
  4155e1:	xor    ecx,ecx
  4155e3:	xor    dh,BYTE PTR [esi-0x2037d8d]
  4155e9:	out    0x95,eax
  4155eb:	int    0x93
  4155ed:	or     eax,0x719de8ba
  4155f2:	stc    
  4155f3:	imul   ebp,DWORD PTR [edi-0x271b2818],0xffffffe9
  4155fa:	ins    BYTE PTR es:[edi],dx
  4155fb:	mov    ds:0x750fe00b,eax
  415600:	leave  
  415601:	and    DWORD PTR [esp+ebp*8],0xffffffc1
  415605:	fiadd  DWORD PTR [esi-0x30bfa44d]
  41560b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41560c:	xchg   esp,eax
  41560d:	call   0xb75b:0x6d565a6d
  415614:	push   0x88af661a
  415619:	add    eax,DWORD PTR [esi+0x2d]
  41561c:	nop
  41561d:	out    dx,eax
  41561e:	jl     0x415689
  415620:	xchg   esp,eax
  415621:	inc    ebp
  415622:	mov    esi,ecx
  415624:	call   0xd009d6b6
  415629:	jg     0x4155b1
  41562b:	push   es
  41562c:	xchg   edx,eax
  41562d:	int    0x4c
  41562f:	scas   al,BYTE PTR es:[edi]
  415630:	mov    al,0xbf
  415632:	(bad)  
  415633:	pop    edx
  415634:	ja     0x4155dd
  415636:	shl    BYTE PTR [ebx+0x31],0x3f
  41563a:	es push es
  41563c:	sbb    DWORD PTR ds:0x9c02aa5f,0xffffffff
  415643:	fwait
  415644:	dec    edx
  415645:	adc    ebx,esi
  415647:	pop    es
  415648:	adc    DWORD PTR [edi+0x64],esi
  41564b:	mov    ch,BYTE PTR [ecx]
  41564d:	add    DWORD PTR [edi-0x67530632],ebx
  415653:	sub    eax,0x285ae589
  415658:	xchg   ebx,eax
  415659:	pop    edx
  41565a:	std    
  41565b:	or     al,0x52
  41565d:	aaa    
  41565e:	icebp  
  41565f:	popa   
  415660:	cmc    
  415661:	sbb    DWORD PTR [esi],esp
  415663:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415664:	sub    al,0xb1
  415666:	xchg   esi,eax
  415667:	or     ah,BYTE PTR [ebx]
  415669:	push   ss
  41566a:	mov    ds:0x2d1edb3c,eax
  41566f:	jne    0x415686
  415671:	rcr    ebp,1
  415673:	std    
  415674:	out    0xe2,al
  415676:	sub    BYTE PTR [edx+0x5fc5465f],0x35
  41567d:	adc    ah,ch
  41567f:	daa    
  415680:	stc    
  415681:	mov    cl,0x7b
  415683:	or     edx,ebx
  415685:	jmp    0x4156f4
  415687:	imul   edi,DWORD PTR [edx-0x13],0x4d87093b
  41568e:	cmp    al,0x3c
  415690:	inc    esp
  415691:	in     al,dx
  415692:	jmp    0xaa24f0eb
  415697:	les    edx,FWORD PTR gs:[ebx+edx*8]
  41569b:	sbb    al,0x41
  41569d:	es push cs
  41569f:	les    edi,FWORD PTR [ebp-0x685f8bcf]
  4156a5:	iret   
  4156a6:	push   edx
  4156a7:	push   ss
  4156a8:	test   dh,al
  4156aa:	mov    esi,0xc0a69a5e
  4156af:	xchg   esi,eax
  4156b0:	jnp    0x415705
  4156b2:	(bad)  
  4156b4:	and    BYTE PTR [esi+edi*2+0x3e3850ca],dl
  4156bb:	push   edx
  4156bc:	push   0xffffffa8
  4156be:	jns    0x4156e3
  4156c0:	mov    bl,0xf5
  4156c2:	dec    esp
  4156c3:	ret    
  4156c4:	pop    ebx
  4156c5:	loopne 0x41572a
  4156c7:	arpl   WORD PTR [ecx+0x5b46f23],si
  4156cd:	pop    eax
  4156ce:	push   esi
  4156cf:	out    0x4b,al
  4156d1:	cmp    DWORD PTR [edi-0x3e],esp
  4156d4:	sub    BYTE PTR [edx],bh
  4156d6:	enter  0x978c,0x89
  4156da:	inc    esp
  4156db:	inc    edx
  4156dc:	repnz mov al,ds:0x46bc4528
  4156e2:	xchg   esi,eax
  4156e3:	sbb    BYTE PTR [edi-0x30],dl
  4156e6:	or     dh,bl
  4156e8:	push   cs
  4156e9:	mov    cl,0x43
  4156eb:	and    DWORD PTR [esp+edx*1-0x3d],eax
  4156ef:	cmc    
  4156f0:	xchg   DWORD PTR [ebp-0x52],ebp
  4156f3:	lahf   
  4156f4:	cdq    
  4156f5:	push   esp
  4156f6:	out    dx,al
  4156f7:	mov    gs:0x8881deae,eax
  4156fd:	rcl    BYTE PTR [esi+0x42ad91f7],cl
  415703:	sbb    eax,0x83244895
  415708:	cmp    bl,BYTE PTR [ebx-0x59]
  41570b:	mov    esi,0x888923da
  415710:	daa    
  415711:	dec    esi
  415712:	cmp    dh,bl
  415714:	mov    ecx,0xb9f836dd
  415719:	add    dl,dl
  41571b:	repz sub al,ah
  41571e:	add    eax,edi
  415720:	sbb    BYTE PTR [ecx+0x591acfb],cl
  415726:	sbb    al,0x51
  415728:	aad    0x2b
  41572a:	dec    ebx
  41572b:	xor    DWORD PTR [ebp-0x4b],ebx
  41572e:	cmp    ecx,0x1a
  415731:	sub    BYTE PTR [eax],0x78
  415734:	out    dx,eax
  415735:	adc    al,BYTE PTR [eax]
  415737:	jno    0x415793
  415739:	int    0x46
  41573b:	xor    al,0x85
  41573d:	mul    esi
  41573f:	int    0x1d
  415741:	data16 sbb BYTE PTR [ecx],dh
  415744:	and    DWORD PTR [edx+0x1d],0x6
  415748:	ret    
  415749:	hlt    
  41574a:	pop    es
  41574b:	aam    0xce
  41574d:	or     eax,0x239c6a5a
  415752:	daa    
  415753:	dec    edi
  415754:	sbb    esp,DWORD PTR [ebx]
  415756:	mov    esp,0x2ae6074
  41575b:	test   eax,eax
  41575d:	aas    
  41575e:	aaa    
  41575f:	in     eax,0x7e
  415761:	and    eax,0x81ce2959
  415766:	mov    dl,0x9c
  415768:	xor    DWORD PTR [ecx-0x72],esp
  41576b:	std    
  41576c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41576d:	push   ecx
  41576e:	pop    ds
  41576f:	sbb    eax,0x96503a37
  415774:	mov    esi,0x774098c5
  415779:	call   0x977b:0x9620fab5
  415780:	int3   
  415781:	add    ch,BYTE PTR [ecx]
  415783:	add    BYTE PTR [esi-0x4644b4fe],0xc5
  41578a:	jo     0x41572f
  41578c:	fcmove st,st(0)
  41578e:	outs   dx,BYTE PTR ds:[esi]
  41578f:	adc    edx,edx
  415791:	and    ch,cl
  415793:	and    al,0xe6
  415795:	(bad)  
  415797:	std    
  415798:	inc    esp
  415799:	dec    ebp
  41579a:	cmp    DWORD PTR [ecx+0x35],ecx
  41579d:	jbe    0x415760
  41579f:	sub    BYTE PTR [eax-0x2e220a8e],dl
  4157a5:	sbb    ebx,DWORD PTR [edi-0x5cde5a3a]
  4157ab:	stc    
  4157ac:	popf   
  4157ad:	out    0xb1,eax
  4157af:	jbe    0x415803
  4157b1:	adc    ch,BYTE PTR [ebx]
  4157b3:	pop    ebp
  4157b4:	outs   dx,DWORD PTR ds:[esi]
  4157b5:	mov    WORD PTR [ecx+0x772086a3],?
  4157bb:	(bad)  
  4157bd:	retf   0x2d76
  4157c0:	cmp    eax,0xc6833dd5
  4157c5:	sub    BYTE PTR [eax-0x37],0xcf
  4157c9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4157ca:	scas   eax,DWORD PTR es:[edi]
  4157cb:	(bad)  
  4157cc:	(bad)  
  4157cd:	test   DWORD PTR [eax+edx*2],0x621ccb07
  4157d4:	xor    eax,0xfffffff0
  4157d7:	xchg   ebx,eax
  4157d8:	repz mov cl,0xe9
  4157db:	pop    ebp
  4157dc:	fcomp  QWORD PTR [edx+eiz*8]
  4157df:	leave  
  4157e0:	out    dx,al
  4157e1:	xchg   edi,eax
  4157e2:	dec    esp
  4157e3:	xor    DWORD PTR [edx+0x32],eax
  4157e6:	into   
  4157e7:	mov    edx,0x49d9e15b
  4157ec:	in     al,dx
  4157ed:	in     al,0xa3
  4157ef:	into   
  4157f0:	shr    BYTE PTR [edx],0xa8
  4157f3:	scas   al,BYTE PTR es:[edi]
  4157f4:	outs   dx,BYTE PTR ds:[esi]
  4157f5:	jecxz  0x4157b1
  4157f7:	cmps   BYTE PTR cs:[esi],BYTE PTR es:[edi]
  4157f9:	pop    ebx
  4157fa:	call   0x97d5d64b
  4157ff:	call   0xb9983950
  415804:	sub    dh,BYTE PTR [eax]
  415806:	lds    esi,FWORD PTR [edi]
  415808:	mov    bl,0xa9
  41580a:	sbb    BYTE PTR [ebp-0x935c2ea],0xd0
  415811:	(bad)  
  415812:	pop    eax
  415813:	inc    esp
  415814:	mul    DWORD PTR [eax]
  415816:	bound  ebx,QWORD PTR [eax]
  415818:	loope  0x41583a
  41581a:	pop    ds
  41581b:	cmp    BYTE PTR [ebx+0x44],dh
  41581e:	and    eax,0xaf6e2f7b
  415823:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415824:	adc    BYTE PTR [ecx+0x8],dh
  415827:	mov    dl,dl
  415829:	adc    BYTE PTR [ebx-0x4e0762a9],0x91
  415830:	dec    ebx
  415831:	cmp    DWORD PTR [eax],edx
  415833:	stos   DWORD PTR es:[edi],eax
  415834:	sbb    edx,DWORD PTR [esi]
  415836:	push   edx
  415837:	jne    0x415848
  415839:	fwait
  41583a:	ret    0x1a1a
  41583d:	cmc    
  41583e:	outs   dx,DWORD PTR ds:[esi]
  41583f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415840:	(bad)  
  415841:	sahf   
  415842:	aaa    
  415843:	ret    
  415844:	ret    0xe89d
  415847:	xchg   edx,eax
  415848:	and    al,BYTE PTR [edi]
  41584a:	jmp    0x415870
  41584c:	jge    0x4157d9
  41584e:	add    BYTE PTR [esi],dl
  415850:	repz bound ecx,QWORD PTR cs:[edi]
  415854:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415855:	stos   BYTE PTR es:[edi],al
  415856:	or     ecx,DWORD PTR [edx+0x1264ea95]
  41585c:	test   BYTE PTR [esi],dl
  41585e:	out    dx,eax
  41585f:	ror    BYTE PTR [ebx],cl
  415861:	ins    DWORD PTR es:[edi],dx
  415862:	or     cl,BYTE PTR es:[ecx]
  415865:	add    bh,BYTE PTR [ecx]
  415867:	sbb    ebx,DWORD PTR [edi+ecx*8+0x4a]
  41586b:	dec    edi
  41586c:	mov    dl,0xc9
  41586e:	push   esi
  41586f:	xchg   ch,dh
  415871:	fwait
  415872:	cli    
  415873:	pop    ebp
  415874:	sbb    ebp,eax
  415876:	pop    edx
  415877:	cmp    esp,DWORD PTR [ecx+0x63]
  41587a:	shr    DWORD PTR [ecx],cl
  41587c:	adc    dh,BYTE PTR [edx-0x12856620]
  415882:	inc    ecx
  415883:	jnp    0x415857
  415885:	call   DWORD PTR [ebp+0x3916745b]
  41588b:	push   ss
  41588c:	add    eax,0xd0a047e0
  415891:	xadd   DWORD PTR [esi-0xffc1977],ebp
  415898:	mov    ch,0xe2
  41589a:	inc    edx
  41589b:	jle    0x4158e9
  41589d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41589e:	fucom  st(2)
  4158a0:	je     0x41585e
  4158a2:	mov    al,ds:0xd9aeffd0
  4158a7:	in     al,dx
  4158a8:	jmp    0x415834
  4158aa:	outs   dx,BYTE PTR gs:[esi]
  4158ac:	dec    edi
  4158ad:	in     al,dx
  4158ae:	pop    esi
  4158af:	popf   
  4158b0:	int3   
  4158b1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4158b2:	retf   0xe756
  4158b5:	push   esi
  4158b6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4158b7:	xchg   ecx,eax
  4158b8:	mov    esi,0x9b5bc123
  4158bd:	sar    DWORD PTR [esi+0x6],1
  4158c0:	mov    edi,0xd061f109
  4158c5:	add    al,BYTE PTR [ebp-0x5ae161a]
  4158cb:	dec    esp
  4158cc:	mov    ds:0x5f1e53cc,al
  4158d1:	or     dh,ch
  4158d3:	jp     0x41593c
  4158d5:	jge    0x41591a
  4158d7:	jmp    FWORD PTR [edx-0x2e]
  4158da:	ret    
  4158db:	bound  ecx,QWORD PTR [edx]
  4158dd:	ins    DWORD PTR es:[edi],dx
  4158de:	(bad)  
  4158e0:	mov    ecx,0x31bbd37a
  4158e5:	aaa    
  4158e6:	aaa    
  4158e7:	cmc    
  4158e8:	lahf   
  4158e9:	repnz pop ds
  4158eb:	out    dx,al
  4158ec:	mov    dl,cl
  4158ee:	scas   eax,DWORD PTR es:[edi]
  4158ef:	or     DWORD PTR [eax],edi
  4158f1:	sub    al,0xdd
  4158f3:	sbb    ebp,DWORD PTR [eax-0x15d02c5d]
  4158f9:	(bad)  
  4158fb:	ret    0xb67b
  4158fe:	test   eax,0x21885340
  415903:	push   ecx
  415904:	push   eax
  415905:	daa    
  415906:	push   edi
  415907:	popf   
  415908:	sbb    al,0x80
  41590a:	popa   
  41590b:	aam    0x6e
  41590d:	adc    DWORD PTR [eax-0x5a],edx
  415910:	xor    ch,dl
  415912:	jmp    0x4f2f3100
  415917:	in     al,dx
  415918:	mov    ebx,0xd201687c
  41591d:	xor    ebp,DWORD PTR [eax+0x3ce8dda7]
  415923:	shl    bh,0x13
  415926:	mov    BYTE PTR [edx],bl
  415928:	std    
  415929:	sub    eax,0xdac236a1
  41592e:	mov    edi,edi
  415930:	mov    ebx,0x691d8ce4
  415935:	ror    DWORD PTR [esi+0x557bd6aa],0x28
  41593c:	sar    DWORD PTR [edx+0x1e6ae64b],1
  415942:	popf   
  415943:	loope  0x4159a0
  415945:	adc    DWORD PTR [edi+eiz*4],ebp
  415948:	mov    ecx,0x357abf70
  41594d:	xor    al,BYTE PTR [edi]
  41594f:	mov    ebp,0xd66972eb
  415954:	pushf  
  415955:	les    eax,FWORD PTR [esi-0x9]
  415958:	jbe    0x415994
  41595a:	rol    BYTE PTR [ebx+0x3ec743d7],1
  415960:	push   0x70112e74
  415965:	fmulp  st(0),st
  415967:	sti    
  415968:	loopne 0x4158ec
  41596a:	mov    ds:0xec07b314,eax
  41596f:	xchg   DWORD PTR [ebp-0x7a],edx
  415972:	imul   esi,DWORD PTR [ecx],0x76292756
  415978:	push   ss
  415979:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41597a:	sbb    dl,BYTE PTR [esi+edx*1+0xf]
  41597e:	mov    gs,WORD PTR [ecx+0x16]
  415981:	aam    0xa3
  415983:	mov    ecx,0x5b24f752
  415988:	and    bh,BYTE PTR [edx]
  41598a:	sbb    BYTE PTR [ebx+0x78],ch
  41598d:	mov    dl,0xf0
  41598f:	fsub   DWORD PTR [ecx]
  415991:	jno    0x415928
  415993:	adc    BYTE PTR [eax+0x7a],cl
  415996:	repz inc ebx
  415998:	dec    ecx
  415999:	mov    ebx,0x21cdd051
  41599e:	iret   
  41599f:	sbb    esi,DWORD PTR [edi-0x4d]
  4159a2:	and    edi,DWORD PTR [eax+0x27]
  4159a5:	sahf   
  4159a6:	mov    edx,0xec48aebb
  4159ab:	fcom   QWORD PTR [ebx-0x48e4371e]
  4159b1:	jb     0x4159e6
  4159b3:	int3   
  4159b4:	mov    dl,0x75
  4159b6:	add    bh,bh
  4159b8:	adc    ebx,DWORD PTR [ebx]
  4159ba:	mov    esi,0x35108f52
  4159bf:	sub    al,0x5a
  4159c1:	js     0x415947
  4159c3:	ret    0xb0c2
  4159c6:	push   ebp
  4159c7:	push   edi
  4159c8:	(bad)  
  4159c9:	imul   esp,DWORD PTR [esi+0x34631a6e],0xffffffb1
  4159d0:	fadd   DWORD PTR [edi]
  4159d2:	mov    WORD PTR [eax+0x36],ss
  4159d5:	sub    al,0xa0
  4159d7:	rol    BYTE PTR [ebp-0xf],0xc1
  4159db:	lds    eax,FWORD PTR ds:0x20507060
  4159e1:	inc    edi
  4159e2:	cld    
  4159e3:	sub    DWORD PTR ds:0xbadc1ad9,edi
  4159e9:	jb     0x415a08
  4159eb:	(bad)  
  4159ec:	retf   
  4159ed:	scas   al,BYTE PTR es:[edi]
  4159ee:	ret    0xaf96
  4159f1:	adc    DWORD PTR [esi+0x4f984d25],eax
  4159f7:	rcl    BYTE PTR [eax-0x66fa4448],cl
  4159fd:	inc    edi
  4159fe:	ins    BYTE PTR es:[edi],dx
  4159ff:	or     eax,0x50b7ac69
  415a04:	cmp    al,0x81
  415a06:	rol    BYTE PTR [ebx+0x689b4271],1
  415a0c:	mov    ds:0x2d5b40ac,eax
  415a11:	jge    0x4159a6
  415a13:	xchg   DWORD PTR ds:0xe16d2260,ecx
  415a19:	push   ecx
  415a1a:	(bad)  
  415a1b:	sar    ah,1
  415a1d:	jecxz  0x415a1e
  415a1f:	scas   eax,DWORD PTR es:[edi]
  415a20:	mov    cl,0x54
  415a22:	xor    al,0x31
  415a24:	mov    edi,DWORD PTR [esi+0x25ec9ad9]
  415a2a:	pop    ebx
  415a2b:	jo     0x415a1b
  415a2d:	clc    
  415a2e:	inc    ebp
  415a2f:	shl    DWORD PTR [eax],cl
  415a31:	cmc    
  415a32:	or     al,BYTE PTR [edx-0x58]
  415a35:	retf   0xada
  415a38:	dec    ecx
  415a39:	push   es
  415a3a:	pop    edi
  415a3b:	add    esi,edi
  415a3d:	dec    esp
  415a3e:	sub    esp,edi
  415a40:	mov    esi,0x2ab54401
  415a45:	mov    edx,DWORD PTR [edi-0x59bbcc7]
  415a4b:	das    
  415a4c:	rcr    ch,1
  415a4e:	pop    ebp
  415a4f:	imul   edx,edi,0x37a6ef94
  415a55:	js     0x415ac8
  415a57:	sub    edi,DWORD PTR [esi+0x0]
  415a5a:	adc    al,0x58
  415a5c:	enter  0x3f51,0xdd
  415a60:	jge    0x415aa4
  415a62:	call   0x7d3da6fb
  415a67:	push   ss
  415a68:	push   edi
  415a69:	fstp   QWORD PTR ds:[ecx*2-0x76c41e98]
  415a71:	sar    ecx,1
  415a73:	stos   BYTE PTR es:[edi],al
  415a74:	dec    edx
  415a75:	and    ch,BYTE PTR ds:0x38fdd5ed
  415a7b:	pop    ebx
  415a7c:	in     al,0x58
  415a7e:	lock ret 0xe975
  415a82:	add    esp,DWORD PTR [ecx+0x7a]
  415a85:	aad    0x91
  415a87:	dec    eax
  415a88:	adc    al,0x9c
  415a8a:	jecxz  0x415a91
  415a8c:	push   ebx
  415a8d:	hlt    
  415a8e:	fsubr  DWORD PTR [esp+eax*1-0x79cad19d]
  415a95:	mov    edi,0xc018a261
  415a9a:	clc    
  415a9b:	pop    ebx
  415a9c:	push   esi
  415a9d:	fidiv  WORD PTR es:[esi]
  415aa0:	xchg   DWORD PTR cs:[ebp-0x76],ecx
  415aa4:	aam    0xd6
  415aa6:	iret   
  415aa7:	dec    edx
  415aa8:	arpl   WORD PTR [ecx-0x284501a7],di
  415aae:	mov    bh,0xdf
  415ab0:	add    eax,0xc0182816
  415ab5:	(bad)  
  415ab6:	mov    ebx,0xa7ab6dec
  415abb:	in     eax,0x8b
  415abd:	in     al,0x2f
  415abf:	adc    eax,0xfd754ada
  415ac4:	jle    0x415a85
  415ac6:	pusha  
  415ac7:	xor    edx,ebp
  415ac9:	pop    ebx
  415aca:	xchg   ecx,eax
  415acb:	mov    al,ds:0xb4763ea8
  415ad0:	call   0x217dae9e
  415ad5:	not    DWORD PTR [edi+0x5b]
  415ad8:	dec    edi
  415ad9:	cli    
  415ada:	ds dec esp
  415adc:	mov    eax,ds:0xff67f71a
  415ae1:	ins    DWORD PTR es:[edi],dx
  415ae2:	call   0x371b914d
  415ae7:	popf   
  415ae8:	push   edi
  415ae9:	pop    ebp
  415aea:	xor    al,0x16
  415aec:	ror    BYTE PTR [esi+0x2dc7c974],1
  415af2:	stos   BYTE PTR es:[edi],al
  415af3:	jmp    0xe2ce097e
  415af8:	pop    ss
  415af9:	sbb    al,0x63
  415afb:	out    0x91,eax
  415afd:	aaa    
  415afe:	mov    ah,0x96
  415b00:	inc    ecx
  415b01:	(bad)  
  415b02:	sub    bh,BYTE PTR [esi]
  415b04:	(bad)  
  415b06:	push   edx
  415b07:	lods   al,BYTE PTR ds:[esi]
  415b08:	inc    ecx
  415b09:	mov    eax,ds:0xffa4be6c
  415b0e:	and    BYTE PTR [ebx-0x34],0x15
  415b12:	(bad)  
  415b13:	cli    
  415b14:	jns    0x415a9e
  415b16:	push   cs
  415b17:	pop    ds
  415b18:	sub    eax,0x42829647
  415b1d:	cmp    al,0x4a
  415b1f:	js     0x415afc
  415b21:	inc    edx
  415b22:	inc    eax
  415b23:	retf   0x28c0
  415b26:	sar    DWORD PTR [edx],1
  415b28:	cdq    
  415b29:	add    bh,ch
  415b2b:	sub    eax,0x906e566e
  415b30:	into   
  415b31:	dec    esi
  415b32:	jge    0x415b12
  415b34:	pop    edi
  415b35:	bound  ebp,QWORD PTR [ebx]
  415b37:	ror    BYTE PTR [ebp-0x48fe1331],1
  415b3d:	pusha  
  415b3e:	frstor [esi+0x1b]
  415b41:	js     0x415ad2
  415b43:	xchg   dh,bh
  415b45:	enter  0xb9a9,0x93
  415b49:	jmp    0xd833:0xa8aac5d1
  415b50:	add    eax,0x69d73db6
  415b55:	int    0x70
  415b57:	aas    
  415b58:	mov    cl,BYTE PTR [ebp-0x77]
  415b5b:	ror    edi,1
  415b5d:	aaa    
  415b5e:	es mov ebp,0x837e7ee
  415b64:	fmul   QWORD PTR [edi+0x71]
  415b67:	fadd   st,st(3)
  415b69:	push   ds
  415b6a:	dec    eax
  415b6b:	pmulhw mm2,QWORD PTR [edx+eiz*8-0x15]
  415b70:	mov    al,ds:0x329a3ef3
  415b75:	jne    0x415bd3
  415b77:	and    eax,0xfca95c13
  415b7c:	mov    dh,0xe0
  415b7e:	test   eax,0xf9314f09
  415b83:	mov    esi,0x8293f549
  415b88:	mov    ebp,0xb185852e
  415b8d:	lea    ebx,[ecx-0x23]
  415b90:	xchg   ebp,eax
  415b91:	jbe    0x415c04
  415b93:	push   0xd5d066ff
  415b98:	xor    eax,0x227ea836
  415b9d:	sbb    al,0x71
  415b9f:	cdq    
  415ba0:	std    
  415ba1:	(bad)  
  415ba2:	and    eax,0x220d1e9c
  415ba7:	aam    0x41
  415ba9:	cmp    eax,DWORD PTR [esi+0x77]
  415bac:	mov    cl,0x53
  415bae:	or     DWORD PTR [ebx+eiz*4-0x5d],0x817b4792
  415bb6:	int3   
  415bb7:	mov    cl,0x70
  415bb9:	mov    al,ds:0x8f9d6f30
  415bbe:	pop    edi
  415bbf:	test   DWORD PTR [ebp+0x6b902c13],eax
  415bc5:	jbe    0x415bb6
  415bc7:	jo     0x415bf9
  415bc9:	out    dx,al
  415bca:	es mov al,0xb1
  415bcd:	lods   al,BYTE PTR ds:[esi]
  415bce:	outs   dx,DWORD PTR ds:[esi]
  415bcf:	jo     0x415b64
  415bd1:	sbb    BYTE PTR [eax-0x5b],al
  415bd4:	jae    0x415c30
  415bd6:	mov    ds:0xaf054771,eax
  415bdb:	cwde   
  415bdc:	pushf  
  415bdd:	inc    ebp
  415bde:	push   esp
  415bdf:	xchg   esp,eax
  415be0:	sbb    ebx,DWORD PTR es:[edx+edx*1-0x408c195b]
  415be8:	lock cmp DWORD PTR [edx+0x5a],ebp
  415bec:	pop    es
  415bed:	mov    BYTE PTR [edx+0x4f],dh
  415bf0:	je     0x415c27
  415bf2:	pushf  
  415bf3:	jg     0x415b7e
  415bf5:	rcr    ah,cl
  415bf7:	pop    ebx
  415bf8:	xor    eax,0xd9e79f0a
  415bfd:	sub    ebp,DWORD PTR [ecx+0x3b]
  415c00:	dec    ecx
  415c01:	push   0x5fcdd007
  415c06:	sub    al,0x51
  415c08:	aad    0x62
  415c0a:	inc    eax
  415c0b:	clc    
  415c0c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415c0d:	push   edx
  415c0e:	mov    ch,0x68
  415c10:	stos   DWORD PTR es:[edi],eax
  415c11:	cmp    BYTE PTR ss:[eax],ah
  415c14:	and    al,0x7a
  415c16:	addr16 ja 0x415c5b
  415c19:	lods   eax,DWORD PTR ds:[esi]
  415c1a:	xor    BYTE PTR [esi+0x37fb662d],al
  415c20:	adc    edi,esi
  415c22:	rcl    bh,0xee
  415c25:	sub    DWORD PTR [edx+0x34252972],edi
  415c2b:	out    dx,eax
  415c2c:	aas    
  415c2d:	mov    cl,0x3d
  415c2f:	test   al,0x68
  415c31:	cmc    
  415c32:	xor    al,0xcf
  415c34:	clc    
  415c35:	jecxz  0x415bda
  415c37:	rcl    DWORD PTR [edi+0x74],1
  415c3a:	retf   0xbeec
  415c3d:	cmovbe eax,DWORD PTR [ebx-0x2b]
  415c41:	idiv   BYTE PTR [edi*4-0x4576191c]
  415c48:	inc    eax
  415c49:	fbld   TBYTE PTR [edi]
  415c4b:	mov    ds:0x42e9810c,al
  415c50:	outs   dx,DWORD PTR ds:[esi]
  415c51:	dec    esp
  415c52:	hlt    
  415c53:	jns    0x415cbd
  415c55:	add    al,0xa3
  415c57:	out    dx,al
  415c58:	push   es
  415c59:	xor    BYTE PTR [esp+ebp*2],cl
  415c5c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415c5d:	jno    0x415beb
  415c5f:	mov    bl,0xfa
  415c61:	(bad)  {k5}{z}
  415c66:	dec    esi
  415c67:	or     DWORD PTR [edx],0xd500b93d
  415c6d:	data16 fisub WORD PTR [eax+0x71192d41]
  415c74:	test   eax,0xe7016fb6
  415c79:	or     esi,DWORD PTR [ebp-0x78]
  415c7c:	xlat   BYTE PTR ds:[ebx]
  415c7d:	dec    ebp
  415c7e:	and    ecx,eax
  415c80:	loope  0x415cc6
  415c82:	fsubr  st(4),st
  415c84:	add    esp,DWORD PTR [edi*2+0x53cff28c]
  415c8b:	push   ds
  415c8c:	adc    ebp,ecx
  415c8e:	cwde   
  415c8f:	mov    dl,0x3f
  415c91:	ds cwde 
  415c93:	sub    BYTE PTR [ecx+0x5e],dh
  415c96:	jns    0x415cbc
  415c98:	hlt    
  415c99:	mov    edi,DWORD PTR [esi]
  415c9b:	(bad)  
  415c9c:	xlat   BYTE PTR ds:[ebx]
  415c9d:	push   eax
  415c9e:	xor    edx,0xa3c8b207
  415ca4:	inc    esp
  415ca5:	push   esp
  415ca6:	(bad)  
  415ca7:	or     DWORD PTR [ebp-0x30],edi
  415caa:	xor    dl,BYTE PTR [ebp+0x41c37874]
  415cb0:	or     bh,BYTE PTR ds:0x36e2257f
  415cb6:	jmp    0xb4e4:0x880d8e04
  415cbd:	adc    BYTE PTR [ebx-0x1],ch
  415cc0:	retf   0x5d34
  415cc3:	pop    ss
  415cc4:	mov    eax,0xbaa5ec0e
  415cc9:	cmp    esp,ebp
  415ccb:	jg     0x415cd1
  415ccd:	popf   
  415cce:	mov    dl,0x6c
  415cd0:	xor    DWORD PTR [eax],esi
  415cd2:	xchg   ebp,eax
  415cd3:	stc    
  415cd4:	xor    BYTE PTR [edx],ch
  415cd6:	jnp    0x415d50
  415cd8:	sub    BYTE PTR ds:0x40346f,ch
  415cde:	xor    BYTE PTR [edx+0x79],dl
  415ce1:	adc    BYTE PTR [edx],ah
  415ce3:	jge    0x415c8c
  415ce5:	jge    0x415ca3
  415ce7:	adc    cl,BYTE PTR [edi-0x41]
  415cea:	and    DWORD PTR [edi-0x33acd7c8],0x5f1b5f40
  415cf4:	ds into 
  415cf6:	cmp    al,0xb
  415cf8:	lock cmp dh,bh
  415cfb:	add    al,0xb5
  415cfd:	pop    edx
  415cfe:	enter  0xbc49,0x8d
  415d02:	dec    ecx
  415d03:	add    ecx,DWORD PTR [ebp-0x67]
  415d06:	pop    esi
  415d07:	idiv   DWORD PTR [eax+0x511290b1]
  415d0d:	lahf   
  415d0e:	int    0x28
  415d10:	imul   edi,DWORD PTR [edx],0x5f45692b
  415d16:	(bad)
  415d19:	dec    edx
  415d1a:	mov    eax,0x9ec3be0d
  415d1f:	and    al,0xca
  415d21:	rcr    DWORD PTR [edx+0x1924d028],0x6e
  415d28:	cmp    ecx,DWORD PTR [ecx-0x5a581771]
  415d2e:	scas   eax,DWORD PTR es:[edi]
  415d2f:	retf   
  415d30:	mov    BYTE PTR [eax-0x7d46ee10],cl
  415d36:	inc    esi
  415d37:	mov    al,ds:0x30693f2
  415d3c:	je     0x415db1
  415d3e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415d3f:	mov    gs,ebx
  415d41:	or     ecx,ebp
  415d43:	sbb    ah,al
  415d45:	inc    ebp
  415d46:	inc    esp
  415d47:	data16 repz std 
  415d4a:	je     0x415d3b
  415d4c:	stos   BYTE PTR es:[edi],al
  415d4d:	add    eax,0x5cd3f6dd
  415d52:	ror    esi,1
  415d54:	mov    edx,0x49754478
  415d59:	ins    DWORD PTR es:[edi],dx
  415d5a:	popf   
  415d5b:	out    0x2c,al
  415d5d:	fbstp  TBYTE PTR [edx-0x13]
  415d60:	push   esp
  415d61:	bound  esi,QWORD PTR [ebx+0x12bc1c98]
  415d67:	jle    0x415d75
  415d69:	retf   0x7de
  415d6c:	cmp    eax,0x7e5a44ce
  415d71:	and    ebx,DWORD PTR ds:0x379754d8
  415d77:	leave  
  415d78:	pop    ebx
  415d79:	jle    0x415d5d
  415d7b:	fadd   QWORD PTR [eax-0x538c647f]
  415d81:	out    0xbd,al
  415d83:	pushf  
  415d84:	push   edi
  415d85:	sub    DWORD PTR [ebp+0x51],eax
  415d88:	dec    esp
  415d89:	icebp  
  415d8a:	mov    bl,0x6c
  415d8c:	in     eax,0xd2
  415d8e:	pop    ebp
  415d8f:	sbb    eax,0x630d1606
  415d94:	jbe    0x415dec
  415d96:	push   ds
  415d97:	pop    ebp
  415d98:	clc    
  415d99:	sub    cl,ah
  415d9b:	imul   ebp,DWORD PTR ds:0xc8cf15bb,0x76
  415da2:	xor    ah,dh
  415da4:	mul    DWORD PTR [eax-0x5c]
  415da7:	mov    eax,ds:0xc4fb9a
  415dac:	adc    al,0x64
  415dae:	aaa    
  415daf:	nop
  415db0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415db1:	add    BYTE PTR [ebp+0x71cbd22d],cl
  415db7:	outs   dx,DWORD PTR ds:[esi]
  415db8:	adc    dh,BYTE PTR [ebx]
  415dba:	or     al,0xfe
  415dbc:	and    DWORD PTR [esi],edi
  415dbe:	das    
  415dbf:	call   0x53726505
  415dc4:	adc    al,0x33
  415dc6:	in     eax,dx
  415dc7:	xor    DWORD PTR [ecx+ecx*2+0x59b0505b],esi
  415dce:	mov    ds,WORD PTR [esi+0x5d3baf63]
  415dd4:	scas   eax,DWORD PTR es:[edi]
  415dd5:	loope  0x415dfa
  415dd7:	aas    
  415dd8:	sbb    eax,0x683d9fc2
  415ddd:	xor    al,0xef
  415ddf:	push   edx
  415de0:	(bad)  
  415de1:	xor    al,0x63
  415de3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415de4:	jl     0x415df0
  415de6:	cmp    cl,al
  415de8:	ins    DWORD PTR es:[edi],dx
  415de9:	ja     0x415daf
  415deb:	mov    ebx,0xab3c05f9
  415df0:	js     0x415e30
  415df2:	add    edx,DWORD PTR [ebp+0x6]
  415df5:	and    BYTE PTR [esi+0x5e6f8358],bh
  415dfb:	lock mov edi,0x870ae6de
  415e01:	out    0x43,eax
  415e03:	dec    ecx
  415e04:	mov    edi,DWORD PTR [esi]
  415e06:	leave  
  415e07:	mov    bh,0xce
  415e09:	mov    edi,edi
  415e0b:	mov    BYTE PTR [ecx],al
  415e0d:	xlat   BYTE PTR ds:[ebx]
  415e0e:	mov    eax,ds:0xc66dfc0
  415e13:	mov    cl,0x68
  415e15:	loope  0x415db6
  415e17:	inc    edi
  415e18:	push   es
  415e19:	jbe    0x415dd8
  415e1b:	add    al,0xb3
  415e1d:	xchg   ebx,eax
  415e1e:	mov    al,0x12
  415e20:	cdq    
  415e21:	retf   
  415e22:	stos   DWORD PTR es:[edi],eax
  415e23:	test   DWORD PTR [edx-0x78],ebx
  415e26:	push   eax
  415e27:	pop    eax
  415e28:	std    
  415e29:	shl    BYTE PTR [edx+eiz*1],0x9d
  415e2d:	xchg   ecx,eax
  415e2e:	repnz lahf 
  415e30:	push   edx
  415e31:	in     al,0xc9
  415e33:	sbb    edx,DWORD PTR [esi+0x66edd634]
  415e39:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415e3a:	repnz sub eax,0x457d7459
  415e40:	enter  0x48eb,0x45
  415e44:	hlt    
  415e45:	test   ah,dl
  415e47:	fwait
  415e48:	inc    eax
  415e49:	lea    eax,[ebp-0x3edebc3d]
  415e4f:	add    al,0x40
  415e51:	push   0x1a
  415e53:	fst    DWORD PTR [eax-0x4]
  415e56:	fstp   TBYTE PTR [eax+ebp*2+0x2]
  415e5a:	push   ds
  415e5b:	push   edi
  415e5c:	push   DWORD PTR ds:0x5f74cb57
  415e62:	mov    al,ds:0xe2cf0e17
  415e67:	add    ah,BYTE PTR [edi]
  415e69:	fiadd  WORD PTR [edx+0x41f2430d]
  415e6f:	pop    edx
  415e70:	mov    ah,0x86
  415e72:	(bad)  
  415e74:	push   edx
  415e75:	div    BYTE PTR [eax+0x17]
  415e78:	dec    ebp
  415e79:	sbb    al,0xf1
  415e7b:	(bad)  
  415e7c:	scas   al,BYTE PTR es:[edi]
  415e7d:	outs   dx,BYTE PTR ds:[esi]
  415e7e:	ror    BYTE PTR [edx+0x6f79933a],0xda
  415e85:	dec    edi
  415e86:	and    eax,0xd939db7c
  415e8b:	loopne 0x415ef2
  415e8d:	cmp    al,0x47
  415e8f:	xor    ebp,edi
  415e91:	cs stos DWORD PTR es:[edi],eax
  415e93:	and    DWORD PTR [ebp+0x52],edi
  415e96:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415e98:	mov    ds:0x611987d,al
  415e9d:	add    dl,bl
  415e9f:	sub    ecx,DWORD PTR [ebx+ebx*2-0x363bc198]
  415ea6:	cmc    
  415ea7:	push   0x9f4cd04c
  415eac:	test   eax,0x626825be
  415eb1:	test   ah,ah
  415eb3:	fwait
  415eb4:	leave  
  415eb5:	cld    
  415eb6:	mov    bh,0x31
  415eb8:	inc    esp
  415eb9:	adc    eax,DWORD PTR [ebx+0x67]
  415ebc:	mov    al,0x68
  415ebe:	lods   eax,DWORD PTR ds:[esi]
  415ebf:	fist   DWORD PTR [ebp-0x31]
  415ec2:	cmp    DWORD PTR [edx-0x4a],ebp
  415ec5:	push   ecx
  415ec6:	mov    eax,DWORD PTR [eax+0x3319e366]
  415ecc:	jl     0x415e81
  415ece:	scas   eax,DWORD PTR es:[edi]
  415ecf:	jb     0x415eee
  415ed1:	test   BYTE PTR [esi+0x36],dl
  415ed4:	inc    edi
  415ed5:	gs inc ebp
  415ed7:	cld    
  415ed8:	pop    ebp
  415ed9:	(bad)  
  415eda:	cli    
  415edb:	push   ebx
  415edc:	hlt    
  415edd:	inc    ebx
  415ede:	xchg   ebx,eax
  415edf:	dec    esi
  415ee0:	add    ebp,DWORD PTR [ecx+0x67a4690e]
  415ee6:	out    dx,eax
  415ee7:	push   ds
  415ee8:	xchg   ebx,eax
  415ee9:	dec    DWORD PTR [edx]
  415eeb:	or     al,BYTE PTR [edx+0x48]
  415eee:	stos   BYTE PTR es:[edi],al
  415eef:	push   ebp
  415ef0:	imul   ecx,DWORD PTR ds:0xda1542cf,0xa2d13cbe
  415efa:	xchg   esp,eax
  415efb:	mov    dl,0x92
  415efd:	das    
  415efe:	dec    ecx
  415eff:	leave  
  415f00:	sahf   
  415f01:	mov    cl,0x8e
  415f03:	std    
  415f04:	aas    
  415f05:	mov    dh,0x21
  415f07:	(bad)  
  415f08:	adc    al,0x7e
  415f0a:	mov    cl,0x20
  415f0c:	(bad)  
  415f0d:	or     al,0x64
  415f0f:	add    edi,DWORD PTR [esi+0x14db090b]
  415f15:	jge    0x415f10
  415f17:	retf   
  415f18:	cmc    
  415f19:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415f1a:	jp     0x415f8e
  415f1c:	ins    DWORD PTR es:[edi],dx
  415f1d:	cwde   
  415f1e:	xchg   ebp,eax
  415f1f:	mov    ecx,0x53b659a9
  415f24:	cmc    
  415f25:	iret   
  415f26:	mov    esp,0xb98d1d21
  415f2b:	(bad)  
  415f2c:	push   esi
  415f2d:	or     edi,DWORD PTR [esi-0xe2d427e]
  415f33:	jg     0x415f80
  415f35:	mov    dh,0x9f
  415f37:	sub    ebx,DWORD PTR [esi-0x1e4a5c43]
  415f3d:	and    dh,BYTE PTR [ecx]
  415f3f:	popa   
  415f40:	aas    
  415f41:	clc    
  415f42:	dec    eax
  415f43:	fs test al,0xa
  415f46:	cld    
  415f47:	push   ebp
  415f48:	mov    DWORD PTR [esi-0x51f6300a],esi
  415f4e:	mov    BYTE PTR [eax],0x28
  415f51:	cmp    BYTE PTR [eax],bh
  415f53:	dec    ebx
  415f54:	fdiv   st(5),st
  415f56:	adc    edi,eax
  415f58:	fsub   QWORD PTR [eax-0x5]
  415f5b:	enter  0xeb85,0x54
  415f5f:	ss mov ecx,0x91b19293
  415f65:	sti    
  415f66:	push   0xd9d7cd36
  415f6b:	jae    0x415fcc
  415f6d:	xor    eax,0x193a5d03
  415f72:	icebp  
  415f73:	cmp    BYTE PTR [ebx-0x6e],ch
  415f76:	int    0x8c
  415f78:	arpl   WORD PTR [ebp+0x4f],bx
  415f7b:	into   
  415f7c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415f7d:	inc    esp
  415f7e:	jl     0x415fc7
  415f80:	push   ss
  415f81:	loop   0x415f7f
  415f83:	ja     0x415fe6
  415f85:	xchg   esp,eax
  415f86:	mov    esp,0x7745e13f
  415f8b:	pushf  
  415f8c:	data16 clc 
  415f8e:	outs   dx,BYTE PTR ds:[esi]
  415f8f:	and    eax,DWORD PTR ds:0xf6f664d0
  415f95:	push   ebx
  415f96:	rol    cl,cl
  415f98:	pop    esi
  415f99:	mov    ds:0xdea32546,al
  415f9e:	fild   DWORD PTR [ebp-0x54961caa]
  415fa4:	push   esp
  415fa5:	pop    ebp
  415fa6:	mov    ecx,0x90e8a744
  415fab:	xor    DWORD PTR [edi],edi
  415fad:	shl    dl,cl
  415faf:	pop    ebp
  415fb0:	aaa    
  415fb1:	add    eax,0x7777839c
  415fb6:	shl    edx,0xe0
  415fb9:	sbb    ebx,DWORD PTR ds:0x31372b1c
  415fbf:	dec    eax
  415fc0:	fcomp  DWORD PTR [edx+eiz*8+0x64]
  415fc4:	repz mov ebx,0x73c21995
  415fca:	push   ss
  415fcb:	inc    ecx
  415fcc:	jmp    0x6986:0x17ee9111
  415fd3:	add    ecx,ecx
  415fd5:	mov    ss,WORD PTR [edi-0xbc0b0ce]
  415fdb:	lea    esi,cs:[ebx-0x78]
  415fdf:	in     eax,dx
  415fe0:	pop    ds
  415fe1:	ins    BYTE PTR es:[edi],dx
  415fe2:	add    al,0x83
  415fe4:	nop
  415fe5:	push   ebp
  415fe6:	fistp  WORD PTR [esi+0x5d6eae9e]
  415fec:	loop   0x416032
  415fee:	shl    DWORD PTR [ecx-0x22],cl
  415ff1:	sar    BYTE PTR [edi-0x33],cl
  415ff4:	int    0x18
  415ff6:	jg     0x415f95
  415ff8:	inc    edx
  415ff9:	mov    gs,WORD PTR [edi-0x18]
  415ffc:	mov    ch,0x39
  415ffe:	pop    edi
  415fff:	mov    edi,0x9844b122
  416004:	(bad)  
  416005:	gs jecxz 0x41607f
  416008:	push   edx
  416009:	mov    ecx,0x58eb8067
  41600e:	cs mov cl,0xec
  416011:	mov    fs,WORD PTR [ebp-0x51edf9ee]
  416017:	imul   ebp,DWORD PTR ds:0x7e939ec2,0xd47266b7
  416021:	jle    0x416081
  416023:	mov    ebp,0xd76e8f54
  416028:	nop
  416029:	(bad)  
  41602b:	stos   BYTE PTR es:[edi],al
  41602c:	xchg   ebx,eax
  41602d:	pmaddwd mm2,QWORD PTR [eax]
  416030:	(bad)  
  416031:	(bad)  
  416033:	lock jl 0x416091
  416036:	inc    esp
  416037:	in     al,dx
  416038:	mov    dl,0xf9
  41603a:	int3   
  41603b:	mov    ah,0x22
  41603d:	or     al,0x23
  41603f:	inc    ecx
  416040:	repnz cld 
  416042:	es iret 
  416044:	retf   
  416045:	sbb    ah,BYTE PTR [eax-0x61a54639]
  41604b:	(bad)  
  41604c:	cli    
  41604d:	mov    al,0x12
  41604f:	daa    
  416050:	mov    dl,0x5b
  416052:	shl    DWORD PTR [esi+0x6059c17e],1
  416058:	ins    BYTE PTR es:[edi],dx
  416059:	test   al,0x76
  41605b:	mov    eax,ds:0x64d8c826
  416060:	sbb    eax,0xb19dfb14
  416065:	fsubr  DWORD PTR [esi-0x70]
  416068:	pop    eax
  416069:	pop    ds
  41606a:	fucomp st(1)
  41606c:	rsm    
  41606e:	es out dx,al
  416070:	jae    0x4160b6
  416072:	mov    eax,0xada31047
  416077:	jnp    0x416006
  416079:	(bad)  
  41607a:	(bad)  
  41607b:	or     BYTE PTR [edx-0x63fef20f],ah
  416081:	cwde   
  416082:	pop    edx
  416083:	scas   eax,DWORD PTR es:[edi]
  416084:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416085:	test   al,0x69
  416087:	jbe    0x4160da
  416089:	sub    BYTE PTR [ebp+esi*4+0x54d30566],dl
  416090:	add    eax,0x49422a95
  416095:	xchg   ah,ah
  416097:	add    edx,ebx
  416099:	in     eax,dx
  41609a:	mov    bl,0x31
  41609c:	pop    esp
  41609d:	in     al,0x9b
  41609f:	lods   eax,DWORD PTR ds:[esi]
  4160a0:	add    ecx,edx
  4160a2:	inc    ecx
  4160a3:	outs   dx,BYTE PTR ds:[esi]
  4160a4:	xchg   BYTE PTR [esi+0x24],al
  4160a7:	int    0x70
  4160a9:	jge    0x416108
  4160ab:	outs   dx,BYTE PTR ds:[esi]
  4160ac:	test   BYTE PTR [ebp+0x261ec808],0xf6
  4160b3:	mov    esp,edx
  4160b5:	and    cl,BYTE PTR [ecx-0x42]
  4160b8:	sub    ch,BYTE PTR [ecx-0x7fce5574]
  4160be:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4160bf:	jns    0x41604b
  4160c1:	daa    
  4160c2:	cmc    
  4160c3:	fwait
  4160c4:	jp     0x416090
  4160c6:	adc    al,BYTE PTR [edx-0x2f67495e]
  4160cc:	test   DWORD PTR [ecx],0xf8d4f263
  4160d2:	stos   DWORD PTR es:[edi],eax
  4160d3:	test   al,0x8f
  4160d5:	or     DWORD PTR [edi],esi
  4160d7:	xchg   ecx,eax
  4160d8:	xchg   DWORD PTR [ebx+0x4c],ebx
  4160db:	jg     0x416085
  4160dd:	ins    BYTE PTR es:[edi],dx
  4160de:	xchg   ecx,eax
  4160df:	aam    0xa8
  4160e1:	and    BYTE PTR [esp+eax*8-0x52ba98d0],dl
  4160e8:	mov    esp,0x8adc2bc0
  4160ed:	(bad)  
  4160ee:	mov    edi,0x40980253
  4160f3:	add    ecx,edi
  4160f5:	jno    0x416123
  4160f7:	loope  0x4160aa
  4160f9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4160fa:	pop    ss
  4160fb:	ror    DWORD PTR [esi-0x43],cl
  4160fe:	sti    
  4160ff:	int    0x7f
  416101:	adc    BYTE PTR [eax-0x388e1758],cl
  416107:	cmp    dh,BYTE PTR [edx]
  416109:	mov    cl,0xe1
  41610b:	or     ah,bh
  41610d:	pop    ds
  41610e:	xchg   DWORD PTR [edx-0x5d],esp
  416111:	(bad)  
  416112:	rcl    BYTE PTR [eax-0x148de909],cl
  416118:	jle    0x4160dc
  41611a:	push   esi
  41611b:	mov    esp,0x1ddabf39
  416120:	fmul   QWORD PTR [ecx-0x3e]
  416123:	in     al,0x5a
  416125:	mov    bl,0x47
  416127:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416128:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416129:	and    ch,BYTE PTR [eax]
  41612b:	sub    al,0x9f
  41612d:	pop    eax
  41612e:	lock neg BYTE PTR [edi+0x222f2ecb]
  416135:	bound  esp,QWORD PTR [eax+ebp*4-0x42]
  416139:	or     dh,BYTE PTR ds:0x2a0eff8b
  41613f:	cwde   
  416140:	inc    ebp
  416141:	ja     0x41612b
  416143:	in     al,dx
  416144:	stos   BYTE PTR es:[edi],al
  416145:	xchg   esi,eax
  416146:	fdiv   DWORD PTR [esi]
  416148:	call   0x87d2b3bd
  41614d:	sbb    bl,BYTE PTR [esi+0x5c]
  416150:	arpl   WORD PTR [ebx-0x30e56595],ax
  416156:	mov    edx,ss
  416158:	sar    BYTE PTR [esp+ecx*2-0x72],cl
  41615c:	sbb    eax,0xf8c688bf
  416161:	add    ah,BYTE PTR [ebx]
  416163:	fstp   DWORD PTR [ebx-0x76b87bd0]
  416169:	push   ss
  41616a:	xchg   ebp,eax
  41616b:	mov    al,ds:0x29fa84d2
  416170:	dec    eax
  416171:	adc    BYTE PTR [ebp+0x16],ah
  416174:	retf   
  416175:	cmp    al,0x94
  416177:	pop    eax
  416178:	ficomp DWORD PTR [esi+0x75]
  41617b:	push   esi
  41617c:	xchg   DWORD PTR cs:[eax-0x8f5ce09],esi
  416183:	jle    0x416126
  416185:	dec    cx
  416187:	outs   dx,DWORD PTR ds:[esi]
  416188:	int3   
  416189:	xor    BYTE PTR [edi+0x31770161],bh
  41618f:	fsub   DWORD PTR [edx]
  416191:	or     esp,DWORD PTR [ebx+eax*4-0x5d]
  416195:	and    al,0x53
  416197:	sar    ebx,cl
  416199:	xchg   edx,eax
  41619a:	or     ebp,ecx
  41619c:	cli    
  41619d:	iret   
  41619e:	mov    al,ds:0xf626f58f
  4161a3:	retf   0xab80
  4161a6:	cdq    
  4161a7:	stos   BYTE PTR es:[edi],al
  4161a8:	hlt    
  4161a9:	xor    esp,DWORD PTR [ebx+0x2c]
  4161ac:	adc    cl,BYTE PTR [ebx-0x1fc41efd]
  4161b2:	add    al,0xb2
  4161b4:	jns    0x4161dd
  4161b6:	cmp    eax,0x359e8a97
  4161bb:	retf   0xe3fb
  4161be:	jle    0x4161d9
  4161c0:	xchg   esp,eax
  4161c1:	jno    0x4161c4
  4161c3:	iret   
  4161c4:	pushw  0x11fa
  4161c8:	adc    al,0x1
  4161ca:	into   
  4161cb:	cmp    edx,DWORD PTR [ebx+0x6c1e65f3]
  4161d1:	out    dx,al
  4161d2:	pop    edi
  4161d3:	addr16 xchg ebx,eax
  4161d5:	pop    ebx
  4161d6:	dec    eax
  4161d7:	xchg   BYTE PTR [edi+0x6a],dh
  4161da:	or     eax,0x3288dda1
  4161df:	ficom  DWORD PTR [ebx-0x6d]
  4161e2:	test   eax,0xc3376390
  4161e7:	cmp    ch,BYTE PTR [ebp+0x206677f7]
  4161ed:	and    eax,DWORD PTR [edx+0x7a7b84d]
  4161f3:	pop    es
  4161f4:	call   0x661f6c28
  4161f9:	jne    0x416251
  4161fb:	outs   dx,BYTE PTR ds:[esi]
  4161fc:	dec    ebp
  4161fd:	sbb    eax,0x7ad7f27
  416202:	mov    dh,0x7
  416204:	xor    al,0x1
  416206:	mov    ecx,ds
  416208:	ror    esp,cl
  41620a:	xchg   esp,eax
  41620b:	pushf  
  41620c:	ja     0x416266
  41620e:	and    eax,0x40190a4
  416213:	sub    DWORD PTR [esi],eax
  416215:	sbb    edi,edi
  416217:	shl    BYTE PTR [esi],cl
  416219:	mov    ebp,0x767313ba
  41621e:	xor    eax,0x8ff69aec
  416223:	lds    esi,FWORD PTR [ebx-0x3b]
  416226:	mov    ebx,0x5577d9b6
  41622b:	and    DWORD PTR [ebp-0xa],esp
  41622e:	mov    ch,0x6e
  416230:	fmulp  st(5),st
  416232:	stos   DWORD PTR es:[edi],eax
  416233:	arpl   WORD PTR [edi+0x5b],sp
  416236:	jo     0x41622e
  416238:	popa   
  416239:	cmc    
  41623a:	call   0x20598c18
  41623f:	xchg   DWORD PTR [esi-0x36],esi
  416242:	xor    ch,BYTE PTR [ebx+0x3e4a4aeb]
  416248:	sbb    al,0x2
  41624a:	and    ebx,DWORD PTR [edx]
  41624c:	les    ebx,FWORD PTR [edi+edx*1+0x36]
  416250:	add    bl,BYTE PTR [ebx-0x7622a8d7]
  416256:	sub    BYTE PTR [ecx],bh
  416258:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416259:	mov    ds:0xe34f755c,eax
  41625e:	push   eax
  41625f:	pop    eax
  416260:	dec    edi
  416261:	lahf   
  416262:	pop    ds
  416263:	inc    eax
  416264:	xlat   BYTE PTR ds:[ebx]
  416265:	jno    0x416267
  416267:	imul   eax,DWORD PTR [ebx-0x3347cc74],0xffffffa4
  41626e:	test   BYTE PTR [ebx-0x5d],ch
  416271:	out    dx,al
  416272:	(bad)  
  416273:	and    eax,eax
  416275:	push   esi
  416276:	adc    ah,BYTE PTR cs:[esi-0x65]
  41627a:	call   0xcabb:0x4b341883
  416281:	push   ds
  416282:	pushf  
  416283:	pop    ecx
  416284:	in     al,0x89
  416286:	pop    ecx
  416287:	test   al,0x3a
  416289:	call   0xf38f4e77
  41628e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41628f:	or     DWORD PTR [edi],ecx
  416291:	sahf   
  416292:	aas    
  416293:	imul   ecx,ecx,0xffffffac
  416296:	ins    DWORD PTR es:[edi],dx
  416297:	std    
  416298:	jns    0x416266
  41629a:	add    al,0x9c
  41629c:	and    DWORD PTR ds:0x71467255,ebx
  4162a2:	xor    BYTE PTR [ebx+0x10],dh
  4162a5:	stos   BYTE PTR es:[edi],al
  4162a6:	jecxz  0x416283
  4162a8:	cmp    al,0x24
  4162aa:	(bad)  
  4162ab:	daa    
  4162ac:	sub    dl,BYTE PTR [eax-0xf]
  4162af:	pop    esp
  4162b0:	fcom   st(6)
  4162b2:	mov    ebp,ebp
  4162b4:	xor    ah,BYTE PTR ds:0x9a137544
  4162ba:	shl    dl,cl
  4162bc:	cdq    
  4162bd:	mov    eax,ds:0xa330c163
  4162c2:	ret    
  4162c3:	(bad)  
  4162c4:	or     al,0x2c
  4162c6:	das    
  4162c7:	jl     0x41627c
  4162c9:	cmc    
  4162ca:	(bad)  
  4162cb:	mov    esi,0x5c0752f9
  4162d0:	sub    eax,DWORD PTR [edx+0x1d]
  4162d3:	loop   0x41627a
  4162d5:	cmp    dl,BYTE PTR [edi-0x2f]
  4162d8:	neg    BYTE PTR [edx-0x57bb5ce4]
  4162de:	mov    ds,WORD PTR [ebp+0x6d]
  4162e1:	jl     0x4162c8
  4162e3:	dec    ebp
  4162e4:	jmp    0xedec:0x5b31dcd0
  4162eb:	add    ch,BYTE PTR [ecx+eiz*4+0xc9b34bc]
  4162f2:	mov    ebp,0x23338454
  4162f7:	mov    esi,0x6eb69996
  4162fc:	inc    esp
  4162fd:	and    eax,0xf8a9de81
  416302:	fldcw  WORD PTR [ebx+0x6cefffd6]
  416308:	pop    edi
  416309:	scas   eax,DWORD PTR es:[edi]
  41630a:	mov    BYTE PTR [esi+0x61ecfb3],al
  416310:	sub    DWORD PTR ds:0xb5a3aaef,edi
  416316:	xor    al,0xae
  416318:	mov    esp,0x31190f87
  41631d:	sbb    al,al
  41631f:	xor    eax,0x89f38da0
  416324:	ins    DWORD PTR es:[edi],dx
  416325:	leave  
  416326:	out    dx,eax
  416327:	and    al,dl
  416329:	test   al,0x9f
  41632b:	jmp    0x994:0xe4ed747e
  416332:	hlt    
  416333:	jp     0x416310
  416335:	mov    al,ds:0x6fc67e4b
  41633a:	mov    ebx,0x2f03b196
  41633f:	out    0x2,al
  416341:	push   ebx
  416342:	sbb    eax,0x840e1b31
  416347:	dec    ebx
  416348:	aaa    
  416349:	js     0x416355
  41634b:	sub    BYTE PTR [edx],dl
  41634d:	mov    ch,0x36
  41634f:	add    ebp,DWORD PTR [ebx]
  416351:	fsubrp st(7),st
  416353:	scas   al,BYTE PTR es:[edi]
  416354:	adc    al,0x2a
  416356:	psraw  mm6,QWORD PTR [ecx-0x55]
  41635a:	in     eax,0xe5
  41635c:	into   
  41635d:	ins    BYTE PTR es:[edi],dx
  41635e:	pop    ebp
  41635f:	pusha  
  416360:	sbb    eax,0xe4b1a1fc
  416365:	adc    eax,0x1cc3d2
  41636a:	stos   DWORD PTR es:[edi],eax
  41636b:	lea    ecx,[esi+ebp*8]
  41636e:	out    0xf3,al
  416370:	in     eax,dx
  416371:	mov    ch,0x7a
  416373:	in     eax,0x21
  416375:	pop    ebp
  416376:	mov    ds:0xe52ed6c6,al
  41637b:	sbb    edx,DWORD PTR [edi-0x4d351a60]
  416381:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416382:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416383:	mov    bl,bl
  416385:	loop   0x416376
  416387:	xor    ch,BYTE PTR [eax]
  416389:	lods   eax,DWORD PTR ds:[esi]
  41638a:	loopne 0x4163c3
  41638c:	imul   ebp,DWORD PTR [ebp-0x18c77b2c],0x72
  416393:	jnp    0x416393
  416395:	pusha  
  416396:	in     al,dx
  416397:	mov    ecx,0x34f9a0fe
  41639c:	popa   
  41639d:	dec    esi
  41639e:	out    0x3d,eax
  4163a0:	add    DWORD PTR [ebx],0x60
  4163a3:	stos   BYTE PTR es:[edi],al
  4163a4:	pop    ss
  4163a5:	sub    eax,0x720f449a
  4163aa:	mov    al,ds:0xbfdb97c0
  4163af:	lahf   
  4163b0:	inc    edx
  4163b1:	lods   eax,DWORD PTR es:[esi]
  4163b3:	fild   DWORD PTR [edi+0x15]
  4163b6:	mov    ah,0x78
  4163b8:	mov    ss,WORD PTR [eax]
  4163ba:	pop    esp
  4163bb:	les    ebx,FWORD PTR [edx-0x39]
  4163be:	pop    ds
  4163bf:	lock ins DWORD PTR es:[edi],dx
  4163c1:	pop    esi
  4163c2:	jl     0x4163a8
  4163c4:	xor    esi,edi
  4163c6:	sub    dl,ah
  4163c8:	add    dh,BYTE PTR [esi]
  4163ca:	out    0x4,al
  4163cc:	div    DWORD PTR [edx+0x56c656dd]
  4163d2:	ret    
  4163d3:	in     al,0xdc
  4163d5:	sbb    esi,ecx
  4163d7:	les    eax,FWORD PTR [edi+edi*2-0x3d03b8a1]
  4163de:	dec    ecx
  4163df:	or     cl,dl
  4163e1:	mov    al,ds:0x6620edea
  4163e6:	fisttp DWORD PTR cs:[edx+0x7b659229]
  4163ed:	iret   
  4163ee:	test   eax,0x5a607bb3
  4163f3:	xchg   esp,eax
  4163f4:	addr16 mov ds:0x213c,al
  4163f8:	jae    0x416413
  4163fa:	stos   DWORD PTR es:[edi],eax
  4163fb:	ror    esi,0xee
  4163fe:	rol    DWORD PTR [esi+0x289d3848],cl
  416404:	ret    
  416405:	jne    0x416407
  416407:	dec    ebx
  416408:	int3   
  416409:	shl    BYTE PTR [ebx+eiz*8-0x73],1
  41640d:	dec    eax
  41640e:	ds pop ds
  416410:	push   0xd09bf737
  416415:	and    DWORD PTR [eax+0x7f9858a1],0x35
  41641c:	test   BYTE PTR [eax-0x226dcd7b],0xe8
  416423:	mov    edi,0x9d3f77c
  416428:	and    BYTE PTR [edx+0x6a],dl
  41642b:	add    bh,ah
  41642d:	mov    eax,0xfa07ef1d
  416432:	iret   
  416433:	int    0xb
  416435:	sub    esi,DWORD PTR [ecx+0x7e95eaaf]
  41643b:	jno    0x4163de
  41643d:	enter  0xafe8,0x27
  416441:	pop    esp
  416442:	jle    0x416424
  416444:	jmp    0x4163f6
  416446:	sbb    al,0xe0
  416448:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416449:	setb   BYTE PTR ds:0x3966e02d
  416450:	je     0x4164a7
  416452:	inc    esi
  416453:	bound  ebx,QWORD PTR [ecx-0x25]
  416456:	and    BYTE PTR [ebx+0x619ba5db],cl
  41645c:	sub    al,bl
  41645e:	test   DWORD PTR [ecx+edx*2],ecx
  416461:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416462:	test   BYTE PTR [edx],ah
  416464:	jecxz  0x4164be
  416466:	jno    0x4164b2
  416468:	out    0xd,al
  41646a:	adc    dh,BYTE PTR [ebp+0x3d43df98]
  416470:	(bad)  
  416471:	dec    edx
  416472:	add    BYTE PTR [ecx],0xd6
  416475:	(bad)  
  416476:	jo     0x416491
  416478:	aam    0x61
  41647a:	adc    al,0xe4
  41647c:	and    esi,esi
  41647e:	mov    esi,DWORD PTR [ebx+0x74]
  416481:	aas    
  416482:	out    0xb6,eax
  416484:	lods   al,BYTE PTR ds:[esi]
  416485:	jle    0x4164ee
  416487:	(bad)  
  416488:	adc    bh,BYTE PTR [edx]
  41648a:	fst    DWORD PTR [ecx+0x718a0dad]
  416490:	sbb    eax,0x48bea031
  416495:	retf   
  416496:	outs   dx,BYTE PTR ss:[esi]
  416498:	adc    ebx,0xedae1b36
  41649e:	hlt    
  41649f:	loope  0x4164f1
  4164a1:	ins    DWORD PTR es:[edi],dx
  4164a2:	add    al,0xd1
  4164a4:	outs   dx,BYTE PTR ds:[esi]
  4164a5:	push   esp
  4164a6:	das    
  4164a7:	dec    eax
  4164a8:	dec    esi
  4164a9:	call   0xf502:0xc2a72bc5
  4164b0:	dec    ebx
  4164b1:	xchg   BYTE PTR [edi-0x32],ch
  4164b4:	jae    0x4164a8
  4164b6:	push   esi
  4164b7:	xchg   esi,eax
  4164b8:	mov    cl,0x6e
  4164ba:	cmc    
  4164bb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4164bc:	in     al,dx
  4164bd:	add    al,0xfc
  4164bf:	mov    ebx,0xb62dfcda
  4164c4:	cdq    
  4164c5:	mov    eax,ds:0x9b89639
  4164ca:	inc    ebx
  4164cb:	jl     0x4164e7
  4164cd:	aas    
  4164ce:	(bad)  
  4164cf:	xlat   BYTE PTR ds:[ebx]
  4164d0:	mov    ecx,0x5a072647
  4164d5:	push   es
  4164d6:	adc    BYTE PTR fs:[edx+edi*2],bl
  4164da:	sub    eax,0x784b108d
  4164df:	mov    bh,0x5
  4164e1:	in     al,0xa0
  4164e3:	xchg   DWORD PTR [edi+ecx*1+0xd],ebp
  4164e7:	mov    ds:0x7a884395,eax
  4164ec:	or     eax,0x8dcb9a14
  4164f1:	ret    
  4164f2:	xchg   edx,eax
  4164f3:	imul   esp,ebp,0xe5f792bb
  4164f9:	cdq    
  4164fa:	lds    ecx,FWORD PTR [edi]
  4164fc:	popa   
  4164fd:	sub    eax,0xd3925d57
  416502:	dec    esi
  416503:	sbb    DWORD PTR [ecx],ebp
  416505:	ror    DWORD PTR [ebp+0x24c010ba],cl
  41650b:	icebp  
  41650c:	(bad)  
  41650d:	xor    eax,0xf5ed58f4
  416512:	sbb    BYTE PTR [ecx+0xd],bh
  416515:	push   cs
  416516:	cli    
  416517:	add    edx,DWORD PTR [ebp-0xc0d2ce8]
  41651d:	enter  0xedb4,0x50
  416521:	ror    DWORD PTR [edx+0x4ead4660],0x7f
  416528:	popa   
  416529:	push   0xffffffab
  41652b:	fnsave [ebx]
  41652d:	adc    bh,BYTE PTR [ebx]
  41652f:	ss adc ecx,ebx
  416532:	ss js  0x416544
  416535:	push   0x27a46fa0
  41653a:	sub    ah,BYTE PTR [ebx]
  41653c:	into   
  41653d:	ins    DWORD PTR es:[edi],dx
  41653e:	xor    BYTE PTR [edi],dl
  416540:	sahf   
  416541:	xor    eax,0x8180e986
  416546:	popf   
  416547:	cmp    eax,0xf044e7f7
  41654c:	mov    esi,0xf8b3cebb
  416551:	cmp    ebp,DWORD PTR [edi-0x69d6e84d]
  416557:	or     dl,BYTE PTR [esi]
  416559:	sar    ebx,cl
  41655b:	mov    DWORD PTR [eax+0x4e],ebx
  41655e:	or     eax,0x4d188446
  416563:	and    DWORD PTR [edx],esi
  416565:	xchg   DWORD PTR [esi-0x28],esi
  416568:	cmp    DWORD PTR [ebp-0xcc6e729],esi
  41656e:	ins    DWORD PTR es:[edi],dx
  41656f:	xchg   edx,eax
  416570:	clc    
  416571:	scas   eax,DWORD PTR es:[edi]
  416572:	xchg   edi,eax
  416573:	imul   eax,DWORD PTR [ebx-0x5d],0xffffff96
  416577:	sbb    ebp,DWORD PTR [eax]
  416579:	cmp    eax,DWORD PTR [ecx+0x3be950df]
  41657f:	xchg   esp,eax
  416580:	adc    eax,0xe5a252cc
  416585:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416586:	xchg   DWORD PTR [ebx+0x2ad2853e],edx
  41658c:	clc    
  41658d:	cmp    ah,ch
  41658f:	fisttp DWORD PTR [ecx+0x4f]
  416592:	out    dx,al
  416593:	xchg   esp,eax
  416594:	and    dl,dh
  416596:	mov    dl,0xd
  416598:	sbb    al,0x13
  41659a:	in     al,0x28
  41659c:	fistp  DWORD PTR [ecx+edi*1-0xf94d722]
  4165a3:	cmp    DWORD PTR [ecx],0xffffffca
  4165a6:	sahf   
  4165a7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4165a8:	push   edx
  4165a9:	loope  0x4165d7
  4165ab:	inc    edi
  4165ac:	cmp    esi,DWORD PTR [edi+0x33]
  4165af:	jecxz  0x4165f9
  4165b1:	fwait
  4165b2:	stc    
  4165b3:	pop    ecx
  4165b4:	fcomp  st(2)
  4165b6:	add    eax,0x9da4c3e0
  4165bb:	xor    BYTE PTR [ebx+0x22],bh
  4165be:	fldenv [esi+0xf]
  4165c1:	shl    BYTE PTR [ecx],1
  4165c3:	(bad)  [eax+0x7d61c5b0]
  4165c9:	inc    ecx
  4165ca:	and    bl,bl
  4165cc:	add    ebp,0xffffff88
  4165cf:	xchg   edi,eax
  4165d0:	jo     0x4165f1
  4165d2:	adc    dx,WORD PTR [ebp+0x5980ef84]
  4165d9:	sub    al,0x7f
  4165db:	mov    ebp,0x327ad212
  4165e0:	mov    bh,BYTE PTR [eax]
  4165e2:	mov    dh,0xcc
  4165e4:	popa   
  4165e5:	and    cl,BYTE PTR [edi+0x19]
  4165e8:	add    ecx,DWORD PTR [eax+0x17]
  4165eb:	add    cl,BYTE PTR [eax-0x5a]
  4165ee:	mov    ebx,0x63047532
  4165f3:	mov    ecx,0xb025fbf0
  4165f8:	jae    0x4165e1
  4165fa:	and    al,BYTE PTR [edi+0x2a960e95]
  416600:	push   edi
  416601:	push   es
  416602:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416603:	jne    0x4165f2
  416605:	jg     0x4165ee
  416607:	mov    ds:0x5e18aebb,al
  41660c:	inc    esp
  41660d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41660e:	scas   al,BYTE PTR es:[edi]
  41660f:	ffreep st(5)
  416611:	jb     0x4165f1
  416613:	out    dx,al
  416614:	pop    esp
  416615:	pop    es
  416616:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416617:	(bad)  
  416618:	shr    BYTE PTR [bp+0x3b],1
  41661c:	arpl   ax,cx
  41661e:	xchg   esp,eax
  41661f:	sbb    BYTE PTR [esi+0x7c],al
  416622:	ror    DWORD PTR [eax-0x63a25d31],cl
  416628:	inc    esp
  416629:	push   0x1cb35ecc
  41662e:	stc    
  41662f:	inc    esi
  416630:	call   0x9538:0xb3a668e
  416637:	mov    bh,0x54
  416639:	add    bl,dl
  41663b:	bnd jns 0x416622
  41663e:	jb     0x41660e
  416640:	lods   eax,DWORD PTR ds:[esi]
  416641:	adc    cl,dl
  416643:	pop    ebp
  416644:	mov    ds:0x819e21f6,eax
  416649:	aam    0xda
  41664b:	sub    BYTE PTR [esi],bl
  41664d:	sbb    BYTE PTR [eax],0xfc
  416650:	jecxz  0x4166bf
  416652:	pusha  
  416653:	and    cl,BYTE PTR [esi-0x4]
  416656:	inc    eax
  416657:	test   BYTE PTR ss:[edi-0x4],dh
  41665b:	adc    DWORD PTR ds:0xa591b4a5,ebx
  416661:	ja     0x416680
  416663:	test   dh,ah
  416665:	in     eax,0xb9
  416667:	in     eax,0x41
  416669:	jns    0x416647
  41666b:	out    dx,eax
  41666c:	dec    eax
  41666d:	sti    
  41666e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41666f:	xchg   esp,eax
  416670:	stos   BYTE PTR es:[edi],al
  416671:	loope  0x4166a0
  416673:	addr16 mov ecx,0x976efec
  416679:	dec    eax
  41667a:	sub    al,0x48
  41667c:	stos   DWORD PTR es:[edi],eax
  41667d:	jo     0x41663a
  41667f:	push   ds
  416680:	sub    ah,BYTE PTR [eax+edi*4]
  416683:	call   0x7447:0x4d8afdd6
  41668a:	fstp   DWORD PTR ds:0xd0f98e33
  416690:	mov    edx,0x368b95cc
  416695:	call   ecx
  416697:	enter  0x3f97,0xda
  41669b:	sub    al,0x47
  41669d:	add    eax,edi
  41669f:	mov    ch,0x0
  4166a1:	(bad)  
  4166a3:	and    bh,0xda
  4166a6:	pop    ebp
  4166a7:	sub    eax,0xead8754d
  4166ac:	xchg   edi,eax
  4166ad:	lock xchg esp,eax
  4166af:	mov    eax,ds:0xc4321a53
  4166b4:	adc    cl,BYTE PTR [ebx]
  4166b6:	fucomip st,st(0)
  4166b8:	jecxz  0x416717
  4166ba:	inc    esp
  4166bb:	call   0x9ba4:0x96938a95
  4166c2:	adc    al,0x93
  4166c4:	push   0x51
  4166c6:	int3   
  4166c7:	loop   0x416674
  4166c9:	adc    al,BYTE PTR ds:[ebp-0x8]
  4166cd:	fimul  DWORD PTR [esi-0x503ef322]
  4166d3:	out    dx,al
  4166d4:	mov    bl,0x7
  4166d6:	dec    eax
  4166d7:	cmp    BYTE PTR [esi+ecx*2+0x5a75863],cl
  4166de:	iret   
  4166df:	cmp    DWORD PTR [ebx],0xffffffc5
  4166e2:	mov    al,ds:0x661b29ca
  4166e7:	outs   dx,DWORD PTR ds:[esi]
  4166e8:	or     al,0xb1
  4166ea:	xor    DWORD PTR [edi+ecx*1],edx
  4166ed:	lods   al,BYTE PTR ds:[esi]
  4166ee:	test   BYTE PTR [ebx],dl
  4166f0:	retf   0x46ab
  4166f3:	and    al,0xd
  4166f5:	imul   ecx,DWORD PTR [edx+0x55],0xffffffd4
  4166f9:	loop   0x4166fe
  4166fb:	test   eax,0x9b66b67e
  416700:	int    0x82
  416702:	inc    eax
  416703:	(bad)  
  416704:	sbb    ebx,DWORD PTR [ebx-0x45]
  416707:	into   
  416708:	mov    dh,0xce
  41670a:	jle    0x4166ec
  41670c:	retf   
  41670d:	push   ecx
  41670e:	xor    eax,0x9a8930fe
  416713:	addr16 dec dl
  416716:	popa   
  416717:	inc    esi
  416718:	fwait
  416719:	push   ebx
  41671a:	pop    esp
  41671b:	pop    esi
  41671c:	std    
  41671d:	and    BYTE PTR [ecx],cl
  41671f:	push   esi
  416720:	dec    bh
  416722:	int    0x45
  416724:	out    dx,al
  416725:	or     DWORD PTR [eax-0x18],0xf2c7c583
  41672c:	or     BYTE PTR [ecx],bh
  41672e:	fs jo  0x4166f9
  416731:	mov    esi,0xf8e1af79
  416736:	data16 xor BYTE PTR [esi+0x14],0x48
  41673b:	sbb    ch,bl
  41673d:	sar    DWORD PTR [eax],1
  41673f:	mov    cl,0x95
  416741:	jb     0x4166f9
  416743:	push   edi
  416744:	xchg   edx,eax
  416745:	mov    ch,0x4f
  416747:	sub    DWORD PTR [edx],edi
  416749:	sar    edx,0x30
  41674c:	adc    BYTE PTR [eax+ebx*8-0xd],0xa
  416751:	clc    
  416752:	retf   0x57fa
  416755:	inc    ecx
  416756:	inc    ecx
  416757:	fdivr  QWORD PTR [edi+0x6e4a21cd]
  41675d:	int    0x8
  41675f:	mov    BYTE PTR [edx],bl
  416761:	gs daa 
  416763:	inc    ebp
  416764:	inc    edx
  416765:	ror    BYTE PTR [esi+0x109207e1],0x16
  41676c:	jno    0x4167b7
  41676e:	pop    ebx
  41676f:	add    ecx,edi
  416771:	int3   
  416772:	test   BYTE PTR [esi+0x52f30c55],cl
  416778:	sbb    al,0x14
  41677a:	fiadd  WORD PTR [esi]
  41677c:	out    dx,eax
  41677d:	pop    es
  41677e:	popa   
  41677f:	mov    al,0xcc
  416781:	stc    
  416782:	mov    esi,0xbd997c06
  416787:	cs mov edi,0x7e4b8139
  41678d:	cmp    DWORD PTR [ebp+0x4d],esp
  416790:	aam    0xc5
  416792:	cmp    al,0x13
  416794:	repz jbe 0x416797
  416797:	mov    DWORD PTR [edx+0x29],esi
  41679a:	mov    al,0xa5
  41679c:	xchg   DWORD PTR [edi+0x41],edi
  41679f:	add    esp,DWORD PTR [ebx]
  4167a1:	retf   
  4167a2:	repnz xchg dl,dh
  4167a5:	outs   dx,DWORD PTR ds:[esi]
  4167a6:	jge    0x4167cd
  4167a8:	mov    DWORD PTR [edi-0x467c0332],ecx
  4167ae:	fadd   DWORD PTR [edx]
  4167b0:	cwde   
  4167b1:	mov    dl,0xb1
  4167b3:	fiadd  DWORD PTR ds:0xed99bb82
  4167b9:	push   eax
  4167ba:	std    
  4167bb:	or     dl,bh
  4167bd:	sub    BYTE PTR [ecx+0x25],cl
  4167c0:	mov    ebp,0x1f56a42d
  4167c5:	imul   edi,DWORD PTR [edi-0x13],0xcfd27072
  4167cc:	jno    0x41679a
  4167ce:	loopne 0x4167df
  4167d0:	or     al,0x33
  4167d2:	pop    ds
  4167d3:	bts    DWORD PTR [edx],ebp
  4167d6:	lods   eax,DWORD PTR ds:[esi]
  4167d7:	fidiv  WORD PTR [esi+ecx*4]
  4167da:	adc    eax,0x323ba0d2
  4167df:	adc    al,bh
  4167e1:	and    ecx,DWORD PTR [ecx-0x14]
  4167e4:	cmc    
  4167e5:	pop    edi
  4167e6:	bound  ecx,QWORD PTR ds:0x4a40b223
  4167ec:	stos   DWORD PTR es:[edi],eax
  4167ed:	xor    dh,bl
  4167ef:	scas   eax,DWORD PTR es:[edi]
  4167f0:	inc    edi
  4167f1:	adc    DWORD PTR [eax+0x67],eax
  4167f4:	fisubr WORD PTR [ebx-0x133ee5b7]
  4167fa:	js     0x416819
  4167fc:	and    bl,ah
  4167fe:	rol    DWORD PTR ds:0x621b9b0c,1
  416804:	push   esi
  416805:	push   ss
  416806:	call   0x1827892e
  41680b:	jns    0x41682e
  41680d:	inc    esp
  41680e:	stos   DWORD PTR es:[edi],eax
  41680f:	repz dec edx
  416811:	push   es
  416812:	shr    BYTE PTR [ebx],1
  416814:	push   0x5f0b74c5
  416819:	dec    edi
  41681a:	xor    al,0x3b
  41681c:	jp     0x416817
  41681e:	dec    edx
  41681f:	repz jle 0x4167d8
  416822:	mov    ds:0xefe20f09,eax
  416827:	mov    ds:0xed2f2b7,eax
  41682c:	jns    0x4167f6
  41682e:	les    esi,FWORD PTR ds:0x1c2defcf
  416834:	jmp    0x3062191d
  416839:	hlt    
  41683a:	add    eax,0x52ac3df7
  41683f:	xor    ah,BYTE PTR [eax+0x3f]
  416842:	push   ecx
  416843:	add    esi,DWORD PTR [edx+0x24]
  416846:	or     edi,esp
  416848:	cmp    DWORD PTR [esi+0x5b],ecx
  41684b:	sbb    BYTE PTR [ebx],0x1f
  41684e:	mov    bh,0xdf
  416850:	cmp    BYTE PTR [edx+eiz*1],al
  416853:	cmp    DWORD PTR [ebx-0x47a70854],0x3d
  41685a:	and    al,0xdd
  41685c:	push   edi
  41685d:	test   eax,0xec7ca1cd
  416862:	test   eax,0x639ba514
  416867:	fsubr  QWORD PTR [edx-0x38a6a9bb]
  41686d:	test   DWORD PTR [ecx+ecx*4],0x8713610
  416874:	imul   ecx,esi,0xd6405d80
  41687a:	test   BYTE PTR [ebx],0xe2
  41687d:	push   ss
  41687e:	fwait
  41687f:	xchg   edx,eax
  416880:	scas   al,BYTE PTR es:[edi]
  416881:	rol    dh,0x1e
  416884:	pop    ecx
  416885:	add    edx,DWORD PTR [ebp+0x67]
  416888:	inc    esp
  416889:	aam    0x73
  41688b:	cmp    bl,BYTE PTR [esi]
  41688d:	ror    DWORD PTR [esi-0x621547b9],cl
  416893:	in     al,0x4
  416895:	lods   al,BYTE PTR ds:[esi]
  416896:	adc    eax,0x42680944
  41689b:	mov    ch,0x3d
  41689d:	sbb    al,0x91
  41689f:	out    0xfa,al
  4168a1:	jle    0x41683a
  4168a3:	push   edx
  4168a4:	(bad)  
  4168a5:	daa    
  4168a6:	adc    ebx,ebp
  4168a8:	xor    al,0x82
  4168aa:	cmc    
  4168ab:	mov    dl,0x97
  4168ad:	or     al,0x89
  4168af:	push   ebp
  4168b0:	test   al,0x8b
  4168b2:	push   ebp
  4168b3:	or     BYTE PTR [ebx-0x3d7e53a3],cl
  4168b9:	xchg   ebx,eax
  4168ba:	clc    
  4168bb:	add    BYTE PTR fs:[ebx],cl
  4168be:	ror    DWORD PTR [ecx+0x558bac55],cl
  4168c4:	or     cl,ch
  4168c6:	pushf  
  4168c7:	and    eax,DWORD PTR [eax]
  4168c9:	add    BYTE PTR [edi+0x65],dl
  4168cc:	stos   DWORD PTR es:[edi],eax
  4168cd:	cwde   
  4168ce:	jnp    0x416868
  4168d0:	inc    edi
  4168d1:	jns    0x4168fa
  4168d3:	in     eax,dx
  4168d4:	fistp  DWORD PTR [eax-0xa]
  4168d7:	xor    al,BYTE PTR [ebp+0x7d3bbeeb]
  4168dd:	jp     0x4168dd
  4168df:	pop    edi
  4168e0:	jp     0x41695c
  4168e2:	sub    BYTE PTR [eax-0x2b],cl
  4168e5:	pop    ebx
  4168e6:	sar    DWORD PTR [ecx+ebp*4-0x49ef8f8c],cl
  4168ed:	add    edi,DWORD PTR [esi+0x4f]
  4168f0:	in     al,dx
  4168f1:	pop    ds
  4168f2:	mov    ebx,0xa931f462
  4168f7:	cmp    al,0x37
  4168f9:	lock loope 0x41692d
  4168fc:	push   ebx
  4168fd:	int    0xc0
  4168ff:	scas   eax,DWORD PTR es:[edi]
  416900:	mov    cl,0x7f
  416902:	inc    DWORD PTR [esi+0x5e]
  416905:	test   eax,0xecd4f682
  41690a:	imul   edi,DWORD PTR [eax+eax*1-0x342ec28c],0x57
  416912:	mov    al,0xa2
  416914:	adc    eax,0x3ac01f76
  416919:	fwait
  41691a:	cmp    ecx,DWORD PTR [ebx-0x4f60bc64]
  416920:	xchg   DWORD PTR [ebx-0x69d8e0ff],esp
  416926:	cwde   
  416927:	mov    al,ds:0x673cd6da
  41692c:	cmc    
  41692d:	sti    
  41692e:	add    DWORD PTR [esi+ecx*1],edi
  416931:	push   edi
  416932:	push   ds
  416933:	xor    al,bl
  416935:	sbb    eax,0x3c7efb2c
  41693a:	xor    esi,esi
  41693c:	popf   
  41693d:	inc    esi
  41693e:	mov    ds:0x36838b0c,al
  416943:	je     0x41698d
  416945:	and    al,dh
  416947:	pop    esp
  416948:	inc    esp
  416949:	neg    ecx
  41694b:	mov    eax,ebx
  41694d:	cmc    
  41694e:	pop    esi
  41694f:	stc    
  416950:	push   ecx
  416951:	xor    eax,0x386b11d8
  416956:	pop    edi
  416957:	out    0xe3,al
  416959:	sub    BYTE PTR [ecx],ah
  41695b:	ja     0x4168ff
  41695d:	int3   
  41695e:	xchg   ebp,eax
  41695f:	retf   0xe6b3
  416962:	inc    ecx
  416963:	jns    0x4168fc
  416965:	sbb    al,ah
  416967:	sbb    esi,DWORD PTR [esp+eiz*4-0x13]
  41696b:	dec    eax
  41696c:	cli    
  41696d:	out    dx,eax
  41696e:	adc    esp,DWORD PTR [ecx-0x24]
  416971:	sti    
  416972:	repz inc ebx
  416974:	cmp    ebp,DWORD PTR [ebx]
  416976:	sub    al,0x2a
  416978:	scas   eax,DWORD PTR es:[edi]
  416979:	pop    esi
  41697a:	mov    edi,0x83ba2287
  41697f:	cdq    
  416980:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416981:	push   0xffffffb9
  416983:	imul   esi,DWORD PTR [esi-0x4232bf33],0x9
  41698a:	jge    0x4169c3
  41698c:	addr16 push esp
  41698e:	xchg   edx,eax
  41698f:	or     DWORD PTR [eax+0x1e4116c],edi
  416995:	icebp  
  416996:	lea    edx,[edx+0x3d]
  416999:	adc    eax,0xc6f62aec
  41699e:	inc    esi
  41699f:	cmc    
  4169a0:	pushf  
  4169a1:	pop    esi
  4169a2:	push   edx
  4169a3:	pop    esi
  4169a4:	jmp    0xc0a5b51c
  4169a9:	sub    ebp,edx
  4169ab:	jecxz  0x41696d
  4169ad:	shl    BYTE PTR [esi+0x1d1d0a5c],0x61
  4169b4:	dec    ecx
  4169b5:	imul   eax,eax,0xda3b9e62
  4169bb:	pop    edx
  4169bc:	pop    es
  4169bd:	dec    ecx
  4169be:	or     BYTE PTR [eax+eiz*4-0x687353fa],al
  4169c5:	shl    DWORD PTR [edi-0x71],cl
  4169c8:	sbb    BYTE PTR [ebx],dl
  4169ca:	pop    edx
  4169cb:	clc    
  4169cc:	imul   esi,DWORD PTR [edx],0xff1e23de
  4169d2:	sti    
  4169d3:	lahf   
  4169d4:	fcom   DWORD PTR es:[esi+0x5240df2b]
  4169db:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4169dc:	popf   
  4169dd:	rol    BYTE PTR [edx+0x46],0x7b
  4169e1:	(bad)  
  4169e2:	adc    eax,0x54364fb8
  4169e7:	mov    esi,0xa1cf7ad2
  4169ec:	(bad)  
  4169ed:	in     al,0x8e
  4169ef:	jg     0x4169a4
  4169f1:	imul   ecx,esp,0x28
  4169f4:	sbb    eax,0x3783c478
  4169f9:	or     eax,0x5f6103aa
  4169fe:	in     eax,dx
  4169ff:	sbb    cl,BYTE PTR [ebx+0x2b]
  416a02:	xor    BYTE PTR [edx],al
  416a04:	jmp    0x416a43
  416a06:	je     0x416a21
  416a08:	mov    fs:0xea44e2d8,eax
  416a0e:	(bad)  
  416a0f:	and    esi,edi
  416a11:	xchg   ebx,eax
  416a12:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416a13:	bswap  edi
  416a15:	scas   al,BYTE PTR es:[edi]
  416a16:	enter  0xff04,0x59
  416a1a:	and    al,0x81
  416a1c:	rcr    ch,cl
  416a1e:	popa   
  416a1f:	fstp   DWORD PTR [esi+0x68]
  416a22:	ins    BYTE PTR es:[edi],dx
  416a23:	imul   dl
  416a25:	jmp    0x4169eb
  416a27:	fdivrp st(1),st
  416a29:	cdq    
  416a2a:	aaa    
  416a2b:	xlat   BYTE PTR ds:[ebx]
  416a2c:	jbe    0x416a02
  416a2e:	dec    ebx
  416a2f:	push   ecx
  416a30:	xor    eax,0x23626e31
  416a35:	inc    ebx
  416a36:	xchg   BYTE PTR gs:[esi],bl
  416a39:	ja     0x416a96
  416a3b:	add    bl,ch
  416a3d:	test   al,0x33
  416a3f:	outs   dx,BYTE PTR ds:[esi]
  416a40:	push   ebx
  416a41:	stos   DWORD PTR es:[edi],eax
  416a42:	clc    
  416a43:	imul   esp,DWORD PTR [edi-0x16],0x7a
  416a47:	adc    BYTE PTR [eax-0x25a59c27],al
  416a4d:	jns    0x416a2d
  416a4f:	add    BYTE PTR [edi+ebp*2],dl
  416a52:	retf   
  416a53:	les    eax,FWORD PTR [ebp+0x580419c4]
  416a59:	and    ch,BYTE PTR [edx-0x3]
  416a5c:	inc    ebp
  416a5d:	jb     0x416a87
  416a5f:	inc    esi
  416a60:	stos   BYTE PTR es:[edi],al
  416a61:	repz pop esi
  416a63:	sub    al,0x30
  416a65:	mov    ebx,0xaa3a8fd7
  416a6a:	xchg   edx,eax
  416a6b:	outs   dx,BYTE PTR ds:[esi]
  416a6c:	leave  
  416a6d:	sahf   
  416a6e:	(bad)  
  416a6f:	or     eax,0xec3188e2
  416a74:	push   esp
  416a75:	jne    0x416a32
  416a77:	xor    al,BYTE PTR [esp+esi*8-0x196b4792]
  416a7e:	or     edi,DWORD PTR [esi-0x5ae81e44]
  416a84:	test   BYTE PTR [ebx-0x68f5538],dh
  416a8a:	cmp    eax,0xf1caad93
  416a8f:	dec    DWORD PTR [edi-0x8]
  416a92:	ins    DWORD PTR es:[edi],dx
  416a93:	mov    fs,WORD PTR [ebx+0x7719653a]
  416a99:	xchg   esp,eax
  416a9a:	loopne 0x416a8a
  416a9c:	dec    edx
  416a9d:	pop    ss
  416a9e:	jge    0x416ae7
  416aa0:	mov    ah,0xbe
  416aa2:	xchg   BYTE PTR [ebp+0x1c],cl
  416aa5:	fs (bad) 
  416aa7:	jb     0x416b07
  416aa9:	add    DWORD PTR [esi+0x6bb7f45d],edi
  416aaf:	jnp    0x416b0d
  416ab1:	xor    al,0x1c
  416ab3:	repnz inc eax
  416ab5:	test   al,0xdc
  416ab7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416ab8:	push   esp
  416ab9:	bound  edi,QWORD PTR [esi-0x65]
  416abc:	mov    ebx,0xf68d1f2f
  416ac1:	loop   0x416b2d
  416ac3:	fcmovb st,st(4)
  416ac5:	and    ah,BYTE PTR [eax+0x3c]
  416ac8:	push   ss
  416ac9:	les    ecx,FWORD PTR [edx]
  416acb:	sbb    eax,0x1aeefb0d
  416ad0:	fmul   QWORD PTR [edi]
  416ad2:	daa    
  416ad3:	imul   esp,DWORD PTR [ebp-0x7f],0x3e
  416ad7:	sbb    eax,0xc8423f60
  416adc:	xchg   edi,eax
  416add:	sub    BYTE PTR [ebp+esi*2-0x335a6888],bh
  416ae4:	ret    0xe865
  416ae7:	jge    0x416acf
  416ae9:	out    0xd9,al
  416aeb:	jno    0x416aa8
  416aed:	lock call 0x6afb:0x66418fcf
  416af5:	icebp  
  416af6:	push   ebp
  416af7:	pop    esi
  416af8:	pop    edx
  416af9:	out    0x6c,al
  416afb:	jb     0x416b20
  416afd:	jle    0x416aa9
  416aff:	div    dl
  416b01:	pop    ebx
  416b02:	pop    ecx
  416b03:	lock out 0x3a,eax
  416b06:	fstp   DWORD PTR [ebx-0x30cddc4b]
  416b0c:	mov    ch,0xfa
  416b0e:	push   0x82888037
  416b13:	inc    edx
  416b14:	xor    eax,0x61932d7f
  416b19:	lea    edi,[ebx]
  416b1b:	push   esi
  416b1c:	push   edx
  416b1d:	aad    0x28
  416b1f:	dec    ebx
  416b20:	in     eax,dx
  416b21:	data16 or BYTE PTR [edx+0x71],cl
  416b25:	pop    ds
  416b26:	xchg   edx,eax
  416b27:	call   FWORD PTR [ebx-0x7c942d54]
  416b2d:	(bad)  [edx+0x3]
  416b30:	adc    eax,0x9f8116c2
  416b35:	or     DWORD PTR [eax-0x7000996c],eax
  416b3b:	jne    0x416ae7
  416b3d:	jno    0x416b39
  416b3f:	lds    esi,FWORD PTR [edi+0x38]
  416b42:	xor    ch,BYTE PTR [esi+esi*4-0x4fad6704]
  416b49:	pop    ebx
  416b4a:	xor    dl,BYTE PTR [esi+esi*4+0x5a]
  416b4e:	mov    dl,0xc4
  416b50:	sbb    DWORD PTR [ebp+0x32],edx
  416b53:	pop    esi
  416b54:	push   0xffffff98
  416b56:	sahf   
  416b57:	sbb    ch,BYTE PTR [esi+ebx*1]
  416b5a:	fbld   TBYTE PTR [ecx-0x19]
  416b5d:	fadd   DWORD PTR [esi]
  416b5f:	jle    0x416bbc
  416b61:	or     eax,eax
  416b63:	dec    ebp
  416b64:	jno    0x416b7f
  416b66:	aam    0x9e
  416b68:	push   cs
  416b69:	or     BYTE PTR [ecx+0x3585a449],0x77
  416b70:	adc    al,0x2a
  416b72:	(bad)  
  416b73:	das    
  416b74:	inc    edx
  416b75:	repnz dec ebp
  416b77:	(bad)  
  416b78:	push   ebp
  416b79:	mov    ecx,0xbfae6af7
  416b7e:	add    dl,BYTE PTR [ebp+0x313c069f]
  416b84:	sbb    DWORD PTR [ecx],edx
  416b86:	xchg   edx,eax
  416b87:	lahf   
  416b88:	push   ebp
  416b89:	stos   BYTE PTR es:[edi],al
  416b8a:	adc    BYTE PTR [ecx-0x45],cl
  416b8d:	push   es
  416b8e:	dec    edi
  416b8f:	repz add DWORD PTR [ecx+0x16],edi
  416b93:	jge    0x416b6c
  416b95:	inc    ecx
  416b96:	pop    ds
  416b97:	call   0x22313b38
  416b9c:	cmp    bl,bh
  416b9e:	call   DWORD PTR [ecx-0x37]
  416ba1:	nop
  416ba2:	jne    0x416bcc
  416ba4:	and    ebp,ebp
  416ba6:	enter  0xec30,0x87
  416baa:	imul   esp,DWORD PTR [esi-0xdac99b1],0xffffffdb
  416bb1:	jmp    0x65587273
  416bb6:	leave  
  416bb7:	adc    eax,0xae39a53f
  416bbc:	fcomp  QWORD PTR [ecx-0x66]
  416bbf:	aas    
  416bc0:	adc    DWORD PTR [esi-0x6f],esi
  416bc3:	iret   
  416bc4:	cmp    edx,ebp
  416bc6:	add    bl,BYTE PTR [edx+0x3f43ab0e]
  416bcc:	adc    DWORD PTR [ecx+edi*4],ebx
  416bcf:	xor    al,0xd8
  416bd1:	sub    ch,BYTE PTR [edx-0x606db3fc]
  416bd7:	sbb    eax,DWORD PTR [ebx]
  416bd9:	or     ebp,edx
  416bdb:	xor    dl,BYTE PTR [ebx]
  416bdd:	pop    edi
  416bde:	inc    esi
  416bdf:	nop
  416be0:	test   eax,0xf169ed20
  416be5:	cmp    eax,0x129f3ccc
  416bea:	fld    TBYTE PTR [edi-0x46]
  416bed:	jle    0x416c55
  416bef:	sub    cl,BYTE PTR [ebx+edi*1]
  416bf2:	int    0x3e
  416bf4:	mul    ebp
  416bf6:	jmp    0x8e0:0x281621f9
  416bfd:	xor    cl,BYTE PTR [esi+0x57a0ad13]
  416c03:	bound  esi,QWORD PTR [edx-0x27371235]
  416c09:	cmp    BYTE PTR [ebx+edi*1],cl
  416c0c:	jno    0x416bc9
  416c0e:	ret    0x9e3
  416c11:	retf   0xa68
  416c14:	mov    esp,0x5b094e53
  416c19:	addr16 xchg esi,eax
  416c1b:	fcomp  DWORD PTR [ecx-0x14]
  416c1e:	mov    dh,0xaf
  416c20:	push   0xac772d1c
  416c25:	mov    BYTE PTR ds:0x138e3eae,bh
  416c2b:	mov    ebx,0x9094b3bc
  416c30:	dec    ebp
  416c31:	out    0x7,al
  416c33:	add    edx,DWORD PTR [edi-0x3847327b]
  416c39:	fcomip st,st(1)
  416c3b:	aas    
  416c3c:	repz cmp DWORD PTR [edx+0x34],ebp
  416c40:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416c41:	inc    ebp
  416c42:	sub    dl,dl
  416c44:	mov    al,0x84
  416c46:	test   al,0x2
  416c48:	ret    
  416c49:	push   cs
  416c4a:	ret    0x8897
  416c4d:	fisubr DWORD PTR [ecx-0x235ea88e]
  416c53:	mov    esi,0x89a9fd9
  416c58:	mov    bh,0x7a
  416c5a:	xor    ecx,DWORD PTR [edi+0x5d]
  416c5d:	outs   dx,BYTE PTR ds:[esi]
  416c5e:	sbb    eax,DWORD PTR [esp+esi*1-0x72d6bca6]
  416c65:	xchg   ebp,eax
  416c66:	outs   dx,DWORD PTR ds:[esi]
  416c67:	mov    cl,0x4c
  416c69:	call   0x1370:0x79608b34
  416c70:	iret   
  416c71:	fcom   DWORD PTR [eax+0x89f2f69]
  416c77:	xor    eax,DWORD PTR [esi-0x13705917]
  416c7d:	inc    ebx
  416c7e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416c7f:	push   0xffffffbd
  416c81:	adc    esp,DWORD PTR [esp+edi*8]
  416c84:	stc    
  416c85:	pop    eax
  416c86:	or     al,0x97
  416c88:	add    eax,0x4054b9c0
  416c8d:	ds sub ebp,ecx
  416c90:	shl    BYTE PTR [edx+0x4ae2024a],0x94
  416c97:	add    esp,DWORD PTR [edx-0x40]
  416c9a:	mov    ch,0xe0
  416c9c:	and    ah,BYTE PTR [esi-0x45]
  416c9f:	mov    al,ds:0x71370464
  416ca4:	out    0x1c,eax
  416ca6:	mov    esi,0x2724ef21
  416cab:	rol    BYTE PTR [ecx+0x6],0x1c
  416caf:	pop    ss
  416cb0:	xor    ecx,DWORD PTR [edi]
  416cb2:	test   dl,ch
  416cb4:	fsub   QWORD PTR [eax+ecx*1]
  416cb7:	adc    esi,esi
  416cb9:	out    dx,al
  416cba:	test   BYTE PTR ds:0x8ad68873,0x2d
  416cc1:	outs   dx,BYTE PTR ds:[esi]
  416cc2:	mov    edi,0xf63b7085
  416cc7:	sbb    ecx,DWORD PTR [edi+eiz*1+0x5d]
  416ccb:	ins    DWORD PTR es:[edi],dx
  416ccc:	add    ecx,DWORD PTR [ebx-0x5f]
  416ccf:	pop    ecx
  416cd0:	dec    eax
  416cd1:	retf   0xee52
  416cd4:	je     0x416c79
  416cd6:	(bad)  
  416cd8:	push   edx
  416cd9:	out    0x6c,eax
  416cdb:	push   eax
  416cdc:	adc    ecx,DWORD PTR [ecx+edi*4-0x2f]
  416ce0:	idiv   BYTE PTR [esi]
  416ce2:	sub    BYTE PTR [ebx+0x48],bl
  416ce5:	sahf   
  416ce6:	pop    ss
  416ce7:	hlt    
  416ce8:	into   
  416ce9:	xor    bh,0x7d
  416cec:	ins    DWORD PTR es:[edi],dx
  416ced:	leave  
  416cee:	outs   dx,BYTE PTR ds:[esi]
  416cef:	es cs (bad) 
  416cf2:	sbb    ecx,DWORD PTR [ecx+0x6]
  416cf5:	popa   
  416cf6:	(bad)  
  416cf7:	cmp    bl,BYTE PTR [ebx]
  416cf9:	and    bh,BYTE PTR [edx+0x22]
  416cfc:	addr16 push eax
  416cfe:	imul   ecx,DWORD PTR [ebx],0x51
  416d01:	pop    edx
  416d02:	xchg   ebp,eax
  416d03:	add    DWORD PTR [edx+esi*1-0x5c93b0d2],edx
  416d0a:	int    0xde
  416d0c:	fcomp  DWORD PTR [eax+0x2]
  416d0f:	mov    esp,ebx
  416d11:	pop    esp
  416d12:	leave  
  416d13:	mov    edi,0x8bfeeb1b
  416d18:	mov    eax,0xffc1c582
  416d1d:	cwde   
  416d1e:	push   edi
  416d1f:	popa   
  416d20:	fs retf 0x657b
  416d24:	shl    bl,1
  416d26:	test   cl,ch
  416d28:	add    ch,bh
  416d2a:	xchg   ebp,eax
  416d2b:	ja     0x416d02
  416d2d:	cmp    ecx,eax
  416d2f:	xchg   edi,eax
  416d30:	mov    dl,0xb4
  416d32:	xor    dh,BYTE PTR [edx+ecx*8-0x7c]
  416d36:	inc    ecx
  416d37:	sbb    al,0x2b
  416d39:	push   0x60
  416d3b:	repz sub DWORD PTR [ebp+0x12],edi
  416d3f:	jno    0x416d0b
  416d41:	jo     0x416d7a
  416d43:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416d44:	icebp  
  416d45:	fisttp DWORD PTR [ebp-0x51f0ea4b]
  416d4b:	inc    ebx
  416d4c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416d4d:	sub    BYTE PTR [ebp+0x46],cl
  416d50:	pushf  
  416d51:	dec    ebx
  416d52:	das    
  416d53:	add    al,0xc2
  416d55:	lods   al,BYTE PTR ds:[esi]
  416d56:	gs ret 
  416d58:	xor    DWORD PTR [ebx-0x6b57cb0b],edx
  416d5e:	sub    eax,0xc52f66c9
  416d63:	or     al,0x25
  416d65:	jno    0x416dc0
  416d67:	aam    0xd6
  416d69:	leave  
  416d6a:	jne    0x416d01
  416d6c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416d6d:	sub    al,0x61
  416d6f:	xchg   edx,eax
  416d70:	(bad)  
  416d71:	(bad)  
  416d73:	gs cmp al,0x2a
  416d76:	cmp    edi,ebp
  416d78:	lods   eax,DWORD PTR ds:[esi]
  416d79:	mov    ah,0xcd
  416d7b:	push   0xb1d9f965
  416d80:	xor    al,0x4e
  416d82:	fdivrp st(3),st
  416d84:	dec    ecx
  416d85:	or     ah,bl
  416d87:	adc    ebx,esp
  416d89:	stos   BYTE PTR es:[edi],al
  416d8a:	mov    ch,BYTE PTR [ebx+0x21]
  416d8d:	or     BYTE PTR [ebx],al
  416d8f:	dec    eax
  416d90:	adc    ah,BYTE PTR [esi]
  416d92:	push   ds
  416d93:	repz pop es
  416d95:	(bad)  
  416d96:	sti    
  416d97:	xchg   edx,eax
  416d98:	jae    0x416d1b
  416d9a:	fwait
  416d9b:	mov    ?,WORD PTR [edx+ecx*2+0x6cb635ce]
  416da2:	es add cl,al
  416da5:	mov    eax,ds:0x9da32a46
  416daa:	retf   0x2092
  416dad:	cwde   
  416dae:	dec    ecx
  416daf:	add    eax,0x6a12e5f8
  416db4:	and    BYTE PTR [ebx+0x6779caa6],ch
  416dba:	xor    esp,DWORD PTR [esi]
  416dbc:	xchg   ebp,eax
  416dbd:	jmp    0x416e2a
  416dbf:	popa   
  416dc0:	out    dx,eax
  416dc1:	mov    bl,0x93
  416dc3:	ja     0x416d4a
  416dc5:	mov    ebx,0xb55a6c15
  416dca:	imul   ebx,DWORD PTR [eax-0x2b],0xffffffd9
  416dce:	fwait
  416dcf:	xchg   ebp,eax
  416dd0:	shl    DWORD PTR [edx-0x27],1
  416dd3:	dec    esi
  416dd4:	mov    ds:0x501626c4,al
  416dd9:	ins    DWORD PTR es:[edi],dx
  416dda:	into   
  416ddb:	jae    0x416e2f
  416ddd:	mov    ebx,DWORD PTR [ebx+0xbb7f37e]
  416de3:	dec    ebp
  416de4:	cs sub eax,ebp
  416de7:	jmp    0x416d72
  416de9:	ret    0x956d
  416dec:	rcl    DWORD PTR ds:0x77056626,cl
  416df2:	retf   
  416df3:	jmp    0x293769bf
  416df8:	or     DWORD PTR ds:0xf2ca6717,eax
  416dfe:	mov    edi,0x6ddcd390
  416e03:	jp     0x416dd4
  416e05:	jmp    0xf93bba45
  416e0a:	sub    DWORD PTR [esi],esp
  416e0c:	imul   esp,DWORD PTR [ebx+0x48],0xffffffaa
  416e10:	mov    esp,?
  416e12:	push   0xffffffe4
  416e14:	or     BYTE PTR [eax+0x35d816d9],bl
  416e1a:	leave  
  416e1b:	mov    cs,WORD PTR [ebp+esi*4+0x2a]
  416e1f:	in     ax,0x51
  416e22:	push   edx
  416e23:	push   0xd
  416e25:	and    eax,esp
  416e27:	add    DWORD PTR [eax+ecx*4],ebp
  416e2a:	ja     0x416e9e
  416e2c:	jno    0x416dcc
  416e2e:	fidivr DWORD PTR [ecx]
  416e30:	dec    edi
  416e31:	jmp    0x3af1:0x6f0b0642
  416e38:	sbb    ebx,edx
  416e3a:	add    DWORD PTR [eax+0x21],esi
  416e3d:	fimul  WORD PTR [edx+0x124d4782]
  416e43:	shr    DWORD PTR [ecx],cl
  416e45:	push   esi
  416e46:	mov    ds:0x9ab80a03,al
  416e4b:	add    DWORD PTR [ebx],edx
  416e4d:	push   cs
  416e4e:	je     0x416dd0
  416e50:	xchg   esi,eax
  416e51:	stos   DWORD PTR es:[edi],eax
  416e52:	icebp  
  416e53:	dec    edx
  416e54:	arpl   WORD PTR [ebx+0x5a],bx
  416e57:	ror    ah,cl
  416e59:	xchg   ebx,ebp
  416e5b:	cmp    al,0x3c
  416e5d:	cwde   
  416e5e:	adc    ebp,ecx
  416e60:	adc    BYTE PTR [edx-0x1b570597],0x2e
  416e67:	mov    ds:0xef6f6bfd,eax
  416e6c:	jmp    0xa90c:0xc8e43d5c
  416e73:	pop    eax
  416e74:	(bad)  
  416e76:	sti    
  416e77:	jbe    0x416ea5
  416e79:	push   edx
  416e7a:	(bad)  
  416e7b:	and    edx,edx
  416e7d:	aaa    
  416e7e:	xchg   edi,eax
  416e7f:	inc    edx
  416e80:	push   esp
  416e81:	jnp    0x416e3c
  416e83:	aas    
  416e84:	lea    esi,[eax+0x62]
  416e87:	retf   0x9165
  416e8a:	call   DWORD PTR [ecx+0x2e945a95]
  416e90:	mov    bl,0x99
  416e92:	mov    esi,0xe54674cd
  416e97:	and    BYTE PTR [edx],ch
  416e99:	cli    
  416e9a:	retf   
  416e9b:	xchg   ebp,eax
  416e9c:	mov    eax,ds:0x11e5807c
  416ea1:	into   
  416ea2:	xchg   ecx,eax
  416ea3:	push   eax
  416ea4:	sub    BYTE PTR [ecx-0x3f],cl
  416ea7:	movsx  edi,WORD PTR [ecx+0x2642dbcb]
  416eae:	mov    edx,0x8be546c6
  416eb3:	rcr    DWORD PTR [ebp+0x3cdf8354],0xdc
  416eba:	inc    ecx
  416ebb:	sub    bh,BYTE PTR [eax]
  416ebd:	aam    0x73
  416ebf:	push   es
  416ec0:	ds mov dh,0x2f
  416ec3:	imul   edi,DWORD PTR [ebp-0x7b903b16],0x31923aa4
  416ecd:	mov    al,ds:0xeeb7181f
  416ed2:	sub    al,0x8b
  416ed4:	cwde   
  416ed5:	out    0xb3,al
  416ed7:	rcr    bh,cl
  416ed9:	repnz aad 0xae
  416edc:	jne    0x416f2a
  416ede:	test   bh,dl
  416ee0:	cmp    bh,BYTE PTR [edi]
  416ee2:	jo     0x416f2d
  416ee4:	shl    BYTE PTR [ebp-0x63],0xfe
  416ee8:	pop    esp
  416ee9:	push   ss
  416eea:	rol    esp,0xdd
  416eed:	cmc    
  416eee:	cld    
  416eef:	dec    ecx
  416ef0:	sbb    dh,bl
  416ef2:	mov    bh,0xa5
  416ef4:	(bad)  
  416ef5:	xchg   esi,eax
  416ef6:	and    DWORD PTR [ebp-0x28],edi
  416ef9:	(bad)  
  416efc:	mov    ecx,0x9dba8d16
  416f01:	or     dh,0x1f
  416f04:	push   0x590553fe
  416f09:	cmp    BYTE PTR [ecx],cl
  416f0b:	inc    ecx
  416f0c:	sbb    cl,cl
  416f0e:	jle    0x416e98
  416f10:	scas   eax,DWORD PTR es:[edi]
  416f11:	cmp    ebx,DWORD PTR [edi+eax*4+0x46]
  416f15:	push   ds
  416f16:	mov    WORD PTR [edi],ds
  416f18:	mov    ecx,0x8b080c39
  416f1d:	rol    BYTE PTR [esi],0xbe
  416f20:	stos   BYTE PTR es:[edi],al
  416f21:	push   0xffffffdf
  416f23:	xor    DWORD PTR [edi+0x337da56f],ecx
  416f29:	add    cl,bh
  416f2b:	sbb    eax,edi
  416f2d:	cmp    al,0x5a
  416f2f:	sub    eax,0x34b4b9c9
  416f34:	mov    ebp,0x822e8cf6
  416f39:	test   al,0xd5
  416f3b:	popa   
  416f3c:	or     BYTE PTR [eax+ecx*2],dh
  416f3f:	cmp    BYTE PTR [ebp-0x3d99f9d8],bl
  416f45:	push   0xffffffff
  416f47:	cmc    
  416f48:	xor    al,0x15
  416f4a:	mov    al,ds:0xc91a18e5
  416f4f:	sub    eax,0x4d62b92
  416f54:	dec    edx
  416f55:	dec    esi
  416f56:	data16 std 
  416f58:	and    DWORD PTR [eax],ebx
  416f5a:	pop    edi
  416f5b:	sub    bl,0xcc
  416f5e:	push   esp
  416f5f:	scas   eax,DWORD PTR es:[edi]
  416f60:	out    dx,eax
  416f61:	into   
  416f62:	ins    DWORD PTR es:[edi],dx
  416f63:	mov    bh,0x61
  416f65:	in     al,0x9b
  416f67:	in     al,dx
  416f68:	mov    esi,0x9bc2d6b7
  416f6d:	push   0x81edc0c3
  416f72:	mov    ds:0xce4e5791,al
  416f77:	(bad)  
  416f78:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416f79:	adc    al,0x72
  416f7b:	sbb    al,0x30
  416f7d:	fst    QWORD PTR [eax+eiz*8]
  416f80:	leave  
  416f81:	sbb    DWORD PTR [eax+0x510de6ef],eax
  416f87:	clc    
  416f88:	jb     0x416f13
  416f8a:	sbb    DWORD PTR [edx+0x7c],edi
  416f8d:	nop    DWORD PTR [eax]
  416f90:	icebp  
  416f91:	icebp  
  416f92:	loopne 0x416f1c
  416f94:	lahf   
  416f95:	(bad)  
  416f96:	pop    ds
  416f97:	aad    0x77
  416f99:	jmp    0xd131d462
  416f9e:	arpl   WORD PTR ds:0xd661670a,di
  416fa4:	cld    
  416fa5:	dec    ebp
  416fa6:	mov    ch,0x6c
  416fa8:	xchg   DWORD PTR [esi+ecx*4-0x2b71ad07],esp
  416faf:	arpl   ax,si
  416fb1:	inc    ebp
  416fb2:	push   ebx
  416fb3:	sbb    DWORD PTR [edx],ecx
  416fb5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416fb6:	adc    esi,DWORD PTR [edx-0x397d7dfd]
  416fbc:	repnz outs dx,DWORD PTR ds:[esi]
  416fbe:	cmc    
  416fbf:	cli    
  416fc0:	or     eax,0x694a4c6f
  416fc5:	outs   dx,DWORD PTR ds:[esi]
  416fc6:	(bad)  [ecx]
  416fc8:	popa   
  416fc9:	inc    esp
  416fca:	loope  0x416fb3
  416fcc:	scas   eax,DWORD PTR es:[edi]
  416fcd:	shl    dl,1
  416fcf:	jne    0x416f7a
  416fd1:	push   ebx
  416fd2:	or     ah,BYTE PTR [ecx+0x1]
  416fd5:	ja     0x417044
  416fd7:	je     0x416fcb
  416fd9:	adc    bh,BYTE PTR [edi]
  416fdb:	imul   eax,DWORD PTR [ecx],0x6957a37d
  416fe1:	popf   
  416fe2:	int    0x2d
  416fe4:	leave  
  416fe5:	ja     0x416fdd
  416fe7:	out    0xe8,eax
  416fe9:	pop    ss
  416fea:	mov    bl,0xd2
  416fec:	imul   ecx,DWORD PTR [edi+0xb],0x819b1342
  416ff3:	add    esi,DWORD PTR [ebp+ebp*2-0x6410417e]
  416ffa:	xchg   esi,eax
  416ffb:	dec    edi
  416ffc:	dec    esi
  416ffd:	mov    bl,0x77
  416fff:	int3   
  417000:	nop
  417001:	xchg   ebx,eax
  417002:	rcl    DWORD PTR [eax+ebx*8-0x2d9030be],1
  417009:	jle    0x416fef
  41700b:	daa    
  41700c:	inc    ebp
  41700d:	shl    bh,0x5f
  417010:	xor    dh,0xf4
  417013:	mov    bl,0x72
  417015:	lock dec ecx
  417017:	inc    esi
  417018:	scas   al,BYTE PTR es:[edi]
  417019:	sub    al,0xd1
  41701b:	shl    DWORD PTR [edx],0xfc
  41701e:	sub    ah,BYTE PTR [eax-0x7e5d5aea]
  417024:	sub    dl,BYTE PTR [ecx]
  417026:	mov    al,0x1f
  417028:	add    ch,BYTE PTR [eax]
  41702a:	xchg   edi,eax
  41702b:	nop
  41702c:	lods   eax,DWORD PTR ds:[esi]
  41702d:	retf   
  41702e:	sbb    eax,DWORD PTR [ecx]
  417030:	sbb    DWORD PTR ss:[esi],esp
  417033:	mov    al,ds:0x49ec7734
  417038:	adc    ebp,DWORD PTR [ebx-0x5b468b0b]
  41703e:	xchg   ecx,esi
  417040:	sub    bh,BYTE PTR [ebp+0x50c0471]
  417046:	fisttp QWORD PTR [edi+0x32a9fb92]
  41704c:	dec    ebp
  41704d:	das    
  41704e:	push   0x3ddcc43c
  417053:	stc    
  417054:	adc    BYTE PTR [edx],0xc7
  417057:	and    eax,0x358b465
  41705c:	jb     0x41708b
  41705e:	sub    eax,0x42fb31f0
  417063:	aas    
  417064:	cwde   
  417065:	loopne 0x4170c4
  417067:	sub    ebx,edx
  417069:	or     DWORD PTR [eax+0x1b9b1326],edi
  41706f:	mov    eax,0x6b6534ef
  417074:	mov    gs,WORD PTR [ebx]
  417076:	je     0x417064
  417078:	ss call 0x6e9f:0x37ad8abe
  417080:	mov    BYTE PTR [eax+0x79c54482],cl
  417086:	(bad)  
  417087:	dec    edi
  417088:	jnp    0x4170ce
  41708a:	leave  
  41708b:	out    dx,eax
  41708c:	push   esp
  41708d:	and    BYTE PTR [edi],0x9
  417090:	xchg   ebx,eax
  417091:	fisubr DWORD PTR [ecx+0x2b]
  417094:	jns    0x41703c
  417096:	mov    BYTE PTR [ebp-0x23],bh
  417099:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41709a:	test   dh,0xbe
  41709d:	jnp    0x41703a
  41709f:	bound  ebx,QWORD PTR [ebp-0x5b]
  4170a2:	inc    ecx
  4170a3:	dec    eax
  4170a4:	mov    al,0x91
  4170a6:	jle    0x417107
  4170a8:	fcmovnu st,st(1)
  4170aa:	out    dx,eax
  4170ab:	xor    al,0xd9
  4170ad:	cmp    DWORD PTR [eax+0x65fba6b6],edi
  4170b3:	mov    dh,BYTE PTR [ebp-0x59]
  4170b6:	or     eax,0x1d2a9b42
  4170bb:	cmp    DWORD PTR [eax-0x4daad99e],0xfffffff7
  4170c2:	sub    al,cl
  4170c4:	(bad)  
  4170c5:	(bad)  
  4170c7:	mov    ecx,0x9e3c0ad5
  4170cc:	es sbb ah,dh
  4170cf:	in     eax,dx
  4170d0:	or     ebx,DWORD PTR [ebx+0x536cfb64]
  4170d6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4170d7:	sub    edx,DWORD PTR [esi-0x78]
  4170da:	sti    
  4170db:	fnstenv [esi+0x6915b2b0]
  4170e1:	out    dx,al
  4170e2:	push   cs
  4170e3:	rcr    bh,1
  4170e5:	ja     0x4170ca
  4170e7:	mov    ss,di
  4170ea:	ss in  eax,dx
  4170ec:	mov    ds:0x59d60c3,al
  4170f1:	xor    eax,0xcf7c25e2
  4170f6:	scas   al,BYTE PTR es:[edi]
  4170f7:	mov    esi,0x20bf525c
  4170fc:	(bad)  
  4170fd:	or     esi,DWORD PTR [eax-0x6e]
  417100:	mov    edx,0xd10e1d8f
  417105:	inc    edi
  417106:	imul   ebx,DWORD PTR [esi],0x41ad0cbe
  41710c:	inc    esp
  41710d:	es loopne 0x41718b
  417110:	pop    ebx
  417111:	dec    ebx
  417112:	clc    
  417113:	cmp    DWORD PTR [ebp+esi*8+0x56f4ac15],edi
  41711a:	out    0xf6,eax
  41711c:	and    BYTE PTR [ebx+0x29],dl
  41711f:	aam    0xa6
  417121:	add    eax,eax
  417123:	xchg   DWORD PTR [ebx+0x2459d1da],ebp
  417129:	cmp    cl,BYTE PTR [esi+0x7abb49fd]
  41712f:	xchg   esi,eax
  417130:	data16 or al,0xcf
  417134:	aam    0x2a
  417136:	mov    dl,0xb6
  417138:	xor    bh,ch
  41713a:	int    0x23
  41713c:	and    edx,DWORD PTR [eax]
  41713e:	gs pop es
  417140:	sbb    dh,bh
  417142:	cmp    BYTE PTR [ecx-0x70],ch
  417145:	mov    ecx,0x119caa0b
  41714a:	pop    esi
  41714b:	shr    BYTE PTR [esp+esi*2+0x7c1f26f],0x97
  417153:	sub    al,0xc7
  417155:	test   al,0x9e
  417157:	pop    edx
  417158:	jle    0x417134
  41715a:	dec    DWORD PTR [esi-0x7]
  41715d:	xor    bh,ah
  41715f:	push   eax
  417160:	dec    edx
  417161:	xchg   esi,eax
  417162:	xor    al,0x1b
  417164:	cdq    
  417165:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417166:	das    
  417167:	rcr    BYTE PTR es:[ebp+0x2a9ad9dc],1
  41716e:	or     ebx,esi
  417170:	push   es
  417171:	jnp    0x4170f4
  417173:	loope  0x417106
  417175:	cmp    ah,dl
  417177:	or     esi,ebp
  417179:	jmp    0x93b9:0x4b6ec41c
  417180:	hlt    
  417181:	dec    esp
  417182:	fstp   DWORD PTR [edx-0x33eaeaf5]
  417188:	(bad)  [ecx+esi*4+0x12]
  41718c:	push   ds
  41718d:	dec    eax
  41718e:	int3   
  41718f:	fdivr  DWORD PTR [edx-0x4a]
  417192:	sub    eax,0xe3fde681
  417197:	mov    eax,ds:0x4655f0e
  41719c:	out    0xba,eax
  41719e:	xor    bh,BYTE PTR [eax]
  4171a0:	push   edi
  4171a1:	push   esi
  4171a2:	lods   eax,DWORD PTR ds:[esi]
  4171a3:	mov    ebp,0x5f5db46e
  4171a8:	xchg   ebx,eax
  4171a9:	inc    esp
  4171aa:	inc    esp
  4171ab:	pop    ss
  4171ac:	repnz dec ecx
  4171ae:	outs   dx,DWORD PTR ds:[esi]
  4171af:	mov    DWORD PTR [edx-0x7f],edi
  4171b2:	and    cl,al
  4171b4:	add    BYTE PTR [ebp-0x2afaa7c1],0x2c
  4171bb:	outs   dx,BYTE PTR ds:[esi]
  4171bc:	arpl   bx,sp
  4171be:	cld    
  4171bf:	fstp   DWORD PTR [ebx-0x52]
  4171c2:	jae    0x417182
  4171c4:	xor    dl,dh
  4171c6:	xchg   esp,eax
  4171c7:	pop    edx
  4171c8:	out    0x72,al
  4171ca:	or     cl,ah
  4171cc:	adc    eax,0x4b2804fc
  4171d1:	aaa    
  4171d2:	ds out 0xaf,eax
  4171d5:	dec    esi
  4171d6:	cmp    BYTE PTR [ecx+0x74b79e37],dh
  4171dc:	cdq    
  4171dd:	retf   
  4171de:	and    ch,BYTE PTR [edi]
  4171e0:	push   edi
  4171e1:	push   ds
  4171e2:	jo     0x41723f
  4171e4:	fldenv [edi+0x74eafdf]
  4171ea:	aad    0x23
  4171ec:	neg    DWORD PTR [edx-0x4b390eb0]
  4171f2:	sbb    al,0xc1
  4171f5:	cmp    dl,BYTE PTR es:[edi]
  4171f8:	(bad)  
  4171f9:	xchg   ecx,eax
  4171fa:	xor    BYTE PTR [eax],ah
  4171fc:	fwait
  4171fd:	and    eax,0xf503563e
  417202:	into   
  417203:	mov    ds:0x2baa132c,al
  417208:	push   ds
  417209:	int3   
  41720a:	in     al,dx
  41720b:	mov    al,ds:0x62984ca4
  417210:	xor    al,0xf0
  417212:	dec    edx
  417213:	je     0x417278
  417215:	mov    ebx,0x4db5307
  41721a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41721b:	xor    bl,BYTE PTR [ecx-0xcd51f11]
  417221:	stos   DWORD PTR es:[edi],eax
  417222:	mov    bh,0x7f
  417224:	push   ebx
  417225:	sub    al,0xd
  417227:	push   esp
  417228:	in     eax,dx
  417229:	sub    al,0x8a
  41722b:	int3   
  41722c:	sub    bl,BYTE PTR [esi]
  41722e:	xor    eax,0x8ed97f0b
  417233:	call   0xdac5:0xb9190d8f
  41723a:	fisttp QWORD PTR [eax-0x6c1a3ae7]
  417240:	arpl   sp,cx
  417242:	mov    ch,0x2a
  417244:	xor    al,0xda
  417246:	mov    ah,0xd2
  417248:	dec    edi
  417249:	scas   al,BYTE PTR es:[edi]
  41724a:	ret    
  41724b:	out    dx,eax
  41724c:	jmp    0xd74627c
  417251:	lds    esp,FWORD PTR [edx+0x394b80a8]
  417257:	out    0xf4,al
  417259:	sahf   
  41725a:	icebp  
  41725b:	(bad)  
  41725c:	hlt    
  41725d:	test   al,0x8c
  41725f:	jle    0x4172bd
  417261:	in     al,dx
  417262:	xchg   ebp,eax
  417263:	hlt    
  417264:	gs jo  0x4172b0
  417267:	sbb    al,0x1a
  417269:	pop    ebp
  41726a:	scas   al,BYTE PTR es:[edi]
  41726b:	push   ebx
  41726c:	push   ss
  41726d:	jne    0x4172da
  41726f:	call   0x822a7fa
  417274:	loopne 0x417257
  417276:	daa    
  417277:	jge    0x4172e9
  417279:	adc    DWORD PTR ds:0x15531e8d,0x7caf3430
  417283:	fidiv  WORD PTR [esi-0x40]
  417286:	jne    0x4172d5
  417288:	jns    0x4172f4
  41728a:	mov    dl,0x17
  41728c:	in     al,dx
  41728d:	xchg   ebx,eax
  41728e:	pop    edx
  41728f:	rcl    BYTE PTR [edi+esi*4+0x2d],1
  417293:	xchg   esi,eax
  417294:	fsub   QWORD PTR [edx]
  417296:	div    esi
  417298:	fcomp  QWORD PTR [edx-0x453c5abc]
  41729e:	and    ebx,DWORD PTR [ecx+0x36b35015]
  4172a4:	(bad)  
  4172a5:	fsub   QWORD PTR [edi]
  4172a7:	hlt    
  4172a8:	fmul   DWORD PTR [eax+ebp*1+0x627f7f92]
  4172af:	mov    ch,0x50
  4172b1:	data16 clc 
  4172b3:	sbb    DWORD PTR [edi-0x44],ecx
  4172b6:	clc    
  4172b7:	pop    esp
  4172b8:	and    BYTE PTR [esi-0x49bad951],dl
  4172be:	out    dx,al
  4172bf:	les    edi,FWORD PTR [ebx+0x22]
  4172c2:	shr    dl,cl
  4172c4:	fist   DWORD PTR [ecx-0x38]
  4172c7:	lods   al,BYTE PTR ds:[esi]
  4172c8:	sar    BYTE PTR [esi],cl
  4172ca:	push   ds
  4172cb:	inc    ebx
  4172cc:	mov    ch,0x6e
  4172ce:	xor    BYTE PTR [eax-0x276fe4eb],bl
  4172d4:	stos   DWORD PTR es:[edi],eax
  4172d5:	out    0x21,al
  4172d7:	dec    BYTE PTR [ebx+0x40d741ac]
  4172dd:	icebp  
  4172de:	sbb    eax,0x9818c1f6
  4172e3:	push   ebp
  4172e4:	xor    dl,BYTE PTR [eax]
  4172e6:	lds    esi,FWORD PTR [esi]
  4172e8:	or     bh,BYTE PTR [edx]
  4172ea:	xchg   esp,eax
  4172eb:	dec    ecx
  4172ec:	std    
  4172ed:	aad    0xbb
  4172ef:	jo     0x41733b
  4172f1:	jmp    0x932c:0x8d57510a
  4172f8:	cmp    eax,0xdb2f9691
  4172fd:	push   ebx
  4172fe:	sub    eax,DWORD PTR [ecx-0x47]
  417301:	into   
  417302:	sbb    al,0xd1
  417304:	jg     0x4172d1
  417306:	xchg   edx,eax
  417307:	pop    ebp
  417308:	jecxz  0x417362
  41730a:	adc    eax,0x8fe30882
  41730f:	xor    edi,edi
  417311:	stc    
  417312:	lods   eax,DWORD PTR ds:[esi]
  417313:	enter  0x47f1,0xd
  417317:	xor    esi,DWORD PTR [edx-0x2e0f2b66]
  41731d:	xchg   esp,eax
  41731e:	lods   al,BYTE PTR ds:[esi]
  41731f:	adc    eax,0x3fdfe83c
  417324:	fwait
  417325:	or     dl,cl
  417327:	out    0xc,eax
  417329:	push   ebx
  41732a:	jo     0x417322
  41732c:	jae    0x4173aa
  41732e:	mov    bl,0x5a
  417330:	mov    dl,0x2a
  417332:	pop    eax
  417333:	adc    ah,BYTE PTR [ecx+0x2b]
  417336:	mov    al,ds:0x586f05fa
  41733b:	or     eax,0xfe7269de
  417340:	out    dx,al
  417341:	dec    esp
  417342:	es mov esp,0x752360c4
  417348:	mov    bl,0xa1
  41734a:	mov    ebx,0x60cddf05
  41734f:	outs   dx,BYTE PTR ds:[esi]
  417350:	add    al,0x68
  417352:	xchg   DWORD PTR [ebx-0x6f],edi
  417355:	rcr    BYTE PTR [edi],cl
  417357:	pop    ebx
  417358:	retf   
  417359:	ret    0x152f
  41735c:	int3   
  41735d:	xor    BYTE PTR [ecx],ch
  41735f:	out    0x43,eax
  417361:	ret    0x2d8a
  417364:	xchg   ebp,eax
  417365:	add    ebp,DWORD PTR [eax-0x5d]
  417368:	std    
  417369:	jmp    0x6059f3b4
  41736e:	xchg   ebx,eax
  41736f:	ret    0xc7c5
  417372:	adc    DWORD PTR ss:[edx+ebp*4],eax
  417376:	sub    bh,BYTE PTR [eax+0x2c]
  417379:	es sahf 
  41737b:	sub    BYTE PTR [esi],bl
  41737d:	inc    edi
  41737e:	add    BYTE PTR [edi+0x13],dl
  417381:	ret    
  417382:	daa    
  417383:	xor    eax,0xf12cd6db
  417388:	(bad)
  41738b:	push   ebx
  41738c:	mov    ecx,0xcd77202d
  417391:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417392:	mov    cl,0x65
  417394:	seta   BYTE PTR [esi+0x75]
  417398:	or     al,BYTE PTR [ebp-0x3a]
  41739b:	es cmp eax,0x14fdc18d
  4173a1:	loop   0x417412
  4173a3:	sbb    al,0x87
  4173a5:	cld    
  4173a6:	and    eax,ebx
  4173a8:	(bad)  
  4173a9:	mov    bl,0x3b
  4173ab:	dec    eax
  4173ac:	out    0xbf,al
  4173ae:	mov    edi,0x91edf147
  4173b3:	loopne 0x417424
  4173b5:	pop    edi
  4173b6:	xchg   edi,eax
  4173b7:	aam    0xb3
  4173b9:	lods   eax,DWORD PTR ds:[esi]
  4173ba:	sub    bh,BYTE PTR [ecx]
  4173bc:	cmp    BYTE PTR [edi+esi*4],dh
  4173bf:	dec    ecx
  4173c0:	fsubr  st(2),st
  4173c2:	shr    DWORD PTR [edx],1
  4173c4:	sbb    BYTE PTR [edx*1-0x6461f303],0x3c
  4173cc:	xchg   DWORD PTR gs:[ebx+0x11665f26],esi
  4173d3:	push   ecx
  4173d4:	into   
  4173d5:	push   0xffffff8d
  4173d7:	pop    ebp
  4173d8:	sub    eax,0x8c4a8bfe
  4173dd:	sub    eax,0x8eac15b0
  4173e2:	xchg   ebx,eax
  4173e3:	sub    edx,esi
  4173e5:	clc    
  4173e6:	sub    cl,BYTE PTR [ebx-0x5e8f243f]
  4173ec:	mov    ebp,DWORD PTR [eax+ecx*1-0x67]
  4173f0:	cld    
  4173f1:	xlat   BYTE PTR ds:[ebx]
  4173f2:	sbb    BYTE PTR [ebx-0x64d09f52],cl
  4173f8:	jge    0x4173cc
  4173fa:	loopne 0x4173f0
  4173fc:	xor    BYTE PTR [ebx+0x6d4de76f],dh
  417402:	je     0x41745c
  417404:	ja     0x4173ee
  417406:	push   eax
  417407:	mov    DWORD PTR [ebx-0x6f],eax
  41740a:	sbb    eax,0xa26ae7b2
  41740f:	mov    esp,0xca0939b3
  417414:	jae    0x417448
  417416:	pop    es
  417417:	or     DWORD PTR [edx],esp
  417419:	or     ah,BYTE PTR [esp+esi*2+0x48]
  41741d:	cmp    eax,0xe4b78d8d
  417422:	mov    dl,0xda
  417424:	jl     0x41746b
  417426:	push   esi
  417427:	fwait
  417428:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417429:	xchg   ebp,eax
  41742a:	inc    ebp
  41742b:	pop    edi
  41742c:	aaa    
  41742d:	gs (bad) 
  41742f:	push   ss
  417430:	mov    eax,0xd0cb280b
  417435:	fadd   QWORD PTR [ecx]
  417437:	mov    dl,0x65
  417439:	inc    ebx
  41743a:	and    BYTE PTR [ebx+edi*8+0x5b],al
  41743e:	mov    bl,0xfa
  417440:	cwde   
  417441:	aaa    
  417442:	push   ss
  417443:	push   edi
  417444:	lahf   
  417445:	pushf  
  417446:	sub    BYTE PTR [ebx],0x7f
  417449:	pop    eax
  41744a:	ss pop es
  41744c:	es mov dh,0xd1
  41744f:	jo     0x4174a3
  417451:	int    0x7f
  417453:	cmp    al,0x83
  417455:	dec    edi
  417456:	sub    dh,BYTE PTR [ebx]
  417458:	rcl    DWORD PTR [edx],0x89
  41745b:	lea    edi,[ebx+0x2e03b3e1]
  417461:	ins    DWORD PTR es:[edi],dx
  417462:	(bad)  [edx+0x19d6ac2]
  417468:	sbb    al,0x79
  41746a:	xor    eax,0xc36fbeab
  41746f:	sub    DWORD PTR [ebp+0x2ba56b52],eax
  417475:	outs   dx,DWORD PTR ds:[esi]
  417476:	xor    al,0xda
  417478:	add    esp,DWORD PTR [eax-0x2832f37]
  41747e:	mov    ebp,0x95b0b6bf
  417483:	dec    ebx
  417484:	fisttp WORD PTR [esi+0x504db921]
  41748a:	pop    ss
  41748b:	mov    ds:0x8b2a0737,eax
  417490:	jmp    0x6fec7efb
  417495:	sbb    BYTE PTR [edx-0x44],ah
  417498:	or     DWORD PTR [edi+0x68],esp
  41749b:	mov    dh,0x86
  41749d:	mov    ebp,0xc6fa5c99
  4174a2:	adc    DWORD PTR [edi+0x28722afd],0x5f268415
  4174ac:	(bad)
  4174af:	ror    DWORD PTR [ebp+0x7aae9b2c],0xc4
  4174b6:	add    edx,edi
  4174b8:	sar    DWORD PTR [edi],0x36
  4174bb:	push   esp
  4174bc:	loop   0x417474
  4174be:	call   FWORD PTR [edx]
  4174c0:	mov    cl,0xb2
  4174c2:	pop    ds
  4174c3:	add    al,0x70
  4174c5:	cmp    DWORD PTR [ebx-0x78],esp
  4174c8:	dec    edx
  4174c9:	push   esi
  4174ca:	add    ebp,DWORD PTR [edi]
  4174cc:	dec    ecx
  4174cd:	retf   0x9b47
  4174d0:	jns    0x41745d
  4174d2:	popf   
  4174d3:	clc    
  4174d4:	inc    esp
  4174d5:	(bad)  
  4174d6:	jnp    0x41747c
  4174d8:	push   ss
  4174d9:	jmp    0x440ef59a
  4174de:	pop    ebp
  4174df:	hlt    
  4174e0:	push   0xdc76a89f
  4174e5:	pop    es
  4174e6:	cli    
  4174e7:	and    dh,BYTE PTR [ebp-0x2f]
  4174ea:	stos   DWORD PTR es:[edi],eax
  4174eb:	retf   0x1957
  4174ee:	test   eax,0x6191196e
  4174f3:	ficom  DWORD PTR [edi]
  4174f5:	mov    dl,0x1
  4174f7:	sub    DWORD PTR [esp+edx*8-0x38b86c77],eax
  4174fe:	and    ah,bh
  417500:	push   0xc3cb8ed6
  417505:	scas   eax,DWORD PTR es:[edi]
  417506:	cs pop es
  417508:	and    edi,DWORD PTR [ecx+ebp*2-0x48]
  41750c:	sub    ecx,DWORD PTR [esi+eiz*2]
  41750f:	in     eax,0x4d
  417511:	daa    
  417512:	shr    BYTE PTR [edx+0x36cb4bc1],1
  417518:	pop    edx
  417519:	fnsave [edi+0x6b8d6454]
  41751f:	xchg   DWORD PTR [ecx-0xee4812],ebp
  417525:	js     0x417550
  417527:	leave  
  417528:	daa    
  417529:	not    BYTE PTR [ebp-0x5767bd91]
  41752f:	xchg   DWORD PTR ds:0x7bbfde88,esi
  417535:	jmp    0x41759a
  417537:	adc    BYTE PTR [esi-0x733aa91b],dh
  41753d:	and    DWORD PTR ds:[edi],esp
  417540:	xor    DWORD PTR [esi+edi*4-0x1283f65e],0xffffff99
  417548:	pusha  
  417549:	or     BYTE PTR [ecx-0x1f7e1e55],dh
  41754f:	cmp    ah,al
  417551:	add    cl,bh
  417553:	fstp   DWORD PTR [esi-0x55323baa]
  417559:	dec    edi
  41755a:	mov    DWORD PTR [edi-0x6474a58e],ebp
  417560:	in     al,dx
  417561:	iret   
  417562:	jp     0x417547
  417564:	inc    ebp
  417565:	pop    ds
  417566:	es call 0xe9b11c50
  41756c:	sub    BYTE PTR [ecx+0x77305510],bh
  417572:	add    eax,0xcdf6182a
  417577:	mov    es,WORD PTR [ebp-0x72f97146]
  41757d:	loopne 0x41753c
  41757f:	jnp    0x417515
  417581:	xchg   ebx,eax
  417582:	and    ch,BYTE PTR [eax+0x4c]
  417585:	(bad)  
  417586:	fwait
  417587:	cmp    DWORD PTR [edx+0x1f],edi
  41758a:	fimul  WORD PTR [edx+0xa1d9cec]
  417590:	loope  0x4175c9
  417592:	nop
  417593:	retf   0xd3eb
  417596:	mov    esi,0xafe89732
  41759b:	inc    esi
  41759c:	iret   
  41759d:	test   al,0xe3
  41759f:	inc    ebp
  4175a0:	push   ds
  4175a1:	popf   
  4175a2:	sub    BYTE PTR [edx+0x68315cbb],0x7b
  4175a9:	pusha  
  4175aa:	shr    BYTE PTR [edi*2-0x6adfac01],0x5
  4175b2:	sar    eax,0x9d
  4175b5:	lods   al,BYTE PTR ds:[esi]
  4175b6:	cs pop esi
  4175b8:	lds    ebp,FWORD PTR [edi-0x70edf99]
  4175be:	div    BYTE PTR [ebp+0x13b9c4cf]
  4175c4:	pause  
  4175c6:	jl     0x4175eb
  4175c8:	or     dh,BYTE PTR [eax+0x76]
  4175cb:	pop    edi
  4175cc:	mov    ebp,0x15d8691a
  4175d1:	outs   dx,DWORD PTR ds:[esi]
  4175d2:	inc    eax
  4175d3:	pusha  
  4175d4:	xchg   ecx,eax
  4175d5:	rcl    DWORD PTR [esi-0x32a5af5a],1
  4175db:	adc    al,0x59
  4175dd:	pop    edx
  4175de:	call   0xc2c3:0x3c74838d
  4175e5:	hlt    
  4175e6:	stos   BYTE PTR es:[edi],al
  4175e7:	mov    ds:0xa6048b0,al
  4175ec:	lods   al,BYTE PTR ds:[esi]
  4175ed:	mov    ecx,0xe752fdba
  4175f2:	mov    dh,0x27
  4175f4:	xchg   ebp,eax
  4175f5:	add    DWORD PTR [eax+0x67],esp
  4175f8:	push   0xffffffda
  4175fa:	sub    edx,DWORD PTR [eax+0x2374e85d]
  417600:	mov    gs,WORD PTR [esi]
  417602:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417603:	jge    0x417595
  417605:	pushf  
  417606:	cld    
  417607:	sub    BYTE PTR [ebx],0x88
  41760a:	dec    ebx
  41760b:	jbe    0x41763c
  41760d:	mov    ch,0xaa
  41760f:	adc    BYTE PTR [esi-0x1e],0x27
  417613:	mov    esp,0x9a8b07a6
  417618:	jno    0x417613
  41761a:	sahf   
  41761b:	push   DWORD PTR [ecx-0x3c6b7cf9]
  417621:	jo     0x4175ec
  417623:	in     eax,dx
  417624:	loop   0x41764d
  417626:	mov    ch,0x8d
  417628:	repnz and dl,BYTE PTR [eax-0x3d]
  41762c:	sbb    BYTE PTR [ecx],ch
  41762e:	in     al,0xe9
  417630:	sti    
  417631:	clc    
  417632:	sbb    BYTE PTR [ebp-0x26c0295],0xbe
  417639:	test   eax,0x40ff97cc
  41763e:	adc    al,0x44
  417640:	ins    DWORD PTR es:[edi],dx
  417641:	iret   
  417642:	(bad)  
  417643:	ficom  DWORD PTR [eax+0x6e]
  417646:	mov    edi,0xa11498b6
  41764b:	cli    
  41764c:	xchg   edi,eax
  41764d:	std    
  41764e:	adc    edi,DWORD PTR [esi-0x76a9d153]
  417654:	or     BYTE PTR [eax+eax*1-0x6c],bh
  417658:	test   DWORD PTR [esi-0x9],esp
  41765b:	retf   
  41765c:	out    dx,eax
  41765d:	pop    esp
  41765e:	xor    eax,0x64188109
  417663:	push   ecx
  417664:	imul   esp,DWORD PTR [ebp+0x31],0x573d7575
  41766b:	loope  0x417696
  41766d:	jnp    0x417616
  41766f:	data16 aad 0xd4
  417672:	push   edx
  417673:	cmp    DWORD PTR [ebp-0x13dce955],ebx
  417679:	push   ss
  41767a:	loop   0x417665
  41767c:	adc    al,0x17
  41767e:	jae    0x417657
  417680:	fldcw  WORD PTR [ebx+0x6f]
  417683:	mov    esi,0x78237cf3
  417688:	sar    BYTE PTR ds:[edi+0x56f45339],cl
  41768f:	iret   
  417690:	sbb    eax,0x7ab800a9
  417695:	mov    ecx,esp
  417697:	and    ebp,DWORD PTR [ebx-0x8]
  41769a:	rcr    bh,cl
  41769c:	and    BYTE PTR [ebx+0x1c802d0c],bl
  4176a2:	(bad)  
  4176a3:	mov    ebp,0x73fa4146
  4176a8:	cdq    
  4176a9:	jbe    0x41770f
  4176ab:	sub    dh,ch
  4176ad:	arpl   WORD PTR [ecx],di
  4176af:	sbb    cl,BYTE PTR [edx]
  4176b1:	fcom   QWORD PTR [edi+edi*4]
  4176b4:	fucomip st,st(7)
  4176b6:	cmp    al,0x41
  4176b8:	cmp    al,0x9
  4176ba:	test   al,0x12
  4176bc:	pop    esi
  4176bd:	scas   eax,DWORD PTR es:[edi]
  4176be:	test   cl,dl
  4176c0:	sbb    al,0xb3
  4176c2:	les    ebx,FWORD PTR [esi*4-0x7a699a41]
  4176c9:	mov    WORD PTR [ebx+0x31],?
  4176cc:	dec    ebx
  4176cd:	push   esp
  4176ce:	imul   ebp,DWORD PTR es:[edi+ebx*4-0x25],0xffffffef
  4176d4:	pop    ebp
  4176d5:	mov    cl,0xb5
  4176d7:	mov    dh,0xe3
  4176d9:	test   DWORD PTR [edi-0x6f],ebp
  4176dc:	fmul   DWORD PTR [ebx+edi*4]
  4176df:	jbe    0x4176ff
  4176e1:	test   DWORD PTR [edi+0x67],esi
  4176e4:	call   0xa2e:0x67bc6d68
  4176eb:	fs icebp 
  4176ed:	mov    al,0x65
  4176ef:	adc    DWORD PTR [esi-0x44],ecx
  4176f2:	xchg   ebp,eax
  4176f3:	pop    esp
  4176f4:	rcl    BYTE PTR [esi],0x65
  4176f7:	lods   eax,DWORD PTR ds:[esi]
  4176f8:	int3   
  4176f9:	push   eax
  4176fa:	mov    al,0x82
  4176fc:	fisub  WORD PTR [ecx-0x65524bfc]
  417702:	fwait
  417703:	cmc    
  417704:	mov    eax,ds:0x18008b3d
  417709:	data16 jnp 0x41777f
  41770c:	push   cs
  41770d:	(bad)  
  41770e:	cmps   DWORD PTR es:[esi],DWORD PTR es:[edi]
  417710:	sub    eax,0xdd57ba78
  417715:	xchg   eax,ecx
  417717:	cmp    DWORD PTR [edx+edx*8],ebp
  41771a:	mov    ebx,0x1d1484f
  41771f:	push   cs
  417720:	fs pop ds
  417722:	add    DWORD PTR [ecx-0xa7397bc],ebp
  417728:	aam    0xf4
  41772a:	test   DWORD PTR [ecx+0x25581ae7],esi
  417730:	and    eax,0x9fac7b15
  417735:	cmp    eax,0xb0e331a7
  41773a:	and    ebp,0xfffffff2
  41773d:	stos   BYTE PTR es:[edi],al
  41773e:	jae    0x41771f
  417740:	or     DWORD PTR ds:0x96d7c7d1,0x486a9691
  41774a:	test   al,0xeb
  41774c:	mov    cl,0x1a
  41774e:	cmc    
  41774f:	hlt    
  417750:	and    edx,esi
  417752:	mov    ch,0x91
  417754:	push   esi
  417755:	lods   al,BYTE PTR ds:[esi]
  417756:	dec    edi
  417757:	in     eax,dx
  417758:	jbe    0x41775f
  41775a:	mov    dh,0xfd
  41775c:	and    al,0xeb
  41775e:	jg     0x417775
  417760:	jecxz  0x4176e4
  417762:	mov    ds,esi
  417764:	xlat   BYTE PTR ds:[ebx]
  417765:	popa   
  417766:	aas    
  417767:	jmp    0x1a4cbfa8
  41776c:	or     DWORD PTR [eax],ecx
  41776e:	adc    ebp,ecx
  417770:	frstor [edx-0x2e6e657a]
  417776:	dec    ecx
  417777:	fstp   DWORD PTR [ecx]
  417779:	dec    ebx
  41777a:	les    ebx,FWORD PTR [ebx+ebp*4-0x31]
  41777e:	(bad)  
  41777f:	ds js  0x4177ff
  417782:	fldenv [ebp+eiz*1-0x246a6900]
  417789:	xlat   BYTE PTR ds:[ebx]
  41778a:	mov    ebp,0xf167d389
  41778f:	ror    bh,0xff
  417792:	jo     0x417737
  417794:	adc    eax,0xe1219b6f
  417799:	pop    ss
  41779a:	les    ebp,FWORD PTR [ebp+0x4d]
  41779d:	pop    ebx
  41779e:	not    esi
  4177a0:	sub    DWORD PTR [eax-0x1d],esp
  4177a3:	mov    ?,WORD PTR [edx-0x43]
  4177a6:	inc    edx
  4177a7:	jb     0x417742
  4177a9:	into   
  4177aa:	repz mov edx,0x16daf946
  4177b0:	das    
  4177b1:	lahf   
  4177b2:	mov    esi,ecx
  4177b4:	bound  ecx,QWORD PTR [ebx]
  4177b6:	dec    edx
  4177b7:	lods   al,BYTE PTR ds:[esi]
  4177b8:	push   edx
  4177b9:	in     al,dx
  4177ba:	push   ds
  4177bb:	retf   
  4177bc:	xor    BYTE PTR [ebx-0x40],bl
  4177bf:	xchg   cx,cx
  4177c2:	je     0x41782f
  4177c4:	ret    0xfdd5
  4177c7:	cdq    
  4177c8:	mov    bl,0xd9
  4177ca:	and    DWORD PTR [edx],esp
  4177cc:	dec    edi
  4177cd:	cs je  0x4177e7
  4177d0:	lods   eax,DWORD PTR ds:[esi]
  4177d1:	ja     0x4177cf
  4177d3:	adc    DWORD PTR [edi-0x217c8421],0x4d3938c6
  4177dd:	dec    esi
  4177de:	mov    cl,0xab
  4177e0:	push   0xffffffc7
  4177e2:	test   eax,0x53a04d14
  4177e7:	push   0xffffffa1
  4177e9:	cmp    DWORD PTR [edx-0x56],0xca04be05
  4177f0:	or     BYTE PTR [ecx+0x42],bh
  4177f3:	jl     0x4177f8
  4177f5:	jnp    0x417824
  4177f7:	and    eax,0x4422b7dc
  4177fc:	jne    0x417832
  4177fe:	repz arpl WORD PTR [eax+0x1100deb1],si
  417805:	in     eax,dx
  417806:	cmp    edx,DWORD PTR [ebp-0x69]
  417809:	pop    ebx
  41780a:	adc    BYTE PTR [edx+0x1fba3bd7],dh
  417810:	adc    eax,0x31563a11
  417815:	jecxz  0x417817
  417817:	arpl   di,dx
  417819:	dec    edx
  41781a:	jb     0x417884
  41781c:	sbb    bh,dl
  41781e:	sbb    BYTE PTR [esi+0x7fa8ea72],dl
  417824:	inc    ebp
  417825:	dec    ebp
  417826:	sbb    eax,0x61cd10c7
  41782b:	jle    0x4177e6
  41782d:	push   cs
  41782e:	cmp    eax,0x46a099d8
  417833:	test   DWORD PTR [ebp+0xf],esi
  417836:	adc    DWORD PTR [ebx],ebp
  417838:	or     eax,0xc55b28b9
  41783d:	xlat   BYTE PTR ds:[ebx]
  41783e:	sub    al,0xc1
  417840:	sbb    eax,0xf3c54cc3
  417845:	cmp    bl,BYTE PTR [esi-0x31]
  417848:	outs   dx,DWORD PTR ds:[esi]
  417849:	push   cs
  41784a:	aas    
  41784b:	sbb    DWORD PTR [ebp+esi*1-0x26fb3453],ebp
  417852:	sbb    edi,DWORD PTR [eax-0x57]
  417855:	rcl    DWORD PTR [ebp+ebx*4-0x6e829c8],cl
  41785c:	je     0x41784a
  41785e:	dec    eax
  41785f:	dec    eax
  417860:	stos   BYTE PTR es:[edi],al
  417861:	mov    esi,0xff12c635
  417866:	or     dl,0x1f
  417869:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41786a:	cdq    
  41786b:	cmp    BYTE PTR [edx-0xb19f573],0xc0
  417872:	sub    cl,BYTE PTR [edx+0x702ac267]
  417878:	and    al,0x4f
  41787a:	fsubr  QWORD PTR [eax+0x7a9f39f7]
  417880:	fisubr DWORD PTR [edx]
  417882:	xchg   esp,eax
  417883:	lea    eax,ds:0xb759b893
  417889:	dec    ebp
  41788a:	imul   edi,DWORD PTR [ecx-0x6c9feeb4],0x4e
  417891:	lock or BYTE PTR [ecx],cl
  417894:	xor    eax,0xc44e157d
  417899:	or     DWORD PTR [ebp+ecx*8-0x6e],esp
  41789d:	in     eax,dx
  41789e:	push   0xfffffff6
  4178a0:	dec    eax
  4178a1:	fidivr WORD PTR [esi-0x5d]
  4178a4:	fisubr WORD PTR [esi]
  4178a6:	mov    al,BYTE PTR [esi]
  4178a8:	sub    al,0x98
  4178aa:	inc    eax
  4178ab:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4178ac:	push   esp
  4178ad:	hlt    
  4178ae:	in     eax,0xe3
  4178b0:	push   edi
  4178b1:	sub    eax,0xa9071030
  4178b6:	xor    BYTE PTR [ecx],ah
  4178b8:	int3   
  4178b9:	xchg   esp,eax
  4178ba:	jmp    FWORD PTR [ebx]
  4178bc:	(bad)  
  4178bd:	stos   BYTE PTR es:[edi],al
  4178be:	stos   DWORD PTR es:[edi],eax
  4178bf:	call   0x677f:0xd97d6657
  4178c6:	ss jno 0x417870
  4178c9:	stos   BYTE PTR es:[edi],al
  4178ca:	mov    eax,ds:0x3c035215
  4178cf:	gs sbb ebp,eax
  4178d2:	push   edx
  4178d3:	xor    esp,0xe172c01d
  4178d9:	int3   
  4178da:	push   edx
  4178db:	loop   0x4178db
  4178dd:	or     al,0x35
  4178df:	fs imul esp,eax,0x2e
  4178e3:	call   0xa5cb0ac1
  4178e8:	addr16 pop ebp
  4178ea:	ins    BYTE PTR es:[edi],dx
  4178eb:	pop    eax
  4178ec:	and    dh,BYTE PTR [ecx-0x6b]
  4178ef:	retf   
  4178f0:	sbb    DWORD PTR [eax-0x44],esi
  4178f3:	(bad)  
  4178f4:	into   
  4178f5:	xor    eax,0xf0b4ff97
  4178fa:	ffree  st(2)
  4178fc:	xchg   BYTE PTR [edx-0x5f],ch
  4178ff:	push   ss
  417900:	sbb    BYTE PTR [ecx-0x60],cl
  417903:	test   al,0xad
  417905:	fsub   st,st(2)
  417907:	sub    al,0x41
  417909:	retf   0xa30b
  41790c:	int    0x44
  41790e:	dec    esp
  41790f:	sub    dl,bl
  417911:	les    esi,FWORD PTR [esi]
  417913:	sub    cl,BYTE PTR [edi+0x1440882b]
  417919:	cli    
  41791a:	std    
  41791b:	in     al,dx
  41791c:	sbb    al,0xd8
  41791e:	sub    WORD PTR [edx+eiz*2+0x75],sp
  417923:	ins    BYTE PTR es:[edi],dx
  417924:	loope  0x417927
  417926:	jmp    0x39df:0x9046ec31
  41792d:	retf   
  41792e:	push   ss
  41792f:	cs push edi
  417931:	dec    ebx
  417932:	cld    
  417933:	add    ch,0x96
  417936:	aad    0xbf
  417938:	adc    al,0x73
  41793a:	sub    ebp,DWORD PTR [eax]
  41793c:	mov    cl,0x9d
  41793e:	in     al,0xeb
  417940:	jp     0x4179a8
  417942:	outs   dx,DWORD PTR ds:[esi]
  417943:	add    ch,BYTE PTR [ecx+edi*2+0x0]
  417947:	jge    0x41791c
  417949:	dec    edx
  41794a:	rol    DWORD PTR [edx+0x3c1668f6],0x8b
  417951:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417952:	imul   ebx,ebp,0x9a48d753
  417958:	cmp    bl,bh
  41795a:	adc    edi,edx
  41795c:	cmp    BYTE PTR [edx],ch
  41795e:	mov    eax,0xc5bbc1bc
  417963:	dec    eax
  417964:	icebp  
  417965:	loop   0x41799b
  417967:	push   ecx
  417968:	xchg   eax,ebx
  41796a:	test   eax,0x7d0dbc4c
  41796f:	fld    TBYTE PTR [eax-0x46d4abb6]
  417975:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417976:	mov    al,0xbe
  417978:	std    
  417979:	adc    ecx,DWORD PTR [esi]
  41797b:	fcmovb st,st(2)
  41797d:	pop    edx
  41797e:	js     0x4179bf
  417980:	mov    esp,0xeaf6adf4
  417985:	pop    edx
  417986:	lods   eax,DWORD PTR ds:[esi]
  417987:	js     0x417a00
  417989:	das    
  41798a:	inc    edi
  41798b:	dec    eax
  41798c:	and    BYTE PTR es:[edi],dh
  41798f:	rol    DWORD PTR [ecx-0x5602ef87],0xf8
  417996:	jae    0x417956
  417998:	daa    
  417999:	scas   eax,DWORD PTR es:[edi]
  41799a:	or     al,0xe1
  41799c:	cdq    
  41799d:	add    eax,0x63398ece
  4179a2:	lahf   
  4179a3:	neg    ebp
  4179a5:	leave  
  4179a6:	jae    0x4179fa
  4179a8:	mov    cl,0x49
  4179aa:	call   0xd1e:0x36ab749e
  4179b1:	(bad)  
  4179b2:	into   
  4179b3:	dec    ebx
  4179b4:	push   edx
  4179b5:	pop    ds
  4179b6:	cld    
  4179b7:	push   cs
  4179b8:	xchg   ebp,eax
  4179b9:	shl    DWORD PTR [esi+ebp*8-0x334c53a5],0x92
  4179c1:	sbb    ah,bh
  4179c3:	xchg   edx,eax
  4179c4:	iret   
  4179c5:	loope  0x41798a
  4179c7:	sub    dh,cl
  4179c9:	out    dx,al
  4179ca:	iret   
  4179cb:	ret    0x891
  4179ce:	sbb    BYTE PTR [eax+0x7df755aa],cl
  4179d4:	mov    edx,0x27ba6909
  4179d9:	mov    esp,0x4b86f31c
  4179de:	adc    ebp,edi
  4179e0:	jg     0x417963
  4179e2:	inc    edx
  4179e3:	xchg   edi,eax
  4179e4:	mov    DWORD PTR ds:0x52dfdc8e,esi
  4179ea:	mov    eax,0x66925366
  4179ef:	jns    0x417a42
  4179f1:	loope  0x4179d2
  4179f3:	xor    BYTE PTR [ebp+edi*1+0x54],dl
  4179f7:	(bad)  
  4179f8:	cmp    al,0xcc
  4179fa:	or     ah,al
  4179fc:	push   ss
  4179fd:	or     eax,0x58daee43
  417a02:	mov    dl,0x20
  417a04:	fs sahf 
  417a06:	or     ebx,DWORD PTR [edx+0x30]
  417a09:	and    al,0x24
  417a0b:	aam    0x5
  417a0d:	and    al,0xe1
  417a0f:	(bad)  [ecx+0x35]
  417a12:	add    BYTE PTR [edi-0x7d],0xf7
  417a16:	sbb    dh,ah
  417a18:	leave  
  417a19:	in     al,dx
  417a1a:	ret    
  417a1b:	adc    al,0xcd
  417a1d:	sub    bl,ah
  417a1f:	add    DWORD PTR [edx],esp
  417a21:	mov    dh,0xa3
  417a23:	or     al,0x2e
  417a25:	dec    ecx
  417a26:	mov    cl,0x54
  417a28:	ds js  0x417a9b
  417a2b:	adc    ecx,edi
  417a2d:	dec    edx
  417a2e:	es je  0x4179cd
  417a31:	mov    ch,0x6
  417a33:	cli    
  417a34:	sub    eax,ebp
  417a36:	out    0x71,eax
  417a38:	ja     0x417a79
  417a3a:	mov    edx,0x105c2176
  417a3f:	push   edx
  417a40:	sbb    DWORD PTR [eax+0x24],ebx
  417a43:	movups xmm4,XMMWORD PTR [eax-0x7398cdb3]
  417a4a:	jecxz  0x417a15
  417a4c:	push   eax
  417a4d:	sti    
  417a4e:	icebp  
  417a4f:	std    
  417a50:	jno    0x4179f8
  417a52:	jmp    0xd432:0x549007ed
  417a59:	mov    eax,ds:0x4b657aa3
  417a5e:	rcl    ebx,cl
  417a60:	cmp    al,0xc
  417a62:	push   esp
  417a63:	repnz jecxz 0x417ab1
  417a66:	add    eax,DWORD PTR [eax+eiz*2-0x2a8a5ca9]
  417a6d:	jbe    0x417aa3
  417a6f:	ror    BYTE PTR [eax+eax*8+0x12db7c37],0x6f
  417a77:	dec    ebx
  417a78:	mov    BYTE PTR [ecx+ebp*4-0x2f37c622],ah
  417a7f:	sub    BYTE PTR [ebp+edx*1-0x4c],ch
  417a83:	(bad)  
  417a84:	std    
  417a85:	jne    0x417ac3
  417a87:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417a88:	mov    ds:0xc8cb5211,al
  417a8d:	mov    es,WORD PTR [ecx+ecx*1-0xf]
  417a91:	cmc    
  417a92:	pop    ds
  417a93:	mov    dl,0xb6
  417a95:	lock push edi
  417a97:	jo     0x417a6c
  417a99:	push   ecx
  417a9a:	mov    eax,ds:0x40b780a6
  417a9f:	adc    al,0xb1
  417aa1:	pop    esi
  417aa2:	and    al,0xab
  417aa4:	leave  
  417aa5:	pusha  
  417aa6:	mov    ds:0xa72cd35f,eax
  417aab:	test   al,0xb
  417aad:	test   DWORD PTR [edi-0x69],edx
  417ab0:	iret   
  417ab1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417ab2:	adc    esp,DWORD PTR [edx+0x68]
  417ab5:	push   ebx
  417ab6:	adc    eax,0x47c44daa
  417abb:	imul   ah
  417abd:	outs   dx,BYTE PTR ds:[esi]
  417abe:	test   DWORD PTR [ebp+0x50],ebx
  417ac1:	aam    0x4f
  417ac3:	out    dx,eax
  417ac4:	pop    ebx
  417ac5:	imul   ebx,DWORD PTR [edi+0x1fd39b41],0xa5bcd3b3
  417acf:	and    eax,0xa6a62c57
  417ad4:	push   esi
  417ad5:	dec    esp
  417ad6:	loopne 0x417b15
  417ad8:	push   esp
  417ad9:	call   0x2bd478d6
  417ade:	add    eax,0xa3016791
  417ae3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417ae4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417ae5:	xor    edi,edx
  417ae7:	mov    edx,0xc5722cc1
  417aec:	mov    dh,0x5
  417aee:	dec    esi
  417aef:	icebp  
  417af0:	dec    esp
  417af1:	adc    DWORD PTR [esi],ecx
  417af3:	cmp    cl,BYTE PTR [edx-0x1202fc21]
  417af9:	pusha  
  417afa:	or     dh,cl
  417afc:	(bad)  
  417afd:	shr    BYTE PTR [ebx+0x24],1
  417b00:	scas   al,BYTE PTR es:[edi]
  417b01:	jmp    0x68729de5
  417b06:	push   cs
  417b07:	or     DWORD PTR [ecx],edx
  417b09:	add    esp,DWORD PTR [edi+edi*8+0x7a583d93]
  417b10:	stc    
  417b11:	rcl    BYTE PTR [ecx-0x6d99c246],0xb
  417b18:	mov    cl,0x1c
  417b1a:	out    0x2b,al
  417b1c:	faddp  st(2),st
  417b1e:	cmp    DWORD PTR [ebx-0x28984abc],esp
  417b24:	xlat   BYTE PTR ds:[ebx]
  417b25:	fbld   TBYTE PTR [ecx-0x2c]
  417b28:	adc    ah,0xcc
  417b2b:	xor    DWORD PTR [ebp+0x47e480f9],ebx
  417b31:	jb     0x417ad5
  417b33:	xlat   BYTE PTR ds:[ebx]
  417b34:	push   eax
  417b35:	push   esi
  417b36:	movq   QWORD PTR ds:0xdee14699,mm6
  417b3d:	or     esi,DWORD PTR [edi-0x4]
  417b40:	inc    edx
  417b41:	nop
  417b42:	dec    ebx
  417b43:	jmp    0x417b97
  417b45:	mov    ah,BYTE PTR [esi+0x2b95a40c]
  417b4b:	sub    al,0x58
  417b4d:	cli    
  417b4e:	adc    BYTE PTR [eax],0xda
  417b51:	cmc    
  417b52:	pop    DWORD PTR [ebx+0x46]
  417b55:	es (bad) 
  417b57:	sub    eax,0x56a59144
  417b5c:	sub    BYTE PTR [ebx-0x589495b1],0x75
  417b63:	adc    ebx,edi
  417b65:	jle    0x417b0b
  417b67:	lock nop
  417b69:	mov    al,ds:0xe882c6fb
  417b6e:	pop    es
  417b6f:	daa    
  417b70:	or     eax,0x6acd7fe1
  417b75:	xor    DWORD PTR ds:0x6ea3b19d,0x47
  417b7d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417b7e:	je     0x417bc3
  417b80:	push   edx
  417b81:	xchg   edi,eax
  417b82:	retf   0xe86d
  417b85:	fwait
  417b86:	xchg   ecx,eax
  417b87:	xor    esi,edi
  417b89:	clc    
  417b8a:	pop    ebx
  417b8b:	push   0x21ace4ea
  417b90:	ins    DWORD PTR es:[edi],dx
  417b91:	cmp    eax,0xa60e9d30
  417b96:	aaa    
  417b97:	pop    ecx
  417b98:	ins    DWORD PTR es:[edi],dx
  417b99:	xchg   BYTE PTR [esi-0x4a9fbb49],bl
  417b9f:	(bad)  
  417ba0:	out    dx,al
  417ba1:	sbb    eax,edi
  417ba3:	daa    
  417ba4:	xchg   BYTE PTR [ecx],bh
  417ba6:	pop    ecx
  417ba7:	sub    eax,0x6dbd658b
  417bac:	sub    DWORD PTR [esi+eiz*4+0x6e],0xffffff8b
  417bb1:	inc    ecx
  417bb2:	js     0x417b64
  417bb4:	sbb    esp,DWORD PTR [ebp-0x40]
  417bb7:	aad    0x7d
  417bb9:	fwait
  417bba:	ret    0xd579
  417bbd:	dec    ebp
  417bbe:	cmc    
  417bbf:	retf   
  417bc0:	in     eax,0x43
  417bc2:	aas    
  417bc3:	mov    ebx,0xa3cece78
  417bc8:	into   
  417bc9:	xchg   esi,eax
  417bca:	mov    ebx,0xf327701f
  417bcf:	sahf   
  417bd0:	jbe    0x417b7a
  417bd2:	adc    al,0x6b
  417bd4:	mov    al,ds:0x188d2a4d
  417bd9:	mov    BYTE PTR [ebp-0x30630d81],bh
  417bdf:	jmp    0x4d85:0xc4700a9a
  417be6:	and    eax,0xb56492e8
  417beb:	push   edx
  417bec:	inc    eax
  417bed:	enter  0xb84a,0xd
  417bf1:	sar    DWORD PTR [ebx-0x5698d6a9],1
  417bf7:	dec    ebp
  417bf8:	inc    esp
  417bf9:	inc    eax
  417bfa:	add    esp,DWORD PTR [edi]
  417bfc:	arpl   WORD PTR [eax-0x22],sp
  417bff:	mov    ah,0xa5
  417c01:	aaa    
  417c02:	std    
  417c03:	adc    al,0x3a
  417c05:	sub    DWORD PTR [ebx-0x7215e420],ebx
  417c0b:	sti    
  417c0c:	mov    dh,0x8e
  417c0e:	fwait
  417c0f:	ja     0x417b9f
  417c11:	fmul   DWORD PTR [ecx+0x40b8e529]
  417c17:	fidiv  DWORD PTR [ebx+0x41b58cd2]
  417c1d:	pusha  
  417c1e:	fdiv   QWORD PTR [ecx]
  417c20:	cdq    
  417c21:	fnstsw WORD PTR [eiz*2+0x2812c4cf]
  417c28:	sub    DWORD PTR [esi+edi*4-0x57],0xfffffff7
  417c2d:	jae    0x417c2f
  417c2f:	ds test esp,esp
  417c32:	pop    ecx
  417c33:	rol    DWORD PTR [ecx-0x274e53ad],cl
  417c39:	jle    0x417c32
  417c3b:	jnp    0x417bd8
  417c3d:	jl     0x417bd3
  417c3f:	icebp  
  417c40:	mov    eax,0xdd9676
  417c45:	push   esi
  417c46:	push   ebp
  417c47:	mov    bl,0x7d
  417c49:	jp     0x417c03
  417c4b:	leave  
  417c4c:	and    BYTE PTR [edx+eax*1-0x1e9c3115],bh
  417c53:	mov    edx,0xfbc82ca3
  417c58:	cmc    
  417c59:	imul   eax,DWORD PTR [ebp+0x3ff9a7d6],0xcac1d31c
  417c63:	fcom   st(3)
  417c65:	jmp    0x6e29f6d6
  417c6a:	out    0xf3,eax
  417c6c:	dec    ebp
  417c6d:	stc    
  417c6e:	push   ds
  417c6f:	pushf  
  417c70:	adc    ecx,DWORD PTR ds:0xd2c0d55d
  417c76:	adc    eax,0x5ac7e8d1
  417c7b:	loopne 0x417ce9
  417c7d:	xchg   ebp,eax
  417c7e:	shl    DWORD PTR [ebx+0x3e],cl
  417c81:	shl    BYTE PTR [ecx+0x4459fe1b],0x14
  417c88:	lock push ebx
  417c8a:	cli    
  417c8b:	fdiv   DWORD PTR [esi*4-0x35086722]
  417c92:	ficomp DWORD PTR [ecx]
  417c94:	push   es
  417c95:	inc    ecx
  417c96:	dec    edi
  417c97:	push   esi
  417c98:	lea    ebp,[esi]
  417c9a:	scas   eax,DWORD PTR es:[edi]
  417c9b:	xchg   BYTE PTR [ecx+ebp*8-0x363b3362],bh
  417ca2:	xchg   BYTE PTR [edi+0x24b268e],bh
  417ca8:	mov    BYTE PTR [ebp+0x66a73111],bl
  417cae:	adc    al,0xea
  417cb0:	push   ecx
  417cb1:	dec    edx
  417cb2:	or     cl,bh
  417cb4:	lods   al,BYTE PTR ds:[esi]
  417cb5:	adc    dh,dh
  417cb7:	sub    BYTE PTR [edi],ah
  417cb9:	leave  
  417cba:	jle    0x417ca6
  417cbc:	call   0x1569:0xe5a326b6
  417cc3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417cc4:	jnp    0x417cb4
  417cc6:	and    al,0x21
  417cc8:	sub    eax,0x657b7004
  417ccd:	(bad)  
  417cce:	das    
  417ccf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417cd0:	jnp    0x417cf9
  417cd2:	xchg   edi,eax
  417cd3:	adc    BYTE PTR [ebp+eax*2+0x4074c425],dl
  417cda:	xchg   esp,eax
  417cdb:	ds loopne 0x417d53
  417cde:	outs   dx,DWORD PTR ds:[esi]
  417cdf:	(bad)
  417ce3:	mov    ebx,DWORD PTR [ebx-0x7b]
  417ce6:	push   ebp
  417ce7:	into   
  417ce8:	jbe    0x417ca3
  417cea:	jne    0x417ccf
  417cec:	mov    ds:0xe3c2c776,al
  417cf1:	push   ebp
  417cf2:	sahf   
  417cf3:	jno    0x417cfa
  417cf5:	adc    ch,bl
  417cf7:	add    DWORD PTR [ebx+0x66],0x15985dd4
  417cfe:	adc    dh,dh
  417d00:	jno    0x417cfa
  417d02:	dec    edx
  417d03:	rcl    BYTE PTR [eax+0x64],0x2d
  417d07:	es mov ah,0x2
  417d0a:	popf   
  417d0b:	adc    esp,ebp
  417d0d:	jle    0x417cc1
  417d0f:	shl    DWORD PTR [eax+eax*2-0x1b3a3635],cl
  417d16:	jne    0x417d59
  417d18:	xchg   ebx,eax
  417d19:	stos   DWORD PTR es:[edi],eax
  417d1a:	push   es
  417d1b:	or     BYTE PTR [ebp-0x77],dl
  417d1e:	inc    DWORD PTR [esi-0x30]
  417d21:	dec    ecx
  417d22:	jmp    0xb38a:0xa33368c4
  417d29:	xchg   esi,eax
  417d2a:	int    0xb
  417d2c:	imul   edi,DWORD PTR [edi+0x69],0x9126706b
  417d33:	fisttp DWORD PTR [ebx]
  417d35:	out    dx,eax
  417d36:	mov    cl,0xd4
  417d38:	push   eax
  417d3a:	xor    bh,BYTE PTR [ecx]
  417d3c:	gs mov edi,0x22f51d07
  417d42:	xchg   esp,eax
  417d43:	(bad)  
  417d44:	outs   dx,BYTE PTR ds:[esi]
  417d45:	cmp    DWORD PTR gs:[esi+0x72],0x947cfcba
  417d4d:	pushf  
  417d4e:	and    al,0x3c
  417d50:	scas   eax,DWORD PTR es:[edi]
  417d51:	cld    
  417d52:	dec    edx
  417d53:	pop    eax
  417d54:	aam    0x31
  417d56:	or     bh,BYTE PTR [eax-0x55]
  417d59:	pop    ebx
  417d5a:	dec    ebx
  417d5b:	sbb    ebp,DWORD PTR [edx]
  417d5d:	jmp    0x417d92
  417d5f:	add    esi,DWORD PTR [ebx]
  417d61:	xchg   ebp,eax
  417d62:	aam    0x78
  417d64:	je     0x417d45
  417d66:	jno    0x417d39
  417d68:	pop    esi
  417d69:	int    0x3f
  417d6b:	xchg   esi,eax
  417d6c:	ss mov edx,0x6ce972f6
  417d72:	pop    eax
  417d73:	push   edx
  417d74:	sbb    ch,dl
  417d76:	clc    
  417d77:	stos   BYTE PTR es:[edi],al
  417d78:	loop   0x417d38
  417d7a:	cmp    DWORD PTR ds:[edi+0x10],edx
  417d7e:	dec    esp
  417d7f:	fbld   TBYTE PTR [esi-0x4f39e6e5]
  417d85:	or     eax,0xf355cb48
  417d8a:	mov    edi,0x2459ba5
  417d8f:	aam    0x59
  417d91:	lahf   
  417d92:	sub    BYTE PTR [ebp-0x4b610463],bh
  417d98:	loopne 0x417dc3
  417d9a:	test   BYTE PTR [esi-0x73fe8c31],bl
  417da0:	mov    ah,0xc8
  417da2:	mov    ah,0x90
  417da4:	ror    DWORD PTR [esi+0x2f1e5a54],0xde
  417dab:	scas   eax,DWORD PTR es:[edi]
  417dac:	stos   DWORD PTR es:[edi],eax
  417dad:	add    ch,bh
  417daf:	test   al,0x5c
  417db1:	adc    eax,0xe4933831
  417db6:	sbb    ch,BYTE PTR [eax]
  417db8:	push   ds
  417db9:	add    eax,0x1e8429b2
  417dbe:	pusha  
  417dbf:	xchg   BYTE PTR [ebp+0x27c9d52b],bh
  417dc5:	sahf   
  417dc6:	scas   al,BYTE PTR es:[edi]
  417dc7:	push   ecx
  417dc8:	inc    esi
  417dc9:	jmp    0xb11d:0x279fb00f
  417dd0:	pushf  
  417dd1:	fdivr  DWORD PTR [ecx+0x449ffd82]
  417dd7:	jbe    0x417d5d
  417dd9:	sub    dh,BYTE PTR [edx+eax*1]
  417ddc:	sub    al,0x92
  417dde:	sar    eax,1
  417de0:	jp     0x417d6e
  417de2:	sbb    edx,0x33ea163e
  417de8:	es dec ebx
  417dea:	inc    eax
  417deb:	into   
  417dec:	xchg   ebp,eax
  417ded:	popf   
  417dee:	and    esp,ebp
  417df0:	inc    eax
  417df1:	mov    ecx,0x98730363
  417df6:	rcr    BYTE PTR [ecx-0x69],1
  417df9:	cmp    BYTE PTR [esp+ebp*8],bh
  417dfc:	stos   DWORD PTR es:[edi],eax
  417dfd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417dfe:	or     DWORD PTR [ebp+0x5f536bde],ebx
  417e04:	js     0x417dbc
  417e06:	into   
  417e07:	repnz sub edx,ebp
  417e0a:	push   cs
  417e0b:	(bad)  
  417e0c:	sbb    al,al
  417e0e:	lock fdivp st(2),st
  417e11:	test   eax,0x99c867b2
  417e16:	popa   
  417e17:	jge    0x417e54
  417e19:	xor    ecx,DWORD PTR [ecx+0x7ad9ba63]
  417e1f:	(bad)  
  417e20:	jnp    0x417e10
  417e22:	sbb    esp,DWORD PTR [ebx-0x75dbaafe]
  417e28:	or     BYTE PTR [esp+edi*4],0xec
  417e2c:	test   DWORD PTR [edx],esi
  417e2e:	sti    
  417e2f:	outs   dx,DWORD PTR ds:[esi]
  417e30:	aad    0x5c
  417e32:	sbb    BYTE PTR [ebx+0xf],ch
  417e35:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417e36:	jmp    0x48ed2084
  417e3b:	xchg   ebp,eax
  417e3c:	push   ecx
  417e3d:	mov    WORD PTR [ebx],?
  417e3f:	aam    0x23
  417e41:	bswap  ebp
  417e43:	cmp    al,0x42
  417e45:	dec    ecx
  417e46:	xor    ah,BYTE PTR [edx+0x5c]
  417e49:	cmp    esp,edi
  417e4b:	stos   BYTE PTR es:[edi],al
  417e4c:	mov    al,BYTE PTR [edx]
  417e4e:	cmp    eax,0xf5d0239f
  417e53:	or     BYTE PTR [esi-0x392e6461],cl
  417e59:	fs imul edx,eax,0xffffffce
  417e5d:	jnp    0x417e7a
  417e5f:	sahf   
  417e60:	jg     0x417e3e
  417e62:	mov    bh,0x51
  417e64:	jno    0x417e32
  417e66:	or     al,bl
  417e68:	stos   DWORD PTR es:[edi],eax
  417e69:	mov    ds:0x76d09e63,eax
  417e6e:	je     0x417e8b
  417e70:	test   al,0x39
  417e72:	(bad)  
  417e73:	jns    0x417e65
  417e75:	cmp    eax,0x54a51fe6
  417e7a:	pop    esp
  417e7b:	inc    ebx
  417e7c:	cmp    DWORD PTR [ecx-0x3ccc4d8a],edx
  417e82:	cdq    
  417e83:	mov    bl,0xdf
  417e85:	adc    al,0xcb
  417e87:	xchg   ecx,eax
  417e88:	shl    DWORD PTR [esi+0x25],1
  417e8b:	sub    bl,dl
  417e8d:	jne    0x417f00
  417e8f:	xchg   esi,eax
  417e90:	adc    DWORD PTR [esp+ebp*8],esp
  417e93:	aas    
  417e94:	xor    eax,0xf4f4f109
  417e99:	mov    ah,0xe3
  417e9b:	(bad)  [ebx]
  417e9d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417e9e:	or     DWORD PTR fs:[ebx+0x14c380bd],ebx
  417ea5:	fisub  WORD PTR ds:0x32eba625
  417eab:	inc    ecx
  417eac:	sbb    eax,0xfbf65f18
  417eb1:	jecxz  0x417e6f
  417eb3:	lahf   
  417eb4:	pusha  
  417eb5:	inc    edi
  417eb6:	jno    0x417f07
  417eb8:	dec    edi
  417eb9:	xor    BYTE PTR [ecx-0x67],dh
  417ebc:	push   edi
  417ebd:	sub    ebx,DWORD PTR [ebp+0x58f328de]
  417ec3:	adc    esp,esi
  417ec5:	fnsave [ebx+0x46]
  417ec8:	pop    es
  417ec9:	and    BYTE PTR [edx+0x247eae67],0x7f
  417ed0:	adc    al,al
  417ed2:	scas   eax,DWORD PTR es:[edi]
  417ed3:	or     eax,0xd0e96fd6
  417ed8:	pop    edx
  417ed9:	sub    DWORD PTR [ebx-0x68],eax
  417edc:	sbb    DWORD PTR [edx-0x3a],0x6d
  417ee0:	pop    esp
  417ee1:	sbb    bl,al
  417ee3:	repz and ch,BYTE PTR [eax+eax*4]
  417ee7:	add    DWORD PTR [edx],edi
  417ee9:	xchg   edx,eax
  417eea:	out    0xb6,al
  417eec:	pusha  
  417eed:	loope  0x417f39
  417eef:	add    ah,bh
  417ef1:	lods   eax,DWORD PTR ds:[esi]
  417ef2:	icebp  
  417ef3:	push   cs
  417ef4:	lea    ecx,[eax]
  417ef6:	mov    dh,0x50
  417ef8:	lea    edi,[ecx-0x6bcbacd3]
  417efe:	sub    ebp,DWORD PTR [ebp-0x79a12a4c]
  417f04:	mov    al,0xde
  417f06:	ins    DWORD PTR es:[edi],dx
  417f07:	dec    ebx
  417f08:	push   esp
  417f09:	imul   ebx,edi,0x3255e9ce
  417f0f:	mov    WORD PTR [ebx-0x66],ds
  417f12:	in     al,0xc3
  417f14:	mov    ebx,0x4cbdaa62
  417f19:	jmp    0xd9f9645f
  417f1e:	(bad)  
  417f1f:	add    al,0x10
  417f21:	adc    cl,BYTE PTR [eax]
  417f23:	sub    eax,0x1d69711a
  417f28:	scas   eax,DWORD PTR es:[edi]
  417f29:	je     0x417efb
  417f2b:	pop    edx
  417f2c:	add    BYTE PTR [edi+0x6570652e],al
  417f32:	jb     0x417f03
  417f34:	fild   DWORD PTR [ebx-0x2f]
  417f37:	xor    DWORD PTR [edx],ebx
  417f39:	out    0xc9,al
  417f3b:	pop    es
  417f3c:	and    bh,BYTE PTR [edi-0x40]
  417f3f:	dec    eax
  417f40:	jmp    FWORD PTR [eax-0x4f]
  417f43:	xor    ebp,ebp
  417f45:	call   DWORD PTR [ebp+0x3e1eac3b]
  417f4b:	scas   eax,DWORD PTR es:[edi]
  417f4c:	inc    ebp
  417f4d:	or     DWORD PTR [esi-0x7e999a7f],0xdcbc802e
  417f57:	sbb    eax,0xf77a408e
  417f5c:	scas   al,BYTE PTR es:[edi]
  417f5d:	out    dx,al
  417f5e:	bound  esp,QWORD PTR [ebx+0x69]
  417f61:	lock push eax
  417f63:	fidiv  WORD PTR [edx]
  417f65:	add    ebx,DWORD PTR [eax]
  417f67:	pop    edx
  417f68:	xor    al,0x6
  417f6a:	loopne 0x417f62
  417f6c:	xchg   esi,eax
  417f6d:	loopne 0x417f42
  417f6f:	xchg   esi,eax
  417f70:	test   al,0xb5
  417f72:	repz xchg esp,eax
  417f74:	bound  ecx,QWORD PTR [ecx+0x19947bdc]
  417f7a:	xchg   ecx,eax
  417f7b:	in     eax,0x72
  417f7d:	aaa    
  417f7e:	adc    esi,esp
  417f80:	xor    esp,DWORD PTR [ebp+0x17]
  417f83:	ror    BYTE PTR [eax+0x4a],cl
  417f86:	sbb    al,al
  417f88:	nop
  417f89:	into   
  417f8a:	and    cl,bh
  417f8c:	ds jp  0x417ff8
  417f8f:	or     esp,ebp
  417f91:	add    BYTE PTR [ebp+0x39],ah
  417f94:	or     BYTE PTR [ecx+ecx*2],dl
  417f97:	push   ds
  417f98:	mov    gs,ebx
  417f9a:	ret    0xe838
  417f9d:	inc    esi
  417f9e:	pop    ebx
  417f9f:	pushf  
  417fa0:	cmp    al,0x98
  417fa2:	add    BYTE PTR [ebp+eax*1+0x6c49ffdd],dh
  417fa9:	ins    BYTE PTR es:[edi],dx
  417faa:	shl    edi,1
  417fac:	dec    ebx
  417fad:	inc    ebx
  417fae:	retf   0xe385
  417fb1:	out    0xcb,eax
  417fb3:	test   BYTE PTR ds:0x7919be79,bl
  417fb9:	pop    edi
  417fba:	inc    edx
  417fbb:	sub    eax,esp
  417fbd:	jle    0x417fa0
  417fbf:	dec    ecx
  417fc0:	ja     0x41800b
  417fc2:	push   0xc3533802
  417fc7:	arpl   WORD PTR [ecx+0x57],bx
  417fca:	mov    ds:0xc865eb3c,al
  417fcf:	(bad)  
  417fd0:	scas   eax,DWORD PTR es:[edi]
  417fd1:	ss jns 0x418039
  417fd4:	inc    ebp
  417fd5:	xchg   esi,eax
  417fd6:	xchg   edi,eax
  417fd7:	jne    0x417f75
  417fd9:	inc    edx
  417fda:	ficom  WORD PTR [esi+0x29]
  417fdd:	pop    edi
  417fde:	aas    
  417fdf:	in     eax,dx
  417fe0:	mov    esi,0x3cdffa3b
  417fe5:	test   DWORD PTR [edx+0x61],edi
  417fe8:	pop    edx
  417fe9:	dec    edx
  417fea:	xchg   esp,eax
  417feb:	mov    bh,0xee
  417fed:	mov    ch,BYTE PTR [ebx-0x4e8ce3f]
  417ff3:	lods   al,BYTE PTR ds:[esi]
  417ff4:	mov    dl,0xcb
  417ff6:	dec    esp
  417ff7:	int    0xb
  417ff9:	jnp    0x417fdd
  417ffb:	mov    dl,0xdc
  417ffd:	or     ebp,DWORD PTR [ecx+0x72e05b90]
  418003:	adc    ax,0x8c7c
  418007:	enter  0xfa75,0x1d
  41800b:	or     BYTE PTR [edi+0x159fefa3],dh
  418011:	stc    
  418012:	cmp    al,0x81
  418014:	adc    ebx,DWORD PTR [edi-0x53]
  418017:	aam    0x34
  418019:	push   ds
  41801a:	or     DWORD PTR [ebx-0x53],ebx
  41801d:	ja     0x417fdd
  41801f:	sar    esi,0x9c
  418022:	jne    0x417fbe
  418024:	mov    DWORD PTR [esi],0xc0e6058
  41802a:	cli    
  41802b:	aad    0xc1
  41802d:	lock fbld TBYTE PTR [ebp+0x5]
  418031:	out    0xd5,al
  418033:	jnp    0x418096
  418035:	xchg   edx,eax
  418036:	pusha  
  418037:	icebp  
  418038:	jns    0x418089
  41803a:	push   eax
  41803b:	mov    ch,0x99
  41803d:	mov    gs,WORD PTR [ecx+0xbbb8979]
  418043:	stc    
  418044:	repnz xor edx,eax
  418047:	push   eax
  418048:	xor    eax,0x69087cc8
  41804d:	rol    BYTE PTR [eax+0x58],cl
  418050:	jge    0x417ffc
  418052:	scas   al,BYTE PTR es:[edi]
  418053:	push   0x112c5382
  418058:	scas   eax,DWORD PTR es:[edi]
  418059:	shl    edx,0x4d
  41805c:	call   0xcc71:0x552ab137
  418063:	jb     0x41805d
  418065:	dec    esp
  418066:	xchg   BYTE PTR [esi+ecx*8-0x4d],dh
  41806a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41806b:	cmc    
  41806c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41806d:	jecxz  0x418046
  41806f:	xchg   ah,bl
  418071:	pop    edx
  418072:	xrelease mov BYTE PTR [eax],al
  418075:	loop   0x4180e8
  418077:	jo     0x41804d
  418079:	or     al,0xfe
  41807b:	add    al,0x56
  41807d:	push   edx
  41807e:	fnstsw WORD PTR [ebx+ecx*4-0xcf47f23]
  418085:	cmp    DWORD PTR [esi-0x55a10025],esi
  41808b:	jge    0x41803d
  41808d:	dec    ecx
  41808e:	js     0x418011
  418090:	enter  0x4db1,0x69
  418094:	(bad)  
  418095:	cs in  al,0xb9
  418098:	sub    edx,esp
  41809a:	aas    
  41809b:	(bad)  
  41809d:	xchg   ecx,eax
  41809e:	sub    eax,0x255ddba0
  4180a3:	dec    BYTE PTR [esi-0xb83bac0]
  4180a9:	imul   esp,DWORD PTR [ebp+0x3c],0xffffff9c
  4180ad:	adc    dh,BYTE PTR [edx+edi*4+0x29b9c476]
  4180b4:	ja     0x41807d
  4180b6:	ret    0xca77
  4180b9:	jp     0x41803c
  4180bb:	cmp    bh,dl
  4180bd:	gs cwde 
  4180bf:	cmp    al,0x39
  4180c1:	jmp    0x93b91afb
  4180c6:	jmp    0x794d:0xe2469106
  4180cd:	stc    
  4180ce:	imul   esi,DWORD PTR [ecx-0x4fb07ceb],0x5dc2c1cb
  4180d8:	pusha  
  4180d9:	cmp    DWORD PTR [ecx+eax*2],0xffffffbd
  4180dd:	sub    al,0xd0
  4180df:	mov    cs,WORD PTR [edi-0x5b6df376]
  4180e5:	cdq    
  4180e6:	xor    esi,esi
  4180e8:	pop    ebx
  4180e9:	imul   esi,DWORD PTR [esi],0xfffffffd
  4180ec:	das    
  4180ed:	sahf   
  4180ee:	lods   eax,DWORD PTR ds:[esi]
  4180ef:	jge    0x4180a7
  4180f1:	inc    ecx
  4180f2:	or     esi,DWORD PTR [esi-0x5c]
  4180f5:	stos   DWORD PTR es:[edi],eax
  4180f6:	fistp  WORD PTR [edi+esi*1-0x5da541fa]
  4180fd:	add    dl,BYTE PTR [ecx+0x5118d16a]
  418103:	mov    al,0xf1
  418105:	scas   al,BYTE PTR es:[edi]
  418106:	add    ch,dh
  418108:	ret    0x34da
  41810b:	retf   
  41810c:	mov    esi,0x44190829
  418111:	ja     0x4180ca
  418113:	and    edi,ebp
  418115:	sar    DWORD PTR [ebp+0x6b],0xbe
  418119:	aam    0xb8
  41811b:	mov    BYTE PTR [edi+ebp*2],bh
  41811e:	or     BYTE PTR [bx+si],dl
  418121:	or     eax,0x213b1a1
  418126:	inc    ecx
  418127:	ret    0x4862
  41812a:	dec    eax
  41812b:	popa   
  41812c:	in     eax,dx
  41812d:	jnp    0x418140
  41812f:	stc    
  418130:	je     0x418127
  418132:	push   ss
  418133:	mov    ah,0xd2
  418135:	lods   eax,DWORD PTR ds:[esi]
  418136:	sub    al,0x2c
  418138:	iret   
  418139:	dec    ebx
  41813a:	pushf  
  41813b:	shr    ebp,1
  41813d:	xchg   ebp,eax
  41813e:	push   es
  41813f:	add    ebx,DWORD PTR [ecx]
  418141:	dec    edi
  418142:	ja     0x4180c4
  418144:	fwait
  418145:	sbb    al,0xf
  418147:	sub    al,0xef
  418149:	mov    ch,0x42
  41814b:	sub    BYTE PTR [ebp-0x5],0xd9
  41814f:	sbb    DWORD PTR [ebx],edi
  418151:	sti    
  418152:	push   esi
  418153:	fdiv   QWORD PTR [edi]
  418155:	mov    edx,0x16dbee09
  41815a:	mov    ds:0x445fe736,eax
  41815f:	mov    ah,0x3d
  418161:	stc    
  418162:	add    BYTE PTR [eax+eiz*4+0x7a],bl
  418166:	mov    esi,0x2c32381d
  41816b:	sahf   
  41816c:	out    0xfd,al
  41816e:	and    BYTE PTR [edx-0xc],0x9e
  418172:	push   esi
  418173:	popa   
  418174:	pop    esp
  418175:	enter  0xc2f1,0x31
  418179:	ror    BYTE PTR [edx-0x18],cl
  41817c:	das    
  41817d:	hlt    
  41817e:	mov    ebx,0x8325b6a
  418183:	(bad)  
  418184:	adc    al,0xa9
  418186:	and    dl,bl
  418188:	cwde   
  418189:	push   ebx
  41818a:	cmp    BYTE PTR [eax+0x426bfc09],ch
  418190:	fist   DWORD PTR [eax+0x9]
  418193:	or     eax,0xa7058435
  418198:	aas    
  418199:	imul   cx,WORD PTR [edx-0x5d180ed9],0xfff5
  4181a1:	mov    eax,ds:0x760aa2e9
  4181a6:	in     eax,dx
  4181a7:	mov    ds:0xeda7970a,al
  4181ac:	dec    ecx
  4181ad:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4181ae:	jae    0x4181b1
  4181b0:	push   edi
  4181b1:	in     eax,dx
  4181b2:	int    0xfc
  4181b4:	icebp  
  4181b5:	dec    ebx
  4181b6:	into   
  4181b7:	mov    dl,0x4d
  4181b9:	jmp    0xff49:0x16c8a278
  4181c0:	push   esp
  4181c1:	daa    
  4181c2:	adc    al,0x77
  4181c4:	addr16 adc al,0x37
  4181c8:	lds    edi,FWORD PTR [eax+0x7]
  4181cb:	jecxz  0x41822f
  4181cd:	jp     0x418168
  4181cf:	adc    BYTE PTR [eax],ch
  4181d1:	ins    DWORD PTR es:[edi],dx
  4181d2:	scas   eax,DWORD PTR es:[edi]
  4181d3:	in     al,0x7a
  4181d5:	dec    ecx
  4181d6:	test   BYTE PTR [ebp+0x66],dh
  4181d9:	imul   esp,DWORD PTR ds:0xebdc9c94,0x3d3a7580
  4181e3:	rcr    BYTE PTR [eax],1
  4181e5:	cli    
  4181e6:	and    BYTE PTR [ebx],dh
  4181e8:	das    
  4181e9:	dec    esi
  4181ea:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4181eb:	xchg   esp,eax
  4181ec:	dec    ebp
  4181ed:	dec    esi
  4181ee:	jns    0x418268
  4181f0:	fist   DWORD PTR [ebp+0x183ed18f]
  4181f6:	(bad)  
  4181f8:	sbb    DWORD PTR [edi+eax*4-0x33],0xffffff9c
  4181fd:	hlt    
  4181fe:	ret    0x87f5
  418201:	clc    
  418202:	clc    
  418203:	or     eax,0x3083da46
  418208:	pop    bx
  41820a:	(bad)  
  41820b:	enter  0xaa7e,0x95
  41820f:	pop    esp
  418210:	aam    0xa
  418212:	daa    
  418213:	neg    BYTE PTR [ecx]
  418215:	cld    
  418216:	add    al,0x19
  418218:	pop    esi
  418219:	xchg   edx,eax
  41821a:	cdq    
  41821b:	mov    WORD PTR ds:0x4cfa7622,ss
  418221:	stos   DWORD PTR es:[edi],eax
  418222:	pop    edx
  418223:	mov    ecx,0x65cab6a
  418228:	lods   eax,DWORD PTR ds:[esi]
  418229:	sbb    eax,0xfeb61825
  41822e:	(bad)  
  41822f:	adc    BYTE PTR [eax+0x63e58b30],0xaa
  418236:	enter  0xc8bc,0x63
  41823a:	sahf   
  41823b:	push   esp
  41823c:	pop    esp
  41823d:	psubusb mm5,QWORD PTR [ebp-0x15]
  418241:	in     al,0x2a
  418243:	pop    edi
  418244:	not    DWORD PTR [ebp*8-0x69febfc1]
  41824b:	push   esp
  41824c:	inc    ebx
  41824d:	mov    edi,0xa659e24
  418253:	xor    DWORD PTR [eax+0x6295f26f],ecx
  418259:	xor    dh,cl
  41825b:	daa    
  41825c:	je     0x41821a
  41825e:	adc    eax,0x6da75043
  418263:	fistp  DWORD PTR [eax-0x11]
  418266:	(bad)  
  418268:	(bad)  
  418269:	sbb    BYTE PTR [eax+0x29a05ef5],ch
  41826f:	pop    eax
  418270:	lea    edx,[eax]
  418272:	push   cs
  418273:	mov    ds:0xcdcf0b9d,al
  418278:	jmp    DWORD PTR [edi-0x4eb0e8c8]
  41827e:	popa   
  41827f:	or     DWORD PTR [edi],esp
  418281:	sbb    cl,ch
  418283:	inc    DWORD PTR [edx+0x186af6dd]
  418289:	ja     0x418299
  41828b:	sbb    esi,esp
  41828d:	call   0xfd26:0xb6994a20
  418294:	das    
  418295:	pop    ecx
  418296:	pop    ebp
  418297:	sub    DWORD PTR [edi+ebp*1-0x7e11f1ea],esi
  41829e:	adc    al,0xa5
  4182a0:	inc    edx
  4182a1:	shl    DWORD PTR [edi],cl
  4182a3:	punpcklwd mm2,mm5
  4182a6:	popa   
  4182a7:	rcr    BYTE PTR [edx+esi*1],0xd2
  4182ab:	mov    al,ds:0x8ecc140c
  4182b0:	fwait
  4182b1:	popf   
  4182b2:	inc    edx
  4182b3:	push   edx
  4182b4:	add    DWORD PTR [ebp-0x2885ae1c],esp
  4182ba:	les    eax,FWORD PTR [ebx]
  4182bc:	xchg   esp,eax
  4182bd:	push   edx
  4182be:	cwde   
  4182bf:	dec    ecx
  4182c0:	int3   
  4182c1:	jl     0x418295
  4182c3:	mov    cl,0xfb
  4182c5:	mov    esp,0x634f65b8
  4182ca:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4182cb:	or     ebp,ecx
  4182cd:	and    BYTE PTR [ecx-0x50971187],al
  4182d3:	mov    fs,esp
  4182d5:	fsub   QWORD PTR [ebx]
  4182d7:	dec    ebp
  4182d8:	push   ss
  4182d9:	jmp    0x418305
  4182db:	and    BYTE PTR ds:0x9ed3cdd2,dh
  4182e1:	mov    ebx,0xa99e8f1c
  4182e6:	aaa    
  4182e7:	pop    eax
  4182e8:	jge    0x418318
  4182ea:	sahf   
  4182eb:	cmp    al,0x67
  4182ed:	cmp    DWORD PTR [eax],esi
  4182ef:	icebp  
  4182f0:	enter  0xbccc,0x36
  4182f4:	pop    esi
  4182f5:	or     edi,DWORD PTR [ebp+0x35]
  4182f8:	(bad)  
  4182f9:	lea    ebp,[ebp-0x19]
  4182fc:	pop    edx
  4182fd:	sub    BYTE PTR [ebx],al
  4182ff:	out    0x98,eax
  418301:	test   BYTE PTR [eax+edx*8+0x3ff01d94],ah
  418308:	outs   dx,DWORD PTR ds:[esi]
  418309:	xchg   ecx,eax
  41830a:	push   edx
  41830b:	bound  ecx,QWORD PTR [ebp-0x1e]
  41830e:	sbb    BYTE PTR ds:0x33d96f01,dh
  418314:	and    edi,0x6e
  418317:	pop    esp
  418318:	in     eax,dx
  418319:	mov    gs:0xbc43d067,eax
  41831f:	aam    0xd0
  418321:	data16 out dx,al
  418323:	fwait
  418324:	adc    DWORD PTR [ebp+ecx*8-0x1d62caea],0x5d62b9a5
  41832f:	leave  
  418330:	adc    dh,al
  418332:	xlat   BYTE PTR ds:[ebx]
  418333:	mov    cl,al
  418335:	out    dx,eax
  418336:	jnp    0x418366
  418338:	push   ss
  418339:	test   DWORD PTR [ecx-0x431aeb2],edx
  41833f:	sbb    DWORD PTR [edi-0x70],esi
  418342:	ja     0x4183bf
  418344:	adc    bh,BYTE PTR [esi-0x24]
  418347:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418348:	and    BYTE PTR [edx-0x42],al
  41834b:	dec    ebp
  41834c:	or     BYTE PTR [eax-0x12],dl
  41834f:	mov    esp,DWORD PTR [ebp-0x7c]
  418352:	mov    edi,0x804fc916
  418357:	inc    edx
  418358:	inc    ecx
  418359:	sysret 
  41835b:	or     ecx,DWORD PTR ds:0xaeac7c12
  418361:	mov    ebx,0x77174a83
  418366:	jl     0x418324
  418368:	into   
  418369:	imul   edx,DWORD PTR [esi-0x776ddf39],0x9133495d
  418373:	repnz and al,0xa9
  418376:	mov    edi,eax
  418378:	and    BYTE PTR [esi+0x4e],ah
  41837b:	add    bh,BYTE PTR ds:0x46762761
  418381:	lock jno 0x4183cf
  418384:	mov    edi,0xf3f8ba6a
  418389:	in     al,0x10
  41838b:	fdivrp st(6),st
  41838d:	sbb    al,0x86
  41838f:	dec    esi
  418390:	jno    0x4183a7
  418392:	pop    cx
  418394:	ret    0xd45a
  418397:	bound  ebp,QWORD PTR [eax]
  418399:	jp     0x4183e5
  41839b:	mov    dl,BYTE PTR [esi+0x29bec48]
  4183a1:	dec    eax
  4183a2:	div    DWORD PTR [esi]
  4183a4:	push   edi
  4183a5:	call   0x6a52:0x1ad4d67d
  4183ac:	mov    dl,0xd1
  4183ae:	adc    bl,BYTE PTR [edx-0x5c]
  4183b1:	xchg   DWORD PTR [edi+0x6d],eax
  4183b4:	add    esp,ecx
  4183b6:	scas   eax,DWORD PTR es:[edi]
  4183b7:	lea    ecx,[ebp+0x26b7d211]
  4183bd:	push   es
  4183be:	adc    eax,0x4d1bb2f8
  4183c3:	push   edx
  4183c4:	sbb    cl,BYTE PTR [edx]
  4183c6:	call   0x6c458c8c
  4183cb:	pop    ss
  4183cc:	adc    al,0x50
  4183ce:	stos   DWORD PTR es:[edi],eax
  4183cf:	loop   0x41838e
  4183d1:	cli    
  4183d2:	mov    cl,0xf7
  4183d4:	add    bh,0x12
  4183d7:	sbb    cl,BYTE PTR [edx+0x56ecf540]
  4183dd:	xchg   DWORD PTR [edx+eax*8+0x41],ecx
  4183e1:	int3   
  4183e2:	in     al,0x94
  4183e4:	loope  0x4183a4
  4183e6:	cli    
  4183e7:	adc    eax,0x3bc6e601
  4183ec:	and    ecx,DWORD PTR [edx]
  4183ee:	add    DWORD PTR [eax-0x8508e23],edi
  4183f4:	shr    DWORD PTR [edx],cl
  4183f6:	cmp    eax,0xba77a8c0
  4183fb:	mov    ah,0xea
  4183fd:	sub    al,0xf1
  4183ff:	out    0xc3,al
  418401:	cmp    DWORD PTR ds:0x3e808eb8,ebx
  418407:	mov    ah,0xf0
  418409:	cdq    
  41840a:	in     eax,dx
  41840b:	sbb    DWORD PTR [ebp+0xf1c2493],esi
  418411:	mov    dh,0x3c
  418413:	sar    DWORD PTR [ebp+0x61cffc65],1
  418419:	inc    edi
  41841a:	sub    eax,0xe17fd73
  41841f:	ffree  st(1)
  418421:	dec    edx
  418422:	fstp   TBYTE PTR [ebp-0xe54cfc7]
  418428:	popf   
  418429:	pop    ds
  41842a:	sar    ch,0xb3
  41842d:	jo     0x41846b
  41842f:	inc    ebx
  418430:	fwait
  418431:	pushf  
  418432:	into   
  418433:	sub    eax,0xacbedd82
  418438:	rol    edx,0x18
  41843b:	xor    eax,0xf827ba2c
  418440:	xlat   BYTE PTR ds:[ebx]
  418441:	jnp    0x4183f8
  418443:	inc    eax
  418444:	mov    esp,0xaeed0f61
  418449:	or     dl,BYTE PTR [eax-0x288bbc4a]
  41844f:	mov    WORD PTR [ecx+0x4a87396b],ss
  418455:	mov    bl,0x6b
  418457:	xchg   ebp,eax
  418458:	and    esi,DWORD PTR [ecx]
  41845a:	jmp    0x16087abf
  41845f:	dec    ebp
  418460:	lahf   
  418461:	mov    bl,0xc8
  418463:	or     DWORD PTR [edi+0x17516adc],esi
  418469:	jp     0x41840a
  41846b:	pop    esp
  41846c:	jns    0x41840a
  41846e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41846f:	dec    esi
  418470:	div    dh
  418472:	sbb    eax,DWORD PTR [ebp-0x1bf54dd7]
  418478:	sub    esp,ecx
  41847a:	test   BYTE PTR [edx+ebx*8],bl
  41847d:	xchg   edx,eax
  41847e:	clc    
  41847f:	or     eax,esp
  418481:	push   es
  418482:	adc    DWORD PTR [ecx+0x79],esi
  418485:	ja     0x41842c
  418487:	add    ecx,DWORD PTR [edi+0x60]
  41848a:	stos   BYTE PTR es:[edi],al
  41848b:	mov    eax,ds:0xaf94c88d
  418490:	imul   edi,DWORD PTR [esp+eiz*4-0x60237d40],0x547aa7
  41849b:	sub    al,0x43
  41849d:	sub    ecx,DWORD PTR [esi+0x2c59af6c]
  4184a3:	and    edx,DWORD PTR [edi]
  4184a5:	repnz stos BYTE PTR es:[edi],al
  4184a7:	aaa    
  4184a8:	std    
  4184a9:	loop   0x4184fd
  4184ab:	(bad)  
  4184ac:	inc    ecx
  4184ad:	into   
  4184ae:	push   esp
  4184af:	in     eax,dx
  4184b0:	test   BYTE PTR [esi-0x348af856],dl
  4184b6:	inc    eax
  4184b7:	adc    eax,0xcec3d409
  4184bc:	scas   al,BYTE PTR es:[edi]
  4184bd:	in     al,0x2e
  4184bf:	push   0xffffffec
  4184c1:	dec    ebx
  4184c2:	shl    DWORD PTR [ecx+0x7d30c8e0],cl
  4184c8:	shr    DWORD PTR [edx+0x1d],0xc3
  4184cc:	lds    esp,FWORD PTR [ecx]
  4184ce:	mov    al,ds:0xacc67f50
  4184d3:	dec    edi
  4184d4:	mov    cl,bl
  4184d6:	sahf   
  4184d7:	sub    BYTE PTR [esi-0x1ca96bec],ah
  4184dd:	outs   dx,BYTE PTR ds:[esi]
  4184de:	inc    ecx
  4184df:	icebp  
  4184e0:	sbb    DWORD PTR [ecx+ecx*8],edi
  4184e3:	sub    DWORD PTR [edi+edi*4+0x41],esp
  4184e7:	mov    edi,0xa6a62a69
  4184ec:	mov    ecx,0x42616442
  4184f1:	mov    ds:0xc8c7d249,eax
  4184f6:	push   ebx
  4184f7:	ss mov bh,dh
  4184fa:	mov    ecx,0xcbb2f77f
  4184ff:	or     al,0x2b
  418501:	xor    al,0x14
  418504:	and    edx,DWORD PTR [ebp+0x45]
  418507:	sar    DWORD PTR [esi],cl
  418509:	mov    ds:0xa0b8c4a1,al
  41850e:	mov    dl,0x5f
  418510:	cs icebp 
  418512:	call   0x7b93:0xca3a4603
  418519:	gs mov edi,0x9c2127ca
  41851f:	push   esp
  418520:	sub    BYTE PTR [esi+0x55c9e1ce],0x91
  418527:	lods   al,BYTE PTR ds:[esi]
  418528:	jmp    0x2993:0x3fdbb94c
  41852f:	and    eax,DWORD PTR [ebp+0x1a]
  418532:	cld    
  418533:	jno    0x418585
  418535:	dec    edx
  418536:	cdq    
  418537:	xchg   esp,eax
  418538:	pop    ebx
  418539:	push   esp
  41853a:	add    bl,BYTE PTR [eax-0x42c55e9e]
  418540:	(bad)  
  418541:	neg    BYTE PTR [ecx+0x4e561596]
  418547:	sub    eax,ebp
  418549:	imul   BYTE PTR ds:0xc9172de9
  41854f:	sub    DWORD PTR [esp+eax*1-0x19096251],0xa7b59c73
  41855a:	jg     0x418560
  41855c:	xor    cl,al
  41855e:	aas    
  41855f:	out    dx,al
  418560:	or     esp,esp
  418562:	(bad)  
  418563:	jge    0x41859c
  418565:	aas    
  418566:	mov    cl,0x3a
  418568:	add    esp,DWORD PTR ds:0x3fb1f700
  41856f:	das    
  418570:	lds    ebx,FWORD PTR [ecx+0x1d]
  418573:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418574:	sub    DWORD PTR [edx],0xb73292a9
  41857a:	lds    edx,FWORD PTR [esp+ebx*1]
  41857d:	xlat   BYTE PTR ds:[ebx]
  41857e:	into   
  41857f:	les    ebx,FWORD PTR [edx+edx*8+0xa]
  418583:	sub    DWORD PTR [ecx],edi
  418585:	cmp    bh,BYTE PTR [ebp-0x5b]
  418588:	jb     0x41854f
  41858a:	xor    al,0x65
  41858c:	sti    
  41858d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41858e:	aas    
  41858f:	cmovs  esi,DWORD PTR [edi+0x35]
  418593:	(bad)  
  418594:	das    
  418595:	out    dx,eax
  418596:	push   cs
  418597:	xchg   ecx,eax
  418598:	and    eax,eax
  41859a:	jg     0x4185b3
  41859c:	dec    ebx
  41859d:	and    eax,0x4450d320
  4185a2:	repnz dec edx
  4185a4:	sahf   
  4185a5:	xchg   ebp,eax
  4185a6:	pop    ebx
  4185a7:	add    DWORD PTR [edi+0x6b],edx
  4185aa:	or     dh,BYTE PTR [edx]
  4185ac:	cmp    BYTE PTR [edx+0x4847935c],dh
  4185b2:	adc    al,al
  4185b4:	mov    ch,BYTE PTR [ebx+0x1d46fa69]
  4185ba:	popf   
  4185bb:	das    
  4185bc:	scas   eax,DWORD PTR es:[edi]
  4185bd:	xchg   edi,eax
  4185be:	cmp    cl,dl
  4185c0:	loop   0x4185f4
  4185c2:	sub    al,0xbc
  4185c4:	inc    ebx
  4185c5:	xchg   DWORD PTR [ecx-0x2a],edx
  4185c8:	cs sub eax,0xea03c336
  4185ce:	add    edx,DWORD PTR [edi]
  4185d0:	out    0x7e,eax
  4185d2:	sbb    eax,ebx
  4185d4:	gs jg  0x418615
  4185d7:	push   esp
  4185d8:	and    DWORD PTR [ebp-0x4e],esi
  4185db:	test   DWORD PTR [ebp-0x6672f195],0x52e147e0
  4185e5:	fwait
  4185e6:	mov    ch,0xa0
  4185e8:	push   ds
  4185e9:	jbe    0x4185f9
  4185eb:	and    cl,bl
  4185ed:	das    
  4185ee:	inc    eax
  4185ef:	aas    
  4185f0:	repnz popf 
  4185f2:	xchg   ebp,eax
  4185f3:	inc    ebp
  4185f4:	(bad)  
  4185f5:	lds    edi,FWORD PTR [eax+0x18a65b9d]
  4185fb:	popf   
  4185fc:	jge    0x4185f5
  4185fe:	in     al,0xd2
  418600:	adc    al,0x7f
  418602:	sub    eax,0xda2b9457
  418607:	add    eax,0xe1ffbdc6
  41860c:	dec    esi
  41860d:	ds loope 0x418605
  418610:	mul    BYTE PTR [eax]
  418612:	or     eax,0xf034e1de
  418617:	dec    ebx
  418618:	int3   
  418619:	in     eax,dx
  41861a:	mov    ecx,0x458cee36
  41861f:	popf   
  418620:	cmp    ecx,DWORD PTR [edi-0x12]
  418623:	dec    ecx
  418624:	sbb    esp,DWORD PTR [edi+0x6c]
  418627:	add    eax,0x61c4decd
  41862c:	stos   BYTE PTR es:[edi],al
  41862d:	dec    ebx
  41862e:	dec    esp
  41862f:	les    edi,FWORD PTR [esi]
  418631:	idiv   DWORD PTR ds:0xb8ea0e12
  418638:	pop    esp
  418639:	inc    bl
  41863b:	dec    ecx
  41863c:	sbb    al,0x55
  41863e:	and    al,0x53
  418640:	or     eax,0x8831f93f
  418645:	adc    edx,DWORD PTR [esi]
  418647:	pop    ecx
  418648:	push   0x6febc15e
  41864d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41864e:	adc    DWORD PTR [esi+0x1a9a7123],esi
  418654:	xchg   esi,eax
  418655:	int    0xb
  418657:	lock dec esp
  418659:	(bad)  
  41865a:	loopne 0x418605
  41865c:	pop    esi
  41865d:	enter  0xcad5,0x64
  418661:	cmp    BYTE PTR [esi],dh
  418663:	mov    ch,0x49
  418665:	pop    ebx
  418666:	mov    dh,0x7a
  418668:	gs cmp edx,edi
  41866b:	add    BYTE PTR [eax],al
  41866d:	push   edi
  41866e:	(bad)  
  41866f:	cmc    
  418670:	add    BYTE PTR [esi-0x1dbc8b87],bl
  418676:	fwait
  418677:	out    0xbd,al
  418679:	pop    ecx
  41867a:	dec    ebx
  41867b:	sub    eax,DWORD PTR [edx+0x2bd4bc77]
  418681:	mov    bh,0x9
  418683:	cmp    BYTE PTR [esi+eax*4],cl
  418686:	xor    cl,dl
  418688:	and    edx,DWORD PTR [ebx+0x76]
  41868b:	and    DWORD PTR [ecx],esi
  41868d:	sahf   
  41868e:	ror    BYTE PTR [edi],1
  418690:	mov    ecx,0x60e85f4d
  418695:	sbb    al,0x5a
  418697:	adc    bh,BYTE PTR [eax]
  418699:	cmp    DWORD PTR [edx-0x417e1c07],esi
  41869f:	add    al,0x95
  4186a1:	add    DWORD PTR ds:0x4afdf446,esp
  4186a7:	push   ebp
  4186a8:	xor    DWORD PTR [edi-0x68792393],ebp
  4186ae:	mov    ch,0x96
  4186b0:	push   es
  4186b1:	or     BYTE PTR [ebp+0x5b],dl
  4186b4:	or     eax,0x5f992c8d
  4186b9:	add    BYTE PTR [eax+0x7d],dl
  4186bc:	sbb    ebp,eax
  4186be:	ja     0x418738
  4186c0:	lds    eax,FWORD PTR [edi+0x32]
  4186c3:	fwait
  4186c4:	mov    dl,0xe2
  4186c6:	adc    dh,0x1a
  4186c9:	sub    al,0xc5
  4186cb:	jo     0x41864e
  4186cd:	int3   
  4186ce:	mov    bl,0x66
  4186d0:	pop    edx
  4186d1:	mov    ebp,0xefafdf56
  4186d6:	adc    BYTE PTR ds:0xfa5fd6c0,0xd
  4186dd:	lods   al,BYTE PTR ds:[esi]
  4186de:	mov    ch,0x9
  4186e0:	std    
  4186e1:	inc    ebp
  4186e2:	inc    ecx
  4186e3:	xchg   ebx,eax
  4186e4:	ror    BYTE PTR [ebx+ebx*1+0x33],0x7a
  4186e9:	mov    al,ds:0xf1a91476
  4186ee:	push   es
  4186ef:	outs   dx,DWORD PTR ds:[esi]
  4186f0:	push   0xfb4457a6
  4186f5:	dec    ebp
  4186f6:	int    0xd2
  4186f8:	mov    gs,WORD PTR [ecx]
  4186fa:	jg     0x418704
  4186fc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4186fd:	ins    BYTE PTR es:[edi],dx
  4186fe:	iret   
  4186ff:	adc    cl,BYTE PTR [ecx+esi*1+0x4a529776]
  418706:	cs cmp eax,0x398704e8
  41870c:	xchg   ebx,eax
  41870d:	xchg   edx,eax
  41870e:	mov    ch,0x4d
  418710:	lods   al,BYTE PTR ds:[esi]
  418711:	clc    
  418712:	ret    
  418713:	jno    0x418706
  418715:	cmc    
  418716:	add    DWORD PTR [ebp-0x22],0x4c7d8872
  41871d:	(bad)  
  41871e:	std    
  41871f:	aas    
  418720:	and    ah,BYTE PTR [ebp+0x3e883f8b]
  418726:	ret    
  418727:	dec    esp
  418728:	in     eax,0xe5
  41872a:	fnstcw WORD PTR [esi+0x21]
  41872d:	inc    eax
  41872e:	js     0x4186d5
  418730:	neg    BYTE PTR [ecx+0x59]
  418733:	jmp    0x41874d
  418735:	loop   0x418725
  418737:	aad    0x8e
  418739:	xchg   edi,eax
  41873a:	and    al,0x64
  41873c:	sbb    ah,dl
  41873e:	ror    BYTE PTR [ecx+0x1a],cl
  418741:	adc    eax,0xb208e7a0
  418746:	sar    ebx,1
  418748:	add    cl,dl
  41874a:	fdivr  QWORD PTR [ebp-0xf]
  41874d:	test   eax,0x2b3b1c88
  418752:	and    DWORD PTR [edi],esi
  418754:	adc    BYTE PTR [ebx],al
  418756:	shl    DWORD PTR gs:[ecx+0xd],0xe1
  41875b:	in     eax,0xcf
  41875d:	adc    DWORD PTR [ebx+0x68],ebp
  418760:	out    dx,al
  418761:	sti    
  418762:	jae    0x41873f
  418764:	push   ecx
  418765:	int    0xf2
  418767:	xor    cl,BYTE PTR [eax]
  418769:	pop    ss
  41876a:	push   ss
  41876b:	dec    eax
  41876c:	mov    ds:0x93143cbc,eax
  418771:	std    
  418772:	or     eax,0x73a25ef
  418777:	aad    0x67
  418779:	inc    edi
  41877a:	mov    ecx,0x86cc38c6
  41877f:	dec    esp
  418780:	jno    0x4187fe
  418782:	jmp    0x2a10:0x83853581
  418789:	cwde   
  41878a:	icebp  
  41878b:	test   BYTE PTR [edx+0x19],0x52
  41878f:	jmp    0x418790
  418791:	or     ecx,DWORD PTR [edi-0x47936ae0]
  418797:	out    0xec,al
  418799:	or     al,0x67
  41879b:	xchg   ebp,eax
  41879c:	xor    ebx,edx
  41879e:	pop    ecx
  41879f:	sbb    DWORD PTR [edx+ebx*2-0x6e2a64e4],esi
  4187a6:	cmp    DWORD PTR [ebx],0xffffffc1
  4187a9:	mov    esp,0x5bc93abf
  4187ae:	mov    ds:0xfe1de742,al
  4187b3:	mov    ebp,0x574f8ce3
  4187b8:	ficomp WORD PTR [edi+0x78046d6e]
  4187be:	rol    DWORD PTR [ebx-0x12e532ff],cl
  4187c4:	and    cl,BYTE PTR [edi-0x5f]
  4187c7:	data16 jle 0x41883e
  4187ca:	push   ds
  4187cb:	cwde   
  4187cc:	and    BYTE PTR [edi-0x55],bh
  4187cf:	(bad)  [eax-0x1630a0f3]
  4187d5:	in     al,0x2b
  4187d7:	sbb    ebx,DWORD PTR [edx]
  4187d9:	fdivr  DWORD PTR [edi-0x2e]
  4187dc:	mov    edx,0x6e3034de
  4187e1:	sbb    edi,ecx
  4187e3:	cdq    
  4187e4:	dec    eax
  4187e5:	inc    eax
  4187e6:	lds    edx,FWORD PTR [eax+0x61]
  4187e9:	xor    eax,0x3c4c6d08
  4187ee:	or     bl,BYTE PTR [ecx+0x46d7f254]
  4187f4:	mov    ah,0x38
  4187f6:	cmp    BYTE PTR [ebx],ah
  4187f8:	mov    edx,0xeadd4930
  4187fd:	lea    edx,ds:0x8b98c226
  418803:	or     dh,dl
  418805:	loopne 0x4187d2
  418807:	jle    0x418798
  418809:	mov    cl,0xa0
  41880b:	mov    ebp,0xf7e8f400
  418810:	dec    ebx
  418811:	call   0xbd20:0xc4576fcd
  418818:	mov    cl,0xaf
  41881a:	out    0x14,al
  41881c:	bound  esp,QWORD PTR [eax]
  41881e:	mov    ebp,esp
  418820:	call   0xc924:0xb5e5a6bd
  418827:	and    DWORD PTR [edx+esi*4-0x39],0x76d7bbe0
  41882f:	cmp    esi,DWORD PTR [ecx-0x69]
  418832:	pop    eax
  418833:	fidivr DWORD PTR [ecx]
  418835:	xchg   ebx,eax
  418836:	scas   eax,DWORD PTR es:[edi]
  418837:	cwde   
  418838:	add    cl,bh
  41883a:	push   ds
  41883b:	(bad)  
  41883d:	fld    DWORD PTR [ebx+0x16]
  418840:	aam    0x87
  418842:	cli    
  418843:	cld    
  418844:	sub    esp,DWORD PTR [ecx+ebx*2]
  418847:	adc    eax,0xd57780d3
  41884c:	aam    0x4f
  41884e:	std    
  41884f:	jp     0x418816
  418851:	mov    bl,BYTE PTR [esi+0x1f6bde1b]
  418857:	xor    edi,ebx
  418859:	push   eax
  41885a:	cmp    eax,0xa180795b
  41885f:	sbb    al,0xb9
  418861:	lahf   
  418862:	cmp    al,0x87
  418864:	jmp    0xd8e6:0x4f1bd8a2
  41886b:	xor    eax,DWORD PTR [esi]
  41886d:	(bad)  
  41886f:	shl    BYTE PTR [eax+0x7ba8ce64],1
  418875:	push   ebx
  418876:	and    dh,dh
  418878:	(bad)  
  418879:	sub    BYTE PTR [edx+0x3c],dl
  41887c:	push   0x5dd2de8
  418881:	lea    eax,[ebp+0x6a]
  418884:	scas   al,BYTE PTR es:[edi]
  418885:	ss push esp
  418887:	xchg   edi,eax
  418888:	sar    DWORD PTR [ebx+ebx*8-0x29b7f678],1
  41888f:	xchg   ebp,eax
  418890:	test   eax,0xc057648d
  418895:	test   DWORD PTR [esi],esi
  418897:	or     BYTE PTR [ecx],cl
  418899:	sbb    al,0x94
  41889b:	and    al,0x93
  41889d:	(bad)  
  41889e:	pop    ds
  41889f:	pop    ds
  4188a0:	(bad)  
  4188a1:	fisub  DWORD PTR [eax]
  4188a3:	cmp    esp,edi
  4188a5:	(bad)  
  4188a6:	icebp  
  4188a7:	outs   dx,DWORD PTR ds:[esi]
  4188a8:	xchg   esp,eax
  4188a9:	std    
  4188aa:	cli    
  4188ab:	jmp    0x2655:0x969c8f03
  4188b2:	data16 or BYTE PTR [edx-0x44],cl
  4188b6:	fdiv   QWORD PTR [ebx]
  4188b8:	gs push ebp
  4188ba:	loopne 0x4188ed
  4188bc:	push   ss
  4188bd:	js     0x418843
  4188bf:	clc    
  4188c0:	mov    eax,0x54669b21
  4188c5:	sub    BYTE PTR [ecx+0x2c],0x2d
  4188c9:	pop    edx
  4188ca:	shl    ebx,1
  4188cc:	push   ecx
  4188cd:	popa   
  4188ce:	in     al,dx
  4188cf:	ins    BYTE PTR es:[edi],dx
  4188d0:	outs   dx,DWORD PTR ds:[esi]
  4188d1:	js     0x418908
  4188d3:	push   esp
  4188d4:	mov    bh,0xa8
  4188d6:	fist   WORD PTR [edx]
  4188d8:	aaa    
  4188d9:	adc    eax,esp
  4188db:	fcomp  DWORD PTR [ecx-0x77]
  4188de:	dec    edx
  4188df:	xor    al,BYTE PTR [esi]
  4188e1:	mov    eax,ds:0xe4a204
  4188e6:	push   es
  4188e7:	fnstcw WORD PTR [eax+0x14]
  4188ea:	push   ebp
  4188eb:	out    0x6,eax
  4188ed:	sub    eax,0x4f2fcf09
  4188f2:	add    eax,0x6a1bfb96
  4188f7:	aas    
  4188f8:	jl     0x418889
  4188fa:	dec    eax
  4188fb:	mov    eax,0xdb894f07
  418900:	shl    ecx,0x52
  418903:	jge    0x4188b6
  418905:	mov    ebp,0x93cc0f20
  41890a:	mov    dh,0x50
  41890c:	rol    DWORD PTR [ebx-0x6780535],cl
  418912:	scas   al,BYTE PTR es:[edi]
  418913:	fld    TBYTE PTR [eax]
  418915:	pop    ebx
  418916:	out    dx,eax
  418917:	ins    BYTE PTR es:[edi],dx
  418918:	(bad)  
  41891b:	mov    WORD PTR [edi],ds
  41891d:	out    0x5d,eax
  41891f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418920:	ret    
  418921:	pop    eax
  418922:	mov    ah,0x70
  418924:	inc    ecx
  418925:	cwde   
  418926:	xor    edi,DWORD PTR [ecx+esi*1-0x3a]
  41892a:	xchg   ecx,eax
  41892b:	push   esi
  41892c:	xchg   edx,eax
  41892d:	int    0x37
  41892f:	idiv   BYTE PTR [ecx+0x6cb63a97]
  418935:	mov    ecx,0xb9a3e9aa
  41893a:	jno    0x418949
  41893c:	sbb    BYTE PTR [edx],bh
  41893e:	out    0x32,al
  418940:	out    0x59,al
  418942:	sbb    esp,DWORD PTR [edx]
  418944:	push   eax
  418945:	xor    dh,ah
  418947:	or     eax,0x84a737c8
  41894c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41894d:	ds jbe 0x418936
  418950:	sub    esp,ebx
  418952:	ror    BYTE PTR [ecx],1
  418954:	outs   dx,BYTE PTR ds:[esi]
  418955:	cmc    
  418956:	jmp    0x418906
  418958:	jl     0x41893f
  41895a:	xor    DWORD PTR [esi-0x7955ef],ebp
  418960:	add    al,0x58
  418962:	repnz outs dx,BYTE PTR ds:[esi]
  418964:	je     0x418928
  418966:	sbb    eax,0x10d4c096
  41896b:	(bad)  
  41896c:	pop    edi
  41896d:	lods   al,BYTE PTR ds:[esi]
  41896e:	pusha  
  41896f:	sub    edi,DWORD PTR [edi+0x56]
  418972:	xchg   ebp,eax
  418973:	jo     0x41890e
  418975:	adc    dh,dl
  418977:	test   eax,0x789dfaee
  41897c:	ficomp WORD PTR [edx+0x1b555193]
  418982:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418983:	popf   
  418984:	fsubr  st(1),st
  418986:	arpl   cx,si
  418988:	push   ebp
  418989:	neg    edi
  41898b:	jae    0x41892b
  41898d:	(bad)  
  41898e:	sbb    eax,0xc3cbf8f5
  418993:	clc    
  418994:	mov    bh,0xd0
  418996:	mov    ds:0x9529e39c,al
  41899b:	dec    ebx
  41899c:	test   DWORD PTR [ecx-0x1093d9a],0x9a1f3617
  4189a6:	in     al,0xef
  4189a8:	stos   BYTE PTR es:[edi],al
  4189a9:	sar    BYTE PTR ds:0x32164006,cl
  4189af:	retf   0x147
  4189b2:	das    
  4189b3:	arpl   bp,ax
  4189b5:	jle    0x418943
  4189b7:	aam    0x5b
  4189b9:	(bad)  
  4189ba:	or     DWORD PTR [ebx+0x25],esp
  4189bd:	dec    edx
  4189be:	je     0x418992
  4189c0:	mov    al,ds:0xa86e7bd0
  4189c5:	jo     0x418950
  4189c7:	(bad)  
  4189c8:	out    0xdb,al
  4189ca:	psllw  mm0,mm1
  4189cd:	jle    0x4189b2
  4189cf:	bound  edi,QWORD PTR [ebx-0x6df3277b]
  4189d5:	cmp    DWORD PTR [edx+0x968dcb3],0x24
  4189dc:	dec    eax
  4189dd:	(bad)  
  4189de:	scas   eax,DWORD PTR es:[edi]
  4189df:	push   0x58c67a8a
  4189e4:	retf   0xc173
  4189e7:	lods   eax,DWORD PTR ds:[esi]
  4189e8:	aad    0xf0
  4189ea:	cmp    bl,ch
  4189ec:	add    eax,0xbaf36fc9
  4189f1:	leave  
  4189f2:	xchg   ebp,eax
  4189f3:	inc    ecx
  4189f4:	ss jge 0x418a61
  4189f7:	fucomi st,st(6)
  4189f9:	icebp  
  4189fa:	pop    ds
  4189fb:	mov    al,0x5e
  4189fd:	jmp    0x418a7b
  4189ff:	xlat   BYTE PTR ds:[ebx]
  418a00:	cmp    al,0xdb
  418a02:	aam    0x85
  418a04:	mov    cl,0x3c
  418a06:	ja     0x4189a9
  418a08:	call   0x1732de96
  418a0d:	das    
  418a0e:	dec    ebp
  418a0f:	sahf   
  418a10:	aaa    
  418a11:	pop    ecx
  418a12:	jl     0x418a30
  418a14:	xacquire xchg BYTE PTR [edx],bh
  418a17:	clc    
  418a18:	add    al,0x1e
  418a1a:	mov    bl,0x87
  418a1c:	cmp    eax,0xf92c8f9
  418a21:	sbb    bl,al
  418a23:	pusha  
  418a24:	dec    esi
  418a25:	sbb    BYTE PTR ds:[edx],bh
  418a28:	ror    bl,1
  418a2a:	fwait
  418a2b:	aam    0x8a
  418a2d:	mov    esi,0xed41e956
  418a32:	jmp    0xee181cb7
  418a37:	mov    ecx,0xa3028387
  418a3c:	ins    DWORD PTR es:[edi],dx
  418a3d:	imul   esi,DWORD PTR [eax],0x4
  418a40:	xchg   edx,eax
  418a41:	mov    eax,ss
  418a43:	and    eax,0xc3d2ee48
  418a48:	adc    DWORD PTR [esi],esi
  418a4a:	sbb    eax,0xd295dca0
  418a4f:	ins    BYTE PTR es:[edi],dx
  418a50:	add    DWORD PTR [ebx-0x4e],ebp
  418a53:	dec    ebp
  418a54:	fdivr  DWORD PTR [ebx]
  418a56:	clc    
  418a57:	test   DWORD PTR [edx-0x7a],esi
  418a5a:	add    eax,0x9b7b61d4
  418a5f:	add    BYTE PTR [ecx+0x51],cl
  418a62:	pop    esi
  418a63:	loop   0x418a06
  418a65:	cmp    dh,BYTE PTR [esi-0x1c49f75f]
  418a6b:	dec    edx
  418a6c:	xchg   edi,eax
  418a6d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418a6e:	cmc    
  418a6f:	cmp    ecx,DWORD PTR [ebx+0x15ef9c93]
  418a75:	sub    BYTE PTR [ebp+0x463c92c8],ah
  418a7b:	pop    es
  418a7c:	inc    edx
  418a7d:	or     BYTE PTR ds:0xd1f712c4,al
  418a83:	loop   0x418aaf
  418a85:	inc    esp
  418a86:	out    0xcf,al
  418a88:	xchg   esp,eax
  418a89:	push   esp
  418a8a:	xor    BYTE PTR [edx+0x26cf5f3a],0xb1
  418a91:	in     eax,0x8
  418a93:	js     0x418af0
  418a95:	hlt    
  418a96:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418a97:	rcl    DWORD PTR ds:0x6b4d59b8,0x99
  418a9e:	shl    BYTE PTR [ecx],0x0
  418aa1:	imul   esi,DWORD PTR [ebx+0x206c07e1],0xe6c157e3
  418aab:	icebp  
  418aac:	ins    BYTE PTR es:[edi],dx
  418aad:	lahf   
  418aae:	stos   BYTE PTR es:[edi],al
  418aaf:	rcr    DWORD PTR [ebx+edx*4],0xbf
  418ab3:	push   es
  418ab4:	add    al,0xea
  418ab6:	pop    ds
  418ab7:	xchg   BYTE PTR [ecx-0x3b],dh
  418aba:	jmp    0xdae712a5
  418abf:	push   ebx
  418ac0:	push   edi
  418ac1:	ss cmp eax,0xbfa9e527
  418ac7:	or     BYTE PTR [edx+0x5fbf9e9e],bl
  418acd:	jne    0x418b2f
  418acf:	mov    edx,0x16283d54
  418ad4:	scas   al,BYTE PTR es:[edi]
  418ad5:	mov    bh,0x32
  418ad7:	data16 jbe 0x418b4e
  418ada:	(bad)  
  418adb:	jo     0x418b51
  418add:	test   BYTE PTR [esp+ecx*8+0x70d31366],dh
  418ae4:	in     al,dx
  418ae5:	push   edx
  418ae6:	cli    
  418ae7:	mov    WORD PTR [esi+0x5e802a4f],cs
  418aed:	retf   0x40bc
  418af0:	pop    esp
  418af1:	pop    ebx
  418af2:	jp     0x418acd
  418af4:	mov    ds:0x6e42a63a,eax
  418af9:	mov    ebp,0x957da59e
  418afe:	fcmovne st,st(2)
  418b00:	pop    ebp
  418b01:	outs   dx,DWORD PTR ds:[esi]
  418b02:	dec    esp
  418b03:	xor    esi,edi
  418b05:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418b06:	pusha  
  418b07:	outs   dx,DWORD PTR ds:[esi]
  418b08:	mov    ecx,0x76aae1a6
  418b0d:	dec    esp
  418b0e:	xchg   edx,eax
  418b0f:	push   ss
  418b10:	pop    ss
  418b11:	mov    DWORD PTR [edx+0x16e43634],ecx
  418b17:	retf   
  418b18:	add    al,BYTE PTR [esi]
  418b1a:	outs   dx,DWORD PTR ds:[esi]
  418b1b:	cmovle ebx,DWORD PTR [ebx+0x63]
  418b1f:	or     cl,BYTE PTR ds:0x9612d7fc
  418b25:	(bad)  
  418b26:	jg     0x418acc
  418b28:	arpl   WORD PTR [eax+ebx*8],ax
  418b2b:	pop    ds
  418b2c:	pop    ebx
  418b2d:	icebp  
  418b2e:	outs   dx,DWORD PTR ds:[esi]
  418b2f:	clc    
  418b30:	dec    esp
  418b31:	(bad)  
  418b32:	pop    esi
  418b33:	test   eax,0x87ce1b7b
  418b38:	pop    esp
  418b39:	push   ebp
  418b3a:	bound  ebx,QWORD PTR [ebx]
  418b3c:	pop    ebp
  418b3d:	adc    ebp,esi
  418b3f:	cld    
  418b40:	mov    al,0x67
  418b42:	jbe    0x418b97
  418b44:	dec    esp
  418b45:	inc    ebp
  418b46:	ins    DWORD PTR es:[edi],dx
  418b47:	(bad)  
  418b4a:	stc    
  418b4b:	dec    esp
  418b4c:	fidivr DWORD PTR [edx]
  418b4e:	jne    0x418ae8
  418b50:	lods   al,BYTE PTR ds:[esi]
  418b51:	rsm    
  418b53:	add    BYTE PTR [edi-0x63],al
  418b56:	xchg   esi,eax
  418b57:	pop    eax
  418b58:	(bad)  
  418b59:	and    DWORD PTR [eax+0xb1b500],ebp
  418b5f:	pop    esp
  418b60:	jne    0x418b3e
  418b62:	out    0x83,eax
  418b64:	and    ebx,ebx
  418b66:	push   ss
  418b67:	ret    
  418b68:	(bad)  [ebp-0x50]
  418b6b:	xchg   esp,eax
  418b6c:	jns    0x418b3b
  418b6e:	shr    DWORD PTR [edx+0x5893ce65],0x1c
  418b75:	add    BYTE PTR [ebx],ch
  418b77:	test   al,0xa8
  418b79:	inc    ebp
  418b7a:	cmp    eax,0xbe1efcb4
  418b7f:	mov    eax,ds:0x3f5f49ab
  418b84:	shl    BYTE PTR [edx+0x61],0xcb
  418b88:	inc    ebx
  418b89:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418b8a:	loope  0x418ba1
  418b8c:	clc    
  418b8d:	aam    0x4c
  418b8f:	cld    
  418b90:	dec    ebx
  418b91:	lahf   
  418b92:	ror    DWORD PTR [edx-0x2ebc625d],cl
  418b98:	popf   
  418b99:	mov    eax,DWORD PTR [esi]
  418b9b:	inc    ebx
  418b9c:	jbe    0x418b7e
  418b9e:	mov    edi,fs
  418ba0:	dec    ebp
  418ba1:	xor    al,0x40
  418ba3:	sahf   
  418ba4:	jecxz  0x418b32
  418ba6:	in     al,dx
  418ba7:	or     BYTE PTR [eax+eiz*4],0x79
  418bab:	and    esi,DWORD PTR [eax+0x5a1436a]
  418bb1:	mov    ds:0x12c8754e,eax
  418bb6:	adc    cl,al
  418bb8:	pop    ebx
  418bb9:	add    BYTE PTR [edi],dl
  418bbb:	push   0xb0aa5b33
  418bc0:	out    0xfe,eax
  418bc2:	ds std 
  418bc4:	or     BYTE PTR [eax],0x2b
  418bc7:	inc    esi
  418bc8:	aad    0x67
  418bca:	vhaddps xmm5,xmm7,XMMWORD PTR [esi-0x369681cb]
  418bd2:	or     al,0x75
  418bd4:	hlt    
  418bd5:	shr    BYTE PTR [eax+ecx*1-0x7866508e],1
  418bdc:	xor    dh,bl
  418bde:	test   eax,0xb0a23a5e
  418be3:	fist   WORD PTR [esi-0x43]
  418be6:	(bad)  
  418be8:	loopne 0x418bcb
  418bea:	sub    DWORD PTR [esi],eax
  418bec:	fild   WORD PTR [edx]
  418bee:	dec    eax
  418bef:	dec    ecx
  418bf0:	or     DWORD PTR [edx+0x6a],esi
  418bf3:	popa   
  418bf4:	lods   eax,DWORD PTR ds:[esi]
  418bf5:	jl     0x418c4f
  418bf7:	not    BYTE PTR [esi+0x32]
  418bfa:	push   esp
  418bfb:	push   edx
  418bfc:	inc    edx
  418bfd:	iret   
  418bfe:	xor    BYTE PTR [edi],ch
  418c00:	sub    bh,BYTE PTR [edi+ebx*4-0x51]
  418c04:	stos   DWORD PTR es:[edi],eax
  418c05:	shl    esp,cl
  418c07:	mov    BYTE PTR [esi-0x21],dh
  418c0a:	xchg   BYTE PTR [edi],bh
  418c0c:	pop    esp
  418c0d:	xor    ah,ah
  418c0f:	adc    esp,DWORD PTR [edi+ebp*8-0x5b27f31e]
  418c16:	push   esi
  418c17:	or     ecx,DWORD PTR cs:[edi+0x70]
  418c1b:	out    dx,eax
  418c1c:	or     cl,BYTE PTR [eax]
  418c1e:	popf   
  418c1f:	nop
  418c20:	push   sp
  418c22:	retf   0xb020
  418c25:	shr    DWORD PTR [edx+ebp*1],cl
  418c28:	in     eax,0xd7
  418c2a:	fild   WORD PTR [esi+0x546dd527]
  418c30:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418c31:	fs loop 0x418c0b
  418c34:	jmp    0x395d:0x4a958124
  418c3b:	repz jns 0x418c05
  418c3e:	jp     0x418bc7
  418c40:	xchg   edx,eax
  418c41:	inc    eax
  418c42:	loop   0x418c06
  418c44:	jne    0x418c88
  418c46:	gs or  dh,cl
  418c49:	sbb    ebx,esp
  418c4b:	(bad)  
  418c4c:	jmp    FWORD PTR [ecx-0x6b]
  418c4f:	xchg   ebx,esi
  418c51:	mov    ecx,0x9e13b4dc
  418c56:	sbb    ecx,DWORD PTR [ebx+0x1387fb2e]
  418c5c:	inc    eax
  418c5d:	aas    
  418c5e:	fs dec ebx
  418c60:	sar    edx,cl
  418c62:	push   0x8b54f3aa
  418c67:	pop    ebp
  418c68:	mov    al,0x3
  418c6a:	shl    DWORD PTR [ebx],1
  418c6c:	ror    DWORD PTR [ecx+0x558bb055],cl
  418c72:	or     BYTE PTR [ebx-0x28fc4ba3],cl
  418c78:	and    edx,ebx
  418c7a:	mov    DWORD PTR [ebp-0x4c],edx
  418c7d:	mov    edx,DWORD PTR [ebp+0x8]
  418c80:	mov    ebx,DWORD PTR [ebp-0x48]
  418c83:	lea    edx,[ebx+edx*1+0x241fcde]
  418c8a:	mov    DWORD PTR [ebp-0x48],edx
  418c8d:	mov    edx,DWORD PTR [ebp+0x8]
  418c90:	mov    ebx,0xfa5e1521
  418c95:	sub    ebx,edx
  418c97:	add    ebx,DWORD PTR [ebp-0x44]
  418c9a:	mov    DWORD PTR [ebp-0x44],ebx
  418c9d:	mov    edx,DWORD PTR [ebp+0x8]
  418ca0:	xor    edx,eax
  418ca2:	add    edx,esi
  418ca4:	jne    0x4144eb
  418caa:	jmp    0x41b0d8
  418caf:	jmp    0x41b050
  418cb4:	ins    BYTE PTR es:[edi],dx
  418cb5:	loopne 0x418cba
  418cb7:	jmp    0x418c3c
  418cb9:	mov    eax,DWORD PTR [ebx+ebx*8+0x6fd1292a]
  418cc0:	iret   
  418cc1:	test   DWORD PTR cs:[edi+0x32],0xfe7a7d1f
  418cc9:	pop    edi
  418cca:	jp     0x418d46
  418ccc:	sbb    DWORD PTR [edx-0x22],esp
  418ccf:	idiv   al
  418cd1:	adc    al,0x6d
  418cd3:	mov    bl,0xe1
  418cd5:	inc    eax
  418cd6:	or     eax,0xadf54a94
  418cdb:	or     eax,0x641cd0b0
  418ce0:	xor    DWORD PTR [edx+0x2513cc6b],edi
  418ce6:	(bad)  
  418ce7:	shr    DWORD PTR [ebx-0x5ce30984],cl
  418ced:	xor    dh,BYTE PTR [edx+ecx*1-0x34c84b99]
  418cf4:	aaa    
  418cf5:	shl    BYTE PTR [ebp+0x5b],0x7c
  418cf9:	jo     0x418d12
  418cfb:	(bad)  
  418cfc:	jmp    0x418d28
  418cfe:	xlat   BYTE PTR ds:[ebx]
  418cff:	xor    ecx,0x68388a6e
  418d05:	int    0x32
  418d07:	jl     0x418c89
  418d09:	inc    ebp
  418d0a:	lea    ebp,[edx+0x2]
  418d0d:	(bad)  
  418d0e:	mov    ds:0x4da0551e,eax
  418d13:	test   DWORD PTR [ecx+0x6598e338],edi
  418d19:	xor    al,BYTE PTR [eax]
  418d1b:	jmp    0x418ccd
  418d1d:	inc    edx
  418d1e:	data16 into 
  418d20:	retf   
  418d21:	fs daa 
  418d23:	dec    ecx
  418d24:	sar    eax,1
  418d26:	cdq    
  418d27:	es push edi
  418d29:	jge    0x418d48
  418d2b:	sub    eax,0x5dd26f2d
  418d30:	in     al,dx
  418d31:	pop    ebx
  418d32:	out    dx,eax
  418d33:	in     eax,0xc7
  418d35:	inc    esp
  418d36:	cli    
  418d37:	retf   
  418d38:	mov    ds:0x5ff7896d,al
  418d3d:	ss or  al,0xae
  418d40:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418d41:	(bad)  
  418d42:	arpl   WORD PTR [esi+esi*2],bp
  418d45:	mov    esp,0xffce731e
  418d4a:	inc    edx
  418d4b:	xor    ah,BYTE PTR [eax-0x5e0620f8]
  418d51:	and    al,0x92
  418d53:	outs   dx,DWORD PTR ds:[esi]
  418d54:	jae    0x418d0d
  418d56:	addr16 inc eax
  418d58:	js     0x418d12
  418d5a:	inc    eax
  418d5b:	or     BYTE PTR [esi+0x683784b4],bl
  418d61:	mov    ecx,0x952cd8f
  418d66:	pop    edx
  418d67:	dec    ebx
  418d68:	add    eax,0x59192f21
  418d6d:	enter  0x9f9b,0x7e
  418d71:	jbe    0x418d6e
  418d73:	cmp    BYTE PTR [edx],dh
  418d75:	fadd   QWORD PTR fs:[eax]
  418d78:	xchg   ebp,eax
  418d79:	and    esp,DWORD PTR [edi]
  418d7b:	mov    ecx,0x94d5b13a
  418d80:	fld    TBYTE PTR fs:[edi]
  418d83:	or     ecx,DWORD PTR [eax+esi*8+0x3d]
  418d87:	xchg   BYTE PTR [esp+ecx*1-0x33aa93c7],dl
  418d8e:	test   DWORD PTR [esi],esi
  418d90:	mov    DWORD PTR [esi+ebx*2-0x54b6074b],ebp
  418d97:	rol    DWORD PTR [edx-0x19],0x3d
  418d9b:	push   ebx
  418d9c:	or     esp,DWORD PTR [ebp-0x23]
  418d9f:	sbb    al,0xa6
  418da1:	add    ch,BYTE PTR [esi+0x1a]
  418da4:	mul    esi
  418da6:	fadd   st,st(7)
  418da8:	push   ebx
  418da9:	push   esi
  418daa:	jmp    DWORD PTR [ebx]
  418dac:	hlt    
  418dad:	xchg   esi,eax
  418dae:	or     DWORD PTR [ecx],edi
  418db0:	fwait
  418db1:	sbb    al,0x5e
  418db3:	daa    
  418db4:	pop    ds
  418db5:	jg     0x418d70
  418db7:	imul   ebx,esi,0xfffffff8
  418dba:	inc    edx
  418dbb:	jmp    0x418da1
  418dbd:	mov    eax,0x8fdb2378
  418dc2:	in     al,0x96
  418dc4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418dc5:	pushf  
  418dc6:	shl    esi,cl
  418dc8:	call   0xa46fd7e8
  418dcd:	or     BYTE PTR [edi],bh
  418dcf:	dec    ecx
  418dd0:	push   ebp
  418dd1:	sub    al,0x12
  418dd3:	mov    al,0xb7
  418dd5:	daa    
  418dd6:	shl    DWORD PTR [ecx-0x67],cl
  418dd9:	xlat   BYTE PTR ds:[ebx]
  418dda:	add    esi,esp
  418ddc:	jae    0x418dfe
  418dde:	lock les ebx,FWORD PTR ds:0x8da40921
  418de5:	dec    edx
  418de6:	cmp    al,0xf3
  418de8:	inc    ecx
  418de9:	pop    esi
  418dea:	jns    0x418df6
  418dec:	test   eax,0x525e87ba
  418df1:	sbb    ah,al
  418df3:	cwde   
  418df4:	add    ebp,eax
  418df6:	push   edx
  418df7:	push   0x4d91eb4
  418dfc:	out    dx,eax
  418dfd:	push   esi
  418dfe:	xchg   esp,eax
  418dff:	jo     0x418de3
  418e01:	rcl    DWORD PTR ss:[esi],0x92
  418e05:	int3   
  418e06:	mov    eax,ds:0x7bc847ce
  418e0b:	loopne 0x418d8d
  418e0d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418e0e:	je     0x418e3f
  418e10:	xor    eax,0xd555c3a3
  418e15:	add    DWORD PTR [esi-0x61],edi
  418e18:	enter  0xeeb5,0x10
  418e1c:	push   edi
  418e1d:	int    0xcc
  418e1f:	ret    
  418e20:	mov    ebx,0x23b33d39
  418e25:	xchg   edi,ebx
  418e27:	aam    0x5d
  418e29:	and    dl,bl
  418e2b:	rcr    BYTE PTR [edx],cl
  418e2d:	xchg   BYTE PTR [ebp-0x33fe9e55],bl
  418e33:	shl    BYTE PTR [ebx],0x43
  418e36:	cs (bad) 
  418e38:	push   0x2e128f8e
  418e3d:	and    DWORD PTR [edi],0xe4d95083
  418e43:	xchg   ebp,eax
  418e44:	test   BYTE PTR [ebp+0x38041c7c],dl
  418e4a:	test   eax,0x524aac76
  418e4f:	mov    edi,0x8aac0d9d
  418e54:	pop    esp
  418e55:	fnstcw WORD PTR [esi+0x9]
  418e58:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418e59:	or     ebx,DWORD PTR [ebx+0x2b6f9a0f]
  418e5f:	mov    ebx,0xfc60362b
  418e64:	push   0xd364383c
  418e69:	dec    edi
  418e6a:	adc    bl,BYTE PTR [edx+0x70ddf7b]
  418e70:	shr    DWORD PTR [edx-0x3a1ea632],cl
  418e76:	inc    ebp
  418e77:	inc    ebx
  418e78:	fsub   st(6),st
  418e7a:	jge    0x418ebe
  418e7c:	ret    
  418e7d:	je     0x418e21
  418e7f:	loope  0x418ecf
  418e81:	xchg   ecx,eax
  418e82:	xchg   esp,eax
  418e83:	sar    BYTE PTR [esi],1
  418e85:	pop    ds
  418e86:	push   edi
  418e87:	(bad)  
  418e88:	out    dx,al
  418e89:	int    0xa5
  418e8b:	or     eax,0x496f3a4
  418e90:	jg     0x418e24
  418e92:	cmp    BYTE PTR [ecx-0x9],0x2c
  418e96:	sbb    eax,0xa1df1911
  418e9b:	sahf   
  418e9c:	xor    BYTE PTR [ebx],dl
  418e9e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418e9f:	das    
  418ea0:	in     al,dx
  418ea1:	clc    
  418ea2:	sbb    ebx,DWORD PTR [edi-0x75]
  418ea5:	mov    esi,0x71d4b85e
  418eaa:	mov    DWORD PTR ds:0x89af6b33,esp
  418eb0:	mov    BYTE PTR [edx+0x4d],bh
  418eb3:	push   es
  418eb4:	xchg   edi,eax
  418eb5:	neg    DWORD PTR [eax-0x15]
  418eb8:	mov    bl,0xc0
  418eba:	shl    dl,cl
  418ebc:	arpl   WORD PTR [ecx+0x65abd6fb],sp
  418ec2:	gs mov bl,0x38
  418ec5:	xchg   esp,eax
  418ec6:	std    
  418ec7:	cwde   
  418ec8:	and    eax,ecx
  418eca:	xor    dh,BYTE PTR [esi]
  418ecc:	sti    
  418ecd:	or     bh,BYTE PTR [ecx-0x177dce2f]
  418ed3:	push   ss
  418ed4:	push   0x590fa7bd
  418ed9:	pop    ds
  418eda:	jb     0x418ede
  418edc:	mov    fs,WORD PTR [esi-0x10]
  418edf:	aad    0x3d
  418ee1:	add    DWORD PTR [ebx+eiz*4+0x76d705e9],esp
  418ee8:	lds    ebx,FWORD PTR [eax+ebp*2+0x7a]
  418eec:	outs   dx,BYTE PTR ds:[esi]
  418eed:	xor    dl,bh
  418eef:	mov    ds:0xc3925652,eax
  418ef4:	cmp    ecx,DWORD PTR [ebp-0x75]
  418ef7:	sub    BYTE PTR [edx-0x7b60140f],dl
  418efd:	(bad)  
  418efe:	jl     0x418f4f
  418f00:	lahf   
  418f01:	jmp    0xf8440869
  418f06:	sbb    bl,BYTE PTR [ebp-0x76]
  418f09:	jno    0x418f24
  418f0b:	(bad)  
  418f0c:	into   
  418f0d:	scas   al,BYTE PTR es:[edi]
  418f0e:	add    DWORD PTR [ecx],edi
  418f10:	mov    eax,0xcf8079ca
  418f15:	pop    esp
  418f16:	xchg   esp,eax
  418f17:	pusha  
  418f18:	jmp    0x82a7:0x210a81d9
  418f1f:	sub    BYTE PTR [esi-0x66],0xa3
  418f23:	push   ebp
  418f24:	and    ebp,eax
  418f26:	adc    eax,0xb6107588
  418f2b:	mov    ecx,0xbbaf2c01
  418f30:	mov    dl,0xd9
  418f32:	xchg   ebp,eax
  418f33:	stos   BYTE PTR es:[edi],al
  418f34:	xchg   edx,eax
  418f35:	mov    dl,0x49
  418f37:	dec    ecx
  418f38:	and    al,0xd7
  418f3a:	add    al,0x50
  418f3c:	dec    BYTE PTR [esi-0x28cdbd24]
  418f42:	xchg   edx,eax
  418f43:	in     eax,0x8b
  418f45:	mov    ah,0x34
  418f47:	and    al,0xec
  418f49:	inc    esi
  418f4a:	(bad)  
  418f4b:	sub    al,0x9c
  418f4d:	jecxz  0x418f5c
  418f4f:	icebp  
  418f50:	ds add al,0x85
  418f53:	xchg   edi,eax
  418f54:	xchg   esp,eax
  418f55:	fdivr  st,st(7)
  418f57:	mov    ?,WORD PTR [edx]
  418f59:	repz loopne 0x418fa0
  418f5c:	dec    esp
  418f5d:	addr16 pop esp
  418f5f:	(bad)
  418f63:	ret    0xe1d5
  418f66:	push   es
  418f67:	enter  0xed2f,0xe7
  418f6b:	dec    esp
  418f6c:	fnstcw WORD PTR [edi+0x27]
  418f6f:	pushf  
  418f70:	sub    bh,dl
  418f72:	push   eax
  418f73:	stos   BYTE PTR es:[edi],al
  418f74:	(bad)  
  418f76:	fstp   DWORD PTR [ecx]
  418f78:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418f79:	(bad)  
  418f7b:	push   edx
  418f7c:	aad    0x8
  418f7e:	ins    DWORD PTR es:[edi],dx
  418f7f:	pop    ebx
  418f80:	push   ss
  418f81:	sbb    edx,ebx
  418f83:	(bad)  
  418f84:	retf   
  418f85:	xchg   BYTE PTR [ecx-0x5d093977],ah
  418f8b:	dec    ebx
  418f8c:	retf   
  418f8d:	(bad)  
  418f8e:	xchg   ecx,eax
  418f8f:	sub    bl,BYTE PTR [ebx-0x16]
  418f92:	cmp    esi,ebx
  418f94:	sub    ecx,esi
  418f96:	hlt    
  418f97:	fsubr  QWORD PTR [ebx-0x6b]
  418f9a:	dec    edi
  418f9b:	out    dx,ax
  418f9d:	or     ah,BYTE PTR [eax-0x43]
  418fa0:	push   ebx
  418fa1:	push   ss
  418fa2:	jns    0x418fdd
  418fa4:	lea    edi,[ebx+0x78bd69af]
  418faa:	adc    bh,dh
  418fac:	sbb    eax,0x222d0902
  418fb1:	pop    es
  418fb2:	or     BYTE PTR [edx-0x13],dl
  418fb5:	xor    BYTE PTR [esi+eiz*2],bh
  418fb8:	adc    dl,BYTE PTR [edx+0x483c7e14]
  418fbe:	add    bh,dl
  418fc0:	dec    esp
  418fc1:	pop    edi
  418fc2:	call   DWORD PTR ds:0x580a158a
  418fc8:	mov    esp,0x9252b4ca
  418fcd:	outs   dx,BYTE PTR ds:[esi]
  418fce:	js     0x41903c
  418fd0:	(bad)  
  418fd1:	out    dx,al
  418fd2:	add    al,0x6b
  418fd4:	js     0x418fd0
  418fd6:	ja     0x419031
  418fd8:	adc    eax,0x111925a4
  418fdd:	xchg   esi,eax
  418fde:	and    BYTE PTR [edx+0x7e896c8e],cl
  418fe4:	sti    
  418fe5:	inc    edx
  418fe6:	dec    eax
  418fe7:	mov    ecx,0x48acaa14
  418fec:	fidivr DWORD PTR [edx]
  418fee:	dec    eax
  418fef:	sub    al,0xb8
  418ff1:	ds mov dh,0x1c
  418ff4:	sub    eax,0x31338ed8
  418ff9:	lea    ecx,[edi+ebx*4]
  418ffc:	mov    edx,0x2305c221
  419001:	int3   
  419002:	scas   eax,DWORD PTR es:[edi]
  419003:	lods   eax,DWORD PTR ds:[esi]
  419004:	and    edx,edx
  419006:	or     al,0x1c
  419008:	pop    ss
  419009:	in     al,0x5b
  41900b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41900c:	not    bl
  41900e:	stc    
  41900f:	leave  
  419010:	push   esp
  419011:	aaa    
  419012:	or     BYTE PTR [eax],bl
  419014:	sbb    al,0x6
  419016:	(bad)  
  419017:	dec    ecx
  419018:	(bad)  
  419019:	cmp    BYTE PTR [edx+0x2e],dh
  41901c:	retf   0x586e
  41901f:	adc    ch,ch
  419021:	push   0xac5006d1
  419026:	es add eax,0xc1c96898
  41902c:	dec    edi
  41902d:	inc    ebx
  41902e:	outs   dx,DWORD PTR ds:[esi]
  41902f:	leave  
  419030:	call   DWORD PTR [eax+edx*4]
  419033:	jae    0x419080
  419035:	pop    ebp
  419036:	lods   al,BYTE PTR ds:[esi]
  419037:	xor    DWORD PTR [ecx-0x64c44d67],esp
  41903d:	pop    ecx
  41903e:	lock jle 0x419098
  419041:	pop    ebp
  419042:	inc    edx
  419043:	mov    dl,0xe3
  419045:	jg     0x418fdb
  419047:	xchg   esp,eax
  419048:	aad    0xd6
  41904a:	mov    dh,0x10
  41904c:	push   esi
  41904d:	pop    esi
  41904e:	and    BYTE PTR ss:[ebp+0x2ea242fc],dh
  419055:	cmp    BYTE PTR [edx-0x5b75b13],bl
  41905b:	cmp    ebp,DWORD PTR [edi+0x774d1a92]
  419061:	ins    BYTE PTR es:[edi],dx
  419062:	jge    0x4190b2
  419064:	jle    0x4190b2
  419066:	in     al,0x96
  419068:	fdiv   st,st(5)
  41906a:	addr16 mov esi,0xa8b23f29
  419070:	(bad)  
  419071:	pop    ss
  419072:	mov    eax,ds:0x7696cf25
  419078:	push   esi
  419079:	adc    ah,dl
  41907b:	push   ebp
  41907c:	std    
  41907d:	sbb    eax,0x67f342e6
  419082:	push   0x34161693
  419087:	mov    edx,0xc4f61944
  41908c:	jle    0x419102
  41908e:	jmp    0xf489:0x84612a0f
  419095:	out    0xf6,al
  419097:	xchg   bh,ah
  419099:	pop    eax
  41909a:	push   edx
  41909b:	inc    ecx
  41909c:	enter  0xec4f,0xd7
  4190a0:	pop    ds
  4190a1:	test   eax,0xcacd20e0
  4190a6:	hlt    
  4190a7:	adc    DWORD PTR [eax+0x18737f1a],ebp
  4190ad:	or     ch,BYTE PTR cs:[ecx-0x21]
  4190b1:	pop    esp
  4190b2:	int    0x79
  4190b4:	jl     0x419048
  4190b6:	xchg   ebp,eax
  4190b7:	outs   dx,BYTE PTR ds:[esi]
  4190b8:	jb     0x419064
  4190ba:	xchg   DWORD PTR [edi-0x3c],ecx
  4190bd:	and    ah,cl
  4190bf:	or     DWORD PTR ds:0x5779f04b,esi
  4190c5:	lods   al,BYTE PTR ds:[esi]
  4190c6:	popf   
  4190c7:	loop   0x419110
  4190c9:	push   edi
  4190ca:	mov    ds:0x2cafa3de,al
  4190cf:	cdq    
  4190d0:	sub    bh,al
  4190d2:	ds pop esp
  4190d4:	mov    edi,0xbfb2fe53
  4190d9:	or     al,0x24
  4190db:	push   ss
  4190dc:	pop    ebx
  4190dd:	into   
  4190de:	dec    ebx
  4190df:	mov    dl,0xd5
  4190e1:	mov    dh,0x9e
  4190e3:	sub    ah,bl
  4190e5:	retf   0xe720
  4190e8:	jg     0x41914c
  4190ea:	xchg   edi,eax
  4190eb:	scas   eax,DWORD PTR es:[edi]
  4190ec:	pushf  
  4190ed:	popa   
  4190ee:	ss inc eax
  4190f0:	jae    0x4190bc
  4190f2:	mov    ds:0x30a388a6,eax
  4190f7:	xchg   edi,eax
  4190f8:	add    BYTE PTR [esp+ebp*1-0x4a0c2d59],cl
  4190ff:	into   
  419100:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419101:	cli    
  419102:	inc    ebx
  419103:	jmp    0x4190ee
  419105:	lods   al,BYTE PTR ds:[esi]
  419106:	mov    gs,WORD PTR [ecx+0x2196ab03]
  41910c:	xor    BYTE PTR [edx+edx*2-0x6e8c3c24],ah
  419113:	and    eax,0x4fb43fc8
  419118:	inc    esp
  419119:	rol    cl,cl
  41911b:	and    eax,0x6e4dab06
  419120:	pusha  
  419121:	adc    al,0xc0
  419123:	inc    esi
  419124:	bound  edi,QWORD PTR [ebp+0x5c]
  419127:	mov    BYTE PTR [edi],bh
  419129:	shr    BYTE PTR [esi+0x723abc29],cl
  41912f:	shl    BYTE PTR [ecx],1
  419131:	sbb    BYTE PTR [edx+0x28],cl
  419134:	cdq    
  419135:	pop    esp
  419136:	mov    edi,DWORD PTR [ebx-0x4b]
  419139:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41913a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41913b:	adc    BYTE PTR [eax+0x7e],0x7b
  41913f:	sar    DWORD PTR [eax+0x2cebcf04],1
  419145:	push   0x95133c0
  41914a:	xchg   esi,eax
  41914b:	sbb    ebp,DWORD PTR ds:0x408b4bc0
  419151:	cmp    DWORD PTR [ebp*4-0x6b3abbaf],edx
  419158:	inc    edi
  419159:	fld    QWORD PTR [eax+ebp*2]
  41915c:	sbb    DWORD PTR [edx+0x77],ecx
  41915f:	mov    bl,0x19
  419161:	inc    esp
  419162:	push   es
  419163:	push   edi
  419164:	xor    ecx,DWORD PTR [esi+eiz*4-0x5f]
  419168:	data16 mov ch,0xe
  41916b:	jp     0x419114
  41916d:	pop    ecx
  41916e:	adc    eax,0xed968ac1
  419173:	cmp    al,0x56
  419175:	dec    esi
  419176:	push   eax
  419177:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419178:	add    DWORD PTR [eax+0x5996cb62],0x62b75cbe
  419182:	mov    esi,0x3cacb8de
  419187:	cmp    BYTE PTR [esi],cl
  419189:	xor    esp,DWORD PTR [edx+eiz*4-0x14bda221]
  419190:	inc    ebp
  419191:	jns    0x419137
  419193:	mov    ds:0x8ec4c9fd,al
  419198:	bound  edi,QWORD PTR [esi-0x632a34b4]
  41919e:	push   eax
  41919f:	mov    edi,0xc4ee4561
  4191a4:	inc    esi
  4191a5:	test   edi,esp
  4191a7:	(bad)
  4191ac:	fsub   DWORD PTR [edi+0x13]
  4191af:	mov    eax,0x7a04dab4
  4191b4:	stos   DWORD PTR es:[edi],eax
  4191b5:	cli    
  4191b6:	pop    eax
  4191b7:	lea    edx,[esp+edx*4-0x59a414d0]
  4191be:	retf   0xb5ce
  4191c1:	(bad)  
  4191c2:	call   0xa9f4787f
  4191c7:	int3   
  4191c8:	in     al,0xa3
  4191ca:	adc    ebp,DWORD PTR [ecx+edx*1-0x30]
  4191ce:	mov    edi,0xdd18c41f
  4191d3:	inc    esp
  4191d4:	mov    ebp,0x71c2fcd1
  4191d9:	mov    WORD PTR [eax-0x5983b800],?
  4191df:	wrmsr  
  4191e1:	in     eax,0xfc
  4191e3:	cdq    
  4191e4:	add    eax,0x14900f29
  4191e9:	test   DWORD PTR [esi],esp
  4191eb:	nop
  4191ec:	es push cs
  4191ee:	push   es
  4191ef:	jo     0x4191df
  4191f1:	ins    DWORD PTR es:[edi],dx
  4191f2:	addr16 push esi
  4191f4:	pusha  
  4191f5:	dec    ebx
  4191f6:	mov    dh,0xbe
  4191f8:	das    
  4191f9:	cmp    DWORD PTR [edx-0x64],ebx
  4191fc:	add    BYTE PTR [ebx-0x71],dh
  4191ff:	clc    
  419200:	scas   al,BYTE PTR es:[edi]
  419201:	sub    eax,0x454ed6a2
  419206:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419207:	mov    esi,0xd8135fe8
  41920c:	adc    ecx,DWORD PTR [eax+0x12e08013]
  419212:	hlt    
  419213:	and    bl,BYTE PTR [edx+0x7b83243f]
  419219:	mov    ds:0xfae2644d,eax
  41921e:	and    BYTE PTR [ebp+0x4f4b510a],ch
  419224:	pop    ebp
  419225:	or     DWORD PTR [esi],0xffffffc5
  419228:	xlat   BYTE PTR ds:[bx]
  41922a:	cwde   
  41922b:	sbb    bl,BYTE PTR [edi-0x12]
  41922e:	aas    
  41922f:	nop
  419230:	add    edx,DWORD PTR [esi-0x3]
  419233:	imul   ebp,DWORD PTR [eax-0x30d8a212],0xffffff87
  41923a:	jno    0x41923e
  41923c:	xchg   esp,eax
  41923d:	leave  
  41923e:	add    DWORD PTR [eax-0x57bd6e61],ebx
  419244:	or     dh,BYTE PTR [esi+0x46bda4d6]
  41924a:	das    
  41924b:	sub    BYTE PTR [ecx],cl
  41924d:	inc    ebx
  41924e:	and    BYTE PTR [eax],ch
  419250:	imul   BYTE PTR [edx-0x3630af92]
  419256:	pushf  
  419257:	jbe    0x419259
  419259:	push   eax
  41925a:	push   ebp
  41925b:	repnz loope 0x419297
  41925e:	dec    esi
  41925f:	add    BYTE PTR [ecx+0x23d5a71c],al
  419265:	pusha  
  419266:	push   ds
  419267:	int    0x98
  419269:	sub    al,0xa5
  41926b:	sahf   
  41926c:	fs cs pop ebx
  41926f:	sub    al,0xc3
  419271:	sub    eax,0x1a757365
  419276:	sar    ah,0xda
  419279:	or     al,BYTE PTR [esi-0x6d]
  41927c:	push   edx
  41927d:	inc    edx
  41927e:	mov    bl,bh
  419280:	adc    ch,BYTE PTR [edx-0x2cd421ac]
  419286:	pop    ebp
  419287:	mov    DWORD PTR [edx-0x79],esi
  41928a:	or     BYTE PTR [edx+0x6ce75c4b],dh
  419290:	popf   
  419291:	inc    esp
  419292:	dec    ebx
  419293:	fmul   st,st(1)
  419295:	je     0x4192b9
  419297:	inc    ebp
  419298:	and    DWORD PTR [edi+0x11ca7f3f],ecx
  41929e:	imul   ebx,eax,0x9df822d7
  4192a4:	lds    esi,FWORD PTR [edx+eax*4+0x62da0969]
  4192ab:	jne    0x4192c9
  4192ad:	rcr    DWORD PTR [edx],cl
  4192af:	(bad)  
  4192b0:	lahf   
  4192b1:	dec    esp
  4192b2:	pop    ss
  4192b3:	jnp    0x41931a
  4192b5:	ss sub ax,0xe273
  4192ba:	dec    esp
  4192bb:	jg     0x419303
  4192bd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4192be:	push   ss
  4192bf:	out    0xf6,eax
  4192c1:	push   ss
  4192c2:	dec    ecx
  4192c3:	outs   dx,BYTE PTR ds:[esi]
  4192c4:	mov    ecx,DWORD PTR [eax]
  4192c6:	sub    edi,0xc00e4867
  4192cc:	shl    BYTE PTR [ecx+0x1a],0x9b
  4192d0:	lock ds cmp al,0x2
  4192d4:	mov    bh,0x25
  4192d6:	retf   0x48d3
  4192d9:	and    DWORD PTR [ebx],eax
  4192db:	cmp    al,0xa8
  4192dd:	inc    esi
  4192de:	out    0xe3,al
  4192e0:	ss retf 0x90b4
  4192e4:	jle    0x4192cd
  4192e6:	mov    edi,0xe0f98a0d
  4192eb:	scas   eax,DWORD PTR es:[edi]
  4192ec:	pop    edi
  4192ed:	or     cl,BYTE PTR [edx]
  4192ef:	mov    ebp,0x16790e43
  4192f4:	jg     0x419351
  4192f6:	out    dx,al
  4192f7:	cld    
  4192f8:	aam    0x72
  4192fa:	repnz (bad) 
  4192fc:	or     eax,0x4e853064
  419301:	push   esi
  419302:	pop    ebp
  419303:	jecxz  0x4192df
  419305:	mov    ds:0x77408eb7,al
  41930a:	cld    
  41930b:	jle    0x4192c3
  41930d:	xchg   BYTE PTR [eax+esi*8],ch
  419310:	ret    0x8081
  419313:	push   eax
  419314:	add    DWORD PTR [edx],esi
  419316:	(bad)  
  419317:	std    
  419318:	dec    esp
  419319:	aas    
  41931a:	sbb    al,0x69
  41931c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41931d:	in     al,dx
  41931e:	ret    0xdce4
  419321:	int    0xaa
  419323:	mov    bh,0x1a
  419325:	adc    esp,DWORD PTR [edx-0x3bdb6bf2]
  41932b:	cmp    BYTE PTR [edi+0x2c1e54b2],dh
  419331:	jl     0x419316
  419333:	ss push eax
  419335:	loopne 0x419392
  419337:	or     al,ch
  419339:	ret    
  41933a:	in     al,0x2c
  41933c:	inc    esp
  41933d:	daa    
  41933e:	test   ebx,0xdcaaa01
  419344:	pop    es
  419345:	jbe    0x4192c7
  419347:	pop    ebp
  419348:	es (bad) 
  41934b:	ret    0xc50
  41934e:	nop
  41934f:	push   ebp
  419350:	add    DWORD PTR [esi+0x71],edi
  419353:	push   ds
  419354:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419355:	cli    
  419356:	mov    DWORD PTR [esi],ebx
  419358:	mov    al,0xe1
  41935a:	outs   dx,BYTE PTR ds:[esi]
  41935b:	pop    ecx
  41935c:	push   ebp
  41935d:	pop    ds
  41935e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41935f:	mov    ebx,0xce25e085
  419364:	jp     0x419389
  419366:	cwde   
  419367:	and    eax,0x64e2cd52
  41936c:	mov    dh,0x5a
  41936e:	iret   
  41936f:	sahf   
  419370:	das    
  419371:	inc    edx
  419372:	pop    ebp
  419373:	and    al,0x68
  419375:	mov    cs,WORD PTR [ecx+0x777ee71e]
  41937b:	push   ecx
  41937c:	push   ecx
  41937d:	and    al,0x5e
  41937f:	jmp    0xefbb:0x95de0067
  419386:	sbb    ebp,DWORD PTR [ebp+0x5c]
  419389:	outs   dx,BYTE PTR ds:[esi]
  41938a:	jmp    0x419325
  41938c:	pushf  
  41938d:	xchg   BYTE PTR [ebp+0x1e],bh
  419390:	fidivr DWORD PTR [ebx+0x6d38d364]
  419396:	mov    cl,bh
  419398:	aaa    
  419399:	dec    esp
  41939a:	retf   0x1b79
  41939d:	cwde   
  41939e:	ret    
  41939f:	rol    dl,0xce
  4193a2:	fadd   st(2),st
  4193a4:	in     al,dx
  4193a5:	repz aaa 
  4193a7:	mov    edx,0xf0c0384f
  4193ac:	or     BYTE PTR [edx],al
  4193ae:	adc    al,0xa
  4193b0:	xor    ebx,ecx
  4193b2:	adc    al,0xe6
  4193b4:	sbb    BYTE PTR [esi+ecx*2-0x6e],cl
  4193b8:	jb     0x419424
  4193ba:	cwde   
  4193bb:	jmp    0x65fc:0xc7452b2b
  4193c2:	and    eax,0x95eca398
  4193c7:	pop    edi
  4193c8:	add    ch,BYTE PTR [ebp+0x2d0f873c]
  4193ce:	sar    BYTE PTR [ebx+0x481ce713],cl
  4193d4:	dec    ecx
  4193d5:	adc    eax,0x4d315d17
  4193da:	mov    dl,0xc1
  4193dc:	addr16 (bad) 
  4193df:	xor    edi,ebx
  4193e1:	cmp    DWORD PTR [edx],eax
  4193e3:	test   eax,0x39cb9cbd
  4193e8:	push   edx
  4193e9:	aaa    
  4193ea:	jmp    0xc6b4:0xb795a406
  4193f1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4193f2:	outs   dx,DWORD PTR ds:[esi]
  4193f3:	cmp    DWORD PTR [esi-0x6ef12957],ebp
  4193f9:	xor    eax,0x20cf7322
  4193fe:	cdq    
  4193ff:	aas    
  419400:	jp     0x41940e
  419402:	jge    0x4193ee
  419404:	lahf   
  419405:	dec    edi
  419406:	aad    0x9c
  419408:	int    0x58
  41940a:	and    ecx,ebx
  41940c:	xchg   edi,eax
  41940d:	int3   
  41940e:	mov    DWORD PTR [ebx-0x2739d2af],edx
  419414:	add    eax,DWORD PTR [edi+0x4]
  419417:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419418:	mov    eax,ds:0x8a85e77a
  41941d:	icebp  
  41941e:	inc    ebx
  41941f:	and    dl,BYTE PTR [ecx+0x400e1eb7]
  419425:	inc    ebx
  419426:	aad    0x91
  419428:	mov    ecx,0x16b7b78e
  41942d:	pushf  
  41942e:	cmp    BYTE PTR [esi+0x21],bh
  419431:	addr16 iret 
  419433:	sbb    DWORD PTR [esi+0x5dd6af6f],edi
  419439:	ss retf 0xadac
  41943d:	mov    ebp,0x7cb033a8
  419442:	xchg   ebx,eax
  419443:	sbb    dl,bl
  419445:	jg     0x4193cc
  419447:	pop    ds
  419448:	mov    ah,0x61
  41944a:	lods   al,BYTE PTR ds:[esi]
  41944b:	sar    BYTE PTR [edi+ecx*4],cl
  41944e:	scas   al,BYTE PTR es:[edi]
  41944f:	push   0xd0d8ebb3
  419454:	inc    edi
  419455:	out    0x29,al
  419457:	push   ebx
  419458:	dec    edx
  419459:	xchg   esi,eax
  41945a:	sti    
  41945b:	xlat   BYTE PTR ds:[ebx]
  41945c:	xlat   BYTE PTR ds:[ebx]
  41945d:	push   esi
  41945e:	xor    eax,0x3d31551c
  419463:	enter  0x6a1e,0x3a
  419467:	push   0x1474f184
  41946c:	add    DWORD PTR [eax],0x63
  41946f:	mov    esi,gs
  419471:	inc    ecx
  419472:	sbb    DWORD PTR [eax+edx*4-0x68],edx
  419476:	add    BYTE PTR [ecx],cl
  419478:	sahf   
  419479:	sbb    dl,ah
  41947b:	icebp  
  41947c:	mov    dh,BYTE PTR [ebx]
  41947e:	mov    cl,0x26
  419480:	sbb    eax,0x9792c74c
  419485:	add    al,0xd5
  419487:	jecxz  0x4194be
  419489:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41948a:	jecxz  0x4194df
  41948c:	push   esi
  41948d:	sub    BYTE PTR [edi+0x71ce7c7f],al
  419493:	and    eax,0xbb35f51b
  419498:	push   0x8e9cbf69
  41949d:	xor    bh,bh
  41949f:	stos   BYTE PTR es:[edi],al
  4194a0:	inc    esi
  4194a1:	or     eax,0xca7f6693
  4194a6:	mov    edx,0xa9ae8750
  4194ab:	mov    ecx,0xe5016a38
  4194b0:	push   DWORD PTR [edx]
  4194b2:	call   0x9830:0x49dc47c1
  4194b9:	out    dx,eax
  4194ba:	pop    edi
  4194bb:	or     bl,BYTE PTR gs:[edx-0x75]
  4194bf:	std    
  4194c0:	xor    DWORD PTR fs:[ecx],ecx
  4194c3:	mov    ebp,0xd5f8694d
  4194c8:	popa   
  4194c9:	out    0x7f,al
  4194cb:	jnp    0x4194aa
  4194cd:	or     al,BYTE PTR [edx-0x5]
  4194d0:	test   DWORD PTR [edi+0x5c15c10f],edx
  4194d6:	mov    DWORD PTR [ecx],edx
  4194d8:	mov    ebx,0x49947ead
  4194dd:	fwait
  4194de:	add    eax,0x443e4273
  4194e3:	mov    eax,ebp
  4194e5:	mov    dh,0xd9
  4194e7:	dec    esp
  4194e8:	xchg   edi,eax
  4194e9:	dec    esi
  4194ea:	push   ds
  4194eb:	jno    0x4194ca
  4194ed:	fldenv [edi+0xb]
  4194f0:	test   esi,ebx
  4194f2:	std    
  4194f3:	iret   
  4194f4:	ins    DWORD PTR es:[edi],dx
  4194f5:	in     eax,dx
  4194f6:	out    dx,al
  4194f7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4194f8:	jmp    0xf78a:0x7f2f652a
  4194ff:	dec    ecx
  419500:	jno    0x4194bc
  419502:	(bad)  
  419503:	adc    eax,0x1cd47129
  419508:	lods   al,BYTE PTR ds:[esi]
  419509:	add    ch,0x4c
  41950c:	mov    ch,ah
  41950e:	jno    0x4194cf
  419510:	xor    BYTE PTR [ecx],dl
  419512:	shl    BYTE PTR [ebx+0x59aefd1d],1
  419518:	test   eax,0x2d57b49f
  41951d:	add    al,0x3f
  41951f:	in     al,0xa8
  419521:	jmp    0xc451:0xb00bb2f2
  419528:	or     al,0x9b
  41952a:	jl     0x41950a
  41952c:	div    DWORD PTR [ecx-0x76ca8fc6]
  419532:	mov    bl,0xbd
  419534:	push   esi
  419535:	and    DWORD PTR [esi-0x20],ebx
  419538:	stos   BYTE PTR es:[edi],al
  419539:	addr16 inc ecx
  41953b:	cli    
  41953c:	dec    esi
  41953d:	dec    eax
  41953e:	mov    bl,0x32
  419540:	xchg   esp,eax
  419541:	pop    es
  419542:	cmp    bl,BYTE PTR [esi-0x4b]
  419545:	jb     0x4194d8
  419547:	cmp    bl,cl
  419549:	call   0xba92a612
  41954e:	mov    ah,bh
  419550:	push   ss
  419551:	sbb    eax,0x818ca49a
  419556:	jmp    0x82ba:0x9fe41aa
  41955d:	pop    eax
  41955e:	mov    cl,0xb4
  419560:	call   0x4c24242a
  419565:	loop   0x419517
  419567:	adc    dh,bl
  419569:	xor    al,0x5e
  41956b:	cmp    DWORD PTR [edx+0x54],ebp
  41956e:	ret    0x70dd
  419571:	outs   dx,DWORD PTR ds:[esi]
  419572:	mov    edx,0x494f4b22
  419577:	outs   dx,BYTE PTR ds:[esi]
  419578:	adc    ch,BYTE PTR [eax+0x27b6c44f]
  41957e:	xor    eax,DWORD PTR [esp+edi*8]
  419581:	in     eax,0xf8
  419583:	retf   
  419584:	push   0xd9e14af6
  419589:	ss scas al,BYTE PTR es:[edi]
  41958b:	add    ebx,DWORD PTR ds:0x25b7253e
  419591:	mov    ebx,0xa24024e8
  419596:	dec    ebp
  419597:	mov    esi,0x1db5c791
  41959c:	daa    
  41959d:	frstor [ebp+0x7f9cec5c]
  4195a3:	inc    edx
  4195a4:	dec    ebp
  4195a5:	dec    esi
  4195a6:	jns    0x4195ea
  4195a8:	into   
  4195a9:	test   BYTE PTR [esi],bh
  4195ab:	pop    esp
  4195ac:	popa   
  4195ad:	sbb    bl,bl
  4195af:	cmp    BYTE PTR [esp+eiz*8-0x749d4374],ch
  4195b6:	(bad)  [edx-0x3a53ee59]
  4195bc:	rcr    BYTE PTR [edi],0x5d
  4195bf:	adc    al,0xfa
  4195c1:	adc    eax,0x915d89a8
  4195c6:	fisub  DWORD PTR [esi+0x40]
  4195c9:	mov    dl,0x32
  4195cb:	push   cs
  4195cc:	inc    edi
  4195cd:	mov    dh,0x2
  4195cf:	sahf   
  4195d0:	push   edx
  4195d1:	mov    esp,0x53d62962
  4195d6:	and    BYTE PTR [ecx],ch
  4195d8:	arpl   ax,dx
  4195da:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4195db:	(bad)  
  4195dc:	stc    
  4195dd:	aam    0x8a
  4195df:	pop    edi
  4195e0:	mov    bl,0x72
  4195e2:	push   esp
  4195e3:	addr16 cdq 
  4195e5:	fld    QWORD PTR [edi+eiz*4]
  4195e8:	xchg   esp,eax
  4195e9:	stos   DWORD PTR es:[edi],eax
  4195ea:	pop    edx
  4195eb:	mov    dl,0x2f
  4195ed:	inc    eax
  4195ee:	pop    esi
  4195ef:	scas   eax,DWORD PTR es:[edi]
  4195f0:	and    dl,dh
  4195f2:	stos   BYTE PTR es:[edi],al
  4195f3:	inc    esp
  4195f4:	(bad)  
  4195f5:	fbld   TBYTE PTR [ebx-0x6795ea3c]
  4195fb:	scas   eax,DWORD PTR es:[edi]
  4195fc:	rcr    DWORD PTR [edx],cl
  4195fe:	push   ebp
  4195ff:	je     0x4195d0
  419601:	pusha  
  419602:	xchg   ecx,eax
  419603:	aaa    
  419604:	mov    esp,0x19f3eae6
  419609:	mov    al,0xef
  41960b:	inc    eax
  41960c:	pop    edi
  41960d:	xor    ch,BYTE PTR cs:[ecx-0x76]
  419611:	ja     0x419663
  419613:	lea    eax,[esi+0x4d5e8a75]
  419619:	push   ds
  41961a:	ds sbb al,0x6
  41961d:	xchg   ecx,eax
  41961e:	or     edi,0xffffffdc
  419621:	jns    0x419662
  419623:	or     al,0x66
  419625:	int3   
  419626:	enter  0xd081,0x4a
  41962a:	cmp    BYTE PTR [esi+0x2a2636c7],bl
  419630:	aas    
  419631:	popa   
  419632:	push   ss
  419633:	mov    ebx,0xc6658f8b
  419638:	ds mov ?,edi
  41963b:	pop    ds
  41963c:	push   esp
  41963d:	jge    0x4195ce
  41963f:	shl    BYTE PTR [eax+0x40],0x64
  419643:	jecxz  0x419619
  419645:	pop    esi
  419646:	jg     0x41964b
  419648:	fisubr WORD PTR [edx+esi*2-0x7ac8a70b]
  41964f:	and    al,0x0
  419651:	push   0x78c68c31
  419656:	pop    ebx
  419657:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419658:	bound  edi,QWORD PTR [eax-0x70]
  41965b:	add    ch,dl
  41965d:	push   cs
  41965e:	enter  0xb062,0x5c
  419662:	mov    eax,ds:0x4c5254ad
  419667:	aaa    
  419668:	sahf   
  419669:	repnz out 0xfe,al
  41966c:	enter  0x49bc,0x24
  419670:	xor    ah,BYTE PTR [ebp-0x2c]
  419673:	cmp    DWORD PTR [edx+ecx*8-0x66],ebx
  419677:	push   esi
  419678:	cmp    dh,dl
  41967a:	sbb    edx,DWORD PTR [ecx+ebp*1]
  41967d:	hlt    
  41967e:	int3   
  41967f:	outs   dx,DWORD PTR ds:[esi]
  419680:	into   
  419681:	jbe    0x419635
  419683:	movntq QWORD PTR [ebx+ebp*4+0x4b5f5d51],mm6
  41968b:	arpl   WORD PTR [esi+edi*4-0x3766e81f],sp
  419692:	gs loope 0x419687
  419695:	mov    eax,0x37853775
  41969a:	ret    0x6545
  41969d:	je     0x41964f
  41969f:	push   ebx
  4196a0:	nop
  4196a1:	stos   DWORD PTR es:[edi],eax
  4196a2:	mov    ch,0xa6
  4196a4:	push   cs
  4196a5:	inc    ecx
  4196a6:	push   esi
  4196a7:	inc    edi
  4196a8:	scas   al,BYTE PTR es:[edi]
  4196a9:	sar    dh,cl
  4196ab:	sbb    dh,dl
  4196ad:	inc    edx
  4196ae:	xor    eax,0x74f5b859
  4196b3:	push   edi
  4196b4:	push   cs
  4196b5:	cmp    eax,0x961c0ab3
  4196ba:	xchg   edx,eax
  4196bb:	popf   
  4196bc:	mov    bl,0x1
  4196be:	ror    BYTE PTR [eax-0x2ef1c330],1
  4196c4:	jmp    0xf110:0x5e3fa217
  4196cb:	jo     0x4196ab
  4196cd:	fwait
  4196ce:	push   edx
  4196cf:	into   
  4196d0:	cdq    
  4196d1:	mov    eax,DWORD PTR [esi-0x73]
  4196d4:	mov    al,0x5d
  4196d6:	in     al,dx
  4196d7:	jno    0x41965a
  4196d9:	in     eax,0xc6
  4196db:	das    
  4196dc:	outs   dx,DWORD PTR ds:[esi]
  4196dd:	mov    ah,BYTE PTR [ebp+0x11d3dc10]
  4196e3:	ror    BYTE PTR [ebp-0x7801d4b9],cl
  4196e9:	imul   bh
  4196eb:	or     al,cl
  4196ed:	(bad)  [ebx-0x5257592f]
  4196f3:	lods   eax,DWORD PTR ds:[esi]
  4196f4:	jns    0x4196e7
  4196f6:	leave  
  4196f7:	fwait
  4196f8:	retf   0x85ce
  4196fb:	retf   0x60b0
  4196fe:	popf   
  4196ff:	push   esp
  419700:	sbb    al,0x1
  419702:	or     DWORD PTR [ecx+0x2c],esi
  419705:	popa   
  419706:	shl    BYTE PTR [esi+0x5b],0x4a
  41970a:	jne    0x419702
  41970c:	fst    st(6)
  41970e:	mov    esi,0x633ee921
  419713:	repz call 0x94031b9d
  419719:	pushf  
  41971a:	mov    esi,0xd68cf582
  41971f:	and    eax,0x96585bd4
  419724:	mov    al,0xbc
  419726:	mov    BYTE PTR [ecx-0xf],cl
  419729:	(bad)  
  41972a:	mov    dl,0xfa
  41972c:	test   DWORD PTR [ebp+0x5db2a3e9],0x5e9ee985
  419736:	add    BYTE PTR [esi+ebp*8-0x4efea75a],cl
  41973d:	lahf   
  41973e:	mov    dh,0x55
  419740:	pushf  
  419741:	dec    ebx
  419742:	bound  ecx,QWORD PTR [eax]
  419744:	adc    edx,DWORD PTR [edi]
  419746:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419747:	add    eax,esi
  419749:	std    
  41974a:	dec    edi
  41974b:	adc    dh,BYTE PTR [eax]
  41974d:	pop    ss
  41974e:	dec    esi
  41974f:	xchg   ebx,eax
  419750:	int    0x39
  419752:	cmp    ah,BYTE PTR [ebx+0x45]
  419755:	inc    edi
  419756:	adc    BYTE PTR [eax-0x1730ae32],cl
  41975c:	sar    BYTE PTR [esi-0x2e],cl
  41975f:	xlat   BYTE PTR ds:[ebx]
  419760:	not    BYTE PTR [ecx-0x1d]
  419763:	mov    ecx,0x127fafca
  419768:	or     DWORD PTR [edx+ecx*8+0x53],eax
  41976c:	sbb    al,0x53
  41976e:	jns    0x4197c6
  419770:	rcl    ecx,cl
  419772:	and    cl,ch
  419774:	jmp    0x5fd66a72
  419779:	loop   0x419712
  41977b:	into   
  41977c:	fstp   st(6)
  41977f:	xchg   ebx,eax
  419780:	sti    
  419781:	lock jg 0x419755
  419784:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419785:	jg     0x419756
  419787:	lds    esi,FWORD PTR [ebp-0x2c]
  41978a:	mov    ds:0x634246cb,al
  41978f:	aam    0x33
  419791:	pop    esp
  419792:	pop    ebx
  419793:	outs   dx,DWORD PTR ds:[esi]
  419794:	xor    eax,DWORD PTR [edi-0x41]
  419797:	pushf  
  419798:	lock mov DWORD PTR [edi-0x40],ecx
  41979c:	ss iret 
  41979e:	push   esp
  41979f:	les    esi,FWORD PTR [ecx-0x19d1bfcd]
  4197a5:	adc    eax,0xdcc4f8fa
  4197aa:	cmp    DWORD PTR [eax-0x39],eax
  4197ad:	movs   BYTE PTR es:[edi],BYTE PTR es:[esi]
  4197af:	mov    ds:0xa33a1711,eax
  4197b4:	(bad)  
  4197b6:	fdivr  st,st(6)
  4197b8:	out    dx,eax
  4197b9:	test   edi,edi
  4197bb:	jne    0x4197c6
  4197bd:	dec    eax
  4197be:	div    DWORD PTR ds:0xfe358f26
  4197c4:	xor    BYTE PTR [esi+eiz*8],0x7c
  4197c8:	or     edx,ecx
  4197ca:	or     eax,DWORD PTR [ebp+eax*4-0x6b]
  4197ce:	push   ebx
  4197cf:	pop    edi
  4197d0:	mov    ecx,0x447b6483
  4197d5:	lods   eax,DWORD PTR ds:[esi]
  4197d6:	mov    dl,BYTE PTR [edi+0x709d8408]
  4197dc:	push   es
  4197dd:	and    bh,BYTE PTR [ebx]
  4197df:	lods   al,BYTE PTR ds:[esi]
  4197e0:	enter  0xdab9,0x63
  4197e4:	fnsave [ebp+0x8]
  4197e7:	pop    ecx
  4197e8:	or     dl,BYTE PTR [edx-0x3c]
  4197eb:	test   dl,dl
  4197ed:	js     0x419795
  4197ef:	cli    
  4197f0:	cs in  al,0x2e
  4197f3:	aad    0x4e
  4197f5:	leave  
  4197f6:	shr    BYTE PTR [edx+0x7a],0xd6
  4197fa:	aam    0x91
  4197fc:	sbb    al,0x76
  4197fe:	inc    ebp
  4197ff:	inc    esi
  419800:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419801:	bound  esp,QWORD PTR [edx-0x524f896d]
  419807:	push   0x36
  419809:	and    al,0xa6
  41980b:	aas    
  41980c:	push   es
  41980d:	cmp    al,0x80
  41980f:	add    edx,DWORD PTR [eax]
  419811:	pop    edx
  419812:	add    eax,DWORD PTR [ebp-0x50d27190]
  419818:	sbb    al,0xc
  41981a:	xchg   DWORD PTR [ebp-0x25487027],ecx
  419820:	fistp  QWORD PTR [esi+0x40305c4d]
  419826:	jo     0x419851
  419828:	sete   BYTE PTR [ebp+0x591fa6c8]
  41982f:	xchg   ebx,eax
  419830:	mov    eax,ds:0x6172dd22
  419835:	call   0x5ed7577d
  41983a:	ret    0x6c9d
  41983d:	scas   al,BYTE PTR es:[edi]
  41983e:	cdq    
  41983f:	int3   
  419840:	pop    ebp
  419841:	out    0x2e,eax
  419843:	stos   DWORD PTR es:[edi],eax
  419844:	js     0x4197d5
  419846:	fnsave [edi+ecx*8-0x747a4f87]
  41984d:	test   BYTE PTR [ecx-0x18f91424],0xab
  419854:	jp     0x4197e3
  419856:	imul   ebx,ebp,0xffffff98
  419859:	pop    eax
  41985a:	and    eax,0x9a24d5c3
  41985f:	icebp  
  419860:	adc    eax,0x613be7b4
  419865:	pop    eax
  419866:	into   
  419867:	xchg   esp,eax
  419868:	cmp    eax,0x2c7661e3
  41986d:	jb     0x41985d
  41986f:	scas   al,BYTE PTR es:[edi]
  419870:	dec    edi
  419871:	jmp    0xfd61:0xce77ed56
  419878:	pop    ds
  419879:	aas    
  41987a:	adc    eax,0x18f17b00
  41987f:	add    DWORD PTR [edx-0x5ed1b490],edx
  419885:	nop
  419886:	inc    esi
  419887:	xchg   esi,eax
  419888:	arpl   si,di
  41988a:	hlt    
  41988b:	push   esp
  41988c:	inc    ecx
  41988d:	xor    eax,0x3732aa64
  419892:	sar    ebx,1
  419894:	jns    0x4198ca
  419896:	pop    esi
  419897:	rcl    BYTE PTR [ecx+0x1b0f33ef],cl
  41989d:	lock hlt 
  41989f:	shl    cl,cl
  4198a1:	sub    eax,DWORD PTR [ebx-0x7a5a9a99]
  4198a7:	jl     0x41990c
  4198a9:	(bad)  
  4198ac:	sub    DWORD PTR [ecx+0x9d013df],esp
  4198b2:	push   ds
  4198b3:	and    ebx,DWORD PTR [ebx-0x62]
  4198b6:	pop    ds
  4198b7:	sahf   
  4198b8:	rcl    bl,cl
  4198ba:	dec    ecx
  4198bb:	aaa    
  4198bc:	mov    ebp,0x245bb942
  4198c1:	fdivr  QWORD PTR [edx-0x42]
  4198c4:	(bad)  
  4198c5:	xor    BYTE PTR [eax],ch
  4198c7:	add    eax,0x1ad8e124
  4198cc:	pop    esi
  4198cd:	add    edx,DWORD PTR [ebx+0x3e]
  4198d0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4198d1:	xchg   ebp,eax
  4198d2:	add    ebp,edi
  4198d4:	xchg   ecx,eax
  4198d5:	repnz xchg esp,eax
  4198d7:	out    dx,al
  4198d8:	leave  
  4198d9:	inc    esi
  4198da:	dec    esi
  4198db:	jle    0x419878
  4198dd:	loope  0x419878
  4198df:	mov    ch,0xcb
  4198e1:	push   ds
  4198e2:	jge    0x419962
  4198e4:	arpl   ax,sp
  4198e6:	sbb    DWORD PTR [ebp+0xfa4e673],edx
  4198ec:	mov    ah,0x68
  4198ee:	xor    DWORD PTR [edx+0x1c],0xffffff99
  4198f2:	sub    cl,ch
  4198f4:	bound  edx,QWORD PTR [ecx-0x5d]
  4198f7:	rcl    DWORD PTR ds:0x104322be,0xeb
  4198fe:	loopne 0x419926
  419900:	outs   dx,DWORD PTR ds:[esi]
  419901:	xor    edx,ebx
  419903:	pop    es
  419904:	sub    bl,BYTE PTR [ebx+eax*4-0x281c3062]
  41990b:	fs test al,0xb0
  41990e:	repnz test al,0xab
  419911:	cli    
  419912:	adc    ebx,edx
  419914:	mul    DWORD PTR [ecx+0x3e]
  419917:	pop    ebx
  419918:	jge    0x4198b2
  41991a:	dec    ebp
  41991b:	ss push esp
  41991d:	(bad)  
  41991e:	sbb    BYTE PTR [eax],0xa9
  419921:	ds add al,0xd8
  419924:	adc    eax,0xae42793b
  419929:	pop    edx
  41992a:	mov    eax,ds:0x9398c1d6
  41992f:	stos   DWORD PTR es:[edi],eax
  419930:	imul   esp,eax,0x26
  419933:	xor    dl,BYTE PTR [esi-0xa7c5de9]
  419939:	iret   
  41993a:	sbb    DWORD PTR [ecx-0x95e8499],edi
  419940:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419941:	pop    ss
  419942:	shl    ebp,1
  419944:	test   eax,0xf11a051a
  419949:	mov    esp,0xdcea2577
  41994e:	sub    BYTE PTR fs:0xf797e372,dh
  419955:	or     esp,DWORD PTR [eax-0x2d]
  419958:	or     ah,BYTE PTR [edx+eax*2]
  41995b:	iret   
  41995c:	dec    edi
  41995d:	in     eax,0x96
  41995f:	xchg   esi,eax
  419960:	cmp    BYTE PTR [edx],dl
  419962:	shl    BYTE PTR [edi+esi*2],0x2e
  419966:	cs xchg esi,eax
  419968:	mov    bl,0x57
  41996a:	cld    
  41996b:	cmp    eax,0xddaf7a0e
  419970:	ins    DWORD PTR es:[edi],dx
  419971:	pop    eax
  419972:	clc    
  419973:	xor    edx,esp
  419975:	loop   0x4199b6
  419977:	inc    ebx
  419978:	pop    ebx
  419979:	test   BYTE PTR [ebp+0x25],dl
  41997c:	mov    dh,0x74
  41997e:	sub    DWORD PTR [edi],ebx
  419980:	rcr    BYTE PTR [esi],cl
  419982:	in     eax,dx
  419983:	push   ss
  419984:	sbb    DWORD PTR [edx-0x60],edi
  419987:	adc    bh,dl
  419989:	xchg   dl,dl
  41998b:	push   edx
  41998c:	js     0x4199b5
  41998e:	mov    ebp,DWORD PTR [eax]
  419990:	pop    ebx
  419991:	int    0x52
  419993:	loop   0x419a10
  419995:	sbb    eax,0xfc442df9
  41999a:	mov    eax,0xd69d923a
  41999f:	popa   
  4199a0:	adc    DWORD PTR [esi],0x1b
  4199a3:	psubsb mm5,QWORD PTR [ebp-0x6a]
  4199a7:	xor    ebx,ebp
  4199a9:	test   BYTE PTR [edx-0x2dbda0b7],al
  4199af:	and    DWORD PTR [ebp+0x59],esi
  4199b2:	(bad)  
  4199b3:	pcmpeqb mm0,mm6
  4199b6:	and    esp,DWORD PTR [edi-0x31]
  4199b9:	adc    ecx,DWORD PTR [ebp+edi*8+0x462b1115]
  4199c0:	cmp    BYTE PTR [edi+0x75],ah
  4199c3:	jne    0x419a00
  4199c5:	in     eax,0xc1
  4199c7:	repz mov ch,0x92
  4199ca:	pusha  
  4199cb:	outs   dx,BYTE PTR ds:[esi]
  4199cc:	cs addr16 dec edx
  4199cf:	jp     0x41996f
  4199d1:	lods   eax,DWORD PTR ds:[esi]
  4199d2:	or     edi,DWORD PTR [edx+0x40]
  4199d5:	sub    ch,BYTE PTR [edx]
  4199d7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4199d8:	cwde   
  4199d9:	les    ebx,FWORD PTR [ebx]
  4199db:	enter  0x9fa9,0x9a
  4199df:	shl    ecx,cl
  4199e1:	out    dx,eax
  4199e2:	sub    edi,esp
  4199e4:	add    al,0xc3
  4199e6:	shl    ah,1
  4199e8:	pushf  
  4199e9:	je     0x4199d6
  4199eb:	inc    eax
  4199ec:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4199ed:	pop    eax
  4199ee:	les    ecx,FWORD PTR ds:0x7b096cf6
  4199f4:	or     ebp,edi
  4199f6:	jmp    0xeb797cf0
  4199fb:	add    DWORD PTR [eax+0x612e1871],esp
  419a01:	cmp    BYTE PTR [edi-0x74],dl
  419a04:	leave  
  419a05:	mov    esp,0x357f215a
  419a0a:	jno    0x4199ac
  419a0c:	xchg   edi,eax
  419a0d:	pop    edi
  419a0e:	jle    0x419a49
  419a10:	push   edi
  419a11:	xchg   edx,eax
  419a12:	clc    
  419a13:	jae    0x4199bb
  419a15:	mov    ds:0xda2276ff,al
  419a1a:	fst    DWORD PTR [eax+ebp*2-0x7635609a]
  419a21:	jns    0x419a20
  419a23:	jle    0x419a43
  419a25:	scas   eax,DWORD PTR es:[edi]
  419a26:	or     al,0xee
  419a28:	jb     0x4199d1
  419a2a:	xlat   BYTE PTR ds:[ebx]
  419a2b:	int3   
  419a2c:	add    BYTE PTR [ecx-0x302c6ce8],bh
  419a32:	add    eax,0x97e89959
  419a37:	fs in  eax,0x81
  419a3a:	std    
  419a3b:	ins    DWORD PTR es:[edi],dx
  419a3c:	aas    
  419a3d:	jmp    0x419a9e
  419a3f:	adc    ecx,DWORD PTR [ebx+0x77]
  419a42:	cmp    al,0x62
  419a44:	ins    BYTE PTR es:[edi],dx
  419a45:	jae    0x4199f1
  419a47:	xor    DWORD PTR [edx-0x9960ce3],esp
  419a4d:	js     0x419a33
  419a4f:	push   ebp
  419a50:	adc    al,0xc
  419a52:	test   DWORD PTR [esi+0x1],ebx
  419a55:	ja     0x4199e3
  419a57:	shl    DWORD PTR [esi-0x46e6ede9],cl
  419a5d:	stc    
  419a5e:	add    eax,0x1ddce775
  419a63:	adc    al,0x18
  419a65:	push   eax
  419a66:	mov    dl,0xc6
  419a68:	in     al,0x34
  419a6a:	les    eax,FWORD PTR [ebx-0x3f]
  419a6d:	push   0xe84be04a
  419a72:	je     0x419a8d
  419a74:	fisub  WORD PTR [edx-0x69]
  419a77:	enter  0xfc6d,0xc0
  419a7b:	neg    DWORD PTR [ecx]
  419a7d:	test   BYTE PTR [edi+0x3e1edaed],dl
  419a83:	jns    0x419a1a
  419a85:	cld    
  419a86:	and    al,0x7a
  419a88:	imul   edx,DWORD PTR [edx],0xf871d209
  419a8e:	enter  0x9366,0x9
  419a92:	xor    ebp,edi
  419a94:	dec    edi
  419a95:	xor    cl,ah
  419a97:	rcr    DWORD PTR gs:[ecx+0x7fb377d6],0x80
  419a9f:	sar    DWORD PTR [eax],1
  419aa1:	adc    ch,al
  419aa3:	pop    eax
  419aa4:	push   ecx
  419aa5:	shl    DWORD PTR [ebp+0x5a],cl
  419aa8:	ror    DWORD PTR [ecx],cl
  419aaa:	out    0xac,al
  419aac:	add    edi,DWORD PTR [ebx+0x1969755b]
  419ab2:	(bad)  
  419ab3:	jbe    0x419ac3
  419ab5:	jnp    0x419b2c
  419ab7:	aam    0x44
  419ab9:	scas   eax,DWORD PTR es:[edi]
  419aba:	clc    
  419abb:	add    bh,BYTE PTR [edi]
  419abd:	mov    ah,0x77
  419abf:	ja     0x419a62
  419ac1:	in     eax,dx
  419ac2:	jp     0x419b3a
  419ac4:	mov    esp,0x82d5469c
  419ac9:	xchg   BYTE PTR ds:0x2506c61c,ch
  419acf:	add    DWORD PTR [edi+eiz*1+0x27],edi
  419ad3:	sub    dh,BYTE PTR [ebx+0xe8100d4]
  419ad9:	icebp  
  419ada:	dec    esp
  419adb:	push   eax
  419adc:	push   esp
  419add:	test   al,0x7e
  419adf:	adc    edx,DWORD PTR [ecx]
  419ae1:	jg     0x419a74
  419ae3:	xchg   ecx,eax
  419ae4:	mov    ch,0x20
  419ae6:	dec    esi
  419ae7:	lahf   
  419ae8:	mov    gs,WORD PTR [edi-0x22]
  419aeb:	mov    dl,0x77
  419aed:	out    dx,eax
  419aee:	bswap  esi
  419af0:	test   eax,0x839ec2f3
  419af5:	or     al,0x58
  419af7:	mov    bl,0x17
  419af9:	inc    ebp
  419afa:	into   
  419afb:	adc    ebp,DWORD PTR [ebx-0x36]
  419afe:	(bad)  
  419aff:	icebp  
  419b00:	ins    DWORD PTR es:[edi],dx
  419b01:	rcl    dl,1
  419b03:	and    bh,BYTE PTR [eax+edx*2+0x2e58fe47]
  419b0a:	mov    esi,0xd6054a68
  419b0f:	inc    ebp
  419b10:	adc    ah,al
  419b12:	fwait
  419b13:	pop    ebp
  419b14:	mov    ebx,0x124827ec
  419b19:	ror    BYTE PTR [ebx-0x47],0x9a
  419b1d:	fwait
  419b1e:	xchg   esi,eax
  419b1f:	fwait
  419b20:	adc    al,0x7d
  419b23:	add    DWORD PTR [edx+0x0],ecx
  419b26:	add    esi,edi
  419b28:	sbb    eax,0x1172e1
  419b2d:	lods   eax,DWORD PTR ds:[esi]
  419b2e:	mov    ch,0x81
  419b30:	cld    
  419b31:	mov    bl,0x8e
  419b33:	out    0x8e,eax
  419b35:	rol    DWORD PTR [ecx+0x63],0x2a
  419b39:	xchg   esp,eax
  419b3a:	and    DWORD PTR [edi+esi*8],ebx
  419b3d:	daa    
  419b3e:	add    ebp,DWORD PTR [esi+edx*2]
  419b41:	push   0x6a
  419b43:	cmp    BYTE PTR [edx+0x75],al
  419b46:	jl     0x419bc4
  419b48:	popa   
  419b49:	push   eax
  419b4a:	dec    edx
  419b4b:	xchg   edx,eax
  419b4c:	dec    esi
  419b4d:	int3   
  419b4e:	bnd je 0x419b92
  419b51:	in     eax,0x86
  419b53:	stos   DWORD PTR es:[edi],eax
  419b54:	fstp   TBYTE PTR [eax+0x19]
  419b57:	ror    DWORD PTR [edx],0x9c
  419b5a:	and    bl,cl
  419b5c:	(bad)  
  419b5d:	dec    edi
  419b5e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419b5f:	rol    BYTE PTR [ecx-0x70],0x98
  419b63:	loope  0x419b7b
  419b65:	add    al,0x88
  419b67:	push   ss
  419b68:	scas   eax,DWORD PTR es:[edi]
  419b69:	add    al,0x16
  419b6b:	push   es
  419b6c:	jmp    0x419b5d
  419b6e:	enter  0xcd9d,0x18
  419b72:	ss mov dh,0xdd
  419b75:	mov    dh,0x1e
  419b77:	and    eax,0x44af7968
  419b7c:	xchg   ebx,eax
  419b7d:	jl     0x419b62
  419b7f:	test   dh,bh
  419b81:	fistp  QWORD PTR [eax]
  419b83:	jbe    0x419b58
  419b85:	jnp    0x419ba7
  419b87:	ins    DWORD PTR es:[edi],dx
  419b88:	mov    bl,0xe7
  419b8a:	imul   esi,ecx,0xffffff8f
  419b8d:	mov    ds:0xac57be96,al
  419b92:	(bad)  
  419b93:	leave  
  419b94:	sub    BYTE PTR [esi],0x5
  419b97:	test   DWORD PTR [ebp+0x27],esi
  419b9a:	repz fadd QWORD PTR [ebx]
  419b9d:	and    al,0x91
  419b9f:	loopne 0x419c0b
  419ba1:	out    dx,eax
  419ba2:	mov    ebp,0x2d6480d8
  419ba7:	bound  eax,QWORD PTR [edx+edi*8+0x7e93c075]
  419bae:	jecxz  0x419ba3
  419bb0:	repz js 0x419be9
  419bb3:	scas   al,BYTE PTR es:[edi]
  419bb4:	push   esi
  419bb5:	add    eax,0xdebcbf5e
  419bba:	sti    
  419bbb:	sub    ch,bh
  419bbd:	xchg   esp,eax
  419bbe:	mov    ebx,0xfe780fc2
  419bc3:	xor    dl,BYTE PTR [edi]
  419bc5:	xor    al,BYTE PTR [eax-0x3e6c575b]
  419bcb:	sar    BYTE PTR [ebx-0xbc82765],0xd9
  419bd2:	ja     0x419c31
  419bd4:	stos   BYTE PTR es:[edi],al
  419bd5:	repz sbb DWORD PTR [eax+0x64],edi
  419bd9:	cmp    ch,BYTE PTR [esi+0x21418354]
  419bdf:	or     eax,0xca613617
  419be4:	outs   dx,BYTE PTR ds:[esi]
  419be5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419be6:	(bad)  
  419be7:	jns    0x419bc8
  419be9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419bea:	jp     0x419ba8
  419bec:	xchg   esi,eax
  419bee:	outs   dx,DWORD PTR ds:[esi]
  419bef:	push   0xffffffe6
  419bf1:	(bad)  
  419bf2:	jnp    0x419b93
  419bf4:	ins    BYTE PTR es:[edi],dx
  419bf5:	std    
  419bf6:	mov    edi,0x9a5f0171
  419bfb:	and    BYTE PTR [esi+0x3b7a70e],0x2b
  419c02:	mov    ecx,0xabb47c2c
  419c07:	cmp    dl,BYTE PTR [edi+ebp*4+0x2827cdd8]
  419c0e:	sbb    al,0x57
  419c10:	test   BYTE PTR [eax+0xfc0bc36],dl
  419c16:	imul   ebx,edi,0xfffffff8
  419c19:	push   ss
  419c1a:	stos   DWORD PTR es:[edi],eax
  419c1b:	push   eax
  419c1c:	mov    ch,0x5a
  419c1e:	cmp    bl,BYTE PTR [ecx]
  419c20:	loopne 0x419bbe
  419c22:	inc    ebx
  419c23:	and    DWORD PTR [eax-0x47],0x6307903d
  419c2a:	or     eax,0x62aa48f4
  419c2f:	lds    edi,FWORD PTR [ebp-0x75ed0ec8]
  419c35:	idiv   BYTE PTR [edi+0x6a296a7e]
  419c3b:	(bad)  
  419c3c:	and    DWORD PTR [edx+0x49],eax
  419c3f:	ds addr16 inc ebx
  419c42:	(bad)  
  419c43:	dec    esp
  419c44:	pop    edi
  419c45:	adc    ebx,DWORD PTR [edi]
  419c47:	dec    edx
  419c48:	sub    cl,ah
  419c4a:	test   eax,0xe8d1e5c
  419c4f:	loope  0x419bed
  419c51:	mov    ch,0x89
  419c53:	ror    DWORD PTR [ecx+0x4],0x31
  419c57:	lods   eax,DWORD PTR ds:[esi]
  419c58:	mov    ebx,DWORD PTR [eax-0xd]
  419c5b:	fbld   TBYTE PTR [esp+ebp*1-0x60]
  419c5f:	mov    eax,ds:0x279c8440
  419c64:	pop    ss
  419c65:	mov    ah,0x22
  419c67:	jge    0x419c08
  419c69:	frstor [edi]
  419c6b:	xchg   ebp,eax
  419c6c:	(bad)  
  419c6d:	retf   
  419c6e:	or     ecx,DWORD PTR [ecx+0x55]
  419c71:	retf   
  419c72:	scas   al,BYTE PTR es:[edi]
  419c73:	push   edx
  419c74:	sbb    ebp,edx
  419c76:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419c77:	jp     0x419c24
  419c79:	icebp  
  419c7a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419c7b:	mov    esi,0x60f0aea
  419c80:	enter  0x1041,0x8f
  419c84:	sub    DWORD PTR [edx+0x66],ebx
  419c87:	aaa    
  419c88:	lock ins BYTE PTR es:[edi],dx
  419c8a:	mov    ds:0x94be6cd0,eax
  419c8f:	mov    edi,0x9aff121e
  419c94:	mov    ebp,0xc176135d
  419c99:	test   eax,0xf847e010
  419c9e:	or     al,0x27
  419ca0:	pop    edi
  419ca1:	inc    eax
  419ca2:	cmp    al,0xf6
  419ca4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419ca5:	mov    DWORD PTR [ecx],esp
  419ca7:	shl    BYTE PTR [ebx-0x40],0xa4
  419cab:	sbb    cl,BYTE PTR [ebp-0x32]
  419cae:	call   0x8e7493c5
  419cb3:	scas   al,BYTE PTR es:[edi]
  419cb4:	jge    0x419cfe
  419cb6:	xlat   BYTE PTR ds:[ebx]
  419cb7:	sub    DWORD PTR [ebp+0x50715576],eax
  419cbd:	cli    
  419cbe:	retf   
  419cbf:	xlat   BYTE PTR ds:[bx]
  419cc1:	inc    ebx
  419cc2:	mov    bh,0xe9
  419cc4:	jmp    0x419d0c
  419cc6:	jmp    0x3e8b4d41
  419ccb:	test   al,0x52
  419ccd:	pop    esp
  419cce:	adc    ch,BYTE PTR [ebp+ebx*2-0x3e]
  419cd2:	jmp    0x8b3d:0x1de73050
  419cd9:	daa    
  419cda:	addr16 mov edi,0x54d881af
  419ce0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419ce1:	inc    ebp
  419ce2:	shl    esi,1
  419ce4:	mov    bh,0xa4
  419ce6:	popf   
  419ce7:	or     BYTE PTR [ebp+0x10],dh
  419cea:	dec    ebp
  419ceb:	cmp    DWORD PTR [edx-0x27],edx
  419cee:	dec    eax
  419cef:	out    dx,al
  419cf0:	xchg   edx,eax
  419cf1:	(bad)  
  419cf2:	mov    ebx,0xdaa94cc
  419cf7:	fs (bad) 
  419cf9:	cld    
  419cfa:	adc    DWORD PTR [ebx-0x72],eax
  419cfd:	and    BYTE PTR [edx-0x2a],dl
  419d00:	xor    BYTE PTR ds:0x8b217562,0xe1
  419d07:	imul   esi,DWORD PTR [eax-0xb72aa67],0xffffffb0
  419d0e:	jp     0x419d88
  419d10:	rol    DWORD PTR [edx-0x35],0x2a
  419d14:	in     eax,dx
  419d15:	fwait
  419d16:	adc    ch,ch
  419d18:	xor    DWORD PTR [ecx+0x28],eax
  419d1b:	jb     0x419d12
  419d1d:	aam    0xfa
  419d1f:	outs   dx,DWORD PTR ds:[esi]
  419d20:	mov    WORD PTR [esi],?
  419d22:	push   ecx
  419d23:	addr16 mov ds:0x46e,al
  419d27:	or     ecx,esp
  419d29:	mov    ebx,0xf543564a
  419d2e:	shr    BYTE PTR [ebx+0x3a3bd671],cl
  419d34:	data16 mov dh,0x94
  419d37:	inc    ebx
  419d38:	cld    
  419d39:	(bad)  
  419d3a:	shl    bl,1
  419d3c:	xor    eax,0x234bcad8
  419d41:	mov    esi,0x7e059c8a
  419d46:	(bad)  
  419d47:	enter  0xa086,0x3e
  419d4b:	int    0x89
  419d4d:	aad    0x52
  419d4f:	mov    al,ds:0xffd25084
  419d54:	xor    dl,BYTE PTR ds:0xf82c3d51
  419d5a:	sbb    al,0x41
  419d5c:	push   esp
  419d5d:	ret    0x5efb
  419d60:	stos   DWORD PTR es:[edi],eax
  419d61:	inc    esi
  419d62:	xchg   DWORD PTR [edx],ebx
  419d64:	cmp    edi,DWORD PTR [edx]
  419d66:	xor    eax,0x761fbd09
  419d6b:	or     ebp,esi
  419d6d:	lahf   
  419d6e:	iret   
  419d6f:	out    dx,al
  419d70:	fsubr  QWORD PTR [ebx-0x5d3b8fd3]
  419d76:	sbb    DWORD PTR [edi],ebp
  419d78:	shr    DWORD PTR [ebx-0x10],0xfb
  419d7c:	js     0x419d35
  419d7e:	std    
  419d7f:	call   0x19aa7017
  419d84:	adc    BYTE PTR [ebp+0x25e3152],dh
  419d8a:	pusha  
  419d8b:	or     BYTE PTR [ebx],al
  419d8d:	pop    ebp
  419d8e:	push   ebp
  419d8f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419d90:	mov    esp,0x1a551fea
  419d95:	ja     0x419da4
  419d97:	xor    al,0xfd
  419d99:	xchg   edi,eax
  419d9a:	xor    bl,BYTE PTR [ebx+0x32]
  419d9d:	jle    0x419d30
  419d9f:	scas   eax,DWORD PTR es:[edi]
  419da0:	jmp    0xaa28:0x688fc20a
  419da7:	push   cs
  419da8:	push   ss
  419da9:	sub    BYTE PTR [edx+edi*2-0x3a],0x56
  419dae:	fstp   TBYTE PTR [edx-0x23484b8e]
  419db4:	xchg   BYTE PTR [edx+0x14],dh
  419db7:	retf   
  419db8:	rol    BYTE PTR [edi-0x2b],1
  419dbb:	out    0xb5,al
  419dbd:	push   ebx
  419dbe:	lock sahf 
  419dc0:	(bad)  
  419dc1:	sahf   
  419dc2:	test   DWORD PTR [eax],eax
  419dc4:	xchg   edi,eax
  419dc5:	nop
  419dc6:	div    DWORD PTR [eax]
  419dc8:	mov    ah,0xa8
  419dca:	out    dx,al
  419dcb:	shl    DWORD PTR [edi-0x17ecb0bb],0xda
  419dd2:	jmp    0x413c7b4e
  419dd7:	add    al,0x10
  419dd9:	clc    
  419dda:	std    
  419ddb:	jbe    0x419e0a
  419ddd:	ins    BYTE PTR es:[edi],dx
  419dde:	retf   
  419ddf:	push   ss
  419de0:	jae    0x419db5
  419de2:	jns    0x419dc5
  419de4:	xchg   edx,eax
  419de5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419de6:	(bad)  
  419de8:	and    BYTE PTR [eax-0x41596581],0x80
  419def:	shr    DWORD PTR [ebx+ebx*2],0x21
  419df3:	outs   dx,DWORD PTR ds:[esi]
  419df4:	adc    eax,0x340b99a5
  419df9:	inc    ebx
  419dfa:	or     eax,0x45507edd
  419dff:	je     0x419e12
  419e01:	(bad)  
  419e02:	pop    edi
  419e03:	cwde   
  419e04:	adc    DWORD PTR [eax-0x24],esp
  419e07:	imul   edx,DWORD PTR [edi-0x28],0x34
  419e0b:	icebp  
  419e0c:	xor    al,0x40
  419e0e:	mov    ds:0x46c4b17f,eax
  419e13:	xchg   esi,eax
  419e14:	and    DWORD PTR [esi+0x75],ebx
  419e17:	lahf   
  419e18:	retf   0x9b75
  419e1b:	fisttp WORD PTR [edi+0x479cbd19]
  419e21:	cli    
  419e22:	retf   
  419e23:	or     eax,0xc8259281
  419e28:	in     eax,0x59
  419e2a:	lods   eax,DWORD PTR ds:[esi]
  419e2b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419e2c:	aam    0xc4
  419e2e:	and    BYTE PTR [eax+0x1e3e27ed],dh
  419e34:	lock aas 
  419e36:	std    
  419e37:	mov    BYTE PTR ds:0xe8e576aa,ah
  419e3d:	in     eax,dx
  419e3e:	loopne 0x419dd3
  419e40:	out    dx,eax
  419e41:	(bad)  
  419e42:	push   ss
  419e43:	mov    dh,0x5d
  419e45:	test   eax,0x5644bf12
  419e4a:	repz and cl,BYTE PTR [esi]
  419e4d:	imul   esi,DWORD PTR [edx],0xffffffcd
  419e50:	aaa    
  419e51:	push   esp
  419e52:	mov    dl,0x82
  419e54:	dec    edx
  419e55:	imul   edi,edx,0xcadbfa69
  419e5b:	dec    ecx
  419e5c:	mov    al,BYTE PTR [esi]
  419e5e:	dec    ebp
  419e5f:	sbb    ebx,esi
  419e61:	mov    ds:0xc2447170,eax
  419e66:	xchg   ecx,eax
  419e67:	inc    ebx
  419e68:	daa    
  419e69:	jno    0x419e45
  419e6b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419e6c:	int    0x61
  419e6e:	stos   BYTE PTR es:[edi],al
  419e6f:	mov    ah,0xb7
  419e71:	ret    0x8892
  419e74:	in     al,0x54
  419e76:	mov    ds:0x1e079579,al
  419e7b:	push   edi
  419e7c:	shl    cl,1
  419e7e:	sub    ebx,DWORD PTR [ebx-0x4d]
  419e81:	bound  ecx,QWORD PTR [eax+0x36048535]
  419e87:	mov    ebx,0xfec67549
  419e8c:	arpl   WORD PTR [edx+edi*4+0x6a],bp
  419e90:	jl     0x419ed0
  419e92:	std    
  419e93:	mov    ebp,0x6b826409
  419e98:	cld    
  419e99:	(bad)  
  419e9a:	cld    
  419e9b:	aad    0xe8
  419e9d:	and    BYTE PTR [ebx+eiz*8+0x2a],cl
  419ea1:	js     0x419e66
  419ea3:	inc    ebp
  419ea4:	scas   eax,DWORD PTR es:[edi]
  419ea5:	sahf   
  419ea6:	sbb    dl,BYTE PTR [ebp+0x31d7dca7]
  419eac:	lods   al,BYTE PTR ds:[esi]
  419ead:	dec    ebp
  419eae:	and    edi,DWORD PTR [ecx+ebp*1]
  419eb1:	hlt    
  419eb2:	fadd   QWORD PTR [edi]
  419eb4:	(bad)  
  419eb5:	pop    ebx
  419eb6:	mov    al,ds:0xe6fe0b74
  419ebb:	pop    edi
  419ebc:	mov    ecx,0xc2f75a40
  419ec1:	ror    cl,0x54
  419ec4:	mov    eax,0xb70b6d0a
  419ec9:	dec    edx
  419eca:	xchg   esi,eax
  419ecb:	cwde   
  419ecc:	fadd   st,st(6)
  419ece:	jmp    0x749adb7a
  419ed3:	into   
  419ed4:	ja     0x419e99
  419ed6:	addr16 mov dl,0x33
  419ed9:	mov    dl,0x4b
  419edb:	js     0x419f2d
  419edd:	xor    eax,0xb28d66ba
  419ee2:	inc    edi
  419ee3:	jne    0x419edc
  419ee5:	push   ds
  419ee6:	push   edi
  419ee7:	adc    DWORD PTR [esi+0x11ece6f5],edi
  419eed:	xor    ah,ch
  419eef:	xchg   ebp,eax
  419ef0:	in     al,dx
  419ef1:	js     0x419ed3
  419ef3:	call   0x87c5:0x6d6552c1
  419efa:	pusha  
  419efb:	or     bl,BYTE PTR [esi+0xd]
  419efe:	cmp    al,0xfc
  419f00:	les    ebx,FWORD PTR ds:0xbf81c30e
  419f06:	adc    al,0x42
  419f08:	test   BYTE PTR [ebp-0x42],al
  419f0b:	imul   ebx,DWORD PTR ds:0xb404c185,0xbf0a47e6
  419f15:	imul   esp,DWORD PTR [eax-0x1eff55ec],0x3c
  419f1c:	mov    bh,0x12
  419f1e:	add    edx,ecx
  419f20:	inc    ebx
  419f21:	repz push cs
  419f23:	dec    ebp
  419f24:	nop
  419f25:	in     al,0x30
  419f27:	xchg   ecx,eax
  419f28:	mov    BYTE PTR [esi+0x73f93693],bl
  419f2e:	fs sahf 
  419f30:	cli    
  419f31:	sbb    al,0xf9
  419f33:	mov    ecx,0xed550060
  419f38:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419f39:	inc    eax
  419f3a:	rcl    BYTE PTR [ebp-0x24],0xa7
  419f3e:	mov    edx,0xb82b5b4d
  419f43:	or     ch,BYTE PTR [eax]
  419f45:	jmp    0x71fa:0xfba47cda
  419f4c:	outs   dx,BYTE PTR ds:[esi]
  419f4d:	adc    eax,0x7974ef09
  419f52:	cli    
  419f53:	jl     0x419fb7
  419f55:	sbb    al,0xd5
  419f57:	cdq    
  419f58:	fsub   QWORD PTR [esi-0x28]
  419f5b:	fwait
  419f5c:	les    ecx,FWORD PTR [edx]
  419f5e:	add    esp,ebx
  419f60:	das    
  419f61:	ret    
  419f62:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419f63:	xchg   edx,eax
  419f64:	clc    
  419f65:	in     al,0x9
  419f67:	call   0xb4a192a
  419f6c:	(bad)  
  419f6d:	and    ecx,DWORD PTR [edx+ebx*1+0x4e]
  419f71:	mov    al,0xb0
  419f73:	pop    ds
  419f74:	repz test eax,0xc684d254
  419f7a:	mov    dh,0x69
  419f7c:	mov    cl,0x15
  419f7e:	rcr    BYTE PTR [eax],cl
  419f80:	jb     0x419fb3
  419f82:	add    al,0xae
  419f84:	jno    0x419fae
  419f86:	dec    esp
  419f87:	loopne 0x419fd0
  419f89:	xchg   ecx,eax
  419f8a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419f8b:	sbb    dl,dh
  419f8d:	inc    ebx
  419f8e:	lods   al,BYTE PTR ds:[esi]
  419f8f:	adc    DWORD PTR [ecx],ebx
  419f91:	lahf   
  419f92:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419f93:	clc    
  419f94:	rcr    BYTE PTR [eax+0x29],1
  419f97:	and    BYTE PTR [ebx-0xb],0xe8
  419f9b:	addr16 out 0xb,eax
  419f9e:	fst    DWORD PTR [ebp+0x1b37ab97]
  419fa4:	sahf   
  419fa5:	(bad)  
  419fa6:	push   ebp
  419fa7:	pop    edx
  419fa8:	loope  0x419fc7
  419faa:	pop    es
  419fab:	cmovge edx,DWORD PTR [ecx+edx*1]
  419faf:	add    bh,0x89
  419fb2:	jo     0x419f8c
  419fb4:	retf   
  419fb5:	or     eax,0x13c7f3c0
  419fba:	mov    ch,0x71
  419fbc:	and    al,0x51
  419fbe:	js     0x419fb2
  419fc0:	and    DWORD PTR [ebx-0x472bfa8],ebp
  419fc6:	lahf   
  419fc7:	loopne 0x419f5f
  419fc9:	inc    ebp
  419fca:	mov    ds,edx
  419fcc:	fimul  DWORD PTR [ebx-0x46]
  419fcf:	nop
  419fd0:	inc    edx
  419fd1:	sar    BYTE PTR [esi+0x77b0b761],cl
  419fd7:	add    BYTE PTR [edi-0x3f0022ab],dl
  419fdd:	push   ecx
  419fde:	sahf   
  419fdf:	lods   eax,DWORD PTR ds:[esi]
  419fe0:	int3   
  419fe1:	mov    cl,0x13
  419fe3:	inc    edi
  419fe4:	mov    dh,0x60
  419fe6:	lock shl BYTE PTR [eax+0x258e2682],0xb2
  419fee:	sub    BYTE PTR [ecx],ah
  419ff0:	xlat   BYTE PTR ds:[ebx]
  419ff1:	das    
  419ff2:	cmp    eax,0x793a1344
  419ff7:	jmp    0x96b4:0x45454918
  419ffe:	sbb    edi,DWORD PTR [edi-0x356404d2]
  41a004:	aad    0x5c
  41a006:	sub    DWORD PTR [edi],ecx
  41a008:	rcl    DWORD PTR [edi+0x2f],1
  41a00b:	inc    eax
  41a00c:	sbb    ah,BYTE PTR [ebp+0x45]
  41a00f:	dec    ebp
  41a010:	sbb    BYTE PTR [edx],bh
  41a012:	das    
  41a013:	sbb    BYTE PTR [eax-0x6be8f7],cl
  41a019:	jg     0x41a068
  41a01b:	enter  0xc1c5,0x70
  41a01f:	mul    DWORD PTR [esp+ebp*4-0x6f]
  41a023:	mov    WORD PTR [esi],fs
  41a025:	push   esi
  41a026:	pop    eax
  41a027:	ss mov ah,0xa7
  41a02a:	and    DWORD PTR [ebx],ebp
  41a02c:	sbb    eax,DWORD PTR [esi+0x31d48d87]
  41a032:	inc    ebx
  41a033:	add    al,0x8e
  41a035:	test   eax,0x7d07e866
  41a03a:	loop   0x41a0a3
  41a03c:	xor    BYTE PTR ds:0xc7b1bef8,al
  41a042:	fisub  WORD PTR ds:0x38e2412b
  41a048:	(bad)
  41a04b:	mov    WORD PTR [eax+edx*8-0x6a],ss
  41a04f:	(bad)  [edi+0x76c4dcdf]
  41a055:	in     al,0xf4
  41a057:	xchg   ebp,eax
  41a058:	mov    cl,BYTE PTR [eax+edx*1-0x67e60c9b]
  41a05f:	and    eax,0x2d5453a6
  41a064:	stos   DWORD PTR es:[edi],eax
  41a065:	out    dx,al
  41a066:	jl     0x419ff5
  41a068:	pop    edi
  41a069:	inc    esp
  41a06a:	xchg   ebx,eax
  41a06b:	fild   DWORD PTR [edx+0x7d]
  41a06e:	jae    0x41a026
  41a070:	cmc    
  41a071:	test   bh,bl
  41a073:	fwait
  41a074:	add    DWORD PTR [ebx-0x5f],ebp
  41a077:	pushf  
  41a078:	in     al,0xb1
  41a07a:	mov    eax,0x1b43d00a
  41a07f:	pop    esp
  41a080:	or     BYTE PTR [ebx-0x29358ff3],cl
  41a086:	retf   0x4606
  41a089:	inc    eax
  41a08a:	cwde   
  41a08b:	test   BYTE PTR [edi],0x29
  41a08e:	or     DWORD PTR [ebx+ecx*4-0x6a],ebp
  41a092:	xchg   ecx,eax
  41a093:	rcl    DWORD PTR [edx-0x67],cl
  41a096:	pop    es
  41a097:	stos   BYTE PTR es:[edi],al
  41a098:	sbb    bl,BYTE PTR [ebx]
  41a09a:	pop    esp
  41a09b:	push   ss
  41a09c:	aaa    
  41a09d:	in     eax,0x54
  41a09f:	and    eax,0x72fe7830
  41a0a4:	int    0x36
  41a0a6:	mov    ds:0x87f3dbd5,al
  41a0ab:	sub    esp,0xffffff9d
  41a0ae:	ins    DWORD PTR es:[edi],dx
  41a0af:	jmp    0xa38b38da
  41a0b4:	lds    ecx,FWORD PTR [eax]
  41a0b6:	jp     0x41a05a
  41a0b8:	lds    esi,FWORD PTR [ebx]
  41a0ba:	push   esp
  41a0bb:	and    BYTE PTR [ebp-0x234724f9],dh
  41a0c1:	mov    DWORD PTR [esi-0xdfcd90c],ebx
  41a0c7:	inc    eax
  41a0c8:	pusha  
  41a0c9:	sar    DWORD PTR [ebx-0x48fad5b4],0x3
  41a0d0:	sub    DWORD PTR [ecx],esi
  41a0d2:	mov    edx,0x68b3f92d
  41a0d7:	mov    edx,0xb9b9f7ff
  41a0dc:	(bad)  
  41a0dd:	aad    0x6c
  41a0df:	cs inc esp
  41a0e1:	jae    0x41a11e
  41a0e3:	fsub   DWORD PTR [eax-0x316e1a8a]
  41a0e9:	add    eax,0xcafceb12
  41a0ee:	fwait
  41a0ef:	dec    ecx
  41a0f0:	(bad)  
  41a0f1:	sar    bh,0x82
  41a0f4:	mov    ecx,0x6283ecd2
  41a0f9:	push   ebx
  41a0fa:	pop    esp
  41a0fb:	inc    DWORD PTR ds:0xcd3410ef
  41a101:	cmp    dl,BYTE PTR cs:[edi]
  41a104:	outs   dx,DWORD PTR ds:[esi]
  41a105:	popa   
  41a106:	nop
  41a107:	push   ds
  41a108:	(bad)  
  41a109:	adc    BYTE PTR [ebp-0xf81bd22],ah
  41a10f:	xor    al,0xa
  41a111:	and    eax,0xc55c007a
  41a116:	jae    0x41a0e6
  41a118:	fnstsw WORD PTR [esi+ebp*4+0x284575ee]
  41a11f:	ins    DWORD PTR es:[edi],dx
  41a120:	not    DWORD PTR [eax+0x45]
  41a123:	pop    ds
  41a124:	repz cli 
  41a126:	jecxz  0x41a0bc
  41a128:	sbb    BYTE PTR [esi+0x44e5caf4],ch
  41a12e:	jmp    0x41a165
  41a130:	call   0x6c16:0x4e4fe813
  41a137:	xchg   esp,eax
  41a138:	repz retf 
  41a13a:	addr16 mov ecx,0xbd662481
  41a140:	jbe    0x41a13a
  41a142:	mov    esi,0x36d0fa06
  41a147:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a148:	sbb    eax,0xebe3d22c
  41a14d:	sbb    dh,al
  41a14f:	jge    0x41a18f
  41a151:	xchg   edi,eax
  41a152:	inc    esi
  41a153:	pop    esp
  41a154:	mov    edi,0xe2dd6207
  41a159:	imul   esp,DWORD PTR [ecx],0xa2babd58
  41a15f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a160:	les    edx,FWORD PTR [edx]
  41a162:	nop
  41a163:	pusha  
  41a164:	or     DWORD PTR [edx+0x670c5ba9],0xffffffd4
  41a16b:	sbb    eax,0x851b4f60
  41a170:	xor    esi,DWORD PTR [ebx+ecx*8-0x3686c0e6]
  41a177:	sti    
  41a178:	mov    dl,0x7c
  41a17a:	(bad)  
  41a17b:	push   ecx
  41a17c:	aas    
  41a17d:	jmp    0x41a113
  41a17f:	pop    ss
  41a180:	inc    ebp
  41a181:	and    al,ah
  41a183:	xor    DWORD PTR [bx+0x43],eax
  41a187:	sub    esp,ebp
  41a189:	sub    eax,0x2d4a6432
  41a18e:	mov    edx,0x31d160e8
  41a193:	xchg   bh,ch
  41a195:	out    dx,eax
  41a196:	sub    DWORD PTR [esi],eax
  41a198:	sub    bh,cl
  41a19a:	push   eax
  41a19b:	scas   al,BYTE PTR es:[edi]
  41a19c:	jo     0x41a177
  41a19e:	mov    WORD PTR [ebx-0x39],es
  41a1a1:	mov    eax,0xd5d0bfcd
  41a1a6:	popa   
  41a1a7:	inc    eax
  41a1a8:	aas    
  41a1a9:	lds    eax,FWORD PTR [ecx]
  41a1ab:	into   
  41a1ac:	xchg   ebx,eax
  41a1ad:	data16 sahf 
  41a1af:	fwait
  41a1b0:	and    dl,BYTE PTR [ebp+0x73]
  41a1b3:	mov    ds:0x42a72663,al
  41a1b8:	pop    edx
  41a1b9:	pavgb  mm7,QWORD PTR [edx+0x23]
  41a1bd:	cmp    DWORD PTR [ebx],eax
  41a1bf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a1c0:	pushf  
  41a1c1:	mov    al,0xea
  41a1c3:	sti    
  41a1c4:	adc    bh,bh
  41a1c6:	ret    
  41a1c7:	mov    ebx,0xb68a444d
  41a1cc:	dec    esp
  41a1cd:	mov    ebx,0x3a585c5d
  41a1d2:	aaa    
  41a1d3:	retf   0xccf
  41a1d6:	dec    edi
  41a1d7:	ret    
  41a1d8:	jno    0x41a256
  41a1da:	add    dl,BYTE PTR [ebx+edi*1]
  41a1dd:	push   0x49
  41a1df:	hlt    
  41a1e0:	push   edi
  41a1e1:	or     bh,BYTE PTR ds:0x4434d033
  41a1e7:	in     al,dx
  41a1e8:	pop    ecx
  41a1e9:	mov    bl,0x92
  41a1eb:	cmp    al,0xa8
  41a1ed:	fs jo  0x41a245
  41a1f0:	cs je  0x41a205
  41a1f3:	repz into 
  41a1f5:	jae    0x41a1c1
  41a1f7:	inc    BYTE PTR [edi-0x5d]
  41a1fa:	rcl    DWORD PTR [eax-0x52],1
  41a1fd:	push   eax
  41a1fe:	dec    edi
  41a1ff:	xchg   edi,eax
  41a200:	call   0x1cda:0x9eb8b8bd
  41a207:	ds in  al,0x23
  41a20a:	xchg   edi,eax
  41a20b:	jp     0x41a192
  41a20d:	push   ds
  41a20e:	mov    ch,0xce
  41a210:	push   0x3b
  41a212:	pop    ebp
  41a213:	mov    ebx,0x142dcc20
  41a218:	xchg   ebx,eax
  41a219:	push   edx
  41a21a:	xchg   esi,eax
  41a21b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a21c:	push   ecx
  41a21d:	ror    BYTE PTR [edx],cl
  41a21f:	mov    eax,ds:0xae2107f4
  41a224:	push   0xffffff89
  41a226:	pop    edi
  41a227:	jp     0x41a264
  41a229:	shl    esp,0x1b
  41a22c:	add    DWORD PTR [edi-0x266c8b41],ebx
  41a232:	ds cld 
  41a234:	xchg   BYTE PTR [eax-0x4f],bl
  41a237:	ret    
  41a238:	add    ecx,DWORD PTR [ebp-0x8]
  41a23b:	pusha  
  41a23c:	or     al,0x39
  41a23e:	jg     0x41a24f
  41a240:	jge    0x41a1f9
  41a242:	pop    ebx
  41a243:	pop    esp
  41a244:	das    
  41a245:	add    eax,DWORD PTR [edx-0x67]
  41a248:	lea    ebp,[ebp+0x3469c653]
  41a24e:	xchg   ebx,eax
  41a24f:	pop    ebx
  41a250:	cmp    DWORD PTR [edx+0x1f],0x11052c89
  41a257:	cmc    
  41a258:	adc    eax,0x50c53eda
  41a25d:	mov    esp,0xdb186a49
  41a262:	mov    ebx,0x1158535f
  41a267:	fsubr  DWORD PTR [ebp-0x72ae06a]
  41a26d:	rol    edx,cl
  41a26f:	cmc    
  41a270:	mov    esi,0x6337f11b
  41a275:	xchg   ebp,eax
  41a276:	and    DWORD PTR [ebp+0x61],0x65
  41a27a:	or     DWORD PTR [edi-0x44],edx
  41a27d:	push   ebx
  41a27e:	push   edx
  41a27f:	cli    
  41a280:	jecxz  0x41a2a4
  41a282:	retf   0xb944
  41a285:	cs pusha 
  41a287:	ins    BYTE PTR es:[edi],dx
  41a288:	test   eax,0x36634048
  41a28e:	jb     0x41a2fa
  41a290:	lods   al,BYTE PTR ds:[esi]
  41a291:	jo     0x41a289
  41a293:	stos   DWORD PTR es:[edi],eax
  41a294:	lahf   
  41a295:	pop    edx
  41a296:	mov    cl,0x51
  41a298:	inc    esi
  41a299:	mov    bh,0xef
  41a29b:	pop    edx
  41a29c:	xor    eax,0x96931632
  41a2a1:	and    edi,esi
  41a2a3:	gs retf 
  41a2a5:	mov    edi,DWORD PTR [ebx-0x54]
  41a2a8:	jle    0x41a321
  41a2aa:	pop    edi
  41a2ab:	adc    al,0xe2
  41a2ad:	sti    
  41a2ae:	mov    eax,ds:0xdf61ebd6
  41a2b3:	xor    bl,al
  41a2b5:	ret    0xf5e4
  41a2b8:	jo     0x41a2fe
  41a2ba:	std    
  41a2bb:	cli    
  41a2bc:	push   ds
  41a2bd:	mov    al,0x8a
  41a2bf:	and    BYTE PTR [esi+0x4e13895a],cl
  41a2c5:	xchg   BYTE PTR [esi+0x6b],cl
  41a2c8:	cmp    eax,0x3756d7a2
  41a2cd:	fidivr DWORD PTR [ebp-0x1]
  41a2d0:	cs or  eax,eax
  41a2d3:	xor    eax,DWORD PTR [ecx+0x4]
  41a2d6:	fld    QWORD PTR [ebp+0x1aa6ccff]
  41a2dc:	dec    ebx
  41a2dd:	fisub  WORD PTR [edi]
  41a2df:	jge    0x41a315
  41a2e1:	dec    ebx
  41a2e2:	push   0xffffff96
  41a2e4:	xor    eax,0x6d5ae2a8
  41a2e9:	in     al,0xab
  41a2eb:	add    esi,DWORD PTR [ebx+edx*1+0x4d]
  41a2ef:	mov    ebp,0x7ef85e3a
  41a2f4:	mov    ecx,0x34da1cec
  41a2f9:	hlt    
  41a2fa:	sar    esi,1
  41a2fc:	in     eax,0x95
  41a2fe:	sub    eax,0xf051f945
  41a303:	sbb    al,0xef
  41a305:	push   cs
  41a306:	mov    bh,BYTE PTR [ecx-0x48]
  41a309:	out    0xbc,eax
  41a30b:	leave  
  41a30c:	das    
  41a30d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a30e:	dec    ecx
  41a30f:	ss (bad) 
  41a311:	adc    al,0x1c
  41a313:	js     0x41a379
  41a315:	xchg   edx,esp
  41a317:	mov    edx,0x881461a0
  41a31c:	adc    BYTE PTR ds:0xc6b42072,bl
  41a322:	mov    cl,0x65
  41a324:	fsub   st,st(7)
  41a326:	dec    edx
  41a327:	in     eax,0x0
  41a329:	in     al,dx
  41a32a:	mov    eax,0x2914ade4
  41a32f:	ja     0x41a353
  41a331:	or     eax,0xd1f6f418
  41a336:	les    esi,FWORD PTR [ecx+0x5e76e39c]
  41a33c:	(bad)  
  41a33d:	sbb    eax,0x18882d3b
  41a342:	jmp    0xae220d9a
  41a347:	icebp  
  41a348:	and    BYTE PTR [edx],dl
  41a34a:	sub    eax,0xa26463c9
  41a34f:	dec    edx
  41a350:	or     DWORD PTR [ebx+eax*2-0x62],ecx
  41a354:	dec    edi
  41a355:	cli    
  41a356:	mov    ebx,DWORD PTR [ebx+0x5]
  41a359:	mov    eax,0xdfb8583
  41a35e:	cmp    BYTE PTR [edi],0x7c
  41a361:	fwait
  41a362:	(bad)  
  41a363:	in     al,dx
  41a364:	jno    0x41a348
  41a366:	mov    ah,0xca
  41a368:	clc    
  41a369:	xor    eax,0x4c37f1c8
  41a36e:	ss push esp
  41a370:	sub    DWORD PTR [edi],ebp
  41a372:	jbe    0x41a2fb
  41a374:	out    0xfb,eax
  41a376:	int3   
  41a377:	retf   
  41a378:	arpl   dx,dx
  41a37a:	fcom   QWORD PTR [ecx]
  41a37c:	pop    esi
  41a37d:	lahf   
  41a37e:	int    0x90
  41a380:	mov    ah,0x5
  41a382:	inc    esi
  41a383:	cdq    
  41a384:	stos   BYTE PTR es:[edi],al
  41a385:	lea    esp,[ebx-0x5c]
  41a388:	out    0xaa,eax
  41a38a:	dec    eax
  41a38b:	in     eax,0x2b
  41a38d:	jnp    0x41a317
  41a38f:	and    ah,BYTE PTR [di+0x4d4b]
  41a394:	fwait
  41a395:	ret    0x2ddb
  41a398:	adc    BYTE PTR [ecx+0xe],dl
  41a39b:	xchg   BYTE PTR [ecx],bh
  41a39d:	cmp    eax,0x89ca6805
  41a3a2:	inc    eax
  41a3a3:	lods   eax,DWORD PTR ds:[esi]
  41a3a4:	jne    0x41a3cf
  41a3a6:	jg     0x41a3f8
  41a3a8:	out    dx,al
  41a3a9:	xor    BYTE PTR [esi],cl
  41a3ab:	xor    DWORD PTR [edi],ecx
  41a3ad:	cmp    esi,DWORD PTR [eax+0xf]
  41a3b0:	loopne 0x41a375
  41a3b2:	push   0x2
  41a3b4:	mov    cl,0x6
  41a3b6:	mov    esi,0xcdc93a97
  41a3bb:	jg     0x41a41a
  41a3bd:	test   eax,0xae912c3a
  41a3c2:	sbb    eax,0xa5f1391f
  41a3c7:	jae    0x41a38d
  41a3c9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a3ca:	rcl    DWORD PTR [eax+0x3f27867a],0xd7
  41a3d1:	push   ebx
  41a3d2:	fistp  DWORD PTR [eax-0x6b]
  41a3d5:	push   edx
  41a3d6:	and    eax,0x41c7f0d1
  41a3db:	dec    esp
  41a3dc:	inc    ebx
  41a3dd:	rol    DWORD PTR [eax+eax*4-0x77243a0f],cl
  41a3e4:	icebp  
  41a3e5:	push   cs
  41a3e6:	push   ecx
  41a3e7:	lods   al,BYTE PTR ds:[esi]
  41a3e8:	dec    esi
  41a3e9:	jne    0x41a3f9
  41a3eb:	test   eax,0xc1e3cc5d
  41a3f0:	test   DWORD PTR [eax+ecx*2],eax
  41a3f3:	nop
  41a3f4:	xor    BYTE PTR [esi+0x5daca893],dh
  41a3fa:	cmc    
  41a3fb:	dec    esi
  41a3fc:	and    DWORD PTR [edx+0x79c39159],edi
  41a402:	int3   
  41a403:	fistp  WORD PTR [edi]
  41a405:	cmp    al,0x6f
  41a407:	fmul   QWORD PTR [edx+edi*8-0x636aac18]
  41a40e:	fimul  DWORD PTR [edx]
  41a410:	je     0x41a41c
  41a412:	sti    
  41a413:	scas   eax,DWORD PTR es:[edi]
  41a414:	pop    ds
  41a415:	sub    al,0xf
  41a417:	imul   esp,DWORD PTR [esi+esi*8+0x2b6bd38c],0x3e
  41a41f:	sahf   
  41a420:	popf   
  41a421:	or     eax,0x3f1f25f9
  41a426:	int    0xd8
  41a428:	xlat   BYTE PTR ds:[ebx]
  41a429:	adc    esp,esi
  41a42b:	push   edi
  41a42c:	int    0xe
  41a42e:	sub    DWORD PTR [edi-0x1b],edx
  41a431:	pushf  
  41a432:	dec    edx
  41a433:	std    
  41a434:	jmp    0x41a45d
  41a436:	dec    edi
  41a437:	sbb    al,0x79
  41a439:	push   ds
  41a43a:	scas   eax,DWORD PTR es:[edi]
  41a43b:	outs   dx,DWORD PTR ds:[esi]
  41a43c:	push   eax
  41a43d:	outs   dx,BYTE PTR ds:[esi]
  41a43e:	and    BYTE PTR [edi],dl
  41a440:	sbb    eax,esp
  41a442:	outs   dx,DWORD PTR ds:[esi]
  41a443:	into   
  41a444:	jo     0x41a415
  41a446:	dec    ecx
  41a447:	(bad)  
  41a448:	(bad)  
  41a44a:	pop    ss
  41a44b:	or     al,0xe0
  41a44d:	test   al,0xc7
  41a44f:	xor    BYTE PTR ds:0xf44c83e6,0x2f
  41a456:	dec    esi
  41a457:	jmp    0x41a472
  41a459:	fmul   QWORD PTR [ebp-0x41]
  41a45c:	inc    edx
  41a45d:	jle    0x41a472
  41a45f:	adc    DWORD PTR [ebx-0x4a],esi
  41a462:	aas    
  41a463:	and    DWORD PTR [eax+0x44],eax
  41a466:	adc    DWORD PTR [eax+0x3b1bbee6],edx
  41a46c:	mov    eax,0x1c9e6434
  41a471:	inc    DWORD PTR [eax-0x29]
  41a474:	movaps XMMWORD PTR [esi],xmm1
  41a477:	icebp  
  41a478:	int3   
  41a479:	cli    
  41a47a:	xchg   ebx,eax
  41a47b:	add    eax,0xf6030b25
  41a480:	into   
  41a481:	xlat   BYTE PTR ds:[ebx]
  41a482:	sub    dl,bh
  41a484:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a485:	pusha  
  41a486:	(bad)  [esi+0x26014a70]
  41a48c:	push   0xffffffc1
  41a48e:	jae    0x41a43b
  41a490:	adc    DWORD PTR [esi+0x66],esp
  41a493:	or     BYTE PTR [ecx],0x5e
  41a496:	data16 addr16 jo 0x41a481
  41a49a:	pop    ecx
  41a49b:	sti    
  41a49c:	jmp    0x41a4ac
  41a49e:	push   ss
  41a49f:	add    ch,BYTE PTR [esp+ecx*1-0x7c30dba8]
  41a4a6:	mov    ds:0x8cc7338,eax
  41a4ab:	aaa    
  41a4ac:	jo     0x41a4dd
  41a4ae:	xchg   ecx,eax
  41a4af:	or     bl,bl
  41a4b1:	sub    eax,0xa1c6dd45
  41a4b6:	sub    bl,BYTE PTR [eax]
  41a4b8:	icebp  
  41a4b9:	out    dx,al
  41a4ba:	sbb    eax,0xb0f87de3
  41a4bf:	cmc    
  41a4c0:	daa    
  41a4c1:	retf   0x4088
  41a4c4:	(bad)  
  41a4c6:	imul   ebp,DWORD PTR [ebp+0x15],0x1e
  41a4ca:	or     cl,BYTE PTR [eax-0x4f]
  41a4cd:	fincstp 
  41a4cf:	shl    ebp,0xf6
  41a4d2:	rcr    dl,1
  41a4d4:	es cli 
  41a4d6:	inc    eax
  41a4d7:	jmp    0x41a525
  41a4d9:	and    BYTE PTR [eax],bh
  41a4db:	dec    esp
  41a4dc:	jmp    0x1f8aedb2
  41a4e1:	ret    
  41a4e2:	dec    esp
  41a4e3:	jmp    0x2c41:0xc033c82d
  41a4ea:	xlat   BYTE PTR ds:[ebx]
  41a4eb:	push   es
  41a4ec:	sub    ebp,DWORD PTR [ebp+ecx*4+0x7870f10a]
  41a4f3:	adc    al,0xcf
  41a4f5:	xchg   BYTE PTR ds:0x4100b3b4,bh
  41a4fb:	xor    eax,0xa95fc02d
  41a500:	mov    ah,0xdc
  41a502:	xor    al,0x36
  41a504:	in     al,dx
  41a505:	pushf  
  41a506:	(bad)  
  41a508:	enter  0xfd50,0xd0
  41a50c:	pushf  
  41a50d:	jnp    0x41a551
  41a50f:	jmp    0x41a4ba
  41a511:	stos   DWORD PTR es:[edi],eax
  41a512:	mov    dh,BYTE PTR [ebx-0x56c83ef]
  41a518:	jecxz  0x41a524
  41a51a:	sbb    DWORD PTR [eax-0x14],edi
  41a51d:	call   0x7710:0x4ea681a4
  41a524:	and    al,0xea
  41a526:	repz pop eax
  41a528:	or     eax,0x924062da
  41a52d:	and    BYTE PTR [edi-0x77f4a8e6],bl
  41a533:	pushf  
  41a534:	inc    ecx
  41a535:	mov    esp,0xf164a426
  41a53a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a53b:	retf   
  41a53c:	jne    0x41a5b5
  41a53e:	adc    cl,BYTE PTR [edi*8-0x1ce4fbda]
  41a545:	hlt    
  41a546:	jecxz  0x41a539
  41a548:	xor    DWORD PTR [esp+eiz*4+0x73cdb7f],0x365ad6d1
  41a553:	jae    0x41a55a
  41a555:	sub    ch,BYTE PTR [edi]
  41a557:	xchg   edi,eax
  41a558:	cmp    eax,0x4099cca3
  41a55d:	in     eax,dx
  41a55e:	jne    0x41a4ee
  41a560:	stc    
  41a561:	pop    ebx
  41a562:	arpl   WORD PTR [edi],di
  41a564:	inc    esp
  41a565:	cmp    DWORD PTR [edx],esi
  41a567:	mov    WORD PTR [edi-0x15],?
  41a56a:	mov    ds:0x70a9a869,al
  41a56f:	sbb    BYTE PTR [ebx+0x58f975d1],ch
  41a575:	les    ebx,FWORD PTR [esi+0x4275a0aa]
  41a57b:	ins    BYTE PTR es:[edi],dx
  41a57c:	repnz rcr edx,cl
  41a57f:	sbb    cl,bl
  41a581:	fstp   DWORD PTR [edx]
  41a583:	cmp    al,0xd8
  41a585:	sub    DWORD PTR [eax+ecx*8-0x77f3c43b],edx
  41a58c:	nop
  41a58d:	aaa    
  41a58e:	mov    ebx,0xad433cc1
  41a593:	fidivr DWORD PTR [eax+edx*2-0xca6605e]
  41a59a:	adc    al,0xf5
  41a59c:	xchg   ebx,eax
  41a59d:	jmp    0xab6d149
  41a5a2:	rol    DWORD PTR [ebp+0x4f4b5c39],0xb0
  41a5a9:	mov    edi,0x72d3bc75
  41a5ae:	in     al,0x3b
  41a5b0:	in     eax,0xa5
  41a5b2:	js     0x41a616
  41a5b4:	pop    ebp
  41a5b5:	pop    ebp
  41a5b6:	inc    ebx
  41a5b7:	retf   
  41a5b8:	mov    bl,0x29
  41a5ba:	adc    eax,esp
  41a5bc:	cmp    eax,0x1f08fb93
  41a5c1:	mov    ?,WORD PTR [ecx+0x1597b0a6]
  41a5c7:	fadd   st,st(4)
  41a5c9:	(bad)  
  41a5ca:	lods   al,BYTE PTR ds:[esi]
  41a5cb:	push   0xffffffc0
  41a5cd:	lods   al,BYTE PTR ds:[esi]
  41a5ce:	cmp    eax,0xa9dc349f
  41a5d3:	dec    eax
  41a5d4:	ds cdq 
  41a5d6:	mov    al,0x37
  41a5d8:	inc    esi
  41a5d9:	adc    DWORD PTR [ebp+0xab5326a],esi
  41a5df:	pop    ebp
  41a5e0:	shl    DWORD PTR [ebx+0x77946721],cl
  41a5e6:	jnp    0x41a5a0
  41a5e8:	add    eax,0x6d325f80
  41a5ed:	sub    BYTE PTR [edi],bl
  41a5ef:	ss call 0x49231a31
  41a5f5:	push   eax
  41a5f6:	inc    edx
  41a5f7:	stc    
  41a5f8:	stos   BYTE PTR es:[edi],al
  41a5f9:	mov    al,0x7c
  41a5fb:	(bad)  
  41a5fc:	js     0x41a5d9
  41a5fe:	aam    0xdf
  41a600:	ins    DWORD PTR es:[edi],dx
  41a601:	jl     0x41a651
  41a603:	mov    bh,0x3
  41a605:	push   es
  41a606:	push   eax
  41a607:	stc    
  41a608:	in     eax,dx
  41a609:	call   0x213c4ec0
  41a60e:	xor    esp,edi
  41a610:	dec    ebp
  41a611:	and    BYTE PTR [ebx-0x46],0xcf
  41a615:	dec    ebx
  41a616:	sbb    ecx,DWORD PTR [edi]
  41a618:	repnz ins BYTE PTR es:[edi],dx
  41a61a:	leave  
  41a61b:	test   BYTE PTR ds:[eax-0x3f73c952],dl
  41a622:	cdq    
  41a623:	xchg   ebx,eax
  41a624:	fst    QWORD PTR [edx-0x26]
  41a627:	sbb    al,0x7a
  41a629:	dec    esp
  41a62a:	mov    BYTE PTR [esi-0x74],dh
  41a62d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a62e:	arpl   WORD PTR [ebx+0x22b858ef],ax
  41a634:	(bad)  [ecx+0x18]
  41a637:	push   ecx
  41a638:	mov    ds:0xb980292a,eax
  41a63d:	jmp    0x41a610
  41a63f:	cwde   
  41a640:	loop   0x41a662
  41a642:	inc    edi
  41a643:	mov    dh,0x68
  41a645:	outs   dx,DWORD PTR ds:[esi]
  41a646:	ins    BYTE PTR es:[edi],dx
  41a647:	jl     0x41a6b1
  41a649:	xchg   edx,eax
  41a64a:	and    DWORD PTR [bp+di],edi
  41a64d:	(bad)  
  41a64e:	imul   ah
  41a650:	stos   BYTE PTR es:[edi],al
  41a651:	in     al,dx
  41a652:	mov    eax,ds:0xc9e696c
  41a657:	or     BYTE PTR [ebp-0x2a],al
  41a65a:	push   eax
  41a65b:	mov    ebp,0x49242858
  41a660:	push   edi
  41a661:	pop    edx
  41a662:	(bad)  
  41a664:	aas    
  41a665:	enter  0x9c72,0xb2
  41a669:	scas   al,BYTE PTR es:[edi]
  41a66a:	(bad)  
  41a66b:	xor    ebp,ebp
  41a66d:	cld    
  41a66e:	cmp    al,0x3f
  41a670:	aaa    
  41a671:	sub    edi,DWORD PTR [ecx]
  41a673:	fidiv  WORD PTR [edi]
  41a675:	xchg   esp,eax
  41a676:	div    DWORD PTR [eax+ebx*2+0x7d]
  41a67a:	and    al,0x7f
  41a67c:	sbb    eax,0x494aa630
  41a681:	mov    edx,0x13f53b30
  41a686:	dec    ebp
  41a687:	outs   dx,BYTE PTR ds:[esi]
  41a688:	pop    es
  41a689:	ror    esp,1
  41a68b:	mov    ah,0x6f
  41a68d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a68e:	sub    ebp,DWORD PTR [eax]
  41a690:	retf   
  41a691:	enter  0x1e09,0x39
  41a695:	and    edi,DWORD PTR [ebp+0x2dd72a2a]
  41a69b:	loop   0x41a71c
  41a69d:	pop    eax
  41a69e:	out    0x10,al
  41a6a0:	arpl   WORD PTR [edx],bp
  41a6a2:	int    0x28
  41a6a4:	pop    es
  41a6a5:	stc    
  41a6a6:	int3   
  41a6a7:	gs inc edx
  41a6a9:	mov    ah,BYTE PTR [ebp+edi*1-0x52]
  41a6ad:	xchg   ebp,eax
  41a6ae:	scas   al,BYTE PTR es:[edi]
  41a6af:	sub    dl,BYTE PTR [edi*1+0x6e6d3045]
  41a6b6:	xor    DWORD PTR [ecx-0x3a],0xad951cf1
  41a6bd:	sahf   
  41a6be:	dec    edx
  41a6bf:	adc    BYTE PTR [eax],cl
  41a6c1:	repnz add ebx,DWORD PTR [ebp-0x144bbba1]
  41a6c8:	xchg   esp,eax
  41a6c9:	lods   eax,DWORD PTR ds:[esi]
  41a6ca:	enter  0xaae6,0xb0
  41a6ce:	popa   
  41a6cf:	lea    ecx,[eax+0x5f]
  41a6d2:	xchg   edx,eax
  41a6d3:	lds    edi,FWORD PTR [ebx]
  41a6d5:	adc    ebp,esi
  41a6d7:	fadd   DWORD PTR [ebp+0xf]
  41a6da:	mov    ecx,0x19f925a5
  41a6df:	mov    cl,0x24
  41a6e1:	shl    DWORD PTR [ecx],1
  41a6e3:	jmp    0xa5d94a59
  41a6e8:	popf   
  41a6e9:	mov    dh,0x4e
  41a6eb:	inc    edi
  41a6ec:	out    dx,al
  41a6ed:	int3   
  41a6ee:	popf   
  41a6ef:	aad    0xc9
  41a6f1:	outs   dx,BYTE PTR ds:[esi]
  41a6f2:	add    DWORD PTR [ebx],esp
  41a6f4:	mov    cl,0xd3
  41a6f6:	xchg   ebx,eax
  41a6f7:	ret    
  41a6f8:	pop    ss
  41a6f9:	lock jl 0x41a70d
  41a6fc:	inc    edi
  41a6fd:	mov    bl,0x28
  41a6ff:	dec    edx
  41a700:	pop    ebp
  41a701:	sbb    DWORD PTR [edi+0x2d],ecx
  41a704:	sbb    dh,ch
  41a706:	mov    edi,0x9c5c2162
  41a70b:	(bad)  
  41a70c:	outs   dx,BYTE PTR ds:[esi]
  41a70d:	jecxz  0x41a6f4
  41a70f:	loope  0x41a781
  41a711:	xor    al,dh
  41a713:	lods   eax,DWORD PTR ds:[esi]
  41a714:	mov    ah,0xd4
  41a716:	dec    esi
  41a717:	imul   eax,ecx,0x6d
  41a71a:	nop
  41a71b:	cli    
  41a71c:	ins    BYTE PTR es:[edi],dx
  41a71d:	cmp    ch,ah
  41a71f:	xchg   esi,eax
  41a720:	jae    0x41a71e
  41a722:	push   eax
  41a723:	xchg   edx,eax
  41a724:	pop    esp
  41a725:	inc    edx
  41a726:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a727:	mov    BYTE PTR [edi+0x52],al
  41a72a:	mov    esp,0xba11059
  41a72f:	call   0x1c7f:0x2a7ae1c6
  41a736:	outs   dx,BYTE PTR ds:[esi]
  41a737:	test   BYTE PTR [ebp+0x7db02e79],ah
  41a73d:	aaa    
  41a73e:	or     eax,0x2843f78f
  41a743:	aas    
  41a744:	dec    ebx
  41a745:	out    0x16,eax
  41a747:	adc    eax,0x23839781
  41a74c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a74d:	xchg   ecx,eax
  41a74e:	add    dl,BYTE PTR [ebx-0x5d6b7f46]
  41a754:	cld    
  41a755:	mov    dl,0x35
  41a757:	add    al,0x58
  41a759:	test   DWORD PTR [esi-0x6d7769f0],0x7e9f1344
  41a763:	loope  0x41a739
  41a765:	mov    edi,0x3a734f03
  41a76a:	popa   
  41a76b:	xchg   ecx,eax
  41a76c:	xchg   esp,eax
  41a76d:	out    dx,al
  41a76e:	iret   
  41a76f:	outs   dx,DWORD PTR ds:[esi]
  41a770:	retf   
  41a771:	pop    ecx
  41a772:	sar    DWORD PTR [ebp+0x52355e17],0xdc
  41a779:	dec    edx
  41a77a:	mov    al,0x64
  41a77c:	ror    DWORD PTR [ecx],0xa5
  41a77f:	jae    0x41a73a
  41a781:	ds sub ch,ch
  41a784:	cli    
  41a785:	xchg   esp,eax
  41a786:	or     ecx,ecx
  41a788:	sub    edx,DWORD PTR [edx+0x5ef977fb]
  41a78e:	mov    edi,0x1881e230
  41a793:	jmp    0x41a73b
  41a795:	mov    DWORD PTR [ecx+0x4d9e3a41],ebx
  41a79b:	jae    0x41a79f
  41a79d:	push   esp
  41a79e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a79f:	aad    0xae
  41a7a1:	xlat   BYTE PTR ds:[ebx]
  41a7a2:	in     eax,0xf8
  41a7a4:	lods   eax,DWORD PTR ds:[esi]
  41a7a5:	out    0x27,eax
  41a7a7:	mov    ebx,0xd8d23075
  41a7ac:	popf   
  41a7ad:	xchg   ecx,eax
  41a7ae:	out    0x73,eax
  41a7b0:	int3   
  41a7b1:	cmp    eax,0x41fdb608
  41a7b6:	mov    eax,0x6a22de66
  41a7bb:	outs   dx,DWORD PTR ds:[esi]
  41a7bc:	jg     0x41a7de
  41a7be:	bound  ebx,QWORD PTR [ecx-0x3a879d46]
  41a7c4:	jl     0x41a824
  41a7c6:	rcr    ebp,cl
  41a7c8:	test   eax,0xd6a2471b
  41a7cd:	gs in  al,0xa2
  41a7d0:	retf   0x5db7
  41a7d3:	dec    ecx
  41a7d4:	es mov ch,0x78
  41a7d7:	mov    ch,0xa3
  41a7d9:	je     0x41a79f
  41a7db:	xor    al,BYTE PTR [bp+0x30]
  41a7df:	shl    ah,1
  41a7e1:	clc    
  41a7e2:	or     ebp,DWORD PTR [edx-0x9]
  41a7e5:	dec    ebp
  41a7e6:	mov    al,0x60
  41a7e8:	mov    al,ds:0x31f5bc0b
  41a7ed:	fisubr WORD PTR [edx+eiz*8]
  41a7f0:	mov    al,0xbf
  41a7f2:	(bad)  
  41a7f3:	mov    al,0xca
  41a7f5:	das    
  41a7f6:	shr    DWORD PTR [ebp+0x231b2ab6],1
  41a7fc:	cmp    al,0xe8
  41a7fe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a7ff:	xor    DWORD PTR [esi-0x20],edi
  41a802:	arpl   WORD PTR [edi-0x22],sp
  41a805:	pop    ss
  41a806:	add    eax,0xfbeac18a
  41a80b:	fdiv   QWORD PTR [edx+0x57c64099]
  41a811:	imul   DWORD PTR [ebp-0x32dfcbe3]
  41a817:	(bad)  
  41a818:	mov    edi,0x74cdd2ca
  41a81d:	in     al,0x2c
  41a81f:	pop    edx
  41a820:	mov    ds:0x9ab0df6,al
  41a825:	pop    ebx
  41a826:	mov    DWORD PTR [ebx+0x4f],esi
  41a829:	call   0x528b:0x829ca161
  41a830:	jle    0x41a7be
  41a832:	aam    0x55
  41a834:	sub    ah,bh
  41a836:	sti    
  41a837:	xor    BYTE PTR [ebp-0x5],0xd4
  41a83b:	stos   BYTE PTR es:[edi],al
  41a83c:	push   ebx
  41a83d:	cmp    BYTE PTR [edx+edi*1-0x28],0x4c
  41a842:	inc    ebx
  41a843:	jno    0x41a886
  41a845:	add    eax,0xa9b5447b
  41a84a:	add    al,0x9c
  41a84c:	jnp    0x41a8a8
  41a84e:	mov    ds:0x4313d988,al
  41a853:	ficom  WORD PTR [ecx]
  41a855:	imul   edx,edi,0x5d
  41a858:	dec    edx
  41a859:	sar    esp,cl
  41a85b:	outs   dx,BYTE PTR ds:[esi]
  41a85c:	jg     0x41a872
  41a85e:	push   edi
  41a85f:	jns    0x41a836
  41a861:	in     eax,0x72
  41a863:	cmp    DWORD PTR [edx+0x67],edi
  41a866:	push   es
  41a867:	xchg   esi,eax
  41a868:	sub    DWORD PTR [edi+0x2c],edi
  41a86b:	test   DWORD PTR [ebp+0x2a041881],edx
  41a871:	pop    esi
  41a872:	add    ah,dl
  41a874:	push   esp
  41a875:	mov    esi,ebp
  41a877:	stc    
  41a878:	adc    ebp,DWORD PTR [edi+0x5c]
  41a87b:	les    esp,FWORD PTR [ebp+0x4b]
  41a87e:	push   edi
  41a87f:	dec    esi
  41a880:	inc    esi
  41a881:	xor    bh,0x21
  41a884:	mov    ds:0x8e065c41,al
  41a889:	jge    0x41a8f8
  41a88b:	inc    edi
  41a88c:	jne    0x41a89a
  41a88e:	jne    0x41a8d3
  41a890:	test   bl,0x89
  41a893:	mov    BYTE PTR [edi+esi*4-0x41],al
  41a897:	inc    edx
  41a898:	mov    edi,0x143fda5b
  41a89d:	int3   
  41a89e:	mov    ebx,0x4e86caaf
  41a8a3:	stos   DWORD PTR es:[edi],eax
  41a8a4:	mov    al,ds:0x91eb7af8
  41a8a9:	in     eax,0x12
  41a8ab:	xlat   BYTE PTR ds:[ebx]
  41a8ac:	leave  
  41a8ad:	fisttp WORD PTR [esi+0x3e]
  41a8b0:	adc    DWORD PTR [edi],eax
  41a8b2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a8b3:	and    DWORD PTR [edx+0x56],ecx
  41a8b6:	es cmp eax,0x2803fed4
  41a8bd:	ds data16 repz in al,dx
  41a8c1:	test   DWORD PTR [edx-0x24],ebp
  41a8c4:	lods   al,BYTE PTR ds:[esi]
  41a8c5:	jp     0x41a84d
  41a8c7:	push   ss
  41a8c8:	ret    0xd14a
  41a8cb:	or     dl,BYTE PTR [esi]
  41a8cd:	jle    0x41a919
  41a8cf:	mov    dl,0x26
  41a8d1:	lods   al,BYTE PTR ds:[esi]
  41a8d2:	jl     0x41a8f2
  41a8d4:	stc    
  41a8d5:	jno    0x41a907
  41a8d7:	jp     0x41a86d
  41a8d9:	ret    
  41a8da:	inc    edx
  41a8db:	daa    
  41a8dc:	leave  
  41a8dd:	enter  0xc11b,0x44
  41a8e1:	cmp    DWORD PTR [eax-0x3223da2b],edx
  41a8e7:	xor    ecx,DWORD PTR [edi]
  41a8e9:	jle    0x41a893
  41a8eb:	loopne 0x41a96b
  41a8ed:	xor    bh,0x61
  41a8f0:	out    0xeb,al
  41a8f2:	scas   eax,DWORD PTR es:[edi]
  41a8f3:	xor    esp,DWORD PTR [eax]
  41a8f5:	push   cs
  41a8f6:	jp     0x41a947
  41a8f8:	(bad)  
  41a8f9:	ins    BYTE PTR es:[edi],dx
  41a8fa:	lods   al,BYTE PTR ds:[esi]
  41a8fb:	and    DWORD PTR [esi],0xffffffb9
  41a8fe:	or     edx,edi
  41a900:	and    eax,esp
  41a902:	adc    eax,0xd83804f9
  41a907:	shl    DWORD PTR [eax+0x4d],1
  41a90a:	or     DWORD PTR [edx+esi*4+0x6be739a],edi
  41a911:	cmp    eax,0xaa7b534
  41a916:	pmovmskb ebp,mm5
  41a919:	nop
  41a91a:	in     al,dx
  41a91b:	stos   BYTE PTR es:[edi],al
  41a91c:	mov    ds:0x2bb31044,al
  41a921:	into   
  41a922:	fistp  QWORD PTR [eax]
  41a924:	daa    
  41a925:	hlt    
  41a926:	mov    cl,0x87
  41a928:	loope  0x41a924
  41a92a:	or     ah,BYTE PTR [ecx]
  41a92c:	out    0x76,al
  41a92e:	and    DWORD PTR [edx],0x4c3e6c9
  41a934:	inc    ebp
  41a935:	pop    ds
  41a936:	cmp    BYTE PTR [eax],ch
  41a938:	pop    eax
  41a939:	jns    0x41a96d
  41a93b:	xor    edx,DWORD PTR [ecx]
  41a93d:	ficom  WORD PTR [eax+ecx*2-0x73]
  41a941:	out    0xd7,eax
  41a943:	cmp    edi,ebp
  41a945:	xchg   BYTE PTR [edx],cl
  41a947:	pop    ecx
  41a948:	sbb    al,0xe7
  41a94a:	test   dh,dh
  41a94c:	div    ah
  41a94e:	aad    0x99
  41a950:	dec    edi
  41a951:	cli    
  41a952:	enter  0x17da,0xca
  41a956:	xchg   edi,eax
  41a957:	aam    0x39
  41a959:	jae    0x41a9bb
  41a95b:	std    
  41a95c:	mov    al,ds:0x2c92193f
  41a961:	repnz dec ebp
  41a963:	add    BYTE PTR [ebx+eiz*2+0x7f1dab7d],bh
  41a96a:	cmp    al,0xd6
  41a96c:	out    0x28,eax
  41a96e:	pop    es
  41a96f:	hlt    
  41a970:	mov    BYTE PTR [ebp-0x80],ah
  41a973:	pop    ss
  41a974:	je     0x41a9a0
  41a976:	int3   
  41a977:	pop    esp
  41a978:	push   esi
  41a979:	pop    es
  41a97a:	call   0xecb0f021
  41a97f:	pop    ebx
  41a980:	and    al,0x32
  41a982:	retf   
  41a983:	mov    al,0x28
  41a985:	daa    
  41a986:	call   0x2ea6:0xe96417f0
  41a98d:	add    al,0xc9
  41a98f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a990:	das    
  41a991:	pop    ebp
  41a992:	xchg   ebp,eax
  41a993:	dec    ebp
  41a994:	xor    BYTE PTR [esi],ah
  41a996:	stos   DWORD PTR es:[edi],eax
  41a997:	sub    ebp,edi
  41a999:	inc    esi
  41a99a:	test   DWORD PTR [eax],esp
  41a99c:	mov    WORD PTR [ecx+0x58c2f82b],es
  41a9a2:	sbb    eax,0xcb71c1ec
  41a9a7:	das    
  41a9a8:	js     0x41a92f
  41a9aa:	xlat   BYTE PTR ds:[ebx]
  41a9ab:	ret    0x7b2a
  41a9ae:	inc    ecx
  41a9af:	(bad)  
  41a9b1:	pavgw  mm2,QWORD PTR [edx+0xa]
  41a9b5:	int3   
  41a9b6:	cmp    al,0x1f
  41a9b8:	(bad)  
  41a9ba:	xor    al,0xc4
  41a9bc:	in     eax,0x50
  41a9be:	mov    eax,0xbf120d47
  41a9c3:	push   ecx
  41a9c4:	in     eax,0xce
  41a9c6:	ds repnz aad 0x61
  41a9ca:	pop    eax
  41a9cb:	mov    dh,0x35
  41a9cd:	jge    0x41aa17
  41a9cf:	pop    edx
  41a9d0:	aaa    
  41a9d1:	and    al,0xe0
  41a9d3:	ins    BYTE PTR es:[edi],dx
  41a9d4:	stos   DWORD PTR es:[edi],eax
  41a9d5:	lods   al,BYTE PTR ds:[esi]
  41a9d6:	or     edi,DWORD PTR [ebp-0x4]
  41a9d9:	cmp    dh,BYTE PTR [edx-0x1abd062]
  41a9df:	aad    0x73
  41a9e1:	jmp    0x41aa22
  41a9e3:	mov    al,0xaa
  41a9e5:	inc    ebx
  41a9e6:	neg    BYTE PTR [esi-0x14]
  41a9e9:	cli    
  41a9ea:	dec    ebx
  41a9ec:	mov    esp,0x6b2c5ac3
  41a9f1:	fsub   QWORD PTR [edx+0x7f]
  41a9f4:	out    dx,eax
  41a9f5:	adc    al,0x98
  41a9f7:	mov    eax,ds:0x19f43492
  41a9fc:	fidivr DWORD PTR [ecx+0x49]
  41a9ff:	dec    dh
  41aa01:	fmul   st(1),st
  41aa03:	pop    ss
  41aa04:	xor    BYTE PTR [ebx-0x4],al
  41aa07:	sub    BYTE PTR [edx],dh
  41aa09:	pop    edi
  41aa0a:	inc    ebp
  41aa0b:	pop    edx
  41aa0c:	mov    al,0x41
  41aa0e:	xchg   ebp,eax
  41aa0f:	jne    0x41a9f9
  41aa11:	shr    BYTE PTR [ecx+0x35],cl
  41aa14:	stc    
  41aa15:	ss inc edx
  41aa17:	shl    BYTE PTR [esp+eax*8-0x13],1
  41aa1b:	std    
  41aa1c:	cmp    ebx,edx
  41aa1e:	retf   
  41aa1f:	outs   dx,BYTE PTR ds:[esi]
  41aa20:	retf   
  41aa21:	adc    dl,BYTE PTR [ecx-0x431f4d54]
  41aa27:	cld    
  41aa28:	mov    esp,0x26f40a18
  41aa2d:	leave  
  41aa2e:	add    al,0xec
  41aa30:	pop    ds
  41aa31:	jo     0x41a9c7
  41aa33:	push   0x29
  41aa35:	loope  0x41aa4e
  41aa37:	adc    esi,ecx
  41aa39:	(bad)  
  41aa3a:	mov    ebp,0xadf66ada
  41aa3f:	daa    
  41aa40:	inc    ebx
  41aa41:	call   0xfa28:0xf5bb8741
  41aa48:	mov    ebp,0x7e41de80
  41aa4d:	adc    al,0x4c
  41aa4f:	ins    DWORD PTR es:[edi],dx
  41aa50:	(bad)  
  41aa52:	lods   eax,DWORD PTR ds:[esi]
  41aa53:	xchg   edx,eax
  41aa54:	mov    ds:0x231f8171,eax
  41aa59:	das    
  41aa5a:	push   ds
  41aa5b:	inc    ebp
  41aa5c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41aa5d:	cld    
  41aa5e:	je     0x41aa12
  41aa60:	pop    ebp
  41aa61:	shr    BYTE PTR [esi+0x13],1
  41aa64:	or     bl,ah
  41aa66:	imul   edx,ebp,0xffffff9e
  41aa69:	ja     0x41a9ef
  41aa6b:	sbb    eax,0x3a94a3eb
  41aa70:	sub    DWORD PTR [esi+ecx*2+0x2a],ebp
  41aa74:	ins    DWORD PTR es:[edi],dx
  41aa75:	fild   QWORD PTR [edx-0x2be210b9]
  41aa7b:	fldlg2 
  41aa7d:	ret    0x355c
  41aa80:	or     eax,0xbc6e0e7f
  41aa85:	cmp    eax,edi
  41aa87:	adc    ecx,DWORD PTR [edx+0x166ca2dc]
  41aa8d:	arpl   cx,bp
  41aa8f:	lock cmp dl,cl
  41aa92:	or     DWORD PTR [eax-0x73061ee9],edx
  41aa98:	jae    0x41aa9e
  41aa9a:	mov    dh,0x1d
  41aa9c:	pop    es
  41aa9d:	xchg   edx,eax
  41aa9e:	out    dx,al
  41aa9f:	jbe    0x41aa21
  41aaa1:	out    0x12,al
  41aaa3:	stos   DWORD PTR es:[edi],eax
  41aaa4:	xchg   edx,eax
  41aaa5:	cli    
  41aaa6:	clc    
  41aaa7:	jp     0x41aa75
  41aaa9:	inc    ecx
  41aaaa:	push   esp
  41aaab:	or     dl,BYTE PTR [eax-0x16]
  41aaae:	mov    eax,ds:0x1455ae3d
  41aab3:	stos   DWORD PTR es:[edi],eax
  41aab4:	pop    edx
  41aab5:	sahf   
  41aab6:	xor    eax,0x88aff087
  41aabb:	xlat   BYTE PTR ds:[ebx]
  41aabc:	in     al,dx
  41aabd:	pop    ss
  41aabe:	push   0x31
  41aac0:	shl    BYTE PTR [ebx],0x1
  41aac3:	xchg   ebp,eax
  41aac4:	push   0xe47ec882
  41aac9:	scas   eax,DWORD PTR es:[edi]
  41aaca:	into   
  41aacb:	aaa    
  41aacc:	sahf   
  41aacd:	push   edi
  41aace:	pop    eax
  41aacf:	ins    BYTE PTR es:[edi],dx
  41aad0:	test   DWORD PTR [ebp+0x5e],esi
  41aad3:	pop    ss
  41aad4:	pop    ecx
  41aad5:	mov    bh,0xa5
  41aad7:	mov    esp,DWORD PTR [edx+ecx*2]
  41aada:	cmp    DWORD PTR [ebx-0x4e],esp
  41aadd:	stos   BYTE PTR es:[edi],al
  41aade:	out    dx,al
  41aadf:	adc    eax,0xc7563ad0
  41aae4:	ror    BYTE PTR [ecx+0x205042f5],1
  41aaea:	rcl    BYTE PTR [ebx-0x40],0x76
  41aaee:	xchg   esi,eax
  41aaef:	sti    
  41aaf0:	and    DWORD PTR fs:0x6243957,eax
  41aaf7:	jl     0x41aada
  41aaf9:	(bad)  
  41aafa:	shl    BYTE PTR [edi*8-0x52d32992],1
  41ab01:	popf   
  41ab02:	(bad)  
  41ab03:	pop    ebx
  41ab04:	outs   dx,DWORD PTR ds:[esi]
  41ab05:	out    dx,al
  41ab06:	xor    edi,DWORD PTR [esi+0x6a8a08ee]
  41ab0c:	push   esp
  41ab0d:	mov    ecx,0xb366bfce
  41ab12:	popa   
  41ab13:	in     al,0x73
  41ab15:	ins    BYTE PTR es:[edi],dx
  41ab16:	pop    eax
  41ab17:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ab18:	inc    esi
  41ab19:	mov    eax,ds:0x646eddb0
  41ab1e:	in     al,0x96
  41ab20:	pop    edx
  41ab21:	shl    DWORD PTR [edx+0x2b],0x49
  41ab25:	xor    dh,BYTE PTR [ecx*2-0x25edfa6d]
  41ab2c:	mov    esi,0xd956a28a
  41ab32:	xor    eax,0xb18ab630
  41ab37:	out    0xec,al
  41ab39:	or     eax,0x62fffc8
  41ab3e:	int    0x6c
  41ab40:	pop    ebp
  41ab41:	fwait
  41ab42:	pop    edx
  41ab43:	leave  
  41ab44:	ret    0x4e8e
  41ab47:	rcr    esp,1
  41ab49:	jo     0x41ab74
  41ab4b:	out    dx,al
  41ab4c:	std    
  41ab4d:	ret    
  41ab4e:	inc    edi
  41ab4f:	aam    0xd4
  41ab51:	mov    edi,0x7ba018e9
  41ab56:	shl    esi,cl
  41ab58:	jo     0x41abce
  41ab5a:	fcom   st(4)
  41ab5c:	aas    
  41ab5d:	sub    al,0x2d
  41ab5f:	aaa    
  41ab60:	sbb    DWORD PTR [edi+0x13],ebx
  41ab63:	repz push edi
  41ab65:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ab66:	add    esi,DWORD PTR [ebp+0x1e]
  41ab69:	dec    esi
  41ab6a:	xchg   edi,eax
  41ab6b:	dec    DWORD PTR [esi-0xb]
  41ab6e:	add    edx,DWORD PTR ds:0x8cd68f66
  41ab74:	shl    DWORD PTR [edx+0x66],0x6c
  41ab78:	dec    edi
  41ab79:	call   0xdb1e:0x65543e5b
  41ab80:	ret    
  41ab81:	xor    ch,BYTE PTR [edx-0x4b]
  41ab84:	cld    
  41ab85:	inc    edx
  41ab86:	mul    DWORD PTR [ebx+0x36]
  41ab89:	sti    
  41ab8a:	dec    edi
  41ab8b:	retf   
  41ab8c:	clc    
  41ab8d:	je     0x41ab64
  41ab8f:	arpl   ax,si
  41ab91:	cld    
  41ab92:	popf   
  41ab93:	cld    
  41ab94:	or     eax,0xa6bed366
  41ab99:	scas   al,BYTE PTR es:[edi]
  41ab9a:	daa    
  41ab9b:	and    eax,0xdc837ccc
  41aba0:	sub    eax,0xb4467c53
  41aba5:	pop    esp
  41aba6:	test   eax,0x1e3c20b5
  41abab:	dec    ebp
  41abac:	fcom   DWORD PTR [ebp-0x60d01661]
  41abb2:	sub    BYTE PTR ds:0xf67c71f3,ch
  41abb8:	sub    bh,BYTE PTR [edi+ebx*4]
  41abbb:	xchg   ebx,eax
  41abbc:	fsubr  DWORD PTR [edi-0x966cc8a]
  41abc2:	inc    esp
  41abc3:	or     ecx,DWORD PTR [eax+eax*8-0x3ace393e]
  41abca:	dec    esi
  41abcb:	sbb    edi,DWORD PTR [ebx+0x3b61974]
  41abd1:	mov    al,ds:0x2d2b99bc
  41abd6:	arpl   WORD PTR [edi+esi*4],di
  41abd9:	ret    
  41abda:	or     DWORD PTR [ebp+0x7e],edx
  41abdd:	femms  
  41abdf:	xchg   DWORD PTR [ebx-0x2e00534d],ecx
  41abe5:	sar    BYTE PTR [edi-0x7eafd84],cl
  41abeb:	into   
  41abec:	cmp    DWORD PTR [esi-0x6c63a6b1],0x1
  41abf3:	mov    ebx,0x75fdb0fb
  41abf8:	mov    ebx,0x83be6ad9
  41abfd:	sbb    ah,BYTE PTR ds:0x8b70922e
  41ac03:	iret   
  41ac04:	cmp    al,0xf2
  41ac06:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ac07:	int    0xd9
  41ac09:	ds je  0x41ac32
  41ac0c:	out    0x3,al
  41ac0e:	sub    DWORD PTR [ecx+esi*8],ebp
  41ac11:	mov    dl,0xeb
  41ac13:	aas    
  41ac14:	aam    0x14
  41ac16:	dec    esp
  41ac17:	imul   esi,DWORD PTR [edi-0x58],0x31
  41ac1b:	iret   
  41ac1c:	add    al,al
  41ac1e:	sti    
  41ac1f:	cmp    edi,DWORD PTR [ebx+0x133a4c04]
  41ac25:	xchg   ebp,eax
  41ac26:	dec    ebx
  41ac27:	mov    DWORD PTR [ebp-0x61777b86],edx
  41ac2d:	lahf   
  41ac2e:	mov    dh,0x90
  41ac30:	frstor ds:0xaafa9dc
  41ac36:	data16 mov WORD PTR [edx+0x1a07af9d],ds
  41ac3d:	sbb    DWORD PTR [ebx+eiz*8-0x23],ebx
  41ac41:	xor    BYTE PTR [ebx+0x2bffd9bc],0x99
  41ac48:	xchg   DWORD PTR [esi-0x23],esp
  41ac4b:	add    BYTE PTR es:[ebp+0x16],al
  41ac4f:	cmp    al,0x1b
  41ac51:	mov    ebp,0xe9e1242d
  41ac56:	ds test al,0x3f
  41ac59:	je     0x41accc
  41ac5b:	imul   eax,DWORD PTR [ecx-0x49],0x2
  41ac5f:	jmp    0x12a8424
  41ac64:	sbb    dh,BYTE PTR [edx+0x16]
  41ac67:	ins    BYTE PTR es:[edi],dx
  41ac68:	stc    
  41ac69:	cdq    
  41ac6a:	retf   
  41ac6b:	mov    ebx,0xb3a77636
  41ac70:	xor    al,ch
  41ac72:	lods   al,BYTE PTR ds:[esi]
  41ac73:	mov    ecx,0x1c8ea590
  41ac78:	ins    DWORD PTR es:[edi],dx
  41ac79:	jb     0x41acba
  41ac7b:	cmp    edi,DWORD PTR [eax+0x4662679a]
  41ac81:	shl    DWORD PTR [esp+ecx*2-0x7d3276e9],1
  41ac88:	iret   
  41ac89:	mov    esp,0xee30c1c4
  41ac8e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ac8f:	inc    esp
  41ac90:	mov    edi,0x500dd9c5
  41ac95:	test   eax,esp
  41ac97:	jl     0x41acd7
  41ac99:	je     0x41ad07
  41ac9b:	jmp    0x7ec873c
  41aca0:	mov    ebp,0x94383b1c
  41aca5:	mov    edi,0xe173c4b4
  41acaa:	inc    ebx
  41acab:	add    eax,DWORD PTR [ecx+0x181e69d]
  41acb1:	push   eax
  41acb2:	sub    eax,0xd81172d6
  41acb7:	xor    esi,eax
  41acb9:	mov    WORD PTR [edx],gs
  41acbb:	mov    dh,0xb2
  41acbd:	sbb    DWORD PTR [ebp+0x10],ecx
  41acc0:	mov    cl,0x95
  41acc2:	addr16 mov ecx,0x85a17c04
  41acc8:	mov    edi,0x8398f6b4
  41accd:	sub    al,0x73
  41accf:	pop    eax
  41acd0:	xchg   edx,eax
  41acd1:	sub    al,0x9a
  41acd3:	cld    
  41acd4:	mov    bh,0x43
  41acd6:	or     DWORD PTR [edi-0x24a121aa],eax
  41acdc:	add    ebp,edx
  41acde:	test   BYTE PTR [ebp+0x76fbaa27],0x18
  41ace5:	popf   
  41ace6:	or     BYTE PTR [esi],0x56
  41ace9:	sahf   
  41acea:	cs xchg ebx,eax
  41acec:	and    ah,BYTE PTR [edi]
  41acee:	inc    esi
  41acef:	jmp    0xec90:0x21f22bf6
  41acf6:	int    0x68
  41acf8:	mul    BYTE PTR [ecx]
  41acfa:	(bad)
  41acff:	and    DWORD PTR [esi+0xe],ebx
  41ad02:	loop   0x41ace6
  41ad04:	mov    edx,0x74d7264a
  41ad09:	add    bl,dl
  41ad0b:	enter  0x6da5,0x2c
  41ad0f:	cmp    ebx,DWORD PTR [ecx+ecx*4]
  41ad12:	lds    ebx,FWORD PTR [ebx+0x6ff7f857]
  41ad18:	int3   
  41ad19:	xor    eax,0x4900968b
  41ad1e:	xchg   esp,eax
  41ad1f:	sub    esi,0x1b
  41ad22:	jg     0x41ad5e
  41ad24:	cmovg  esi,DWORD PTR [ebp+0x35]
  41ad28:	test   DWORD PTR [edi-0x30],esi
  41ad2b:	shl    BYTE PTR [ebp-0x5c],cl
  41ad2e:	(bad)  
  41ad30:	mov    ds:0x61097e79,eax
  41ad35:	retf   
  41ad36:	pop    ebp
  41ad37:	out    0x53,al
  41ad39:	dec    esp
  41ad3a:	xchg   esi,eax
  41ad3b:	sub    dx,dx
  41ad3e:	or     edi,DWORD PTR [ecx]
  41ad40:	(bad)  
  41ad41:	sahf   
  41ad42:	out    0xd6,eax
  41ad44:	popf   
  41ad45:	ss jp  0x41ad7a
  41ad48:	and    eax,0xd3dc1eb0
  41ad4d:	popa   
  41ad4e:	aam    0xbd
  41ad50:	aaa    
  41ad51:	into   
  41ad52:	xor    BYTE PTR [ecx+0x53ecaf6c],dh
  41ad58:	fstp   QWORD PTR [eax+0x178469c5]
  41ad5e:	or     DWORD PTR [ebx],ebx
  41ad60:	push   ebx
  41ad61:	push   0xa38dc598
  41ad66:	test   al,0x90
  41ad68:	pop    ss
  41ad69:	lods   al,BYTE PTR ds:[esi]
  41ad6a:	fcomp  DWORD PTR [edi+ebx*8]
  41ad6d:	hlt    
  41ad6e:	das    
  41ad6f:	js     0x41ad90
  41ad71:	xchg   DWORD PTR [esi+0x7071616],ebx
  41ad77:	mov    ebp,0xe1c46401
  41ad7c:	outs   dx,BYTE PTR ds:[esi]
  41ad7d:	aam    0x43
  41ad7f:	iret   
  41ad80:	xor    ebx,0xfffffff5
  41ad83:	mov    ch,0x95
  41ad85:	sbb    eax,ebp
  41ad87:	sbb    DWORD PTR [edx+0x22],edi
  41ad8a:	ins    BYTE PTR es:[edi],dx
  41ad8b:	push   0x10
  41ad8d:	sbb    eax,0x9326ec5a
  41ad92:	cmp    eax,0x72e5bb59
  41ad97:	ja     0x41ad7a
  41ad99:	adc    al,0x17
  41ad9b:	mov    DWORD PTR [ebx-0x233d1e09],ebp
  41ada1:	pop    ebp
  41ada2:	rep stos DWORD PTR es:[edi],eax
  41ada4:	pop    ebp
  41ada5:	mov    bh,0x6b
  41ada7:	mov    dh,0xe9
  41ada9:	pop    esp
  41adaa:	xchg   BYTE PTR [eax-0x18],dl
  41adad:	cli    
  41adae:	mov    dl,0xbc
  41adb0:	push   ds
  41adb1:	retf   
  41adb2:	in     al,0x3c
  41adb4:	and    bh,BYTE PTR [edi+0xb]
  41adb7:	pushf  
  41adb8:	stc    
  41adb9:	cmp    eax,0x5cd7df9a
  41adbe:	sbb    dl,BYTE PTR ds:0x6c8e3646
  41adc4:	out    0xa0,al
  41adc6:	add    bh,dh
  41adc8:	pandn  mm1,QWORD PTR [eax+edx*4-0x30]
  41adcd:	(bad)  
  41adcf:	cmp    al,BYTE PTR [edi]
  41add1:	mov    ds:0x575fd600,eax
  41add6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41add7:	inc    ebx
  41add8:	pop    edi
  41add9:	out    dx,al
  41adda:	retf   
  41addb:	jno    0x41ae2a
  41addd:	push   ebx
  41adde:	and    esi,ecx
  41ade0:	mov    edi,0x6f060101
  41ade5:	push   ebx
  41ade6:	xchg   esi,eax
  41ade7:	cmp    ah,BYTE PTR [edi]
  41ade9:	mov    al,ds:0x631dcd1b
  41adee:	push   ds
  41adef:	mov    ebx,0xbacc646e
  41adf4:	push   DWORD PTR [esp+eax*8+0x27b61eb7]
  41adfb:	and    ecx,DWORD PTR [eax-0x399169ee]
  41ae01:	repnz dec ebp
  41ae03:	stos   BYTE PTR es:[edi],al
  41ae04:	(bad)  
  41ae06:	leave  
  41ae07:	into   
  41ae08:	sti    
  41ae09:	cmp    BYTE PTR [edx+ecx*8],dh
  41ae0c:	rcr    BYTE PTR es:[eax+esi*4+0x6b],1
  41ae11:	imul   esp,DWORD PTR [ecx+ebx*2],0xf094839e
  41ae18:	mov    BYTE PTR [edx+0x6f8f17c9],ch
  41ae1e:	dec    edi
  41ae1f:	pop    DWORD PTR [eax]
  41ae21:	stos   BYTE PTR es:[edi],al
  41ae22:	push   ds
  41ae23:	mov    al,ds:0xc03114d
  41ae28:	inc    edx
  41ae29:	jecxz  0x41ae60
  41ae2b:	hlt    
  41ae2c:	dec    esi
  41ae2d:	fisttp QWORD PTR [ebx+ebp*4+0x64]
  41ae31:	arpl   WORD PTR [ebx+eiz*8+0x45a0140f],di
  41ae38:	das    
  41ae39:	mov    eax,0xea07dcc3
  41ae3e:	sahf   
  41ae3f:	fcom   QWORD PTR [edx+0x43111b48]
  41ae45:	pusha  
  41ae46:	cmovge ebx,DWORD PTR [esi-0x1214addd]
  41ae4d:	lds    ecx,FWORD PTR ds:0x256b5ee5
  41ae53:	imul   ebx,DWORD PTR [eax-0x5f0f994],0x23c8fffb
  41ae5d:	or     al,0xdc
  41ae5f:	push   es
  41ae60:	sbb    DWORD PTR [edx-0x55286a2],edi
  41ae66:	mov    ecx,0x5caa636e
  41ae6b:	mov    eax,ds:0xff0cc518
  41ae70:	call   0x51130ce4
  41ae75:	push   0x30e014b3
  41ae7a:	jb     0x41aedf
  41ae7c:	stos   DWORD PTR es:[edi],eax
  41ae7d:	lock shl BYTE PTR [esi],cl
  41ae80:	push   edx
  41ae81:	fistp  QWORD PTR cs:[esi]
  41ae84:	in     eax,0x97
  41ae86:	fidivr WORD PTR [ebp+0x3e]
  41ae89:	repz pop edi
  41ae8b:	xchg   DWORD PTR [eax-0x23],ebp
  41ae8e:	out    dx,eax
  41ae8f:	ss mov dh,0x92
  41ae92:	shr    DWORD PTR [esi],cl
  41ae94:	add    eax,0xbc5f1c0b
  41ae99:	(bad)  
  41ae9a:	mov    al,0x58
  41ae9c:	out    0x36,al
  41ae9e:	dec    eax
  41ae9f:	cmp    ebx,DWORD PTR [ebx+0x31989ff9]
  41aea5:	pop    esi
  41aea6:	adc    ch,BYTE PTR [ebp-0xe]
  41aea9:	js     0x41ae8d
  41aeab:	adc    al,0x19
  41aead:	pop    edx
  41aeae:	data16 (bad) 
  41aeb0:	int3   
  41aeb1:	and    BYTE PTR [ecx],bl
  41aeb3:	movs   DWORD PTR es:[edi],DWORD PTR fs:[esi]
  41aeb5:	into   
  41aeb6:	out    dx,al
  41aeb7:	pushf  
  41aeb8:	push   ebp
  41aeb9:	call   0x49c4bbd3
  41aebe:	push   esp
  41aebf:	rcr    BYTE PTR [ebp-0x4c3a9681],1
  41aec5:	mov    ebx,DWORD PTR [ebx]
  41aec7:	mov    ah,0x8b
  41aec9:	fiadd  WORD PTR [ebx-0x40]
  41aecc:	fucom  st(6)
  41aece:	xor    DWORD PTR es:[eax+esi*4],esp
  41aed2:	mov    ebp,0xe64fc014
  41aed7:	mov    eax,ds:0xb031c76
  41aedc:	or     BYTE PTR [edx+ebx*8],al
  41aedf:	or     edi,DWORD PTR [ecx-0x33b0d7ec]
  41aee5:	inc    ebp
  41aee6:	cmp    BYTE PTR [ebx],0xf
  41aee9:	adc    eax,0xda88d558
  41aeee:	sbb    al,0x44
  41aef0:	ins    DWORD PTR es:[edi],dx
  41aef1:	iret   
  41aef2:	pop    esp
  41aef3:	in     eax,dx
  41aef4:	cmc    
  41aef5:	bound  edx,QWORD PTR [esi+0x130767bd]
  41aefb:	cmp    DWORD PTR [esi],esi
  41aefd:	sahf   
  41aefe:	dec    ebx
  41aeff:	adc    BYTE PTR [ecx],bl
  41af01:	pop    es
  41af02:	retf   0xa959
  41af05:	(bad)  
  41af06:	fidiv  DWORD PTR [eax+0x5b]
  41af09:	add    al,dl
  41af0b:	mov    ah,0x7c
  41af0d:	mov    dl,0xfe
  41af0f:	imul   eax,DWORD PTR [edx+0x2457481c],0xdd71d8dd
  41af19:	adc    bh,dh
  41af1b:	sbb    ebx,edi
  41af1d:	test   DWORD PTR [ebx+ecx*8+0x8],ebp
  41af21:	dec    ecx
  41af22:	add    ah,ch
  41af24:	mov    WORD PTR [edi],?
  41af26:	cli    
  41af27:	and    eax,0x1ec5cadc
  41af2c:	inc    ebx
  41af2d:	aas    
  41af2e:	or     dh,cl
  41af30:	out    dx,al
  41af31:	(bad)  
  41af32:	fcom   DWORD PTR [esp]
  41af35:	and    ch,ch
  41af37:	push   ebp
  41af38:	add    eax,DWORD PTR [esi+0x39f2f0f1]
  41af3e:	add    bh,bh
  41af40:	stc    
  41af41:	xchg   ebx,eax
  41af42:	inc    esp
  41af43:	xchg   edx,eax
  41af44:	jmp    0xdaaa:0xccb2c59d
  41af4b:	inc    esi
  41af4c:	mov    ebp,0xaff394b9
  41af51:	fmul   QWORD PTR [ecx+0x47]
  41af54:	lock ss inc esp
  41af57:	arpl   WORD PTR [ecx-0x38],bp
  41af5a:	mov    ebp,0x76e26c24
  41af5f:	xchg   esp,eax
  41af60:	icebp  
  41af61:	sub    eax,0x7a03215e
  41af66:	jge    0x41af44
  41af68:	fsubr  st(0),st
  41af6a:	ds push edi
  41af6c:	jle    0x41afc1
  41af6e:	or     BYTE PTR [ebx],cl
  41af70:	je     0x41aefb
  41af72:	shl    BYTE PTR [ecx],1
  41af74:	mov    al,ds:0x1aa7f625
  41af79:	pop    esp
  41af7a:	sub    al,0xd9
  41af7c:	sbb    cl,BYTE PTR [ebx+0x2087848f]
  41af82:	fdivr  DWORD PTR [edi]
  41af84:	shl    BYTE PTR [edi-0x62dc631b],cl
  41af8a:	and    eax,0xf931e0d0
  41af8f:	ret    
  41af90:	xor    ebp,edi
  41af92:	pop    edx
  41af93:	xchg   edi,eax
  41af94:	mov    ah,0x8a
  41af96:	mov    bl,BYTE PTR [ecx-0x326ab2a1]
  41af9c:	cdq    
  41af9d:	mov    WORD PTR [edi+edi*1-0x15],cs
  41afa1:	jnp    0x41af95
  41afa3:	das    
  41afa4:	ret    
  41afa5:	hlt    
  41afa6:	js     0x41b026
  41afa8:	pop    esi
  41afa9:	mov    esi,0x9c5a05e3
  41afae:	adc    BYTE PTR [edx+edi*1-0x5f],al
  41afb2:	mov    esi,0x73c6f092
  41afb7:	ret    0xc070
  41afba:	sbb    BYTE PTR [eax+ebx*8],al
  41afbd:	and    DWORD PTR [edx],0x301a58ff
  41afc3:	test   BYTE PTR [ebp*4+0x2b3a5190],dh
  41afca:	nop
  41afcb:	lds    ebx,FWORD PTR fs:0x5e5422a7
  41afd2:	popf   
  41afd3:	or     eax,0x59aa60e7
  41afd8:	inc    ecx
  41afd9:	jmp    DWORD PTR [esi-0x35]
  41afdc:	adc    al,0x1c
  41afde:	fimul  DWORD PTR [ecx+ebp*8]
  41afe1:	jmp    0x5d89:0xdfcd14a6
  41afe8:	cmp    esi,edi
  41afea:	imul   ecx,DWORD PTR [esi+eiz*8-0x5a],0x7b
  41afef:	bound  edi,QWORD PTR [eax-0x1e]
  41aff2:	sbb    edx,DWORD PTR [edi-0x53]
  41aff5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41aff6:	shl    DWORD PTR cs:[ebx],cl
  41aff9:	sbb    eax,0x91b0b69b
  41affe:	adc    bh,BYTE PTR [eax]
  41b000:	xchg   ecx,eax
  41b001:	outs   dx,DWORD PTR ds:[esi]
  41b002:	cmp    DWORD PTR ss:[edx-0x3f],0xf20e947b
  41b00a:	add    al,0x4a
  41b00c:	mov    edi,0xf5eb36b2
  41b011:	sahf   
  41b012:	enter  0xa488,0x37
  41b016:	ins    DWORD PTR es:[edi],dx
  41b017:	in     al,dx
  41b018:	xor    BYTE PTR [ebp-0x4ed31331],0x34
  41b01f:	popa   
  41b020:	or     DWORD PTR [eax+0x4e],ebp
  41b023:	xor    BYTE PTR [ebp-0x11],al
  41b026:	jle    0x41afe3
  41b028:	xchg   BYTE PTR [ebx],dl
  41b02a:	cmp    dl,ch
  41b02c:	in     eax,0x9b
  41b02e:	add    bl,dh
  41b030:	dec    ebx
  41b031:	jmp    0x41aff8
  41b033:	cs retf 0x1bb6
  41b037:	call   edi
  41b039:	arpl   WORD PTR [eax+eiz*8],ax
  41b03c:	rcr    BYTE PTR [edi],1
  41b03e:	add    BYTE PTR [ebx-0x7525372d],cl
  41b044:	or     ch,cl
  41b046:	jmp    0x77d9bfc0
  41b04b:	cmc    
  41b04c:	stos   BYTE PTR es:[edi],al
  41b04d:	add    eax,0x558bad6e
  41b052:	in     al,dx
  41b053:	mov    DWORD PTR [ebp+0x8],edx
  41b056:	jmp    0x41b0cb
  41b05b:	mov    edx,DWORD PTR [ebp+0x8]
  41b05e:	mov    ebx,DWORD PTR [ebp-0x8]
  41b061:	xor    edx,eax
  41b063:	xor    ebx,eax
  41b065:	sub    edx,ebx
  41b067:	sub    edx,esi
  41b069:	xor    edx,eax
  41b06b:	mov    DWORD PTR [ebp+0x8],edx
  41b06e:	mov    edx,DWORD PTR [ebp+0x8]
  41b071:	mov    ebx,DWORD PTR [ebp-0x58]
  41b074:	add    edx,0x5708f1
  41b07a:	imul   edx,ebx
  41b07d:	mov    DWORD PTR [ebp-0x58],edx
  41b080:	mov    edx,DWORD PTR [ebp+0x8]
  41b083:	mov    ebx,DWORD PTR [ebp-0x54]
  41b086:	add    edx,0x64f893
  41b08c:	or     edx,ebx
  41b08e:	mov    DWORD PTR [ebp-0x54],edx
  41b091:	mov    edx,DWORD PTR [ebp+0x8]
  41b094:	mov    ebx,DWORD PTR [ebp-0x50]
  41b097:	add    edx,ecx
  41b099:	xor    edx,ebx
  41b09b:	mov    DWORD PTR [ebp-0x50],edx
  41b09e:	mov    edx,DWORD PTR [ebp+0x8]
  41b0a1:	mov    ebx,DWORD PTR [ebp-0x4c]
  41b0a4:	add    edx,edi
  41b0a6:	and    edx,ebx
  41b0a8:	mov    DWORD PTR [ebp-0x4c],edx
  41b0ab:	mov    edx,DWORD PTR [ebp+0x8]
  41b0ae:	mov    ebx,DWORD PTR [ebp-0x48]
  41b0b1:	lea    edx,[ebx+edx*1+0x241fcde]
  41b0b8:	mov    DWORD PTR [ebp-0x48],edx
  41b0bb:	mov    edx,DWORD PTR [ebp+0x8]
  41b0be:	mov    ebx,0xfa5e1521
  41b0c3:	sub    ebx,edx
  41b0c5:	add    ebx,DWORD PTR [ebp-0x44]
  41b0c8:	mov    DWORD PTR [ebp-0x44],ebx
  41b0cb:	mov    edx,DWORD PTR [ebp+0x8]
  41b0ce:	xor    edx,eax
  41b0d0:	add    edx,esi
  41b0d2:	jne    0x41b05b
  41b0d8:	mov    edx,DWORD PTR [ebp-0x14]
  41b0db:	mov    DWORD PTR [ebp+0x8],edx
  41b0de:	jmp    0x41b153
  41b0e3:	mov    edx,DWORD PTR [ebp+0x8]
  41b0e6:	mov    ebx,DWORD PTR [ebp-0x8]
  41b0e9:	xor    edx,eax
  41b0eb:	xor    ebx,eax
  41b0ed:	sub    edx,ebx
  41b0ef:	sub    edx,esi
  41b0f1:	xor    edx,eax
  41b0f3:	mov    DWORD PTR [ebp+0x8],edx
  41b0f6:	mov    edx,DWORD PTR [ebp+0x8]
  41b0f9:	mov    ebx,DWORD PTR [ebp-0x58]
  41b0fc:	add    edx,0x5708f1
  41b102:	imul   edx,ebx
  41b105:	mov    DWORD PTR [ebp-0x58],edx
  41b108:	mov    edx,DWORD PTR [ebp+0x8]
  41b10b:	mov    ebx,DWORD PTR [ebp-0x54]
  41b10e:	add    edx,0x64f893
  41b114:	or     edx,ebx
  41b116:	mov    DWORD PTR [ebp-0x54],edx
  41b119:	mov    edx,DWORD PTR [ebp+0x8]
  41b11c:	mov    ebx,DWORD PTR [ebp-0x50]
  41b11f:	add    edx,ecx
  41b121:	xor    edx,ebx
  41b123:	mov    DWORD PTR [ebp-0x50],edx
  41b126:	mov    edx,DWORD PTR [ebp+0x8]
  41b129:	mov    ebx,DWORD PTR [ebp-0x4c]
  41b12c:	add    edx,edi
  41b12e:	and    edx,ebx
  41b130:	mov    DWORD PTR [ebp-0x4c],edx
  41b133:	mov    edx,DWORD PTR [ebp+0x8]
  41b136:	mov    ebx,DWORD PTR [ebp-0x48]
  41b139:	lea    edx,[ebx+edx*1+0x241fcde]
  41b140:	mov    DWORD PTR [ebp-0x48],edx
  41b143:	mov    edx,DWORD PTR [ebp+0x8]
  41b146:	mov    ebx,0xfa5e1521
  41b14b:	sub    ebx,edx
  41b14d:	add    ebx,DWORD PTR [ebp-0x44]
  41b150:	mov    DWORD PTR [ebp-0x44],ebx
  41b153:	mov    edx,DWORD PTR [ebp+0x8]
  41b156:	xor    edx,eax
  41b158:	add    edx,esi
  41b15a:	jne    0x41b0e3
  41b160:	mov    edx,DWORD PTR [ebp-0x8]
  41b163:	mov    ebx,DWORD PTR [ebp-0xc]
  41b166:	xor    edx,eax
  41b168:	lea    edx,[edx+ebx*1+0x3272ec]
  41b16f:	mov    DWORD PTR [ebp-0xc],edx
  41b172:	mov    edx,DWORD PTR [ebp-0x10]
  41b175:	xor    edx,eax
  41b177:	add    edx,esi
  41b179:	jne    0x411e2e
  41b17f:	jmp    0x41d637
  41b184:	mov    ecx,DWORD PTR [ebp-0x14]
  41b187:	mov    DWORD PTR [ebp+0x8],ecx
  41b18a:	jmp    0x41b203
  41b18f:	mov    ecx,DWORD PTR [ebp+0x8]
  41b192:	mov    edx,DWORD PTR [ebp-0x8]
  41b195:	xor    ecx,eax
  41b197:	xor    edx,eax
  41b199:	sub    ecx,edx
  41b19b:	sub    ecx,esi
  41b19d:	xor    ecx,eax
  41b19f:	mov    DWORD PTR [ebp+0x8],ecx
  41b1a2:	mov    ecx,DWORD PTR [ebp+0x8]
  41b1a5:	mov    edx,DWORD PTR [ebp-0x58]
  41b1a8:	add    ecx,0x5708f1
  41b1ae:	imul   ecx,edx
  41b1b1:	mov    DWORD PTR [ebp-0x58],ecx
  41b1b4:	mov    ecx,DWORD PTR [ebp+0x8]
  41b1b7:	mov    edx,DWORD PTR [ebp-0x54]
  41b1ba:	add    ecx,0x64f893
  41b1c0:	or     ecx,edx
  41b1c2:	mov    DWORD PTR [ebp-0x54],ecx
  41b1c5:	mov    ecx,DWORD PTR [ebp+0x8]
  41b1c8:	mov    edx,DWORD PTR [ebp-0x50]
  41b1cb:	add    ecx,0x242ebcc
  41b1d1:	xor    ecx,edx
  41b1d3:	mov    DWORD PTR [ebp-0x50],ecx
  41b1d6:	mov    ecx,DWORD PTR [ebp+0x8]
  41b1d9:	mov    edx,DWORD PTR [ebp-0x4c]
  41b1dc:	add    ecx,edi
  41b1de:	and    ecx,edx
  41b1e0:	mov    DWORD PTR [ebp-0x4c],ecx
  41b1e3:	mov    ecx,DWORD PTR [ebp+0x8]
  41b1e6:	mov    edx,DWORD PTR [ebp-0x48]
  41b1e9:	lea    ecx,[edx+ecx*1+0x241fcde]
  41b1f0:	mov    DWORD PTR [ebp-0x48],ecx
  41b1f3:	mov    ecx,DWORD PTR [ebp+0x8]
  41b1f6:	mov    edx,0xfa5e1521
  41b1fb:	sub    edx,ecx
  41b1fd:	add    edx,DWORD PTR [ebp-0x44]
  41b200:	mov    DWORD PTR [ebp-0x44],edx
  41b203:	mov    ecx,DWORD PTR [ebp+0x8]
  41b206:	xor    ecx,eax
  41b208:	add    ecx,esi
  41b20a:	jne    0x41b18f
  41b210:	jmp    0x41d643
  41b215:	mov    ecx,DWORD PTR [ebp+0x8]
  41b218:	mov    edx,DWORD PTR [ebp-0x8]
  41b21b:	xor    ecx,eax
  41b21d:	xor    edx,eax
  41b21f:	sub    ecx,edx
  41b221:	sub    ecx,esi
  41b223:	xor    ecx,eax
  41b225:	mov    DWORD PTR [ebp+0x8],ecx
  41b228:	mov    ecx,DWORD PTR [ebp+0x8]
  41b22b:	mov    edx,DWORD PTR [ebp-0x58]
  41b22e:	add    ecx,0x5708f1
  41b234:	imul   ecx,edx
  41b237:	mov    DWORD PTR [ebp-0x58],ecx
  41b23a:	mov    ecx,DWORD PTR [ebp+0x8]
  41b23d:	mov    edx,DWORD PTR [ebp-0x54]
  41b240:	add    ecx,0x64f893
  41b246:	or     ecx,edx
  41b248:	mov    DWORD PTR [ebp-0x54],ecx
  41b24b:	mov    ecx,DWORD PTR [ebp+0x8]
  41b24e:	mov    edx,DWORD PTR [ebp-0x50]
  41b251:	add    ecx,0x242ebcc
  41b257:	xor    ecx,edx
  41b259:	mov    DWORD PTR [ebp-0x50],ecx
  41b25c:	mov    ecx,DWORD PTR [ebp+0x8]
  41b25f:	mov    edx,DWORD PTR [ebp-0x4c]
  41b262:	add    ecx,edi
  41b264:	and    ecx,edx
  41b266:	mov    DWORD PTR [ebp-0x4c],ecx
  41b269:	mov    ecx,DWORD PTR [ebp+0x8]
  41b26c:	mov    edx,DWORD PTR [ebp-0x48]
  41b26f:	jmp    0x41d610
  41b274:	enter  0x7064,0x8f
  41b278:	sar    BYTE PTR [ebx+0x7b],0x1b
  41b27c:	add    al,0xea
  41b27e:	sbb    DWORD PTR [ecx],0xf13ca986
  41b284:	mov    dh,0xf0
  41b286:	jge    0x41b302
  41b288:	(bad)  
  41b289:	pop    edi
  41b28a:	jp     0x41b306
  41b28c:	jmp    0xfed4d661
  41b291:	aas    
  41b292:	or     al,0x4
  41b294:	sub    al,0x9c
  41b296:	je     0x41b2a2
  41b298:	stc    
  41b299:	ret    0xffb6
  41b29c:	jbe    0x41b29e
  41b29e:	rcr    BYTE PTR [ebx],cl
  41b2a0:	pop    edx
  41b2a1:	(bad)  
  41b2a2:	ja     0x41b2f6
  41b2a4:	mov    bl,0x35
  41b2a6:	jbe    0x41b31e
  41b2a8:	rcr    BYTE PTR [edx],cl
  41b2aa:	iret   
  41b2ab:	popf   
  41b2ac:	inc    ebp
  41b2ad:	inc    esi
  41b2ae:	aas    
  41b2af:	adc    dl,dl
  41b2b1:	inc    ecx
  41b2b2:	rol    DWORD PTR [edx-0x3d],1
  41b2b5:	pop    ss
  41b2b6:	xchg   edx,eax
  41b2b7:	mov    bh,0xee
  41b2b9:	pushf  
  41b2ba:	jnp    0x41b297
  41b2bc:	in     eax,dx
  41b2bd:	pop    ebx
  41b2be:	dec    edi
  41b2bf:	push   ss
  41b2c0:	sbb    eax,esi
  41b2c2:	cmp    al,0x75
  41b2c4:	xor    al,0x18
  41b2c6:	jo     0x41b2f6
  41b2c8:	mov    fs,WORD PTR [edi-0x31]
  41b2cb:	scas   al,BYTE PTR es:[edi]
  41b2cc:	or     DWORD PTR [ebx-0x5764758b],ecx
  41b2d2:	cvtpi2ps xmm0,QWORD PTR [ebp+0x5c59aa63]
  41b2d9:	add    eax,0xdb8af248
  41b2de:	inc    edi
  41b2df:	(bad)  
  41b2e0:	and    esi,DWORD PTR [ebp-0x721e045a]
  41b2e6:	cmp    ebx,DWORD PTR [edx+0x5c]
  41b2e9:	aaa    
  41b2ea:	cmp    eax,0xf1823fef
  41b2ef:	xor    eax,0xeeb8f0d5
  41b2f4:	loopne 0x41b2b4
  41b2f6:	inc    ebp
  41b2f7:	add    ecx,DWORD PTR [edi]
  41b2f9:	adc    BYTE PTR [edi+0x2b],0x10
  41b2fd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b2fe:	xor    ebx,ebx
  41b300:	dec    ebp
  41b301:	out    dx,eax
  41b302:	dec    esi
  41b303:	std    
  41b304:	mov    bl,dh
  41b306:	push   edi
  41b307:	cmp    al,cl
  41b309:	xchg   edi,eax
  41b30a:	inc    ecx
  41b30b:	(bad)  
  41b30c:	sar    DWORD PTR [esi+0x4e],1
  41b30f:	ror    esi,0xc
  41b312:	pop    ebp
  41b313:	out    0xdc,al
  41b315:	stos   DWORD PTR es:[edi],eax
  41b316:	cli    
  41b317:	pop    ss
  41b318:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b319:	or     al,0xf4
  41b31b:	jae    0x41b2c2
  41b31d:	jecxz  0x41b325
  41b31f:	or     al,BYTE PTR [ebx+0x46]
  41b322:	adc    DWORD PTR [esi-0x2b],edx
  41b325:	fistp  DWORD PTR [esi-0x3f]
  41b328:	es mov dh,0x6c
  41b32b:	xchg   edx,eax
  41b32c:	dec    edx
  41b32d:	and    eax,0x3d923c84
  41b332:	mov    bl,0x68
  41b334:	mov    esi,eax
  41b336:	fwait
  41b337:	jae    0x41b3a6
  41b339:	sub    al,0xf2
  41b33b:	pop    ecx
  41b33c:	xor    eax,0x23def44f
  41b341:	xchg   edx,eax
  41b342:	mov    edx,0x426f86ba
  41b347:	mov    esp,0x9a1984e7
  41b34c:	ds retf 
  41b34e:	push   ecx
  41b34f:	sub    DWORD PTR [eax-0x65],esi
  41b352:	fs aam 0xad
  41b355:	pusha  
  41b356:	dec    ebp
  41b357:	pushf  
  41b358:	sbb    BYTE PTR [esi+edi*2],ch
  41b35b:	loop   0x41b388
  41b35d:	jae    0x41b3ac
  41b35f:	je     0x41b35c
  41b361:	arpl   WORD PTR [eax],dx
  41b363:	call   FWORD PTR [ecx-0x10bb5037]
  41b369:	scas   al,BYTE PTR es:[edi]
  41b36a:	mov    ds:0x95df6fe8,al
  41b36f:	pop    ds
  41b370:	push   ss
  41b371:	mov    ebp,0xd6f3315e
  41b376:	push   ds
  41b377:	nop
  41b378:	in     eax,dx
  41b379:	fbld   TBYTE PTR [ebp+0x6db49fc9]
  41b37f:	or     ebp,DWORD PTR es:[ebp-0x77433d17]
  41b386:	xchg   ecx,eax
  41b387:	sbb    eax,0x50e70bf0
  41b38c:	jmp    0x41b3c6
  41b38e:	stos   BYTE PTR es:[edi],al
  41b38f:	xor    al,0xde
  41b391:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b392:	push   ebp
  41b393:	pop    ebp
  41b394:	push   edx
  41b395:	push   esi
  41b396:	cli    
  41b397:	aaa    
  41b398:	popa   
  41b399:	mov    ebx,0x1e5705fb
  41b39e:	retf   
  41b39f:	sbb    bl,dh
  41b3a1:	add    DWORD PTR [esi],esp
  41b3a3:	push   esp
  41b3a4:	jns    0x41b39b
  41b3a6:	pushf  
  41b3a7:	mov    al,0x41
  41b3a9:	mov    edi,0x74678191
  41b3ae:	int3   
  41b3af:	pushf  
  41b3b0:	adc    cl,dh
  41b3b2:	sar    BYTE PTR ds:0xc45df86a,cl
  41b3b8:	data16 or BYTE PTR [eax-0x24a56ee0],ch
  41b3bf:	push   ds
  41b3c0:	mov    ebx,DWORD PTR ds:0xb34900c2
  41b3c6:	fstp   TBYTE PTR [edx-0x58]
  41b3c9:	sbb    ah,bh
  41b3cb:	scas   al,BYTE PTR es:[edi]
  41b3cc:	in     al,0x92
  41b3ce:	daa    
  41b3cf:	fimul  DWORD PTR [esi+0x51bde8b]
  41b3d5:	mov    ecx,DWORD PTR [ecx+ecx*1+0x519348c9]
  41b3dc:	push   0x43
  41b3de:	xchg   ebp,eax
  41b3df:	sahf   
  41b3e0:	sbb    al,0xda
  41b3e2:	push   es
  41b3e3:	or     ah,BYTE PTR [edx+0x5c3757da]
  41b3e9:	popa   
  41b3ea:	cdq    
  41b3eb:	or     al,0x60
  41b3ed:	mov    edi,DWORD PTR [edi+ecx*2]
  41b3f0:	push   es
  41b3f1:	(bad)  
  41b3f2:	ins    BYTE PTR es:[edi],dx
  41b3f3:	mov    dl,0xa0
  41b3f5:	push   ebp
  41b3f6:	add    esp,ebp
  41b3f8:	and    al,0x15
  41b3fa:	adc    al,0xc4
  41b3fc:	inc    ebp
  41b3fd:	push   0xf1fc5781
  41b402:	mov    WORD PTR [edx+ecx*8+0x277d4e52],cs
  41b409:	enter  0x6dab,0x53
  41b40d:	dec    esp
  41b40e:	cmp    ch,ah
  41b410:	xor    BYTE PTR [ebx+0x53d6fba2],ah
  41b416:	(bad)
  41b419:	and    eax,0xce075f7
  41b41e:	and    eax,0x8e1beade
  41b423:	sbb    eax,0x9655345c
  41b428:	enter  0x22b5,0xaf
  41b42c:	jmp    0x52359c2d
  41b431:	jmp    0x41b471
  41b433:	xchg   ebp,eax
  41b434:	stos   DWORD PTR es:[edi],eax
  41b435:	mov    esi,0x3cd6497e
  41b43a:	cmp    BYTE PTR [ebp-0x1a],0x49
  41b43e:	in     al,0xc5
  41b440:	or     DWORD PTR [ebp-0x61425048],0x41
  41b447:	retf   0x8440
  41b44a:	sub    al,0x35
  41b44c:	stc    
  41b44d:	fmul   QWORD PTR [ebp+0x4]
  41b450:	add    ah,bh
  41b452:	retf   
  41b453:	aas    
  41b454:	lock push cs
  41b456:	leave  
  41b457:	push   esi
  41b458:	mov    ds:0x8fa8699b,eax
  41b45d:	fsub   st(5),st
  41b45f:	leave  
  41b460:	loopne 0x41b4a7
  41b462:	adc    edi,DWORD PTR [edi-0x2cb2f0f8]
  41b468:	in     al,dx
  41b469:	icebp  
  41b46a:	mov    ebx,0x159ef3da
  41b46f:	mov    dh,BYTE PTR [eax]
  41b471:	shl    DWORD PTR [esp+edi*2+0x73801f67],1
  41b478:	lock mov ds,WORD PTR [esi+0xac0d0f3]
  41b47f:	and    al,0x76
  41b481:	add    eax,0x394598b4
  41b486:	add    bl,cl
  41b488:	out    dx,eax
  41b489:	adc    BYTE PTR [eax+0x1663f8b6],dl
  41b48f:	pcmpeqw mm1,QWORD PTR [ebx-0x35efab5c]
  41b496:	push   esi
  41b497:	cmp    esi,esi
  41b499:	sub    al,BYTE PTR [eax+0x5a]
  41b49c:	sar    BYTE PTR [esi-0x2c9aee14],0x4a
  41b4a3:	test   DWORD PTR [esi+eax*1],ecx
  41b4a6:	(bad)  
  41b4a7:	sub    eax,0xdd5d1df7
  41b4ac:	xchg   ebx,eax
  41b4ad:	pop    edi
  41b4ae:	pop    edx
  41b4af:	mov    al,0xf0
  41b4b1:	loopne 0x41b474
  41b4b3:	in     al,dx
  41b4b4:	mov    ebp,0x5d3f1491
  41b4b9:	test   dl,0x41
  41b4bc:	pop    edx
  41b4bd:	lods   al,BYTE PTR ds:[esi]
  41b4be:	add    al,0xe8
  41b4c0:	inc    eax
  41b4c1:	das    
  41b4c2:	xor    eax,0xddd3cf62
  41b4c7:	push   es
  41b4c8:	mov    ebp,0x134d2005
  41b4cd:	sbb    BYTE PTR [ebp-0x32],cl
  41b4d0:	mov    edi,0xd9a6b3e3
  41b4d5:	cmc    
  41b4d6:	loop   0x41b528
  41b4d8:	xchg   ecx,eax
  41b4d9:	dec    edx
  41b4da:	cmp    eax,0x7fc17177
  41b4df:	fmul   st(2),st
  41b4e1:	push   eax
  41b4e2:	pop    edx
  41b4e3:	sub    dh,cl
  41b4e5:	pop    ss
  41b4e6:	push   ebx
  41b4e7:	dec    esp
  41b4e8:	mov    ecx,0xcd420879
  41b4ed:	jbe    0x41b565
  41b4ef:	pop    ss
  41b4f0:	and    DWORD PTR [ebx+eiz*1-0x22],ebx
  41b4f4:	fs push ds
  41b4f6:	jmp    DWORD PTR [edi+0x6a]
  41b4f9:	dec    ecx
  41b4fa:	sbb    bl,bh
  41b4fc:	imul   ebp,DWORD PTR ds:0x95d37522,0x34c92d51
  41b506:	int    0x5d
  41b508:	ror    BYTE PTR [eax+eax*1],0xf1
  41b50c:	jle    0x41b501
  41b50e:	push   ebp
  41b50f:	mov    ch,al
  41b511:	jnp    0x41b51b
  41b513:	jo     0x41b529
  41b515:	(bad)
  41b519:	out    0x9b,eax
  41b51b:	dec    ebx
  41b51c:	test   DWORD PTR es:[esi+0x0],esp
  41b520:	aas    
  41b521:	inc    ebx
  41b522:	xchg   ebp,eax
  41b523:	rcl    BYTE PTR [edx-0x5de3bf99],0xba
  41b52a:	js     0x41b52d
  41b52c:	gs js  0x41b50b
  41b52f:	jb     0x41b555
  41b531:	sub    eax,0x64c22b04
  41b536:	pop    esi
  41b537:	push   ds
  41b538:	and    al,0xe
  41b53a:	pop    esp
  41b53b:	fidiv  WORD PTR [ebx+0x2a1f0b98]
  41b541:	add    DWORD PTR [eax-0x6f],esi
  41b544:	sahf   
  41b545:	pop    edx
  41b546:	mov    ebp,0x6859022f
  41b54b:	mov    DWORD PTR [esi],ecx
  41b54d:	cmp    BYTE PTR [ecx+esi*2],bh
  41b550:	push   es
  41b551:	nop
  41b552:	or     BYTE PTR [ecx],ch
  41b554:	inc    edx
  41b555:	mov    ebp,0xd42b6839
  41b55a:	xchg   ebp,eax
  41b55b:	adc    bh,BYTE PTR [edi-0x80]
  41b55e:	lods   eax,DWORD PTR ds:[esi]
  41b55f:	jae    0x41b55b
  41b561:	mov    ah,bh
  41b563:	aam    0xe2
  41b565:	addr16 nop
  41b567:	pop    eax
  41b568:	lar    ebx,WORD PTR [esp+eax*4-0x5ba1b53a]
  41b570:	push   ebx
  41b571:	push   eax
  41b572:	adc    al,0x96
  41b574:	mov    ecx,0x6c7b9382
  41b579:	jbe    0x41b568
  41b57b:	lea    edi,[esi+0x2a8a0d98]
  41b581:	cmp    DWORD PTR [ecx],esp
  41b583:	and    eax,0xa86e3105
  41b588:	aam    0x44
  41b58a:	retf   
  41b58b:	add    ecx,DWORD PTR [ebx-0x6a541259]
  41b591:	and    al,0xfc
  41b593:	cwde   
  41b594:	jmp    0x41b59b
  41b596:	dec    esp
  41b597:	cs popa 
  41b599:	xor    BYTE PTR [eax],ch
  41b59b:	dec    esi
  41b59c:	cmp    cl,BYTE PTR [ebp-0x1f]
  41b59f:	inc    edx
  41b5a0:	(bad)  
  41b5a1:	and    ebp,edx
  41b5a3:	stc    
  41b5a4:	stc    
  41b5a5:	and    al,0x7f
  41b5a7:	add    eax,DWORD PTR [ebx-0x437e667a]
  41b5ad:	jne    0x41b60b
  41b5af:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b5b0:	in     al,0xf9
  41b5b2:	aaa    
  41b5b3:	push   cs
  41b5b4:	(bad)  [eax+0x2c3e0489]
  41b5ba:	adc    al,0x37
  41b5bc:	sub    ah,0xde
  41b5bf:	push   eax
  41b5c0:	js     0x41b61f
  41b5c2:	mov    bl,bh
  41b5c4:	jp     0x41b5cb
  41b5c6:	jne    0x41b5d4
  41b5c8:	xchg   edi,eax
  41b5c9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b5ca:	xchg   edi,eax
  41b5cb:	mov    BYTE PTR [edx-0x6a0da9f7],bl
  41b5d1:	pop    eax
  41b5d2:	(bad)  
  41b5d3:	retf   0xf9c5
  41b5d6:	sar    BYTE PTR [esi+0x26],0x3e
  41b5da:	pop    edi
  41b5db:	jl     0x41b615
  41b5dd:	test   bh,dh
  41b5df:	adc    BYTE PTR [esi+0xd],ah
  41b5e2:	fadd   st,st(0)
  41b5e4:	and    esp,ecx
  41b5e6:	test   BYTE PTR [edi+ebp*2],ch
  41b5e9:	in     eax,0xa0
  41b5eb:	sar    BYTE PTR [edi],cl
  41b5ed:	mov    al,ds:0x88940ad0
  41b5f2:	outs   dx,DWORD PTR ds:[esi]
  41b5f3:	je     0x41b5d7
  41b5f5:	js     0x41b60e
  41b5f7:	dec    esp
  41b5f8:	popf   
  41b5f9:	push   edx
  41b5fa:	or     eax,0xe6b33e76
  41b5ff:	adc    DWORD PTR [esi-0xce64a43],0x1a
  41b606:	sub    edi,DWORD PTR [ebx-0x673bcc4d]
  41b60c:	jmp    0x46d00ace
  41b611:	jl     0x41b612
  41b613:	mov    al,0xba
  41b615:	sub    al,0x6f
  41b617:	push   0x3a2c83ad
  41b61c:	(bad)
  41b620:	popf   
  41b621:	gs fwait
  41b623:	mov    al,ds:0x5cc82ce7
  41b628:	add    al,0x41
  41b62a:	lds    ebx,FWORD PTR [edi+0x2c]
  41b62d:	dec    ecx
  41b62e:	in     al,dx
  41b62f:	pop    ebp
  41b630:	(bad)  
  41b631:	fst    st(4)
  41b633:	xchg   ebx,eax
  41b634:	in     al,dx
  41b635:	xlat   BYTE PTR ds:[ebx]
  41b636:	xchg   ebp,eax
  41b637:	mov    eax,ds:0xb9ad16fa
  41b63c:	lahf   
  41b63d:	inc    esp
  41b63e:	inc    esi
  41b63f:	jp     0x41b6a7
  41b641:	add    ch,BYTE PTR [ecx+eax*4+0x49]
  41b645:	scas   eax,DWORD PTR es:[edi]
  41b646:	inc    ecx
  41b647:	push   0xa7249068
  41b64c:	xchg   ebp,eax
  41b64d:	jne    0x41b680
  41b64f:	outs   dx,DWORD PTR ds:[esi]
  41b650:	pop    ebp
  41b651:	inc    ecx
  41b652:	pop    edx
  41b653:	sub    DWORD PTR [edi],esp
  41b655:	sub    ch,BYTE PTR [esi-0x29]
  41b658:	xchg   ecx,eax
  41b659:	or     esi,DWORD PTR [ebx+eiz*1]
  41b65c:	sub    bh,dh
  41b65e:	cmc    
  41b65f:	sub    eax,0xa2fc6775
  41b664:	repz sbb DWORD PTR [ecx],esp
  41b667:	sbb    BYTE PTR [ecx+0x6f],bh
  41b66a:	mov    eax,ds:0x4eaf8d1a
  41b66f:	dec    ebp
  41b670:	adc    eax,0x421d5afc
  41b675:	int    0x84
  41b677:	pusha  
  41b678:	push   eax
  41b679:	(bad)  
  41b67a:	not    BYTE PTR [ecx+0x20]
  41b67d:	je     0x41b6d3
  41b67f:	jne    0x41b6a7
  41b681:	sbb    DWORD PTR [edi-0x2130031e],ecx
  41b687:	dec    edx
  41b688:	mov    ds:0xaa729f56,eax
  41b68d:	ss sahf 
  41b68f:	xchg   ecx,eax
  41b690:	push   0x6c1cca13
  41b695:	repz xchg edx,eax
  41b697:	add    edi,DWORD PTR [ecx+ebp*4-0x40]
  41b69b:	ss add eax,0xe722b303
  41b6a1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b6a2:	jp     0x41b6b4
  41b6a4:	mov    esp,0x9bf32ed2
  41b6a9:	adc    edi,ecx
  41b6ab:	adc    ah,cl
  41b6ad:	add    ch,BYTE PTR [edx]
  41b6af:	fcomp  QWORD PTR [ebx+0x70]
  41b6b2:	xchg   DWORD PTR [esi-0x18ea255a],esi
  41b6b8:	cmp    dh,dh
  41b6ba:	xchg   esp,eax
  41b6bb:	mov    bh,0x73
  41b6bd:	inc    eax
  41b6be:	push   ss
  41b6bf:	mov    eax,es
  41b6c1:	cwde   
  41b6c2:	or     bl,BYTE PTR [esi+0xbbefdd2]
  41b6c8:	out    dx,al
  41b6c9:	cld    
  41b6ca:	gs out dx,eax
  41b6cc:	jecxz  0x41b6ac
  41b6ce:	xor    BYTE PTR ds:0x353f18ef,bh
  41b6d4:	jnp    0x41b743
  41b6d6:	inc    ecx
  41b6d7:	dec    ebx
  41b6d8:	pop    esi
  41b6d9:	cmp    al,0xe8
  41b6db:	push   ebx
  41b6dc:	jmp    DWORD PTR [edx-0x3b]
  41b6df:	lods   al,BYTE PTR ds:[esi]
  41b6e0:	mov    al,ds:0xa1eb0265
  41b6e5:	jecxz  0x41b6bd
  41b6e7:	cmp    esp,0xf4cfe974
  41b6ed:	aas    
  41b6ee:	outs   dx,BYTE PTR ds:[esi]
  41b6ef:	mov    ?,WORD PTR [esi+0x47905e16]
  41b6f5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b6f6:	jb     0x41b6cc
  41b6f8:	pop    ds
  41b6f9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b6fa:	jne    0x41b712
  41b6fc:	lahf   
  41b6fd:	mov    ah,0xda
  41b6ff:	in     al,0xba
  41b701:	sar    BYTE PTR [ebx-0x46d8e4bf],1
  41b707:	xchg   esp,eax
  41b708:	sbb    eax,0xe4018f9b
  41b70d:	dec    edi
  41b70e:	jmp    0xcbac:0xa0e7158c
  41b715:	cmp    DWORD PTR [esi+0x5f27c465],ebx
  41b71b:	xor    DWORD PTR [edx+0x58],esi
  41b71e:	cmp    DWORD PTR [ebx-0x246e6a99],0x6
  41b725:	pop    edx
  41b726:	repz push 0xffffffa8
  41b729:	fdivrp st(0),st
  41b72b:	aam    0xba
  41b72d:	retf   
  41b72e:	test   BYTE PTR [edx-0x5326289],ch
  41b734:	imul   ecx,DWORD PTR [edi+ebx*4-0x45],0xa945b8f9
  41b73c:	xor    al,0x9e
  41b73e:	add    BYTE PTR [ebp+eiz*4+0x363c5adf],0xf
  41b746:	sub    BYTE PTR [ebx],bl
  41b748:	into   
  41b749:	xor    al,0x3a
  41b74b:	fsub   QWORD PTR [ecx]
  41b74d:	dec    edx
  41b74e:	sub    esi,DWORD PTR [esi+0x2f]
  41b751:	push   ebx
  41b752:	xlat   BYTE PTR ds:[ebx]
  41b753:	jp     0x41b765
  41b755:	jae    0x41b719
  41b757:	mov    ds:0xfc76a939,al
  41b75c:	push   es
  41b75d:	(bad)
  41b760:	daa    
  41b761:	mov    esi,0x78e93f5c
  41b766:	lds    ebx,FWORD PTR [edx-0x30f1c91]
  41b76c:	dec    edi
  41b76d:	adc    BYTE PTR [eax],0x7a
  41b770:	ss jno 0x41b7e7
  41b773:	push   edx
  41b774:	fstp   DWORD PTR [ebp+0x24e1bb03]
  41b77a:	fist   WORD PTR [ebx-0x3279dd78]
  41b780:	or     ch,0xf3
  41b783:	idiv   BYTE PTR [ecx+0x4ce00b44]
  41b789:	mov    DWORD PTR [esi+0x3],eax
  41b78c:	aad    0xd9
  41b78e:	sbb    dh,BYTE PTR [ecx+0x13]
  41b791:	xchg   ecx,eax
  41b792:	into   
  41b793:	dec    eax
  41b794:	arpl   WORD PTR [ebx-0x2e],cx
  41b797:	(bad)  
  41b798:	sti    
  41b799:	mov    edx,0x2713ac06
  41b79e:	add    bl,bh
  41b7a0:	dec    edi
  41b7a1:	mov    eax,0x9c3f2f46
  41b7a6:	adc    esp,DWORD PTR [ebp+0x7b]
  41b7a9:	test   ebx,edi
  41b7ab:	jp     0x41b78d
  41b7ad:	outs   dx,DWORD PTR ds:[esi]
  41b7ae:	pushf  
  41b7af:	add    edx,DWORD PTR [ecx+ebp*1]
  41b7b2:	adc    al,0xa0
  41b7b4:	xor    ecx,DWORD PTR [ebp+0x37]
  41b7b7:	pop    edi
  41b7b8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b7b9:	jbe    0x41b831
  41b7bb:	push   esi
  41b7bc:	mov    al,0x6a
  41b7be:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b7bf:	mov    bl,0x8e
  41b7c1:	push   ebx
  41b7c2:	cmc    
  41b7c3:	sub    al,0x15
  41b7c5:	adc    esp,DWORD PTR [esi]
  41b7c7:	ss aam 0x4e
  41b7ca:	dec    ebx
  41b7cb:	aad    0x2e
  41b7cd:	xor    ch,bl
  41b7cf:	mov    ah,0xec
  41b7d1:	jmp    0x41b7a5
  41b7d3:	cmc    
  41b7d4:	push   cs
  41b7d5:	cwde   
  41b7d6:	int3   
  41b7d7:	pop    ebx
  41b7d8:	mov    es,WORD PTR [esi-0x33]
  41b7db:	push   esp
  41b7dc:	jb     0x41b81f
  41b7de:	(bad)  
  41b7df:	xchg   esp,eax
  41b7e0:	fisub  DWORD PTR [edi+0xd]
  41b7e3:	and    eax,0xc0714446
  41b7e8:	adc    BYTE PTR [ecx],dh
  41b7ea:	mov    BYTE PTR ds:0xb8d0d0b9,bh
  41b7f0:	enter  0xaba5,0x83
  41b7f4:	imul   ebx,DWORD PTR [esp+edi*4+0x25deb30a],0xdef8bf50
  41b7ff:	stos   BYTE PTR es:[edi],al
  41b800:	sub    DWORD PTR [edx],eax
  41b802:	sub    bh,BYTE PTR [ecx-0x7b]
  41b805:	test   eax,0xc6e02854
  41b80a:	loop   0x41b889
  41b80c:	cdq    
  41b80d:	cmp    BYTE PTR [ebx],ah
  41b80f:	dec    edi
  41b810:	es out dx,al
  41b812:	aas    
  41b813:	stos   BYTE PTR es:[edi],al
  41b814:	mov    ecx,0x3c73f765
  41b819:	ja     0x41b7e7
  41b81b:	dec    edx
  41b81c:	xor    ebx,DWORD PTR [eax-0xe]
  41b81f:	push   ebx
  41b820:	out    0xf1,eax
  41b822:	and    cl,BYTE PTR [eax]
  41b824:	jne    0x41b834
  41b826:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b827:	dec    eax
  41b828:	(bad)  
  41b82a:	sub    ebx,DWORD PTR gs:[ebp+eiz*8+0x69700250]
  41b832:	cmp    esp,DWORD PTR [ebp+ebx*8-0x52e9e68]
  41b839:	cmp    al,0x1e
  41b83c:	mov    ch,0x6a
  41b83f:	and    cl,bh
  41b841:	push   cs
  41b842:	mov    ss,WORD PTR [edi]
  41b844:	push   cs
  41b845:	test   eax,0xc3dd48d2
  41b84a:	(bad)
  41b84f:	rcl    eax,0x52
  41b852:	mov    ebp,0x18ce3649
  41b857:	cmp    eax,0x9c1d728e
  41b85c:	fdiv   QWORD PTR [eax]
  41b85e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b85f:	and    DWORD PTR [ecx+esi*4+0x261496cc],esi
  41b866:	ins    DWORD PTR es:[edi],dx
  41b867:	sbb    ecx,DWORD PTR [eax]
  41b869:	stos   DWORD PTR es:[edi],eax
  41b86a:	pop    ebx
  41b86b:	inc    esp
  41b86c:	add    ebp,DWORD PTR [ecx]
  41b86e:	pop    esp
  41b86f:	push   cs
  41b870:	jbe    0x41b8f1
  41b872:	rcl    BYTE PTR [ebx+0x5b24bcf5],1
  41b878:	loopne 0x41b815
  41b87a:	xchg   edi,eax
  41b87b:	ret    0xa139
  41b87e:	scas   al,BYTE PTR es:[edi]
  41b87f:	mov    ds:0x2aac7efc,eax
  41b884:	add    eax,0xba5b99c7
  41b889:	cmp    eax,0x8ccb1510
  41b88e:	sahf   
  41b88f:	outs   dx,DWORD PTR ds:[esi]
  41b890:	call   DWORD PTR [eax]
  41b892:	adc    al,0xbf
  41b894:	xor    BYTE PTR [esi-0x6c],ch
  41b897:	fsub   DWORD PTR [edx+esi*2-0x45d4ff30]
  41b89e:	int    0xc1
  41b8a0:	nop
  41b8a1:	and    DWORD PTR [ecx-0x213c9eab],0x3f1321ce
  41b8ab:	add    DWORD PTR [eax],eax
  41b8ad:	jmp    0x5e66b056
  41b8b2:	aam    0xd8
  41b8b4:	iret   
  41b8b5:	add    al,0xb8
  41b8b7:	sbb    eax,0x1032ba37
  41b8bc:	fisubr DWORD PTR [ebx-0x3]
  41b8bf:	jp     0x41b891
  41b8c1:	inc    eax
  41b8c2:	and    edx,0x43e8fd81
  41b8c8:	or     al,0x48
  41b8ca:	cwde   
  41b8cb:	add    al,dh
  41b8cd:	pop    eax
  41b8ce:	mov    es,WORD PTR [ebp-0x56]
  41b8d1:	mov    esp,0x737df6e0
  41b8d6:	mov    ds:0x5a3b530d,eax
  41b8db:	pop    edx
  41b8dc:	xor    eax,0xe276bba1
  41b8e1:	adc    edi,DWORD PTR [ebp-0x3a52ddc2]
  41b8e7:	(bad)  
  41b8e8:	xor    ebx,esi
  41b8ea:	aaa    
  41b8eb:	or     al,0xaa
  41b8ed:	stos   DWORD PTR es:[edi],eax
  41b8ee:	sar    BYTE PTR [edx-0x74771234],1
  41b8f4:	pop    ss
  41b8f5:	call   0x8f27:0x5f86585e
  41b8fc:	inc    edx
  41b8fd:	sbb    edi,ebp
  41b8ff:	and    DWORD PTR [edi+0x47],ebp
  41b902:	not    BYTE PTR [esi+0x69]
  41b905:	outs   dx,DWORD PTR ds:[esi]
  41b906:	test   eax,0x7370fb91
  41b90b:	sahf   
  41b90c:	cmp    BYTE PTR [eax+0x297f5acd],dh
  41b912:	lods   eax,DWORD PTR ds:[esi]
  41b913:	cwde   
  41b914:	cmp    esp,DWORD PTR [ebp-0x74]
  41b917:	(bad)  
  41b918:	cwde   
  41b919:	call   0x80d24a1f
  41b91e:	pop    ecx
  41b91f:	cwde   
  41b920:	mov    DWORD PTR [ebx-0x5bb6e46a],esi
  41b926:	push   edx
  41b927:	cmp    DWORD PTR [ebx+0x3d],esi
  41b92a:	jmp    0x9df1:0x27878b6
  41b931:	(bad)  
  41b933:	lahf   
  41b934:	loop   0x41b9b2
  41b936:	or     eax,0x45518259
  41b93b:	sti    
  41b93c:	or     al,0x85
  41b93e:	(bad)  
  41b93f:	aad    0x26
  41b941:	and    esi,esp
  41b943:	xlat   BYTE PTR ds:[ebx]
  41b944:	jmp    0x41b8fd
  41b946:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b947:	(bad)  
  41b949:	shr    BYTE PTR [edx-0x6a344508],1
  41b94f:	test   BYTE PTR [edx+0x2c673ead],bl
  41b955:	test   al,0x53
  41b957:	push   esp
  41b958:	test   BYTE PTR [eax],cl
  41b95a:	fcom   DWORD PTR [edi-0x51]
  41b95d:	mov    eax,ds:0xdb2ebf93
  41b962:	div    BYTE PTR [ebp-0x1c]
  41b965:	fstp   st(6)
  41b967:	lahf   
  41b968:	mov    esp,0x32b5275e
  41b96d:	std    
  41b96e:	arpl   WORD PTR [esi],ax
  41b970:	jp     0x41b984
  41b972:	dec    esi
  41b973:	mov    al,ds:0x1da23dd7
  41b978:	call   0x21ce2e0f
  41b97d:	imul   ecx,DWORD PTR [esi-0x237935f9],0x23
  41b984:	ss adc bh,dl
  41b987:	mov    gs,esp
  41b989:	ins    BYTE PTR es:[edi],dx
  41b98a:	inc    esi
  41b98b:	dec    DWORD PTR [edx+eiz*4]
  41b98e:	add    DWORD PTR es:[edi],edi
  41b991:	mov    ah,0x98
  41b993:	call   0x5c4a:0x248fa77d
  41b99a:	pop    esp
  41b99b:	pop    edi
  41b99c:	repnz lahf 
  41b99e:	and    eax,0xc02b633a
  41b9a3:	bound  esp,QWORD PTR [ebx-0x39]
  41b9a6:	push   ds
  41b9a7:	sub    dl,0x8d
  41b9aa:	int3   
  41b9ab:	or     BYTE PTR [ebp-0x32d69724],dl
  41b9b1:	lds    ebx,FWORD PTR [edi-0x48]
  41b9b4:	lds    esi,FWORD PTR [esi-0x70]
  41b9b7:	bnd jb 0x41ba06
  41b9ba:	mov    edx,0x873202bd
  41b9bf:	in     al,dx
  41b9c0:	(bad)  
  41b9c1:	jae    0x41b9e1
  41b9c3:	dec    eax
  41b9c4:	mov    cl,0xa6
  41b9c6:	cs inc edx
  41b9c8:	in     eax,0x3a
  41b9ca:	arpl   WORD PTR [ebp-0x34],bp
  41b9cd:	lock cmc 
  41b9cf:	xor    edx,DWORD PTR [eax]
  41b9d1:	xor    al,ch
  41b9d3:	sbb    eax,0x75388b37
  41b9d8:	mov    dh,0xbc
  41b9da:	jmp    0x41b9e1
  41b9dc:	aaa    
  41b9dd:	scas   al,BYTE PTR es:[edi]
  41b9de:	rep outs dx,BYTE PTR ds:[esi]
  41b9e0:	jb     0x41b9c5
  41b9e2:	push   eax
  41b9e3:	pushf  
  41b9e4:	xchg   edi,eax
  41b9e5:	sub    ebp,DWORD PTR [edi]
  41b9e7:	stc    
  41b9e8:	push   esi
  41b9e9:	or     edx,ecx
  41b9eb:	call   0x777f:0x226938e3
  41b9f2:	dec    ecx
  41b9f3:	sbb    BYTE PTR [eax+eax*8],0x12
  41b9f7:	ins    BYTE PTR es:[edi],dx
  41b9f8:	enter  0xa775,0x2e
  41b9fc:	faddp  st(0),st
  41b9fe:	adc    eax,0x94423fe
  41ba03:	adc    eax,0xc07558d8
  41ba08:	aas    
  41ba09:	sbb    BYTE PTR [edx+0x473670d1],dh
  41ba0f:	cmp    esp,DWORD PTR [eax-0x744e4486]
  41ba15:	pop    eax
  41ba16:	enter  0xde65,0x98
  41ba1a:	(bad)  
  41ba1b:	int3   
  41ba1c:	repnz das 
  41ba1e:	push   ebx
  41ba1f:	repz push ebx
  41ba21:	repz fs push eax
  41ba24:	push   ebp
  41ba25:	ret    
  41ba26:	arpl   WORD PTR [eiz*4+0x3d5af446],cx
  41ba2d:	mov    al,0x49
  41ba2f:	push   esp
  41ba30:	push   cs
  41ba31:	mov    bl,0xe7
  41ba33:	out    dx,al
  41ba34:	mov    es,WORD PTR [eax+ebx*1-0x71ab48f1]
  41ba3b:	clc    
  41ba3c:	mul    DWORD PTR [edx-0xc]
  41ba3f:	inc    edx
  41ba40:	shl    DWORD PTR [ecx-0x9],0xb0
  41ba44:	mov    BYTE PTR [ebp+0xf0fd627],dh
  41ba4a:	adc    DWORD PTR [esp+ebp*2-0x3db77bc6],edx
  41ba51:	cli    
  41ba52:	mov    eax,ss
  41ba54:	add    eax,0x2304a3d3
  41ba59:	xchg   edx,eax
  41ba5a:	xor    al,0x65
  41ba5c:	int3   
  41ba5d:	add    DWORD PTR [ecx-0x7f],ebp
  41ba60:	push   cs
  41ba61:	jp     0x41baae
  41ba63:	jno    0x41baca
  41ba65:	test   BYTE PTR [ebx-0x7f],0x31
  41ba69:	(bad)  
  41ba6a:	sub    BYTE PTR [edi+0x31bf8055],bl
  41ba70:	in     al,0x7a
  41ba72:	mov    BYTE PTR [ebp-0x2],ah
  41ba75:	test   DWORD PTR [esi+ebp*2+0x56],0xb1bd4cd
  41ba7d:	fs jp  0x41ba52
  41ba80:	popf   
  41ba81:	clc    
  41ba82:	xor    ch,bh
  41ba84:	inc    ebx
  41ba85:	mov    ah,0xf3
  41ba87:	jg     0x41ba7f
  41ba89:	out    0x2b,eax
  41ba8b:	pop    ebx
  41ba8c:	sar    DWORD PTR [edi],1
  41ba8e:	pop    eax
  41ba8f:	or     eax,DWORD PTR [esi]
  41ba91:	fadd   st(3),st
  41ba93:	jmp    0xea0a:0x96a1e6ae
  41ba9a:	jecxz  0x41ba8c
  41ba9c:	in     al,dx
  41ba9d:	sub    eax,0x9553d23d
  41baa2:	sub    bl,BYTE PTR [ebx]
  41baa4:	loope  0x41bad7
  41baa6:	std    
  41baa7:	inc    edx
  41baa8:	cmp    al,0xa7
  41baaa:	call   0x90fa6a5c
  41baaf:	imul   esp,edx,0x81ee6864
  41bab5:	jno    0x41ba98
  41bab7:	jmp    0xb1d4:0xea53d6c8
  41babe:	jo     0x41ba80
  41bac0:	stos   BYTE PTR es:[edi],al
  41bac1:	ins    BYTE PTR es:[edi],dx
  41bac2:	sub    BYTE PTR [ebx-0x1be9b0ef],bl
  41bac8:	cmp    al,0x71
  41baca:	daa    
  41bacb:	fistp  QWORD PTR [edi+0x714ce0]
  41bad1:	neg    BYTE PTR [esi]
  41bad3:	jae    0x41ba7c
  41bad5:	jne    0x41ba78
  41bad7:	dec    edx
  41bad8:	aad    0x2
  41bada:	(bad)  
  41badb:	out    0x9e,al
  41badd:	jbe    0x41bacb
  41badf:	(bad)  [edx]
  41bae1:	fistp  DWORD PTR [edi-0x1927742d]
  41bae7:	pushf  
  41bae8:	xchg   ebp,eax
  41bae9:	ds out dx,al
  41baeb:	ja     0x41ba6e
  41baed:	stos   DWORD PTR es:[edi],eax
  41baee:	in     al,dx
  41baef:	inc    ebp
  41baf0:	add    al,0x79
  41baf2:	call   0x960f:0x46efcc79
  41baf9:	cmp    dl,BYTE PTR [edx+0x318f77f4]
  41baff:	test   al,0x8f
  41bb01:	xor    DWORD PTR [edx+0x3eea6cec],edx
  41bb07:	pusha  
  41bb08:	(bad)  
  41bb09:	ror    BYTE PTR [esi+0x40d075d0],0x17
  41bb10:	jmp    0x41bade
  41bb12:	cdq    
  41bb13:	clc    
  41bb14:	int3   
  41bb15:	inc    ax
  41bb17:	xchg   ecx,eax
  41bb18:	push   ecx
  41bb19:	mov    al,0xdf
  41bb1b:	pop    es
  41bb1c:	sub    al,0x88
  41bb1e:	ret    
  41bb1f:	pop    es
  41bb20:	adc    esi,eax
  41bb22:	and    eax,DWORD PTR [edi-0x3b]
  41bb25:	mov    cl,bh
  41bb27:	pop    ecx
  41bb28:	inc    edx
  41bb29:	adc    bh,bh
  41bb2b:	inc    ebp
  41bb2c:	mov    edx,edi
  41bb2e:	push   esi
  41bb2f:	dec    esp
  41bb30:	mov    bh,0x85
  41bb32:	loopne 0x41badf
  41bb34:	ret    0x6760
  41bb37:	jmp    0x41bae5
  41bb39:	call   0x3bdd:0x18c6fad6
  41bb40:	mov    eax,ds:0xf301f165
  41bb45:	nop
  41bb46:	or     BYTE PTR [ebp+0x254e4b90],dl
  41bb4c:	nop
  41bb4d:	add    DWORD PTR [esi],edi
  41bb4f:	repnz test bl,bh
  41bb52:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bb53:	gs pop edi
  41bb55:	into   
  41bb56:	cmp    ecx,DWORD PTR [ebx-0x77]
  41bb59:	dec    edi
  41bb5a:	jae    0x41bba3
  41bb5c:	push   edi
  41bb5d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bb5e:	data16 (bad) 
  41bb60:	shl    edx,cl
  41bb62:	xor    DWORD PTR [ecx+0x3c7c8418],edi
  41bb68:	push   ds
  41bb69:	xchg   edi,eax
  41bb6a:	xor    al,0x21
  41bb6c:	outs   dx,BYTE PTR ds:[esi]
  41bb6d:	leave  
  41bb6e:	cmp    ah,BYTE PTR [ecx+edx*4-0x41bd95d3]
  41bb75:	(bad)  
  41bb76:	pop    ebx
  41bb77:	aad    0x93
  41bb79:	in     al,0xc0
  41bb7b:	cmp    ebp,eax
  41bb7d:	push   ss
  41bb7e:	xchg   esp,eax
  41bb7f:	lods   eax,DWORD PTR ds:[esi]
  41bb80:	popf   
  41bb81:	fwait
  41bb82:	adc    ecx,esi
  41bb84:	adc    ch,BYTE PTR [edi-0x14]
  41bb87:	inc    edi
  41bb88:	hlt    
  41bb89:	fnstcw WORD PTR [ebx]
  41bb8b:	cmp    ebx,DWORD PTR [ecx]
  41bb8d:	mov    cl,0xcc
  41bb8f:	xor    edi,esp
  41bb91:	push   es
  41bb92:	ret    0xe018
  41bb95:	mov    eax,0xd9ece312
  41bb9a:	cmp    DWORD PTR [esi+0x67],edi
  41bb9d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bb9e:	mov    bl,0x6b
  41bba0:	fld    DWORD PTR [edi+0x7e60b796]
  41bba6:	pop    ebp
  41bba7:	jle    0x41bbfe
  41bba9:	fsub   QWORD PTR [eax]
  41bbab:	push   esp
  41bbac:	loope  0x41bb3a
  41bbae:	outs   dx,BYTE PTR ds:[esi]
  41bbaf:	imul   esp,DWORD PTR [edx-0x64fedd1c],0xffffffd2
  41bbb6:	fwait
  41bbb7:	call   0x6a1d8e03
  41bbbc:	rcl    dh,0x1
  41bbbf:	jecxz  0x41bb4e
  41bbc1:	mov    ecx,eax
  41bbc3:	out    0x47,al
  41bbc5:	ins    BYTE PTR es:[edi],dx
  41bbc6:	imul   edx,DWORD PTR ds:0xe1ee0d16,0x83e45f97
  41bbd0:	es sbb BYTE PTR ds:[ebp-0x77],cl
  41bbd5:	repz pop ebx
  41bbd7:	inc    edx
  41bbd8:	mov    ecx,0x72447e4c
  41bbdd:	cmp    al,0xf4
  41bbdf:	dec    ebp
  41bbe0:	pop    edi
  41bbe1:	es call 0x9fee8d5c
  41bbe7:	inc    esi
  41bbe8:	fidiv  WORD PTR [eax+ecx*2+0x6312523]
  41bbef:	adc    edi,DWORD PTR [esp+ecx*8]
  41bbf2:	push   cs
  41bbf3:	sbb    eax,0x6e362189
  41bbf8:	inc    edi
  41bbf9:	push   edi
  41bbfa:	fwait
  41bbfb:	repnz inc esp
  41bbfd:	adc    BYTE PTR [esp+eiz*4],bh
  41bc00:	lods   al,BYTE PTR ds:[esi]
  41bc01:	jp     0x41bc37
  41bc03:	push   ebp
  41bc04:	cmp    eax,DWORD PTR [edi]
  41bc06:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bc07:	in     eax,dx
  41bc08:	add    ah,BYTE PTR [edi-0x6339b3be]
  41bc0e:	sbb    DWORD PTR [edi+0x1389ddc9],0x7502e533
  41bc18:	outs   dx,BYTE PTR ds:[esi]
  41bc19:	jecxz  0x41bbf4
  41bc1b:	add    al,0x9f
  41bc1d:	or     ebx,ebx
  41bc1f:	xchg   edi,eax
  41bc20:	add    eax,0x58247fd4
  41bc25:	cmp    DWORD PTR [esi+0x3987f1ca],ebp
  41bc2b:	(bad)  
  41bc2c:	test   eax,0x7675b725
  41bc31:	dec    esi
  41bc32:	jmp    0x41bc92
  41bc34:	cdq    
  41bc35:	int    0xa9
  41bc37:	out    dx,eax
  41bc38:	(bad)  [ebx]
  41bc3a:	push   ds
  41bc3b:	int    0x60
  41bc3d:	push   eax
  41bc3e:	mov    ch,0xdd
  41bc40:	out    0x22,eax
  41bc42:	or     al,0x65
  41bc44:	adc    cl,BYTE PTR [edi]
  41bc46:	ins    DWORD PTR es:[edi],dx
  41bc47:	inc    eax
  41bc48:	or     BYTE PTR [edx-0x2dbea796],al
  41bc4e:	cs retf 0x1a18
  41bc52:	and    al,0x77
  41bc54:	sub    DWORD PTR [ebx+0x62],ecx
  41bc57:	dec    esp
  41bc58:	mov    ebx,0xb46398d5
  41bc5d:	out    dx,eax
  41bc5e:	mov    eax,ds:0xb7be27ce
  41bc63:	fld    DWORD PTR [eax+0x3975b63a]
  41bc69:	inc    ebp
  41bc6a:	sbb    al,0x74
  41bc6c:	xor    esp,edx
  41bc6e:	cdq    
  41bc6f:	jne    0x41bc37
  41bc71:	mov    bh,0x91
  41bc73:	xor    edx,DWORD PTR [edi]
  41bc75:	and    al,0x4e
  41bc77:	fnstsw WORD PTR [ebx]
  41bc79:	idiv   ecx
  41bc7b:	sub    al,0x95
  41bc7d:	enter  0x4d5c,0x8b
  41bc81:	dec    ebp
  41bc82:	clc    
  41bc83:	clc    
  41bc84:	lods   al,BYTE PTR ds:[esi]
  41bc85:	jmp    0x2280:0x9eb93051
  41bc8c:	add    ah,BYTE PTR [edx-0x2fe8a3cb]
  41bc92:	out    0x1a,eax
  41bc94:	push   ss
  41bc95:	inc    edi
  41bc96:	mov    ch,0xe5
  41bc98:	and    ebx,DWORD PTR [esi+0xc]
  41bc9b:	shr    BYTE PTR [edx+ecx*4],0x50
  41bc9f:	in     eax,dx
  41bca0:	daa    
  41bca1:	jne    0x41bc55
  41bca3:	stos   BYTE PTR es:[edi],al
  41bca4:	out    0x2c,al
  41bca6:	jno    0x41bcd8
  41bca8:	xlat   BYTE PTR ds:[ebx]
  41bca9:	aaa    
  41bcaa:	daa    
  41bcab:	iret   
  41bcac:	jbe    0x41bd03
  41bcae:	imul   edi,DWORD PTR [edi+0x1f8637c9],0xf6f60d8d
  41bcb8:	ja     0x41bcd6
  41bcba:	hlt    
  41bcbb:	add    eax,0x125604e3
  41bcc0:	(bad)  
  41bcc1:	bound  edx,QWORD PTR ds:0x1cd9f3b5
  41bcc7:	aaa    
  41bcc8:	dec    ebx
  41bcc9:	iret   
  41bcca:	pop    ss
  41bccb:	pop    ecx
  41bccc:	sub    eax,0x2834caa4
  41bcd1:	fldcw  WORD PTR [ecx+0x9]
  41bcd4:	sub    eax,0x6c5a1f1e
  41bcd9:	sar    DWORD PTR [eax],cl
  41bcdb:	adc    DWORD PTR [edi],ebx
  41bcdd:	or     esp,edi
  41bcdf:	les    ebp,FWORD PTR [esi]
  41bce1:	pop    ebx
  41bce2:	iret   
  41bce3:	pop    eax
  41bce5:	cmovno ecx,esp
  41bce8:	mov    dl,0x7b
  41bcea:	mov    cl,0x1b
  41bcec:	(bad)  
  41bced:	xor    dl,BYTE PTR [ebp-0x3df8f739]
  41bcf3:	adc    BYTE PTR ds:0x29ef561d,bl
  41bcf9:	jmp    0x2677:0x445acd9
  41bd00:	or     edx,DWORD PTR [ecx+edx*4]
  41bd03:	retf   
  41bd04:	xchg   ecx,eax
  41bd05:	sti    
  41bd06:	mov    esp,0x178a2148
  41bd0b:	(bad)  
  41bd0c:	outs   dx,DWORD PTR ds:[esi]
  41bd0d:	aaa    
  41bd0e:	pop    ebx
  41bd0f:	cld    
  41bd10:	mov    edi,0xea4fd9f1
  41bd15:	std    
  41bd16:	lock bound eax,QWORD PTR [edi]
  41bd19:	stc    
  41bd1a:	cmp    DWORD PTR [ebx],ebp
  41bd1c:	repz loopne 0x41bcfb
  41bd1f:	sbb    esi,DWORD PTR [eax-0x40e933a1]
  41bd25:	sti    
  41bd26:	loope  0x41bd85
  41bd28:	cwde   
  41bd29:	cs adc al,0xa8
  41bd2c:	and    BYTE PTR [edi+ecx*4],dl
  41bd2f:	bound  ebp,QWORD PTR ds:0x6b00aa35
  41bd35:	(bad)  
  41bd36:	js     0x41bd6e
  41bd38:	sub    eax,ebx
  41bd3a:	inc    eax
  41bd3b:	mov    gs,WORD PTR [edi+0x696f4f43]
  41bd41:	add    eax,0xc2c5e271
  41bd46:	repz or ebp,DWORD PTR [eax+eiz*2-0x5bcd0643]
  41bd4e:	mov    BYTE PTR [edi+0x38380e26],cl
  41bd54:	packsswb mm7,QWORD PTR [edx+0x41]
  41bd58:	adc    DWORD PTR [ebp-0x7717faef],0xffffffc1
  41bd5f:	(bad)  [edi+esi*2+0x4e]
  41bd63:	lea    esp,[ebp-0x64]
  41bd66:	dec    edx
  41bd67:	xchg   edx,eax
  41bd68:	jmp    0x41bd8e
  41bd6a:	test   DWORD PTR [ebp+0x37],esi
  41bd6d:	or     DWORD PTR [edx+0x384abc54],edx
  41bd73:	mov    bh,0xef
  41bd75:	pop    es
  41bd76:	add    BYTE PTR [esi+ebp*1],cl
  41bd79:	fwait
  41bd7a:	sub    cl,ch
  41bd7c:	xchg   esp,eax
  41bd7d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bd7e:	jbe    0x41bdfa
  41bd80:	fmul   QWORD PTR [edi+0x15]
  41bd83:	mul    ch
  41bd85:	sbb    esi,edx
  41bd87:	xor    dl,BYTE PTR [eax]
  41bd89:	dec    edx
  41bd8a:	mov    fs,esi
  41bd8c:	sub    eax,0x9b4153a4
  41bd91:	add    DWORD PTR [ecx],esp
  41bd93:	stc    
  41bd94:	push   esp
  41bd95:	mov    ecx,0xcdeff42
  41bd9a:	fcomp  QWORD PTR [ebx+edi*8+0x62c7ad36]
  41bda1:	jmp    0x66c7e0ba
  41bda6:	ret    0x1a88
  41bda9:	std    
  41bdaa:	(bad)
  41bdad:	jbe    0x41bd89
  41bdaf:	cdq    
  41bdb0:	jecxz  0x41bdfc
  41bdb2:	loop   0x41bdfa
  41bdb4:	dec    ebx
  41bdb5:	jns    0x41bd86
  41bdb7:	cli    
  41bdb8:	xchg   DWORD PTR [esi],edx
  41bdba:	push   edx
  41bdbb:	das    
  41bdbc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bdbd:	pop    edi
  41bdbe:	add    esp,eax
  41bdc0:	dec    esp
  41bdc1:	int    0xa2
  41bdc3:	mov    cl,0xf0
  41bdc5:	jno    0x41bd78
  41bdc7:	push   ebx
  41bdc8:	xchg   ebx,eax
  41bdc9:	popf   
  41bdca:	ffreep st(5)
  41bdcc:	sbb    ah,ch
  41bdce:	aad    0xf8
  41bdd0:	and    BYTE PTR [edx],bl
  41bdd2:	xor    edx,esp
  41bdd4:	cdq    
  41bdd5:	jae    0x41bd9a
  41bdd7:	rol    DWORD PTR [ecx-0x1b5df55e],1
  41bddd:	fcomp  DWORD PTR [ebp-0x69]
  41bde0:	repnz hlt 
  41bde2:	push   0x15
  41bde4:	call   FWORD PTR [edx]
  41bde6:	test   esi,ebp
  41bde8:	xchg   edx,eax
  41bde9:	jmp    0x54d3:0x5a5373de
  41bdf0:	dec    esi
  41bdf1:	sub    BYTE PTR [edx-0x7b0ec971],ch
  41bdf7:	shl    ch,cl
  41bdf9:	or     DWORD PTR [ebx],eax
  41bdfb:	out    dx,al
  41bdfc:	or     BYTE PTR [edx+0x131232ba],dl
  41be02:	xchg   edi,eax
  41be03:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41be04:	adc    DWORD PTR [edi],0xffffffc0
  41be07:	pop    eax
  41be08:	and    DWORD PTR ds:0xf8997260,ebp
  41be0e:	sbb    dl,BYTE PTR [bx+di-0x9]
  41be12:	stos   DWORD PTR es:[edi],eax
  41be13:	outs   dx,BYTE PTR ds:[esi]
  41be14:	repnz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41be16:	shl    dl,cl
  41be18:	xchg   ebx,eax
  41be19:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41be1a:	push   ss
  41be1b:	jo     0x41be40
  41be1d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41be1e:	scas   eax,DWORD PTR es:[edi]
  41be1f:	and    bl,BYTE PTR [edi+0x4657b024]
  41be25:	popf   
  41be26:	push   es
  41be27:	enter  0xd304,0x5a
  41be2b:	xchg   ebx,eax
  41be2c:	jecxz  0x41be89
  41be2e:	outs   dx,DWORD PTR ds:[esi]
  41be2f:	test   BYTE PTR [edx+0x3f],ch
  41be32:	and    BYTE PTR [edx-0x7a48bdb1],cl
  41be38:	call   0x4c16234e
  41be3d:	dec    ecx
  41be3e:	pusha  
  41be3f:	mov    WORD PTR [eax+0x4d],es
  41be42:	or     bl,bl
  41be44:	not    BYTE PTR [esi-0x5a]
  41be47:	shl    BYTE PTR [esi+0x2a],0x40
  41be4b:	ret    
  41be4c:	out    0xd7,eax
  41be4e:	xor    DWORD PTR [ecx+0x2b54885c],esi
  41be54:	xchg   esp,eax
  41be55:	ins    BYTE PTR es:[edi],dx
  41be56:	and    bl,ch
  41be58:	inc    ebp
  41be59:	pop    ecx
  41be5a:	push   edx
  41be5b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41be5c:	pop    ebx
  41be5d:	(bad)  
  41be5f:	inc    edi
  41be60:	das    
  41be61:	mov    ds,WORD PTR [esi]
  41be63:	(bad)  
  41be64:	fmul   st(0),st
  41be66:	pop    esi
  41be67:	xor    BYTE PTR [edx-0x43ad1803],ch
  41be6d:	add    ebp,DWORD PTR [esi+0x185b9a1f]
  41be73:	mov    ebx,0x6c85c9d9
  41be78:	jle    0x41bea2
  41be7a:	(bad)
  41be7d:	mov    ecx,0x1dff1b7c
  41be82:	and    al,0x33
  41be85:	xor    bl,BYTE PTR [edx]
  41be87:	rol    DWORD PTR [edi],0xf8
  41be8a:	pop    ds
  41be8b:	sub    eax,DWORD PTR [eax+0x3b]
  41be8e:	sahf   
  41be8f:	and    ebx,DWORD PTR [ebp+0x27]
  41be92:	adc    edi,ebx
  41be94:	aam    0xd9
  41be96:	(bad)  
  41be97:	mov    ds:0xbefaaad5,al
  41be9c:	clc    
  41be9d:	mov    ebx,edx
  41be9f:	jmp    0xef2b:0x3e74a24d
  41bea6:	push   es
  41bea7:	out    dx,al
  41bea8:	dec    eax
  41bea9:	aad    0x70
  41beab:	push   ss
  41beac:	and    dl,cl
  41beae:	in     al,dx
  41beaf:	ret    0x9d43
  41beb2:	test   DWORD PTR [eax+0x5b],esi
  41beb5:	push   eax
  41beb6:	fxch   st(3)
  41beb8:	xchg   BYTE PTR [ecx+ecx*2-0x72],dh
  41bebc:	(bad)  
  41bebd:	mov    es:0xd7815262,eax
  41bec3:	push   cs
  41bec4:	push   esp
  41bec5:	aad    0x7d
  41bec7:	shl    BYTE PTR [ebp+0x4685c5c1],0xb5
  41bece:	xor    cl,BYTE PTR [edi-0x363ff35d]
  41bed4:	out    0xf5,eax
  41bed6:	pusha  
  41bed7:	je     0x41be96
  41bed9:	iret   
  41beda:	sub    al,ch
  41bedc:	fmul   st,st(4)
  41bede:	xor    eax,0x570c5283
  41bee3:	pop    esi
  41bee4:	aad    0x2b
  41bee6:	mov    ecx,0x994d9b4e
  41beeb:	(bad)  
  41beed:	shl    BYTE PTR [edi+0x241bc4ca],0xe
  41bef4:	test   BYTE PTR [ebp+0x1b],bh
  41bef7:	or     ecx,DWORD PTR [esi+0x96e481f]
  41befd:	lods   eax,DWORD PTR ds:[esi]
  41befe:	stos   DWORD PTR es:[edi],eax
  41beff:	mov    eax,ds:0x3077ed0d
  41bf04:	jbe    0x41bf4a
  41bf06:	fsub   DWORD PTR ds:0xa519344
  41bf0c:	pop    esp
  41bf0d:	xor    eax,0x90b7e007
  41bf12:	and    eax,0x98685c83
  41bf17:	mov    cl,BYTE PTR [ebx+ebp*8-0x4f80786a]
  41bf1e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bf1f:	xchg   esi,eax
  41bf20:	adc    ch,BYTE PTR [edi]
  41bf22:	shl    DWORD PTR [eax],0xf5
  41bf25:	mov    al,0x3c
  41bf27:	dec    eax
  41bf28:	xchg   edi,eax
  41bf29:	data16 daa 
  41bf2b:	dec    esi
  41bf2c:	cmp    ch,BYTE PTR [esp+edi*2-0x587e6efe]
  41bf33:	aaa    
  41bf34:	push   cs
  41bf35:	jbe    0x41bf69
  41bf37:	sub    al,0xec
  41bf39:	or     BYTE PTR [esi*2-0x10ff4e61],bh
  41bf40:	ret    0x2043
  41bf43:	call   0xe92712e4
  41bf48:	and    eax,0x78d6a742
  41bf4d:	cs jmp 0x3610bc9
  41bf53:	mov    dl,0xf4
  41bf55:	xchg   ecx,eax
  41bf56:	call   0x8c4f:0xe6e8cf05
  41bf5d:	div    BYTE PTR [ebx]
  41bf5f:	xchg   ebx,eax
  41bf60:	adc    DWORD PTR [eax+0x42],esp
  41bf63:	shl    DWORD PTR ds:0x79f2d800,cl
  41bf69:	lods   eax,DWORD PTR ds:[esi]
  41bf6a:	inc    edi
  41bf6b:	sub    BYTE PTR [ebx+ebp*4+0x7d98876a],cl
  41bf72:	or     edi,DWORD PTR [eax]
  41bf74:	add    DWORD PTR [eax+ecx*2+0x6d9bbee0],0x7b
  41bf7c:	mov    esp,0x3d6e6ef0
  41bf81:	add    BYTE PTR [edi-0x1db288a6],ch
  41bf87:	inc    esp
  41bf88:	dec    eax
  41bf89:	je     0x41bfc3
  41bf8b:	pop    ebp
  41bf8c:	pop    ebx
  41bf8d:	rcr    BYTE PTR [esi-0x3d],1
  41bf90:	and    al,0x9e
  41bf92:	ffreep st(0)
  41bf94:	xor    esi,DWORD PTR [edi]
  41bf96:	imul   BYTE PTR [ebx+ebx*1-0x1f]
  41bf9a:	les    edi,FWORD PTR [ebx-0x7e8d71b3]
  41bfa0:	mov    eax,DWORD PTR [esi-0x49]
  41bfa3:	ins    BYTE PTR es:[edi],dx
  41bfa4:	inc    esi
  41bfa5:	lea    eax,[ecx+0x10]
  41bfa8:	sbb    DWORD PTR fs:[ebp-0xd],0x1ac80b18
  41bfb0:	sub    edi,ecx
  41bfb2:	jecxz  0x41bfcd
  41bfb4:	mov    ch,0xcd
  41bfb6:	retf   0x2fbb
  41bfb9:	ret    
  41bfba:	pop    ecx
  41bfbb:	cmp    bl,BYTE PTR [esi]
  41bfbd:	mov    ds:0xb981a392,al
  41bfc2:	jmp    0x7239:0xe1709228
  41bfc9:	push   esi
  41bfca:	pop    ebx
  41bfcb:	fcom   QWORD PTR [ebx-0xd]
  41bfce:	aas    
  41bfcf:	jnp    0x41c01d
  41bfd1:	into   
  41bfd2:	and    esp,edi
  41bfd4:	popa   
  41bfd5:	push   edx
  41bfd6:	ins    BYTE PTR es:[edi],dx
  41bfd7:	jl     0x41bfba
  41bfd9:	push   eax
  41bfda:	jmp    0xf183:0xd5e2073b
  41bfe1:	das    
  41bfe2:	inc    eax
  41bfe3:	sub    BYTE PTR [esi],0x65
  41bfe6:	mov    edx,edx
  41bfe8:	lahf   
  41bfe9:	fstp   QWORD PTR ds:0xb62c086c
  41bfef:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bff0:	pop    esi
  41bff1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bff2:	jae    0x41bffd
  41bff4:	sbb    ch,ch
  41bff6:	call   0xe65c1111
  41bffb:	jp     0x41bfd3
  41bffd:	cmc    
  41bffe:	inc    esi
  41bfff:	leave  
  41c000:	inc    ebx
  41c001:	mov    ch,0xfa
  41c003:	call   0x933f9725
  41c008:	inc    ebp
  41c009:	pop    edi
  41c00a:	mov    WORD PTR [esi+0x5c36f1d8],ds
  41c010:	xchg   ebx,eax
  41c011:	daa    
  41c012:	ret    0x8986
  41c015:	xor    DWORD PTR [edx-0x40],ebp
  41c018:	sbb    eax,0xe8a3cf02
  41c01d:	push   eax
  41c01e:	add    al,0xf5
  41c020:	push   eax
  41c021:	dec    ecx
  41c022:	test   eax,0x85f939d2
  41c027:	outs   dx,DWORD PTR ds:[esi]
  41c028:	adc    DWORD PTR [ecx+0x293603e],0xffffff8c
  41c02f:	ins    DWORD PTR es:[edi],dx
  41c030:	ja     0x41bfd6
  41c032:	(bad)  
  41c034:	xchg   DWORD PTR [esi-0x3e99cdb],ecx
  41c03a:	mov    esp,0x3f90414b
  41c03f:	aad    0x6d
  41c041:	ins    BYTE PTR es:[edi],dx
  41c042:	and    BYTE PTR [edx+eiz*1+0x47],cl
  41c046:	jmp    0x655c:0xf4b19197
  41c04d:	imul   DWORD PTR [edx]
  41c04f:	sub    ch,0x73
  41c052:	pop    edx
  41c053:	inc    edx
  41c054:	jecxz  0x41c00d
  41c056:	not    DWORD PTR [edx]
  41c058:	cli    
  41c059:	cmp    ebp,ecx
  41c05b:	ret    0x2917
  41c05e:	push   ebx
  41c05f:	jp     0x41c0af
  41c061:	sbb    al,0x73
  41c063:	add    bh,BYTE PTR [edx+0x32eb908]
  41c069:	test   bh,ah
  41c06b:	(bad)  
  41c06c:	sbb    al,0xca
  41c06e:	push   ecx
  41c06f:	stc    
  41c070:	mov    esp,DWORD PTR [edx]
  41c072:	std    
  41c073:	pop    esp
  41c074:	mov    dl,0x19
  41c076:	jle    0x41c073
  41c078:	(bad)  
  41c079:	cli    
  41c07a:	les    esp,FWORD PTR [ebx+0x3e]
  41c07d:	sbb    eax,0x45d48120
  41c082:	inc    esp
  41c083:	inc    esp
  41c084:	neg    BYTE PTR [ecx-0x2cb5d6c4]
  41c08a:	add    DWORD PTR [eax],ebp
  41c08c:	push   edi
  41c08d:	mov    eax,0x5369fcc9
  41c092:	cmp    al,0xe
  41c094:	ret    
  41c095:	bound  ebx,QWORD PTR [ebp+edi*4-0x54]
  41c099:	js     0x41c071
  41c09b:	sbb    esp,edi
  41c09d:	xchg   ebx,eax
  41c09e:	adc    eax,0xd512e476
  41c0a3:	rcr    BYTE PTR [esi+0x37193ac9],0x30
  41c0aa:	ins    DWORD PTR es:[edi],dx
  41c0ab:	das    
  41c0ac:	into   
  41c0ad:	nop
  41c0ae:	retf   0x219a
  41c0b1:	dec    ebx
  41c0b2:	pusha  
  41c0b3:	mov    ds:0x62508010,al
  41c0b8:	(bad)  
  41c0b9:	jns    0x41c075
  41c0bb:	pushf  
  41c0bc:	(bad)  
  41c0bd:	sbb    edi,DWORD PTR [edi]
  41c0bf:	jo     0x41c0fa
  41c0c1:	lds    edx,FWORD PTR [ecx-0x3c]
  41c0c4:	(bad)  
  41c0c5:	mov    ecx,0x480e2478
  41c0ca:	pop    eax
  41c0cb:	aas    
  41c0cc:	or     ebp,DWORD PTR [edi+esi*1]
  41c0cf:	jae    0x41c13d
  41c0d1:	mov    WORD PTR [ebx+0x7662c682],ds
  41c0d7:	dec    ebp
  41c0d8:	sub    ebp,DWORD PTR [esi-0x47830615]
  41c0de:	(bad)  
  41c0df:	ja     0x41c069
  41c0e1:	fimul  DWORD PTR [edx+0x13518482]
  41c0e7:	xor    esi,esi
  41c0e9:	loopne 0x41c076
  41c0eb:	dec    esp
  41c0ec:	pop    es
  41c0ed:	test   eax,0x174a1a47
  41c0f2:	jge    0x41c0a4
  41c0f4:	mov    dh,0x56
  41c0f6:	aaa    
  41c0f7:	pop    edx
  41c0f8:	pop    ebx
  41c0f9:	pop    ss
  41c0fa:	jle    0x41c0e1
  41c0fc:	pop    ebp
  41c0fd:	sub    ch,BYTE PTR [ecx+0x25]
  41c100:	xchg   ebp,eax
  41c101:	es dec eax
  41c103:	dec    ecx
  41c104:	pop    ds
  41c105:	adc    dh,BYTE PTR [esi+0x1c]
  41c108:	fcomp  DWORD PTR [edx-0x67422fbf]
  41c10e:	imul   edx,DWORD PTR [edi],0xffffffe5
  41c111:	out    dx,al
  41c112:	mov    ds:0xe400824f,eax
  41c117:	into   
  41c118:	js     0x41c0c1
  41c11a:	push   ebp
  41c11b:	mov    esp,ds
  41c11d:	jo     0x41c167
  41c11f:	or     edx,DWORD PTR [ecx]
  41c121:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c122:	mov    eax,ds:0x2e27acd4
  41c127:	adc    eax,0xfdf3e51c
  41c12c:	dec    ebx
  41c12d:	rcl    BYTE PTR [esi+0x245a44fc],cl
  41c133:	mov    ebp,0x1ca65371
  41c138:	inc    ebp
  41c139:	dec    edi
  41c13a:	cwde   
  41c13b:	dec    ecx
  41c13c:	or     cl,BYTE PTR [edx]
  41c13e:	push   ecx
  41c13f:	jecxz  0x41c179
  41c141:	jle    0x41c1b1
  41c143:	in     eax,0xc8
  41c145:	div    edx
  41c147:	adc    eax,0xda12289f
  41c14c:	dec    ecx
  41c14d:	imul   ecx,esi,0xe8474f4
  41c153:	test   BYTE PTR [ecx],ch
  41c155:	sbb    al,0x90
  41c157:	push   edi
  41c158:	mov    dh,0x32
  41c15a:	popf   
  41c15b:	loopne 0x41c179
  41c15d:	nop
  41c15e:	jns    0x41c170
  41c160:	lds    esp,FWORD PTR [ebx+0x5c9d6cda]
  41c166:	rcpps  xmm5,XMMWORD PTR [esi]
  41c169:	or     al,0x10
  41c16b:	push   esi
  41c16c:	and    al,0x64
  41c16e:	mov    bh,0x8b
  41c170:	push   esp
  41c171:	loopne 0x41c1a1
  41c173:	shr    DWORD PTR [ecx],cl
  41c175:	test   eax,0x80be51d7
  41c17a:	jne    0x41c1c9
  41c17c:	stos   DWORD PTR es:[edi],eax
  41c17d:	leave  
  41c17e:	sbb    DWORD PTR [edx-0x38],esi
  41c181:	inc    esp
  41c182:	dec    esp
  41c183:	and    DWORD PTR [ecx],esp
  41c185:	add    ebx,DWORD PTR ds:0xcd41c10f
  41c18b:	mov    ah,BYTE PTR [ecx]
  41c18d:	fnstsw WORD PTR [edi-0x70]
  41c190:	idiv   DWORD PTR [edx]
  41c192:	fcmove st,st(2)
  41c194:	mov    edi,0x5d75f66f
  41c199:	lea    esi,[edx]
  41c19b:	add    ebp,ebx
  41c19d:	adc    edx,esi
  41c19f:	mov    cl,0xd8
  41c1a1:	adc    ch,BYTE PTR [edi]
  41c1a3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c1a4:	fisttp WORD PTR [ecx+0x6ae6b8bf]
  41c1aa:	xor    ch,BYTE PTR [eax-0x4b]
  41c1ad:	add    ebp,esp
  41c1af:	sar    esi,0x9c
  41c1b2:	mov    ah,0xd5
  41c1b4:	push   0xfffffffd
  41c1b6:	cmp    ebp,ecx
  41c1b8:	pop    ebp
  41c1b9:	int    0xe6
  41c1bb:	mov    eax,ds:0xf20b3e2c
  41c1c0:	xchg   ebp,eax
  41c1c1:	out    0x7c,al
  41c1c3:	cmp    ah,dh
  41c1c5:	jle    0x41c22c
  41c1c7:	jecxz  0x41c1b3
  41c1c9:	add    bl,BYTE PTR [ecx]
  41c1cb:	enter  0xc802,0x39
  41c1cf:	std    
  41c1d0:	jb     0x41c1cc
  41c1d2:	test   eax,0x1aa2d680
  41c1d7:	test   al,0x50
  41c1d9:	out    0xa8,eax
  41c1db:	or     eax,0xa514fa7f
  41c1e0:	mov    bl,0x36
  41c1e2:	xchg   bl,ah
  41c1e4:	lods   eax,DWORD PTR ds:[esi]
  41c1e5:	(bad)  
  41c1e6:	sub    ah,dl
  41c1e8:	mov    DWORD PTR [edx+0x117c8e7d],esi
  41c1ee:	push   edi
  41c1ef:	add    DWORD PTR [ebx+0x6a7a8622],0x7a
  41c1f6:	fnstcw WORD PTR [ebp+0x36]
  41c1f9:	scas   al,BYTE PTR es:[edi]
  41c1fa:	mov    WORD PTR [esi+edi*8],?
  41c1fd:	dec    edx
  41c1fe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c1ff:	and    ebp,edi
  41c201:	scas   al,BYTE PTR es:[edi]
  41c202:	pop    ecx
  41c203:	cmp    eax,DWORD PTR [ebx-0x7361e17d]
  41c209:	dec    esp
  41c20a:	add    ecx,DWORD PTR [ebx-0x67]
  41c20d:	sub    esp,ecx
  41c20f:	int3   
  41c210:	mov    edi,0x7c4053b5
  41c215:	sbb    DWORD PTR [ebp-0x72e2dc5d],ebp
  41c21b:	test   eax,0xcee2fbc0
  41c220:	fstp   QWORD PTR [esi+0x43]
  41c223:	retf   0xdf92
  41c226:	bound  eax,QWORD PTR [ebp-0x12b973e8]
  41c22c:	sbb    eax,0x3036c5d8
  41c231:	xchg   ecx,eax
  41c232:	out    0x46,eax
  41c234:	aad    0x77
  41c236:	cmp    BYTE PTR [ebx+0x72],al
  41c239:	hlt    
  41c23a:	push   0x7a
  41c23c:	fs pop es
  41c23e:	lea    eax,[esi+edx*4-0x2d]
  41c242:	mov    dh,0x5b
  41c244:	pusha  
  41c245:	or     edi,esp
  41c247:	xor    al,0xc3
  41c249:	fld    QWORD PTR [edi-0x26f76287]
  41c24f:	das    
  41c250:	dec    esp
  41c251:	nop
  41c252:	fmul   QWORD PTR [eax]
  41c254:	dec    esp
  41c255:	pop    esi
  41c256:	add    ch,BYTE PTR [ebp-0x3cb2d23d]
  41c25c:	mov    edi,0x2bc1f8dc
  41c261:	add    eax,0x83a14a67
  41c266:	add    al,cl
  41c268:	adc    esp,eax
  41c26a:	inc    edi
  41c26b:	je     0x41c2bf
  41c26d:	jbe    0x41c22e
  41c26f:	cld    
  41c270:	xor    BYTE PTR [eax],dh
  41c272:	(bad)  
  41c274:	dec    ecx
  41c275:	call   0xb049383a
  41c27a:	repnz outs dx,DWORD PTR ds:[esi]
  41c27c:	sbb    eax,0x6e4cd02e
  41c281:	jmp    0x8812:0x975682c4
  41c288:	lea    esp,[eax]
  41c28a:	(bad)  [ebx+ebp*8]
  41c28d:	es jae 0x41c2d3
  41c290:	mov    esp,eax
  41c292:	shr    edx,1
  41c294:	dec    edi
  41c295:	shl    BYTE PTR gs:[eax],0x74
  41c299:	out    dx,eax
  41c29a:	iret   
  41c29b:	and    al,0x58
  41c29d:	rdpmc  
  41c29f:	and    ecx,DWORD PTR [ebp-0x63f2f3f5]
  41c2a5:	mov    ch,0xde
  41c2a7:	xchg   ecx,eax
  41c2a8:	pop    eax
  41c2a9:	test   al,0x99
  41c2ab:	push   0x63
  41c2ad:	aam    0xc9
  41c2af:	sbb    ecx,0xf1ac37a5
  41c2b5:	xchg   ecx,eax
  41c2b6:	adc    DWORD PTR [ebx],esp
  41c2b8:	dec    esi
  41c2b9:	jge    0x41c248
  41c2bb:	std    
  41c2bc:	aad    0x29
  41c2be:	leave  
  41c2bf:	dec    ebp
  41c2c0:	mov    bl,0xc6
  41c2c2:	mov    ecx,0xf94959d2
  41c2c7:	adc    al,0xb1
  41c2c9:	ins    BYTE PTR es:[edi],dx
  41c2ca:	call   0x8fcdd800
  41c2cf:	add    al,0x5f
  41c2d1:	adc    eax,0x970c065e
  41c2d6:	popf   
  41c2d7:	push   edx
  41c2d8:	lods   al,BYTE PTR ds:[esi]
  41c2d9:	fidiv  WORD PTR [edx+0x4e292865]
  41c2df:	and    DWORD PTR [eax],ebp
  41c2e1:	pop    esp
  41c2e2:	imul   ecx,DWORD PTR [edx+0x41],0xffffff82
  41c2e6:	hlt    
  41c2e7:	adc    DWORD PTR [ebp-0x185f4c93],0xe06042fd
  41c2f1:	rcl    BYTE PTR [edx],cl
  41c2f3:	inc    ebx
  41c2f4:	pop    esp
  41c2f5:	int    0xc6
  41c2f7:	sbb    al,0xdf
  41c2f9:	mov    esp,0xf70f1992
  41c2fe:	retf   0x6f78
  41c301:	and    bl,ch
  41c303:	xchg   BYTE PTR [edi-0x26f3f31e],cl
  41c309:	inc    esi
  41c30a:	rep lods eax,DWORD PTR ds:[esi]
  41c30c:	dec    ebp
  41c30d:	sbb    dh,ch
  41c30f:	jp     0x41c2ec
  41c311:	mov    eax,0x2e73a30d
  41c316:	iret   
  41c317:	data16 fisubr WORD PTR [esi+0x46]
  41c31b:	or     bh,BYTE PTR [ecx+0x5d46dae7]
  41c321:	out    dx,al
  41c322:	sahf   
  41c323:	sti    
  41c324:	out    dx,eax
  41c325:	pop    esi
  41c326:	pop    ecx
  41c327:	imul   esi,esi,0x42afe436
  41c32d:	out    dx,al
  41c32e:	add    al,BYTE PTR [ebx-0x26c53bb8]
  41c334:	jno    0x41c378
  41c336:	sub    al,0xf8
  41c338:	hlt    
  41c339:	inc    esi
  41c33a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c33b:	adc    BYTE PTR [edx-0x28],bh
  41c33e:	inc    edx
  41c33f:	jmp    0x41c2e7
  41c341:	stos   BYTE PTR es:[edi],al
  41c342:	ror    BYTE PTR [edx-0x51],0x92
  41c346:	call   0xc5e5e2c5
  41c34b:	sub    eax,0xb1805901
  41c350:	or     BYTE PTR [edx-0x45],bl
  41c353:	sbb    eax,0xe7a34545
  41c358:	xchg   edx,eax
  41c359:	mov    dh,0x91
  41c35b:	mov    DWORD PTR [ebx-0x11],edx
  41c35e:	in     al,0x84
  41c360:	push   esp
  41c361:	jg     0x41c37f
  41c363:	jmp    0x92b4:0x9e3ce5dd
  41c36a:	fnstcw WORD PTR [eax+0x2bf8770a]
  41c370:	mov    bh,0x2
  41c372:	cmp    edx,DWORD PTR [ebp-0x52]
  41c375:	pop    ebp
  41c376:	(bad)  
  41c377:	stc    
  41c378:	out    0x42,al
  41c37a:	fistp  QWORD PTR [ebx]
  41c37c:	push   DWORD PTR [edi-0x54]
  41c37f:	aas    
  41c380:	pop    edx
  41c381:	stos   DWORD PTR es:[edi],eax
  41c382:	popa   
  41c383:	add    DWORD PTR [edi+0x570f7413],eax
  41c389:	jns    0x41c3ee
  41c38b:	xchg   DWORD PTR [ebx-0x2e694a71],eax
  41c391:	les    ebx,FWORD PTR [eax-0x1e]
  41c394:	icebp  
  41c395:	sbb    esp,DWORD PTR [edi-0x398dd7a5]
  41c39b:	loop   0x41c3bc
  41c39d:	ds cdq 
  41c39f:	add    bl,al
  41c3a1:	jl     0x41c362
  41c3a3:	mov    ch,0x85
  41c3a5:	loopne 0x41c393
  41c3a7:	sbb    al,0x85
  41c3a9:	push   es
  41c3aa:	xor    ebp,DWORD PTR [edx+0x39]
  41c3ad:	cmp    al,0x2c
  41c3af:	(bad)  
  41c3b1:	dec    ebx
  41c3b2:	push   cs
  41c3b3:	inc    esi
  41c3b4:	lock pusha 
  41c3b6:	test   al,0xfb
  41c3b8:	les    edx,FWORD PTR [ecx+0x73]
  41c3bb:	inc    ecx
  41c3bc:	fwait
  41c3bd:	popf   
  41c3be:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c3bf:	loope  0x41c3fc
  41c3c1:	fimul  WORD PTR [eax]
  41c3c3:	in     al,dx
  41c3c4:	bnd jne 0x41c36f
  41c3c7:	mov    dh,0x1c
  41c3c9:	inc    esi
  41c3ca:	or     eax,0x69b8bd55
  41c3cf:	jno    0x41c359
  41c3d1:	inc    esp
  41c3d2:	scas   al,BYTE PTR es:[edi]
  41c3d3:	pop    es
  41c3d4:	push   0x35
  41c3d6:	sub    BYTE PTR [ebp-0x79],0x4e
  41c3da:	inc    eax
  41c3db:	adc    ch,BYTE PTR [edi]
  41c3dd:	adc    al,0x10
  41c3df:	cmp    DWORD PTR [edi-0x5111c027],ecx
  41c3e5:	popa   
  41c3e6:	or     BYTE PTR [eax+0xd],0x9
  41c3ea:	or     al,0x3d
  41c3ec:	les    ecx,FWORD PTR [eax-0xcdeea0a]
  41c3f2:	adc    BYTE PTR [esi],bh
  41c3f4:	push   edi
  41c3f5:	aam    0xa8
  41c3f7:	pop    eax
  41c3f8:	repnz mov ch,0x25
  41c3fb:	jo     0x41c3c8
  41c3fd:	mov    esi,0x6532e66b
  41c402:	mov    ds:0x5ada784d,eax
  41c407:	pop    esi
  41c408:	loopne 0x41c437
  41c40a:	dec    eax
  41c40b:	aaa    
  41c40c:	mov    eax,0x9454e506
  41c411:	dec    ebx
  41c412:	sbb    esp,DWORD PTR [ebx+eax*2-0x5e]
  41c416:	cdq    
  41c417:	daa    
  41c418:	(bad)  
  41c419:	out    dx,al
  41c41a:	sbb    dh,0x4d
  41c41d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c41e:	cwde   
  41c41f:	push   cs
  41c420:	add    eax,0xc9721211
  41c425:	xchg   esi,eax
  41c426:	pushf  
  41c427:	retf   
  41c428:	(bad)  
  41c429:	rcr    BYTE PTR [esi+0x56544d5f],cl
  41c42f:	pusha  
  41c430:	pop    es
  41c431:	popf   
  41c432:	sub    DWORD PTR [ebx-0x21],ebp
  41c435:	fcomp  DWORD PTR [edi+edx*2-0x1f]
  41c439:	fstp   DWORD PTR [ecx+0x23]
  41c43c:	xor    BYTE PTR [esi+0x2d88ea8e],dl
  41c442:	jb     0x41c423
  41c444:	jnp    0x41c40e
  41c446:	mov    edi,0x23e0e6ec
  41c44b:	cmp    BYTE PTR [edi],al
  41c44d:	xor    BYTE PTR [ebp-0x2a],dl
  41c450:	sbb    al,0x2
  41c452:	icebp  
  41c453:	mov    esi,DWORD PTR [ebp+0x527440d1]
  41c459:	adc    DWORD PTR [edi],edx
  41c45b:	add    esp,DWORD PTR [ebx+edx*8+0x2c]
  41c45f:	dec    eax
  41c460:	jnp    0x41c4b3
  41c462:	mov    esi,ds
  41c464:	lea    edx,[ecx-0x7f8fc52d]
  41c46a:	(bad)  
  41c46c:	fxch   st(4)
  41c46e:	in     al,dx
  41c46f:	into   
  41c470:	mov    al,0xbd
  41c472:	xor    ecx,esp
  41c474:	adc    cl,BYTE PTR [ebx+0x15]
  41c477:	int    0xb7
  41c479:	add    esi,esp
  41c47b:	daa    
  41c47c:	mov    ch,0xf6
  41c47e:	inc    ebx
  41c47f:	jnp    0x41c432
  41c481:	sub    eax,0x3317bf86
  41c486:	outs   dx,BYTE PTR ds:[esi]
  41c487:	xchg   esp,eax
  41c488:	retf   0xf365
  41c48b:	jae    0x41c47d
  41c48d:	aam    0x7f
  41c48f:	push   ebp
  41c490:	pop    edi
  41c491:	mov    dh,0xe7
  41c493:	loope  0x41c476
  41c495:	hlt    
  41c496:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c497:	call   DWORD PTR [ebp-0x775b2764]
  41c49d:	(bad)  
  41c49f:	lds    eax,FWORD PTR [ebx-0x51]
  41c4a2:	mov    cl,0x1e
  41c4a4:	cmp    ebp,DWORD PTR [esi+0x2dbe886]
  41c4aa:	test   DWORD PTR [ebx-0x7a],edx
  41c4ad:	add    eax,0x67b6f538
  41c4b2:	(bad)  
  41c4b3:	jae    0x41c46e
  41c4b5:	nop
  41c4b6:	pop    esp
  41c4b7:	jmp    0x6a5db5bc
  41c4bc:	pop    es
  41c4bd:	xor    DWORD PTR [edi+edi*1+0x708a5b21],eax
  41c4c4:	and    bh,dh
  41c4c6:	push   ss
  41c4c7:	cmp    al,BYTE PTR [ebx]
  41c4c9:	ret    
  41c4ca:	data16 stc 
  41c4cc:	pop    esp
  41c4cd:	xor    BYTE PTR [esi-0x7a],cl
  41c4d0:	push   cs
  41c4d1:	add    eax,DWORD PTR [edx+0x3116c878]
  41c4d7:	xchg   edx,eax
  41c4d8:	cmp    esi,DWORD PTR ds:0x1bbfbc3e
  41c4de:	pop    ebx
  41c4df:	frstor [esi+0x42]
  41c4e2:	(bad)  
  41c4e3:	push   ebx
  41c4e4:	fld    TBYTE PTR [eax+0x33ec9978]
  41c4ea:	push   ds
  41c4eb:	push   ebp
  41c4ec:	js     0x41c49f
  41c4ee:	add    al,0xb7
  41c4f0:	retf   0x97d3
  41c4f3:	inc    ebp
  41c4f4:	inc    esi
  41c4f5:	and    cl,BYTE PTR [eax+ebx*2]
  41c4f8:	outs   dx,DWORD PTR ds:[esi]
  41c4f9:	bound  ebp,QWORD PTR [ebx+0x1a3bdc67]
  41c4ff:	adc    DWORD PTR [edx],ebp
  41c501:	fimul  DWORD PTR [ebx+0x1a]
  41c504:	sbb    edi,ebx
  41c506:	push   edi
  41c507:	aas    
  41c508:	jle    0x41c4f8
  41c50a:	mov    ebp,0xe1f610a5
  41c50f:	jbe    0x41c4b7
  41c511:	jnp    0x41c515
  41c513:	adc    BYTE PTR [ecx],ah
  41c515:	(bad)  
  41c516:	jmp    0x41c58c
  41c518:	pop    eax
  41c519:	aad    0x98
  41c51b:	std    
  41c51c:	ret    0x6f9
  41c51f:	sub    DWORD PTR [edi+0x2f01de93],eax
  41c525:	push   esp
  41c526:	mov    esi,0x87812714
  41c52b:	inc    ebp
  41c52c:	fldcw  WORD PTR [edi]
  41c52e:	pop    edx
  41c52f:	sbb    eax,0x656b4a48
  41c534:	(bad)  
  41c535:	pop    ebx
  41c536:	pop    ebp
  41c537:	data16 xor al,0x98
  41c53a:	out    dx,al
  41c53b:	loope  0x41c52b
  41c53d:	data16 test ah,bl
  41c540:	lahf   
  41c541:	cmc    
  41c542:	pop    eax
  41c543:	dec    ebx
  41c544:	(bad)  
  41c545:	lods   al,BYTE PTR ds:[esi]
  41c547:	cmp    DWORD PTR [ecx+0x59cfccfa],edx
  41c54d:	push   edi
  41c54e:	jbe    0x41c5ce
  41c550:	push   0xffffffa7
  41c552:	repnz cs scas al,BYTE PTR es:[edi]
  41c555:	cli    
  41c556:	icebp  
  41c557:	jae    0x41c53f
  41c559:	popa   
  41c55a:	inc    ecx
  41c55b:	jl     0x41c591
  41c55d:	jl     0x41c503
  41c55f:	lea    ebx,[edi-0x2cba0016]
  41c565:	out    0x20,al
  41c567:	arpl   WORD PTR [edi+eax*2-0x3004651b],cx
  41c56e:	repnz scas eax,DWORD PTR es:[edi]
  41c570:	ret    0x1f05
  41c573:	mul    DWORD PTR [ebx+0x4b5558aa]
  41c579:	pop    edx
  41c57a:	push   ss
  41c57b:	mov    esp,0xf9065550
  41c580:	xchg   edx,eax
  41c581:	cmp    al,0x84
  41c583:	sbb    edi,ebx
  41c585:	xchg   BYTE PTR [ebx-0x12508025],cl
  41c58b:	out    dx,eax
  41c58c:	jnp    0x41c60b
  41c58e:	mov    eax,0xf3c333ad
  41c593:	jge    0x41c5d5
  41c595:	mov    esp,0xb837394f
  41c59a:	cli    
  41c59b:	mov    edi,0x892511a2
  41c5a0:	cmp    dl,BYTE PTR [ebx]
  41c5a2:	add    eax,0x1d34dbe7
  41c5a7:	mov    ds,WORD PTR fs:[ecx-0x67e9cad3]
  41c5ae:	add    al,0xd5
  41c5b0:	jno    0x41c54a
  41c5b2:	xor    DWORD PTR [edi-0x35f597a3],0x58
  41c5b9:	imul   esp,DWORD PTR [eax+esi*8-0x78],0xb35f0b28
  41c5c1:	sub    cl,ah
  41c5c3:	inc    esi
  41c5c4:	xchg   esp,eax
  41c5c5:	iret   
  41c5c6:	dec    esi
  41c5c7:	xchg   esi,ebx
  41c5c9:	repz sbb ch,BYTE PTR [edx+0x2a7c22]
  41c5d0:	(bad)  
  41c5d1:	ror    BYTE PTR [ecx+0x5b],cl
  41c5d4:	sub    BYTE PTR [edx],al
  41c5d6:	pop    ebx
  41c5d7:	popf   
  41c5d8:	or     BYTE PTR [edi+0x58],bl
  41c5db:	ins    DWORD PTR es:[edi],dx
  41c5dc:	std    
  41c5dd:	sbb    eax,ecx
  41c5df:	icebp  
  41c5e0:	bound  esi,QWORD PTR [ebx+edi*4+0x2841d744]
  41c5e7:	je     0x41c5d8
  41c5e9:	(bad)  
  41c5ea:	push   edi
  41c5eb:	adc    DWORD PTR [ebx],0xffffff96
  41c5ee:	fcmove st,st(5)
  41c5f0:	or     eax,0xf34ee4d8
  41c5f5:	jo     0x41c5e4
  41c5f7:	aas    
  41c5f8:	gs je  0x41c5bb
  41c5fb:	hlt    
  41c5fc:	leave  
  41c5fd:	mov    ds:0xf96c5ff,al
  41c602:	shr    edx,0x85
  41c605:	dec    esp
  41c606:	dec    ecx
  41c607:	push   ecx
  41c608:	leave  
  41c609:	pop    edi
  41c60a:	mov    bl,0x80
  41c60c:	jmp    0xc53d6dbe
  41c611:	adc    DWORD PTR [ebx-0xc],edi
  41c614:	sahf   
  41c615:	xchg   esi,eax
  41c616:	arpl   WORD PTR [ebx+0x2c],dx
  41c619:	xchg   edi,eax
  41c61a:	loopne 0x41c63d
  41c61c:	dec    edx
  41c61d:	jp     0x41c66a
  41c61f:	add    dh,bh
  41c621:	retf   
  41c622:	sub    dl,BYTE PTR [eax+0x35]
  41c625:	sub    al,BYTE PTR ds:0xa9fb7d1a
  41c62b:	(bad)  
  41c62c:	xchg   edi,eax
  41c62d:	inc    esp
  41c62e:	adc    cl,bh
  41c630:	sub    al,BYTE PTR [esi-0x13dcd57c]
  41c636:	pop    esp
  41c637:	rcl    ch,cl
  41c639:	loop   0x41c680
  41c63b:	adc    al,0x46
  41c63d:	enter  0x8fe6,0xd8
  41c641:	pushf  
  41c642:	in     eax,dx
  41c643:	imul   edi,DWORD PTR [edi+0x77],0x33
  41c647:	iret   
  41c648:	mov    dh,0x6c
  41c64a:	aam    0x6a
  41c64c:	lods   eax,DWORD PTR ds:[esi]
  41c64d:	or     eax,0x545a52b2
  41c652:	int    0xec
  41c654:	repnz xchg edx,eax
  41c656:	neg    ecx
  41c658:	jae    0x41c6be
  41c65a:	test   al,0x8d
  41c65c:	test   DWORD PTR [edx+0x2254f6df],ecx
  41c662:	add    BYTE PTR [esi-0x6c0161f1],0xcc
  41c669:	clc    
  41c66a:	fstp   QWORD PTR ds:0x97d0ea14
  41c670:	pop    esp
  41c671:	mov    eax,0xd7d6e438
  41c676:	(bad)  
  41c677:	xor    al,0x15
  41c679:	fs sahf 
  41c67b:	push   0x6c
  41c67d:	mov    DWORD PTR ds:0x35680af,eax
  41c683:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c684:	sbb    cl,BYTE PTR [ebx-0x571474a7]
  41c68a:	loope  0x41c6a8
  41c68c:	mov    ch,0x2b
  41c68e:	jb     0x41c6e6
  41c690:	test   eax,edx
  41c692:	xor    eax,0xac522140
  41c697:	call   0xa3bc64f5
  41c69c:	sub    al,0x95
  41c69e:	ss in  al,dx
  41c6a0:	mul    BYTE PTR [ecx]
  41c6a2:	mov    esi,ebx
  41c6a4:	adc    bl,al
  41c6a6:	dec    DWORD PTR [esi+0x7ef36b6b]
  41c6ac:	mov    esi,0x85ea38e8
  41c6b1:	loope  0x41c66b
  41c6b3:	mul    DWORD PTR [ebx+0x168a1628]
  41c6b9:	pop    ds
  41c6ba:	inc    esi
  41c6bb:	dec    ebx
  41c6bc:	aam    0x72
  41c6be:	repz lds ecx,FWORD PTR [ecx]
  41c6c1:	les    edi,FWORD PTR [ebp+0x7a]
  41c6c4:	lea    ebx,[ecx-0x7e1890f1]
  41c6ca:	sbb    bl,BYTE PTR [esi+ebx*8]
  41c6cd:	jmp    0x36654ac0
  41c6d2:	sub    BYTE PTR [ecx+esi*4-0x67],bl
  41c6d6:	repnz mov ebx,0x8e354cfb
  41c6dc:	retf   
  41c6dd:	out    dx,al
  41c6de:	sub    BYTE PTR [edi],dl
  41c6e0:	jg     0x41c66a
  41c6e2:	in     al,dx
  41c6e3:	shl    BYTE PTR [edx-0x6b],cl
  41c6e6:	pop    esp
  41c6e7:	imul   DWORD PTR ds:0x3ab5410f
  41c6ed:	cli    
  41c6ee:	push   edx
  41c6ef:	iret   
  41c6f0:	jno    0x41c6d3
  41c6f2:	jne    0x41c6fd
  41c6f4:	xchg   edx,eax
  41c6f5:	hlt    
  41c6f6:	sbb    edi,ecx
  41c6f8:	pop    esp
  41c6f9:	hlt    
  41c6fa:	cmp    al,BYTE PTR [ecx-0x76d0776a]
  41c700:	mov    al,BYTE PTR [edi+0x12]
  41c703:	out    dx,al
  41c704:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c705:	ss cwde 
  41c707:	aas    
  41c708:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c709:	jmp    0x455690a
  41c70e:	retf   0xc362
  41c711:	add    al,0xbc
  41c713:	mov    al,0x13
  41c715:	test   BYTE PTR [ebp+0x7031cf7f],bl
  41c71b:	xchg   ebp,eax
  41c71c:	xor    DWORD PTR [ebx+0x23ac9d57],esp
  41c722:	test   al,0xe1
  41c724:	push   esi
  41c725:	push   esi
  41c726:	js     0x41c77e
  41c728:	lahf   
  41c729:	test   eax,0x4ec1b9ad
  41c72e:	imul   ebx,DWORD PTR [esi-0x24],0xfffffffb
  41c732:	dec    edi
  41c733:	dec    ecx
  41c734:	mov    cl,BYTE PTR [ecx]
  41c736:	cmp    edi,DWORD PTR [eax]
  41c738:	mov    WORD PTR [eax],?
  41c73a:	ja     0x41c718
  41c73c:	scas   eax,DWORD PTR es:[edi]
  41c73d:	add    al,BYTE PTR [ebp+0x69]
  41c740:	loopne 0x41c6c2
  41c742:	xor    cl,BYTE PTR [edi-0x89274ba]
  41c748:	outs   dx,BYTE PTR ds:[esi]
  41c749:	pop    esi
  41c74a:	mov    ds:0x15503539,eax
  41c74f:	mov    dh,0x5c
  41c751:	mov    DWORD PTR [eax+ebp*4],edx
  41c754:	mov    esi,cs
  41c756:	push   ds
  41c757:	je     0x41c771
  41c759:	jp     0x41c6ff
  41c75b:	mov    esp,0x4d438cd5
  41c760:	ss mov ch,0x96
  41c764:	push   ecx
  41c765:	mov    ds:0xaf3cd215,al
  41c76a:	or     ah,BYTE PTR [ecx]
  41c76c:	jge    0x41c773
  41c76e:	jo     0x41c7a4
  41c770:	repz sbb eax,0xbaa4a279
  41c776:	mov    ds:0x780cb7d8,al
  41c77b:	repnz xor ebx,DWORD PTR ds:0x6e7bfc53
  41c782:	and    ah,BYTE PTR [eax-0x26]
  41c785:	or     cl,BYTE PTR [edi-0x6f194e61]
  41c78b:	add    ah,BYTE PTR [ecx]
  41c78d:	sahf   
  41c78e:	dec    ebp
  41c78f:	sub    al,cl
  41c791:	cld    
  41c792:	mov    esi,0x34717e17
  41c797:	retf   0xa753
  41c79a:	inc    esi
  41c79b:	repz mov ecx,0xa4904981
  41c7a1:	xchg   edx,eax
  41c7a2:	imul   ebx,DWORD PTR fs:[ebp-0x23],0x17242a05
  41c7aa:	add    ecx,0x39
  41c7ad:	cld    
  41c7ae:	push   ss
  41c7af:	jl     0x41c81b
  41c7b1:	out    dx,eax
  41c7b2:	(bad)  
  41c7b3:	xor    eax,0x57259ab1
  41c7b8:	xor    al,0xed
  41c7ba:	or     al,0xba
  41c7bc:	stc    
  41c7bd:	out    0x73,al
  41c7bf:	xchg   esi,eax
  41c7c0:	retf   
  41c7c1:	loop   0x41c759
  41c7c3:	data16 out dx,al
  41c7c5:	dec    edi
  41c7c6:	ror    DWORD PTR ds:0x54e8f21e,1
  41c7cc:	iret   
  41c7cd:	mov    ebx,0x11a11c43
  41c7d2:	int3   
  41c7d3:	pushf  
  41c7d4:	and    ch,dl
  41c7d6:	jae    0x41c807
  41c7d8:	shl    BYTE PTR [edx-0x11dbf3d7],1
  41c7de:	mov    dl,0x8d
  41c7e0:	jecxz  0x41c7cd
  41c7e2:	fwait
  41c7e3:	mov    bh,0x1d
  41c7e5:	(bad)  
  41c7e6:	pop    eax
  41c7e7:	(bad)  
  41c7e9:	jmp    0x41c7d4
  41c7eb:	mov    ebp,0x34586da4
  41c7f0:	das    
  41c7f1:	popa   
  41c7f2:	xor    eax,0xe2eb167f
  41c7f7:	push   ds
  41c7f8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c7f9:	push   ecx
  41c7fa:	mov    ch,0xa5
  41c7fc:	mov    al,ds:0x640c2cf9
  41c801:	std    
  41c802:	(bad)  
  41c803:	fistp  DWORD PTR [ebp+0x7a]
  41c806:	rcr    ebx,0xcc
  41c809:	cmp    BYTE PTR [edx-0x73191fcc],dh
  41c80f:	mov    ebp,0x636567f5
  41c814:	xchg   ecx,eax
  41c815:	pop    ebp
  41c816:	icebp  
  41c817:	mov    al,ah
  41c819:	(bad)  
  41c81a:	jns    0x41c807
  41c81c:	sub    eax,0x6f68f84c
  41c821:	jp     0x41c83d
  41c823:	mov    DWORD PTR [ecx+0x62],ebx
  41c826:	dec    edx
  41c827:	mov    ebx,0x99584c64
  41c82c:	sub    esp,edi
  41c82e:	cdq    
  41c82f:	sbb    DWORD PTR [esi],edx
  41c831:	push   0xfbd4b1e4
  41c836:	and    esi,DWORD PTR [ebx]
  41c838:	and    al,bh
  41c83a:	bound  eax,QWORD PTR [esi]
  41c83c:	ret    
  41c83d:	jb     0x41c7ee
  41c83f:	inc    eax
  41c840:	fist   DWORD PTR [eax+0x76]
  41c843:	leave  
  41c844:	stos   DWORD PTR es:[edi],eax
  41c845:	sub    eax,0x764cea40
  41c84a:	clc    
  41c84b:	adc    BYTE PTR ds:[ecx-0x87b9b0c],0x52
  41c853:	or     DWORD PTR gs:[edi],ecx
  41c856:	dec    ebp
  41c857:	out    dx,al
  41c858:	mov    esi,ebx
  41c85a:	xchg   esi,eax
  41c85b:	ss pop esp
  41c85d:	out    0x2e,eax
  41c85f:	lods   al,BYTE PTR ds:[esi]
  41c860:	adc    edx,DWORD PTR [ebp-0x26d694d3]
  41c866:	pop    edi
  41c867:	addr16 pop edi
  41c869:	rol    BYTE PTR [ebx],0x81
  41c86c:	mov    ebx,0x5d145c87
  41c871:	xor    al,0x65
  41c873:	jb     0x41c88b
  41c875:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c876:	fwait
  41c877:	jle    0x41c850
  41c879:	rcr    BYTE PTR [edi+ecx*8-0x5c9ae6f7],cl
  41c880:	xor    esi,eax
  41c882:	cmp    al,0x39
  41c884:	mov    eax,ds:0xfc8bc7db
  41c889:	sub    eax,DWORD PTR [ebx-0x2b72e1f3]
  41c88f:	push   ebp
  41c890:	retf   0x6388
  41c893:	mov    ebx,0xae455bd1
  41c898:	push   ebp
  41c899:	fmul   st(7),st
  41c89b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c89c:	pop    ebx
  41c89d:	jecxz  0x41c88a
  41c89f:	out    0x5a,eax
  41c8a1:	adc    eax,0x7e9f755c
  41c8a6:	pop    ds
  41c8a7:	mov    ch,0xc2
  41c8a9:	add    ebx,DWORD PTR [ecx+0x46]
  41c8ac:	pop    ss
  41c8ad:	dec    edi
  41c8ae:	(bad)  
  41c8af:	mov    eax,0x8c3823b8
  41c8b4:	mov    edx,0x56b9b8fd
  41c8b9:	sub    eax,ebx
  41c8bb:	fwait
  41c8bc:	mov    BYTE PTR [edi],dh
  41c8be:	add    esp,DWORD PTR [eax-0x53]
  41c8c1:	lods   eax,DWORD PTR ds:[esi]
  41c8c2:	mov    ?,ebx
  41c8c4:	xchg   DWORD PTR [edx-0x56d3d0bf],ebp
  41c8ca:	xchg   bh,bh
  41c8cc:	inc    ebx
  41c8cd:	aas    
  41c8ce:	outs   dx,DWORD PTR ds:[esi]
  41c8cf:	add    ebx,ebp
  41c8d1:	xlat   BYTE PTR ds:[ebx]
  41c8d2:	or     al,0x90
  41c8d4:	shl    DWORD PTR [eax-0x5e86faab],cl
  41c8da:	and    DWORD PTR [eax+0x478b9efb],edx
  41c8e0:	pop    ecx
  41c8e1:	mov    edi,gs
  41c8e3:	fsubr  QWORD PTR [esi+esi*8+0xc4a6a7a]
  41c8ea:	adc    al,0xf5
  41c8ec:	jmp    0x42a8:0x1a3f5aea
  41c8f3:	rcl    DWORD PTR [ecx+0x51df3b],0xc7
  41c8fa:	shl    esi,cl
  41c8fc:	fwait
  41c8fd:	icebp  
  41c8fe:	adc    eax,0xe98257aa
  41c903:	sbb    DWORD PTR [ebp-0x15],ecx
  41c906:	jmp    0x41c8b6
  41c908:	cwde   
  41c909:	mov    dl,0x7e
  41c90b:	pop    es
  41c90c:	(bad)  
  41c90e:	push   edi
  41c90f:	jmp    0xc9884f13
  41c914:	adc    edx,ecx
  41c916:	fwait
  41c917:	and    eax,0x8af9b886
  41c91c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c91d:	or     DWORD PTR [ebp+0x1d],esp
  41c920:	push   es
  41c921:	add    eax,0x2b9dca5e
  41c926:	pop    ds
  41c927:	sbb    eax,0x83d98cac
  41c92c:	inc    edx
  41c92d:	adc    al,0x69
  41c92f:	retf   
  41c930:	xlat   BYTE PTR ds:[ebx]
  41c931:	mov    bl,0x87
  41c933:	dec    edi
  41c934:	ror    BYTE PTR [ecx-0x6973b962],1
  41c93a:	shr    BYTE PTR [eax],1
  41c93c:	pop    edi
  41c93d:	aaa    
  41c93e:	push   0x48ded28c
  41c943:	xor    ebx,DWORD PTR [ecx+ebp*2+0x36653af4]
  41c94a:	ja     0x41c8ce
  41c94c:	movlps xmm2,QWORD PTR [ebp+0x14]
  41c950:	outs   dx,BYTE PTR ds:[esi]
  41c951:	dec    esp
  41c952:	lods   al,BYTE PTR ds:[esi]
  41c953:	bound  esi,QWORD PTR [edi]
  41c955:	out    dx,eax
  41c956:	clc    
  41c957:	pop    ds
  41c958:	sub    DWORD PTR [edx+0x2e],esp
  41c95b:	adc    eax,0xa3902cac
  41c960:	dec    eax
  41c961:	pop    es
  41c962:	adc    dl,BYTE PTR [ecx-0x75]
  41c965:	push   esp
  41c966:	adc    DWORD PTR [edx+0x2b],edx
  41c969:	ret    0x3d13
  41c96c:	in     al,0x6f
  41c96e:	daa    
  41c96f:	inc    esp
  41c970:	ss jnp 0x41c993
  41c973:	ror    BYTE PTR [eax+0x7f58be5d],1
  41c979:	les    ebp,FWORD PTR [ebx+edx*8+0x40f76193]
  41c980:	test   al,0xf8
  41c982:	jns    0x41c9fa
  41c984:	jns    0x41c984
  41c986:	outs   dx,DWORD PTR ds:[esi]
  41c987:	mov    ?,ecx
  41c989:	inc    ebx
  41c98a:	cmc    
  41c98b:	test   eax,0x93d84c14
  41c990:	push   esp
  41c991:	jl     0x41ca0b
  41c993:	xchg   DWORD PTR [ebx+0x7f],ecx
  41c996:	or     ebx,DWORD PTR gs:[ecx]
  41c999:	sahf   
  41c99a:	xchg   ebp,eax
  41c99b:	test   eax,0x2cf96e27
  41c9a0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c9a1:	repnz cmc 
  41c9a3:	dec    edx
  41c9a4:	sbb    al,0xf9
  41c9a6:	push   esi
  41c9a7:	dec    esp
  41c9a8:	scas   al,BYTE PTR es:[edi]
  41c9a9:	inc    edi
  41c9aa:	mov    esi,es
  41c9ac:	nop
  41c9ad:	repz lea esi,[edx+0x3625e971]
  41c9b4:	enter  0x7885,0x87
  41c9b8:	div    DWORD PTR [ebx-0x36]
  41c9bb:	ja     0x41c9cb
  41c9bd:	add    bh,BYTE PTR [eax+0x77c96c6e]
  41c9c3:	int    0x1c
  41c9c5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c9c6:	mov    ebx,0xb2cc90a9
  41c9cb:	add    esp,DWORD PTR [eax+0x1e1bfcdc]
  41c9d1:	loopne 0x41c997
  41c9d3:	and    DWORD PTR [edx+0x863f721],eax
  41c9d9:	jae    0x41ca4c
  41c9db:	sub    al,0xf5
  41c9dd:	push   edx
  41c9de:	pop    esp
  41c9df:	scas   eax,DWORD PTR es:[edi]
  41c9e0:	clc    
  41c9e1:	add    eax,0xa62c66e5
  41c9e6:	pop    eax
  41c9e7:	or     ch,al
  41c9e9:	inc    ecx
  41c9ea:	jmp    0x725e:0x3e1de60c
  41c9f1:	cmp    BYTE PTR [edi-0x5d],cl
  41c9f4:	fldenv [esi+0x18648bf2]
  41c9fa:	xchg   ecx,eax
  41c9fb:	iret   
  41c9fc:	or     eax,0x7ca9d651
  41ca01:	inc    eax
  41ca02:	xchg   ecx,eax
  41ca03:	in     eax,0x3
  41ca05:	(bad)
  41ca09:	inc    esp
  41ca0a:	or     eax,0xb01872a6
  41ca0f:	jno    0x41ca66
  41ca11:	push   ebx
  41ca12:	push   edi
  41ca13:	xor    eax,0xa6dd9918
  41ca18:	ja     0x41c99c
  41ca1a:	clc    
  41ca1b:	and    eax,0x22d5ad87
  41ca20:	or     eax,DWORD PTR [edx-0x50]
  41ca23:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ca24:	rcl    DWORD PTR [edi+eiz*2-0x5],0xc9
  41ca29:	call   0x46dcd4d8
  41ca2e:	js     0x41caa2
  41ca30:	mov    eax,0xc31bc143
  41ca35:	xchg   ecx,eax
  41ca36:	test   eax,0x9583f6ae
  41ca3b:	clts   
  41ca3d:	push   ecx
  41ca3e:	loopne 0x41cabb
  41ca40:	aad    0x1e
  41ca42:	in     eax,dx
  41ca43:	mov    esi,0x77e9e8b4
  41ca48:	jmp    0x41ca0a
  41ca4a:	push   edi
  41ca4b:	sbb    ah,BYTE PTR [edx+0x2e052672]
  41ca51:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ca52:	mov    eax,0xf1214b8
  41ca57:	data16 cmp al,0xa
  41ca5b:	les    edx,FWORD PTR [ecx+ebp*8]
  41ca5e:	mov    ebp,0x324de691
  41ca63:	mov    ds:0xb1a6d4ba,al
  41ca68:	mov    edx,eax
  41ca6a:	mov    ah,0x19
  41ca6c:	pop    ebp
  41ca6d:	jecxz  0x41ca86
  41ca6f:	in     eax,0x78
  41ca71:	mov    ds,WORD PTR ds:0xa7952f19
  41ca77:	stos   BYTE PTR es:[edi],al
  41ca78:	sub    ch,BYTE PTR [ecx+ebp*2]
  41ca7b:	lock clc 
  41ca7d:	xchg   edi,eax
  41ca7e:	dec    ebp
  41ca7f:	test   BYTE PTR [ecx-0x56],dh
  41ca82:	rol    DWORD PTR [esi-0x30],cl
  41ca85:	scas   al,BYTE PTR es:[edi]
  41ca86:	popa   
  41ca87:	jo     0x41cb04
  41ca89:	xchg   edx,eax
  41ca8a:	mov    ebx,0xee065e21
  41ca8f:	and    dh,dl
  41ca91:	sub    BYTE PTR [edx],0xac
  41ca94:	ins    BYTE PTR es:[edi],dx
  41ca95:	sub    eax,0xf1891002
  41ca9a:	je     0x41ca4d
  41ca9c:	data16 lods al,BYTE PTR ds:[esi]
  41ca9e:	outs   dx,DWORD PTR ds:[esi]
  41ca9f:	cdq    
  41caa0:	push   ecx
  41caa1:	adc    edx,DWORD PTR [eax-0x2470d2d3]
  41caa7:	retf   
  41caa8:	lods   al,BYTE PTR ds:[esi]
  41caa9:	xchg   edx,eax
  41caaa:	mov    edi,0x6b1f7e24
  41caaf:	pusha  
  41cab0:	iret   
  41cab1:	inc    ecx
  41cab2:	div    ecx
  41cab4:	out    dx,al
  41cab5:	leave  
  41cab6:	scas   al,BYTE PTR es:[edi]
  41cab7:	pop    ss
  41cab8:	mov    esi,DWORD PTR [eax-0x537b24f0]
  41cabe:	jnp    0x41caf6
  41cac0:	out    dx,al
  41cac1:	dec    eax
  41cac2:	xor    al,0xe0
  41cac4:	mov    al,0xbf
  41cac6:	inc    eax
  41cac7:	mov    al,ds:0x945ebcde
  41cacc:	lods   eax,DWORD PTR ds:[esi]
  41cacd:	ins    BYTE PTR es:[edi],dx
  41cace:	push   esp
  41cacf:	xor    ch,BYTE PTR [edx+esi*8]
  41cad2:	or     ch,al
  41cad4:	xchg   ecx,eax
  41cad5:	add    bl,bh
  41cad7:	dec    edi
  41cad8:	scas   al,BYTE PTR es:[edi]
  41cad9:	add    eax,0x14f4d25b
  41cade:	sbb    edi,DWORD PTR [eax]
  41cae0:	out    0x91,eax
  41cae2:	shl    BYTE PTR [esi],0x52
  41cae5:	xor    esi,DWORD PTR [edi+esi*4+0xf]
  41cae9:	dec    ebx
  41caea:	add    DWORD PTR [ebp+0x4c],edi
  41caed:	pushf  
  41caee:	sub    al,0xc0
  41caf0:	sahf   
  41caf1:	sub    al,0x83
  41caf3:	mov    bh,0x2f
  41caf5:	push   edi
  41caf6:	aas    
  41caf7:	cld    
  41caf8:	xchg   ecx,eax
  41caf9:	div    BYTE PTR [esi+ecx*4]
  41cafc:	ret    0xc80e
  41caff:	push   edx
  41cb00:	mov    ds:0x2525ae7,al
  41cb05:	mov    ds:0x6dcd3caf,eax
  41cb0a:	mov    cl,0x35
  41cb0c:	jle    0x41cb6c
  41cb0e:	ds add al,0xd8
  41cb11:	sbb    dh,ch
  41cb13:	scas   eax,DWORD PTR es:[edi]
  41cb14:	fdiv   QWORD PTR [ecx]
  41cb16:	stos   DWORD PTR es:[edi],eax
  41cb17:	loope  0x41cabc
  41cb19:	out    0xe6,al
  41cb1b:	retf   
  41cb1c:	push   ds
  41cb1d:	add    eax,0x6e7b5363
  41cb22:	mov    ah,0x64
  41cb24:	rcl    BYTE PTR [ebp+0xb],0x81
  41cb28:	pop    esp
  41cb29:	add    bh,BYTE PTR [ebx]
  41cb2b:	movhps QWORD PTR [ebx-0x11],xmm4
  41cb2f:	xchg   ebx,eax
  41cb30:	out    dx,al
  41cb31:	sbb    DWORD PTR [edx],0x35
  41cb34:	neg    eax
  41cb36:	or     al,0x96
  41cb38:	fst    QWORD PTR [eax]
  41cb3a:	cdq    
  41cb3b:	mov    bl,0x4a
  41cb3d:	jno    0x41cb93
  41cb3f:	xchg   esi,eax
  41cb40:	cmp    eax,0xaf97789
  41cb45:	inc    esp
  41cb46:	into   
  41cb47:	mov    bl,0x40
  41cb49:	mov    edx,DWORD PTR [ebp-0x23]
  41cb4c:	xchg   ebp,eax
  41cb4d:	and    DWORD PTR [eax],esp
  41cb4f:	sbb    BYTE PTR [ebx],cl
  41cb51:	out    dx,eax
  41cb52:	repnz fst QWORD PTR [ecx-0x32]
  41cb56:	in     eax,0xd7
  41cb58:	pop    eax
  41cb59:	jg     0x41cae4
  41cb5b:	(bad)  
  41cb5c:	jge    0x41cb1b
  41cb5e:	adc    al,0x8d
  41cb60:	test   DWORD PTR [edi+0x1e],ebp
  41cb63:	(bad)  
  41cb64:	ins    BYTE PTR es:[edi],dx
  41cb65:	pop    esi
  41cb66:	inc    ebx
  41cb67:	scas   eax,DWORD PTR es:[edi]
  41cb68:	sahf   
  41cb69:	inc    ecx
  41cb6a:	addr16 lahf 
  41cb6c:	call   0x4bf9:0x12b75e50
  41cb73:	or     BYTE PTR [ecx],dl
  41cb75:	nop
  41cb76:	repz cli 
  41cb78:	idiv   BYTE PTR [ecx-0xd574ed1]
  41cb7e:	mov    ?,WORD PTR [esi+edx*4+0x7f]
  41cb82:	pop    ds
  41cb83:	retf   0x658c
  41cb86:	out    0x30,al
  41cb88:	aam    0x4d
  41cb8a:	pushf  
  41cb8b:	mov    bh,0x47
  41cb8d:	repnz dec esp
  41cb8f:	aad    0x97
  41cb91:	pop    es
  41cb92:	lods   al,BYTE PTR ds:[esi]
  41cb93:	arpl   WORD PTR ss:[esi],dx
  41cb96:	sbb    esi,DWORD PTR [ecx-0x11305ac0]
  41cb9c:	xchg   BYTE PTR [esi+0xa],al
  41cb9f:	cwde   
  41cba0:	or     eax,0x43ca2f62
  41cba5:	pop    ecx
  41cba6:	in     al,dx
  41cba7:	jge    0x41cc26
  41cba9:	repnz dec edi
  41cbab:	les    ebp,FWORD PTR [edi+0x79]
  41cbae:	xchg   edx,eax
  41cbaf:	clc    
  41cbb0:	jmp    0x41cb5f
  41cbb2:	mov    al,ds:0xa2876812
  41cbb7:	and    BYTE PTR [ecx],0x17
  41cbba:	inc    edx
  41cbbb:	shr    dl,cl
  41cbbd:	xor    al,0x48
  41cbbf:	mov    eax,es
  41cbc1:	das    
  41cbc2:	(bad)  
  41cbc3:	inc    edi
  41cbc4:	push   edi
  41cbc5:	pop    eax
  41cbc6:	aam    0x43
  41cbc8:	cmp    BYTE PTR [esi],ch
  41cbca:	repnz sub DWORD PTR [eax],edi
  41cbcd:	loope  0x41cbfb
  41cbcf:	jns    0x41cb61
  41cbd1:	mov    gs,WORD PTR [bp+di]
  41cbd4:	xchg   esp,eax
  41cbd5:	cmp    ecx,ecx
  41cbd7:	pushf  
  41cbd8:	cmp    DWORD PTR [ebx],edx
  41cbda:	das    
  41cbdb:	and    eax,0x9a9cb25b
  41cbe0:	jmp    0x41cbf9
  41cbe2:	jmp    0x41cc23
  41cbe4:	cmp    eax,0x1e8d0f4e
  41cbe9:	ret    0xab7d
  41cbec:	in     eax,0x3a
  41cbee:	mov    ebx,0x3ecaa514
  41cbf3:	es (bad) 
  41cbf5:	aas    
  41cbf6:	push   cs
  41cbf7:	xchg   edx,eax
  41cbf8:	les    edi,FWORD PTR [edi+0x26]
  41cbfb:	jne    0x41cc74
  41cbfd:	(bad)  
  41cbff:	not    DWORD PTR [ecx]
  41cc01:	mov    WORD PTR [edx+0x752d7312],ss
  41cc07:	(bad)  
  41cc08:	pop    edi
  41cc09:	sub    ecx,DWORD PTR [esi+0x6a]
  41cc0c:	and    eax,0xd091d338
  41cc11:	daa    
  41cc12:	ret    
  41cc13:	adc    BYTE PTR [edi],dh
  41cc15:	sub    eax,0x5e259ce5
  41cc1a:	retf   
  41cc1b:	pop    ebp
  41cc1c:	pop    esp
  41cc1d:	in     eax,dx
  41cc1e:	ret    
  41cc1f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cc20:	icebp  
  41cc21:	lock in eax,0xbc
  41cc24:	push   ecx
  41cc25:	add    ebp,edi
  41cc27:	repz mul BYTE PTR [ebx-0xa30a42a]
  41cc2e:	or     dl,0x48
  41cc31:	pop    ebx
  41cc32:	imul   esp,DWORD PTR [eax-0x3c],0x62664f87
  41cc39:	add    al,0x32
  41cc3b:	xor    al,0xc7
  41cc3d:	ret    0x518f
  41cc40:	lahf   
  41cc41:	fs call 0x5eb:0x85a695c4
  41cc49:	push   esp
  41cc4a:	xor    DWORD PTR [esi-0x4d],ecx
  41cc4d:	adc    cl,BYTE PTR [ebx-0x58]
  41cc50:	imul   edx,DWORD PTR [edi-0x80],0xc
  41cc54:	cld    
  41cc55:	les    esi,FWORD PTR [edx+eiz*8]
  41cc58:	and    eax,0x601dbc19
  41cc5d:	mov    bl,0xfb
  41cc5f:	enter  0x7da1,0xe6
  41cc63:	(bad)  
  41cc64:	jne    0x41cc9e
  41cc66:	adc    ebx,DWORD PTR [si]
  41cc69:	add    al,0xf4
  41cc6b:	cdq    
  41cc6c:	add    al,0x74
  41cc6e:	in     eax,0x33
  41cc70:	push   ss
  41cc71:	stos   BYTE PTR es:[edi],al
  41cc72:	push   ebp
  41cc73:	mov    al,bl
  41cc75:	push   ebp
  41cc76:	retf   
  41cc77:	imul   edx,DWORD PTR [edi+0x631fdb6c],0xaec3f9a3
  41cc81:	sub    bl,cl
  41cc83:	jo     0x41ccff
  41cc85:	xor    al,0xdb
  41cc87:	and    al,0x5c
  41cc89:	and    eax,0x6f56435
  41cc8e:	dec    ebx
  41cc8f:	aad    0x55
  41cc91:	push   ss
  41cc92:	out    0x1c,eax
  41cc94:	call   0xac11dcd3
  41cc99:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cc9a:	push   0xce596f00
  41cc9f:	mov    edi,0xcdfe2f47
  41cca4:	fs arpl si,bp
  41cca7:	pushf  
  41cca8:	mov    esp,es
  41ccaa:	xor    al,0x6
  41ccac:	pop    ecx
  41ccad:	push   0x6445ff4e
  41ccb2:	jo     0x41cc61
  41ccb4:	jg     0x41cd01
  41ccb6:	or     BYTE PTR [ebx],bl
  41ccb8:	and    DWORD PTR [esi+0x2a],esp
  41ccbb:	cmp    al,0x4c
  41ccbd:	ss jle 0x41cd30
  41ccc0:	psrad  mm5,QWORD PTR [edi+ebx*1+0x26]
  41ccc5:	aam    0x3e
  41ccc7:	in     al,dx
  41ccc8:	mov    BYTE PTR [ebp+ebx*2+0xaf94fc9],0xc4
  41ccd0:	mov    ds:0x742a6591,al
  41ccd5:	pop    ebp
  41ccd6:	loop   0x41cd12
  41ccd8:	into   
  41ccd9:	fist   DWORD PTR [ecx+0x12]
  41ccdc:	jmp    0x693f590b
  41cce1:	cmp    DWORD PTR [edi+0xe],ecx
  41cce4:	stc    
  41cce5:	in     eax,dx
  41cce6:	ja     0x41cccc
  41cce8:	mov    ds:0xb962ae63,al
  41cced:	or     ah,al
  41ccef:	mov    ah,0xae
  41ccf1:	icebp  
  41ccf2:	mov    bh,0x73
  41ccf4:	add    edx,edx
  41ccf6:	out    0x5e,al
  41ccf8:	mov    ds:0x4fd057b,al
  41ccfd:	fist   WORD PTR [ecx]
  41ccff:	mov    ebx,0xf1f2c9d3
  41cd04:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cd05:	mov    ah,0xb
  41cd07:	outs   dx,DWORD PTR ds:[esi]
  41cd08:	and    DWORD PTR [ebp-0x60],ecx
  41cd0b:	dec    esi
  41cd0c:	out    dx,al
  41cd0d:	push   esi
  41cd0e:	pop    ss
  41cd0f:	mov    edx,0xfd865183
  41cd14:	pop    ss
  41cd15:	pop    ss
  41cd16:	retf   0x6b2
  41cd19:	and    al,0x70
  41cd1b:	add    BYTE PTR [esi-0x1a],ch
  41cd1e:	adc    ch,BYTE PTR [edx-0x5b0fb9dd]
  41cd24:	mov    BYTE PTR [edi+0x7d],ch
  41cd27:	mov    ds:0xa40b82ea,al
  41cd2c:	scas   al,BYTE PTR es:[edi]
  41cd2d:	push   eax
  41cd2e:	xchg   ebp,eax
  41cd2f:	lea    ecx,[edi-0xae16f94]
  41cd35:	retf   0xc30b
  41cd38:	mov    al,0x86
  41cd3a:	inc    eax
  41cd3b:	xor    ecx,DWORD PTR ds:0x1e733bcf
  41cd41:	sub    BYTE PTR [ecx-0x9],al
  41cd44:	ss (bad) 
  41cd46:	ds inc esp
  41cd48:	cmp    dh,BYTE PTR [edx-0x7e]
  41cd4b:	sub    ecx,0xffffffad
  41cd4e:	sbb    bl,BYTE PTR ds:0x97d5e9d6
  41cd54:	jb     0x41cd9a
  41cd56:	or     esi,eax
  41cd58:	mov    bl,0x6
  41cd5a:	cmp    dh,bh
  41cd5c:	dec    ecx
  41cd5d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cd5e:	adc    eax,0xc6177bcf
  41cd63:	cdq    
  41cd64:	and    BYTE PTR [ecx],dh
  41cd66:	hlt    
  41cd67:	inc    esp
  41cd68:	aaa    
  41cd69:	lods   eax,DWORD PTR ds:[esi]
  41cd6a:	jb     0x41cd6a
  41cd6c:	and    al,0x8f
  41cd6e:	adc    al,0x59
  41cd70:	ror    DWORD PTR ds:0x698c7d45,0x1f
  41cd77:	and    eax,0xde7f5822
  41cd7c:	fcmove st,st(5)
  41cd7e:	lahf   
  41cd7f:	push   ebp
  41cd80:	push   esp
  41cd81:	cmp    BYTE PTR [ebx-0x38],cl
  41cd84:	xlat   BYTE PTR ds:[ebx]
  41cd85:	xchg   BYTE PTR ds:0x8293e642,ch
  41cd8b:	dec    edi
  41cd8c:	icebp  
  41cd8d:	sub    BYTE PTR [esi],cl
  41cd8f:	sub    al,0x5
  41cd91:	ins    BYTE PTR es:[edi],dx
  41cd92:	(bad)  
  41cd93:	adc    esi,DWORD PTR [ebp+0x1805c12]
  41cd99:	push   ecx
  41cd9a:	cld    
  41cd9b:	push   ebx
  41cd9c:	xor    eax,0x7bc0732b
  41cda1:	xchg   bl,bh
  41cda3:	mov    edx,0xb92c52cc
  41cda8:	(bad)  
  41cda9:	xor    ebp,ebx
  41cdab:	icebp  
  41cdac:	aam    0xf9
  41cdae:	and    al,0xa
  41cdb0:	enter  0x7581,0x1d
  41cdb4:	hlt    
  41cdb5:	cmp    al,0x4b
  41cdb7:	push   ss
  41cdb8:	je     0x41cd42
  41cdba:	mov    dh,0x3f
  41cdbc:	repz and DWORD PTR [edi-0x31],0xf
  41cdc1:	push   esp
  41cdc2:	jbe    0x41ce1e
  41cdc4:	cmp    BYTE PTR [esi-0x5e],dl
  41cdc7:	lock push es
  41cdc9:	pushf  
  41cdca:	jg     0x41cd74
  41cdcc:	cmp    ch,0xe4
  41cdcf:	stos   BYTE PTR es:[edi],al
  41cdd0:	xchg   ebx,eax
  41cdd1:	(bad)  
  41cdd2:	adc    DWORD PTR [ebp+ecx*8-0x69],esp
  41cdd6:	cmp    BYTE PTR [ecx],dl
  41cdd8:	jb     0x41ce26
  41cdda:	jge    0x41cd79
  41cddc:	mov    ebx,0x6a8989ab
  41cde1:	mov    WORD PTR [eax+0x22b4c97],?
  41cde7:	mov    eax,0x16d8b72d
  41cdec:	js     0x41cd8c
  41cdee:	es popf 
  41cdf0:	push   cs
  41cdf1:	bound  esp,QWORD PTR [esi+0x717817b7]
  41cdf7:	xor    al,0xfd
  41cdf9:	pop    ecx
  41cdfa:	js     0x41ce67
  41cdfc:	pop    edi
  41cdfd:	inc    ebx
  41cdfe:	lods   al,BYTE PTR ds:[esi]
  41cdff:	add    ebp,edx
  41ce01:	jne    0x41cd8f
  41ce03:	mov    ecx,0xfc02dc02
  41ce08:	and    dl,ch
  41ce0a:	pop    ecx
  41ce0b:	and    BYTE PTR ds:0xd8f669a2,bl
  41ce11:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ce12:	push   ss
  41ce13:	ins    BYTE PTR es:[edi],dx
  41ce14:	cwde   
  41ce15:	pop    edi
  41ce16:	push   eax
  41ce17:	ins    DWORD PTR es:[edi],dx
  41ce18:	sbb    DWORD PTR [ecx-0x46299c50],esi
  41ce1e:	jbe    0x41ce6b
  41ce20:	xchg   ecx,eax
  41ce21:	sub    eax,0x9072505b
  41ce26:	cli    
  41ce27:	adc    eax,0xe7fca6a8
  41ce2c:	ja     0x41ce27
  41ce2e:	mov    es,WORD PTR [ebp+0x35]
  41ce31:	shr    BYTE PTR [edx],1
  41ce33:	aad    0xc7
  41ce35:	cld    
  41ce36:	or     bh,BYTE PTR [edx+0x1f529e3c]
  41ce3c:	stos   DWORD PTR es:[edi],eax
  41ce3d:	popf   
  41ce3e:	xchg   edx,eax
  41ce3f:	mov    BYTE PTR [ebp-0x117b3b20],dl
  41ce45:	pushf  
  41ce46:	stos   DWORD PTR es:[edi],eax
  41ce47:	fidiv  DWORD PTR [esi+0x46]
  41ce4a:	and    DWORD PTR [ebx+0x2f24d3d3],esp
  41ce50:	nop
  41ce51:	jp     0x41ce61
  41ce53:	push   ss
  41ce54:	sar    ah,cl
  41ce56:	push   0x4c062c5a
  41ce5b:	enter  0x3ed2,0xf9
  41ce5f:	mov    eax,ds:0xf4f7ec8c
  41ce64:	push   ds
  41ce65:	and    DWORD PTR [eax],ebp
  41ce67:	out    0x7f,al
  41ce69:	xchg   BYTE PTR [edx-0x8e946f4],bl
  41ce6f:	push   ss
  41ce70:	jmp    0x2b45d5db
  41ce75:	std    
  41ce76:	push   ss
  41ce77:	fldl2e 
  41ce79:	lea    ecx,[esi]
  41ce7b:	mov    esi,0xc98c73d5
  41ce80:	push   eax
  41ce81:	and    esp,DWORD PTR [edx+0x357ab0b7]
  41ce87:	cs xchg ebp,eax
  41ce89:	call   0xba9e:0x4b6b01c0
  41ce90:	push   es
  41ce91:	(bad)  
  41ce93:	js     0x41ce60
  41ce95:	inc    eax
  41ce96:	sbb    BYTE PTR [ebx],cl
  41ce98:	lods   al,BYTE PTR ds:[esi]
  41ce99:	mov    eax,ds:0x2fcf0a7d
  41ce9e:	sbb    BYTE PTR [ebx-0x230ce386],ch
  41cea4:	push   ebx
  41cea5:	xchg   bl,al
  41cea7:	adc    al,BYTE PTR [ebx]
  41cea9:	mov    ah,0xf8
  41ceab:	fs (bad) 
  41cead:	ror    ebp,cl
  41ceaf:	xchg   DWORD PTR [edx],edx
  41ceb1:	das    
  41ceb2:	stc    
  41ceb3:	pop    eax
  41ceb4:	mov    ds:0xcefcaa19,eax
  41ceb9:	setns  BYTE PTR [ebx+0x50]
  41cebd:	adc    ch,bh
  41cebf:	pop    eax
  41cec0:	(bad)  
  41cec1:	(bad)  
  41cec2:	imul   ebx,edx,0xc
  41cec5:	sub    DWORD PTR [ecx-0x3b],0xa573ac85
  41cecc:	(bad)  
  41cecd:	dec    edi
  41cece:	adc    DWORD PTR ds:0x500a32c5,eax
  41ced4:	mov    ah,0xc5
  41ced6:	ins    BYTE PTR es:[edi],dx
  41ced7:	clc    
  41ced8:	inc    eax
  41ced9:	cmp    bl,BYTE PTR ds:0xd620ba59
  41cedf:	lock std 
  41cee1:	popf   
  41cee2:	hlt    
  41cee3:	into   
  41cee4:	cli    
  41cee5:	ror    ebp,0x86
  41cee8:	fcomp  DWORD PTR [edi+edx*8-0x3276780a]
  41ceef:	stos   BYTE PTR es:[edi],al
  41cef0:	mov    eax,ds:0xe74bb5d3
  41cef5:	mov    edx,edx
  41cef7:	sbb    DWORD PTR [ecx],eax
  41cef9:	lds    esp,FWORD PTR [ebx+0x12]
  41cefc:	jg     0x41cf6f
  41cefe:	sub    eax,0x1aaeaabf
  41cf03:	add    eax,0xc81e69e5
  41cf08:	arpl   di,sp
  41cf0a:	out    0x11,al
  41cf0c:	aad    0x86
  41cf0e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cf0f:	mov    ecx,0x3c707de7
  41cf14:	jb     0x41cedb
  41cf16:	add    al,0x39
  41cf18:	in     al,0xbb
  41cf1a:	add    eax,0x702749eb
  41cf1f:	call   0xb4da:0xa2f71c48
  41cf26:	(bad)  
  41cf27:	jbe    0x41cf11
  41cf29:	adc    dl,BYTE PTR [edx-0x5]
  41cf2c:	fs fmul st(2),st
  41cf2f:	dec    DWORD PTR [ecx-0x32]
  41cf32:	and    bl,BYTE PTR [ecx-0x2a267ba9]
  41cf38:	mov    DWORD PTR [ecx+0x29],ebx
  41cf3b:	mov    ch,0x63
  41cf3d:	mov    eax,0xf4dd5cf8
  41cf42:	in     eax,0x46
  41cf44:	jmp    DWORD PTR [ecx-0x79]
  41cf47:	sub    ah,cl
  41cf49:	add    al,0xde
  41cf4b:	addr16 leave 
  41cf4d:	pop    ds
  41cf4e:	inc    ebx
  41cf4f:	enter  0x7a9d,0x6a
  41cf53:	vmaxss xmm7,xmm4,DWORD PTR [edx+eax*4-0x294d63c8]
  41cf5c:	in     al,dx
  41cf5d:	fdivr  st,st(6)
  41cf5f:	scas   eax,DWORD PTR es:[edi]
  41cf60:	adc    eax,0x16e1fdfb
  41cf65:	gs clc 
  41cf67:	scas   eax,DWORD PTR es:[edi]
  41cf68:	or     BYTE PTR [edx-0x5e],0xb7
  41cf6c:	in     al,dx
  41cf6d:	cmp    eax,0x52067804
  41cf72:	or     al,BYTE PTR [ebp+0x8]
  41cf75:	jge    0x41cf42
  41cf77:	cmp    BYTE PTR [ebx],al
  41cf79:	(bad)  
  41cf7a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cf7b:	lahf   
  41cf7c:	inc    ecx
  41cf7d:	out    dx,al
  41cf7e:	jp     0x41cf0d
  41cf80:	outs   dx,BYTE PTR ds:[esi]
  41cf81:	fisttp WORD PTR [eax+0x1224baf5]
  41cf87:	dec    esi
  41cf88:	or     DWORD PTR [esi+0xe315c72],esp
  41cf8e:	mov    ah,0x29
  41cf90:	fdiv   QWORD PTR [eax+0xc9fd9c6]
  41cf96:	mov    ds:0x1450f811,al
  41cf9b:	add    eax,0xcf064b7d
  41cfa0:	rcl    DWORD PTR [ecx],cl
  41cfa2:	imul   esp,DWORD PTR [esi-0x6e69e948],0x30c75307
  41cfac:	pop    edx
  41cfad:	ss xchg edx,eax
  41cfaf:	ins    DWORD PTR es:[edi],dx
  41cfb0:	retf   0x800f
  41cfb3:	in     al,dx
  41cfb4:	mov    ecx,0x38dfa3ee
  41cfb9:	adc    eax,0xf51708e2
  41cfbe:	(bad)  
  41cfbf:	(bad)  
  41cfc0:	cli    
  41cfc1:	jmp    0xee7a:0xf2326ff9
  41cfc8:	inc    esp
  41cfc9:	push   ebx
  41cfca:	push   esp
  41cfcb:	push   edx
  41cfcc:	fstp   DWORD PTR [eax-0xedaa369]
  41cfd2:	pop    edi
  41cfd3:	dec    esi
  41cfd4:	mov    ch,0x7
  41cfd6:	loop   0x41cfa1
  41cfd8:	scas   eax,DWORD PTR es:[edi]
  41cfd9:	or     esp,DWORD PTR [edi+esi*2+0x1050f9d9]
  41cfe0:	nop
  41cfe1:	xchg   ebx,eax
  41cfe2:	and    al,0x73
  41cfe4:	and    al,0xaa
  41cfe6:	or     bl,al
  41cfe8:	arpl   WORD PTR [ecx],di
  41cfea:	pop    ebx
  41cfeb:	hlt    
  41cfec:	out    0x96,eax
  41cfee:	rol    dl,0x81
  41cff1:	or     al,0xaa
  41cff3:	test   dh,dl
  41cff5:	push   es
  41cff6:	or     edi,esi
  41cff8:	(bad)  
  41cff9:	mov    WORD PTR ds:0xf25ab205,?
  41cfff:	pop    esp
  41d000:	sti    
  41d001:	xor    bl,0x3a
  41d004:	aaa    
  41d005:	popf   
  41d006:	dec    ebx
  41d007:	jmp    0x4fa8a2fe
  41d00c:	pop    esp
  41d00d:	mov    WORD PTR [ebx-0x50],?
  41d010:	bound  esi,QWORD PTR [edx+0xdd0bc1f]
  41d016:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d017:	je     0x41cfee
  41d019:	ins    BYTE PTR es:[edi],dx
  41d01a:	enter  0xde0c,0xbd
  41d01e:	sub    eax,0x67fee7c7
  41d023:	cmp    BYTE PTR [edi-0x472723e1],bl
  41d029:	jg     0x41cfdc
  41d02b:	in     eax,dx
  41d02c:	jge    0x41d044
  41d02e:	jmp    0x69e61c08
  41d033:	stos   DWORD PTR es:[edi],eax
  41d034:	xor    dl,cl
  41d036:	jge    0x41d055
  41d038:	movhps xmm6,QWORD PTR [esi-0x19141da3]
  41d03f:	mov    dl,0x46
  41d041:	inc    ebp
  41d042:	imul   edx,edi,0x6a
  41d045:	mov    ecx,0xc75e10b4
  41d04a:	pop    ss
  41d04b:	aam    0x9d
  41d04d:	sbb    al,0xe1
  41d04f:	pop    es
  41d050:	jnp    0x41cfd4
  41d052:	push   ss
  41d053:	add    DWORD PTR [edi-0x45dc40b6],eax
  41d059:	inc    edx
  41d05a:	out    0x92,al
  41d05c:	mov    eax,0xd9679f47
  41d061:	mov    bl,0x2c
  41d063:	fcom   QWORD PTR [ecx]
  41d065:	xchg   ebp,eax
  41d066:	sbb    eax,0x2428743a
  41d06b:	scas   eax,DWORD PTR es:[edi]
  41d06c:	jne    0x41d0e3
  41d06e:	pop    ds
  41d06f:	and    dh,bh
  41d071:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d072:	add    eax,0x615173fd
  41d077:	hlt    
  41d078:	push   esi
  41d079:	inc    edi
  41d07a:	out    dx,eax
  41d07b:	neg    DWORD PTR [eax]
  41d07d:	cmp    edx,esi
  41d07f:	ss retf 
  41d081:	arpl   WORD PTR [ebx],ax
  41d083:	in     al,0x24
  41d085:	stos   DWORD PTR es:[edi],eax
  41d086:	or     ch,BYTE PTR [ebx]
  41d088:	repz or DWORD PTR [esi+ebx*2+0x4c9667b2],edi
  41d090:	nop
  41d091:	and    al,0x1d
  41d093:	sbb    esi,DWORD PTR [ebx]
  41d095:	test   DWORD PTR [ecx-0x11],0x819f9d36
  41d09c:	xor    eax,DWORD PTR fs:[edx]
  41d09f:	ror    DWORD PTR [edx+0x45],cl
  41d0a2:	xchg   ebx,eax
  41d0a3:	test   DWORD PTR [ecx+0x3e99fd00],ebx
  41d0a9:	and    al,0xe7
  41d0ab:	shl    eax,1
  41d0ad:	daa    
  41d0ae:	(bad)  
  41d0af:	je     0x41d044
  41d0b1:	push   esp
  41d0b2:	mov    ds:0x78dd7dd1,al
  41d0b7:	mov    DWORD PTR [eax+0x22],eax
  41d0ba:	outs   dx,BYTE PTR ds:[esi]
  41d0bb:	sub    bh,BYTE PTR [ebx+0x3f]
  41d0be:	jl     0x41d047
  41d0c0:	(bad)  
  41d0c1:	sbb    BYTE PTR [edi-0x5b8f0b93],ch
  41d0c7:	jne    0x41d0dd
  41d0c9:	ret    0x3d3d
  41d0cc:	add    bh,dl
  41d0ce:	rcr    DWORD PTR [ebx-0x1f34f6eb],cl
  41d0d4:	mov    ebx,0xa5154d2b
  41d0d9:	adc    DWORD PTR [esi+ebp*1-0x56],esi
  41d0dd:	mov    bh,0xa5
  41d0df:	lods   eax,DWORD PTR ds:[esi]
  41d0e0:	or     esp,ecx
  41d0e2:	xchg   edx,eax
  41d0e3:	in     eax,dx
  41d0e4:	inc    esp
  41d0e5:	xchg   edx,eax
  41d0e6:	mov    ah,0x5f
  41d0e8:	jge    0x41d12f
  41d0ea:	inc    ebx
  41d0eb:	push   eax
  41d0ec:	jmp    edi
  41d0ee:	xchg   esi,eax
  41d0ef:	adc    eax,0x14254a0b
  41d0f4:	xor    DWORD PTR ds:0x1112576b,esi
  41d0fa:	xor    eax,0xffe0f18f
  41d0ff:	and    ah,cl
  41d101:	inc    edi
  41d102:	push   esp
  41d103:	xor    al,0xd9
  41d105:	pop    ebx
  41d106:	sar    DWORD PTR [ebx],1
  41d108:	xlat   BYTE PTR ds:[ebx]
  41d109:	sub    eax,esi
  41d10b:	(bad)  
  41d10c:	aaa    
  41d10d:	inc    ebp
  41d10e:	into   
  41d10f:	and    ch,BYTE PTR [eax+0x38b21ff7]
  41d115:	fild   WORD PTR [edx-0x6fdb9e3c]
  41d11b:	push   ebx
  41d11c:	or     eax,0x79e436bb
  41d121:	loop   0x41d159
  41d123:	ficomp DWORD PTR [ecx+0x60]
  41d126:	cmp    al,0xbf
  41d128:	ret    
  41d129:	add    ah,dl
  41d12b:	imul   esi,DWORD PTR [ecx],0x5bdd2095
  41d131:	test   DWORD PTR [edi+eax*1+0x3],0xbf28be5f
  41d139:	fdivr  QWORD PTR [edi]
  41d13b:	in     eax,dx
  41d13c:	jmp    0x41d168
  41d13e:	cdq    
  41d13f:	push   ss
  41d140:	(bad)
  41d144:	stos   DWORD PTR es:[edi],eax
  41d145:	sbb    DWORD PTR [ebx+0x3a],ebp
  41d148:	call   0x3abb:0x6982544
  41d14f:	call   0x5f0d54bf
  41d154:	mov    esp,0xb9ad94e2
  41d159:	fmulp  st(6),st
  41d15b:	sub    DWORD PTR [eax],edi
  41d15d:	cmc    
  41d15e:	nop
  41d15f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d160:	out    0x7f,eax
  41d162:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d163:	(bad)  
  41d164:	loope  0x41d182
  41d166:	mov    ebp,0x19bb41df
  41d16b:	sbb    BYTE PTR [ecx],dl
  41d16d:	xchg   BYTE PTR [eax],ah
  41d16f:	retf   0xbe37
  41d172:	std    
  41d173:	fadd   QWORD PTR [ebx]
  41d175:	mov    ah,0x44
  41d177:	jg     0x41d14b
  41d179:	outs   dx,BYTE PTR ds:[esi]
  41d17a:	cmp    eax,0xbd8670ea
  41d17f:	and    cl,BYTE PTR [edx+0xa]
  41d182:	or     al,0x59
  41d184:	jmp    0xfc99:0x952e352d
  41d18b:	adc    dh,dh
  41d18d:	mov    bl,0xbb
  41d18f:	imul   edx,DWORD PTR [eax-0x68d3fa43],0xffffffda
  41d196:	dec    edi
  41d197:	dec    eax
  41d198:	mov    ds:0xb89fbca6,eax
  41d19d:	push   0xffffffec
  41d19f:	out    dx,al
  41d1a0:	ja     0x41d1cd
  41d1a2:	cmp    al,0x2c
  41d1a4:	sbb    DWORD PTR [ecx-0xabc91a0],ebx
  41d1aa:	or     esi,esi
  41d1ac:	gs push 0x68f27671
  41d1b2:	mov    ecx,DWORD PTR [edi+0x8]
  41d1b5:	jg     0x41d1d2
  41d1b7:	cld    
  41d1b8:	sub    eax,0xf489d178
  41d1bd:	xor    esp,ebx
  41d1bf:	mov    ecx,0x8de39b9
  41d1c4:	and    al,0x21
  41d1c6:	scas   al,BYTE PTR es:[edi]
  41d1c7:	mov    ds:0x56ce9dbc,al
  41d1cc:	sub    al,0xd
  41d1ce:	or     ah,al
  41d1d0:	dec    ebx
  41d1d1:	clc    
  41d1d2:	sbb    DWORD PTR [edi-0x6],ebx
  41d1d5:	jnp    0x41d1e0
  41d1d7:	aad    0xa8
  41d1d9:	xchg   ebp,eax
  41d1da:	aam    0x35
  41d1dc:	sub    al,0xfb
  41d1de:	mov    al,ds:0x7dc41912
  41d1e3:	in     al,dx
  41d1e4:	(bad)  
  41d1e5:	pop    ecx
  41d1e6:	push   ss
  41d1e7:	cmp    eax,0xf3e957f5
  41d1ec:	js     0x41d1c6
  41d1ee:	pop    ss
  41d1ef:	mov    WORD PTR [esi+0x7d],fs
  41d1f2:	or     al,BYTE PTR [edx+0x6d]
  41d1f5:	dec    ecx
  41d1f6:	outs   dx,DWORD PTR ds:[esi]
  41d1f7:	inc    eax
  41d1f8:	and    al,al
  41d1fa:	cwde   
  41d1fb:	xchg   edx,eax
  41d1fc:	push   esi
  41d1fd:	xchg   esi,eax
  41d1fe:	dec    eax
  41d1ff:	in     al,0x5b
  41d201:	aaa    
  41d202:	arpl   sp,ax
  41d204:	sub    DWORD PTR [edi-0x244e2810],esi
  41d20a:	stos   BYTE PTR es:[edi],al
  41d20b:	clc    
  41d20c:	sub    al,0xf
  41d20e:	es sub eax,0xadeac3af
  41d214:	std    
  41d215:	mov    ebx,0xcaed73e
  41d21a:	test   al,0x9
  41d21c:	(bad)  
  41d21d:	clc    
  41d21e:	pusha  
  41d21f:	sub    al,0x20
  41d221:	loope  0x41d26b
  41d223:	and    cl,BYTE PTR [ebx+0x25]
  41d226:	push   DWORD PTR [ebx+ecx*2-0x2a3a95f6]
  41d22d:	jp     0x41d247
  41d22f:	inc    edi
  41d230:	push   0x30
  41d232:	js     0x41d26b
  41d234:	icebp  
  41d235:	xchg   edx,eax
  41d236:	shl    edx,0x7
  41d239:	cmp    BYTE PTR [edx+0x4f],0xd5
  41d23d:	jo     0x41d241
  41d23f:	in     al,dx
  41d240:	in     al,0x80
  41d242:	(bad)  
  41d243:	adc    al,0x38
  41d245:	pop    edi
  41d246:	outs   dx,BYTE PTR ds:[esi]
  41d247:	ror    BYTE PTR [edi+ebp*2+0x58],cl
  41d24b:	sub    eax,0x8d3284a2
  41d250:	stc    
  41d251:	data16 sbb dl,dh
  41d254:	cwde   
  41d255:	push   ss
  41d256:	mov    ecx,0x805e376f
  41d25b:	inc    esi
  41d25c:	mov    ch,0x5
  41d25e:	sub    DWORD PTR ds:0xc9470259,esp
  41d264:	dec    edi
  41d265:	pushf  
  41d266:	pop    ebx
  41d267:	das    
  41d268:	xchg   ebp,eax
  41d269:	fisttp DWORD PTR [ecx-0x30]
  41d26c:	mov    al,ds:0xee8d4c63
  41d271:	dec    ebx
  41d272:	fld    QWORD PTR ds:0xd9725f1
  41d278:	jns    0x41d2c0
  41d27a:	dec    edx
  41d27b:	arpl   WORD PTR [esi-0x5c],di
  41d27e:	mov    al,0xcc
  41d280:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d281:	jp     0x41d276
  41d283:	xchg   DWORD PTR [eax],esp
  41d285:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d286:	dec    esi
  41d287:	mov    eax,0xe6cba5b8
  41d28c:	sbb    al,0x5
  41d28e:	aam    0xa
  41d290:	fwait
  41d291:	int    0x8
  41d293:	fmul   QWORD PTR [edx+0x5a]
  41d296:	arpl   sp,ax
  41d298:	aad    0xac
  41d29a:	ins    DWORD PTR es:[edi],dx
  41d29b:	dec    ecx
  41d29c:	pushw  0x184a
  41d2a0:	mov    esp,0xc58fa5a6
  41d2a5:	(bad)  
  41d2a6:	jo     0x41d31c
  41d2a8:	dec    eax
  41d2a9:	jno    0x41d239
  41d2ab:	xchg   ebp,eax
  41d2ac:	fadd   st(2),st
  41d2ae:	in     eax,0x0
  41d2b0:	adc    ecx,DWORD PTR [eax+edi*8]
  41d2b3:	push   ds
  41d2b4:	push   eax
  41d2b5:	or     ah,BYTE PTR ds:[ecx+0x7b]
  41d2b9:	fcomp  QWORD PTR [ebx]
  41d2bb:	push   ds
  41d2bc:	icebp  
  41d2bd:	pop    es
  41d2be:	call   0xe26f:0xf411e15e
  41d2c5:	push   ebp
  41d2c6:	int3   
  41d2c7:	mov    BYTE PTR [edx],ch
  41d2c9:	cmp    BYTE PTR [esi],0x56
  41d2cc:	fldcw  WORD PTR [edi]
  41d2ce:	mov    BYTE PTR [edx],dh
  41d2d0:	add    BYTE PTR [ecx-0x7d],cl
  41d2d3:	push   edi
  41d2d4:	cmp    eax,ebx
  41d2d6:	sub    eax,0xdc3a5dd8
  41d2db:	mov    eax,ds:0x7e9c7455
  41d2e0:	scas   al,BYTE PTR es:[edi]
  41d2e1:	dec    edx
  41d2e2:	test   al,0xbb
  41d2e4:	(bad)  
  41d2e5:	push   ebx
  41d2e6:	hlt    
  41d2e7:	sbb    esp,DWORD PTR [ebx-0x4c948426]
  41d2ed:	mov    edi,0xd91731d2
  41d2f2:	pusha  
  41d2f3:	cmc    
  41d2f4:	and    al,0x45
  41d2f6:	es hlt 
  41d2f8:	mov    bl,0xec
  41d2fa:	inc    ebx
  41d2fb:	scas   al,BYTE PTR es:[edi]
  41d2fc:	jne    0x41d2ce
  41d2fe:	(bad)  
  41d2ff:	in     al,0x9e
  41d301:	in     eax,dx
  41d302:	js     0x41d28d
  41d304:	sbb    eax,0x4efa6ec0
  41d309:	shl    DWORD PTR [ebx+0x6fa7536e],0x2b
  41d310:	lock bound ebp,QWORD PTR [edi+eax*4-0x2f]
  41d315:	enter  0x178e,0x41
  41d319:	mov    ch,0xd7
  41d31b:	add    BYTE PTR [esi],ch
  41d31d:	sahf   
  41d31e:	push   edi
  41d31f:	jne    0x41d2fe
  41d321:	ret    0xd5dc
  41d324:	cmp    DWORD PTR [edx+0x7b],ebx
  41d327:	jmp    0x2bb4:0x3e7bc887
  41d32e:	cs and eax,0x6ef9f03b
  41d334:	xor    BYTE PTR [esp-0x59],ch
  41d338:	mov    ebx,0x1775407c
  41d33d:	and    eax,0x35
  41d340:	ins    DWORD PTR es:[edi],dx
  41d341:	imul   esp,DWORD PTR [ebp+ebx*4+0x27],0x9d19813c
  41d349:	mov    edx,0x24a13718
  41d34f:	mov    esp,0xc5c33e09
  41d354:	mov    dh,0xdf
  41d356:	(bad)  
  41d358:	enter  0xee74,0xf6
  41d35c:	daa    
  41d35d:	imul   ebx,DWORD PTR [edx+eiz*2+0x3e42eb1c],0x931b2cd5
  41d368:	mov    ecx,0xb6a63d4
  41d36d:	jp     0x41d323
  41d36f:	jae    0x41d346
  41d371:	jb     0x41d3f0
  41d373:	cmp    ebx,DWORD PTR [ecx+0x3f]
  41d376:	es aad 0x5c
  41d379:	ret    
  41d37a:	repnz rcr DWORD PTR [ebp-0x46],0x1
  41d37f:	pop    ds
  41d380:	xchg   ebx,eax
  41d381:	pusha  
  41d382:	into   
  41d383:	fcom   DWORD PTR [eax]
  41d385:	in     eax,0xf8
  41d387:	push   cs
  41d388:	mov    esi,0x8484528e
  41d38d:	fsubr  DWORD PTR [eax-0x354d001c]
  41d393:	push   ds
  41d394:	cwde   
  41d395:	ins    DWORD PTR es:[edi],dx
  41d396:	push   0xc0cd697
  41d39b:	sub    DWORD PTR [edx],eax
  41d39d:	dec    eax
  41d39e:	push   ss
  41d39f:	fcom   DWORD PTR [ebp-0x57]
  41d3a2:	xor    esi,DWORD PTR [edx]
  41d3a4:	enter  0x8b82,0x51
  41d3a8:	stc    
  41d3a9:	arpl   WORD PTR [ebx-0x60b50ce8],bp
  41d3af:	adc    cl,bl
  41d3b1:	mov    DWORD PTR [eax-0x70],ecx
  41d3b4:	xor    al,0x92
  41d3b6:	test   BYTE PTR [edx-0x10],al
  41d3b9:	test   eax,0x61f28a37
  41d3be:	dec    ebp
  41d3bf:	stc    
  41d3c0:	and    al,0x46
  41d3c2:	int    0xe
  41d3c4:	outs   dx,DWORD PTR ds:[esi]
  41d3c5:	dec    ebp
  41d3c6:	jl     0x41d386
  41d3c8:	adc    al,0x7a
  41d3ca:	outs   dx,DWORD PTR ds:[esi]
  41d3cb:	outs   dx,DWORD PTR ds:[esi]
  41d3cc:	je     0x41d415
  41d3ce:	sbb    al,0x5
  41d3d0:	sub    al,0xc6
  41d3d2:	popa   
  41d3d3:	test   eax,0xfbf87331
  41d3d8:	inc    edi
  41d3d9:	das    
  41d3da:	ja     0x41d3f9
  41d3dc:	sub    DWORD PTR ds:0xec0bdfdc,esi
  41d3e2:	pop    edx
  41d3e3:	or     dh,BYTE PTR fs:[edx-0x79]
  41d3e7:	pushf  
  41d3e8:	adc    ebp,ecx
  41d3ea:	mov    ebp,DWORD PTR [esi]
  41d3ec:	add    DWORD PTR ds:0xd3389eeb,0x31
  41d3f3:	leave  
  41d3f4:	mov    esp,ebx
  41d3f6:	(bad)  
  41d3f7:	into   
  41d3f8:	cmp    DWORD PTR ds:0x46f148ac,ebx
  41d3fe:	or     eax,0x24f2f577
  41d403:	sahf   
  41d404:	mov    edi,0x40b05bef
  41d409:	out    0x31,eax
  41d40b:	pop    ds
  41d40c:	sub    bh,BYTE PTR [ebx+edi*2+0x1ed80f5b]
  41d413:	mov    ebp,0x7f6b1bd3
  41d418:	icebp  
  41d419:	add    BYTE PTR [esi],dl
  41d41b:	cmp    BYTE PTR [eax-0x20],dl
  41d41e:	ret    
  41d41f:	mov    edi,0x81ac3ac
  41d424:	jecxz  0x41d414
  41d426:	adc    ebp,ebx
  41d428:	push   cs
  41d429:	fs push 0x7
  41d42c:	rcr    BYTE PTR [eax+0x14],cl
  41d42f:	jae    0x41d491
  41d431:	jecxz  0x41d44e
  41d433:	fisub  WORD PTR [esi+0x26]
  41d436:	adc    al,0x5d
  41d438:	mov    dh,0x3d
  41d43a:	test   BYTE PTR [edi],cl
  41d43c:	jl     0x41d4ac
  41d43e:	scas   al,BYTE PTR es:[edi]
  41d43f:	imul   DWORD PTR [ecx+0xe]
  41d442:	rcr    DWORD PTR [ebx-0x1c],0xc5
  41d446:	adc    dl,BYTE PTR [ebx]
  41d448:	mov    eax,0xc7231751
  41d44d:	add    BYTE PTR [edx+eax*1],al
  41d450:	rol    DWORD PTR [edi-0x76],0xf6
  41d454:	adc    DWORD PTR [esi+ebp*4+0x4d],esp
  41d458:	std    
  41d459:	pop    ebp
  41d45a:	inc    esi
  41d45b:	imul   ebx,DWORD PTR [ebp-0x58715b8d],0xffffffc4
  41d462:	pushf  
  41d463:	out    0x92,al
  41d465:	push   ebp
  41d466:	imul   esi,DWORD PTR [esi+edx*2],0xffffffe1
  41d46a:	add    al,0x61
  41d46c:	(bad)  
  41d46d:	push   ebp
  41d46e:	loope  0x41d4a1
  41d470:	dec    ebp
  41d471:	js     0x41d45d
  41d473:	xchg   esp,eax
  41d474:	dec    esi
  41d475:	xor    bh,ch
  41d477:	inc    esp
  41d478:	shl    DWORD PTR [ebp+0x251d5924],1
  41d47e:	xchg   ebp,eax
  41d47f:	mov    ?,WORD PTR [esp+edx*8]
  41d482:	retf   0xfa74
  41d485:	dec    ebp
  41d486:	push   ss
  41d487:	fisubr WORD PTR [eax+edx*1]
  41d48a:	xchg   al,ch
  41d48c:	retf   0x2e4e
  41d48f:	pop    ebx
  41d490:	mov    ds:0x5b1e9a92,eax
  41d495:	dec    eax
  41d496:	iret   
  41d497:	call   0x8b2c:0x3d27bc02
  41d49e:	lods   al,BYTE PTR ds:[esi]
  41d49f:	jl     0x41d4a4
  41d4a1:	cmp    BYTE PTR [edi+0x53],bl
  41d4a4:	adc    esp,ecx
  41d4a6:	in     al,dx
  41d4a7:	xchg   ebp,eax
  41d4a8:	fs (bad) 
  41d4aa:	out    dx,eax
  41d4ab:	mov    DWORD PTR [ebx-0xf69418c],ebx
  41d4b1:	xchg   esi,eax
  41d4b2:	sbb    al,0x42
  41d4b4:	mov    ds:0x5ef916e5,al
  41d4b9:	out    0x50,eax
  41d4bb:	mov    eax,ds:0x69d95042
  41d4c0:	sub    al,BYTE PTR [edi-0x43a2f22c]
  41d4c6:	scas   eax,DWORD PTR es:[edi]
  41d4c7:	jne    0x41d49b
  41d4c9:	cmc    
  41d4ca:	(bad)  
  41d4cb:	gs cli 
  41d4cd:	loopne 0x41d4d9
  41d4cf:	xchg   ebx,eax
  41d4d0:	mov    dh,0xae
  41d4d2:	mov    eax,0xc0126982
  41d4d7:	sahf   
  41d4d8:	push   ss
  41d4d9:	jne    0x41d4da
  41d4db:	test   al,0xc8
  41d4dd:	fcom   QWORD PTR [edx-0x57]
  41d4e0:	in     eax,dx
  41d4e1:	sti    
  41d4e2:	push   edx
  41d4e3:	aas    
  41d4e4:	xchg   esi,eax
  41d4e5:	add    al,0xf6
  41d4e7:	cmp    DWORD PTR [esi-0x70d49f03],ebx
  41d4ed:	push   0xffffff9d
  41d4ef:	ret    0xa62c
  41d4f2:	pusha  
  41d4f3:	fisub  DWORD PTR [ebx-0x5c]
  41d4f6:	push   0x7b
  41d4f8:	xor    al,0x18
  41d4fa:	retf   0x4587
  41d4fd:	retf   0xc176
  41d500:	in     eax,0x73
  41d502:	fwait
  41d503:	out    dx,al
  41d504:	outs   dx,DWORD PTR ds:[esi]
  41d505:	les    edx,FWORD PTR [ebx+0x5ac022b9]
  41d50b:	shr    DWORD PTR ds:0xb0917d16,cl
  41d511:	cmp    BYTE PTR [esi+0x29],al
  41d514:	xor    eax,0x806bf45c
  41d519:	aas    
  41d51a:	or     eax,0x5d70c266
  41d51f:	loop   0x41d4b3
  41d521:	mov    eax,ds:0x1bb7162
  41d526:	lea    ecx,[eax+0x5c21d900]
  41d52c:	fcom   QWORD PTR [edx]
  41d52e:	imul   ebp,DWORD PTR [ebx-0x2b1e38be],0xc082c351
  41d538:	int3   
  41d539:	cmp    al,0x9d
  41d53b:	out    dx,eax
  41d53c:	in     al,0x69
  41d53e:	pminsw mm7,QWORD PTR [ebp+0xe31db46]
  41d545:	adc    eax,edx
  41d547:	adc    edi,DWORD PTR [esi-0x27]
  41d54a:	push   edi
  41d54b:	inc    ecx
  41d54c:	mov    eax,ds:0x51e7a5e4
  41d551:	xor    al,0x7d
  41d553:	fld    st(0)
  41d555:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d556:	dec    esp
  41d557:	cwde   
  41d558:	imul   edx,edi,0x2d
  41d55b:	imul   esp,DWORD PTR ds:0xad37991e,0xffffffa3
  41d562:	fbld   TBYTE PTR [ebx]
  41d564:	sub    eax,0x576c1103
  41d569:	in     eax,0xd2
  41d56b:	dec    esi
  41d56c:	hlt    
  41d56d:	jno    0x41d5e4
  41d56f:	shr    esi,0x9b
  41d572:	popa   
  41d573:	xor    al,dh
  41d575:	xchg   edi,eax
  41d576:	lea    edx,[esp+ecx*8-0x4f]
  41d57a:	test   BYTE PTR [edi-0x4c3e6dbe],bl
  41d580:	hlt    
  41d581:	xor    al,0x51
  41d583:	test   DWORD PTR [ebx+edi*8-0x4d52a93c],0x2cccbdf7
  41d58e:	xchg   BYTE PTR [eax+0x53],cl
  41d591:	fsubr  QWORD PTR [ecx]
  41d593:	neg    BYTE PTR [edi+0x53]
  41d596:	mov    ecx,0x48c2fa3a
  41d59b:	pop    ebp
  41d59c:	push   edx
  41d59d:	and    ebp,eax
  41d59f:	popa   
  41d5a0:	sbb    bh,BYTE PTR [esi+0x58]
  41d5a3:	and    ecx,DWORD PTR ds:0xc9ab8ad1
  41d5a9:	xor    esp,DWORD PTR [edi+edx*2+0x5df4b416]
  41d5b0:	cmp    al,0x82
  41d5b2:	add    eax,0xd330399b
  41d5b7:	aad    0x4c
  41d5b9:	cmp    esi,ebx
  41d5bb:	neg    DWORD PTR [edi+0x3]
  41d5be:	inc    esi
  41d5bf:	call   0xd86e:0x5c96f485
  41d5c6:	mov    esp,?
  41d5c8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d5c9:	(bad)  
  41d5cb:	add    al,dh
  41d5cd:	sti    
  41d5ce:	xor    cl,ch
  41d5d0:	mov    DWORD PTR [edi],ecx
  41d5d2:	sub    DWORD PTR [ebx+esi*8+0x1a6ab0ee],esp
  41d5d9:	test   DWORD PTR [edi+0x5ba65139],edi
  41d5df:	pop    edx
  41d5e0:	mov    dh,0x77
  41d5e2:	stos   BYTE PTR es:[edi],al
  41d5e3:	inc    esp
  41d5e4:	or     al,0x89
  41d5e6:	mov    DWORD PTR [eax+0xaaeed5a],eax
  41d5ec:	inc    ebp
  41d5ed:	int3   
  41d5ee:	ds pop es
  41d5f0:	int3   
  41d5f1:	or     eax,0x3ad34122
  41d5f6:	inc    edi
  41d5f7:	push   edx
  41d5f8:	call   0xc0107311
  41d5fd:	jns    0x41d5ad
  41d5ff:	jecxz  0x41d60d
  41d601:	inc    ebx
  41d602:	in     eax,dx
  41d603:	mov    ch,0xdb
  41d605:	and    eax,0x69a6c8ad
  41d60a:	pop    DWORD PTR [eax]
  41d60c:	int    0x4
  41d60e:	(bad)  [ecx*4-0x321f574]
  41d615:	inc    ecx
  41d616:	add    cl,BYTE PTR [ecx+0x4d8bb84d]
  41d61c:	or     BYTE PTR [edx-0x5a1eadf],bh
  41d622:	sub    edx,ecx
  41d624:	add    edx,DWORD PTR [ebp-0x44]
  41d627:	mov    DWORD PTR [ebp-0x44],edx
  41d62a:	mov    ecx,DWORD PTR [ebp+0x8]
  41d62d:	xor    ecx,eax
  41d62f:	add    ecx,esi
  41d631:	jne    0x41b215
  41d637:	mov    ecx,DWORD PTR [ebp-0x8]
  41d63a:	xor    ecx,eax
  41d63c:	mov    eax,DWORD PTR [ebp+0x10]
  41d63f:	add    ecx,esi
  41d641:	mov    DWORD PTR [eax],ecx
  41d643:	pop    edi
  41d644:	pop    esi
  41d645:	pop    ebx
  41d646:	leave  
  41d647:	ret    0xc
  41d64a:	push   ebp
  41d64b:	mov    ebp,esp
  41d64d:	sub    esp,0x7c
  41d650:	or     ecx,0x868
  41d656:	push   esi
  41d657:	and    DWORD PTR ds:0x42862f,0x0
  41d661:	jmp    0x41d674
  41d666:	xor    eax,eax
  41d668:	or     eax,DWORD PTR ds:0x42862f
  41d66e:	inc    eax
  41d66f:	mov    ds:0x42862f,eax
  41d674:	cmp    DWORD PTR ds:0x42862f,0x1b
  41d67b:	jae    0x41d6a6
  41d681:	cmp    DWORD PTR ds:0x42862f,0x24
  41d688:	jbe    0x41d6a6
  41d68e:	jmp    0x41d6a1
  41d693:	push   DWORD PTR [ebp-0x28]
  41d696:	push   0x42865b
  41d69b:	call   DWORD PTR ds:0x4287b3
  41d6a1:	jmp    0x41d666
  41d6a6:	push   edi
  41d6a7:	mov    eax,ds:0x4282ef
  41d6ac:	mov    DWORD PTR ds:0x42866f,0x15
  41d6b6:	cmp    DWORD PTR ds:0x42866f,0x0
  41d6bd:	je     0x41d6ed
  41d6c3:	cmp    DWORD PTR ds:0x42866f,0x1f
  41d6ca:	jl     0x41d6ed
  41d6d0:	jmp    0x41d6db
  41d6d5:	call   DWORD PTR ds:0x4287b7
  41d6db:	mov    ecx,DWORD PTR ds:0x42866f
  41d6e1:	dec    ecx
  41d6e2:	mov    DWORD PTR ds:0x42866f,ecx
  41d6e8:	jmp    0x41d6b6
  41d6ed:	mov    DWORD PTR [ebp-0x24],eax
  41d6f0:	xor    eax,eax
  41d6f2:	add    eax,DWORD PTR ds:0x42868b
  41d6f8:	mov    edi,DWORD PTR ds:0x428707
  41d6fe:	sub    eax,edi
  41d700:	xor    eax,DWORD PTR [eax+edi*1]
  41d703:	mov    eax,ds:0x4283fb
  41d708:	not    DWORD PTR ds:0x428613
  41d70e:	mov    DWORD PTR [ebp-0x34],eax
  41d711:	and    DWORD PTR [ebp-0x30],0x0
  41d715:	sub    esi,0x14f1
  41d71b:	mov    DWORD PTR [ebp-0x2c],0xf89c85b0
  41d722:	mov    DWORD PTR [ebp-0x28],0xf89c85b1
  41d729:	xor    edi,edi
  41d72b:	mov    eax,DWORD PTR [ebp-0x10]
  41d72e:	mov    esi,DWORD PTR ds:0x42860b
  41d734:	add    DWORD PTR ds:0x428653,esi
  41d73a:	mov    ecx,DWORD PTR [ebp-0x10]
  41d73d:	mov    DWORD PTR ds:0x42860f,0x19
  41d747:	cmp    DWORD PTR ds:0x42860f,0x0
  41d74e:	je     0x41d783
  41d754:	cmp    DWORD PTR ds:0x42860f,0x24
  41d75b:	jge    0x41d783
  41d761:	jmp    0x41d76f
  41d766:	push   DWORD PTR [ebp-0x14]
  41d769:	call   DWORD PTR ds:0x4287bb
  41d76f:	xor    edi,edi
  41d771:	xor    edi,DWORD PTR ds:0x42860f
  41d777:	dec    edi
  41d778:	mov    DWORD PTR ds:0x42860f,edi
  41d77e:	jmp    0x41d747
  41d783:	sub    eax,ecx
  41d785:	add    DWORD PTR ds:0x42865b,ecx
  41d78b:	mov    DWORD PTR [ebp-0x10],eax
  41d78e:	sub    edi,edi
  41d790:	xor    DWORD PTR [ebp-0x10],0xf89cb5b0
  41d797:	mov    edi,DWORD PTR ds:0x42862b
  41d79d:	adc    edi,DWORD PTR ds:0x42864b
  41d7a3:	mov    DWORD PTR ds:0x42862b,edi
  41d7a9:	mov    eax,DWORD PTR [ebp-0x18]
  41d7ac:	inc    edi
  41d7ad:	mov    ecx,DWORD PTR [ebp-0x18]
  41d7b0:	and    DWORD PTR ds:0x42862f,0x0
  41d7ba:	mov    esi,DWORD PTR ds:0x42862f
  41d7c0:	inc    esi
  41d7c1:	mov    DWORD PTR ds:0x42862f,esi
  41d7c7:	cmp    DWORD PTR ds:0x42862f,0x21
  41d7ce:	jb     0x41d804
  41d7d4:	jmp    0x41d7f7
  41d7d9:	push   0x2450
  41d7de:	push   0x4280ae
  41d7e3:	push   DWORD PTR [ebp-0x20]
  41d7e6:	push   0x428083
  41d7eb:	push   DWORD PTR [ebp-0x18]
  41d7ee:	push   DWORD PTR [ebp-0x28]
  41d7f1:	call   DWORD PTR ds:0x4287bf
  41d7f7:	cmp    DWORD PTR ds:0x42862f,0x1d
  41d7fe:	jb     0x41d7ba
  41d804:	sub    eax,ecx
  41d806:	mov    DWORD PTR ds:0x428667,0x2f20
  41d810:	mov    DWORD PTR [ebp-0x18],eax
  41d813:	or     DWORD PTR [ebp-0x18],0xf89f05b0
  41d81a:	sbb    edi,edi
  41d81c:	mov    eax,DWORD PTR [ebp-0xc]
  41d81f:	xor    ecx,ecx
  41d821:	or     ecx,DWORD PTR ds:0x428697
  41d827:	mov    esi,DWORD PTR ds:0x42869f
  41d82d:	sub    ecx,esi
  41d82f:	or     ecx,DWORD PTR [ecx+esi*1]
  41d832:	mov    ecx,DWORD PTR [ebp-0xc]
  41d835:	sub    eax,ecx
  41d837:	and    DWORD PTR ds:0x42863b,0x0
  41d841:	jmp    0x41d853
  41d846:	mov    esi,DWORD PTR ds:0x42863b
  41d84c:	inc    esi
  41d84d:	mov    DWORD PTR ds:0x42863b,esi
  41d853:	cmp    DWORD PTR ds:0x42863b,0x16
  41d85a:	jae    0x41d89c
  41d860:	cmp    DWORD PTR ds:0x42863b,0x9
  41d867:	jle    0x41d89c
  41d86d:	jmp    0x41d87d
  41d872:	push   0x428083
  41d877:	call   DWORD PTR ds:0x4287c3
  41d87d:	cmp    DWORD PTR ds:0x42863b,0x8
  41d884:	jne    0x41d897
  41d88a:	mov    esi,DWORD PTR ds:0x42863b
  41d890:	inc    esi
  41d891:	mov    DWORD PTR ds:0x42863b,esi
  41d897:	jmp    0x41d846
  41d89c:	mov    DWORD PTR [ebp-0xc],eax
  41d89f:	or     DWORD PTR [ebp-0xc],0xf89c85f0
  41d8a6:	mov    eax,DWORD PTR [ebp-0x1c]
  41d8a9:	mov    ecx,DWORD PTR [ebp-0x1c]
  41d8ac:	sub    eax,ecx
  41d8ae:	mov    DWORD PTR [ebp-0x1c],eax
  41d8b1:	or     DWORD PTR [ebp-0x1c],0xf89c8590
  41d8b8:	mov    eax,DWORD PTR [ebp-0x20]
  41d8bb:	mov    ecx,DWORD PTR [ebp-0x20]
  41d8be:	sub    eax,ecx
  41d8c0:	mov    DWORD PTR [ebp-0x20],eax
  41d8c3:	mov    eax,DWORD PTR [ebp-0x2c]
  41d8c6:	mov    ecx,DWORD PTR [ebp-0x20]
  41d8c9:	mov    esi,0x75108a4
  41d8ce:	xor    eax,esi
  41d8d0:	mov    edi,0x3272ec
  41d8d5:	add    eax,edi
  41d8d7:	or     eax,ecx
  41d8d9:	mov    DWORD PTR [ebp-0x20],eax
  41d8dc:	mov    eax,DWORD PTR [ebp-0x4]
  41d8df:	mov    ecx,DWORD PTR [ebp-0x4]
  41d8e2:	sub    eax,ecx
  41d8e4:	mov    DWORD PTR [ebp-0x4],eax
  41d8e7:	or     DWORD PTR [ebp-0x4],0xf89c85bd
  41d8ee:	mov    eax,DWORD PTR [ebp-0xc]
  41d8f1:	xor    eax,esi
  41d8f3:	add    eax,edi
  41d8f5:	push   eax
  41d8f6:	mov    eax,DWORD PTR [ebp-0x10]
  41d8f9:	xor    eax,esi
  41d8fb:	add    eax,edi
  41d8fd:	push   eax
  41d8fe:	mov    eax,DWORD PTR [ebp-0x4]
  41d901:	xor    eax,esi
  41d903:	add    eax,edi
  41d905:	push   eax
  41d906:	lea    eax,[ebp-0x7c]
  41d909:	push   eax
  41d90a:	push   DWORD PTR [ebp-0x2c]
  41d90d:	push   DWORD PTR [ebp-0x28]
  41d910:	call   0x40f37f
  41d915:	test   eax,eax
  41d917:	je     0x41fca5
  41d91d:	lea    eax,[ebp-0x7c]
  41d920:	push   eax
  41d921:	mov    eax,DWORD PTR [ebp-0x28]
  41d924:	jmp    0x41fc84
  41d929:	fs popa 
  41d92b:	dec    eax
  41d92c:	mov    cs,WORD PTR [ebx+0x7b]
  41d92f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d930:	jnp    0x41d8c9
  41d932:	rol    edx,1
  41d934:	aaa    
  41d935:	pop    esi
  41d936:	sahf   
  41d937:	(bad)  
  41d938:	xchg   esp,eax
  41d939:	sub    dl,ah
  41d93b:	jge    0x41d9b7
  41d93d:	aas    
  41d93e:	pop    edi
  41d93f:	jp     0x41d9bb
  41d941:	iret   
  41d942:	shl    DWORD PTR [eax-0x7b42e2e5],0x9c
  41d949:	ficom  WORD PTR [ebp+0x37]
  41d94c:	adc    al,0xfe
  41d94e:	push   ebx
  41d94f:	sub    ebp,DWORD PTR [eax+edx*1]
  41d952:	sti    
  41d953:	sub    BYTE PTR ds:0x88ff91fb,0x2d
  41d95a:	popa   
  41d95b:	adc    eax,0xe8f92f8b
  41d960:	sbb    eax,DWORD PTR [edi-0x6c]
  41d963:	mov    eax,ebp
  41d965:	sub    edi,0xa62dc33f
  41d96b:	sub    edx,edx
  41d96d:	sbb    BYTE PTR [eax+0x23],al
  41d970:	mov    eax,ds:0xe05a0d5
  41d975:	sti    
  41d976:	mov    edi,0x2e0118a2
  41d97b:	pop    esp
  41d97c:	sub    edx,ebx
  41d97e:	pop    ss
  41d97f:	push   ebp
  41d980:	jo     0x41d9b0
  41d982:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d983:	aas    
  41d984:	push   ss
  41d985:	jg     0x41d9cf
  41d987:	(bad)  
  41d989:	int    0x92
  41d98b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d98c:	cmp    eax,eax
  41d98e:	dec    esp
  41d98f:	adc    DWORD PTR [eax-0x3f3aa50d],0xd014b245
  41d999:	pop    ds
  41d99a:	ds xchg esp,eax
  41d99c:	dec    edx
  41d99d:	(bad)  
  41d99e:	xchg   edx,eax
  41d99f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d9a0:	cmc    
  41d9a1:	push   esp
  41d9a2:	ins    BYTE PTR es:[edi],dx
  41d9a3:	pusha  
  41d9a4:	rol    BYTE PTR [edi-0x60],1
  41d9a7:	mov    esp,0xaef70243
  41d9ac:	cmp    ch,BYTE PTR [esi+0x5a]
  41d9af:	mov    esp,0x3d90c6f
  41d9b4:	fcomi  st,st(1)
  41d9b6:	inc    esp
  41d9b7:	test   BYTE PTR [eax+ebx*1+0x58],0x2d
  41d9bc:	jnp    0x41da10
  41d9be:	and    al,BYTE PTR [esi-0x41]
  41d9c1:	adc    dh,BYTE PTR [esi-0x5809283e]
  41d9c7:	daa    
  41d9c8:	xchg   edi,eax
  41d9c9:	and    DWORD PTR [edx],ecx
  41d9cb:	int    0xf
  41d9cd:	xchg   ecx,eax
  41d9ce:	dec    edi
  41d9cf:	xchg   ebx,eax
  41d9d0:	lock shl DWORD PTR [edi],0x43
  41d9d4:	mov    WORD PTR [esi-0x48],?
  41d9d7:	dec    ebx
  41d9d8:	pop    ebp
  41d9d9:	fdivr  QWORD PTR [ecx-0x49]
  41d9dc:	xchg   ebx,eax
  41d9dd:	out    dx,al
  41d9de:	gs mov dl,0x1e
  41d9e1:	ja     0x41da60
  41d9e3:	retf   
  41d9e4:	adc    al,0x46
  41d9e6:	(bad)  
  41d9e7:	je     0x41d9d1
  41d9e9:	out    0xdc,al
  41d9eb:	mov    ecx,0x2b258e8a
  41d9f0:	aas    
  41d9f1:	add    eax,eax
  41d9f3:	aam    0x1d
  41d9f5:	mov    ds,WORD PTR [ebx+0x74]
  41d9f8:	inc    esp
  41d9f9:	mov    edx,0xd7fc3a53
  41d9fe:	rol    bl,1
  41da00:	cmps   DWORD PTR ds:[si],DWORD PTR es:[di]
  41da02:	pop    es
  41da03:	repz les edx,FWORD PTR [ebp-0x59c535c6]
  41da0a:	jbe    0x41da0c
  41da0c:	fld    QWORD PTR [edx-0x37]
  41da0f:	jecxz  0x41d9c9
  41da11:	dec    ebp
  41da12:	xchg   DWORD PTR [esi],edi
  41da14:	sub    DWORD PTR [edi],ebp
  41da16:	inc    ebx
  41da17:	sbb    DWORD PTR [esi+eax*2-0x67],esi
  41da1b:	xor    BYTE PTR [eax-0x1e231d8c],dl
  41da21:	imul   esp,DWORD PTR [eax+0x2],0x80735844
  41da28:	hlt    
  41da29:	popa   
  41da2a:	repnz ror dh,1
  41da2d:	lahf   
  41da2e:	daa    
  41da2f:	or     eax,0xd3ba7504
  41da34:	push   ecx
  41da35:	outs   dx,BYTE PTR ds:[esi]
  41da36:	jmp    0x41da9e
  41da38:	xlat   BYTE PTR ds:[ebx]
  41da39:	pop    edi
  41da3a:	sbb    ebx,DWORD PTR [ebp+0x103e4c80]
  41da40:	push   ss
  41da41:	adc    ebx,DWORD PTR [ebx]
  41da43:	ins    DWORD PTR es:[edi],dx
  41da44:	xor    ch,ch
  41da46:	pop    esi
  41da47:	shr    dl,0xf7
  41da4a:	cli    
  41da4b:	push   ecx
  41da4c:	xor    eax,DWORD PTR [ebp+0x7426b13]
  41da52:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41da53:	mov    ebp,0xd37a863a
  41da58:	push   eax
  41da59:	or     BYTE PTR [ecx-0xa],ah
  41da5c:	in     eax,0xd9
  41da5e:	leave  
  41da5f:	fldenv ds:[esi-0x4935efe4]
  41da66:	xchg   edi,eax
  41da67:	fistp  QWORD PTR [esi+eiz*2-0x2980d86d]
  41da6e:	clc    
  41da6f:	shl    BYTE PTR [ebp-0x18dcbead],1
  41da75:	push   0xffffff85
  41da77:	or     eax,0x17278395
  41da7c:	sub    DWORD PTR [eax+0x18],esi
  41da7f:	adc    eax,0x47d94495
  41da84:	jle    0x41da8c
  41da86:	add    eax,0x597ea5f4
  41da8b:	inc    esi
  41da8c:	mov    ah,0xe3
  41da8e:	dec    edx
  41da8f:	add    DWORD PTR [eax],ebx
  41da91:	loop   0x41da7b
  41da93:	sbb    edx,esi
  41da95:	jge    0x41dab7
  41da97:	arpl   WORD PTR [ebx-0x4ab006cd],dx
  41da9d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41da9e:	jl     0x41daae
  41daa0:	mov    ds:0xe222efa7,al
  41daa5:	int    0x8c
  41daa7:	inc    eax
  41daa8:	(bad)  
  41daa9:	pop    ecx
  41daaa:	rcr    edx,1
  41daac:	dec    edi
  41daad:	out    dx,eax
  41daae:	inc    ebp
  41daaf:	lea    edi,[eax+0x65]
  41dab2:	js     0x41da38
  41dab4:	repnz stc 
  41dab6:	lock ret 
  41dab8:	mov    bl,0x6e
  41daba:	pop    eax
  41dabb:	add    BYTE PTR [edx-0x3fea8f42],bh
  41dac1:	mov    edx,DWORD PTR [eax]
  41dac3:	or     eax,0xd4c06b01
  41dac8:	mov    al,ds:0x163657
  41dacd:	sub    eax,0xe9c58a00
  41dad2:	retf   0xce98
  41dad5:	stos   DWORD PTR es:[edi],eax
  41dad6:	aaa    
  41dad7:	dec    ebx
  41dad8:	jns    0x41da7e
  41dada:	out    0x6d,al
  41dadc:	jbe    0x41daf0
  41dade:	jl     0x41dae5
  41dae0:	enter  0x1518,0x48
  41dae4:	cmp    DWORD PTR [ecx+eax*1+0x22],edi
  41dae8:	sbb    bl,ah
  41daea:	scas   eax,DWORD PTR es:[edi]
  41daeb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41daec:	mov    eax,0xe8237e4
  41daf1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41daf2:	lods   al,BYTE PTR ds:[esi]
  41daf3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41daf4:	push   ds
  41daf5:	jmp    0x6cfe791
  41dafa:	xchg   edx,eax
  41dafb:	daa    
  41dafc:	sub    edi,esp
  41dafe:	sbb    DWORD PTR [edx-0x3b],ecx
  41db01:	pop    ebx
  41db02:	mov    ds:0xb10357b7,eax
  41db07:	mov    ss,ebx
  41db09:	add    al,0x5a
  41db0b:	inc    edx
  41db0c:	cli    
  41db0d:	call   0x823b:0xb32841b9
  41db14:	add    DWORD PTR ds:[eax],edx
  41db17:	jb     0x41daae
  41db19:	mov    cl,0x6f
  41db1b:	stos   BYTE PTR es:[edi],al
  41db1c:	xor    eax,edi
  41db1e:	popa   
  41db1f:	dec    esi
  41db20:	jp     0x41dafe
  41db22:	popf   
  41db23:	xchg   esp,eax
  41db24:	ss test al,0x36
  41db27:	mov    edx,0x7c32c377
  41db2c:	(bad)  
  41db2d:	push   ecx
  41db2e:	inc    ecx
  41db2f:	icebp  
  41db30:	mov    bh,0x64
  41db32:	ret    0x10f
  41db35:	xchg   edx,eax
  41db36:	lock data16 and ch,al
  41db3a:	sbb    ebx,ecx
  41db3c:	push   0xac762e82
  41db41:	aam    0x24
  41db43:	mov    dh,0x7d
  41db45:	mov    al,0xe5
  41db47:	sbb    cl,BYTE PTR [edi+0x4ac0cd24]
  41db4d:	xlat   BYTE PTR ds:[ebx]
  41db4e:	loopne 0x41daef
  41db50:	popf   
  41db51:	sub    DWORD PTR [ecx+0x3f53327d],edx
  41db57:	shl    DWORD PTR [ecx-0x255b3e3b],1
  41db5d:	xchg   BYTE PTR [eax-0x56],ah
  41db60:	dec    ebp
  41db61:	mov    ?,WORD PTR [eax]
  41db63:	cmp    BYTE PTR [esi+0x700f2171],ah
  41db69:	push   ebp
  41db6a:	sbb    al,0xc0
  41db6c:	inc    edx
  41db6d:	jbe    0x41dbc1
  41db6f:	push   DWORD PTR [ebx+eiz*1+0x35]
  41db73:	fwait
  41db74:	leave  
  41db75:	sbb    ebp,edx
  41db77:	lahf   
  41db78:	stos   DWORD PTR es:[edi],eax
  41db79:	stos   BYTE PTR es:[edi],al
  41db7a:	loope  0x41db2a
  41db7c:	rcl    DWORD PTR [ebp+0x486e40dc],1
  41db82:	push   ecx
  41db83:	dec    eax
  41db84:	add    eax,0x7bda31fa
  41db89:	repnz ffreep st(5)
  41db8c:	(bad)  
  41db8d:	cmp    dh,ch
  41db8f:	into   
  41db90:	push   esi
  41db91:	add    dh,BYTE PTR [ebx+edx*1]
  41db94:	lock and BYTE PTR [eax-0x12],0xb4
  41db99:	lahf   
  41db9a:	pusha  
  41db9b:	hlt    
  41db9c:	adc    eax,0xfe2a2001
  41dba1:	xor    eax,0x21329bc5
  41dba6:	mov    ds:0x805123f8,al
  41dbab:	inc    edi
  41dbac:	inc    eax
  41dbad:	jo     0x41db57
  41dbaf:	gs daa 
  41dbb1:	dec    esp
  41dbb2:	leave  
  41dbb3:	fisubr WORD PTR gs:[ebp-0x60]
  41dbb7:	mov    DWORD PTR [esi+0x7aeb03c6],ebp
  41dbbd:	jo     0x41dbb1
  41dbbf:	test   eax,0xc1b9c1c1
  41dbc4:	push   esi
  41dbc5:	shl    DWORD PTR [edx-0x34],1
  41dbc8:	and    al,0xce
  41dbca:	add    cl,BYTE PTR [edi+0x3]
  41dbcd:	in     al,dx
  41dbce:	stos   BYTE PTR es:[edi],al
  41dbcf:	inc    edx
  41dbd0:	jl     0x41dc3b
  41dbd2:	les    ebp,FWORD PTR [edi+ebx*4]
  41dbd5:	ins    BYTE PTR es:[edi],dx
  41dbd6:	push   ecx
  41dbd7:	pop    es
  41dbd8:	iret   
  41dbd9:	(bad)  
  41dbda:	sub    eax,0x21759a4e
  41dbdf:	retf   
  41dbe0:	xchg   DWORD PTR [esi],ebp
  41dbe2:	dec    ebx
  41dbe3:	call   0x3cf25304
  41dbe8:	popa   
  41dbe9:	jp     0x41dc4b
  41dbeb:	cmp    bh,BYTE PTR [ecx+0x3a5015e6]
  41dbf1:	mov    cl,0x1
  41dbf3:	aaa    
  41dbf4:	mov    eax,0xfb162e12
  41dbf9:	mov    esi,0x5538ec2a
  41dbfe:	fcomp  DWORD PTR [edi-0x153578ec]
  41dc04:	pusha  
  41dc05:	add    ah,BYTE PTR [esi-0x6f]
  41dc08:	test   DWORD PTR [ecx],0x960d50c1
  41dc0e:	aaa    
  41dc0f:	cmp    edi,esp
  41dc11:	dec    ebx
  41dc12:	xor    al,BYTE PTR [ecx+ecx*1-0x57]
  41dc16:	sbb    DWORD PTR [esi],0xffffffd9
  41dc19:	add    ecx,ecx
  41dc1b:	fiadd  DWORD PTR [ebp+0x7a807223]
  41dc21:	cli    
  41dc22:	and    al,0x37
  41dc24:	cmp    al,0xed
  41dc26:	cwde   
  41dc27:	sar    BYTE PTR [edx-0x44506add],cl
  41dc2d:	(bad)  
  41dc2f:	icebp  
  41dc30:	dec    edi
  41dc31:	stc    
  41dc32:	adc    dl,BYTE PTR [edi-0x10784303]
  41dc38:	cwde   
  41dc39:	or     ebx,ecx
  41dc3b:	xchg   bh,al
  41dc3d:	xchg   edx,eax
  41dc3e:	lahf   
  41dc3f:	pop    esp
  41dc40:	(bad)  
  41dc41:	neg    DWORD PTR [esi+0x2e]
  41dc44:	xchg   ebp,eax
  41dc45:	cmp    BYTE PTR [eax-0x2d],bh
  41dc48:	dec    edx
  41dc49:	inc    ecx
  41dc4a:	xchg   edx,eax
  41dc4b:	lock jne 0x41dc04
  41dc4e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41dc4f:	xchg   esi,eax
  41dc50:	jne    0x41dc12
  41dc52:	xor    BYTE PTR [edi],dh
  41dc54:	out    dx,al
  41dc55:	sbb    DWORD PTR [ebx],ebp
  41dc57:	cmc    
  41dc58:	ss or  ah,cl
  41dc5b:	outs   dx,BYTE PTR ds:[esi]
  41dc5c:	or     eax,DWORD PTR [edx+0x31]
  41dc5f:	dec    esi
  41dc60:	push   ebp
  41dc61:	cdq    
  41dc62:	outs   dx,BYTE PTR ds:[esi]
  41dc63:	and    edi,DWORD PTR [ebp+eiz*1-0x5d81414e]
  41dc6a:	sub    eax,0x2c8b5e13
  41dc6f:	(bad)  
  41dc71:	xor    eax,0xcfffd6f2
  41dc76:	imul   esp,DWORD PTR [ebx],0x38
  41dc79:	or     eax,0xc7c500f7
  41dc7e:	ss inc edi
  41dc80:	sbb    al,0xcb
  41dc82:	ffreep st(2)
  41dc84:	ds adc eax,0xd247d40
  41dc8a:	push   ebp
  41dc8b:	xor    al,0xc5
  41dc8d:	dec    ecx
  41dc8e:	add    eax,0x71299395
  41dc93:	stc    
  41dc94:	std    
  41dc95:	and    ecx,DWORD PTR [edi+0x43]
  41dc98:	aam    0x89
  41dc9a:	paddq  mm6,mm4
  41dc9d:	sbb    ebp,DWORD PTR [edx]
  41dc9f:	jmp    0x41dd13
  41dca1:	and    al,0x86
  41dca3:	in     al,dx
  41dca4:	mov    eax,0xacbc74d5
  41dca9:	les    eax,FWORD PTR [esi-0x23]
  41dcac:	push   ebp
  41dcad:	xchg   ecx,eax
  41dcae:	inc    ebp
  41dcaf:	out    0xb7,eax
  41dcb1:	mov    eax,0x4a9d7627
  41dcb6:	xor    al,0xf1
  41dcb8:	pop    es
  41dcb9:	cmp    dh,BYTE PTR [edx]
  41dcbb:	adc    bh,ah
  41dcbd:	ins    BYTE PTR es:[edi],dx
  41dcbe:	push   ss
  41dcbf:	add    ecx,esp
  41dcc1:	fcom   QWORD PTR [edx+0x2c]
  41dcc4:	and    DWORD PTR [esi+0x491c91dd],0xffffffce
  41dccb:	les    edx,FWORD PTR [ebp+0x25]
  41dcce:	jp     0x41dcaf
  41dcd0:	mov    ah,BYTE PTR [edi+0x26e3cdae]
  41dcd6:	pushf  
  41dcd7:	call   0xdd47:0xb7269da1
  41dcde:	mov    ah,0x69
  41dce0:	cmc    
  41dce1:	stc    
  41dce2:	loope  0x41dd5e
  41dce4:	pop    ebx
  41dce5:	pusha  
  41dce6:	xor    DWORD PTR [ecx],ebp
  41dce8:	sub    cl,BYTE PTR [ebx+0x77]
  41dceb:	inc    ecx
  41dcec:	push   edi
  41dced:	imul   edi,DWORD PTR [ebp+0x5ba5ed12],0x7c003b84
  41dcf7:	mov    ecx,0x5c54b289
  41dcfc:	rcl    DWORD PTR [eax+0x7d],cl
  41dcff:	add    eax,0xf2c312e1
  41dd04:	rcl    DWORD PTR ds:0xc8b95b86,cl
  41dd0a:	and    al,0x8a
  41dd0c:	or     cl,BYTE PTR [eax]
  41dd0e:	loopne 0x41dd60
  41dd10:	jns    0x41dd72
  41dd12:	add    DWORD PTR [eax-0x4bfcc47b],0x6ba3ca1d
  41dd1c:	ins    BYTE PTR es:[edi],dx
  41dd1d:	mov    ebx,0xc805fab0
  41dd22:	fimul  DWORD PTR [ecx+0x5002f8f2]
  41dd28:	xor    BYTE PTR [edx-0x66ad5da2],0xdf
  41dd2f:	pop    edi
  41dd30:	dec    eax
  41dd31:	xchg   edi,eax
  41dd32:	lods   al,BYTE PTR ds:[esi]
  41dd33:	mov    eax,ds:0x436ea1f
  41dd38:	mov    ?,WORD PTR [edi-0x3212b322]
  41dd3e:	adc    al,dh
  41dd40:	bound  ebp,QWORD PTR [edx+0x4398cb3e]
  41dd46:	in     eax,dx
  41dd47:	aad    0x94
  41dd49:	out    0xb4,al
  41dd4b:	out    0x6a,al
  41dd4d:	inc    eax
  41dd4e:	mov    cl,0x7d
  41dd50:	ret    0xfbf8
  41dd53:	jmp    0x7fe350cc
  41dd58:	mov    eax,ds:0xd6e69294
  41dd5d:	ins    BYTE PTR es:[edi],dx
  41dd5e:	push   esi
  41dd5f:	or     DWORD PTR [ebp+edx*2-0x52],eax
  41dd63:	jecxz  0x41dced
  41dd65:	sub    bh,BYTE PTR [edx-0x3b290acf]
  41dd6b:	sub    ecx,DWORD PTR [esi]
  41dd6d:	cwde   
  41dd6e:	mov    dh,0xe1
  41dd70:	dec    ebx
  41dd71:	push   esi
  41dd72:	xor    eax,0x6a48df34
  41dd77:	fisub  WORD PTR [edx+eiz*2+0x65]
  41dd7b:	outs   dx,DWORD PTR ds:[esi]
  41dd7c:	(bad)  
  41dd7d:	pop    ss
  41dd7e:	(bad)  
  41dd7f:	mov    DWORD PTR [ebx],0x86325a6a
  41dd85:	imul   esi,DWORD PTR [esi-0x38],0xfffffffe
  41dd89:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41dd8a:	mov    eax,ds:0x58845505
  41dd8f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41dd90:	mov    dl,0x3c
  41dd92:	fisubr WORD PTR [eax]
  41dd94:	jns    0x41dd32
  41dd96:	xchg   ebp,eax
  41dd97:	mov    ds:0xa16a189b,al
  41dd9c:	mov    al,0xc0
  41dd9e:	adc    al,0x54
  41dda0:	xor    DWORD PTR [edi],ecx
  41dda2:	push   esp
  41dda3:	data16 stos BYTE PTR es:[edi],al
  41dda5:	sahf   
  41dda6:	stos   BYTE PTR es:[edi],al
  41dda7:	push   cs
  41dda8:	jae    0x41de07
  41ddaa:	aad    0xff
  41ddac:	imul   esp,DWORD PTR [eax-0x56f53f5f],0xac06fa2f
  41ddb6:	jbe    0x41ddd5
  41ddb8:	imul   edx,DWORD PTR [esi-0x3c],0xffffffde
  41ddbc:	push   esi
  41ddbd:	in     al,dx
  41ddbe:	lea    eax,[esi-0x489adc94]
  41ddc4:	xchg   DWORD PTR [edi-0x80],edx
  41ddc7:	cmp    BYTE PTR [esi-0x3c],0xe7
  41ddcb:	pop    esi
  41ddcc:	mov    DWORD PTR [ecx],esi
  41ddce:	ds addr16 inc edx
  41ddd1:	or     eax,0x3ef37944
  41ddd6:	ret    0x9c32
  41ddd9:	or     eax,DWORD PTR [edx]
  41dddb:	ret    0x6726
  41ddde:	mov    ds:0xe98531d,al
  41dde3:	xchg   BYTE PTR [ebx],dh
  41dde5:	retf   0x83eb
  41dde8:	xchg   DWORD PTR [ecx-0x63],esi
  41ddeb:	jne    0x41ddef
  41dded:	repnz addr16 pop eax
  41ddf0:	jge    0x41de0f
  41ddf2:	or     eax,0x169ed283
  41ddf7:	cmp    ebx,DWORD PTR [edi+0x4bc16603]
  41ddfd:	sar    BYTE PTR [ebp-0x40530237],1
  41de03:	in     eax,0xce
  41de05:	out    dx,al
  41de06:	jnp    0x41de4f
  41de08:	push   ebx
  41de09:	xor    BYTE PTR ds:0xd4f7efc0,ch
  41de0f:	push   edi
  41de10:	mov    esp,0x12a5d128
  41de15:	adc    eax,0x75f6799c
  41de1a:	outs   dx,DWORD PTR ds:[esi]
  41de1b:	pushw  es
  41de1d:	enter  0xbd21,0xfa
  41de21:	out    0x25,eax
  41de23:	nop
  41de24:	leave  
  41de25:	rcr    BYTE PTR [eax+0x64],1
  41de28:	lods   al,BYTE PTR ds:[esi]
  41de29:	push   ecx
  41de2a:	cdq    
  41de2b:	mov    cs,WORD PTR [esi+0x7ec58fdf]
  41de31:	retf   0x5a26
  41de34:	test   al,0x38
  41de36:	aaa    
  41de37:	jne    0x41de08
  41de39:	aad    0x33
  41de3b:	and    ecx,DWORD PTR [ebx]
  41de3d:	mov    ecx,0xaa27156c
  41de42:	in     eax,dx
  41de43:	fs test eax,edi
  41de46:	inc    dh
  41de48:	shl    ch,cl
  41de4a:	aaa    
  41de4b:	mov    dl,0x21
  41de4d:	call   0x65c58234
  41de52:	or     DWORD PTR ds:0x77dc02e7,ebp
  41de58:	test   eax,0xa099bbf1
  41de5d:	rol    DWORD PTR [edi-0x6d52cd6e],cl
  41de63:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41de64:	pop    ss
  41de65:	inc    esi
  41de66:	sub    esi,DWORD PTR [ebx]
  41de68:	and    BYTE PTR [ebp+0x4f1e4cf5],ah
  41de6e:	add    ch,BYTE PTR [edi]
  41de70:	jp     0x41de99
  41de72:	lock dec esi
  41de74:	cmp    ebx,DWORD PTR ds:0x93f9d9be
  41de7a:	cld    
  41de7b:	add    eax,0x4323df8a
  41de80:	dec    ecx
  41de81:	sub    BYTE PTR [ebx-0x66],ch
  41de84:	scas   eax,DWORD PTR es:[edi]
  41de85:	ss mov bl,0xd1
  41de88:	sbb    eax,0x2f14ab8b
  41de8d:	out    dx,eax
  41de8e:	mov    bl,0x67
  41de90:	ins    BYTE PTR es:[edi],dx
  41de91:	pop    edx
  41de92:	(bad)  
  41de94:	ror    dl,0x20
  41de97:	aas    
  41de98:	ret    
  41de99:	shl    BYTE PTR [ebp+0x50b6461f],cl
  41de9f:	cmp    dh,cl
  41dea1:	cdq    
  41dea2:	xchg   edx,eax
  41dea3:	and    al,0xcd
  41dea5:	ret    0xb2fe
  41dea8:	mov    BYTE PTR [eax-0x1b],ch
  41deab:	mov    dh,BYTE PTR [ebx+0xd]
  41deae:	call   0x4d14:0x2620c7ad
  41deb5:	out    0x96,eax
  41deb7:	adc    eax,0xbc7c45a1
  41debc:	pop    ds
  41debd:	(bad)  
  41debf:	test   BYTE PTR ds:0xa76891b2,0x5d
  41dec6:	mov    edi,0xebdb7106
  41decb:	mov    bl,0xfa
  41decd:	sub    DWORD PTR [eax],esp
  41decf:	bound  ecx,QWORD PTR [esi+eax*1+0x6ef064e6]
  41ded6:	enter  0xbeb2,0xaa
  41deda:	pop    edi
  41dedb:	jl     0x41df07
  41dedd:	fmulp  st(6),st
  41dedf:	mov    BYTE PTR [ebp+edi*1+0x61],cl
  41dee3:	cwde   
  41dee4:	xor    al,0xb8
  41dee6:	dec    ebp
  41dee7:	std    
  41dee8:	or     DWORD PTR [ebp-0x24],esi
  41deeb:	xchg   ebp,eax
  41deec:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41deed:	adc    al,0x92
  41def0:	call   0xf79a:0x6bcd018e
  41def7:	add    al,BYTE PTR [edx-0x49a8572c]
  41defd:	xchg   esi,eax
  41defe:	pop    es
  41deff:	popa   
  41df00:	pop    ecx
  41df01:	mov    edi,0xde121d65
  41df06:	nop
  41df07:	aas    
  41df08:	mov    edi,0x4c60b7d4
  41df0d:	mov    edx,0x15962f02
  41df12:	adc    eax,0xf7fa177c
  41df17:	inc    edi
  41df18:	sub    eax,ebx
  41df1a:	lds    esi,FWORD PTR [ecx+ebp*8]
  41df1d:	inc    edx
  41df1e:	pop    esi
  41df1f:	pushf  
  41df20:	fild   WORD PTR [esi+eax*4+0x32]
  41df24:	rcl    DWORD PTR [edx-0x53],1
  41df27:	pop    esi
  41df28:	push   es
  41df29:	inc    ebx
  41df2a:	std    
  41df2b:	div    DWORD PTR [ebx]
  41df2d:	std    
  41df2e:	cmc    
  41df2f:	test   DWORD PTR [esi+0x504ce886],ecx
  41df35:	scas   al,BYTE PTR es:[edi]
  41df36:	mov    dl,BYTE PTR [ecx]
  41df38:	sbb    DWORD PTR [edx],ecx
  41df3a:	sbb    bl,dl
  41df3c:	frstor [edx]
  41df3e:	das    
  41df3f:	frstor [ebx+0x13]
  41df42:	pusha  
  41df43:	sbb    DWORD PTR ds:0xb7663ad2,0x6f
  41df4a:	imul   eax,eax,0xffffffe3
  41df4d:	out    dx,al
  41df4e:	test   al,0x21
  41df50:	xchg   esp,eax
  41df51:	xor    DWORD PTR [edx-0x6],ebx
  41df54:	mov    edx,0xa31da85a
  41df59:	sub    al,0x82
  41df5b:	push   0xffffffef
  41df5d:	mov    al,ds:0xb20aa8c5
  41df62:	inc    ebx
  41df63:	rcr    cl,0x5e
  41df66:	test   eax,0x90c18410
  41df6b:	sub    BYTE PTR [edx+0x4094ba2],dl
  41df71:	sbb    eax,0x36f9cb7f
  41df76:	fcompp 
  41df78:	inc    ebp
  41df79:	dec    ebp
  41df7a:	mov    ecx,0x6c46eedc
  41df7f:	push   esi
  41df80:	jmp    0x41df07
  41df82:	sub    BYTE PTR ss:[ecx],dl
  41df85:	fld    st(1)
  41df87:	out    0xf9,al
  41df89:	push   ebp
  41df8a:	popf   
  41df8b:	xchg   edx,eax
  41df8c:	ss int3 
  41df8e:	sbb    DWORD PTR [ecx+eax*8-0x3f],esp
  41df92:	pop    edx
  41df93:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41df94:	push   cs
  41df95:	inc    eax
  41df96:	push   eax
  41df97:	inc    ebp
  41df98:	jno    0x41dfab
  41df9a:	aas    
  41df9b:	rol    BYTE PTR [esi],0x79
  41df9e:	popa   
  41df9f:	push   ebx
  41dfa0:	ds jb  0x41df64
  41dfa3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41dfa4:	push   ds
  41dfa5:	repnz add ah,BYTE PTR [ecx-0x7d]
  41dfa9:	test   al,0xf3
  41dfab:	fwait
  41dfac:	pop    ds
  41dfad:	jns    0x41e027
  41dfaf:	mov    al,ds:0xb5ec3b00
  41dfb4:	mov    ds:0x257c49f8,al
  41dfb9:	int3   
  41dfba:	outs   dx,BYTE PTR ds:[esi]
  41dfbb:	dec    DWORD PTR cs:[edx-0x51]
  41dfbf:	fld1   
  41dfc1:	pop    es
  41dfc2:	sub    esp,DWORD PTR [edx-0x68b5dffe]
  41dfc8:	cli    
  41dfc9:	test   dl,cl
  41dfcb:	fwait
  41dfcc:	test   BYTE PTR [esi],bl
  41dfce:	dec    edi
  41dfcf:	setno  BYTE PTR [ecx+ecx*4-0x12b623f5]
  41dfd7:	sahf   
  41dfd8:	or     DWORD PTR [eax+ecx*4],edx
  41dfdb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41dfdc:	mov    WORD PTR [edi-0x16941224],?
  41dfe2:	mov    cl,0x71
  41dfe4:	add    ebx,DWORD PTR [ecx+0x7]
  41dfe7:	sbb    esp,DWORD PTR [ecx-0x124a8d16]
  41dfed:	mov    ?,WORD PTR [esi]
  41dfef:	mov    ah,0xa5
  41dff1:	xchg   ebp,eax
  41dff2:	in     eax,0x82
  41dff4:	push   0xffffff9a
  41dff6:	mov    ah,0x30
  41dff8:	inc    ebp
  41dff9:	jl     0x41e055
  41dffb:	sub    ch,BYTE PTR [edi]
  41dffd:	push   cx
  41dfff:	push   esi
  41e000:	jbe    0x41df8f
  41e002:	push   edi
  41e003:	lds    ebp,FWORD PTR [ebx]
  41e005:	inc    eax
  41e006:	mov    al,0x27
  41e008:	mov    dl,0x62
  41e00a:	jae    0x41dfd5
  41e00c:	add    al,0xc
  41e00e:	imul   eax,ebp,0xffffffff
  41e011:	(bad)  
  41e012:	retf   
  41e013:	push   0x76
  41e015:	or     bh,BYTE PTR [ebp+0x3ddb5231]
  41e01b:	jbe    0x41dfe0
  41e01d:	bound  eax,QWORD PTR [ecx-0x38]
  41e020:	adc    esi,DWORD PTR [ecx+0x6e]
  41e023:	pop    edi
  41e024:	sahf   
  41e025:	clc    
  41e026:	scas   al,BYTE PTR es:[edi]
  41e027:	mov    esi,0x33af0858
  41e02c:	cli    
  41e02d:	ficom  WORD PTR [edx+ecx*4+0x33]
  41e031:	int    0x92
  41e033:	sbb    ebx,0x63
  41e036:	mov    esp,0xfddcf1ba
  41e03b:	and    edx,DWORD PTR [esi-0x5aed9fb0]
  41e041:	xor    BYTE PTR [eax],bh
  41e043:	(bad)
  41e047:	sub    al,0x37
  41e049:	push   ds
  41e04a:	pop    esp
  41e04b:	fist   WORD PTR [edx+edx*4-0x25]
  41e04f:	sbb    bl,BYTE PTR [edx+0x2219e69]
  41e055:	test   al,0x76
  41e057:	ror    BYTE PTR [ebx+0x2befe500],1
  41e05d:	pushf  
  41e05e:	pop    es
  41e05f:	iret   
  41e060:	test   DWORD PTR [ecx],esp
  41e062:	sti    
  41e063:	jle    0x41e064
  41e065:	loop   0x41e0a9
  41e067:	xor    eax,0x443ffae8
  41e06c:	mov    ebp,0xab74c4ab
  41e071:	xor    edi,eax
  41e073:	mov    bl,0xd0
  41e075:	test   ecx,edi
  41e077:	mov    al,0x51
  41e079:	xchg   ebp,eax
  41e07a:	imul   esp,DWORD PTR [ebx+0x52],0x39533c9b
  41e081:	pushf  
  41e082:	mov    cl,0x59
  41e084:	nop    ecx
  41e087:	enter  0xf609,0x48
  41e08b:	dec    edi
  41e08c:	xchg   esi,eax
  41e08d:	xchg   edx,eax
  41e08e:	xchg   edx,eax
  41e08f:	mov    BYTE PTR [ebp+0x39],bl
  41e092:	lds    ebx,FWORD PTR [ebx+0x3a22ddc6]
  41e098:	sbb    ebp,ebx
  41e09a:	jle    0x41e0d1
  41e09c:	retf   0xc849
  41e09f:	push   ds
  41e0a0:	pop    edi
  41e0a1:	add    eax,0x4940d13a
  41e0a6:	add    eax,0x1a7e782e
  41e0ab:	sbb    eax,0xf44b5052
  41e0b0:	aad    0x2f
  41e0b2:	dec    esp
  41e0b3:	xchg   ebx,eax
  41e0b4:	ret    0x5f2e
  41e0b7:	sub    cl,BYTE PTR [esi]
  41e0b9:	int    0xd6
  41e0bb:	push   edx
  41e0bc:	clc    
  41e0bd:	push   esi
  41e0be:	push   ebx
  41e0bf:	dec    edx
  41e0c0:	and    al,0x7
  41e0c2:	dec    edx
  41e0c3:	sub    al,0xd1
  41e0c5:	dec    ecx
  41e0c6:	ja     0x41e09a
  41e0c8:	or     eax,0x373e5892
  41e0cd:	jnp    0x41e0de
  41e0cf:	cs jbe 0x41e102
  41e0d2:	mov    ds:0xd7f8795f,eax
  41e0d7:	adc    DWORD PTR [eax],eax
  41e0d9:	dec    ebp
  41e0da:	sar    edi,0xf3
  41e0dd:	outs   dx,BYTE PTR ds:[esi]
  41e0de:	inc    ebp
  41e0df:	dec    eax
  41e0e0:	cmp    al,0x12
  41e0e2:	add    edi,esi
  41e0e4:	ins    BYTE PTR es:[edi],dx
  41e0e5:	enter  0x73dd,0x35
  41e0e9:	pop    ds
  41e0ea:	mov    ecx,0x414003b6
  41e0ef:	sub    al,0xd
  41e0f1:	push   es
  41e0f2:	dec    eax
  41e0f3:	push   ebp
  41e0f4:	jbe    0x41e174
  41e0f6:	rcr    BYTE PTR [edi],cl
  41e0f8:	cmp    al,0xfb
  41e0fa:	jmp    0x41e10f
  41e0fc:	xlat   BYTE PTR ds:[ebx]
  41e0fd:	ret    0xfc4b
  41e100:	mov    eax,0xa29a0bd6
  41e105:	pop    es
  41e106:	xchg   esp,eax
  41e107:	pop    ss
  41e108:	inc    ebx
  41e109:	rcl    DWORD PTR [ebx+ebx*2+0x56],1
  41e10d:	repz clc 
  41e10f:	pusha  
  41e110:	and    ah,BYTE PTR [ecx-0x3ead2255]
  41e116:	cmc    
  41e117:	push   ss
  41e118:	ins    BYTE PTR es:[edi],dx
  41e119:	fldenv [edi+0x2f]
  41e11c:	xchg   edx,eax
  41e11d:	cs mov edx,0x34d24ba0
  41e123:	popf   
  41e124:	pop    ecx
  41e125:	ss inc edx
  41e127:	and    cl,BYTE PTR [ebx]
  41e129:	aas    
  41e12a:	mov    al,ds:0x8a766185
  41e12f:	(bad)  
  41e130:	push   ebp
  41e131:	das    
  41e132:	cli    
  41e133:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e134:	fist   DWORD PTR [esi+0x5c]
  41e137:	retf   
  41e138:	inc    ecx
  41e139:	(bad)  
  41e13a:	int    0x1c
  41e13c:	cmp    eax,esp
  41e13e:	pop    ds
  41e13f:	lock pop esp
  41e141:	mov    dh,0x51
  41e143:	add    edi,DWORD PTR [edx]
  41e145:	jne    0x41e0d7
  41e147:	fdiv   QWORD PTR [ebx]
  41e149:	cs pop esi
  41e14b:	aas    
  41e14c:	(bad)  
  41e14d:	sti    
  41e14e:	aas    
  41e14f:	sbb    BYTE PTR [edi-0x71],bl
  41e152:	pushf  
  41e153:	jmp    0x3334aa09
  41e158:	arpl   WORD PTR [edx],bp
  41e15a:	out    0xc9,eax
  41e15c:	clc    
  41e15d:	lods   eax,DWORD PTR ds:[esi]
  41e15e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e15f:	ret    
  41e160:	dec    edx
  41e161:	xchg   BYTE PTR [edi],bl
  41e163:	arpl   sp,sp
  41e165:	stos   BYTE PTR es:[edi],al
  41e166:	pusha  
  41e167:	dec    edx
  41e168:	stc    
  41e169:	xor    sp,bp
  41e16c:	imul   eax,ecx,0xe
  41e16f:	fld    QWORD PTR [eax+0x7b]
  41e172:	les    ebp,FWORD PTR [ecx+esi*1+0x491a531]
  41e179:	adc    eax,0xb5cd5be0
  41e17e:	mov    DWORD PTR [ecx-0x12],edi
  41e181:	or     al,0xf2
  41e183:	xchg   DWORD PTR [esi+0x63],ebx
  41e186:	jl     0x41e1ae
  41e188:	test   DWORD PTR [eax+0x30],ecx
  41e18b:	mov    al,0x46
  41e18d:	add    ecx,DWORD PTR [edx+0x48]
  41e190:	mov    ?,ebp
  41e192:	dec    ecx
  41e193:	int    0x26
  41e195:	push   0xffffff8b
  41e197:	cwde   
  41e198:	sub    dh,BYTE PTR [ebp-0x3]
  41e19b:	arpl   WORD PTR [ebx],si
  41e19d:	out    dx,eax
  41e19e:	dec    ebp
  41e1a0:	sub    DWORD PTR [eax+0x3d589de3],esp
  41e1a6:	cmp    ebp,DWORD PTR [eax-0x29]
  41e1a9:	lods   al,BYTE PTR ds:[esi]
  41e1aa:	int3   
  41e1ab:	addr16 inc ecx
  41e1ad:	xor    ah,BYTE PTR [esi+0x4c1f80a9]
  41e1b3:	loopne 0x41e1ee
  41e1b5:	pop    edx
  41e1b6:	jmp    0x41e1ff
  41e1b8:	xchg   ebx,eax
  41e1b9:	popf   
  41e1ba:	hlt    
  41e1bb:	cdq    
  41e1bc:	lock sahf 
  41e1be:	mov    esi,0x3ba5705e
  41e1c4:	test   al,0xa4
  41e1c6:	stc    
  41e1c7:	push   ecx
  41e1c8:	cli    
  41e1c9:	stos   DWORD PTR es:[edi],eax
  41e1ca:	(bad)  
  41e1cb:	out    0x66,eax
  41e1cd:	xchg   edi,eax
  41e1ce:	mov    eax,0x3b8a8def
  41e1d3:	xchg   esp,eax
  41e1d4:	pop    ds
  41e1d5:	pop    edi
  41e1d6:	cmp    esi,DWORD PTR [edi+0x1a]
  41e1d9:	jbe    0x41e1f8
  41e1db:	pop    eax
  41e1dc:	popa   
  41e1dd:	push   esi
  41e1de:	dec    ebx
  41e1df:	push   edi
  41e1e0:	ret    
  41e1e1:	jo     0x41e1f6
  41e1e3:	mov    WORD PTR [esi+0x54bc5796],?
  41e1e9:	sbb    dh,bl
  41e1eb:	jge    0x41e1b7
  41e1ed:	jb     0x41e267
  41e1ef:	sub    BYTE PTR [ebp+0x27058193],ch
  41e1f5:	mov    ebp,0x506da781
  41e1fa:	mov    ah,0x90
  41e1fc:	and    dl,ah
  41e1fe:	cmp    DWORD PTR [ebx+0x68],0x6476391f
  41e205:	mov    ebx,0x120819d6
  41e20a:	sbb    edi,DWORD PTR [ebx+edx*4]
  41e20d:	retf   0xe866
  41e210:	xor    dh,al
  41e212:	mov    ch,0x0
  41e214:	jl     0x41e25d
  41e216:	mov    edi,ebp
  41e218:	das    
  41e219:	cmp    esp,DWORD PTR [ecx+0x36]
  41e21c:	cs push es
  41e21e:	imul   esp,DWORD PTR [ecx-0x3e],0xa623c03a
  41e225:	xchg   DWORD PTR [esi-0x77],esi
  41e228:	retf   0xcac0
  41e22b:	mov    ecx,0xac18dd02
  41e230:	pop    ebp
  41e231:	add    bl,cl
  41e233:	mov    ds:0x2ccd8b20,al
  41e238:	hlt    
  41e239:	inc    esi
  41e23a:	jb     0x41e278
  41e23c:	xchg   esi,eax
  41e23d:	mov    eax,0x2ba57352
  41e242:	mov    bh,0xbe
  41e244:	je     0x41e236
  41e246:	pop    ecx
  41e247:	cmp    BYTE PTR [eax-0x56f5dcae],cl
  41e24d:	and    ebp,esi
  41e24f:	xor    ch,BYTE PTR [eax+0x2d]
  41e252:	cli    
  41e253:	(bad)  
  41e254:	fcmovnb st,st(7)
  41e256:	cmp    DWORD PTR [edx+0x6c6c3e05],0xe
  41e25d:	and    BYTE PTR [edi+0x5df27450],dl
  41e263:	fsubr  st,st(3)
  41e265:	and    al,bl
  41e267:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e268:	les    ebp,FWORD PTR [edx-0x13]
  41e26b:	(bad)  
  41e26c:	popf   
  41e26d:	adc    al,0x4f
  41e26f:	imul   esp,esp,0x36
  41e272:	cmp    esi,DWORD PTR [edx-0x58c602fe]
  41e278:	jp     0x41e286
  41e27a:	xor    ax,0x88a8
  41e27e:	xchg   edi,eax
  41e27f:	sub    bh,BYTE PTR [ecx-0x59]
  41e282:	outs   dx,BYTE PTR ds:[esi]
  41e283:	pop    ebp
  41e284:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e285:	out    0x4d,eax
  41e287:	sbb    al,0x45
  41e289:	jmp    0x41e215
  41e28b:	cmp    DWORD PTR [edx],ebp
  41e28d:	add    BYTE PTR [eax],ch
  41e28f:	pop    ebx
  41e290:	inc    esp
  41e291:	xchg   al,dl
  41e293:	mov    ecx,0xe5518558
  41e298:	pop    ebx
  41e299:	ret    
  41e29a:	hlt    
  41e29b:	in     eax,dx
  41e29c:	adc    ch,BYTE PTR [edi-0xf8f31cc]
  41e2a2:	mov    esp,0x92365f55
  41e2a7:	jno    0x41e28d
  41e2a9:	cmp    DWORD PTR [ebx+0x56],ebp
  41e2ac:	es std 
  41e2ae:	pop    ss
  41e2af:	fcomp  st(7)
  41e2b1:	mov    bl,0x79
  41e2b3:	mov    BYTE PTR [edx],dh
  41e2b5:	push   ds
  41e2b6:	test   eax,0x78fba814
  41e2bb:	sbb    ch,BYTE PTR [ebx-0x1f]
  41e2be:	add    bl,BYTE PTR ds:0xa90f7783
  41e2c4:	mov    ebx,0x2ab457cc
  41e2c9:	sub    DWORD PTR [ebp+esi*4-0x527a128a],ecx
  41e2d0:	out    dx,al
  41e2d1:	retf   0xd32b
  41e2d4:	inc    edi
  41e2d5:	leave  
  41e2d6:	jae    0x41e272
  41e2d8:	test   cl,bl
  41e2da:	into   
  41e2db:	(bad)  
  41e2dc:	mov    ds:0xb1d304fd,al
  41e2e1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e2e2:	stc    
  41e2e3:	jl     0x41e2c0
  41e2e5:	dec    ebx
  41e2e6:	pushf  
  41e2e7:	push   0xf8076ac5
  41e2ec:	pushf  
  41e2ed:	adc    ebx,edx
  41e2ef:	mov    eax,0xe9e3aa0d
  41e2f4:	add    edx,edi
  41e2f6:	pop    edi
  41e2f7:	xor    ebp,edx
  41e2f9:	xor    BYTE PTR [edx+0x3a7394be],bl
  41e2ff:	xchg   esi,eax
  41e300:	psrlq  mm4,QWORD PTR [ebp-0x144dc564]
  41e307:	xor    ah,BYTE PTR [edi+0x61b42d1]
  41e30d:	fadd   QWORD PTR [ebx+0x775b9857]
  41e313:	dec    eax
  41e314:	mov    al,0xfe
  41e316:	mov    ah,0x23
  41e318:	adc    BYTE PTR [eax+0x724c4681],dl
  41e31e:	nop
  41e31f:	stos   BYTE PTR es:[edi],al
  41e320:	xchg   ecx,eax
  41e321:	lods   eax,DWORD PTR ds:[esi]
  41e322:	sub    BYTE PTR [edi-0x73244a13],ch
  41e328:	rol    dl,1
  41e32a:	sbb    eax,0xfabc7b7a
  41e32f:	pop    DWORD PTR [esi]
  41e331:	and    al,0x92
  41e333:	mov    esi,0xb0b6ef62
  41e338:	std    
  41e339:	jp     0x41e313
  41e33b:	rcr    BYTE PTR [edi+0x4a1eade7],1
  41e341:	test   eax,0x4af59fc9
  41e346:	aad    0xf
  41e348:	test   cl,bl
  41e34a:	ins    BYTE PTR es:[edi],dx
  41e34b:	push   edi
  41e34c:	inc    eax
  41e34d:	retf   
  41e34e:	jmp    0x5f3f158e
  41e353:	xchg   edx,eax
  41e354:	mov    cl,0xbc
  41e356:	add    cl,BYTE PTR [ebp-0x7]
  41e359:	loopne 0x41e3c0
  41e35b:	inc    esi
  41e35c:	mov    ecx,0xb88524c9
  41e361:	lds    edx,FWORD PTR [edx+0x4db68d52]
  41e367:	push   edi
  41e368:	adc    al,0xb2
  41e36a:	mov    BYTE PTR [edi-0x7c97366b],dl
  41e370:	clc    
  41e371:	push   cs
  41e372:	mov    al,0xfd
  41e374:	sbb    DWORD PTR [eax],0x7f90e6d3
  41e37a:	mov    dl,0x34
  41e37c:	mov    bh,0x47
  41e37e:	xchg   al,bl
  41e380:	xchg   BYTE PTR [esi],dl
  41e382:	add    ebp,DWORD PTR [edx-0x1bc8a0e1]
  41e388:	into   
  41e389:	pop    ecx
  41e38a:	jnp    0x41e3d3
  41e38c:	js     0x41e31a
  41e38e:	dec    edi
  41e38f:	and    al,0xba
  41e391:	pop    edx
  41e392:	lea    eax,[edi+edi*8]
  41e395:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e396:	push   edx
  41e397:	stos   DWORD PTR es:[edi],eax
  41e398:	xchg   ebp,eax
  41e399:	pop    esp
  41e39a:	add    edx,esi
  41e39c:	push   ecx
  41e39d:	cdq    
  41e39e:	ins    DWORD PTR es:[edi],dx
  41e39f:	and    ch,BYTE PTR [ebx+0x2627e4fa]
  41e3a5:	nop
  41e3a6:	and    BYTE PTR [ebx-0x3f],ch
  41e3a9:	(bad)  
  41e3aa:	xchg   ebx,eax
  41e3ab:	iret   
  41e3ac:	push   0x1a
  41e3ae:	stos   DWORD PTR es:[edi],eax
  41e3af:	gs xchg ebp,eax
  41e3b1:	popa   
  41e3b2:	test   BYTE PTR [eax-0x2723f297],bl
  41e3b8:	dec    ebx
  41e3b9:	xchg   BYTE PTR [ebx-0x36],cl
  41e3bc:	fcmovnu st,st(7)
  41e3be:	mov    ch,0x22
  41e3c0:	push   ecx
  41e3c1:	add    edi,eax
  41e3c3:	lahf   
  41e3c4:	push   edi
  41e3c5:	leave  
  41e3c6:	mov    edx,DWORD PTR [edi]
  41e3c8:	jae    0x41e3f1
  41e3ca:	jmp    0x41e40e
  41e3cc:	out    dx,al
  41e3cd:	sbb    eax,0xfd4f2c9
  41e3d2:	and    BYTE PTR [edx],cl
  41e3d4:	inc    edx
  41e3d5:	xor    ebx,DWORD PTR [edx+edi*8+0x11]
  41e3d9:	cdq    
  41e3da:	retf   
  41e3db:	pushw  cs
  41e3dd:	in     al,0xa4
  41e3df:	(bad)  
  41e3e0:	test   al,0x68
  41e3e2:	ret    0x5de8
  41e3e5:	mov    dh,0xa9
  41e3e7:	out    0x5a,eax
  41e3e9:	xchg   esp,eax
  41e3ea:	rcr    BYTE PTR [edx+eax*8],0x42
  41e3ee:	cmp    DWORD PTR [ebx],esi
  41e3f0:	mov    bl,0xbc
  41e3f2:	(bad)  
  41e3f3:	and    ecx,ebp
  41e3f5:	(bad)  [esi-0x4b]
  41e3f8:	mov    eax,ds:0xe8226682
  41e3fd:	dec    edx
  41e3fe:	js     0x41e43a
  41e400:	fst    st(5)
  41e402:	fwait
  41e403:	mov    ah,BYTE PTR [ecx+0x6a]
  41e406:	jmp    0x9ac1:0xf6ae34e4
  41e40d:	push   esp
  41e40e:	mov    bh,0xc8
  41e410:	out    0xc1,al
  41e412:	hlt    
  41e413:	cli    
  41e414:	pusha  
  41e415:	xor    DWORD PTR [ebp-0x66],0xffffffab
  41e419:	adc    BYTE PTR [ecx+0x29b623de],bl
  41e41f:	mov    DWORD PTR [edi-0x79],edx
  41e422:	sbb    eax,0xc0dc6e97
  41e427:	jo     0x41e3e1
  41e429:	nop
  41e42a:	fmul   st,st(3)
  41e42c:	mov    esi,cs
  41e42e:	jmp    0x41e3d5
  41e430:	sbb    esp,esp
  41e432:	sahf   
  41e433:	fs out dx,al
  41e435:	xor    eax,0x520b2d98
  41e43a:	aas    
  41e43b:	pusha  
  41e43c:	fbstp  TBYTE PTR ds:0xe47f9fb0
  41e442:	adc    esi,edi
  41e444:	pusha  
  41e445:	cmp    eax,ecx
  41e447:	mov    bh,0x6d
  41e449:	pop    ebx
  41e44a:	xchg   DWORD PTR [ebx],esi
  41e44c:	imul   BYTE PTR [edx+0x6c]
  41e44f:	mov    eax,es:0x5138f883
  41e455:	ret    0xba3b
  41e458:	(bad)  
  41e459:	mov    ch,0xc6
  41e45b:	rol    bh,0x91
  41e45e:	xor    ebx,esi
  41e460:	inc    ebp
  41e461:	and    DWORD PTR [ecx],eax
  41e463:	cmc    
  41e464:	and    ecx,DWORD PTR [edx]
  41e466:	sub    esp,DWORD PTR [ecx]
  41e468:	add    DWORD PTR [ebp+0x7b],esp
  41e46b:	aas    
  41e46c:	jmp    0x21cf:0x3dad3b85
  41e473:	pop    ds
  41e474:	fldcw  WORD PTR [edx-0x146d9a75]
  41e47a:	loop   0x41e4bd
  41e47c:	aas    
  41e47d:	or     ch,BYTE PTR [ecx]
  41e47f:	xchg   ebx,edx
  41e481:	and    edx,DWORD PTR [ebx+esi*4]
  41e484:	jmp    0x59ed:0x3801036d
  41e48b:	aas    
  41e48c:	inc    esi
  41e48d:	mov    ch,0x2a
  41e48f:	loopne 0x41e477
  41e491:	inc    esp
  41e492:	jge    0x41e4da
  41e494:	adc    BYTE PTR [ebp+ecx*4+0x2e],dh
  41e498:	cdq    
  41e499:	pop    ds
  41e49a:	cmp    DWORD PTR [edi-0x6903ebaa],ebx
  41e4a0:	push   cs
  41e4a1:	ffree  st(0)
  41e4a3:	into   
  41e4a4:	adc    di,sp
  41e4a7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e4a8:	iret   
  41e4a9:	lods   al,BYTE PTR ds:[esi]
  41e4aa:	into   
  41e4ab:	adc    al,0x8d
  41e4ae:	cwde   
  41e4af:	inc    esp
  41e4b0:	xchg   ecx,eax
  41e4b1:	adc    DWORD PTR [ecx-0x833dd7f],ebx
  41e4b7:	shl    dl,1
  41e4b9:	out    0x2,eax
  41e4bb:	or     al,0x0
  41e4bd:	xor    BYTE PTR [eax],0x5c
  41e4c0:	and    eax,0xaf0d0d11
  41e4c5:	jecxz  0x41e50d
  41e4c7:	sub    eax,0x92ae5bf0
  41e4cc:	adc    DWORD PTR [ecx-0x65],ebx
  41e4cf:	sbb    eax,0x84823c2
  41e4d4:	jecxz  0x41e4bf
  41e4d6:	dec    esp
  41e4d7:	and    al,0xd1
  41e4d9:	inc    eax
  41e4da:	cmp    al,0xd8
  41e4dc:	mov    dl,0x16
  41e4de:	push   eax
  41e4df:	lods   eax,DWORD PTR ds:[esi]
  41e4e0:	cmp    eax,0xd7b440f2
  41e4e5:	pusha  
  41e4e6:	in     eax,dx
  41e4e7:	jne    0x41e4d7
  41e4e9:	inc    edi
  41e4ea:	(bad)  
  41e4eb:	cmc    
  41e4ec:	shl    dl,0x52
  41e4ef:	jne    0x41e4b6
  41e4f1:	inc    esi
  41e4f2:	pop    DWORD PTR [esp+edi*4]
  41e4f5:	mov    WORD PTR [eax],?
  41e4f7:	stos   BYTE PTR es:[edi],al
  41e4f8:	(bad)  
  41e4fa:	jae    0x41e54c
  41e4fc:	and    edi,DWORD PTR [ebp-0x14]
  41e4ff:	xlat   BYTE PTR ds:[ebx]
  41e500:	sbb    al,0xbf
  41e502:	rol    DWORD PTR [ecx+eax*1+0x1b],0x9d
  41e507:	adc    edx,DWORD PTR ds:0xbbea078b
  41e50d:	aas    
  41e50e:	ins    BYTE PTR es:[edi],dx
  41e50f:	and    ch,ch
  41e511:	xchg   ebp,eax
  41e512:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e513:	clc    
  41e514:	arpl   WORD PTR [edi-0x35],sp
  41e517:	fsubr  QWORD PTR [eax]
  41e519:	test   eax,0x4cf1554f
  41e51e:	cli    
  41e51f:	enter  0xe2e3,0x7e
  41e523:	and    DWORD PTR [ebx],0x9ac46810
  41e529:	frstor [ecx+esi*8]
  41e52c:	mov    eax,0x81646afc
  41e531:	mov    eax,0xafae8d42
  41e536:	push   eax
  41e537:	enter  0x41dc,0xc3
  41e53b:	std    
  41e53c:	xchg   ecx,eax
  41e53d:	std    
  41e53e:	mov    cs,WORD PTR [ecx]
  41e540:	pop    eax
  41e541:	jb     0x41e4fb
  41e543:	mov    bl,0xdd
  41e545:	cs add al,0x87
  41e548:	lahf   
  41e549:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e54a:	cmp    eax,0xee97f2e4
  41e54f:	or     dl,dh
  41e551:	pushf  
  41e552:	in     eax,dx
  41e553:	outs   dx,BYTE PTR ds:[esi]
  41e554:	pop    es
  41e555:	adc    eax,0x9de9ace3
  41e55a:	ins    BYTE PTR es:[edi],dx
  41e55b:	dec    ecx
  41e55c:	mov    ds:0x20e079f4,al
  41e561:	cwde   
  41e562:	fstp   DWORD PTR [edi+0x16]
  41e565:	or     dh,BYTE PTR [edx-0x7228c6f]
  41e56b:	ss sti 
  41e56d:	jne    0x41e517
  41e56f:	loope  0x41e51d
  41e571:	in     eax,0x1b
  41e573:	dec    esp
  41e574:	lahf   
  41e575:	push   ds
  41e576:	or     DWORD PTR [edx+0x66d8e99f],esi
  41e57c:	aam    0x34
  41e57e:	aam    0xc0
  41e580:	mov    al,0x82
  41e582:	sar    BYTE PTR [edx],1
  41e584:	int3   
  41e585:	ret    
  41e586:	xchg   DWORD PTR [ebx+0x7a02cc3f],esi
  41e58c:	aad    0x3b
  41e58e:	xchg   ebp,eax
  41e58f:	imul   esi,DWORD PTR [ecx+eax*4+0x2f],0xd97c7aed
  41e597:	mov    esp,0x538c0722
  41e59c:	in     al,dx
  41e59d:	pop    edi
  41e59e:	(bad)  
  41e5a0:	call   0x819:0x33f4e168
  41e5a7:	ins    BYTE PTR es:[edi],dx
  41e5a8:	fs jmp 0x9956798b
  41e5ae:	rcl    DWORD PTR [edx-0x25897bb1],cl
  41e5b4:	xchg   ecx,eax
  41e5b5:	mov    ch,BYTE PTR [eax-0x5f522f90]
  41e5bb:	loope  0x41e5e5
  41e5bd:	ja     0x41e635
  41e5bf:	xor    BYTE PTR [edi-0x77],bl
  41e5c2:	pop    edx
  41e5c3:	xchg   ebx,eax
  41e5c4:	inc    ecx
  41e5c5:	and    edi,esp
  41e5c7:	cmc    
  41e5c8:	sub    al,0xc9
  41e5ca:	fld1   
  41e5cc:	sbb    al,0x59
  41e5ce:	inc    esp
  41e5cf:	mov    edx,0x28d61a0e
  41e5d4:	push   esi
  41e5d5:	jns    0x41e579
  41e5d7:	jg     0x41e62e
  41e5d9:	add    al,BYTE PTR [eax+0x4b]
  41e5dc:	push   ebp
  41e5dd:	cmp    eax,0x8acf8fbc
  41e5e2:	push   ss
  41e5e3:	or     eax,0x9123618b
  41e5e8:	add    dl,BYTE PTR [eax+0x5556547a]
  41e5ee:	mov    edx,0xc8003b07
  41e5f3:	daa    
  41e5f4:	test   DWORD PTR [eax-0x82dcccd],ebx
  41e5fa:	inc    esi
  41e5fb:	and    cl,ah
  41e5fd:	xchg   ebx,eax
  41e5fe:	stos   BYTE PTR es:[edi],al
  41e5ff:	shr    DWORD PTR [eax+ecx*8+0x1e],cl
  41e603:	fwait
  41e604:	vpackuswb xmm1,xmm0,XMMWORD PTR [ecx+0x1aa92140]
  41e60c:	and    esp,DWORD PTR [edi]
  41e60e:	not    BYTE PTR [edx+0x3d7acb96]
  41e614:	pop    eax
  41e615:	mov    edx,0x6c219870
  41e61a:	mov    ebp,?
  41e61c:	dec    esi
  41e61d:	inc    ecx
  41e61e:	xlat   BYTE PTR ds:[ebx]
  41e61f:	xor    eax,ebx
  41e621:	sub    eax,0x7c0a5c72
  41e626:	jl     0x41e60f
  41e628:	mov    ecx,0x41a36ddf
  41e62d:	popf   
  41e62e:	and    dh,BYTE PTR [eax-0x477e8573]
  41e634:	sbb    BYTE PTR [esi+0x31],0x56
  41e638:	mov    bl,0xde
  41e63a:	mov    dh,0x80
  41e63c:	or     DWORD PTR [esi-0x2d],edi
  41e63f:	int    0x36
  41e641:	pop    esi
  41e642:	mov    dh,0xde
  41e644:	fprem  
  41e646:	lea    esi,[ecx-0x78]
  41e649:	jae    0x41e6b5
  41e64b:	jg     0x41e681
  41e64d:	mov    WORD PTR [ebx],es
  41e64f:	imul   edx,DWORD PTR [ebp-0x7a],0x66
  41e653:	dec    eax
  41e654:	pop    edi
  41e655:	and    eax,esp
  41e657:	pushf  
  41e658:	push   es
  41e659:	dec    esp
  41e65a:	and    DWORD PTR [eax+0xa],eax
  41e65d:	sti    
  41e65e:	cmp    al,0xd0
  41e660:	ds add edx,DWORD PTR cs:[esi+0x5b]
  41e665:	inc    eax
  41e666:	fstp   DWORD PTR [ebx+eax*2]
  41e669:	push   esi
  41e66a:	pushf  
  41e66b:	and    eax,edx
  41e66d:	add    al,0xcb
  41e66f:	in     eax,0x3a
  41e671:	or     DWORD PTR [eax-0x287bf45e],esp
  41e677:	pop    eax
  41e678:	sub    ebp,DWORD PTR [edx]
  41e67a:	inc    ebp
  41e67b:	out    0xa3,al
  41e67d:	and    DWORD PTR [eax+0x2f],esi
  41e680:	lds    ebp,FWORD PTR [edx-0x4]
  41e683:	rcl    edi,0xd2
  41e686:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e687:	sub    BYTE PTR [edx+0x57222ab2],dl
  41e68d:	or     eax,0x865680ab
  41e692:	xchg   ebp,eax
  41e693:	(bad)  
  41e694:	int    0x15
  41e696:	pop    esi
  41e697:	pop    es
  41e698:	je     0x41e655
  41e69a:	ss mov bl,0x4d
  41e69d:	lods   eax,DWORD PTR ds:[esi]
  41e69e:	sti    
  41e69f:	iret   
  41e6a0:	je     0x41e6a2
  41e6a2:	or     DWORD PTR [esi+0x56],esp
  41e6a5:	xchg   ebp,eax
  41e6a6:	idiv   BYTE PTR [esi]
  41e6a8:	aas    
  41e6a9:	adc    DWORD PTR [esi+0x6d],eax
  41e6ac:	xor    eax,0x8400803e
  41e6b1:	sti    
  41e6b2:	mov    al,ds:0x2b57532
  41e6b7:	xchg   ebx,eax
  41e6b8:	es inc edx
  41e6ba:	jo     0x41e6a5
  41e6bc:	shl    ecx,0x61
  41e6bf:	loopne 0x41e6ce
  41e6c1:	sahf   
  41e6c2:	jle    0x41e6d2
  41e6c4:	xlat   BYTE PTR ds:[ebx]
  41e6c5:	xor    DWORD PTR [ecx-0x6128eaf3],eax
  41e6cb:	rol    DWORD PTR [eax],cl
  41e6cd:	fld    QWORD PTR ds:0xdac2b075
  41e6d3:	and    esp,DWORD PTR [eax+0x79]
  41e6d6:	cmp    BYTE PTR [esi-0x6bdd4d48],0x55
  41e6dd:	pop    esp
  41e6de:	pop    ecx
  41e6df:	or     DWORD PTR [edi+eiz*4+0x6dbc752d],ebp
  41e6e6:	scas   al,BYTE PTR es:[edi]
  41e6e7:	into   
  41e6e8:	jg     0x41e6e1
  41e6ea:	sti    
  41e6eb:	in     al,0xf4
  41e6ed:	push   ecx
  41e6ee:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e6ef:	push   edx
  41e6f0:	(bad)  
  41e6f1:	and    eax,0x5300dab0
  41e6f6:	xor    bh,dl
  41e6f8:	dec    esi
  41e6f9:	test   ebx,ebp
  41e6fb:	data16 scas al,BYTE PTR es:[edi]
  41e6fd:	rcr    BYTE PTR [ecx],1
  41e6ff:	rol    WORD PTR [ebx-0x43],1
  41e703:	retf   
  41e704:	or     bh,BYTE PTR [esp+edx*1]
  41e707:	mul    DWORD PTR ds:0x4192cbf5
  41e70d:	and    BYTE PTR [edi],bl
  41e70f:	ror    esi,1
  41e711:	ret    0x527c
  41e714:	mov    ch,dl
  41e716:	rol    DWORD PTR [edx],0x20
  41e719:	stc    
  41e71a:	mov    bh,0xdb
  41e71c:	jnp    0x41e787
  41e71e:	xor    al,BYTE PTR [edi+ebp*2+0x20]
  41e722:	sub    eax,0x6a8c37ea
  41e727:	mov    ch,0xd8
  41e729:	xchg   ebp,eax
  41e72a:	rcl    DWORD PTR [esi],cl
  41e72c:	das    
  41e72d:	add    eax,0xccc39803
  41e732:	pop    esp
  41e733:	mov    dl,0xb9
  41e735:	shr    DWORD PTR ds:0x48074347,0x69
  41e73c:	add    eax,DWORD PTR [ebx]
  41e73e:	mov    bl,bh
  41e740:	lods   al,BYTE PTR ds:[esi]
  41e741:	push   ss
  41e742:	jl     0x41e6ff
  41e744:	inc    ecx
  41e745:	or     dh,BYTE PTR [edx+edx*4+0xb]
  41e749:	jmp    0x41e6fa
  41e74b:	sub    BYTE PTR [edx],cl
  41e74d:	mov    DWORD PTR [eax+eiz*2+0x1c24256f],0xd8feb946
  41e758:	lar    eax,WORD PTR [ecx]
  41e75b:	push   edi
  41e75c:	xchg   ebp,eax
  41e75d:	aas    
  41e75e:	cwde   
  41e75f:	push   0xe
  41e761:	pusha  
  41e762:	xchg   esp,eax
  41e763:	popa   
  41e764:	enter  0xbd41,0x99
  41e768:	push   cs
  41e769:	mov    ds:0x665f6c30,al
  41e76e:	xchg   ebp,eax
  41e76f:	cmp    eax,0xeb9f707c
  41e774:	xchg   esi,eax
  41e775:	inc    esp
  41e776:	clc    
  41e777:	int    0x9e
  41e779:	mov    ebx,0x2a265b10
  41e77e:	or     eax,0x1110a42b
  41e783:	sub    dh,bl
  41e785:	aaa    
  41e786:	imul   esi,esp,0x38
  41e789:	jge    0x41e7ff
  41e78b:	retf   0x40f2
  41e78e:	or     BYTE PTR [esi+0x5422111e],dl
  41e794:	mov    eax,ds:0x72055dad
  41e799:	fwait
  41e79a:	out    0x74,al
  41e79c:	retf   0x2c7
  41e79f:	rol    BYTE PTR [edi-0x28f9246],0xbb
  41e7a6:	aas    
  41e7a7:	jmp    0x41e7af
  41e7a9:	ret    0x1167
  41e7ac:	jno    0x41e807
  41e7ae:	loopne 0x41e798
  41e7b0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e7b1:	xchg   edi,eax
  41e7b2:	leave  
  41e7b3:	mov    ah,0xf7
  41e7b5:	mov    edx,0x54560740
  41e7ba:	(bad)  
  41e7bb:	dec    edx
  41e7bc:	mov    gs,WORD PTR ds:0x95c278a2
  41e7c2:	cmp    ch,bh
  41e7c4:	jb     0x41e7dd
  41e7c6:	cmp    bl,BYTE PTR [edx]
  41e7c8:	loopne 0x41e788
  41e7ca:	push   esp
  41e7cb:	sar    DWORD PTR [ebp-0x4711e49a],0xce
  41e7d2:	jmp    0xdc608eac
  41e7d7:	shl    DWORD PTR ds:0x5a87be9,cl
  41e7dd:	add    ebx,edi
  41e7df:	sti    
  41e7e0:	xlat   BYTE PTR ds:[ebx]
  41e7e1:	into   
  41e7e2:	pop    ds
  41e7e3:	out    dx,eax
  41e7e4:	sbb    DWORD PTR [edx],edx
  41e7e6:	mov    bh,0x95
  41e7e8:	icebp  
  41e7e9:	scas   eax,DWORD PTR es:[edi]
  41e7ea:	xor    al,0x9b
  41e7ec:	dec    esi
  41e7ed:	add    BYTE PTR [edx+0x42],al
  41e7f0:	iret   
  41e7f1:	dec    esp
  41e7f2:	jmp    0x41e7dd
  41e7f4:	dec    edx
  41e7f5:	xchg   esi,eax
  41e7f6:	push   es
  41e7f7:	cmp    dl,0xc5
  41e7fa:	or     eax,0xaf4f8bbc
  41e7ff:	adc    dh,bh
  41e801:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e802:	ss dec edx
  41e804:	test   edi,edi
  41e806:	jns    0x41e811
  41e808:	mov    dl,BYTE PTR [ebx-0x5c]
  41e80b:	sbb    al,0xed
  41e80d:	(bad)  
  41e80e:	jecxz  0x41e7ca
  41e810:	lods   eax,DWORD PTR ds:[esi]
  41e811:	mov    WORD PTR [eax],?
  41e813:	mov    eax,0xbe2b26d9
  41e818:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e819:	pop    esi
  41e81a:	inc    esp
  41e81b:	sbb    eax,ecx
  41e81d:	add    DWORD PTR ds:[edi+0x42],edx
  41e821:	mov    gs,WORD PTR [ecx-0x57]
  41e824:	or     DWORD PTR ds:0xfdce67d8,esp
  41e82a:	pop    ds
  41e82b:	gs (bad) 
  41e82d:	push   ebx
  41e82e:	xor    eax,0x88ff3a79
  41e833:	adc    ebx,DWORD PTR [ebx-0x6be81755]
  41e839:	mov    ?,WORD PTR [ecx+0x71]
  41e83c:	scas   al,BYTE PTR es:[edi]
  41e83d:	lea    eax,[ebp-0x3a]
  41e840:	sbb    BYTE PTR [ebx+0x2f],cl
  41e843:	aad    0x2d
  41e845:	aam    0x7c
  41e847:	add    BYTE PTR [ecx-0x1e],dh
  41e84a:	pop    es
  41e84b:	fsubr  st,st(7)
  41e84d:	xor    eax,0xe468cd5f
  41e852:	pop    ds
  41e853:	ret    0xd502
  41e856:	in     al,0x2f
  41e858:	mov    esp,0xc66fa640
  41e85d:	inc    esi
  41e85e:	push   ds
  41e85f:	xchg   ebx,eax
  41e860:	int    0x58
  41e862:	dec    edi
  41e863:	test   DWORD PTR [edi+ebp*2+0x5a],esi
  41e867:	xor    eax,DWORD PTR [edx+0x7d]
  41e86a:	pop    ss
  41e86b:	and    al,0xdb
  41e86d:	xor    bl,BYTE PTR [edx-0x2d85d756]
  41e873:	or     al,0xfb
  41e875:	cmp    ebp,DWORD PTR [edx]
  41e877:	sub    edx,edi
  41e879:	mov    ch,0x5a
  41e87b:	push   es
  41e87c:	pusha  
  41e87d:	aam    0x76
  41e87f:	sub    eax,0xd6cd1ddf
  41e884:	push   edi
  41e885:	(bad)  
  41e886:	popa   
  41e887:	in     al,0x3b
  41e889:	and    DWORD PTR [edx+0x48],ebx
  41e88c:	and    dh,al
  41e88e:	add    ah,dl
  41e890:	xor    DWORD PTR [edx+edx*8-0xc185cab],esp
  41e897:	xor    al,0x5d
  41e899:	adc    al,0x26
  41e89b:	jmp    0xaca52511
  41e8a0:	mov    edi,ds
  41e8a2:	xchg   edi,eax
  41e8a3:	popa   
  41e8a4:	jge    0x41e91b
  41e8a6:	add    ch,ah
  41e8a8:	repnz and eax,eax
  41e8ab:	fsubp  st(7),st
  41e8ad:	std    
  41e8ae:	or     dl,BYTE PTR [edi-0x5d]
  41e8b1:	or     al,0xaa
  41e8b3:	retf   0x76b2
  41e8b6:	arpl   WORD PTR [ebp+edi*1-0x5ba69bda],bx
  41e8bd:	xchg   esi,eax
  41e8be:	int3   
  41e8bf:	or     esi,ebp
  41e8c1:	repnz shl dh,0x65
  41e8c5:	and    al,0x3e
  41e8c7:	popf   
  41e8c8:	jo     0xd4a9cbf7
  41e8ce:	in     eax,0x42
  41e8d0:	lock push es
  41e8d2:	push   edi
  41e8d3:	outs   dx,DWORD PTR ds:[esi]
  41e8d4:	js     0x41e87f
  41e8d6:	in     al,dx
  41e8d7:	cmp    DWORD PTR [esp+ebp*2-0x134c3d21],edi
  41e8de:	xchg   esi,eax
  41e8df:	sahf   
  41e8e0:	daa    
  41e8e1:	mov    esp,0x3ed83c4d
  41e8e6:	clc    
  41e8e7:	and    eax,0xa8750e4
  41e8ec:	stos   BYTE PTR es:[edi],al
  41e8ed:	inc    eax
  41e8ee:	xchg   ecx,eax
  41e8ef:	mov    esi,0x3129bf03
  41e8f4:	mov    bh,0x46
  41e8f6:	sub    al,0x2f
  41e8f8:	xor    BYTE PTR [edi-0x6f],dh
  41e8fb:	popa   
  41e8fc:	mov    eax,ds:0xa73ce08
  41e901:	inc    edx
  41e902:	cmp    eax,0x2b3f9894
  41e907:	es cmp esi,esp
  41e90a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e90b:	cmp    eax,0xdcd196c9
  41e911:	ror    ebx,cl
  41e913:	adc    DWORD PTR [eax-0x5c64a7a3],ebp
  41e919:	mov    bh,0xfd
  41e91b:	inc    edi
  41e91c:	sub    eax,0x3b6431db
  41e921:	cld    
  41e922:	add    ebp,0x51b51ac
  41e928:	scas   al,BYTE PTR es:[edi]
  41e929:	in     al,0xa2
  41e92b:	aaa    
  41e92c:	pop    ebx
  41e92d:	outs   dx,DWORD PTR ds:[esi]
  41e92e:	retf   0x3535
  41e931:	retf   0xe41a
  41e934:	repnz xlat BYTE PTR ds:[ebx]
  41e936:	shl    DWORD PTR [ecx+0x345b090d],0x9d
  41e93d:	jae    0x41e8f7
  41e93f:	ret    0xd0e
  41e942:	sti    
  41e943:	xchg   ebx,eax
  41e944:	dec    esi
  41e945:	lds    esp,FWORD PTR [edi+0x2b]
  41e948:	arpl   WORD PTR [ecx],di
  41e94a:	or     al,0xaf
  41e94c:	sbb    al,0xed
  41e94e:	daa    
  41e94f:	fld    DWORD PTR [edx-0x1a]
  41e952:	and    edi,DWORD PTR [edi+0x24]
  41e955:	mov    ebp,0x472c0f43
  41e95a:	retf   0xfb2b
  41e95d:	add    eax,0x2acad2eb
  41e962:	ret    0xdaed
  41e965:	fist   WORD PTR [eax-0x44]
  41e968:	and    ch,ah
  41e96a:	mul    DWORD PTR [ebx+0x1e4e8bf4]
  41e970:	ret    
  41e971:	sub    eax,0x24fb7b02
  41e976:	sub    dl,BYTE PTR [ebx-0x6e65e638]
  41e97c:	ret    
  41e97d:	inc    eax
  41e97e:	in     al,0x39
  41e980:	cs ja  0x41e907
  41e983:	mul    al
  41e985:	mov    edi,0xa6f40c2b
  41e98a:	sub    esp,eax
  41e98c:	fidivr WORD PTR [ecx+0x5]
  41e98f:	push   ds
  41e990:	lock pop edi
  41e992:	adc    al,0x79
  41e994:	adc    eax,0x713ecae7
  41e999:	sbb    DWORD PTR [ebp-0x28fe07f4],eax
  41e99f:	ret    0xbb77
  41e9a2:	mov    edx,0x81bc3b9a
  41e9a7:	loop   0x41e984
  41e9a9:	xor    DWORD PTR [edi+ebx*4],edi
  41e9ac:	cmp    dh,dh
  41e9ae:	lgs    esp,FWORD PTR [ecx+0x63]
  41e9b2:	dec    edx
  41e9b3:	sbb    dh,dh
  41e9b5:	retf   
  41e9b6:	adc    dh,BYTE PTR [eax-0x57fb22e3]
  41e9bc:	mov    edx,0x4396c400
  41e9c1:	add    eax,0xaa3c495d
  41e9c6:	pop    esi
  41e9c7:	clc    
  41e9c8:	xchg   ecx,eax
  41e9c9:	pop    esi
  41e9ca:	pop    edi
  41e9cb:	pop    esi
  41e9cc:	cmp    bl,bh
  41e9ce:	inc    ebx
  41e9cf:	adc    al,BYTE PTR [eax]
  41e9d1:	adc    DWORD PTR [esi+0x3a47f07b],edx
  41e9d7:	fdivr  QWORD PTR [eax]
  41e9d9:	aas    
  41e9da:	jecxz  0x41e974
  41e9dc:	es dec esi
  41e9de:	into   
  41e9df:	mov    bl,0xfe
  41e9e1:	push   es
  41e9e2:	or     al,0x5b
  41e9e4:	jnp    0x41ea01
  41e9e6:	jmp    0x41ea1f
  41e9e8:	push   ds
  41e9e9:	ret    
  41e9ea:	xor    al,0x2a
  41e9ec:	jnp    0x41e9be
  41e9ee:	jp     0x41e9ac
  41e9f0:	loope  0x41ea52
  41e9f2:	adc    al,0x1c
  41e9f4:	mov    ds:0x42d9e736,al
  41e9f9:	inc    edi
  41e9fa:	jb     0x41e9e7
  41e9fc:	and    BYTE PTR [esi-0x2e],dh
  41e9ff:	sbb    al,0xa6
  41ea01:	cwde   
  41ea02:	xchg   esp,eax
  41ea03:	dec    BYTE PTR [ebp+0x4af61ee7]
  41ea09:	popa   
  41ea0a:	std    
  41ea0b:	fadd   QWORD PTR [esi+0x3b504622]
  41ea11:	aas    
  41ea12:	gs cdq 
  41ea14:	add    eax,0x6c113963
  41ea19:	iret   
  41ea1a:	lds    edi,FWORD PTR [edx-0x61]
  41ea1d:	dec    eax
  41ea1e:	call   0xcba8:0xe0b08292
  41ea25:	xor    eax,0xbd4c40b1
  41ea2a:	loope  0x41e9f9
  41ea2c:	aas    
  41ea2d:	les    edx,FWORD PTR [ebx+0x3919e12e]
  41ea33:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ea34:	mov    esp,0xb945e95
  41ea39:	aas    
  41ea3a:	iret   
  41ea3b:	jle    0x41eaad
  41ea3d:	int3   
  41ea3e:	pusha  
  41ea3f:	lahf   
  41ea40:	dec    esp
  41ea41:	loopne 0x41ea51
  41ea43:	sub    cl,BYTE PTR [esi+ebp*4+0x15]
  41ea47:	jge    0x41ea31
  41ea49:	jl     0x41e9d1
  41ea4b:	push   ss
  41ea4c:	inc    eax
  41ea4d:	inc    BYTE PTR [ecx]
  41ea4f:	or     esp,0x72
  41ea52:	ficomp WORD PTR [eax]
  41ea54:	pop    edx
  41ea55:	inc    ecx
  41ea57:	sub    BYTE PTR [edx+0x53],0x3d
  41ea5b:	mov    ebp,0x457a3eb0
  41ea60:	jnp    0x41eac3
  41ea62:	xchg   edx,eax
  41ea63:	iret   
  41ea64:	inc    edx
  41ea65:	clc    
  41ea66:	fisttp WORD PTR [eax]
  41ea68:	adc    DWORD PTR [ecx],0x3f7df671
  41ea6e:	in     al,dx
  41ea6f:	or     eax,0x45ca912a
  41ea74:	ins    BYTE PTR es:[edi],dx
  41ea75:	jge    0x41ea1e
  41ea77:	dec    esp
  41ea78:	loope  0x41ea7f
  41ea7a:	in     al,dx
  41ea7b:	nop
  41ea7c:	shl    bl,cl
  41ea7e:	push   0x69
  41ea80:	xchg   dh,cl
  41ea82:	(bad)  
  41ea84:	das    
  41ea85:	push   ebp
  41ea86:	mov    edx,0xc1706c87
  41ea8b:	mov    fs,edx
  41ea8d:	je     0x41eac9
  41ea8f:	data16 into 
  41ea91:	mov    edx,0x17854a66
  41ea96:	sbb    BYTE PTR [edi+0x32],al
  41ea99:	pop    esi
  41ea9a:	mov    al,0x22
  41ea9c:	(bad)  
  41ea9d:	push   ebx
  41ea9e:	cmp    al,0x8c
  41eaa0:	push   es
  41eaa1:	pop    eax
  41eaa2:	seta   BYTE PTR [ebp+0x740ba8cd]
  41eaa9:	fwait
  41eaaa:	xlat   BYTE PTR ds:[ebx]
  41eaab:	xchg   esi,eax
  41eaac:	(bad)  
  41eaad:	push   eax
  41eaae:	jno    0x41ea33
  41eab0:	push   edx
  41eab1:	xlat   BYTE PTR ds:[ebx]
  41eab2:	out    0xe8,al
  41eab4:	push   ds
  41eab5:	mov    cl,0xb3
  41eab7:	rol    BYTE PTR [edx+0x27],0xbf
  41eabb:	xlat   BYTE PTR ds:[ebx]
  41eabc:	imul   esp,esp,0xffffffe5
  41eabf:	mov    ah,0xc6
  41eac1:	ins    DWORD PTR es:[edi],dx
  41eac2:	mov    ds:0xb4d1d16f,al
  41eac7:	mov    esp,0x53405a5b
  41eacc:	not    BYTE PTR [eax]
  41eace:	lahf   
  41eacf:	out    dx,al
  41ead0:	and    al,BYTE PTR ds:0xfda4d1b
  41ead6:	cli    
  41ead7:	test   al,0x7b
  41ead9:	jge    0x41eb1d
  41eadb:	out    0x3,eax
  41eadd:	mov    bh,0x32
  41eadf:	push   ds
  41eae0:	lea    edx,ds:0x5cbe6977
  41eae6:	inc    ecx
  41eae7:	inc    ebp
  41eae8:	in     eax,0xdc
  41eaea:	lock call 0xa240:0x1bfe251b
  41eaf2:	ins    DWORD PTR es:[edi],dx
  41eaf3:	stos   BYTE PTR es:[edi],al
  41eaf4:	inc    esp
  41eaf5:	add    DWORD PTR [edx-0x64930b3f],esp
  41eafb:	iret   
  41eafc:	sub    BYTE PTR [ebx+0x62],dl
  41eaff:	and    BYTE PTR [edx-0x54],dh
  41eb02:	fs aas 
  41eb04:	xor    ch,bh
  41eb06:	cmp    al,0x98
  41eb08:	mov    BYTE PTR [eax-0x79],al
  41eb0b:	ds cs inc edi
  41eb0e:	retf   0xf04
  41eb11:	stos   BYTE PTR es:[edi],al
  41eb12:	and    al,0x47
  41eb14:	xchg   ebx,eax
  41eb15:	vsubpd ymm1,ymm1,YMMWORD PTR [edx+0x1c]
  41eb1a:	loopne 0x41eb5e
  41eb1c:	stc    
  41eb1d:	loopne 0x41ead5
  41eb1f:	sub    DWORD PTR [esi],edx
  41eb21:	fisub  WORD PTR [ebx-0x7ffc82a7]
  41eb27:	in     al,0xd9
  41eb29:	mov    ds:0xfa3c08db,al
  41eb2e:	mov    al,ds:0x4800bf5b
  41eb33:	pop    eax
  41eb34:	daa    
  41eb35:	mov    al,ds:0x7a726bac
  41eb3a:	jle    0x41eb8f
  41eb3c:	mov    dh,0x84
  41eb3e:	dec    ecx
  41eb3f:	test   al,0x8b
  41eb41:	cmc    
  41eb42:	aaa    
  41eb43:	mov    eax,ds:0xa30d5b1b
  41eb48:	jl     0x41ebc2
  41eb4a:	pop    edx
  41eb4b:	scas   al,BYTE PTR es:[edi]
  41eb4c:	mov    dl,0xf0
  41eb4e:	mov    al,dl
  41eb50:	push   cs
  41eb51:	ins    DWORD PTR es:[edi],dx
  41eb52:	lds    esp,FWORD PTR [edi-0xc2235c6]
  41eb58:	xchg   edi,eax
  41eb59:	xor    BYTE PTR [esi+esi*4-0x11],ah
  41eb5d:	idiv   ecx
  41eb5f:	add    BYTE PTR [eax+0x6f1f2e6d],bl
  41eb65:	fnstsw WORD PTR [ebx-0x6c]
  41eb68:	lds    edx,FWORD PTR [esi+0x35]
  41eb6b:	leave  
  41eb6c:	test   eax,0x16b8de01
  41eb71:	mov    ebx,0x96dd2145
  41eb76:	jo     0x41eba7
  41eb78:	mov    dh,0x53
  41eb7a:	cmp    edi,ebp
  41eb7c:	jl     0x41eb07
  41eb7e:	xchg   BYTE PTR [esi-0x5d],al
  41eb81:	es inc esp
  41eb83:	push   esi
  41eb84:	sub    bl,BYTE PTR [edx-0x28]
  41eb87:	retf   
  41eb88:	popa   
  41eb89:	inc    DWORD PTR [edx]
  41eb8b:	in     eax,0x18
  41eb8d:	daa    
  41eb8e:	push   0x3e0c6904
  41eb93:	sbb    ch,BYTE PTR [ecx+0xe]
  41eb96:	enter  0x8ca4,0xf
  41eb9a:	gs sub al,0x29
  41eb9d:	sbb    cl,BYTE PTR [eax+ecx*4-0x21]
  41eba1:	loop   0x41eb94
  41eba3:	repnz add eax,0x5bc92809
  41eba9:	inc    esi
  41ebaa:	arpl   bp,bp
  41ebac:	jmp    0x6629:0xa9bb362f
  41ebb3:	xor    ebp,edi
  41ebb5:	sar    BYTE PTR [ebx+0x55c43bcd],1
  41ebbb:	add    eax,0xf0053ca1
  41ebc0:	sbb    cl,bl
  41ebc2:	xchg   BYTE PTR [ebx],dh
  41ebc4:	out    dx,eax
  41ebc5:	sub    esp,DWORD PTR [eax+0x70]
  41ebc8:	int3   
  41ebc9:	mov    DWORD PTR [ecx+ecx*2-0x73],ebx
  41ebcd:	sbb    al,0x2c
  41ebcf:	xchg   edi,eax
  41ebd0:	jns    0x41eb75
  41ebd2:	inc    edi
  41ebd3:	test   DWORD PTR [esi-0x33],edi
  41ebd6:	push   esp
  41ebd7:	jo     0x41ec2b
  41ebd9:	cld    
  41ebda:	mov    fs,WORD PTR [esi-0x6]
  41ebdd:	stos   DWORD PTR es:[edi],eax
  41ebde:	lds    edx,FWORD PTR [eax]
  41ebe0:	xchg   BYTE PTR [ebp-0x81f5722],ch
  41ebe6:	jne    0x41ebbc
  41ebe8:	and    ecx,DWORD PTR [edx-0x105ac684]
  41ebee:	xor    ebp,DWORD PTR [esi-0x4aac272f]
  41ebf4:	sub    DWORD PTR [eax+0x37],eax
  41ebf7:	mov    dh,0x55
  41ebf9:	test   al,0x2
  41ebfb:	sub    bl,BYTE PTR [esp+ebx*2]
  41ebfe:	and    DWORD PTR [esi-0x703fa3a4],ebp
  41ec04:	sub    dh,BYTE PTR [ecx+0x60]
  41ec07:	ret    
  41ec08:	cs or  al,0xd6
  41ec0b:	(bad)  
  41ec0c:	push   esp
  41ec0d:	out    0xd3,al
  41ec0f:	dec    edx
  41ec10:	out    0xca,al
  41ec12:	in     al,0x1c
  41ec14:	fwait
  41ec15:	cld    
  41ec16:	or     BYTE PTR [eax],bh
  41ec18:	jnp    0x41ec80
  41ec1a:	ret    0xc0b4
  41ec1d:	xor    esp,edx
  41ec1f:	pop    esi
  41ec20:	out    0x95,al
  41ec22:	jb     0x41ec05
  41ec24:	(bad)  
  41ec25:	cmp    bh,BYTE PTR [ebp-0x639ed52c]
  41ec2b:	fwait
  41ec2c:	xlat   BYTE PTR ds:[ebx]
  41ec2d:	mov    cs,WORD PTR [esi+0x8b11089]
  41ec33:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ec34:	sub    eax,0x2d1e3a0d
  41ec39:	(bad)  
  41ec3a:	cwde   
  41ec3b:	fwait
  41ec3c:	and    esp,DWORD PTR [esi-0x32]
  41ec3f:	idiv   DWORD PTR [esi-0x5c]
  41ec42:	xor    BYTE PTR [eax],0xb9
  41ec45:	jno    0x41ecbb
  41ec47:	ret    
  41ec48:	cmp    BYTE PTR [esi],cl
  41ec4a:	aas    
  41ec4b:	mov    esp,0xd387093a
  41ec50:	dec    ebx
  41ec51:	into   
  41ec52:	iret   
  41ec53:	mov    DWORD PTR [ecx-0x6b],esp
  41ec56:	ret    
  41ec57:	mov    eax,0x64024291
  41ec5c:	pop    es
  41ec5d:	frstor [edx-0x53]
  41ec60:	ror    DWORD PTR [eax-0x20],1
  41ec63:	sbb    al,0x66
  41ec65:	adc    al,0x49
  41ec67:	add    al,0xbe
  41ec69:	loop   0x41eccd
  41ec6b:	cmovbe eax,DWORD PTR [eax*4+0x513daf03]
  41ec73:	in     eax,dx
  41ec74:	inc    ecx
  41ec75:	out    0x3c,al
  41ec77:	jecxz  0x41ec4c
  41ec79:	mov    eax,0x7d21d0ba
  41ec7e:	sub    BYTE PTR cs:[esi+0x41b2f050],ch
  41ec85:	je     0x41ec21
  41ec87:	in     al,0x9e
  41ec89:	cmp    eax,0x427b8226
  41ec8e:	push   ebx
  41ec8f:	sbb    al,al
  41ec91:	xor    DWORD PTR [esi],edx
  41ec93:	les    edx,FWORD PTR [edi]
  41ec95:	mov    ebx,0xafcf66f6
  41ec9a:	sar    BYTE PTR [eax],1
  41ec9c:	stos   DWORD PTR es:[edi],eax
  41ec9d:	aas    
  41ec9e:	mov    bh,0xcb
  41eca0:	popa   
  41eca1:	mov    al,ds:0xdd7fa583
  41eca6:	sub    bl,BYTE PTR [esi]
  41eca8:	xchg   edi,eax
  41eca9:	or     eax,0x4bd3b196
  41ecae:	jecxz  0x41ecb4
  41ecb0:	ja     0x41ec66
  41ecb2:	shr    BYTE PTR [edx+0x13],cl
  41ecb5:	mov    eax,ds:0xf84b4162
  41ecba:	imul   cl
  41ecbc:	stc    
  41ecbd:	mov    eax,0xfbe4bb44
  41ecc2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ecc3:	or     BYTE PTR [edx],0x80
  41ecc6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ecc7:	ret    
  41ecc8:	push   ds
  41ecc9:	xchg   esp,eax
  41ecca:	push   esi
  41eccb:	jmp    0x41ec73
  41eccd:	stos   DWORD PTR es:[edi],eax
  41ecce:	inc    ecx
  41eccf:	ret    
  41ecd0:	es add esp,edx
  41ecd3:	push   ecx
  41ecd4:	dec    ebp
  41ecd5:	int3   
  41ecd6:	fimul  DWORD PTR [esi-0x30]
  41ecd9:	xor    DWORD PTR [ebx],edi
  41ecdb:	adc    dl,BYTE PTR [eax+eax*4]
  41ecde:	mov    esi,0x5feb39e8
  41ece3:	jnp    0x41ed1b
  41ece5:	mov    ch,0xf2
  41ece7:	leave  
  41ece8:	mov    eax,0x5c38be86
  41eced:	xchg   edi,eax
  41ecee:	jo     0x41ecc2
  41ecf0:	outs   dx,DWORD PTR ds:[esi]
  41ecf1:	fucom  st(6)
  41ecf3:	ja     0x41ed54
  41ecf5:	fadd   QWORD PTR [edx+0x44]
  41ecf8:	mov    cl,0x61
  41ecfa:	mov    dh,0x47
  41ecfc:	mov    DWORD PTR [edi],ebx
  41ecfe:	cdq    
  41ecff:	mov    ds:0x70e47812,eax
  41ed04:	mul    ebx
  41ed06:	mov    es,WORD PTR [ebp-0x45]
  41ed09:	pop    ebp
  41ed0a:	inc    ecx
  41ed0b:	shl    DWORD PTR [ecx+ebp*8-0x1fbdd566],1
  41ed12:	mov    WORD PTR [edi+0x6f],es
  41ed15:	loopne 0x41ed69
  41ed17:	mov    ds:0x277aca6b,eax
  41ed1c:	jns    0x41ed81
  41ed1e:	jne    0x41ed1b
  41ed20:	push   0x399d9ebb
  41ed25:	retf   
  41ed26:	outs   dx,BYTE PTR ds:[esi]
  41ed27:	loopne 0x41ed79
  41ed29:	cli    
  41ed2a:	and    al,0xdf
  41ed2c:	sbb    cl,dl
  41ed2e:	iret   
  41ed2f:	adc    al,0x2c
  41ed31:	ins    DWORD PTR es:[edi],dx
  41ed32:	mov    edx,0xdb495792
  41ed37:	push   esi
  41ed38:	xor    eax,DWORD PTR [edx]
  41ed3a:	cli    
  41ed3b:	mov    ah,dl
  41ed3d:	(bad)  
  41ed3e:	fsub   st(4),st
  41ed40:	sbb    eax,0xf79f2b9b
  41ed45:	fcmovnu st,st(6)
  41ed47:	pop    ebx
  41ed48:	jge    0x41ecca
  41ed4a:	sbb    DWORD PTR [eax],0xffffffba
  41ed4d:	out    dx,eax
  41ed4e:	dec    ebx
  41ed4f:	fadd   DWORD PTR [ecx-0x50db75a1]
  41ed55:	sub    ebp,edx
  41ed57:	or     BYTE PTR [ebx+0x27492f2a],bl
  41ed5d:	cmp    ebp,ebx
  41ed5f:	and    bh,BYTE PTR [ebx+0xf955212]
  41ed65:	les    eax,FWORD PTR [eax+ecx*8-0x13]
  41ed69:	or     al,0x50
  41ed6b:	mov    ?,esi
  41ed6d:	mov    BYTE PTR [ebx-0x20],dh
  41ed70:	jp     0x41ed38
  41ed72:	cmp    BYTE PTR [edi+ebx*4],al
  41ed75:	lea    edi,[ebp-0x39]
  41ed78:	xchg   BYTE PTR [edx+ebx*1],bl
  41ed7b:	scas   al,BYTE PTR es:[edi]
  41ed7c:	push   ecx
  41ed7d:	stos   DWORD PTR es:[edi],eax
  41ed7e:	pushf  
  41ed7f:	inc    ebx
  41ed80:	daa    
  41ed81:	xchg   esi,eax
  41ed82:	and    esi,DWORD PTR [edx-0x4997bac8]
  41ed88:	or     DWORD PTR [edi+0x60032a5f],esp
  41ed8e:	aaa    
  41ed8f:	cmp    BYTE PTR [ebp-0x3909ec05],ch
  41ed95:	push   eax
  41ed96:	dec    esi
  41ed97:	jno    0x41edee
  41ed99:	(bad)  
  41ed9a:	cmp    eax,0xb2ca22e6
  41ed9f:	xchg   esp,eax
  41eda0:	data16 xlat BYTE PTR ds:[ebx]
  41eda2:	sbb    eax,0x9420131e
  41eda7:	lds    esp,FWORD PTR [ebp-0x72]
  41edaa:	jl     0x41edeb
  41edac:	int3   
  41edad:	popf   
  41edae:	sahf   
  41edaf:	in     al,dx
  41edb0:	es scas eax,DWORD PTR es:[edi]
  41edb2:	cmp    esp,esp
  41edb4:	and    ah,BYTE PTR [edx]
  41edb6:	ret    0x92d3
  41edb9:	push   ds
  41edba:	into   
  41edbb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41edbc:	js     0x41eda4
  41edbe:	rcl    BYTE PTR [esi+0x7ac5fc17],1
  41edc4:	adc    cl,BYTE PTR [ecx]
  41edc6:	xor    eax,0x9fe341c
  41edcb:	adc    dh,ah
  41edcd:	mov    al,0xa2
  41edcf:	std    
  41edd0:	pop    ecx
  41edd1:	jb     0x41edb2
  41edd3:	cwde   
  41edd4:	in     eax,dx
  41edd5:	popf   
  41edd6:	jl     0x41ed96
  41edd8:	xchg   ebp,eax
  41edd9:	retf   0x2fc9
  41eddc:	jecxz  0x41edce
  41edde:	xchg   BYTE PTR [edi],al
  41ede0:	sbb    ecx,DWORD PTR [esi+0x75059233]
  41ede6:	xor    al,0x83
  41ede8:	popf   
  41ede9:	cmp    ebp,DWORD PTR [edi+eiz*1-0x644b49f5]
  41edf0:	xchg   esi,eax
  41edf1:	jb     0x41edd7
  41edf3:	mov    bl,bh
  41edf5:	xchg   ecx,eax
  41edf6:	adc    ch,ch
  41edf8:	jp     0x41ee6e
  41edfa:	sahf   
  41edfb:	int    0xac
  41edfd:	adc    eax,edi
  41edff:	pop    edx
  41ee00:	or     BYTE PTR [eax+0x796995ce],0xd4
  41ee07:	aas    
  41ee08:	sbb    al,BYTE PTR [ecx-0x12]
  41ee0b:	xor    al,0x67
  41ee0d:	cmp    bl,ah
  41ee0f:	mov    ah,0xe5
  41ee11:	imul   eax,ecx,0xffffffba
  41ee14:	pop    ebx
  41ee15:	adc    eax,0xac2e64dc
  41ee1a:	mov    cl,0x56
  41ee1c:	sub    eax,0x4b6e825a
  41ee21:	in     eax,0xe1
  41ee23:	iret   
  41ee24:	aad    0xe
  41ee26:	imul   ax,bx,0x14
  41ee2a:	(bad)  
  41ee2b:	pop    ebx
  41ee2c:	sbb    eax,0xb49b719a
  41ee31:	add    esp,DWORD PTR [esi-0x6]
  41ee34:	jge    0x41edca
  41ee36:	and    DWORD PTR [eax],ecx
  41ee38:	inc    edi
  41ee39:	stos   DWORD PTR es:[edi],eax
  41ee3a:	rcl    DWORD PTR [ebp-0x5bf30556],0x75
  41ee41:	das    
  41ee42:	adc    bh,ch
  41ee44:	xor    al,0x15
  41ee46:	jb     0x41ee8c
  41ee48:	out    0x5c,al
  41ee4a:	adc    edx,DWORD PTR [ecx]
  41ee4c:	enter  0x6688,0x69
  41ee50:	retf   
  41ee51:	xchg   ebx,eax
  41ee52:	mov    ebx,0x7a933831
  41ee57:	dec    ebp
  41ee58:	jns    0x41ee2b
  41ee5a:	push   eax
  41ee5b:	xor    cl,cl
  41ee5d:	pop    edx
  41ee5e:	add    BYTE PTR [edi],dh
  41ee60:	cwde   
  41ee61:	les    edx,FWORD PTR [esi+0x70e9b69c]
  41ee67:	mov    BYTE PTR [ecx+0x25],dh
  41ee6a:	test   BYTE PTR [ebp-0x49],dl
  41ee6d:	addr16 in eax,dx
  41ee6f:	adc    al,BYTE PTR [edx]
  41ee71:	jecxz  0x41eeb4
  41ee73:	scas   al,BYTE PTR es:[edi]
  41ee74:	dec    ecx
  41ee75:	mov    eax,ds:0xd614ac55
  41ee7a:	push   eax
  41ee7b:	repnz add al,0xe4
  41ee7e:	lds    eax,FWORD PTR [esi]
  41ee80:	aam    0xef
  41ee82:	scas   al,BYTE PTR es:[edi]
  41ee83:	jne    0x41ee63
  41ee85:	pushf  
  41ee86:	cld    
  41ee87:	push   es
  41ee88:	hlt    
  41ee89:	pop    ds
  41ee8a:	ja     0x41eea8
  41ee8c:	pop    es
  41ee8d:	add    eax,DWORD PTR [ebx+0x21]
  41ee90:	test   al,0x78
  41ee92:	dec    ecx
  41ee93:	sbb    al,0xb
  41ee95:	lods   al,BYTE PTR ds:[esi]
  41ee96:	jne    0x41eea5
  41ee98:	push   edi
  41ee99:	mov    edx,0xdb9977c5
  41ee9e:	hlt    
  41ee9f:	(bad)  
  41eea1:	push   edi
  41eea2:	xor    dl,BYTE PTR [edx+edi*1+0x6739db37]
  41eea9:	cmp    ch,BYTE PTR [eax+0x4dbf5dee]
  41eeaf:	inc    ebp
  41eeb0:	xchg   ebp,eax
  41eeb1:	repz mov al,0x3d
  41eeb4:	or     al,0x85
  41eeb6:	sub    esp,DWORD PTR [edx]
  41eeb8:	inc    edi
  41eeb9:	xor    al,0x74
  41eebb:	fldpi  
  41eebd:	int    0x73
  41eebf:	leave  
  41eec0:	jmp    0xdf1f:0xf5374f98
  41eec7:	stos   DWORD PTR es:[edi],eax
  41eec8:	out    0xff,al
  41eeca:	mov    ah,0xe3
  41eecc:	jle    0x41ee68
  41eece:	scas   al,BYTE PTR es:[edi]
  41eecf:	adc    ch,bh
  41eed1:	mov    edx,0x4b9e5f7c
  41eed6:	or     cl,bh
  41eed8:	dec    eax
  41eed9:	jge    0x41ee74
  41eedb:	scas   eax,DWORD PTR es:[edi]
  41eedc:	call   0xb445717d
  41eee1:	imul   ebx,ebp,0x13117f76
  41eee7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41eee8:	dec    esp
  41eee9:	jmp    0x41ef36
  41eeeb:	scas   eax,DWORD PTR es:[edi]
  41eeec:	retf   
  41eeed:	in     eax,dx
  41eeee:	inc    ebp
  41eeef:	xchg   esi,eax
  41eef0:	and    BYTE PTR ds:0x5bbcc88b,al
  41eef6:	es fdecstp 
  41eef9:	mov    eax,0xfe8334dc
  41eefe:	sub    al,0xfb
  41ef00:	ret    0x85db
  41ef03:	sub    DWORD PTR [edx-0x20],edx
  41ef06:	adc    dl,0x4e
  41ef09:	xchg   edi,eax
  41ef0a:	sbb    DWORD PTR [esp+ecx*2+0x42d15cbf],0x4b
  41ef12:	and    DWORD PTR [ebx],0x2a
  41ef15:	jp     0x41eeb1
  41ef17:	mov    esi,DWORD PTR [edx+0x56790a44]
  41ef1d:	pop    ds
  41ef1e:	fisttp WORD PTR ds:0x47044a7b
  41ef24:	das    
  41ef25:	dec    ecx
  41ef26:	adc    eax,0xf3e34250
  41ef2b:	sub    esp,edi
  41ef2d:	xchg   DWORD PTR [edx+0x14],ebx
  41ef30:	mov    dl,0x32
  41ef32:	adc    esp,DWORD PTR [edi+0x35ebbac0]
  41ef38:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ef39:	rol    BYTE PTR [edi+0x4017b8c],0xf4
  41ef40:	and    bh,BYTE PTR [eax+0x18]
  41ef43:	(bad)
  41ef46:	hlt    
  41ef47:	loopne 0x41efba
  41ef49:	inc    ebp
  41ef4a:	loope  0x41ef27
  41ef4c:	in     al,0x63
  41ef4e:	mov    edx,0x2a6b1bcd
  41ef53:	add    DWORD PTR [ebp+0x3e6d3ca0],edi
  41ef59:	jecxz  0x41eefa
  41ef5b:	cmp    BYTE PTR [esp+ebp*8],0x6f
  41ef5f:	enter  0x394,0xd5
  41ef63:	dec    edx
  41ef64:	push   cs
  41ef65:	push   0x968ed0e9
  41ef6a:	cmp    eax,0xb76364ca
  41ef6f:	push   ebx
  41ef70:	fldcw  WORD PTR [ecx]
  41ef72:	lahf   
  41ef73:	xchg   ebx,eax
  41ef74:	fistp  DWORD PTR [ecx+ebx*1+0x1a]
  41ef78:	pop    esi
  41ef79:	sub    bl,BYTE PTR [edx]
  41ef7b:	xchg   ebp,eax
  41ef7c:	mov    bl,0xad
  41ef7e:	ret    
  41ef7f:	(bad)  
  41ef80:	sti    
  41ef81:	sti    
  41ef82:	xchg   ebx,eax
  41ef83:	mov    esi,0x70f6a9ad
  41ef88:	shr    DWORD PTR [ebp-0x4db4dc7e],1
  41ef8e:	es loope 0x41ef4e
  41ef91:	stc    
  41ef92:	sbb    DWORD PTR [ecx],eax
  41ef94:	push   ebx
  41ef95:	jo     0x41ef95
  41ef97:	jb     0x41ef41
  41ef99:	(bad)  
  41ef9a:	retf   0x7f69
  41ef9d:	scas   al,BYTE PTR es:[edi]
  41ef9e:	ret    
  41ef9f:	loope  0x41ef99
  41efa1:	popf   
  41efa2:	mov    WORD PTR [edx+0x33ea388c],?
  41efa8:	inc    DWORD PTR [ebp-0x560d9e5c]
  41efae:	jecxz  0x41ef5e
  41efb0:	mov    al,0x43
  41efb2:	fild   DWORD PTR [esi-0x7e]
  41efb5:	lock mov eax,ds:0xffa9c013
  41efbb:	mov    ebx,0x45b94e07
  41efc0:	popf   
  41efc1:	in     eax,dx
  41efc2:	daa    
  41efc3:	pop    ss
  41efc4:	pop    edx
  41efc5:	test   bl,ch
  41efc7:	and    ebx,DWORD PTR [edx-0x72]
  41efca:	bound  edx,QWORD PTR [eax-0x50d72d24]
  41efd0:	cmp    eax,DWORD PTR [ecx-0x39]
  41efd3:	add    DWORD PTR [edx],0xf1f51ee4
  41efd9:	add    bl,BYTE PTR [eax+0x349e7ac6]
  41efdf:	loop   0x41ef70
  41efe1:	or     bh,dl
  41efe3:	mov    DWORD PTR [ebx+edi*4+0x32],ecx
  41efe7:	setno  bl
  41efea:	pushf  
  41efeb:	jmp    0x3bbb:0x622aa9b5
  41eff2:	inc    ebp
  41eff3:	mov    dh,0x21
  41eff5:	call   0xf0410977
  41effa:	or     eax,0x524efd79
  41efff:	aad    0xd0
  41f001:	les    ebx,FWORD PTR [edx*8+0x3f8abaaa]
  41f008:	push   esi
  41f009:	shl    BYTE PTR [eax],0x2e
  41f00c:	xchg   ecx,eax
  41f00d:	fmul   QWORD PTR [esi+ebp*8+0x2aa17def]
  41f014:	pop    ecx
  41f015:	xchg   esp,eax
  41f016:	scas   al,BYTE PTR es:[edi]
  41f017:	loop   0x41efa4
  41f019:	jmp    0x927c:0xdad8bb35
  41f020:	sbb    BYTE PTR [ecx+0x4d7a3be9],ch
  41f026:	add    esi,ecx
  41f028:	mov    WORD PTR [ecx+0x427ff71f],ds
  41f02e:	or     edx,DWORD PTR [ecx-0x525f6a9c]
  41f034:	pusha  
  41f035:	jo     0x41efd2
  41f037:	neg    BYTE PTR [ecx]
  41f039:	test   eax,0xcd109d32
  41f03e:	adc    BYTE PTR [ebx+0x3125267c],bl
  41f044:	add    al,0xc6
  41f046:	sub    BYTE PTR [esi+0x31c1cf2a],ah
  41f04c:	xchg   DWORD PTR [edi-0x62b98342],edi
  41f052:	inc    eax
  41f053:	cld    
  41f054:	arpl   WORD PTR [esi-0x7c],bx
  41f057:	push   0x38
  41f059:	cmp    eax,0x692838d3
  41f05e:	adc    BYTE PTR [eax-0x7],0xf
  41f062:	fsubr  QWORD PTR [ebx]
  41f064:	mov    ch,0xbb
  41f066:	repnz rol DWORD PTR [esi+eiz*1+0x18],cl
  41f06b:	data16 fcomp QWORD PTR [esi]
  41f06e:	and    bh,BYTE PTR [eax-0x1bd61891]
  41f074:	jecxz  0x41f003
  41f076:	call   0x5e4b:0x120964a1
  41f07d:	sub    al,0x39
  41f07f:	nop
  41f080:	lds    esi,FWORD PTR [ebx]
  41f082:	pop    esi
  41f083:	pop    edi
  41f084:	add    DWORD PTR [ebx-0x33],edi
  41f087:	mov    WORD PTR [esi],es
  41f089:	and    edi,DWORD PTR [edx-0x54]
  41f08c:	call   0x5cc1:0x6917b43d
  41f093:	push   ebx
  41f094:	and    eax,DWORD PTR [esi+eiz*1]
  41f097:	jge    0x41f0c8
  41f099:	cld    
  41f09a:	mov    ebp,0xc151a6f2
  41f09f:	(bad)  
  41f0a0:	and    eax,0x10f1b2e8
  41f0a5:	inc    ecx
  41f0a6:	fcomip st,st(2)
  41f0a8:	hlt    
  41f0a9:	xchg   DWORD PTR ds:0x2dbe7709,ebx
  41f0af:	jb     0x41f0ea
  41f0b1:	jae    0x41f04a
  41f0b3:	das    
  41f0b4:	xor    eax,0xe7b4ef0a
  41f0b9:	and    ah,BYTE PTR [edx+eax*1-0x538a9165]
  41f0c0:	pop    eax
  41f0c1:	mov    ch,0xf2
  41f0c3:	fs dec esi
  41f0c5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f0c6:	add    ebx,DWORD PTR [esi+0x1ce46592]
  41f0cc:	fdivr  QWORD PTR [eax+0x341c44e1]
  41f0d2:	clc    
  41f0d3:	xor    eax,0x1a2e2506
  41f0d8:	xchg   edx,eax
  41f0d9:	rcl    ecx,1
  41f0db:	adc    bl,BYTE PTR [edx]
  41f0dd:	ret    
  41f0de:	dec    BYTE PTR [esi+0x6a]
  41f0e1:	cmp    BYTE PTR [eax+0x2e],0xf8
  41f0e5:	mov    eax,0xdd1bc64a
  41f0ea:	cli    
  41f0eb:	jnp    0x41f151
  41f0ed:	ror    DWORD PTR [esi],cl
  41f0ef:	test   al,0xd1
  41f0f1:	aad    0xf1
  41f0f3:	xchg   edi,eax
  41f0f4:	mov    ebx,0xbcabf483
  41f0f9:	jo     0x41f093
  41f0fb:	dec    edx
  41f0fc:	test   BYTE PTR [esp+edi*2],ah
  41f0ff:	lods   al,BYTE PTR ds:[esi]
  41f100:	test   bl,ah
  41f102:	adc    eax,0x88c0fd3
  41f107:	repz inc ecx
  41f109:	(bad)  
  41f10a:	add    al,BYTE PTR [edx+ecx*2-0x209d107a]
  41f111:	dec    esi
  41f112:	in     al,dx
  41f113:	jne    0x41f12d
  41f115:	jmp    0x17d7bddb
  41f11a:	adc    BYTE PTR [esi-0x71e55ac1],0xb5
  41f121:	push   edi
  41f122:	xchg   edx,eax
  41f123:	xchg   esp,eax
  41f124:	add    esi,DWORD PTR [eax-0x221c810c]
  41f12a:	mov    eax,0xa9e1017d
  41f12f:	dec    esi
  41f130:	es jo  0x41f100
  41f133:	loop   0x41f183
  41f135:	pop    es
  41f136:	ins    DWORD PTR es:[edi],dx
  41f137:	imul   edx,DWORD PTR [ebx+0x4e],0x3c
  41f13b:	popa   
  41f13c:	iret   
  41f13d:	daa    
  41f13e:	in     al,dx
  41f13f:	mov    dh,0x9
  41f141:	mov    DWORD PTR [edi+0x7ba7ab1b],eax
  41f147:	lods   al,BYTE PTR ds:[esi]
  41f148:	scas   eax,DWORD PTR es:[edi]
  41f149:	out    0x22,al
  41f14b:	adc    al,0x8
  41f14d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f14e:	sbb    ecx,DWORD PTR [esi+0x73]
  41f151:	pop    edx
  41f152:	imul   ecx,DWORD PTR [ecx],0xc3141398
  41f158:	pop    edx
  41f159:	ror    BYTE PTR [esi+0x3c],0x11
  41f15d:	adc    edx,eax
  41f15f:	adc    ah,ah
  41f161:	pop    ss
  41f162:	fisub  WORD PTR [esi-0xe33611c]
  41f168:	mov    edi,0xff757571
  41f16d:	gs dec ebp
  41f16f:	shl    DWORD PTR [ebp-0x4870bef7],cl
  41f175:	fcomp  DWORD PTR [edi-0x72802b55]
  41f17b:	popa   
  41f17c:	(bad)  
  41f17d:	dec    ebx
  41f17e:	(bad)  
  41f17f:	call   0x705dc6b
  41f184:	js     0x41f1bc
  41f186:	jecxz  0x41f207
  41f188:	sbb    eax,0x4c6fed4d
  41f18d:	jg     0x41f185
  41f18f:	sbb    eax,0x9a3f0e6f
  41f194:	jno    0x41f1ec
  41f196:	sub    eax,0x17bb0333
  41f19b:	bound  ecx,QWORD PTR [edi-0x1468f8b0]
  41f1a1:	sbb    cl,al
  41f1a3:	retf   
  41f1a4:	stc    
  41f1a5:	xor    cl,bh
  41f1a7:	add    eax,0x66788c2c
  41f1ac:	ret    
  41f1ad:	rol    eax,0x1c
  41f1b0:	in     eax,0x8e
  41f1b2:	addr16 test al,0xc
  41f1b5:	aam    0x81
  41f1b7:	cmp    al,0x5d
  41f1b9:	lock xchg edi,eax
  41f1bb:	sub    ah,dh
  41f1bd:	lock leave 
  41f1bf:	aas    
  41f1c0:	sti    
  41f1c1:	ss scas eax,DWORD PTR es:[edi]
  41f1c3:	jo     0x41f1b0
  41f1c5:	pop    edx
  41f1c6:	dec    edi
  41f1c7:	mov    ebp,0xd8af13f5
  41f1cc:	dec    edi
  41f1cd:	mov    dh,0x84
  41f1cf:	das    
  41f1d0:	jge    0x41f1a7
  41f1d2:	mov    ?,WORD PTR [edx+0x461c10f9]
  41f1d8:	adc    al,0xd2
  41f1da:	fs push esp
  41f1dc:	mov    esi,0xf724b36e
  41f1e1:	xor    al,0x2a
  41f1e3:	push   ebp
  41f1e4:	and    ch,BYTE PTR ds:0x771839e3
  41f1ea:	push   cs
  41f1eb:	ins    BYTE PTR es:[edi],dx
  41f1ec:	add    al,0x40
  41f1ee:	cmc    
  41f1ef:	and    ebx,DWORD PTR [edi]
  41f1f1:	retf   0x8566
  41f1f4:	dec    esp
  41f1f5:	or     DWORD PTR [eax],ebp
  41f1f7:	xor    eax,esp
  41f1f9:	mov    cs,ebp
  41f1fb:	(bad)  
  41f1fc:	aam    0x9f
  41f1fe:	or     cl,dl
  41f200:	jge    0x41f197
  41f202:	sub    esp,DWORD PTR ds:0x94f24006
  41f208:	ret    
  41f209:	shl    BYTE PTR [ebp-0x45c769e9],1
  41f20f:	in     al,0xc3
  41f211:	xor    BYTE PTR [edi+0x4e7fa59e],ah
  41f217:	dec    esi
  41f218:	ins    DWORD PTR es:[edi],dx
  41f219:	mov    esp,0x21f4061b
  41f21e:	xchg   esp,eax
  41f21f:	mov    al,ds:0xcb3e0e8b
  41f224:	jle    0x41f1f0
  41f226:	sub    al,0xe7
  41f228:	out    0xdf,al
  41f22a:	sub    DWORD PTR [edi],ebp
  41f22c:	lods   al,BYTE PTR ds:[esi]
  41f22d:	jl     0x41f255
  41f22f:	pop    eax
  41f230:	fwait
  41f231:	dec    ecx
  41f232:	inc    ebx
  41f233:	dec    ebx
  41f234:	mov    ebx,0xf484493d
  41f239:	scas   al,BYTE PTR es:[edi]
  41f23a:	out    0x7e,al
  41f23c:	inc    ecx
  41f23d:	les    edx,FWORD PTR [ecx-0xd]
  41f240:	dec    esi
  41f241:	pop    esp
  41f242:	push   edi
  41f243:	sub    BYTE PTR [ebp-0x48],bl
  41f246:	and    DWORD PTR [eax+0x69],edi
  41f249:	scas   eax,DWORD PTR es:[edi]
  41f24a:	shl    BYTE PTR [ecx],0xeb
  41f24d:	push   esp
  41f24e:	das    
  41f24f:	xor    BYTE PTR [edi],al
  41f251:	push   0x70f8de2d
  41f256:	cmp    al,0x5a
  41f258:	aas    
  41f259:	sbb    bh,BYTE PTR [ebp+0x7bbbc162]
  41f25f:	mov    dl,0x96
  41f261:	push   ds
  41f262:	jg     0x41f2d7
  41f264:	xor    edi,ebp
  41f266:	sbb    eax,0xc41ec50a
  41f26b:	mov    dl,0xf1
  41f26d:	and    cl,BYTE PTR [eax-0x18]
  41f270:	mov    esi,0x2d749c39
  41f275:	daa    
  41f276:	mov    ebx,0xcec44c22
  41f27b:	xor    ch,cl
  41f27d:	xchg   edi,eax
  41f27e:	daa    
  41f27f:	dec    ebx
  41f280:	mov    ebx,0xd4e47d8c
  41f285:	mov    eax,ds:0xacb9d7e3
  41f28a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f28b:	mov    al,0x1a
  41f28d:	cwde   
  41f28e:	mov    BYTE PTR [ebp+0x2c],cl
  41f291:	daa    
  41f292:	sbb    eax,DWORD PTR [edi-0x5052549d]
  41f298:	pop    ebx
  41f299:	pushf  
  41f29a:	fst    st(1)
  41f29c:	mov    bh,BYTE PTR [edi-0x5a343d96]
  41f2a2:	inc    esi
  41f2a3:	inc    edi
  41f2a4:	cmp    dh,BYTE PTR ds:0xdfd7fbc1
  41f2aa:	inc    edx
  41f2ab:	push   cs
  41f2ac:	inc    bp
  41f2ae:	aad    0x49
  41f2b0:	sub    BYTE PTR [eax],0xa
  41f2b3:	sbb    al,BYTE PTR [ecx+0x6cadfb90]
  41f2b9:	pop    eax
  41f2ba:	push   eax
  41f2bb:	and    BYTE PTR [ebp-0x541f58ec],al
  41f2c1:	jp     0x41f278
  41f2c3:	and    al,0xdd
  41f2c5:	xchg   ebp,eax
  41f2c6:	xchg   ecx,eax
  41f2c7:	gs pop edx
  41f2c9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f2ca:	jne    0x41f323
  41f2cc:	and    DWORD PTR [ebx+0x1f],eax
  41f2cf:	push   edi
  41f2d0:	xor    DWORD PTR [ecx+0x22f0d401],ecx
  41f2d6:	and    eax,0xac917bef
  41f2db:	sti    
  41f2dc:	and    eax,0xd61491ab
  41f2e1:	xchg   ebp,eax
  41f2e2:	pop    ss
  41f2e3:	cwde   
  41f2e4:	daa    
  41f2e5:	popf   
  41f2e6:	ins    DWORD PTR es:[edi],dx
  41f2e7:	jl     0x41f33e
  41f2e9:	add    bh,BYTE PTR [ebp-0x18f3b3f0]
  41f2ef:	out    0xf,eax
  41f2f1:	lock push cs
  41f2f3:	push   0x4f
  41f2f5:	rcl    BYTE PTR [eax],cl
  41f2f7:	inc    eax
  41f2f8:	fnstenv [ebp-0x3f]
  41f2fb:	int    0x30
  41f2fd:	jecxz  0x41f35b
  41f2ff:	aam    0x3b
  41f301:	data16 outs dx,BYTE PTR ds:[esi]
  41f303:	out    dx,al
  41f304:	out    0xa3,al
  41f306:	ret    0x3a57
  41f309:	iret   
  41f30a:	xchg   ebx,eax
  41f30b:	dec    edi
  41f30c:	mov    BYTE PTR [ebp+0x61485c47],dl
  41f312:	jmp    0x560d:0xbeac18fc
  41f319:	pop    edx
  41f31a:	jb     0x41f371
  41f31c:	mov    eax,ds:0x99f2c8aa
  41f321:	add    eax,0xd813817c
  41f326:	push   ebp
  41f327:	sub    bh,cl
  41f329:	fwait
  41f32a:	xor    al,0x67
  41f32c:	arpl   WORD PTR [edi],ax
  41f32e:	xchg   ebx,eax
  41f330:	(bad)  
  41f331:	mov    bl,0x1d
  41f333:	fucom  st(0)
  41f335:	test   BYTE PTR [ebp+eax*1-0x2976b24c],cl
  41f33c:	ja     0x41f2c8
  41f33e:	fist   DWORD PTR [eax+0x1ba398b1]
  41f344:	(bad)  
  41f346:	mov    al,0xd5
  41f348:	adc    BYTE PTR [ebp+0x70],0x7e
  41f34c:	clc    
  41f34d:	out    dx,al
  41f34e:	jno    0x41f2e4
  41f350:	test   BYTE PTR [edx-0x5b],bl
  41f353:	adc    ch,dh
  41f355:	retf   0xfa99
  41f358:	inc    esi
  41f359:	add    al,0x0
  41f35b:	xchg   ebx,eax
  41f35c:	(bad)  
  41f35d:	fisubr DWORD PTR [ebx+0x4f92213]
  41f363:	ja     0x41f371
  41f365:	sbb    ebp,ecx
  41f367:	out    dx,eax
  41f368:	cdq    
  41f369:	pusha  
  41f36a:	push   ecx
  41f36b:	pop    edx
  41f36c:	(bad)  
  41f36d:	adc    bh,BYTE PTR [esi]
  41f36f:	ins    BYTE PTR es:[edi],dx
  41f370:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f371:	sbb    ebp,DWORD PTR [ebx+ecx*1-0x16b3b601]
  41f378:	shr    BYTE PTR [edx-0x21],0xc4
  41f37c:	jnp    0x41f3f0
  41f37e:	and    eax,0x7ac33282
  41f383:	adc    ecx,DWORD PTR [eax-0xb]
  41f386:	mov    cl,BYTE PTR [ecx+0x6621c9bb]
  41f38c:	add    cl,BYTE PTR [ebx+edi*4+0x1e]
  41f390:	push   ebx
  41f391:	(bad)  
  41f393:	test   ebp,edi
  41f395:	inc    edx
  41f396:	xchg   BYTE PTR [edi+0x72],dh
  41f399:	out    dx,al
  41f39a:	retf   0x4c6
  41f39d:	and    BYTE PTR [edi-0x898964e],dh
  41f3a3:	mov    cl,0x55
  41f3a5:	mov    ds:0xeb836b8c,al
  41f3aa:	(bad)  
  41f3ab:	mov    BYTE PTR [edx-0x40c3097d],0x8e
  41f3b2:	jmp    0x41f35b
  41f3b4:	lea    esi,[edi]
  41f3b6:	mov    DWORD PTR [edx-0x78],ebx
  41f3b9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f3ba:	aaa    
  41f3bb:	inc    edi
  41f3bc:	iret   
  41f3bd:	ret    
  41f3be:	fwait
  41f3bf:	cld    
  41f3c0:	aas    
  41f3c1:	stc    
  41f3c2:	enter  0xe2e7,0x55
  41f3c6:	cmp    BYTE PTR [ecx-0x64],dl
  41f3c9:	inc    edi
  41f3ca:	mov    eax,ds:0x5b360138
  41f3cf:	std    
  41f3d0:	das    
  41f3d1:	adc    edi,DWORD PTR [ecx+0x5c]
  41f3d4:	int    0xc5
  41f3d6:	stos   DWORD PTR es:[edi],eax
  41f3d7:	pop    esp
  41f3d8:	xchg   esp,eax
  41f3d9:	pop    edx
  41f3da:	mov    dl,0xe8
  41f3dc:	iret   
  41f3dd:	mov    ds:0xffb232cd,eax
  41f3e2:	lock (bad) 
  41f3e4:	les    edi,FWORD PTR [ebp+0x65fc369c]
  41f3ea:	cld    
  41f3eb:	and    BYTE PTR [edx-0x2c],ch
  41f3ee:	pop    ss
  41f3ef:	cmp    BYTE PTR [eax-0x513ed15b],ch
  41f3f5:	jge    0x41f456
  41f3f7:	xor    DWORD PTR [eax],0x9854e75e
  41f3fd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f3fe:	mov    ah,0x9e
  41f400:	loop   0x41f40b
  41f402:	cmp    ebp,DWORD PTR es:[eax]
  41f405:	mov    dh,0x88
  41f407:	and    al,0xcf
  41f409:	div    BYTE PTR [ebp+0x0]
  41f40c:	mov    ds:0xb6331d57,eax
  41f411:	pop    edi
  41f412:	lods   al,BYTE PTR cs:[esi]
  41f414:	add    eax,0xabd3340a
  41f419:	loopne 0x41f422
  41f41b:	sub    dh,bl
  41f41d:	jbe    0x41f3bd
  41f41f:	int3   
  41f420:	int    0xbb
  41f422:	pop    ss
  41f423:	adc    esi,esi
  41f425:	aad    0x2d
  41f427:	mov    bl,0xf4
  41f429:	stos   BYTE PTR es:[edi],al
  41f42a:	pop    ebx
  41f42b:	mov    ebp,0x8f691e53
  41f430:	adc    al,0x76
  41f432:	std    
  41f433:	call   0x314f567d
  41f438:	dec    ebx
  41f439:	inc    DWORD PTR [edx]
  41f43b:	pusha  
  41f43c:	mov    cl,cl
  41f43e:	xor    edi,DWORD PTR [eax]
  41f440:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f441:	ret    
  41f442:	cmp    edx,esi
  41f444:	dec    ecx
  41f445:	add    ch,BYTE PTR [ecx+ecx*2]
  41f448:	adc    ebp,DWORD PTR cs:[edi]
  41f44b:	sbb    edx,DWORD PTR [edx-0x12]
  41f44e:	mov    eax,ds:0x84a09e5d
  41f453:	outs   dx,BYTE PTR ds:[esi]
  41f454:	or     eax,edi
  41f456:	test   eax,0x121c2685
  41f45b:	mov    WORD PTR [edi+ebx*8],fs
  41f45e:	add    DWORD PTR [edx],edx
  41f460:	mov    edx,0x4d771afc
  41f465:	adc    ch,BYTE PTR [eax]
  41f467:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f468:	add    al,0xac
  41f46a:	jb     0x41f3fe
  41f46c:	cmp    al,0x44
  41f46e:	fdiv   DWORD PTR [esi]
  41f470:	pop    edi
  41f471:	ds cmp eax,0xd3424958
  41f477:	xchg   esp,eax
  41f478:	fisttp QWORD PTR [ecx+0x42]
  41f47b:	sbb    eax,ebp
  41f47d:	and    al,0x22
  41f47f:	xor    al,0xa4
  41f481:	out    0x27,eax
  41f483:	retf   
  41f484:	in     al,0xf2
  41f486:	leave  
  41f487:	sbb    ebx,esi
  41f489:	popf   
  41f48a:	mov    ch,0x6e
  41f48c:	xchg   esi,eax
  41f48d:	push   edx
  41f48e:	ret    0xbd9e
  41f491:	mov    eax,ds:0xf0a3f774
  41f496:	repz out dx,eax
  41f498:	push   esi
  41f499:	xor    eax,0x3332ecd
  41f49e:	adc    al,0x4
  41f4a0:	pop    ebx
  41f4a1:	mov    dl,0xf5
  41f4a3:	enter  0xbbfa,0x8c
  41f4a7:	div    dh
  41f4a9:	sbb    BYTE PTR [eax],dl
  41f4ab:	mov    esp,0x4679d3e2
  41f4b0:	mov    ds:0x42dcc461,al
  41f4b5:	mov    edi,cs
  41f4b7:	idiv   DWORD PTR [eax]
  41f4b9:	pop    ecx
  41f4ba:	mov    ch,0x3b
  41f4bc:	inc    esi
  41f4bd:	jb     0x41f460
  41f4bf:	mov    bh,0x73
  41f4c1:	mov    al,ds:0xba23e38e
  41f4c6:	jb     0x41f464
  41f4c8:	jne    0x41f487
  41f4ca:	jb     0x41f4ff
  41f4cc:	lock sub DWORD PTR [edx-0x61],esp
  41f4d0:	xchg   DWORD PTR [edi-0x7a978ab],edx
  41f4d6:	mov    ebx,0xef47985c
  41f4db:	mov    ebp,0x2f4479fb
  41f4e0:	add    bh,BYTE PTR [esi+0x6f7d392a]
  41f4e6:	mov    DWORD PTR [ebx+0x25],ebx
  41f4e9:	or     eax,0xf5cbc6d6
  41f4ee:	mul    DWORD PTR [eax*8+0x338538db]
  41f4f5:	cs push ebp
  41f4f7:	add    DWORD PTR [eax-0x3c],eax
  41f4fa:	pop    ebx
  41f4fb:	leave  
  41f4fc:	push   ebp
  41f4fd:	test   eax,0xd9e4f546
  41f502:	mov    edi,0x76e8c6f7
  41f507:	sets   BYTE PTR [esi+edx*2-0xc]
  41f50c:	pop    ss
  41f50d:	mov    DWORD PTR [eax-0x9],ebp
  41f510:	les    ebp,FWORD PTR [edi]
  41f512:	jge    0x41f4f6
  41f514:	scas   eax,DWORD PTR es:[edi]
  41f515:	pop    esi
  41f516:	pop    edi
  41f517:	imul   ecx,DWORD PTR [eax+0xa],0xe00a4056
  41f51e:	cli    
  41f51f:	cmp    bl,dl
  41f521:	sbb    ax,0x4b10
  41f525:	out    0xf3,eax
  41f527:	loopne 0x41f4e3
  41f529:	test   BYTE PTR [edi],dh
  41f52b:	mov    esi,0xf8cac96a
  41f530:	jnp    0x41f4cf
  41f532:	fst    st(4)
  41f534:	rcl    BYTE PTR [esi-0x32e0f276],1
  41f53a:	or     ecx,esi
  41f53c:	mov    WORD PTR [ecx+0x5abab7b4],fs
  41f542:	dec    ebp
  41f543:	stos   DWORD PTR es:[edi],eax
  41f544:	retf   0x4299
  41f547:	outs   dx,BYTE PTR ds:[esi]
  41f548:	inc    esi
  41f549:	inc    esp
  41f54a:	fst    QWORD PTR [ecx-0x30]
  41f54d:	je     0x41f4e9
  41f54f:	adc    cl,cl
  41f551:	jmp    0xbf7c3f43
  41f556:	addr16 int3 
  41f558:	ds pop edi
  41f55a:	add    edi,DWORD PTR [esi]
  41f55c:	js     0x41f524
  41f55e:	repz pusha 
  41f560:	out    dx,eax
  41f561:	adc    al,0x33
  41f563:	or     BYTE PTR [eax+0x5243eb67],0xaf
  41f56a:	scas   al,BYTE PTR es:[edi]
  41f56b:	fldenv [edx]
  41f56d:	mov    esp,0x90d93d5a
  41f572:	enter  0xfb57,0xb8
  41f576:	cmp    al,0x19
  41f578:	and    cl,BYTE PTR [edx+eax*2+0x1d]
  41f57c:	cwde   
  41f57d:	jo     0x41f5c9
  41f57f:	stos   DWORD PTR es:[edi],eax
  41f580:	sar    bl,cl
  41f582:	dec    eax
  41f583:	dec    ebp
  41f584:	retf   0xcd4c
  41f587:	xor    al,0x4f
  41f589:	push   edx
  41f58a:	lea    edx,[ecx]
  41f58c:	jl     0x41f556
  41f58e:	cs xchg esp,eax
  41f590:	xor    eax,0xd55f4a07
  41f595:	or     ecx,edi
  41f597:	arpl   dx,bx
  41f599:	push   ecx
  41f59a:	mov    edi,0x914519ec
  41f59f:	daa    
  41f5a0:	xchg   edx,eax
  41f5a1:	icebp  
  41f5a2:	cmp    ebp,edx
  41f5a4:	sbb    al,0xae
  41f5a6:	mov    eax,esi
  41f5a8:	sub    esp,esp
  41f5aa:	pop    es
  41f5ab:	mov    ecx,0xd252d868
  41f5b0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f5b1:	xchg   ebx,eax
  41f5b2:	xor    ebp,DWORD PTR [ebx]
  41f5b4:	ins    DWORD PTR es:[edi],dx
  41f5b5:	(bad)  
  41f5b6:	bound  esp,QWORD PTR [edi]
  41f5b8:	aas    
  41f5b9:	mov    ebp,esp
  41f5bb:	adc    dh,BYTE PTR [ecx-0x68]
  41f5be:	xor    edx,DWORD PTR [ebx+0x3550f421]
  41f5c4:	movs   DWORD PTR es:[di],DWORD PTR ds:[si]
  41f5c6:	adc    eax,DWORD PTR [esi-0x45]
  41f5c9:	and    BYTE PTR [ebx-0x4e80dd54],cl
  41f5cf:	xor    BYTE PTR [edi+ecx*4],bl
  41f5d2:	jb     0x41f5db
  41f5d4:	shl    BYTE PTR [edi],0x8
  41f5d7:	ret    0x1beb
  41f5da:	xchg   esp,eax
  41f5db:	add    DWORD PTR ds:0xc3030710,0xe03089e3
  41f5e5:	and    al,BYTE PTR [edi]
  41f5e7:	sub    DWORD PTR [ecx],0xffffffe3
  41f5ea:	adc    al,0xa2
  41f5ec:	outs   dx,DWORD PTR ds:[esi]
  41f5ed:	xor    DWORD PTR [eax-0x1c],ebx
  41f5f0:	or     BYTE PTR [ecx],ch
  41f5f2:	shr    bl,1
  41f5f4:	ficom  DWORD PTR [esi+0x45e65dbe]
  41f5fa:	idiv   ebx
  41f5fc:	pop    ds
  41f5fd:	aas    
  41f5fe:	test   BYTE PTR [ebp-0x4],dh
  41f601:	jno    0x41f5e2
  41f603:	cmp    DWORD PTR [eax+ecx*4],edx
  41f606:	xchg   edx,eax
  41f607:	cld    
  41f608:	fisubr DWORD PTR [ecx-0x2b]
  41f60b:	push   ecx
  41f60c:	fmul   DWORD PTR [edx]
  41f60e:	cld    
  41f60f:	sti    
  41f610:	mov    ebx,0x4b657684
  41f615:	push   es
  41f616:	les    ebp,FWORD PTR [edi-0x17a0a1db]
  41f61c:	stos   DWORD PTR es:[edi],eax
  41f61d:	fcmovu st,st(5)
  41f61f:	adc    cl,BYTE PTR [edx+0x24]
  41f622:	repnz cld 
  41f624:	sub    bl,BYTE PTR [ebx]
  41f626:	add    ecx,DWORD PTR [eax+esi*8+0x6b]
  41f62a:	xchg   esp,eax
  41f62b:	xchg   ebp,eax
  41f62c:	not    BYTE PTR [esi-0x5a]
  41f62f:	ret    0x6b7a
  41f632:	cwde   
  41f633:	cdq    
  41f634:	mov    cl,0x5
  41f636:	jo     0x41f5f8
  41f638:	(bad)  
  41f639:	out    0x42,eax
  41f63b:	sub    BYTE PTR [ebx-0x6b],bh
  41f63e:	xor    al,0x5d
  41f640:	test   al,0xb8
  41f642:	call   0xce03af1f
  41f647:	dec    esp
  41f648:	outs   dx,DWORD PTR ds:[esi]
  41f649:	int3   
  41f64a:	(bad)  
  41f64b:	mov    esp,0x45d4d76e
  41f650:	fbstp  TBYTE PTR [edx+esi*2+0x38]
  41f654:	mov    ebx,0x195f9268
  41f659:	xor    dl,BYTE PTR [ebp+edx*1-0x1a66d4b1]
  41f660:	sahf   
  41f661:	or     al,0x22
  41f663:	adc    BYTE PTR [edi],cl
  41f665:	loopne 0x41f639
  41f667:	data16 fisttp DWORD PTR ds:[ebx]
  41f66b:	repz push ds
  41f66d:	daa    
  41f66e:	lods   eax,DWORD PTR ds:[esi]
  41f66f:	add    esi,DWORD PTR [eax+eax*2-0x6ce9401d]
  41f676:	stc    
  41f677:	loope  0x41f666
  41f679:	int    0xee
  41f67b:	adc    BYTE PTR [esi-0x6aa6aa65],ch
  41f681:	push   cs
  41f682:	push   ecx
  41f683:	cmp    al,0x85
  41f685:	and    al,0x35
  41f687:	sub    DWORD PTR [ebx+edx*4+0x4d863722],ecx
  41f68e:	call   0x1afc:0xaff2652f
  41f695:	dec    edx
  41f696:	mov    edx,0x9d5e9271
  41f69b:	ins    DWORD PTR es:[edi],dx
  41f69c:	jbe    0x41f665
  41f69e:	lds    edx,FWORD PTR [edx]
  41f6a0:	mov    ebp,DWORD PTR [ebp+0x5d42533c]
  41f6a6:	add    ebx,ecx
  41f6a8:	xor    ch,BYTE PTR [eax+0x3]
  41f6ab:	sub    cl,ch
  41f6ad:	outs   dx,BYTE PTR ds:[esi]
  41f6ae:	add    BYTE PTR [ecx-0x124d1bcd],cl
  41f6b4:	not    DWORD PTR [edi-0x2f]
  41f6b7:	ja     0x41f677
  41f6b9:	fimul  DWORD PTR gs:[esi+0x433b9259]
  41f6c1:	push   ss
  41f6c2:	push   ecx
  41f6c3:	repz hlt 
  41f6c5:	lea    eax,[edx]
  41f6c7:	and    eax,0x89be959f
  41f6cc:	imul   esi,DWORD PTR [ecx+0x64],0xffffffad
  41f6d0:	add    BYTE PTR [ebx],bl
  41f6d2:	loop   0x41f6e1
  41f6d4:	push   ebp
  41f6d5:	enter  0xb7a2,0x34
  41f6d9:	outs   dx,BYTE PTR ds:[esi]
  41f6da:	fbstp  TBYTE PTR [edi]
  41f6dc:	pop    eax
  41f6dd:	cmc    
  41f6de:	in     eax,0x62
  41f6e0:	jb     0x41f75c
  41f6e2:	push   esi
  41f6e3:	sub    al,0x91
  41f6e5:	cwde   
  41f6e6:	and    BYTE PTR [edi-0xe],bh
  41f6e9:	shl    DWORD PTR [ebx],cl
  41f6eb:	push   esi
  41f6ec:	ins    DWORD PTR es:[edi],dx
  41f6ed:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f6ef:	loope  0x41f69d
  41f6f1:	fnstcw WORD PTR [eax]
  41f6f3:	scas   al,BYTE PTR es:[edi]
  41f6f4:	leave  
  41f6f5:	ins    DWORD PTR es:[edi],dx
  41f6f6:	test   DWORD PTR [edx+0x7d],edi
  41f6f9:	dec    eax
  41f6fa:	mov    DWORD PTR ds:0xea22e3c8,edx
  41f700:	inc    eax
  41f701:	dec    edi
  41f702:	arpl   WORD PTR ds:0xf9c26c93,cx
  41f708:	imul   eax,esp,0x54
  41f70b:	adc    ecx,ebx
  41f70d:	fist   WORD PTR [ebx]
  41f70f:	out    dx,eax
  41f710:	adc    eax,0x9ad88f3
  41f715:	call   0xf7d:0x56d1a16f
  41f71c:	mov    eax,ds:0x21c58821
  41f721:	inc    ebp
  41f722:	jbe    0x41f76a
  41f724:	shr    al,1
  41f726:	push   edi
  41f727:	cld    
  41f728:	inc    edx
  41f729:	rol    eax,1
  41f72b:	not    BYTE PTR [ebp-0x7c]
  41f72e:	mov    esi,0x2118e95d
  41f733:	cmp    BYTE PTR [ecx+0x56],bl
  41f736:	add    al,0x3c
  41f738:	mov    dl,BYTE PTR [edx]
  41f73a:	xor    ah,ah
  41f73c:	cmp    edx,DWORD PTR [edi]
  41f73e:	outs   dx,BYTE PTR cs:[esi]
  41f740:	shl    esi,1
  41f742:	add    DWORD PTR ds:0xc4f0ec1b,ebp
  41f748:	js     0x41f748
  41f74a:	xchg   ecx,eax
  41f74b:	hlt    
  41f74c:	retf   
  41f74d:	push   esi
  41f74e:	xchg   esi,eax
  41f74f:	retf   
  41f750:	dec    eax
  41f751:	(bad)  
  41f752:	push   ds
  41f753:	sub    edx,DWORD PTR [edx]
  41f755:	int    0xdb
  41f757:	fisubr DWORD PTR [edi-0x31]
  41f75a:	aaa    
  41f75b:	push   esp
  41f75c:	xchg   ebx,eax
  41f75d:	fsubr  QWORD PTR [ebx+0xbaf34c4]
  41f763:	xor    bh,0x20
  41f766:	inc    edi
  41f767:	xor    bl,bl
  41f769:	mov    ebp,DWORD PTR [eax+0x35]
  41f76c:	mov    al,0x78
  41f76e:	mov    ah,0xb0
  41f770:	jae    0x41f776
  41f772:	add    edi,DWORD PTR [esi-0x5e]
  41f775:	adc    al,0x5f
  41f777:	mov    ebp,0xdc888fb3
  41f77c:	dec    ebp
  41f77d:	push   esi
  41f77e:	mov    esp,0x5871f392
  41f783:	(bad)  
  41f784:	lods   eax,DWORD PTR ds:[esi]
  41f785:	ret    
  41f786:	dec    ebx
  41f787:	sub    DWORD PTR [edi+0x33],0x1bcd4809
  41f78e:	ins    DWORD PTR es:[edi],dx
  41f78f:	pop    es
  41f790:	stos   BYTE PTR es:[edi],al
  41f791:	(bad)  
  41f792:	cmp    BYTE PTR [edx-0x291834f6],bh
  41f798:	lods   eax,DWORD PTR ds:[esi]
  41f799:	inc    ebx
  41f79a:	jl     0x41f7cf
  41f79c:	mov    edx,0xd47b008f
  41f7a1:	fidivr WORD PTR [ecx+0x1f]
  41f7a4:	call   0x4726c6ea
  41f7a9:	jp     0x41f808
  41f7ab:	mov    bh,0x25
  41f7ad:	aaa    
  41f7ae:	mov    esi,0x9c027b6b
  41f7b3:	cmp    al,0x5
  41f7b5:	xchg   esi,eax
  41f7b6:	mov    ebx,0x45a6a273
  41f7bb:	mov    eax,ds:0xd4205b3e
  41f7c0:	cmp    DWORD PTR [ebp+ecx*1-0x53],esi
  41f7c4:	add    cl,BYTE PTR [ecx+0x22997d6f]
  41f7ca:	(bad)  
  41f7cb:	dec    eax
  41f7cc:	dec    esi
  41f7cd:	jg     0x41f7b0
  41f7cf:	retf   0x6044
  41f7d2:	test   eax,0xbf1cf6a
  41f7d7:	movzx  ecx,BYTE PTR [edx-0x77c48bb5]
  41f7de:	arpl   WORD PTR [ebx+0x73],sp
  41f7e1:	add    BYTE PTR [edx+eiz*8+0x12],ah
  41f7e5:	mov    edi,DWORD PTR [eax-0x4501735]
  41f7eb:	neg    BYTE PTR [eax-0x1]
  41f7ee:	retf   
  41f7ef:	mov    ebp,0x43b5d736
  41f7f4:	sub    eax,0x720764eb
  41f7f9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f7fa:	dec    ecx
  41f7fb:	repnz mov bl,0x5
  41f7fe:	retf   
  41f7ff:	ficom  DWORD PTR [edi]
  41f801:	test   DWORD PTR [eax],edx
  41f803:	cmp    DWORD PTR [edx+0x7f],ecx
  41f806:	cli    
  41f807:	cmp    ch,bh
  41f809:	add    DWORD PTR [edx],ebx
  41f80b:	enter  0xee0e,0x81
  41f80f:	add    esp,esi
  41f811:	aaa    
  41f812:	adc    ebx,DWORD PTR [esp+edx*4+0x25398333]
  41f819:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f81a:	jo     0x41f875
  41f81c:	lock ret 
  41f81e:	pusha  
  41f81f:	push   ebx
  41f820:	xor    al,0xf
  41f822:	int    0x40
  41f824:	lahf   
  41f825:	outs   dx,BYTE PTR ds:[esi]
  41f826:	fmul   st(3),st
  41f828:	add    al,0x77
  41f82a:	out    0x74,al
  41f82c:	dec    ecx
  41f82d:	ins    BYTE PTR es:[edi],dx
  41f82e:	es adc eax,0x6a0a9308
  41f834:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f835:	adc    BYTE PTR [edi],dl
  41f837:	push   es
  41f838:	call   0xb957bf57
  41f83d:	xor    al,BYTE PTR [edx+0x7e]
  41f840:	or     ebp,DWORD PTR [ebx]
  41f842:	mov    ebp,0x5403798
  41f847:	test   ecx,0x4aaa6520
  41f84d:	ss loop 0x41f897
  41f850:	adc    bl,BYTE PTR [esi]
  41f852:	pop    ss
  41f853:	ret    0xcf4a
  41f856:	mov    al,0x13
  41f858:	lea    esp,[edi]
  41f85a:	push   ebx
  41f85b:	dec    edi
  41f85c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f85d:	push   ecx
  41f85e:	lock cwde 
  41f860:	arpl   WORD PTR [esi-0x43],si
  41f863:	jge    0x41f8e4
  41f865:	sub    eax,0x7e31a851
  41f86a:	mov    edx,0x554a9526
  41f86f:	scas   eax,DWORD PTR es:[edi]
  41f870:	fidivr WORD PTR [esi]
  41f872:	popa   
  41f873:	loopne 0x41f7fc
  41f875:	adc    edi,DWORD PTR [esi-0x24c52350]
  41f87b:	retf   
  41f87c:	jl     0x41f8f3
  41f87e:	aaa    
  41f87f:	or     eax,0x4a9f058
  41f884:	push   ss
  41f885:	es (bad) 
  41f887:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f888:	(bad)  
  41f88a:	jmp    0x313d0ce4
  41f88f:	dec    ecx
  41f890:	xchg   ebx,eax
  41f891:	push   esi
  41f892:	jnp    0x41f8f1
  41f894:	jecxz  0x41f8d6
  41f896:	sahf   
  41f897:	pop    es
  41f898:	push   ebx
  41f899:	xchg   esp,eax
  41f89a:	inc    eax
  41f89b:	jnp    0x41f8fb
  41f89d:	icebp  
  41f89e:	popf   
  41f89f:	aam    0x18
  41f8a1:	xchg   ebp,eax
  41f8a2:	add    edx,DWORD PTR [edx*4-0x11e6ad63]
  41f8a9:	(bad)  
  41f8aa:	std    
  41f8ab:	hlt    
  41f8ac:	mov    eax,gs
  41f8ae:	xor    al,0xc6
  41f8b0:	or     al,0x0
  41f8b2:	sub    al,0x16
  41f8b4:	call   0xdbd12914
  41f8b9:	clc    
  41f8ba:	mov    ds:0x93fa0e17,eax
  41f8bf:	push   es
  41f8c0:	loopne 0x41f89b
  41f8c2:	mov    ds:0xe50d1fdb,al
  41f8c7:	inc    edi
  41f8c8:	fimul  WORD PTR [esi+0x7d]
  41f8cb:	xor    esi,DWORD PTR [esi+0x3c]
  41f8ce:	jo     0x41f8ef
  41f8d0:	sub    BYTE PTR [ebp+ecx*1-0x2c],0xcd
  41f8d5:	push   ds
  41f8d6:	push   edi
  41f8d7:	frstor [ecx-0xc80a9da]
  41f8dd:	outs   dx,BYTE PTR ds:[esi]
  41f8de:	cmp    eax,DWORD PTR [esp+ebx*4]
  41f8e1:	inc    ebx
  41f8e2:	mov    ebp,0x790e67e2
  41f8e7:	pop    ecx
  41f8e8:	cwde   
  41f8e9:	outs   dx,DWORD PTR ds:[esi]
  41f8ea:	sbb    bh,BYTE PTR ds:0xfbece46
  41f8f0:	sbb    al,0xbf
  41f8f2:	(bad)  
  41f8f3:	lock inc esp
  41f8f5:	les    ebp,FWORD PTR [eax+ebx*1]
  41f8f8:	mov    esp,0x47a15941
  41f8fd:	and    BYTE PTR [edi-0x25],dh
  41f900:	jo     0x41f883
  41f902:	sub    BYTE PTR [ebx],cl
  41f904:	sub    eax,0xedab516c
  41f909:	inc    esp
  41f90a:	cwde   
  41f90b:	inc    esi
  41f90c:	cld    
  41f90d:	lahf   
  41f90e:	add    BYTE PTR [eax],bh
  41f910:	dec    ebp
  41f911:	adc    eax,DWORD PTR [ecx-0x4d]
  41f914:	dec    ebx
  41f915:	test   BYTE PTR [esi],bh
  41f917:	fisub  WORD PTR [eax+0x20260bce]
  41f91d:	adc    eax,DWORD PTR [eax+0x22fd7c00]
  41f923:	ja     0x41f8b8
  41f925:	pop    ds
  41f926:	mov    edi,ss
  41f928:	xchg   ebp,eax
  41f929:	jo     0x41f967
  41f92b:	out    0x29,al
  41f92d:	sti    
  41f92e:	js     0x41f8d4
  41f930:	push   edx
  41f931:	imul   ebx,DWORD PTR [ecx+0x3457f791],0x20ddfb7a
  41f93b:	xchg   ebp,eax
  41f93c:	stos   BYTE PTR es:[edi],al
  41f93d:	mov    ebx,0xfe91228f
  41f942:	xor    esp,DWORD PTR [edi]
  41f944:	ret    0xe01
  41f947:	inc    eax
  41f948:	imul   esp,DWORD PTR [ecx+0x6a950014],0x666a67e8
  41f952:	test   DWORD PTR [ebp-0x4f9f0657],eax
  41f958:	push   eax
  41f959:	stos   DWORD PTR es:[edi],eax
  41f95a:	sar    BYTE PTR [eax],1
  41f95c:	xchg   ebx,eax
  41f95d:	aas    
  41f95e:	add    dh,0xe0
  41f961:	ins    BYTE PTR es:[edi],dx
  41f962:	inc    ebx
  41f963:	xlat   BYTE PTR ds:[ebx]
  41f965:	push   edx
  41f966:	imul   ebp,DWORD PTR [ecx-0x3be9b883],0x17
  41f96d:	clc    
  41f96e:	ror    DWORD PTR [eax-0x3],0xb7
  41f972:	add    DWORD PTR [eax],ebx
  41f974:	push   ds
  41f975:	push   edx
  41f976:	xchg   esi,eax
  41f977:	cmp    eax,0xd3ef245d
  41f97c:	or     eax,0x9fc4d2ea
  41f981:	mov    al,0xdb
  41f983:	sub    al,0xee
  41f985:	imul   ebp,DWORD PTR ds:0xd74415a4,0xb16a57cd
  41f98f:	mov    DWORD PTR [ecx+0x6266f9f9],esi
  41f995:	push   ss
  41f996:	and    BYTE PTR [ebx],0xc7
  41f999:	xchg   dh,dl
  41f99b:	fst    QWORD PTR [eax+0x5]
  41f99e:	std    
  41f99f:	inc    edx
  41f9a0:	ss ret 0x5762
  41f9a4:	cmc    
  41f9a5:	xchg   ecx,eax
  41f9a6:	test   DWORD PTR [ecx-0x72],ebx
  41f9a9:	cs pop ss
  41f9ab:	(bad)  
  41f9ad:	adc    DWORD PTR [eax-0x6a],esp
  41f9b0:	mov    WORD PTR [ecx],fs
  41f9b2:	in     al,0xfc
  41f9b4:	sub    edi,eax
  41f9b6:	xchg   esi,eax
  41f9b7:	inc    esp
  41f9b8:	sub    eax,0xd334b2c5
  41f9bd:	mov    esi,ebp
  41f9bf:	(bad)  
  41f9c1:	ins    BYTE PTR es:[edi],dx
  41f9c2:	push   ebp
  41f9c3:	adc    BYTE PTR [edx+0x41],cl
  41f9c6:	retf   0xdbbd
  41f9c9:	dec    ebp
  41f9ca:	ja     0x41fa34
  41f9cc:	push   esi
  41f9cd:	std    
  41f9ce:	jge    0x41f9e8
  41f9d0:	cmp    ebp,edi
  41f9d2:	test   al,0x9b
  41f9d4:	sbb    ah,bh
  41f9d6:	inc    eax
  41f9d7:	arpl   WORD PTR [esi+0x77],sp
  41f9da:	lods   al,BYTE PTR ds:[esi]
  41f9db:	iret   
  41f9dc:	push   0x5795f6d1
  41f9e1:	pop    ds
  41f9e2:	cs inc ebx
  41f9e4:	xor    al,0x6a
  41f9e6:	in     eax,dx
  41f9e7:	mov    ebx,0xc63ac2ce
  41f9ec:	pop    ecx
  41f9ed:	pop    eax
  41f9ee:	in     eax,dx
  41f9ef:	test   eax,0x6c4dabe3
  41f9f4:	push   eax
  41f9f5:	(bad)  
  41f9f6:	ror    cl,1
  41f9f8:	or     eax,0xc12ab609
  41f9fd:	int    0x33
  41f9ff:	ficomp WORD PTR [edx+0x13f74d3b]
  41fa05:	jp     0x41f9fe
  41fa07:	xchg   ecx,eax
  41fa08:	(bad)  
  41fa09:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fa0a:	imul   DWORD PTR [ecx+ebx*4+0x289afcc7]
  41fa11:	arpl   WORD PTR [eax],dx
  41fa13:	add    eax,0x2c65d9ac
  41fa18:	loope  0x41f9d6
  41fa1a:	lahf   
  41fa1b:	cmp    bl,bl
  41fa1d:	fsub   QWORD PTR [ebp-0x4c7b0652]
  41fa23:	jns    0x41fa1d
  41fa25:	pusha  
  41fa26:	aas    
  41fa27:	lods   eax,DWORD PTR ds:[esi]
  41fa28:	sbb    eax,0x8bfdcdd9
  41fa2d:	cmp    eax,0x1d2b4fb9
  41fa32:	cdq    
  41fa33:	cmp    ecx,DWORD PTR [ecx]
  41fa35:	sbb    DWORD PTR [esi-0x7ad4af91],edi
  41fa3b:	push   ds
  41fa3c:	ja     0x41fa2a
  41fa3e:	mov    BYTE PTR [edx],bh
  41fa40:	pmaxub mm3,QWORD PTR [edi+0x6bd33566]
  41fa47:	mov    bl,0xb9
  41fa49:	inc    edi
  41fa4a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fa4b:	fiadd  DWORD PTR [esi-0x68e466da]
  41fa51:	or     BYTE PTR [ecx+0x63],dl
  41fa54:	sbb    al,0x5a
  41fa56:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fa57:	add    al,BYTE PTR [esi+0x27e54043]
  41fa5d:	push   eax
  41fa5e:	out    dx,eax
  41fa5f:	jp     0x41fad2
  41fa61:	adc    al,0x9c
  41fa63:	(bad)  
  41fa64:	lock int 0xa9
  41fa67:	mov    dl,0x7f
  41fa69:	jo     0x41fa71
  41fa6b:	xchg   esi,eax
  41fa6c:	xor    BYTE PTR [eax+0x599f65d5],cl
  41fa72:	push   esi
  41fa73:	jae    0x41fa69
  41fa75:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fa76:	lahf   
  41fa77:	cld    
  41fa78:	pop    esi
  41fa79:	cld    
  41fa7a:	(bad)  
  41fa7b:	sub    al,0x69
  41fa7d:	aad    0xde
  41fa7f:	xor    BYTE PTR [eax+0x12dab0a1],dl
  41fa85:	dec    edi
  41fa86:	pop    ds
  41fa87:	push   esi
  41fa88:	pop    ebp
  41fa89:	call   0xedb0:0xa0c53daa
  41fa90:	sar    DWORD PTR [edi-0x77],1
  41fa93:	mov    bh,0x4c
  41fa95:	push   0x8800df34
  41fa9a:	mov    edi,eax
  41fa9c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fa9d:	xor    ah,ch
  41fa9f:	mov    bl,0x58
  41faa1:	data16 jl 0x41fa57
  41faa4:	dec    ebp
  41faa5:	mov    eax,ds:0x2af90c7a
  41faaa:	loope  0x41fa51
  41faac:	xchg   ebx,eax
  41faad:	jne    0x41fb2b
  41faaf:	xchg   esp,eax
  41fab0:	add    DWORD PTR [ecx+0x7a874611],edi
  41fab6:	add    al,0xc
  41fab8:	mov    ebp,0x35cd1650
  41fabd:	ds add eax,0xf9687392
  41fac3:	push   ecx
  41fac4:	xor    BYTE PTR [eax+ebp*1+0x2f],ch
  41fac8:	sub    DWORD PTR [esp+eax*1+0xd],0xf1e19285
  41fad0:	hlt    
  41fad1:	mov    al,ds:0x1f165020
  41fad6:	pusha  
  41fad7:	ins    BYTE PTR es:[edi],dx
  41fad8:	adc    bh,0xf6
  41fadb:	das    
  41fadc:	xor    DWORD PTR [edx],eax
  41fade:	push   0x7382b748
  41fae3:	rol    BYTE PTR [edx-0x62],cl
  41fae6:	dec    edi
  41fae7:	adc    esp,ebp
  41fae9:	(bad)  
  41faea:	call   0xe24df7f9
  41faef:	scas   al,BYTE PTR es:[edi]
  41faf0:	(bad)
  41faf4:	aas    
  41faf5:	ins    DWORD PTR es:[edi],dx
  41faf6:	pop    esp
  41faf7:	jno    0x41fa9f
  41faf9:	(bad)  ds:0xea76158e
  41faff:	cmp    edi,ebp
  41fb01:	fs inc edi
  41fb03:	mov    al,0xb2
  41fb05:	adc    BYTE PTR [edi+ecx*8-0x232d3d12],dh
  41fb0c:	(bad)  
  41fb0d:	push   esi
  41fb0e:	cmp    BYTE PTR [ecx-0xe1c24f],0xf7
  41fb15:	cs pop ds
  41fb17:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fb18:	sahf   
  41fb19:	sbb    eax,0x2ad62e4b
  41fb1e:	imul   ebp,DWORD PTR [ebp-0x32],0x6d0f2b46
  41fb25:	addr16 push 0x78
  41fb28:	sub    al,0x7c
  41fb2a:	lods   al,BYTE PTR ds:[esi]
  41fb2b:	aas    
  41fb2c:	icebp  
  41fb2d:	xchg   esi,eax
  41fb2e:	jae    0x41fb8e
  41fb30:	push   ss
  41fb31:	(bad)  
  41fb32:	sbb    ebx,DWORD PTR [ebx+eax*2+0x51]
  41fb36:	outs   dx,DWORD PTR ds:[esi]
  41fb37:	shl    esi,0x81
  41fb3a:	push   esp
  41fb3b:	mov    ecx,0xd68a16f0
  41fb40:	xchg   DWORD PTR [ecx+0x706585d4],esi
  41fb46:	jb     0x41fb54
  41fb48:	ret    
  41fb49:	xchg   ebp,eax
  41fb4a:	cdq    
  41fb4b:	sbb    edi,ecx
  41fb4d:	mov    ch,0xfd
  41fb4f:	pop    ds
  41fb50:	jecxz  0x41fafb
  41fb52:	adc    eax,0xf5187483
  41fb57:	mov    edx,0xa36f1c09
  41fb5c:	inc    ebx
  41fb5d:	popf   
  41fb5e:	mov    edx,0xee6d7e2d
  41fb63:	loope  0x41fbd0
  41fb65:	dec    edi
  41fb66:	push   esp
  41fb67:	sub    esp,ecx
  41fb69:	and    al,0x3b
  41fb6b:	jmp    0x41fbda
  41fb6d:	in     eax,0x53
  41fb6f:	out    0xa9,al
  41fb71:	push   ds
  41fb72:	je     0x41fb22
  41fb74:	gs or  eax,0xdc1c560a
  41fb7a:	adc    eax,0xaf0a9d92
  41fb7f:	or     ch,BYTE PTR [edi+esi*4+0x20ff283e]
  41fb86:	bound  eax,QWORD PTR [edi-0x12]
  41fb89:	mov    dh,0xea
  41fb8b:	(bad)  
  41fb8c:	adc    bl,BYTE PTR [edx-0x35]
  41fb8f:	mov    al,0x84
  41fb91:	xchg   BYTE PTR [edx-0x2ca29f12],al
  41fb97:	mov    ds:0x55d5960a,eax
  41fb9c:	sub    ch,BYTE PTR [esi]
  41fb9e:	mov    ch,0x0
  41fba0:	out    dx,eax
  41fba1:	aam    0xa0
  41fba3:	mov    eax,ds:0x6cc3b9d0
  41fba8:	addr16 inc edx
  41fbaa:	mov    esp,0x2e798557
  41fbaf:	mov    esp,0x1d873c68
  41fbb4:	mov    ebp,0x1cc9d171
  41fbb9:	adc    eax,0xc5ad1b5d
  41fbbe:	mov    eax,ds:0x733a50ca
  41fbc3:	inc    eax
  41fbc4:	in     eax,dx
  41fbc5:	pusha  
  41fbc6:	js     0x41fc2c
  41fbc8:	es push ebx
  41fbca:	int3   
  41fbcb:	sti    
  41fbcc:	sbb    cl,BYTE PTR [edi-0x48c4782d]
  41fbd2:	mov    edx,0x6b2db18d
  41fbd7:	adc    esp,0xb0b912ed
  41fbdd:	cmp    cl,bh
  41fbdf:	cwde   
  41fbe0:	shr    DWORD PTR [eax],cl
  41fbe2:	sbb    BYTE PTR [ecx+0x2a],cl
  41fbe5:	test   edx,0xfb3b0b1c
  41fbeb:	xchg   ebx,eax
  41fbec:	or     BYTE PTR [eax+0x5c],ch
  41fbef:	aad    0x42
  41fbf1:	sub    bh,BYTE PTR [edx]
  41fbf3:	mov    dh,0x91
  41fbf5:	push   ebp
  41fbf6:	retf   
  41fbf7:	xchg   esp,eax
  41fbf8:	pop    ebx
  41fbf9:	cmp    al,0x4d
  41fbfb:	sub    ah,BYTE PTR [esi-0x2f]
  41fbfe:	and    dl,al
  41fc00:	xchg   esp,ecx
  41fc02:	in     eax,dx
  41fc03:	push   0xe
  41fc05:	std    
  41fc06:	sub    ebp,ebp
  41fc08:	xchg   ebp,eax
  41fc09:	sub    esp,edx
  41fc0b:	test   BYTE PTR [edx],0xc1
  41fc0e:	test   al,0xff
  41fc10:	cmp    BYTE PTR [edi-0xa7f0eff],dl
  41fc16:	sbb    DWORD PTR [eax],esp
  41fc18:	or     eax,0x7b73de52
  41fc1d:	das    
  41fc1e:	lock cmp eax,0x7b1717a7
  41fc24:	cmp    dl,BYTE PTR ds:0x751d686e
  41fc2a:	cli    
  41fc2b:	sbb    BYTE PTR [ebx],al
  41fc2d:	ror    BYTE PTR [ebp+ebp*4+0x3e325cfe],0xaf
  41fc35:	push   ds
  41fc36:	mov    dl,0x26
  41fc38:	out    0x21,eax
  41fc3a:	pop    ebp
  41fc3b:	and    DWORD PTR [edx],edx
  41fc3d:	enter  0xf181,0xf9
  41fc41:	pusha  
  41fc42:	fucom  st(3)
  41fc44:	or     eax,0xeabc2c7b
  41fc49:	add    DWORD PTR [edx+edx*8-0x74a53022],esp
  41fc50:	retf   0x957d
  41fc53:	neg    BYTE PTR [edx+0x35ada073]
  41fc59:	scas   al,BYTE PTR es:[edi]
  41fc5a:	dec    edi
  41fc5b:	gs xchg ecx,eax
  41fc5d:	or     esp,edx
  41fc5f:	repz push ecx
  41fc61:	popf   
  41fc62:	outs   dx,DWORD PTR ds:[esi]
  41fc63:	lock adc BYTE PTR fs:[edi+eiz*4],al
  41fc68:	mov    ebx,0x168842ce
  41fc6d:	std    
  41fc6e:	outs   dx,DWORD PTR ds:[esi]
  41fc6f:	aas    
  41fc70:	ins    BYTE PTR es:[di],dx
  41fc72:	(bad)  
  41fc73:	(bad)  
  41fc75:	cld    
  41fc76:	fcomp  DWORD PTR [ecx-0x7c346000]
  41fc7c:	jae    0x41fcb9
  41fc7e:	push   edx
  41fc7f:	adc    ch,0x2c
  41fc82:	mov    eax,ds:0x3c63370
  41fc87:	(bad)  
  41fc88:	push   eax
  41fc89:	mov    eax,DWORD PTR [ebp-0x24]
  41fc8c:	add    eax,0xaa
  41fc91:	push   eax
  41fc92:	mov    eax,DWORD PTR [ebp-0x24]
  41fc95:	mov    eax,DWORD PTR [eax+0x198]
  41fc9b:	push   DWORD PTR [eax]
  41fc9d:	call   0x42368f
  41fca2:	mov    DWORD PTR [ebp-0x14],eax
  41fca5:	lea    eax,[ebp+0x4]
  41fca8:	mov    DWORD PTR [ebp-0x30],eax
  41fcab:	mov    eax,DWORD PTR [ebp-0x14]
  41fcae:	test   eax,eax
  41fcb0:	je     0x422078
  41fcb6:	lea    eax,[ebp-0x8]
  41fcb9:	mov    DWORD PTR [ebp-0x38],eax
  41fcbc:	mov    eax,DWORD PTR [ebp-0x34]
  41fcbf:	mov    DWORD PTR [ebp-0x8],eax
  41fcc2:	mov    eax,DWORD PTR [ebp-0x8]
  41fcc5:	mov    ecx,DWORD PTR [ebp-0x14]
  41fcc8:	sub    eax,ecx
  41fcca:	mov    DWORD PTR [ebp-0x8],eax
  41fccd:	mov    ecx,DWORD PTR [ebp-0x4]
  41fcd0:	xor    ecx,esi
  41fcd2:	mov    eax,0xffcd8d14
  41fcd7:	sub    eax,ecx
  41fcd9:	add    DWORD PTR [ebp-0x8],eax
  41fcdc:	mov    eax,DWORD PTR [ebp-0x8]
  41fcdf:	mov    ecx,DWORD PTR [ebp-0x14]
  41fce2:	mov    DWORD PTR [ecx+0x1],eax
  41fce5:	mov    eax,DWORD PTR [ebp-0x14]
  41fce8:	push   DWORD PTR [ebp-0x24]
  41fceb:	mov    BYTE PTR [eax],0xe9
  41fcee:	mov    eax,ds:0x42816b
  41fcf3:	push   DWORD PTR [eax]
  41fcf5:	push   DWORD PTR ds:0x4283c7
  41fcfb:	push   DWORD PTR ds:0x428173
  41fd01:	jmp    0x422061
  41fd06:	inc    edi
  41fd07:	cmp    esi,0x5e
  41fd0a:	mov    dh,0x3
  41fd0c:	(bad)  
  41fd0d:	jnp    0x41fce7
  41fd0f:	sub    DWORD PTR [esi],ebx
  41fd11:	jmp    0x41fc9e
  41fd13:	adc    al,0xc5
  41fd15:	ss out dx,eax
  41fd17:	test   eax,0x5f3f7a7d
  41fd1c:	jp     0x41fd98
  41fd1e:	dec    eax
  41fd1f:	jno    0x41fd6c
  41fd21:	icebp  
  41fd22:	or     BYTE PTR [eax-0x202a4885],dh
  41fd28:	sub    eax,0xc8918c86
  41fd2d:	pop    es
  41fd2e:	xchg   ebp,eax
  41fd2f:	aad    0x81
  41fd31:	xor    ch,BYTE PTR [edx]
  41fd33:	shl    esp,cl
  41fd35:	push   DWORD PTR es:[eax+0x69]
  41fd39:	cmp    cl,BYTE PTR [ecx]
  41fd3b:	xchg   esp,eax
  41fd3c:	sub    ch,BYTE PTR [ebx+0x6b]
  41fd3f:	cli    
  41fd40:	jmp    0x41fd25
  41fd42:	jmp    0x41fd58
  41fd44:	mov    ch,0x19
  41fd46:	mov    bl,0x13
  41fd48:	cmp    BYTE PTR [ebx+0x426ae2dc],ch
  41fd4e:	enter  0x73a7,0x55
  41fd52:	xchg   ch,ch
  41fd54:	pop    edx
  41fd55:	cmc    
  41fd56:	inc    ebp
  41fd57:	wrmsr  
  41fd59:	and    DWORD PTR [ecx-0x6b],0x864f6c0b
  41fd60:	pop    esp
  41fd61:	fdiv   st,st(2)
  41fd63:	lods   al,BYTE PTR ds:[esi]
  41fd64:	xchg   ebx,eax
  41fd65:	in     eax,dx
  41fd66:	or     BYTE PTR [ebp+0x23],bh
  41fd69:	popa   
  41fd6a:	test   eax,0x15c231a7
  41fd6f:	sub    ebp,DWORD PTR [edx]
  41fd71:	jno    0x41fdb8
  41fd73:	pop    edi
  41fd74:	in     al,0x6b
  41fd76:	jb     0x41fd1c
  41fd78:	adc    dh,0x4d
  41fd7b:	push   ebp
  41fd7c:	inc    ebx
  41fd7d:	inc    edi
  41fd7e:	pop    es
  41fd7f:	xor    ebp,0xc19cbe17
  41fd85:	stos   DWORD PTR es:[edi],eax
  41fd86:	popf   
  41fd87:	pop    ss
  41fd88:	mov    es,WORD PTR [esi-0x12]
  41fd8b:	and    eax,0xde08b843
  41fd90:	cmp    al,0x4e
  41fd92:	pop    es
  41fd93:	aas    
  41fd94:	add    cl,ch
  41fd96:	repnz push ecx
  41fd98:	xchg   DWORD PTR [edx],eax
  41fd9a:	cmp    al,0xd7
  41fd9c:	test   DWORD PTR [esi],ecx
  41fd9e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fd9f:	out    dx,al
  41fda0:	in     al,dx
  41fda1:	pop    edi
  41fda2:	push   ds
  41fda3:	sub    bh,dh
  41fda5:	push   es
  41fda6:	xchg   esi,eax
  41fda7:	adc    BYTE PTR [ebp-0x17],al
  41fdaa:	inc    eax
  41fdab:	jp     0x41fe1e
  41fdad:	dec    eax
  41fdae:	add    cl,BYTE PTR [eax+0x6ec6d56c]
  41fdb4:	int    0x93
  41fdb6:	or     al,0x81
  41fdb8:	(bad)  
  41fdb9:	dec    ebp
  41fdba:	mov    edx,0xd1b5540f
  41fdbf:	fadd   DWORD PTR [esi]
  41fdc1:	(bad)  
  41fdc2:	xlat   BYTE PTR ds:[ebx]
  41fdc3:	mov    al,ds:0x1c8d2e47
  41fdc8:	fucomip st,st(5)
  41fdca:	mov    esp,0xe613a055
  41fdcf:	adc    BYTE PTR [edi-0x24fac243],0x3a
  41fdd6:	or     ebp,DWORD PTR [edi+0x48b53765]
  41fddc:	rol    DWORD PTR [ebp-0x6b],cl
  41fddf:	bnd jg 0x41fdbf
  41fde2:	or     ebx,DWORD PTR [eax+0xc0f7189]
  41fde8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fde9:	outs   dx,DWORD PTR ds:[esi]
  41fdea:	jl     0x41fe0c
  41fdec:	xor    DWORD PTR [ebx-0x7c],esi
  41fdef:	dec    ecx
  41fdf0:	xchg   ecx,eax
  41fdf1:	in     eax,dx
  41fdf2:	sbb    al,BYTE PTR [edx]
  41fdf4:	dec    edx
  41fdf5:	outs   dx,DWORD PTR ds:[esi]
  41fdf6:	mov    edi,0x93ac279b
  41fdfb:	aad    0xdf
  41fdfd:	dec    eax
  41fdfe:	mov    esp,0x38f321e8
  41fe03:	pop    ebp
  41fe04:	mov    ch,0xd3
  41fe06:	jecxz  0x41fe61
  41fe08:	pusha  
  41fe09:	mov    edi,0x145717f3
  41fe0e:	lds    edx,FWORD PTR [ebx+edx*4+0x55]
  41fe12:	xchg   ebx,eax
  41fe13:	push   eax
  41fe14:	cmp    DWORD PTR [esi+eiz*4],0x5288d4f0
  41fe1b:	add    eax,0xee57793
  41fe20:	sbb    ecx,DWORD PTR [edx+0x20a10775]
  41fe26:	ss inc esp
  41fe28:	loopne 0x41fdb1
  41fe2a:	in     eax,0x1d
  41fe2c:	shl    DWORD PTR [esp+ebp*4],0xfa
  41fe30:	clc    
  41fe31:	shr    DWORD PTR [edx-0x4e6cfcbb],cl
  41fe37:	or     DWORD PTR [ecx-0x66],edi
  41fe3a:	fld    DWORD PTR [ecx]
  41fe3c:	push   ds
  41fe3d:	cmp    eax,0x4198bc72
  41fe42:	and    DWORD PTR [eax],esp
  41fe44:	mov    edx,0x2a6089f3
  41fe49:	add    ebx,DWORD PTR [edi+ebx*4]
  41fe4c:	mov    al,es:0x78265f64
  41fe52:	out    dx,al
  41fe53:	push   edi
  41fe54:	in     eax,0x38
  41fe56:	sub    DWORD PTR [ebx+0x47b5a8a],0xffffffee
  41fe5d:	adc    bh,BYTE PTR [esi-0x7a015dc]
  41fe63:	cli    
  41fe64:	xor    DWORD PTR [ecx],edx
  41fe66:	and    ebx,DWORD PTR [edx+0x29]
  41fe69:	(bad)  
  41fe6a:	in     eax,dx
  41fe6b:	jg     0x41fe13
  41fe6d:	xchg   esp,eax
  41fe6e:	mov    eax,0x12ee677d
  41fe73:	mov    dl,0x2b
  41fe75:	mov    ch,BYTE PTR [ebp+0x1b]
  41fe78:	fisub  DWORD PTR [ecx+0x7405fb1c]
  41fe7e:	call   FWORD PTR [ebp+ebp*8+0x3523f577]
  41fe85:	jl     0x41fe95
  41fe87:	jecxz  0x41fe81
  41fe89:	int3   
  41fe8a:	clc    
  41fe8b:	push   ebx
  41fe8c:	xchg   edx,eax
  41fe8d:	(bad)  
  41fe8e:	pop    ds
  41fe8f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fe90:	inc    ecx
  41fe91:	int    0x69
  41fe93:	jb     0x41fe26
  41fe95:	pop    edi
  41fe96:	jg     0x41fee6
  41fe98:	ss repnz mov dh,0x7f
  41fe9c:	xchg   BYTE PTR [edx-0x20],ah
  41fe9f:	iret   
  41fea0:	mov    eax,0x47686ddc
  41fea5:	mov    ch,0x19
  41fea7:	repz loopne 0x41fed7
  41feaa:	push   es
  41feab:	xchg   ebp,eax
  41feac:	ret    
  41fead:	or     DWORD PTR [ebp+0x23fc20b8],eax
  41feb3:	push   es
  41feb4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41feb5:	jl     0x41fe63
  41feb7:	inc    ecx
  41feb8:	sub    DWORD PTR [ebp+eiz*4+0x2f3a1f54],ecx
  41febf:	pop    ebx
  41fec0:	mov    bl,0x44
  41fec2:	push   cs
  41fec3:	xchg   BYTE PTR [esp+eax*2-0x59120f5d],dh
  41feca:	mov    esp,DWORD PTR ds:0xa752683a
  41fed0:	mov    bh,0x4d
  41fed2:	dec    si
  41fed4:	inc    esp
  41fed5:	stos   BYTE PTR es:[edi],al
  41fed6:	adc    esi,edi
  41fed8:	shr    BYTE PTR [ebx],1
  41feda:	pop    es
  41fedb:	cmp    ah,al
  41fedd:	xchg   esp,eax
  41fede:	aaa    
  41fedf:	sahf   
  41fee0:	xchg   ebp,eax
  41fee1:	cmp    edi,eax
  41fee3:	push   ds
  41fee4:	scas   eax,DWORD PTR es:[edi]
  41fee5:	stos   DWORD PTR es:[edi],eax
  41fee6:	(bad)  
  41fee8:	(bad)  
  41feea:	or     dl,dl
  41feec:	sub    al,0xe8
  41feee:	inc    ebp
  41feef:	fstp   QWORD PTR [ebx-0x6498e2d8]
  41fef5:	clc    
  41fef6:	lds    ebx,FWORD PTR [eax]
  41fef8:	xor    eax,eax
  41fefa:	pushf  
  41fefb:	and    BYTE PTR [ebp+0xab50ab2],ch
  41ff01:	les    edi,FWORD PTR [eax+0x2a]
  41ff04:	out    0xf8,al
  41ff06:	push   esp
  41ff07:	(bad)  
  41ff08:	(bad)  
  41ff09:	fisubr WORD PTR [edi-0x20]
  41ff0c:	push   ecx
  41ff0d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ff0e:	sahf   
  41ff0f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ff10:	leave  
  41ff11:	(bad)  [ebx+edx*8-0x3a35ad8e]
  41ff18:	push   ecx
  41ff19:	push   edi
  41ff1a:	push   esi
  41ff1b:	out    0xfb,eax
  41ff1d:	test   BYTE PTR [edi+0x5451fb2e],cl
  41ff23:	sub    cl,ch
  41ff25:	mov    al,ds:0x9ddd842b
  41ff2a:	leave  
  41ff2b:	ret    0xa0b8
  41ff2e:	fmul   DWORD PTR [ecx]
  41ff30:	in     al,0x10
  41ff32:	(bad)  
  41ff33:	cmp    DWORD PTR [ebp+0x5b6f71f1],ecx
  41ff39:	pop    es
  41ff3a:	mov    cl,0xa7
  41ff3c:	jle    0x41fee3
  41ff3e:	cwde   
  41ff3f:	inc    ebx
  41ff40:	jle    0x41ff32
  41ff42:	pop    es
  41ff43:	popf   
  41ff44:	push   0x633e0a00
  41ff49:	xor    al,0xe7
  41ff4b:	pop    ecx
  41ff4c:	add    al,0x91
  41ff4e:	mov    eax,ds:0xab2c787a
  41ff53:	add    BYTE PTR [ebx],ah
  41ff55:	shr    edi,0x54
  41ff58:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ff59:	sub    esi,edx
  41ff5b:	push   cs
  41ff5c:	ret    
  41ff5d:	pop    ecx
  41ff5e:	inc    edx
  41ff5f:	iret   
  41ff60:	inc    esp
  41ff61:	fidiv  WORD PTR [ebx+0x4dcb45bc]
  41ff67:	inc    edx
  41ff68:	jno    0x41ff85
  41ff6a:	lods   eax,DWORD PTR ds:[esi]
  41ff6b:	les    ebx,FWORD PTR ds:0xb1678656
  41ff71:	ins    BYTE PTR es:[edi],dx
  41ff72:	in     al,dx
  41ff73:	pop    ebp
  41ff74:	fadd   DWORD PTR [esi]
  41ff76:	xor    ebx,DWORD PTR [edi+0x2c]
  41ff79:	add    al,0x4
  41ff7b:	(bad)  
  41ff7c:	retf   0x39d6
  41ff7f:	enter  0x4719,0xe6
  41ff83:	jp     0x41ff96
  41ff85:	xchg   esp,eax
  41ff86:	je     0x41ffb5
  41ff88:	(bad)  [esi-0x6f9d07d]
  41ff8e:	mul    DWORD PTR [ebx+0x47]
  41ff91:	shl    DWORD PTR [edi],0xe2
  41ff94:	push   0xbf7e2e75
  41ff99:	sti    
  41ff9a:	cmp    al,BYTE PTR [esi+0x4]
  41ff9d:	xchg   ebp,eax
  41ff9e:	xchg   esp,eax
  41ff9f:	das    
  41ffa0:	(bad)  
  41ffa1:	in     eax,dx
  41ffa2:	adc    DWORD PTR [edi-0x4a552e4e],0x6787a44b
  41ffac:	mov    ebp,0x544b74f7
  41ffb1:	pusha  
  41ffb2:	(bad)  
  41ffb3:	mov    ebx,0xefb1ecc7
  41ffb8:	sbb    cl,BYTE PTR [esi-0x7af8a9fb]
  41ffbe:	mov    al,0x71
  41ffc0:	(bad)  
  41ffc1:	shl    DWORD PTR [ebp-0x27a02972],0x39
  41ffc8:	jmp    0xb567:0x5b558917
  41ffcf:	pop    ds
  41ffd0:	push   ecx
  41ffd1:	push   ebx
  41ffd2:	lds    esp,FWORD PTR [ebp+0x2a66efbe]
  41ffd8:	in     eax,dx
  41ffd9:	inc    esi
  41ffda:	ss das 
  41ffdc:	cmp    DWORD PTR [edi+0x1c],eax
  41ffdf:	(bad)  
  41ffe0:	mov    eax,0x8b027289
  41ffe5:	imul   esp,DWORD PTR [ecx+0x31],0xe1629d77
  41ffec:	or     al,0xdd
  41ffee:	sti    
  41ffef:	test   DWORD PTR [ebp-0x5d],0xf93a9136
  41fff6:	add    eax,0x67b59dff
  41fffb:	add    ebp,eax
  41fffd:	xchg   edi,eax
  41fffe:	mov    eax,ds:0xdcf270ae
  420003:	xchg   esi,eax
  420004:	js     0x420012
  420006:	cmp    al,0xf
  420008:	xchg   ebx,eax
  420009:	int3   
  42000a:	add    DWORD PTR [ebp+0x373ce34c],ecx
  420010:	ficom  WORD PTR [edx-0x78]
  420013:	mov    esi,0x22fe828e
  420018:	sub    DWORD PTR [edi+0x13],0x9e437aaf
  42001f:	xchg   ebx,eax
  420020:	(bad)  
  420021:	mov    ds:0xcea6cabd,al
  420026:	cli    
  420027:	nop
  420028:	dec    eax
  420029:	scas   al,BYTE PTR es:[edi]
  42002a:	xor    DWORD PTR [edi],eax
  42002c:	inc    esp
  42002d:	imul   esi,DWORD PTR [ebp+0x73],0xd566d2e4
  420034:	mul    BYTE PTR [ebx+edx*8]
  420037:	mov    ebx,0xdc0589c2
  42003c:	mov    ah,0x96
  42003e:	mov    ebp,0x58370226
  420043:	jo     0x41ffc9
  420045:	jg     0x41ffe0
  420047:	retf   
  420048:	hlt    
  420049:	jecxz  0x41ffd0
  42004b:	test   eax,0x3df76252
  420050:	cmp    ecx,ebx
  420052:	loop   0x41ffe7
  420054:	push   cs
  420055:	pop    ebx
  420056:	mov    dh,0x59
  420058:	aas    
  420059:	jmp    DWORD PTR [edi+0x30112fd6]
  42005f:	push   0xffffffcb
  420061:	sbb    DWORD PTR [eax-0x77ee14f3],ebp
  420067:	add    al,0x16
  420069:	jmp    0x8cfe:0xf6832ae4
  420070:	sbb    bh,al
  420072:	cmp    DWORD PTR [ecx+0x7b],esi
  420075:	pop    ebx
  420076:	outs   dx,BYTE PTR ds:[esi]
  420077:	inc    esp
  420078:	in     eax,dx
  420079:	sbb    DWORD PTR [edi+0x2],esp
  42007c:	inc    edx
  42007d:	cmp    BYTE PTR [esi],dh
  42007f:	and    al,0x1e
  420081:	mov    dl,0x5f
  420083:	pop    ss
  420084:	nop
  420085:	inc    ecx
  420086:	retf   
  420087:	sbb    BYTE PTR [esp+esi*2-0x45],dh
  42008b:	enter  0x9d4,0xe
  42008f:	jecxz  0x4200a6
  420091:	push   0x81d64ce7
  420096:	jmp    FWORD PTR [ecx+0xe6f1bdd]
  42009c:	or     edi,DWORD PTR [eax]
  42009e:	fiadd  WORD PTR [ebx-0x3b464ca4]
  4200a4:	mov    dh,0x7a
  4200a6:	xor    edx,ecx
  4200a8:	test   al,0x20
  4200aa:	mov    WORD PTR [esi-0x1a],ds
  4200ad:	adc    ch,BYTE PTR [ebx+0x35]
  4200b0:	(bad)  
  4200b1:	in     eax,0x2f
  4200b3:	scas   al,BYTE PTR es:[edi]
  4200b4:	repz in eax,dx
  4200b6:	xor    al,0x7a
  4200b8:	ins    BYTE PTR es:[edi],dx
  4200b9:	iret   
  4200ba:	in     eax,0xc4
  4200bc:	xchg   edi,eax
  4200bd:	shr    DWORD PTR [edi],0xbd
  4200c0:	(bad)  
  4200c2:	add    cl,dl
  4200c4:	dec    ebx
  4200c5:	mov    cl,0xa
  4200c7:	jae    0x420106
  4200c9:	imul   edi,DWORD PTR [ebx],0x97c6f0a1
  4200cf:	pop    ecx
  4200d0:	sbb    bl,dl
  4200d2:	in     al,dx
  4200d3:	mov    dh,0xdc
  4200d5:	fimul  DWORD PTR [esi+0x7d]
  4200d8:	clc    
  4200d9:	aad    0xd
  4200db:	shr    DWORD PTR [edi],1
  4200dd:	inc    esp
  4200de:	jnp    0x42007a
  4200e0:	call   0x83a095b8
  4200e5:	test   eax,0xbf29bdb6
  4200ea:	retf   0x87aa
  4200ed:	sahf   
  4200ee:	sub    eax,0x4cec3b3a
  4200f3:	addr16 jmp 0x4167:0x5e92979d
  4200fb:	add    al,0xf3
  4200fd:	ret    
  4200fe:	dec    ecx
  4200ff:	jns    0x4200fa
  420101:	jmp    0x8dab:0x5d740dc0
  420108:	ja     0x4200d2
  42010a:	scas   eax,DWORD PTR es:[edi]
  42010b:	addr16 pusha 
  42010d:	(bad)  
  42010e:	rcr    BYTE PTR [eax-0x8],1
  420111:	cld    
  420112:	rol    cl,1
  420114:	in     eax,0x9a
  420116:	(bad)
  42011a:	inc    esp
  42011b:	xchg   ebp,eax
  42011c:	cmp    al,0x22
  42011e:	jne    0x420181
  420120:	push   0xce5b2955
  420125:	loopne 0x420109
  420127:	lea    ecx,[eax-0x76e4ff5b]
  42012d:	in     eax,0x88
  42012f:	xor    ah,al
  420131:	(bad)  
  420132:	fstp   QWORD PTR [ebx]
  420134:	stos   DWORD PTR es:[edi],eax
  420135:	in     eax,0x24
  420137:	out    0x1a,eax
  420139:	sbb    BYTE PTR [ecx-0x3266b926],ch
  42013f:	sar    DWORD PTR [ebx+0x3b134b0f],cl
  420145:	in     al,dx
  420146:	mov    ah,0xf4
  420148:	dec    esp
  420149:	mov    ds:0x293cc981,eax
  42014e:	jb     0x4201c2
  420150:	stos   DWORD PTR es:[edi],eax
  420151:	int    0x1c
  420153:	push   eax
  420154:	xor    bl,al
  420156:	shl    BYTE PTR [edi+ebx*2-0x72],cl
  42015a:	sbb    al,0x5d
  42015c:	add    edx,DWORD PTR [eax+0x48]
  42015f:	cli    
  420160:	test   DWORD PTR [edi],ebp
  420162:	mov    BYTE PTR [ecx+ecx*1],dl
  420165:	lock jmp 0xd500f4a5
  42016b:	int    0xa
  42016d:	mov    edx,0x5ec16e03
  420172:	push   es
  420173:	in     eax,0xe1
  420175:	in     eax,dx
  420176:	xchg   esi,eax
  420177:	call   0x7b7c:0x11db24e9
  42017e:	es dec esi
  420180:	stos   BYTE PTR es:[edi],al
  420181:	mov    al,0x8c
  420183:	and    DWORD PTR [edx],ebp
  420185:	test   edx,ebp
  420187:	(bad)  
  420188:	movs   BYTE PTR es:[edi],BYTE PTR gs:[esi]
  42018a:	xor    al,0x9b
  42018c:	and    BYTE PTR [edx+0x9c8c3a4],0x49
  420193:	and    eax,0x7d2a8ffb
  420198:	fnstcw WORD PTR [esi+0x6d]
  42019b:	cli    
  42019c:	fndisi(8087 only) 
  42019e:	mov    dh,0xee
  4201a0:	out    dx,al
  4201a1:	or     DWORD PTR [eax+0xaa044f1],ecx
  4201a7:	jmp    FWORD PTR [ecx+0x68]
  4201aa:	mov    WORD PTR es:[edi+eiz*4],?
  4201ae:	sub    BYTE PTR [ecx-0x58b3eb9a],0x4a
  4201b5:	loop   0x42016e
  4201b7:	adc    DWORD PTR [eax+0x5235f870],eax
  4201bd:	and    ch,bh
  4201bf:	fcomip st,st(4)
  4201c1:	das    
  4201c2:	sub    ecx,ecx
  4201c4:	stc    
  4201c5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4201c6:	icebp  
  4201c7:	inc    edx
  4201c8:	test   BYTE PTR [ebp+0x2b],0xac
  4201cc:	imul   edx,DWORD PTR [ecx+0x3fcd6bfb],0xffffffa3
  4201d3:	pop    ss
  4201d4:	push   es
  4201d5:	in     al,0x1b
  4201d7:	xchg   ebx,eax
  4201d8:	sbb    dl,ch
  4201da:	cmp    DWORD PTR [ebx+0x63e979f5],edx
  4201e0:	imul   esp,ebp,0xffffffe5
  4201e3:	jecxz  0x420220
  4201e5:	pushw  0xffff
  4201e8:	mov    ebp,0x9048623d
  4201ed:	pop    ss
  4201ee:	imul   edx,DWORD PTR [eax-0x6a],0xffffff90
  4201f2:	stos   BYTE PTR es:[edi],al
  4201f3:	adc    al,0xa1
  4201f5:	test   al,0xfa
  4201f7:	jb     0x420224
  4201f9:	add    BYTE PTR [edx],dl
  4201fb:	sbb    eax,0x40fd7e2e
  420200:	ins    BYTE PTR es:[edi],dx
  420201:	sbb    dl,dl
  420203:	pop    ds
  420204:	sub    BYTE PTR [edi-0x7d],dh
  420207:	or     bl,ah
  420209:	std    
  42020a:	int    0xd4
  42020c:	mov    ah,BYTE PTR [edx+ebx*8]
  42020f:	push   ecx
  420210:	sub    dh,BYTE PTR [ebx]
  420212:	xchg   esi,eax
  420213:	addr16 sti 
  420215:	lea    eax,ds:0x8834d225
  42021b:	dec    esp
  42021c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42021d:	or     eax,0x82ce1775
  420222:	xchg   DWORD PTR ds:0x630fd4eb,esi
  420228:	ror    DWORD PTR [edx+ecx*2-0x71],1
  42022c:	or     ebx,esi
  42022e:	dec    edi
  42022f:	cld    
  420230:	je     0x4201bd
  420232:	or     eax,0x23dc3a8c
  420237:	xchg   edx,eax
  420238:	pop    ds
  420239:	xor    eax,0xa3404f8a
  42023e:	fwait
  42023f:	bound  edi,QWORD PTR ss:[edi]
  420242:	repnz iret 
  420244:	ss stc 
  420246:	dec    ebp
  420247:	movd   DWORD PTR ds:0xdb248842,mm5
  42024e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42024f:	pop    ss
  420250:	cld    
  420251:	jbe    0x4202c9
  420253:	sbb    dl,BYTE PTR [edx+edx*8-0x6]
  420257:	mov    dh,0x97
  420259:	and    eax,0xda1190e0
  42025e:	xor    eax,0x77016e29
  420263:	jae    0x42026c
  420265:	call   0x56e8:0x654e88c2
  42026c:	jns    0x4202c9
  42026e:	sbb    cl,BYTE PTR [ebx-0x4]
  420271:	mov    eax,ds:0x5614fe4e
  420276:	addr16 xchg edx,esp
  420279:	jge    0x42022e
  42027b:	and    BYTE PTR [ecx],bh
  42027d:	or     al,0xb5
  42027f:	js     0x42020d
  420281:	xlat   BYTE PTR ds:[ebx]
  420282:	in     eax,dx
  420283:	out    0x1e,al
  420285:	call   0xb485d4ea
  42028a:	or     edx,DWORD PTR [esi-0x4d]
  42028d:	iret   
  42028e:	hlt    
  42028f:	inc    edx
  420290:	xlat   BYTE PTR ds:[ebx]
  420291:	push   cs
  420292:	jmp    0x420222
  420294:	and    BYTE PTR [ecx-0x73c373ca],0xcd
  42029b:	ror    DWORD PTR [ebp+ecx*1-0xdd4096f],cl
  4202a2:	aas    
  4202a3:	in     al,0xb3
  4202a5:	sub    ebx,edi
  4202a7:	sahf   
  4202a8:	repz xchg edi,eax
  4202aa:	fistp  WORD PTR [edx+0x7697763d]
  4202b0:	sbb    esp,esi
  4202b2:	fimul  DWORD PTR [esi+ecx*8-0xe]
  4202b6:	dec    edi
  4202b7:	rol    BYTE PTR [edx-0x40235942],cl
  4202bd:	dec    edi
  4202be:	mov    ecx,?
  4202c0:	aad    0x2c
  4202c2:	jbe    0x4202e1
  4202c4:	inc    ecx
  4202c5:	mov    esi,0x8bd9243c
  4202ca:	add    bh,dl
  4202cc:	fucomp st(6)
  4202ce:	add    edx,DWORD PTR [ebp+edi*1+0x4d]
  4202d2:	sub    BYTE PTR [ecx],ah
  4202d4:	mov    ch,0x2b
  4202d6:	push   ss
  4202d7:	sub    al,0xae
  4202d9:	js     0x42027f
  4202db:	test   DWORD PTR [ecx*8-0x5b95335f],esp
  4202e2:	fldenv [edi+ebx*1+0x5]
  4202e6:	daa    
  4202e7:	sahf   
  4202e8:	fbld   TBYTE PTR [ecx-0x14d0267b]
  4202ee:	mov    ebx,0x1b89be9e
  4202f3:	je     0x42033d
  4202f5:	repnz cmp cl,BYTE PTR [eax-0x76082438]
  4202fc:	add    DWORD PTR [eax],eax
  4202fe:	xchg   edx,eax
  4202ff:	mov    ds:0x7427022a,eax
  420304:	rcr    al,1
  420306:	mov    BYTE PTR [esp+eiz*4],bl
  420309:	jno    0x4202ca
  42030b:	adc    al,0x73
  42030d:	retf   0x7a00
  420310:	sub    BYTE PTR [ecx],cl
  420312:	fild   QWORD PTR [edi-0x35]
  420315:	and    BYTE PTR [eax+0x4c],ch
  420318:	das    
  420319:	xchg   edi,eax
  42031a:	sub    eax,0xf06cd574
  42031f:	fdivrp st(7),st
  420321:	and    BYTE PTR [ecx],dl
  420323:	inc    esp
  420324:	mov    ds:0xcf8f7767,eax
  420329:	cmp    DWORD PTR [ebx+ebx*2-0x18],edx
  42032d:	enter  0x4ad0,0xa5
  420331:	push   ecx
  420332:	mov    ah,0xf6
  420334:	dec    ebp
  420335:	mov    eax,ds:0x549e8e2e
  42033a:	xlat   BYTE PTR ds:[ebx]
  42033b:	dec    ebp
  42033c:	std    
  42033d:	int3   
  42033e:	sub    eax,0x26d13290
  420343:	pop    ss
  420344:	lds    eax,FWORD PTR [ecx]
  420346:	aad    0xd4
  420348:	adc    al,0xa
  42034a:	mov    esi,0x1892bc3d
  42034f:	add    ebp,DWORD PTR [edx+esi*8-0x141cf1f3]
  420356:	xor    ebp,DWORD PTR [eax]
  420358:	or     BYTE PTR [ecx+0x1521fa83],ah
  42035e:	xchg   ebp,eax
  42035f:	imul   ebp,DWORD PTR [esi+0x5f],0xf9dcc7b
  420366:	xor    BYTE PTR [edi+0x54],dh
  420369:	scas   eax,DWORD PTR es:[edi]
  42036a:	pop    ds
  42036b:	or     BYTE PTR [eax+0x7],dl
  42036e:	lods   eax,DWORD PTR ds:[esi]
  42036f:	not    DWORD PTR [ebx-0x2b]
  420372:	cli    
  420373:	jnp    0x4203b8
  420375:	ds push ds
  420377:	and    ebp,DWORD PTR gs:[eiz*2+0xde5f502]
  42037f:	(bad)  
  420380:	push   0x9fad3d4d
  420385:	xchg   esp,eax
  420386:	test   al,0x2d
  420388:	loopne 0x4203f9
  42038a:	jmp    0x42032a
  42038c:	loop   0x42032c
  42038e:	sub    DWORD PTR [ebp-0x2772d738],0xbd412e67
  420398:	das    
  420399:	inc    esp
  42039a:	into   
  42039b:	xchg   DWORD PTR [ebp-0xba55c87],ecx
  4203a1:	jbe    0x4203ca
  4203a3:	in     al,dx
  4203a4:	jbe    0x42034a
  4203a6:	push   ds
  4203a7:	sbb    edi,DWORD PTR [edi+0x70f0f028]
  4203ad:	inc    esi
  4203ae:	popa   
  4203af:	add    BYTE PTR [ecx+0x337207a6],ch
  4203b5:	(bad)  
  4203b6:	push   cs
  4203b7:	daa    
  4203b8:	xchg   ebp,eax
  4203b9:	into   
  4203ba:	arpl   WORD PTR [edx-0x54a79476],dx
  4203c0:	adc    bh,BYTE PTR [esi]
  4203c2:	or     ah,BYTE PTR [eax-0x2fe2cd67]
  4203c8:	push   eax
  4203c9:	mov    dh,0xf7
  4203cb:	into   
  4203cc:	mov    DWORD PTR [eax+0x2284b5e6],edx
  4203d2:	add    cl,ch
  4203d4:	or     eax,0x960333a
  4203d9:	int    0x89
  4203db:	sbb    al,0xd6
  4203dd:	push   ss
  4203de:	jns    0x4203d3
  4203e0:	pop    esi
  4203e1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4203e2:	xchg   ebp,eax
  4203e3:	call   0x5831316a
  4203e8:	dec    ebp
  4203e9:	xlat   BYTE PTR ds:[ebx]
  4203ea:	out    dx,al
  4203eb:	leave  
  4203ec:	sub    eax,0x7c91a113
  4203f1:	pop    ss
  4203f2:	arpl   sp,si
  4203f4:	popf   
  4203f5:	lahf   
  4203f6:	push   0xd9da44fe
  4203fb:	dec    ecx
  4203fc:	enter  0xeec,0xa6
  420400:	stc    
  420401:	stos   DWORD PTR es:[edi],eax
  420402:	mov    ah,0xf6
  420404:	addr16 aaa 
  420406:	shr    DWORD PTR [edx],0x8d
  420409:	add    ah,BYTE PTR ds:0x1db517a8
  42040f:	(bad)  
  420410:	adc    eax,ebx
  420412:	jg     0x42048b
  420414:	xchg   ebx,eax
  420415:	pop    ebp
  420416:	jmp    0x8069:0x3b44c616
  42041d:	pop    es
  42041e:	adc    edx,DWORD PTR [esi+0x2c7dc854]
  420424:	mov    ds:0xb83978a8,al
  420429:	outs   dx,BYTE PTR ds:[esi]
  42042a:	das    
  42042b:	pop    esi
  42042c:	add    eax,0x1178339d
  420431:	(bad)  
  420433:	dec    ebp
  420434:	jb     0x42049f
  420436:	sub    dl,BYTE PTR [ebx+0x1c766325]
  42043c:	jmp    0x7ff40fbf
  420441:	int3   
  420442:	inc    ebp
  420443:	(bad)  [ecx-0x73]
  420446:	(bad)  
  420447:	or     eax,DWORD PTR [ebx-0x88a962f]
  42044d:	mov    ebp,ecx
  42044f:	pop    ss
  420450:	cmc    
  420451:	cmc    
  420452:	mov    eax,0x643fd926
  420457:	jge    0x420442
  420459:	mov    al,0xbd
  42045b:	pop    esi
  42045c:	or     DWORD PTR [ebp-0x59],eax
  42045f:	ret    0x533
  420462:	retf   0x7de9
  420465:	ss jmp 0xfb5:0x64e2694b
  42046d:	mov    bl,0x87
  42046f:	push   esi
  420470:	int    0x56
  420472:	xchg   ecx,eax
  420473:	call   FWORD PTR [ecx]
  420475:	push   cs
  420476:	(bad)  
  420477:	into   
  420478:	adc    al,0x73
  42047a:	xor    eax,0x405ccd9a
  42047f:	popf   
  420480:	sbb    al,0x44
  420483:	retf   0xd069
  420486:	aad    0xac
  420488:	in     eax,0xc7
  42048a:	or     BYTE PTR [esi-0x72],dl
  42048d:	ret    
  42048e:	dec    esp
  42048f:	(bad)  
  420490:	mov    cl,0x4a
  420492:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420493:	js     0x4204eb
  420495:	gs dec ebx
  420497:	inc    ebx
  420498:	or     DWORD PTR [edx],ecx
  42049a:	mov    al,ds:0x8f71d2e7
  42049f:	scas   eax,DWORD PTR es:[edi]
  4204a0:	sub    dh,al
  4204a2:	mov    al,ds:0xa49b9734
  4204a7:	mov    BYTE PTR [eax],dh
  4204a9:	aad    0xdd
  4204ab:	je     0x420508
  4204ad:	cmp    BYTE PTR [ebx+ebx*1],cl
  4204b0:	(bad)  
  4204b2:	push   eax
  4204b3:	push   ebx
  4204b4:	dec    esi
  4204b5:	aam    0x7a
  4204b7:	pop    eax
  4204b8:	daa    
  4204b9:	push   ebp
  4204ba:	sbb    eax,DWORD PTR [ecx]
  4204bc:	add    bl,BYTE PTR [ebx+0x308745f9]
  4204c2:	mov    ebp,0xabb6eb13
  4204c7:	iret   
  4204c8:	ds jmp 0x4204b0
  4204cb:	jns    0x4204fe
  4204cd:	fcomip st,st(7)
  4204cf:	stc    
  4204d0:	rcr    DWORD PTR [edx+0xf403ce3],0x60
  4204d7:	iret   
  4204d8:	(bad)
  4204dd:	cmp    ebp,DWORD PTR [edx+ebx*2+0x15]
  4204e1:	sbb    DWORD PTR [edx-0x40],esp
  4204e4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4204e5:	cmp    BYTE PTR [ebp-0x57cb79cb],ch
  4204eb:	cmp    eax,0xfb9cfad8
  4204f0:	fs pop eax
  4204f2:	add    bh,BYTE PTR [ebp-0x2f78722e]
  4204f8:	push   eax
  4204f9:	push   eax
  4204fa:	mov    esp,0x7d69fa3
  4204ff:	popf   
  420500:	jmp    0x3ebf8c26
  420505:	fcmovbe st,st(1)
  420507:	xor    DWORD PTR [esi+0x5a],0x550642c4
  42050e:	call   0x96077064
  420513:	mov    cl,0x70
  420515:	jmp    0x5f4a:0xf36504fb
  42051c:	mov    esi,0xe4a3b0e5
  420521:	jle    0x4204ef
  420523:	scas   al,BYTE PTR es:[edi]
  420524:	mov    ecx,0x3c50b00c
  420529:	loopne 0x420532
  42052b:	out    dx,eax
  42052c:	jno    0x420514
  42052e:	ins    BYTE PTR es:[edi],dx
  42052f:	add    dh,BYTE PTR [edx+0x18]
  420532:	jb     0x4205aa
  420534:	clc    
  420535:	rol    esp,cl
  420537:	mov    esp,0xf18be2ef
  42053c:	dec    ebx
  42053d:	jmp    0x2b90:0xe81343b3
  420544:	adc    bl,0xc0
  420547:	pop    esp
  420548:	push   esp
  420549:	dec    ecx
  42054a:	pop    ss
  42054b:	sub    eax,0x276e3634
  420550:	jmp    0xd89e:0x55157807
  420557:	call   0x9ed395d2
  42055c:	in     al,dx
  42055d:	leave  
  42055e:	nop
  42055f:	mov    edx,0x1cdf8801
  420564:	or     al,bl
  420566:	sub    ch,BYTE PTR [eax-0x19]
  420569:	mov    ch,0x94
  42056b:	jns    0x42055d
  42056d:	pop    edx
  42056e:	adc    cl,bl
  420570:	nop
  420571:	push   ss
  420572:	cli    
  420573:	sbb    eax,0x7e7d0788
  420578:	fiadd  DWORD PTR [ebp-0x9]
  42057b:	sbb    BYTE PTR [edi+0x3d],dh
  42057e:	jae    0x42058c
  420580:	add    eax,0xf41033f1
  420585:	lock nop
  420587:	dec    ecx
  420588:	stos   BYTE PTR es:[edi],al
  420589:	into   
  42058a:	inc    ebx
  42058b:	call   0xe2848252
  420590:	popa   
  420591:	sbb    eax,0x8acd7be0
  420596:	das    
  420597:	sbb    ecx,DWORD PTR [ebp-0x7eb590bd]
  42059d:	neg    BYTE PTR [ebx-0x38]
  4205a0:	rol    dh,cl
  4205a2:	lods   al,BYTE PTR ds:[esi]
  4205a3:	adc    ebx,0xe121f51a
  4205a9:	xchg   ebp,eax
  4205aa:	mov    ecx,0xd8b86e28
  4205af:	dec    ebp
  4205b0:	sbb    al,0x92
  4205b2:	fs jp  0x42054d
  4205b5:	dec    BYTE PTR [edi+0x2ff70f92]
  4205bb:	sahf   
  4205bc:	out    dx,al
  4205bd:	imul   DWORD PTR ds:0x8e832fd4
  4205c3:	cs jmp 0xd11a:0xec249aae
  4205cb:	mov    dl,0xcf
  4205cd:	sub    al,0x5
  4205cf:	fsubr  DWORD PTR [edi+0x29bb9175]
  4205d5:	cdq    
  4205d6:	outs   dx,BYTE PTR ds:[esi]
  4205d7:	shl    edi,cl
  4205d9:	sbb    esi,DWORD PTR [esi+ebp*2+0x54]
  4205dd:	(bad)  [eax]
  4205df:	push   edi
  4205e0:	ret    
  4205e1:	push   edx
  4205e2:	cli    
  4205e3:	pop    esi
  4205e4:	scas   eax,DWORD PTR es:[edi]
  4205e5:	daa    
  4205e6:	daa    
  4205e7:	iret   
  4205e8:	mov    dl,0xa8
  4205ea:	arpl   WORD PTR [edx+0x12],bx
  4205ed:	sub    esi,DWORD PTR [ebx]
  4205ef:	stos   BYTE PTR es:[edi],al
  4205f0:	lock add esi,DWORD PTR [ecx+0x3da64b44]
  4205f7:	mov    ch,0xa8
  4205f9:	xor    BYTE PTR [eax],dl
  4205fb:	lods   al,BYTE PTR ds:[esi]
  4205fc:	ins    DWORD PTR es:[edi],dx
  4205fd:	mov    al,ds:0x19d7b24d
  420602:	xchg   BYTE PTR [ebx+ebp*4],ch
  420605:	test   ebp,0x6a4af369
  42060b:	pop    ebx
  42060c:	dec    ecx
  42060d:	jp     0x42060d
  42060f:	sub    cl,BYTE PTR [eax-0xa]
  420612:	lock push ecx
  420614:	call   0x562e:0x7598d01a
  42061b:	icebp  
  42061c:	pop    ebp
  42061d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42061e:	sbb    DWORD PTR [edx-0x20],ebx
  420621:	mov    esp,0xf2c9e2d4
  420626:	dec    esi
  420627:	mov    esp,DWORD PTR [ebx]
  420629:	dec    ebp
  42062a:	sub    al,0x3
  42062c:	in     eax,dx
  42062d:	xor    DWORD PTR [ecx-0x66d6a6c4],edi
  420633:	cmp    ebx,edi
  420635:	mov    eax,0x54b0e7e2
  42063a:	jmp    FWORD PTR [ecx+0x12]
  42063d:	inc    ecx
  42063e:	ret    0x3204
  420641:	call   0xee96:0xa550f44a
  420648:	xor    eax,0xac602324
  42064d:	jo     0x4206af
  42064f:	jmp    0xc1d8fdcb
  420654:	(bad)  
  420655:	(bad)  [edi+esi*4-0x55]
  420659:	leave  
  42065a:	js     0x42064a
  42065c:	mov    cl,0xe1
  42065e:	outs   dx,DWORD PTR ds:[esi]
  42065f:	inc    edx
  420660:	cmp    eax,0x671786a7
  420665:	lahf   
  420666:	nop
  420667:	cmc    
  420668:	sbb    al,0xc
  42066a:	and    DWORD PTR [ebp+0x2cfc46e],ebp
  420670:	sbb    dh,bl
  420672:	add    bl,BYTE PTR [ebp+ebx*1-0xb]
  420676:	xchg   ecx,eax
  420677:	cmc    
  420678:	pusha  
  420679:	and    DWORD PTR [ecx+ebx*8-0x70],edx
  42067d:	inc    esp
  42067e:	adc    BYTE PTR [esi+0x4],0x92
  420682:	jno    0x4206c9
  420684:	mov    ds:0x270aaa78,al
  420689:	cmc    
  42068a:	inc    ebx
  42068b:	sub    ebx,esp
  42068d:	xchg   DWORD PTR [ecx-0x41],esi
  420690:	push   eax
  420691:	daa    
  420692:	xchg   edi,eax
  420693:	pop    ecx
  420694:	mov    cl,BYTE PTR [esi-0x4d10b0b1]
  42069a:	cwde   
  42069b:	or     BYTE PTR [ebx-0x5c12eb64],cl
  4206a1:	iret   
  4206a2:	shr    DWORD PTR [eax],cl
  4206a4:	sbb    bl,ch
  4206a6:	lahf   
  4206a7:	xchg   ebx,eax
  4206a8:	push   ss
  4206a9:	es je  0x420691
  4206ac:	leave  
  4206ad:	xchg   ebx,eax
  4206ae:	push   ds
  4206af:	(bad)  
  4206b0:	xchg   esi,eax
  4206b1:	mov    ds:0xaedb471,eax
  4206b6:	mov    ebx,0xca0e3d0e
  4206bb:	ror    BYTE PTR [edi+0x9],0xa5
  4206bf:	adc    BYTE PTR [ebp+eax*4-0x1d95c4b2],ch
  4206c6:	in     eax,dx
  4206c7:	pop    esp
  4206c8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4206c9:	jbe    0x42070e
  4206cb:	test   DWORD PTR [edx+0x6f],0x9385ddef
  4206d2:	inc    BYTE PTR [eax-0x16711867]
  4206d8:	aad    0x34
  4206da:	mov    ah,0x1d
  4206dc:	aas    
  4206dd:	(bad)  
  4206de:	(bad)  
  4206df:	jae    0x42074f
  4206e1:	pop    esi
  4206e2:	nop
  4206e3:	mov    dh,0x8a
  4206e5:	dec    ebx
  4206e6:	outs   dx,BYTE PTR ds:[esi]
  4206e7:	jns    0x42075e
  4206e9:	(bad)  
  4206ea:	push   0x8d95b7e4
  4206ef:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4206f0:	mov    dh,0xc
  4206f2:	cmc    
  4206f3:	or     al,0x59
  4206f5:	ficomp WORD PTR [edx]
  4206f7:	push   esp
  4206f8:	xchg   ecx,eax
  4206f9:	rcr    ecx,1
  4206fb:	fidivr DWORD PTR [esi]
  4206fd:	in     eax,0x5
  4206ff:	sti    
  420700:	inc    esi
  420701:	mov    al,0x32
  420703:	fcom   QWORD PTR [ebp-0x1f]
  420706:	out    0x77,eax
  420708:	stos   DWORD PTR es:[edi],eax
  420709:	in     al,0x8e
  42070b:	stos   BYTE PTR es:[edi],al
  42070c:	aad    0xfa
  42070e:	outs   dx,DWORD PTR ds:[esi]
  42070f:	xor    ecx,eax
  420711:	dec    ebp
  420712:	je     0x4206a2
  420714:	fbstp  TBYTE PTR [ecx+0x70f03b4d]
  42071a:	in     al,dx
  42071b:	and    eax,0x92c3980a
  420720:	js     0x4206c8
  420722:	in     al,0x3b
  420724:	mov    edi,gs
  420726:	dec    bp
  420728:	and    dh,al
  42072a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42072b:	outs   dx,DWORD PTR ds:[esi]
  42072c:	dec    ebx
  42072d:	sub    bl,BYTE PTR [ebx-0x70e1ba8a]
  420733:	push   eax
  420734:	daa    
  420735:	test   eax,0xde464cc2
  42073a:	push   ebx
  42073b:	inc    edi
  42073c:	xor    al,0x14
  42073e:	rol    BYTE PTR [ebx],1
  420740:	add    eax,0x1ad5910
  420745:	add    eax,0x47c0fe49
  42074a:	dec    esp
  42074b:	sub    BYTE PTR [ecx],bl
  42074d:	add    al,0xe5
  42074f:	mov    eax,ds:0x5944de1b
  420754:	bound  ebx,QWORD PTR [ebp+0x57]
  420757:	iret   
  420758:	mov    ecx,0xba2ee9da
  42075d:	mov    al,0xc5
  42075f:	sbb    edx,edx
  420761:	mov    bl,0x66
  420763:	jbe    0x420738
  420765:	push   es
  420766:	ds loop 0x420788
  420769:	aaa    
  42076a:	xor    al,0x19
  42076c:	imul   esp,DWORD PTR [ebx-0x1c],0x5ff02dd3
  420773:	push   ss
  420774:	dec    edi
  420775:	sahf   
  420776:	cmp    eax,0xe10b2b6f
  42077b:	jae    0x4206fe
  42077d:	scas   al,BYTE PTR es:[edi]
  42077e:	test   DWORD PTR [ebp+0x2a5da764],0x6a62d75c
  420788:	cmp    ebp,DWORD PTR [eax+ebx*1+0x3f]
  42078c:	gs das 
  42078e:	(bad)  
  42078f:	pop    esp
  420790:	add    eax,0x840332c4
  420795:	dec    eax
  420796:	xchg   esp,eax
  420797:	ins    BYTE PTR es:[edi],dx
  420798:	xor    bl,BYTE PTR [edx+eax*4+0x676e1615]
  42079f:	xor    BYTE PTR [ebx+0xa],ah
  4207a2:	sbb    al,0x9
  4207a4:	enter  0xaeea,0x1c
  4207a8:	mov    bl,0x95
  4207aa:	int3   
  4207ab:	and    BYTE PTR [ecx+ebx*4],0x99
  4207af:	aad    0xba
  4207b1:	add    eax,esp
  4207b3:	dec    edx
  4207b4:	inc    edx
  4207b5:	push   cs
  4207b6:	or     bh,cl
  4207b8:	test   eax,0xea655706
  4207bd:	(bad)  
  4207bf:	jle    0x42074e
  4207c1:	int    0x80
  4207c3:	xchg   ecx,eax
  4207c4:	jns    0x4207ba
  4207c6:	cmp    bh,BYTE PTR [esi-0x6ef8462b]
  4207cc:	xor    eax,0xfbaaee10
  4207d1:	stos   DWORD PTR es:[edi],eax
  4207d2:	push   ebp
  4207d3:	cdq    
  4207d4:	push   esp
  4207d5:	out    dx,eax
  4207d6:	push   ebp
  4207d7:	dec    eax
  4207d8:	mov    dl,0xf2
  4207da:	sub    dh,0xa6
  4207dd:	jge    0x42082d
  4207df:	jmp    DWORD PTR [edi+eiz*8-0x35ad4b9f]
  4207e6:	dec    esp
  4207e7:	retf   0x4ba0
  4207ea:	push   esp
  4207eb:	xor    al,0x24
  4207ed:	jne    0x42080e
  4207ef:	mov    cl,0x28
  4207f1:	cdq    
  4207f2:	stc    
  4207f3:	mov    ch,0x6
  4207f5:	xchg   ebp,eax
  4207f6:	(bad)  
  4207f7:	jo     0x4207ca
  4207f9:	push   0x7af35c4f
  4207fe:	adc    esi,DWORD PTR [ecx-0x16]
  420801:	inc    esi
  420802:	fnstcw WORD PTR [ebp-0x77]
  420805:	push   ebx
  420806:	fwait
  420807:	xchg   DWORD PTR [edi-0x4acaa294],eax
  42080d:	vpshldd ymm2,ymm4,YMMWORD PTR [eax+0x53525f49],0x77
  420818:	mov    edx,0xebfe0e9a
  42081d:	or     eax,0xcf0567cc
  420822:	adc    eax,0x2c303579
  420827:	cmp    DWORD PTR [ecx],0xffffffa2
  42082a:	pop    eax
  42082b:	bound  ebx,QWORD PTR [esi-0x3]
  42082e:	inc    ecx
  42082f:	addr16 hlt 
  420831:	push   ecx
  420832:	mov    cl,cl
  420834:	loope  0x420871
  420836:	inc    ecx
  420837:	cli    
  420838:	iret   
  420839:	inc    esp
  42083a:	push   cs
  42083b:	adc    eax,0x71cbdcaa
  420840:	xor    BYTE PTR [eax-0x2d],bh
  420843:	mov    ecx,DWORD PTR [ebp+0xb]
  420846:	aas    
  420847:	jo     0x420825
  420849:	test   ecx,0xa6216823
  42084f:	mov    cl,0xc6
  420851:	aas    
  420852:	enter  0xc0a7,0xe
  420856:	push   edi
  420857:	inc    ebp
  420858:	dec    esp
  420859:	not    DWORD PTR [edi-0xe11ca0]
  42085f:	mov    WORD PTR [ecx],ds
  420861:	and    eax,0xf4d4a740
  420866:	adc    DWORD PTR [ebp+edx*1+0x53],edx
  42086a:	hlt    
  42086b:	aaa    
  42086c:	pop    ss
  42086d:	ficom  WORD PTR es:[ebx-0x33909299]
  420874:	dec    ebx
  420875:	dec    esp
  420876:	cli    
  420877:	les    ebx,FWORD PTR [edi]
  420879:	fbld   TBYTE PTR [ecx+0x2359a7fa]
  42087f:	adc    esi,esp
  420881:	push   0x9d370d2a
  420886:	sbb    BYTE PTR [ebx+0x59],0x3c
  42088a:	pop    es
  42088b:	mov    esp,0xffd6d9dd
  420890:	jg     0x420849
  420892:	retf   0x4ee1
  420895:	dec    ecx
  420896:	adc    DWORD PTR [edi-0x7c94fe9c],0xa4651b6
  4208a0:	loopne 0x420832
  4208a2:	mov    edx,0x9717cb87
  4208a7:	jge    0x42083c
  4208a9:	(bad)  [ebp-0x5c]
  4208ac:	daa    
  4208ad:	dec    esi
  4208ae:	aaa    
  4208af:	adc    DWORD PTR [edx+0x55],edi
  4208b2:	jg     0x42089d
  4208b4:	lods   eax,DWORD PTR ds:[esi]
  4208b5:	shr    DWORD PTR [eax+edi*1-0x64],0xbd
  4208ba:	dec    ebp
  4208bb:	mul    dl
  4208bd:	pusha  
  4208be:	xor    eax,DWORD PTR [ebx-0x6d666f1d]
  4208c4:	shl    bl,1
  4208c6:	mov    bh,0xe2
  4208c8:	in     al,dx
  4208c9:	sbb    al,0x51
  4208cb:	inc    ecx
  4208cd:	aaa    
  4208ce:	popa   
  4208cf:	jg     0x420904
  4208d1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4208d2:	sbb    BYTE PTR [esi+0x7a5d6bd5],0xad
  4208d9:	sub    eax,0x5d2505e
  4208de:	or     al,0xe4
  4208e0:	div    DWORD PTR [edi]
  4208e2:	pop    ebx
  4208e3:	daa    
  4208e4:	pop    es
  4208e5:	add    esp,0x3b4367e6
  4208eb:	ins    BYTE PTR es:[edi],dx
  4208ec:	ins    DWORD PTR es:[edi],dx
  4208ed:	jnp    0x42088f
  4208ef:	ss sti 
  4208f1:	pop    esp
  4208f2:	addr16 test ebp,esp
  4208f5:	cwde   
  4208f6:	sti    
  4208f7:	dec    esp
  4208f8:	loopne 0x4208d4
  4208fa:	in     al,0x44
  4208fc:	outs   dx,BYTE PTR ds:[esi]
  4208fd:	loopne 0x420895
  4208ff:	mov    edx,0xfe3c091d
  420904:	adc    dh,ch
  420906:	fcomp  st(1)
  420908:	(bad)  
  420909:	sub    al,0x1d
  42090b:	mov    ds:0x72b46de3,eax
  420910:	add    ebx,DWORD PTR [esi+edi*4-0x7ecd1e3e]
  420917:	ret    0x5115
  42091a:	sbb    esi,DWORD PTR [ebx+0x66]
  42091d:	push   ds
  42091e:	inc    edx
  42091f:	adc    al,0x38
  420921:	push   ebx
  420922:	push   ss
  420923:	sbb    eax,0xc3fe0fbd
  420928:	jl     0x42096e
  42092a:	cdq    
  42092b:	gs dec edx
  42092d:	sub    esi,ebx
  42092f:	add    BYTE PTR [ebp-0x5],al
  420932:	and    DWORD PTR [edi-0x7f],eax
  420935:	clc    
  420936:	pop    ecx
  420937:	lods   al,BYTE PTR ds:[esi]
  420938:	gs pop edx
  42093a:	dec    ebp
  42093b:	fdivrp st(2),st
  42093d:	mov    bl,0x5f
  42093f:	lea    eax,[eax]
  420941:	mov    DWORD PTR ds:0xd44d5873,0x318701ac
  42094b:	pop    esp
  42094c:	xchg   ecx,eax
  42094d:	fcomp  st(5)
  42094f:	push   eax
  420950:	mov    edi,DWORD PTR [ebx+0x66ce2c0b]
  420956:	push   ebx
  420957:	pop    edi
  420958:	xchg   esi,eax
  420959:	or     eax,0xc3b490be
  42095e:	shl    dl,0xea
  420961:	xchg   BYTE PTR ds:0xdca5f9e8,ch
  420967:	mov    al,ds:0x11ab9a6c
  42096c:	fs jo  0x420935
  42096f:	mov    esp,0x15880ca0
  420974:	push   ebx
  420975:	aam    0xae
  420977:	rcr    DWORD PTR ds:0x7b85b51e,cl
  42097d:	and    al,0x27
  42097f:	fadd   DWORD PTR [esp+eiz*8+0x22]
  420983:	into   
  420984:	mov    dh,0x68
  420986:	pop    eax
  420987:	inc    ecx
  420988:	push   ss
  420989:	or     DWORD PTR [ebx-0x20],edi
  42098c:	ss out dx,eax
  42098e:	lds    ecx,FWORD PTR [edi-0x57b66be1]
  420994:	call   0xf9d73d5
  420999:	dec    ebx
  42099a:	daa    
  42099b:	mov    bh,0xb3
  42099d:	jo     0x420a0e
  42099f:	pop    ds
  4209a0:	stos   DWORD PTR es:[edi],eax
  4209a1:	rcr    DWORD PTR [edx-0x50],0xcd
  4209a5:	inc    eax
  4209a6:	or     edi,DWORD PTR [ebp-0x30]
  4209a9:	add    DWORD PTR [edi+0x142b5f36],esp
  4209af:	dec    ecx
  4209b0:	pop    ebp
  4209b1:	sbb    al,0x4e
  4209b3:	jbe    0x42098b
  4209b5:	fmul   QWORD PTR es:[ebp+0x3a]
  4209b9:	push   0x32c8058f
  4209be:	xchg   edx,eax
  4209bf:	outs   dx,BYTE PTR ds:[esi]
  4209c0:	fcomp  QWORD PTR [edx-0x26]
  4209c3:	pop    ss
  4209c4:	out    dx,al
  4209c5:	push   ss
  4209c6:	cld    
  4209c7:	popf   
  4209c8:	dec    eax
  4209c9:	add    BYTE PTR [ebx+ecx*2-0x5c],dl
  4209cd:	pop    ebp
  4209ce:	stos   DWORD PTR es:[edi],eax
  4209cf:	and    DWORD PTR [ebx],esi
  4209d1:	fnsave [ecx+0x3e]
  4209d4:	pop    ss
  4209d5:	mov    ch,0x92
  4209d7:	iret   
  4209d8:	mov    cl,0x33
  4209da:	pop    esp
  4209dc:	push   esi
  4209dd:	xchg   esi,ecx
  4209df:	pop    ebp
  4209e0:	push   esi
  4209e1:	test   DWORD PTR [ebx],edx
  4209e3:	mov    edx,0x8bdb0e77
  4209e8:	sbb    DWORD PTR [esi-0x20],edi
  4209eb:	push   0x8eed8772
  4209f0:	sub    esp,DWORD PTR [esi+0x37]
  4209f3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4209f4:	mov    esp,0x4a6fcd23
  4209f9:	int3   
  4209fa:	inc    eax
  4209fb:	xor    eax,0xd210b407
  420a00:	les    esp,FWORD PTR [ebx+0x31]
  420a03:	cmp    DWORD PTR [edi],0x4f
  420a06:	mov    eax,ds:0x656cb5a9
  420a0b:	popf   
  420a0c:	or     esp,esp
  420a0e:	icebp  
  420a0f:	cmp    al,dh
  420a11:	inc    ebp
  420a12:	shl    esi,1
  420a14:	vmread DWORD PTR [ecx-0x6560941d],edx
  420a1b:	gs into 
  420a1d:	sub    al,0x33
  420a1f:	rol    ah,1
  420a21:	mov    edx,esp
  420a23:	adc    ch,BYTE PTR [edx+0xc167e7e]
  420a29:	pusha  
  420a2a:	xor    al,0x30
  420a2c:	dec    edi
  420a2d:	xchg   edx,eax
  420a2e:	sub    BYTE PTR [eax],bh
  420a30:	inc    esp
  420a31:	push   edx
  420a32:	and    al,BYTE PTR [edi+0x27]
  420a35:	mov    edx,0xa38bdf57
  420a3a:	dec    esi
  420a3b:	xchg   BYTE PTR ss:[eax+edx*1],cl
  420a3f:	mov    al,0x45
  420a41:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420a42:	shl    BYTE PTR [eax+ebx*2-0x72eac49],1
  420a49:	pushf  
  420a4a:	stos   BYTE PTR es:[edi],al
  420a4b:	add    edi,DWORD PTR [ecx]
  420a4d:	adc    bl,bl
  420a4f:	addr16 and ecx,edx
  420a52:	inc    eax
  420a53:	pop    eax
  420a54:	loopne 0x420a90
  420a56:	or     bh,ah
  420a58:	and    bh,BYTE PTR [ecx]
  420a5a:	lods   eax,DWORD PTR ds:[esi]
  420a5b:	jmp    0x21c1:0x448f3061
  420a62:	add    al,0xd0
  420a64:	cmp    eax,0x14142286
  420a69:	sbb    eax,0xa8903c50
  420a6e:	fdivp  st(1),st
  420a70:	ja     0x420a57
  420a72:	in     al,dx
  420a73:	aaa    
  420a74:	enter  0xc34a,0xa5
  420a78:	les    edi,FWORD PTR [eax+0x44]
  420a7b:	outs   dx,BYTE PTR ds:[esi]
  420a7c:	xchg   edx,eax
  420a7d:	pop    edx
  420a7e:	fist   DWORD PTR [edi]
  420a80:	mov    ?,WORD PTR [eax-0x54]
  420a83:	arpl   WORD PTR [ebx+0x74ff564],cx
  420a89:	lods   al,BYTE PTR ds:[esi]
  420a8a:	ret    0x2b45
  420a8d:	out    0x39,al
  420a8f:	mov    ds:0x4f3213d7,al
  420a94:	xchg   al,bh
  420a96:	out    0x2e,al
  420a98:	out    dx,eax
  420a99:	push   eax
  420a9a:	inc    eax
  420a9b:	iret   
  420a9c:	je     0x420ac4
  420a9e:	cmp    bh,BYTE PTR [esp+ebx*1]
  420aa1:	loopne 0x420a2a
  420aa3:	cmp    BYTE PTR gs:[eax-0x15e5d277],0x6
  420aab:	mov    ds:0xeca76d16,al
  420ab0:	dec    esi
  420ab1:	jp     0x420ac0
  420ab3:	pop    ecx
  420ab4:	adc    edx,ebp
  420ab6:	fdiv   DWORD PTR [ecx]
  420ab8:	adc    eax,0x10cfcaec
  420abd:	dec    esp
  420abe:	mov    esp,0x35694cb2
  420ac3:	in     al,dx
  420ac4:	sub    esi,DWORD PTR [ebx]
  420ac6:	jg     0x420af4
  420ac8:	add    BYTE PTR [ebp-0x406dc88],ch
  420ace:	scas   al,BYTE PTR es:[edi]
  420acf:	loope  0x420b0c
  420ad1:	das    
  420ad2:	bound  edx,QWORD PTR [esi-0x27]
  420ad5:	mov    bh,al
  420ad7:	fstp   DWORD PTR [eax]
  420ad9:	and    DWORD PTR [eax-0x307485b0],esp
  420adf:	mov    dl,0x3b
  420ae1:	(bad)  
  420ae2:	in     al,dx
  420ae3:	mov    DWORD PTR [edx],edx
  420ae5:	mov    al,ds:0x37fcded1
  420aea:	out    0xea,al
  420aec:	stos   BYTE PTR es:[edi],al
  420aed:	clc    
  420aee:	mov    cl,BYTE PTR [ecx]
  420af0:	outs   dx,DWORD PTR ds:[esi]
  420af1:	xchg   edi,eax
  420af2:	punpckhbw mm0,QWORD PTR [edi]
  420af5:	push   cs
  420af6:	in     al,dx
  420af7:	push   esp
  420af8:	dec    edi
  420af9:	sbb    al,BYTE PTR [edx]
  420afb:	dec    esp
  420afc:	int    0x47
  420afe:	in     eax,dx
  420aff:	mov    eax,0x818a9b61
  420b04:	js     0x420aec
  420b06:	outs   dx,BYTE PTR ds:[esi]
  420b07:	adc    ebx,eax
  420b09:	pushf  
  420b0a:	test   dh,al
  420b0c:	mov    ecx,0x3f360cdb
  420b11:	sbb    al,0x7e
  420b13:	and    DWORD PTR [eax],eax
  420b15:	inc    edx
  420b16:	inc    eax
  420b17:	pushf  
  420b18:	add    BYTE PTR [esi-0x44],cl
  420b1b:	mov    ebx,0xfae7ce5b
  420b20:	or     DWORD PTR [esp+ecx*2],edi
  420b23:	gs loop 0x420b63
  420b26:	hlt    
  420b27:	data16 aas 
  420b29:	push   edi
  420b2a:	mov    ebp,0xa0f55786
  420b2f:	jno    0x420adc
  420b31:	mov    WORD PTR [eax+ebx*4-0x2a61187d],?
  420b38:	shr    esi,0x15
  420b3b:	and    esi,DWORD PTR [ebp+0x3ceb35c2]
  420b41:	xor    ecx,DWORD PTR [ebx+0x6e]
  420b44:	xchg   edi,eax
  420b45:	(bad)  
  420b46:	pop    ds
  420b47:	ror    DWORD PTR [edi],cl
  420b49:	imul   eax,DWORD PTR [edx+0x6],0x22
  420b4d:	and    ch,dh
  420b4f:	inc    edi
  420b50:	cs jmp 0xcb003a3
  420b56:	mov    ds,WORD PTR [esi+0x32]
  420b59:	fs je  0x420bd7
  420b5c:	mov    ah,0x0
  420b5e:	div    DWORD PTR [eax]
  420b60:	gs int3 
  420b62:	pop    esi
  420b63:	fsubr  DWORD PTR [eax-0x3946537d]
  420b69:	lock scas eax,DWORD PTR es:[edi]
  420b6b:	mov    esp,0xc5b76c8a
  420b70:	clc    
  420b71:	pop    ebp
  420b72:	mov    dl,0xfe
  420b74:	nop
  420b75:	inc    ecx
  420b76:	aas    
  420b77:	fsubr  DWORD PTR [bx+si-0x78]
  420b7b:	aad    0xc
  420b7d:	xchg   edx,eax
  420b7e:	stc    
  420b7f:	dec    edi
  420b80:	(bad)  
  420b81:	ja     0x420b49
  420b83:	jmp    0x420bfc
  420b85:	inc    ebx
  420b86:	cs and eax,0x8d30902b
  420b8c:	adc    eax,ebx
  420b8e:	hlt    
  420b8f:	retf   
  420b90:	or     eax,0xcdbb9c27
  420b95:	(bad)  
  420b97:	cmp    al,0x77
  420b99:	mov    ch,0x8c
  420b9b:	and    DWORD PTR [edi],0x22
  420b9e:	cmc    
  420b9f:	mov    esp,0xcc8b5bef
  420ba4:	jmp    0x971a:0xca440d8d
  420bab:	xor    eax,0xd45ef1f0
  420bb0:	fadd   QWORD PTR [esp+ebp*2+0x575c76d4]
  420bb7:	clc    
  420bb8:	adc    ch,dl
  420bba:	std    
  420bbb:	and    BYTE PTR [edi],dh
  420bbd:	addr16 cwde 
  420bbf:	outs   dx,DWORD PTR ds:[esi]
  420bc0:	pop    edx
  420bc1:	inc    esp
  420bc2:	cld    
  420bc3:	sub    DWORD PTR [ecx-0x4d3e391e],ebx
  420bc9:	shl    DWORD PTR [esi-0x57],0x16
  420bcd:	dec    edx
  420bce:	fisub  WORD PTR [edi-0x19]
  420bd1:	sub    esp,eax
  420bd3:	sub    DWORD PTR [eax],ecx
  420bd5:	gs (bad) 
  420bd7:	ja     0x420c4c
  420bd9:	mov    edi,esi
  420bdb:	add    BYTE PTR [esi-0x5fbc58a2],ah
  420be1:	frstor ds:0xa9509c50
  420be7:	and    bh,BYTE PTR [edi]
  420be9:	pop    esi
  420bea:	in     al,0x48
  420bec:	or     ah,BYTE PTR [eax]
  420bee:	out    dx,al
  420bef:	pop    esp
  420bf0:	sub    BYTE PTR [ebx-0xa],cl
  420bf3:	xchg   edi,eax
  420bf4:	scas   al,BYTE PTR es:[edi]
  420bf5:	jmp    0x1bcb:0x2947f0d6
  420bfc:	mov    al,ds:0x43b73175
  420c01:	jns    0x420c31
  420c03:	(bad)  
  420c04:	jae    0x420bb5
  420c06:	cwde   
  420c07:	inc    eax
  420c08:	dec    esi
  420c09:	xor    al,0x52
  420c0b:	stc    
  420c0c:	gs and cl,dh
  420c0f:	adc    ecx,edi
  420c11:	nop
  420c12:	or     eax,DWORD PTR [eax]
  420c14:	ins    BYTE PTR es:[edi],dx
  420c15:	xchg   edx,eax
  420c16:	add    BYTE PTR [edi+eiz*2+0x73],bl
  420c1a:	pushf  
  420c1b:	mov    edx,0xd854405e
  420c20:	repnz jmp 0x5c30:0xb8eeb4e8
  420c28:	mov    BYTE PTR [eax],bl
  420c2a:	dec    ebx
  420c2b:	(bad)  
  420c2e:	pushf  
  420c2f:	xor    ah,BYTE PTR [ebx-0xa]
  420c32:	inc    esi
  420c33:	mov    dh,0xa
  420c35:	lods   al,BYTE PTR ds:[esi]
  420c36:	into   
  420c37:	dec    ebx
  420c38:	mov    ch,0x8
  420c3a:	xchg   esp,eax
  420c3b:	jge    0x420c86
  420c3d:	es xchg ecx,eax
  420c3f:	dec    edx
  420c40:	mov    dh,0xd
  420c42:	and    al,BYTE PTR [ecx-0x66]
  420c45:	mov    DWORD PTR [edx],ebp
  420c47:	lea    edi,[ebp+edx*8-0x47d8570c]
  420c4e:	xchg   ebx,eax
  420c4f:	and    bh,dl
  420c51:	jb     0x420c9c
  420c53:	and    eax,0x47f9e7b3
  420c58:	cs (bad) 
  420c5a:	imul   edx,DWORD PTR [edx],0xffffffc0
  420c5d:	mov    esp,0x30f93f5c
  420c62:	ret    0xb84
  420c65:	xchg   edi,eax
  420c66:	ins    BYTE PTR es:[edi],dx
  420c67:	pop    edi
  420c68:	out    dx,al
  420c69:	rcr    DWORD PTR [ecx-0x6f],cl
  420c6c:	adc    DWORD PTR [edx],edi
  420c6e:	rcl    BYTE PTR [ecx+0x39],cl
  420c71:	adc    al,0x31
  420c73:	cmp    BYTE PTR [ecx-0x7919282d],cl
  420c79:	sbb    BYTE PTR [edx+0x4b48473a],0x2a
  420c80:	xor    al,0x8
  420c82:	jmp    0x420ce2
  420c84:	arpl   WORD PTR [eax-0xc],bp
  420c87:	or     ch,cl
  420c89:	fcom   QWORD PTR [edi-0x64]
  420c8c:	clc    
  420c8d:	test   eax,0xb257b1c7
  420c93:	adc    ebp,0xe3ecd9e2
  420c99:	retf   0xcbc7
  420c9c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420c9d:	in     eax,0x1f
  420c9f:	cmp    DWORD PTR [eax+ebx*4+0x4c],edi
  420ca3:	adc    BYTE PTR [ebx+0x61],bh
  420ca6:	and    BYTE PTR [eax],al
  420ca8:	adc    eax,0x18c0d319
  420cad:	and    BYTE PTR [ecx+0x8],0xe9
  420cb1:	ret    
  420cb2:	xlat   BYTE PTR ds:[ebx]
  420cb3:	jnp    0x420cc2
  420cb5:	xor    bh,dl
  420cb7:	jb     0x420cf4
  420cb9:	dec    ebx
  420cba:	and    bl,BYTE PTR [eax-0x132eaff]
  420cc0:	pop    ecx
  420cc1:	cmp    al,0xda
  420cc3:	push   esp
  420cc4:	shl    ebx,0x23
  420cc7:	sbb    ecx,0x6f
  420cca:	retf   0xa817
  420ccd:	jp     0x420d31
  420ccf:	add    eax,0x68c5a541
  420cd4:	xchg   edx,eax
  420cd5:	in     al,0x24
  420cd7:	je     0x420d51
  420cd9:	xchg   ecx,eax
  420cda:	xchg   edi,eax
  420cdb:	loope  0x420d2a
  420cdd:	or     al,BYTE PTR [ebp+0x6e]
  420ce0:	mov    BYTE PTR [ebp+0x1b],bl
  420ce3:	clc    
  420ce4:	cdq    
  420ce5:	pop    edx
  420ce6:	jne    0x420d16
  420ce8:	test   edx,0xfeb48499
  420cee:	lock (bad) 
  420cf1:	fmul   DWORD PTR [ebp-0x27]
  420cf4:	leave  
  420cf5:	mov    esp,0xba492662
  420cfa:	or     ebx,DWORD PTR [ecx+0x2a]
  420cfd:	int    0x1
  420cff:	gs push eax
  420d01:	mov    ch,0x3a
  420d03:	mov    ah,0x99
  420d05:	lahf   
  420d06:	push   ss
  420d07:	sub    ebx,DWORD PTR [edx+0x7b6a9a52]
  420d0d:	jp     0x420cfb
  420d0f:	mov    ds:0x412b4f75,al
  420d14:	fwait
  420d15:	mov    es,esp
  420d17:	inc    ebx
  420d18:	scas   eax,DWORD PTR es:[edi]
  420d19:	or     eax,0x139e3b3a
  420d1e:	fisttp QWORD PTR [eax+edx*1-0x19]
  420d22:	ins    BYTE PTR es:[edi],dx
  420d23:	dec    esi
  420d24:	std    
  420d25:	lods   eax,DWORD PTR ds:[esi]
  420d26:	xchg   BYTE PTR [edi+0x73],cl
  420d29:	test   eax,0x89d5fdf3
  420d2e:	popa   
  420d2f:	(bad)  
  420d31:	inc    ecx
  420d32:	imul   ebp,DWORD PTR [edx+edx*4+0x1e81c613],0xb72d12be
  420d3d:	sub    edx,DWORD PTR [edi-0x3588285]
  420d43:	ins    DWORD PTR es:[edi],dx
  420d44:	mov    ds:0x1537b565,eax
  420d49:	(bad)  
  420d4a:	jp     0x420cfc
  420d4c:	adc    esi,DWORD PTR [eax+0xe]
  420d4f:	stc    
  420d50:	aad    0xfa
  420d52:	or     eax,0x48a2fba7
  420d57:	xchg   edx,eax
  420d58:	aad    0x38
  420d5a:	jae    0x420da1
  420d5c:	in     al,0x5
  420d5e:	lods   al,BYTE PTR ds:[esi]
  420d5f:	mov    ch,BYTE PTR [ebx-0xfb288a7]
  420d65:	cmp    DWORD PTR [edx+0x44b22845],edi
  420d6b:	jmp    0x2e33:0x697bd056
  420d72:	scas   al,BYTE PTR es:[edi]
  420d73:	add    al,0xc2
  420d75:	push   ecx
  420d76:	push   edx
  420d77:	fild   DWORD PTR [esi-0x43]
  420d7a:	sub    BYTE PTR [edi+0x69f09e32],ah
  420d80:	rcr    BYTE PTR cs:[ebp+0x439c71b6],cl
  420d87:	or     DWORD PTR [edx+ebp*2],esp
  420d8a:	xor    DWORD PTR [edx-0x7c598946],eax
  420d90:	mov    ebx,0x7e8ff3b0
  420d95:	mov    bh,BYTE PTR [eax-0x70fa318a]
  420d9b:	pop    ecx
  420d9c:	cli    
  420d9d:	inc    edi
  420d9e:	mov    WORD PTR [eax],cs
  420da0:	and    DWORD PTR [edi+0x56],0x6
  420da4:	sub    eax,0xd28b6872
  420da9:	out    dx,al
  420daa:	stc    
  420dab:	cmp    edi,0x3cc61238
  420db1:	das    
  420db2:	ins    BYTE PTR es:[edi],dx
  420db3:	push   ss
  420db4:	jmp    0x420d55
  420db6:	jne    0x420e05
  420db8:	repz mov eax,ds:0xc0df467c
  420dbe:	mov    esp,0x26eaa158
  420dc3:	cmc    
  420dc4:	arpl   WORD PTR [edx],sp
  420dc6:	sti    
  420dc7:	xor    al,0xd1
  420dc9:	xor    eax,0x55371536
  420dce:	adc    BYTE PTR [edi+0x7a],al
  420dd1:	retf   
  420dd2:	inc    ebx
  420dd3:	push   edx
  420dd4:	cmc    
  420dd5:	pushf  
  420dd6:	ret    
  420dd7:	addr16 push ebx
  420dd9:	ins    BYTE PTR es:[edi],dx
  420dda:	jo     0x420dd4
  420ddc:	data16 movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420dde:	lahf   
  420ddf:	sbb    al,0x40
  420de1:	sbb    ebp,DWORD PTR [ebx-0x63]
  420de4:	push   ss
  420de5:	outs   dx,BYTE PTR ds:[esi]
  420de6:	in     al,dx
  420de7:	retf   
  420de8:	jle    0x420dcb
  420dea:	aaa    
  420deb:	add    BYTE PTR [ecx-0x21d5fa54],ch
  420df1:	rcl    ah,cl
  420df3:	xchg   ecx,eax
  420df4:	data16 stos BYTE PTR es:[edi],al
  420df6:	mov    bl,0x5
  420df8:	mov    ch,0xd6
  420dfa:	and    BYTE PTR [esi-0x14],cl
  420dfd:	arpl   WORD PTR [ebp+0x4ea88e0b],dx
  420e03:	ss out dx,eax
  420e05:	es jnp 0x420e74
  420e08:	ins    BYTE PTR es:[edi],dx
  420e09:	or     ah,BYTE PTR [esi+0x60]
  420e0c:	jns    0x420d99
  420e0e:	and    edi,DWORD PTR [eax+0xf06d14]
  420e14:	inc    ebp
  420e15:	mov    esi,0x651e8302
  420e1a:	xor    eax,0xa8db3ffc
  420e1f:	xchg   BYTE PTR [ecx],bh
  420e21:	mov    eax,0x59568776
  420e26:	pop    esp
  420e27:	jo     0x420df7
  420e29:	mov    ebp,0xf4de5138
  420e2e:	sub    al,BYTE PTR [ecx]
  420e30:	sbb    DWORD PTR [ecx],ebp
  420e32:	dec    esi
  420e33:	clc    
  420e34:	je     0x420e3e
  420e36:	or     BYTE PTR [edi+0x5d],bh
  420e39:	jmp    0x420dfc
  420e3b:	push   ebx
  420e3c:	push   esp
  420e3d:	push   0x2a7c5218
  420e42:	pop    es
  420e43:	fisub  DWORD PTR [ebp-0x2bb5ef72]
  420e49:	test   eax,0xa6876f12
  420e4e:	cmc    
  420e4f:	pop    ecx
  420e50:	sub    ebp,DWORD PTR [edx+ebx*4+0x46]
  420e54:	xchg   edi,eax
  420e55:	outs   dx,DWORD PTR ds:[esi]
  420e56:	in     al,dx
  420e57:	stos   BYTE PTR es:[edi],al
  420e58:	lds    ebp,FWORD PTR [edi]
  420e5a:	push   cs
  420e5b:	shr    DWORD PTR ss:[ebx],cl
  420e5e:	mov    cl,0xcb
  420e60:	mov    edi,0x3569428f
  420e65:	rcr    BYTE PTR es:0x7dadeef7,0xe7
  420e6d:	lods   al,BYTE PTR ds:[esi]
  420e6e:	jecxz  0x420dfe
  420e70:	lahf   
  420e71:	xchg   ebx,eax
  420e72:	pushf  
  420e73:	daa    
  420e74:	lds    ebx,FWORD PTR [ebp+0xb]
  420e77:	in     al,dx
  420e78:	fsub   DWORD PTR [ebx+0x59]
  420e7b:	out    dx,eax
  420e7c:	rcl    BYTE PTR [edi-0x45d88543],0x10
  420e83:	pop    edx
  420e84:	sti    
  420e85:	xchg   edi,eax
  420e86:	popa   
  420e87:	pop    esi
  420e88:	or     ch,BYTE PTR [esi+eiz*8+0x66a7ade3]
  420e8f:	mov    bh,0x25
  420e91:	cld    
  420e92:	retf   0xe1a9
  420e95:	adc    al,0x7b
  420e97:	inc    esi
  420e98:	mov    eax,0x7b41be74
  420e9d:	mov    edx,0x73fb8221
  420ea2:	or     BYTE PTR [edx-0x3433982f],ah
  420ea8:	cld    
  420ea9:	fprem  
  420eab:	aad    0xdc
  420ead:	xor    eax,0x63c4a83
  420eb2:	mov    dl,0xa1
  420eb4:	in     al,dx
  420eb5:	push   esi
  420eb6:	ret    0xd535
  420eb9:	rcl    DWORD PTR [eax+0x30],cl
  420ebc:	mov    ecx,DWORD PTR [eax+0x1b]
  420ebf:	stc    
  420ec0:	aas    
  420ec1:	cmp    dh,cl
  420ec3:	sub    ebp,DWORD PTR [esi]
  420ec5:	push   edi
  420ec6:	jnp    0x420eaa
  420ec8:	int3   
  420ec9:	jg     0x420f03
  420ecb:	xchg   BYTE PTR [edx+ecx*4-0x696e9a5b],ch
  420ed2:	cmp    bh,BYTE PTR [ecx]
  420ed4:	in     al,0x38
  420ed6:	data16 cld 
  420ed8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420ed9:	jg     0x420f40
  420edb:	cwde   
  420edc:	popf   
  420edd:	fwait
  420ede:	sbb    al,0xd4
  420ee0:	mov    dh,0x89
  420ee2:	dec    esi
  420ee3:	sub    al,0xb5
  420ee5:	mov    ebx,0xfabcd72d
  420eea:	int    0x14
  420eec:	lods   al,BYTE PTR ds:[esi]
  420eed:	xor    dh,bl
  420eef:	scas   al,BYTE PTR es:[edi]
  420ef0:	inc    esi
  420ef1:	ins    BYTE PTR es:[edi],dx
  420ef2:	push   ds
  420ef3:	cvtdq2ps xmm5,XMMWORD PTR [eax+0x7265a4a5]
  420efa:	xor    cl,BYTE PTR [ecx+0x70]
  420efd:	xlat   BYTE PTR ds:[ebx]
  420efe:	add    DWORD PTR [ebx-0x4f],esp
  420f01:	adc    esi,0x51
  420f04:	push   0x8c00fcfc
  420f09:	mov    ebp,0xca632b66
  420f0e:	jae    0x420eaf
  420f10:	jecxz  0x420f43
  420f12:	sbb    eax,0x8c0fab36
  420f17:	pop    es
  420f18:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420f19:	dec    ecx
  420f1a:	out    dx,al
  420f1b:	call   0x61813353
  420f20:	test   eax,0xd6e981
  420f25:	pop    ss
  420f26:	sti    
  420f27:	push   edx
  420f28:	(bad)
  420f2c:	jl     0x420f5f
  420f2e:	inc    eax
  420f2f:	not    ah
  420f31:	(bad)  
  420f32:	out    dx,eax
  420f33:	xchg   bh,ah
  420f35:	gs jmp 0xe067:0xae9403ae
  420f3d:	scas   al,BYTE PTR es:[edi]
  420f3e:	sti    
  420f3f:	sub    al,0x5a
  420f41:	xchg   ebp,eax
  420f42:	mov    ch,0xc7
  420f44:	sbb    ecx,DWORD PTR [eax+0x357f14bf]
  420f4a:	xor    BYTE PTR [ebx-0x7eb3a8ff],bl
  420f50:	cdq    
  420f51:	adc    BYTE PTR [edi],ah
  420f53:	in     al,0x51
  420f55:	loop   0x420f8a
  420f57:	addr16 pop esi
  420f59:	mov    edx,0xca1532ed
  420f5e:	stos   DWORD PTR es:[edi],eax
  420f5f:	out    dx,al
  420f60:	sti    
  420f61:	js     0x420f90
  420f63:	dec    eax
  420f64:	pop    ss
  420f65:	jmp    0x420fa3
  420f67:	dec    esi
  420f68:	inc    esp
  420f69:	mov    eax,ds:0xebbb04
  420f6e:	lea    ebp,[edx-0x4a]
  420f71:	mov    ds:0xd71f7074,eax
  420f76:	outs   dx,DWORD PTR ds:[esi]
  420f77:	je     0x420fdb
  420f79:	inc    ebp
  420f7a:	ficomp WORD PTR [edx-0x1ad15a0d]
  420f80:	push   cs
  420f81:	cmp    eax,0x650151c8
  420f86:	outs   dx,DWORD PTR ds:[esi]
  420f87:	jmp    0xf458ee42
  420f8c:	fsubp  st(2),st
  420f8e:	cmp    al,dh
  420f90:	enter  0xc321,0xcf
  420f94:	mov    eax,ds:0x10579a60
  420f99:	sbb    BYTE PTR [edx-0x11],0xb1
  420f9d:	xchg   esp,eax
  420f9e:	cwde   
  420f9f:	or     DWORD PTR ds:0xe6944a9c,0x9
  420fa6:	aad    0xe2
  420fa8:	cmp    BYTE PTR [bx+si],ch
  420fab:	push   ecx
  420fac:	mov    WORD PTR [ebx],fs
  420fae:	dec    ebp
  420faf:	sbb    DWORD PTR [ecx+esi*1],0x40
  420fb3:	sbb    eax,0xc8e7b959
  420fb8:	test   BYTE PTR [ebp+0x42237f22],bh
  420fbe:	jmp    0x420fc9
  420fc0:	(bad)  
  420fc1:	aam    0xf4
  420fc3:	test   al,0x5e
  420fc5:	mov    bh,0xbe
  420fc7:	fiadd  DWORD PTR [edx-0x24]
  420fca:	cwde   
  420fcb:	out    0xcb,al
  420fcd:	add    BYTE PTR [ebx-0x1e],cl
  420fd0:	sbb    al,0xb9
  420fd2:	pop    edi
  420fd3:	fstp   QWORD PTR [eax+0xf1ad274]
  420fd9:	out    0x70,al
  420fdb:	inc    ebx
  420fdc:	cli    
  420fdd:	mov    eax,ds:0x8bbba3a9
  420fe2:	push   ds
  420fe3:	sahf   
  420fe4:	mov    ebp,0x5afd1bb6
  420fe9:	dec    eax
  420fea:	jg     0x421034
  420fec:	ja     0x420faf
  420fee:	cdq    
  420fef:	test   BYTE PTR [eax+0x4ec4ae3a],dh
  420ff5:	pop    ebp
  420ff6:	ds pop ecx
  420ff8:	jno    0x420ffe
  420ffa:	cwde   
  420ffb:	cdq    
  420ffc:	imul   ebx,DWORD PTR ds:0xb6baf3fc,0x34
  421003:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421004:	aam    0xa9
  421006:	in     al,0xc4
  421008:	pop    edx
  421009:	retf   0x7306
  42100c:	cwde   
  42100d:	mov    esi,DWORD PTR [ebp+ebp*1-0x11d53a05]
  421014:	inc    ecx
  421015:	and    DWORD PTR [ecx],esi
  421017:	leave  
  421018:	les    ebx,FWORD PTR [ebx]
  42101a:	test   BYTE PTR [ebx],dl
  42101c:	out    0x6a,eax
  42101e:	mov    ds:0xa3ea8b65,eax
  421023:	pop    ebp
  421024:	cmc    
  421025:	imul   ebx,DWORD PTR [ebx+esi*1],0x7e6ac8d5
  42102c:	push   esp
  42102d:	adc    eax,0x1b9e4e25
  421032:	(bad)  
  421033:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421034:	jo     0x420ff9
  421036:	dec    eax
  421037:	mov    ebx,0x1a0aec3c
  42103c:	mov    dl,0x7a
  42103e:	shr    DWORD PTR [edx-0x47],0x3e
  421042:	add    edi,DWORD PTR [eax]
  421044:	push   edx
  421045:	scas   eax,DWORD PTR es:[edi]
  421046:	add    al,0xbf
  421048:	adc    esp,DWORD PTR [esi-0x6]
  42104b:	add    dh,dh
  42104d:	cdq    
  42104e:	add    eax,0x7257fedb
  421053:	ror    DWORD PTR ds:0xcccbcc6,0xf7
  42105a:	dec    esp
  42105b:	sub    ah,BYTE PTR ds:0xa60b10b0
  421061:	xchg   ecx,eax
  421062:	or     esp,edx
  421064:	add    BYTE PTR [edi+0x74c9f9e5],ch
  42106a:	mov    cl,0x81
  42106c:	shl    esi,0x8e
  42106f:	pop    ebx
  421070:	hlt    
  421071:	sub    eax,0x516e4ce5
  421076:	iret   
  421077:	jmp    0x275d12b5
  42107c:	rol    al,1
  42107e:	or     al,0x7b
  421080:	push   0x30
  421082:	iret   
  421083:	and    BYTE PTR [eax-0x420e51b1],dl
  421089:	cmp    DWORD PTR [ecx],edi
  42108b:	mov    esi,0xfafd6697
  421090:	(bad)  
  421091:	fcom   QWORD PTR [eax-0x53506c89]
  421097:	js     0x421051
  421099:	daa    
  42109a:	add    eax,edx
  42109c:	push   ecx
  42109d:	fmul   DWORD PTR [eax-0x7f]
  4210a0:	inc    edi
  4210a1:	mov    edi,0x78677aba
  4210a6:	inc    esp
  4210a7:	aaa    
  4210a8:	or     DWORD PTR [ebx+0x44e09648],ecx
  4210ae:	scas   eax,DWORD PTR es:[edi]
  4210af:	push   esp
  4210b0:	pop    ebp
  4210b1:	mov    ch,0x84
  4210b3:	dec    edx
  4210b4:	ret    
  4210b5:	ins    BYTE PTR es:[edi],dx
  4210b6:	xchg   esi,eax
  4210b7:	(bad)  
  4210b8:	fist   DWORD PTR [edi+ecx*2-0x33]
  4210bc:	add    eax,0x34e348
  4210c1:	xchg   ebx,eax
  4210c2:	(bad)  
  4210c3:	and    bl,BYTE PTR [edx-0x28]
  4210c6:	call   0x86eaca3f
  4210cb:	nop
  4210cc:	push   es
  4210cd:	call   0xd088:0xafb9f251
  4210d4:	ja     0x4210cd
  4210d6:	aad    0x6a
  4210d8:	call   0xc555003c
  4210dd:	int3   
  4210de:	aaa    
  4210df:	pop    ebp
  4210e0:	scas   eax,DWORD PTR es:[edi]
  4210e1:	or     al,0x3c
  4210e3:	mov    edx,edi
  4210e5:	shr    DWORD PTR [ebp-0x22],cl
  4210e8:	call   0xa6354a10
  4210ed:	xchg   edi,eax
  4210ee:	cmp    al,0xbd
  4210f0:	pop    esp
  4210f1:	sub    ah,bl
  4210f3:	or     DWORD PTR [esi],ebp
  4210f5:	or     BYTE PTR [ebx-0x6df63162],0xbd
  4210fc:	lods   eax,DWORD PTR ds:[esi]
  4210fd:	jne    0x4210a1
  4210ff:	aad    0xc3
  421101:	sub    bh,ah
  421103:	cmp    BYTE PTR [ebx],bl
  421105:	sub    al,al
  421107:	or     esi,DWORD PTR [ecx+0x2c600b11]
  42110d:	push   eax
  42110e:	lahf   
  42110f:	leave  
  421110:	jg     0x4210c7
  421112:	out    0x6d,eax
  421114:	or     esp,edi
  421116:	push   cs
  421117:	scas   eax,DWORD PTR es:[edi]
  421118:	or     DWORD PTR ds:0x49d4f4b0,ebx
  42111e:	xrelease data16 mov BYTE PTR [esi-0x53ce8048],ah
  421126:	add    eax,DWORD PTR [edi]
  421128:	out    0x1e,al
  42112a:	ins    DWORD PTR es:[edi],dx
  42112b:	bound  ebp,QWORD PTR [esi]
  42112d:	jl     0x421147
  42112f:	lahf   
  421130:	xor    DWORD PTR [edx],eax
  421132:	dec    ebx
  421133:	jg     0x42118f
  421135:	(bad)  
  421136:	or     dh,BYTE PTR [eax+0x7d4c7c3b]
  42113c:	outs   dx,DWORD PTR ds:[esi]
  42113d:	sub    BYTE PTR [edi+0x70a713be],0xbc
  421144:	mov    ecx,0x5179c037
  421149:	aas    
  42114a:	cwde   
  42114b:	test   eax,eax
  42114d:	loopne 0x4211cd
  42114f:	pop    ss
  421150:	jmp    0xed8f:0x6a435a95
  421157:	lods   eax,DWORD PTR ds:[esi]
  421158:	xchg   ecx,eax
  421159:	aad    0x77
  42115b:	adc    al,0x64
  42115d:	aad    0xc5
  42115f:	iret   
  421160:	xchg   esi,eax
  421161:	repz pop ds
  421163:	pushf  
  421164:	xchg   ebp,eax
  421165:	imul   edx,DWORD PTR [eax],0x49
  421168:	cdq    
  421169:	adc    al,0xdc
  42116b:	pop    esp
  42116c:	dec    eax
  42116d:	retf   
  42116e:	scas   eax,DWORD PTR es:[edi]
  42116f:	and    bl,BYTE PTR [esi+0x2b]
  421172:	inc    ebx
  421173:	stc    
  421174:	shl    BYTE PTR [esi+0x23],1
  421177:	rcr    DWORD PTR [esp+ecx*4-0x42],1
  42117b:	call   0xa5c6:0xcbda732f
  421182:	pop    ebx
  421183:	adc    al,0xc4
  421185:	clc    
  421186:	mov    ds:0x1a3b2fb8,eax
  42118b:	jmp    0x421204
  42118d:	pop    esi
  42118e:	add    ch,bh
  421190:	pop    edx
  421191:	cmp    dh,bl
  421193:	cld    
  421194:	and    DWORD PTR [ebp+0x152b327f],edi
  42119a:	mov    dl,BYTE PTR [edi+0x7d9385b5]
  4211a0:	push   esi
  4211a1:	fiadd  DWORD PTR [eax-0x132009f8]
  4211a7:	inc    edx
  4211a8:	loop   0x421137
  4211aa:	cmp    al,0x72
  4211ac:	data16 mov bh,0xd8
  4211af:	push   0xfae54c8d
  4211b4:	adc    ebp,edi
  4211b6:	fdivr  DWORD PTR [edi-0x3]
  4211b9:	mov    ebx,0xcb4970eb
  4211be:	fs into 
  4211c0:	cmp    ch,BYTE PTR [ecx+0x77]
  4211c3:	mov    ds:0x8693cfb4,al
  4211c8:	xchg   edi,eax
  4211c9:	rcl    DWORD PTR [esi],0x37
  4211cc:	bound  esi,QWORD PTR [edi+0x46982a9d]
  4211d2:	mov    BYTE PTR [ebp-0x47],ah
  4211d5:	ins    DWORD PTR es:[edi],dx
  4211d6:	idiv   BYTE PTR [ecx-0x7]
  4211d9:	cli    
  4211da:	nop
  4211db:	out    0x66,al
  4211dd:	test   DWORD PTR [edi],0xd6f35b51
  4211e3:	xor    al,0xea
  4211e5:	or     eax,0x1c198be8
  4211ea:	cmp    al,0xc2
  4211ec:	icebp  
  4211ed:	add    eax,0xd6a12f4c
  4211f2:	or     DWORD PTR [edx+ebp*1],eax
  4211f5:	retf   
  4211f6:	cmc    
  4211f7:	xchg   edx,eax
  4211f8:	shl    edx,cl
  4211fa:	cdq    
  4211fb:	lds    ebp,FWORD PTR [edx-0x7c54e29d]
  421201:	call   0xc540:0x45c47b51
  421208:	sbb    ch,BYTE PTR [eax+0x1a8f60b7]
  42120e:	cli    
  42120f:	addr16 cmp al,0x4f
  421212:	test   DWORD PTR [ebx-0xe224df6],eax
  421218:	daa    
  421219:	rol    BYTE PTR [ebx],0x79
  42121c:	mov    bh,0xec
  42121e:	dec    esp
  42121f:	mov    ah,0x37
  421221:	mov    esi,0x99661169
  421226:	(bad)  [ebp+0x7df32f86]
  42122c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42122d:	dec    eax
  42122e:	fistp  DWORD PTR [edi+ebx*2-0x657744eb]
  421235:	and    al,0xc7
  421237:	pop    ebx
  421238:	fcomip st,st(4)
  42123a:	(bad)  
  42123b:	mov    bl,0x34
  42123d:	inc    ecx
  42123e:	(bad)  
  42123f:	jp     0x4212b4
  421241:	add    eax,0x65846660
  421246:	fisttp QWORD PTR [edi]
  421248:	inc    ebp
  421249:	fs mov ecx,0x6b20a679
  42124f:	cli    
  421250:	inc    eax
  421251:	pop    ebx
  421252:	mov    fs,WORD PTR es:[ebx+0x3c17e8fa]
  421259:	sbb    eax,0xdaef30dc
  42125e:	pop    edx
  42125f:	pop    esi
  421260:	pushf  
  421261:	mov    ch,0x39
  421263:	fs push esi
  421265:	sbb    DWORD PTR [edi],edi
  421267:	clc    
  421268:	ins    BYTE PTR es:[edi],dx
  421269:	add    DWORD PTR [esi+0x22],eax
  42126c:	data16 sub al,bl
  42126f:	loop   0x4212a0
  421271:	jne    0x421267
  421273:	xchg   edx,eax
  421274:	mov    ch,0xd
  421276:	stc    
  421277:	jo     0x421295
  421279:	pop    ebx
  42127a:	int3   
  42127b:	push   0x3d14d829
  421280:	or     BYTE PTR ds:[ecx+eiz*2+0x2e05552f],dh
  421288:	in     al,dx
  421289:	sub    dh,BYTE PTR [esi]
  42128b:	jle    0x421236
  42128d:	and    BYTE PTR [esp+ebp*8+0x38],0x33
  421292:	push   esp
  421293:	cli    
  421294:	xor    BYTE PTR [esi+0x7f],0x8
  421298:	sub    edi,DWORD PTR [eax-0x3a10d839]
  42129e:	dec    ecx
  42129f:	cwde   
  4212a0:	mov    ecx,0x1c8753a7
  4212a5:	cmp    bl,BYTE PTR ds:0xb2f0794f
  4212ab:	inc    ebp
  4212ac:	(bad)  
  4212ad:	mov    fs,eax
  4212af:	xchg   ecx,eax
  4212b0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4212b1:	ffreep st(6)
  4212b3:	mov    WORD PTR [edi-0x5e0d3911],es
  4212b9:	outs   dx,BYTE PTR ds:[esi]
  4212ba:	in     al,dx
  4212bb:	ret    0x94fb
  4212be:	inc    edi
  4212bf:	inc    ecx
  4212c0:	inc    eax
  4212c1:	xchg   ebx,eax
  4212c2:	icebp  
  4212c3:	mov    cl,0x73
  4212c5:	rcl    esi,1
  4212c7:	add    al,0xd2
  4212c9:	sbb    eax,0x6453c19b
  4212ce:	(bad)  
  4212cf:	push   eax
  4212d0:	jecxz  0x42131a
  4212d2:	cdq    
  4212d3:	cmp    eax,DWORD PTR [edi]
  4212d5:	rol    BYTE PTR [esi+0x6],1
  4212d8:	or     ah,0x2c
  4212db:	sub    al,0x61
  4212dd:	mov    ebx,0x5ec528c2
  4212e2:	std    
  4212e3:	push   esi
  4212e4:	imul   esi,DWORD PTR [ebx+0x3fc9df25],0xe3a10592
  4212ee:	pop    esi
  4212ef:	(bad)  
  4212f0:	std    
  4212f1:	mov    WORD PTR ds:0x1ca04da7,cs
  4212f7:	xor    dl,BYTE PTR [edi+0x5a26ea3e]
  4212fd:	cdq    
  4212fe:	jmp    0x421324
  421300:	jno    0x4212e4
  421302:	or     BYTE PTR [esi],cl
  421304:	push   edi
  421305:	fs jns 0x42131c
  421308:	sub    edi,0x79
  42130b:	inc    esi
  42130c:	rcl    DWORD PTR [edi+0x276e7d23],cl
  421312:	mov    DWORD PTR [ecx+ecx*4-0x6b],edx
  421316:	je     0x421343
  421318:	xchg   esp,eax
  421319:	add    ch,cl
  42131b:	rcl    BYTE PTR [ecx+0x6176850],cl
  421321:	dec    edi
  421322:	test   al,0x8d
  421324:	in     al,dx
  421325:	lea    edx,[edi-0x12f2b032]
  42132b:	mov    esp,ebp
  42132d:	or     bh,dl
  42132f:	dec    edi
  421330:	mov    esi,0x504b3f59
  421335:	inc    edx
  421336:	jmp    0x591c:0x53ac40d0
  42133d:	lahf   
  42133e:	mov    edi,0x97d3f8f9
  421343:	push   ecx
  421344:	scas   al,BYTE PTR es:[edi]
  421345:	xor    DWORD PTR [esi-0x1a],ebp
  421348:	inc    edx
  421349:	cmp    BYTE PTR [ebx-0x7325d9b6],0xa7
  421350:	push   es
  421351:	mov    edi,DWORD PTR [eax+0x31]
  421354:	mov    bh,0x9c
  421356:	ret    
  421357:	lock mov edx,0x74f58908
  42135d:	jne    0x421387
  42135f:	cmc    
  421360:	je     0x4213a1
  421362:	(bad)  
  421364:	pop    ecx
  421365:	stos   BYTE PTR es:[edi],al
  421366:	lea    esp,[edx]
  421368:	cwde   
  421369:	cmp    ah,BYTE PTR [edi+0x3c]
  42136c:	cmp    edi,ecx
  42136e:	add    ah,BYTE PTR ds:0xf38424c3
  421374:	xchg   ebx,eax
  421375:	mov    DWORD PTR [eax+0x2e1c8b70],ebx
  42137b:	cmc    
  42137c:	ror    dh,cl
  42137e:	xor    eax,0x35df74fb
  421383:	or     eax,0xba676243
  421388:	scas   eax,DWORD PTR es:[edi]
  421389:	jp     0x4213de
  42138b:	pop    ss
  42138c:	test   DWORD PTR [ebp-0x53],0x41e212ee
  421393:	or     DWORD PTR [ebp+0x404ffe8c],edx
  421399:	(bad)  
  42139a:	out    0x80,eax
  42139c:	mov    ds:0x56cbfef6,eax
  4213a1:	ficomp WORD PTR [edi-0x212767e1]
  4213a7:	jae    0x42136b
  4213a9:	push   0xc3dc873b
  4213ae:	pop    ebx
  4213af:	and    ebp,esp
  4213b1:	add    BYTE PTR [ebx+edx*2],al
  4213b4:	sbb    BYTE PTR [esi+0x51],bh
  4213b7:	jbe    0x421352
  4213b9:	jg     0x4213fb
  4213bb:	push   es
  4213bc:	jmp    0x2bf7:0xa0fd5408
  4213c3:	adc    edi,DWORD PTR ds:0x49be962e
  4213c9:	sahf   
  4213ca:	pop    edi
  4213cb:	sub    al,0xec
  4213cd:	mov    eax,0xda9a02b7
  4213d2:	imul   esp,DWORD PTR [esi-0x78],0xddb19f76
  4213d9:	ret    
  4213da:	(bad)  
  4213dc:	mov    dl,0xac
  4213de:	(bad)  
  4213df:	mov    DWORD PTR [ebx-0x27362b14],esi
  4213e5:	xchg   ecx,eax
  4213e6:	daa    
  4213e7:	dec    eax
  4213e8:	aam    0xa0
  4213ea:	fnstenv [edi-0xcd8a4e]
  4213f0:	dec    ebp
  4213f1:	dec    edx
  4213f2:	xor    ebx,esi
  4213f4:	scas   eax,DWORD PTR es:[edi]
  4213f5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4213f6:	mov    al,0x7e
  4213f8:	dec    eax
  4213f9:	ds icebp 
  4213fb:	rol    BYTE PTR [ecx+0x3f],1
  4213fe:	mov    al,ds:0x755fba99
  421403:	call   0x38394185
  421408:	inc    eax
  421409:	mov    bh,0x10
  42140b:	add    bh,BYTE PTR [edi-0x4988f562]
  421411:	test   BYTE PTR [eax],0x1b
  421414:	xchg   edx,eax
  421415:	inc    ecx
  421416:	mov    edx,0xe3c46575
  42141b:	sub    BYTE PTR [ecx+0x62],0x6
  42141f:	fs div ch
  421422:	cdq    
  421423:	sbb    BYTE PTR [eax+0x1],bl
  421426:	call   0x94a7a599
  42142b:	dec    edi
  42142c:	(bad)  
  42142e:	pop    ecx
  42142f:	sub    DWORD PTR [edx-0x4f],eax
  421432:	sar    BYTE PTR [ecx-0x3b],1
  421435:	aaa    
  421436:	inc    edx
  421437:	in     al,dx
  421438:	ret    
  421439:	outs   dx,BYTE PTR ds:[esi]
  42143a:	jno    0x4213c6
  42143c:	mov    edi,0x2da5df54
  421441:	outs   dx,BYTE PTR ds:[esi]
  421442:	out    0xfd,al
  421444:	adc    eax,0x40899cce
  421449:	sbb    esp,ebx
  42144b:	pop    eax
  42144c:	sub    al,0x9
  42144e:	dec    edx
  42144f:	rcl    BYTE PTR [edi-0x24],cl
  421452:	push   esi
  421453:	movd   DWORD PTR [esi-0x608aa987],mm5
  42145a:	mov    ds:0x60471679,eax
  42145f:	fs or  bl,bl
  421462:	cld    
  421463:	and    cl,BYTE PTR [eax-0x2feb104b]
  421469:	dec    DWORD PTR [eax]
  42146b:	xchg   edi,eax
  42146c:	xchg   edi,eax
  42146d:	je     0x42147e
  42146f:	or     ebx,esi
  421471:	adc    DWORD PTR [esi-0x70],edi
  421474:	sub    eax,DWORD PTR [eax-0x56c2b21b]
  42147a:	(bad)  
  42147b:	rol    ecx,1
  42147d:	(bad)  
  42147e:	sar    bl,1
  421480:	and    al,0x88
  421482:	dec    esp
  421483:	loopne 0x42147d
  421485:	test   al,0x90
  421487:	addr16 jle 0x421509
  42148a:	or     eax,0x80f693ff
  42148f:	xchg   BYTE PTR [edi],dh
  421491:	sar    BYTE PTR [esi-0x647c04e],1
  421497:	in     eax,dx
  421498:	push   ss
  421499:	mov    al,0x14
  42149b:	popa   
  42149c:	or     bh,BYTE PTR [ecx-0x5cb4f790]
  4214a2:	and    esi,DWORD PTR [ecx]
  4214a4:	add    al,0x5
  4214a6:	outs   dx,DWORD PTR ds:[esi]
  4214a7:	inc    edx
  4214a8:	dec    esi
  4214a9:	sub    al,0x35
  4214ab:	leave  
  4214ac:	pusha  
  4214ad:	pop    es
  4214ae:	popa   
  4214af:	scas   eax,DWORD PTR es:[edi]
  4214b0:	aas    
  4214b1:	arpl   si,si
  4214b3:	xchg   ebx,eax
  4214b4:	fcomp  DWORD PTR [edi-0x49698e22]
  4214ba:	xor    BYTE PTR [ecx+0x77],ah
  4214bd:	fisubr WORD PTR fs:[esp+ebx*2+0x9701b51]
  4214c5:	les    edx,FWORD PTR [edi-0x2a19c6d]
  4214cb:	dec    ax
  4214cd:	in     al,0xc6
  4214cf:	mov    al,0xeb
  4214d1:	(bad)  
  4214d2:	xchg   DWORD PTR [ebx+0x4a],eax
  4214d5:	push   esi
  4214d6:	push   eax
  4214d7:	rol    DWORD PTR [eax+0x6187cd83],1
  4214dd:	mov    es,WORD PTR [ebx-0x4a37cbfc]
  4214e3:	inc    ah
  4214e5:	leave  
  4214e6:	mov    cs,esp
  4214e8:	in     al,0xf1
  4214ea:	aad    0x18
  4214ec:	bound  edx,QWORD PTR [ecx+edx*1-0x3a942be0]
  4214f3:	add    edi,edi
  4214f5:	or     DWORD PTR [eax-0x9b83130],eax
  4214fb:	add    bh,BYTE PTR [edx]
  4214fd:	ins    DWORD PTR es:[edi],dx
  4214fe:	in     eax,0xb7
  421500:	and    ecx,DWORD PTR [edi-0x6e]
  421503:	xor    eax,0x3489de31
  421508:	adc    edx,DWORD PTR [edx]
  42150a:	mov    ebx,0x3317b5d2
  42150f:	push   0xffffffcc
  421511:	xchg   DWORD PTR [edi-0x3b],edx
  421514:	sub    ebp,DWORD PTR [esi+ebx*1+0x6d6864f9]
  42151b:	jp     0x42150a
  42151d:	push   ss
  42151e:	xor    DWORD PTR [ebx+edx*4],eax
  421521:	jecxz  0x421552
  421523:	stos   BYTE PTR es:[edi],al
  421524:	adc    eax,0x3d1e4d18
  421529:	repz je 0x421574
  42152c:	imul   edx,DWORD PTR [ebp+ebx*1-0x10],0xffffffec
  421531:	(bad)  
  421533:	push   ecx
  421534:	dec    esp
  421535:	pop    esi
  421536:	mov    ds:0xab08fe99,eax
  42153b:	pop    ss
  42153c:	sti    
  42153d:	jne    0x42154a
  42153f:	call   ecx
  421541:	xchg   ebx,eax
  421542:	aaa    
  421543:	addr16 push esi
  421545:	ds push es
  421547:	jns    0x4214f5
  421549:	fbld   TBYTE PTR [ebx+esi*4-0x43]
  42154d:	push   ecx
  42154e:	pop    esi
  42154f:	pop    edi
  421550:	aam    0xf5
  421552:	std    
  421553:	pop    es
  421554:	jbe    0x42155b
  421556:	neg    edi
  421558:	pop    ecx
  421559:	pop    edx
  42155a:	add    al,0x79
  42155c:	inc    edx
  42155d:	pop    ss
  42155e:	mov    esi,0xa19e0d35
  421563:	pop    ds
  421564:	ja     0x42155b
  421566:	test   al,0xbc
  421568:	test   BYTE PTR [ebx-0x4bdc39ba],cl
  42156e:	fwait
  42156f:	les    ebp,FWORD PTR [ebx-0x44]
  421572:	and    eax,DWORD PTR [ecx+0xf]
  421575:	call   DWORD PTR [edi]
  421577:	data16 rcr BYTE PTR [eax],0xd7
  42157b:	fisttp DWORD PTR [bp+si]
  42157e:	sbb    eax,0x7927e50a
  421583:	adc    BYTE PTR [edx],cl
  421585:	inc    esi
  421586:	rcr    al,0xa
  421589:	xchg   ecx,eax
  42158a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42158b:	je     0x42157e
  42158d:	lods   al,BYTE PTR ds:[esi]
  42158e:	ins    BYTE PTR es:[edi],dx
  42158f:	jmp    0xbc598cbf
  421594:	daa    
  421595:	or     al,0x98
  421597:	pop    ss
  421598:	inc    ecx
  421599:	cmp    cl,bh
  42159b:	aas    
  42159c:	repnz xchg esp,eax
  42159e:	stc    
  42159f:	push   ebp
  4215a0:	in     al,0x40
  4215a2:	shr    BYTE PTR [eax-0xff4026],cl
  4215a8:	sub    BYTE PTR ds:0x22d52646,cl
  4215ae:	pusha  
  4215af:	stos   DWORD PTR es:[edi],eax
  4215b0:	mov    eax,ds:0x525d57f1
  4215b5:	imul   ebp,DWORD PTR [ebx-0x2c],0x9
  4215b9:	xchg   BYTE PTR [ebp-0x6d],al
  4215bc:	xor    DWORD PTR [ecx],esp
  4215be:	or     eax,0x32f2881d
  4215c3:	int3   
  4215c4:	cwde   
  4215c5:	push   edx
  4215c6:	dec    BYTE PTR [esi-0x275d5c00]
  4215cc:	es mov edx,0xb8021912
  4215d2:	lock gs sti 
  4215d5:	mov    al,ds:0x409d6bbb
  4215da:	dec    ebp
  4215db:	fwait
  4215dc:	ret    
  4215dd:	popf   
  4215de:	xchg   ebx,eax
  4215df:	adc    al,0xb9
  4215e1:	inc    esp
  4215e2:	dec    esi
  4215e3:	out    0x21,al
  4215e5:	mov    ds:0x4703bae5,al
  4215ea:	xchg   ecx,eax
  4215eb:	sub    ah,ch
  4215ed:	div    BYTE PTR [ebp-0x3b]
  4215f0:	bound  ebp,QWORD PTR [eax+edx*8]
  4215f3:	clc    
  4215f4:	lods   eax,DWORD PTR ds:[esi]
  4215f5:	xor    ebp,edi
  4215f7:	jo     0x421607
  4215f9:	ja     0x4215d1
  4215fb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4215fc:	sbb    DWORD PTR [edx],0x50
  4215ff:	test   al,0xf4
  421601:	ret    
  421602:	mov    WORD PTR [eax-0x1d4fbee5],ss
  421608:	dec    eax
  421609:	iret   
  42160a:	scas   al,BYTE PTR es:[edi]
  42160b:	sub    dh,BYTE PTR [eax-0x65d4bcbb]
  421611:	xchg   ecx,eax
  421612:	(bad)  
  421614:	jl     0x421683
  421616:	xor    DWORD PTR [edi-0x308745e0],ebx
  42161c:	and    eax,0x1b74f086
  421621:	pop    edi
  421622:	add    eax,0xbcb80ed0
  421627:	sbb    edi,DWORD PTR [ecx+ebx*2+0x2d917386]
  42162e:	mov    ah,dl
  421630:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421631:	jecxz  0x4215db
  421633:	daa    
  421634:	jp     0x4215c2
  421636:	mov    ebp,DWORD PTR [ecx+0x5b]
  421639:	xchg   edx,eax
  42163a:	and    eax,0x8ca50ab5
  42163f:	dec    edi
  421640:	jmp    0x5ffff282
  421645:	push   esp
  421646:	arpl   si,bx
  421648:	push   0xe5bd8788
  42164d:	or     eax,0x5f02daf9
  421652:	inc    edi
  421653:	sbb    al,0x6f
  421655:	add    eax,0xa1aa14d9
  42165a:	or     DWORD PTR [edx],esp
  42165c:	xor    bh,BYTE PTR [ecx+0x30]
  42165f:	int    0xd3
  421661:	retf   
  421662:	mov    edx,0xf3ba264c
  421667:	mov    ebx,0x54e46826
  42166c:	loopne 0x42163a
  42166e:	addr16 adc bh,dl
  421671:	cmp    ebp,DWORD PTR [esi+edx*4]
  421674:	scas   eax,DWORD PTR es:[edi]
  421675:	in     eax,0xdf
  421677:	mov    esp,0x609dc30c
  42167c:	jmp    ecx
  42167e:	test   BYTE PTR ds:0x678aebba,0x3a
  421685:	daa    
  421686:	add    al,0xf6
  421688:	sar    DWORD PTR ds:0x7441b37c,0xe9
  42168f:	and    al,0xa3
  421691:	add    DWORD PTR [ebp-0x66],0x98db270a
  421698:	mov    esp,0xc25fc4b8
  42169d:	add    ebx,0x58
  4216a0:	xlat   BYTE PTR es:[ebx]
  4216a2:	pop    ebx
  4216a3:	cvtpi2ps xmm5,mm2
  4216a6:	(bad)  
  4216a7:	xor    al,0xc2
  4216a9:	mov    al,0xd8
  4216ab:	aam    0x45
  4216ad:	or     eax,0xccb3e1e0
  4216b2:	mov    edi,0xcbb190aa
  4216b7:	repz cmc 
  4216b9:	bound  ecx,QWORD PTR [edi-0x2e]
  4216bc:	cmp    edx,DWORD PTR [eax+0x49]
  4216bf:	add    bh,BYTE PTR [edi]
  4216c1:	(bad)  
  4216c2:	je     0x421730
  4216c4:	mov    esi,DWORD PTR [edi-0x1df67cd5]
  4216ca:	jne    0x4216bc
  4216cc:	pushf  
  4216cd:	push   ebx
  4216ce:	aad    0xec
  4216d0:	rol    BYTE PTR [edi+0x39],1
  4216d3:	push   esi
  4216d4:	imul   bh
  4216d6:	pop    ss
  4216d7:	cld    
  4216d8:	push   esi
  4216d9:	mov    edx,0xdd8b6b79
  4216de:	push   cs
  4216df:	scas   al,BYTE PTR es:[edi]
  4216e0:	cwde   
  4216e1:	pop    ebp
  4216e2:	adc    eax,0x19105453
  4216e7:	mul    ebx
  4216e9:	fistp  WORD PTR [esi+0x44d501ad]
  4216ef:	clc    
  4216f0:	sbb    ch,bh
  4216f2:	xor    ebx,edi
  4216f4:	inc    edi
  4216f5:	fdiv   DWORD PTR [edx+0x5b]
  4216f8:	sub    BYTE PTR [ecx+0x3b],al
  4216fb:	jo     0x421719
  4216fd:	out    0xf1,eax
  4216ff:	pushf  
  421700:	shl    ch,0x97
  421703:	mov    esp,0xa93ab35e
  421708:	jmp    0xfa80:0xafc7232
  42170f:	mov    ss,WORD PTR [ebx-0x4f]
  421712:	fmulp  st(7),st
  421714:	(bad)  
  421715:	xchg   edi,eax
  421716:	dec    edx
  421717:	pop    ebx
  421718:	and    dh,BYTE PTR [ebp-0x76]
  42171b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42171c:	pop    esi
  42171d:	mov    dl,0xf
  42171f:	stos   BYTE PTR es:[edi],al
  421720:	icebp  
  421721:	xchg   edx,eax
  421722:	or     DWORD PTR [esi],esi
  421724:	push   0x74
  421726:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421727:	ins    BYTE PTR es:[edi],dx
  421728:	xor    eax,0x9eef6a07
  42172d:	add    BYTE PTR [esi+0xf055671],dl
  421733:	xor    DWORD PTR [ebx+0x6],0x3f
  421737:	add    BYTE PTR [esi-0x28],0x88
  42173b:	add    eax,0x4ba6b522
  421740:	fild   DWORD PTR [ebx+0x7e]
  421743:	pop    edi
  421744:	ror    DWORD PTR [ebx+0x32d7d885],1
  42174a:	jae    0x4217be
  42174c:	jbe    0x4217aa
  42174e:	xlat   BYTE PTR ds:[ebx]
  42174f:	out    dx,al
  421750:	jne    0x421726
  421752:	inc    esp
  421753:	push   es
  421754:	sub    dh,cl
  421756:	xor    BYTE PTR ss:[ebp-0x3f4c3c],0xe5
  42175e:	and    eax,0x5f2cb72a
  421763:	push   0xe05e3182
  421768:	maxps  xmm2,XMMWORD PTR [ebx+ebx*4+0x64]
  42176d:	js     0x421790
  42176f:	dec    esi
  421770:	jmp    0x421789
  421772:	adc    bl,al
  421774:	lea    eax,[esi+0x41]
  421777:	add    BYTE PTR [edi-0x78],cl
  42177a:	add    al,BYTE PTR [esi+0x4]
  42177d:	mov    edi,0x8120f0e1
  421782:	(bad)  [ecx+esi*8-0x48407110]
  421789:	fs loopne 0x4217fb
  42178c:	push   edi
  42178d:	out    dx,al
  42178e:	ins    DWORD PTR es:[edi],dx
  42178f:	push   edx
  421790:	ficom  DWORD PTR [edi+0x2040e680]
  421796:	xchg   edx,eax
  421797:	icebp  
  421798:	add    esi,eax
  42179a:	or     eax,0x409b6e5f
  42179f:	pushf  
  4217a0:	mov    ebp,0xb895e462
  4217a5:	ss pop eax
  4217a7:	cwde   
  4217a8:	add    DWORD PTR [edi-0x15],edi
  4217ab:	sbb    BYTE PTR [ecx-0x5cee1b2e],0xf6
  4217b2:	push   0xffffff88
  4217b4:	sbb    BYTE PTR [ebx+edi*8+0x6f],bl
  4217b8:	and    ebp,ecx
  4217ba:	mov    edx,0x5ab535af
  4217bf:	add    esp,DWORD PTR [ecx-0xfa21d0e]
  4217c5:	aaa    
  4217c6:	rol    DWORD PTR [eax],cl
  4217c8:	mov    bh,dh
  4217ca:	push   edi
  4217cb:	retf   
  4217cc:	sbb    BYTE PTR [eax],bl
  4217ce:	pop    eax
  4217cf:	inc    eax
  4217d0:	out    dx,al
  4217d1:	daa    
  4217d2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4217d3:	push   ss
  4217d4:	sub    al,0x8e
  4217d6:	or     DWORD PTR ss:[ecx+0x509928ad],ebx
  4217dd:	push   es
  4217de:	or     DWORD PTR [ecx],ecx
  4217e0:	stos   DWORD PTR es:[edi],eax
  4217e1:	in     al,0xc4
  4217e3:	aad    0xd3
  4217e5:	jno    0x421850
  4217e7:	fcomip st,st(1)
  4217e9:	pop    edx
  4217ea:	pop    esi
  4217eb:	dec    ebx
  4217ec:	test   al,0xf6
  4217ee:	(bad)  
  4217ef:	test   dh,0x49
  4217f2:	add    esp,0x4f
  4217f5:	scas   al,BYTE PTR es:[edi]
  4217f6:	xchg   DWORD PTR [edx],esi
  4217f8:	ins    BYTE PTR es:[edi],dx
  4217f9:	retf   0x9c5e
  4217fc:	sahf   
  4217fd:	pop    ss
  4217fe:	xchg   esi,eax
  4217ff:	push   ds
  421800:	leave  
  421801:	pop    edi
  421802:	shl    DWORD PTR [esi],cl
  421804:	dec    ecx
  421805:	mov    bh,0xa1
  421807:	fs ins DWORD PTR es:[edi],dx
  421809:	fs mov eax,0xce79d518
  42180f:	js     0x421871
  421811:	data16 (bad) 
  421813:	pop    ds
  421814:	jbe    0x4217af
  421816:	loope  0x42183f
  421818:	xor    DWORD PTR [edx+0x30],ebx
  42181b:	xor    al,0xd9
  42181d:	fimul  WORD PTR [ecx-0x72]
  421820:	rcl    BYTE PTR [ecx-0x68],0x6f
  421824:	pop    ss
  421825:	aas    
  421826:	mov    edi,0x572d7ad4
  42182b:	sub    al,0x3c
  42182d:	mov    dh,0xd8
  42182f:	sar    DWORD PTR [ecx+edx*1+0x4f],1
  421833:	sub    al,0xc4
  421835:	adc    DWORD PTR [eax+0x43],ebx
  421838:	out    0x62,eax
  42183a:	nop
  42183b:	lock dec edi
  42183d:	cdq    
  42183e:	cmp    al,0xde
  421840:	or     DWORD PTR [edi+0x2ee77bac],0xffffff98
  421847:	sub    al,dh
  421849:	jle    0x42180d
  42184b:	clc    
  42184c:	mov    ch,0x2c
  42184e:	mov    ds:0x4f1848ce,al
  421853:	test   DWORD PTR [ecx-0x70510110],ebp
  421859:	pop    ebx
  42185a:	sbb    al,0x9f
  42185c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42185d:	lods   eax,DWORD PTR ds:[esi]
  42185e:	xchg   ch,ah
  421860:	in     al,dx
  421861:	sbb    bh,dh
  421863:	mov    dh,0x54
  421865:	and    esi,DWORD PTR [eax-0x1e]
  421868:	xchg   ebx,eax
  421869:	outs   dx,BYTE PTR ds:[esi]
  42186a:	push   ds
  42186b:	neg    BYTE PTR [esi]
  42186d:	mov    ecx,0x27b10307
  421872:	mov    al,0xd1
  421874:	in     eax,dx
  421875:	push   ecx
  421876:	or     BYTE PTR [ebx-0x481ee8f6],0xf7
  42187d:	ja     0x42187b
  42187f:	call   FWORD PTR [ebx+0x68]
  421882:	mov    dl,0xc3
  421884:	cmp    eax,0x5698db29
  421889:	mov    eax,0x80d54c89
  42188e:	cmp    DWORD PTR ds:0x593ad6cd,eax
  421894:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421895:	jg     0x4218cf
  421897:	loop   0x4218e9
  421899:	fistp  QWORD PTR [ebx-0x30bd8e30]
  42189f:	sub    eax,0x4c9296bf
  4218a4:	sub    al,0xf9
  4218a6:	sub    edi,DWORD PTR [ecx-0xe]
  4218a9:	shl    dh,1
  4218ab:	sub    ebx,DWORD PTR [ebp+ebx*8-0x4b]
  4218af:	ss add al,0x23
  4218b2:	mov    ds:0xa767a84a,eax
  4218b7:	xchg   DWORD PTR ds:[esi+0x5f28b2c9],ecx
  4218be:	ins    DWORD PTR es:[edi],dx
  4218bf:	jbe    0x4218cd
  4218c1:	xchg   BYTE PTR [ecx-0x2fa9b50b],cl
  4218c7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4218c8:	cmp    BYTE PTR [esi],ah
  4218ca:	call   0x95be:0xd599601
  4218d1:	hlt    
  4218d2:	loope  0x42186c
  4218d4:	inc    edi
  4218d5:	stos   DWORD PTR es:[edi],eax
  4218d6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4218d7:	test   eax,0xdf0a5426
  4218dc:	inc    esp
  4218dd:	pop    eax
  4218de:	inc    ecx
  4218df:	mov    cl,0x19
  4218e1:	sar    DWORD PTR [ebp-0x65dcbb6a],0xed
  4218e8:	arpl   WORD PTR [ebp+0x68],bx
  4218eb:	mov    bl,0xdf
  4218ed:	(bad)  
  4218ee:	cmp    bh,BYTE PTR [ebx+0x43]
  4218f1:	cwde   
  4218f2:	popf   
  4218f3:	aad    0xec
  4218f5:	xchg   BYTE PTR [edi+edi*4+0x1289a10d],al
  4218fc:	jne    0x421967
  4218fe:	jnp    0x42197a
  421900:	and    eax,0xbac3b4d6
  421905:	mov    DWORD PTR [ecx-0x52151857],eax
  42190b:	pusha  
  42190c:	aad    0xad
  42190e:	ss ds std 
  421911:	inc    eax
  421912:	dec    esi
  421913:	jnp    0x421959
  421915:	inc    esp
  421916:	shr    dl,cl
  421918:	adc    DWORD PTR [ebx],0x27
  42191b:	adc    al,BYTE PTR [edi+ebx*8+0x9]
  42191f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421920:	clc    
  421921:	retf   
  421922:	jmp    FWORD PTR [ebx+0x155aeb4a]
  421928:	test   BYTE PTR [esi-0x34],ah
  42192b:	int3   
  42192c:	pop    esi
  42192d:	cmp    dh,BYTE PTR [ebx]
  42192f:	arpl   WORD PTR [esi-0x45],bx
  421932:	jnp    0x421975
  421934:	and    al,0x35
  421936:	cmp    ah,ah
  421938:	xchg   dl,ah
  42193a:	int3   
  42193b:	jmp    0x421928
  42193d:	clc    
  42193e:	pop    edi
  42193f:	or     al,0xc8
  421941:	ins    BYTE PTR es:[edi],dx
  421942:	and    ebx,eax
  421944:	jns    0x42198f
  421946:	stos   DWORD PTR es:[edi],eax
  421947:	mov    eax,ds:0x37c8440a
  42194c:	adc    bh,ah
  42194e:	cmp    BYTE PTR [esi-0x7f7b8d44],bh
  421954:	and    ecx,DWORD PTR [ebp-0x2e]
  421957:	lods   al,BYTE PTR ds:[esi]
  421958:	mov    al,0xb7
  42195a:	stc    
  42195b:	mov    al,0xee
  42195d:	lods   eax,DWORD PTR ds:[esi]
  42195e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42195f:	imul   ebp,DWORD PTR [edi+ebp*4-0x61436ce8],0x3c08560b
  42196a:	sub    esp,DWORD PTR [ebx+0x89f0bca]
  421970:	add    al,0xdd
  421972:	cdq    
  421973:	sbb    BYTE PTR [edi+edx*2],cl
  421976:	jg     0x421973
  421978:	push   ds
  421979:	dec    edi
  42197a:	iret   
  42197b:	enter  0xe2aa,0xba
  42197f:	cdq    
  421980:	sbb    eax,0x250cde1b
  421985:	pop    ecx
  421986:	gs popa 
  421988:	icebp  
  421989:	lods   eax,DWORD PTR ds:[esi]
  42198a:	test   ebx,0x7923a35c
  421990:	mov    ds:0x86d8c7aa,al
  421995:	add    dl,ch
  421997:	mov    BYTE PTR ds:0x51af5fba,bh
  42199d:	test   BYTE PTR [edi+0x59991dcb],bl
  4219a3:	and    DWORD PTR [ecx],eax
  4219a5:	inc    edx
  4219a6:	ret    
  4219a7:	pushf  
  4219a8:	inc    esp
  4219a9:	sub    bh,bl
  4219ab:	popa   
  4219ac:	adc    ch,BYTE PTR [edi-0x49]
  4219af:	lods   al,BYTE PTR ds:[esi]
  4219b0:	sub    eax,0x195d91d5
  4219b5:	mov    ecx,0xe4b15c6
  4219ba:	pop    ebx
  4219bb:	mov    esp,0x9825f00d
  4219c0:	imul   edi,DWORD PTR [ecx-0x3f],0x1d85b542
  4219c7:	xor    ah,dh
  4219c9:	imul   ebx,DWORD PTR [ebx+0x46614211],0xba5fde32
  4219d3:	sub    DWORD PTR [esi],edi
  4219d5:	lahf   
  4219d6:	out    0xda,al
  4219d8:	jle    0x4219a0
  4219da:	hlt    
  4219db:	mov    edx,0x616c19bc
  4219e0:	jg     0x4219d7
  4219e2:	add    BYTE PTR [ebp+0x29],ah
  4219e5:	add    DWORD PTR [esi],esp
  4219e7:	jmp    0x421a03
  4219e9:	push   eax
  4219ea:	fadd   QWORD PTR [ebp-0x68]
  4219ed:	pop    edx
  4219ee:	loope  0x421973
  4219f0:	imul   BYTE PTR [ebx-0x371055cf]
  4219f6:	dec    eax
  4219f7:	leave  
  4219f8:	(bad)  
  4219f9:	jecxz  0x421987
  4219fb:	loopne 0x42197f
  4219fd:	mov    esp,0xb05ebedb
  421a02:	out    0xec,eax
  421a04:	int3   
  421a05:	ror    edx,0x9f
  421a08:	stos   BYTE PTR es:[edi],al
  421a09:	imul   esp,DWORD PTR [ebp+0xf],0x79
  421a0d:	addr16 jmp 0x421a76
  421a10:	mov    esp,0x15eaf8ed
  421a15:	mov    fs,WORD PTR [eax+0x3c]
  421a18:	test   eax,0x33951ca7
  421a1d:	loop   0x421a43
  421a1f:	stc    
  421a20:	ins    BYTE PTR es:[edi],dx
  421a21:	pop    edx
  421a22:	jo     0x4219fe
  421a24:	into   
  421a25:	outs   dx,DWORD PTR ds:[esi]
  421a26:	xchg   esi,eax
  421a27:	sbb    BYTE PTR [ecx-0x29597b76],bh
  421a2d:	pop    ebx
  421a2e:	test   al,0x3b
  421a30:	in     al,0x14
  421a32:	or     DWORD PTR [ebp+0x1d],0xffffffdd
  421a36:	aaa    
  421a37:	les    edi,FWORD PTR [esi+0x782abf9e]
  421a3d:	test   eax,0x60177d43
  421a42:	(bad)  
  421a44:	jns    0x421a03
  421a46:	mov    gs,WORD PTR [eax+ebp*4]
  421a49:	rcl    esp,cl
  421a4b:	jbe    0x421a1d
  421a4d:	mov    ebp,DWORD PTR [ecx+ecx*2+0x4c724c15]
  421a54:	sub    DWORD PTR [ebx],ebp
  421a56:	pop    ss
  421a57:	adc    ch,0x75
  421a5a:	and    al,ah
  421a5c:	les    edi,FWORD PTR [ebx]
  421a5e:	push   edx
  421a5f:	stos   BYTE PTR es:[edi],al
  421a60:	xor    dl,BYTE PTR [edx+0x179537ab]
  421a66:	inc    ebp
  421a67:	shr    BYTE PTR [ebx-0x75],cl
  421a6a:	mov    eax,ds:0x1483cb0e
  421a6f:	xchg   edx,eax
  421a70:	mov    eax,0xfdd055a7
  421a75:	dec    esi
  421a76:	vmwrite ebp,DWORD PTR [eax]
  421a79:	aaa    
  421a7a:	inc    esp
  421a7b:	popf   
  421a7c:	add    al,0xa7
  421a7e:	outs   dx,DWORD PTR ds:[esi]
  421a7f:	test   DWORD PTR [eax],esi
  421a81:	sub    eax,0x4195a608
  421a86:	jmp    0xf9454595
  421a8b:	scas   al,BYTE PTR es:[edi]
  421a8c:	mov    ds:0xd0b83e9b,eax
  421a91:	into   
  421a92:	(bad)  
  421a93:	ret    
  421a94:	jbe    0x421ab4
  421a96:	mov    ss,WORD PTR [esi-0x2a]
  421a99:	fcomp  st(6)
  421a9b:	ins    DWORD PTR es:[edi],dx
  421a9c:	sbb    al,0x1e
  421a9e:	ret    
  421a9f:	jge    0x421a93
  421aa1:	inc    edx
  421aa2:	add    al,0xaa
  421aa4:	inc    ebp
  421aa5:	loope  0x421b02
  421aa7:	nop
  421aa8:	imul   edx,DWORD PTR [ecx+edi*2],0x7736ffa7
  421aaf:	leave  
  421ab0:	pop    ds
  421ab1:	sbb    al,0x53
  421ab3:	iret   
  421ab4:	ret    0x758a
  421ab7:	dec    ebp
  421ab8:	(bad)  
  421ab9:	jo     0x421ab2
  421abb:	outs   dx,DWORD PTR ds:[esi]
  421abc:	inc    edx
  421abd:	adc    al,0x76
  421abf:	mov    esp,0x87b1f2b9
  421ac4:	ds sub ebp,0x8c7f566
  421acb:	cmc    
  421acc:	cmp    al,0x1
  421ace:	leave  
  421acf:	in     eax,dx
  421ad0:	mov    BYTE PTR [ebx],ch
  421ad2:	push   ss
  421ad3:	sub    ah,BYTE PTR [edi-0x7bb38e89]
  421ad9:	and    DWORD PTR [esi-0x45fad626],edx
  421adf:	mov    al,ds:0xff2b5c6f
  421ae4:	aaa    
  421ae5:	mov    cl,0x53
  421ae7:	ja     0x421ac2
  421ae9:	sbb    DWORD PTR [eax+0x1b],esp
  421aec:	push   esp
  421aed:	mov    dl,0x7b
  421aef:	push   0x816e66d5
  421af4:	cdq    
  421af5:	dec    eax
  421af6:	retf   
  421af7:	push   ebx
  421af8:	jge    0x421ad8
  421afa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421afb:	int3   
  421afc:	mov    ds:0xb8fe532,eax
  421b01:	jmp    0xb474133c
  421b06:	cs xchg edi,eax
  421b08:	pop    edi
  421b09:	mov    ds:0xe15898d5,eax
  421b0e:	xor    esp,edx
  421b10:	(bad)  
  421b11:	in     eax,0x92
  421b13:	mov    dh,0x8a
  421b15:	inc    edi
  421b16:	imul   esi,DWORD PTR [esp+eiz*8],0x1c59f68a
  421b1d:	ins    BYTE PTR es:[edi],dx
  421b1e:	push   ecx
  421b1f:	push   ecx
  421b20:	dec    esi
  421b21:	xchg   ecx,eax
  421b22:	int3   
  421b23:	xor    eax,0xf63e3b45
  421b28:	add    cl,BYTE PTR [esp+eiz*4-0x4de02f0b]
  421b2f:	(bad)  
  421b30:	dec    edx
  421b31:	sub    DWORD PTR [ebx+0x502bf8ac],ebp
  421b37:	into   
  421b38:	in     eax,dx
  421b39:	and    cl,bh
  421b3b:	call   0x73b4d1f3
  421b40:	and    eax,0x6655d1c3
  421b45:	jmp    0x3a34:0x24f96d81
  421b4c:	jecxz  0x421af4
  421b4e:	cmc    
  421b4f:	push   ds
  421b50:	mov    dl,0xcd
  421b52:	std    
  421b53:	(bad)  
  421b54:	push   esp
  421b55:	mov    ds:0x5dbe68d6,eax
  421b5a:	add    eax,0xd763d3c9
  421b5f:	popf   
  421b60:	cdq    
  421b61:	in     al,dx
  421b62:	cmp    edi,eax
  421b64:	into   
  421b65:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421b66:	(bad)
  421b6a:	pushf  
  421b6b:	mov    ds:0x2f6f965f,al
  421b70:	xchg   edx,eax
  421b71:	pop    esi
  421b72:	outs   dx,DWORD PTR ds:[esi]
  421b73:	hlt    
  421b74:	fld    DWORD PTR [edx+0x4fc84734]
  421b7a:	mov    ch,0x33
  421b7c:	xchg   BYTE PTR [eax-0x6a2f64ee],ah
  421b82:	xchg   esp,eax
  421b83:	inc    edx
  421b84:	lea    ebp,[esi+0x59867e41]
  421b8a:	mov    esi,0xc946d45a
  421b8f:	arpl   WORD PTR [esi+0x64],bp
  421b92:	sbb    ebx,esi
  421b94:	mov    esp,0xee844a59
  421b99:	neg    esi
  421b9b:	or     ecx,DWORD PTR ds:0xe7291710
  421ba1:	add    BYTE PTR [esp+esi*2-0x68],ch
  421ba5:	mov    al,ds:0x20069ac4
  421baa:	inc    edi
  421bab:	lods   al,BYTE PTR ds:[esi]
  421bac:	and    ebx,DWORD PTR [ebp+0x32b1180d]
  421bb2:	jb     0x421bd5
  421bb4:	pop    esp
  421bb5:	rol    BYTE PTR [esi-0x49b9dcff],1
  421bbb:	gs aaa 
  421bbd:	push   0xffffffb0
  421bbf:	or     DWORD PTR [ebp-0xd],ecx
  421bc2:	mov    edi,0xb5094197
  421bc7:	das    
  421bc8:	out    0xed,al
  421bca:	out    dx,al
  421bcb:	in     al,dx
  421bcc:	cmp    DWORD PTR ds:0x745a5292,edi
  421bd2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421bd3:	sahf   
  421bd4:	mov    esi,0xa5d3a2a
  421bd9:	xchg   edi,eax
  421bda:	sbb    dl,ah
  421bdc:	lock retf 
  421bde:	aam    0xb2
  421be0:	pop    es
  421be1:	lahf   
  421be2:	adc    ah,ah
  421be4:	push   ebp
  421be5:	bound  esp,QWORD PTR [edi]
  421be7:	ret    0x8681
  421bea:	add    DWORD PTR [edi+0x55],ebp
  421bed:	int3   
  421bee:	cmp    DWORD PTR [ebp+edi*4-0x495db260],0xffffffbc
  421bf6:	and    esp,DWORD PTR [edx-0x7e7ed399]
  421bfc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421bfd:	inc    eax
  421bfe:	jo     0x421bf1
  421c00:	dec    esp
  421c01:	mov    esp,0x8a3800ba
  421c06:	sbb    esi,DWORD PTR [esi-0x4e746e24]
  421c0c:	je     0x421bb6
  421c0e:	xchg   BYTE PTR [esi],ch
  421c10:	div    DWORD PTR [edi-0x76]
  421c13:	gs ret 
  421c15:	xor    DWORD PTR [ebp-0x55279aaa],ecx
  421c1b:	ror    esi,0x69
  421c1e:	lahf   
  421c1f:	mov    ds:0x95794533,al
  421c24:	xor    DWORD PTR [edi-0x3f89e696],ebx
  421c2a:	mov    edx,DWORD PTR [ebx+0x6a93c57]
  421c30:	pop    edi
  421c31:	test   BYTE PTR [esi],0x37
  421c34:	mov    cl,BYTE PTR [ebx+0x11e46ff5]
  421c3a:	mov    al,ds:0x94936b41
  421c3f:	and    ch,BYTE PTR [ebx+0x29]
  421c42:	xor    esi,DWORD PTR [eax-0x1a]
  421c45:	pmuludq mm2,QWORD PTR [ebp-0x33]
  421c49:	jno    0x421c89
  421c4b:	adc    al,0xe8
  421c4d:	xchg   edi,eax
  421c4e:	outs   dx,DWORD PTR ds:[esi]
  421c4f:	cmp    BYTE PTR [ecx+0xb2d428],ch
  421c55:	fisubr DWORD PTR [edx-0x2860e6b5]
  421c5b:	mov    bl,0x4c
  421c5d:	popf   
  421c5e:	frstor [eax+0x5e64e5c8]
  421c64:	scas   eax,DWORD PTR es:[edi]
  421c65:	xchg   ebp,eax
  421c66:	push   ebx
  421c67:	mov    dl,0xe4
  421c69:	add    bh,BYTE PTR [eax]
  421c6b:	cmp    cl,ah
  421c6d:	sbb    bl,BYTE PTR [ebx]
  421c6f:	das    
  421c70:	inc    esi
  421c71:	and    cl,BYTE PTR [ecx]
  421c73:	aad    0x8c
  421c75:	loop   0x421c98
  421c77:	ins    DWORD PTR es:[edi],dx
  421c78:	je     0x421c54
  421c7a:	mov    bl,0xff
  421c7c:	(bad)  
  421c7e:	loop   0x421cc1
  421c80:	sub    BYTE PTR [ecx-0x7a],bh
  421c83:	pop    ebp
  421c84:	int    0xf9
  421c86:	pop    esp
  421c87:	sub    ah,cl
  421c89:	and    eax,DWORD PTR [edi]
  421c8b:	mov    BYTE PTR [eax],cl
  421c8d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421c8e:	mov    cl,0xda
  421c90:	jbe    0x421cf6
  421c92:	adc    ecx,ecx
  421c94:	pop    edi
  421c95:	sar    DWORD PTR [edx],cl
  421c97:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421c98:	ins    DWORD PTR es:[edi],dx
  421c99:	dec    ebp
  421c9a:	in     ax,0xc8
  421c9d:	sub    BYTE PTR [ebx-0xe545b4d],dl
  421ca3:	dec    edi
  421ca4:	addr16 repz icebp 
  421ca7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421ca8:	sub    ebx,DWORD PTR [ecx-0x1d0998b9]
  421cae:	cs and al,0x1b
  421cb1:	push   ebp
  421cb2:	inc    eax
  421cb3:	inc    ebp
  421cb4:	mov    gs,WORD PTR [edx]
  421cb6:	adc    BYTE PTR [edx],dl
  421cb8:	out    dx,al
  421cb9:	rcr    BYTE PTR [ebx-0x4d],cl
  421cbc:	sub    eax,0xa457c3e2
  421cc1:	retf   
  421cc2:	and    DWORD PTR [ebx+esi*1+0x5d],ebp
  421cc6:	retf   0x84f3
  421cc9:	ds call 0xbc0f:0x2df46cf
  421cd1:	stos   DWORD PTR es:[edi],eax
  421cd2:	add    al,0x86
  421cd4:	sar    DWORD PTR [edx],cl
  421cd6:	(bad)  
  421cd7:	shr    cl,1
  421cd9:	aam    0xbe
  421cdb:	pop    esp
  421cdc:	sub    BYTE PTR [eax+0x47],bh
  421cdf:	outs   dx,DWORD PTR ds:[esi]
  421ce0:	clc    
  421ce1:	cmps   DWORD PTR fs:[esi],DWORD PTR es:[edi]
  421ce3:	cmp    bh,BYTE PTR [ecx]
  421ce5:	es aam 0xb7
  421ce8:	ret    0x19c9
  421ceb:	lock fcompp 
  421cee:	cmp    eax,0xd14f930c
  421cf3:	call   0x5f1604d3
  421cf8:	jecxz  0x421ca3
  421cfa:	aad    0xed
  421cfc:	pop    esi
  421cfd:	adc    eax,0xc0e42ed2
  421d02:	out    0xe7,eax
  421d04:	mov    eax,ds:0xc7e91ebc
  421d09:	pop    edi
  421d0a:	pop    edx
  421d0b:	mov    edx,fs
  421d0d:	jnp    0x421d6e
  421d0f:	mul    DWORD PTR [edx-0x38]
  421d12:	mov    cl,al
  421d14:	in     al,0x36
  421d16:	cmp    eax,0xba5bf399
  421d1b:	mov    edi,0xf8ab46c9
  421d20:	aad    0xc9
  421d22:	xchg   esi,eax
  421d23:	cmc    
  421d24:	test   eax,0x191b1b22
  421d29:	mov    bl,0xd7
  421d2b:	sbb    dl,BYTE PTR [edx+eax*8+0x5666694a]
  421d32:	dec    edi
  421d33:	sti    
  421d34:	jno    0x421d5a
  421d36:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421d37:	sub    eax,edx
  421d39:	adc    eax,0x75c58863
  421d3e:	pop    edx
  421d3f:	addr16 add eax,0x1fc22440
  421d45:	jne    0x421d55
  421d47:	and    DWORD PTR [ebx+eax*4-0x93ddd0d],ebp
  421d4e:	pop    ss
  421d4f:	cmp    edi,DWORD PTR [ebx-0x1d]
  421d52:	mov    ds:0x43b750d1,al
  421d57:	and    eax,0xf2055749
  421d5c:	pushf  
  421d5d:	and    ebx,esp
  421d5f:	bnd jle 0x421d8d
  421d62:	jne    0x421d91
  421d64:	pop    ecx
  421d65:	fstp   QWORD PTR [eax-0x22c64c1c]
  421d6b:	aas    
  421d6c:	dec    edi
  421d6d:	aas    
  421d6e:	jns    0x421d4a
  421d70:	jbe    0x421d36
  421d72:	(bad)  
  421d73:	or     al,0xf4
  421d75:	sbb    BYTE PTR [ecx-0x734b1e75],cl
  421d7b:	dec    eax
  421d7c:	lds    edi,FWORD PTR [ecx+0x511be430]
  421d82:	inc    esi
  421d83:	nop
  421d84:	jg     0x421d0d
  421d86:	mov    ch,0x65
  421d88:	in     al,dx
  421d89:	shl    BYTE PTR [esi+eax*2],1
  421d8c:	mov    DWORD PTR [edx],esp
  421d8e:	cmp    DWORD PTR [eax+0x38],ecx
  421d91:	(bad)  
  421d92:	jmp    0x12482166
  421d97:	sub    ah,al
  421d99:	mov    ebp,0x5b40e34d
  421d9e:	in     al,0xea
  421da0:	pop    ebp
  421da1:	pop    edi
  421da2:	xor    eax,0x475fb898
  421da7:	mov    DWORD PTR [esp+edi*4+0x4199ae11],ebx
  421dae:	psubsb mm4,QWORD PTR [ebx-0x31]
  421db2:	jmp    0x8ac4:0xdb40a6ec
  421db9:	xchg   esi,eax
  421dba:	xor    dh,dh
  421dbc:	and    eax,0xeade05b9
  421dc1:	(bad)  
  421dc3:	mov    eax,0xfebb349b
  421dc8:	jp     0x421dde
  421dca:	xor    esp,DWORD PTR [edi]
  421dcc:	in     eax,dx
  421dcd:	jmp    0x421da7
  421dcf:	out    dx,eax
  421dd0:	imul   esp,DWORD PTR [esi],0xd60c287
  421dd6:	xchg   cl,bl
  421dd8:	inc    esi
  421dd9:	stc    
  421dda:	or     edx,DWORD PTR [ebx-0x46]
  421ddd:	leave  
  421dde:	mov    WORD PTR [edx+0x7],cs
  421de1:	call   0xf11a5d56
  421de6:	daa    
  421de7:	xor    ebx,0xd04c6bf4
  421ded:	mov    ch,0xf6
  421def:	sub    edx,DWORD PTR [edi+0x55]
  421df2:	call   0xd3a5f4a3
  421df7:	test   al,0xdb
  421df9:	sti    
  421dfa:	mov    bh,0x6e
  421dfc:	fisttp WORD PTR [ebx-0x2497b0ac]
  421e02:	mov    esi,0x24b57854
  421e07:	mov    al,0x79
  421e09:	js     0x421e17
  421e0b:	sub    DWORD PTR [edi],esp
  421e0d:	xchg   edx,eax
  421e0e:	sub    al,0xc8
  421e10:	mov    BYTE PTR [edi],dl
  421e12:	dec    ecx
  421e13:	jmp    0xfa60fd89
  421e18:	mov    ss,ebp
  421e1a:	pop    ebx
  421e1b:	add    eax,0x9df3ab0c
  421e20:	in     al,0xbd
  421e22:	pop    edi
  421e23:	pop    esi
  421e24:	test   DWORD PTR [eax],0x8425cba5
  421e2a:	pop    eax
  421e2b:	test   eax,0xc0ec6e8
  421e30:	ds test eax,0xedcb8c8d
  421e36:	or     BYTE PTR [edi+0xfa60826],ch
  421e3c:	fnstcw WORD PTR [edx+0xab5d9d7]
  421e42:	sub    DWORD PTR [edi],edx
  421e44:	repnz ins BYTE PTR es:[edi],dx
  421e46:	and    eax,0xc65c7b35
  421e4b:	rcr    BYTE PTR [edi-0x64],1
  421e4e:	gs data16 sub ch,0x4e
  421e53:	stos   BYTE PTR es:[edi],al
  421e54:	push   0x5f
  421e56:	in     eax,dx
  421e57:	fdiv   QWORD PTR [ebx+0xafaff9a]
  421e5d:	xor    BYTE PTR [ecx-0x550400d0],ch
  421e63:	lahf   
  421e64:	mov    BYTE PTR [ebx+0x5f9ddbaf],al
  421e6a:	imul   edi,DWORD PTR [edx],0x2e
  421e6d:	pusha  
  421e6e:	sbb    BYTE PTR [ebx+0x6d],dl
  421e71:	pop    esp
  421e72:	add    eax,0x1a33c3f9
  421e77:	fsub   QWORD PTR [edi]
  421e79:	jnp    0x421e55
  421e7b:	rcl    cl,0xfe
  421e7e:	add    eax,0x75a75923
  421e83:	dec    ebx
  421e84:	aas    
  421e85:	les    esp,FWORD PTR [eax+0x24a3c1f3]
  421e8b:	inc    eax
  421e8c:	xor    eax,0xdfdbce2b
  421e91:	mov    BYTE PTR [edx],0x70
  421e94:	adc    eax,0xe4a4effa
  421e99:	adc    al,0x70
  421e9b:	sub    eax,0xa6e2135d
  421ea0:	jl     0x421e26
  421ea2:	test   eax,0x7362892f
  421ea7:	pop    ebx
  421ea8:	jo     0x421eef
  421eaa:	out    dx,al
  421eab:	retf   0xcae2
  421eae:	fldcw  WORD PTR [edi]
  421eb0:	mov    ah,0xa9
  421eb2:	dec    ebp
  421eb3:	lea    edi,[eax+0x4943694c]
  421eb9:	inc    edx
  421eba:	dec    BYTE PTR [ebp+0x4f]
  421ebd:	das    
  421ebe:	mov    esp,0xe288cf42
  421ec3:	and    DWORD PTR [edi+0x57],esi
  421ec6:	jmp    0x2e877e29
  421ecb:	lea    edx,[edx]
  421ecd:	punpckhdq mm7,QWORD PTR [edi-0x3e]
  421ed1:	ret    0xcaec
  421ed4:	pop    ds
  421ed5:	mov    bl,0xd0
  421ed7:	aad    0x50
  421ed9:	cmp    DWORD PTR [edx-0x28],edi
  421edc:	dec    edi
  421edd:	je     0x421f12
  421edf:	dec    esp
  421ee0:	cmp    al,0x83
  421ee2:	sbb    DWORD PTR [eax+0x19],esi
  421ee5:	stos   BYTE PTR es:[edi],al
  421ee6:	imul   ebp
  421ee8:	div    bl
  421eea:	fadd   DWORD PTR [eax+eiz*1]
  421eed:	add    BYTE PTR [edi-0x5442caa1],ch
  421ef3:	loope  0x421e89
  421ef5:	pop    esi
  421ef6:	sti    
  421ef7:	daa    
  421ef8:	jecxz  0x421f15
  421efa:	adc    eax,0xc609c672
  421eff:	rol    BYTE PTR [ecx+esi*4+0x7622e7d9],1
  421f06:	(bad)  
  421f07:	and    DWORD PTR [edx+0x7c1cdf1b],esi
  421f0d:	push   ss
  421f0e:	adc    DWORD PTR [esi-0x7b],esi
  421f11:	push   esi
  421f12:	loope  0x421ea1
  421f14:	xchg   edi,eax
  421f15:	dec    ecx
  421f16:	popa   
  421f17:	dec    ecx
  421f18:	or     BYTE PTR [ecx-0x607f6f2f],al
  421f1e:	or     BYTE PTR [edi],dh
  421f20:	or     edi,DWORD PTR [edi-0x2c0145b5]
  421f26:	push   esp
  421f27:	das    
  421f28:	fsubr  QWORD PTR [ecx+0x1d]
  421f2b:	jno    0x421f84
  421f2d:	and    edi,ecx
  421f2f:	pop    esp
  421f30:	xchg   esp,eax
  421f31:	jmp    0x48ad17ba
  421f36:	clc    
  421f37:	dec    esp
  421f38:	mov    cl,0x2b
  421f3a:	push   edi
  421f3b:	loopne 0x421f68
  421f3d:	jne    0x421f84
  421f3f:	stos   BYTE PTR es:[edi],al
  421f40:	(bad)  
  421f41:	sub    dl,BYTE PTR [ecx-0x5a]
  421f44:	out    0xf0,al
  421f46:	retf   0x164a
  421f49:	std    
  421f4a:	rcr    DWORD PTR [esi],0x36
  421f4d:	and    DWORD PTR [edi],edi
  421f4f:	mul    BYTE PTR [ebx+0x26]
  421f52:	retf   
  421f53:	dec    ecx
  421f54:	mov    ds:0xa4705bb6,al
  421f59:	pop    ds
  421f5a:	push   ds
  421f5b:	fnstcw WORD PTR [esi+0x73]
  421f5e:	arpl   WORD PTR [ebp+0x38],ax
  421f61:	inc    edx
  421f62:	push   esp
  421f63:	neg    BYTE PTR [ebp-0x195b8a91]
  421f69:	mov    ecx,0x76be7bfc
  421f6e:	icebp  
  421f6f:	les    ebx,FWORD PTR [edi-0x15f23e9d]
  421f75:	pushf  
  421f76:	sbb    al,bl
  421f78:	arpl   WORD PTR [ebx+esi*4-0x55],ax
  421f7c:	out    0xc4,eax
  421f7e:	int    0x1c
  421f80:	push   edi
  421f81:	pop    ebx
  421f82:	and    eax,0x19db1a50
  421f87:	in     al,dx
  421f88:	and    dh,BYTE PTR [ebx]
  421f8a:	adc    eax,0xe15b1f73
  421f8f:	lock or dl,BYTE PTR [edi+0x17096273]
  421f96:	xchg   edi,eax
  421f97:	pop    ebp
  421f98:	xchg   ecx,eax
  421f99:	pop    esp
  421f9a:	ror    edx,0xd2
  421f9d:	xor    DWORD PTR [eiz*2+0x529b0407],0x13
  421fa5:	dec    ecx
  421fa6:	sbb    BYTE PTR [eax-0x17],ah
  421fa9:	mov    dl,0x76
  421fab:	pop    esi
  421fac:	(bad)  
  421fad:	jnp    0x421f37
  421faf:	jnp    0x421fb6
  421fb1:	or     eax,0x3201dba6
  421fb6:	cmp    al,0x47
  421fb8:	popf   
  421fb9:	daa    
  421fba:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421fbb:	cmpxchg BYTE PTR [edi-0x3728e035],ah
  421fc2:	push   edx
  421fc3:	ins    BYTE PTR es:[edi],dx
  421fc4:	push   ebp
  421fc5:	jge    0x421fa8
  421fc7:	sub    BYTE PTR [eax+0x79a2d256],bh
  421fcd:	in     al,dx
  421fce:	ins    DWORD PTR es:[edi],dx
  421fcf:	aas    
  421fd0:	(bad)  
  421fd1:	popa   
  421fd2:	test   DWORD PTR [esi],edi
  421fd4:	inc    esi
  421fd5:	xor    esp,eax
  421fd7:	cmp    edi,DWORD PTR [edi+0x25215755]
  421fdd:	inc    esp
  421fde:	adc    ch,ah
  421fe0:	jge    0x421f92
  421fe2:	push   0xb76d24f5
  421fe7:	jle    0x421ffc
  421fe9:	test   DWORD PTR [eax],ebx
  421feb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421fec:	(bad)  
  421fed:	jge    0x422033
  421fef:	xor    dl,bl
  421ff1:	mov    bl,0xec
  421ff3:	pop    esi
  421ff4:	lsl    ecx,WORD PTR fs:[edx+0x1d612d8c]
  421ffc:	and    DWORD PTR [ebx-0x7b],0x4038f93f
  422003:	popf   
  422004:	add    eax,0x6c52aec9
  422009:	xor    ah,BYTE PTR [edi-0x114c41d7]
  42200f:	ror    esi,0x58
  422012:	and    edx,DWORD PTR [edx-0x6]
  422015:	sti    
  422016:	test   al,0x17
  422018:	daa    
  422019:	xchg   esi,eax
  42201a:	in     eax,0x52
  42201c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42201d:	cmp    al,0x79
  42201f:	test   al,0xb8
  422021:	pop    esi
  422022:	mov    eax,?
  422024:	imul   esp,DWORD PTR [esi],0xffffffd4
  422027:	cdq    
  422028:	fwait
  422029:	ss push edi
  42202b:	add    al,0xe
  42202d:	push   0xedf9a305
  422032:	jle    0x422032
  422034:	sbb    DWORD PTR [ecx-0x9],esi
  422037:	xchg   esi,eax
  422038:	cmp    BYTE PTR [ecx+0x60],al
  42203b:	das    
  42203c:	mov    ch,0xd9
  42203e:	js     0x422060
  422040:	xchg   edx,eax
  422041:	mov    ds:0xd3af96cc,al
  422046:	js     0x42205d
  422048:	cmp    BYTE PTR [eax],0x97
  42204b:	push   ebp
  42204c:	fld    DWORD PTR [eax]
  42204e:	mov    dh,0x31
  422050:	mov    esp,0x29cc9f6d
  422055:	cmp    al,0x76
  422057:	pop    esi
  422058:	data16 lahf 
  42205a:	out    0xbc,al
  42205c:	cld    
  42205d:	ja     0x422054
  42205f:	dec    edx
  422060:	imul   edi,edi,0x4283a735
  422066:	add    bh,bh
  422068:	xor    eax,0x428423
  42206d:	push   DWORD PTR [ebp-0x28]
  422070:	push   DWORD PTR [ebp-0x2c]
  422073:	mov    eax,DWORD PTR [ebp-0x14]
  422076:	call   eax
  422078:	mov    eax,DWORD PTR [ebp-0x30]
  42207b:	jmp    0x422559
  422080:	xchg   ebp,eax
  422081:	rol    DWORD PTR [edx],0x97
  422084:	push   es
  422085:	mov    eax,DWORD PTR [edi+0x689842c3]
  42208b:	mul    bl
  42208d:	test   BYTE PTR [esi],0x6e
  422090:	mov    al,ds:0xbd7a7d8a
  422095:	jle    0x422111
  422097:	jp     0x42209a
  422099:	lods   al,BYTE PTR ds:[esi]
  42209a:	jbe    0x42210c
  42209c:	mov    eax,ds:0xd7c6efad
  4220a1:	xor    al,BYTE PTR [edi+0x5e3632cd]
  4220a7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4220a8:	aas    
  4220a9:	sbb    DWORD PTR [eax+ebx*2],ebx
  4220ac:	sub    al,0x58
  4220ae:	pop    eax
  4220af:	sub    BYTE PTR [ebp+0x71d8c752],0xd
  4220b6:	mov    ebx,0x47e16487
  4220bb:	fdiv   DWORD PTR [ecx-0x3a8ee01]
  4220c1:	push   ds
  4220c2:	loopne 0x4220fd
  4220c4:	std    
  4220c5:	sub    al,BYTE PTR [edx]
  4220c7:	mov    bh,0x37
  4220c9:	ret    
  4220ca:	mov    al,ds:0xb06a4dba
  4220cf:	xchg   BYTE PTR [bx+di-0x14e8],bl
  4220d4:	or     al,0x1f
  4220d6:	sub    DWORD PTR [edx],ebx
  4220d8:	popa   
  4220d9:	push   0x52
  4220db:	inc    ebx
  4220dc:	sub    eax,0x9a9c00ac
  4220e1:	push   ebp
  4220e2:	cmp    edx,DWORD PTR [esi-0x4e3fbaa6]
  4220e8:	test   BYTE PTR [edx-0x4ad06e7d],bl
  4220ee:	repnz fnstsw WORD PTR [ecx]
  4220f1:	fistp  DWORD PTR [edi]
  4220f3:	xor    DWORD PTR [ebx-0x1e],eax
  4220f6:	add    bl,BYTE PTR [ebx+0x45]
  4220f9:	mov    dh,0xfe
  4220fb:	jbe    0x4220d7
  4220fd:	push   ss
  4220fe:	daa    
  4220ff:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422100:	mov    dh,0x5b
  422102:	sti    
  422103:	push   esi
  422104:	(bad)  
  422105:	push   0xb3f51abf
  42210a:	sti    
  42210b:	mov    ch,0xc8
  42210d:	mov    ebx,DWORD PTR [eax+esi*4]
  422110:	mov    ch,0xb6
  422112:	test   DWORD PTR [ebx-0x2c],esi
  422115:	dec    ecx
  422116:	fisttp DWORD PTR [ebx]
  422118:	jno    0x4220a6
  42211a:	call   0x1992:0x61d0616f
  422121:	dec    esi
  422122:	and    BYTE PTR [eax],0x2a
  422125:	pop    ecx
  422126:	lea    ebx,[edi]
  422128:	cdq    
  422129:	leave  
  42212a:	stos   BYTE PTR es:[edi],al
  42212b:	jge    0x4220d9
  42212d:	push   cs
  42212e:	cmp    DWORD PTR [esi+0x4977bf95],edx
  422134:	add    al,BYTE PTR ds:0xef84173a
  42213a:	jns    0x422132
  42213c:	pop    ecx
  42213d:	cwde   
  42213e:	nop
  42213f:	xor    DWORD PTR [eax],edi
  422141:	add    al,0x84
  422143:	cmp    edi,ebx
  422145:	in     al,dx
  422146:	mov    esi,0x5de022d8
  42214b:	xor    DWORD PTR [ebx+0x1dd85617],ecx
  422151:	lock or BYTE PTR [ecx-0x36],ah
  422155:	dec    edi
  422156:	jbe    0x4220e5
  422158:	and    al,BYTE PTR [ebp+0x72]
  42215b:	pop    ds
  42215c:	add    BYTE PTR [edx],ch
  42215e:	cmp    BYTE PTR [edi+0x5e],dl
  422161:	cmp    eax,0xac01821a
  422166:	imul   edx,DWORD PTR [ebx-0x63],0x95253b22
  42216d:	sbb    BYTE PTR [esi],ah
  42216f:	test   eax,0x8f21a038
  422174:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422175:	pop    esp
  422176:	popa   
  422177:	or     bl,BYTE PTR [esi+0x13]
  42217a:	sti    
  42217b:	fild   DWORD PTR [ecx+0x40]
  42217e:	cmp    esp,0x4deed719
  422184:	fdivr  DWORD PTR [edx+0x2f487709]
  42218a:	dec    BYTE PTR [ebx]
  42218c:	iret   
  42218d:	mov    al,0x4c
  42218f:	cmp    eax,0x7c53cb76
  422194:	sub    esp,ebx
  422196:	adc    al,0x62
  422198:	pop    ss
  422199:	ds push ds
  42219b:	or     esi,DWORD PTR [ecx+0x6e]
  42219e:	xor    eax,0x85eb567a
  4221a3:	pop    es
  4221a4:	pop    ss
  4221a5:	or     BYTE PTR [esi+0x354617a0],dl
  4221ab:	les    edx,FWORD PTR [esp+esi*1]
  4221ae:	popf   
  4221af:	inc    ebx
  4221b0:	mov    cl,0x6f
  4221b2:	pop    edx
  4221b3:	outs   dx,DWORD PTR ds:[esi]
  4221b4:	push   esp
  4221b5:	out    dx,eax
  4221b6:	cmp    al,0xf0
  4221b8:	jbe    0x4221d5
  4221ba:	inc    esi
  4221bb:	pop    edx
  4221bc:	repnz hlt 
  4221be:	xor    esi,DWORD PTR [edi]
  4221c0:	ss icebp 
  4221c2:	retf   0x4dc8
  4221c5:	xor    DWORD PTR [ebx],esi
  4221c7:	std    
  4221c8:	out    dx,al
  4221c9:	sbb    bh,dl
  4221cb:	push   esi
  4221cc:	xchg   BYTE PTR cs:0x1905425e,dh
  4221d3:	je     0x42218f
  4221d5:	jmp    0xc432e04a
  4221da:	nop
  4221db:	cmp    DWORD PTR [edi],esi
  4221dd:	addr16 push esi
  4221df:	mov    esi,0x8e5afa30
  4221e4:	adc    al,0xe2
  4221e6:	lahf   
  4221e7:	adc    bh,BYTE PTR es:[edx]
  4221ea:	lods   eax,DWORD PTR ds:[esi]
  4221eb:	and    eax,0x2a12e589
  4221f0:	ins    DWORD PTR es:[di],dx
  4221f2:	aaa    
  4221f3:	mov    edi,0x4589267
  4221f8:	push   edx
  4221f9:	lahf   
  4221fa:	push   es
  4221fb:	in     eax,0xa
  4221fd:	jmp    0x2ee8:0xe64a2958
  422204:	xor    DWORD PTR [esi-0x7f500952],edi
  42220a:	in     eax,dx
  42220b:	mov    esi,0x355b5b40
  422210:	(bad)
  422214:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422215:	jmp    0x6a67:0xac40ea45
  42221c:	dec    ebx
  42221d:	sar    DWORD PTR [eax+eax*4-0x3072efe4],0x3c
  422225:	pop    esp
  422226:	push   ss
  422227:	call   0x3d14b2b
  42222c:	jno    0x4221eb
  42222e:	cmp    esi,edx
  422230:	int    0xb2
  422232:	push   ds
  422233:	xchg   esi,eax
  422234:	sti    
  422235:	or     ebx,DWORD PTR [eax]
  422237:	shr    DWORD PTR [esi],0xc
  42223a:	sti    
  42223b:	jnp    0x42225c
  42223d:	jb     0x4221c8
  42223f:	sub    dl,BYTE PTR [esi]
  422241:	lods   al,BYTE PTR ds:[esi]
  422242:	dec    esi
  422243:	out    dx,eax
  422244:	pop    edi
  422245:	lods   al,BYTE PTR ds:[esi]
  422246:	sub    eax,0x70d25525
  42224b:	ss pop ss
  42224d:	scas   eax,DWORD PTR es:[edi]
  42224e:	sbb    esi,DWORD PTR [edi+esi*1-0x1d]
  422252:	push   esi
  422253:	ret    
  422254:	gs dec esp
  422256:	jns    0x422227
  422258:	aam    0x84
  42225a:	rcl    DWORD PTR [edx-0x3f],0xbd
  42225e:	rcl    DWORD PTR ds:0x1c14e37d,0xf8
  422265:	cmp    eax,0x9f3745e6
  42226a:	(bad)  
  42226b:	jle    0x4222c5
  42226d:	jns    0x422222
  42226f:	cdq    
  422270:	cdq    
  422271:	xchg   esi,eax
  422272:	mov    edi,0xe500ad44
  422277:	sar    BYTE PTR [edi],cl
  422279:	out    dx,al
  42227a:	test   eax,0xc36857c2
  42227f:	ror    BYTE PTR [esi],1
  422281:	sub    al,0x49
  422283:	popa   
  422284:	stos   DWORD PTR es:[edi],eax
  422285:	jle    0x42224b
  422287:	mov    ebx,0xec25a6bf
  42228c:	dec    esi
  42228d:	and    ch,dh
  42228f:	aaa    
  422290:	pushf  
  422291:	aaa    
  422292:	sub    esp,esi
  422294:	jnp    0x422220
  422296:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422297:	imul   edx
  422299:	dec    eax
  42229a:	add    ah,BYTE PTR [ecx]
  42229c:	xor    al,0x23
  42229e:	sbb    dh,BYTE PTR [esi+eax*1-0x69d818f6]
  4222a5:	mov    al,0x52
  4222a7:	(bad)
  4222aa:	sub    BYTE PTR [ecx-0x156503f8],bl
  4222b0:	xor    BYTE PTR [ebx-0x6eed52fc],cl
  4222b6:	pop    ecx
  4222b7:	repz not DWORD PTR [ebx-0x52]
  4222bb:	push   ss
  4222bc:	mov    edi,0x5358c48c
  4222c1:	add    esi,esi
  4222c3:	stos   BYTE PTR es:[edi],al
  4222c4:	adc    DWORD PTR [edx+0x599ec5ca],0x999194fa
  4222ce:	out    dx,al
  4222cf:	pusha  
  4222d0:	or     edx,ebx
  4222d2:	mov    ecx,0xd5589edf
  4222d7:	sbb    ebp,DWORD PTR [ebp-0x50bc20a8]
  4222dd:	mov    cl,0xeb
  4222df:	dec    ecx
  4222e0:	ss xchg ebp,eax
  4222e2:	push   0xe
  4222e4:	dec    esi
  4222e5:	mov    cl,0x63
  4222e7:	dec    ecx
  4222e8:	and    esi,DWORD PTR [edi-0x21a246a2]
  4222ee:	sbb    DWORD PTR [esi],0xffffffa7
  4222f1:	push   esp
  4222f2:	shl    BYTE PTR ds:0x351ad7d3,0x25
  4222f9:	mov    bh,0x11
  4222fb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4222fc:	out    0x8d,al
  4222fe:	aaa    
  4222ff:	jb     0x4222df
  422301:	out    dx,al
  422302:	sbb    DWORD PTR [esi+edi*4-0x1b],0xbd05fbdb
  42230a:	xor    eax,0xd6ceaf57
  42230f:	add    eax,0x4844eb52
  422314:	or     cl,BYTE PTR [ebx]
  422316:	mov    dl,0xaa
  422318:	stos   DWORD PTR es:[edi],eax
  422319:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42231a:	adc    al,0x66
  42231c:	mov    BYTE PTR [esi],ch
  42231e:	arpl   WORD PTR ds:0xecb498e3,dx
  422324:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422325:	sub    eax,0xff9ce97b
  42232a:	pop    esi
  42232b:	pop    ebx
  42232c:	scas   al,BYTE PTR es:[edi]
  42232d:	sbb    al,0x72
  42232f:	sub    edx,esp
  422331:	call   FWORD PTR [esi+0x20]
  422334:	jmp    0xc3186a3a
  422339:	outs   dx,DWORD PTR ds:[esi]
  42233a:	push   0xffffff85
  42233c:	push   0x3381e7c5
  422341:	retf   
  422342:	mov    al,ah
  422344:	daa    
  422345:	aad    0x4d
  422347:	adc    al,0x43
  422349:	fwait
  42234a:	or     dl,BYTE PTR [ebp-0x24]
  42234d:	and    ah,BYTE PTR [edx-0x276c331f]
  422353:	adc    eax,0xaf357726
  422358:	and    esi,ebx
  42235a:	jecxz  0x4223c9
  42235c:	aas    
  42235d:	ds mov edi,0x91e7c00a
  422363:	sbb    ch,BYTE PTR [ebx-0x71c656fe]
  422369:	ds inc eax
  42236b:	pop    eax
  42236c:	fwait
  42236d:	int    0x9b
  42236f:	dec    edx
  422370:	push   ebp
  422371:	dec    ecx
  422372:	mov    eax,ds:0x7803f12a
  422377:	mov    eax,ds:0x7cbb8a52
  42237c:	mov    eax,ds:0x3d73d256
  422381:	test   esp,eax
  422383:	test   BYTE PTR [ebx-0x3195737d],cl
  422389:	cmp    BYTE PTR [esi-0x6ee448b3],bl
  42238f:	clc    
  422390:	sub    eax,eax
  422392:	dec    edx
  422393:	mov    cl,0x39
  422395:	add    al,0x22
  422397:	in     eax,0x4a
  422399:	mov    bl,0x23
  42239b:	sub    DWORD PTR [esi],ecx
  42239d:	mul    BYTE PTR [eax]
  42239f:	in     al,dx
  4223a0:	cli    
  4223a1:	cs (bad) 
  4223a3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4223a4:	mov    cs,WORD PTR [edx+0x3ba7fd9f]
  4223aa:	sar    BYTE PTR [edx],1
  4223ac:	lahf   
  4223ad:	cdq    
  4223ae:	sbb    edx,eax
  4223b0:	icebp  
  4223b1:	popa   
  4223b2:	lods   al,BYTE PTR ds:[esi]
  4223b3:	add    al,0x6
  4223b5:	and    DWORD PTR [edi+0x5c],ecx
  4223b8:	dec    edx
  4223b9:	aaa    
  4223ba:	inc    edi
  4223bb:	or     ebp,DWORD PTR es:[edi-0xc]
  4223bf:	mov    WORD PTR [eax+0x5aec068a],ds
  4223c5:	stc    
  4223c6:	inc    esi
  4223c7:	bound  edx,QWORD PTR [ecx-0x10]
  4223ca:	mov    bh,0xdf
  4223cc:	sub    bl,BYTE PTR [edi+ecx*8-0xb06f616]
  4223d3:	aas    
  4223d4:	stc    
  4223d5:	out    0xa9,al
  4223d7:	dec    esi
  4223d8:	in     al,dx
  4223d9:	sbb    ebx,DWORD PTR ds:0xe7c76b88
  4223df:	mov    cl,0x7c
  4223e1:	mov    eax,ds:0x7020500e
  4223e6:	cmp    al,0x98
  4223e8:	and    al,0x66
  4223ea:	call   0x16a:0x22664d62
  4223f1:	xor    eax,0x527e3137
  4223f6:	cmp    edi,ebp
  4223f8:	in     al,dx
  4223f9:	inc    esi
  4223fa:	mov    ecx,DWORD PTR [edx]
  4223fc:	iret   
  4223fd:	loop   0x422419
  4223ff:	loop   0x422389
  422401:	mov    ds:0x9eefab76,eax
  422406:	mov    ah,0x51
  422408:	sti    
  422409:	stos   DWORD PTR es:[edi],eax
  42240a:	daa    
  42240b:	xor    eax,0x3f0dfd2e
  422410:	or     eax,0x6c98671c
  422415:	sbb    ah,bh
  422417:	jmp    0xcde4:0xdf9db3a6
  42241e:	xchg   edx,eax
  42241f:	pushf  
  422420:	or     al,0xad
  422422:	in     al,0xc4
  422424:	jb     0x4223d9
  422426:	les    ebx,FWORD PTR [edi]
  422428:	test   eax,0x73859602
  42242d:	xchg   edi,eax
  42242e:	xchg   DWORD PTR [ebx+0x6f],edx
  422431:	and    ah,BYTE PTR [edx+0x1b3e0c71]
  422437:	test   DWORD PTR [ecx-0x16a2950b],esi
  42243d:	sar    DWORD PTR [eax+0x5d3be1a9],cl
  422443:	fnstsw WORD PTR [ebp-0x31bba544]
  422449:	lods   al,BYTE PTR ds:[esi]
  42244a:	repnz mov al,0xc4
  42244d:	mov    ah,bl
  42244f:	push   ebp
  422450:	mov    bl,0x31
  422452:	pop    ebx
  422453:	xchg   esi,eax
  422454:	(bad)  
  422455:	jnp    0x4223f8
  422457:	mov    eax,ds:0xa2d8c043
  42245c:	xchg   edi,eax
  42245d:	pop    edi
  42245e:	into   
  42245f:	pop    edx
  422460:	jp     0x42245d
  422462:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422463:	cdq    
  422464:	pop    ebp
  422465:	add    ebx,DWORD PTR [ecx-0x7d]
  422468:	inc    esi
  422469:	cmp    bl,dh
  42246b:	(bad)  [esi*2-0x7e66a824]
  422472:	pop    es
  422473:	test   eax,0x7d557dd6
  422478:	test   ecx,ebx
  42247a:	mul    ebp
  42247c:	ds inc eax
  42247e:	lea    esp,[ecx]
  422480:	enter  0x3909,0xc9
  422484:	push   ss
  422485:	fwait
  422486:	neg    DWORD PTR [ebx+0x68dac15d]
  42248c:	test   BYTE PTR [edi+0x4],cl
  42248f:	push   esi
  422490:	pop    edi
  422491:	cmp    eax,0x2299bc4c
  422496:	ds sub al,0xea
  42249a:	call   0x7fa01fbb
  42249f:	add    eax,0x3d66f0e0
  4224a4:	ficom  DWORD PTR [edi+0x79]
  4224a7:	ds jnp 0x4224ad
  4224aa:	in     eax,0x3
  4224ac:	out    0x12,al
  4224ae:	cld    
  4224af:	add    DWORD PTR [edx+ecx*1+0x74],esi
  4224b3:	adc    edx,esp
  4224b5:	push   ds
  4224b6:	mov    eax,es:0xe5e40833
  4224bc:	test   al,0xe0
  4224be:	jns    0x422454
  4224c0:	or     ch,ah
  4224c2:	pop    edi
  4224c3:	shr    DWORD PTR [ecx],0xe7
  4224c6:	jbe    0x4224e8
  4224c8:	dec    edx
  4224c9:	popf   
  4224ca:	sbb    BYTE PTR [edi+0x6a],bl
  4224cd:	mov    edx,0x480abb34
  4224d2:	fwait
  4224d3:	jl     0x422513
  4224d5:	push   esi
  4224d6:	rcr    edx,0xd6
  4224d9:	(bad)  
  4224da:	mov    WORD PTR [ecx-0x2a2ae3ce],?
  4224e0:	cdq    
  4224e1:	out    dx,al
  4224e2:	jb     0x4224ff
  4224e4:	int3   
  4224e5:	cmp    cl,BYTE PTR [edx-0x4b]
  4224e8:	hlt    
  4224e9:	and    eax,0xcff4c904
  4224ee:	ror    DWORD PTR [ecx+0x345ab273],1
  4224f4:	inc    eax
  4224f5:	mov    esi,0xb1c666f
  4224fa:	mov    dh,0x6a
  4224fc:	pop    edx
  4224fd:	xor    eax,0x5c807c9c
  422502:	sbb    al,0xe
  422504:	stos   BYTE PTR es:[edi],al
  422505:	sub    ch,BYTE PTR [esi]
  422507:	adc    BYTE PTR [ebx+0x2fdbf1f],bh
  42250d:	pusha  
  42250e:	jae    0x422584
  422510:	xor    ecx,esi
  422512:	pushf  
  422513:	sbb    BYTE PTR [ecx-0x656eb27f],bl
  422519:	mov    cl,0x65
  42251b:	(bad)  
  42251d:	cmp    DWORD PTR [edx],0xf92f21a2
  422523:	pop    edx
  422524:	and    al,BYTE PTR [eax+ebx*4]
  422527:	lahf   
  422528:	mov    bl,0x23
  42252a:	sar    BYTE PTR ss:[edi+0x1c96d459],0xc
  422532:	inc    ecx
  422533:	outs   dx,DWORD PTR ds:[esi]
  422534:	cmp    BYTE PTR [edi],dh
  422536:	push   edi
  422537:	int    0x45
  422539:	ficomp WORD PTR [ebp-0x53]
  42253c:	mov    edi,0x37d3ca3b
  422541:	sub    DWORD PTR [ebx],ebx
  422543:	and    al,0xee
  422545:	jmp    0x422520
  422547:	dec    BYTE PTR [eax+0x1115feb6]
  42254d:	sub    DWORD PTR [eax+ebp*4],esp
  422550:	or     DWORD PTR [edi+edi*2],eax
  422553:	stc    
  422554:	or     DWORD PTR [edi-0x749cfb4e],ebp
  42255a:	or     eax,0x42836b
  42255f:	add    DWORD PTR [eax],ecx
  422561:	pop    edi
  422562:	pop    esi
  422563:	leave  
  422564:	ret    
  422565:	push   ebp
  422566:	mov    ebp,esp
  422568:	sub    esp,0x18
  42256b:	mov    DWORD PTR [ebp-0x10],0xf89f85b0
  422572:	movzx  edx,WORD PTR ds:0x428673
  422579:	and    edx,DWORD PTR ds:0x42864f
  42257f:	mov    DWORD PTR ds:0x428673,edx
  422585:	lea    eax,[ebp+0x14]
  422588:	adc    DWORD PTR ds:0x428607,0x604f
  422592:	mov    DWORD PTR [ebp-0x4],eax
  422595:	mov    ecx,DWORD PTR ds:0x4285f3
  42259b:	adc    DWORD PTR ds:0x4285df,ecx
  4225a1:	push   esi
  4225a2:	add    DWORD PTR ds:0x42861b,ecx
  4225a8:	mov    esi,0xf89c85b0
  4225ad:	or     DWORD PTR ds:0x4285db,0x4285f7
  4225b7:	mov    DWORD PTR [ebp-0xc],esi
  4225ba:	mov    DWORD PTR ds:0x42862f,0x1a
  4225c4:	cmp    DWORD PTR ds:0x42862f,0x0
  4225cb:	je     0x42262f
  4225d1:	cmp    DWORD PTR ds:0x42862f,0xa
  4225d8:	jge    0x42262f
  4225de:	jmp    0x422603
  4225e3:	push   0x428673
  4225e8:	push   DWORD PTR [ebp-0x20]
  4225eb:	push   0x8204
  4225f0:	push   0x6126
  4225f5:	push   0x7868
  4225fa:	push   DWORD PTR [ebp-0x28]
  4225fd:	call   DWORD PTR ds:0x4287c7
  422603:	cmp    DWORD PTR ds:0x42862f,0xb
  42260a:	jne    0x42261d
  422610:	mov    edx,DWORD PTR ds:0x42862f
  422616:	dec    edx
  422617:	mov    DWORD PTR ds:0x42862f,edx
  42261d:	mov    edx,DWORD PTR ds:0x42862f
  422623:	dec    edx
  422624:	mov    DWORD PTR ds:0x42862f,edx
  42262a:	jmp    0x4225c4
  42262f:	lea    eax,[ebp-0xc]
  422632:	mov    DWORD PTR [ebp-0x14],eax
  422635:	mov    eax,DWORD PTR [ebp-0xc]
  422638:	or     DWORD PTR ds:0x42863f,0x672c
  422642:	mov    edx,DWORD PTR [ebp-0x14]
  422645:	mov    ecx,0x75108a4
  42264a:	add    DWORD PTR ds:0x428617,0x428607
  422654:	xor    eax,ecx
  422656:	add    eax,0x3272ec
  42265b:	sub    DWORD PTR ds:0x42862b,0x430
  422665:	mov    DWORD PTR [edx],eax
  422667:	movzx  eax,WORD PTR ds:0x42861b
  42266e:	sbb    eax,DWORD PTR ds:0x4285cf
  422674:	mov    ds:0x42861b,eax
  422679:	mov    eax,ds:0x428167
  42267e:	mov    DWORD PTR ds:0x428617,0x1a
  422688:	cmp    DWORD PTR ds:0x428617,0x0
  42268f:	je     0x4226cb
  422695:	cmp    DWORD PTR ds:0x428617,0x2a
  42269c:	jl     0x4226cb
  4226a2:	jmp    0x4226b7
  4226a7:	push   0x42860b
  4226ac:	push   0x428083
  4226b1:	call   DWORD PTR ds:0x4287cb
  4226b7:	xor    edx,edx
  4226b9:	xor    edx,DWORD PTR ds:0x428617
  4226bf:	dec    edx
  4226c0:	mov    DWORD PTR ds:0x428617,edx
  4226c6:	jmp    0x422688
  4226cb:	mov    edx,DWORD PTR [ebp-0x4]
  4226ce:	mov    eax,DWORD PTR [eax]
  4226d0:	add    eax,DWORD PTR [edx]
  4226d2:	neg    edx
  4226d4:	push   edi
  4226d5:	and    DWORD PTR ds:0x428613,0x0
  4226df:	jmp    0x4226f1
  4226e4:	mov    edi,DWORD PTR ds:0x428613
  4226ea:	inc    edi
  4226eb:	mov    DWORD PTR ds:0x428613,edi
  4226f1:	cmp    DWORD PTR ds:0x428613,0x13
  4226f8:	jae    0x422730
  4226fe:	cmp    DWORD PTR ds:0x428613,0x14
  422705:	jb     0x422730
  42270b:	jmp    0x42272b
  422710:	push   0x5e63
  422715:	push   DWORD PTR [ebp-0x10]
  422718:	push   0x40fa
  42271d:	push   0x57ff
  422722:	push   DWORD PTR [ebp-0x14]
  422725:	call   DWORD PTR ds:0x42879f
  42272b:	jmp    0x4226e4
  422730:	mov    DWORD PTR [ebp-0x8],eax
  422733:	mov    edi,DWORD PTR [ebp+0x8]
  422736:	mov    DWORD PTR ds:0x428643,0x13
  422740:	cmp    DWORD PTR ds:0x428643,0x0
  422747:	je     0x422795
  42274d:	cmp    DWORD PTR ds:0x428643,0x8
  422754:	jb     0x422795
  42275a:	jmp    0x42276a
  42275f:	push   0x6e63
  422764:	call   DWORD PTR ds:0x4287a3
  42276a:	cmp    DWORD PTR ds:0x428643,0x9
  422771:	jne    0x422782
  422777:	mov    eax,ds:0x428643
  42277c:	dec    eax
  42277d:	mov    ds:0x428643,eax
  422782:	xor    eax,eax
  422784:	xor    eax,DWORD PTR ds:0x428643
  42278a:	dec    eax
  42278b:	mov    ds:0x428643,eax
  422790:	jmp    0x422740
  422795:	mov    eax,ds:0x4282ef
  42279a:	and    DWORD PTR ds:0x428647,0x0
  4227a4:	xor    edx,edx
  4227a6:	or     edx,DWORD PTR ds:0x428647
  4227ac:	inc    edx
  4227ad:	mov    DWORD PTR ds:0x428647,edx
  4227b3:	cmp    DWORD PTR ds:0x428647,0x8
  4227ba:	jb     0x4227fa
  4227c0:	jmp    0x4227d3
  4227c5:	push   DWORD PTR [ebp-0x18]
  4227c8:	push   0x42804c
  4227cd:	call   DWORD PTR ds:0x4287a7
  4227d3:	cmp    DWORD PTR ds:0x428647,0x7
  4227da:	jne    0x4227ed
  4227e0:	mov    edx,DWORD PTR ds:0x428647
  4227e6:	inc    edx
  4227e7:	mov    DWORD PTR ds:0x428647,edx
  4227ed:	cmp    DWORD PTR ds:0x428647,0x16
  4227f4:	jb     0x4227a4
  4227fa:	mov    eax,DWORD PTR [eax+0x198]
  422800:	and    DWORD PTR ds:0x428637,0x0
  42280a:	mov    edx,DWORD PTR ds:0x428637
  422810:	inc    edx
  422811:	mov    DWORD PTR ds:0x428637,edx
  422817:	cmp    DWORD PTR ds:0x428637,0x9
  42281e:	jg     0x422862
  422824:	jmp    0x422839
  422829:	push   0x428034
  42282e:	push   0x1
  422830:	push   DWORD PTR [ebp-0x1c]
  422833:	call   DWORD PTR ds:0x4287ab
  422839:	cmp    DWORD PTR ds:0x428637,0x8
  422840:	jne    0x422855
  422846:	xor    edx,edx
  422848:	add    edx,DWORD PTR ds:0x428637
  42284e:	inc    edx
  42284f:	mov    DWORD PTR ds:0x428637,edx
  422855:	cmp    DWORD PTR ds:0x428637,0x18
  42285c:	jb     0x42280a
  422862:	xor    edi,ecx
  422864:	mov    edx,0x3272ec
  422869:	add    edi,edx
  42286b:	cmp    DWORD PTR [eax],edi
  42286d:	je     0x42288e
  422873:	mov    DWORD PTR ds:0x42861f,0x7dc0
  42287d:	mov    eax,DWORD PTR [eax]
  42287f:	mov    DWORD PTR ds:0x428607,0x131c
  422889:	jmp    0x422b1c
  42288e:	mov    DWORD PTR ds:0x4285e3,edi
  422894:	mov    eax,DWORD PTR [ebp+0x18]
  422897:	cmp    eax,esi
  422899:	mov    DWORD PTR ds:0x42864f,0x3fa2
  4228a3:	jne    0x4228c7
  4228a9:	mov    DWORD PTR ds:0x42860b,0x3d29
  4228b3:	push   0xf89c85b1
  4228b8:	mov    DWORD PTR ds:0x42866b,0x6bac
  4228c2:	jmp    0x422b0b
  4228c7:	mov    esi,DWORD PTR [ebp+0x18]
  4228ca:	mov    eax,0x14b4
  4228cf:	mov    eax,0xf89c85b2
  4228d4:	cmp    esi,eax
  4228d6:	jne    0x422afb
  4228dc:	mov    eax,DWORD PTR [ebp+0x10]
  4228df:	adc    DWORD PTR ds:0x4285cf,0x1af0
  4228e9:	xor    eax,ecx
  4228eb:	mov    esi,DWORD PTR ds:0x4285ef
  4228f1:	sub    DWORD PTR ds:0x42860f,esi
  4228f7:	add    eax,edx
  4228f9:	and    DWORD PTR ds:0x42863f,0x0
  422903:	jmp    0x422917
  422908:	xor    esi,esi
  42290a:	xor    esi,DWORD PTR ds:0x42863f
  422910:	inc    esi
  422911:	mov    DWORD PTR ds:0x42863f,esi
  422917:	cmp    DWORD PTR ds:0x42863f,0x1d
  42291e:	jae    0x422960
  422924:	cmp    DWORD PTR ds:0x42863f,0xa
  42292b:	jl     0x422960
  422931:	jmp    0x422941
  422936:	push   0x428028
  42293b:	call   DWORD PTR ds:0x4287af
  422941:	cmp    DWORD PTR ds:0x42863f,0x9
  422948:	jne    0x42295b
  42294e:	mov    esi,DWORD PTR ds:0x42863f
  422954:	inc    esi
  422955:	mov    DWORD PTR ds:0x42863f,esi
  42295b:	jmp    0x422908
  422960:	mov    DWORD PTR [ebp-0x18],eax
  422963:	mov    eax,DWORD PTR [ebp+0xc]
  422966:	mov    esi,DWORD PTR [ebp-0x8]
  422969:	xor    eax,ecx
  42296b:	add    eax,edx
  42296d:	imul   eax,DWORD PTR [esi]
  422970:	mov    esi,DWORD PTR [ebp+0x8]
  422973:	xor    esi,ecx
  422975:	add    esi,edx
  422977:	cmp    esi,eax
  422979:	mov    eax,DWORD PTR [ebp-0x4]
  42297c:	push   ebx
  42297d:	je     0x42299c
  422983:	mov    esi,DWORD PTR [ebp-0x18]
  422986:	add    DWORD PTR [eax],esi
  422988:	mov    eax,DWORD PTR [ebp-0x4]
  42298b:	mov    esi,DWORD PTR [ebp+0xc]
  42298e:	xor    esi,ecx
  422990:	add    esi,edx
  422992:	imul   esi,DWORD PTR [eax]
  422995:	mov    DWORD PTR [eax],esi
  422997:	jmp    0x4229a1
  42299c:	mov    esi,DWORD PTR [ebp+0x14]
  42299f:	xor    DWORD PTR [eax],esi
  4229a1:	mov    eax,DWORD PTR [ebp-0x4]
  4229a4:	mov    edi,DWORD PTR [ebp+0x10]
  4229a7:	xor    edi,ecx
  4229a9:	mov    esi,0xffcd8d14
  4229ae:	mov    ebx,esi
  4229b0:	sub    ebx,edi
  4229b2:	add    DWORD PTR [eax],ebx
  4229b4:	mov    eax,DWORD PTR [ebp-0x4]
  4229b7:	mov    edi,DWORD PTR [ebp-0x8]
  4229ba:	add    edi,DWORD PTR [eax]
  4229bc:	mov    DWORD PTR [ebp-0x8],edi
  4229bf:	mov    eax,DWORD PTR [ebp+0xc]
  4229c2:	mov    edi,DWORD PTR [ebp+0xc]
  4229c5:	xor    edi,ecx
  4229c7:	xor    eax,ecx
  4229c9:	lea    eax,[eax+edi*1+0x64e5d8]
  4229d0:	mov    edi,DWORD PTR [ebp+0xc]
  4229d3:	xor    edi,ecx
  4229d5:	add    edi,edx
  4229d7:	imul   eax,edi
  4229da:	mov    edi,DWORD PTR [ebp+0xc]
  4229dd:	xor    edi,ecx
  4229df:	sub    edi,eax
  4229e1:	mov    eax,DWORD PTR [ebp-0x4]
  4229e4:	add    edi,edx
  4229e6:	cmp    DWORD PTR [eax],edi
  4229e8:	mov    eax,DWORD PTR [ebp-0x4]
  4229eb:	mov    edi,DWORD PTR [ebp+0x10]
  4229ee:	jg     0x422a01
  4229f4:	xor    edi,ecx
  4229f6:	mov    ebx,esi
  4229f8:	sub    ebx,edi
  4229fa:	add    DWORD PTR [eax],ebx
  4229fc:	jmp    0x422a07
  422a01:	xor    edi,ecx
  422a03:	add    edi,edx
  422a05:	add    DWORD PTR [eax],edi
  422a07:	mov    eax,DWORD PTR [ebp-0x8]
  422a0a:	mov    edi,DWORD PTR [ebp-0x10]
  422a0d:	mov    eax,DWORD PTR [eax]
  422a0f:	xor    edi,ecx
  422a11:	add    edi,0x3272eb
  422a17:	not    edi
  422a19:	and    eax,edi
  422a1b:	movsx  di,BYTE PTR [eax+0x1]
  422a20:	mov    ebx,0x3b56
  422a25:	sub    di,bx
  422a28:	mov    ebx,0x8a94
  422a2d:	xor    di,bx
  422a30:	mov    ebx,0x4f90
  422a35:	cmp    di,bx
  422a38:	jne    0x422a60
  422a3e:	movsx  di,BYTE PTR [eax]
  422a42:	mov    ebx,0x3b56
  422a47:	sub    di,bx
  422a4a:	mov    ebx,0x8a94
  422a4f:	xor    di,bx
  422a52:	mov    ebx,0x4e63
  422a57:	cmp    di,bx
  422a5a:	je     0x422a70
  422a60:	mov    edi,DWORD PTR [ebp-0x10]
  422a63:	xor    edi,ecx
  422a65:	mov    ebx,esi
  422a67:	sub    ebx,edi
  422a69:	add    eax,ebx
  422a6b:	jmp    0x422a1b
  422a70:	mov    esi,DWORD PTR [ebp-0x14]
  422a73:	mov    esi,DWORD PTR [esi]
  422a75:	mov    edi,DWORD PTR [eax+0x3c]
  422a78:	lea    esi,[edi+esi*8+0x78]
  422a7c:	mov    esi,DWORD PTR [esi+eax*1]
  422a7f:	mov    DWORD PTR [ebp-0x8],esi
  422a82:	mov    esi,DWORD PTR [ebp+0x8]
  422a85:	xor    esi,ecx
  422a87:	add    esi,edx
  422a89:	mov    DWORD PTR [ebp-0x14],esi
  422a8c:	mov    esi,DWORD PTR [ebp+0x8]
  422a8f:	mov    edi,DWORD PTR [ebp-0x8]
  422a92:	xor    esi,ecx
  422a94:	add    esi,edx
  422a96:	pop    ebx
  422a97:	cmp    edi,esi
  422a99:	jne    0x422ab7
  422a9f:	mov    eax,DWORD PTR [ebp+0xc]
  422aa2:	xor    eax,ecx
  422aa4:	mov    ecx,DWORD PTR [ebp-0x8]
  422aa7:	add    eax,edx
  422aa9:	imul   eax,ecx
  422aac:	mov    DWORD PTR [ebp-0x8],eax
  422aaf:	push   DWORD PTR [ebp+0x18]
  422ab2:	jmp    0x422b0b
  422ab7:	mov    ecx,DWORD PTR [ebp-0x8]
  422aba:	add    ecx,eax
  422abc:	mov    DWORD PTR [ebp-0x14],ecx
  422abf:	mov    ecx,DWORD PTR [ebp-0x14]
  422ac2:	mov    ecx,DWORD PTR [ecx+0xc]
  422ac5:	movsx  cx,BYTE PTR [ecx+eax*1]
  422aca:	mov    edx,0x3b56
  422acf:	sub    cx,dx
  422ad2:	mov    edx,0x8a94
  422ad7:	xor    cx,dx
  422ada:	mov    edx,0x4e61
  422adf:	cmp    cx,dx
  422ae2:	jne    0x422aaf
  422ae8:	mov    ecx,DWORD PTR ds:0x4282ef
  422aee:	mov    ecx,DWORD PTR [ecx+0x198]
  422af4:	mov    DWORD PTR [ecx],eax
  422af6:	jmp    0x422b1c
  422afb:	mov    ecx,DWORD PTR [ebp+0x18]
  422afe:	cmp    ecx,0xf89c85b1
  422b04:	jne    0x422b1c
  422b0a:	push   eax
  422b0b:	push   DWORD PTR [ebp+0x14]
  422b0e:	push   DWORD PTR [ebp+0x10]
  422b11:	push   DWORD PTR [ebp+0xc]
  422b14:	push   DWORD PTR [ebp+0x8]
  422b17:	call   0x422565
  422b1c:	pop    edi
  422b1d:	pop    esi
  422b1e:	leave  
  422b1f:	ret    0x14
  422b22:	push   ebp
  422b23:	mov    ebp,esp
  422b25:	sub    esp,0x54
  422b28:	add    DWORD PTR ds:0x428657,0x428603
  422b32:	push   0x4283ff
  422b37:	call   DWORD PTR ds:0x4287cf
  422b3d:	sbb    DWORD PTR ds:0x428647,0x42860b
  422b47:	test   eax,eax
  422b49:	je     0x422b60
  422b4f:	xor    eax,eax
  422b51:	mov    DWORD PTR ds:0x428677,0x34e1
  422b5b:	jmp    0x423448
  422b60:	mov    DWORD PTR [ebp-0x2c],0x0
  422b67:	xor    ecx,0x686a
  422b6d:	mov    eax,DWORD PTR [ebp-0x20]
  422b70:	mov    DWORD PTR [ebp-0x20],eax
  422b73:	mov    ecx,0xf89c85b0
  422b78:	and    DWORD PTR ds:0x428647,0x0
  422b82:	mov    edx,DWORD PTR ds:0x428647
  422b88:	inc    edx
  422b89:	mov    DWORD PTR ds:0x428647,edx
  422b8f:	cmp    DWORD PTR ds:0x428647,0x27
  422b96:	jge    0x422bbc
  422b9c:	jmp    0x422baf
  422ba1:	push   DWORD PTR [ebp-0xc]
  422ba4:	push   0x4285eb
  422ba9:	call   DWORD PTR ds:0x4287b3
  422baf:	cmp    DWORD PTR ds:0x428647,0x19
  422bb6:	jb     0x422b82
  422bbc:	mov    DWORD PTR [ebp-0x4],ecx
  422bbf:	and    DWORD PTR ds:0x428647,0x0
  422bc9:	xor    edx,edx
  422bcb:	or     edx,DWORD PTR ds:0x428647
  422bd1:	inc    edx
  422bd2:	mov    DWORD PTR ds:0x428647,edx
  422bd8:	cmp    DWORD PTR ds:0x428647,0xc
  422bdf:	jl     0x422c17
  422be5:	jmp    0x422bf0
  422bea:	call   DWORD PTR ds:0x4287b7
  422bf0:	cmp    DWORD PTR ds:0x428647,0xb
  422bf7:	jne    0x422c0a
  422bfd:	mov    edx,DWORD PTR ds:0x428647
  422c03:	inc    edx
  422c04:	mov    DWORD PTR ds:0x428647,edx
  422c0a:	cmp    DWORD PTR ds:0x428647,0x1f
  422c11:	jb     0x422bc9
  422c17:	mov    DWORD PTR [ebp-0x8],0xf89c85b1
  422c1e:	lea    eax,[ebp-0x14]
  422c21:	xor    edx,DWORD PTR ds:0x42866b
  422c27:	mov    DWORD PTR [ebp-0x2c],eax
  422c2a:	movzx  edx,BYTE PTR ds:0x428667
  422c31:	add    DWORD PTR ds:0x4285d7,edx
  422c37:	lea    eax,[ebp-0x18]
  422c3a:	mov    DWORD PTR [ebp-0x24],eax
  422c3d:	movzx  eax,WORD PTR ds:0x428607
  422c44:	add    DWORD PTR ds:0x428603,eax
  422c4a:	mov    eax,ds:0x4282ef
  422c4f:	neg    edx
  422c51:	mov    eax,DWORD PTR [eax+0x1c8]
  422c57:	and    DWORD PTR ds:0x4285e7,0x0
  422c61:	xor    edx,edx
  422c63:	add    edx,DWORD PTR ds:0x4285e7
  422c69:	inc    edx
  422c6a:	mov    DWORD PTR ds:0x4285e7,edx
  422c70:	cmp    DWORD PTR ds:0x4285e7,0x9
  422c77:	jl     0x422cb2
  422c7d:	jmp    0x422c8b
  422c82:	push   DWORD PTR [ebp-0x18]
  422c85:	call   DWORD PTR ds:0x4287bb
  422c8b:	cmp    DWORD PTR ds:0x4285e7,0x8
  422c92:	jne    0x422ca5
  422c98:	mov    edx,DWORD PTR ds:0x4285e7
  422c9e:	inc    edx
  422c9f:	mov    DWORD PTR ds:0x4285e7,edx
  422ca5:	cmp    DWORD PTR ds:0x4285e7,0x1b
  422cac:	jb     0x422c61
  422cb2:	mov    eax,DWORD PTR [eax]
  422cb4:	adc    edx,0x4266
  422cba:	mov    edx,DWORD PTR [ebp-0x24]
  422cbd:	push   ebx
  422cbe:	push   esi
  422cbf:	push   edi
  422cc0:	xor    DWORD PTR ds:0x42865b,0x2427
  422cca:	mov    edi,0x75108a4
  422ccf:	and    DWORD PTR ds:0x42867b,0x0
  422cd9:	xor    ebx,ebx
  422cdb:	or     ebx,DWORD PTR ds:0x42867b
  422ce1:	inc    ebx
  422ce2:	mov    DWORD PTR ds:0x42867b,ebx
  422ce8:	cmp    DWORD PTR ds:0x42867b,0x18
  422cef:	jg     0x422d27
  422cf5:	jmp    0x422d1a
  422cfa:	push   0x7b2e
  422cff:	push   0x428028
  422d04:	push   DWORD PTR [ebp-0x20]
  422d07:	push   0x42800b
  422d0c:	push   0x82c9
  422d11:	push   DWORD PTR [ebp-0x10]
  422d14:	call   DWORD PTR ds:0x4287bf
  422d1a:	cmp    DWORD PTR ds:0x42867b,0x10
  422d21:	jb     0x422cd9
  422d27:	xor    eax,edi
  422d29:	mov    ebx,0x3272ec
  422d2e:	sbb    DWORD PTR ds:0x4285ef,0x42860b
  422d38:	add    eax,ebx
  422d3a:	mov    DWORD PTR [edx],eax
  422d3c:	mov    eax,ds:0x4284f3
  422d41:	cmp    eax,0x445cecf9
  422d46:	jne    0x422e0e
  422d4c:	sbb    DWORD PTR ds:0x42860f,0x5794
  422d56:	mov    eax,DWORD PTR [ebp-0x4]
  422d59:	mov    esi,DWORD PTR ds:0x42864b
  422d5f:	or     esi,DWORD PTR ds:0x4285cf
  422d65:	mov    DWORD PTR ds:0x42864b,esi
  422d6b:	mov    edx,DWORD PTR ds:0x4282ef
  422d71:	xor    DWORD PTR ds:0x42863f,0x1fa5
  422d7b:	mov    edx,DWORD PTR [edx+0x198]
  422d81:	xor    DWORD PTR ds:0x42864f,ecx
  422d87:	xor    eax,edi
  422d89:	add    eax,ebx
  422d8b:	mov    DWORD PTR [edx],eax
  422d8d:	sub    DWORD PTR ds:0x428617,edx
  422d93:	mov    eax,DWORD PTR [ebp-0x4]
  422d96:	mov    edx,DWORD PTR ds:0x428637
  422d9c:	add    DWORD PTR ds:0x428663,edx
  422da2:	xor    eax,edi
  422da4:	and    DWORD PTR ds:0x42867b,0x0
  422dae:	xor    edx,edx
  422db0:	or     edx,DWORD PTR ds:0x42867b
  422db6:	inc    edx
  422db7:	mov    DWORD PTR ds:0x42867b,edx
  422dbd:	cmp    DWORD PTR ds:0x42867b,0xb
  422dc4:	jg     0x422e01
  422dca:	jmp    0x422dda
  422dcf:	push   0x4280a2
  422dd4:	call   DWORD PTR ds:0x4287c3
  422dda:	cmp    DWORD PTR ds:0x42867b,0xa
  422de1:	jne    0x422df4
  422de7:	mov    edx,DWORD PTR ds:0x42867b
  422ded:	inc    edx
  422dee:	mov    DWORD PTR ds:0x42867b,edx
  422df4:	cmp    DWORD PTR ds:0x42867b,0x18
  422dfb:	jb     0x422dae
  422e01:	add    eax,ebx
  422e03:	sub    DWORD PTR ds:0x428627,ecx
  422e09:	mov    ds:0x4284f3,eax
  422e0e:	mov    edx,DWORD PTR ds:0x4285e7
  422e14:	and    edx,DWORD PTR ds:0x428617
  422e1a:	mov    DWORD PTR ds:0x4285e7,edx
  422e20:	mov    eax,ds:0x4282ef
  422e25:	xor    edx,DWORD PTR ds:0x42865f
  422e2b:	mov    eax,DWORD PTR [eax+0x18c]
  422e31:	sbb    edx,0x43ef
  422e37:	mov    eax,DWORD PTR [eax]
  422e39:	adc    edx,esi
  422e3b:	mov    DWORD PTR [ebp-0x34],eax
  422e3e:	mov    eax,0xf89c85bc
  422e43:	mov    DWORD PTR [ebp-0x24],eax
  422e46:	and    DWORD PTR ds:0x42861f,0x0
  422e50:	mov    edx,DWORD PTR ds:0x42861f
  422e56:	inc    edx
  422e57:	mov    DWORD PTR ds:0x42861f,edx
  422e5d:	cmp    DWORD PTR ds:0x42861f,0x1e
  422e64:	jle    0x422e9e
  422e6a:	jmp    0x422e91
  422e6f:	push   0x4285cf
  422e74:	push   0x2375
  422e79:	push   0x5548
  422e7e:	push   0x51cc
  422e83:	push   0x80b2
  422e88:	push   DWORD PTR [ebp-0x28]
  422e8b:	call   DWORD PTR ds:0x4287c7
  422e91:	cmp    DWORD PTR ds:0x42861f,0x17
  422e98:	jb     0x422e50
  422e9e:	mov    DWORD PTR [ebp-0x24],eax
  422ea1:	mov    DWORD PTR ds:0x42866b,0x46d0
  422eab:	mov    DWORD PTR [ebp-0x24],eax
  422eae:	xor    esi,esi
  422eb0:	or     esi,DWORD PTR ds:0x4285ef
  422eb6:	sub    DWORD PTR ds:0x428673,esi
  422ebc:	mov    DWORD PTR [ebp-0x24],ecx
  422ebf:	mov    DWORD PTR [ebp-0x38],eax
  422ec2:	and    esi,0x6095
  422ec8:	mov    DWORD PTR [ebp-0x38],0xf89c85b8
  422ecf:	sub    DWORD PTR ds:0x428653,edi
  422ed5:	mov    esi,DWORD PTR [ebp-0x4]
  422ed8:	mov    ecx,DWORD PTR [ebp-0x8]
  422edb:	mov    edx,DWORD PTR ds:0x4286a7
  422ee1:	mov    edx,DWORD PTR [edx]
  422ee3:	xor    DWORD PTR ds:0x4285cf,edx
  422ee9:	mov    edx,DWORD PTR [ebp-0x8]
  422eec:	xor    edx,edi
  422eee:	xor    ecx,edi
  422ef0:	add    DWORD PTR ds:0x42861f,0x42860f
  422efa:	add    ecx,edx
  422efc:	sbb    edx,0x585b
  422f02:	mov    edx,DWORD PTR [ebp-0x8]
  422f05:	xor    esi,edi
  422f07:	xor    edx,edi
  422f09:	adc    DWORD PTR ds:0x428647,0x7d1c
  422f13:	add    esi,ebx
  422f15:	mov    DWORD PTR ds:0x428607,0x675c
  422f1f:	lea    ecx,[ecx+edx*1+0x9758c4]
  422f26:	mov    DWORD PTR ds:0x428647,0x161d
  422f30:	cmp    esi,ecx
  422f32:	mov    DWORD PTR ds:0x42861b,0x50e4
  422f3c:	ja     0x42305b
  422f42:	xor    DWORD PTR ds:0x4285cf,0x42862b
  422f4c:	mov    eax,DWORD PTR [ebp-0x8]
  422f4f:	sbb    DWORD PTR ds:0x42866b,0x4285eb
  422f59:	xor    eax,edi
  422f5b:	and    DWORD PTR ds:0x428633,0x42865b
  422f65:	lea    eax,[eax+esi*1+0x3272ec]
  422f6c:	push   eax
  422f6d:	mov    eax,DWORD PTR [ebp-0x24]
  422f70:	xor    DWORD PTR ds:0x42863b,0x428647
  422f7a:	xor    eax,edi
  422f7c:	sbb    DWORD PTR ds:0x4285f7,0x428637
  422f86:	lea    eax,[ebp+eax*1+0x3272f4]
  422f8d:	push   eax
  422f8e:	xor    eax,eax
  422f90:	add    eax,DWORD PTR ds:0x428653
  422f96:	or     DWORD PTR ds:0x4285ef,eax
  422f9c:	mov    eax,ds:0x4282ef
  422fa1:	push   DWORD PTR [eax+0x1bc]
  422fa7:	call   0x40aa5b
  422fac:	and    DWORD PTR ds:0x428673,0x0
  422fb6:	mov    eax,ds:0x428673
  422fbb:	inc    eax
  422fbc:	mov    ds:0x428673,eax
  422fc1:	cmp    DWORD PTR ds:0x428673,0x2d
  422fc8:	jb     0x422ff0
  422fce:	jmp    0x422fe3
  422fd3:	push   0x428657
  422fd8:	push   0x4280ae
  422fdd:	call   DWORD PTR ds:0x4287cb
  422fe3:	cmp    DWORD PTR ds:0x428673,0x1d
  422fea:	jb     0x422fb6
  422ff0:	mov    eax,DWORD PTR [ebp-0x8]
  422ff3:	or     ecx,0x5d69
  422ff9:	xor    eax,edi
  422ffb:	lea    esi,[esi+eax*1+0x3272ec]
  423002:	not    ecx
  423004:	mov    eax,DWORD PTR [ebp-0x8]
  423007:	mov    DWORD PTR ds:0x42860b,0x501a
  423011:	mov    ecx,DWORD PTR [ebp-0x8]
  423014:	xor    ecx,edi
  423016:	sbb    DWORD PTR ds:0x428667,0x42864b
  423020:	xor    eax,edi
  423022:	sbb    DWORD PTR ds:0x4285ef,0xbec
  42302c:	add    eax,ecx
  42302e:	mov    ecx,DWORD PTR [ebp-0x8]
  423031:	xor    ecx,edi
  423033:	mov    DWORD PTR ds:0x4285e3,0x1b1e
  42303d:	lea    eax,[eax+ecx*1+0x9758c4]
  423044:	cmp    esi,eax
  423046:	mov    DWORD PTR ds:0x42865b,0x1916
  423050:	jbe    0x422f42
  423056:	mov    eax,0xf89c85bc
  42305b:	mov    ecx,DWORD PTR [ebp+0xc]
  42305e:	mov    DWORD PTR ds:0x428173,ecx
  423064:	or     DWORD PTR ds:0x4285ff,ebx
  42306a:	mov    ecx,DWORD PTR [ebp+0x10]
  42306d:	or     DWORD PTR ds:0x4285d7,ebx
  423073:	mov    DWORD PTR ds:0x4283c7,ecx
  423079:	mov    DWORD PTR ds:0x42862b,0x16
  423083:	cmp    DWORD PTR ds:0x42862b,0x0
  42308a:	je     0x4230cf
  423090:	cmp    DWORD PTR ds:0x42862b,0x1e
  423097:	jg     0x4230cf
  42309d:	jmp    0x4230bd
  4230a2:	push   0x2088
  4230a7:	push   DWORD PTR [ebp-0x10]
  4230aa:	push   0x46c3
  4230af:	push   0x5611
  4230b4:	push   DWORD PTR [ebp-0x20]
  4230b7:	call   DWORD PTR ds:0x42879f
  4230bd:	mov    edx,DWORD PTR ds:0x42862b
  4230c3:	dec    edx
  4230c4:	mov    DWORD PTR ds:0x42862b,edx
  4230ca:	jmp    0x423083
  4230cf:	mov    ecx,DWORD PTR ds:0x428173
  4230d5:	mov    DWORD PTR ds:0x428673,0x6c19
  4230df:	mov    edx,DWORD PTR [ebp-0x2c]
  4230e2:	and    DWORD PTR ds:0x42864f,0x1852
  4230ec:	sub    ecx,ebx
  4230ee:	sbb    DWORD PTR ds:0x428663,0x32b3
  4230f8:	xor    ecx,edi
  4230fa:	mov    DWORD PTR ds:0x4285d7,0x3bce
  423104:	mov    DWORD PTR [edx],ecx
  423106:	mov    edx,DWORD PTR [ebp-0x20]
  423109:	mov    ecx,DWORD PTR ds:0x4285eb
  42310f:	mov    ecx,0xf89c85b0
  423114:	cmp    edx,ecx
  423116:	mov    DWORD PTR ds:0x428637,0x7ca2
  423120:	jne    0x423236
  423126:	lea    eax,[ebp-0x10]
  423129:	mov    DWORD PTR [ebp-0x40],eax
  42312c:	and    DWORD PTR ds:0x4285df,0x428623
  423136:	lea    eax,[ebp+0x4]
  423139:	xor    DWORD PTR ds:0x428603,0x2610
  423143:	mov    DWORD PTR [ebp-0x10],eax
  423146:	mov    eax,DWORD PTR [ebp-0x10]
  423149:	test   eax,eax
  42314b:	je     0x42342a
  423151:	movzx  eax,WORD PTR ds:0x42867b
  423158:	sub    DWORD PTR ds:0x42860b,eax
  42315e:	mov    eax,DWORD PTR [ebp-0xc]
  423161:	and    ecx,0x315b
  423167:	mov    eax,DWORD PTR [ebp-0x8]
  42316a:	sbb    DWORD PTR ds:0x428633,edi
  423170:	mov    eax,DWORD PTR [ebp-0x4]
  423173:	mov    ecx,DWORD PTR ds:0x42868f
  423179:	xor    esi,esi
  42317b:	add    esi,DWORD PTR ds:0x42872b
  423181:	sub    esi,ecx
  423183:	imul   ecx,DWORD PTR [ecx+esi*1]
  423187:	mov    DWORD PTR [ebp+0xc],eax
  42318a:	xor    ecx,esi
  42318c:	mov    eax,eax
  42318e:	mov    eax,ds:0x4282ef
  423193:	mov    eax,DWORD PTR [eax+0x1c8]
  423199:	mov    eax,DWORD PTR [eax]
  42319b:	cdq    
  42319c:	mov    esi,0xfabdbedd
  4231a1:	add    eax,esi
  4231a3:	adc    edx,0xffffffff
  4231a6:	and    DWORD PTR [ebp-0x38],0x0
  4231aa:	xor    edx,0x0
  4231ad:	mov    DWORD PTR [ebp-0x24],edx
  4231b0:	mov    edx,DWORD PTR [ebp+0xc]
  4231b3:	mov    DWORD PTR [ebp-0x3c],edx
  4231b6:	mov    ecx,0x8a29a137
  4231bb:	xor    eax,ecx
  4231bd:	add    DWORD PTR [ebp-0x3c],esi
  4231c0:	mov    edx,DWORD PTR [ebp-0x3c]
  4231c3:	adc    DWORD PTR [ebp-0x38],0xffffffff
  4231c7:	xor    edx,ecx
  4231c9:	mov    DWORD PTR [ebp-0x30],edx
  4231cc:	mov    edx,DWORD PTR [ebp-0x38]
  4231cf:	xor    edx,0x0
  4231d2:	mov    DWORD PTR [ebp-0x2c],edx
  4231d5:	cmp    DWORD PTR [ebp-0x30],eax
  4231d8:	jne    0x4231e9
  4231de:	mov    eax,DWORD PTR [ebp-0x24]
  4231e1:	cmp    edx,eax
  4231e3:	je     0x423216
  4231e9:	mov    eax,ds:0x4282ef
  4231ee:	mov    eax,DWORD PTR [eax+0x1c0]
  4231f4:	mov    eax,DWORD PTR [eax]
  4231f6:	xor    edx,edx
  4231f8:	add    eax,esi
  4231fa:	adc    edx,0xffffffff
  4231fd:	xor    eax,ecx
  4231ff:	xor    edx,0x0
  423202:	cmp    eax,0x70941fe9
  423207:	jne    0x42342a
  42320d:	cmp    edx,0xffffffff
  423210:	jne    0x42342a
  423216:	mov    eax,ds:0x42836b
  42321b:	mov    edx,DWORD PTR ds:0x428373
  423221:	xor    eax,edx
  423223:	mov    ds:0x42836b,eax
  423228:	mov    edx,DWORD PTR ds:0x42836b
  42322e:	mov    eax,DWORD PTR [ebp-0x10]
  423231:	jmp    0x4233ea
  423236:	mov    edx,DWORD PTR [ebp-0x14]
  423239:	cmp    edx,0xf89c85b1
  42323f:	je     0x42329c
  423245:	mov    edx,DWORD PTR [ebp-0x4]
  423248:	mov    esi,DWORD PTR [ebp-0x18]
  42324b:	xor    edx,edi
  42324d:	add    edx,ebx
  42324f:	cmp    edx,esi
  423251:	je     0x42329c
  423257:	mov    eax,ds:0x4282ef
  42325c:	mov    eax,DWORD PTR [eax+0x194]
  423262:	mov    ecx,DWORD PTR [eax]
  423264:	mov    eax,DWORD PTR [ecx+0x3c]
  423267:	push   DWORD PTR ds:0x4283c7
  42326d:	mov    eax,DWORD PTR [eax+ecx*1+0x28]
  423271:	push   DWORD PTR ds:0x428173
  423277:	add    eax,ecx
  423279:	mov    ecx,DWORD PTR ds:0x4282ef
  42327f:	mov    ecx,DWORD PTR [ecx+0x194]
  423285:	push   DWORD PTR [ecx]
  423287:	call   eax
  423289:	mov    ecx,DWORD PTR ds:0x4282ef
  42328f:	mov    ecx,DWORD PTR [ecx+0x1cc]
  423295:	mov    DWORD PTR [ecx],eax
  423297:	jmp    0x42342a
  42329c:	mov    edx,DWORD PTR [ebp-0x4]
  42329f:	mov    esi,DWORD PTR [ebp-0x34]
  4232a2:	xor    edx,edi
  4232a4:	add    edx,ebx
  4232a6:	cmp    edx,esi
  4232a8:	jne    0x423301
  4232ae:	mov    edx,DWORD PTR [ebp-0x4]
  4232b1:	mov    esi,DWORD PTR ds:0x4282ef
  4232b7:	mov    esi,DWORD PTR [esi+0x198]
  4232bd:	xor    edx,edi
  4232bf:	add    edx,ebx
  4232c1:	cmp    edx,DWORD PTR [esi]
  4232c3:	jne    0x4232de
  4232c9:	push   ecx
  4232ca:	mov    ecx,DWORD PTR [ebp-0x4]
  4232cd:	xor    ecx,edi
  4232cf:	add    ecx,ebx
  4232d1:	push   ecx
  4232d2:	push   eax
  4232d3:	push   DWORD PTR [ebp-0x8]
  4232d6:	push   DWORD PTR [ebp-0x4]
  4232d9:	call   0x422565
  4232de:	push   DWORD PTR [ebp-0x8]
  4232e1:	push   DWORD PTR [ebp-0x4]
  4232e4:	call   0x401000
  4232e9:	mov    eax,DWORD PTR [ebp-0x4]
  4232ec:	xor    eax,edi
  4232ee:	add    eax,ebx
  4232f0:	mov    ds:0x428373,eax
  4232f5:	mov    eax,DWORD PTR [ebp-0x4]
  4232f8:	xor    eax,edi
  4232fa:	add    eax,ebx
  4232fc:	mov    ds:0x42836b,eax
  423301:	lea    eax,[ebp-0x1c]
  423304:	mov    DWORD PTR [ebp-0x44],eax
  423307:	lea    eax,[ebp+0x4]
  42330a:	mov    DWORD PTR [ebp-0x1c],eax
  42330d:	mov    eax,DWORD PTR [ebp-0x1c]
  423310:	test   eax,eax
  423312:	je     0x42342a
  423318:	mov    DWORD PTR [ebp-0x48],0xf152c39
  42331f:	mov    DWORD PTR [ebp-0x4c],0x712ed2e
  423326:	mov    DWORD PTR [ebp-0x50],0x373fc08
  42332d:	mov    DWORD PTR [ebp-0x54],0x72670ad8
  423334:	call   0x41d64a
  423339:	mov    eax,DWORD PTR [ebp-0xc]
  42333c:	mov    eax,DWORD PTR [ebp-0x8]
  42333f:	mov    eax,DWORD PTR [ebp-0x4]
  423342:	mov    DWORD PTR [ebp+0xc],eax
  423345:	mov    eax,eax
  423347:	mov    eax,ds:0x4282ef
  42334c:	mov    eax,DWORD PTR [eax+0x1c8]
  423352:	mov    eax,DWORD PTR [eax]
  423354:	cdq    
  423355:	mov    esi,0xfabdbedd
  42335a:	add    eax,esi
  42335c:	adc    edx,0xffffffff
  42335f:	and    DWORD PTR [ebp-0x38],0x0
  423363:	xor    edx,0x0
  423366:	mov    DWORD PTR [ebp-0x24],edx
  423369:	mov    edx,DWORD PTR [ebp+0xc]
  42336c:	mov    DWORD PTR [ebp-0x3c],edx
  42336f:	mov    ecx,0x8a29a137
  423374:	xor    eax,ecx
  423376:	add    DWORD PTR [ebp-0x3c],esi
  423379:	mov    edx,DWORD PTR [ebp-0x3c]
  42337c:	adc    DWORD PTR [ebp-0x38],0xffffffff
  423380:	xor    edx,ecx
  423382:	mov    DWORD PTR [ebp-0x30],edx
  423385:	mov    edx,DWORD PTR [ebp-0x38]
  423388:	xor    edx,0x0
  42338b:	mov    DWORD PTR [ebp-0x2c],edx
  42338e:	cmp    DWORD PTR [ebp-0x30],eax
  423391:	jne    0x4233a2
  423397:	mov    eax,DWORD PTR [ebp-0x24]
  42339a:	cmp    edx,eax
  42339c:	je     0x4233cf
  4233a2:	mov    eax,ds:0x4282ef
  4233a7:	mov    eax,DWORD PTR [eax+0x1c0]
  4233ad:	mov    eax,DWORD PTR [eax]
  4233af:	xor    edx,edx
  4233b1:	add    eax,esi
  4233b3:	adc    edx,0xffffffff
  4233b6:	xor    eax,ecx
  4233b8:	xor    edx,0x0
  4233bb:	cmp    eax,0x70941fe9
  4233c0:	jne    0x42342a
  4233c6:	cmp    edx,0xffffffff
  4233c9:	jne    0x42342a
  4233cf:	mov    eax,ds:0x42836b
  4233d4:	mov    edx,DWORD PTR ds:0x428373
  4233da:	xor    eax,edx
  4233dc:	mov    ds:0x42836b,eax
  4233e1:	mov    edx,DWORD PTR ds:0x42836b
  4233e7:	mov    eax,DWORD PTR [ebp-0x1c]
  4233ea:	add    DWORD PTR [eax],edx
  4233ec:	mov    edx,DWORD PTR [ebp+0xc]
  4233ef:	mov    eax,ds:0x42836b
  4233f4:	xor    edx,edi
  4233f6:	add    edx,ebx
  4233f8:	xor    ebx,ebx
  4233fa:	add    edx,esi
  4233fc:	adc    ebx,0xffffffff
  4233ff:	xor    edi,edi
  423401:	xor    edx,ecx
  423403:	xor    ebx,0x0
  423406:	add    eax,esi
  423408:	adc    edi,0xffffffff
  42340b:	xor    eax,ecx
  42340d:	xor    edi,0x0
  423410:	cmp    eax,edx
  423412:	jne    0x42342a
  423418:	cmp    edi,ebx
  42341a:	jne    0x42342a
  423420:	mov    eax,ds:0x42836b
  423425:	mov    ds:0x428373,eax
  42342a:	mov    eax,ds:0x4282ef
  42342f:	push   0x4
  423431:	add    eax,0x1cc
  423436:	push   eax
  423437:	lea    eax,[ebp-0xc]
  42343a:	push   eax
  42343b:	call   0x40aa5b
  423440:	mov    eax,DWORD PTR [ebp-0xc]
  423443:	mov    eax,DWORD PTR [eax]
  423445:	pop    edi
  423446:	pop    esi
  423447:	pop    ebx
  423448:	leave  
  423449:	ret    0xc
  42344c:	xor    eax,eax
  42344e:	add    DWORD PTR ds:0x4285f3,0x36c3
  423458:	inc    eax
  423459:	ret    
  42345a:	push   ebp
  42345b:	mov    ebp,esp
  42345d:	push   ecx
  42345e:	mov    DWORD PTR [ebp-0x4],0xf89c85b0
  423465:	dec    edx
  423466:	mov    eax,DWORD PTR [ebp+0x8]
  423469:	sbb    DWORD PTR ds:0x42864b,0x3b56
  423473:	movsx  eax,BYTE PTR [eax]
  423476:	xor    edx,edx
  423478:	xor    edx,DWORD PTR ds:0x428653
  42347e:	or     edx,DWORD PTR ds:0x428637
  423484:	mov    DWORD PTR ds:0x428653,edx
  42348a:	mov    edx,0x3272ec
  42348f:	mov    ecx,DWORD PTR ds:0x428607
  423495:	adc    DWORD PTR ds:0x42865b,ecx
  42349b:	sub    eax,edx
  42349d:	movzx  ecx,WORD PTR ds:0x4285ff
  4234a4:	sbb    DWORD PTR ds:0x42864f,ecx
  4234aa:	mov    ecx,0x75108a4
  4234af:	or     DWORD PTR ds:0x4285d3,0x42864b
  4234b9:	xor    eax,ecx
  4234bb:	cmp    eax,0xf89c85c5
  4234c0:	mov    DWORD PTR ds:0x42864f,0x82b
  4234ca:	jne    0x42350f
  4234d0:	adc    DWORD PTR ds:0x428633,ecx
  4234d6:	mov    eax,DWORD PTR [ebp+0x8]
  4234d9:	push   esi
  4234da:	sub    DWORD PTR ds:0x4285e7,edi
  4234e0:	mov    esi,DWORD PTR [ebp+0x8]
  4234e3:	and    DWORD PTR ds:0x4285e3,0x244e
  4234ed:	add    esi,DWORD PTR [eax+0x3c]
  4234f0:	mov    DWORD PTR [ebp+0x8],esi
  4234f3:	mov    eax,DWORD PTR [ebp-0x4]
  4234f6:	mov    esi,DWORD PTR [ebp+0x8]
  4234f9:	xor    eax,ecx
  4234fb:	add    eax,edx
  4234fd:	cmp    DWORD PTR [esi+0x54],eax
  423500:	pop    esi
  423501:	je     0x42350f
  423507:	mov    eax,DWORD PTR [ebp+0x8]
  42350a:	jmp    0x423516
  42350f:	mov    eax,DWORD PTR [ebp-0x4]
  423512:	xor    eax,ecx
  423514:	add    eax,edx
  423516:	leave  
  423517:	ret    0x4
  42351a:	push   ebp
  42351b:	mov    ebp,esp
  42351d:	sub    esp,0xc
  423520:	push   esi
  423521:	xor    DWORD PTR ds:0x428617,edi
  423527:	mov    esi,0xf89c85b0
  42352c:	xor    edx,DWORD PTR ds:0x428657
  423532:	mov    DWORD PTR [ebp-0x8],esi
  423535:	sub    ecx,ecx
  423537:	mov    DWORD PTR [ebp-0x4],0xf89c85b1
  42353e:	add    ecx,DWORD PTR ds:0x4285e3
  423544:	push   edi
  423545:	mov    eax,eax
  423547:	and    DWORD PTR ds:0x4285ff,0x0
  423551:	xor    eax,eax
  423553:	add    eax,DWORD PTR ds:0x4285ff
  423559:	inc    eax
  42355a:	mov    ds:0x4285ff,eax
  42355f:	cmp    DWORD PTR ds:0x4285ff,0x20
  423566:	ja     0x423589
  42356c:	jmp    0x42357c
  423571:	push   0x2fb5
  423576:	call   DWORD PTR ds:0x4287a3
  42357c:	cmp    DWORD PTR ds:0x4285ff,0x10
  423583:	jb     0x423551
  423589:	mov    eax,DWORD PTR [ebp-0x4]
  42358c:	and    DWORD PTR ds:0x42862f,0x0
  423596:	jmp    0x4235a8
  42359b:	mov    ecx,DWORD PTR ds:0x42862f
  4235a1:	inc    ecx
  4235a2:	mov    DWORD PTR ds:0x42862f,ecx
  4235a8:	cmp    DWORD PTR ds:0x42862f,0x19
  4235af:	jae    0x4235da
  4235b5:	cmp    DWORD PTR ds:0x42862f,0x22
  4235bc:	ja     0x4235da
  4235c2:	jmp    0x4235d5
  4235c7:	push   DWORD PTR [ebp-0x28]
  4235ca:	push   0x428028
  4235cf:	call   DWORD PTR ds:0x4287a7
  4235d5:	jmp    0x42359b
  4235da:	mov    edi,DWORD PTR [ebp-0x8]
  4235dd:	mov    ecx,0x75108a4
  4235e2:	xor    eax,ecx
  4235e4:	sbb    edx,DWORD PTR ds:0x428637
  4235ea:	xor    edi,ecx
  4235ec:	mov    edx,0x3272ec
  4235f1:	add    edi,edx
  4235f3:	mov    DWORD PTR ds:0x42861b,0x1914
  4235fd:	add    eax,edx
  4235ff:	mov    DWORD PTR ds:0x42863b,0x6a3e
  423609:	imul   eax,edi
  42360c:	mov    DWORD PTR ds:0x428613,ebx
  423612:	mov    edi,DWORD PTR [ebp+0xc]
  423615:	mov    DWORD PTR ds:0x428647,0x7cb7
  42361f:	cmp    edi,eax
  423621:	je     0x423678
  423627:	not    eax
  423629:	mov    DWORD PTR [ebp-0xc],esi
  42362c:	mov    eax,DWORD PTR [ebp-0xc]
  42362f:	mov    esi,DWORD PTR [ebp+0xc]
  423632:	xor    eax,ecx
  423634:	lea    eax,[eax*8+0x19397d8]
  42363b:	mov    eax,DWORD PTR [esi+eax*1]
  42363e:	mov    DWORD PTR [ebp+0xc],eax
  423641:	mov    eax,DWORD PTR [ebp-0x4]
  423644:	mov    esi,DWORD PTR [ebp-0x8]
  423647:	xor    eax,ecx
  423649:	xor    esi,ecx
  42364b:	add    esi,edx
  42364d:	add    eax,edx
  42364f:	imul   eax,esi
  423652:	mov    esi,DWORD PTR [ebp+0xc]
  423655:	cmp    esi,eax
  423657:	je     0x423678
  42365d:	mov    eax,DWORD PTR [ebp-0x4]
  423660:	xor    eax,ecx
  423662:	mov    ecx,DWORD PTR [ebp+0xc]
  423665:	add    eax,edx
  423667:	imul   eax,ecx
  42366a:	add    eax,DWORD PTR [ebp+0x8]
  42366d:	mov    DWORD PTR [ebp+0xc],eax
  423670:	mov    eax,DWORD PTR [ebp+0xc]
  423673:	jmp    0x423689
  423678:	mov    eax,DWORD PTR [ebp-0x4]
  42367b:	mov    esi,DWORD PTR [ebp-0x8]
  42367e:	xor    esi,ecx
  423680:	xor    eax,ecx
  423682:	add    esi,edx
  423684:	add    eax,edx
  423686:	imul   eax,esi
  423689:	pop    edi
  42368a:	pop    esi
  42368b:	leave  
  42368c:	ret    0x8
  42368f:	push   ebp
  423690:	mov    ebp,esp
  423692:	sub    esp,0x38
  423695:	mov    DWORD PTR [ebp-0x4],0xf89c85b0
  42369c:	sub    DWORD PTR ds:0x428607,edi
  4236a2:	push   ebx
  4236a3:	adc    DWORD PTR ds:0x4285d3,0x5ead
  4236ad:	mov    DWORD PTR [ebp-0xc],0xf89c85b1
  4236b4:	mov    eax,DWORD PTR [ebp-0x4]
  4236b7:	push   esi
  4236b8:	movzx  esi,WORD PTR ds:0x42865f
  4236bf:	or     esi,DWORD PTR ds:0x428643
  4236c5:	mov    DWORD PTR ds:0x42865f,esi
  4236cb:	mov    esi,0x75108a4
  4236d0:	xor    eax,esi
  4236d2:	push   edi
  4236d3:	movzx  edi,WORD PTR ds:0x42862f
  4236da:	add    edi,DWORD PTR ds:0x4285d3
  4236e0:	mov    DWORD PTR ds:0x42862f,edi
  4236e6:	mov    edi,0x3272ec
  4236eb:	add    eax,edi
  4236ed:	and    DWORD PTR ds:0x42864f,0x1fff
  4236f7:	mov    DWORD PTR [ebp-0x1c],eax
  4236fa:	mov    eax,ds:0x4285d7
  4236ff:	sbb    DWORD PTR ds:0x42866b,eax
  423705:	mov    eax,DWORD PTR [ebp+0x14]
  423708:	test   eax,eax
  42370a:	mov    DWORD PTR ds:0x42861b,0x61b5
  423714:	je     0x423724
  42371a:	xor    eax,eax
  42371c:	mov    eax,DWORD PTR [ebp+0x14]
  42371f:	mov    eax,DWORD PTR [eax]
  423721:	mov    DWORD PTR [ebp-0x1c],eax
  423724:	and    DWORD PTR ds:0x42867b,ecx
  42372a:	mov    eax,DWORD PTR [ebp-0x4]
  42372d:	xor    eax,esi
  42372f:	adc    DWORD PTR ds:0x4285eb,edx
  423735:	add    eax,edi
  423737:	and    DWORD PTR ds:0x4285eb,ecx
  42373d:	mov    DWORD PTR [ebp-0x8],eax
  423740:	xor    eax,eax
  423742:	mov    eax,DWORD PTR [ebp-0xc]
  423745:	sub    DWORD PTR ds:0x428607,0x2824
  42374f:	xor    eax,esi
  423751:	or     DWORD PTR ds:0x428663,0xb3a
  42375b:	add    eax,edi
  42375d:	sub    DWORD PTR ds:0x428617,edx
  423763:	mov    DWORD PTR [ebp-0x24],eax
  423766:	mov    ebx,DWORD PTR ds:0x428667
  42376c:	and    DWORD PTR ds:0x428603,ebx
  423772:	mov    eax,DWORD PTR [ebp-0x4]
  423775:	xor    eax,esi
  423777:	add    eax,edi
  423779:	and    DWORD PTR ds:0x428637,0x0
  423783:	mov    ebx,DWORD PTR ds:0x428637
  423789:	inc    ebx
  42378a:	mov    DWORD PTR ds:0x428637,ebx
  423790:	cmp    DWORD PTR ds:0x428637,0x23
  423797:	ja     0x4237c0
  42379d:	jmp    0x4237b3
  4237a2:	push   0x428070
  4237a7:	push   DWORD PTR [ebp-0x14]
  4237aa:	push   DWORD PTR [ebp-0x14]
  4237ad:	call   DWORD PTR ds:0x4287ab
  4237b3:	cmp    DWORD PTR ds:0x428637,0x17
  4237ba:	jb     0x423783
  4237c0:	mov    DWORD PTR [ebp-0x30],eax
  4237c3:	mov    ebx,DWORD PTR [ebp-0x4]
  4237c6:	xor    ebx,esi
  4237c8:	add    ebx,edi
  4237ca:	adc    eax,DWORD PTR ds:0x428673
  4237d0:	mov    eax,DWORD PTR [ebp-0x24]
  4237d3:	sub    eax,edi
  4237d5:	lea    ecx,[ebx-0x3272ec]
  4237db:	add    DWORD PTR ds:0x42861f,0x137d
  4237e5:	xor    eax,esi
  4237e7:	adc    DWORD PTR ds:0x428667,0x428613
  4237f1:	xor    ecx,esi
  4237f3:	cmp    ecx,eax
  4237f5:	je     0x423b1a
  4237fb:	and    DWORD PTR ds:0x428667,0x0
  423805:	mov    eax,ds:0x428667
  42380a:	inc    eax
  42380b:	mov    ds:0x428667,eax
  423810:	cmp    DWORD PTR ds:0x428667,0x22
  423817:	jge    0x42383a
  42381d:	jmp    0x42382d
  423822:	push   0x428056
  423827:	call   DWORD PTR ds:0x4287af
  42382d:	cmp    DWORD PTR ds:0x428667,0x14
  423834:	jb     0x423805
  42383a:	mov    eax,DWORD PTR [ebp-0x4]
  42383d:	add    DWORD PTR ds:0x42862b,0x428657
  423847:	xor    eax,esi
  423849:	add    eax,edi
  42384b:	mov    DWORD PTR ds:0x42863b,0x5900
  423855:	cmp    ebx,eax
  423857:	mov    DWORD PTR ds:0x42864b,0x1e0f
  423861:	jne    0x423a68
  423867:	sbb    DWORD PTR ds:0x42866f,0x4285df
  423871:	push   DWORD PTR [ebp+0x8]
  423874:	sub    DWORD PTR ds:0x428653,0x2050
  42387e:	call   0x42345a
  423883:	mov    DWORD PTR [ebp-0x14],eax
  423886:	mov    eax,DWORD PTR [ebp-0x4]
  423889:	xor    DWORD PTR ds:0x428603,0x42865b
  423893:	mov    ecx,DWORD PTR [ebp-0x14]
  423896:	sbb    DWORD PTR ds:0x42866f,0x5022
  4238a0:	xor    eax,esi
  4238a2:	adc    DWORD PTR ds:0x42867b,0x428657
  4238ac:	add    eax,edi
  4238ae:	mov    DWORD PTR ds:0x4285e7,0x3cb8
  4238b8:	cmp    ecx,eax
  4238ba:	je     0x423bfd
  4238c0:	sbb    DWORD PTR ds:0x4285ef,0x428613
  4238ca:	push   DWORD PTR [ebp-0x14]
  4238cd:	or     DWORD PTR ds:0x42866b,0x13a4
  4238d7:	push   DWORD PTR [ebp+0x8]
  4238da:	and    DWORD PTR ds:0x4285cf,0x6488
  4238e4:	call   0x42351a
  4238e9:	mov    DWORD PTR [ebp-0x14],eax
  4238ec:	mov    ecx,DWORD PTR ds:0x4286c7
  4238f2:	mov    eax,ds:0x4286ff
  4238f7:	sub    ecx,eax
  4238f9:	sub    ecx,DWORD PTR [ecx+eax*1]
  4238fc:	mov    eax,DWORD PTR [ebp-0x4]
  4238ff:	mov    DWORD PTR ds:0x4285e3,0x1e
  423909:	cmp    DWORD PTR ds:0x4285e3,0x0
  423910:	je     0x42394a
  423916:	cmp    DWORD PTR ds:0x4285e3,0x27
  42391d:	ja     0x42394a
  423923:	jmp    0x423938
  423928:	push   0x4c54
  42392d:	push   0x42862f
  423932:	call   DWORD PTR ds:0x4287b3
  423938:	mov    ecx,DWORD PTR ds:0x4285e3
  42393e:	dec    ecx
  42393f:	mov    DWORD PTR ds:0x4285e3,ecx
  423945:	jmp    0x423909
  42394a:	mov    ecx,DWORD PTR [ebp-0x14]
  42394d:	mov    DWORD PTR ds:0x4285f3,0x1814
  423957:	xor    eax,esi
  423959:	add    DWORD PTR ds:0x428657,0x428637
  423963:	add    eax,edi
  423965:	mov    DWORD PTR ds:0x42863f,0xaaa
  42396f:	cmp    ecx,eax
  423971:	mov    DWORD PTR ds:0x42860f,0x626d
  42397b:	je     0x423bfd
  423981:	mov    eax,DWORD PTR [ebp-0x14]
  423984:	or     ecx,0x1da9
  42398a:	mov    eax,DWORD PTR [eax+0x18]
  42398d:	sub    DWORD PTR ds:0x42865b,ecx
  423993:	mov    DWORD PTR [ebp-0x24],eax
  423996:	and    eax,0x4d45
  42399b:	mov    eax,DWORD PTR [ebp-0x14]
  42399e:	adc    ecx,0x37bd
  4239a4:	mov    ecx,DWORD PTR [ebp+0x8]
  4239a7:	add    ecx,DWORD PTR [eax+0x20]
  4239aa:	movzx  eax,WORD PTR ds:0x4285d3
  4239b1:	sbb    DWORD PTR ds:0x428657,eax
  4239b7:	mov    DWORD PTR [ebp-0x2c],ecx
  4239ba:	and    DWORD PTR ds:0x428627,0x1b49
  4239c4:	mov    eax,DWORD PTR [ebp-0x14]
  4239c7:	mov    ecx,DWORD PTR [ebp+0x8]
  4239ca:	and    DWORD PTR ds:0x4285db,0x4285ef
  4239d4:	add    ecx,DWORD PTR [eax+0x24]
  4239d7:	adc    DWORD PTR ds:0x4285e3,0x7baf
  4239e1:	mov    DWORD PTR [ebp-0x34],ecx
  4239e4:	and    DWORD PTR ds:0x428623,0x0
  4239ee:	jmp    0x423a01
  4239f3:	xor    eax,eax
  4239f5:	xor    eax,DWORD PTR ds:0x428623
  4239fb:	inc    eax
  4239fc:	mov    ds:0x428623,eax
  423a01:	cmp    DWORD PTR ds:0x428623,0x1a
  423a08:	jae    0x423a43
  423a0e:	cmp    DWORD PTR ds:0x428623,0xd
  423a15:	jb     0x423a43
  423a1b:	jmp    0x423a26
  423a20:	call   DWORD PTR ds:0x4287b7
  423a26:	cmp    DWORD PTR ds:0x428623,0xc
  423a2d:	jne    0x423a3e
  423a33:	mov    eax,ds:0x428623
  423a38:	inc    eax
  423a39:	mov    ds:0x428623,eax
  423a3e:	jmp    0x4239f3
  423a43:	mov    eax,DWORD PTR [ebp-0x14]
  423a46:	mov    ecx,DWORD PTR [ebp+0x8]
  423a49:	xor    DWORD PTR ds:0x428603,0x1ba
  423a53:	add    ecx,DWORD PTR [eax+0x1c]
  423a56:	mov    DWORD PTR [ebp-0x14],ecx
  423a59:	mov    DWORD PTR ds:0x4285df,0x6d54
  423a63:	jmp    0x423bbb
  423a68:	sbb    DWORD PTR ds:0x428657,0x267e
  423a72:	mov    eax,DWORD PTR [ebp-0x2c]
  423a75:	and    DWORD PTR ds:0x42865f,0x0
  423a7f:	mov    ecx,DWORD PTR ds:0x42865f
  423a85:	inc    ecx
  423a86:	mov    DWORD PTR ds:0x42865f,ecx
  423a8c:	cmp    DWORD PTR ds:0x42865f,0x24
  423a93:	jl     0x423ab6
  423a99:	jmp    0x423aa9
  423a9e:	push   0x3051
  423aa3:	call   DWORD PTR ds:0x4287bb
  423aa9:	cmp    DWORD PTR ds:0x42865f,0x1e
  423ab0:	jb     0x423a7f
  423ab6:	mov    ecx,DWORD PTR [ebp+0x8]
  423ab9:	add    DWORD PTR ds:0x428617,0x4285ef
  423ac3:	add    ecx,DWORD PTR [eax+ebx*4]
  423ac6:	movzx  eax,BYTE PTR ds:0x4285d3
  423acd:	or     eax,DWORD PTR ds:0x428633
  423ad3:	mov    ds:0x4285d3,eax
  423ad8:	mov    DWORD PTR [ebp-0x28],ecx
  423adb:	mov    eax,DWORD PTR [ebp-0x4]
  423ade:	xor    DWORD PTR ds:0x42860b,0x227b
  423ae8:	mov    ecx,DWORD PTR [ebp-0x28]
  423aeb:	mov    DWORD PTR ds:0x428657,0x956
  423af5:	xor    eax,esi
  423af7:	add    DWORD PTR ds:0x428637,0x428663
  423b01:	add    eax,edi
  423b03:	mov    DWORD PTR ds:0x42862f,0x1972
  423b0d:	cmp    ecx,eax
  423b0f:	je     0x423bbb
  423b15:	jmp    0x423b7a
  423b1a:	mov    eax,DWORD PTR [ebp-0x4]
  423b1d:	mov    DWORD PTR ds:0x42866f,0x10fc
  423b27:	mov    ecx,DWORD PTR [ebp-0x8]
  423b2a:	or     DWORD PTR ds:0x42866f,0x42865f
  423b34:	xor    eax,esi
  423b36:	adc    DWORD PTR ds:0x4285eb,0x240b
  423b40:	add    eax,edi
  423b42:	mov    DWORD PTR ds:0x428657,0x63ac
  423b4c:	cmp    ecx,eax
  423b4e:	mov    eax,DWORD PTR [ebp-0x4]
  423b51:	je     0x423c00
  423b57:	mov    ecx,DWORD PTR [ebp-0x30]
  423b5a:	xor    eax,esi
  423b5c:	mov    DWORD PTR ds:0x428613,0x1e55
  423b66:	add    eax,edi
  423b68:	mov    DWORD PTR ds:0x428637,0x6483
  423b72:	cmp    ecx,eax
  423b74:	je     0x423c09
  423b7a:	adc    DWORD PTR ds:0x428603,0x42865b
  423b84:	lea    eax,[ebp-0x8]
  423b87:	sub    DWORD PTR ds:0x428603,0x42860b
  423b91:	push   eax
  423b92:	sbb    DWORD PTR ds:0x42861b,0x4285f7
  423b9c:	push   DWORD PTR [ebp-0x28]
  423b9f:	sub    DWORD PTR ds:0x428617,0x428667
  423ba9:	push   DWORD PTR [ebp+0xc]
  423bac:	adc    DWORD PTR ds:0x42863f,0x428633
  423bb6:	call   0x40f467
  423bbb:	sub    DWORD PTR ds:0x4285d7,0x3834
  423bc5:	mov    eax,DWORD PTR [ebp-0x4]
  423bc8:	mov    ecx,DWORD PTR [ebp-0x8]
  423bcb:	xor    eax,esi
  423bcd:	add    eax,edi
  423bcf:	cmp    ecx,eax
  423bd1:	je     0x423bec
  423bd7:	mov    eax,DWORD PTR [ebp-0x34]
  423bda:	movzx  eax,WORD PTR [eax+ebx*2]
  423bde:	mov    ecx,DWORD PTR [ebp-0x14]
  423be1:	mov    eax,DWORD PTR [ecx+eax*4]
  423be4:	mov    DWORD PTR [ebp-0x38],eax
  423be7:	jmp    0x423b1a
  423bec:	mov    eax,DWORD PTR [ebp-0xc]
  423bef:	xor    eax,esi
  423bf1:	lea    ebx,[ebx+eax*1+0x3272ec]
  423bf8:	jmp    0x4237ca
  423bfd:	mov    eax,DWORD PTR [ebp-0x4]
  423c00:	xor    eax,esi
  423c02:	add    eax,edi
  423c04:	jmp    0x423d26
  423c09:	mov    eax,DWORD PTR [ebp-0x38]
  423c0c:	add    eax,DWORD PTR [ebp+0x8]
  423c0f:	mov    DWORD PTR [ebp-0x18],eax
  423c12:	mov    eax,DWORD PTR [ebp-0x1c]
  423c15:	test   eax,eax
  423c17:	je     0x423cb1
  423c1d:	mov    DWORD PTR [ebp-0x20],0x0
  423c24:	push   0x3
  423c26:	xor    edx,edx
  423c28:	pop    edx
  423c29:	add    edx,0x8
  423c2c:	push   edx
  423c2d:	pop    ecx
  423c2e:	push   0x6
  423c30:	dec    ecx
  423c31:	pop    ebx
  423c32:	dec    ebx
  423c33:	xchg   ebx,ecx
  423c35:	sub    ebx,ecx
  423c37:	xchg   ebx,ecx
  423c39:	dec    ecx
  423c3a:	mov    eax,DWORD PTR [ebp-0x1c]
  423c3d:	imul   eax,ecx
  423c40:	sub    esp,eax
  423c42:	mov    DWORD PTR [ebp-0x20],esp
  423c45:	mov    eax,DWORD PTR [ebp-0x4]
  423c48:	xor    eax,esi
  423c4a:	add    eax,edi
  423c4c:	jmp    0x423c8a
  423c51:	mov    ecx,DWORD PTR [ebp-0xc]
  423c54:	mov    eax,DWORD PTR [ebp+0x8]
  423c57:	mov    edx,DWORD PTR [ebp+0x14]
  423c5a:	mov    eax,DWORD PTR [edx+eax*4+0x4]
  423c5e:	xor    ecx,esi
  423c60:	add    ecx,edi
  423c62:	xor    edx,edx
  423c64:	div    ecx
  423c66:	mov    ecx,DWORD PTR [ebp-0x4]
  423c69:	xor    ecx,esi
  423c6b:	lea    eax,[ecx+eax*1+0x3272ec]
  423c72:	mov    ecx,DWORD PTR [ebp+0x8]
  423c75:	mov    edx,DWORD PTR [ebp-0x20]
  423c78:	mov    DWORD PTR [edx+ecx*4],eax
  423c7b:	mov    eax,DWORD PTR [ebp-0xc]
  423c7e:	mov    ecx,DWORD PTR [ebp+0x8]
  423c81:	xor    eax,esi
  423c83:	lea    eax,[eax+ecx*1+0x3272ec]
  423c8a:	mov    DWORD PTR [ebp+0x8],eax
  423c8d:	mov    eax,DWORD PTR [ebp-0xc]
  423c90:	mov    ecx,DWORD PTR [ebp+0x14]
  423c93:	xor    eax,esi
  423c95:	add    eax,edi
  423c97:	imul   eax,DWORD PTR [ecx]
  423c9a:	mov    ecx,DWORD PTR [ebp-0x4]
  423c9d:	mov    edx,DWORD PTR [ebp+0x8]
  423ca0:	xor    ecx,esi
  423ca2:	lea    ecx,[ecx+edx*1+0x3272ec]
  423ca9:	cmp    ecx,eax
  423cab:	jne    0x423c51
  423cb1:	mov    eax,DWORD PTR [ebp-0x4]
  423cb4:	xor    eax,esi
  423cb6:	add    eax,edi
  423cb8:	mov    DWORD PTR [ebp-0x10],eax
  423cbb:	mov    ebx,0x65655
  423cc0:	add    ebx,0x3234
  423cc6:	xchg   ebx,esi
  423cc8:	xor    ebx,ebx
  423cca:	push   esi
  423ccb:	mov    esi,ebx
  423ccd:	pop    ebx
  423cce:	mov    edx,esi
  423cd0:	add    ebx,0x1002
  423cd6:	lea    eax,[ebp-0x18]
  423cd9:	add    edx,eax
  423cdb:	add    edx,0x5
  423cde:	push   edx
  423cdf:	inc    esi
  423ce0:	pop    ecx
  423ce1:	dec    ecx
  423ce2:	xchg   ecx,eax
  423ce3:	dec    eax
  423ce4:	xchg   ecx,eax
  423ce5:	dec    ecx
  423ce6:	xchg   ecx,edx
  423ce8:	dec    edx
  423ce9:	push   edx
  423cea:	mov    edx,ebx
  423cec:	pop    ebx
  423ced:	dec    ebx
  423cee:	call   DWORD PTR [ebx]
  423cf0:	cmp    DWORD PTR [ebp+0x10],esi
  423cf3:	je     0x423d12
  423cf9:	xchg   edx,eax
  423cfa:	push   0xb
  423cfc:	pop    ecx
  423cfd:	push   0x4
  423cff:	pop    ebx
  423d00:	inc    ebx
  423d01:	xchg   ebx,ecx
  423d03:	sub    ebx,ecx
  423d05:	xchg   ebx,ecx
  423d07:	dec    ecx
  423d08:	dec    ecx
  423d09:	mov    eax,DWORD PTR [ebp-0x1c]
  423d0c:	imul   eax,ecx
  423d0f:	add    esp,eax
  423d11:	xchg   edx,eax
  423d12:	push   eax
  423d13:	xor    ebx,ebx
  423d15:	mov    edx,esp
  423d17:	dec    edx
  423d18:	inc    ebx
  423d19:	add    ebx,DWORD PTR [edx+ebx*1]
  423d1c:	dec    ebx
  423d1d:	xor    edx,edx
  423d1f:	add    DWORD PTR [ebp-0x10],ebx
  423d22:	pop    ebx
  423d23:	mov    eax,DWORD PTR [ebp-0x10]
  423d26:	pop    edi
  423d27:	pop    esi
  423d28:	pop    ebx
  423d29:	leave  
  423d2a:	ret    0x10
  423d2d:	add    BYTE PTR [eax],al
  423d2f:	add    BYTE PTR [eax],al
  423d31:	add    BYTE PTR [eax],al
  423d33:	add    BYTE PTR [ebx+0x4df68a],dh
  423d39:	add    BYTE PTR [eax],al
  423d3b:	add    BYTE PTR [edx],al
  423d3d:	add    BYTE PTR [eax],al
  423d3f:	add    BYTE PTR [eax+eax*1],dh
  423d42:	add    BYTE PTR [eax],al
  423d44:	push   eax
  423d45:	cmp    eax,0x31500002
  423d4a:	add    al,BYTE PTR [eax]
  423d4c:	add    BYTE PTR [eax],al
  423d4e:	add    BYTE PTR [eax],al
  423d50:	push   edx
  423d51:	push   ebx
  423d52:	inc    esp
  423d53:	push   ebx
  423d54:	imul   ecx,DWORD PTR ds:0xb280e9b1,0x88814b88
  423d5e:	test   eax,0x16d5589
  423d63:	mov    dl,0x1
  423d65:	add    BYTE PTR [eax],al
  423d67:	add    BYTE PTR [ebp+0x3a],al
  423d6a:	pop    esp
  423d6b:	push   edx
  423d6c:	popa   
  423d6d:	ja     0x423d8f
  423d6f:	inc    esp
  423d70:	popa   
  423d71:	je     0x423dd4
  423d73:	pop    esp
  423d74:	inc    ebp
  423d75:	outs   dx,BYTE PTR ds:[esi]
  423d76:	arpl   WORD PTR [edi+0x64],bp
  423d79:	gs fs inc esp
  423d7c:	popa   
  423d7d:	je     0x423de0
  423d7f:	inc    esi
  423d80:	imul   ebp,DWORD PTR [ebp+eiz*2+0x0],0x81ec558b
  423d88:	in     al,dx
  423d89:	or     BYTE PTR [ecx],al
  423d8b:	add    BYTE PTR [eax],al
  423d8d:	push   ebx
  423d8e:	mov    eax,ebx
  423d90:	xchg   ecx,eax
  423d91:	mov    eax,DWORD PTR [ebp+0x8]
  423d94:	cmp    eax,0xf89c85b0
  423d99:	jne    0x424220
  423d9f:	mov    eax,DWORD PTR [ebp+0xc]
  423da2:	cmp    eax,0xf89c85b1
  423da7:	jne    0x424220
  423dad:	mov    eax,DWORD PTR [ebp+0x24]
  423db0:	mov    DWORD PTR [ebp-0x4],eax
  423db3:	mov    BYTE PTR [ebp-0x18],0x13
  423db7:	mov    BYTE PTR [ebp-0x17],0x1e
  423dbb:	mov    BYTE PTR [ebp-0x16],0x15
  423dbf:	mov    BYTE PTR [ebp-0x15],0x4f
  423dc3:	mov    BYTE PTR [ebp-0x14],0x4c
  423dc7:	mov    BYTE PTR [ebp-0x13],0x7a
  423dcb:	mov    BYTE PTR [ebp-0x20],0x1
  423dcf:	mov    BYTE PTR [ebp-0x1f],0xf
  423dd3:	mov    BYTE PTR [ebp-0x1e],0x11
  423dd7:	mov    BYTE PTR [ebp-0x1d],0xc
  423ddb:	mov    BYTE PTR [ebp-0x1c],0x4f
  423ddf:	mov    BYTE PTR [ebp-0x1b],0x4c
  423de3:	mov    BYTE PTR [ebp-0x1a],0x7a
  423de7:	mov    BYTE PTR [ebp-0x28],0xf
  423deb:	mov    BYTE PTR [ebp-0x27],0x12
  423def:	mov    BYTE PTR [ebp-0x26],0x16
  423df3:	mov    BYTE PTR [ebp-0x25],0x3
  423df7:	mov    BYTE PTR [ebp-0x24],0x1d
  423dfb:	mov    BYTE PTR [ebp-0x23],0xa
  423dff:	push   esi
  423e00:	mov    BYTE PTR [ebp-0x22],0x15
  423e04:	mov    BYTE PTR [ebp-0x21],0x7a
  423e08:	xor    esi,esi
  423e0a:	mov    eax,0xfd
  423e0f:	lea    ecx,[ebp+esi*1-0x18]
  423e13:	movzx  edx,BYTE PTR [ecx]
  423e16:	xor    edx,0x79
  423e19:	add    edx,eax
  423e1b:	inc    esi
  423e1c:	mov    BYTE PTR [ecx],dl
  423e1e:	cmp    esi,0x6
  423e21:	jb     0x423e0f
  423e23:	xor    esi,esi
  423e25:	lea    ecx,[ebp+esi*1-0x20]
  423e29:	movzx  edx,BYTE PTR [ecx]
  423e2c:	xor    edx,0x79
  423e2f:	add    edx,eax
  423e31:	inc    esi
  423e32:	mov    BYTE PTR [ecx],dl
  423e34:	cmp    esi,0x7
  423e37:	jb     0x423e25
  423e39:	xor    esi,esi
  423e3b:	lea    ecx,[ebp+esi*1-0x28]
  423e3f:	movzx  edx,BYTE PTR [ecx]
  423e42:	xor    edx,0x79
  423e45:	add    edx,eax
  423e47:	inc    esi
  423e48:	mov    BYTE PTR [ecx],dl
  423e4a:	cmp    esi,0x8
  423e4d:	jb     0x423e3b
  423e4f:	lea    eax,[ebp-0x2c]
  423e52:	mov    DWORD PTR [ebp-0x8],eax
  423e55:	mov    ecx,DWORD PTR [ebp-0x8]
  423e58:	mov    eax,0x7113fcce
  423e5d:	mov    DWORD PTR [ecx],eax
  423e5f:	mov    ecx,DWORD PTR [ebp-0x2c]
  423e62:	push   edi
  423e63:	mov    esi,0x4e3e
  423e68:	mov    ebx,0x3272ec
  423e6d:	cmp    ecx,eax
  423e6f:	jne    0x423f3a
  423e75:	lea    eax,[esi+0x29]
  423e78:	mov    WORD PTR [ebp-0x78],ax
  423e7c:	mov    eax,esi
  423e7e:	mov    WORD PTR [ebp-0x76],ax
  423e82:	add    eax,0x3b
  423e85:	mov    WORD PTR [ebp-0x74],ax
  423e89:	lea    eax,[esi-0x6]
  423e8c:	mov    WORD PTR [ebp-0x72],ax
  423e90:	add    eax,0x47
  423e93:	mov    ecx,eax
  423e95:	lea    eax,[esi-0x1d]
  423e98:	mov    WORD PTR [ebp-0x66],ax
  423e9c:	mov    eax,esi
  423e9e:	mov    WORD PTR [ebp-0x64],ax
  423ea2:	add    eax,0xffffffe4
  423ea5:	mov    WORD PTR [ebp-0x62],ax
  423ea9:	mov    eax,0x44b
  423eae:	mov    WORD PTR [ebp-0x60],ax
  423eb2:	mov    eax,0x5664
  423eb7:	mov    WORD PTR [ebp-0x5e],ax
  423ebb:	mov    eax,0x6104
  423ec0:	mov    WORD PTR [ebp-0x5c],ax
  423ec4:	lea    eax,[ebp-0xe0]
  423eca:	push   eax
  423ecb:	mov    eax,DWORD PTR [ebp+0xc]
  423ece:	mov    edi,0x75108a4
  423ed3:	xor    eax,edi
  423ed5:	add    eax,ebx
  423ed7:	push   eax
  423ed8:	mov    WORD PTR [ebp-0x70],cx
  423edc:	lea    ecx,[esi-0x1a]
  423edf:	mov    edx,ecx
  423ee1:	lea    eax,[ebp-0x78]
  423ee4:	push   eax
  423ee5:	mov    eax,DWORD PTR [ebp-0x4]
  423ee8:	mov    eax,DWORD PTR [eax+0x198]
  423eee:	mov    WORD PTR [ebp-0x6e],dx
  423ef2:	mov    edx,0x4f82
  423ef7:	mov    WORD PTR [ebp-0x6c],dx
  423efb:	mov    DWORD PTR [ebp-0x6a],0x4e7f4e25
  423f02:	mov    DWORD PTR [ebp-0x5a],0x4e24f116
  423f09:	mov    DWORD PTR [ebp-0xe0],0x1
  423f13:	mov    DWORD PTR [ebp-0xdc],0x255
  423f1d:	push   DWORD PTR [eax]
  423f1f:	mov    eax,DWORD PTR [ebp+0x10]
  423f22:	call   eax
  423f24:	mov    DWORD PTR [ebp-0x8],eax
  423f27:	mov    eax,DWORD PTR [ebp-0x8]
  423f2a:	test   eax,eax
  423f2c:	je     0x423f3f
  423f2e:	xor    DWORD PTR ds:0x76586876,0x87687666
  423f38:	jmp    0x423f3f
  423f3a:	mov    edi,0x75108a4
  423f3f:	mov    eax,DWORD PTR [ebp-0x4]
  423f42:	mov    ecx,DWORD PTR [eax+0x18c]
  423f48:	xor    eax,eax
  423f4a:	cmp    DWORD PTR [ecx],eax
  423f4c:	jne    0x4241bb
  423f52:	mov    ecx,DWORD PTR [ebp-0x4]
  423f55:	mov    ecx,DWORD PTR [ecx+0x17c]
  423f5b:	mov    DWORD PTR [ecx],eax
  423f5d:	mov    ecx,DWORD PTR [ebp-0x4]
  423f60:	mov    ecx,DWORD PTR [ecx+0x180]
  423f66:	mov    DWORD PTR [ecx],eax
  423f68:	mov    eax,0x4e69
  423f6d:	mov    WORD PTR [ebp-0x9c],ax
  423f74:	mov    eax,esi
  423f76:	mov    WORD PTR [ebp-0x9a],ax
  423f7d:	mov    eax,0x4e79
  423f82:	mov    WORD PTR [ebp-0x98],ax
  423f89:	add    eax,0xffffffc0
  423f8c:	mov    WORD PTR [ebp-0x96],ax
  423f93:	mov    eax,0x4f8e
  423f98:	mov    WORD PTR [ebp-0x94],ax
  423f9f:	mov    eax,0x4e3a
  423fa4:	mov    WORD PTR [ebp-0x92],ax
  423fab:	add    eax,0x45
  423fae:	mov    WORD PTR [ebp-0x90],ax
  423fb5:	mov    eax,0x4e24
  423fba:	mov    WORD PTR [ebp-0x8e],ax
  423fc1:	mov    eax,esi
  423fc3:	mov    WORD PTR [ebp-0x8c],ax
  423fca:	mov    eax,0x4e25
  423fcf:	mov    WORD PTR [ebp-0x8a],ax
  423fd6:	mov    eax,0x99f9
  423fdb:	mov    WORD PTR [ebp-0x88],ax
  423fe2:	mov    eax,0x8d6a
  423fe7:	mov    WORD PTR [ebp-0x86],ax
  423fee:	mov    eax,0xd66f
  423ff3:	mov    WORD PTR [ebp-0x84],ax
  423ffa:	mov    eax,0xd78b
  423fff:	mov    WORD PTR [ebp-0x82],ax
  424006:	mov    eax,0x27b4
  42400b:	mov    WORD PTR [ebp-0x80],ax
  42400f:	mov    eax,0x47b4
  424014:	mov    WORD PTR [ebp-0x7e],ax
  424018:	mov    eax,0x4e3b
  42401d:	push   0x8
  42401f:	mov    WORD PTR [ebp-0x7c],ax
  424023:	mov    DWORD PTR [ebp-0x10],0x316120f
  42402a:	mov    DWORD PTR [ebp-0xc],0x7a150a1d
  424031:	lea    eax,[ebp-0x10]
  424034:	pop    ecx
  424035:	mov    dl,BYTE PTR [eax]
  424037:	xor    dl,0x79
  42403a:	sub    dl,0x3
  42403d:	mov    BYTE PTR [eax],dl
  42403f:	inc    eax
  424040:	dec    ecx
  424041:	jne    0x424035
  424043:	lea    eax,[ebp-0x10]
  424046:	mov    DWORD PTR [ebp-0xdc],eax
  42404c:	lea    eax,[ebp-0xe0]
  424052:	push   eax
  424053:	mov    eax,DWORD PTR [ebp+0xc]
  424056:	xor    eax,edi
  424058:	add    eax,ebx
  42405a:	push   eax
  42405b:	mov    eax,DWORD PTR [ebp-0x4]
  42405e:	add    eax,0x66
  424061:	push   eax
  424062:	mov    eax,DWORD PTR [ebp-0x4]
  424065:	mov    eax,DWORD PTR [eax+0x198]
  42406b:	mov    DWORD PTR [ebp-0xe0],0x1
  424075:	push   DWORD PTR [eax]
  424077:	mov    eax,DWORD PTR [ebp+0x10]
  42407a:	call   eax
  42407c:	mov    ecx,DWORD PTR [ebp+0x8]
  42407f:	xor    ecx,edi
  424081:	add    ecx,ebx
  424083:	mov    DWORD PTR [ebp-0x8],eax
  424086:	cmp    eax,ecx
  424088:	jne    0x4240a3
  42408a:	mov    eax,ds:0x33730bcf
  42408f:	or     eax,0x22150bce
  424094:	mov    ds:0x33730bcf,eax
  424099:	add    eax,0x3372e92e
  42409e:	mov    ds:0x33730bcf,eax
  4240a3:	mov    ecx,0x4f96
  4240a8:	mov    eax,ecx
  4240aa:	mov    WORD PTR [ebp-0x40],ax
  4240ae:	mov    eax,0x4e63
  4240b3:	mov    edx,eax
  4240b5:	mov    WORD PTR [ebp-0x3e],dx
  4240b9:	lea    edx,[ecx+0x5]
  4240bc:	mov    WORD PTR [ebp-0x3c],dx
  4240c0:	add    edx,0xffffffe8
  4240c3:	mov    WORD PTR [ebp-0x3a],dx
  4240c7:	lea    edx,[ecx-0x9]
  4240ca:	mov    WORD PTR [ebp-0x38],dx
  4240ce:	add    edx,0xfffffffb
  4240d1:	mov    WORD PTR [ebp-0x36],dx
  4240d5:	lea    edx,[ecx+0x21]
  4240d8:	mov    WORD PTR [ebp-0x34],dx
  4240dc:	mov    WORD PTR [ebp-0x32],cx
  4240e0:	mov    ecx,esi
  4240e2:	mov    WORD PTR [ebp-0x30],cx
  4240e6:	lea    ecx,[edx-0x1]
  4240e9:	mov    edx,ecx
  4240eb:	mov    WORD PTR [ebp-0x54],dx
  4240ef:	mov    edx,eax
  4240f1:	mov    WORD PTR [ebp-0x52],dx
  4240f5:	add    edx,0x18
  4240f8:	mov    WORD PTR [ebp-0x50],dx
  4240fc:	mov    WORD PTR [ebp-0x4e],ax
  424100:	add    eax,0xa
  424103:	mov    WORD PTR [ebp-0x4c],ax
  424107:	mov    eax,0x4e68
  42410c:	mov    WORD PTR [ebp-0x4a],ax
  424110:	lea    eax,[ecx-0x1f]
  424113:	mov    WORD PTR [ebp-0x48],ax
  424117:	mov    WORD PTR [ebp-0x46],cx
  42411b:	mov    WORD PTR [ebp-0x44],si
  42411f:	mov    eax,DWORD PTR [ebp+0x8]
  424122:	movzx  ecx,WORD PTR [ebp-0x54]
  424126:	xor    eax,edi
  424128:	add    eax,ebx
  42412a:	xor    eax,ecx
  42412c:	mov    WORD PTR [ebp-0x54],ax
  424130:	mov    eax,DWORD PTR [ebp+0x8]
  424133:	movzx  ecx,WORD PTR [ebp-0x40]
  424137:	xor    eax,edi
  424139:	add    eax,ebx
  42413b:	xor    eax,ecx
  42413d:	mov    WORD PTR [ebp-0x40],ax
  424141:	xor    eax,eax
  424143:	mov    WORD PTR [ebp-0xf4],ax
  42414a:	mov    WORD PTR [ebp-0x108],ax
  424151:	mov    edi,DWORD PTR [ebp+0x24]
  424154:	lea    eax,[ebp-0xf4]
  42415a:	lea    edx,[ebp-0x54]
  42415d:	mov    DWORD PTR [ebp-0xe0],0x2
  424167:	mov    DWORD PTR [ebp-0xdc],eax
  42416d:	call   0x426b83
  424172:	mov    DWORD PTR [ebp-0xd8],eax
  424178:	lea    eax,[ebp-0xe0]
  42417e:	push   eax
  42417f:	mov    eax,DWORD PTR [ebp+0xc]
  424182:	xor    eax,0x75108a4
  424187:	add    eax,ebx
  424189:	push   eax
  42418a:	lea    eax,[ebp-0x9c]
  424190:	push   eax
  424191:	push   DWORD PTR [ebp-0x8]
  424194:	mov    eax,DWORD PTR [ebp+0x10]
  424197:	call   eax
  424199:	mov    edi,DWORD PTR [ebp+0x24]
  42419c:	lea    eax,[ebp-0x108]
  4241a2:	lea    edx,[ebp-0x40]
  4241a5:	mov    DWORD PTR [ebp-0xdc],eax
  4241ab:	call   0x426b83
  4241b0:	mov    DWORD PTR [ebp-0xd8],eax
  4241b6:	mov    edi,0x75108a4
  4241bb:	mov    eax,DWORD PTR [ebp+0x14]
  4241be:	push   DWORD PTR [ebp-0x4]
  4241c1:	push   DWORD PTR [ebp+0x20]
  4241c4:	push   DWORD PTR [ebp+0x1c]
  4241c7:	push   DWORD PTR [ebp+0x18]
  4241ca:	push   DWORD PTR [ebp+0x10]
  4241cd:	push   DWORD PTR [ebp+0x8]
  4241d0:	push   DWORD PTR [ebp+0xc]
  4241d3:	call   0x425420
  4241d8:	test   eax,eax
  4241da:	je     0x42421e
  4241dc:	add    DWORD PTR [ebp-0x4],eax
  4241df:	push   DWORD PTR [ebp-0x4]
  4241e2:	lea    esi,[ebp+0x4]
  4241e5:	call   0x42460e
  4241ea:	mov    eax,DWORD PTR [ebp-0x4]
  4241ed:	mov    eax,DWORD PTR [eax+0x1c8]
  4241f3:	mov    eax,DWORD PTR [eax]
  4241f5:	xor    eax,edi
  4241f7:	add    eax,ebx
  4241f9:	mov    eax,DWORD PTR [ebp-0x4]
  4241fc:	jne    0x424214
  4241fe:	mov    ecx,DWORD PTR [ebp-0x4]
  424201:	mov    ecx,DWORD PTR [ecx+0x1cc]
  424207:	push   DWORD PTR [ecx]
  424209:	mov    eax,DWORD PTR [eax+0x1d8]
  42420f:	call   DWORD PTR [eax+0x28]
  424212:	jmp    0x42421e
  424214:	mov    eax,DWORD PTR [eax+0x17c]
  42421a:	mov    eax,DWORD PTR [eax]
  42421c:	add    DWORD PTR [esi],eax
  42421e:	pop    edi
  42421f:	pop    esi
  424220:	pop    ebx
  424221:	leave  
  424222:	ret    0x20
  424225:	push   edi
  424226:	push   esi
  424227:	push   ebx
  424228:	push   ebp
  424229:	mov    ebp,esp
  42422b:	mov    eax,DWORD PTR [ebp+0x24]
  42422e:	add    DWORD PTR [ebp+0x28],eax
  424231:	push   eax
  424232:	cld    
  424233:	mov    esi,DWORD PTR [ebp+0x18]
  424236:	add    DWORD PTR [ebp+0x1c],esi
  424239:	push   esi
  42423a:	mov    esi,DWORD PTR [ebp+0x14]
  42423d:	lods   eax,DWORD PTR ds:[esi]
  42423e:	xchg   edx,eax
  42423f:	push   edx
  424240:	mov    cl,BYTE PTR [esi-0x2]
  424243:	or     eax,0xffffffff
  424246:	shl    eax,cl
  424248:	not    eax
  42424a:	push   eax
  42424b:	mov    cl,dh
  42424d:	or     eax,0xffffffff
  424250:	shl    eax,cl
  424252:	not    eax
  424254:	push   eax
  424255:	add    cl,dl
  424257:	mov    edi,esi
  424259:	sub    esp,0xc
  42425c:	sub    eax,eax
  42425e:	inc    eax
  42425f:	push   eax
  424260:	push   eax
  424261:	push   eax
  424262:	push   eax
  424263:	push   eax
  424264:	push   edi
  424265:	sub    esi,esi
  424267:	push   esi
  424268:	or     ebx,0xffffffff
  42426b:	mov    eax,0x300
  424270:	shl    eax,cl
  424272:	lea    ecx,[eax+0x736]
  424278:	mov    eax,0x4000400
  42427d:	shr    ecx,1
  42427f:	rep stos DWORD PTR es:[edi],eax
  424281:	push   0x5
  424283:	pop    ecx
  424284:	call   0x42456f
  424289:	loop   0x424284
  42428b:	lea    esi,[esi]
  42428d:	lea    edi,[edi]
  42428f:	mov    edi,DWORD PTR [ebp-0x4]
  424292:	mov    eax,DWORD PTR [ebp-0x10]
  424295:	sub    edi,DWORD PTR [ebp+0x24]
  424298:	and    eax,edi
  42429a:	mov    DWORD PTR [ebp-0x18],eax
  42429d:	mov    al,0x0
  42429f:	call   0x424587
  4242a4:	jne    0x42433f
  4242aa:	mov    cl,BYTE PTR [ebp-0xc]
  4242ad:	and    edi,DWORD PTR [ebp-0x14]
  4242b0:	shl    edi,cl
  4242b2:	sub    cl,0x8
  4242b5:	neg    cl
  4242b7:	shr    esi,cl
  4242b9:	pop    eax
  4242ba:	add    edi,esi
  4242bc:	pop    esi
  4242bd:	lea    edi,[edi+edi*2]
  4242c0:	shl    edi,0x8
  4242c3:	cmp    al,0x7
  4242c5:	pop    edx
  4242c6:	lea    ecx,[esi+edi*2+0xe6c]
  4242cd:	push   ecx
  4242ce:	push   esi
  4242cf:	mov    esi,0x100
  4242d4:	push   eax
  4242d5:	mov    al,0x1
  4242d7:	jb     0x42430d
  4242d9:	mov    edi,DWORD PTR [ebp-0x4]
  4242dc:	sub    edi,DWORD PTR [ebp-0x24]
  4242df:	movzx  edi,BYTE PTR [edi]
  4242e2:	mov    ebp,DWORD PTR [ebp-0x34]
  4242e5:	shl    edi,1
  4242e7:	mov    ecx,esi
  4242e9:	and    esi,edi
  4242eb:	add    ecx,esi
  4242ed:	lea    ebp,[ebp+ecx*2+0x0]
  4242f1:	call   0x4245a6
  4242f6:	mov    ecx,eax
  4242f8:	shr    esi,0x8
  4242fb:	and    ecx,0x1
  4242fe:	cmp    esi,ecx
  424300:	mov    esi,0x100
  424305:	jne    0x424315
  424307:	cmp    eax,esi
  424309:	jb     0x4242e2
  42430b:	jmp    0x424321
  42430d:	mov    ebp,DWORD PTR [ebp-0x34]
  424310:	call   0x4245a6
  424315:	inc    eax
  424316:	inc    esi
  424317:	sub    eax,0x1
  42431a:	sub    esi,0x1
  42431d:	cmp    eax,esi
  42431f:	jb     0x42430d
  424321:	pop    edx
  424322:	inc    edx
  424323:	cmp    edx,0x5
  424326:	dec    edx
  424327:	mov    ecx,edx
  424329:	jb     0x42433a
  42432b:	inc    edx
  42432c:	cmp    edx,0xb
  42432f:	dec    edx
  424330:	mov    cl,0x4
  424332:	dec    cl
  424334:	jb     0x42433a
  424336:	mov    cl,0x7
  424338:	dec    cl
  42433a:	sub    edx,ecx
  42433c:	push   edx
  42433d:	jmp    0x42438e
  42433f:	mov    al,0xc1
  424341:	dec    al
  424343:	call   0x424597
  424348:	jne    0x42435e
  42434a:	pop    eax
  42434b:	pop    edi
  42434c:	pop    edx
  42434d:	pop    ecx
  42434e:	pop    edx
  42434f:	pop    ecx
  424350:	push   DWORD PTR [esp]
  424353:	push   ecx
  424354:	push   edx
  424355:	mov    edx,0x664
  42435a:	mov    cl,0x0
  42435c:	jmp    0x4243d1
  42435e:	mov    al,0xcd
  424360:	dec    al
  424362:	call   0x424597
  424367:	jne    0x424397
  424369:	mov    al,0xf1
  42436b:	dec    al
  42436d:	call   0x424587
  424372:	jne    0x4243c7
  424374:	pop    eax
  424375:	cmp    al,0x7
  424377:	mov    al,0x9
  424379:	jb     0x42437d
  42437b:	mov    al,0xb
  42437d:	push   eax
  42437e:	mov    esi,DWORD PTR [ebp-0x4]
  424381:	sub    esi,DWORD PTR [ebp-0x24]
  424384:	cmp    esi,DWORD PTR [ebp+0x24]
  424387:	jb     0x42455e
  42438d:	lods   al,BYTE PTR ds:[esi]
  42438e:	mov    edi,DWORD PTR [ebp-0x4]
  424391:	stos   BYTE PTR es:[edi],al
  424392:	jmp    0x424525
  424397:	mov    al,0xd8
  424399:	call   0x424597
  42439e:	mov    esi,DWORD PTR [ebp-0x28]
  4243a1:	je     0x4243be
  4243a3:	mov    al,0xe4
  4243a5:	call   0x424597
  4243aa:	mov    esi,DWORD PTR [ebp-0x2c]
  4243ad:	je     0x4243b8
  4243af:	mov    esi,DWORD PTR [ebp-0x30]
  4243b2:	mov    ecx,DWORD PTR [ebp-0x2c]
  4243b5:	mov    DWORD PTR [ebp-0x30],ecx
  4243b8:	mov    ecx,DWORD PTR [ebp-0x28]
  4243bb:	mov    DWORD PTR [ebp-0x2c],ecx
  4243be:	mov    ecx,DWORD PTR [ebp-0x24]
  4243c1:	mov    DWORD PTR [ebp-0x28],ecx
  4243c4:	mov    DWORD PTR [ebp-0x24],esi
  4243c7:	pop    eax
  4243c8:	pop    edi
  4243c9:	pop    ecx
  4243ca:	mov    edx,0xa68
  4243cf:	mov    cl,0x8
  4243d1:	add    edx,edi
  4243d3:	push   edx
  4243d4:	push   edi
  4243d5:	cmp    al,0x7
  4243d7:	mov    al,cl
  4243d9:	jb     0x4243dd
  4243db:	add    al,0x3
  4243dd:	push   eax
  4243de:	mov    ebp,DWORD PTR [ebp-0x34]
  4243e1:	call   0x4245a4
  4243e6:	jne    0x4243fc
  4243e8:	mov    eax,DWORD PTR [ebp-0x18]
  4243eb:	mov    edi,DWORD PTR [ebp-0x34]
  4243ee:	shl    eax,0x3
  4243f1:	sub    ecx,ecx
  4243f3:	push   0x8
  4243f5:	pop    esi
  4243f6:	lea    edi,[edi+eax*2+0x4]
  4243fa:	jmp    0x424431
  4243fc:	mov    ebp,DWORD PTR [ebp-0x34]
  4243ff:	add    ebp,0x2
  424402:	call   0x4245a4
  424407:	jne    0x424421
  424409:	mov    eax,DWORD PTR [ebp-0x18]
  42440c:	mov    edi,DWORD PTR [ebp-0x34]
  42440f:	shl    eax,0x3
  424412:	push   0x8
  424414:	pop    ecx
  424415:	push   0x8
  424417:	pop    esi
  424418:	lea    edi,[edi+eax*2+0x104]
  42441f:	jmp    0x424431
  424421:	mov    edi,0x204
  424426:	add    edi,DWORD PTR [ebp-0x34]
  424429:	push   0x10
  42442b:	pop    ecx
  42442c:	mov    esi,0x100
  424431:	mov    DWORD PTR [ebp-0x1c],ecx
  424434:	sub    eax,eax
  424436:	inc    eax
  424437:	mov    ebp,edi
  424439:	call   0x4245a6
  42443e:	mov    ecx,eax
  424440:	sub    ecx,esi
  424442:	jb     0x424437
  424444:	add    DWORD PTR [ebp-0x1c],ecx
  424447:	cmp    DWORD PTR [ebp-0x3c],0x4
  42444b:	jae    0x424501
  424451:	add    DWORD PTR [ebp-0x3c],0x7
  424455:	mov    ecx,DWORD PTR [ebp-0x1c]
  424458:	cmp    ecx,0x4
  42445b:	jb     0x424460
  42445d:	push   0x3
  42445f:	pop    ecx
  424460:	mov    edi,DWORD PTR [ebp-0x38]
  424463:	shl    ecx,0x6
  424466:	sub    eax,eax
  424468:	inc    eax
  424469:	push   0x40
  42446b:	pop    esi
  42446c:	lea    edi,[edi+ecx*2+0x360]
  424473:	mov    ebp,edi
  424475:	call   0x4245a6
  42447a:	mov    ecx,eax
  42447c:	sub    ecx,esi
  42447e:	jb     0x424473
  424480:	mov    DWORD PTR [ebp-0x18],ecx
  424483:	mov    DWORD PTR [ebp-0x24],ecx
  424486:	cmp    ecx,0x4
  424489:	jb     0x4244fe
  42448b:	mov    esi,ecx
  42448d:	and    DWORD PTR [ebp-0x24],0x1
  424491:	shr    esi,1
  424493:	or     DWORD PTR [ebp-0x24],0x2
  424497:	dec    esi
  424498:	cmp    ecx,0xe
  42449b:	jae    0x4244b6
  42449d:	mov    eax,0x2af
  4244a2:	sub    eax,ecx
  4244a4:	mov    ecx,esi
  4244a6:	shl    BYTE PTR [ebp-0x24],cl
  4244a9:	add    eax,DWORD PTR [ebp-0x24]
  4244ac:	shl    eax,1
  4244ae:	add    eax,DWORD PTR [ebp-0x38]
  4244b1:	mov    DWORD PTR [ebp-0x34],eax
  4244b4:	jmp    0x4244e3
  4244b6:	sub    esi,0x4
  4244b9:	call   0x424563
  4244be:	shr    ebx,1
  4244c0:	shl    DWORD PTR [ebp-0x24],1
  4244c3:	cmp    DWORD PTR [ebp-0x20],ebx
  4244c6:	jb     0x4244ce
  4244c8:	inc    DWORD PTR [ebp-0x24]
  4244cb:	sub    DWORD PTR [ebp-0x20],ebx
  4244ce:	dec    esi
  4244cf:	jne    0x4244b9
  4244d1:	mov    eax,0x644
  4244d6:	add    eax,DWORD PTR [ebp-0x38]
  4244d9:	mov    DWORD PTR [ebp-0x34],eax
  4244dc:	shl    DWORD PTR [ebp-0x24],0x4
  4244e0:	push   0x4
  4244e2:	pop    esi
  4244e3:	sub    edi,edi
  4244e5:	inc    edi
  4244e6:	mov    eax,edi
  4244e8:	mov    ebp,DWORD PTR [ebp-0x34]
  4244eb:	call   0x4245a6
  4244f0:	test   al,0x1
  4244f2:	je     0x4244f7
  4244f4:	or     DWORD PTR [ebp-0x24],edi
  4244f7:	shl    edi,1
  4244f9:	dec    esi
  4244fa:	jne    0x4244e8
  4244fc:	jmp    0x4244fe
  4244fe:	inc    DWORD PTR [ebp-0x24]
  424501:	mov    ecx,DWORD PTR [ebp-0x1c]
  424504:	add    ecx,0x2
  424507:	mov    edi,DWORD PTR [ebp-0x4]
  42450a:	mov    eax,edi
  42450c:	sub    eax,DWORD PTR [ebp+0x24]
  42450f:	cmp    DWORD PTR [ebp-0x24],eax
  424512:	ja     0x42455e
  424514:	mov    esi,edi
  424516:	sub    esi,DWORD PTR [ebp-0x24]
  424519:	mov    edx,DWORD PTR [ebp+0x28]
  42451c:	lods   al,BYTE PTR ds:[esi]
  42451d:	stos   BYTE PTR es:[edi],al
  42451e:	cmp    edi,edx
  424520:	jae    0x424525
  424522:	dec    ecx
  424523:	jne    0x42451c
  424525:	mov    DWORD PTR [ebp-0x4],edi
  424528:	movzx  esi,al
  42452b:	cmp    edi,DWORD PTR [ebp+0x28]
  42452e:	jb     0x42428f
  424534:	call   0x424563
  424539:	sub    eax,eax
  42453b:	lea    ebp,[esp+0x3c]
  42453f:	mov    edx,DWORD PTR [ebp+0x20]
  424542:	mov    esi,DWORD PTR [ebp-0x8]
  424545:	sub    esi,DWORD PTR [ebp+0x18]
  424548:	mov    DWORD PTR [edx],esi
  42454a:	mov    edx,DWORD PTR [ebp+0x2c]
  42454d:	mov    edi,DWORD PTR [ebp-0x4]
  424550:	sub    edi,DWORD PTR [ebp+0x24]
  424553:	mov    DWORD PTR [edx],edi
  424555:	leave  
  424556:	pop    ebx
  424557:	pop    esi
  424558:	pop    edi
  424559:	ret    0x1c
  42455c:	pop    esi
  42455d:	pop    eax
  42455e:	sub    eax,eax
  424560:	inc    eax
  424561:	jmp    0x42453b
  424563:	cmp    ebx,0x1000000
  424569:	jb     0x42456c
  42456b:	ret    
  42456c:	shl    ebx,0x8
  42456f:	push   esi
  424570:	mov    esi,DWORD PTR [ebp-0x8]
  424573:	cmp    esi,DWORD PTR [ebp+0x1c]
  424576:	jae    0x42455c
  424578:	mov    eax,DWORD PTR [ebp-0x20]
  42457b:	shl    eax,0x8
  42457e:	lods   al,BYTE PTR ds:[esi]
  42457f:	mov    DWORD PTR [ebp-0x20],eax
  424582:	mov    DWORD PTR [ebp-0x8],esi
  424585:	sbb    BYTE PTR [edi+0x6bbe29f7],bh
  42458b:	sar    BYTE PTR [edx+0x7f7e9dbd],0x31
  424592:	xchg   edx,eax
  424593:	jg     0x424552
  424595:	xchg   edi,eax
  424596:	jo     0x424603
  424598:	sar    BYTE PTR [edx-0x841ce81],0x9
  42459f:	mov    dl,0xe9
  4245a1:	push   ss
  4245a2:	xor    DWORD PTR [edx+0x57],edi
  4245a5:	mov    edx,0x7a3116e9
  4245aa:	std    
  4245ab:	xchg   DWORD PTR [edx+0x7a],edi
  4245ae:	jp     0x42462d
  4245b0:	pcmpgtd mm6,mm7
  4245b3:	ss pop esi
  4245b5:	inc    edx
  4245b6:	mov    ebp,0x725a5e1e
  4245bb:	inc    edi
  4245bc:	ss pop esi
  4245be:	es (bad) 
  4245c1:	hlt    
  4245c2:	ins    DWORD PTR es:[edi],dx
  4245c3:	jnp    0x424603
  4245c5:	pop    esi
  4245c6:	inc    edx
  4245c7:	mov    ebp,0x2ef2729f
  4245cc:	pop    esi
  4245cd:	pop    edx
  4245ce:	div    DWORD PTR [edi+0x7a21c36b]
  4245d4:	mov    ebp,0xcb6b7795
  4245d9:	mov    ah,0x45
  4245db:	ss pop esi
  4245dd:	pop    edx
  4245de:	packsswb mm6,mm7
  4245e1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4245e2:	lds    edi,FWORD PTR [edx+0x72]
  4245e5:	jp     0x424661
  4245e7:	push   edi
  4245e8:	mov    ah,0xbd
  4245ea:	xchg   ebp,eax
  4245eb:	jno    0x4245fd
  4245ed:	jge    0x424618
  4245ef:	jp     0x424670
  4245f1:	mov    edx,0x3a5e16e9
  4245f6:	mov    edi,0x557194bd
  4245fb:	ss pop esi
  4245fd:	pop    edx
  4245fe:	push   edi
  4245ff:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424600:	adc    BYTE PTR [ebp+0x21],dl
  424603:	jp     0x424684
  424605:	mov    edx,0xe97dbaff
  42460a:	push   ss
  42460b:	pop    esi
  42460c:	cmp    bh,BYTE PTR [edi-0x26908df]
  424612:	xchg   esi,eax
  424613:	push   esi
  424614:	jge    0x424690
  424616:	jp     0x424647
  424618:	and    BYTE PTR [ebx],ah
  42461a:	mov    bl,0x31
  42461c:	mov    cl,dl
  42461e:	icebp  
  42461f:	out    0x82,al
  424621:	mov    bl,0x31
  424623:	xchg   edx,eax
  424624:	int    0xf1
  424626:	out    0x82,al
  424628:	div    DWORD PTR [ecx]
  42462a:	jb     0x424621
  42462c:	xor    DWORD PTR [edx-0x9],esi
  42462f:	sub    DWORD PTR [edx+0x2d72dec7],ecx
  424635:	jae    0x424686
  424637:	mov    bh,0xc2
  424639:	xchg   esi,eax
  42463a:	or     al,0x4c
  42463c:	jp     0x4246bd
  42463e:	mov    dl,0xf5
  424640:	sub    DWORD PTR [esi+0x4f8a29f7],ebp
  424646:	mov    bh,0x7f
  424648:	mov    dl,0xf5
  42464a:	sub    DWORD PTR [esi+0x4f8a29f7],edi
  424650:	mov    bh,0x7f
  424652:	mov    dl,0xf5
  424654:	sub    DWORD PTR [edx+0x4f8a29f7],edi
  42465a:	mov    bh,0x7f
  42465c:	mov    dl,0xf5
  42465e:	jmp    0x7bbdc1b5
  424663:	mov    bl,0x31
  424665:	retf   0x71ca
  424668:	fild   DWORD PTR [edx-0x3545ce4d]
  42466e:	shl    esi,0x82
  424671:	mov    bl,0x31
  424673:	(bad)  
  424674:	(bad)  
  424675:	icebp  
  424676:	out    0x82,al
  424678:	adc    al,0x51
  42467a:	and    eax,0xf5b229f5
  42467f:	sub    DWORD PTR [edx-0xadaeeec],esi
  424685:	sub    DWORD PTR [edx-0x4c4dd60b],esi
  42468b:	xor    DWORD PTR [edx+0x7a7a7a29],esi
  424691:	mov    bl,0x31
  424693:	mov    dl,0x3f
  424695:	jp     0x424711
  424697:	jp     0x424690
  424699:	sub    DWORD PTR [edx-0x4d8048b1],ecx
  42469f:	cmc    
  4246a0:	sub    DWORD PTR [edx+0x4f8a29f7],esi
  4246a6:	mov    bh,0x7f
  4246a8:	mov    dl,0xf5
  4246aa:	sub    DWORD PTR [edx+0x22a231b3],esi
  4246b0:	jl     0x42472c
  4246b2:	jp     0x424667
  4246b4:	xor    DWORD PTR [edx+0x7a7a7a40],ebx
  4246ba:	mov    bl,0x31
  4246bc:	xchg   esi,eax
  4246bd:	add    al,0x7a
  4246bf:	jp     0x42473b
  4246c1:	jmp    0x7bbad57f
  4246c6:	jnp    0x4246b1
  4246c8:	shr    DWORD PTR [esi-0x6d848488],0xb9
  4246cf:	jbe    0x42474b
  4246d1:	jp     0x42474e
  4246d3:	sub    DWORD PTR [esi+0x297b9401],edx
  4246d9:	call   0x1a2:0x297b9801
  4246e0:	lods   al,BYTE PTR ds:[esi]
  4246e1:	mov    bl,0x31
  4246e3:	mov    ds:0x7a7a3a68,al
  4246e8:	div    DWORD PTR [ecx]
  4246ea:	mov    cl,BYTE PTR [edi-0x41]
  4246ed:	mov    eax,0x7a4c0c96
  4246f2:	jg     0x4246a4
  4246f4:	cmc    
  4246f5:	xor    DWORD PTR [esi-0x75ce09],ebx
  4246fb:	rcl    DWORD PTR [esi],1
  4246fd:	jnp    0x42477a
  4246ff:	jnp    0x42477b
  424701:	dec    edi
  424702:	mov    edi,0x31f5b07f
  424707:	mov    dh,0x1e
  424709:	frstor [edx+0x7a]
  42470c:	jp     0x424788
  42470e:	cmc    
  42470f:	icebp  
  424710:	push   ss
  424711:	jnp    0x42478e
  424713:	jnp    0x42470c
  424715:	cmp    cl,BYTE PTR [edx-0xb]
  424718:	icebp  
  424719:	dec    esi
  42471a:	jnp    0x424797
  42471c:	jnp    0x424715
  42471e:	cmp    dh,BYTE PTR [esi-0xb]
  424721:	icebp  
  424722:	cmp    bh,BYTE PTR [ebx+0x7b]
  424725:	jnp    0x42471e
  424727:	xor    DWORD PTR [edx-0x17],esi
  42472a:	jmp    0x7bbdc245
  42472f:	cmc    
  424730:	repnz fidivr DWORD PTR [ebp+0x7a]
  424734:	jp     0x42472d
  424736:	xor    DWORD PTR [edx-0x17],esi
  424739:	jmp    0x7bbdc28c
  42473e:	cmc    
  42473f:	repnz fidivr WORD PTR [ebp+0x7a]
  424743:	jp     0x42473c
  424745:	xor    DWORD PTR [edx+0x7b],esi
  424748:	add    DWORD PTR [edx-0x17],esi
  42474b:	jmp    0x7bbdc28a
  424750:	cmc    
  424751:	repnz sar BYTE PTR [ebp+0x7a],cl
  424755:	jp     0x4246e9
  424757:	test   DWORD PTR [edi+0x7a],ebx
  42475a:	jp     0x424753
  42475c:	sub    DWORD PTR [edx-0x578048b1],ecx
  424762:	inc    edi
  424763:	mov    dl,0x6b
  424765:	(bad)  
  424766:	stc    
  424767:	jg     0x4247e3
  424769:	jp     0x424762
  42476b:	xor    DWORD PTR [edx-0x9],esi
  42476e:	cli    
  42476f:	out    dx,al
  424770:	jge    0x4247ec
  424772:	jp     0x42476b
  424774:	jb     0x42476d
  424776:	xor    DWORD PTR [edx-0x9],esi
  424779:	cli    
  42477a:	out    dx,al
  42477b:	jge    0x4247f7
  42477d:	jp     0x424776
  42477f:	jp     0x424800
  424781:	cmp    eax,0x829f746
  424786:	mov    ecx,DWORD PTR [ecx+0x1d8]
  42478c:	lea    edx,[ebp-0xec]
  424792:	push   edx
  424793:	mov    edx,DWORD PTR [ebp+0x8]
  424796:	mov    edx,DWORD PTR [edx+0x18c]
  42479c:	mov    edx,DWORD PTR [edx]
  42479e:	add    edx,DWORD PTR [eax+0x88]
  4247a4:	push   0x4
  4247a6:	push   DWORD PTR [eax+0x8c]
  4247ac:	push   edx
  4247ad:	call   DWORD PTR [ecx+0x1c]
  4247b0:	push   DWORD PTR [ebp+0x8]
  4247b3:	xor    eax,eax
  4247b5:	mov    DWORD PTR [ebp-0xa8],0x123f0f35
  4247bf:	mov    DWORD PTR [ebp-0xa4],0xb360c1d
  4247c9:	mov    DWORD PTR [ebp-0xa0],0x3d0c1103
  4247d3:	mov    BYTE PTR [ebp-0x9c],0x7a
  4247da:	lea    edi,[ebp-0x9b]
  4247e0:	stos   DWORD PTR es:[edi],eax
  4247e1:	stos   WORD PTR es:[edi],ax
  4247e3:	stos   BYTE PTR es:[edi],al
  4247e4:	xor    eax,eax
  4247e6:	mov    DWORD PTR [ebp-0xbc],0x123f0f35
  4247f0:	mov    DWORD PTR [ebp-0xb8],0xb360c1d
  4247fa:	mov    DWORD PTR [ebp-0xb4],0x230c1103
  424804:	mov    BYTE PTR [ebp-0xb0],0x7a
  42480b:	lea    edi,[ebp-0xaf]
  424811:	stos   DWORD PTR es:[edi],eax
  424812:	stos   WORD PTR es:[edi],ax
  424814:	stos   BYTE PTR es:[edi],al
  424815:	mov    edi,DWORD PTR [ebp+0x8]
  424818:	mov    eax,DWORD PTR [ebp+0x8]
  42481b:	mov    edx,DWORD PTR [eax+0x1b8]
  424821:	mov    DWORD PTR [ebp-0x68],0xc0e0f16
  424828:	mov    DWORD PTR [ebp-0x64],0x150a091f
  42482f:	mov    WORD PTR [ebp-0x60],0x7a3d
  424835:	mov    DWORD PTR [ebp-0x90],0x123f0f35
  42483f:	mov    DWORD PTR [ebp-0x8c],0x163d0c1d
  424849:	mov    DWORD PTR [ebp-0x88],0x281d120a
  424853:	mov    DWORD PTR [ebp-0x84],0xc110901
  42485d:	mov    DWORD PTR [ebp-0x80],0x7a3d1f15
  424864:	mov    DWORD PTR [ebp-0x7c],0x123f0f35
  42486b:	mov    DWORD PTR [ebp-0x78],0x163d0c1d
  424872:	mov    DWORD PTR [ebp-0x74],0x281d120a
  424879:	mov    DWORD PTR [ebp-0x70],0xc110901
  424880:	mov    DWORD PTR [ebp-0x6c],0x7a231f15
  424887:	call   0x426b83
  42488c:	push   eax
  42488d:	mov    eax,DWORD PTR [ebp+0x8]
  424890:	mov    eax,DWORD PTR [eax+0x1a8]
  424896:	push   DWORD PTR [eax]
  424898:	call   0x426824
  42489d:	test   eax,eax
  42489f:	jne    0x4248f1
  4248a1:	mov    eax,DWORD PTR [ebp+0x8]
  4248a4:	mov    eax,DWORD PTR [eax+0x1d8]
  4248aa:	mov    edi,DWORD PTR [ebp+0x8]
  4248ad:	add    eax,0x4
  4248b0:	mov    DWORD PTR [ebp-0x24],eax
  4248b3:	mov    eax,DWORD PTR [ebp+0x8]
  4248b6:	mov    edx,DWORD PTR [eax+0x1b8]
  4248bc:	call   0x426b83
  4248c1:	push   eax
  4248c2:	mov    eax,DWORD PTR [ebp-0x24]
  4248c5:	call   DWORD PTR [eax]
  4248c7:	test   eax,eax
  4248c9:	jne    0x4248f1
  4248cb:	mov    eax,DWORD PTR [ebp+0x8]
  4248ce:	mov    eax,DWORD PTR [eax+0x1d8]
  4248d4:	mov    edi,DWORD PTR [ebp+0x8]
  4248d7:	add    eax,0x10
  4248da:	mov    DWORD PTR [ebp-0x24],eax
  4248dd:	mov    eax,DWORD PTR [ebp+0x8]
  4248e0:	mov    edx,DWORD PTR [eax+0x1b8]
  4248e6:	call   0x426b83
  4248eb:	push   eax
  4248ec:	mov    eax,DWORD PTR [ebp-0x24]
  4248ef:	call   DWORD PTR [eax]
  4248f1:	mov    eax,DWORD PTR [ebp-0x10]
  4248f4:	mov    ecx,DWORD PTR [ebp-0x28]
  4248f7:	xor    eax,ebx
  4248f9:	add    eax,esi
  4248fb:	cmp    eax,ecx
  4248fd:	je     0x424ac0
  424903:	mov    eax,DWORD PTR [ebp-0x18]
  424906:	xor    eax,ebx
  424908:	mov    ecx,0xffcd8d14
  42490d:	sub    ecx,eax
  42490f:	add    ecx,DWORD PTR [ebp-0x28]
  424912:	mov    eax,DWORD PTR [ebp-0x1c]
  424915:	cmp    eax,ecx
  424917:	ja     0x424ac0
  42491d:	mov    DWORD PTR [ebp-0x20],0x0
  424924:	push   DWORD PTR [ebp+0x8]
  424927:	mov    edi,DWORD PTR [ebp+0x8]
  42492a:	mov    eax,DWORD PTR [ebp+0x8]
  42492d:	mov    edx,DWORD PTR [eax+0x1b4]
  424933:	call   0x426b83
  424938:	push   eax
  424939:	mov    eax,DWORD PTR [ebp+0x8]
  42493c:	mov    eax,DWORD PTR [eax+0x1a8]
  424942:	push   DWORD PTR [eax]
  424944:	call   0x426824
  424949:	mov    ecx,DWORD PTR [ebp+0x8]
  42494c:	mov    ecx,DWORD PTR [ecx+0x19c]
  424952:	mov    DWORD PTR [ecx],eax
  424954:	mov    eax,DWORD PTR [ebp+0x8]
  424957:	mov    edi,DWORD PTR [eax+0x1d8]
  42495d:	mov    esi,DWORD PTR [ebp+0x8]
  424960:	xor    eax,eax
  424962:	lea    edx,[ebp-0x7c]
  424965:	call   0x426bb9
  42496a:	push   eax
  42496b:	mov    eax,DWORD PTR [ebp+0x8]
  42496e:	mov    eax,DWORD PTR [eax+0x19c]
  424974:	push   DWORD PTR [eax]
  424976:	call   DWORD PTR [edi+0x8]
  424979:	mov    DWORD PTR [ebp-0x24],eax
  42497c:	mov    eax,DWORD PTR [ebp+0x8]
  42497f:	mov    edi,DWORD PTR [eax+0x1d8]
  424985:	mov    esi,DWORD PTR [ebp+0x8]
  424988:	xor    eax,eax
  42498a:	lea    edx,[ebp-0x90]
  424990:	call   0x426bb9
  424995:	push   eax
  424996:	mov    eax,DWORD PTR [ebp+0x8]
  424999:	mov    eax,DWORD PTR [eax+0x19c]
  42499f:	push   DWORD PTR [eax]
  4249a1:	call   DWORD PTR [edi+0x8]
  4249a4:	mov    eax,DWORD PTR [ebp+0x8]
  4249a7:	mov    edi,DWORD PTR [eax+0x1d8]
  4249ad:	mov    esi,DWORD PTR [ebp+0x8]
  4249b0:	xor    eax,eax
  4249b2:	lea    edx,[ebp-0xa8]
  4249b8:	call   0x426bb9
  4249bd:	push   eax
  4249be:	mov    eax,DWORD PTR [ebp+0x8]
  4249c1:	mov    eax,DWORD PTR [eax+0x19c]
  4249c7:	push   DWORD PTR [eax]
  4249c9:	call   DWORD PTR [edi+0x8]
  4249cc:	and    DWORD PTR [ebp-0x8],0x0
  4249d0:	mov    DWORD PTR [ebp-0x44],eax
  4249d3:	mov    eax,DWORD PTR [ebp-0x8]
  4249d6:	and    eax,0x7
  4249d9:	add    eax,0x31
  4249dc:	push   eax
  4249dd:	call   DWORD PTR [ebp-0x24]
  4249e0:	test   eax,eax
  4249e2:	je     0x424a26
  4249e4:	mov    eax,DWORD PTR [ebp-0x8]
  4249e7:	push   0x19
  4249e9:	xor    edx,edx
  4249eb:	pop    ecx
  4249ec:	div    ecx
  4249ee:	add    dl,0x41
  4249f1:	movzx  eax,dl
  4249f4:	push   eax
  4249f5:	call   DWORD PTR [ebp-0x44]
  4249f8:	test   eax,eax
  4249fa:	jne    0x424a26
  4249fc:	mov    eax,DWORD PTR [ebp+0x8]
  4249ff:	mov    edi,DWORD PTR [eax+0x1d8]
  424a05:	mov    esi,DWORD PTR [ebp+0x8]
  424a08:	xor    eax,eax
  424a0a:	lea    edx,[ebp-0x68]
  424a0d:	call   0x426bb9
  424a12:	push   eax
  424a13:	mov    eax,DWORD PTR [ebp+0x8]
  424a16:	mov    eax,DWORD PTR [eax+0x198]
  424a1c:	push   DWORD PTR [eax]
  424a1e:	call   DWORD PTR [edi+0x8]
  424a21:	mov    DWORD PTR [ebp-0x14],eax
  424a24:	jmp    0x424a2a
  424a26:	and    DWORD PTR [ebp-0x14],0x0
  424a2a:	inc    DWORD PTR [ebp-0x8]
  424a2d:	cmp    DWORD PTR [ebp-0x8],0x10
  424a31:	jb     0x4249d3
  424a33:	mov    eax,DWORD PTR [ebp-0x18]
  424a36:	mov    esi,DWORD PTR [ebp+0x8]
  424a39:	xor    eax,ebx
  424a3b:	mov    edi,0x3272ec
  424a40:	add    eax,edi
  424a42:	lea    edx,[ebp-0x10c]
  424a48:	call   0x426bb9
  424a4d:	push   eax
  424a4e:	mov    eax,DWORD PTR [ebp-0x10]
  424a51:	mov    esi,DWORD PTR [ebp+0x8]
  424a54:	xor    eax,ebx
  424a56:	add    eax,edi
  424a58:	lea    edx,[ebp-0x12c]
  424a5e:	call   0x426bb9
  424a63:	push   eax
  424a64:	call   DWORD PTR [ebp-0x14]
  424a67:	mov    ecx,DWORD PTR [ebp-0x10]
  424a6a:	xor    ecx,ebx
  424a6c:	add    ecx,edi
  424a6e:	cmp    ecx,eax
  424a70:	jne    0x424a79
  424a72:	mov    DWORD PTR [ebp-0x20],0x1
  424a79:	mov    eax,DWORD PTR [ebp-0x18]
  424a7c:	mov    ecx,DWORD PTR [ebp-0x1c]
  424a7f:	xor    eax,ebx
  424a81:	lea    eax,[eax+ecx*1+0x3272ec]
  424a88:	mov    DWORD PTR [ebp-0x1c],eax
  424a8b:	mov    eax,DWORD PTR [ebp-0x20]
  424a8e:	test   eax,eax
  424a90:	je     0x424aa4
  424a92:	mov    eax,DWORD PTR [ebp-0x18]
  424a95:	mov    ecx,DWORD PTR [ebp-0x34]
  424a98:	xor    eax,ebx
  424a9a:	lea    eax,[eax+ecx*1+0x3272ec]
  424aa1:	mov    DWORD PTR [ebp-0x34],eax
  424aa4:	mov    eax,DWORD PTR [ebp-0x18]
  424aa7:	xor    eax,ebx
  424aa9:	mov    ecx,0xffcd8d14
  424aae:	sub    ecx,eax
  424ab0:	add    ecx,DWORD PTR [ebp-0x28]
  424ab3:	mov    eax,DWORD PTR [ebp-0x1c]
  424ab6:	cmp    eax,ecx
  424ab8:	jbe    0x42491d
  424abe:	mov    esi,edi
  424ac0:	mov    eax,DWORD PTR [ebp-0x34]
  424ac3:	mov    ecx,DWORD PTR [ebp-0x1c]
  424ac6:	cmp    ecx,eax
  424ac8:	jne    0x424adb
  424aca:	push   DWORD PTR [ebp+0x8]
  424acd:	lea    eax,[ebp-0x3c]
  424ad0:	push   eax
  424ad1:	call   0x427629
  424ad6:	mov    DWORD PTR [ebp-0x2c],eax
  424ad9:	jmp    0x424ae7
  424adb:	mov    eax,DWORD PTR [ebp-0x2c]
  424ade:	mov    ecx,DWORD PTR [ebp-0x18]
  424ae1:	xor    ecx,ebx
  424ae3:	add    ecx,esi
  424ae5:	xor    DWORD PTR [eax],ecx
  424ae7:	mov    eax,DWORD PTR [ebp-0x10]
  424aea:	mov    ecx,DWORD PTR [ebp-0x2c]
  424aed:	xor    eax,ebx
  424aef:	add    eax,esi
  424af1:	cmp    eax,ecx
  424af3:	je     0x42526d
  424af9:	mov    eax,DWORD PTR [ebp-0x10]
  424afc:	mov    ecx,DWORD PTR [ebp-0x3c]
  424aff:	xor    eax,ebx
  424b01:	add    eax,esi
  424b03:	cmp    eax,ecx
  424b05:	je     0x42526d
  424b0b:	mov    eax,DWORD PTR [ebp-0x10]
  424b0e:	xor    eax,ebx
  424b10:	add    eax,esi
  424b12:	jmp    0x424b30
  424b14:	mov    edi,DWORD PTR [ebp-0x2c]
  424b17:	mov    cl,al
  424b19:	and    cl,0x1f
  424b1c:	or     dl,0xff
  424b1f:	sub    dl,cl
  424b21:	add    BYTE PTR [edi+eax*1],dl
  424b24:	mov    ecx,DWORD PTR [ebp-0x18]
  424b27:	xor    ecx,ebx
  424b29:	lea    eax,[eax+ecx*1+0x3272ec]
  424b30:	mov    ecx,DWORD PTR [ebp-0x3c]
  424b33:	cmp    eax,ecx
  424b35:	jb     0x424b14
  424b37:	mov    eax,DWORD PTR [ebp-0x3c]
  424b3a:	mov    DWORD PTR [ebp-0x28],eax
  424b3d:	mov    eax,DWORD PTR [ebp-0x2c]
  424b40:	mov    DWORD PTR [ebp-0x34],0xf89c85b0
  424b47:	mov    DWORD PTR [ebp-0xd4],eax
  424b4d:	mov    edi,0xf89c85b1
  424b52:	mov    DWORD PTR [ebp-0x30],edi
  424b55:	mov    eax,DWORD PTR [ebp-0x34]
  424b58:	xor    eax,ebx
  424b5a:	add    eax,esi
  424b5c:	mov    DWORD PTR [ebp-0xc],eax
  424b5f:	mov    eax,DWORD PTR [ebp-0x34]
  424b62:	xor    eax,ebx
  424b64:	add    eax,esi
  424b66:	mov    DWORD PTR [ebp-0x8],eax
  424b69:	mov    DWORD PTR [ebp-0x44],0xf89c8590
  424b70:	mov    DWORD PTR [ebp-0x4c],0xf89c85bf
  424b77:	mov    eax,DWORD PTR [ebp-0x34]
  424b7a:	mov    ecx,DWORD PTR [ebp-0x28]
  424b7d:	xor    eax,ebx
  424b7f:	add    eax,esi
  424b81:	cmp    ecx,eax
  424b83:	je     0x424d82
  424b89:	jmp    0x424d5e
  424b8e:	mov    ecx,DWORD PTR [ebp-0xc]
  424b91:	mov    eax,DWORD PTR [ebp-0x28]
  424b94:	sub    eax,ecx
  424b96:	mov    ecx,DWORD PTR [ebp-0x44]
  424b99:	xor    ecx,ebx
  424b9b:	add    ecx,esi
  424b9d:	xor    edx,edx
  424b9f:	div    ecx
  424ba1:	mov    DWORD PTR [ebp-0x8],eax
  424ba4:	mov    eax,DWORD PTR [ebp-0x4c]
  424ba7:	mov    ecx,DWORD PTR [ebp-0x8]
  424baa:	xor    eax,ebx
  424bac:	add    eax,esi
  424bae:	cmp    ecx,eax
  424bb0:	jbe    0x424bbc
  424bb2:	mov    eax,DWORD PTR [ebp-0x4c]
  424bb5:	xor    eax,ebx
  424bb7:	add    eax,esi
  424bb9:	mov    DWORD PTR [ebp-0x8],eax
  424bbc:	mov    eax,DWORD PTR [ebp-0x44]
  424bbf:	mov    ecx,DWORD PTR [ebp-0x8]
  424bc2:	xor    eax,ebx
  424bc4:	add    eax,esi
  424bc6:	imul   eax,ecx
  424bc9:	mov    DWORD PTR [ebp-0x8],eax
  424bcc:	mov    eax,DWORD PTR [ebp-0x34]
  424bcf:	mov    ecx,DWORD PTR [ebp-0x8]
  424bd2:	xor    eax,ebx
  424bd4:	add    eax,esi
  424bd6:	cmp    ecx,eax
  424bd8:	je     0x424d4c
  424bde:	mov    eax,DWORD PTR [ebp-0x8]
  424be1:	mov    DWORD PTR [ebp-0x14],eax
  424be4:	mov    eax,DWORD PTR [ebp-0xc]
  424be7:	add    eax,DWORD PTR [ebp-0xd4]
  424bed:	mov    DWORD PTR [ebp-0x24],0xf89c85b0
  424bf4:	mov    DWORD PTR [ebp-0x20],edi
  424bf7:	mov    DWORD PTR [ebp-0xe8],0xf89c85b2
  424c01:	mov    DWORD PTR [ebp-0x8],eax
  424c04:	mov    DWORD PTR [ebp-0x38],0xf89c85b3
  424c0b:	mov    DWORD PTR [ebp-0x1c],edi
  424c0e:	mov    eax,DWORD PTR [ebp-0x24]
  424c11:	xor    eax,ebx
  424c13:	add    eax,esi
  424c15:	jmp    0x424d0b
  424c1a:	mov    DWORD PTR [ebp-0xe0],0xf89c85bb
  424c24:	mov    DWORD PTR [ebp-0xc4],0xf89c858e
  424c2e:	mov    eax,DWORD PTR [ebp-0x1c]
  424c31:	mov    ecx,DWORD PTR [ebp-0x48]
  424c34:	xor    eax,ebx
  424c36:	add    eax,esi
  424c38:	imul   eax,ecx
  424c3b:	mov    ecx,DWORD PTR [ebp-0x8]
  424c3e:	mov    al,BYTE PTR [eax+ecx*1]
  424c41:	mov    BYTE PTR [ebp-0x2],al
  424c44:	mov    eax,DWORD PTR [ebp-0x1c]
  424c47:	mov    ecx,DWORD PTR [ebp-0x48]
  424c4a:	xor    eax,ebx
  424c4c:	add    eax,esi
  424c4e:	imul   eax,ecx
  424c51:	mov    ecx,DWORD PTR [ebp-0xe8]
  424c57:	xor    ecx,ebx
  424c59:	add    eax,ecx
  424c5b:	mov    ecx,DWORD PTR [ebp-0x8]
  424c5e:	movzx  eax,BYTE PTR [eax+ecx*1+0x3272ec]
  424c66:	mov    ecx,DWORD PTR [ebp-0xe0]
  424c6c:	xor    ecx,ebx
  424c6e:	lea    eax,[ecx+eax*1+0x3272ec]
  424c75:	movzx  ecx,BYTE PTR [ebp-0x2]
  424c79:	xor    ecx,eax
  424c7b:	mov    BYTE PTR [ebp-0x2],cl
  424c7e:	mov    al,BYTE PTR [ebp-0x2]
  424c81:	mov    ecx,DWORD PTR [ebp-0x1c]
  424c84:	mov    edx,DWORD PTR [ebp-0x48]
  424c87:	xor    ecx,ebx
  424c89:	add    ecx,esi
  424c8b:	imul   ecx,edx
  424c8e:	mov    edx,DWORD PTR [ebp-0x8]
  424c91:	mov    BYTE PTR [ecx+edx*1],al
  424c94:	mov    eax,DWORD PTR [ebp-0x1c]
  424c97:	mov    ecx,DWORD PTR [ebp-0x48]
  424c9a:	xor    eax,ebx
  424c9c:	add    eax,esi
  424c9e:	imul   eax,ecx
  424ca1:	mov    ecx,DWORD PTR [ebp-0x8]
  424ca4:	mov    al,BYTE PTR [eax+ecx*1]
  424ca7:	mov    BYTE PTR [ebp-0x2],al
  424caa:	mov    eax,DWORD PTR [ebp-0x1c]
  424cad:	mov    ecx,DWORD PTR [ebp-0x48]
  424cb0:	xor    eax,ebx
  424cb2:	add    eax,esi
  424cb4:	imul   eax,ecx
  424cb7:	mov    ecx,DWORD PTR [ebp-0x20]
  424cba:	xor    ecx,ebx
  424cbc:	add    eax,ecx
  424cbe:	mov    ecx,DWORD PTR [ebp-0x8]
  424cc1:	movzx  eax,BYTE PTR [eax+ecx*1+0x3272ec]
  424cc9:	mov    ecx,DWORD PTR [ebp-0xc4]
  424ccf:	xor    ecx,ebx
  424cd1:	lea    eax,[ecx+eax*1+0x3272ec]
  424cd8:	movzx  ecx,BYTE PTR [ebp-0x2]
  424cdc:	xor    ecx,eax
  424cde:	mov    BYTE PTR [ebp-0x2],cl
  424ce1:	mov    al,BYTE PTR [ebp-0x2]
  424ce4:	mov    ecx,DWORD PTR [ebp-0x1c]
  424ce7:	mov    edx,DWORD PTR [ebp-0x48]
  424cea:	xor    ecx,ebx
  424cec:	add    ecx,esi
  424cee:	imul   ecx,edx
  424cf1:	mov    edx,DWORD PTR [ebp-0x8]
  424cf4:	mov    BYTE PTR [ecx+edx*1],al
  424cf7:	mov    eax,DWORD PTR [ebp-0x38]
  424cfa:	mov    ecx,DWORD PTR [ebp-0x20]
  424cfd:	xor    eax,ebx
  424cff:	xor    ecx,ebx
  424d01:	add    eax,esi
  424d03:	add    ecx,esi
  424d05:	imul   eax,ecx
  424d08:	add    eax,DWORD PTR [ebp-0x48]
  424d0b:	mov    DWORD PTR [ebp-0x48],eax
  424d0e:	mov    eax,DWORD PTR [ebp-0x48]
  424d11:	mov    ecx,DWORD PTR [ebp-0x14]
  424d14:	cmp    ecx,eax
  424d16:	jb     0x424c1a
  424d1c:	mov    eax,DWORD PTR [ebp-0x20]
  424d1f:	mov    ecx,DWORD PTR [ebp-0x14]
  424d22:	xor    eax,ebx
  424d24:	add    eax,esi
  424d26:	imul   eax,ecx
  424d29:	mov    ecx,DWORD PTR [ebp-0x24]
  424d2c:	xor    ecx,ebx
  424d2e:	add    ecx,esi
  424d30:	or     eax,ecx
  424d32:	mov    ecx,DWORD PTR [ebp-0x30]
  424d35:	xor    ecx,ebx
  424d37:	add    eax,ecx
  424d39:	mov    ecx,DWORD PTR [ebp-0x30]
  424d3c:	xor    ecx,ebx
  424d3e:	add    eax,ecx
  424d40:	mov    ecx,DWORD PTR [ebp-0xc]
  424d43:	lea    eax,[eax+ecx*1+0x64e5d8]
  424d4a:	jmp    0x424d5b
  424d4c:	mov    eax,DWORD PTR [ebp-0x30]
  424d4f:	mov    ecx,DWORD PTR [ebp-0xc]
  424d52:	xor    eax,ebx
  424d54:	lea    eax,[eax+ecx*1+0x3272ec]
  424d5b:	mov    DWORD PTR [ebp-0xc],eax
  424d5e:	mov    eax,DWORD PTR [ebp-0x30]
  424d61:	xor    eax,ebx
  424d63:	mov    ecx,0xffcd8d14
  424d68:	sub    ecx,eax
  424d6a:	add    ecx,DWORD PTR [ebp-0x28]
  424d6d:	mov    eax,DWORD PTR [ebp-0x30]
  424d70:	mov    edx,DWORD PTR [ebp-0xc]
  424d73:	xor    eax,ebx
  424d75:	add    eax,esi
  424d77:	imul   eax,edx
  424d7a:	cmp    eax,ecx
  424d7c:	jbe    0x424b8e
  424d82:	mov    eax,DWORD PTR [ebp-0x10]
  424d85:	mov    ecx,DWORD PTR [ebp-0x3c]
  424d88:	mov    eax,DWORD PTR [ebp+0x8]
  424d8b:	mov    edx,DWORD PTR [ebp-0x54]
  424d8e:	mov    eax,DWORD PTR [eax+0x1d8]
  424d94:	xor    edx,ebx
  424d96:	add    edx,esi
  424d98:	push   edx
  424d99:	mov    edx,DWORD PTR [ebp-0x40]
  424d9c:	xor    edx,ebx
  424d9e:	add    edx,esi
  424da0:	push   edx
  424da1:	push   ecx
  424da2:	mov    DWORD PTR [ebp-0x38],ecx
  424da5:	mov    ecx,DWORD PTR [ebp-0x10]
  424da8:	xor    ecx,ebx
  424daa:	add    ecx,esi
  424dac:	push   ecx
  424dad:	call   DWORD PTR [eax+0x14]
  424db0:	mov    edi,eax
  424db2:	mov    eax,DWORD PTR [ebp-0x10]
  424db5:	xor    eax,ebx
  424db7:	add    eax,esi
  424db9:	cmp    eax,edi
  424dbb:	je     0x424e16
  424dbd:	mov    eax,DWORD PTR [ebp-0x10]
  424dc0:	jmp    0x424de3
  424dc2:	mov    ecx,DWORD PTR [ebp-0x2c]
  424dc5:	xor    eax,ebx
  424dc7:	mov    cl,BYTE PTR [ecx+eax*1+0x3272ec]
  424dce:	mov    BYTE PTR [eax+edi*1+0x3272ec],cl
  424dd5:	mov    ecx,DWORD PTR [ebp-0x18]
  424dd8:	xor    ecx,ebx
  424dda:	lea    eax,[ecx+eax*1+0x3272ec]
  424de1:	xor    eax,ebx
  424de3:	mov    ecx,DWORD PTR [ebp-0x3c]
  424de6:	sub    ecx,esi
  424de8:	xor    ecx,ebx
  424dea:	cmp    eax,ecx
  424dec:	jne    0x424dc2
  424dee:	mov    eax,DWORD PTR [ebp+0x8]
  424df1:	mov    ecx,DWORD PTR [ebp-0x50]
  424df4:	mov    eax,DWORD PTR [eax+0x1d8]
  424dfa:	xor    ecx,ebx
  424dfc:	add    ecx,esi
  424dfe:	push   ecx
  424dff:	mov    ecx,DWORD PTR [ebp-0x10]
  424e02:	xor    ecx,ebx
  424e04:	add    ecx,esi
  424e06:	push   ecx
  424e07:	push   DWORD PTR [ebp-0x2c]
  424e0a:	call   DWORD PTR [eax+0x18]
  424e0d:	mov    eax,DWORD PTR [ebp-0x38]
  424e10:	mov    DWORD PTR [ebp-0x2c],edi
  424e13:	mov    DWORD PTR [ebp-0x3c],eax
  424e16:	mov    eax,DWORD PTR [ebp-0x2c]
  424e19:	mov    DWORD PTR [ebp-0x14],eax
  424e1c:	mov    eax,DWORD PTR [ebp-0x18]
  424e1f:	mov    ecx,DWORD PTR [ebp-0x10]
  424e22:	xor    eax,ebx
  424e24:	add    eax,esi
  424e26:	mov    DWORD PTR [ebp-0x5c],0x3d222a22
  424e2d:	mov    DWORD PTR [ebp-0x58],0x37223f22
  424e34:	jmp    0x424e67
  424e36:	mov    edx,DWORD PTR [ebp-0x14]
  424e39:	mov    edi,ecx
  424e3b:	xor    edi,ebx
  424e3d:	mov    cl,BYTE PTR [ebp+edi*1+0x327290]
  424e44:	movsx  edx,BYTE PTR [edi+edx*1+0x3272ec]
  424e4c:	xor    cl,0x79
  424e4f:	sub    cl,0x3
  424e52:	movzx  ecx,cl
  424e55:	cmp    edx,ecx
  424e57:	jne    0x424e71
  424e59:	mov    ecx,DWORD PTR [ebp-0x18]
  424e5c:	xor    ecx,ebx
  424e5e:	lea    ecx,[ecx+edi*1+0x3272ec]
  424e65:	xor    ecx,ebx
  424e67:	cmp    ecx,0xf89c85b8
  424e6d:	jne    0x424e36
  424e6f:	jmp    0x424e78
  424e71:	mov    eax,DWORD PTR [ebp-0x10]
  424e74:	xor    eax,ebx
  424e76:	add    eax,esi
  424e78:	mov    ecx,DWORD PTR [ebp-0x10]
  424e7b:	xor    ecx,ebx
  424e7d:	add    ecx,esi
  424e7f:	cmp    ecx,eax
  424e81:	je     0x424ff7
  424e87:	mov    eax,DWORD PTR [ebp-0x14]
  424e8a:	mov    eax,DWORD PTR [eax+0x8]
  424e8d:	mov    DWORD PTR [ebp-0xc],0xf89c85b0
  424e94:	mov    DWORD PTR [ebp-0x40],0xf89cc327
  424e9b:	mov    DWORD PTR [ebp-0x44],0xf89cb5b0
  424ea2:	mov    DWORD PTR [ebp-0x24],0xf89c85bc
  424ea9:	mov    DWORD PTR [ebp-0x20],eax
  424eac:	mov    eax,DWORD PTR [ebp+0x8]
  424eaf:	mov    ecx,DWORD PTR [ebp-0x24]
  424eb2:	xor    ecx,ebx
  424eb4:	add    ecx,esi
  424eb6:	push   ecx
  424eb7:	mov    ecx,DWORD PTR [ebp-0x44]
  424eba:	mov    eax,DWORD PTR [eax+0x1d8]
  424ec0:	xor    ecx,ebx
  424ec2:	add    ecx,esi
  424ec4:	push   ecx
  424ec5:	mov    ecx,DWORD PTR [ebp-0x40]
  424ec8:	xor    ecx,ebx
  424eca:	add    ecx,esi
  424ecc:	push   ecx
  424ecd:	mov    ecx,DWORD PTR [ebp-0xc]
  424ed0:	xor    ecx,ebx
  424ed2:	add    ecx,esi
  424ed4:	push   ecx
  424ed5:	call   DWORD PTR [eax+0x14]
  424ed8:	mov    edi,eax
  424eda:	mov    eax,DWORD PTR [ebp+0x8]
  424edd:	mov    ecx,DWORD PTR [ebp-0x24]
  424ee0:	mov    eax,DWORD PTR [eax+0x1d8]
  424ee6:	xor    ecx,ebx
  424ee8:	add    ecx,esi
  424eea:	push   ecx
  424eeb:	mov    ecx,DWORD PTR [ebp-0x44]
  424eee:	xor    ecx,ebx
  424ef0:	add    ecx,esi
  424ef2:	push   ecx
  424ef3:	mov    ecx,DWORD PTR [ebp-0xc]
  424ef6:	push   DWORD PTR [ebp-0x20]
  424ef9:	xor    ecx,ebx
  424efb:	add    ecx,esi
  424efd:	push   ecx
  424efe:	call   DWORD PTR [eax+0x14]
  424f01:	mov    ecx,DWORD PTR [ebp-0xc]
  424f04:	xor    ecx,ebx
  424f06:	add    ecx,esi
  424f08:	mov    DWORD PTR [ebp-0x24],eax
  424f0b:	cmp    ecx,edi
  424f0d:	je     0x42529a
  424f13:	mov    ecx,DWORD PTR [ebp-0xc]
  424f16:	xor    ecx,ebx
  424f18:	add    ecx,esi
  424f1a:	cmp    ecx,eax
  424f1c:	je     0x42529a
  424f22:	mov    DWORD PTR [ebp-0x40],0xf89c85b3
  424f29:	mov    DWORD PTR [ebp-0x54],0xf89c85b2
  424f30:	mov    ecx,DWORD PTR [ebp-0x40]
  424f33:	xor    cl,0xa4
  424f36:	sub    cl,0x14
  424f39:	mov    BYTE PTR [edi],cl
  424f3b:	mov    ecx,DWORD PTR [ebp-0xc]
  424f3e:	xor    cl,0xa4
  424f41:	sub    cl,0x14
  424f44:	mov    BYTE PTR [edi+0x1],cl
  424f47:	mov    ecx,DWORD PTR [ebp-0x54]
  424f4a:	xor    cl,0xa4
  424f4d:	sub    cl,0x14
  424f50:	mov    BYTE PTR [edi+0x2],cl
  424f53:	and    DWORD PTR [ebp-0xc8],0x0
  424f5a:	and    DWORD PTR [ebp-0xdc],0x0
  424f61:	lea    ecx,[ebp-0xdc]
  424f67:	push   ecx
  424f68:	push   DWORD PTR [ebp-0x20]
  424f6b:	push   eax
  424f6c:	lea    eax,[ebp-0xc8]
  424f72:	push   eax
  424f73:	mov    eax,DWORD PTR [ebp-0x14]
  424f76:	push   DWORD PTR [eax+0xc]
  424f79:	mov    eax,DWORD PTR [ebp-0x2c]
  424f7c:	add    eax,0x10
  424f7f:	push   eax
  424f80:	push   edi
  424f81:	call   0x424225
  424f86:	mov    DWORD PTR [ebp-0x40],eax
  424f89:	mov    eax,DWORD PTR [ebp+0x8]
  424f8c:	mov    ecx,DWORD PTR [ebp-0x50]
  424f8f:	mov    eax,DWORD PTR [eax+0x1d8]
  424f95:	xor    ecx,ebx
  424f97:	add    ecx,esi
  424f99:	push   ecx
  424f9a:	mov    ecx,DWORD PTR [ebp-0xc]
  424f9d:	xor    ecx,ebx
  424f9f:	add    ecx,esi
  424fa1:	push   ecx
  424fa2:	push   edi
  424fa3:	call   DWORD PTR [eax+0x18]
  424fa6:	mov    eax,DWORD PTR [ebp-0x40]
  424fa9:	add    eax,0xffcd8d14
  424fae:	xor    eax,ebx
  424fb0:	cmp    eax,0xf89c85b0
  424fb5:	mov    eax,DWORD PTR [ebp+0x8]
  424fb8:	mov    eax,DWORD PTR [eax+0x1d8]
  424fbe:	mov    ecx,DWORD PTR [ebp-0x50]
  424fc1:	jne    0x424fe4
  424fc3:	xor    ecx,ebx
  424fc5:	add    ecx,esi
  424fc7:	push   ecx
  424fc8:	mov    ecx,DWORD PTR [ebp-0xc]
  424fcb:	xor    ecx,ebx
  424fcd:	add    ecx,esi
  424fcf:	push   ecx
  424fd0:	push   DWORD PTR [ebp-0x2c]
  424fd3:	call   DWORD PTR [eax+0x18]
  424fd6:	mov    eax,DWORD PTR [ebp-0x24]
  424fd9:	mov    DWORD PTR [ebp-0x2c],eax
  424fdc:	mov    eax,DWORD PTR [ebp-0x20]
  424fdf:	mov    DWORD PTR [ebp-0x3c],eax
  424fe2:	jmp    0x424ff7
  424fe4:	xor    ecx,ebx
  424fe6:	add    ecx,esi
  424fe8:	push   ecx
  424fe9:	mov    ecx,DWORD PTR [ebp-0xc]
  424fec:	xor    ecx,ebx
  424fee:	add    ecx,esi
  424ff0:	push   ecx
  424ff1:	push   DWORD PTR [ebp-0x24]
  424ff4:	call   DWORD PTR [eax+0x18]
  424ff7:	mov    eax,DWORD PTR [ebp-0x3c]
  424ffa:	mov    DWORD PTR [ebp-0x34],eax
  424ffd:	mov    eax,DWORD PTR [ebp-0x2c]
  425000:	mov    DWORD PTR [ebp-0x28],0xf89c85b0
  425007:	mov    DWORD PTR [ebp-0x40],eax
  42500a:	mov    edi,0xf89c85b1
  42500f:	mov    DWORD PTR [ebp-0x30],edi
  425012:	mov    eax,DWORD PTR [ebp-0x28]
  425015:	xor    eax,ebx
  425017:	add    eax,esi
  425019:	mov    DWORD PTR [ebp-0xc],eax
  42501c:	mov    eax,DWORD PTR [ebp-0x28]
  42501f:	xor    eax,ebx
  425021:	add    eax,esi
  425023:	mov    DWORD PTR [ebp-0x14],eax
  425026:	mov    DWORD PTR [ebp-0x44],0xf89c8590
  42502d:	mov    DWORD PTR [ebp-0x24],0xf89c85bf
  425034:	mov    eax,DWORD PTR [ebp-0x28]
  425037:	mov    ecx,DWORD PTR [ebp-0x34]
  42503a:	xor    eax,ebx
  42503c:	add    eax,esi
  42503e:	cmp    ecx,eax
  425040:	je     0x425236
  425046:	jmp    0x425212
  42504b:	mov    ecx,DWORD PTR [ebp-0xc]
  42504e:	mov    eax,DWORD PTR [ebp-0x34]
  425051:	sub    eax,ecx
  425053:	mov    ecx,DWORD PTR [ebp-0x44]
  425056:	xor    ecx,ebx
  425058:	add    ecx,esi
  42505a:	xor    edx,edx
  42505c:	div    ecx
  42505e:	mov    DWORD PTR [ebp-0x14],eax
  425061:	mov    eax,DWORD PTR [ebp-0x24]
  425064:	mov    ecx,DWORD PTR [ebp-0x14]
  425067:	xor    eax,ebx
  425069:	add    eax,esi
  42506b:	cmp    ecx,eax
  42506d:	jbe    0x425079
  42506f:	mov    eax,DWORD PTR [ebp-0x24]
  425072:	xor    eax,ebx
  425074:	add    eax,esi
  425076:	mov    DWORD PTR [ebp-0x14],eax
  425079:	mov    eax,DWORD PTR [ebp-0x44]
  42507c:	mov    ecx,DWORD PTR [ebp-0x14]
  42507f:	xor    eax,ebx
  425081:	add    eax,esi
  425083:	imul   eax,ecx
  425086:	mov    DWORD PTR [ebp-0x14],eax
  425089:	mov    eax,DWORD PTR [ebp-0x28]
  42508c:	mov    ecx,DWORD PTR [ebp-0x14]
  42508f:	xor    eax,ebx
  425091:	add    eax,esi
  425093:	cmp    ecx,eax
  425095:	je     0x425200
  42509b:	mov    eax,DWORD PTR [ebp-0x14]
  42509e:	mov    DWORD PTR [ebp-0x20],eax
  4250a1:	mov    eax,DWORD PTR [ebp-0xc]
  4250a4:	add    eax,DWORD PTR [ebp-0x40]
  4250a7:	mov    DWORD PTR [ebp-0x4c],0xf89c85b0
  4250ae:	mov    DWORD PTR [ebp-0x14],edi
  4250b1:	mov    DWORD PTR [ebp-0x54],0xf89c85b2
  4250b8:	mov    DWORD PTR [ebp-0x1c],eax
  4250bb:	mov    DWORD PTR [ebp-0x38],0xf89c85b3
  4250c2:	mov    DWORD PTR [ebp-0x8],edi
  4250c5:	mov    eax,DWORD PTR [ebp-0x4c]
  4250c8:	xor    eax,ebx
  4250ca:	add    eax,esi
  4250cc:	jmp    0x4251bf
  4250d1:	mov    DWORD PTR [ebp-0xe4],0xf89c85bb
  4250db:	mov    DWORD PTR [ebp-0xd0],0xf89c858e
  4250e5:	mov    eax,DWORD PTR [ebp-0x8]
  4250e8:	mov    ecx,DWORD PTR [ebp-0x18]
  4250eb:	xor    eax,ebx
  4250ed:	add    eax,esi
  4250ef:	imul   eax,ecx
  4250f2:	mov    ecx,DWORD PTR [ebp-0x1c]
  4250f5:	mov    al,BYTE PTR [eax+ecx*1]
  4250f8:	mov    BYTE PTR [ebp-0x1],al
  4250fb:	mov    eax,DWORD PTR [ebp-0x8]
  4250fe:	mov    ecx,DWORD PTR [ebp-0x18]
  425101:	xor    eax,ebx
  425103:	add    eax,esi
  425105:	imul   eax,ecx
  425108:	mov    ecx,DWORD PTR [ebp-0x54]
  42510b:	xor    ecx,ebx
  42510d:	add    eax,ecx
  42510f:	mov    ecx,DWORD PTR [ebp-0x1c]
  425112:	movzx  eax,BYTE PTR [eax+ecx*1+0x3272ec]
  42511a:	mov    ecx,DWORD PTR [ebp-0xe4]
  425120:	xor    ecx,ebx
  425122:	lea    eax,[ecx+eax*1+0x3272ec]
  425129:	movzx  ecx,BYTE PTR [ebp-0x1]
  42512d:	xor    ecx,eax
  42512f:	mov    BYTE PTR [ebp-0x1],cl
  425132:	mov    al,BYTE PTR [ebp-0x1]
  425135:	mov    ecx,DWORD PTR [ebp-0x8]
  425138:	mov    edx,DWORD PTR [ebp-0x18]
  42513b:	xor    ecx,ebx
  42513d:	add    ecx,esi
  42513f:	imul   ecx,edx
  425142:	mov    edx,DWORD PTR [ebp-0x1c]
  425145:	mov    BYTE PTR [ecx+edx*1],al
  425148:	mov    eax,DWORD PTR [ebp-0x8]
  42514b:	mov    ecx,DWORD PTR [ebp-0x18]
  42514e:	xor    eax,ebx
  425150:	add    eax,esi
  425152:	imul   eax,ecx
  425155:	mov    ecx,DWORD PTR [ebp-0x1c]
  425158:	mov    al,BYTE PTR [eax+ecx*1]
  42515b:	mov    BYTE PTR [ebp-0x1],al
  42515e:	mov    eax,DWORD PTR [ebp-0x8]
  425161:	mov    ecx,DWORD PTR [ebp-0x18]
  425164:	xor    eax,ebx
  425166:	add    eax,esi
  425168:	imul   eax,ecx
  42516b:	mov    ecx,DWORD PTR [ebp-0x14]
  42516e:	xor    ecx,ebx
  425170:	add    eax,ecx
  425172:	mov    ecx,DWORD PTR [ebp-0x1c]
  425175:	movzx  eax,BYTE PTR [eax+ecx*1+0x3272ec]
  42517d:	mov    ecx,DWORD PTR [ebp-0xd0]
  425183:	xor    ecx,ebx
  425185:	lea    eax,[ecx+eax*1+0x3272ec]
  42518c:	movzx  ecx,BYTE PTR [ebp-0x1]
  425190:	xor    ecx,eax
  425192:	mov    BYTE PTR [ebp-0x1],cl
  425195:	mov    al,BYTE PTR [ebp-0x1]
  425198:	mov    ecx,DWORD PTR [ebp-0x8]
  42519b:	mov    edx,DWORD PTR [ebp-0x18]
  42519e:	xor    ecx,ebx
  4251a0:	add    ecx,esi
  4251a2:	imul   ecx,edx
  4251a5:	mov    edx,DWORD PTR [ebp-0x1c]
  4251a8:	mov    BYTE PTR [ecx+edx*1],al
  4251ab:	mov    eax,DWORD PTR [ebp-0x38]
  4251ae:	mov    ecx,DWORD PTR [ebp-0x14]
  4251b1:	xor    eax,ebx
  4251b3:	xor    ecx,ebx
  4251b5:	add    eax,esi
  4251b7:	add    ecx,esi
  4251b9:	imul   eax,ecx
  4251bc:	add    eax,DWORD PTR [ebp-0x18]
  4251bf:	mov    DWORD PTR [ebp-0x18],eax
  4251c2:	mov    eax,DWORD PTR [ebp-0x18]
  4251c5:	mov    ecx,DWORD PTR [ebp-0x20]
  4251c8:	cmp    ecx,eax
  4251ca:	jb     0x4250d1
  4251d0:	mov    eax,DWORD PTR [ebp-0x14]
  4251d3:	mov    ecx,DWORD PTR [ebp-0x20]
  4251d6:	xor    eax,ebx
  4251d8:	add    eax,esi
  4251da:	imul   eax,ecx
  4251dd:	mov    ecx,DWORD PTR [ebp-0x4c]
  4251e0:	xor    ecx,ebx
  4251e2:	add    ecx,esi
  4251e4:	or     eax,ecx
  4251e6:	mov    ecx,DWORD PTR [ebp-0x30]
  4251e9:	xor    ecx,ebx
  4251eb:	add    eax,ecx
  4251ed:	mov    ecx,DWORD PTR [ebp-0x30]
  4251f0:	xor    ecx,ebx
  4251f2:	add    eax,ecx
  4251f4:	mov    ecx,DWORD PTR [ebp-0xc]
  4251f7:	lea    eax,[eax+ecx*1+0x64e5d8]
  4251fe:	jmp    0x42520f
  425200:	mov    eax,DWORD PTR [ebp-0x30]
  425203:	mov    ecx,DWORD PTR [ebp-0xc]
  425206:	xor    eax,ebx
  425208:	lea    eax,[eax+ecx*1+0x3272ec]
  42520f:	mov    DWORD PTR [ebp-0xc],eax
  425212:	mov    eax,DWORD PTR [ebp-0x30]
  425215:	xor    eax,ebx
  425217:	mov    ecx,0xffcd8d14
  42521c:	sub    ecx,eax
  42521e:	add    ecx,DWORD PTR [ebp-0x34]
  425221:	mov    eax,DWORD PTR [ebp-0x30]
  425224:	mov    edx,DWORD PTR [ebp-0xc]
  425227:	xor    eax,ebx
  425229:	add    eax,esi
  42522b:	imul   eax,edx
  42522e:	cmp    eax,ecx
  425230:	jbe    0x42504b
  425236:	push   DWORD PTR [ebp+0x8]
  425239:	mov    eax,DWORD PTR [ebp+0x8]
  42523c:	push   DWORD PTR [eax+0x1cc]
  425242:	lea    eax,[ebp-0xd8]
  425248:	push   eax
  425249:	mov    eax,DWORD PTR [ebp+0x8]
  42524c:	mov    eax,DWORD PTR [eax+0x1c4]
  425252:	push   DWORD PTR [eax]
  425254:	mov    eax,DWORD PTR [ebp+0x8]
  425257:	mov    eax,DWORD PTR [eax+0x1c0]
  42525d:	push   DWORD PTR [eax]
  42525f:	push   DWORD PTR [ebp-0x3c]
  425262:	push   DWORD PTR [ebp-0x2c]
  425265:	call   0x425cfc
  42526a:	mov    DWORD PTR [ebp-0x40],eax
  42526d:	mov    eax,DWORD PTR [ebp-0x10]
  425270:	mov    ecx,DWORD PTR [ebp-0x2c]
  425273:	xor    eax,ebx
  425275:	add    eax,esi
  425277:	cmp    eax,ecx
  425279:	je     0x42529a
  42527b:	mov    eax,DWORD PTR [ebp+0x8]
  42527e:	mov    ecx,DWORD PTR [ebp-0x50]
  425281:	mov    eax,DWORD PTR [eax+0x1d8]
  425287:	xor    ecx,ebx
  425289:	add    ecx,esi
  42528b:	push   ecx
  42528c:	mov    ecx,DWORD PTR [ebp-0x10]
  42528f:	xor    ecx,ebx
  425291:	add    ecx,esi
  425293:	push   ecx
  425294:	push   DWORD PTR [ebp-0x2c]
  425297:	call   DWORD PTR [eax+0x18]
  42529a:	pop    edi
  42529b:	pop    esi
  42529c:	pop    ebx
  42529d:	leave  
  42529e:	ret    0x4
  4252a1:	push   ebp
  4252a2:	mov    ebp,esp
  4252a4:	push   ecx
  4252a5:	push   ecx
  4252a6:	lea    eax,[ebp-0x8]
  4252a9:	mov    DWORD PTR [ebp-0x4],eax
  4252ac:	push   esi
  4252ad:	mov    esi,DWORD PTR [ebp-0x4]
  4252b0:	mov    eax,0xf881ba2e
  4252b5:	mov    DWORD PTR [esi],eax
  4252b7:	mov    esi,DWORD PTR [ebp-0x8]
  4252ba:	cmp    esi,eax
  4252bc:	pop    esi
  4252bd:	jne    0x4252c7
  4252bf:	mov    BYTE PTR [ecx+0xa],0x7a
  4252c3:	mov    BYTE PTR [edx+0x8],0x2f
  4252c7:	mov    BYTE PTR [edx+0xa],0x7a
  4252cb:	mov    BYTE PTR [ecx+0x2],0x8
  4252cf:	leave  
  4252d0:	ret    
  4252d1:	push   ebp
  4252d2:	mov    ebp,esp
  4252d4:	push   ecx
  4252d5:	push   ecx
  4252d6:	lea    eax,[ebp-0x8]
  4252d9:	mov    DWORD PTR [ebp-0x4],eax
  4252dc:	mov    edx,DWORD PTR [ebp-0x4]
  4252df:	mov    eax,0xf88b0bca
  4252e4:	mov    DWORD PTR [edx],eax
  4252e6:	mov    edx,DWORD PTR [ebp-0x8]
  4252e9:	cmp    edx,eax
  4252eb:	jne    0x4252fc
  4252ed:	mov    eax,DWORD PTR [ebp+0x8]
  4252f0:	mov    BYTE PTR [ecx+0x9],0xe
  4252f4:	mov    BYTE PTR [eax+0x7],0x57
  4252f8:	mov    BYTE PTR [ecx+0x6],0xf
  4252fc:	mov    BYTE PTR [ecx+0x3],0x1e
  425300:	leave  
  425301:	ret    0x4
  425304:	push   ebp
  425305:	mov    ebp,esp
  425307:	push   ecx
  425308:	push   ecx
  425309:	lea    eax,[ebp-0x8]
  42530c:	mov    DWORD PTR [ebp-0x4],eax
  42530f:	mov    edx,DWORD PTR [ebp-0x4]
  425312:	mov    eax,0x7e0da2e
  425317:	mov    DWORD PTR [edx],eax
  425319:	mov    edx,DWORD PTR [ebp-0x8]
  42531c:	cmp    edx,eax
  42531e:	jne    0x425324
  425320:	mov    BYTE PTR [ecx+0x7],0x57
  425324:	mov    eax,DWORD PTR [ebp+0x8]
  425327:	mov    BYTE PTR [ecx+0x1],0x15
  42532b:	mov    BYTE PTR [eax+0x9],0x2e
  42532f:	leave  
  425330:	ret    0x4
  425333:	push   ebp
  425334:	mov    ebp,esp
  425336:	push   ecx
  425337:	push   ecx
  425338:	lea    eax,[ebp-0x8]
  42533b:	mov    DWORD PTR [ebp-0x4],eax
  42533e:	push   esi
  42533f:	mov    esi,DWORD PTR [ebp-0x4]
  425342:	mov    eax,0x7060e3f
  425347:	mov    DWORD PTR [esi],eax
  425349:	mov    esi,DWORD PTR [ebp-0x8]
  42534c:	cmp    esi,eax
  42534e:	pop    esi
  42534f:	jne    0x42535b
  425351:	mov    BYTE PTR [edx+0x4],0xb
  425355:	mov    WORD PTR [ecx+0x3],0xb1e
  42535b:	mov    BYTE PTR [edx],0x3f
  42535e:	leave  
  42535f:	ret    
  425360:	push   ebp
  425361:	mov    ebp,esp
  425363:	push   ecx
  425364:	push   ecx
  425365:	lea    eax,[ebp-0x8]
  425368:	mov    DWORD PTR [ebp-0x4],eax
  42536b:	mov    edx,DWORD PTR [ebp-0x4]
  42536e:	mov    eax,0xf8870b3e
  425373:	mov    DWORD PTR [edx],eax
  425375:	mov    edx,DWORD PTR [ebp-0x8]
  425378:	cmp    edx,eax
  42537a:	jne    0x425387
  42537c:	mov    eax,DWORD PTR [ebp+0x8]
  42537f:	mov    BYTE PTR [ecx+0x8],0xf
  425383:	mov    BYTE PTR [eax+0x1],0x15
  425387:	mov    BYTE PTR [ecx+0x5],0x3
  42538b:	leave  
  42538c:	ret    0x4
  42538f:	push   esi
  425390:	mov    ecx,edi
  425392:	call   0x425360
  425397:	mov    edx,edi
  425399:	mov    ecx,esi
  42539b:	mov    BYTE PTR [esi],0x1f
  42539e:	call   0x425333
  4253a3:	push   esi
  4253a4:	mov    ecx,edi
  4253a6:	mov    BYTE PTR [esi+0x5],0x3
  4253aa:	call   0x425304
  4253af:	push   esi
  4253b0:	mov    BYTE PTR [esi+0x6],0xf
  4253b4:	call   0x4252d1
  4253b9:	mov    BYTE PTR [esi+0x2],0x8
  4253bd:	mov    edx,esi
  4253bf:	jmp    0x4252a1
  4253c4:	push   ebp
  4253c5:	mov    ebp,esp
  4253c7:	push   ecx
  4253c8:	mov    ecx,DWORD PTR [edx+0x194]
  4253ce:	push   esi
  4253cf:	mov    esi,DWORD PTR [ebp+0x8]
  4253d2:	mov    esi,DWORD PTR [esi]
  4253d4:	mov    DWORD PTR [ecx],esi
  4253d6:	mov    ecx,DWORD PTR [edx+0x194]
  4253dc:	mov    ecx,DWORD PTR [ecx]
  4253de:	mov    esi,DWORD PTR [edx+0x190]
  4253e4:	mov    DWORD PTR [esi],ecx
  4253e6:	mov    eax,DWORD PTR [edx+0x194]
  4253ec:	mov    ecx,DWORD PTR [eax]
  4253ee:	mov    ecx,DWORD PTR [ecx+0x3c]
  4253f1:	add    ecx,DWORD PTR [eax]
  4253f3:	mov    DWORD PTR [ebp-0x4],0xf89ca5b0
  4253fa:	mov    eax,DWORD PTR [ebp-0x4]
  4253fd:	movzx  ecx,WORD PTR [ecx+0x16]
  425401:	xor    eax,0x75108a4
  425406:	add    eax,0x3272ec
  42540b:	pop    esi
  42540c:	test   ecx,eax
  42540e:	je     0x42541c
  425410:	mov    eax,DWORD PTR [edx+0x1c8]
  425416:	mov    DWORD PTR [eax],0xf89c85b1
  42541c:	leave  
  42541d:	ret    0x4
  425420:	push   ebp
  425421:	mov    ebp,esp
  425423:	sub    esp,0x70
  425426:	and    DWORD PTR [ebp-0x20],0x0
  42542a:	mov    DWORD PTR [ebp-0x18],0xf89cb5b0
  425431:	mov    DWORD PTR [ebp-0x1c],0xf89c85f0
  425438:	mov    DWORD PTR [ebp-0x2c],0xf89c85bc
  42543f:	mov    DWORD PTR [ebp-0x14],0xf89c85b2
  425446:	mov    DWORD PTR [ebp-0x2c],0xf89f05b0
  42544d:	mov    eax,DWORD PTR [ebp+0x20]
  425450:	mov    eax,DWORD PTR [eax+0x194]
  425456:	mov    DWORD PTR [ebp-0xc],eax
  425459:	mov    eax,DWORD PTR [ebp+0x20]
  42545c:	push   ebx
  42545d:	push   esi
  42545e:	mov    esi,DWORD PTR [eax+0x190]
  425464:	mov    eax,DWORD PTR [ebp+0x20]
  425467:	mov    eax,DWORD PTR [eax+0x18c]
  42546d:	mov    DWORD PTR [ebp-0x8],eax
  425470:	mov    eax,DWORD PTR [eax]
  425472:	push   edi
  425473:	mov    DWORD PTR [ebp-0x4],esi
  425476:	test   eax,eax
  425478:	jne    0x425485
  42547a:	push   DWORD PTR [ebp+0x1c]
  42547d:	mov    edx,DWORD PTR [ebp+0x20]
  425480:	call   0x4253c4
  425485:	mov    eax,DWORD PTR [esi]
  425487:	mov    ebx,DWORD PTR [esi]
  425489:	add    ebx,DWORD PTR [eax+0x3c]
  42548c:	mov    eax,DWORD PTR [ebp+0xc]
  42548f:	mov    ecx,DWORD PTR [ebp-0x8]
  425492:	mov    ecx,DWORD PTR [ecx]
  425494:	mov    esi,0x75108a4
  425499:	xor    eax,esi
  42549b:	mov    edi,0x3272ec
  4254a0:	add    eax,edi
  4254a2:	cmp    eax,ecx
  4254a4:	jne    0x4256dc
  4254aa:	mov    eax,DWORD PTR [ebp-0xc]
  4254ad:	mov    eax,DWORD PTR [eax]
  4254af:	mov    DWORD PTR [ebp-0x10],eax
  4254b2:	mov    eax,DWORD PTR [ebx+0x50]
  4254b5:	mov    DWORD PTR [ebp-0x68],eax
  4254b8:	mov    eax,DWORD PTR [ebp-0x18]
  4254bb:	xor    eax,esi
  4254bd:	add    eax,edi
  4254bf:	mov    DWORD PTR [ebp-0x64],eax
  4254c2:	mov    eax,DWORD PTR [ebp-0x14]
  4254c5:	and    DWORD PTR [ebp-0x6c],0x0
  4254c9:	xor    eax,esi
  4254cb:	add    eax,edi
  4254cd:	mov    DWORD PTR [ebp-0x60],eax
  4254d0:	lea    eax,[ebp-0x70]
  4254d3:	push   eax
  4254d4:	mov    eax,DWORD PTR [ebp+0x8]
  4254d7:	xor    eax,esi
  4254d9:	add    eax,edi
  4254db:	push   eax
  4254dc:	mov    eax,DWORD PTR [ebp+0x20]
  4254df:	add    eax,0xaa
  4254e4:	push   eax
  4254e5:	mov    eax,DWORD PTR [ebp+0x20]
  4254e8:	mov    eax,DWORD PTR [eax+0x198]
  4254ee:	mov    DWORD PTR [ebp-0x70],0x4
  4254f5:	push   DWORD PTR [eax]
  4254f7:	mov    eax,DWORD PTR [ebp+0x10]
  4254fa:	call   eax
  4254fc:	mov    ecx,DWORD PTR [ebp-0xc]
  4254ff:	mov    ecx,DWORD PTR [ecx]
  425501:	mov    edx,DWORD PTR [ebp-0x8]
  425504:	mov    DWORD PTR [ebp-0x6c],eax
  425507:	mov    DWORD PTR [ebp+0x1c],eax
  42550a:	mov    DWORD PTR [edx],ecx
  42550c:	mov    ecx,DWORD PTR [ebp-0x4]
  42550f:	mov    DWORD PTR [ecx],eax
  425511:	mov    eax,DWORD PTR [ebx+0x50]
  425514:	mov    DWORD PTR [ebp-0x68],eax
  425517:	mov    eax,DWORD PTR [ebp-0x1c]
  42551a:	xor    eax,esi
  42551c:	add    eax,edi
  42551e:	mov    DWORD PTR [ebp-0x64],eax
  425521:	lea    eax,[ebp-0x20]
  425524:	mov    DWORD PTR [ebp-0x60],eax
  425527:	lea    eax,[ebp-0x70]
  42552a:	push   eax
  42552b:	mov    eax,DWORD PTR [ebp+0x8]
  42552e:	xor    eax,esi
  425530:	add    eax,edi
  425532:	push   eax
  425533:	mov    eax,DWORD PTR [ebp+0x20]
  425536:	add    eax,0xee
  42553b:	push   eax
  42553c:	mov    eax,DWORD PTR [ebp+0x20]
  42553f:	mov    eax,DWORD PTR [eax+0x198]
  425545:	mov    DWORD PTR [ebp-0x70],0x4
  42554c:	push   DWORD PTR [eax]
  42554e:	mov    eax,DWORD PTR [ebp+0x10]
  425551:	call   eax
  425553:	test   eax,eax
  425555:	je     0x42557a
  425557:	and    DWORD PTR [ebp+0xc],0x0
  42555b:	cmp    DWORD PTR [ebx+0x50],0x0
  42555f:	jbe    0x42557a
  425561:	mov    eax,DWORD PTR [ebp+0x1c]
  425564:	mov    ecx,DWORD PTR [ebp-0x10]
  425567:	sub    ecx,eax
  425569:	mov    dl,BYTE PTR [ecx+eax*1]
  42556c:	inc    DWORD PTR [ebp+0xc]
  42556f:	mov    BYTE PTR [eax],dl
  425571:	mov    edx,DWORD PTR [ebp+0xc]
  425574:	inc    eax
  425575:	cmp    edx,DWORD PTR [ebx+0x50]
  425578:	jb     0x425569
  42557a:	mov    edx,DWORD PTR [ebp+0x1c]
  42557d:	mov    ecx,DWORD PTR [edx+0x3c]
  425580:	add    ecx,edx
  425582:	mov    eax,DWORD PTR [ecx+0xa0]
  425588:	mov    ebx,DWORD PTR [ecx+0x28]
  42558b:	add    eax,edx
  42558d:	sub    edx,DWORD PTR [ebp-0x10]
  425590:	add    ebx,DWORD PTR [ebp+0x1c]
  425593:	mov    DWORD PTR [ebp+0xc],edx
  425596:	mov    DWORD PTR [ebp-0x2c],ecx
  425599:	mov    DWORD PTR [ebp-0x14],ebx
  42559c:	mov    DWORD PTR [ebp-0x8],0x0
  4255a3:	jmp    0x42561f
  4255a5:	add    edx,0xfffffff8
  4255a8:	shr    edx,1
  4255aa:	mov    DWORD PTR [ebp-0x18],edx
  4255ad:	je     0x42560b
  4255af:	lea    edx,[eax+0x8]
  4255b2:	mov    DWORD PTR [ebp-0x4],edx
  4255b5:	mov    edx,DWORD PTR [ebp-0x18]
  4255b8:	mov    DWORD PTR [ebp-0x18],edx
  4255bb:	mov    edx,DWORD PTR [ebp-0x4]
  4255be:	movzx  edx,WORD PTR [edx]
  4255c1:	mov    DWORD PTR [ebp-0x24],edx
  4255c4:	and    edx,0xfff
  4255ca:	mov    DWORD PTR [ebp-0x28],edx
  4255cd:	mov    edx,DWORD PTR [ebp-0x24]
  4255d0:	shr    edx,0xc
  4255d3:	add    edx,0xffcd8d14
  4255d9:	xor    edx,esi
  4255db:	cmp    edx,0xf89c85b3
  4255e1:	jne    0x425602
  4255e3:	mov    edx,DWORD PTR [ebp-0x28]
  4255e6:	add    edx,DWORD PTR [ebp+0x1c]
  4255e9:	mov    ebx,DWORD PTR [eax]
  4255eb:	cmp    DWORD PTR [ebx+edx*1],0x0
  4255ef:	je     0x4255ff
  4255f1:	mov    ecx,DWORD PTR [ebp+0xc]
  4255f4:	add    ecx,DWORD PTR [ebx+edx*1]
  4255f7:	mov    ebx,DWORD PTR [eax]
  4255f9:	mov    DWORD PTR [edx+ebx*1],ecx
  4255fc:	mov    ecx,DWORD PTR [ebp-0x2c]
  4255ff:	mov    ebx,DWORD PTR [ebp-0x14]
  425602:	add    DWORD PTR [ebp-0x4],0x2
  425606:	dec    DWORD PTR [ebp-0x18]
  425609:	jne    0x4255bb
  42560b:	mov    edx,DWORD PTR [ebp-0xc]
  42560e:	add    DWORD PTR [ebp-0x8],edx
  425611:	mov    edx,DWORD PTR [ebp-0x8]
  425614:	cmp    edx,DWORD PTR [ecx+0xa4]
  42561a:	jae    0x42562d
  42561c:	add    eax,DWORD PTR [ebp-0xc]
  42561f:	mov    edx,DWORD PTR [eax+0x4]
  425622:	mov    DWORD PTR [ebp-0xc],edx
  425625:	test   edx,edx
  425627:	jne    0x4255a5
  42562d:	mov    eax,DWORD PTR [ebp-0x10]
  425630:	mov    DWORD PTR [ebp-0x6c],eax
  425633:	mov    DWORD PTR [ebp-0x70],0x4
  42563a:	mov    eax,DWORD PTR [ecx+0x50]
  42563d:	mov    DWORD PTR [ebp-0x68],eax
  425640:	mov    eax,DWORD PTR [ebp-0x1c]
  425643:	xor    eax,esi
  425645:	add    eax,edi
  425647:	mov    DWORD PTR [ebp-0x64],eax
  42564a:	lea    eax,[ebp-0x20]
  42564d:	mov    DWORD PTR [ebp-0x60],eax
  425650:	lea    eax,[ebp-0x70]
  425653:	push   eax
  425654:	mov    eax,DWORD PTR [ebp+0x8]
  425657:	xor    eax,esi
  425659:	add    eax,edi
  42565b:	push   eax
  42565c:	mov    eax,DWORD PTR [ebp+0x20]
  42565f:	add    eax,0xee
  425664:	push   eax
  425665:	mov    eax,DWORD PTR [ebp+0x20]
  425668:	mov    eax,DWORD PTR [eax+0x198]
  42566e:	push   DWORD PTR [eax]
  425670:	mov    eax,DWORD PTR [ebp+0x10]
  425673:	call   eax
  425675:	mov    eax,DWORD PTR [ebp+0x20]
  425678:	mov    eax,DWORD PTR [eax+0x180]
  42567e:	add    eax,DWORD PTR [ebp+0xc]
  425681:	mov    ecx,DWORD PTR [ebp+0xc]
  425684:	push   DWORD PTR [ebp+0x18]
  425687:	mov    DWORD PTR [eax],ecx
  425689:	push   DWORD PTR [ebp+0x14]
  42568c:	push   DWORD PTR [ebp+0x1c]
  42568f:	call   ebx
  425691:	mov    ecx,DWORD PTR [ebp+0xc]
  425694:	add    ecx,DWORD PTR [ebp+0x20]
  425697:	lea    eax,[ebp+0x4]
  42569a:	mov    DWORD PTR [ebp+0x20],ecx
  42569d:	mov    ecx,DWORD PTR [ebp+0x20]
  4256a0:	mov    ecx,DWORD PTR [ebp+0x20]
  4256a3:	mov    edx,DWORD PTR [ecx+0x190]
  4256a9:	mov    ecx,DWORD PTR [ebp+0x20]
  4256ac:	mov    ecx,DWORD PTR [ecx+0x18c]
  4256b2:	mov    esi,DWORD PTR [ecx]
  4256b4:	cmp    DWORD PTR [eax],esi
  4256b6:	jb     0x4256d7
  4256b8:	mov    esi,DWORD PTR [edx]
  4256ba:	mov    edi,DWORD PTR [edx]
  4256bc:	mov    esi,DWORD PTR [esi+0x3c]
  4256bf:	lea    esi,[edi+esi*1+0x50]
  4256c3:	mov    edi,DWORD PTR [ecx]
  4256c5:	add    edi,DWORD PTR [esi]
  4256c7:	cmp    DWORD PTR [eax],edi
  4256c9:	jae    0x4256d7
  4256cb:	mov    esi,DWORD PTR [ecx]
  4256cd:	mov    ecx,DWORD PTR [eax]
  4256cf:	mov    edx,DWORD PTR [edx]
  4256d1:	sub    ecx,esi
  4256d3:	add    edx,ecx
  4256d5:	mov    DWORD PTR [eax],edx
  4256d7:	mov    eax,DWORD PTR [ebp+0xc]
  4256da:	jmp    0x4256de
  4256dc:	xor    eax,eax
  4256de:	pop    edi
  4256df:	pop    esi
  4256e0:	pop    ebx
  4256e1:	leave  
  4256e2:	ret    0x1c
  4256e5:	push   ebp
  4256e6:	mov    ebp,esp
  4256e8:	sub    esp,0x1c
  4256eb:	push   esi
  4256ec:	mov    esi,eax
  4256ee:	mov    eax,DWORD PTR [ecx+0x190]
  4256f4:	cmp    DWORD PTR [eax],0x0
  4256f7:	je     0x425807
  4256fd:	test   edx,edx
  4256ff:	je     0x425807
  425705:	test   esi,esi
  425707:	je     0x425807
  42570d:	mov    eax,DWORD PTR [esi+0x88]
  425713:	test   eax,eax
  425715:	je     0x425802
  42571b:	cmp    DWORD PTR [esi+0x8c],0x10
  425722:	je     0x425802
  425728:	cmp    DWORD PTR [esi+0x34],edx
  42572b:	je     0x425802
  425731:	mov    esi,DWORD PTR [ecx+0x18c]
  425737:	and    DWORD PTR [ebp-0x10],0x0
  42573b:	mov    ecx,edx
  42573d:	sub    ecx,DWORD PTR [esi]
  42573f:	add    eax,edx
  425741:	movzx  edx,WORD PTR [eax+0xc]
  425745:	mov    DWORD PTR [ebp-0x1c],ecx
  425748:	movzx  ecx,WORD PTR [eax+0xe]
  42574c:	add    ecx,edx
  42574e:	je     0x425802
  425754:	lea    ecx,[eax+0x14]
  425757:	push   ebx
  425758:	mov    DWORD PTR [ebp-0x18],ecx
  42575b:	mov    esi,0x7fffffff
  425760:	push   edi
  425761:	test   DWORD PTR [ecx],esi
  425763:	je     0x4257e4
  425765:	mov    edx,DWORD PTR [ecx]
  425767:	and    DWORD PTR [ebp-0xc],0x0
  42576b:	and    edx,esi
  42576d:	add    edx,eax
  42576f:	movzx  edi,WORD PTR [edx+0xe]
  425773:	movzx  ebx,WORD PTR [edx+0xc]
  425777:	add    edi,ebx
  425779:	je     0x4257e4
  42577b:	lea    ecx,[edx+0x14]
  42577e:	mov    DWORD PTR [ebp-0x14],ecx
  425781:	test   DWORD PTR [ecx],esi
  425783:	je     0x4257c6
  425785:	mov    ecx,DWORD PTR [ecx]
  425787:	and    DWORD PTR [ebp-0x8],0x0
  42578b:	and    ecx,esi
  42578d:	add    ecx,eax
  42578f:	movzx  edi,WORD PTR [ecx+0xe]
  425793:	movzx  ebx,WORD PTR [ecx+0xc]
  425797:	add    edi,ebx
  425799:	je     0x4257c6
  42579b:	lea    edi,[ecx+0x14]
  42579e:	mov    DWORD PTR [ebp-0x4],edi
  4257a1:	mov    edi,DWORD PTR [ebp-0x4]
  4257a4:	mov    edi,DWORD PTR [edi]
  4257a6:	test   edi,edi
  4257a8:	je     0x4257b0
  4257aa:	mov    ebx,DWORD PTR [ebp-0x1c]
  4257ad:	add    DWORD PTR [edi+eax*1],ebx
  4257b0:	movzx  edi,WORD PTR [ecx+0xe]
  4257b4:	movzx  ebx,WORD PTR [ecx+0xc]
  4257b8:	inc    DWORD PTR [ebp-0x8]
  4257bb:	add    DWORD PTR [ebp-0x4],0x8
  4257bf:	add    edi,ebx
  4257c1:	cmp    DWORD PTR [ebp-0x8],edi
  4257c4:	jb     0x4257a1
  4257c6:	movzx  edi,WORD PTR [edx+0xe]
  4257ca:	movzx  ebx,WORD PTR [edx+0xc]
  4257ce:	mov    ecx,DWORD PTR [ebp-0x14]
  4257d1:	inc    DWORD PTR [ebp-0xc]
  4257d4:	add    ecx,0x8
  4257d7:	add    edi,ebx
  4257d9:	mov    DWORD PTR [ebp-0x14],ecx
  4257dc:	cmp    DWORD PTR [ebp-0xc],edi
  4257df:	jb     0x425781
  4257e1:	mov    ecx,DWORD PTR [ebp-0x18]
  4257e4:	movzx  edx,WORD PTR [eax+0xe]
  4257e8:	movzx  edi,WORD PTR [eax+0xc]
  4257ec:	inc    DWORD PTR [ebp-0x10]
  4257ef:	add    ecx,0x8
  4257f2:	add    edx,edi
  4257f4:	mov    DWORD PTR [ebp-0x18],ecx
  4257f7:	cmp    DWORD PTR [ebp-0x10],edx
  4257fa:	jb     0x425761
  425800:	pop    edi
  425801:	pop    ebx
  425802:	xor    eax,eax
  425804:	inc    eax
  425805:	jmp    0x425809
  425807:	xor    eax,eax
  425809:	pop    esi
  42580a:	leave  
  42580b:	ret    
  42580c:	push   ebp
  42580d:	mov    ebp,esp
  42580f:	mov    ecx,DWORD PTR [ecx+0x190]
  425815:	mov    eax,DWORD PTR [ebp+0xc]
  425818:	sub    esp,0x10
  42581b:	push   ebx
  42581c:	xor    ebx,ebx
  42581e:	push   esi
  42581f:	push   edi
  425820:	cmp    DWORD PTR [ecx],ebx
  425822:	je     0x4258aa
  425828:	cmp    eax,ebx
  42582a:	je     0x4258aa
  42582c:	cmp    DWORD PTR [eax+0x78],ebx
  42582f:	jne    0x425836
  425831:	xor    eax,eax
  425833:	inc    eax
  425834:	jmp    0x4258ac
  425836:	mov    eax,DWORD PTR [eax+0x78]
  425839:	add    eax,DWORD PTR [ebp+0x8]
  42583c:	mov    ecx,DWORD PTR [eax+0x1c]
  42583f:	mov    edx,DWORD PTR [eax+0x24]
  425842:	mov    esi,DWORD PTR [eax+0x14]
  425845:	mov    edi,DWORD PTR [eax+0x18]
  425848:	add    ecx,DWORD PTR [ebp+0x8]
  42584b:	add    edx,DWORD PTR [ebp+0x8]
  42584e:	mov    DWORD PTR [ebp-0x4],esi
  425851:	cmp    esi,edi
  425853:	ja     0x425858
  425855:	mov    DWORD PTR [ebp-0x4],edi
  425858:	mov    DWORD PTR [ebp-0x8],ebx
  42585b:	cmp    DWORD PTR [ebp-0x4],ebx
  42585e:	jbe    0x425831
  425860:	cmp    ebx,DWORD PTR [eax+0x14]
  425863:	jae    0x42586b
  425865:	movzx  esi,WORD PTR [edx+ebx*2]
  425869:	jmp    0x42586d
  42586b:	mov    esi,ebx
  42586d:	lea    esi,[ecx+esi*4]
  425870:	mov    edi,DWORD PTR [esi]
  425872:	test   edi,edi
  425874:	je     0x42589f
  425876:	add    edi,DWORD PTR [ebp+0x8]
  425879:	mov    DWORD PTR [ebp-0x10],edi
  42587c:	cmp    edi,eax
  42587e:	jbe    0x425890
  425880:	mov    ebx,DWORD PTR [ebp+0xc]
  425883:	mov    ebx,DWORD PTR [ebx+0x7c]
  425886:	add    ebx,eax
  425888:	cmp    edi,ebx
  42588a:	jae    0x425890
  42588c:	mov    esi,DWORD PTR [esi]
  42588e:	jmp    0x425898
  425890:	sub    edi,DWORD PTR [ebp+0x8]
  425893:	mov    DWORD PTR [esi],edi
  425895:	mov    esi,DWORD PTR [ebp-0x10]
  425898:	test   esi,esi
  42589a:	je     0x4258aa
  42589c:	mov    ebx,DWORD PTR [ebp-0x8]
  42589f:	inc    ebx
  4258a0:	mov    DWORD PTR [ebp-0x8],ebx
  4258a3:	cmp    ebx,DWORD PTR [ebp-0x4]
  4258a6:	jb     0x425860
  4258a8:	jmp    0x425831
  4258aa:	xor    eax,eax
  4258ac:	pop    edi
  4258ad:	pop    esi
  4258ae:	pop    ebx
  4258af:	leave  
  4258b0:	ret    0x8
  4258b3:	push   ebp
  4258b4:	mov    ebp,esp
  4258b6:	sub    esp,0x2c
  4258b9:	mov    edx,0xf89c85b0
  4258be:	mov    DWORD PTR [ebp-0x4],edx
  4258c1:	mov    DWORD PTR [ebp-0x8],0xf89c85b1
  4258c8:	mov    eax,DWORD PTR [ebp-0x4]
  4258cb:	mov    ecx,DWORD PTR [ebp-0x4]
  4258ce:	mov    ecx,DWORD PTR [ebp-0x4]
  4258d1:	mov    ecx,DWORD PTR [ebp-0x4]
  4258d4:	mov    ecx,DWORD PTR [ebp-0x4]
  4258d7:	mov    ecx,DWORD PTR [ebp-0x4]
  4258da:	push   ebx
  4258db:	mov    ebx,DWORD PTR [ebp+0x10]
  4258de:	push   esi
  4258df:	mov    esi,0x75108a4
  4258e4:	mov    DWORD PTR [ebp-0x10],0x352eb2e
  4258eb:	mov    ecx,DWORD PTR [ebp-0x4]
  4258ee:	mov    ebx,DWORD PTR [ebx+0x190]
  4258f4:	push   edi
  4258f5:	mov    edi,0x3272ec
  4258fa:	xor    ecx,esi
  4258fc:	xor    eax,esi
  4258fe:	add    eax,edi
  425900:	add    ecx,edi
  425902:	mov    DWORD PTR [ebp-0x18],eax
  425905:	cmp    ecx,DWORD PTR [ebx]
  425907:	je     0x425b88
  42590d:	mov    ebx,DWORD PTR [ebp-0x4]
  425910:	mov    ecx,DWORD PTR [ebp+0xc]
  425913:	xor    ebx,esi
  425915:	add    ebx,edi
  425917:	cmp    ebx,ecx
  425919:	je     0x425b88
  42591f:	mov    ebx,DWORD PTR [ebp-0x4]
  425922:	mov    ecx,DWORD PTR [ecx+0x80]
  425928:	xor    ebx,esi
  42592a:	add    ebx,edi
  42592c:	cmp    ecx,ebx
  42592e:	je     0x425b83
  425934:	add    ecx,DWORD PTR [ebp+0x8]
  425937:	mov    DWORD PTR [ebp-0x2c],ecx
  42593a:	mov    ebx,edx
  42593c:	xor    ebx,esi
  42593e:	add    ebx,edi
  425940:	mov    DWORD PTR [ebp-0x10],ebx
  425943:	mov    ebx,DWORD PTR [ebp-0x10]
  425946:	cmp    ebx,edx
  425948:	je     0x42595c
  42594a:	mov    edx,DWORD PTR [ebp-0x10]
  42594d:	mov    ebx,DWORD PTR [ebp-0x4]
  425950:	imul   edx,edx,0x14
  425953:	xor    ebx,esi
  425955:	add    ebx,edi
  425957:	cmp    DWORD PTR [edx+ecx*1],ebx
  42595a:	jne    0x425973
  42595c:	mov    edx,DWORD PTR [ebp-0x10]
  42595f:	mov    ebx,DWORD PTR [ebp-0x4]
  425962:	imul   edx,edx,0x14
  425965:	xor    ebx,esi
  425967:	add    ebx,edi
  425969:	cmp    DWORD PTR [edx+ecx*1+0x10],ebx
  42596d:	je     0x425b75
  425973:	mov    eax,DWORD PTR [ebp-0x4]
  425976:	mov    ebx,DWORD PTR [ebp-0x4]
  425979:	mov    eax,DWORD PTR [ebp-0x10]
  42597c:	imul   eax,eax,0x14
  42597f:	add    eax,ecx
  425981:	mov    ecx,DWORD PTR [eax+0x10]
  425984:	add    ecx,DWORD PTR [ebp+0x8]
  425987:	xor    ebx,esi
  425989:	mov    DWORD PTR [ebp-0x1c],ecx
  42598c:	mov    ecx,DWORD PTR [ebp-0x4]
  42598f:	mov    edx,DWORD PTR [ebp-0x4]
  425992:	xor    ecx,esi
  425994:	add    ecx,edi
  425996:	xor    edx,esi
  425998:	mov    DWORD PTR [ebp-0x24],ecx
  42599b:	mov    ecx,DWORD PTR [eax]
  42599d:	add    edx,edi
  42599f:	add    ebx,edi
  4259a1:	cmp    ecx,edx
  4259a3:	je     0x4259ab
  4259a5:	add    ecx,DWORD PTR [ebp+0x8]
  4259a8:	mov    DWORD PTR [ebp-0x24],ecx
  4259ab:	mov    ecx,DWORD PTR [ebp-0x4]
  4259ae:	xor    ecx,esi
  4259b0:	add    ecx,DWORD PTR [eax+0xc]
  4259b3:	mov    eax,DWORD PTR [ebp+0x8]
  4259b6:	lea    eax,[ecx+eax*1+0x3272ec]
  4259bd:	mov    DWORD PTR [ebp+0xc],eax
  4259c0:	mov    DWORD PTR [ebp-0x28],0xf89c85bd
  4259c7:	mov    eax,DWORD PTR [ebp+0x10]
  4259ca:	push   DWORD PTR [ebp+0xc]
  4259cd:	mov    eax,DWORD PTR [eax+0x1d8]
  4259d3:	call   DWORD PTR [eax]
  4259d5:	mov    ecx,DWORD PTR [ebp-0x4]
  4259d8:	xor    ecx,esi
  4259da:	add    ecx,edi
  4259dc:	mov    DWORD PTR [ebp-0xc],eax
  4259df:	cmp    ecx,eax
  4259e1:	jne    0x4259f5
  4259e3:	mov    eax,DWORD PTR [ebp+0x10]
  4259e6:	push   DWORD PTR [ebp+0xc]
  4259e9:	mov    eax,DWORD PTR [eax+0x1d8]
  4259ef:	call   DWORD PTR [eax+0xc]
  4259f2:	mov    DWORD PTR [ebp-0xc],eax
  4259f5:	mov    DWORD PTR [ebp-0x20],0x7f661b29
  4259fc:	mov    DWORD PTR [ebp-0x20],0xf89c9859
  425a03:	mov    eax,DWORD PTR [ebp-0x4]
  425a06:	xor    eax,esi
  425a08:	add    eax,edi
  425a0a:	cmp    eax,DWORD PTR [ebp-0xc]
  425a0d:	jne    0x425a32
  425a0f:	mov    eax,DWORD PTR [ebp-0x8]
  425a12:	mov    ecx,DWORD PTR [ebp-0x20]
  425a15:	xor    eax,esi
  425a17:	xor    ecx,esi
  425a19:	lea    ebx,[ebx+eax*1+0x3272ec]
  425a20:	mov    eax,DWORD PTR [ebp+0x10]
  425a23:	mov    eax,DWORD PTR [eax+0x1d8]
  425a29:	add    ecx,edi
  425a2b:	imul   ecx,ebx
  425a2e:	push   ecx
  425a2f:	call   DWORD PTR [eax+0x24]
  425a32:	mov    eax,DWORD PTR [ebp-0x4]
  425a35:	xor    eax,esi
  425a37:	add    eax,edi
  425a39:	cmp    eax,DWORD PTR [ebp-0xc]
  425a3c:	jne    0x425a4d
  425a3e:	mov    eax,DWORD PTR [ebp-0x28]
  425a41:	xor    eax,esi
  425a43:	add    eax,edi
  425a45:	cmp    ebx,eax
  425a47:	jbe    0x4259c7
  425a4d:	mov    eax,DWORD PTR [ebp-0x4]
  425a50:	xor    eax,esi
  425a52:	add    eax,edi
  425a54:	cmp    eax,DWORD PTR [ebp-0xc]
  425a57:	jne    0x425a70
  425a59:	mov    eax,DWORD PTR [ebp-0x8]
  425a5c:	mov    ecx,DWORD PTR [ebp-0x18]
  425a5f:	xor    eax,esi
  425a61:	lea    eax,[ecx+eax*1+0x3272ec]
  425a68:	mov    DWORD PTR [ebp-0x18],eax
  425a6b:	jmp    0x425b5f
  425a70:	mov    DWORD PTR [ebp-0x14],0x1121b28
  425a77:	mov    DWORD PTR [ebp+0xc],0xe042d2e
  425a7e:	mov    ebx,DWORD PTR [ebp-0x4]
  425a81:	xor    ebx,esi
  425a83:	add    ebx,edi
  425a85:	jmp    0x425b4c
  425a8a:	mov    eax,DWORD PTR [ebp-0x4]
  425a8d:	xor    eax,esi
  425a8f:	add    eax,edi
  425a91:	mov    DWORD PTR [ebp-0x14],eax
  425a94:	mov    eax,DWORD PTR [ebp-0x4]
  425a97:	xor    eax,esi
  425a99:	add    eax,edi
  425a9b:	mov    DWORD PTR [ebp+0xc],eax
  425a9e:	mov    ecx,DWORD PTR [ebp-0x4]
  425aa1:	mov    eax,DWORD PTR [ebp-0x24]
  425aa4:	xor    ecx,esi
  425aa6:	add    ecx,edi
  425aa8:	cmp    ecx,eax
  425aaa:	je     0x425ab2
  425aac:	mov    eax,DWORD PTR [eax+ebx*4]
  425aaf:	mov    DWORD PTR [ebp-0x14],eax
  425ab2:	mov    eax,DWORD PTR [ebp-0x1c]
  425ab5:	mov    eax,DWORD PTR [eax+ebx*4]
  425ab8:	mov    DWORD PTR [ebp+0xc],eax
  425abb:	mov    eax,DWORD PTR [ebp-0x4]
  425abe:	mov    ecx,DWORD PTR [ebp-0x14]
  425ac1:	xor    eax,esi
  425ac3:	add    eax,edi
  425ac5:	cmp    eax,ecx
  425ac7:	je     0x425af2
  425ac9:	mov    eax,DWORD PTR [ebp-0x4]
  425acc:	mov    ecx,DWORD PTR [ebp-0x14]
  425acf:	xor    eax,esi
  425ad1:	add    eax,edi
  425ad3:	shr    ecx,0x1f
  425ad6:	cmp    eax,ecx
  425ad8:	je     0x425af2
  425ada:	mov    ecx,DWORD PTR [ebp-0x14]
  425add:	mov    eax,DWORD PTR [ebp+0x10]
  425ae0:	mov    eax,DWORD PTR [eax+0x1d8]
  425ae6:	movzx  ecx,cx
  425ae9:	push   ecx
  425aea:	push   DWORD PTR [ebp-0xc]
  425aed:	call   DWORD PTR [eax+0x8]
  425af0:	jmp    0x425b0b
  425af2:	mov    eax,DWORD PTR [ebp+0xc]
  425af5:	add    eax,DWORD PTR [ebp+0x8]
  425af8:	mov    ecx,DWORD PTR [ebp+0x10]
  425afb:	mov    ecx,DWORD PTR [ecx+0x1d8]
  425b01:	add    eax,0x2
  425b04:	push   eax
  425b05:	push   DWORD PTR [ebp-0xc]
  425b08:	call   DWORD PTR [ecx+0x8]
  425b0b:	mov    DWORD PTR [ebp+0xc],eax
  425b0e:	mov    eax,DWORD PTR [ebp-0x4]
  425b11:	mov    ecx,DWORD PTR [ebp+0xc]
  425b14:	xor    eax,esi
  425b16:	add    eax,edi
  425b18:	cmp    eax,ecx
  425b1a:	mov    eax,DWORD PTR [ebp-0x8]
  425b1d:	jne    0x425b30
  425b1f:	mov    ecx,DWORD PTR [ebp-0x18]
  425b22:	xor    eax,esi
  425b24:	lea    eax,[ecx+eax*1+0x3272ec]
  425b2b:	mov    DWORD PTR [ebp-0x18],eax
  425b2e:	jmp    0x425b40
  425b30:	mov    ecx,DWORD PTR [ebp+0xc]
  425b33:	xor    eax,esi
  425b35:	add    eax,edi
  425b37:	imul   eax,ecx
  425b3a:	mov    ecx,DWORD PTR [ebp-0x1c]
  425b3d:	mov    DWORD PTR [ecx+ebx*4],eax
  425b40:	mov    eax,DWORD PTR [ebp-0x8]
  425b43:	xor    eax,esi
  425b45:	lea    ebx,[ebx+eax*1+0x3272ec]
  425b4c:	mov    eax,DWORD PTR [ebp-0x4]
  425b4f:	mov    ecx,DWORD PTR [ebp-0x1c]
  425b52:	xor    eax,esi
  425b54:	add    eax,edi
  425b56:	cmp    DWORD PTR [ecx+ebx*4],eax
  425b59:	jne    0x425a8a
  425b5f:	mov    edx,DWORD PTR [ebp-0x10]
  425b62:	mov    ecx,DWORD PTR [ebp-0x2c]
  425b65:	mov    eax,DWORD PTR [ebp-0x18]
  425b68:	sub    edx,0x3272eb
  425b6e:	xor    edx,esi
  425b70:	jmp    0x42593a
  425b75:	mov    ecx,DWORD PTR [ebp-0x4]
  425b78:	xor    ecx,esi
  425b7a:	add    ecx,edi
  425b7c:	cmp    eax,ecx
  425b7e:	mov    eax,DWORD PTR [ebp-0x4]
  425b81:	jne    0x425b8b
  425b83:	mov    eax,DWORD PTR [ebp-0x8]
  425b86:	jmp    0x425b8b
  425b88:	mov    eax,DWORD PTR [ebp-0x4]
  425b8b:	xor    eax,esi
  425b8d:	add    eax,edi
  425b8f:	pop    edi
  425b90:	pop    esi
  425b91:	pop    ebx
  425b92:	leave  
  425b93:	ret    0xc
  425b96:	push   ebp
  425b97:	mov    ebp,esp
  425b99:	sub    esp,0x28
  425b9c:	mov    DWORD PTR [ebp-0x4],0xf89c85b0
  425ba3:	mov    DWORD PTR [ebp-0x28],0xf89c85b1
  425baa:	mov    eax,DWORD PTR [ebp+0xc]
  425bad:	mov    DWORD PTR [ebp+0xc],eax
  425bb0:	push   esi
  425bb1:	mov    eax,eax
  425bb3:	mov    eax,DWORD PTR [ebp-0x4]
  425bb6:	mov    esi,DWORD PTR [ebp+0x8]
  425bb9:	mov    ecx,0x75108a4
  425bbe:	xor    eax,ecx
  425bc0:	mov    edx,0x3272ec
  425bc5:	add    eax,edx
  425bc7:	cmp    esi,eax
  425bc9:	je     0x425cf0
  425bcf:	mov    eax,DWORD PTR [ebp+0x8]
  425bd2:	mov    esi,DWORD PTR [ebp+0x8]
  425bd5:	add    esi,DWORD PTR [eax+0x3c]
  425bd8:	push   edi
  425bd9:	mov    DWORD PTR [ebp+0xc],esi
  425bdc:	mov    DWORD PTR [ebp-0x1c],0xf89c85bd
  425be3:	mov    eax,DWORD PTR [ebp-0x1c]
  425be6:	mov    esi,DWORD PTR [ebp-0x4]
  425be9:	mov    edi,DWORD PTR [ebp+0xc]
  425bec:	xor    esi,ecx
  425bee:	xor    eax,ecx
  425bf0:	add    esi,edx
  425bf2:	cmp    DWORD PTR [edi+eax*8+0x19397d8],esi
  425bf9:	je     0x425cea
  425bff:	mov    esi,DWORD PTR [ebp+0xc]
  425c02:	mov    eax,DWORD PTR [ebp+0x8]
  425c05:	add    eax,DWORD PTR [esi+0xa0]
  425c0b:	mov    esi,DWORD PTR [ebp+0x8]
  425c0e:	mov    edi,DWORD PTR [ebp+0xc]
  425c11:	sub    esi,DWORD PTR [edi+0x34]
  425c14:	mov    edi,DWORD PTR [ebp-0x4]
  425c17:	xor    edi,ecx
  425c19:	add    edi,edx
  425c1b:	mov    DWORD PTR [ebp-0x24],esi
  425c1e:	cmp    esi,edi
  425c20:	je     0x425cea
  425c26:	mov    esi,DWORD PTR [ebp-0x4]
  425c29:	xor    esi,ecx
  425c2b:	add    esi,edx
  425c2d:	mov    DWORD PTR [ebp-0x8],esi
  425c30:	push   ebx
  425c31:	mov    DWORD PTR [ebp-0x10],0xf89c85b3
  425c38:	jmp    0x425cd4
  425c3d:	mov    esi,DWORD PTR [ebp-0x4]
  425c40:	xor    esi,ecx
  425c42:	lea    edi,[ebx-0x8]
  425c45:	add    esi,edx
  425c47:	shr    edi,1
  425c49:	cmp    esi,edi
  425c4b:	jae    0x425cba
  425c4d:	sub    edi,esi
  425c4f:	lea    ebx,[eax+esi*2+0x8]
  425c53:	mov    DWORD PTR [ebp-0x18],edi
  425c56:	movzx  esi,WORD PTR [ebx]
  425c59:	and    esi,0xfff
  425c5f:	mov    DWORD PTR [ebp-0x14],esi
  425c62:	mov    edi,DWORD PTR [ebp-0x14]
  425c65:	mov    esi,DWORD PTR [eax]
  425c67:	sub    esi,edx
  425c69:	add    edi,esi
  425c6b:	movzx  esi,WORD PTR [ebx]
  425c6e:	shr    esi,0xc
  425c71:	xor    edi,ecx
  425c73:	mov    DWORD PTR [ebp-0x20],edi
  425c76:	mov    DWORD PTR [ebp-0x14],esi
  425c79:	mov    esi,DWORD PTR [ebp-0x20]
  425c7c:	mov    edi,DWORD PTR [ebp+0x8]
  425c7f:	xor    esi,ecx
  425c81:	lea    esi,[esi+edi*1+0x3272ec]
  425c88:	mov    DWORD PTR [ebp-0x20],esi
  425c8b:	mov    esi,DWORD PTR [ebp-0x10]
  425c8e:	mov    edi,DWORD PTR [ebp-0x14]
  425c91:	xor    esi,ecx
  425c93:	add    esi,edx
  425c95:	cmp    edi,esi
  425c97:	jne    0x425caf
  425c99:	mov    esi,DWORD PTR [ebp-0x10]
  425c9c:	mov    edi,DWORD PTR [ebp-0x14]
  425c9f:	xor    esi,ecx
  425ca1:	add    esi,edx
  425ca3:	cmp    edi,esi
  425ca5:	jne    0x425caf
  425ca7:	mov    esi,DWORD PTR [ebp-0x20]
  425caa:	mov    edi,DWORD PTR [ebp-0x24]
  425cad:	add    DWORD PTR [esi],edi
  425caf:	add    ebx,0x2
  425cb2:	dec    DWORD PTR [ebp-0x18]
  425cb5:	jne    0x425c56
  425cb7:	mov    ebx,DWORD PTR [ebp-0xc]
  425cba:	add    DWORD PTR [ebp-0x8],ebx
  425cbd:	mov    esi,DWORD PTR [ebp-0x1c]
  425cc0:	mov    edi,DWORD PTR [ebp-0x8]
  425cc3:	mov    ebx,DWORD PTR [ebp+0xc]
  425cc6:	xor    esi,ecx
  425cc8:	cmp    edi,DWORD PTR [ebx+esi*8+0x19397dc]
  425ccf:	jae    0x425ce9
  425cd1:	add    eax,DWORD PTR [ebp-0xc]
  425cd4:	mov    esi,DWORD PTR [ebp-0x4]
  425cd7:	mov    ebx,DWORD PTR [eax+0x4]
  425cda:	xor    esi,ecx
  425cdc:	add    esi,edx
  425cde:	mov    DWORD PTR [ebp-0xc],ebx
  425ce1:	cmp    ebx,esi
  425ce3:	jne    0x425c3d
  425ce9:	pop    ebx
  425cea:	mov    eax,DWORD PTR [ebp-0x28]
  425ced:	pop    edi
  425cee:	jmp    0x425cf3
  425cf0:	mov    eax,DWORD PTR [ebp-0x4]
  425cf3:	xor    eax,ecx
  425cf5:	add    eax,edx
  425cf7:	pop    esi
  425cf8:	leave  
  425cf9:	ret    0x8
  425cfc:	push   ebp
  425cfd:	mov    ebp,esp
  425cff:	sub    esp,0xd8
  425d05:	mov    DWORD PTR [ebp-0x4],0xf89c85b0
  425d0c:	mov    DWORD PTR [ebp-0x24],0xf89c85b1
  425d13:	mov    eax,DWORD PTR [ebp-0x4]
  425d16:	push   ebx
  425d17:	push   esi
  425d18:	mov    esi,0x75108a4
  425d1d:	xor    eax,esi
  425d1f:	push   edi
  425d20:	mov    edi,0x3272ec
  425d25:	add    eax,edi
  425d27:	mov    DWORD PTR [ebp-0x18],eax
  425d2a:	mov    eax,DWORD PTR [ebp-0x4]
  425d2d:	xor    eax,esi
  425d2f:	add    eax,edi
  425d31:	mov    DWORD PTR [ebp-0x8],eax
  425d34:	mov    ebx,DWORD PTR [ebp+0x20]
  425d37:	mov    eax,DWORD PTR [ebp-0x1c]
  425d3a:	mov    ecx,DWORD PTR [ebp-0x1c]
  425d3d:	xor    eax,ecx
  425d3f:	mov    DWORD PTR [ebp-0x1c],eax
  425d42:	add    DWORD PTR [ebp-0x1c],0xf89cb5b0
  425d49:	mov    eax,DWORD PTR [ebp-0xc]
  425d4c:	mov    ecx,DWORD PTR [ebp-0xc]
  425d4f:	xor    eax,ecx
  425d51:	mov    DWORD PTR [ebp-0xc],eax
  425d54:	add    DWORD PTR [ebp-0xc],0xf89c85f0
  425d5b:	mov    eax,DWORD PTR [ebp-0x10]
  425d5e:	mov    ecx,DWORD PTR [ebp-0x10]
  425d61:	xor    eax,ecx
  425d63:	mov    DWORD PTR [ebp-0x10],eax
  425d66:	add    DWORD PTR [ebp-0x10],0xf89c85bc
  425d6d:	mov    eax,DWORD PTR [ebp-0x28]
  425d70:	mov    ecx,DWORD PTR [ebp-0x28]
  425d73:	xor    eax,ecx
  425d75:	mov    DWORD PTR [ebp-0x28],eax
  425d78:	add    DWORD PTR [ebp-0x28],0xf89f05b0
  425d7f:	mov    DWORD PTR [ebp+0x20],0xf89cefc5
  425d86:	mov    eax,DWORD PTR [ebp+0x8]
  425d89:	test   eax,eax
  425d8b:	je     0x426216
  425d91:	mov    eax,DWORD PTR [ebp+0xc]
  425d94:	test   eax,eax
  425d96:	je     0x426216
  425d9c:	mov    eax,DWORD PTR [ebp+0x18]
  425d9f:	test   eax,eax
  425da1:	je     0x426216
  425da7:	mov    eax,DWORD PTR [ebp+0x20]
  425daa:	mov    ecx,DWORD PTR [ebp+0x8]
  425dad:	xor    eax,0x8a4
  425db2:	add    eax,0x72ec
  425db7:	cmp    WORD PTR [ecx],ax
  425dba:	jne    0x426216
  425dc0:	mov    eax,DWORD PTR [ebp-0x4]
  425dc3:	xor    eax,esi
  425dc5:	add    eax,edi
  425dc7:	mov    DWORD PTR [ebp-0x30],eax
  425dca:	mov    eax,DWORD PTR [ebp-0x4]
  425dcd:	mov    ecx,DWORD PTR [ebp+0x8]
  425dd0:	mov    eax,DWORD PTR [ebp+0x8]
  425dd3:	add    eax,DWORD PTR [ecx+0x3c]
  425dd6:	mov    DWORD PTR [ebp+0xc],eax
  425dd9:	mov    eax,DWORD PTR [eax+0x50]
  425ddc:	test   eax,eax
  425dde:	je     0x426216
  425de4:	mov    DWORD PTR [ebp-0x2c],0xf88c85b0
  425deb:	mov    eax,DWORD PTR [ebp-0x2c]
  425dee:	xor    eax,esi
  425df0:	add    eax,edi
  425df2:	mov    DWORD PTR [ebp-0x2c],eax
  425df5:	mov    eax,DWORD PTR [ebp-0x4]
  425df8:	mov    eax,DWORD PTR [ebx+0x190]
  425dfe:	mov    ecx,DWORD PTR [eax]
  425e00:	mov    ecx,DWORD PTR [ecx+0x3c]
  425e03:	add    ecx,DWORD PTR [eax]
  425e05:	mov    eax,DWORD PTR [ebp-0x4]
  425e08:	mov    eax,DWORD PTR [ebx+0x18c]
  425e0e:	mov    edx,DWORD PTR [eax]
  425e10:	mov    DWORD PTR [ebp-0x20],ecx
  425e13:	mov    DWORD PTR [ebp+0x20],edx
  425e16:	cmp    edx,edx
  425e18:	jne    0x425e4c
  425e1a:	mov    eax,DWORD PTR [ebx+0x1d8]
  425e20:	lea    edx,[ebp-0x18]
  425e23:	push   edx
  425e24:	mov    edx,DWORD PTR [ebp-0xc]
  425e27:	xor    edx,esi
  425e29:	add    edx,edi
  425e2b:	push   edx
  425e2c:	push   DWORD PTR [ecx+0x50]
  425e2f:	push   DWORD PTR [ebp+0x20]
  425e32:	call   DWORD PTR [eax+0x1c]
  425e35:	mov    eax,DWORD PTR [ebp-0x20]
  425e38:	mov    ecx,DWORD PTR [eax+0x54]
  425e3b:	mov    eax,DWORD PTR [eax+0x50]
  425e3e:	sub    eax,ecx
  425e40:	add    ecx,DWORD PTR [ebp+0x20]
  425e43:	push   ecx
  425e44:	call   0x4267b3
  425e49:	mov    edx,DWORD PTR [ebp+0x20]
  425e4c:	mov    eax,DWORD PTR [ebx+0x194]
  425e52:	mov    DWORD PTR [eax],edx
  425e54:	mov    eax,DWORD PTR [ebp+0xc]
  425e57:	push   DWORD PTR [eax+0x54]
  425e5a:	push   DWORD PTR [ebp+0x8]
  425e5d:	push   edx
  425e5e:	call   0x4266a9
  425e63:	mov    ecx,DWORD PTR [ebp+0x20]
  425e66:	mov    eax,DWORD PTR [ecx+0x3c]
  425e69:	add    eax,ecx
  425e6b:	movzx  ecx,WORD PTR [eax+0x14]
  425e6f:	lea    ecx,[ecx+eax*1+0x18]
  425e73:	mov    DWORD PTR [ebp+0x18],ecx
  425e76:	mov    ecx,DWORD PTR [ebp-0x4]
  425e79:	movzx  edx,WORD PTR [eax+0x6]
  425e7d:	xor    ecx,esi
  425e7f:	add    ecx,edi
  425e81:	mov    DWORD PTR [ebp+0xc],eax
  425e84:	cmp    edx,ecx
  425e86:	je     0x425f33
  425e8c:	mov    ecx,DWORD PTR [ebp-0x4]
  425e8f:	xor    ecx,esi
  425e91:	add    ecx,edi
  425e93:	mov    DWORD PTR [ebp-0x8],ecx
  425e96:	mov    ecx,DWORD PTR [ebp-0x24]
  425e99:	movzx  edx,WORD PTR [eax+0x6]
  425e9d:	xor    ecx,esi
  425e9f:	sub    edx,ecx
  425ea1:	sub    edx,edi
  425ea3:	cmp    DWORD PTR [ebp-0x8],edx
  425ea6:	ja     0x425f33
  425eac:	mov    edx,DWORD PTR [ebp+0x18]
  425eaf:	add    edx,0x8
  425eb2:	mov    DWORD PTR [ebp+0x18],edx
  425eb5:	jmp    0x425eba
  425eb7:	mov    edx,DWORD PTR [ebp+0x18]
  425eba:	mov    eax,DWORD PTR [eax+0x38]
  425ebd:	lea    ecx,[eax-0x1]
  425ec0:	mov    DWORD PTR [ebp-0x38],eax
  425ec3:	mov    eax,DWORD PTR [edx]
  425ec5:	test   eax,ecx
  425ec7:	je     0x425ed0
  425ec9:	not    ecx
  425ecb:	and    eax,ecx
  425ecd:	add    eax,DWORD PTR [ebp-0x38]
  425ed0:	mov    ecx,DWORD PTR [edx+0x4]
  425ed3:	add    ecx,DWORD PTR [ebp+0x20]
  425ed6:	push   ecx
  425ed7:	call   0x4267b3
  425edc:	mov    edx,DWORD PTR [ebp-0x4]
  425edf:	mov    eax,DWORD PTR [ebp+0x18]
  425ee2:	mov    ecx,DWORD PTR [eax+0x8]
  425ee5:	xor    edx,esi
  425ee7:	add    edx,edi
  425ee9:	cmp    ecx,edx
  425eeb:	je     0x425f04
  425eed:	push   ecx
  425eee:	mov    ecx,DWORD PTR [ebp+0x8]
  425ef1:	add    ecx,DWORD PTR [eax+0xc]
  425ef4:	mov    eax,DWORD PTR [eax+0x4]
  425ef7:	add    eax,DWORD PTR [ebp+0x20]
  425efa:	push   ecx
  425efb:	push   eax
  425efc:	call   0x4266a9
  425f01:	mov    eax,DWORD PTR [ebp+0x18]
  425f04:	mov    ecx,DWORD PTR [ebp-0x24]
  425f07:	mov    edx,DWORD PTR [ebp-0x8]
  425f0a:	add    eax,0x28
  425f0d:	xor    ecx,esi
  425f0f:	lea    ecx,[edx+ecx*1+0x3272ec]
  425f16:	mov    edx,DWORD PTR [ebp+0xc]
  425f19:	mov    DWORD PTR [ebp+0x18],eax
  425f1c:	mov    eax,DWORD PTR [ebp-0x24]
  425f1f:	movzx  edx,WORD PTR [edx+0x6]
  425f23:	xor    eax,esi
  425f25:	sub    edx,eax
  425f27:	mov    eax,DWORD PTR [ebp+0xc]
  425f2a:	sub    edx,edi
  425f2c:	mov    DWORD PTR [ebp-0x8],ecx
  425f2f:	cmp    ecx,edx
  425f31:	jbe    0x425eb7
  425f33:	mov    edx,DWORD PTR [ebx+0x18c]
  425f39:	mov    ecx,DWORD PTR [ebp+0x20]
  425f3c:	cmp    ecx,DWORD PTR [edx]
  425f3e:	jne    0x425f67
  425f40:	mov    eax,DWORD PTR [ebx+0x1d8]
  425f46:	lea    edx,[ebp-0x18]
  425f49:	push   edx
  425f4a:	mov    edx,DWORD PTR [ebp-0x10]
  425f4d:	xor    edx,esi
  425f4f:	add    edx,edi
  425f51:	push   edx
  425f52:	mov    edx,DWORD PTR [ebp-0x20]
  425f55:	push   DWORD PTR [edx+0x54]
  425f58:	push   ecx
  425f59:	call   DWORD PTR [eax+0x1c]
  425f5c:	test   eax,eax
  425f5e:	je     0x426207
  425f64:	mov    eax,DWORD PTR [ebp+0xc]
  425f67:	mov    ecx,DWORD PTR [ebx+0x1c8]
  425f6d:	mov    ecx,DWORD PTR [ecx]
  425f6f:	xor    ecx,esi
  425f71:	add    ecx,edi
  425f73:	je     0x426132
  425f79:	mov    eax,DWORD PTR [ebp-0x4]
  425f7c:	xor    eax,esi
  425f7e:	add    eax,edi
  425f80:	and    DWORD PTR [ebp+0x8],0x0
  425f84:	mov    DWORD PTR [ebp-0x14],eax
  425f87:	mov    ecx,0xf89c8524
  425f8c:	mov    eax,0xf89c85dc
  425f91:	mov    DWORD PTR [ebp-0x58],0xf89c8526
  425f98:	mov    DWORD PTR [ebp-0x54],0xf89c852c
  425f9f:	mov    DWORD PTR [ebp-0x50],eax
  425fa2:	mov    DWORD PTR [ebp-0x4c],ecx
  425fa5:	mov    DWORD PTR [ebp-0x48],ecx
  425fa8:	mov    DWORD PTR [ebp-0x44],0xf89c85b0
  425faf:	mov    edx,DWORD PTR [ebp+0x8]
  425fb2:	mov    ecx,0x8a4
  425fb7:	xor    cx,WORD PTR [ebp+edx*4-0x58]
  425fbc:	mov    edx,0x72ec
  425fc1:	add    cx,dx
  425fc4:	mov    edx,DWORD PTR [ebp+0x8]
  425fc7:	inc    DWORD PTR [ebp+0x8]
  425fca:	cmp    DWORD PTR [ebp+0x8],0x6
  425fce:	mov    WORD PTR [ebp+edx*2-0xc0],cx
  425fd6:	jb     0x425faf
  425fd8:	mov    ecx,0xf89c8522
  425fdd:	mov    DWORD PTR [ebp-0xb0],eax
  425fe3:	mov    DWORD PTR [ebp-0x9c],eax
  425fe9:	mov    DWORD PTR [ebp-0x74],eax
  425fec:	mov    DWORD PTR [ebp-0x70],eax
  425fef:	lea    eax,[ecx+0x1]
  425ff2:	mov    edx,0xf89c85fe
  425ff7:	mov    DWORD PTR [ebp-0x64],eax
  425ffa:	mov    DWORD PTR [ebp-0x60],eax
  425ffd:	mov    DWORD PTR [ebp-0xb4],0xf89c85c4
  426007:	mov    DWORD PTR [ebp-0xac],ecx
  42600d:	mov    DWORD PTR [ebp-0xa8],edx
  426013:	mov    DWORD PTR [ebp-0xa4],0xf89c85d9
  42601d:	mov    DWORD PTR [ebp-0xa0],0xf89c8526
  426027:	mov    DWORD PTR [ebp-0x98],0xf89c85fd
  426031:	mov    DWORD PTR [ebp-0x94],0xf89c8526
  42603b:	mov    DWORD PTR [ebp-0x90],0xf89c852c
  426045:	mov    DWORD PTR [ebp-0x8c],ecx
  42604b:	mov    DWORD PTR [ebp-0x88],0xf89c8529
  426055:	mov    DWORD PTR [ebp-0x84],edx
  42605b:	mov    DWORD PTR [ebp-0x80],0xf89c8527
  426062:	mov    DWORD PTR [ebp-0x7c],ecx
  426065:	mov    DWORD PTR [ebp-0x78],0xf89c85f1
  42606c:	mov    DWORD PTR [ebp-0x6c],ecx
  42606f:	mov    DWORD PTR [ebp-0x68],0xf89c85dd
  426076:	mov    DWORD PTR [ebp-0x5c],0xf89c85b0
  42607d:	xor    eax,eax
  42607f:	mov    cl,BYTE PTR [ebp+eax*4-0xb4]
  426086:	xor    cl,0xa4
  426089:	sub    cl,0x14
  42608c:	mov    BYTE PTR [ebp+eax*1-0xd8],cl
  426093:	inc    eax
  426094:	cmp    eax,0x17
  426097:	jb     0x42607f
  426099:	mov    eax,DWORD PTR [ebx+0x1d8]
  42609f:	lea    ecx,[ebp-0xc0]
  4260a5:	push   ecx
  4260a6:	call   DWORD PTR [eax+0x4]
  4260a9:	mov    ecx,DWORD PTR [ebx+0x1d8]
  4260af:	lea    edx,[ebp-0xd8]
  4260b5:	push   edx
  4260b6:	push   eax
  4260b7:	call   DWORD PTR [ecx+0x8]
  4260ba:	mov    DWORD PTR [ebp-0x40],eax
  4260bd:	lea    eax,[ebp-0x14]
  4260c0:	push   eax
  4260c1:	mov    eax,DWORD PTR [ebx+0x18c]
  4260c7:	push   DWORD PTR [eax]
  4260c9:	mov    eax,DWORD PTR [ebp-0x40]
  4260cc:	call   eax
  4260ce:	mov    eax,DWORD PTR [ebp-0x4]
  4260d1:	xor    eax,esi
  4260d3:	add    eax,edi
  4260d5:	mov    DWORD PTR [ebp-0x34],eax
  4260d8:	mov    ecx,DWORD PTR [ebp-0x4]
  4260db:	mov    eax,DWORD PTR [ebp-0x14]
  4260de:	xor    ecx,esi
  4260e0:	add    ecx,edi
  4260e2:	cmp    eax,ecx
  4260e4:	je     0x42612f
  4260e6:	mov    DWORD PTR [ebp-0x3c],eax
  4260e9:	jmp    0x4260fa
  4260eb:	mov    eax,DWORD PTR [eax]
  4260ed:	mov    ecx,DWORD PTR [ebp-0x3c]
  4260f0:	mov    DWORD PTR [ebp-0x14],eax
  4260f3:	mov    eax,DWORD PTR [ebp-0x14]
  4260f6:	cmp    eax,ecx
  4260f8:	je     0x426107
  4260fa:	mov    edx,DWORD PTR [eax+0x18]
  4260fd:	mov    ecx,DWORD PTR [ebx+0x18c]
  426103:	cmp    edx,DWORD PTR [ecx]
  426105:	jne    0x4260eb
  426107:	mov    ecx,DWORD PTR [ebx+0x18c]
  42610d:	mov    edx,DWORD PTR [eax+0x18]
  426110:	cmp    edx,DWORD PTR [ecx]
  426112:	jne    0x42612f
  426114:	mov    ecx,DWORD PTR [ebx+0x190]
  42611a:	mov    edx,DWORD PTR [ebp-0x20]
  42611d:	mov    edx,DWORD PTR [edx+0x28]
  426120:	add    edx,DWORD PTR [ecx]
  426122:	mov    DWORD PTR [eax+0x1c],edx
  426125:	mov    eax,DWORD PTR [ebp-0x24]
  426128:	xor    eax,esi
  42612a:	add    eax,edi
  42612c:	mov    DWORD PTR [ebp-0x34],eax
  42612f:	mov    eax,DWORD PTR [ebp+0xc]
  426132:	push   ebx
  426133:	push   eax
  426134:	push   DWORD PTR [ebp+0x20]
  426137:	call   0x4258b3
  42613c:	test   eax,eax
  42613e:	je     0x426207
  426144:	push   DWORD PTR [ebp+0xc]
  426147:	mov    ecx,ebx
  426149:	push   DWORD PTR [ebp+0x20]
  42614c:	call   0x42580c
  426151:	test   eax,eax
  426153:	je     0x426207
  426159:	mov    eax,DWORD PTR [ebp+0xc]
  42615c:	mov    edx,DWORD PTR [ebp+0x20]
  42615f:	mov    ecx,ebx
  426161:	call   0x4256e5
  426166:	test   eax,eax
  426168:	je     0x426207
  42616e:	push   ebx
  42616f:	push   DWORD PTR [ebp+0x20]
  426172:	call   0x425b96
  426177:	test   eax,eax
  426179:	je     0x426207
  42617f:	mov    eax,DWORD PTR [ebx+0x18c]
  426185:	mov    edx,DWORD PTR [ebp+0x20]
  426188:	cmp    edx,DWORD PTR [eax]
  42618a:	jne    0x4261a6
  42618c:	mov    eax,DWORD PTR [ebx+0x1d8]
  426192:	lea    ecx,[ebp-0x18]
  426195:	push   ecx
  426196:	push   DWORD PTR [ebp-0x18]
  426199:	mov    ecx,DWORD PTR [ebp-0x20]
  42619c:	push   DWORD PTR [ecx+0x54]
  42619f:	push   edx
  4261a0:	call   DWORD PTR [eax+0x1c]
  4261a3:	mov    edx,DWORD PTR [ebp+0x20]
  4261a6:	mov    eax,DWORD PTR [ebx+0x1c8]
  4261ac:	mov    eax,DWORD PTR [eax]
  4261ae:	xor    eax,esi
  4261b0:	add    eax,edi
  4261b2:	je     0x4261eb
  4261b4:	mov    ecx,DWORD PTR [ebp+0xc]
  4261b7:	mov    eax,DWORD PTR [ecx+0x28]
  4261ba:	mov    DWORD PTR [ebp+0x8],0xf89ca5b0
  4261c1:	mov    esi,DWORD PTR [ebp+0x8]
  4261c4:	push   DWORD PTR [ebp+0x14]
  4261c7:	xor    esi,0x8a4
  4261cd:	push   DWORD PTR [ebp+0x10]
  4261d0:	add    esi,0x72ec
  4261d6:	or     WORD PTR [ecx+0x16],si
  4261da:	add    eax,edx
  4261dc:	push   edx
  4261dd:	call   eax
  4261df:	mov    DWORD PTR [ebx+0x1d0],0xf89c85b1
  4261e9:	jmp    0x4261f5
  4261eb:	mov    eax,DWORD PTR [ebp+0xc]
  4261ee:	mov    eax,DWORD PTR [eax+0x28]
  4261f1:	add    eax,edx
  4261f3:	call   eax
  4261f5:	mov    DWORD PTR [ebp-0x8],eax
  4261f8:	mov    eax,DWORD PTR [ebp-0x8]
  4261fb:	mov    ecx,DWORD PTR [ebp+0x1c]
  4261fe:	mov    DWORD PTR [ecx],eax
  426200:	mov    DWORD PTR [ebp-0x30],0x1
  426207:	cmp    DWORD PTR [ebp-0x30],0x0
  42620b:	jne    0x426211
  42620d:	and    DWORD PTR [ebp+0x20],0x0
  426211:	mov    eax,DWORD PTR [ebp+0x20]
  426214:	jmp    0x426218
  426216:	xor    eax,eax
  426218:	pop    edi
  426219:	pop    esi
  42621a:	pop    ebx
  42621b:	leave  
  42621c:	ret    0x1c
  42621f:	push   ebp
  426220:	mov    ebp,esp
  426222:	movzx  edx,WORD PTR [ecx+0x6]
  426226:	movzx  eax,WORD PTR [ecx+0x14]
  42622a:	push   ebx
  42622b:	push   edi
  42622c:	xor    edi,edi
  42622e:	lea    eax,[eax+ecx*1+0x18]
  426232:	test   edx,edx
  426234:	je     0x426255
  426236:	mov    ecx,DWORD PTR [eax+0xc]
  426239:	lea    ebx,[ecx+esi*1]
  42623c:	cmp    DWORD PTR [ebp+0x8],ebx
  42623f:	jb     0x42624d
  426241:	mov    ebx,DWORD PTR [eax+0x8]
  426244:	add    ebx,ecx
  426246:	add    ebx,esi
  426248:	cmp    DWORD PTR [ebp+0x8],ebx
  42624b:	jb     0x426257
  42624d:	add    eax,0x28
  426250:	inc    edi
  426251:	cmp    edi,edx
  426253:	jb     0x426236
  426255:	xor    eax,eax
  426257:	pop    edi
  426258:	pop    ebx
  426259:	pop    ebp
  42625a:	ret    0x4
  42625d:	push   ebp
  42625e:	mov    ebp,esp
  426260:	sub    esp,0x34
  426263:	mov    DWORD PTR [ebp-0xc],0xf89c85b0
  42626a:	mov    DWORD PTR [ebp-0x18],0xf89c85b1
  426271:	mov    DWORD PTR [ebp-0x1c],0xf89c85b2
  426278:	mov    DWORD PTR [ebp-0x8],0xf89c85d1
  42627f:	mov    DWORD PTR [ebp-0x20],0xf89c85f1
  426286:	mov    DWORD PTR [ebp-0x2c],0xf89c852a
  42628d:	mov    DWORD PTR [ebp-0x2c],0xf89c85ca
  426294:	mov    DWORD PTR [ebp-0x10],eax
  426297:	mov    eax,DWORD PTR [ebp+0x8]
  42629a:	mov    DWORD PTR [ebp-0x14],eax
  42629d:	mov    eax,DWORD PTR [ebp-0xc]
  4262a0:	push   ebx
  4262a1:	mov    ecx,0x75108a4
  4262a6:	xor    eax,ecx
  4262a8:	push   esi
  4262a9:	mov    esi,DWORD PTR [ebp-0x10]
  4262ac:	mov    edx,0x3272ec
  4262b1:	add    eax,edx
  4262b3:	push   edi
  4262b4:	cmp    esi,eax
  4262b6:	je     0x426495
  4262bc:	mov    eax,DWORD PTR [ebp-0xc]
  4262bf:	mov    esi,DWORD PTR [ebp-0x14]
  4262c2:	xor    eax,ecx
  4262c4:	add    eax,edx
  4262c6:	cmp    esi,eax
  4262c8:	je     0x426495
  4262ce:	mov    eax,DWORD PTR [ebp-0xc]
  4262d1:	xor    eax,ecx
  4262d3:	add    eax,edx
  4262d5:	mov    DWORD PTR [ebp-0x24],eax
  4262d8:	mov    eax,DWORD PTR [ebp-0xc]
  4262db:	xor    eax,ecx
  4262dd:	add    eax,edx
  4262df:	mov    DWORD PTR [ebp-0x28],eax
  4262e2:	mov    edi,DWORD PTR [ebp-0x20]
  4262e5:	mov    ebx,DWORD PTR [ebp-0x8]
  4262e8:	mov    esi,0x8a4
  4262ed:	xor    edi,esi
  4262ef:	mov    eax,0x72ec
  4262f4:	xor    ebx,esi
  4262f6:	add    edi,eax
  4262f8:	add    ebx,eax
  4262fa:	sub    ebx,edi
  4262fc:	mov    WORD PTR [ebp-0x8],bx
  426300:	jmp    0x4263c5
  426305:	mov    edi,DWORD PTR [ebp-0xc]
  426308:	mov    bx,WORD PTR [ebp-0x4]
  42630c:	xor    edi,esi
  42630e:	add    edi,eax
  426310:	cmp    bx,di
  426313:	je     0x426407
  426319:	mov    edi,DWORD PTR [ebp-0xc]
  42631c:	mov    ebx,DWORD PTR [ebp+0xc]
  42631f:	xor    edi,ecx
  426321:	add    edi,edx
  426323:	cmp    ebx,edi
  426325:	mov    di,WORD PTR [ebp-0x4]
  426329:	mov    bx,WORD PTR [ebp+0x8]
  42632d:	je     0x426398
  42632f:	cmp    bx,di
  426332:	je     0x4263a1
  426334:	mov    edi,DWORD PTR [ebp-0x20]
  426337:	mov    bx,WORD PTR [ebp+0x8]
  42633b:	xor    edi,esi
  42633d:	add    edi,eax
  42633f:	cmp    bx,di
  426342:	jb     0x426362
  426344:	mov    edi,DWORD PTR [ebp-0x2c]
  426347:	mov    bx,WORD PTR [ebp+0x8]
  42634b:	xor    edi,esi
  42634d:	add    edi,eax
  42634f:	cmp    bx,di
  426352:	ja     0x426362
  426354:	movzx  edi,WORD PTR [ebp+0x8]
  426358:	movzx  ebx,WORD PTR [ebp-0x8]
  42635c:	add    edi,ebx
  42635e:	mov    WORD PTR [ebp+0x8],di
  426362:	mov    edi,DWORD PTR [ebp-0x20]
  426365:	mov    bx,WORD PTR [ebp-0x4]
  426369:	xor    edi,esi
  42636b:	add    edi,eax
  42636d:	cmp    bx,di
  426370:	jb     0x426390
  426372:	mov    edi,DWORD PTR [ebp-0x2c]
  426375:	mov    bx,WORD PTR [ebp-0x4]
  426379:	xor    edi,esi
  42637b:	add    edi,eax
  42637d:	cmp    bx,di
  426380:	ja     0x426390
  426382:	movzx  edi,WORD PTR [ebp-0x4]
  426386:	movzx  ebx,WORD PTR [ebp-0x8]
  42638a:	add    edi,ebx
  42638c:	mov    WORD PTR [ebp-0x4],di
  426390:	mov    di,WORD PTR [ebp-0x4]
  426394:	mov    bx,WORD PTR [ebp+0x8]
  426398:	cmp    bx,di
  42639b:	jne    0x426495
  4263a1:	mov    edi,DWORD PTR [ebp-0x1c]
  4263a4:	mov    ebx,DWORD PTR [ebp-0x10]
  4263a7:	xor    edi,ecx
  4263a9:	lea    edi,[edi+ebx*1+0x3272ec]
  4263b0:	mov    DWORD PTR [ebp-0x10],edi
  4263b3:	mov    edi,DWORD PTR [ebp-0x1c]
  4263b6:	mov    ebx,DWORD PTR [ebp-0x14]
  4263b9:	xor    edi,ecx
  4263bb:	lea    edi,[edi+ebx*1+0x3272ec]
  4263c2:	mov    DWORD PTR [ebp-0x14],edi
  4263c5:	mov    edi,DWORD PTR [ebp-0x24]
  4263c8:	mov    ebx,DWORD PTR [ebp-0x10]
  4263cb:	mov    di,WORD PTR [ebx+edi*2]
  4263cf:	mov    WORD PTR [ebp+0x8],di
  4263d3:	mov    edi,DWORD PTR [ebp-0x28]
  4263d6:	mov    ebx,DWORD PTR [ebp-0x14]
  4263d9:	mov    di,WORD PTR [ebx+edi*2]
  4263dd:	mov    WORD PTR [ebp-0x4],di
  4263e1:	mov    edi,DWORD PTR [ebp-0xc]
  4263e4:	mov    bx,WORD PTR [ebp+0x8]
  4263e8:	xor    edi,esi
  4263ea:	add    edi,eax
  4263ec:	cmp    bx,di
  4263ef:	jne    0x426305
  4263f5:	mov    eax,DWORD PTR [ebp-0x18]
  4263f8:	mov    esi,DWORD PTR [ebp-0xc]
  4263fb:	xor    eax,ecx
  4263fd:	add    eax,edx
  4263ff:	imul   eax,esi
  426402:	mov    DWORD PTR [ebp-0xc],eax
  426405:	jmp    0x426419
  426407:	mov    eax,DWORD PTR [ebp-0xc]
  42640a:	mov    esi,DWORD PTR [ebp-0x18]
  42640d:	xor    eax,ecx
  42640f:	lea    eax,[eax+esi*1+0x3272ec]
  426416:	mov    DWORD PTR [ebp-0x18],eax
  426419:	mov    eax,DWORD PTR [ebp-0x24]
  42641c:	sub    eax,edx
  42641e:	xor    eax,ecx
  426420:	mov    DWORD PTR [ebp-0x30],eax
  426423:	mov    eax,DWORD PTR [ebp-0x28]
  426426:	sub    eax,edx
  426428:	xor    eax,ecx
  42642a:	mov    DWORD PTR [ebp-0x34],eax
  42642d:	mov    eax,DWORD PTR [ebp-0x34]
  426430:	mov    esi,DWORD PTR [ebp-0x1c]
  426433:	xor    esi,ecx
  426435:	add    esi,edx
  426437:	xor    eax,ecx
  426439:	add    eax,0x3272ec
  42643e:	imul   esi,eax
  426441:	mov    eax,DWORD PTR [ebp-0x14]
  426444:	movzx  eax,WORD PTR [esi+eax*1]
  426448:	mov    esi,DWORD PTR [ebp-0x30]
  42644b:	mov    edi,DWORD PTR [ebp-0x1c]
  42644e:	xor    esi,ecx
  426450:	add    esi,edx
  426452:	xor    edi,ecx
  426454:	add    edi,edx
  426456:	imul   edi,esi
  426459:	mov    esi,DWORD PTR [ebp-0x10]
  42645c:	movzx  esi,WORD PTR [edi+esi*1]
  426460:	sub    eax,edx
  426462:	sub    esi,edx
  426464:	xor    eax,ecx
  426466:	xor    esi,ecx
  426468:	cmp    esi,eax
  42646a:	jne    0x426495
  42646c:	mov    eax,DWORD PTR [ebp-0x30]
  42646f:	mov    esi,DWORD PTR [ebp-0x1c]
  426472:	xor    eax,ecx
  426474:	add    eax,0x3272ec
  426479:	xor    esi,ecx
  42647b:	add    esi,edx
  42647d:	imul   esi,eax
  426480:	mov    eax,DWORD PTR [ebp-0x10]
  426483:	movzx  eax,WORD PTR [esi+eax*1]
  426487:	mov    esi,DWORD PTR [ebp-0xc]
  42648a:	sub    eax,edx
  42648c:	xor    eax,ecx
  42648e:	cmp    eax,esi
  426490:	mov    eax,DWORD PTR [ebp-0xc]
  426493:	je     0x426498
  426495:	mov    eax,DWORD PTR [ebp-0x18]
  426498:	pop    edi
  426499:	xor    eax,ecx
  42649b:	pop    esi
  42649c:	add    eax,edx
  42649e:	pop    ebx
  42649f:	leave  
  4264a0:	ret    0x8
  4264a3:	push   ebp
  4264a4:	mov    ebp,esp
  4264a6:	push   ecx
  4264a7:	mov    cx,WORD PTR [eax]
  4264aa:	push   esi
  4264ab:	mov    esi,0x3b56
  4264b0:	sub    cx,si
  4264b3:	mov    esi,0x8a94
  4264b8:	xor    cx,si
  4264bb:	mov    esi,0x4e3e
  4264c0:	mov    DWORD PTR [ebp-0x4],0xf89c85b7
  4264c7:	mov    edx,0xf89c85b0
  4264cc:	cmp    cx,si
  4264cf:	je     0x42652e
  4264d1:	push   ebx
  4264d2:	push   edi
  4264d3:	movzx  ecx,cx
  4264d6:	mov    edi,0xffcd8d14
  4264db:	mov    esi,0x75108a4
  4264e0:	mov    ebx,0x4f92
  4264e5:	cmp    cx,bx
  4264e8:	jne    0x4264ed
  4264ea:	mov    DWORD PTR [ebp-0x4],edx
  4264ed:	lea    edx,[edi+0x1]
  4264f0:	xor    edx,esi
  4264f2:	mov    edi,edx
  4264f4:	xor    edi,esi
  4264f6:	mov    cx,WORD PTR [eax+edi*2+0x64e5d8]
  4264fe:	mov    ebx,0x3b56
  426503:	sub    cx,bx
  426506:	mov    ebx,0x8a94
  42650b:	xor    cx,bx
  42650e:	mov    ebx,0x4e3e
  426513:	cmp    cx,bx
  426516:	jne    0x4264e0
  426518:	mov    ecx,DWORD PTR [ebp-0x4]
  42651b:	pop    edi
  42651c:	pop    ebx
  42651d:	cmp    ecx,0xf89c85b7
  426523:	je     0x42652e
  426525:	xor    ecx,esi
  426527:	lea    eax,[eax+ecx*2+0x64e5da]
  42652e:	pop    esi
  42652f:	leave  
  426530:	ret    
  426531:	push   ebp
  426532:	mov    ebp,esp
  426534:	push   ecx
  426535:	push   esi
  426536:	push   edi
  426537:	mov    DWORD PTR [ebp-0x4],0xf89c85b7
  42653e:	mov    esi,0xf89c85b0
  426543:	call   0x4264a3
  426548:	mov    edi,eax
  42654a:	mov    al,BYTE PTR [edi]
  42654c:	add    al,0x3
  42654e:	xor    al,0x79
  426550:	cmp    al,0x7a
  426552:	je     0x4265b5
  426554:	mov    eax,edi
  426556:	mov    edx,0xffcd8d14
  42655b:	mov    ecx,0x75108a4
  426560:	push   ebx
  426561:	mov    ax,WORD PTR [eax]
  426564:	mov    ebx,0x3b56
  426569:	sub    ax,bx
  42656c:	mov    ebx,0x8a94
  426571:	xor    ax,bx
  426574:	mov    ebx,0x4e4c
  426579:	cmp    ax,bx
  42657c:	jne    0x426581
  42657e:	mov    DWORD PTR [ebp-0x4],esi
  426581:	lea    esi,[edx+0x1]
  426584:	xor    esi,ecx
  426586:	mov    edx,esi
  426588:	xor    edx,ecx
  42658a:	lea    eax,[edi+edx*2+0x64e5d8]
  426591:	mov    bl,BYTE PTR [eax]
  426593:	add    bl,0x3
  426596:	xor    bl,0x79
  426599:	cmp    bl,0x7a
  42659c:	jne    0x426561
  42659e:	mov    eax,DWORD PTR [ebp-0x4]
  4265a1:	pop    ebx
  4265a2:	cmp    eax,0xf89c85b7
  4265a7:	je     0x4265b5
  4265a9:	xor    eax,ecx
  4265ab:	xor    ecx,ecx
  4265ad:	mov    WORD PTR [edi+eax*2+0x64e5d8],cx
  4265b5:	mov    eax,edi
  4265b7:	pop    edi
  4265b8:	pop    esi
  4265b9:	leave  
  4265ba:	ret    
  4265bb:	push   ebp
  4265bc:	mov    ebp,esp
  4265be:	push   ecx
  4265bf:	push   esi
  4265c0:	mov    DWORD PTR [ebp-0x4],0xf89c85b7
  4265c7:	mov    esi,0xf89c85b0
  4265cc:	call   0x4264a3
  4265d1:	mov    cx,WORD PTR [eax]
  4265d4:	mov    edx,0x3b56
  4265d9:	sub    cx,dx
  4265dc:	mov    edx,0x8a94
  4265e1:	xor    cx,dx
  4265e4:	mov    edx,0x4e3e
  4265e9:	cmp    cx,dx
  4265ec:	je     0x426645
  4265ee:	push   ebx
  4265ef:	push   edi
  4265f0:	movzx  ecx,cx
  4265f3:	mov    edx,0xffcd8d14
  4265f8:	mov    edi,0x75108a4
  4265fd:	mov    ebx,0x4e4c
  426602:	cmp    cx,bx
  426605:	jne    0x42660a
  426607:	mov    DWORD PTR [ebp-0x4],esi
  42660a:	lea    esi,[edx+0x1]
  42660d:	xor    esi,edi
  42660f:	mov    edx,esi
  426611:	xor    edx,edi
  426613:	mov    cx,WORD PTR [eax+edx*2+0x64e5d8]
  42661b:	mov    ebx,0x3b56
  426620:	sub    cx,bx
  426623:	mov    ebx,0x8a94
  426628:	xor    cx,bx
  42662b:	mov    ebx,0x4e3e
  426630:	cmp    cx,bx
  426633:	jne    0x4265fd
  426635:	cmp    DWORD PTR [ebp-0x4],0xf89c85b7
  42663c:	pop    edi
  42663d:	pop    ebx
  42663e:	je     0x426645
  426640:	xor    eax,eax
  426642:	inc    eax
  426643:	jmp    0x426647
  426645:	xor    eax,eax
  426647:	pop    esi
  426648:	leave  
  426649:	ret    
  42664a:	push   ebp
  42664b:	mov    ebp,esp
  42664d:	push   ecx
  42664e:	mov    eax,DWORD PTR [ebp+0x8]
  426651:	movzx  ecx,WORD PTR [eax]
  426654:	push   esi
  426655:	lea    eax,[ecx-0x3b56]
  42665b:	mov    esi,0x8a94
  426660:	push   edi
  426661:	xor    eax,esi
  426663:	mov    edi,0x4e3e
  426668:	mov    DWORD PTR [ebp-0x4],edx
  42666b:	cmp    ax,di
  42666e:	je     0x42669b
  426670:	mov    eax,DWORD PTR [ebp+0x8]
  426673:	sub    eax,edx
  426675:	mov    DWORD PTR [ebp+0x8],eax
  426678:	jmp    0x42667d
  42667a:	mov    eax,DWORD PTR [ebp+0x8]
  42667d:	mov    WORD PTR [edx],cx
  426680:	add    edx,0x2
  426683:	movzx  edi,WORD PTR [eax+edx*1]
  426687:	mov    ecx,edi
  426689:	add    edi,0xffffc4aa
  42668f:	xor    edi,esi
  426691:	mov    eax,0x4e3e
  426696:	cmp    di,ax
  426699:	jne    0x42667a
  42669b:	xor    eax,eax
  42669d:	pop    edi
  42669e:	mov    WORD PTR [edx],ax
  4266a1:	mov    eax,DWORD PTR [ebp-0x4]
  4266a4:	pop    esi
  4266a5:	leave  
  4266a6:	ret    0x4
  4266a9:	push   ebp
  4266aa:	mov    ebp,esp
  4266ac:	sub    esp,0x18
  4266af:	mov    DWORD PTR [ebp-0x8],0xf89c85b0
  4266b6:	mov    DWORD PTR [ebp-0x18],0xf89c85b1
  4266bd:	mov    ecx,DWORD PTR [ebp-0x8]
  4266c0:	push   esi
  4266c1:	mov    eax,0x75108a4
  4266c6:	xor    ecx,eax
  4266c8:	mov    esi,0x3272ec
  4266cd:	add    ecx,esi
  4266cf:	mov    DWORD PTR [ebp-0x4],ecx
  4266d2:	mov    DWORD PTR [ebp-0xc],0xf89c85b8
  4266d9:	mov    DWORD PTR [ebp-0x10],0xf89c85bc
  4266e0:	push   edi
  4266e1:	mov    DWORD PTR [ebp-0x14],0xf89c85b2
  4266e8:	jmp    0x426789
  4266ed:	mov    ecx,DWORD PTR [ebp-0x4]
  4266f0:	mov    edx,DWORD PTR [ebp+0x10]
  4266f3:	sub    edx,ecx
  4266f5:	mov    ecx,DWORD PTR [ebp-0xc]
  4266f8:	xor    ecx,eax
  4266fa:	add    ecx,esi
  4266fc:	cmp    edx,ecx
  4266fe:	jbe    0x42671b
  426700:	mov    edx,DWORD PTR [ebp-0x4]
  426703:	add    edx,DWORD PTR [ebp+0x8]
  426706:	mov    ecx,DWORD PTR [ebp-0x4]
  426709:	add    ecx,DWORD PTR [ebp+0xc]
  42670c:	mov    edi,DWORD PTR [ecx]
  42670e:	mov    DWORD PTR [edx],edi
  426710:	mov    ecx,DWORD PTR [ecx+0x4]
  426713:	mov    DWORD PTR [edx+0x4],ecx
  426716:	mov    ecx,DWORD PTR [ebp-0xc]
  426719:	jmp    0x426768
  42671b:	mov    ecx,DWORD PTR [ebp-0x4]
  42671e:	mov    edx,DWORD PTR [ebp+0x10]
  426721:	sub    edx,ecx
  426723:	mov    ecx,DWORD PTR [ebp-0x10]
  426726:	xor    ecx,eax
  426728:	add    ecx,esi
  42672a:	cmp    edx,ecx
  42672c:	mov    ecx,DWORD PTR [ebp-0x4]
  42672f:	jbe    0x426743
  426731:	add    ecx,DWORD PTR [ebp+0x8]
  426734:	mov    edx,DWORD PTR [ebp-0x4]
  426737:	add    edx,DWORD PTR [ebp+0xc]
  42673a:	mov    edx,DWORD PTR [edx]
  42673c:	mov    DWORD PTR [ecx],edx
  42673e:	mov    ecx,DWORD PTR [ebp-0x10]
  426741:	jmp    0x426768
  426743:	mov    edx,DWORD PTR [ebp+0x10]
  426746:	sub    edx,ecx
  426748:	mov    ecx,DWORD PTR [ebp-0x14]
  42674b:	xor    ecx,eax
  42674d:	add    ecx,esi
  42674f:	cmp    edx,ecx
  426751:	mov    ecx,DWORD PTR [ebp-0x4]
  426754:	jbe    0x426779
  426756:	add    ecx,DWORD PTR [ebp+0x8]
  426759:	mov    edx,DWORD PTR [ebp-0x4]
  42675c:	add    edx,DWORD PTR [ebp+0xc]
  42675f:	mov    dx,WORD PTR [edx]
  426762:	mov    WORD PTR [ecx],dx
  426765:	mov    ecx,DWORD PTR [ebp-0x14]
  426768:	mov    edx,DWORD PTR [ebp-0x4]
  42676b:	xor    ecx,eax
  42676d:	lea    ecx,[ecx+edx*1+0x3272ec]
  426774:	mov    DWORD PTR [ebp-0x4],ecx
  426777:	jmp    0x426789
  426779:	add    ecx,DWORD PTR [ebp+0x8]
  42677c:	mov    edx,DWORD PTR [ebp-0x4]
  42677f:	add    edx,DWORD PTR [ebp+0xc]
  426782:	mov    dl,BYTE PTR [edx]
  426784:	mov    BYTE PTR [ecx],dl
  426786:	inc    DWORD PTR [ebp-0x4]
  426789:	mov    ecx,DWORD PTR [ebp-0x18]
  42678c:	mov    edx,DWORD PTR [ebp+0x10]
  42678f:	xor    ecx,eax
  426791:	add    ecx,esi
  426793:	imul   ecx,edx
  426796:	mov    edx,DWORD PTR [ebp-0x8]
  426799:	mov    edi,DWORD PTR [ebp-0x4]
  42679c:	xor    edx,eax
  42679e:	lea    edx,[edx+edi*1+0x3272ec]
  4267a5:	cmp    edx,ecx
  4267a7:	jb     0x4266ed
  4267ad:	pop    edi
  4267ae:	pop    esi
  4267af:	leave  
  4267b0:	ret    0xc
  4267b3:	push   ebp
  4267b4:	mov    ebp,esp
  4267b6:	sub    esp,0xc
  4267b9:	mov    DWORD PTR [ebp-0x4],0xf89c85b0
  4267c0:	push   esi
  4267c1:	mov    esi,eax
  4267c3:	mov    DWORD PTR [ebp-0x8],0xf89c85b1
  4267ca:	mov    edx,DWORD PTR [ebp-0x4]
  4267cd:	mov    eax,0x75108a4
  4267d2:	xor    edx,eax
  4267d4:	mov    ecx,0x3272ec
  4267d9:	add    edx,ecx
  4267db:	cmp    esi,edx
  4267dd:	je     0x42681f
  4267df:	push   ebx
  4267e0:	push   edi
  4267e1:	mov    edx,DWORD PTR [ebp-0x8]
  4267e4:	mov    ebx,DWORD PTR [ebp+0x8]
  4267e7:	xor    edx,eax
  4267e9:	mov    edi,0xffcd8d14
  4267ee:	sub    edi,edx
  4267f0:	add    esi,edi
  4267f2:	lea    edx,[esi-0x3272ec]
  4267f8:	xor    edx,eax
  4267fa:	mov    DWORD PTR [ebp-0xc],edx
  4267fd:	mov    edx,DWORD PTR [ebp-0x4]
  426800:	mov    edi,DWORD PTR [ebp-0xc]
  426803:	xor    dl,0xa4
  426806:	sub    dl,0x14
  426809:	xor    edi,eax
  42680b:	mov    BYTE PTR [edi+ebx*1+0x3272ec],dl
  426812:	mov    edx,DWORD PTR [ebp-0x4]
  426815:	xor    edx,eax
  426817:	add    edx,ecx
  426819:	cmp    esi,edx
  42681b:	jne    0x4267e1
  42681d:	pop    edi
  42681e:	pop    ebx
  42681f:	pop    esi
  426820:	leave  
  426821:	ret    0x4
  426824:	push   ebp
  426825:	mov    ebp,esp
  426827:	sub    esp,0x21c
  42682d:	mov    DWORD PTR [ebp-0x4],0xf89c85b0
  426834:	mov    DWORD PTR [ebp-0x14],0xf89c85b1
  42683b:	mov    eax,DWORD PTR [ebp+0x10]
  42683e:	mov    eax,DWORD PTR [ebp-0x4]
  426841:	mov    ecx,DWORD PTR [ebp+0x8]
  426844:	push   esi
  426845:	push   edi
  426846:	mov    edi,0x75108a4
  42684b:	xor    eax,edi
  42684d:	mov    esi,0x3272ec
  426852:	add    eax,esi
  426854:	cmp    eax,ecx
  426856:	mov    eax,DWORD PTR [ebp-0x4]
  426859:	jne    0x426864
  42685b:	xor    eax,edi
  42685d:	add    eax,esi
  42685f:	jmp    0x426910
  426864:	mov    ecx,DWORD PTR [ebp+0xc]
  426867:	xor    eax,edi
  426869:	add    eax,esi
  42686b:	cmp    eax,ecx
  42686d:	jne    0x426874
  42686f:	mov    eax,DWORD PTR [ebp-0x4]
  426872:	jmp    0x42685b
  426874:	lea    eax,[ebp-0x21c]
  42687a:	mov    DWORD PTR [ebp-0x8],eax
  42687d:	mov    eax,DWORD PTR [ebp+0xc]
  426880:	mov    DWORD PTR [ebp-0x10],eax
  426883:	mov    eax,DWORD PTR [ebp-0x4]
  426886:	xor    eax,edi
  426888:	add    eax,esi
  42688a:	mov    DWORD PTR [ebp+0x10],eax
  42688d:	mov    eax,DWORD PTR [ebp+0xc]
  426890:	push   ebx
  426891:	call   0x4265bb
  426896:	mov    ebx,eax
  426898:	mov    eax,DWORD PTR [ebp+0x8]
  42689b:	mov    eax,DWORD PTR [eax+0x14]
  42689e:	jmp    0x4268f8
  4268a0:	mov    eax,DWORD PTR [ebp+0xc]
  4268a3:	sub    eax,0x8
  4268a6:	mov    DWORD PTR [ebp-0xc],eax
  4268a9:	mov    eax,DWORD PTR [ebp-0xc]
  4268ac:	mov    eax,DWORD PTR [eax+0x28]
  4268af:	call   0x4264a3
  4268b4:	mov    DWORD PTR [ebp+0x10],eax
  4268b7:	push   DWORD PTR [ebp+0x10]
  4268ba:	mov    edx,DWORD PTR [ebp-0x8]
  4268bd:	call   0x42664a
  4268c2:	mov    eax,DWORD PTR [ebp-0x4]
  4268c5:	xor    eax,edi
  4268c7:	add    eax,esi
  4268c9:	cmp    eax,ebx
  4268cb:	jne    0x4268d5
  4268cd:	mov    eax,DWORD PTR [ebp-0x8]
  4268d0:	call   0x426531
  4268d5:	mov    eax,DWORD PTR [ebp-0x14]
  4268d8:	xor    eax,edi
  4268da:	add    eax,esi
  4268dc:	push   eax
  4268dd:	push   DWORD PTR [ebp-0x10]
  4268e0:	mov    eax,DWORD PTR [ebp-0x8]
  4268e3:	call   0x42625d
  4268e8:	mov    ecx,DWORD PTR [ebp-0x4]
  4268eb:	xor    ecx,edi
  4268ed:	add    ecx,esi
  4268ef:	cmp    eax,ecx
  4268f1:	je     0x426916
  4268f3:	mov    eax,DWORD PTR [ebp+0xc]
  4268f6:	mov    eax,DWORD PTR [eax]
  4268f8:	mov    DWORD PTR [ebp+0xc],eax
  4268fb:	mov    eax,DWORD PTR [ebp+0x8]
  4268fe:	mov    ecx,DWORD PTR [ebp+0xc]
  426901:	add    eax,0x14
  426904:	cmp    ecx,eax
  426906:	jne    0x4268a0
  426908:	mov    eax,DWORD PTR [ebp-0x4]
  42690b:	xor    eax,edi
  42690d:	add    eax,esi
  42690f:	pop    ebx
  426910:	pop    edi
  426911:	pop    esi
  426912:	leave  
  426913:	ret    0xc
  426916:	mov    eax,DWORD PTR [ebp-0xc]
  426919:	mov    eax,DWORD PTR [eax+0x18]
  42691c:	jmp    0x42690f
  42691e:	push   ebp
  42691f:	mov    ebp,esp
  426921:	mov    eax,DWORD PTR [ebp+0xc]
  426924:	sub    esp,0x10
  426927:	cmp    DWORD PTR [ebp+0x8],0x0
  42692b:	push   ebx
  42692c:	push   esi
  42692d:	push   edi
  42692e:	je     0x4269e3
  426934:	test   eax,eax
  426936:	je     0x4269e3
  42693c:	movzx  eax,WORD PTR [eax+0x20]
  426940:	mov    ecx,eax
  426942:	mov    DWORD PTR [ebp-0x10],eax
  426945:	xor    edx,edx
  426947:	and    DWORD PTR [ebp-0x8],edx
  42694a:	mov    eax,0x8a94
  42694f:	xor    ecx,eax
  426951:	add    ecx,0x3b56
  426957:	mov    DWORD PTR [ebp-0xc],ecx
  42695a:	and    DWORD PTR [ebp-0x4],0x0
  42695e:	xor    ecx,ecx
  426960:	push   0x7c
  426962:	pop    edi
  426963:	cmp    cx,WORD PTR [ebp-0xc]
  426967:	jae    0x4269cd
  426969:	lea    esi,[edx-0x3b56]
  42696f:	xor    esi,eax
  426971:	movzx  ecx,WORD PTR [ebp-0x4]
  426975:	mov    ebx,DWORD PTR [ebp+0xc]
  426978:	lea    ecx,[ebx+ecx*4]
  42697b:	cmp    WORD PTR [ecx+0x2],si
  42697f:	jne    0x4269b8
  426981:	movzx  ecx,WORD PTR [ecx]
  426984:	mov    edi,0x4e3e
  426989:	cmp    cx,di
  42698c:	jne    0x42699a
  42698e:	mov    ebx,DWORD PTR [ebp+0x8]
  426991:	movzx  edi,dx
  426994:	cmp    BYTE PTR [edi+ebx*1],0x0
  426998:	je     0x4269c7
  42699a:	mov    ebx,DWORD PTR [ebp+0x8]
  42699d:	movzx  edi,dx
  4269a0:	movsx  di,BYTE PTR [edi+ebx*1]
  4269a5:	mov    ebx,0x3b56
  4269aa:	sub    di,bx
  4269ad:	xor    di,ax
  4269b0:	cmp    cx,di
  4269b3:	je     0x4269c7
  4269b5:	push   0x7a
  4269b7:	pop    edi
  4269b8:	inc    DWORD PTR [ebp-0x4]
  4269bb:	mov    cx,WORD PTR [ebp-0xc]
  4269bf:	cmp    WORD PTR [ebp-0x4],cx
  4269c3:	jb     0x426971
  4269c5:	jmp    0x4269cd
  4269c7:	inc    DWORD PTR [ebp-0x8]
  4269ca:	push   0x7d
  4269cc:	pop    edi
  4269cd:	mov    esi,DWORD PTR [ebp+0x8]
  4269d0:	movzx  ecx,dx
  4269d3:	cmp    BYTE PTR [ecx+esi*1],0x0
  4269d7:	je     0x4269ec
  4269d9:	inc    edx
  4269da:	cmp    edi,0x7a
  4269dd:	jne    0x42695a
  4269e3:	xor    eax,eax
  4269e5:	pop    edi
  4269e6:	pop    esi
  4269e7:	pop    ebx
  4269e8:	leave  
  4269e9:	ret    0x8
  4269ec:	mov    ecx,DWORD PTR [ebp-0x8]
  4269ef:	add    ecx,0xffffc4aa
  4269f5:	xor    cx,ax
  4269f8:	xor    eax,eax
  4269fa:	cmp    cx,WORD PTR [ebp-0x10]
  4269fe:	sete   al
  426a01:	jmp    0x4269e5
  426a03:	push   ebp
  426a04:	mov    ebp,esp
  426a06:	sub    esp,0x50
  426a09:	push   edi
  426a0a:	mov    edi,eax
  426a0c:	mov    eax,DWORD PTR [edi+0x1a8]
  426a12:	cmp    DWORD PTR [eax],0x0
  426a15:	jne    0x426a1e
  426a17:	xor    eax,eax
  426a19:	jmp    0x426b4f
  426a1e:	push   DWORD PTR [ebp+0x8]
  426a21:	push   0x2c
  426a23:	pop    eax
  426a24:	call   0x4267b3
  426a29:	mov    edx,DWORD PTR [edi+0x1ac]
  426a2f:	lea    eax,[edi+0x22]
  426a32:	mov    DWORD PTR [ebp-0x4c],eax
  426a35:	lea    eax,[edi+0x44]
  426a38:	mov    DWORD PTR [ebp-0x48],eax
  426a3b:	lea    eax,[edi+0x66]
  426a3e:	mov    DWORD PTR [ebp-0x44],eax
  426a41:	lea    eax,[edi+0x88]
  426a47:	mov    DWORD PTR [ebp-0x40],eax
  426a4a:	lea    eax,[edi+0xaa]
  426a50:	mov    DWORD PTR [ebp-0x3c],eax
  426a53:	lea    eax,[edi+0xcc]
  426a59:	mov    DWORD PTR [ebp-0x38],eax
  426a5c:	lea    eax,[edi+0xee]
  426a62:	mov    DWORD PTR [ebp-0x34],eax
  426a65:	lea    eax,[edi+0x110]
  426a6b:	mov    DWORD PTR [ebp-0x30],eax
  426a6e:	lea    eax,[edi+0x132]
  426a74:	mov    DWORD PTR [ebp-0x2c],eax
  426a77:	lea    eax,[edi+0x154]
  426a7d:	push   edi
  426a7e:	mov    DWORD PTR [ebp-0x50],edi
  426a81:	mov    DWORD PTR [ebp-0x28],eax
  426a84:	call   0x426b83
  426a89:	push   eax
  426a8a:	mov    eax,DWORD PTR [edi+0x1a8]
  426a90:	push   DWORD PTR [eax]
  426a92:	call   0x426824
  426a97:	mov    DWORD PTR [ebp-0x10],eax
  426a9a:	test   eax,eax
  426a9c:	je     0x426b4f
  426aa2:	mov    ecx,DWORD PTR [eax+0x3c]
  426aa5:	push   ebx
  426aa6:	push   esi
  426aa7:	mov    esi,DWORD PTR [ecx+eax*1+0x78]
  426aab:	add    esi,eax
  426aad:	mov    edi,DWORD PTR [esi+0x24]
  426ab0:	mov    ecx,DWORD PTR [esi+0x1c]
  426ab3:	mov    edx,DWORD PTR [esi+0x20]
  426ab6:	mov    ebx,DWORD PTR [esi+0x18]
  426ab9:	add    edi,eax
  426abb:	mov    DWORD PTR [ebp-0x20],edi
  426abe:	mov    edi,DWORD PTR [esi+0x14]
  426ac1:	add    ecx,eax
  426ac3:	add    edx,eax
  426ac5:	mov    DWORD PTR [ebp-0xc],ecx
  426ac8:	mov    DWORD PTR [ebp-0x1c],edx
  426acb:	mov    DWORD PTR [ebp-0x8],edi
  426ace:	cmp    edi,ebx
  426ad0:	ja     0x426ad5
  426ad2:	mov    DWORD PTR [ebp-0x8],ebx
  426ad5:	xor    ebx,ebx
  426ad7:	mov    DWORD PTR [ebp-0x18],ebx
  426ada:	cmp    DWORD PTR [ebp-0x8],ebx
  426add:	jbe    0x426b4d
  426adf:	jmp    0x426ae4
  426ae1:	mov    edx,DWORD PTR [ebp-0x1c]
  426ae4:	mov    edi,DWORD PTR [ebp-0x20]
  426ae7:	movzx  edi,WORD PTR [edi+ebx*2]
  426aeb:	cmp    ebx,DWORD PTR [esi+0x18]
  426aee:	jae    0x426b4d
  426af0:	cmp    edi,DWORD PTR [esi+0x14]
  426af3:	jae    0x426b4d
  426af5:	mov    ebx,DWORD PTR [edx+ebx*4]
  426af8:	mov    edx,DWORD PTR [ebp+0x8]
  426afb:	mov    edi,DWORD PTR [ecx+edi*4]
  426afe:	mov    DWORD PTR [ebp-0x4],edx
  426b01:	lea    edx,[ebp-0x50]
  426b04:	add    ebx,eax
  426b06:	add    edi,eax
  426b08:	sub    edx,DWORD PTR [ebp+0x8]
  426b0b:	mov    DWORD PTR [ebp-0x14],0xb
  426b12:	mov    DWORD PTR [ebp-0x24],edx
  426b15:	mov    edx,DWORD PTR [ebp-0x4]
  426b18:	cmp    DWORD PTR [edx],0x0
  426b1b:	jne    0x426b38
  426b1d:	mov    eax,DWORD PTR [ebp-0x24]
  426b20:	push   DWORD PTR [eax+edx*1]
  426b23:	push   ebx
  426b24:	call   0x42691e
  426b29:	mov    ecx,DWORD PTR [ebp-0xc]
  426b2c:	test   eax,eax
  426b2e:	je     0x426b35
  426b30:	mov    eax,DWORD PTR [ebp-0x4]
  426b33:	mov    DWORD PTR [eax],edi
  426b35:	mov    eax,DWORD PTR [ebp-0x10]
  426b38:	add    DWORD PTR [ebp-0x4],0x4
  426b3c:	dec    DWORD PTR [ebp-0x14]
  426b3f:	jne    0x426b15
  426b41:	mov    ebx,DWORD PTR [ebp-0x18]
  426b44:	inc    ebx
  426b45:	mov    DWORD PTR [ebp-0x18],ebx
  426b48:	cmp    ebx,DWORD PTR [ebp-0x8]
  426b4b:	jb     0x426ae1
  426b4d:	pop    esi
  426b4e:	pop    ebx
  426b4f:	pop    edi
  426b50:	leave  
  426b51:	ret    0x4
  426b54:	push   ebp
  426b55:	mov    ebp,esp
  426b57:	mov    eax,DWORD PTR [ebp+0x8]
  426b5a:	push   esi
  426b5b:	push   DWORD PTR [eax+0x1d8]
  426b61:	lea    esi,[eax+0x198]
  426b67:	mov    eax,DWORD PTR [ebp+0x8]
  426b6a:	call   0x426a03
  426b6f:	mov    ecx,DWORD PTR [esi]
  426b71:	mov    DWORD PTR [ecx],eax
  426b73:	mov    eax,DWORD PTR [esi]
  426b75:	xor    ecx,ecx
  426b77:	cmp    DWORD PTR [eax],ecx
  426b79:	pop    esi
  426b7a:	setne  cl
  426b7d:	mov    eax,ecx
  426b7f:	pop    ebp
  426b80:	ret    0x4
  426b83:	mov    ecx,DWORD PTR [edi+0x188]
  426b89:	push   ebx
  426b8a:	jmp    0x426b9f
  426b8c:	xor    eax,0x8a94
  426b91:	add    eax,0x3b56
  426b96:	mov    WORD PTR [ecx],ax
  426b99:	add    ecx,0x2
  426b9c:	add    edx,0x2
  426b9f:	movzx  eax,WORD PTR [edx]
  426ba2:	mov    ebx,0x4e3e
  426ba7:	cmp    ax,bx
  426baa:	jne    0x426b8c
  426bac:	xor    eax,eax
  426bae:	mov    WORD PTR [ecx],ax
  426bb1:	mov    eax,DWORD PTR [edi+0x188]
  426bb7:	pop    ebx
  426bb8:	ret    
  426bb9:	push   edi
  426bba:	mov    edi,eax
  426bbc:	mov    eax,DWORD PTR [esi+0x188]
  426bc2:	shl    edi,0x6
  426bc5:	add    eax,edi
  426bc7:	jmp    0x426bd3
  426bc9:	xor    cl,0x79
  426bcc:	sub    cl,0x3
  426bcf:	mov    BYTE PTR [eax],cl
  426bd1:	inc    eax
  426bd2:	inc    edx
  426bd3:	mov    cl,BYTE PTR [edx]
  426bd5:	cmp    cl,0x7a
  426bd8:	jne    0x426bc9
  426bda:	mov    BYTE PTR [eax],0x0
  426bdd:	mov    eax,DWORD PTR [esi+0x188]
  426be3:	add    eax,edi
  426be5:	pop    edi
  426be6:	ret    
  426be7:	push   ebp
  426be8:	mov    ebp,esp
  426bea:	sub    esp,0x14
  426bed:	mov    DWORD PTR [ebp-0x10],0xf89c85b0
  426bf4:	mov    DWORD PTR [ebp-0x4],0xf89c85b1
  426bfb:	mov    eax,DWORD PTR [ebx]
  426bfd:	mov    DWORD PTR [ebp-0x8],eax
  426c00:	mov    DWORD PTR [ebp-0xc],0xf89c85b8
  426c07:	push   esi
  426c08:	push   edi
  426c09:	mov    DWORD PTR [ebp-0x14],0xead71890
  426c10:	mov    edi,DWORD PTR [ebp-0x4]
  426c13:	mov    ecx,DWORD PTR [ebp-0x10]
  426c16:	mov    eax,0x75108a4
  426c1b:	xor    edi,eax
  426c1d:	mov    edx,0x3272ec
  426c22:	xor    ecx,eax
  426c24:	add    edi,edx
  426c26:	add    ecx,edx
  426c28:	imul   edi,ecx
  426c2b:	jmp    0x426c73
  426c2d:	mov    ecx,DWORD PTR [ebp-0x8]
  426c30:	mov    esi,DWORD PTR [ebp-0x4]
  426c33:	xor    ecx,eax
  426c35:	xor    esi,eax
  426c37:	add    ecx,edx
  426c39:	add    esi,edx
  426c3b:	test   esi,ecx
  426c3d:	mov    esi,DWORD PTR [ebp-0x8]
  426c40:	mov    ecx,DWORD PTR [ebp-0x4]
  426c43:	je     0x426c5a
  426c45:	xor    ecx,eax
  426c47:	xor    esi,eax
  426c49:	add    ecx,edx
  426c4b:	add    esi,edx
  426c4d:	shr    esi,cl
  426c4f:	mov    ecx,DWORD PTR [ebp-0x14]
  426c52:	xor    ecx,eax
  426c54:	add    ecx,edx
  426c56:	xor    esi,ecx
  426c58:	jmp    0x426c64
  426c5a:	xor    esi,eax
  426c5c:	xor    ecx,eax
  426c5e:	add    esi,edx
  426c60:	add    ecx,edx
  426c62:	shr    esi,cl
  426c64:	mov    DWORD PTR [ebp-0x8],esi
  426c67:	mov    ecx,DWORD PTR [ebp-0x4]
  426c6a:	xor    ecx,eax
  426c6c:	lea    edi,[edi+ecx*1+0x3272ec]
  426c73:	mov    ecx,DWORD PTR [ebp-0xc]
  426c76:	mov    esi,DWORD PTR [ebp-0x4]
  426c79:	xor    esi,eax
  426c7b:	xor    ecx,eax
  426c7d:	sub    ecx,esi
  426c7f:	cmp    edi,ecx
  426c81:	jbe    0x426c2d
  426c83:	mov    eax,DWORD PTR [ebp-0x8]
  426c86:	pop    edi
  426c87:	mov    DWORD PTR [ebx],eax
  426c89:	mov    eax,DWORD PTR [ebp-0x8]
  426c8c:	pop    esi
  426c8d:	leave  
  426c8e:	ret    
  426c8f:	push   ebp
  426c90:	mov    ebp,esp
  426c92:	sub    esp,0x38
  426c95:	push   ebx
  426c96:	mov    ebx,0xf89c85b0
  426c9b:	mov    DWORD PTR [ebp-0x4],ebx
  426c9e:	lea    eax,[ebx+0x1]
  426ca1:	push   esi
  426ca2:	mov    DWORD PTR [ebp-0x24],eax
  426ca5:	mov    ecx,DWORD PTR [ebp-0x4]
  426ca8:	mov    edx,DWORD PTR [ebp+0x8]
  426cab:	mov    esi,0x75108a4
  426cb0:	push   edi
  426cb1:	xor    ecx,esi
  426cb3:	mov    edi,0x3272ec
  426cb8:	add    ecx,edi
  426cba:	cmp    edx,ecx
  426cbc:	je     0x426e22
  426cc2:	mov    ecx,DWORD PTR [ebp-0x4]
  426cc5:	mov    edx,DWORD PTR [ebp+0xc]
  426cc8:	xor    ecx,esi
  426cca:	add    ecx,edi
  426ccc:	cmp    edx,ecx
  426cce:	je     0x426e22
  426cd4:	mov    ecx,DWORD PTR [ebp+0x10]
  426cd7:	mov    DWORD PTR [ebp-0x14],ecx
  426cda:	mov    ecx,DWORD PTR [ebp+0xc]
  426cdd:	mov    edx,DWORD PTR [ebp+0x8]
  426ce0:	mov    DWORD PTR [ebp-0x18],0xf89c8533
  426ce7:	mov    DWORD PTR [ebp-0x1c],eax
  426cea:	mov    DWORD PTR [ebp-0x10],ebx
  426ced:	mov    DWORD PTR [ebp+0xc],eax
  426cf0:	mov    DWORD PTR [ebp+0x10],0xf89c85b2
  426cf7:	mov    eax,DWORD PTR [ebp+0xc]
  426cfa:	xor    eax,esi
  426cfc:	mov    DWORD PTR [ebp-0x20],ecx
  426cff:	sub    ecx,eax
  426d01:	sub    ecx,edi
  426d03:	mov    DWORD PTR [ebp+0x8],ecx
  426d06:	mov    DWORD PTR [ebp-0xc],edx
  426d09:	mov    DWORD PTR [ebp-0x8],0xf89c85bd
  426d10:	jmp    0x426e12
  426d15:	mov    eax,DWORD PTR [ebp+0xc]
  426d18:	mov    ecx,DWORD PTR [ebp+0xc]
  426d1b:	xor    eax,esi
  426d1d:	xor    ecx,esi
  426d1f:	lea    ecx,[eax+ecx*1+0x64e5d8]
  426d26:	mov    eax,DWORD PTR [ebp+0x8]
  426d29:	xor    edx,edx
  426d2b:	div    ecx
  426d2d:	mov    eax,DWORD PTR [ebp+0x10]
  426d30:	mov    ecx,DWORD PTR [ebp+0xc]
  426d33:	xor    eax,esi
  426d35:	xor    ecx,esi
  426d37:	sub    eax,ecx
  426d39:	cmp    edx,eax
  426d3b:	jne    0x426dd1
  426d41:	mov    eax,DWORD PTR [ebp+0x8]
  426d44:	mov    ecx,DWORD PTR [ebp-0xc]
  426d47:	mov    dl,BYTE PTR [eax+ecx*1]
  426d4a:	mov    eax,DWORD PTR [ebp-0x10]
  426d4d:	mov    ecx,DWORD PTR [ebp-0x8]
  426d50:	xor    eax,esi
  426d52:	xor    ecx,esi
  426d54:	add    eax,edi
  426d56:	add    ecx,edi
  426d58:	cmp    eax,ecx
  426d5a:	jae    0x426da2
  426d5c:	lea    ecx,[eax-0x3272ec]
  426d62:	mov    DWORD PTR [ebp-0x4],ecx
  426d65:	mov    ebx,DWORD PTR [ebp-0x4]
  426d68:	xor    ebx,esi
  426d6a:	add    ebx,0x7f55d8f2
  426d70:	lea    ecx,[ebp+eax*4-0x38]
  426d74:	mov    DWORD PTR [ecx],ebx
  426d76:	mov    ebx,DWORD PTR [ecx]
  426d78:	cmp    ebx,0x244ecb93
  426d7e:	jbe    0x426d88
  426d80:	add    DWORD PTR [ecx],0x405fcdc
  426d86:	jmp    0x426d8e
  426d88:	add    DWORD PTR [ecx],0xfdaf4324
  426d8e:	mov    ecx,DWORD PTR [ebp-0x8]
  426d91:	xor    ecx,esi
  426d93:	inc    eax
  426d94:	inc    DWORD PTR [ebp-0x4]
  426d97:	add    ecx,edi
  426d99:	cmp    eax,ecx
  426d9b:	jb     0x426d65
  426d9d:	mov    ebx,0xf89c85b0
  426da2:	cmp    DWORD PTR [ebp-0x14],0x0
  426da6:	jne    0x426db0
  426da8:	xor    dl,0x79
  426dab:	sub    dl,0x3
  426dae:	jmp    0x426dc6
  426db0:	mov    eax,DWORD PTR [ebp-0x18]
  426db3:	xor    al,0xa4
  426db5:	mov    cl,0x14
  426db7:	sub    cl,al
  426db9:	add    dl,cl
  426dbb:	mov    ecx,DWORD PTR [ebp-0x1c]
  426dbe:	xor    cl,0xa4
  426dc1:	sub    cl,0x14
  426dc4:	ror    dl,cl
  426dc6:	xor    eax,eax
  426dc8:	mov    eax,DWORD PTR [ebp+0x8]
  426dcb:	mov    ecx,DWORD PTR [ebp-0xc]
  426dce:	mov    BYTE PTR [eax+ecx*1],dl
  426dd1:	mov    eax,DWORD PTR [ebp+0x8]
  426dd4:	mov    ecx,DWORD PTR [ebp-0x10]
  426dd7:	sub    eax,edi
  426dd9:	xor    eax,esi
  426ddb:	cmp    eax,ecx
  426ddd:	jne    0x426e00
  426ddf:	mov    eax,DWORD PTR [ebp+0x10]
  426de2:	mov    ecx,DWORD PTR [ebp+0xc]
  426de5:	xor    eax,esi
  426de7:	xor    ecx,esi
  426de9:	sub    eax,ecx
  426deb:	mov    ecx,DWORD PTR [ebp-0x20]
  426dee:	sub    eax,edi
  426df0:	xor    eax,esi
  426df2:	mov    DWORD PTR [ebp+0x10],eax
  426df5:	mov    eax,DWORD PTR [ebp+0xc]
  426df8:	xor    eax,esi
  426dfa:	sub    ecx,eax
  426dfc:	sub    ecx,edi
  426dfe:	jmp    0x426e0f
  426e00:	mov    eax,DWORD PTR [ebp+0xc]
  426e03:	xor    eax,esi
  426e05:	mov    ecx,0xffcd8d14
  426e0a:	sub    ecx,eax
  426e0c:	add    ecx,DWORD PTR [ebp+0x8]
  426e0f:	mov    DWORD PTR [ebp+0x8],ecx
  426e12:	mov    eax,DWORD PTR [ebp+0x10]
  426e15:	cmp    eax,ebx
  426e17:	jne    0x426d15
  426e1d:	mov    eax,DWORD PTR [ebp-0x24]
  426e20:	jmp    0x426e25
  426e22:	mov    eax,DWORD PTR [ebp-0x4]
  426e25:	xor    eax,esi
  426e27:	add    eax,edi
  426e29:	pop    edi
  426e2a:	pop    esi
  426e2b:	pop    ebx
  426e2c:	leave  
  426e2d:	ret    0xc
  426e30:	push   ebp
  426e31:	mov    ebp,esp
  426e33:	sub    esp,0x420
  426e39:	mov    DWORD PTR [ebp-0x14],0xf89c85b0
  426e40:	mov    DWORD PTR [ebp-0xc],0xf89c85b1
  426e47:	mov    DWORD PTR [ebp-0x18],0xf89c86b0
  426e4e:	push   ebx
  426e4f:	mov    DWORD PTR [ebp-0x1c],0xf89c85b7
  426e56:	mov    eax,DWORD PTR [ebp-0x14]
  426e59:	push   esi
  426e5a:	mov    esi,0x75108a4
  426e5f:	push   edi
  426e60:	xor    eax,esi
  426e62:	mov    edi,0x3272ec
  426e67:	add    eax,edi
  426e69:	mov    DWORD PTR [ebp-0x8],eax
  426e6c:	mov    DWORD PTR [ebp-0x20],0xf89c85b8
  426e73:	mov    DWORD PTR [ebp-0x4],0xead71890
  426e7a:	mov    DWORD PTR [ebp-0x10],0x8
  426e81:	mov    ecx,ecx
  426e83:	mov    eax,DWORD PTR [ebp-0xc]
  426e86:	mov    ecx,DWORD PTR [ebp-0x14]
  426e89:	xor    eax,esi
  426e8b:	xor    ecx,esi
  426e8d:	add    eax,edi
  426e8f:	add    ecx,edi
  426e91:	imul   eax,ecx
  426e94:	jmp    0x426ec7
  426e96:	mov    eax,DWORD PTR [ebp-0x4]
  426e99:	sub    eax,edi
  426e9b:	xor    eax,esi
  426e9d:	mov    DWORD PTR [ebp-0x8],eax
  426ea0:	lea    ebx,[ebp-0x8]
  426ea3:	call   0x426be7
  426ea8:	mov    DWORD PTR [ebp-0x8],eax
  426eab:	mov    eax,DWORD PTR [ebp-0x8]
  426eae:	mov    ecx,DWORD PTR [ebp-0x4]
  426eb1:	mov    DWORD PTR [ebp+ecx*4-0x420],eax
  426eb8:	mov    eax,DWORD PTR [ebp-0xc]
  426ebb:	mov    ecx,DWORD PTR [ebp-0x4]
  426ebe:	xor    eax,esi
  426ec0:	lea    eax,[eax+ecx*1+0x3272ec]
  426ec7:	mov    DWORD PTR [ebp-0x4],eax
  426eca:	mov    eax,DWORD PTR [ebp-0x18]
  426ecd:	mov    ecx,DWORD PTR [ebp-0xc]
  426ed0:	xor    ecx,esi
  426ed2:	xor    eax,esi
  426ed4:	sub    eax,ecx
  426ed6:	mov    ecx,DWORD PTR [ebp-0x4]
  426ed9:	cmp    ecx,eax
  426edb:	jbe    0x426e96
  426edd:	mov    eax,DWORD PTR [ebp-0x1c]
  426ee0:	xor    eax,esi
  426ee2:	add    eax,edi
  426ee4:	mov    DWORD PTR [ebp-0x8],eax
  426ee7:	mov    DWORD PTR [ebp-0x18],0xf89c86b7
  426eee:	mov    ebx,ebx
  426ef0:	jmp    0x426f53
  426ef2:	mov    ecx,DWORD PTR [ebp-0x20]
  426ef5:	mov    eax,DWORD PTR [ebp-0x8]
  426ef8:	xor    ecx,esi
  426efa:	add    ecx,edi
  426efc:	shr    eax,cl
  426efe:	mov    DWORD PTR [ebp-0x4],eax
  426f01:	mov    eax,DWORD PTR [ebp+0x8]
  426f04:	mov    cl,BYTE PTR [eax]
  426f06:	mov    BYTE PTR [ebp+0xb],cl
  426f09:	mov    cl,BYTE PTR [ebp+0xb]
  426f0c:	mov    edx,DWORD PTR [ebp-0x8]
  426f0f:	movzx  ecx,cl
  426f12:	xor    ecx,edx
  426f14:	mov    DWORD PTR [ebp+0x8],ecx
  426f17:	mov    ecx,DWORD PTR [ebp-0x18]
  426f1a:	mov    edx,DWORD PTR [ebp+0x8]
  426f1d:	xor    ecx,esi
  426f1f:	add    ecx,edi
  426f21:	and    ecx,edx
  426f23:	mov    ecx,DWORD PTR [ebp+ecx*4-0x420]
  426f2a:	mov    edx,DWORD PTR [ebp-0x4]
  426f2d:	xor    ecx,edx
  426f2f:	mov    DWORD PTR [ebp-0x8],ecx
  426f32:	mov    ecx,DWORD PTR [ebp-0xc]
  426f35:	xor    ecx,esi
  426f37:	lea    eax,[eax+ecx*1+0x3272ec]
  426f3e:	mov    DWORD PTR [ebp+0x8],eax
  426f41:	mov    eax,DWORD PTR [ebp-0xc]
  426f44:	xor    eax,esi
  426f46:	mov    ecx,0xffcd8d14
  426f4b:	sub    ecx,eax
  426f4d:	add    ecx,DWORD PTR [ebp-0x10]
  426f50:	mov    DWORD PTR [ebp-0x10],ecx
  426f53:	mov    eax,DWORD PTR [ebp-0x14]
  426f56:	mov    ecx,DWORD PTR [ebp-0x10]
  426f59:	xor    eax,esi
  426f5b:	add    eax,edi
  426f5d:	cmp    ecx,eax
  426f5f:	jne    0x426ef2
  426f61:	mov    eax,DWORD PTR [ebp-0x1c]
  426f64:	mov    ecx,DWORD PTR [ebp-0x8]
  426f67:	xor    eax,esi
  426f69:	add    eax,edi
  426f6b:	pop    edi
  426f6c:	pop    esi
  426f6d:	xor    eax,ecx
  426f6f:	pop    ebx
  426f70:	leave  
  426f71:	ret    0x4
  426f74:	push   ebp
  426f75:	mov    ebp,esp
  426f77:	mov    eax,DWORD PTR [ebp+0x1c]
  426f7a:	mov    ecx,DWORD PTR [ebp+0x8]
  426f7d:	mov    edx,DWORD PTR [ebp+0x10]
  426f80:	mov    eax,DWORD PTR [eax+0x190]
  426f86:	mov    eax,DWORD PTR [eax]
  426f88:	sub    esp,0x64
  426f8b:	push   ebx
  426f8c:	push   esi
  426f8d:	push   edi
  426f8e:	mov    edi,0x75108a4
  426f93:	xor    ecx,edi
  426f95:	mov    ebx,0x3272ec
  426f9a:	add    ecx,ebx
  426f9c:	cmp    ecx,edx
  426f9e:	jne    0x426faf
  426fa0:	or     DWORD PTR ds:0x3750c3e,0x4263eb2f
  426faa:	jmp    0x4274ab
  426faf:	mov    ecx,DWORD PTR [ebp+0x8]
  426fb2:	mov    esi,DWORD PTR [ebp+0x14]
  426fb5:	mov    edx,DWORD PTR [esi]
  426fb7:	xor    ecx,edi
  426fb9:	add    ecx,ebx
  426fbb:	cmp    edx,ecx
  426fbd:	je     0x427466
  426fc3:	mov    ecx,DWORD PTR [ebp+0x1c]
  426fc6:	mov    DWORD PTR [ebp-0x1c],eax
  426fc9:	mov    DWORD PTR [ebp+0x1c],ecx
  426fcc:	mov    ecx,DWORD PTR [ebp+0x18]
  426fcf:	mov    eax,DWORD PTR [esi]
  426fd1:	mov    DWORD PTR [ebp-0x20],eax
  426fd4:	mov    DWORD PTR [ebp+0x8],0xf89c85b0
  426fdb:	mov    edx,0xf89c85b1
  426fe0:	mov    DWORD PTR [ebp-0x8],edx
  426fe3:	mov    eax,DWORD PTR [ebp+0x1c]
  426fe6:	mov    DWORD PTR [ebp+0x1c],eax
  426fe9:	mov    eax,DWORD PTR [ebp+0x1c]
  426fec:	mov    eax,DWORD PTR [eax+0x190]
  426ff2:	mov    eax,DWORD PTR [eax]
  426ff4:	mov    DWORD PTR [ebp-0x24],ecx
  426ff7:	mov    ecx,DWORD PTR [ebp+0x1c]
  426ffa:	mov    ecx,DWORD PTR [ecx+0x190]
  427000:	mov    ecx,DWORD PTR [ecx]
  427002:	add    ecx,DWORD PTR [eax+0x3c]
  427005:	mov    DWORD PTR [ebp+0x10],ecx
  427008:	mov    eax,DWORD PTR [ebp+0x8]
  42700b:	xor    eax,edi
  42700d:	add    eax,ebx
  42700f:	mov    DWORD PTR [ebp-0x4],eax
  427012:	mov    eax,DWORD PTR [ebp+0x8]
  427015:	xor    eax,edi
  427017:	add    eax,ebx
  427019:	mov    DWORD PTR [ebp+0x18],eax
  42701c:	mov    eax,DWORD PTR [ebp+0x10]
  42701f:	mov    eax,DWORD PTR [eax+0x50]
  427022:	sub    eax,0xc
  427025:	mov    DWORD PTR [ebp-0x28],eax
  427028:	mov    eax,DWORD PTR [ebp+0x10]
  42702b:	mov    eax,DWORD PTR [eax+0x38]
  42702e:	mov    ecx,DWORD PTR [ebp+0x10]
  427031:	dec    eax
  427032:	test   DWORD PTR [ecx+0x54],eax
  427035:	mov    eax,DWORD PTR [ebp+0x10]
  427038:	je     0x427052
  42703a:	mov    eax,DWORD PTR [eax+0x38]
  42703d:	mov    ecx,DWORD PTR [ebp+0x10]
  427040:	mov    ecx,DWORD PTR [ecx+0x54]
  427043:	dec    eax
  427044:	not    eax
  427046:	and    ecx,eax
  427048:	mov    eax,DWORD PTR [ebp+0x10]
  42704b:	mov    eax,DWORD PTR [eax+0x38]
  42704e:	add    eax,ecx
  427050:	jmp    0x427055
  427052:	mov    eax,DWORD PTR [eax+0x54]
  427055:	mov    DWORD PTR [ebp+0x1c],eax
  427058:	mov    eax,DWORD PTR [ebp+0x8]
  42705b:	xor    eax,edi
  42705d:	add    eax,ebx
  42705f:	mov    DWORD PTR [ebp+0x18],eax
  427062:	mov    eax,DWORD PTR [ebp+0x8]
  427065:	xor    eax,edi
  427067:	add    eax,ebx
  427069:	mov    DWORD PTR [ebp+0x18],eax
  42706c:	mov    eax,DWORD PTR [ebp+0x8]
  42706f:	mov    ecx,DWORD PTR [ebp-0x24]
  427072:	xor    eax,edi
  427074:	add    eax,ebx
  427076:	mov    DWORD PTR [ecx],eax
  427078:	mov    DWORD PTR [ebp+0x18],edx
  42707b:	mov    DWORD PTR [ebp+0x18],0xf89c85b2
  427082:	mov    DWORD PTR [ebp+0x18],0xf89c85b3
  427089:	mov    DWORD PTR [ebp+0x18],0xf89c85bc
  427090:	mov    eax,DWORD PTR [ebp-0x8]
  427093:	mov    ecx,DWORD PTR [ebp+0x1c]
  427096:	xor    eax,edi
  427098:	add    eax,ebx
  42709a:	imul   eax,ecx
  42709d:	mov    ecx,DWORD PTR [ebp+0x8]
  4270a0:	mov    edx,DWORD PTR [ebp-0x28]
  4270a3:	xor    ecx,edi
  4270a5:	lea    ecx,[ecx+edx*1+0x3272ec]
  4270ac:	cmp    eax,ecx
  4270ae:	jae    0x42745f
  4270b4:	mov    eax,DWORD PTR [ebp+0x8]
  4270b7:	xor    eax,edi
  4270b9:	add    eax,ebx
  4270bb:	mov    DWORD PTR [ebp+0x18],eax
  4270be:	mov    eax,DWORD PTR [ebp+0x1c]
  4270c1:	add    eax,DWORD PTR [ebp-0x1c]
  4270c4:	mov    DWORD PTR [ebp-0x4],eax
  4270c7:	push   DWORD PTR [ebp-0x4]
  4270ca:	mov    esi,DWORD PTR [ebp-0x1c]
  4270cd:	mov    ecx,DWORD PTR [ebp+0x10]
  4270d0:	call   0x42621f
  4270d5:	mov    DWORD PTR [ebp+0xc],eax
  4270d8:	mov    DWORD PTR [ebp-0x18],0xf89c85b8
  4270df:	mov    eax,DWORD PTR [ebp-0x18]
  4270e2:	xor    eax,edi
  4270e4:	lea    ecx,[ebp-0x40]
  4270e7:	add    eax,ebx
  4270e9:	push   ecx
  4270ea:	call   0x4267b3
  4270ef:	mov    eax,DWORD PTR [ebp+0xc]
  4270f2:	test   eax,eax
  4270f4:	je     0x427144
  4270f6:	mov    eax,DWORD PTR [ebp-0x18]
  4270f9:	xor    eax,edi
  4270fb:	add    eax,ebx
  4270fd:	push   eax
  4270fe:	push   DWORD PTR [ebp+0xc]
  427101:	lea    eax,[ebp-0x40]
  427104:	push   eax
  427105:	call   0x4266a9
  42710a:	mov    eax,DWORD PTR [ebp-0x4]
  42710d:	mov    DWORD PTR [ebp-0x18],eax
  427110:	mov    eax,DWORD PTR [ebp-0x18]
  427113:	mov    ecx,DWORD PTR [ebp-0x1c]
  427116:	sub    eax,ecx
  427118:	mov    DWORD PTR [ebp-0x18],eax
  42711b:	mov    eax,DWORD PTR [ebp+0xc]
  42711e:	mov    ecx,DWORD PTR [ebp+0xc]
  427121:	mov    eax,DWORD PTR [eax+0x10]
  427124:	add    eax,DWORD PTR [ecx+0xc]
  427127:	mov    ecx,DWORD PTR [ebp-0x18]
  42712a:	cmp    ecx,eax
  42712c:	jb     0x427144
  42712e:	mov    eax,DWORD PTR [ebp+0xc]
  427131:	mov    eax,DWORD PTR [eax+0xc]
  427134:	mov    ecx,DWORD PTR [ebp+0xc]
  427137:	add    eax,DWORD PTR [ecx+0x8]
  42713a:	mov    ecx,DWORD PTR [ebp-0x18]
  42713d:	sub    eax,ecx
  42713f:	jmp    0x427432
  427144:	push   0xc
  427146:	push   DWORD PTR [ebp-0x4]
  427149:	lea    eax,[ebp-0x4c]
  42714c:	push   eax
  42714d:	call   0x4266a9
  427152:	mov    eax,0xf89c85b0
  427157:	mov    DWORD PTR [ebp-0x2c],eax
  42715a:	mov    DWORD PTR [ebp-0x30],0xf89c85b1
  427161:	mov    DWORD PTR [ebp-0x34],0xf89c85b2
  427168:	mov    DWORD PTR [ebp-0x38],0xf89c85b3
  42716f:	lea    ecx,[ebp-0x2c]
  427172:	mov    DWORD PTR [ebp-0xc],ecx
  427175:	lea    ecx,[ebp-0x30]
  427178:	mov    DWORD PTR [ebp-0x10],ecx
  42717b:	lea    ecx,[ebp-0x34]
  42717e:	mov    DWORD PTR [ebp+0xc],ecx
  427181:	lea    ecx,[ebp-0x38]
  427184:	mov    DWORD PTR [ebp-0x14],ecx
  427187:	mov    ecx,DWORD PTR [ebp+0x8]
  42718a:	xor    ecx,edi
  42718c:	add    ecx,ebx
  42718e:	mov    DWORD PTR [ebp-0x18],ecx
  427191:	jmp    0x42738d
  427196:	cmp    eax,0xf89c85b2
  42719b:	je     0x42739f
  4271a1:	mov    ecx,DWORD PTR [ebp-0x8]
  4271a4:	xor    ecx,edi
  4271a6:	mov    esi,eax
  4271a8:	add    ecx,ebx
  4271aa:	mov    DWORD PTR [ebp+0x18],ecx
  4271ad:	mov    eax,DWORD PTR [ebp-0x18]
  4271b0:	xor    esi,edi
  4271b2:	lea    eax,[eax+esi*1+0x3272ec]
  4271b9:	mov    DWORD PTR [ebp-0x18],eax
  4271bc:	mov    eax,DWORD PTR [ebp-0x8]
  4271bf:	mov    ecx,DWORD PTR [ebp-0x18]
  4271c2:	xor    eax,edi
  4271c4:	add    eax,ebx
  4271c6:	cmp    ecx,eax
  4271c8:	jne    0x4271dd
  4271ca:	mov    eax,DWORD PTR [ebp+0x8]
  4271cd:	xor    eax,edi
  4271cf:	add    eax,ebx
  4271d1:	push   eax
  4271d2:	push   0xc
  4271d4:	lea    eax,[ebp-0x4c]
  4271d7:	push   eax
  4271d8:	call   0x426c8f
  4271dd:	mov    eax,DWORD PTR [ebp-0xc]
  4271e0:	mov    eax,DWORD PTR [eax]
  4271e2:	xor    eax,edi
  4271e4:	mov    al,BYTE PTR [ebp+eax*1+0x3272a0]
  4271eb:	mov    ecx,DWORD PTR [ebp+0x8]
  4271ee:	xor    ecx,edi
  4271f0:	movzx  eax,al
  4271f3:	add    ecx,ebx
  4271f5:	cmp    eax,ecx
  4271f7:	je     0x427375
  4271fd:	mov    eax,DWORD PTR [ebp-0x10]
  427200:	mov    eax,DWORD PTR [eax]
  427202:	xor    eax,edi
  427204:	mov    al,BYTE PTR [ebp+eax*1+0x3272a0]
  42720b:	mov    ecx,DWORD PTR [ebp+0x8]
  42720e:	xor    ecx,edi
  427210:	movzx  eax,al
  427213:	add    ecx,ebx
  427215:	cmp    eax,ecx
  427217:	je     0x427375
  42721d:	mov    eax,DWORD PTR [ebp+0xc]
  427220:	mov    eax,DWORD PTR [eax]
  427222:	xor    eax,edi
  427224:	mov    al,BYTE PTR [ebp+eax*1+0x3272a0]
  42722b:	mov    ecx,DWORD PTR [ebp+0x8]
  42722e:	xor    ecx,edi
  427230:	movzx  eax,al
  427233:	add    ecx,ebx
  427235:	cmp    eax,ecx
  427237:	je     0x427375
  42723d:	mov    eax,DWORD PTR [ebp-0x14]
  427240:	mov    eax,DWORD PTR [eax]
  427242:	xor    eax,edi
  427244:	mov    al,BYTE PTR [ebp+eax*1+0x3272a0]
  42724b:	mov    ecx,DWORD PTR [ebp+0x8]
  42724e:	xor    ecx,edi
  427250:	movzx  eax,al
  427253:	add    ecx,ebx
  427255:	cmp    eax,ecx
  427257:	je     0x427375
  42725d:	mov    eax,DWORD PTR [ebp-0x10]
  427260:	mov    eax,DWORD PTR [eax]
  427262:	xor    eax,edi
  427264:	mov    al,BYTE PTR [ebp+eax*1+0x3272a0]
  42726b:	mov    ecx,DWORD PTR [ebp-0xc]
  42726e:	mov    ecx,DWORD PTR [ecx]
  427270:	xor    ecx,edi
  427272:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272a0]
  427279:	xor    al,cl
  42727b:	mov    ecx,DWORD PTR [ebp+0xc]
  42727e:	mov    ecx,DWORD PTR [ecx]
  427280:	xor    ecx,edi
  427282:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272a0]
  427289:	or     al,cl
  42728b:	mov    ecx,DWORD PTR [ebp-0xc]
  42728e:	mov    ecx,DWORD PTR [ecx]
  427290:	xor    ecx,edi
  427292:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272a4]
  427299:	cmp    cl,al
  42729b:	jne    0x427375
  4272a1:	mov    eax,DWORD PTR [ebp+0xc]
  4272a4:	mov    eax,DWORD PTR [eax]
  4272a6:	xor    eax,edi
  4272a8:	mov    al,BYTE PTR [ebp+eax*1+0x3272a0]
  4272af:	mov    ecx,DWORD PTR [ebp-0x10]
  4272b2:	mov    ecx,DWORD PTR [ecx]
  4272b4:	xor    ecx,edi
  4272b6:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272a0]
  4272bd:	xor    al,cl
  4272bf:	mov    ecx,DWORD PTR [ebp-0x14]
  4272c2:	mov    ecx,DWORD PTR [ecx]
  4272c4:	xor    ecx,edi
  4272c6:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272a0]
  4272cd:	or     al,cl
  4272cf:	mov    ecx,DWORD PTR [ebp-0x10]
  4272d2:	mov    ecx,DWORD PTR [ecx]
  4272d4:	xor    ecx,edi
  4272d6:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272a4]
  4272dd:	cmp    cl,al
  4272df:	jne    0x427375
  4272e5:	mov    eax,DWORD PTR [ebp-0x14]
  4272e8:	mov    eax,DWORD PTR [eax]
  4272ea:	xor    eax,edi
  4272ec:	mov    al,BYTE PTR [ebp+eax*1+0x3272a0]
  4272f3:	mov    ecx,DWORD PTR [ebp+0xc]
  4272f6:	mov    ecx,DWORD PTR [ecx]
  4272f8:	xor    ecx,edi
  4272fa:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272a0]
  427301:	xor    al,cl
  427303:	mov    ecx,DWORD PTR [ebp-0xc]
  427306:	mov    ecx,DWORD PTR [ecx]
  427308:	xor    ecx,edi
  42730a:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272a0]
  427311:	or     al,cl
  427313:	mov    ecx,DWORD PTR [ebp+0xc]
  427316:	mov    ecx,DWORD PTR [ecx]
  427318:	xor    ecx,edi
  42731a:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272a4]
  427321:	cmp    cl,al
  427323:	jne    0x427375
  427325:	mov    eax,DWORD PTR [ebp-0x14]
  427328:	mov    eax,DWORD PTR [eax]
  42732a:	xor    eax,edi
  42732c:	mov    al,BYTE PTR [ebp+eax*1+0x3272a0]
  427333:	mov    ecx,DWORD PTR [ebp-0xc]
  427336:	mov    ecx,DWORD PTR [ecx]
  427338:	xor    ecx,edi
  42733a:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272a0]
  427341:	xor    al,cl
  427343:	mov    ecx,DWORD PTR [ebp-0x10]
  427346:	mov    ecx,DWORD PTR [ecx]
  427348:	xor    ecx,edi
  42734a:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272a0]
  427351:	or     al,cl
  427353:	mov    ecx,DWORD PTR [ebp-0x14]
  427356:	mov    ecx,DWORD PTR [ecx]
  427358:	xor    ecx,edi
  42735a:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272a4]
  427361:	cmp    cl,al
  427363:	jne    0x427375
  427365:	lea    eax,[ebp-0x4c]
  427368:	push   eax
  427369:	call   0x426e30
  42736e:	mov    ecx,DWORD PTR [ebp-0x44]
  427371:	cmp    eax,ecx
  427373:	je     0x42737f
  427375:	mov    eax,DWORD PTR [ebp+0x8]
  427378:	xor    eax,edi
  42737a:	add    eax,ebx
  42737c:	mov    DWORD PTR [ebp+0x18],eax
  42737f:	mov    eax,DWORD PTR [ebp-0x8]
  427382:	xor    eax,edi
  427384:	lea    eax,[eax+esi*1+0x3272ec]
  42738b:	xor    eax,edi
  42738d:	mov    ecx,DWORD PTR [ebp+0x8]
  427390:	mov    edx,DWORD PTR [ebp+0x18]
  427393:	xor    ecx,edi
  427395:	add    ecx,ebx
  427397:	cmp    edx,ecx
  427399:	je     0x427196
  42739f:	mov    eax,DWORD PTR [ebp+0x8]
  4273a2:	mov    ecx,DWORD PTR [ebp+0x18]
  4273a5:	xor    eax,edi
  4273a7:	add    eax,ebx
  4273a9:	cmp    ecx,eax
  4273ab:	jne    0x4273be
  4273ad:	mov    eax,DWORD PTR [ebp-0x8]
  4273b0:	mov    ecx,DWORD PTR [ebp+0x1c]
  4273b3:	xor    eax,edi
  4273b5:	lea    eax,[eax+ecx*1+0x3272ec]
  4273bc:	jmp    0x427435
  4273be:	push   0x18
  4273c0:	push   DWORD PTR [ebp-0x4]
  4273c3:	lea    eax,[ebp-0x64]
  4273c6:	push   eax
  4273c7:	call   0x4266a9
  4273cc:	mov    eax,DWORD PTR [ebp+0x8]
  4273cf:	mov    ecx,DWORD PTR [ebp-0x18]
  4273d2:	xor    eax,edi
  4273d4:	add    eax,ebx
  4273d6:	cmp    eax,ecx
  4273d8:	je     0x4273ed
  4273da:	mov    eax,DWORD PTR [ebp+0x8]
  4273dd:	xor    eax,edi
  4273df:	add    eax,ebx
  4273e1:	push   eax
  4273e2:	push   0x18
  4273e4:	lea    eax,[ebp-0x64]
  4273e7:	push   eax
  4273e8:	call   0x426c8f
  4273ed:	mov    eax,DWORD PTR [ebp-0x4]
  4273f0:	add    eax,0x18
  4273f3:	mov    DWORD PTR [ebp+0x18],eax
  4273f6:	push   DWORD PTR [ebp-0x50]
  4273f9:	push   DWORD PTR [ebp+0x18]
  4273fc:	mov    eax,DWORD PTR [ebp-0x54]
  4273ff:	add    eax,DWORD PTR [ebp-0x20]
  427402:	push   eax
  427403:	call   0x4266a9
  427408:	mov    eax,DWORD PTR [ebp+0x8]
  42740b:	mov    ecx,DWORD PTR [ebp-0x18]
  42740e:	xor    eax,edi
  427410:	add    eax,ebx
  427412:	cmp    eax,ecx
  427414:	je     0x427427
  427416:	push   0x0
  427418:	push   DWORD PTR [ebp-0x50]
  42741b:	mov    eax,DWORD PTR [ebp-0x54]
  42741e:	add    eax,DWORD PTR [ebp-0x20]
  427421:	push   eax
  427422:	call   0x426c8f
  427427:	mov    eax,DWORD PTR [ebp-0x24]
  42742a:	mov    ecx,DWORD PTR [ebp-0x50]
  42742d:	add    DWORD PTR [eax],ecx
  42742f:	mov    eax,DWORD PTR [ebp-0x50]
  427432:	add    eax,DWORD PTR [ebp+0x1c]
  427435:	mov    DWORD PTR [ebp+0x1c],eax
  427438:	mov    eax,DWORD PTR [ebp-0x8]
  42743b:	mov    ecx,DWORD PTR [ebp+0x1c]
  42743e:	xor    eax,edi
  427440:	add    eax,ebx
  427442:	imul   eax,ecx
  427445:	mov    ecx,DWORD PTR [ebp+0x8]
  427448:	mov    edx,DWORD PTR [ebp-0x28]
  42744b:	xor    ecx,edi
  42744d:	lea    ecx,[ecx+edx*1+0x3272ec]
  427454:	cmp    eax,ecx
  427456:	jb     0x4270b4
  42745c:	mov    esi,DWORD PTR [ebp+0x14]
  42745f:	mov    eax,DWORD PTR [ebp-0x20]
  427462:	mov    DWORD PTR [esi],eax
  427464:	jmp    0x4274ab
  427466:	mov    ecx,DWORD PTR [ebp+0x8]
  427469:	mov    edx,DWORD PTR [ebp+0xc]
  42746c:	xor    ecx,edi
  42746e:	xor    edx,edi
  427470:	add    ecx,ebx
  427472:	add    edx,ebx
  427474:	cmp    ecx,edx
  427476:	jne    0x42748a
  427478:	mov    eax,ds:0x7f642ddf
  42747d:	imul   eax,eax,0x9f15fcce
  427483:	mov    ds:0x7f642ddf,eax
  427488:	jmp    0x4274ab
  42748a:	mov    ecx,DWORD PTR [ebp+0x8]
  42748d:	xor    ecx,edi
  42748f:	add    ecx,ebx
  427491:	cmp    eax,ecx
  427493:	je     0x4274a1
  427495:	sub    DWORD PTR ds:0xf861e3f,0x709beac1
  42749f:	jmp    0x4274ab
  4274a1:	and    DWORD PTR ds:0x3343fadf,0x5265ec3e
  4274ab:	pop    edi
  4274ac:	pop    esi
  4274ad:	pop    ebx
  4274ae:	leave  
  4274af:	ret    0x18
  4274b2:	push   ebp
  4274b3:	mov    ebp,esp
  4274b5:	and    esp,0xfffffff8
  4274b8:	mov    eax,DWORD PTR [ebp+0x20]
  4274bb:	sub    esp,0x14
  4274be:	push   ebx
  4274bf:	mov    ebx,DWORD PTR [ebp+0x14]
  4274c2:	push   esi
  4274c3:	push   edi
  4274c4:	cmp    eax,0xf89c85b0
  4274c9:	jne    0x4274d5
  4274cb:	push   0xf89c85b1
  4274d0:	jmp    0x427607
  4274d5:	mov    eax,DWORD PTR [ebp+0x20]
  4274d8:	cmp    eax,0xf89c85b1
  4274dd:	jne    0x4274e9
  4274df:	push   0xf89c85b2
  4274e4:	jmp    0x427607
  4274e9:	mov    eax,DWORD PTR [ebp+0x20]
  4274ec:	cmp    eax,0xf89c85b2
  4274f1:	jne    0x4274fd
  4274f3:	push   0xf89c85b3
  4274f8:	jmp    0x427607
  4274fd:	mov    eax,DWORD PTR [ebp+0x20]
  427500:	cmp    eax,0xf89c85b3
  427505:	jne    0x427511
  427507:	push   0xf89c85bc
  42750c:	jmp    0x427607
  427511:	mov    ecx,DWORD PTR [ebp+0x20]
  427514:	mov    eax,0xf89c85bf
  427519:	cmp    ecx,eax
  42751b:	jne    0x4275d7
  427521:	mov    eax,DWORD PTR [ebp+0x10]
  427524:	mov    DWORD PTR [esp+0xc],eax
  427528:	mov    eax,DWORD PTR [ebp+0x18]
  42752b:	mov    DWORD PTR [esp+0x14],eax
  42752f:	mov    eax,DWORD PTR [ebp+0xc]
  427532:	mov    DWORD PTR [esp+0x18],eax
  427536:	mov    eax,DWORD PTR [ebp+0x8]
  427539:	mov    DWORD PTR [esp+0x10],eax
  42753d:	mov    eax,DWORD PTR [esp+0x10]
  427541:	mov    ecx,DWORD PTR [esp+0x14]
  427545:	mov    edi,0x75108a4
  42754a:	xor    eax,edi
  42754c:	mov    esi,0x3272ec
  427551:	add    eax,esi
  427553:	mov    DWORD PTR [ecx],eax
  427555:	mov    eax,DWORD PTR [esp+0xc]
  427559:	mov    eax,DWORD PTR [eax+0x194]
  42755f:	mov    ecx,DWORD PTR [eax]
  427561:	mov    eax,DWORD PTR [esp+0xc]
  427565:	mov    eax,DWORD PTR [eax+0x194]
  42756b:	mov    eax,DWORD PTR [eax]
  42756d:	add    eax,DWORD PTR [ecx+0x3c]
  427570:	mov    ecx,DWORD PTR [esp+0xc]
  427574:	mov    ecx,DWORD PTR [ecx+0x1d8]
  42757a:	mov    ecx,DWORD PTR [ecx+0x14]
  42757d:	push   0x4
  42757f:	push   0x3000
  427584:	push   DWORD PTR [eax+0x50]
  427587:	push   0x0
  427589:	call   ecx
  42758b:	mov    DWORD PTR [ebx],eax
  42758d:	mov    eax,DWORD PTR [esp+0x10]
  427591:	push   DWORD PTR [esp+0xc]
  427595:	xor    eax,edi
  427597:	add    eax,esi
  427599:	mov    DWORD PTR [esp+0x20],eax
  42759d:	lea    eax,[esp+0x20]
  4275a1:	push   eax
  4275a2:	push   ebx
  4275a3:	push   DWORD PTR [esp+0x20]
  4275a7:	push   DWORD PTR [esp+0x28]
  4275ab:	push   DWORD PTR [esp+0x24]
  4275af:	call   0x426f74
  4275b4:	mov    eax,DWORD PTR [esp+0x10]
  4275b8:	mov    ecx,DWORD PTR [ebx]
  4275ba:	xor    eax,edi
  4275bc:	add    eax,esi
  4275be:	cmp    ecx,eax
  4275c0:	je     0x42761e
  4275c2:	mov    eax,DWORD PTR [esp+0x18]
  4275c6:	mov    ecx,DWORD PTR [esp+0x14]
  4275ca:	xor    eax,edi
  4275cc:	add    eax,esi
  4275ce:	imul   eax,DWORD PTR [esp+0x1c]
  4275d3:	mov    DWORD PTR [ecx],eax
  4275d5:	jmp    0x42761e
  4275d7:	mov    ecx,DWORD PTR [ebp+0x20]
  4275da:	cmp    ecx,0xf89c85bc
  4275e0:	jne    0x4275e9
  4275e2:	push   0xf89c85bd
  4275e7:	jmp    0x427607
  4275e9:	mov    ecx,DWORD PTR [ebp+0x20]
  4275ec:	cmp    ecx,0xf89c85bd
  4275f2:	jne    0x4275fb
  4275f4:	push   0xf89c85be
  4275f9:	jmp    0x427607
  4275fb:	mov    ecx,DWORD PTR [ebp+0x20]
  4275fe:	cmp    ecx,0xf89c85be
  427604:	jne    0x42761e
  427606:	push   eax
  427607:	push   DWORD PTR [ebp+0x1c]
  42760a:	push   DWORD PTR [ebp+0x18]
  42760d:	push   ebx
  42760e:	push   DWORD PTR [ebp+0x10]
  427611:	push   DWORD PTR [ebp+0xc]
  427614:	push   DWORD PTR [ebp+0x8]
  427617:	call   0x4274b2
  42761c:	mov    DWORD PTR [ebx],eax
  42761e:	mov    eax,DWORD PTR [ebx]
  427620:	pop    edi
  427621:	pop    esi
  427622:	pop    ebx
  427623:	mov    esp,ebp
  427625:	pop    ebp
  427626:	ret    0x1c
  427629:	push   ebp
  42762a:	mov    ebp,esp
  42762c:	sub    esp,0xc
  42762f:	mov    eax,0xf89c85b0
  427634:	mov    DWORD PTR [ebp-0x8],eax
  427637:	mov    DWORD PTR [ebp-0xc],0xf89c85b1
  42763e:	mov    ecx,DWORD PTR [ebp-0x8]
  427641:	xor    ecx,0x75108a4
  427647:	add    ecx,0x3272ec
  42764d:	mov    DWORD PTR [ebp-0x4],ecx
  427650:	mov    ecx,DWORD PTR [ebp+0xc]
  427653:	push   eax
  427654:	mov    DWORD PTR [ebp+0xc],ecx
  427657:	push   DWORD PTR [ebp+0xc]
  42765a:	lea    eax,[ebp-0x4]
  42765d:	push   DWORD PTR [ebp+0x8]
  427660:	push   eax
  427661:	push   DWORD PTR [ebp+0xc]
  427664:	push   DWORD PTR [ebp-0xc]
  427667:	push   DWORD PTR [ebp-0x8]
  42766a:	call   0x4274b2
  42766f:	mov    DWORD PTR [ebp-0x4],eax
  427672:	mov    eax,DWORD PTR [ebp-0x4]
  427675:	leave  
  427676:	ret    0x8
