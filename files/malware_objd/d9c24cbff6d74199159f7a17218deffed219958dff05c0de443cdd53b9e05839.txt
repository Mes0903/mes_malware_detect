
d9c24cbff6d74199159f7a17218deffed219958dff05c0de443cdd53b9e05839.exe:     file format pei-i386


Disassembly of section .text:

64001000 <.text>:
64001000:	mov    eax,DWORD PTR [esp+0x4]
64001004:	push   0x64025d88
64001009:	lea    ecx,[esp+0x8]
6400100d:	push   ecx
6400100e:	mov    DWORD PTR [esp+0xc],eax
64001012:	call   0x6400ef3d
64001017:	int3   
64001018:	int3   
64001019:	int3   
6400101a:	int3   
6400101b:	int3   
6400101c:	int3   
6400101d:	int3   
6400101e:	int3   
6400101f:	int3   
64001020:	mov    eax,DWORD PTR [esp+0x4]
64001024:	cmp    eax,0x50
64001027:	ja     0x6400104b
64001029:	movzx  ecx,BYTE PTR [eax+0x64001068]
64001030:	jmp    DWORD PTR [ecx*4+0x64001058]
64001037:	push   0x8007000e
6400103c:	call   0x64001000
64001041:	push   0x80070057
64001046:	call   0x64001000
6400104b:	push   0x80004005
64001050:	call   0x64001000
64001055:	ret    
64001056:	mov    edi,edi
64001058:	push   ebp
64001059:	adc    BYTE PTR [eax],al
6400105b:	fs aaa 
6400105d:	adc    BYTE PTR [eax],al
6400105f:	fs inc ecx
64001061:	adc    BYTE PTR [eax],al
64001063:	fs dec ebx
64001065:	adc    BYTE PTR [eax],al
64001067:	add    BYTE PTR fs:[ebx],al
6400106a:	add    eax,DWORD PTR [ebx]
6400106c:	add    eax,DWORD PTR [ebx]
6400106e:	add    eax,DWORD PTR [ebx]
64001070:	add    eax,DWORD PTR [ebx]
64001072:	add    eax,DWORD PTR [ebx]
64001074:	add    DWORD PTR [ebx],eax
64001076:	add    eax,DWORD PTR [ebx]
64001078:	add    eax,DWORD PTR [ebx]
6400107a:	add    eax,DWORD PTR [ebx]
6400107c:	add    eax,DWORD PTR [ebx]
6400107e:	add    al,BYTE PTR [ebx]
64001080:	add    eax,DWORD PTR [ebx]
64001082:	add    eax,DWORD PTR [ebx]
64001084:	add    eax,DWORD PTR [ebx]
64001086:	add    eax,DWORD PTR [ebx]
64001088:	add    eax,DWORD PTR [ebx]
6400108a:	add    al,BYTE PTR [ebx]
6400108c:	add    eax,DWORD PTR [ebx]
6400108e:	add    eax,DWORD PTR [ebx]
64001090:	add    eax,DWORD PTR [ebx]
64001092:	add    eax,DWORD PTR [ebx]
64001094:	add    eax,DWORD PTR [ebx]
64001096:	add    eax,DWORD PTR [ebx]
64001098:	add    eax,DWORD PTR [ebx]
6400109a:	add    eax,DWORD PTR [ebx]
6400109c:	add    eax,DWORD PTR [ebx]
6400109e:	add    eax,DWORD PTR [ebx]
640010a0:	add    eax,DWORD PTR [ebx]
640010a2:	add    eax,DWORD PTR [ebx]
640010a4:	add    eax,DWORD PTR [ebx]
640010a6:	add    eax,DWORD PTR [ebx]
640010a8:	add    eax,DWORD PTR [ebx]
640010aa:	add    eax,DWORD PTR [ebx]
640010ac:	add    eax,DWORD PTR [ebx]
640010ae:	add    eax,DWORD PTR [ebx]
640010b0:	add    eax,DWORD PTR [ebx]
640010b2:	add    eax,DWORD PTR [ebx]
640010b4:	add    eax,DWORD PTR [ebx]
640010b6:	add    eax,DWORD PTR [ebx]
640010b8:	add    ah,cl
640010ba:	int3   
640010bb:	int3   
640010bc:	int3   
640010bd:	int3   
640010be:	int3   
640010bf:	int3   
640010c0:	push   ebx
640010c1:	mov    ebx,DWORD PTR [esp+0x8]
640010c5:	push   edi
640010c6:	mov    edi,DWORD PTR [esp+0x10]
640010ca:	push   edi
640010cb:	push   ebx
640010cc:	call   DWORD PTR ds:0x64021030
640010d2:	test   eax,eax
640010d4:	jne    0x640010d9
640010d6:	pop    edi
640010d7:	pop    ebx
640010d8:	ret    
640010d9:	push   esi
640010da:	push   eax
640010db:	call   DWORD PTR ds:0x6402102c
640010e1:	mov    esi,eax
640010e3:	test   esi,esi
640010e5:	je     0x64001114
640010e7:	push   edi
640010e8:	push   ebx
640010e9:	call   DWORD PTR ds:0x64021028
640010ef:	mov    ecx,DWORD PTR [esp+0x18]
640010f3:	add    eax,esi
640010f5:	and    ecx,0xf
640010f8:	jbe    0x64001110
640010fa:	lea    ebx,[ebx+0x0]
64001100:	cmp    esi,eax
64001102:	jae    0x64001114
64001104:	sub    ecx,0x1
64001107:	movzx  edx,WORD PTR [esi]
6400110a:	lea    esi,[esi+edx*2+0x2]
6400110e:	jne    0x64001100
64001110:	cmp    esi,eax
64001112:	jb     0x6400111a
64001114:	pop    esi
64001115:	pop    edi
64001116:	xor    eax,eax
64001118:	pop    ebx
64001119:	ret    
6400111a:	mov    ax,WORD PTR [esi]
6400111d:	neg    ax
64001120:	sbb    eax,eax
64001122:	and    eax,esi
64001124:	pop    esi
64001125:	pop    edi
64001126:	pop    ebx
64001127:	ret    
64001128:	int3   
64001129:	int3   
6400112a:	int3   
6400112b:	int3   
6400112c:	int3   
6400112d:	int3   
6400112e:	int3   
6400112f:	int3   
64001130:	push   ebx
64001131:	push   ebp
64001132:	push   esi
64001133:	push   edi
64001134:	xor    edi,edi
64001136:	push   edi
64001137:	mov    ecx,0x6402946c
6400113c:	call   0x6400e781
64001141:	mov    esi,eax
64001143:	test   esi,esi
64001145:	lea    ebp,[edi+0x1]
64001148:	je     0x64001197
6400114a:	mov    ebx,DWORD PTR [esp+0x14]
6400114e:	mov    edi,edi
64001150:	test   edi,edi
64001152:	jne    0x64001197
64001154:	mov    eax,DWORD PTR [esp+0x18]
64001158:	mov    ecx,ebx
6400115a:	shr    ecx,0x4
6400115d:	add    ecx,0x1
64001160:	push   eax
64001161:	movzx  edx,cx
64001164:	push   edx
64001165:	push   0x6
64001167:	push   esi
64001168:	call   DWORD PTR ds:0x64021038
6400116e:	test   eax,eax
64001170:	je     0x64001183
64001172:	push   ebx
64001173:	push   eax
64001174:	push   esi
64001175:	call   0x640010c0
6400117a:	mov    edi,eax
6400117c:	add    esp,0xc
6400117f:	test   edi,edi
64001181:	jne    0x6400119e
64001183:	push   ebp
64001184:	mov    ecx,0x6402946c
64001189:	call   0x6400e781
6400118e:	mov    esi,eax
64001190:	add    ebp,0x1
64001193:	test   esi,esi
64001195:	jne    0x64001150
64001197:	pop    edi
64001198:	pop    esi
64001199:	pop    ebp
6400119a:	xor    eax,eax
6400119c:	pop    ebx
6400119d:	ret    
6400119e:	pop    edi
6400119f:	mov    eax,esi
640011a1:	pop    esi
640011a2:	pop    ebp
640011a3:	pop    ebx
640011a4:	ret    
640011a5:	int3   
640011a6:	int3   
640011a7:	int3   
640011a8:	int3   
640011a9:	int3   
640011aa:	int3   
640011ab:	int3   
640011ac:	int3   
640011ad:	int3   
640011ae:	int3   
640011af:	int3   
640011b0:	mov    DWORD PTR [ecx],0x640212f4
640011b6:	jmp    0x6400ec6b
640011bb:	int3   
640011bc:	int3   
640011bd:	int3   
640011be:	int3   
640011bf:	int3   
640011c0:	push   esi
640011c1:	mov    esi,ecx
640011c3:	mov    DWORD PTR [esi],0x640212f4
640011c9:	call   0x6400ec6b
640011ce:	test   BYTE PTR [esp+0x8],0x1
640011d3:	je     0x640011de
640011d5:	push   esi
640011d6:	call   0x6400eb52
640011db:	add    esp,0x4
640011de:	mov    eax,esi
640011e0:	pop    esi
640011e1:	ret    0x4
640011e4:	int3   
640011e5:	int3   
640011e6:	int3   
640011e7:	int3   
640011e8:	int3   
640011e9:	int3   
640011ea:	int3   
640011eb:	int3   
640011ec:	int3   
640011ed:	int3   
640011ee:	int3   
640011ef:	int3   
640011f0:	push   0xffffffff
640011f2:	push   0x6401ec38
640011f7:	mov    eax,fs:0x0
640011fd:	push   eax
640011fe:	push   esi
640011ff:	mov    eax,ds:0x64028038
64001204:	xor    eax,esp
64001206:	push   eax
64001207:	lea    eax,[esp+0x8]
6400120b:	mov    fs:0x0,eax
64001211:	mov    esi,DWORD PTR [esp+0x18]
64001215:	mov    ecx,esi
64001217:	call   0x6400eb9c
6400121c:	xor    eax,eax
6400121e:	mov    DWORD PTR [esp+0x10],eax
64001222:	lea    ecx,[esi+0xc]
64001225:	mov    DWORD PTR [esi],0x640235a0
6400122b:	push   0xffffffff
6400122d:	mov    DWORD PTR [ecx+0x14],eax
64001230:	mov    DWORD PTR [ecx+0x18],0xf
64001237:	push   eax
64001238:	mov    BYTE PTR [ecx+0x4],al
6400123b:	mov    eax,DWORD PTR [esp+0x24]
6400123f:	push   eax
64001240:	call   0x64001ad0
64001245:	mov    eax,esi
64001247:	mov    ecx,DWORD PTR [esp+0x8]
6400124b:	mov    DWORD PTR fs:0x0,ecx
64001252:	pop    ecx
64001253:	pop    esi
64001254:	add    esp,0xc
64001257:	ret    0x8
6400125a:	int3   
6400125b:	int3   
6400125c:	int3   
6400125d:	int3   
6400125e:	int3   
6400125f:	int3   
64001260:	push   esi
64001261:	mov    esi,ecx
64001263:	mov    DWORD PTR [esi],0x640235a0
64001269:	cmp    DWORD PTR [esi+0x24],0x10
6400126d:	jb     0x6400127b
6400126f:	mov    eax,DWORD PTR [esi+0x10]
64001272:	push   eax
64001273:	call   0x6400eb52
64001278:	add    esp,0x4
6400127b:	xor    eax,eax
6400127d:	mov    DWORD PTR [esi+0x24],0xf
64001284:	mov    DWORD PTR [esi+0x20],eax
64001287:	mov    BYTE PTR [esi+0x10],al
6400128a:	mov    ecx,esi
6400128c:	pop    esi
6400128d:	jmp    0x6400ec6b
64001292:	int3   
64001293:	int3   
64001294:	int3   
64001295:	int3   
64001296:	int3   
64001297:	int3   
64001298:	int3   
64001299:	int3   
6400129a:	int3   
6400129b:	int3   
6400129c:	int3   
6400129d:	int3   
6400129e:	int3   
6400129f:	int3   
640012a0:	push   esi
640012a1:	mov    esi,ecx
640012a3:	mov    DWORD PTR [esi],0x640235a0
640012a9:	cmp    DWORD PTR [esi+0x24],0x10
640012ad:	jb     0x640012bb
640012af:	mov    eax,DWORD PTR [esi+0x10]
640012b2:	push   eax
640012b3:	call   0x6400eb52
640012b8:	add    esp,0x4
640012bb:	xor    eax,eax
640012bd:	mov    DWORD PTR [esi+0x24],0xf
640012c4:	mov    DWORD PTR [esi+0x20],eax
640012c7:	mov    ecx,esi
640012c9:	mov    BYTE PTR [esi+0x10],al
640012cc:	call   0x6400ec6b
640012d1:	test   BYTE PTR [esp+0x8],0x1
640012d6:	je     0x640012e1
640012d8:	push   esi
640012d9:	call   0x6400eb52
640012de:	add    esp,0x4
640012e1:	mov    eax,esi
640012e3:	pop    esi
640012e4:	ret    0x4
640012e7:	int3   
640012e8:	int3   
640012e9:	int3   
640012ea:	int3   
640012eb:	int3   
640012ec:	int3   
640012ed:	int3   
640012ee:	int3   
640012ef:	int3   
640012f0:	push   0xffffffff
640012f2:	push   0x6401ec08
640012f7:	mov    eax,fs:0x0
640012fd:	push   eax
640012fe:	push   ecx
640012ff:	push   esi
64001300:	push   edi
64001301:	mov    eax,ds:0x64028038
64001306:	xor    eax,esp
64001308:	push   eax
64001309:	lea    eax,[esp+0x10]
6400130d:	mov    fs:0x0,eax
64001313:	mov    esi,ecx
64001315:	mov    DWORD PTR [esp+0xc],esi
64001319:	mov    edi,DWORD PTR [esp+0x20]
6400131d:	push   edi
6400131e:	call   0x6400ec13
64001323:	xor    edx,edx
64001325:	mov    DWORD PTR [esp+0x18],edx
64001329:	push   0xffffffff
6400132b:	lea    ecx,[esi+0xc]
6400132e:	mov    DWORD PTR [esi],0x640235a0
64001334:	lea    eax,[edi+0xc]
64001337:	push   edx
64001338:	mov    DWORD PTR [ecx+0x18],0xf
6400133f:	mov    DWORD PTR [ecx+0x14],edx
64001342:	push   eax
64001343:	mov    BYTE PTR [ecx+0x4],dl
64001346:	call   0x64001ad0
6400134b:	mov    eax,esi
6400134d:	mov    ecx,DWORD PTR [esp+0x10]
64001351:	mov    DWORD PTR fs:0x0,ecx
64001358:	pop    ecx
64001359:	pop    edi
6400135a:	pop    esi
6400135b:	add    esp,0x10
6400135e:	ret    0x4
64001361:	int3   
64001362:	int3   
64001363:	int3   
64001364:	int3   
64001365:	int3   
64001366:	int3   
64001367:	int3   
64001368:	int3   
64001369:	int3   
6400136a:	int3   
6400136b:	int3   
6400136c:	int3   
6400136d:	int3   
6400136e:	int3   
6400136f:	int3   
64001370:	push   0xffffffff
64001372:	push   0x6401fc8b
64001377:	mov    eax,fs:0x0
6400137d:	push   eax
6400137e:	sub    esp,0x420
64001384:	mov    eax,ds:0x64028038
64001389:	xor    eax,esp
6400138b:	mov    DWORD PTR [esp+0x41c],eax
64001392:	push   ebx
64001393:	push   ebp
64001394:	push   esi
64001395:	push   edi
64001396:	mov    eax,ds:0x64028038
6400139b:	xor    eax,esp
6400139d:	push   eax
6400139e:	lea    eax,[esp+0x434]
640013a5:	mov    fs:0x0,eax
640013ab:	mov    esi,DWORD PTR [esp+0x444]
640013b2:	mov    ebx,DWORD PTR [esp+0x448]
640013b9:	mov    ebp,DWORD PTR [esp+0x44c]
640013c0:	lea    eax,[esp+0x228]
640013c7:	push   eax
640013c8:	push   0x100
640013cd:	mov    DWORD PTR [esp+0x20],esi
640013d1:	mov    DWORD PTR [esp+0x24],0x0
640013d9:	call   0x6400aac0
640013de:	call   eax
640013e0:	cmp    eax,0x100
640013e5:	jbe    0x6400141d
640013e7:	push   0x6402358c
640013ec:	mov    ecx,esi
640013ee:	call   0x640017e0
640013f3:	mov    eax,esi
640013f5:	mov    ecx,DWORD PTR [esp+0x434]
640013fc:	mov    DWORD PTR fs:0x0,ecx
64001403:	pop    ecx
64001404:	pop    edi
64001405:	pop    esi
64001406:	pop    ebp
64001407:	pop    ebx
64001408:	mov    ecx,DWORD PTR [esp+0x41c]
6400140f:	xor    ecx,esp
64001411:	call   0x6400f34e
64001416:	add    esp,0x42c
6400141c:	ret    
6400141d:	lea    ecx,[esp+0x20]
64001421:	push   ecx
64001422:	push   0x0
64001424:	lea    edx,[esp+0x230]
6400142b:	push   0x64023590
64001430:	push   edx
64001431:	call   0x6400aba0
64001436:	call   eax
64001438:	test   eax,eax
6400143a:	je     0x640013e7
6400143c:	mov    edi,DWORD PTR ds:0x64021050
64001442:	xor    esi,esi
64001444:	cmp    esi,0x708
6400144a:	je     0x64001596
64001450:	lea    eax,[esp+0x20]
64001454:	push   eax
64001455:	call   0x6400a900
6400145a:	call   eax
6400145c:	test   eax,eax
6400145e:	jne    0x64001471
64001460:	push   esi
64001461:	call   edi
64001463:	add    esi,0xc8
64001469:	cmp    esi,0x7d0
6400146f:	jne    0x64001444
64001471:	xor    esi,esi
64001473:	cmp    esi,0x708
64001479:	je     0x64001596
6400147f:	lea    ecx,[esp+0x20]
64001483:	push   0x0
64001485:	push   ecx
64001486:	call   0x6400ac80
6400148b:	call   eax
6400148d:	test   eax,eax
6400148f:	jne    0x640014a2
64001491:	push   esi
64001492:	call   edi
64001494:	add    esi,0xc8
6400149a:	cmp    esi,0x7d0
640014a0:	jne    0x64001473
640014a2:	lea    eax,[esp+0x20]
640014a6:	lea    edx,[eax+0x2]
640014a9:	lea    esp,[esp+0x0]
640014b0:	mov    cx,WORD PTR [eax]
640014b3:	add    eax,0x2
640014b6:	test   cx,cx
640014b9:	jne    0x640014b0
640014bb:	sub    eax,edx
640014bd:	sar    eax,1
640014bf:	push   eax
640014c0:	lea    edx,[esp+0x24]
640014c4:	push   edx
640014c5:	mov    ecx,ebp
640014c7:	call   0x64001ff0
640014cc:	lea    eax,[esp+0x20]
640014d0:	push   eax
640014d1:	lea    ecx,[esp+0x18]
640014d5:	call   0x640017e0
640014da:	push   0x64023598
640014df:	lea    ecx,[esp+0x18]
640014e3:	mov    DWORD PTR [esp+0x440],0x0
640014ee:	call   0x640018b0
640014f3:	mov    ecx,DWORD PTR [esp+0x14]
640014f7:	mov    eax,DWORD PTR [ebx]
640014f9:	mov    edx,DWORD PTR [eax-0xc]
640014fc:	mov    ebp,DWORD PTR [ecx-0xc]
640014ff:	mov    ebx,eax
64001501:	mov    eax,DWORD PTR [ecx-0x8]
64001504:	lea    edi,[edx+ebp*1]
64001507:	mov    DWORD PTR [esp+0x1c],edx
6400150b:	mov    esi,ebx
6400150d:	mov    edx,0x1
64001512:	sub    edx,DWORD PTR [ecx-0x4]
64001515:	sub    esi,ecx
64001517:	sub    eax,edi
64001519:	sar    esi,1
6400151b:	or     eax,edx
6400151d:	jge    0x6400152d
6400151f:	push   edi
64001520:	lea    ecx,[esp+0x18]
64001524:	call   0x64002280
64001529:	mov    ecx,DWORD PTR [esp+0x14]
6400152d:	cmp    esi,ebp
6400152f:	ja     0x64001534
64001531:	lea    ebx,[ecx+esi*2]
64001534:	mov    eax,DWORD PTR [esp+0x1c]
64001538:	add    eax,eax
6400153a:	push   eax
6400153b:	push   ebx
6400153c:	push   eax
6400153d:	lea    ecx,[ecx+ebp*2]
64001540:	push   ecx
64001541:	call   0x6400ecaa
64001546:	add    esp,0x10
64001549:	test   edi,edi
6400154b:	jl     0x6400161d
64001551:	mov    eax,DWORD PTR [esp+0x14]
64001555:	cmp    edi,DWORD PTR [eax-0x8]
64001558:	jg     0x6400161d
6400155e:	mov    DWORD PTR [eax-0xc],edi
64001561:	mov    edx,DWORD PTR [esp+0x14]
64001565:	mov    WORD PTR [edx+edi*2],0x0
6400156b:	mov    esi,DWORD PTR [esp+0x14]
6400156f:	mov    ecx,DWORD PTR [esi-0x10]
64001572:	mov    eax,DWORD PTR [ecx]
64001574:	mov    edx,DWORD PTR [eax+0x10]
64001577:	add    esi,0xfffffff0
6400157a:	call   edx
6400157c:	cmp    DWORD PTR [esi+0xc],0x0
64001580:	lea    ecx,[esi+0xc]
64001583:	jl     0x640015a4
64001585:	cmp    eax,DWORD PTR [esi]
64001587:	jne    0x640015a4
64001589:	mov    edi,esi
6400158b:	mov    eax,0x1
64001590:	lock xadd DWORD PTR [ecx],eax
64001594:	jmp    0x640015e0
64001596:	mov    esi,DWORD PTR [esp+0x18]
6400159a:	push   0x6402358c
6400159f:	jmp    0x640013ec
640015a4:	mov    ecx,DWORD PTR [esi+0x4]
640015a7:	mov    edx,DWORD PTR [eax]
640015a9:	mov    edx,DWORD PTR [edx]
640015ab:	push   0x2
640015ad:	push   ecx
640015ae:	mov    ecx,eax
640015b0:	call   edx
640015b2:	mov    edi,eax
640015b4:	test   edi,edi
640015b6:	jne    0x640015bd
640015b8:	jmp    0x64002090
640015bd:	mov    eax,DWORD PTR [esi+0x4]
640015c0:	mov    DWORD PTR [edi+0x4],eax
640015c3:	mov    eax,DWORD PTR [esi+0x4]
640015c6:	lea    ecx,[eax+eax*1+0x2]
640015ca:	push   ecx
640015cb:	add    esi,0x10
640015ce:	lea    edx,[eax+eax*1+0x2]
640015d2:	push   esi
640015d3:	push   edx
640015d4:	lea    eax,[edi+0x10]
640015d7:	push   eax
640015d8:	call   0x6400ecaa
640015dd:	add    esp,0x10
640015e0:	mov    esi,DWORD PTR [esp+0x18]
640015e4:	mov    DWORD PTR [esp+0x43c],0xffffffff
640015ef:	mov    eax,DWORD PTR [esp+0x14]
640015f3:	add    edi,0x10
640015f6:	add    eax,0xfffffff0
640015f9:	mov    DWORD PTR [esi],edi
640015fb:	lea    ecx,[eax+0xc]
640015fe:	or     edx,0xffffffff
64001601:	lock xadd DWORD PTR [ecx],edx
64001605:	dec    edx
64001606:	test   edx,edx
64001608:	jg     0x640013f3
6400160e:	mov    ecx,DWORD PTR [eax]
64001610:	mov    edx,DWORD PTR [ecx]
64001612:	push   eax
64001613:	mov    eax,DWORD PTR [edx+0x4]
64001616:	call   eax
64001618:	jmp    0x640013f3
6400161d:	push   0x80070057
64001622:	call   0x64001000
64001627:	int3   
64001628:	int3   
64001629:	int3   
6400162a:	int3   
6400162b:	int3   
6400162c:	int3   
6400162d:	int3   
6400162e:	int3   
6400162f:	int3   
64001630:	push   0xffffffff
64001632:	push   0x6401fc60
64001637:	mov    eax,fs:0x0
6400163d:	push   eax
6400163e:	sub    esp,0x4c
64001641:	push   ebx
64001642:	push   esi
64001643:	push   edi
64001644:	mov    eax,ds:0x64028038
64001649:	xor    eax,esp
6400164b:	push   eax
6400164c:	lea    eax,[esp+0x5c]
64001650:	mov    fs:0x0,eax
64001656:	xor    ebx,ebx
64001658:	push   ebx
64001659:	push   0x80
6400165e:	push   0x2
64001660:	push   ebx
64001661:	push   ebx
64001662:	mov    DWORD PTR [esp+0x78],ebx
64001666:	mov    edi,DWORD PTR [esp+0x80]
6400166d:	push   0x40000000
64001672:	push   edi
64001673:	call   0x6400a9e0
64001678:	call   eax
6400167a:	mov    esi,eax
6400167c:	mov    DWORD PTR [esp+0x10],esi
64001680:	cmp    esi,0xffffffff
64001683:	mov    BYTE PTR [esp+0x64],0x1
64001688:	push   ebx
64001689:	jne    0x640016cc
6400168b:	push   0x6402358e
64001690:	lea    ecx,[esp+0x20]
64001694:	mov    DWORD PTR [esp+0x38],0xf
6400169c:	mov    DWORD PTR [esp+0x34],ebx
640016a0:	mov    BYTE PTR [esp+0x24],bl
640016a4:	call   0x64001bb0
640016a9:	lea    eax,[esp+0x18]
640016ad:	push   eax
640016ae:	lea    ecx,[esp+0x38]
640016b2:	push   ecx
640016b3:	mov    BYTE PTR [esp+0x6c],0x2
640016b8:	call   0x640011f0
640016bd:	push   0x64025ddc
640016c2:	lea    edx,[esp+0x38]
640016c6:	push   edx
640016c7:	call   0x6400ef3d
640016cc:	mov    ecx,DWORD PTR [esp+0x78]
640016d0:	mov    edx,DWORD PTR [esp+0x74]
640016d4:	lea    eax,[esp+0x18]
640016d8:	push   eax
640016d9:	push   ecx
640016da:	push   edx
640016db:	push   esi
640016dc:	call   DWORD PTR ds:0x64021078
640016e2:	test   eax,eax
640016e4:	jne    0x64001728
640016e6:	push   ebx
640016e7:	push   0x6402358e
640016ec:	lea    ecx,[esp+0x20]
640016f0:	mov    DWORD PTR [esp+0x38],0xf
640016f8:	mov    DWORD PTR [esp+0x34],ebx
640016fc:	mov    BYTE PTR [esp+0x24],bl
64001700:	call   0x64001bb0
64001705:	lea    eax,[esp+0x18]
64001709:	push   eax
6400170a:	lea    ecx,[esp+0x38]
6400170e:	push   ecx
6400170f:	mov    BYTE PTR [esp+0x6c],0x3
64001714:	call   0x640011f0
64001719:	push   0x64025ddc
6400171e:	lea    edx,[esp+0x38]
64001722:	push   edx
64001723:	call   0x6400ef3d
64001728:	cmp    esi,ebx
6400172a:	je     0x64001742
6400172c:	call   DWORD PTR ds:0x64021044
64001732:	push   esi
64001733:	mov    ebx,eax
64001735:	call   DWORD PTR ds:0x64021040
6400173b:	push   ebx
6400173c:	call   DWORD PTR ds:0x64021010
64001742:	lea    eax,[edi-0x10]
64001745:	mov    DWORD PTR [esp+0x64],0xffffffff
6400174d:	lea    ecx,[eax+0xc]
64001750:	or     edx,0xffffffff
64001753:	lock xadd DWORD PTR [ecx],edx
64001757:	dec    edx
64001758:	test   edx,edx
6400175a:	jg     0x64001766
6400175c:	mov    ecx,DWORD PTR [eax]
6400175e:	mov    edx,DWORD PTR [ecx]
64001760:	push   eax
64001761:	mov    eax,DWORD PTR [edx+0x4]
64001764:	call   eax
64001766:	mov    ecx,DWORD PTR [esp+0x5c]
6400176a:	mov    DWORD PTR fs:0x0,ecx
64001771:	pop    ecx
64001772:	pop    edi
64001773:	pop    esi
64001774:	pop    ebx
64001775:	add    esp,0x58
64001778:	ret    
64001779:	int3   
6400177a:	int3   
6400177b:	int3   
6400177c:	int3   
6400177d:	int3   
6400177e:	int3   
6400177f:	int3   
64001780:	sub    esp,0x8
64001783:	mov    DWORD PTR [esp],0x0
6400178a:	mov    DWORD PTR [esp+0x4],0x0
64001792:	call   DWORD PTR ds:0x64028008
64001798:	mov    eax,DWORD PTR [esp+0x10]
6400179c:	mov    eax,DWORD PTR [eax]
6400179e:	lea    ecx,[esp+0x4]
640017a2:	push   ecx
640017a3:	push   0x0
640017a5:	lea    edx,[esp+0x8]
640017a9:	push   edx
640017aa:	push   0x0
640017ac:	push   0x0
640017ae:	push   0x5
640017b0:	push   0x1
640017b2:	push   eax
640017b3:	call   0x6400b700
640017b8:	call   eax
640017ba:	test   eax,eax
640017bc:	jne    0x640017da
640017be:	mov    ecx,DWORD PTR [esp]
640017c1:	mov    eax,DWORD PTR [esp+0xc]
640017c5:	mov    eax,DWORD PTR [eax]
640017c7:	push   0x0
640017c9:	push   ecx
640017ca:	push   0x0
640017cc:	push   0x0
640017ce:	push   0x4
640017d0:	push   0x1
640017d2:	push   eax
640017d3:	call   0x6400b7e0
640017d8:	call   eax
640017da:	add    esp,0x8
640017dd:	ret    
640017de:	int3   
640017df:	int3   
640017e0:	push   0xffffffff
640017e2:	push   0x6401f1f8
640017e7:	mov    eax,fs:0x0
640017ed:	push   eax
640017ee:	push   ecx
640017ef:	push   esi
640017f0:	push   edi
640017f1:	mov    eax,ds:0x64028038
640017f6:	xor    eax,esp
640017f8:	push   eax
640017f9:	lea    eax,[esp+0x10]
640017fd:	mov    fs:0x0,eax
64001803:	mov    edi,ecx
64001805:	mov    DWORD PTR [esp+0xc],edi
64001809:	mov    eax,ds:0x640294e0
6400180e:	mov    edx,DWORD PTR [eax+0xc]
64001811:	mov    ecx,0x640294e0
64001816:	call   edx
64001818:	add    eax,0x10
6400181b:	mov    DWORD PTR [edi],eax
6400181d:	mov    edx,DWORD PTR [esp+0x20]
64001821:	test   edx,edx
64001823:	mov    DWORD PTR [esp+0x18],0x0
6400182b:	je     0x64001852
6400182d:	test   edx,0xffff0000
64001833:	jne    0x64001856
64001835:	movzx  esi,dx
64001838:	push   0x0
6400183a:	push   esi
6400183b:	call   0x64001130
64001840:	add    esp,0x8
64001843:	test   eax,eax
64001845:	je     0x64001878
64001847:	push   esi
64001848:	push   eax
64001849:	mov    ecx,edi
6400184b:	call   0x64001e20
64001850:	jmp    0x64001878
64001852:	xor    eax,eax
64001854:	jmp    0x6400186f
64001856:	mov    eax,edx
64001858:	lea    esi,[eax+0x2]
6400185b:	jmp    0x64001860
6400185d:	lea    ecx,[ecx+0x0]
64001860:	mov    cx,WORD PTR [eax]
64001863:	add    eax,0x2
64001866:	test   cx,cx
64001869:	jne    0x64001860
6400186b:	sub    eax,esi
6400186d:	sar    eax,1
6400186f:	push   eax
64001870:	push   edx
64001871:	mov    ecx,edi
64001873:	call   0x64001ff0
64001878:	mov    eax,edi
6400187a:	mov    ecx,DWORD PTR [esp+0x10]
6400187e:	mov    DWORD PTR fs:0x0,ecx
64001885:	pop    ecx
64001886:	pop    edi
64001887:	pop    esi
64001888:	add    esp,0x10
6400188b:	ret    0x4
6400188e:	int3   
6400188f:	int3   
64001890:	mov    eax,DWORD PTR [esp+0x4]
64001894:	mov    eax,DWORD PTR [eax]
64001896:	push   esi
64001897:	mov    esi,ecx
64001899:	mov    ecx,DWORD PTR [eax-0xc]
6400189c:	push   ecx
6400189d:	push   eax
6400189e:	mov    ecx,esi
640018a0:	call   0x64001ef0
640018a5:	mov    eax,esi
640018a7:	pop    esi
640018a8:	ret    0x4
640018ab:	int3   
640018ac:	int3   
640018ad:	int3   
640018ae:	int3   
640018af:	int3   
640018b0:	push   0xffffffff
640018b2:	push   0x6401f1c8
640018b7:	mov    eax,fs:0x0
640018bd:	push   eax
640018be:	push   ecx
640018bf:	push   esi
640018c0:	mov    eax,ds:0x64028038
640018c5:	xor    eax,esp
640018c7:	push   eax
640018c8:	lea    eax,[esp+0xc]
640018cc:	mov    fs:0x0,eax
640018d2:	mov    esi,ecx
640018d4:	mov    eax,DWORD PTR [esi]
640018d6:	mov    ecx,DWORD PTR [eax-0x10]
640018d9:	test   ecx,ecx
640018db:	je     0x640018e8
640018dd:	mov    edx,DWORD PTR [ecx]
640018df:	mov    eax,DWORD PTR [edx+0x10]
640018e2:	call   eax
640018e4:	test   eax,eax
640018e6:	jne    0x640018f8
640018e8:	mov    edx,DWORD PTR ds:0x640294e0
640018ee:	mov    eax,DWORD PTR [edx+0x10]
640018f1:	mov    ecx,0x640294e0
640018f6:	call   eax
640018f8:	mov    ecx,DWORD PTR [esp+0x1c]
640018fc:	push   eax
640018fd:	push   ecx
640018fe:	lea    ecx,[esp+0x10]
64001902:	call   0x64001a10
64001907:	mov    DWORD PTR [esp+0x14],0x0
6400190f:	mov    eax,DWORD PTR [esp+0x8]
64001913:	mov    ecx,DWORD PTR [eax-0xc]
64001916:	push   ecx
64001917:	push   eax
64001918:	mov    ecx,esi
6400191a:	call   0x64001ef0
6400191f:	mov    DWORD PTR [esp+0x14],0xffffffff
64001927:	mov    eax,DWORD PTR [esp+0x8]
6400192b:	add    eax,0xfffffff0
6400192e:	lea    edx,[eax+0xc]
64001931:	or     ecx,0xffffffff
64001934:	lock xadd DWORD PTR [edx],ecx
64001938:	dec    ecx
64001939:	test   ecx,ecx
6400193b:	jg     0x64001947
6400193d:	mov    ecx,DWORD PTR [eax]
6400193f:	mov    edx,DWORD PTR [ecx]
64001941:	push   eax
64001942:	mov    eax,DWORD PTR [edx+0x4]
64001945:	call   eax
64001947:	mov    eax,esi
64001949:	mov    ecx,DWORD PTR [esp+0xc]
6400194d:	mov    DWORD PTR fs:0x0,ecx
64001954:	pop    ecx
64001955:	pop    esi
64001956:	add    esp,0x10
64001959:	ret    0x4
6400195c:	int3   
6400195d:	int3   
6400195e:	int3   
6400195f:	int3   
64001960:	mov    edx,DWORD PTR [esp+0x4]
64001964:	push   esi
64001965:	mov    esi,ecx
64001967:	mov    eax,edx
64001969:	push   edi
6400196a:	mov    DWORD PTR [esi+0x18],0xf
64001971:	mov    DWORD PTR [esi+0x14],0x0
64001978:	mov    BYTE PTR [esi+0x4],0x0
6400197c:	lea    edi,[eax+0x1]
6400197f:	nop
64001980:	mov    cl,BYTE PTR [eax]
64001982:	add    eax,0x1
64001985:	test   cl,cl
64001987:	jne    0x64001980
64001989:	sub    eax,edi
6400198b:	push   eax
6400198c:	push   edx
6400198d:	mov    ecx,esi
6400198f:	call   0x64001bb0
64001994:	pop    edi
64001995:	mov    eax,esi
64001997:	pop    esi
64001998:	ret    0x4
6400199b:	int3   
6400199c:	int3   
6400199d:	int3   
6400199e:	int3   
6400199f:	int3   
640019a0:	push   esi
640019a1:	mov    esi,ecx
640019a3:	cmp    DWORD PTR [esi+0x18],0x10
640019a7:	jb     0x640019b5
640019a9:	mov    eax,DWORD PTR [esi+0x4]
640019ac:	push   eax
640019ad:	call   0x6400eb52
640019b2:	add    esp,0x4
640019b5:	xor    eax,eax
640019b7:	mov    DWORD PTR [esi+0x18],0xf
640019be:	mov    DWORD PTR [esi+0x14],eax
640019c1:	mov    BYTE PTR [esi+0x4],al
640019c4:	pop    esi
640019c5:	ret    
640019c6:	int3   
640019c7:	int3   
640019c8:	int3   
640019c9:	int3   
640019ca:	int3   
640019cb:	int3   
640019cc:	int3   
640019cd:	int3   
640019ce:	int3   
640019cf:	int3   
640019d0:	push   esi
640019d1:	mov    esi,ecx
640019d3:	push   edi
640019d4:	mov    edi,DWORD PTR [esi]
640019d6:	test   edi,edi
640019d8:	je     0x640019f2
640019da:	push   ebx
640019db:	call   DWORD PTR ds:0x64021044
640019e1:	push   edi
640019e2:	mov    ebx,eax
640019e4:	call   DWORD PTR ds:0x64021040
640019ea:	push   ebx
640019eb:	call   DWORD PTR ds:0x64021010
640019f1:	pop    ebx
640019f2:	pop    edi
640019f3:	mov    DWORD PTR [esi],0x0
640019f9:	pop    esi
640019fa:	ret    
640019fb:	int3   
640019fc:	int3   
640019fd:	int3   
640019fe:	int3   
640019ff:	int3   
64001a00:	mov    eax,DWORD PTR [ecx]
64001a02:	push   eax
64001a03:	call   0x6400eb52
64001a08:	pop    ecx
64001a09:	ret    
64001a0a:	int3   
64001a0b:	int3   
64001a0c:	int3   
64001a0d:	int3   
64001a0e:	int3   
64001a0f:	int3   
64001a10:	push   0xffffffff
64001a12:	push   0x6401f198
64001a17:	mov    eax,fs:0x0
64001a1d:	push   eax
64001a1e:	push   ecx
64001a1f:	push   esi
64001a20:	push   edi
64001a21:	mov    eax,ds:0x64028038
64001a26:	xor    eax,esp
64001a28:	push   eax
64001a29:	lea    eax,[esp+0x10]
64001a2d:	mov    fs:0x0,eax
64001a33:	mov    esi,ecx
64001a35:	mov    DWORD PTR [esp+0xc],esi
64001a39:	mov    ecx,DWORD PTR [esp+0x24]
64001a3d:	xor    eax,eax
64001a3f:	test   ecx,ecx
64001a41:	setne  al
64001a44:	test   eax,eax
64001a46:	jne    0x64001a52
64001a48:	push   0x80004005
64001a4d:	call   0x64001000
64001a52:	mov    eax,DWORD PTR [ecx]
64001a54:	mov    edx,DWORD PTR [eax+0xc]
64001a57:	call   edx
64001a59:	add    eax,0x10
64001a5c:	mov    DWORD PTR [esi],eax
64001a5e:	mov    eax,DWORD PTR [esp+0x20]
64001a62:	test   eax,eax
64001a64:	mov    DWORD PTR [esp+0x18],0x0
64001a6c:	je     0x64001a92
64001a6e:	test   eax,0xffff0000
64001a73:	jne    0x64001a92
64001a75:	movzx  edi,ax
64001a78:	push   0x0
64001a7a:	push   edi
64001a7b:	call   0x64001130
64001a80:	add    esp,0x8
64001a83:	test   eax,eax
64001a85:	je     0x64001a9a
64001a87:	push   edi
64001a88:	push   eax
64001a89:	mov    ecx,esi
64001a8b:	call   0x64001e20
64001a90:	jmp    0x64001a9a
64001a92:	push   eax
64001a93:	mov    ecx,esi
64001a95:	call   0x64001c80
64001a9a:	mov    eax,esi
64001a9c:	mov    ecx,DWORD PTR [esp+0x10]
64001aa0:	mov    DWORD PTR fs:0x0,ecx
64001aa7:	pop    ecx
64001aa8:	pop    edi
64001aa9:	pop    esi
64001aaa:	add    esp,0x10
64001aad:	ret    0x8
64001ab0:	mov    eax,DWORD PTR [ecx]
64001ab2:	sub    eax,0x10
64001ab5:	lea    ecx,[eax+0xc]
64001ab8:	or     edx,0xffffffff
64001abb:	lock xadd DWORD PTR [ecx],edx
64001abf:	dec    edx
64001ac0:	test   edx,edx
64001ac2:	jg     0x64001ace
64001ac4:	mov    ecx,DWORD PTR [eax]
64001ac6:	mov    edx,DWORD PTR [ecx]
64001ac8:	push   eax
64001ac9:	mov    eax,DWORD PTR [edx+0x4]
64001acc:	call   eax
64001ace:	ret    
64001acf:	int3   
64001ad0:	push   ebx
64001ad1:	mov    ebx,DWORD PTR [esp+0x8]
64001ad5:	push   ebp
64001ad6:	mov    ebp,DWORD PTR [esp+0x10]
64001ada:	cmp    DWORD PTR [ebx+0x14],ebp
64001add:	push   esi
64001ade:	push   edi
64001adf:	mov    esi,ecx
64001ae1:	jae    0x64001ae8
64001ae3:	call   0x6400eb0e
64001ae8:	mov    edi,DWORD PTR [ebx+0x14]
64001aeb:	mov    eax,DWORD PTR [esp+0x1c]
64001aef:	sub    edi,ebp
64001af1:	cmp    eax,edi
64001af3:	jae    0x64001af7
64001af5:	mov    edi,eax
64001af7:	cmp    esi,ebx
64001af9:	jne    0x64001b1a
64001afb:	push   0xffffffff
64001afd:	add    edi,ebp
64001aff:	push   edi
64001b00:	mov    ecx,esi
64001b02:	call   0x64001d90
64001b07:	push   ebp
64001b08:	push   0x0
64001b0a:	mov    ecx,esi
64001b0c:	call   0x64001d90
64001b11:	pop    edi
64001b12:	mov    eax,esi
64001b14:	pop    esi
64001b15:	pop    ebp
64001b16:	pop    ebx
64001b17:	ret    0xc
64001b1a:	cmp    edi,0xfffffffe
64001b1d:	jbe    0x64001b24
64001b1f:	call   0x6400eacf
64001b24:	mov    eax,DWORD PTR [esi+0x18]
64001b27:	cmp    eax,edi
64001b29:	jae    0x64001b46
64001b2b:	mov    eax,DWORD PTR [esi+0x14]
64001b2e:	push   eax
64001b2f:	push   edi
64001b30:	mov    ecx,esi
64001b32:	call   0x640020a0
64001b37:	test   edi,edi
64001b39:	jbe    0x64001ba1
64001b3b:	cmp    DWORD PTR [ebx+0x18],0x10
64001b3f:	jb     0x64001b70
64001b41:	mov    edx,DWORD PTR [ebx+0x4]
64001b44:	jmp    0x64001b73
64001b46:	test   edi,edi
64001b48:	jne    0x64001b39
64001b4a:	cmp    eax,0x10
64001b4d:	mov    DWORD PTR [esi+0x14],edi
64001b50:	jb     0x64001b61
64001b52:	mov    eax,DWORD PTR [esi+0x4]
64001b55:	pop    edi
64001b56:	mov    BYTE PTR [eax],0x0
64001b59:	mov    eax,esi
64001b5b:	pop    esi
64001b5c:	pop    ebp
64001b5d:	pop    ebx
64001b5e:	ret    0xc
64001b61:	lea    eax,[esi+0x4]
64001b64:	pop    edi
64001b65:	mov    BYTE PTR [eax],0x0
64001b68:	mov    eax,esi
64001b6a:	pop    esi
64001b6b:	pop    ebp
64001b6c:	pop    ebx
64001b6d:	ret    0xc
64001b70:	lea    edx,[ebx+0x4]
64001b73:	mov    ecx,DWORD PTR [esi+0x18]
64001b76:	cmp    ecx,0x10
64001b79:	lea    ebx,[esi+0x4]
64001b7c:	jb     0x64001b82
64001b7e:	mov    eax,DWORD PTR [ebx]
64001b80:	jmp    0x64001b84
64001b82:	mov    eax,ebx
64001b84:	push   edi
64001b85:	add    edx,ebp
64001b87:	push   edx
64001b88:	push   ecx
64001b89:	push   eax
64001b8a:	call   0x6400ecaa
64001b8f:	add    esp,0x10
64001b92:	cmp    DWORD PTR [esi+0x18],0x10
64001b96:	mov    DWORD PTR [esi+0x14],edi
64001b99:	jb     0x64001b9d
64001b9b:	mov    ebx,DWORD PTR [ebx]
64001b9d:	mov    BYTE PTR [ebx+edi*1],0x0
64001ba1:	pop    edi
64001ba2:	mov    eax,esi
64001ba4:	pop    esi
64001ba5:	pop    ebp
64001ba6:	pop    ebx
64001ba7:	ret    0xc
64001baa:	int3   
64001bab:	int3   
64001bac:	int3   
64001bad:	int3   
64001bae:	int3   
64001baf:	int3   
64001bb0:	push   ebx
64001bb1:	push   ebp
64001bb2:	push   esi
64001bb3:	mov    esi,ecx
64001bb5:	mov    ecx,DWORD PTR [esi+0x18]
64001bb8:	cmp    ecx,0x10
64001bbb:	lea    ebx,[esi+0x4]
64001bbe:	jb     0x64001bc4
64001bc0:	mov    eax,DWORD PTR [ebx]
64001bc2:	jmp    0x64001bc6
64001bc4:	mov    eax,ebx
64001bc6:	mov    ebp,DWORD PTR [esp+0x10]
64001bca:	cmp    ebp,eax
64001bcc:	jb     0x64001bff
64001bce:	cmp    ecx,0x10
64001bd1:	jb     0x64001bd7
64001bd3:	mov    eax,DWORD PTR [ebx]
64001bd5:	jmp    0x64001bd9
64001bd7:	mov    eax,ebx
64001bd9:	mov    edx,DWORD PTR [esi+0x14]
64001bdc:	add    edx,eax
64001bde:	cmp    edx,ebp
64001be0:	jbe    0x64001bff
64001be2:	cmp    ecx,0x10
64001be5:	jb     0x64001be9
64001be7:	mov    ebx,DWORD PTR [ebx]
64001be9:	mov    eax,DWORD PTR [esp+0x14]
64001bed:	push   eax
64001bee:	sub    ebp,ebx
64001bf0:	push   ebp
64001bf1:	push   esi
64001bf2:	mov    ecx,esi
64001bf4:	call   0x64001ad0
64001bf9:	pop    esi
64001bfa:	pop    ebp
64001bfb:	pop    ebx
64001bfc:	ret    0x8
64001bff:	push   edi
64001c00:	mov    edi,DWORD PTR [esp+0x18]
64001c04:	cmp    edi,0xfffffffe
64001c07:	jbe    0x64001c0e
64001c09:	call   0x6400eacf
64001c0e:	mov    eax,DWORD PTR [esi+0x18]
64001c11:	cmp    eax,edi
64001c13:	jae    0x64001c31
64001c15:	mov    ecx,DWORD PTR [esi+0x14]
64001c18:	push   ecx
64001c19:	push   edi
64001c1a:	mov    ecx,esi
64001c1c:	call   0x640020a0
64001c21:	test   edi,edi
64001c23:	jbe    0x64001c68
64001c25:	mov    ecx,DWORD PTR [esi+0x18]
64001c28:	cmp    ecx,0x10
64001c2b:	jb     0x64001c4b
64001c2d:	mov    eax,DWORD PTR [ebx]
64001c2f:	jmp    0x64001c4d
64001c31:	test   edi,edi
64001c33:	jne    0x64001c23
64001c35:	cmp    eax,0x10
64001c38:	mov    DWORD PTR [esi+0x14],edi
64001c3b:	jb     0x64001c3f
64001c3d:	mov    ebx,DWORD PTR [ebx]
64001c3f:	pop    edi
64001c40:	mov    eax,esi
64001c42:	pop    esi
64001c43:	pop    ebp
64001c44:	mov    BYTE PTR [ebx],0x0
64001c47:	pop    ebx
64001c48:	ret    0x8
64001c4b:	mov    eax,ebx
64001c4d:	push   edi
64001c4e:	push   ebp
64001c4f:	push   ecx
64001c50:	push   eax
64001c51:	call   0x6400ecaa
64001c56:	add    esp,0x10
64001c59:	cmp    DWORD PTR [esi+0x18],0x10
64001c5d:	mov    DWORD PTR [esi+0x14],edi
64001c60:	jb     0x64001c64
64001c62:	mov    ebx,DWORD PTR [ebx]
64001c64:	mov    BYTE PTR [ebx+edi*1],0x0
64001c68:	pop    edi
64001c69:	mov    eax,esi
64001c6b:	pop    esi
64001c6c:	pop    ebp
64001c6d:	pop    ebx
64001c6e:	ret    0x8
64001c71:	int3   
64001c72:	int3   
64001c73:	int3   
64001c74:	int3   
64001c75:	int3   
64001c76:	int3   
64001c77:	int3   
64001c78:	int3   
64001c79:	int3   
64001c7a:	int3   
64001c7b:	int3   
64001c7c:	int3   
64001c7d:	int3   
64001c7e:	int3   
64001c7f:	int3   
64001c80:	push   ebx
64001c81:	mov    ebx,DWORD PTR [esp+0x8]
64001c85:	test   ebx,ebx
64001c87:	push   ebp
64001c88:	push   esi
64001c89:	push   edi
64001c8a:	mov    edi,ecx
64001c8c:	je     0x64001d04
64001c8e:	call   DWORD PTR ds:0x64028008
64001c94:	mov    ebp,DWORD PTR ds:0x6402103c
64001c9a:	push   0x0
64001c9c:	push   0x0
64001c9e:	push   0xffffffff
64001ca0:	push   ebx
64001ca1:	push   0x0
64001ca3:	push   eax
64001ca4:	call   ebp
64001ca6:	mov    esi,eax
64001ca8:	sub    esi,0x1
64001cab:	test   esi,esi
64001cad:	jle    0x64001d04
64001caf:	mov    eax,DWORD PTR [edi]
64001cb1:	mov    edx,DWORD PTR [eax-0x8]
64001cb4:	sub    eax,0x10
64001cb7:	mov    ecx,0x1
64001cbc:	sub    ecx,DWORD PTR [eax+0xc]
64001cbf:	sub    edx,esi
64001cc1:	or     ecx,edx
64001cc3:	jge    0x64001ccd
64001cc5:	push   esi
64001cc6:	mov    ecx,edi
64001cc8:	call   0x64002280
64001ccd:	mov    eax,DWORD PTR [edi]
64001ccf:	push   esi
64001cd0:	push   eax
64001cd1:	push   0xffffffff
64001cd3:	push   ebx
64001cd4:	push   0x0
64001cd6:	call   DWORD PTR ds:0x64028008
64001cdc:	push   eax
64001cdd:	call   ebp
64001cdf:	mov    eax,DWORD PTR [edi]
64001ce1:	cmp    esi,DWORD PTR [eax-0x8]
64001ce4:	jg     0x64001cfa
64001ce6:	mov    DWORD PTR [eax-0xc],esi
64001ce9:	mov    eax,DWORD PTR [edi]
64001ceb:	mov    WORD PTR [eax+esi*2],0x0
64001cf1:	mov    eax,edi
64001cf3:	pop    edi
64001cf4:	pop    esi
64001cf5:	pop    ebp
64001cf6:	pop    ebx
64001cf7:	ret    0x4
64001cfa:	push   0x80070057
64001cff:	call   0x64001000
64001d04:	mov    ecx,edi
64001d06:	call   0x64001f80
64001d0b:	mov    eax,edi
64001d0d:	pop    edi
64001d0e:	pop    esi
64001d0f:	pop    ebp
64001d10:	pop    ebx
64001d11:	ret    0x4
64001d14:	int3   
64001d15:	int3   
64001d16:	int3   
64001d17:	int3   
64001d18:	int3   
64001d19:	int3   
64001d1a:	int3   
64001d1b:	int3   
64001d1c:	int3   
64001d1d:	int3   
64001d1e:	int3   
64001d1f:	int3   
64001d20:	push   esi
64001d21:	mov    esi,DWORD PTR [esp+0x8]
64001d25:	mov    ecx,DWORD PTR [esi]
64001d27:	mov    eax,DWORD PTR [ecx]
64001d29:	mov    edx,DWORD PTR [eax+0x10]
64001d2c:	push   edi
64001d2d:	call   edx
64001d2f:	cmp    DWORD PTR [esi+0xc],0x0
64001d33:	lea    ecx,[esi+0xc]
64001d36:	jl     0x64001d4c
64001d38:	cmp    eax,DWORD PTR [esi]
64001d3a:	jne    0x64001d4c
64001d3c:	mov    edi,esi
64001d3e:	mov    eax,0x1
64001d43:	lock xadd DWORD PTR [ecx],eax
64001d47:	mov    eax,edi
64001d49:	pop    edi
64001d4a:	pop    esi
64001d4b:	ret    
64001d4c:	mov    ecx,DWORD PTR [esi+0x4]
64001d4f:	mov    edx,DWORD PTR [eax]
64001d51:	mov    edx,DWORD PTR [edx]
64001d53:	push   0x2
64001d55:	push   ecx
64001d56:	mov    ecx,eax
64001d58:	call   edx
64001d5a:	mov    edi,eax
64001d5c:	test   edi,edi
64001d5e:	jne    0x64001d65
64001d60:	jmp    0x64002090
64001d65:	mov    eax,DWORD PTR [esi+0x4]
64001d68:	mov    DWORD PTR [edi+0x4],eax
64001d6b:	mov    eax,DWORD PTR [esi+0x4]
64001d6e:	lea    eax,[eax+eax*1+0x2]
64001d72:	push   eax
64001d73:	add    esi,0x10
64001d76:	push   esi
64001d77:	push   eax
64001d78:	lea    ecx,[edi+0x10]
64001d7b:	push   ecx
64001d7c:	call   0x6400ecaa
64001d81:	add    esp,0x10
64001d84:	mov    eax,edi
64001d86:	pop    edi
64001d87:	pop    esi
64001d88:	ret    
64001d89:	int3   
64001d8a:	int3   
64001d8b:	int3   
64001d8c:	int3   
64001d8d:	int3   
64001d8e:	int3   
64001d8f:	int3   
64001d90:	push   ebx
64001d91:	mov    ebx,DWORD PTR [esp+0x8]
64001d95:	push   esi
64001d96:	mov    esi,ecx
64001d98:	cmp    DWORD PTR [esi+0x14],ebx
64001d9b:	push   edi
64001d9c:	jae    0x64001da3
64001d9e:	call   0x6400eb0e
64001da3:	mov    eax,DWORD PTR [esi+0x14]
64001da6:	mov    edi,DWORD PTR [esp+0x14]
64001daa:	sub    eax,ebx
64001dac:	cmp    eax,edi
64001dae:	jae    0x64001db2
64001db0:	mov    edi,eax
64001db2:	test   edi,edi
64001db4:	jbe    0x64001e0b
64001db6:	mov    ecx,DWORD PTR [esi+0x18]
64001db9:	cmp    ecx,0x10
64001dbc:	push   ebp
64001dbd:	lea    ebp,[esi+0x4]
64001dc0:	jb     0x64001dcb
64001dc2:	mov    edx,DWORD PTR [ebp+0x0]
64001dc5:	mov    DWORD PTR [esp+0x14],edx
64001dc9:	jmp    0x64001dcf
64001dcb:	mov    DWORD PTR [esp+0x14],ebp
64001dcf:	cmp    ecx,0x10
64001dd2:	jb     0x64001dd9
64001dd4:	mov    edx,DWORD PTR [ebp+0x0]
64001dd7:	jmp    0x64001ddb
64001dd9:	mov    edx,ebp
64001ddb:	sub    eax,edi
64001ddd:	push   eax
64001dde:	mov    eax,DWORD PTR [esp+0x18]
64001de2:	add    eax,ebx
64001de4:	add    eax,edi
64001de6:	push   eax
64001de7:	sub    ecx,ebx
64001de9:	push   ecx
64001dea:	add    edx,ebx
64001dec:	push   edx
64001ded:	call   0x6400ed25
64001df2:	mov    eax,DWORD PTR [esi+0x14]
64001df5:	sub    eax,edi
64001df7:	add    esp,0x10
64001dfa:	cmp    DWORD PTR [esi+0x18],0x10
64001dfe:	mov    DWORD PTR [esi+0x14],eax
64001e01:	jb     0x64001e06
64001e03:	mov    ebp,DWORD PTR [ebp+0x0]
64001e06:	mov    BYTE PTR [eax+ebp*1],0x0
64001e0a:	pop    ebp
64001e0b:	pop    edi
64001e0c:	mov    eax,esi
64001e0e:	pop    esi
64001e0f:	pop    ebx
64001e10:	ret    0x8
64001e13:	int3   
64001e14:	int3   
64001e15:	int3   
64001e16:	int3   
64001e17:	int3   
64001e18:	int3   
64001e19:	int3   
64001e1a:	int3   
64001e1b:	int3   
64001e1c:	int3   
64001e1d:	int3   
64001e1e:	int3   
64001e1f:	int3   
64001e20:	push   ebx
64001e21:	push   esi
64001e22:	mov    esi,DWORD PTR [esp+0x10]
64001e26:	mov    eax,esi
64001e28:	shr    eax,0x4
64001e2b:	push   edi
64001e2c:	mov    edi,DWORD PTR [esp+0x10]
64001e30:	add    eax,0x1
64001e33:	mov    ebx,ecx
64001e35:	movzx  ecx,ax
64001e38:	push   0x6
64001e3a:	push   ecx
64001e3b:	push   edi
64001e3c:	call   DWORD PTR ds:0x64021034
64001e42:	test   eax,eax
64001e44:	je     0x64001e57
64001e46:	push   esi
64001e47:	push   eax
64001e48:	push   edi
64001e49:	call   0x640010c0
64001e4e:	mov    esi,eax
64001e50:	add    esp,0xc
64001e53:	test   esi,esi
64001e55:	jne    0x64001e5f
64001e57:	pop    edi
64001e58:	pop    esi
64001e59:	xor    eax,eax
64001e5b:	pop    ebx
64001e5c:	ret    0x8
64001e5f:	mov    eax,DWORD PTR [ebx]
64001e61:	movzx  edi,WORD PTR [esi]
64001e64:	sub    eax,0x10
64001e67:	mov    edx,0x1
64001e6c:	sub    edx,DWORD PTR [eax+0xc]
64001e6f:	mov    eax,DWORD PTR [eax+0x8]
64001e72:	sub    eax,edi
64001e74:	or     edx,eax
64001e76:	jge    0x64001e80
64001e78:	push   edi
64001e79:	mov    ecx,ebx
64001e7b:	call   0x64002280
64001e80:	movzx  eax,WORD PTR [esi]
64001e83:	cmp    eax,0xffffffff
64001e86:	push   ebp
64001e87:	mov    ebp,DWORD PTR [ebx]
64001e89:	lea    edx,[esi+0x2]
64001e8c:	jne    0x64001ea5
64001e8e:	mov    eax,edx
64001e90:	lea    esi,[eax+0x2]
64001e93:	mov    cx,WORD PTR [eax]
64001e96:	add    eax,0x2
64001e99:	test   cx,cx
64001e9c:	jne    0x64001e93
64001e9e:	sub    eax,esi
64001ea0:	sar    eax,1
64001ea2:	add    eax,0x1
64001ea5:	lea    ecx,[eax+eax*1]
64001ea8:	push   ecx
64001ea9:	push   edx
64001eaa:	lea    esi,[edi+edi*1]
64001ead:	push   esi
64001eae:	push   ebp
64001eaf:	call   0x6400ecaa
64001eb4:	push   eax
64001eb5:	call   0x64001020
64001eba:	add    esp,0x14
64001ebd:	test   edi,edi
64001ebf:	pop    ebp
64001ec0:	jl     0x64001edf
64001ec2:	mov    eax,DWORD PTR [ebx]
64001ec4:	cmp    edi,DWORD PTR [eax-0x8]
64001ec7:	jg     0x64001edf
64001ec9:	mov    DWORD PTR [eax-0xc],edi
64001ecc:	mov    edx,DWORD PTR [ebx]
64001ece:	pop    edi
64001ecf:	mov    WORD PTR [esi+edx*1],0x0
64001ed5:	pop    esi
64001ed6:	mov    eax,0x1
64001edb:	pop    ebx
64001edc:	ret    0x8
64001edf:	push   0x80070057
64001ee4:	call   0x64001000
64001ee9:	int3   
64001eea:	int3   
64001eeb:	int3   
64001eec:	int3   
64001eed:	int3   
64001eee:	int3   
64001eef:	int3   
64001ef0:	push   ebx
64001ef1:	push   ebp
64001ef2:	push   esi
64001ef3:	mov    esi,DWORD PTR [esp+0x10]
64001ef7:	mov    ebp,ecx
64001ef9:	mov    eax,DWORD PTR [ebp+0x0]
64001efc:	mov    ebx,DWORD PTR [eax-0xc]
64001eff:	mov    ecx,DWORD PTR [esp+0x14]
64001f03:	sub    esi,eax
64001f05:	mov    edx,0x1
64001f0a:	sub    edx,DWORD PTR [eax-0x4]
64001f0d:	mov    eax,DWORD PTR [eax-0x8]
64001f10:	push   edi
64001f11:	lea    edi,[ebx+ecx*1]
64001f14:	sub    eax,edi
64001f16:	sar    esi,1
64001f18:	or     edx,eax
64001f1a:	jge    0x64001f24
64001f1c:	push   edi
64001f1d:	mov    ecx,ebp
64001f1f:	call   0x64002280
64001f24:	cmp    esi,ebx
64001f26:	mov    ecx,DWORD PTR [ebp+0x0]
64001f29:	ja     0x64001f32
64001f2b:	lea    edx,[ecx+esi*2]
64001f2e:	mov    DWORD PTR [esp+0x14],edx
64001f32:	mov    eax,DWORD PTR [esp+0x18]
64001f36:	mov    edx,DWORD PTR [esp+0x14]
64001f3a:	add    eax,eax
64001f3c:	push   eax
64001f3d:	push   edx
64001f3e:	push   eax
64001f3f:	lea    eax,[ecx+ebx*2]
64001f42:	push   eax
64001f43:	call   0x6400ecaa
64001f48:	add    esp,0x10
64001f4b:	test   edi,edi
64001f4d:	jl     0x64001f6a
64001f4f:	mov    eax,DWORD PTR [ebp+0x0]
64001f52:	cmp    edi,DWORD PTR [eax-0x8]
64001f55:	jg     0x64001f6a
64001f57:	mov    DWORD PTR [eax-0xc],edi
64001f5a:	mov    ecx,DWORD PTR [ebp+0x0]
64001f5d:	mov    WORD PTR [ecx+edi*2],0x0
64001f63:	pop    edi
64001f64:	pop    esi
64001f65:	pop    ebp
64001f66:	pop    ebx
64001f67:	ret    0x8
64001f6a:	push   0x80070057
64001f6f:	call   0x64001000
64001f74:	int3   
64001f75:	int3   
64001f76:	int3   
64001f77:	int3   
64001f78:	int3   
64001f79:	int3   
64001f7a:	int3   
64001f7b:	int3   
64001f7c:	int3   
64001f7d:	int3   
64001f7e:	int3   
64001f7f:	int3   
64001f80:	push   esi
64001f81:	mov    esi,ecx
64001f83:	mov    ecx,DWORD PTR [esi]
64001f85:	cmp    DWORD PTR [ecx-0xc],0x0
64001f89:	lea    eax,[ecx-0x10]
64001f8c:	push   edi
64001f8d:	mov    edi,DWORD PTR [eax]
64001f8f:	je     0x64001fdf
64001f91:	cmp    DWORD PTR [eax+0xc],0x0
64001f95:	lea    edx,[eax+0xc]
64001f98:	jge    0x64001fbb
64001f9a:	cmp    DWORD PTR [ecx-0x8],0x0
64001f9e:	jge    0x64001faa
64001fa0:	push   0x80070057
64001fa5:	call   0x64001000
64001faa:	mov    DWORD PTR [ecx-0xc],0x0
64001fb1:	mov    eax,DWORD PTR [esi]
64001fb3:	pop    edi
64001fb4:	mov    WORD PTR [eax],0x0
64001fb9:	pop    esi
64001fba:	ret    
64001fbb:	or     ecx,0xffffffff
64001fbe:	lock xadd DWORD PTR [edx],ecx
64001fc2:	dec    ecx
64001fc3:	test   ecx,ecx
64001fc5:	jg     0x64001fd1
64001fc7:	mov    ecx,DWORD PTR [eax]
64001fc9:	mov    edx,DWORD PTR [ecx]
64001fcb:	push   eax
64001fcc:	mov    eax,DWORD PTR [edx+0x4]
64001fcf:	call   eax
64001fd1:	mov    edx,DWORD PTR [edi]
64001fd3:	mov    eax,DWORD PTR [edx+0xc]
64001fd6:	mov    ecx,edi
64001fd8:	call   eax
64001fda:	add    eax,0x10
64001fdd:	mov    DWORD PTR [esi],eax
64001fdf:	pop    edi
64001fe0:	pop    esi
64001fe1:	ret    
64001fe2:	int3   
64001fe3:	int3   
64001fe4:	int3   
64001fe5:	int3   
64001fe6:	int3   
64001fe7:	int3   
64001fe8:	int3   
64001fe9:	int3   
64001fea:	int3   
64001feb:	int3   
64001fec:	int3   
64001fed:	int3   
64001fee:	int3   
64001fef:	int3   
64001ff0:	push   ebx
64001ff1:	mov    ebx,DWORD PTR [esp+0xc]
64001ff5:	test   ebx,ebx
64001ff7:	push   ebp
64001ff8:	mov    ebp,ecx
64001ffa:	jne    0x64002006
64001ffc:	call   0x64001f80
64002001:	pop    ebp
64002002:	pop    ebx
64002003:	ret    0x8
64002006:	push   esi
64002007:	mov    esi,DWORD PTR [esp+0x10]
6400200b:	test   esi,esi
6400200d:	jne    0x64002019
6400200f:	push   0x80070057
64002014:	call   0x64001000
64002019:	mov    eax,DWORD PTR [ebp+0x0]
6400201c:	mov    edx,DWORD PTR [eax-0x8]
6400201f:	mov    ecx,0x1
64002024:	sub    ecx,DWORD PTR [eax-0x4]
64002027:	sub    esi,eax
64002029:	sub    edx,ebx
6400202b:	sar    esi,1
6400202d:	or     ecx,edx
6400202f:	push   edi
64002030:	mov    edi,DWORD PTR [eax-0xc]
64002033:	jge    0x6400203d
64002035:	push   ebx
64002036:	mov    ecx,ebp
64002038:	call   0x64002280
6400203d:	mov    eax,DWORD PTR [ebp+0x0]
64002040:	cmp    esi,edi
64002042:	lea    edi,[ebx+ebx*1]
64002045:	push   edi
64002046:	ja     0x64002055
64002048:	lea    ecx,[eax+esi*2]
6400204b:	push   ecx
6400204c:	push   edi
6400204d:	push   eax
6400204e:	call   0x6400ed25
64002053:	jmp    0x64002061
64002055:	mov    edx,DWORD PTR [esp+0x18]
64002059:	push   edx
6400205a:	push   edi
6400205b:	push   eax
6400205c:	call   0x6400ecaa
64002061:	add    esp,0x10
64002064:	test   ebx,ebx
64002066:	jl     0x64002083
64002068:	mov    eax,DWORD PTR [ebp+0x0]
6400206b:	cmp    ebx,DWORD PTR [eax-0x8]
6400206e:	jg     0x64002083
64002070:	mov    DWORD PTR [eax-0xc],ebx
64002073:	mov    eax,DWORD PTR [ebp+0x0]
64002076:	mov    WORD PTR [edi+eax*1],0x0
6400207c:	pop    edi
6400207d:	pop    esi
6400207e:	pop    ebp
6400207f:	pop    ebx
64002080:	ret    0x8
64002083:	push   0x80070057
64002088:	call   0x64001000
6400208d:	int3   
6400208e:	int3   
6400208f:	int3   
64002090:	push   0x8007000e
64002095:	call   0x64001000
6400209a:	int3   
6400209b:	int3   
6400209c:	int3   
6400209d:	int3   
6400209e:	int3   
6400209f:	int3   
640020a0:	push   ebp
640020a1:	mov    ebp,esp
640020a3:	push   0xffffffff
640020a5:	push   0x6401ebe0
640020aa:	mov    eax,fs:0x0
640020b0:	push   eax
640020b1:	sub    esp,0x1c
640020b4:	push   ebx
640020b5:	push   esi
640020b6:	push   edi
640020b7:	mov    eax,ds:0x64028038
640020bc:	xor    eax,ebp
640020be:	push   eax
640020bf:	lea    eax,[ebp-0xc]
640020c2:	mov    fs:0x0,eax
640020c8:	mov    DWORD PTR [ebp-0x10],esp
640020cb:	mov    edi,ecx
640020cd:	mov    DWORD PTR [ebp-0x14],edi
640020d0:	mov    eax,DWORD PTR [ebp+0x8]
640020d3:	mov    esi,eax
640020d5:	or     esi,0xf
640020d8:	cmp    esi,0xfffffffe
640020db:	jbe    0x640020e1
640020dd:	mov    esi,eax
640020df:	jmp    0x64002103
640020e1:	mov    ebx,DWORD PTR [edi+0x18]
640020e4:	mov    eax,0xaaaaaaab
640020e9:	mul    esi
640020eb:	mov    ecx,ebx
640020ed:	shr    ecx,1
640020ef:	shr    edx,1
640020f1:	cmp    edx,ecx
640020f3:	jae    0x64002103
640020f5:	mov    eax,0xfffffffe
640020fa:	sub    eax,ecx
640020fc:	cmp    ebx,eax
640020fe:	ja     0x64002103
64002100:	lea    esi,[ecx+ebx*1]
64002103:	xor    ebx,ebx
64002105:	lea    ecx,[esi+0x1]
64002108:	cmp    ecx,ebx
6400210a:	mov    DWORD PTR [ebp-0x4],ebx
6400210d:	ja     0x6400211f
6400210f:	xor    ecx,ecx
64002111:	push   ecx
64002112:	call   0x6400eed3
64002117:	add    esp,0x4
6400211a:	mov    DWORD PTR [ebp+0x8],eax
6400211d:	jmp    0x64002177
6400211f:	or     eax,0xffffffff
64002122:	xor    edx,edx
64002124:	div    ecx
64002126:	cmp    eax,0x1
64002129:	jae    0x64002111
6400212b:	lea    ecx,[ebp-0x18]
6400212e:	push   ecx
6400212f:	lea    ecx,[ebp-0x28]
64002132:	mov    DWORD PTR [ebp-0x18],ebx
64002135:	call   0x6400ebad
6400213a:	push   0x64025e14
6400213f:	lea    edx,[ebp-0x28]
64002142:	push   edx
64002143:	mov    DWORD PTR [ebp-0x28],0x640212f4
6400214a:	call   0x6400ef3d
6400214f:	mov    eax,DWORD PTR [ebp+0x8]
64002152:	mov    ecx,DWORD PTR [ebp-0x14]
64002155:	mov    DWORD PTR [ebp-0x1c],eax
64002158:	add    eax,0x1
6400215b:	mov    DWORD PTR [ebp-0x10],esp
6400215e:	push   eax
6400215f:	mov    BYTE PTR [ebp-0x4],0x2
64002163:	call   0x64002220
64002168:	mov    DWORD PTR [ebp+0x8],eax
6400216b:	mov    eax,0x64002171
64002170:	ret    
64002171:	mov    edi,DWORD PTR [ebp-0x14]
64002174:	mov    esi,DWORD PTR [ebp-0x1c]
64002177:	mov    ebx,DWORD PTR [ebp+0xc]
6400217a:	test   ebx,ebx
6400217c:	jbe    0x6400219e
6400217e:	cmp    DWORD PTR [edi+0x18],0x10
64002182:	jb     0x64002189
64002184:	mov    eax,DWORD PTR [edi+0x4]
64002187:	jmp    0x6400218c
64002189:	lea    eax,[edi+0x4]
6400218c:	mov    ecx,DWORD PTR [ebp+0x8]
6400218f:	push   ebx
64002190:	push   eax
64002191:	lea    eax,[esi+0x1]
64002194:	push   eax
64002195:	push   ecx
64002196:	call   0x6400ecaa
6400219b:	add    esp,0x10
6400219e:	cmp    DWORD PTR [edi+0x18],0x10
640021a2:	jb     0x640021b0
640021a4:	mov    edx,DWORD PTR [edi+0x4]
640021a7:	push   edx
640021a8:	call   0x6400eb52
640021ad:	add    esp,0x4
640021b0:	cmp    esi,0x10
640021b3:	mov    ecx,DWORD PTR [ebp+0x8]
640021b6:	lea    eax,[edi+0x4]
640021b9:	mov    BYTE PTR [eax],0x0
640021bc:	mov    DWORD PTR [eax],ecx
640021be:	mov    DWORD PTR [edi+0x18],esi
640021c1:	mov    DWORD PTR [edi+0x14],ebx
640021c4:	jb     0x640021c8
640021c6:	mov    eax,ecx
640021c8:	mov    BYTE PTR [eax+ebx*1],0x0
640021cc:	mov    ecx,DWORD PTR [ebp-0xc]
640021cf:	mov    DWORD PTR fs:0x0,ecx
640021d6:	pop    ecx
640021d7:	pop    edi
640021d8:	pop    esi
640021d9:	pop    ebx
640021da:	mov    esp,ebp
640021dc:	pop    ebp
640021dd:	ret    0x8
640021e0:	mov    esi,DWORD PTR [ebp-0x14]
640021e3:	cmp    DWORD PTR [esi+0x18],0x10
640021e7:	jb     0x640021f5
640021e9:	mov    eax,DWORD PTR [esi+0x4]
640021ec:	push   eax
640021ed:	call   0x6400eb52
640021f2:	add    esp,0x4
640021f5:	push   0x0
640021f7:	mov    DWORD PTR [esi+0x18],0xf
640021fe:	mov    DWORD PTR [esi+0x14],0x0
64002205:	push   0x0
64002207:	mov    BYTE PTR [esi+0x4],0x0
6400220b:	call   0x6400ef3d
64002210:	int3   
64002211:	int3   
64002212:	int3   
64002213:	int3   
64002214:	int3   
64002215:	int3   
64002216:	int3   
64002217:	int3   
64002218:	int3   
64002219:	int3   
6400221a:	int3   
6400221b:	int3   
6400221c:	int3   
6400221d:	int3   
6400221e:	int3   
6400221f:	int3   
64002220:	mov    ecx,DWORD PTR [esp+0x4]
64002224:	sub    esp,0xc
64002227:	test   ecx,ecx
64002229:	ja     0x6400223c
6400222b:	xor    ecx,ecx
6400222d:	push   ecx
6400222e:	call   0x6400eed3
64002233:	add    esp,0x4
64002236:	add    esp,0xc
64002239:	ret    0x4
6400223c:	or     eax,0xffffffff
6400223f:	xor    edx,edx
64002241:	div    ecx
64002243:	cmp    eax,0x1
64002246:	jae    0x6400222d
64002248:	lea    eax,[esp+0x10]
6400224c:	push   eax
6400224d:	lea    ecx,[esp+0x4]
64002251:	mov    DWORD PTR [esp+0x14],0x0
64002259:	call   0x6400ebad
6400225e:	push   0x64025e14
64002263:	lea    ecx,[esp+0x4]
64002267:	push   ecx
64002268:	mov    DWORD PTR [esp+0x8],0x640212f4
64002270:	call   0x6400ef3d
64002275:	int3   
64002276:	int3   
64002277:	int3   
64002278:	int3   
64002279:	int3   
6400227a:	int3   
6400227b:	int3   
6400227c:	int3   
6400227d:	int3   
6400227e:	int3   
6400227f:	int3   
64002280:	mov    eax,DWORD PTR [ecx]
64002282:	mov    edx,DWORD PTR [esp+0x4]
64002286:	sub    eax,0x10
64002289:	push   esi
6400228a:	mov    esi,DWORD PTR [eax+0x4]
6400228d:	cmp    esi,edx
6400228f:	jle    0x64002293
64002291:	mov    edx,esi
64002293:	cmp    DWORD PTR [eax+0xc],0x1
64002297:	pop    esi
64002298:	jle    0x640022a3
6400229a:	mov    DWORD PTR [esp+0x4],edx
6400229e:	jmp    0x640022d0
640022a3:	mov    eax,DWORD PTR [eax+0x8]
640022a6:	cmp    eax,edx
640022a8:	jge    0x640022c9
640022aa:	cmp    eax,0x400
640022af:	jle    0x640022b8
640022b1:	add    eax,0x400
640022b6:	jmp    0x640022ba
640022b8:	add    eax,eax
640022ba:	cmp    eax,edx
640022bc:	jge    0x640022c0
640022be:	mov    eax,edx
640022c0:	mov    DWORD PTR [esp+0x4],eax
640022c4:	jmp    0x64002350
640022c9:	ret    0x4
640022cc:	int3   
640022cd:	int3   
640022ce:	int3   
640022cf:	int3   
640022d0:	push   ecx
640022d1:	push   ebx
640022d2:	push   ebp
640022d3:	push   esi
640022d4:	mov    esi,DWORD PTR [ecx]
640022d6:	mov    ebx,DWORD PTR [esi-0xc]
640022d9:	sub    esi,0x10
640022dc:	mov    DWORD PTR [esp+0xc],ecx
640022e0:	mov    ecx,DWORD PTR [esi]
640022e2:	mov    eax,DWORD PTR [ecx]
640022e4:	mov    edx,DWORD PTR [eax+0x10]
640022e7:	push   edi
640022e8:	call   edx
640022ea:	mov    edx,DWORD PTR [eax]
640022ec:	mov    ebp,DWORD PTR [esp+0x18]
640022f0:	push   0x2
640022f2:	mov    ecx,eax
640022f4:	mov    eax,DWORD PTR [edx]
640022f6:	push   ebp
640022f7:	call   eax
640022f9:	mov    edi,eax
640022fb:	test   edi,edi
640022fd:	jne    0x64002304
640022ff:	call   0x64002090
64002304:	cmp    ebx,ebp
64002306:	jge    0x6400230a
64002308:	mov    ebp,ebx
6400230a:	lea    eax,[ebp+ebp*1+0x2]
6400230e:	push   eax
6400230f:	lea    ecx,[esi+0x10]
64002312:	push   ecx
64002313:	push   eax
64002314:	lea    ebp,[edi+0x10]
64002317:	push   ebp
64002318:	call   0x6400ecaa
6400231d:	add    esp,0x10
64002320:	mov    DWORD PTR [edi+0x4],ebx
64002323:	lea    edx,[esi+0xc]
64002326:	or     eax,0xffffffff
64002329:	lock xadd DWORD PTR [edx],eax
6400232d:	dec    eax
6400232e:	test   eax,eax
64002330:	jg     0x6400233c
64002332:	mov    ecx,DWORD PTR [esi]
64002334:	mov    edx,DWORD PTR [ecx]
64002336:	mov    eax,DWORD PTR [edx+0x4]
64002339:	push   esi
6400233a:	call   eax
6400233c:	mov    ecx,DWORD PTR [esp+0x10]
64002340:	pop    edi
64002341:	pop    esi
64002342:	mov    DWORD PTR [ecx],ebp
64002344:	pop    ebp
64002345:	pop    ebx
64002346:	pop    ecx
64002347:	ret    0x4
6400234a:	int3   
6400234b:	int3   
6400234c:	int3   
6400234d:	int3   
6400234e:	int3   
6400234f:	int3   
64002350:	mov    edx,DWORD PTR [esp+0x4]
64002354:	push   esi
64002355:	mov    esi,ecx
64002357:	mov    eax,DWORD PTR [esi]
64002359:	mov    ecx,DWORD PTR [eax-0x10]
6400235c:	sub    eax,0x10
6400235f:	cmp    DWORD PTR [eax+0x8],edx
64002362:	jge    0x64002379
64002364:	test   edx,edx
64002366:	jle    0x64002379
64002368:	push   edi
64002369:	mov    edi,DWORD PTR [ecx]
6400236b:	push   0x2
6400236d:	push   edx
6400236e:	push   eax
6400236f:	mov    eax,DWORD PTR [edi+0x8]
64002372:	call   eax
64002374:	test   eax,eax
64002376:	pop    edi
64002377:	jne    0x6400237e
64002379:	call   0x64002090
6400237e:	add    eax,0x10
64002381:	mov    DWORD PTR [esi],eax
64002383:	pop    esi
64002384:	ret    0x4
64002387:	int3   
64002388:	int3   
64002389:	int3   
6400238a:	int3   
6400238b:	int3   
6400238c:	int3   
6400238d:	int3   
6400238e:	int3   
6400238f:	int3   
64002390:	mov    eax,DWORD PTR [esp+0x4]
64002394:	push   esi
64002395:	push   eax
64002396:	mov    esi,ecx
64002398:	call   0x6400ec13
6400239d:	mov    DWORD PTR [esi],0x640212f4
640023a3:	mov    eax,esi
640023a5:	pop    esi
640023a6:	ret    0x4
640023a9:	int3   
640023aa:	int3   
640023ab:	int3   
640023ac:	int3   
640023ad:	int3   
640023ae:	int3   
640023af:	int3   
640023b0:	push   esi
640023b1:	mov    esi,DWORD PTR [esp+0x8]
640023b5:	test   esi,esi
640023b7:	je     0x640023e8
640023b9:	mov    eax,DWORD PTR [esp+0xc]
640023bd:	test   eax,eax
640023bf:	je     0x640023e8
640023c1:	mov    ecx,DWORD PTR [esp+0x10]
640023c5:	mov    edx,DWORD PTR [esp+0x14]
640023c9:	push   0x0
640023cb:	push   0x0
640023cd:	push   ecx
640023ce:	push   esi
640023cf:	push   0xffffffff
640023d1:	push   eax
640023d2:	push   0x0
640023d4:	push   edx
640023d5:	mov    BYTE PTR [esi],0x0
640023d8:	call   DWORD PTR ds:0x64021024
640023de:	neg    eax
640023e0:	sbb    eax,eax
640023e2:	and    eax,esi
640023e4:	pop    esi
640023e5:	ret    0x10
640023e8:	xor    eax,eax
640023ea:	pop    esi
640023eb:	ret    0x10
640023ee:	int3   
640023ef:	int3   
640023f0:	mov    eax,DWORD PTR [esi]
640023f2:	test   eax,eax
640023f4:	je     0x64002403
640023f6:	push   eax
640023f7:	call   DWORD PTR ds:0x64021000
640023fd:	mov    DWORD PTR [esi],0x0
64002403:	ret    
64002404:	int3   
64002405:	int3   
64002406:	int3   
64002407:	int3   
64002408:	int3   
64002409:	int3   
6400240a:	int3   
6400240b:	int3   
6400240c:	int3   
6400240d:	int3   
6400240e:	int3   
6400240f:	int3   
64002410:	push   ecx
64002411:	mov    eax,DWORD PTR [edi]
64002413:	lea    ecx,[esp]
64002416:	push   ecx
64002417:	mov    ecx,DWORD PTR [esp+0xc]
6400241b:	push   esi
6400241c:	add    eax,eax
6400241e:	lea    edx,[esp+0x14]
64002422:	push   edx
64002423:	mov    DWORD PTR [esp+0xc],eax
64002427:	mov    eax,DWORD PTR [esp+0x18]
6400242b:	push   0x0
6400242d:	mov    DWORD PTR [edi],0x0
64002433:	mov    edx,DWORD PTR [ecx]
64002435:	push   eax
64002436:	push   edx
64002437:	call   DWORD PTR ds:0x64021008
6400243d:	test   eax,eax
6400243f:	jne    0x6400247e
64002441:	mov    eax,DWORD PTR [esp+0xc]
64002445:	cmp    eax,0x1
64002448:	je     0x6400244f
6400244a:	cmp    eax,0x2
6400244d:	jne    0x6400246a
6400244f:	test   esi,esi
64002451:	mov    eax,DWORD PTR [esp]
64002454:	je     0x64002478
64002456:	test   eax,eax
64002458:	je     0x64002473
6400245a:	test   al,0x1
6400245c:	jne    0x6400246a
6400245e:	mov    ecx,eax
64002460:	shr    ecx,1
64002462:	cmp    WORD PTR [esi+ecx*2-0x2],0x0
64002468:	je     0x64002478
6400246a:	mov    eax,0xd
6400246f:	pop    ecx
64002470:	ret    0x8
64002473:	mov    WORD PTR [esi],0x0
64002478:	shr    eax,1
6400247a:	mov    DWORD PTR [edi],eax
6400247c:	xor    eax,eax
6400247e:	pop    ecx
6400247f:	ret    0x8
64002482:	int3   
64002483:	int3   
64002484:	int3   
64002485:	int3   
64002486:	int3   
64002487:	int3   
64002488:	int3   
64002489:	int3   
6400248a:	int3   
6400248b:	int3   
6400248c:	int3   
6400248d:	int3   
6400248e:	int3   
6400248f:	int3   
64002490:	ret    
64002491:	int3   
64002492:	int3   
64002493:	int3   
64002494:	int3   
64002495:	int3   
64002496:	int3   
64002497:	int3   
64002498:	int3   
64002499:	int3   
6400249a:	int3   
6400249b:	int3   
6400249c:	int3   
6400249d:	int3   
6400249e:	int3   
6400249f:	int3   
640024a0:	mov    eax,DWORD PTR [esp+0xc]
640024a4:	cmp    eax,0x4
640024a7:	mov    ecx,DWORD PTR [esp+0x8]
640024ab:	mov    edx,DWORD PTR [esp+0x4]
640024af:	push   esi
640024b0:	push   edi
640024b1:	jb     0x640024c7
640024b3:	mov    esi,DWORD PTR [edx]
640024b5:	cmp    esi,DWORD PTR [ecx]
640024b7:	jne    0x640024cb
640024b9:	sub    eax,0x4
640024bc:	add    ecx,0x4
640024bf:	add    edx,0x4
640024c2:	cmp    eax,0x4
640024c5:	jae    0x640024b3
640024c7:	test   eax,eax
640024c9:	je     0x64002529
640024cb:	movzx  esi,BYTE PTR [edx]
640024ce:	movzx  edi,BYTE PTR [ecx]
640024d1:	sub    esi,edi
640024d3:	jne    0x6400251a
640024d5:	sub    eax,0x1
640024d8:	add    ecx,0x1
640024db:	add    edx,0x1
640024de:	test   eax,eax
640024e0:	je     0x64002529
640024e2:	movzx  esi,BYTE PTR [edx]
640024e5:	movzx  edi,BYTE PTR [ecx]
640024e8:	sub    esi,edi
640024ea:	jne    0x6400251a
640024ec:	sub    eax,0x1
640024ef:	add    ecx,0x1
640024f2:	add    edx,0x1
640024f5:	test   eax,eax
640024f7:	je     0x64002529
640024f9:	movzx  esi,BYTE PTR [edx]
640024fc:	movzx  edi,BYTE PTR [ecx]
640024ff:	sub    esi,edi
64002501:	jne    0x6400251a
64002503:	sub    eax,0x1
64002506:	add    ecx,0x1
64002509:	add    edx,0x1
6400250c:	test   eax,eax
6400250e:	je     0x64002529
64002510:	movzx  esi,BYTE PTR [edx]
64002513:	movzx  eax,BYTE PTR [ecx]
64002516:	sub    esi,eax
64002518:	je     0x64002529
6400251a:	test   esi,esi
6400251c:	mov    eax,0x1
64002521:	jg     0x6400252b
64002523:	pop    edi
64002524:	or     eax,0xffffffff
64002527:	pop    esi
64002528:	ret    
64002529:	xor    eax,eax
6400252b:	pop    edi
6400252c:	pop    esi
6400252d:	ret    
6400252e:	int3   
6400252f:	int3   
64002530:	push   0xffffffff
64002532:	push   0x6401ee08
64002537:	mov    eax,fs:0x0
6400253d:	push   eax
6400253e:	push   ecx
6400253f:	push   esi
64002540:	mov    eax,ds:0x64028038
64002545:	xor    eax,esp
64002547:	push   eax
64002548:	lea    eax,[esp+0xc]
6400254c:	mov    fs:0x0,eax
64002552:	mov    esi,ecx
64002554:	mov    DWORD PTR [esp+0x8],esi
64002558:	call   0x6400eb9c
6400255d:	xor    eax,eax
6400255f:	mov    DWORD PTR [esp+0x14],eax
64002563:	lea    ecx,[esi+0xc]
64002566:	mov    DWORD PTR [esi],0x64021300
6400256c:	push   0xffffffff
6400256e:	mov    DWORD PTR [ecx+0x14],eax
64002571:	mov    DWORD PTR [ecx+0x18],0xf
64002578:	push   eax
64002579:	mov    BYTE PTR [ecx+0x4],al
6400257c:	mov    eax,DWORD PTR [esp+0x24]
64002580:	push   eax
64002581:	call   0x64001ad0
64002586:	mov    eax,esi
64002588:	mov    ecx,DWORD PTR [esp+0xc]
6400258c:	mov    DWORD PTR fs:0x0,ecx
64002593:	pop    ecx
64002594:	pop    esi
64002595:	add    esp,0x10
64002598:	ret    0x4
6400259b:	int3   
6400259c:	int3   
6400259d:	int3   
6400259e:	int3   
6400259f:	int3   
640025a0:	cmp    DWORD PTR [ecx+0x24],0x10
640025a4:	jb     0x640025aa
640025a6:	mov    eax,DWORD PTR [ecx+0x10]
640025a9:	ret    
640025aa:	lea    eax,[ecx+0x10]
640025ad:	ret    
640025ae:	int3   
640025af:	int3   
640025b0:	push   esi
640025b1:	mov    esi,ecx
640025b3:	mov    DWORD PTR [esi],0x64021300
640025b9:	cmp    DWORD PTR [esi+0x24],0x10
640025bd:	jb     0x640025cb
640025bf:	mov    eax,DWORD PTR [esi+0x10]
640025c2:	push   eax
640025c3:	call   0x6400eb52
640025c8:	add    esp,0x4
640025cb:	xor    eax,eax
640025cd:	mov    DWORD PTR [esi+0x24],0xf
640025d4:	mov    DWORD PTR [esi+0x20],eax
640025d7:	mov    ecx,esi
640025d9:	mov    BYTE PTR [esi+0x10],al
640025dc:	call   0x6400ec6b
640025e1:	test   BYTE PTR [esp+0x8],0x1
640025e6:	je     0x640025f1
640025e8:	push   esi
640025e9:	call   0x6400eb52
640025ee:	add    esp,0x4
640025f1:	mov    eax,esi
640025f3:	pop    esi
640025f4:	ret    0x4
640025f7:	int3   
640025f8:	int3   
640025f9:	int3   
640025fa:	int3   
640025fb:	int3   
640025fc:	int3   
640025fd:	int3   
640025fe:	int3   
640025ff:	int3   
64002600:	push   esi
64002601:	mov    esi,ecx
64002603:	mov    DWORD PTR [esi],0x64021300
64002609:	cmp    DWORD PTR [esi+0x24],0x10
6400260d:	jb     0x6400261b
6400260f:	mov    eax,DWORD PTR [esi+0x10]
64002612:	push   eax
64002613:	call   0x6400eb52
64002618:	add    esp,0x4
6400261b:	xor    eax,eax
6400261d:	mov    DWORD PTR [esi+0x24],0xf
64002624:	mov    DWORD PTR [esi+0x20],eax
64002627:	mov    BYTE PTR [esi+0x10],al
6400262a:	mov    ecx,esi
6400262c:	pop    esi
6400262d:	jmp    0x6400ec6b
64002632:	int3   
64002633:	int3   
64002634:	int3   
64002635:	int3   
64002636:	int3   
64002637:	int3   
64002638:	int3   
64002639:	int3   
6400263a:	int3   
6400263b:	int3   
6400263c:	int3   
6400263d:	int3   
6400263e:	int3   
6400263f:	int3   
64002640:	mov    eax,DWORD PTR [esp+0x4]
64002644:	push   esi
64002645:	push   eax
64002646:	mov    esi,ecx
64002648:	call   0x64002660
6400264d:	mov    DWORD PTR [esi],0x64021318
64002653:	mov    eax,esi
64002655:	pop    esi
64002656:	ret    0x4
64002659:	int3   
6400265a:	int3   
6400265b:	int3   
6400265c:	int3   
6400265d:	int3   
6400265e:	int3   
6400265f:	int3   
64002660:	push   0xffffffff
64002662:	push   0x6401edd8
64002667:	mov    eax,fs:0x0
6400266d:	push   eax
6400266e:	push   ecx
6400266f:	push   esi
64002670:	push   edi
64002671:	mov    eax,ds:0x64028038
64002676:	xor    eax,esp
64002678:	push   eax
64002679:	lea    eax,[esp+0x10]
6400267d:	mov    fs:0x0,eax
64002683:	mov    esi,ecx
64002685:	mov    DWORD PTR [esp+0xc],esi
64002689:	mov    edi,DWORD PTR [esp+0x20]
6400268d:	push   edi
6400268e:	call   0x6400ec13
64002693:	xor    edx,edx
64002695:	mov    DWORD PTR [esp+0x18],edx
64002699:	push   0xffffffff
6400269b:	lea    ecx,[esi+0xc]
6400269e:	mov    DWORD PTR [esi],0x64021300
640026a4:	lea    eax,[edi+0xc]
640026a7:	push   edx
640026a8:	mov    DWORD PTR [ecx+0x18],0xf
640026af:	mov    DWORD PTR [ecx+0x14],edx
640026b2:	push   eax
640026b3:	mov    BYTE PTR [ecx+0x4],dl
640026b6:	call   0x64001ad0
640026bb:	mov    eax,esi
640026bd:	mov    ecx,DWORD PTR [esp+0x10]
640026c1:	mov    DWORD PTR fs:0x0,ecx
640026c8:	pop    ecx
640026c9:	pop    edi
640026ca:	pop    esi
640026cb:	add    esp,0x10
640026ce:	ret    0x4
640026d1:	int3   
640026d2:	int3   
640026d3:	int3   
640026d4:	int3   
640026d5:	int3   
640026d6:	int3   
640026d7:	int3   
640026d8:	int3   
640026d9:	int3   
640026da:	int3   
640026db:	int3   
640026dc:	int3   
640026dd:	int3   
640026de:	int3   
640026df:	int3   
640026e0:	sub    esp,0x6c
640026e3:	mov    eax,ds:0x64028038
640026e8:	xor    eax,esp
640026ea:	mov    DWORD PTR [esp+0x68],eax
640026ee:	mov    eax,DWORD PTR [esp+0x74]
640026f2:	movzx  ecx,BYTE PTR [eax+0xf]
640026f6:	movzx  edx,BYTE PTR [eax+0xe]
640026fa:	push   esi
640026fb:	push   ecx
640026fc:	movzx  ecx,BYTE PTR [eax+0xd]
64002700:	push   edx
64002701:	movzx  edx,BYTE PTR [eax+0xc]
64002705:	push   ecx
64002706:	movzx  ecx,BYTE PTR [eax+0xb]
6400270a:	push   edx
6400270b:	movzx  edx,BYTE PTR [eax+0xa]
6400270f:	mov    esi,DWORD PTR [esp+0x84]
64002716:	push   ecx
64002717:	movzx  ecx,BYTE PTR [eax+0x9]
6400271b:	push   edx
6400271c:	movzx  edx,BYTE PTR [eax+0x8]
64002720:	push   ecx
64002721:	movzx  ecx,WORD PTR [eax+0x6]
64002725:	push   edx
64002726:	movzx  edx,WORD PTR [eax+0x4]
6400272a:	mov    eax,DWORD PTR [eax]
6400272c:	push   ecx
6400272d:	push   edx
6400272e:	push   eax
6400272f:	push   0x640235a8
64002734:	push   0x32
64002736:	push   0x640235e4
6400273b:	mov    DWORD PTR [esp+0x3c],0x0
64002743:	call   0x64003970
64002748:	add    esp,0xc
6400274b:	push   eax
6400274c:	lea    ecx,[esp+0x38]
64002750:	push   0x64
64002752:	push   ecx
64002753:	call   0x6400fe96
64002758:	add    esp,0x38
6400275b:	lea    edx,[esp+0x8]
6400275f:	push   edx
64002760:	mov    ecx,esi
64002762:	call   0x64003730
64002767:	mov    ecx,DWORD PTR [esp+0x6c]
6400276b:	mov    eax,esi
6400276d:	pop    esi
6400276e:	xor    ecx,esp
64002770:	call   0x6400f34e
64002775:	add    esp,0x6c
64002778:	ret    
64002779:	int3   
6400277a:	int3   
6400277b:	int3   
6400277c:	int3   
6400277d:	int3   
6400277e:	int3   
6400277f:	int3   
64002780:	push   0xffffffff
64002782:	push   0x6401f168
64002787:	mov    eax,fs:0x0
6400278d:	push   eax
6400278e:	sub    esp,0x24
64002791:	mov    eax,ds:0x64028038
64002796:	xor    eax,esp
64002798:	mov    DWORD PTR [esp+0x20],eax
6400279c:	push   ebx
6400279d:	push   ebp
6400279e:	push   edi
6400279f:	mov    eax,ds:0x64028038
640027a4:	xor    eax,esp
640027a6:	push   eax
640027a7:	lea    eax,[esp+0x34]
640027ab:	mov    fs:0x0,eax
640027b1:	mov    DWORD PTR [esp+0x3c],0x0
640027b9:	call   DWORD PTR ds:0x64028008
640027bf:	mov    eax,ds:0x64021adc
640027c4:	mov    ecx,DWORD PTR ds:0x64021ae0
640027ca:	mov    edx,DWORD PTR ds:0x64021ae4
640027d0:	mov    DWORD PTR [esp+0x20],eax
640027d4:	mov    eax,ds:0x64021ae8
640027d9:	mov    DWORD PTR [esp+0x2c],eax
640027dd:	mov    eax,DWORD PTR [esp+0x44]
640027e1:	mov    DWORD PTR [esp+0x24],ecx
640027e5:	mov    DWORD PTR [esp+0x28],edx
640027e9:	cmp    DWORD PTR [eax-0xc],0x0
640027ed:	jle    0x6400280d
640027ef:	lea    ebx,[esp+0x44]
640027f3:	call   0x640038a0
640027f8:	mov    edi,ebx
640027fa:	call   0x64003d60
640027ff:	call   0x64003820
64002804:	call   0x64003d60
64002809:	mov    eax,DWORD PTR [esp+0x44]
6400280d:	cmp    DWORD PTR [eax-0x4],0x1
64002811:	jle    0x64002824
64002813:	mov    ecx,DWORD PTR [eax-0xc]
64002816:	push   ecx
64002817:	lea    ecx,[esp+0x48]
6400281b:	call   0x640022d0
64002820:	mov    eax,DWORD PTR [esp+0x44]
64002824:	lea    edx,[esp+0x20]
64002828:	push   edx
64002829:	push   eax
6400282a:	call   DWORD PTR ds:0x6402119c
64002830:	test   eax,eax
64002832:	je     0x64002851
64002834:	mov    eax,ds:0x64021ae8
64002839:	mov    edi,DWORD PTR ds:0x64021adc
6400283f:	mov    ebx,DWORD PTR ds:0x64021ae0
64002845:	mov    ebp,DWORD PTR ds:0x64021ae4
6400284b:	mov    DWORD PTR [esp+0x1c],eax
6400284f:	jmp    0x64002865
64002851:	mov    edx,DWORD PTR [esp+0x2c]
64002855:	mov    edi,DWORD PTR [esp+0x20]
64002859:	mov    ebx,DWORD PTR [esp+0x24]
6400285d:	mov    ebp,DWORD PTR [esp+0x28]
64002861:	mov    DWORD PTR [esp+0x1c],edx
64002865:	mov    DWORD PTR [esp+0x3c],0xffffffff
6400286d:	mov    eax,DWORD PTR [esp+0x44]
64002871:	add    eax,0xfffffff0
64002874:	or     edx,0xffffffff
64002877:	lea    ecx,[eax+0xc]
6400287a:	lock xadd DWORD PTR [ecx],edx
6400287e:	dec    edx
6400287f:	test   edx,edx
64002881:	jg     0x6400288d
64002883:	mov    ecx,DWORD PTR [eax]
64002885:	mov    edx,DWORD PTR [ecx]
64002887:	push   eax
64002888:	mov    eax,DWORD PTR [edx+0x4]
6400288b:	call   eax
6400288d:	mov    ecx,DWORD PTR [esp+0x1c]
64002891:	mov    DWORD PTR [esi],edi
64002893:	mov    DWORD PTR [esi+0x4],ebx
64002896:	mov    DWORD PTR [esi+0x8],ebp
64002899:	mov    eax,esi
6400289b:	mov    DWORD PTR [esi+0xc],ecx
6400289e:	mov    ecx,DWORD PTR [esp+0x34]
640028a2:	mov    DWORD PTR fs:0x0,ecx
640028a9:	pop    ecx
640028aa:	pop    edi
640028ab:	pop    ebp
640028ac:	pop    ebx
640028ad:	mov    ecx,DWORD PTR [esp+0x20]
640028b1:	xor    ecx,esp
640028b3:	call   0x6400f34e
640028b8:	add    esp,0x30
640028bb:	ret    
640028bc:	int3   
640028bd:	int3   
640028be:	int3   
640028bf:	int3   
640028c0:	push   ebp
640028c1:	mov    ebp,esp
640028c3:	sub    esp,0x18
640028c6:	mov    eax,ds:0x64028038
640028cb:	xor    eax,ebp
640028cd:	mov    DWORD PTR [ebp-0x4],eax
640028d0:	mov    eax,DWORD PTR [ebp+0x8]
640028d3:	push   ebx
640028d4:	push   esi
640028d5:	push   edi
640028d6:	mov    DWORD PTR [ebp-0x14],eax
640028d9:	mov    DWORD PTR [ebp-0x18],0x0
640028e0:	call   DWORD PTR ds:0x64028008
640028e6:	movzx  ecx,BYTE PTR [ebp+0xc]
640028ea:	push   ecx
640028eb:	push   0x64023618
640028f0:	push   0x6
640028f2:	push   0x64023650
640028f7:	mov    ebx,eax
640028f9:	call   0x64003970
640028fe:	add    esp,0xc
64002901:	push   eax
64002902:	lea    edx,[ebp-0x10]
64002905:	push   edx
64002906:	call   0x6400fe1b
6400290b:	add    esp,0xc
6400290e:	lea    eax,[ebp-0x10]
64002911:	push   eax
64002912:	call   DWORD PTR ds:0x6402107c
64002918:	mov    esi,eax
6400291a:	add    esi,0x1
6400291d:	cmp    esi,0x3fffffff
64002923:	jg     0x64002951
64002925:	lea    eax,[esi+esi*1]
64002928:	call   0x6400fad0
6400292d:	mov    edi,esp
6400292f:	test   edi,edi
64002931:	je     0x64002951
64002933:	push   esi
64002934:	push   edi
64002935:	push   0xffffffff
64002937:	lea    ecx,[ebp-0x10]
6400293a:	push   ecx
6400293b:	push   0x0
6400293d:	push   ebx
6400293e:	mov    WORD PTR [edi],0x0
64002943:	call   DWORD PTR ds:0x6402103c
64002949:	neg    eax
6400294b:	sbb    eax,eax
6400294d:	and    eax,edi
6400294f:	jmp    0x64002953
64002951:	xor    eax,eax
64002953:	mov    esi,DWORD PTR [ebp-0x14]
64002956:	push   eax
64002957:	mov    ecx,esi
64002959:	call   0x640017e0
6400295e:	mov    eax,esi
64002960:	lea    esp,[ebp-0x24]
64002963:	pop    edi
64002964:	pop    esi
64002965:	pop    ebx
64002966:	mov    ecx,DWORD PTR [ebp-0x4]
64002969:	xor    ecx,ebp
6400296b:	call   0x6400f34e
64002970:	mov    esp,ebp
64002972:	pop    ebp
64002973:	ret    
64002974:	int3   
64002975:	int3   
64002976:	int3   
64002977:	int3   
64002978:	int3   
64002979:	int3   
6400297a:	int3   
6400297b:	int3   
6400297c:	int3   
6400297d:	int3   
6400297e:	int3   
6400297f:	int3   
64002980:	push   0xffffffff
64002982:	push   0x6401fd89
64002987:	mov    eax,fs:0x0
6400298d:	push   eax
6400298e:	sub    esp,0x20
64002991:	push   ebx
64002992:	push   ebp
64002993:	push   esi
64002994:	push   edi
64002995:	mov    eax,ds:0x64028038
6400299a:	xor    eax,esp
6400299c:	push   eax
6400299d:	lea    eax,[esp+0x34]
640029a1:	mov    fs:0x0,eax
640029a7:	xor    ebx,ebx
640029a9:	mov    DWORD PTR [esp+0x3c],ebx
640029ad:	mov    DWORD PTR [esp+0x18],ebx
640029b1:	mov    eax,ds:0x640294e0
640029b6:	mov    edx,DWORD PTR [eax+0xc]
640029b9:	mov    ecx,0x640294e0
640029be:	call   edx
640029c0:	mov    esi,DWORD PTR [esp+0x44]
640029c4:	add    eax,0x10
640029c7:	mov    DWORD PTR [esi],eax
640029c9:	mov    edi,DWORD PTR [esp+0x48]
640029cd:	mov    DWORD PTR [esp+0x3c],ebx
640029d1:	mov    eax,DWORD PTR [edi]
640029d3:	mov    ecx,0x1
640029d8:	sub    eax,0x10
640029db:	cmp    DWORD PTR [eax+0xc],ecx
640029de:	mov    DWORD PTR [esp+0x18],ecx
640029e2:	jle    0x640029ef
640029e4:	mov    eax,DWORD PTR [eax+0x4]
640029e7:	push   eax
640029e8:	mov    ecx,edi
640029ea:	call   0x640022d0
640029ef:	mov    ebp,DWORD PTR [edi]
640029f1:	movzx  eax,WORD PTR [ebp+0x0]
640029f5:	cmp    ax,bx
640029f8:	je     0x64002cdb
640029fe:	cmp    ax,0x41
64002a02:	jb     0x64002a0a
64002a04:	cmp    ax,0x5a
64002a08:	jbe    0x64002a22
64002a0a:	cmp    ax,0x61
64002a0e:	jb     0x64002a16
64002a10:	cmp    ax,0x7a
64002a14:	jbe    0x64002a22
64002a16:	cmp    ax,0x30
64002a1a:	jb     0x64002a79
64002a1c:	cmp    ax,0x39
64002a20:	ja     0x64002a79
64002a22:	mov    cl,BYTE PTR [ebp+0x0]
64002a25:	mov    eax,DWORD PTR [esi]
64002a27:	mov    ebx,DWORD PTR [eax-0xc]
64002a2a:	mov    BYTE PTR [esp+0x14],cl
64002a2e:	mov    ecx,0x1
64002a33:	sub    ecx,DWORD PTR [eax-0x4]
64002a36:	mov    eax,DWORD PTR [eax-0x8]
64002a39:	lea    edi,[ebx+0x1]
64002a3c:	sub    eax,edi
64002a3e:	or     eax,ecx
64002a40:	jge    0x64002a4a
64002a42:	push   edi
64002a43:	mov    ecx,esi
64002a45:	call   0x64002280
64002a4a:	test   edi,edi
64002a4c:	movsx  dx,BYTE PTR [esp+0x14]
64002a52:	mov    eax,DWORD PTR [esi]
64002a54:	mov    WORD PTR [eax+ebx*2],dx
64002a58:	jl     0x64002cf1
64002a5e:	mov    eax,DWORD PTR [esi]
64002a60:	cmp    edi,DWORD PTR [eax-0x8]
64002a63:	jg     0x64002cf1
64002a69:	mov    DWORD PTR [eax-0xc],edi
64002a6c:	mov    eax,DWORD PTR [esi]
64002a6e:	mov    WORD PTR [eax+edi*2],0x0
64002a74:	jmp    0x64002ccb
64002a79:	cmp    ax,0x20
64002a7d:	jne    0x64002acb
64002a7f:	mov    eax,DWORD PTR [esi]
64002a81:	mov    ebx,DWORD PTR [eax-0xc]
64002a84:	mov    ecx,0x1
64002a89:	sub    ecx,DWORD PTR [eax-0x4]
64002a8c:	mov    eax,DWORD PTR [eax-0x8]
64002a8f:	lea    edi,[ebx+0x1]
64002a92:	sub    eax,edi
64002a94:	or     eax,ecx
64002a96:	jge    0x64002aa0
64002a98:	push   edi
64002a99:	mov    ecx,esi
64002a9b:	call   0x64002280
64002aa0:	test   edi,edi
64002aa2:	mov    eax,DWORD PTR [esi]
64002aa4:	mov    WORD PTR [eax+ebx*2],0x2b
64002aaa:	jl     0x64002cf1
64002ab0:	mov    eax,DWORD PTR [esi]
64002ab2:	cmp    edi,DWORD PTR [eax-0x8]
64002ab5:	jg     0x64002cf1
64002abb:	mov    DWORD PTR [eax-0xc],edi
64002abe:	mov    ecx,DWORD PTR [esi]
64002ac0:	mov    WORD PTR [ecx+edi*2],0x0
64002ac6:	jmp    0x64002ccb
64002acb:	cmp    ax,0x2d
64002acf:	je     0x64002c81
64002ad5:	cmp    ax,0x5f
64002ad9:	je     0x64002c81
64002adf:	cmp    ax,0x2e
64002ae3:	je     0x64002c81
64002ae9:	cmp    ax,0x21
64002aed:	je     0x64002c81
64002af3:	cmp    ax,0x7e
64002af7:	je     0x64002c81
64002afd:	cmp    ax,0x2a
64002b01:	je     0x64002c81
64002b07:	cmp    ax,0x27
64002b0b:	je     0x64002c81
64002b11:	cmp    ax,0x28
64002b15:	je     0x64002c81
64002b1b:	cmp    ax,0x29
64002b1f:	je     0x64002c81
64002b25:	cmp    ax,0x7f
64002b29:	ja     0x64002b60
64002b2b:	movzx  edx,BYTE PTR [ebp+0x0]
64002b2f:	push   edx
64002b30:	lea    eax,[esp+0x20]
64002b34:	push   eax
64002b35:	call   0x640028c0
64002b3a:	add    esp,0x8
64002b3d:	push   eax
64002b3e:	mov    ecx,esi
64002b40:	mov    DWORD PTR [esp+0x40],0x1
64002b48:	call   0x64001890
64002b4d:	lea    ecx,[esp+0x1c]
64002b51:	mov    BYTE PTR [esp+0x3c],0x0
64002b56:	call   0x64001ab0
64002b5b:	jmp    0x64002ccb
64002b60:	cmp    ax,0x7ff
64002b64:	ja     0x64002bd6
64002b66:	shr    eax,0x6
64002b69:	or     eax,0xffffffc0
64002b6c:	push   eax
64002b6d:	lea    ecx,[esp+0x24]
64002b71:	push   ecx
64002b72:	call   0x640028c0
64002b77:	add    esp,0x8
64002b7a:	push   eax
64002b7b:	mov    ecx,esi
64002b7d:	mov    DWORD PTR [esp+0x40],0x2
64002b85:	call   0x64001890
64002b8a:	lea    ecx,[esp+0x20]
64002b8e:	mov    BYTE PTR [esp+0x3c],0x0
64002b93:	call   0x64001ab0
64002b98:	movzx  edx,BYTE PTR [ebp+0x0]
64002b9c:	and    edx,0xffffff3f
64002ba2:	or     edx,0xffffff80
64002ba5:	push   edx
64002ba6:	lea    eax,[esp+0x28]
64002baa:	push   eax
64002bab:	call   0x640028c0
64002bb0:	add    esp,0x8
64002bb3:	push   eax
64002bb4:	mov    ecx,esi
64002bb6:	mov    DWORD PTR [esp+0x40],0x3
64002bbe:	call   0x64001890
64002bc3:	lea    ecx,[esp+0x24]
64002bc7:	mov    BYTE PTR [esp+0x3c],0x0
64002bcc:	call   0x64001ab0
64002bd1:	jmp    0x64002ccb
64002bd6:	shr    ax,0xc
64002bda:	lea    ecx,[esp+0x28]
64002bde:	or     eax,0xffffffe0
64002be1:	push   eax
64002be2:	push   ecx
64002be3:	call   0x640028c0
64002be8:	add    esp,0x8
64002beb:	push   eax
64002bec:	mov    ecx,esi
64002bee:	mov    DWORD PTR [esp+0x40],0x4
64002bf6:	call   0x64001890
64002bfb:	lea    ecx,[esp+0x28]
64002bff:	mov    BYTE PTR [esp+0x3c],0x0
64002c04:	call   0x64001ab0
64002c09:	movzx  edx,WORD PTR [ebp+0x0]
64002c0d:	shr    dx,0x6
64002c11:	lea    eax,[esp+0x2c]
64002c15:	and    edx,0xffffff3f
64002c1b:	or     edx,0xffffff80
64002c1e:	push   edx
64002c1f:	push   eax
64002c20:	call   0x640028c0
64002c25:	add    esp,0x8
64002c28:	push   eax
64002c29:	mov    ecx,esi
64002c2b:	mov    DWORD PTR [esp+0x40],0x5
64002c33:	call   0x64001890
64002c38:	lea    ecx,[esp+0x2c]
64002c3c:	mov    BYTE PTR [esp+0x3c],0x0
64002c41:	call   0x64001ab0
64002c46:	movzx  ecx,BYTE PTR [ebp+0x0]
64002c4a:	and    ecx,0xffffff3f
64002c50:	or     ecx,0xffffff80
64002c53:	push   ecx
64002c54:	lea    edx,[esp+0x34]
64002c58:	push   edx
64002c59:	call   0x640028c0
64002c5e:	add    esp,0x8
64002c61:	push   eax
64002c62:	mov    ecx,esi
64002c64:	mov    DWORD PTR [esp+0x40],0x6
64002c6c:	call   0x64001890
64002c71:	lea    ecx,[esp+0x30]
64002c75:	mov    BYTE PTR [esp+0x3c],0x0
64002c7a:	call   0x64001ab0
64002c7f:	jmp    0x64002ccb
64002c81:	mov    al,BYTE PTR [ebp+0x0]
64002c84:	mov    BYTE PTR [esp+0x14],al
64002c88:	mov    eax,DWORD PTR [esi]
64002c8a:	mov    ebx,DWORD PTR [eax-0xc]
64002c8d:	mov    ecx,0x1
64002c92:	sub    ecx,DWORD PTR [eax-0x4]
64002c95:	mov    eax,DWORD PTR [eax-0x8]
64002c98:	lea    edi,[ebx+0x1]
64002c9b:	sub    eax,edi
64002c9d:	or     eax,ecx
64002c9f:	jge    0x64002ca9
64002ca1:	push   edi
64002ca2:	mov    ecx,esi
64002ca4:	call   0x64002280
64002ca9:	test   edi,edi
64002cab:	movsx  cx,BYTE PTR [esp+0x14]
64002cb1:	mov    eax,DWORD PTR [esi]
64002cb3:	mov    WORD PTR [eax+ebx*2],cx
64002cb7:	jl     0x64002cf1
64002cb9:	mov    eax,DWORD PTR [esi]
64002cbb:	cmp    edi,DWORD PTR [eax-0x8]
64002cbe:	jg     0x64002cf1
64002cc0:	mov    DWORD PTR [eax-0xc],edi
64002cc3:	mov    edx,DWORD PTR [esi]
64002cc5:	mov    WORD PTR [edx+edi*2],0x0
64002ccb:	movzx  eax,WORD PTR [ebp+0x2]
64002ccf:	add    ebp,0x2
64002cd2:	test   ax,ax
64002cd5:	jne    0x640029fe
64002cdb:	mov    eax,esi
64002cdd:	mov    ecx,DWORD PTR [esp+0x34]
64002ce1:	mov    DWORD PTR fs:0x0,ecx
64002ce8:	pop    ecx
64002ce9:	pop    edi
64002cea:	pop    esi
64002ceb:	pop    ebp
64002cec:	pop    ebx
64002ced:	add    esp,0x2c
64002cf0:	ret    
64002cf1:	push   0x80070057
64002cf6:	call   0x64001000
64002cfb:	int3   
64002cfc:	int3   
64002cfd:	int3   
64002cfe:	int3   
64002cff:	int3   
64002d00:	push   0xffffffff
64002d02:	push   0x6401fc19
64002d07:	mov    eax,fs:0x0
64002d0d:	push   eax
64002d0e:	sub    esp,0x48
64002d11:	push   ebx
64002d12:	push   esi
64002d13:	push   edi
64002d14:	mov    eax,ds:0x64028038
64002d19:	xor    eax,esp
64002d1b:	push   eax
64002d1c:	lea    eax,[esp+0x58]
64002d20:	mov    fs:0x0,eax
64002d26:	xor    ebx,ebx
64002d28:	mov    DWORD PTR [esp+0x60],ebx
64002d2c:	mov    DWORD PTR [esp+0x10],ebx
64002d30:	mov    eax,ds:0x640294e0
64002d35:	mov    edx,DWORD PTR [eax+0xc]
64002d38:	mov    ecx,0x640294e0
64002d3d:	call   edx
64002d3f:	mov    edi,DWORD PTR [esp+0x68]
64002d43:	add    eax,0x10
64002d46:	mov    DWORD PTR [edi],eax
64002d48:	mov    DWORD PTR [esp+0x60],ebx
64002d4c:	mov    ecx,0x1
64002d51:	sub    ecx,DWORD PTR [eax-0x4]
64002d54:	mov    eax,DWORD PTR [eax-0x8]
64002d57:	sub    eax,0x800
64002d5c:	cmp    BYTE PTR [esp+0x6c],bl
64002d60:	mov    DWORD PTR [esp+0x10],0x1
64002d68:	je     0x64002dfc
64002d6e:	or     eax,ecx
64002d70:	jge    0x64002d7e
64002d72:	push   0x800
64002d77:	mov    ecx,edi
64002d79:	call   0x64002280
64002d7e:	mov    eax,DWORD PTR [edi]
64002d80:	push   0x800
64002d85:	push   eax
64002d86:	call   0x6400ae40
64002d8b:	call   eax
64002d8d:	test   eax,eax
64002d8f:	jne    0x64002e84
64002d95:	push   0x64023658
64002d9a:	push   0x22
64002d9c:	push   0x64023694
64002da1:	call   0x64003970
64002da6:	mov    ecx,eax
64002da8:	add    esp,0xc
64002dab:	mov    DWORD PTR [esp+0x2c],0xf
64002db3:	mov    DWORD PTR [esp+0x28],ebx
64002db7:	mov    BYTE PTR [esp+0x18],bl
64002dbb:	lea    esi,[ecx+0x1]
64002dbe:	mov    edi,edi
64002dc0:	mov    dl,BYTE PTR [ecx]
64002dc2:	add    ecx,0x1
64002dc5:	cmp    dl,bl
64002dc7:	jne    0x64002dc0
64002dc9:	sub    ecx,esi
64002dcb:	push   ecx
64002dcc:	push   eax
64002dcd:	lea    ecx,[esp+0x1c]
64002dd1:	call   0x64001bb0
64002dd6:	lea    eax,[esp+0x14]
64002dda:	push   eax
64002ddb:	lea    ecx,[esp+0x34]
64002ddf:	push   ecx
64002de0:	mov    DWORD PTR [esp+0x68],0x1
64002de8:	call   0x640011f0
64002ded:	push   0x64025ddc
64002df2:	lea    edx,[esp+0x34]
64002df6:	push   edx
64002df7:	call   0x6400ef3d
64002dfc:	or     eax,ecx
64002dfe:	jge    0x64002e0c
64002e00:	push   0x800
64002e05:	mov    ecx,edi
64002e07:	call   0x64002280
64002e0c:	mov    eax,DWORD PTR [edi]
64002e0e:	push   0x800
64002e13:	push   eax
64002e14:	call   0x6400a660
64002e19:	call   eax
64002e1b:	test   eax,eax
64002e1d:	jne    0x64002e84
64002e1f:	push   0x640236b8
64002e24:	push   0x1c
64002e26:	push   0x640236dc
64002e2b:	call   0x64003970
64002e30:	mov    ecx,eax
64002e32:	add    esp,0xc
64002e35:	mov    DWORD PTR [esp+0x2c],0xf
64002e3d:	mov    DWORD PTR [esp+0x28],ebx
64002e41:	mov    BYTE PTR [esp+0x18],bl
64002e45:	lea    esi,[ecx+0x1]
64002e48:	mov    dl,BYTE PTR [ecx]
64002e4a:	add    ecx,0x1
64002e4d:	cmp    dl,bl
64002e4f:	jne    0x64002e48
64002e51:	sub    ecx,esi
64002e53:	push   ecx
64002e54:	push   eax
64002e55:	lea    ecx,[esp+0x1c]
64002e59:	call   0x64001bb0
64002e5e:	lea    eax,[esp+0x14]
64002e62:	push   eax
64002e63:	lea    ecx,[esp+0x34]
64002e67:	push   ecx
64002e68:	mov    DWORD PTR [esp+0x68],0x2
64002e70:	call   0x640011f0
64002e75:	push   0x64025ddc
64002e7a:	lea    edx,[esp+0x34]
64002e7e:	push   edx
64002e7f:	call   0x6400ef3d
64002e84:	mov    edx,DWORD PTR [edi]
64002e86:	cmp    edx,ebx
64002e88:	jne    0x64002e8e
64002e8a:	xor    eax,eax
64002e8c:	jmp    0x64002ea4
64002e8e:	mov    eax,edx
64002e90:	lea    esi,[eax+0x2]
64002e93:	mov    cx,WORD PTR [eax]
64002e96:	add    eax,0x2
64002e99:	cmp    cx,bx
64002e9c:	jne    0x64002e93
64002e9e:	sub    eax,esi
64002ea0:	sar    eax,1
64002ea2:	js     0x64002ee6
64002ea4:	cmp    eax,DWORD PTR [edx-0x8]
64002ea7:	jg     0x64002ee6
64002ea9:	mov    DWORD PTR [edx-0xc],eax
64002eac:	mov    ecx,DWORD PTR [edi]
64002eae:	mov    WORD PTR [ecx+eax*2],bx
64002eb2:	mov    ecx,DWORD PTR [edi]
64002eb4:	mov    edx,DWORD PTR [ecx-0xc]
64002eb7:	lea    eax,[edx-0x1]
64002eba:	cmp    eax,ebx
64002ebc:	jl     0x64002ee6
64002ebe:	cmp    eax,edx
64002ec0:	jg     0x64002ee6
64002ec2:	movzx  eax,WORD PTR [ecx+eax*2]
64002ec6:	cmp    ax,0x5c
64002eca:	je     0x64002ed1
64002ecc:	call   0x640037c0
64002ed1:	mov    eax,edi
64002ed3:	mov    ecx,DWORD PTR [esp+0x58]
64002ed7:	mov    DWORD PTR fs:0x0,ecx
64002ede:	pop    ecx
64002edf:	pop    edi
64002ee0:	pop    esi
64002ee1:	pop    ebx
64002ee2:	add    esp,0x54
64002ee5:	ret    
64002ee6:	push   0x80070057
64002eeb:	call   0x64001000
64002ef0:	int3   
64002ef1:	int3   
64002ef2:	int3   
64002ef3:	int3   
64002ef4:	int3   
64002ef5:	int3   
64002ef6:	int3   
64002ef7:	int3   
64002ef8:	int3   
64002ef9:	int3   
64002efa:	int3   
64002efb:	int3   
64002efc:	int3   
64002efd:	int3   
64002efe:	int3   
64002eff:	int3   
64002f00:	push   0xffffffff
64002f02:	push   0x6401fd21
64002f07:	mov    eax,fs:0x0
64002f0d:	push   eax
64002f0e:	sub    esp,0x48
64002f11:	push   ebx
64002f12:	push   ebp
64002f13:	push   esi
64002f14:	push   edi
64002f15:	mov    eax,ds:0x64028038
64002f1a:	xor    eax,esp
64002f1c:	push   eax
64002f1d:	lea    eax,[esp+0x5c]
64002f21:	mov    fs:0x0,eax
64002f27:	mov    esi,DWORD PTR [esp+0x6c]
64002f2b:	xor    ebx,ebx
64002f2d:	push   ebx
64002f2e:	mov    DWORD PTR [esp+0x68],ebx
64002f32:	push   esi
64002f33:	mov    DWORD PTR [esp+0x1c],ebx
64002f37:	call   0x64002d00
64002f3c:	add    esp,0x8
64002f3f:	mov    DWORD PTR [esp+0x64],ebx
64002f43:	mov    eax,DWORD PTR [esi]
64002f45:	mov    ebp,0x1
64002f4a:	sub    eax,0x10
64002f4d:	cmp    DWORD PTR [eax+0xc],ebp
64002f50:	mov    DWORD PTR [esp+0x14],ebp
64002f54:	jle    0x64002f61
64002f56:	mov    eax,DWORD PTR [eax+0x4]
64002f59:	push   eax
64002f5a:	mov    ecx,esi
64002f5c:	call   0x640022d0
64002f61:	mov    eax,DWORD PTR [esi]
64002f63:	push   0x5c
64002f65:	push   eax
64002f66:	call   0x6400ff17
64002f6b:	mov    edi,eax
64002f6d:	add    esp,0x8
64002f70:	cmp    edi,ebx
64002f72:	jne    0x64002fd7
64002f74:	push   0x640236fc
64002f79:	push   0x18
64002f7b:	push   0x64023720
64002f80:	call   0x64003970
64002f85:	mov    ecx,eax
64002f87:	add    esp,0xc
64002f8a:	mov    DWORD PTR [esp+0x30],0xf
64002f92:	mov    DWORD PTR [esp+0x2c],ebx
64002f96:	mov    BYTE PTR [esp+0x1c],bl
64002f9a:	lea    esi,[ecx+0x1]
64002f9d:	lea    ecx,[ecx+0x0]
64002fa0:	mov    dl,BYTE PTR [ecx]
64002fa2:	add    ecx,ebp
64002fa4:	cmp    dl,bl
64002fa6:	jne    0x64002fa0
64002fa8:	sub    ecx,esi
64002faa:	push   ecx
64002fab:	push   eax
64002fac:	lea    ecx,[esp+0x20]
64002fb0:	call   0x64001bb0
64002fb5:	lea    ecx,[esp+0x18]
64002fb9:	push   ecx
64002fba:	lea    edx,[esp+0x38]
64002fbe:	push   edx
64002fbf:	mov    DWORD PTR [esp+0x6c],ebp
64002fc3:	call   0x640011f0
64002fc8:	push   0x64025ddc
64002fcd:	lea    eax,[esp+0x38]
64002fd1:	push   eax
64002fd2:	call   0x6400ef3d
64002fd7:	mov    eax,DWORD PTR [esi]
64002fd9:	sub    eax,0x10
64002fdc:	cmp    DWORD PTR [eax+0xc],ebp
64002fdf:	jle    0x64002fec
64002fe1:	mov    ecx,DWORD PTR [eax+0x4]
64002fe4:	push   ecx
64002fe5:	mov    ecx,esi
64002fe7:	call   0x640022d0
64002fec:	mov    ecx,DWORD PTR [esi]
64002fee:	sub    edi,ecx
64002ff0:	sar    edi,1
64002ff2:	add    edi,ebp
64002ff4:	cmp    ecx,ebx
64002ff6:	jne    0x64002ffc
64002ff8:	xor    eax,eax
64002ffa:	jmp    0x64003017
64002ffc:	mov    eax,ecx
64002ffe:	lea    ebp,[eax+0x2]
64003001:	mov    dx,WORD PTR [eax]
64003004:	add    eax,0x2
64003007:	cmp    dx,bx
6400300a:	jne    0x64003001
6400300c:	sub    eax,ebp
6400300e:	sar    eax,1
64003010:	js     0x6400306a
64003012:	mov    ebp,0x1
64003017:	cmp    eax,DWORD PTR [ecx-0x8]
6400301a:	jg     0x6400306a
6400301c:	mov    DWORD PTR [ecx-0xc],eax
6400301f:	mov    edx,DWORD PTR [esi]
64003021:	mov    WORD PTR [edx+eax*2],bx
64003025:	mov    eax,DWORD PTR [esi]
64003027:	sub    eax,0x10
6400302a:	mov    ecx,ebp
6400302c:	sub    ecx,DWORD PTR [eax+0xc]
6400302f:	mov    eax,DWORD PTR [eax+0x8]
64003032:	sub    eax,edi
64003034:	or     eax,ecx
64003036:	jge    0x64003040
64003038:	push   edi
64003039:	mov    ecx,esi
6400303b:	call   0x64002280
64003040:	cmp    edi,ebx
64003042:	jl     0x6400306a
64003044:	mov    eax,DWORD PTR [esi]
64003046:	cmp    edi,DWORD PTR [eax-0x8]
64003049:	jg     0x6400306a
6400304b:	mov    DWORD PTR [eax-0xc],edi
6400304e:	mov    eax,DWORD PTR [esi]
64003050:	mov    WORD PTR [eax+edi*2],bx
64003054:	mov    eax,esi
64003056:	mov    ecx,DWORD PTR [esp+0x5c]
6400305a:	mov    DWORD PTR fs:0x0,ecx
64003061:	pop    ecx
64003062:	pop    edi
64003063:	pop    esi
64003064:	pop    ebp
64003065:	pop    ebx
64003066:	add    esp,0x54
64003069:	ret    
6400306a:	push   0x80070057
6400306f:	call   0x64001000
64003074:	int3   
64003075:	int3   
64003076:	int3   
64003077:	int3   
64003078:	int3   
64003079:	int3   
6400307a:	int3   
6400307b:	int3   
6400307c:	int3   
6400307d:	int3   
6400307e:	int3   
6400307f:	int3   
64003080:	push   ebp
64003081:	lea    ebp,[esp-0x78]
64003085:	sub    esp,0x78
64003088:	push   0xffffffff
6400308a:	push   0x6401fde9
6400308f:	mov    eax,fs:0x0
64003095:	push   eax
64003096:	sub    esp,0xb4
6400309c:	mov    eax,ds:0x64028038
640030a1:	xor    eax,ebp
640030a3:	mov    DWORD PTR [ebp+0x74],eax
640030a6:	push   ebx
640030a7:	push   esi
640030a8:	push   edi
640030a9:	push   eax
640030aa:	lea    eax,[ebp-0xc]
640030ad:	mov    fs:0x0,eax
640030b3:	call   DWORD PTR ds:0x64028008
640030b9:	mov    ebx,eax
640030bb:	lea    eax,[ebp+0xc]
640030be:	push   eax
640030bf:	call   0x64002f00
640030c4:	add    esp,0x4
640030c7:	push   0x0
640030c9:	push   0x0
640030cb:	lea    ecx,[ebp+0x0]
640030ce:	push   ecx
640030cf:	lea    edx,[ebp+0x4]
640030d2:	push   edx
640030d3:	lea    eax,[ebp+0x8]
640030d6:	push   eax
640030d7:	push   0x0
640030d9:	mov    DWORD PTR [ebp-0x4],0x0
640030e0:	mov    ecx,DWORD PTR [ebp+0xc]
640030e3:	push   0x0
640030e5:	push   ecx
640030e6:	call   0x6400ad60
640030eb:	call   eax
640030ed:	test   eax,eax
640030ef:	jne    0x64003201
640030f5:	call   DWORD PTR ds:0x64021044
640030fb:	push   0xa
640030fd:	lea    edx,[ebp+0x10]
64003100:	push   edx
64003101:	push   eax
64003102:	call   0x6400fef2
64003107:	mov    eax,DWORD PTR [ebp+0xc]
6400310a:	add    esp,0xc
6400310d:	test   eax,eax
6400310f:	mov    edi,eax
64003111:	je     0x6400313f
64003113:	push   eax
64003114:	call   DWORD PTR ds:0x64021054
6400311a:	add    eax,0x1
6400311d:	cmp    eax,0x3fffffff
64003122:	jle    0x64003128
64003124:	xor    edi,edi
64003126:	jmp    0x6400313f
64003128:	lea    esi,[eax+eax*1]
6400312b:	mov    eax,esi
6400312d:	call   0x6400fad0
64003132:	mov    eax,esp
64003134:	push   ebx
64003135:	push   esi
64003136:	push   edi
64003137:	push   eax
64003138:	call   0x640023b0
6400313d:	mov    edi,eax
6400313f:	push   0x64023788
64003144:	push   0x21
64003146:	push   0x640237c4
6400314b:	call   0x64003970
64003150:	mov    ecx,eax
64003152:	add    esp,0xc
64003155:	mov    DWORD PTR [ebp-0x10],0xf
6400315c:	mov    DWORD PTR [ebp-0x14],0x0
64003163:	mov    BYTE PTR [ebp-0x24],0x0
64003167:	lea    esi,[ecx+0x1]
6400316a:	lea    ebx,[ebx+0x0]
64003170:	mov    dl,BYTE PTR [ecx]
64003172:	add    ecx,0x1
64003175:	test   dl,dl
64003177:	jne    0x64003170
64003179:	sub    ecx,esi
6400317b:	push   ecx
6400317c:	push   eax
6400317d:	lea    ecx,[ebp-0x28]
64003180:	call   0x64001bb0
64003185:	lea    eax,[ebp-0x28]
64003188:	push   eax
64003189:	lea    esi,[ebp-0x6c]
6400318c:	mov    BYTE PTR [ebp-0x4],0x1
64003190:	call   0x64006690
64003195:	mov    esi,eax
64003197:	push   0x64023740
6400319c:	push   0x7
6400319e:	push   0x64023780
640031a3:	mov    BYTE PTR [ebp-0x4],0x2
640031a7:	call   0x64003970
640031ac:	push   esi
640031ad:	mov    edi,eax
640031af:	lea    esi,[ebp-0x88]
640031b5:	call   0x64006690
640031ba:	push   eax
640031bb:	lea    edi,[ebp+0x10]
640031be:	lea    esi,[ebp-0xc0]
640031c4:	mov    BYTE PTR [ebp-0x4],0x3
640031c8:	call   0x64006690
640031cd:	push   eax
640031ce:	mov    edi,0x6402373c
640031d3:	lea    esi,[ebp-0xa4]
640031d9:	mov    BYTE PTR [ebp-0x4],0x4
640031dd:	call   0x64006690
640031e2:	add    esp,0x1c
640031e5:	push   eax
640031e6:	lea    ecx,[ebp-0x50]
640031e9:	push   ecx
640031ea:	mov    BYTE PTR [ebp-0x4],0x5
640031ee:	call   0x640011f0
640031f3:	push   0x64025ddc
640031f8:	lea    edx,[ebp-0x50]
640031fb:	push   edx
640031fc:	call   0x6400ef3d
64003201:	mov    esi,DWORD PTR [ebp+0x8]
64003204:	mov    DWORD PTR [ebp-0x4],0xffffffff
6400320b:	mov    eax,DWORD PTR [ebp+0xc]
6400320e:	add    eax,0xfffffff0
64003211:	lea    ecx,[eax+0xc]
64003214:	or     edx,0xffffffff
64003217:	lock xadd DWORD PTR [ecx],edx
6400321b:	dec    edx
6400321c:	test   edx,edx
6400321e:	jg     0x6400322a
64003220:	mov    ecx,DWORD PTR [eax]
64003222:	mov    edx,DWORD PTR [ecx]
64003224:	push   eax
64003225:	mov    eax,DWORD PTR [edx+0x4]
64003228:	call   eax
6400322a:	mov    eax,esi
6400322c:	lea    esp,[ebp-0xd0]
64003232:	mov    ecx,DWORD PTR [ebp-0xc]
64003235:	mov    DWORD PTR fs:0x0,ecx
6400323c:	pop    ecx
6400323d:	pop    edi
6400323e:	pop    esi
6400323f:	pop    ebx
64003240:	mov    ecx,DWORD PTR [ebp+0x74]
64003243:	xor    ecx,ebp
64003245:	call   0x6400f34e
6400324a:	add    ebp,0x78
6400324d:	mov    esp,ebp
6400324f:	pop    ebp
64003250:	ret    
64003251:	int3   
64003252:	int3   
64003253:	int3   
64003254:	int3   
64003255:	int3   
64003256:	int3   
64003257:	int3   
64003258:	int3   
64003259:	int3   
6400325a:	int3   
6400325b:	int3   
6400325c:	int3   
6400325d:	int3   
6400325e:	int3   
6400325f:	int3   
64003260:	push   ebp
64003261:	mov    ebp,esp
64003263:	and    esp,0xfffffff8
64003266:	push   0xffffffff
64003268:	push   0x6401fbb6
6400326d:	mov    eax,fs:0x0
64003273:	push   eax
64003274:	sub    esp,0x840
6400327a:	mov    eax,ds:0x64028038
6400327f:	xor    eax,esp
64003281:	mov    DWORD PTR [esp+0x838],eax
64003288:	push   ebx
64003289:	push   esi
6400328a:	push   edi
6400328b:	mov    eax,ds:0x64028038
64003290:	xor    eax,esp
64003292:	push   eax
64003293:	lea    eax,[esp+0x850]
6400329a:	mov    fs:0x0,eax
640032a0:	xor    eax,eax
640032a2:	xor    ebx,ebx
640032a4:	mov    DWORD PTR [esp+0x34],ebx
640032a8:	mov    DWORD PTR [esp+0x38],eax
640032ac:	mov    DWORD PTR [esp+0x3c],eax
640032b0:	mov    DWORD PTR [esp+0x40],eax
640032b4:	mov    DWORD PTR [esp+0x1c],ebx
640032b8:	push   0x640237e8
640032bd:	push   0x1f
640032bf:	push   0x64023820
640032c4:	mov    DWORD PTR [esp+0x864],ebx
640032cb:	call   0x64003b70
640032d0:	add    esp,0xc
640032d3:	lea    ecx,[esp+0x18]
640032d7:	push   ecx
640032d8:	push   0x20019
640032dd:	push   ebx
640032de:	push   eax
640032df:	push   0x80000002
640032e4:	mov    DWORD PTR [esp+0x2c],ebx
640032e8:	call   DWORD PTR ds:0x64021004
640032ee:	cmp    eax,ebx
640032f0:	jne    0x64003367
640032f2:	mov    edx,DWORD PTR [esp+0x18]
640032f6:	push   0x64023860
640032fb:	push   0xb
640032fd:	push   0x64023898
64003302:	mov    DWORD PTR [esp+0x28],edx
64003306:	mov    DWORD PTR [esp+0x2c],0x400
6400330e:	call   0x64003b70
64003313:	add    esp,0xc
64003316:	push   eax
64003317:	lea    eax,[esp+0x20]
6400331b:	push   eax
6400331c:	lea    edi,[esp+0x28]
64003320:	lea    esi,[esp+0x4c]
64003324:	call   0x64002410
64003329:	test   eax,eax
6400332b:	je     0x6400338a
6400332d:	mov    eax,DWORD PTR [esp+0x18]
64003331:	test   eax,eax
64003333:	mov    ecx,DWORD PTR [esp+0x40]
64003337:	mov    esi,DWORD PTR [esp+0x34]
6400333b:	mov    edi,DWORD PTR [esp+0x38]
6400333f:	mov    ebx,DWORD PTR [esp+0x3c]
64003343:	mov    DWORD PTR [esp+0x30],ecx
64003347:	je     0x64003350
64003349:	push   eax
6400334a:	call   DWORD PTR ds:0x64021000
64003350:	mov    eax,DWORD PTR [ebp+0x8]
64003353:	mov    edx,DWORD PTR [esp+0x30]
64003357:	mov    DWORD PTR [eax],esi
64003359:	mov    DWORD PTR [eax+0x4],edi
6400335c:	mov    DWORD PTR [eax+0x8],ebx
6400335f:	mov    DWORD PTR [eax+0xc],edx
64003362:	jmp    0x64003459
64003367:	mov    eax,DWORD PTR [ebp+0x8]
6400336a:	mov    ecx,DWORD PTR [esp+0x34]
6400336e:	mov    edx,DWORD PTR [esp+0x38]
64003372:	mov    DWORD PTR [eax],ecx
64003374:	mov    ecx,DWORD PTR [esp+0x3c]
64003378:	mov    DWORD PTR [eax+0x4],edx
6400337b:	mov    edx,DWORD PTR [esp+0x40]
6400337f:	mov    DWORD PTR [eax+0x8],ecx
64003382:	mov    DWORD PTR [eax+0xc],edx
64003385:	jmp    0x64003459
6400338a:	push   0x640238b0
6400338f:	lea    ecx,[esp+0x18]
64003393:	call   0x640017e0
64003398:	lea    eax,[esp+0x44]
6400339c:	mov    BYTE PTR [esp+0x858],0x1
640033a4:	lea    edx,[eax+0x2]
640033a7:	mov    cx,WORD PTR [eax]
640033aa:	add    eax,0x2
640033ad:	cmp    cx,bx
640033b0:	jne    0x640033a7
640033b2:	sub    eax,edx
640033b4:	sar    eax,1
640033b6:	push   eax
640033b7:	lea    eax,[esp+0x48]
640033bb:	push   eax
640033bc:	lea    ecx,[esp+0x1c]
640033c0:	call   0x64001ef0
640033c5:	push   0x1
640033c7:	push   0x640238b4
640033cc:	lea    ecx,[esp+0x1c]
640033d0:	call   0x64001ef0
640033d5:	mov    eax,DWORD PTR [esp+0x14]
640033d9:	cmp    DWORD PTR [eax-0x4],0x1
640033dd:	jle    0x640033f0
640033df:	mov    ecx,DWORD PTR [eax-0xc]
640033e2:	push   ecx
640033e3:	lea    ecx,[esp+0x18]
640033e7:	call   0x640022d0
640033ec:	mov    eax,DWORD PTR [esp+0x14]
640033f0:	lea    edx,[esp+0x34]
640033f4:	push   edx
640033f5:	push   eax
640033f6:	call   DWORD PTR ds:0x640211d0
640033fc:	mov    eax,DWORD PTR [esp+0x40]
64003400:	mov    esi,DWORD PTR [esp+0x34]
64003404:	mov    edi,DWORD PTR [esp+0x38]
64003408:	mov    ebx,DWORD PTR [esp+0x3c]
6400340c:	mov    DWORD PTR [esp+0x30],eax
64003410:	mov    BYTE PTR [esp+0x858],0x0
64003418:	mov    eax,DWORD PTR [esp+0x14]
6400341c:	add    eax,0xfffffff0
6400341f:	lea    ecx,[eax+0xc]
64003422:	or     edx,0xffffffff
64003425:	lock xadd DWORD PTR [ecx],edx
64003429:	dec    edx
6400342a:	test   edx,edx
6400342c:	jg     0x64003438
6400342e:	mov    ecx,DWORD PTR [eax]
64003430:	mov    edx,DWORD PTR [ecx]
64003432:	push   eax
64003433:	mov    eax,DWORD PTR [edx+0x4]
64003436:	call   eax
64003438:	mov    eax,DWORD PTR [esp+0x18]
6400343c:	test   eax,eax
6400343e:	je     0x64003447
64003440:	push   eax
64003441:	call   DWORD PTR ds:0x64021000
64003447:	mov    eax,DWORD PTR [ebp+0x8]
6400344a:	mov    ecx,DWORD PTR [esp+0x30]
6400344e:	mov    DWORD PTR [eax],esi
64003450:	mov    DWORD PTR [eax+0x4],edi
64003453:	mov    DWORD PTR [eax+0x8],ebx
64003456:	mov    DWORD PTR [eax+0xc],ecx
64003459:	mov    ecx,DWORD PTR [esp+0x850]
64003460:	mov    DWORD PTR fs:0x0,ecx
64003467:	pop    ecx
64003468:	pop    edi
64003469:	pop    esi
6400346a:	pop    ebx
6400346b:	mov    ecx,DWORD PTR [esp+0x838]
64003472:	xor    ecx,esp
64003474:	call   0x6400f34e
64003479:	mov    esp,ebp
6400347b:	pop    ebp
6400347c:	ret    
6400347d:	int3   
6400347e:	int3   
6400347f:	int3   
64003480:	push   ebp
64003481:	mov    ebp,esp
64003483:	push   0xffffffff
64003485:	push   0x6401fb70
6400348a:	mov    eax,fs:0x0
64003490:	push   eax
64003491:	sub    esp,0x15c
64003497:	mov    eax,ds:0x64028038
6400349c:	xor    eax,ebp
6400349e:	mov    DWORD PTR [ebp-0x14],eax
640034a1:	push   ebx
640034a2:	push   esi
640034a3:	push   edi
640034a4:	push   eax
640034a5:	lea    eax,[ebp-0xc]
640034a8:	mov    fs:0x0,eax
640034ae:	mov    DWORD PTR [ebp-0x10],esp
640034b1:	mov    edi,DWORD PTR [ebp+0x8]
640034b4:	push   0xa0
640034b9:	lea    eax,[ebp-0x154]
640034bf:	push   eax
640034c0:	push   0x7d0
640034c5:	push   0x64000000
640034ca:	mov    DWORD PTR [ebp-0x4],0x0
640034d1:	call   DWORD PTR ds:0x640211a4
640034d7:	test   eax,eax
640034d9:	je     0x64003520
640034db:	push   ecx
640034dc:	lea    edx,[ebp-0x154]
640034e2:	mov    ecx,esp
640034e4:	mov    DWORD PTR [ebp-0x158],esp
640034ea:	push   edx
640034eb:	call   0x640017e0
640034f0:	lea    esi,[ebp-0x168]
640034f6:	call   0x64002780
640034fb:	mov    ecx,DWORD PTR [eax]
640034fd:	mov    DWORD PTR [edi],ecx
640034ff:	mov    edx,DWORD PTR [eax+0x4]
64003502:	mov    DWORD PTR [edi+0x4],edx
64003505:	mov    ecx,DWORD PTR [eax+0x8]
64003508:	mov    DWORD PTR [edi+0x8],ecx
6400350b:	mov    edx,DWORD PTR [eax+0xc]
6400350e:	add    esp,0x4
64003511:	mov    DWORD PTR [edi+0xc],edx
64003514:	mov    al,0x1
64003516:	jmp    0x64003543
64003518:	mov    eax,0x6400351e
6400351d:	ret    
6400351e:	jmp    0x64003541
64003520:	mov    eax,ds:0x64021adc
64003525:	mov    DWORD PTR [edi],eax
64003527:	mov    ecx,DWORD PTR ds:0x64021ae0
6400352d:	mov    DWORD PTR [edi+0x4],ecx
64003530:	mov    edx,DWORD PTR ds:0x64021ae4
64003536:	mov    DWORD PTR [edi+0x8],edx
64003539:	mov    eax,ds:0x64021ae8
6400353e:	mov    DWORD PTR [edi+0xc],eax
64003541:	xor    al,al
64003543:	mov    ecx,DWORD PTR [ebp-0xc]
64003546:	mov    DWORD PTR fs:0x0,ecx
6400354d:	pop    ecx
6400354e:	pop    edi
6400354f:	pop    esi
64003550:	pop    ebx
64003551:	mov    ecx,DWORD PTR [ebp-0x14]
64003554:	xor    ecx,ebp
64003556:	call   0x6400f34e
6400355b:	mov    esp,ebp
6400355d:	pop    ebp
6400355e:	ret    
6400355f:	int3   
64003560:	sub    esp,0x118
64003566:	mov    eax,ds:0x64028038
6400356b:	xor    eax,esp
6400356d:	mov    DWORD PTR [esp+0x114],eax
64003574:	push   esi
64003575:	push   0x110
6400357a:	lea    eax,[esp+0xc]
6400357e:	push   0x0
64003580:	push   eax
64003581:	call   0x6400fa50
64003586:	mov    edx,DWORD PTR ds:0x640294e0
6400358c:	mov    eax,DWORD PTR [edx+0xc]
6400358f:	add    esp,0xc
64003592:	mov    ecx,0x640294e0
64003597:	mov    DWORD PTR [esp+0x4],0x114
6400359f:	call   eax
640035a1:	lea    ecx,[esp+0x4]
640035a5:	mov    esi,eax
640035a7:	push   ecx
640035a8:	add    esi,0x10
640035ab:	call   DWORD PTR ds:0x64021068
640035b1:	test   eax,eax
640035b3:	je     0x640035f5
640035b5:	mov    edx,DWORD PTR [esp+0x8]
640035b9:	mov    eax,DWORD PTR [esp+0xc]
640035bd:	mov    DWORD PTR [edi],edx
640035bf:	mov    DWORD PTR [ebx],eax
640035c1:	lea    eax,[esi-0x10]
640035c4:	lea    ecx,[eax+0xc]
640035c7:	or     edx,0xffffffff
640035ca:	lock xadd DWORD PTR [ecx],edx
640035ce:	dec    edx
640035cf:	test   edx,edx
640035d1:	jg     0x640035dd
640035d3:	mov    ecx,DWORD PTR [eax]
640035d5:	mov    edx,DWORD PTR [ecx]
640035d7:	push   eax
640035d8:	mov    eax,DWORD PTR [edx+0x4]
640035db:	call   eax
640035dd:	mov    al,0x1
640035df:	pop    esi
640035e0:	mov    ecx,DWORD PTR [esp+0x114]
640035e7:	xor    ecx,esp
640035e9:	call   0x6400f34e
640035ee:	add    esp,0x118
640035f4:	ret    
640035f5:	lea    eax,[esi-0x10]
640035f8:	lea    ecx,[eax+0xc]
640035fb:	or     edx,0xffffffff
640035fe:	lock xadd DWORD PTR [ecx],edx
64003602:	dec    edx
64003603:	test   edx,edx
64003605:	jg     0x64003611
64003607:	mov    ecx,DWORD PTR [eax]
64003609:	mov    edx,DWORD PTR [ecx]
6400360b:	push   eax
6400360c:	mov    eax,DWORD PTR [edx+0x4]
6400360f:	call   eax
64003611:	mov    ecx,DWORD PTR [esp+0x118]
64003618:	pop    esi
64003619:	xor    ecx,esp
6400361b:	xor    al,al
6400361d:	call   0x6400f34e
64003622:	add    esp,0x118
64003628:	ret    
64003629:	int3   
6400362a:	int3   
6400362b:	int3   
6400362c:	int3   
6400362d:	int3   
6400362e:	int3   
6400362f:	int3   
64003630:	push   ebp
64003631:	mov    ebp,esp
64003633:	and    esp,0xfffffff8
64003636:	push   0xffffffff
64003638:	push   0x6401fb48
6400363d:	mov    eax,fs:0x0
64003643:	push   eax
64003644:	sub    esp,0x14
64003647:	push   ebx
64003648:	push   edi
64003649:	mov    eax,ds:0x64028038
6400364e:	xor    eax,esp
64003650:	push   eax
64003651:	lea    eax,[esp+0x20]
64003655:	mov    fs:0x0,eax
6400365b:	cmp    DWORD PTR ds:0x6402c2e0,0x0
64003662:	jne    0x64003715
64003668:	push   0x640238b8
6400366d:	push   0x12
6400366f:	push   0x640238e8
64003674:	mov    DWORD PTR ds:0x6402c2e0,0xc
6400367e:	mov    DWORD PTR ds:0x6402c2e8,0x0
64003688:	call   0x64003b70
6400368d:	add    esp,0xc
64003690:	push   eax
64003691:	lea    ecx,[esp+0x14]
64003695:	call   0x640017e0
6400369a:	lea    ebx,[esp+0x18]
6400369e:	lea    edi,[esp+0x14]
640036a2:	mov    DWORD PTR [esp+0x28],0x0
640036aa:	call   0x64003560
640036af:	test   al,al
640036b1:	je     0x640036d8
640036b3:	cmp    DWORD PTR [esp+0x14],0x6
640036b8:	jb     0x640036d8
640036ba:	push   0x64023910
640036bf:	push   0xf
640036c1:	push   0x64023944
640036c6:	call   0x64003b70
640036cb:	add    esp,0xc
640036ce:	push   eax
640036cf:	lea    ecx,[esp+0x14]
640036d3:	call   0x64003930
640036d8:	mov    eax,DWORD PTR [esp+0x10]
640036dc:	push   0x0
640036de:	push   0x6402c2e4
640036e3:	push   0x1
640036e5:	push   eax
640036e6:	call   0x6400b8c0
640036eb:	call   eax
640036ed:	mov    DWORD PTR [esp+0x28],0xffffffff
640036f5:	mov    eax,DWORD PTR [esp+0x10]
640036f9:	add    eax,0xfffffff0
640036fc:	lea    ecx,[eax+0xc]
640036ff:	or     edx,0xffffffff
64003702:	lock xadd DWORD PTR [ecx],edx
64003706:	dec    edx
64003707:	test   edx,edx
64003709:	jg     0x64003715
6400370b:	mov    ecx,DWORD PTR [eax]
6400370d:	mov    edx,DWORD PTR [ecx]
6400370f:	push   eax
64003710:	mov    eax,DWORD PTR [edx+0x4]
64003713:	call   eax
64003715:	mov    eax,0x6402c2e0
6400371a:	mov    ecx,DWORD PTR [esp+0x20]
6400371e:	mov    DWORD PTR fs:0x0,ecx
64003725:	pop    ecx
64003726:	pop    edi
64003727:	pop    ebx
64003728:	mov    esp,ebp
6400372a:	pop    ebp
6400372b:	ret    
6400372c:	int3   
6400372d:	int3   
6400372e:	int3   
6400372f:	int3   
64003730:	push   0xffffffff
64003732:	push   0x6401fb18
64003737:	mov    eax,fs:0x0
6400373d:	push   eax
6400373e:	push   ecx
6400373f:	push   esi
64003740:	push   edi
64003741:	mov    eax,ds:0x64028038
64003746:	xor    eax,esp
64003748:	push   eax
64003749:	lea    eax,[esp+0x10]
6400374d:	mov    fs:0x0,eax
64003753:	mov    esi,ecx
64003755:	mov    DWORD PTR [esp+0xc],esi
64003759:	mov    eax,ds:0x640294e0
6400375e:	mov    edx,DWORD PTR [eax+0xc]
64003761:	mov    ecx,0x640294e0
64003766:	call   edx
64003768:	add    eax,0x10
6400376b:	mov    DWORD PTR [esi],eax
6400376d:	mov    eax,DWORD PTR [esp+0x20]
64003771:	test   eax,eax
64003773:	mov    DWORD PTR [esp+0x18],0x0
6400377b:	je     0x640037a1
6400377d:	test   eax,0xffff0000
64003782:	jne    0x640037a1
64003784:	movzx  edi,ax
64003787:	push   0x0
64003789:	push   edi
6400378a:	call   0x64001130
6400378f:	add    esp,0x8
64003792:	test   eax,eax
64003794:	je     0x640037a9
64003796:	push   edi
64003797:	push   eax
64003798:	mov    ecx,esi
6400379a:	call   0x64001e20
6400379f:	jmp    0x640037a9
640037a1:	push   eax
640037a2:	mov    ecx,esi
640037a4:	call   0x64001c80
640037a9:	mov    eax,esi
640037ab:	mov    ecx,DWORD PTR [esp+0x10]
640037af:	mov    DWORD PTR fs:0x0,ecx
640037b6:	pop    ecx
640037b7:	pop    edi
640037b8:	pop    esi
640037b9:	add    esp,0x10
640037bc:	ret    0x4
640037bf:	int3   
640037c0:	mov    eax,DWORD PTR [edi]
640037c2:	mov    edx,DWORD PTR [eax-0x8]
640037c5:	push   ebx
640037c6:	mov    ebx,DWORD PTR [eax-0xc]
640037c9:	push   esi
640037ca:	mov    ecx,0x1
640037cf:	sub    ecx,DWORD PTR [eax-0x4]
640037d2:	lea    esi,[ebx+0x1]
640037d5:	sub    edx,esi
640037d7:	or     ecx,edx
640037d9:	jge    0x640037e3
640037db:	push   esi
640037dc:	mov    ecx,edi
640037de:	call   0x64002280
640037e3:	test   esi,esi
640037e5:	mov    eax,DWORD PTR [edi]
640037e7:	mov    WORD PTR [eax+ebx*2],0x5c
640037ed:	jl     0x64003806
640037ef:	mov    eax,DWORD PTR [edi]
640037f1:	cmp    esi,DWORD PTR [eax-0x8]
640037f4:	jg     0x64003806
640037f6:	mov    DWORD PTR [eax-0xc],esi
640037f9:	mov    ecx,DWORD PTR [edi]
640037fb:	mov    WORD PTR [ecx+esi*2],0x0
64003801:	pop    esi
64003802:	mov    eax,edi
64003804:	pop    ebx
64003805:	ret    
64003806:	push   0x80070057
6400380b:	call   0x64001000
64003810:	int3   
64003811:	int3   
64003812:	int3   
64003813:	int3   
64003814:	int3   
64003815:	int3   
64003816:	int3   
64003817:	int3   
64003818:	int3   
64003819:	int3   
6400381a:	int3   
6400381b:	int3   
6400381c:	int3   
6400381d:	int3   
6400381e:	int3   
6400381f:	int3   
64003820:	push   esi
64003821:	push   edi
64003822:	mov    edi,DWORD PTR [ebx]
64003824:	mov    ecx,edi
64003826:	movzx  eax,WORD PTR [ecx]
64003829:	xor    edx,edx
6400382b:	test   ax,ax
6400382e:	je     0x64003885
64003830:	cmp    ax,0x7d
64003834:	jne    0x6400383e
64003836:	test   edx,edx
64003838:	jne    0x64003840
6400383a:	mov    edx,ecx
6400383c:	jmp    0x64003840
6400383e:	xor    edx,edx
64003840:	movzx  eax,WORD PTR [ecx+0x2]
64003844:	add    ecx,0x2
64003847:	test   ax,ax
6400384a:	jne    0x64003830
6400384c:	test   edx,edx
6400384e:	je     0x64003885
64003850:	mov    ecx,DWORD PTR [edi-0x8]
64003853:	sub    edx,edi
64003855:	sar    edx,1
64003857:	mov    eax,0x1
6400385c:	sub    eax,DWORD PTR [edi-0x4]
6400385f:	mov    esi,edx
64003861:	sub    ecx,esi
64003863:	or     eax,ecx
64003865:	jge    0x6400386f
64003867:	push   esi
64003868:	mov    ecx,ebx
6400386a:	call   0x64002280
6400386f:	test   esi,esi
64003871:	jl     0x6400388a
64003873:	mov    eax,DWORD PTR [ebx]
64003875:	cmp    esi,DWORD PTR [eax-0x8]
64003878:	jg     0x6400388a
6400387a:	mov    DWORD PTR [eax-0xc],esi
6400387d:	mov    edx,DWORD PTR [ebx]
6400387f:	mov    WORD PTR [edx+esi*2],0x0
64003885:	pop    edi
64003886:	mov    eax,ebx
64003888:	pop    esi
64003889:	ret    
6400388a:	push   0x80070057
6400388f:	call   0x64001000
64003894:	int3   
64003895:	int3   
64003896:	int3   
64003897:	int3   
64003898:	int3   
64003899:	int3   
6400389a:	int3   
6400389b:	int3   
6400389c:	int3   
6400389d:	int3   
6400389e:	int3   
6400389f:	int3   
640038a0:	mov    ecx,DWORD PTR [ebx]
640038a2:	mov    eax,ecx
640038a4:	cmp    WORD PTR [eax],0x7b
640038a8:	jne    0x640038b9
640038aa:	lea    ebx,[ebx+0x0]
640038b0:	add    eax,0x2
640038b3:	cmp    WORD PTR [eax],0x7b
640038b7:	je     0x640038b0
640038b9:	cmp    eax,ecx
640038bb:	push   esi
640038bc:	je     0x64003918
640038be:	sub    eax,ecx
640038c0:	sar    eax,1
640038c2:	push   edi
640038c3:	mov    edx,0x1
640038c8:	sub    edx,DWORD PTR [ecx-0x4]
640038cb:	mov    edi,eax
640038cd:	mov    eax,DWORD PTR [ecx-0xc]
640038d0:	mov    ecx,DWORD PTR [ecx-0x8]
640038d3:	sub    ecx,eax
640038d5:	or     edx,ecx
640038d7:	jge    0x640038e1
640038d9:	push   eax
640038da:	mov    ecx,ebx
640038dc:	call   0x64002280
640038e1:	mov    eax,DWORD PTR [ebx]
640038e3:	mov    esi,DWORD PTR [eax-0xc]
640038e6:	sub    esi,edi
640038e8:	lea    ecx,[esi+esi*1+0x2]
640038ec:	push   ecx
640038ed:	lea    edx,[eax+edi*2]
640038f0:	push   edx
640038f1:	push   ecx
640038f2:	push   eax
640038f3:	call   0x6400ed25
640038f8:	push   eax
640038f9:	call   0x64001020
640038fe:	add    esp,0x14
64003901:	test   esi,esi
64003903:	pop    edi
64003904:	jl     0x6400391c
64003906:	mov    eax,DWORD PTR [ebx]
64003908:	cmp    esi,DWORD PTR [eax-0x8]
6400390b:	jg     0x6400391c
6400390d:	mov    DWORD PTR [eax-0xc],esi
64003910:	mov    eax,DWORD PTR [ebx]
64003912:	mov    WORD PTR [eax+esi*2],0x0
64003918:	mov    eax,ebx
6400391a:	pop    esi
6400391b:	ret    
6400391c:	push   0x80070057
64003921:	call   0x64001000
64003926:	int3   
64003927:	int3   
64003928:	int3   
64003929:	int3   
6400392a:	int3   
6400392b:	int3   
6400392c:	int3   
6400392d:	int3   
6400392e:	int3   
6400392f:	int3   
64003930:	push   esi
64003931:	mov    esi,DWORD PTR [esp+0x8]
64003935:	test   esi,esi
64003937:	jne    0x64003946
64003939:	xor    eax,eax
6400393b:	push   eax
6400393c:	push   esi
6400393d:	call   0x64001ef0
64003942:	pop    esi
64003943:	ret    0x4
64003946:	mov    eax,esi
64003948:	push   edi
64003949:	lea    edi,[eax+0x2]
6400394c:	lea    esp,[esp+0x0]
64003950:	mov    dx,WORD PTR [eax]
64003953:	add    eax,0x2
64003956:	test   dx,dx
64003959:	jne    0x64003950
6400395b:	sub    eax,edi
6400395d:	pop    edi
6400395e:	sar    eax,1
64003960:	push   eax
64003961:	push   esi
64003962:	call   0x64001ef0
64003967:	pop    esi
64003968:	ret    0x4
6400396b:	int3   
6400396c:	int3   
6400396d:	int3   
6400396e:	int3   
6400396f:	int3   
64003970:	push   ebp
64003971:	mov    ebp,esp
64003973:	and    esp,0xfffffff8
64003976:	push   0xffffffff
64003978:	push   0x6401f130
6400397d:	mov    eax,fs:0x0
64003983:	push   eax
64003984:	sub    esp,0x50
64003987:	mov    eax,ds:0x64028038
6400398c:	xor    eax,esp
6400398e:	mov    DWORD PTR [esp+0x48],eax
64003992:	push   ebx
64003993:	push   esi
64003994:	push   edi
64003995:	mov    eax,ds:0x64028038
6400399a:	xor    eax,esp
6400399c:	push   eax
6400399d:	lea    eax,[esp+0x60]
640039a1:	mov    fs:0x0,eax
640039a7:	mov    eax,ds:0x6402c208
640039ac:	mov    esi,DWORD PTR [ebp+0x8]
640039af:	xor    edi,edi
640039b1:	cmp    eax,edi
640039b3:	mov    DWORD PTR [esp+0x1c],esi
640039b7:	jne    0x640039c7
640039b9:	push   edi
640039ba:	push   edi
640039bb:	push   edi
640039bc:	call   DWORD PTR ds:0x64021060
640039c2:	mov    ds:0x6402c208,eax
640039c7:	push   0xffffffff
640039c9:	push   eax
640039ca:	call   DWORD PTR ds:0x6402105c
640039d0:	test   eax,eax
640039d2:	je     0x640039db
640039d4:	mov    eax,esi
640039d6:	jmp    0x64003b47
640039db:	mov    eax,DWORD PTR [ebp+0xc]
640039de:	push   eax
640039df:	push   esi
640039e0:	lea    ecx,[esp+0x28]
640039e4:	mov    DWORD PTR [esp+0x40],0xf
640039ec:	mov    DWORD PTR [esp+0x3c],edi
640039f0:	mov    BYTE PTR [esp+0x2c],0x0
640039f5:	call   0x64001bb0
640039fa:	lea    ecx,[esp+0x20]
640039fe:	push   ecx
640039ff:	lea    edx,[esp+0x18]
64003a03:	push   edx
64003a04:	mov    DWORD PTR [esp+0x70],edi
64003a08:	call   0x64003e40
64003a0d:	mov    ecx,eax
64003a0f:	call   0x64004260
64003a14:	call   0x64003e40
64003a19:	mov    esi,DWORD PTR [esp+0x14]
64003a1d:	cmp    esi,edi
64003a1f:	mov    ebx,DWORD PTR [eax+0x4]
64003a22:	je     0x64003a28
64003a24:	cmp    esi,eax
64003a26:	je     0x64003a2d
64003a28:	call   0x6400eeaa
64003a2d:	mov    edi,DWORD PTR [esp+0x18]
64003a31:	cmp    edi,ebx
64003a33:	jne    0x64003aaa
64003a35:	sub    esp,0x1c
64003a38:	mov    ecx,esp
64003a3a:	mov    DWORD PTR [esp+0x30],esp
64003a3e:	push   0xffffffff
64003a40:	push   0x0
64003a42:	lea    eax,[esp+0x44]
64003a46:	mov    DWORD PTR [ecx+0x18],0xf
64003a4d:	mov    DWORD PTR [ecx+0x14],0x0
64003a54:	push   eax
64003a55:	mov    BYTE PTR [ecx+0x4],0x0
64003a59:	call   0x64001ad0
64003a5e:	lea    ecx,[esp+0x58]
64003a62:	push   ecx
64003a63:	call   0x64003ed0
64003a68:	add    esp,0x20
64003a6b:	lea    edx,[esp+0x20]
64003a6f:	push   edx
64003a70:	mov    BYTE PTR [esp+0x6c],0x1
64003a75:	call   0x64003e40
64003a7a:	mov    ecx,eax
64003a7c:	call   0x64004100
64003a81:	push   0xffffffff
64003a83:	push   0x0
64003a85:	lea    ecx,[esp+0x44]
64003a89:	push   ecx
64003a8a:	mov    ecx,eax
64003a8c:	call   0x64001ad0
64003a91:	mov    BYTE PTR [esp+0x68],0x0
64003a96:	cmp    DWORD PTR [esp+0x54],0x10
64003a9b:	jb     0x64003aaa
64003a9d:	mov    edx,DWORD PTR [esp+0x40]
64003aa1:	push   edx
64003aa2:	call   0x6400eb52
64003aa7:	add    esp,0x4
64003aaa:	mov    eax,DWORD PTR [ebp+0x10]
64003aad:	movzx  ecx,BYTE PTR [eax]
64003ab0:	cmp    ecx,0x100
64003ab6:	jge    0x64003ad3
64003ab8:	lea    edx,[esp+0x20]
64003abc:	push   edx
64003abd:	lea    eax,[esp+0x18]
64003ac1:	push   eax
64003ac2:	call   0x64003e40
64003ac7:	mov    ecx,eax
64003ac9:	call   0x64004260
64003ace:	mov    esi,DWORD PTR [eax]
64003ad0:	mov    edi,DWORD PTR [eax+0x4]
64003ad3:	call   0x64003e40
64003ad8:	test   esi,esi
64003ada:	mov    ebx,DWORD PTR [eax+0x4]
64003add:	je     0x64003ae3
64003adf:	cmp    esi,eax
64003ae1:	je     0x64003ae8
64003ae3:	call   0x6400eeaa
64003ae8:	cmp    edi,ebx
64003aea:	je     0x64003b0f
64003aec:	test   esi,esi
64003aee:	jne    0x64003af5
64003af0:	call   0x6400eeaa
64003af5:	cmp    edi,DWORD PTR [esi+0x4]
64003af8:	jne    0x64003aff
64003afa:	call   0x6400eeaa
64003aff:	cmp    DWORD PTR [edi+0x40],0x10
64003b03:	jb     0x64003b0a
64003b05:	mov    edi,DWORD PTR [edi+0x2c]
64003b08:	jmp    0x64003b13
64003b0a:	add    edi,0x2c
64003b0d:	jmp    0x64003b13
64003b0f:	mov    edi,DWORD PTR [esp+0x1c]
64003b13:	mov    eax,ds:0x6402c208
64003b18:	test   eax,eax
64003b1a:	jne    0x64003b2a
64003b1c:	push   eax
64003b1d:	push   eax
64003b1e:	push   eax
64003b1f:	call   DWORD PTR ds:0x64021060
64003b25:	mov    ds:0x6402c208,eax
64003b2a:	push   eax
64003b2b:	call   DWORD PTR ds:0x64021074
64003b31:	cmp    DWORD PTR [esp+0x38],0x10
64003b36:	jb     0x64003b45
64003b38:	mov    ecx,DWORD PTR [esp+0x24]
64003b3c:	push   ecx
64003b3d:	call   0x6400eb52
64003b42:	add    esp,0x4
64003b45:	mov    eax,edi
64003b47:	mov    ecx,DWORD PTR [esp+0x60]
64003b4b:	mov    DWORD PTR fs:0x0,ecx
64003b52:	pop    ecx
64003b53:	pop    edi
64003b54:	pop    esi
64003b55:	pop    ebx
64003b56:	mov    ecx,DWORD PTR [esp+0x48]
64003b5a:	xor    ecx,esp
64003b5c:	call   0x6400f34e
64003b61:	mov    esp,ebp
64003b63:	pop    ebp
64003b64:	ret    
64003b65:	int3   
64003b66:	int3   
64003b67:	int3   
64003b68:	int3   
64003b69:	int3   
64003b6a:	int3   
64003b6b:	int3   
64003b6c:	int3   
64003b6d:	int3   
64003b6e:	int3   
64003b6f:	int3   
64003b70:	push   ebp
64003b71:	mov    ebp,esp
64003b73:	and    esp,0xfffffff8
64003b76:	push   0xffffffff
64003b78:	push   0x6401f0f0
64003b7d:	mov    eax,fs:0x0
64003b83:	push   eax
64003b84:	sub    esp,0x50
64003b87:	mov    eax,ds:0x64028038
64003b8c:	xor    eax,esp
64003b8e:	mov    DWORD PTR [esp+0x48],eax
64003b92:	push   ebx
64003b93:	push   esi
64003b94:	push   edi
64003b95:	mov    eax,ds:0x64028038
64003b9a:	xor    eax,esp
64003b9c:	push   eax
64003b9d:	lea    eax,[esp+0x60]
64003ba1:	mov    fs:0x0,eax
64003ba7:	mov    eax,ds:0x6402c208
64003bac:	mov    esi,DWORD PTR [ebp+0x8]
64003baf:	xor    edi,edi
64003bb1:	cmp    eax,edi
64003bb3:	mov    DWORD PTR [esp+0x1c],esi
64003bb7:	jne    0x64003bc7
64003bb9:	push   edi
64003bba:	push   edi
64003bbb:	push   edi
64003bbc:	call   DWORD PTR ds:0x64021060
64003bc2:	mov    ds:0x6402c208,eax
64003bc7:	push   0xffffffff
64003bc9:	push   eax
64003bca:	call   DWORD PTR ds:0x6402105c
64003bd0:	test   eax,eax
64003bd2:	je     0x64003bdb
64003bd4:	mov    eax,esi
64003bd6:	jmp    0x64003d42
64003bdb:	mov    eax,DWORD PTR [ebp+0xc]
64003bde:	push   eax
64003bdf:	push   esi
64003be0:	lea    ecx,[esp+0x28]
64003be4:	mov    DWORD PTR [esp+0x40],0x7
64003bec:	mov    DWORD PTR [esp+0x3c],edi
64003bf0:	mov    WORD PTR [esp+0x2c],di
64003bf5:	call   0x64004990
64003bfa:	lea    ecx,[esp+0x20]
64003bfe:	push   ecx
64003bff:	lea    edx,[esp+0x18]
64003c03:	push   edx
64003c04:	mov    DWORD PTR [esp+0x70],edi
64003c08:	call   0x64003fa0
64003c0d:	mov    ecx,eax
64003c0f:	call   0x640044a0
64003c14:	call   0x64003fa0
64003c19:	mov    esi,DWORD PTR [esp+0x14]
64003c1d:	cmp    esi,edi
64003c1f:	mov    ebx,DWORD PTR [eax+0x4]
64003c22:	je     0x64003c28
64003c24:	cmp    esi,eax
64003c26:	je     0x64003c2d
64003c28:	call   0x6400eeaa
64003c2d:	mov    edi,DWORD PTR [esp+0x18]
64003c31:	cmp    edi,ebx
64003c33:	jne    0x64003ca5
64003c35:	sub    esp,0x1c
64003c38:	mov    ecx,esp
64003c3a:	mov    DWORD PTR [esp+0x30],esp
64003c3e:	xor    ebx,ebx
64003c40:	push   0xffffffff
64003c42:	push   ebx
64003c43:	lea    eax,[esp+0x44]
64003c47:	mov    DWORD PTR [ecx+0x18],0x7
64003c4e:	mov    DWORD PTR [ecx+0x14],ebx
64003c51:	push   eax
64003c52:	mov    WORD PTR [ecx+0x4],bx
64003c56:	call   0x640048a0
64003c5b:	lea    ecx,[esp+0x58]
64003c5f:	push   ecx
64003c60:	call   0x64004030
64003c65:	add    esp,0x20
64003c68:	lea    edx,[esp+0x20]
64003c6c:	push   edx
64003c6d:	mov    BYTE PTR [esp+0x6c],0x1
64003c72:	call   0x64003fa0
64003c77:	mov    ecx,eax
64003c79:	call   0x64004340
64003c7e:	push   0xffffffff
64003c80:	push   ebx
64003c81:	lea    ecx,[esp+0x44]
64003c85:	push   ecx
64003c86:	mov    ecx,eax
64003c88:	call   0x640048a0
64003c8d:	mov    BYTE PTR [esp+0x68],bl
64003c91:	cmp    DWORD PTR [esp+0x54],0x8
64003c96:	jb     0x64003ca5
64003c98:	mov    edx,DWORD PTR [esp+0x40]
64003c9c:	push   edx
64003c9d:	call   0x6400eb52
64003ca2:	add    esp,0x4
64003ca5:	mov    eax,DWORD PTR [ebp+0x10]
64003ca8:	movzx  ecx,BYTE PTR [eax]
64003cab:	cmp    ecx,0x100
64003cb1:	jge    0x64003cce
64003cb3:	lea    edx,[esp+0x20]
64003cb7:	push   edx
64003cb8:	lea    eax,[esp+0x18]
64003cbc:	push   eax
64003cbd:	call   0x64003fa0
64003cc2:	mov    ecx,eax
64003cc4:	call   0x640044a0
64003cc9:	mov    esi,DWORD PTR [eax]
64003ccb:	mov    edi,DWORD PTR [eax+0x4]
64003cce:	call   0x64003fa0
64003cd3:	test   esi,esi
64003cd5:	mov    ebx,DWORD PTR [eax+0x4]
64003cd8:	je     0x64003cde
64003cda:	cmp    esi,eax
64003cdc:	je     0x64003ce3
64003cde:	call   0x6400eeaa
64003ce3:	cmp    edi,ebx
64003ce5:	je     0x64003d0a
64003ce7:	test   esi,esi
64003ce9:	jne    0x64003cf0
64003ceb:	call   0x6400eeaa
64003cf0:	cmp    edi,DWORD PTR [esi+0x4]
64003cf3:	jne    0x64003cfa
64003cf5:	call   0x6400eeaa
64003cfa:	cmp    DWORD PTR [edi+0x40],0x8
64003cfe:	jb     0x64003d05
64003d00:	mov    edi,DWORD PTR [edi+0x2c]
64003d03:	jmp    0x64003d0e
64003d05:	add    edi,0x2c
64003d08:	jmp    0x64003d0e
64003d0a:	mov    edi,DWORD PTR [esp+0x1c]
64003d0e:	mov    eax,ds:0x6402c208
64003d13:	test   eax,eax
64003d15:	jne    0x64003d25
64003d17:	push   eax
64003d18:	push   eax
64003d19:	push   eax
64003d1a:	call   DWORD PTR ds:0x64021060
64003d20:	mov    ds:0x6402c208,eax
64003d25:	push   eax
64003d26:	call   DWORD PTR ds:0x64021074
64003d2c:	cmp    DWORD PTR [esp+0x38],0x8
64003d31:	jb     0x64003d40
64003d33:	mov    ecx,DWORD PTR [esp+0x24]
64003d37:	push   ecx
64003d38:	call   0x6400eb52
64003d3d:	add    esp,0x4
64003d40:	mov    eax,edi
64003d42:	mov    ecx,DWORD PTR [esp+0x60]
64003d46:	mov    DWORD PTR fs:0x0,ecx
64003d4d:	pop    ecx
64003d4e:	pop    edi
64003d4f:	pop    esi
64003d50:	pop    ebx
64003d51:	mov    ecx,DWORD PTR [esp+0x48]
64003d55:	xor    ecx,esp
64003d57:	call   0x6400f34e
64003d5c:	mov    esp,ebp
64003d5e:	pop    ebp
64003d5f:	ret    
64003d60:	mov    ecx,DWORD PTR [eax]
64003d62:	push   esi
64003d63:	mov    esi,DWORD PTR [edi]
64003d65:	lea    eax,[ecx-0x10]
64003d68:	sub    esi,0x10
64003d6b:	cmp    eax,esi
64003d6d:	je     0x64003dbd
64003d6f:	cmp    DWORD PTR [esi+0xc],0x0
64003d73:	push   ebx
64003d74:	lea    ebx,[esi+0xc]
64003d77:	jl     0x64003dac
64003d79:	mov    edx,DWORD PTR [eax]
64003d7b:	cmp    edx,DWORD PTR [esi]
64003d7d:	jne    0x64003dac
64003d7f:	push   ebp
64003d80:	push   eax
64003d81:	call   0x64001d20
64003d86:	mov    ebp,eax
64003d88:	add    esp,0x4
64003d8b:	or     eax,0xffffffff
64003d8e:	lock xadd DWORD PTR [ebx],eax
64003d92:	dec    eax
64003d93:	test   eax,eax
64003d95:	jg     0x64003da1
64003d97:	mov    ecx,DWORD PTR [esi]
64003d99:	mov    edx,DWORD PTR [ecx]
64003d9b:	mov    eax,DWORD PTR [edx+0x4]
64003d9e:	push   esi
64003d9f:	call   eax
64003da1:	add    ebp,0x10
64003da4:	mov    DWORD PTR [edi],ebp
64003da6:	pop    ebp
64003da7:	pop    ebx
64003da8:	mov    eax,edi
64003daa:	pop    esi
64003dab:	ret    
64003dac:	mov    edx,DWORD PTR [ecx-0xc]
64003daf:	push   edx
64003db0:	push   ecx
64003db1:	mov    ecx,edi
64003db3:	call   0x64001ff0
64003db8:	pop    ebx
64003db9:	mov    eax,edi
64003dbb:	pop    esi
64003dbc:	ret    
64003dbd:	mov    eax,edi
64003dbf:	pop    esi
64003dc0:	ret    
64003dc1:	int3   
64003dc2:	int3   
64003dc3:	int3   
64003dc4:	int3   
64003dc5:	int3   
64003dc6:	int3   
64003dc7:	int3   
64003dc8:	int3   
64003dc9:	int3   
64003dca:	int3   
64003dcb:	int3   
64003dcc:	int3   
64003dcd:	int3   
64003dce:	int3   
64003dcf:	int3   
64003dd0:	push   ebx
64003dd1:	push   ebp
64003dd2:	mov    ebp,DWORD PTR [esp+0xc]
64003dd6:	push   esi
64003dd7:	push   edi
64003dd8:	mov    edi,ecx
64003dda:	cmp    DWORD PTR [edi+0x14],ebp
64003ddd:	jae    0x64003de4
64003ddf:	call   0x6400eb0e
64003de4:	mov    eax,DWORD PTR [edi+0x14]
64003de7:	mov    esi,DWORD PTR [esp+0x18]
64003deb:	sub    eax,ebp
64003ded:	cmp    eax,esi
64003def:	jae    0x64003df3
64003df1:	mov    esi,eax
64003df3:	mov    ebx,DWORD PTR [esp+0x20]
64003df7:	cmp    esi,ebx
64003df9:	mov    eax,esi
64003dfb:	jb     0x64003dff
64003dfd:	mov    eax,ebx
64003dff:	cmp    DWORD PTR [edi+0x18],0x10
64003e03:	jb     0x64003e0a
64003e05:	mov    edi,DWORD PTR [edi+0x4]
64003e08:	jmp    0x64003e0d
64003e0a:	add    edi,0x4
64003e0d:	push   eax
64003e0e:	mov    eax,DWORD PTR [esp+0x20]
64003e12:	push   eax
64003e13:	add    edi,ebp
64003e15:	push   edi
64003e16:	call   0x640024a0
64003e1b:	add    esp,0xc
64003e1e:	test   eax,eax
64003e20:	jne    0x64003e37
64003e22:	cmp    esi,ebx
64003e24:	jae    0x64003e30
64003e26:	pop    edi
64003e27:	pop    esi
64003e28:	pop    ebp
64003e29:	or     eax,0xffffffff
64003e2c:	pop    ebx
64003e2d:	ret    0x10
64003e30:	xor    eax,eax
64003e32:	cmp    esi,ebx
64003e34:	setne  al
64003e37:	pop    edi
64003e38:	pop    esi
64003e39:	pop    ebp
64003e3a:	pop    ebx
64003e3b:	ret    0x10
64003e3e:	int3   
64003e3f:	int3   
64003e40:	push   0xffffffff
64003e42:	push   0x6401f0be
64003e47:	mov    eax,fs:0x0
64003e4d:	push   eax
64003e4e:	mov    eax,ds:0x64028038
64003e53:	xor    eax,esp
64003e55:	push   eax
64003e56:	lea    eax,[esp+0x4]
64003e5a:	mov    fs:0x0,eax
64003e60:	test   BYTE PTR ds:0x6402c2dc,0x1
64003e67:	jne    0x64003eb9
64003e69:	or     DWORD PTR ds:0x6402c2dc,0x1
64003e70:	mov    ecx,0x6402c2c0
64003e75:	mov    DWORD PTR [esp+0xc],0x0
64003e7d:	call   0x64006310
64003e82:	mov    ds:0x6402c2c4,eax
64003e87:	mov    BYTE PTR [eax+0x45],0x1
64003e8b:	mov    eax,ds:0x6402c2c4
64003e90:	mov    DWORD PTR [eax+0x4],eax
64003e93:	mov    eax,ds:0x6402c2c4
64003e98:	mov    DWORD PTR [eax],eax
64003e9a:	mov    eax,ds:0x6402c2c4
64003e9f:	mov    DWORD PTR [eax+0x8],eax
64003ea2:	push   0x64020180
64003ea7:	mov    DWORD PTR ds:0x6402c2c8,0x0
64003eb1:	call   0x6400f481
64003eb6:	add    esp,0x4
64003eb9:	mov    eax,0x6402c2c0
64003ebe:	mov    ecx,DWORD PTR [esp+0x4]
64003ec2:	mov    DWORD PTR fs:0x0,ecx
64003ec9:	pop    ecx
64003eca:	add    esp,0xc
64003ecd:	ret    
64003ece:	int3   
64003ecf:	int3   
64003ed0:	push   0xffffffff
64003ed2:	push   0x6401eda8
64003ed7:	mov    eax,fs:0x0
64003edd:	push   eax
64003ede:	push   ecx
64003edf:	push   ebx
64003ee0:	push   ebp
64003ee1:	push   esi
64003ee2:	push   edi
64003ee3:	mov    eax,ds:0x64028038
64003ee8:	xor    eax,esp
64003eea:	push   eax
64003eeb:	lea    eax,[esp+0x18]
64003eef:	mov    fs:0x0,eax
64003ef5:	mov    esi,DWORD PTR [esp+0x28]
64003ef9:	xor    eax,eax
64003efb:	mov    DWORD PTR [esp+0x14],eax
64003eff:	mov    DWORD PTR [esp+0x20],eax
64003f03:	push   0xffffffff
64003f05:	mov    DWORD PTR [esi+0x14],eax
64003f08:	mov    DWORD PTR [esi+0x18],0xf
64003f0f:	lea    ebp,[esi+0x4]
64003f12:	push   eax
64003f13:	mov    BYTE PTR [ebp+0x0],al
64003f16:	lea    eax,[esp+0x34]
64003f1a:	push   eax
64003f1b:	mov    ecx,esi
64003f1d:	call   0x64001ad0
64003f22:	mov    eax,DWORD PTR [esi+0x14]
64003f25:	mov    edi,0x1
64003f2a:	cmp    eax,edi
64003f2c:	jbe    0x64003f6d
64003f2e:	cmp    edi,eax
64003f30:	jbe    0x64003f37
64003f32:	call   0x6400eeaa
64003f37:	cmp    DWORD PTR [esi+0x18],0x10
64003f3b:	jb     0x64003f42
64003f3d:	mov    ebx,DWORD PTR [ebp+0x0]
64003f40:	jmp    0x64003f44
64003f42:	mov    ebx,ebp
64003f44:	lea    ecx,[edi-0x1]
64003f47:	cmp    ecx,DWORD PTR [esi+0x14]
64003f4a:	jbe    0x64003f51
64003f4c:	call   0x6400eeaa
64003f51:	cmp    DWORD PTR [esi+0x18],0x10
64003f55:	jb     0x64003f5c
64003f57:	mov    eax,DWORD PTR [ebp+0x0]
64003f5a:	jmp    0x64003f5e
64003f5c:	mov    eax,ebp
64003f5e:	mov    dl,BYTE PTR [eax+edi*1-0x1]
64003f62:	xor    BYTE PTR [ebx+edi*1],dl
64003f65:	add    edi,0x1
64003f68:	cmp    edi,DWORD PTR [esi+0x14]
64003f6b:	jb     0x64003f37
64003f6d:	cmp    DWORD PTR [esp+0x44],0x10
64003f72:	jb     0x64003f81
64003f74:	mov    eax,DWORD PTR [esp+0x30]
64003f78:	push   eax
64003f79:	call   0x6400eb52
64003f7e:	add    esp,0x4
64003f81:	mov    eax,esi
64003f83:	mov    ecx,DWORD PTR [esp+0x18]
64003f87:	mov    DWORD PTR fs:0x0,ecx
64003f8e:	pop    ecx
64003f8f:	pop    edi
64003f90:	pop    esi
64003f91:	pop    ebp
64003f92:	pop    ebx
64003f93:	add    esp,0x10
64003f96:	ret    
64003f97:	int3   
64003f98:	int3   
64003f99:	int3   
64003f9a:	int3   
64003f9b:	int3   
64003f9c:	int3   
64003f9d:	int3   
64003f9e:	int3   
64003f9f:	int3   
64003fa0:	push   0xffffffff
64003fa2:	push   0x6401f08e
64003fa7:	mov    eax,fs:0x0
64003fad:	push   eax
64003fae:	mov    eax,ds:0x64028038
64003fb3:	xor    eax,esp
64003fb5:	push   eax
64003fb6:	lea    eax,[esp+0x4]
64003fba:	mov    fs:0x0,eax
64003fc0:	test   BYTE PTR ds:0x6402c2d8,0x1
64003fc7:	jne    0x64004019
64003fc9:	or     DWORD PTR ds:0x6402c2d8,0x1
64003fd0:	mov    ecx,0x6402c2cc
64003fd5:	mov    DWORD PTR [esp+0xc],0x0
64003fdd:	call   0x64006310
64003fe2:	mov    ds:0x6402c2d0,eax
64003fe7:	mov    BYTE PTR [eax+0x45],0x1
64003feb:	mov    eax,ds:0x6402c2d0
64003ff0:	mov    DWORD PTR [eax+0x4],eax
64003ff3:	mov    eax,ds:0x6402c2d0
64003ff8:	mov    DWORD PTR [eax],eax
64003ffa:	mov    eax,ds:0x6402c2d0
64003fff:	mov    DWORD PTR [eax+0x8],eax
64004002:	push   0x64020130
64004007:	mov    DWORD PTR ds:0x6402c2d4,0x0
64004011:	call   0x6400f481
64004016:	add    esp,0x4
64004019:	mov    eax,0x6402c2cc
6400401e:	mov    ecx,DWORD PTR [esp+0x4]
64004022:	mov    DWORD PTR fs:0x0,ecx
64004029:	pop    ecx
6400402a:	add    esp,0xc
6400402d:	ret    
6400402e:	int3   
6400402f:	int3   
64004030:	push   0xffffffff
64004032:	push   0x6401ed78
64004037:	mov    eax,fs:0x0
6400403d:	push   eax
6400403e:	push   ecx
6400403f:	push   ebx
64004040:	push   ebp
64004041:	push   esi
64004042:	push   edi
64004043:	mov    eax,ds:0x64028038
64004048:	xor    eax,esp
6400404a:	push   eax
6400404b:	lea    eax,[esp+0x18]
6400404f:	mov    fs:0x0,eax
64004055:	mov    esi,DWORD PTR [esp+0x28]
64004059:	xor    eax,eax
6400405b:	mov    DWORD PTR [esp+0x14],eax
6400405f:	mov    DWORD PTR [esp+0x20],eax
64004063:	push   0xffffffff
64004065:	mov    DWORD PTR [esi+0x14],eax
64004068:	mov    DWORD PTR [esi+0x18],0x7
6400406f:	lea    ebp,[esi+0x4]
64004072:	push   eax
64004073:	mov    WORD PTR [ebp+0x0],ax
64004077:	lea    eax,[esp+0x34]
6400407b:	push   eax
6400407c:	mov    ecx,esi
6400407e:	call   0x640048a0
64004083:	mov    eax,DWORD PTR [esi+0x14]
64004086:	mov    edi,0x1
6400408b:	cmp    eax,edi
6400408d:	jbe    0x640040d0
6400408f:	cmp    edi,eax
64004091:	jbe    0x64004098
64004093:	call   0x6400eeaa
64004098:	cmp    DWORD PTR [esi+0x18],0x8
6400409c:	jb     0x640040a3
6400409e:	mov    ebx,DWORD PTR [ebp+0x0]
640040a1:	jmp    0x640040a5
640040a3:	mov    ebx,ebp
640040a5:	lea    ecx,[edi-0x1]
640040a8:	cmp    ecx,DWORD PTR [esi+0x14]
640040ab:	jbe    0x640040b2
640040ad:	call   0x6400eeaa
640040b2:	cmp    DWORD PTR [esi+0x18],0x8
640040b6:	jb     0x640040bd
640040b8:	mov    eax,DWORD PTR [ebp+0x0]
640040bb:	jmp    0x640040bf
640040bd:	mov    eax,ebp
640040bf:	mov    dx,WORD PTR [eax+edi*2-0x2]
640040c4:	xor    WORD PTR [ebx+edi*2],dx
640040c8:	add    edi,0x1
640040cb:	cmp    edi,DWORD PTR [esi+0x14]
640040ce:	jb     0x64004098
640040d0:	cmp    DWORD PTR [esp+0x44],0x8
640040d5:	jb     0x640040e4
640040d7:	mov    eax,DWORD PTR [esp+0x30]
640040db:	push   eax
640040dc:	call   0x6400eb52
640040e1:	add    esp,0x4
640040e4:	mov    eax,esi
640040e6:	mov    ecx,DWORD PTR [esp+0x18]
640040ea:	mov    DWORD PTR fs:0x0,ecx
640040f1:	pop    ecx
640040f2:	pop    edi
640040f3:	pop    esi
640040f4:	pop    ebp
640040f5:	pop    ebx
640040f6:	add    esp,0x10
640040f9:	ret    
640040fa:	int3   
640040fb:	int3   
640040fc:	int3   
640040fd:	int3   
640040fe:	int3   
640040ff:	int3   
64004100:	push   ebp
64004101:	mov    ebp,esp
64004103:	and    esp,0xfffffff8
64004106:	push   0xffffffff
64004108:	push   0x6401f060
6400410d:	mov    eax,fs:0x0
64004113:	push   eax
64004114:	sub    esp,0x60
64004117:	push   ebx
64004118:	push   esi
64004119:	push   edi
6400411a:	mov    eax,ds:0x64028038
6400411f:	xor    eax,esp
64004121:	push   eax
64004122:	lea    eax,[esp+0x70]
64004126:	mov    fs:0x0,eax
6400412c:	mov    edi,ecx
6400412e:	mov    ebx,DWORD PTR [ebp+0x8]
64004131:	push   ebx
64004132:	call   0x64005180
64004137:	test   edi,edi
64004139:	mov    esi,eax
6400413b:	jne    0x64004142
6400413d:	call   0x6400eeaa
64004142:	mov    eax,DWORD PTR [edi+0x4]
64004145:	cmp    esi,eax
64004147:	je     0x64004171
64004149:	cmp    DWORD PTR [esi+0x24],0x10
6400414d:	mov    ecx,DWORD PTR [esi+0x20]
64004150:	jb     0x64004157
64004152:	mov    eax,DWORD PTR [esi+0x10]
64004155:	jmp    0x6400415a
64004157:	lea    eax,[esi+0x10]
6400415a:	push   ecx
6400415b:	push   eax
6400415c:	mov    eax,DWORD PTR [ebx+0x14]
6400415f:	push   eax
64004160:	push   0x0
64004162:	mov    ecx,ebx
64004164:	call   0x64003dd0
64004169:	test   eax,eax
6400416b:	jge    0x64004225
64004171:	xor    eax,eax
64004173:	mov    DWORD PTR [esp+0x30],0xf
6400417b:	mov    DWORD PTR [esp+0x2c],eax
6400417f:	mov    BYTE PTR [esp+0x1c],al
64004183:	lea    ecx,[esp+0x18]
64004187:	push   ecx
64004188:	push   ebx
64004189:	lea    ecx,[esp+0x3c]
6400418d:	mov    DWORD PTR [esp+0x80],eax
64004194:	call   0x64004820
64004199:	push   eax
6400419a:	push   esi
6400419b:	push   edi
6400419c:	lea    edx,[esp+0x1c]
640041a0:	push   edx
640041a1:	mov    ecx,edi
640041a3:	mov    BYTE PTR [esp+0x88],0x1
640041ab:	call   0x640045c0
640041b0:	cmp    DWORD PTR [esp+0x68],0x10
640041b5:	mov    edi,DWORD PTR [eax]
640041b7:	mov    esi,DWORD PTR [eax+0x4]
640041ba:	jb     0x640041c9
640041bc:	mov    eax,DWORD PTR [esp+0x54]
640041c0:	push   eax
640041c1:	call   0x6400eb52
640041c6:	add    esp,0x4
640041c9:	xor    ebx,ebx
640041cb:	cmp    DWORD PTR [esp+0x4c],0x10
640041d0:	mov    DWORD PTR [esp+0x68],0xf
640041d8:	mov    DWORD PTR [esp+0x64],ebx
640041dc:	mov    BYTE PTR [esp+0x54],bl
640041e0:	jb     0x640041ef
640041e2:	mov    ecx,DWORD PTR [esp+0x38]
640041e6:	push   ecx
640041e7:	call   0x6400eb52
640041ec:	add    esp,0x4
640041ef:	cmp    DWORD PTR [esp+0x30],0x10
640041f4:	mov    DWORD PTR [esp+0x4c],0xf
640041fc:	mov    DWORD PTR [esp+0x48],ebx
64004200:	mov    BYTE PTR [esp+0x38],bl
64004204:	jb     0x64004213
64004206:	mov    edx,DWORD PTR [esp+0x1c]
6400420a:	push   edx
6400420b:	call   0x6400eb52
64004210:	add    esp,0x4
64004213:	mov    DWORD PTR [esp+0x30],0xf
6400421b:	mov    DWORD PTR [esp+0x2c],ebx
6400421f:	mov    BYTE PTR [esp+0x1c],bl
64004223:	jmp    0x64004227
64004225:	xor    ebx,ebx
64004227:	cmp    edi,ebx
64004229:	jne    0x64004230
6400422b:	call   0x6400eeaa
64004230:	cmp    esi,DWORD PTR [edi+0x4]
64004233:	jne    0x6400423a
64004235:	call   0x6400eeaa
6400423a:	lea    eax,[esi+0x28]
6400423d:	mov    ecx,DWORD PTR [esp+0x70]
64004241:	mov    DWORD PTR fs:0x0,ecx
64004248:	pop    ecx
64004249:	pop    edi
6400424a:	pop    esi
6400424b:	pop    ebx
6400424c:	mov    esp,ebp
6400424e:	pop    ebp
6400424f:	ret    0x4
64004252:	int3   
64004253:	int3   
64004254:	int3   
64004255:	int3   
64004256:	int3   
64004257:	int3   
64004258:	int3   
64004259:	int3   
6400425a:	int3   
6400425b:	int3   
6400425c:	int3   
6400425d:	int3   
6400425e:	int3   
6400425f:	int3   
64004260:	sub    esp,0x18
64004263:	push   ebx
64004264:	mov    ebx,DWORD PTR [esp+0x24]
64004268:	push   esi
64004269:	push   edi
6400426a:	push   ebx
6400426b:	mov    esi,ecx
6400426d:	call   0x64005180
64004272:	test   esi,esi
64004274:	mov    edi,eax
64004276:	mov    DWORD PTR [esp+0x14],edi
6400427a:	jne    0x64004281
6400427c:	call   0x6400eeaa
64004281:	cmp    edi,DWORD PTR [esi+0x4]
64004284:	mov    DWORD PTR [esp+0x10],esi
64004288:	je     0x640042b4
6400428a:	cmp    DWORD PTR [edi+0x24],0x10
6400428e:	mov    eax,DWORD PTR [edi+0x20]
64004291:	jb     0x64004298
64004293:	mov    edi,DWORD PTR [edi+0x10]
64004296:	jmp    0x6400429b
64004298:	add    edi,0x10
6400429b:	push   eax
6400429c:	mov    eax,DWORD PTR [ebx+0x14]
6400429f:	push   edi
640042a0:	push   eax
640042a1:	push   0x0
640042a3:	mov    ecx,ebx
640042a5:	call   0x64003dd0
640042aa:	test   eax,eax
640042ac:	jl     0x640042b4
640042ae:	lea    ecx,[esp+0x10]
640042b2:	jmp    0x640042c3
640042b4:	mov    ecx,DWORD PTR [esi+0x4]
640042b7:	mov    DWORD PTR [esp+0x1c],ecx
640042bb:	mov    DWORD PTR [esp+0x18],esi
640042bf:	lea    ecx,[esp+0x18]
640042c3:	mov    edx,DWORD PTR [ecx]
640042c5:	mov    eax,DWORD PTR [esp+0x28]
640042c9:	mov    ecx,DWORD PTR [ecx+0x4]
640042cc:	pop    edi
640042cd:	pop    esi
640042ce:	mov    DWORD PTR [eax],edx
640042d0:	mov    DWORD PTR [eax+0x4],ecx
640042d3:	pop    ebx
640042d4:	add    esp,0x18
640042d7:	ret    0x8
640042da:	int3   
640042db:	int3   
640042dc:	int3   
640042dd:	int3   
640042de:	int3   
640042df:	int3   
640042e0:	push   esi
640042e1:	mov    esi,ecx
640042e3:	mov    eax,DWORD PTR [esi]
640042e5:	test   eax,eax
640042e7:	push   edi
640042e8:	mov    edi,DWORD PTR [esp+0xc]
640042ec:	je     0x640042f2
640042ee:	cmp    eax,DWORD PTR [edi]
640042f0:	je     0x640042f7
640042f2:	call   0x6400eeaa
640042f7:	mov    eax,DWORD PTR [esi+0x4]
640042fa:	xor    ecx,ecx
640042fc:	cmp    eax,DWORD PTR [edi+0x4]
640042ff:	pop    edi
64004300:	sete   cl
64004303:	mov    al,cl
64004305:	pop    esi
64004306:	ret    0x4
64004309:	int3   
6400430a:	int3   
6400430b:	int3   
6400430c:	int3   
6400430d:	int3   
6400430e:	int3   
6400430f:	int3   
64004310:	push   esi
64004311:	mov    esi,ecx
64004313:	cmp    DWORD PTR [esi+0x18],0x8
64004317:	jb     0x64004325
64004319:	mov    eax,DWORD PTR [esi+0x4]
6400431c:	push   eax
6400431d:	call   0x6400eb52
64004322:	add    esp,0x4
64004325:	xor    eax,eax
64004327:	mov    DWORD PTR [esi+0x18],0x7
6400432e:	mov    DWORD PTR [esi+0x14],eax
64004331:	mov    WORD PTR [esi+0x4],ax
64004335:	pop    esi
64004336:	ret    
64004337:	int3   
64004338:	int3   
64004339:	int3   
6400433a:	int3   
6400433b:	int3   
6400433c:	int3   
6400433d:	int3   
6400433e:	int3   
6400433f:	int3   
64004340:	push   ebp
64004341:	mov    ebp,esp
64004343:	and    esp,0xfffffff8
64004346:	push   0xffffffff
64004348:	push   0x6401f030
6400434d:	mov    eax,fs:0x0
64004353:	push   eax
64004354:	sub    esp,0x60
64004357:	push   ebx
64004358:	push   esi
64004359:	push   edi
6400435a:	mov    eax,ds:0x64028038
6400435f:	xor    eax,esp
64004361:	push   eax
64004362:	lea    eax,[esp+0x70]
64004366:	mov    fs:0x0,eax
6400436c:	mov    edi,ecx
6400436e:	mov    ebx,DWORD PTR [ebp+0x8]
64004371:	push   ebx
64004372:	call   0x64005660
64004377:	test   edi,edi
64004379:	mov    esi,eax
6400437b:	jne    0x64004382
6400437d:	call   0x6400eeaa
64004382:	mov    eax,DWORD PTR [edi+0x4]
64004385:	cmp    esi,eax
64004387:	je     0x640043b1
64004389:	cmp    DWORD PTR [esi+0x24],0x8
6400438d:	mov    ecx,DWORD PTR [esi+0x20]
64004390:	jb     0x64004397
64004392:	mov    eax,DWORD PTR [esi+0x10]
64004395:	jmp    0x6400439a
64004397:	lea    eax,[esi+0x10]
6400439a:	push   ecx
6400439b:	push   eax
6400439c:	mov    eax,DWORD PTR [ebx+0x14]
6400439f:	push   eax
640043a0:	push   0x0
640043a2:	mov    ecx,ebx
640043a4:	call   0x64006740
640043a9:	test   eax,eax
640043ab:	jge    0x64004469
640043b1:	xor    eax,eax
640043b3:	mov    DWORD PTR [esp+0x30],0x7
640043bb:	mov    DWORD PTR [esp+0x2c],eax
640043bf:	mov    WORD PTR [esp+0x1c],ax
640043c4:	lea    ecx,[esp+0x18]
640043c8:	push   ecx
640043c9:	push   ebx
640043ca:	lea    ecx,[esp+0x3c]
640043ce:	mov    DWORD PTR [esp+0x80],eax
640043d5:	call   0x64004cd0
640043da:	push   eax
640043db:	push   esi
640043dc:	push   edi
640043dd:	lea    edx,[esp+0x1c]
640043e1:	push   edx
640043e2:	mov    ecx,edi
640043e4:	mov    BYTE PTR [esp+0x88],0x1
640043ec:	call   0x64004a70
640043f1:	cmp    DWORD PTR [esp+0x68],0x8
640043f6:	mov    edi,DWORD PTR [eax]
640043f8:	mov    esi,DWORD PTR [eax+0x4]
640043fb:	jb     0x6400440a
640043fd:	mov    eax,DWORD PTR [esp+0x54]
64004401:	push   eax
64004402:	call   0x6400eb52
64004407:	add    esp,0x4
6400440a:	xor    ebx,ebx
6400440c:	cmp    DWORD PTR [esp+0x4c],0x8
64004411:	mov    DWORD PTR [esp+0x68],0x7
64004419:	mov    DWORD PTR [esp+0x64],ebx
6400441d:	mov    WORD PTR [esp+0x54],bx
64004422:	jb     0x64004431
64004424:	mov    ecx,DWORD PTR [esp+0x38]
64004428:	push   ecx
64004429:	call   0x6400eb52
6400442e:	add    esp,0x4
64004431:	cmp    DWORD PTR [esp+0x30],0x8
64004436:	mov    DWORD PTR [esp+0x4c],0x7
6400443e:	mov    DWORD PTR [esp+0x48],ebx
64004442:	mov    WORD PTR [esp+0x38],bx
64004447:	jb     0x64004456
64004449:	mov    edx,DWORD PTR [esp+0x1c]
6400444d:	push   edx
6400444e:	call   0x6400eb52
64004453:	add    esp,0x4
64004456:	mov    DWORD PTR [esp+0x30],0x7
6400445e:	mov    DWORD PTR [esp+0x2c],ebx
64004462:	mov    WORD PTR [esp+0x1c],bx
64004467:	jmp    0x6400446b
64004469:	xor    ebx,ebx
6400446b:	cmp    edi,ebx
6400446d:	jne    0x64004474
6400446f:	call   0x6400eeaa
64004474:	cmp    esi,DWORD PTR [edi+0x4]
64004477:	jne    0x6400447e
64004479:	call   0x6400eeaa
6400447e:	lea    eax,[esi+0x28]
64004481:	mov    ecx,DWORD PTR [esp+0x70]
64004485:	mov    DWORD PTR fs:0x0,ecx
6400448c:	pop    ecx
6400448d:	pop    edi
6400448e:	pop    esi
6400448f:	pop    ebx
64004490:	mov    esp,ebp
64004492:	pop    ebp
64004493:	ret    0x4
64004496:	int3   
64004497:	int3   
64004498:	int3   
64004499:	int3   
6400449a:	int3   
6400449b:	int3   
6400449c:	int3   
6400449d:	int3   
6400449e:	int3   
6400449f:	int3   
640044a0:	sub    esp,0x18
640044a3:	push   ebx
640044a4:	mov    ebx,DWORD PTR [esp+0x24]
640044a8:	push   esi
640044a9:	push   edi
640044aa:	push   ebx
640044ab:	mov    esi,ecx
640044ad:	call   0x64005660
640044b2:	test   esi,esi
640044b4:	mov    edi,eax
640044b6:	mov    DWORD PTR [esp+0x14],edi
640044ba:	jne    0x640044c1
640044bc:	call   0x6400eeaa
640044c1:	cmp    edi,DWORD PTR [esi+0x4]
640044c4:	mov    DWORD PTR [esp+0x10],esi
640044c8:	je     0x640044f4
640044ca:	cmp    DWORD PTR [edi+0x24],0x8
640044ce:	mov    eax,DWORD PTR [edi+0x20]
640044d1:	jb     0x640044d8
640044d3:	mov    edi,DWORD PTR [edi+0x10]
640044d6:	jmp    0x640044db
640044d8:	add    edi,0x10
640044db:	push   eax
640044dc:	mov    eax,DWORD PTR [ebx+0x14]
640044df:	push   edi
640044e0:	push   eax
640044e1:	push   0x0
640044e3:	mov    ecx,ebx
640044e5:	call   0x64006740
640044ea:	test   eax,eax
640044ec:	jl     0x640044f4
640044ee:	lea    ecx,[esp+0x10]
640044f2:	jmp    0x64004503
640044f4:	mov    ecx,DWORD PTR [esi+0x4]
640044f7:	mov    DWORD PTR [esp+0x1c],ecx
640044fb:	mov    DWORD PTR [esp+0x18],esi
640044ff:	lea    ecx,[esp+0x18]
64004503:	mov    edx,DWORD PTR [ecx]
64004505:	mov    eax,DWORD PTR [esp+0x28]
64004509:	mov    ecx,DWORD PTR [ecx+0x4]
6400450c:	pop    edi
6400450d:	pop    esi
6400450e:	mov    DWORD PTR [eax],edx
64004510:	mov    DWORD PTR [eax+0x4],ecx
64004513:	pop    ebx
64004514:	add    esp,0x18
64004517:	ret    0x8
6400451a:	int3   
6400451b:	int3   
6400451c:	int3   
6400451d:	int3   
6400451e:	int3   
6400451f:	int3   
64004520:	push   ebx
64004521:	push   esi
64004522:	mov    esi,ecx
64004524:	cmp    DWORD PTR [esi+0x34],0x10
64004528:	jb     0x64004536
6400452a:	mov    eax,DWORD PTR [esi+0x20]
6400452d:	push   eax
6400452e:	call   0x6400eb52
64004533:	add    esp,0x4
64004536:	xor    ebx,ebx
64004538:	mov    DWORD PTR [esi+0x34],0xf
6400453f:	mov    DWORD PTR [esi+0x30],ebx
64004542:	mov    BYTE PTR [esi+0x20],bl
64004545:	cmp    DWORD PTR [esi+0x18],0x10
64004549:	jb     0x64004557
6400454b:	mov    ecx,DWORD PTR [esi+0x4]
6400454e:	push   ecx
6400454f:	call   0x6400eb52
64004554:	add    esp,0x4
64004557:	mov    DWORD PTR [esi+0x14],ebx
6400455a:	mov    DWORD PTR [esi+0x18],0xf
64004561:	mov    BYTE PTR [esi+0x4],bl
64004564:	pop    esi
64004565:	pop    ebx
64004566:	ret    
64004567:	int3   
64004568:	int3   
64004569:	int3   
6400456a:	int3   
6400456b:	int3   
6400456c:	int3   
6400456d:	int3   
6400456e:	int3   
6400456f:	int3   
64004570:	push   esi
64004571:	mov    esi,ecx
64004573:	cmp    DWORD PTR [esi+0x34],0x8
64004577:	push   edi
64004578:	jb     0x64004586
6400457a:	mov    eax,DWORD PTR [esi+0x20]
6400457d:	push   eax
6400457e:	call   0x6400eb52
64004583:	add    esp,0x4
64004586:	xor    edi,edi
64004588:	mov    DWORD PTR [esi+0x34],0x7
6400458f:	mov    DWORD PTR [esi+0x30],edi
64004592:	mov    WORD PTR [esi+0x20],di
64004596:	cmp    DWORD PTR [esi+0x18],0x8
6400459a:	jb     0x640045a8
6400459c:	mov    ecx,DWORD PTR [esi+0x4]
6400459f:	push   ecx
640045a0:	call   0x6400eb52
640045a5:	add    esp,0x4
640045a8:	mov    DWORD PTR [esi+0x14],edi
640045ab:	mov    DWORD PTR [esi+0x18],0x7
640045b2:	mov    WORD PTR [esi+0x4],di
640045b6:	pop    edi
640045b7:	pop    esi
640045b8:	ret    
640045b9:	int3   
640045ba:	int3   
640045bb:	int3   
640045bc:	int3   
640045bd:	int3   
640045be:	int3   
640045bf:	int3   
640045c0:	push   ebp
640045c1:	mov    ebp,esp
640045c3:	and    esp,0xfffffff8
640045c6:	sub    esp,0x14
640045c9:	push   ebx
640045ca:	push   esi
640045cb:	mov    esi,ecx
640045cd:	cmp    DWORD PTR [esi+0x8],0x0
640045d1:	push   edi
640045d2:	jne    0x640045f4
640045d4:	mov    eax,DWORD PTR [ebp+0x14]
640045d7:	mov    ecx,DWORD PTR [esi+0x4]
640045da:	mov    edi,DWORD PTR [ebp+0x8]
640045dd:	push   eax
640045de:	push   ecx
640045df:	push   0x1
640045e1:	push   edi
640045e2:	mov    ecx,esi
640045e4:	call   0x64004ee0
640045e9:	mov    eax,edi
640045eb:	pop    edi
640045ec:	pop    esi
640045ed:	pop    ebx
640045ee:	mov    esp,ebp
640045f0:	pop    ebp
640045f1:	ret    0x10
640045f4:	mov    edx,DWORD PTR [esi+0x4]
640045f7:	mov    edi,DWORD PTR [ebp+0xc]
640045fa:	test   edi,edi
640045fc:	mov    eax,DWORD PTR [edx]
640045fe:	mov    DWORD PTR [esp+0x18],eax
64004602:	je     0x64004608
64004604:	cmp    edi,esi
64004606:	je     0x6400460d
64004608:	call   0x6400eeaa
6400460d:	mov    ebx,DWORD PTR [ebp+0x10]
64004610:	cmp    ebx,DWORD PTR [esp+0x18]
64004614:	jne    0x6400465b
64004616:	cmp    DWORD PTR [ebx+0x24],0x10
6400461a:	mov    ecx,DWORD PTR [ebx+0x20]
6400461d:	jb     0x64004624
6400461f:	mov    eax,DWORD PTR [ebx+0x10]
64004622:	jmp    0x64004627
64004624:	lea    eax,[ebx+0x10]
64004627:	mov    edi,DWORD PTR [ebp+0x14]
6400462a:	push   ecx
6400462b:	mov    ecx,DWORD PTR [edi+0x14]
6400462e:	push   eax
6400462f:	push   ecx
64004630:	push   0x0
64004632:	mov    ecx,edi
64004634:	call   0x64003dd0
64004639:	test   eax,eax
6400463b:	jge    0x640047b7
64004641:	push   edi
64004642:	mov    edi,DWORD PTR [ebp+0x8]
64004645:	push   ebx
64004646:	push   0x1
64004648:	push   edi
64004649:	mov    ecx,esi
6400464b:	call   0x64004ee0
64004650:	mov    eax,edi
64004652:	pop    edi
64004653:	pop    esi
64004654:	pop    ebx
64004655:	mov    esp,ebp
64004657:	pop    ebp
64004658:	ret    0x10
6400465b:	test   edi,edi
6400465d:	mov    edx,DWORD PTR [esi+0x4]
64004660:	mov    DWORD PTR [esp+0x18],edx
64004664:	je     0x6400466a
64004666:	cmp    edi,esi
64004668:	je     0x6400466f
6400466a:	call   0x6400eeaa
6400466f:	cmp    ebx,DWORD PTR [esp+0x18]
64004673:	mov    edi,DWORD PTR [ebp+0x14]
64004676:	mov    ecx,esi
64004678:	jne    0x640046b2
6400467a:	mov    eax,DWORD PTR [esi+0x4]
6400467d:	mov    eax,DWORD PTR [eax+0x8]
64004680:	add    eax,0xc
64004683:	push   edi
64004684:	push   eax
64004685:	call   0x640047e0
6400468a:	test   al,al
6400468c:	je     0x640047b7
64004692:	mov    ecx,DWORD PTR [esi+0x4]
64004695:	mov    edx,DWORD PTR [ecx+0x8]
64004698:	push   edi
64004699:	mov    edi,DWORD PTR [ebp+0x8]
6400469c:	push   edx
6400469d:	push   0x0
6400469f:	push   edi
640046a0:	mov    ecx,esi
640046a2:	call   0x64004ee0
640046a7:	mov    eax,edi
640046a9:	pop    edi
640046aa:	pop    esi
640046ab:	pop    ebx
640046ac:	mov    esp,ebp
640046ae:	pop    ebp
640046af:	ret    0x10
640046b2:	lea    eax,[ebx+0xc]
640046b5:	push   eax
640046b6:	push   edi
640046b7:	call   0x640047e0
640046bc:	test   al,al
640046be:	je     0x64004723
640046c0:	mov    eax,DWORD PTR [ebp+0xc]
640046c3:	lea    ecx,[esp+0xc]
640046c7:	mov    DWORD PTR [esp+0xc],eax
640046cb:	mov    DWORD PTR [esp+0x10],ebx
640046cf:	call   0x64006350
640046d4:	mov    ecx,DWORD PTR [esp+0x10]
640046d8:	add    ecx,0xc
640046db:	push   edi
640046dc:	push   ecx
640046dd:	mov    ecx,esi
640046df:	call   0x640047e0
640046e4:	test   al,al
640046e6:	je     0x64004723
640046e8:	mov    eax,DWORD PTR [esp+0x10]
640046ec:	mov    edx,DWORD PTR [eax+0x8]
640046ef:	cmp    BYTE PTR [edx+0x45],0x0
640046f3:	push   edi
640046f4:	mov    edi,DWORD PTR [ebp+0x8]
640046f7:	mov    ecx,esi
640046f9:	je     0x6400470f
640046fb:	push   eax
640046fc:	push   0x0
640046fe:	push   edi
640046ff:	call   0x64004ee0
64004704:	mov    eax,edi
64004706:	pop    edi
64004707:	pop    esi
64004708:	pop    ebx
64004709:	mov    esp,ebp
6400470b:	pop    ebp
6400470c:	ret    0x10
6400470f:	push   ebx
64004710:	push   0x1
64004712:	push   edi
64004713:	call   0x64004ee0
64004718:	mov    eax,edi
6400471a:	pop    edi
6400471b:	pop    esi
6400471c:	pop    ebx
6400471d:	mov    esp,ebp
6400471f:	pop    ebp
64004720:	ret    0x10
64004723:	push   edi
64004724:	lea    eax,[ebx+0xc]
64004727:	push   eax
64004728:	mov    ecx,esi
6400472a:	call   0x640047e0
6400472f:	test   al,al
64004731:	je     0x640047b7
64004737:	mov    ecx,DWORD PTR [esi+0x4]
6400473a:	mov    eax,DWORD PTR [ebp+0xc]
6400473d:	mov    DWORD PTR [esp+0x18],ecx
64004741:	lea    ecx,[esp+0xc]
64004745:	mov    DWORD PTR [esp+0xc],eax
64004749:	mov    DWORD PTR [esp+0x10],ebx
6400474d:	mov    DWORD PTR [esp+0x14],esi
64004751:	call   0x640063e0
64004756:	lea    edx,[esp+0x14]
6400475a:	push   edx
6400475b:	lea    ecx,[esp+0x10]
6400475f:	call   0x640042e0
64004764:	test   al,al
64004766:	jne    0x6400477c
64004768:	mov    eax,DWORD PTR [esp+0x10]
6400476c:	add    eax,0xc
6400476f:	push   eax
64004770:	push   edi
64004771:	mov    ecx,esi
64004773:	call   0x640047e0
64004778:	test   al,al
6400477a:	je     0x640047b7
6400477c:	mov    ecx,DWORD PTR [ebx+0x8]
6400477f:	cmp    BYTE PTR [ecx+0x45],0x0
64004783:	push   edi
64004784:	mov    edi,DWORD PTR [ebp+0x8]
64004787:	mov    ecx,esi
64004789:	je     0x6400479f
6400478b:	push   ebx
6400478c:	push   0x0
6400478e:	push   edi
6400478f:	call   0x64004ee0
64004794:	mov    eax,edi
64004796:	pop    edi
64004797:	pop    esi
64004798:	pop    ebx
64004799:	mov    esp,ebp
6400479b:	pop    ebp
6400479c:	ret    0x10
6400479f:	mov    edx,DWORD PTR [esp+0x14]
640047a3:	push   edx
640047a4:	push   0x1
640047a6:	push   edi
640047a7:	call   0x64004ee0
640047ac:	mov    eax,edi
640047ae:	pop    edi
640047af:	pop    esi
640047b0:	pop    ebx
640047b1:	mov    esp,ebp
640047b3:	pop    ebp
640047b4:	ret    0x10
640047b7:	push   edi
640047b8:	lea    eax,[esp+0x18]
640047bc:	push   eax
640047bd:	mov    ecx,esi
640047bf:	call   0x64004d50
640047c4:	mov    edx,DWORD PTR [eax]
640047c6:	mov    ecx,DWORD PTR [ebp+0x8]
640047c9:	pop    edi
640047ca:	mov    DWORD PTR [ecx],edx
640047cc:	mov    eax,DWORD PTR [eax+0x4]
640047cf:	pop    esi
640047d0:	mov    DWORD PTR [ecx+0x4],eax
640047d3:	mov    eax,ecx
640047d5:	pop    ebx
640047d6:	mov    esp,ebp
640047d8:	pop    ebp
640047d9:	ret    0x10
640047dc:	int3   
640047dd:	int3   
640047de:	int3   
640047df:	int3   
640047e0:	mov    eax,DWORD PTR [esp+0x8]
640047e4:	cmp    DWORD PTR [eax+0x18],0x10
640047e8:	mov    ecx,DWORD PTR [eax+0x14]
640047eb:	jb     0x640047f2
640047ed:	mov    eax,DWORD PTR [eax+0x4]
640047f0:	jmp    0x640047f5
640047f2:	add    eax,0x4
640047f5:	push   ecx
640047f6:	mov    ecx,DWORD PTR [esp+0x8]
640047fa:	push   eax
640047fb:	mov    eax,DWORD PTR [ecx+0x14]
640047fe:	push   eax
640047ff:	push   0x0
64004801:	call   0x64003dd0
64004806:	xor    ecx,ecx
64004808:	test   eax,eax
6400480a:	setl   cl
6400480d:	mov    al,cl
6400480f:	ret    0x8
64004812:	int3   
64004813:	int3   
64004814:	int3   
64004815:	int3   
64004816:	int3   
64004817:	int3   
64004818:	int3   
64004819:	int3   
6400481a:	int3   
6400481b:	int3   
6400481c:	int3   
6400481d:	int3   
6400481e:	int3   
6400481f:	int3   
64004820:	push   0xffffffff
64004822:	push   0x6401ed48
64004827:	mov    eax,fs:0x0
6400482d:	push   eax
6400482e:	push   ecx
6400482f:	push   ebx
64004830:	push   esi
64004831:	mov    eax,ds:0x64028038
64004836:	xor    eax,esp
64004838:	push   eax
64004839:	lea    eax,[esp+0x10]
6400483d:	mov    fs:0x0,eax
64004843:	mov    esi,ecx
64004845:	mov    DWORD PTR [esp+0xc],esi
64004849:	mov    eax,DWORD PTR [esp+0x20]
6400484d:	xor    ebx,ebx
6400484f:	push   0xffffffff
64004851:	push   ebx
64004852:	mov    DWORD PTR [esi+0x18],0xf
64004859:	mov    DWORD PTR [esi+0x14],ebx
6400485c:	push   eax
6400485d:	mov    BYTE PTR [esi+0x4],bl
64004860:	call   0x64001ad0
64004865:	mov    edx,DWORD PTR [esp+0x24]
64004869:	push   0xffffffff
6400486b:	lea    ecx,[esi+0x1c]
6400486e:	mov    DWORD PTR [esp+0x1c],ebx
64004872:	push   ebx
64004873:	mov    DWORD PTR [ecx+0x18],0xf
6400487a:	mov    DWORD PTR [ecx+0x14],ebx
6400487d:	push   edx
6400487e:	mov    BYTE PTR [ecx+0x4],bl
64004881:	call   0x64001ad0
64004886:	mov    eax,esi
64004888:	mov    ecx,DWORD PTR [esp+0x10]
6400488c:	mov    DWORD PTR fs:0x0,ecx
64004893:	pop    ecx
64004894:	pop    esi
64004895:	pop    ebx
64004896:	add    esp,0x10
64004899:	ret    0x8
6400489c:	int3   
6400489d:	int3   
6400489e:	int3   
6400489f:	int3   
640048a0:	push   ebx
640048a1:	mov    ebx,DWORD PTR [esp+0xc]
640048a5:	push   ebp
640048a6:	mov    ebp,DWORD PTR [esp+0xc]
640048aa:	cmp    DWORD PTR [ebp+0x14],ebx
640048ad:	push   esi
640048ae:	push   edi
640048af:	mov    esi,ecx
640048b1:	jae    0x640048b8
640048b3:	call   0x6400eb0e
640048b8:	mov    edi,DWORD PTR [ebp+0x14]
640048bb:	mov    eax,DWORD PTR [esp+0x1c]
640048bf:	sub    edi,ebx
640048c1:	cmp    eax,edi
640048c3:	jae    0x640048c7
640048c5:	mov    edi,eax
640048c7:	cmp    esi,ebp
640048c9:	jne    0x640048ea
640048cb:	push   0xffffffff
640048cd:	add    edi,ebx
640048cf:	push   edi
640048d0:	mov    ecx,esi
640048d2:	call   0x64005210
640048d7:	push   ebx
640048d8:	push   0x0
640048da:	mov    ecx,esi
640048dc:	call   0x64005210
640048e1:	pop    edi
640048e2:	mov    eax,esi
640048e4:	pop    esi
640048e5:	pop    ebp
640048e6:	pop    ebx
640048e7:	ret    0xc
640048ea:	cmp    edi,0x7ffffffe
640048f0:	jbe    0x640048f7
640048f2:	call   0x6400eacf
640048f7:	mov    eax,DWORD PTR [esi+0x18]
640048fa:	cmp    eax,edi
640048fc:	jae    0x64004919
640048fe:	mov    eax,DWORD PTR [esi+0x14]
64004901:	push   eax
64004902:	push   edi
64004903:	mov    ecx,esi
64004905:	call   0x640058f0
6400490a:	test   edi,edi
6400490c:	jbe    0x64004986
6400490e:	cmp    DWORD PTR [ebp+0x18],0x8
64004912:	jb     0x64004945
64004914:	mov    ecx,DWORD PTR [ebp+0x4]
64004917:	jmp    0x64004948
64004919:	test   edi,edi
6400491b:	jne    0x6400490c
6400491d:	cmp    eax,0x8
64004920:	mov    DWORD PTR [esi+0x14],edi
64004923:	jb     0x64004934
64004925:	mov    eax,DWORD PTR [esi+0x4]
64004928:	mov    WORD PTR [eax],di
6400492b:	pop    edi
6400492c:	mov    eax,esi
6400492e:	pop    esi
6400492f:	pop    ebp
64004930:	pop    ebx
64004931:	ret    0xc
64004934:	lea    eax,[esi+0x4]
64004937:	pop    edi
64004938:	mov    WORD PTR [eax],0x0
6400493d:	mov    eax,esi
6400493f:	pop    esi
64004940:	pop    ebp
64004941:	pop    ebx
64004942:	ret    0xc
64004945:	lea    ecx,[ebp+0x4]
64004948:	cmp    DWORD PTR [esi+0x18],0x8
6400494c:	lea    ebp,[esi+0x4]
6400494f:	jb     0x64004956
64004951:	mov    eax,DWORD PTR [ebp+0x0]
64004954:	jmp    0x64004958
64004956:	mov    eax,ebp
64004958:	mov    edx,DWORD PTR [esp+0x18]
6400495c:	lea    ecx,[ecx+edx*2]
6400495f:	lea    ebx,[edi+edi*1]
64004962:	push   ebx
64004963:	push   ecx
64004964:	mov    ecx,DWORD PTR [esi+0x18]
64004967:	lea    edx,[ecx+ecx*1]
6400496a:	push   edx
6400496b:	push   eax
6400496c:	call   0x6400ecaa
64004971:	add    esp,0x10
64004974:	cmp    DWORD PTR [esi+0x18],0x8
64004978:	mov    DWORD PTR [esi+0x14],edi
6400497b:	jb     0x64004980
6400497d:	mov    ebp,DWORD PTR [ebp+0x0]
64004980:	mov    WORD PTR [ebx+ebp*1],0x0
64004986:	pop    edi
64004987:	mov    eax,esi
64004989:	pop    esi
6400498a:	pop    ebp
6400498b:	pop    ebx
6400498c:	ret    0xc
6400498f:	int3   
64004990:	push   ebp
64004991:	push   esi
64004992:	mov    esi,ecx
64004994:	mov    edx,DWORD PTR [esi+0x18]
64004997:	cmp    edx,0x8
6400499a:	push   edi
6400499b:	lea    ebp,[esi+0x4]
6400499e:	jb     0x640049a5
640049a0:	mov    ecx,DWORD PTR [ebp+0x0]
640049a3:	jmp    0x640049a7
640049a5:	mov    ecx,ebp
640049a7:	mov    eax,DWORD PTR [esp+0x10]
640049ab:	cmp    eax,ecx
640049ad:	jb     0x640049e5
640049af:	cmp    edx,0x8
640049b2:	jb     0x640049b9
640049b4:	mov    ecx,DWORD PTR [ebp+0x0]
640049b7:	jmp    0x640049bb
640049b9:	mov    ecx,ebp
640049bb:	mov    edi,DWORD PTR [esi+0x14]
640049be:	lea    ecx,[ecx+edi*2]
640049c1:	cmp    ecx,eax
640049c3:	jbe    0x640049e5
640049c5:	cmp    edx,0x8
640049c8:	jb     0x640049cd
640049ca:	mov    ebp,DWORD PTR [ebp+0x0]
640049cd:	mov    edx,DWORD PTR [esp+0x14]
640049d1:	sub    eax,ebp
640049d3:	push   edx
640049d4:	sar    eax,1
640049d6:	push   eax
640049d7:	push   esi
640049d8:	mov    ecx,esi
640049da:	call   0x640048a0
640049df:	pop    edi
640049e0:	pop    esi
640049e1:	pop    ebp
640049e2:	ret    0x8
640049e5:	mov    edi,DWORD PTR [esp+0x14]
640049e9:	cmp    edi,0x7ffffffe
640049ef:	jbe    0x640049f6
640049f1:	call   0x6400eacf
640049f6:	mov    eax,DWORD PTR [esi+0x18]
640049f9:	cmp    eax,edi
640049fb:	jae    0x64004a1a
640049fd:	mov    eax,DWORD PTR [esi+0x14]
64004a00:	push   eax
64004a01:	push   edi
64004a02:	mov    ecx,esi
64004a04:	call   0x640058f0
64004a09:	test   edi,edi
64004a0b:	jbe    0x64004a62
64004a0d:	mov    ecx,DWORD PTR [esi+0x18]
64004a10:	cmp    ecx,0x8
64004a13:	jb     0x64004a37
64004a15:	mov    eax,DWORD PTR [ebp+0x0]
64004a18:	jmp    0x64004a39
64004a1a:	test   edi,edi
64004a1c:	jne    0x64004a0b
64004a1e:	cmp    eax,0x8
64004a21:	mov    DWORD PTR [esi+0x14],edi
64004a24:	jb     0x64004a29
64004a26:	mov    ebp,DWORD PTR [ebp+0x0]
64004a29:	pop    edi
64004a2a:	mov    eax,esi
64004a2c:	pop    esi
64004a2d:	mov    WORD PTR [ebp+0x0],0x0
64004a33:	pop    ebp
64004a34:	ret    0x8
64004a37:	mov    eax,ebp
64004a39:	mov    edx,DWORD PTR [esp+0x10]
64004a3d:	push   ebx
64004a3e:	lea    ebx,[edi+edi*1]
64004a41:	push   ebx
64004a42:	push   edx
64004a43:	add    ecx,ecx
64004a45:	push   ecx
64004a46:	push   eax
64004a47:	call   0x6400ecaa
64004a4c:	add    esp,0x10
64004a4f:	cmp    DWORD PTR [esi+0x18],0x8
64004a53:	mov    DWORD PTR [esi+0x14],edi
64004a56:	jb     0x64004a5b
64004a58:	mov    ebp,DWORD PTR [ebp+0x0]
64004a5b:	mov    WORD PTR [ebx+ebp*1],0x0
64004a61:	pop    ebx
64004a62:	pop    edi
64004a63:	mov    eax,esi
64004a65:	pop    esi
64004a66:	pop    ebp
64004a67:	ret    0x8
64004a6a:	int3   
64004a6b:	int3   
64004a6c:	int3   
64004a6d:	int3   
64004a6e:	int3   
64004a6f:	int3   
64004a70:	push   ebp
64004a71:	mov    ebp,esp
64004a73:	and    esp,0xfffffff8
64004a76:	sub    esp,0x14
64004a79:	push   ebx
64004a7a:	push   esi
64004a7b:	mov    esi,ecx
64004a7d:	cmp    DWORD PTR [esi+0x8],0x0
64004a81:	push   edi
64004a82:	jne    0x64004aa4
64004a84:	mov    eax,DWORD PTR [ebp+0x14]
64004a87:	mov    ecx,DWORD PTR [esi+0x4]
64004a8a:	mov    edi,DWORD PTR [ebp+0x8]
64004a8d:	push   eax
64004a8e:	push   ecx
64004a8f:	push   0x1
64004a91:	push   edi
64004a92:	mov    ecx,esi
64004a94:	call   0x640053c0
64004a99:	mov    eax,edi
64004a9b:	pop    edi
64004a9c:	pop    esi
64004a9d:	pop    ebx
64004a9e:	mov    esp,ebp
64004aa0:	pop    ebp
64004aa1:	ret    0x10
64004aa4:	mov    edx,DWORD PTR [esi+0x4]
64004aa7:	mov    edi,DWORD PTR [ebp+0xc]
64004aaa:	test   edi,edi
64004aac:	mov    eax,DWORD PTR [edx]
64004aae:	mov    DWORD PTR [esp+0x18],eax
64004ab2:	je     0x64004ab8
64004ab4:	cmp    edi,esi
64004ab6:	je     0x64004abd
64004ab8:	call   0x6400eeaa
64004abd:	mov    ebx,DWORD PTR [ebp+0x10]
64004ac0:	cmp    ebx,DWORD PTR [esp+0x18]
64004ac4:	jne    0x64004b0b
64004ac6:	cmp    DWORD PTR [ebx+0x24],0x8
64004aca:	mov    ecx,DWORD PTR [ebx+0x20]
64004acd:	jb     0x64004ad4
64004acf:	mov    eax,DWORD PTR [ebx+0x10]
64004ad2:	jmp    0x64004ad7
64004ad4:	lea    eax,[ebx+0x10]
64004ad7:	mov    edi,DWORD PTR [ebp+0x14]
64004ada:	push   ecx
64004adb:	mov    ecx,DWORD PTR [edi+0x14]
64004ade:	push   eax
64004adf:	push   ecx
64004ae0:	push   0x0
64004ae2:	mov    ecx,edi
64004ae4:	call   0x64006740
64004ae9:	test   eax,eax
64004aeb:	jge    0x64004c67
64004af1:	push   edi
64004af2:	mov    edi,DWORD PTR [ebp+0x8]
64004af5:	push   ebx
64004af6:	push   0x1
64004af8:	push   edi
64004af9:	mov    ecx,esi
64004afb:	call   0x640053c0
64004b00:	mov    eax,edi
64004b02:	pop    edi
64004b03:	pop    esi
64004b04:	pop    ebx
64004b05:	mov    esp,ebp
64004b07:	pop    ebp
64004b08:	ret    0x10
64004b0b:	test   edi,edi
64004b0d:	mov    edx,DWORD PTR [esi+0x4]
64004b10:	mov    DWORD PTR [esp+0x18],edx
64004b14:	je     0x64004b1a
64004b16:	cmp    edi,esi
64004b18:	je     0x64004b1f
64004b1a:	call   0x6400eeaa
64004b1f:	cmp    ebx,DWORD PTR [esp+0x18]
64004b23:	mov    edi,DWORD PTR [ebp+0x14]
64004b26:	mov    ecx,esi
64004b28:	jne    0x64004b62
64004b2a:	mov    eax,DWORD PTR [esi+0x4]
64004b2d:	mov    eax,DWORD PTR [eax+0x8]
64004b30:	add    eax,0xc
64004b33:	push   edi
64004b34:	push   eax
64004b35:	call   0x64004c90
64004b3a:	test   al,al
64004b3c:	je     0x64004c67
64004b42:	mov    ecx,DWORD PTR [esi+0x4]
64004b45:	mov    edx,DWORD PTR [ecx+0x8]
64004b48:	push   edi
64004b49:	mov    edi,DWORD PTR [ebp+0x8]
64004b4c:	push   edx
64004b4d:	push   0x0
64004b4f:	push   edi
64004b50:	mov    ecx,esi
64004b52:	call   0x640053c0
64004b57:	mov    eax,edi
64004b59:	pop    edi
64004b5a:	pop    esi
64004b5b:	pop    ebx
64004b5c:	mov    esp,ebp
64004b5e:	pop    ebp
64004b5f:	ret    0x10
64004b62:	lea    eax,[ebx+0xc]
64004b65:	push   eax
64004b66:	push   edi
64004b67:	call   0x64004c90
64004b6c:	test   al,al
64004b6e:	je     0x64004bd3
64004b70:	mov    eax,DWORD PTR [ebp+0xc]
64004b73:	lea    ecx,[esp+0xc]
64004b77:	mov    DWORD PTR [esp+0xc],eax
64004b7b:	mov    DWORD PTR [esp+0x10],ebx
64004b7f:	call   0x64006350
64004b84:	mov    ecx,DWORD PTR [esp+0x10]
64004b88:	add    ecx,0xc
64004b8b:	push   edi
64004b8c:	push   ecx
64004b8d:	mov    ecx,esi
64004b8f:	call   0x64004c90
64004b94:	test   al,al
64004b96:	je     0x64004bd3
64004b98:	mov    eax,DWORD PTR [esp+0x10]
64004b9c:	mov    edx,DWORD PTR [eax+0x8]
64004b9f:	cmp    BYTE PTR [edx+0x45],0x0
64004ba3:	push   edi
64004ba4:	mov    edi,DWORD PTR [ebp+0x8]
64004ba7:	mov    ecx,esi
64004ba9:	je     0x64004bbf
64004bab:	push   eax
64004bac:	push   0x0
64004bae:	push   edi
64004baf:	call   0x640053c0
64004bb4:	mov    eax,edi
64004bb6:	pop    edi
64004bb7:	pop    esi
64004bb8:	pop    ebx
64004bb9:	mov    esp,ebp
64004bbb:	pop    ebp
64004bbc:	ret    0x10
64004bbf:	push   ebx
64004bc0:	push   0x1
64004bc2:	push   edi
64004bc3:	call   0x640053c0
64004bc8:	mov    eax,edi
64004bca:	pop    edi
64004bcb:	pop    esi
64004bcc:	pop    ebx
64004bcd:	mov    esp,ebp
64004bcf:	pop    ebp
64004bd0:	ret    0x10
64004bd3:	push   edi
64004bd4:	lea    eax,[ebx+0xc]
64004bd7:	push   eax
64004bd8:	mov    ecx,esi
64004bda:	call   0x64004c90
64004bdf:	test   al,al
64004be1:	je     0x64004c67
64004be7:	mov    ecx,DWORD PTR [esi+0x4]
64004bea:	mov    eax,DWORD PTR [ebp+0xc]
64004bed:	mov    DWORD PTR [esp+0x18],ecx
64004bf1:	lea    ecx,[esp+0xc]
64004bf5:	mov    DWORD PTR [esp+0xc],eax
64004bf9:	mov    DWORD PTR [esp+0x10],ebx
64004bfd:	mov    DWORD PTR [esp+0x14],esi
64004c01:	call   0x640063e0
64004c06:	lea    edx,[esp+0x14]
64004c0a:	push   edx
64004c0b:	lea    ecx,[esp+0x10]
64004c0f:	call   0x640042e0
64004c14:	test   al,al
64004c16:	jne    0x64004c2c
64004c18:	mov    eax,DWORD PTR [esp+0x10]
64004c1c:	add    eax,0xc
64004c1f:	push   eax
64004c20:	push   edi
64004c21:	mov    ecx,esi
64004c23:	call   0x64004c90
64004c28:	test   al,al
64004c2a:	je     0x64004c67
64004c2c:	mov    ecx,DWORD PTR [ebx+0x8]
64004c2f:	cmp    BYTE PTR [ecx+0x45],0x0
64004c33:	push   edi
64004c34:	mov    edi,DWORD PTR [ebp+0x8]
64004c37:	mov    ecx,esi
64004c39:	je     0x64004c4f
64004c3b:	push   ebx
64004c3c:	push   0x0
64004c3e:	push   edi
64004c3f:	call   0x640053c0
64004c44:	mov    eax,edi
64004c46:	pop    edi
64004c47:	pop    esi
64004c48:	pop    ebx
64004c49:	mov    esp,ebp
64004c4b:	pop    ebp
64004c4c:	ret    0x10
64004c4f:	mov    edx,DWORD PTR [esp+0x14]
64004c53:	push   edx
64004c54:	push   0x1
64004c56:	push   edi
64004c57:	call   0x640053c0
64004c5c:	mov    eax,edi
64004c5e:	pop    edi
64004c5f:	pop    esi
64004c60:	pop    ebx
64004c61:	mov    esp,ebp
64004c63:	pop    ebp
64004c64:	ret    0x10
64004c67:	push   edi
64004c68:	lea    eax,[esp+0x18]
64004c6c:	push   eax
64004c6d:	mov    ecx,esi
64004c6f:	call   0x640052b0
64004c74:	mov    edx,DWORD PTR [eax]
64004c76:	mov    ecx,DWORD PTR [ebp+0x8]
64004c79:	pop    edi
64004c7a:	mov    DWORD PTR [ecx],edx
64004c7c:	mov    eax,DWORD PTR [eax+0x4]
64004c7f:	pop    esi
64004c80:	mov    DWORD PTR [ecx+0x4],eax
64004c83:	mov    eax,ecx
64004c85:	pop    ebx
64004c86:	mov    esp,ebp
64004c88:	pop    ebp
64004c89:	ret    0x10
64004c8c:	int3   
64004c8d:	int3   
64004c8e:	int3   
64004c8f:	int3   
64004c90:	mov    eax,DWORD PTR [esp+0x8]
64004c94:	cmp    DWORD PTR [eax+0x18],0x8
64004c98:	mov    ecx,DWORD PTR [eax+0x14]
64004c9b:	jb     0x64004ca2
64004c9d:	mov    eax,DWORD PTR [eax+0x4]
64004ca0:	jmp    0x64004ca5
64004ca2:	add    eax,0x4
64004ca5:	push   ecx
64004ca6:	mov    ecx,DWORD PTR [esp+0x8]
64004caa:	push   eax
64004cab:	mov    eax,DWORD PTR [ecx+0x14]
64004cae:	push   eax
64004caf:	push   0x0
64004cb1:	call   0x64006740
64004cb6:	xor    ecx,ecx
64004cb8:	test   eax,eax
64004cba:	setl   cl
64004cbd:	mov    al,cl
64004cbf:	ret    0x8
64004cc2:	int3   
64004cc3:	int3   
64004cc4:	int3   
64004cc5:	int3   
64004cc6:	int3   
64004cc7:	int3   
64004cc8:	int3   
64004cc9:	int3   
64004cca:	int3   
64004ccb:	int3   
64004ccc:	int3   
64004ccd:	int3   
64004cce:	int3   
64004ccf:	int3   
64004cd0:	push   0xffffffff
64004cd2:	push   0x6401eed8
64004cd7:	mov    eax,fs:0x0
64004cdd:	push   eax
64004cde:	push   ecx
64004cdf:	push   esi
64004ce0:	push   edi
64004ce1:	mov    eax,ds:0x64028038
64004ce6:	xor    eax,esp
64004ce8:	push   eax
64004ce9:	lea    eax,[esp+0x10]
64004ced:	mov    fs:0x0,eax
64004cf3:	mov    esi,ecx
64004cf5:	mov    DWORD PTR [esp+0xc],esi
64004cf9:	mov    eax,DWORD PTR [esp+0x20]
64004cfd:	xor    edi,edi
64004cff:	push   0xffffffff
64004d01:	push   edi
64004d02:	mov    DWORD PTR [esi+0x18],0x7
64004d09:	mov    DWORD PTR [esi+0x14],edi
64004d0c:	push   eax
64004d0d:	mov    WORD PTR [esi+0x4],di
64004d11:	call   0x640048a0
64004d16:	mov    edx,DWORD PTR [esp+0x24]
64004d1a:	push   0xffffffff
64004d1c:	lea    ecx,[esi+0x1c]
64004d1f:	mov    DWORD PTR [esp+0x1c],edi
64004d23:	push   edi
64004d24:	mov    DWORD PTR [ecx+0x18],0x7
64004d2b:	mov    DWORD PTR [ecx+0x14],edi
64004d2e:	push   edx
64004d2f:	mov    WORD PTR [ecx+0x4],di
64004d33:	call   0x640048a0
64004d38:	mov    eax,esi
64004d3a:	mov    ecx,DWORD PTR [esp+0x10]
64004d3e:	mov    DWORD PTR fs:0x0,ecx
64004d45:	pop    ecx
64004d46:	pop    edi
64004d47:	pop    esi
64004d48:	add    esp,0x10
64004d4b:	ret    0x8
64004d4e:	int3   
64004d4f:	int3   
64004d50:	push   ebp
64004d51:	mov    ebp,esp
64004d53:	and    esp,0xfffffff8
64004d56:	sub    esp,0x24
64004d59:	push   ebx
64004d5a:	push   esi
64004d5b:	push   edi
64004d5c:	mov    edi,ecx
64004d5e:	mov    eax,DWORD PTR [edi+0x4]
64004d61:	mov    esi,DWORD PTR [eax+0x4]
64004d64:	cmp    BYTE PTR [esi+0x45],0x0
64004d68:	mov    ecx,eax
64004d6a:	mov    al,0x1
64004d6c:	mov    DWORD PTR [esp+0x28],edi
64004d70:	mov    DWORD PTR [esp+0x10],ecx
64004d74:	mov    BYTE PTR [esp+0x18],al
64004d78:	jne    0x64004e18
64004d7e:	mov    edx,DWORD PTR [ebp+0xc]
64004d81:	mov    eax,DWORD PTR [edx+0x14]
64004d84:	mov    ecx,DWORD PTR [edx+0x18]
64004d87:	mov    DWORD PTR [esp+0x20],eax
64004d8b:	mov    DWORD PTR [esp+0x1c],eax
64004d8f:	mov    DWORD PTR [esp+0x24],ecx
64004d93:	jmp    0x64004d9c
64004d95:	mov    edx,DWORD PTR [ebp+0xc]
64004d98:	mov    eax,DWORD PTR [esp+0x1c]
64004d9c:	cmp    DWORD PTR [esi+0x24],0x10
64004da0:	mov    ebx,DWORD PTR [esi+0x20]
64004da3:	mov    DWORD PTR [esp+0x10],esi
64004da7:	jb     0x64004dae
64004da9:	mov    ecx,DWORD PTR [esi+0x10]
64004dac:	jmp    0x64004db1
64004dae:	lea    ecx,[esi+0x10]
64004db1:	mov    edi,DWORD PTR [esp+0x20]
64004db5:	cmp    eax,edi
64004db7:	mov    DWORD PTR [esp+0x14],ecx
64004dbb:	jae    0x64004dbf
64004dbd:	mov    edi,eax
64004dbf:	cmp    edi,ebx
64004dc1:	mov    ecx,edi
64004dc3:	jb     0x64004dc7
64004dc5:	mov    ecx,ebx
64004dc7:	cmp    DWORD PTR [esp+0x24],0x10
64004dcc:	lea    eax,[edx+0x4]
64004dcf:	jb     0x64004dd3
64004dd1:	mov    eax,DWORD PTR [eax]
64004dd3:	mov    edx,DWORD PTR [esp+0x14]
64004dd7:	push   ecx
64004dd8:	push   edx
64004dd9:	push   eax
64004dda:	call   0x640024a0
64004ddf:	add    esp,0xc
64004de2:	test   eax,eax
64004de4:	jne    0x64004df8
64004de6:	cmp    edi,ebx
64004de8:	jae    0x64004def
64004dea:	or     eax,0xffffffff
64004ded:	jmp    0x64004df6
64004def:	xor    eax,eax
64004df1:	cmp    edi,ebx
64004df3:	setne  al
64004df6:	test   eax,eax
64004df8:	setl   al
64004dfb:	test   al,al
64004dfd:	mov    BYTE PTR [esp+0x18],al
64004e01:	je     0x64004e07
64004e03:	mov    esi,DWORD PTR [esi]
64004e05:	jmp    0x64004e0a
64004e07:	mov    esi,DWORD PTR [esi+0x8]
64004e0a:	cmp    BYTE PTR [esi+0x45],0x0
64004e0e:	je     0x64004d95
64004e10:	mov    edi,DWORD PTR [esp+0x28]
64004e14:	mov    ecx,DWORD PTR [esp+0x10]
64004e18:	test   al,al
64004e1a:	mov    esi,ecx
64004e1c:	mov    DWORD PTR [esp+0x2c],esi
64004e20:	mov    DWORD PTR [esp+0x28],edi
64004e24:	je     0x64004e69
64004e26:	mov    eax,DWORD PTR [edi+0x4]
64004e29:	cmp    ecx,DWORD PTR [eax]
64004e2b:	jne    0x64004e5c
64004e2d:	mov    edx,DWORD PTR [ebp+0xc]
64004e30:	push   edx
64004e31:	push   ecx
64004e32:	push   0x1
64004e34:	lea    eax,[esp+0x34]
64004e38:	push   eax
64004e39:	mov    ecx,edi
64004e3b:	call   0x64004ee0
64004e40:	mov    ecx,eax
64004e42:	mov    edx,DWORD PTR [ecx]
64004e44:	mov    eax,DWORD PTR [ebp+0x8]
64004e47:	mov    ecx,DWORD PTR [ecx+0x4]
64004e4a:	mov    DWORD PTR [eax+0x4],ecx
64004e4d:	mov    BYTE PTR [eax+0x8],0x1
64004e51:	mov    DWORD PTR [eax],edx
64004e53:	pop    edi
64004e54:	pop    esi
64004e55:	pop    ebx
64004e56:	mov    esp,ebp
64004e58:	pop    ebp
64004e59:	ret    0x8
64004e5c:	lea    ecx,[esp+0x28]
64004e60:	call   0x64006350
64004e65:	mov    esi,DWORD PTR [esp+0x2c]
64004e69:	mov    ebx,DWORD PTR [ebp+0xc]
64004e6c:	cmp    DWORD PTR [ebx+0x18],0x10
64004e70:	mov    edx,DWORD PTR [ebx+0x14]
64004e73:	lea    ecx,[esi+0xc]
64004e76:	jb     0x64004e7d
64004e78:	mov    eax,DWORD PTR [ebx+0x4]
64004e7b:	jmp    0x64004e80
64004e7d:	lea    eax,[ebx+0x4]
64004e80:	push   edx
64004e81:	mov    edx,DWORD PTR [ecx+0x14]
64004e84:	push   eax
64004e85:	push   edx
64004e86:	push   0x0
64004e88:	call   0x64003dd0
64004e8d:	test   eax,eax
64004e8f:	jge    0x64004ec4
64004e91:	mov    eax,DWORD PTR [esp+0x10]
64004e95:	mov    ecx,DWORD PTR [esp+0x18]
64004e99:	push   ebx
64004e9a:	push   eax
64004e9b:	push   ecx
64004e9c:	lea    edx,[esp+0x34]
64004ea0:	push   edx
64004ea1:	mov    ecx,edi
64004ea3:	call   0x64004ee0
64004ea8:	mov    ecx,eax
64004eaa:	mov    edx,DWORD PTR [ecx]
64004eac:	mov    eax,DWORD PTR [ebp+0x8]
64004eaf:	mov    ecx,DWORD PTR [ecx+0x4]
64004eb2:	mov    DWORD PTR [eax+0x4],ecx
64004eb5:	mov    BYTE PTR [eax+0x8],0x1
64004eb9:	mov    DWORD PTR [eax],edx
64004ebb:	pop    edi
64004ebc:	pop    esi
64004ebd:	pop    ebx
64004ebe:	mov    esp,ebp
64004ec0:	pop    ebp
64004ec1:	ret    0x8
64004ec4:	mov    eax,DWORD PTR [ebp+0x8]
64004ec7:	mov    edx,DWORD PTR [esp+0x28]
64004ecb:	pop    edi
64004ecc:	mov    DWORD PTR [eax+0x4],esi
64004ecf:	pop    esi
64004ed0:	mov    BYTE PTR [eax+0x8],0x0
64004ed4:	mov    DWORD PTR [eax],edx
64004ed6:	pop    ebx
64004ed7:	mov    esp,ebp
64004ed9:	pop    ebp
64004eda:	ret    0x8
64004edd:	int3   
64004ede:	int3   
64004edf:	int3   
64004ee0:	push   ebp
64004ee1:	mov    ebp,esp
64004ee3:	and    esp,0xfffffff8
64004ee6:	push   0xffffffff
64004ee8:	push   0x6401eff8
64004eed:	mov    eax,fs:0x0
64004ef3:	push   eax
64004ef4:	sub    esp,0x50
64004ef7:	push   ebx
64004ef8:	push   esi
64004ef9:	push   edi
64004efa:	mov    eax,ds:0x64028038
64004eff:	xor    eax,esp
64004f01:	push   eax
64004f02:	lea    eax,[esp+0x60]
64004f06:	mov    fs:0x0,eax
64004f0c:	mov    ebx,ecx
64004f0e:	cmp    DWORD PTR [ebx+0x8],0x4924923
64004f15:	jb     0x64004f63
64004f17:	push   0x13
64004f19:	xor    esi,esi
64004f1b:	push   0x64023964
64004f20:	lea    ecx,[esp+0x20]
64004f24:	mov    DWORD PTR [esp+0x38],0xf
64004f2c:	mov    DWORD PTR [esp+0x34],esi
64004f30:	mov    BYTE PTR [esp+0x24],0x0
64004f35:	call   0x64001bb0
64004f3a:	lea    eax,[esp+0x18]
64004f3e:	push   eax
64004f3f:	lea    ecx,[esp+0x38]
64004f43:	mov    DWORD PTR [esp+0x6c],esi
64004f47:	call   0x64002530
64004f4c:	push   0x64025ea8
64004f51:	lea    ecx,[esp+0x38]
64004f55:	push   ecx
64004f56:	mov    DWORD PTR [esp+0x3c],0x6402130c
64004f5e:	call   0x6400ef3d
64004f63:	mov    edx,DWORD PTR [ebp+0x14]
64004f66:	mov    eax,DWORD PTR [ebx+0x4]
64004f69:	mov    esi,DWORD PTR [ebp+0x10]
64004f6c:	push   0x0
64004f6e:	push   edx
64004f6f:	push   eax
64004f70:	push   esi
64004f71:	push   eax
64004f72:	call   0x64005850
64004f77:	mov    ecx,DWORD PTR [ebx+0x4]
64004f7a:	add    DWORD PTR [ebx+0x8],0x1
64004f7e:	cmp    esi,ecx
64004f80:	mov    edx,eax
64004f82:	mov    DWORD PTR [esp+0x14],edx
64004f86:	jne    0x64004f98
64004f88:	mov    DWORD PTR [ecx+0x4],edx
64004f8b:	mov    eax,DWORD PTR [ebx+0x4]
64004f8e:	mov    DWORD PTR [eax],edx
64004f90:	mov    ecx,DWORD PTR [ebx+0x4]
64004f93:	mov    DWORD PTR [ecx+0x8],edx
64004f96:	jmp    0x64004fb9
64004f98:	cmp    BYTE PTR [ebp+0xc],0x0
64004f9c:	je     0x64004fab
64004f9e:	mov    DWORD PTR [esi],edx
64004fa0:	mov    eax,DWORD PTR [ebx+0x4]
64004fa3:	cmp    esi,DWORD PTR [eax]
64004fa5:	jne    0x64004fb9
64004fa7:	mov    DWORD PTR [eax],edx
64004fa9:	jmp    0x64004fb9
64004fab:	mov    DWORD PTR [esi+0x8],edx
64004fae:	mov    eax,DWORD PTR [ebx+0x4]
64004fb1:	cmp    esi,DWORD PTR [eax+0x8]
64004fb4:	jne    0x64004fb9
64004fb6:	mov    DWORD PTR [eax+0x8],edx
64004fb9:	mov    eax,DWORD PTR [edx+0x4]
64004fbc:	cmp    BYTE PTR [eax+0x44],0x0
64004fc0:	lea    ecx,[edx+0x4]
64004fc3:	jne    0x64005150
64004fc9:	lea    esp,[esp+0x0]
64004fd0:	mov    esi,DWORD PTR [ecx]
64004fd2:	mov    edi,DWORD PTR [esi+0x4]
64004fd5:	cmp    esi,DWORD PTR [edi]
64004fd7:	jne    0x64005088
64004fdd:	mov    edi,DWORD PTR [edi+0x8]
64004fe0:	cmp    BYTE PTR [edi+0x44],0x0
64004fe4:	je     0x64005090
64004fea:	cmp    edx,DWORD PTR [esi+0x8]
64004fed:	jne    0x6400502b
64004fef:	mov    edx,esi
64004ff1:	mov    esi,DWORD PTR [edx+0x8]
64004ff4:	mov    ecx,DWORD PTR [esi]
64004ff6:	mov    DWORD PTR [edx+0x8],ecx
64004ff9:	mov    ecx,DWORD PTR [esi]
64004ffb:	cmp    BYTE PTR [ecx+0x45],0x0
64004fff:	jne    0x64005004
64005001:	mov    DWORD PTR [ecx+0x4],edx
64005004:	mov    eax,DWORD PTR [edx+0x4]
64005007:	lea    ecx,[edx+0x4]
6400500a:	mov    DWORD PTR [esi+0x4],eax
6400500d:	mov    edi,DWORD PTR [ebx+0x4]
64005010:	cmp    edx,DWORD PTR [edi+0x4]
64005013:	jne    0x6400501a
64005015:	mov    DWORD PTR [edi+0x4],esi
64005018:	jmp    0x64005027
6400501a:	mov    edi,DWORD PTR [ecx]
6400501c:	cmp    edx,DWORD PTR [edi]
6400501e:	jne    0x64005024
64005020:	mov    DWORD PTR [edi],esi
64005022:	jmp    0x64005027
64005024:	mov    DWORD PTR [edi+0x8],esi
64005027:	mov    DWORD PTR [esi],edx
64005029:	mov    DWORD PTR [ecx],esi
6400502b:	mov    eax,DWORD PTR [ecx]
6400502d:	mov    BYTE PTR [eax+0x44],0x1
64005031:	mov    eax,DWORD PTR [ecx]
64005033:	mov    eax,DWORD PTR [eax+0x4]
64005036:	mov    BYTE PTR [eax+0x44],0x0
6400503a:	mov    ecx,DWORD PTR [ecx]
6400503c:	mov    ecx,DWORD PTR [ecx+0x4]
6400503f:	mov    esi,DWORD PTR [ecx]
64005041:	mov    eax,DWORD PTR [esi+0x8]
64005044:	mov    DWORD PTR [ecx],eax
64005046:	mov    edi,DWORD PTR [esi+0x8]
64005049:	cmp    BYTE PTR [edi+0x45],0x0
6400504d:	jne    0x64005052
6400504f:	mov    DWORD PTR [edi+0x4],ecx
64005052:	mov    eax,DWORD PTR [ecx+0x4]
64005055:	mov    DWORD PTR [esi+0x4],eax
64005058:	mov    edi,DWORD PTR [ebx+0x4]
6400505b:	cmp    ecx,DWORD PTR [edi+0x4]
6400505e:	jne    0x6400506b
64005060:	mov    DWORD PTR [edi+0x4],esi
64005063:	mov    DWORD PTR [esi+0x8],ecx
64005066:	jmp    0x64005139
6400506b:	mov    edi,DWORD PTR [ecx+0x4]
6400506e:	cmp    ecx,DWORD PTR [edi+0x8]
64005071:	jne    0x6400507e
64005073:	mov    DWORD PTR [edi+0x8],esi
64005076:	mov    DWORD PTR [esi+0x8],ecx
64005079:	jmp    0x64005139
6400507e:	mov    DWORD PTR [edi],esi
64005080:	mov    DWORD PTR [esi+0x8],ecx
64005083:	jmp    0x64005139
64005088:	mov    edi,DWORD PTR [edi]
6400508a:	cmp    BYTE PTR [edi+0x44],0x0
6400508e:	jne    0x640050ad
64005090:	mov    edx,esi
64005092:	mov    BYTE PTR [edx+0x44],0x1
64005096:	mov    BYTE PTR [edi+0x44],0x1
6400509a:	mov    eax,DWORD PTR [ecx]
6400509c:	mov    edx,DWORD PTR [eax+0x4]
6400509f:	mov    BYTE PTR [edx+0x44],0x0
640050a3:	mov    eax,DWORD PTR [ecx]
640050a5:	mov    edx,DWORD PTR [eax+0x4]
640050a8:	jmp    0x6400513c
640050ad:	cmp    edx,DWORD PTR [esi]
640050af:	jne    0x640050ef
640050b1:	mov    edx,esi
640050b3:	mov    esi,DWORD PTR [edx]
640050b5:	mov    ecx,DWORD PTR [esi+0x8]
640050b8:	mov    DWORD PTR [edx],ecx
640050ba:	mov    ecx,DWORD PTR [esi+0x8]
640050bd:	cmp    BYTE PTR [ecx+0x45],0x0
640050c1:	jne    0x640050c6
640050c3:	mov    DWORD PTR [ecx+0x4],edx
640050c6:	mov    eax,DWORD PTR [edx+0x4]
640050c9:	lea    ecx,[edx+0x4]
640050cc:	mov    DWORD PTR [esi+0x4],eax
640050cf:	mov    edi,DWORD PTR [ebx+0x4]
640050d2:	cmp    edx,DWORD PTR [edi+0x4]
640050d5:	jne    0x640050dc
640050d7:	mov    DWORD PTR [edi+0x4],esi
640050da:	jmp    0x640050ea
640050dc:	mov    edi,DWORD PTR [ecx]
640050de:	cmp    edx,DWORD PTR [edi+0x8]
640050e1:	jne    0x640050e8
640050e3:	mov    DWORD PTR [edi+0x8],esi
640050e6:	jmp    0x640050ea
640050e8:	mov    DWORD PTR [edi],esi
640050ea:	mov    DWORD PTR [esi+0x8],edx
640050ed:	mov    DWORD PTR [ecx],esi
640050ef:	mov    eax,DWORD PTR [ecx]
640050f1:	mov    BYTE PTR [eax+0x44],0x1
640050f5:	mov    eax,DWORD PTR [ecx]
640050f7:	mov    eax,DWORD PTR [eax+0x4]
640050fa:	mov    BYTE PTR [eax+0x44],0x0
640050fe:	mov    ecx,DWORD PTR [ecx]
64005100:	mov    ecx,DWORD PTR [ecx+0x4]
64005103:	mov    esi,DWORD PTR [ecx+0x8]
64005106:	mov    eax,DWORD PTR [esi]
64005108:	mov    DWORD PTR [ecx+0x8],eax
6400510b:	mov    edi,DWORD PTR [esi]
6400510d:	cmp    BYTE PTR [edi+0x45],0x0
64005111:	jne    0x64005116
64005113:	mov    DWORD PTR [edi+0x4],ecx
64005116:	mov    eax,DWORD PTR [ecx+0x4]
64005119:	mov    DWORD PTR [esi+0x4],eax
6400511c:	mov    edi,DWORD PTR [ebx+0x4]
6400511f:	cmp    ecx,DWORD PTR [edi+0x4]
64005122:	jne    0x64005129
64005124:	mov    DWORD PTR [edi+0x4],esi
64005127:	jmp    0x64005137
64005129:	mov    edi,DWORD PTR [ecx+0x4]
6400512c:	cmp    ecx,DWORD PTR [edi]
6400512e:	jne    0x64005134
64005130:	mov    DWORD PTR [edi],esi
64005132:	jmp    0x64005137
64005134:	mov    DWORD PTR [edi+0x8],esi
64005137:	mov    DWORD PTR [esi],ecx
64005139:	mov    DWORD PTR [ecx+0x4],esi
6400513c:	mov    eax,DWORD PTR [edx+0x4]
6400513f:	cmp    BYTE PTR [eax+0x44],0x0
64005143:	lea    ecx,[edx+0x4]
64005146:	je     0x64004fd0
6400514c:	mov    edx,DWORD PTR [esp+0x14]
64005150:	mov    ecx,DWORD PTR [ebx+0x4]
64005153:	mov    eax,DWORD PTR [ecx+0x4]
64005156:	mov    BYTE PTR [eax+0x44],0x1
6400515a:	mov    eax,DWORD PTR [ebp+0x8]
6400515d:	mov    DWORD PTR [eax+0x4],edx
64005160:	mov    DWORD PTR [eax],ebx
64005162:	mov    ecx,DWORD PTR [esp+0x60]
64005166:	mov    DWORD PTR fs:0x0,ecx
6400516d:	pop    ecx
6400516e:	pop    edi
6400516f:	pop    esi
64005170:	pop    ebx
64005171:	mov    esp,ebp
64005173:	pop    ebp
64005174:	ret    0x10
64005177:	int3   
64005178:	int3   
64005179:	int3   
6400517a:	int3   
6400517b:	int3   
6400517c:	int3   
6400517d:	int3   
6400517e:	int3   
6400517f:	int3   
64005180:	push   ecx
64005181:	mov    eax,DWORD PTR [ecx+0x4]
64005184:	push   esi
64005185:	mov    esi,DWORD PTR [eax+0x4]
64005188:	cmp    BYTE PTR [esi+0x45],0x0
6400518c:	mov    DWORD PTR [esp+0x4],eax
64005190:	jne    0x64005207
64005192:	mov    eax,DWORD PTR [esp+0xc]
64005196:	mov    ecx,DWORD PTR [eax+0x18]
64005199:	push   ebx
6400519a:	mov    ebx,DWORD PTR [eax+0x14]
6400519d:	push   ebp
6400519e:	push   edi
6400519f:	mov    DWORD PTR [esp+0x18],ecx
640051a3:	lea    ebp,[eax+0x4]
640051a6:	cmp    DWORD PTR [esp+0x18],0x10
640051ab:	jb     0x640051b2
640051ad:	mov    edx,DWORD PTR [ebp+0x0]
640051b0:	jmp    0x640051b4
640051b2:	mov    edx,ebp
640051b4:	mov    edi,DWORD PTR [esi+0x20]
640051b7:	mov    eax,edi
640051b9:	cmp    eax,edi
640051bb:	jae    0x640051bd
640051bd:	cmp    edi,ebx
640051bf:	mov    ecx,edi
640051c1:	jb     0x640051c5
640051c3:	mov    ecx,ebx
640051c5:	cmp    DWORD PTR [esi+0x24],0x10
640051c9:	jb     0x640051d0
640051cb:	mov    eax,DWORD PTR [esi+0x10]
640051ce:	jmp    0x640051d3
640051d0:	lea    eax,[esi+0x10]
640051d3:	push   ecx
640051d4:	push   edx
640051d5:	push   eax
640051d6:	call   0x640024a0
640051db:	add    esp,0xc
640051de:	test   eax,eax
640051e0:	jne    0x640051ed
640051e2:	cmp    edi,ebx
640051e4:	jb     0x640051ef
640051e6:	cmp    edi,ebx
640051e8:	setne  al
640051eb:	test   eax,eax
640051ed:	jge    0x640051f4
640051ef:	mov    esi,DWORD PTR [esi+0x8]
640051f2:	jmp    0x640051fa
640051f4:	mov    DWORD PTR [esp+0x10],esi
640051f8:	mov    esi,DWORD PTR [esi]
640051fa:	cmp    BYTE PTR [esi+0x45],0x0
640051fe:	je     0x640051a6
64005200:	mov    eax,DWORD PTR [esp+0x10]
64005204:	pop    edi
64005205:	pop    ebp
64005206:	pop    ebx
64005207:	pop    esi
64005208:	pop    ecx
64005209:	ret    0x4
6400520c:	int3   
6400520d:	int3   
6400520e:	int3   
6400520f:	int3   
64005210:	push   ebx
64005211:	mov    ebx,DWORD PTR [esp+0x8]
64005215:	push   esi
64005216:	mov    esi,ecx
64005218:	cmp    DWORD PTR [esi+0x14],ebx
6400521b:	push   edi
6400521c:	jae    0x64005223
6400521e:	call   0x6400eb0e
64005223:	mov    eax,DWORD PTR [esi+0x14]
64005226:	mov    edi,DWORD PTR [esp+0x14]
6400522a:	sub    eax,ebx
6400522c:	cmp    eax,edi
6400522e:	jae    0x64005232
64005230:	mov    edi,eax
64005232:	test   edi,edi
64005234:	jbe    0x6400529f
64005236:	mov    ecx,DWORD PTR [esi+0x18]
64005239:	cmp    ecx,0x8
6400523c:	push   ebp
6400523d:	lea    ebp,[esi+0x4]
64005240:	jb     0x6400524b
64005242:	mov    edx,DWORD PTR [ebp+0x0]
64005245:	mov    DWORD PTR [esp+0x14],edx
64005249:	jmp    0x6400524f
6400524b:	mov    DWORD PTR [esp+0x14],ebp
6400524f:	cmp    ecx,0x8
64005252:	jb     0x6400525d
64005254:	mov    edx,DWORD PTR [ebp+0x0]
64005257:	mov    DWORD PTR [esp+0x18],edx
6400525b:	jmp    0x64005261
6400525d:	mov    DWORD PTR [esp+0x18],ebp
64005261:	mov    edx,DWORD PTR [esp+0x14]
64005265:	sub    eax,edi
64005267:	add    eax,eax
64005269:	push   eax
6400526a:	lea    eax,[ebx+edi*1]
6400526d:	lea    eax,[edx+eax*2]
64005270:	sub    ecx,ebx
64005272:	push   eax
64005273:	add    ecx,ecx
64005275:	push   ecx
64005276:	mov    ecx,DWORD PTR [esp+0x24]
6400527a:	lea    edx,[ecx+ebx*2]
6400527d:	push   edx
6400527e:	call   0x6400ed25
64005283:	mov    eax,DWORD PTR [esi+0x14]
64005286:	sub    eax,edi
64005288:	add    esp,0x10
6400528b:	cmp    DWORD PTR [esi+0x18],0x8
6400528f:	mov    DWORD PTR [esi+0x14],eax
64005292:	jb     0x64005297
64005294:	mov    ebp,DWORD PTR [ebp+0x0]
64005297:	mov    WORD PTR [ebp+eax*2+0x0],0x0
6400529e:	pop    ebp
6400529f:	pop    edi
640052a0:	mov    eax,esi
640052a2:	pop    esi
640052a3:	pop    ebx
640052a4:	ret    0x8
640052a7:	int3   
640052a8:	int3   
640052a9:	int3   
640052aa:	int3   
640052ab:	int3   
640052ac:	int3   
640052ad:	int3   
640052ae:	int3   
640052af:	int3   
640052b0:	push   ebp
640052b1:	mov    ebp,esp
640052b3:	and    esp,0xfffffff8
640052b6:	sub    esp,0x14
640052b9:	mov    eax,DWORD PTR [ecx+0x4]
640052bc:	push   ebx
640052bd:	push   esi
640052be:	mov    esi,DWORD PTR [eax+0x4]
640052c1:	cmp    BYTE PTR [esi+0x45],0x0
640052c5:	mov    ebx,eax
640052c7:	mov    al,0x1
640052c9:	push   edi
640052ca:	mov    edi,DWORD PTR [ebp+0xc]
640052cd:	mov    DWORD PTR [esp+0x14],ecx
640052d1:	mov    BYTE PTR [esp+0x10],al
640052d5:	jne    0x64005317
640052d7:	cmp    DWORD PTR [esi+0x24],0x8
640052db:	mov    ecx,DWORD PTR [esi+0x20]
640052de:	mov    ebx,esi
640052e0:	jb     0x640052e7
640052e2:	mov    eax,DWORD PTR [esi+0x10]
640052e5:	jmp    0x640052ea
640052e7:	lea    eax,[esi+0x10]
640052ea:	push   ecx
640052eb:	push   eax
640052ec:	mov    eax,DWORD PTR [edi+0x14]
640052ef:	push   eax
640052f0:	push   0x0
640052f2:	mov    ecx,edi
640052f4:	call   0x64006740
640052f9:	test   eax,eax
640052fb:	setl   al
640052fe:	test   al,al
64005300:	mov    BYTE PTR [esp+0x10],al
64005304:	je     0x6400530a
64005306:	mov    esi,DWORD PTR [esi]
64005308:	jmp    0x6400530d
6400530a:	mov    esi,DWORD PTR [esi+0x8]
6400530d:	cmp    BYTE PTR [esi+0x45],0x0
64005311:	je     0x640052d7
64005313:	mov    ecx,DWORD PTR [esp+0x14]
64005317:	test   al,al
64005319:	mov    esi,ebx
6400531b:	mov    DWORD PTR [esp+0x1c],esi
6400531f:	mov    DWORD PTR [esp+0x18],ecx
64005323:	je     0x64005363
64005325:	mov    edx,DWORD PTR [ecx+0x4]
64005328:	cmp    ebx,DWORD PTR [edx]
6400532a:	jne    0x64005356
6400532c:	push   edi
6400532d:	push   ebx
6400532e:	push   0x1
64005330:	lea    eax,[esp+0x24]
64005334:	push   eax
64005335:	call   0x640053c0
6400533a:	mov    ecx,eax
6400533c:	mov    edx,DWORD PTR [ecx]
6400533e:	mov    eax,DWORD PTR [ebp+0x8]
64005341:	mov    ecx,DWORD PTR [ecx+0x4]
64005344:	mov    DWORD PTR [eax+0x4],ecx
64005347:	mov    BYTE PTR [eax+0x8],0x1
6400534b:	mov    DWORD PTR [eax],edx
6400534d:	pop    edi
6400534e:	pop    esi
6400534f:	pop    ebx
64005350:	mov    esp,ebp
64005352:	pop    ebp
64005353:	ret    0x8
64005356:	lea    ecx,[esp+0x18]
6400535a:	call   0x64006350
6400535f:	mov    esi,DWORD PTR [esp+0x1c]
64005363:	cmp    DWORD PTR [edi+0x18],0x8
64005367:	mov    edx,DWORD PTR [edi+0x14]
6400536a:	lea    ecx,[esi+0xc]
6400536d:	jb     0x64005374
6400536f:	mov    eax,DWORD PTR [edi+0x4]
64005372:	jmp    0x64005377
64005374:	lea    eax,[edi+0x4]
64005377:	push   edx
64005378:	mov    edx,DWORD PTR [ecx+0x14]
6400537b:	push   eax
6400537c:	push   edx
6400537d:	push   0x0
6400537f:	call   0x64006740
64005384:	test   eax,eax
64005386:	jge    0x6400539a
64005388:	mov    eax,DWORD PTR [esp+0x10]
6400538c:	push   edi
6400538d:	push   ebx
6400538e:	lea    ecx,[esp+0x20]
64005392:	push   eax
64005393:	push   ecx
64005394:	mov    ecx,DWORD PTR [esp+0x24]
64005398:	jmp    0x64005335
6400539a:	mov    eax,DWORD PTR [ebp+0x8]
6400539d:	mov    edx,DWORD PTR [esp+0x18]
640053a1:	pop    edi
640053a2:	mov    DWORD PTR [eax+0x4],esi
640053a5:	pop    esi
640053a6:	mov    BYTE PTR [eax+0x8],0x0
640053aa:	mov    DWORD PTR [eax],edx
640053ac:	pop    ebx
640053ad:	mov    esp,ebp
640053af:	pop    ebp
640053b0:	ret    0x8
640053b3:	int3   
640053b4:	int3   
640053b5:	int3   
640053b6:	int3   
640053b7:	int3   
640053b8:	int3   
640053b9:	int3   
640053ba:	int3   
640053bb:	int3   
640053bc:	int3   
640053bd:	int3   
640053be:	int3   
640053bf:	int3   
640053c0:	push   ebp
640053c1:	mov    ebp,esp
640053c3:	and    esp,0xfffffff8
640053c6:	push   0xffffffff
640053c8:	push   0x6401efc8
640053cd:	mov    eax,fs:0x0
640053d3:	push   eax
640053d4:	sub    esp,0x50
640053d7:	push   ebx
640053d8:	push   esi
640053d9:	push   edi
640053da:	mov    eax,ds:0x64028038
640053df:	xor    eax,esp
640053e1:	push   eax
640053e2:	lea    eax,[esp+0x60]
640053e6:	mov    fs:0x0,eax
640053ec:	mov    ebx,ecx
640053ee:	cmp    DWORD PTR [ebx+0x8],0x4924923
640053f5:	jb     0x64005443
640053f7:	push   0x13
640053f9:	xor    esi,esi
640053fb:	push   0x64023964
64005400:	lea    ecx,[esp+0x20]
64005404:	mov    DWORD PTR [esp+0x38],0xf
6400540c:	mov    DWORD PTR [esp+0x34],esi
64005410:	mov    BYTE PTR [esp+0x24],0x0
64005415:	call   0x64001bb0
6400541a:	lea    eax,[esp+0x18]
6400541e:	push   eax
6400541f:	lea    ecx,[esp+0x38]
64005423:	mov    DWORD PTR [esp+0x6c],esi
64005427:	call   0x64002530
6400542c:	push   0x64025ea8
64005431:	lea    ecx,[esp+0x38]
64005435:	push   ecx
64005436:	mov    DWORD PTR [esp+0x3c],0x6402130c
6400543e:	call   0x6400ef3d
64005443:	mov    edx,DWORD PTR [ebp+0x14]
64005446:	mov    eax,DWORD PTR [ebx+0x4]
64005449:	mov    esi,DWORD PTR [ebp+0x10]
6400544c:	push   0x0
6400544e:	push   edx
6400544f:	push   eax
64005450:	push   esi
64005451:	push   eax
64005452:	call   0x64005bd0
64005457:	mov    ecx,DWORD PTR [ebx+0x4]
6400545a:	add    DWORD PTR [ebx+0x8],0x1
6400545e:	cmp    esi,ecx
64005460:	mov    edx,eax
64005462:	mov    DWORD PTR [esp+0x14],edx
64005466:	jne    0x64005478
64005468:	mov    DWORD PTR [ecx+0x4],edx
6400546b:	mov    eax,DWORD PTR [ebx+0x4]
6400546e:	mov    DWORD PTR [eax],edx
64005470:	mov    ecx,DWORD PTR [ebx+0x4]
64005473:	mov    DWORD PTR [ecx+0x8],edx
64005476:	jmp    0x64005499
64005478:	cmp    BYTE PTR [ebp+0xc],0x0
6400547c:	je     0x6400548b
6400547e:	mov    DWORD PTR [esi],edx
64005480:	mov    eax,DWORD PTR [ebx+0x4]
64005483:	cmp    esi,DWORD PTR [eax]
64005485:	jne    0x64005499
64005487:	mov    DWORD PTR [eax],edx
64005489:	jmp    0x64005499
6400548b:	mov    DWORD PTR [esi+0x8],edx
6400548e:	mov    eax,DWORD PTR [ebx+0x4]
64005491:	cmp    esi,DWORD PTR [eax+0x8]
64005494:	jne    0x64005499
64005496:	mov    DWORD PTR [eax+0x8],edx
64005499:	mov    eax,DWORD PTR [edx+0x4]
6400549c:	cmp    BYTE PTR [eax+0x44],0x0
640054a0:	lea    ecx,[edx+0x4]
640054a3:	jne    0x64005630
640054a9:	lea    esp,[esp+0x0]
640054b0:	mov    esi,DWORD PTR [ecx]
640054b2:	mov    edi,DWORD PTR [esi+0x4]
640054b5:	cmp    esi,DWORD PTR [edi]
640054b7:	jne    0x64005568
640054bd:	mov    edi,DWORD PTR [edi+0x8]
640054c0:	cmp    BYTE PTR [edi+0x44],0x0
640054c4:	je     0x64005570
640054ca:	cmp    edx,DWORD PTR [esi+0x8]
640054cd:	jne    0x6400550b
640054cf:	mov    edx,esi
640054d1:	mov    esi,DWORD PTR [edx+0x8]
640054d4:	mov    ecx,DWORD PTR [esi]
640054d6:	mov    DWORD PTR [edx+0x8],ecx
640054d9:	mov    ecx,DWORD PTR [esi]
640054db:	cmp    BYTE PTR [ecx+0x45],0x0
640054df:	jne    0x640054e4
640054e1:	mov    DWORD PTR [ecx+0x4],edx
640054e4:	mov    eax,DWORD PTR [edx+0x4]
640054e7:	lea    ecx,[edx+0x4]
640054ea:	mov    DWORD PTR [esi+0x4],eax
640054ed:	mov    edi,DWORD PTR [ebx+0x4]
640054f0:	cmp    edx,DWORD PTR [edi+0x4]
640054f3:	jne    0x640054fa
640054f5:	mov    DWORD PTR [edi+0x4],esi
640054f8:	jmp    0x64005507
640054fa:	mov    edi,DWORD PTR [ecx]
640054fc:	cmp    edx,DWORD PTR [edi]
640054fe:	jne    0x64005504
64005500:	mov    DWORD PTR [edi],esi
64005502:	jmp    0x64005507
64005504:	mov    DWORD PTR [edi+0x8],esi
64005507:	mov    DWORD PTR [esi],edx
64005509:	mov    DWORD PTR [ecx],esi
6400550b:	mov    eax,DWORD PTR [ecx]
6400550d:	mov    BYTE PTR [eax+0x44],0x1
64005511:	mov    eax,DWORD PTR [ecx]
64005513:	mov    eax,DWORD PTR [eax+0x4]
64005516:	mov    BYTE PTR [eax+0x44],0x0
6400551a:	mov    ecx,DWORD PTR [ecx]
6400551c:	mov    ecx,DWORD PTR [ecx+0x4]
6400551f:	mov    esi,DWORD PTR [ecx]
64005521:	mov    eax,DWORD PTR [esi+0x8]
64005524:	mov    DWORD PTR [ecx],eax
64005526:	mov    edi,DWORD PTR [esi+0x8]
64005529:	cmp    BYTE PTR [edi+0x45],0x0
6400552d:	jne    0x64005532
6400552f:	mov    DWORD PTR [edi+0x4],ecx
64005532:	mov    eax,DWORD PTR [ecx+0x4]
64005535:	mov    DWORD PTR [esi+0x4],eax
64005538:	mov    edi,DWORD PTR [ebx+0x4]
6400553b:	cmp    ecx,DWORD PTR [edi+0x4]
6400553e:	jne    0x6400554b
64005540:	mov    DWORD PTR [edi+0x4],esi
64005543:	mov    DWORD PTR [esi+0x8],ecx
64005546:	jmp    0x64005619
6400554b:	mov    edi,DWORD PTR [ecx+0x4]
6400554e:	cmp    ecx,DWORD PTR [edi+0x8]
64005551:	jne    0x6400555e
64005553:	mov    DWORD PTR [edi+0x8],esi
64005556:	mov    DWORD PTR [esi+0x8],ecx
64005559:	jmp    0x64005619
6400555e:	mov    DWORD PTR [edi],esi
64005560:	mov    DWORD PTR [esi+0x8],ecx
64005563:	jmp    0x64005619
64005568:	mov    edi,DWORD PTR [edi]
6400556a:	cmp    BYTE PTR [edi+0x44],0x0
6400556e:	jne    0x6400558d
64005570:	mov    edx,esi
64005572:	mov    BYTE PTR [edx+0x44],0x1
64005576:	mov    BYTE PTR [edi+0x44],0x1
6400557a:	mov    eax,DWORD PTR [ecx]
6400557c:	mov    edx,DWORD PTR [eax+0x4]
6400557f:	mov    BYTE PTR [edx+0x44],0x0
64005583:	mov    eax,DWORD PTR [ecx]
64005585:	mov    edx,DWORD PTR [eax+0x4]
64005588:	jmp    0x6400561c
6400558d:	cmp    edx,DWORD PTR [esi]
6400558f:	jne    0x640055cf
64005591:	mov    edx,esi
64005593:	mov    esi,DWORD PTR [edx]
64005595:	mov    ecx,DWORD PTR [esi+0x8]
64005598:	mov    DWORD PTR [edx],ecx
6400559a:	mov    ecx,DWORD PTR [esi+0x8]
6400559d:	cmp    BYTE PTR [ecx+0x45],0x0
640055a1:	jne    0x640055a6
640055a3:	mov    DWORD PTR [ecx+0x4],edx
640055a6:	mov    eax,DWORD PTR [edx+0x4]
640055a9:	lea    ecx,[edx+0x4]
640055ac:	mov    DWORD PTR [esi+0x4],eax
640055af:	mov    edi,DWORD PTR [ebx+0x4]
640055b2:	cmp    edx,DWORD PTR [edi+0x4]
640055b5:	jne    0x640055bc
640055b7:	mov    DWORD PTR [edi+0x4],esi
640055ba:	jmp    0x640055ca
640055bc:	mov    edi,DWORD PTR [ecx]
640055be:	cmp    edx,DWORD PTR [edi+0x8]
640055c1:	jne    0x640055c8
640055c3:	mov    DWORD PTR [edi+0x8],esi
640055c6:	jmp    0x640055ca
640055c8:	mov    DWORD PTR [edi],esi
640055ca:	mov    DWORD PTR [esi+0x8],edx
640055cd:	mov    DWORD PTR [ecx],esi
640055cf:	mov    eax,DWORD PTR [ecx]
640055d1:	mov    BYTE PTR [eax+0x44],0x1
640055d5:	mov    eax,DWORD PTR [ecx]
640055d7:	mov    eax,DWORD PTR [eax+0x4]
640055da:	mov    BYTE PTR [eax+0x44],0x0
640055de:	mov    ecx,DWORD PTR [ecx]
640055e0:	mov    ecx,DWORD PTR [ecx+0x4]
640055e3:	mov    esi,DWORD PTR [ecx+0x8]
640055e6:	mov    eax,DWORD PTR [esi]
640055e8:	mov    DWORD PTR [ecx+0x8],eax
640055eb:	mov    edi,DWORD PTR [esi]
640055ed:	cmp    BYTE PTR [edi+0x45],0x0
640055f1:	jne    0x640055f6
640055f3:	mov    DWORD PTR [edi+0x4],ecx
640055f6:	mov    eax,DWORD PTR [ecx+0x4]
640055f9:	mov    DWORD PTR [esi+0x4],eax
640055fc:	mov    edi,DWORD PTR [ebx+0x4]
640055ff:	cmp    ecx,DWORD PTR [edi+0x4]
64005602:	jne    0x64005609
64005604:	mov    DWORD PTR [edi+0x4],esi
64005607:	jmp    0x64005617
64005609:	mov    edi,DWORD PTR [ecx+0x4]
6400560c:	cmp    ecx,DWORD PTR [edi]
6400560e:	jne    0x64005614
64005610:	mov    DWORD PTR [edi],esi
64005612:	jmp    0x64005617
64005614:	mov    DWORD PTR [edi+0x8],esi
64005617:	mov    DWORD PTR [esi],ecx
64005619:	mov    DWORD PTR [ecx+0x4],esi
6400561c:	mov    eax,DWORD PTR [edx+0x4]
6400561f:	cmp    BYTE PTR [eax+0x44],0x0
64005623:	lea    ecx,[edx+0x4]
64005626:	je     0x640054b0
6400562c:	mov    edx,DWORD PTR [esp+0x14]
64005630:	mov    ecx,DWORD PTR [ebx+0x4]
64005633:	mov    eax,DWORD PTR [ecx+0x4]
64005636:	mov    BYTE PTR [eax+0x44],0x1
6400563a:	mov    eax,DWORD PTR [ebp+0x8]
6400563d:	mov    DWORD PTR [eax+0x4],edx
64005640:	mov    DWORD PTR [eax],ebx
64005642:	mov    ecx,DWORD PTR [esp+0x60]
64005646:	mov    DWORD PTR fs:0x0,ecx
6400564d:	pop    ecx
6400564e:	pop    edi
6400564f:	pop    esi
64005650:	pop    ebx
64005651:	mov    esp,ebp
64005653:	pop    ebp
64005654:	ret    0x10
64005657:	int3   
64005658:	int3   
64005659:	int3   
6400565a:	int3   
6400565b:	int3   
6400565c:	int3   
6400565d:	int3   
6400565e:	int3   
6400565f:	int3   
64005660:	mov    eax,DWORD PTR [ecx+0x4]
64005663:	push   ebp
64005664:	push   esi
64005665:	mov    esi,DWORD PTR [eax+0x4]
64005668:	cmp    BYTE PTR [esi+0x45],0x0
6400566c:	mov    ebp,eax
6400566e:	jne    0x640056b6
64005670:	push   ebx
64005671:	push   edi
64005672:	mov    edi,DWORD PTR [esp+0x14]
64005676:	lea    ebx,[edi+0x4]
64005679:	lea    esp,[esp+0x0]
64005680:	cmp    DWORD PTR [edi+0x18],0x8
64005684:	mov    edx,DWORD PTR [edi+0x14]
64005687:	lea    ecx,[esi+0xc]
6400568a:	jb     0x64005690
6400568c:	mov    eax,DWORD PTR [ebx]
6400568e:	jmp    0x64005692
64005690:	mov    eax,ebx
64005692:	push   edx
64005693:	push   eax
64005694:	mov    eax,DWORD PTR [ecx+0x14]
64005697:	push   eax
64005698:	push   0x0
6400569a:	call   0x64006740
6400569f:	test   eax,eax
640056a1:	jge    0x640056a8
640056a3:	mov    esi,DWORD PTR [esi+0x8]
640056a6:	jmp    0x640056ac
640056a8:	mov    ebp,esi
640056aa:	mov    esi,DWORD PTR [esi]
640056ac:	cmp    BYTE PTR [esi+0x45],0x0
640056b0:	je     0x64005680
640056b2:	pop    edi
640056b3:	mov    eax,ebp
640056b5:	pop    ebx
640056b6:	pop    esi
640056b7:	pop    ebp
640056b8:	ret    0x4
640056bb:	int3   
640056bc:	int3   
640056bd:	int3   
640056be:	int3   
640056bf:	int3   
640056c0:	mov    eax,DWORD PTR [esp+0x4]
640056c4:	push   esi
640056c5:	push   eax
640056c6:	mov    esi,ecx
640056c8:	call   0x64002660
640056cd:	mov    DWORD PTR [esi],0x6402130c
640056d3:	mov    eax,esi
640056d5:	pop    esi
640056d6:	ret    0x4
640056d9:	int3   
640056da:	int3   
640056db:	int3   
640056dc:	int3   
640056dd:	int3   
640056de:	int3   
640056df:	int3   
640056e0:	push   ebp
640056e1:	mov    ebp,esp
640056e3:	and    esp,0xfffffff8
640056e6:	sub    esp,0x14
640056e9:	push   ebx
640056ea:	push   esi
640056eb:	push   edi
640056ec:	mov    edi,ecx
640056ee:	mov    eax,DWORD PTR [edi+0x4]
640056f1:	mov    ebx,DWORD PTR [eax]
640056f3:	mov    eax,DWORD PTR [ebp+0xc]
640056f6:	test   eax,eax
640056f8:	je     0x640056fe
640056fa:	cmp    eax,edi
640056fc:	je     0x64005703
640056fe:	call   0x6400eeaa
64005703:	mov    esi,DWORD PTR [ebp+0x10]
64005706:	cmp    esi,ebx
64005708:	jne    0x64005760
6400570a:	mov    eax,DWORD PTR [ebp+0x14]
6400570d:	test   eax,eax
6400570f:	mov    ebx,DWORD PTR [edi+0x4]
64005712:	je     0x64005718
64005714:	cmp    eax,edi
64005716:	je     0x6400571d
64005718:	call   0x6400eeaa
6400571d:	cmp    DWORD PTR [ebp+0x18],ebx
64005720:	jne    0x64005760
64005722:	mov    ecx,DWORD PTR [edi+0x4]
64005725:	mov    edx,DWORD PTR [ecx+0x4]
64005728:	push   edx
64005729:	mov    ecx,edi
6400572b:	call   0x64006550
64005730:	mov    eax,DWORD PTR [edi+0x4]
64005733:	mov    DWORD PTR [eax+0x4],eax
64005736:	mov    eax,DWORD PTR [edi+0x4]
64005739:	mov    DWORD PTR [edi+0x8],0x0
64005740:	mov    DWORD PTR [eax],eax
64005742:	mov    eax,DWORD PTR [edi+0x4]
64005745:	mov    DWORD PTR [eax+0x8],eax
64005748:	mov    eax,DWORD PTR [edi+0x4]
6400574b:	mov    ecx,DWORD PTR [eax]
6400574d:	mov    eax,DWORD PTR [ebp+0x8]
64005750:	mov    DWORD PTR [eax+0x4],ecx
64005753:	mov    DWORD PTR [eax],edi
64005755:	pop    edi
64005756:	pop    esi
64005757:	pop    ebx
64005758:	mov    esp,ebp
6400575a:	pop    ebp
6400575b:	ret    0x14
6400575e:	mov    edi,edi
64005760:	mov    ebx,DWORD PTR [ebp+0xc]
64005763:	test   ebx,ebx
64005765:	je     0x6400576c
64005767:	cmp    ebx,DWORD PTR [ebp+0x14]
6400576a:	je     0x64005771
6400576c:	call   0x6400eeaa
64005771:	cmp    esi,DWORD PTR [ebp+0x18]
64005774:	je     0x640057de
64005776:	test   ebx,ebx
64005778:	mov    DWORD PTR [esp+0x14],esi
6400577c:	jne    0x64005783
6400577e:	call   0x6400eeaa
64005783:	cmp    BYTE PTR [esi+0x45],0x0
64005787:	je     0x64005790
64005789:	call   0x6400eeaa
6400578e:	jmp    0x640057ca
64005790:	mov    eax,DWORD PTR [esi+0x8]
64005793:	cmp    BYTE PTR [eax+0x45],0x0
64005797:	jne    0x640057af
64005799:	mov    esi,eax
6400579b:	mov    eax,DWORD PTR [esi]
6400579d:	cmp    BYTE PTR [eax+0x45],0x0
640057a1:	jne    0x640057ca
640057a3:	mov    esi,eax
640057a5:	mov    eax,DWORD PTR [esi]
640057a7:	cmp    BYTE PTR [eax+0x45],0x0
640057ab:	je     0x640057a3
640057ad:	jmp    0x640057ca
640057af:	mov    eax,DWORD PTR [esi+0x4]
640057b2:	cmp    BYTE PTR [eax+0x45],0x0
640057b6:	jne    0x640057c8
640057b8:	cmp    esi,DWORD PTR [eax+0x8]
640057bb:	jne    0x640057c8
640057bd:	mov    esi,eax
640057bf:	mov    eax,DWORD PTR [eax+0x4]
640057c2:	cmp    BYTE PTR [eax+0x45],0x0
640057c6:	je     0x640057b8
640057c8:	mov    esi,eax
640057ca:	mov    edx,DWORD PTR [esp+0x14]
640057ce:	push   edx
640057cf:	push   ebx
640057d0:	lea    eax,[esp+0x20]
640057d4:	push   eax
640057d5:	mov    ecx,edi
640057d7:	call   0x64005c70
640057dc:	jmp    0x64005760
640057de:	mov    eax,DWORD PTR [ebp+0x8]
640057e1:	pop    edi
640057e2:	mov    DWORD PTR [eax+0x4],esi
640057e5:	pop    esi
640057e6:	mov    DWORD PTR [eax],ebx
640057e8:	pop    ebx
640057e9:	mov    esp,ebp
640057eb:	pop    ebp
640057ec:	ret    0x14
640057ef:	int3   
640057f0:	mov    edx,DWORD PTR [esp+0x4]
640057f4:	mov    eax,DWORD PTR [edx]
640057f6:	push   esi
640057f7:	mov    esi,DWORD PTR [eax+0x8]
640057fa:	mov    DWORD PTR [edx],esi
640057fc:	mov    esi,DWORD PTR [eax+0x8]
640057ff:	cmp    BYTE PTR [esi+0x45],0x0
64005803:	jne    0x64005808
64005805:	mov    DWORD PTR [esi+0x4],edx
64005808:	mov    esi,DWORD PTR [edx+0x4]
6400580b:	mov    DWORD PTR [eax+0x4],esi
6400580e:	mov    ecx,DWORD PTR [ecx+0x4]
64005811:	cmp    edx,DWORD PTR [ecx+0x4]
64005814:	pop    esi
64005815:	jne    0x64005823
64005817:	mov    DWORD PTR [ecx+0x4],eax
6400581a:	mov    DWORD PTR [eax+0x8],edx
6400581d:	mov    DWORD PTR [edx+0x4],eax
64005820:	ret    0x4
64005823:	mov    ecx,DWORD PTR [edx+0x4]
64005826:	cmp    edx,DWORD PTR [ecx+0x8]
64005829:	jne    0x64005837
6400582b:	mov    DWORD PTR [ecx+0x8],eax
6400582e:	mov    DWORD PTR [eax+0x8],edx
64005831:	mov    DWORD PTR [edx+0x4],eax
64005834:	ret    0x4
64005837:	mov    DWORD PTR [ecx],eax
64005839:	mov    DWORD PTR [eax+0x8],edx
6400583c:	mov    DWORD PTR [edx+0x4],eax
6400583f:	ret    0x4
64005842:	int3   
64005843:	int3   
64005844:	int3   
64005845:	int3   
64005846:	int3   
64005847:	int3   
64005848:	int3   
64005849:	int3   
6400584a:	int3   
6400584b:	int3   
6400584c:	int3   
6400584d:	int3   
6400584e:	int3   
6400584f:	int3   
64005850:	push   ebp
64005851:	mov    ebp,esp
64005853:	push   0xffffffff
64005855:	push   0x6401ed21
6400585a:	mov    eax,fs:0x0
64005860:	push   eax
64005861:	sub    esp,0xc
64005864:	push   ebx
64005865:	push   esi
64005866:	push   edi
64005867:	mov    eax,ds:0x64028038
6400586c:	xor    eax,ebp
6400586e:	push   eax
6400586f:	lea    eax,[ebp-0xc]
64005872:	mov    fs:0x0,eax
64005878:	mov    DWORD PTR [ebp-0x10],esp
6400587b:	push   0x48
6400587d:	call   0x6400eed3
64005882:	mov    esi,eax
64005884:	mov    DWORD PTR [ebp-0x4],0x0
6400588b:	add    esp,0x4
6400588e:	mov    DWORD PTR [ebp-0x14],esi
64005891:	mov    DWORD PTR [ebp-0x18],esi
64005894:	test   esi,esi
64005896:	mov    BYTE PTR [ebp-0x4],0x1
6400589a:	je     0x640058c3
6400589c:	mov    eax,DWORD PTR [ebp+0x8]
6400589f:	mov    ecx,DWORD PTR [ebp+0xc]
640058a2:	mov    edx,DWORD PTR [ebp+0x10]
640058a5:	mov    DWORD PTR [esi],eax
640058a7:	mov    eax,DWORD PTR [ebp+0x14]
640058aa:	mov    DWORD PTR [esi+0x4],ecx
640058ad:	push   eax
640058ae:	lea    ecx,[esi+0xc]
640058b1:	mov    DWORD PTR [esi+0x8],edx
640058b4:	call   0x64006450
640058b9:	mov    cl,BYTE PTR [ebp+0x18]
640058bc:	mov    BYTE PTR [esi+0x44],cl
640058bf:	mov    BYTE PTR [esi+0x45],0x0
640058c3:	mov    eax,esi
640058c5:	mov    ecx,DWORD PTR [ebp-0xc]
640058c8:	mov    DWORD PTR fs:0x0,ecx
640058cf:	pop    ecx
640058d0:	pop    edi
640058d1:	pop    esi
640058d2:	pop    ebx
640058d3:	mov    esp,ebp
640058d5:	pop    ebp
640058d6:	ret    0x14
640058d9:	mov    edx,DWORD PTR [ebp-0x14]
640058dc:	push   edx
640058dd:	call   0x6400eb52
640058e2:	add    esp,0x4
640058e5:	push   0x0
640058e7:	push   0x0
640058e9:	call   0x6400ef3d
640058ee:	int3   
640058ef:	int3   
640058f0:	push   ebp
640058f1:	mov    ebp,esp
640058f3:	push   0xffffffff
640058f5:	push   0x6401ecf0
640058fa:	mov    eax,fs:0x0
64005900:	push   eax
64005901:	sub    esp,0x1c
64005904:	push   ebx
64005905:	push   esi
64005906:	push   edi
64005907:	mov    eax,ds:0x64028038
6400590c:	xor    eax,ebp
6400590e:	push   eax
6400590f:	lea    eax,[ebp-0xc]
64005912:	mov    fs:0x0,eax
64005918:	mov    DWORD PTR [ebp-0x10],esp
6400591b:	mov    edi,ecx
6400591d:	mov    DWORD PTR [ebp-0x14],edi
64005920:	mov    eax,DWORD PTR [ebp+0x8]
64005923:	mov    esi,eax
64005925:	or     esi,0x7
64005928:	cmp    esi,0x7ffffffe
6400592e:	jbe    0x64005934
64005930:	mov    esi,eax
64005932:	jmp    0x64005956
64005934:	mov    ebx,DWORD PTR [edi+0x18]
64005937:	mov    eax,0xaaaaaaab
6400593c:	mul    esi
6400593e:	mov    ecx,ebx
64005940:	shr    ecx,1
64005942:	shr    edx,1
64005944:	cmp    edx,ecx
64005946:	jae    0x64005956
64005948:	mov    eax,0x7ffffffe
6400594d:	sub    eax,ecx
6400594f:	cmp    ebx,eax
64005951:	ja     0x64005956
64005953:	lea    esi,[ecx+ebx*1]
64005956:	xor    ebx,ebx
64005958:	lea    ecx,[esi+0x1]
6400595b:	cmp    ecx,ebx
6400595d:	mov    DWORD PTR [ebp-0x4],ebx
64005960:	ja     0x64005975
64005962:	xor    ecx,ecx
64005964:	lea    eax,[ecx+ecx*1]
64005967:	push   eax
64005968:	call   0x6400eed3
6400596d:	add    esp,0x4
64005970:	mov    DWORD PTR [ebp+0x8],eax
64005973:	jmp    0x640059cd
64005975:	or     eax,0xffffffff
64005978:	xor    edx,edx
6400597a:	div    ecx
6400597c:	cmp    eax,0x2
6400597f:	jae    0x64005964
64005981:	lea    ecx,[ebp-0x18]
64005984:	push   ecx
64005985:	lea    ecx,[ebp-0x28]
64005988:	mov    DWORD PTR [ebp-0x18],ebx
6400598b:	call   0x6400ebad
64005990:	push   0x64025e14
64005995:	lea    edx,[ebp-0x28]
64005998:	push   edx
64005999:	mov    DWORD PTR [ebp-0x28],0x640212f4
640059a0:	call   0x6400ef3d
640059a5:	mov    eax,DWORD PTR [ebp+0x8]
640059a8:	mov    ecx,DWORD PTR [ebp-0x14]
640059ab:	mov    DWORD PTR [ebp-0x1c],eax
640059ae:	add    eax,0x1
640059b1:	mov    DWORD PTR [ebp-0x10],esp
640059b4:	push   eax
640059b5:	mov    BYTE PTR [ebp-0x4],0x2
640059b9:	call   0x64005f90
640059be:	mov    DWORD PTR [ebp+0x8],eax
640059c1:	mov    eax,0x640059c7
640059c6:	ret    
640059c7:	mov    edi,DWORD PTR [ebp-0x14]
640059ca:	mov    esi,DWORD PTR [ebp-0x1c]
640059cd:	mov    ebx,DWORD PTR [ebp+0xc]
640059d0:	test   ebx,ebx
640059d2:	jbe    0x640059f8
640059d4:	cmp    DWORD PTR [edi+0x18],0x8
640059d8:	jb     0x640059df
640059da:	mov    eax,DWORD PTR [edi+0x4]
640059dd:	jmp    0x640059e2
640059df:	lea    eax,[edi+0x4]
640059e2:	lea    ecx,[ebx+ebx*1]
640059e5:	push   ecx
640059e6:	push   eax
640059e7:	mov    eax,DWORD PTR [ebp+0x8]
640059ea:	lea    edx,[esi+esi*1+0x2]
640059ee:	push   edx
640059ef:	push   eax
640059f0:	call   0x6400ecaa
640059f5:	add    esp,0x10
640059f8:	cmp    DWORD PTR [edi+0x18],0x8
640059fc:	jb     0x64005a0a
640059fe:	mov    ecx,DWORD PTR [edi+0x4]
64005a01:	push   ecx
64005a02:	call   0x6400eb52
64005a07:	add    esp,0x4
64005a0a:	cmp    esi,0x8
64005a0d:	mov    ecx,DWORD PTR [ebp+0x8]
64005a10:	lea    eax,[edi+0x4]
64005a13:	mov    WORD PTR [eax],0x0
64005a18:	mov    DWORD PTR [eax],ecx
64005a1a:	mov    DWORD PTR [edi+0x18],esi
64005a1d:	mov    DWORD PTR [edi+0x14],ebx
64005a20:	jb     0x64005a24
64005a22:	mov    eax,ecx
64005a24:	mov    WORD PTR [eax+ebx*2],0x0
64005a2a:	mov    ecx,DWORD PTR [ebp-0xc]
64005a2d:	mov    DWORD PTR fs:0x0,ecx
64005a34:	pop    ecx
64005a35:	pop    edi
64005a36:	pop    esi
64005a37:	pop    ebx
64005a38:	mov    esp,ebp
64005a3a:	pop    ebp
64005a3b:	ret    0x8
64005a3e:	mov    esi,DWORD PTR [ebp-0x14]
64005a41:	cmp    DWORD PTR [esi+0x18],0x8
64005a45:	jb     0x64005a53
64005a47:	mov    edx,DWORD PTR [esi+0x4]
64005a4a:	push   edx
64005a4b:	call   0x6400eb52
64005a50:	add    esp,0x4
64005a53:	xor    eax,eax
64005a55:	push   eax
64005a56:	mov    DWORD PTR [esi+0x18],0x7
64005a5d:	mov    DWORD PTR [esi+0x14],eax
64005a60:	push   eax
64005a61:	mov    WORD PTR [esi+0x4],ax
64005a65:	call   0x6400ef3d
64005a6a:	int3   
64005a6b:	int3   
64005a6c:	int3   
64005a6d:	int3   
64005a6e:	int3   
64005a6f:	int3   
64005a70:	push   ebp
64005a71:	mov    ebp,esp
64005a73:	and    esp,0xfffffff8
64005a76:	sub    esp,0x14
64005a79:	push   ebx
64005a7a:	push   esi
64005a7b:	push   edi
64005a7c:	mov    edi,ecx
64005a7e:	mov    eax,DWORD PTR [edi+0x4]
64005a81:	mov    ebx,DWORD PTR [eax]
64005a83:	mov    eax,DWORD PTR [ebp+0xc]
64005a86:	test   eax,eax
64005a88:	je     0x64005a8e
64005a8a:	cmp    eax,edi
64005a8c:	je     0x64005a93
64005a8e:	call   0x6400eeaa
64005a93:	mov    esi,DWORD PTR [ebp+0x10]
64005a96:	cmp    esi,ebx
64005a98:	jne    0x64005af0
64005a9a:	mov    eax,DWORD PTR [ebp+0x14]
64005a9d:	test   eax,eax
64005a9f:	mov    ebx,DWORD PTR [edi+0x4]
64005aa2:	je     0x64005aa8
64005aa4:	cmp    eax,edi
64005aa6:	je     0x64005aad
64005aa8:	call   0x6400eeaa
64005aad:	cmp    DWORD PTR [ebp+0x18],ebx
64005ab0:	jne    0x64005af0
64005ab2:	mov    ecx,DWORD PTR [edi+0x4]
64005ab5:	mov    edx,DWORD PTR [ecx+0x4]
64005ab8:	push   edx
64005ab9:	mov    ecx,edi
64005abb:	call   0x640065f0
64005ac0:	mov    eax,DWORD PTR [edi+0x4]
64005ac3:	mov    DWORD PTR [eax+0x4],eax
64005ac6:	mov    eax,DWORD PTR [edi+0x4]
64005ac9:	mov    DWORD PTR [edi+0x8],0x0
64005ad0:	mov    DWORD PTR [eax],eax
64005ad2:	mov    eax,DWORD PTR [edi+0x4]
64005ad5:	mov    DWORD PTR [eax+0x8],eax
64005ad8:	mov    eax,DWORD PTR [edi+0x4]
64005adb:	mov    ecx,DWORD PTR [eax]
64005add:	mov    eax,DWORD PTR [ebp+0x8]
64005ae0:	mov    DWORD PTR [eax+0x4],ecx
64005ae3:	mov    DWORD PTR [eax],edi
64005ae5:	pop    edi
64005ae6:	pop    esi
64005ae7:	pop    ebx
64005ae8:	mov    esp,ebp
64005aea:	pop    ebp
64005aeb:	ret    0x14
64005aee:	mov    edi,edi
64005af0:	mov    ebx,DWORD PTR [ebp+0xc]
64005af3:	test   ebx,ebx
64005af5:	je     0x64005afc
64005af7:	cmp    ebx,DWORD PTR [ebp+0x14]
64005afa:	je     0x64005b01
64005afc:	call   0x6400eeaa
64005b01:	cmp    esi,DWORD PTR [ebp+0x18]
64005b04:	je     0x64005b6e
64005b06:	test   ebx,ebx
64005b08:	mov    DWORD PTR [esp+0x14],esi
64005b0c:	jne    0x64005b13
64005b0e:	call   0x6400eeaa
64005b13:	cmp    BYTE PTR [esi+0x45],0x0
64005b17:	je     0x64005b20
64005b19:	call   0x6400eeaa
64005b1e:	jmp    0x64005b5a
64005b20:	mov    eax,DWORD PTR [esi+0x8]
64005b23:	cmp    BYTE PTR [eax+0x45],0x0
64005b27:	jne    0x64005b3f
64005b29:	mov    esi,eax
64005b2b:	mov    eax,DWORD PTR [esi]
64005b2d:	cmp    BYTE PTR [eax+0x45],0x0
64005b31:	jne    0x64005b5a
64005b33:	mov    esi,eax
64005b35:	mov    eax,DWORD PTR [esi]
64005b37:	cmp    BYTE PTR [eax+0x45],0x0
64005b3b:	je     0x64005b33
64005b3d:	jmp    0x64005b5a
64005b3f:	mov    eax,DWORD PTR [esi+0x4]
64005b42:	cmp    BYTE PTR [eax+0x45],0x0
64005b46:	jne    0x64005b58
64005b48:	cmp    esi,DWORD PTR [eax+0x8]
64005b4b:	jne    0x64005b58
64005b4d:	mov    esi,eax
64005b4f:	mov    eax,DWORD PTR [eax+0x4]
64005b52:	cmp    BYTE PTR [eax+0x45],0x0
64005b56:	je     0x64005b48
64005b58:	mov    esi,eax
64005b5a:	mov    edx,DWORD PTR [esp+0x14]
64005b5e:	push   edx
64005b5f:	push   ebx
64005b60:	lea    eax,[esp+0x20]
64005b64:	push   eax
64005b65:	mov    ecx,edi
64005b67:	call   0x64005ff0
64005b6c:	jmp    0x64005af0
64005b6e:	mov    eax,DWORD PTR [ebp+0x8]
64005b71:	pop    edi
64005b72:	mov    DWORD PTR [eax+0x4],esi
64005b75:	pop    esi
64005b76:	mov    DWORD PTR [eax],ebx
64005b78:	pop    ebx
64005b79:	mov    esp,ebp
64005b7b:	pop    ebp
64005b7c:	ret    0x14
64005b7f:	int3   
64005b80:	mov    edx,DWORD PTR [esp+0x4]
64005b84:	mov    eax,DWORD PTR [edx+0x8]
64005b87:	push   esi
64005b88:	mov    esi,DWORD PTR [eax]
64005b8a:	mov    DWORD PTR [edx+0x8],esi
64005b8d:	mov    esi,DWORD PTR [eax]
64005b8f:	cmp    BYTE PTR [esi+0x45],0x0
64005b93:	jne    0x64005b98
64005b95:	mov    DWORD PTR [esi+0x4],edx
64005b98:	mov    esi,DWORD PTR [edx+0x4]
64005b9b:	mov    DWORD PTR [eax+0x4],esi
64005b9e:	mov    ecx,DWORD PTR [ecx+0x4]
64005ba1:	cmp    edx,DWORD PTR [ecx+0x4]
64005ba4:	pop    esi
64005ba5:	jne    0x64005bb2
64005ba7:	mov    DWORD PTR [ecx+0x4],eax
64005baa:	mov    DWORD PTR [eax],edx
64005bac:	mov    DWORD PTR [edx+0x4],eax
64005baf:	ret    0x4
64005bb2:	mov    ecx,DWORD PTR [edx+0x4]
64005bb5:	cmp    edx,DWORD PTR [ecx]
64005bb7:	jne    0x64005bc3
64005bb9:	mov    DWORD PTR [ecx],eax
64005bbb:	mov    DWORD PTR [eax],edx
64005bbd:	mov    DWORD PTR [edx+0x4],eax
64005bc0:	ret    0x4
64005bc3:	mov    DWORD PTR [ecx+0x8],eax
64005bc6:	mov    DWORD PTR [eax],edx
64005bc8:	mov    DWORD PTR [edx+0x4],eax
64005bcb:	ret    0x4
64005bce:	int3   
64005bcf:	int3   
64005bd0:	push   ebp
64005bd1:	mov    ebp,esp
64005bd3:	push   0xffffffff
64005bd5:	push   0x6401eeb1
64005bda:	mov    eax,fs:0x0
64005be0:	push   eax
64005be1:	sub    esp,0xc
64005be4:	push   ebx
64005be5:	push   esi
64005be6:	push   edi
64005be7:	mov    eax,ds:0x64028038
64005bec:	xor    eax,ebp
64005bee:	push   eax
64005bef:	lea    eax,[ebp-0xc]
64005bf2:	mov    fs:0x0,eax
64005bf8:	mov    DWORD PTR [ebp-0x10],esp
64005bfb:	push   0x48
64005bfd:	call   0x6400eed3
64005c02:	mov    esi,eax
64005c04:	mov    DWORD PTR [ebp-0x4],0x0
64005c0b:	add    esp,0x4
64005c0e:	mov    DWORD PTR [ebp-0x14],esi
64005c11:	mov    DWORD PTR [ebp-0x18],esi
64005c14:	test   esi,esi
64005c16:	mov    BYTE PTR [ebp-0x4],0x1
64005c1a:	je     0x64005c43
64005c1c:	mov    eax,DWORD PTR [ebp+0x8]
64005c1f:	mov    ecx,DWORD PTR [ebp+0xc]
64005c22:	mov    edx,DWORD PTR [ebp+0x10]
64005c25:	mov    DWORD PTR [esi],eax
64005c27:	mov    eax,DWORD PTR [ebp+0x14]
64005c2a:	mov    DWORD PTR [esi+0x4],ecx
64005c2d:	push   eax
64005c2e:	lea    ecx,[esi+0xc]
64005c31:	mov    DWORD PTR [esi+0x8],edx
64005c34:	call   0x640064d0
64005c39:	mov    cl,BYTE PTR [ebp+0x18]
64005c3c:	mov    BYTE PTR [esi+0x44],cl
64005c3f:	mov    BYTE PTR [esi+0x45],0x0
64005c43:	mov    eax,esi
64005c45:	mov    ecx,DWORD PTR [ebp-0xc]
64005c48:	mov    DWORD PTR fs:0x0,ecx
64005c4f:	pop    ecx
64005c50:	pop    edi
64005c51:	pop    esi
64005c52:	pop    ebx
64005c53:	mov    esp,ebp
64005c55:	pop    ebp
64005c56:	ret    0x14
64005c59:	mov    edx,DWORD PTR [ebp-0x14]
64005c5c:	push   edx
64005c5d:	call   0x6400eb52
64005c62:	add    esp,0x4
64005c65:	push   0x0
64005c67:	push   0x0
64005c69:	call   0x6400ef3d
64005c6e:	int3   
64005c6f:	int3   
64005c70:	push   ebp
64005c71:	mov    ebp,esp
64005c73:	and    esp,0xfffffff8
64005c76:	push   0xffffffff
64005c78:	push   0x6401ef98
64005c7d:	mov    eax,fs:0x0
64005c83:	push   eax
64005c84:	sub    esp,0x50
64005c87:	push   ebx
64005c88:	push   esi
64005c89:	push   edi
64005c8a:	mov    eax,ds:0x64028038
64005c8f:	xor    eax,esp
64005c91:	push   eax
64005c92:	lea    eax,[esp+0x60]
64005c96:	mov    fs:0x0,eax
64005c9c:	mov    DWORD PTR [esp+0x14],ecx
64005ca0:	mov    edi,DWORD PTR [ebp+0x10]
64005ca3:	cmp    BYTE PTR [edi+0x45],0x0
64005ca7:	je     0x64005cf5
64005ca9:	push   0x1b
64005cab:	xor    esi,esi
64005cad:	push   0x64023978
64005cb2:	lea    ecx,[esp+0x20]
64005cb6:	mov    DWORD PTR [esp+0x38],0xf
64005cbe:	mov    DWORD PTR [esp+0x34],esi
64005cc2:	mov    BYTE PTR [esp+0x24],0x0
64005cc7:	call   0x64001bb0
64005ccc:	lea    eax,[esp+0x18]
64005cd0:	push   eax
64005cd1:	lea    ecx,[esp+0x38]
64005cd5:	mov    DWORD PTR [esp+0x6c],esi
64005cd9:	call   0x64002530
64005cde:	push   0x64025e6c
64005ce3:	lea    ecx,[esp+0x38]
64005ce7:	push   ecx
64005ce8:	mov    DWORD PTR [esp+0x3c],0x64021318
64005cf0:	call   0x6400ef3d
64005cf5:	lea    ecx,[ebp+0xc]
64005cf8:	call   0x640063e0
64005cfd:	mov    ecx,DWORD PTR [edi]
64005cff:	cmp    BYTE PTR [ecx+0x45],0x0
64005d03:	je     0x64005d0a
64005d05:	mov    ebx,DWORD PTR [edi+0x8]
64005d08:	jmp    0x64005d21
64005d0a:	mov    edx,DWORD PTR [edi+0x8]
64005d0d:	cmp    BYTE PTR [edx+0x45],0x0
64005d11:	je     0x64005d17
64005d13:	mov    ebx,ecx
64005d15:	jmp    0x64005d21
64005d17:	mov    eax,DWORD PTR [ebp+0x10]
64005d1a:	cmp    eax,edi
64005d1c:	mov    ebx,DWORD PTR [eax+0x8]
64005d1f:	jne    0x64005d9d
64005d21:	cmp    BYTE PTR [ebx+0x45],0x0
64005d25:	mov    esi,DWORD PTR [edi+0x4]
64005d28:	jne    0x64005d2d
64005d2a:	mov    DWORD PTR [ebx+0x4],esi
64005d2d:	mov    ecx,DWORD PTR [esp+0x14]
64005d31:	mov    eax,DWORD PTR [ecx+0x4]
64005d34:	cmp    DWORD PTR [eax+0x4],edi
64005d37:	jne    0x64005d3e
64005d39:	mov    DWORD PTR [eax+0x4],ebx
64005d3c:	jmp    0x64005d49
64005d3e:	cmp    DWORD PTR [esi],edi
64005d40:	jne    0x64005d46
64005d42:	mov    DWORD PTR [esi],ebx
64005d44:	jmp    0x64005d49
64005d46:	mov    DWORD PTR [esi+0x8],ebx
64005d49:	mov    eax,DWORD PTR [ecx+0x4]
64005d4c:	cmp    DWORD PTR [eax],edi
64005d4e:	jne    0x64005d6c
64005d50:	cmp    BYTE PTR [ebx+0x45],0x0
64005d54:	je     0x64005d5a
64005d56:	mov    eax,esi
64005d58:	jmp    0x64005d67
64005d5a:	push   ebx
64005d5b:	call   0x64006670
64005d60:	mov    ecx,DWORD PTR [esp+0x18]
64005d64:	add    esp,0x4
64005d67:	mov    edx,DWORD PTR [ecx+0x4]
64005d6a:	mov    DWORD PTR [edx],eax
64005d6c:	mov    eax,DWORD PTR [ecx+0x4]
64005d6f:	cmp    DWORD PTR [eax+0x8],edi
64005d72:	jne    0x64005dfc
64005d78:	cmp    BYTE PTR [ebx+0x45],0x0
64005d7c:	je     0x64005d88
64005d7e:	mov    edx,DWORD PTR [ecx+0x4]
64005d81:	mov    eax,esi
64005d83:	mov    DWORD PTR [edx+0x8],eax
64005d86:	jmp    0x64005dfc
64005d88:	push   ebx
64005d89:	call   0x640065d0
64005d8e:	mov    ecx,DWORD PTR [esp+0x18]
64005d92:	mov    edx,DWORD PTR [ecx+0x4]
64005d95:	add    esp,0x4
64005d98:	mov    DWORD PTR [edx+0x8],eax
64005d9b:	jmp    0x64005dfc
64005d9d:	mov    DWORD PTR [ecx+0x4],eax
64005da0:	mov    ecx,DWORD PTR [edi]
64005da2:	mov    DWORD PTR [eax],ecx
64005da4:	cmp    eax,DWORD PTR [edi+0x8]
64005da7:	jne    0x64005dad
64005da9:	mov    esi,eax
64005dab:	jmp    0x64005dc7
64005dad:	cmp    BYTE PTR [ebx+0x45],0x0
64005db1:	mov    esi,DWORD PTR [eax+0x4]
64005db4:	jne    0x64005db9
64005db6:	mov    DWORD PTR [ebx+0x4],esi
64005db9:	mov    DWORD PTR [esi],ebx
64005dbb:	mov    edx,DWORD PTR [edi+0x8]
64005dbe:	mov    DWORD PTR [eax+0x8],edx
64005dc1:	mov    ecx,DWORD PTR [edi+0x8]
64005dc4:	mov    DWORD PTR [ecx+0x4],eax
64005dc7:	mov    edx,DWORD PTR [esp+0x14]
64005dcb:	mov    ecx,DWORD PTR [edx+0x4]
64005dce:	cmp    DWORD PTR [ecx+0x4],edi
64005dd1:	jne    0x64005dd8
64005dd3:	mov    DWORD PTR [ecx+0x4],eax
64005dd6:	jmp    0x64005de6
64005dd8:	mov    ecx,DWORD PTR [edi+0x4]
64005ddb:	cmp    DWORD PTR [ecx],edi
64005ddd:	jne    0x64005de3
64005ddf:	mov    DWORD PTR [ecx],eax
64005de1:	jmp    0x64005de6
64005de3:	mov    DWORD PTR [ecx+0x8],eax
64005de6:	mov    ecx,DWORD PTR [edi+0x4]
64005de9:	mov    DWORD PTR [eax+0x4],ecx
64005dec:	mov    cl,BYTE PTR [eax+0x44]
64005def:	mov    dl,BYTE PTR [edi+0x44]
64005df2:	mov    BYTE PTR [eax+0x44],dl
64005df5:	mov    BYTE PTR [edi+0x44],cl
64005df8:	mov    ecx,DWORD PTR [esp+0x14]
64005dfc:	cmp    BYTE PTR [edi+0x44],0x1
64005e00:	jne    0x64005f11
64005e06:	mov    eax,DWORD PTR [ecx+0x4]
64005e09:	cmp    ebx,DWORD PTR [eax+0x4]
64005e0c:	je     0x64005f0d
64005e12:	cmp    BYTE PTR [ebx+0x44],0x1
64005e16:	jne    0x64005f0d
64005e1c:	mov    eax,DWORD PTR [esi]
64005e1e:	cmp    ebx,eax
64005e20:	jne    0x64005e90
64005e22:	mov    eax,DWORD PTR [esi+0x8]
64005e25:	cmp    BYTE PTR [eax+0x44],0x0
64005e29:	jne    0x64005e40
64005e2b:	mov    BYTE PTR [eax+0x44],0x1
64005e2f:	push   esi
64005e30:	mov    BYTE PTR [esi+0x44],0x0
64005e34:	call   0x64005b80
64005e39:	mov    eax,DWORD PTR [esi+0x8]
64005e3c:	mov    ecx,DWORD PTR [esp+0x14]
64005e40:	cmp    BYTE PTR [eax+0x45],0x0
64005e44:	jne    0x64005ec5
64005e46:	mov    edx,DWORD PTR [eax]
64005e48:	cmp    BYTE PTR [edx+0x44],0x1
64005e4c:	jne    0x64005e57
64005e4e:	mov    edx,DWORD PTR [eax+0x8]
64005e51:	cmp    BYTE PTR [edx+0x44],0x1
64005e55:	je     0x64005ec1
64005e57:	mov    edx,DWORD PTR [eax+0x8]
64005e5a:	cmp    BYTE PTR [edx+0x44],0x1
64005e5e:	jne    0x64005e77
64005e60:	mov    edx,DWORD PTR [eax]
64005e62:	mov    BYTE PTR [edx+0x44],0x1
64005e66:	push   eax
64005e67:	mov    BYTE PTR [eax+0x44],0x0
64005e6b:	call   0x640057f0
64005e70:	mov    eax,DWORD PTR [esi+0x8]
64005e73:	mov    ecx,DWORD PTR [esp+0x14]
64005e77:	mov    dl,BYTE PTR [esi+0x44]
64005e7a:	mov    BYTE PTR [eax+0x44],dl
64005e7d:	mov    BYTE PTR [esi+0x44],0x1
64005e81:	mov    eax,DWORD PTR [eax+0x8]
64005e84:	push   esi
64005e85:	mov    BYTE PTR [eax+0x44],0x1
64005e89:	call   0x64005b80
64005e8e:	jmp    0x64005f0d
64005e90:	cmp    BYTE PTR [eax+0x44],0x0
64005e94:	jne    0x64005eaa
64005e96:	mov    BYTE PTR [eax+0x44],0x1
64005e9a:	push   esi
64005e9b:	mov    BYTE PTR [esi+0x44],0x0
64005e9f:	call   0x640057f0
64005ea4:	mov    eax,DWORD PTR [esi]
64005ea6:	mov    ecx,DWORD PTR [esp+0x14]
64005eaa:	cmp    BYTE PTR [eax+0x45],0x0
64005eae:	jne    0x64005ec5
64005eb0:	mov    edx,DWORD PTR [eax+0x8]
64005eb3:	cmp    BYTE PTR [edx+0x44],0x1
64005eb7:	jne    0x64005ed8
64005eb9:	mov    edx,DWORD PTR [eax]
64005ebb:	cmp    BYTE PTR [edx+0x44],0x1
64005ebf:	jne    0x64005ed8
64005ec1:	mov    BYTE PTR [eax+0x44],0x0
64005ec5:	mov    eax,DWORD PTR [ecx+0x4]
64005ec8:	mov    ebx,esi
64005eca:	cmp    ebx,DWORD PTR [eax+0x4]
64005ecd:	mov    esi,DWORD PTR [esi+0x4]
64005ed0:	jne    0x64005e12
64005ed6:	jmp    0x64005f0d
64005ed8:	mov    edx,DWORD PTR [eax]
64005eda:	cmp    BYTE PTR [edx+0x44],0x1
64005ede:	jne    0x64005ef7
64005ee0:	mov    edx,DWORD PTR [eax+0x8]
64005ee3:	mov    BYTE PTR [edx+0x44],0x1
64005ee7:	push   eax
64005ee8:	mov    BYTE PTR [eax+0x44],0x0
64005eec:	call   0x64005b80
64005ef1:	mov    eax,DWORD PTR [esi]
64005ef3:	mov    ecx,DWORD PTR [esp+0x14]
64005ef7:	mov    dl,BYTE PTR [esi+0x44]
64005efa:	mov    BYTE PTR [eax+0x44],dl
64005efd:	mov    BYTE PTR [esi+0x44],0x1
64005f01:	mov    eax,DWORD PTR [eax]
64005f03:	push   esi
64005f04:	mov    BYTE PTR [eax+0x44],0x1
64005f08:	call   0x640057f0
64005f0d:	mov    BYTE PTR [ebx+0x44],0x1
64005f11:	cmp    DWORD PTR [edi+0x40],0x10
64005f15:	jb     0x64005f23
64005f17:	mov    ecx,DWORD PTR [edi+0x2c]
64005f1a:	push   ecx
64005f1b:	call   0x6400eb52
64005f20:	add    esp,0x4
64005f23:	xor    esi,esi
64005f25:	mov    ebx,0xf
64005f2a:	mov    DWORD PTR [edi+0x40],ebx
64005f2d:	mov    DWORD PTR [edi+0x3c],esi
64005f30:	mov    BYTE PTR [edi+0x2c],0x0
64005f34:	cmp    DWORD PTR [edi+0x24],0x10
64005f38:	jb     0x64005f46
64005f3a:	mov    edx,DWORD PTR [edi+0x10]
64005f3d:	push   edx
64005f3e:	call   0x6400eb52
64005f43:	add    esp,0x4
64005f46:	mov    DWORD PTR [edi+0x24],ebx
64005f49:	mov    DWORD PTR [edi+0x20],esi
64005f4c:	push   edi
64005f4d:	mov    BYTE PTR [edi+0x10],0x0
64005f51:	call   0x6400eb52
64005f56:	mov    ecx,DWORD PTR [esp+0x18]
64005f5a:	mov    eax,DWORD PTR [ecx+0x8]
64005f5d:	add    esp,0x4
64005f60:	cmp    eax,esi
64005f62:	jbe    0x64005f6a
64005f64:	add    eax,0xffffffff
64005f67:	mov    DWORD PTR [ecx+0x8],eax
64005f6a:	mov    eax,DWORD PTR [ebp+0x8]
64005f6d:	mov    ecx,DWORD PTR [ebp+0xc]
64005f70:	mov    edx,DWORD PTR [ebp+0x10]
64005f73:	mov    DWORD PTR [eax],ecx
64005f75:	mov    DWORD PTR [eax+0x4],edx
64005f78:	mov    ecx,DWORD PTR [esp+0x60]
64005f7c:	mov    DWORD PTR fs:0x0,ecx
64005f83:	pop    ecx
64005f84:	pop    edi
64005f85:	pop    esi
64005f86:	pop    ebx
64005f87:	mov    esp,ebp
64005f89:	pop    ebp
64005f8a:	ret    0xc
64005f8d:	int3   
64005f8e:	int3   
64005f8f:	int3   
64005f90:	mov    ecx,DWORD PTR [esp+0x4]
64005f94:	sub    esp,0xc
64005f97:	test   ecx,ecx
64005f99:	ja     0x64005faf
64005f9b:	xor    ecx,ecx
64005f9d:	lea    edx,[ecx+ecx*1]
64005fa0:	push   edx
64005fa1:	call   0x6400eed3
64005fa6:	add    esp,0x4
64005fa9:	add    esp,0xc
64005fac:	ret    0x4
64005faf:	or     eax,0xffffffff
64005fb2:	xor    edx,edx
64005fb4:	div    ecx
64005fb6:	cmp    eax,0x2
64005fb9:	jae    0x64005f9d
64005fbb:	lea    eax,[esp+0x10]
64005fbf:	push   eax
64005fc0:	lea    ecx,[esp+0x4]
64005fc4:	mov    DWORD PTR [esp+0x14],0x0
64005fcc:	call   0x6400ebad
64005fd1:	push   0x64025e14
64005fd6:	lea    ecx,[esp+0x4]
64005fda:	push   ecx
64005fdb:	mov    DWORD PTR [esp+0x8],0x640212f4
64005fe3:	call   0x6400ef3d
64005fe8:	int3   
64005fe9:	int3   
64005fea:	int3   
64005feb:	int3   
64005fec:	int3   
64005fed:	int3   
64005fee:	int3   
64005fef:	int3   
64005ff0:	push   ebp
64005ff1:	mov    ebp,esp
64005ff3:	and    esp,0xfffffff8
64005ff6:	push   0xffffffff
64005ff8:	push   0x6401ef68
64005ffd:	mov    eax,fs:0x0
64006003:	push   eax
64006004:	sub    esp,0x50
64006007:	push   ebx
64006008:	push   esi
64006009:	push   edi
6400600a:	mov    eax,ds:0x64028038
6400600f:	xor    eax,esp
64006011:	push   eax
64006012:	lea    eax,[esp+0x60]
64006016:	mov    fs:0x0,eax
6400601c:	mov    DWORD PTR [esp+0x14],ecx
64006020:	mov    edi,DWORD PTR [ebp+0x10]
64006023:	cmp    BYTE PTR [edi+0x45],0x0
64006027:	je     0x64006075
64006029:	push   0x1b
6400602b:	xor    esi,esi
6400602d:	push   0x64023978
64006032:	lea    ecx,[esp+0x20]
64006036:	mov    DWORD PTR [esp+0x38],0xf
6400603e:	mov    DWORD PTR [esp+0x34],esi
64006042:	mov    BYTE PTR [esp+0x24],0x0
64006047:	call   0x64001bb0
6400604c:	lea    eax,[esp+0x18]
64006050:	push   eax
64006051:	lea    ecx,[esp+0x38]
64006055:	mov    DWORD PTR [esp+0x6c],esi
64006059:	call   0x64002530
6400605e:	push   0x64025e6c
64006063:	lea    ecx,[esp+0x38]
64006067:	push   ecx
64006068:	mov    DWORD PTR [esp+0x3c],0x64021318
64006070:	call   0x6400ef3d
64006075:	lea    ecx,[ebp+0xc]
64006078:	call   0x640063e0
6400607d:	mov    ecx,DWORD PTR [edi]
6400607f:	cmp    BYTE PTR [ecx+0x45],0x0
64006083:	je     0x6400608a
64006085:	mov    ebx,DWORD PTR [edi+0x8]
64006088:	jmp    0x640060a1
6400608a:	mov    edx,DWORD PTR [edi+0x8]
6400608d:	cmp    BYTE PTR [edx+0x45],0x0
64006091:	je     0x64006097
64006093:	mov    ebx,ecx
64006095:	jmp    0x640060a1
64006097:	mov    eax,DWORD PTR [ebp+0x10]
6400609a:	cmp    eax,edi
6400609c:	mov    ebx,DWORD PTR [eax+0x8]
6400609f:	jne    0x6400611d
640060a1:	cmp    BYTE PTR [ebx+0x45],0x0
640060a5:	mov    esi,DWORD PTR [edi+0x4]
640060a8:	jne    0x640060ad
640060aa:	mov    DWORD PTR [ebx+0x4],esi
640060ad:	mov    ecx,DWORD PTR [esp+0x14]
640060b1:	mov    eax,DWORD PTR [ecx+0x4]
640060b4:	cmp    DWORD PTR [eax+0x4],edi
640060b7:	jne    0x640060be
640060b9:	mov    DWORD PTR [eax+0x4],ebx
640060bc:	jmp    0x640060c9
640060be:	cmp    DWORD PTR [esi],edi
640060c0:	jne    0x640060c6
640060c2:	mov    DWORD PTR [esi],ebx
640060c4:	jmp    0x640060c9
640060c6:	mov    DWORD PTR [esi+0x8],ebx
640060c9:	mov    eax,DWORD PTR [ecx+0x4]
640060cc:	cmp    DWORD PTR [eax],edi
640060ce:	jne    0x640060ec
640060d0:	cmp    BYTE PTR [ebx+0x45],0x0
640060d4:	je     0x640060da
640060d6:	mov    eax,esi
640060d8:	jmp    0x640060e7
640060da:	push   ebx
640060db:	call   0x64006670
640060e0:	mov    ecx,DWORD PTR [esp+0x18]
640060e4:	add    esp,0x4
640060e7:	mov    edx,DWORD PTR [ecx+0x4]
640060ea:	mov    DWORD PTR [edx],eax
640060ec:	mov    eax,DWORD PTR [ecx+0x4]
640060ef:	cmp    DWORD PTR [eax+0x8],edi
640060f2:	jne    0x6400617c
640060f8:	cmp    BYTE PTR [ebx+0x45],0x0
640060fc:	je     0x64006108
640060fe:	mov    edx,DWORD PTR [ecx+0x4]
64006101:	mov    eax,esi
64006103:	mov    DWORD PTR [edx+0x8],eax
64006106:	jmp    0x6400617c
64006108:	push   ebx
64006109:	call   0x640065d0
6400610e:	mov    ecx,DWORD PTR [esp+0x18]
64006112:	mov    edx,DWORD PTR [ecx+0x4]
64006115:	add    esp,0x4
64006118:	mov    DWORD PTR [edx+0x8],eax
6400611b:	jmp    0x6400617c
6400611d:	mov    DWORD PTR [ecx+0x4],eax
64006120:	mov    ecx,DWORD PTR [edi]
64006122:	mov    DWORD PTR [eax],ecx
64006124:	cmp    eax,DWORD PTR [edi+0x8]
64006127:	jne    0x6400612d
64006129:	mov    esi,eax
6400612b:	jmp    0x64006147
6400612d:	cmp    BYTE PTR [ebx+0x45],0x0
64006131:	mov    esi,DWORD PTR [eax+0x4]
64006134:	jne    0x64006139
64006136:	mov    DWORD PTR [ebx+0x4],esi
64006139:	mov    DWORD PTR [esi],ebx
6400613b:	mov    edx,DWORD PTR [edi+0x8]
6400613e:	mov    DWORD PTR [eax+0x8],edx
64006141:	mov    ecx,DWORD PTR [edi+0x8]
64006144:	mov    DWORD PTR [ecx+0x4],eax
64006147:	mov    edx,DWORD PTR [esp+0x14]
6400614b:	mov    ecx,DWORD PTR [edx+0x4]
6400614e:	cmp    DWORD PTR [ecx+0x4],edi
64006151:	jne    0x64006158
64006153:	mov    DWORD PTR [ecx+0x4],eax
64006156:	jmp    0x64006166
64006158:	mov    ecx,DWORD PTR [edi+0x4]
6400615b:	cmp    DWORD PTR [ecx],edi
6400615d:	jne    0x64006163
6400615f:	mov    DWORD PTR [ecx],eax
64006161:	jmp    0x64006166
64006163:	mov    DWORD PTR [ecx+0x8],eax
64006166:	mov    ecx,DWORD PTR [edi+0x4]
64006169:	mov    DWORD PTR [eax+0x4],ecx
6400616c:	mov    cl,BYTE PTR [eax+0x44]
6400616f:	mov    dl,BYTE PTR [edi+0x44]
64006172:	mov    BYTE PTR [eax+0x44],dl
64006175:	mov    BYTE PTR [edi+0x44],cl
64006178:	mov    ecx,DWORD PTR [esp+0x14]
6400617c:	cmp    BYTE PTR [edi+0x44],0x1
64006180:	jne    0x64006291
64006186:	mov    eax,DWORD PTR [ecx+0x4]
64006189:	cmp    ebx,DWORD PTR [eax+0x4]
6400618c:	je     0x6400628d
64006192:	cmp    BYTE PTR [ebx+0x44],0x1
64006196:	jne    0x6400628d
6400619c:	mov    eax,DWORD PTR [esi]
6400619e:	cmp    ebx,eax
640061a0:	jne    0x64006210
640061a2:	mov    eax,DWORD PTR [esi+0x8]
640061a5:	cmp    BYTE PTR [eax+0x44],0x0
640061a9:	jne    0x640061c0
640061ab:	mov    BYTE PTR [eax+0x44],0x1
640061af:	push   esi
640061b0:	mov    BYTE PTR [esi+0x44],0x0
640061b4:	call   0x64005b80
640061b9:	mov    eax,DWORD PTR [esi+0x8]
640061bc:	mov    ecx,DWORD PTR [esp+0x14]
640061c0:	cmp    BYTE PTR [eax+0x45],0x0
640061c4:	jne    0x64006245
640061c6:	mov    edx,DWORD PTR [eax]
640061c8:	cmp    BYTE PTR [edx+0x44],0x1
640061cc:	jne    0x640061d7
640061ce:	mov    edx,DWORD PTR [eax+0x8]
640061d1:	cmp    BYTE PTR [edx+0x44],0x1
640061d5:	je     0x64006241
640061d7:	mov    edx,DWORD PTR [eax+0x8]
640061da:	cmp    BYTE PTR [edx+0x44],0x1
640061de:	jne    0x640061f7
640061e0:	mov    edx,DWORD PTR [eax]
640061e2:	mov    BYTE PTR [edx+0x44],0x1
640061e6:	push   eax
640061e7:	mov    BYTE PTR [eax+0x44],0x0
640061eb:	call   0x640057f0
640061f0:	mov    eax,DWORD PTR [esi+0x8]
640061f3:	mov    ecx,DWORD PTR [esp+0x14]
640061f7:	mov    dl,BYTE PTR [esi+0x44]
640061fa:	mov    BYTE PTR [eax+0x44],dl
640061fd:	mov    BYTE PTR [esi+0x44],0x1
64006201:	mov    eax,DWORD PTR [eax+0x8]
64006204:	push   esi
64006205:	mov    BYTE PTR [eax+0x44],0x1
64006209:	call   0x64005b80
6400620e:	jmp    0x6400628d
64006210:	cmp    BYTE PTR [eax+0x44],0x0
64006214:	jne    0x6400622a
64006216:	mov    BYTE PTR [eax+0x44],0x1
6400621a:	push   esi
6400621b:	mov    BYTE PTR [esi+0x44],0x0
6400621f:	call   0x640057f0
64006224:	mov    eax,DWORD PTR [esi]
64006226:	mov    ecx,DWORD PTR [esp+0x14]
6400622a:	cmp    BYTE PTR [eax+0x45],0x0
6400622e:	jne    0x64006245
64006230:	mov    edx,DWORD PTR [eax+0x8]
64006233:	cmp    BYTE PTR [edx+0x44],0x1
64006237:	jne    0x64006258
64006239:	mov    edx,DWORD PTR [eax]
6400623b:	cmp    BYTE PTR [edx+0x44],0x1
6400623f:	jne    0x64006258
64006241:	mov    BYTE PTR [eax+0x44],0x0
64006245:	mov    eax,DWORD PTR [ecx+0x4]
64006248:	mov    ebx,esi
6400624a:	cmp    ebx,DWORD PTR [eax+0x4]
6400624d:	mov    esi,DWORD PTR [esi+0x4]
64006250:	jne    0x64006192
64006256:	jmp    0x6400628d
64006258:	mov    edx,DWORD PTR [eax]
6400625a:	cmp    BYTE PTR [edx+0x44],0x1
6400625e:	jne    0x64006277
64006260:	mov    edx,DWORD PTR [eax+0x8]
64006263:	mov    BYTE PTR [edx+0x44],0x1
64006267:	push   eax
64006268:	mov    BYTE PTR [eax+0x44],0x0
6400626c:	call   0x64005b80
64006271:	mov    eax,DWORD PTR [esi]
64006273:	mov    ecx,DWORD PTR [esp+0x14]
64006277:	mov    dl,BYTE PTR [esi+0x44]
6400627a:	mov    BYTE PTR [eax+0x44],dl
6400627d:	mov    BYTE PTR [esi+0x44],0x1
64006281:	mov    eax,DWORD PTR [eax]
64006283:	push   esi
64006284:	mov    BYTE PTR [eax+0x44],0x1
64006288:	call   0x640057f0
6400628d:	mov    BYTE PTR [ebx+0x44],0x1
64006291:	cmp    DWORD PTR [edi+0x40],0x8
64006295:	jb     0x640062a3
64006297:	mov    ecx,DWORD PTR [edi+0x2c]
6400629a:	push   ecx
6400629b:	call   0x6400eb52
640062a0:	add    esp,0x4
640062a3:	xor    esi,esi
640062a5:	mov    ebx,0x7
640062aa:	mov    DWORD PTR [edi+0x40],ebx
640062ad:	mov    DWORD PTR [edi+0x3c],esi
640062b0:	mov    WORD PTR [edi+0x2c],si
640062b4:	cmp    DWORD PTR [edi+0x24],0x8
640062b8:	jb     0x640062c6
640062ba:	mov    edx,DWORD PTR [edi+0x10]
640062bd:	push   edx
640062be:	call   0x6400eb52
640062c3:	add    esp,0x4
640062c6:	mov    DWORD PTR [edi+0x24],ebx
640062c9:	mov    DWORD PTR [edi+0x20],esi
640062cc:	push   edi
640062cd:	mov    WORD PTR [edi+0x10],si
640062d1:	call   0x6400eb52
640062d6:	mov    ecx,DWORD PTR [esp+0x18]
640062da:	mov    eax,DWORD PTR [ecx+0x8]
640062dd:	add    esp,0x4
640062e0:	cmp    eax,esi
640062e2:	jbe    0x640062ea
640062e4:	add    eax,0xffffffff
640062e7:	mov    DWORD PTR [ecx+0x8],eax
640062ea:	mov    eax,DWORD PTR [ebp+0x8]
640062ed:	mov    ecx,DWORD PTR [ebp+0xc]
640062f0:	mov    edx,DWORD PTR [ebp+0x10]
640062f3:	mov    DWORD PTR [eax],ecx
640062f5:	mov    DWORD PTR [eax+0x4],edx
640062f8:	mov    ecx,DWORD PTR [esp+0x60]
640062fc:	mov    DWORD PTR fs:0x0,ecx
64006303:	pop    ecx
64006304:	pop    edi
64006305:	pop    esi
64006306:	pop    ebx
64006307:	mov    esp,ebp
64006309:	pop    ebp
6400630a:	ret    0xc
6400630d:	int3   
6400630e:	int3   
6400630f:	int3   
64006310:	push   0x48
64006312:	call   0x6400eed3
64006317:	add    esp,0x4
6400631a:	test   eax,eax
6400631c:	je     0x64006324
6400631e:	mov    DWORD PTR [eax],0x0
64006324:	lea    ecx,[eax+0x4]
64006327:	test   ecx,ecx
64006329:	je     0x64006331
6400632b:	mov    DWORD PTR [ecx],0x0
64006331:	lea    ecx,[eax+0x8]
64006334:	test   ecx,ecx
64006336:	je     0x6400633e
64006338:	mov    DWORD PTR [ecx],0x0
6400633e:	mov    BYTE PTR [eax+0x44],0x1
64006342:	mov    BYTE PTR [eax+0x45],0x0
64006346:	ret    
64006347:	int3   
64006348:	int3   
64006349:	int3   
6400634a:	int3   
6400634b:	int3   
6400634c:	int3   
6400634d:	int3   
6400634e:	int3   
6400634f:	int3   
64006350:	push   esi
64006351:	mov    esi,ecx
64006353:	cmp    DWORD PTR [esi],0x0
64006356:	jne    0x6400635d
64006358:	call   0x6400eeaa
6400635d:	mov    eax,DWORD PTR [esi+0x4]
64006360:	cmp    BYTE PTR [eax+0x45],0x0
64006364:	je     0x64006378
64006366:	mov    eax,DWORD PTR [eax+0x8]
64006369:	mov    DWORD PTR [esi+0x4],eax
6400636c:	cmp    BYTE PTR [eax+0x45],0x0
64006370:	je     0x640063d7
64006372:	pop    esi
64006373:	jmp    0x6400eeaa
64006378:	mov    ecx,DWORD PTR [eax]
6400637a:	cmp    BYTE PTR [ecx+0x45],0x0
6400637e:	jne    0x640063a0
64006380:	mov    eax,DWORD PTR [ecx+0x8]
64006383:	cmp    BYTE PTR [eax+0x45],0x0
64006387:	jne    0x6400639b
64006389:	lea    esp,[esp+0x0]
64006390:	mov    ecx,eax
64006392:	mov    eax,DWORD PTR [ecx+0x8]
64006395:	cmp    BYTE PTR [eax+0x45],0x0
64006399:	je     0x64006390
6400639b:	mov    DWORD PTR [esi+0x4],ecx
6400639e:	pop    esi
6400639f:	ret    
640063a0:	mov    eax,DWORD PTR [eax+0x4]
640063a3:	cmp    BYTE PTR [eax+0x45],0x0
640063a7:	jne    0x640063c5
640063a9:	lea    esp,[esp+0x0]
640063b0:	mov    ecx,DWORD PTR [esi+0x4]
640063b3:	cmp    ecx,DWORD PTR [eax]
640063b5:	jne    0x640063c5
640063b7:	mov    DWORD PTR [esi+0x4],eax
640063ba:	mov    edx,eax
640063bc:	mov    eax,DWORD PTR [edx+0x4]
640063bf:	cmp    BYTE PTR [eax+0x45],0x0
640063c3:	je     0x640063b0
640063c5:	mov    ecx,DWORD PTR [esi+0x4]
640063c8:	cmp    BYTE PTR [ecx+0x45],0x0
640063cc:	je     0x640063d4
640063ce:	pop    esi
640063cf:	jmp    0x6400eeaa
640063d4:	mov    DWORD PTR [esi+0x4],eax
640063d7:	pop    esi
640063d8:	ret    
640063d9:	int3   
640063da:	int3   
640063db:	int3   
640063dc:	int3   
640063dd:	int3   
640063de:	int3   
640063df:	int3   
640063e0:	push   esi
640063e1:	mov    esi,ecx
640063e3:	cmp    DWORD PTR [esi],0x0
640063e6:	jne    0x640063ed
640063e8:	call   0x6400eeaa
640063ed:	mov    eax,DWORD PTR [esi+0x4]
640063f0:	cmp    BYTE PTR [eax+0x45],0x0
640063f4:	je     0x640063fc
640063f6:	pop    esi
640063f7:	jmp    0x6400eeaa
640063fc:	mov    ecx,DWORD PTR [eax+0x8]
640063ff:	cmp    BYTE PTR [ecx+0x45],0x0
64006403:	jne    0x6400641f
64006405:	mov    eax,DWORD PTR [ecx]
64006407:	cmp    BYTE PTR [eax+0x45],0x0
6400640b:	jne    0x6400641a
6400640d:	lea    ecx,[ecx+0x0]
64006410:	mov    ecx,eax
64006412:	mov    eax,DWORD PTR [ecx]
64006414:	cmp    BYTE PTR [eax+0x45],0x0
64006418:	je     0x64006410
6400641a:	mov    DWORD PTR [esi+0x4],ecx
6400641d:	pop    esi
6400641e:	ret    
6400641f:	mov    eax,DWORD PTR [eax+0x4]
64006422:	cmp    BYTE PTR [eax+0x45],0x0
64006426:	jne    0x6400643e
64006428:	mov    ecx,DWORD PTR [esi+0x4]
6400642b:	cmp    ecx,DWORD PTR [eax+0x8]
6400642e:	jne    0x6400643e
64006430:	mov    DWORD PTR [esi+0x4],eax
64006433:	mov    edx,eax
64006435:	mov    eax,DWORD PTR [edx+0x4]
64006438:	cmp    BYTE PTR [eax+0x45],0x0
6400643c:	je     0x64006428
6400643e:	mov    DWORD PTR [esi+0x4],eax
64006441:	pop    esi
64006442:	ret    
64006443:	int3   
64006444:	int3   
64006445:	int3   
64006446:	int3   
64006447:	int3   
64006448:	int3   
64006449:	int3   
6400644a:	int3   
6400644b:	int3   
6400644c:	int3   
6400644d:	int3   
6400644e:	int3   
6400644f:	int3   
64006450:	push   0xffffffff
64006452:	push   0x6401ecc8
64006457:	mov    eax,fs:0x0
6400645d:	push   eax
6400645e:	push   ecx
6400645f:	push   ebx
64006460:	push   esi
64006461:	push   edi
64006462:	mov    eax,ds:0x64028038
64006467:	xor    eax,esp
64006469:	push   eax
6400646a:	lea    eax,[esp+0x14]
6400646e:	mov    fs:0x0,eax
64006474:	mov    esi,ecx
64006476:	mov    DWORD PTR [esp+0x10],esi
6400647a:	mov    edi,DWORD PTR [esp+0x24]
6400647e:	xor    ebx,ebx
64006480:	push   0xffffffff
64006482:	push   ebx
64006483:	mov    DWORD PTR [esi+0x18],0xf
6400648a:	mov    DWORD PTR [esi+0x14],ebx
6400648d:	push   edi
6400648e:	mov    BYTE PTR [esi+0x4],bl
64006491:	call   0x64001ad0
64006496:	push   0xffffffff
64006498:	lea    ecx,[esi+0x1c]
6400649b:	mov    DWORD PTR [esp+0x20],ebx
6400649f:	lea    eax,[edi+0x1c]
640064a2:	push   ebx
640064a3:	mov    DWORD PTR [ecx+0x18],0xf
640064aa:	mov    DWORD PTR [ecx+0x14],ebx
640064ad:	push   eax
640064ae:	mov    BYTE PTR [ecx+0x4],bl
640064b1:	call   0x64001ad0
640064b6:	mov    eax,esi
640064b8:	mov    ecx,DWORD PTR [esp+0x14]
640064bc:	mov    DWORD PTR fs:0x0,ecx
640064c3:	pop    ecx
640064c4:	pop    edi
640064c5:	pop    esi
640064c6:	pop    ebx
640064c7:	add    esp,0x10
640064ca:	ret    0x4
640064cd:	int3   
640064ce:	int3   
640064cf:	int3   
640064d0:	push   0xffffffff
640064d2:	push   0x6401ee78
640064d7:	mov    eax,fs:0x0
640064dd:	push   eax
640064de:	push   ecx
640064df:	push   ebx
640064e0:	push   esi
640064e1:	push   edi
640064e2:	mov    eax,ds:0x64028038
640064e7:	xor    eax,esp
640064e9:	push   eax
640064ea:	lea    eax,[esp+0x14]
640064ee:	mov    fs:0x0,eax
640064f4:	mov    esi,ecx
640064f6:	mov    DWORD PTR [esp+0x10],esi
640064fa:	mov    ebx,DWORD PTR [esp+0x24]
640064fe:	xor    edi,edi
64006500:	push   0xffffffff
64006502:	push   edi
64006503:	mov    DWORD PTR [esi+0x18],0x7
6400650a:	mov    DWORD PTR [esi+0x14],edi
6400650d:	push   ebx
6400650e:	mov    WORD PTR [esi+0x4],di
64006512:	call   0x640048a0
64006517:	push   0xffffffff
64006519:	lea    ecx,[esi+0x1c]
6400651c:	mov    DWORD PTR [esp+0x20],edi
64006520:	lea    eax,[ebx+0x1c]
64006523:	push   edi
64006524:	mov    DWORD PTR [ecx+0x18],0x7
6400652b:	mov    DWORD PTR [ecx+0x14],edi
6400652e:	push   eax
6400652f:	mov    WORD PTR [ecx+0x4],di
64006533:	call   0x640048a0
64006538:	mov    eax,esi
6400653a:	mov    ecx,DWORD PTR [esp+0x14]
6400653e:	mov    DWORD PTR fs:0x0,ecx
64006545:	pop    ecx
64006546:	pop    edi
64006547:	pop    esi
64006548:	pop    ebx
64006549:	add    esp,0x10
6400654c:	ret    0x4
6400654f:	int3   
64006550:	push   ecx
64006551:	push   ebx
64006552:	push   esi
64006553:	mov    esi,DWORD PTR [esp+0x10]
64006557:	xor    ebx,ebx
64006559:	cmp    BYTE PTR [esi+0x45],bl
6400655c:	push   edi
6400655d:	mov    DWORD PTR [esp+0xc],ecx
64006561:	mov    edi,esi
64006563:	jne    0x640065c6
64006565:	push   ebp
64006566:	lea    ebp,[ebx+0xf]
64006569:	lea    esp,[esp+0x0]
64006570:	mov    eax,DWORD PTR [edi+0x8]
64006573:	mov    ecx,DWORD PTR [esp+0x10]
64006577:	push   eax
64006578:	call   0x64006550
6400657d:	cmp    DWORD PTR [esi+0x40],0x10
64006581:	mov    edi,DWORD PTR [edi]
64006583:	jb     0x64006591
64006585:	mov    ecx,DWORD PTR [esi+0x2c]
64006588:	push   ecx
64006589:	call   0x6400eb52
6400658e:	add    esp,0x4
64006591:	mov    DWORD PTR [esi+0x40],ebp
64006594:	mov    DWORD PTR [esi+0x3c],ebx
64006597:	mov    BYTE PTR [esi+0x2c],bl
6400659a:	cmp    DWORD PTR [esi+0x24],0x10
6400659e:	jb     0x640065ac
640065a0:	mov    edx,DWORD PTR [esi+0x10]
640065a3:	push   edx
640065a4:	call   0x6400eb52
640065a9:	add    esp,0x4
640065ac:	mov    DWORD PTR [esi+0x24],ebp
640065af:	mov    DWORD PTR [esi+0x20],ebx
640065b2:	push   esi
640065b3:	mov    BYTE PTR [esi+0x10],bl
640065b6:	call   0x6400eb52
640065bb:	add    esp,0x4
640065be:	cmp    BYTE PTR [edi+0x45],bl
640065c1:	mov    esi,edi
640065c3:	je     0x64006570
640065c5:	pop    ebp
640065c6:	pop    edi
640065c7:	pop    esi
640065c8:	pop    ebx
640065c9:	pop    ecx
640065ca:	ret    0x4
640065cd:	int3   
640065ce:	int3   
640065cf:	int3   
640065d0:	mov    eax,DWORD PTR [esp+0x4]
640065d4:	mov    ecx,DWORD PTR [eax+0x8]
640065d7:	cmp    BYTE PTR [ecx+0x45],0x0
640065db:	jne    0x640065eb
640065dd:	lea    ecx,[ecx+0x0]
640065e0:	mov    eax,ecx
640065e2:	mov    ecx,DWORD PTR [eax+0x8]
640065e5:	cmp    BYTE PTR [ecx+0x45],0x0
640065e9:	je     0x640065e0
640065eb:	ret    
640065ec:	int3   
640065ed:	int3   
640065ee:	int3   
640065ef:	int3   
640065f0:	push   ecx
640065f1:	push   ebx
640065f2:	push   esi
640065f3:	mov    esi,DWORD PTR [esp+0x10]
640065f7:	xor    ebx,ebx
640065f9:	cmp    BYTE PTR [esi+0x45],bl
640065fc:	push   edi
640065fd:	mov    DWORD PTR [esp+0xc],ecx
64006601:	mov    edi,esi
64006603:	jne    0x64006668
64006605:	push   ebp
64006606:	lea    ebp,[ebx+0x7]
64006609:	lea    esp,[esp+0x0]
64006610:	mov    eax,DWORD PTR [edi+0x8]
64006613:	mov    ecx,DWORD PTR [esp+0x10]
64006617:	push   eax
64006618:	call   0x640065f0
6400661d:	cmp    DWORD PTR [esi+0x40],0x8
64006621:	mov    edi,DWORD PTR [edi]
64006623:	jb     0x64006631
64006625:	mov    ecx,DWORD PTR [esi+0x2c]
64006628:	push   ecx
64006629:	call   0x6400eb52
6400662e:	add    esp,0x4
64006631:	mov    DWORD PTR [esi+0x40],ebp
64006634:	mov    DWORD PTR [esi+0x3c],ebx
64006637:	mov    WORD PTR [esi+0x2c],bx
6400663b:	cmp    DWORD PTR [esi+0x24],0x8
6400663f:	jb     0x6400664d
64006641:	mov    edx,DWORD PTR [esi+0x10]
64006644:	push   edx
64006645:	call   0x6400eb52
6400664a:	add    esp,0x4
6400664d:	mov    DWORD PTR [esi+0x24],ebp
64006650:	mov    DWORD PTR [esi+0x20],ebx
64006653:	push   esi
64006654:	mov    WORD PTR [esi+0x10],bx
64006658:	call   0x6400eb52
6400665d:	add    esp,0x4
64006660:	cmp    BYTE PTR [edi+0x45],bl
64006663:	mov    esi,edi
64006665:	je     0x64006610
64006667:	pop    ebp
64006668:	pop    edi
64006669:	pop    esi
6400666a:	pop    ebx
6400666b:	pop    ecx
6400666c:	ret    0x4
6400666f:	int3   
64006670:	mov    eax,DWORD PTR [esp+0x4]
64006674:	mov    ecx,DWORD PTR [eax]
64006676:	cmp    BYTE PTR [ecx+0x45],0x0
6400667a:	jne    0x6400668a
6400667c:	lea    esp,[esp+0x0]
64006680:	mov    eax,ecx
64006682:	mov    ecx,DWORD PTR [eax]
64006684:	cmp    BYTE PTR [ecx+0x45],0x0
64006688:	je     0x64006680
6400668a:	ret    
6400668b:	int3   
6400668c:	int3   
6400668d:	int3   
6400668e:	int3   
6400668f:	int3   
64006690:	push   0xffffffff
64006692:	push   0x6401ec98
64006697:	mov    eax,fs:0x0
6400669d:	push   eax
6400669e:	sub    esp,0x20
640066a1:	push   ebx
640066a2:	push   ebp
640066a3:	mov    eax,ds:0x64028038
640066a8:	xor    eax,esp
640066aa:	push   eax
640066ab:	lea    eax,[esp+0x2c]
640066af:	mov    fs:0x0,eax
640066b5:	mov    eax,DWORD PTR [esp+0x3c]
640066b9:	xor    ebx,ebx
640066bb:	push   0xffffffff
640066bd:	push   ebx
640066be:	push   eax
640066bf:	lea    ecx,[esp+0x1c]
640066c3:	mov    DWORD PTR [esp+0x18],ebx
640066c7:	mov    DWORD PTR [esp+0x34],0xf
640066cf:	mov    DWORD PTR [esp+0x30],ebx
640066d3:	mov    BYTE PTR [esp+0x20],bl
640066d7:	call   0x64001ad0
640066dc:	mov    eax,edi
640066de:	mov    DWORD PTR [esp+0x34],ebx
640066e2:	lea    ebp,[eax+0x1]
640066e5:	mov    cl,BYTE PTR [eax]
640066e7:	add    eax,0x1
640066ea:	cmp    cl,bl
640066ec:	jne    0x640066e5
640066ee:	sub    eax,ebp
640066f0:	push   eax
640066f1:	push   edi
640066f2:	lea    eax,[esp+0x18]
640066f6:	call   0x640067d0
640066fb:	push   0xffffffff
640066fd:	push   ebx
640066fe:	mov    DWORD PTR [esi+0x18],0xf
64006705:	mov    DWORD PTR [esi+0x14],ebx
64006708:	push   eax
64006709:	mov    ecx,esi
6400670b:	mov    BYTE PTR [esi+0x4],bl
6400670e:	call   0x64001ad0
64006713:	cmp    DWORD PTR [esp+0x28],0x10
64006718:	jb     0x64006727
6400671a:	mov    ecx,DWORD PTR [esp+0x14]
6400671e:	push   ecx
6400671f:	call   0x6400eb52
64006724:	add    esp,0x4
64006727:	mov    eax,esi
64006729:	mov    ecx,DWORD PTR [esp+0x2c]
6400672d:	mov    DWORD PTR fs:0x0,ecx
64006734:	pop    ecx
64006735:	pop    ebp
64006736:	pop    ebx
64006737:	add    esp,0x2c
6400673a:	ret    
6400673b:	int3   
6400673c:	int3   
6400673d:	int3   
6400673e:	int3   
6400673f:	int3   
64006740:	push   ebx
64006741:	push   ebp
64006742:	push   esi
64006743:	push   edi
64006744:	mov    edi,DWORD PTR [esp+0x14]
64006748:	mov    esi,ecx
6400674a:	cmp    DWORD PTR [esi+0x14],edi
6400674d:	jae    0x64006754
6400674f:	call   0x6400eb0e
64006754:	mov    eax,DWORD PTR [esi+0x14]
64006757:	mov    ebx,DWORD PTR [esp+0x18]
6400675b:	sub    eax,edi
6400675d:	cmp    eax,ebx
6400675f:	jae    0x64006763
64006761:	mov    ebx,eax
64006763:	mov    ebp,DWORD PTR [esp+0x20]
64006767:	cmp    ebx,ebp
64006769:	mov    edx,ebx
6400676b:	jb     0x6400676f
6400676d:	mov    edx,ebp
6400676f:	cmp    DWORD PTR [esi+0x18],0x8
64006773:	jb     0x6400677a
64006775:	mov    eax,DWORD PTR [esi+0x4]
64006778:	jmp    0x6400677d
6400677a:	lea    eax,[esi+0x4]
6400677d:	test   edx,edx
6400677f:	mov    ecx,DWORD PTR [esp+0x1c]
64006783:	lea    eax,[eax+edi*2]
64006786:	jbe    0x640067ad
64006788:	mov    si,WORD PTR [eax]
6400678b:	cmp    si,WORD PTR [ecx]
6400678e:	jne    0x6400679d
64006790:	add    eax,0x2
64006793:	add    ecx,0x2
64006796:	sub    edx,0x1
64006799:	jne    0x64006788
6400679b:	jmp    0x640067ad
6400679d:	movzx  eax,WORD PTR [eax]
640067a0:	cmp    ax,WORD PTR [ecx]
640067a3:	sbb    eax,eax
640067a5:	and    eax,0xfffffffe
640067a8:	add    eax,0x1
640067ab:	jne    0x640067c2
640067ad:	cmp    ebx,ebp
640067af:	jae    0x640067bb
640067b1:	pop    edi
640067b2:	pop    esi
640067b3:	pop    ebp
640067b4:	or     eax,0xffffffff
640067b7:	pop    ebx
640067b8:	ret    0x10
640067bb:	xor    eax,eax
640067bd:	cmp    ebx,ebp
640067bf:	setne  al
640067c2:	pop    edi
640067c3:	pop    esi
640067c4:	pop    ebp
640067c5:	pop    ebx
640067c6:	ret    0x10
640067c9:	int3   
640067ca:	int3   
640067cb:	int3   
640067cc:	int3   
640067cd:	int3   
640067ce:	int3   
640067cf:	int3   
640067d0:	mov    ecx,DWORD PTR [esp+0x4]
640067d4:	push   ebx
640067d5:	push   ebp
640067d6:	mov    ebp,DWORD PTR [esp+0x10]
640067da:	push   esi
640067db:	mov    esi,eax
640067dd:	mov    edx,DWORD PTR [esi+0x18]
640067e0:	cmp    edx,0x10
640067e3:	push   edi
640067e4:	lea    ebx,[esi+0x4]
640067e7:	jb     0x640067ed
640067e9:	mov    eax,DWORD PTR [ebx]
640067eb:	jmp    0x640067ef
640067ed:	mov    eax,ebx
640067ef:	cmp    ecx,eax
640067f1:	jb     0x64006820
640067f3:	cmp    edx,0x10
640067f6:	jb     0x640067fc
640067f8:	mov    eax,DWORD PTR [ebx]
640067fa:	jmp    0x640067fe
640067fc:	mov    eax,ebx
640067fe:	mov    edi,DWORD PTR [esi+0x14]
64006801:	add    edi,eax
64006803:	cmp    edi,ecx
64006805:	jbe    0x64006820
64006807:	cmp    edx,0x10
6400680a:	jb     0x6400680e
6400680c:	mov    ebx,DWORD PTR [ebx]
6400680e:	sub    ecx,ebx
64006810:	push   ecx
64006811:	push   esi
64006812:	mov    eax,ebp
64006814:	call   0x640068c0
64006819:	pop    edi
6400681a:	pop    esi
6400681b:	pop    ebp
6400681c:	pop    ebx
6400681d:	ret    0x8
64006820:	mov    eax,DWORD PTR [esi+0x14]
64006823:	or     ecx,0xffffffff
64006826:	sub    ecx,eax
64006828:	cmp    ecx,ebp
6400682a:	jbe    0x64006833
6400682c:	lea    edx,[eax+ebp*1]
6400682f:	cmp    edx,eax
64006831:	jae    0x64006838
64006833:	call   0x6400eacf
64006838:	test   ebp,ebp
6400683a:	jbe    0x640068b0
6400683c:	mov    edi,DWORD PTR [esi+0x14]
6400683f:	add    edi,ebp
64006841:	cmp    edi,0xfffffffe
64006844:	jbe    0x6400684b
64006846:	call   0x6400eacf
6400684b:	mov    eax,DWORD PTR [esi+0x18]
6400684e:	cmp    eax,edi
64006850:	jae    0x6400686e
64006852:	mov    eax,DWORD PTR [esi+0x14]
64006855:	push   eax
64006856:	push   edi
64006857:	mov    ecx,esi
64006859:	call   0x640020a0
6400685e:	test   edi,edi
64006860:	jbe    0x640068b0
64006862:	mov    eax,DWORD PTR [esi+0x18]
64006865:	cmp    eax,0x10
64006868:	jb     0x64006888
6400686a:	mov    edx,DWORD PTR [ebx]
6400686c:	jmp    0x6400688a
6400686e:	test   edi,edi
64006870:	jne    0x64006860
64006872:	cmp    eax,0x10
64006875:	mov    DWORD PTR [esi+0x14],edi
64006878:	jb     0x6400687c
6400687a:	mov    ebx,DWORD PTR [ebx]
6400687c:	pop    edi
6400687d:	mov    eax,esi
6400687f:	pop    esi
64006880:	pop    ebp
64006881:	mov    BYTE PTR [ebx],0x0
64006884:	pop    ebx
64006885:	ret    0x8
64006888:	mov    edx,ebx
6400688a:	mov    ecx,DWORD PTR [esi+0x14]
6400688d:	push   ebp
6400688e:	mov    ebp,DWORD PTR [esp+0x18]
64006892:	sub    eax,ecx
64006894:	push   ebp
64006895:	push   eax
64006896:	add    ecx,edx
64006898:	push   ecx
64006899:	call   0x6400ecaa
6400689e:	add    esp,0x10
640068a1:	cmp    DWORD PTR [esi+0x18],0x10
640068a5:	mov    DWORD PTR [esi+0x14],edi
640068a8:	jb     0x640068ac
640068aa:	mov    ebx,DWORD PTR [ebx]
640068ac:	mov    BYTE PTR [ebx+edi*1],0x0
640068b0:	pop    edi
640068b1:	mov    eax,esi
640068b3:	pop    esi
640068b4:	pop    ebp
640068b5:	pop    ebx
640068b6:	ret    0x8
640068b9:	int3   
640068ba:	int3   
640068bb:	int3   
640068bc:	int3   
640068bd:	int3   
640068be:	int3   
640068bf:	int3   
640068c0:	push   ebx
640068c1:	push   ebp
640068c2:	mov    ebp,DWORD PTR [esp+0xc]
640068c6:	push   edi
640068c7:	mov    edi,DWORD PTR [esp+0x14]
640068cb:	cmp    DWORD PTR [ebp+0x14],edi
640068ce:	mov    ebx,eax
640068d0:	jae    0x640068d7
640068d2:	call   0x6400eb0e
640068d7:	mov    eax,DWORD PTR [ebp+0x14]
640068da:	sub    eax,edi
640068dc:	cmp    eax,ebx
640068de:	jae    0x640068e2
640068e0:	mov    ebx,eax
640068e2:	mov    eax,DWORD PTR [esi+0x14]
640068e5:	or     ecx,0xffffffff
640068e8:	sub    ecx,eax
640068ea:	cmp    ecx,ebx
640068ec:	jbe    0x640068f5
640068ee:	lea    edx,[eax+ebx*1]
640068f1:	cmp    edx,eax
640068f3:	jae    0x640068fa
640068f5:	call   0x6400eacf
640068fa:	test   ebx,ebx
640068fc:	jbe    0x640069a6
64006902:	mov    edi,DWORD PTR [esi+0x14]
64006905:	add    edi,ebx
64006907:	cmp    edi,0xfffffffe
6400690a:	jbe    0x64006911
6400690c:	call   0x6400eacf
64006911:	mov    eax,DWORD PTR [esi+0x18]
64006914:	cmp    eax,edi
64006916:	jae    0x64006933
64006918:	mov    eax,DWORD PTR [esi+0x14]
6400691b:	push   eax
6400691c:	push   edi
6400691d:	mov    ecx,esi
6400691f:	call   0x640020a0
64006924:	test   edi,edi
64006926:	jbe    0x640069a6
64006928:	cmp    DWORD PTR [ebp+0x18],0x10
6400692c:	jb     0x6400695b
6400692e:	mov    ebp,DWORD PTR [ebp+0x4]
64006931:	jmp    0x6400695e
64006933:	test   edi,edi
64006935:	jne    0x64006926
64006937:	cmp    eax,0x10
6400693a:	mov    DWORD PTR [esi+0x14],edi
6400693d:	jb     0x6400694d
6400693f:	mov    eax,DWORD PTR [esi+0x4]
64006942:	pop    edi
64006943:	pop    ebp
64006944:	mov    BYTE PTR [eax],0x0
64006947:	mov    eax,esi
64006949:	pop    ebx
6400694a:	ret    0x8
6400694d:	pop    edi
6400694e:	lea    eax,[esi+0x4]
64006951:	pop    ebp
64006952:	mov    BYTE PTR [eax],0x0
64006955:	mov    eax,esi
64006957:	pop    ebx
64006958:	ret    0x8
6400695b:	add    ebp,0x4
6400695e:	mov    eax,DWORD PTR [esi+0x18]
64006961:	cmp    eax,0x10
64006964:	jb     0x6400696b
64006966:	mov    edx,DWORD PTR [esi+0x4]
64006969:	jmp    0x6400696e
6400696b:	lea    edx,[esi+0x4]
6400696e:	mov    ecx,DWORD PTR [esi+0x14]
64006971:	push   ebx
64006972:	mov    ebx,DWORD PTR [esp+0x18]
64006976:	add    ebp,ebx
64006978:	sub    eax,ecx
6400697a:	push   ebp
6400697b:	push   eax
6400697c:	add    ecx,edx
6400697e:	push   ecx
6400697f:	call   0x6400ecaa
64006984:	add    esp,0x10
64006987:	cmp    DWORD PTR [esi+0x18],0x10
6400698b:	mov    DWORD PTR [esi+0x14],edi
6400698e:	jb     0x6400699f
64006990:	mov    eax,DWORD PTR [esi+0x4]
64006993:	mov    BYTE PTR [eax+edi*1],0x0
64006997:	pop    edi
64006998:	pop    ebp
64006999:	mov    eax,esi
6400699b:	pop    ebx
6400699c:	ret    0x8
6400699f:	lea    eax,[esi+0x4]
640069a2:	mov    BYTE PTR [eax+edi*1],0x0
640069a6:	pop    edi
640069a7:	pop    ebp
640069a8:	mov    eax,esi
640069aa:	pop    ebx
640069ab:	ret    0x8
640069ae:	int3   
640069af:	int3   
640069b0:	push   esi
640069b1:	mov    esi,ecx
640069b3:	call   0x6400a3c0
640069b8:	call   eax
640069ba:	mov    DWORD PTR [esi],eax
640069bc:	mov    eax,esi
640069be:	pop    esi
640069bf:	ret    
640069c0:	mov    eax,DWORD PTR [ecx]
640069c2:	push   eax
640069c3:	call   0x6400a4a0
640069c8:	call   eax
640069ca:	ret    
640069cb:	int3   
640069cc:	int3   
640069cd:	int3   
640069ce:	int3   
640069cf:	int3   
640069d0:	push   ebp
640069d1:	mov    ebp,esp
640069d3:	and    esp,0xfffffff8
640069d6:	push   0xffffffff
640069d8:	push   0x6401fae0
640069dd:	mov    eax,fs:0x0
640069e3:	push   eax
640069e4:	sub    esp,0x68
640069e7:	mov    eax,ds:0x64028038
640069ec:	xor    eax,esp
640069ee:	mov    DWORD PTR [esp+0x60],eax
640069f2:	push   ebx
640069f3:	push   esi
640069f4:	push   edi
640069f5:	mov    eax,ds:0x64028038
640069fa:	xor    eax,esp
640069fc:	push   eax
640069fd:	lea    eax,[esp+0x78]
64006a01:	mov    fs:0x0,eax
64006a07:	mov    eax,DWORD PTR [ebp+0x14]
64006a0a:	mov    ebx,DWORD PTR [ebp+0xc]
64006a0d:	mov    DWORD PTR [esp+0x1c],ecx
64006a11:	mov    DWORD PTR [esp+0x18],eax
64006a15:	call   DWORD PTR ds:0x6402109c
64006a1b:	lea    ecx,[esp+0x44]
64006a1f:	push   ecx
64006a20:	mov    DWORD PTR [esp+0x24],eax
64006a24:	call   DWORD PTR ds:0x640211cc
64006a2a:	xor    edi,edi
64006a2c:	mov    DWORD PTR [esp+0x6c],0xf
64006a34:	mov    DWORD PTR [esp+0x68],edi
64006a38:	mov    BYTE PTR [esp+0x58],0x0
64006a3d:	mov    ecx,DWORD PTR [ebp+0x10]
64006a40:	mov    eax,0x8d3dcb09
64006a45:	mul    ecx
64006a47:	mov    esi,edx
64006a49:	shr    esi,0x8
64006a4c:	lea    eax,[esi+0x1]
64006a4f:	cmp    eax,edi
64006a51:	mov    DWORD PTR [esp+0x80],edi
64006a58:	mov    BYTE PTR [esp+0x13],0x1
64006a5d:	je     0x64006b23
64006a63:	mov    edx,0x1d0
64006a68:	sub    edx,ebx
64006a6a:	mov    DWORD PTR [esp+0x14],ebx
64006a6e:	mov    DWORD PTR [esp+0x24],edx
64006a72:	mov    eax,DWORD PTR [esp+0x14]
64006a76:	add    eax,edx
64006a78:	cmp    eax,ecx
64006a7a:	jb     0x64006b76
64006a80:	mov    eax,esi
64006a82:	imul   eax,eax,0x1d0
64006a88:	mov    ebx,ecx
64006a8a:	sub    ebx,eax
64006a8c:	test   ebx,ebx
64006a8e:	je     0x64006b0b
64006a90:	or     ecx,0xffffffff
64006a93:	cmp    DWORD PTR [ebp+0x18],ecx
64006a96:	je     0x64006aaf
64006a98:	call   DWORD PTR ds:0x6402109c
64006a9e:	sub    eax,DWORD PTR [esp+0x20]
64006aa2:	mov    ecx,DWORD PTR [ebp+0x18]
64006aa5:	cmp    eax,ecx
64006aa7:	ja     0x64006b80
64006aad:	sub    ecx,eax
64006aaf:	mov    edx,DWORD PTR [esp+0x44]
64006ab3:	sub    esp,0x10
64006ab6:	mov    eax,esp
64006ab8:	mov    DWORD PTR [eax],edx
64006aba:	mov    edx,DWORD PTR [esp+0x58]
64006abe:	mov    DWORD PTR [eax+0x4],edx
64006ac1:	mov    edx,DWORD PTR [esp+0x5c]
64006ac5:	mov    DWORD PTR [eax+0x8],edx
64006ac8:	mov    edx,DWORD PTR [esp+0x60]
64006acc:	mov    DWORD PTR [eax+0xc],edx
64006acf:	mov    edx,DWORD PTR [esp+0x24]
64006ad3:	test   edi,edi
64006ad5:	setne  al
64006ad8:	cmp    edi,esi
64006ada:	push   eax
64006adb:	mov    eax,DWORD PTR [ebp+0x8]
64006ade:	push   ecx
64006adf:	setb   cl
64006ae2:	push   ecx
64006ae3:	mov    ecx,DWORD PTR [esp+0x38]
64006ae7:	push   edi
64006ae8:	push   ebx
64006ae9:	push   edx
64006aea:	push   eax
64006aeb:	push   ecx
64006aec:	lea    edx,[esp+0x43]
64006af0:	lea    ecx,[esp+0x84]
64006af7:	call   0x64006d10
64006afc:	test   al,al
64006afe:	je     0x64006b9b
64006b04:	mov    ecx,DWORD PTR [ebp+0x10]
64006b07:	mov    edx,DWORD PTR [esp+0x24]
64006b0b:	add    DWORD PTR [esp+0x14],0x1d0
64006b13:	add    edi,0x1
64006b16:	lea    eax,[esi+0x1]
64006b19:	cmp    edi,eax
64006b1b:	jne    0x64006a72
64006b21:	xor    edi,edi
64006b23:	mov    esi,DWORD PTR [esp+0x18]
64006b27:	push   edi
64006b28:	lea    ecx,[esp+0x58]
64006b2c:	push   ecx
64006b2d:	or     eax,0xffffffff
64006b30:	call   0x640068c0
64006b35:	cmp    BYTE PTR [esp+0x13],0x0
64006b3a:	je     0x64006ccb
64006b40:	mov    DWORD PTR [esp+0x14],0xfffffffe
64006b48:	jmp    0x64006b50
64006b4a:	lea    ebx,[ebx+0x0]
64006b50:	mov    esi,0xf
64006b55:	mov    DWORD PTR [esp+0x40],esi
64006b59:	mov    DWORD PTR [esp+0x3c],edi
64006b5d:	mov    BYTE PTR [esp+0x2c],0x0
64006b62:	mov    ebx,DWORD PTR [ebp+0x18]
64006b65:	cmp    ebx,0xffffffff
64006b68:	mov    BYTE PTR [esp+0x80],0x1
64006b70:	jne    0x64006bb6
64006b72:	or     ecx,ebx
64006b74:	jmp    0x64006bcc
64006b76:	mov    ebx,0x1d0
64006b7b:	jmp    0x64006a90
64006b80:	cmp    DWORD PTR [esp+0x6c],0x10
64006b85:	jb     0x64006b94
64006b87:	mov    edx,DWORD PTR [esp+0x58]
64006b8b:	push   edx
64006b8c:	call   0x6400eb52
64006b91:	add    esp,0x4
64006b94:	xor    al,al
64006b96:	jmp    0x64006ce1
64006b9b:	cmp    DWORD PTR [esp+0x6c],0x10
64006ba0:	jb     0x64006b94
64006ba2:	mov    eax,DWORD PTR [esp+0x58]
64006ba6:	push   eax
64006ba7:	call   0x6400eb52
64006bac:	add    esp,0x4
64006baf:	xor    al,al
64006bb1:	jmp    0x64006ce1
64006bb6:	call   DWORD PTR ds:0x6402109c
64006bbc:	sub    eax,DWORD PTR [esp+0x20]
64006bc0:	cmp    eax,ebx
64006bc2:	ja     0x64006c5b
64006bc8:	mov    ecx,ebx
64006bca:	sub    ecx,eax
64006bcc:	mov    edx,DWORD PTR [esp+0x44]
64006bd0:	sub    esp,0x10
64006bd3:	mov    eax,esp
64006bd5:	mov    DWORD PTR [eax],edx
64006bd7:	mov    edx,DWORD PTR [esp+0x58]
64006bdb:	mov    DWORD PTR [eax+0x4],edx
64006bde:	mov    edx,DWORD PTR [esp+0x5c]
64006be2:	push   0x1
64006be4:	push   ecx
64006be5:	mov    ecx,DWORD PTR [ebp+0x8]
64006be8:	mov    DWORD PTR [eax+0x8],edx
64006beb:	mov    edx,DWORD PTR [esp+0x68]
64006bef:	push   edi
64006bf0:	mov    DWORD PTR [eax+0xc],edx
64006bf3:	mov    eax,DWORD PTR [esp+0x30]
64006bf7:	mov    edx,DWORD PTR [esp+0x38]
64006bfb:	push   eax
64006bfc:	push   edi
64006bfd:	push   edi
64006bfe:	push   ecx
64006bff:	push   edx
64006c00:	lea    edx,[esp+0x43]
64006c04:	lea    ecx,[esp+0x58]
64006c08:	call   0x64006d10
64006c0d:	test   al,al
64006c0f:	je     0x64006c89
64006c11:	cmp    DWORD PTR [esp+0x3c],edi
64006c15:	je     0x64006cb7
64006c1b:	mov    esi,DWORD PTR [esp+0x18]
64006c1f:	push   edi
64006c20:	lea    eax,[esp+0x2c]
64006c24:	push   eax
64006c25:	or     eax,0xffffffff
64006c28:	call   0x640068c0
64006c2d:	mov    BYTE PTR [esp+0x80],0x0
64006c35:	cmp    DWORD PTR [esp+0x40],0x10
64006c3a:	jb     0x64006c49
64006c3c:	mov    ecx,DWORD PTR [esp+0x2c]
64006c40:	push   ecx
64006c41:	call   0x6400eb52
64006c46:	add    esp,0x4
64006c49:	sub    DWORD PTR [esp+0x14],0x1
64006c4e:	cmp    BYTE PTR [esp+0x13],0x0
64006c53:	jne    0x64006b50
64006c59:	jmp    0x64006ccb
64006c5b:	mov    ebx,0x10
64006c60:	cmp    DWORD PTR [esp+0x40],ebx
64006c64:	jb     0x64006c73
64006c66:	mov    edx,DWORD PTR [esp+0x2c]
64006c6a:	push   edx
64006c6b:	call   0x6400eb52
64006c70:	add    esp,0x4
64006c73:	cmp    DWORD PTR [esp+0x6c],ebx
64006c77:	mov    DWORD PTR [esp+0x40],esi
64006c7b:	mov    DWORD PTR [esp+0x3c],edi
64006c7f:	mov    BYTE PTR [esp+0x2c],0x0
64006c84:	jmp    0x64006ba0
64006c89:	mov    ebx,0x10
64006c8e:	cmp    DWORD PTR [esp+0x40],ebx
64006c92:	jb     0x64006ca1
64006c94:	mov    ecx,DWORD PTR [esp+0x2c]
64006c98:	push   ecx
64006c99:	call   0x6400eb52
64006c9e:	add    esp,0x4
64006ca1:	cmp    DWORD PTR [esp+0x6c],ebx
64006ca5:	mov    DWORD PTR [esp+0x40],esi
64006ca9:	mov    DWORD PTR [esp+0x3c],edi
64006cad:	mov    BYTE PTR [esp+0x2c],0x0
64006cb2:	jmp    0x64006b85
64006cb7:	cmp    DWORD PTR [esp+0x40],0x10
64006cbc:	jb     0x64006ccb
64006cbe:	mov    eax,DWORD PTR [esp+0x2c]
64006cc2:	push   eax
64006cc3:	call   0x6400eb52
64006cc8:	add    esp,0x4
64006ccb:	cmp    DWORD PTR [esp+0x6c],0x10
64006cd0:	jb     0x64006cdf
64006cd2:	mov    ecx,DWORD PTR [esp+0x58]
64006cd6:	push   ecx
64006cd7:	call   0x6400eb52
64006cdc:	add    esp,0x4
64006cdf:	mov    al,0x1
64006ce1:	mov    ecx,DWORD PTR [esp+0x78]
64006ce5:	mov    DWORD PTR fs:0x0,ecx
64006cec:	pop    ecx
64006ced:	pop    edi
64006cee:	pop    esi
64006cef:	pop    ebx
64006cf0:	mov    ecx,DWORD PTR [esp+0x60]
64006cf4:	xor    ecx,esp
64006cf6:	call   0x6400f34e
64006cfb:	mov    esp,ebp
64006cfd:	pop    ebp
64006cfe:	ret    0x14
64006d01:	int3   
64006d02:	int3   
64006d03:	int3   
64006d04:	int3   
64006d05:	int3   
64006d06:	int3   
64006d07:	int3   
64006d08:	int3   
64006d09:	int3   
64006d0a:	int3   
64006d0b:	int3   
64006d0c:	int3   
64006d0d:	int3   
64006d0e:	int3   
64006d0f:	int3   
64006d10:	push   0xffffffff
64006d12:	push   0x6401fa9c
64006d17:	mov    eax,fs:0x0
64006d1d:	push   eax
64006d1e:	mov    eax,0x10074
64006d23:	call   0x64014c50
64006d28:	mov    eax,ds:0x64028038
64006d2d:	xor    eax,esp
64006d2f:	mov    DWORD PTR [esp+0x10070],eax
64006d36:	push   ebx
64006d37:	push   ebp
64006d38:	push   esi
64006d39:	push   edi
64006d3a:	mov    eax,ds:0x64028038
64006d3f:	xor    eax,esp
64006d41:	push   eax
64006d42:	lea    eax,[esp+0x10088]
64006d49:	mov    fs:0x0,eax
64006d4f:	mov    eax,DWORD PTR [esp+0x10098]
64006d56:	mov    esi,DWORD PTR [esp+0x100a0]
64006d5d:	mov    ebp,DWORD PTR ds:0x640211b0
64006d63:	mov    DWORD PTR [esp+0x18],eax
64006d67:	mov    eax,DWORD PTR [esp+0x100b8]
64006d6e:	mov    DWORD PTR [esp+0x2c],ecx
64006d72:	mov    ecx,DWORD PTR [esp+0x100bc]
64006d79:	mov    DWORD PTR [esp+0x24],edx
64006d7d:	mov    edx,DWORD PTR [esp+0x100c0]
64006d84:	mov    DWORD PTR [esp+0x54],eax
64006d88:	mov    eax,DWORD PTR [esp+0x100c4]
64006d8f:	xor    ebx,ebx
64006d91:	mov    DWORD PTR [esp+0x1c],esi
64006d95:	mov    DWORD PTR [esp+0x58],ecx
64006d99:	mov    DWORD PTR [esp+0x5c],edx
64006d9d:	mov    DWORD PTR [esp+0x60],eax
64006da1:	mov    BYTE PTR [esp+0x17],bl
64006da5:	xor    edi,edi
64006da7:	jmp    0x64006db0
64006da9:	lea    esp,[esp+0x0]
64006db0:	mov    DWORD PTR [esp+0x50],0xf
64006db8:	mov    DWORD PTR [esp+0x4c],ebx
64006dbc:	mov    BYTE PTR [esp+0x3c],bl
64006dc0:	mov    DWORD PTR [esp+0x10090],ebx
64006dc7:	mov    edx,DWORD PTR [esp+0x58]
64006dcb:	mov    eax,DWORD PTR [esp+0x5c]
64006dcf:	mov    ecx,DWORD PTR [esp+0x54]
64006dd3:	mov    DWORD PTR [esp+0x70],eax
64006dd7:	mov    eax,DWORD PTR [esp+0x100a8]
64006dde:	mov    DWORD PTR [esp+0x68],ecx
64006de2:	mov    ecx,DWORD PTR [esp+0x60]
64006de6:	mov    DWORD PTR [esp+0x6c],edx
64006dea:	mov    dl,BYTE PTR [esp+0x100ac]
64006df1:	push   eax
64006df2:	mov    DWORD PTR [esp+0x78],ecx
64006df6:	mov    DWORD PTR [esp+0x7c],eax
64006dfa:	mov    DWORD PTR [esp+0x80],edi
64006e01:	mov    BYTE PTR [esp+0x84],dl
64006e08:	call   ebp
64006e0a:	mov    DWORD PTR [esp+0x78],eax
64006e0e:	mov    eax,DWORD PTR [esp+0x7c]
64006e12:	push   eax
64006e13:	call   ebp
64006e15:	push   0x19
64006e17:	lea    ecx,[esp+0x6c]
64006e1b:	mov    DWORD PTR [esp+0x80],eax
64006e22:	push   ecx
64006e23:	lea    eax,[esp+0x40]
64006e27:	call   0x640067d0
64006e2c:	cmp    esi,ebx
64006e2e:	je     0x64006e42
64006e30:	mov    edx,DWORD PTR [esp+0x100a4]
64006e37:	push   edx
64006e38:	push   esi
64006e39:	lea    eax,[esp+0x40]
64006e3d:	call   0x640067d0
64006e42:	cmp    DWORD PTR [esp+0x50],0x10
64006e47:	mov    eax,DWORD PTR [esp+0x3c]
64006e4b:	jae    0x64006e51
64006e4d:	lea    eax,[esp+0x3c]
64006e51:	mov    ecx,DWORD PTR [esp+0x4c]
64006e55:	push   ecx
64006e56:	push   eax
64006e57:	lea    ecx,[esp+0x3c]
64006e5b:	lea    ebx,[esp+0x30]
64006e5f:	call   0x6400a0b0
64006e64:	mov    edx,DWORD PTR [eax]
64006e66:	mov    esi,edx
64006e68:	mov    DWORD PTR [eax],0x0
64006e6e:	mov    DWORD PTR [esp+0x28],esi
64006e72:	mov    BYTE PTR [esp+0x10098],0x1
64006e7a:	mov    eax,DWORD PTR [esp+0x30]
64006e7e:	push   eax
64006e7f:	call   0x6400eb52
64006e84:	add    esp,0xc
64006e87:	lea    ecx,[esp+0x30]
64006e8b:	push   0x0
64006e8d:	push   ecx
64006e8e:	mov    DWORD PTR [esp+0x38],0x0
64006e96:	call   0x6400b540
64006e9b:	call   eax
64006e9d:	test   eax,eax
64006e9f:	je     0x64006f2e
64006ea5:	mov    eax,DWORD PTR [esp+0x100b0]
64006eac:	cmp    eax,0x1388
64006eb1:	jb     0x64006eb8
64006eb3:	mov    eax,0x1388
64006eb8:	mov    ecx,DWORD PTR [esp+0x1009c]
64006ebf:	push   eax
64006ec0:	mov    eax,DWORD PTR [esp+0x38]
64006ec4:	push   0xffff
64006ec9:	lea    edx,[esp+0x8c]
64006ed0:	push   edx
64006ed1:	mov    edx,DWORD PTR [esp+0x24]
64006ed5:	push   0x0
64006ed7:	push   eax
64006ed8:	mov    eax,DWORD PTR [edx]
64006eda:	push   esi
64006edb:	push   ecx
64006edc:	push   eax
64006edd:	call   0x6400a2e0
64006ee2:	call   eax
64006ee4:	mov    ebx,eax
64006ee6:	test   ebx,ebx
64006ee8:	jne    0x64006f31
64006eea:	push   esi
64006eeb:	call   0x6400eb52
64006ef0:	add    esp,0x4
64006ef3:	cmp    BYTE PTR [esp+0x100b4],bl
64006efa:	mov    DWORD PTR [esp+0x10090],0xffffffff
64006f05:	je     0x64006f53
64006f07:	cmp    DWORD PTR [esp+0x50],0x10
64006f0c:	jb     0x64006f1b
64006f0e:	mov    ecx,DWORD PTR [esp+0x3c]
64006f12:	push   ecx
64006f13:	call   0x6400eb52
64006f18:	add    esp,0x4
64006f1b:	add    edi,0x1
64006f1e:	cmp    edi,0x5
64006f21:	je     0x64006f67
64006f23:	mov    esi,DWORD PTR [esp+0x1c]
64006f27:	xor    ebx,ebx
64006f29:	jmp    0x64006db0
64006f2e:	or     ebx,0xffffffff
64006f31:	push   esi
64006f32:	call   0x6400eb52
64006f37:	add    esp,0x4
64006f3a:	mov    DWORD PTR [esp+0x10090],0xffffffff
64006f45:	cmp    DWORD PTR [esp+0x50],0x10
64006f4a:	jb     0x64006f67
64006f4c:	mov    edx,DWORD PTR [esp+0x3c]
64006f50:	push   edx
64006f51:	jmp    0x64006f5f
64006f53:	cmp    DWORD PTR [esp+0x50],0x10
64006f58:	jb     0x64006f67
64006f5a:	mov    eax,DWORD PTR [esp+0x3c]
64006f5e:	push   eax
64006f5f:	call   0x6400eb52
64006f64:	add    esp,0x4
64006f67:	test   ebx,ebx
64006f69:	je     0x640070ce
64006f6f:	mov    ax,WORD PTR [esp+0x90]
64006f77:	test   ax,ax
64006f7a:	je     0x640070ce
64006f80:	lea    ecx,[esp+0x18]
64006f84:	push   ecx
64006f85:	lea    edx,[esp+0xa4]
64006f8c:	movzx  ebx,ax
64006f8f:	push   edx
64006f90:	lea    edi,[esp+0x24]
64006f94:	call   0x6400a1e0
64006f99:	mov    ecx,DWORD PTR [eax]
64006f9b:	mov    ebx,ecx
64006f9d:	mov    DWORD PTR [eax],0x0
64006fa3:	mov    DWORD PTR [esp+0x28],ebx
64006fa7:	mov    DWORD PTR [esp+0x10098],0x2
64006fb2:	mov    edx,DWORD PTR [esp+0x24]
64006fb6:	push   edx
64006fb7:	call   0x6400eb52
64006fbc:	add    esp,0xc
64006fbf:	test   ebx,ebx
64006fc1:	je     0x640070c5
64006fc7:	mov    eax,DWORD PTR [ebx+0x10]
64006fca:	push   eax
64006fcb:	call   DWORD PTR ds:0x640211b4
64006fd1:	mov    DWORD PTR [ebx+0x10],eax
64006fd4:	mov    ecx,0x10
64006fd9:	lea    edx,[esp+0x54]
64006fdd:	mov    esi,ebx
64006fdf:	nop
64006fe0:	mov    edi,DWORD PTR [esi]
64006fe2:	cmp    edi,DWORD PTR [edx]
64006fe4:	jne    0x64006ff8
64006fe6:	sub    ecx,0x4
64006fe9:	add    edx,0x4
64006fec:	add    esi,0x4
64006fef:	cmp    ecx,0x4
64006ff2:	jae    0x64006fe0
64006ff4:	test   ecx,ecx
64006ff6:	je     0x64007055
64006ff8:	movzx  edi,BYTE PTR [esi]
64006ffb:	movzx  ebp,BYTE PTR [edx]
64006ffe:	sub    edi,ebp
64007000:	jne    0x64007047
64007002:	sub    ecx,0x1
64007005:	add    edx,0x1
64007008:	add    esi,0x1
6400700b:	test   ecx,ecx
6400700d:	je     0x64007055
6400700f:	movzx  edi,BYTE PTR [esi]
64007012:	movzx  ebp,BYTE PTR [edx]
64007015:	sub    edi,ebp
64007017:	jne    0x64007047
64007019:	sub    ecx,0x1
6400701c:	add    edx,0x1
6400701f:	add    esi,0x1
64007022:	test   ecx,ecx
64007024:	je     0x64007055
64007026:	movzx  edi,BYTE PTR [esi]
64007029:	movzx  ebp,BYTE PTR [edx]
6400702c:	sub    edi,ebp
6400702e:	jne    0x64007047
64007030:	sub    ecx,0x1
64007033:	add    edx,0x1
64007036:	add    esi,0x1
64007039:	test   ecx,ecx
6400703b:	je     0x64007055
6400703d:	movzx  edi,BYTE PTR [esi]
64007040:	movzx  ecx,BYTE PTR [edx]
64007043:	sub    edi,ecx
64007045:	je     0x64007055
64007047:	test   edi,edi
64007049:	mov    ecx,0x1
6400704e:	jg     0x64007057
64007050:	or     ecx,0xffffffff
64007053:	jmp    0x64007057
64007055:	xor    ecx,ecx
64007057:	test   ecx,ecx
64007059:	jne    0x640070c5
6400705b:	cmp    eax,DWORD PTR [esp+0x100a8]
64007062:	jne    0x640070c5
64007064:	mov    dl,BYTE PTR [ebx+0x14]
64007067:	mov    eax,DWORD PTR [esp+0x24]
6400706b:	mov    BYTE PTR [eax],dl
6400706d:	mov    eax,DWORD PTR [esp+0x18]
64007071:	add    eax,0xffffffeb
64007074:	mov    DWORD PTR [esp+0x4c],ecx
64007078:	mov    BYTE PTR [esp+0x3c],cl
6400707c:	push   eax
6400707d:	lea    ecx,[ebx+0x15]
64007080:	push   ecx
64007081:	lea    ecx,[esp+0x40]
64007085:	mov    DWORD PTR [esp+0x58],0xf
6400708d:	call   0x64001bb0
64007092:	mov    ecx,DWORD PTR [esp+0x2c]
64007096:	push   0xffffffff
64007098:	push   0x0
6400709a:	lea    edx,[esp+0x40]
6400709e:	push   edx
6400709f:	mov    BYTE PTR [esp+0x1009c],0x3
640070a7:	call   0x64001ad0
640070ac:	cmp    DWORD PTR [esp+0x50],0x10
640070b1:	jb     0x640070c0
640070b3:	mov    eax,DWORD PTR [esp+0x3c]
640070b7:	push   eax
640070b8:	call   0x6400eb52
640070bd:	add    esp,0x4
640070c0:	mov    BYTE PTR [esp+0x17],0x1
640070c5:	push   ebx
640070c6:	call   0x6400eb52
640070cb:	add    esp,0x4
640070ce:	mov    al,BYTE PTR [esp+0x17]
640070d2:	mov    ecx,DWORD PTR [esp+0x10088]
640070d9:	mov    DWORD PTR fs:0x0,ecx
640070e0:	pop    ecx
640070e1:	pop    edi
640070e2:	pop    esi
640070e3:	pop    ebp
640070e4:	pop    ebx
640070e5:	mov    ecx,DWORD PTR [esp+0x10070]
640070ec:	xor    ecx,esp
640070ee:	call   0x6400f34e
640070f3:	add    esp,0x10080
640070f9:	ret    0x30
640070fc:	int3   
640070fd:	int3   
640070fe:	int3   
640070ff:	int3   
64007100:	push   0xffffffff
64007102:	push   0x6401eadb
64007107:	mov    eax,fs:0x0
6400710d:	push   eax
6400710e:	push   ecx
6400710f:	push   esi
64007110:	mov    eax,ds:0x64028038
64007115:	xor    eax,esp
64007117:	push   eax
64007118:	lea    eax,[esp+0xc]
6400711c:	mov    fs:0x0,eax
64007122:	push   0xc
64007124:	call   0x6400eed3
64007129:	mov    esi,eax
6400712b:	add    esp,0x4
6400712e:	mov    DWORD PTR [esp+0x8],esi
64007132:	test   esi,esi
64007134:	mov    DWORD PTR [esp+0x14],0x0
6400713c:	je     0x6400715a
6400713e:	mov    eax,DWORD PTR [esp+0x1c]
64007142:	push   eax
64007143:	mov    DWORD PTR [esi+0x4],0x0
6400714a:	mov    DWORD PTR [esi+0x8],0x1
64007151:	call   0x6401b300
64007156:	mov    DWORD PTR [esi],eax
64007158:	jmp    0x6400715c
6400715a:	xor    esi,esi
6400715c:	test   esi,esi
6400715e:	mov    DWORD PTR [esp+0x14],0xffffffff
64007166:	mov    DWORD PTR [ebx],esi
64007168:	jne    0x64007174
6400716a:	push   0x8007000e
6400716f:	call   0x6401b2f0
64007174:	mov    eax,ebx
64007176:	mov    ecx,DWORD PTR [esp+0xc]
6400717a:	mov    DWORD PTR fs:0x0,ecx
64007181:	pop    ecx
64007182:	pop    esi
64007183:	add    esp,0x10
64007186:	ret    0x4
64007189:	int3   
6400718a:	int3   
6400718b:	int3   
6400718c:	int3   
6400718d:	int3   
6400718e:	int3   
6400718f:	int3   
64007190:	push   0xffffffff
64007192:	push   0x6401eaab
64007197:	mov    eax,fs:0x0
6400719d:	push   eax
6400719e:	push   ebp
6400719f:	push   esi
640071a0:	mov    eax,ds:0x64028038
640071a5:	xor    eax,esp
640071a7:	push   eax
640071a8:	lea    eax,[esp+0xc]
640071ac:	mov    fs:0x0,eax
640071b2:	mov    ebp,DWORD PTR [esp+0x1c]
640071b6:	push   0xc
640071b8:	call   0x6400eed3
640071bd:	mov    esi,eax
640071bf:	add    esp,0x4
640071c2:	mov    DWORD PTR [esp+0x1c],esi
640071c6:	test   esi,esi
640071c8:	mov    DWORD PTR [esp+0x14],0x0
640071d0:	je     0x640071fd
640071d2:	push   edi
640071d3:	mov    DWORD PTR [esi+0x4],0x0
640071da:	mov    DWORD PTR [esi+0x8],0x1
640071e1:	call   DWORD PTR ds:0x64021188
640071e7:	test   eax,eax
640071e9:	mov    DWORD PTR [esi],eax
640071eb:	jne    0x640071ff
640071ed:	test   edi,edi
640071ef:	je     0x640071ff
640071f1:	push   0x8007000e
640071f6:	call   0x6401b2f0
640071fb:	jmp    0x640071ff
640071fd:	xor    esi,esi
640071ff:	test   esi,esi
64007201:	mov    DWORD PTR [esp+0x14],0xffffffff
64007209:	mov    DWORD PTR [ebp+0x0],esi
6400720c:	jne    0x64007218
6400720e:	push   0x8007000e
64007213:	call   0x6401b2f0
64007218:	mov    eax,ebp
6400721a:	mov    ecx,DWORD PTR [esp+0xc]
6400721e:	mov    DWORD PTR fs:0x0,ecx
64007225:	pop    ecx
64007226:	pop    esi
64007227:	pop    ebp
64007228:	add    esp,0xc
6400722b:	ret    0x4
6400722e:	int3   
6400722f:	int3   
64007230:	push   esi
64007231:	mov    esi,DWORD PTR [edi]
64007233:	test   esi,esi
64007235:	je     0x64007275
64007237:	lea    eax,[esi+0x8]
6400723a:	push   eax
6400723b:	call   DWORD PTR ds:0x64021058
64007241:	test   eax,eax
64007243:	jne    0x6400726f
64007245:	test   esi,esi
64007247:	je     0x6400726f
64007249:	mov    eax,DWORD PTR [esi]
6400724b:	test   eax,eax
6400724d:	je     0x64007256
6400724f:	push   eax
64007250:	call   DWORD PTR ds:0x64021190
64007256:	mov    eax,DWORD PTR [esi+0x4]
64007259:	test   eax,eax
6400725b:	je     0x64007266
6400725d:	push   eax
6400725e:	call   0x6400fa46
64007263:	add    esp,0x4
64007266:	push   esi
64007267:	call   0x6400eb52
6400726c:	add    esp,0x4
6400726f:	mov    DWORD PTR [edi],0x0
64007275:	pop    esi
64007276:	ret    
64007277:	int3   
64007278:	int3   
64007279:	int3   
6400727a:	int3   
6400727b:	int3   
6400727c:	int3   
6400727d:	int3   
6400727e:	int3   
6400727f:	int3   
64007280:	push   0xffffffff
64007282:	push   0x6401ea7b
64007287:	mov    eax,fs:0x0
6400728d:	push   eax
6400728e:	push   ebp
6400728f:	push   esi
64007290:	mov    eax,ds:0x64028038
64007295:	xor    eax,esp
64007297:	push   eax
64007298:	lea    eax,[esp+0xc]
6400729c:	mov    fs:0x0,eax
640072a2:	mov    ebp,DWORD PTR [esp+0x1c]
640072a6:	test   ebp,ebp
640072a8:	je     0x640072be
640072aa:	mov    eax,DWORD PTR [ebx]
640072ac:	test   eax,eax
640072ae:	je     0x640072b4
640072b0:	mov    eax,DWORD PTR [eax]
640072b2:	jmp    0x640072b6
640072b4:	xor    eax,eax
640072b6:	cmp    eax,ebp
640072b8:	je     0x64007363
640072be:	mov    esi,DWORD PTR [ebx]
640072c0:	test   esi,esi
640072c2:	je     0x64007302
640072c4:	lea    eax,[esi+0x8]
640072c7:	push   eax
640072c8:	call   DWORD PTR ds:0x64021058
640072ce:	test   eax,eax
640072d0:	jne    0x640072fc
640072d2:	test   esi,esi
640072d4:	je     0x640072fc
640072d6:	mov    eax,DWORD PTR [esi]
640072d8:	test   eax,eax
640072da:	je     0x640072e3
640072dc:	push   eax
640072dd:	call   DWORD PTR ds:0x64021190
640072e3:	mov    eax,DWORD PTR [esi+0x4]
640072e6:	test   eax,eax
640072e8:	je     0x640072f3
640072ea:	push   eax
640072eb:	call   0x6400fa46
640072f0:	add    esp,0x4
640072f3:	push   esi
640072f4:	call   0x6400eb52
640072f9:	add    esp,0x4
640072fc:	mov    DWORD PTR [ebx],0x0
64007302:	push   0xc
64007304:	call   0x6400eed3
64007309:	mov    esi,eax
6400730b:	add    esp,0x4
6400730e:	mov    DWORD PTR [esp+0x1c],esi
64007312:	test   esi,esi
64007314:	mov    DWORD PTR [esp+0x14],0x0
6400731c:	je     0x64007349
6400731e:	push   ebp
6400731f:	mov    DWORD PTR [esi+0x4],0x0
64007326:	mov    DWORD PTR [esi+0x8],0x1
6400732d:	call   DWORD PTR ds:0x64021188
64007333:	test   eax,eax
64007335:	mov    DWORD PTR [esi],eax
64007337:	jne    0x6400734b
64007339:	test   ebp,ebp
6400733b:	je     0x6400734b
6400733d:	push   0x8007000e
64007342:	call   0x6401b2f0
64007347:	jmp    0x6400734b
64007349:	xor    esi,esi
6400734b:	test   esi,esi
6400734d:	mov    DWORD PTR [esp+0x14],0xffffffff
64007355:	mov    DWORD PTR [ebx],esi
64007357:	jne    0x64007363
64007359:	push   0x8007000e
6400735e:	call   0x6401b2f0
64007363:	mov    eax,ebx
64007365:	mov    ecx,DWORD PTR [esp+0xc]
64007369:	mov    DWORD PTR fs:0x0,ecx
64007370:	pop    ecx
64007371:	pop    esi
64007372:	pop    ebp
64007373:	add    esp,0xc
64007376:	ret    0x4
64007379:	int3   
6400737a:	int3   
6400737b:	int3   
6400737c:	int3   
6400737d:	int3   
6400737e:	int3   
6400737f:	int3   
64007380:	push   0xffffffff
64007382:	push   0x6401eb0b
64007387:	mov    eax,fs:0x0
6400738d:	push   eax
6400738e:	push   ecx
6400738f:	push   esi
64007390:	push   edi
64007391:	mov    eax,ds:0x64028038
64007396:	xor    eax,esp
64007398:	push   eax
64007399:	lea    eax,[esp+0x10]
6400739d:	mov    fs:0x0,eax
640073a3:	push   0xc
640073a5:	call   0x6400eed3
640073aa:	add    esp,0x4
640073ad:	mov    DWORD PTR [esp+0xc],eax
640073b1:	test   eax,eax
640073b3:	mov    DWORD PTR [esp+0x18],0x0
640073bb:	je     0x640073ce
640073bd:	mov    ecx,DWORD PTR [esp+0x20]
640073c1:	push   ecx
640073c2:	push   ebx
640073c3:	mov    edi,eax
640073c5:	call   0x640074e0
640073ca:	mov    edi,eax
640073cc:	jmp    0x640073d0
640073ce:	xor    edi,edi
640073d0:	test   edi,edi
640073d2:	mov    DWORD PTR [esp+0x18],0xffffffff
640073da:	jne    0x640073e8
640073dc:	push   0x8007000e
640073e1:	call   0x6401b2f0
640073e6:	jmp    0x6400742e
640073e8:	mov    esi,DWORD PTR [ebx]
640073ea:	test   esi,esi
640073ec:	je     0x6400742c
640073ee:	lea    edx,[esi+0x8]
640073f1:	push   edx
640073f2:	call   DWORD PTR ds:0x64021058
640073f8:	test   eax,eax
640073fa:	jne    0x64007426
640073fc:	test   esi,esi
640073fe:	je     0x64007426
64007400:	mov    eax,DWORD PTR [esi]
64007402:	test   eax,eax
64007404:	je     0x6400740d
64007406:	push   eax
64007407:	call   DWORD PTR ds:0x64021190
6400740d:	mov    eax,DWORD PTR [esi+0x4]
64007410:	test   eax,eax
64007412:	je     0x6400741d
64007414:	push   eax
64007415:	call   0x6400fa46
6400741a:	add    esp,0x4
6400741d:	push   esi
6400741e:	call   0x6400eb52
64007423:	add    esp,0x4
64007426:	mov    DWORD PTR [ebx],0x0
6400742c:	mov    DWORD PTR [ebx],edi
6400742e:	mov    eax,ebx
64007430:	mov    ecx,DWORD PTR [esp+0x10]
64007434:	mov    DWORD PTR fs:0x0,ecx
6400743b:	pop    ecx
6400743c:	pop    edi
6400743d:	pop    esi
6400743e:	add    esp,0x10
64007441:	ret    0x4
64007444:	int3   
64007445:	int3   
64007446:	int3   
64007447:	int3   
64007448:	int3   
64007449:	int3   
6400744a:	int3   
6400744b:	int3   
6400744c:	int3   
6400744d:	int3   
6400744e:	int3   
6400744f:	int3   
64007450:	push   0xffffffff
64007452:	push   0x6401ebb9
64007457:	mov    eax,fs:0x0
6400745d:	push   eax
6400745e:	push   ecx
6400745f:	push   ebx
64007460:	mov    eax,ds:0x64028038
64007465:	xor    eax,esp
64007467:	push   eax
64007468:	lea    eax,[esp+0xc]
6400746c:	mov    fs:0x0,eax
64007472:	mov    ebx,DWORD PTR [esp+0x20]
64007476:	mov    eax,DWORD PTR [esp+0x1c]
6400747a:	mov    DWORD PTR [esp+0x8],0x0
64007482:	mov    eax,DWORD PTR [eax]
64007484:	test   eax,eax
64007486:	mov    DWORD PTR [ebx],eax
64007488:	je     0x64007494
6400748a:	add    eax,0x8
6400748d:	push   eax
6400748e:	call   DWORD PTR ds:0x64021020
64007494:	mov    ecx,DWORD PTR [esp+0x24]
64007498:	mov    DWORD PTR [esp+0x14],0x0
640074a0:	push   ecx
640074a1:	mov    DWORD PTR [esp+0xc],0x1
640074a9:	call   0x64007380
640074ae:	mov    eax,ebx
640074b0:	mov    ecx,DWORD PTR [esp+0xc]
640074b4:	mov    DWORD PTR fs:0x0,ecx
640074bb:	pop    ecx
640074bc:	pop    ebx
640074bd:	add    esp,0x10
640074c0:	ret    0xc
640074c3:	int3   
640074c4:	int3   
640074c5:	int3   
640074c6:	int3   
640074c7:	int3   
640074c8:	int3   
640074c9:	int3   
640074ca:	int3   
640074cb:	int3   
640074cc:	int3   
640074cd:	int3   
640074ce:	int3   
640074cf:	int3   
640074d0:	mov    eax,DWORD PTR [eax]
640074d2:	test   eax,eax
640074d4:	je     0x640074d9
640074d6:	mov    eax,DWORD PTR [eax]
640074d8:	ret    
640074d9:	xor    eax,eax
640074db:	ret    
640074dc:	int3   
640074dd:	int3   
640074de:	int3   
640074df:	int3   
640074e0:	mov    eax,DWORD PTR [esp+0x4]
640074e4:	push   ebx
640074e5:	xor    ebx,ebx
640074e7:	mov    DWORD PTR [edi+0x4],ebx
640074ea:	mov    DWORD PTR [edi+0x8],0x1
640074f1:	mov    eax,DWORD PTR [eax]
640074f3:	cmp    eax,ebx
640074f5:	push   ebp
640074f6:	push   esi
640074f7:	mov    esi,DWORD PTR ds:0x64021184
640074fd:	je     0x6400750c
640074ff:	mov    eax,DWORD PTR [eax]
64007501:	cmp    eax,ebx
64007503:	je     0x6400750c
64007505:	push   eax
64007506:	call   esi
64007508:	mov    ebp,eax
6400750a:	jmp    0x6400750e
6400750c:	xor    ebp,ebp
6400750e:	mov    ecx,DWORD PTR [esp+0x14]
64007512:	mov    eax,DWORD PTR [ecx]
64007514:	cmp    eax,ebx
64007516:	je     0x64007523
64007518:	mov    eax,DWORD PTR [eax]
6400751a:	cmp    eax,ebx
6400751c:	je     0x64007523
6400751e:	push   eax
6400751f:	call   esi
64007521:	mov    ebx,eax
64007523:	lea    esi,[ebx+ebp*1]
64007526:	add    esi,esi
64007528:	push   esi
64007529:	push   0x0
6400752b:	call   DWORD PTR ds:0x6402118c
64007531:	test   eax,eax
64007533:	mov    DWORD PTR [edi],eax
64007535:	jne    0x64007549
64007537:	push   0x8007000e
6400753c:	call   0x6401b2f0
64007541:	pop    esi
64007542:	pop    ebp
64007543:	mov    eax,edi
64007545:	pop    ebx
64007546:	ret    0x8
64007549:	mov    edx,DWORD PTR [esp+0x10]
6400754d:	mov    ecx,DWORD PTR [edx]
6400754f:	test   ecx,ecx
64007551:	je     0x6400756c
64007553:	mov    ecx,DWORD PTR [ecx]
64007555:	test   ecx,ecx
64007557:	je     0x6400756c
64007559:	lea    edx,[ebp+ebp*1+0x2]
6400755d:	push   edx
6400755e:	push   ecx
6400755f:	add    esi,0x2
64007562:	push   esi
64007563:	push   eax
64007564:	call   0x6400ecaa
64007569:	add    esp,0x10
6400756c:	mov    eax,DWORD PTR [esp+0x14]
64007570:	mov    eax,DWORD PTR [eax]
64007572:	test   eax,eax
64007574:	je     0x64007591
64007576:	mov    ecx,DWORD PTR [eax]
64007578:	test   ecx,ecx
6400757a:	je     0x64007591
6400757c:	lea    eax,[ebx+ebx*1+0x2]
64007580:	push   eax
64007581:	push   ecx
64007582:	mov    ecx,DWORD PTR [edi]
64007584:	push   eax
64007585:	lea    edx,[ecx+ebp*2]
64007588:	push   edx
64007589:	call   0x6400ecaa
6400758e:	add    esp,0x10
64007591:	pop    esi
64007592:	pop    ebp
64007593:	mov    eax,edi
64007595:	pop    ebx
64007596:	ret    0x8
64007599:	int3   
6400759a:	int3   
6400759b:	int3   
6400759c:	int3   
6400759d:	int3   
6400759e:	int3   
6400759f:	int3   
640075a0:	push   ecx
640075a1:	call   DWORD PTR ds:0x64021180
640075a7:	ret    
640075a8:	int3   
640075a9:	int3   
640075aa:	int3   
640075ab:	int3   
640075ac:	int3   
640075ad:	int3   
640075ae:	int3   
640075af:	int3   
640075b0:	push   0xffffffff
640075b2:	push   0x6401eb78
640075b7:	mov    eax,fs:0x0
640075bd:	push   eax
640075be:	sub    esp,0x18
640075c1:	push   ebx
640075c2:	mov    eax,ds:0x64028038
640075c7:	xor    eax,esp
640075c9:	push   eax
640075ca:	lea    eax,[esp+0x20]
640075ce:	mov    fs:0x0,eax
640075d4:	mov    ebx,ecx
640075d6:	cmp    WORD PTR [esi],0x8
640075da:	jne    0x640075f8
640075dc:	mov    eax,DWORD PTR [esi+0x8]
640075df:	push   eax
640075e0:	call   0x64007280
640075e5:	mov    eax,ebx
640075e7:	mov    ecx,DWORD PTR [esp+0x20]
640075eb:	mov    DWORD PTR fs:0x0,ecx
640075f2:	pop    ecx
640075f3:	pop    ebx
640075f4:	add    esp,0x24
640075f7:	ret    
640075f8:	lea    ecx,[esp+0xc]
640075fc:	push   ecx
640075fd:	call   DWORD PTR ds:0x64021178
64007603:	lea    edx,[esp+0xc]
64007607:	cmp    edx,esi
64007609:	mov    DWORD PTR [esp+0x28],0x0
64007611:	jne    0x6400761b
64007613:	cmp    WORD PTR [esp+0xc],0x8
64007619:	je     0x64007635
6400761b:	push   0x8
6400761d:	push   0x0
6400761f:	push   esi
64007620:	lea    eax,[esp+0x18]
64007624:	push   eax
64007625:	call   DWORD PTR ds:0x64021194
6400762b:	test   eax,eax
6400762d:	jge    0x64007635
6400762f:	push   eax
64007630:	call   0x6401b2f0
64007635:	mov    ecx,DWORD PTR [esp+0x14]
64007639:	push   ecx
6400763a:	call   0x64007280
6400763f:	lea    edx,[esp+0xc]
64007643:	push   edx
64007644:	call   DWORD PTR ds:0x64021180
6400764a:	mov    eax,ebx
6400764c:	mov    ecx,DWORD PTR [esp+0x20]
64007650:	mov    DWORD PTR fs:0x0,ecx
64007657:	pop    ecx
64007658:	pop    ebx
64007659:	add    esp,0x24
6400765c:	ret    
6400765d:	int3   
6400765e:	int3   
6400765f:	int3   
64007660:	sub    esp,0x8
64007663:	test   eax,eax
64007665:	mov    BYTE PTR [edi],0x0
64007668:	jle    0x640077be
6400766e:	push   ebx
6400766f:	push   ebp
64007670:	push   esi
64007671:	xor    esi,esi
64007673:	add    eax,ecx
64007675:	mov    BYTE PTR [esp+0xf],0x0
6400767a:	mov    BYTE PTR [edi],0x0
6400767d:	mov    DWORD PTR [esp+0x10],eax
64007681:	mov    ebp,eax
64007683:	mov    al,BYTE PTR [ebp+0x0]
64007686:	test   al,al
64007688:	je     0x64007734
6400768e:	movsx  edx,al
64007691:	push   edx
64007692:	call   0x640101bf
64007697:	mov    bl,al
64007699:	movsx  eax,bl
6400769c:	push   eax
6400769d:	call   0x64010000
640076a2:	add    esp,0x8
640076a5:	test   eax,eax
640076a7:	je     0x640076ab
640076a9:	mov    bl,0x30
640076ab:	shl    BYTE PTR [esi+edi*1],0x4
640076af:	add    BYTE PTR [esp+0xf],0x1
640076b4:	mov    cl,BYTE PTR [esi+edi*1]
640076b7:	mov    al,bl
640076b9:	sub    al,0x30
640076bb:	cmp    al,0x9
640076bd:	ja     0x640076c6
640076bf:	or     al,cl
640076c1:	mov    BYTE PTR [esi+edi*1],al
640076c4:	jmp    0x640076d8
640076c6:	mov    dl,bl
640076c8:	sub    dl,0x61
640076cb:	cmp    dl,0x5
640076ce:	ja     0x6400770a
640076d0:	sub    bl,0x57
640076d3:	or     bl,cl
640076d5:	mov    BYTE PTR [esi+edi*1],bl
640076d8:	cmp    BYTE PTR [esp+0xf],0x2
640076dd:	jne    0x64007702
640076df:	mov    al,BYTE PTR [esi+edi*1]
640076e2:	test   al,al
640076e4:	je     0x640076f6
640076e6:	movsx  eax,al
640076e9:	push   eax
640076ea:	call   0x6401007d
640076ef:	add    esp,0x4
640076f2:	test   eax,eax
640076f4:	je     0x6400770a
640076f6:	add    esi,0x1
640076f9:	mov    BYTE PTR [esp+0xf],0x0
640076fe:	mov    BYTE PTR [esi+edi*1],0x0
64007702:	add    ebp,0x1
64007705:	jmp    0x64007683
6400770a:	mov    ebp,DWORD PTR [esp+0x10]
6400770e:	xor    esi,esi
64007710:	mov    bl,BYTE PTR [ebp+0x0]
64007713:	test   bl,bl
64007715:	je     0x64007734
64007717:	movsx  ecx,bl
6400771a:	push   ecx
6400771b:	call   0x6401007d
64007720:	add    esp,0x4
64007723:	test   eax,eax
64007725:	je     0x64007732
64007727:	mov    BYTE PTR [esi+edi*1],bl
6400772a:	add    esi,0x1
6400772d:	add    ebp,0x1
64007730:	jmp    0x64007710
64007732:	xor    esi,esi
64007734:	cmp    DWORD PTR [esp+0x18],0x0
64007739:	mov    BYTE PTR [esi+edi*1],0x0
6400773d:	je     0x64007762
6400773f:	test   esi,esi
64007741:	jle    0x64007762
64007743:	add    esi,0xffffffff
64007746:	shr    esi,1
64007748:	lea    eax,[edi+0x1]
6400774b:	add    esi,0x1
6400774e:	mov    edi,edi
64007750:	mov    cl,BYTE PTR [eax-0x1]
64007753:	mov    dl,BYTE PTR [eax]
64007755:	mov    BYTE PTR [eax-0x1],dl
64007758:	mov    BYTE PTR [eax],cl
6400775a:	add    eax,0x2
6400775d:	sub    esi,0x1
64007760:	jne    0x64007750
64007762:	or     ebx,0xffffffff
64007765:	or     ebp,ebx
64007767:	xor    esi,esi
64007769:	cmp    BYTE PTR [edi],0x0
6400776c:	je     0x640077bb
6400776e:	mov    edi,edi
64007770:	movsx  eax,BYTE PTR [esi+edi*1]
64007774:	push   eax
64007775:	call   0x64010000
6400777a:	add    esp,0x4
6400777d:	test   eax,eax
6400777f:	jne    0x64007789
64007781:	test   ebp,ebp
64007783:	jge    0x64007787
64007785:	mov    ebp,esi
64007787:	mov    ebx,esi
64007789:	add    esi,0x1
6400778c:	cmp    BYTE PTR [esi+edi*1],0x0
64007790:	jne    0x64007770
64007792:	test   ebp,ebp
64007794:	jl     0x640077bb
64007796:	test   ebx,ebx
64007798:	jl     0x640077bb
6400779a:	cmp    ebp,ebx
6400779c:	mov    eax,ebp
6400779e:	jg     0x640077b5
640077a0:	mov    edx,edi
640077a2:	sub    edx,ebp
640077a4:	mov    cl,BYTE PTR [eax+edi*1]
640077a7:	test   cl,cl
640077a9:	je     0x640077b5
640077ab:	mov    BYTE PTR [edx+eax*1],cl
640077ae:	add    eax,0x1
640077b1:	cmp    eax,ebx
640077b3:	jle    0x640077a4
640077b5:	sub    eax,ebp
640077b7:	mov    BYTE PTR [eax+edi*1],0x0
640077bb:	pop    esi
640077bc:	pop    ebp
640077bd:	pop    ebx
640077be:	mov    eax,edi
640077c0:	add    esp,0x8
640077c3:	ret    
640077c4:	int3   
640077c5:	int3   
640077c6:	int3   
640077c7:	int3   
640077c8:	int3   
640077c9:	int3   
640077ca:	int3   
640077cb:	int3   
640077cc:	int3   
640077cd:	int3   
640077ce:	int3   
640077cf:	int3   
640077d0:	push   ebp
640077d1:	mov    ebp,esp
640077d3:	and    esp,0xfffffff8
640077d6:	mov    eax,0x2f34
640077db:	call   0x64014c50
640077e0:	mov    eax,ds:0x64028038
640077e5:	xor    eax,esp
640077e7:	mov    DWORD PTR [esp+0x2f30],eax
640077ee:	push   ebx
640077ef:	mov    eax,DWORD PTR [ebp+0x8]
640077f2:	mov    ecx,DWORD PTR [ebp+0xc]
640077f5:	mov    ebx,DWORD PTR [ebp+0x10]
640077f8:	push   esi
640077f9:	push   edi
640077fa:	xor    edi,edi
640077fc:	push   edi
640077fd:	push   edi
640077fe:	push   0x3
64007800:	push   edi
64007801:	push   0x3
64007803:	push   edi
64007804:	push   0x64023994
64007809:	push   0x12
6400780b:	push   0x640239c4
64007810:	mov    DWORD PTR [esp+0x3c],eax
64007814:	mov    DWORD PTR [esp+0x40],ecx
64007818:	mov    BYTE PTR [esp+0x37],0x0
6400781d:	call   0x64003b70
64007822:	add    esp,0xc
64007825:	push   eax
64007826:	call   0x6400a9e0
6400782b:	call   eax
6400782d:	mov    esi,eax
6400782f:	cmp    esi,0xffffffff
64007832:	jne    0x6400784b
64007834:	xor    al,al
64007836:	pop    edi
64007837:	pop    esi
64007838:	pop    ebx
64007839:	mov    ecx,DWORD PTR [esp+0x2f30]
64007840:	xor    ecx,esp
64007842:	call   0x6400f34e
64007847:	mov    esp,ebp
64007849:	pop    ebp
6400784a:	ret    
6400784b:	xor    eax,eax
6400784d:	push   0x2710
64007852:	lea    edx,[esp+0x82c]
64007859:	push   edi
6400785a:	mov    DWORD PTR [esp+0x2c],eax
6400785e:	mov    DWORD PTR [esp+0x30],eax
64007862:	push   edx
64007863:	mov    DWORD PTR [esp+0x20],edi
64007867:	mov    DWORD PTR [esp+0x38],eax
6400786b:	mov    DWORD PTR [esp+0x30],edi
6400786f:	mov    DWORD PTR [esp+0x34],edi
64007873:	call   0x6400fa50
64007878:	add    esp,0xc
6400787b:	push   edi
6400787c:	lea    eax,[esp+0x18]
64007880:	push   eax
64007881:	push   0x2710
64007886:	lea    ecx,[esp+0x834]
6400788d:	push   ecx
6400788e:	push   0xc
64007890:	lea    edx,[esp+0x38]
64007894:	push   edx
64007895:	push   0x2d1400
6400789a:	push   esi
6400789b:	call   0x6400af20
640078a0:	call   eax
640078a2:	test   eax,eax
640078a4:	je     0x64007901
640078a6:	mov    eax,DWORD PTR [esp+0x838]
640078ad:	push   edi
640078ae:	lea    edi,[esp+0x444]
640078b5:	lea    ecx,[esp+0x82c]
640078bc:	call   0x64007660
640078c1:	mov    eax,DWORD PTR [esp+0x844]
640078c8:	push   0x1
640078ca:	lea    edi,[esp+0x60]
640078ce:	lea    ecx,[esp+0x830]
640078d5:	call   0x64007660
640078da:	mov    ecx,DWORD PTR [esp+0x20]
640078de:	add    esp,0x8
640078e1:	mov    eax,edi
640078e3:	push   eax
640078e4:	call   0x64001c80
640078e9:	lea    ecx,[esp+0x440]
640078f0:	push   ecx
640078f1:	mov    ecx,DWORD PTR [esp+0x20]
640078f5:	call   0x64001c80
640078fa:	mov    BYTE PTR [esp+0x13],0x1
640078ff:	xor    edi,edi
64007901:	xor    eax,eax
64007903:	push   edi
64007904:	lea    edx,[esp+0x24]
64007908:	push   edx
64007909:	push   0x28
6400790b:	mov    DWORD PTR [esp+0x40],eax
6400790f:	mov    DWORD PTR [esp+0x44],eax
64007913:	mov    DWORD PTR [esp+0x48],eax
64007917:	mov    DWORD PTR [esp+0x4c],eax
6400791b:	mov    DWORD PTR [esp+0x50],eax
6400791f:	mov    DWORD PTR [esp+0x54],eax
64007923:	mov    DWORD PTR [esp+0x58],eax
64007927:	mov    DWORD PTR [esp+0x5c],eax
6400792b:	mov    DWORD PTR [esp+0x60],eax
6400792f:	lea    eax,[esp+0x3c]
64007933:	push   eax
64007934:	push   edi
64007935:	push   edi
64007936:	push   0x700a0
6400793b:	push   esi
6400793c:	mov    DWORD PTR [esp+0x50],edi
64007940:	mov    DWORD PTR [ebx],edi
64007942:	mov    DWORD PTR [ebx+0x4],edi
64007945:	call   0x6400af20
6400794a:	call   eax
6400794c:	test   eax,eax
6400794e:	je     0x6400795d
64007950:	mov    ecx,DWORD PTR [esp+0x48]
64007954:	mov    edx,DWORD PTR [esp+0x4c]
64007958:	mov    DWORD PTR [ebx],ecx
6400795a:	mov    DWORD PTR [ebx+0x4],edx
6400795d:	push   esi
6400795e:	call   DWORD PTR ds:0x64021040
64007964:	mov    ecx,DWORD PTR [esp+0x2f3c]
6400796b:	mov    al,BYTE PTR [esp+0x13]
6400796f:	pop    edi
64007970:	pop    esi
64007971:	pop    ebx
64007972:	xor    ecx,esp
64007974:	call   0x6400f34e
64007979:	mov    esp,ebp
6400797b:	pop    ebp
6400797c:	ret    
6400797d:	int3   
6400797e:	int3   
6400797f:	int3   
64007980:	push   ebp
64007981:	lea    ebp,[esp-0x28c]
64007988:	sub    esp,0x28c
6400798e:	push   0xffffffff
64007990:	push   0x6401fa40
64007995:	mov    eax,fs:0x0
6400799b:	push   eax
6400799c:	sub    esp,0x48
6400799f:	mov    eax,ds:0x64028038
640079a4:	xor    eax,ebp
640079a6:	mov    DWORD PTR [ebp+0x288],eax
640079ac:	push   ebx
640079ad:	push   esi
640079ae:	push   edi
640079af:	push   eax
640079b0:	lea    eax,[ebp-0xc]
640079b3:	mov    fs:0x0,eax
640079b9:	mov    eax,DWORD PTR [ebp+0x294]
640079bf:	lea    ecx,[ebp-0x1c]
640079c2:	push   ecx
640079c3:	lea    edx,[ebp+0x0]
640079c6:	push   edx
640079c7:	mov    DWORD PTR [ebp-0x38],eax
640079ca:	mov    DWORD PTR [ebp-0x1c],0x1
640079d1:	call   0x6400a580
640079d6:	call   eax
640079d8:	cmp    eax,0x6f
640079db:	jne    0x64007c27
640079e1:	mov    eax,DWORD PTR [ebp-0x1c]
640079e4:	push   eax
640079e5:	call   0x6400eb4d
640079ea:	mov    esi,eax
640079ec:	add    esp,0x4
640079ef:	mov    DWORD PTR [ebp-0x2c],esi
640079f2:	lea    ecx,[ebp-0x1c]
640079f5:	push   ecx
640079f6:	xor    ebx,ebx
640079f8:	push   esi
640079f9:	mov    DWORD PTR [ebp-0x4],ebx
640079fc:	call   0x6400a580
64007a01:	call   eax
64007a03:	cmp    eax,ebx
64007a05:	je     0x64007a0d
64007a07:	push   esi
64007a08:	jmp    0x64007c1f
64007a0d:	mov    DWORD PTR [ebp-0x10],esi
64007a10:	call   DWORD PTR ds:0x64028008
64007a16:	mov    edx,DWORD PTR ds:0x640294e0
64007a1c:	mov    DWORD PTR [ebp-0x30],eax
64007a1f:	mov    eax,DWORD PTR [edx+0xc]
64007a22:	mov    ecx,0x640294e0
64007a27:	call   eax
64007a29:	lea    edi,[eax+0x10]
64007a2c:	mov    DWORD PTR [ebp-0x14],edi
64007a2f:	mov    ecx,DWORD PTR [ebp-0x10]
64007a32:	mov    BYTE PTR [ebp-0x4],0x1
64007a36:	cmp    DWORD PTR [ecx+0x190],ebx
64007a3c:	mov    DWORD PTR [ebp-0x20],ebx
64007a3f:	je     0x64007b3e
64007a45:	mov    edx,DWORD PTR ds:0x640294e0
64007a4b:	mov    eax,DWORD PTR [edx+0xc]
64007a4e:	mov    ecx,0x640294e0
64007a53:	call   eax
64007a55:	add    eax,0x10
64007a58:	mov    DWORD PTR [ebp-0x18],eax
64007a5b:	mov    ecx,DWORD PTR [ebp-0x20]
64007a5e:	mov    edx,DWORD PTR [ebp-0x10]
64007a61:	mov    BYTE PTR [ebp-0x4],0x2
64007a65:	movzx  eax,BYTE PTR [edx+ecx*1+0x194]
64007a6d:	push   eax
64007a6e:	push   0x640239ec
64007a73:	push   0x4
64007a75:	push   0x64023a20
64007a7a:	call   0x64003b70
64007a7f:	add    esp,0xc
64007a82:	push   eax
64007a83:	lea    ecx,[ebp-0x18]
64007a86:	push   ecx
64007a87:	call   0x640086e0
64007a8c:	mov    esi,DWORD PTR [ebp-0x18]
64007a8f:	mov    eax,DWORD PTR [esi-0xc]
64007a92:	mov    edx,DWORD PTR [edi-0xc]
64007a95:	mov    DWORD PTR [ebp-0x34],eax
64007a98:	lea    ebx,[edx+eax*1]
64007a9b:	mov    eax,DWORD PTR [edi-0x8]
64007a9e:	mov    DWORD PTR [ebp-0x24],esi
64007aa1:	mov    ecx,0x1
64007aa6:	sub    ecx,DWORD PTR [edi-0x4]
64007aa9:	sub    esi,edi
64007aab:	sub    eax,ebx
64007aad:	add    esp,0xc
64007ab0:	sar    esi,1
64007ab2:	or     eax,ecx
64007ab4:	mov    DWORD PTR [ebp-0x28],edx
64007ab7:	jge    0x64007ac8
64007ab9:	push   ebx
64007aba:	lea    ecx,[ebp-0x14]
64007abd:	call   0x64002280
64007ac2:	mov    edi,DWORD PTR [ebp-0x14]
64007ac5:	mov    edx,DWORD PTR [ebp-0x28]
64007ac8:	cmp    esi,edx
64007aca:	ja     0x64007ad2
64007acc:	lea    eax,[edi+esi*2]
64007acf:	mov    DWORD PTR [ebp-0x24],eax
64007ad2:	mov    eax,DWORD PTR [ebp-0x34]
64007ad5:	mov    ecx,DWORD PTR [ebp-0x24]
64007ad8:	add    eax,eax
64007ada:	push   eax
64007adb:	push   ecx
64007adc:	push   eax
64007add:	lea    edx,[edi+edx*2]
64007ae0:	push   edx
64007ae1:	call   0x6400ecaa
64007ae6:	add    esp,0x10
64007ae9:	test   ebx,ebx
64007aeb:	jl     0x64007c4f
64007af1:	cmp    ebx,DWORD PTR [edi-0x8]
64007af4:	jg     0x64007c4f
64007afa:	mov    BYTE PTR [ebp-0x4],0x1
64007afe:	mov    eax,DWORD PTR [ebp-0x18]
64007b01:	add    eax,0xfffffff0
64007b04:	mov    DWORD PTR [edi-0xc],ebx
64007b07:	mov    WORD PTR [edi+ebx*2],0x0
64007b0d:	lea    ecx,[eax+0xc]
64007b10:	or     edx,0xffffffff
64007b13:	lock xadd DWORD PTR [ecx],edx
64007b17:	dec    edx
64007b18:	test   edx,edx
64007b1a:	jg     0x64007b26
64007b1c:	mov    ecx,DWORD PTR [eax]
64007b1e:	mov    edx,DWORD PTR [ecx]
64007b20:	push   eax
64007b21:	mov    eax,DWORD PTR [edx+0x4]
64007b24:	call   eax
64007b26:	mov    eax,DWORD PTR [ebp-0x20]
64007b29:	mov    ecx,DWORD PTR [ebp-0x10]
64007b2c:	add    eax,0x1
64007b2f:	cmp    eax,DWORD PTR [ecx+0x190]
64007b35:	mov    DWORD PTR [ebp-0x20],eax
64007b38:	jne    0x64007a45
64007b3e:	cmp    DWORD PTR [edi-0x4],0x1
64007b42:	jle    0x64007b53
64007b44:	mov    edx,DWORD PTR [edi-0xc]
64007b47:	push   edx
64007b48:	lea    ecx,[ebp-0x14]
64007b4b:	call   0x640022d0
64007b50:	mov    edi,DWORD PTR [ebp-0x14]
64007b53:	test   edi,edi
64007b55:	jne    0x64007b5b
64007b57:	xor    ecx,ecx
64007b59:	jmp    0x64007ba0
64007b5b:	push   edi
64007b5c:	call   DWORD PTR ds:0x64021054
64007b62:	add    eax,0x1
64007b65:	cmp    eax,0x3fffffff
64007b6a:	jg     0x64007b9c
64007b6c:	lea    ebx,[eax+eax*1]
64007b6f:	mov    eax,ebx
64007b71:	call   0x6400fad0
64007b76:	mov    esi,esp
64007b78:	test   esi,esi
64007b7a:	je     0x64007b9c
64007b7c:	mov    eax,DWORD PTR [ebp-0x30]
64007b7f:	push   0x0
64007b81:	push   0x0
64007b83:	push   ebx
64007b84:	push   esi
64007b85:	push   0xffffffff
64007b87:	push   edi
64007b88:	push   0x0
64007b8a:	push   eax
64007b8b:	mov    BYTE PTR [esi],0x0
64007b8e:	call   DWORD PTR ds:0x64021024
64007b94:	neg    eax
64007b96:	sbb    eax,eax
64007b98:	and    eax,esi
64007b9a:	jmp    0x64007b9e
64007b9c:	xor    eax,eax
64007b9e:	mov    ecx,eax
64007ba0:	xor    ebx,ebx
64007ba2:	mov    eax,ecx
64007ba4:	mov    DWORD PTR [ebp-0x3c],0xf
64007bab:	mov    DWORD PTR [ebp-0x40],ebx
64007bae:	mov    BYTE PTR [ebp-0x50],bl
64007bb1:	lea    esi,[eax+0x1]
64007bb4:	mov    dl,BYTE PTR [eax]
64007bb6:	add    eax,0x1
64007bb9:	test   dl,dl
64007bbb:	jne    0x64007bb4
64007bbd:	sub    eax,esi
64007bbf:	push   eax
64007bc0:	push   ecx
64007bc1:	lea    ecx,[ebp-0x54]
64007bc4:	call   0x64001bb0
64007bc9:	mov    esi,DWORD PTR [ebp-0x38]
64007bcc:	lea    ecx,[ebp-0x54]
64007bcf:	push   ecx
64007bd0:	mov    BYTE PTR [ebp-0x4],0x3
64007bd4:	call   0x64008150
64007bd9:	cmp    DWORD PTR [ebp-0x3c],0x10
64007bdd:	jb     0x64007beb
64007bdf:	mov    edx,DWORD PTR [ebp-0x50]
64007be2:	push   edx
64007be3:	call   0x6400eb52
64007be8:	add    esp,0x4
64007beb:	mov    eax,DWORD PTR [ebp-0x10]
64007bee:	mov    esi,DWORD PTR [eax]
64007bf0:	add    edi,0xfffffff0
64007bf3:	mov    DWORD PTR [ebp-0x10],esi
64007bf6:	mov    BYTE PTR [ebp-0x4],0x0
64007bfa:	lea    ecx,[edi+0xc]
64007bfd:	or     edx,0xffffffff
64007c00:	lock xadd DWORD PTR [ecx],edx
64007c04:	dec    edx
64007c05:	test   edx,edx
64007c07:	jg     0x64007c13
64007c09:	mov    ecx,DWORD PTR [edi]
64007c0b:	mov    eax,DWORD PTR [ecx]
64007c0d:	mov    edx,DWORD PTR [eax+0x4]
64007c10:	push   edi
64007c11:	call   edx
64007c13:	cmp    esi,ebx
64007c15:	jne    0x64007a10
64007c1b:	mov    eax,DWORD PTR [ebp-0x2c]
64007c1e:	push   eax
64007c1f:	call   0x6400eb52
64007c24:	add    esp,0x4
64007c27:	lea    esp,[ebp-0x64]
64007c2a:	mov    ecx,DWORD PTR [ebp-0xc]
64007c2d:	mov    DWORD PTR fs:0x0,ecx
64007c34:	pop    ecx
64007c35:	pop    edi
64007c36:	pop    esi
64007c37:	pop    ebx
64007c38:	mov    ecx,DWORD PTR [ebp+0x288]
64007c3e:	xor    ecx,ebp
64007c40:	call   0x6400f34e
64007c45:	add    ebp,0x28c
64007c4b:	mov    esp,ebp
64007c4d:	pop    ebp
64007c4e:	ret    
64007c4f:	push   0x80070057
64007c54:	call   0x64001000
64007c59:	int3   
64007c5a:	int3   
64007c5b:	int3   
64007c5c:	int3   
64007c5d:	int3   
64007c5e:	int3   
64007c5f:	int3   
64007c60:	push   0xffffffff
64007c62:	push   0x6401fa00
64007c67:	mov    eax,fs:0x0
64007c6d:	push   eax
64007c6e:	sub    esp,0x50
64007c71:	push   ebx
64007c72:	push   ebp
64007c73:	push   esi
64007c74:	push   edi
64007c75:	mov    eax,ds:0x64028038
64007c7a:	xor    eax,esp
64007c7c:	push   eax
64007c7d:	lea    eax,[esp+0x64]
64007c81:	mov    fs:0x0,eax
64007c87:	mov    ebp,DWORD PTR [esp+0x74]
64007c8b:	lea    eax,[esp+0x18]
64007c8f:	xor    ebx,ebx
64007c91:	push   eax
64007c92:	mov    edi,0x6402358c
64007c97:	mov    DWORD PTR [esp+0x3c],ebx
64007c9b:	call   0x64007190
64007ca0:	push   ebx
64007ca1:	push   ebx
64007ca2:	mov    DWORD PTR [esp+0x74],ebx
64007ca6:	call   DWORD PTR ds:0x640211c4
64007cac:	test   eax,eax
64007cae:	jge    0x64007d03
64007cb0:	mov    esi,DWORD PTR [esp+0x18]
64007cb4:	cmp    esi,ebx
64007cb6:	mov    DWORD PTR [ebp+0x0],esi
64007cb9:	je     0x64007fa3
64007cbf:	lea    edi,[esi+0x8]
64007cc2:	push   edi
64007cc3:	call   DWORD PTR ds:0x64021020
64007cc9:	push   edi
64007cca:	call   DWORD PTR ds:0x64021058
64007cd0:	test   eax,eax
64007cd2:	jne    0x64007fa3
64007cd8:	mov    eax,DWORD PTR [esi]
64007cda:	cmp    eax,ebx
64007cdc:	je     0x64007ce5
64007cde:	push   eax
64007cdf:	call   DWORD PTR ds:0x64021190
64007ce5:	mov    eax,DWORD PTR [esi+0x4]
64007ce8:	cmp    eax,ebx
64007cea:	je     0x64007cf5
64007cec:	push   eax
64007ced:	call   0x6400fa46
64007cf2:	add    esp,0x4
64007cf5:	push   esi
64007cf6:	call   0x6400eb52
64007cfb:	add    esp,0x4
64007cfe:	jmp    0x64007fa3
64007d03:	lea    ecx,[esp+0x20]
64007d07:	push   ecx
64007d08:	push   0x6402194c
64007d0d:	push   0x1
64007d0f:	push   ebx
64007d10:	push   0x64021a1c
64007d15:	mov    DWORD PTR [esp+0x34],ebx
64007d19:	call   DWORD PTR ds:0x640211c0
64007d1f:	cmp    eax,ebx
64007d21:	jl     0x64007f7f
64007d27:	push   0x64023a2c
64007d2c:	push   0xa
64007d2e:	push   0x64023a5c
64007d33:	mov    DWORD PTR [esp+0x28],ebx
64007d37:	call   0x64003b70
64007d3c:	add    esp,0xc
64007d3f:	lea    edx,[esp+0x30]
64007d43:	push   edx
64007d44:	mov    edi,eax
64007d46:	call   0x64007190
64007d4b:	mov    BYTE PTR [esp+0x6c],0x1
64007d50:	mov    eax,DWORD PTR [eax]
64007d52:	cmp    eax,ebx
64007d54:	je     0x64007d5a
64007d56:	mov    eax,DWORD PTR [eax]
64007d58:	jmp    0x64007d5c
64007d5a:	xor    eax,eax
64007d5c:	mov    ecx,DWORD PTR [esp+0x20]
64007d60:	mov    edx,DWORD PTR [ecx]
64007d62:	lea    esi,[esp+0x1c]
64007d66:	push   esi
64007d67:	push   ebx
64007d68:	push   ebx
64007d69:	push   ebx
64007d6a:	push   ebx
64007d6b:	push   ebx
64007d6c:	push   ebx
64007d6d:	push   eax
64007d6e:	mov    eax,DWORD PTR [edx+0xc]
64007d71:	push   ecx
64007d72:	call   eax
64007d74:	lea    edi,[esp+0x30]
64007d78:	mov    esi,eax
64007d7a:	mov    BYTE PTR [esp+0x6c],bl
64007d7e:	call   0x64007230
64007d83:	cmp    esi,ebx
64007d85:	jge    0x64007d90
64007d87:	mov    eax,DWORD PTR [esp+0x20]
64007d8b:	jmp    0x64007f77
64007d90:	mov    eax,DWORD PTR [esp+0x1c]
64007d94:	push   ebx
64007d95:	push   ebx
64007d96:	push   0x3
64007d98:	push   0x3
64007d9a:	push   ebx
64007d9b:	push   ebx
64007d9c:	push   0xa
64007d9e:	push   eax
64007d9f:	call   DWORD PTR ds:0x640211d4
64007da5:	cmp    eax,ebx
64007da7:	jge    0x64007dbe
64007da9:	mov    eax,DWORD PTR [esp+0x1c]
64007dad:	mov    ecx,DWORD PTR [eax]
64007daf:	mov    edx,DWORD PTR [ecx+0x8]
64007db2:	push   eax
64007db3:	call   edx
64007db5:	mov    eax,DWORD PTR [esp+0x20]
64007db9:	jmp    0x64007f77
64007dbe:	push   0x64023a74
64007dc3:	push   0xe
64007dc5:	push   0x64023a9c
64007dca:	mov    DWORD PTR [esp+0x30],ebx
64007dce:	call   0x64003970
64007dd3:	add    esp,0xc
64007dd6:	push   eax
64007dd7:	lea    ebx,[esp+0x3c]
64007ddb:	call   0x64007100
64007de0:	mov    ecx,DWORD PTR [esp+0x78]
64007de4:	push   ecx
64007de5:	lea    edx,[esp+0x38]
64007de9:	push   edx
64007dea:	push   eax
64007deb:	mov    BYTE PTR [esp+0x78],0x2
64007df0:	call   0x64007450
64007df5:	mov    esi,eax
64007df7:	push   0x64023aac
64007dfc:	push   0x3
64007dfe:	push   0x64023adc
64007e03:	mov    BYTE PTR [esp+0x78],0x3
64007e08:	call   0x64003970
64007e0d:	add    esp,0xc
64007e10:	push   eax
64007e11:	lea    ebx,[esp+0x34]
64007e15:	call   0x64007100
64007e1a:	mov    BYTE PTR [esp+0x6c],0x4
64007e1f:	mov    ecx,DWORD PTR [esi]
64007e21:	xor    ebx,ebx
64007e23:	cmp    ecx,ebx
64007e25:	je     0x64007e2b
64007e27:	mov    ecx,DWORD PTR [ecx]
64007e29:	jmp    0x64007e2d
64007e2b:	xor    ecx,ecx
64007e2d:	mov    eax,DWORD PTR [eax]
64007e2f:	cmp    eax,ebx
64007e31:	je     0x64007e37
64007e33:	mov    edx,DWORD PTR [eax]
64007e35:	jmp    0x64007e39
64007e37:	xor    edx,edx
64007e39:	mov    eax,DWORD PTR [esp+0x1c]
64007e3d:	mov    esi,DWORD PTR [eax]
64007e3f:	lea    edi,[esp+0x24]
64007e43:	push   edi
64007e44:	push   ebx
64007e45:	push   0x30
64007e47:	push   ecx
64007e48:	push   edx
64007e49:	push   eax
64007e4a:	mov    eax,DWORD PTR [esi+0x50]
64007e4d:	call   eax
64007e4f:	lea    edi,[esp+0x30]
64007e53:	mov    esi,eax
64007e55:	call   0x64007230
64007e5a:	lea    edi,[esp+0x34]
64007e5e:	call   0x64007230
64007e63:	lea    edi,[esp+0x38]
64007e67:	mov    BYTE PTR [esp+0x6c],bl
64007e6b:	call   0x64007230
64007e70:	cmp    esi,ebx
64007e72:	jge    0x64007e89
64007e74:	mov    eax,DWORD PTR [esp+0x1c]
64007e78:	mov    ecx,DWORD PTR [eax]
64007e7a:	mov    edx,DWORD PTR [ecx+0x8]
64007e7d:	push   eax
64007e7e:	call   edx
64007e80:	mov    eax,DWORD PTR [esp+0x20]
64007e84:	jmp    0x64007f77
64007e89:	mov    eax,DWORD PTR [esp+0x24]
64007e8d:	cmp    eax,ebx
64007e8f:	mov    DWORD PTR [esp+0x2c],ebx
64007e93:	je     0x64007f4f
64007e99:	mov    edi,DWORD PTR ds:0x64021180
64007e9f:	nop
64007ea0:	mov    ecx,DWORD PTR [eax]
64007ea2:	lea    edx,[esp+0x2c]
64007ea6:	push   edx
64007ea7:	lea    edx,[esp+0x2c]
64007eab:	push   edx
64007eac:	push   0x1
64007eae:	push   0xffffffff
64007eb0:	push   eax
64007eb1:	mov    eax,DWORD PTR [ecx+0x10]
64007eb4:	call   eax
64007eb6:	cmp    DWORD PTR [esp+0x2c],ebx
64007eba:	je     0x64007f4f
64007ec0:	mov    esi,DWORD PTR [esp+0x28]
64007ec4:	mov    eax,DWORD PTR [esp+0x7c]
64007ec8:	mov    ebp,DWORD PTR [esi]
64007eca:	push   ebx
64007ecb:	push   ebx
64007ecc:	lea    ecx,[esp+0x44]
64007ed0:	push   ecx
64007ed1:	push   ebx
64007ed2:	call   0x640074d0
64007ed7:	mov    edx,DWORD PTR [ebp+0x10]
64007eda:	push   eax
64007edb:	push   esi
64007edc:	call   edx
64007ede:	cmp    eax,ebx
64007ee0:	jl     0x64007eea
64007ee2:	cmp    WORD PTR [esp+0x3c],0x8
64007ee8:	je     0x64007f0b
64007eea:	lea    eax,[esp+0x3c]
64007eee:	push   eax
64007eef:	call   edi
64007ef1:	mov    eax,DWORD PTR [esp+0x28]
64007ef5:	mov    ecx,DWORD PTR [eax]
64007ef7:	mov    edx,DWORD PTR [ecx+0x8]
64007efa:	push   eax
64007efb:	call   edx
64007efd:	mov    eax,DWORD PTR [esp+0x24]
64007f01:	cmp    eax,ebx
64007f03:	mov    ebp,DWORD PTR [esp+0x74]
64007f07:	jne    0x64007ea0
64007f09:	jmp    0x64007f4f
64007f0b:	lea    eax,[esp+0x4c]
64007f0f:	push   eax
64007f10:	call   DWORD PTR ds:0x64021178
64007f16:	lea    ecx,[esp+0x3c]
64007f1a:	push   ecx
64007f1b:	lea    edx,[esp+0x50]
64007f1f:	push   edx
64007f20:	call   DWORD PTR ds:0x6402117c
64007f26:	cmp    eax,ebx
64007f28:	jge    0x64007f30
64007f2a:	push   eax
64007f2b:	call   0x6401b2f0
64007f30:	lea    esi,[esp+0x4c]
64007f34:	lea    ecx,[esp+0x18]
64007f38:	mov    BYTE PTR [esp+0x6c],0x5
64007f3d:	call   0x640075b0
64007f42:	mov    eax,esi
64007f44:	push   eax
64007f45:	mov    BYTE PTR [esp+0x70],bl
64007f49:	call   edi
64007f4b:	mov    ebp,DWORD PTR [esp+0x74]
64007f4f:	mov    eax,DWORD PTR [esp+0x1c]
64007f53:	mov    ecx,DWORD PTR [eax]
64007f55:	mov    edx,DWORD PTR [ecx+0x8]
64007f58:	push   eax
64007f59:	call   edx
64007f5b:	mov    eax,DWORD PTR [esp+0x20]
64007f5f:	mov    ecx,DWORD PTR [eax]
64007f61:	mov    edx,DWORD PTR [ecx+0x8]
64007f64:	push   eax
64007f65:	call   edx
64007f67:	mov    eax,DWORD PTR [esp+0x24]
64007f6b:	mov    ecx,DWORD PTR [eax]
64007f6d:	mov    edx,DWORD PTR [ecx+0x8]
64007f70:	push   eax
64007f71:	call   edx
64007f73:	mov    eax,DWORD PTR [esp+0x28]
64007f77:	mov    ecx,DWORD PTR [eax]
64007f79:	mov    edx,DWORD PTR [ecx+0x8]
64007f7c:	push   eax
64007f7d:	call   edx
64007f7f:	call   DWORD PTR ds:0x640211c8
64007f85:	mov    eax,DWORD PTR [esp+0x18]
64007f89:	cmp    eax,ebx
64007f8b:	mov    DWORD PTR [ebp+0x0],eax
64007f8e:	je     0x64007f9a
64007f90:	add    eax,0x8
64007f93:	push   eax
64007f94:	call   DWORD PTR ds:0x64021020
64007f9a:	lea    edi,[esp+0x18]
64007f9e:	call   0x64007230
64007fa3:	mov    eax,ebp
64007fa5:	mov    ecx,DWORD PTR [esp+0x64]
64007fa9:	mov    DWORD PTR fs:0x0,ecx
64007fb0:	pop    ecx
64007fb1:	pop    edi
64007fb2:	pop    esi
64007fb3:	pop    ebp
64007fb4:	pop    ebx
64007fb5:	add    esp,0x5c
64007fb8:	ret    
64007fb9:	int3   
64007fba:	int3   
64007fbb:	int3   
64007fbc:	int3   
64007fbd:	int3   
64007fbe:	int3   
64007fbf:	int3   
64007fc0:	push   ebp
64007fc1:	mov    ebp,esp
64007fc3:	and    esp,0xfffffff8
64007fc6:	push   0xffffffff
64007fc8:	push   0x6401fcd8
64007fcd:	mov    eax,fs:0x0
64007fd3:	push   eax
64007fd4:	sub    esp,0x14
64007fd7:	push   esi
64007fd8:	push   edi
64007fd9:	mov    eax,ds:0x64028038
64007fde:	xor    eax,esp
64007fe0:	push   eax
64007fe1:	lea    eax,[esp+0x20]
64007fe5:	mov    fs:0x0,eax
64007feb:	mov    DWORD PTR [esp+0x18],0x0
64007ff3:	call   DWORD PTR ds:0x64028008
64007ff9:	push   0x64023ae0
64007ffe:	push   0xc
64008000:	push   0x64023b08
64008005:	call   0x64003b70
6400800a:	add    esp,0xc
6400800d:	lea    ecx,[esp+0x14]
64008011:	push   ecx
64008012:	mov    edi,eax
64008014:	call   0x64007190
64008019:	push   0x64023b24
6400801e:	push   0x15
64008020:	push   0x64023b5c
64008025:	mov    DWORD PTR [esp+0x34],0x0
6400802d:	call   0x64003b70
64008032:	add    esp,0xc
64008035:	lea    edx,[esp+0x10]
64008039:	push   edx
6400803a:	mov    edi,eax
6400803c:	call   0x64007190
64008041:	lea    eax,[esp+0x14]
64008045:	push   eax
64008046:	lea    ecx,[esp+0x14]
6400804a:	push   ecx
6400804b:	lea    edx,[esp+0x20]
6400804f:	push   edx
64008050:	mov    BYTE PTR [esp+0x34],0x1
64008055:	call   0x64007c60
6400805a:	add    esp,0xc
6400805d:	mov    esi,DWORD PTR [esp+0x10]
64008061:	test   esi,esi
64008063:	je     0x64008099
64008065:	lea    eax,[esi+0x8]
64008068:	push   eax
64008069:	call   DWORD PTR ds:0x64021058
6400806f:	test   eax,eax
64008071:	jne    0x64008099
64008073:	mov    eax,DWORD PTR [esi]
64008075:	test   eax,eax
64008077:	je     0x64008080
64008079:	push   eax
6400807a:	call   DWORD PTR ds:0x64021190
64008080:	mov    eax,DWORD PTR [esi+0x4]
64008083:	test   eax,eax
64008085:	je     0x64008090
64008087:	push   eax
64008088:	call   0x6400fa46
6400808d:	add    esp,0x4
64008090:	push   esi
64008091:	call   0x6400eb52
64008096:	add    esp,0x4
64008099:	mov    BYTE PTR [esp+0x28],0x4
6400809e:	mov    esi,DWORD PTR [esp+0x14]
640080a2:	test   esi,esi
640080a4:	je     0x640080da
640080a6:	lea    ecx,[esi+0x8]
640080a9:	push   ecx
640080aa:	call   DWORD PTR ds:0x64021058
640080b0:	test   eax,eax
640080b2:	jne    0x640080da
640080b4:	mov    eax,DWORD PTR [esi]
640080b6:	test   eax,eax
640080b8:	je     0x640080c1
640080ba:	push   eax
640080bb:	call   DWORD PTR ds:0x64021190
640080c1:	mov    eax,DWORD PTR [esi+0x4]
640080c4:	test   eax,eax
640080c6:	je     0x640080d1
640080c8:	push   eax
640080c9:	call   0x6400fa46
640080ce:	add    esp,0x4
640080d1:	push   esi
640080d2:	call   0x6400eb52
640080d7:	add    esp,0x4
640080da:	mov    esi,DWORD PTR [esp+0x18]
640080de:	test   esi,esi
640080e0:	je     0x640080e6
640080e2:	mov    eax,DWORD PTR [esi]
640080e4:	jmp    0x640080e8
640080e6:	xor    eax,eax
640080e8:	mov    edi,DWORD PTR [ebp+0x8]
640080eb:	push   eax
640080ec:	mov    ecx,edi
640080ee:	call   0x640017e0
640080f3:	test   esi,esi
640080f5:	je     0x6400812b
640080f7:	lea    edx,[esi+0x8]
640080fa:	push   edx
640080fb:	call   DWORD PTR ds:0x64021058
64008101:	test   eax,eax
64008103:	jne    0x6400812b
64008105:	mov    eax,DWORD PTR [esi]
64008107:	test   eax,eax
64008109:	je     0x64008112
6400810b:	push   eax
6400810c:	call   DWORD PTR ds:0x64021190
64008112:	mov    eax,DWORD PTR [esi+0x4]
64008115:	test   eax,eax
64008117:	je     0x64008122
64008119:	push   eax
6400811a:	call   0x6400fa46
6400811f:	add    esp,0x4
64008122:	push   esi
64008123:	call   0x6400eb52
64008128:	add    esp,0x4
6400812b:	mov    eax,edi
6400812d:	mov    ecx,DWORD PTR [esp+0x20]
64008131:	mov    DWORD PTR fs:0x0,ecx
64008138:	pop    ecx
64008139:	pop    edi
6400813a:	pop    esi
6400813b:	mov    esp,ebp
6400813d:	pop    ebp
6400813e:	ret    
6400813f:	int3   
64008140:	mov    ecx,DWORD PTR [eax]
64008142:	push   ecx
64008143:	call   0x6400eb52
64008148:	pop    ecx
64008149:	ret    
6400814a:	int3   
6400814b:	int3   
6400814c:	int3   
6400814d:	int3   
6400814e:	int3   
6400814f:	int3   
64008150:	push   ebp
64008151:	mov    ebp,esp
64008153:	and    esp,0xfffffff8
64008156:	sub    esp,0x8
64008159:	push   ebx
6400815a:	mov    ebx,DWORD PTR [esi+0x4]
6400815d:	test   ebx,ebx
6400815f:	push   edi
64008160:	jne    0x64008166
64008162:	xor    edi,edi
64008164:	jmp    0x6400817e
64008166:	mov    ecx,DWORD PTR [esi+0x8]
64008169:	sub    ecx,ebx
6400816b:	mov    eax,0x92492493
64008170:	imul   ecx
64008172:	add    edx,ecx
64008174:	sar    edx,0x4
64008177:	mov    edi,edx
64008179:	shr    edi,0x1f
6400817c:	add    edi,edx
6400817e:	test   ebx,ebx
64008180:	je     0x640081d1
64008182:	mov    ecx,DWORD PTR [esi+0xc]
64008185:	sub    ecx,ebx
64008187:	mov    eax,0x92492493
6400818c:	imul   ecx
6400818e:	add    edx,ecx
64008190:	sar    edx,0x4
64008193:	mov    eax,edx
64008195:	shr    eax,0x1f
64008198:	add    eax,edx
6400819a:	cmp    edi,eax
6400819c:	jae    0x640081d1
6400819e:	mov    edx,DWORD PTR [ebp+0x8]
640081a1:	mov    edi,DWORD PTR [esi+0x8]
640081a4:	mov    BYTE PTR [esp+0x8],0x0
640081a9:	mov    eax,DWORD PTR [esp+0x8]
640081ad:	mov    ecx,DWORD PTR [esp+0x8]
640081b1:	push   eax
640081b2:	push   ecx
640081b3:	push   esi
640081b4:	push   edx
640081b5:	push   edi
640081b6:	mov    ecx,0x1
640081bb:	call   0x64008890
640081c0:	add    esp,0x14
640081c3:	add    edi,0x1c
640081c6:	mov    DWORD PTR [esi+0x8],edi
640081c9:	pop    edi
640081ca:	pop    ebx
640081cb:	mov    esp,ebp
640081cd:	pop    ebp
640081ce:	ret    0x4
640081d1:	mov    edi,DWORD PTR [esi+0x8]
640081d4:	cmp    ebx,edi
640081d6:	jbe    0x640081dd
640081d8:	call   0x6400eeaa
640081dd:	mov    eax,DWORD PTR [ebp+0x8]
640081e0:	push   edi
640081e1:	push   esi
640081e2:	push   eax
640081e3:	lea    ecx,[esp+0x14]
640081e7:	push   ecx
640081e8:	mov    eax,esi
640081ea:	call   0x64008230
640081ef:	pop    edi
640081f0:	pop    ebx
640081f1:	mov    esp,ebp
640081f3:	pop    ebp
640081f4:	ret    0x4
640081f7:	int3   
640081f8:	int3   
640081f9:	int3   
640081fa:	int3   
640081fb:	int3   
640081fc:	int3   
640081fd:	int3   
640081fe:	int3   
640081ff:	int3   
64008200:	mov    eax,DWORD PTR [ecx+0x4]
64008203:	test   eax,eax
64008205:	jne    0x64008208
64008207:	ret    
64008208:	mov    ecx,DWORD PTR [ecx+0x8]
6400820b:	sub    ecx,eax
6400820d:	mov    eax,0x92492493
64008212:	imul   ecx
64008214:	add    edx,ecx
64008216:	sar    edx,0x4
64008219:	mov    eax,edx
6400821b:	shr    eax,0x1f
6400821e:	add    eax,edx
64008220:	ret    
64008221:	int3   
64008222:	int3   
64008223:	int3   
64008224:	int3   
64008225:	int3   
64008226:	int3   
64008227:	int3   
64008228:	int3   
64008229:	int3   
6400822a:	int3   
6400822b:	int3   
6400822c:	int3   
6400822d:	int3   
6400822e:	int3   
6400822f:	int3   
64008230:	push   ecx
64008231:	push   ebx
64008232:	push   ebp
64008233:	mov    ebp,DWORD PTR [esp+0x1c]
64008237:	push   esi
64008238:	mov    esi,eax
6400823a:	push   edi
6400823b:	mov    edi,DWORD PTR [esi+0x4]
6400823e:	test   edi,edi
64008240:	je     0x6400825e
64008242:	mov    ebx,DWORD PTR [esi+0x8]
64008245:	mov    ecx,ebx
64008247:	sub    ecx,edi
64008249:	mov    eax,0x92492493
6400824e:	imul   ecx
64008250:	add    edx,ecx
64008252:	sar    edx,0x4
64008255:	mov    eax,edx
64008257:	shr    eax,0x1f
6400825a:	add    eax,edx
6400825c:	jne    0x64008266
6400825e:	mov    ebx,DWORD PTR [esp+0x20]
64008262:	xor    edi,edi
64008264:	jmp    0x64008297
64008266:	cmp    edi,ebx
64008268:	jbe    0x6400826f
6400826a:	call   0x6400eeaa
6400826f:	mov    ebx,DWORD PTR [esp+0x20]
64008273:	test   ebx,ebx
64008275:	je     0x6400827b
64008277:	cmp    ebx,esi
64008279:	je     0x64008280
6400827b:	call   0x6400eeaa
64008280:	mov    ecx,ebp
64008282:	sub    ecx,edi
64008284:	mov    eax,0x92492493
64008289:	imul   ecx
6400828b:	add    edx,ecx
6400828d:	sar    edx,0x4
64008290:	mov    edi,edx
64008292:	shr    edi,0x1f
64008295:	add    edi,edx
64008297:	mov    ecx,DWORD PTR [esp+0x1c]
6400829b:	push   ebp
6400829c:	push   ebx
6400829d:	push   ecx
6400829e:	mov    ecx,esi
640082a0:	call   0x64008320
640082a5:	mov    ebx,DWORD PTR [esi+0x4]
640082a8:	cmp    ebx,DWORD PTR [esi+0x8]
640082ab:	jbe    0x640082b2
640082ad:	call   0x6400eeaa
640082b2:	lea    edx,[edi*8+0x0]
640082b9:	sub    edx,edi
640082bb:	lea    edi,[ebx+edx*4]
640082be:	cmp    edi,DWORD PTR [esi+0x8]
640082c1:	mov    DWORD PTR [esp+0x24],ebx
640082c5:	ja     0x640082cc
640082c7:	cmp    edi,DWORD PTR [esi+0x4]
640082ca:	jae    0x640082d1
640082cc:	call   0x6400eeaa
640082d1:	mov    eax,DWORD PTR [esp+0x18]
640082d5:	mov    DWORD PTR [eax+0x4],edi
640082d8:	pop    edi
640082d9:	mov    DWORD PTR [eax],esi
640082db:	pop    esi
640082dc:	pop    ebp
640082dd:	pop    ebx
640082de:	pop    ecx
640082df:	ret    0x10
640082e2:	int3   
640082e3:	int3   
640082e4:	int3   
640082e5:	int3   
640082e6:	int3   
640082e7:	int3   
640082e8:	int3   
640082e9:	int3   
640082ea:	int3   
640082eb:	int3   
640082ec:	int3   
640082ed:	int3   
640082ee:	int3   
640082ef:	int3   
640082f0:	push   ecx
640082f1:	mov    ecx,DWORD PTR [esp+0x8]
640082f5:	mov    BYTE PTR [esp],0x0
640082f9:	mov    eax,DWORD PTR [esp]
640082fc:	push   eax
640082fd:	mov    eax,DWORD PTR [esp+0xc]
64008301:	push   ecx
64008302:	push   edx
64008303:	push   eax
64008304:	push   edi
64008305:	mov    ecx,esi
64008307:	call   0x64008890
6400830c:	lea    ecx,[esi*8+0x0]
64008313:	sub    ecx,esi
64008315:	lea    eax,[edi+ecx*4]
64008318:	add    esp,0x18
6400831b:	ret    0x4
6400831e:	int3   
6400831f:	int3   
64008320:	push   ebp
64008321:	mov    ebp,esp
64008323:	push   0xffffffff
64008325:	push   0x6401ef38
6400832a:	mov    eax,fs:0x0
64008330:	push   eax
64008331:	sub    esp,0x34
64008334:	mov    eax,ds:0x64028038
64008339:	xor    eax,ebp
6400833b:	mov    DWORD PTR [ebp-0x14],eax
6400833e:	push   ebx
6400833f:	push   esi
64008340:	push   edi
64008341:	push   eax
64008342:	lea    eax,[ebp-0xc]
64008345:	mov    fs:0x0,eax
6400834b:	mov    DWORD PTR [ebp-0x10],esp
6400834e:	mov    eax,DWORD PTR [ebp+0x8]
64008351:	push   0xffffffff
64008353:	xor    edi,edi
64008355:	mov    ebx,ecx
64008357:	push   edi
64008358:	push   eax
64008359:	lea    ecx,[ebp-0x30]
6400835c:	mov    DWORD PTR [ebp-0x3c],ebx
6400835f:	mov    DWORD PTR [ebp-0x18],0xf
64008366:	mov    DWORD PTR [ebp-0x1c],edi
64008369:	mov    BYTE PTR [ebp-0x2c],0x0
6400836d:	call   0x64001ad0
64008372:	mov    DWORD PTR [ebp-0x4],edi
64008375:	mov    ecx,DWORD PTR [ebx+0x4]
64008378:	cmp    ecx,edi
6400837a:	je     0x64008394
6400837c:	mov    esi,DWORD PTR [ebx+0xc]
6400837f:	sub    esi,ecx
64008381:	mov    eax,0x92492493
64008386:	imul   esi
64008388:	add    edx,esi
6400838a:	sar    edx,0x4
6400838d:	mov    edi,edx
6400838f:	shr    edi,0x1f
64008392:	add    edi,edx
64008394:	test   ecx,ecx
64008396:	jne    0x6400839c
64008398:	xor    eax,eax
6400839a:	jmp    0x640083b4
6400839c:	mov    esi,DWORD PTR [ebx+0x8]
6400839f:	sub    esi,ecx
640083a1:	mov    eax,0x92492493
640083a6:	imul   esi
640083a8:	add    edx,esi
640083aa:	sar    edx,0x4
640083ad:	mov    eax,edx
640083af:	shr    eax,0x1f
640083b2:	add    eax,edx
640083b4:	mov    edx,0x9249249
640083b9:	sub    edx,eax
640083bb:	cmp    edx,0x1
640083be:	jae    0x640083c5
640083c0:	call   0x64008660
640083c5:	test   ecx,ecx
640083c7:	jne    0x640083cd
640083c9:	xor    eax,eax
640083cb:	jmp    0x640083e5
640083cd:	mov    esi,DWORD PTR [ebx+0x8]
640083d0:	sub    esi,ecx
640083d2:	mov    eax,0x92492493
640083d7:	imul   esi
640083d9:	add    edx,esi
640083db:	sar    edx,0x4
640083de:	mov    eax,edx
640083e0:	shr    eax,0x1f
640083e3:	add    eax,edx
640083e5:	add    eax,0x1
640083e8:	cmp    edi,eax
640083ea:	jae    0x64008546
640083f0:	mov    eax,edi
640083f2:	shr    eax,1
640083f4:	mov    edx,0x9249249
640083f9:	sub    edx,eax
640083fb:	cmp    edx,edi
640083fd:	jae    0x64008403
640083ff:	xor    edi,edi
64008401:	jmp    0x64008405
64008403:	add    edi,eax
64008405:	test   ecx,ecx
64008407:	jne    0x6400840d
64008409:	xor    eax,eax
6400840b:	jmp    0x64008425
6400840d:	mov    esi,DWORD PTR [ebx+0x8]
64008410:	sub    esi,ecx
64008412:	mov    eax,0x92492493
64008417:	imul   esi
64008419:	add    edx,esi
6400841b:	sar    edx,0x4
6400841e:	mov    eax,edx
64008420:	shr    eax,0x1f
64008423:	add    eax,edx
64008425:	add    eax,0x1
64008428:	cmp    edi,eax
6400842a:	jae    0x64008438
6400842c:	mov    ecx,ebx
6400842e:	call   0x64008200
64008433:	mov    edi,eax
64008435:	add    edi,0x1
64008438:	push   0x0
6400843a:	push   edi
6400843b:	call   0x640087a0
64008440:	mov    BYTE PTR [ebp-0x4],0x1
64008444:	mov    ecx,DWORD PTR [ebx+0x4]
64008447:	mov    BYTE PTR [ebp-0x34],0x0
6400844b:	mov    edx,DWORD PTR [ebp-0x34]
6400844e:	push   edx
6400844f:	mov    edx,DWORD PTR [ebp-0x34]
64008452:	push   edx
64008453:	mov    edx,DWORD PTR [ebp+0x10]
64008456:	push   ebx
64008457:	push   edx
64008458:	mov    edx,eax
6400845a:	mov    DWORD PTR [ebp-0x40],eax
6400845d:	mov    DWORD PTR [ebp-0x38],eax
64008460:	call   0x640089b0
64008465:	add    esp,0x18
64008468:	mov    esi,eax
6400846a:	mov    BYTE PTR [ebp-0x34],0x0
6400846e:	mov    eax,DWORD PTR [ebp-0x34]
64008471:	mov    ecx,DWORD PTR [ebp-0x34]
64008474:	push   eax
64008475:	push   ecx
64008476:	push   ebx
64008477:	lea    edx,[ebp-0x30]
6400847a:	push   edx
6400847b:	push   esi
6400847c:	mov    ecx,0x1
64008481:	mov    DWORD PTR [ebp-0x38],esi
64008484:	call   0x64008890
64008489:	mov    eax,DWORD PTR [ebx+0x8]
6400848c:	add    esp,0x14
6400848f:	mov    BYTE PTR [ebp-0x34],0x0
64008493:	mov    ecx,DWORD PTR [ebp-0x34]
64008496:	mov    edx,DWORD PTR [ebp-0x34]
64008499:	push   ecx
6400849a:	mov    ecx,DWORD PTR [ebp+0x10]
6400849d:	push   edx
6400849e:	add    esi,0x1c
640084a1:	push   ebx
640084a2:	push   eax
640084a3:	mov    edx,esi
640084a5:	mov    DWORD PTR [ebp-0x38],esi
640084a8:	call   0x640089b0
640084ad:	mov    esi,DWORD PTR [ebx+0x4]
640084b0:	add    esp,0x10
640084b3:	test   esi,esi
640084b5:	jne    0x640084bb
640084b7:	xor    eax,eax
640084b9:	jmp    0x640084d3
640084bb:	mov    ecx,DWORD PTR [ebx+0x8]
640084be:	sub    ecx,esi
640084c0:	mov    eax,0x92492493
640084c5:	imul   ecx
640084c7:	add    edx,ecx
640084c9:	sar    edx,0x4
640084cc:	mov    eax,edx
640084ce:	shr    eax,0x1f
640084d1:	add    eax,edx
640084d3:	add    eax,0x1
640084d6:	test   esi,esi
640084d8:	mov    DWORD PTR [ebp-0x34],eax
640084db:	je     0x640084fb
640084dd:	mov    eax,DWORD PTR [ebp-0x34]
640084e0:	mov    ecx,DWORD PTR [ebx+0x8]
640084e3:	push   eax
640084e4:	push   ebx
640084e5:	push   ecx
640084e6:	push   esi
640084e7:	call   0x64008940
640084ec:	mov    edx,DWORD PTR [ebx+0x4]
640084ef:	push   edx
640084f0:	call   0x6400eb52
640084f5:	mov    eax,DWORD PTR [ebp-0x34]
640084f8:	add    esp,0x14
640084fb:	mov    ecx,DWORD PTR [ebp-0x40]
640084fe:	lea    edx,[edi*8+0x0]
64008505:	sub    edx,edi
64008507:	lea    edx,[ecx+edx*4]
6400850a:	mov    DWORD PTR [ebx+0xc],edx
6400850d:	lea    edx,[eax*8+0x0]
64008514:	sub    edx,eax
64008516:	lea    eax,[ecx+edx*4]
64008519:	mov    DWORD PTR [ebx+0x8],eax
6400851c:	mov    DWORD PTR [ebx+0x4],ecx
6400851f:	jmp    0x64008602
64008524:	mov    ecx,DWORD PTR [ebp-0x38]
64008527:	mov    esi,DWORD PTR [ebp-0x40]
6400852a:	push   ecx
6400852b:	mov    ecx,DWORD PTR [ebp-0x3c]
6400852e:	push   esi
6400852f:	call   0x64008640
64008534:	push   esi
64008535:	call   0x6400eb52
6400853a:	add    esp,0x4
6400853d:	push   0x0
6400853f:	push   0x0
64008541:	call   0x6400ef3d
64008546:	mov    edi,DWORD PTR [ebx+0x8]
64008549:	mov    esi,DWORD PTR [ebp+0x10]
6400854c:	mov    ecx,edi
6400854e:	sub    ecx,esi
64008550:	mov    eax,0x92492493
64008555:	imul   ecx
64008557:	add    edx,ecx
64008559:	sar    edx,0x4
6400855c:	mov    eax,edx
6400855e:	shr    eax,0x1f
64008561:	add    eax,edx
64008563:	cmp    eax,0x1
64008566:	mov    edx,ebx
64008568:	jae    0x640085da
6400856a:	lea    ecx,[esi+0x1c]
6400856d:	push   ecx
6400856e:	push   edi
6400856f:	push   esi
64008570:	call   0x64008700
64008575:	mov    BYTE PTR [ebp-0x4],0x3
64008579:	mov    edi,DWORD PTR [ebx+0x8]
6400857c:	lea    edx,[ebp-0x30]
6400857f:	push   edx
64008580:	mov    ecx,edi
64008582:	sub    ecx,esi
64008584:	mov    eax,0x92492493
64008589:	imul   ecx
6400858b:	add    edx,ecx
6400858d:	sar    edx,0x4
64008590:	mov    eax,edx
64008592:	shr    eax,0x1f
64008595:	add    eax,edx
64008597:	mov    esi,0x1
6400859c:	sub    esi,eax
6400859e:	mov    edx,ebx
640085a0:	call   0x640082f0
640085a5:	mov    eax,DWORD PTR [ebp+0x10]
640085a8:	mov    DWORD PTR [ebp-0x4],0x0
640085af:	add    DWORD PTR [ebx+0x8],0x1c
640085b3:	mov    ebx,DWORD PTR [ebx+0x8]
640085b6:	lea    edi,[ebx-0x1c]
640085b9:	jmp    0x640085fa
640085bb:	mov    ecx,DWORD PTR [ebp-0x3c]
640085be:	mov    edx,DWORD PTR [ecx+0x8]
640085c1:	mov    eax,DWORD PTR [ebp+0x10]
640085c4:	add    edx,0x1c
640085c7:	push   edx
640085c8:	add    eax,0x1c
640085cb:	push   eax
640085cc:	call   0x64008640
640085d1:	push   0x0
640085d3:	push   0x0
640085d5:	call   0x6400ef3d
640085da:	push   edi
640085db:	lea    eax,[edi-0x1c]
640085de:	push   edi
640085df:	push   eax
640085e0:	mov    DWORD PTR [ebp-0x34],eax
640085e3:	call   0x64008700
640085e8:	mov    DWORD PTR [ebx+0x8],eax
640085eb:	mov    eax,DWORD PTR [ebp-0x34]
640085ee:	mov    ebx,esi
640085f0:	call   0x64008750
640085f5:	lea    edi,[esi+0x1c]
640085f8:	mov    eax,esi
640085fa:	lea    ebx,[ebp-0x30]
640085fd:	call   0x64008730
64008602:	cmp    DWORD PTR [ebp-0x18],0x10
64008606:	jb     0x64008614
64008608:	mov    ecx,DWORD PTR [ebp-0x2c]
6400860b:	push   ecx
6400860c:	call   0x6400eb52
64008611:	add    esp,0x4
64008614:	mov    ecx,DWORD PTR [ebp-0xc]
64008617:	mov    DWORD PTR fs:0x0,ecx
6400861e:	pop    ecx
6400861f:	pop    edi
64008620:	pop    esi
64008621:	pop    ebx
64008622:	mov    ecx,DWORD PTR [ebp-0x14]
64008625:	xor    ecx,ebp
64008627:	call   0x6400f34e
6400862c:	mov    esp,ebp
6400862e:	pop    ebp
6400862f:	ret    0xc
64008632:	int3   
64008633:	int3   
64008634:	int3   
64008635:	int3   
64008636:	int3   
64008637:	int3   
64008638:	int3   
64008639:	int3   
6400863a:	int3   
6400863b:	int3   
6400863c:	int3   
6400863d:	int3   
6400863e:	int3   
6400863f:	int3   
64008640:	mov    eax,DWORD PTR [esp+0x8]
64008644:	mov    edx,DWORD PTR [esp+0x4]
64008648:	push   eax
64008649:	push   ecx
6400864a:	mov    ecx,DWORD PTR [esp+0x10]
6400864e:	push   ecx
6400864f:	push   edx
64008650:	call   0x64008940
64008655:	add    esp,0x10
64008658:	ret    0x8
6400865b:	int3   
6400865c:	int3   
6400865d:	int3   
6400865e:	int3   
6400865f:	int3   
64008660:	push   ebp
64008661:	mov    ebp,esp
64008663:	and    esp,0xfffffff8
64008666:	push   0xffffffff
64008668:	push   0x6401ef08
6400866d:	mov    eax,fs:0x0
64008673:	push   eax
64008674:	sub    esp,0x4c
64008677:	mov    eax,ds:0x64028038
6400867c:	xor    eax,esp
6400867e:	push   eax
6400867f:	lea    eax,[esp+0x50]
64008683:	mov    fs:0x0,eax
64008689:	push   0x12
6400868b:	push   0x64023b88
64008690:	lea    ecx,[esp+0x10]
64008694:	mov    DWORD PTR [esp+0x28],0xf
6400869c:	mov    DWORD PTR [esp+0x24],0x0
640086a4:	mov    BYTE PTR [esp+0x14],0x0
640086a9:	call   0x64001bb0
640086ae:	lea    eax,[esp+0x8]
640086b2:	push   eax
640086b3:	lea    ecx,[esp+0x28]
640086b7:	mov    DWORD PTR [esp+0x5c],0x0
640086bf:	call   0x64002530
640086c4:	push   0x64025ea8
640086c9:	lea    ecx,[esp+0x28]
640086cd:	push   ecx
640086ce:	mov    DWORD PTR [esp+0x2c],0x6402130c
640086d6:	call   0x6400ef3d
640086db:	int3   
640086dc:	int3   
640086dd:	int3   
640086de:	int3   
640086df:	int3   
640086e0:	mov    ecx,DWORD PTR [esp+0x8]
640086e4:	lea    eax,[esp+0xc]
640086e8:	push   eax
640086e9:	push   ecx
640086ea:	mov    ecx,DWORD PTR [esp+0xc]
640086ee:	call   0x64008810
640086f3:	ret    
640086f4:	int3   
640086f5:	int3   
640086f6:	int3   
640086f7:	int3   
640086f8:	int3   
640086f9:	int3   
640086fa:	int3   
640086fb:	int3   
640086fc:	int3   
640086fd:	int3   
640086fe:	int3   
640086ff:	int3   
64008700:	push   ecx
64008701:	mov    ecx,DWORD PTR [esp+0xc]
64008705:	mov    BYTE PTR [esp],0x0
64008709:	mov    eax,DWORD PTR [esp]
6400870c:	push   eax
6400870d:	mov    eax,DWORD PTR [esp+0x10]
64008711:	push   ecx
64008712:	mov    ecx,DWORD PTR [esp+0x10]
64008716:	push   edx
64008717:	mov    edx,DWORD PTR [esp+0x1c]
6400871b:	push   eax
6400871c:	call   0x640089b0
64008721:	add    esp,0x14
64008724:	ret    0xc
64008727:	int3   
64008728:	int3   
64008729:	int3   
6400872a:	int3   
6400872b:	int3   
6400872c:	int3   
6400872d:	int3   
6400872e:	int3   
6400872f:	int3   
64008730:	push   esi
64008731:	mov    esi,eax
64008733:	cmp    esi,edi
64008735:	je     0x6400874a
64008737:	push   0xffffffff
64008739:	push   0x0
6400873b:	push   ebx
6400873c:	mov    ecx,esi
6400873e:	call   0x64001ad0
64008743:	add    esi,0x1c
64008746:	cmp    esi,edi
64008748:	jne    0x64008737
6400874a:	pop    esi
6400874b:	ret    
6400874c:	int3   
6400874d:	int3   
6400874e:	int3   
6400874f:	int3   
64008750:	push   ecx
64008751:	push   esi
64008752:	mov    esi,eax
64008754:	mov    BYTE PTR [esp+0x4],0x0
64008759:	mov    eax,DWORD PTR [esp+0x4]
6400875d:	mov    ecx,DWORD PTR [esp+0x4]
64008761:	mov    edx,DWORD PTR [esp+0x4]
64008765:	push   eax
64008766:	push   ecx
64008767:	push   edx
64008768:	push   edi
64008769:	push   ebx
6400876a:	mov    ecx,esi
6400876c:	call   0x64008af0
64008771:	sub    esi,ebx
64008773:	mov    eax,0x92492493
64008778:	imul   esi
6400877a:	add    edx,esi
6400877c:	sar    edx,0x4
6400877f:	mov    eax,edx
64008781:	shr    eax,0x1f
64008784:	add    eax,edx
64008786:	lea    ecx,[eax*8+0x0]
6400878d:	sub    ecx,eax
6400878f:	add    ecx,ecx
64008791:	add    esp,0x14
64008794:	add    ecx,ecx
64008796:	mov    eax,edi
64008798:	sub    eax,ecx
6400879a:	pop    esi
6400879b:	pop    ecx
6400879c:	ret    
6400879d:	int3   
6400879e:	int3   
6400879f:	int3   
640087a0:	mov    ecx,DWORD PTR [esp+0x4]
640087a4:	sub    esp,0xc
640087a7:	test   ecx,ecx
640087a9:	ja     0x640087c7
640087ab:	xor    ecx,ecx
640087ad:	lea    edx,[ecx*8+0x0]
640087b4:	sub    edx,ecx
640087b6:	add    edx,edx
640087b8:	add    edx,edx
640087ba:	push   edx
640087bb:	call   0x6400eed3
640087c0:	add    esp,0x4
640087c3:	add    esp,0xc
640087c6:	ret    
640087c7:	or     eax,0xffffffff
640087ca:	xor    edx,edx
640087cc:	div    ecx
640087ce:	cmp    eax,0x1c
640087d1:	jae    0x640087ad
640087d3:	lea    eax,[esp+0x10]
640087d7:	push   eax
640087d8:	lea    ecx,[esp+0x4]
640087dc:	mov    DWORD PTR [esp+0x14],0x0
640087e4:	call   0x6400ebad
640087e9:	push   0x64025e14
640087ee:	lea    ecx,[esp+0x4]
640087f2:	push   ecx
640087f3:	mov    DWORD PTR [esp+0x8],0x640212f4
640087fb:	call   0x6400ef3d
64008800:	int3   
64008801:	int3   
64008802:	int3   
64008803:	int3   
64008804:	int3   
64008805:	int3   
64008806:	int3   
64008807:	int3   
64008808:	int3   
64008809:	int3   
6400880a:	int3   
6400880b:	int3   
6400880c:	int3   
6400880d:	int3   
6400880e:	int3   
6400880f:	int3   
64008810:	push   ebx
64008811:	mov    ebx,DWORD PTR [esp+0x8]
64008815:	test   ebx,ebx
64008817:	push   edi
64008818:	mov    edi,ecx
6400881a:	jne    0x64008826
6400881c:	push   0x80070057
64008821:	call   0x64001000
64008826:	push   ebp
64008827:	mov    ebp,DWORD PTR [esp+0x14]
6400882b:	push   esi
6400882c:	push   ebp
6400882d:	push   ebx
6400882e:	call   0x6400f5c8
64008833:	mov    esi,eax
64008835:	mov    eax,DWORD PTR [edi]
64008837:	mov    edx,DWORD PTR [eax-0x8]
6400883a:	sub    eax,0x10
6400883d:	mov    ecx,0x1
64008842:	sub    ecx,DWORD PTR [eax+0xc]
64008845:	sub    edx,esi
64008847:	add    esp,0x8
6400884a:	or     ecx,edx
6400884c:	jge    0x64008856
6400884e:	push   esi
6400884f:	mov    ecx,edi
64008851:	call   0x64002280
64008856:	mov    ecx,DWORD PTR [edi]
64008858:	push   ebp
64008859:	push   ebx
6400885a:	lea    eax,[esi+0x1]
6400885d:	push   eax
6400885e:	push   ecx
6400885f:	call   0x6400f75d
64008864:	add    esp,0x10
64008867:	test   esi,esi
64008869:	jl     0x64008884
6400886b:	mov    eax,DWORD PTR [edi]
6400886d:	cmp    esi,DWORD PTR [eax-0x8]
64008870:	jg     0x64008884
64008872:	mov    DWORD PTR [eax-0xc],esi
64008875:	mov    edx,DWORD PTR [edi]
64008877:	mov    WORD PTR [edx+esi*2],0x0
6400887d:	pop    esi
6400887e:	pop    ebp
6400887f:	pop    edi
64008880:	pop    ebx
64008881:	ret    0x8
64008884:	push   0x80070057
64008889:	call   0x64001000
6400888e:	int3   
6400888f:	int3   
64008890:	push   ebp
64008891:	mov    ebp,esp
64008893:	push   0xffffffff
64008895:	push   0x6401ec71
6400889a:	mov    eax,fs:0x0
640088a0:	push   eax
640088a1:	sub    esp,0x10
640088a4:	push   ebx
640088a5:	push   esi
640088a6:	push   edi
640088a7:	mov    eax,ds:0x64028038
640088ac:	xor    eax,ebp
640088ae:	push   eax
640088af:	lea    eax,[ebp-0xc]
640088b2:	mov    fs:0x0,eax
640088b8:	mov    DWORD PTR [ebp-0x10],esp
640088bb:	mov    edi,ecx
640088bd:	mov    esi,DWORD PTR [ebp+0x8]
640088c0:	xor    ebx,ebx
640088c2:	mov    DWORD PTR [ebp-0x14],esi
640088c5:	mov    DWORD PTR [ebp-0x4],ebx
640088c8:	cmp    edi,ebx
640088ca:	jbe    0x64008928
640088cc:	mov    DWORD PTR [ebp-0x18],esi
640088cf:	mov    DWORD PTR [ebp-0x1c],esi
640088d2:	cmp    esi,ebx
640088d4:	mov    BYTE PTR [ebp-0x4],0x1
640088d8:	je     0x640088f5
640088da:	mov    eax,DWORD PTR [ebp+0xc]
640088dd:	push   0xffffffff
640088df:	push   ebx
640088e0:	mov    DWORD PTR [esi+0x18],0xf
640088e7:	mov    DWORD PTR [esi+0x14],ebx
640088ea:	push   eax
640088eb:	mov    ecx,esi
640088ed:	mov    BYTE PTR [esi+0x4],bl
640088f0:	call   0x64001ad0
640088f5:	sub    edi,0x1
640088f8:	add    esi,0x1c
640088fb:	mov    BYTE PTR [ebp-0x4],bl
640088fe:	mov    DWORD PTR [ebp+0x8],esi
64008901:	jmp    0x640088c8
64008903:	mov    esi,DWORD PTR [ebp-0x14]
64008906:	mov    edi,DWORD PTR [ebp+0x8]
64008909:	cmp    esi,edi
6400890b:	je     0x6400891f
6400890d:	mov    ebx,DWORD PTR [ebp+0x10]
64008910:	push   esi
64008911:	mov    ecx,ebx
64008913:	call   0x64008980
64008918:	add    esi,0x1c
6400891b:	cmp    esi,edi
6400891d:	jne    0x64008910
6400891f:	xor    ebx,ebx
64008921:	push   ebx
64008922:	push   ebx
64008923:	call   0x6400ef3d
64008928:	mov    ecx,DWORD PTR [ebp-0xc]
6400892b:	mov    DWORD PTR fs:0x0,ecx
64008932:	pop    ecx
64008933:	pop    edi
64008934:	pop    esi
64008935:	pop    ebx
64008936:	mov    esp,ebp
64008938:	pop    ebp
64008939:	ret    
6400893a:	int3   
6400893b:	int3   
6400893c:	int3   
6400893d:	int3   
6400893e:	int3   
6400893f:	int3   
64008940:	push   esi
64008941:	mov    esi,DWORD PTR [esp+0x8]
64008945:	push   edi
64008946:	mov    edi,DWORD PTR [esp+0x10]
6400894a:	cmp    esi,edi
6400894c:	je     0x64008978
6400894e:	push   ebx
6400894f:	xor    ebx,ebx
64008951:	cmp    DWORD PTR [esi+0x18],0x10
64008955:	jb     0x64008963
64008957:	mov    eax,DWORD PTR [esi+0x4]
6400895a:	push   eax
6400895b:	call   0x6400eb52
64008960:	add    esp,0x4
64008963:	mov    DWORD PTR [esi+0x18],0xf
6400896a:	mov    DWORD PTR [esi+0x14],ebx
6400896d:	mov    BYTE PTR [esi+0x4],bl
64008970:	add    esi,0x1c
64008973:	cmp    esi,edi
64008975:	jne    0x64008951
64008977:	pop    ebx
64008978:	pop    edi
64008979:	pop    esi
6400897a:	ret    
6400897b:	int3   
6400897c:	int3   
6400897d:	int3   
6400897e:	int3   
6400897f:	int3   
64008980:	push   esi
64008981:	mov    esi,DWORD PTR [esp+0x8]
64008985:	cmp    DWORD PTR [esi+0x18],0x10
64008989:	jb     0x64008997
6400898b:	mov    eax,DWORD PTR [esi+0x4]
6400898e:	push   eax
6400898f:	call   0x6400eb52
64008994:	add    esp,0x4
64008997:	xor    eax,eax
64008999:	mov    DWORD PTR [esi+0x18],0xf
640089a0:	mov    DWORD PTR [esi+0x14],eax
640089a3:	mov    BYTE PTR [esi+0x4],al
640089a6:	pop    esi
640089a7:	ret    0x4
640089aa:	int3   
640089ab:	int3   
640089ac:	int3   
640089ad:	int3   
640089ae:	int3   
640089af:	int3   
640089b0:	push   ebp
640089b1:	mov    ebp,esp
640089b3:	push   0xffffffff
640089b5:	push   0x6401ee49
640089ba:	mov    eax,fs:0x0
640089c0:	push   eax
640089c1:	sub    esp,0x44
640089c4:	mov    eax,ds:0x64028038
640089c9:	xor    eax,ebp
640089cb:	mov    DWORD PTR [ebp-0x14],eax
640089ce:	push   ebx
640089cf:	push   esi
640089d0:	push   edi
640089d1:	push   eax
640089d2:	lea    eax,[ebp-0xc]
640089d5:	mov    fs:0x0,eax
640089db:	mov    DWORD PTR [ebp-0x10],esp
640089de:	mov    esi,edx
640089e0:	xor    eax,eax
640089e2:	mov    edi,ecx
640089e4:	mov    DWORD PTR [ebp-0x44],esi
640089e7:	mov    DWORD PTR [ebp-0x48],esi
640089ea:	mov    DWORD PTR [ebp-0x18],0xf
640089f1:	mov    DWORD PTR [ebp-0x1c],eax
640089f4:	mov    BYTE PTR [ebp-0x2c],al
640089f7:	mov    DWORD PTR [ebp-0x4],eax
640089fa:	mov    BYTE PTR [ebp-0x4],0x1
640089fe:	mov    edi,edi
64008a00:	cmp    edi,DWORD PTR [ebp+0x8]
64008a03:	je     0x64008ab9
64008a09:	mov    DWORD PTR [ebp-0x4c],esi
64008a0c:	mov    DWORD PTR [ebp-0x50],esi
64008a0f:	cmp    esi,eax
64008a11:	mov    BYTE PTR [ebp-0x4],0x2
64008a15:	je     0x64008a32
64008a17:	push   0xffffffff
64008a19:	mov    DWORD PTR [esi+0x14],eax
64008a1c:	mov    DWORD PTR [esi+0x18],0xf
64008a23:	push   eax
64008a24:	mov    BYTE PTR [esi+0x4],al
64008a27:	lea    eax,[ebp-0x30]
64008a2a:	push   eax
64008a2b:	mov    ecx,esi
64008a2d:	call   0x64001ad0
64008a32:	mov    BYTE PTR [ebp-0x4],0x1
64008a36:	mov    ebx,DWORD PTR [esi+0x10]
64008a39:	mov    eax,DWORD PTR [esi+0x4]
64008a3c:	mov    ecx,DWORD PTR [esi+0x8]
64008a3f:	mov    edx,DWORD PTR [esi+0xc]
64008a42:	mov    DWORD PTR [ebp-0x34],ebx
64008a45:	mov    ebx,DWORD PTR [edi+0x4]
64008a48:	mov    DWORD PTR [esi+0x4],ebx
64008a4b:	mov    ebx,DWORD PTR [edi+0x8]
64008a4e:	mov    DWORD PTR [esi+0x8],ebx
64008a51:	mov    ebx,DWORD PTR [edi+0xc]
64008a54:	mov    DWORD PTR [esi+0xc],ebx
64008a57:	mov    ebx,DWORD PTR [edi+0x10]
64008a5a:	mov    DWORD PTR [esi+0x10],ebx
64008a5d:	mov    DWORD PTR [edi+0x4],eax
64008a60:	mov    DWORD PTR [edi+0x8],ecx
64008a63:	mov    ecx,DWORD PTR [ebp-0x34]
64008a66:	mov    DWORD PTR [edi+0xc],edx
64008a69:	mov    edx,DWORD PTR [edi+0x14]
64008a6c:	mov    DWORD PTR [edi+0x10],ecx
64008a6f:	mov    eax,DWORD PTR [esi+0x14]
64008a72:	mov    DWORD PTR [esi+0x14],edx
64008a75:	mov    ecx,DWORD PTR [edi+0x18]
64008a78:	mov    DWORD PTR [edi+0x14],eax
64008a7b:	mov    eax,DWORD PTR [esi+0x18]
64008a7e:	mov    DWORD PTR [esi+0x18],ecx
64008a81:	mov    DWORD PTR [edi+0x18],eax
64008a84:	add    esi,0x1c
64008a87:	add    edi,0x1c
64008a8a:	mov    DWORD PTR [ebp-0x44],esi
64008a8d:	xor    eax,eax
64008a8f:	jmp    0x64008a00
64008a94:	mov    esi,DWORD PTR [ebp-0x48]
64008a97:	mov    edi,DWORD PTR [ebp-0x44]
64008a9a:	cmp    esi,edi
64008a9c:	je     0x64008ab0
64008a9e:	mov    ebx,DWORD PTR [ebp+0xc]
64008aa1:	push   esi
64008aa2:	mov    ecx,ebx
64008aa4:	call   0x64008980
64008aa9:	add    esi,0x1c
64008aac:	cmp    esi,edi
64008aae:	jne    0x64008aa1
64008ab0:	push   0x0
64008ab2:	push   0x0
64008ab4:	call   0x6400ef3d
64008ab9:	cmp    DWORD PTR [ebp-0x18],0x10
64008abd:	jb     0x64008acb
64008abf:	mov    edx,DWORD PTR [ebp-0x2c]
64008ac2:	push   edx
64008ac3:	call   0x6400eb52
64008ac8:	add    esp,0x4
64008acb:	mov    eax,esi
64008acd:	mov    ecx,DWORD PTR [ebp-0xc]
64008ad0:	mov    DWORD PTR fs:0x0,ecx
64008ad7:	pop    ecx
64008ad8:	pop    edi
64008ad9:	pop    esi
64008ada:	pop    ebx
64008adb:	mov    ecx,DWORD PTR [ebp-0x14]
64008ade:	xor    ecx,ebp
64008ae0:	call   0x6400f34e
64008ae5:	mov    esp,ebp
64008ae7:	pop    ebp
64008ae8:	ret    
64008ae9:	int3   
64008aea:	int3   
64008aeb:	int3   
64008aec:	int3   
64008aed:	int3   
64008aee:	int3   
64008aef:	int3   
64008af0:	push   ecx
64008af1:	mov    eax,ds:0x64028038
64008af6:	xor    eax,esp
64008af8:	mov    DWORD PTR [esp],eax
64008afb:	cmp    DWORD PTR [esp+0x8],ecx
64008aff:	mov    eax,DWORD PTR [esp+0xc]
64008b03:	je     0x64008b68
64008b05:	push   ebx
64008b06:	push   ebp
64008b07:	push   esi
64008b08:	push   edi
64008b09:	lea    esp,[esp+0x0]
64008b10:	mov    ebp,DWORD PTR [ecx-0x18]
64008b13:	mov    edx,DWORD PTR [eax-0x18]
64008b16:	mov    esi,DWORD PTR [eax-0x14]
64008b19:	mov    edi,DWORD PTR [eax-0x10]
64008b1c:	mov    ebx,DWORD PTR [eax-0xc]
64008b1f:	sub    ecx,0x1c
64008b22:	sub    eax,0x1c
64008b25:	cmp    ecx,DWORD PTR [esp+0x18]
64008b29:	mov    DWORD PTR [eax+0x4],ebp
64008b2c:	mov    ebp,DWORD PTR [ecx+0x8]
64008b2f:	mov    DWORD PTR [eax+0x8],ebp
64008b32:	mov    ebp,DWORD PTR [ecx+0xc]
64008b35:	mov    DWORD PTR [eax+0xc],ebp
64008b38:	mov    ebp,DWORD PTR [ecx+0x10]
64008b3b:	mov    DWORD PTR [eax+0x10],ebp
64008b3e:	mov    DWORD PTR [ecx+0x4],edx
64008b41:	mov    DWORD PTR [ecx+0x8],esi
64008b44:	mov    esi,DWORD PTR [ecx+0x14]
64008b47:	mov    DWORD PTR [ecx+0xc],edi
64008b4a:	mov    DWORD PTR [ecx+0x10],ebx
64008b4d:	mov    edx,DWORD PTR [eax+0x14]
64008b50:	mov    DWORD PTR [eax+0x14],esi
64008b53:	mov    esi,DWORD PTR [ecx+0x18]
64008b56:	mov    DWORD PTR [ecx+0x14],edx
64008b59:	mov    edx,DWORD PTR [eax+0x18]
64008b5c:	mov    DWORD PTR [eax+0x18],esi
64008b5f:	mov    DWORD PTR [ecx+0x18],edx
64008b62:	jne    0x64008b10
64008b64:	pop    edi
64008b65:	pop    esi
64008b66:	pop    ebp
64008b67:	pop    ebx
64008b68:	mov    ecx,DWORD PTR [esp]
64008b6b:	xor    ecx,esp
64008b6d:	call   0x6400f34e
64008b72:	pop    ecx
64008b73:	ret    
64008b74:	int3   
64008b75:	int3   
64008b76:	int3   
64008b77:	int3   
64008b78:	int3   
64008b79:	int3   
64008b7a:	int3   
64008b7b:	int3   
64008b7c:	int3   
64008b7d:	int3   
64008b7e:	int3   
64008b7f:	int3   
64008b80:	sub    esp,0x800
64008b86:	push   ebx
64008b87:	push   ebp
64008b88:	xor    ecx,ecx
64008b8a:	push   esi
64008b8b:	lea    eax,[ecx+0x1]
64008b8e:	push   edi
64008b8f:	nop
64008b90:	mov    edx,eax
64008b92:	and    dl,0x80
64008b95:	neg    dl
64008b97:	lea    esi,[eax+eax*1]
64008b9a:	mov    DWORD PTR [esp+ecx*4+0x410],eax
64008ba1:	mov    DWORD PTR [esp+eax*4+0x10],ecx
64008ba5:	sbb    edx,edx
64008ba7:	and    edx,0x1b
64008baa:	xor    edx,esi
64008bac:	xor    edx,eax
64008bae:	and    edx,0xff
64008bb4:	add    ecx,0x1
64008bb7:	cmp    ecx,0x100
64008bbd:	mov    eax,edx
64008bbf:	jl     0x64008b90
64008bc1:	mov    eax,0x1
64008bc6:	mov    ecx,0x6402a8e0
64008bcb:	jmp    0x64008bd0
64008bcd:	lea    ecx,[ecx+0x0]
64008bd0:	mov    edx,eax
64008bd2:	and    dl,0x80
64008bd5:	neg    dl
64008bd7:	mov    DWORD PTR [ecx],eax
64008bd9:	sbb    edx,edx
64008bdb:	and    edx,0x1b
64008bde:	add    eax,eax
64008be0:	xor    edx,eax
64008be2:	and    edx,0xff
64008be8:	add    ecx,0x4
64008beb:	cmp    ecx,0x6402a908
64008bf1:	mov    eax,edx
64008bf3:	jl     0x64008bd0
64008bf5:	mov    BYTE PTR ds:0x64029fe0,0x63
64008bfc:	mov    BYTE PTR ds:0x6402c16b,0x0
64008c03:	mov    ebx,0x1
64008c08:	mov    ecx,DWORD PTR [esp+ebx*4+0x10]
64008c0c:	add    ecx,ecx
64008c0e:	add    ecx,ecx
64008c10:	lea    edx,[esp+0x80c]
64008c17:	sub    edx,ecx
64008c19:	mov    eax,DWORD PTR [edx]
64008c1b:	mov    ecx,eax
64008c1d:	sar    ecx,0x7
64008c20:	lea    edx,[eax+eax*1]
64008c23:	or     ecx,edx
64008c25:	and    ecx,0xff
64008c2b:	xor    eax,ecx
64008c2d:	mov    edx,ecx
64008c2f:	sar    edx,0x7
64008c32:	add    ecx,ecx
64008c34:	or     edx,ecx
64008c36:	and    edx,0xff
64008c3c:	xor    eax,edx
64008c3e:	mov    ecx,edx
64008c40:	add    edx,edx
64008c42:	sar    ecx,0x7
64008c45:	or     ecx,edx
64008c47:	and    ecx,0xff
64008c4d:	xor    eax,ecx
64008c4f:	mov    edx,ecx
64008c51:	sar    edx,0x7
64008c54:	add    ecx,ecx
64008c56:	or     edx,ecx
64008c58:	xor    edx,0x63
64008c5b:	and    edx,0xff
64008c61:	xor    eax,edx
64008c63:	mov    BYTE PTR [ebx+0x64029fe0],al
64008c69:	mov    BYTE PTR [eax+0x6402c108],bl
64008c6f:	add    ebx,0x1
64008c72:	cmp    ebx,0x100
64008c78:	jl     0x64008c08
64008c7a:	xor    ecx,ecx
64008c7c:	lea    esp,[esp+0x0]
64008c80:	movzx  edx,BYTE PTR [ecx+0x64029fe0]
64008c87:	mov    eax,edx
64008c89:	and    al,0x80
64008c8b:	neg    al
64008c8d:	lea    esi,[edx+edx*1]
64008c90:	sbb    eax,eax
64008c92:	and    eax,0x1b
64008c95:	xor    eax,esi
64008c97:	and    eax,0xff
64008c9c:	mov    esi,eax
64008c9e:	xor    eax,edx
64008ca0:	shl    eax,0x8
64008ca3:	xor    eax,edx
64008ca5:	shl    eax,0x8
64008ca8:	xor    eax,edx
64008caa:	shl    eax,0x8
64008cad:	xor    eax,esi
64008caf:	mov    DWORD PTR [ecx*4+0x6402bd08],eax
64008cb6:	rol    eax,0x8
64008cb9:	mov    DWORD PTR [ecx*4+0x6402b908],eax
64008cc0:	rol    eax,0x8
64008cc3:	mov    DWORD PTR [ecx*4+0x6402b508],eax
64008cca:	rol    eax,0x8
64008ccd:	mov    DWORD PTR [ecx*4+0x6402b108],eax
64008cd4:	movzx  eax,BYTE PTR [ecx+0x6402c108]
64008cdb:	test   eax,eax
64008cdd:	je     0x64008d31
64008cdf:	mov    esi,DWORD PTR [esp+eax*4+0x10]
64008ce3:	mov    edx,DWORD PTR [esp+0x48]
64008ce7:	lea    eax,[esi+edx*1]
64008cea:	cdq    
64008ceb:	mov    edi,0xff
64008cf0:	idiv   edi
64008cf2:	mov    eax,DWORD PTR [esp+0x34]
64008cf6:	add    eax,esi
64008cf8:	mov    ebp,DWORD PTR [esp+edx*4+0x410]
64008cff:	cdq    
64008d00:	idiv   edi
64008d02:	mov    ebx,DWORD PTR [esp+edx*4+0x410]
64008d09:	mov    edx,DWORD PTR [esp+0x44]
64008d0d:	lea    eax,[esi+edx*1]
64008d10:	cdq    
64008d11:	idiv   edi
64008d13:	mov    eax,DWORD PTR [esp+0x3c]
64008d17:	add    eax,esi
64008d19:	mov    esi,0xff
64008d1e:	mov    edi,DWORD PTR [esp+edx*4+0x410]
64008d25:	cdq    
64008d26:	idiv   esi
64008d28:	mov    edx,DWORD PTR [esp+edx*4+0x410]
64008d2f:	jmp    0x64008d39
64008d31:	xor    ebp,ebp
64008d33:	xor    ebx,ebx
64008d35:	xor    edi,edi
64008d37:	xor    edx,edx
64008d39:	shl    edx,0x8
64008d3c:	xor    edx,edi
64008d3e:	shl    edx,0x8
64008d41:	xor    edx,ebx
64008d43:	shl    edx,0x8
64008d46:	xor    edx,ebp
64008d48:	mov    DWORD PTR [ecx*4+0x6402ad08],edx
64008d4f:	rol    edx,0x8
64008d52:	mov    DWORD PTR [ecx*4+0x6402a908],edx
64008d59:	rol    edx,0x8
64008d5c:	mov    DWORD PTR [ecx*4+0x6402a4e0],edx
64008d63:	rol    edx,0x8
64008d66:	mov    DWORD PTR [ecx*4+0x6402a0e0],edx
64008d6d:	add    ecx,0x1
64008d70:	cmp    ecx,0x100
64008d76:	jl     0x64008c80
64008d7c:	pop    edi
64008d7d:	pop    esi
64008d7e:	pop    ebp
64008d7f:	pop    ebx
64008d80:	add    esp,0x800
64008d86:	ret    
64008d87:	int3   
64008d88:	int3   
64008d89:	int3   
64008d8a:	int3   
64008d8b:	int3   
64008d8c:	int3   
64008d8d:	int3   
64008d8e:	int3   
64008d8f:	int3   
64008d90:	cmp    DWORD PTR ds:0x6402c20c,0x0
64008d97:	push   ebx
64008d98:	push   esi
64008d99:	push   edi
64008d9a:	mov    edi,eax
64008d9c:	jne    0x64008dad
64008d9e:	call   0x64008b80
64008da3:	mov    DWORD PTR ds:0x6402c20c,0x1
64008dad:	lea    eax,[edi+0x8]
64008db0:	mov    ecx,0x64029312
64008db5:	mov    esi,eax
64008db7:	mov    DWORD PTR [edi],0xa
64008dbd:	mov    DWORD PTR [edi+0x4],eax
64008dc0:	sub    esi,ecx
64008dc2:	movzx  ebx,BYTE PTR [ecx-0x1]
64008dc6:	xor    edx,edx
64008dc8:	mov    dh,BYTE PTR [ecx+0x1]
64008dcb:	add    ecx,0x4
64008dce:	mov    dl,BYTE PTR [ecx-0x4]
64008dd1:	shl    edx,0x8
64008dd4:	or     edx,ebx
64008dd6:	movzx  ebx,BYTE PTR [ecx-0x6]
64008dda:	shl    edx,0x8
64008ddd:	or     edx,ebx
64008ddf:	cmp    ecx,0x64029322
64008de5:	mov    DWORD PTR [esi+ecx*1-0x4],edx
64008de9:	jl     0x64008dc2
64008deb:	mov    edi,DWORD PTR [edi]
64008ded:	sub    edi,0xa
64008df0:	je     0x640090ac
64008df6:	sub    edi,0x2
64008df9:	je     0x64008edf
64008dff:	sub    edi,0x2
64008e02:	jne    0x6400928f
64008e08:	push   ebp
64008e09:	mov    ebp,0x6402a8e0
64008e0e:	mov    edi,edi
64008e10:	mov    edi,DWORD PTR [eax+0x1c]
64008e13:	xor    edx,edx
64008e15:	mov    ecx,edi
64008e17:	and    ecx,0xff
64008e1d:	mov    dh,BYTE PTR [ecx+0x64029fe0]
64008e23:	movzx  ecx,BYTE PTR [eax+0x1f]
64008e27:	movzx  ecx,BYTE PTR [ecx+0x64029fe0]
64008e2e:	xor    edx,ecx
64008e30:	movzx  ecx,BYTE PTR [eax+0x1e]
64008e34:	movzx  ecx,BYTE PTR [ecx+0x64029fe0]
64008e3b:	shl    edx,0x8
64008e3e:	xor    edx,ecx
64008e40:	movzx  ecx,BYTE PTR [eax+0x1d]
64008e44:	movzx  ecx,BYTE PTR [ecx+0x64029fe0]
64008e4b:	mov    esi,DWORD PTR [eax+0x8]
64008e4e:	shl    edx,0x8
64008e51:	xor    edx,ecx
64008e53:	xor    edx,DWORD PTR [eax]
64008e55:	xor    ebx,ebx
64008e57:	mov    ecx,edx
64008e59:	xor    ecx,DWORD PTR [ebp+0x0]
64008e5c:	mov    edx,DWORD PTR [eax+0x4]
64008e5f:	xor    edx,ecx
64008e61:	mov    DWORD PTR [eax+0x20],ecx
64008e64:	mov    ecx,DWORD PTR [eax+0xc]
64008e67:	xor    esi,edx
64008e69:	xor    ecx,esi
64008e6b:	mov    DWORD PTR [eax+0x2c],ecx
64008e6e:	mov    DWORD PTR [eax+0x24],edx
64008e71:	movzx  edx,BYTE PTR [eax+0x2f]
64008e75:	mov    DWORD PTR [eax+0x28],esi
64008e78:	mov    bh,BYTE PTR [edx+0x64029fe0]
64008e7e:	movzx  edx,BYTE PTR [eax+0x2e]
64008e82:	movzx  edx,BYTE PTR [edx+0x64029fe0]
64008e89:	xor    ebx,edx
64008e8b:	movzx  edx,BYTE PTR [eax+0x2d]
64008e8f:	movzx  edx,BYTE PTR [edx+0x64029fe0]
64008e96:	and    ecx,0xff
64008e9c:	movzx  ecx,BYTE PTR [ecx+0x64029fe0]
64008ea3:	shl    ebx,0x8
64008ea6:	xor    ebx,edx
64008ea8:	mov    edx,DWORD PTR [eax+0x14]
64008eab:	shl    ebx,0x8
64008eae:	xor    ecx,ebx
64008eb0:	xor    ecx,DWORD PTR [eax+0x10]
64008eb3:	add    ebp,0x4
64008eb6:	xor    edx,ecx
64008eb8:	mov    DWORD PTR [eax+0x30],ecx
64008ebb:	mov    ecx,DWORD PTR [eax+0x18]
64008ebe:	xor    ecx,edx
64008ec0:	mov    DWORD PTR [eax+0x38],ecx
64008ec3:	xor    ecx,edi
64008ec5:	mov    DWORD PTR [eax+0x34],edx
64008ec8:	mov    DWORD PTR [eax+0x3c],ecx
64008ecb:	add    eax,0x20
64008ece:	cmp    ebp,0x6402a8fc
64008ed4:	jl     0x64008e10
64008eda:	pop    ebp
64008edb:	pop    edi
64008edc:	pop    esi
64008edd:	pop    ebx
64008ede:	ret    
64008edf:	mov    esi,0x6402a8e4
64008ee4:	mov    edi,DWORD PTR [eax+0x14]
64008ee7:	xor    ecx,ecx
64008ee9:	mov    edx,edi
64008eeb:	and    edx,0xff
64008ef1:	mov    ch,BYTE PTR [edx+0x64029fe0]
64008ef7:	movzx  edx,BYTE PTR [eax+0x17]
64008efb:	movzx  edx,BYTE PTR [edx+0x64029fe0]
64008f02:	xor    ecx,edx
64008f04:	movzx  edx,BYTE PTR [eax+0x16]
64008f08:	movzx  edx,BYTE PTR [edx+0x64029fe0]
64008f0f:	shl    ecx,0x8
64008f12:	xor    ecx,edx
64008f14:	movzx  edx,BYTE PTR [eax+0x15]
64008f18:	movzx  edx,BYTE PTR [edx+0x64029fe0]
64008f1f:	shl    ecx,0x8
64008f22:	xor    ecx,edx
64008f24:	xor    ecx,DWORD PTR [esi-0x4]
64008f27:	mov    edx,DWORD PTR [eax+0x4]
64008f2a:	xor    ecx,DWORD PTR [eax]
64008f2c:	xor    edx,ecx
64008f2e:	mov    DWORD PTR [eax+0x18],ecx
64008f31:	mov    ecx,DWORD PTR [eax+0x8]
64008f34:	xor    ecx,edx
64008f36:	mov    DWORD PTR [eax+0x1c],edx
64008f39:	mov    edx,DWORD PTR [eax+0xc]
64008f3c:	xor    edx,ecx
64008f3e:	mov    DWORD PTR [eax+0x20],ecx
64008f41:	mov    ecx,DWORD PTR [eax+0x10]
64008f44:	xor    ecx,edx
64008f46:	mov    DWORD PTR [eax+0x28],ecx
64008f49:	mov    DWORD PTR [eax+0x24],edx
64008f4c:	xor    ecx,edi
64008f4e:	mov    DWORD PTR [eax+0x2c],ecx
64008f51:	and    ecx,0xff
64008f57:	xor    edx,edx
64008f59:	mov    dh,BYTE PTR [ecx+0x64029fe0]
64008f5f:	movzx  ecx,BYTE PTR [eax+0x2f]
64008f63:	movzx  ecx,BYTE PTR [ecx+0x64029fe0]
64008f6a:	xor    edx,ecx
64008f6c:	movzx  ecx,BYTE PTR [eax+0x2e]
64008f70:	movzx  ecx,BYTE PTR [ecx+0x64029fe0]
64008f77:	shl    edx,0x8
64008f7a:	xor    edx,ecx
64008f7c:	movzx  ecx,BYTE PTR [eax+0x2d]
64008f80:	movzx  ecx,BYTE PTR [ecx+0x64029fe0]
64008f87:	mov    edi,DWORD PTR [eax+0x28]
64008f8a:	shl    edx,0x8
64008f8d:	xor    edx,ecx
64008f8f:	xor    edx,DWORD PTR [eax+0x18]
64008f92:	mov    ecx,edx
64008f94:	xor    ecx,DWORD PTR [esi]
64008f96:	mov    edx,DWORD PTR [eax+0x1c]
64008f99:	xor    edx,ecx
64008f9b:	mov    DWORD PTR [eax+0x30],ecx
64008f9e:	mov    ecx,DWORD PTR [eax+0x20]
64008fa1:	xor    ecx,edx
64008fa3:	mov    DWORD PTR [eax+0x34],edx
64008fa6:	mov    edx,DWORD PTR [eax+0x24]
64008fa9:	xor    edx,ecx
64008fab:	mov    DWORD PTR [eax+0x38],ecx
64008fae:	mov    ecx,DWORD PTR [eax+0x2c]
64008fb1:	xor    edi,edx
64008fb3:	mov    DWORD PTR [eax+0x3c],edx
64008fb6:	xor    ecx,edi
64008fb8:	mov    DWORD PTR [eax+0x44],ecx
64008fbb:	and    ecx,0xff
64008fc1:	xor    edx,edx
64008fc3:	mov    DWORD PTR [eax+0x40],edi
64008fc6:	mov    dh,BYTE PTR [ecx+0x64029fe0]
64008fcc:	movzx  ecx,BYTE PTR [eax+0x47]
64008fd0:	movzx  ecx,BYTE PTR [ecx+0x64029fe0]
64008fd7:	xor    edx,ecx
64008fd9:	movzx  ecx,BYTE PTR [eax+0x46]
64008fdd:	movzx  ecx,BYTE PTR [ecx+0x64029fe0]
64008fe4:	shl    edx,0x8
64008fe7:	xor    edx,ecx
64008fe9:	movzx  ecx,BYTE PTR [eax+0x45]
64008fed:	movzx  ecx,BYTE PTR [ecx+0x64029fe0]
64008ff4:	shl    edx,0x8
64008ff7:	xor    edx,ecx
64008ff9:	xor    edx,DWORD PTR [esi+0x4]
64008ffc:	mov    ecx,edx
64008ffe:	xor    ecx,DWORD PTR [eax+0x30]
64009001:	mov    edx,DWORD PTR [eax+0x34]
64009004:	xor    edx,ecx
64009006:	mov    DWORD PTR [eax+0x48],ecx
64009009:	mov    ecx,DWORD PTR [eax+0x38]
6400900c:	xor    ecx,edx
6400900e:	mov    DWORD PTR [eax+0x4c],edx
64009011:	mov    edx,DWORD PTR [eax+0x3c]
64009014:	xor    edx,ecx
64009016:	mov    DWORD PTR [eax+0x50],ecx
64009019:	mov    ecx,DWORD PTR [eax+0x44]
6400901c:	xor    edi,edx
6400901e:	mov    DWORD PTR [eax+0x54],edx
64009021:	xor    ecx,edi
64009023:	mov    DWORD PTR [eax+0x5c],ecx
64009026:	and    ecx,0xff
6400902c:	xor    edx,edx
6400902e:	mov    DWORD PTR [eax+0x58],edi
64009031:	mov    dh,BYTE PTR [ecx+0x64029fe0]
64009037:	movzx  ecx,BYTE PTR [eax+0x5f]
6400903b:	movzx  ecx,BYTE PTR [ecx+0x64029fe0]
64009042:	xor    edx,ecx
64009044:	movzx  ecx,BYTE PTR [eax+0x5e]
64009048:	movzx  ecx,BYTE PTR [ecx+0x64029fe0]
6400904f:	shl    edx,0x8
64009052:	xor    edx,ecx
64009054:	movzx  ecx,BYTE PTR [eax+0x5d]
64009058:	movzx  ecx,BYTE PTR [ecx+0x64029fe0]
6400905f:	shl    edx,0x8
64009062:	xor    edx,ecx
64009064:	xor    edx,DWORD PTR [esi+0x8]
64009067:	add    esi,0x10
6400906a:	mov    ecx,edx
6400906c:	xor    ecx,DWORD PTR [eax+0x48]
6400906f:	mov    edx,DWORD PTR [eax+0x4c]
64009072:	xor    edx,ecx
64009074:	mov    DWORD PTR [eax+0x60],ecx
64009077:	mov    ecx,DWORD PTR [eax+0x50]
6400907a:	xor    ecx,edx
6400907c:	mov    DWORD PTR [eax+0x64],edx
6400907f:	mov    edx,DWORD PTR [eax+0x54]
64009082:	xor    edx,ecx
64009084:	mov    DWORD PTR [eax+0x68],ecx
64009087:	mov    DWORD PTR [eax+0x6c],edx
6400908a:	mov    ecx,edi
6400908c:	xor    ecx,edx
6400908e:	mov    edx,DWORD PTR [eax+0x5c]
64009091:	xor    edx,ecx
64009093:	mov    DWORD PTR [eax+0x70],ecx
64009096:	mov    DWORD PTR [eax+0x74],edx
64009099:	add    eax,0x60
6400909c:	cmp    esi,0x6402a904
640090a2:	jl     0x64008ee4
640090a8:	pop    edi
640090a9:	pop    esi
640090aa:	pop    ebx
640090ab:	ret    
640090ac:	mov    ecx,0x6402a8e4
640090b1:	mov    esi,DWORD PTR [eax+0xc]
640090b4:	mov    edx,esi
640090b6:	and    edx,0xff
640090bc:	xor    ebx,ebx
640090be:	mov    bh,BYTE PTR [edx+0x64029fe0]
640090c4:	movzx  edx,BYTE PTR [eax+0xf]
640090c8:	movzx  edx,BYTE PTR [edx+0x64029fe0]
640090cf:	xor    ebx,edx
640090d1:	movzx  edx,BYTE PTR [eax+0xe]
640090d5:	movzx  edx,BYTE PTR [edx+0x64029fe0]
640090dc:	mov    edi,DWORD PTR [eax+0x4]
640090df:	shl    ebx,0x8
640090e2:	xor    ebx,edx
640090e4:	movzx  edx,BYTE PTR [eax+0xd]
640090e8:	movzx  edx,BYTE PTR [edx+0x64029fe0]
640090ef:	shl    ebx,0x8
640090f2:	xor    ebx,edx
640090f4:	xor    ebx,DWORD PTR [ecx-0x4]
640090f7:	mov    edx,ebx
640090f9:	xor    edx,DWORD PTR [eax]
640090fb:	mov    DWORD PTR [eax+0x10],edx
640090fe:	xor    edi,edx
64009100:	mov    edx,DWORD PTR [eax+0x8]
64009103:	xor    edx,edi
64009105:	xor    esi,edx
64009107:	mov    DWORD PTR [eax+0x18],edx
6400910a:	mov    DWORD PTR [eax+0x1c],esi
6400910d:	and    esi,0xff
64009113:	xor    edx,edx
64009115:	mov    DWORD PTR [eax+0x14],edi
64009118:	mov    dh,BYTE PTR [esi+0x64029fe0]
6400911e:	movzx  esi,BYTE PTR [eax+0x1f]
64009122:	movzx  esi,BYTE PTR [esi+0x64029fe0]
64009129:	xor    edx,esi
6400912b:	movzx  esi,BYTE PTR [eax+0x1e]
6400912f:	movzx  esi,BYTE PTR [esi+0x64029fe0]
64009136:	shl    edx,0x8
64009139:	xor    edx,esi
6400913b:	movzx  esi,BYTE PTR [eax+0x1d]
6400913f:	movzx  esi,BYTE PTR [esi+0x64029fe0]
64009146:	shl    edx,0x8
64009149:	xor    edx,esi
6400914b:	xor    edx,DWORD PTR [ecx]
6400914d:	mov    esi,edi
6400914f:	xor    edx,DWORD PTR [eax+0x10]
64009152:	xor    esi,edx
64009154:	mov    DWORD PTR [eax+0x20],edx
64009157:	mov    edx,DWORD PTR [eax+0x18]
6400915a:	xor    edx,esi
6400915c:	mov    DWORD PTR [eax+0x24],esi
6400915f:	mov    esi,DWORD PTR [eax+0x1c]
64009162:	xor    esi,edx
64009164:	mov    DWORD PTR [eax+0x28],edx
64009167:	mov    DWORD PTR [eax+0x2c],esi
6400916a:	and    esi,0xff
64009170:	xor    edx,edx
64009172:	mov    dh,BYTE PTR [esi+0x64029fe0]
64009178:	movzx  esi,BYTE PTR [eax+0x2f]
6400917c:	movzx  esi,BYTE PTR [esi+0x64029fe0]
64009183:	xor    edx,esi
64009185:	movzx  esi,BYTE PTR [eax+0x2e]
64009189:	movzx  esi,BYTE PTR [esi+0x64029fe0]
64009190:	shl    edx,0x8
64009193:	xor    edx,esi
64009195:	movzx  esi,BYTE PTR [eax+0x2d]
64009199:	movzx  esi,BYTE PTR [esi+0x64029fe0]
640091a0:	shl    edx,0x8
640091a3:	xor    edx,esi
640091a5:	xor    edx,DWORD PTR [ecx+0x4]
640091a8:	mov    esi,DWORD PTR [eax+0x24]
640091ab:	xor    edx,DWORD PTR [eax+0x20]
640091ae:	xor    esi,edx
640091b0:	mov    DWORD PTR [eax+0x30],edx
640091b3:	mov    edx,DWORD PTR [eax+0x28]
640091b6:	xor    edx,esi
640091b8:	mov    DWORD PTR [eax+0x34],esi
640091bb:	mov    esi,DWORD PTR [eax+0x2c]
640091be:	xor    esi,edx
640091c0:	mov    DWORD PTR [eax+0x3c],esi
640091c3:	mov    DWORD PTR [eax+0x38],edx
640091c6:	and    esi,0xff
640091cc:	xor    edx,edx
640091ce:	mov    dh,BYTE PTR [esi+0x64029fe0]
640091d4:	movzx  esi,BYTE PTR [eax+0x3f]
640091d8:	movzx  esi,BYTE PTR [esi+0x64029fe0]
640091df:	xor    edx,esi
640091e1:	movzx  esi,BYTE PTR [eax+0x3e]
640091e5:	movzx  esi,BYTE PTR [esi+0x64029fe0]
640091ec:	shl    edx,0x8
640091ef:	xor    edx,esi
640091f1:	movzx  esi,BYTE PTR [eax+0x3d]
640091f5:	movzx  esi,BYTE PTR [esi+0x64029fe0]
640091fc:	shl    edx,0x8
640091ff:	xor    edx,esi
64009201:	xor    edx,DWORD PTR [ecx+0x8]
64009204:	mov    esi,DWORD PTR [eax+0x34]
64009207:	xor    edx,DWORD PTR [eax+0x30]
6400920a:	add    ecx,0x14
6400920d:	xor    esi,edx
6400920f:	mov    DWORD PTR [eax+0x40],edx
64009212:	mov    edx,DWORD PTR [eax+0x38]
64009215:	xor    edx,esi
64009217:	mov    DWORD PTR [eax+0x44],esi
6400921a:	mov    esi,DWORD PTR [eax+0x3c]
6400921d:	xor    esi,edx
6400921f:	mov    DWORD PTR [eax+0x48],edx
64009222:	mov    DWORD PTR [eax+0x4c],esi
64009225:	and    esi,0xff
6400922b:	xor    edx,edx
6400922d:	mov    dh,BYTE PTR [esi+0x64029fe0]
64009233:	movzx  esi,BYTE PTR [eax+0x4f]
64009237:	movzx  esi,BYTE PTR [esi+0x64029fe0]
6400923e:	xor    edx,esi
64009240:	movzx  esi,BYTE PTR [eax+0x4e]
64009244:	movzx  esi,BYTE PTR [esi+0x64029fe0]
6400924b:	shl    edx,0x8
6400924e:	xor    edx,esi
64009250:	movzx  esi,BYTE PTR [eax+0x4d]
64009254:	movzx  esi,BYTE PTR [esi+0x64029fe0]
6400925b:	shl    edx,0x8
6400925e:	xor    edx,esi
64009260:	xor    edx,DWORD PTR [ecx-0x8]
64009263:	mov    esi,DWORD PTR [eax+0x44]
64009266:	xor    edx,DWORD PTR [eax+0x40]
64009269:	add    eax,0x50
6400926c:	xor    esi,edx
6400926e:	mov    DWORD PTR [eax],edx
64009270:	mov    edx,DWORD PTR [eax-0x8]
64009273:	xor    edx,esi
64009275:	mov    DWORD PTR [eax+0x4],esi
64009278:	mov    esi,DWORD PTR [eax-0x4]
6400927b:	xor    esi,edx
6400927d:	cmp    ecx,0x6402a90c
64009283:	mov    DWORD PTR [eax+0x8],edx
64009286:	mov    DWORD PTR [eax+0xc],esi
64009289:	jl     0x640090b1
6400928f:	pop    edi
64009290:	pop    esi
64009291:	pop    ebx
64009292:	ret    
64009293:	int3   
64009294:	int3   
64009295:	int3   
64009296:	int3   
64009297:	int3   
64009298:	int3   
64009299:	int3   
6400929a:	int3   
6400929b:	int3   
6400929c:	int3   
6400929d:	int3   
6400929e:	int3   
6400929f:	int3   
640092a0:	sub    esp,0x11c
640092a6:	push   esi
640092a7:	push   edi
640092a8:	mov    edi,eax
640092aa:	lea    esi,[edi+0x8]
640092ad:	lea    eax,[esp+0x8]
640092b1:	mov    DWORD PTR [edi],0xa
640092b7:	mov    DWORD PTR [edi+0x4],esi
640092ba:	call   0x64008d90
640092bf:	mov    eax,DWORD PTR [esp+0x8]
640092c3:	shl    eax,0x4
640092c6:	add    eax,DWORD PTR [esp+0xc]
640092ca:	add    esi,0x4
640092cd:	mov    ecx,DWORD PTR [eax]
640092cf:	mov    DWORD PTR [esi-0x4],ecx
640092d2:	mov    edx,DWORD PTR [eax+0x4]
640092d5:	add    eax,0x4
640092d8:	mov    DWORD PTR [esi],edx
640092da:	mov    ecx,DWORD PTR [eax+0x4]
640092dd:	add    eax,0x4
640092e0:	add    esi,0x4
640092e3:	mov    DWORD PTR [esi],ecx
640092e5:	mov    edx,DWORD PTR [eax+0x4]
640092e8:	add    eax,0x4
640092eb:	add    esi,0x4
640092ee:	mov    DWORD PTR [esi],edx
640092f0:	mov    ecx,DWORD PTR [edi]
640092f2:	sub    ecx,0x1
640092f5:	add    esi,0x4
640092f8:	sub    eax,0x1c
640092fb:	test   ecx,ecx
640092fd:	jle    0x64009455
64009303:	movzx  edx,BYTE PTR [eax+0x3]
64009307:	movzx  edx,BYTE PTR [edx+0x64029fe0]
6400930e:	mov    edx,DWORD PTR [edx*4+0x6402a0e0]
64009315:	movzx  edi,BYTE PTR [eax+0x2]
64009319:	movzx  edi,BYTE PTR [edi+0x64029fe0]
64009320:	xor    edx,DWORD PTR [edi*4+0x6402a4e0]
64009327:	movzx  edi,BYTE PTR [eax+0x1]
6400932b:	movzx  edi,BYTE PTR [edi+0x64029fe0]
64009332:	xor    edx,DWORD PTR [edi*4+0x6402a908]
64009339:	mov    edi,DWORD PTR [eax]
6400933b:	and    edi,0xff
64009341:	movzx  edi,BYTE PTR [edi+0x64029fe0]
64009348:	xor    edx,DWORD PTR [edi*4+0x6402ad08]
6400934f:	add    eax,0x10
64009352:	mov    DWORD PTR [esi],edx
64009354:	mov    edx,DWORD PTR [eax-0xc]
64009357:	movzx  edi,BYTE PTR [eax-0x9]
6400935b:	movzx  edi,BYTE PTR [edi+0x64029fe0]
64009362:	and    edx,0xff
64009368:	movzx  edx,BYTE PTR [edx+0x64029fe0]
6400936f:	mov    edx,DWORD PTR [edx*4+0x6402ad08]
64009376:	xor    edx,DWORD PTR [edi*4+0x6402a0e0]
6400937d:	movzx  edi,BYTE PTR [eax-0xa]
64009381:	movzx  edi,BYTE PTR [edi+0x64029fe0]
64009388:	xor    edx,DWORD PTR [edi*4+0x6402a4e0]
6400938f:	movzx  edi,BYTE PTR [eax-0xb]
64009393:	movzx  edi,BYTE PTR [edi+0x64029fe0]
6400939a:	xor    edx,DWORD PTR [edi*4+0x6402a908]
640093a1:	sub    ecx,0x1
640093a4:	mov    DWORD PTR [esi+0x4],edx
640093a7:	mov    edx,DWORD PTR [eax-0x8]
640093aa:	movzx  edi,BYTE PTR [eax-0x5]
640093ae:	movzx  edi,BYTE PTR [edi+0x64029fe0]
640093b5:	and    edx,0xff
640093bb:	movzx  edx,BYTE PTR [edx+0x64029fe0]
640093c2:	mov    edx,DWORD PTR [edx*4+0x6402ad08]
640093c9:	xor    edx,DWORD PTR [edi*4+0x6402a0e0]
640093d0:	movzx  edi,BYTE PTR [eax-0x6]
640093d4:	movzx  edi,BYTE PTR [edi+0x64029fe0]
640093db:	xor    edx,DWORD PTR [edi*4+0x6402a4e0]
640093e2:	movzx  edi,BYTE PTR [eax-0x7]
640093e6:	movzx  edi,BYTE PTR [edi+0x64029fe0]
640093ed:	xor    edx,DWORD PTR [edi*4+0x6402a908]
640093f4:	add    esi,0x10
640093f7:	mov    DWORD PTR [esi-0x8],edx
640093fa:	mov    edx,DWORD PTR [eax-0x4]
640093fd:	movzx  edi,BYTE PTR [eax-0x1]
64009401:	movzx  edi,BYTE PTR [edi+0x64029fe0]
64009408:	and    edx,0xff
6400940e:	movzx  edx,BYTE PTR [edx+0x64029fe0]
64009415:	mov    edx,DWORD PTR [edx*4+0x6402ad08]
6400941c:	xor    edx,DWORD PTR [edi*4+0x6402a0e0]
64009423:	movzx  edi,BYTE PTR [eax-0x2]
64009427:	movzx  edi,BYTE PTR [edi+0x64029fe0]
6400942e:	xor    edx,DWORD PTR [edi*4+0x6402a4e0]
64009435:	movzx  edi,BYTE PTR [eax-0x3]
64009439:	movzx  edi,BYTE PTR [edi+0x64029fe0]
64009440:	xor    edx,DWORD PTR [edi*4+0x6402a908]
64009447:	sub    eax,0x20
6400944a:	test   ecx,ecx
6400944c:	mov    DWORD PTR [esi-0x4],edx
6400944f:	jg     0x64009303
64009455:	mov    ecx,DWORD PTR [eax]
64009457:	mov    DWORD PTR [esi],ecx
64009459:	mov    edx,DWORD PTR [eax+0x4]
6400945c:	add    esi,0x4
6400945f:	add    eax,0x4
64009462:	mov    DWORD PTR [esi],edx
64009464:	mov    ecx,DWORD PTR [eax+0x4]
64009467:	add    esi,0x4
6400946a:	add    eax,0x4
6400946d:	mov    DWORD PTR [esi],ecx
6400946f:	mov    edx,DWORD PTR [eax+0x4]
64009472:	pop    edi
64009473:	mov    DWORD PTR [esi+0x4],edx
64009476:	pop    esi
64009477:	add    esp,0x11c
6400947d:	ret    
6400947e:	int3   
6400947f:	int3   
64009480:	sub    esp,0x10
64009483:	xor    ecx,ecx
64009485:	push   ebx
64009486:	push   ebp
64009487:	mov    ebp,DWORD PTR [esp+0x1c]
6400948b:	push   esi
6400948c:	push   edi
6400948d:	mov    edi,eax
6400948f:	mov    ch,BYTE PTR [edi+0x3]
64009492:	movzx  edx,BYTE PTR [edi+0x1]
64009496:	mov    eax,DWORD PTR [ebp+0x4]
64009499:	movzx  esi,BYTE PTR [edi+0x9]
6400949d:	mov    cl,BYTE PTR [edi+0x2]
640094a0:	movzx  ebx,BYTE PTR [edi+0xd]
640094a4:	add    eax,0x4
640094a7:	add    eax,0x4
640094aa:	add    eax,0x4
640094ad:	shl    ecx,0x8
640094b0:	or     ecx,edx
640094b2:	movzx  edx,BYTE PTR [edi]
640094b5:	shl    ecx,0x8
640094b8:	or     ecx,edx
640094ba:	xor    ecx,DWORD PTR [eax-0xc]
640094bd:	movzx  edx,BYTE PTR [edi+0x5]
640094c1:	mov    DWORD PTR [esp+0x24],ecx
640094c5:	xor    ecx,ecx
640094c7:	mov    ch,BYTE PTR [edi+0x7]
640094ca:	add    eax,0x4
640094cd:	mov    cl,BYTE PTR [edi+0x6]
640094d0:	shl    ecx,0x8
640094d3:	or     ecx,edx
640094d5:	movzx  edx,BYTE PTR [edi+0x4]
640094d9:	shl    ecx,0x8
640094dc:	or     ecx,edx
640094de:	xor    edx,edx
640094e0:	mov    dh,BYTE PTR [edi+0xb]
640094e3:	xor    ecx,DWORD PTR [eax-0xc]
640094e6:	mov    dl,BYTE PTR [edi+0xa]
640094e9:	shl    edx,0x8
640094ec:	or     edx,esi
640094ee:	movzx  esi,BYTE PTR [edi+0x8]
640094f2:	shl    edx,0x8
640094f5:	or     edx,esi
640094f7:	xor    edx,DWORD PTR [eax-0x8]
640094fa:	mov    esi,edx
640094fc:	xor    edx,edx
640094fe:	mov    dh,BYTE PTR [edi+0xf]
64009501:	mov    DWORD PTR [esp+0x10],esi
64009505:	mov    dl,BYTE PTR [edi+0xe]
64009508:	movzx  edi,BYTE PTR [edi+0xc]
6400950c:	shl    edx,0x8
6400950f:	or     edx,ebx
64009511:	shl    edx,0x8
64009514:	or     edx,edi
64009516:	xor    edx,DWORD PTR [eax-0x4]
64009519:	cmp    DWORD PTR [esp+0x28],0x0
6400951e:	jne    0x640099b9
64009524:	mov    ebp,DWORD PTR [ebp+0x0]
64009527:	sar    ebp,1
64009529:	sub    ebp,0x1
6400952c:	test   ebp,ebp
6400952e:	jle    0x6400975f
64009534:	mov    ebx,esi
64009536:	movzx  edi,dh
64009539:	mov    esi,DWORD PTR [edi*4+0x6402a908]
64009540:	mov    edi,ecx
64009542:	shr    edi,0x18
64009545:	shr    ebx,0x10
64009548:	and    ebx,0xff
6400954e:	xor    esi,DWORD PTR [ebx*4+0x6402a4e0]
64009555:	add    eax,0x4
64009558:	xor    esi,DWORD PTR [edi*4+0x6402a0e0]
6400955f:	mov    edi,DWORD PTR [esp+0x24]
64009563:	and    edi,0xff
64009569:	mov    DWORD PTR [esp+0x28],esi
6400956d:	xor    esi,DWORD PTR [edi*4+0x6402ad08]
64009574:	movzx  edi,BYTE PTR [esp+0x25]
64009579:	xor    esi,DWORD PTR [eax-0x4]
6400957c:	add    eax,0x4
6400957f:	mov    DWORD PTR [esp+0x14],esi
64009583:	mov    esi,edx
64009585:	shr    esi,0x10
64009588:	and    esi,0xff
6400958e:	mov    esi,DWORD PTR [esi*4+0x6402a4e0]
64009595:	xor    esi,DWORD PTR [edi*4+0x6402a908]
6400959c:	mov    edi,DWORD PTR [esp+0x10]
640095a0:	shr    edi,0x18
640095a3:	mov    DWORD PTR [esp+0x28],esi
640095a7:	xor    esi,DWORD PTR [edi*4+0x6402a0e0]
640095ae:	mov    edi,ecx
640095b0:	and    edi,0xff
640095b6:	xor    esi,DWORD PTR [edi*4+0x6402ad08]
640095bd:	mov    edi,DWORD PTR [esp+0x24]
640095c1:	xor    esi,DWORD PTR [eax-0x4]
640095c4:	shr    edi,0x10
640095c7:	mov    DWORD PTR [esp+0x18],esi
640095cb:	movzx  esi,ch
640095ce:	mov    esi,DWORD PTR [esi*4+0x6402a908]
640095d5:	and    edi,0xff
640095db:	xor    esi,DWORD PTR [edi*4+0x6402a4e0]
640095e2:	mov    edi,edx
640095e4:	shr    edi,0x18
640095e7:	xor    esi,DWORD PTR [edi*4+0x6402a0e0]
640095ee:	mov    edi,DWORD PTR [esp+0x10]
640095f2:	and    edi,0xff
640095f8:	mov    DWORD PTR [esp+0x28],esi
640095fc:	xor    esi,DWORD PTR [edi*4+0x6402ad08]
64009603:	shr    ecx,0x10
64009606:	xor    esi,DWORD PTR [eax]
64009608:	and    ecx,0xff
6400960e:	mov    DWORD PTR [esp+0x28],esi
64009612:	movzx  esi,BYTE PTR [esp+0x11]
64009617:	mov    ebx,DWORD PTR [esi*4+0x6402a908]
6400961e:	xor    ebx,DWORD PTR [ecx*4+0x6402a4e0]
64009625:	mov    ecx,DWORD PTR [esp+0x24]
64009629:	mov    esi,DWORD PTR [esp+0x28]
6400962d:	shr    ecx,0x18
64009630:	xor    ebx,DWORD PTR [ecx*4+0x6402a0e0]
64009637:	and    edx,0xff
6400963d:	xor    ebx,DWORD PTR [edx*4+0x6402ad08]
64009644:	add    eax,0x4
64009647:	xor    ebx,DWORD PTR [eax]
64009649:	mov    ecx,esi
6400964b:	shr    ecx,0x10
6400964e:	and    ecx,0xff
64009654:	movzx  edx,bh
64009657:	mov    edi,DWORD PTR [edx*4+0x6402a908]
6400965e:	xor    edi,DWORD PTR [ecx*4+0x6402a4e0]
64009665:	mov    edx,DWORD PTR [esp+0x18]
64009669:	mov    ecx,edx
6400966b:	shr    ecx,0x18
6400966e:	xor    edi,DWORD PTR [ecx*4+0x6402a0e0]
64009675:	mov    ecx,DWORD PTR [esp+0x14]
64009679:	and    ecx,0xff
6400967f:	xor    edi,DWORD PTR [ecx*4+0x6402ad08]
64009686:	add    eax,0x4
64009689:	xor    edi,DWORD PTR [eax]
6400968b:	mov    ecx,ebx
6400968d:	shr    ecx,0x10
64009690:	mov    DWORD PTR [esp+0x24],edi
64009694:	movzx  edi,BYTE PTR [esp+0x15]
64009699:	add    eax,0x4
6400969c:	and    ecx,0xff
640096a2:	mov    ecx,DWORD PTR [ecx*4+0x6402a4e0]
640096a9:	xor    ecx,DWORD PTR [edi*4+0x6402a908]
640096b0:	shr    esi,0x18
640096b3:	xor    ecx,DWORD PTR [esi*4+0x6402a0e0]
640096ba:	mov    esi,edx
640096bc:	and    esi,0xff
640096c2:	xor    ecx,DWORD PTR [esi*4+0x6402ad08]
640096c9:	mov    esi,DWORD PTR [esp+0x14]
640096cd:	xor    ecx,DWORD PTR [eax]
640096cf:	movzx  edx,dh
640096d2:	mov    edx,DWORD PTR [edx*4+0x6402a908]
640096d9:	mov    edi,DWORD PTR [esp+0x18]
640096dd:	shr    esi,0x10
640096e0:	and    esi,0xff
640096e6:	xor    edx,DWORD PTR [esi*4+0x6402a4e0]
640096ed:	mov    esi,ebx
640096ef:	shr    esi,0x18
640096f2:	xor    edx,DWORD PTR [esi*4+0x6402a0e0]
640096f9:	mov    esi,DWORD PTR [esp+0x28]
640096fd:	and    esi,0xff
64009703:	xor    edx,DWORD PTR [esi*4+0x6402ad08]
6400970a:	add    eax,0x4
6400970d:	xor    edx,DWORD PTR [eax]
6400970f:	shr    edi,0x10
64009712:	mov    esi,edx
64009714:	movzx  edx,BYTE PTR [esp+0x29]
64009719:	mov    edx,DWORD PTR [edx*4+0x6402a908]
64009720:	and    edi,0xff
64009726:	xor    edx,DWORD PTR [edi*4+0x6402a4e0]
6400972d:	mov    edi,DWORD PTR [esp+0x14]
64009731:	shr    edi,0x18
64009734:	xor    edx,DWORD PTR [edi*4+0x6402a0e0]
6400973b:	and    ebx,0xff
64009741:	xor    edx,DWORD PTR [ebx*4+0x6402ad08]
64009748:	add    eax,0x4
6400974b:	xor    edx,DWORD PTR [eax]
6400974d:	sub    ebp,0x1
64009750:	add    eax,0x4
64009753:	test   ebp,ebp
64009755:	mov    DWORD PTR [esp+0x10],esi
64009759:	jg     0x64009534
6400975f:	mov    ebx,esi
64009761:	movzx  edi,dh
64009764:	mov    esi,DWORD PTR [edi*4+0x6402a908]
6400976b:	mov    edi,ecx
6400976d:	shr    edi,0x18
64009770:	shr    ebx,0x10
64009773:	and    ebx,0xff
64009779:	xor    esi,DWORD PTR [ebx*4+0x6402a4e0]
64009780:	add    eax,0x4
64009783:	xor    esi,DWORD PTR [edi*4+0x6402a0e0]
6400978a:	mov    edi,DWORD PTR [esp+0x24]
6400978e:	mov    DWORD PTR [esp+0x28],esi
64009792:	and    edi,0xff
64009798:	xor    esi,DWORD PTR [edi*4+0x6402ad08]
6400979f:	movzx  edi,BYTE PTR [esp+0x25]
640097a4:	xor    esi,DWORD PTR [eax-0x4]
640097a7:	add    eax,0x4
640097aa:	mov    DWORD PTR [esp+0x14],esi
640097ae:	mov    esi,edx
640097b0:	shr    esi,0x10
640097b3:	and    esi,0xff
640097b9:	mov    esi,DWORD PTR [esi*4+0x6402a4e0]
640097c0:	xor    esi,DWORD PTR [edi*4+0x6402a908]
640097c7:	mov    edi,DWORD PTR [esp+0x10]
640097cb:	shr    edi,0x18
640097ce:	mov    DWORD PTR [esp+0x28],esi
640097d2:	xor    esi,DWORD PTR [edi*4+0x6402a0e0]
640097d9:	mov    edi,ecx
640097db:	and    edi,0xff
640097e1:	xor    esi,DWORD PTR [edi*4+0x6402ad08]
640097e8:	mov    edi,DWORD PTR [esp+0x24]
640097ec:	xor    esi,DWORD PTR [eax-0x4]
640097ef:	shr    edi,0x10
640097f2:	mov    DWORD PTR [esp+0x18],esi
640097f6:	movzx  esi,ch
640097f9:	mov    esi,DWORD PTR [esi*4+0x6402a908]
64009800:	and    edi,0xff
64009806:	xor    esi,DWORD PTR [edi*4+0x6402a4e0]
6400980d:	mov    edi,edx
6400980f:	shr    edi,0x18
64009812:	xor    esi,DWORD PTR [edi*4+0x6402a0e0]
64009819:	mov    edi,DWORD PTR [esp+0x10]
6400981d:	mov    DWORD PTR [esp+0x28],esi
64009821:	and    edi,0xff
64009827:	xor    esi,DWORD PTR [edi*4+0x6402ad08]
6400982e:	shr    ecx,0x10
64009831:	xor    esi,DWORD PTR [eax]
64009833:	and    ecx,0xff
64009839:	mov    DWORD PTR [esp+0x28],esi
6400983d:	movzx  esi,BYTE PTR [esp+0x11]
64009842:	mov    ebx,DWORD PTR [esi*4+0x6402a908]
64009849:	xor    ebx,DWORD PTR [ecx*4+0x6402a4e0]
64009850:	mov    ecx,DWORD PTR [esp+0x24]
64009854:	mov    edi,DWORD PTR [esp+0x28]
64009858:	shr    ecx,0x18
6400985b:	xor    ebx,DWORD PTR [ecx*4+0x6402a0e0]
64009862:	mov    ecx,DWORD PTR [esp+0x18]
64009866:	and    edx,0xff
6400986c:	xor    ebx,DWORD PTR [edx*4+0x6402ad08]
64009873:	add    eax,0x4
64009876:	xor    ebx,DWORD PTR [eax]
64009878:	add    eax,0x4
6400987b:	shr    ecx,0x18
6400987e:	mov    DWORD PTR [esp+0x1c],eax
64009882:	xor    eax,eax
64009884:	mov    ah,BYTE PTR [ecx+0x6402c108]
6400988a:	mov    edx,edi
6400988c:	shr    edx,0x10
6400988f:	and    edx,0xff
64009895:	movzx  edx,BYTE PTR [edx+0x6402c108]
6400989c:	movzx  ecx,bh
6400989f:	movzx  ecx,BYTE PTR [ecx+0x6402c108]
640098a6:	xor    edx,eax
640098a8:	shl    edx,0x8
640098ab:	xor    edx,ecx
640098ad:	mov    ecx,DWORD PTR [esp+0x14]
640098b1:	and    ecx,0xff
640098b7:	movzx  ecx,BYTE PTR [ecx+0x6402c108]
640098be:	shl    edx,0x8
640098c1:	mov    DWORD PTR [esp+0x24],ebx
640098c5:	xor    edx,ecx
640098c7:	xor    ecx,ecx
640098c9:	shr    edi,0x18
640098cc:	mov    ch,BYTE PTR [edi+0x6402c108]
640098d2:	mov    eax,DWORD PTR [esp+0x1c]
640098d6:	xor    edx,DWORD PTR [eax]
640098d8:	shr    ebx,0x10
640098db:	and    ebx,0xff
640098e1:	movzx  esi,BYTE PTR [ebx+0x6402c108]
640098e8:	xor    esi,ecx
640098ea:	mov    ecx,DWORD PTR [esp+0x14]
640098ee:	shl    esi,0x8
640098f1:	movzx  edi,ch
640098f4:	movzx  edi,BYTE PTR [edi+0x6402c108]
640098fb:	xor    esi,edi
640098fd:	mov    edi,DWORD PTR [esp+0x18]
64009901:	shl    esi,0x8
64009904:	and    edi,0xff
6400990a:	movzx  edi,BYTE PTR [edi+0x6402c108]
64009911:	xor    esi,edi
64009913:	xor    esi,DWORD PTR [eax+0x4]
64009916:	shr    ecx,0x10
64009919:	mov    DWORD PTR [esp+0x1c],esi
6400991d:	and    ecx,0xff
64009923:	movzx  esi,BYTE PTR [ecx+0x6402c108]
6400992a:	mov    ecx,DWORD PTR [esp+0x24]
6400992e:	add    eax,0x4
64009931:	shr    ecx,0x18
64009934:	xor    ebx,ebx
64009936:	mov    bh,BYTE PTR [ecx+0x6402c108]
6400993c:	mov    ecx,DWORD PTR [esp+0x18]
64009940:	movzx  edi,ch
64009943:	movzx  edi,BYTE PTR [edi+0x6402c108]
6400994a:	xor    esi,ebx
6400994c:	shl    esi,0x8
6400994f:	xor    esi,edi
64009951:	mov    edi,DWORD PTR [esp+0x28]
64009955:	shl    esi,0x8
64009958:	and    edi,0xff
6400995e:	movzx  edi,BYTE PTR [edi+0x6402c108]
64009965:	xor    esi,edi
64009967:	xor    esi,DWORD PTR [eax+0x4]
6400996a:	add    eax,0x4
6400996d:	mov    DWORD PTR [esp+0x10],esi
64009971:	mov    esi,DWORD PTR [esp+0x14]
64009975:	shr    esi,0x18
64009978:	shr    ecx,0x10
6400997b:	xor    ebx,ebx
6400997d:	mov    bh,BYTE PTR [esi+0x6402c108]
64009983:	movzx  esi,BYTE PTR [esp+0x29]
64009988:	movzx  esi,BYTE PTR [esi+0x6402c108]
6400998f:	and    ecx,0xff
64009995:	movzx  ecx,BYTE PTR [ecx+0x6402c108]
6400999c:	xor    ecx,ebx
6400999e:	shl    ecx,0x8
640099a1:	xor    ecx,esi
640099a3:	mov    esi,DWORD PTR [esp+0x24]
640099a7:	and    esi,0xff
640099ad:	movzx  esi,BYTE PTR [esi+0x6402c108]
640099b4:	jmp    0x64009e4c
640099b9:	mov    edi,DWORD PTR [ebp+0x0]
640099bc:	sar    edi,1
640099be:	sub    edi,0x1
640099c1:	test   edi,edi
640099c3:	mov    DWORD PTR [esp+0x1c],edi
640099c7:	jle    0x64009c03
640099cd:	lea    ecx,[ecx+0x0]
640099d0:	shr    esi,0x10
640099d3:	and    esi,0xff
640099d9:	mov    esi,DWORD PTR [esi*4+0x6402b508]
640099e0:	movzx  edi,ch
640099e3:	xor    esi,DWORD PTR [edi*4+0x6402b908]
640099ea:	mov    edi,edx
640099ec:	shr    edi,0x18
640099ef:	xor    esi,DWORD PTR [edi*4+0x6402b108]
640099f6:	mov    edi,DWORD PTR [esp+0x24]
640099fa:	mov    DWORD PTR [esp+0x28],esi
640099fe:	and    edi,0xff
64009a04:	xor    esi,DWORD PTR [edi*4+0x6402bd08]
64009a0b:	movzx  edi,BYTE PTR [esp+0x11]
64009a10:	xor    esi,DWORD PTR [eax]
64009a12:	add    eax,0x4
64009a15:	mov    DWORD PTR [esp+0x14],esi
64009a19:	mov    esi,edx
64009a1b:	shr    esi,0x10
64009a1e:	and    esi,0xff
64009a24:	mov    esi,DWORD PTR [esi*4+0x6402b508]
64009a2b:	xor    esi,DWORD PTR [edi*4+0x6402b908]
64009a32:	mov    edi,DWORD PTR [esp+0x24]
64009a36:	mov    DWORD PTR [esp+0x28],esi
64009a3a:	shr    edi,0x18
64009a3d:	xor    esi,DWORD PTR [edi*4+0x6402b108]
64009a44:	mov    edi,ecx
64009a46:	and    edi,0xff
64009a4c:	xor    esi,DWORD PTR [edi*4+0x6402bd08]
64009a53:	mov    edi,DWORD PTR [esp+0x24]
64009a57:	xor    esi,DWORD PTR [eax]
64009a59:	shr    edi,0x10
64009a5c:	mov    DWORD PTR [esp+0x18],esi
64009a60:	and    edi,0xff
64009a66:	movzx  esi,dh
64009a69:	mov    esi,DWORD PTR [esi*4+0x6402b908]
64009a70:	xor    esi,DWORD PTR [edi*4+0x6402b508]
64009a77:	mov    edi,ecx
64009a79:	shr    edi,0x18
64009a7c:	xor    esi,DWORD PTR [edi*4+0x6402b108]
64009a83:	mov    edi,DWORD PTR [esp+0x10]
64009a87:	mov    DWORD PTR [esp+0x28],esi
64009a8b:	and    edi,0xff
64009a91:	xor    esi,DWORD PTR [edi*4+0x6402bd08]
64009a98:	add    eax,0x4
64009a9b:	xor    esi,DWORD PTR [eax]
64009a9d:	shr    ecx,0x10
64009aa0:	mov    DWORD PTR [esp+0x28],esi
64009aa4:	movzx  esi,BYTE PTR [esp+0x25]
64009aa9:	and    ecx,0xff
64009aaf:	mov    ebx,DWORD PTR [ecx*4+0x6402b508]
64009ab6:	xor    ebx,DWORD PTR [esi*4+0x6402b908]
64009abd:	mov    ecx,DWORD PTR [esp+0x10]
64009ac1:	shr    ecx,0x18
64009ac4:	xor    ebx,DWORD PTR [ecx*4+0x6402b108]
64009acb:	mov    ecx,DWORD PTR [esp+0x18]
64009acf:	and    edx,0xff
64009ad5:	xor    ebx,DWORD PTR [edx*4+0x6402bd08]
64009adc:	mov    edx,DWORD PTR [esp+0x28]
64009ae0:	xor    ebx,DWORD PTR [eax+0x4]
64009ae3:	add    eax,0x4
64009ae6:	mov    esi,edx
64009ae8:	shr    esi,0x10
64009aeb:	and    esi,0xff
64009af1:	mov    ebp,DWORD PTR [esi*4+0x6402b508]
64009af8:	movzx  edi,ch
64009afb:	xor    ebp,DWORD PTR [edi*4+0x6402b908]
64009b02:	mov    esi,ebx
64009b04:	shr    esi,0x18
64009b07:	xor    ebp,DWORD PTR [esi*4+0x6402b108]
64009b0e:	mov    esi,DWORD PTR [esp+0x14]
64009b12:	mov    edi,esi
64009b14:	and    edi,0xff
64009b1a:	xor    ebp,DWORD PTR [edi*4+0x6402bd08]
64009b21:	add    eax,0x4
64009b24:	xor    ebp,DWORD PTR [eax]
64009b26:	mov    edi,ebx
64009b28:	shr    edi,0x10
64009b2b:	add    eax,0x4
64009b2e:	mov    DWORD PTR [esp+0x24],ebp
64009b32:	and    edi,0xff
64009b38:	movzx  edx,dh
64009b3b:	mov    edi,DWORD PTR [edi*4+0x6402b508]
64009b42:	xor    edi,DWORD PTR [edx*4+0x6402b908]
64009b49:	mov    edx,esi
64009b4b:	shr    edx,0x18
64009b4e:	xor    edi,DWORD PTR [edx*4+0x6402b108]
64009b55:	shr    esi,0x10
64009b58:	and    esi,0xff
64009b5e:	movzx  edx,bh
64009b61:	mov    edx,DWORD PTR [edx*4+0x6402b908]
64009b68:	xor    edx,DWORD PTR [esi*4+0x6402b508]
64009b6f:	mov    esi,DWORD PTR [esp+0x18]
64009b73:	shr    esi,0x18
64009b76:	xor    edx,DWORD PTR [esi*4+0x6402b108]
64009b7d:	mov    esi,DWORD PTR [esp+0x28]
64009b81:	and    ecx,0xff
64009b87:	xor    edi,DWORD PTR [ecx*4+0x6402bd08]
64009b8e:	and    esi,0xff
64009b94:	xor    edi,DWORD PTR [eax]
64009b96:	xor    edx,DWORD PTR [esi*4+0x6402bd08]
64009b9d:	mov    ecx,edi
64009b9f:	xor    edx,DWORD PTR [eax+0x4]
64009ba2:	mov    edi,DWORD PTR [esp+0x18]
64009ba6:	add    eax,0x4
64009ba9:	shr    edi,0x10
64009bac:	and    edi,0xff
64009bb2:	mov    ebp,DWORD PTR [edi*4+0x6402b508]
64009bb9:	mov    edi,DWORD PTR [esp+0x28]
64009bbd:	mov    esi,edx
64009bbf:	movzx  edx,BYTE PTR [esp+0x15]
64009bc4:	xor    ebp,DWORD PTR [edx*4+0x6402b908]
64009bcb:	shr    edi,0x18
64009bce:	xor    ebp,DWORD PTR [edi*4+0x6402b108]
64009bd5:	mov    edi,DWORD PTR [esp+0x1c]
64009bd9:	and    ebx,0xff
64009bdf:	xor    ebp,DWORD PTR [ebx*4+0x6402bd08]
64009be6:	add    eax,0x4
64009be9:	xor    ebp,DWORD PTR [eax]
64009beb:	sub    edi,0x1
64009bee:	add    eax,0x4
64009bf1:	test   edi,edi
64009bf3:	mov    DWORD PTR [esp+0x10],esi
64009bf7:	mov    edx,ebp
64009bf9:	mov    DWORD PTR [esp+0x1c],edi
64009bfd:	jg     0x640099d0
64009c03:	shr    esi,0x10
64009c06:	and    esi,0xff
64009c0c:	mov    esi,DWORD PTR [esi*4+0x6402b508]
64009c13:	movzx  edi,ch
64009c16:	xor    esi,DWORD PTR [edi*4+0x6402b908]
64009c1d:	mov    edi,edx
64009c1f:	shr    edi,0x18
64009c22:	xor    esi,DWORD PTR [edi*4+0x6402b108]
64009c29:	mov    edi,DWORD PTR [esp+0x24]
64009c2d:	mov    DWORD PTR [esp+0x28],esi
64009c31:	and    edi,0xff
64009c37:	xor    esi,DWORD PTR [edi*4+0x6402bd08]
64009c3e:	movzx  edi,BYTE PTR [esp+0x11]
64009c43:	xor    esi,DWORD PTR [eax]
64009c45:	add    eax,0x4
64009c48:	mov    DWORD PTR [esp+0x14],esi
64009c4c:	mov    esi,edx
64009c4e:	shr    esi,0x10
64009c51:	and    esi,0xff
64009c57:	mov    esi,DWORD PTR [esi*4+0x6402b508]
64009c5e:	xor    esi,DWORD PTR [edi*4+0x6402b908]
64009c65:	mov    edi,DWORD PTR [esp+0x24]
64009c69:	shr    edi,0x18
64009c6c:	mov    DWORD PTR [esp+0x28],esi
64009c70:	xor    esi,DWORD PTR [edi*4+0x6402b108]
64009c77:	mov    edi,ecx
64009c79:	and    edi,0xff
64009c7f:	xor    esi,DWORD PTR [edi*4+0x6402bd08]
64009c86:	mov    edi,DWORD PTR [esp+0x24]
64009c8a:	xor    esi,DWORD PTR [eax]
64009c8c:	shr    edi,0x10
64009c8f:	mov    DWORD PTR [esp+0x18],esi
64009c93:	movzx  esi,dh
64009c96:	mov    esi,DWORD PTR [esi*4+0x6402b908]
64009c9d:	and    edi,0xff
64009ca3:	xor    esi,DWORD PTR [edi*4+0x6402b508]
64009caa:	mov    edi,ecx
64009cac:	shr    edi,0x18
64009caf:	xor    esi,DWORD PTR [edi*4+0x6402b108]
64009cb6:	mov    edi,DWORD PTR [esp+0x10]
64009cba:	mov    DWORD PTR [esp+0x28],esi
64009cbe:	and    edi,0xff
64009cc4:	xor    esi,DWORD PTR [edi*4+0x6402bd08]
64009ccb:	movzx  edi,BYTE PTR [esp+0x25]
64009cd0:	xor    esi,DWORD PTR [eax+0x4]
64009cd3:	shr    ecx,0x10
64009cd6:	and    ecx,0xff
64009cdc:	add    eax,0x4
64009cdf:	mov    DWORD PTR [esp+0x28],esi
64009ce3:	mov    esi,DWORD PTR [ecx*4+0x6402b508]
64009cea:	xor    esi,DWORD PTR [edi*4+0x6402b908]
64009cf1:	mov    ecx,DWORD PTR [esp+0x10]
64009cf5:	and    edx,0xff
64009cfb:	shr    ecx,0x18
64009cfe:	xor    esi,DWORD PTR [ecx*4+0x6402b108]
64009d05:	add    eax,0x4
64009d08:	xor    esi,DWORD PTR [edx*4+0x6402bd08]
64009d0f:	mov    edx,DWORD PTR [esp+0x28]
64009d13:	xor    esi,DWORD PTR [eax]
64009d15:	shr    edx,0x10
64009d18:	and    edx,0xff
64009d1e:	movzx  edx,BYTE PTR [edx+0x64029fe0]
64009d25:	mov    ecx,esi
64009d27:	shr    ecx,0x18
64009d2a:	xor    ebx,ebx
64009d2c:	mov    bh,BYTE PTR [ecx+0x64029fe0]
64009d32:	movzx  ecx,BYTE PTR [esp+0x19]
64009d37:	movzx  ecx,BYTE PTR [ecx+0x64029fe0]
64009d3e:	xor    edx,ebx
64009d40:	shl    edx,0x8
64009d43:	xor    edx,ecx
64009d45:	mov    ecx,DWORD PTR [esp+0x14]
64009d49:	mov    edi,ecx
64009d4b:	and    edi,0xff
64009d51:	movzx  edi,BYTE PTR [edi+0x64029fe0]
64009d58:	shl    edx,0x8
64009d5b:	add    eax,0x4
64009d5e:	xor    edx,edi
64009d60:	xor    edx,DWORD PTR [eax]
64009d62:	mov    DWORD PTR [esp+0x24],esi
64009d66:	add    eax,0x4
64009d69:	shr    esi,0x10
64009d6c:	and    esi,0xff
64009d72:	movzx  esi,BYTE PTR [esi+0x64029fe0]
64009d79:	shr    ecx,0x18
64009d7c:	xor    ebx,ebx
64009d7e:	mov    bh,BYTE PTR [ecx+0x64029fe0]
64009d84:	movzx  ecx,BYTE PTR [esp+0x29]
64009d89:	movzx  ecx,BYTE PTR [ecx+0x64029fe0]
64009d90:	xor    esi,ebx
64009d92:	shl    esi,0x8
64009d95:	xor    esi,ecx
64009d97:	mov    ecx,DWORD PTR [esp+0x18]
64009d9b:	mov    edi,ecx
64009d9d:	shl    esi,0x8
64009da0:	and    edi,0xff
64009da6:	movzx  edi,BYTE PTR [edi+0x64029fe0]
64009dad:	xor    esi,edi
64009daf:	xor    esi,DWORD PTR [eax]
64009db1:	mov    edi,DWORD PTR [esp+0x28]
64009db5:	mov    DWORD PTR [esp+0x1c],esi
64009db9:	mov    esi,DWORD PTR [esp+0x14]
64009dbd:	shr    ecx,0x18
64009dc0:	shr    esi,0x10
64009dc3:	and    esi,0xff
64009dc9:	movzx  esi,BYTE PTR [esi+0x64029fe0]
64009dd0:	xor    ebx,ebx
64009dd2:	mov    bh,BYTE PTR [ecx+0x64029fe0]
64009dd8:	movzx  ecx,BYTE PTR [esp+0x25]
64009ddd:	movzx  ecx,BYTE PTR [ecx+0x64029fe0]
64009de4:	xor    esi,ebx
64009de6:	shl    esi,0x8
64009de9:	xor    esi,ecx
64009deb:	mov    ecx,edi
64009ded:	and    ecx,0xff
64009df3:	movzx  ecx,BYTE PTR [ecx+0x64029fe0]
64009dfa:	shl    esi,0x8
64009dfd:	xor    esi,ecx
64009dff:	xor    esi,DWORD PTR [eax+0x4]
64009e02:	mov    ecx,DWORD PTR [esp+0x18]
64009e06:	shr    ecx,0x10
64009e09:	xor    ebx,ebx
64009e0b:	add    eax,0x4
64009e0e:	shr    edi,0x18
64009e11:	mov    bh,BYTE PTR [edi+0x64029fe0]
64009e17:	and    ecx,0xff
64009e1d:	movzx  ecx,BYTE PTR [ecx+0x64029fe0]
64009e24:	mov    DWORD PTR [esp+0x10],esi
64009e28:	movzx  esi,BYTE PTR [esp+0x15]
64009e2d:	movzx  esi,BYTE PTR [esi+0x64029fe0]
64009e34:	xor    ecx,ebx
64009e36:	shl    ecx,0x8
64009e39:	xor    ecx,esi
64009e3b:	mov    esi,DWORD PTR [esp+0x24]
64009e3f:	and    esi,0xff
64009e45:	movzx  esi,BYTE PTR [esi+0x64029fe0]
64009e4c:	shl    ecx,0x8
64009e4f:	xor    ecx,esi
64009e51:	xor    ecx,DWORD PTR [eax+0x4]
64009e54:	mov    esi,DWORD PTR [esp+0x2c]
64009e58:	mov    eax,edx
64009e5a:	shr    eax,0x8
64009e5d:	mov    BYTE PTR [esi+0x1],al
64009e60:	mov    eax,edx
64009e62:	mov    BYTE PTR [esi],dl
64009e64:	shr    edx,0x18
64009e67:	shr    eax,0x10
64009e6a:	mov    BYTE PTR [esi+0x3],dl
64009e6d:	mov    BYTE PTR [esi+0x2],al
64009e70:	mov    eax,DWORD PTR [esp+0x1c]
64009e74:	mov    edx,eax
64009e76:	shr    edx,0x8
64009e79:	mov    BYTE PTR [esi+0x5],dl
64009e7c:	mov    BYTE PTR [esi+0x4],al
64009e7f:	mov    edx,eax
64009e81:	shr    edx,0x10
64009e84:	shr    eax,0x18
64009e87:	mov    BYTE PTR [esi+0x6],dl
64009e8a:	mov    BYTE PTR [esi+0x7],al
64009e8d:	mov    eax,DWORD PTR [esp+0x10]
64009e91:	mov    edx,eax
64009e93:	shr    edx,0x8
64009e96:	mov    BYTE PTR [esi+0x9],dl
64009e99:	mov    edx,eax
64009e9b:	mov    BYTE PTR [esi+0x8],al
64009e9e:	shr    edx,0x10
64009ea1:	shr    eax,0x18
64009ea4:	mov    BYTE PTR [esi+0xa],dl
64009ea7:	mov    BYTE PTR [esi+0xb],al
64009eaa:	mov    eax,ecx
64009eac:	mov    edx,ecx
64009eae:	mov    BYTE PTR [esi+0xc],cl
64009eb1:	shr    eax,0x8
64009eb4:	shr    edx,0x10
64009eb7:	pop    edi
64009eb8:	shr    ecx,0x18
64009ebb:	mov    BYTE PTR [esi+0xd],al
64009ebe:	mov    BYTE PTR [esi+0xe],dl
64009ec1:	mov    BYTE PTR [esi+0xf],cl
64009ec4:	pop    esi
64009ec5:	pop    ebp
64009ec6:	pop    ebx
64009ec7:	add    esp,0x10
64009eca:	ret    
64009ecb:	int3   
64009ecc:	int3   
64009ecd:	int3   
64009ece:	int3   
64009ecf:	int3   
64009ed0:	sub    esp,0x30
64009ed3:	mov    eax,ds:0x64028038
64009ed8:	xor    eax,esp
64009eda:	mov    DWORD PTR [esp+0x2c],eax
64009ede:	cmp    DWORD PTR [esp+0x38],0x0
64009ee3:	mov    eax,DWORD PTR [esp+0x34]
64009ee7:	push   ebx
64009ee8:	push   ebp
64009ee9:	mov    ebp,DWORD PTR [esp+0x44]
64009eed:	push   esi
64009eee:	mov    esi,DWORD PTR [esp+0x4c]
64009ef2:	push   edi
64009ef3:	mov    edi,edx
64009ef5:	mov    DWORD PTR [esp+0x24],eax
64009ef9:	jne    0x64009fb7
64009eff:	test   ecx,ecx
64009f01:	jle    0x6400a096
64009f07:	lea    eax,[ecx-0x1]
64009f0a:	mov    ebx,ebp
64009f0c:	shr    eax,0x4
64009f0f:	sub    ebx,esi
64009f11:	add    eax,0x1
64009f14:	mov    DWORD PTR [esp+0x10],eax
64009f18:	mov    edx,DWORD PTR [edi+0x4]
64009f1b:	mov    ecx,DWORD PTR [edi]
64009f1d:	mov    eax,DWORD PTR [edi+0x8]
64009f20:	push   esi
64009f21:	mov    DWORD PTR [esp+0x34],edx
64009f25:	mov    edx,DWORD PTR [esp+0x28]
64009f29:	mov    DWORD PTR [esp+0x30],ecx
64009f2d:	mov    ecx,DWORD PTR [edi+0xc]
64009f30:	mov    DWORD PTR [esp+0x38],eax
64009f34:	push   0x0
64009f36:	push   edx
64009f37:	mov    eax,edi
64009f39:	mov    DWORD PTR [esp+0x44],ecx
64009f3d:	call   0x64009480
64009f42:	mov    eax,esi
64009f44:	add    esp,0xc
64009f47:	lea    ecx,[ebp+0x2]
64009f4a:	mov    esi,0x4
64009f4f:	nop
64009f50:	movzx  edx,BYTE PTR [ebx+eax*1]
64009f54:	xor    BYTE PTR [eax],dl
64009f56:	movzx  edx,BYTE PTR [ecx-0x1]
64009f5a:	xor    BYTE PTR [eax+0x1],dl
64009f5d:	movzx  edx,BYTE PTR [ecx]
64009f60:	xor    BYTE PTR [eax+0x2],dl
64009f63:	movzx  edx,BYTE PTR [ecx+0x1]
64009f67:	xor    BYTE PTR [eax+0x3],dl
64009f6a:	add    eax,0x4
64009f6d:	add    ecx,0x4
64009f70:	sub    esi,0x1
64009f73:	jne    0x64009f50
64009f75:	mov    ecx,DWORD PTR [esp+0x2c]
64009f79:	mov    edx,DWORD PTR [esp+0x30]
64009f7d:	mov    DWORD PTR [ebp+0x0],ecx
64009f80:	mov    ecx,DWORD PTR [esp+0x34]
64009f84:	mov    DWORD PTR [ebp+0x4],edx
64009f87:	mov    edx,DWORD PTR [esp+0x38]
64009f8b:	add    edi,0x10
64009f8e:	sub    ebx,0x10
64009f91:	sub    DWORD PTR [esp+0x10],0x1
64009f96:	mov    DWORD PTR [ebp+0x8],ecx
64009f99:	mov    DWORD PTR [ebp+0xc],edx
64009f9c:	mov    esi,eax
64009f9e:	jne    0x64009f18
64009fa4:	pop    edi
64009fa5:	pop    esi
64009fa6:	pop    ebp
64009fa7:	pop    ebx
64009fa8:	mov    ecx,DWORD PTR [esp+0x2c]
64009fac:	xor    ecx,esp
64009fae:	call   0x6400f34e
64009fb3:	add    esp,0x30
64009fb6:	ret    
64009fb7:	test   ecx,ecx
64009fb9:	jle    0x6400a096
64009fbf:	mov    eax,ebp
64009fc1:	sub    eax,esi
64009fc3:	mov    DWORD PTR [esp+0x10],eax
64009fc7:	mov    eax,ebp
64009fc9:	sub    eax,edi
64009fcb:	mov    DWORD PTR [esp+0x14],eax
64009fcf:	lea    eax,[ecx-0x1]
64009fd2:	shr    eax,0x4
64009fd5:	add    eax,0x1
64009fd8:	mov    DWORD PTR [esp+0x1c],eax
64009fdc:	lea    esp,[esp+0x0]
64009fe0:	lea    eax,[ebp+0x3]
64009fe3:	mov    edx,esi
64009fe5:	sub    edx,edi
64009fe7:	mov    DWORD PTR [esp+0x20],eax
64009feb:	lea    ecx,[esi+0x1]
64009fee:	mov    eax,edi
64009ff0:	mov    DWORD PTR [esp+0x28],edx
64009ff4:	mov    DWORD PTR [esp+0x18],0x4
64009ffc:	jmp    0x6400a004
64009ffe:	mov    edi,edi
6400a000:	mov    edx,DWORD PTR [esp+0x28]
6400a004:	mov    ebx,DWORD PTR [esp+0x14]
6400a008:	movzx  ebx,BYTE PTR [eax+ebx*1]
6400a00c:	xor    bl,BYTE PTR [eax]
6400a00e:	add    eax,0x4
6400a011:	mov    BYTE PTR [edx+eax*1-0x4],bl
6400a015:	mov    edx,DWORD PTR [esp+0x10]
6400a019:	mov    dl,BYTE PTR [ecx+edx*1]
6400a01c:	xor    dl,BYTE PTR [eax-0x3]
6400a01f:	add    ecx,0x4
6400a022:	mov    BYTE PTR [ecx-0x4],dl
6400a025:	movzx  ebx,BYTE PTR [eax-0x2]
6400a029:	mov    edx,DWORD PTR [esp+0x20]
6400a02d:	xor    bl,BYTE PTR [edx-0x1]
6400a030:	add    edx,0x4
6400a033:	mov    BYTE PTR [ecx-0x3],bl
6400a036:	movzx  ebx,BYTE PTR [eax-0x1]
6400a03a:	xor    bl,BYTE PTR [edx-0x4]
6400a03d:	mov    DWORD PTR [esp+0x20],edx
6400a041:	mov    BYTE PTR [ecx-0x2],bl
6400a044:	mov    ebx,0x1
6400a049:	sub    DWORD PTR [esp+0x18],ebx
6400a04d:	jne    0x6400a000
6400a04f:	mov    eax,DWORD PTR [esp+0x48]
6400a053:	mov    ecx,DWORD PTR [esp+0x24]
6400a057:	push   esi
6400a058:	push   eax
6400a059:	push   ecx
6400a05a:	mov    eax,esi
6400a05c:	call   0x64009480
6400a061:	mov    edx,DWORD PTR [esi]
6400a063:	mov    DWORD PTR [ebp+0x0],edx
6400a066:	mov    eax,DWORD PTR [esi+0x4]
6400a069:	mov    DWORD PTR [ebp+0x4],eax
6400a06c:	mov    ecx,DWORD PTR [esi+0x8]
6400a06f:	mov    eax,0x10
6400a074:	sub    DWORD PTR [esp+0x20],eax
6400a078:	sub    DWORD PTR [esp+0x1c],eax
6400a07c:	mov    DWORD PTR [ebp+0x8],ecx
6400a07f:	mov    edx,DWORD PTR [esi+0xc]
6400a082:	add    esp,0xc
6400a085:	add    edi,eax
6400a087:	add    esi,eax
6400a089:	sub    DWORD PTR [esp+0x1c],ebx
6400a08d:	mov    DWORD PTR [ebp+0xc],edx
6400a090:	jne    0x64009fe0
6400a096:	mov    ecx,DWORD PTR [esp+0x3c]
6400a09a:	pop    edi
6400a09b:	pop    esi
6400a09c:	pop    ebp
6400a09d:	pop    ebx
6400a09e:	xor    ecx,esp
6400a0a0:	call   0x6400f34e
6400a0a5:	add    esp,0x30
6400a0a8:	ret    
6400a0a9:	int3   
6400a0aa:	int3   
6400a0ab:	int3   
6400a0ac:	int3   
6400a0ad:	int3   
6400a0ae:	int3   
6400a0af:	int3   
6400a0b0:	push   0xffffffff
6400a0b2:	push   0x6401eb3b
6400a0b7:	mov    eax,fs:0x0
6400a0bd:	push   eax
6400a0be:	sub    esp,0x138
6400a0c4:	mov    eax,ds:0x64028038
6400a0c9:	xor    eax,esp
6400a0cb:	mov    DWORD PTR [esp+0x134],eax
6400a0d2:	push   ebp
6400a0d3:	push   esi
6400a0d4:	push   edi
6400a0d5:	mov    eax,ds:0x64028038
6400a0da:	xor    eax,esp
6400a0dc:	push   eax
6400a0dd:	lea    eax,[esp+0x148]
6400a0e4:	mov    fs:0x0,eax
6400a0ea:	mov    ebp,DWORD PTR [esp+0x15c]
6400a0f1:	mov    eax,DWORD PTR [esp+0x158]
6400a0f8:	mov    DWORD PTR [esp+0x14],eax
6400a0fc:	lea    esi,[ebp+0x8]
6400a0ff:	mov    eax,esi
6400a101:	and    eax,0xf
6400a104:	mov    DWORD PTR [esp+0x18],ecx
6400a108:	mov    DWORD PTR [esp+0x10],0x0
6400a110:	je     0x6400a11b
6400a112:	mov    edx,0x10
6400a117:	sub    edx,eax
6400a119:	add    esi,edx
6400a11b:	push   esi
6400a11c:	call   0x6400eb4d
6400a121:	mov    edi,eax
6400a123:	mov    DWORD PTR [esp+0x14],edi
6400a127:	push   esi
6400a128:	mov    DWORD PTR [esp+0x158],0x0
6400a133:	call   0x6400eb4d
6400a138:	push   esi
6400a139:	push   0x0
6400a13b:	push   edi
6400a13c:	mov    DWORD PTR [ebx],eax
6400a13e:	call   0x6400fa50
6400a143:	mov    eax,DWORD PTR [esp+0x28]
6400a147:	push   ebp
6400a148:	push   eax
6400a149:	lea    ecx,[edi+0x8]
6400a14c:	mov    DWORD PTR [edi],0x52514f4b
6400a152:	push   ecx
6400a153:	mov    DWORD PTR [edi+0x4],ebp
6400a156:	call   0x64010d80
6400a15b:	xor    eax,eax
6400a15d:	mov    DWORD PTR [esp+0x154],eax
6400a164:	mov    DWORD PTR [esp+0x158],eax
6400a16b:	mov    DWORD PTR [esp+0x15c],eax
6400a172:	mov    DWORD PTR [esp+0x160],eax
6400a179:	lea    eax,[esp+0x3c]
6400a17d:	call   0x64008d90
6400a182:	mov    eax,DWORD PTR [ebx]
6400a184:	push   eax
6400a185:	lea    edx,[esp+0x158]
6400a18c:	push   edx
6400a18d:	lea    eax,[esp+0x44]
6400a191:	push   0x1
6400a193:	push   eax
6400a194:	mov    edx,edi
6400a196:	mov    ecx,esi
6400a198:	call   0x64009ed0
6400a19d:	mov    ecx,DWORD PTR [esp+0x48]
6400a1a1:	push   0x0
6400a1a3:	mov    DWORD PTR [ecx],esi
6400a1a5:	call   0x6400eb52
6400a1aa:	push   edi
6400a1ab:	call   0x6400eb52
6400a1b0:	add    esp,0x38
6400a1b3:	mov    eax,ebx
6400a1b5:	mov    ecx,DWORD PTR [esp+0x148]
6400a1bc:	mov    DWORD PTR fs:0x0,ecx
6400a1c3:	pop    ecx
6400a1c4:	pop    edi
6400a1c5:	pop    esi
6400a1c6:	pop    ebp
6400a1c7:	mov    ecx,DWORD PTR [esp+0x134]
6400a1ce:	xor    ecx,esp
6400a1d0:	call   0x6400f34e
6400a1d5:	add    esp,0x144
6400a1db:	ret    
6400a1dc:	int3   
6400a1dd:	int3   
6400a1de:	int3   
6400a1df:	int3   
6400a1e0:	sub    esp,0x13c
6400a1e6:	mov    eax,ds:0x64028038
6400a1eb:	xor    eax,esp
6400a1ed:	mov    DWORD PTR [esp+0x134],eax
6400a1f4:	mov    eax,DWORD PTR [esp+0x144]
6400a1fb:	push   ebp
6400a1fc:	mov    ebp,DWORD PTR [esp+0x144]
6400a203:	mov    DWORD PTR [esp+0x8],eax
6400a207:	xor    eax,eax
6400a209:	test   bl,0xf
6400a20c:	push   esi
6400a20d:	mov    DWORD PTR [esp+0x8],eax
6400a211:	je     0x6400a21f
6400a213:	mov    DWORD PTR [esp+0x8],eax
6400a217:	mov    DWORD PTR [edi],eax
6400a219:	push   eax
6400a21a:	jmp    0x6400a2bf
6400a21f:	push   ebx
6400a220:	call   0x6400eb4d
6400a225:	mov    esi,eax
6400a227:	xor    eax,eax
6400a229:	mov    DWORD PTR [esp+0x130],eax
6400a230:	mov    DWORD PTR [esp+0x134],eax
6400a237:	mov    DWORD PTR [esp+0x138],eax
6400a23e:	mov    DWORD PTR [esp+0x13c],eax
6400a245:	add    esp,0x4
6400a248:	lea    eax,[esp+0x10]
6400a24c:	call   0x640092a0
6400a251:	push   esi
6400a252:	lea    ecx,[esp+0x130]
6400a259:	push   ecx
6400a25a:	lea    edx,[esp+0x18]
6400a25e:	push   0x0
6400a260:	push   edx
6400a261:	mov    edx,ebp
6400a263:	mov    ecx,ebx
6400a265:	call   0x64009ed0
6400a26a:	add    esp,0x10
6400a26d:	cmp    DWORD PTR [esi],0x52534f4b
6400a273:	je     0x6400a29a
6400a275:	push   0x0
6400a277:	mov    DWORD PTR [esp+0xc],0x0
6400a27f:	mov    DWORD PTR [edi],0x0
6400a285:	call   0x6400eb52
6400a28a:	add    esp,0x4
6400a28d:	push   0x0
6400a28f:	call   0x6400eb52
6400a294:	add    esp,0x4
6400a297:	push   esi
6400a298:	jmp    0x6400a2bf
6400a29a:	mov    eax,DWORD PTR [esi+0x4]
6400a29d:	mov    ecx,DWORD PTR [esp+0xc]
6400a2a1:	push   eax
6400a2a2:	lea    edx,[esi+0x8]
6400a2a5:	push   edx
6400a2a6:	push   esi
6400a2a7:	mov    DWORD PTR [ecx],eax
6400a2a9:	call   0x64010390
6400a2ae:	add    esp,0xc
6400a2b1:	push   0x0
6400a2b3:	mov    DWORD PTR [edi],esi
6400a2b5:	call   0x6400eb52
6400a2ba:	add    esp,0x4
6400a2bd:	push   0x0
6400a2bf:	call   0x6400eb52
6400a2c4:	mov    ecx,DWORD PTR [esp+0x140]
6400a2cb:	add    esp,0x4
6400a2ce:	pop    esi
6400a2cf:	pop    ebp
6400a2d0:	xor    ecx,esp
6400a2d2:	mov    eax,edi
6400a2d4:	call   0x6400f34e
6400a2d9:	add    esp,0x13c
6400a2df:	ret    
6400a2e0:	push   ebp
6400a2e1:	mov    ebp,esp
6400a2e3:	and    esp,0xfffffff8
6400a2e6:	push   0xffffffff
6400a2e8:	push   0x6401f9ae
6400a2ed:	mov    eax,fs:0x0
6400a2f3:	push   eax
6400a2f4:	push   ecx
6400a2f5:	push   ebx
6400a2f6:	push   esi
6400a2f7:	mov    eax,ds:0x64028038
6400a2fc:	xor    eax,esp
6400a2fe:	push   eax
6400a2ff:	lea    eax,[esp+0x10]
6400a303:	mov    fs:0x0,eax
6400a309:	mov    ebx,0x1
6400a30e:	test   BYTE PTR ds:0x6402c430,bl
6400a314:	jne    0x6400a39e
6400a31a:	or     DWORD PTR ds:0x6402c430,ebx
6400a320:	push   0x64023b9c
6400a325:	push   0xc
6400a327:	push   0x64023bc0
6400a32c:	mov    DWORD PTR [esp+0x24],0x0
6400a334:	call   0x64003970
6400a339:	push   0x64023bd0
6400a33e:	push   0x8
6400a340:	push   0x64023bf4
6400a345:	mov    esi,eax
6400a347:	call   0x64003b70
6400a34c:	add    esp,0x18
6400a34f:	push   eax
6400a350:	call   DWORD PTR ds:0x64021018
6400a356:	add    DWORD PTR ds:0x6402c210,ebx
6400a35c:	test   eax,eax
6400a35e:	je     0x6400a385
6400a360:	push   esi
6400a361:	push   eax
6400a362:	call   DWORD PTR ds:0x64021014
6400a368:	add    DWORD PTR ds:0x6402c214,ebx
6400a36e:	mov    ds:0x6402c42c,eax
6400a373:	mov    ecx,DWORD PTR [esp+0x10]
6400a377:	mov    DWORD PTR fs:0x0,ecx
6400a37e:	pop    ecx
6400a37f:	pop    esi
6400a380:	pop    ebx
6400a381:	mov    esp,ebp
6400a383:	pop    ebp
6400a384:	ret    
6400a385:	xor    eax,eax
6400a387:	mov    ds:0x6402c42c,eax
6400a38c:	mov    ecx,DWORD PTR [esp+0x10]
6400a390:	mov    DWORD PTR fs:0x0,ecx
6400a397:	pop    ecx
6400a398:	pop    esi
6400a399:	pop    ebx
6400a39a:	mov    esp,ebp
6400a39c:	pop    ebp
6400a39d:	ret    
6400a39e:	mov    eax,ds:0x6402c42c
6400a3a3:	mov    ecx,DWORD PTR [esp+0x10]
6400a3a7:	mov    DWORD PTR fs:0x0,ecx
6400a3ae:	pop    ecx
6400a3af:	pop    esi
6400a3b0:	pop    ebx
6400a3b1:	mov    esp,ebp
6400a3b3:	pop    ebp
6400a3b4:	ret    
6400a3b5:	int3   
6400a3b6:	int3   
6400a3b7:	int3   
6400a3b8:	int3   
6400a3b9:	int3   
6400a3ba:	int3   
6400a3bb:	int3   
6400a3bc:	int3   
6400a3bd:	int3   
6400a3be:	int3   
6400a3bf:	int3   
6400a3c0:	push   ebp
6400a3c1:	mov    ebp,esp
6400a3c3:	and    esp,0xfffffff8
6400a3c6:	push   0xffffffff
6400a3c8:	push   0x6401f97e
6400a3cd:	mov    eax,fs:0x0
6400a3d3:	push   eax
6400a3d4:	push   ecx
6400a3d5:	push   ebx
6400a3d6:	push   esi
6400a3d7:	mov    eax,ds:0x64028038
6400a3dc:	xor    eax,esp
6400a3de:	push   eax
6400a3df:	lea    eax,[esp+0x10]
6400a3e3:	mov    fs:0x0,eax
6400a3e9:	mov    ebx,0x1
6400a3ee:	test   BYTE PTR ds:0x6402c428,bl
6400a3f4:	jne    0x6400a47e
6400a3fa:	or     DWORD PTR ds:0x6402c428,ebx
6400a400:	push   0x64023c08
6400a405:	push   0xe
6400a407:	push   0x64023c3c
6400a40c:	mov    DWORD PTR [esp+0x24],0x0
6400a414:	call   0x64003970
6400a419:	push   0x64023c4c
6400a41e:	push   0x8
6400a420:	push   0x64023bf4
6400a425:	mov    esi,eax
6400a427:	call   0x64003b70
6400a42c:	add    esp,0x18
6400a42f:	push   eax
6400a430:	call   DWORD PTR ds:0x64021018
6400a436:	add    DWORD PTR ds:0x6402c210,ebx
6400a43c:	test   eax,eax
6400a43e:	je     0x6400a465
6400a440:	push   esi
6400a441:	push   eax
6400a442:	call   DWORD PTR ds:0x64021014
6400a448:	add    DWORD PTR ds:0x6402c214,ebx
6400a44e:	mov    ds:0x6402c424,eax
6400a453:	mov    ecx,DWORD PTR [esp+0x10]
6400a457:	mov    DWORD PTR fs:0x0,ecx
6400a45e:	pop    ecx
6400a45f:	pop    esi
6400a460:	pop    ebx
6400a461:	mov    esp,ebp
6400a463:	pop    ebp
6400a464:	ret    
6400a465:	xor    eax,eax
6400a467:	mov    ds:0x6402c424,eax
6400a46c:	mov    ecx,DWORD PTR [esp+0x10]
6400a470:	mov    DWORD PTR fs:0x0,ecx
6400a477:	pop    ecx
6400a478:	pop    esi
6400a479:	pop    ebx
6400a47a:	mov    esp,ebp
6400a47c:	pop    ebp
6400a47d:	ret    
6400a47e:	mov    eax,ds:0x6402c424
6400a483:	mov    ecx,DWORD PTR [esp+0x10]
6400a487:	mov    DWORD PTR fs:0x0,ecx
6400a48e:	pop    ecx
6400a48f:	pop    esi
6400a490:	pop    ebx
6400a491:	mov    esp,ebp
6400a493:	pop    ebp
6400a494:	ret    
6400a495:	int3   
6400a496:	int3   
6400a497:	int3   
6400a498:	int3   
6400a499:	int3   
6400a49a:	int3   
6400a49b:	int3   
6400a49c:	int3   
6400a49d:	int3   
6400a49e:	int3   
6400a49f:	int3   
6400a4a0:	push   ebp
6400a4a1:	mov    ebp,esp
6400a4a3:	and    esp,0xfffffff8
6400a4a6:	push   0xffffffff
6400a4a8:	push   0x6401f94e
6400a4ad:	mov    eax,fs:0x0
6400a4b3:	push   eax
6400a4b4:	push   ecx
6400a4b5:	push   ebx
6400a4b6:	push   esi
6400a4b7:	mov    eax,ds:0x64028038
6400a4bc:	xor    eax,esp
6400a4be:	push   eax
6400a4bf:	lea    eax,[esp+0x10]
6400a4c3:	mov    fs:0x0,eax
6400a4c9:	mov    ebx,0x1
6400a4ce:	test   BYTE PTR ds:0x6402c420,bl
6400a4d4:	jne    0x6400a55e
6400a4da:	or     DWORD PTR ds:0x6402c420,ebx
6400a4e0:	push   0x64023c70
6400a4e5:	push   0xf
6400a4e7:	push   0x64023c9c
6400a4ec:	mov    DWORD PTR [esp+0x24],0x0
6400a4f4:	call   0x64003970
6400a4f9:	push   0x64023cac
6400a4fe:	push   0x8
6400a500:	push   0x64023bf4
6400a505:	mov    esi,eax
6400a507:	call   0x64003b70
6400a50c:	add    esp,0x18
6400a50f:	push   eax
6400a510:	call   DWORD PTR ds:0x64021018
6400a516:	add    DWORD PTR ds:0x6402c210,ebx
6400a51c:	test   eax,eax
6400a51e:	je     0x6400a545
6400a520:	push   esi
6400a521:	push   eax
6400a522:	call   DWORD PTR ds:0x64021014
6400a528:	add    DWORD PTR ds:0x6402c214,ebx
6400a52e:	mov    ds:0x6402c41c,eax
6400a533:	mov    ecx,DWORD PTR [esp+0x10]
6400a537:	mov    DWORD PTR fs:0x0,ecx
6400a53e:	pop    ecx
6400a53f:	pop    esi
6400a540:	pop    ebx
6400a541:	mov    esp,ebp
6400a543:	pop    ebp
6400a544:	ret    
6400a545:	xor    eax,eax
6400a547:	mov    ds:0x6402c41c,eax
6400a54c:	mov    ecx,DWORD PTR [esp+0x10]
6400a550:	mov    DWORD PTR fs:0x0,ecx
6400a557:	pop    ecx
6400a558:	pop    esi
6400a559:	pop    ebx
6400a55a:	mov    esp,ebp
6400a55c:	pop    ebp
6400a55d:	ret    
6400a55e:	mov    eax,ds:0x6402c41c
6400a563:	mov    ecx,DWORD PTR [esp+0x10]
6400a567:	mov    DWORD PTR fs:0x0,ecx
6400a56e:	pop    ecx
6400a56f:	pop    esi
6400a570:	pop    ebx
6400a571:	mov    esp,ebp
6400a573:	pop    ebp
6400a574:	ret    
6400a575:	int3   
6400a576:	int3   
6400a577:	int3   
6400a578:	int3   
6400a579:	int3   
6400a57a:	int3   
6400a57b:	int3   
6400a57c:	int3   
6400a57d:	int3   
6400a57e:	int3   
6400a57f:	int3   
6400a580:	push   ebp
6400a581:	mov    ebp,esp
6400a583:	and    esp,0xfffffff8
6400a586:	push   0xffffffff
6400a588:	push   0x6401f91e
6400a58d:	mov    eax,fs:0x0
6400a593:	push   eax
6400a594:	push   ecx
6400a595:	push   ebx
6400a596:	push   esi
6400a597:	mov    eax,ds:0x64028038
6400a59c:	xor    eax,esp
6400a59e:	push   eax
6400a59f:	lea    eax,[esp+0x10]
6400a5a3:	mov    fs:0x0,eax
6400a5a9:	mov    ebx,0x1
6400a5ae:	test   BYTE PTR ds:0x6402c418,bl
6400a5b4:	jne    0x6400a63e
6400a5ba:	or     DWORD PTR ds:0x6402c418,ebx
6400a5c0:	push   0x64023cd8
6400a5c5:	push   0xf
6400a5c7:	push   0x64023d04
6400a5cc:	mov    DWORD PTR [esp+0x24],0x0
6400a5d4:	call   0x64003970
6400a5d9:	push   0x64023d14
6400a5de:	push   0x8
6400a5e0:	push   0x64023bf4
6400a5e5:	mov    esi,eax
6400a5e7:	call   0x64003b70
6400a5ec:	add    esp,0x18
6400a5ef:	push   eax
6400a5f0:	call   DWORD PTR ds:0x64021018
6400a5f6:	add    DWORD PTR ds:0x6402c210,ebx
6400a5fc:	test   eax,eax
6400a5fe:	je     0x6400a625
6400a600:	push   esi
6400a601:	push   eax
6400a602:	call   DWORD PTR ds:0x64021014
6400a608:	add    DWORD PTR ds:0x6402c214,ebx
6400a60e:	mov    ds:0x6402c414,eax
6400a613:	mov    ecx,DWORD PTR [esp+0x10]
6400a617:	mov    DWORD PTR fs:0x0,ecx
6400a61e:	pop    ecx
6400a61f:	pop    esi
6400a620:	pop    ebx
6400a621:	mov    esp,ebp
6400a623:	pop    ebp
6400a624:	ret    
6400a625:	xor    eax,eax
6400a627:	mov    ds:0x6402c414,eax
6400a62c:	mov    ecx,DWORD PTR [esp+0x10]
6400a630:	mov    DWORD PTR fs:0x0,ecx
6400a637:	pop    ecx
6400a638:	pop    esi
6400a639:	pop    ebx
6400a63a:	mov    esp,ebp
6400a63c:	pop    ebp
6400a63d:	ret    
6400a63e:	mov    eax,ds:0x6402c414
6400a643:	mov    ecx,DWORD PTR [esp+0x10]
6400a647:	mov    DWORD PTR fs:0x0,ecx
6400a64e:	pop    ecx
6400a64f:	pop    esi
6400a650:	pop    ebx
6400a651:	mov    esp,ebp
6400a653:	pop    ebp
6400a654:	ret    
6400a655:	int3   
6400a656:	int3   
6400a657:	int3   
6400a658:	int3   
6400a659:	int3   
6400a65a:	int3   
6400a65b:	int3   
6400a65c:	int3   
6400a65d:	int3   
6400a65e:	int3   
6400a65f:	int3   
6400a660:	push   ebp
6400a661:	mov    ebp,esp
6400a663:	and    esp,0xfffffff8
6400a666:	push   0xffffffff
6400a668:	push   0x6401f8ee
6400a66d:	mov    eax,fs:0x0
6400a673:	push   eax
6400a674:	push   ecx
6400a675:	push   ebx
6400a676:	push   esi
6400a677:	mov    eax,ds:0x64028038
6400a67c:	xor    eax,esp
6400a67e:	push   eax
6400a67f:	lea    eax,[esp+0x10]
6400a683:	mov    fs:0x0,eax
6400a689:	mov    ebx,0x1
6400a68e:	test   BYTE PTR ds:0x6402c410,bl
6400a694:	jne    0x6400a71e
6400a69a:	or     DWORD PTR ds:0x6402c410,ebx
6400a6a0:	push   0x64023d44
6400a6a5:	push   0x13
6400a6a7:	push   0x64023d78
6400a6ac:	mov    DWORD PTR [esp+0x24],0x0
6400a6b4:	call   0x64003970
6400a6b9:	push   0x64023d8c
6400a6be:	push   0x8
6400a6c0:	push   0x64023db8
6400a6c5:	mov    esi,eax
6400a6c7:	call   0x64003b70
6400a6cc:	add    esp,0x18
6400a6cf:	push   eax
6400a6d0:	call   DWORD PTR ds:0x64021018
6400a6d6:	add    DWORD PTR ds:0x6402c210,ebx
6400a6dc:	test   eax,eax
6400a6de:	je     0x6400a705
6400a6e0:	push   esi
6400a6e1:	push   eax
6400a6e2:	call   DWORD PTR ds:0x64021014
6400a6e8:	add    DWORD PTR ds:0x6402c214,ebx
6400a6ee:	mov    ds:0x6402c40c,eax
6400a6f3:	mov    ecx,DWORD PTR [esp+0x10]
6400a6f7:	mov    DWORD PTR fs:0x0,ecx
6400a6fe:	pop    ecx
6400a6ff:	pop    esi
6400a700:	pop    ebx
6400a701:	mov    esp,ebp
6400a703:	pop    ebp
6400a704:	ret    
6400a705:	xor    eax,eax
6400a707:	mov    ds:0x6402c40c,eax
6400a70c:	mov    ecx,DWORD PTR [esp+0x10]
6400a710:	mov    DWORD PTR fs:0x0,ecx
6400a717:	pop    ecx
6400a718:	pop    esi
6400a719:	pop    ebx
6400a71a:	mov    esp,ebp
6400a71c:	pop    ebp
6400a71d:	ret    
6400a71e:	mov    eax,ds:0x6402c40c
6400a723:	mov    ecx,DWORD PTR [esp+0x10]
6400a727:	mov    DWORD PTR fs:0x0,ecx
6400a72e:	pop    ecx
6400a72f:	pop    esi
6400a730:	pop    ebx
6400a731:	mov    esp,ebp
6400a733:	pop    ebp
6400a734:	ret    
6400a735:	int3   
6400a736:	int3   
6400a737:	int3   
6400a738:	int3   
6400a739:	int3   
6400a73a:	int3   
6400a73b:	int3   
6400a73c:	int3   
6400a73d:	int3   
6400a73e:	int3   
6400a73f:	int3   
6400a740:	push   ebp
6400a741:	mov    ebp,esp
6400a743:	and    esp,0xfffffff8
6400a746:	push   0xffffffff
6400a748:	push   0x6401f8be
6400a74d:	mov    eax,fs:0x0
6400a753:	push   eax
6400a754:	push   ecx
6400a755:	push   ebx
6400a756:	push   esi
6400a757:	mov    eax,ds:0x64028038
6400a75c:	xor    eax,esp
6400a75e:	push   eax
6400a75f:	lea    eax,[esp+0x10]
6400a763:	mov    fs:0x0,eax
6400a769:	mov    ebx,0x1
6400a76e:	test   BYTE PTR ds:0x6402c408,bl
6400a774:	jne    0x6400a7fe
6400a77a:	or     DWORD PTR ds:0x6402c408,ebx
6400a780:	push   0x64023dcc
6400a785:	push   0xe
6400a787:	push   0x64023e00
6400a78c:	mov    DWORD PTR [esp+0x24],0x0
6400a794:	call   0x64003970
6400a799:	push   0x64023e10
6400a79e:	push   0x8
6400a7a0:	push   0x64023db8
6400a7a5:	mov    esi,eax
6400a7a7:	call   0x64003b70
6400a7ac:	add    esp,0x18
6400a7af:	push   eax
6400a7b0:	call   DWORD PTR ds:0x64021018
6400a7b6:	add    DWORD PTR ds:0x6402c210,ebx
6400a7bc:	test   eax,eax
6400a7be:	je     0x6400a7e5
6400a7c0:	push   esi
6400a7c1:	push   eax
6400a7c2:	call   DWORD PTR ds:0x64021014
6400a7c8:	add    DWORD PTR ds:0x6402c214,ebx
6400a7ce:	mov    ds:0x6402c404,eax
6400a7d3:	mov    ecx,DWORD PTR [esp+0x10]
6400a7d7:	mov    DWORD PTR fs:0x0,ecx
6400a7de:	pop    ecx
6400a7df:	pop    esi
6400a7e0:	pop    ebx
6400a7e1:	mov    esp,ebp
6400a7e3:	pop    ebp
6400a7e4:	ret    
6400a7e5:	xor    eax,eax
6400a7e7:	mov    ds:0x6402c404,eax
6400a7ec:	mov    ecx,DWORD PTR [esp+0x10]
6400a7f0:	mov    DWORD PTR fs:0x0,ecx
6400a7f7:	pop    ecx
6400a7f8:	pop    esi
6400a7f9:	pop    ebx
6400a7fa:	mov    esp,ebp
6400a7fc:	pop    ebp
6400a7fd:	ret    
6400a7fe:	mov    eax,ds:0x6402c404
6400a803:	mov    ecx,DWORD PTR [esp+0x10]
6400a807:	mov    DWORD PTR fs:0x0,ecx
6400a80e:	pop    ecx
6400a80f:	pop    esi
6400a810:	pop    ebx
6400a811:	mov    esp,ebp
6400a813:	pop    ebp
6400a814:	ret    
6400a815:	int3   
6400a816:	int3   
6400a817:	int3   
6400a818:	int3   
6400a819:	int3   
6400a81a:	int3   
6400a81b:	int3   
6400a81c:	int3   
6400a81d:	int3   
6400a81e:	int3   
6400a81f:	int3   
6400a820:	push   ebp
6400a821:	mov    ebp,esp
6400a823:	and    esp,0xfffffff8
6400a826:	push   0xffffffff
6400a828:	push   0x6401f88e
6400a82d:	mov    eax,fs:0x0
6400a833:	push   eax
6400a834:	push   ecx
6400a835:	push   ebx
6400a836:	push   esi
6400a837:	mov    eax,ds:0x64028038
6400a83c:	xor    eax,esp
6400a83e:	push   eax
6400a83f:	lea    eax,[esp+0x10]
6400a843:	mov    fs:0x0,eax
6400a849:	mov    ebx,0x1
6400a84e:	test   BYTE PTR ds:0x6402c400,bl
6400a854:	jne    0x6400a8de
6400a85a:	or     DWORD PTR ds:0x6402c400,ebx
6400a860:	push   0x64023e50
6400a865:	push   0xb
6400a867:	push   0x64023e8c
6400a86c:	mov    DWORD PTR [esp+0x24],0x0
6400a874:	call   0x64003970
6400a879:	push   0x64023e98
6400a87e:	push   0x8
6400a880:	push   0x64023db8
6400a885:	mov    esi,eax
6400a887:	call   0x64003b70
6400a88c:	add    esp,0x18
6400a88f:	push   eax
6400a890:	call   DWORD PTR ds:0x64021018
6400a896:	add    DWORD PTR ds:0x6402c210,ebx
6400a89c:	test   eax,eax
6400a89e:	je     0x6400a8c5
6400a8a0:	push   esi
6400a8a1:	push   eax
6400a8a2:	call   DWORD PTR ds:0x64021014
6400a8a8:	add    DWORD PTR ds:0x6402c214,ebx
6400a8ae:	mov    ds:0x6402c3fc,eax
6400a8b3:	mov    ecx,DWORD PTR [esp+0x10]
6400a8b7:	mov    DWORD PTR fs:0x0,ecx
6400a8be:	pop    ecx
6400a8bf:	pop    esi
6400a8c0:	pop    ebx
6400a8c1:	mov    esp,ebp
6400a8c3:	pop    ebp
6400a8c4:	ret    
6400a8c5:	xor    eax,eax
6400a8c7:	mov    ds:0x6402c3fc,eax
6400a8cc:	mov    ecx,DWORD PTR [esp+0x10]
6400a8d0:	mov    DWORD PTR fs:0x0,ecx
6400a8d7:	pop    ecx
6400a8d8:	pop    esi
6400a8d9:	pop    ebx
6400a8da:	mov    esp,ebp
6400a8dc:	pop    ebp
6400a8dd:	ret    
6400a8de:	mov    eax,ds:0x6402c3fc
6400a8e3:	mov    ecx,DWORD PTR [esp+0x10]
6400a8e7:	mov    DWORD PTR fs:0x0,ecx
6400a8ee:	pop    ecx
6400a8ef:	pop    esi
6400a8f0:	pop    ebx
6400a8f1:	mov    esp,ebp
6400a8f3:	pop    ebp
6400a8f4:	ret    
6400a8f5:	int3   
6400a8f6:	int3   
6400a8f7:	int3   
6400a8f8:	int3   
6400a8f9:	int3   
6400a8fa:	int3   
6400a8fb:	int3   
6400a8fc:	int3   
6400a8fd:	int3   
6400a8fe:	int3   
6400a8ff:	int3   
6400a900:	push   ebp
6400a901:	mov    ebp,esp
6400a903:	and    esp,0xfffffff8
6400a906:	push   0xffffffff
6400a908:	push   0x6401f85e
6400a90d:	mov    eax,fs:0x0
6400a913:	push   eax
6400a914:	push   ecx
6400a915:	push   ebx
6400a916:	push   esi
6400a917:	mov    eax,ds:0x64028038
6400a91c:	xor    eax,esp
6400a91e:	push   eax
6400a91f:	lea    eax,[esp+0x10]
6400a923:	mov    fs:0x0,eax
6400a929:	mov    ebx,0x1
6400a92e:	test   BYTE PTR ds:0x6402c3f8,bl
6400a934:	jne    0x6400a9be
6400a93a:	or     DWORD PTR ds:0x6402c3f8,ebx
6400a940:	push   0x64023ec8
6400a945:	push   0xb
6400a947:	push   0x64023ef4
6400a94c:	mov    DWORD PTR [esp+0x24],0x0
6400a954:	call   0x64003970
6400a959:	push   0x64023f00
6400a95e:	push   0x8
6400a960:	push   0x64023db8
6400a965:	mov    esi,eax
6400a967:	call   0x64003b70
6400a96c:	add    esp,0x18
6400a96f:	push   eax
6400a970:	call   DWORD PTR ds:0x64021018
6400a976:	add    DWORD PTR ds:0x6402c210,ebx
6400a97c:	test   eax,eax
6400a97e:	je     0x6400a9a5
6400a980:	push   esi
6400a981:	push   eax
6400a982:	call   DWORD PTR ds:0x64021014
6400a988:	add    DWORD PTR ds:0x6402c214,ebx
6400a98e:	mov    ds:0x6402c3f4,eax
6400a993:	mov    ecx,DWORD PTR [esp+0x10]
6400a997:	mov    DWORD PTR fs:0x0,ecx
6400a99e:	pop    ecx
6400a99f:	pop    esi
6400a9a0:	pop    ebx
6400a9a1:	mov    esp,ebp
6400a9a3:	pop    ebp
6400a9a4:	ret    
6400a9a5:	xor    eax,eax
6400a9a7:	mov    ds:0x6402c3f4,eax
6400a9ac:	mov    ecx,DWORD PTR [esp+0x10]
6400a9b0:	mov    DWORD PTR fs:0x0,ecx
6400a9b7:	pop    ecx
6400a9b8:	pop    esi
6400a9b9:	pop    ebx
6400a9ba:	mov    esp,ebp
6400a9bc:	pop    ebp
6400a9bd:	ret    
6400a9be:	mov    eax,ds:0x6402c3f4
6400a9c3:	mov    ecx,DWORD PTR [esp+0x10]
6400a9c7:	mov    DWORD PTR fs:0x0,ecx
6400a9ce:	pop    ecx
6400a9cf:	pop    esi
6400a9d0:	pop    ebx
6400a9d1:	mov    esp,ebp
6400a9d3:	pop    ebp
6400a9d4:	ret    
6400a9d5:	int3   
6400a9d6:	int3   
6400a9d7:	int3   
6400a9d8:	int3   
6400a9d9:	int3   
6400a9da:	int3   
6400a9db:	int3   
6400a9dc:	int3   
6400a9dd:	int3   
6400a9de:	int3   
6400a9df:	int3   
6400a9e0:	push   ebp
6400a9e1:	mov    ebp,esp
6400a9e3:	and    esp,0xfffffff8
6400a9e6:	push   0xffffffff
6400a9e8:	push   0x6401f82e
6400a9ed:	mov    eax,fs:0x0
6400a9f3:	push   eax
6400a9f4:	push   ecx
6400a9f5:	push   ebx
6400a9f6:	push   esi
6400a9f7:	mov    eax,ds:0x64028038
6400a9fc:	xor    eax,esp
6400a9fe:	push   eax
6400a9ff:	lea    eax,[esp+0x10]
6400aa03:	mov    fs:0x0,eax
6400aa09:	mov    ebx,0x1
6400aa0e:	test   BYTE PTR ds:0x6402c3f0,bl
6400aa14:	jne    0x6400aa9e
6400aa1a:	or     DWORD PTR ds:0x6402c3f0,ebx
6400aa20:	push   0x64023f3c
6400aa25:	push   0xb
6400aa27:	push   0x64023f60
6400aa2c:	mov    DWORD PTR [esp+0x24],0x0
6400aa34:	call   0x64003970
6400aa39:	push   0x64023f6c
6400aa3e:	push   0x8
6400aa40:	push   0x64023db8
6400aa45:	mov    esi,eax
6400aa47:	call   0x64003b70
6400aa4c:	add    esp,0x18
6400aa4f:	push   eax
6400aa50:	call   DWORD PTR ds:0x64021018
6400aa56:	add    DWORD PTR ds:0x6402c210,ebx
6400aa5c:	test   eax,eax
6400aa5e:	je     0x6400aa85
6400aa60:	push   esi
6400aa61:	push   eax
6400aa62:	call   DWORD PTR ds:0x64021014
6400aa68:	add    DWORD PTR ds:0x6402c214,ebx
6400aa6e:	mov    ds:0x6402c3ec,eax
6400aa73:	mov    ecx,DWORD PTR [esp+0x10]
6400aa77:	mov    DWORD PTR fs:0x0,ecx
6400aa7e:	pop    ecx
6400aa7f:	pop    esi
6400aa80:	pop    ebx
6400aa81:	mov    esp,ebp
6400aa83:	pop    ebp
6400aa84:	ret    
6400aa85:	xor    eax,eax
6400aa87:	mov    ds:0x6402c3ec,eax
6400aa8c:	mov    ecx,DWORD PTR [esp+0x10]
6400aa90:	mov    DWORD PTR fs:0x0,ecx
6400aa97:	pop    ecx
6400aa98:	pop    esi
6400aa99:	pop    ebx
6400aa9a:	mov    esp,ebp
6400aa9c:	pop    ebp
6400aa9d:	ret    
6400aa9e:	mov    eax,ds:0x6402c3ec
6400aaa3:	mov    ecx,DWORD PTR [esp+0x10]
6400aaa7:	mov    DWORD PTR fs:0x0,ecx
6400aaae:	pop    ecx
6400aaaf:	pop    esi
6400aab0:	pop    ebx
6400aab1:	mov    esp,ebp
6400aab3:	pop    ebp
6400aab4:	ret    
6400aab5:	int3   
6400aab6:	int3   
6400aab7:	int3   
6400aab8:	int3   
6400aab9:	int3   
6400aaba:	int3   
6400aabb:	int3   
6400aabc:	int3   
6400aabd:	int3   
6400aabe:	int3   
6400aabf:	int3   
6400aac0:	push   ebp
6400aac1:	mov    ebp,esp
6400aac3:	and    esp,0xfffffff8
6400aac6:	push   0xffffffff
6400aac8:	push   0x6401f7fe
6400aacd:	mov    eax,fs:0x0
6400aad3:	push   eax
6400aad4:	push   ecx
6400aad5:	push   ebx
6400aad6:	push   esi
6400aad7:	mov    eax,ds:0x64028038
6400aadc:	xor    eax,esp
6400aade:	push   eax
6400aadf:	lea    eax,[esp+0x10]
6400aae3:	mov    fs:0x0,eax
6400aae9:	mov    ebx,0x1
6400aaee:	test   BYTE PTR ds:0x6402c3e8,bl
6400aaf4:	jne    0x6400ab7e
6400aafa:	or     DWORD PTR ds:0x6402c3e8,ebx
6400ab00:	push   0x64023f94
6400ab05:	push   0xc
6400ab07:	push   0x64023fd0
6400ab0c:	mov    DWORD PTR [esp+0x24],0x0
6400ab14:	call   0x64003970
6400ab19:	push   0x64023fe0
6400ab1e:	push   0x8
6400ab20:	push   0x64023db8
6400ab25:	mov    esi,eax
6400ab27:	call   0x64003b70
6400ab2c:	add    esp,0x18
6400ab2f:	push   eax
6400ab30:	call   DWORD PTR ds:0x64021018
6400ab36:	add    DWORD PTR ds:0x6402c210,ebx
6400ab3c:	test   eax,eax
6400ab3e:	je     0x6400ab65
6400ab40:	push   esi
6400ab41:	push   eax
6400ab42:	call   DWORD PTR ds:0x64021014
6400ab48:	add    DWORD PTR ds:0x6402c214,ebx
6400ab4e:	mov    ds:0x6402c3e4,eax
6400ab53:	mov    ecx,DWORD PTR [esp+0x10]
6400ab57:	mov    DWORD PTR fs:0x0,ecx
6400ab5e:	pop    ecx
6400ab5f:	pop    esi
6400ab60:	pop    ebx
6400ab61:	mov    esp,ebp
6400ab63:	pop    ebp
6400ab64:	ret    
6400ab65:	xor    eax,eax
6400ab67:	mov    ds:0x6402c3e4,eax
6400ab6c:	mov    ecx,DWORD PTR [esp+0x10]
6400ab70:	mov    DWORD PTR fs:0x0,ecx
6400ab77:	pop    ecx
6400ab78:	pop    esi
6400ab79:	pop    ebx
6400ab7a:	mov    esp,ebp
6400ab7c:	pop    ebp
6400ab7d:	ret    
6400ab7e:	mov    eax,ds:0x6402c3e4
6400ab83:	mov    ecx,DWORD PTR [esp+0x10]
6400ab87:	mov    DWORD PTR fs:0x0,ecx
6400ab8e:	pop    ecx
6400ab8f:	pop    esi
6400ab90:	pop    ebx
6400ab91:	mov    esp,ebp
6400ab93:	pop    ebp
6400ab94:	ret    
6400ab95:	int3   
6400ab96:	int3   
6400ab97:	int3   
6400ab98:	int3   
6400ab99:	int3   
6400ab9a:	int3   
6400ab9b:	int3   
6400ab9c:	int3   
6400ab9d:	int3   
6400ab9e:	int3   
6400ab9f:	int3   
6400aba0:	push   ebp
6400aba1:	mov    ebp,esp
6400aba3:	and    esp,0xfffffff8
6400aba6:	push   0xffffffff
6400aba8:	push   0x6401f7ce
6400abad:	mov    eax,fs:0x0
6400abb3:	push   eax
6400abb4:	push   ecx
6400abb5:	push   ebx
6400abb6:	push   esi
6400abb7:	mov    eax,ds:0x64028038
6400abbc:	xor    eax,esp
6400abbe:	push   eax
6400abbf:	lea    eax,[esp+0x10]
6400abc3:	mov    fs:0x0,eax
6400abc9:	mov    ebx,0x1
6400abce:	test   BYTE PTR ds:0x6402c3e0,bl
6400abd4:	jne    0x6400ac5e
6400abda:	or     DWORD PTR ds:0x6402c3e0,ebx
6400abe0:	push   0x64024008
6400abe5:	push   0x10
6400abe7:	push   0x6402403c
6400abec:	mov    DWORD PTR [esp+0x24],0x0
6400abf4:	call   0x64003970
6400abf9:	push   0x64024050
6400abfe:	push   0x8
6400ac00:	push   0x64023db8
6400ac05:	mov    esi,eax
6400ac07:	call   0x64003b70
6400ac0c:	add    esp,0x18
6400ac0f:	push   eax
6400ac10:	call   DWORD PTR ds:0x64021018
6400ac16:	add    DWORD PTR ds:0x6402c210,ebx
6400ac1c:	test   eax,eax
6400ac1e:	je     0x6400ac45
6400ac20:	push   esi
6400ac21:	push   eax
6400ac22:	call   DWORD PTR ds:0x64021014
6400ac28:	add    DWORD PTR ds:0x6402c214,ebx
6400ac2e:	mov    ds:0x6402c3dc,eax
6400ac33:	mov    ecx,DWORD PTR [esp+0x10]
6400ac37:	mov    DWORD PTR fs:0x0,ecx
6400ac3e:	pop    ecx
6400ac3f:	pop    esi
6400ac40:	pop    ebx
6400ac41:	mov    esp,ebp
6400ac43:	pop    ebp
6400ac44:	ret    
6400ac45:	xor    eax,eax
6400ac47:	mov    ds:0x6402c3dc,eax
6400ac4c:	mov    ecx,DWORD PTR [esp+0x10]
6400ac50:	mov    DWORD PTR fs:0x0,ecx
6400ac57:	pop    ecx
6400ac58:	pop    esi
6400ac59:	pop    ebx
6400ac5a:	mov    esp,ebp
6400ac5c:	pop    ebp
6400ac5d:	ret    
6400ac5e:	mov    eax,ds:0x6402c3dc
6400ac63:	mov    ecx,DWORD PTR [esp+0x10]
6400ac67:	mov    DWORD PTR fs:0x0,ecx
6400ac6e:	pop    ecx
6400ac6f:	pop    esi
6400ac70:	pop    ebx
6400ac71:	mov    esp,ebp
6400ac73:	pop    ebp
6400ac74:	ret    
6400ac75:	int3   
6400ac76:	int3   
6400ac77:	int3   
6400ac78:	int3   
6400ac79:	int3   
6400ac7a:	int3   
6400ac7b:	int3   
6400ac7c:	int3   
6400ac7d:	int3   
6400ac7e:	int3   
6400ac7f:	int3   
6400ac80:	push   ebp
6400ac81:	mov    ebp,esp
6400ac83:	and    esp,0xfffffff8
6400ac86:	push   0xffffffff
6400ac88:	push   0x6401f79e
6400ac8d:	mov    eax,fs:0x0
6400ac93:	push   eax
6400ac94:	push   ecx
6400ac95:	push   ebx
6400ac96:	push   esi
6400ac97:	mov    eax,ds:0x64028038
6400ac9c:	xor    eax,esp
6400ac9e:	push   eax
6400ac9f:	lea    eax,[esp+0x10]
6400aca3:	mov    fs:0x0,eax
6400aca9:	mov    ebx,0x1
6400acae:	test   BYTE PTR ds:0x6402c3d8,bl
6400acb4:	jne    0x6400ad3e
6400acba:	or     DWORD PTR ds:0x6402c3d8,ebx
6400acc0:	push   0x64024090
6400acc5:	push   0x10
6400acc7:	push   0x640240c4
6400accc:	mov    DWORD PTR [esp+0x24],0x0
6400acd4:	call   0x64003970
6400acd9:	push   0x640240d8
6400acde:	push   0x8
6400ace0:	push   0x64023db8
6400ace5:	mov    esi,eax
6400ace7:	call   0x64003b70
6400acec:	add    esp,0x18
6400acef:	push   eax
6400acf0:	call   DWORD PTR ds:0x64021018
6400acf6:	add    DWORD PTR ds:0x6402c210,ebx
6400acfc:	test   eax,eax
6400acfe:	je     0x6400ad25
6400ad00:	push   esi
6400ad01:	push   eax
6400ad02:	call   DWORD PTR ds:0x64021014
6400ad08:	add    DWORD PTR ds:0x6402c214,ebx
6400ad0e:	mov    ds:0x6402c3d4,eax
6400ad13:	mov    ecx,DWORD PTR [esp+0x10]
6400ad17:	mov    DWORD PTR fs:0x0,ecx
6400ad1e:	pop    ecx
6400ad1f:	pop    esi
6400ad20:	pop    ebx
6400ad21:	mov    esp,ebp
6400ad23:	pop    ebp
6400ad24:	ret    
6400ad25:	xor    eax,eax
6400ad27:	mov    ds:0x6402c3d4,eax
6400ad2c:	mov    ecx,DWORD PTR [esp+0x10]
6400ad30:	mov    DWORD PTR fs:0x0,ecx
6400ad37:	pop    ecx
6400ad38:	pop    esi
6400ad39:	pop    ebx
6400ad3a:	mov    esp,ebp
6400ad3c:	pop    ebp
6400ad3d:	ret    
6400ad3e:	mov    eax,ds:0x6402c3d4
6400ad43:	mov    ecx,DWORD PTR [esp+0x10]
6400ad47:	mov    DWORD PTR fs:0x0,ecx
6400ad4e:	pop    ecx
6400ad4f:	pop    esi
6400ad50:	pop    ebx
6400ad51:	mov    esp,ebp
6400ad53:	pop    ebp
6400ad54:	ret    
6400ad55:	int3   
6400ad56:	int3   
6400ad57:	int3   
6400ad58:	int3   
6400ad59:	int3   
6400ad5a:	int3   
6400ad5b:	int3   
6400ad5c:	int3   
6400ad5d:	int3   
6400ad5e:	int3   
6400ad5f:	int3   
6400ad60:	push   ebp
6400ad61:	mov    ebp,esp
6400ad63:	and    esp,0xfffffff8
6400ad66:	push   0xffffffff
6400ad68:	push   0x6401f76e
6400ad6d:	mov    eax,fs:0x0
6400ad73:	push   eax
6400ad74:	push   ecx
6400ad75:	push   ebx
6400ad76:	push   esi
6400ad77:	mov    eax,ds:0x64028038
6400ad7c:	xor    eax,esp
6400ad7e:	push   eax
6400ad7f:	lea    eax,[esp+0x10]
6400ad83:	mov    fs:0x0,eax
6400ad89:	mov    ebx,0x1
6400ad8e:	test   BYTE PTR ds:0x6402c3d0,bl
6400ad94:	jne    0x6400ae1e
6400ad9a:	or     DWORD PTR ds:0x6402c3d0,ebx
6400ada0:	push   0x64024118
6400ada5:	push   0x15
6400ada7:	push   0x64024148
6400adac:	mov    DWORD PTR [esp+0x24],0x0
6400adb4:	call   0x64003970
6400adb9:	push   0x64024160
6400adbe:	push   0x8
6400adc0:	push   0x64023db8
6400adc5:	mov    esi,eax
6400adc7:	call   0x64003b70
6400adcc:	add    esp,0x18
6400adcf:	push   eax
6400add0:	call   DWORD PTR ds:0x64021018
6400add6:	add    DWORD PTR ds:0x6402c210,ebx
6400addc:	test   eax,eax
6400adde:	je     0x6400ae05
6400ade0:	push   esi
6400ade1:	push   eax
6400ade2:	call   DWORD PTR ds:0x64021014
6400ade8:	add    DWORD PTR ds:0x6402c214,ebx
6400adee:	mov    ds:0x6402c3cc,eax
6400adf3:	mov    ecx,DWORD PTR [esp+0x10]
6400adf7:	mov    DWORD PTR fs:0x0,ecx
6400adfe:	pop    ecx
6400adff:	pop    esi
6400ae00:	pop    ebx
6400ae01:	mov    esp,ebp
6400ae03:	pop    ebp
6400ae04:	ret    
6400ae05:	xor    eax,eax
6400ae07:	mov    ds:0x6402c3cc,eax
6400ae0c:	mov    ecx,DWORD PTR [esp+0x10]
6400ae10:	mov    DWORD PTR fs:0x0,ecx
6400ae17:	pop    ecx
6400ae18:	pop    esi
6400ae19:	pop    ebx
6400ae1a:	mov    esp,ebp
6400ae1c:	pop    ebp
6400ae1d:	ret    
6400ae1e:	mov    eax,ds:0x6402c3cc
6400ae23:	mov    ecx,DWORD PTR [esp+0x10]
6400ae27:	mov    DWORD PTR fs:0x0,ecx
6400ae2e:	pop    ecx
6400ae2f:	pop    esi
6400ae30:	pop    ebx
6400ae31:	mov    esp,ebp
6400ae33:	pop    ebp
6400ae34:	ret    
6400ae35:	int3   
6400ae36:	int3   
6400ae37:	int3   
6400ae38:	int3   
6400ae39:	int3   
6400ae3a:	int3   
6400ae3b:	int3   
6400ae3c:	int3   
6400ae3d:	int3   
6400ae3e:	int3   
6400ae3f:	int3   
6400ae40:	push   ebp
6400ae41:	mov    ebp,esp
6400ae43:	and    esp,0xfffffff8
6400ae46:	push   0xffffffff
6400ae48:	push   0x6401f73e
6400ae4d:	mov    eax,fs:0x0
6400ae53:	push   eax
6400ae54:	push   ecx
6400ae55:	push   ebx
6400ae56:	push   esi
6400ae57:	mov    eax,ds:0x64028038
6400ae5c:	xor    eax,esp
6400ae5e:	push   eax
6400ae5f:	lea    eax,[esp+0x10]
6400ae63:	mov    fs:0x0,eax
6400ae69:	mov    ebx,0x1
6400ae6e:	test   BYTE PTR ds:0x6402c3c8,bl
6400ae74:	jne    0x6400aefe
6400ae7a:	or     DWORD PTR ds:0x6402c3c8,ebx
6400ae80:	push   0x640241a0
6400ae85:	push   0x18
6400ae87:	push   0x640241e0
6400ae8c:	mov    DWORD PTR [esp+0x24],0x0
6400ae94:	call   0x64003970
6400ae99:	push   0x640241fc
6400ae9e:	push   0x8
6400aea0:	push   0x64023db8
6400aea5:	mov    esi,eax
6400aea7:	call   0x64003b70
6400aeac:	add    esp,0x18
6400aeaf:	push   eax
6400aeb0:	call   DWORD PTR ds:0x64021018
6400aeb6:	add    DWORD PTR ds:0x6402c210,ebx
6400aebc:	test   eax,eax
6400aebe:	je     0x6400aee5
6400aec0:	push   esi
6400aec1:	push   eax
6400aec2:	call   DWORD PTR ds:0x64021014
6400aec8:	add    DWORD PTR ds:0x6402c214,ebx
6400aece:	mov    ds:0x6402c3c4,eax
6400aed3:	mov    ecx,DWORD PTR [esp+0x10]
6400aed7:	mov    DWORD PTR fs:0x0,ecx
6400aede:	pop    ecx
6400aedf:	pop    esi
6400aee0:	pop    ebx
6400aee1:	mov    esp,ebp
6400aee3:	pop    ebp
6400aee4:	ret    
6400aee5:	xor    eax,eax
6400aee7:	mov    ds:0x6402c3c4,eax
6400aeec:	mov    ecx,DWORD PTR [esp+0x10]
6400aef0:	mov    DWORD PTR fs:0x0,ecx
6400aef7:	pop    ecx
6400aef8:	pop    esi
6400aef9:	pop    ebx
6400aefa:	mov    esp,ebp
6400aefc:	pop    ebp
6400aefd:	ret    
6400aefe:	mov    eax,ds:0x6402c3c4
6400af03:	mov    ecx,DWORD PTR [esp+0x10]
6400af07:	mov    DWORD PTR fs:0x0,ecx
6400af0e:	pop    ecx
6400af0f:	pop    esi
6400af10:	pop    ebx
6400af11:	mov    esp,ebp
6400af13:	pop    ebp
6400af14:	ret    
6400af15:	int3   
6400af16:	int3   
6400af17:	int3   
6400af18:	int3   
6400af19:	int3   
6400af1a:	int3   
6400af1b:	int3   
6400af1c:	int3   
6400af1d:	int3   
6400af1e:	int3   
6400af1f:	int3   
6400af20:	push   ebp
6400af21:	mov    ebp,esp
6400af23:	and    esp,0xfffffff8
6400af26:	push   0xffffffff
6400af28:	push   0x6401f70e
6400af2d:	mov    eax,fs:0x0
6400af33:	push   eax
6400af34:	push   ecx
6400af35:	push   ebx
6400af36:	push   esi
6400af37:	mov    eax,ds:0x64028038
6400af3c:	xor    eax,esp
6400af3e:	push   eax
6400af3f:	lea    eax,[esp+0x10]
6400af43:	mov    fs:0x0,eax
6400af49:	mov    ebx,0x1
6400af4e:	test   BYTE PTR ds:0x6402c3c0,bl
6400af54:	jne    0x6400afde
6400af5a:	or     DWORD PTR ds:0x6402c3c0,ebx
6400af60:	push   0x64024220
6400af65:	push   0xf
6400af67:	push   0x64024244
6400af6c:	mov    DWORD PTR [esp+0x24],0x0
6400af74:	call   0x64003970
6400af79:	push   0x64024254
6400af7e:	push   0x8
6400af80:	push   0x64023db8
6400af85:	mov    esi,eax
6400af87:	call   0x64003b70
6400af8c:	add    esp,0x18
6400af8f:	push   eax
6400af90:	call   DWORD PTR ds:0x64021018
6400af96:	add    DWORD PTR ds:0x6402c210,ebx
6400af9c:	test   eax,eax
6400af9e:	je     0x6400afc5
6400afa0:	push   esi
6400afa1:	push   eax
6400afa2:	call   DWORD PTR ds:0x64021014
6400afa8:	add    DWORD PTR ds:0x6402c214,ebx
6400afae:	mov    ds:0x6402c3bc,eax
6400afb3:	mov    ecx,DWORD PTR [esp+0x10]
6400afb7:	mov    DWORD PTR fs:0x0,ecx
6400afbe:	pop    ecx
6400afbf:	pop    esi
6400afc0:	pop    ebx
6400afc1:	mov    esp,ebp
6400afc3:	pop    ebp
6400afc4:	ret    
6400afc5:	xor    eax,eax
6400afc7:	mov    ds:0x6402c3bc,eax
6400afcc:	mov    ecx,DWORD PTR [esp+0x10]
6400afd0:	mov    DWORD PTR fs:0x0,ecx
6400afd7:	pop    ecx
6400afd8:	pop    esi
6400afd9:	pop    ebx
6400afda:	mov    esp,ebp
6400afdc:	pop    ebp
6400afdd:	ret    
6400afde:	mov    eax,ds:0x6402c3bc
6400afe3:	mov    ecx,DWORD PTR [esp+0x10]
6400afe7:	mov    DWORD PTR fs:0x0,ecx
6400afee:	pop    ecx
6400afef:	pop    esi
6400aff0:	pop    ebx
6400aff1:	mov    esp,ebp
6400aff3:	pop    ebp
6400aff4:	ret    
6400aff5:	int3   
6400aff6:	int3   
6400aff7:	int3   
6400aff8:	int3   
6400aff9:	int3   
6400affa:	int3   
6400affb:	int3   
6400affc:	int3   
6400affd:	int3   
6400affe:	int3   
6400afff:	int3   
6400b000:	push   ebp
6400b001:	mov    ebp,esp
6400b003:	and    esp,0xfffffff8
6400b006:	push   0xffffffff
6400b008:	push   0x6401f6de
6400b00d:	mov    eax,fs:0x0
6400b013:	push   eax
6400b014:	push   ecx
6400b015:	push   ebx
6400b016:	push   esi
6400b017:	mov    eax,ds:0x64028038
6400b01c:	xor    eax,esp
6400b01e:	push   eax
6400b01f:	lea    eax,[esp+0x10]
6400b023:	mov    fs:0x0,eax
6400b029:	mov    ebx,0x1
6400b02e:	test   BYTE PTR ds:0x6402c3b8,bl
6400b034:	jne    0x6400b0be
6400b03a:	or     DWORD PTR ds:0x6402c3b8,ebx
6400b040:	push   0x6402428c
6400b045:	push   0x14
6400b047:	push   0x640242cc
6400b04c:	mov    DWORD PTR [esp+0x24],0x0
6400b054:	call   0x64003970
6400b059:	push   0x640242e4
6400b05e:	push   0x8
6400b060:	push   0x64023db8
6400b065:	mov    esi,eax
6400b067:	call   0x64003b70
6400b06c:	add    esp,0x18
6400b06f:	push   eax
6400b070:	call   DWORD PTR ds:0x64021018
6400b076:	add    DWORD PTR ds:0x6402c210,ebx
6400b07c:	test   eax,eax
6400b07e:	je     0x6400b0a5
6400b080:	push   esi
6400b081:	push   eax
6400b082:	call   DWORD PTR ds:0x64021014
6400b088:	add    DWORD PTR ds:0x6402c214,ebx
6400b08e:	mov    ds:0x6402c3b4,eax
6400b093:	mov    ecx,DWORD PTR [esp+0x10]
6400b097:	mov    DWORD PTR fs:0x0,ecx
6400b09e:	pop    ecx
6400b09f:	pop    esi
6400b0a0:	pop    ebx
6400b0a1:	mov    esp,ebp
6400b0a3:	pop    ebp
6400b0a4:	ret    
6400b0a5:	xor    eax,eax
6400b0a7:	mov    ds:0x6402c3b4,eax
6400b0ac:	mov    ecx,DWORD PTR [esp+0x10]
6400b0b0:	mov    DWORD PTR fs:0x0,ecx
6400b0b7:	pop    ecx
6400b0b8:	pop    esi
6400b0b9:	pop    ebx
6400b0ba:	mov    esp,ebp
6400b0bc:	pop    ebp
6400b0bd:	ret    
6400b0be:	mov    eax,ds:0x6402c3b4
6400b0c3:	mov    ecx,DWORD PTR [esp+0x10]
6400b0c7:	mov    DWORD PTR fs:0x0,ecx
6400b0ce:	pop    ecx
6400b0cf:	pop    esi
6400b0d0:	pop    ebx
6400b0d1:	mov    esp,ebp
6400b0d3:	pop    ebp
6400b0d4:	ret    
6400b0d5:	int3   
6400b0d6:	int3   
6400b0d7:	int3   
6400b0d8:	int3   
6400b0d9:	int3   
6400b0da:	int3   
6400b0db:	int3   
6400b0dc:	int3   
6400b0dd:	int3   
6400b0de:	int3   
6400b0df:	int3   
6400b0e0:	push   ebp
6400b0e1:	mov    ebp,esp
6400b0e3:	and    esp,0xfffffff8
6400b0e6:	push   0xffffffff
6400b0e8:	push   0x6401f6ae
6400b0ed:	mov    eax,fs:0x0
6400b0f3:	push   eax
6400b0f4:	push   ecx
6400b0f5:	push   ebx
6400b0f6:	push   esi
6400b0f7:	mov    eax,ds:0x64028038
6400b0fc:	xor    eax,esp
6400b0fe:	push   eax
6400b0ff:	lea    eax,[esp+0x10]
6400b103:	mov    fs:0x0,eax
6400b109:	mov    ebx,0x1
6400b10e:	test   BYTE PTR ds:0x6402c3b0,bl
6400b114:	jne    0x6400b19e
6400b11a:	or     DWORD PTR ds:0x6402c3b0,ebx
6400b120:	push   0x64024314
6400b125:	push   0x14
6400b127:	push   0x64024348
6400b12c:	mov    DWORD PTR [esp+0x24],0x0
6400b134:	call   0x64003970
6400b139:	push   0x64024360
6400b13e:	push   0x8
6400b140:	push   0x64023db8
6400b145:	mov    esi,eax
6400b147:	call   0x64003b70
6400b14c:	add    esp,0x18
6400b14f:	push   eax
6400b150:	call   DWORD PTR ds:0x64021018
6400b156:	add    DWORD PTR ds:0x6402c210,ebx
6400b15c:	test   eax,eax
6400b15e:	je     0x6400b185
6400b160:	push   esi
6400b161:	push   eax
6400b162:	call   DWORD PTR ds:0x64021014
6400b168:	add    DWORD PTR ds:0x6402c214,ebx
6400b16e:	mov    ds:0x6402c3ac,eax
6400b173:	mov    ecx,DWORD PTR [esp+0x10]
6400b177:	mov    DWORD PTR fs:0x0,ecx
6400b17e:	pop    ecx
6400b17f:	pop    esi
6400b180:	pop    ebx
6400b181:	mov    esp,ebp
6400b183:	pop    ebp
6400b184:	ret    
6400b185:	xor    eax,eax
6400b187:	mov    ds:0x6402c3ac,eax
6400b18c:	mov    ecx,DWORD PTR [esp+0x10]
6400b190:	mov    DWORD PTR fs:0x0,ecx
6400b197:	pop    ecx
6400b198:	pop    esi
6400b199:	pop    ebx
6400b19a:	mov    esp,ebp
6400b19c:	pop    ebp
6400b19d:	ret    
6400b19e:	mov    eax,ds:0x6402c3ac
6400b1a3:	mov    ecx,DWORD PTR [esp+0x10]
6400b1a7:	mov    DWORD PTR fs:0x0,ecx
6400b1ae:	pop    ecx
6400b1af:	pop    esi
6400b1b0:	pop    ebx
6400b1b1:	mov    esp,ebp
6400b1b3:	pop    ebp
6400b1b4:	ret    
6400b1b5:	int3   
6400b1b6:	int3   
6400b1b7:	int3   
6400b1b8:	int3   
6400b1b9:	int3   
6400b1ba:	int3   
6400b1bb:	int3   
6400b1bc:	int3   
6400b1bd:	int3   
6400b1be:	int3   
6400b1bf:	int3   
6400b1c0:	push   ebp
6400b1c1:	mov    ebp,esp
6400b1c3:	and    esp,0xfffffff8
6400b1c6:	push   0xffffffff
6400b1c8:	push   0x6401f67e
6400b1cd:	mov    eax,fs:0x0
6400b1d3:	push   eax
6400b1d4:	push   ecx
6400b1d5:	push   ebx
6400b1d6:	push   esi
6400b1d7:	mov    eax,ds:0x64028038
6400b1dc:	xor    eax,esp
6400b1de:	push   eax
6400b1df:	lea    eax,[esp+0x10]
6400b1e3:	mov    fs:0x0,eax
6400b1e9:	mov    ebx,0x1
6400b1ee:	test   BYTE PTR ds:0x6402c3a8,bl
6400b1f4:	jne    0x6400b27e
6400b1fa:	or     DWORD PTR ds:0x6402c3a8,ebx
6400b200:	push   0x6402438c
6400b205:	push   0xf
6400b207:	push   0x640243cc
6400b20c:	mov    DWORD PTR [esp+0x24],0x0
6400b214:	call   0x64003970
6400b219:	push   0x640243dc
6400b21e:	push   0x8
6400b220:	push   0x64023db8
6400b225:	mov    esi,eax
6400b227:	call   0x64003b70
6400b22c:	add    esp,0x18
6400b22f:	push   eax
6400b230:	call   DWORD PTR ds:0x64021018
6400b236:	add    DWORD PTR ds:0x6402c210,ebx
6400b23c:	test   eax,eax
6400b23e:	je     0x6400b265
6400b240:	push   esi
6400b241:	push   eax
6400b242:	call   DWORD PTR ds:0x64021014
6400b248:	add    DWORD PTR ds:0x6402c214,ebx
6400b24e:	mov    ds:0x6402c3a4,eax
6400b253:	mov    ecx,DWORD PTR [esp+0x10]
6400b257:	mov    DWORD PTR fs:0x0,ecx
6400b25e:	pop    ecx
6400b25f:	pop    esi
6400b260:	pop    ebx
6400b261:	mov    esp,ebp
6400b263:	pop    ebp
6400b264:	ret    
6400b265:	xor    eax,eax
6400b267:	mov    ds:0x6402c3a4,eax
6400b26c:	mov    ecx,DWORD PTR [esp+0x10]
6400b270:	mov    DWORD PTR fs:0x0,ecx
6400b277:	pop    ecx
6400b278:	pop    esi
6400b279:	pop    ebx
6400b27a:	mov    esp,ebp
6400b27c:	pop    ebp
6400b27d:	ret    
6400b27e:	mov    eax,ds:0x6402c3a4
6400b283:	mov    ecx,DWORD PTR [esp+0x10]
6400b287:	mov    DWORD PTR fs:0x0,ecx
6400b28e:	pop    ecx
6400b28f:	pop    esi
6400b290:	pop    ebx
6400b291:	mov    esp,ebp
6400b293:	pop    ebp
6400b294:	ret    
6400b295:	int3   
6400b296:	int3   
6400b297:	int3   
6400b298:	int3   
6400b299:	int3   
6400b29a:	int3   
6400b29b:	int3   
6400b29c:	int3   
6400b29d:	int3   
6400b29e:	int3   
6400b29f:	int3   
6400b2a0:	push   ebp
6400b2a1:	mov    ebp,esp
6400b2a3:	and    esp,0xfffffff8
6400b2a6:	push   0xffffffff
6400b2a8:	push   0x6401f64e
6400b2ad:	mov    eax,fs:0x0
6400b2b3:	push   eax
6400b2b4:	push   ecx
6400b2b5:	push   ebx
6400b2b6:	push   esi
6400b2b7:	mov    eax,ds:0x64028038
6400b2bc:	xor    eax,esp
6400b2be:	push   eax
6400b2bf:	lea    eax,[esp+0x10]
6400b2c3:	mov    fs:0x0,eax
6400b2c9:	mov    ebx,0x1
6400b2ce:	test   BYTE PTR ds:0x6402c3a0,bl
6400b2d4:	jne    0x6400b35e
6400b2da:	or     DWORD PTR ds:0x6402c3a0,ebx
6400b2e0:	push   0x64024418
6400b2e5:	push   0x12
6400b2e7:	push   0x64024458
6400b2ec:	mov    DWORD PTR [esp+0x24],0x0
6400b2f4:	call   0x64003970
6400b2f9:	push   0x6402446c
6400b2fe:	push   0x8
6400b300:	push   0x64023db8
6400b305:	mov    esi,eax
6400b307:	call   0x64003b70
6400b30c:	add    esp,0x18
6400b30f:	push   eax
6400b310:	call   DWORD PTR ds:0x64021018
6400b316:	add    DWORD PTR ds:0x6402c210,ebx
6400b31c:	test   eax,eax
6400b31e:	je     0x6400b345
6400b320:	push   esi
6400b321:	push   eax
6400b322:	call   DWORD PTR ds:0x64021014
6400b328:	add    DWORD PTR ds:0x6402c214,ebx
6400b32e:	mov    ds:0x6402c39c,eax
6400b333:	mov    ecx,DWORD PTR [esp+0x10]
6400b337:	mov    DWORD PTR fs:0x0,ecx
6400b33e:	pop    ecx
6400b33f:	pop    esi
6400b340:	pop    ebx
6400b341:	mov    esp,ebp
6400b343:	pop    ebp
6400b344:	ret    
6400b345:	xor    eax,eax
6400b347:	mov    ds:0x6402c39c,eax
6400b34c:	mov    ecx,DWORD PTR [esp+0x10]
6400b350:	mov    DWORD PTR fs:0x0,ecx
6400b357:	pop    ecx
6400b358:	pop    esi
6400b359:	pop    ebx
6400b35a:	mov    esp,ebp
6400b35c:	pop    ebp
6400b35d:	ret    
6400b35e:	mov    eax,ds:0x6402c39c
6400b363:	mov    ecx,DWORD PTR [esp+0x10]
6400b367:	mov    DWORD PTR fs:0x0,ecx
6400b36e:	pop    ecx
6400b36f:	pop    esi
6400b370:	pop    ebx
6400b371:	mov    esp,ebp
6400b373:	pop    ebp
6400b374:	ret    
6400b375:	int3   
6400b376:	int3   
6400b377:	int3   
6400b378:	int3   
6400b379:	int3   
6400b37a:	int3   
6400b37b:	int3   
6400b37c:	int3   
6400b37d:	int3   
6400b37e:	int3   
6400b37f:	int3   
6400b380:	push   ebp
6400b381:	mov    ebp,esp
6400b383:	and    esp,0xfffffff8
6400b386:	push   0xffffffff
6400b388:	push   0x6401f61e
6400b38d:	mov    eax,fs:0x0
6400b393:	push   eax
6400b394:	push   ecx
6400b395:	push   ebx
6400b396:	push   esi
6400b397:	mov    eax,ds:0x64028038
6400b39c:	xor    eax,esp
6400b39e:	push   eax
6400b39f:	lea    eax,[esp+0x10]
6400b3a3:	mov    fs:0x0,eax
6400b3a9:	mov    ebx,0x1
6400b3ae:	test   BYTE PTR ds:0x6402c398,bl
6400b3b4:	jne    0x6400b43e
6400b3ba:	or     DWORD PTR ds:0x6402c398,ebx
6400b3c0:	push   0x6402449c
6400b3c5:	push   0x11
6400b3c7:	push   0x640244c8
6400b3cc:	mov    DWORD PTR [esp+0x24],0x0
6400b3d4:	call   0x64003970
6400b3d9:	push   0x640244dc
6400b3de:	push   0x8
6400b3e0:	push   0x64023db8
6400b3e5:	mov    esi,eax
6400b3e7:	call   0x64003b70
6400b3ec:	add    esp,0x18
6400b3ef:	push   eax
6400b3f0:	call   DWORD PTR ds:0x64021018
6400b3f6:	add    DWORD PTR ds:0x6402c210,ebx
6400b3fc:	test   eax,eax
6400b3fe:	je     0x6400b425
6400b400:	push   esi
6400b401:	push   eax
6400b402:	call   DWORD PTR ds:0x64021014
6400b408:	add    DWORD PTR ds:0x6402c214,ebx
6400b40e:	mov    ds:0x6402c394,eax
6400b413:	mov    ecx,DWORD PTR [esp+0x10]
6400b417:	mov    DWORD PTR fs:0x0,ecx
6400b41e:	pop    ecx
6400b41f:	pop    esi
6400b420:	pop    ebx
6400b421:	mov    esp,ebp
6400b423:	pop    ebp
6400b424:	ret    
6400b425:	xor    eax,eax
6400b427:	mov    ds:0x6402c394,eax
6400b42c:	mov    ecx,DWORD PTR [esp+0x10]
6400b430:	mov    DWORD PTR fs:0x0,ecx
6400b437:	pop    ecx
6400b438:	pop    esi
6400b439:	pop    ebx
6400b43a:	mov    esp,ebp
6400b43c:	pop    ebp
6400b43d:	ret    
6400b43e:	mov    eax,ds:0x6402c394
6400b443:	mov    ecx,DWORD PTR [esp+0x10]
6400b447:	mov    DWORD PTR fs:0x0,ecx
6400b44e:	pop    ecx
6400b44f:	pop    esi
6400b450:	pop    ebx
6400b451:	mov    esp,ebp
6400b453:	pop    ebp
6400b454:	ret    
6400b455:	int3   
6400b456:	int3   
6400b457:	int3   
6400b458:	int3   
6400b459:	int3   
6400b45a:	int3   
6400b45b:	int3   
6400b45c:	int3   
6400b45d:	int3   
6400b45e:	int3   
6400b45f:	int3   
6400b460:	push   ebp
6400b461:	mov    ebp,esp
6400b463:	and    esp,0xfffffff8
6400b466:	push   0xffffffff
6400b468:	push   0x6401f5ee
6400b46d:	mov    eax,fs:0x0
6400b473:	push   eax
6400b474:	push   ecx
6400b475:	push   ebx
6400b476:	push   esi
6400b477:	mov    eax,ds:0x64028038
6400b47c:	xor    eax,esp
6400b47e:	push   eax
6400b47f:	lea    eax,[esp+0x10]
6400b483:	mov    fs:0x0,eax
6400b489:	mov    ebx,0x1
6400b48e:	test   BYTE PTR ds:0x6402c390,bl
6400b494:	jne    0x6400b51e
6400b49a:	or     DWORD PTR ds:0x6402c390,ebx
6400b4a0:	push   0x64024510
6400b4a5:	push   0x17
6400b4a7:	push   0x64024550
6400b4ac:	mov    DWORD PTR [esp+0x24],0x0
6400b4b4:	call   0x64003970
6400b4b9:	push   0x64024568
6400b4be:	push   0x8
6400b4c0:	push   0x640245a4
6400b4c5:	mov    esi,eax
6400b4c7:	call   0x64003b70
6400b4cc:	add    esp,0x18
6400b4cf:	push   eax
6400b4d0:	call   DWORD PTR ds:0x64021018
6400b4d6:	add    DWORD PTR ds:0x6402c210,ebx
6400b4dc:	test   eax,eax
6400b4de:	je     0x6400b505
6400b4e0:	push   esi
6400b4e1:	push   eax
6400b4e2:	call   DWORD PTR ds:0x64021014
6400b4e8:	add    DWORD PTR ds:0x6402c214,ebx
6400b4ee:	mov    ds:0x6402c38c,eax
6400b4f3:	mov    ecx,DWORD PTR [esp+0x10]
6400b4f7:	mov    DWORD PTR fs:0x0,ecx
6400b4fe:	pop    ecx
6400b4ff:	pop    esi
6400b500:	pop    ebx
6400b501:	mov    esp,ebp
6400b503:	pop    ebp
6400b504:	ret    
6400b505:	xor    eax,eax
6400b507:	mov    ds:0x6402c38c,eax
6400b50c:	mov    ecx,DWORD PTR [esp+0x10]
6400b510:	mov    DWORD PTR fs:0x0,ecx
6400b517:	pop    ecx
6400b518:	pop    esi
6400b519:	pop    ebx
6400b51a:	mov    esp,ebp
6400b51c:	pop    ebp
6400b51d:	ret    
6400b51e:	mov    eax,ds:0x6402c38c
6400b523:	mov    ecx,DWORD PTR [esp+0x10]
6400b527:	mov    DWORD PTR fs:0x0,ecx
6400b52e:	pop    ecx
6400b52f:	pop    esi
6400b530:	pop    ebx
6400b531:	mov    esp,ebp
6400b533:	pop    ebp
6400b534:	ret    
6400b535:	int3   
6400b536:	int3   
6400b537:	int3   
6400b538:	int3   
6400b539:	int3   
6400b53a:	int3   
6400b53b:	int3   
6400b53c:	int3   
6400b53d:	int3   
6400b53e:	int3   
6400b53f:	int3   
6400b540:	push   ebp
6400b541:	mov    ebp,esp
6400b543:	and    esp,0xfffffff8
6400b546:	push   0xffffffff
6400b548:	push   0x6401f5be
6400b54d:	mov    eax,fs:0x0
6400b553:	push   eax
6400b554:	push   ecx
6400b555:	push   ebx
6400b556:	push   esi
6400b557:	mov    eax,ds:0x64028038
6400b55c:	xor    eax,esp
6400b55e:	push   eax
6400b55f:	lea    eax,[esp+0x10]
6400b563:	mov    fs:0x0,eax
6400b569:	mov    ebx,0x1
6400b56e:	test   BYTE PTR ds:0x6402c388,bl
6400b574:	jne    0x6400b5fe
6400b57a:	or     DWORD PTR ds:0x6402c388,ebx
6400b580:	push   0x640245b8
6400b585:	push   0x19
6400b587:	push   0x640245dc
6400b58c:	mov    DWORD PTR [esp+0x24],0x0
6400b594:	call   0x64003970
6400b599:	push   0x640245f8
6400b59e:	push   0x7
6400b5a0:	push   0x64024620
6400b5a5:	mov    esi,eax
6400b5a7:	call   0x64003b70
6400b5ac:	add    esp,0x18
6400b5af:	push   eax
6400b5b0:	call   DWORD PTR ds:0x64021018
6400b5b6:	add    DWORD PTR ds:0x6402c210,ebx
6400b5bc:	test   eax,eax
6400b5be:	je     0x6400b5e5
6400b5c0:	push   esi
6400b5c1:	push   eax
6400b5c2:	call   DWORD PTR ds:0x64021014
6400b5c8:	add    DWORD PTR ds:0x6402c214,ebx
6400b5ce:	mov    ds:0x6402c384,eax
6400b5d3:	mov    ecx,DWORD PTR [esp+0x10]
6400b5d7:	mov    DWORD PTR fs:0x0,ecx
6400b5de:	pop    ecx
6400b5df:	pop    esi
6400b5e0:	pop    ebx
6400b5e1:	mov    esp,ebp
6400b5e3:	pop    ebp
6400b5e4:	ret    
6400b5e5:	xor    eax,eax
6400b5e7:	mov    ds:0x6402c384,eax
6400b5ec:	mov    ecx,DWORD PTR [esp+0x10]
6400b5f0:	mov    DWORD PTR fs:0x0,ecx
6400b5f7:	pop    ecx
6400b5f8:	pop    esi
6400b5f9:	pop    ebx
6400b5fa:	mov    esp,ebp
6400b5fc:	pop    ebp
6400b5fd:	ret    
6400b5fe:	mov    eax,ds:0x6402c384
6400b603:	mov    ecx,DWORD PTR [esp+0x10]
6400b607:	mov    DWORD PTR fs:0x0,ecx
6400b60e:	pop    ecx
6400b60f:	pop    esi
6400b610:	pop    ebx
6400b611:	mov    esp,ebp
6400b613:	pop    ebp
6400b614:	ret    
6400b615:	int3   
6400b616:	int3   
6400b617:	int3   
6400b618:	int3   
6400b619:	int3   
6400b61a:	int3   
6400b61b:	int3   
6400b61c:	int3   
6400b61d:	int3   
6400b61e:	int3   
6400b61f:	int3   
6400b620:	push   ebp
6400b621:	mov    ebp,esp
6400b623:	and    esp,0xfffffff8
6400b626:	push   0xffffffff
6400b628:	push   0x6401f58e
6400b62d:	mov    eax,fs:0x0
6400b633:	push   eax
6400b634:	push   ecx
6400b635:	push   ebx
6400b636:	push   esi
6400b637:	mov    eax,ds:0x64028038
6400b63c:	xor    eax,esp
6400b63e:	push   eax
6400b63f:	lea    eax,[esp+0x10]
6400b643:	mov    fs:0x0,eax
6400b649:	mov    ebx,0x1
6400b64e:	test   BYTE PTR ds:0x6402c380,bl
6400b654:	jne    0x6400b6de
6400b65a:	or     DWORD PTR ds:0x6402c380,ebx
6400b660:	push   0x64024630
6400b665:	push   0x1d
6400b667:	push   0x64024654
6400b66c:	mov    DWORD PTR [esp+0x24],0x0
6400b674:	call   0x64003970
6400b679:	push   0x64024674
6400b67e:	push   0x8
6400b680:	push   0x640246ac
6400b685:	mov    esi,eax
6400b687:	call   0x64003b70
6400b68c:	add    esp,0x18
6400b68f:	push   eax
6400b690:	call   DWORD PTR ds:0x64021018
6400b696:	add    DWORD PTR ds:0x6402c210,ebx
6400b69c:	test   eax,eax
6400b69e:	je     0x6400b6c5
6400b6a0:	push   esi
6400b6a1:	push   eax
6400b6a2:	call   DWORD PTR ds:0x64021014
6400b6a8:	add    DWORD PTR ds:0x6402c214,ebx
6400b6ae:	mov    ds:0x6402c37c,eax
6400b6b3:	mov    ecx,DWORD PTR [esp+0x10]
6400b6b7:	mov    DWORD PTR fs:0x0,ecx
6400b6be:	pop    ecx
6400b6bf:	pop    esi
6400b6c0:	pop    ebx
6400b6c1:	mov    esp,ebp
6400b6c3:	pop    ebp
6400b6c4:	ret    
6400b6c5:	xor    eax,eax
6400b6c7:	mov    ds:0x6402c37c,eax
6400b6cc:	mov    ecx,DWORD PTR [esp+0x10]
6400b6d0:	mov    DWORD PTR fs:0x0,ecx
6400b6d7:	pop    ecx
6400b6d8:	pop    esi
6400b6d9:	pop    ebx
6400b6da:	mov    esp,ebp
6400b6dc:	pop    ebp
6400b6dd:	ret    
6400b6de:	mov    eax,ds:0x6402c37c
6400b6e3:	mov    ecx,DWORD PTR [esp+0x10]
6400b6e7:	mov    DWORD PTR fs:0x0,ecx
6400b6ee:	pop    ecx
6400b6ef:	pop    esi
6400b6f0:	pop    ebx
6400b6f1:	mov    esp,ebp
6400b6f3:	pop    ebp
6400b6f4:	ret    
6400b6f5:	int3   
6400b6f6:	int3   
6400b6f7:	int3   
6400b6f8:	int3   
6400b6f9:	int3   
6400b6fa:	int3   
6400b6fb:	int3   
6400b6fc:	int3   
6400b6fd:	int3   
6400b6fe:	int3   
6400b6ff:	int3   
6400b700:	push   ebp
6400b701:	mov    ebp,esp
6400b703:	and    esp,0xfffffff8
6400b706:	push   0xffffffff
6400b708:	push   0x6401f55e
6400b70d:	mov    eax,fs:0x0
6400b713:	push   eax
6400b714:	push   ecx
6400b715:	push   ebx
6400b716:	push   esi
6400b717:	mov    eax,ds:0x64028038
6400b71c:	xor    eax,esp
6400b71e:	push   eax
6400b71f:	lea    eax,[esp+0x10]
6400b723:	mov    fs:0x0,eax
6400b729:	mov    ebx,0x1
6400b72e:	test   BYTE PTR ds:0x6402c378,bl
6400b734:	jne    0x6400b7be
6400b73a:	or     DWORD PTR ds:0x6402c378,ebx
6400b740:	push   0x640246c0
6400b745:	push   0x15
6400b747:	push   0x640246e8
6400b74c:	mov    DWORD PTR [esp+0x24],0x0
6400b754:	call   0x64003970
6400b759:	push   0x64024700
6400b75e:	push   0x8
6400b760:	push   0x640246ac
6400b765:	mov    esi,eax
6400b767:	call   0x64003b70
6400b76c:	add    esp,0x18
6400b76f:	push   eax
6400b770:	call   DWORD PTR ds:0x64021018
6400b776:	add    DWORD PTR ds:0x6402c210,ebx
6400b77c:	test   eax,eax
6400b77e:	je     0x6400b7a5
6400b780:	push   esi
6400b781:	push   eax
6400b782:	call   DWORD PTR ds:0x64021014
6400b788:	add    DWORD PTR ds:0x6402c214,ebx
6400b78e:	mov    ds:0x6402c374,eax
6400b793:	mov    ecx,DWORD PTR [esp+0x10]
6400b797:	mov    DWORD PTR fs:0x0,ecx
6400b79e:	pop    ecx
6400b79f:	pop    esi
6400b7a0:	pop    ebx
6400b7a1:	mov    esp,ebp
6400b7a3:	pop    ebp
6400b7a4:	ret    
6400b7a5:	xor    eax,eax
6400b7a7:	mov    ds:0x6402c374,eax
6400b7ac:	mov    ecx,DWORD PTR [esp+0x10]
6400b7b0:	mov    DWORD PTR fs:0x0,ecx
6400b7b7:	pop    ecx
6400b7b8:	pop    esi
6400b7b9:	pop    ebx
6400b7ba:	mov    esp,ebp
6400b7bc:	pop    ebp
6400b7bd:	ret    
6400b7be:	mov    eax,ds:0x6402c374
6400b7c3:	mov    ecx,DWORD PTR [esp+0x10]
6400b7c7:	mov    DWORD PTR fs:0x0,ecx
6400b7ce:	pop    ecx
6400b7cf:	pop    esi
6400b7d0:	pop    ebx
6400b7d1:	mov    esp,ebp
6400b7d3:	pop    ebp
6400b7d4:	ret    
6400b7d5:	int3   
6400b7d6:	int3   
6400b7d7:	int3   
6400b7d8:	int3   
6400b7d9:	int3   
6400b7da:	int3   
6400b7db:	int3   
6400b7dc:	int3   
6400b7dd:	int3   
6400b7de:	int3   
6400b7df:	int3   
6400b7e0:	push   ebp
6400b7e1:	mov    ebp,esp
6400b7e3:	and    esp,0xfffffff8
6400b7e6:	push   0xffffffff
6400b7e8:	push   0x6401f52e
6400b7ed:	mov    eax,fs:0x0
6400b7f3:	push   eax
6400b7f4:	push   ecx
6400b7f5:	push   ebx
6400b7f6:	push   esi
6400b7f7:	mov    eax,ds:0x64028038
6400b7fc:	xor    eax,esp
6400b7fe:	push   eax
6400b7ff:	lea    eax,[esp+0x10]
6400b803:	mov    fs:0x0,eax
6400b809:	mov    ebx,0x1
6400b80e:	test   BYTE PTR ds:0x6402c370,bl
6400b814:	jne    0x6400b89e
6400b81a:	or     DWORD PTR ds:0x6402c370,ebx
6400b820:	push   0x64024728
6400b825:	push   0x15
6400b827:	push   0x6402475c
6400b82c:	mov    DWORD PTR [esp+0x24],0x0
6400b834:	call   0x64003970
6400b839:	push   0x64024774
6400b83e:	push   0x8
6400b840:	push   0x640246ac
6400b845:	mov    esi,eax
6400b847:	call   0x64003b70
6400b84c:	add    esp,0x18
6400b84f:	push   eax
6400b850:	call   DWORD PTR ds:0x64021018
6400b856:	add    DWORD PTR ds:0x6402c210,ebx
6400b85c:	test   eax,eax
6400b85e:	je     0x6400b885
6400b860:	push   esi
6400b861:	push   eax
6400b862:	call   DWORD PTR ds:0x64021014
6400b868:	add    DWORD PTR ds:0x6402c214,ebx
6400b86e:	mov    ds:0x6402c36c,eax
6400b873:	mov    ecx,DWORD PTR [esp+0x10]
6400b877:	mov    DWORD PTR fs:0x0,ecx
6400b87e:	pop    ecx
6400b87f:	pop    esi
6400b880:	pop    ebx
6400b881:	mov    esp,ebp
6400b883:	pop    ebp
6400b884:	ret    
6400b885:	xor    eax,eax
6400b887:	mov    ds:0x6402c36c,eax
6400b88c:	mov    ecx,DWORD PTR [esp+0x10]
6400b890:	mov    DWORD PTR fs:0x0,ecx
6400b897:	pop    ecx
6400b898:	pop    esi
6400b899:	pop    ebx
6400b89a:	mov    esp,ebp
6400b89c:	pop    ebp
6400b89d:	ret    
6400b89e:	mov    eax,ds:0x6402c36c
6400b8a3:	mov    ecx,DWORD PTR [esp+0x10]
6400b8a7:	mov    DWORD PTR fs:0x0,ecx
6400b8ae:	pop    ecx
6400b8af:	pop    esi
6400b8b0:	pop    ebx
6400b8b1:	mov    esp,ebp
6400b8b3:	pop    ebp
6400b8b4:	ret    
6400b8b5:	int3   
6400b8b6:	int3   
6400b8b7:	int3   
6400b8b8:	int3   
6400b8b9:	int3   
6400b8ba:	int3   
6400b8bb:	int3   
6400b8bc:	int3   
6400b8bd:	int3   
6400b8be:	int3   
6400b8bf:	int3   
6400b8c0:	push   ebp
6400b8c1:	mov    ebp,esp
6400b8c3:	and    esp,0xfffffff8
6400b8c6:	push   0xffffffff
6400b8c8:	push   0x6401f4fe
6400b8cd:	mov    eax,fs:0x0
6400b8d3:	push   eax
6400b8d4:	push   ecx
6400b8d5:	push   ebx
6400b8d6:	push   esi
6400b8d7:	mov    eax,ds:0x64028038
6400b8dc:	xor    eax,esp
6400b8de:	push   eax
6400b8df:	lea    eax,[esp+0x10]
6400b8e3:	mov    fs:0x0,eax
6400b8e9:	mov    ebx,0x1
6400b8ee:	test   BYTE PTR ds:0x6402c368,bl
6400b8f4:	jne    0x6400b97e
6400b8fa:	or     DWORD PTR ds:0x6402c368,ebx
6400b900:	push   0x640247a4
6400b905:	push   0x34
6400b907:	push   0x640247e0
6400b90c:	mov    DWORD PTR [esp+0x24],0x0
6400b914:	call   0x64003970
6400b919:	push   0x64024818
6400b91e:	push   0x8
6400b920:	push   0x640246ac
6400b925:	mov    esi,eax
6400b927:	call   0x64003b70
6400b92c:	add    esp,0x18
6400b92f:	push   eax
6400b930:	call   DWORD PTR ds:0x64021018
6400b936:	add    DWORD PTR ds:0x6402c210,ebx
6400b93c:	test   eax,eax
6400b93e:	je     0x6400b965
6400b940:	push   esi
6400b941:	push   eax
6400b942:	call   DWORD PTR ds:0x64021014
6400b948:	add    DWORD PTR ds:0x6402c214,ebx
6400b94e:	mov    ds:0x6402c364,eax
6400b953:	mov    ecx,DWORD PTR [esp+0x10]
6400b957:	mov    DWORD PTR fs:0x0,ecx
6400b95e:	pop    ecx
6400b95f:	pop    esi
6400b960:	pop    ebx
6400b961:	mov    esp,ebp
6400b963:	pop    ebp
6400b964:	ret    
6400b965:	xor    eax,eax
6400b967:	mov    ds:0x6402c364,eax
6400b96c:	mov    ecx,DWORD PTR [esp+0x10]
6400b970:	mov    DWORD PTR fs:0x0,ecx
6400b977:	pop    ecx
6400b978:	pop    esi
6400b979:	pop    ebx
6400b97a:	mov    esp,ebp
6400b97c:	pop    ebp
6400b97d:	ret    
6400b97e:	mov    eax,ds:0x6402c364
6400b983:	mov    ecx,DWORD PTR [esp+0x10]
6400b987:	mov    DWORD PTR fs:0x0,ecx
6400b98e:	pop    ecx
6400b98f:	pop    esi
6400b990:	pop    ebx
6400b991:	mov    esp,ebp
6400b993:	pop    ebp
6400b994:	ret    
6400b995:	int3   
6400b996:	int3   
6400b997:	int3   
6400b998:	int3   
6400b999:	int3   
6400b99a:	int3   
6400b99b:	int3   
6400b99c:	int3   
6400b99d:	int3   
6400b99e:	int3   
6400b99f:	int3   
6400b9a0:	push   ebp
6400b9a1:	mov    ebp,esp
6400b9a3:	and    esp,0xfffffff8
6400b9a6:	push   0xffffffff
6400b9a8:	push   0x6401f4ce
6400b9ad:	mov    eax,fs:0x0
6400b9b3:	push   eax
6400b9b4:	push   ecx
6400b9b5:	push   ebx
6400b9b6:	push   esi
6400b9b7:	mov    eax,ds:0x64028038
6400b9bc:	xor    eax,esp
6400b9be:	push   eax
6400b9bf:	lea    eax,[esp+0x10]
6400b9c3:	mov    fs:0x0,eax
6400b9c9:	mov    ebx,0x1
6400b9ce:	test   BYTE PTR ds:0x6402c360,bl
6400b9d4:	jne    0x6400ba5e
6400b9da:	or     DWORD PTR ds:0x6402c360,ebx
6400b9e0:	push   0x64024840
6400b9e5:	push   0xb
6400b9e7:	push   0x64024868
6400b9ec:	mov    DWORD PTR [esp+0x24],0x0
6400b9f4:	call   0x64003970
6400b9f9:	push   0x64024874
6400b9fe:	push   0x8
6400ba00:	push   0x640246ac
6400ba05:	mov    esi,eax
6400ba07:	call   0x64003b70
6400ba0c:	add    esp,0x18
6400ba0f:	push   eax
6400ba10:	call   DWORD PTR ds:0x64021018
6400ba16:	add    DWORD PTR ds:0x6402c210,ebx
6400ba1c:	test   eax,eax
6400ba1e:	je     0x6400ba45
6400ba20:	push   esi
6400ba21:	push   eax
6400ba22:	call   DWORD PTR ds:0x64021014
6400ba28:	add    DWORD PTR ds:0x6402c214,ebx
6400ba2e:	mov    ds:0x6402c35c,eax
6400ba33:	mov    ecx,DWORD PTR [esp+0x10]
6400ba37:	mov    DWORD PTR fs:0x0,ecx
6400ba3e:	pop    ecx
6400ba3f:	pop    esi
6400ba40:	pop    ebx
6400ba41:	mov    esp,ebp
6400ba43:	pop    ebp
6400ba44:	ret    
6400ba45:	xor    eax,eax
6400ba47:	mov    ds:0x6402c35c,eax
6400ba4c:	mov    ecx,DWORD PTR [esp+0x10]
6400ba50:	mov    DWORD PTR fs:0x0,ecx
6400ba57:	pop    ecx
6400ba58:	pop    esi
6400ba59:	pop    ebx
6400ba5a:	mov    esp,ebp
6400ba5c:	pop    ebp
6400ba5d:	ret    
6400ba5e:	mov    eax,ds:0x6402c35c
6400ba63:	mov    ecx,DWORD PTR [esp+0x10]
6400ba67:	mov    DWORD PTR fs:0x0,ecx
6400ba6e:	pop    ecx
6400ba6f:	pop    esi
6400ba70:	pop    ebx
6400ba71:	mov    esp,ebp
6400ba73:	pop    ebp
6400ba74:	ret    
6400ba75:	int3   
6400ba76:	int3   
6400ba77:	int3   
6400ba78:	int3   
6400ba79:	int3   
6400ba7a:	int3   
6400ba7b:	int3   
6400ba7c:	int3   
6400ba7d:	int3   
6400ba7e:	int3   
6400ba7f:	int3   
6400ba80:	push   ebp
6400ba81:	mov    ebp,esp
6400ba83:	and    esp,0xfffffff8
6400ba86:	push   0xffffffff
6400ba88:	push   0x6401f49e
6400ba8d:	mov    eax,fs:0x0
6400ba93:	push   eax
6400ba94:	push   ecx
6400ba95:	push   ebx
6400ba96:	push   esi
6400ba97:	mov    eax,ds:0x64028038
6400ba9c:	xor    eax,esp
6400ba9e:	push   eax
6400ba9f:	lea    eax,[esp+0x10]
6400baa3:	mov    fs:0x0,eax
6400baa9:	mov    ebx,0x1
6400baae:	test   BYTE PTR ds:0x6402c358,bl
6400bab4:	jne    0x6400bb3e
6400baba:	or     DWORD PTR ds:0x6402c358,ebx
6400bac0:	push   0x640248a0
6400bac5:	push   0xd
6400bac7:	push   0x640248d4
6400bacc:	mov    DWORD PTR [esp+0x24],0x0
6400bad4:	call   0x64003970
6400bad9:	push   0x640248e4
6400bade:	push   0x8
6400bae0:	push   0x640246ac
6400bae5:	mov    esi,eax
6400bae7:	call   0x64003b70
6400baec:	add    esp,0x18
6400baef:	push   eax
6400baf0:	call   DWORD PTR ds:0x64021018
6400baf6:	add    DWORD PTR ds:0x6402c210,ebx
6400bafc:	test   eax,eax
6400bafe:	je     0x6400bb25
6400bb00:	push   esi
6400bb01:	push   eax
6400bb02:	call   DWORD PTR ds:0x64021014
6400bb08:	add    DWORD PTR ds:0x6402c214,ebx
6400bb0e:	mov    ds:0x6402c354,eax
6400bb13:	mov    ecx,DWORD PTR [esp+0x10]
6400bb17:	mov    DWORD PTR fs:0x0,ecx
6400bb1e:	pop    ecx
6400bb1f:	pop    esi
6400bb20:	pop    ebx
6400bb21:	mov    esp,ebp
6400bb23:	pop    ebp
6400bb24:	ret    
6400bb25:	xor    eax,eax
6400bb27:	mov    ds:0x6402c354,eax
6400bb2c:	mov    ecx,DWORD PTR [esp+0x10]
6400bb30:	mov    DWORD PTR fs:0x0,ecx
6400bb37:	pop    ecx
6400bb38:	pop    esi
6400bb39:	pop    ebx
6400bb3a:	mov    esp,ebp
6400bb3c:	pop    ebp
6400bb3d:	ret    
6400bb3e:	mov    eax,ds:0x6402c354
6400bb43:	mov    ecx,DWORD PTR [esp+0x10]
6400bb47:	mov    DWORD PTR fs:0x0,ecx
6400bb4e:	pop    ecx
6400bb4f:	pop    esi
6400bb50:	pop    ebx
6400bb51:	mov    esp,ebp
6400bb53:	pop    ebp
6400bb54:	ret    
6400bb55:	int3   
6400bb56:	int3   
6400bb57:	int3   
6400bb58:	int3   
6400bb59:	int3   
6400bb5a:	int3   
6400bb5b:	int3   
6400bb5c:	int3   
6400bb5d:	int3   
6400bb5e:	int3   
6400bb5f:	int3   
6400bb60:	push   ebp
6400bb61:	mov    ebp,esp
6400bb63:	and    esp,0xfffffff8
6400bb66:	push   0xffffffff
6400bb68:	push   0x6401f46e
6400bb6d:	mov    eax,fs:0x0
6400bb73:	push   eax
6400bb74:	push   ecx
6400bb75:	push   ebx
6400bb76:	push   esi
6400bb77:	mov    eax,ds:0x64028038
6400bb7c:	xor    eax,esp
6400bb7e:	push   eax
6400bb7f:	lea    eax,[esp+0x10]
6400bb83:	mov    fs:0x0,eax
6400bb89:	mov    ebx,0x1
6400bb8e:	test   BYTE PTR ds:0x6402c350,bl
6400bb94:	jne    0x6400bc1e
6400bb9a:	or     DWORD PTR ds:0x6402c350,ebx
6400bba0:	push   0x64024924
6400bba5:	push   0xe
6400bba7:	push   0x64024960
6400bbac:	mov    DWORD PTR [esp+0x24],0x0
6400bbb4:	call   0x64003970
6400bbb9:	push   0x64024970
6400bbbe:	push   0x8
6400bbc0:	push   0x640246ac
6400bbc5:	mov    esi,eax
6400bbc7:	call   0x64003b70
6400bbcc:	add    esp,0x18
6400bbcf:	push   eax
6400bbd0:	call   DWORD PTR ds:0x64021018
6400bbd6:	add    DWORD PTR ds:0x6402c210,ebx
6400bbdc:	test   eax,eax
6400bbde:	je     0x6400bc05
6400bbe0:	push   esi
6400bbe1:	push   eax
6400bbe2:	call   DWORD PTR ds:0x64021014
6400bbe8:	add    DWORD PTR ds:0x6402c214,ebx
6400bbee:	mov    ds:0x6402c34c,eax
6400bbf3:	mov    ecx,DWORD PTR [esp+0x10]
6400bbf7:	mov    DWORD PTR fs:0x0,ecx
6400bbfe:	pop    ecx
6400bbff:	pop    esi
6400bc00:	pop    ebx
6400bc01:	mov    esp,ebp
6400bc03:	pop    ebp
6400bc04:	ret    
6400bc05:	xor    eax,eax
6400bc07:	mov    ds:0x6402c34c,eax
6400bc0c:	mov    ecx,DWORD PTR [esp+0x10]
6400bc10:	mov    DWORD PTR fs:0x0,ecx
6400bc17:	pop    ecx
6400bc18:	pop    esi
6400bc19:	pop    ebx
6400bc1a:	mov    esp,ebp
6400bc1c:	pop    ebp
6400bc1d:	ret    
6400bc1e:	mov    eax,ds:0x6402c34c
6400bc23:	mov    ecx,DWORD PTR [esp+0x10]
6400bc27:	mov    DWORD PTR fs:0x0,ecx
6400bc2e:	pop    ecx
6400bc2f:	pop    esi
6400bc30:	pop    ebx
6400bc31:	mov    esp,ebp
6400bc33:	pop    ebp
6400bc34:	ret    
6400bc35:	int3   
6400bc36:	int3   
6400bc37:	int3   
6400bc38:	int3   
6400bc39:	int3   
6400bc3a:	int3   
6400bc3b:	int3   
6400bc3c:	int3   
6400bc3d:	int3   
6400bc3e:	int3   
6400bc3f:	int3   
6400bc40:	push   ebp
6400bc41:	mov    ebp,esp
6400bc43:	and    esp,0xfffffff8
6400bc46:	push   0xffffffff
6400bc48:	push   0x6401f43e
6400bc4d:	mov    eax,fs:0x0
6400bc53:	push   eax
6400bc54:	push   ecx
6400bc55:	push   ebx
6400bc56:	push   esi
6400bc57:	mov    eax,ds:0x64028038
6400bc5c:	xor    eax,esp
6400bc5e:	push   eax
6400bc5f:	lea    eax,[esp+0x10]
6400bc63:	mov    fs:0x0,eax
6400bc69:	mov    ebx,0x1
6400bc6e:	test   BYTE PTR ds:0x6402c348,bl
6400bc74:	jne    0x6400bcfe
6400bc7a:	or     DWORD PTR ds:0x6402c348,ebx
6400bc80:	push   0x640249a8
6400bc85:	push   0x14
6400bc87:	push   0x640249e8
6400bc8c:	mov    DWORD PTR [esp+0x24],0x0
6400bc94:	call   0x64003970
6400bc99:	push   0x64024a00
6400bc9e:	push   0x8
6400bca0:	push   0x640246ac
6400bca5:	mov    esi,eax
6400bca7:	call   0x64003b70
6400bcac:	add    esp,0x18
6400bcaf:	push   eax
6400bcb0:	call   DWORD PTR ds:0x64021018
6400bcb6:	add    DWORD PTR ds:0x6402c210,ebx
6400bcbc:	test   eax,eax
6400bcbe:	je     0x6400bce5
6400bcc0:	push   esi
6400bcc1:	push   eax
6400bcc2:	call   DWORD PTR ds:0x64021014
6400bcc8:	add    DWORD PTR ds:0x6402c214,ebx
6400bcce:	mov    ds:0x6402c344,eax
6400bcd3:	mov    ecx,DWORD PTR [esp+0x10]
6400bcd7:	mov    DWORD PTR fs:0x0,ecx
6400bcde:	pop    ecx
6400bcdf:	pop    esi
6400bce0:	pop    ebx
6400bce1:	mov    esp,ebp
6400bce3:	pop    ebp
6400bce4:	ret    
6400bce5:	xor    eax,eax
6400bce7:	mov    ds:0x6402c344,eax
6400bcec:	mov    ecx,DWORD PTR [esp+0x10]
6400bcf0:	mov    DWORD PTR fs:0x0,ecx
6400bcf7:	pop    ecx
6400bcf8:	pop    esi
6400bcf9:	pop    ebx
6400bcfa:	mov    esp,ebp
6400bcfc:	pop    ebp
6400bcfd:	ret    
6400bcfe:	mov    eax,ds:0x6402c344
6400bd03:	mov    ecx,DWORD PTR [esp+0x10]
6400bd07:	mov    DWORD PTR fs:0x0,ecx
6400bd0e:	pop    ecx
6400bd0f:	pop    esi
6400bd10:	pop    ebx
6400bd11:	mov    esp,ebp
6400bd13:	pop    ebp
6400bd14:	ret    
6400bd15:	int3   
6400bd16:	int3   
6400bd17:	int3   
6400bd18:	int3   
6400bd19:	int3   
6400bd1a:	int3   
6400bd1b:	int3   
6400bd1c:	int3   
6400bd1d:	int3   
6400bd1e:	int3   
6400bd1f:	int3   
6400bd20:	push   ebp
6400bd21:	mov    ebp,esp
6400bd23:	and    esp,0xfffffff8
6400bd26:	push   0xffffffff
6400bd28:	push   0x6401f40e
6400bd2d:	mov    eax,fs:0x0
6400bd33:	push   eax
6400bd34:	push   ecx
6400bd35:	push   ebx
6400bd36:	push   esi
6400bd37:	mov    eax,ds:0x64028038
6400bd3c:	xor    eax,esp
6400bd3e:	push   eax
6400bd3f:	lea    eax,[esp+0x10]
6400bd43:	mov    fs:0x0,eax
6400bd49:	mov    ebx,0x1
6400bd4e:	test   BYTE PTR ds:0x6402c340,bl
6400bd54:	jne    0x6400bdde
6400bd5a:	or     DWORD PTR ds:0x6402c340,ebx
6400bd60:	push   0x64024a28
6400bd65:	push   0xd
6400bd67:	push   0x64024a50
6400bd6c:	mov    DWORD PTR [esp+0x24],0x0
6400bd74:	call   0x64003970
6400bd79:	push   0x64024a60
6400bd7e:	push   0x8
6400bd80:	push   0x640246ac
6400bd85:	mov    esi,eax
6400bd87:	call   0x64003b70
6400bd8c:	add    esp,0x18
6400bd8f:	push   eax
6400bd90:	call   DWORD PTR ds:0x64021018
6400bd96:	add    DWORD PTR ds:0x6402c210,ebx
6400bd9c:	test   eax,eax
6400bd9e:	je     0x6400bdc5
6400bda0:	push   esi
6400bda1:	push   eax
6400bda2:	call   DWORD PTR ds:0x64021014
6400bda8:	add    DWORD PTR ds:0x6402c214,ebx
6400bdae:	mov    ds:0x6402c33c,eax
6400bdb3:	mov    ecx,DWORD PTR [esp+0x10]
6400bdb7:	mov    DWORD PTR fs:0x0,ecx
6400bdbe:	pop    ecx
6400bdbf:	pop    esi
6400bdc0:	pop    ebx
6400bdc1:	mov    esp,ebp
6400bdc3:	pop    ebp
6400bdc4:	ret    
6400bdc5:	xor    eax,eax
6400bdc7:	mov    ds:0x6402c33c,eax
6400bdcc:	mov    ecx,DWORD PTR [esp+0x10]
6400bdd0:	mov    DWORD PTR fs:0x0,ecx
6400bdd7:	pop    ecx
6400bdd8:	pop    esi
6400bdd9:	pop    ebx
6400bdda:	mov    esp,ebp
6400bddc:	pop    ebp
6400bddd:	ret    
6400bdde:	mov    eax,ds:0x6402c33c
6400bde3:	mov    ecx,DWORD PTR [esp+0x10]
6400bde7:	mov    DWORD PTR fs:0x0,ecx
6400bdee:	pop    ecx
6400bdef:	pop    esi
6400bdf0:	pop    ebx
6400bdf1:	mov    esp,ebp
6400bdf3:	pop    ebp
6400bdf4:	ret    
6400bdf5:	int3   
6400bdf6:	int3   
6400bdf7:	int3   
6400bdf8:	int3   
6400bdf9:	int3   
6400bdfa:	int3   
6400bdfb:	int3   
6400bdfc:	int3   
6400bdfd:	int3   
6400bdfe:	int3   
6400bdff:	int3   
6400be00:	push   ebp
6400be01:	mov    ebp,esp
6400be03:	and    esp,0xfffffff8
6400be06:	push   0xffffffff
6400be08:	push   0x6401f3de
6400be0d:	mov    eax,fs:0x0
6400be13:	push   eax
6400be14:	push   ecx
6400be15:	push   ebx
6400be16:	push   esi
6400be17:	mov    eax,ds:0x64028038
6400be1c:	xor    eax,esp
6400be1e:	push   eax
6400be1f:	lea    eax,[esp+0x10]
6400be23:	mov    fs:0x0,eax
6400be29:	mov    ebx,0x1
6400be2e:	test   BYTE PTR ds:0x6402c338,bl
6400be34:	jne    0x6400bebe
6400be3a:	or     DWORD PTR ds:0x6402c338,ebx
6400be40:	push   0x64024aa0
6400be45:	push   0xe
6400be47:	push   0x64024adc
6400be4c:	mov    DWORD PTR [esp+0x24],0x0
6400be54:	call   0x64003970
6400be59:	push   0x64024aec
6400be5e:	push   0x8
6400be60:	push   0x640246ac
6400be65:	mov    esi,eax
6400be67:	call   0x64003b70
6400be6c:	add    esp,0x18
6400be6f:	push   eax
6400be70:	call   DWORD PTR ds:0x64021018
6400be76:	add    DWORD PTR ds:0x6402c210,ebx
6400be7c:	test   eax,eax
6400be7e:	je     0x6400bea5
6400be80:	push   esi
6400be81:	push   eax
6400be82:	call   DWORD PTR ds:0x64021014
6400be88:	add    DWORD PTR ds:0x6402c214,ebx
6400be8e:	mov    ds:0x6402c334,eax
6400be93:	mov    ecx,DWORD PTR [esp+0x10]
6400be97:	mov    DWORD PTR fs:0x0,ecx
6400be9e:	pop    ecx
6400be9f:	pop    esi
6400bea0:	pop    ebx
6400bea1:	mov    esp,ebp
6400bea3:	pop    ebp
6400bea4:	ret    
6400bea5:	xor    eax,eax
6400bea7:	mov    ds:0x6402c334,eax
6400beac:	mov    ecx,DWORD PTR [esp+0x10]
6400beb0:	mov    DWORD PTR fs:0x0,ecx
6400beb7:	pop    ecx
6400beb8:	pop    esi
6400beb9:	pop    ebx
6400beba:	mov    esp,ebp
6400bebc:	pop    ebp
6400bebd:	ret    
6400bebe:	mov    eax,ds:0x6402c334
6400bec3:	mov    ecx,DWORD PTR [esp+0x10]
6400bec7:	mov    DWORD PTR fs:0x0,ecx
6400bece:	pop    ecx
6400becf:	pop    esi
6400bed0:	pop    ebx
6400bed1:	mov    esp,ebp
6400bed3:	pop    ebp
6400bed4:	ret    
6400bed5:	int3   
6400bed6:	int3   
6400bed7:	int3   
6400bed8:	int3   
6400bed9:	int3   
6400beda:	int3   
6400bedb:	int3   
6400bedc:	int3   
6400bedd:	int3   
6400bede:	int3   
6400bedf:	int3   
6400bee0:	push   ebp
6400bee1:	mov    ebp,esp
6400bee3:	and    esp,0xfffffff8
6400bee6:	push   0xffffffff
6400bee8:	push   0x6401f3ae
6400beed:	mov    eax,fs:0x0
6400bef3:	push   eax
6400bef4:	push   ecx
6400bef5:	push   ebx
6400bef6:	push   esi
6400bef7:	mov    eax,ds:0x64028038
6400befc:	xor    eax,esp
6400befe:	push   eax
6400beff:	lea    eax,[esp+0x10]
6400bf03:	mov    fs:0x0,eax
6400bf09:	mov    ebx,0x1
6400bf0e:	test   BYTE PTR ds:0x6402c330,bl
6400bf14:	jne    0x6400bf9e
6400bf1a:	or     DWORD PTR ds:0x6402c330,ebx
6400bf20:	push   0x64024b10
6400bf25:	push   0xf
6400bf27:	push   0x64024b3c
6400bf2c:	mov    DWORD PTR [esp+0x24],0x0
6400bf34:	call   0x64003970
6400bf39:	push   0x64024b4c
6400bf3e:	push   0x8
6400bf40:	push   0x640246ac
6400bf45:	mov    esi,eax
6400bf47:	call   0x64003b70
6400bf4c:	add    esp,0x18
6400bf4f:	push   eax
6400bf50:	call   DWORD PTR ds:0x64021018
6400bf56:	add    DWORD PTR ds:0x6402c210,ebx
6400bf5c:	test   eax,eax
6400bf5e:	je     0x6400bf85
6400bf60:	push   esi
6400bf61:	push   eax
6400bf62:	call   DWORD PTR ds:0x64021014
6400bf68:	add    DWORD PTR ds:0x6402c214,ebx
6400bf6e:	mov    ds:0x6402c32c,eax
6400bf73:	mov    ecx,DWORD PTR [esp+0x10]
6400bf77:	mov    DWORD PTR fs:0x0,ecx
6400bf7e:	pop    ecx
6400bf7f:	pop    esi
6400bf80:	pop    ebx
6400bf81:	mov    esp,ebp
6400bf83:	pop    ebp
6400bf84:	ret    
6400bf85:	xor    eax,eax
6400bf87:	mov    ds:0x6402c32c,eax
6400bf8c:	mov    ecx,DWORD PTR [esp+0x10]
6400bf90:	mov    DWORD PTR fs:0x0,ecx
6400bf97:	pop    ecx
6400bf98:	pop    esi
6400bf99:	pop    ebx
6400bf9a:	mov    esp,ebp
6400bf9c:	pop    ebp
6400bf9d:	ret    
6400bf9e:	mov    eax,ds:0x6402c32c
6400bfa3:	mov    ecx,DWORD PTR [esp+0x10]
6400bfa7:	mov    DWORD PTR fs:0x0,ecx
6400bfae:	pop    ecx
6400bfaf:	pop    esi
6400bfb0:	pop    ebx
6400bfb1:	mov    esp,ebp
6400bfb3:	pop    ebp
6400bfb4:	ret    
6400bfb5:	int3   
6400bfb6:	int3   
6400bfb7:	int3   
6400bfb8:	int3   
6400bfb9:	int3   
6400bfba:	int3   
6400bfbb:	int3   
6400bfbc:	int3   
6400bfbd:	int3   
6400bfbe:	int3   
6400bfbf:	int3   
6400bfc0:	push   ebp
6400bfc1:	mov    ebp,esp
6400bfc3:	and    esp,0xfffffff8
6400bfc6:	push   0xffffffff
6400bfc8:	push   0x6401f37e
6400bfcd:	mov    eax,fs:0x0
6400bfd3:	push   eax
6400bfd4:	push   ecx
6400bfd5:	push   ebx
6400bfd6:	push   esi
6400bfd7:	mov    eax,ds:0x64028038
6400bfdc:	xor    eax,esp
6400bfde:	push   eax
6400bfdf:	lea    eax,[esp+0x10]
6400bfe3:	mov    fs:0x0,eax
6400bfe9:	mov    ebx,0x1
6400bfee:	test   BYTE PTR ds:0x6402c328,bl
6400bff4:	jne    0x6400c07e
6400bffa:	or     DWORD PTR ds:0x6402c328,ebx
6400c000:	push   0x64024b74
6400c005:	push   0x12
6400c007:	push   0x64024bb0
6400c00c:	mov    DWORD PTR [esp+0x24],0x0
6400c014:	call   0x64003970
6400c019:	push   0x64024bc4
6400c01e:	push   0x8
6400c020:	push   0x640246ac
6400c025:	mov    esi,eax
6400c027:	call   0x64003b70
6400c02c:	add    esp,0x18
6400c02f:	push   eax
6400c030:	call   DWORD PTR ds:0x64021018
6400c036:	add    DWORD PTR ds:0x6402c210,ebx
6400c03c:	test   eax,eax
6400c03e:	je     0x6400c065
6400c040:	push   esi
6400c041:	push   eax
6400c042:	call   DWORD PTR ds:0x64021014
6400c048:	add    DWORD PTR ds:0x6402c214,ebx
6400c04e:	mov    ds:0x6402c324,eax
6400c053:	mov    ecx,DWORD PTR [esp+0x10]
6400c057:	mov    DWORD PTR fs:0x0,ecx
6400c05e:	pop    ecx
6400c05f:	pop    esi
6400c060:	pop    ebx
6400c061:	mov    esp,ebp
6400c063:	pop    ebp
6400c064:	ret    
6400c065:	xor    eax,eax
6400c067:	mov    ds:0x6402c324,eax
6400c06c:	mov    ecx,DWORD PTR [esp+0x10]
6400c070:	mov    DWORD PTR fs:0x0,ecx
6400c077:	pop    ecx
6400c078:	pop    esi
6400c079:	pop    ebx
6400c07a:	mov    esp,ebp
6400c07c:	pop    ebp
6400c07d:	ret    
6400c07e:	mov    eax,ds:0x6402c324
6400c083:	mov    ecx,DWORD PTR [esp+0x10]
6400c087:	mov    DWORD PTR fs:0x0,ecx
6400c08e:	pop    ecx
6400c08f:	pop    esi
6400c090:	pop    ebx
6400c091:	mov    esp,ebp
6400c093:	pop    ebp
6400c094:	ret    
6400c095:	int3   
6400c096:	int3   
6400c097:	int3   
6400c098:	int3   
6400c099:	int3   
6400c09a:	int3   
6400c09b:	int3   
6400c09c:	int3   
6400c09d:	int3   
6400c09e:	int3   
6400c09f:	int3   
6400c0a0:	push   ebp
6400c0a1:	mov    ebp,esp
6400c0a3:	and    esp,0xfffffff8
6400c0a6:	push   0xffffffff
6400c0a8:	push   0x6401f34e
6400c0ad:	mov    eax,fs:0x0
6400c0b3:	push   eax
6400c0b4:	push   ecx
6400c0b5:	push   ebx
6400c0b6:	push   esi
6400c0b7:	mov    eax,ds:0x64028038
6400c0bc:	xor    eax,esp
6400c0be:	push   eax
6400c0bf:	lea    eax,[esp+0x10]
6400c0c3:	mov    fs:0x0,eax
6400c0c9:	mov    ebx,0x1
6400c0ce:	test   BYTE PTR ds:0x6402c320,bl
6400c0d4:	jne    0x6400c15e
6400c0da:	or     DWORD PTR ds:0x6402c320,ebx
6400c0e0:	push   0x64024bf8
6400c0e5:	push   0xf
6400c0e7:	push   0x64024c28
6400c0ec:	mov    DWORD PTR [esp+0x24],0x0
6400c0f4:	call   0x64003970
6400c0f9:	push   0x64024c38
6400c0fe:	push   0x8
6400c100:	push   0x640246ac
6400c105:	mov    esi,eax
6400c107:	call   0x64003b70
6400c10c:	add    esp,0x18
6400c10f:	push   eax
6400c110:	call   DWORD PTR ds:0x64021018
6400c116:	add    DWORD PTR ds:0x6402c210,ebx
6400c11c:	test   eax,eax
6400c11e:	je     0x6400c145
6400c120:	push   esi
6400c121:	push   eax
6400c122:	call   DWORD PTR ds:0x64021014
6400c128:	add    DWORD PTR ds:0x6402c214,ebx
6400c12e:	mov    ds:0x6402c31c,eax
6400c133:	mov    ecx,DWORD PTR [esp+0x10]
6400c137:	mov    DWORD PTR fs:0x0,ecx
6400c13e:	pop    ecx
6400c13f:	pop    esi
6400c140:	pop    ebx
6400c141:	mov    esp,ebp
6400c143:	pop    ebp
6400c144:	ret    
6400c145:	xor    eax,eax
6400c147:	mov    ds:0x6402c31c,eax
6400c14c:	mov    ecx,DWORD PTR [esp+0x10]
6400c150:	mov    DWORD PTR fs:0x0,ecx
6400c157:	pop    ecx
6400c158:	pop    esi
6400c159:	pop    ebx
6400c15a:	mov    esp,ebp
6400c15c:	pop    ebp
6400c15d:	ret    
6400c15e:	mov    eax,ds:0x6402c31c
6400c163:	mov    ecx,DWORD PTR [esp+0x10]
6400c167:	mov    DWORD PTR fs:0x0,ecx
6400c16e:	pop    ecx
6400c16f:	pop    esi
6400c170:	pop    ebx
6400c171:	mov    esp,ebp
6400c173:	pop    ebp
6400c174:	ret    
6400c175:	int3   
6400c176:	int3   
6400c177:	int3   
6400c178:	int3   
6400c179:	int3   
6400c17a:	int3   
6400c17b:	int3   
6400c17c:	int3   
6400c17d:	int3   
6400c17e:	int3   
6400c17f:	int3   
6400c180:	push   ebp
6400c181:	mov    ebp,esp
6400c183:	and    esp,0xfffffff8
6400c186:	push   0xffffffff
6400c188:	push   0x6401f31e
6400c18d:	mov    eax,fs:0x0
6400c193:	push   eax
6400c194:	push   ecx
6400c195:	push   ebx
6400c196:	push   esi
6400c197:	mov    eax,ds:0x64028038
6400c19c:	xor    eax,esp
6400c19e:	push   eax
6400c19f:	lea    eax,[esp+0x10]
6400c1a3:	mov    fs:0x0,eax
6400c1a9:	mov    ebx,0x1
6400c1ae:	test   BYTE PTR ds:0x6402c318,bl
6400c1b4:	jne    0x6400c23e
6400c1ba:	or     DWORD PTR ds:0x6402c318,ebx
6400c1c0:	push   0x64024c78
6400c1c5:	push   0xd
6400c1c7:	push   0x64024cb8
6400c1cc:	mov    DWORD PTR [esp+0x24],0x0
6400c1d4:	call   0x64003970
6400c1d9:	push   0x64024cc8
6400c1de:	push   0x8
6400c1e0:	push   0x640246ac
6400c1e5:	mov    esi,eax
6400c1e7:	call   0x64003b70
6400c1ec:	add    esp,0x18
6400c1ef:	push   eax
6400c1f0:	call   DWORD PTR ds:0x64021018
6400c1f6:	add    DWORD PTR ds:0x6402c210,ebx
6400c1fc:	test   eax,eax
6400c1fe:	je     0x6400c225
6400c200:	push   esi
6400c201:	push   eax
6400c202:	call   DWORD PTR ds:0x64021014
6400c208:	add    DWORD PTR ds:0x6402c214,ebx
6400c20e:	mov    ds:0x6402c314,eax
6400c213:	mov    ecx,DWORD PTR [esp+0x10]
6400c217:	mov    DWORD PTR fs:0x0,ecx
6400c21e:	pop    ecx
6400c21f:	pop    esi
6400c220:	pop    ebx
6400c221:	mov    esp,ebp
6400c223:	pop    ebp
6400c224:	ret    
6400c225:	xor    eax,eax
6400c227:	mov    ds:0x6402c314,eax
6400c22c:	mov    ecx,DWORD PTR [esp+0x10]
6400c230:	mov    DWORD PTR fs:0x0,ecx
6400c237:	pop    ecx
6400c238:	pop    esi
6400c239:	pop    ebx
6400c23a:	mov    esp,ebp
6400c23c:	pop    ebp
6400c23d:	ret    
6400c23e:	mov    eax,ds:0x6402c314
6400c243:	mov    ecx,DWORD PTR [esp+0x10]
6400c247:	mov    DWORD PTR fs:0x0,ecx
6400c24e:	pop    ecx
6400c24f:	pop    esi
6400c250:	pop    ebx
6400c251:	mov    esp,ebp
6400c253:	pop    ebp
6400c254:	ret    
6400c255:	int3   
6400c256:	int3   
6400c257:	int3   
6400c258:	int3   
6400c259:	int3   
6400c25a:	int3   
6400c25b:	int3   
6400c25c:	int3   
6400c25d:	int3   
6400c25e:	int3   
6400c25f:	int3   
6400c260:	push   ebp
6400c261:	mov    ebp,esp
6400c263:	and    esp,0xfffffff8
6400c266:	push   0xffffffff
6400c268:	push   0x6401f2ee
6400c26d:	mov    eax,fs:0x0
6400c273:	push   eax
6400c274:	push   ecx
6400c275:	push   ebx
6400c276:	push   esi
6400c277:	mov    eax,ds:0x64028038
6400c27c:	xor    eax,esp
6400c27e:	push   eax
6400c27f:	lea    eax,[esp+0x10]
6400c283:	mov    fs:0x0,eax
6400c289:	mov    ebx,0x1
6400c28e:	test   BYTE PTR ds:0x6402c310,bl
6400c294:	jne    0x6400c31e
6400c29a:	or     DWORD PTR ds:0x6402c310,ebx
6400c2a0:	push   0x64024cf4
6400c2a5:	push   0xc
6400c2a7:	push   0x64024d20
6400c2ac:	mov    DWORD PTR [esp+0x24],0x0
6400c2b4:	call   0x64003970
6400c2b9:	push   0x64024d30
6400c2be:	push   0x8
6400c2c0:	push   0x640246ac
6400c2c5:	mov    esi,eax
6400c2c7:	call   0x64003b70
6400c2cc:	add    esp,0x18
6400c2cf:	push   eax
6400c2d0:	call   DWORD PTR ds:0x64021018
6400c2d6:	add    DWORD PTR ds:0x6402c210,ebx
6400c2dc:	test   eax,eax
6400c2de:	je     0x6400c305
6400c2e0:	push   esi
6400c2e1:	push   eax
6400c2e2:	call   DWORD PTR ds:0x64021014
6400c2e8:	add    DWORD PTR ds:0x6402c214,ebx
6400c2ee:	mov    ds:0x6402c30c,eax
6400c2f3:	mov    ecx,DWORD PTR [esp+0x10]
6400c2f7:	mov    DWORD PTR fs:0x0,ecx
6400c2fe:	pop    ecx
6400c2ff:	pop    esi
6400c300:	pop    ebx
6400c301:	mov    esp,ebp
6400c303:	pop    ebp
6400c304:	ret    
6400c305:	xor    eax,eax
6400c307:	mov    ds:0x6402c30c,eax
6400c30c:	mov    ecx,DWORD PTR [esp+0x10]
6400c310:	mov    DWORD PTR fs:0x0,ecx
6400c317:	pop    ecx
6400c318:	pop    esi
6400c319:	pop    ebx
6400c31a:	mov    esp,ebp
6400c31c:	pop    ebp
6400c31d:	ret    
6400c31e:	mov    eax,ds:0x6402c30c
6400c323:	mov    ecx,DWORD PTR [esp+0x10]
6400c327:	mov    DWORD PTR fs:0x0,ecx
6400c32e:	pop    ecx
6400c32f:	pop    esi
6400c330:	pop    ebx
6400c331:	mov    esp,ebp
6400c333:	pop    ebp
6400c334:	ret    
6400c335:	int3   
6400c336:	int3   
6400c337:	int3   
6400c338:	int3   
6400c339:	int3   
6400c33a:	int3   
6400c33b:	int3   
6400c33c:	int3   
6400c33d:	int3   
6400c33e:	int3   
6400c33f:	int3   
6400c340:	push   ebp
6400c341:	mov    ebp,esp
6400c343:	and    esp,0xfffffff8
6400c346:	push   0xffffffff
6400c348:	push   0x6401f2be
6400c34d:	mov    eax,fs:0x0
6400c353:	push   eax
6400c354:	push   ecx
6400c355:	push   ebx
6400c356:	push   esi
6400c357:	mov    eax,ds:0x64028038
6400c35c:	xor    eax,esp
6400c35e:	push   eax
6400c35f:	lea    eax,[esp+0x10]
6400c363:	mov    fs:0x0,eax
6400c369:	mov    ebx,0x1
6400c36e:	test   BYTE PTR ds:0x6402c308,bl
6400c374:	jne    0x6400c3fe
6400c37a:	or     DWORD PTR ds:0x6402c308,ebx
6400c380:	push   0x64024d68
6400c385:	push   0x11
6400c387:	push   0x64024d90
6400c38c:	mov    DWORD PTR [esp+0x24],0x0
6400c394:	call   0x64003970
6400c399:	push   0x64024da4
6400c39e:	push   0x8
6400c3a0:	push   0x640246ac
6400c3a5:	mov    esi,eax
6400c3a7:	call   0x64003b70
6400c3ac:	add    esp,0x18
6400c3af:	push   eax
6400c3b0:	call   DWORD PTR ds:0x64021018
6400c3b6:	add    DWORD PTR ds:0x6402c210,ebx
6400c3bc:	test   eax,eax
6400c3be:	je     0x6400c3e5
6400c3c0:	push   esi
6400c3c1:	push   eax
6400c3c2:	call   DWORD PTR ds:0x64021014
6400c3c8:	add    DWORD PTR ds:0x6402c214,ebx
6400c3ce:	mov    ds:0x6402c304,eax
6400c3d3:	mov    ecx,DWORD PTR [esp+0x10]
6400c3d7:	mov    DWORD PTR fs:0x0,ecx
6400c3de:	pop    ecx
6400c3df:	pop    esi
6400c3e0:	pop    ebx
6400c3e1:	mov    esp,ebp
6400c3e3:	pop    ebp
6400c3e4:	ret    
6400c3e5:	xor    eax,eax
6400c3e7:	mov    ds:0x6402c304,eax
6400c3ec:	mov    ecx,DWORD PTR [esp+0x10]
6400c3f0:	mov    DWORD PTR fs:0x0,ecx
6400c3f7:	pop    ecx
6400c3f8:	pop    esi
6400c3f9:	pop    ebx
6400c3fa:	mov    esp,ebp
6400c3fc:	pop    ebp
6400c3fd:	ret    
6400c3fe:	mov    eax,ds:0x6402c304
6400c403:	mov    ecx,DWORD PTR [esp+0x10]
6400c407:	mov    DWORD PTR fs:0x0,ecx
6400c40e:	pop    ecx
6400c40f:	pop    esi
6400c410:	pop    ebx
6400c411:	mov    esp,ebp
6400c413:	pop    ebp
6400c414:	ret    
6400c415:	int3   
6400c416:	int3   
6400c417:	int3   
6400c418:	int3   
6400c419:	int3   
6400c41a:	int3   
6400c41b:	int3   
6400c41c:	int3   
6400c41d:	int3   
6400c41e:	int3   
6400c41f:	int3   
6400c420:	push   ebp
6400c421:	mov    ebp,esp
6400c423:	and    esp,0xfffffff8
6400c426:	push   0xffffffff
6400c428:	push   0x6401f28e
6400c42d:	mov    eax,fs:0x0
6400c433:	push   eax
6400c434:	push   ecx
6400c435:	push   ebx
6400c436:	push   esi
6400c437:	mov    eax,ds:0x64028038
6400c43c:	xor    eax,esp
6400c43e:	push   eax
6400c43f:	lea    eax,[esp+0x10]
6400c443:	mov    fs:0x0,eax
6400c449:	mov    ebx,0x1
6400c44e:	test   BYTE PTR ds:0x6402c300,bl
6400c454:	jne    0x6400c4de
6400c45a:	or     DWORD PTR ds:0x6402c300,ebx
6400c460:	push   0x64024dd8
6400c465:	push   0x16
6400c467:	push   0x64024e08
6400c46c:	mov    DWORD PTR [esp+0x24],0x0
6400c474:	call   0x64003970
6400c479:	push   0x64024e20
6400c47e:	push   0x8
6400c480:	push   0x640246ac
6400c485:	mov    esi,eax
6400c487:	call   0x64003b70
6400c48c:	add    esp,0x18
6400c48f:	push   eax
6400c490:	call   DWORD PTR ds:0x64021018
6400c496:	add    DWORD PTR ds:0x6402c210,ebx
6400c49c:	test   eax,eax
6400c49e:	je     0x6400c4c5
6400c4a0:	push   esi
6400c4a1:	push   eax
6400c4a2:	call   DWORD PTR ds:0x64021014
6400c4a8:	add    DWORD PTR ds:0x6402c214,ebx
6400c4ae:	mov    ds:0x6402c2fc,eax
6400c4b3:	mov    ecx,DWORD PTR [esp+0x10]
6400c4b7:	mov    DWORD PTR fs:0x0,ecx
6400c4be:	pop    ecx
6400c4bf:	pop    esi
6400c4c0:	pop    ebx
6400c4c1:	mov    esp,ebp
6400c4c3:	pop    ebp
6400c4c4:	ret    
6400c4c5:	xor    eax,eax
6400c4c7:	mov    ds:0x6402c2fc,eax
6400c4cc:	mov    ecx,DWORD PTR [esp+0x10]
6400c4d0:	mov    DWORD PTR fs:0x0,ecx
6400c4d7:	pop    ecx
6400c4d8:	pop    esi
6400c4d9:	pop    ebx
6400c4da:	mov    esp,ebp
6400c4dc:	pop    ebp
6400c4dd:	ret    
6400c4de:	mov    eax,ds:0x6402c2fc
6400c4e3:	mov    ecx,DWORD PTR [esp+0x10]
6400c4e7:	mov    DWORD PTR fs:0x0,ecx
6400c4ee:	pop    ecx
6400c4ef:	pop    esi
6400c4f0:	pop    ebx
6400c4f1:	mov    esp,ebp
6400c4f3:	pop    ebp
6400c4f4:	ret    
6400c4f5:	int3   
6400c4f6:	int3   
6400c4f7:	int3   
6400c4f8:	int3   
6400c4f9:	int3   
6400c4fa:	int3   
6400c4fb:	int3   
6400c4fc:	int3   
6400c4fd:	int3   
6400c4fe:	int3   
6400c4ff:	int3   
6400c500:	push   ebp
6400c501:	mov    ebp,esp
6400c503:	and    esp,0xfffffff8
6400c506:	push   0xffffffff
6400c508:	push   0x6401f25e
6400c50d:	mov    eax,fs:0x0
6400c513:	push   eax
6400c514:	push   ecx
6400c515:	push   ebx
6400c516:	push   esi
6400c517:	mov    eax,ds:0x64028038
6400c51c:	xor    eax,esp
6400c51e:	push   eax
6400c51f:	lea    eax,[esp+0x10]
6400c523:	mov    fs:0x0,eax
6400c529:	mov    ebx,0x1
6400c52e:	test   BYTE PTR ds:0x6402c2f8,bl
6400c534:	jne    0x6400c5be
6400c53a:	or     DWORD PTR ds:0x6402c2f8,ebx
6400c540:	push   0x64024e44
6400c545:	push   0x10
6400c547:	push   0x64024e74
6400c54c:	mov    DWORD PTR [esp+0x24],0x0
6400c554:	call   0x64003970
6400c559:	push   0x64024e88
6400c55e:	push   0x8
6400c560:	push   0x640246ac
6400c565:	mov    esi,eax
6400c567:	call   0x64003b70
6400c56c:	add    esp,0x18
6400c56f:	push   eax
6400c570:	call   DWORD PTR ds:0x64021018
6400c576:	add    DWORD PTR ds:0x6402c210,ebx
6400c57c:	test   eax,eax
6400c57e:	je     0x6400c5a5
6400c580:	push   esi
6400c581:	push   eax
6400c582:	call   DWORD PTR ds:0x64021014
6400c588:	add    DWORD PTR ds:0x6402c214,ebx
6400c58e:	mov    ds:0x6402c2f4,eax
6400c593:	mov    ecx,DWORD PTR [esp+0x10]
6400c597:	mov    DWORD PTR fs:0x0,ecx
6400c59e:	pop    ecx
6400c59f:	pop    esi
6400c5a0:	pop    ebx
6400c5a1:	mov    esp,ebp
6400c5a3:	pop    ebp
6400c5a4:	ret    
6400c5a5:	xor    eax,eax
6400c5a7:	mov    ds:0x6402c2f4,eax
6400c5ac:	mov    ecx,DWORD PTR [esp+0x10]
6400c5b0:	mov    DWORD PTR fs:0x0,ecx
6400c5b7:	pop    ecx
6400c5b8:	pop    esi
6400c5b9:	pop    ebx
6400c5ba:	mov    esp,ebp
6400c5bc:	pop    ebp
6400c5bd:	ret    
6400c5be:	mov    eax,ds:0x6402c2f4
6400c5c3:	mov    ecx,DWORD PTR [esp+0x10]
6400c5c7:	mov    DWORD PTR fs:0x0,ecx
6400c5ce:	pop    ecx
6400c5cf:	pop    esi
6400c5d0:	pop    ebx
6400c5d1:	mov    esp,ebp
6400c5d3:	pop    ebp
6400c5d4:	ret    
6400c5d5:	int3   
6400c5d6:	int3   
6400c5d7:	int3   
6400c5d8:	int3   
6400c5d9:	int3   
6400c5da:	int3   
6400c5db:	int3   
6400c5dc:	int3   
6400c5dd:	int3   
6400c5de:	int3   
6400c5df:	int3   
6400c5e0:	push   ebp
6400c5e1:	mov    ebp,esp
6400c5e3:	and    esp,0xfffffff8
6400c5e6:	push   0xffffffff
6400c5e8:	push   0x6401f22e
6400c5ed:	mov    eax,fs:0x0
6400c5f3:	push   eax
6400c5f4:	push   ecx
6400c5f5:	push   ebx
6400c5f6:	push   esi
6400c5f7:	mov    eax,ds:0x64028038
6400c5fc:	xor    eax,esp
6400c5fe:	push   eax
6400c5ff:	lea    eax,[esp+0x10]
6400c603:	mov    fs:0x0,eax
6400c609:	mov    ebx,0x1
6400c60e:	test   BYTE PTR ds:0x6402c2f0,bl
6400c614:	jne    0x6400c69e
6400c61a:	or     DWORD PTR ds:0x6402c2f0,ebx
6400c620:	push   0x64024ec8
6400c625:	push   0xd
6400c627:	push   0x64024f00
6400c62c:	mov    DWORD PTR [esp+0x24],0x0
6400c634:	call   0x64003970
6400c639:	push   0x64024f10
6400c63e:	push   0x7
6400c640:	push   0x64024f4c
6400c645:	mov    esi,eax
6400c647:	call   0x64003b70
6400c64c:	add    esp,0x18
6400c64f:	push   eax
6400c650:	call   DWORD PTR ds:0x64021018
6400c656:	add    DWORD PTR ds:0x6402c210,ebx
6400c65c:	test   eax,eax
6400c65e:	je     0x6400c685
6400c660:	push   esi
6400c661:	push   eax
6400c662:	call   DWORD PTR ds:0x64021014
6400c668:	add    DWORD PTR ds:0x6402c214,ebx
6400c66e:	mov    ds:0x6402c2ec,eax
6400c673:	mov    ecx,DWORD PTR [esp+0x10]
6400c677:	mov    DWORD PTR fs:0x0,ecx
6400c67e:	pop    ecx
6400c67f:	pop    esi
6400c680:	pop    ebx
6400c681:	mov    esp,ebp
6400c683:	pop    ebp
6400c684:	ret    
6400c685:	xor    eax,eax
6400c687:	mov    ds:0x6402c2ec,eax
6400c68c:	mov    ecx,DWORD PTR [esp+0x10]
6400c690:	mov    DWORD PTR fs:0x0,ecx
6400c697:	pop    ecx
6400c698:	pop    esi
6400c699:	pop    ebx
6400c69a:	mov    esp,ebp
6400c69c:	pop    ebp
6400c69d:	ret    
6400c69e:	mov    eax,ds:0x6402c2ec
6400c6a3:	mov    ecx,DWORD PTR [esp+0x10]
6400c6a7:	mov    DWORD PTR fs:0x0,ecx
6400c6ae:	pop    ecx
6400c6af:	pop    esi
6400c6b0:	pop    ebx
6400c6b1:	mov    esp,ebp
6400c6b3:	pop    ebp
6400c6b4:	ret    
6400c6b5:	int3   
6400c6b6:	int3   
6400c6b7:	int3   
6400c6b8:	int3   
6400c6b9:	int3   
6400c6ba:	int3   
6400c6bb:	int3   
6400c6bc:	int3   
6400c6bd:	int3   
6400c6be:	int3   
6400c6bf:	int3   
6400c6c0:	mov    eax,DWORD PTR [esp+0x8]
6400c6c4:	sub    eax,0x1
6400c6c7:	jne    0x6400c6d2
6400c6c9:	mov    eax,DWORD PTR [esp+0x4]
6400c6cd:	mov    ds:0x64029444,eax
6400c6d2:	mov    eax,0x1
6400c6d7:	ret    0xc
6400c6da:	int3   
6400c6db:	int3   
6400c6dc:	int3   
6400c6dd:	int3   
6400c6de:	int3   
6400c6df:	int3   
6400c6e0:	cmp    BYTE PTR ds:0x64029440,0x0
6400c6e7:	jne    0x6400c746
6400c6e9:	push   esi
6400c6ea:	push   edi
6400c6eb:	push   0x6402139c
6400c6f0:	mov    BYTE PTR ds:0x64029440,0x1
6400c6f7:	call   DWORD PTR ds:0x64021018
6400c6fd:	push   0x6402136c
6400c702:	push   0xb
6400c704:	push   0x64021360
6400c709:	mov    esi,eax
6400c70b:	call   0x64003970
6400c710:	mov    edi,DWORD PTR ds:0x64021014
6400c716:	add    esp,0xc
6400c719:	push   eax
6400c71a:	push   esi
6400c71b:	call   edi
6400c71d:	push   0x6402133c
6400c722:	push   0x19
6400c724:	push   0x64021320
6400c729:	mov    ds:0x64029438,eax
6400c72e:	call   0x64003970
6400c733:	add    esp,0xc
6400c736:	push   eax
6400c737:	push   esi
6400c738:	call   edi
6400c73a:	pop    edi
6400c73b:	mov    ds:0x6402943c,eax
6400c740:	pop    esi
6400c741:	jmp    0x6400e4f0
6400c746:	ret    
6400c747:	int3   
6400c748:	int3   
6400c749:	int3   
6400c74a:	int3   
6400c74b:	int3   
6400c74c:	int3   
6400c74d:	int3   
6400c74e:	int3   
6400c74f:	int3   
6400c750:	call   0x6400c6e0
6400c755:	mov    eax,ds:0x64029438
6400c75a:	test   eax,eax
6400c75c:	je     0x6400c760
6400c75e:	jmp    eax
6400c760:	ret    0x8
6400c763:	int3   
6400c764:	int3   
6400c765:	int3   
6400c766:	int3   
6400c767:	int3   
6400c768:	int3   
6400c769:	int3   
6400c76a:	int3   
6400c76b:	int3   
6400c76c:	int3   
6400c76d:	int3   
6400c76e:	int3   
6400c76f:	int3   
6400c770:	call   0x6400c6e0
6400c775:	mov    eax,ds:0x6402943c
6400c77a:	test   eax,eax
6400c77c:	je     0x6400c780
6400c77e:	jmp    eax
6400c780:	ret    0x4
6400c783:	int3   
6400c784:	int3   
6400c785:	int3   
6400c786:	int3   
6400c787:	int3   
6400c788:	int3   
6400c789:	int3   
6400c78a:	int3   
6400c78b:	int3   
6400c78c:	int3   
6400c78d:	int3   
6400c78e:	int3   
6400c78f:	int3   
6400c790:	sub    esp,0x804
6400c796:	mov    eax,ds:0x64028038
6400c79b:	xor    eax,esp
6400c79d:	mov    DWORD PTR [esp+0x800],eax
6400c7a4:	call   DWORD PTR ds:0x6402104c
6400c7aa:	and    eax,0xff
6400c7af:	cmp    eax,0x5
6400c7b2:	jb     0x6400c7c5
6400c7b4:	push   0x640213f0
6400c7b9:	push   0x400
6400c7be:	lea    eax,[esp+0x8]
6400c7c2:	push   eax
6400c7c3:	jmp    0x6400c7d4
6400c7c5:	push   0x640213e4
6400c7ca:	push   0x400
6400c7cf:	lea    ecx,[esp+0x8]
6400c7d3:	push   ecx
6400c7d4:	call   0x6400f7f2
6400c7d9:	add    esp,0xc
6400c7dc:	push   0x640213d4
6400c7e1:	lea    edx,[esp+0x4]
6400c7e5:	push   0x400
6400c7ea:	push   edx
6400c7eb:	call   0x6400f778
6400c7f0:	add    esp,0xc
6400c7f3:	push   0x0
6400c7f5:	push   0x80
6400c7fa:	push   0x3
6400c7fc:	push   0x0
6400c7fe:	push   0x0
6400c800:	lea    eax,[esp+0x14]
6400c804:	push   0xc0000000
6400c809:	push   eax
6400c80a:	call   0x6400a9e0
6400c80f:	call   eax
6400c811:	cmp    eax,0xffffffff
6400c814:	jne    0x6400c837
6400c816:	call   DWORD PTR ds:0x64021044
6400c81c:	cmp    eax,0x20
6400c81f:	sete   al
6400c822:	mov    ecx,DWORD PTR [esp+0x800]
6400c829:	xor    ecx,esp
6400c82b:	call   0x6400f34e
6400c830:	add    esp,0x804
6400c836:	ret    
6400c837:	push   eax
6400c838:	call   DWORD PTR ds:0x64021040
6400c83e:	mov    ecx,DWORD PTR [esp+0x800]
6400c845:	xor    ecx,esp
6400c847:	mov    al,0x1
6400c849:	call   0x6400f34e
6400c84e:	add    esp,0x804
6400c854:	ret    
6400c855:	int3   
6400c856:	int3   
6400c857:	int3   
6400c858:	int3   
6400c859:	int3   
6400c85a:	int3   
6400c85b:	int3   
6400c85c:	int3   
6400c85d:	int3   
6400c85e:	int3   
6400c85f:	int3   
6400c860:	push   ebx
6400c861:	mov    ebx,DWORD PTR ds:0x64021050
6400c867:	push   esi
6400c868:	push   edi
6400c869:	mov    edi,DWORD PTR [esp+0x10]
6400c86d:	xor    esi,esi
6400c86f:	nop
6400c870:	lea    eax,[esp+0x10]
6400c874:	push   0x0
6400c876:	push   eax
6400c877:	mov    DWORD PTR [esp+0x18],0x0
6400c87f:	call   0x6400b540
6400c884:	call   eax
6400c886:	test   eax,eax
6400c888:	je     0x6400c899
6400c88a:	cmp    edi,0xffffffff
6400c88d:	je     0x6400c899
6400c88f:	add    esi,0x3e8
6400c895:	cmp    esi,edi
6400c897:	ja     0x6400c8a2
6400c899:	push   0x3e8
6400c89e:	call   ebx
6400c8a0:	jmp    0x6400c870
6400c8a2:	pop    edi
6400c8a3:	pop    esi
6400c8a4:	mov    al,0x1
6400c8a6:	pop    ebx
6400c8a7:	ret    
6400c8a8:	int3   
6400c8a9:	int3   
6400c8aa:	int3   
6400c8ab:	int3   
6400c8ac:	int3   
6400c8ad:	int3   
6400c8ae:	int3   
6400c8af:	int3   
6400c8b0:	mov    ecx,DWORD PTR [esp+0x4]
6400c8b4:	sub    esp,0xc
6400c8b7:	test   ecx,ecx
6400c8b9:	ja     0x6400c8d1
6400c8bb:	xor    ecx,ecx
6400c8bd:	lea    edx,[ecx*4+0x0]
6400c8c4:	push   edx
6400c8c5:	call   0x6400eed3
6400c8ca:	add    esp,0x4
6400c8cd:	add    esp,0xc
6400c8d0:	ret    
6400c8d1:	or     eax,0xffffffff
6400c8d4:	xor    edx,edx
6400c8d6:	div    ecx
6400c8d8:	cmp    eax,0x4
6400c8db:	jae    0x6400c8bd
6400c8dd:	lea    eax,[esp+0x10]
6400c8e1:	push   eax
6400c8e2:	lea    ecx,[esp+0x4]
6400c8e6:	mov    DWORD PTR [esp+0x14],0x0
6400c8ee:	call   0x6400ebad
6400c8f3:	push   0x64025e14
6400c8f8:	lea    ecx,[esp+0x4]
6400c8fc:	push   ecx
6400c8fd:	mov    DWORD PTR [esp+0x8],0x640212f4
6400c905:	call   0x6400ef3d
6400c90a:	int3   
6400c90b:	int3   
6400c90c:	int3   
6400c90d:	int3   
6400c90e:	int3   
6400c90f:	int3   
6400c910:	mov    ecx,DWORD PTR [esp+0x8]
6400c914:	test   ecx,ecx
6400c916:	jne    0x6400c922
6400c918:	push   0x80004005
6400c91d:	call   0x64001000
6400c922:	mov    eax,DWORD PTR [esp+0x4]
6400c926:	mov    eax,DWORD PTR [eax]
6400c928:	mov    dx,WORD PTR [eax]
6400c92b:	cmp    dx,WORD PTR [ecx]
6400c92e:	jne    0x6400c956
6400c930:	test   dx,dx
6400c933:	je     0x6400c94a
6400c935:	mov    dx,WORD PTR [eax+0x2]
6400c939:	cmp    dx,WORD PTR [ecx+0x2]
6400c93d:	jne    0x6400c956
6400c93f:	add    eax,0x4
6400c942:	add    ecx,0x4
6400c945:	test   dx,dx
6400c948:	jne    0x6400c928
6400c94a:	xor    eax,eax
6400c94c:	xor    ecx,ecx
6400c94e:	test   eax,eax
6400c950:	setne  cl
6400c953:	mov    al,cl
6400c955:	ret    
6400c956:	sbb    eax,eax
6400c958:	sbb    eax,0xffffffff
6400c95b:	xor    ecx,ecx
6400c95d:	test   eax,eax
6400c95f:	setne  cl
6400c962:	mov    al,cl
6400c964:	ret    
6400c965:	int3   
6400c966:	int3   
6400c967:	int3   
6400c968:	int3   
6400c969:	int3   
6400c96a:	int3   
6400c96b:	int3   
6400c96c:	int3   
6400c96d:	int3   
6400c96e:	int3   
6400c96f:	int3   
6400c970:	mov    eax,DWORD PTR [esp+0x4]
6400c974:	mov    ecx,DWORD PTR [esp+0x8]
6400c978:	cmp    eax,ecx
6400c97a:	je     0x6400c98d
6400c97c:	mov    edx,DWORD PTR [esp+0xc]
6400c980:	push   esi
6400c981:	mov    esi,DWORD PTR [edx]
6400c983:	mov    DWORD PTR [eax],esi
6400c985:	add    eax,0x4
6400c988:	cmp    eax,ecx
6400c98a:	jne    0x6400c981
6400c98c:	pop    esi
6400c98d:	ret    
6400c98e:	int3   
6400c98f:	int3   
6400c990:	mov    eax,DWORD PTR [esp+0x8]
6400c994:	mov    edx,DWORD PTR [esp+0x4]
6400c998:	sub    eax,edx
6400c99a:	sar    eax,0x2
6400c99d:	push   esi
6400c99e:	mov    esi,DWORD PTR [esp+0x10]
6400c9a2:	lea    ecx,[eax*4+0x0]
6400c9a9:	sub    esi,ecx
6400c9ab:	test   eax,eax
6400c9ad:	jle    0x6400c9bb
6400c9af:	push   ecx
6400c9b0:	push   edx
6400c9b1:	push   ecx
6400c9b2:	push   esi
6400c9b3:	call   0x6400ed25
6400c9b8:	add    esp,0x10
6400c9bb:	mov    eax,esi
6400c9bd:	pop    esi
6400c9be:	ret    
6400c9bf:	int3   
6400c9c0:	mov    eax,DWORD PTR [esp+0x14]
6400c9c4:	push   ebp
6400c9c5:	mov    ebp,DWORD PTR [esp+0x8]
6400c9c9:	push   esi
6400c9ca:	mov    esi,DWORD PTR [esp+0x14]
6400c9ce:	push   edi
6400c9cf:	lea    edi,[esi+eax*1]
6400c9d2:	mov    eax,DWORD PTR [ebp+0x0]
6400c9d5:	mov    edx,DWORD PTR [eax-0x8]
6400c9d8:	sub    eax,0x10
6400c9db:	mov    ecx,0x1
6400c9e0:	sub    ecx,DWORD PTR [eax+0xc]
6400c9e3:	sub    edx,edi
6400c9e5:	or     ecx,edx
6400c9e7:	jge    0x6400c9f1
6400c9e9:	push   edi
6400c9ea:	mov    ecx,ebp
6400c9ec:	call   0x64002280
6400c9f1:	mov    eax,DWORD PTR [esp+0x14]
6400c9f5:	push   ebx
6400c9f6:	mov    ebx,DWORD PTR [ebp+0x0]
6400c9f9:	add    esi,esi
6400c9fb:	push   esi
6400c9fc:	push   eax
6400c9fd:	push   esi
6400c9fe:	push   ebx
6400c9ff:	call   0x6400ecaa
6400ca04:	mov    eax,DWORD PTR [esp+0x34]
6400ca08:	mov    ecx,DWORD PTR [esp+0x30]
6400ca0c:	add    eax,eax
6400ca0e:	push   eax
6400ca0f:	push   ecx
6400ca10:	push   eax
6400ca11:	add    esi,ebx
6400ca13:	push   esi
6400ca14:	call   0x6400ecaa
6400ca19:	add    esp,0x20
6400ca1c:	test   edi,edi
6400ca1e:	pop    ebx
6400ca1f:	jl     0x6400ca39
6400ca21:	mov    eax,DWORD PTR [ebp+0x0]
6400ca24:	cmp    edi,DWORD PTR [eax-0x8]
6400ca27:	jg     0x6400ca39
6400ca29:	mov    DWORD PTR [eax-0xc],edi
6400ca2c:	mov    edx,DWORD PTR [ebp+0x0]
6400ca2f:	mov    WORD PTR [edx+edi*2],0x0
6400ca35:	pop    edi
6400ca36:	pop    esi
6400ca37:	pop    ebp
6400ca38:	ret    
6400ca39:	push   0x80070057
6400ca3e:	call   0x64001000
6400ca43:	int3   
6400ca44:	int3   
6400ca45:	int3   
6400ca46:	int3   
6400ca47:	int3   
6400ca48:	int3   
6400ca49:	int3   
6400ca4a:	int3   
6400ca4b:	int3   
6400ca4c:	int3   
6400ca4d:	int3   
6400ca4e:	int3   
6400ca4f:	int3   
6400ca50:	push   0xffffffff
6400ca52:	push   0x6401e6e9
6400ca57:	mov    eax,fs:0x0
6400ca5d:	push   eax
6400ca5e:	push   ecx
6400ca5f:	push   esi
6400ca60:	push   edi
6400ca61:	mov    eax,ds:0x64028038
6400ca66:	xor    eax,esp
6400ca68:	push   eax
6400ca69:	lea    eax,[esp+0x10]
6400ca6d:	mov    fs:0x0,eax
6400ca73:	mov    edi,DWORD PTR [esp+0x24]
6400ca77:	mov    DWORD PTR [esp+0xc],0x0
6400ca7f:	mov    eax,DWORD PTR [edi]
6400ca81:	mov    ecx,DWORD PTR [eax-0x10]
6400ca84:	test   ecx,ecx
6400ca86:	mov    DWORD PTR [esp+0x18],0x0
6400ca8e:	je     0x6400ca9b
6400ca90:	mov    edx,DWORD PTR [ecx]
6400ca92:	mov    eax,DWORD PTR [edx+0x10]
6400ca95:	call   eax
6400ca97:	test   eax,eax
6400ca99:	jne    0x6400caab
6400ca9b:	mov    edx,DWORD PTR ds:0x640294e0
6400caa1:	mov    eax,DWORD PTR [edx+0x10]
6400caa4:	mov    ecx,0x640294e0
6400caa9:	call   eax
6400caab:	xor    ecx,ecx
6400caad:	test   eax,eax
6400caaf:	setne  cl
6400cab2:	test   ecx,ecx
6400cab4:	jne    0x6400cac0
6400cab6:	push   0x80004005
6400cabb:	call   0x64001000
6400cac0:	mov    edx,DWORD PTR [eax]
6400cac2:	mov    ecx,eax
6400cac4:	mov    eax,DWORD PTR [edx+0xc]
6400cac7:	call   eax
6400cac9:	mov    esi,DWORD PTR [esp+0x20]
6400cacd:	add    eax,0x10
6400cad0:	mov    DWORD PTR [esi],eax
6400cad2:	mov    ecx,DWORD PTR [esp+0x28]
6400cad6:	mov    eax,DWORD PTR [ecx]
6400cad8:	mov    edx,DWORD PTR [eax-0xc]
6400cadb:	mov    ecx,DWORD PTR [edi]
6400cadd:	mov    edi,DWORD PTR [ecx-0xc]
6400cae0:	push   edx
6400cae1:	push   eax
6400cae2:	push   edi
6400cae3:	push   ecx
6400cae4:	push   esi
6400cae5:	mov    DWORD PTR [esp+0x2c],0x0
6400caed:	mov    DWORD PTR [esp+0x20],0x1
6400caf5:	call   0x6400c9c0
6400cafa:	add    esp,0x14
6400cafd:	mov    eax,esi
6400caff:	mov    ecx,DWORD PTR [esp+0x10]
6400cb03:	mov    DWORD PTR fs:0x0,ecx
6400cb0a:	pop    ecx
6400cb0b:	pop    edi
6400cb0c:	pop    esi
6400cb0d:	add    esp,0x10
6400cb10:	ret    
6400cb11:	int3   
6400cb12:	int3   
6400cb13:	int3   
6400cb14:	int3   
6400cb15:	int3   
6400cb16:	int3   
6400cb17:	int3   
6400cb18:	int3   
6400cb19:	int3   
6400cb1a:	int3   
6400cb1b:	int3   
6400cb1c:	int3   
6400cb1d:	int3   
6400cb1e:	int3   
6400cb1f:	int3   
6400cb20:	push   0xffffffff
6400cb22:	push   0x6401e729
6400cb27:	mov    eax,fs:0x0
6400cb2d:	push   eax
6400cb2e:	push   ecx
6400cb2f:	push   ebp
6400cb30:	push   esi
6400cb31:	push   edi
6400cb32:	mov    eax,ds:0x64028038
6400cb37:	xor    eax,esp
6400cb39:	push   eax
6400cb3a:	lea    eax,[esp+0x14]
6400cb3e:	mov    fs:0x0,eax
6400cb44:	mov    ebp,DWORD PTR [esp+0x28]
6400cb48:	mov    DWORD PTR [esp+0x10],0x0
6400cb50:	mov    eax,DWORD PTR [ebp+0x0]
6400cb53:	mov    ecx,DWORD PTR [eax-0x10]
6400cb56:	test   ecx,ecx
6400cb58:	mov    DWORD PTR [esp+0x1c],0x0
6400cb60:	je     0x6400cb6d
6400cb62:	mov    edx,DWORD PTR [ecx]
6400cb64:	mov    eax,DWORD PTR [edx+0x10]
6400cb67:	call   eax
6400cb69:	test   eax,eax
6400cb6b:	jne    0x6400cb7d
6400cb6d:	mov    edx,DWORD PTR ds:0x640294e0
6400cb73:	mov    eax,DWORD PTR [edx+0x10]
6400cb76:	mov    ecx,0x640294e0
6400cb7b:	call   eax
6400cb7d:	xor    ecx,ecx
6400cb7f:	test   eax,eax
6400cb81:	setne  cl
6400cb84:	test   ecx,ecx
6400cb86:	jne    0x6400cb92
6400cb88:	push   0x80004005
6400cb8d:	call   0x64001000
6400cb92:	mov    edx,DWORD PTR [eax]
6400cb94:	mov    ecx,eax
6400cb96:	mov    eax,DWORD PTR [edx+0xc]
6400cb99:	call   eax
6400cb9b:	mov    esi,DWORD PTR [esp+0x24]
6400cb9f:	add    eax,0x10
6400cba2:	mov    DWORD PTR [esi],eax
6400cba4:	mov    edi,DWORD PTR [esp+0x2c]
6400cba8:	test   edi,edi
6400cbaa:	mov    DWORD PTR [esp+0x1c],0x0
6400cbb2:	mov    DWORD PTR [esp+0x10],0x1
6400cbba:	jne    0x6400cbc0
6400cbbc:	xor    eax,eax
6400cbbe:	jmp    0x6400cbd4
6400cbc0:	mov    eax,edi
6400cbc2:	lea    edx,[eax+0x2]
6400cbc5:	mov    cx,WORD PTR [eax]
6400cbc8:	add    eax,0x2
6400cbcb:	test   cx,cx
6400cbce:	jne    0x6400cbc5
6400cbd0:	sub    eax,edx
6400cbd2:	sar    eax,1
6400cbd4:	mov    ecx,DWORD PTR [ebp+0x0]
6400cbd7:	mov    edx,DWORD PTR [ecx-0xc]
6400cbda:	push   eax
6400cbdb:	push   edi
6400cbdc:	push   edx
6400cbdd:	push   ecx
6400cbde:	push   esi
6400cbdf:	call   0x6400c9c0
6400cbe4:	add    esp,0x14
6400cbe7:	mov    eax,esi
6400cbe9:	mov    ecx,DWORD PTR [esp+0x14]
6400cbed:	mov    DWORD PTR fs:0x0,ecx
6400cbf4:	pop    ecx
6400cbf5:	pop    edi
6400cbf6:	pop    esi
6400cbf7:	pop    ebp
6400cbf8:	add    esp,0x10
6400cbfb:	ret    
6400cbfc:	int3   
6400cbfd:	int3   
6400cbfe:	int3   
6400cbff:	int3   
6400cc00:	mov    eax,DWORD PTR [esp+0x8]
6400cc04:	mov    ecx,DWORD PTR [esp+0x4]
6400cc08:	mov    edx,DWORD PTR [esp+0xc]
6400cc0c:	sub    eax,ecx
6400cc0e:	sar    eax,0x2
6400cc11:	lea    eax,[eax*4+0x0]
6400cc18:	push   esi
6400cc19:	lea    esi,[eax+edx*1]
6400cc1c:	je     0x6400cc2a
6400cc1e:	push   eax
6400cc1f:	push   ecx
6400cc20:	push   eax
6400cc21:	push   edx
6400cc22:	call   0x6400ed25
6400cc27:	add    esp,0x10
6400cc2a:	mov    eax,esi
6400cc2c:	pop    esi
6400cc2d:	ret    0xc
6400cc30:	push   esi
6400cc31:	mov    esi,DWORD PTR [esp+0xc]
6400cc35:	test   esi,esi
6400cc37:	push   edi
6400cc38:	mov    edi,DWORD PTR [esp+0xc]
6400cc3c:	mov    eax,esi
6400cc3e:	mov    ecx,edi
6400cc40:	jbe    0x6400cc56
6400cc42:	mov    edx,DWORD PTR [esp+0x14]
6400cc46:	push   ebx
6400cc47:	mov    ebx,DWORD PTR [edx]
6400cc49:	mov    DWORD PTR [ecx],ebx
6400cc4b:	sub    eax,0x1
6400cc4e:	add    ecx,0x4
6400cc51:	test   eax,eax
6400cc53:	ja     0x6400cc47
6400cc55:	pop    ebx
6400cc56:	lea    eax,[edi+esi*4]
6400cc59:	pop    edi
6400cc5a:	pop    esi
6400cc5b:	ret    0xc
6400cc5e:	int3   
6400cc5f:	int3   
6400cc60:	push   0xffffffff
6400cc62:	push   0x6401e758
6400cc67:	mov    eax,fs:0x0
6400cc6d:	push   eax
6400cc6e:	sub    esp,0x44
6400cc71:	mov    eax,ds:0x64028038
6400cc76:	xor    eax,esp
6400cc78:	push   eax
6400cc79:	lea    eax,[esp+0x48]
6400cc7d:	mov    fs:0x0,eax
6400cc83:	push   0x12
6400cc85:	push   0x64023b88
6400cc8a:	lea    ecx,[esp+0xc]
6400cc8e:	mov    DWORD PTR [esp+0x24],0xf
6400cc96:	mov    DWORD PTR [esp+0x20],0x0
6400cc9e:	mov    BYTE PTR [esp+0x10],0x0
6400cca3:	call   0x64001bb0
6400cca8:	lea    eax,[esp+0x4]
6400ccac:	push   eax
6400ccad:	lea    ecx,[esp+0x24]
6400ccb1:	mov    DWORD PTR [esp+0x54],0x0
6400ccb9:	call   0x64002530
6400ccbe:	push   0x64025ea8
6400ccc3:	lea    ecx,[esp+0x24]
6400ccc7:	push   ecx
6400ccc8:	mov    DWORD PTR [esp+0x28],0x6402130c
6400ccd0:	call   0x6400ef3d
6400ccd5:	int3   
6400ccd6:	int3   
6400ccd7:	int3   
6400ccd8:	int3   
6400ccd9:	int3   
6400ccda:	int3   
6400ccdb:	int3   
6400ccdc:	int3   
6400ccdd:	int3   
6400ccde:	int3   
6400ccdf:	int3   
6400cce0:	mov    eax,DWORD PTR [esp+0x10]
6400cce4:	push   ebx
6400cce5:	push   esi
6400cce6:	mov    esi,ecx
6400cce8:	mov    ecx,DWORD PTR [eax]
6400ccea:	mov    DWORD PTR [esp+0x18],ecx
6400ccee:	mov    ecx,DWORD PTR [esi+0x4]
6400ccf1:	test   ecx,ecx
6400ccf3:	push   edi
6400ccf4:	jne    0x6400ccfa
6400ccf6:	xor    edi,edi
6400ccf8:	jmp    0x6400cd02
6400ccfa:	mov    edi,DWORD PTR [esi+0xc]
6400ccfd:	sub    edi,ecx
6400ccff:	sar    edi,0x2
6400cd02:	mov    ebx,DWORD PTR [esp+0x18]
6400cd06:	test   ebx,ebx
6400cd08:	je     0x6400ce8f
6400cd0e:	test   ecx,ecx
6400cd10:	jne    0x6400cd16
6400cd12:	xor    eax,eax
6400cd14:	jmp    0x6400cd1e
6400cd16:	mov    eax,DWORD PTR [esi+0x8]
6400cd19:	sub    eax,ecx
6400cd1b:	sar    eax,0x2
6400cd1e:	mov    edx,0x3fffffff
6400cd23:	sub    edx,eax
6400cd25:	cmp    edx,ebx
6400cd27:	jae    0x6400cd2e
6400cd29:	call   0x6400cc60
6400cd2e:	test   ecx,ecx
6400cd30:	jne    0x6400cd36
6400cd32:	xor    eax,eax
6400cd34:	jmp    0x6400cd3e
6400cd36:	mov    eax,DWORD PTR [esi+0x8]
6400cd39:	sub    eax,ecx
6400cd3b:	sar    eax,0x2
6400cd3e:	add    eax,ebx
6400cd40:	cmp    edi,eax
6400cd42:	push   ebp
6400cd43:	jae    0x6400cdfd
6400cd49:	mov    eax,edi
6400cd4b:	shr    eax,1
6400cd4d:	mov    edx,0x3fffffff
6400cd52:	sub    edx,eax
6400cd54:	cmp    edx,edi
6400cd56:	jae    0x6400cd5c
6400cd58:	xor    edi,edi
6400cd5a:	jmp    0x6400cd5e
6400cd5c:	add    edi,eax
6400cd5e:	test   ecx,ecx
6400cd60:	jne    0x6400cd66
6400cd62:	xor    eax,eax
6400cd64:	jmp    0x6400cd6e
6400cd66:	mov    eax,DWORD PTR [esi+0x8]
6400cd69:	sub    eax,ecx
6400cd6b:	sar    eax,0x2
6400cd6e:	add    eax,ebx
6400cd70:	cmp    edi,eax
6400cd72:	jae    0x6400cd86
6400cd74:	test   ecx,ecx
6400cd76:	jne    0x6400cd7c
6400cd78:	xor    edi,edi
6400cd7a:	jmp    0x6400cd84
6400cd7c:	mov    edi,DWORD PTR [esi+0x8]
6400cd7f:	sub    edi,ecx
6400cd81:	sar    edi,0x2
6400cd84:	add    edi,ebx
6400cd86:	push   0x0
6400cd88:	push   edi
6400cd89:	call   0x6400c8b0
6400cd8e:	mov    ecx,DWORD PTR [esi+0x4]
6400cd91:	add    esp,0x8
6400cd94:	mov    ebp,eax
6400cd96:	mov    eax,DWORD PTR [esp+0x18]
6400cd9a:	push   ebp
6400cd9b:	push   eax
6400cd9c:	push   ecx
6400cd9d:	mov    ecx,esi
6400cd9f:	call   0x6400cc00
6400cda4:	lea    edx,[esp+0x20]
6400cda8:	push   edx
6400cda9:	push   ebx
6400cdaa:	push   eax
6400cdab:	mov    ecx,esi
6400cdad:	call   0x6400cc30
6400cdb2:	mov    ecx,DWORD PTR [esp+0x18]
6400cdb6:	push   eax
6400cdb7:	mov    eax,DWORD PTR [esi+0x8]
6400cdba:	push   eax
6400cdbb:	push   ecx
6400cdbc:	mov    ecx,esi
6400cdbe:	call   0x6400cc00
6400cdc3:	mov    eax,DWORD PTR [esi+0x4]
6400cdc6:	test   eax,eax
6400cdc8:	jne    0x6400cdce
6400cdca:	xor    ecx,ecx
6400cdcc:	jmp    0x6400cdd6
6400cdce:	mov    ecx,DWORD PTR [esi+0x8]
6400cdd1:	sub    ecx,eax
6400cdd3:	sar    ecx,0x2
6400cdd6:	add    ebx,ecx
6400cdd8:	test   eax,eax
6400cdda:	je     0x6400cde5
6400cddc:	push   eax
6400cddd:	call   0x6400eb52
6400cde2:	add    esp,0x4
6400cde5:	lea    edx,[ebp+edi*4+0x0]
6400cde9:	lea    eax,[ebp+ebx*4+0x0]
6400cded:	mov    DWORD PTR [esi+0x4],ebp
6400cdf0:	pop    ebp
6400cdf1:	pop    edi
6400cdf2:	mov    DWORD PTR [esi+0xc],edx
6400cdf5:	mov    DWORD PTR [esi+0x8],eax
6400cdf8:	pop    esi
6400cdf9:	pop    ebx
6400cdfa:	ret    0x10
6400cdfd:	mov    ebp,DWORD PTR [esi+0x8]
6400ce00:	mov    edi,DWORD PTR [esp+0x18]
6400ce04:	mov    ecx,ebp
6400ce06:	sub    ecx,edi
6400ce08:	sar    ecx,0x2
6400ce0b:	lea    eax,[ebx*4+0x0]
6400ce12:	cmp    ecx,ebx
6400ce14:	mov    DWORD PTR [esp+0x1c],eax
6400ce18:	mov    ecx,esi
6400ce1a:	jae    0x6400ce62
6400ce1c:	add    eax,edi
6400ce1e:	push   eax
6400ce1f:	push   ebp
6400ce20:	push   edi
6400ce21:	call   0x6400cc00
6400ce26:	mov    eax,DWORD PTR [esi+0x8]
6400ce29:	mov    ecx,eax
6400ce2b:	sub    ecx,edi
6400ce2d:	sar    ecx,0x2
6400ce30:	lea    edx,[esp+0x20]
6400ce34:	push   edx
6400ce35:	sub    ebx,ecx
6400ce37:	push   ebx
6400ce38:	push   eax
6400ce39:	mov    ecx,esi
6400ce3b:	call   0x6400cc30
6400ce40:	mov    eax,DWORD PTR [esp+0x1c]
6400ce44:	add    DWORD PTR [esi+0x8],eax
6400ce47:	mov    esi,DWORD PTR [esi+0x8]
6400ce4a:	lea    edx,[esp+0x20]
6400ce4e:	push   edx
6400ce4f:	sub    esi,eax
6400ce51:	push   esi
6400ce52:	push   edi
6400ce53:	call   0x6400c970
6400ce58:	add    esp,0xc
6400ce5b:	pop    ebp
6400ce5c:	pop    edi
6400ce5d:	pop    esi
6400ce5e:	pop    ebx
6400ce5f:	ret    0x10
6400ce62:	push   ebp
6400ce63:	mov    ebx,ebp
6400ce65:	sub    ebx,eax
6400ce67:	push   ebp
6400ce68:	push   ebx
6400ce69:	call   0x6400cc00
6400ce6e:	push   ebp
6400ce6f:	push   ebx
6400ce70:	push   edi
6400ce71:	mov    DWORD PTR [esi+0x8],eax
6400ce74:	call   0x6400c990
6400ce79:	mov    ecx,DWORD PTR [esp+0x28]
6400ce7d:	lea    eax,[esp+0x2c]
6400ce81:	push   eax
6400ce82:	add    ecx,edi
6400ce84:	push   ecx
6400ce85:	push   edi
6400ce86:	call   0x6400c970
6400ce8b:	add    esp,0x18
6400ce8e:	pop    ebp
6400ce8f:	pop    edi
6400ce90:	pop    esi
6400ce91:	pop    ebx
6400ce92:	ret    0x10
6400ce95:	int3   
6400ce96:	int3   
6400ce97:	int3   
6400ce98:	int3   
6400ce99:	int3   
6400ce9a:	int3   
6400ce9b:	int3   
6400ce9c:	int3   
6400ce9d:	int3   
6400ce9e:	int3   
6400ce9f:	int3   
6400cea0:	push   ebp
6400cea1:	mov    ebp,esp
6400cea3:	push   0xffffffff
6400cea5:	push   0x6401e7b0
6400ceaa:	mov    eax,fs:0x0
6400ceb0:	push   eax
6400ceb1:	sub    esp,0x78
6400ceb4:	mov    eax,ds:0x64028038
6400ceb9:	xor    eax,ebp
6400cebb:	mov    DWORD PTR [ebp-0x14],eax
6400cebe:	push   ebx
6400cebf:	push   esi
6400cec0:	push   edi
6400cec1:	push   eax
6400cec2:	lea    eax,[ebp-0xc]
6400cec5:	mov    fs:0x0,eax
6400cecb:	mov    DWORD PTR [ebp-0x10],esp
6400cece:	call   DWORD PTR ds:0x64028008
6400ced4:	push   0x64021420
6400ced9:	lea    ecx,[ebp-0x20]
6400cedc:	mov    DWORD PTR [ebp-0x30],eax
6400cedf:	mov    DWORD PTR [ebp-0x4],0x0
6400cee6:	call   0x640017e0
6400ceeb:	mov    eax,ds:0x640294e0
6400cef0:	mov    edx,DWORD PTR [eax+0xc]
6400cef3:	mov    ecx,0x640294e0
6400cef8:	mov    BYTE PTR [ebp-0x4],0x1
6400cefc:	call   edx
6400cefe:	add    eax,0x10
6400cf01:	mov    DWORD PTR [ebp-0x1c],eax
6400cf04:	lea    eax,[ebp-0x1c]
6400cf07:	push   eax
6400cf08:	lea    ecx,[ebp-0x20]
6400cf0b:	push   ecx
6400cf0c:	lea    edx,[ebp-0x18]
6400cf0f:	push   edx
6400cf10:	mov    BYTE PTR [ebp-0x4],0x2
6400cf14:	call   0x64001370
6400cf19:	add    esp,0xc
6400cf1c:	lea    eax,[ebp-0x18]
6400cf1f:	push   0x6402358c
6400cf24:	push   eax
6400cf25:	mov    BYTE PTR [ebp-0x4],0x3
6400cf29:	call   0x6400c910
6400cf2e:	add    esp,0x8
6400cf31:	test   al,al
6400cf33:	je     0x6400d0de
6400cf39:	mov    esi,DWORD PTR [ebp-0x1c]
6400cf3c:	call   0x6400a900
6400cf41:	push   esi
6400cf42:	call   eax
6400cf44:	mov    eax,DWORD PTR [ebp+0x8]
6400cf47:	cmp    DWORD PTR [eax+0x18],0x10
6400cf4b:	mov    ecx,DWORD PTR [eax+0x14]
6400cf4e:	push   ecx
6400cf4f:	jb     0x6400cf56
6400cf51:	mov    eax,DWORD PTR [eax+0x4]
6400cf54:	jmp    0x6400cf59
6400cf56:	add    eax,0x4
6400cf59:	push   eax
6400cf5a:	mov    eax,DWORD PTR [ebp-0x18]
6400cf5d:	push   ecx
6400cf5e:	add    eax,0xfffffff0
6400cf61:	mov    DWORD PTR [ebp-0x24],esp
6400cf64:	mov    esi,esp
6400cf66:	push   eax
6400cf67:	call   0x64001d20
6400cf6c:	add    eax,0x10
6400cf6f:	add    esp,0x4
6400cf72:	mov    DWORD PTR [esi],eax
6400cf74:	call   0x64001630
6400cf79:	add    esp,0xc
6400cf7c:	lea    ecx,[ebp-0x24]
6400cf7f:	push   0x0
6400cf81:	push   ecx
6400cf82:	call   0x64002d00
6400cf87:	add    esp,0x8
6400cf8a:	push   0x64021408
6400cf8f:	push   eax
6400cf90:	lea    edx,[ebp-0x2c]
6400cf93:	push   edx
6400cf94:	mov    BYTE PTR [ebp-0x4],0x4
6400cf98:	call   0x6400cb20
6400cf9d:	add    esp,0xc
6400cfa0:	mov    eax,DWORD PTR [ebp-0x24]
6400cfa3:	mov    bl,0x6
6400cfa5:	add    eax,0xfffffff0
6400cfa8:	mov    BYTE PTR [ebp-0x4],bl
6400cfab:	lea    ecx,[eax+0xc]
6400cfae:	or     edx,0xffffffff
6400cfb1:	lock xadd DWORD PTR [ecx],edx
6400cfb5:	dec    edx
6400cfb6:	test   edx,edx
6400cfb8:	jg     0x6400cfc4
6400cfba:	mov    ecx,DWORD PTR [eax]
6400cfbc:	mov    edx,DWORD PTR [ecx]
6400cfbe:	push   eax
6400cfbf:	mov    eax,DWORD PTR [edx+0x4]
6400cfc2:	call   eax
6400cfc4:	mov    eax,DWORD PTR [ebp-0x18]
6400cfc7:	test   eax,eax
6400cfc9:	mov    edi,eax
6400cfcb:	je     0x6400cffd
6400cfcd:	push   eax
6400cfce:	call   DWORD PTR ds:0x64021054
6400cfd4:	add    eax,0x1
6400cfd7:	cmp    eax,0x3fffffff
6400cfdc:	jle    0x6400cfe2
6400cfde:	xor    eax,eax
6400cfe0:	jmp    0x6400cffd
6400cfe2:	lea    esi,[eax+eax*1]
6400cfe5:	mov    eax,esi
6400cfe7:	call   0x6400fad0
6400cfec:	mov    ecx,DWORD PTR [ebp-0x30]
6400cfef:	mov    DWORD PTR [ebp-0x10],esp
6400cff2:	mov    eax,esp
6400cff4:	push   ecx
6400cff5:	push   esi
6400cff6:	push   edi
6400cff7:	push   eax
6400cff8:	call   0x640023b0
6400cffd:	push   eax
6400cffe:	lea    ecx,[ebp-0x28]
6400d001:	call   0x64003730
6400d006:	lea    edx,[ebp-0x2c]
6400d009:	push   edx
6400d00a:	lea    eax,[ebp-0x28]
6400d00d:	push   eax
6400d00e:	mov    BYTE PTR [ebp-0x4],0x7
6400d012:	call   0x64001780
6400d017:	mov    eax,DWORD PTR [ebp-0x28]
6400d01a:	add    eax,0xfffffff0
6400d01d:	add    esp,0x8
6400d020:	mov    BYTE PTR [ebp-0x4],bl
6400d023:	lea    ecx,[eax+0xc]
6400d026:	or     edx,0xffffffff
6400d029:	lock xadd DWORD PTR [ecx],edx
6400d02d:	dec    edx
6400d02e:	test   edx,edx
6400d030:	jg     0x6400d03c
6400d032:	mov    ecx,DWORD PTR [eax]
6400d034:	mov    edx,DWORD PTR [ecx]
6400d036:	push   eax
6400d037:	mov    eax,DWORD PTR [edx+0x4]
6400d03a:	call   eax
6400d03c:	xor    eax,eax
6400d03e:	push   0x40
6400d040:	push   eax
6400d041:	lea    ecx,[ebp-0x80]
6400d044:	push   ecx
6400d045:	mov    DWORD PTR [ebp-0x40],eax
6400d048:	mov    DWORD PTR [ebp-0x3c],eax
6400d04b:	mov    DWORD PTR [ebp-0x38],eax
6400d04e:	mov    DWORD PTR [ebp-0x34],eax
6400d051:	call   0x6400fa50
6400d056:	mov    esi,DWORD PTR [ebp-0x18]
6400d059:	add    esp,0xc
6400d05c:	mov    DWORD PTR [ebp-0x84],0x44
6400d066:	call   0x6400a740
6400d06b:	lea    edx,[ebp-0x40]
6400d06e:	push   edx
6400d06f:	lea    ecx,[ebp-0x84]
6400d075:	push   ecx
6400d076:	push   0x0
6400d078:	push   0x0
6400d07a:	push   0x0
6400d07c:	push   0x0
6400d07e:	push   0x0
6400d080:	push   0x0
6400d082:	push   0x0
6400d084:	push   esi
6400d085:	call   eax
6400d087:	test   eax,eax
6400d089:	je     0x6400d09d
6400d08b:	mov    edx,DWORD PTR [ebp-0x3c]
6400d08e:	mov    esi,DWORD PTR ds:0x64021040
6400d094:	push   edx
6400d095:	call   esi
6400d097:	mov    eax,DWORD PTR [ebp-0x40]
6400d09a:	push   eax
6400d09b:	call   esi
6400d09d:	mov    esi,DWORD PTR [ebp-0x18]
6400d0a0:	call   0x6400a820
6400d0a5:	push   0x4
6400d0a7:	push   0x0
6400d0a9:	push   esi
6400d0aa:	call   eax
6400d0ac:	mov    esi,DWORD PTR [ebp-0x1c]
6400d0af:	call   0x6400a820
6400d0b4:	push   0x4
6400d0b6:	push   0x0
6400d0b8:	push   esi
6400d0b9:	call   eax
6400d0bb:	mov    eax,DWORD PTR [ebp-0x2c]
6400d0be:	add    eax,0xfffffff0
6400d0c1:	mov    BYTE PTR [ebp-0x4],0x3
6400d0c5:	lea    ecx,[eax+0xc]
6400d0c8:	or     edx,0xffffffff
6400d0cb:	lock xadd DWORD PTR [ecx],edx
6400d0cf:	dec    edx
6400d0d0:	test   edx,edx
6400d0d2:	jg     0x6400d0de
6400d0d4:	mov    ecx,DWORD PTR [eax]
6400d0d6:	mov    edx,DWORD PTR [ecx]
6400d0d8:	push   eax
6400d0d9:	mov    eax,DWORD PTR [edx+0x4]
6400d0dc:	call   eax
6400d0de:	mov    eax,DWORD PTR [ebp-0x18]
6400d0e1:	add    eax,0xfffffff0
6400d0e4:	mov    BYTE PTR [ebp-0x4],0x2
6400d0e8:	lea    ecx,[eax+0xc]
6400d0eb:	or     edx,0xffffffff
6400d0ee:	lock xadd DWORD PTR [ecx],edx
6400d0f2:	dec    edx
6400d0f3:	test   edx,edx
6400d0f5:	jg     0x6400d101
6400d0f7:	mov    ecx,DWORD PTR [eax]
6400d0f9:	mov    edx,DWORD PTR [ecx]
6400d0fb:	push   eax
6400d0fc:	mov    eax,DWORD PTR [edx+0x4]
6400d0ff:	call   eax
6400d101:	mov    eax,DWORD PTR [ebp-0x1c]
6400d104:	add    eax,0xfffffff0
6400d107:	mov    BYTE PTR [ebp-0x4],0x1
6400d10b:	lea    ecx,[eax+0xc]
6400d10e:	or     edx,0xffffffff
6400d111:	lock xadd DWORD PTR [ecx],edx
6400d115:	dec    edx
6400d116:	test   edx,edx
6400d118:	jg     0x6400d124
6400d11a:	mov    ecx,DWORD PTR [eax]
6400d11c:	mov    edx,DWORD PTR [ecx]
6400d11e:	push   eax
6400d11f:	mov    eax,DWORD PTR [edx+0x4]
6400d122:	call   eax
6400d124:	mov    eax,DWORD PTR [ebp-0x20]
6400d127:	add    eax,0xfffffff0
6400d12a:	mov    BYTE PTR [ebp-0x4],0x0
6400d12e:	lea    ecx,[eax+0xc]
6400d131:	or     edx,0xffffffff
6400d134:	lock xadd DWORD PTR [ecx],edx
6400d138:	dec    edx
6400d139:	test   edx,edx
6400d13b:	jg     0x6400d147
6400d13d:	mov    ecx,DWORD PTR [eax]
6400d13f:	mov    edx,DWORD PTR [ecx]
6400d141:	push   eax
6400d142:	mov    eax,DWORD PTR [edx+0x4]
6400d145:	call   eax
6400d147:	lea    esp,[ebp-0x94]
6400d14d:	mov    ecx,DWORD PTR [ebp-0xc]
6400d150:	mov    DWORD PTR fs:0x0,ecx
6400d157:	pop    ecx
6400d158:	pop    edi
6400d159:	pop    esi
6400d15a:	pop    ebx
6400d15b:	mov    ecx,DWORD PTR [ebp-0x14]
6400d15e:	xor    ecx,ebp
6400d160:	call   0x6400f34e
6400d165:	mov    esp,ebp
6400d167:	pop    ebp
6400d168:	ret    
6400d169:	mov    eax,0x6400d147
6400d16e:	ret    
6400d16f:	int3   
6400d170:	push   ecx
6400d171:	push   ebx
6400d172:	push   ebp
6400d173:	mov    ebp,DWORD PTR [esp+0x14]
6400d177:	push   esi
6400d178:	mov    esi,ecx
6400d17a:	push   edi
6400d17b:	mov    edi,DWORD PTR [esi+0x4]
6400d17e:	test   edi,edi
6400d180:	je     0x6400d18e
6400d182:	mov    eax,DWORD PTR [esi+0x8]
6400d185:	mov    ecx,eax
6400d187:	sub    ecx,edi
6400d189:	sar    ecx,0x2
6400d18c:	jne    0x6400d192
6400d18e:	xor    ebx,ebx
6400d190:	jmp    0x6400d1b1
6400d192:	cmp    edi,eax
6400d194:	jbe    0x6400d19b
6400d196:	call   0x6400eeaa
6400d19b:	test   ebp,ebp
6400d19d:	je     0x6400d1a3
6400d19f:	cmp    ebp,esi
6400d1a1:	je     0x6400d1a8
6400d1a3:	call   0x6400eeaa
6400d1a8:	mov    ebx,DWORD PTR [esp+0x20]
6400d1ac:	sub    ebx,edi
6400d1ae:	sar    ebx,0x2
6400d1b1:	mov    edx,DWORD PTR [esp+0x24]
6400d1b5:	mov    eax,DWORD PTR [esp+0x20]
6400d1b9:	push   edx
6400d1ba:	push   0x1
6400d1bc:	push   eax
6400d1bd:	push   ebp
6400d1be:	mov    ecx,esi
6400d1c0:	call   0x6400cce0
6400d1c5:	mov    edi,DWORD PTR [esi+0x4]
6400d1c8:	cmp    edi,DWORD PTR [esi+0x8]
6400d1cb:	jbe    0x6400d1d2
6400d1cd:	call   0x6400eeaa
6400d1d2:	mov    DWORD PTR [esp+0x20],edi
6400d1d6:	lea    edi,[edi+ebx*4]
6400d1d9:	cmp    edi,DWORD PTR [esi+0x8]
6400d1dc:	ja     0x6400d1e3
6400d1de:	cmp    edi,DWORD PTR [esi+0x4]
6400d1e1:	jae    0x6400d1e8
6400d1e3:	call   0x6400eeaa
6400d1e8:	mov    eax,DWORD PTR [esp+0x18]
6400d1ec:	mov    DWORD PTR [eax+0x4],edi
6400d1ef:	pop    edi
6400d1f0:	mov    DWORD PTR [eax],esi
6400d1f2:	pop    esi
6400d1f3:	pop    ebp
6400d1f4:	pop    ebx
6400d1f5:	pop    ecx
6400d1f6:	ret    0x10
6400d1f9:	int3   
6400d1fa:	int3   
6400d1fb:	int3   
6400d1fc:	int3   
6400d1fd:	int3   
6400d1fe:	int3   
6400d1ff:	int3   
6400d200:	sub    esp,0x8
6400d203:	push   esi
6400d204:	mov    esi,ecx
6400d206:	mov    edx,DWORD PTR [esi+0x4]
6400d209:	test   edx,edx
6400d20b:	jne    0x6400d211
6400d20d:	xor    ecx,ecx
6400d20f:	jmp    0x6400d219
6400d211:	mov    ecx,DWORD PTR [esi+0x8]
6400d214:	sub    ecx,edx
6400d216:	sar    ecx,0x2
6400d219:	test   edx,edx
6400d21b:	je     0x6400d241
6400d21d:	mov    eax,DWORD PTR [esi+0xc]
6400d220:	sub    eax,edx
6400d222:	sar    eax,0x2
6400d225:	cmp    ecx,eax
6400d227:	jae    0x6400d241
6400d229:	mov    eax,DWORD PTR [esi+0x8]
6400d22c:	mov    ecx,DWORD PTR [esp+0x10]
6400d230:	mov    edx,DWORD PTR [ecx]
6400d232:	mov    DWORD PTR [eax],edx
6400d234:	add    eax,0x4
6400d237:	mov    DWORD PTR [esi+0x8],eax
6400d23a:	pop    esi
6400d23b:	add    esp,0x8
6400d23e:	ret    0x4
6400d241:	push   edi
6400d242:	mov    edi,DWORD PTR [esi+0x8]
6400d245:	cmp    edx,edi
6400d247:	jbe    0x6400d24e
6400d249:	call   0x6400eeaa
6400d24e:	mov    eax,DWORD PTR [esp+0x14]
6400d252:	push   eax
6400d253:	push   edi
6400d254:	push   esi
6400d255:	lea    ecx,[esp+0x14]
6400d259:	push   ecx
6400d25a:	mov    ecx,esi
6400d25c:	call   0x6400d170
6400d261:	pop    edi
6400d262:	pop    esi
6400d263:	add    esp,0x8
6400d266:	ret    0x4
6400d269:	int3   
6400d26a:	int3   
6400d26b:	int3   
6400d26c:	int3   
6400d26d:	int3   
6400d26e:	int3   
6400d26f:	int3   
6400d270:	push   ecx
6400d271:	push   esi
6400d272:	mov    esi,ecx
6400d274:	mov    eax,DWORD PTR [esi+0x4]
6400d277:	test   eax,eax
6400d279:	je     0x6400d297
6400d27b:	mov    ecx,DWORD PTR [esp+0x4]
6400d27f:	mov    edx,DWORD PTR [esi+0x8]
6400d282:	push   ecx
6400d283:	push   esi
6400d284:	push   edx
6400d285:	push   eax
6400d286:	call   0x64008940
6400d28b:	mov    eax,DWORD PTR [esi+0x4]
6400d28e:	push   eax
6400d28f:	call   0x6400eb52
6400d294:	add    esp,0x14
6400d297:	mov    DWORD PTR [esi+0x4],0x0
6400d29e:	mov    DWORD PTR [esi+0x8],0x0
6400d2a5:	mov    DWORD PTR [esi+0xc],0x0
6400d2ac:	pop    esi
6400d2ad:	pop    ecx
6400d2ae:	ret    
6400d2af:	int3   
6400d2b0:	push   0xffffffff
6400d2b2:	push   0x6401e7ee
6400d2b7:	mov    eax,fs:0x0
6400d2bd:	push   eax
6400d2be:	push   ecx
6400d2bf:	push   ebx
6400d2c0:	push   esi
6400d2c1:	push   edi
6400d2c2:	mov    eax,ds:0x64028038
6400d2c7:	xor    eax,esp
6400d2c9:	push   eax
6400d2ca:	lea    eax,[esp+0x14]
6400d2ce:	mov    fs:0x0,eax
6400d2d4:	mov    eax,0x1
6400d2d9:	test   BYTE PTR ds:0x64029468,al
6400d2df:	jne    0x6400d31a
6400d2e1:	or     DWORD PTR ds:0x64029468,eax
6400d2e7:	push   0x640201d0
6400d2ec:	mov    DWORD PTR ds:0x6402945c,0x0
6400d2f6:	mov    DWORD PTR ds:0x64029460,0x0
6400d300:	mov    DWORD PTR ds:0x64029464,0x0
6400d30a:	call   0x6400f481
6400d30f:	add    esp,0x4
6400d312:	mov    DWORD PTR [esp+0x1c],0xffffffff
6400d31a:	mov    esi,DWORD PTR ds:0x6402945c
6400d320:	test   esi,esi
6400d322:	je     0x6400d333
6400d324:	mov    edi,DWORD PTR ds:0x64029460
6400d32a:	mov    eax,edi
6400d32c:	sub    eax,esi
6400d32e:	sar    eax,0x2
6400d331:	jne    0x6400d39f
6400d333:	push   0x64021444
6400d338:	push   0xc
6400d33a:	push   0x64021434
6400d33f:	call   0x64003970
6400d344:	add    esp,0xc
6400d347:	push   eax
6400d348:	call   DWORD PTR ds:0x640211b8
6400d34e:	lea    ecx,[esp+0x10]
6400d352:	push   ecx
6400d353:	mov    ecx,0x64029458
6400d358:	mov    DWORD PTR [esp+0x14],eax
6400d35c:	call   0x6400d200
6400d361:	call   DWORD PTR ds:0x6402109c
6400d367:	push   eax
6400d368:	call   0x6400fafc
6400d36d:	mov    eax,ds:0x6402945c
6400d372:	add    esp,0x4
6400d375:	test   eax,eax
6400d377:	jne    0x6400d37d
6400d379:	xor    esi,esi
6400d37b:	jmp    0x6400d388
6400d37d:	mov    esi,DWORD PTR ds:0x64029460
6400d383:	sub    esi,eax
6400d385:	sar    esi,0x2
6400d388:	call   0x6400fb09
6400d38d:	mov    edi,DWORD PTR ds:0x64029460
6400d393:	xor    edx,edx
6400d395:	div    esi
6400d397:	mov    esi,DWORD PTR ds:0x6402945c
6400d39d:	jmp    0x6400d3a5
6400d39f:	mov    edx,DWORD PTR ds:0x64029454
6400d3a5:	test   esi,esi
6400d3a7:	jne    0x6400d3ad
6400d3a9:	xor    ecx,ecx
6400d3ab:	jmp    0x6400d3b4
6400d3ad:	mov    ecx,edi
6400d3af:	sub    ecx,esi
6400d3b1:	sar    ecx,0x2
6400d3b4:	lea    eax,[edx+0x1]
6400d3b7:	xor    edx,edx
6400d3b9:	div    ecx
6400d3bb:	test   esi,esi
6400d3bd:	mov    DWORD PTR ds:0x64029454,edx
6400d3c3:	mov    ebx,edx
6400d3c5:	je     0x6400d3d0
6400d3c7:	sub    edi,esi
6400d3c9:	sar    edi,0x2
6400d3cc:	cmp    edx,edi
6400d3ce:	jb     0x6400d3f1
6400d3d0:	call   0x6400eeaa
6400d3d5:	mov    edx,DWORD PTR ds:0x6402945c
6400d3db:	mov    eax,DWORD PTR [edx+ebx*4]
6400d3de:	mov    ecx,DWORD PTR [esp+0x14]
6400d3e2:	mov    DWORD PTR fs:0x0,ecx
6400d3e9:	pop    ecx
6400d3ea:	pop    edi
6400d3eb:	pop    esi
6400d3ec:	pop    ebx
6400d3ed:	add    esp,0x10
6400d3f0:	ret    
6400d3f1:	mov    eax,DWORD PTR [esi+ebx*4]
6400d3f4:	mov    ecx,DWORD PTR [esp+0x14]
6400d3f8:	mov    DWORD PTR fs:0x0,ecx
6400d3ff:	pop    ecx
6400d400:	pop    edi
6400d401:	pop    esi
6400d402:	pop    ebx
6400d403:	add    esp,0x10
6400d406:	ret    
6400d407:	int3   
6400d408:	int3   
6400d409:	int3   
6400d40a:	int3   
6400d40b:	int3   
6400d40c:	int3   
6400d40d:	int3   
6400d40e:	int3   
6400d40f:	int3   
6400d410:	push   ebp
6400d411:	mov    ebp,esp
6400d413:	push   0xffffffff
6400d415:	push   0x6401e818
6400d41a:	mov    eax,fs:0x0
6400d420:	push   eax
6400d421:	sub    esp,0x8
6400d424:	push   ebx
6400d425:	push   esi
6400d426:	push   edi
6400d427:	mov    eax,ds:0x64028038
6400d42c:	xor    eax,ebp
6400d42e:	push   eax
6400d42f:	lea    eax,[ebp-0xc]
6400d432:	mov    fs:0x0,eax
6400d438:	mov    DWORD PTR [ebp-0x10],esp
6400d43b:	xor    ebx,ebx
6400d43d:	mov    DWORD PTR [ebp-0x4],ebx
6400d440:	call   0x6400d2b0
6400d445:	lea    ecx,[ebp-0x14]
6400d448:	mov    edi,eax
6400d44a:	call   0x640069b0
6400d44f:	mov    eax,DWORD PTR [ebp+0x8]
6400d452:	cmp    DWORD PTR [eax+0x18],0x10
6400d456:	mov    ecx,DWORD PTR [eax+0x14]
6400d459:	mov    BYTE PTR [ebp-0x4],0x1
6400d45d:	jb     0x6400d464
6400d45f:	mov    eax,DWORD PTR [eax+0x4]
6400d462:	jmp    0x6400d467
6400d464:	add    eax,0x4
6400d467:	mov    esi,DWORD PTR [ebp+0xc]
6400d46a:	push   0xffffffff
6400d46c:	push   esi
6400d46d:	add    ecx,0x1
6400d470:	push   ecx
6400d471:	push   eax
6400d472:	push   edi
6400d473:	lea    ecx,[ebp-0x14]
6400d476:	call   0x640069d0
6400d47b:	cmp    al,bl
6400d47d:	je     0x6400d49e
6400d47f:	lea    ecx,[ebp-0x14]
6400d482:	mov    BYTE PTR [ebp-0x4],bl
6400d485:	call   0x640069c0
6400d48a:	mov    al,0x1
6400d48c:	mov    ecx,DWORD PTR [ebp-0xc]
6400d48f:	mov    DWORD PTR fs:0x0,ecx
6400d496:	pop    ecx
6400d497:	pop    edi
6400d498:	pop    esi
6400d499:	pop    ebx
6400d49a:	mov    esp,ebp
6400d49c:	pop    ebp
6400d49d:	ret    
6400d49e:	push   ebx
6400d49f:	push   0x6402358e
6400d4a4:	mov    ecx,esi
6400d4a6:	call   0x64001bb0
6400d4ab:	lea    ecx,[ebp-0x14]
6400d4ae:	mov    BYTE PTR [ebp-0x4],bl
6400d4b1:	call   0x640069c0
6400d4b6:	xor    al,al
6400d4b8:	mov    ecx,DWORD PTR [ebp-0xc]
6400d4bb:	mov    DWORD PTR fs:0x0,ecx
6400d4c2:	pop    ecx
6400d4c3:	pop    edi
6400d4c4:	pop    esi
6400d4c5:	pop    ebx
6400d4c6:	mov    esp,ebp
6400d4c8:	pop    ebp
6400d4c9:	ret    
6400d4ca:	mov    eax,0x6400d4b6
6400d4cf:	ret    
6400d4d0:	push   ecx
6400d4d1:	push   esi
6400d4d2:	push   0x6402149c
6400d4d7:	push   0x17
6400d4d9:	push   0x64021484
6400d4de:	mov    DWORD PTR [esp+0x10],0x0
6400d4e6:	call   0x64003970
6400d4eb:	mov    esi,DWORD PTR [esp+0x18]
6400d4ef:	add    esp,0xc
6400d4f2:	push   eax
6400d4f3:	mov    ecx,esi
6400d4f5:	call   0x64003730
6400d4fa:	mov    eax,esi
6400d4fc:	pop    esi
6400d4fd:	pop    ecx
6400d4fe:	ret    
6400d4ff:	int3   
6400d500:	push   0xffffffff
6400d502:	push   0x6401e848
6400d507:	mov    eax,fs:0x0
6400d50d:	push   eax
6400d50e:	push   ecx
6400d50f:	push   esi
6400d510:	mov    eax,ds:0x64028038
6400d515:	xor    eax,esp
6400d517:	push   eax
6400d518:	lea    eax,[esp+0xc]
6400d51c:	mov    fs:0x0,eax
6400d522:	lea    eax,[esp+0x8]
6400d526:	push   eax
6400d527:	call   0x6400d4d0
6400d52c:	add    esp,0x4
6400d52f:	mov    eax,DWORD PTR [eax]
6400d531:	push   eax
6400d532:	push   0x0
6400d534:	mov    DWORD PTR [esp+0x1c],0x0
6400d53c:	call   0x64003630
6400d541:	push   eax
6400d542:	call   DWORD PTR ds:0x64021060
6400d548:	mov    esi,eax
6400d54a:	mov    eax,DWORD PTR [esp+0x8]
6400d54e:	add    eax,0xfffffff0
6400d551:	mov    DWORD PTR [esp+0x14],0xffffffff
6400d559:	lea    ecx,[eax+0xc]
6400d55c:	or     edx,0xffffffff
6400d55f:	lock xadd DWORD PTR [ecx],edx
6400d563:	dec    edx
6400d564:	test   edx,edx
6400d566:	jg     0x6400d572
6400d568:	mov    ecx,DWORD PTR [eax]
6400d56a:	mov    edx,DWORD PTR [ecx]
6400d56c:	push   eax
6400d56d:	mov    eax,DWORD PTR [edx+0x4]
6400d570:	call   eax
6400d572:	test   esi,esi
6400d574:	jne    0x6400d589
6400d576:	xor    al,al
6400d578:	mov    ecx,DWORD PTR [esp+0xc]
6400d57c:	mov    DWORD PTR fs:0x0,ecx
6400d583:	pop    ecx
6400d584:	pop    esi
6400d585:	add    esp,0x10
6400d588:	ret    
6400d589:	push   0x0
6400d58b:	push   esi
6400d58c:	call   DWORD PTR ds:0x6402105c
6400d592:	test   eax,eax
6400d594:	sete   al
6400d597:	mov    ecx,DWORD PTR [esp+0xc]
6400d59b:	mov    DWORD PTR fs:0x0,ecx
6400d5a2:	pop    ecx
6400d5a3:	pop    esi
6400d5a4:	add    esp,0x10
6400d5a7:	ret    
6400d5a8:	int3   
6400d5a9:	int3   
6400d5aa:	int3   
6400d5ab:	int3   
6400d5ac:	int3   
6400d5ad:	int3   
6400d5ae:	int3   
6400d5af:	int3   
6400d5b0:	push   0xffffffff
6400d5b2:	push   0x6401e880
6400d5b7:	mov    eax,fs:0x0
6400d5bd:	push   eax
6400d5be:	sub    esp,0x8
6400d5c1:	push   ebx
6400d5c2:	push   esi
6400d5c3:	push   edi
6400d5c4:	mov    eax,ds:0x64028038
6400d5c9:	xor    eax,esp
6400d5cb:	push   eax
6400d5cc:	lea    eax,[esp+0x18]
6400d5d0:	mov    fs:0x0,eax
6400d5d6:	xor    ebx,ebx
6400d5d8:	mov    DWORD PTR [esp+0x14],ebx
6400d5dc:	push   0x640214f4
6400d5e1:	push   0xf
6400d5e3:	push   0x640214d4
6400d5e8:	mov    DWORD PTR [esp+0x2c],ebx
6400d5ec:	call   0x64003b70
6400d5f1:	add    esp,0xc
6400d5f4:	push   eax
6400d5f5:	lea    ecx,[esp+0x14]
6400d5f9:	call   0x640017e0
6400d5fe:	mov    eax,DWORD PTR [esp+0x10]
6400d602:	push   ebx
6400d603:	push   ebx
6400d604:	push   0x3
6400d606:	push   ebx
6400d607:	push   ebx
6400d608:	push   0xc0000000
6400d60d:	push   eax
6400d60e:	mov    BYTE PTR [esp+0x3c],0x1
6400d613:	call   0x6400a9e0
6400d618:	call   eax
6400d61a:	mov    esi,eax
6400d61c:	mov    eax,DWORD PTR [esp+0x10]
6400d620:	add    eax,0xfffffff0
6400d623:	mov    DWORD PTR [esp+0x14],esi
6400d627:	mov    BYTE PTR [esp+0x20],bl
6400d62b:	or     edx,0xffffffff
6400d62e:	lea    ecx,[eax+0xc]
6400d631:	lock xadd DWORD PTR [ecx],edx
6400d635:	dec    edx
6400d636:	cmp    esi,0xffffffff
6400d639:	je     0x6400d678
6400d63b:	test   edx,edx
6400d63d:	jg     0x6400d649
6400d63f:	mov    ecx,DWORD PTR [eax]
6400d641:	mov    edx,DWORD PTR [ecx]
6400d643:	push   eax
6400d644:	mov    eax,DWORD PTR [edx+0x4]
6400d647:	call   eax
6400d649:	cmp    esi,ebx
6400d64b:	je     0x6400d663
6400d64d:	call   DWORD PTR ds:0x64021044
6400d653:	push   esi
6400d654:	mov    edi,eax
6400d656:	call   DWORD PTR ds:0x64021040
6400d65c:	push   edi
6400d65d:	call   DWORD PTR ds:0x64021010
6400d663:	mov    al,0x1
6400d665:	mov    ecx,DWORD PTR [esp+0x18]
6400d669:	mov    DWORD PTR fs:0x0,ecx
6400d670:	pop    ecx
6400d671:	pop    edi
6400d672:	pop    esi
6400d673:	pop    ebx
6400d674:	add    esp,0x14
6400d677:	ret    
6400d678:	test   edx,edx
6400d67a:	jg     0x6400d686
6400d67c:	mov    ecx,DWORD PTR [eax]
6400d67e:	mov    edx,DWORD PTR [ecx]
6400d680:	push   eax
6400d681:	mov    eax,DWORD PTR [edx+0x4]
6400d684:	call   eax
6400d686:	call   DWORD PTR ds:0x64021044
6400d68c:	push   0xffffffff
6400d68e:	mov    esi,eax
6400d690:	call   DWORD PTR ds:0x64021040
6400d696:	push   esi
6400d697:	call   DWORD PTR ds:0x64021010
6400d69d:	xor    al,al
6400d69f:	mov    ecx,DWORD PTR [esp+0x18]
6400d6a3:	mov    DWORD PTR fs:0x0,ecx
6400d6aa:	pop    ecx
6400d6ab:	pop    edi
6400d6ac:	pop    esi
6400d6ad:	pop    ebx
6400d6ae:	add    esp,0x14
6400d6b1:	ret    
6400d6b2:	int3   
6400d6b3:	int3   
6400d6b4:	int3   
6400d6b5:	int3   
6400d6b6:	int3   
6400d6b7:	int3   
6400d6b8:	int3   
6400d6b9:	int3   
6400d6ba:	int3   
6400d6bb:	int3   
6400d6bc:	int3   
6400d6bd:	int3   
6400d6be:	int3   
6400d6bf:	int3   
6400d6c0:	push   ebp
6400d6c1:	lea    ebp,[esp-0x128]
6400d6c8:	sub    esp,0x128
6400d6ce:	push   0xffffffff
6400d6d0:	push   0x6401e999
6400d6d5:	mov    eax,fs:0x0
6400d6db:	push   eax
6400d6dc:	sub    esp,0x90
6400d6e2:	mov    eax,ds:0x64028038
6400d6e7:	xor    eax,ebp
6400d6e9:	mov    DWORD PTR [ebp+0x124],eax
6400d6ef:	push   ebx
6400d6f0:	push   esi
6400d6f1:	push   edi
6400d6f2:	push   eax
6400d6f3:	lea    eax,[ebp-0xc]
6400d6f6:	mov    fs:0x0,eax
6400d6fc:	mov    esi,DWORD PTR [ebp+0x130]
6400d702:	xor    ebx,ebx
6400d704:	mov    DWORD PTR [ebp-0x4],ebx
6400d707:	mov    DWORD PTR [ebp-0x58],esi
6400d70a:	mov    DWORD PTR [ebp-0x50],ebx
6400d70d:	call   DWORD PTR ds:0x64028008
6400d713:	mov    eax,ds:0x640294e0
6400d718:	mov    edx,DWORD PTR [eax+0xc]
6400d71b:	mov    ecx,0x640294e0
6400d720:	call   edx
6400d722:	add    eax,0x10
6400d725:	mov    DWORD PTR [esi],eax
6400d727:	push   0x640218bc
6400d72c:	push   0xd
6400d72e:	mov    edi,0x1
6400d733:	push   0x640218ac
6400d738:	mov    DWORD PTR [ebp-0x4],ebx
6400d73b:	mov    DWORD PTR [ebp-0x50],edi
6400d73e:	call   0x64003970
6400d743:	add    esp,0xc
6400d746:	push   eax
6400d747:	mov    ecx,esi
6400d749:	call   0x640018b0
6400d74e:	push   0x64021870
6400d753:	push   0x3
6400d755:	push   0x6402186c
6400d75a:	call   0x64003970
6400d75f:	add    esp,0xc
6400d762:	push   eax
6400d763:	mov    ecx,esi
6400d765:	call   0x640018b0
6400d76a:	push   0x64021860
6400d76f:	mov    ecx,esi
6400d771:	call   0x640018b0
6400d776:	push   0x64021830
6400d77b:	push   0x3
6400d77d:	push   0x6402182c
6400d782:	call   0x64003970
6400d787:	add    esp,0xc
6400d78a:	push   eax
6400d78b:	mov    ecx,esi
6400d78d:	call   0x640018b0
6400d792:	push   0x64021824
6400d797:	mov    ecx,esi
6400d799:	call   0x640018b0
6400d79e:	mov    eax,ds:0x640294e0
6400d7a3:	mov    edx,DWORD PTR [eax+0xc]
6400d7a6:	mov    ecx,0x640294e0
6400d7ab:	call   edx
6400d7ad:	add    eax,0x10
6400d7b0:	mov    DWORD PTR [ebp-0x4c],eax
6400d7b3:	mov    eax,ds:0x640294e0
6400d7b8:	mov    edx,DWORD PTR [eax+0xc]
6400d7bb:	mov    ecx,0x640294e0
6400d7c0:	mov    DWORD PTR [ebp-0x4],edi
6400d7c3:	call   edx
6400d7c5:	add    eax,0x10
6400d7c8:	mov    DWORD PTR [ebp-0x54],eax
6400d7cb:	lea    eax,[ebp+0x114]
6400d7d1:	push   eax
6400d7d2:	mov    BYTE PTR [ebp-0x4],0x2
6400d7d6:	call   0x64003480
6400d7db:	add    esp,0x4
6400d7de:	test   al,al
6400d7e0:	je     0x6400d880
6400d7e6:	push   0x640217e8
6400d7eb:	push   0x4
6400d7ed:	push   0x640217e0
6400d7f2:	call   0x64003970
6400d7f7:	add    esp,0xc
6400d7fa:	push   eax
6400d7fb:	lea    ecx,[ebp-0x10]
6400d7fe:	call   0x64003730
6400d803:	mov    eax,DWORD PTR [eax]
6400d805:	mov    ecx,DWORD PTR [eax-0xc]
6400d808:	push   ecx
6400d809:	push   eax
6400d80a:	mov    ecx,esi
6400d80c:	mov    BYTE PTR [ebp-0x4],0x3
6400d810:	call   0x64001ef0
6400d815:	mov    eax,DWORD PTR [ebp-0x10]
6400d818:	add    eax,0xfffffff0
6400d81b:	mov    BYTE PTR [ebp-0x4],0x2
6400d81f:	lea    ecx,[eax+0xc]
6400d822:	or     edx,0xffffffff
6400d825:	lock xadd DWORD PTR [ecx],edx
6400d829:	dec    edx
6400d82a:	test   edx,edx
6400d82c:	jg     0x6400d838
6400d82e:	mov    ecx,DWORD PTR [eax]
6400d830:	mov    edx,DWORD PTR [ecx]
6400d832:	push   eax
6400d833:	mov    eax,DWORD PTR [edx+0x4]
6400d836:	call   eax
6400d838:	lea    ecx,[ebp+0x114]
6400d83e:	push   ecx
6400d83f:	lea    edx,[ebp-0x10]
6400d842:	push   edx
6400d843:	call   0x640026e0
6400d848:	add    esp,0x8
6400d84b:	mov    eax,DWORD PTR [eax]
6400d84d:	mov    ecx,DWORD PTR [eax-0xc]
6400d850:	push   ecx
6400d851:	push   eax
6400d852:	mov    ecx,esi
6400d854:	mov    BYTE PTR [ebp-0x4],0x4
6400d858:	call   0x64001ef0
6400d85d:	mov    eax,DWORD PTR [ebp-0x10]
6400d860:	add    eax,0xfffffff0
6400d863:	mov    BYTE PTR [ebp-0x4],0x2
6400d867:	lea    ecx,[eax+0xc]
6400d86a:	or     edx,0xffffffff
6400d86d:	lock xadd DWORD PTR [ecx],edx
6400d871:	dec    edx
6400d872:	test   edx,edx
6400d874:	jg     0x6400d880
6400d876:	mov    ecx,DWORD PTR [eax]
6400d878:	mov    edx,DWORD PTR [ecx]
6400d87a:	push   eax
6400d87b:	mov    eax,DWORD PTR [edx+0x4]
6400d87e:	call   eax
6400d880:	call   0x6400c790
6400d885:	test   al,al
6400d887:	je     0x6400d8a5
6400d889:	push   0x640217b8
6400d88e:	push   0x6
6400d890:	push   0x640217b0
6400d895:	call   0x64003970
6400d89a:	add    esp,0xc
6400d89d:	push   eax
6400d89e:	mov    ecx,esi
6400d8a0:	call   0x640018b0
6400d8a5:	call   0x6400d5b0
6400d8aa:	test   al,al
6400d8ac:	je     0x6400d8ca
6400d8ae:	push   0x6402177c
6400d8b3:	push   0x6
6400d8b5:	push   0x64021774
6400d8ba:	call   0x64003970
6400d8bf:	add    esp,0xc
6400d8c2:	push   eax
6400d8c3:	mov    ecx,esi
6400d8c5:	call   0x640018b0
6400d8ca:	mov    edx,DWORD PTR ds:0x640294e0
6400d8d0:	mov    eax,DWORD PTR [edx+0xc]
6400d8d3:	mov    ecx,0x640294e0
6400d8d8:	call   eax
6400d8da:	add    eax,0x10
6400d8dd:	mov    DWORD PTR [ebp-0x20],eax
6400d8e0:	mov    edx,DWORD PTR ds:0x640294e0
6400d8e6:	mov    eax,DWORD PTR [edx+0xc]
6400d8e9:	mov    ecx,0x640294e0
6400d8ee:	mov    BYTE PTR [ebp-0x4],0x5
6400d8f2:	call   eax
6400d8f4:	add    eax,0x10
6400d8f7:	mov    DWORD PTR [ebp-0x48],eax
6400d8fa:	mov    edx,DWORD PTR ds:0x640294e0
6400d900:	mov    eax,DWORD PTR [edx+0xc]
6400d903:	mov    ecx,0x640294e0
6400d908:	mov    BYTE PTR [ebp-0x4],0x6
6400d90c:	call   eax
6400d90e:	add    eax,0x10
6400d911:	mov    DWORD PTR [ebp-0x2c],eax
6400d914:	lea    ecx,[ebp-0x44]
6400d917:	push   ecx
6400d918:	lea    edx,[ebp-0x2c]
6400d91b:	push   edx
6400d91c:	lea    eax,[ebp-0x20]
6400d91f:	push   eax
6400d920:	mov    BYTE PTR [ebp-0x4],0x7
6400d924:	mov    DWORD PTR [ebp-0x44],ebx
6400d927:	mov    DWORD PTR [ebp-0x40],ebx
6400d92a:	call   0x640077d0
6400d92f:	add    esp,0xc
6400d932:	test   al,al
6400d934:	je     0x6400db75
6400d93a:	lea    ecx,[ebp-0x2c]
6400d93d:	push   ecx
6400d93e:	lea    edx,[ebp-0x14]
6400d941:	push   edx
6400d942:	call   0x64002980
6400d947:	mov    edi,eax
6400d949:	push   0x64021734
6400d94e:	push   0x5
6400d950:	mov    bl,0x8
6400d952:	push   0x6402172c
6400d957:	mov    BYTE PTR [ebp-0x4],bl
6400d95a:	call   0x64003970
6400d95f:	add    esp,0x14
6400d962:	push   eax
6400d963:	lea    ecx,[ebp-0x18]
6400d966:	call   0x64003730
6400d96b:	push   edi
6400d96c:	push   eax
6400d96d:	lea    eax,[ebp-0x10]
6400d970:	push   eax
6400d971:	mov    BYTE PTR [ebp-0x4],0x9
6400d975:	call   0x6400ca50
6400d97a:	add    esp,0xc
6400d97d:	mov    eax,DWORD PTR [eax]
6400d97f:	mov    ecx,DWORD PTR [eax-0xc]
6400d982:	push   ecx
6400d983:	push   eax
6400d984:	mov    ecx,esi
6400d986:	mov    BYTE PTR [ebp-0x4],0xa
6400d98a:	call   0x64001ef0
6400d98f:	mov    eax,DWORD PTR [ebp-0x10]
6400d992:	add    eax,0xfffffff0
6400d995:	mov    BYTE PTR [ebp-0x4],0x9
6400d999:	lea    ecx,[eax+0xc]
6400d99c:	or     edx,0xffffffff
6400d99f:	lock xadd DWORD PTR [ecx],edx
6400d9a3:	dec    edx
6400d9a4:	test   edx,edx
6400d9a6:	jg     0x6400d9b2
6400d9a8:	mov    ecx,DWORD PTR [eax]
6400d9aa:	mov    edx,DWORD PTR [ecx]
6400d9ac:	push   eax
6400d9ad:	mov    eax,DWORD PTR [edx+0x4]
6400d9b0:	call   eax
6400d9b2:	mov    eax,DWORD PTR [ebp-0x18]
6400d9b5:	add    eax,0xfffffff0
6400d9b8:	mov    BYTE PTR [ebp-0x4],bl
6400d9bb:	lea    ecx,[eax+0xc]
6400d9be:	or     edx,0xffffffff
6400d9c1:	lock xadd DWORD PTR [ecx],edx
6400d9c5:	dec    edx
6400d9c6:	test   edx,edx
6400d9c8:	jg     0x6400d9d4
6400d9ca:	mov    ecx,DWORD PTR [eax]
6400d9cc:	mov    edx,DWORD PTR [ecx]
6400d9ce:	push   eax
6400d9cf:	mov    eax,DWORD PTR [edx+0x4]
6400d9d2:	call   eax
6400d9d4:	mov    eax,DWORD PTR [ebp-0x14]
6400d9d7:	add    eax,0xfffffff0
6400d9da:	mov    BYTE PTR [ebp-0x4],0x7
6400d9de:	lea    ecx,[eax+0xc]
6400d9e1:	or     edx,0xffffffff
6400d9e4:	lock xadd DWORD PTR [ecx],edx
6400d9e8:	dec    edx
6400d9e9:	test   edx,edx
6400d9eb:	jg     0x6400d9f7
6400d9ed:	mov    ecx,DWORD PTR [eax]
6400d9ef:	mov    edx,DWORD PTR [ecx]
6400d9f1:	push   eax
6400d9f2:	mov    eax,DWORD PTR [edx+0x4]
6400d9f5:	call   eax
6400d9f7:	lea    ecx,[ebp-0x20]
6400d9fa:	push   ecx
6400d9fb:	lea    edx,[ebp-0x10]
6400d9fe:	push   edx
6400d9ff:	call   0x64002980
6400da04:	mov    edi,eax
6400da06:	push   0x640216ec
6400da0b:	push   0x7
6400da0d:	mov    bl,0xb
6400da0f:	push   0x640216e4
6400da14:	mov    BYTE PTR [ebp-0x4],bl
6400da17:	call   0x64003970
6400da1c:	add    esp,0x14
6400da1f:	push   eax
6400da20:	lea    ecx,[ebp-0x18]
6400da23:	call   0x64003730
6400da28:	push   edi
6400da29:	push   eax
6400da2a:	lea    eax,[ebp-0x14]
6400da2d:	push   eax
6400da2e:	mov    BYTE PTR [ebp-0x4],0xc
6400da32:	call   0x6400ca50
6400da37:	add    esp,0xc
6400da3a:	mov    eax,DWORD PTR [eax]
6400da3c:	mov    ecx,DWORD PTR [eax-0xc]
6400da3f:	push   ecx
6400da40:	push   eax
6400da41:	mov    ecx,esi
6400da43:	mov    BYTE PTR [ebp-0x4],0xd
6400da47:	call   0x64001ef0
6400da4c:	mov    eax,DWORD PTR [ebp-0x14]
6400da4f:	add    eax,0xfffffff0
6400da52:	mov    BYTE PTR [ebp-0x4],0xc
6400da56:	lea    ecx,[eax+0xc]
6400da59:	or     edx,0xffffffff
6400da5c:	lock xadd DWORD PTR [ecx],edx
6400da60:	dec    edx
6400da61:	test   edx,edx
6400da63:	jg     0x6400da6f
6400da65:	mov    ecx,DWORD PTR [eax]
6400da67:	mov    edx,DWORD PTR [ecx]
6400da69:	push   eax
6400da6a:	mov    eax,DWORD PTR [edx+0x4]
6400da6d:	call   eax
6400da6f:	mov    eax,DWORD PTR [ebp-0x18]
6400da72:	add    eax,0xfffffff0
6400da75:	mov    BYTE PTR [ebp-0x4],bl
6400da78:	lea    ecx,[eax+0xc]
6400da7b:	or     edx,0xffffffff
6400da7e:	lock xadd DWORD PTR [ecx],edx
6400da82:	dec    edx
6400da83:	test   edx,edx
6400da85:	jg     0x6400da91
6400da87:	mov    ecx,DWORD PTR [eax]
6400da89:	mov    edx,DWORD PTR [ecx]
6400da8b:	push   eax
6400da8c:	mov    eax,DWORD PTR [edx+0x4]
6400da8f:	call   eax
6400da91:	mov    eax,DWORD PTR [ebp-0x10]
6400da94:	add    eax,0xfffffff0
6400da97:	mov    BYTE PTR [ebp-0x4],0x7
6400da9b:	lea    ecx,[eax+0xc]
6400da9e:	or     edx,0xffffffff
6400daa1:	lock xadd DWORD PTR [ecx],edx
6400daa5:	dec    edx
6400daa6:	test   edx,edx
6400daa8:	jg     0x6400dab4
6400daaa:	mov    ecx,DWORD PTR [eax]
6400daac:	mov    edx,DWORD PTR [ecx]
6400daae:	push   eax
6400daaf:	mov    eax,DWORD PTR [edx+0x4]
6400dab2:	call   eax
6400dab4:	mov    edx,DWORD PTR ds:0x640294e0
6400daba:	mov    eax,DWORD PTR [edx+0xc]
6400dabd:	mov    ecx,0x640294e0
6400dac2:	call   eax
6400dac4:	add    eax,0x10
6400dac7:	mov    DWORD PTR [ebp-0x10],eax
6400daca:	mov    ecx,DWORD PTR [ebp-0x40]
6400dacd:	mov    edx,DWORD PTR [ebp-0x44]
6400dad0:	push   ecx
6400dad1:	push   edx
6400dad2:	push   0x640216a4
6400dad7:	push   0xc
6400dad9:	push   0x64021688
6400dade:	mov    BYTE PTR [ebp-0x4],0xe
6400dae2:	call   0x64003b70
6400dae7:	add    esp,0xc
6400daea:	push   eax
6400daeb:	lea    eax,[ebp-0x10]
6400daee:	push   eax
6400daef:	call   0x640086e0
6400daf4:	add    esp,0x10
6400daf7:	call   DWORD PTR ds:0x64028008
6400dafd:	mov    edi,DWORD PTR [ebp-0x10]
6400db00:	cmp    DWORD PTR [edi-0x4],0x1
6400db04:	mov    DWORD PTR [ebp-0x14],eax
6400db07:	jle    0x6400db18
6400db09:	mov    ecx,DWORD PTR [edi-0xc]
6400db0c:	push   ecx
6400db0d:	lea    ecx,[ebp-0x10]
6400db10:	call   0x640022d0
6400db15:	mov    edi,DWORD PTR [ebp-0x10]
6400db18:	test   edi,edi
6400db1a:	jne    0x6400db20
6400db1c:	xor    eax,eax
6400db1e:	jmp    0x6400db4d
6400db20:	push   edi
6400db21:	call   DWORD PTR ds:0x64021054
6400db27:	add    eax,0x1
6400db2a:	cmp    eax,0x3fffffff
6400db2f:	jle    0x6400db35
6400db31:	xor    eax,eax
6400db33:	jmp    0x6400db4d
6400db35:	lea    ebx,[eax+eax*1]
6400db38:	mov    eax,ebx
6400db3a:	call   0x6400fad0
6400db3f:	mov    edx,DWORD PTR [ebp-0x14]
6400db42:	mov    eax,esp
6400db44:	push   edx
6400db45:	push   ebx
6400db46:	push   edi
6400db47:	push   eax
6400db48:	call   0x640023b0
6400db4d:	push   eax
6400db4e:	mov    ecx,esi
6400db50:	call   0x640018b0
6400db55:	add    edi,0xfffffff0
6400db58:	mov    BYTE PTR [ebp-0x4],0x7
6400db5c:	lea    eax,[edi+0xc]
6400db5f:	or     ecx,0xffffffff
6400db62:	lock xadd DWORD PTR [eax],ecx
6400db66:	dec    ecx
6400db67:	test   ecx,ecx
6400db69:	jg     0x6400db75
6400db6b:	mov    ecx,DWORD PTR [edi]
6400db6d:	mov    edx,DWORD PTR [ecx]
6400db6f:	mov    eax,DWORD PTR [edx+0x4]
6400db72:	push   edi
6400db73:	call   eax
6400db75:	xor    edi,edi
6400db77:	mov    DWORD PTR [ebp-0x38],edi
6400db7a:	mov    DWORD PTR [ebp-0x34],edi
6400db7d:	mov    DWORD PTR [ebp-0x30],edi
6400db80:	lea    ecx,[ebp-0x3c]
6400db83:	push   ecx
6400db84:	mov    BYTE PTR [ebp-0x4],0xf
6400db88:	call   0x64007980
6400db8d:	add    esp,0x4
6400db90:	mov    DWORD PTR [ebp-0x10],edi
6400db93:	xor    ebx,ebx
6400db95:	mov    eax,DWORD PTR [ebp-0x38]
6400db98:	cmp    eax,edi
6400db9a:	jne    0x6400dba0
6400db9c:	xor    eax,eax
6400db9e:	jmp    0x6400dbb8
6400dba0:	mov    ecx,DWORD PTR [ebp-0x34]
6400dba3:	sub    ecx,eax
6400dba5:	mov    eax,0x92492493
6400dbaa:	imul   ecx
6400dbac:	add    edx,ecx
6400dbae:	sar    edx,0x4
6400dbb1:	mov    eax,edx
6400dbb3:	shr    eax,0x1f
6400dbb6:	add    eax,edx
6400dbb8:	cmp    DWORD PTR [ebp-0x10],eax
6400dbbb:	je     0x6400dc66
6400dbc1:	push   0x64021660
6400dbc6:	push   0x5
6400dbc8:	push   0x64021658
6400dbcd:	call   0x64003970
6400dbd2:	add    esp,0xc
6400dbd5:	push   eax
6400dbd6:	lea    ecx,[ebp-0x14]
6400dbd9:	call   0x64003730
6400dbde:	mov    eax,DWORD PTR [eax]
6400dbe0:	mov    ecx,DWORD PTR [eax-0xc]
6400dbe3:	push   ecx
6400dbe4:	push   eax
6400dbe5:	mov    ecx,esi
6400dbe7:	mov    BYTE PTR [ebp-0x4],0x10
6400dbeb:	call   0x64001ef0
6400dbf0:	mov    eax,DWORD PTR [ebp-0x14]
6400dbf3:	add    eax,0xfffffff0
6400dbf6:	mov    BYTE PTR [ebp-0x4],0xf
6400dbfa:	lea    edx,[eax+0xc]
6400dbfd:	or     ecx,0xffffffff
6400dc00:	lock xadd DWORD PTR [edx],ecx
6400dc04:	dec    ecx
6400dc05:	test   ecx,ecx
6400dc07:	jg     0x6400dc13
6400dc09:	mov    ecx,DWORD PTR [eax]
6400dc0b:	mov    edx,DWORD PTR [ecx]
6400dc0d:	push   eax
6400dc0e:	mov    eax,DWORD PTR [edx+0x4]
6400dc11:	call   eax
6400dc13:	mov    edi,DWORD PTR [ebp-0x38]
6400dc16:	test   edi,edi
6400dc18:	je     0x6400dc37
6400dc1a:	mov    ecx,DWORD PTR [ebp-0x34]
6400dc1d:	sub    ecx,edi
6400dc1f:	mov    eax,0x92492493
6400dc24:	imul   ecx
6400dc26:	add    edx,ecx
6400dc28:	sar    edx,0x4
6400dc2b:	mov    eax,edx
6400dc2d:	shr    eax,0x1f
6400dc30:	add    eax,edx
6400dc32:	cmp    DWORD PTR [ebp-0x10],eax
6400dc35:	jb     0x6400dc3f
6400dc37:	call   0x6400eeaa
6400dc3c:	mov    edi,DWORD PTR [ebp-0x38]
6400dc3f:	cmp    DWORD PTR [ebx+edi*1+0x18],0x10
6400dc44:	jb     0x6400dc4c
6400dc46:	mov    edi,DWORD PTR [ebx+edi*1+0x4]
6400dc4a:	jmp    0x6400dc50
6400dc4c:	lea    edi,[ebx+edi*1+0x4]
6400dc50:	push   edi
6400dc51:	mov    ecx,esi
6400dc53:	call   0x640018b0
6400dc58:	add    DWORD PTR [ebp-0x10],0x1
6400dc5c:	add    ebx,0x1c
6400dc5f:	xor    edi,edi
6400dc61:	jmp    0x6400db95
6400dc66:	call   DWORD PTR ds:0x64028008
6400dc6c:	push   0x110
6400dc71:	lea    ecx,[ebp+0x4]
6400dc74:	push   edi
6400dc75:	push   ecx
6400dc76:	mov    DWORD PTR [ebp-0x14],eax
6400dc79:	call   0x6400fa50
6400dc7e:	mov    edx,DWORD PTR ds:0x640294e0
6400dc84:	mov    eax,DWORD PTR [edx+0xc]
6400dc87:	add    esp,0xc
6400dc8a:	mov    ecx,0x640294e0
6400dc8f:	mov    DWORD PTR [ebp+0x0],0x114
6400dc96:	call   eax
6400dc98:	add    eax,0x10
6400dc9b:	mov    DWORD PTR [ebp-0x10],eax
6400dc9e:	lea    ecx,[ebp+0x0]
6400dca1:	push   ecx
6400dca2:	mov    BYTE PTR [ebp-0x4],0x11
6400dca6:	call   DWORD PTR ds:0x64021068
6400dcac:	test   eax,eax
6400dcae:	lea    ecx,[ebp-0x10]
6400dcb1:	je     0x6400dccb
6400dcb3:	mov    edx,DWORD PTR [ebp+0x8]
6400dcb6:	mov    eax,DWORD PTR [ebp+0x4]
6400dcb9:	push   edx
6400dcba:	push   eax
6400dcbb:	push   0x64021630
6400dcc0:	push   ecx
6400dcc1:	call   0x640086e0
6400dcc6:	add    esp,0x10
6400dcc9:	jmp    0x6400dcd7
6400dccb:	push   0xc
6400dccd:	push   0x64021614
6400dcd2:	call   0x64001ff0
6400dcd7:	xor    eax,eax
6400dcd9:	lea    edx,[ebp-0x8c]
6400dcdf:	push   edx
6400dce0:	mov    DWORD PTR [ebp-0x8c],edi
6400dce6:	mov    DWORD PTR [ebp-0x88],eax
6400dcec:	mov    DWORD PTR [ebp-0x84],eax
6400dcf2:	mov    DWORD PTR [ebp-0x80],eax
6400dcf5:	mov    DWORD PTR [ebp-0x7c],eax
6400dcf8:	mov    DWORD PTR [ebp-0x78],eax
6400dcfb:	mov    DWORD PTR [ebp-0x74],eax
6400dcfe:	mov    DWORD PTR [ebp-0x70],eax
6400dd01:	mov    DWORD PTR [ebp-0x6c],eax
6400dd04:	call   DWORD PTR ds:0x64021064
6400dd0a:	movzx  eax,WORD PTR [ebp-0x8c]
6400dd11:	cmp    eax,edi
6400dd13:	je     0x6400dd23
6400dd15:	cmp    eax,0x9
6400dd18:	jne    0x6400dd32
6400dd1a:	push   0x4
6400dd1c:	push   0x64021608
6400dd21:	jmp    0x6400dd2a
6400dd23:	push   0x4
6400dd25:	push   0x640215fc
6400dd2a:	lea    ecx,[ebp-0x10]
6400dd2d:	call   0x64001ef0
6400dd32:	mov    ebx,DWORD PTR [ebp-0x10]
6400dd35:	cmp    ebx,edi
6400dd37:	jne    0x6400dd3d
6400dd39:	xor    eax,eax
6400dd3b:	jmp    0x6400dd86
6400dd3d:	push   ebx
6400dd3e:	call   DWORD PTR ds:0x64021054
6400dd44:	add    eax,0x1
6400dd47:	cmp    eax,0x3fffffff
6400dd4c:	jg     0x6400dd81
6400dd4e:	lea    ebx,[eax+eax*1]
6400dd51:	mov    eax,ebx
6400dd53:	call   0x6400fad0
6400dd58:	mov    edi,esp
6400dd5a:	test   edi,edi
6400dd5c:	je     0x6400dd81
6400dd5e:	mov    eax,DWORD PTR [ebp-0x10]
6400dd61:	mov    ecx,DWORD PTR [ebp-0x14]
6400dd64:	push   0x0
6400dd66:	push   0x0
6400dd68:	push   ebx
6400dd69:	push   edi
6400dd6a:	push   0xffffffff
6400dd6c:	push   eax
6400dd6d:	push   0x0
6400dd6f:	push   ecx
6400dd70:	mov    BYTE PTR [edi],0x0
6400dd73:	call   DWORD PTR ds:0x64021024
6400dd79:	neg    eax
6400dd7b:	sbb    eax,eax
6400dd7d:	and    eax,edi
6400dd7f:	jmp    0x6400dd83
6400dd81:	xor    eax,eax
6400dd83:	mov    ebx,DWORD PTR [ebp-0x10]
6400dd86:	push   eax
6400dd87:	mov    ecx,esi
6400dd89:	call   0x640018b0
6400dd8e:	lea    eax,[ebx-0x10]
6400dd91:	mov    BYTE PTR [ebp-0x4],0xf
6400dd95:	lea    edx,[eax+0xc]
6400dd98:	or     ecx,0xffffffff
6400dd9b:	lock xadd DWORD PTR [edx],ecx
6400dd9f:	dec    ecx
6400dda0:	test   ecx,ecx
6400dda2:	jg     0x6400ddae
6400dda4:	mov    ecx,DWORD PTR [eax]
6400dda6:	mov    edx,DWORD PTR [ecx]
6400dda8:	push   eax
6400dda9:	mov    eax,DWORD PTR [edx+0x4]
6400ddac:	call   eax
6400ddae:	lea    ecx,[ebp-0x1c]
6400ddb1:	push   ecx
6400ddb2:	call   0x64007fc0
6400ddb7:	push   eax
6400ddb8:	lea    edx,[ebp-0x10]
6400ddbb:	push   edx
6400ddbc:	mov    BYTE PTR [ebp-0x4],0x12
6400ddc0:	call   0x64002980
6400ddc5:	mov    edi,eax
6400ddc7:	push   0x640215cc
6400ddcc:	push   0x7
6400ddce:	push   0x640215c4
6400ddd3:	mov    BYTE PTR [ebp-0x4],0x13
6400ddd7:	call   0x64003970
6400dddc:	add    esp,0x18
6400dddf:	push   eax
6400dde0:	lea    ecx,[ebp-0x18]
6400dde3:	call   0x64003730
6400dde8:	push   edi
6400dde9:	push   eax
6400ddea:	lea    eax,[ebp-0x14]
6400dded:	mov    bl,0x14
6400ddef:	push   eax
6400ddf0:	mov    BYTE PTR [ebp-0x4],bl
6400ddf3:	call   0x6400ca50
6400ddf8:	add    esp,0xc
6400ddfb:	mov    eax,DWORD PTR [eax]
6400ddfd:	mov    ecx,DWORD PTR [eax-0xc]
6400de00:	push   ecx
6400de01:	push   eax
6400de02:	mov    ecx,esi
6400de04:	mov    BYTE PTR [ebp-0x4],0x15
6400de08:	call   0x64001ef0
6400de0d:	mov    eax,DWORD PTR [ebp-0x14]
6400de10:	add    eax,0xfffffff0
6400de13:	mov    BYTE PTR [ebp-0x4],bl
6400de16:	lea    ecx,[eax+0xc]
6400de19:	or     edx,0xffffffff
6400de1c:	lock xadd DWORD PTR [ecx],edx
6400de20:	dec    edx
6400de21:	test   edx,edx
6400de23:	jg     0x6400de2f
6400de25:	mov    ecx,DWORD PTR [eax]
6400de27:	mov    edx,DWORD PTR [ecx]
6400de29:	push   eax
6400de2a:	mov    eax,DWORD PTR [edx+0x4]
6400de2d:	call   eax
6400de2f:	mov    eax,DWORD PTR [ebp-0x18]
6400de32:	add    eax,0xfffffff0
6400de35:	mov    BYTE PTR [ebp-0x4],0x13
6400de39:	lea    ecx,[eax+0xc]
6400de3c:	or     edx,0xffffffff
6400de3f:	lock xadd DWORD PTR [ecx],edx
6400de43:	dec    edx
6400de44:	test   edx,edx
6400de46:	jg     0x6400de52
6400de48:	mov    ecx,DWORD PTR [eax]
6400de4a:	mov    edx,DWORD PTR [ecx]
6400de4c:	push   eax
6400de4d:	mov    eax,DWORD PTR [edx+0x4]
6400de50:	call   eax
6400de52:	mov    eax,DWORD PTR [ebp-0x10]
6400de55:	add    eax,0xfffffff0
6400de58:	mov    BYTE PTR [ebp-0x4],0x12
6400de5c:	lea    ecx,[eax+0xc]
6400de5f:	or     edx,0xffffffff
6400de62:	lock xadd DWORD PTR [ecx],edx
6400de66:	dec    edx
6400de67:	test   edx,edx
6400de69:	jg     0x6400de75
6400de6b:	mov    ecx,DWORD PTR [eax]
6400de6d:	mov    edx,DWORD PTR [ecx]
6400de6f:	push   eax
6400de70:	mov    eax,DWORD PTR [edx+0x4]
6400de73:	call   eax
6400de75:	mov    eax,DWORD PTR [ebp-0x1c]
6400de78:	add    eax,0xfffffff0
6400de7b:	mov    BYTE PTR [ebp-0x4],0xf
6400de7f:	lea    ecx,[eax+0xc]
6400de82:	or     edx,0xffffffff
6400de85:	lock xadd DWORD PTR [ecx],edx
6400de89:	dec    edx
6400de8a:	test   edx,edx
6400de8c:	jg     0x6400de98
6400de8e:	mov    ecx,DWORD PTR [eax]
6400de90:	mov    edx,DWORD PTR [ecx]
6400de92:	push   eax
6400de93:	mov    eax,DWORD PTR [edx+0x4]
6400de96:	call   eax
6400de98:	call   DWORD PTR ds:0x64028008
6400de9e:	mov    edx,DWORD PTR ds:0x640294e0
6400dea4:	mov    DWORD PTR [ebp-0x14],eax
6400dea7:	mov    eax,DWORD PTR [edx+0xc]
6400deaa:	mov    ecx,0x640294e0
6400deaf:	call   eax
6400deb1:	add    eax,0x10
6400deb4:	mov    DWORD PTR [ebp-0x10],eax
6400deb7:	mov    BYTE PTR [ebp-0x4],0x16
6400debb:	call   0x64003080
6400dec0:	push   eax
6400dec1:	push   0x64021598
6400dec6:	push   0x4
6400dec8:	push   0x6402158c
6400decd:	call   0x64003b70
6400ded2:	add    esp,0xc
6400ded5:	push   eax
6400ded6:	lea    ecx,[ebp-0x10]
6400ded9:	push   ecx
6400deda:	call   0x640086e0
6400dedf:	mov    ebx,DWORD PTR [ebp-0x10]
6400dee2:	mov    eax,DWORD PTR [ebx-0x8]
6400dee5:	mov    ecx,0x1
6400deea:	sub    ecx,DWORD PTR [ebx-0x4]
6400deed:	add    eax,0x1
6400def0:	add    esp,0xc
6400def3:	or     eax,ecx
6400def5:	jge    0x6400df04
6400def7:	push   0xffffffff
6400def9:	lea    ecx,[ebp-0x10]
6400defc:	call   0x64002280
6400df01:	mov    ebx,DWORD PTR [ebp-0x10]
6400df04:	test   ebx,ebx
6400df06:	je     0x6400df4c
6400df08:	push   ebx
6400df09:	call   DWORD PTR ds:0x64021054
6400df0f:	add    eax,0x1
6400df12:	cmp    eax,0x3fffffff
6400df17:	jg     0x6400df4c
6400df19:	add    eax,eax
6400df1b:	mov    DWORD PTR [ebp-0x1c],eax
6400df1e:	call   0x6400fad0
6400df23:	mov    edi,esp
6400df25:	test   edi,edi
6400df27:	je     0x6400df4c
6400df29:	mov    edx,DWORD PTR [ebp-0x1c]
6400df2c:	mov    eax,DWORD PTR [ebp-0x14]
6400df2f:	push   0x0
6400df31:	push   0x0
6400df33:	push   edx
6400df34:	push   edi
6400df35:	push   0xffffffff
6400df37:	push   ebx
6400df38:	push   0x0
6400df3a:	push   eax
6400df3b:	mov    BYTE PTR [edi],0x0
6400df3e:	call   DWORD PTR ds:0x64021024
6400df44:	neg    eax
6400df46:	sbb    eax,eax
6400df48:	and    eax,edi
6400df4a:	jmp    0x6400df4e
6400df4c:	xor    eax,eax
6400df4e:	push   eax
6400df4f:	lea    ecx,[ebp-0x28]
6400df52:	call   0x64003730
6400df57:	mov    edi,eax
6400df59:	push   0x64021568
6400df5e:	push   0x5
6400df60:	push   0x64021560
6400df65:	mov    BYTE PTR [ebp-0x4],0x17
6400df69:	call   0x64003970
6400df6e:	add    esp,0xc
6400df71:	push   eax
6400df72:	lea    ecx,[ebp-0x24]
6400df75:	call   0x64003730
6400df7a:	push   edi
6400df7b:	push   eax
6400df7c:	lea    ecx,[ebp-0x18]
6400df7f:	push   ecx
6400df80:	mov    BYTE PTR [ebp-0x4],0x18
6400df84:	call   0x6400ca50
6400df89:	add    esp,0xc
6400df8c:	mov    eax,DWORD PTR [eax]
6400df8e:	mov    ecx,DWORD PTR [eax-0xc]
6400df91:	push   ecx
6400df92:	push   eax
6400df93:	mov    ecx,esi
6400df95:	mov    BYTE PTR [ebp-0x4],0x19
6400df99:	call   0x64001ef0
6400df9e:	mov    eax,DWORD PTR [ebp-0x18]
6400dfa1:	add    eax,0xfffffff0
6400dfa4:	mov    BYTE PTR [ebp-0x4],0x18
6400dfa8:	lea    edx,[eax+0xc]
6400dfab:	or     ecx,0xffffffff
6400dfae:	lock xadd DWORD PTR [edx],ecx
6400dfb2:	dec    ecx
6400dfb3:	test   ecx,ecx
6400dfb5:	jg     0x6400dfc1
6400dfb7:	mov    ecx,DWORD PTR [eax]
6400dfb9:	mov    edx,DWORD PTR [ecx]
6400dfbb:	push   eax
6400dfbc:	mov    eax,DWORD PTR [edx+0x4]
6400dfbf:	call   eax
6400dfc1:	mov    eax,DWORD PTR [ebp-0x24]
6400dfc4:	add    eax,0xfffffff0
6400dfc7:	mov    BYTE PTR [ebp-0x4],0x17
6400dfcb:	lea    ecx,[eax+0xc]
6400dfce:	or     edx,0xffffffff
6400dfd1:	lock xadd DWORD PTR [ecx],edx
6400dfd5:	dec    edx
6400dfd6:	test   edx,edx
6400dfd8:	jg     0x6400dfe4
6400dfda:	mov    ecx,DWORD PTR [eax]
6400dfdc:	mov    edx,DWORD PTR [ecx]
6400dfde:	push   eax
6400dfdf:	mov    eax,DWORD PTR [edx+0x4]
6400dfe2:	call   eax
6400dfe4:	mov    eax,DWORD PTR [ebp-0x28]
6400dfe7:	add    eax,0xfffffff0
6400dfea:	mov    BYTE PTR [ebp-0x4],0x16
6400dfee:	lea    ecx,[eax+0xc]
6400dff1:	or     edx,0xffffffff
6400dff4:	lock xadd DWORD PTR [ecx],edx
6400dff8:	dec    edx
6400dff9:	test   edx,edx
6400dffb:	jg     0x6400e007
6400dffd:	mov    ecx,DWORD PTR [eax]
6400dfff:	mov    edx,DWORD PTR [ecx]
6400e001:	push   eax
6400e002:	mov    eax,DWORD PTR [edx+0x4]
6400e005:	call   eax
6400e007:	add    ebx,0xfffffff0
6400e00a:	mov    BYTE PTR [ebp-0x4],0xf
6400e00e:	lea    ecx,[ebx+0xc]
6400e011:	or     edx,0xffffffff
6400e014:	lock xadd DWORD PTR [ecx],edx
6400e018:	dec    edx
6400e019:	test   edx,edx
6400e01b:	jg     0x6400e027
6400e01d:	mov    ecx,DWORD PTR [ebx]
6400e01f:	mov    eax,DWORD PTR [ecx]
6400e021:	mov    edx,DWORD PTR [eax+0x4]
6400e024:	push   ebx
6400e025:	call   edx
6400e027:	lea    eax,[ebp-0x9c]
6400e02d:	push   eax
6400e02e:	call   0x64003260
6400e033:	mov    ecx,DWORD PTR [eax]
6400e035:	mov    DWORD PTR [ebp-0x68],ecx
6400e038:	mov    edx,DWORD PTR [eax+0x4]
6400e03b:	mov    DWORD PTR [ebp-0x64],edx
6400e03e:	mov    ecx,DWORD PTR [eax+0x8]
6400e041:	push   0x6402152c
6400e046:	mov    DWORD PTR [ebp-0x60],ecx
6400e049:	mov    edx,DWORD PTR [eax+0xc]
6400e04c:	push   0x5
6400e04e:	push   0x64021524
6400e053:	mov    DWORD PTR [ebp-0x5c],edx
6400e056:	call   0x64003970
6400e05b:	add    esp,0x10
6400e05e:	push   eax
6400e05f:	lea    ecx,[ebp-0x10]
6400e062:	call   0x64003730
6400e067:	lea    eax,[ebp-0x68]
6400e06a:	push   eax
6400e06b:	lea    ecx,[ebp-0x24]
6400e06e:	push   ecx
6400e06f:	mov    BYTE PTR [ebp-0x4],0x1a
6400e073:	call   0x640026e0
6400e078:	push   eax
6400e079:	lea    edx,[ebp-0x10]
6400e07c:	push   edx
6400e07d:	lea    eax,[ebp-0x28]
6400e080:	mov    bl,0x1b
6400e082:	push   eax
6400e083:	mov    BYTE PTR [ebp-0x4],bl
6400e086:	call   0x6400ca50
6400e08b:	add    esp,0x14
6400e08e:	mov    eax,DWORD PTR [eax]
6400e090:	mov    ecx,DWORD PTR [eax-0xc]
6400e093:	push   ecx
6400e094:	push   eax
6400e095:	mov    ecx,esi
6400e097:	mov    BYTE PTR [ebp-0x4],0x1c
6400e09b:	call   0x64001ef0
6400e0a0:	mov    eax,DWORD PTR [ebp-0x28]
6400e0a3:	add    eax,0xfffffff0
6400e0a6:	mov    BYTE PTR [ebp-0x4],bl
6400e0a9:	lea    ecx,[eax+0xc]
6400e0ac:	or     edx,0xffffffff
6400e0af:	lock xadd DWORD PTR [ecx],edx
6400e0b3:	dec    edx
6400e0b4:	test   edx,edx
6400e0b6:	jg     0x6400e0c2
6400e0b8:	mov    ecx,DWORD PTR [eax]
6400e0ba:	mov    edx,DWORD PTR [ecx]
6400e0bc:	push   eax
6400e0bd:	mov    eax,DWORD PTR [edx+0x4]
6400e0c0:	call   eax
6400e0c2:	mov    eax,DWORD PTR [ebp-0x24]
6400e0c5:	add    eax,0xfffffff0
6400e0c8:	mov    BYTE PTR [ebp-0x4],0x1a
6400e0cc:	lea    ecx,[eax+0xc]
6400e0cf:	or     edx,0xffffffff
6400e0d2:	lock xadd DWORD PTR [ecx],edx
6400e0d6:	dec    edx
6400e0d7:	test   edx,edx
6400e0d9:	jg     0x6400e0e5
6400e0db:	mov    ecx,DWORD PTR [eax]
6400e0dd:	mov    edx,DWORD PTR [ecx]
6400e0df:	push   eax
6400e0e0:	mov    eax,DWORD PTR [edx+0x4]
6400e0e3:	call   eax
6400e0e5:	mov    eax,DWORD PTR [ebp-0x10]
6400e0e8:	add    eax,0xfffffff0
6400e0eb:	mov    BYTE PTR [ebp-0x4],0xf
6400e0ef:	lea    ecx,[eax+0xc]
6400e0f2:	or     edx,0xffffffff
6400e0f5:	lock xadd DWORD PTR [ecx],edx
6400e0f9:	dec    edx
6400e0fa:	test   edx,edx
6400e0fc:	jg     0x6400e108
6400e0fe:	mov    ecx,DWORD PTR [eax]
6400e100:	mov    edx,DWORD PTR [ecx]
6400e102:	push   eax
6400e103:	mov    eax,DWORD PTR [edx+0x4]
6400e106:	call   eax
6400e108:	mov    eax,DWORD PTR [ebp-0x38]
6400e10b:	xor    edi,edi
6400e10d:	cmp    eax,edi
6400e10f:	je     0x6400e12f
6400e111:	mov    ecx,DWORD PTR [ebp-0x58]
6400e114:	push   ecx
6400e115:	mov    ecx,DWORD PTR [ebp-0x34]
6400e118:	lea    edx,[ebp-0x3c]
6400e11b:	push   edx
6400e11c:	push   ecx
6400e11d:	push   eax
6400e11e:	call   0x64008940
6400e123:	mov    edx,DWORD PTR [ebp-0x38]
6400e126:	push   edx
6400e127:	call   0x6400eb52
6400e12c:	add    esp,0x14
6400e12f:	mov    eax,DWORD PTR [ebp-0x2c]
6400e132:	add    eax,0xfffffff0
6400e135:	mov    DWORD PTR [ebp-0x38],edi
6400e138:	mov    DWORD PTR [ebp-0x34],edi
6400e13b:	mov    DWORD PTR [ebp-0x30],edi
6400e13e:	mov    BYTE PTR [ebp-0x4],0x6
6400e142:	lea    ecx,[eax+0xc]
6400e145:	or     edx,0xffffffff
6400e148:	lock xadd DWORD PTR [ecx],edx
6400e14c:	dec    edx
6400e14d:	test   edx,edx
6400e14f:	jg     0x6400e15b
6400e151:	mov    ecx,DWORD PTR [eax]
6400e153:	mov    edx,DWORD PTR [ecx]
6400e155:	push   eax
6400e156:	mov    eax,DWORD PTR [edx+0x4]
6400e159:	call   eax
6400e15b:	mov    eax,DWORD PTR [ebp-0x48]
6400e15e:	add    eax,0xfffffff0
6400e161:	mov    BYTE PTR [ebp-0x4],0x5
6400e165:	lea    ecx,[eax+0xc]
6400e168:	or     edx,0xffffffff
6400e16b:	lock xadd DWORD PTR [ecx],edx
6400e16f:	dec    edx
6400e170:	test   edx,edx
6400e172:	jg     0x6400e17e
6400e174:	mov    ecx,DWORD PTR [eax]
6400e176:	mov    edx,DWORD PTR [ecx]
6400e178:	push   eax
6400e179:	mov    eax,DWORD PTR [edx+0x4]
6400e17c:	call   eax
6400e17e:	mov    eax,DWORD PTR [ebp-0x20]
6400e181:	add    eax,0xfffffff0
6400e184:	mov    BYTE PTR [ebp-0x4],0x2
6400e188:	lea    ecx,[eax+0xc]
6400e18b:	or     edx,0xffffffff
6400e18e:	lock xadd DWORD PTR [ecx],edx
6400e192:	dec    edx
6400e193:	test   edx,edx
6400e195:	jg     0x6400e1a1
6400e197:	mov    ecx,DWORD PTR [eax]
6400e199:	mov    edx,DWORD PTR [ecx]
6400e19b:	push   eax
6400e19c:	mov    eax,DWORD PTR [edx+0x4]
6400e19f:	call   eax
6400e1a1:	mov    eax,DWORD PTR [ebp-0x54]
6400e1a4:	add    eax,0xfffffff0
6400e1a7:	mov    BYTE PTR [ebp-0x4],0x1
6400e1ab:	lea    ecx,[eax+0xc]
6400e1ae:	or     edx,0xffffffff
6400e1b1:	lock xadd DWORD PTR [ecx],edx
6400e1b5:	dec    edx
6400e1b6:	test   edx,edx
6400e1b8:	jg     0x6400e1c4
6400e1ba:	mov    ecx,DWORD PTR [eax]
6400e1bc:	mov    edx,DWORD PTR [ecx]
6400e1be:	push   eax
6400e1bf:	mov    eax,DWORD PTR [edx+0x4]
6400e1c2:	call   eax
6400e1c4:	mov    eax,DWORD PTR [ebp-0x4c]
6400e1c7:	add    eax,0xfffffff0
6400e1ca:	mov    BYTE PTR [ebp-0x4],0x0
6400e1ce:	lea    ecx,[eax+0xc]
6400e1d1:	or     edx,0xffffffff
6400e1d4:	lock xadd DWORD PTR [ecx],edx
6400e1d8:	dec    edx
6400e1d9:	test   edx,edx
6400e1db:	jg     0x6400e1e7
6400e1dd:	mov    ecx,DWORD PTR [eax]
6400e1df:	mov    edx,DWORD PTR [ecx]
6400e1e1:	push   eax
6400e1e2:	mov    eax,DWORD PTR [edx+0x4]
6400e1e5:	call   eax
6400e1e7:	mov    eax,esi
6400e1e9:	lea    esp,[ebp-0xac]
6400e1ef:	mov    ecx,DWORD PTR [ebp-0xc]
6400e1f2:	mov    DWORD PTR fs:0x0,ecx
6400e1f9:	pop    ecx
6400e1fa:	pop    edi
6400e1fb:	pop    esi
6400e1fc:	pop    ebx
6400e1fd:	mov    ecx,DWORD PTR [ebp+0x124]
6400e203:	xor    ecx,ebp
6400e205:	call   0x6400f34e
6400e20a:	add    ebp,0x128
6400e210:	mov    esp,ebp
6400e212:	pop    ebp
6400e213:	ret    
6400e214:	int3   
6400e215:	int3   
6400e216:	int3   
6400e217:	int3   
6400e218:	int3   
6400e219:	int3   
6400e21a:	int3   
6400e21b:	int3   
6400e21c:	int3   
6400e21d:	int3   
6400e21e:	int3   
6400e21f:	int3   
6400e220:	push   ebp
6400e221:	mov    ebp,esp
6400e223:	push   0xffffffff
6400e225:	push   0x6401e9e8
6400e22a:	mov    eax,fs:0x0
6400e230:	push   eax
6400e231:	sub    esp,0x50
6400e234:	mov    eax,ds:0x64028038
6400e239:	xor    eax,ebp
6400e23b:	mov    DWORD PTR [ebp-0x10],eax
6400e23e:	push   ebx
6400e23f:	push   esi
6400e240:	push   edi
6400e241:	push   eax
6400e242:	lea    eax,[ebp-0xc]
6400e245:	mov    fs:0x0,eax
6400e24b:	call   DWORD PTR ds:0x64028008
6400e251:	push   0xea60
6400e256:	mov    DWORD PTR [ebp-0x3c],eax
6400e259:	call   0x6400c860
6400e25e:	add    esp,0x4
6400e261:	mov    DWORD PTR [ebp-0x34],0x0
6400e268:	lea    eax,[ebp-0x30]
6400e26b:	push   eax
6400e26c:	call   0x6400d6c0
6400e271:	add    esp,0x4
6400e274:	xor    esi,esi
6400e276:	mov    DWORD PTR [ebp-0x4],esi
6400e279:	mov    DWORD PTR [ebp-0x14],0xf
6400e280:	mov    DWORD PTR [ebp-0x18],esi
6400e283:	mov    BYTE PTR [ebp-0x28],0x0
6400e287:	mov    eax,DWORD PTR [ebp-0x30]
6400e28a:	cmp    eax,esi
6400e28c:	mov    BYTE PTR [ebp-0x4],0x1
6400e290:	mov    ebx,eax
6400e292:	jne    0x6400e298
6400e294:	xor    ecx,ecx
6400e296:	jmp    0x6400e2df
6400e298:	push   eax
6400e299:	call   DWORD PTR ds:0x64021054
6400e29f:	add    eax,0x1
6400e2a2:	cmp    eax,0x3fffffff
6400e2a7:	jg     0x6400e2d9
6400e2a9:	lea    edi,[eax+eax*1]
6400e2ac:	mov    eax,edi
6400e2ae:	call   0x6400fad0
6400e2b3:	mov    esi,esp
6400e2b5:	test   esi,esi
6400e2b7:	je     0x6400e2d9
6400e2b9:	mov    ecx,DWORD PTR [ebp-0x3c]
6400e2bc:	push   0x0
6400e2be:	push   0x0
6400e2c0:	push   edi
6400e2c1:	push   esi
6400e2c2:	push   0xffffffff
6400e2c4:	push   ebx
6400e2c5:	push   0x0
6400e2c7:	push   ecx
6400e2c8:	mov    BYTE PTR [esi],0x0
6400e2cb:	call   DWORD PTR ds:0x64021024
6400e2d1:	neg    eax
6400e2d3:	sbb    eax,eax
6400e2d5:	and    eax,esi
6400e2d7:	jmp    0x6400e2db
6400e2d9:	xor    eax,eax
6400e2db:	mov    ecx,eax
6400e2dd:	xor    esi,esi
6400e2df:	mov    eax,ecx
6400e2e1:	mov    DWORD PTR [ebp-0x48],esi
6400e2e4:	mov    DWORD PTR [ebp-0x44],0xf
6400e2eb:	mov    BYTE PTR [ebp-0x58],0x0
6400e2ef:	lea    esi,[eax+0x1]
6400e2f2:	mov    dl,BYTE PTR [eax]
6400e2f4:	add    eax,0x1
6400e2f7:	test   dl,dl
6400e2f9:	jne    0x6400e2f2
6400e2fb:	sub    eax,esi
6400e2fd:	push   eax
6400e2fe:	push   ecx
6400e2ff:	lea    ecx,[ebp-0x5c]
6400e302:	call   0x64001bb0
6400e307:	lea    edx,[ebp-0x2c]
6400e30a:	push   edx
6400e30b:	lea    eax,[ebp-0x5c]
6400e30e:	push   eax
6400e30f:	mov    BYTE PTR [ebp-0x4],0x2
6400e313:	call   0x6400d410
6400e318:	mov    edi,0x10
6400e31d:	add    esp,0x8
6400e320:	cmp    DWORD PTR [ebp-0x44],edi
6400e323:	mov    bl,al
6400e325:	mov    BYTE PTR [ebp-0x4],0x1
6400e329:	jb     0x6400e337
6400e32b:	mov    ecx,DWORD PTR [ebp-0x58]
6400e32e:	push   ecx
6400e32f:	call   0x6400eb52
6400e334:	add    esp,0x4
6400e337:	test   bl,bl
6400e339:	jne    0x6400e3cc
6400e33f:	xor    ebx,ebx
6400e341:	xor    esi,esi
6400e343:	lea    edx,[ebp-0x38]
6400e346:	push   ebx
6400e347:	push   edx
6400e348:	mov    DWORD PTR [ebp-0x38],ebx
6400e34b:	call   0x6400b540
6400e350:	call   eax
6400e352:	test   eax,eax
6400e354:	je     0x6400e364
6400e356:	add    esi,0x3e8
6400e35c:	cmp    esi,0x493e0
6400e362:	ja     0x6400e371
6400e364:	push   0x3e8
6400e369:	call   DWORD PTR ds:0x64021050
6400e36f:	jmp    0x6400e343
6400e371:	cmp    DWORD PTR [ebp-0x14],edi
6400e374:	jb     0x6400e382
6400e376:	mov    eax,DWORD PTR [ebp-0x28]
6400e379:	push   eax
6400e37a:	call   0x6400eb52
6400e37f:	add    esp,0x4
6400e382:	mov    eax,DWORD PTR [ebp-0x30]
6400e385:	add    eax,0xfffffff0
6400e388:	mov    DWORD PTR [ebp-0x14],0xf
6400e38f:	mov    DWORD PTR [ebp-0x18],ebx
6400e392:	mov    BYTE PTR [ebp-0x28],0x0
6400e396:	mov    DWORD PTR [ebp-0x4],0xffffffff
6400e39d:	lea    ecx,[eax+0xc]
6400e3a0:	or     edx,0xffffffff
6400e3a3:	lock xadd DWORD PTR [ecx],edx
6400e3a7:	dec    edx
6400e3a8:	test   edx,edx
6400e3aa:	jg     0x6400e3b6
6400e3ac:	mov    ecx,DWORD PTR [eax]
6400e3ae:	mov    edx,DWORD PTR [ecx]
6400e3b0:	push   eax
6400e3b1:	mov    eax,DWORD PTR [edx+0x4]
6400e3b4:	call   eax
6400e3b6:	mov    eax,DWORD PTR [ebp-0x34]
6400e3b9:	add    eax,0x1
6400e3bc:	cmp    eax,0x3
6400e3bf:	mov    DWORD PTR [ebp-0x34],eax
6400e3c2:	jne    0x6400e268
6400e3c8:	xor    ebx,ebx
6400e3ca:	jmp    0x6400e424
6400e3cc:	xor    ebx,ebx
6400e3ce:	cmp    DWORD PTR [ebp-0x18],ebx
6400e3d1:	je     0x6400e3df
6400e3d3:	lea    ecx,[ebp-0x2c]
6400e3d6:	push   ecx
6400e3d7:	call   0x6400cea0
6400e3dc:	add    esp,0x4
6400e3df:	cmp    DWORD PTR [ebp-0x14],edi
6400e3e2:	jb     0x6400e3f0
6400e3e4:	mov    edx,DWORD PTR [ebp-0x28]
6400e3e7:	push   edx
6400e3e8:	call   0x6400eb52
6400e3ed:	add    esp,0x4
6400e3f0:	mov    eax,DWORD PTR [ebp-0x30]
6400e3f3:	add    eax,0xfffffff0
6400e3f6:	mov    DWORD PTR [ebp-0x14],0xf
6400e3fd:	mov    DWORD PTR [ebp-0x18],ebx
6400e400:	mov    BYTE PTR [ebp-0x28],0x0
6400e404:	mov    DWORD PTR [ebp-0x4],0xffffffff
6400e40b:	lea    ecx,[eax+0xc]
6400e40e:	or     edx,0xffffffff
6400e411:	lock xadd DWORD PTR [ecx],edx
6400e415:	dec    edx
6400e416:	test   edx,edx
6400e418:	jg     0x6400e424
6400e41a:	mov    ecx,DWORD PTR [eax]
6400e41c:	mov    edx,DWORD PTR [ecx]
6400e41e:	push   eax
6400e41f:	mov    eax,DWORD PTR [edx+0x4]
6400e422:	call   eax
6400e424:	xor    esi,esi
6400e426:	lea    ecx,[ebp-0x40]
6400e429:	push   ebx
6400e42a:	push   ecx
6400e42b:	mov    DWORD PTR [ebp-0x40],ebx
6400e42e:	call   0x6400b540
6400e433:	call   eax
6400e435:	test   eax,eax
6400e437:	je     0x6400e44b
6400e439:	add    esi,0x3e8
6400e43f:	cmp    esi,0xa4cb80
6400e445:	ja     0x6400e261
6400e44b:	push   0x3e8
6400e450:	call   DWORD PTR ds:0x64021050
6400e456:	jmp    0x6400e426
6400e458:	int3   
6400e459:	int3   
6400e45a:	int3   
6400e45b:	int3   
6400e45c:	int3   
6400e45d:	int3   
6400e45e:	int3   
6400e45f:	int3   
6400e460:	sub    esp,0x20c
6400e466:	mov    eax,ds:0x64028038
6400e46b:	xor    eax,esp
6400e46d:	mov    DWORD PTR [esp+0x208],eax
6400e474:	push   0x208
6400e479:	lea    eax,[esp+0x4]
6400e47d:	push   eax
6400e47e:	push   0x0
6400e480:	call   DWORD PTR ds:0x64021070
6400e486:	test   eax,eax
6400e488:	je     0x6400e4d7
6400e48a:	lea    ecx,[esp]
6400e48d:	push   0x104
6400e492:	push   ecx
6400e493:	call   0x6400fa33
6400e498:	lea    edx,[esp+0x8]
6400e49c:	push   0x640218e4
6400e4a1:	push   edx
6400e4a2:	call   0x6400f493
6400e4a7:	add    esp,0x10
6400e4aa:	test   eax,eax
6400e4ac:	je     0x6400e4d7
6400e4ae:	call   0x6400d500
6400e4b3:	test   al,al
6400e4b5:	je     0x6400e4d7
6400e4b7:	push   0x0
6400e4b9:	push   0x0
6400e4bb:	push   0x0
6400e4bd:	push   0x6400e220
6400e4c2:	push   0x0
6400e4c4:	push   0x0
6400e4c6:	call   DWORD PTR ds:0x6402106c
6400e4cc:	test   eax,eax
6400e4ce:	je     0x6400e4d7
6400e4d0:	push   eax
6400e4d1:	call   DWORD PTR ds:0x64021040
6400e4d7:	mov    ecx,DWORD PTR [esp+0x208]
6400e4de:	xor    ecx,esp
6400e4e0:	xor    eax,eax
6400e4e2:	call   0x6400f34e
6400e4e7:	add    esp,0x20c
6400e4ed:	ret    0x4
6400e4f0:	push   0x0
6400e4f2:	push   0x0
6400e4f4:	push   0x0
6400e4f6:	push   0x6400e460
6400e4fb:	push   0x0
6400e4fd:	push   0x0
6400e4ff:	call   DWORD PTR ds:0x6402106c
6400e505:	ret    
6400e506:	push   ebp
6400e507:	mov    ebp,esp
6400e509:	sub    esp,0xc
6400e50c:	mov    eax,ds:0x64028038
6400e511:	xor    eax,ebp
6400e513:	mov    DWORD PTR [ebp-0x4],eax
6400e516:	push   esi
6400e517:	xor    esi,esi
6400e519:	call   DWORD PTR ds:0x640210d8
6400e51f:	push   0x7
6400e521:	lea    ecx,[ebp-0xc]
6400e524:	push   ecx
6400e525:	push   0x1004
6400e52a:	push   eax
6400e52b:	call   DWORD PTR ds:0x640210d4
6400e531:	test   eax,eax
6400e533:	je     0x6400e554
6400e535:	mov    cl,BYTE PTR [ebp-0xc]
6400e538:	test   cl,cl
6400e53a:	lea    eax,[ebp-0xc]
6400e53d:	je     0x6400e554
6400e53f:	imul   esi,esi,0xa
6400e542:	movsx  ecx,cl
6400e545:	inc    eax
6400e546:	lea    esi,[esi+ecx*1-0x30]
6400e54a:	mov    cl,BYTE PTR [eax]
6400e54c:	test   cl,cl
6400e54e:	jne    0x6400e53f
6400e550:	test   esi,esi
6400e552:	jne    0x6400e55c
6400e554:	call   DWORD PTR ds:0x640210d0
6400e55a:	mov    esi,eax
6400e55c:	mov    ecx,DWORD PTR [ebp-0x4]
6400e55f:	mov    eax,esi
6400e561:	xor    ecx,ebp
6400e563:	pop    esi
6400e564:	call   0x6400f34e
6400e569:	leave  
6400e56a:	ret    
6400e56b:	push   0x3
6400e56d:	pop    eax
6400e56e:	ret    
6400e56f:	push   ebp
6400e570:	mov    ebp,esp
6400e572:	sub    esp,0x98
6400e578:	mov    eax,ds:0x64028038
6400e57d:	xor    eax,ebp
6400e57f:	mov    DWORD PTR [ebp-0x4],eax
6400e582:	lea    eax,[ebp-0x98]
6400e588:	push   eax
6400e589:	mov    DWORD PTR [ebp-0x98],0x94
6400e593:	call   DWORD PTR ds:0x640210dc
6400e599:	cmp    DWORD PTR [ebp-0x88],0x2
6400e5a0:	jne    0x6400e5b0
6400e5a2:	cmp    DWORD PTR [ebp-0x94],0x5
6400e5a9:	mov    eax,0x6400e56b
6400e5ae:	jae    0x6400e5b5
6400e5b0:	mov    eax,0x6400e506
6400e5b5:	push   eax
6400e5b6:	push   0x64028008
6400e5bb:	call   DWORD PTR ds:0x640210cc
6400e5c1:	call   DWORD PTR ds:0x64028008
6400e5c7:	mov    ecx,DWORD PTR [ebp-0x4]
6400e5ca:	xor    ecx,ebp
6400e5cc:	call   0x6400f34e
6400e5d1:	leave  
6400e5d2:	ret    
6400e5d3:	push   esi
6400e5d4:	push   0x18
6400e5d6:	mov    esi,ecx
6400e5d8:	push   0x0
6400e5da:	push   esi
6400e5db:	call   0x6400fa50
6400e5e0:	add    esp,0xc
6400e5e3:	mov    eax,esi
6400e5e5:	pop    esi
6400e5e6:	ret    
6400e5e7:	push   0xc
6400e5e9:	push   0x64025770
6400e5ee:	call   0x640106f8
6400e5f3:	and    DWORD PTR [ebp-0x4],0x0
6400e5f7:	push   ecx
6400e5f8:	call   DWORD PTR ds:0x6402101c
6400e5fe:	and    DWORD PTR [ebp-0x1c],0x0
6400e602:	jmp    0x6400e622
6400e604:	mov    eax,DWORD PTR [ebp-0x14]
6400e607:	mov    eax,DWORD PTR [eax]
6400e609:	mov    eax,DWORD PTR [eax]
6400e60b:	xor    ecx,ecx
6400e60d:	cmp    eax,0xc0000017
6400e612:	sete   cl
6400e615:	mov    eax,ecx
6400e617:	ret    
6400e618:	mov    esp,DWORD PTR [ebp-0x18]
6400e61b:	mov    DWORD PTR [ebp-0x1c],0x8007000e
6400e622:	mov    DWORD PTR [ebp-0x4],0xfffffffe
6400e629:	mov    eax,DWORD PTR [ebp-0x1c]
6400e62c:	call   0x6401073d
6400e631:	ret    
6400e632:	mov    eax,DWORD PTR [esp+0x4]
6400e636:	test   eax,eax
6400e638:	jne    0x6400e641
6400e63a:	mov    eax,0x80070057
6400e63f:	jmp    0x6400e652
6400e641:	cmp    DWORD PTR [eax],0x2c
6400e644:	jne    0x6400e63a
6400e646:	and    DWORD PTR [eax+0x1c],0x0
6400e64a:	lea    ecx,[eax+0x4]
6400e64d:	call   0x6400e5e7
6400e652:	ret    0x4
6400e655:	push   esi
6400e656:	mov    esi,ecx
6400e658:	mov    eax,DWORD PTR [esi]
6400e65a:	test   eax,eax
6400e65c:	je     0x6400e668
6400e65e:	push   eax
6400e65f:	call   0x640101e6
6400e664:	and    DWORD PTR [esi],0x0
6400e667:	pop    ecx
6400e668:	and    DWORD PTR [esi+0x4],0x0
6400e66c:	and    DWORD PTR [esi+0x8],0x0
6400e670:	pop    esi
6400e671:	ret    
6400e672:	mov    eax,DWORD PTR [esp+0x4]
6400e676:	test   eax,eax
6400e678:	jl     0x6400e687
6400e67a:	cmp    eax,DWORD PTR [ecx+0x4]
6400e67d:	jge    0x6400e687
6400e67f:	mov    ecx,DWORD PTR [ecx]
6400e681:	lea    eax,[ecx+eax*2]
6400e684:	ret    0x4
6400e687:	push   0x0
6400e689:	push   0x0
6400e68b:	push   0x1
6400e68d:	push   0xc000008c
6400e692:	call   DWORD PTR ds:0x640210e0
6400e698:	int3   
6400e699:	mov    eax,DWORD PTR [esp+0x4]
6400e69d:	test   eax,eax
6400e69f:	jl     0x6400e6ae
6400e6a1:	cmp    eax,DWORD PTR [ecx+0x4]
6400e6a4:	jge    0x6400e6ae
6400e6a6:	mov    ecx,DWORD PTR [ecx]
6400e6a8:	lea    eax,[ecx+eax*4]
6400e6ab:	ret    0x4
6400e6ae:	push   0x0
6400e6b0:	push   0x0
6400e6b2:	push   0x1
6400e6b4:	push   0xc000008c
6400e6b9:	call   DWORD PTR ds:0x640210e0
6400e6bf:	int3   
6400e6c0:	push   esi
6400e6c1:	mov    esi,ecx
6400e6c3:	lea    ecx,[esi+0x4]
6400e6c6:	call   0x6400e5d3
6400e6cb:	xor    eax,eax
6400e6cd:	mov    DWORD PTR [esi+0x20],eax
6400e6d0:	mov    DWORD PTR [esi+0x24],eax
6400e6d3:	mov    DWORD PTR [esi+0x28],eax
6400e6d6:	mov    eax,esi
6400e6d8:	pop    esi
6400e6d9:	ret    
6400e6da:	push   esi
6400e6db:	mov    esi,DWORD PTR [esp+0x8]
6400e6df:	test   esi,esi
6400e6e1:	jne    0x6400e6ea
6400e6e3:	mov    eax,0x80070057
6400e6e8:	jmp    0x6400e736
6400e6ea:	mov    eax,DWORD PTR [esi]
6400e6ec:	test   eax,eax
6400e6ee:	je     0x6400e734
6400e6f0:	cmp    eax,0x2c
6400e6f3:	jne    0x6400e6e3
6400e6f5:	push   edi
6400e6f6:	xor    edi,edi
6400e6f8:	cmp    DWORD PTR [esi+0x24],edi
6400e6fb:	jle    0x6400e71e
6400e6fd:	push   ebx
6400e6fe:	lea    ebx,[esi+0x20]
6400e701:	push   edi
6400e702:	mov    ecx,ebx
6400e704:	call   0x6400e672
6400e709:	movzx  eax,WORD PTR [eax]
6400e70c:	push   DWORD PTR [esp+0x14]
6400e710:	push   eax
6400e711:	call   DWORD PTR ds:0x640211a8
6400e717:	inc    edi
6400e718:	cmp    edi,DWORD PTR [esi+0x24]
6400e71b:	jl     0x6400e701
6400e71d:	pop    ebx
6400e71e:	lea    ecx,[esi+0x20]
6400e721:	call   0x6400e655
6400e726:	lea    eax,[esi+0x4]
6400e729:	push   eax
6400e72a:	call   DWORD PTR ds:0x6402108c
6400e730:	and    DWORD PTR [esi],0x0
6400e733:	pop    edi
6400e734:	xor    eax,eax
6400e736:	pop    esi
6400e737:	ret    0x8
6400e73a:	push   esi
6400e73b:	mov    esi,ecx
6400e73d:	cmp    BYTE PTR [esi+0x4],0x0
6400e741:	je     0x6400e74f
6400e743:	push   DWORD PTR [esi]
6400e745:	call   DWORD PTR ds:0x64021088
6400e74b:	mov    BYTE PTR [esi+0x4],0x0
6400e74f:	pop    esi
6400e750:	ret    
6400e751:	push   esi
6400e752:	mov    esi,ecx
6400e754:	lea    ecx,[esi+0x18]
6400e757:	call   0x6400e5d3
6400e75c:	xor    eax,eax
6400e75e:	mov    DWORD PTR [esi+0x30],eax
6400e761:	mov    DWORD PTR [esi+0x34],eax
6400e764:	mov    DWORD PTR [esi+0x38],eax
6400e767:	mov    eax,esi
6400e769:	pop    esi
6400e76a:	ret    
6400e76b:	push   esi
6400e76c:	mov    esi,ecx
6400e76e:	lea    eax,[esi+0x18]
6400e771:	push   eax
6400e772:	call   DWORD PTR ds:0x6402108c
6400e778:	lea    ecx,[esi+0x30]
6400e77b:	pop    esi
6400e77c:	jmp    0x6400e655
6400e781:	push   ebp
6400e782:	mov    ebp,esp
6400e784:	push   ecx
6400e785:	push   ecx
6400e786:	push   esi
6400e787:	mov    esi,ecx
6400e789:	lea    eax,[esi+0x18]
6400e78c:	push   eax
6400e78d:	mov    DWORD PTR [ebp-0x8],eax
6400e790:	call   DWORD PTR ds:0x64021084
6400e796:	mov    eax,DWORD PTR [esi+0x34]
6400e799:	mov    ecx,DWORD PTR [ebp+0x8]
6400e79c:	cmp    ecx,eax
6400e79e:	mov    BYTE PTR [ebp-0x4],0x1
6400e7a2:	jg     0x6400e7c8
6400e7a4:	test   ecx,ecx
6400e7a6:	jl     0x6400e7c8
6400e7a8:	cmp    ecx,eax
6400e7aa:	jne    0x6400e7bb
6400e7ac:	mov    esi,DWORD PTR [esi+0x8]
6400e7af:	lea    ecx,[ebp-0x8]
6400e7b2:	call   0x6400e73a
6400e7b7:	mov    eax,esi
6400e7b9:	jmp    0x6400e7d2
6400e7bb:	push   ecx
6400e7bc:	lea    ecx,[esi+0x30]
6400e7bf:	call   0x6400e699
6400e7c4:	mov    esi,DWORD PTR [eax]
6400e7c6:	jmp    0x6400e7af
6400e7c8:	lea    ecx,[ebp-0x8]
6400e7cb:	call   0x6400e73a
6400e7d0:	xor    eax,eax
6400e7d2:	pop    esi
6400e7d3:	leave  
6400e7d4:	ret    0x4
6400e7d7:	push   esi
6400e7d8:	mov    esi,ecx
6400e7da:	call   0x6400e6c0
6400e7df:	push   esi
6400e7e0:	mov    DWORD PTR [esi],0x2c
6400e7e6:	call   0x6400e632
6400e7eb:	test   eax,eax
6400e7ed:	jge    0x6400e7f9
6400e7ef:	mov    BYTE PTR ds:0x6402c2bc,0x1
6400e7f6:	and    DWORD PTR [esi],0x0
6400e7f9:	mov    eax,esi
6400e7fb:	pop    esi
6400e7fc:	ret    
6400e7fd:	push   ebp
6400e7fe:	lea    ebp,[esp-0x78]
6400e802:	sub    esp,0x98
6400e808:	mov    eax,ds:0x64028038
6400e80d:	xor    eax,ebp
6400e80f:	mov    DWORD PTR [ebp+0x74],eax
6400e812:	push   esi
6400e813:	mov    esi,ecx
6400e815:	call   0x6400e751
6400e81a:	mov    eax,0x64000000
6400e81f:	push   0x94
6400e824:	mov    DWORD PTR [esi+0x8],eax
6400e827:	mov    DWORD PTR [esi+0x4],eax
6400e82a:	lea    eax,[ebp-0x20]
6400e82d:	push   0x0
6400e82f:	push   eax
6400e830:	mov    DWORD PTR [esi],0x3c
6400e836:	mov    BYTE PTR [esi+0xc],0x0
6400e83a:	call   0x6400fa50
6400e83f:	add    esp,0xc
6400e842:	lea    eax,[ebp-0x20]
6400e845:	push   eax
6400e846:	mov    DWORD PTR [ebp-0x20],0x94
6400e84d:	call   DWORD PTR ds:0x640210dc
6400e853:	cmp    DWORD PTR [ebp-0x10],0x2
6400e857:	jne    0x6400e861
6400e859:	cmp    DWORD PTR [ebp-0x1c],0x5
6400e85d:	jb     0x6400e879
6400e85f:	jmp    0x6400e875
6400e861:	cmp    DWORD PTR [ebp-0x10],0x1
6400e865:	jne    0x6400e879
6400e867:	cmp    DWORD PTR [ebp-0x1c],0x4
6400e86b:	ja     0x6400e875
6400e86d:	jne    0x6400e879
6400e86f:	cmp    DWORD PTR [ebp-0x18],0x0
6400e873:	jbe    0x6400e879
6400e875:	mov    BYTE PTR [esi+0xc],0x1
6400e879:	lea    ecx,[esi+0x18]
6400e87c:	mov    DWORD PTR [esi+0x10],0x800
6400e883:	mov    DWORD PTR [esi+0x14],0x64021afc
6400e88a:	call   0x6400e5e7
6400e88f:	test   eax,eax
6400e891:	jge    0x6400e89a
6400e893:	mov    BYTE PTR ds:0x6402c2bc,0x1
6400e89a:	mov    ecx,DWORD PTR [ebp+0x74]
6400e89d:	mov    eax,esi
6400e89f:	xor    ecx,ebp
6400e8a1:	pop    esi
6400e8a2:	call   0x6400f34e
6400e8a7:	add    ebp,0x78
6400e8aa:	leave  
6400e8ab:	ret    
6400e8ac:	push   esi
6400e8ad:	push   DWORD PTR ds:0x64029470
6400e8b3:	mov    esi,ecx
6400e8b5:	push   esi
6400e8b6:	call   0x6400e6da
6400e8bb:	lea    ecx,[esi+0x20]
6400e8be:	pop    esi
6400e8bf:	jmp    0x6400e655
6400e8c4:	cmp    BYTE PTR [ecx+0x8],0x0
6400e8c8:	mov    DWORD PTR [ecx],0x64021b0c
6400e8ce:	je     0x6400e8de
6400e8d0:	mov    ecx,DWORD PTR [ecx+0x4]
6400e8d3:	test   ecx,ecx
6400e8d5:	je     0x6400e8de
6400e8d7:	push   ecx
6400e8d8:	call   DWORD PTR ds:0x640210e4
6400e8de:	ret    
6400e8df:	push   DWORD PTR [esp+0x4]
6400e8e3:	push   0x0
6400e8e5:	push   DWORD PTR [ecx+0x4]
6400e8e8:	call   DWORD PTR ds:0x640210e8
6400e8ee:	ret    0x4
6400e8f1:	cmp    DWORD PTR [esp+0x4],0x0
6400e8f6:	je     0x6400e907
6400e8f8:	push   DWORD PTR [esp+0x4]
6400e8fc:	push   0x0
6400e8fe:	push   DWORD PTR [ecx+0x4]
6400e901:	call   DWORD PTR ds:0x640210ec
6400e907:	ret    0x4
6400e90a:	push   ebp
6400e90b:	mov    ebp,esp
6400e90d:	xor    eax,eax
6400e90f:	cmp    DWORD PTR [ebp+0x8],eax
6400e912:	jne    0x6400e91d
6400e914:	push   DWORD PTR [ebp+0xc]
6400e917:	mov    eax,DWORD PTR [ecx]
6400e919:	call   DWORD PTR [eax]
6400e91b:	jmp    0x6400e93e
6400e91d:	cmp    DWORD PTR [ebp+0xc],eax
6400e920:	jne    0x6400e92e
6400e922:	push   DWORD PTR [ebp+0x8]
6400e925:	mov    eax,DWORD PTR [ecx]
6400e927:	call   DWORD PTR [eax+0x4]
6400e92a:	xor    eax,eax
6400e92c:	jmp    0x6400e93e
6400e92e:	push   DWORD PTR [ebp+0xc]
6400e931:	push   DWORD PTR [ebp+0x8]
6400e934:	push   eax
6400e935:	push   DWORD PTR [ecx+0x4]
6400e938:	call   DWORD PTR ds:0x640210f0
6400e93e:	pop    ebp
6400e93f:	ret    0x8
6400e942:	push   DWORD PTR [esp+0x4]
6400e946:	push   0x0
6400e948:	push   DWORD PTR [ecx+0x4]
6400e94b:	call   DWORD PTR ds:0x640210f4
6400e951:	ret    0x4
6400e954:	push   esi
6400e955:	mov    esi,ecx
6400e957:	call   0x6400e8c4
6400e95c:	test   BYTE PTR [esp+0x8],0x1
6400e961:	je     0x6400e96a
6400e963:	push   esi
6400e964:	call   0x6400eb52
6400e969:	pop    ecx
6400e96a:	mov    eax,esi
6400e96c:	pop    esi
6400e96d:	ret    0x4
6400e970:	mov    eax,ecx
6400e972:	mov    ecx,DWORD PTR [esp+0x4]
6400e976:	mov    DWORD PTR [eax+0x4],ecx
6400e979:	mov    DWORD PTR [eax],0x64021b20
6400e97f:	xor    ecx,ecx
6400e981:	mov    DWORD PTR [eax+0x14],0x2
6400e988:	mov    DWORD PTR [eax+0xc],ecx
6400e98b:	mov    DWORD PTR [eax+0x10],ecx
6400e98e:	mov    WORD PTR [eax+0x18],cx
6400e992:	mov    WORD PTR [eax+0x1a],cx
6400e996:	mov    DWORD PTR [eax+0x8],eax
6400e999:	ret    0x4
6400e99c:	mov    eax,DWORD PTR [esp+0x8]
6400e9a0:	mul    DWORD PTR [esp+0xc]
6400e9a4:	test   edx,edx
6400e9a6:	ja     0x6400e9ad
6400e9a8:	cmp    eax,0xffffffff
6400e9ab:	jbe    0x6400e9b3
6400e9ad:	mov    eax,0x80070057
6400e9b2:	ret    
6400e9b3:	mov    ecx,DWORD PTR [esp+0x4]
6400e9b7:	mov    DWORD PTR [ecx],eax
6400e9b9:	xor    eax,eax
6400e9bb:	ret    
6400e9bc:	mov    ecx,DWORD PTR [ecx+0x4]
6400e9bf:	mov    eax,DWORD PTR [ecx]
6400e9c1:	jmp    DWORD PTR [eax+0x4]
6400e9c4:	xor    edx,edx
6400e9c6:	lea    eax,[ecx+0x14]
6400e9c9:	inc    edx
6400e9ca:	lock xadd DWORD PTR [eax],edx
6400e9ce:	lea    eax,[ecx+0x8]
6400e9d1:	ret    
6400e9d2:	mov    eax,ecx
6400e9d4:	ret    
6400e9d5:	test   BYTE PTR [esp+0x4],0x1
6400e9da:	push   esi
6400e9db:	mov    esi,ecx
6400e9dd:	mov    DWORD PTR [esi],0x64021b20
6400e9e3:	je     0x6400e9ec
6400e9e5:	push   esi
6400e9e6:	call   0x6400eb52
6400e9eb:	pop    ecx
6400e9ec:	mov    eax,esi
6400e9ee:	pop    esi
6400e9ef:	ret    0x4
6400e9f2:	mov    eax,DWORD PTR [esp+0x8]
6400e9f6:	mov    ecx,DWORD PTR [esp+0xc]
6400e9fa:	or     edx,0xffffffff
6400e9fd:	sub    edx,eax
6400e9ff:	cmp    edx,ecx
6400ea01:	jae    0x6400ea09
6400ea03:	mov    eax,0x80070057
6400ea08:	ret    
6400ea09:	add    eax,ecx
6400ea0b:	mov    ecx,DWORD PTR [esp+0x4]
6400ea0f:	mov    DWORD PTR [ecx],eax
6400ea11:	xor    eax,eax
6400ea13:	ret    
6400ea14:	push   ebp
6400ea15:	mov    ebp,esp
6400ea17:	push   esi
6400ea18:	mov    esi,DWORD PTR [ebp+0x8]
6400ea1b:	push   edi
6400ea1c:	push   DWORD PTR [ebp+0xc]
6400ea1f:	add    esi,0x8
6400ea22:	and    esi,0xfffffff8
6400ea25:	lea    eax,[ebp+0x8]
6400ea28:	push   esi
6400ea29:	push   eax
6400ea2a:	mov    edi,ecx
6400ea2c:	call   0x6400e99c
6400ea31:	add    esp,0xc
6400ea34:	test   eax,eax
6400ea36:	jl     0x6400ea6e
6400ea38:	push   DWORD PTR [ebp+0x8]
6400ea3b:	lea    eax,[ebp+0x8]
6400ea3e:	push   0x10
6400ea40:	push   eax
6400ea41:	call   0x6400e9f2
6400ea46:	add    esp,0xc
6400ea49:	test   eax,eax
6400ea4b:	jl     0x6400ea6e
6400ea4d:	mov    ecx,DWORD PTR [edi+0x4]
6400ea50:	push   DWORD PTR [ebp+0x8]
6400ea53:	mov    eax,DWORD PTR [ecx]
6400ea55:	call   DWORD PTR [eax]
6400ea57:	test   eax,eax
6400ea59:	je     0x6400ea6e
6400ea5b:	dec    esi
6400ea5c:	and    DWORD PTR [eax+0x4],0x0
6400ea60:	mov    DWORD PTR [eax],edi
6400ea62:	mov    DWORD PTR [eax+0xc],0x1
6400ea69:	mov    DWORD PTR [eax+0x8],esi
6400ea6c:	jmp    0x6400ea70
6400ea6e:	xor    eax,eax
6400ea70:	pop    edi
6400ea71:	pop    esi
6400ea72:	pop    ebp
6400ea73:	ret    0x8
6400ea76:	push   ebp
6400ea77:	mov    ebp,esp
6400ea79:	push   esi
6400ea7a:	mov    esi,DWORD PTR [ebp+0xc]
6400ea7d:	push   edi
6400ea7e:	push   DWORD PTR [ebp+0x10]
6400ea81:	add    esi,0x8
6400ea84:	and    esi,0xfffffff8
6400ea87:	lea    eax,[ebp+0xc]
6400ea8a:	push   esi
6400ea8b:	push   eax
6400ea8c:	mov    edi,ecx
6400ea8e:	call   0x6400e99c
6400ea93:	add    esp,0xc
6400ea96:	test   eax,eax
6400ea98:	jl     0x6400eac7
6400ea9a:	push   DWORD PTR [ebp+0xc]
6400ea9d:	lea    eax,[ebp+0xc]
6400eaa0:	push   0x10
6400eaa2:	push   eax
6400eaa3:	call   0x6400e9f2
6400eaa8:	add    esp,0xc
6400eaab:	test   eax,eax
6400eaad:	jl     0x6400eac7
6400eaaf:	push   DWORD PTR [ebp+0xc]
6400eab2:	mov    ecx,DWORD PTR [edi+0x4]
6400eab5:	push   DWORD PTR [ebp+0x8]
6400eab8:	mov    eax,DWORD PTR [ecx]
6400eaba:	call   DWORD PTR [eax+0x8]
6400eabd:	test   eax,eax
6400eabf:	je     0x6400eac7
6400eac1:	dec    esi
6400eac2:	mov    DWORD PTR [eax+0x8],esi
6400eac5:	jmp    0x6400eac9
6400eac7:	xor    eax,eax
6400eac9:	pop    edi
6400eaca:	pop    esi
6400eacb:	pop    ebp
6400eacc:	ret    0xc
6400eacf:	push   0x44
6400ead1:	mov    eax,0x6401ea15
6400ead6:	call   0x64010bab
6400eadb:	push   0x64021b38
6400eae0:	lea    ecx,[ebp-0x28]
6400eae3:	call   0x64001960
6400eae8:	and    DWORD PTR [ebp-0x4],0x0
6400eaec:	lea    eax,[ebp-0x28]
6400eaef:	push   eax
6400eaf0:	lea    ecx,[ebp-0x50]
6400eaf3:	call   0x64002530
6400eaf8:	push   0x64025ea8
6400eafd:	lea    eax,[ebp-0x50]
6400eb00:	push   eax
6400eb01:	mov    DWORD PTR [ebp-0x50],0x6402130c
6400eb08:	call   0x6400ef3d
6400eb0d:	int3   
6400eb0e:	push   0x44
6400eb10:	mov    eax,0x6401ea38
6400eb15:	call   0x64010bab
6400eb1a:	push   0x64021b48
6400eb1f:	lea    ecx,[ebp-0x28]
6400eb22:	call   0x64001960
6400eb27:	and    DWORD PTR [ebp-0x4],0x0
6400eb2b:	lea    eax,[ebp-0x28]
6400eb2e:	push   eax
6400eb2f:	lea    ecx,[ebp-0x50]
6400eb32:	call   0x64002530
6400eb37:	push   0x64025e6c
6400eb3c:	lea    eax,[ebp-0x50]
6400eb3f:	push   eax
6400eb40:	mov    DWORD PTR [ebp-0x50],0x64021318
6400eb47:	call   0x6400ef3d
6400eb4c:	int3   
6400eb4d:	jmp    0x6400eed3
6400eb52:	jmp    0x640101e6
6400eb57:	push   ecx
6400eb58:	mov    DWORD PTR [ecx],0x64021b64
6400eb5e:	call   0x64010c14
6400eb63:	pop    ecx
6400eb64:	ret    
6400eb65:	push   esi
6400eb66:	mov    esi,ecx
6400eb68:	call   0x6400eb57
6400eb6d:	test   BYTE PTR [esp+0x8],0x1
6400eb72:	je     0x6400eb7b
6400eb74:	push   esi
6400eb75:	call   0x6400eb52
6400eb7a:	pop    ecx
6400eb7b:	mov    eax,esi
6400eb7d:	pop    esi
6400eb7e:	ret    0x4
6400eb81:	mov    eax,DWORD PTR [esp+0x4]
6400eb85:	add    ecx,0x9
6400eb88:	push   ecx
6400eb89:	add    eax,0x9
6400eb8c:	push   eax
6400eb8d:	call   0x64010c90
6400eb92:	neg    eax
6400eb94:	pop    ecx
6400eb95:	sbb    eax,eax
6400eb97:	pop    ecx
6400eb98:	inc    eax
6400eb99:	ret    0x4
6400eb9c:	mov    eax,ecx
6400eb9e:	and    DWORD PTR [eax+0x4],0x0
6400eba2:	and    DWORD PTR [eax+0x8],0x0
6400eba6:	mov    DWORD PTR [eax],0x64021b6c
6400ebac:	ret    
6400ebad:	push   ebx
6400ebae:	mov    ebx,DWORD PTR [esp+0x8]
6400ebb2:	push   esi
6400ebb3:	push   edi
6400ebb4:	mov    edi,ecx
6400ebb6:	mov    DWORD PTR [edi],0x64021b6c
6400ebbc:	mov    eax,DWORD PTR [ebx]
6400ebbe:	test   eax,eax
6400ebc0:	je     0x6400ebe8
6400ebc2:	push   eax
6400ebc3:	call   0x64010b20
6400ebc8:	mov    esi,eax
6400ebca:	inc    esi
6400ebcb:	push   esi
6400ebcc:	call   0x640102c3
6400ebd1:	test   eax,eax
6400ebd3:	pop    ecx
6400ebd4:	pop    ecx
6400ebd5:	mov    DWORD PTR [edi+0x4],eax
6400ebd8:	je     0x6400ebec
6400ebda:	push   DWORD PTR [ebx]
6400ebdc:	push   esi
6400ebdd:	push   eax
6400ebde:	call   0x64010d18
6400ebe3:	add    esp,0xc
6400ebe6:	jmp    0x6400ebec
6400ebe8:	and    DWORD PTR [edi+0x4],0x0
6400ebec:	mov    DWORD PTR [edi+0x8],0x1
6400ebf3:	mov    eax,edi
6400ebf5:	pop    edi
6400ebf6:	pop    esi
6400ebf7:	pop    ebx
6400ebf8:	ret    0x4
6400ebfb:	mov    eax,ecx
6400ebfd:	mov    ecx,DWORD PTR [esp+0x4]
6400ec01:	mov    DWORD PTR [eax],0x64021b6c
6400ec07:	mov    ecx,DWORD PTR [ecx]
6400ec09:	and    DWORD PTR [eax+0x8],0x0
6400ec0d:	mov    DWORD PTR [eax+0x4],ecx
6400ec10:	ret    0x8
6400ec13:	push   ebx
6400ec14:	mov    ebx,DWORD PTR [esp+0x8]
6400ec18:	push   esi
6400ec19:	mov    esi,ecx
6400ec1b:	mov    DWORD PTR [esi],0x64021b6c
6400ec21:	mov    eax,DWORD PTR [ebx+0x8]
6400ec24:	mov    DWORD PTR [esi+0x8],eax
6400ec27:	test   eax,eax
6400ec29:	mov    eax,DWORD PTR [ebx+0x4]
6400ec2c:	push   edi
6400ec2d:	je     0x6400ec60
6400ec2f:	test   eax,eax
6400ec31:	je     0x6400ec5a
6400ec33:	push   eax
6400ec34:	call   0x64010b20
6400ec39:	mov    edi,eax
6400ec3b:	inc    edi
6400ec3c:	push   edi
6400ec3d:	call   0x640102c3
6400ec42:	test   eax,eax
6400ec44:	pop    ecx
6400ec45:	pop    ecx
6400ec46:	mov    DWORD PTR [esi+0x4],eax
6400ec49:	je     0x6400ec63
6400ec4b:	push   DWORD PTR [ebx+0x4]
6400ec4e:	push   edi
6400ec4f:	push   eax
6400ec50:	call   0x64010d18
6400ec55:	add    esp,0xc
6400ec58:	jmp    0x6400ec63
6400ec5a:	and    DWORD PTR [esi+0x4],0x0
6400ec5e:	jmp    0x6400ec63
6400ec60:	mov    DWORD PTR [esi+0x4],eax
6400ec63:	pop    edi
6400ec64:	mov    eax,esi
6400ec66:	pop    esi
6400ec67:	pop    ebx
6400ec68:	ret    0x4
6400ec6b:	cmp    DWORD PTR [ecx+0x8],0x0
6400ec6f:	mov    DWORD PTR [ecx],0x64021b6c
6400ec75:	je     0x6400ec80
6400ec77:	push   DWORD PTR [ecx+0x4]
6400ec7a:	call   0x640101e6
6400ec7f:	pop    ecx
6400ec80:	ret    
6400ec81:	mov    eax,DWORD PTR [ecx+0x4]
6400ec84:	test   eax,eax
6400ec86:	jne    0x6400ec8d
6400ec88:	mov    eax,0x64021b74
6400ec8d:	ret    
6400ec8e:	push   esi
6400ec8f:	mov    esi,ecx
6400ec91:	call   0x6400ec6b
6400ec96:	test   BYTE PTR [esp+0x8],0x1
6400ec9b:	je     0x6400eca4
6400ec9d:	push   esi
6400ec9e:	call   0x6400eb52
6400eca3:	pop    ecx
6400eca4:	mov    eax,esi
6400eca6:	pop    esi
6400eca7:	ret    0x4
6400ecaa:	push   ebp
6400ecab:	mov    ebp,esp
6400ecad:	push   esi
6400ecae:	mov    esi,DWORD PTR [ebp+0x14]
6400ecb1:	push   edi
6400ecb2:	xor    edi,edi
6400ecb4:	cmp    esi,edi
6400ecb6:	jne    0x6400ecbc
6400ecb8:	xor    eax,eax
6400ecba:	jmp    0x6400ed21
6400ecbc:	cmp    DWORD PTR [ebp+0x8],edi
6400ecbf:	jne    0x6400ecdc
6400ecc1:	call   0x64011120
6400ecc6:	push   0x16
6400ecc8:	pop    esi
6400ecc9:	mov    DWORD PTR [eax],esi
6400eccb:	push   edi
6400eccc:	push   edi
6400eccd:	push   edi
6400ecce:	push   edi
6400eccf:	push   edi
6400ecd0:	call   0x6400ee86
6400ecd5:	add    esp,0x14
6400ecd8:	mov    eax,esi
6400ecda:	jmp    0x6400ed21
6400ecdc:	cmp    DWORD PTR [ebp+0x10],edi
6400ecdf:	je     0x6400ecf7
6400ece1:	cmp    DWORD PTR [ebp+0xc],esi
6400ece4:	jb     0x6400ecf7
6400ece6:	push   esi
6400ece7:	push   DWORD PTR [ebp+0x10]
6400ecea:	push   DWORD PTR [ebp+0x8]
6400eced:	call   0x64010d80
6400ecf2:	add    esp,0xc
6400ecf5:	jmp    0x6400ecb8
6400ecf7:	push   DWORD PTR [ebp+0xc]
6400ecfa:	push   edi
6400ecfb:	push   DWORD PTR [ebp+0x8]
6400ecfe:	call   0x6400fa50
6400ed03:	add    esp,0xc
6400ed06:	cmp    DWORD PTR [ebp+0x10],edi
6400ed09:	je     0x6400ecc1
6400ed0b:	cmp    DWORD PTR [ebp+0xc],esi
6400ed0e:	jae    0x6400ed1e
6400ed10:	call   0x64011120
6400ed15:	push   0x22
6400ed17:	pop    ecx
6400ed18:	mov    DWORD PTR [eax],ecx
6400ed1a:	mov    esi,ecx
6400ed1c:	jmp    0x6400eccb
6400ed1e:	push   0x16
6400ed20:	pop    eax
6400ed21:	pop    edi
6400ed22:	pop    esi
6400ed23:	pop    ebp
6400ed24:	ret    
6400ed25:	push   ebp
6400ed26:	mov    ebp,esp
6400ed28:	mov    eax,DWORD PTR [ebp+0x14]
6400ed2b:	push   esi
6400ed2c:	push   edi
6400ed2d:	xor    edi,edi
6400ed2f:	cmp    eax,edi
6400ed31:	je     0x6400ed7a
6400ed33:	cmp    DWORD PTR [ebp+0x8],edi
6400ed36:	jne    0x6400ed53
6400ed38:	call   0x64011120
6400ed3d:	push   0x16
6400ed3f:	pop    esi
6400ed40:	mov    DWORD PTR [eax],esi
6400ed42:	push   edi
6400ed43:	push   edi
6400ed44:	push   edi
6400ed45:	push   edi
6400ed46:	push   edi
6400ed47:	call   0x6400ee86
6400ed4c:	add    esp,0x14
6400ed4f:	mov    eax,esi
6400ed51:	jmp    0x6400ed7c
6400ed53:	cmp    DWORD PTR [ebp+0x10],edi
6400ed56:	je     0x6400ed38
6400ed58:	cmp    DWORD PTR [ebp+0xc],eax
6400ed5b:	jae    0x6400ed6b
6400ed5d:	call   0x64011120
6400ed62:	push   0x22
6400ed64:	pop    ecx
6400ed65:	mov    DWORD PTR [eax],ecx
6400ed67:	mov    esi,ecx
6400ed69:	jmp    0x6400ed42
6400ed6b:	push   eax
6400ed6c:	push   DWORD PTR [ebp+0x10]
6400ed6f:	push   DWORD PTR [ebp+0x8]
6400ed72:	call   0x64010390
6400ed77:	add    esp,0xc
6400ed7a:	xor    eax,eax
6400ed7c:	pop    edi
6400ed7d:	pop    esi
6400ed7e:	pop    ebp
6400ed7f:	ret    
6400ed80:	mov    eax,DWORD PTR [esp+0x4]
6400ed84:	mov    ds:0x640294fc,eax
6400ed89:	ret    
6400ed8a:	push   ebp
6400ed8b:	lea    ebp,[esp-0x2a8]
6400ed92:	sub    esp,0x328
6400ed98:	mov    eax,ds:0x64028038
6400ed9d:	xor    eax,ebp
6400ed9f:	mov    DWORD PTR [ebp+0x2a4],eax
6400eda5:	push   esi
6400eda6:	mov    DWORD PTR [ebp+0x88],eax
6400edac:	mov    DWORD PTR [ebp+0x84],ecx
6400edb2:	mov    DWORD PTR [ebp+0x80],edx
6400edb8:	mov    DWORD PTR [ebp+0x7c],ebx
6400edbb:	mov    DWORD PTR [ebp+0x78],esi
6400edbe:	mov    DWORD PTR [ebp+0x74],edi
6400edc1:	data16 mov WORD PTR [ebp+0xa0],ss
6400edc8:	data16 mov WORD PTR [ebp+0x94],cs
6400edcf:	data16 mov WORD PTR [ebp+0x70],ds
6400edd3:	data16 mov WORD PTR [ebp+0x6c],es
6400edd7:	data16 mov WORD PTR [ebp+0x68],fs
6400eddb:	data16 mov WORD PTR [ebp+0x64],gs
6400eddf:	pushf  
6400ede0:	pop    DWORD PTR [ebp+0x98]
6400ede6:	mov    esi,DWORD PTR [ebp+0x2ac]
6400edec:	lea    eax,[ebp+0x2ac]
6400edf2:	mov    DWORD PTR [ebp+0x9c],eax
6400edf8:	mov    DWORD PTR [ebp-0x28],0x10001
6400edff:	mov    DWORD PTR [ebp+0x90],esi
6400ee05:	mov    eax,DWORD PTR [eax-0x4]
6400ee08:	push   0x50
6400ee0a:	mov    DWORD PTR [ebp+0x8c],eax
6400ee10:	lea    eax,[ebp-0x80]
6400ee13:	push   0x0
6400ee15:	push   eax
6400ee16:	call   0x6400fa50
6400ee1b:	lea    eax,[ebp-0x80]
6400ee1e:	mov    DWORD PTR [ebp-0x30],eax
6400ee21:	lea    eax,[ebp-0x28]
6400ee24:	add    esp,0xc
6400ee27:	mov    DWORD PTR [ebp-0x80],0xc000000d
6400ee2e:	mov    DWORD PTR [ebp-0x74],esi
6400ee31:	mov    DWORD PTR [ebp-0x2c],eax
6400ee34:	call   DWORD PTR ds:0x64021108
6400ee3a:	push   0x0
6400ee3c:	mov    esi,eax
6400ee3e:	call   DWORD PTR ds:0x64021104
6400ee44:	lea    eax,[ebp-0x30]
6400ee47:	push   eax
6400ee48:	call   DWORD PTR ds:0x64021100
6400ee4e:	test   eax,eax
6400ee50:	jne    0x6400ee5e
6400ee52:	test   esi,esi
6400ee54:	jne    0x6400ee5e
6400ee56:	push   0x2
6400ee58:	call   0x64011164
6400ee5d:	pop    ecx
6400ee5e:	push   0xc000000d
6400ee63:	call   DWORD PTR ds:0x64021048
6400ee69:	push   eax
6400ee6a:	call   DWORD PTR ds:0x640210fc
6400ee70:	mov    ecx,DWORD PTR [ebp+0x2a4]
6400ee76:	xor    ecx,ebp
6400ee78:	pop    esi
6400ee79:	call   0x6400f34e
6400ee7e:	add    ebp,0x2a8
6400ee84:	leave  
6400ee85:	ret    
6400ee86:	push   ebp
6400ee87:	mov    ebp,esp
6400ee89:	push   DWORD PTR ds:0x640294fc
6400ee8f:	call   0x6401124f
6400ee94:	test   eax,eax
6400ee96:	pop    ecx
6400ee97:	je     0x6400ee9c
6400ee99:	pop    ebp
6400ee9a:	jmp    eax
6400ee9c:	push   0x2
6400ee9e:	call   0x64011164
6400eea3:	pop    ecx
6400eea4:	pop    ebp
6400eea5:	jmp    0x6400ed8a
6400eeaa:	xor    eax,eax
6400eeac:	push   eax
6400eead:	push   eax
6400eeae:	push   eax
6400eeaf:	push   eax
6400eeb0:	push   eax
6400eeb1:	call   0x6400ee86
6400eeb6:	add    esp,0x14
6400eeb9:	ret    
6400eeba:	push   esi
6400eebb:	push   0x1
6400eebd:	push   0x64028034
6400eec2:	mov    esi,ecx
6400eec4:	call   0x6400ebfb
6400eec9:	mov    DWORD PTR [esi],0x640212f4
6400eecf:	mov    eax,esi
6400eed1:	pop    esi
6400eed2:	ret    
6400eed3:	push   ebp
6400eed4:	mov    ebp,esp
6400eed6:	sub    esp,0xc
6400eed9:	jmp    0x6400eee8
6400eedb:	push   DWORD PTR [ebp+0x8]
6400eede:	call   0x6401179b
6400eee3:	test   eax,eax
6400eee5:	pop    ecx
6400eee6:	je     0x6400eef7
6400eee8:	push   DWORD PTR [ebp+0x8]
6400eeeb:	call   0x640102c3
6400eef0:	test   eax,eax
6400eef2:	pop    ecx
6400eef3:	je     0x6400eedb
6400eef5:	leave  
6400eef6:	ret    
6400eef7:	test   BYTE PTR ds:0x6402950c,0x1
6400eefe:	mov    esi,0x64029500
6400ef03:	jne    0x6400ef1e
6400ef05:	or     DWORD PTR ds:0x6402950c,0x1
6400ef0c:	mov    ecx,esi
6400ef0e:	call   0x6400eeba
6400ef13:	push   0x6402022a
6400ef18:	call   0x6400f481
6400ef1d:	pop    ecx
6400ef1e:	push   esi
6400ef1f:	lea    ecx,[ebp-0xc]
6400ef22:	call   0x6400ec13
6400ef27:	push   0x64025e14
6400ef2c:	lea    eax,[ebp-0xc]
6400ef2f:	push   eax
6400ef30:	mov    DWORD PTR [ebp-0xc],0x640212f4
6400ef37:	call   0x6400ef3d
6400ef3c:	int3   
6400ef3d:	push   ebp
6400ef3e:	mov    ebp,esp
6400ef40:	sub    esp,0x20
6400ef43:	mov    eax,DWORD PTR [ebp+0x8]
6400ef46:	push   esi
6400ef47:	push   edi
6400ef48:	push   0x8
6400ef4a:	pop    ecx
6400ef4b:	mov    esi,0x64021b88
6400ef50:	lea    edi,[ebp-0x20]
6400ef53:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
6400ef55:	mov    DWORD PTR [ebp-0x8],eax
6400ef58:	mov    eax,DWORD PTR [ebp+0xc]
6400ef5b:	test   eax,eax
6400ef5d:	pop    edi
6400ef5e:	mov    DWORD PTR [ebp-0x4],eax
6400ef61:	pop    esi
6400ef62:	je     0x6400ef70
6400ef64:	test   BYTE PTR [eax],0x8
6400ef67:	je     0x6400ef70
6400ef69:	mov    DWORD PTR [ebp-0xc],0x1994000
6400ef70:	lea    eax,[ebp-0xc]
6400ef73:	push   eax
6400ef74:	push   DWORD PTR [ebp-0x10]
6400ef77:	push   DWORD PTR [ebp-0x1c]
6400ef7a:	push   DWORD PTR [ebp-0x20]
6400ef7d:	call   DWORD PTR ds:0x640210e0
6400ef83:	leave  
6400ef84:	ret    0x8
6400ef87:	push   ebp
6400ef88:	mov    ebp,esp
6400ef8a:	push   ecx
6400ef8b:	push   ebx
6400ef8c:	mov    eax,DWORD PTR [ebp+0xc]
6400ef8f:	add    eax,0xc
6400ef92:	mov    DWORD PTR [ebp-0x4],eax
6400ef95:	mov    ebx,DWORD PTR fs:0x0
6400ef9c:	mov    eax,DWORD PTR [ebx]
6400ef9e:	mov    fs:0x0,eax
6400efa4:	mov    eax,DWORD PTR [ebp+0x8]
6400efa7:	mov    ebx,DWORD PTR [ebp+0xc]
6400efaa:	mov    ebp,DWORD PTR [ebp-0x4]
6400efad:	mov    esp,DWORD PTR [ebx-0x4]
6400efb0:	jmp    eax
6400efb2:	pop    ebx
6400efb3:	leave  
6400efb4:	ret    0x8
6400efb7:	pop    eax
6400efb8:	pop    ecx
6400efb9:	xchg   DWORD PTR [esp],eax
6400efbc:	jmp    eax
6400efbe:	push   ebp
6400efbf:	mov    ebp,esp
6400efc1:	push   ecx
6400efc2:	push   ecx
6400efc3:	push   ebx
6400efc4:	push   esi
6400efc5:	push   edi
6400efc6:	mov    esi,DWORD PTR fs:0x0
6400efcd:	mov    DWORD PTR [ebp-0x4],esi
6400efd0:	mov    DWORD PTR [ebp-0x8],0x6400efe7
6400efd7:	push   0x0
6400efd9:	push   DWORD PTR [ebp+0xc]
6400efdc:	push   DWORD PTR [ebp-0x8]
6400efdf:	push   DWORD PTR [ebp+0x8]
6400efe2:	call   0x6401b59c
6400efe7:	mov    eax,DWORD PTR [ebp+0xc]
6400efea:	mov    eax,DWORD PTR [eax+0x4]
6400efed:	and    eax,0xfffffffd
6400eff0:	mov    ecx,DWORD PTR [ebp+0xc]
6400eff3:	mov    DWORD PTR [ecx+0x4],eax
6400eff6:	mov    edi,DWORD PTR fs:0x0
6400effd:	mov    ebx,DWORD PTR [ebp-0x4]
6400f000:	mov    DWORD PTR [ebx],edi
6400f002:	mov    DWORD PTR fs:0x0,ebx
6400f009:	pop    edi
6400f00a:	pop    esi
6400f00b:	pop    ebx
6400f00c:	leave  
6400f00d:	ret    0x8
6400f010:	push   ebp
6400f011:	mov    ebp,esp
6400f013:	sub    esp,0x8
6400f016:	push   ebx
6400f017:	push   esi
6400f018:	push   edi
6400f019:	cld    
6400f01a:	mov    DWORD PTR [ebp-0x4],eax
6400f01d:	xor    eax,eax
6400f01f:	push   eax
6400f020:	push   eax
6400f021:	push   eax
6400f022:	push   DWORD PTR [ebp-0x4]
6400f025:	push   DWORD PTR [ebp+0x14]
6400f028:	push   DWORD PTR [ebp+0x10]
6400f02b:	push   DWORD PTR [ebp+0xc]
6400f02e:	push   DWORD PTR [ebp+0x8]
6400f031:	call   0x64012363
6400f036:	add    esp,0x20
6400f039:	mov    DWORD PTR [ebp-0x8],eax
6400f03c:	pop    edi
6400f03d:	pop    esi
6400f03e:	pop    ebx
6400f03f:	mov    eax,DWORD PTR [ebp-0x8]
6400f042:	mov    esp,ebp
6400f044:	pop    ebp
6400f045:	ret    
6400f046:	push   esi
6400f047:	cld    
6400f048:	mov    esi,DWORD PTR [esp+0xc]
6400f04c:	mov    ecx,DWORD PTR [esi+0x8]
6400f04f:	xor    ecx,esi
6400f051:	call   0x6400f34e
6400f056:	push   0x0
6400f058:	push   esi
6400f059:	push   DWORD PTR [esi+0x14]
6400f05c:	push   DWORD PTR [esi+0xc]
6400f05f:	push   0x0
6400f061:	push   DWORD PTR [esp+0x24]
6400f065:	push   DWORD PTR [esi+0x10]
6400f068:	push   DWORD PTR [esp+0x24]
6400f06c:	call   0x64012363
6400f071:	add    esp,0x20
6400f074:	pop    esi
6400f075:	ret    
6400f076:	push   ebp
6400f077:	mov    ebp,esp
6400f079:	sub    esp,0x38
6400f07c:	push   ebx
6400f07d:	cmp    DWORD PTR [ebp+0x8],0x123
6400f084:	jne    0x6400f098
6400f086:	mov    eax,0x6400f11f
6400f08b:	mov    ecx,DWORD PTR [ebp+0xc]
6400f08e:	mov    DWORD PTR [ecx],eax
6400f090:	xor    eax,eax
6400f092:	inc    eax
6400f093:	jmp    0x6400f148
6400f098:	and    DWORD PTR [ebp-0x28],0x0
6400f09c:	mov    DWORD PTR [ebp-0x24],0x6400f14b
6400f0a3:	mov    eax,ds:0x64028038
6400f0a8:	lea    ecx,[ebp-0x28]
6400f0ab:	xor    eax,ecx
6400f0ad:	mov    DWORD PTR [ebp-0x20],eax
6400f0b0:	mov    eax,DWORD PTR [ebp+0x18]
6400f0b3:	mov    DWORD PTR [ebp-0x1c],eax
6400f0b6:	mov    eax,DWORD PTR [ebp+0xc]
6400f0b9:	mov    DWORD PTR [ebp-0x18],eax
6400f0bc:	mov    eax,DWORD PTR [ebp+0x1c]
6400f0bf:	mov    DWORD PTR [ebp-0x14],eax
6400f0c2:	mov    eax,DWORD PTR [ebp+0x20]
6400f0c5:	mov    DWORD PTR [ebp-0x10],eax
6400f0c8:	and    DWORD PTR [ebp-0xc],0x0
6400f0cc:	and    DWORD PTR [ebp-0x8],0x0
6400f0d0:	and    DWORD PTR [ebp-0x4],0x0
6400f0d4:	mov    DWORD PTR [ebp-0xc],esp
6400f0d7:	mov    DWORD PTR [ebp-0x8],ebp
6400f0da:	mov    eax,fs:0x0
6400f0e0:	mov    DWORD PTR [ebp-0x28],eax
6400f0e3:	lea    eax,[ebp-0x28]
6400f0e6:	mov    fs:0x0,eax
6400f0ec:	mov    DWORD PTR [ebp-0x38],0x1
6400f0f3:	mov    eax,DWORD PTR [ebp+0x8]
6400f0f6:	mov    DWORD PTR [ebp-0x34],eax
6400f0f9:	mov    eax,DWORD PTR [ebp+0x10]
6400f0fc:	mov    DWORD PTR [ebp-0x30],eax
6400f0ff:	call   0x6401146b
6400f104:	mov    eax,DWORD PTR [eax+0x80]
6400f10a:	mov    DWORD PTR [ebp-0x2c],eax
6400f10d:	lea    eax,[ebp-0x34]
6400f110:	push   eax
6400f111:	mov    eax,DWORD PTR [ebp+0x8]
6400f114:	push   DWORD PTR [eax]
6400f116:	call   DWORD PTR [ebp-0x2c]
6400f119:	pop    ecx
6400f11a:	pop    ecx
6400f11b:	and    DWORD PTR [ebp-0x38],0x0
6400f11f:	cmp    DWORD PTR [ebp-0x4],0x0
6400f123:	je     0x6400f13c
6400f125:	mov    ebx,DWORD PTR fs:0x0
6400f12c:	mov    eax,DWORD PTR [ebx]
6400f12e:	mov    ebx,DWORD PTR [ebp-0x28]
6400f131:	mov    DWORD PTR [ebx],eax
6400f133:	mov    DWORD PTR fs:0x0,ebx
6400f13a:	jmp    0x6400f145
6400f13c:	mov    eax,DWORD PTR [ebp-0x28]
6400f13f:	mov    fs:0x0,eax
6400f145:	mov    eax,DWORD PTR [ebp-0x38]
6400f148:	pop    ebx
6400f149:	leave  
6400f14a:	ret    
6400f14b:	push   ebp
6400f14c:	mov    ebp,esp
6400f14e:	push   ecx
6400f14f:	push   ebx
6400f150:	cld    
6400f151:	mov    eax,DWORD PTR [ebp+0xc]
6400f154:	mov    ecx,DWORD PTR [eax+0x8]
6400f157:	xor    ecx,DWORD PTR [ebp+0xc]
6400f15a:	call   0x6400f34e
6400f15f:	mov    eax,DWORD PTR [ebp+0x8]
6400f162:	mov    eax,DWORD PTR [eax+0x4]
6400f165:	and    eax,0x66
6400f168:	je     0x6400f17b
6400f16a:	mov    eax,DWORD PTR [ebp+0xc]
6400f16d:	mov    DWORD PTR [eax+0x24],0x1
6400f174:	xor    eax,eax
6400f176:	inc    eax
6400f177:	jmp    0x6400f1e5
6400f179:	jmp    0x6400f1e5
6400f17b:	push   0x1
6400f17d:	mov    eax,DWORD PTR [ebp+0xc]
6400f180:	push   DWORD PTR [eax+0x18]
6400f183:	mov    eax,DWORD PTR [ebp+0xc]
6400f186:	push   DWORD PTR [eax+0x14]
6400f189:	mov    eax,DWORD PTR [ebp+0xc]
6400f18c:	push   DWORD PTR [eax+0xc]
6400f18f:	push   0x0
6400f191:	push   DWORD PTR [ebp+0x10]
6400f194:	mov    eax,DWORD PTR [ebp+0xc]
6400f197:	push   DWORD PTR [eax+0x10]
6400f19a:	push   DWORD PTR [ebp+0x8]
6400f19d:	call   0x64012363
6400f1a2:	add    esp,0x20
6400f1a5:	mov    eax,DWORD PTR [ebp+0xc]
6400f1a8:	cmp    DWORD PTR [eax+0x24],0x0
6400f1ac:	jne    0x6400f1b9
6400f1ae:	push   DWORD PTR [ebp+0x8]
6400f1b1:	push   DWORD PTR [ebp+0xc]
6400f1b4:	call   0x6400efbe
6400f1b9:	push   0x0
6400f1bb:	push   0x0
6400f1bd:	push   0x0
6400f1bf:	push   0x0
6400f1c1:	push   0x0
6400f1c3:	lea    eax,[ebp-0x4]
6400f1c6:	push   eax
6400f1c7:	push   0x123
6400f1cc:	call   0x6400f076
6400f1d1:	add    esp,0x1c
6400f1d4:	mov    eax,DWORD PTR [ebp-0x4]
6400f1d7:	mov    ebx,DWORD PTR [ebp+0xc]
6400f1da:	mov    esp,DWORD PTR [ebx+0x1c]
6400f1dd:	mov    ebp,DWORD PTR [ebx+0x20]
6400f1e0:	jmp    eax
6400f1e2:	xor    eax,eax
6400f1e4:	inc    eax
6400f1e5:	pop    ebx
6400f1e6:	leave  
6400f1e7:	ret    
6400f1e8:	push   ebp
6400f1e9:	mov    ebp,esp
6400f1eb:	push   ecx
6400f1ec:	push   ebx
6400f1ed:	push   esi
6400f1ee:	push   edi
6400f1ef:	mov    edi,DWORD PTR [ebp+0x8]
6400f1f2:	mov    eax,DWORD PTR [edi+0x10]
6400f1f5:	mov    esi,DWORD PTR [edi+0xc]
6400f1f8:	mov    DWORD PTR [ebp-0x4],eax
6400f1fb:	mov    ebx,esi
6400f1fd:	jmp    0x6400f22c
6400f1ff:	cmp    esi,0xffffffff
6400f202:	jne    0x6400f209
6400f204:	call   0x64012493
6400f209:	mov    ecx,DWORD PTR [ebp-0x4]
6400f20c:	dec    esi
6400f20d:	mov    eax,esi
6400f20f:	imul   eax,eax,0x14
6400f212:	add    eax,ecx
6400f214:	mov    ecx,DWORD PTR [ebp+0x10]
6400f217:	cmp    DWORD PTR [eax+0x4],ecx
6400f21a:	jge    0x6400f221
6400f21c:	cmp    ecx,DWORD PTR [eax+0x8]
6400f21f:	jle    0x6400f226
6400f221:	cmp    esi,0xffffffff
6400f224:	jne    0x6400f22f
6400f226:	dec    DWORD PTR [ebp+0xc]
6400f229:	mov    ebx,DWORD PTR [ebp+0x8]
6400f22c:	mov    DWORD PTR [ebp+0x8],esi
6400f22f:	cmp    DWORD PTR [ebp+0xc],0x0
6400f233:	jge    0x6400f1ff
6400f235:	mov    eax,DWORD PTR [ebp+0x14]
6400f238:	inc    esi
6400f239:	mov    DWORD PTR [eax],esi
6400f23b:	mov    eax,DWORD PTR [ebp+0x18]
6400f23e:	mov    DWORD PTR [eax],ebx
6400f240:	cmp    ebx,DWORD PTR [edi+0xc]
6400f243:	ja     0x6400f249
6400f245:	cmp    esi,ebx
6400f247:	jbe    0x6400f24e
6400f249:	call   0x64012493
6400f24e:	mov    eax,esi
6400f250:	imul   eax,eax,0x14
6400f253:	add    eax,DWORD PTR [ebp-0x4]
6400f256:	pop    edi
6400f257:	pop    esi
6400f258:	pop    ebx
6400f259:	leave  
6400f25a:	ret    
6400f25b:	mov    eax,DWORD PTR [esp+0x8]
6400f25f:	push   esi
6400f260:	mov    esi,DWORD PTR [esp+0x8]
6400f264:	mov    DWORD PTR [esi],eax
6400f266:	call   0x6401146b
6400f26b:	mov    eax,DWORD PTR [eax+0x98]
6400f271:	mov    DWORD PTR [esi+0x4],eax
6400f274:	call   0x6401146b
6400f279:	mov    DWORD PTR [eax+0x98],esi
6400f27f:	mov    eax,esi
6400f281:	pop    esi
6400f282:	ret    
6400f283:	call   0x6401146b
6400f288:	mov    eax,DWORD PTR [eax+0x98]
6400f28e:	jmp    0x6400f29b
6400f290:	mov    ecx,DWORD PTR [eax]
6400f292:	cmp    ecx,DWORD PTR [esp+0x4]
6400f296:	je     0x6400f2a1
6400f298:	mov    eax,DWORD PTR [eax+0x4]
6400f29b:	test   eax,eax
6400f29d:	jne    0x6400f290
6400f29f:	inc    eax
6400f2a0:	ret    
6400f2a1:	xor    eax,eax
6400f2a3:	ret    
6400f2a4:	push   esi
6400f2a5:	call   0x6401146b
6400f2aa:	mov    esi,DWORD PTR [esp+0x8]
6400f2ae:	cmp    esi,DWORD PTR [eax+0x98]
6400f2b4:	jne    0x6400f2c6
6400f2b6:	call   0x6401146b
6400f2bb:	mov    ecx,DWORD PTR [esi+0x4]
6400f2be:	mov    DWORD PTR [eax+0x98],ecx
6400f2c4:	pop    esi
6400f2c5:	ret    
6400f2c6:	call   0x6401146b
6400f2cb:	mov    eax,DWORD PTR [eax+0x98]
6400f2d1:	jmp    0x6400f2dc
6400f2d3:	mov    ecx,DWORD PTR [eax+0x4]
6400f2d6:	cmp    esi,ecx
6400f2d8:	je     0x6400f2e8
6400f2da:	mov    eax,ecx
6400f2dc:	cmp    DWORD PTR [eax+0x4],0x0
6400f2e0:	jne    0x6400f2d3
6400f2e2:	pop    esi
6400f2e3:	jmp    0x64012493
6400f2e8:	mov    ecx,DWORD PTR [esi+0x4]
6400f2eb:	mov    DWORD PTR [eax+0x4],ecx
6400f2ee:	pop    esi
6400f2ef:	ret    
6400f2f0:	push   ebp
6400f2f1:	mov    ebp,esp
6400f2f3:	sub    esp,0x18
6400f2f6:	mov    eax,ds:0x64028038
6400f2fb:	and    DWORD PTR [ebp-0x18],0x0
6400f2ff:	lea    ecx,[ebp-0x18]
6400f302:	xor    eax,ecx
6400f304:	mov    ecx,DWORD PTR [ebp+0x8]
6400f307:	mov    DWORD PTR [ebp-0x10],eax
6400f30a:	mov    eax,DWORD PTR [ebp+0xc]
6400f30d:	mov    DWORD PTR [ebp-0xc],eax
6400f310:	mov    eax,DWORD PTR [ebp+0x14]
6400f313:	inc    eax
6400f314:	mov    DWORD PTR [ebp-0x14],0x6400f046
6400f31b:	mov    DWORD PTR [ebp-0x8],ecx
6400f31e:	mov    DWORD PTR [ebp-0x4],eax
6400f321:	mov    eax,fs:0x0
6400f327:	mov    DWORD PTR [ebp-0x18],eax
6400f32a:	lea    eax,[ebp-0x18]
6400f32d:	mov    fs:0x0,eax
6400f333:	push   DWORD PTR [ebp+0x18]
6400f336:	push   ecx
6400f337:	push   DWORD PTR [ebp+0x10]
6400f33a:	call   0x640124e0
6400f33f:	mov    ecx,eax
6400f341:	mov    eax,DWORD PTR [ebp-0x18]
6400f344:	mov    fs:0x0,eax
6400f34a:	mov    eax,ecx
6400f34c:	leave  
6400f34d:	ret    
6400f34e:	cmp    ecx,DWORD PTR ds:0x64028038
6400f354:	jne    0x6400f358
6400f356:	repz ret 
6400f358:	jmp    0x6401252c
6400f35d:	push   ecx
6400f35e:	push   ebx
6400f35f:	push   ebp
6400f360:	push   esi
6400f361:	push   edi
6400f362:	push   DWORD PTR ds:0x6402d590
6400f368:	call   0x6401124f
6400f36d:	push   DWORD PTR ds:0x6402d58c
6400f373:	mov    esi,eax
6400f375:	mov    DWORD PTR [esp+0x18],esi
6400f379:	call   0x6401124f
6400f37e:	mov    edi,eax
6400f380:	cmp    edi,esi
6400f382:	pop    ecx
6400f383:	pop    ecx
6400f384:	jb     0x6400f40e
6400f38a:	mov    ebx,edi
6400f38c:	sub    ebx,esi
6400f38e:	lea    ebp,[ebx+0x4]
6400f391:	cmp    ebp,0x4
6400f394:	jb     0x6400f40e
6400f396:	push   esi
6400f397:	call   0x64012703
6400f39c:	mov    esi,eax
6400f39e:	cmp    esi,ebp
6400f3a0:	pop    ecx
6400f3a1:	jae    0x6400f3ed
6400f3a3:	mov    eax,0x800
6400f3a8:	cmp    esi,eax
6400f3aa:	jae    0x6400f3ae
6400f3ac:	mov    eax,esi
6400f3ae:	add    eax,esi
6400f3b0:	cmp    eax,esi
6400f3b2:	jb     0x6400f3c4
6400f3b4:	push   eax
6400f3b5:	push   DWORD PTR [esp+0x14]
6400f3b9:	call   0x640126b8
6400f3be:	test   eax,eax
6400f3c0:	pop    ecx
6400f3c1:	pop    ecx
6400f3c2:	jne    0x6400f3db
6400f3c4:	lea    eax,[esi+0x10]
6400f3c7:	cmp    eax,esi
6400f3c9:	jb     0x6400f40e
6400f3cb:	push   eax
6400f3cc:	push   DWORD PTR [esp+0x14]
6400f3d0:	call   0x640126b8
6400f3d5:	test   eax,eax
6400f3d7:	pop    ecx
6400f3d8:	pop    ecx
6400f3d9:	je     0x6400f40e
6400f3db:	sar    ebx,0x2
6400f3de:	push   eax
6400f3df:	lea    edi,[eax+ebx*4]
6400f3e2:	call   0x640111d8
6400f3e7:	pop    ecx
6400f3e8:	mov    ds:0x6402d590,eax
6400f3ed:	push   DWORD PTR [esp+0x18]
6400f3f1:	call   0x640111d8
6400f3f6:	mov    DWORD PTR [edi],eax
6400f3f8:	add    edi,0x4
6400f3fb:	push   edi
6400f3fc:	call   0x640111d8
6400f401:	pop    ecx
6400f402:	mov    ds:0x6402d58c,eax
6400f407:	mov    eax,DWORD PTR [esp+0x1c]
6400f40b:	pop    ecx
6400f40c:	jmp    0x6400f410
6400f40e:	xor    eax,eax
6400f410:	pop    edi
6400f411:	pop    esi
6400f412:	pop    ebp
6400f413:	pop    ebx
6400f414:	pop    ecx
6400f415:	ret    
6400f416:	push   esi
6400f417:	push   0x4
6400f419:	push   0x20
6400f41b:	call   0x64012670
6400f420:	mov    esi,eax
6400f422:	push   esi
6400f423:	call   0x640111d8
6400f428:	add    esp,0xc
6400f42b:	test   esi,esi
6400f42d:	mov    ds:0x6402d590,eax
6400f432:	mov    ds:0x6402d58c,eax
6400f437:	jne    0x6400f43e
6400f439:	push   0x18
6400f43b:	pop    eax
6400f43c:	pop    esi
6400f43d:	ret    
6400f43e:	and    DWORD PTR [esi],0x0
6400f441:	xor    eax,eax
6400f443:	pop    esi
6400f444:	ret    
6400f445:	push   0xc
6400f447:	push   0x640257e8
6400f44c:	call   0x640106f8
6400f451:	call   0x64012805
6400f456:	and    DWORD PTR [ebp-0x4],0x0
6400f45a:	push   DWORD PTR [ebp+0x8]
6400f45d:	call   0x6400f35d
6400f462:	pop    ecx
6400f463:	mov    DWORD PTR [ebp-0x1c],eax
6400f466:	mov    DWORD PTR [ebp-0x4],0xfffffffe
6400f46d:	call   0x6400f47b
6400f472:	mov    eax,DWORD PTR [ebp-0x1c]
6400f475:	call   0x6401073d
6400f47a:	ret    
6400f47b:	call   0x6401280e
6400f480:	ret    
6400f481:	push   DWORD PTR [esp+0x4]
6400f485:	call   0x6400f445
6400f48a:	neg    eax
6400f48c:	sbb    eax,eax
6400f48e:	neg    eax
6400f490:	pop    ecx
6400f491:	dec    eax
6400f492:	ret    
6400f493:	mov    eax,DWORD PTR [esp+0x4]
6400f497:	push   ebx
6400f498:	mov    ebx,DWORD PTR [esp+0xc]
6400f49c:	cmp    WORD PTR [ebx],0x0
6400f4a0:	push   edi
6400f4a1:	mov    edi,eax
6400f4a3:	je     0x6400f4ea
6400f4a5:	movzx  ecx,WORD PTR [eax]
6400f4a8:	test   cx,cx
6400f4ab:	je     0x6400f4e8
6400f4ad:	movzx  edx,cx
6400f4b0:	sub    eax,ebx
6400f4b2:	test   dx,dx
6400f4b5:	mov    ecx,DWORD PTR [esp+0x10]
6400f4b9:	je     0x6400f4d6
6400f4bb:	movzx  edx,WORD PTR [ecx]
6400f4be:	test   dx,dx
6400f4c1:	je     0x6400f4ed
6400f4c3:	movzx  ebx,WORD PTR [eax+ecx*1]
6400f4c7:	movzx  edx,dx
6400f4ca:	sub    ebx,edx
6400f4cc:	jne    0x6400f4d6
6400f4ce:	inc    ecx
6400f4cf:	inc    ecx
6400f4d0:	cmp    WORD PTR [eax+ecx*1],bx
6400f4d4:	jne    0x6400f4bb
6400f4d6:	cmp    WORD PTR [ecx],0x0
6400f4da:	je     0x6400f4ed
6400f4dc:	inc    edi
6400f4dd:	inc    edi
6400f4de:	movzx  edx,WORD PTR [edi]
6400f4e1:	inc    eax
6400f4e2:	inc    eax
6400f4e3:	test   dx,dx
6400f4e6:	jne    0x6400f4b2
6400f4e8:	xor    eax,eax
6400f4ea:	pop    edi
6400f4eb:	pop    ebx
6400f4ec:	ret    
6400f4ed:	mov    eax,edi
6400f4ef:	jmp    0x6400f4ea
6400f4f1:	mov    eax,DWORD PTR [esp+0x4]
6400f4f5:	test   eax,eax
6400f4f7:	push   esi
6400f4f8:	mov    esi,ecx
6400f4fa:	mov    BYTE PTR [esi+0xc],0x0
6400f4fe:	jne    0x6400f563
6400f500:	call   0x6401146b
6400f505:	mov    DWORD PTR [esi+0x8],eax
6400f508:	mov    ecx,DWORD PTR [eax+0x6c]
6400f50b:	mov    DWORD PTR [esi],ecx
6400f50d:	mov    ecx,DWORD PTR [eax+0x68]
6400f510:	mov    DWORD PTR [esi+0x4],ecx
6400f513:	mov    ecx,DWORD PTR [esi]
6400f515:	cmp    ecx,DWORD PTR ds:0x64028800
6400f51b:	je     0x6400f52f
6400f51d:	mov    ecx,DWORD PTR ds:0x6402871c
6400f523:	test   DWORD PTR [eax+0x70],ecx
6400f526:	jne    0x6400f52f
6400f528:	call   0x640133ef
6400f52d:	mov    DWORD PTR [esi],eax
6400f52f:	mov    eax,DWORD PTR [esi+0x4]
6400f532:	cmp    eax,DWORD PTR ds:0x64028620
6400f538:	je     0x6400f550
6400f53a:	mov    eax,DWORD PTR [esi+0x8]
6400f53d:	mov    ecx,DWORD PTR ds:0x6402871c
6400f543:	test   DWORD PTR [eax+0x70],ecx
6400f546:	jne    0x6400f550
6400f548:	call   0x64012cb0
6400f54d:	mov    DWORD PTR [esi+0x4],eax
6400f550:	mov    eax,DWORD PTR [esi+0x8]
6400f553:	test   BYTE PTR [eax+0x70],0x2
6400f557:	jne    0x6400f56d
6400f559:	or     DWORD PTR [eax+0x70],0x2
6400f55d:	mov    BYTE PTR [esi+0xc],0x1
6400f561:	jmp    0x6400f56d
6400f563:	mov    ecx,DWORD PTR [eax]
6400f565:	mov    DWORD PTR [esi],ecx
6400f567:	mov    eax,DWORD PTR [eax+0x4]
6400f56a:	mov    DWORD PTR [esi+0x4],eax
6400f56d:	mov    eax,esi
6400f56f:	pop    esi
6400f570:	ret    0x4
6400f573:	push   ebp
6400f574:	mov    ebp,esp
6400f576:	sub    esp,0x20
6400f579:	push   esi
6400f57a:	xor    esi,esi
6400f57c:	cmp    DWORD PTR [ebp+0xc],esi
6400f57f:	jne    0x6400f59e
6400f581:	call   0x64011120
6400f586:	push   esi
6400f587:	push   esi
6400f588:	push   esi
6400f589:	push   esi
6400f58a:	push   esi
6400f58b:	mov    DWORD PTR [eax],0x16
6400f591:	call   0x6400ee86
6400f596:	add    esp,0x14
6400f599:	or     eax,0xffffffff
6400f59c:	jmp    0x6400f5c5
6400f59e:	push   DWORD PTR [ebp+0x14]
6400f5a1:	lea    eax,[ebp-0x20]
6400f5a4:	push   DWORD PTR [ebp+0x10]
6400f5a7:	mov    DWORD PTR [ebp-0x1c],0x7fffffff
6400f5ae:	push   DWORD PTR [ebp+0xc]
6400f5b1:	mov    DWORD PTR [ebp-0x14],0x42
6400f5b8:	push   eax
6400f5b9:	mov    DWORD PTR [ebp-0x18],esi
6400f5bc:	mov    DWORD PTR [ebp-0x20],esi
6400f5bf:	call   DWORD PTR [ebp+0x8]
6400f5c2:	add    esp,0x10
6400f5c5:	pop    esi
6400f5c6:	leave  
6400f5c7:	ret    
6400f5c8:	push   DWORD PTR [esp+0x8]
6400f5cc:	push   0x0
6400f5ce:	push   DWORD PTR [esp+0xc]
6400f5d2:	push   0x6401365e
6400f5d7:	call   0x6400f573
6400f5dc:	add    esp,0x10
6400f5df:	ret    
6400f5e0:	push   ebp
6400f5e1:	mov    ebp,esp
6400f5e3:	sub    esp,0x20
6400f5e6:	push   ebx
6400f5e7:	xor    ebx,ebx
6400f5e9:	cmp    DWORD PTR [ebp+0x14],ebx
6400f5ec:	jne    0x6400f60e
6400f5ee:	call   0x64011120
6400f5f3:	push   ebx
6400f5f4:	push   ebx
6400f5f5:	push   ebx
6400f5f6:	push   ebx
6400f5f7:	push   ebx
6400f5f8:	mov    DWORD PTR [eax],0x16
6400f5fe:	call   0x6400ee86
6400f603:	add    esp,0x14
6400f606:	or     eax,0xffffffff
6400f609:	jmp    0x6400f6d3
6400f60e:	push   esi
6400f60f:	mov    esi,DWORD PTR [ebp+0xc]
6400f612:	push   edi
6400f613:	mov    edi,DWORD PTR [ebp+0x10]
6400f616:	cmp    edi,ebx
6400f618:	je     0x6400f63e
6400f61a:	cmp    esi,ebx
6400f61c:	jne    0x6400f63e
6400f61e:	call   0x64011120
6400f623:	push   ebx
6400f624:	push   ebx
6400f625:	push   ebx
6400f626:	push   ebx
6400f627:	push   ebx
6400f628:	mov    DWORD PTR [eax],0x16
6400f62e:	call   0x6400ee86
6400f633:	add    esp,0x14
6400f636:	or     eax,0xffffffff
6400f639:	jmp    0x6400f6d1
6400f63e:	cmp    edi,0x3fffffff
6400f644:	mov    DWORD PTR [ebp-0x14],0x42
6400f64b:	mov    DWORD PTR [ebp-0x18],esi
6400f64e:	mov    DWORD PTR [ebp-0x20],esi
6400f651:	jbe    0x6400f65c
6400f653:	mov    DWORD PTR [ebp-0x1c],0x7fffffff
6400f65a:	jmp    0x6400f662
6400f65c:	lea    eax,[edi+edi*1]
6400f65f:	mov    DWORD PTR [ebp-0x1c],eax
6400f662:	push   DWORD PTR [ebp+0x1c]
6400f665:	lea    eax,[ebp-0x20]
6400f668:	push   DWORD PTR [ebp+0x18]
6400f66b:	push   DWORD PTR [ebp+0x14]
6400f66e:	push   eax
6400f66f:	call   DWORD PTR [ebp+0x8]
6400f672:	add    esp,0x10
6400f675:	cmp    esi,ebx
6400f677:	mov    DWORD PTR [ebp+0x14],eax
6400f67a:	je     0x6400f6d1
6400f67c:	cmp    eax,ebx
6400f67e:	jl     0x6400f6c2
6400f680:	dec    DWORD PTR [ebp-0x1c]
6400f683:	js     0x6400f68f
6400f685:	mov    eax,DWORD PTR [ebp-0x20]
6400f688:	mov    BYTE PTR [eax],bl
6400f68a:	inc    DWORD PTR [ebp-0x20]
6400f68d:	jmp    0x6400f6a0
6400f68f:	lea    eax,[ebp-0x20]
6400f692:	push   eax
6400f693:	push   ebx
6400f694:	call   0x64013465
6400f699:	cmp    eax,0xffffffff
6400f69c:	pop    ecx
6400f69d:	pop    ecx
6400f69e:	je     0x6400f6c2
6400f6a0:	dec    DWORD PTR [ebp-0x1c]
6400f6a3:	js     0x6400f6ac
6400f6a5:	mov    eax,DWORD PTR [ebp-0x20]
6400f6a8:	mov    BYTE PTR [eax],bl
6400f6aa:	jmp    0x6400f6bd
6400f6ac:	lea    eax,[ebp-0x20]
6400f6af:	push   eax
6400f6b0:	push   ebx
6400f6b1:	call   0x64013465
6400f6b6:	cmp    eax,0xffffffff
6400f6b9:	pop    ecx
6400f6ba:	pop    ecx
6400f6bb:	je     0x6400f6c2
6400f6bd:	mov    eax,DWORD PTR [ebp+0x14]
6400f6c0:	jmp    0x6400f6d1
6400f6c2:	xor    eax,eax
6400f6c4:	cmp    DWORD PTR [ebp-0x1c],ebx
6400f6c7:	mov    WORD PTR [esi+edi*2-0x2],bx
6400f6cc:	setge  al
6400f6cf:	dec    eax
6400f6d0:	dec    eax
6400f6d1:	pop    edi
6400f6d2:	pop    esi
6400f6d3:	pop    ebx
6400f6d4:	leave  
6400f6d5:	ret    
6400f6d6:	push   ebp
6400f6d7:	mov    ebp,esp
6400f6d9:	push   esi
6400f6da:	xor    esi,esi
6400f6dc:	cmp    DWORD PTR [ebp+0x10],esi
6400f6df:	jne    0x6400f6fe
6400f6e1:	call   0x64011120
6400f6e6:	push   esi
6400f6e7:	push   esi
6400f6e8:	push   esi
6400f6e9:	push   esi
6400f6ea:	push   esi
6400f6eb:	mov    DWORD PTR [eax],0x16
6400f6f1:	call   0x6400ee86
6400f6f6:	add    esp,0x14
6400f6f9:	or     eax,0xffffffff
6400f6fc:	jmp    0x6400f75a
6400f6fe:	push   edi
6400f6ff:	mov    edi,DWORD PTR [ebp+0x8]
6400f702:	cmp    edi,esi
6400f704:	je     0x6400f70b
6400f706:	cmp    DWORD PTR [ebp+0xc],esi
6400f709:	ja     0x6400f718
6400f70b:	call   0x64011120
6400f710:	mov    DWORD PTR [eax],0x16
6400f716:	jmp    0x6400f749
6400f718:	push   DWORD PTR [ebp+0x18]
6400f71b:	push   DWORD PTR [ebp+0x14]
6400f71e:	push   DWORD PTR [ebp+0x10]
6400f721:	push   DWORD PTR [ebp+0xc]
6400f724:	push   edi
6400f725:	push   0x64013f6e
6400f72a:	call   0x6400f5e0
6400f72f:	add    esp,0x18
6400f732:	cmp    eax,esi
6400f734:	jge    0x6400f739
6400f736:	mov    WORD PTR [edi],si
6400f739:	cmp    eax,0xfffffffe
6400f73c:	jne    0x6400f759
6400f73e:	call   0x64011120
6400f743:	mov    DWORD PTR [eax],0x22
6400f749:	push   esi
6400f74a:	push   esi
6400f74b:	push   esi
6400f74c:	push   esi
6400f74d:	push   esi
6400f74e:	call   0x6400ee86
6400f753:	add    esp,0x14
6400f756:	or     eax,0xffffffff
6400f759:	pop    edi
6400f75a:	pop    esi
6400f75b:	pop    ebp
6400f75c:	ret    
6400f75d:	push   DWORD PTR [esp+0x10]
6400f761:	push   0x0
6400f763:	push   DWORD PTR [esp+0x14]
6400f767:	push   DWORD PTR [esp+0x14]
6400f76b:	push   DWORD PTR [esp+0x14]
6400f76f:	call   0x6400f6d6
6400f774:	add    esp,0x14
6400f777:	ret    
6400f778:	mov    edx,DWORD PTR [esp+0x4]
6400f77c:	push   ebx
6400f77d:	push   esi
6400f77e:	xor    esi,esi
6400f780:	cmp    edx,esi
6400f782:	push   edi
6400f783:	je     0x6400f78d
6400f785:	mov    ebx,DWORD PTR [esp+0x14]
6400f789:	cmp    ebx,esi
6400f78b:	ja     0x6400f7a8
6400f78d:	call   0x64011120
6400f792:	push   0x16
6400f794:	pop    edi
6400f795:	mov    DWORD PTR [eax],edi
6400f797:	push   esi
6400f798:	push   esi
6400f799:	push   esi
6400f79a:	push   esi
6400f79b:	push   esi
6400f79c:	call   0x6400ee86
6400f7a1:	add    esp,0x14
6400f7a4:	mov    eax,edi
6400f7a6:	jmp    0x6400f7ee
6400f7a8:	mov    edi,DWORD PTR [esp+0x18]
6400f7ac:	cmp    edi,esi
6400f7ae:	jne    0x6400f7b5
6400f7b0:	mov    WORD PTR [edx],si
6400f7b3:	jmp    0x6400f78d
6400f7b5:	mov    ecx,edx
6400f7b7:	cmp    WORD PTR [ecx],si
6400f7ba:	je     0x6400f7c1
6400f7bc:	inc    ecx
6400f7bd:	inc    ecx
6400f7be:	dec    ebx
6400f7bf:	jne    0x6400f7b7
6400f7c1:	cmp    ebx,esi
6400f7c3:	je     0x6400f7b0
6400f7c5:	movzx  eax,WORD PTR [edi]
6400f7c8:	mov    WORD PTR [ecx],ax
6400f7cb:	inc    ecx
6400f7cc:	inc    ecx
6400f7cd:	inc    edi
6400f7ce:	inc    edi
6400f7cf:	cmp    ax,si
6400f7d2:	je     0x6400f7d7
6400f7d4:	dec    ebx
6400f7d5:	jne    0x6400f7c5
6400f7d7:	cmp    ebx,esi
6400f7d9:	jne    0x6400f7ec
6400f7db:	mov    WORD PTR [edx],si
6400f7de:	call   0x64011120
6400f7e3:	push   0x22
6400f7e5:	pop    ecx
6400f7e6:	mov    DWORD PTR [eax],ecx
6400f7e8:	mov    edi,ecx
6400f7ea:	jmp    0x6400f797
6400f7ec:	xor    eax,eax
6400f7ee:	pop    edi
6400f7ef:	pop    esi
6400f7f0:	pop    ebx
6400f7f1:	ret    
6400f7f2:	mov    ecx,DWORD PTR [esp+0x4]
6400f7f6:	push   ebx
6400f7f7:	push   esi
6400f7f8:	push   edi
6400f7f9:	xor    edi,edi
6400f7fb:	cmp    ecx,edi
6400f7fd:	je     0x6400f807
6400f7ff:	mov    ebx,DWORD PTR [esp+0x14]
6400f803:	cmp    ebx,edi
6400f805:	ja     0x6400f822
6400f807:	call   0x64011120
6400f80c:	push   0x16
6400f80e:	pop    esi
6400f80f:	mov    DWORD PTR [eax],esi
6400f811:	push   edi
6400f812:	push   edi
6400f813:	push   edi
6400f814:	push   edi
6400f815:	push   edi
6400f816:	call   0x6400ee86
6400f81b:	add    esp,0x14
6400f81e:	mov    eax,esi
6400f820:	jmp    0x6400f85a
6400f822:	mov    esi,DWORD PTR [esp+0x18]
6400f826:	cmp    esi,edi
6400f828:	jne    0x6400f82f
6400f82a:	mov    WORD PTR [ecx],di
6400f82d:	jmp    0x6400f807
6400f82f:	mov    edx,ecx
6400f831:	movzx  eax,WORD PTR [esi]
6400f834:	mov    WORD PTR [edx],ax
6400f837:	inc    edx
6400f838:	inc    edx
6400f839:	inc    esi
6400f83a:	inc    esi
6400f83b:	cmp    ax,di
6400f83e:	je     0x6400f843
6400f840:	dec    ebx
6400f841:	jne    0x6400f831
6400f843:	cmp    ebx,edi
6400f845:	jne    0x6400f858
6400f847:	mov    WORD PTR [ecx],di
6400f84a:	call   0x64011120
6400f84f:	push   0x22
6400f851:	pop    ecx
6400f852:	mov    DWORD PTR [eax],ecx
6400f854:	mov    esi,ecx
6400f856:	jmp    0x6400f811
6400f858:	xor    eax,eax
6400f85a:	pop    edi
6400f85b:	pop    esi
6400f85c:	pop    ebx
6400f85d:	ret    
6400f85e:	mov    eax,DWORD PTR [esp+0x4]
6400f862:	test   eax,eax
6400f864:	je     0x6400f878
6400f866:	sub    eax,0x8
6400f869:	cmp    DWORD PTR [eax],0xdddd
6400f86f:	jne    0x6400f878
6400f871:	push   eax
6400f872:	call   0x640101e6
6400f877:	pop    ecx
6400f878:	ret    
6400f879:	push   ebp
6400f87a:	mov    ebp,esp
6400f87c:	sub    esp,0xc
6400f87f:	mov    eax,ds:0x64028038
6400f884:	xor    eax,ebp
6400f886:	mov    DWORD PTR [ebp-0x4],eax
6400f889:	push   esi
6400f88a:	xor    esi,esi
6400f88c:	cmp    ebx,esi
6400f88e:	push   edi
6400f88f:	jne    0x6400f8af
6400f891:	call   0x64011120
6400f896:	push   0x16
6400f898:	pop    edi
6400f899:	push   esi
6400f89a:	push   esi
6400f89b:	push   esi
6400f89c:	push   esi
6400f89d:	push   esi
6400f89e:	mov    DWORD PTR [eax],edi
6400f8a0:	call   0x6400ee86
6400f8a5:	add    esp,0x14
6400f8a8:	mov    eax,edi
6400f8aa:	jmp    0x6400f9ef
6400f8af:	push   DWORD PTR [ebp+0x8]
6400f8b2:	push   ebx
6400f8b3:	call   0x64014b2b
6400f8b8:	cmp    eax,DWORD PTR [ebp+0x8]
6400f8bb:	pop    ecx
6400f8bc:	pop    ecx
6400f8bd:	jb     0x6400f8c4
6400f8bf:	mov    WORD PTR [ebx],si
6400f8c2:	jmp    0x6400f891
6400f8c4:	mov    edx,DWORD PTR [ebp+0xc]
6400f8c7:	mov    eax,DWORD PTR [edx]
6400f8c9:	mov    ecx,DWORD PTR [eax+0x14]
6400f8cc:	cmp    ecx,esi
6400f8ce:	jne    0x6400f8fa
6400f8d0:	cmp    WORD PTR [ebx],si
6400f8d3:	mov    eax,ebx
6400f8d5:	je     0x6400f8f3
6400f8d7:	movzx  ecx,WORD PTR [eax]
6400f8da:	cmp    cx,0x41
6400f8de:	jb     0x6400f8ec
6400f8e0:	cmp    cx,0x5a
6400f8e4:	ja     0x6400f8ec
6400f8e6:	add    ecx,0x20
6400f8e9:	mov    WORD PTR [eax],cx
6400f8ec:	inc    eax
6400f8ed:	inc    eax
6400f8ee:	cmp    WORD PTR [eax],si
6400f8f1:	jne    0x6400f8d7
6400f8f3:	xor    eax,eax
6400f8f5:	jmp    0x6400f9ef
6400f8fa:	push   DWORD PTR [eax+0x4]
6400f8fd:	mov    edi,0x100
6400f902:	push   esi
6400f903:	push   esi
6400f904:	push   0xffffffff
6400f906:	push   ebx
6400f907:	push   edi
6400f908:	push   ecx
6400f909:	push   edx
6400f90a:	call   0x64014aeb
6400f90f:	mov    ecx,eax
6400f911:	add    esp,0x20
6400f914:	cmp    ecx,esi
6400f916:	mov    DWORD PTR [ebp-0xc],ecx
6400f919:	jne    0x6400f932
6400f91b:	call   0x64011120
6400f920:	mov    DWORD PTR [eax],0x2a
6400f926:	call   0x64011120
6400f92b:	mov    eax,DWORD PTR [eax]
6400f92d:	jmp    0x6400f9ef
6400f932:	cmp    DWORD PTR [ebp+0x8],ecx
6400f935:	jae    0x6400f946
6400f937:	mov    WORD PTR [ebx],si
6400f93a:	call   0x64011120
6400f93f:	push   0x22
6400f941:	jmp    0x6400f898
6400f946:	cmp    ecx,esi
6400f948:	jle    0x6400f990
6400f94a:	push   0xffffffe0
6400f94c:	xor    edx,edx
6400f94e:	pop    eax
6400f94f:	div    ecx
6400f951:	cmp    eax,0x2
6400f954:	jb     0x6400f990
6400f956:	lea    eax,[ecx+ecx*1+0x8]
6400f95a:	cmp    eax,0x400
6400f95f:	ja     0x6400f974
6400f961:	call   0x6400fad0
6400f966:	mov    eax,esp
6400f968:	cmp    eax,esi
6400f96a:	je     0x6400f988
6400f96c:	mov    DWORD PTR [eax],0xcccc
6400f972:	jmp    0x6400f985
6400f974:	push   eax
6400f975:	call   0x640102c3
6400f97a:	cmp    eax,esi
6400f97c:	pop    ecx
6400f97d:	je     0x6400f988
6400f97f:	mov    DWORD PTR [eax],0xdddd
6400f985:	add    eax,0x8
6400f988:	mov    ecx,DWORD PTR [ebp-0xc]
6400f98b:	mov    DWORD PTR [ebp-0x8],eax
6400f98e:	jmp    0x6400f993
6400f990:	mov    DWORD PTR [ebp-0x8],esi
6400f993:	cmp    DWORD PTR [ebp-0x8],esi
6400f996:	jne    0x6400f9a5
6400f998:	call   0x64011120
6400f99d:	mov    DWORD PTR [eax],0xc
6400f9a3:	jmp    0x6400f926
6400f9a5:	mov    edx,DWORD PTR [ebp+0xc]
6400f9a8:	mov    eax,DWORD PTR [edx]
6400f9aa:	push   DWORD PTR [eax+0x4]
6400f9ad:	push   ecx
6400f9ae:	push   DWORD PTR [ebp-0x8]
6400f9b1:	push   0xffffffff
6400f9b3:	push   ebx
6400f9b4:	push   edi
6400f9b5:	push   DWORD PTR [eax+0x14]
6400f9b8:	push   edx
6400f9b9:	call   0x64014aeb
6400f9be:	add    esp,0x20
6400f9c1:	test   eax,eax
6400f9c3:	je     0x6400f9d8
6400f9c5:	push   DWORD PTR [ebp-0x8]
6400f9c8:	push   DWORD PTR [ebp+0x8]
6400f9cb:	push   ebx
6400f9cc:	call   0x6400f7f2
6400f9d1:	add    esp,0xc
6400f9d4:	mov    esi,eax
6400f9d6:	jmp    0x6400f9e4
6400f9d8:	call   0x64011120
6400f9dd:	push   0x2a
6400f9df:	pop    ecx
6400f9e0:	mov    DWORD PTR [eax],ecx
6400f9e2:	mov    esi,ecx
6400f9e4:	push   DWORD PTR [ebp-0x8]
6400f9e7:	call   0x6400f85e
6400f9ec:	pop    ecx
6400f9ed:	mov    eax,esi
6400f9ef:	lea    esp,[ebp-0x14]
6400f9f2:	pop    edi
6400f9f3:	pop    esi
6400f9f4:	mov    ecx,DWORD PTR [ebp-0x4]
6400f9f7:	xor    ecx,ebp
6400f9f9:	call   0x6400f34e
6400f9fe:	leave  
6400f9ff:	ret    
6400fa00:	push   ebp
6400fa01:	mov    ebp,esp
6400fa03:	sub    esp,0x10
6400fa06:	push   ebx
6400fa07:	push   DWORD PTR [ebp+0x10]
6400fa0a:	lea    ecx,[ebp-0x10]
6400fa0d:	call   0x6400f4f1
6400fa12:	mov    ebx,DWORD PTR [ebp+0x8]
6400fa15:	lea    eax,[ebp-0x10]
6400fa18:	push   eax
6400fa19:	push   DWORD PTR [ebp+0xc]
6400fa1c:	call   0x6400f879
6400fa21:	cmp    BYTE PTR [ebp-0x4],0x0
6400fa25:	pop    ecx
6400fa26:	pop    ecx
6400fa27:	pop    ebx
6400fa28:	je     0x6400fa31
6400fa2a:	mov    ecx,DWORD PTR [ebp-0x8]
6400fa2d:	and    DWORD PTR [ecx+0x70],0xfffffffd
6400fa31:	leave  
6400fa32:	ret    
6400fa33:	push   0x0
6400fa35:	push   DWORD PTR [esp+0xc]
6400fa39:	push   DWORD PTR [esp+0xc]
6400fa3d:	call   0x6400fa00
6400fa42:	add    esp,0xc
6400fa45:	ret    
6400fa46:	jmp    0x6400eb52
6400fa4b:	int3   
6400fa4c:	int3   
6400fa4d:	int3   
6400fa4e:	int3   
6400fa4f:	int3   
6400fa50:	mov    edx,DWORD PTR [esp+0xc]
6400fa54:	mov    ecx,DWORD PTR [esp+0x4]
6400fa58:	test   edx,edx
6400fa5a:	je     0x6400fac5
6400fa5c:	xor    eax,eax
6400fa5e:	mov    al,BYTE PTR [esp+0x8]
6400fa62:	test   al,al
6400fa64:	jne    0x6400fa7c
6400fa66:	cmp    edx,0x100
6400fa6c:	jb     0x6400fa7c
6400fa6e:	cmp    DWORD PTR ds:0x6402d584,0x0
6400fa75:	je     0x6400fa7c
6400fa77:	jmp    0x64014b9e
6400fa7c:	push   edi
6400fa7d:	mov    edi,ecx
6400fa7f:	cmp    edx,0x4
6400fa82:	jb     0x6400fab5
6400fa84:	neg    ecx
6400fa86:	and    ecx,0x3
6400fa89:	je     0x6400fa97
6400fa8b:	sub    edx,ecx
6400fa8d:	mov    BYTE PTR [edi],al
6400fa8f:	add    edi,0x1
6400fa92:	sub    ecx,0x1
6400fa95:	jne    0x6400fa8d
6400fa97:	mov    ecx,eax
6400fa99:	shl    eax,0x8
6400fa9c:	add    eax,ecx
6400fa9e:	mov    ecx,eax
6400faa0:	shl    eax,0x10
6400faa3:	add    eax,ecx
6400faa5:	mov    ecx,edx
6400faa7:	and    edx,0x3
6400faaa:	shr    ecx,0x2
6400faad:	je     0x6400fab5
6400faaf:	rep stos DWORD PTR es:[edi],eax
6400fab1:	test   edx,edx
6400fab3:	je     0x6400fabf
6400fab5:	mov    BYTE PTR [edi],al
6400fab7:	add    edi,0x1
6400faba:	sub    edx,0x1
6400fabd:	jne    0x6400fab5
6400fabf:	mov    eax,DWORD PTR [esp+0x8]
6400fac3:	pop    edi
6400fac4:	ret    
6400fac5:	mov    eax,DWORD PTR [esp+0x4]
6400fac9:	ret    
6400faca:	int3   
6400facb:	int3   
6400facc:	int3   
6400facd:	int3   
6400face:	int3   
6400facf:	int3   
6400fad0:	push   ecx
6400fad1:	lea    ecx,[esp+0x8]
6400fad5:	sub    ecx,eax
6400fad7:	and    ecx,0xf
6400fada:	add    eax,ecx
6400fadc:	sbb    ecx,ecx
6400fade:	or     eax,ecx
6400fae0:	pop    ecx
6400fae1:	jmp    0x64014c50
6400fae6:	push   ecx
6400fae7:	lea    ecx,[esp+0x8]
6400faeb:	sub    ecx,eax
6400faed:	and    ecx,0x7
6400faf0:	add    eax,ecx
6400faf2:	sbb    ecx,ecx
6400faf4:	or     eax,ecx
6400faf6:	pop    ecx
6400faf7:	jmp    0x64014c50
6400fafc:	call   0x6401146b
6400fb01:	mov    ecx,DWORD PTR [esp+0x4]
6400fb05:	mov    DWORD PTR [eax+0x14],ecx
6400fb08:	ret    
6400fb09:	call   0x6401146b
6400fb0e:	mov    ecx,DWORD PTR [eax+0x14]
6400fb11:	imul   ecx,ecx,0x343fd
6400fb17:	add    ecx,0x269ec3
6400fb1d:	mov    DWORD PTR [eax+0x14],ecx
6400fb20:	mov    eax,ecx
6400fb22:	shr    eax,0x10
6400fb25:	and    eax,0x7fff
6400fb2a:	ret    
6400fb2b:	push   ebp
6400fb2c:	mov    ebp,esp
6400fb2e:	push   ecx
6400fb2f:	mov    eax,DWORD PTR [ebp+0xc]
6400fb32:	cmp    eax,0x1
6400fb35:	push   ebx
6400fb36:	push   esi
6400fb37:	push   edi
6400fb38:	jne    0x6400fc55
6400fb3e:	mov    ebx,DWORD PTR ds:0x640210f8
6400fb44:	mov    edi,0x94
6400fb49:	push   edi
6400fb4a:	push   0x0
6400fb4c:	call   ebx
6400fb4e:	push   eax
6400fb4f:	call   DWORD PTR ds:0x640210e8
6400fb55:	mov    esi,eax
6400fb57:	test   esi,esi
6400fb59:	jne    0x6400fb62
6400fb5b:	xor    eax,eax
6400fb5d:	jmp    0x6400fcfd
6400fb62:	push   esi
6400fb63:	mov    DWORD PTR [esi],edi
6400fb65:	call   DWORD PTR ds:0x640210dc
6400fb6b:	test   eax,eax
6400fb6d:	push   esi
6400fb6e:	push   0x0
6400fb70:	jne    0x6400fb7d
6400fb72:	call   ebx
6400fb74:	push   eax
6400fb75:	call   DWORD PTR ds:0x640210ec
6400fb7b:	jmp    0x6400fb5b
6400fb7d:	mov    eax,DWORD PTR [esi+0x10]
6400fb80:	mov    edi,DWORD PTR [esi+0xc]
6400fb83:	mov    DWORD PTR [ebp+0xc],eax
6400fb86:	mov    eax,DWORD PTR [esi+0x4]
6400fb89:	mov    DWORD PTR [ebp+0x10],eax
6400fb8c:	mov    eax,DWORD PTR [esi+0x8]
6400fb8f:	mov    DWORD PTR [ebp-0x4],eax
6400fb92:	and    edi,0x7fff
6400fb98:	call   ebx
6400fb9a:	push   eax
6400fb9b:	call   DWORD PTR ds:0x640210ec
6400fba1:	mov    eax,DWORD PTR [ebp+0xc]
6400fba4:	cmp    eax,0x2
6400fba7:	je     0x6400fbaf
6400fba9:	or     edi,0x8000
6400fbaf:	mov    ecx,DWORD PTR [ebp-0x4]
6400fbb2:	mov    ds:0x64029874,eax
6400fbb7:	mov    eax,DWORD PTR [ebp+0x10]
6400fbba:	mov    edx,eax
6400fbbc:	shl    edx,0x8
6400fbbf:	add    edx,ecx
6400fbc1:	push   0x1
6400fbc3:	mov    DWORD PTR ds:0x6402987c,edx
6400fbc9:	mov    ds:0x64029880,eax
6400fbce:	mov    DWORD PTR ds:0x64029884,ecx
6400fbd4:	mov    DWORD PTR ds:0x64029878,edi
6400fbda:	call   0x6401541f
6400fbdf:	test   eax,eax
6400fbe1:	pop    ecx
6400fbe2:	je     0x6400fb5b
6400fbe8:	call   0x6401160d
6400fbed:	test   eax,eax
6400fbef:	jne    0x6400fbfb
6400fbf1:	call   0x64015479
6400fbf6:	jmp    0x6400fb5b
6400fbfb:	call   0x6401537c
6400fc00:	call   DWORD PTR ds:0x64021114
6400fc06:	mov    ds:0x6402d5a0,eax
6400fc0b:	call   0x64015247
6400fc10:	mov    ds:0x64029514,eax
6400fc15:	call   0x64014c7b
6400fc1a:	test   eax,eax
6400fc1c:	jge    0x6400fc25
6400fc1e:	call   0x640112f8
6400fc23:	jmp    0x6400fbf1
6400fc25:	call   0x6401518e
6400fc2a:	test   eax,eax
6400fc2c:	jl     0x6400fc4e
6400fc2e:	call   0x64014f1b
6400fc33:	test   eax,eax
6400fc35:	jl     0x6400fc4e
6400fc37:	push   0x0
6400fc39:	call   0x640128c2
6400fc3e:	test   eax,eax
6400fc40:	pop    ecx
6400fc41:	jne    0x6400fc4e
6400fc43:	inc    DWORD PTR ds:0x64029510
6400fc49:	jmp    0x6400fcfa
6400fc4e:	call   0x64014ecf
6400fc53:	jmp    0x6400fc1e
6400fc55:	xor    edi,edi
6400fc57:	cmp    eax,edi
6400fc59:	jne    0x6400fc90
6400fc5b:	cmp    DWORD PTR ds:0x64029510,edi
6400fc61:	jle    0x6400fb5b
6400fc67:	dec    DWORD PTR ds:0x64029510
6400fc6d:	cmp    DWORD PTR ds:0x640298b0,edi
6400fc73:	jne    0x6400fc7a
6400fc75:	call   0x64012a47
6400fc7a:	cmp    DWORD PTR [ebp+0x10],edi
6400fc7d:	jne    0x6400fcfa
6400fc7f:	call   0x64014ecf
6400fc84:	call   0x640112f8
6400fc89:	call   0x64015479
6400fc8e:	jmp    0x6400fcfa
6400fc90:	cmp    eax,0x2
6400fc93:	jne    0x6400fcee
6400fc95:	call   0x640112c6
6400fc9a:	push   0x214
6400fc9f:	push   0x1
6400fca1:	call   0x64012670
6400fca6:	mov    esi,eax
6400fca8:	cmp    esi,edi
6400fcaa:	pop    ecx
6400fcab:	pop    ecx
6400fcac:	je     0x6400fb5b
6400fcb2:	push   esi
6400fcb3:	push   DWORD PTR ds:0x640281c0
6400fcb9:	push   DWORD PTR ds:0x64029534
6400fcbf:	call   0x6401124f
6400fcc4:	pop    ecx
6400fcc5:	call   eax
6400fcc7:	test   eax,eax
6400fcc9:	je     0x6400fce2
6400fccb:	push   edi
6400fccc:	push   esi
6400fccd:	call   0x64011335
6400fcd2:	pop    ecx
6400fcd3:	pop    ecx
6400fcd4:	call   DWORD PTR ds:0x64021110
6400fcda:	or     DWORD PTR [esi+0x4],0xffffffff
6400fcde:	mov    DWORD PTR [esi],eax
6400fce0:	jmp    0x6400fcfa
6400fce2:	push   esi
6400fce3:	call   0x640101e6
6400fce8:	pop    ecx
6400fce9:	jmp    0x6400fb5b
6400fcee:	cmp    eax,0x3
6400fcf1:	jne    0x6400fcfa
6400fcf3:	push   edi
6400fcf4:	call   0x640115a4
6400fcf9:	pop    ecx
6400fcfa:	xor    eax,eax
6400fcfc:	inc    eax
6400fcfd:	pop    edi
6400fcfe:	pop    esi
6400fcff:	pop    ebx
6400fd00:	leave  
6400fd01:	ret    0xc
6400fd04:	push   0xc
6400fd06:	push   0x64025808
6400fd0b:	call   0x640106f8
6400fd10:	mov    edi,ecx
6400fd12:	mov    esi,edx
6400fd14:	mov    ebx,DWORD PTR [ebp+0x8]
6400fd17:	xor    eax,eax
6400fd19:	inc    eax
6400fd1a:	mov    DWORD PTR [ebp-0x1c],eax
6400fd1d:	test   esi,esi
6400fd1f:	jne    0x6400fd2d
6400fd21:	cmp    DWORD PTR ds:0x64029510,edx
6400fd27:	je     0x6400fdf2
6400fd2d:	and    DWORD PTR [ebp-0x4],0x0
6400fd31:	cmp    esi,eax
6400fd33:	je     0x6400fd3a
6400fd35:	cmp    esi,0x2
6400fd38:	jne    0x6400fd68
6400fd3a:	mov    eax,ds:0x64021ba8
6400fd3f:	test   eax,eax
6400fd41:	je     0x6400fd4b
6400fd43:	push   edi
6400fd44:	push   esi
6400fd45:	push   ebx
6400fd46:	call   eax
6400fd48:	mov    DWORD PTR [ebp-0x1c],eax
6400fd4b:	cmp    DWORD PTR [ebp-0x1c],0x0
6400fd4f:	je     0x6400fdeb
6400fd55:	push   edi
6400fd56:	push   esi
6400fd57:	push   ebx
6400fd58:	call   0x6400fb2b
6400fd5d:	mov    DWORD PTR [ebp-0x1c],eax
6400fd60:	test   eax,eax
6400fd62:	je     0x6400fdeb
6400fd68:	push   edi
6400fd69:	push   esi
6400fd6a:	push   ebx
6400fd6b:	call   0x6400c6c0
6400fd70:	mov    DWORD PTR [ebp-0x1c],eax
6400fd73:	cmp    esi,0x1
6400fd76:	jne    0x6400fd9c
6400fd78:	test   eax,eax
6400fd7a:	jne    0x6400fd9c
6400fd7c:	push   edi
6400fd7d:	push   eax
6400fd7e:	push   ebx
6400fd7f:	call   0x6400c6c0
6400fd84:	push   edi
6400fd85:	push   0x0
6400fd87:	push   ebx
6400fd88:	call   0x6400fb2b
6400fd8d:	mov    eax,ds:0x64021ba8
6400fd92:	test   eax,eax
6400fd94:	je     0x6400fd9c
6400fd96:	push   edi
6400fd97:	push   0x0
6400fd99:	push   ebx
6400fd9a:	call   eax
6400fd9c:	test   esi,esi
6400fd9e:	je     0x6400fda5
6400fda0:	cmp    esi,0x3
6400fda3:	jne    0x6400fdcb
6400fda5:	push   edi
6400fda6:	push   esi
6400fda7:	push   ebx
6400fda8:	call   0x6400fb2b
6400fdad:	test   eax,eax
6400fdaf:	jne    0x6400fdb4
6400fdb1:	and    DWORD PTR [ebp-0x1c],eax
6400fdb4:	cmp    DWORD PTR [ebp-0x1c],0x0
6400fdb8:	je     0x6400fdcb
6400fdba:	mov    eax,ds:0x64021ba8
6400fdbf:	test   eax,eax
6400fdc1:	je     0x6400fdcb
6400fdc3:	push   edi
6400fdc4:	push   esi
6400fdc5:	push   ebx
6400fdc6:	call   eax
6400fdc8:	mov    DWORD PTR [ebp-0x1c],eax
6400fdcb:	mov    DWORD PTR [ebp-0x4],0xfffffffe
6400fdd2:	mov    eax,DWORD PTR [ebp-0x1c]
6400fdd5:	jmp    0x6400fdf4
6400fdd7:	mov    eax,DWORD PTR [ebp-0x14]
6400fdda:	mov    ecx,DWORD PTR [eax]
6400fddc:	mov    ecx,DWORD PTR [ecx]
6400fdde:	push   eax
6400fddf:	push   ecx
6400fde0:	call   0x6401564b
6400fde5:	pop    ecx
6400fde6:	pop    ecx
6400fde7:	ret    
6400fde8:	mov    esp,DWORD PTR [ebp-0x18]
6400fdeb:	mov    DWORD PTR [ebp-0x4],0xfffffffe
6400fdf2:	xor    eax,eax
6400fdf4:	call   0x6401073d
6400fdf9:	ret    
6400fdfa:	cmp    DWORD PTR [esp+0x8],0x1
6400fdff:	jne    0x6400fe06
6400fe01:	call   0x64015666
6400fe06:	push   DWORD PTR [esp+0x4]
6400fe0a:	mov    ecx,DWORD PTR [esp+0x10]
6400fe0e:	mov    edx,DWORD PTR [esp+0xc]
6400fe12:	call   0x6400fd04
6400fe17:	pop    ecx
6400fe18:	ret    0xc
6400fe1b:	push   ebp
6400fe1c:	mov    ebp,esp
6400fe1e:	sub    esp,0x20
6400fe21:	push   ebx
6400fe22:	xor    ebx,ebx
6400fe24:	cmp    DWORD PTR [ebp+0xc],ebx
6400fe27:	jne    0x6400fe46
6400fe29:	call   0x64011120
6400fe2e:	push   ebx
6400fe2f:	push   ebx
6400fe30:	push   ebx
6400fe31:	push   ebx
6400fe32:	push   ebx
6400fe33:	mov    DWORD PTR [eax],0x16
6400fe39:	call   0x6400ee86
6400fe3e:	add    esp,0x14
6400fe41:	or     eax,0xffffffff
6400fe44:	jmp    0x6400fe93
6400fe46:	mov    eax,DWORD PTR [ebp+0x8]
6400fe49:	cmp    eax,ebx
6400fe4b:	je     0x6400fe29
6400fe4d:	push   esi
6400fe4e:	mov    DWORD PTR [ebp-0x18],eax
6400fe51:	mov    DWORD PTR [ebp-0x20],eax
6400fe54:	lea    eax,[ebp+0x10]
6400fe57:	push   eax
6400fe58:	push   ebx
6400fe59:	push   DWORD PTR [ebp+0xc]
6400fe5c:	lea    eax,[ebp-0x20]
6400fe5f:	push   eax
6400fe60:	mov    DWORD PTR [ebp-0x1c],0x7fffffff
6400fe67:	mov    DWORD PTR [ebp-0x14],0x42
6400fe6e:	call   0x6401579b
6400fe73:	add    esp,0x10
6400fe76:	dec    DWORD PTR [ebp-0x1c]
6400fe79:	mov    esi,eax
6400fe7b:	js     0x6400fe84
6400fe7d:	mov    eax,DWORD PTR [ebp-0x20]
6400fe80:	mov    BYTE PTR [eax],bl
6400fe82:	jmp    0x6400fe90
6400fe84:	lea    eax,[ebp-0x20]
6400fe87:	push   eax
6400fe88:	push   ebx
6400fe89:	call   0x64013465
6400fe8e:	pop    ecx
6400fe8f:	pop    ecx
6400fe90:	mov    eax,esi
6400fe92:	pop    esi
6400fe93:	pop    ebx
6400fe94:	leave  
6400fe95:	ret    
6400fe96:	lea    eax,[esp+0x10]
6400fe9a:	push   eax
6400fe9b:	push   0x0
6400fe9d:	push   DWORD PTR [esp+0x14]
6400fea1:	push   DWORD PTR [esp+0x14]
6400fea5:	push   DWORD PTR [esp+0x14]
6400fea9:	call   0x640161f9
6400feae:	add    esp,0x14
6400feb1:	ret    
6400feb2:	cmp    DWORD PTR [esp+0x8],0x0
6400feb7:	je     0x6400febf
6400feb9:	mov    BYTE PTR [ecx],0x2d
6400febc:	inc    ecx
6400febd:	neg    eax
6400febf:	push   esi
6400fec0:	mov    esi,ecx
6400fec2:	xor    edx,edx
6400fec4:	div    DWORD PTR [esp+0x8]
6400fec8:	cmp    edx,0x9
6400fecb:	jbe    0x6400fed2
6400fecd:	add    dl,0x57
6400fed0:	jmp    0x6400fed5
6400fed2:	add    dl,0x30
6400fed5:	mov    BYTE PTR [ecx],dl
6400fed7:	inc    ecx
6400fed8:	test   eax,eax
6400feda:	ja     0x6400fec2
6400fedc:	mov    BYTE PTR [ecx],0x0
6400fedf:	dec    ecx
6400fee0:	mov    dl,BYTE PTR [esi]
6400fee2:	mov    al,BYTE PTR [ecx]
6400fee4:	mov    BYTE PTR [ecx],dl
6400fee6:	dec    ecx
6400fee7:	mov    BYTE PTR [esi],al
6400fee9:	inc    esi
6400feea:	cmp    esi,ecx
6400feec:	jb     0x6400fee0
6400feee:	pop    esi
6400feef:	ret    0x8
6400fef2:	push   ebp
6400fef3:	mov    ebp,esp
6400fef5:	xor    eax,eax
6400fef7:	cmp    DWORD PTR [ebp+0x10],0xa
6400fefb:	jne    0x6400ff03
6400fefd:	cmp    DWORD PTR [ebp+0x8],eax
6400ff00:	jge    0x6400ff03
6400ff02:	inc    eax
6400ff03:	mov    ecx,DWORD PTR [ebp+0xc]
6400ff06:	push   eax
6400ff07:	push   DWORD PTR [ebp+0x10]
6400ff0a:	mov    eax,DWORD PTR [ebp+0x8]
6400ff0d:	call   0x6400feb2
6400ff12:	mov    eax,DWORD PTR [ebp+0xc]
6400ff15:	pop    ebp
6400ff16:	ret    
6400ff17:	mov    eax,DWORD PTR [esp+0x4]
6400ff1b:	mov    dx,WORD PTR [esp+0x8]
6400ff20:	jmp    0x6400ff29
6400ff22:	cmp    cx,dx
6400ff25:	je     0x6400ff38
6400ff27:	inc    eax
6400ff28:	inc    eax
6400ff29:	movzx  ecx,WORD PTR [eax]
6400ff2c:	test   cx,cx
6400ff2f:	jne    0x6400ff22
6400ff31:	cmp    WORD PTR [eax],dx
6400ff34:	je     0x6400ff38
6400ff36:	xor    eax,eax
6400ff38:	ret    
6400ff39:	push   ebp
6400ff3a:	mov    ebp,esp
6400ff3c:	sub    esp,0x10
6400ff3f:	push   DWORD PTR [ebp+0xc]
6400ff42:	lea    ecx,[ebp-0x10]
6400ff45:	call   0x6400f4f1
6400ff4a:	mov    eax,DWORD PTR [ebp-0x10]
6400ff4d:	cmp    DWORD PTR [eax+0xac],0x1
6400ff54:	jle    0x6400ff69
6400ff56:	lea    eax,[ebp-0x10]
6400ff59:	push   eax
6400ff5a:	push   0x4
6400ff5c:	push   DWORD PTR [ebp+0x8]
6400ff5f:	call   0x64016315
6400ff64:	add    esp,0xc
6400ff67:	jmp    0x6400ff79
6400ff69:	mov    eax,DWORD PTR [eax+0xc8]
6400ff6f:	mov    ecx,DWORD PTR [ebp+0x8]
6400ff72:	movzx  eax,BYTE PTR [eax+ecx*2]
6400ff76:	and    eax,0x4
6400ff79:	cmp    BYTE PTR [ebp-0x4],0x0
6400ff7d:	je     0x6400ff86
6400ff7f:	mov    ecx,DWORD PTR [ebp-0x8]
6400ff82:	and    DWORD PTR [ecx+0x70],0xfffffffd
6400ff86:	leave  
6400ff87:	ret    
6400ff88:	cmp    DWORD PTR ds:0x640298d4,0x0
6400ff8f:	jne    0x6400ffa3
6400ff91:	mov    eax,DWORD PTR [esp+0x4]
6400ff95:	mov    ecx,DWORD PTR ds:0x640287f0
6400ff9b:	movzx  eax,BYTE PTR [ecx+eax*2]
6400ff9f:	and    eax,0x4
6400ffa2:	ret    
6400ffa3:	push   0x0
6400ffa5:	push   DWORD PTR [esp+0x8]
6400ffa9:	call   0x6400ff39
6400ffae:	pop    ecx
6400ffaf:	pop    ecx
6400ffb0:	ret    
6400ffb1:	push   ebp
6400ffb2:	mov    ebp,esp
6400ffb4:	sub    esp,0x10
6400ffb7:	push   DWORD PTR [ebp+0xc]
6400ffba:	lea    ecx,[ebp-0x10]
6400ffbd:	call   0x6400f4f1
6400ffc2:	mov    eax,DWORD PTR [ebp-0x10]
6400ffc5:	cmp    DWORD PTR [eax+0xac],0x1
6400ffcc:	jle    0x6400ffe1
6400ffce:	lea    eax,[ebp-0x10]
6400ffd1:	push   eax
6400ffd2:	push   0x8
6400ffd4:	push   DWORD PTR [ebp+0x8]
6400ffd7:	call   0x64016315
6400ffdc:	add    esp,0xc
6400ffdf:	jmp    0x6400fff1
6400ffe1:	mov    eax,DWORD PTR [eax+0xc8]
6400ffe7:	mov    ecx,DWORD PTR [ebp+0x8]
6400ffea:	movzx  eax,BYTE PTR [eax+ecx*2]
6400ffee:	and    eax,0x8
6400fff1:	cmp    BYTE PTR [ebp-0x4],0x0
6400fff5:	je     0x6400fffe
6400fff7:	mov    ecx,DWORD PTR [ebp-0x8]
6400fffa:	and    DWORD PTR [ecx+0x70],0xfffffffd
6400fffe:	leave  
6400ffff:	ret    
64010000:	cmp    DWORD PTR ds:0x640298d4,0x0
64010007:	jne    0x6401001b
64010009:	mov    eax,DWORD PTR [esp+0x4]
6401000d:	mov    ecx,DWORD PTR ds:0x640287f0
64010013:	movzx  eax,BYTE PTR [ecx+eax*2]
64010017:	and    eax,0x8
6401001a:	ret    
6401001b:	push   0x0
6401001d:	push   DWORD PTR [esp+0x8]
64010021:	call   0x6400ffb1
64010026:	pop    ecx
64010027:	pop    ecx
64010028:	ret    
64010029:	push   ebp
6401002a:	mov    ebp,esp
6401002c:	sub    esp,0x10
6401002f:	push   DWORD PTR [ebp+0xc]
64010032:	lea    ecx,[ebp-0x10]
64010035:	call   0x6400f4f1
6401003a:	mov    eax,DWORD PTR [ebp-0x10]
6401003d:	cmp    DWORD PTR [eax+0xac],0x1
64010044:	jle    0x6401005c
64010046:	lea    eax,[ebp-0x10]
64010049:	push   eax
6401004a:	push   0x157
6401004f:	push   DWORD PTR [ebp+0x8]
64010052:	call   0x64016315
64010057:	add    esp,0xc
6401005a:	jmp    0x6401006e
6401005c:	mov    eax,DWORD PTR [eax+0xc8]
64010062:	mov    ecx,DWORD PTR [ebp+0x8]
64010065:	movzx  eax,WORD PTR [eax+ecx*2]
64010069:	and    eax,0x157
6401006e:	cmp    BYTE PTR [ebp-0x4],0x0
64010072:	je     0x6401007b
64010074:	mov    ecx,DWORD PTR [ebp-0x8]
64010077:	and    DWORD PTR [ecx+0x70],0xfffffffd
6401007b:	leave  
6401007c:	ret    
6401007d:	cmp    DWORD PTR ds:0x640298d4,0x0
64010084:	jne    0x6401009a
64010086:	mov    eax,DWORD PTR [esp+0x4]
6401008a:	mov    ecx,DWORD PTR ds:0x640287f0
64010090:	movzx  eax,WORD PTR [ecx+eax*2]
64010094:	and    eax,0x157
64010099:	ret    
6401009a:	push   0x0
6401009c:	push   DWORD PTR [esp+0x8]
640100a0:	call   0x64010029
640100a5:	pop    ecx
640100a6:	pop    ecx
640100a7:	ret    
640100a8:	push   ebp
640100a9:	mov    ebp,esp
640100ab:	sub    esp,0x18
640100ae:	push   ebx
640100af:	push   esi
640100b0:	push   DWORD PTR [ebp+0xc]
640100b3:	lea    ecx,[ebp-0x18]
640100b6:	call   0x6400f4f1
640100bb:	mov    ebx,DWORD PTR [ebp+0x8]
640100be:	mov    esi,0x100
640100c3:	cmp    ebx,esi
640100c5:	jae    0x6401011b
640100c7:	mov    ecx,DWORD PTR [ebp-0x18]
640100ca:	cmp    DWORD PTR [ecx+0xac],0x1
640100d1:	jle    0x640100e7
640100d3:	lea    eax,[ebp-0x18]
640100d6:	push   eax
640100d7:	push   0x1
640100d9:	push   ebx
640100da:	call   0x64016315
640100df:	mov    ecx,DWORD PTR [ebp-0x18]
640100e2:	add    esp,0xc
640100e5:	jmp    0x640100f4
640100e7:	mov    eax,DWORD PTR [ecx+0xc8]
640100ed:	movzx  eax,BYTE PTR [eax+ebx*2]
640100f1:	and    eax,0x1
640100f4:	test   eax,eax
640100f6:	je     0x64010107
640100f8:	mov    eax,DWORD PTR [ecx+0xcc]
640100fe:	movzx  eax,BYTE PTR [eax+ebx*1]
64010102:	jmp    0x640101ae
64010107:	cmp    BYTE PTR [ebp-0xc],0x0
6401010b:	je     0x64010114
6401010d:	mov    eax,DWORD PTR [ebp-0x10]
64010110:	and    DWORD PTR [eax+0x70],0xfffffffd
64010114:	mov    eax,ebx
64010116:	jmp    0x640101bb
6401011b:	mov    eax,DWORD PTR [ebp-0x18]
6401011e:	cmp    DWORD PTR [eax+0xac],0x1
64010125:	jle    0x64010158
64010127:	mov    DWORD PTR [ebp+0x8],ebx
6401012a:	sar    DWORD PTR [ebp+0x8],0x8
6401012e:	lea    eax,[ebp-0x18]
64010131:	push   eax
64010132:	mov    eax,DWORD PTR [ebp+0x8]
64010135:	and    eax,0xff
6401013a:	push   eax
6401013b:	call   0x640167b0
64010140:	test   eax,eax
64010142:	pop    ecx
64010143:	pop    ecx
64010144:	je     0x64010158
64010146:	mov    al,BYTE PTR [ebp+0x8]
64010149:	push   0x2
6401014b:	mov    BYTE PTR [ebp-0x4],al
6401014e:	mov    BYTE PTR [ebp-0x3],bl
64010151:	mov    BYTE PTR [ebp-0x2],0x0
64010155:	pop    ecx
64010156:	jmp    0x6401016d
64010158:	call   0x64011120
6401015d:	mov    DWORD PTR [eax],0x2a
64010163:	xor    ecx,ecx
64010165:	mov    BYTE PTR [ebp-0x4],bl
64010168:	mov    BYTE PTR [ebp-0x3],0x0
6401016c:	inc    ecx
6401016d:	mov    eax,DWORD PTR [ebp-0x18]
64010170:	push   0x1
64010172:	push   DWORD PTR [eax+0x4]
64010175:	lea    edx,[ebp-0x8]
64010178:	push   0x3
6401017a:	push   edx
6401017b:	push   ecx
6401017c:	lea    ecx,[ebp-0x4]
6401017f:	push   ecx
64010180:	push   esi
64010181:	push   DWORD PTR [eax+0x14]
64010184:	lea    eax,[ebp-0x18]
64010187:	push   eax
64010188:	call   0x6401676d
6401018d:	add    esp,0x24
64010190:	test   eax,eax
64010192:	je     0x64010107
64010198:	cmp    eax,0x1
6401019b:	jne    0x640101a3
6401019d:	movzx  eax,BYTE PTR [ebp-0x8]
640101a1:	jmp    0x640101ae
640101a3:	movzx  ecx,BYTE PTR [ebp-0x7]
640101a7:	xor    eax,eax
640101a9:	mov    ah,BYTE PTR [ebp-0x8]
640101ac:	or     eax,ecx
640101ae:	cmp    BYTE PTR [ebp-0xc],0x0
640101b2:	je     0x640101bb
640101b4:	mov    ecx,DWORD PTR [ebp-0x10]
640101b7:	and    DWORD PTR [ecx+0x70],0xfffffffd
640101bb:	pop    esi
640101bc:	pop    ebx
640101bd:	leave  
640101be:	ret    
640101bf:	cmp    DWORD PTR ds:0x640298d4,0x0
640101c6:	jne    0x640101d8
640101c8:	mov    eax,DWORD PTR [esp+0x4]
640101cc:	lea    ecx,[eax-0x41]
640101cf:	cmp    ecx,0x19
640101d2:	ja     0x640101e5
640101d4:	add    eax,0x20
640101d7:	ret    
640101d8:	push   0x0
640101da:	push   DWORD PTR [esp+0x8]
640101de:	call   0x640100a8
640101e3:	pop    ecx
640101e4:	pop    ecx
640101e5:	ret    
640101e6:	push   0xc
640101e8:	push   0x64025828
640101ed:	call   0x640106f8
640101f2:	mov    esi,DWORD PTR [ebp+0x8]
640101f5:	test   esi,esi
640101f7:	je     0x6401026e
640101f9:	cmp    DWORD PTR ds:0x6402d45c,0x3
64010200:	jne    0x64010245
64010202:	push   0x4
64010204:	call   0x6401696a
64010209:	pop    ecx
6401020a:	and    DWORD PTR [ebp-0x4],0x0
6401020e:	push   esi
6401020f:	call   0x640169e3
64010214:	pop    ecx
64010215:	mov    DWORD PTR [ebp-0x1c],eax
64010218:	test   eax,eax
6401021a:	je     0x64010225
6401021c:	push   esi
6401021d:	push   eax
6401021e:	call   0x64016a0e
64010223:	pop    ecx
64010224:	pop    ecx
64010225:	mov    DWORD PTR [ebp-0x4],0xfffffffe
6401022c:	call   0x6401023c
64010231:	cmp    DWORD PTR [ebp-0x1c],0x0
64010235:	jne    0x6401026e
64010237:	push   DWORD PTR [ebp+0x8]
6401023a:	jmp    0x64010246
6401023c:	push   0x4
6401023e:	call   0x64016892
64010243:	pop    ecx
64010244:	ret    
64010245:	push   esi
64010246:	push   0x0
64010248:	push   DWORD PTR ds:0x64029a0c
6401024e:	call   DWORD PTR ds:0x640210ec
64010254:	test   eax,eax
64010256:	jne    0x6401026e
64010258:	call   0x64011120
6401025d:	mov    esi,eax
6401025f:	call   DWORD PTR ds:0x64021044
64010265:	push   eax
64010266:	call   0x640110e5
6401026b:	mov    DWORD PTR [esi],eax
6401026d:	pop    ecx
6401026e:	call   0x6401073d
64010273:	ret    
64010274:	push   0xc
64010276:	push   0x64025848
6401027b:	call   0x640106f8
64010280:	and    DWORD PTR [ebp-0x1c],0x0
64010284:	mov    esi,DWORD PTR [ebp+0x8]
64010287:	cmp    esi,DWORD PTR ds:0x6402d44c
6401028d:	ja     0x640102b1
6401028f:	push   0x4
64010291:	call   0x6401696a
64010296:	pop    ecx
64010297:	and    DWORD PTR [ebp-0x4],0x0
6401029b:	push   esi
6401029c:	call   0x640171b7
640102a1:	pop    ecx
640102a2:	mov    DWORD PTR [ebp-0x1c],eax
640102a5:	mov    DWORD PTR [ebp-0x4],0xfffffffe
640102ac:	call   0x640102ba
640102b1:	mov    eax,DWORD PTR [ebp-0x1c]
640102b4:	call   0x6401073d
640102b9:	ret    
640102ba:	push   0x4
640102bc:	call   0x64016892
640102c1:	pop    ecx
640102c2:	ret    
640102c3:	push   ebp
640102c4:	mov    ebp,DWORD PTR [esp+0x8]
640102c8:	cmp    ebp,0xffffffe0
640102cb:	ja     0x64010370
640102d1:	push   ebx
640102d2:	mov    ebx,DWORD PTR ds:0x640210e8
640102d8:	push   esi
640102d9:	push   edi
640102da:	xor    esi,esi
640102dc:	cmp    DWORD PTR ds:0x64029a0c,esi
640102e2:	mov    edi,ebp
640102e4:	jne    0x640102fe
640102e6:	call   0x6401763a
640102eb:	push   0x1e
640102ed:	call   0x6401749a
640102f2:	push   0xff
640102f7:	call   0x640127f0
640102fc:	pop    ecx
640102fd:	pop    ecx
640102fe:	mov    eax,ds:0x6402d45c
64010303:	cmp    eax,0x1
64010306:	jne    0x64010316
64010308:	cmp    ebp,esi
6401030a:	je     0x64010310
6401030c:	mov    eax,ebp
6401030e:	jmp    0x64010313
64010310:	xor    eax,eax
64010312:	inc    eax
64010313:	push   eax
64010314:	jmp    0x64010334
64010316:	cmp    eax,0x3
64010319:	jne    0x64010326
6401031b:	push   ebp
6401031c:	call   0x64010274
64010321:	cmp    eax,esi
64010323:	pop    ecx
64010324:	jne    0x6401033d
64010326:	cmp    ebp,esi
64010328:	jne    0x6401032d
6401032a:	xor    edi,edi
6401032c:	inc    edi
6401032d:	add    edi,0xf
64010330:	and    edi,0xfffffff0
64010333:	push   edi
64010334:	push   esi
64010335:	push   DWORD PTR ds:0x64029a0c
6401033b:	call   ebx
6401033d:	mov    esi,eax
6401033f:	test   esi,esi
64010341:	jne    0x64010369
64010343:	cmp    DWORD PTR ds:0x64029e84,eax
64010349:	push   0xc
6401034b:	pop    edi
6401034c:	je     0x6401035b
6401034e:	push   ebp
6401034f:	call   0x6401179b
64010354:	test   eax,eax
64010356:	pop    ecx
64010357:	jne    0x640102da
64010359:	jmp    0x64010362
6401035b:	call   0x64011120
64010360:	mov    DWORD PTR [eax],edi
64010362:	call   0x64011120
64010367:	mov    DWORD PTR [eax],edi
64010369:	pop    edi
6401036a:	mov    eax,esi
6401036c:	pop    esi
6401036d:	pop    ebx
6401036e:	pop    ebp
6401036f:	ret    
64010370:	push   ebp
64010371:	call   0x6401179b
64010376:	pop    ecx
64010377:	call   0x64011120
6401037c:	mov    DWORD PTR [eax],0xc
64010382:	xor    eax,eax
64010384:	pop    ebp
64010385:	ret    
64010386:	int3   
64010387:	int3   
64010388:	int3   
64010389:	int3   
6401038a:	int3   
6401038b:	int3   
6401038c:	int3   
6401038d:	int3   
6401038e:	int3   
6401038f:	int3   
64010390:	push   ebp
64010391:	mov    ebp,esp
64010393:	push   edi
64010394:	push   esi
64010395:	mov    esi,DWORD PTR [ebp+0xc]
64010398:	mov    ecx,DWORD PTR [ebp+0x10]
6401039b:	mov    edi,DWORD PTR [ebp+0x8]
6401039e:	mov    eax,ecx
640103a0:	mov    edx,ecx
640103a2:	add    eax,esi
640103a4:	cmp    edi,esi
640103a6:	jbe    0x640103b0
640103a8:	cmp    edi,eax
640103aa:	jb     0x64010554
640103b0:	cmp    ecx,0x100
640103b6:	jb     0x640103d7
640103b8:	cmp    DWORD PTR ds:0x6402d584,0x0
640103bf:	je     0x640103d7
640103c1:	push   edi
640103c2:	push   esi
640103c3:	and    edi,0xf
640103c6:	and    esi,0xf
640103c9:	cmp    edi,esi
640103cb:	pop    esi
640103cc:	pop    edi
640103cd:	jne    0x640103d7
640103cf:	pop    esi
640103d0:	pop    edi
640103d1:	pop    ebp
640103d2:	jmp    0x640176fa
640103d7:	test   edi,0x3
640103dd:	jne    0x640103f4
640103df:	shr    ecx,0x2
640103e2:	and    edx,0x3
640103e5:	cmp    ecx,0x8
640103e8:	jb     0x64010414
640103ea:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
640103ec:	jmp    DWORD PTR [edx*4+0x64010504]
640103f3:	nop
640103f4:	mov    eax,edi
640103f6:	mov    edx,0x3
640103fb:	sub    ecx,0x4
640103fe:	jb     0x6401040c
64010400:	and    eax,0x3
64010403:	add    ecx,eax
64010405:	jmp    DWORD PTR [eax*4+0x64010418]
6401040c:	jmp    DWORD PTR [ecx*4+0x64010514]
64010413:	nop
64010414:	jmp    DWORD PTR [ecx*4+0x64010498]
6401041b:	nop
6401041c:	sub    BYTE PTR [ecx+eax*1],al
6401041f:	fs push esp
64010421:	add    al,0x1
64010423:	fs js  0x6401042a
64010426:	add    DWORD PTR [ebx+eiz*1-0x2f],esp
6401042a:	mov    al,BYTE PTR [esi]
6401042c:	mov    BYTE PTR [edi],al
6401042e:	mov    al,BYTE PTR [esi+0x1]
64010431:	mov    BYTE PTR [edi+0x1],al
64010434:	mov    al,BYTE PTR [esi+0x2]
64010437:	shr    ecx,0x2
6401043a:	mov    BYTE PTR [edi+0x2],al
6401043d:	add    esi,0x3
64010440:	add    edi,0x3
64010443:	cmp    ecx,0x8
64010446:	jb     0x64010414
64010448:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
6401044a:	jmp    DWORD PTR [edx*4+0x64010504]
64010451:	lea    ecx,[ecx+0x0]
64010454:	and    edx,ecx
64010456:	mov    al,BYTE PTR [esi]
64010458:	mov    BYTE PTR [edi],al
6401045a:	mov    al,BYTE PTR [esi+0x1]
6401045d:	shr    ecx,0x2
64010460:	mov    BYTE PTR [edi+0x1],al
64010463:	add    esi,0x2
64010466:	add    edi,0x2
64010469:	cmp    ecx,0x8
6401046c:	jb     0x64010414
6401046e:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
64010470:	jmp    DWORD PTR [edx*4+0x64010504]
64010477:	nop
64010478:	and    edx,ecx
6401047a:	mov    al,BYTE PTR [esi]
6401047c:	mov    BYTE PTR [edi],al
6401047e:	add    esi,0x1
64010481:	shr    ecx,0x2
64010484:	add    edi,0x1
64010487:	cmp    ecx,0x8
6401048a:	jb     0x64010414
6401048c:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
6401048e:	jmp    DWORD PTR [edx*4+0x64010504]
64010495:	lea    ecx,[ecx+0x0]
64010498:	sti    
64010499:	add    al,0x1
6401049b:	fs call 0x446505a5
640104a1:	add    al,0x1
640104a3:	fadd   DWORD PTR fs:[ecx+eax*1]
640104a7:	rol    BYTE PTR fs:[ecx+eax*1],1
640104ab:	fs enter 0x104,0x64
640104b0:	rol    BYTE PTR [ecx+eax*1],0x64
640104b4:	mov    eax,0x8b640104
640104b9:	inc    esp
640104ba:	mov    fs,esp
640104bc:	mov    DWORD PTR [edi+ecx*4-0x1c],eax
640104c0:	mov    eax,DWORD PTR [esi+ecx*4-0x18]
640104c4:	mov    DWORD PTR [edi+ecx*4-0x18],eax
640104c8:	mov    eax,DWORD PTR [esi+ecx*4-0x14]
640104cc:	mov    DWORD PTR [edi+ecx*4-0x14],eax
640104d0:	mov    eax,DWORD PTR [esi+ecx*4-0x10]
640104d4:	mov    DWORD PTR [edi+ecx*4-0x10],eax
640104d8:	mov    eax,DWORD PTR [esi+ecx*4-0xc]
640104dc:	mov    DWORD PTR [edi+ecx*4-0xc],eax
640104e0:	mov    eax,DWORD PTR [esi+ecx*4-0x8]
640104e4:	mov    DWORD PTR [edi+ecx*4-0x8],eax
640104e8:	mov    eax,DWORD PTR [esi+ecx*4-0x4]
640104ec:	mov    DWORD PTR [edi+ecx*4-0x4],eax
640104f0:	lea    eax,[ecx*4+0x0]
640104f7:	add    esi,eax
640104f9:	add    edi,eax
640104fb:	jmp    DWORD PTR [edx*4+0x64010504]
64010502:	mov    edi,edi
64010504:	adc    al,0x5
64010506:	add    DWORD PTR [esp+ebx*1+0x5],esp
6401050a:	add    DWORD PTR [eax+ebp*1+0x5],esp
6401050e:	add    DWORD PTR [esp+edi*1+0x5],esp
64010512:	add    DWORD PTR [ebx+ecx*4+0x45],esp
64010516:	or     BYTE PTR [esi+0x5f],bl
64010519:	leave  
6401051a:	ret    
6401051b:	nop
6401051c:	mov    al,BYTE PTR [esi]
6401051e:	mov    BYTE PTR [edi],al
64010520:	mov    eax,DWORD PTR [ebp+0x8]
64010523:	pop    esi
64010524:	pop    edi
64010525:	leave  
64010526:	ret    
64010527:	nop
64010528:	mov    al,BYTE PTR [esi]
6401052a:	mov    BYTE PTR [edi],al
6401052c:	mov    al,BYTE PTR [esi+0x1]
6401052f:	mov    BYTE PTR [edi+0x1],al
64010532:	mov    eax,DWORD PTR [ebp+0x8]
64010535:	pop    esi
64010536:	pop    edi
64010537:	leave  
64010538:	ret    
64010539:	lea    ecx,[ecx+0x0]
6401053c:	mov    al,BYTE PTR [esi]
6401053e:	mov    BYTE PTR [edi],al
64010540:	mov    al,BYTE PTR [esi+0x1]
64010543:	mov    BYTE PTR [edi+0x1],al
64010546:	mov    al,BYTE PTR [esi+0x2]
64010549:	mov    BYTE PTR [edi+0x2],al
6401054c:	mov    eax,DWORD PTR [ebp+0x8]
6401054f:	pop    esi
64010550:	pop    edi
64010551:	leave  
64010552:	ret    
64010553:	nop
64010554:	lea    esi,[ecx+esi*1-0x4]
64010558:	lea    edi,[ecx+edi*1-0x4]
6401055c:	test   edi,0x3
64010562:	jne    0x64010588
64010564:	shr    ecx,0x2
64010567:	and    edx,0x3
6401056a:	cmp    ecx,0x8
6401056d:	jb     0x6401057c
6401056f:	std    
64010570:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
64010572:	cld    
64010573:	jmp    DWORD PTR [edx*4+0x640106a0]
6401057a:	mov    edi,edi
6401057c:	neg    ecx
6401057e:	jmp    DWORD PTR [ecx*4+0x64010650]
64010585:	lea    ecx,[ecx+0x0]
64010588:	mov    eax,edi
6401058a:	mov    edx,0x3
6401058f:	cmp    ecx,0x4
64010592:	jb     0x640105a0
64010594:	and    eax,0x3
64010597:	sub    ecx,eax
64010599:	jmp    DWORD PTR [eax*4+0x640105a4]
640105a0:	jmp    DWORD PTR [ecx*4+0x640106a0]
640105a7:	nop
640105a8:	mov    ah,0x5
640105aa:	add    DWORD PTR [eax+ebx*8+0x5],esp
640105ae:	add    DWORD PTR [eax+eax*1+0x6],esp
640105b2:	add    DWORD PTR [edx+ecx*4+0x46],esp
640105b6:	add    esp,DWORD PTR [ebx]
640105b8:	ror    DWORD PTR [eax-0x117cfcb9],1
640105be:	add    ecx,eax
640105c0:	jmp    0x65f088c7
640105c5:	cmp    ecx,0x8
640105c8:	jb     0x6401057c
640105ca:	std    
640105cb:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
640105cd:	cld    
640105ce:	jmp    DWORD PTR [edx*4+0x640106a0]
640105d5:	lea    ecx,[ecx+0x0]
640105d8:	mov    al,BYTE PTR [esi+0x3]
640105db:	and    edx,ecx
640105dd:	mov    BYTE PTR [edi+0x3],al
640105e0:	mov    al,BYTE PTR [esi+0x2]
640105e3:	shr    ecx,0x2
640105e6:	mov    BYTE PTR [edi+0x2],al
640105e9:	sub    esi,0x2
640105ec:	sub    edi,0x2
640105ef:	cmp    ecx,0x8
640105f2:	jb     0x6401057c
640105f4:	std    
640105f5:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
640105f7:	cld    
640105f8:	jmp    DWORD PTR [edx*4+0x640106a0]
640105ff:	nop
64010600:	mov    al,BYTE PTR [esi+0x3]
64010603:	and    edx,ecx
64010605:	mov    BYTE PTR [edi+0x3],al
64010608:	mov    al,BYTE PTR [esi+0x2]
6401060b:	mov    BYTE PTR [edi+0x2],al
6401060e:	mov    al,BYTE PTR [esi+0x1]
64010611:	shr    ecx,0x2
64010614:	mov    BYTE PTR [edi+0x1],al
64010617:	sub    esi,0x3
6401061a:	sub    edi,0x3
6401061d:	cmp    ecx,0x8
64010620:	jb     0x6401057c
64010626:	std    
64010627:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
64010629:	cld    
6401062a:	jmp    DWORD PTR [edx*4+0x640106a0]
64010631:	lea    ecx,[ecx+0x0]
64010634:	push   esp
64010635:	push   es
64010636:	add    DWORD PTR [esp+ebx*2+0x6],esp
6401063a:	add    DWORD PTR [esp+eiz*2+0x6],esp
6401063e:	add    DWORD PTR [esp+ebp*2+0x6],esp
64010642:	add    DWORD PTR [esp+esi*2+0x6],esp
64010646:	add    DWORD PTR [esp+edi*2+0x6],esp
6401064a:	add    DWORD PTR [esp+eax*4+0x6],esp
6401064e:	add    DWORD PTR [edi+edx*4+0x6],esp
64010652:	add    DWORD PTR [ebx+ecx*4+0x44],esp
64010656:	mov    ds,WORD PTR [ecx+ecx*4]
64010659:	inc    esp
6401065a:	(bad)  
6401065b:	sbb    al,0x8b
6401065d:	inc    esp
6401065e:	mov    ds,WORD PTR [eax]
64010660:	mov    DWORD PTR [edi+ecx*4+0x18],eax
64010664:	mov    eax,DWORD PTR [esi+ecx*4+0x14]
64010668:	mov    DWORD PTR [edi+ecx*4+0x14],eax
6401066c:	mov    eax,DWORD PTR [esi+ecx*4+0x10]
64010670:	mov    DWORD PTR [edi+ecx*4+0x10],eax
64010674:	mov    eax,DWORD PTR [esi+ecx*4+0xc]
64010678:	mov    DWORD PTR [edi+ecx*4+0xc],eax
6401067c:	mov    eax,DWORD PTR [esi+ecx*4+0x8]
64010680:	mov    DWORD PTR [edi+ecx*4+0x8],eax
64010684:	mov    eax,DWORD PTR [esi+ecx*4+0x4]
64010688:	mov    DWORD PTR [edi+ecx*4+0x4],eax
6401068c:	lea    eax,[ecx*4+0x0]
64010693:	add    esi,eax
64010695:	add    edi,eax
64010697:	jmp    DWORD PTR [edx*4+0x640106a0]
6401069e:	mov    edi,edi
640106a0:	mov    al,0x6
640106a2:	add    DWORD PTR [eax+edi*4+0x6],esp
640106a6:	add    DWORD PTR [eax+ecx*8+0x6],esp
640106aa:	add    DWORD PTR [esp+ebx*8+0x6],esp
640106ae:	add    DWORD PTR [ebx+ecx*4+0x45],esp
640106b2:	or     BYTE PTR [esi+0x5f],bl
640106b5:	leave  
640106b6:	ret    
640106b7:	nop
640106b8:	mov    al,BYTE PTR [esi+0x3]
640106bb:	mov    BYTE PTR [edi+0x3],al
640106be:	mov    eax,DWORD PTR [ebp+0x8]
640106c1:	pop    esi
640106c2:	pop    edi
640106c3:	leave  
640106c4:	ret    
640106c5:	lea    ecx,[ecx+0x0]
640106c8:	mov    al,BYTE PTR [esi+0x3]
640106cb:	mov    BYTE PTR [edi+0x3],al
640106ce:	mov    al,BYTE PTR [esi+0x2]
640106d1:	mov    BYTE PTR [edi+0x2],al
640106d4:	mov    eax,DWORD PTR [ebp+0x8]
640106d7:	pop    esi
640106d8:	pop    edi
640106d9:	leave  
640106da:	ret    
640106db:	nop
640106dc:	mov    al,BYTE PTR [esi+0x3]
640106df:	mov    BYTE PTR [edi+0x3],al
640106e2:	mov    al,BYTE PTR [esi+0x2]
640106e5:	mov    BYTE PTR [edi+0x2],al
640106e8:	mov    al,BYTE PTR [esi+0x1]
640106eb:	mov    BYTE PTR [edi+0x1],al
640106ee:	mov    eax,DWORD PTR [ebp+0x8]
640106f1:	pop    esi
640106f2:	pop    edi
640106f3:	leave  
640106f4:	ret    
640106f5:	int3   
640106f6:	int3   
640106f7:	int3   
640106f8:	push   0x64010760
640106fd:	push   DWORD PTR fs:0x0
64010704:	mov    eax,DWORD PTR [esp+0x10]
64010708:	mov    DWORD PTR [esp+0x10],ebp
6401070c:	lea    ebp,[esp+0x10]
64010710:	sub    esp,eax
64010712:	push   ebx
64010713:	push   esi
64010714:	push   edi
64010715:	mov    eax,ds:0x64028038
6401071a:	xor    DWORD PTR [ebp-0x4],eax
6401071d:	xor    eax,ebp
6401071f:	push   eax
64010720:	mov    DWORD PTR [ebp-0x18],esp
64010723:	push   DWORD PTR [ebp-0x8]
64010726:	mov    eax,DWORD PTR [ebp-0x4]
64010729:	mov    DWORD PTR [ebp-0x4],0xfffffffe
64010730:	mov    DWORD PTR [ebp-0x8],eax
64010733:	lea    eax,[ebp-0x10]
64010736:	mov    fs:0x0,eax
6401073c:	ret    
6401073d:	mov    ecx,DWORD PTR [ebp-0x10]
64010740:	mov    DWORD PTR fs:0x0,ecx
64010747:	pop    ecx
64010748:	pop    edi
64010749:	pop    edi
6401074a:	pop    esi
6401074b:	pop    ebx
6401074c:	mov    esp,ebp
6401074e:	pop    ebp
6401074f:	push   ecx
64010750:	ret    
64010751:	int3   
64010752:	int3   
64010753:	int3   
64010754:	int3   
64010755:	int3   
64010756:	int3   
64010757:	int3   
64010758:	int3   
64010759:	int3   
6401075a:	int3   
6401075b:	int3   
6401075c:	int3   
6401075d:	int3   
6401075e:	int3   
6401075f:	int3   
64010760:	sub    esp,0x14
64010763:	push   ebx
64010764:	mov    ebx,DWORD PTR [esp+0x20]
64010768:	push   ebp
64010769:	push   esi
6401076a:	mov    esi,DWORD PTR [ebx+0x8]
6401076d:	xor    esi,DWORD PTR ds:0x64028038
64010773:	push   edi
64010774:	mov    eax,DWORD PTR [esi]
64010776:	cmp    eax,0xfffffffe
64010779:	mov    BYTE PTR [esp+0x13],0x0
6401077e:	mov    DWORD PTR [esp+0x18],0x1
64010786:	lea    edi,[ebx+0x10]
64010789:	je     0x64010798
6401078b:	mov    ecx,DWORD PTR [esi+0x4]
6401078e:	add    ecx,edi
64010790:	xor    ecx,DWORD PTR [eax+edi*1]
64010793:	call   0x6400f34e
64010798:	mov    ecx,DWORD PTR [esi+0xc]
6401079b:	mov    eax,DWORD PTR [esi+0x8]
6401079e:	add    ecx,edi
640107a0:	xor    ecx,DWORD PTR [eax+edi*1]
640107a3:	call   0x6400f34e
640107a8:	mov    eax,DWORD PTR [esp+0x28]
640107ac:	test   BYTE PTR [eax+0x4],0x66
640107b0:	jne    0x640108d5
640107b6:	mov    ebp,DWORD PTR [ebx+0xc]
640107b9:	cmp    ebp,0xfffffffe
640107bc:	mov    ecx,DWORD PTR [esp+0x30]
640107c0:	lea    edx,[esp+0x1c]
640107c4:	mov    DWORD PTR [esp+0x1c],eax
640107c8:	mov    DWORD PTR [esp+0x20],ecx
640107cc:	mov    DWORD PTR [ebx-0x4],edx
640107cf:	je     0x6401082f
640107d1:	lea    eax,[ebp+ebp*2+0x0]
640107d5:	mov    ecx,DWORD PTR [esi+eax*4+0x14]
640107d9:	test   ecx,ecx
640107db:	lea    ebx,[esi+eax*4+0x10]
640107df:	mov    eax,DWORD PTR [ebx]
640107e1:	mov    DWORD PTR [esp+0x14],eax
640107e5:	je     0x640107fd
640107e7:	mov    edx,edi
640107e9:	call   0x640178d2
640107ee:	test   eax,eax
640107f0:	mov    BYTE PTR [esp+0x13],0x1
640107f5:	jl     0x6401083b
640107f7:	jg     0x64010845
640107f9:	mov    eax,DWORD PTR [esp+0x14]
640107fd:	cmp    eax,0xfffffffe
64010800:	mov    ebp,eax
64010802:	jne    0x640107d1
64010804:	cmp    BYTE PTR [esp+0x13],0x0
64010809:	je     0x6401082f
6401080b:	mov    eax,DWORD PTR [esi]
6401080d:	cmp    eax,0xfffffffe
64010810:	je     0x6401081f
64010812:	mov    ecx,DWORD PTR [esi+0x4]
64010815:	add    ecx,edi
64010817:	xor    ecx,DWORD PTR [eax+edi*1]
6401081a:	call   0x6400f34e
6401081f:	mov    ecx,DWORD PTR [esi+0xc]
64010822:	mov    eax,DWORD PTR [esi+0x8]
64010825:	add    ecx,edi
64010827:	xor    ecx,DWORD PTR [eax+edi*1]
6401082a:	call   0x6400f34e
6401082f:	mov    eax,DWORD PTR [esp+0x18]
64010833:	pop    edi
64010834:	pop    esi
64010835:	pop    ebp
64010836:	pop    ebx
64010837:	add    esp,0x14
6401083a:	ret    
6401083b:	mov    DWORD PTR [esp+0x18],0x0
64010843:	jmp    0x6401080b
64010845:	mov    ecx,DWORD PTR [esp+0x28]
64010849:	cmp    DWORD PTR [ecx],0xe06d7363
6401084f:	jne    0x6401087b
64010851:	cmp    DWORD PTR ds:0x64021c10,0x0
64010858:	je     0x6401087b
6401085a:	push   0x64021c10
6401085f:	call   0x640179c0
64010864:	add    esp,0x4
64010867:	test   eax,eax
64010869:	je     0x6401087b
6401086b:	mov    edx,DWORD PTR [esp+0x28]
6401086f:	push   0x1
64010871:	push   edx
64010872:	call   DWORD PTR ds:0x64021c10
64010878:	add    esp,0x8
6401087b:	mov    ecx,DWORD PTR [esp+0x2c]
6401087f:	call   0x64017902
64010884:	mov    eax,DWORD PTR [esp+0x2c]
64010888:	cmp    DWORD PTR [eax+0xc],ebp
6401088b:	je     0x640108a0
6401088d:	push   0x64028038
64010892:	push   edi
64010893:	mov    edx,ebp
64010895:	mov    ecx,eax
64010897:	call   0x6401791c
6401089c:	mov    eax,DWORD PTR [esp+0x2c]
640108a0:	mov    ecx,DWORD PTR [esp+0x14]
640108a4:	mov    DWORD PTR [eax+0xc],ecx
640108a7:	mov    eax,DWORD PTR [esi]
640108a9:	cmp    eax,0xfffffffe
640108ac:	je     0x640108bb
640108ae:	mov    ecx,DWORD PTR [esi+0x4]
640108b1:	add    ecx,edi
640108b3:	xor    ecx,DWORD PTR [eax+edi*1]
640108b6:	call   0x6400f34e
640108bb:	mov    ecx,DWORD PTR [esi+0xc]
640108be:	mov    edx,DWORD PTR [esi+0x8]
640108c1:	add    ecx,edi
640108c3:	xor    ecx,DWORD PTR [edx+edi*1]
640108c6:	call   0x6400f34e
640108cb:	mov    ecx,DWORD PTR [ebx+0x8]
640108ce:	mov    edx,edi
640108d0:	jmp    0x640178e9
640108d5:	cmp    DWORD PTR [ebx+0xc],0xfffffffe
640108d9:	je     0x6401082f
640108df:	push   0x64028038
640108e4:	push   edi
640108e5:	mov    ecx,ebx
640108e7:	mov    edx,0xfffffffe
640108ec:	call   0x6401791c
640108f1:	jmp    0x6401080b
640108f6:	push   0x10
640108f8:	push   0x64025868
640108fd:	call   0x640106f8
64010902:	mov    ebx,DWORD PTR [ebp+0x8]
64010905:	test   ebx,ebx
64010907:	jne    0x64010917
64010909:	push   DWORD PTR [ebp+0xc]
6401090c:	call   0x640102c3
64010911:	pop    ecx
64010912:	jmp    0x64010ae3
64010917:	mov    esi,DWORD PTR [ebp+0xc]
6401091a:	test   esi,esi
6401091c:	jne    0x6401092a
6401091e:	push   ebx
6401091f:	call   0x640101e6
64010924:	pop    ecx
64010925:	jmp    0x64010ae1
6401092a:	cmp    DWORD PTR ds:0x6402d45c,0x3
64010931:	jne    0x64010aca
64010937:	xor    edi,edi
64010939:	mov    DWORD PTR [ebp-0x1c],edi
6401093c:	cmp    esi,0xffffffe0
6401093f:	ja     0x64010acf
64010945:	push   0x4
64010947:	call   0x6401696a
6401094c:	pop    ecx
6401094d:	mov    DWORD PTR [ebp-0x4],edi
64010950:	push   ebx
64010951:	call   0x640169e3
64010956:	pop    ecx
64010957:	mov    DWORD PTR [ebp-0x20],eax
6401095a:	cmp    eax,edi
6401095c:	je     0x64010a00
64010962:	cmp    esi,DWORD PTR ds:0x6402d44c
64010968:	ja     0x640109b3
6401096a:	push   esi
6401096b:	push   ebx
6401096c:	push   eax
6401096d:	call   0x64016ed8
64010972:	add    esp,0xc
64010975:	test   eax,eax
64010977:	je     0x6401097e
64010979:	mov    DWORD PTR [ebp-0x1c],ebx
6401097c:	jmp    0x640109b3
6401097e:	push   esi
6401097f:	call   0x640171b7
64010984:	pop    ecx
64010985:	mov    DWORD PTR [ebp-0x1c],eax
64010988:	cmp    eax,edi
6401098a:	je     0x640109b3
6401098c:	mov    eax,DWORD PTR [ebx-0x4]
6401098f:	dec    eax
64010990:	cmp    eax,esi
64010992:	jb     0x64010996
64010994:	mov    eax,esi
64010996:	push   eax
64010997:	push   ebx
64010998:	push   DWORD PTR [ebp-0x1c]
6401099b:	call   0x64010d80
640109a0:	push   ebx
640109a1:	call   0x640169e3
640109a6:	mov    DWORD PTR [ebp-0x20],eax
640109a9:	push   ebx
640109aa:	push   eax
640109ab:	call   0x64016a0e
640109b0:	add    esp,0x18
640109b3:	cmp    DWORD PTR [ebp-0x1c],edi
640109b6:	jne    0x64010a00
640109b8:	cmp    esi,edi
640109ba:	jne    0x640109c2
640109bc:	xor    esi,esi
640109be:	inc    esi
640109bf:	mov    DWORD PTR [ebp+0xc],esi
640109c2:	add    esi,0xf
640109c5:	and    esi,0xfffffff0
640109c8:	mov    DWORD PTR [ebp+0xc],esi
640109cb:	push   esi
640109cc:	push   edi
640109cd:	push   DWORD PTR ds:0x64029a0c
640109d3:	call   DWORD PTR ds:0x640210e8
640109d9:	mov    DWORD PTR [ebp-0x1c],eax
640109dc:	cmp    eax,edi
640109de:	je     0x64010a00
640109e0:	mov    eax,DWORD PTR [ebx-0x4]
640109e3:	dec    eax
640109e4:	cmp    eax,esi
640109e6:	jb     0x640109ea
640109e8:	mov    eax,esi
640109ea:	push   eax
640109eb:	push   ebx
640109ec:	push   DWORD PTR [ebp-0x1c]
640109ef:	call   0x64010d80
640109f4:	push   ebx
640109f5:	push   DWORD PTR [ebp-0x20]
640109f8:	call   0x64016a0e
640109fd:	add    esp,0x14
64010a00:	mov    DWORD PTR [ebp-0x4],0xfffffffe
64010a07:	call   0x64010a3a
64010a0c:	cmp    DWORD PTR [ebp-0x20],0x0
64010a10:	jne    0x64010a43
64010a12:	test   esi,esi
64010a14:	jne    0x64010a17
64010a16:	inc    esi
64010a17:	add    esi,0xf
64010a1a:	and    esi,0xfffffff0
64010a1d:	mov    DWORD PTR [ebp+0xc],esi
64010a20:	push   esi
64010a21:	push   ebx
64010a22:	push   0x0
64010a24:	push   DWORD PTR ds:0x64029a0c
64010a2a:	call   DWORD PTR ds:0x640210f0
64010a30:	mov    edi,eax
64010a32:	jmp    0x64010a46
64010a34:	mov    esi,DWORD PTR [ebp+0xc]
64010a37:	mov    ebx,DWORD PTR [ebp+0x8]
64010a3a:	push   0x4
64010a3c:	call   0x64016892
64010a41:	pop    ecx
64010a42:	ret    
64010a43:	mov    edi,DWORD PTR [ebp-0x1c]
64010a46:	test   edi,edi
64010a48:	jne    0x64010b0d
64010a4e:	cmp    DWORD PTR ds:0x64029e84,edi
64010a54:	je     0x64010a82
64010a56:	push   esi
64010a57:	call   0x6401179b
64010a5c:	pop    ecx
64010a5d:	test   eax,eax
64010a5f:	jne    0x64010937
64010a65:	call   0x64011120
64010a6a:	cmp    DWORD PTR [ebp-0x20],edi
64010a6d:	jne    0x64010adb
64010a6f:	mov    esi,eax
64010a71:	call   DWORD PTR ds:0x64021044
64010a77:	push   eax
64010a78:	call   0x640110e5
64010a7d:	pop    ecx
64010a7e:	mov    DWORD PTR [esi],eax
64010a80:	jmp    0x64010ae1
64010a82:	test   edi,edi
64010a84:	jne    0x64010b0d
64010a8a:	call   0x64011120
64010a8f:	cmp    DWORD PTR [ebp-0x20],edi
64010a92:	je     0x64010afc
64010a94:	mov    DWORD PTR [eax],0xc
64010a9a:	jmp    0x64010b0d
64010a9c:	test   esi,esi
64010a9e:	jne    0x64010aa1
64010aa0:	inc    esi
64010aa1:	push   esi
64010aa2:	push   ebx
64010aa3:	push   0x0
64010aa5:	push   DWORD PTR ds:0x64029a0c
64010aab:	call   DWORD PTR ds:0x640210f0
64010ab1:	mov    edi,eax
64010ab3:	test   edi,edi
64010ab5:	jne    0x64010b0d
64010ab7:	cmp    DWORD PTR ds:0x64029e84,eax
64010abd:	je     0x64010af3
64010abf:	push   esi
64010ac0:	call   0x6401179b
64010ac5:	pop    ecx
64010ac6:	test   eax,eax
64010ac8:	je     0x64010ae9
64010aca:	cmp    esi,0xffffffe0
64010acd:	jbe    0x64010a9c
64010acf:	push   esi
64010ad0:	call   0x6401179b
64010ad5:	pop    ecx
64010ad6:	call   0x64011120
64010adb:	mov    DWORD PTR [eax],0xc
64010ae1:	xor    eax,eax
64010ae3:	call   0x6401073d
64010ae8:	ret    
64010ae9:	call   0x64011120
64010aee:	jmp    0x64010a6f
64010af3:	test   edi,edi
64010af5:	jne    0x64010b0d
64010af7:	call   0x64011120
64010afc:	mov    esi,eax
64010afe:	call   DWORD PTR ds:0x64021044
64010b04:	push   eax
64010b05:	call   0x640110e5
64010b0a:	mov    DWORD PTR [esi],eax
64010b0c:	pop    ecx
64010b0d:	mov    eax,edi
64010b0f:	jmp    0x64010ae3
64010b11:	int3   
64010b12:	int3   
64010b13:	int3   
64010b14:	int3   
64010b15:	int3   
64010b16:	int3   
64010b17:	int3   
64010b18:	int3   
64010b19:	int3   
64010b1a:	int3   
64010b1b:	int3   
64010b1c:	int3   
64010b1d:	int3   
64010b1e:	int3   
64010b1f:	int3   
64010b20:	mov    ecx,DWORD PTR [esp+0x4]
64010b24:	test   ecx,0x3
64010b2a:	je     0x64010b50
64010b2c:	mov    al,BYTE PTR [ecx]
64010b2e:	add    ecx,0x1
64010b31:	test   al,al
64010b33:	je     0x64010b83
64010b35:	test   ecx,0x3
64010b3b:	jne    0x64010b2c
64010b3d:	add    eax,0x0
64010b42:	lea    esp,[esp+0x0]
64010b49:	lea    esp,[esp+0x0]
64010b50:	mov    eax,DWORD PTR [ecx]
64010b52:	mov    edx,0x7efefeff
64010b57:	add    edx,eax
64010b59:	xor    eax,0xffffffff
64010b5c:	xor    eax,edx
64010b5e:	add    ecx,0x4
64010b61:	test   eax,0x81010100
64010b66:	je     0x64010b50
64010b68:	mov    eax,DWORD PTR [ecx-0x4]
64010b6b:	test   al,al
64010b6d:	je     0x64010ba1
64010b6f:	test   ah,ah
64010b71:	je     0x64010b97
64010b73:	test   eax,0xff0000
64010b78:	je     0x64010b8d
64010b7a:	test   eax,0xff000000
64010b7f:	je     0x64010b83
64010b81:	jmp    0x64010b50
64010b83:	lea    eax,[ecx-0x1]
64010b86:	mov    ecx,DWORD PTR [esp+0x4]
64010b8a:	sub    eax,ecx
64010b8c:	ret    
64010b8d:	lea    eax,[ecx-0x2]
64010b90:	mov    ecx,DWORD PTR [esp+0x4]
64010b94:	sub    eax,ecx
64010b96:	ret    
64010b97:	lea    eax,[ecx-0x3]
64010b9a:	mov    ecx,DWORD PTR [esp+0x4]
64010b9e:	sub    eax,ecx
64010ba0:	ret    
64010ba1:	lea    eax,[ecx-0x4]
64010ba4:	mov    ecx,DWORD PTR [esp+0x4]
64010ba8:	sub    eax,ecx
64010baa:	ret    
64010bab:	push   eax
64010bac:	push   DWORD PTR fs:0x0
64010bb3:	lea    eax,[esp+0xc]
64010bb7:	sub    esp,DWORD PTR [esp+0xc]
64010bbb:	push   ebx
64010bbc:	push   esi
64010bbd:	push   edi
64010bbe:	mov    DWORD PTR [eax],ebp
64010bc0:	mov    ebp,eax
64010bc2:	mov    eax,ds:0x64028038
64010bc7:	xor    eax,ebp
64010bc9:	push   eax
64010bca:	push   DWORD PTR [ebp-0x4]
64010bcd:	mov    DWORD PTR [ebp-0x4],0xffffffff
64010bd4:	lea    eax,[ebp-0xc]
64010bd7:	mov    fs:0x0,eax
64010bdd:	ret    
64010bde:	push   eax
64010bdf:	push   DWORD PTR fs:0x0
64010be6:	lea    eax,[esp+0xc]
64010bea:	sub    esp,DWORD PTR [esp+0xc]
64010bee:	push   ebx
64010bef:	push   esi
64010bf0:	push   edi
64010bf1:	mov    DWORD PTR [eax],ebp
64010bf3:	mov    ebp,eax
64010bf5:	mov    eax,ds:0x64028038
64010bfa:	xor    eax,ebp
64010bfc:	push   eax
64010bfd:	mov    DWORD PTR [ebp-0x10],esp
64010c00:	push   DWORD PTR [ebp-0x4]
64010c03:	mov    DWORD PTR [ebp-0x4],0xffffffff
64010c0a:	lea    eax,[ebp-0xc]
64010c0d:	mov    fs:0x0,eax
64010c13:	ret    
64010c14:	push   0xc
64010c16:	push   0x64025888
64010c1b:	call   0x640106f8
64010c20:	push   0xe
64010c22:	call   0x6401696a
64010c27:	pop    ecx
64010c28:	and    DWORD PTR [ebp-0x4],0x0
64010c2c:	mov    esi,DWORD PTR [ebp+0x8]
64010c2f:	mov    ecx,DWORD PTR [esi+0x4]
64010c32:	test   ecx,ecx
64010c34:	je     0x64010c65
64010c36:	mov    eax,ds:0x64029528
64010c3b:	mov    edx,0x64029524
64010c40:	mov    DWORD PTR [ebp-0x1c],eax
64010c43:	test   eax,eax
64010c45:	je     0x64010c58
64010c47:	cmp    DWORD PTR [eax],ecx
64010c49:	jne    0x64010c77
64010c4b:	mov    ecx,DWORD PTR [eax+0x4]
64010c4e:	mov    DWORD PTR [edx+0x4],ecx
64010c51:	push   eax
64010c52:	call   0x640101e6
64010c57:	pop    ecx
64010c58:	push   DWORD PTR [esi+0x4]
64010c5b:	call   0x640101e6
64010c60:	pop    ecx
64010c61:	and    DWORD PTR [esi+0x4],0x0
64010c65:	mov    DWORD PTR [ebp-0x4],0xfffffffe
64010c6c:	call   0x64010c7b
64010c71:	call   0x6401073d
64010c76:	ret    
64010c77:	mov    edx,eax
64010c79:	jmp    0x64010c40
64010c7b:	push   0xe
64010c7d:	call   0x64016892
64010c82:	pop    ecx
64010c83:	ret    
64010c84:	int3   
64010c85:	int3   
64010c86:	int3   
64010c87:	int3   
64010c88:	int3   
64010c89:	int3   
64010c8a:	int3   
64010c8b:	int3   
64010c8c:	int3   
64010c8d:	int3   
64010c8e:	int3   
64010c8f:	int3   
64010c90:	mov    edx,DWORD PTR [esp+0x4]
64010c94:	mov    ecx,DWORD PTR [esp+0x8]
64010c98:	test   edx,0x3
64010c9e:	jne    0x64010cdc
64010ca0:	mov    eax,DWORD PTR [edx]
64010ca2:	cmp    al,BYTE PTR [ecx]
64010ca4:	jne    0x64010cd4
64010ca6:	or     al,al
64010ca8:	je     0x64010cd0
64010caa:	cmp    ah,BYTE PTR [ecx+0x1]
64010cad:	jne    0x64010cd4
64010caf:	or     ah,ah
64010cb1:	je     0x64010cd0
64010cb3:	shr    eax,0x10
64010cb6:	cmp    al,BYTE PTR [ecx+0x2]
64010cb9:	jne    0x64010cd4
64010cbb:	or     al,al
64010cbd:	je     0x64010cd0
64010cbf:	cmp    ah,BYTE PTR [ecx+0x3]
64010cc2:	jne    0x64010cd4
64010cc4:	add    ecx,0x4
64010cc7:	add    edx,0x4
64010cca:	or     ah,ah
64010ccc:	jne    0x64010ca0
64010cce:	mov    edi,edi
64010cd0:	xor    eax,eax
64010cd2:	ret    
64010cd3:	nop
64010cd4:	sbb    eax,eax
64010cd6:	shl    eax,1
64010cd8:	add    eax,0x1
64010cdb:	ret    
64010cdc:	test   edx,0x1
64010ce2:	je     0x64010cfc
64010ce4:	mov    al,BYTE PTR [edx]
64010ce6:	add    edx,0x1
64010ce9:	cmp    al,BYTE PTR [ecx]
64010ceb:	jne    0x64010cd4
64010ced:	add    ecx,0x1
64010cf0:	or     al,al
64010cf2:	je     0x64010cd0
64010cf4:	test   edx,0x2
64010cfa:	je     0x64010ca0
64010cfc:	mov    ax,WORD PTR [edx]
64010cff:	add    edx,0x2
64010d02:	cmp    al,BYTE PTR [ecx]
64010d04:	jne    0x64010cd4
64010d06:	or     al,al
64010d08:	je     0x64010cd0
64010d0a:	cmp    ah,BYTE PTR [ecx+0x1]
64010d0d:	jne    0x64010cd4
64010d0f:	or     ah,ah
64010d11:	je     0x64010cd0
64010d13:	add    ecx,0x2
64010d16:	jmp    0x64010ca0
64010d18:	mov    ecx,DWORD PTR [esp+0x4]
64010d1c:	push   ebx
64010d1d:	xor    ebx,ebx
64010d1f:	cmp    ecx,ebx
64010d21:	push   esi
64010d22:	push   edi
64010d23:	je     0x64010d2d
64010d25:	mov    edi,DWORD PTR [esp+0x14]
64010d29:	cmp    edi,ebx
64010d2b:	ja     0x64010d48
64010d2d:	call   0x64011120
64010d32:	push   0x16
64010d34:	pop    esi
64010d35:	mov    DWORD PTR [eax],esi
64010d37:	push   ebx
64010d38:	push   ebx
64010d39:	push   ebx
64010d3a:	push   ebx
64010d3b:	push   ebx
64010d3c:	call   0x6400ee86
64010d41:	add    esp,0x14
64010d44:	mov    eax,esi
64010d46:	jmp    0x64010d79
64010d48:	mov    esi,DWORD PTR [esp+0x18]
64010d4c:	cmp    esi,ebx
64010d4e:	jne    0x64010d54
64010d50:	mov    BYTE PTR [ecx],bl
64010d52:	jmp    0x64010d2d
64010d54:	mov    edx,ecx
64010d56:	mov    al,BYTE PTR [esi]
64010d58:	mov    BYTE PTR [edx],al
64010d5a:	inc    edx
64010d5b:	inc    esi
64010d5c:	cmp    al,bl
64010d5e:	je     0x64010d63
64010d60:	dec    edi
64010d61:	jne    0x64010d56
64010d63:	cmp    edi,ebx
64010d65:	jne    0x64010d77
64010d67:	mov    BYTE PTR [ecx],bl
64010d69:	call   0x64011120
64010d6e:	push   0x22
64010d70:	pop    ecx
64010d71:	mov    DWORD PTR [eax],ecx
64010d73:	mov    esi,ecx
64010d75:	jmp    0x64010d37
64010d77:	xor    eax,eax
64010d79:	pop    edi
64010d7a:	pop    esi
64010d7b:	pop    ebx
64010d7c:	ret    
64010d7d:	int3   
64010d7e:	int3   
64010d7f:	int3   
64010d80:	push   ebp
64010d81:	mov    ebp,esp
64010d83:	push   edi
64010d84:	push   esi
64010d85:	mov    esi,DWORD PTR [ebp+0xc]
64010d88:	mov    ecx,DWORD PTR [ebp+0x10]
64010d8b:	mov    edi,DWORD PTR [ebp+0x8]
64010d8e:	mov    eax,ecx
64010d90:	mov    edx,ecx
64010d92:	add    eax,esi
64010d94:	cmp    edi,esi
64010d96:	jbe    0x64010da0
64010d98:	cmp    edi,eax
64010d9a:	jb     0x64010f44
64010da0:	cmp    ecx,0x100
64010da6:	jb     0x64010dc7
64010da8:	cmp    DWORD PTR ds:0x6402d584,0x0
64010daf:	je     0x64010dc7
64010db1:	push   edi
64010db2:	push   esi
64010db3:	and    edi,0xf
64010db6:	and    esi,0xf
64010db9:	cmp    edi,esi
64010dbb:	pop    esi
64010dbc:	pop    edi
64010dbd:	jne    0x64010dc7
64010dbf:	pop    esi
64010dc0:	pop    edi
64010dc1:	pop    ebp
64010dc2:	jmp    0x640176fa
64010dc7:	test   edi,0x3
64010dcd:	jne    0x64010de4
64010dcf:	shr    ecx,0x2
64010dd2:	and    edx,0x3
64010dd5:	cmp    ecx,0x8
64010dd8:	jb     0x64010e04
64010dda:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
64010ddc:	jmp    DWORD PTR [edx*4+0x64010ef4]
64010de3:	nop
64010de4:	mov    eax,edi
64010de6:	mov    edx,0x3
64010deb:	sub    ecx,0x4
64010dee:	jb     0x64010dfc
64010df0:	and    eax,0x3
64010df3:	add    ecx,eax
64010df5:	jmp    DWORD PTR [eax*4+0x64010e08]
64010dfc:	jmp    DWORD PTR [ecx*4+0x64010f04]
64010e03:	nop
64010e04:	jmp    DWORD PTR [ecx*4+0x64010e88]
64010e0b:	nop
64010e0c:	sbb    BYTE PTR [esi],cl
64010e0e:	add    DWORD PTR [esp+eax*2+0xe],esp
64010e12:	add    DWORD PTR [eax+ebp*2+0xe],esp
64010e16:	add    DWORD PTR [ebx+eiz*1-0x2f],esp
64010e1a:	mov    al,BYTE PTR [esi]
64010e1c:	mov    BYTE PTR [edi],al
64010e1e:	mov    al,BYTE PTR [esi+0x1]
64010e21:	mov    BYTE PTR [edi+0x1],al
64010e24:	mov    al,BYTE PTR [esi+0x2]
64010e27:	shr    ecx,0x2
64010e2a:	mov    BYTE PTR [edi+0x2],al
64010e2d:	add    esi,0x3
64010e30:	add    edi,0x3
64010e33:	cmp    ecx,0x8
64010e36:	jb     0x64010e04
64010e38:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
64010e3a:	jmp    DWORD PTR [edx*4+0x64010ef4]
64010e41:	lea    ecx,[ecx+0x0]
64010e44:	and    edx,ecx
64010e46:	mov    al,BYTE PTR [esi]
64010e48:	mov    BYTE PTR [edi],al
64010e4a:	mov    al,BYTE PTR [esi+0x1]
64010e4d:	shr    ecx,0x2
64010e50:	mov    BYTE PTR [edi+0x1],al
64010e53:	add    esi,0x2
64010e56:	add    edi,0x2
64010e59:	cmp    ecx,0x8
64010e5c:	jb     0x64010e04
64010e5e:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
64010e60:	jmp    DWORD PTR [edx*4+0x64010ef4]
64010e67:	nop
64010e68:	and    edx,ecx
64010e6a:	mov    al,BYTE PTR [esi]
64010e6c:	mov    BYTE PTR [edi],al
64010e6e:	add    esi,0x1
64010e71:	shr    ecx,0x2
64010e74:	add    edi,0x1
64010e77:	cmp    ecx,0x8
64010e7a:	jb     0x64010e04
64010e7c:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
64010e7e:	jmp    DWORD PTR [edx*4+0x64010ef4]
64010e85:	lea    ecx,[ecx+0x0]
64010e88:	jmp    0x64010e98
64010e8a:	add    DWORD PTR [eax+ebx*8+0xe],esp
64010e8e:	add    DWORD PTR [eax+edx*8+0xe],esp
64010e92:	add    DWORD PTR [eax+ecx*8+0xe],esp
64010e96:	add    DWORD PTR [eax+eax*8+0xe],esp
64010e9a:	add    DWORD PTR [eax+edi*4+0xe],esp
64010e9e:	add    DWORD PTR [eax+esi*4+0xe],esp
64010ea2:	add    DWORD PTR [eax+ebp*4+0xe],esp
64010ea6:	add    DWORD PTR [ebx+ecx*4+0x44],esp
64010eaa:	mov    fs,esp
64010eac:	mov    DWORD PTR [edi+ecx*4-0x1c],eax
64010eb0:	mov    eax,DWORD PTR [esi+ecx*4-0x18]
64010eb4:	mov    DWORD PTR [edi+ecx*4-0x18],eax
64010eb8:	mov    eax,DWORD PTR [esi+ecx*4-0x14]
64010ebc:	mov    DWORD PTR [edi+ecx*4-0x14],eax
64010ec0:	mov    eax,DWORD PTR [esi+ecx*4-0x10]
64010ec4:	mov    DWORD PTR [edi+ecx*4-0x10],eax
64010ec8:	mov    eax,DWORD PTR [esi+ecx*4-0xc]
64010ecc:	mov    DWORD PTR [edi+ecx*4-0xc],eax
64010ed0:	mov    eax,DWORD PTR [esi+ecx*4-0x8]
64010ed4:	mov    DWORD PTR [edi+ecx*4-0x8],eax
64010ed8:	mov    eax,DWORD PTR [esi+ecx*4-0x4]
64010edc:	mov    DWORD PTR [edi+ecx*4-0x4],eax
64010ee0:	lea    eax,[ecx*4+0x0]
64010ee7:	add    esi,eax
64010ee9:	add    edi,eax
64010eeb:	jmp    DWORD PTR [edx*4+0x64010ef4]
64010ef2:	mov    edi,edi
64010ef4:	add    al,0xf
64010ef6:	add    DWORD PTR [esp+ecx*1+0xf],esp
64010efa:	add    DWORD PTR [eax+ebx*1+0xf],esp
64010efe:	add    DWORD PTR [esp+ebp*1+0xf],esp
64010f02:	add    DWORD PTR [ebx+ecx*4+0x45],esp
64010f06:	or     BYTE PTR [esi+0x5f],bl
64010f09:	leave  
64010f0a:	ret    
64010f0b:	nop
64010f0c:	mov    al,BYTE PTR [esi]
64010f0e:	mov    BYTE PTR [edi],al
64010f10:	mov    eax,DWORD PTR [ebp+0x8]
64010f13:	pop    esi
64010f14:	pop    edi
64010f15:	leave  
64010f16:	ret    
64010f17:	nop
64010f18:	mov    al,BYTE PTR [esi]
64010f1a:	mov    BYTE PTR [edi],al
64010f1c:	mov    al,BYTE PTR [esi+0x1]
64010f1f:	mov    BYTE PTR [edi+0x1],al
64010f22:	mov    eax,DWORD PTR [ebp+0x8]
64010f25:	pop    esi
64010f26:	pop    edi
64010f27:	leave  
64010f28:	ret    
64010f29:	lea    ecx,[ecx+0x0]
64010f2c:	mov    al,BYTE PTR [esi]
64010f2e:	mov    BYTE PTR [edi],al
64010f30:	mov    al,BYTE PTR [esi+0x1]
64010f33:	mov    BYTE PTR [edi+0x1],al
64010f36:	mov    al,BYTE PTR [esi+0x2]
64010f39:	mov    BYTE PTR [edi+0x2],al
64010f3c:	mov    eax,DWORD PTR [ebp+0x8]
64010f3f:	pop    esi
64010f40:	pop    edi
64010f41:	leave  
64010f42:	ret    
64010f43:	nop
64010f44:	lea    esi,[ecx+esi*1-0x4]
64010f48:	lea    edi,[ecx+edi*1-0x4]
64010f4c:	test   edi,0x3
64010f52:	jne    0x64010f78
64010f54:	shr    ecx,0x2
64010f57:	and    edx,0x3
64010f5a:	cmp    ecx,0x8
64010f5d:	jb     0x64010f6c
64010f5f:	std    
64010f60:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
64010f62:	cld    
64010f63:	jmp    DWORD PTR [edx*4+0x64011090]
64010f6a:	mov    edi,edi
64010f6c:	neg    ecx
64010f6e:	jmp    DWORD PTR [ecx*4+0x64011040]
64010f75:	lea    ecx,[ecx+0x0]
64010f78:	mov    eax,edi
64010f7a:	mov    edx,0x3
64010f7f:	cmp    ecx,0x4
64010f82:	jb     0x64010f90
64010f84:	and    eax,0x3
64010f87:	sub    ecx,eax
64010f89:	jmp    DWORD PTR [eax*4+0x64010f94]
64010f90:	jmp    DWORD PTR [ecx*4+0x64011090]
64010f97:	nop
64010f98:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
64010f99:	smsw   WORD PTR [eax+ecx*8+0xf]
64010f9e:	add    DWORD PTR [eax+esi*8+0xf],esp
64010fa2:	add    DWORD PTR [edx+ecx*4+0x46],esp
64010fa6:	add    esp,DWORD PTR [ebx]
64010fa8:	ror    DWORD PTR [eax-0x117cfcb9],1
64010fae:	add    ecx,eax
64010fb0:	jmp    0x65f092b7
64010fb5:	cmp    ecx,0x8
64010fb8:	jb     0x64010f6c
64010fba:	std    
64010fbb:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
64010fbd:	cld    
64010fbe:	jmp    DWORD PTR [edx*4+0x64011090]
64010fc5:	lea    ecx,[ecx+0x0]
64010fc8:	mov    al,BYTE PTR [esi+0x3]
64010fcb:	and    edx,ecx
64010fcd:	mov    BYTE PTR [edi+0x3],al
64010fd0:	mov    al,BYTE PTR [esi+0x2]
64010fd3:	shr    ecx,0x2
64010fd6:	mov    BYTE PTR [edi+0x2],al
64010fd9:	sub    esi,0x2
64010fdc:	sub    edi,0x2
64010fdf:	cmp    ecx,0x8
64010fe2:	jb     0x64010f6c
64010fe4:	std    
64010fe5:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
64010fe7:	cld    
64010fe8:	jmp    DWORD PTR [edx*4+0x64011090]
64010fef:	nop
64010ff0:	mov    al,BYTE PTR [esi+0x3]
64010ff3:	and    edx,ecx
64010ff5:	mov    BYTE PTR [edi+0x3],al
64010ff8:	mov    al,BYTE PTR [esi+0x2]
64010ffb:	mov    BYTE PTR [edi+0x2],al
64010ffe:	mov    al,BYTE PTR [esi+0x1]
64011001:	shr    ecx,0x2
64011004:	mov    BYTE PTR [edi+0x1],al
64011007:	sub    esi,0x3
6401100a:	sub    edi,0x3
6401100d:	cmp    ecx,0x8
64011010:	jb     0x64010f6c
64011016:	std    
64011017:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
64011019:	cld    
6401101a:	jmp    DWORD PTR [edx*4+0x64011090]
64011021:	lea    ecx,[ecx+0x0]
64011024:	inc    esp
64011025:	adc    BYTE PTR [ecx],al
64011027:	fs dec esp
64011029:	adc    BYTE PTR [ecx],al
6401102b:	fs push esp
6401102d:	adc    BYTE PTR [ecx],al
6401102f:	fs pop esp
64011031:	adc    BYTE PTR [ecx],al
64011033:	fs adc BYTE PTR fs:[ecx],al
64011037:	fs ins BYTE PTR es:[edi],dx
64011039:	adc    BYTE PTR [ecx],al
6401103b:	fs je  0x6401104e
6401103e:	add    DWORD PTR [edi+eax*4+0x10],esp
64011042:	add    DWORD PTR [ebx+ecx*4+0x44],esp
64011046:	mov    ds,WORD PTR [ecx+ecx*4]
64011049:	inc    esp
6401104a:	(bad)  
6401104b:	sbb    al,0x8b
6401104d:	inc    esp
6401104e:	mov    ds,WORD PTR [eax]
64011050:	mov    DWORD PTR [edi+ecx*4+0x18],eax
64011054:	mov    eax,DWORD PTR [esi+ecx*4+0x14]
64011058:	mov    DWORD PTR [edi+ecx*4+0x14],eax
6401105c:	mov    eax,DWORD PTR [esi+ecx*4+0x10]
64011060:	mov    DWORD PTR [edi+ecx*4+0x10],eax
64011064:	mov    eax,DWORD PTR [esi+ecx*4+0xc]
64011068:	mov    DWORD PTR [edi+ecx*4+0xc],eax
6401106c:	mov    eax,DWORD PTR [esi+ecx*4+0x8]
64011070:	mov    DWORD PTR [edi+ecx*4+0x8],eax
64011074:	mov    eax,DWORD PTR [esi+ecx*4+0x4]
64011078:	mov    DWORD PTR [edi+ecx*4+0x4],eax
6401107c:	lea    eax,[ecx*4+0x0]
64011083:	add    esi,eax
64011085:	add    edi,eax
64011087:	jmp    DWORD PTR [edx*4+0x64011090]
6401108e:	mov    edi,edi
64011090:	mov    al,ds:0xa8640110
64011095:	adc    BYTE PTR [ecx],al
64011097:	fs mov eax,0xcc640110
6401109d:	adc    BYTE PTR [ecx],al
6401109f:	mov    eax,DWORD PTR fs:[ebp+0x8]
640110a3:	pop    esi
640110a4:	pop    edi
640110a5:	leave  
640110a6:	ret    
640110a7:	nop
640110a8:	mov    al,BYTE PTR [esi+0x3]
640110ab:	mov    BYTE PTR [edi+0x3],al
640110ae:	mov    eax,DWORD PTR [ebp+0x8]
640110b1:	pop    esi
640110b2:	pop    edi
640110b3:	leave  
640110b4:	ret    
640110b5:	lea    ecx,[ecx+0x0]
640110b8:	mov    al,BYTE PTR [esi+0x3]
640110bb:	mov    BYTE PTR [edi+0x3],al
640110be:	mov    al,BYTE PTR [esi+0x2]
640110c1:	mov    BYTE PTR [edi+0x2],al
640110c4:	mov    eax,DWORD PTR [ebp+0x8]
640110c7:	pop    esi
640110c8:	pop    edi
640110c9:	leave  
640110ca:	ret    
640110cb:	nop
640110cc:	mov    al,BYTE PTR [esi+0x3]
640110cf:	mov    BYTE PTR [edi+0x3],al
640110d2:	mov    al,BYTE PTR [esi+0x2]
640110d5:	mov    BYTE PTR [edi+0x2],al
640110d8:	mov    al,BYTE PTR [esi+0x1]
640110db:	mov    BYTE PTR [edi+0x1],al
640110de:	mov    eax,DWORD PTR [ebp+0x8]
640110e1:	pop    esi
640110e2:	pop    edi
640110e3:	leave  
640110e4:	ret    
640110e5:	mov    eax,DWORD PTR [esp+0x4]
640110e9:	xor    ecx,ecx
640110eb:	cmp    eax,DWORD PTR [ecx*8+0x64028050]
640110f2:	je     0x64011106
640110f4:	inc    ecx
640110f5:	cmp    ecx,0x2d
640110f8:	jb     0x640110eb
640110fa:	lea    ecx,[eax-0x13]
640110fd:	cmp    ecx,0x11
64011100:	ja     0x6401110e
64011102:	push   0xd
64011104:	pop    eax
64011105:	ret    
64011106:	mov    eax,DWORD PTR [ecx*8+0x64028054]
6401110d:	ret    
6401110e:	add    eax,0xffffff44
64011113:	push   0xe
64011115:	pop    ecx
64011116:	cmp    ecx,eax
64011118:	sbb    eax,eax
6401111a:	and    eax,ecx
6401111c:	add    eax,0x8
6401111f:	ret    
64011120:	call   0x640113f4
64011125:	test   eax,eax
64011127:	jne    0x6401112f
64011129:	mov    eax,0x640281b8
6401112e:	ret    
6401112f:	add    eax,0x8
64011132:	ret    
64011133:	call   0x640113f4
64011138:	test   eax,eax
6401113a:	jne    0x64011142
6401113c:	mov    eax,0x640281bc
64011141:	ret    
64011142:	add    eax,0xc
64011145:	ret    
64011146:	push   esi
64011147:	call   0x64011133
6401114c:	mov    ecx,DWORD PTR [esp+0x8]
64011150:	push   ecx
64011151:	mov    DWORD PTR [eax],ecx
64011153:	call   0x640110e5
64011158:	pop    ecx
64011159:	mov    esi,eax
6401115b:	call   0x64011120
64011160:	mov    DWORD PTR [eax],esi
64011162:	pop    esi
64011163:	ret    
64011164:	and    DWORD PTR ds:0x6402d59c,0x0
6401116b:	ret    
6401116c:	push   ebp
6401116d:	mov    ebp,esp
6401116f:	push   ecx
64011170:	push   ecx
64011171:	push   ebx
64011172:	push   esi
64011173:	xor    esi,esi
64011175:	lea    eax,[ebp-0x4]
64011178:	inc    esi
64011179:	xor    ebx,ebx
6401117b:	push   eax
6401117c:	mov    DWORD PTR [ebp-0x8],esi
6401117f:	mov    DWORD PTR [ebp-0x4],ebx
64011182:	call   0x64012886
64011187:	cmp    DWORD PTR [ebp-0x4],0x5
6401118b:	pop    ecx
6401118c:	jle    0x64011192
6401118e:	mov    eax,esi
64011190:	jmp    0x640111d4
64011192:	push   edi
64011193:	push   ebx
64011194:	call   DWORD PTR ds:0x64021118
6401119a:	mov    esi,DWORD PTR [eax+0x3c]
6401119d:	add    esi,eax
6401119f:	cmp    WORD PTR [esi+0x6],bx
640111a3:	movzx  eax,WORD PTR [esi+0x14]
640111a7:	lea    edi,[eax+esi*1+0x18]
640111ab:	jbe    0x640111d0
640111ad:	push   edi
640111ae:	push   0x64021bac
640111b3:	call   0x64010c90
640111b8:	test   eax,eax
640111ba:	pop    ecx
640111bb:	pop    ecx
640111bc:	je     0x640111cc
640111be:	movzx  eax,WORD PTR [esi+0x6]
640111c2:	inc    ebx
640111c3:	add    edi,0x28
640111c6:	cmp    ebx,eax
640111c8:	jb     0x640111ad
640111ca:	jmp    0x640111d0
640111cc:	and    DWORD PTR [ebp-0x8],0x0
640111d0:	mov    eax,DWORD PTR [ebp-0x8]
640111d3:	pop    edi
640111d4:	pop    esi
640111d5:	pop    ebx
640111d6:	leave  
640111d7:	ret    
640111d8:	push   esi
640111d9:	push   DWORD PTR ds:0x640281c4
640111df:	mov    esi,DWORD PTR ds:0x6402111c
640111e5:	call   esi
640111e7:	test   eax,eax
640111e9:	je     0x6401120c
640111eb:	mov    eax,ds:0x640281c0
640111f0:	cmp    eax,0xffffffff
640111f3:	je     0x6401120c
640111f5:	push   eax
640111f6:	push   DWORD PTR ds:0x640281c4
640111fc:	call   esi
640111fe:	call   eax
64011200:	test   eax,eax
64011202:	je     0x6401120c
64011204:	mov    eax,DWORD PTR [eax+0x1f8]
6401120a:	jmp    0x64011232
6401120c:	push   0x64021bc4
64011211:	call   DWORD PTR ds:0x64021118
64011217:	mov    esi,eax
64011219:	test   esi,esi
6401121b:	je     0x64011240
6401121d:	call   0x6401116c
64011222:	test   eax,eax
64011224:	je     0x64011240
64011226:	push   0x64021bb4
6401122b:	push   esi
6401122c:	call   DWORD PTR ds:0x64021014
64011232:	test   eax,eax
64011234:	je     0x64011240
64011236:	push   DWORD PTR [esp+0x8]
6401123a:	call   eax
6401123c:	mov    DWORD PTR [esp+0x8],eax
64011240:	mov    eax,DWORD PTR [esp+0x8]
64011244:	pop    esi
64011245:	ret    
64011246:	push   0x0
64011248:	call   0x640111d8
6401124d:	pop    ecx
6401124e:	ret    
6401124f:	push   esi
64011250:	push   DWORD PTR ds:0x640281c4
64011256:	mov    esi,DWORD PTR ds:0x6402111c
6401125c:	call   esi
6401125e:	test   eax,eax
64011260:	je     0x64011283
64011262:	mov    eax,ds:0x640281c0
64011267:	cmp    eax,0xffffffff
6401126a:	je     0x64011283
6401126c:	push   eax
6401126d:	push   DWORD PTR ds:0x640281c4
64011273:	call   esi
64011275:	call   eax
64011277:	test   eax,eax
64011279:	je     0x64011283
6401127b:	mov    eax,DWORD PTR [eax+0x1fc]
64011281:	jmp    0x640112a9
64011283:	push   0x64021bc4
64011288:	call   DWORD PTR ds:0x64021118
6401128e:	mov    esi,eax
64011290:	test   esi,esi
64011292:	je     0x640112b7
64011294:	call   0x6401116c
64011299:	test   eax,eax
6401129b:	je     0x640112b7
6401129d:	push   0x64021bd4
640112a2:	push   esi
640112a3:	call   DWORD PTR ds:0x64021014
640112a9:	test   eax,eax
640112ab:	je     0x640112b7
640112ad:	push   DWORD PTR [esp+0x8]
640112b1:	call   eax
640112b3:	mov    DWORD PTR [esp+0x8],eax
640112b7:	mov    eax,DWORD PTR [esp+0x8]
640112bb:	pop    esi
640112bc:	ret    
640112bd:	call   DWORD PTR ds:0x64021120
640112c3:	ret    0x4
640112c6:	push   esi
640112c7:	push   DWORD PTR ds:0x640281c4
640112cd:	call   DWORD PTR ds:0x6402111c
640112d3:	mov    esi,eax
640112d5:	test   esi,esi
640112d7:	jne    0x640112f4
640112d9:	push   DWORD PTR ds:0x64029530
640112df:	call   0x6401124f
640112e4:	pop    ecx
640112e5:	mov    esi,eax
640112e7:	push   esi
640112e8:	push   DWORD PTR ds:0x640281c4
640112ee:	call   DWORD PTR ds:0x64021124
640112f4:	mov    eax,esi
640112f6:	pop    esi
640112f7:	ret    
640112f8:	mov    eax,ds:0x640281c0
640112fd:	cmp    eax,0xffffffff
64011300:	je     0x64011318
64011302:	push   eax
64011303:	push   DWORD PTR ds:0x64029538
64011309:	call   0x6401124f
6401130e:	pop    ecx
6401130f:	call   eax
64011311:	or     DWORD PTR ds:0x640281c0,0xffffffff
64011318:	mov    eax,ds:0x640281c4
6401131d:	cmp    eax,0xffffffff
64011320:	je     0x64011330
64011322:	push   eax
64011323:	call   DWORD PTR ds:0x64021128
64011329:	or     DWORD PTR ds:0x640281c4,0xffffffff
64011330:	jmp    0x6401683d
64011335:	push   0xc
64011337:	push   0x640258a8
6401133c:	call   0x640106f8
64011341:	push   0x64021bc4
64011346:	call   DWORD PTR ds:0x64021118
6401134c:	mov    DWORD PTR [ebp-0x1c],eax
6401134f:	mov    esi,DWORD PTR [ebp+0x8]
64011352:	mov    DWORD PTR [esi+0x5c],0x64028858
64011359:	xor    edi,edi
6401135b:	inc    edi
6401135c:	mov    DWORD PTR [esi+0x14],edi
6401135f:	test   eax,eax
64011361:	je     0x64011392
64011363:	call   0x6401116c
64011368:	test   eax,eax
6401136a:	je     0x64011392
6401136c:	push   0x64021bb4
64011371:	push   DWORD PTR [ebp-0x1c]
64011374:	mov    ebx,DWORD PTR ds:0x64021014
6401137a:	call   ebx
6401137c:	mov    DWORD PTR [esi+0x1f8],eax
64011382:	push   0x64021bd4
64011387:	push   DWORD PTR [ebp-0x1c]
6401138a:	call   ebx
6401138c:	mov    DWORD PTR [esi+0x1fc],eax
64011392:	mov    DWORD PTR [esi+0x70],edi
64011395:	mov    BYTE PTR [esi+0xc8],0x43
6401139c:	mov    BYTE PTR [esi+0x14b],0x43
640113a3:	mov    eax,0x640281f8
640113a8:	mov    DWORD PTR [esi+0x68],eax
640113ab:	push   eax
640113ac:	call   DWORD PTR ds:0x64021020
640113b2:	push   0xc
640113b4:	call   0x6401696a
640113b9:	pop    ecx
640113ba:	and    DWORD PTR [ebp-0x4],0x0
640113be:	mov    eax,DWORD PTR [ebp+0xc]
640113c1:	mov    DWORD PTR [esi+0x6c],eax
640113c4:	test   eax,eax
640113c6:	jne    0x640113d0
640113c8:	mov    eax,ds:0x64028800
640113cd:	mov    DWORD PTR [esi+0x6c],eax
640113d0:	push   DWORD PTR [esi+0x6c]
640113d3:	call   0x6401329f
640113d8:	pop    ecx
640113d9:	mov    DWORD PTR [ebp-0x4],0xfffffffe
640113e0:	call   0x640113eb
640113e5:	call   0x6401073d
640113ea:	ret    
640113eb:	push   0xc
640113ed:	call   0x64016892
640113f2:	pop    ecx
640113f3:	ret    
640113f4:	push   esi
640113f5:	push   edi
640113f6:	call   DWORD PTR ds:0x64021044
640113fc:	push   DWORD PTR ds:0x640281c0
64011402:	mov    edi,eax
64011404:	call   0x640112c6
64011409:	call   eax
6401140b:	mov    esi,eax
6401140d:	test   esi,esi
6401140f:	jne    0x6401145f
64011411:	push   0x214
64011416:	push   0x1
64011418:	call   0x64012670
6401141d:	mov    esi,eax
6401141f:	test   esi,esi
64011421:	pop    ecx
64011422:	pop    ecx
64011423:	je     0x6401145f
64011425:	push   esi
64011426:	push   DWORD PTR ds:0x640281c0
6401142c:	push   DWORD PTR ds:0x64029534
64011432:	call   0x6401124f
64011437:	pop    ecx
64011438:	call   eax
6401143a:	test   eax,eax
6401143c:	je     0x64011456
6401143e:	push   0x0
64011440:	push   esi
64011441:	call   0x64011335
64011446:	pop    ecx
64011447:	pop    ecx
64011448:	call   DWORD PTR ds:0x64021110
6401144e:	or     DWORD PTR [esi+0x4],0xffffffff
64011452:	mov    DWORD PTR [esi],eax
64011454:	jmp    0x6401145f
64011456:	push   esi
64011457:	call   0x640101e6
6401145c:	pop    ecx
6401145d:	xor    esi,esi
6401145f:	push   edi
64011460:	call   DWORD PTR ds:0x64021010
64011466:	pop    edi
64011467:	mov    eax,esi
64011469:	pop    esi
6401146a:	ret    
6401146b:	push   esi
6401146c:	call   0x640113f4
64011471:	mov    esi,eax
64011473:	test   esi,esi
64011475:	jne    0x6401147f
64011477:	push   0x10
64011479:	call   0x640127a6
6401147e:	pop    ecx
6401147f:	mov    eax,esi
64011481:	pop    esi
64011482:	ret    
64011483:	push   0x8
64011485:	push   0x640258c8
6401148a:	call   0x640106f8
6401148f:	mov    esi,DWORD PTR [ebp+0x8]
64011492:	test   esi,esi
64011494:	je     0x64011584
6401149a:	mov    eax,DWORD PTR [esi+0x24]
6401149d:	test   eax,eax
6401149f:	je     0x640114a8
640114a1:	push   eax
640114a2:	call   0x640101e6
640114a7:	pop    ecx
640114a8:	mov    eax,DWORD PTR [esi+0x2c]
640114ab:	test   eax,eax
640114ad:	je     0x640114b6
640114af:	push   eax
640114b0:	call   0x640101e6
640114b5:	pop    ecx
640114b6:	mov    eax,DWORD PTR [esi+0x34]
640114b9:	test   eax,eax
640114bb:	je     0x640114c4
640114bd:	push   eax
640114be:	call   0x640101e6
640114c3:	pop    ecx
640114c4:	mov    eax,DWORD PTR [esi+0x3c]
640114c7:	test   eax,eax
640114c9:	je     0x640114d2
640114cb:	push   eax
640114cc:	call   0x640101e6
640114d1:	pop    ecx
640114d2:	mov    eax,DWORD PTR [esi+0x44]
640114d5:	test   eax,eax
640114d7:	je     0x640114e0
640114d9:	push   eax
640114da:	call   0x640101e6
640114df:	pop    ecx
640114e0:	mov    eax,DWORD PTR [esi+0x48]
640114e3:	test   eax,eax
640114e5:	je     0x640114ee
640114e7:	push   eax
640114e8:	call   0x640101e6
640114ed:	pop    ecx
640114ee:	mov    eax,DWORD PTR [esi+0x5c]
640114f1:	cmp    eax,0x64028858
640114f6:	je     0x640114ff
640114f8:	push   eax
640114f9:	call   0x640101e6
640114fe:	pop    ecx
640114ff:	push   0xd
64011501:	call   0x6401696a
64011506:	pop    ecx
64011507:	and    DWORD PTR [ebp-0x4],0x0
6401150b:	mov    edi,DWORD PTR [esi+0x68]
6401150e:	test   edi,edi
64011510:	je     0x6401152c
64011512:	push   edi
64011513:	call   DWORD PTR ds:0x64021058
64011519:	test   eax,eax
6401151b:	jne    0x6401152c
6401151d:	cmp    edi,0x640281f8
64011523:	je     0x6401152c
64011525:	push   edi
64011526:	call   0x640101e6
6401152b:	pop    ecx
6401152c:	mov    DWORD PTR [ebp-0x4],0xfffffffe
64011533:	call   0x6401158f
64011538:	push   0xc
6401153a:	call   0x6401696a
6401153f:	pop    ecx
64011540:	mov    DWORD PTR [ebp-0x4],0x1
64011547:	mov    edi,DWORD PTR [esi+0x6c]
6401154a:	test   edi,edi
6401154c:	je     0x64011571
6401154e:	push   edi
6401154f:	call   0x64013325
64011554:	pop    ecx
64011555:	cmp    edi,DWORD PTR ds:0x64028800
6401155b:	je     0x64011571
6401155d:	cmp    edi,0x64028728
64011563:	je     0x64011571
64011565:	cmp    DWORD PTR [edi],0x0
64011568:	jne    0x64011571
6401156a:	push   edi
6401156b:	call   0x6401315f
64011570:	pop    ecx
64011571:	mov    DWORD PTR [ebp-0x4],0xfffffffe
64011578:	call   0x6401159b
6401157d:	push   esi
6401157e:	call   0x640101e6
64011583:	pop    ecx
64011584:	call   0x6401073d
64011589:	ret    0x4
6401158c:	mov    esi,DWORD PTR [ebp+0x8]
6401158f:	push   0xd
64011591:	call   0x64016892
64011596:	pop    ecx
64011597:	ret    
64011598:	mov    esi,DWORD PTR [ebp+0x8]
6401159b:	push   0xc
6401159d:	call   0x64016892
640115a2:	pop    ecx
640115a3:	ret    
640115a4:	cmp    DWORD PTR ds:0x640281c0,0xffffffff
640115ab:	je     0x640115f9
640115ad:	push   edi
640115ae:	mov    edi,DWORD PTR [esp+0x8]
640115b2:	test   edi,edi
640115b4:	jne    0x640115dc
640115b6:	push   esi
640115b7:	push   DWORD PTR ds:0x640281c4
640115bd:	mov    esi,DWORD PTR ds:0x6402111c
640115c3:	call   esi
640115c5:	test   eax,eax
640115c7:	je     0x640115db
640115c9:	push   DWORD PTR ds:0x640281c0
640115cf:	push   DWORD PTR ds:0x640281c4
640115d5:	call   esi
640115d7:	call   eax
640115d9:	mov    edi,eax
640115db:	pop    esi
640115dc:	push   0x0
640115de:	push   DWORD PTR ds:0x640281c0
640115e4:	push   DWORD PTR ds:0x64029534
640115ea:	call   0x6401124f
640115ef:	pop    ecx
640115f0:	call   eax
640115f2:	push   edi
640115f3:	call   0x64011483
640115f8:	pop    edi
640115f9:	mov    eax,ds:0x640281c4
640115fe:	cmp    eax,0xffffffff
64011601:	je     0x6401160c
64011603:	push   0x0
64011605:	push   eax
64011606:	call   DWORD PTR ds:0x64021124
6401160c:	ret    
6401160d:	push   edi
6401160e:	push   0x64021bc4
64011613:	call   DWORD PTR ds:0x64021118
64011619:	mov    edi,eax
6401161b:	test   edi,edi
6401161d:	jne    0x64011628
6401161f:	call   0x640112f8
64011624:	xor    eax,eax
64011626:	pop    edi
64011627:	ret    
64011628:	push   esi
64011629:	mov    esi,DWORD PTR ds:0x64021014
6401162f:	push   0x64021c04
64011634:	push   edi
64011635:	call   esi
64011637:	push   0x64021bf8
6401163c:	push   edi
6401163d:	mov    ds:0x6402952c,eax
64011642:	call   esi
64011644:	push   0x64021bec
64011649:	push   edi
6401164a:	mov    ds:0x64029530,eax
6401164f:	call   esi
64011651:	push   0x64021be4
64011656:	push   edi
64011657:	mov    ds:0x64029534,eax
6401165c:	call   esi
6401165e:	cmp    DWORD PTR ds:0x6402952c,0x0
64011665:	mov    esi,DWORD PTR ds:0x64021124
6401166b:	mov    ds:0x64029538,eax
64011670:	je     0x64011688
64011672:	cmp    DWORD PTR ds:0x64029530,0x0
64011679:	je     0x64011688
6401167b:	cmp    DWORD PTR ds:0x64029534,0x0
64011682:	je     0x64011688
64011684:	test   eax,eax
64011686:	jne    0x640116ac
64011688:	mov    eax,ds:0x6402111c
6401168d:	mov    ds:0x64029530,eax
64011692:	mov    eax,ds:0x64021128
64011697:	mov    DWORD PTR ds:0x6402952c,0x640112bd
640116a1:	mov    DWORD PTR ds:0x64029534,esi
640116a7:	mov    ds:0x64029538,eax
640116ac:	call   DWORD PTR ds:0x64021120
640116b2:	cmp    eax,0xffffffff
640116b5:	mov    ds:0x640281c4,eax
640116ba:	je     0x6401178c
640116c0:	push   DWORD PTR ds:0x64029530
640116c6:	push   eax
640116c7:	call   esi
640116c9:	test   eax,eax
640116cb:	je     0x6401178c
640116d1:	call   0x64012a56
640116d6:	push   DWORD PTR ds:0x6402952c
640116dc:	call   0x640111d8
640116e1:	push   DWORD PTR ds:0x64029530
640116e7:	mov    ds:0x6402952c,eax
640116ec:	call   0x640111d8
640116f1:	push   DWORD PTR ds:0x64029534
640116f7:	mov    ds:0x64029530,eax
640116fc:	call   0x640111d8
64011701:	push   DWORD PTR ds:0x64029538
64011707:	mov    ds:0x64029534,eax
6401170c:	call   0x640111d8
64011711:	add    esp,0x10
64011714:	mov    ds:0x64029538,eax
64011719:	call   0x640167f4
6401171e:	test   eax,eax
64011720:	je     0x64011787
64011722:	push   0x64011483
64011727:	push   DWORD PTR ds:0x6402952c
6401172d:	call   0x6401124f
64011732:	pop    ecx
64011733:	call   eax
64011735:	cmp    eax,0xffffffff
64011738:	mov    ds:0x640281c0,eax
6401173d:	je     0x64011787
6401173f:	push   0x214
64011744:	push   0x1
64011746:	call   0x64012670
6401174b:	mov    esi,eax
6401174d:	test   esi,esi
6401174f:	pop    ecx
64011750:	pop    ecx
64011751:	je     0x64011787
64011753:	push   esi
64011754:	push   DWORD PTR ds:0x640281c0
6401175a:	push   DWORD PTR ds:0x64029534
64011760:	call   0x6401124f
64011765:	pop    ecx
64011766:	call   eax
64011768:	test   eax,eax
6401176a:	je     0x64011787
6401176c:	push   0x0
6401176e:	push   esi
6401176f:	call   0x64011335
64011774:	pop    ecx
64011775:	pop    ecx
64011776:	call   DWORD PTR ds:0x64021110
6401177c:	or     DWORD PTR [esi+0x4],0xffffffff
64011780:	mov    DWORD PTR [esi],eax
64011782:	xor    eax,eax
64011784:	inc    eax
64011785:	jmp    0x6401178e
64011787:	call   0x640112f8
6401178c:	xor    eax,eax
6401178e:	pop    esi
6401178f:	pop    edi
64011790:	ret    
64011791:	mov    eax,DWORD PTR [esp+0x4]
64011795:	mov    ds:0x6402953c,eax
6401179a:	ret    
6401179b:	push   DWORD PTR ds:0x6402953c
640117a1:	call   0x6401124f
640117a6:	test   eax,eax
640117a8:	pop    ecx
640117a9:	je     0x640117ba
640117ab:	push   DWORD PTR [esp+0x4]
640117af:	call   eax
640117b1:	test   eax,eax
640117b3:	pop    ecx
640117b4:	je     0x640117ba
640117b6:	xor    eax,eax
640117b8:	inc    eax
640117b9:	ret    
640117ba:	xor    eax,eax
640117bc:	ret    
640117bd:	mov    DWORD PTR [ecx],0x64021c18
640117c3:	jmp    0x6400ec6b
640117c8:	push   esi
640117c9:	mov    esi,ecx
640117cb:	mov    DWORD PTR [esi],0x64021c18
640117d1:	call   0x6400ec6b
640117d6:	test   BYTE PTR [esp+0x8],0x1
640117db:	je     0x640117e4
640117dd:	push   esi
640117de:	call   0x6400eb52
640117e3:	pop    ecx
640117e4:	mov    eax,esi
640117e6:	pop    esi
640117e7:	ret    0x4
640117ea:	push   esi
640117eb:	push   edi
640117ec:	mov    edi,DWORD PTR [esp+0xc]
640117f0:	mov    eax,DWORD PTR [edi+0x4]
640117f3:	test   eax,eax
640117f5:	je     0x64011840
640117f7:	lea    edx,[eax+0x8]
640117fa:	cmp    BYTE PTR [edx],0x0
640117fd:	je     0x64011840
640117ff:	mov    esi,DWORD PTR [esp+0x10]
64011803:	mov    ecx,DWORD PTR [esi+0x4]
64011806:	cmp    eax,ecx
64011808:	je     0x6401181e
6401180a:	add    ecx,0x8
6401180d:	push   ecx
6401180e:	push   edx
6401180f:	call   0x64010c90
64011814:	test   eax,eax
64011816:	pop    ecx
64011817:	pop    ecx
64011818:	je     0x6401181e
6401181a:	xor    eax,eax
6401181c:	jmp    0x64011843
6401181e:	test   BYTE PTR [esi],0x2
64011821:	je     0x64011828
64011823:	test   BYTE PTR [edi],0x8
64011826:	je     0x6401181a
64011828:	mov    eax,DWORD PTR [esp+0x14]
6401182c:	mov    eax,DWORD PTR [eax]
6401182e:	test   al,0x1
64011830:	je     0x64011837
64011832:	test   BYTE PTR [edi],0x1
64011835:	je     0x6401181a
64011837:	test   al,0x2
64011839:	je     0x64011840
6401183b:	test   BYTE PTR [edi],0x2
6401183e:	je     0x6401181a
64011840:	xor    eax,eax
64011842:	inc    eax
64011843:	pop    edi
64011844:	pop    esi
64011845:	ret    
64011846:	mov    eax,DWORD PTR [esp+0x4]
6401184a:	mov    eax,DWORD PTR [eax]
6401184c:	mov    eax,DWORD PTR [eax]
6401184e:	cmp    eax,0xe0434f4d
64011853:	je     0x6401186d
64011855:	cmp    eax,0xe06d7363
6401185a:	jne    0x64011887
6401185c:	call   0x6401146b
64011861:	and    DWORD PTR [eax+0x90],0x0
64011868:	jmp    0x64012447
6401186d:	call   0x6401146b
64011872:	cmp    DWORD PTR [eax+0x90],0x0
64011879:	jle    0x64011887
6401187b:	call   0x6401146b
64011880:	add    eax,0x90
64011885:	dec    DWORD PTR [eax]
64011887:	xor    eax,eax
64011889:	ret    
6401188a:	push   0x10
6401188c:	push   0x640258f0
64011891:	call   0x640106f8
64011896:	mov    edi,DWORD PTR [ebp+0x10]
64011899:	mov    ebx,DWORD PTR [ebp+0x8]
6401189c:	cmp    DWORD PTR [edi+0x4],0x80
640118a3:	jg     0x640118ab
640118a5:	movsx  esi,BYTE PTR [ebx+0x8]
640118a9:	jmp    0x640118ae
640118ab:	mov    esi,DWORD PTR [ebx+0x8]
640118ae:	mov    DWORD PTR [ebp-0x1c],esi
640118b1:	call   0x6401146b
640118b6:	add    eax,0x90
640118bb:	inc    DWORD PTR [eax]
640118bd:	and    DWORD PTR [ebp-0x4],0x0
640118c1:	cmp    esi,DWORD PTR [ebp+0x14]
640118c4:	je     0x6401192b
640118c6:	cmp    esi,0xffffffff
640118c9:	jle    0x640118d0
640118cb:	cmp    esi,DWORD PTR [edi+0x4]
640118ce:	jl     0x640118d5
640118d0:	call   0x64012493
640118d5:	mov    eax,esi
640118d7:	shl    eax,0x3
640118da:	mov    ecx,DWORD PTR [edi+0x8]
640118dd:	add    ecx,eax
640118df:	mov    esi,DWORD PTR [ecx]
640118e1:	mov    DWORD PTR [ebp-0x20],esi
640118e4:	mov    DWORD PTR [ebp-0x4],0x1
640118eb:	cmp    DWORD PTR [ecx+0x4],0x0
640118ef:	je     0x64011906
640118f1:	mov    DWORD PTR [ebx+0x8],esi
640118f4:	push   0x103
640118f9:	push   ebx
640118fa:	mov    ecx,DWORD PTR [edi+0x8]
640118fd:	push   DWORD PTR [ecx+eax*1+0x4]
64011901:	call   0x640124e0
64011906:	and    DWORD PTR [ebp-0x4],0x0
6401190a:	jmp    0x64011926
6401190c:	push   DWORD PTR [ebp-0x14]
6401190f:	call   0x64011846
64011914:	pop    ecx
64011915:	ret    
64011916:	mov    esp,DWORD PTR [ebp-0x18]
64011919:	and    DWORD PTR [ebp-0x4],0x0
6401191d:	mov    edi,DWORD PTR [ebp+0x10]
64011920:	mov    ebx,DWORD PTR [ebp+0x8]
64011923:	mov    esi,DWORD PTR [ebp-0x20]
64011926:	mov    DWORD PTR [ebp-0x1c],esi
64011929:	jmp    0x640118c1
6401192b:	mov    DWORD PTR [ebp-0x4],0xfffffffe
64011932:	call   0x64011950
64011937:	cmp    esi,DWORD PTR [ebp+0x14]
6401193a:	je     0x64011941
6401193c:	call   0x64012493
64011941:	mov    DWORD PTR [ebx+0x8],esi
64011944:	call   0x6401073d
64011949:	ret    
6401194a:	mov    ebx,DWORD PTR [ebp+0x8]
6401194d:	mov    esi,DWORD PTR [ebp-0x1c]
64011950:	call   0x6401146b
64011955:	cmp    DWORD PTR [eax+0x90],0x0
6401195c:	jle    0x6401196a
6401195e:	call   0x6401146b
64011963:	add    eax,0x90
64011968:	dec    DWORD PTR [eax]
6401196a:	ret    
6401196b:	mov    eax,DWORD PTR [eax]
6401196d:	cmp    DWORD PTR [eax],0xe06d7363
64011973:	jne    0x640119ad
64011975:	cmp    DWORD PTR [eax+0x10],0x3
64011979:	jne    0x640119ad
6401197b:	mov    ecx,DWORD PTR [eax+0x14]
6401197e:	cmp    ecx,0x19930520
64011984:	je     0x64011996
64011986:	cmp    ecx,0x19930521
6401198c:	je     0x64011996
6401198e:	cmp    ecx,0x19930522
64011994:	jne    0x640119ad
64011996:	cmp    DWORD PTR [eax+0x1c],0x0
6401199a:	jne    0x640119ad
6401199c:	call   0x6401146b
640119a1:	xor    ecx,ecx
640119a3:	inc    ecx
640119a4:	mov    DWORD PTR [eax+0x20c],ecx
640119aa:	mov    eax,ecx
640119ac:	ret    
640119ad:	xor    eax,eax
640119af:	ret    
640119b0:	push   0x8
640119b2:	push   0x64025918
640119b7:	call   0x640106f8
640119bc:	mov    ecx,DWORD PTR [ebp+0x8]
640119bf:	test   ecx,ecx
640119c1:	je     0x640119ed
640119c3:	cmp    DWORD PTR [ecx],0xe06d7363
640119c9:	jne    0x640119ed
640119cb:	mov    eax,DWORD PTR [ecx+0x1c]
640119ce:	test   eax,eax
640119d0:	je     0x640119ed
640119d2:	mov    eax,DWORD PTR [eax+0x4]
640119d5:	test   eax,eax
640119d7:	je     0x640119ed
640119d9:	and    DWORD PTR [ebp-0x4],0x0
640119dd:	push   eax
640119de:	push   DWORD PTR [ecx+0x18]
640119e1:	call   0x6400efb7
640119e6:	mov    DWORD PTR [ebp-0x4],0xfffffffe
640119ed:	call   0x6401073d
640119f2:	ret    
640119f3:	xor    eax,eax
640119f5:	cmp    BYTE PTR [ebp+0xc],al
640119f8:	setne  al
640119fb:	ret    
640119fc:	mov    esp,DWORD PTR [ebp-0x18]
640119ff:	jmp    0x64012447
64011a04:	mov    ecx,DWORD PTR [esp+0x8]
64011a08:	mov    eax,DWORD PTR [ecx]
64011a0a:	push   esi
64011a0b:	mov    esi,DWORD PTR [esp+0x8]
64011a0f:	add    eax,esi
64011a11:	cmp    DWORD PTR [ecx+0x4],0x0
64011a15:	jl     0x64011a27
64011a17:	mov    edx,DWORD PTR [ecx+0x4]
64011a1a:	mov    ecx,DWORD PTR [ecx+0x8]
64011a1d:	mov    esi,DWORD PTR [edx+esi*1]
64011a20:	mov    ecx,DWORD PTR [esi+ecx*1]
64011a23:	add    ecx,edx
64011a25:	add    eax,ecx
64011a27:	pop    esi
64011a28:	ret    
64011a29:	push   ebp
64011a2a:	mov    ebp,esp
64011a2c:	sub    esp,0xc
64011a2f:	test   edi,edi
64011a31:	jne    0x64011a3d
64011a33:	call   0x64012493
64011a38:	jmp    0x64012447
64011a3d:	and    DWORD PTR [ebp-0x8],0x0
64011a41:	cmp    DWORD PTR [edi],0x0
64011a44:	mov    BYTE PTR [ebp-0x1],0x0
64011a48:	jle    0x64011a9d
64011a4a:	push   ebx
64011a4b:	push   esi
64011a4c:	mov    eax,DWORD PTR [ebp+0x8]
64011a4f:	mov    eax,DWORD PTR [eax+0x1c]
64011a52:	mov    eax,DWORD PTR [eax+0xc]
64011a55:	mov    ebx,DWORD PTR [eax]
64011a57:	test   ebx,ebx
64011a59:	lea    esi,[eax+0x4]
64011a5c:	jle    0x64011a91
64011a5e:	mov    eax,DWORD PTR [ebp-0x8]
64011a61:	shl    eax,0x4
64011a64:	mov    DWORD PTR [ebp-0xc],eax
64011a67:	mov    ecx,DWORD PTR [ebp+0x8]
64011a6a:	push   DWORD PTR [ecx+0x1c]
64011a6d:	mov    eax,DWORD PTR [esi]
64011a6f:	push   eax
64011a70:	mov    eax,DWORD PTR [edi+0x4]
64011a73:	add    eax,DWORD PTR [ebp-0xc]
64011a76:	push   eax
64011a77:	call   0x640117ea
64011a7c:	add    esp,0xc
64011a7f:	test   eax,eax
64011a81:	jne    0x64011a8d
64011a83:	dec    ebx
64011a84:	add    esi,0x4
64011a87:	test   ebx,ebx
64011a89:	jg     0x64011a67
64011a8b:	jmp    0x64011a91
64011a8d:	mov    BYTE PTR [ebp-0x1],0x1
64011a91:	inc    DWORD PTR [ebp-0x8]
64011a94:	mov    eax,DWORD PTR [ebp-0x8]
64011a97:	cmp    eax,DWORD PTR [edi]
64011a99:	jl     0x64011a4c
64011a9b:	pop    esi
64011a9c:	pop    ebx
64011a9d:	mov    al,BYTE PTR [ebp-0x1]
64011aa0:	leave  
64011aa1:	ret    
64011aa2:	push   0x4
64011aa4:	mov    eax,0x6401ea53
64011aa9:	call   0x64010bde
64011aae:	call   0x6401146b
64011ab3:	cmp    DWORD PTR [eax+0x94],0x0
64011aba:	je     0x64011ac1
64011abc:	call   0x64012493
64011ac1:	and    DWORD PTR [ebp-0x4],0x0
64011ac5:	call   0x64012480
64011aca:	or     DWORD PTR [ebp-0x4],0xffffffff
64011ace:	jmp    0x64012447
64011ad3:	call   0x6401146b
64011ad8:	mov    ecx,DWORD PTR [ebp+0x8]
64011adb:	push   0x0
64011add:	push   0x0
64011adf:	mov    DWORD PTR [eax+0x94],ecx
64011ae5:	call   0x6400ef3d
64011aea:	int3   
64011aeb:	push   0x2c
64011aed:	push   0x64025990
64011af2:	call   0x640106f8
64011af7:	mov    ebx,ecx
64011af9:	mov    edi,DWORD PTR [ebp+0xc]
64011afc:	mov    esi,DWORD PTR [ebp+0x8]
64011aff:	mov    DWORD PTR [ebp-0x1c],ebx
64011b02:	and    DWORD PTR [ebp-0x34],0x0
64011b06:	mov    eax,DWORD PTR [edi-0x4]
64011b09:	mov    DWORD PTR [ebp-0x24],eax
64011b0c:	push   DWORD PTR [esi+0x18]
64011b0f:	lea    eax,[ebp-0x3c]
64011b12:	push   eax
64011b13:	call   0x6400f25b
64011b18:	pop    ecx
64011b19:	pop    ecx
64011b1a:	mov    DWORD PTR [ebp-0x28],eax
64011b1d:	call   0x6401146b
64011b22:	mov    eax,DWORD PTR [eax+0x88]
64011b28:	mov    DWORD PTR [ebp-0x2c],eax
64011b2b:	call   0x6401146b
64011b30:	mov    eax,DWORD PTR [eax+0x8c]
64011b36:	mov    DWORD PTR [ebp-0x30],eax
64011b39:	call   0x6401146b
64011b3e:	mov    DWORD PTR [eax+0x88],esi
64011b44:	call   0x6401146b
64011b49:	mov    ecx,DWORD PTR [ebp+0x10]
64011b4c:	mov    DWORD PTR [eax+0x8c],ecx
64011b52:	and    DWORD PTR [ebp-0x4],0x0
64011b56:	xor    eax,eax
64011b58:	inc    eax
64011b59:	mov    DWORD PTR [ebp+0x10],eax
64011b5c:	mov    DWORD PTR [ebp-0x4],eax
64011b5f:	push   DWORD PTR [ebp+0x1c]
64011b62:	push   DWORD PTR [ebp+0x18]
64011b65:	push   ebx
64011b66:	push   DWORD PTR [ebp+0x14]
64011b69:	push   edi
64011b6a:	call   0x6400f2f0
64011b6f:	add    esp,0x14
64011b72:	mov    DWORD PTR [ebp-0x1c],eax
64011b75:	and    DWORD PTR [ebp-0x4],0x0
64011b79:	jmp    0x64011bea
64011b7b:	mov    eax,DWORD PTR [ebp-0x14]
64011b7e:	call   0x6401196b
64011b83:	ret    
64011b84:	mov    esp,DWORD PTR [ebp-0x18]
64011b87:	call   0x6401146b
64011b8c:	and    DWORD PTR [eax+0x20c],0x0
64011b93:	mov    esi,DWORD PTR [ebp+0x14]
64011b96:	mov    edi,DWORD PTR [ebp+0xc]
64011b99:	cmp    DWORD PTR [esi+0x4],0x80
64011ba0:	jg     0x64011ba8
64011ba2:	movsx  ecx,BYTE PTR [edi+0x8]
64011ba6:	jmp    0x64011bab
64011ba8:	mov    ecx,DWORD PTR [edi+0x8]
64011bab:	mov    ebx,DWORD PTR [esi+0x10]
64011bae:	and    DWORD PTR [ebp-0x20],0x0
64011bb2:	mov    eax,DWORD PTR [ebp-0x20]
64011bb5:	cmp    eax,DWORD PTR [esi+0xc]
64011bb8:	jae    0x64011bd2
64011bba:	imul   eax,eax,0x14
64011bbd:	add    eax,ebx
64011bbf:	mov    edx,DWORD PTR [eax+0x4]
64011bc2:	cmp    ecx,edx
64011bc4:	jle    0x64011c06
64011bc6:	cmp    ecx,DWORD PTR [eax+0x8]
64011bc9:	jg     0x64011c06
64011bcb:	mov    eax,DWORD PTR [esi+0x8]
64011bce:	mov    ecx,DWORD PTR [eax+edx*8+0x8]
64011bd2:	push   ecx
64011bd3:	push   esi
64011bd4:	push   0x0
64011bd6:	push   edi
64011bd7:	call   0x6401188a
64011bdc:	add    esp,0x10
64011bdf:	and    DWORD PTR [ebp-0x1c],0x0
64011be3:	and    DWORD PTR [ebp-0x4],0x0
64011be7:	mov    esi,DWORD PTR [ebp+0x8]
64011bea:	mov    DWORD PTR [ebp-0x4],0xfffffffe
64011bf1:	mov    DWORD PTR [ebp+0x10],0x0
64011bf8:	call   0x64011c11
64011bfd:	mov    eax,DWORD PTR [ebp-0x1c]
64011c00:	call   0x6401073d
64011c05:	ret    
64011c06:	inc    DWORD PTR [ebp-0x20]
64011c09:	jmp    0x64011bb2
64011c0b:	mov    edi,DWORD PTR [ebp+0xc]
64011c0e:	mov    esi,DWORD PTR [ebp+0x8]
64011c11:	mov    eax,DWORD PTR [ebp-0x24]
64011c14:	mov    DWORD PTR [edi-0x4],eax
64011c17:	push   DWORD PTR [ebp-0x28]
64011c1a:	call   0x6400f2a4
64011c1f:	pop    ecx
64011c20:	call   0x6401146b
64011c25:	mov    ecx,DWORD PTR [ebp-0x2c]
64011c28:	mov    DWORD PTR [eax+0x88],ecx
64011c2e:	call   0x6401146b
64011c33:	mov    ecx,DWORD PTR [ebp-0x30]
64011c36:	mov    DWORD PTR [eax+0x8c],ecx
64011c3c:	cmp    DWORD PTR [esi],0xe06d7363
64011c42:	jne    0x64011c86
64011c44:	cmp    DWORD PTR [esi+0x10],0x3
64011c48:	jne    0x64011c86
64011c4a:	mov    eax,DWORD PTR [esi+0x14]
64011c4d:	cmp    eax,0x19930520
64011c52:	je     0x64011c62
64011c54:	cmp    eax,0x19930521
64011c59:	je     0x64011c62
64011c5b:	cmp    eax,0x19930522
64011c60:	jne    0x64011c86
64011c62:	cmp    DWORD PTR [ebp-0x34],0x0
64011c66:	jne    0x64011c86
64011c68:	cmp    DWORD PTR [ebp-0x1c],0x0
64011c6c:	je     0x64011c86
64011c6e:	push   DWORD PTR [esi+0x18]
64011c71:	call   0x6400f283
64011c76:	pop    ecx
64011c77:	test   eax,eax
64011c79:	je     0x64011c86
64011c7b:	push   DWORD PTR [ebp+0x10]
64011c7e:	push   esi
64011c7f:	call   0x640119b0
64011c84:	pop    ecx
64011c85:	pop    ecx
64011c86:	ret    
64011c87:	push   0xc
64011c89:	push   0x640259b8
64011c8e:	call   0x640106f8
64011c93:	xor    edx,edx
64011c95:	mov    DWORD PTR [ebp-0x1c],edx
64011c98:	mov    eax,DWORD PTR [ebp+0x10]
64011c9b:	mov    ecx,DWORD PTR [eax+0x4]
64011c9e:	cmp    ecx,edx
64011ca0:	je     0x64011dfe
64011ca6:	cmp    BYTE PTR [ecx+0x8],dl
64011ca9:	je     0x64011dfe
64011caf:	mov    ecx,DWORD PTR [eax+0x8]
64011cb2:	cmp    ecx,edx
64011cb4:	jne    0x64011cc2
64011cb6:	test   DWORD PTR [eax],0x80000000
64011cbc:	je     0x64011dfe
64011cc2:	mov    eax,DWORD PTR [eax]
64011cc4:	mov    esi,DWORD PTR [ebp+0xc]
64011cc7:	test   eax,eax
64011cc9:	js     0x64011ccf
64011ccb:	lea    esi,[ecx+esi*1+0xc]
64011ccf:	mov    DWORD PTR [ebp-0x4],edx
64011cd2:	xor    ebx,ebx
64011cd4:	inc    ebx
64011cd5:	push   ebx
64011cd6:	test   al,0x8
64011cd8:	je     0x64011d1b
64011cda:	mov    edi,DWORD PTR [ebp+0x8]
64011cdd:	push   DWORD PTR [edi+0x18]
64011ce0:	call   0x64017a7b
64011ce5:	pop    ecx
64011ce6:	pop    ecx
64011ce7:	test   eax,eax
64011ce9:	je     0x64011de1
64011cef:	push   ebx
64011cf0:	push   esi
64011cf1:	call   0x64017a7b
64011cf6:	pop    ecx
64011cf7:	pop    ecx
64011cf8:	test   eax,eax
64011cfa:	je     0x64011de1
64011d00:	mov    eax,DWORD PTR [edi+0x18]
64011d03:	mov    DWORD PTR [esi],eax
64011d05:	mov    ecx,DWORD PTR [ebp+0x14]
64011d08:	add    ecx,0x8
64011d0b:	push   ecx
64011d0c:	push   eax
64011d0d:	call   0x64011a04
64011d12:	pop    ecx
64011d13:	pop    ecx
64011d14:	mov    DWORD PTR [esi],eax
64011d16:	jmp    0x64011de6
64011d1b:	mov    edi,DWORD PTR [ebp+0x14]
64011d1e:	mov    eax,DWORD PTR [ebp+0x8]
64011d21:	push   DWORD PTR [eax+0x18]
64011d24:	test   BYTE PTR [edi],bl
64011d26:	je     0x64011d70
64011d28:	call   0x64017a7b
64011d2d:	pop    ecx
64011d2e:	pop    ecx
64011d2f:	test   eax,eax
64011d31:	je     0x64011de1
64011d37:	push   ebx
64011d38:	push   esi
64011d39:	call   0x64017a7b
64011d3e:	pop    ecx
64011d3f:	pop    ecx
64011d40:	test   eax,eax
64011d42:	je     0x64011de1
64011d48:	push   DWORD PTR [edi+0x14]
64011d4b:	mov    eax,DWORD PTR [ebp+0x8]
64011d4e:	push   DWORD PTR [eax+0x18]
64011d51:	push   esi
64011d52:	call   0x64010390
64011d57:	add    esp,0xc
64011d5a:	cmp    DWORD PTR [edi+0x14],0x4
64011d5e:	jne    0x64011de6
64011d64:	mov    eax,DWORD PTR [esi]
64011d66:	test   eax,eax
64011d68:	je     0x64011de6
64011d6a:	add    edi,0x8
64011d6d:	push   edi
64011d6e:	jmp    0x64011d0c
64011d70:	cmp    DWORD PTR [edi+0x18],edx
64011d73:	jne    0x64011dad
64011d75:	call   0x64017a7b
64011d7a:	pop    ecx
64011d7b:	pop    ecx
64011d7c:	test   eax,eax
64011d7e:	je     0x64011de1
64011d80:	push   ebx
64011d81:	push   esi
64011d82:	call   0x64017a7b
64011d87:	pop    ecx
64011d88:	pop    ecx
64011d89:	test   eax,eax
64011d8b:	je     0x64011de1
64011d8d:	push   DWORD PTR [edi+0x14]
64011d90:	add    edi,0x8
64011d93:	push   edi
64011d94:	mov    eax,DWORD PTR [ebp+0x8]
64011d97:	push   DWORD PTR [eax+0x18]
64011d9a:	call   0x64011a04
64011d9f:	pop    ecx
64011da0:	pop    ecx
64011da1:	push   eax
64011da2:	push   esi
64011da3:	call   0x64010390
64011da8:	add    esp,0xc
64011dab:	jmp    0x64011de6
64011dad:	call   0x64017a7b
64011db2:	pop    ecx
64011db3:	pop    ecx
64011db4:	test   eax,eax
64011db6:	je     0x64011de1
64011db8:	push   ebx
64011db9:	push   esi
64011dba:	call   0x64017a7b
64011dbf:	pop    ecx
64011dc0:	pop    ecx
64011dc1:	test   eax,eax
64011dc3:	je     0x64011de1
64011dc5:	push   DWORD PTR [edi+0x18]
64011dc8:	call   0x64017a7b
64011dcd:	pop    ecx
64011dce:	test   eax,eax
64011dd0:	je     0x64011de1
64011dd2:	test   BYTE PTR [edi],0x4
64011dd5:	push   0x0
64011dd7:	pop    eax
64011dd8:	setne  al
64011ddb:	inc    eax
64011ddc:	mov    DWORD PTR [ebp-0x1c],eax
64011ddf:	jmp    0x64011de6
64011de1:	call   0x64012493
64011de6:	mov    DWORD PTR [ebp-0x4],0xfffffffe
64011ded:	mov    eax,DWORD PTR [ebp-0x1c]
64011df0:	jmp    0x64011e00
64011df2:	xor    eax,eax
64011df4:	inc    eax
64011df5:	ret    
64011df6:	mov    esp,DWORD PTR [ebp-0x18]
64011df9:	jmp    0x64012447
64011dfe:	xor    eax,eax
64011e00:	call   0x6401073d
64011e05:	ret    
64011e06:	push   0x8
64011e08:	push   0x640259d8
64011e0d:	call   0x640106f8
64011e12:	mov    eax,DWORD PTR [ebp+0x10]
64011e15:	test   DWORD PTR [eax],0x80000000
64011e1b:	je     0x64011e22
64011e1d:	mov    ebx,DWORD PTR [ebp+0xc]
64011e20:	jmp    0x64011e2c
64011e22:	mov    ecx,DWORD PTR [eax+0x8]
64011e25:	mov    edx,DWORD PTR [ebp+0xc]
64011e28:	lea    ebx,[ecx+edx*1+0xc]
64011e2c:	and    DWORD PTR [ebp-0x4],0x0
64011e30:	mov    esi,DWORD PTR [ebp+0x14]
64011e33:	push   esi
64011e34:	push   eax
64011e35:	push   DWORD PTR [ebp+0xc]
64011e38:	mov    edi,DWORD PTR [ebp+0x8]
64011e3b:	push   edi
64011e3c:	call   0x64011c87
64011e41:	add    esp,0x10
64011e44:	dec    eax
64011e45:	je     0x64011e66
64011e47:	dec    eax
64011e48:	jne    0x64011e7e
64011e4a:	push   0x1
64011e4c:	lea    eax,[esi+0x8]
64011e4f:	push   eax
64011e50:	push   DWORD PTR [edi+0x18]
64011e53:	call   0x64011a04
64011e58:	pop    ecx
64011e59:	pop    ecx
64011e5a:	push   eax
64011e5b:	push   DWORD PTR [esi+0x18]
64011e5e:	push   ebx
64011e5f:	call   0x6400efb7
64011e64:	jmp    0x64011e7e
64011e66:	lea    eax,[esi+0x8]
64011e69:	push   eax
64011e6a:	push   DWORD PTR [edi+0x18]
64011e6d:	call   0x64011a04
64011e72:	pop    ecx
64011e73:	pop    ecx
64011e74:	push   eax
64011e75:	push   DWORD PTR [esi+0x18]
64011e78:	push   ebx
64011e79:	call   0x6400efb7
64011e7e:	mov    DWORD PTR [ebp-0x4],0xfffffffe
64011e85:	call   0x6401073d
64011e8a:	ret    
64011e8b:	xor    eax,eax
64011e8d:	inc    eax
64011e8e:	ret    
64011e8f:	mov    esp,DWORD PTR [ebp-0x18]
64011e92:	jmp    0x64012447
64011e97:	push   ebp
64011e98:	mov    ebp,esp
64011e9a:	cmp    DWORD PTR [ebp+0x18],0x0
64011e9e:	je     0x64011eb0
64011ea0:	push   DWORD PTR [ebp+0x18]
64011ea3:	push   ebx
64011ea4:	push   esi
64011ea5:	push   DWORD PTR [ebp+0x8]
64011ea8:	call   0x64011e06
64011ead:	add    esp,0x10
64011eb0:	cmp    DWORD PTR [ebp+0x20],0x0
64011eb4:	push   DWORD PTR [ebp+0x8]
64011eb7:	jne    0x64011ebc
64011eb9:	push   esi
64011eba:	jmp    0x64011ebf
64011ebc:	push   DWORD PTR [ebp+0x20]
64011ebf:	call   0x6400efbe
64011ec4:	push   DWORD PTR [edi]
64011ec6:	push   DWORD PTR [ebp+0x14]
64011ec9:	push   DWORD PTR [ebp+0x10]
64011ecc:	push   esi
64011ecd:	call   0x6401188a
64011ed2:	mov    eax,DWORD PTR [edi+0x4]
64011ed5:	push   0x100
64011eda:	push   DWORD PTR [ebp+0x1c]
64011edd:	inc    eax
64011ede:	push   DWORD PTR [ebp+0x14]
64011ee1:	mov    DWORD PTR [esi+0x8],eax
64011ee4:	push   DWORD PTR [ebp+0xc]
64011ee7:	mov    ecx,DWORD PTR [ebx+0xc]
64011eea:	push   esi
64011eeb:	push   DWORD PTR [ebp+0x8]
64011eee:	call   0x64011aeb
64011ef3:	add    esp,0x28
64011ef6:	test   eax,eax
64011ef8:	je     0x64011f01
64011efa:	push   esi
64011efb:	push   eax
64011efc:	call   0x6400ef87
64011f01:	pop    ebp
64011f02:	ret    
64011f03:	push   ebp
64011f04:	mov    ebp,esp
64011f06:	push   ecx
64011f07:	push   ecx
64011f08:	push   esi
64011f09:	mov    esi,DWORD PTR [ebp+0x8]
64011f0c:	cmp    DWORD PTR [esi],0x80000003
64011f12:	je     0x64011ff2
64011f18:	push   edi
64011f19:	call   0x6401146b
64011f1e:	cmp    DWORD PTR [eax+0x80],0x0
64011f25:	je     0x64011f66
64011f27:	call   0x6401146b
64011f2c:	lea    edi,[eax+0x80]
64011f32:	call   0x64011246
64011f37:	cmp    DWORD PTR [edi],eax
64011f39:	je     0x64011f66
64011f3b:	cmp    DWORD PTR [esi],0xe0434f4d
64011f41:	je     0x64011f66
64011f43:	push   DWORD PTR [ebp+0x24]
64011f46:	push   DWORD PTR [ebp+0x20]
64011f49:	push   DWORD PTR [ebp+0x18]
64011f4c:	push   DWORD PTR [ebp+0x14]
64011f4f:	push   DWORD PTR [ebp+0x10]
64011f52:	push   DWORD PTR [ebp+0xc]
64011f55:	push   esi
64011f56:	call   0x6400f076
64011f5b:	add    esp,0x1c
64011f5e:	test   eax,eax
64011f60:	jne    0x64011ff1
64011f66:	mov    edi,DWORD PTR [ebp+0x18]
64011f69:	cmp    DWORD PTR [edi+0xc],0x0
64011f6d:	jne    0x64011f74
64011f6f:	call   0x64012493
64011f74:	mov    esi,DWORD PTR [ebp+0x1c]
64011f77:	lea    eax,[ebp-0x8]
64011f7a:	push   eax
64011f7b:	lea    eax,[ebp-0x4]
64011f7e:	push   eax
64011f7f:	push   esi
64011f80:	push   DWORD PTR [ebp+0x20]
64011f83:	push   edi
64011f84:	call   0x6400f1e8
64011f89:	mov    edi,eax
64011f8b:	mov    eax,DWORD PTR [ebp-0x4]
64011f8e:	add    esp,0x14
64011f91:	cmp    eax,DWORD PTR [ebp-0x8]
64011f94:	jae    0x64011ff1
64011f96:	push   ebx
64011f97:	cmp    esi,DWORD PTR [edi]
64011f99:	jl     0x64011fe2
64011f9b:	cmp    esi,DWORD PTR [edi+0x4]
64011f9e:	jg     0x64011fe2
64011fa0:	mov    eax,DWORD PTR [edi+0xc]
64011fa3:	mov    ecx,DWORD PTR [edi+0x10]
64011fa6:	shl    eax,0x4
64011fa9:	add    eax,ecx
64011fab:	mov    ecx,DWORD PTR [eax-0xc]
64011fae:	test   ecx,ecx
64011fb0:	je     0x64011fb8
64011fb2:	cmp    BYTE PTR [ecx+0x8],0x0
64011fb6:	jne    0x64011fe2
64011fb8:	lea    ebx,[eax-0x10]
64011fbb:	test   BYTE PTR [ebx],0x40
64011fbe:	jne    0x64011fe2
64011fc0:	push   DWORD PTR [ebp+0x24]
64011fc3:	mov    esi,DWORD PTR [ebp+0xc]
64011fc6:	push   DWORD PTR [ebp+0x20]
64011fc9:	push   0x0
64011fcb:	push   DWORD PTR [ebp+0x18]
64011fce:	push   DWORD PTR [ebp+0x14]
64011fd1:	push   DWORD PTR [ebp+0x10]
64011fd4:	push   DWORD PTR [ebp+0x8]
64011fd7:	call   0x64011e97
64011fdc:	mov    esi,DWORD PTR [ebp+0x1c]
64011fdf:	add    esp,0x1c
64011fe2:	inc    DWORD PTR [ebp-0x4]
64011fe5:	mov    eax,DWORD PTR [ebp-0x4]
64011fe8:	add    edi,0x14
64011feb:	cmp    eax,DWORD PTR [ebp-0x8]
64011fee:	jb     0x64011f97
64011ff0:	pop    ebx
64011ff1:	pop    edi
64011ff2:	pop    esi
64011ff3:	leave  
64011ff4:	ret    
64011ff5:	push   ebp
64011ff6:	mov    ebp,esp
64011ff8:	sub    esp,0x2c
64011ffb:	mov    ecx,DWORD PTR [ebp+0xc]
64011ffe:	push   ebx
64011fff:	mov    ebx,DWORD PTR [ebp+0x18]
64012002:	mov    eax,DWORD PTR [ebx+0x4]
64012005:	cmp    eax,0x80
6401200a:	push   esi
6401200b:	push   edi
6401200c:	mov    BYTE PTR [ebp-0x1],0x0
64012010:	jg     0x64012018
64012012:	movsx  ecx,BYTE PTR [ecx+0x8]
64012016:	jmp    0x6401201b
64012018:	mov    ecx,DWORD PTR [ecx+0x8]
6401201b:	cmp    ecx,0xffffffff
6401201e:	mov    DWORD PTR [ebp-0x8],ecx
64012021:	jl     0x64012027
64012023:	cmp    ecx,eax
64012025:	jl     0x6401202c
64012027:	call   0x64012493
6401202c:	mov    esi,DWORD PTR [ebp+0x8]
6401202f:	mov    edi,0xe06d7363
64012034:	cmp    DWORD PTR [esi],edi
64012036:	jne    0x64012307
6401203c:	cmp    DWORD PTR [esi+0x10],0x3
64012040:	mov    ebx,0x19930520
64012045:	jne    0x64012174
6401204b:	mov    eax,DWORD PTR [esi+0x14]
6401204e:	cmp    eax,ebx
64012050:	je     0x64012064
64012052:	cmp    eax,0x19930521
64012057:	je     0x64012064
64012059:	cmp    eax,0x19930522
6401205e:	jne    0x64012174
64012064:	cmp    DWORD PTR [esi+0x1c],0x0
64012068:	jne    0x64012174
6401206e:	call   0x6401146b
64012073:	cmp    DWORD PTR [eax+0x88],0x0
6401207a:	je     0x64012346
64012080:	call   0x6401146b
64012085:	mov    esi,DWORD PTR [eax+0x88]
6401208b:	mov    DWORD PTR [ebp+0x8],esi
6401208e:	call   0x6401146b
64012093:	mov    eax,DWORD PTR [eax+0x8c]
64012099:	push   0x1
6401209b:	push   esi
6401209c:	mov    DWORD PTR [ebp+0x10],eax
6401209f:	call   0x64017a7b
640120a4:	test   eax,eax
640120a6:	pop    ecx
640120a7:	pop    ecx
640120a8:	jne    0x640120af
640120aa:	call   0x64012493
640120af:	cmp    DWORD PTR [esi],edi
640120b1:	jne    0x640120d9
640120b3:	cmp    DWORD PTR [esi+0x10],0x3
640120b7:	jne    0x640120d9
640120b9:	mov    eax,DWORD PTR [esi+0x14]
640120bc:	cmp    eax,ebx
640120be:	je     0x640120ce
640120c0:	cmp    eax,0x19930521
640120c5:	je     0x640120ce
640120c7:	cmp    eax,0x19930522
640120cc:	jne    0x640120d9
640120ce:	cmp    DWORD PTR [esi+0x1c],0x0
640120d2:	jne    0x640120d9
640120d4:	call   0x64012493
640120d9:	call   0x6401146b
640120de:	cmp    DWORD PTR [eax+0x94],0x0
640120e5:	je     0x64012174
640120eb:	call   0x6401146b
640120f0:	mov    edi,DWORD PTR [eax+0x94]
640120f6:	call   0x6401146b
640120fb:	push   DWORD PTR [ebp+0x8]
640120fe:	xor    esi,esi
64012100:	mov    DWORD PTR [eax+0x94],esi
64012106:	call   0x64011a29
6401210b:	test   al,al
6401210d:	pop    ecx
6401210e:	jne    0x6401216c
64012110:	xor    ebx,ebx
64012112:	cmp    DWORD PTR [edi],ebx
64012114:	jle    0x64012133
64012116:	mov    eax,DWORD PTR [edi+0x4]
64012119:	mov    ecx,DWORD PTR [ebx+eax*1+0x4]
6401211d:	push   0x640281cc
64012122:	call   0x6400eb81
64012127:	test   al,al
64012129:	jne    0x64012138
6401212b:	inc    esi
6401212c:	add    ebx,0x10
6401212f:	cmp    esi,DWORD PTR [edi]
64012131:	jl     0x64012116
64012133:	jmp    0x64012447
64012138:	push   0x1
6401213a:	push   DWORD PTR [ebp+0x8]
6401213d:	call   0x640119b0
64012142:	pop    ecx
64012143:	pop    ecx
64012144:	lea    eax,[ebp+0x8]
64012147:	push   eax
64012148:	lea    ecx,[ebp-0x2c]
6401214b:	mov    DWORD PTR [ebp+0x8],0x64021c20
64012152:	call   0x6400ebad
64012157:	push   0x640259f4
6401215c:	lea    eax,[ebp-0x2c]
6401215f:	push   eax
64012160:	mov    DWORD PTR [ebp-0x2c],0x64021c18
64012167:	call   0x6400ef3d
6401216c:	mov    esi,DWORD PTR [ebp+0x8]
6401216f:	mov    edi,0xe06d7363
64012174:	cmp    DWORD PTR [esi],edi
64012176:	jne    0x64012304
6401217c:	cmp    DWORD PTR [esi+0x10],0x3
64012180:	jne    0x64012304
64012186:	mov    eax,DWORD PTR [esi+0x14]
64012189:	cmp    eax,ebx
6401218b:	je     0x6401219f
6401218d:	cmp    eax,0x19930521
64012192:	je     0x6401219f
64012194:	cmp    eax,0x19930522
64012199:	jne    0x64012304
6401219f:	mov    edi,DWORD PTR [ebp+0x18]
640121a2:	cmp    DWORD PTR [edi+0xc],0x0
640121a6:	jbe    0x6401226b
640121ac:	lea    eax,[ebp-0x1c]
640121af:	push   eax
640121b0:	lea    eax,[ebp-0x10]
640121b3:	push   eax
640121b4:	push   DWORD PTR [ebp-0x8]
640121b7:	push   DWORD PTR [ebp+0x20]
640121ba:	push   edi
640121bb:	call   0x6400f1e8
640121c0:	add    esp,0x14
640121c3:	mov    edi,eax
640121c5:	mov    eax,DWORD PTR [ebp-0x10]
640121c8:	cmp    eax,DWORD PTR [ebp-0x1c]
640121cb:	jae    0x64012268
640121d1:	mov    eax,DWORD PTR [ebp-0x8]
640121d4:	cmp    DWORD PTR [edi],eax
640121d6:	jg     0x6401225d
640121dc:	cmp    eax,DWORD PTR [edi+0x4]
640121df:	jg     0x6401225d
640121e1:	mov    eax,DWORD PTR [edi+0x10]
640121e4:	mov    DWORD PTR [ebp-0xc],eax
640121e7:	mov    eax,DWORD PTR [edi+0xc]
640121ea:	test   eax,eax
640121ec:	mov    DWORD PTR [ebp-0x18],eax
640121ef:	jle    0x6401225d
640121f1:	mov    eax,DWORD PTR [esi+0x1c]
640121f4:	mov    eax,DWORD PTR [eax+0xc]
640121f7:	lea    ebx,[eax+0x4]
640121fa:	mov    eax,DWORD PTR [eax]
640121fc:	test   eax,eax
640121fe:	mov    DWORD PTR [ebp-0x14],eax
64012201:	jle    0x64012226
64012203:	push   DWORD PTR [esi+0x1c]
64012206:	mov    eax,DWORD PTR [ebx]
64012208:	push   eax
64012209:	push   DWORD PTR [ebp-0xc]
6401220c:	mov    DWORD PTR [ebp-0x20],eax
6401220f:	call   0x640117ea
64012214:	add    esp,0xc
64012217:	test   eax,eax
64012219:	jne    0x64012235
6401221b:	dec    DWORD PTR [ebp-0x14]
6401221e:	add    ebx,0x4
64012221:	cmp    DWORD PTR [ebp-0x14],eax
64012224:	jg     0x64012203
64012226:	dec    DWORD PTR [ebp-0x18]
64012229:	add    DWORD PTR [ebp-0xc],0x10
6401222d:	cmp    DWORD PTR [ebp-0x18],0x0
64012231:	jg     0x640121f1
64012233:	jmp    0x6401225d
64012235:	push   DWORD PTR [ebp+0x24]
64012238:	mov    ebx,DWORD PTR [ebp-0xc]
6401223b:	push   DWORD PTR [ebp+0x20]
6401223e:	mov    BYTE PTR [ebp-0x1],0x1
64012242:	push   DWORD PTR [ebp-0x20]
64012245:	push   DWORD PTR [ebp+0x18]
64012248:	push   DWORD PTR [ebp+0x14]
6401224b:	push   DWORD PTR [ebp+0x10]
6401224e:	push   esi
6401224f:	mov    esi,DWORD PTR [ebp+0xc]
64012252:	call   0x64011e97
64012257:	mov    esi,DWORD PTR [ebp+0x8]
6401225a:	add    esp,0x1c
6401225d:	inc    DWORD PTR [ebp-0x10]
64012260:	add    edi,0x14
64012263:	jmp    0x640121c5
64012268:	mov    edi,DWORD PTR [ebp+0x18]
6401226b:	cmp    BYTE PTR [ebp+0x1c],0x0
6401226f:	je     0x6401227b
64012271:	push   0x1
64012273:	push   esi
64012274:	call   0x640119b0
64012279:	pop    ecx
6401227a:	pop    ecx
6401227b:	cmp    BYTE PTR [ebp-0x1],0x0
6401227f:	jne    0x64012333
64012285:	mov    eax,DWORD PTR [edi]
64012287:	and    eax,0x1fffffff
6401228c:	cmp    eax,0x19930521
64012291:	jb     0x64012333
64012297:	mov    edi,DWORD PTR [edi+0x1c]
6401229a:	test   edi,edi
6401229c:	je     0x64012333
640122a2:	push   esi
640122a3:	call   0x64011a29
640122a8:	test   al,al
640122aa:	pop    ecx
640122ab:	jne    0x64012333
640122b1:	call   0x6401146b
640122b6:	call   0x6401146b
640122bb:	call   0x6401146b
640122c0:	mov    DWORD PTR [eax+0x88],esi
640122c6:	call   0x6401146b
640122cb:	cmp    DWORD PTR [ebp+0x24],0x0
640122cf:	mov    ecx,DWORD PTR [ebp+0x10]
640122d2:	mov    DWORD PTR [eax+0x8c],ecx
640122d8:	push   esi
640122d9:	jne    0x640122e0
640122db:	push   DWORD PTR [ebp+0xc]
640122de:	jmp    0x640122e3
640122e0:	push   DWORD PTR [ebp+0x24]
640122e3:	call   0x6400efbe
640122e8:	mov    esi,DWORD PTR [ebp+0x18]
640122eb:	push   0xffffffff
640122ed:	push   esi
640122ee:	push   DWORD PTR [ebp+0x14]
640122f1:	push   DWORD PTR [ebp+0xc]
640122f4:	call   0x6401188a
640122f9:	add    esp,0x10
640122fc:	push   DWORD PTR [esi+0x1c]
640122ff:	call   0x64011aa2
64012304:	mov    ebx,DWORD PTR [ebp+0x18]
64012307:	cmp    DWORD PTR [ebx+0xc],0x0
6401230b:	jbe    0x64012333
6401230d:	cmp    BYTE PTR [ebp+0x1c],0x0
64012311:	jne    0x64012133
64012317:	push   DWORD PTR [ebp+0x24]
6401231a:	push   DWORD PTR [ebp+0x20]
6401231d:	push   DWORD PTR [ebp-0x8]
64012320:	push   ebx
64012321:	push   DWORD PTR [ebp+0x14]
64012324:	push   DWORD PTR [ebp+0x10]
64012327:	push   DWORD PTR [ebp+0xc]
6401232a:	push   esi
6401232b:	call   0x64011f03
64012330:	add    esp,0x20
64012333:	call   0x6401146b
64012338:	cmp    DWORD PTR [eax+0x94],0x0
6401233f:	je     0x64012346
64012341:	call   0x64012493
64012346:	pop    edi
64012347:	pop    esi
64012348:	pop    ebx
64012349:	leave  
6401234a:	ret    
6401234b:	push   esi
6401234c:	push   DWORD PTR [esp+0x8]
64012350:	mov    esi,ecx
64012352:	call   0x6400ec13
64012357:	mov    DWORD PTR [esi],0x64021c18
6401235d:	mov    eax,esi
6401235f:	pop    esi
64012360:	ret    0x4
64012363:	push   ebp
64012364:	mov    ebp,esp
64012366:	push   ebx
64012367:	push   esi
64012368:	push   edi
64012369:	call   0x6401146b
6401236e:	cmp    DWORD PTR [eax+0x20c],0x0
64012375:	mov    eax,DWORD PTR [ebp+0x18]
64012378:	mov    ecx,DWORD PTR [ebp+0x8]
6401237b:	mov    edi,0xe06d7363
64012380:	mov    esi,0x1fffffff
64012385:	mov    ebx,0x19930522
6401238a:	jne    0x640123ac
6401238c:	mov    edx,DWORD PTR [ecx]
6401238e:	cmp    edx,edi
64012390:	je     0x640123ac
64012392:	cmp    edx,0x80000026
64012398:	je     0x640123ac
6401239a:	mov    edx,DWORD PTR [eax]
6401239c:	and    edx,esi
6401239e:	cmp    edx,ebx
640123a0:	jb     0x640123ac
640123a2:	test   BYTE PTR [eax+0x20],0x1
640123a6:	jne    0x6401243f
640123ac:	test   BYTE PTR [ecx+0x4],0x66
640123b0:	je     0x640123d5
640123b2:	cmp    DWORD PTR [eax+0x4],0x0
640123b6:	je     0x6401243f
640123bc:	cmp    DWORD PTR [ebp+0x1c],0x0
640123c0:	jne    0x6401243f
640123c2:	push   0xffffffff
640123c4:	push   eax
640123c5:	push   DWORD PTR [ebp+0x14]
640123c8:	push   DWORD PTR [ebp+0xc]
640123cb:	call   0x6401188a
640123d0:	add    esp,0x10
640123d3:	jmp    0x6401243f
640123d5:	cmp    DWORD PTR [eax+0xc],0x0
640123d9:	jne    0x640123ed
640123db:	mov    edx,DWORD PTR [eax]
640123dd:	and    edx,esi
640123df:	cmp    edx,0x19930521
640123e5:	jb     0x6401243f
640123e7:	cmp    DWORD PTR [eax+0x1c],0x0
640123eb:	je     0x6401243f
640123ed:	cmp    DWORD PTR [ecx],edi
640123ef:	jne    0x64012423
640123f1:	cmp    DWORD PTR [ecx+0x10],0x3
640123f5:	jb     0x64012423
640123f7:	cmp    DWORD PTR [ecx+0x14],ebx
640123fa:	jbe    0x64012423
640123fc:	mov    edx,DWORD PTR [ecx+0x1c]
640123ff:	mov    edx,DWORD PTR [edx+0x8]
64012402:	test   edx,edx
64012404:	je     0x64012423
64012406:	movzx  esi,BYTE PTR [ebp+0x24]
6401240a:	push   esi
6401240b:	push   DWORD PTR [ebp+0x20]
6401240e:	push   DWORD PTR [ebp+0x1c]
64012411:	push   eax
64012412:	push   DWORD PTR [ebp+0x14]
64012415:	push   DWORD PTR [ebp+0x10]
64012418:	push   DWORD PTR [ebp+0xc]
6401241b:	push   ecx
6401241c:	call   edx
6401241e:	add    esp,0x20
64012421:	jmp    0x64012442
64012423:	push   DWORD PTR [ebp+0x20]
64012426:	push   DWORD PTR [ebp+0x1c]
64012429:	push   DWORD PTR [ebp+0x24]
6401242c:	push   eax
6401242d:	push   DWORD PTR [ebp+0x14]
64012430:	push   DWORD PTR [ebp+0x10]
64012433:	push   DWORD PTR [ebp+0xc]
64012436:	push   ecx
64012437:	call   0x64011ff5
6401243c:	add    esp,0x20
6401243f:	xor    eax,eax
64012441:	inc    eax
64012442:	pop    edi
64012443:	pop    esi
64012444:	pop    ebx
64012445:	pop    ebp
64012446:	ret    
64012447:	push   0x8
64012449:	push   0x64025a30
6401244e:	call   0x640106f8
64012453:	call   0x6401146b
64012458:	mov    eax,DWORD PTR [eax+0x78]
6401245b:	test   eax,eax
6401245d:	je     0x64012475
6401245f:	and    DWORD PTR [ebp-0x4],0x0
64012463:	call   eax
64012465:	jmp    0x6401246e
64012467:	xor    eax,eax
64012469:	inc    eax
6401246a:	ret    
6401246b:	mov    esp,DWORD PTR [ebp-0x18]
6401246e:	mov    DWORD PTR [ebp-0x4],0xfffffffe
64012475:	call   0x64017a88
6401247a:	call   0x6401073d
6401247f:	ret    
64012480:	call   0x6401146b
64012485:	mov    eax,DWORD PTR [eax+0x7c]
64012488:	test   eax,eax
6401248a:	je     0x6401248e
6401248c:	call   eax
6401248e:	jmp    0x64012447
64012493:	push   0x8
64012495:	push   0x64025a50
6401249a:	call   0x640106f8
6401249f:	push   DWORD PTR ds:0x64029540
640124a5:	call   0x6401124f
640124aa:	pop    ecx
640124ab:	test   eax,eax
640124ad:	je     0x640124c5
640124af:	and    DWORD PTR [ebp-0x4],0x0
640124b3:	call   eax
640124b5:	jmp    0x640124be
640124b7:	xor    eax,eax
640124b9:	inc    eax
640124ba:	ret    
640124bb:	mov    esp,DWORD PTR [ebp-0x18]
640124be:	mov    DWORD PTR [ebp-0x4],0xfffffffe
640124c5:	jmp    0x64012447
640124ca:	push   0x64012447
640124cf:	call   0x640111d8
640124d4:	pop    ecx
640124d5:	mov    ds:0x64029540,eax
640124da:	ret    
640124db:	int3   
640124dc:	int3   
640124dd:	int3   
640124de:	int3   
640124df:	int3   
640124e0:	push   ebp
640124e1:	mov    ebp,esp
640124e3:	sub    esp,0x4
640124e6:	push   ebx
640124e7:	push   ecx
640124e8:	mov    eax,DWORD PTR [ebp+0xc]
640124eb:	add    eax,0xc
640124ee:	mov    DWORD PTR [ebp-0x4],eax
640124f1:	mov    eax,DWORD PTR [ebp+0x8]
640124f4:	push   ebp
640124f5:	push   DWORD PTR [ebp+0x10]
640124f8:	mov    ecx,DWORD PTR [ebp+0x10]
640124fb:	mov    ebp,DWORD PTR [ebp-0x4]
640124fe:	call   0x64017c88
64012503:	push   esi
64012504:	push   edi
64012505:	call   eax
64012507:	pop    edi
64012508:	pop    esi
64012509:	mov    ebx,ebp
6401250b:	pop    ebp
6401250c:	mov    ecx,DWORD PTR [ebp+0x10]
6401250f:	push   ebp
64012510:	mov    ebp,ebx
64012512:	cmp    ecx,0x100
64012518:	jne    0x6401251f
6401251a:	mov    ecx,0x2
6401251f:	push   ecx
64012520:	call   0x64017c88
64012525:	pop    ebp
64012526:	pop    ecx
64012527:	pop    ebx
64012528:	leave  
64012529:	ret    0xc
6401252c:	push   ebp
6401252d:	mov    ebp,esp
6401252f:	sub    esp,0x328
64012535:	mov    ds:0x64029650,eax
6401253a:	mov    DWORD PTR ds:0x6402964c,ecx
64012540:	mov    DWORD PTR ds:0x64029648,edx
64012546:	mov    DWORD PTR ds:0x64029644,ebx
6401254c:	mov    DWORD PTR ds:0x64029640,esi
64012552:	mov    DWORD PTR ds:0x6402963c,edi
64012558:	data16 mov WORD PTR ds:0x64029668,ss
6401255f:	data16 mov WORD PTR ds:0x6402965c,cs
64012566:	data16 mov WORD PTR ds:0x64029638,ds
6401256d:	data16 mov WORD PTR ds:0x64029634,es
64012574:	data16 mov WORD PTR ds:0x64029630,fs
6401257b:	data16 mov WORD PTR ds:0x6402962c,gs
64012582:	pushf  
64012583:	pop    DWORD PTR ds:0x64029660
64012589:	mov    eax,DWORD PTR [ebp+0x0]
6401258c:	mov    ds:0x64029654,eax
64012591:	mov    eax,DWORD PTR [ebp+0x4]
64012594:	mov    ds:0x64029658,eax
64012599:	lea    eax,[ebp+0x8]
6401259c:	mov    ds:0x64029664,eax
640125a1:	mov    eax,DWORD PTR [ebp-0x320]
640125a7:	mov    DWORD PTR ds:0x640295a0,0x10001
640125b1:	mov    eax,ds:0x64029658
640125b6:	mov    ds:0x64029554,eax
640125bb:	mov    DWORD PTR ds:0x64029548,0xc0000409
640125c5:	mov    DWORD PTR ds:0x6402954c,0x1
640125cf:	mov    eax,ds:0x64028038
640125d4:	mov    DWORD PTR [ebp-0x328],eax
640125da:	mov    eax,ds:0x6402803c
640125df:	mov    DWORD PTR [ebp-0x324],eax
640125e5:	call   DWORD PTR ds:0x64021108
640125eb:	mov    ds:0x64029598,eax
640125f0:	push   0x1
640125f2:	call   0x64011164
640125f7:	pop    ecx
640125f8:	push   0x0
640125fa:	call   DWORD PTR ds:0x64021104
64012600:	push   0x64021c30
64012605:	call   DWORD PTR ds:0x64021100
6401260b:	cmp    DWORD PTR ds:0x64029598,0x0
64012612:	jne    0x6401261c
64012614:	push   0x1
64012616:	call   0x64011164
6401261b:	pop    ecx
6401261c:	push   0xc0000409
64012621:	call   DWORD PTR ds:0x64021048
64012627:	push   eax
64012628:	call   DWORD PTR ds:0x640210fc
6401262e:	leave  
6401262f:	ret    
64012630:	push   esi
64012631:	push   edi
64012632:	xor    esi,esi
64012634:	push   DWORD PTR [esp+0xc]
64012638:	call   0x640102c3
6401263d:	mov    edi,eax
6401263f:	test   edi,edi
64012641:	pop    ecx
64012642:	jne    0x6401266b
64012644:	cmp    DWORD PTR ds:0x6402986c,eax
6401264a:	jbe    0x6401266b
6401264c:	push   esi
6401264d:	call   DWORD PTR ds:0x64021050
64012653:	lea    eax,[esi+0x3e8]
64012659:	cmp    eax,DWORD PTR ds:0x6402986c
6401265f:	jbe    0x64012664
64012661:	or     eax,0xffffffff
64012664:	cmp    eax,0xffffffff
64012667:	mov    esi,eax
64012669:	jne    0x64012634
6401266b:	mov    eax,edi
6401266d:	pop    edi
6401266e:	pop    esi
6401266f:	ret    
64012670:	push   esi
64012671:	push   edi
64012672:	xor    esi,esi
64012674:	push   0x0
64012676:	push   DWORD PTR [esp+0x14]
6401267a:	push   DWORD PTR [esp+0x14]
6401267e:	call   0x64017cb3
64012683:	mov    edi,eax
64012685:	add    esp,0xc
64012688:	test   edi,edi
6401268a:	jne    0x640126b3
6401268c:	cmp    DWORD PTR ds:0x6402986c,eax
64012692:	jbe    0x640126b3
64012694:	push   esi
64012695:	call   DWORD PTR ds:0x64021050
6401269b:	lea    eax,[esi+0x3e8]
640126a1:	cmp    eax,DWORD PTR ds:0x6402986c
640126a7:	jbe    0x640126ac
640126a9:	or     eax,0xffffffff
640126ac:	cmp    eax,0xffffffff
640126af:	mov    esi,eax
640126b1:	jne    0x64012674
640126b3:	mov    eax,edi
640126b5:	pop    edi
640126b6:	pop    esi
640126b7:	ret    
640126b8:	push   esi
640126b9:	push   edi
640126ba:	xor    esi,esi
640126bc:	push   DWORD PTR [esp+0x10]
640126c0:	push   DWORD PTR [esp+0x10]
640126c4:	call   0x640108f6
640126c9:	mov    edi,eax
640126cb:	test   edi,edi
640126cd:	pop    ecx
640126ce:	pop    ecx
640126cf:	jne    0x640126fe
640126d1:	cmp    DWORD PTR [esp+0x10],eax
640126d5:	je     0x640126fe
640126d7:	cmp    DWORD PTR ds:0x6402986c,eax
640126dd:	jbe    0x640126fe
640126df:	push   esi
640126e0:	call   DWORD PTR ds:0x64021050
640126e6:	lea    eax,[esi+0x3e8]
640126ec:	cmp    eax,DWORD PTR ds:0x6402986c
640126f2:	jbe    0x640126f7
640126f4:	or     eax,0xffffffff
640126f7:	cmp    eax,0xffffffff
640126fa:	mov    esi,eax
640126fc:	jne    0x640126bc
640126fe:	mov    eax,edi
64012700:	pop    edi
64012701:	pop    esi
64012702:	ret    
64012703:	push   0x10
64012705:	push   0x64025a70
6401270a:	call   0x640106f8
6401270f:	xor    eax,eax
64012711:	mov    ebx,DWORD PTR [ebp+0x8]
64012714:	xor    edi,edi
64012716:	cmp    ebx,edi
64012718:	setne  al
6401271b:	cmp    eax,edi
6401271d:	jne    0x6401273c
6401271f:	call   0x64011120
64012724:	mov    DWORD PTR [eax],0x16
6401272a:	push   edi
6401272b:	push   edi
6401272c:	push   edi
6401272d:	push   edi
6401272e:	push   edi
6401272f:	call   0x6400ee86
64012734:	add    esp,0x14
64012737:	or     eax,0xffffffff
6401273a:	jmp    0x6401278f
6401273c:	cmp    DWORD PTR ds:0x6402d45c,0x3
64012743:	jne    0x6401277d
64012745:	push   0x4
64012747:	call   0x6401696a
6401274c:	pop    ecx
6401274d:	mov    DWORD PTR [ebp-0x4],edi
64012750:	push   ebx
64012751:	call   0x640169e3
64012756:	pop    ecx
64012757:	mov    DWORD PTR [ebp-0x20],eax
6401275a:	cmp    eax,edi
6401275c:	je     0x64012769
6401275e:	mov    esi,DWORD PTR [ebx-0x4]
64012761:	sub    esi,0x9
64012764:	mov    DWORD PTR [ebp-0x1c],esi
64012767:	jmp    0x6401276c
64012769:	mov    esi,DWORD PTR [ebp-0x1c]
6401276c:	mov    DWORD PTR [ebp-0x4],0xfffffffe
64012773:	call   0x6401279d
64012778:	cmp    DWORD PTR [ebp-0x20],edi
6401277b:	jne    0x6401278d
6401277d:	push   ebx
6401277e:	push   edi
6401277f:	push   DWORD PTR ds:0x64029a0c
64012785:	call   DWORD PTR ds:0x640210f4
6401278b:	mov    esi,eax
6401278d:	mov    eax,esi
6401278f:	call   0x6401073d
64012794:	ret    
64012795:	xor    edi,edi
64012797:	mov    ebx,DWORD PTR [ebp+0x8]
6401279a:	mov    esi,DWORD PTR [ebp-0x1c]
6401279d:	push   0x4
6401279f:	call   0x64016892
640127a4:	pop    ecx
640127a5:	ret    
640127a6:	call   0x6401763a
640127ab:	push   DWORD PTR [esp+0x4]
640127af:	call   0x6401749a
640127b4:	push   DWORD PTR ds:0x640281f0
640127ba:	call   0x6401124f
640127bf:	push   0xff
640127c4:	call   eax
640127c6:	add    esp,0xc
640127c9:	ret    
640127ca:	push   0x64021c48
640127cf:	call   DWORD PTR ds:0x64021118
640127d5:	test   eax,eax
640127d7:	je     0x640127ef
640127d9:	push   0x64021c38
640127de:	push   eax
640127df:	call   DWORD PTR ds:0x64021014
640127e5:	test   eax,eax
640127e7:	je     0x640127ef
640127e9:	push   DWORD PTR [esp+0x4]
640127ed:	call   eax
640127ef:	ret    
640127f0:	push   DWORD PTR [esp+0x4]
640127f4:	call   0x640127ca
640127f9:	pop    ecx
640127fa:	push   DWORD PTR [esp+0x4]
640127fe:	call   DWORD PTR ds:0x6402112c
64012804:	int3   
64012805:	push   0x8
64012807:	call   0x6401696a
6401280c:	pop    ecx
6401280d:	ret    
6401280e:	push   0x8
64012810:	call   0x64016892
64012815:	pop    ecx
64012816:	ret    
64012817:	push   esi
64012818:	mov    esi,eax
6401281a:	jmp    0x64012827
6401281c:	mov    eax,DWORD PTR [esi]
6401281e:	test   eax,eax
64012820:	je     0x64012824
64012822:	call   eax
64012824:	add    esi,0x4
64012827:	cmp    esi,DWORD PTR [esp+0x8]
6401282b:	jb     0x6401281c
6401282d:	pop    esi
6401282e:	ret    
6401282f:	push   esi
64012830:	mov    esi,DWORD PTR [esp+0x8]
64012834:	xor    eax,eax
64012836:	jmp    0x64012847
64012838:	test   eax,eax
6401283a:	jne    0x6401284d
6401283c:	mov    ecx,DWORD PTR [esi]
6401283e:	test   ecx,ecx
64012840:	je     0x64012844
64012842:	call   ecx
64012844:	add    esi,0x4
64012847:	cmp    esi,DWORD PTR [esp+0xc]
6401284b:	jb     0x64012838
6401284d:	pop    esi
6401284e:	ret    
6401284f:	mov    ecx,DWORD PTR [esp+0x4]
64012853:	push   esi
64012854:	xor    esi,esi
64012856:	cmp    ecx,esi
64012858:	jne    0x64012877
6401285a:	call   0x64011120
6401285f:	push   esi
64012860:	push   esi
64012861:	push   esi
64012862:	push   esi
64012863:	push   esi
64012864:	mov    DWORD PTR [eax],0x16
6401286a:	call   0x6400ee86
6401286f:	add    esp,0x14
64012872:	push   0x16
64012874:	pop    eax
64012875:	pop    esi
64012876:	ret    
64012877:	mov    eax,ds:0x64029874
6401287c:	cmp    eax,esi
6401287e:	je     0x6401285a
64012880:	mov    DWORD PTR [ecx],eax
64012882:	xor    eax,eax
64012884:	pop    esi
64012885:	ret    
64012886:	mov    eax,DWORD PTR [esp+0x4]
6401288a:	push   esi
6401288b:	xor    esi,esi
6401288d:	cmp    eax,esi
6401288f:	jne    0x640128ae
64012891:	call   0x64011120
64012896:	push   esi
64012897:	push   esi
64012898:	push   esi
64012899:	push   esi
6401289a:	push   esi
6401289b:	mov    DWORD PTR [eax],0x16
640128a1:	call   0x6400ee86
640128a6:	add    esp,0x14
640128a9:	push   0x16
640128ab:	pop    eax
640128ac:	pop    esi
640128ad:	ret    
640128ae:	cmp    DWORD PTR ds:0x64029874,esi
640128b4:	je     0x64012891
640128b6:	mov    ecx,DWORD PTR ds:0x64029880
640128bc:	mov    DWORD PTR [eax],ecx
640128be:	xor    eax,eax
640128c0:	pop    esi
640128c1:	ret    
640128c2:	cmp    DWORD PTR ds:0x640234bc,0x0
640128c9:	je     0x640128e5
640128cb:	push   0x640234bc
640128d0:	call   0x640179c0
640128d5:	test   eax,eax
640128d7:	pop    ecx
640128d8:	je     0x640128e5
640128da:	push   DWORD PTR [esp+0x4]
640128de:	call   DWORD PTR ds:0x640234bc
640128e4:	pop    ecx
640128e5:	call   0x64017dd1
640128ea:	push   0x640212b4
640128ef:	push   0x6402129c
640128f4:	call   0x6401282f
640128f9:	test   eax,eax
640128fb:	pop    ecx
640128fc:	pop    ecx
640128fd:	jne    0x64012953
640128ff:	push   esi
64012900:	push   edi
64012901:	push   0x640153a0
64012906:	call   0x6400f481
6401290b:	mov    esi,0x640211dc
64012910:	mov    eax,esi
64012912:	mov    edi,0x64021298
64012917:	cmp    eax,edi
64012919:	pop    ecx
6401291a:	jae    0x6401292b
6401291c:	mov    eax,DWORD PTR [esi]
6401291e:	test   eax,eax
64012920:	je     0x64012924
64012922:	call   eax
64012924:	add    esi,0x4
64012927:	cmp    esi,edi
64012929:	jb     0x6401291c
6401292b:	cmp    DWORD PTR ds:0x6402d598,0x0
64012932:	pop    edi
64012933:	pop    esi
64012934:	je     0x64012951
64012936:	push   0x6402d598
6401293b:	call   0x640179c0
64012940:	test   eax,eax
64012942:	pop    ecx
64012943:	je     0x64012951
64012945:	push   0x0
64012947:	push   0x2
64012949:	push   0x0
6401294b:	call   DWORD PTR ds:0x6402d598
64012951:	xor    eax,eax
64012953:	ret    
64012954:	push   0x10
64012956:	push   0x64025a90
6401295b:	call   0x640106f8
64012960:	push   0x8
64012962:	call   0x6401696a
64012967:	pop    ecx
64012968:	xor    edi,edi
6401296a:	mov    DWORD PTR [ebp-0x4],edi
6401296d:	xor    ebx,ebx
6401296f:	inc    ebx
64012970:	cmp    DWORD PTR ds:0x640298b4,ebx
64012976:	je     0x640129f6
64012978:	mov    DWORD PTR ds:0x640298b0,ebx
6401297e:	mov    al,BYTE PTR [ebp+0x10]
64012981:	mov    ds:0x640298ac,al
64012986:	cmp    DWORD PTR [ebp+0xc],edi
64012989:	jne    0x640129e6
6401298b:	push   DWORD PTR ds:0x6402d590
64012991:	call   0x6401124f
64012996:	mov    DWORD PTR [ebp-0x1c],eax
64012999:	push   DWORD PTR ds:0x6402d58c
6401299f:	call   0x6401124f
640129a4:	pop    ecx
640129a5:	pop    ecx
640129a6:	mov    esi,eax
640129a8:	mov    DWORD PTR [ebp-0x20],esi
640129ab:	cmp    DWORD PTR [ebp-0x1c],edi
640129ae:	je     0x640129d6
640129b0:	sub    esi,0x4
640129b3:	mov    DWORD PTR [ebp-0x20],esi
640129b6:	cmp    esi,DWORD PTR [ebp-0x1c]
640129b9:	jb     0x640129d6
640129bb:	cmp    DWORD PTR [esi],0x0
640129be:	je     0x640129b0
640129c0:	mov    edi,DWORD PTR [esi]
640129c2:	call   0x64011246
640129c7:	cmp    edi,eax
640129c9:	je     0x640129b0
640129cb:	push   edi
640129cc:	call   0x6401124f
640129d1:	pop    ecx
640129d2:	call   eax
640129d4:	jmp    0x640129b0
640129d6:	push   0x640212c4
640129db:	mov    eax,0x640212b8
640129e0:	call   0x64012817
640129e5:	pop    ecx
640129e6:	push   0x640212cc
640129eb:	mov    eax,0x640212c8
640129f0:	call   0x64012817
640129f5:	pop    ecx
640129f6:	mov    DWORD PTR [ebp-0x4],0xfffffffe
640129fd:	call   0x64012a21
64012a02:	cmp    DWORD PTR [ebp+0x10],0x0
64012a06:	jne    0x64012a30
64012a08:	mov    DWORD PTR ds:0x640298b4,ebx
64012a0e:	push   0x8
64012a10:	call   0x64016892
64012a15:	pop    ecx
64012a16:	push   DWORD PTR [ebp+0x8]
64012a19:	call   0x640127f0
64012a1e:	xor    ebx,ebx
64012a20:	inc    ebx
64012a21:	cmp    DWORD PTR [ebp+0x10],0x0
64012a25:	je     0x64012a2f
64012a27:	push   0x8
64012a29:	call   0x64016892
64012a2e:	pop    ecx
64012a2f:	ret    
64012a30:	call   0x6401073d
64012a35:	ret    
64012a36:	push   0x0
64012a38:	push   0x1
64012a3a:	push   DWORD PTR [esp+0xc]
64012a3e:	call   0x64012954
64012a43:	add    esp,0xc
64012a46:	ret    
64012a47:	push   0x1
64012a49:	push   0x0
64012a4b:	push   0x0
64012a4d:	call   0x64012954
64012a52:	add    esp,0xc
64012a55:	ret    
64012a56:	push   esi
64012a57:	call   0x64011246
64012a5c:	mov    esi,eax
64012a5e:	push   esi
64012a5f:	call   0x64011791
64012a64:	push   esi
64012a65:	call   0x6401800f
64012a6a:	push   esi
64012a6b:	call   0x6400ed80
64012a70:	push   esi
64012a71:	call   0x64018005
64012a76:	push   esi
64012a77:	call   0x64017ffb
64012a7c:	push   esi
64012a7d:	call   0x64017df0
64012a82:	push   esi
64012a83:	call   0x6401b5a2
64012a88:	push   esi
64012a89:	call   0x640124ca
64012a8e:	push   0x64012a36
64012a93:	call   0x640111d8
64012a98:	add    esp,0x24
64012a9b:	mov    ds:0x640281f0,eax
64012aa0:	pop    esi
64012aa1:	ret    
64012aa2:	sub    eax,0x3a4
64012aa7:	je     0x64012acb
64012aa9:	sub    eax,0x4
64012aac:	je     0x64012ac5
64012aae:	sub    eax,0xd
64012ab1:	je     0x64012abf
64012ab3:	dec    eax
64012ab4:	je     0x64012ab9
64012ab6:	xor    eax,eax
64012ab8:	ret    
64012ab9:	mov    eax,0x404
64012abe:	ret    
64012abf:	mov    eax,0x412
64012ac4:	ret    
64012ac5:	mov    eax,0x804
64012aca:	ret    
64012acb:	mov    eax,0x411
64012ad0:	ret    
64012ad1:	push   ebx
64012ad2:	push   ebp
64012ad3:	push   esi
64012ad4:	push   edi
64012ad5:	mov    ebp,0x101
64012ada:	mov    esi,eax
64012adc:	push   ebp
64012add:	xor    edi,edi
64012adf:	lea    ebx,[esi+0x1c]
64012ae2:	push   edi
64012ae3:	push   ebx
64012ae4:	call   0x6400fa50
64012ae9:	mov    DWORD PTR [esi+0x4],edi
64012aec:	mov    DWORD PTR [esi+0x8],edi
64012aef:	mov    DWORD PTR [esi+0xc],edi
64012af2:	xor    eax,eax
64012af4:	lea    edi,[esi+0x10]
64012af7:	stos   DWORD PTR es:[edi],eax
64012af8:	stos   DWORD PTR es:[edi],eax
64012af9:	stos   DWORD PTR es:[edi],eax
64012afa:	mov    eax,0x640281f8
64012aff:	add    esp,0xc
64012b02:	sub    eax,esi
64012b04:	mov    cl,BYTE PTR [eax+ebx*1]
64012b07:	mov    BYTE PTR [ebx],cl
64012b09:	inc    ebx
64012b0a:	dec    ebp
64012b0b:	jne    0x64012b04
64012b0d:	lea    ecx,[esi+0x11d]
64012b13:	mov    esi,0x100
64012b18:	mov    dl,BYTE PTR [ecx+eax*1]
64012b1b:	mov    BYTE PTR [ecx],dl
64012b1d:	inc    ecx
64012b1e:	dec    esi
64012b1f:	jne    0x64012b18
64012b21:	pop    edi
64012b22:	pop    esi
64012b23:	pop    ebp
64012b24:	pop    ebx
64012b25:	ret    
64012b26:	push   ebp
64012b27:	lea    ebp,[esp-0x49c]
64012b2e:	sub    esp,0x51c
64012b34:	mov    eax,ds:0x64028038
64012b39:	xor    eax,ebp
64012b3b:	mov    DWORD PTR [ebp+0x498],eax
64012b41:	push   ebx
64012b42:	push   edi
64012b43:	lea    eax,[ebp-0x7c]
64012b46:	push   eax
64012b47:	push   DWORD PTR [esi+0x4]
64012b4a:	call   DWORD PTR ds:0x64021130
64012b50:	test   eax,eax
64012b52:	mov    edi,0x100
64012b57:	je     0x64012c4c
64012b5d:	xor    eax,eax
64012b5f:	mov    BYTE PTR [ebp+eax*1+0x398],al
64012b66:	inc    eax
64012b67:	cmp    eax,edi
64012b69:	jb     0x64012b5f
64012b6b:	mov    al,BYTE PTR [ebp-0x76]
64012b6e:	test   al,al
64012b70:	mov    BYTE PTR [ebp+0x398],0x20
64012b77:	je     0x64012ba4
64012b79:	lea    ebx,[ebp-0x75]
64012b7c:	movzx  ecx,al
64012b7f:	movzx  eax,BYTE PTR [ebx]
64012b82:	cmp    ecx,eax
64012b84:	ja     0x64012b9c
64012b86:	sub    eax,ecx
64012b88:	inc    eax
64012b89:	push   eax
64012b8a:	lea    edx,[ebp+ecx*1+0x398]
64012b91:	push   0x20
64012b93:	push   edx
64012b94:	call   0x6400fa50
64012b99:	add    esp,0xc
64012b9c:	inc    ebx
64012b9d:	mov    al,BYTE PTR [ebx]
64012b9f:	inc    ebx
64012ba0:	test   al,al
64012ba2:	jne    0x64012b7c
64012ba4:	push   0x0
64012ba6:	push   DWORD PTR [esi+0xc]
64012ba9:	lea    eax,[ebp-0x68]
64012bac:	push   DWORD PTR [esi+0x4]
64012baf:	push   eax
64012bb0:	push   edi
64012bb1:	lea    eax,[ebp+0x398]
64012bb7:	push   eax
64012bb8:	push   0x1
64012bba:	push   0x0
64012bbc:	call   0x640182a6
64012bc1:	xor    ebx,ebx
64012bc3:	push   ebx
64012bc4:	push   DWORD PTR [esi+0x4]
64012bc7:	lea    eax,[ebp+0x298]
64012bcd:	push   edi
64012bce:	push   eax
64012bcf:	push   edi
64012bd0:	lea    eax,[ebp+0x398]
64012bd6:	push   eax
64012bd7:	push   edi
64012bd8:	push   DWORD PTR [esi+0xc]
64012bdb:	push   ebx
64012bdc:	call   0x6401676d
64012be1:	add    esp,0x44
64012be4:	push   ebx
64012be5:	push   DWORD PTR [esi+0x4]
64012be8:	lea    eax,[ebp+0x198]
64012bee:	push   edi
64012bef:	push   eax
64012bf0:	push   edi
64012bf1:	lea    eax,[ebp+0x398]
64012bf7:	push   eax
64012bf8:	push   0x200
64012bfd:	push   DWORD PTR [esi+0xc]
64012c00:	push   ebx
64012c01:	call   0x6401676d
64012c06:	add    esp,0x24
64012c09:	xor    eax,eax
64012c0b:	movzx  ecx,WORD PTR [ebp+eax*2-0x68]
64012c10:	test   cl,0x1
64012c13:	je     0x64012c23
64012c15:	or     BYTE PTR [esi+eax*1+0x1d],0x10
64012c1a:	mov    cl,BYTE PTR [ebp+eax*1+0x298]
64012c21:	jmp    0x64012c34
64012c23:	test   cl,0x2
64012c26:	je     0x64012c3d
64012c28:	or     BYTE PTR [esi+eax*1+0x1d],0x20
64012c2d:	mov    cl,BYTE PTR [ebp+eax*1+0x198]
64012c34:	mov    BYTE PTR [esi+eax*1+0x11d],cl
64012c3b:	jmp    0x64012c45
64012c3d:	mov    BYTE PTR [esi+eax*1+0x11d],0x0
64012c45:	inc    eax
64012c46:	cmp    eax,edi
64012c48:	jb     0x64012c0b
64012c4a:	jmp    0x64012c99
64012c4c:	lea    eax,[esi+0x11d]
64012c52:	mov    DWORD PTR [ebp-0x80],0xffffff9f
64012c59:	xor    ecx,ecx
64012c5b:	sub    DWORD PTR [ebp-0x80],eax
64012c5e:	mov    edx,DWORD PTR [ebp-0x80]
64012c61:	lea    eax,[esi+ecx*1+0x11d]
64012c68:	add    edx,eax
64012c6a:	lea    ebx,[edx+0x20]
64012c6d:	cmp    ebx,0x19
64012c70:	ja     0x64012c7e
64012c72:	or     BYTE PTR [esi+ecx*1+0x1d],0x10
64012c77:	mov    dl,cl
64012c79:	add    dl,0x20
64012c7c:	jmp    0x64012c8d
64012c7e:	cmp    edx,0x19
64012c81:	ja     0x64012c91
64012c83:	or     BYTE PTR [esi+ecx*1+0x1d],0x20
64012c88:	mov    dl,cl
64012c8a:	sub    dl,0x20
64012c8d:	mov    BYTE PTR [eax],dl
64012c8f:	jmp    0x64012c94
64012c91:	mov    BYTE PTR [eax],0x0
64012c94:	inc    ecx
64012c95:	cmp    ecx,edi
64012c97:	jb     0x64012c5e
64012c99:	mov    ecx,DWORD PTR [ebp+0x498]
64012c9f:	pop    edi
64012ca0:	xor    ecx,ebp
64012ca2:	pop    ebx
64012ca3:	call   0x6400f34e
64012ca8:	add    ebp,0x49c
64012cae:	leave  
64012caf:	ret    
64012cb0:	push   0xc
64012cb2:	push   0x64025ab0
64012cb7:	call   0x640106f8
64012cbc:	call   0x6401146b
64012cc1:	mov    edi,eax
64012cc3:	mov    eax,ds:0x6402871c
64012cc8:	test   DWORD PTR [edi+0x70],eax
64012ccb:	je     0x64012cea
64012ccd:	cmp    DWORD PTR [edi+0x6c],0x0
64012cd1:	je     0x64012cea
64012cd3:	mov    esi,DWORD PTR [edi+0x68]
64012cd6:	test   esi,esi
64012cd8:	jne    0x64012ce2
64012cda:	push   0x20
64012cdc:	call   0x640127a6
64012ce1:	pop    ecx
64012ce2:	mov    eax,esi
64012ce4:	call   0x6401073d
64012ce9:	ret    
64012cea:	push   0xd
64012cec:	call   0x6401696a
64012cf1:	pop    ecx
64012cf2:	and    DWORD PTR [ebp-0x4],0x0
64012cf6:	mov    esi,DWORD PTR [edi+0x68]
64012cf9:	mov    DWORD PTR [ebp-0x1c],esi
64012cfc:	cmp    esi,DWORD PTR ds:0x64028620
64012d02:	je     0x64012d3a
64012d04:	test   esi,esi
64012d06:	je     0x64012d22
64012d08:	push   esi
64012d09:	call   DWORD PTR ds:0x64021058
64012d0f:	test   eax,eax
64012d11:	jne    0x64012d22
64012d13:	cmp    esi,0x640281f8
64012d19:	je     0x64012d22
64012d1b:	push   esi
64012d1c:	call   0x640101e6
64012d21:	pop    ecx
64012d22:	mov    eax,ds:0x64028620
64012d27:	mov    DWORD PTR [edi+0x68],eax
64012d2a:	mov    esi,DWORD PTR ds:0x64028620
64012d30:	mov    DWORD PTR [ebp-0x1c],esi
64012d33:	push   esi
64012d34:	call   DWORD PTR ds:0x64021020
64012d3a:	mov    DWORD PTR [ebp-0x4],0xfffffffe
64012d41:	call   0x64012d4b
64012d46:	jmp    0x64012cd6
64012d48:	mov    esi,DWORD PTR [ebp-0x1c]
64012d4b:	push   0xd
64012d4d:	call   0x64016892
64012d52:	pop    ecx
64012d53:	ret    
64012d54:	push   ebp
64012d55:	mov    ebp,esp
64012d57:	sub    esp,0x10
64012d5a:	push   ebx
64012d5b:	xor    ebx,ebx
64012d5d:	push   ebx
64012d5e:	lea    ecx,[ebp-0x10]
64012d61:	call   0x6400f4f1
64012d66:	cmp    esi,0xfffffffe
64012d69:	mov    DWORD PTR ds:0x640298b8,ebx
64012d6f:	jne    0x64012d8f
64012d71:	mov    DWORD PTR ds:0x640298b8,0x1
64012d7b:	call   DWORD PTR ds:0x64021134
64012d81:	cmp    BYTE PTR [ebp-0x4],bl
64012d84:	je     0x64012dcb
64012d86:	mov    ecx,DWORD PTR [ebp-0x8]
64012d89:	and    DWORD PTR [ecx+0x70],0xfffffffd
64012d8d:	jmp    0x64012dcb
64012d8f:	cmp    esi,0xfffffffd
64012d92:	jne    0x64012da6
64012d94:	mov    DWORD PTR ds:0x640298b8,0x1
64012d9e:	call   DWORD PTR ds:0x640210d0
64012da4:	jmp    0x64012d81
64012da6:	cmp    esi,0xfffffffc
64012da9:	jne    0x64012dbd
64012dab:	mov    eax,DWORD PTR [ebp-0x10]
64012dae:	mov    eax,DWORD PTR [eax+0x4]
64012db1:	mov    DWORD PTR ds:0x640298b8,0x1
64012dbb:	jmp    0x64012d81
64012dbd:	cmp    BYTE PTR [ebp-0x4],bl
64012dc0:	je     0x64012dc9
64012dc2:	mov    eax,DWORD PTR [ebp-0x8]
64012dc5:	and    DWORD PTR [eax+0x70],0xfffffffd
64012dc9:	mov    eax,esi
64012dcb:	pop    ebx
64012dcc:	leave  
64012dcd:	ret    
64012dce:	push   ebp
64012dcf:	mov    ebp,esp
64012dd1:	sub    esp,0x20
64012dd4:	mov    eax,ds:0x64028038
64012dd9:	xor    eax,ebp
64012ddb:	mov    DWORD PTR [ebp-0x4],eax
64012dde:	push   ebx
64012ddf:	mov    ebx,DWORD PTR [ebp+0xc]
64012de2:	push   esi
64012de3:	mov    esi,DWORD PTR [ebp+0x8]
64012de6:	push   edi
64012de7:	call   0x64012d54
64012dec:	mov    edi,eax
64012dee:	xor    esi,esi
64012df0:	cmp    edi,esi
64012df2:	mov    DWORD PTR [ebp+0x8],edi
64012df5:	jne    0x64012e05
64012df7:	mov    eax,ebx
64012df9:	call   0x64012ad1
64012dfe:	xor    eax,eax
64012e00:	jmp    0x64012f98
64012e05:	mov    DWORD PTR [ebp-0x1c],esi
64012e08:	xor    eax,eax
64012e0a:	cmp    DWORD PTR [eax+0x64028628],edi
64012e10:	je     0x64012ea7
64012e16:	inc    DWORD PTR [ebp-0x1c]
64012e19:	add    eax,0x30
64012e1c:	cmp    eax,0xf0
64012e21:	jb     0x64012e0a
64012e23:	cmp    edi,0xfde8
64012e29:	je     0x64012f95
64012e2f:	cmp    edi,0xfde9
64012e35:	je     0x64012f95
64012e3b:	movzx  eax,di
64012e3e:	push   eax
64012e3f:	call   DWORD PTR ds:0x64021138
64012e45:	test   eax,eax
64012e47:	je     0x64012f95
64012e4d:	lea    eax,[ebp-0x18]
64012e50:	push   eax
64012e51:	push   edi
64012e52:	call   DWORD PTR ds:0x64021130
64012e58:	test   eax,eax
64012e5a:	je     0x64012f89
64012e60:	push   0x101
64012e65:	lea    eax,[ebx+0x1c]
64012e68:	push   esi
64012e69:	push   eax
64012e6a:	call   0x6400fa50
64012e6f:	xor    edx,edx
64012e71:	inc    edx
64012e72:	add    esp,0xc
64012e75:	cmp    DWORD PTR [ebp-0x18],edx
64012e78:	mov    DWORD PTR [ebx+0x4],edi
64012e7b:	mov    DWORD PTR [ebx+0xc],esi
64012e7e:	jbe    0x64012f7c
64012e84:	cmp    BYTE PTR [ebp-0x12],0x0
64012e88:	je     0x64012f5d
64012e8e:	lea    esi,[ebp-0x11]
64012e91:	mov    cl,BYTE PTR [esi]
64012e93:	test   cl,cl
64012e95:	je     0x64012f5d
64012e9b:	movzx  eax,BYTE PTR [esi-0x1]
64012e9f:	movzx  ecx,cl
64012ea2:	jmp    0x64012f4d
64012ea7:	push   0x101
64012eac:	lea    eax,[ebx+0x1c]
64012eaf:	push   esi
64012eb0:	push   eax
64012eb1:	call   0x6400fa50
64012eb6:	mov    ecx,DWORD PTR [ebp-0x1c]
64012eb9:	add    esp,0xc
64012ebc:	imul   ecx,ecx,0x30
64012ebf:	mov    DWORD PTR [ebp-0x20],esi
64012ec2:	lea    esi,[ecx+0x64028638]
64012ec8:	mov    DWORD PTR [ebp-0x1c],esi
64012ecb:	jmp    0x64012ef7
64012ecd:	mov    al,BYTE PTR [esi+0x1]
64012ed0:	test   al,al
64012ed2:	je     0x64012efc
64012ed4:	movzx  edi,BYTE PTR [esi]
64012ed7:	movzx  eax,al
64012eda:	jmp    0x64012eee
64012edc:	mov    eax,DWORD PTR [ebp-0x20]
64012edf:	mov    al,BYTE PTR [eax+0x64028624]
64012ee5:	or     BYTE PTR [ebx+edi*1+0x1d],al
64012ee9:	movzx  eax,BYTE PTR [esi+0x1]
64012eed:	inc    edi
64012eee:	cmp    edi,eax
64012ef0:	jbe    0x64012edc
64012ef2:	mov    edi,DWORD PTR [ebp+0x8]
64012ef5:	inc    esi
64012ef6:	inc    esi
64012ef7:	cmp    BYTE PTR [esi],0x0
64012efa:	jne    0x64012ecd
64012efc:	mov    esi,DWORD PTR [ebp-0x1c]
64012eff:	inc    DWORD PTR [ebp-0x20]
64012f02:	add    esi,0x8
64012f05:	cmp    DWORD PTR [ebp-0x20],0x4
64012f09:	mov    DWORD PTR [ebp-0x1c],esi
64012f0c:	jb     0x64012ef7
64012f0e:	mov    eax,edi
64012f10:	mov    DWORD PTR [ebx+0x4],edi
64012f13:	mov    DWORD PTR [ebx+0x8],0x1
64012f1a:	call   0x64012aa2
64012f1f:	push   0x6
64012f21:	mov    DWORD PTR [ebx+0xc],eax
64012f24:	lea    eax,[ebx+0x10]
64012f27:	lea    ecx,[ecx+0x6402862c]
64012f2d:	pop    edx
64012f2e:	mov    si,WORD PTR [ecx]
64012f31:	inc    ecx
64012f32:	mov    WORD PTR [eax],si
64012f35:	inc    ecx
64012f36:	inc    eax
64012f37:	inc    eax
64012f38:	dec    edx
64012f39:	jne    0x64012f2e
64012f3b:	mov    esi,ebx
64012f3d:	call   0x64012b26
64012f42:	jmp    0x64012dfe
64012f47:	or     BYTE PTR [ebx+eax*1+0x1d],0x4
64012f4c:	inc    eax
64012f4d:	cmp    eax,ecx
64012f4f:	jbe    0x64012f47
64012f51:	inc    esi
64012f52:	inc    esi
64012f53:	cmp    BYTE PTR [esi-0x1],0x0
64012f57:	jne    0x64012e91
64012f5d:	lea    eax,[ebx+0x1e]
64012f60:	mov    ecx,0xfe
64012f65:	or     BYTE PTR [eax],0x8
64012f68:	inc    eax
64012f69:	dec    ecx
64012f6a:	jne    0x64012f65
64012f6c:	mov    eax,DWORD PTR [ebx+0x4]
64012f6f:	call   0x64012aa2
64012f74:	mov    DWORD PTR [ebx+0xc],eax
64012f77:	mov    DWORD PTR [ebx+0x8],edx
64012f7a:	jmp    0x64012f7f
64012f7c:	mov    DWORD PTR [ebx+0x8],esi
64012f7f:	xor    eax,eax
64012f81:	lea    edi,[ebx+0x10]
64012f84:	stos   DWORD PTR es:[edi],eax
64012f85:	stos   DWORD PTR es:[edi],eax
64012f86:	stos   DWORD PTR es:[edi],eax
64012f87:	jmp    0x64012f3b
64012f89:	cmp    DWORD PTR ds:0x640298b8,esi
64012f8f:	jne    0x64012df7
64012f95:	or     eax,0xffffffff
64012f98:	mov    ecx,DWORD PTR [ebp-0x4]
64012f9b:	pop    edi
64012f9c:	pop    esi
64012f9d:	xor    ecx,ebp
64012f9f:	pop    ebx
64012fa0:	call   0x6400f34e
64012fa5:	leave  
64012fa6:	ret    
64012fa7:	push   0x14
64012fa9:	push   0x64025ad0
64012fae:	call   0x640106f8
64012fb3:	or     DWORD PTR [ebp-0x20],0xffffffff
64012fb7:	call   0x6401146b
64012fbc:	mov    edi,eax
64012fbe:	mov    DWORD PTR [ebp-0x24],edi
64012fc1:	call   0x64012cb0
64012fc6:	mov    ebx,DWORD PTR [edi+0x68]
64012fc9:	mov    esi,DWORD PTR [ebp+0x8]
64012fcc:	call   0x64012d54
64012fd1:	mov    DWORD PTR [ebp+0x8],eax
64012fd4:	cmp    eax,DWORD PTR [ebx+0x4]
64012fd7:	je     0x64013134
64012fdd:	push   0x220
64012fe2:	call   0x64012630
64012fe7:	pop    ecx
64012fe8:	mov    ebx,eax
64012fea:	test   ebx,ebx
64012fec:	je     0x64013138
64012ff2:	mov    ecx,0x88
64012ff7:	mov    esi,DWORD PTR [edi+0x68]
64012ffa:	mov    edi,ebx
64012ffc:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
64012ffe:	and    DWORD PTR [ebx],0x0
64013001:	push   ebx
64013002:	push   DWORD PTR [ebp+0x8]
64013005:	call   0x64012dce
6401300a:	pop    ecx
6401300b:	pop    ecx
6401300c:	mov    DWORD PTR [ebp-0x20],eax
6401300f:	test   eax,eax
64013011:	jne    0x64013113
64013017:	mov    esi,DWORD PTR [ebp-0x24]
6401301a:	push   DWORD PTR [esi+0x68]
6401301d:	call   DWORD PTR ds:0x64021058
64013023:	test   eax,eax
64013025:	jne    0x64013038
64013027:	mov    eax,DWORD PTR [esi+0x68]
6401302a:	cmp    eax,0x640281f8
6401302f:	je     0x64013038
64013031:	push   eax
64013032:	call   0x640101e6
64013037:	pop    ecx
64013038:	mov    DWORD PTR [esi+0x68],ebx
6401303b:	push   ebx
6401303c:	mov    edi,DWORD PTR ds:0x64021020
64013042:	call   edi
64013044:	test   BYTE PTR [esi+0x70],0x2
64013048:	jne    0x64013138
6401304e:	test   BYTE PTR ds:0x6402871c,0x1
64013055:	jne    0x64013138
6401305b:	push   0xd
6401305d:	call   0x6401696a
64013062:	pop    ecx
64013063:	and    DWORD PTR [ebp-0x4],0x0
64013067:	mov    eax,DWORD PTR [ebx+0x4]
6401306a:	mov    ds:0x640298c8,eax
6401306f:	mov    eax,DWORD PTR [ebx+0x8]
64013072:	mov    ds:0x640298cc,eax
64013077:	mov    eax,DWORD PTR [ebx+0xc]
6401307a:	mov    ds:0x640298d0,eax
6401307f:	xor    eax,eax
64013081:	mov    DWORD PTR [ebp-0x1c],eax
64013084:	cmp    eax,0x5
64013087:	jge    0x64013099
64013089:	mov    cx,WORD PTR [ebx+eax*2+0x10]
6401308e:	mov    WORD PTR [eax*2+0x640298bc],cx
64013096:	inc    eax
64013097:	jmp    0x64013081
64013099:	xor    eax,eax
6401309b:	mov    DWORD PTR [ebp-0x1c],eax
6401309e:	cmp    eax,0x101
640130a3:	jge    0x640130b2
640130a5:	mov    cl,BYTE PTR [eax+ebx*1+0x1c]
640130a9:	mov    BYTE PTR [eax+0x64028418],cl
640130af:	inc    eax
640130b0:	jmp    0x6401309b
640130b2:	xor    eax,eax
640130b4:	mov    DWORD PTR [ebp-0x1c],eax
640130b7:	cmp    eax,0x100
640130bc:	jge    0x640130ce
640130be:	mov    cl,BYTE PTR [eax+ebx*1+0x11d]
640130c5:	mov    BYTE PTR [eax+0x64028520],cl
640130cb:	inc    eax
640130cc:	jmp    0x640130b4
640130ce:	push   DWORD PTR ds:0x64028620
640130d4:	call   DWORD PTR ds:0x64021058
640130da:	test   eax,eax
640130dc:	jne    0x640130f1
640130de:	mov    eax,ds:0x64028620
640130e3:	cmp    eax,0x640281f8
640130e8:	je     0x640130f1
640130ea:	push   eax
640130eb:	call   0x640101e6
640130f0:	pop    ecx
640130f1:	mov    DWORD PTR ds:0x64028620,ebx
640130f7:	push   ebx
640130f8:	call   edi
640130fa:	mov    DWORD PTR [ebp-0x4],0xfffffffe
64013101:	call   0x64013108
64013106:	jmp    0x64013138
64013108:	push   0xd
6401310a:	call   0x64016892
6401310f:	pop    ecx
64013110:	ret    
64013111:	jmp    0x64013138
64013113:	cmp    eax,0xffffffff
64013116:	jne    0x64013138
64013118:	cmp    ebx,0x640281f8
6401311e:	je     0x64013127
64013120:	push   ebx
64013121:	call   0x640101e6
64013126:	pop    ecx
64013127:	call   0x64011120
6401312c:	mov    DWORD PTR [eax],0x16
64013132:	jmp    0x64013138
64013134:	and    DWORD PTR [ebp-0x20],0x0
64013138:	mov    eax,DWORD PTR [ebp-0x20]
6401313b:	call   0x6401073d
64013140:	ret    
64013141:	cmp    DWORD PTR ds:0x6402d594,0x0
64013148:	jne    0x6401315c
6401314a:	push   0xfffffffd
6401314c:	call   0x64012fa7
64013151:	pop    ecx
64013152:	mov    DWORD PTR ds:0x6402d594,0x1
6401315c:	xor    eax,eax
6401315e:	ret    
6401315f:	push   ebx
64013160:	push   ebp
64013161:	push   esi
64013162:	mov    esi,DWORD PTR [esp+0x10]
64013166:	mov    eax,DWORD PTR [esi+0xbc]
6401316c:	xor    ebp,ebp
6401316e:	cmp    eax,ebp
64013170:	push   edi
64013171:	je     0x640131e2
64013173:	cmp    eax,0x64028bd0
64013178:	je     0x640131e2
6401317a:	mov    eax,DWORD PTR [esi+0xb0]
64013180:	cmp    eax,ebp
64013182:	je     0x640131e2
64013184:	cmp    DWORD PTR [eax],ebp
64013186:	jne    0x640131e2
64013188:	mov    eax,DWORD PTR [esi+0xb8]
6401318e:	cmp    eax,ebp
64013190:	je     0x640131a9
64013192:	cmp    DWORD PTR [eax],ebp
64013194:	jne    0x640131a9
64013196:	push   eax
64013197:	call   0x640101e6
6401319c:	push   DWORD PTR [esi+0xbc]
640131a2:	call   0x640184b6
640131a7:	pop    ecx
640131a8:	pop    ecx
640131a9:	mov    eax,DWORD PTR [esi+0xb4]
640131af:	cmp    eax,ebp
640131b1:	je     0x640131ca
640131b3:	cmp    DWORD PTR [eax],ebp
640131b5:	jne    0x640131ca
640131b7:	push   eax
640131b8:	call   0x640101e6
640131bd:	push   DWORD PTR [esi+0xbc]
640131c3:	call   0x64018476
640131c8:	pop    ecx
640131c9:	pop    ecx
640131ca:	push   DWORD PTR [esi+0xb0]
640131d0:	call   0x640101e6
640131d5:	push   DWORD PTR [esi+0xbc]
640131db:	call   0x640101e6
640131e0:	pop    ecx
640131e1:	pop    ecx
640131e2:	mov    eax,DWORD PTR [esi+0xc0]
640131e8:	cmp    eax,ebp
640131ea:	je     0x64013230
640131ec:	cmp    DWORD PTR [eax],ebp
640131ee:	jne    0x64013230
640131f0:	mov    eax,DWORD PTR [esi+0xc4]
640131f6:	sub    eax,0xfe
640131fb:	push   eax
640131fc:	call   0x640101e6
64013201:	mov    eax,DWORD PTR [esi+0xcc]
64013207:	mov    edi,0x80
6401320c:	sub    eax,edi
6401320e:	push   eax
6401320f:	call   0x640101e6
64013214:	mov    eax,DWORD PTR [esi+0xd0]
6401321a:	sub    eax,edi
6401321c:	push   eax
6401321d:	call   0x640101e6
64013222:	push   DWORD PTR [esi+0xc0]
64013228:	call   0x640101e6
6401322d:	add    esp,0x10
64013230:	lea    edi,[esi+0xd4]
64013236:	mov    eax,DWORD PTR [edi]
64013238:	cmp    eax,0x64028b10
6401323d:	je     0x64013256
6401323f:	cmp    DWORD PTR [eax+0xb4],ebp
64013245:	jne    0x64013256
64013247:	push   eax
64013248:	call   0x640182e6
6401324d:	push   DWORD PTR [edi]
6401324f:	call   0x640101e6
64013254:	pop    ecx
64013255:	pop    ecx
64013256:	push   0x6
64013258:	lea    edi,[esi+0x50]
6401325b:	pop    ebx
6401325c:	cmp    DWORD PTR [edi-0x8],0x64028720
64013263:	je     0x64013276
64013265:	mov    eax,DWORD PTR [edi]
64013267:	cmp    eax,ebp
64013269:	je     0x64013276
6401326b:	cmp    DWORD PTR [eax],ebp
6401326d:	jne    0x64013276
6401326f:	push   eax
64013270:	call   0x640101e6
64013275:	pop    ecx
64013276:	cmp    DWORD PTR [edi-0x4],ebp
64013279:	je     0x6401328d
6401327b:	mov    eax,DWORD PTR [edi+0x4]
6401327e:	cmp    eax,ebp
64013280:	je     0x6401328d
64013282:	cmp    DWORD PTR [eax],ebp
64013284:	jne    0x6401328d
64013286:	push   eax
64013287:	call   0x640101e6
6401328c:	pop    ecx
6401328d:	add    edi,0x10
64013290:	dec    ebx
64013291:	jne    0x6401325c
64013293:	push   esi
64013294:	call   0x640101e6
64013299:	pop    ecx
6401329a:	pop    edi
6401329b:	pop    esi
6401329c:	pop    ebp
6401329d:	pop    ebx
6401329e:	ret    
6401329f:	push   ebx
640132a0:	push   ebp
640132a1:	push   esi
640132a2:	mov    esi,DWORD PTR [esp+0x10]
640132a6:	push   edi
640132a7:	mov    edi,DWORD PTR ds:0x64021020
640132ad:	push   esi
640132ae:	call   edi
640132b0:	mov    eax,DWORD PTR [esi+0xb0]
640132b6:	test   eax,eax
640132b8:	je     0x640132bd
640132ba:	push   eax
640132bb:	call   edi
640132bd:	mov    eax,DWORD PTR [esi+0xb8]
640132c3:	test   eax,eax
640132c5:	je     0x640132ca
640132c7:	push   eax
640132c8:	call   edi
640132ca:	mov    eax,DWORD PTR [esi+0xb4]
640132d0:	test   eax,eax
640132d2:	je     0x640132d7
640132d4:	push   eax
640132d5:	call   edi
640132d7:	mov    eax,DWORD PTR [esi+0xc0]
640132dd:	test   eax,eax
640132df:	je     0x640132e4
640132e1:	push   eax
640132e2:	call   edi
640132e4:	push   0x6
640132e6:	lea    ebx,[esi+0x50]
640132e9:	pop    ebp
640132ea:	cmp    DWORD PTR [ebx-0x8],0x64028720
640132f1:	je     0x640132fc
640132f3:	mov    eax,DWORD PTR [ebx]
640132f5:	test   eax,eax
640132f7:	je     0x640132fc
640132f9:	push   eax
640132fa:	call   edi
640132fc:	cmp    DWORD PTR [ebx-0x4],0x0
64013300:	je     0x6401330c
64013302:	mov    eax,DWORD PTR [ebx+0x4]
64013305:	test   eax,eax
64013307:	je     0x6401330c
64013309:	push   eax
6401330a:	call   edi
6401330c:	add    ebx,0x10
6401330f:	dec    ebp
64013310:	jne    0x640132ea
64013312:	mov    eax,DWORD PTR [esi+0xd4]
64013318:	add    eax,0xb4
6401331d:	push   eax
6401331e:	call   edi
64013320:	pop    edi
64013321:	pop    esi
64013322:	pop    ebp
64013323:	pop    ebx
64013324:	ret    
64013325:	push   esi
64013326:	mov    esi,DWORD PTR [esp+0x8]
6401332a:	test   esi,esi
6401332c:	je     0x640133ad
6401332e:	push   ebx
6401332f:	push   ebp
64013330:	push   edi
64013331:	mov    edi,DWORD PTR ds:0x64021058
64013337:	push   esi
64013338:	call   edi
6401333a:	mov    eax,DWORD PTR [esi+0xb0]
64013340:	test   eax,eax
64013342:	je     0x64013347
64013344:	push   eax
64013345:	call   edi
64013347:	mov    eax,DWORD PTR [esi+0xb8]
6401334d:	test   eax,eax
6401334f:	je     0x64013354
64013351:	push   eax
64013352:	call   edi
64013354:	mov    eax,DWORD PTR [esi+0xb4]
6401335a:	test   eax,eax
6401335c:	je     0x64013361
6401335e:	push   eax
6401335f:	call   edi
64013361:	mov    eax,DWORD PTR [esi+0xc0]
64013367:	test   eax,eax
64013369:	je     0x6401336e
6401336b:	push   eax
6401336c:	call   edi
6401336e:	push   0x6
64013370:	lea    ebx,[esi+0x50]
64013373:	pop    ebp
64013374:	cmp    DWORD PTR [ebx-0x8],0x64028720
6401337b:	je     0x64013386
6401337d:	mov    eax,DWORD PTR [ebx]
6401337f:	test   eax,eax
64013381:	je     0x64013386
64013383:	push   eax
64013384:	call   edi
64013386:	cmp    DWORD PTR [ebx-0x4],0x0
6401338a:	je     0x64013396
6401338c:	mov    eax,DWORD PTR [ebx+0x4]
6401338f:	test   eax,eax
64013391:	je     0x64013396
64013393:	push   eax
64013394:	call   edi
64013396:	add    ebx,0x10
64013399:	dec    ebp
6401339a:	jne    0x64013374
6401339c:	mov    eax,DWORD PTR [esi+0xd4]
640133a2:	add    eax,0xb4
640133a7:	push   eax
640133a8:	call   edi
640133aa:	pop    edi
640133ab:	pop    ebp
640133ac:	pop    ebx
640133ad:	mov    eax,esi
640133af:	pop    esi
640133b0:	ret    
640133b1:	test   edi,edi
640133b3:	je     0x640133ec
640133b5:	test   eax,eax
640133b7:	je     0x640133ec
640133b9:	push   esi
640133ba:	mov    esi,DWORD PTR [eax]
640133bc:	cmp    esi,edi
640133be:	je     0x640133e8
640133c0:	push   edi
640133c1:	mov    DWORD PTR [eax],edi
640133c3:	call   0x6401329f
640133c8:	test   esi,esi
640133ca:	pop    ecx
640133cb:	je     0x640133e8
640133cd:	push   esi
640133ce:	call   0x64013325
640133d3:	cmp    DWORD PTR [esi],0x0
640133d6:	pop    ecx
640133d7:	jne    0x640133e8
640133d9:	cmp    esi,0x64028728
640133df:	je     0x640133e8
640133e1:	push   esi
640133e2:	call   0x6401315f
640133e7:	pop    ecx
640133e8:	mov    eax,edi
640133ea:	pop    esi
640133eb:	ret    
640133ec:	xor    eax,eax
640133ee:	ret    
640133ef:	push   0xc
640133f1:	push   0x64025af0
640133f6:	call   0x640106f8
640133fb:	call   0x6401146b
64013400:	mov    esi,eax
64013402:	mov    eax,ds:0x6402871c
64013407:	test   DWORD PTR [esi+0x70],eax
6401340a:	je     0x6401342e
6401340c:	cmp    DWORD PTR [esi+0x6c],0x0
64013410:	je     0x6401342e
64013412:	call   0x6401146b
64013417:	mov    esi,DWORD PTR [eax+0x6c]
6401341a:	test   esi,esi
6401341c:	jne    0x64013426
6401341e:	push   0x20
64013420:	call   0x640127a6
64013425:	pop    ecx
64013426:	mov    eax,esi
64013428:	call   0x6401073d
6401342d:	ret    
6401342e:	push   0xc
64013430:	call   0x6401696a
64013435:	pop    ecx
64013436:	and    DWORD PTR [ebp-0x4],0x0
6401343a:	lea    eax,[esi+0x6c]
6401343d:	mov    edi,DWORD PTR ds:0x64028800
64013443:	call   0x640133b1
64013448:	mov    DWORD PTR [ebp-0x1c],eax
6401344b:	mov    DWORD PTR [ebp-0x4],0xfffffffe
64013452:	call   0x64013459
64013457:	jmp    0x6401341a
64013459:	push   0xc
6401345b:	call   0x64016892
64013460:	pop    ecx
64013461:	mov    esi,DWORD PTR [ebp-0x1c]
64013464:	ret    
64013465:	push   ebp
64013466:	mov    ebp,esp
64013468:	push   ecx
64013469:	push   esi
6401346a:	mov    esi,DWORD PTR [ebp+0xc]
6401346d:	push   esi
6401346e:	call   0x640191cd
64013473:	mov    DWORD PTR [ebp+0xc],eax
64013476:	mov    eax,DWORD PTR [esi+0xc]
64013479:	test   al,0x82
6401347b:	pop    ecx
6401347c:	jne    0x64013495
6401347e:	call   0x64011120
64013483:	mov    DWORD PTR [eax],0x9
64013489:	or     DWORD PTR [esi+0xc],0x20
6401348d:	or     eax,0xffffffff
64013490:	jmp    0x640135c2
64013495:	test   al,0x40
64013497:	je     0x640134a6
64013499:	call   0x64011120
6401349e:	mov    DWORD PTR [eax],0x22
640134a4:	jmp    0x64013489
640134a6:	push   ebx
640134a7:	xor    ebx,ebx
640134a9:	test   al,0x1
640134ab:	je     0x640134c3
640134ad:	test   al,0x10
640134af:	mov    DWORD PTR [esi+0x4],ebx
640134b2:	je     0x6401353d
640134b8:	mov    ecx,DWORD PTR [esi+0x8]
640134bb:	and    eax,0xfffffffe
640134be:	mov    DWORD PTR [esi],ecx
640134c0:	mov    DWORD PTR [esi+0xc],eax
640134c3:	mov    eax,DWORD PTR [esi+0xc]
640134c6:	and    eax,0xffffffef
640134c9:	or     eax,0x2
640134cc:	test   ax,0x10c
640134d0:	mov    DWORD PTR [esi+0xc],eax
640134d3:	mov    DWORD PTR [esi+0x4],ebx
640134d6:	mov    DWORD PTR [ebp-0x4],ebx
640134d9:	jne    0x64013507
640134db:	call   0x6401902c
640134e0:	add    eax,0x20
640134e3:	cmp    esi,eax
640134e5:	je     0x640134f3
640134e7:	call   0x6401902c
640134ec:	add    eax,0x40
640134ef:	cmp    esi,eax
640134f1:	jne    0x64013500
640134f3:	push   DWORD PTR [ebp+0xc]
640134f6:	call   0x64018fce
640134fb:	test   eax,eax
640134fd:	pop    ecx
640134fe:	jne    0x64013507
64013500:	push   esi
64013501:	call   0x64018f8a
64013506:	pop    ecx
64013507:	test   WORD PTR [esi+0xc],0x108
6401350d:	push   edi
6401350e:	je     0x64013594
64013514:	mov    eax,DWORD PTR [esi+0x8]
64013517:	mov    edi,DWORD PTR [esi]
64013519:	lea    ecx,[eax+0x1]
6401351c:	mov    DWORD PTR [esi],ecx
6401351e:	mov    ecx,DWORD PTR [esi+0x18]
64013521:	sub    edi,eax
64013523:	dec    ecx
64013524:	cmp    edi,ebx
64013526:	mov    DWORD PTR [esi+0x4],ecx
64013529:	jle    0x64013548
6401352b:	push   edi
6401352c:	push   eax
6401352d:	push   DWORD PTR [ebp+0xc]
64013530:	call   0x64018eae
64013535:	add    esp,0xc
64013538:	mov    DWORD PTR [ebp-0x4],eax
6401353b:	jmp    0x6401358a
6401353d:	or     eax,0x20
64013540:	mov    DWORD PTR [esi+0xc],eax
64013543:	or     eax,0xffffffff
64013546:	jmp    0x640135c1
64013548:	mov    ecx,DWORD PTR [ebp+0xc]
6401354b:	cmp    ecx,0xffffffff
6401354e:	je     0x6401356b
64013550:	cmp    ecx,0xfffffffe
64013553:	je     0x6401356b
64013555:	mov    eax,ecx
64013557:	and    eax,0x1f
6401355a:	mov    edx,ecx
6401355c:	sar    edx,0x5
6401355f:	shl    eax,0x6
64013562:	add    eax,DWORD PTR [edx*4+0x6402d480]
64013569:	jmp    0x64013570
6401356b:	mov    eax,0x64028810
64013570:	test   BYTE PTR [eax+0x4],0x20
64013574:	je     0x6401358a
64013576:	push   0x2
64013578:	push   ebx
64013579:	push   ebx
6401357a:	push   ecx
6401357b:	call   0x64018773
64013580:	and    eax,edx
64013582:	add    esp,0x10
64013585:	cmp    eax,0xffffffff
64013588:	je     0x640135af
6401358a:	mov    eax,DWORD PTR [esi+0x8]
6401358d:	mov    cl,BYTE PTR [ebp+0x8]
64013590:	mov    BYTE PTR [eax],cl
64013592:	jmp    0x640135aa
64013594:	xor    edi,edi
64013596:	inc    edi
64013597:	push   edi
64013598:	lea    eax,[ebp+0x8]
6401359b:	push   eax
6401359c:	push   DWORD PTR [ebp+0xc]
6401359f:	call   0x64018eae
640135a4:	add    esp,0xc
640135a7:	mov    DWORD PTR [ebp-0x4],eax
640135aa:	cmp    DWORD PTR [ebp-0x4],edi
640135ad:	je     0x640135b8
640135af:	or     DWORD PTR [esi+0xc],0x20
640135b3:	or     eax,0xffffffff
640135b6:	jmp    0x640135c0
640135b8:	mov    eax,DWORD PTR [ebp+0x8]
640135bb:	and    eax,0xff
640135c0:	pop    edi
640135c1:	pop    ebx
640135c2:	pop    esi
640135c3:	leave  
640135c4:	ret    
640135c5:	test   BYTE PTR [eax+0xc],0x40
640135c9:	je     0x640135d1
640135cb:	cmp    DWORD PTR [eax+0x8],0x0
640135cf:	je     0x640135e7
640135d1:	push   eax
640135d2:	push   DWORD PTR [esp+0x8]
640135d6:	call   0x640191fa
640135db:	cmp    ax,0xffff
640135df:	pop    ecx
640135e0:	pop    ecx
640135e1:	jne    0x640135e7
640135e3:	or     DWORD PTR [esi],0xffffffff
640135e6:	ret    
640135e7:	inc    DWORD PTR [esi]
640135e9:	ret    
640135ea:	push   ebp
640135eb:	mov    ebp,esp
640135ed:	push   esi
640135ee:	mov    esi,eax
640135f0:	jmp    0x64013606
640135f2:	push   DWORD PTR [ebp+0x8]
640135f5:	mov    eax,DWORD PTR [ebp+0x10]
640135f8:	dec    DWORD PTR [ebp+0xc]
640135fb:	call   0x640135c5
64013600:	cmp    DWORD PTR [esi],0xffffffff
64013603:	pop    ecx
64013604:	je     0x6401360c
64013606:	cmp    DWORD PTR [ebp+0xc],0x0
6401360a:	jg     0x640135f2
6401360c:	pop    esi
6401360d:	pop    ebp
6401360e:	ret    
6401360f:	test   BYTE PTR [edi+0xc],0x40
64013613:	push   ebx
64013614:	push   esi
64013615:	mov    esi,eax
64013617:	mov    ebx,ecx
64013619:	je     0x64013654
6401361b:	cmp    DWORD PTR [edi+0x8],0x0
6401361f:	jne    0x64013654
64013621:	mov    eax,DWORD PTR [esp+0xc]
64013625:	add    DWORD PTR [esi],eax
64013627:	jmp    0x6401365b
64013629:	movzx  eax,WORD PTR [ebx]
6401362c:	dec    DWORD PTR [esp+0xc]
64013630:	push   eax
64013631:	mov    eax,edi
64013633:	call   0x640135c5
64013638:	inc    ebx
64013639:	inc    ebx
6401363a:	cmp    DWORD PTR [esi],0xffffffff
6401363d:	pop    ecx
6401363e:	jne    0x64013654
64013640:	call   0x64011120
64013645:	cmp    DWORD PTR [eax],0x2a
64013648:	jne    0x6401365b
6401364a:	push   0x3f
6401364c:	mov    eax,edi
6401364e:	call   0x640135c5
64013653:	pop    ecx
64013654:	cmp    DWORD PTR [esp+0xc],0x0
64013659:	jg     0x64013629
6401365b:	pop    esi
6401365c:	pop    ebx
6401365d:	ret    
6401365e:	push   ebp
6401365f:	lea    ebp,[esp-0x3f4]
64013666:	sub    esp,0x474
6401366c:	mov    eax,ds:0x64028038
64013671:	xor    eax,ebp
64013673:	mov    DWORD PTR [ebp+0x3f0],eax
64013679:	mov    eax,DWORD PTR [ebp+0x3fc]
6401367f:	push   ebx
64013680:	mov    ebx,DWORD PTR [ebp+0x408]
64013686:	push   esi
64013687:	mov    esi,DWORD PTR [ebp+0x400]
6401368d:	push   edi
6401368e:	push   DWORD PTR [ebp+0x404]
64013694:	xor    edi,edi
64013696:	lea    ecx,[ebp-0x64]
64013699:	mov    DWORD PTR [ebp-0x3c],eax
6401369c:	mov    DWORD PTR [ebp-0x28],ebx
6401369f:	mov    DWORD PTR [ebp-0x54],edi
640136a2:	mov    DWORD PTR [ebp-0x14],edi
640136a5:	mov    DWORD PTR [ebp-0x38],edi
640136a8:	mov    DWORD PTR [ebp-0x18],edi
640136ab:	mov    DWORD PTR [ebp-0x30],edi
640136ae:	mov    DWORD PTR [ebp-0x48],edi
640136b1:	mov    DWORD PTR [ebp-0x34],edi
640136b4:	call   0x6400f4f1
640136b9:	cmp    DWORD PTR [ebp-0x3c],edi
640136bc:	jne    0x640136eb
640136be:	call   0x64011120
640136c3:	push   edi
640136c4:	push   edi
640136c5:	push   edi
640136c6:	push   edi
640136c7:	mov    DWORD PTR [eax],0x16
640136cd:	push   edi
640136ce:	call   0x6400ee86
640136d3:	add    esp,0x14
640136d6:	cmp    BYTE PTR [ebp-0x58],0x0
640136da:	je     0x640136e3
640136dc:	mov    eax,DWORD PTR [ebp-0x5c]
640136df:	and    DWORD PTR [eax+0x70],0xfffffffd
640136e3:	or     eax,0xffffffff
640136e6:	jmp    0x64013f36
640136eb:	cmp    esi,edi
640136ed:	je     0x640136be
640136ef:	movzx  edx,WORD PTR [esi]
640136f2:	xor    ecx,ecx
640136f4:	cmp    dx,di
640136f7:	mov    DWORD PTR [ebp-0x2c],edi
640136fa:	mov    DWORD PTR [ebp-0x20],edi
640136fd:	mov    DWORD PTR [ebp-0x50],edi
64013700:	mov    DWORD PTR [ebp-0x24],edx
64013703:	je     0x64013f26
64013709:	push   0x2
6401370b:	pop    edi
6401370c:	add    esi,edi
6401370e:	cmp    DWORD PTR [ebp-0x2c],0x0
64013712:	mov    DWORD PTR [ebp-0x4c],esi
64013715:	jl     0x64013f26
6401371b:	lea    eax,[edx-0x20]
6401371e:	cmp    ax,0x58
64013722:	ja     0x64013733
64013724:	movzx  eax,dx
64013727:	movzx  eax,BYTE PTR [eax+0x64021cd8]
6401372e:	and    eax,0xf
64013731:	jmp    0x64013735
64013733:	xor    eax,eax
64013735:	movsx  eax,BYTE PTR [ecx+eax*8+0x64021cf8]
6401373d:	push   0x7
6401373f:	sar    eax,0x4
64013742:	pop    ecx
64013743:	cmp    eax,ecx
64013745:	mov    DWORD PTR [ebp-0x68],eax
64013748:	ja     0x64013ef4
6401374e:	jmp    DWORD PTR [eax*4+0x64013f4e]
64013755:	xor    eax,eax
64013757:	or     DWORD PTR [ebp-0x18],0xffffffff
6401375b:	mov    DWORD PTR [ebp-0x6c],eax
6401375e:	mov    DWORD PTR [ebp-0x48],eax
64013761:	mov    DWORD PTR [ebp-0x38],eax
64013764:	mov    DWORD PTR [ebp-0x30],eax
64013767:	mov    DWORD PTR [ebp-0x14],eax
6401376a:	mov    DWORD PTR [ebp-0x34],eax
6401376d:	jmp    0x64013ef4
64013772:	movzx  eax,dx
64013775:	sub    eax,0x20
64013778:	je     0x640137b8
6401377a:	sub    eax,0x3
6401377d:	je     0x640137ac
6401377f:	sub    eax,0x8
64013782:	je     0x640137a3
64013784:	sub    eax,edi
64013786:	je     0x6401379a
64013788:	sub    eax,0x3
6401378b:	jne    0x64013ef4
64013791:	or     DWORD PTR [ebp-0x14],0x8
64013795:	jmp    0x64013ef4
6401379a:	or     DWORD PTR [ebp-0x14],0x4
6401379e:	jmp    0x64013ef4
640137a3:	or     DWORD PTR [ebp-0x14],0x1
640137a7:	jmp    0x64013ef4
640137ac:	or     DWORD PTR [ebp-0x14],0x80
640137b3:	jmp    0x64013ef4
640137b8:	or     DWORD PTR [ebp-0x14],edi
640137bb:	jmp    0x64013ef4
640137c0:	cmp    dx,0x2a
640137c4:	jne    0x640137e6
640137c6:	add    ebx,0x4
640137c9:	mov    DWORD PTR [ebp-0x28],ebx
640137cc:	mov    ebx,DWORD PTR [ebx-0x4]
640137cf:	test   ebx,ebx
640137d1:	mov    DWORD PTR [ebp-0x38],ebx
640137d4:	jge    0x64013ef4
640137da:	or     DWORD PTR [ebp-0x14],0x4
640137de:	neg    DWORD PTR [ebp-0x38]
640137e1:	jmp    0x64013ef4
640137e6:	mov    eax,DWORD PTR [ebp-0x38]
640137e9:	imul   eax,eax,0xa
640137ec:	movzx  ecx,dx
640137ef:	lea    eax,[eax+ecx*1-0x30]
640137f3:	mov    DWORD PTR [ebp-0x38],eax
640137f6:	jmp    0x64013ef4
640137fb:	and    DWORD PTR [ebp-0x18],0x0
640137ff:	jmp    0x64013ef4
64013804:	cmp    dx,0x2a
64013808:	jne    0x64013827
6401380a:	add    ebx,0x4
6401380d:	mov    DWORD PTR [ebp-0x28],ebx
64013810:	mov    ebx,DWORD PTR [ebx-0x4]
64013813:	test   ebx,ebx
64013815:	mov    DWORD PTR [ebp-0x18],ebx
64013818:	jge    0x64013ef4
6401381e:	or     DWORD PTR [ebp-0x18],0xffffffff
64013822:	jmp    0x64013ef4
64013827:	mov    eax,DWORD PTR [ebp-0x18]
6401382a:	imul   eax,eax,0xa
6401382d:	movzx  ecx,dx
64013830:	lea    eax,[eax+ecx*1-0x30]
64013834:	mov    DWORD PTR [ebp-0x18],eax
64013837:	jmp    0x64013ef4
6401383c:	movzx  eax,dx
6401383f:	cmp    eax,0x49
64013842:	je     0x6401388c
64013844:	cmp    eax,0x68
64013847:	je     0x64013883
64013849:	cmp    eax,0x6c
6401384c:	je     0x64013863
6401384e:	cmp    eax,0x77
64013851:	jne    0x64013ef4
64013857:	or     DWORD PTR [ebp-0x14],0x800
6401385e:	jmp    0x64013ef4
64013863:	cmp    WORD PTR [esi],0x6c
64013867:	jne    0x6401387a
64013869:	add    esi,edi
6401386b:	or     DWORD PTR [ebp-0x14],0x1000
64013872:	mov    DWORD PTR [ebp-0x4c],esi
64013875:	jmp    0x64013ef4
6401387a:	or     DWORD PTR [ebp-0x14],0x10
6401387e:	jmp    0x64013ef4
64013883:	or     DWORD PTR [ebp-0x14],0x20
64013887:	jmp    0x64013ef4
6401388c:	movzx  eax,WORD PTR [esi]
6401388f:	cmp    ax,0x36
64013893:	jne    0x640138ae
64013895:	cmp    WORD PTR [esi+0x2],0x34
6401389a:	jne    0x640138ae
6401389c:	add    esi,0x4
6401389f:	or     DWORD PTR [ebp-0x14],0x8000
640138a6:	mov    DWORD PTR [ebp-0x4c],esi
640138a9:	jmp    0x64013ef4
640138ae:	cmp    ax,0x33
640138b2:	jne    0x640138cd
640138b4:	cmp    WORD PTR [esi+0x2],0x32
640138b9:	jne    0x640138cd
640138bb:	add    esi,0x4
640138be:	and    DWORD PTR [ebp-0x14],0xffff7fff
640138c5:	mov    DWORD PTR [ebp-0x4c],esi
640138c8:	jmp    0x64013ef4
640138cd:	cmp    ax,0x64
640138d1:	je     0x64013ef4
640138d7:	cmp    ax,0x69
640138db:	je     0x64013ef4
640138e1:	cmp    ax,0x6f
640138e5:	je     0x64013ef4
640138eb:	cmp    ax,0x75
640138ef:	je     0x64013ef4
640138f5:	cmp    ax,0x78
640138f9:	je     0x64013ef4
640138ff:	cmp    ax,0x58
64013903:	je     0x64013ef4
64013909:	and    DWORD PTR [ebp-0x68],0x0
6401390d:	mov    eax,DWORD PTR [ebp-0x3c]
64013910:	push   edx
64013911:	lea    esi,[ebp-0x2c]
64013914:	mov    DWORD PTR [ebp-0x34],0x1
6401391b:	call   0x640135c5
64013920:	jmp    0x64013ef3
64013925:	movzx  eax,dx
64013928:	cmp    eax,0x64
6401392b:	jg     0x64013ad8
64013931:	je     0x64013b57
64013937:	cmp    eax,0x53
6401393a:	jg     0x64013a17
64013940:	je     0x640139a1
64013942:	sub    eax,0x41
64013945:	je     0x64013957
64013947:	sub    eax,edi
64013949:	je     0x6401398c
6401394b:	sub    eax,edi
6401394d:	je     0x64013957
6401394f:	sub    eax,edi
64013951:	jne    0x64013dd8
64013957:	add    edx,0x20
6401395a:	mov    DWORD PTR [ebp-0x6c],0x1
64013961:	mov    DWORD PTR [ebp-0x24],edx
64013964:	or     DWORD PTR [ebp-0x14],0x40
64013968:	cmp    DWORD PTR [ebp-0x18],0x0
6401396c:	lea    esi,[ebp-0x10]
6401396f:	mov    eax,0x200
64013974:	mov    DWORD PTR [ebp-0x1c],esi
64013977:	mov    DWORD PTR [ebp-0x20],eax
6401397a:	jge    0x64013b7b
64013980:	mov    DWORD PTR [ebp-0x18],0x6
64013987:	jmp    0x64013bc8
6401398c:	test   WORD PTR [ebp-0x14],0x830
64013992:	jne    0x64013a34
64013998:	or     DWORD PTR [ebp-0x14],0x20
6401399c:	jmp    0x64013a34
640139a1:	test   WORD PTR [ebp-0x14],0x830
640139a7:	jne    0x640139ad
640139a9:	or     DWORD PTR [ebp-0x14],0x20
640139ad:	mov    edi,DWORD PTR [ebp-0x18]
640139b0:	cmp    edi,0xffffffff
640139b3:	jne    0x640139ba
640139b5:	mov    edi,0x7fffffff
640139ba:	add    ebx,0x4
640139bd:	test   BYTE PTR [ebp-0x14],0x20
640139c1:	mov    DWORD PTR [ebp-0x28],ebx
640139c4:	mov    ebx,DWORD PTR [ebx-0x4]
640139c7:	mov    DWORD PTR [ebp-0x1c],ebx
640139ca:	je     0x64013dab
640139d0:	test   ebx,ebx
640139d2:	jne    0x640139dc
640139d4:	mov    eax,ds:0x640288e0
640139d9:	mov    DWORD PTR [ebp-0x1c],eax
640139dc:	and    DWORD PTR [ebp-0x20],0x0
640139e0:	test   edi,edi
640139e2:	mov    esi,DWORD PTR [ebp-0x1c]
640139e5:	jle    0x64013dd8
640139eb:	mov    al,BYTE PTR [esi]
640139ed:	test   al,al
640139ef:	je     0x64013dd8
640139f5:	lea    ecx,[ebp-0x64]
640139f8:	movzx  eax,al
640139fb:	push   ecx
640139fc:	push   eax
640139fd:	call   0x640167b0
64013a02:	test   eax,eax
64013a04:	pop    ecx
64013a05:	pop    ecx
64013a06:	je     0x64013a09
64013a08:	inc    esi
64013a09:	inc    esi
64013a0a:	inc    DWORD PTR [ebp-0x20]
64013a0d:	cmp    DWORD PTR [ebp-0x20],edi
64013a10:	jl     0x640139eb
64013a12:	jmp    0x64013dd8
64013a17:	sub    eax,0x58
64013a1a:	je     0x64013c63
64013a20:	sub    eax,edi
64013a22:	je     0x64013a8b
64013a24:	sub    eax,ecx
64013a26:	je     0x64013964
64013a2c:	sub    eax,edi
64013a2e:	jne    0x64013dd8
64013a34:	movzx  eax,WORD PTR [ebx]
64013a37:	add    ebx,0x4
64013a3a:	xor    esi,esi
64013a3c:	inc    esi
64013a3d:	test   BYTE PTR [ebp-0x14],0x20
64013a41:	mov    DWORD PTR [ebp-0x34],esi
64013a44:	mov    DWORD PTR [ebp-0x28],ebx
64013a47:	mov    DWORD PTR [ebp-0x70],eax
64013a4a:	je     0x64013a79
64013a4c:	mov    BYTE PTR [ebp-0x40],al
64013a4f:	lea    eax,[ebp-0x64]
64013a52:	push   eax
64013a53:	mov    eax,DWORD PTR [ebp-0x64]
64013a56:	mov    BYTE PTR [ebp-0x3f],0x0
64013a5a:	push   DWORD PTR [eax+0xac]
64013a60:	lea    eax,[ebp-0x40]
64013a63:	push   eax
64013a64:	lea    eax,[ebp-0x10]
64013a67:	push   eax
64013a68:	call   0x640193ee
64013a6d:	add    esp,0x10
64013a70:	test   eax,eax
64013a72:	jge    0x64013a7d
64013a74:	mov    DWORD PTR [ebp-0x48],esi
64013a77:	jmp    0x64013a7d
64013a79:	mov    WORD PTR [ebp-0x10],ax
64013a7d:	lea    eax,[ebp-0x10]
64013a80:	mov    DWORD PTR [ebp-0x1c],eax
64013a83:	mov    DWORD PTR [ebp-0x20],esi
64013a86:	jmp    0x64013dd8
64013a8b:	mov    eax,DWORD PTR [ebx]
64013a8d:	add    ebx,0x4
64013a90:	test   eax,eax
64013a92:	mov    DWORD PTR [ebp-0x28],ebx
64013a95:	je     0x64013ac4
64013a97:	mov    ecx,DWORD PTR [eax+0x4]
64013a9a:	test   ecx,ecx
64013a9c:	je     0x64013ac4
64013a9e:	test   WORD PTR [ebp-0x14],0x800
64013aa4:	movsx  eax,WORD PTR [eax]
64013aa7:	mov    DWORD PTR [ebp-0x1c],ecx
64013aaa:	je     0x64013abb
64013aac:	cdq    
64013aad:	sub    eax,edx
64013aaf:	mov    DWORD PTR [ebp-0x34],0x1
64013ab6:	jmp    0x64013dd3
64013abb:	and    DWORD PTR [ebp-0x34],0x0
64013abf:	jmp    0x64013dd5
64013ac4:	mov    eax,ds:0x640288e0
64013ac9:	mov    DWORD PTR [ebp-0x1c],eax
64013acc:	push   eax
64013acd:	call   0x64010b20
64013ad2:	pop    ecx
64013ad3:	jmp    0x64013dd5
64013ad8:	cmp    eax,0x70
64013adb:	jg     0x64013c68
64013ae1:	je     0x64013c5c
64013ae7:	cmp    eax,0x65
64013aea:	jl     0x64013dd8
64013af0:	cmp    eax,0x67
64013af3:	jle    0x64013964
64013af9:	cmp    eax,0x69
64013afc:	je     0x64013b57
64013afe:	cmp    eax,0x6e
64013b01:	je     0x64013b22
64013b03:	cmp    eax,0x6f
64013b06:	jne    0x64013dd8
64013b0c:	test   BYTE PTR [ebp-0x14],0x80
64013b10:	mov    DWORD PTR [ebp-0x24],0x8
64013b17:	je     0x64013b62
64013b19:	or     DWORD PTR [ebp-0x14],0x200
64013b20:	jmp    0x64013b62
64013b22:	mov    esi,DWORD PTR [ebx]
64013b24:	add    ebx,0x4
64013b27:	mov    DWORD PTR [ebp-0x28],ebx
64013b2a:	call   0x640193d8
64013b2f:	test   eax,eax
64013b31:	je     0x64013f0f
64013b37:	test   BYTE PTR [ebp-0x14],0x20
64013b3b:	je     0x64013b46
64013b3d:	mov    ax,WORD PTR [ebp-0x2c]
64013b41:	mov    WORD PTR [esi],ax
64013b44:	jmp    0x64013b4b
64013b46:	mov    eax,DWORD PTR [ebp-0x2c]
64013b49:	mov    DWORD PTR [esi],eax
64013b4b:	mov    DWORD PTR [ebp-0x48],0x1
64013b52:	jmp    0x64013ee1
64013b57:	or     DWORD PTR [ebp-0x14],0x40
64013b5b:	mov    DWORD PTR [ebp-0x24],0xa
64013b62:	test   WORD PTR [ebp-0x14],0x8000
64013b68:	je     0x64013cb2
64013b6e:	mov    eax,DWORD PTR [ebx]
64013b70:	mov    edx,DWORD PTR [ebx+0x4]
64013b73:	add    ebx,0x8
64013b76:	jmp    0x64013ceb
64013b7b:	jne    0x64013b8c
64013b7d:	cmp    dx,0x67
64013b81:	jne    0x64013bc8
64013b83:	mov    DWORD PTR [ebp-0x18],0x1
64013b8a:	jmp    0x64013bc8
64013b8c:	cmp    DWORD PTR [ebp-0x18],eax
64013b8f:	jle    0x64013b94
64013b91:	mov    DWORD PTR [ebp-0x18],eax
64013b94:	cmp    DWORD PTR [ebp-0x18],0xa3
64013b9b:	jle    0x64013bc8
64013b9d:	mov    edi,DWORD PTR [ebp-0x18]
64013ba0:	add    edi,0x15d
64013ba6:	push   edi
64013ba7:	call   0x64012630
64013bac:	test   eax,eax
64013bae:	mov    edx,DWORD PTR [ebp-0x24]
64013bb1:	pop    ecx
64013bb2:	mov    DWORD PTR [ebp-0x50],eax
64013bb5:	je     0x64013bc1
64013bb7:	mov    DWORD PTR [ebp-0x1c],eax
64013bba:	mov    DWORD PTR [ebp-0x20],edi
64013bbd:	mov    esi,eax
64013bbf:	jmp    0x64013bc8
64013bc1:	mov    DWORD PTR [ebp-0x18],0xa3
64013bc8:	mov    eax,DWORD PTR [ebx]
64013bca:	add    ebx,0x8
64013bcd:	mov    DWORD PTR [ebp-0x78],eax
64013bd0:	mov    eax,DWORD PTR [ebx-0x4]
64013bd3:	mov    DWORD PTR [ebp-0x74],eax
64013bd6:	lea    eax,[ebp-0x64]
64013bd9:	push   eax
64013bda:	push   DWORD PTR [ebp-0x6c]
64013bdd:	movsx  eax,dl
64013be0:	push   DWORD PTR [ebp-0x18]
64013be3:	mov    DWORD PTR [ebp-0x28],ebx
64013be6:	push   eax
64013be7:	push   DWORD PTR [ebp-0x20]
64013bea:	lea    eax,[ebp-0x78]
64013bed:	push   esi
64013bee:	push   eax
64013bef:	push   DWORD PTR ds:0x64028af4
64013bf5:	call   0x6401124f
64013bfa:	pop    ecx
64013bfb:	call   eax
64013bfd:	mov    ebx,DWORD PTR [ebp-0x14]
64013c00:	add    esp,0x1c
64013c03:	and    ebx,0x80
64013c09:	je     0x64013c26
64013c0b:	cmp    DWORD PTR [ebp-0x18],0x0
64013c0f:	jne    0x64013c26
64013c11:	lea    eax,[ebp-0x64]
64013c14:	push   eax
64013c15:	push   esi
64013c16:	push   DWORD PTR ds:0x64028b00
64013c1c:	call   0x6401124f
64013c21:	pop    ecx
64013c22:	call   eax
64013c24:	pop    ecx
64013c25:	pop    ecx
64013c26:	cmp    WORD PTR [ebp-0x24],0x67
64013c2b:	jne    0x64013c46
64013c2d:	test   ebx,ebx
64013c2f:	jne    0x64013c46
64013c31:	lea    eax,[ebp-0x64]
64013c34:	push   eax
64013c35:	push   esi
64013c36:	push   DWORD PTR ds:0x64028afc
64013c3c:	call   0x6401124f
64013c41:	pop    ecx
64013c42:	call   eax
64013c44:	pop    ecx
64013c45:	pop    ecx
64013c46:	cmp    BYTE PTR [esi],0x2d
64013c49:	jne    0x64013c56
64013c4b:	or     DWORD PTR [ebp-0x14],0x100
64013c52:	inc    esi
64013c53:	mov    DWORD PTR [ebp-0x1c],esi
64013c56:	push   esi
64013c57:	jmp    0x64013acd
64013c5c:	mov    DWORD PTR [ebp-0x18],0x8
64013c63:	mov    DWORD PTR [ebp-0x54],ecx
64013c66:	jmp    0x64013c89
64013c68:	sub    eax,0x73
64013c6b:	je     0x640139ad
64013c71:	sub    eax,edi
64013c73:	je     0x64013b5b
64013c79:	sub    eax,0x3
64013c7c:	jne    0x64013dd8
64013c82:	mov    DWORD PTR [ebp-0x54],0x27
64013c89:	test   BYTE PTR [ebp-0x14],0x80
64013c8d:	mov    DWORD PTR [ebp-0x24],0x10
64013c94:	je     0x64013b62
64013c9a:	mov    eax,DWORD PTR [ebp-0x54]
64013c9d:	add    eax,0x51
64013ca0:	mov    WORD PTR [ebp-0x44],0x30
64013ca6:	mov    WORD PTR [ebp-0x42],ax
64013caa:	mov    DWORD PTR [ebp-0x30],edi
64013cad:	jmp    0x64013b62
64013cb2:	test   WORD PTR [ebp-0x14],0x1000
64013cb8:	jne    0x64013b6e
64013cbe:	add    ebx,0x4
64013cc1:	test   BYTE PTR [ebp-0x14],0x20
64013cc5:	je     0x64013cdd
64013cc7:	test   BYTE PTR [ebp-0x14],0x40
64013ccb:	mov    DWORD PTR [ebp-0x28],ebx
64013cce:	je     0x64013cd6
64013cd0:	movsx  eax,WORD PTR [ebx-0x4]
64013cd4:	jmp    0x64013cda
64013cd6:	movzx  eax,WORD PTR [ebx-0x4]
64013cda:	cdq    
64013cdb:	jmp    0x64013cee
64013cdd:	test   BYTE PTR [ebp-0x14],0x40
64013ce1:	mov    eax,DWORD PTR [ebx-0x4]
64013ce4:	je     0x64013ce9
64013ce6:	cdq    
64013ce7:	jmp    0x64013ceb
64013ce9:	xor    edx,edx
64013ceb:	mov    DWORD PTR [ebp-0x28],ebx
64013cee:	test   BYTE PTR [ebp-0x14],0x40
64013cf2:	je     0x64013d0c
64013cf4:	test   edx,edx
64013cf6:	jg     0x64013d0c
64013cf8:	jl     0x64013cfe
64013cfa:	test   eax,eax
64013cfc:	jae    0x64013d0c
64013cfe:	neg    eax
64013d00:	adc    edx,0x0
64013d03:	neg    edx
64013d05:	or     DWORD PTR [ebp-0x14],0x100
64013d0c:	test   WORD PTR [ebp-0x14],0x9000
64013d12:	mov    ebx,edx
64013d14:	mov    edi,eax
64013d16:	jne    0x64013d1a
64013d18:	xor    ebx,ebx
64013d1a:	cmp    DWORD PTR [ebp-0x18],0x0
64013d1e:	jge    0x64013d29
64013d20:	mov    DWORD PTR [ebp-0x18],0x1
64013d27:	jmp    0x64013d3a
64013d29:	and    DWORD PTR [ebp-0x14],0xfffffff7
64013d2d:	mov    eax,0x200
64013d32:	cmp    DWORD PTR [ebp-0x18],eax
64013d35:	jle    0x64013d3a
64013d37:	mov    DWORD PTR [ebp-0x18],eax
64013d3a:	mov    eax,edi
64013d3c:	or     eax,ebx
64013d3e:	jne    0x64013d43
64013d40:	and    DWORD PTR [ebp-0x30],eax
64013d43:	lea    esi,[ebp+0x1ef]
64013d49:	mov    eax,DWORD PTR [ebp-0x18]
64013d4c:	dec    DWORD PTR [ebp-0x18]
64013d4f:	test   eax,eax
64013d51:	jg     0x64013d59
64013d53:	mov    eax,edi
64013d55:	or     eax,ebx
64013d57:	je     0x64013d7d
64013d59:	mov    eax,DWORD PTR [ebp-0x24]
64013d5c:	cdq    
64013d5d:	push   edx
64013d5e:	push   eax
64013d5f:	push   ebx
64013d60:	push   edi
64013d61:	call   0x64016280
64013d66:	add    ecx,0x30
64013d69:	cmp    ecx,0x39
64013d6c:	mov    DWORD PTR [ebp-0x7c],ebx
64013d6f:	mov    edi,eax
64013d71:	mov    ebx,edx
64013d73:	jle    0x64013d78
64013d75:	add    ecx,DWORD PTR [ebp-0x54]
64013d78:	mov    BYTE PTR [esi],cl
64013d7a:	dec    esi
64013d7b:	jmp    0x64013d49
64013d7d:	lea    eax,[ebp+0x1ef]
64013d83:	sub    eax,esi
64013d85:	inc    esi
64013d86:	test   WORD PTR [ebp-0x14],0x200
64013d8c:	mov    DWORD PTR [ebp-0x20],eax
64013d8f:	mov    DWORD PTR [ebp-0x1c],esi
64013d92:	je     0x64013dd8
64013d94:	test   eax,eax
64013d96:	je     0x64013d9f
64013d98:	mov    ecx,esi
64013d9a:	cmp    BYTE PTR [ecx],0x30
64013d9d:	je     0x64013dd8
64013d9f:	dec    DWORD PTR [ebp-0x1c]
64013da2:	mov    ecx,DWORD PTR [ebp-0x1c]
64013da5:	mov    BYTE PTR [ecx],0x30
64013da8:	inc    eax
64013da9:	jmp    0x64013dd5
64013dab:	test   ebx,ebx
64013dad:	jne    0x64013db7
64013daf:	mov    eax,ds:0x640288e4
64013db4:	mov    DWORD PTR [ebp-0x1c],eax
64013db7:	mov    eax,DWORD PTR [ebp-0x1c]
64013dba:	mov    DWORD PTR [ebp-0x34],0x1
64013dc1:	jmp    0x64013dcc
64013dc3:	dec    edi
64013dc4:	cmp    WORD PTR [eax],0x0
64013dc8:	je     0x64013dd0
64013dca:	inc    eax
64013dcb:	inc    eax
64013dcc:	test   edi,edi
64013dce:	jne    0x64013dc3
64013dd0:	sub    eax,DWORD PTR [ebp-0x1c]
64013dd3:	sar    eax,1
64013dd5:	mov    DWORD PTR [ebp-0x20],eax
64013dd8:	cmp    DWORD PTR [ebp-0x48],0x0
64013ddc:	jne    0x64013ee1
64013de2:	mov    eax,DWORD PTR [ebp-0x14]
64013de5:	test   al,0x40
64013de7:	je     0x64013e14
64013de9:	test   ax,0x100
64013ded:	je     0x64013df7
64013def:	mov    WORD PTR [ebp-0x44],0x2d
64013df5:	jmp    0x64013e0d
64013df7:	test   al,0x1
64013df9:	je     0x64013e03
64013dfb:	mov    WORD PTR [ebp-0x44],0x2b
64013e01:	jmp    0x64013e0d
64013e03:	test   al,0x2
64013e05:	je     0x64013e14
64013e07:	mov    WORD PTR [ebp-0x44],0x20
64013e0d:	mov    DWORD PTR [ebp-0x30],0x1
64013e14:	mov    ebx,DWORD PTR [ebp-0x38]
64013e17:	mov    esi,DWORD PTR [ebp-0x20]
64013e1a:	sub    ebx,esi
64013e1c:	sub    ebx,DWORD PTR [ebp-0x30]
64013e1f:	test   BYTE PTR [ebp-0x14],0xc
64013e23:	jne    0x64013e36
64013e25:	push   DWORD PTR [ebp-0x3c]
64013e28:	lea    eax,[ebp-0x2c]
64013e2b:	push   ebx
64013e2c:	push   0x20
64013e2e:	call   0x640135ea
64013e33:	add    esp,0xc
64013e36:	push   DWORD PTR [ebp-0x30]
64013e39:	mov    edi,DWORD PTR [ebp-0x3c]
64013e3c:	lea    eax,[ebp-0x2c]
64013e3f:	lea    ecx,[ebp-0x44]
64013e42:	call   0x6401360f
64013e47:	test   BYTE PTR [ebp-0x14],0x8
64013e4b:	pop    ecx
64013e4c:	je     0x64013e63
64013e4e:	test   BYTE PTR [ebp-0x14],0x4
64013e52:	jne    0x64013e63
64013e54:	push   edi
64013e55:	push   ebx
64013e56:	push   0x30
64013e58:	lea    eax,[ebp-0x2c]
64013e5b:	call   0x640135ea
64013e60:	add    esp,0xc
64013e63:	cmp    DWORD PTR [ebp-0x34],0x0
64013e67:	jne    0x64013eb7
64013e69:	test   esi,esi
64013e6b:	jle    0x64013eb7
64013e6d:	mov    edi,DWORD PTR [ebp-0x1c]
64013e70:	mov    DWORD PTR [ebp-0x24],esi
64013e73:	dec    DWORD PTR [ebp-0x24]
64013e76:	lea    eax,[ebp-0x64]
64013e79:	push   eax
64013e7a:	mov    eax,DWORD PTR [ebp-0x64]
64013e7d:	push   DWORD PTR [eax+0xac]
64013e83:	lea    eax,[ebp-0x70]
64013e86:	push   edi
64013e87:	push   eax
64013e88:	call   0x640193ee
64013e8d:	add    esp,0x10
64013e90:	test   eax,eax
64013e92:	mov    DWORD PTR [ebp-0x7c],eax
64013e95:	jle    0x64013eb1
64013e97:	push   DWORD PTR [ebp-0x70]
64013e9a:	mov    eax,DWORD PTR [ebp-0x3c]
64013e9d:	lea    esi,[ebp-0x2c]
64013ea0:	call   0x640135c5
64013ea5:	add    edi,DWORD PTR [ebp-0x7c]
64013ea8:	cmp    DWORD PTR [ebp-0x24],0x0
64013eac:	pop    ecx
64013ead:	jg     0x64013e73
64013eaf:	jmp    0x64013ec4
64013eb1:	or     DWORD PTR [ebp-0x2c],0xffffffff
64013eb5:	jmp    0x64013ec4
64013eb7:	mov    ecx,DWORD PTR [ebp-0x1c]
64013eba:	push   esi
64013ebb:	lea    eax,[ebp-0x2c]
64013ebe:	call   0x6401360f
64013ec3:	pop    ecx
64013ec4:	cmp    DWORD PTR [ebp-0x2c],0x0
64013ec8:	jl     0x64013ee1
64013eca:	test   BYTE PTR [ebp-0x14],0x4
64013ece:	je     0x64013ee1
64013ed0:	push   DWORD PTR [ebp-0x3c]
64013ed3:	lea    eax,[ebp-0x2c]
64013ed6:	push   ebx
64013ed7:	push   0x20
64013ed9:	call   0x640135ea
64013ede:	add    esp,0xc
64013ee1:	cmp    DWORD PTR [ebp-0x50],0x0
64013ee5:	je     0x64013ef4
64013ee7:	push   DWORD PTR [ebp-0x50]
64013eea:	call   0x640101e6
64013eef:	and    DWORD PTR [ebp-0x50],0x0
64013ef3:	pop    ecx
64013ef4:	mov    esi,DWORD PTR [ebp-0x4c]
64013ef7:	movzx  eax,WORD PTR [esi]
64013efa:	test   ax,ax
64013efd:	mov    DWORD PTR [ebp-0x24],eax
64013f00:	je     0x64013f26
64013f02:	mov    ecx,DWORD PTR [ebp-0x68]
64013f05:	mov    ebx,DWORD PTR [ebp-0x28]
64013f08:	mov    edx,eax
64013f0a:	jmp    0x64013709
64013f0f:	call   0x64011120
64013f14:	mov    DWORD PTR [eax],0x16
64013f1a:	xor    eax,eax
64013f1c:	push   eax
64013f1d:	push   eax
64013f1e:	push   eax
64013f1f:	push   eax
64013f20:	push   eax
64013f21:	jmp    0x640136ce
64013f26:	cmp    BYTE PTR [ebp-0x58],0x0
64013f2a:	je     0x64013f33
64013f2c:	mov    eax,DWORD PTR [ebp-0x5c]
64013f2f:	and    DWORD PTR [eax+0x70],0xfffffffd
64013f33:	mov    eax,DWORD PTR [ebp-0x2c]
64013f36:	mov    ecx,DWORD PTR [ebp+0x3f0]
64013f3c:	pop    edi
64013f3d:	pop    esi
64013f3e:	xor    ecx,ebp
64013f40:	pop    ebx
64013f41:	call   0x6400f34e
64013f46:	add    ebp,0x3f4
64013f4c:	leave  
64013f4d:	ret    
64013f4e:	or     eax,0x55640139
64013f53:	aaa    
64013f54:	add    DWORD PTR [edx+esi*2+0x37],esp
64013f58:	add    DWORD PTR [eax+eax*8+0x37],esp
64013f5c:	add    DWORD PTR [ebx+edi*8+0x37],esp
64013f60:	add    DWORD PTR [esp+eax*1+0x38],esp
64013f64:	add    DWORD PTR [esp+edi*1+0x38],esp
64013f68:	add    DWORD PTR [ebp+eiz*1+0x39],esp
64013f6c:	add    DWORD PTR [ebp+edx*2-0x73],esp
64013f70:	lods   al,BYTE PTR ds:[esi]
64013f71:	and    al,0xc
64013f73:	cld    
64013f74:	(bad)  
64013f75:	inc    DWORD PTR [ecx+0x474ec]
64013f7b:	add    BYTE PTR [ecx+0x64028038],ah
64013f81:	xor    eax,ebp
64013f83:	mov    DWORD PTR [ebp+0x3f0],eax
64013f89:	push   ebx
64013f8a:	mov    ebx,DWORD PTR [ebp+0x408]
64013f90:	push   esi
64013f91:	mov    esi,DWORD PTR [ebp+0x3fc]
64013f97:	xor    eax,eax
64013f99:	push   edi
64013f9a:	push   DWORD PTR [ebp+0x404]
64013fa0:	mov    edi,DWORD PTR [ebp+0x400]
64013fa6:	lea    ecx,[ebp-0x58]
64013fa9:	mov    DWORD PTR [ebp-0x48],esi
64013fac:	mov    DWORD PTR [ebp-0x24],ebx
64013faf:	mov    DWORD PTR [ebp-0x60],eax
64013fb2:	mov    DWORD PTR [ebp-0x14],eax
64013fb5:	mov    DWORD PTR [ebp-0x38],eax
64013fb8:	mov    DWORD PTR [ebp-0x18],eax
64013fbb:	mov    DWORD PTR [ebp-0x30],eax
64013fbe:	mov    DWORD PTR [ebp-0x5c],eax
64013fc1:	mov    DWORD PTR [ebp-0x34],eax
64013fc4:	call   0x6400f4f1
64013fc9:	test   esi,esi
64013fcb:	jne    0x64013ffc
64013fcd:	call   0x64011120
64013fd2:	mov    DWORD PTR [eax],0x16
64013fd8:	xor    eax,eax
64013fda:	push   eax
64013fdb:	push   eax
64013fdc:	push   eax
64013fdd:	push   eax
64013fde:	push   eax
64013fdf:	call   0x6400ee86
64013fe4:	add    esp,0x14
64013fe7:	cmp    BYTE PTR [ebp-0x4c],0x0
64013feb:	je     0x64013ff4
64013fed:	mov    eax,DWORD PTR [ebp-0x50]
64013ff0:	and    DWORD PTR [eax+0x70],0xfffffffd
64013ff4:	or     eax,0xffffffff
64013ff7:	jmp    0x64014852
64013ffc:	xor    esi,esi
64013ffe:	cmp    edi,esi
64014000:	jne    0x64014014
64014002:	call   0x64011120
64014007:	push   esi
64014008:	push   esi
64014009:	push   esi
6401400a:	push   esi
6401400b:	mov    DWORD PTR [eax],0x16
64014011:	push   esi
64014012:	jmp    0x64013fdf
64014014:	movzx  ecx,WORD PTR [edi]
64014017:	cmp    cx,si
6401401a:	mov    DWORD PTR [ebp-0x2c],esi
6401401d:	mov    DWORD PTR [ebp-0x20],esi
64014020:	mov    DWORD PTR [ebp-0x40],esi
64014023:	mov    DWORD PTR [ebp-0x64],esi
64014026:	mov    DWORD PTR [ebp-0x28],ecx
64014029:	je     0x64014842
6401402f:	push   0x2
64014031:	pop    esi
64014032:	add    edi,esi
64014034:	xor    eax,eax
64014036:	cmp    DWORD PTR [ebp-0x2c],eax
64014039:	mov    DWORD PTR [ebp-0x6c],edi
6401403c:	jl     0x64014832
64014042:	lea    edx,[ecx-0x20]
64014045:	cmp    dx,0x58
64014049:	ja     0x64014058
6401404b:	movzx  eax,cx
6401404e:	movzx  eax,BYTE PTR [eax+0x64023380]
64014055:	and    eax,0xf
64014058:	mov    edx,DWORD PTR [ebp-0x40]
6401405b:	imul   eax,eax,0x9
6401405e:	movzx  eax,BYTE PTR [eax+edx*1+0x640233a0]
64014066:	push   0x8
64014068:	shr    eax,0x4
6401406b:	pop    edx
6401406c:	cmp    eax,edx
6401406e:	mov    DWORD PTR [ebp-0x40],eax
64014071:	je     0x64013fcd
64014077:	cmp    eax,0x7
6401407a:	ja     0x6401481a
64014080:	jmp    DWORD PTR [eax*4+0x6401486a]
64014087:	xor    eax,eax
64014089:	or     DWORD PTR [ebp-0x18],0xffffffff
6401408d:	mov    DWORD PTR [ebp-0x68],eax
64014090:	mov    DWORD PTR [ebp-0x5c],eax
64014093:	mov    DWORD PTR [ebp-0x38],eax
64014096:	mov    DWORD PTR [ebp-0x30],eax
64014099:	mov    DWORD PTR [ebp-0x14],eax
6401409c:	mov    DWORD PTR [ebp-0x34],eax
6401409f:	jmp    0x64014820
640140a4:	movzx  eax,cx
640140a7:	sub    eax,0x20
640140aa:	je     0x640140e8
640140ac:	sub    eax,0x3
640140af:	je     0x640140dc
640140b1:	sub    eax,edx
640140b3:	je     0x640140d3
640140b5:	sub    eax,esi
640140b7:	je     0x640140ca
640140b9:	sub    eax,0x3
640140bc:	jne    0x6401481a
640140c2:	or     DWORD PTR [ebp-0x14],edx
640140c5:	jmp    0x64014820
640140ca:	or     DWORD PTR [ebp-0x14],0x4
640140ce:	jmp    0x64014820
640140d3:	or     DWORD PTR [ebp-0x14],0x1
640140d7:	jmp    0x64014820
640140dc:	or     DWORD PTR [ebp-0x14],0x80
640140e3:	jmp    0x64014820
640140e8:	or     DWORD PTR [ebp-0x14],esi
640140eb:	jmp    0x64014820
640140f0:	cmp    cx,0x2a
640140f4:	jne    0x64014115
640140f6:	mov    eax,DWORD PTR [ebx]
640140f8:	add    ebx,0x4
640140fb:	test   eax,eax
640140fd:	mov    DWORD PTR [ebp-0x24],ebx
64014100:	mov    DWORD PTR [ebp-0x38],eax
64014103:	jge    0x64014820
64014109:	or     DWORD PTR [ebp-0x14],0x4
6401410d:	neg    DWORD PTR [ebp-0x38]
64014110:	jmp    0x64014820
64014115:	mov    eax,DWORD PTR [ebp-0x38]
64014118:	imul   eax,eax,0xa
6401411b:	movzx  ecx,cx
6401411e:	lea    eax,[eax+ecx*1-0x30]
64014122:	mov    DWORD PTR [ebp-0x38],eax
64014125:	jmp    0x64014820
6401412a:	and    DWORD PTR [ebp-0x18],0x0
6401412e:	jmp    0x64014820
64014133:	cmp    cx,0x2a
64014137:	jne    0x64014155
64014139:	mov    eax,DWORD PTR [ebx]
6401413b:	add    ebx,0x4
6401413e:	test   eax,eax
64014140:	mov    DWORD PTR [ebp-0x24],ebx
64014143:	mov    DWORD PTR [ebp-0x18],eax
64014146:	jge    0x64014820
6401414c:	or     DWORD PTR [ebp-0x18],0xffffffff
64014150:	jmp    0x64014820
64014155:	mov    eax,DWORD PTR [ebp-0x18]
64014158:	imul   eax,eax,0xa
6401415b:	movzx  ecx,cx
6401415e:	lea    eax,[eax+ecx*1-0x30]
64014162:	mov    DWORD PTR [ebp-0x18],eax
64014165:	jmp    0x64014820
6401416a:	movzx  eax,cx
6401416d:	cmp    eax,0x49
64014170:	je     0x640141b7
64014172:	cmp    eax,0x68
64014175:	je     0x640141ae
64014177:	cmp    eax,0x6c
6401417a:	je     0x64014191
6401417c:	cmp    eax,0x77
6401417f:	jne    0x64014820
64014185:	or     DWORD PTR [ebp-0x14],0x800
6401418c:	jmp    0x64014820
64014191:	cmp    WORD PTR [edi],0x6c
64014195:	jne    0x640141a5
64014197:	add    edi,esi
64014199:	or     DWORD PTR [ebp-0x14],0x1000
640141a0:	jmp    0x64014820
640141a5:	or     DWORD PTR [ebp-0x14],0x10
640141a9:	jmp    0x64014820
640141ae:	or     DWORD PTR [ebp-0x14],0x20
640141b2:	jmp    0x64014820
640141b7:	movzx  eax,WORD PTR [edi]
640141ba:	cmp    ax,0x36
640141be:	jne    0x640141d6
640141c0:	cmp    WORD PTR [edi+0x2],0x34
640141c5:	jne    0x640141d6
640141c7:	add    edi,0x4
640141ca:	or     DWORD PTR [ebp-0x14],0x8000
640141d1:	jmp    0x64014820
640141d6:	cmp    ax,0x33
640141da:	jne    0x640141f2
640141dc:	cmp    WORD PTR [edi+0x2],0x32
640141e1:	jne    0x640141f2
640141e3:	add    edi,0x4
640141e6:	and    DWORD PTR [ebp-0x14],0xffff7fff
640141ed:	jmp    0x64014820
640141f2:	cmp    ax,0x64
640141f6:	je     0x64014820
640141fc:	cmp    ax,0x69
64014200:	je     0x64014820
64014206:	cmp    ax,0x6f
6401420a:	je     0x64014820
64014210:	cmp    ax,0x75
64014214:	je     0x64014820
6401421a:	cmp    ax,0x78
6401421e:	je     0x64014820
64014224:	cmp    ax,0x58
64014228:	je     0x64014820
6401422e:	and    DWORD PTR [ebp-0x40],0x0
64014232:	mov    eax,DWORD PTR [ebp-0x48]
64014235:	push   ecx
64014236:	lea    esi,[ebp-0x2c]
64014239:	mov    DWORD PTR [ebp-0x34],0x1
64014240:	call   0x640135c5
64014245:	pop    ecx
64014246:	jmp    0x64014820
6401424b:	movzx  eax,cx
6401424e:	cmp    eax,0x64
64014251:	jg     0x640143ff
64014257:	je     0x6401447a
6401425d:	cmp    eax,0x53
64014260:	jg     0x6401433d
64014266:	je     0x640142c7
64014268:	sub    eax,0x41
6401426b:	je     0x6401427d
6401426d:	sub    eax,esi
6401426f:	je     0x640142b2
64014271:	sub    eax,esi
64014273:	je     0x6401427d
64014275:	sub    eax,esi
64014277:	jne    0x640146fe
6401427d:	add    ecx,0x20
64014280:	mov    DWORD PTR [ebp-0x68],0x1
64014287:	mov    DWORD PTR [ebp-0x28],ecx
6401428a:	or     DWORD PTR [ebp-0x14],0x40
6401428e:	cmp    DWORD PTR [ebp-0x18],0x0
64014292:	lea    esi,[ebp-0x10]
64014295:	mov    eax,0x200
6401429a:	mov    DWORD PTR [ebp-0x1c],esi
6401429d:	mov    DWORD PTR [ebp-0x20],eax
640142a0:	jge    0x6401449e
640142a6:	mov    DWORD PTR [ebp-0x18],0x6
640142ad:	jmp    0x640144ee
640142b2:	test   WORD PTR [ebp-0x14],0x830
640142b8:	jne    0x6401435b
640142be:	or     DWORD PTR [ebp-0x14],0x20
640142c2:	jmp    0x6401435b
640142c7:	test   WORD PTR [ebp-0x14],0x830
640142cd:	jne    0x640142d3
640142cf:	or     DWORD PTR [ebp-0x14],0x20
640142d3:	mov    edi,DWORD PTR [ebp-0x18]
640142d6:	cmp    edi,0xffffffff
640142d9:	jne    0x640142e0
640142db:	mov    edi,0x7fffffff
640142e0:	add    ebx,0x4
640142e3:	test   BYTE PTR [ebp-0x14],0x20
640142e7:	mov    DWORD PTR [ebp-0x24],ebx
640142ea:	mov    ebx,DWORD PTR [ebx-0x4]
640142ed:	mov    DWORD PTR [ebp-0x1c],ebx
640142f0:	je     0x640146d1
640142f6:	test   ebx,ebx
640142f8:	jne    0x64014302
640142fa:	mov    eax,ds:0x640288e0
640142ff:	mov    DWORD PTR [ebp-0x1c],eax
64014302:	and    DWORD PTR [ebp-0x20],0x0
64014306:	test   edi,edi
64014308:	mov    esi,DWORD PTR [ebp-0x1c]
6401430b:	jle    0x640146fe
64014311:	mov    al,BYTE PTR [esi]
64014313:	test   al,al
64014315:	je     0x640146fe
6401431b:	lea    ecx,[ebp-0x58]
6401431e:	movzx  eax,al
64014321:	push   ecx
64014322:	push   eax
64014323:	call   0x640167b0
64014328:	test   eax,eax
6401432a:	pop    ecx
6401432b:	pop    ecx
6401432c:	je     0x6401432f
6401432e:	inc    esi
6401432f:	inc    esi
64014330:	inc    DWORD PTR [ebp-0x20]
64014333:	cmp    DWORD PTR [ebp-0x20],edi
64014336:	jl     0x64014311
64014338:	jmp    0x640146fe
6401433d:	sub    eax,0x58
64014340:	je     0x64014585
64014346:	sub    eax,esi
64014348:	je     0x640143b2
6401434a:	sub    eax,0x7
6401434d:	je     0x6401428a
64014353:	sub    eax,esi
64014355:	jne    0x640146fe
6401435b:	movzx  eax,WORD PTR [ebx]
6401435e:	add    ebx,0x4
64014361:	xor    esi,esi
64014363:	inc    esi
64014364:	test   BYTE PTR [ebp-0x14],0x20
64014368:	mov    DWORD PTR [ebp-0x34],esi
6401436b:	mov    DWORD PTR [ebp-0x24],ebx
6401436e:	mov    DWORD PTR [ebp-0x70],eax
64014371:	je     0x640143a0
64014373:	mov    BYTE PTR [ebp-0x44],al
64014376:	lea    eax,[ebp-0x58]
64014379:	push   eax
6401437a:	mov    eax,DWORD PTR [ebp-0x58]
6401437d:	mov    BYTE PTR [ebp-0x43],0x0
64014381:	push   DWORD PTR [eax+0xac]
64014387:	lea    eax,[ebp-0x44]
6401438a:	push   eax
6401438b:	lea    eax,[ebp-0x10]
6401438e:	push   eax
6401438f:	call   0x640193ee
64014394:	add    esp,0x10
64014397:	test   eax,eax
64014399:	jge    0x640143a4
6401439b:	mov    DWORD PTR [ebp-0x5c],esi
6401439e:	jmp    0x640143a4
640143a0:	mov    WORD PTR [ebp-0x10],ax
640143a4:	lea    eax,[ebp-0x10]
640143a7:	mov    DWORD PTR [ebp-0x1c],eax
640143aa:	mov    DWORD PTR [ebp-0x20],esi
640143ad:	jmp    0x640146fe
640143b2:	mov    eax,DWORD PTR [ebx]
640143b4:	add    ebx,0x4
640143b7:	test   eax,eax
640143b9:	mov    DWORD PTR [ebp-0x24],ebx
640143bc:	je     0x640143eb
640143be:	mov    ecx,DWORD PTR [eax+0x4]
640143c1:	test   ecx,ecx
640143c3:	je     0x640143eb
640143c5:	test   WORD PTR [ebp-0x14],0x800
640143cb:	movsx  eax,WORD PTR [eax]
640143ce:	mov    DWORD PTR [ebp-0x1c],ecx
640143d1:	je     0x640143e2
640143d3:	cdq    
640143d4:	sub    eax,edx
640143d6:	mov    DWORD PTR [ebp-0x34],0x1
640143dd:	jmp    0x640146f9
640143e2:	and    DWORD PTR [ebp-0x34],0x0
640143e6:	jmp    0x640146fb
640143eb:	mov    eax,ds:0x640288e0
640143f0:	mov    DWORD PTR [ebp-0x1c],eax
640143f3:	push   eax
640143f4:	call   0x64010b20
640143f9:	pop    ecx
640143fa:	jmp    0x640146fb
640143ff:	cmp    eax,0x70
64014402:	jg     0x6401458e
64014408:	je     0x64014582
6401440e:	cmp    eax,0x65
64014411:	jl     0x640146fe
64014417:	cmp    eax,0x67
6401441a:	jle    0x6401428a
64014420:	cmp    eax,0x69
64014423:	je     0x6401447a
64014425:	cmp    eax,0x6e
64014428:	je     0x64014445
6401442a:	cmp    eax,0x6f
6401442d:	jne    0x640146fe
64014433:	test   BYTE PTR [ebp-0x14],0x80
64014437:	mov    DWORD PTR [ebp-0x28],edx
6401443a:	je     0x64014485
6401443c:	or     DWORD PTR [ebp-0x14],0x200
64014443:	jmp    0x64014485
64014445:	mov    esi,DWORD PTR [ebx]
64014447:	add    ebx,0x4
6401444a:	mov    DWORD PTR [ebp-0x24],ebx
6401444d:	call   0x640193d8
64014452:	test   eax,eax
64014454:	je     0x64013fcd
6401445a:	test   BYTE PTR [ebp-0x14],0x20
6401445e:	je     0x64014469
64014460:	mov    ax,WORD PTR [ebp-0x2c]
64014464:	mov    WORD PTR [esi],ax
64014467:	jmp    0x6401446e
64014469:	mov    eax,DWORD PTR [ebp-0x2c]
6401446c:	mov    DWORD PTR [esi],eax
6401446e:	mov    DWORD PTR [ebp-0x5c],0x1
64014475:	jmp    0x64014807
6401447a:	or     DWORD PTR [ebp-0x14],0x40
6401447e:	mov    DWORD PTR [ebp-0x28],0xa
64014485:	test   WORD PTR [ebp-0x14],0x8000
6401448b:	je     0x640145d8
64014491:	add    ebx,edx
64014493:	mov    eax,DWORD PTR [ebx-0x8]
64014496:	mov    edx,DWORD PTR [ebx-0x4]
64014499:	jmp    0x64014611
6401449e:	jne    0x640144af
640144a0:	cmp    cx,0x67
640144a4:	jne    0x640144ee
640144a6:	mov    DWORD PTR [ebp-0x18],0x1
640144ad:	jmp    0x640144ee
640144af:	cmp    DWORD PTR [ebp-0x18],eax
640144b2:	jle    0x640144b7
640144b4:	mov    DWORD PTR [ebp-0x18],eax
640144b7:	cmp    DWORD PTR [ebp-0x18],0xa3
640144be:	jle    0x640144ee
640144c0:	mov    edi,DWORD PTR [ebp-0x18]
640144c3:	add    edi,0x15d
640144c9:	push   edi
640144ca:	call   0x64012630
640144cf:	test   eax,eax
640144d1:	pop    ecx
640144d2:	mov    ecx,DWORD PTR [ebp-0x28]
640144d5:	push   0x8
640144d7:	mov    DWORD PTR [ebp-0x64],eax
640144da:	pop    edx
640144db:	je     0x640144e7
640144dd:	mov    DWORD PTR [ebp-0x1c],eax
640144e0:	mov    DWORD PTR [ebp-0x20],edi
640144e3:	mov    esi,eax
640144e5:	jmp    0x640144ee
640144e7:	mov    DWORD PTR [ebp-0x18],0xa3
640144ee:	add    ebx,edx
640144f0:	mov    eax,DWORD PTR [ebx-0x8]
640144f3:	mov    DWORD PTR [ebp-0x78],eax
640144f6:	mov    eax,DWORD PTR [ebx-0x4]
640144f9:	mov    DWORD PTR [ebp-0x74],eax
640144fc:	lea    eax,[ebp-0x58]
640144ff:	push   eax
64014500:	push   DWORD PTR [ebp-0x68]
64014503:	movsx  eax,cl
64014506:	push   DWORD PTR [ebp-0x18]
64014509:	mov    DWORD PTR [ebp-0x24],ebx
6401450c:	push   eax
6401450d:	push   DWORD PTR [ebp-0x20]
64014510:	lea    eax,[ebp-0x78]
64014513:	push   esi
64014514:	push   eax
64014515:	push   DWORD PTR ds:0x64028af4
6401451b:	call   0x6401124f
64014520:	pop    ecx
64014521:	call   eax
64014523:	mov    ebx,DWORD PTR [ebp-0x14]
64014526:	add    esp,0x1c
64014529:	and    ebx,0x80
6401452f:	je     0x6401454c
64014531:	cmp    DWORD PTR [ebp-0x18],0x0
64014535:	jne    0x6401454c
64014537:	lea    eax,[ebp-0x58]
6401453a:	push   eax
6401453b:	push   esi
6401453c:	push   DWORD PTR ds:0x64028b00
64014542:	call   0x6401124f
64014547:	pop    ecx
64014548:	call   eax
6401454a:	pop    ecx
6401454b:	pop    ecx
6401454c:	cmp    WORD PTR [ebp-0x28],0x67
64014551:	jne    0x6401456c
64014553:	test   ebx,ebx
64014555:	jne    0x6401456c
64014557:	lea    eax,[ebp-0x58]
6401455a:	push   eax
6401455b:	push   esi
6401455c:	push   DWORD PTR ds:0x64028afc
64014562:	call   0x6401124f
64014567:	pop    ecx
64014568:	call   eax
6401456a:	pop    ecx
6401456b:	pop    ecx
6401456c:	cmp    BYTE PTR [esi],0x2d
6401456f:	jne    0x6401457c
64014571:	or     DWORD PTR [ebp-0x14],0x100
64014578:	inc    esi
64014579:	mov    DWORD PTR [ebp-0x1c],esi
6401457c:	push   esi
6401457d:	jmp    0x640143f4
64014582:	mov    DWORD PTR [ebp-0x18],edx
64014585:	mov    DWORD PTR [ebp-0x60],0x7
6401458c:	jmp    0x640145af
6401458e:	sub    eax,0x73
64014591:	je     0x640142d3
64014597:	sub    eax,esi
64014599:	je     0x6401447e
6401459f:	sub    eax,0x3
640145a2:	jne    0x640146fe
640145a8:	mov    DWORD PTR [ebp-0x60],0x27
640145af:	test   BYTE PTR [ebp-0x14],0x80
640145b3:	mov    DWORD PTR [ebp-0x28],0x10
640145ba:	je     0x64014485
640145c0:	mov    eax,DWORD PTR [ebp-0x60]
640145c3:	add    eax,0x51
640145c6:	mov    WORD PTR [ebp-0x3c],0x30
640145cc:	mov    WORD PTR [ebp-0x3a],ax
640145d0:	mov    DWORD PTR [ebp-0x30],esi
640145d3:	jmp    0x64014485
640145d8:	test   WORD PTR [ebp-0x14],0x1000
640145de:	jne    0x64014491
640145e4:	add    ebx,0x4
640145e7:	test   BYTE PTR [ebp-0x14],0x20
640145eb:	je     0x64014603
640145ed:	test   BYTE PTR [ebp-0x14],0x40
640145f1:	mov    DWORD PTR [ebp-0x24],ebx
640145f4:	je     0x640145fc
640145f6:	movsx  eax,WORD PTR [ebx-0x4]
640145fa:	jmp    0x64014600
640145fc:	movzx  eax,WORD PTR [ebx-0x4]
64014600:	cdq    
64014601:	jmp    0x64014614
64014603:	test   BYTE PTR [ebp-0x14],0x40
64014607:	mov    eax,DWORD PTR [ebx-0x4]
6401460a:	je     0x6401460f
6401460c:	cdq    
6401460d:	jmp    0x64014611
6401460f:	xor    edx,edx
64014611:	mov    DWORD PTR [ebp-0x24],ebx
64014614:	test   BYTE PTR [ebp-0x14],0x40
64014618:	je     0x64014632
6401461a:	test   edx,edx
6401461c:	jg     0x64014632
6401461e:	jl     0x64014624
64014620:	test   eax,eax
64014622:	jae    0x64014632
64014624:	neg    eax
64014626:	adc    edx,0x0
64014629:	neg    edx
6401462b:	or     DWORD PTR [ebp-0x14],0x100
64014632:	test   WORD PTR [ebp-0x14],0x9000
64014638:	mov    ebx,edx
6401463a:	mov    edi,eax
6401463c:	jne    0x64014640
6401463e:	xor    ebx,ebx
64014640:	cmp    DWORD PTR [ebp-0x18],0x0
64014644:	jge    0x6401464f
64014646:	mov    DWORD PTR [ebp-0x18],0x1
6401464d:	jmp    0x64014660
6401464f:	and    DWORD PTR [ebp-0x14],0xfffffff7
64014653:	mov    eax,0x200
64014658:	cmp    DWORD PTR [ebp-0x18],eax
6401465b:	jle    0x64014660
6401465d:	mov    DWORD PTR [ebp-0x18],eax
64014660:	mov    eax,edi
64014662:	or     eax,ebx
64014664:	jne    0x64014669
64014666:	and    DWORD PTR [ebp-0x30],eax
64014669:	lea    esi,[ebp+0x1ef]
6401466f:	mov    eax,DWORD PTR [ebp-0x18]
64014672:	dec    DWORD PTR [ebp-0x18]
64014675:	test   eax,eax
64014677:	jg     0x6401467f
64014679:	mov    eax,edi
6401467b:	or     eax,ebx
6401467d:	je     0x640146a3
6401467f:	mov    eax,DWORD PTR [ebp-0x28]
64014682:	cdq    
64014683:	push   edx
64014684:	push   eax
64014685:	push   ebx
64014686:	push   edi
64014687:	call   0x64016280
6401468c:	add    ecx,0x30
6401468f:	cmp    ecx,0x39
64014692:	mov    DWORD PTR [ebp-0x7c],ebx
64014695:	mov    edi,eax
64014697:	mov    ebx,edx
64014699:	jle    0x6401469e
6401469b:	add    ecx,DWORD PTR [ebp-0x60]
6401469e:	mov    BYTE PTR [esi],cl
640146a0:	dec    esi
640146a1:	jmp    0x6401466f
640146a3:	lea    eax,[ebp+0x1ef]
640146a9:	sub    eax,esi
640146ab:	inc    esi
640146ac:	test   WORD PTR [ebp-0x14],0x200
640146b2:	mov    DWORD PTR [ebp-0x20],eax
640146b5:	mov    DWORD PTR [ebp-0x1c],esi
640146b8:	je     0x640146fe
640146ba:	test   eax,eax
640146bc:	je     0x640146c5
640146be:	mov    ecx,esi
640146c0:	cmp    BYTE PTR [ecx],0x30
640146c3:	je     0x640146fe
640146c5:	dec    DWORD PTR [ebp-0x1c]
640146c8:	mov    ecx,DWORD PTR [ebp-0x1c]
640146cb:	mov    BYTE PTR [ecx],0x30
640146ce:	inc    eax
640146cf:	jmp    0x640146fb
640146d1:	test   ebx,ebx
640146d3:	jne    0x640146dd
640146d5:	mov    eax,ds:0x640288e4
640146da:	mov    DWORD PTR [ebp-0x1c],eax
640146dd:	mov    eax,DWORD PTR [ebp-0x1c]
640146e0:	mov    DWORD PTR [ebp-0x34],0x1
640146e7:	jmp    0x640146f2
640146e9:	dec    edi
640146ea:	cmp    WORD PTR [eax],0x0
640146ee:	je     0x640146f6
640146f0:	add    eax,esi
640146f2:	test   edi,edi
640146f4:	jne    0x640146e9
640146f6:	sub    eax,DWORD PTR [ebp-0x1c]
640146f9:	sar    eax,1
640146fb:	mov    DWORD PTR [ebp-0x20],eax
640146fe:	cmp    DWORD PTR [ebp-0x5c],0x0
64014702:	jne    0x64014807
64014708:	mov    eax,DWORD PTR [ebp-0x14]
6401470b:	test   al,0x40
6401470d:	je     0x6401473a
6401470f:	test   ax,0x100
64014713:	je     0x6401471d
64014715:	mov    WORD PTR [ebp-0x3c],0x2d
6401471b:	jmp    0x64014733
6401471d:	test   al,0x1
6401471f:	je     0x64014729
64014721:	mov    WORD PTR [ebp-0x3c],0x2b
64014727:	jmp    0x64014733
64014729:	test   al,0x2
6401472b:	je     0x6401473a
6401472d:	mov    WORD PTR [ebp-0x3c],0x20
64014733:	mov    DWORD PTR [ebp-0x30],0x1
6401473a:	mov    ebx,DWORD PTR [ebp-0x38]
6401473d:	mov    esi,DWORD PTR [ebp-0x20]
64014740:	sub    ebx,esi
64014742:	sub    ebx,DWORD PTR [ebp-0x30]
64014745:	test   BYTE PTR [ebp-0x14],0xc
64014749:	jne    0x6401475c
6401474b:	push   DWORD PTR [ebp-0x48]
6401474e:	lea    eax,[ebp-0x2c]
64014751:	push   ebx
64014752:	push   0x20
64014754:	call   0x640135ea
64014759:	add    esp,0xc
6401475c:	push   DWORD PTR [ebp-0x30]
6401475f:	mov    edi,DWORD PTR [ebp-0x48]
64014762:	lea    eax,[ebp-0x2c]
64014765:	lea    ecx,[ebp-0x3c]
64014768:	call   0x6401360f
6401476d:	test   BYTE PTR [ebp-0x14],0x8
64014771:	pop    ecx
64014772:	je     0x64014789
64014774:	test   BYTE PTR [ebp-0x14],0x4
64014778:	jne    0x64014789
6401477a:	push   edi
6401477b:	push   ebx
6401477c:	push   0x30
6401477e:	lea    eax,[ebp-0x2c]
64014781:	call   0x640135ea
64014786:	add    esp,0xc
64014789:	cmp    DWORD PTR [ebp-0x34],0x0
6401478d:	jne    0x640147dd
6401478f:	test   esi,esi
64014791:	jle    0x640147dd
64014793:	mov    edi,DWORD PTR [ebp-0x1c]
64014796:	mov    DWORD PTR [ebp-0x28],esi
64014799:	dec    DWORD PTR [ebp-0x28]
6401479c:	lea    eax,[ebp-0x58]
6401479f:	push   eax
640147a0:	mov    eax,DWORD PTR [ebp-0x58]
640147a3:	push   DWORD PTR [eax+0xac]
640147a9:	lea    eax,[ebp-0x70]
640147ac:	push   edi
640147ad:	push   eax
640147ae:	call   0x640193ee
640147b3:	add    esp,0x10
640147b6:	test   eax,eax
640147b8:	mov    DWORD PTR [ebp-0x7c],eax
640147bb:	jle    0x640147d7
640147bd:	push   DWORD PTR [ebp-0x70]
640147c0:	mov    eax,DWORD PTR [ebp-0x48]
640147c3:	lea    esi,[ebp-0x2c]
640147c6:	call   0x640135c5
640147cb:	add    edi,DWORD PTR [ebp-0x7c]
640147ce:	cmp    DWORD PTR [ebp-0x28],0x0
640147d2:	pop    ecx
640147d3:	jg     0x64014799
640147d5:	jmp    0x640147ea
640147d7:	or     DWORD PTR [ebp-0x2c],0xffffffff
640147db:	jmp    0x640147ea
640147dd:	mov    ecx,DWORD PTR [ebp-0x1c]
640147e0:	push   esi
640147e1:	lea    eax,[ebp-0x2c]
640147e4:	call   0x6401360f
640147e9:	pop    ecx
640147ea:	cmp    DWORD PTR [ebp-0x2c],0x0
640147ee:	jl     0x64014807
640147f0:	test   BYTE PTR [ebp-0x14],0x4
640147f4:	je     0x64014807
640147f6:	push   DWORD PTR [ebp-0x48]
640147f9:	lea    eax,[ebp-0x2c]
640147fc:	push   ebx
640147fd:	push   0x20
640147ff:	call   0x640135ea
64014804:	add    esp,0xc
64014807:	cmp    DWORD PTR [ebp-0x64],0x0
6401480b:	je     0x6401481a
6401480d:	push   DWORD PTR [ebp-0x64]
64014810:	call   0x640101e6
64014815:	and    DWORD PTR [ebp-0x64],0x0
64014819:	pop    ecx
6401481a:	mov    edi,DWORD PTR [ebp-0x6c]
6401481d:	mov    ebx,DWORD PTR [ebp-0x24]
64014820:	movzx  eax,WORD PTR [edi]
64014823:	test   ax,ax
64014826:	mov    DWORD PTR [ebp-0x28],eax
64014829:	je     0x64014832
6401482b:	mov    ecx,eax
6401482d:	jmp    0x6401402f
64014832:	cmp    DWORD PTR [ebp-0x40],0x0
64014836:	je     0x64014842
64014838:	cmp    DWORD PTR [ebp-0x40],0x7
6401483c:	jne    0x64013fcd
64014842:	cmp    BYTE PTR [ebp-0x4c],0x0
64014846:	je     0x6401484f
64014848:	mov    eax,DWORD PTR [ebp-0x50]
6401484b:	and    DWORD PTR [eax+0x70],0xfffffffd
6401484f:	mov    eax,DWORD PTR [ebp-0x2c]
64014852:	mov    ecx,DWORD PTR [ebp+0x3f0]
64014858:	pop    edi
64014859:	pop    esi
6401485a:	xor    ecx,ebp
6401485c:	pop    ebx
6401485d:	call   0x6400f34e
64014862:	add    ebp,0x3f4
64014868:	leave  
64014869:	ret    
6401486a:	xor    al,BYTE PTR [edx+0x1]
6401486d:	xchg   DWORD PTR fs:[eax+0x1],eax
64014871:	movs   BYTE PTR es:[edi],BYTE PTR fs:[esi]
64014873:	inc    eax
64014874:	add    DWORD PTR [eax+esi*8+0x40],esp
64014878:	add    DWORD PTR [edx+ebp*1+0x41],esp
6401487c:	add    DWORD PTR [ebx+esi*1+0x41],esp
64014880:	add    DWORD PTR [edx+ebp*2+0x41],esp
64014884:	add    DWORD PTR [ebx+ecx*2+0x42],esp
64014888:	add    DWORD PTR [ebp+edx*2-0x75],esp
6401488c:	in     al,dx
6401488d:	sub    esp,0x10
64014890:	mov    eax,ds:0x64028038
64014895:	xor    eax,ebp
64014897:	mov    DWORD PTR [ebp-0x4],eax
6401489a:	push   ebx
6401489b:	push   esi
6401489c:	mov    esi,DWORD PTR ds:0x64021140
640148a2:	xor    ebx,ebx
640148a4:	cmp    DWORD PTR ds:0x640298f8,ebx
640148aa:	push   edi
640148ab:	mov    edi,ecx
640148ad:	jne    0x640148e5
640148af:	push   ebx
640148b0:	push   ebx
640148b1:	push   0x1
640148b3:	push   0x64021cdc
640148b8:	push   0x100
640148bd:	push   ebx
640148be:	call   esi
640148c0:	test   eax,eax
640148c2:	je     0x640148d0
640148c4:	mov    DWORD PTR ds:0x640298f8,0x1
640148ce:	jmp    0x640148e5
640148d0:	call   DWORD PTR ds:0x64021044
640148d6:	cmp    eax,0x78
640148d9:	jne    0x640148e5
640148db:	mov    DWORD PTR ds:0x640298f8,0x2
640148e5:	cmp    DWORD PTR [ebp+0x14],ebx
640148e8:	jle    0x64014907
640148ea:	mov    ecx,DWORD PTR [ebp+0x14]
640148ed:	mov    eax,DWORD PTR [ebp+0x10]
640148f0:	dec    ecx
640148f1:	cmp    WORD PTR [eax],bx
640148f4:	je     0x640148ff
640148f6:	inc    eax
640148f7:	inc    eax
640148f8:	cmp    ecx,ebx
640148fa:	jne    0x640148f0
640148fc:	or     ecx,0xffffffff
640148ff:	or     eax,0xffffffff
64014902:	sub    eax,ecx
64014904:	add    DWORD PTR [ebp+0x14],eax
64014907:	mov    eax,ds:0x640298f8
6401490c:	cmp    eax,0x1
6401490f:	jne    0x6401492a
64014911:	push   DWORD PTR [ebp+0x1c]
64014914:	push   DWORD PTR [ebp+0x18]
64014917:	push   DWORD PTR [ebp+0x14]
6401491a:	push   DWORD PTR [ebp+0x10]
6401491d:	push   DWORD PTR [ebp+0xc]
64014920:	push   DWORD PTR [ebp+0x8]
64014923:	call   esi
64014925:	jmp    0x64014ad9
6401492a:	cmp    eax,0x2
6401492d:	je     0x64014933
6401492f:	cmp    eax,ebx
64014931:	jne    0x64014985
64014933:	cmp    DWORD PTR [ebp+0x8],ebx
64014936:	mov    DWORD PTR [ebp-0xc],ebx
64014939:	jne    0x64014943
6401493b:	mov    eax,DWORD PTR [edi]
6401493d:	mov    eax,DWORD PTR [eax+0x14]
64014940:	mov    DWORD PTR [ebp+0x8],eax
64014943:	cmp    DWORD PTR [ebp+0x20],ebx
64014946:	jne    0x64014950
64014948:	mov    eax,DWORD PTR [edi]
6401494a:	mov    eax,DWORD PTR [eax+0x4]
6401494d:	mov    DWORD PTR [ebp+0x20],eax
64014950:	push   DWORD PTR [ebp+0x8]
64014953:	call   0x64019ec8
64014958:	cmp    DWORD PTR [ebp+0x20],eax
6401495b:	pop    ecx
6401495c:	je     0x64014966
6401495e:	cmp    eax,0xffffffff
64014961:	je     0x64014966
64014963:	mov    DWORD PTR [ebp+0x20],eax
64014966:	mov    esi,DWORD PTR ds:0x64021024
6401496c:	push   ebx
6401496d:	push   ebx
6401496e:	push   ebx
6401496f:	push   ebx
64014970:	push   DWORD PTR [ebp+0x14]
64014973:	push   DWORD PTR [ebp+0x10]
64014976:	push   ebx
64014977:	push   DWORD PTR [ebp+0x20]
6401497a:	call   esi
6401497c:	mov    edi,eax
6401497e:	cmp    edi,ebx
64014980:	mov    DWORD PTR [ebp-0x10],edi
64014983:	jne    0x6401498c
64014985:	xor    eax,eax
64014987:	jmp    0x64014ad9
6401498c:	jle    0x640149d0
6401498e:	push   0xffffffe0
64014990:	xor    edx,edx
64014992:	pop    eax
64014993:	div    edi
64014995:	cmp    eax,0x1
64014998:	jb     0x640149d0
6401499a:	lea    eax,[edi+0x8]
6401499d:	cmp    eax,0x400
640149a2:	ja     0x640149b7
640149a4:	call   0x6400fad0
640149a9:	mov    eax,esp
640149ab:	cmp    eax,ebx
640149ad:	je     0x640149cb
640149af:	mov    DWORD PTR [eax],0xcccc
640149b5:	jmp    0x640149c8
640149b7:	push   eax
640149b8:	call   0x640102c3
640149bd:	cmp    eax,ebx
640149bf:	pop    ecx
640149c0:	je     0x640149cb
640149c2:	mov    DWORD PTR [eax],0xdddd
640149c8:	add    eax,0x8
640149cb:	mov    DWORD PTR [ebp-0x8],eax
640149ce:	jmp    0x640149d3
640149d0:	mov    DWORD PTR [ebp-0x8],ebx
640149d3:	cmp    DWORD PTR [ebp-0x8],ebx
640149d6:	je     0x64014985
640149d8:	push   ebx
640149d9:	push   ebx
640149da:	push   edi
640149db:	push   DWORD PTR [ebp-0x8]
640149de:	push   DWORD PTR [ebp+0x14]
640149e1:	push   DWORD PTR [ebp+0x10]
640149e4:	push   ebx
640149e5:	push   DWORD PTR [ebp+0x20]
640149e8:	call   esi
640149ea:	test   eax,eax
640149ec:	je     0x64014acd
640149f2:	push   ebx
640149f3:	push   ebx
640149f4:	push   edi
640149f5:	push   DWORD PTR [ebp-0x8]
640149f8:	mov    edi,DWORD PTR ds:0x6402113c
640149fe:	push   DWORD PTR [ebp+0xc]
64014a01:	push   DWORD PTR [ebp+0x8]
64014a04:	call   edi
64014a06:	mov    esi,eax
64014a08:	cmp    esi,ebx
64014a0a:	je     0x64014acd
64014a10:	jle    0x64014a51
64014a12:	push   0xffffffe0
64014a14:	xor    edx,edx
64014a16:	pop    eax
64014a17:	div    esi
64014a19:	cmp    eax,0x1
64014a1c:	jb     0x64014a51
64014a1e:	lea    eax,[esi+0x8]
64014a21:	cmp    eax,0x400
64014a26:	ja     0x64014a3b
64014a28:	call   0x6400fad0
64014a2d:	mov    eax,esp
64014a2f:	cmp    eax,ebx
64014a31:	je     0x64014a4f
64014a33:	mov    DWORD PTR [eax],0xcccc
64014a39:	jmp    0x64014a4c
64014a3b:	push   eax
64014a3c:	call   0x640102c3
64014a41:	cmp    eax,ebx
64014a43:	pop    ecx
64014a44:	je     0x64014a4f
64014a46:	mov    DWORD PTR [eax],0xdddd
64014a4c:	add    eax,0x8
64014a4f:	mov    ebx,eax
64014a51:	test   ebx,ebx
64014a53:	je     0x64014acd
64014a55:	push   esi
64014a56:	push   ebx
64014a57:	push   DWORD PTR [ebp-0x10]
64014a5a:	push   DWORD PTR [ebp-0x8]
64014a5d:	push   DWORD PTR [ebp+0xc]
64014a60:	push   DWORD PTR [ebp+0x8]
64014a63:	call   edi
64014a65:	test   eax,eax
64014a67:	je     0x64014ac6
64014a69:	test   WORD PTR [ebp+0xc],0x400
64014a6f:	je     0x64014aa5
64014a71:	mov    eax,DWORD PTR [ebp+0x1c]
64014a74:	xor    edi,edi
64014a76:	cmp    eax,edi
64014a78:	mov    DWORD PTR [ebp-0xc],esi
64014a7b:	je     0x64014ac6
64014a7d:	cmp    eax,esi
64014a7f:	jg     0x64014a84
64014a81:	lea    esi,[eax-0x1]
64014a84:	push   esi
64014a85:	push   ebx
64014a86:	push   eax
64014a87:	push   DWORD PTR [ebp+0x18]
64014a8a:	call   0x640185f6
64014a8f:	add    esp,0x10
64014a92:	test   eax,eax
64014a94:	je     0x64014ac6
64014a96:	push   edi
64014a97:	push   edi
64014a98:	push   edi
64014a99:	push   edi
64014a9a:	push   edi
64014a9b:	call   0x6400ed8a
64014aa0:	add    esp,0x14
64014aa3:	jmp    0x64014ac6
64014aa5:	xor    eax,eax
64014aa7:	cmp    DWORD PTR [ebp+0x1c],eax
64014aaa:	jne    0x64014ab0
64014aac:	push   eax
64014aad:	push   eax
64014aae:	jmp    0x64014ab6
64014ab0:	push   DWORD PTR [ebp+0x1c]
64014ab3:	push   DWORD PTR [ebp+0x18]
64014ab6:	push   esi
64014ab7:	push   ebx
64014ab8:	push   0x1
64014aba:	push   DWORD PTR [ebp+0x20]
64014abd:	call   DWORD PTR ds:0x6402103c
64014ac3:	mov    DWORD PTR [ebp-0xc],eax
64014ac6:	push   ebx
64014ac7:	call   0x6400f85e
64014acc:	pop    ecx
64014acd:	push   DWORD PTR [ebp-0x8]
64014ad0:	call   0x6400f85e
64014ad5:	mov    eax,DWORD PTR [ebp-0xc]
64014ad8:	pop    ecx
64014ad9:	lea    esp,[ebp-0x1c]
64014adc:	pop    edi
64014add:	pop    esi
64014ade:	pop    ebx
64014adf:	mov    ecx,DWORD PTR [ebp-0x4]
64014ae2:	xor    ecx,ebp
64014ae4:	call   0x6400f34e
64014ae9:	leave  
64014aea:	ret    
64014aeb:	push   ebp
64014aec:	mov    ebp,esp
64014aee:	sub    esp,0x10
64014af1:	push   DWORD PTR [ebp+0x8]
64014af4:	lea    ecx,[ebp-0x10]
64014af7:	call   0x6400f4f1
64014afc:	push   DWORD PTR [ebp+0x24]
64014aff:	lea    ecx,[ebp-0x10]
64014b02:	push   DWORD PTR [ebp+0x20]
64014b05:	push   DWORD PTR [ebp+0x1c]
64014b08:	push   DWORD PTR [ebp+0x18]
64014b0b:	push   DWORD PTR [ebp+0x14]
64014b0e:	push   DWORD PTR [ebp+0x10]
64014b11:	push   DWORD PTR [ebp+0xc]
64014b14:	call   0x6401488a
64014b19:	add    esp,0x1c
64014b1c:	cmp    BYTE PTR [ebp-0x4],0x0
64014b20:	je     0x64014b29
64014b22:	mov    ecx,DWORD PTR [ebp-0x8]
64014b25:	and    DWORD PTR [ecx+0x70],0xfffffffd
64014b29:	leave  
64014b2a:	ret    
64014b2b:	xor    eax,eax
64014b2d:	cmp    DWORD PTR [esp+0x8],eax
64014b31:	jbe    0x64014b46
64014b33:	mov    ecx,DWORD PTR [esp+0x4]
64014b37:	cmp    WORD PTR [ecx],0x0
64014b3b:	je     0x64014b46
64014b3d:	inc    eax
64014b3e:	inc    ecx
64014b3f:	inc    ecx
64014b40:	cmp    eax,DWORD PTR [esp+0x8]
64014b44:	jb     0x64014b37
64014b46:	ret    
64014b47:	push   ebp
64014b48:	mov    ebp,esp
64014b4a:	sub    esp,0x4
64014b4d:	mov    DWORD PTR [ebp-0x4],edi
64014b50:	mov    edi,DWORD PTR [ebp+0x8]
64014b53:	mov    ecx,DWORD PTR [ebp+0xc]
64014b56:	shr    ecx,0x7
64014b59:	pxor   xmm0,xmm0
64014b5d:	jmp    0x64014b67
64014b5f:	lea    esp,[esp+0x0]
64014b66:	nop
64014b67:	movdqa XMMWORD PTR [edi],xmm0
64014b6b:	movdqa XMMWORD PTR [edi+0x10],xmm0
64014b70:	movdqa XMMWORD PTR [edi+0x20],xmm0
64014b75:	movdqa XMMWORD PTR [edi+0x30],xmm0
64014b7a:	movdqa XMMWORD PTR [edi+0x40],xmm0
64014b7f:	movdqa XMMWORD PTR [edi+0x50],xmm0
64014b84:	movdqa XMMWORD PTR [edi+0x60],xmm0
64014b89:	movdqa XMMWORD PTR [edi+0x70],xmm0
64014b8e:	lea    edi,[edi+0x80]
64014b94:	dec    ecx
64014b95:	jne    0x64014b67
64014b97:	mov    edi,DWORD PTR [ebp-0x4]
64014b9a:	mov    esp,ebp
64014b9c:	pop    ebp
64014b9d:	ret    
64014b9e:	push   ebp
64014b9f:	mov    ebp,esp
64014ba1:	sub    esp,0x10
64014ba4:	mov    DWORD PTR [ebp-0x4],edi
64014ba7:	mov    eax,DWORD PTR [ebp+0x8]
64014baa:	cdq    
64014bab:	mov    edi,eax
64014bad:	xor    edi,edx
64014baf:	sub    edi,edx
64014bb1:	and    edi,0xf
64014bb4:	xor    edi,edx
64014bb6:	sub    edi,edx
64014bb8:	test   edi,edi
64014bba:	jne    0x64014bf8
64014bbc:	mov    ecx,DWORD PTR [ebp+0x10]
64014bbf:	mov    edx,ecx
64014bc1:	and    edx,0x7f
64014bc4:	mov    DWORD PTR [ebp-0xc],edx
64014bc7:	cmp    ecx,edx
64014bc9:	je     0x64014bdd
64014bcb:	sub    ecx,edx
64014bcd:	push   ecx
64014bce:	push   eax
64014bcf:	call   0x64014b47
64014bd4:	add    esp,0x8
64014bd7:	mov    eax,DWORD PTR [ebp+0x8]
64014bda:	mov    edx,DWORD PTR [ebp-0xc]
64014bdd:	test   edx,edx
64014bdf:	je     0x64014c26
64014be1:	add    eax,DWORD PTR [ebp+0x10]
64014be4:	sub    eax,edx
64014be6:	mov    DWORD PTR [ebp-0x8],eax
64014be9:	xor    eax,eax
64014beb:	mov    edi,DWORD PTR [ebp-0x8]
64014bee:	mov    ecx,DWORD PTR [ebp-0xc]
64014bf1:	rep stos BYTE PTR es:[edi],al
64014bf3:	mov    eax,DWORD PTR [ebp+0x8]
64014bf6:	jmp    0x64014c26
64014bf8:	neg    edi
64014bfa:	add    edi,0x10
64014bfd:	mov    DWORD PTR [ebp-0x10],edi
64014c00:	xor    eax,eax
64014c02:	mov    edi,DWORD PTR [ebp+0x8]
64014c05:	mov    ecx,DWORD PTR [ebp-0x10]
64014c08:	rep stos BYTE PTR es:[edi],al
64014c0a:	mov    eax,DWORD PTR [ebp-0x10]
64014c0d:	mov    ecx,DWORD PTR [ebp+0x8]
64014c10:	mov    edx,DWORD PTR [ebp+0x10]
64014c13:	add    ecx,eax
64014c15:	sub    edx,eax
64014c17:	push   edx
64014c18:	push   0x0
64014c1a:	push   ecx
64014c1b:	call   0x64014b9e
64014c20:	add    esp,0xc
64014c23:	mov    eax,DWORD PTR [ebp+0x8]
64014c26:	mov    edi,DWORD PTR [ebp-0x4]
64014c29:	mov    esp,ebp
64014c2b:	pop    ebp
64014c2c:	ret    
64014c2d:	and    DWORD PTR ds:0x6402d580,0x0
64014c34:	call   0x6401a111
64014c39:	mov    ds:0x6402d580,eax
64014c3e:	xor    eax,eax
64014c40:	ret    
64014c41:	int3   
64014c42:	int3   
64014c43:	int3   
64014c44:	int3   
64014c45:	int3   
64014c46:	int3   
64014c47:	int3   
64014c48:	int3   
64014c49:	int3   
64014c4a:	int3   
64014c4b:	int3   
64014c4c:	int3   
64014c4d:	int3   
64014c4e:	int3   
64014c4f:	int3   
64014c50:	push   ecx
64014c51:	lea    ecx,[esp+0x4]
64014c55:	sub    ecx,eax
64014c57:	sbb    eax,eax
64014c59:	not    eax
64014c5b:	and    ecx,eax
64014c5d:	mov    eax,esp
64014c5f:	and    eax,0xfffff000
64014c64:	cmp    ecx,eax
64014c66:	jb     0x64014c72
64014c68:	mov    eax,ecx
64014c6a:	pop    ecx
64014c6b:	xchg   esp,eax
64014c6c:	mov    eax,DWORD PTR [eax]
64014c6e:	mov    DWORD PTR [esp],eax
64014c71:	ret    
64014c72:	sub    eax,0x1000
64014c77:	test   DWORD PTR [eax],eax
64014c79:	jmp    0x64014c64
64014c7b:	push   0x54
64014c7d:	push   0x64025b10
64014c82:	call   0x640106f8
64014c87:	xor    edi,edi
64014c89:	mov    DWORD PTR [ebp-0x4],edi
64014c8c:	lea    eax,[ebp-0x64]
64014c8f:	push   eax
64014c90:	call   DWORD PTR ds:0x64021150
64014c96:	mov    DWORD PTR [ebp-0x4],0xfffffffe
64014c9d:	push   0x40
64014c9f:	push   0x20
64014ca1:	pop    esi
64014ca2:	push   esi
64014ca3:	call   0x64012670
64014ca8:	pop    ecx
64014ca9:	pop    ecx
64014caa:	cmp    eax,edi
64014cac:	je     0x64014ec6
64014cb2:	mov    ds:0x6402d480,eax
64014cb7:	mov    DWORD PTR ds:0x6402d460,esi
64014cbd:	lea    ecx,[eax+0x800]
64014cc3:	jmp    0x64014cf5
64014cc5:	mov    BYTE PTR [eax+0x4],0x0
64014cc9:	or     DWORD PTR [eax],0xffffffff
64014ccc:	mov    BYTE PTR [eax+0x5],0xa
64014cd0:	mov    DWORD PTR [eax+0x8],edi
64014cd3:	mov    BYTE PTR [eax+0x24],0x0
64014cd7:	mov    BYTE PTR [eax+0x25],0xa
64014cdb:	mov    BYTE PTR [eax+0x26],0xa
64014cdf:	mov    DWORD PTR [eax+0x38],edi
64014ce2:	mov    BYTE PTR [eax+0x34],0x0
64014ce6:	add    eax,0x40
64014ce9:	mov    ecx,DWORD PTR ds:0x6402d480
64014cef:	add    ecx,0x800
64014cf5:	cmp    eax,ecx
64014cf7:	jb     0x64014cc5
64014cf9:	cmp    WORD PTR [ebp-0x32],di
64014cfd:	je     0x64014e0d
64014d03:	mov    eax,DWORD PTR [ebp-0x30]
64014d06:	cmp    eax,edi
64014d08:	je     0x64014e0d
64014d0e:	mov    edi,DWORD PTR [eax]
64014d10:	lea    ebx,[eax+0x4]
64014d13:	lea    eax,[ebx+edi*1]
64014d16:	mov    DWORD PTR [ebp-0x1c],eax
64014d19:	mov    esi,0x800
64014d1e:	cmp    edi,esi
64014d20:	jl     0x64014d24
64014d22:	mov    edi,esi
64014d24:	mov    DWORD PTR [ebp-0x20],0x1
64014d2b:	jmp    0x64014d88
64014d2d:	push   0x40
64014d2f:	push   0x20
64014d31:	call   0x64012670
64014d36:	pop    ecx
64014d37:	pop    ecx
64014d38:	test   eax,eax
64014d3a:	je     0x64014d92
64014d3c:	mov    ecx,DWORD PTR [ebp-0x20]
64014d3f:	lea    ecx,[ecx*4+0x6402d480]
64014d46:	mov    DWORD PTR [ecx],eax
64014d48:	add    DWORD PTR ds:0x6402d460,0x20
64014d4f:	lea    edx,[eax+0x800]
64014d55:	jmp    0x64014d81
64014d57:	mov    BYTE PTR [eax+0x4],0x0
64014d5b:	or     DWORD PTR [eax],0xffffffff
64014d5e:	mov    BYTE PTR [eax+0x5],0xa
64014d62:	and    DWORD PTR [eax+0x8],0x0
64014d66:	and    BYTE PTR [eax+0x24],0x80
64014d6a:	mov    BYTE PTR [eax+0x25],0xa
64014d6e:	mov    BYTE PTR [eax+0x26],0xa
64014d72:	and    DWORD PTR [eax+0x38],0x0
64014d76:	mov    BYTE PTR [eax+0x34],0x0
64014d7a:	add    eax,0x40
64014d7d:	mov    edx,DWORD PTR [ecx]
64014d7f:	add    edx,esi
64014d81:	cmp    eax,edx
64014d83:	jb     0x64014d57
64014d85:	inc    DWORD PTR [ebp-0x20]
64014d88:	cmp    DWORD PTR ds:0x6402d460,edi
64014d8e:	jl     0x64014d2d
64014d90:	jmp    0x64014d98
64014d92:	mov    edi,DWORD PTR ds:0x6402d460
64014d98:	and    DWORD PTR [ebp-0x20],0x0
64014d9c:	test   edi,edi
64014d9e:	jle    0x64014e0d
64014da0:	mov    eax,DWORD PTR [ebp-0x1c]
64014da3:	mov    ecx,DWORD PTR [eax]
64014da5:	cmp    ecx,0xffffffff
64014da8:	je     0x64014e00
64014daa:	cmp    ecx,0xfffffffe
64014dad:	je     0x64014e00
64014daf:	mov    al,BYTE PTR [ebx]
64014db1:	test   al,0x1
64014db3:	je     0x64014e00
64014db5:	test   al,0x8
64014db7:	jne    0x64014dc4
64014db9:	push   ecx
64014dba:	call   DWORD PTR ds:0x6402114c
64014dc0:	test   eax,eax
64014dc2:	je     0x64014e00
64014dc4:	mov    esi,DWORD PTR [ebp-0x20]
64014dc7:	mov    eax,esi
64014dc9:	sar    eax,0x5
64014dcc:	and    esi,0x1f
64014dcf:	shl    esi,0x6
64014dd2:	add    esi,DWORD PTR [eax*4+0x6402d480]
64014dd9:	mov    eax,DWORD PTR [ebp-0x1c]
64014ddc:	mov    eax,DWORD PTR [eax]
64014dde:	mov    DWORD PTR [esi],eax
64014de0:	mov    al,BYTE PTR [ebx]
64014de2:	mov    BYTE PTR [esi+0x4],al
64014de5:	push   0xfa0
64014dea:	lea    eax,[esi+0xc]
64014ded:	push   eax
64014dee:	call   0x64018029
64014df3:	pop    ecx
64014df4:	pop    ecx
64014df5:	test   eax,eax
64014df7:	je     0x64014ec6
64014dfd:	inc    DWORD PTR [esi+0x8]
64014e00:	inc    DWORD PTR [ebp-0x20]
64014e03:	inc    ebx
64014e04:	add    DWORD PTR [ebp-0x1c],0x4
64014e08:	cmp    DWORD PTR [ebp-0x20],edi
64014e0b:	jl     0x64014da0
64014e0d:	xor    ebx,ebx
64014e0f:	mov    esi,ebx
64014e11:	shl    esi,0x6
64014e14:	add    esi,DWORD PTR ds:0x6402d480
64014e1a:	mov    eax,DWORD PTR [esi]
64014e1c:	cmp    eax,0xffffffff
64014e1f:	je     0x64014e2c
64014e21:	cmp    eax,0xfffffffe
64014e24:	je     0x64014e2c
64014e26:	or     BYTE PTR [esi+0x4],0x80
64014e2a:	jmp    0x64014e9e
64014e2c:	mov    BYTE PTR [esi+0x4],0x81
64014e30:	test   ebx,ebx
64014e32:	jne    0x64014e39
64014e34:	push   0xfffffff6
64014e36:	pop    eax
64014e37:	jmp    0x64014e43
64014e39:	mov    eax,ebx
64014e3b:	dec    eax
64014e3c:	neg    eax
64014e3e:	sbb    eax,eax
64014e40:	add    eax,0xfffffff5
64014e43:	push   eax
64014e44:	call   DWORD PTR ds:0x64021148
64014e4a:	mov    edi,eax
64014e4c:	cmp    edi,0xffffffff
64014e4f:	je     0x64014e94
64014e51:	test   edi,edi
64014e53:	je     0x64014e94
64014e55:	push   edi
64014e56:	call   DWORD PTR ds:0x6402114c
64014e5c:	test   eax,eax
64014e5e:	je     0x64014e94
64014e60:	mov    DWORD PTR [esi],edi
64014e62:	and    eax,0xff
64014e67:	cmp    eax,0x2
64014e6a:	jne    0x64014e72
64014e6c:	or     BYTE PTR [esi+0x4],0x40
64014e70:	jmp    0x64014e7b
64014e72:	cmp    eax,0x3
64014e75:	jne    0x64014e7b
64014e77:	or     BYTE PTR [esi+0x4],0x8
64014e7b:	push   0xfa0
64014e80:	lea    eax,[esi+0xc]
64014e83:	push   eax
64014e84:	call   0x64018029
64014e89:	pop    ecx
64014e8a:	pop    ecx
64014e8b:	test   eax,eax
64014e8d:	je     0x64014ec6
64014e8f:	inc    DWORD PTR [esi+0x8]
64014e92:	jmp    0x64014e9e
64014e94:	or     BYTE PTR [esi+0x4],0x40
64014e98:	mov    DWORD PTR [esi],0xfffffffe
64014e9e:	inc    ebx
64014e9f:	cmp    ebx,0x3
64014ea2:	jl     0x64014e0f
64014ea8:	push   DWORD PTR ds:0x6402d460
64014eae:	call   DWORD PTR ds:0x64021144
64014eb4:	xor    eax,eax
64014eb6:	jmp    0x64014ec9
64014eb8:	xor    eax,eax
64014eba:	inc    eax
64014ebb:	ret    
64014ebc:	mov    esp,DWORD PTR [ebp-0x18]
64014ebf:	mov    DWORD PTR [ebp-0x4],0xfffffffe
64014ec6:	or     eax,0xffffffff
64014ec9:	call   0x6401073d
64014ece:	ret    
64014ecf:	push   esi
64014ed0:	push   edi
64014ed1:	mov    esi,0x6402d480
64014ed6:	mov    edi,DWORD PTR [esi]
64014ed8:	test   edi,edi
64014eda:	je     0x64014f0d
64014edc:	lea    eax,[edi+0x800]
64014ee2:	jmp    0x64014efe
64014ee4:	cmp    DWORD PTR [edi+0x8],0x0
64014ee8:	je     0x64014ef4
64014eea:	lea    eax,[edi+0xc]
64014eed:	push   eax
64014eee:	call   DWORD PTR ds:0x6402108c
64014ef4:	mov    eax,DWORD PTR [esi]
64014ef6:	add    edi,0x40
64014ef9:	add    eax,0x800
64014efe:	cmp    edi,eax
64014f00:	jb     0x64014ee4
64014f02:	push   DWORD PTR [esi]
64014f04:	call   0x640101e6
64014f09:	and    DWORD PTR [esi],0x0
64014f0c:	pop    ecx
64014f0d:	add    esi,0x4
64014f10:	cmp    esi,0x6402d580
64014f16:	jl     0x64014ed6
64014f18:	pop    edi
64014f19:	pop    esi
64014f1a:	ret    
64014f1b:	push   ebx
64014f1c:	xor    ebx,ebx
64014f1e:	cmp    DWORD PTR ds:0x6402d594,ebx
64014f24:	push   esi
64014f25:	push   edi
64014f26:	jne    0x64014f2d
64014f28:	call   0x64013141
64014f2d:	mov    esi,DWORD PTR ds:0x64029514
64014f33:	xor    edi,edi
64014f35:	cmp    esi,ebx
64014f37:	jne    0x64014f51
64014f39:	or     eax,0xffffffff
64014f3c:	jmp    0x64014fdc
64014f41:	cmp    al,0x3d
64014f43:	je     0x64014f46
64014f45:	inc    edi
64014f46:	push   esi
64014f47:	call   0x64010b20
64014f4c:	pop    ecx
64014f4d:	lea    esi,[esi+eax*1+0x1]
64014f51:	mov    al,BYTE PTR [esi]
64014f53:	cmp    al,bl
64014f55:	jne    0x64014f41
64014f57:	push   0x4
64014f59:	inc    edi
64014f5a:	push   edi
64014f5b:	call   0x64012670
64014f60:	mov    edi,eax
64014f62:	cmp    edi,ebx
64014f64:	pop    ecx
64014f65:	pop    ecx
64014f66:	mov    DWORD PTR ds:0x64029894,edi
64014f6c:	je     0x64014f39
64014f6e:	mov    esi,DWORD PTR ds:0x64029514
64014f74:	push   ebp
64014f75:	jmp    0x64014fb7
64014f77:	push   esi
64014f78:	call   0x64010b20
64014f7d:	mov    ebp,eax
64014f7f:	inc    ebp
64014f80:	cmp    BYTE PTR [esi],0x3d
64014f83:	pop    ecx
64014f84:	je     0x64014fb5
64014f86:	push   0x1
64014f88:	push   ebp
64014f89:	call   0x64012670
64014f8e:	cmp    eax,ebx
64014f90:	pop    ecx
64014f91:	pop    ecx
64014f92:	mov    DWORD PTR [edi],eax
64014f94:	je     0x64014fe0
64014f96:	push   esi
64014f97:	push   ebp
64014f98:	push   eax
64014f99:	call   0x64010d18
64014f9e:	add    esp,0xc
64014fa1:	test   eax,eax
64014fa3:	je     0x64014fb2
64014fa5:	push   ebx
64014fa6:	push   ebx
64014fa7:	push   ebx
64014fa8:	push   ebx
64014fa9:	push   ebx
64014faa:	call   0x6400ed8a
64014faf:	add    esp,0x14
64014fb2:	add    edi,0x4
64014fb5:	add    esi,ebp
64014fb7:	cmp    BYTE PTR [esi],bl
64014fb9:	jne    0x64014f77
64014fbb:	push   DWORD PTR ds:0x64029514
64014fc1:	call   0x640101e6
64014fc6:	mov    DWORD PTR ds:0x64029514,ebx
64014fcc:	mov    DWORD PTR [edi],ebx
64014fce:	mov    DWORD PTR ds:0x6402d588,0x1
64014fd8:	xor    eax,eax
64014fda:	pop    ecx
64014fdb:	pop    ebp
64014fdc:	pop    edi
64014fdd:	pop    esi
64014fde:	pop    ebx
64014fdf:	ret    
64014fe0:	push   DWORD PTR ds:0x64029894
64014fe6:	call   0x640101e6
64014feb:	mov    DWORD PTR ds:0x64029894,ebx
64014ff1:	or     eax,0xffffffff
64014ff4:	jmp    0x64014fda
64014ff6:	push   ebp
64014ff7:	mov    ebp,esp
64014ff9:	push   ecx
64014ffa:	mov    ecx,DWORD PTR [ebp+0x10]
64014ffd:	push   ebx
64014ffe:	xor    eax,eax
64015000:	cmp    DWORD PTR [ebp+0x8],eax
64015003:	push   esi
64015004:	mov    DWORD PTR [edi],eax
64015006:	mov    esi,edx
64015008:	mov    edx,DWORD PTR [ebp+0xc]
6401500b:	mov    DWORD PTR [ecx],0x1
64015011:	je     0x6401501c
64015013:	mov    ebx,DWORD PTR [ebp+0x8]
64015016:	add    DWORD PTR [ebp+0x8],0x4
6401501a:	mov    DWORD PTR [ebx],edx
6401501c:	mov    DWORD PTR [ebp-0x4],eax
6401501f:	cmp    BYTE PTR [esi],0x22
64015022:	jne    0x64015034
64015024:	xor    eax,eax
64015026:	cmp    DWORD PTR [ebp-0x4],eax
64015029:	mov    bl,0x22
6401502b:	sete   al
6401502e:	inc    esi
6401502f:	mov    DWORD PTR [ebp-0x4],eax
64015032:	jmp    0x64015070
64015034:	inc    DWORD PTR [edi]
64015036:	test   edx,edx
64015038:	je     0x64015042
6401503a:	mov    al,BYTE PTR [esi]
6401503c:	mov    BYTE PTR [edx],al
6401503e:	inc    edx
6401503f:	mov    DWORD PTR [ebp+0xc],edx
64015042:	mov    bl,BYTE PTR [esi]
64015044:	movzx  eax,bl
64015047:	push   eax
64015048:	inc    esi
64015049:	call   0x6401a1cf
6401504e:	test   eax,eax
64015050:	pop    ecx
64015051:	je     0x64015066
64015053:	inc    DWORD PTR [edi]
64015055:	cmp    DWORD PTR [ebp+0xc],0x0
64015059:	je     0x64015065
6401505b:	mov    ecx,DWORD PTR [ebp+0xc]
6401505e:	mov    al,BYTE PTR [esi]
64015060:	inc    DWORD PTR [ebp+0xc]
64015063:	mov    BYTE PTR [ecx],al
64015065:	inc    esi
64015066:	test   bl,bl
64015068:	mov    edx,DWORD PTR [ebp+0xc]
6401506b:	mov    ecx,DWORD PTR [ebp+0x10]
6401506e:	je     0x640150a2
64015070:	cmp    DWORD PTR [ebp-0x4],0x0
64015074:	jne    0x6401501f
64015076:	cmp    bl,0x20
64015079:	je     0x64015080
6401507b:	cmp    bl,0x9
6401507e:	jne    0x6401501f
64015080:	test   edx,edx
64015082:	je     0x64015088
64015084:	mov    BYTE PTR [edx-0x1],0x0
64015088:	and    DWORD PTR [ebp-0x4],0x0
6401508c:	cmp    BYTE PTR [esi],0x0
6401508f:	je     0x6401517e
64015095:	mov    al,BYTE PTR [esi]
64015097:	cmp    al,0x20
64015099:	je     0x6401509f
6401509b:	cmp    al,0x9
6401509d:	jne    0x640150a5
6401509f:	inc    esi
640150a0:	jmp    0x64015095
640150a2:	dec    esi
640150a3:	jmp    0x64015088
640150a5:	cmp    BYTE PTR [esi],0x0
640150a8:	je     0x6401517e
640150ae:	cmp    DWORD PTR [ebp+0x8],0x0
640150b2:	je     0x640150bd
640150b4:	mov    eax,DWORD PTR [ebp+0x8]
640150b7:	add    DWORD PTR [ebp+0x8],0x4
640150bb:	mov    DWORD PTR [eax],edx
640150bd:	inc    DWORD PTR [ecx]
640150bf:	xor    ebx,ebx
640150c1:	inc    ebx
640150c2:	xor    ecx,ecx
640150c4:	jmp    0x640150c8
640150c6:	inc    esi
640150c7:	inc    ecx
640150c8:	cmp    BYTE PTR [esi],0x5c
640150cb:	je     0x640150c6
640150cd:	cmp    BYTE PTR [esi],0x22
640150d0:	jne    0x640150f8
640150d2:	test   cl,0x1
640150d5:	jne    0x640150f6
640150d7:	cmp    DWORD PTR [ebp-0x4],0x0
640150db:	je     0x640150e9
640150dd:	lea    eax,[esi+0x1]
640150e0:	cmp    BYTE PTR [eax],0x22
640150e3:	jne    0x640150e9
640150e5:	mov    esi,eax
640150e7:	jmp    0x640150f6
640150e9:	xor    eax,eax
640150eb:	xor    ebx,ebx
640150ed:	cmp    DWORD PTR [ebp-0x4],eax
640150f0:	sete   al
640150f3:	mov    DWORD PTR [ebp-0x4],eax
640150f6:	shr    ecx,1
640150f8:	test   ecx,ecx
640150fa:	je     0x6401510e
640150fc:	dec    ecx
640150fd:	test   edx,edx
640150ff:	je     0x64015105
64015101:	mov    BYTE PTR [edx],0x5c
64015104:	inc    edx
64015105:	inc    DWORD PTR [edi]
64015107:	test   ecx,ecx
64015109:	jne    0x640150fc
6401510b:	mov    DWORD PTR [ebp+0xc],edx
6401510e:	mov    al,BYTE PTR [esi]
64015110:	test   al,al
64015112:	je     0x64015169
64015114:	cmp    DWORD PTR [ebp-0x4],0x0
64015118:	jne    0x64015122
6401511a:	cmp    al,0x20
6401511c:	je     0x64015169
6401511e:	cmp    al,0x9
64015120:	je     0x64015169
64015122:	test   ebx,ebx
64015124:	je     0x64015163
64015126:	test   edx,edx
64015128:	movsx  eax,al
6401512b:	push   eax
6401512c:	je     0x64015151
6401512e:	call   0x6401a1cf
64015133:	test   eax,eax
64015135:	pop    ecx
64015136:	je     0x64015145
64015138:	mov    al,BYTE PTR [esi]
6401513a:	mov    ecx,DWORD PTR [ebp+0xc]
6401513d:	inc    DWORD PTR [ebp+0xc]
64015140:	mov    BYTE PTR [ecx],al
64015142:	inc    esi
64015143:	inc    DWORD PTR [edi]
64015145:	mov    ecx,DWORD PTR [ebp+0xc]
64015148:	mov    al,BYTE PTR [esi]
6401514a:	inc    DWORD PTR [ebp+0xc]
6401514d:	mov    BYTE PTR [ecx],al
6401514f:	jmp    0x6401515e
64015151:	call   0x6401a1cf
64015156:	test   eax,eax
64015158:	pop    ecx
64015159:	je     0x6401515e
6401515b:	inc    esi
6401515c:	inc    DWORD PTR [edi]
6401515e:	inc    DWORD PTR [edi]
64015160:	mov    edx,DWORD PTR [ebp+0xc]
64015163:	inc    esi
64015164:	jmp    0x640150bf
64015169:	test   edx,edx
6401516b:	je     0x64015174
6401516d:	mov    BYTE PTR [edx],0x0
64015170:	inc    edx
64015171:	mov    DWORD PTR [ebp+0xc],edx
64015174:	inc    DWORD PTR [edi]
64015176:	mov    ecx,DWORD PTR [ebp+0x10]
64015179:	jmp    0x6401508c
6401517e:	mov    eax,DWORD PTR [ebp+0x8]
64015181:	test   eax,eax
64015183:	pop    esi
64015184:	pop    ebx
64015185:	je     0x6401518a
64015187:	and    DWORD PTR [eax],0x0
6401518a:	inc    DWORD PTR [ecx]
6401518c:	leave  
6401518d:	ret    
6401518e:	push   ebp
6401518f:	mov    ebp,esp
64015191:	sub    esp,0xc
64015194:	push   ebx
64015195:	xor    ebx,ebx
64015197:	cmp    DWORD PTR ds:0x6402d594,ebx
6401519d:	push   esi
6401519e:	push   edi
6401519f:	jne    0x640151a6
640151a1:	call   0x64013141
640151a6:	push   0x104
640151ab:	mov    esi,0x64029900
640151b0:	push   esi
640151b1:	push   ebx
640151b2:	mov    BYTE PTR ds:0x64029a04,bl
640151b8:	call   DWORD PTR ds:0x64021154
640151be:	mov    eax,ds:0x6402d5a0
640151c3:	cmp    eax,ebx
640151c5:	mov    DWORD PTR ds:0x640298a4,esi
640151cb:	je     0x640151d4
640151cd:	cmp    BYTE PTR [eax],bl
640151cf:	mov    DWORD PTR [ebp-0x4],eax
640151d2:	jne    0x640151d7
640151d4:	mov    DWORD PTR [ebp-0x4],esi
640151d7:	mov    edx,DWORD PTR [ebp-0x4]
640151da:	lea    eax,[ebp-0x8]
640151dd:	push   eax
640151de:	push   ebx
640151df:	push   ebx
640151e0:	lea    edi,[ebp-0xc]
640151e3:	call   0x64014ff6
640151e8:	mov    eax,DWORD PTR [ebp-0x8]
640151eb:	add    esp,0xc
640151ee:	cmp    eax,0x3fffffff
640151f3:	jae    0x6401523f
640151f5:	mov    ecx,DWORD PTR [ebp-0xc]
640151f8:	cmp    ecx,0xffffffff
640151fb:	jae    0x6401523f
640151fd:	mov    edi,eax
640151ff:	shl    edi,0x2
64015202:	lea    eax,[edi+ecx*1]
64015205:	cmp    eax,ecx
64015207:	jb     0x6401523f
64015209:	push   eax
6401520a:	call   0x64012630
6401520f:	mov    esi,eax
64015211:	cmp    esi,ebx
64015213:	pop    ecx
64015214:	je     0x6401523f
64015216:	mov    edx,DWORD PTR [ebp-0x4]
64015219:	lea    eax,[ebp-0x8]
6401521c:	push   eax
6401521d:	add    edi,esi
6401521f:	push   edi
64015220:	push   esi
64015221:	lea    edi,[ebp-0xc]
64015224:	call   0x64014ff6
64015229:	mov    eax,DWORD PTR [ebp-0x8]
6401522c:	add    esp,0xc
6401522f:	dec    eax
64015230:	mov    ds:0x64029888,eax
64015235:	mov    DWORD PTR ds:0x6402988c,esi
6401523b:	xor    eax,eax
6401523d:	jmp    0x64015242
6401523f:	or     eax,0xffffffff
64015242:	pop    edi
64015243:	pop    esi
64015244:	pop    ebx
64015245:	leave  
64015246:	ret    
64015247:	push   ecx
64015248:	push   ecx
64015249:	mov    eax,ds:0x64029a08
6401524e:	push   ebx
6401524f:	push   ebp
64015250:	push   esi
64015251:	push   edi
64015252:	mov    edi,DWORD PTR ds:0x64021164
64015258:	xor    ebx,ebx
6401525a:	xor    esi,esi
6401525c:	cmp    eax,ebx
6401525e:	push   0x2
64015260:	pop    ebp
64015261:	jne    0x64015290
64015263:	call   edi
64015265:	mov    esi,eax
64015267:	cmp    esi,ebx
64015269:	je     0x64015277
6401526b:	mov    DWORD PTR ds:0x64029a08,0x1
64015275:	jmp    0x64015299
64015277:	call   DWORD PTR ds:0x64021044
6401527d:	cmp    eax,0x78
64015280:	jne    0x6401528b
64015282:	mov    eax,ebp
64015284:	mov    ds:0x64029a08,eax
64015289:	jmp    0x64015290
6401528b:	mov    eax,ds:0x64029a08
64015290:	cmp    eax,0x1
64015293:	jne    0x6401531d
64015299:	cmp    esi,ebx
6401529b:	jne    0x640152ac
6401529d:	call   edi
6401529f:	mov    esi,eax
640152a1:	cmp    esi,ebx
640152a3:	jne    0x640152ac
640152a5:	xor    eax,eax
640152a7:	jmp    0x64015375
640152ac:	cmp    WORD PTR [esi],bx
640152af:	mov    eax,esi
640152b1:	je     0x640152c1
640152b3:	add    eax,ebp
640152b5:	cmp    WORD PTR [eax],bx
640152b8:	jne    0x640152b3
640152ba:	add    eax,ebp
640152bc:	cmp    WORD PTR [eax],bx
640152bf:	jne    0x640152b3
640152c1:	mov    edi,DWORD PTR ds:0x64021024
640152c7:	push   ebx
640152c8:	push   ebx
640152c9:	push   ebx
640152ca:	sub    eax,esi
640152cc:	push   ebx
640152cd:	sar    eax,1
640152cf:	inc    eax
640152d0:	push   eax
640152d1:	push   esi
640152d2:	push   ebx
640152d3:	push   ebx
640152d4:	mov    DWORD PTR [esp+0x34],eax
640152d8:	call   edi
640152da:	mov    ebp,eax
640152dc:	cmp    ebp,ebx
640152de:	je     0x64015312
640152e0:	push   ebp
640152e1:	call   0x64012630
640152e6:	cmp    eax,ebx
640152e8:	pop    ecx
640152e9:	mov    DWORD PTR [esp+0x10],eax
640152ed:	je     0x64015312
640152ef:	push   ebx
640152f0:	push   ebx
640152f1:	push   ebp
640152f2:	push   eax
640152f3:	push   DWORD PTR [esp+0x24]
640152f7:	push   esi
640152f8:	push   ebx
640152f9:	push   ebx
640152fa:	call   edi
640152fc:	test   eax,eax
640152fe:	jne    0x6401530e
64015300:	push   DWORD PTR [esp+0x10]
64015304:	call   0x640101e6
64015309:	pop    ecx
6401530a:	mov    DWORD PTR [esp+0x10],ebx
6401530e:	mov    ebx,DWORD PTR [esp+0x10]
64015312:	push   esi
64015313:	call   DWORD PTR ds:0x64021160
64015319:	mov    eax,ebx
6401531b:	jmp    0x64015375
6401531d:	cmp    eax,ebp
6401531f:	je     0x64015325
64015321:	cmp    eax,ebx
64015323:	jne    0x640152a5
64015325:	call   DWORD PTR ds:0x6402115c
6401532b:	mov    esi,eax
6401532d:	cmp    esi,ebx
6401532f:	je     0x640152a5
64015335:	cmp    BYTE PTR [esi],bl
64015337:	je     0x64015343
64015339:	inc    eax
6401533a:	cmp    BYTE PTR [eax],bl
6401533c:	jne    0x64015339
6401533e:	inc    eax
6401533f:	cmp    BYTE PTR [eax],bl
64015341:	jne    0x64015339
64015343:	sub    eax,esi
64015345:	inc    eax
64015346:	mov    ebp,eax
64015348:	push   ebp
64015349:	call   0x64012630
6401534e:	mov    edi,eax
64015350:	cmp    edi,ebx
64015352:	pop    ecx
64015353:	jne    0x64015361
64015355:	push   esi
64015356:	call   DWORD PTR ds:0x64021158
6401535c:	jmp    0x640152a5
64015361:	push   ebp
64015362:	push   esi
64015363:	push   edi
64015364:	call   0x64010d80
64015369:	add    esp,0xc
6401536c:	push   esi
6401536d:	call   DWORD PTR ds:0x64021158
64015373:	mov    eax,edi
64015375:	pop    edi
64015376:	pop    esi
64015377:	pop    ebp
64015378:	pop    ebx
64015379:	pop    ecx
6401537a:	pop    ecx
6401537b:	ret    
6401537c:	push   esi
6401537d:	push   edi
6401537e:	mov    eax,0x6402541c
64015383:	mov    edi,0x6402541c
64015388:	cmp    eax,edi
6401538a:	mov    esi,eax
6401538c:	jae    0x6401539d
6401538e:	mov    eax,DWORD PTR [esi]
64015390:	test   eax,eax
64015392:	je     0x64015396
64015394:	call   eax
64015396:	add    esi,0x4
64015399:	cmp    esi,edi
6401539b:	jb     0x6401538e
6401539d:	pop    edi
6401539e:	pop    esi
6401539f:	ret    
640153a0:	push   esi
640153a1:	push   edi
640153a2:	mov    eax,0x64025424
640153a7:	mov    edi,0x64025424
640153ac:	cmp    eax,edi
640153ae:	mov    esi,eax
640153b0:	jae    0x640153c1
640153b2:	mov    eax,DWORD PTR [esi]
640153b4:	test   eax,eax
640153b6:	je     0x640153ba
640153b8:	call   eax
640153ba:	add    esi,0x4
640153bd:	cmp    esi,edi
640153bf:	jb     0x640153b2
640153c1:	pop    edi
640153c2:	pop    esi
640153c3:	ret    
640153c4:	push   ebp
640153c5:	mov    ebp,esp
640153c7:	push   ecx
640153c8:	push   ecx
640153c9:	push   esi
640153ca:	lea    eax,[ebp-0x4]
640153cd:	xor    esi,esi
640153cf:	push   eax
640153d0:	mov    DWORD PTR [ebp-0x4],esi
640153d3:	mov    DWORD PTR [ebp-0x8],esi
640153d6:	call   0x6401284f
640153db:	test   eax,eax
640153dd:	pop    ecx
640153de:	je     0x640153ed
640153e0:	push   esi
640153e1:	push   esi
640153e2:	push   esi
640153e3:	push   esi
640153e4:	push   esi
640153e5:	call   0x6400ed8a
640153ea:	add    esp,0x14
640153ed:	lea    eax,[ebp-0x8]
640153f0:	push   eax
640153f1:	call   0x64012886
640153f6:	test   eax,eax
640153f8:	pop    ecx
640153f9:	je     0x64015408
640153fb:	push   esi
640153fc:	push   esi
640153fd:	push   esi
640153fe:	push   esi
640153ff:	push   esi
64015400:	call   0x6400ed8a
64015405:	add    esp,0x14
64015408:	cmp    DWORD PTR [ebp-0x4],0x2
6401540c:	pop    esi
6401540d:	jne    0x6401541a
6401540f:	cmp    DWORD PTR [ebp-0x8],0x5
64015413:	jb     0x6401541a
64015415:	xor    eax,eax
64015417:	inc    eax
64015418:	leave  
64015419:	ret    
6401541a:	push   0x3
6401541c:	pop    eax
6401541d:	leave  
6401541e:	ret    
6401541f:	xor    eax,eax
64015421:	cmp    DWORD PTR [esp+0x4],eax
64015425:	push   0x0
64015427:	sete   al
6401542a:	push   0x1000
6401542f:	push   eax
64015430:	call   DWORD PTR ds:0x64021168
64015436:	test   eax,eax
64015438:	mov    ds:0x64029a0c,eax
6401543d:	jne    0x64015442
6401543f:	xor    eax,eax
64015441:	ret    
64015442:	call   0x640153c4
64015447:	cmp    eax,0x3
6401544a:	mov    ds:0x6402d45c,eax
6401544f:	jne    0x64015475
64015451:	push   0x3f8
64015456:	call   0x6401699b
6401545b:	test   eax,eax
6401545d:	pop    ecx
6401545e:	jne    0x64015475
64015460:	push   DWORD PTR ds:0x64029a0c
64015466:	call   DWORD PTR ds:0x640210e4
6401546c:	and    DWORD PTR ds:0x64029a0c,0x0
64015473:	jmp    0x6401543f
64015475:	xor    eax,eax
64015477:	inc    eax
64015478:	ret    
64015479:	push   ebp
6401547a:	xor    ebp,ebp
6401547c:	cmp    DWORD PTR ds:0x6402d45c,0x3
64015483:	jne    0x640154d9
64015485:	push   ebx
64015486:	mov    ebx,DWORD PTR ds:0x640210ec
6401548c:	push   edi
6401548d:	xor    edi,edi
6401548f:	cmp    DWORD PTR ds:0x6402d444,ebp
64015495:	jle    0x640154c8
64015497:	push   esi
64015498:	mov    esi,DWORD PTR ds:0x6402d448
6401549e:	add    esi,0x10
640154a1:	push   0x8000
640154a6:	push   ebp
640154a7:	push   DWORD PTR [esi-0x4]
640154aa:	call   DWORD PTR ds:0x6402116c
640154b0:	push   DWORD PTR [esi]
640154b2:	push   ebp
640154b3:	push   DWORD PTR ds:0x64029a0c
640154b9:	call   ebx
640154bb:	add    esi,0x14
640154be:	inc    edi
640154bf:	cmp    edi,DWORD PTR ds:0x6402d444
640154c5:	jl     0x640154a1
640154c7:	pop    esi
640154c8:	push   DWORD PTR ds:0x6402d448
640154ce:	push   ebp
640154cf:	push   DWORD PTR ds:0x64029a0c
640154d5:	call   ebx
640154d7:	pop    edi
640154d8:	pop    ebx
640154d9:	push   DWORD PTR ds:0x64029a0c
640154df:	call   DWORD PTR ds:0x640210e4
640154e5:	mov    DWORD PTR ds:0x64029a0c,ebp
640154eb:	pop    ebp
640154ec:	ret    
640154ed:	push   ebp
640154ee:	mov    ebp,esp
640154f0:	push   ecx
640154f1:	push   ecx
640154f2:	push   esi
640154f3:	call   0x640113f4
640154f8:	mov    esi,eax
640154fa:	test   esi,esi
640154fc:	je     0x64015648
64015502:	mov    edx,DWORD PTR [esi+0x5c]
64015505:	mov    eax,ds:0x640288dc
6401550a:	push   edi
6401550b:	mov    edi,DWORD PTR [ebp+0x8]
6401550e:	mov    ecx,edx
64015510:	push   ebx
64015511:	cmp    DWORD PTR [ecx],edi
64015513:	je     0x64015523
64015515:	mov    ebx,eax
64015517:	imul   ebx,ebx,0xc
6401551a:	add    ecx,0xc
6401551d:	add    ebx,edx
6401551f:	cmp    ecx,ebx
64015521:	jb     0x64015511
64015523:	imul   eax,eax,0xc
64015526:	add    eax,edx
64015528:	cmp    ecx,eax
6401552a:	jae    0x64015534
6401552c:	cmp    DWORD PTR [ecx],edi
6401552e:	jne    0x64015534
64015530:	mov    eax,ecx
64015532:	jmp    0x64015536
64015534:	xor    eax,eax
64015536:	test   eax,eax
64015538:	je     0x64015544
6401553a:	mov    ebx,DWORD PTR [eax+0x8]
6401553d:	test   ebx,ebx
6401553f:	mov    DWORD PTR [ebp-0x4],ebx
64015542:	jne    0x6401554b
64015544:	xor    eax,eax
64015546:	jmp    0x64015646
6401554b:	cmp    ebx,0x5
6401554e:	jne    0x6401555c
64015550:	and    DWORD PTR [eax+0x8],0x0
64015554:	xor    eax,eax
64015556:	inc    eax
64015557:	jmp    0x64015646
6401555c:	cmp    ebx,0x1
6401555f:	je     0x64015643
64015565:	mov    ecx,DWORD PTR [esi+0x60]
64015568:	mov    DWORD PTR [ebp-0x8],ecx
6401556b:	mov    ecx,DWORD PTR [ebp+0xc]
6401556e:	mov    DWORD PTR [esi+0x60],ecx
64015571:	mov    ecx,DWORD PTR [eax+0x4]
64015574:	cmp    ecx,0x8
64015577:	jne    0x64015635
6401557d:	mov    ecx,DWORD PTR ds:0x640288d0
64015583:	mov    edi,DWORD PTR ds:0x640288d4
64015589:	mov    edx,ecx
6401558b:	add    edi,ecx
6401558d:	cmp    edx,edi
6401558f:	jge    0x640155b5
64015591:	imul   ecx,ecx,0xc
64015594:	mov    edi,DWORD PTR [esi+0x5c]
64015597:	and    DWORD PTR [ecx+edi*1+0x8],0x0
6401559c:	mov    edi,DWORD PTR ds:0x640288d0
640155a2:	mov    ebx,DWORD PTR ds:0x640288d4
640155a8:	inc    edx
640155a9:	add    ebx,edi
640155ab:	add    ecx,0xc
640155ae:	cmp    edx,ebx
640155b0:	jl     0x64015594
640155b2:	mov    ebx,DWORD PTR [ebp-0x4]
640155b5:	mov    eax,DWORD PTR [eax]
640155b7:	cmp    eax,0xc000008e
640155bc:	mov    edi,DWORD PTR [esi+0x64]
640155bf:	jne    0x640155ca
640155c1:	mov    DWORD PTR [esi+0x64],0x83
640155c8:	jmp    0x64015628
640155ca:	cmp    eax,0xc0000090
640155cf:	jne    0x640155da
640155d1:	mov    DWORD PTR [esi+0x64],0x81
640155d8:	jmp    0x64015628
640155da:	cmp    eax,0xc0000091
640155df:	jne    0x640155ea
640155e1:	mov    DWORD PTR [esi+0x64],0x84
640155e8:	jmp    0x64015628
640155ea:	cmp    eax,0xc0000093
640155ef:	jne    0x640155fa
640155f1:	mov    DWORD PTR [esi+0x64],0x85
640155f8:	jmp    0x64015628
640155fa:	cmp    eax,0xc000008d
640155ff:	jne    0x6401560a
64015601:	mov    DWORD PTR [esi+0x64],0x82
64015608:	jmp    0x64015628
6401560a:	cmp    eax,0xc000008f
6401560f:	jne    0x6401561a
64015611:	mov    DWORD PTR [esi+0x64],0x86
64015618:	jmp    0x64015628
6401561a:	cmp    eax,0xc0000092
6401561f:	jne    0x64015628
64015621:	mov    DWORD PTR [esi+0x64],0x8a
64015628:	push   DWORD PTR [esi+0x64]
6401562b:	push   0x8
6401562d:	call   ebx
6401562f:	pop    ecx
64015630:	mov    DWORD PTR [esi+0x64],edi
64015633:	jmp    0x6401563c
64015635:	and    DWORD PTR [eax+0x8],0x0
64015639:	push   ecx
6401563a:	call   ebx
6401563c:	mov    eax,DWORD PTR [ebp-0x8]
6401563f:	pop    ecx
64015640:	mov    DWORD PTR [esi+0x60],eax
64015643:	or     eax,0xffffffff
64015646:	pop    ebx
64015647:	pop    edi
64015648:	pop    esi
64015649:	leave  
6401564a:	ret    
6401564b:	mov    eax,0xe06d7363
64015650:	cmp    DWORD PTR [esp+0x4],eax
64015654:	jne    0x64015663
64015656:	push   DWORD PTR [esp+0x8]
6401565a:	push   eax
6401565b:	call   0x640154ed
64015660:	pop    ecx
64015661:	pop    ecx
64015662:	ret    
64015663:	xor    eax,eax
64015665:	ret    
64015666:	push   ebp
64015667:	mov    ebp,esp
64015669:	sub    esp,0x10
6401566c:	mov    eax,ds:0x64028038
64015671:	and    DWORD PTR [ebp-0x8],0x0
64015675:	and    DWORD PTR [ebp-0x4],0x0
64015679:	push   ebx
6401567a:	push   edi
6401567b:	mov    edi,0xbb40e64e
64015680:	cmp    eax,edi
64015682:	mov    ebx,0xffff0000
64015687:	je     0x64015696
64015689:	test   ebx,eax
6401568b:	je     0x64015696
6401568d:	not    eax
6401568f:	mov    ds:0x6402803c,eax
64015694:	jmp    0x640156f6
64015696:	push   esi
64015697:	lea    eax,[ebp-0x8]
6401569a:	push   eax
6401569b:	call   DWORD PTR ds:0x640210b8
640156a1:	mov    esi,DWORD PTR [ebp-0x4]
640156a4:	xor    esi,DWORD PTR [ebp-0x8]
640156a7:	call   DWORD PTR ds:0x640210bc
640156ad:	xor    esi,eax
640156af:	call   DWORD PTR ds:0x64021110
640156b5:	xor    esi,eax
640156b7:	call   DWORD PTR ds:0x6402109c
640156bd:	xor    esi,eax
640156bf:	lea    eax,[ebp-0x10]
640156c2:	push   eax
640156c3:	call   DWORD PTR ds:0x64021170
640156c9:	mov    eax,DWORD PTR [ebp-0xc]
640156cc:	xor    eax,DWORD PTR [ebp-0x10]
640156cf:	xor    esi,eax
640156d1:	cmp    esi,edi
640156d3:	jne    0x640156dc
640156d5:	mov    esi,0xbb40e64f
640156da:	jmp    0x640156e7
640156dc:	test   ebx,esi
640156de:	jne    0x640156e7
640156e0:	mov    eax,esi
640156e2:	shl    eax,0x10
640156e5:	or     esi,eax
640156e7:	mov    DWORD PTR ds:0x64028038,esi
640156ed:	not    esi
640156ef:	mov    DWORD PTR ds:0x6402803c,esi
640156f5:	pop    esi
640156f6:	pop    edi
640156f7:	pop    ebx
640156f8:	leave  
640156f9:	ret    
640156fa:	test   BYTE PTR [ecx+0xc],0x40
640156fe:	je     0x64015706
64015700:	cmp    DWORD PTR [ecx+0x8],0x0
64015704:	je     0x6401572a
64015706:	dec    DWORD PTR [ecx+0x4]
64015709:	js     0x64015716
6401570b:	mov    edx,DWORD PTR [ecx]
6401570d:	mov    BYTE PTR [edx],al
6401570f:	inc    DWORD PTR [ecx]
64015711:	movzx  eax,al
64015714:	jmp    0x64015722
64015716:	movsx  eax,al
64015719:	push   ecx
6401571a:	push   eax
6401571b:	call   0x64013465
64015720:	pop    ecx
64015721:	pop    ecx
64015722:	cmp    eax,0xffffffff
64015725:	jne    0x6401572a
64015727:	or     DWORD PTR [esi],eax
64015729:	ret    
6401572a:	inc    DWORD PTR [esi]
6401572c:	ret    
6401572d:	push   ebp
6401572e:	mov    ebp,esp
64015730:	push   esi
64015731:	mov    esi,eax
64015733:	jmp    0x64015748
64015735:	mov    ecx,DWORD PTR [ebp+0x10]
64015738:	mov    al,BYTE PTR [ebp+0x8]
6401573b:	dec    DWORD PTR [ebp+0xc]
6401573e:	call   0x640156fa
64015743:	cmp    DWORD PTR [esi],0xffffffff
64015746:	je     0x6401574e
64015748:	cmp    DWORD PTR [ebp+0xc],0x0
6401574c:	jg     0x64015735
6401574e:	pop    esi
6401574f:	pop    ebp
64015750:	ret    
64015751:	test   BYTE PTR [edi+0xc],0x40
64015755:	push   ebx
64015756:	push   esi
64015757:	mov    esi,eax
64015759:	mov    ebx,ecx
6401575b:	je     0x64015791
6401575d:	cmp    DWORD PTR [edi+0x8],0x0
64015761:	jne    0x64015791
64015763:	mov    eax,DWORD PTR [esp+0xc]
64015767:	add    DWORD PTR [esi],eax
64015769:	jmp    0x64015798
6401576b:	mov    al,BYTE PTR [ebx]
6401576d:	dec    DWORD PTR [esp+0xc]
64015771:	mov    ecx,edi
64015773:	call   0x640156fa
64015778:	inc    ebx
64015779:	cmp    DWORD PTR [esi],0xffffffff
6401577c:	jne    0x64015791
6401577e:	call   0x64011120
64015783:	cmp    DWORD PTR [eax],0x2a
64015786:	jne    0x64015798
64015788:	mov    ecx,edi
6401578a:	mov    al,0x3f
6401578c:	call   0x640156fa
64015791:	cmp    DWORD PTR [esp+0xc],0x0
64015796:	jg     0x6401576b
64015798:	pop    esi
64015799:	pop    ebx
6401579a:	ret    
6401579b:	push   ebp
6401579c:	lea    ebp,[esp-0x1f8]
640157a3:	sub    esp,0x278
640157a9:	mov    eax,ds:0x64028038
640157ae:	xor    eax,ebp
640157b0:	mov    DWORD PTR [ebp+0x1f4],eax
640157b6:	mov    eax,DWORD PTR [ebp+0x200]
640157bc:	push   ebx
640157bd:	mov    ebx,DWORD PTR [ebp+0x204]
640157c3:	push   esi
640157c4:	xor    esi,esi
640157c6:	push   edi
640157c7:	mov    edi,DWORD PTR [ebp+0x20c]
640157cd:	push   DWORD PTR [ebp+0x208]
640157d3:	lea    ecx,[ebp-0x64]
640157d6:	mov    DWORD PTR [ebp-0x30],eax
640157d9:	mov    DWORD PTR [ebp-0x2c],edi
640157dc:	mov    DWORD PTR [ebp-0x4c],esi
640157df:	mov    DWORD PTR [ebp-0x18],esi
640157e2:	mov    DWORD PTR [ebp-0x40],esi
640157e5:	mov    DWORD PTR [ebp-0x20],esi
640157e8:	mov    DWORD PTR [ebp-0x3c],esi
640157eb:	mov    DWORD PTR [ebp-0x50],esi
640157ee:	mov    DWORD PTR [ebp-0x44],esi
640157f1:	call   0x6400f4f1
640157f6:	cmp    DWORD PTR [ebp-0x30],esi
640157f9:	jne    0x64015828
640157fb:	call   0x64011120
64015800:	push   esi
64015801:	push   esi
64015802:	push   esi
64015803:	push   esi
64015804:	mov    DWORD PTR [eax],0x16
6401580a:	push   esi
6401580b:	call   0x6400ee86
64015810:	add    esp,0x14
64015813:	cmp    BYTE PTR [ebp-0x58],0x0
64015817:	je     0x64015820
64015819:	mov    eax,DWORD PTR [ebp-0x5c]
6401581c:	and    DWORD PTR [eax+0x70],0xfffffffd
64015820:	or     eax,0xffffffff
64015823:	jmp    0x640160f7
64015828:	mov    eax,DWORD PTR [ebp-0x30]
6401582b:	test   BYTE PTR [eax+0xc],0x40
6401582f:	jne    0x640158d9
64015835:	push   eax
64015836:	call   0x640191cd
6401583b:	cmp    eax,0xffffffff
6401583e:	pop    ecx
6401583f:	je     0x64015877
64015841:	push   DWORD PTR [ebp-0x30]
64015844:	call   0x640191cd
64015849:	cmp    eax,0xfffffffe
6401584c:	pop    ecx
6401584d:	je     0x64015877
6401584f:	push   DWORD PTR [ebp-0x30]
64015852:	call   0x640191cd
64015857:	push   DWORD PTR [ebp-0x30]
6401585a:	sar    eax,0x5
6401585d:	lea    esi,[eax*4+0x6402d480]
64015864:	call   0x640191cd
64015869:	and    eax,0x1f
6401586c:	shl    eax,0x6
6401586f:	add    eax,DWORD PTR [esi]
64015871:	pop    ecx
64015872:	pop    ecx
64015873:	xor    esi,esi
64015875:	jmp    0x6401587c
64015877:	mov    eax,0x64028810
6401587c:	test   BYTE PTR [eax+0x24],0x7f
64015880:	jne    0x640157fb
64015886:	push   DWORD PTR [ebp-0x30]
64015889:	call   0x640191cd
6401588e:	cmp    eax,0xffffffff
64015891:	pop    ecx
64015892:	je     0x640158ca
64015894:	push   DWORD PTR [ebp-0x30]
64015897:	call   0x640191cd
6401589c:	cmp    eax,0xfffffffe
6401589f:	pop    ecx
640158a0:	je     0x640158ca
640158a2:	push   DWORD PTR [ebp-0x30]
640158a5:	call   0x640191cd
640158aa:	push   DWORD PTR [ebp-0x30]
640158ad:	sar    eax,0x5
640158b0:	lea    esi,[eax*4+0x6402d480]
640158b7:	call   0x640191cd
640158bc:	and    eax,0x1f
640158bf:	shl    eax,0x6
640158c2:	add    eax,DWORD PTR [esi]
640158c4:	pop    ecx
640158c5:	pop    ecx
640158c6:	xor    esi,esi
640158c8:	jmp    0x640158cf
640158ca:	mov    eax,0x64028810
640158cf:	test   BYTE PTR [eax+0x24],0x80
640158d3:	jne    0x640157fb
640158d9:	cmp    ebx,esi
640158db:	je     0x640157fb
640158e1:	mov    dl,BYTE PTR [ebx]
640158e3:	xor    ecx,ecx
640158e5:	test   dl,dl
640158e7:	mov    DWORD PTR [ebp-0x34],esi
640158ea:	mov    DWORD PTR [ebp-0x28],esi
640158ed:	mov    DWORD PTR [ebp-0x54],esi
640158f0:	mov    BYTE PTR [ebp-0x19],dl
640158f3:	je     0x640160e7
640158f9:	inc    ebx
640158fa:	cmp    DWORD PTR [ebp-0x34],0x0
640158fe:	mov    DWORD PTR [ebp-0x48],ebx
64015901:	jl     0x640160e7
64015907:	mov    al,dl
64015909:	sub    al,0x20
6401590b:	cmp    al,0x58
6401590d:	ja     0x64015920
6401590f:	movsx  eax,dl
64015912:	movzx  eax,BYTE PTR [eax+0x64021cd8]
64015919:	and    eax,0xf
6401591c:	xor    esi,esi
6401591e:	jmp    0x64015924
64015920:	xor    esi,esi
64015922:	xor    eax,eax
64015924:	movsx  eax,BYTE PTR [ecx+eax*8+0x64021cf8]
6401592c:	push   0x7
6401592e:	sar    eax,0x4
64015931:	pop    ecx
64015932:	cmp    eax,ecx
64015934:	mov    DWORD PTR [ebp-0x74],eax
64015937:	ja     0x640160b7
6401593d:	jmp    DWORD PTR [eax*4+0x6401610f]
64015944:	or     DWORD PTR [ebp-0x20],0xffffffff
64015948:	mov    DWORD PTR [ebp-0x78],esi
6401594b:	mov    DWORD PTR [ebp-0x50],esi
6401594e:	mov    DWORD PTR [ebp-0x40],esi
64015951:	mov    DWORD PTR [ebp-0x3c],esi
64015954:	mov    DWORD PTR [ebp-0x18],esi
64015957:	mov    DWORD PTR [ebp-0x44],esi
6401595a:	jmp    0x640160b7
6401595f:	movsx  eax,dl
64015962:	sub    eax,0x20
64015965:	je     0x640159a5
64015967:	sub    eax,0x3
6401596a:	je     0x64015999
6401596c:	sub    eax,0x8
6401596f:	je     0x64015990
64015971:	dec    eax
64015972:	dec    eax
64015973:	je     0x64015987
64015975:	sub    eax,0x3
64015978:	jne    0x640160b7
6401597e:	or     DWORD PTR [ebp-0x18],0x8
64015982:	jmp    0x640160b7
64015987:	or     DWORD PTR [ebp-0x18],0x4
6401598b:	jmp    0x640160b7
64015990:	or     DWORD PTR [ebp-0x18],0x1
64015994:	jmp    0x640160b7
64015999:	or     DWORD PTR [ebp-0x18],0x80
640159a0:	jmp    0x640160b7
640159a5:	or     DWORD PTR [ebp-0x18],0x2
640159a9:	jmp    0x640160b7
640159ae:	cmp    dl,0x2a
640159b1:	jne    0x640159d3
640159b3:	add    edi,0x4
640159b6:	mov    DWORD PTR [ebp-0x2c],edi
640159b9:	mov    edi,DWORD PTR [edi-0x4]
640159bc:	cmp    edi,esi
640159be:	mov    DWORD PTR [ebp-0x40],edi
640159c1:	jge    0x640160b7
640159c7:	or     DWORD PTR [ebp-0x18],0x4
640159cb:	neg    DWORD PTR [ebp-0x40]
640159ce:	jmp    0x640160b7
640159d3:	mov    eax,DWORD PTR [ebp-0x40]
640159d6:	imul   eax,eax,0xa
640159d9:	movsx  ecx,dl
640159dc:	lea    eax,[eax+ecx*1-0x30]
640159e0:	mov    DWORD PTR [ebp-0x40],eax
640159e3:	jmp    0x640160b7
640159e8:	mov    DWORD PTR [ebp-0x20],esi
640159eb:	jmp    0x640160b7
640159f0:	cmp    dl,0x2a
640159f3:	jne    0x64015a12
640159f5:	add    edi,0x4
640159f8:	mov    DWORD PTR [ebp-0x2c],edi
640159fb:	mov    edi,DWORD PTR [edi-0x4]
640159fe:	cmp    edi,esi
64015a00:	mov    DWORD PTR [ebp-0x20],edi
64015a03:	jge    0x640160b7
64015a09:	or     DWORD PTR [ebp-0x20],0xffffffff
64015a0d:	jmp    0x640160b7
64015a12:	mov    eax,DWORD PTR [ebp-0x20]
64015a15:	imul   eax,eax,0xa
64015a18:	movsx  ecx,dl
64015a1b:	lea    eax,[eax+ecx*1-0x30]
64015a1f:	mov    DWORD PTR [ebp-0x20],eax
64015a22:	jmp    0x640160b7
64015a27:	cmp    dl,0x49
64015a2a:	je     0x64015a72
64015a2c:	cmp    dl,0x68
64015a2f:	je     0x64015a69
64015a31:	cmp    dl,0x6c
64015a34:	je     0x64015a4b
64015a36:	cmp    dl,0x77
64015a39:	jne    0x640160b7
64015a3f:	or     DWORD PTR [ebp-0x18],0x800
64015a46:	jmp    0x640160b7
64015a4b:	cmp    BYTE PTR [ebx],0x6c
64015a4e:	jne    0x64015a60
64015a50:	inc    ebx
64015a51:	or     DWORD PTR [ebp-0x18],0x1000
64015a58:	mov    DWORD PTR [ebp-0x48],ebx
64015a5b:	jmp    0x640160b7
64015a60:	or     DWORD PTR [ebp-0x18],0x10
64015a64:	jmp    0x640160b7
64015a69:	or     DWORD PTR [ebp-0x18],0x20
64015a6d:	jmp    0x640160b7
64015a72:	mov    al,BYTE PTR [ebx]
64015a74:	cmp    al,0x36
64015a76:	jne    0x64015a8f
64015a78:	cmp    BYTE PTR [ebx+0x1],0x34
64015a7c:	jne    0x64015a8f
64015a7e:	inc    ebx
64015a7f:	inc    ebx
64015a80:	or     DWORD PTR [ebp-0x18],0x8000
64015a87:	mov    DWORD PTR [ebp-0x48],ebx
64015a8a:	jmp    0x640160b7
64015a8f:	cmp    al,0x33
64015a91:	jne    0x64015aaa
64015a93:	cmp    BYTE PTR [ebx+0x1],0x32
64015a97:	jne    0x64015aaa
64015a99:	inc    ebx
64015a9a:	inc    ebx
64015a9b:	and    DWORD PTR [ebp-0x18],0xffff7fff
64015aa2:	mov    DWORD PTR [ebp-0x48],ebx
64015aa5:	jmp    0x640160b7
64015aaa:	cmp    al,0x64
64015aac:	je     0x640160b7
64015ab2:	cmp    al,0x69
64015ab4:	je     0x640160b7
64015aba:	cmp    al,0x6f
64015abc:	je     0x640160b7
64015ac2:	cmp    al,0x75
64015ac4:	je     0x640160b7
64015aca:	cmp    al,0x78
64015acc:	je     0x640160b7
64015ad2:	cmp    al,0x58
64015ad4:	je     0x640160b7
64015ada:	mov    DWORD PTR [ebp-0x74],esi
64015add:	lea    eax,[ebp-0x64]
64015ae0:	push   eax
64015ae1:	movzx  eax,dl
64015ae4:	push   eax
64015ae5:	mov    DWORD PTR [ebp-0x44],esi
64015ae8:	call   0x640167b0
64015aed:	pop    ecx
64015aee:	test   eax,eax
64015af0:	mov    al,BYTE PTR [ebp-0x19]
64015af3:	pop    ecx
64015af4:	je     0x64015b0f
64015af6:	mov    ecx,DWORD PTR [ebp-0x30]
64015af9:	lea    esi,[ebp-0x34]
64015afc:	call   0x640156fa
64015b01:	mov    al,BYTE PTR [ebx]
64015b03:	inc    ebx
64015b04:	test   al,al
64015b06:	mov    DWORD PTR [ebp-0x48],ebx
64015b09:	je     0x640160d0
64015b0f:	mov    ecx,DWORD PTR [ebp-0x30]
64015b12:	lea    esi,[ebp-0x34]
64015b15:	call   0x640156fa
64015b1a:	jmp    0x640160b7
64015b1f:	movsx  eax,dl
64015b22:	cmp    eax,0x64
64015b25:	jg     0x64015c9d
64015b2b:	je     0x64015d1c
64015b31:	cmp    eax,0x53
64015b34:	jg     0x64015be5
64015b3a:	je     0x64015b96
64015b3c:	sub    eax,0x41
64015b3f:	je     0x64015b51
64015b41:	dec    eax
64015b42:	dec    eax
64015b43:	je     0x64015b85
64015b45:	dec    eax
64015b46:	dec    eax
64015b47:	je     0x64015b51
64015b49:	dec    eax
64015b4a:	dec    eax
64015b4b:	jne    0x64015f9f
64015b51:	add    dl,0x20
64015b54:	mov    DWORD PTR [ebp-0x78],0x1
64015b5b:	mov    BYTE PTR [ebp-0x19],dl
64015b5e:	or     DWORD PTR [ebp-0x18],0x40
64015b62:	cmp    DWORD PTR [ebp-0x20],esi
64015b65:	lea    ebx,[ebp-0x14]
64015b68:	mov    eax,0x200
64015b6d:	mov    DWORD PTR [ebp-0x24],ebx
64015b70:	mov    DWORD PTR [ebp-0x68],eax
64015b73:	jge    0x64015d40
64015b79:	mov    DWORD PTR [ebp-0x20],0x6
64015b80:	jmp    0x64015d8e
64015b85:	test   WORD PTR [ebp-0x18],0x830
64015b8b:	jne    0x64015c02
64015b8d:	or     DWORD PTR [ebp-0x18],0x800
64015b94:	jmp    0x64015c02
64015b96:	test   WORD PTR [ebp-0x18],0x830
64015b9c:	jne    0x64015ba5
64015b9e:	or     DWORD PTR [ebp-0x18],0x800
64015ba5:	mov    ecx,DWORD PTR [ebp-0x20]
64015ba8:	cmp    ecx,0xffffffff
64015bab:	jne    0x64015bb2
64015bad:	mov    ecx,0x7fffffff
64015bb2:	add    edi,0x4
64015bb5:	test   WORD PTR [ebp-0x18],0x810
64015bbb:	mov    DWORD PTR [ebp-0x2c],edi
64015bbe:	mov    edi,DWORD PTR [edi-0x4]
64015bc1:	mov    DWORD PTR [ebp-0x24],edi
64015bc4:	je     0x64015f7d
64015bca:	cmp    edi,esi
64015bcc:	jne    0x64015bd6
64015bce:	mov    eax,ds:0x640288e4
64015bd3:	mov    DWORD PTR [ebp-0x24],eax
64015bd6:	mov    eax,DWORD PTR [ebp-0x24]
64015bd9:	mov    DWORD PTR [ebp-0x44],0x1
64015be0:	jmp    0x64015f72
64015be5:	sub    eax,0x58
64015be8:	je     0x64015e27
64015bee:	dec    eax
64015bef:	dec    eax
64015bf0:	je     0x64015c4f
64015bf2:	sub    eax,ecx
64015bf4:	je     0x64015b5e
64015bfa:	dec    eax
64015bfb:	dec    eax
64015bfc:	jne    0x64015f9f
64015c02:	add    edi,0x4
64015c05:	test   WORD PTR [ebp-0x18],0x810
64015c0b:	mov    DWORD PTR [ebp-0x2c],edi
64015c0e:	je     0x64015c37
64015c10:	movzx  eax,WORD PTR [edi-0x4]
64015c14:	push   eax
64015c15:	push   0x200
64015c1a:	lea    eax,[ebp-0x14]
64015c1d:	push   eax
64015c1e:	lea    eax,[ebp-0x28]
64015c21:	push   eax
64015c22:	call   0x6401a341
64015c27:	add    esp,0x10
64015c2a:	test   eax,eax
64015c2c:	je     0x64015c44
64015c2e:	mov    DWORD PTR [ebp-0x50],0x1
64015c35:	jmp    0x64015c44
64015c37:	mov    al,BYTE PTR [edi-0x4]
64015c3a:	mov    BYTE PTR [ebp-0x14],al
64015c3d:	mov    DWORD PTR [ebp-0x28],0x1
64015c44:	lea    eax,[ebp-0x14]
64015c47:	mov    DWORD PTR [ebp-0x24],eax
64015c4a:	jmp    0x64015f9f
64015c4f:	mov    eax,DWORD PTR [edi]
64015c51:	add    edi,0x4
64015c54:	cmp    eax,esi
64015c56:	mov    DWORD PTR [ebp-0x2c],edi
64015c59:	je     0x64015c89
64015c5b:	mov    ecx,DWORD PTR [eax+0x4]
64015c5e:	cmp    ecx,esi
64015c60:	je     0x64015c89
64015c62:	test   WORD PTR [ebp-0x18],0x800
64015c68:	movsx  eax,WORD PTR [eax]
64015c6b:	mov    DWORD PTR [ebp-0x24],ecx
64015c6e:	je     0x64015c81
64015c70:	cdq    
64015c71:	sub    eax,edx
64015c73:	sar    eax,1
64015c75:	mov    DWORD PTR [ebp-0x44],0x1
64015c7c:	jmp    0x64015f9c
64015c81:	mov    DWORD PTR [ebp-0x44],esi
64015c84:	jmp    0x64015f9c
64015c89:	mov    eax,ds:0x640288e0
64015c8e:	mov    DWORD PTR [ebp-0x24],eax
64015c91:	push   eax
64015c92:	call   0x64010b20
64015c97:	pop    ecx
64015c98:	jmp    0x64015f9c
64015c9d:	cmp    eax,0x70
64015ca0:	jg     0x64015e2c
64015ca6:	je     0x64015e20
64015cac:	cmp    eax,0x65
64015caf:	jl     0x64015f9f
64015cb5:	cmp    eax,0x67
64015cb8:	jle    0x64015b5e
64015cbe:	cmp    eax,0x69
64015cc1:	je     0x64015d1c
64015cc3:	cmp    eax,0x6e
64015cc6:	je     0x64015ce7
64015cc8:	cmp    eax,0x6f
64015ccb:	jne    0x64015f9f
64015cd1:	test   BYTE PTR [ebp-0x18],0x80
64015cd5:	mov    DWORD PTR [ebp-0x28],0x8
64015cdc:	je     0x64015d27
64015cde:	or     DWORD PTR [ebp-0x18],0x200
64015ce5:	jmp    0x64015d27
64015ce7:	mov    esi,DWORD PTR [edi]
64015ce9:	add    edi,0x4
64015cec:	mov    DWORD PTR [ebp-0x2c],edi
64015cef:	call   0x640193d8
64015cf4:	test   eax,eax
64015cf6:	je     0x640160d0
64015cfc:	test   BYTE PTR [ebp-0x18],0x20
64015d00:	je     0x64015d0b
64015d02:	mov    ax,WORD PTR [ebp-0x34]
64015d06:	mov    WORD PTR [esi],ax
64015d09:	jmp    0x64015d10
64015d0b:	mov    eax,DWORD PTR [ebp-0x34]
64015d0e:	mov    DWORD PTR [esi],eax
64015d10:	mov    DWORD PTR [ebp-0x50],0x1
64015d17:	jmp    0x640160a4
64015d1c:	or     DWORD PTR [ebp-0x18],0x40
64015d20:	mov    DWORD PTR [ebp-0x28],0xa
64015d27:	mov    ecx,DWORD PTR [ebp-0x18]
64015d2a:	test   cx,cx
64015d2d:	jns    0x64015e76
64015d33:	mov    eax,DWORD PTR [edi]
64015d35:	mov    edx,DWORD PTR [edi+0x4]
64015d38:	add    edi,0x8
64015d3b:	jmp    0x64015eab
64015d40:	jne    0x64015d50
64015d42:	cmp    dl,0x67
64015d45:	jne    0x64015d8e
64015d47:	mov    DWORD PTR [ebp-0x20],0x1
64015d4e:	jmp    0x64015d8e
64015d50:	cmp    DWORD PTR [ebp-0x20],eax
64015d53:	jle    0x64015d58
64015d55:	mov    DWORD PTR [ebp-0x20],eax
64015d58:	cmp    DWORD PTR [ebp-0x20],0xa3
64015d5f:	jle    0x64015d8e
64015d61:	mov    esi,DWORD PTR [ebp-0x20]
64015d64:	add    esi,0x15d
64015d6a:	push   esi
64015d6b:	call   0x64012630
64015d70:	test   eax,eax
64015d72:	mov    dl,BYTE PTR [ebp-0x19]
64015d75:	pop    ecx
64015d76:	mov    DWORD PTR [ebp-0x54],eax
64015d79:	je     0x64015d85
64015d7b:	mov    DWORD PTR [ebp-0x24],eax
64015d7e:	mov    DWORD PTR [ebp-0x68],esi
64015d81:	mov    ebx,eax
64015d83:	jmp    0x64015d8c
64015d85:	mov    DWORD PTR [ebp-0x20],0xa3
64015d8c:	xor    esi,esi
64015d8e:	mov    eax,DWORD PTR [edi]
64015d90:	add    edi,0x8
64015d93:	mov    DWORD PTR [ebp-0x80],eax
64015d96:	mov    eax,DWORD PTR [edi-0x4]
64015d99:	mov    DWORD PTR [ebp-0x7c],eax
64015d9c:	lea    eax,[ebp-0x64]
64015d9f:	push   eax
64015da0:	push   DWORD PTR [ebp-0x78]
64015da3:	movsx  eax,dl
64015da6:	push   DWORD PTR [ebp-0x20]
64015da9:	mov    DWORD PTR [ebp-0x2c],edi
64015dac:	push   eax
64015dad:	push   DWORD PTR [ebp-0x68]
64015db0:	lea    eax,[ebp-0x80]
64015db3:	push   ebx
64015db4:	push   eax
64015db5:	push   DWORD PTR ds:0x64028af4
64015dbb:	call   0x6401124f
64015dc0:	pop    ecx
64015dc1:	call   eax
64015dc3:	mov    edi,DWORD PTR [ebp-0x18]
64015dc6:	add    esp,0x1c
64015dc9:	and    edi,0x80
64015dcf:	je     0x64015deb
64015dd1:	cmp    DWORD PTR [ebp-0x20],esi
64015dd4:	jne    0x64015deb
64015dd6:	lea    eax,[ebp-0x64]
64015dd9:	push   eax
64015dda:	push   ebx
64015ddb:	push   DWORD PTR ds:0x64028b00
64015de1:	call   0x6401124f
64015de6:	pop    ecx
64015de7:	call   eax
64015de9:	pop    ecx
64015dea:	pop    ecx
64015deb:	cmp    BYTE PTR [ebp-0x19],0x67
64015def:	jne    0x64015e0a
64015df1:	cmp    edi,esi
64015df3:	jne    0x64015e0a
64015df5:	lea    eax,[ebp-0x64]
64015df8:	push   eax
64015df9:	push   ebx
64015dfa:	push   DWORD PTR ds:0x64028afc
64015e00:	call   0x6401124f
64015e05:	pop    ecx
64015e06:	call   eax
64015e08:	pop    ecx
64015e09:	pop    ecx
64015e0a:	cmp    BYTE PTR [ebx],0x2d
64015e0d:	jne    0x64015e1a
64015e0f:	or     DWORD PTR [ebp-0x18],0x100
64015e16:	inc    ebx
64015e17:	mov    DWORD PTR [ebp-0x24],ebx
64015e1a:	push   ebx
64015e1b:	jmp    0x64015c92
64015e20:	mov    DWORD PTR [ebp-0x20],0x8
64015e27:	mov    DWORD PTR [ebp-0x4c],ecx
64015e2a:	jmp    0x64015e4d
64015e2c:	sub    eax,0x73
64015e2f:	je     0x64015ba5
64015e35:	dec    eax
64015e36:	dec    eax
64015e37:	je     0x64015d20
64015e3d:	sub    eax,0x3
64015e40:	jne    0x64015f9f
64015e46:	mov    DWORD PTR [ebp-0x4c],0x27
64015e4d:	test   BYTE PTR [ebp-0x18],0x80
64015e51:	mov    DWORD PTR [ebp-0x28],0x10
64015e58:	je     0x64015d27
64015e5e:	mov    al,BYTE PTR [ebp-0x4c]
64015e61:	add    al,0x51
64015e63:	mov    BYTE PTR [ebp-0x38],0x30
64015e67:	mov    BYTE PTR [ebp-0x37],al
64015e6a:	mov    DWORD PTR [ebp-0x3c],0x2
64015e71:	jmp    0x64015d27
64015e76:	test   cx,0x1000
64015e7b:	jne    0x64015d33
64015e81:	add    edi,0x4
64015e84:	test   cl,0x20
64015e87:	je     0x64015e9e
64015e89:	test   cl,0x40
64015e8c:	mov    DWORD PTR [ebp-0x2c],edi
64015e8f:	je     0x64015e97
64015e91:	movsx  eax,WORD PTR [edi-0x4]
64015e95:	jmp    0x64015e9b
64015e97:	movzx  eax,WORD PTR [edi-0x4]
64015e9b:	cdq    
64015e9c:	jmp    0x64015eae
64015e9e:	test   cl,0x40
64015ea1:	mov    eax,DWORD PTR [edi-0x4]
64015ea4:	je     0x64015ea9
64015ea6:	cdq    
64015ea7:	jmp    0x64015eab
64015ea9:	xor    edx,edx
64015eab:	mov    DWORD PTR [ebp-0x2c],edi
64015eae:	test   cl,0x40
64015eb1:	je     0x64015ecb
64015eb3:	cmp    edx,esi
64015eb5:	jg     0x64015ecb
64015eb7:	jl     0x64015ebd
64015eb9:	cmp    eax,esi
64015ebb:	jae    0x64015ecb
64015ebd:	neg    eax
64015ebf:	adc    edx,0x0
64015ec2:	neg    edx
64015ec4:	or     DWORD PTR [ebp-0x18],0x100
64015ecb:	test   WORD PTR [ebp-0x18],0x9000
64015ed1:	mov    ebx,edx
64015ed3:	mov    edi,eax
64015ed5:	jne    0x64015ed9
64015ed7:	xor    ebx,ebx
64015ed9:	cmp    DWORD PTR [ebp-0x20],0x0
64015edd:	jge    0x64015ee8
64015edf:	mov    DWORD PTR [ebp-0x20],0x1
64015ee6:	jmp    0x64015ef9
64015ee8:	and    DWORD PTR [ebp-0x18],0xfffffff7
64015eec:	mov    eax,0x200
64015ef1:	cmp    DWORD PTR [ebp-0x20],eax
64015ef4:	jle    0x64015ef9
64015ef6:	mov    DWORD PTR [ebp-0x20],eax
64015ef9:	mov    eax,edi
64015efb:	or     eax,ebx
64015efd:	jne    0x64015f02
64015eff:	and    DWORD PTR [ebp-0x3c],eax
64015f02:	lea    esi,[ebp+0x1eb]
64015f08:	mov    eax,DWORD PTR [ebp-0x20]
64015f0b:	dec    DWORD PTR [ebp-0x20]
64015f0e:	test   eax,eax
64015f10:	jg     0x64015f18
64015f12:	mov    eax,edi
64015f14:	or     eax,ebx
64015f16:	je     0x64015f3c
64015f18:	mov    eax,DWORD PTR [ebp-0x28]
64015f1b:	cdq    
64015f1c:	push   edx
64015f1d:	push   eax
64015f1e:	push   ebx
64015f1f:	push   edi
64015f20:	call   0x64016280
64015f25:	add    ecx,0x30
64015f28:	cmp    ecx,0x39
64015f2b:	mov    DWORD PTR [ebp-0x68],ebx
64015f2e:	mov    edi,eax
64015f30:	mov    ebx,edx
64015f32:	jle    0x64015f37
64015f34:	add    ecx,DWORD PTR [ebp-0x4c]
64015f37:	mov    BYTE PTR [esi],cl
64015f39:	dec    esi
64015f3a:	jmp    0x64015f08
64015f3c:	lea    eax,[ebp+0x1eb]
64015f42:	sub    eax,esi
64015f44:	inc    esi
64015f45:	test   WORD PTR [ebp-0x18],0x200
64015f4b:	mov    DWORD PTR [ebp-0x28],eax
64015f4e:	mov    DWORD PTR [ebp-0x24],esi
64015f51:	je     0x64015f9f
64015f53:	test   eax,eax
64015f55:	je     0x64015f5e
64015f57:	mov    ecx,esi
64015f59:	cmp    BYTE PTR [ecx],0x30
64015f5c:	je     0x64015f9f
64015f5e:	dec    DWORD PTR [ebp-0x24]
64015f61:	mov    ecx,DWORD PTR [ebp-0x24]
64015f64:	mov    BYTE PTR [ecx],0x30
64015f67:	inc    eax
64015f68:	jmp    0x64015f9c
64015f6a:	dec    ecx
64015f6b:	cmp    WORD PTR [eax],si
64015f6e:	je     0x64015f76
64015f70:	inc    eax
64015f71:	inc    eax
64015f72:	cmp    ecx,esi
64015f74:	jne    0x64015f6a
64015f76:	sub    eax,DWORD PTR [ebp-0x24]
64015f79:	sar    eax,1
64015f7b:	jmp    0x64015f9c
64015f7d:	cmp    edi,esi
64015f7f:	jne    0x64015f89
64015f81:	mov    eax,ds:0x640288e0
64015f86:	mov    DWORD PTR [ebp-0x24],eax
64015f89:	mov    eax,DWORD PTR [ebp-0x24]
64015f8c:	jmp    0x64015f95
64015f8e:	dec    ecx
64015f8f:	cmp    BYTE PTR [eax],0x0
64015f92:	je     0x64015f99
64015f94:	inc    eax
64015f95:	cmp    ecx,esi
64015f97:	jne    0x64015f8e
64015f99:	sub    eax,DWORD PTR [ebp-0x24]
64015f9c:	mov    DWORD PTR [ebp-0x28],eax
64015f9f:	cmp    DWORD PTR [ebp-0x50],0x0
64015fa3:	jne    0x640160a4
64015fa9:	mov    eax,DWORD PTR [ebp-0x18]
64015fac:	test   al,0x40
64015fae:	je     0x64015fd5
64015fb0:	test   ax,0x100
64015fb4:	je     0x64015fbc
64015fb6:	mov    BYTE PTR [ebp-0x38],0x2d
64015fba:	jmp    0x64015fce
64015fbc:	test   al,0x1
64015fbe:	je     0x64015fc6
64015fc0:	mov    BYTE PTR [ebp-0x38],0x2b
64015fc4:	jmp    0x64015fce
64015fc6:	test   al,0x2
64015fc8:	je     0x64015fd5
64015fca:	mov    BYTE PTR [ebp-0x38],0x20
64015fce:	mov    DWORD PTR [ebp-0x3c],0x1
64015fd5:	mov    ebx,DWORD PTR [ebp-0x40]
64015fd8:	sub    ebx,DWORD PTR [ebp-0x28]
64015fdb:	sub    ebx,DWORD PTR [ebp-0x3c]
64015fde:	test   BYTE PTR [ebp-0x18],0xc
64015fe2:	jne    0x64015ff5
64015fe4:	push   DWORD PTR [ebp-0x30]
64015fe7:	lea    eax,[ebp-0x34]
64015fea:	push   ebx
64015feb:	push   0x20
64015fed:	call   0x6401572d
64015ff2:	add    esp,0xc
64015ff5:	push   DWORD PTR [ebp-0x3c]
64015ff8:	mov    edi,DWORD PTR [ebp-0x30]
64015ffb:	lea    eax,[ebp-0x34]
64015ffe:	lea    ecx,[ebp-0x38]
64016001:	call   0x64015751
64016006:	test   BYTE PTR [ebp-0x18],0x8
6401600a:	pop    ecx
6401600b:	je     0x64016022
6401600d:	test   BYTE PTR [ebp-0x18],0x4
64016011:	jne    0x64016022
64016013:	push   edi
64016014:	push   ebx
64016015:	push   0x30
64016017:	lea    eax,[ebp-0x34]
6401601a:	call   0x6401572d
6401601f:	add    esp,0xc
64016022:	cmp    DWORD PTR [ebp-0x44],0x0
64016026:	mov    eax,DWORD PTR [ebp-0x28]
64016029:	je     0x6401607c
6401602b:	test   eax,eax
6401602d:	jle    0x6401607c
6401602f:	mov    esi,DWORD PTR [ebp-0x24]
64016032:	mov    DWORD PTR [ebp-0x68],eax
64016035:	movzx  eax,WORD PTR [esi]
64016038:	dec    DWORD PTR [ebp-0x68]
6401603b:	push   eax
6401603c:	push   0x6
6401603e:	lea    eax,[ebp+0x1ec]
64016044:	push   eax
64016045:	lea    eax,[ebp-0x70]
64016048:	inc    esi
64016049:	push   eax
6401604a:	inc    esi
6401604b:	call   0x6401a341
64016050:	add    esp,0x10
64016053:	test   eax,eax
64016055:	jne    0x64016076
64016057:	cmp    DWORD PTR [ebp-0x70],eax
6401605a:	je     0x64016076
6401605c:	push   DWORD PTR [ebp-0x70]
6401605f:	lea    eax,[ebp-0x34]
64016062:	lea    ecx,[ebp+0x1ec]
64016068:	call   0x64015751
6401606d:	cmp    DWORD PTR [ebp-0x68],0x0
64016071:	pop    ecx
64016072:	jne    0x64016035
64016074:	jmp    0x64016089
64016076:	or     DWORD PTR [ebp-0x34],0xffffffff
6401607a:	jmp    0x64016089
6401607c:	mov    ecx,DWORD PTR [ebp-0x24]
6401607f:	push   eax
64016080:	lea    eax,[ebp-0x34]
64016083:	call   0x64015751
64016088:	pop    ecx
64016089:	cmp    DWORD PTR [ebp-0x34],0x0
6401608d:	jl     0x640160a4
6401608f:	test   BYTE PTR [ebp-0x18],0x4
64016093:	je     0x640160a4
64016095:	push   edi
64016096:	push   ebx
64016097:	push   0x20
64016099:	lea    eax,[ebp-0x34]
6401609c:	call   0x6401572d
640160a1:	add    esp,0xc
640160a4:	cmp    DWORD PTR [ebp-0x54],0x0
640160a8:	je     0x640160b7
640160aa:	push   DWORD PTR [ebp-0x54]
640160ad:	call   0x640101e6
640160b2:	and    DWORD PTR [ebp-0x54],0x0
640160b6:	pop    ecx
640160b7:	mov    ebx,DWORD PTR [ebp-0x48]
640160ba:	mov    al,BYTE PTR [ebx]
640160bc:	test   al,al
640160be:	mov    BYTE PTR [ebp-0x19],al
640160c1:	je     0x640160e7
640160c3:	mov    ecx,DWORD PTR [ebp-0x74]
640160c6:	mov    edi,DWORD PTR [ebp-0x2c]
640160c9:	mov    dl,al
640160cb:	jmp    0x640158f9
640160d0:	call   0x64011120
640160d5:	mov    DWORD PTR [eax],0x16
640160db:	xor    eax,eax
640160dd:	push   eax
640160de:	push   eax
640160df:	push   eax
640160e0:	push   eax
640160e1:	push   eax
640160e2:	jmp    0x6401580b
640160e7:	cmp    BYTE PTR [ebp-0x58],0x0
640160eb:	je     0x640160f4
640160ed:	mov    eax,DWORD PTR [ebp-0x5c]
640160f0:	and    DWORD PTR [eax+0x70],0xfffffffd
640160f4:	mov    eax,DWORD PTR [ebp-0x34]
640160f7:	mov    ecx,DWORD PTR [ebp+0x1f4]
640160fd:	pop    edi
640160fe:	pop    esi
640160ff:	xor    ecx,ebp
64016101:	pop    ebx
64016102:	call   0x6400f34e
64016107:	add    ebp,0x1f8
6401610d:	leave  
6401610e:	ret    
6401610f:	fstp   QWORD PTR [edx+0x1]
64016112:	fs inc esp
64016114:	pop    ecx
64016115:	add    DWORD PTR [edi+ebx*2+0x59],esp
64016119:	add    DWORD PTR [esi+ebp*4+0x59],esp
6401611d:	add    DWORD PTR [eax+ebp*8+0x59],esp
64016121:	add    DWORD PTR [eax+esi*8+0x59],esp
64016125:	add    DWORD PTR [edi+eiz*1+0x5a],esp
64016129:	add    DWORD PTR [edi+ebx*1+0x5b],esp
6401612d:	add    DWORD PTR [ebp+edx*2-0x75],esp
64016131:	in     al,dx
64016132:	sub    esp,0x20
64016135:	push   ebx
64016136:	xor    ebx,ebx
64016138:	cmp    DWORD PTR [ebp+0x14],ebx
6401613b:	jne    0x6401615d
6401613d:	call   0x64011120
64016142:	push   ebx
64016143:	push   ebx
64016144:	push   ebx
64016145:	push   ebx
64016146:	push   ebx
64016147:	mov    DWORD PTR [eax],0x16
6401614d:	call   0x6400ee86
64016152:	add    esp,0x14
64016155:	or     eax,0xffffffff
64016158:	jmp    0x640161f6
6401615d:	push   esi
6401615e:	mov    esi,DWORD PTR [ebp+0xc]
64016161:	push   edi
64016162:	mov    edi,DWORD PTR [ebp+0x10]
64016165:	cmp    edi,ebx
64016167:	je     0x6401618a
64016169:	cmp    esi,ebx
6401616b:	jne    0x6401618a
6401616d:	call   0x64011120
64016172:	push   ebx
64016173:	push   ebx
64016174:	push   ebx
64016175:	push   ebx
64016176:	push   ebx
64016177:	mov    DWORD PTR [eax],0x16
6401617d:	call   0x6400ee86
64016182:	add    esp,0x14
64016185:	or     eax,0xffffffff
64016188:	jmp    0x640161f4
6401618a:	mov    eax,0x7fffffff
6401618f:	cmp    edi,eax
64016191:	mov    DWORD PTR [ebp-0x1c],eax
64016194:	ja     0x64016199
64016196:	mov    DWORD PTR [ebp-0x1c],edi
64016199:	push   DWORD PTR [ebp+0x1c]
6401619c:	lea    eax,[ebp-0x20]
6401619f:	push   DWORD PTR [ebp+0x18]
640161a2:	mov    DWORD PTR [ebp-0x14],0x42
640161a9:	push   DWORD PTR [ebp+0x14]
640161ac:	mov    DWORD PTR [ebp-0x18],esi
640161af:	push   eax
640161b0:	mov    DWORD PTR [ebp-0x20],esi
640161b3:	call   DWORD PTR [ebp+0x8]
640161b6:	add    esp,0x10
640161b9:	cmp    esi,ebx
640161bb:	mov    DWORD PTR [ebp+0x14],eax
640161be:	je     0x640161f4
640161c0:	cmp    eax,ebx
640161c2:	jl     0x640161e6
640161c4:	dec    DWORD PTR [ebp-0x1c]
640161c7:	js     0x640161d0
640161c9:	mov    eax,DWORD PTR [ebp-0x20]
640161cc:	mov    BYTE PTR [eax],bl
640161ce:	jmp    0x640161e1
640161d0:	lea    eax,[ebp-0x20]
640161d3:	push   eax
640161d4:	push   ebx
640161d5:	call   0x64013465
640161da:	cmp    eax,0xffffffff
640161dd:	pop    ecx
640161de:	pop    ecx
640161df:	je     0x640161e6
640161e1:	mov    eax,DWORD PTR [ebp+0x14]
640161e4:	jmp    0x640161f4
640161e6:	xor    eax,eax
640161e8:	cmp    DWORD PTR [ebp-0x1c],ebx
640161eb:	mov    BYTE PTR [esi+edi*1-0x1],bl
640161ef:	setge  al
640161f2:	dec    eax
640161f3:	dec    eax
640161f4:	pop    edi
640161f5:	pop    esi
640161f6:	pop    ebx
640161f7:	leave  
640161f8:	ret    
640161f9:	push   ebp
640161fa:	mov    ebp,esp
640161fc:	push   ebx
640161fd:	xor    ebx,ebx
640161ff:	cmp    DWORD PTR [ebp+0x10],ebx
64016202:	jne    0x64016221
64016204:	call   0x64011120
64016209:	push   ebx
6401620a:	push   ebx
6401620b:	push   ebx
6401620c:	push   ebx
6401620d:	push   ebx
6401620e:	mov    DWORD PTR [eax],0x16
64016214:	call   0x6400ee86
64016219:	add    esp,0x14
6401621c:	or     eax,0xffffffff
6401621f:	jmp    0x6401627c
64016221:	push   esi
64016222:	mov    esi,DWORD PTR [ebp+0x8]
64016225:	cmp    esi,ebx
64016227:	je     0x6401622e
64016229:	cmp    DWORD PTR [ebp+0xc],ebx
6401622c:	ja     0x6401623b
6401622e:	call   0x64011120
64016233:	mov    DWORD PTR [eax],0x16
64016239:	jmp    0x6401626b
6401623b:	push   DWORD PTR [ebp+0x18]
6401623e:	push   DWORD PTR [ebp+0x14]
64016241:	push   DWORD PTR [ebp+0x10]
64016244:	push   DWORD PTR [ebp+0xc]
64016247:	push   esi
64016248:	push   0x64019518
6401624d:	call   0x6401612f
64016252:	add    esp,0x18
64016255:	cmp    eax,ebx
64016257:	jge    0x6401625b
64016259:	mov    BYTE PTR [esi],bl
6401625b:	cmp    eax,0xfffffffe
6401625e:	jne    0x6401627b
64016260:	call   0x64011120
64016265:	mov    DWORD PTR [eax],0x22
6401626b:	push   ebx
6401626c:	push   ebx
6401626d:	push   ebx
6401626e:	push   ebx
6401626f:	push   ebx
64016270:	call   0x6400ee86
64016275:	add    esp,0x14
64016278:	or     eax,0xffffffff
6401627b:	pop    esi
6401627c:	pop    ebx
6401627d:	pop    ebp
6401627e:	ret    
6401627f:	int3   
64016280:	push   esi
64016281:	mov    eax,DWORD PTR [esp+0x14]
64016285:	or     eax,eax
64016287:	jne    0x640162b1
64016289:	mov    ecx,DWORD PTR [esp+0x10]
6401628d:	mov    eax,DWORD PTR [esp+0xc]
64016291:	xor    edx,edx
64016293:	div    ecx
64016295:	mov    ebx,eax
64016297:	mov    eax,DWORD PTR [esp+0x8]
6401629b:	div    ecx
6401629d:	mov    esi,eax
6401629f:	mov    eax,ebx
640162a1:	mul    DWORD PTR [esp+0x10]
640162a5:	mov    ecx,eax
640162a7:	mov    eax,esi
640162a9:	mul    DWORD PTR [esp+0x10]
640162ad:	add    edx,ecx
640162af:	jmp    0x640162f8
640162b1:	mov    ecx,eax
640162b3:	mov    ebx,DWORD PTR [esp+0x10]
640162b7:	mov    edx,DWORD PTR [esp+0xc]
640162bb:	mov    eax,DWORD PTR [esp+0x8]
640162bf:	shr    ecx,1
640162c1:	rcr    ebx,1
640162c3:	shr    edx,1
640162c5:	rcr    eax,1
640162c7:	or     ecx,ecx
640162c9:	jne    0x640162bf
640162cb:	div    ebx
640162cd:	mov    esi,eax
640162cf:	mul    DWORD PTR [esp+0x14]
640162d3:	mov    ecx,eax
640162d5:	mov    eax,DWORD PTR [esp+0x10]
640162d9:	mul    esi
640162db:	add    edx,ecx
640162dd:	jb     0x640162ed
640162df:	cmp    edx,DWORD PTR [esp+0xc]
640162e3:	ja     0x640162ed
640162e5:	jb     0x640162f6
640162e7:	cmp    eax,DWORD PTR [esp+0x8]
640162eb:	jbe    0x640162f6
640162ed:	dec    esi
640162ee:	sub    eax,DWORD PTR [esp+0x10]
640162f2:	sbb    edx,DWORD PTR [esp+0x14]
640162f6:	xor    ebx,ebx
640162f8:	sub    eax,DWORD PTR [esp+0x8]
640162fc:	sbb    edx,DWORD PTR [esp+0xc]
64016300:	neg    edx
64016302:	neg    eax
64016304:	sbb    edx,0x0
64016307:	mov    ecx,edx
64016309:	mov    edx,ebx
6401630b:	mov    ebx,ecx
6401630d:	mov    ecx,eax
6401630f:	mov    eax,esi
64016311:	pop    esi
64016312:	ret    0x10
64016315:	push   ebp
64016316:	mov    ebp,esp
64016318:	sub    esp,0x18
6401631b:	push   ebx
6401631c:	push   DWORD PTR [ebp+0x10]
6401631f:	lea    ecx,[ebp-0x18]
64016322:	call   0x6400f4f1
64016327:	mov    ebx,DWORD PTR [ebp+0x8]
6401632a:	lea    eax,[ebx+0x1]
6401632d:	cmp    eax,0x100
64016332:	ja     0x64016343
64016334:	mov    eax,DWORD PTR [ebp-0x18]
64016337:	mov    eax,DWORD PTR [eax+0xc8]
6401633d:	movzx  eax,WORD PTR [eax+ebx*2]
64016341:	jmp    0x640163b8
64016343:	mov    DWORD PTR [ebp+0x8],ebx
64016346:	sar    DWORD PTR [ebp+0x8],0x8
6401634a:	lea    eax,[ebp-0x18]
6401634d:	push   eax
6401634e:	mov    eax,DWORD PTR [ebp+0x8]
64016351:	and    eax,0xff
64016356:	push   eax
64016357:	call   0x640167b0
6401635c:	test   eax,eax
6401635e:	pop    ecx
6401635f:	pop    ecx
64016360:	je     0x64016374
64016362:	mov    al,BYTE PTR [ebp+0x8]
64016365:	push   0x2
64016367:	mov    BYTE PTR [ebp-0x8],al
6401636a:	mov    BYTE PTR [ebp-0x7],bl
6401636d:	mov    BYTE PTR [ebp-0x6],0x0
64016371:	pop    ecx
64016372:	jmp    0x6401637e
64016374:	xor    ecx,ecx
64016376:	mov    BYTE PTR [ebp-0x8],bl
64016379:	mov    BYTE PTR [ebp-0x7],0x0
6401637d:	inc    ecx
6401637e:	mov    eax,DWORD PTR [ebp-0x18]
64016381:	push   0x1
64016383:	push   DWORD PTR [eax+0x14]
64016386:	push   DWORD PTR [eax+0x4]
64016389:	lea    eax,[ebp-0x4]
6401638c:	push   eax
6401638d:	push   ecx
6401638e:	lea    eax,[ebp-0x8]
64016391:	push   eax
64016392:	lea    eax,[ebp-0x18]
64016395:	push   0x1
64016397:	push   eax
64016398:	call   0x640182a6
6401639d:	add    esp,0x20
640163a0:	test   eax,eax
640163a2:	jne    0x640163b4
640163a4:	cmp    BYTE PTR [ebp-0xc],al
640163a7:	je     0x640163b0
640163a9:	mov    eax,DWORD PTR [ebp-0x10]
640163ac:	and    DWORD PTR [eax+0x70],0xfffffffd
640163b0:	xor    eax,eax
640163b2:	jmp    0x640163c8
640163b4:	movzx  eax,WORD PTR [ebp-0x4]
640163b8:	and    eax,DWORD PTR [ebp+0xc]
640163bb:	cmp    BYTE PTR [ebp-0xc],0x0
640163bf:	je     0x640163c8
640163c1:	mov    ecx,DWORD PTR [ebp-0x10]
640163c4:	and    DWORD PTR [ecx+0x70],0xfffffffd
640163c8:	pop    ebx
640163c9:	leave  
640163ca:	ret    
640163cb:	push   ebp
640163cc:	mov    ebp,esp
640163ce:	sub    esp,0x14
640163d1:	mov    eax,ds:0x64028038
640163d6:	xor    eax,ebp
640163d8:	mov    DWORD PTR [ebp-0x4],eax
640163db:	push   ebx
640163dc:	push   esi
640163dd:	xor    ebx,ebx
640163df:	cmp    DWORD PTR ds:0x64029a10,ebx
640163e5:	push   edi
640163e6:	mov    esi,ecx
640163e8:	jne    0x64016422
640163ea:	push   ebx
640163eb:	push   ebx
640163ec:	xor    edi,edi
640163ee:	inc    edi
640163ef:	push   edi
640163f0:	push   0x64021cdc
640163f5:	push   0x100
640163fa:	push   ebx
640163fb:	call   DWORD PTR ds:0x64021140
64016401:	test   eax,eax
64016403:	je     0x6401640d
64016405:	mov    DWORD PTR ds:0x64029a10,edi
6401640b:	jmp    0x64016422
6401640d:	call   DWORD PTR ds:0x64021044
64016413:	cmp    eax,0x78
64016416:	jne    0x64016422
64016418:	mov    DWORD PTR ds:0x64029a10,0x2
64016422:	cmp    DWORD PTR [ebp+0x14],ebx
64016425:	jle    0x64016449
64016427:	mov    ecx,DWORD PTR [ebp+0x14]
6401642a:	mov    eax,DWORD PTR [ebp+0x10]
6401642d:	dec    ecx
6401642e:	cmp    BYTE PTR [eax],bl
64016430:	je     0x6401643a
64016432:	inc    eax
64016433:	cmp    ecx,ebx
64016435:	jne    0x6401642d
64016437:	or     ecx,0xffffffff
6401643a:	mov    eax,DWORD PTR [ebp+0x14]
6401643d:	sub    eax,ecx
6401643f:	dec    eax
64016440:	cmp    eax,DWORD PTR [ebp+0x14]
64016443:	jge    0x64016446
64016445:	inc    eax
64016446:	mov    DWORD PTR [ebp+0x14],eax
64016449:	mov    eax,ds:0x64029a10
6401644e:	cmp    eax,0x2
64016451:	je     0x64016602
64016457:	cmp    eax,ebx
64016459:	je     0x64016602
6401645f:	cmp    eax,0x1
64016462:	jne    0x64016633
64016468:	cmp    DWORD PTR [ebp+0x20],ebx
6401646b:	mov    DWORD PTR [ebp-0x8],ebx
6401646e:	jne    0x64016478
64016470:	mov    eax,DWORD PTR [esi]
64016472:	mov    eax,DWORD PTR [eax+0x4]
64016475:	mov    DWORD PTR [ebp+0x20],eax
64016478:	mov    esi,DWORD PTR ds:0x6402103c
6401647e:	xor    eax,eax
64016480:	cmp    DWORD PTR [ebp+0x24],ebx
64016483:	push   ebx
64016484:	push   ebx
64016485:	push   DWORD PTR [ebp+0x14]
64016488:	setne  al
6401648b:	push   DWORD PTR [ebp+0x10]
6401648e:	lea    eax,[eax*8+0x1]
64016495:	push   eax
64016496:	push   DWORD PTR [ebp+0x20]
64016499:	call   esi
6401649b:	mov    edi,eax
6401649d:	cmp    edi,ebx
6401649f:	je     0x64016633
640164a5:	jle    0x640164ea
640164a7:	push   0xffffffe0
640164a9:	xor    edx,edx
640164ab:	pop    eax
640164ac:	div    edi
640164ae:	cmp    eax,0x2
640164b1:	jb     0x640164ea
640164b3:	lea    eax,[edi+edi*1+0x8]
640164b7:	cmp    eax,0x400
640164bc:	ja     0x640164d1
640164be:	call   0x6400fad0
640164c3:	mov    eax,esp
640164c5:	cmp    eax,ebx
640164c7:	je     0x640164e5
640164c9:	mov    DWORD PTR [eax],0xcccc
640164cf:	jmp    0x640164e2
640164d1:	push   eax
640164d2:	call   0x640102c3
640164d7:	cmp    eax,ebx
640164d9:	pop    ecx
640164da:	je     0x640164e5
640164dc:	mov    DWORD PTR [eax],0xdddd
640164e2:	add    eax,0x8
640164e5:	mov    DWORD PTR [ebp-0xc],eax
640164e8:	jmp    0x640164ed
640164ea:	mov    DWORD PTR [ebp-0xc],ebx
640164ed:	cmp    DWORD PTR [ebp-0xc],ebx
640164f0:	je     0x64016633
640164f6:	push   edi
640164f7:	push   DWORD PTR [ebp-0xc]
640164fa:	push   DWORD PTR [ebp+0x14]
640164fd:	push   DWORD PTR [ebp+0x10]
64016500:	push   0x1
64016502:	push   DWORD PTR [ebp+0x20]
64016505:	call   esi
64016507:	test   eax,eax
64016509:	je     0x640165f1
6401650f:	mov    esi,DWORD PTR ds:0x64021140
64016515:	push   ebx
64016516:	push   ebx
64016517:	push   edi
64016518:	push   DWORD PTR [ebp-0xc]
6401651b:	push   DWORD PTR [ebp+0xc]
6401651e:	push   DWORD PTR [ebp+0x8]
64016521:	call   esi
64016523:	mov    ecx,eax
64016525:	cmp    ecx,ebx
64016527:	mov    DWORD PTR [ebp-0x8],ecx
6401652a:	je     0x640165f1
64016530:	test   WORD PTR [ebp+0xc],0x400
64016536:	je     0x64016561
64016538:	cmp    DWORD PTR [ebp+0x1c],ebx
6401653b:	je     0x640165f1
64016541:	cmp    ecx,DWORD PTR [ebp+0x1c]
64016544:	jg     0x640165f1
6401654a:	push   DWORD PTR [ebp+0x1c]
6401654d:	push   DWORD PTR [ebp+0x18]
64016550:	push   edi
64016551:	push   DWORD PTR [ebp-0xc]
64016554:	push   DWORD PTR [ebp+0xc]
64016557:	push   DWORD PTR [ebp+0x8]
6401655a:	call   esi
6401655c:	jmp    0x640165f1
64016561:	cmp    ecx,ebx
64016563:	jle    0x640165aa
64016565:	push   0xffffffe0
64016567:	xor    edx,edx
64016569:	pop    eax
6401656a:	div    ecx
6401656c:	cmp    eax,0x2
6401656f:	jb     0x640165aa
64016571:	lea    eax,[ecx+ecx*1+0x8]
64016575:	cmp    eax,0x400
6401657a:	ja     0x64016592
6401657c:	call   0x6400fad0
64016581:	mov    esi,esp
64016583:	cmp    esi,ebx
64016585:	je     0x640165f1
64016587:	mov    DWORD PTR [esi],0xcccc
6401658d:	add    esi,0x8
64016590:	jmp    0x640165ac
64016592:	push   eax
64016593:	call   0x640102c3
64016598:	cmp    eax,ebx
6401659a:	pop    ecx
6401659b:	je     0x640165a6
6401659d:	mov    DWORD PTR [eax],0xdddd
640165a3:	add    eax,0x8
640165a6:	mov    esi,eax
640165a8:	jmp    0x640165ac
640165aa:	xor    esi,esi
640165ac:	cmp    esi,ebx
640165ae:	je     0x640165f1
640165b0:	push   DWORD PTR [ebp-0x8]
640165b3:	push   esi
640165b4:	push   edi
640165b5:	push   DWORD PTR [ebp-0xc]
640165b8:	push   DWORD PTR [ebp+0xc]
640165bb:	push   DWORD PTR [ebp+0x8]
640165be:	call   DWORD PTR ds:0x64021140
640165c4:	test   eax,eax
640165c6:	je     0x640165ea
640165c8:	cmp    DWORD PTR [ebp+0x1c],ebx
640165cb:	push   ebx
640165cc:	push   ebx
640165cd:	jne    0x640165d3
640165cf:	push   ebx
640165d0:	push   ebx
640165d1:	jmp    0x640165d9
640165d3:	push   DWORD PTR [ebp+0x1c]
640165d6:	push   DWORD PTR [ebp+0x18]
640165d9:	push   DWORD PTR [ebp-0x8]
640165dc:	push   esi
640165dd:	push   ebx
640165de:	push   DWORD PTR [ebp+0x20]
640165e1:	call   DWORD PTR ds:0x64021024
640165e7:	mov    DWORD PTR [ebp-0x8],eax
640165ea:	push   esi
640165eb:	call   0x6400f85e
640165f0:	pop    ecx
640165f1:	push   DWORD PTR [ebp-0xc]
640165f4:	call   0x6400f85e
640165f9:	mov    eax,DWORD PTR [ebp-0x8]
640165fc:	pop    ecx
640165fd:	jmp    0x6401675b
64016602:	cmp    DWORD PTR [ebp+0x8],ebx
64016605:	mov    DWORD PTR [ebp-0xc],ebx
64016608:	mov    DWORD PTR [ebp-0x10],ebx
6401660b:	jne    0x64016615
6401660d:	mov    eax,DWORD PTR [esi]
6401660f:	mov    eax,DWORD PTR [eax+0x14]
64016612:	mov    DWORD PTR [ebp+0x8],eax
64016615:	cmp    DWORD PTR [ebp+0x20],ebx
64016618:	jne    0x64016622
6401661a:	mov    eax,DWORD PTR [esi]
6401661c:	mov    eax,DWORD PTR [eax+0x4]
6401661f:	mov    DWORD PTR [ebp+0x20],eax
64016622:	push   DWORD PTR [ebp+0x8]
64016625:	call   0x64019ec8
6401662a:	cmp    eax,0xffffffff
6401662d:	pop    ecx
6401662e:	mov    DWORD PTR [ebp-0x14],eax
64016631:	jne    0x6401663a
64016633:	xor    eax,eax
64016635:	jmp    0x6401675b
6401663a:	cmp    eax,DWORD PTR [ebp+0x20]
6401663d:	je     0x6401671e
64016643:	push   ebx
64016644:	push   ebx
64016645:	lea    ecx,[ebp+0x14]
64016648:	push   ecx
64016649:	push   DWORD PTR [ebp+0x10]
6401664c:	push   eax
6401664d:	push   DWORD PTR [ebp+0x20]
64016650:	call   0x64019f0f
64016655:	add    esp,0x18
64016658:	cmp    eax,ebx
6401665a:	mov    DWORD PTR [ebp-0xc],eax
6401665d:	je     0x64016633
6401665f:	mov    esi,DWORD PTR ds:0x6402113c
64016665:	push   ebx
64016666:	push   ebx
64016667:	push   DWORD PTR [ebp+0x14]
6401666a:	push   eax
6401666b:	push   DWORD PTR [ebp+0xc]
6401666e:	push   DWORD PTR [ebp+0x8]
64016671:	call   esi
64016673:	cmp    eax,ebx
64016675:	mov    DWORD PTR [ebp-0x8],eax
64016678:	jne    0x64016681
6401667a:	xor    esi,esi
6401667c:	jmp    0x64016738
64016681:	jle    0x640166c0
64016683:	cmp    eax,0xffffffe0
64016686:	ja     0x640166c0
64016688:	add    eax,0x8
6401668b:	cmp    eax,0x400
64016690:	ja     0x640166a8
64016692:	call   0x6400fad0
64016697:	mov    edi,esp
64016699:	cmp    edi,ebx
6401669b:	je     0x6401667a
6401669d:	mov    DWORD PTR [edi],0xcccc
640166a3:	add    edi,0x8
640166a6:	jmp    0x640166c2
640166a8:	push   eax
640166a9:	call   0x640102c3
640166ae:	cmp    eax,ebx
640166b0:	pop    ecx
640166b1:	je     0x640166bc
640166b3:	mov    DWORD PTR [eax],0xdddd
640166b9:	add    eax,0x8
640166bc:	mov    edi,eax
640166be:	jmp    0x640166c2
640166c0:	xor    edi,edi
640166c2:	cmp    edi,ebx
640166c4:	je     0x6401667a
640166c6:	push   DWORD PTR [ebp-0x8]
640166c9:	push   ebx
640166ca:	push   edi
640166cb:	call   0x6400fa50
640166d0:	add    esp,0xc
640166d3:	push   DWORD PTR [ebp-0x8]
640166d6:	push   edi
640166d7:	push   DWORD PTR [ebp+0x14]
640166da:	push   DWORD PTR [ebp-0xc]
640166dd:	push   DWORD PTR [ebp+0xc]
640166e0:	push   DWORD PTR [ebp+0x8]
640166e3:	call   esi
640166e5:	cmp    eax,ebx
640166e7:	mov    DWORD PTR [ebp-0x8],eax
640166ea:	jne    0x640166f0
640166ec:	xor    esi,esi
640166ee:	jmp    0x64016715
640166f0:	push   DWORD PTR [ebp+0x1c]
640166f3:	lea    eax,[ebp-0x8]
640166f6:	push   DWORD PTR [ebp+0x18]
640166f9:	push   eax
640166fa:	push   edi
640166fb:	push   DWORD PTR [ebp+0x20]
640166fe:	push   DWORD PTR [ebp-0x14]
64016701:	call   0x64019f0f
64016706:	mov    esi,eax
64016708:	mov    DWORD PTR [ebp-0x10],esi
6401670b:	add    esp,0x18
6401670e:	neg    esi
64016710:	sbb    esi,esi
64016712:	and    esi,DWORD PTR [ebp-0x8]
64016715:	push   edi
64016716:	call   0x6400f85e
6401671b:	pop    ecx
6401671c:	jmp    0x64016738
6401671e:	push   DWORD PTR [ebp+0x1c]
64016721:	push   DWORD PTR [ebp+0x18]
64016724:	push   DWORD PTR [ebp+0x14]
64016727:	push   DWORD PTR [ebp+0x10]
6401672a:	push   DWORD PTR [ebp+0xc]
6401672d:	push   DWORD PTR [ebp+0x8]
64016730:	call   DWORD PTR ds:0x6402113c
64016736:	mov    esi,eax
64016738:	cmp    DWORD PTR [ebp-0xc],ebx
6401673b:	je     0x64016746
6401673d:	push   DWORD PTR [ebp-0xc]
64016740:	call   0x640101e6
64016745:	pop    ecx
64016746:	mov    eax,DWORD PTR [ebp-0x10]
64016749:	cmp    eax,ebx
6401674b:	je     0x64016759
6401674d:	cmp    DWORD PTR [ebp+0x18],eax
64016750:	je     0x64016759
64016752:	push   eax
64016753:	call   0x640101e6
64016758:	pop    ecx
64016759:	mov    eax,esi
6401675b:	lea    esp,[ebp-0x20]
6401675e:	pop    edi
6401675f:	pop    esi
64016760:	pop    ebx
64016761:	mov    ecx,DWORD PTR [ebp-0x4]
64016764:	xor    ecx,ebp
64016766:	call   0x6400f34e
6401676b:	leave  
6401676c:	ret    
6401676d:	push   ebp
6401676e:	mov    ebp,esp
64016770:	sub    esp,0x10
64016773:	push   DWORD PTR [ebp+0x8]
64016776:	lea    ecx,[ebp-0x10]
64016779:	call   0x6400f4f1
6401677e:	push   DWORD PTR [ebp+0x28]
64016781:	lea    ecx,[ebp-0x10]
64016784:	push   DWORD PTR [ebp+0x24]
64016787:	push   DWORD PTR [ebp+0x20]
6401678a:	push   DWORD PTR [ebp+0x1c]
6401678d:	push   DWORD PTR [ebp+0x18]
64016790:	push   DWORD PTR [ebp+0x14]
64016793:	push   DWORD PTR [ebp+0x10]
64016796:	push   DWORD PTR [ebp+0xc]
64016799:	call   0x640163cb
6401679e:	add    esp,0x20
640167a1:	cmp    BYTE PTR [ebp-0x4],0x0
640167a5:	je     0x640167ae
640167a7:	mov    ecx,DWORD PTR [ebp-0x8]
640167aa:	and    DWORD PTR [ecx+0x70],0xfffffffd
640167ae:	leave  
640167af:	ret    
640167b0:	push   ebp
640167b1:	mov    ebp,esp
640167b3:	sub    esp,0x10
640167b6:	push   DWORD PTR [ebp+0xc]
640167b9:	lea    ecx,[ebp-0x10]
640167bc:	call   0x6400f4f1
640167c1:	movzx  eax,BYTE PTR [ebp+0x8]
640167c5:	mov    ecx,DWORD PTR [ebp-0x10]
640167c8:	mov    ecx,DWORD PTR [ecx+0xc8]
640167ce:	movzx  eax,WORD PTR [ecx+eax*2]
640167d2:	and    eax,0x8000
640167d7:	cmp    BYTE PTR [ebp-0x4],0x0
640167db:	je     0x640167e4
640167dd:	mov    ecx,DWORD PTR [ebp-0x8]
640167e0:	and    DWORD PTR [ecx+0x70],0xfffffffd
640167e4:	leave  
640167e5:	ret    
640167e6:	push   0x0
640167e8:	push   DWORD PTR [esp+0x8]
640167ec:	call   0x640167b0
640167f1:	pop    ecx
640167f2:	pop    ecx
640167f3:	ret    
640167f4:	push   esi
640167f5:	push   edi
640167f6:	xor    esi,esi
640167f8:	mov    edi,0x64029a18
640167fd:	cmp    DWORD PTR [esi*8+0x640288f4],0x1
64016805:	jne    0x64016825
64016807:	lea    eax,[esi*8+0x640288f0]
6401680e:	mov    DWORD PTR [eax],edi
64016810:	push   0xfa0
64016815:	push   DWORD PTR [eax]
64016817:	add    edi,0x18
6401681a:	call   0x64018029
6401681f:	test   eax,eax
64016821:	pop    ecx
64016822:	pop    ecx
64016823:	je     0x64016831
64016825:	inc    esi
64016826:	cmp    esi,0x24
64016829:	jl     0x640167fd
6401682b:	xor    eax,eax
6401682d:	inc    eax
6401682e:	pop    edi
6401682f:	pop    esi
64016830:	ret    
64016831:	and    DWORD PTR [esi*8+0x640288f0],0x0
64016839:	xor    eax,eax
6401683b:	jmp    0x6401682e
6401683d:	push   ebx
6401683e:	mov    ebx,DWORD PTR ds:0x6402108c
64016844:	push   esi
64016845:	mov    esi,0x640288f0
6401684a:	push   edi
6401684b:	mov    edi,DWORD PTR [esi]
6401684d:	test   edi,edi
6401684f:	je     0x64016864
64016851:	cmp    DWORD PTR [esi+0x4],0x1
64016855:	je     0x64016864
64016857:	push   edi
64016858:	call   ebx
6401685a:	push   edi
6401685b:	call   0x640101e6
64016860:	and    DWORD PTR [esi],0x0
64016863:	pop    ecx
64016864:	add    esi,0x8
64016867:	cmp    esi,0x64028a10
6401686d:	jl     0x6401684b
6401686f:	mov    esi,0x640288f0
64016874:	pop    edi
64016875:	mov    eax,DWORD PTR [esi]
64016877:	test   eax,eax
64016879:	je     0x64016884
6401687b:	cmp    DWORD PTR [esi+0x4],0x1
6401687f:	jne    0x64016884
64016881:	push   eax
64016882:	call   ebx
64016884:	add    esi,0x8
64016887:	cmp    esi,0x64028a10
6401688d:	jl     0x64016875
6401688f:	pop    esi
64016890:	pop    ebx
64016891:	ret    
64016892:	push   ebp
64016893:	mov    ebp,esp
64016895:	mov    eax,DWORD PTR [ebp+0x8]
64016898:	push   DWORD PTR [eax*8+0x640288f0]
6401689f:	call   DWORD PTR ds:0x64021088
640168a5:	pop    ebp
640168a6:	ret    
640168a7:	push   0xc
640168a9:	push   0x64025b30
640168ae:	call   0x640106f8
640168b3:	xor    edi,edi
640168b5:	inc    edi
640168b6:	mov    DWORD PTR [ebp-0x1c],edi
640168b9:	xor    ebx,ebx
640168bb:	cmp    DWORD PTR ds:0x64029a0c,ebx
640168c1:	jne    0x640168db
640168c3:	call   0x6401763a
640168c8:	push   0x1e
640168ca:	call   0x6401749a
640168cf:	push   0xff
640168d4:	call   0x640127f0
640168d9:	pop    ecx
640168da:	pop    ecx
640168db:	mov    esi,DWORD PTR [ebp+0x8]
640168de:	lea    esi,[esi*8+0x640288f0]
640168e5:	cmp    DWORD PTR [esi],ebx
640168e7:	je     0x640168ed
640168e9:	mov    eax,edi
640168eb:	jmp    0x6401695b
640168ed:	push   0x18
640168ef:	call   0x64012630
640168f4:	pop    ecx
640168f5:	mov    edi,eax
640168f7:	cmp    edi,ebx
640168f9:	jne    0x6401690a
640168fb:	call   0x64011120
64016900:	mov    DWORD PTR [eax],0xc
64016906:	xor    eax,eax
64016908:	jmp    0x6401695b
6401690a:	push   0xa
6401690c:	call   0x6401696a
64016911:	pop    ecx
64016912:	mov    DWORD PTR [ebp-0x4],ebx
64016915:	cmp    DWORD PTR [esi],ebx
64016917:	jne    0x64016945
64016919:	push   0xfa0
6401691e:	push   edi
6401691f:	call   0x64018029
64016924:	pop    ecx
64016925:	pop    ecx
64016926:	test   eax,eax
64016928:	jne    0x64016941
6401692a:	push   edi
6401692b:	call   0x640101e6
64016930:	pop    ecx
64016931:	call   0x64011120
64016936:	mov    DWORD PTR [eax],0xc
6401693c:	mov    DWORD PTR [ebp-0x1c],ebx
6401693f:	jmp    0x6401694c
64016941:	mov    DWORD PTR [esi],edi
64016943:	jmp    0x6401694c
64016945:	push   edi
64016946:	call   0x640101e6
6401694b:	pop    ecx
6401694c:	mov    DWORD PTR [ebp-0x4],0xfffffffe
64016953:	call   0x64016961
64016958:	mov    eax,DWORD PTR [ebp-0x1c]
6401695b:	call   0x6401073d
64016960:	ret    
64016961:	push   0xa
64016963:	call   0x64016892
64016968:	pop    ecx
64016969:	ret    
6401696a:	push   ebp
6401696b:	mov    ebp,esp
6401696d:	mov    eax,DWORD PTR [ebp+0x8]
64016970:	push   esi
64016971:	lea    esi,[eax*8+0x640288f0]
64016978:	cmp    DWORD PTR [esi],0x0
6401697b:	jne    0x64016990
6401697d:	push   eax
6401697e:	call   0x640168a7
64016983:	test   eax,eax
64016985:	pop    ecx
64016986:	jne    0x64016990
64016988:	push   0x11
6401698a:	call   0x640127a6
6401698f:	pop    ecx
64016990:	push   DWORD PTR [esi]
64016992:	call   DWORD PTR ds:0x64021084
64016998:	pop    esi
64016999:	pop    ebp
6401699a:	ret    
6401699b:	push   0x140
640169a0:	push   0x0
640169a2:	push   DWORD PTR ds:0x64029a0c
640169a8:	call   DWORD PTR ds:0x640210e8
640169ae:	test   eax,eax
640169b0:	mov    ds:0x6402d448,eax
640169b5:	jne    0x640169b8
640169b7:	ret    
640169b8:	mov    ecx,DWORD PTR [esp+0x4]
640169bc:	and    DWORD PTR ds:0x64029b68,0x0
640169c3:	and    DWORD PTR ds:0x6402d444,0x0
640169ca:	mov    ds:0x6402d450,eax
640169cf:	xor    eax,eax
640169d1:	mov    DWORD PTR ds:0x6402d44c,ecx
640169d7:	mov    DWORD PTR ds:0x6402d454,0x10
640169e1:	inc    eax
640169e2:	ret    
640169e3:	mov    ecx,DWORD PTR ds:0x6402d444
640169e9:	mov    eax,ds:0x6402d448
640169ee:	imul   ecx,ecx,0x14
640169f1:	add    ecx,eax
640169f3:	jmp    0x64016a07
640169f5:	mov    edx,DWORD PTR [esp+0x4]
640169f9:	sub    edx,DWORD PTR [eax+0xc]
640169fc:	cmp    edx,0x100000
64016a02:	jb     0x64016a0d
64016a04:	add    eax,0x14
64016a07:	cmp    eax,ecx
64016a09:	jb     0x640169f5
64016a0b:	xor    eax,eax
64016a0d:	ret    
64016a0e:	push   ebp
64016a0f:	mov    ebp,esp
64016a11:	sub    esp,0x10
64016a14:	mov    ecx,DWORD PTR [ebp+0x8]
64016a17:	mov    eax,DWORD PTR [ecx+0x10]
64016a1a:	push   esi
64016a1b:	mov    esi,DWORD PTR [ebp+0xc]
64016a1e:	push   edi
64016a1f:	mov    edi,esi
64016a21:	sub    edi,DWORD PTR [ecx+0xc]
64016a24:	add    esi,0xfffffffc
64016a27:	shr    edi,0xf
64016a2a:	mov    ecx,edi
64016a2c:	imul   ecx,ecx,0x204
64016a32:	lea    ecx,[ecx+eax*1+0x144]
64016a39:	mov    DWORD PTR [ebp-0x10],ecx
64016a3c:	mov    ecx,DWORD PTR [esi]
64016a3e:	dec    ecx
64016a3f:	test   cl,0x1
64016a42:	mov    DWORD PTR [ebp-0x4],ecx
64016a45:	jne    0x64016d1e
64016a4b:	push   ebx
64016a4c:	lea    ebx,[ecx+esi*1]
64016a4f:	mov    edx,DWORD PTR [ebx]
64016a51:	mov    DWORD PTR [ebp-0xc],edx
64016a54:	mov    edx,DWORD PTR [esi-0x4]
64016a57:	mov    DWORD PTR [ebp-0x8],edx
64016a5a:	mov    edx,DWORD PTR [ebp-0xc]
64016a5d:	test   dl,0x1
64016a60:	mov    DWORD PTR [ebp+0xc],ebx
64016a63:	jne    0x64016ad9
64016a65:	sar    edx,0x4
64016a68:	dec    edx
64016a69:	cmp    edx,0x3f
64016a6c:	jbe    0x64016a71
64016a6e:	push   0x3f
64016a70:	pop    edx
64016a71:	mov    ecx,DWORD PTR [ebx+0x4]
64016a74:	cmp    ecx,DWORD PTR [ebx+0x8]
64016a77:	jne    0x64016abb
64016a79:	cmp    edx,0x20
64016a7c:	mov    ebx,0x80000000
64016a81:	jae    0x64016a9c
64016a83:	mov    ecx,edx
64016a85:	shr    ebx,cl
64016a87:	lea    ecx,[edx+eax*1+0x4]
64016a8b:	not    ebx
64016a8d:	and    DWORD PTR [eax+edi*4+0x44],ebx
64016a91:	dec    BYTE PTR [ecx]
64016a93:	jne    0x64016ab8
64016a95:	mov    ecx,DWORD PTR [ebp+0x8]
64016a98:	and    DWORD PTR [ecx],ebx
64016a9a:	jmp    0x64016ab8
64016a9c:	lea    ecx,[edx-0x20]
64016a9f:	shr    ebx,cl
64016aa1:	lea    ecx,[edx+eax*1+0x4]
64016aa5:	not    ebx
64016aa7:	and    DWORD PTR [eax+edi*4+0xc4],ebx
64016aae:	dec    BYTE PTR [ecx]
64016ab0:	jne    0x64016ab8
64016ab2:	mov    ecx,DWORD PTR [ebp+0x8]
64016ab5:	and    DWORD PTR [ecx+0x4],ebx
64016ab8:	mov    ebx,DWORD PTR [ebp+0xc]
64016abb:	mov    edx,DWORD PTR [ebx+0x8]
64016abe:	mov    ebx,DWORD PTR [ebx+0x4]
64016ac1:	mov    ecx,DWORD PTR [ebp-0x4]
64016ac4:	add    ecx,DWORD PTR [ebp-0xc]
64016ac7:	mov    DWORD PTR [edx+0x4],ebx
64016aca:	mov    edx,DWORD PTR [ebp+0xc]
64016acd:	mov    ebx,DWORD PTR [edx+0x4]
64016ad0:	mov    edx,DWORD PTR [edx+0x8]
64016ad3:	mov    DWORD PTR [ebx+0x8],edx
64016ad6:	mov    DWORD PTR [ebp-0x4],ecx
64016ad9:	mov    edx,ecx
64016adb:	sar    edx,0x4
64016ade:	dec    edx
64016adf:	cmp    edx,0x3f
64016ae2:	jbe    0x64016ae7
64016ae4:	push   0x3f
64016ae6:	pop    edx
64016ae7:	mov    ebx,DWORD PTR [ebp-0x8]
64016aea:	and    ebx,0x1
64016aed:	mov    DWORD PTR [ebp-0xc],ebx
64016af0:	jne    0x64016b85
64016af6:	sub    esi,DWORD PTR [ebp-0x8]
64016af9:	mov    ebx,DWORD PTR [ebp-0x8]
64016afc:	sar    ebx,0x4
64016aff:	push   0x3f
64016b01:	mov    DWORD PTR [ebp+0xc],esi
64016b04:	dec    ebx
64016b05:	pop    esi
64016b06:	cmp    ebx,esi
64016b08:	jbe    0x64016b0c
64016b0a:	mov    ebx,esi
64016b0c:	add    ecx,DWORD PTR [ebp-0x8]
64016b0f:	mov    edx,ecx
64016b11:	sar    edx,0x4
64016b14:	dec    edx
64016b15:	cmp    edx,esi
64016b17:	mov    DWORD PTR [ebp-0x4],ecx
64016b1a:	jbe    0x64016b1e
64016b1c:	mov    edx,esi
64016b1e:	cmp    ebx,edx
64016b20:	je     0x64016b80
64016b22:	mov    ecx,DWORD PTR [ebp+0xc]
64016b25:	mov    esi,DWORD PTR [ecx+0x4]
64016b28:	cmp    esi,DWORD PTR [ecx+0x8]
64016b2b:	jne    0x64016b68
64016b2d:	cmp    ebx,0x20
64016b30:	mov    esi,0x80000000
64016b35:	jae    0x64016b4e
64016b37:	mov    ecx,ebx
64016b39:	shr    esi,cl
64016b3b:	not    esi
64016b3d:	and    DWORD PTR [eax+edi*4+0x44],esi
64016b41:	dec    BYTE PTR [ebx+eax*1+0x4]
64016b45:	jne    0x64016b68
64016b47:	mov    ecx,DWORD PTR [ebp+0x8]
64016b4a:	and    DWORD PTR [ecx],esi
64016b4c:	jmp    0x64016b68
64016b4e:	lea    ecx,[ebx-0x20]
64016b51:	shr    esi,cl
64016b53:	not    esi
64016b55:	and    DWORD PTR [eax+edi*4+0xc4],esi
64016b5c:	dec    BYTE PTR [ebx+eax*1+0x4]
64016b60:	jne    0x64016b68
64016b62:	mov    ecx,DWORD PTR [ebp+0x8]
64016b65:	and    DWORD PTR [ecx+0x4],esi
64016b68:	mov    ecx,DWORD PTR [ebp+0xc]
64016b6b:	mov    esi,DWORD PTR [ecx+0x8]
64016b6e:	mov    ecx,DWORD PTR [ecx+0x4]
64016b71:	mov    DWORD PTR [esi+0x4],ecx
64016b74:	mov    ecx,DWORD PTR [ebp+0xc]
64016b77:	mov    esi,DWORD PTR [ecx+0x4]
64016b7a:	mov    ecx,DWORD PTR [ecx+0x8]
64016b7d:	mov    DWORD PTR [esi+0x8],ecx
64016b80:	mov    esi,DWORD PTR [ebp+0xc]
64016b83:	jmp    0x64016b88
64016b85:	mov    ebx,DWORD PTR [ebp+0x8]
64016b88:	cmp    DWORD PTR [ebp-0xc],0x0
64016b8c:	jne    0x64016b96
64016b8e:	cmp    ebx,edx
64016b90:	je     0x64016c16
64016b96:	mov    ecx,DWORD PTR [ebp-0x10]
64016b99:	lea    ecx,[ecx+edx*8]
64016b9c:	mov    ebx,DWORD PTR [ecx+0x4]
64016b9f:	mov    DWORD PTR [esi+0x8],ecx
64016ba2:	mov    DWORD PTR [esi+0x4],ebx
64016ba5:	mov    DWORD PTR [ecx+0x4],esi
64016ba8:	mov    ecx,DWORD PTR [esi+0x4]
64016bab:	mov    DWORD PTR [ecx+0x8],esi
64016bae:	mov    ecx,DWORD PTR [esi+0x4]
64016bb1:	cmp    ecx,DWORD PTR [esi+0x8]
64016bb4:	jne    0x64016c16
64016bb6:	mov    cl,BYTE PTR [edx+eax*1+0x4]
64016bba:	mov    BYTE PTR [ebp+0xf],cl
64016bbd:	inc    cl
64016bbf:	cmp    edx,0x20
64016bc2:	mov    BYTE PTR [edx+eax*1+0x4],cl
64016bc6:	jae    0x64016bed
64016bc8:	cmp    BYTE PTR [ebp+0xf],0x0
64016bcc:	jne    0x64016bdc
64016bce:	mov    ecx,edx
64016bd0:	mov    ebx,0x80000000
64016bd5:	shr    ebx,cl
64016bd7:	mov    ecx,DWORD PTR [ebp+0x8]
64016bda:	or     DWORD PTR [ecx],ebx
64016bdc:	mov    ebx,0x80000000
64016be1:	mov    ecx,edx
64016be3:	shr    ebx,cl
64016be5:	lea    eax,[eax+edi*4+0x44]
64016be9:	or     DWORD PTR [eax],ebx
64016beb:	jmp    0x64016c16
64016bed:	cmp    BYTE PTR [ebp+0xf],0x0
64016bf1:	jne    0x64016c03
64016bf3:	lea    ecx,[edx-0x20]
64016bf6:	mov    ebx,0x80000000
64016bfb:	shr    ebx,cl
64016bfd:	mov    ecx,DWORD PTR [ebp+0x8]
64016c00:	or     DWORD PTR [ecx+0x4],ebx
64016c03:	lea    ecx,[edx-0x20]
64016c06:	mov    edx,0x80000000
64016c0b:	shr    edx,cl
64016c0d:	lea    eax,[eax+edi*4+0xc4]
64016c14:	or     DWORD PTR [eax],edx
64016c16:	mov    eax,DWORD PTR [ebp-0x4]
64016c19:	mov    DWORD PTR [esi],eax
64016c1b:	mov    DWORD PTR [eax+esi*1-0x4],eax
64016c1f:	mov    eax,DWORD PTR [ebp-0x10]
64016c22:	dec    DWORD PTR [eax]
64016c24:	jne    0x64016d1d
64016c2a:	mov    eax,ds:0x64029b68
64016c2f:	test   eax,eax
64016c31:	je     0x64016d0f
64016c37:	mov    ecx,DWORD PTR ds:0x6402d458
64016c3d:	mov    esi,DWORD PTR ds:0x6402116c
64016c43:	push   0x4000
64016c48:	shl    ecx,0xf
64016c4b:	add    ecx,DWORD PTR [eax+0xc]
64016c4e:	mov    ebx,0x8000
64016c53:	push   ebx
64016c54:	push   ecx
64016c55:	call   esi
64016c57:	mov    ecx,DWORD PTR ds:0x6402d458
64016c5d:	mov    eax,ds:0x64029b68
64016c62:	mov    edx,0x80000000
64016c67:	shr    edx,cl
64016c69:	or     DWORD PTR [eax+0x8],edx
64016c6c:	mov    eax,ds:0x64029b68
64016c71:	mov    eax,DWORD PTR [eax+0x10]
64016c74:	mov    ecx,DWORD PTR ds:0x6402d458
64016c7a:	and    DWORD PTR [eax+ecx*4+0xc4],0x0
64016c82:	mov    eax,ds:0x64029b68
64016c87:	mov    eax,DWORD PTR [eax+0x10]
64016c8a:	dec    BYTE PTR [eax+0x43]
64016c8d:	mov    eax,ds:0x64029b68
64016c92:	mov    ecx,DWORD PTR [eax+0x10]
64016c95:	cmp    BYTE PTR [ecx+0x43],0x0
64016c99:	jne    0x64016ca4
64016c9b:	and    DWORD PTR [eax+0x4],0xfffffffe
64016c9f:	mov    eax,ds:0x64029b68
64016ca4:	cmp    DWORD PTR [eax+0x8],0xffffffff
64016ca8:	jne    0x64016d0f
64016caa:	push   ebx
64016cab:	push   0x0
64016cad:	push   DWORD PTR [eax+0xc]
64016cb0:	call   esi
64016cb2:	mov    eax,ds:0x64029b68
64016cb7:	push   DWORD PTR [eax+0x10]
64016cba:	push   0x0
64016cbc:	push   DWORD PTR ds:0x64029a0c
64016cc2:	call   DWORD PTR ds:0x640210ec
64016cc8:	mov    ecx,DWORD PTR ds:0x6402d444
64016cce:	mov    eax,ds:0x64029b68
64016cd3:	imul   ecx,ecx,0x14
64016cd6:	mov    edx,DWORD PTR ds:0x6402d448
64016cdc:	sub    ecx,eax
64016cde:	lea    ecx,[ecx+edx*1-0x14]
64016ce2:	push   ecx
64016ce3:	lea    ecx,[eax+0x14]
64016ce6:	push   ecx
64016ce7:	push   eax
64016ce8:	call   0x64010390
64016ced:	mov    eax,DWORD PTR [ebp+0x8]
64016cf0:	add    esp,0xc
64016cf3:	dec    DWORD PTR ds:0x6402d444
64016cf9:	cmp    eax,DWORD PTR ds:0x64029b68
64016cff:	jbe    0x64016d05
64016d01:	sub    DWORD PTR [ebp+0x8],0x14
64016d05:	mov    eax,ds:0x6402d448
64016d0a:	mov    ds:0x6402d450,eax
64016d0f:	mov    eax,DWORD PTR [ebp+0x8]
64016d12:	mov    ds:0x64029b68,eax
64016d17:	mov    DWORD PTR ds:0x6402d458,edi
64016d1d:	pop    ebx
64016d1e:	pop    edi
64016d1f:	pop    esi
64016d20:	leave  
64016d21:	ret    
64016d22:	mov    eax,ds:0x6402d454
64016d27:	push   esi
64016d28:	mov    esi,DWORD PTR ds:0x6402d444
64016d2e:	push   edi
64016d2f:	xor    edi,edi
64016d31:	cmp    esi,eax
64016d33:	jne    0x64016d69
64016d35:	add    eax,0x10
64016d38:	imul   eax,eax,0x14
64016d3b:	push   eax
64016d3c:	push   DWORD PTR ds:0x6402d448
64016d42:	push   edi
64016d43:	push   DWORD PTR ds:0x64029a0c
64016d49:	call   DWORD PTR ds:0x640210f0
64016d4f:	cmp    eax,edi
64016d51:	jne    0x64016d57
64016d53:	xor    eax,eax
64016d55:	jmp    0x64016dcf
64016d57:	add    DWORD PTR ds:0x6402d454,0x10
64016d5e:	mov    esi,DWORD PTR ds:0x6402d444
64016d64:	mov    ds:0x6402d448,eax
64016d69:	imul   esi,esi,0x14
64016d6c:	add    esi,DWORD PTR ds:0x6402d448
64016d72:	push   0x41c4
64016d77:	push   0x8
64016d79:	push   DWORD PTR ds:0x64029a0c
64016d7f:	call   DWORD PTR ds:0x640210e8
64016d85:	cmp    eax,edi
64016d87:	mov    DWORD PTR [esi+0x10],eax
64016d8a:	je     0x64016d53
64016d8c:	push   0x4
64016d8e:	push   0x2000
64016d93:	push   0x100000
64016d98:	push   edi
64016d99:	call   DWORD PTR ds:0x640210b4
64016d9f:	cmp    eax,edi
64016da1:	mov    DWORD PTR [esi+0xc],eax
64016da4:	jne    0x64016db8
64016da6:	push   DWORD PTR [esi+0x10]
64016da9:	push   edi
64016daa:	push   DWORD PTR ds:0x64029a0c
64016db0:	call   DWORD PTR ds:0x640210ec
64016db6:	jmp    0x64016d53
64016db8:	or     DWORD PTR [esi+0x8],0xffffffff
64016dbc:	mov    DWORD PTR [esi],edi
64016dbe:	mov    DWORD PTR [esi+0x4],edi
64016dc1:	inc    DWORD PTR ds:0x6402d444
64016dc7:	mov    eax,DWORD PTR [esi+0x10]
64016dca:	or     DWORD PTR [eax],0xffffffff
64016dcd:	mov    eax,esi
64016dcf:	pop    edi
64016dd0:	pop    esi
64016dd1:	ret    
64016dd2:	push   ebp
64016dd3:	mov    ebp,esp
64016dd5:	push   ecx
64016dd6:	push   ecx
64016dd7:	mov    ecx,DWORD PTR [ebp+0x8]
64016dda:	mov    eax,DWORD PTR [ecx+0x8]
64016ddd:	push   ebx
64016dde:	push   esi
64016ddf:	mov    esi,DWORD PTR [ecx+0x10]
64016de2:	push   edi
64016de3:	xor    ebx,ebx
64016de5:	jmp    0x64016dea
64016de7:	add    eax,eax
64016de9:	inc    ebx
64016dea:	test   eax,eax
64016dec:	jge    0x64016de7
64016dee:	mov    eax,ebx
64016df0:	imul   eax,eax,0x204
64016df6:	lea    eax,[eax+esi*1+0x144]
64016dfd:	push   0x3f
64016dff:	mov    DWORD PTR [ebp-0x8],eax
64016e02:	pop    edx
64016e03:	mov    DWORD PTR [eax+0x8],eax
64016e06:	mov    DWORD PTR [eax+0x4],eax
64016e09:	add    eax,0x8
64016e0c:	dec    edx
64016e0d:	jne    0x64016e03
64016e0f:	push   0x4
64016e11:	mov    edi,ebx
64016e13:	push   0x1000
64016e18:	shl    edi,0xf
64016e1b:	add    edi,DWORD PTR [ecx+0xc]
64016e1e:	push   0x8000
64016e23:	push   edi
64016e24:	call   DWORD PTR ds:0x640210b4
64016e2a:	test   eax,eax
64016e2c:	jne    0x64016e36
64016e2e:	or     eax,0xffffffff
64016e31:	jmp    0x64016ed3
64016e36:	lea    edx,[edi+0x7000]
64016e3c:	cmp    edi,edx
64016e3e:	mov    DWORD PTR [ebp-0x4],edx
64016e41:	ja     0x64016e86
64016e43:	mov    ecx,edx
64016e45:	sub    ecx,edi
64016e47:	shr    ecx,0xc
64016e4a:	lea    eax,[edi+0x10]
64016e4d:	inc    ecx
64016e4e:	or     DWORD PTR [eax-0x8],0xffffffff
64016e52:	or     DWORD PTR [eax+0xfec],0xffffffff
64016e59:	lea    edx,[eax+0xffc]
64016e5f:	mov    DWORD PTR [eax],edx
64016e61:	lea    edx,[eax-0x1004]
64016e67:	mov    DWORD PTR [eax-0x4],0xff0
64016e6e:	mov    DWORD PTR [eax+0x4],edx
64016e71:	mov    DWORD PTR [eax+0xfe8],0xff0
64016e7b:	add    eax,0x1000
64016e80:	dec    ecx
64016e81:	jne    0x64016e4e
64016e83:	mov    edx,DWORD PTR [ebp-0x4]
64016e86:	mov    eax,DWORD PTR [ebp-0x8]
64016e89:	add    eax,0x1f8
64016e8e:	lea    ecx,[edi+0xc]
64016e91:	mov    DWORD PTR [eax+0x4],ecx
64016e94:	mov    DWORD PTR [ecx+0x8],eax
64016e97:	lea    ecx,[edx+0xc]
64016e9a:	mov    DWORD PTR [eax+0x8],ecx
64016e9d:	mov    DWORD PTR [ecx+0x4],eax
64016ea0:	and    DWORD PTR [esi+ebx*4+0x44],0x0
64016ea5:	xor    edi,edi
64016ea7:	inc    edi
64016ea8:	mov    DWORD PTR [esi+ebx*4+0xc4],edi
64016eaf:	mov    al,BYTE PTR [esi+0x43]
64016eb2:	mov    cl,al
64016eb4:	inc    cl
64016eb6:	test   al,al
64016eb8:	mov    eax,DWORD PTR [ebp+0x8]
64016ebb:	mov    BYTE PTR [esi+0x43],cl
64016ebe:	jne    0x64016ec3
64016ec0:	or     DWORD PTR [eax+0x4],edi
64016ec3:	mov    edx,0x80000000
64016ec8:	mov    ecx,ebx
64016eca:	shr    edx,cl
64016ecc:	not    edx
64016ece:	and    DWORD PTR [eax+0x8],edx
64016ed1:	mov    eax,ebx
64016ed3:	pop    edi
64016ed4:	pop    esi
64016ed5:	pop    ebx
64016ed6:	leave  
64016ed7:	ret    
64016ed8:	push   ebp
64016ed9:	mov    ebp,esp
64016edb:	sub    esp,0xc
64016ede:	mov    ecx,DWORD PTR [ebp+0x8]
64016ee1:	mov    eax,DWORD PTR [ecx+0x10]
64016ee4:	push   ebx
64016ee5:	push   esi
64016ee6:	mov    esi,DWORD PTR [ebp+0x10]
64016ee9:	push   edi
64016eea:	mov    edi,DWORD PTR [ebp+0xc]
64016eed:	mov    edx,edi
64016eef:	sub    edx,DWORD PTR [ecx+0xc]
64016ef2:	add    esi,0x17
64016ef5:	shr    edx,0xf
64016ef8:	mov    ecx,edx
64016efa:	imul   ecx,ecx,0x204
64016f00:	lea    ecx,[ecx+eax*1+0x144]
64016f07:	mov    DWORD PTR [ebp-0xc],ecx
64016f0a:	mov    ecx,DWORD PTR [edi-0x4]
64016f0d:	and    esi,0xfffffff0
64016f10:	dec    ecx
64016f11:	cmp    esi,ecx
64016f13:	lea    edi,[ecx+edi*1-0x4]
64016f17:	mov    ebx,DWORD PTR [edi]
64016f19:	mov    DWORD PTR [ebp+0x10],ecx
64016f1c:	mov    DWORD PTR [ebp-0x4],ebx
64016f1f:	jle    0x6401707a
64016f25:	test   bl,0x1
64016f28:	jne    0x64017073
64016f2e:	add    ebx,ecx
64016f30:	cmp    esi,ebx
64016f32:	jg     0x64017073
64016f38:	mov    ecx,DWORD PTR [ebp-0x4]
64016f3b:	sar    ecx,0x4
64016f3e:	dec    ecx
64016f3f:	cmp    ecx,0x3f
64016f42:	mov    DWORD PTR [ebp-0x8],ecx
64016f45:	jbe    0x64016f4d
64016f47:	push   0x3f
64016f49:	pop    ecx
64016f4a:	mov    DWORD PTR [ebp-0x8],ecx
64016f4d:	mov    ebx,DWORD PTR [edi+0x4]
64016f50:	cmp    ebx,DWORD PTR [edi+0x8]
64016f53:	jne    0x64016f98
64016f55:	cmp    ecx,0x20
64016f58:	mov    ebx,0x80000000
64016f5d:	jae    0x64016f79
64016f5f:	shr    ebx,cl
64016f61:	mov    ecx,DWORD PTR [ebp-0x8]
64016f64:	lea    ecx,[ecx+eax*1+0x4]
64016f68:	not    ebx
64016f6a:	and    DWORD PTR [eax+edx*4+0x44],ebx
64016f6e:	dec    BYTE PTR [ecx]
64016f70:	jne    0x64016f98
64016f72:	mov    ecx,DWORD PTR [ebp+0x8]
64016f75:	and    DWORD PTR [ecx],ebx
64016f77:	jmp    0x64016f98
64016f79:	add    ecx,0xffffffe0
64016f7c:	shr    ebx,cl
64016f7e:	mov    ecx,DWORD PTR [ebp-0x8]
64016f81:	lea    ecx,[ecx+eax*1+0x4]
64016f85:	not    ebx
64016f87:	and    DWORD PTR [eax+edx*4+0xc4],ebx
64016f8e:	dec    BYTE PTR [ecx]
64016f90:	jne    0x64016f98
64016f92:	mov    ecx,DWORD PTR [ebp+0x8]
64016f95:	and    DWORD PTR [ecx+0x4],ebx
64016f98:	mov    ecx,DWORD PTR [edi+0x8]
64016f9b:	mov    ebx,DWORD PTR [edi+0x4]
64016f9e:	mov    DWORD PTR [ecx+0x4],ebx
64016fa1:	mov    ecx,DWORD PTR [edi+0x4]
64016fa4:	mov    edi,DWORD PTR [edi+0x8]
64016fa7:	mov    DWORD PTR [ecx+0x8],edi
64016faa:	mov    ecx,DWORD PTR [ebp+0x10]
64016fad:	sub    ecx,esi
64016faf:	add    DWORD PTR [ebp-0x4],ecx
64016fb2:	cmp    DWORD PTR [ebp-0x4],0x0
64016fb6:	jle    0x64017061
64016fbc:	mov    edi,DWORD PTR [ebp-0x4]
64016fbf:	mov    ecx,DWORD PTR [ebp+0xc]
64016fc2:	sar    edi,0x4
64016fc5:	dec    edi
64016fc6:	cmp    edi,0x3f
64016fc9:	lea    ecx,[ecx+esi*1-0x4]
64016fcd:	jbe    0x64016fd2
64016fcf:	push   0x3f
64016fd1:	pop    edi
64016fd2:	mov    ebx,DWORD PTR [ebp-0xc]
64016fd5:	lea    ebx,[ebx+edi*8]
64016fd8:	mov    DWORD PTR [ebp+0x10],ebx
64016fdb:	mov    ebx,DWORD PTR [ebx+0x4]
64016fde:	mov    DWORD PTR [ecx+0x4],ebx
64016fe1:	mov    ebx,DWORD PTR [ebp+0x10]
64016fe4:	mov    DWORD PTR [ecx+0x8],ebx
64016fe7:	mov    DWORD PTR [ebx+0x4],ecx
64016fea:	mov    ebx,DWORD PTR [ecx+0x4]
64016fed:	mov    DWORD PTR [ebx+0x8],ecx
64016ff0:	mov    ebx,DWORD PTR [ecx+0x4]
64016ff3:	cmp    ebx,DWORD PTR [ecx+0x8]
64016ff6:	jne    0x6401704f
64016ff8:	mov    cl,BYTE PTR [edi+eax*1+0x4]
64016ffc:	mov    BYTE PTR [ebp+0x13],cl
64016fff:	inc    cl
64017001:	cmp    edi,0x20
64017004:	mov    BYTE PTR [edi+eax*1+0x4],cl
64017008:	jae    0x64017026
6401700a:	cmp    BYTE PTR [ebp+0x13],0x0
6401700e:	jne    0x6401701e
64017010:	mov    ecx,edi
64017012:	mov    ebx,0x80000000
64017017:	shr    ebx,cl
64017019:	mov    ecx,DWORD PTR [ebp+0x8]
6401701c:	or     DWORD PTR [ecx],ebx
6401701e:	lea    eax,[eax+edx*4+0x44]
64017022:	mov    ecx,edi
64017024:	jmp    0x64017046
64017026:	cmp    BYTE PTR [ebp+0x13],0x0
6401702a:	jne    0x6401703c
6401702c:	lea    ecx,[edi-0x20]
6401702f:	mov    ebx,0x80000000
64017034:	shr    ebx,cl
64017036:	mov    ecx,DWORD PTR [ebp+0x8]
64017039:	or     DWORD PTR [ecx+0x4],ebx
6401703c:	lea    eax,[eax+edx*4+0xc4]
64017043:	lea    ecx,[edi-0x20]
64017046:	mov    edx,0x80000000
6401704b:	shr    edx,cl
6401704d:	or     DWORD PTR [eax],edx
6401704f:	mov    edx,DWORD PTR [ebp+0xc]
64017052:	mov    ecx,DWORD PTR [ebp-0x4]
64017055:	lea    eax,[edx+esi*1-0x4]
64017059:	mov    DWORD PTR [eax],ecx
6401705b:	mov    DWORD PTR [ecx+eax*1-0x4],ecx
6401705f:	jmp    0x64017064
64017061:	mov    edx,DWORD PTR [ebp+0xc]
64017064:	lea    eax,[esi+0x1]
64017067:	mov    DWORD PTR [edx-0x4],eax
6401706a:	mov    DWORD PTR [edx+esi*1-0x8],eax
6401706e:	jmp    0x640171af
64017073:	xor    eax,eax
64017075:	jmp    0x640171b2
6401707a:	jge    0x640171af
64017080:	mov    ebx,DWORD PTR [ebp+0xc]
64017083:	sub    DWORD PTR [ebp+0x10],esi
64017086:	lea    ecx,[esi+0x1]
64017089:	mov    DWORD PTR [ebx-0x4],ecx
6401708c:	lea    ebx,[ebx+esi*1-0x4]
64017090:	mov    esi,DWORD PTR [ebp+0x10]
64017093:	sar    esi,0x4
64017096:	dec    esi
64017097:	cmp    esi,0x3f
6401709a:	mov    DWORD PTR [ebp+0xc],ebx
6401709d:	mov    DWORD PTR [ebx-0x4],ecx
640170a0:	jbe    0x640170a5
640170a2:	push   0x3f
640170a4:	pop    esi
640170a5:	test   BYTE PTR [ebp-0x4],0x1
640170a9:	jne    0x6401712f
640170af:	mov    esi,DWORD PTR [ebp-0x4]
640170b2:	sar    esi,0x4
640170b5:	dec    esi
640170b6:	cmp    esi,0x3f
640170b9:	jbe    0x640170be
640170bb:	push   0x3f
640170bd:	pop    esi
640170be:	mov    ecx,DWORD PTR [edi+0x4]
640170c1:	cmp    ecx,DWORD PTR [edi+0x8]
640170c4:	jne    0x64017108
640170c6:	cmp    esi,0x20
640170c9:	mov    ebx,0x80000000
640170ce:	jae    0x640170e9
640170d0:	mov    ecx,esi
640170d2:	shr    ebx,cl
640170d4:	lea    esi,[esi+eax*1+0x4]
640170d8:	not    ebx
640170da:	and    DWORD PTR [eax+edx*4+0x44],ebx
640170de:	dec    BYTE PTR [esi]
640170e0:	jne    0x64017105
640170e2:	mov    ecx,DWORD PTR [ebp+0x8]
640170e5:	and    DWORD PTR [ecx],ebx
640170e7:	jmp    0x64017105
640170e9:	lea    ecx,[esi-0x20]
640170ec:	shr    ebx,cl
640170ee:	lea    ecx,[esi+eax*1+0x4]
640170f2:	not    ebx
640170f4:	and    DWORD PTR [eax+edx*4+0xc4],ebx
640170fb:	dec    BYTE PTR [ecx]
640170fd:	jne    0x64017105
640170ff:	mov    ecx,DWORD PTR [ebp+0x8]
64017102:	and    DWORD PTR [ecx+0x4],ebx
64017105:	mov    ebx,DWORD PTR [ebp+0xc]
64017108:	mov    ecx,DWORD PTR [edi+0x8]
6401710b:	mov    esi,DWORD PTR [edi+0x4]
6401710e:	mov    DWORD PTR [ecx+0x4],esi
64017111:	mov    esi,DWORD PTR [edi+0x8]
64017114:	mov    ecx,DWORD PTR [edi+0x4]
64017117:	mov    DWORD PTR [ecx+0x8],esi
6401711a:	mov    esi,DWORD PTR [ebp+0x10]
6401711d:	add    esi,DWORD PTR [ebp-0x4]
64017120:	mov    DWORD PTR [ebp+0x10],esi
64017123:	sar    esi,0x4
64017126:	dec    esi
64017127:	cmp    esi,0x3f
6401712a:	jbe    0x6401712f
6401712c:	push   0x3f
6401712e:	pop    esi
6401712f:	mov    ecx,DWORD PTR [ebp-0xc]
64017132:	lea    ecx,[ecx+esi*8]
64017135:	mov    edi,DWORD PTR [ecx+0x4]
64017138:	mov    DWORD PTR [ebx+0x8],ecx
6401713b:	mov    DWORD PTR [ebx+0x4],edi
6401713e:	mov    DWORD PTR [ecx+0x4],ebx
64017141:	mov    ecx,DWORD PTR [ebx+0x4]
64017144:	mov    DWORD PTR [ecx+0x8],ebx
64017147:	mov    ecx,DWORD PTR [ebx+0x4]
6401714a:	cmp    ecx,DWORD PTR [ebx+0x8]
6401714d:	jne    0x640171a6
6401714f:	mov    cl,BYTE PTR [esi+eax*1+0x4]
64017153:	mov    BYTE PTR [ebp+0xf],cl
64017156:	inc    cl
64017158:	cmp    esi,0x20
6401715b:	mov    BYTE PTR [esi+eax*1+0x4],cl
6401715f:	jae    0x6401717d
64017161:	cmp    BYTE PTR [ebp+0xf],0x0
64017165:	jne    0x64017175
64017167:	mov    ecx,esi
64017169:	mov    edi,0x80000000
6401716e:	shr    edi,cl
64017170:	mov    ecx,DWORD PTR [ebp+0x8]
64017173:	or     DWORD PTR [ecx],edi
64017175:	lea    eax,[eax+edx*4+0x44]
64017179:	mov    ecx,esi
6401717b:	jmp    0x6401719d
6401717d:	cmp    BYTE PTR [ebp+0xf],0x0
64017181:	jne    0x64017193
64017183:	lea    ecx,[esi-0x20]
64017186:	mov    edi,0x80000000
6401718b:	shr    edi,cl
6401718d:	mov    ecx,DWORD PTR [ebp+0x8]
64017190:	or     DWORD PTR [ecx+0x4],edi
64017193:	lea    eax,[eax+edx*4+0xc4]
6401719a:	lea    ecx,[esi-0x20]
6401719d:	mov    edx,0x80000000
640171a2:	shr    edx,cl
640171a4:	or     DWORD PTR [eax],edx
640171a6:	mov    eax,DWORD PTR [ebp+0x10]
640171a9:	mov    DWORD PTR [ebx],eax
640171ab:	mov    DWORD PTR [eax+ebx*1-0x4],eax
640171af:	xor    eax,eax
640171b1:	inc    eax
640171b2:	pop    edi
640171b3:	pop    esi
640171b4:	pop    ebx
640171b5:	leave  
640171b6:	ret    
640171b7:	push   ebp
640171b8:	mov    ebp,esp
640171ba:	sub    esp,0x14
640171bd:	mov    eax,ds:0x6402d444
640171c2:	mov    ecx,DWORD PTR [ebp+0x8]
640171c5:	imul   eax,eax,0x14
640171c8:	add    eax,DWORD PTR ds:0x6402d448
640171ce:	add    ecx,0x17
640171d1:	and    ecx,0xfffffff0
640171d4:	mov    DWORD PTR [ebp-0x10],ecx
640171d7:	sar    ecx,0x4
640171da:	push   ebx
640171db:	dec    ecx
640171dc:	cmp    ecx,0x20
640171df:	push   esi
640171e0:	push   edi
640171e1:	jge    0x640171ee
640171e3:	or     esi,0xffffffff
640171e6:	shr    esi,cl
640171e8:	or     DWORD PTR [ebp-0x8],0xffffffff
640171ec:	jmp    0x640171fb
640171ee:	add    ecx,0xffffffe0
640171f1:	or     edx,0xffffffff
640171f4:	xor    esi,esi
640171f6:	shr    edx,cl
640171f8:	mov    DWORD PTR [ebp-0x8],edx
640171fb:	mov    ecx,DWORD PTR ds:0x6402d450
64017201:	mov    ebx,ecx
64017203:	jmp    0x64017216
64017205:	mov    edx,DWORD PTR [ebx+0x4]
64017208:	mov    edi,DWORD PTR [ebx]
6401720a:	and    edx,DWORD PTR [ebp-0x8]
6401720d:	and    edi,esi
6401720f:	or     edx,edi
64017211:	jne    0x6401721d
64017213:	add    ebx,0x14
64017216:	cmp    ebx,eax
64017218:	mov    DWORD PTR [ebp+0x8],ebx
6401721b:	jb     0x64017205
6401721d:	cmp    ebx,eax
6401721f:	jne    0x640172a0
64017221:	mov    ebx,DWORD PTR ds:0x6402d448
64017227:	jmp    0x6401723a
64017229:	mov    edx,DWORD PTR [ebx+0x4]
6401722c:	mov    edi,DWORD PTR [ebx]
6401722e:	and    edx,DWORD PTR [ebp-0x8]
64017231:	and    edi,esi
64017233:	or     edx,edi
64017235:	jne    0x64017241
64017237:	add    ebx,0x14
6401723a:	cmp    ebx,ecx
6401723c:	mov    DWORD PTR [ebp+0x8],ebx
6401723f:	jb     0x64017229
64017241:	cmp    ebx,ecx
64017243:	jne    0x640172a0
64017245:	jmp    0x64017253
64017247:	cmp    DWORD PTR [ebx+0x8],0x0
6401724b:	jne    0x64017257
6401724d:	add    ebx,0x14
64017250:	mov    DWORD PTR [ebp+0x8],ebx
64017253:	cmp    ebx,eax
64017255:	jb     0x64017247
64017257:	cmp    ebx,eax
64017259:	jne    0x6401728c
6401725b:	mov    ebx,DWORD PTR ds:0x6402d448
64017261:	jmp    0x6401726c
64017263:	cmp    DWORD PTR [ebx+0x8],0x0
64017267:	jne    0x64017273
64017269:	add    ebx,0x14
6401726c:	cmp    ebx,ecx
6401726e:	mov    DWORD PTR [ebp+0x8],ebx
64017271:	jb     0x64017263
64017273:	cmp    ebx,ecx
64017275:	jne    0x6401728c
64017277:	call   0x64016d22
6401727c:	mov    ebx,eax
6401727e:	test   ebx,ebx
64017280:	mov    DWORD PTR [ebp+0x8],ebx
64017283:	jne    0x6401728c
64017285:	xor    eax,eax
64017287:	jmp    0x64017495
6401728c:	push   ebx
6401728d:	call   0x64016dd2
64017292:	pop    ecx
64017293:	mov    ecx,DWORD PTR [ebx+0x10]
64017296:	mov    DWORD PTR [ecx],eax
64017298:	mov    eax,DWORD PTR [ebx+0x10]
6401729b:	cmp    DWORD PTR [eax],0xffffffff
6401729e:	je     0x64017285
640172a0:	mov    DWORD PTR ds:0x6402d450,ebx
640172a6:	mov    eax,DWORD PTR [ebx+0x10]
640172a9:	mov    edx,DWORD PTR [eax]
640172ab:	cmp    edx,0xffffffff
640172ae:	mov    DWORD PTR [ebp-0x4],edx
640172b1:	je     0x640172c7
640172b3:	mov    ecx,DWORD PTR [eax+edx*4+0xc4]
640172ba:	mov    edi,DWORD PTR [eax+edx*4+0x44]
640172be:	and    ecx,DWORD PTR [ebp-0x8]
640172c1:	and    edi,esi
640172c3:	or     ecx,edi
640172c5:	jne    0x640172f0
640172c7:	and    DWORD PTR [ebp-0x4],0x0
640172cb:	mov    edx,DWORD PTR [eax+0xc4]
640172d1:	lea    ecx,[eax+0x44]
640172d4:	mov    edi,DWORD PTR [ecx]
640172d6:	and    edx,DWORD PTR [ebp-0x8]
640172d9:	and    edi,esi
640172db:	or     edx,edi
640172dd:	jne    0x640172ed
640172df:	inc    DWORD PTR [ebp-0x4]
640172e2:	mov    edx,DWORD PTR [ecx+0x84]
640172e8:	add    ecx,0x4
640172eb:	jmp    0x640172d4
640172ed:	mov    edx,DWORD PTR [ebp-0x4]
640172f0:	mov    ecx,edx
640172f2:	imul   ecx,ecx,0x204
640172f8:	lea    ecx,[ecx+eax*1+0x144]
640172ff:	mov    DWORD PTR [ebp-0xc],ecx
64017302:	mov    ecx,DWORD PTR [eax+edx*4+0x44]
64017306:	xor    edi,edi
64017308:	and    ecx,esi
6401730a:	jne    0x6401731e
6401730c:	mov    ecx,DWORD PTR [eax+edx*4+0xc4]
64017313:	and    ecx,DWORD PTR [ebp-0x8]
64017316:	push   0x20
64017318:	pop    edi
64017319:	jmp    0x6401731e
6401731b:	add    ecx,ecx
6401731d:	inc    edi
6401731e:	test   ecx,ecx
64017320:	jge    0x6401731b
64017322:	mov    ecx,DWORD PTR [ebp-0xc]
64017325:	mov    edx,DWORD PTR [ecx+edi*8+0x4]
64017329:	mov    ecx,DWORD PTR [edx]
6401732b:	sub    ecx,DWORD PTR [ebp-0x10]
6401732e:	mov    esi,ecx
64017330:	sar    esi,0x4
64017333:	dec    esi
64017334:	cmp    esi,0x3f
64017337:	mov    DWORD PTR [ebp-0x8],ecx
6401733a:	jle    0x6401733f
6401733c:	push   0x3f
6401733e:	pop    esi
6401733f:	cmp    esi,edi
64017341:	je     0x64017448
64017347:	mov    ecx,DWORD PTR [edx+0x4]
6401734a:	cmp    ecx,DWORD PTR [edx+0x8]
6401734d:	jne    0x640173ab
6401734f:	cmp    edi,0x20
64017352:	mov    ebx,0x80000000
64017357:	jge    0x6401737f
64017359:	mov    ecx,edi
6401735b:	shr    ebx,cl
6401735d:	mov    ecx,DWORD PTR [ebp-0x4]
64017360:	lea    edi,[eax+edi*1+0x4]
64017364:	not    ebx
64017366:	mov    DWORD PTR [ebp-0x14],ebx
64017369:	and    ebx,DWORD PTR [eax+ecx*4+0x44]
6401736d:	mov    DWORD PTR [eax+ecx*4+0x44],ebx
64017371:	dec    BYTE PTR [edi]
64017373:	jne    0x640173a8
64017375:	mov    ecx,DWORD PTR [ebp-0x14]
64017378:	mov    ebx,DWORD PTR [ebp+0x8]
6401737b:	and    DWORD PTR [ebx],ecx
6401737d:	jmp    0x640173ab
6401737f:	lea    ecx,[edi-0x20]
64017382:	shr    ebx,cl
64017384:	mov    ecx,DWORD PTR [ebp-0x4]
64017387:	lea    ecx,[eax+ecx*4+0xc4]
6401738e:	lea    edi,[eax+edi*1+0x4]
64017392:	not    ebx
64017394:	and    DWORD PTR [ecx],ebx
64017396:	dec    BYTE PTR [edi]
64017398:	mov    DWORD PTR [ebp-0x14],ebx
6401739b:	jne    0x640173a8
6401739d:	mov    ebx,DWORD PTR [ebp+0x8]
640173a0:	mov    ecx,DWORD PTR [ebp-0x14]
640173a3:	and    DWORD PTR [ebx+0x4],ecx
640173a6:	jmp    0x640173ab
640173a8:	mov    ebx,DWORD PTR [ebp+0x8]
640173ab:	cmp    DWORD PTR [ebp-0x8],0x0
640173af:	mov    ecx,DWORD PTR [edx+0x8]
640173b2:	mov    edi,DWORD PTR [edx+0x4]
640173b5:	mov    DWORD PTR [ecx+0x4],edi
640173b8:	mov    ecx,DWORD PTR [edx+0x4]
640173bb:	mov    edi,DWORD PTR [edx+0x8]
640173be:	mov    DWORD PTR [ecx+0x8],edi
640173c1:	je     0x64017454
640173c7:	mov    ecx,DWORD PTR [ebp-0xc]
640173ca:	lea    ecx,[ecx+esi*8]
640173cd:	mov    edi,DWORD PTR [ecx+0x4]
640173d0:	mov    DWORD PTR [edx+0x8],ecx
640173d3:	mov    DWORD PTR [edx+0x4],edi
640173d6:	mov    DWORD PTR [ecx+0x4],edx
640173d9:	mov    ecx,DWORD PTR [edx+0x4]
640173dc:	mov    DWORD PTR [ecx+0x8],edx
640173df:	mov    ecx,DWORD PTR [edx+0x4]
640173e2:	cmp    ecx,DWORD PTR [edx+0x8]
640173e5:	jne    0x64017445
640173e7:	mov    cl,BYTE PTR [esi+eax*1+0x4]
640173eb:	mov    BYTE PTR [ebp+0xb],cl
640173ee:	inc    cl
640173f0:	cmp    esi,0x20
640173f3:	mov    BYTE PTR [esi+eax*1+0x4],cl
640173f7:	jge    0x6401741c
640173f9:	cmp    BYTE PTR [ebp+0xb],0x0
640173fd:	jne    0x6401740a
640173ff:	mov    edi,0x80000000
64017404:	mov    ecx,esi
64017406:	shr    edi,cl
64017408:	or     DWORD PTR [ebx],edi
6401740a:	mov    ecx,esi
6401740c:	mov    edi,0x80000000
64017411:	shr    edi,cl
64017413:	mov    ecx,DWORD PTR [ebp-0x4]
64017416:	or     DWORD PTR [eax+ecx*4+0x44],edi
6401741a:	jmp    0x64017445
6401741c:	cmp    BYTE PTR [ebp+0xb],0x0
64017420:	jne    0x6401742f
64017422:	lea    ecx,[esi-0x20]
64017425:	mov    edi,0x80000000
6401742a:	shr    edi,cl
6401742c:	or     DWORD PTR [ebx+0x4],edi
6401742f:	mov    ecx,DWORD PTR [ebp-0x4]
64017432:	lea    edi,[eax+ecx*4+0xc4]
64017439:	lea    ecx,[esi-0x20]
6401743c:	mov    esi,0x80000000
64017441:	shr    esi,cl
64017443:	or     DWORD PTR [edi],esi
64017445:	mov    ecx,DWORD PTR [ebp-0x8]
64017448:	test   ecx,ecx
6401744a:	je     0x64017457
6401744c:	mov    DWORD PTR [edx],ecx
6401744e:	mov    DWORD PTR [ecx+edx*1-0x4],ecx
64017452:	jmp    0x64017457
64017454:	mov    ecx,DWORD PTR [ebp-0x8]
64017457:	mov    esi,DWORD PTR [ebp-0x10]
6401745a:	add    edx,ecx
6401745c:	lea    ecx,[esi+0x1]
6401745f:	mov    DWORD PTR [edx],ecx
64017461:	mov    DWORD PTR [edx+esi*1-0x4],ecx
64017465:	mov    esi,DWORD PTR [ebp-0xc]
64017468:	mov    ecx,DWORD PTR [esi]
6401746a:	test   ecx,ecx
6401746c:	lea    edi,[ecx+0x1]
6401746f:	mov    DWORD PTR [esi],edi
64017471:	jne    0x6401748d
64017473:	cmp    ebx,DWORD PTR ds:0x64029b68
64017479:	jne    0x6401748d
6401747b:	mov    ecx,DWORD PTR [ebp-0x4]
6401747e:	cmp    ecx,DWORD PTR ds:0x6402d458
64017484:	jne    0x6401748d
64017486:	and    DWORD PTR ds:0x64029b68,0x0
6401748d:	mov    ecx,DWORD PTR [ebp-0x4]
64017490:	mov    DWORD PTR [eax],ecx
64017492:	lea    eax,[edx+0x4]
64017495:	pop    edi
64017496:	pop    esi
64017497:	pop    ebx
64017498:	leave  
64017499:	ret    
6401749a:	push   ecx
6401749b:	push   ebx
6401749c:	mov    ebx,DWORD PTR [esp+0xc]
640174a0:	push   esi
640174a1:	push   edi
640174a2:	xor    esi,esi
640174a4:	xor    edi,edi
640174a6:	cmp    ebx,DWORD PTR [edi*8+0x64028a10]
640174ad:	je     0x640174b5
640174af:	inc    edi
640174b0:	cmp    edi,0x17
640174b3:	jb     0x640174a6
640174b5:	cmp    edi,0x17
640174b8:	jae    0x64017635
640174be:	push   ebp
640174bf:	push   0x3
640174c1:	call   0x6401a519
640174c6:	cmp    eax,0x1
640174c9:	pop    ecx
640174ca:	je     0x64017601
640174d0:	push   0x3
640174d2:	call   0x6401a519
640174d7:	test   eax,eax
640174d9:	pop    ecx
640174da:	jne    0x640174e9
640174dc:	cmp    DWORD PTR ds:0x64029520,0x1
640174e3:	je     0x64017601
640174e9:	cmp    ebx,0xfc
640174ef:	je     0x64017634
640174f5:	push   0x640222f8
640174fa:	mov    ebx,0x314
640174ff:	push   ebx
64017500:	mov    ebp,0x64029b70
64017505:	push   ebp
64017506:	call   0x64010d18
6401750b:	add    esp,0xc
6401750e:	test   eax,eax
64017510:	je     0x6401751f
64017512:	push   esi
64017513:	push   esi
64017514:	push   esi
64017515:	push   esi
64017516:	push   esi
64017517:	call   0x6400ed8a
6401751c:	add    esp,0x14
6401751f:	push   0x104
64017524:	mov    esi,0x64029b89
64017529:	push   esi
6401752a:	push   0x0
6401752c:	mov    BYTE PTR ds:0x64029c8d,0x0
64017533:	call   DWORD PTR ds:0x64021154
64017539:	test   eax,eax
6401753b:	jne    0x64017563
6401753d:	push   0x640222e0
64017542:	push   0x2fb
64017547:	push   esi
64017548:	call   0x64010d18
6401754d:	add    esp,0xc
64017550:	test   eax,eax
64017552:	je     0x64017563
64017554:	xor    eax,eax
64017556:	push   eax
64017557:	push   eax
64017558:	push   eax
64017559:	push   eax
6401755a:	push   eax
6401755b:	call   0x6400ed8a
64017560:	add    esp,0x14
64017563:	push   esi
64017564:	call   0x64010b20
64017569:	inc    eax
6401756a:	cmp    eax,0x3c
6401756d:	pop    ecx
6401756e:	jbe    0x640175a8
64017570:	push   esi
64017571:	call   0x64010b20
64017576:	sub    esi,0x3b
64017579:	add    eax,esi
6401757b:	push   0x3
6401757d:	mov    ecx,0x64029e84
64017582:	push   0x640222dc
64017587:	sub    ecx,eax
64017589:	push   ecx
6401758a:	push   eax
6401758b:	call   0x640185f6
64017590:	add    esp,0x14
64017593:	test   eax,eax
64017595:	je     0x640175a8
64017597:	xor    esi,esi
64017599:	push   esi
6401759a:	push   esi
6401759b:	push   esi
6401759c:	push   esi
6401759d:	push   esi
6401759e:	call   0x6400ed8a
640175a3:	add    esp,0x14
640175a6:	jmp    0x640175aa
640175a8:	xor    esi,esi
640175aa:	push   0x640222d8
640175af:	push   ebx
640175b0:	push   ebp
640175b1:	call   0x6401853f
640175b6:	add    esp,0xc
640175b9:	test   eax,eax
640175bb:	je     0x640175ca
640175bd:	push   esi
640175be:	push   esi
640175bf:	push   esi
640175c0:	push   esi
640175c1:	push   esi
640175c2:	call   0x6400ed8a
640175c7:	add    esp,0x14
640175ca:	push   DWORD PTR [edi*8+0x64028a14]
640175d1:	push   ebx
640175d2:	push   ebp
640175d3:	call   0x6401853f
640175d8:	add    esp,0xc
640175db:	test   eax,eax
640175dd:	je     0x640175ec
640175df:	push   esi
640175e0:	push   esi
640175e1:	push   esi
640175e2:	push   esi
640175e3:	push   esi
640175e4:	call   0x6400ed8a
640175e9:	add    esp,0x14
640175ec:	push   0x12010
640175f1:	push   0x640222b0
640175f6:	push   ebp
640175f7:	call   0x6401a35c
640175fc:	add    esp,0xc
640175ff:	jmp    0x64017634
64017601:	push   0xfffffff4
64017603:	call   DWORD PTR ds:0x64021148
64017609:	mov    ebp,eax
6401760b:	cmp    ebp,esi
6401760d:	je     0x64017634
6401760f:	cmp    ebp,0xffffffff
64017612:	je     0x64017634
64017614:	push   0x0
64017616:	lea    eax,[esp+0x14]
6401761a:	push   eax
6401761b:	lea    esi,[edi*8+0x64028a14]
64017622:	push   DWORD PTR [esi]
64017624:	call   0x64010b20
64017629:	pop    ecx
6401762a:	push   eax
6401762b:	push   DWORD PTR [esi]
6401762d:	push   ebp
6401762e:	call   DWORD PTR ds:0x64021078
64017634:	pop    ebp
64017635:	pop    edi
64017636:	pop    esi
64017637:	pop    ebx
64017638:	pop    ecx
64017639:	ret    
6401763a:	push   0x3
6401763c:	call   0x6401a519
64017641:	cmp    eax,0x1
64017644:	pop    ecx
64017645:	je     0x6401765c
64017647:	push   0x3
64017649:	call   0x6401a519
6401764e:	test   eax,eax
64017650:	pop    ecx
64017651:	jne    0x64017672
64017653:	cmp    DWORD PTR ds:0x64029520,0x1
6401765a:	jne    0x64017672
6401765c:	push   0xfc
64017661:	call   0x6401749a
64017666:	push   0xff
6401766b:	call   0x6401749a
64017670:	pop    ecx
64017671:	pop    ecx
64017672:	ret    
64017673:	push   ebp
64017674:	mov    ebp,esp
64017676:	sub    esp,0x8
64017679:	mov    DWORD PTR [ebp-0x4],edi
6401767c:	mov    DWORD PTR [ebp-0x8],esi
6401767f:	mov    esi,DWORD PTR [ebp+0xc]
64017682:	mov    edi,DWORD PTR [ebp+0x8]
64017685:	mov    ecx,DWORD PTR [ebp+0x10]
64017688:	shr    ecx,0x7
6401768b:	jmp    0x64017693
6401768d:	lea    ebx,[ebx+0x0]
64017693:	movdqa xmm0,XMMWORD PTR [esi]
64017697:	movdqa xmm1,XMMWORD PTR [esi+0x10]
6401769c:	movdqa xmm2,XMMWORD PTR [esi+0x20]
640176a1:	movdqa xmm3,XMMWORD PTR [esi+0x30]
640176a6:	movdqa XMMWORD PTR [edi],xmm0
640176aa:	movdqa XMMWORD PTR [edi+0x10],xmm1
640176af:	movdqa XMMWORD PTR [edi+0x20],xmm2
640176b4:	movdqa XMMWORD PTR [edi+0x30],xmm3
640176b9:	movdqa xmm4,XMMWORD PTR [esi+0x40]
640176be:	movdqa xmm5,XMMWORD PTR [esi+0x50]
640176c3:	movdqa xmm6,XMMWORD PTR [esi+0x60]
640176c8:	movdqa xmm7,XMMWORD PTR [esi+0x70]
640176cd:	movdqa XMMWORD PTR [edi+0x40],xmm4
640176d2:	movdqa XMMWORD PTR [edi+0x50],xmm5
640176d7:	movdqa XMMWORD PTR [edi+0x60],xmm6
640176dc:	movdqa XMMWORD PTR [edi+0x70],xmm7
640176e1:	lea    esi,[esi+0x80]
640176e7:	lea    edi,[edi+0x80]
640176ed:	dec    ecx
640176ee:	jne    0x64017693
640176f0:	mov    esi,DWORD PTR [ebp-0x8]
640176f3:	mov    edi,DWORD PTR [ebp-0x4]
640176f6:	mov    esp,ebp
640176f8:	pop    ebp
640176f9:	ret    
640176fa:	push   ebp
640176fb:	mov    ebp,esp
640176fd:	sub    esp,0x1c
64017700:	mov    DWORD PTR [ebp-0xc],edi
64017703:	mov    DWORD PTR [ebp-0x8],esi
64017706:	mov    DWORD PTR [ebp-0x4],ebx
64017709:	mov    ebx,DWORD PTR [ebp+0xc]
6401770c:	mov    eax,ebx
6401770e:	cdq    
6401770f:	mov    ecx,eax
64017711:	mov    eax,DWORD PTR [ebp+0x8]
64017714:	xor    ecx,edx
64017716:	sub    ecx,edx
64017718:	and    ecx,0xf
6401771b:	xor    ecx,edx
6401771d:	sub    ecx,edx
6401771f:	cdq    
64017720:	mov    edi,eax
64017722:	xor    edi,edx
64017724:	sub    edi,edx
64017726:	and    edi,0xf
64017729:	xor    edi,edx
6401772b:	sub    edi,edx
6401772d:	mov    edx,ecx
6401772f:	or     edx,edi
64017731:	jne    0x6401777d
64017733:	mov    esi,DWORD PTR [ebp+0x10]
64017736:	mov    ecx,esi
64017738:	and    ecx,0x7f
6401773b:	mov    DWORD PTR [ebp-0x18],ecx
6401773e:	cmp    esi,ecx
64017740:	je     0x64017755
64017742:	sub    esi,ecx
64017744:	push   esi
64017745:	push   ebx
64017746:	push   eax
64017747:	call   0x64017673
6401774c:	add    esp,0xc
6401774f:	mov    eax,DWORD PTR [ebp+0x8]
64017752:	mov    ecx,DWORD PTR [ebp-0x18]
64017755:	test   ecx,ecx
64017757:	je     0x640177d0
64017759:	mov    ebx,DWORD PTR [ebp+0x10]
6401775c:	mov    edx,DWORD PTR [ebp+0xc]
6401775f:	add    edx,ebx
64017761:	sub    edx,ecx
64017763:	mov    DWORD PTR [ebp-0x14],edx
64017766:	add    ebx,eax
64017768:	sub    ebx,ecx
6401776a:	mov    DWORD PTR [ebp-0x10],ebx
6401776d:	mov    esi,DWORD PTR [ebp-0x14]
64017770:	mov    edi,DWORD PTR [ebp-0x10]
64017773:	mov    ecx,DWORD PTR [ebp-0x18]
64017776:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
64017778:	mov    eax,DWORD PTR [ebp+0x8]
6401777b:	jmp    0x640177d0
6401777d:	cmp    ecx,edi
6401777f:	jne    0x640177b6
64017781:	neg    ecx
64017783:	add    ecx,0x10
64017786:	mov    DWORD PTR [ebp-0x1c],ecx
64017789:	mov    esi,DWORD PTR [ebp+0xc]
6401778c:	mov    edi,DWORD PTR [ebp+0x8]
6401778f:	mov    ecx,DWORD PTR [ebp-0x1c]
64017792:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
64017794:	mov    ecx,DWORD PTR [ebp+0x8]
64017797:	add    ecx,DWORD PTR [ebp-0x1c]
6401779a:	mov    edx,DWORD PTR [ebp+0xc]
6401779d:	add    edx,DWORD PTR [ebp-0x1c]
640177a0:	mov    eax,DWORD PTR [ebp+0x10]
640177a3:	sub    eax,DWORD PTR [ebp-0x1c]
640177a6:	push   eax
640177a7:	push   edx
640177a8:	push   ecx
640177a9:	call   0x640176fa
640177ae:	add    esp,0xc
640177b1:	mov    eax,DWORD PTR [ebp+0x8]
640177b4:	jmp    0x640177d0
640177b6:	mov    esi,DWORD PTR [ebp+0xc]
640177b9:	mov    edi,DWORD PTR [ebp+0x8]
640177bc:	mov    ecx,DWORD PTR [ebp+0x10]
640177bf:	mov    edx,ecx
640177c1:	shr    ecx,0x2
640177c4:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
640177c6:	mov    ecx,edx
640177c8:	and    ecx,0x3
640177cb:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
640177cd:	mov    eax,DWORD PTR [ebp+0x8]
640177d0:	mov    ebx,DWORD PTR [ebp-0x4]
640177d3:	mov    esi,DWORD PTR [ebp-0x8]
640177d6:	mov    edi,DWORD PTR [ebp-0xc]
640177d9:	mov    esp,ebp
640177db:	pop    ebp
640177dc:	ret    
640177dd:	int3   
640177de:	int3   
640177df:	int3   
640177e0:	push   ebx
640177e1:	push   esi
640177e2:	push   edi
640177e3:	mov    edx,DWORD PTR [esp+0x10]
640177e7:	mov    eax,DWORD PTR [esp+0x14]
640177eb:	mov    ecx,DWORD PTR [esp+0x18]
640177ef:	push   ebp
640177f0:	push   edx
640177f1:	push   eax
640177f2:	push   ecx
640177f3:	push   ecx
640177f4:	push   0x64017870
640177f9:	push   DWORD PTR fs:0x0
64017800:	mov    eax,ds:0x64028038
64017805:	xor    eax,esp
64017807:	mov    DWORD PTR [esp+0x8],eax
6401780b:	mov    DWORD PTR fs:0x0,esp
64017812:	mov    eax,DWORD PTR [esp+0x30]
64017816:	mov    ebx,DWORD PTR [eax+0x8]
64017819:	mov    ecx,DWORD PTR [esp+0x2c]
6401781d:	xor    ebx,DWORD PTR [ecx]
6401781f:	mov    esi,DWORD PTR [eax+0xc]
64017822:	cmp    esi,0xfffffffe
64017825:	je     0x64017862
64017827:	mov    edx,DWORD PTR [esp+0x34]
6401782b:	cmp    edx,0xfffffffe
6401782e:	je     0x64017834
64017830:	cmp    esi,edx
64017832:	jbe    0x64017862
64017834:	lea    esi,[esi+esi*2]
64017837:	lea    ebx,[ebx+esi*4+0x10]
6401783b:	mov    ecx,DWORD PTR [ebx]
6401783d:	mov    DWORD PTR [eax+0xc],ecx
64017840:	cmp    DWORD PTR [ebx+0x4],0x0
64017844:	jne    0x64017812
64017846:	push   0x101
6401784b:	mov    eax,DWORD PTR [ebx+0x8]
6401784e:	call   0x64017c91
64017853:	mov    ecx,0x1
64017858:	mov    eax,DWORD PTR [ebx+0x8]
6401785b:	call   0x64017cb0
64017860:	jmp    0x64017812
64017862:	pop    DWORD PTR fs:0x0
64017869:	add    esp,0x18
6401786c:	pop    edi
6401786d:	pop    esi
6401786e:	pop    ebx
6401786f:	ret    
64017870:	mov    ecx,DWORD PTR [esp+0x4]
64017874:	test   DWORD PTR [ecx+0x4],0x6
6401787b:	mov    eax,0x1
64017880:	je     0x640178b5
64017882:	mov    eax,DWORD PTR [esp+0x8]
64017886:	mov    ecx,DWORD PTR [eax+0x8]
64017889:	xor    ecx,eax
6401788b:	call   0x6400f34e
64017890:	push   ebp
64017891:	mov    ebp,DWORD PTR [eax+0x18]
64017894:	push   DWORD PTR [eax+0xc]
64017897:	push   DWORD PTR [eax+0x10]
6401789a:	push   DWORD PTR [eax+0x14]
6401789d:	call   0x640177e0
640178a2:	add    esp,0xc
640178a5:	pop    ebp
640178a6:	mov    eax,DWORD PTR [esp+0x8]
640178aa:	mov    edx,DWORD PTR [esp+0x10]
640178ae:	mov    DWORD PTR [edx],eax
640178b0:	mov    eax,0x3
640178b5:	ret    
640178b6:	push   ebp
640178b7:	mov    ecx,DWORD PTR [esp+0x8]
640178bb:	mov    ebp,DWORD PTR [ecx]
640178bd:	push   DWORD PTR [ecx+0x1c]
640178c0:	push   DWORD PTR [ecx+0x18]
640178c3:	push   DWORD PTR [ecx+0x28]
640178c6:	call   0x640177e0
640178cb:	add    esp,0xc
640178ce:	pop    ebp
640178cf:	ret    0x4
640178d2:	push   ebp
640178d3:	push   esi
640178d4:	push   edi
640178d5:	push   ebx
640178d6:	mov    ebp,edx
640178d8:	xor    eax,eax
640178da:	xor    ebx,ebx
640178dc:	xor    edx,edx
640178de:	xor    esi,esi
640178e0:	xor    edi,edi
640178e2:	call   ecx
640178e4:	pop    ebx
640178e5:	pop    edi
640178e6:	pop    esi
640178e7:	pop    ebp
640178e8:	ret    
640178e9:	mov    ebp,edx
640178eb:	mov    esi,ecx
640178ed:	mov    eax,ecx
640178ef:	push   0x1
640178f1:	call   0x64017c91
640178f6:	xor    eax,eax
640178f8:	xor    ebx,ebx
640178fa:	xor    ecx,ecx
640178fc:	xor    edx,edx
640178fe:	xor    edi,edi
64017900:	jmp    esi
64017902:	push   ebp
64017903:	mov    ebp,esp
64017905:	push   ebx
64017906:	push   esi
64017907:	push   edi
64017908:	push   0x0
6401790a:	push   0x0
6401790c:	push   0x64017917
64017911:	push   ecx
64017912:	call   0x6401b59c
64017917:	pop    edi
64017918:	pop    esi
64017919:	pop    ebx
6401791a:	pop    ebp
6401791b:	ret    
6401791c:	push   ebp
6401791d:	mov    ebp,DWORD PTR [esp+0x8]
64017921:	push   edx
64017922:	push   ecx
64017923:	push   DWORD PTR [esp+0x14]
64017927:	call   0x640177e0
6401792c:	add    esp,0xc
6401792f:	pop    ebp
64017930:	ret    0x8
64017933:	int3   
64017934:	int3   
64017935:	int3   
64017936:	int3   
64017937:	int3   
64017938:	int3   
64017939:	int3   
6401793a:	int3   
6401793b:	int3   
6401793c:	int3   
6401793d:	int3   
6401793e:	int3   
6401793f:	int3   
64017940:	mov    ecx,DWORD PTR [esp+0x4]
64017944:	cmp    WORD PTR [ecx],0x5a4d
64017949:	je     0x6401794e
6401794b:	xor    eax,eax
6401794d:	ret    
6401794e:	mov    eax,DWORD PTR [ecx+0x3c]
64017951:	add    eax,ecx
64017953:	cmp    DWORD PTR [eax],0x4550
64017959:	jne    0x6401794b
6401795b:	xor    ecx,ecx
6401795d:	cmp    WORD PTR [eax+0x18],0x10b
64017963:	sete   cl
64017966:	mov    eax,ecx
64017968:	ret    
64017969:	int3   
6401796a:	int3   
6401796b:	int3   
6401796c:	int3   
6401796d:	int3   
6401796e:	int3   
6401796f:	int3   
64017970:	mov    eax,DWORD PTR [esp+0x4]
64017974:	mov    ecx,DWORD PTR [eax+0x3c]
64017977:	add    ecx,eax
64017979:	movzx  eax,WORD PTR [ecx+0x14]
6401797d:	push   ebx
6401797e:	push   esi
6401797f:	movzx  esi,WORD PTR [ecx+0x6]
64017983:	xor    edx,edx
64017985:	test   esi,esi
64017987:	push   edi
64017988:	lea    eax,[eax+ecx*1+0x18]
6401798c:	jbe    0x640179ac
6401798e:	mov    edi,DWORD PTR [esp+0x14]
64017992:	mov    ecx,DWORD PTR [eax+0xc]
64017995:	cmp    edi,ecx
64017997:	jb     0x640179a2
64017999:	mov    ebx,DWORD PTR [eax+0x8]
6401799c:	add    ebx,ecx
6401799e:	cmp    edi,ebx
640179a0:	jb     0x640179ae
640179a2:	add    edx,0x1
640179a5:	add    eax,0x28
640179a8:	cmp    edx,esi
640179aa:	jb     0x64017992
640179ac:	xor    eax,eax
640179ae:	pop    edi
640179af:	pop    esi
640179b0:	pop    ebx
640179b1:	ret    
640179b2:	int3   
640179b3:	int3   
640179b4:	int3   
640179b5:	int3   
640179b6:	int3   
640179b7:	int3   
640179b8:	int3   
640179b9:	int3   
640179ba:	int3   
640179bb:	int3   
640179bc:	int3   
640179bd:	int3   
640179be:	int3   
640179bf:	int3   
640179c0:	push   ebp
640179c1:	mov    ebp,esp
640179c3:	push   0xfffffffe
640179c5:	push   0x64025b50
640179ca:	push   0x64010760
640179cf:	mov    eax,fs:0x0
640179d5:	push   eax
640179d6:	sub    esp,0x8
640179d9:	push   ebx
640179da:	push   esi
640179db:	push   edi
640179dc:	mov    eax,ds:0x64028038
640179e1:	xor    DWORD PTR [ebp-0x8],eax
640179e4:	xor    eax,ebp
640179e6:	push   eax
640179e7:	lea    eax,[ebp-0x10]
640179ea:	mov    fs:0x0,eax
640179f0:	mov    DWORD PTR [ebp-0x18],esp
640179f3:	mov    DWORD PTR [ebp-0x4],0x0
640179fa:	push   0x64000000
640179ff:	call   0x64017940
64017a04:	add    esp,0x4
64017a07:	test   eax,eax
64017a09:	je     0x64017a60
64017a0b:	mov    eax,DWORD PTR [ebp+0x8]
64017a0e:	sub    eax,0x64000000
64017a13:	push   eax
64017a14:	push   0x64000000
64017a19:	call   0x64017970
64017a1e:	add    esp,0x8
64017a21:	test   eax,eax
64017a23:	je     0x64017a60
64017a25:	mov    eax,DWORD PTR [eax+0x24]
64017a28:	shr    eax,0x1f
64017a2b:	not    eax
64017a2d:	and    eax,0x1
64017a30:	mov    DWORD PTR [ebp-0x4],0xfffffffe
64017a37:	mov    ecx,DWORD PTR [ebp-0x10]
64017a3a:	mov    DWORD PTR fs:0x0,ecx
64017a41:	pop    ecx
64017a42:	pop    edi
64017a43:	pop    esi
64017a44:	pop    ebx
64017a45:	mov    esp,ebp
64017a47:	pop    ebp
64017a48:	ret    
64017a49:	mov    eax,DWORD PTR [ebp-0x14]
64017a4c:	mov    ecx,DWORD PTR [eax]
64017a4e:	mov    eax,DWORD PTR [ecx]
64017a50:	xor    edx,edx
64017a52:	cmp    eax,0xc0000005
64017a57:	sete   dl
64017a5a:	mov    eax,edx
64017a5c:	ret    
64017a5d:	mov    esp,DWORD PTR [ebp-0x18]
64017a60:	mov    DWORD PTR [ebp-0x4],0xfffffffe
64017a67:	xor    eax,eax
64017a69:	mov    ecx,DWORD PTR [ebp-0x10]
64017a6c:	mov    DWORD PTR fs:0x0,ecx
64017a73:	pop    ecx
64017a74:	pop    edi
64017a75:	pop    esi
64017a76:	pop    ebx
64017a77:	mov    esp,ebp
64017a79:	pop    ebp
64017a7a:	ret    
64017a7b:	xor    eax,eax
64017a7d:	inc    eax
64017a7e:	cmp    DWORD PTR [esp+0x4],0x0
64017a83:	jne    0x64017a87
64017a85:	xor    eax,eax
64017a87:	ret    
64017a88:	push   ebp
64017a89:	lea    ebp,[esp-0x2a8]
64017a90:	sub    esp,0x328
64017a96:	mov    eax,ds:0x64028038
64017a9b:	xor    eax,ebp
64017a9d:	mov    DWORD PTR [ebp+0x2a4],eax
64017aa3:	test   BYTE PTR ds:0x64028ac8,0x1
64017aaa:	push   esi
64017aab:	je     0x64017ab5
64017aad:	push   0xa
64017aaf:	call   0x6401749a
64017ab4:	pop    ecx
64017ab5:	call   0x64017e3d
64017aba:	test   eax,eax
64017abc:	je     0x64017ac6
64017abe:	push   0x16
64017ac0:	call   0x64017e4a
64017ac5:	pop    ecx
64017ac6:	test   BYTE PTR ds:0x64028ac8,0x2
64017acd:	je     0x64017b73
64017ad3:	mov    DWORD PTR [ebp+0x88],eax
64017ad9:	mov    DWORD PTR [ebp+0x84],ecx
64017adf:	mov    DWORD PTR [ebp+0x80],edx
64017ae5:	mov    DWORD PTR [ebp+0x7c],ebx
64017ae8:	mov    DWORD PTR [ebp+0x78],esi
64017aeb:	mov    DWORD PTR [ebp+0x74],edi
64017aee:	data16 mov WORD PTR [ebp+0xa0],ss
64017af5:	data16 mov WORD PTR [ebp+0x94],cs
64017afc:	data16 mov WORD PTR [ebp+0x70],ds
64017b00:	data16 mov WORD PTR [ebp+0x6c],es
64017b04:	data16 mov WORD PTR [ebp+0x68],fs
64017b08:	data16 mov WORD PTR [ebp+0x64],gs
64017b0c:	pushf  
64017b0d:	pop    DWORD PTR [ebp+0x98]
64017b13:	mov    esi,DWORD PTR [ebp+0x2ac]
64017b19:	lea    eax,[ebp+0x2ac]
64017b1f:	mov    DWORD PTR [ebp+0x9c],eax
64017b25:	mov    DWORD PTR [ebp-0x28],0x10001
64017b2c:	mov    DWORD PTR [ebp+0x90],esi
64017b32:	mov    eax,DWORD PTR [eax-0x4]
64017b35:	push   0x50
64017b37:	mov    DWORD PTR [ebp+0x8c],eax
64017b3d:	lea    eax,[ebp-0x80]
64017b40:	push   0x0
64017b42:	push   eax
64017b43:	call   0x6400fa50
64017b48:	lea    eax,[ebp-0x80]
64017b4b:	add    esp,0xc
64017b4e:	mov    DWORD PTR [ebp-0x30],eax
64017b51:	lea    eax,[ebp-0x28]
64017b54:	push   0x0
64017b56:	mov    DWORD PTR [ebp-0x80],0x40000015
64017b5d:	mov    DWORD PTR [ebp-0x74],esi
64017b60:	mov    DWORD PTR [ebp-0x2c],eax
64017b63:	call   DWORD PTR ds:0x64021104
64017b69:	lea    eax,[ebp-0x30]
64017b6c:	push   eax
64017b6d:	call   DWORD PTR ds:0x64021100
64017b73:	push   0x3
64017b75:	call   0x64012a36
64017b7a:	int3   
64017b7b:	int3   
64017b7c:	push   ebp
64017b7d:	mov    ebp,esp
64017b7f:	push   ebx
64017b80:	push   esi
64017b81:	push   edi
64017b82:	push   ebp
64017b83:	push   0x0
64017b85:	push   0x0
64017b87:	push   0x64017b94
64017b8c:	push   DWORD PTR [ebp+0x8]
64017b8f:	call   0x6401b59c
64017b94:	pop    ebp
64017b95:	pop    edi
64017b96:	pop    esi
64017b97:	pop    ebx
64017b98:	mov    esp,ebp
64017b9a:	pop    ebp
64017b9b:	ret    
64017b9c:	mov    ecx,DWORD PTR [esp+0x4]
64017ba0:	test   DWORD PTR [ecx+0x4],0x6
64017ba7:	mov    eax,0x1
64017bac:	je     0x64017be0
64017bae:	mov    eax,DWORD PTR [esp+0x14]
64017bb2:	mov    ecx,DWORD PTR [eax-0x4]
64017bb5:	xor    ecx,eax
64017bb7:	call   0x6400f34e
64017bbc:	push   ebp
64017bbd:	mov    ebp,DWORD PTR [eax+0x10]
64017bc0:	mov    edx,DWORD PTR [eax+0x28]
64017bc3:	push   edx
64017bc4:	mov    edx,DWORD PTR [eax+0x24]
64017bc7:	push   edx
64017bc8:	call   0x64017be1
64017bcd:	add    esp,0x8
64017bd0:	pop    ebp
64017bd1:	mov    eax,DWORD PTR [esp+0x8]
64017bd5:	mov    edx,DWORD PTR [esp+0x10]
64017bd9:	mov    DWORD PTR [edx],eax
64017bdb:	mov    eax,0x3
64017be0:	ret    
64017be1:	push   ebx
64017be2:	push   esi
64017be3:	push   edi
64017be4:	mov    eax,DWORD PTR [esp+0x10]
64017be8:	push   ebp
64017be9:	push   eax
64017bea:	push   0xfffffffe
64017bec:	push   0x64017b9c
64017bf1:	push   DWORD PTR fs:0x0
64017bf8:	mov    eax,ds:0x64028038
64017bfd:	xor    eax,esp
64017bff:	push   eax
64017c00:	lea    eax,[esp+0x4]
64017c04:	mov    fs:0x0,eax
64017c0a:	mov    eax,DWORD PTR [esp+0x28]
64017c0e:	mov    ebx,DWORD PTR [eax+0x8]
64017c11:	mov    esi,DWORD PTR [eax+0xc]
64017c14:	cmp    esi,0xffffffff
64017c17:	je     0x64017c53
64017c19:	cmp    DWORD PTR [esp+0x2c],0xffffffff
64017c1e:	je     0x64017c26
64017c20:	cmp    esi,DWORD PTR [esp+0x2c]
64017c24:	jbe    0x64017c53
64017c26:	lea    esi,[esi+esi*2]
64017c29:	mov    ecx,DWORD PTR [ebx+esi*4]
64017c2c:	mov    DWORD PTR [esp+0xc],ecx
64017c30:	mov    DWORD PTR [eax+0xc],ecx
64017c33:	cmp    DWORD PTR [ebx+esi*4+0x4],0x0
64017c38:	jne    0x64017c51
64017c3a:	push   0x101
64017c3f:	mov    eax,DWORD PTR [ebx+esi*4+0x8]
64017c43:	call   0x64017c91
64017c48:	mov    eax,DWORD PTR [ebx+esi*4+0x8]
64017c4c:	call   0x64017cb0
64017c51:	jmp    0x64017c0a
64017c53:	mov    ecx,DWORD PTR [esp+0x4]
64017c57:	mov    DWORD PTR fs:0x0,ecx
64017c5e:	add    esp,0x18
64017c61:	pop    edi
64017c62:	pop    esi
64017c63:	pop    ebx
64017c64:	ret    
64017c65:	xor    eax,eax
64017c67:	mov    ecx,DWORD PTR fs:0x0
64017c6e:	cmp    DWORD PTR [ecx+0x4],0x64017b9c
64017c75:	jne    0x64017c87
64017c77:	mov    edx,DWORD PTR [ecx+0xc]
64017c7a:	mov    edx,DWORD PTR [edx+0xc]
64017c7d:	cmp    DWORD PTR [ecx+0x8],edx
64017c80:	jne    0x64017c87
64017c82:	mov    eax,0x1
64017c87:	ret    
64017c88:	push   ebx
64017c89:	push   ecx
64017c8a:	mov    ebx,0x64028acc
64017c8f:	jmp    0x64017c9c
64017c91:	push   ebx
64017c92:	push   ecx
64017c93:	mov    ebx,0x64028acc
64017c98:	mov    ecx,DWORD PTR [esp+0xc]
64017c9c:	mov    DWORD PTR [ebx+0x8],ecx
64017c9f:	mov    DWORD PTR [ebx+0x4],eax
64017ca2:	mov    DWORD PTR [ebx+0xc],ebp
64017ca5:	push   ebp
64017ca6:	push   ecx
64017ca7:	push   eax
64017ca8:	pop    eax
64017ca9:	pop    ecx
64017caa:	pop    ebp
64017cab:	pop    ecx
64017cac:	pop    ebx
64017cad:	ret    0x4
64017cb0:	call   eax
64017cb2:	ret    
64017cb3:	push   0xc
64017cb5:	push   0x64025b70
64017cba:	call   0x640106f8
64017cbf:	mov    ecx,DWORD PTR [ebp+0x8]
64017cc2:	xor    edi,edi
64017cc4:	cmp    ecx,edi
64017cc6:	jbe    0x64017cf6
64017cc8:	push   0xffffffe0
64017cca:	pop    eax
64017ccb:	xor    edx,edx
64017ccd:	div    ecx
64017ccf:	cmp    eax,DWORD PTR [ebp+0xc]
64017cd2:	sbb    eax,eax
64017cd4:	inc    eax
64017cd5:	jne    0x64017cf6
64017cd7:	call   0x64011120
64017cdc:	mov    DWORD PTR [eax],0xc
64017ce2:	push   edi
64017ce3:	push   edi
64017ce4:	push   edi
64017ce5:	push   edi
64017ce6:	push   edi
64017ce7:	call   0x6400ee86
64017cec:	add    esp,0x14
64017cef:	xor    eax,eax
64017cf1:	jmp    0x64017dcb
64017cf6:	imul   ecx,DWORD PTR [ebp+0xc]
64017cfa:	mov    esi,ecx
64017cfc:	mov    DWORD PTR [ebp+0x8],esi
64017cff:	cmp    esi,edi
64017d01:	jne    0x64017d06
64017d03:	xor    esi,esi
64017d05:	inc    esi
64017d06:	xor    ebx,ebx
64017d08:	mov    DWORD PTR [ebp-0x1c],ebx
64017d0b:	cmp    esi,0xffffffe0
64017d0e:	ja     0x64017d79
64017d10:	cmp    DWORD PTR ds:0x6402d45c,0x3
64017d17:	jne    0x64017d64
64017d19:	add    esi,0xf
64017d1c:	and    esi,0xfffffff0
64017d1f:	mov    DWORD PTR [ebp+0xc],esi
64017d22:	mov    eax,DWORD PTR [ebp+0x8]
64017d25:	cmp    eax,DWORD PTR ds:0x6402d44c
64017d2b:	ja     0x64017d64
64017d2d:	push   0x4
64017d2f:	call   0x6401696a
64017d34:	pop    ecx
64017d35:	mov    DWORD PTR [ebp-0x4],edi
64017d38:	push   DWORD PTR [ebp+0x8]
64017d3b:	call   0x640171b7
64017d40:	pop    ecx
64017d41:	mov    DWORD PTR [ebp-0x1c],eax
64017d44:	mov    DWORD PTR [ebp-0x4],0xfffffffe
64017d4b:	call   0x64017daf
64017d50:	mov    ebx,DWORD PTR [ebp-0x1c]
64017d53:	cmp    ebx,edi
64017d55:	je     0x64017d68
64017d57:	push   DWORD PTR [ebp+0x8]
64017d5a:	push   edi
64017d5b:	push   ebx
64017d5c:	call   0x6400fa50
64017d61:	add    esp,0xc
64017d64:	cmp    ebx,edi
64017d66:	jne    0x64017dc9
64017d68:	push   esi
64017d69:	push   0x8
64017d6b:	push   DWORD PTR ds:0x64029a0c
64017d71:	call   DWORD PTR ds:0x640210e8
64017d77:	mov    ebx,eax
64017d79:	cmp    ebx,edi
64017d7b:	jne    0x64017dc9
64017d7d:	cmp    DWORD PTR ds:0x64029e84,edi
64017d83:	je     0x64017db8
64017d85:	push   esi
64017d86:	call   0x6401179b
64017d8b:	pop    ecx
64017d8c:	test   eax,eax
64017d8e:	jne    0x64017d06
64017d94:	mov    eax,DWORD PTR [ebp+0x10]
64017d97:	cmp    eax,edi
64017d99:	je     0x64017cef
64017d9f:	mov    DWORD PTR [eax],0xc
64017da5:	jmp    0x64017cef
64017daa:	xor    edi,edi
64017dac:	mov    esi,DWORD PTR [ebp+0xc]
64017daf:	push   0x4
64017db1:	call   0x64016892
64017db6:	pop    ecx
64017db7:	ret    
64017db8:	cmp    ebx,edi
64017dba:	jne    0x64017dc9
64017dbc:	mov    eax,DWORD PTR [ebp+0x10]
64017dbf:	cmp    eax,edi
64017dc1:	je     0x64017dc9
64017dc3:	mov    DWORD PTR [eax],0xc
64017dc9:	mov    eax,ebx
64017dcb:	call   0x6401073d
64017dd0:	ret    
64017dd1:	push   esi
64017dd2:	push   edi
64017dd3:	xor    edi,edi
64017dd5:	lea    esi,[edi+0x64028adc]
64017ddb:	push   DWORD PTR [esi]
64017ddd:	call   0x640111d8
64017de2:	add    edi,0x4
64017de5:	cmp    edi,0x28
64017de8:	pop    ecx
64017de9:	mov    DWORD PTR [esi],eax
64017deb:	jb     0x64017dd5
64017ded:	pop    edi
64017dee:	pop    esi
64017def:	ret    
64017df0:	mov    eax,DWORD PTR [esp+0x4]
64017df4:	mov    ds:0x64029ec4,eax
64017df9:	mov    ds:0x64029ec8,eax
64017dfe:	mov    ds:0x64029ecc,eax
64017e03:	mov    ds:0x64029ed0,eax
64017e08:	ret    
64017e09:	mov    eax,DWORD PTR [esp+0x4]
64017e0d:	mov    ecx,DWORD PTR ds:0x640288dc
64017e13:	push   esi
64017e14:	cmp    DWORD PTR [eax+0x4],edx
64017e17:	je     0x64017e29
64017e19:	mov    esi,ecx
64017e1b:	imul   esi,esi,0xc
64017e1e:	add    esi,DWORD PTR [esp+0x8]
64017e22:	add    eax,0xc
64017e25:	cmp    eax,esi
64017e27:	jb     0x64017e14
64017e29:	imul   ecx,ecx,0xc
64017e2c:	add    ecx,DWORD PTR [esp+0x8]
64017e30:	pop    esi
64017e31:	cmp    eax,ecx
64017e33:	jae    0x64017e3a
64017e35:	cmp    DWORD PTR [eax+0x4],edx
64017e38:	je     0x64017e3c
64017e3a:	xor    eax,eax
64017e3c:	ret    
64017e3d:	push   DWORD PTR ds:0x64029ecc
64017e43:	call   0x6401124f
64017e48:	pop    ecx
64017e49:	ret    
64017e4a:	push   0x20
64017e4c:	push   0x64025b90
64017e51:	call   0x640106f8
64017e56:	xor    edi,edi
64017e58:	mov    DWORD PTR [ebp-0x1c],edi
64017e5b:	mov    DWORD PTR [ebp-0x28],edi
64017e5e:	mov    ebx,DWORD PTR [ebp+0x8]
64017e61:	cmp    ebx,0xb
64017e64:	jg     0x64017eb2
64017e66:	je     0x64017e7d
64017e68:	mov    eax,ebx
64017e6a:	push   0x2
64017e6c:	pop    ecx
64017e6d:	sub    eax,ecx
64017e6f:	je     0x64017e93
64017e71:	sub    eax,ecx
64017e73:	je     0x64017e7d
64017e75:	sub    eax,ecx
64017e77:	je     0x64017edd
64017e79:	sub    eax,ecx
64017e7b:	jne    0x64017ec1
64017e7d:	call   0x640113f4
64017e82:	mov    edi,eax
64017e84:	mov    DWORD PTR [ebp-0x28],edi
64017e87:	test   edi,edi
64017e89:	jne    0x64017e9f
64017e8b:	or     eax,0xffffffff
64017e8e:	jmp    0x64017ff4
64017e93:	mov    esi,0x64029ec4
64017e98:	mov    eax,ds:0x64029ec4
64017e9d:	jmp    0x64017eff
64017e9f:	push   DWORD PTR [edi+0x5c]
64017ea2:	mov    edx,ebx
64017ea4:	call   0x64017e09
64017ea9:	mov    esi,eax
64017eab:	add    esi,0x8
64017eae:	mov    eax,DWORD PTR [esi]
64017eb0:	jmp    0x64017f0c
64017eb2:	mov    eax,ebx
64017eb4:	sub    eax,0xf
64017eb7:	je     0x64017ef5
64017eb9:	sub    eax,0x6
64017ebc:	je     0x64017ee9
64017ebe:	dec    eax
64017ebf:	je     0x64017edd
64017ec1:	call   0x64011120
64017ec6:	mov    DWORD PTR [eax],0x16
64017ecc:	xor    eax,eax
64017ece:	push   eax
64017ecf:	push   eax
64017ed0:	push   eax
64017ed1:	push   eax
64017ed2:	push   eax
64017ed3:	call   0x6400ee86
64017ed8:	add    esp,0x14
64017edb:	jmp    0x64017e8b
64017edd:	mov    esi,0x64029ecc
64017ee2:	mov    eax,ds:0x64029ecc
64017ee7:	jmp    0x64017eff
64017ee9:	mov    esi,0x64029ec8
64017eee:	mov    eax,ds:0x64029ec8
64017ef3:	jmp    0x64017eff
64017ef5:	mov    esi,0x64029ed0
64017efa:	mov    eax,ds:0x64029ed0
64017eff:	mov    DWORD PTR [ebp-0x1c],0x1
64017f06:	push   eax
64017f07:	call   0x6401124f
64017f0c:	mov    DWORD PTR [ebp-0x20],eax
64017f0f:	pop    ecx
64017f10:	xor    eax,eax
64017f12:	cmp    DWORD PTR [ebp-0x20],0x1
64017f16:	je     0x64017ff4
64017f1c:	cmp    DWORD PTR [ebp-0x20],eax
64017f1f:	jne    0x64017f28
64017f21:	push   0x3
64017f23:	call   0x64012a36
64017f28:	cmp    DWORD PTR [ebp-0x1c],eax
64017f2b:	je     0x64017f34
64017f2d:	push   eax
64017f2e:	call   0x6401696a
64017f33:	pop    ecx
64017f34:	xor    eax,eax
64017f36:	mov    DWORD PTR [ebp-0x4],eax
64017f39:	cmp    ebx,0x8
64017f3c:	je     0x64017f48
64017f3e:	cmp    ebx,0xb
64017f41:	je     0x64017f48
64017f43:	cmp    ebx,0x4
64017f46:	jne    0x64017f63
64017f48:	mov    ecx,DWORD PTR [edi+0x60]
64017f4b:	mov    DWORD PTR [ebp-0x2c],ecx
64017f4e:	mov    DWORD PTR [edi+0x60],eax
64017f51:	cmp    ebx,0x8
64017f54:	jne    0x64017f96
64017f56:	mov    ecx,DWORD PTR [edi+0x64]
64017f59:	mov    DWORD PTR [ebp-0x30],ecx
64017f5c:	mov    DWORD PTR [edi+0x64],0x8c
64017f63:	cmp    ebx,0x8
64017f66:	jne    0x64017f96
64017f68:	mov    ecx,DWORD PTR ds:0x640288d0
64017f6e:	mov    DWORD PTR [ebp-0x24],ecx
64017f71:	mov    ecx,DWORD PTR ds:0x640288d4
64017f77:	mov    edx,DWORD PTR ds:0x640288d0
64017f7d:	add    ecx,edx
64017f7f:	cmp    DWORD PTR [ebp-0x24],ecx
64017f82:	jge    0x64017f9d
64017f84:	mov    ecx,DWORD PTR [ebp-0x24]
64017f87:	imul   ecx,ecx,0xc
64017f8a:	mov    edx,DWORD PTR [edi+0x5c]
64017f8d:	mov    DWORD PTR [ecx+edx*1+0x8],eax
64017f91:	inc    DWORD PTR [ebp-0x24]
64017f94:	jmp    0x64017f71
64017f96:	call   0x64011246
64017f9b:	mov    DWORD PTR [esi],eax
64017f9d:	mov    DWORD PTR [ebp-0x4],0xfffffffe
64017fa4:	call   0x64017fbe
64017fa9:	cmp    ebx,0x8
64017fac:	jne    0x64017fcd
64017fae:	push   DWORD PTR [edi+0x64]
64017fb1:	push   ebx
64017fb2:	call   DWORD PTR [ebp-0x20]
64017fb5:	pop    ecx
64017fb6:	jmp    0x64017fd1
64017fb8:	mov    ebx,DWORD PTR [ebp+0x8]
64017fbb:	mov    edi,DWORD PTR [ebp-0x28]
64017fbe:	cmp    DWORD PTR [ebp-0x1c],0x0
64017fc2:	je     0x64017fcc
64017fc4:	push   0x0
64017fc6:	call   0x64016892
64017fcb:	pop    ecx
64017fcc:	ret    
64017fcd:	push   ebx
64017fce:	call   DWORD PTR [ebp-0x20]
64017fd1:	pop    ecx
64017fd2:	cmp    ebx,0x8
64017fd5:	je     0x64017fe1
64017fd7:	cmp    ebx,0xb
64017fda:	je     0x64017fe1
64017fdc:	cmp    ebx,0x4
64017fdf:	jne    0x64017ff2
64017fe1:	mov    eax,DWORD PTR [ebp-0x2c]
64017fe4:	mov    DWORD PTR [edi+0x60],eax
64017fe7:	cmp    ebx,0x8
64017fea:	jne    0x64017ff2
64017fec:	mov    eax,DWORD PTR [ebp-0x30]
64017fef:	mov    DWORD PTR [edi+0x64],eax
64017ff2:	xor    eax,eax
64017ff4:	call   0x6401073d
64017ff9:	ret    
64017ffa:	int3   
64017ffb:	mov    eax,DWORD PTR [esp+0x4]
64017fff:	mov    ds:0x64029ed8,eax
64018004:	ret    
64018005:	mov    eax,DWORD PTR [esp+0x4]
64018009:	mov    ds:0x64029ee4,eax
6401800e:	ret    
6401800f:	mov    eax,DWORD PTR [esp+0x4]
64018013:	mov    ds:0x64029ee8,eax
64018018:	ret    
64018019:	push   DWORD PTR [esp+0x4]
6401801d:	call   DWORD PTR ds:0x6402101c
64018023:	xor    eax,eax
64018025:	inc    eax
64018026:	ret    0x8
64018029:	push   0x14
6401802b:	push   0x64025bb0
64018030:	call   0x640106f8
64018035:	xor    edi,edi
64018037:	mov    DWORD PTR [ebp-0x1c],edi
6401803a:	push   DWORD PTR ds:0x64029ee8
64018040:	call   0x6401124f
64018045:	pop    ecx
64018046:	mov    esi,eax
64018048:	cmp    esi,edi
6401804a:	jne    0x6401809f
6401804c:	lea    eax,[ebp-0x1c]
6401804f:	push   eax
64018050:	call   0x6401284f
64018055:	pop    ecx
64018056:	cmp    eax,edi
64018058:	je     0x64018067
6401805a:	push   edi
6401805b:	push   edi
6401805c:	push   edi
6401805d:	push   edi
6401805e:	push   edi
6401805f:	call   0x6400ed8a
64018064:	add    esp,0x14
64018067:	cmp    DWORD PTR [ebp-0x1c],0x1
6401806b:	je     0x6401808e
6401806d:	push   0x64022a58
64018072:	call   DWORD PTR ds:0x64021118
64018078:	cmp    eax,edi
6401807a:	je     0x6401808e
6401807c:	push   0x64022a30
64018081:	push   eax
64018082:	call   DWORD PTR ds:0x64021014
64018088:	mov    esi,eax
6401808a:	cmp    esi,edi
6401808c:	jne    0x64018093
6401808e:	mov    esi,0x64018019
64018093:	push   esi
64018094:	call   0x640111d8
64018099:	pop    ecx
6401809a:	mov    ds:0x64029ee8,eax
6401809f:	mov    DWORD PTR [ebp-0x4],edi
640180a2:	push   DWORD PTR [ebp+0xc]
640180a5:	push   DWORD PTR [ebp+0x8]
640180a8:	call   esi
640180aa:	mov    DWORD PTR [ebp-0x20],eax
640180ad:	jmp    0x640180de
640180af:	mov    eax,DWORD PTR [ebp-0x14]
640180b2:	mov    eax,DWORD PTR [eax]
640180b4:	mov    eax,DWORD PTR [eax]
640180b6:	mov    DWORD PTR [ebp-0x24],eax
640180b9:	xor    ecx,ecx
640180bb:	cmp    eax,0xc0000017
640180c0:	sete   cl
640180c3:	mov    eax,ecx
640180c5:	ret    
640180c6:	mov    esp,DWORD PTR [ebp-0x18]
640180c9:	cmp    DWORD PTR [ebp-0x24],0xc0000017
640180d0:	jne    0x640180da
640180d2:	push   0x8
640180d4:	call   DWORD PTR ds:0x64021010
640180da:	and    DWORD PTR [ebp-0x20],0x0
640180de:	mov    DWORD PTR [ebp-0x4],0xfffffffe
640180e5:	mov    eax,DWORD PTR [ebp-0x20]
640180e8:	call   0x6401073d
640180ed:	ret    
640180ee:	push   ebp
640180ef:	mov    ebp,esp
640180f1:	push   ecx
640180f2:	push   ecx
640180f3:	mov    eax,ds:0x64028038
640180f8:	xor    eax,ebp
640180fa:	mov    DWORD PTR [ebp-0x4],eax
640180fd:	mov    eax,ds:0x64029eec
64018102:	push   ebx
64018103:	push   esi
64018104:	xor    ebx,ebx
64018106:	cmp    eax,ebx
64018108:	push   edi
64018109:	mov    edi,ecx
6401810b:	jne    0x64018147
6401810d:	lea    eax,[ebp-0x8]
64018110:	push   eax
64018111:	xor    esi,esi
64018113:	inc    esi
64018114:	push   esi
64018115:	push   0x64021cdc
6401811a:	push   esi
6401811b:	call   DWORD PTR ds:0x640210a8
64018121:	test   eax,eax
64018123:	je     0x6401812d
64018125:	mov    DWORD PTR ds:0x64029eec,esi
6401812b:	jmp    0x64018161
6401812d:	call   DWORD PTR ds:0x64021044
64018133:	cmp    eax,0x78
64018136:	jne    0x64018142
64018138:	push   0x2
6401813a:	pop    eax
6401813b:	mov    ds:0x64029eec,eax
64018140:	jmp    0x64018147
64018142:	mov    eax,ds:0x64029eec
64018147:	cmp    eax,0x2
6401814a:	je     0x6401821f
64018150:	cmp    eax,ebx
64018152:	je     0x6401821f
64018158:	cmp    eax,0x1
6401815b:	jne    0x64018249
64018161:	cmp    DWORD PTR [ebp+0x18],ebx
64018164:	mov    DWORD PTR [ebp-0x8],ebx
64018167:	jne    0x64018171
64018169:	mov    eax,DWORD PTR [edi]
6401816b:	mov    eax,DWORD PTR [eax+0x4]
6401816e:	mov    DWORD PTR [ebp+0x18],eax
64018171:	mov    esi,DWORD PTR ds:0x6402103c
64018177:	xor    eax,eax
64018179:	cmp    DWORD PTR [ebp+0x20],ebx
6401817c:	push   ebx
6401817d:	push   ebx
6401817e:	push   DWORD PTR [ebp+0x10]
64018181:	setne  al
64018184:	push   DWORD PTR [ebp+0xc]
64018187:	lea    eax,[eax*8+0x1]
6401818e:	push   eax
6401818f:	push   DWORD PTR [ebp+0x18]
64018192:	call   esi
64018194:	mov    edi,eax
64018196:	cmp    edi,ebx
64018198:	je     0x64018249
6401819e:	jle    0x640181dc
640181a0:	cmp    edi,0x7ffffff0
640181a6:	ja     0x640181dc
640181a8:	lea    eax,[edi+edi*1+0x8]
640181ac:	cmp    eax,0x400
640181b1:	ja     0x640181c6
640181b3:	call   0x6400fad0
640181b8:	mov    eax,esp
640181ba:	cmp    eax,ebx
640181bc:	je     0x640181da
640181be:	mov    DWORD PTR [eax],0xcccc
640181c4:	jmp    0x640181d7
640181c6:	push   eax
640181c7:	call   0x640102c3
640181cc:	cmp    eax,ebx
640181ce:	pop    ecx
640181cf:	je     0x640181da
640181d1:	mov    DWORD PTR [eax],0xdddd
640181d7:	add    eax,0x8
640181da:	mov    ebx,eax
640181dc:	test   ebx,ebx
640181de:	je     0x64018249
640181e0:	lea    eax,[edi+edi*1]
640181e3:	push   eax
640181e4:	push   0x0
640181e6:	push   ebx
640181e7:	call   0x6400fa50
640181ec:	add    esp,0xc
640181ef:	push   edi
640181f0:	push   ebx
640181f1:	push   DWORD PTR [ebp+0x10]
640181f4:	push   DWORD PTR [ebp+0xc]
640181f7:	push   0x1
640181f9:	push   DWORD PTR [ebp+0x18]
640181fc:	call   esi
640181fe:	test   eax,eax
64018200:	je     0x64018213
64018202:	push   DWORD PTR [ebp+0x14]
64018205:	push   eax
64018206:	push   ebx
64018207:	push   DWORD PTR [ebp+0x8]
6401820a:	call   DWORD PTR ds:0x640210a8
64018210:	mov    DWORD PTR [ebp-0x8],eax
64018213:	push   ebx
64018214:	call   0x6400f85e
64018219:	mov    eax,DWORD PTR [ebp-0x8]
6401821c:	pop    ecx
6401821d:	jmp    0x64018294
6401821f:	xor    esi,esi
64018221:	cmp    DWORD PTR [ebp+0x1c],ebx
64018224:	jne    0x6401822e
64018226:	mov    eax,DWORD PTR [edi]
64018228:	mov    eax,DWORD PTR [eax+0x14]
6401822b:	mov    DWORD PTR [ebp+0x1c],eax
6401822e:	cmp    DWORD PTR [ebp+0x18],ebx
64018231:	jne    0x6401823b
64018233:	mov    eax,DWORD PTR [edi]
64018235:	mov    eax,DWORD PTR [eax+0x4]
64018238:	mov    DWORD PTR [ebp+0x18],eax
6401823b:	push   DWORD PTR [ebp+0x1c]
6401823e:	call   0x64019ec8
64018243:	cmp    eax,0xffffffff
64018246:	pop    ecx
64018247:	jne    0x6401824d
64018249:	xor    eax,eax
6401824b:	jmp    0x64018294
6401824d:	cmp    eax,DWORD PTR [ebp+0x18]
64018250:	je     0x64018270
64018252:	push   ebx
64018253:	push   ebx
64018254:	lea    ecx,[ebp+0x10]
64018257:	push   ecx
64018258:	push   DWORD PTR [ebp+0xc]
6401825b:	push   eax
6401825c:	push   DWORD PTR [ebp+0x18]
6401825f:	call   0x64019f0f
64018264:	mov    esi,eax
64018266:	add    esp,0x18
64018269:	cmp    esi,ebx
6401826b:	je     0x64018249
6401826d:	mov    DWORD PTR [ebp+0xc],esi
64018270:	push   DWORD PTR [ebp+0x14]
64018273:	push   DWORD PTR [ebp+0x10]
64018276:	push   DWORD PTR [ebp+0xc]
64018279:	push   DWORD PTR [ebp+0x8]
6401827c:	push   DWORD PTR [ebp+0x1c]
6401827f:	call   DWORD PTR ds:0x640210ac
64018285:	cmp    esi,ebx
64018287:	mov    edi,eax
64018289:	je     0x64018292
6401828b:	push   esi
6401828c:	call   0x640101e6
64018291:	pop    ecx
64018292:	mov    eax,edi
64018294:	lea    esp,[ebp-0x14]
64018297:	pop    edi
64018298:	pop    esi
64018299:	pop    ebx
6401829a:	mov    ecx,DWORD PTR [ebp-0x4]
6401829d:	xor    ecx,ebp
6401829f:	call   0x6400f34e
640182a4:	leave  
640182a5:	ret    
640182a6:	push   ebp
640182a7:	mov    ebp,esp
640182a9:	sub    esp,0x10
640182ac:	push   DWORD PTR [ebp+0x8]
640182af:	lea    ecx,[ebp-0x10]
640182b2:	call   0x6400f4f1
640182b7:	push   DWORD PTR [ebp+0x24]
640182ba:	lea    ecx,[ebp-0x10]
640182bd:	push   DWORD PTR [ebp+0x20]
640182c0:	push   DWORD PTR [ebp+0x1c]
640182c3:	push   DWORD PTR [ebp+0x18]
640182c6:	push   DWORD PTR [ebp+0x14]
640182c9:	push   DWORD PTR [ebp+0x10]
640182cc:	push   DWORD PTR [ebp+0xc]
640182cf:	call   0x640180ee
640182d4:	add    esp,0x1c
640182d7:	cmp    BYTE PTR [ebp-0x4],0x0
640182db:	je     0x640182e4
640182dd:	mov    ecx,DWORD PTR [ebp-0x8]
640182e0:	and    DWORD PTR [ecx+0x70],0xfffffffd
640182e4:	leave  
640182e5:	ret    
640182e6:	push   esi
640182e7:	mov    esi,DWORD PTR [esp+0x8]
640182eb:	test   esi,esi
640182ed:	je     0x64018474
640182f3:	push   DWORD PTR [esi+0x4]
640182f6:	call   0x640101e6
640182fb:	push   DWORD PTR [esi+0x8]
640182fe:	call   0x640101e6
64018303:	push   DWORD PTR [esi+0xc]
64018306:	call   0x640101e6
6401830b:	push   DWORD PTR [esi+0x10]
6401830e:	call   0x640101e6
64018313:	push   DWORD PTR [esi+0x14]
64018316:	call   0x640101e6
6401831b:	push   DWORD PTR [esi+0x18]
6401831e:	call   0x640101e6
64018323:	push   DWORD PTR [esi]
64018325:	call   0x640101e6
6401832a:	push   DWORD PTR [esi+0x20]
6401832d:	call   0x640101e6
64018332:	push   DWORD PTR [esi+0x24]
64018335:	call   0x640101e6
6401833a:	push   DWORD PTR [esi+0x28]
6401833d:	call   0x640101e6
64018342:	push   DWORD PTR [esi+0x2c]
64018345:	call   0x640101e6
6401834a:	push   DWORD PTR [esi+0x30]
6401834d:	call   0x640101e6
64018352:	push   DWORD PTR [esi+0x34]
64018355:	call   0x640101e6
6401835a:	push   DWORD PTR [esi+0x1c]
6401835d:	call   0x640101e6
64018362:	push   DWORD PTR [esi+0x38]
64018365:	call   0x640101e6
6401836a:	push   DWORD PTR [esi+0x3c]
6401836d:	call   0x640101e6
64018372:	add    esp,0x40
64018375:	push   DWORD PTR [esi+0x40]
64018378:	call   0x640101e6
6401837d:	push   DWORD PTR [esi+0x44]
64018380:	call   0x640101e6
64018385:	push   DWORD PTR [esi+0x48]
64018388:	call   0x640101e6
6401838d:	push   DWORD PTR [esi+0x4c]
64018390:	call   0x640101e6
64018395:	push   DWORD PTR [esi+0x50]
64018398:	call   0x640101e6
6401839d:	push   DWORD PTR [esi+0x54]
640183a0:	call   0x640101e6
640183a5:	push   DWORD PTR [esi+0x58]
640183a8:	call   0x640101e6
640183ad:	push   DWORD PTR [esi+0x5c]
640183b0:	call   0x640101e6
640183b5:	push   DWORD PTR [esi+0x60]
640183b8:	call   0x640101e6
640183bd:	push   DWORD PTR [esi+0x64]
640183c0:	call   0x640101e6
640183c5:	push   DWORD PTR [esi+0x68]
640183c8:	call   0x640101e6
640183cd:	push   DWORD PTR [esi+0x6c]
640183d0:	call   0x640101e6
640183d5:	push   DWORD PTR [esi+0x70]
640183d8:	call   0x640101e6
640183dd:	push   DWORD PTR [esi+0x74]
640183e0:	call   0x640101e6
640183e5:	push   DWORD PTR [esi+0x78]
640183e8:	call   0x640101e6
640183ed:	push   DWORD PTR [esi+0x7c]
640183f0:	call   0x640101e6
640183f5:	add    esp,0x40
640183f8:	push   DWORD PTR [esi+0x80]
640183fe:	call   0x640101e6
64018403:	push   DWORD PTR [esi+0x84]
64018409:	call   0x640101e6
6401840e:	push   DWORD PTR [esi+0x88]
64018414:	call   0x640101e6
64018419:	push   DWORD PTR [esi+0x8c]
6401841f:	call   0x640101e6
64018424:	push   DWORD PTR [esi+0x90]
6401842a:	call   0x640101e6
6401842f:	push   DWORD PTR [esi+0x94]
64018435:	call   0x640101e6
6401843a:	push   DWORD PTR [esi+0x98]
64018440:	call   0x640101e6
64018445:	push   DWORD PTR [esi+0x9c]
6401844b:	call   0x640101e6
64018450:	push   DWORD PTR [esi+0xa0]
64018456:	call   0x640101e6
6401845b:	push   DWORD PTR [esi+0xa4]
64018461:	call   0x640101e6
64018466:	push   DWORD PTR [esi+0xa8]
6401846c:	call   0x640101e6
64018471:	add    esp,0x2c
64018474:	pop    esi
64018475:	ret    
64018476:	push   esi
64018477:	mov    esi,DWORD PTR [esp+0x8]
6401847b:	test   esi,esi
6401847d:	je     0x640184b4
6401847f:	mov    eax,DWORD PTR [esi]
64018481:	cmp    eax,DWORD PTR ds:0x64028bd0
64018487:	je     0x64018490
64018489:	push   eax
6401848a:	call   0x640101e6
6401848f:	pop    ecx
64018490:	mov    eax,DWORD PTR [esi+0x4]
64018493:	cmp    eax,DWORD PTR ds:0x64028bd4
64018499:	je     0x640184a2
6401849b:	push   eax
6401849c:	call   0x640101e6
640184a1:	pop    ecx
640184a2:	mov    esi,DWORD PTR [esi+0x8]
640184a5:	cmp    esi,DWORD PTR ds:0x64028bd8
640184ab:	je     0x640184b4
640184ad:	push   esi
640184ae:	call   0x640101e6
640184b3:	pop    ecx
640184b4:	pop    esi
640184b5:	ret    
640184b6:	push   esi
640184b7:	mov    esi,DWORD PTR [esp+0x8]
640184bb:	test   esi,esi
640184bd:	je     0x6401853d
640184bf:	mov    eax,DWORD PTR [esi+0xc]
640184c2:	cmp    eax,DWORD PTR ds:0x64028bdc
640184c8:	je     0x640184d1
640184ca:	push   eax
640184cb:	call   0x640101e6
640184d0:	pop    ecx
640184d1:	mov    eax,DWORD PTR [esi+0x10]
640184d4:	cmp    eax,DWORD PTR ds:0x64028be0
640184da:	je     0x640184e3
640184dc:	push   eax
640184dd:	call   0x640101e6
640184e2:	pop    ecx
640184e3:	mov    eax,DWORD PTR [esi+0x14]
640184e6:	cmp    eax,DWORD PTR ds:0x64028be4
640184ec:	je     0x640184f5
640184ee:	push   eax
640184ef:	call   0x640101e6
640184f4:	pop    ecx
640184f5:	mov    eax,DWORD PTR [esi+0x18]
640184f8:	cmp    eax,DWORD PTR ds:0x64028be8
640184fe:	je     0x64018507
64018500:	push   eax
64018501:	call   0x640101e6
64018506:	pop    ecx
64018507:	mov    eax,DWORD PTR [esi+0x1c]
6401850a:	cmp    eax,DWORD PTR ds:0x64028bec
64018510:	je     0x64018519
64018512:	push   eax
64018513:	call   0x640101e6
64018518:	pop    ecx
64018519:	mov    eax,DWORD PTR [esi+0x20]
6401851c:	cmp    eax,DWORD PTR ds:0x64028bf0
64018522:	je     0x6401852b
64018524:	push   eax
64018525:	call   0x640101e6
6401852a:	pop    ecx
6401852b:	mov    esi,DWORD PTR [esi+0x24]
6401852e:	cmp    esi,DWORD PTR ds:0x64028bf4
64018534:	je     0x6401853d
64018536:	push   esi
64018537:	call   0x640101e6
6401853c:	pop    ecx
6401853d:	pop    esi
6401853e:	ret    
6401853f:	mov    eax,DWORD PTR [esp+0x4]
64018543:	push   ebx
64018544:	xor    ebx,ebx
64018546:	cmp    eax,ebx
64018548:	push   esi
64018549:	push   edi
6401854a:	je     0x64018554
6401854c:	mov    edi,DWORD PTR [esp+0x14]
64018550:	cmp    edi,ebx
64018552:	ja     0x6401856f
64018554:	call   0x64011120
64018559:	push   0x16
6401855b:	pop    esi
6401855c:	mov    DWORD PTR [eax],esi
6401855e:	push   ebx
6401855f:	push   ebx
64018560:	push   ebx
64018561:	push   ebx
64018562:	push   ebx
64018563:	call   0x6400ee86
64018568:	add    esp,0x14
6401856b:	mov    eax,esi
6401856d:	jmp    0x640185ac
6401856f:	mov    esi,DWORD PTR [esp+0x18]
64018573:	cmp    esi,ebx
64018575:	jne    0x6401857b
64018577:	mov    BYTE PTR [eax],bl
64018579:	jmp    0x64018554
6401857b:	mov    edx,eax
6401857d:	cmp    BYTE PTR [edx],bl
6401857f:	je     0x64018585
64018581:	inc    edx
64018582:	dec    edi
64018583:	jne    0x6401857d
64018585:	cmp    edi,ebx
64018587:	je     0x64018577
64018589:	mov    cl,BYTE PTR [esi]
6401858b:	mov    BYTE PTR [edx],cl
6401858d:	inc    edx
6401858e:	inc    esi
6401858f:	cmp    cl,bl
64018591:	je     0x64018596
64018593:	dec    edi
64018594:	jne    0x64018589
64018596:	cmp    edi,ebx
64018598:	jne    0x640185aa
6401859a:	mov    BYTE PTR [eax],bl
6401859c:	call   0x64011120
640185a1:	push   0x22
640185a3:	pop    ecx
640185a4:	mov    DWORD PTR [eax],ecx
640185a6:	mov    esi,ecx
640185a8:	jmp    0x6401855e
640185aa:	xor    eax,eax
640185ac:	pop    edi
640185ad:	pop    esi
640185ae:	pop    ebx
640185af:	ret    
640185b0:	push   ebp
640185b1:	mov    ebp,esp
640185b3:	push   esi
640185b4:	xor    eax,eax
640185b6:	push   eax
640185b7:	push   eax
640185b8:	push   eax
640185b9:	push   eax
640185ba:	push   eax
640185bb:	push   eax
640185bc:	push   eax
640185bd:	push   eax
640185be:	mov    edx,DWORD PTR [ebp+0xc]
640185c1:	lea    ecx,[ecx+0x0]
640185c4:	mov    al,BYTE PTR [edx]
640185c6:	or     al,al
640185c8:	je     0x640185d3
640185ca:	add    edx,0x1
640185cd:	bts    DWORD PTR [esp],eax
640185d1:	jmp    0x640185c4
640185d3:	mov    esi,DWORD PTR [ebp+0x8]
640185d6:	or     ecx,0xffffffff
640185d9:	lea    ecx,[ecx+0x0]
640185dc:	add    ecx,0x1
640185df:	mov    al,BYTE PTR [esi]
640185e1:	or     al,al
640185e3:	je     0x640185ee
640185e5:	add    esi,0x1
640185e8:	bt     DWORD PTR [esp],eax
640185ec:	jae    0x640185dc
640185ee:	mov    eax,ecx
640185f0:	add    esp,0x20
640185f3:	pop    esi
640185f4:	leave  
640185f5:	ret    
640185f6:	push   ebp
640185f7:	mov    ebp,esp
640185f9:	push   ebx
640185fa:	push   esi
640185fb:	mov    esi,DWORD PTR [ebp+0x8]
640185fe:	xor    ebx,ebx
64018600:	cmp    DWORD PTR [ebp+0x14],ebx
64018603:	push   edi
64018604:	jne    0x64018616
64018606:	cmp    esi,ebx
64018608:	jne    0x6401861a
6401860a:	cmp    DWORD PTR [ebp+0xc],ebx
6401860d:	jne    0x64018621
6401860f:	xor    eax,eax
64018611:	pop    edi
64018612:	pop    esi
64018613:	pop    ebx
64018614:	pop    ebp
64018615:	ret    
64018616:	cmp    esi,ebx
64018618:	je     0x64018621
6401861a:	mov    edi,DWORD PTR [ebp+0xc]
6401861d:	cmp    edi,ebx
6401861f:	ja     0x6401863c
64018621:	call   0x64011120
64018626:	push   0x16
64018628:	pop    esi
64018629:	mov    DWORD PTR [eax],esi
6401862b:	push   ebx
6401862c:	push   ebx
6401862d:	push   ebx
6401862e:	push   ebx
6401862f:	push   ebx
64018630:	call   0x6400ee86
64018635:	add    esp,0x14
64018638:	mov    eax,esi
6401863a:	jmp    0x64018611
6401863c:	cmp    DWORD PTR [ebp+0x14],ebx
6401863f:	jne    0x64018645
64018641:	mov    BYTE PTR [esi],bl
64018643:	jmp    0x6401860f
64018645:	mov    edx,DWORD PTR [ebp+0x10]
64018648:	cmp    edx,ebx
6401864a:	jne    0x64018650
6401864c:	mov    BYTE PTR [esi],bl
6401864e:	jmp    0x64018621
64018650:	cmp    DWORD PTR [ebp+0x14],0xffffffff
64018654:	mov    eax,esi
64018656:	jne    0x64018667
64018658:	mov    cl,BYTE PTR [edx]
6401865a:	mov    BYTE PTR [eax],cl
6401865c:	inc    eax
6401865d:	inc    edx
6401865e:	cmp    cl,bl
64018660:	je     0x64018680
64018662:	dec    edi
64018663:	jne    0x64018658
64018665:	jmp    0x64018680
64018667:	mov    cl,BYTE PTR [edx]
64018669:	mov    BYTE PTR [eax],cl
6401866b:	inc    eax
6401866c:	inc    edx
6401866d:	cmp    cl,bl
6401866f:	je     0x64018679
64018671:	dec    edi
64018672:	je     0x64018679
64018674:	dec    DWORD PTR [ebp+0x14]
64018677:	jne    0x64018667
64018679:	cmp    DWORD PTR [ebp+0x14],ebx
6401867c:	jne    0x64018680
6401867e:	mov    BYTE PTR [eax],bl
64018680:	cmp    edi,ebx
64018682:	jne    0x6401860f
64018684:	cmp    DWORD PTR [ebp+0x14],0xffffffff
64018688:	jne    0x64018699
6401868a:	mov    eax,DWORD PTR [ebp+0xc]
6401868d:	push   0x50
6401868f:	mov    BYTE PTR [esi+eax*1-0x1],bl
64018693:	pop    eax
64018694:	jmp    0x64018611
64018699:	mov    BYTE PTR [esi],bl
6401869b:	call   0x64011120
640186a0:	push   0x22
640186a2:	pop    ecx
640186a3:	mov    DWORD PTR [eax],ecx
640186a5:	mov    esi,ecx
640186a7:	jmp    0x6401862b
640186a9:	int3   
640186aa:	int3   
640186ab:	int3   
640186ac:	int3   
640186ad:	int3   
640186ae:	int3   
640186af:	int3   
640186b0:	push   ebp
640186b1:	mov    ebp,esp
640186b3:	push   esi
640186b4:	xor    eax,eax
640186b6:	push   eax
640186b7:	push   eax
640186b8:	push   eax
640186b9:	push   eax
640186ba:	push   eax
640186bb:	push   eax
640186bc:	push   eax
640186bd:	push   eax
640186be:	mov    edx,DWORD PTR [ebp+0xc]
640186c1:	lea    ecx,[ecx+0x0]
640186c4:	mov    al,BYTE PTR [edx]
640186c6:	or     al,al
640186c8:	je     0x640186d3
640186ca:	add    edx,0x1
640186cd:	bts    DWORD PTR [esp],eax
640186d1:	jmp    0x640186c4
640186d3:	mov    esi,DWORD PTR [ebp+0x8]
640186d6:	mov    edi,edi
640186d8:	mov    al,BYTE PTR [esi]
640186da:	or     al,al
640186dc:	je     0x640186ea
640186de:	add    esi,0x1
640186e1:	bt     DWORD PTR [esp],eax
640186e5:	jae    0x640186d8
640186e7:	lea    eax,[esi-0x1]
640186ea:	add    esp,0x20
640186ed:	pop    esi
640186ee:	leave  
640186ef:	ret    
640186f0:	push   ebp
640186f1:	mov    ebp,esp
640186f3:	push   ecx
640186f4:	push   ecx
640186f5:	mov    eax,DWORD PTR [ebp+0xc]
640186f8:	push   esi
640186f9:	mov    esi,DWORD PTR [ebp+0x8]
640186fc:	mov    DWORD PTR [ebp-0x8],eax
640186ff:	mov    eax,DWORD PTR [ebp+0x10]
64018702:	push   edi
64018703:	push   esi
64018704:	mov    DWORD PTR [ebp-0x4],eax
64018707:	call   0x6401a62f
6401870c:	or     edi,0xffffffff
6401870f:	cmp    eax,edi
64018711:	pop    ecx
64018712:	jne    0x64018725
64018714:	call   0x64011120
64018719:	mov    DWORD PTR [eax],0x9
6401871f:	mov    eax,edi
64018721:	mov    edx,edi
64018723:	jmp    0x6401876f
64018725:	push   DWORD PTR [ebp+0x14]
64018728:	lea    ecx,[ebp-0x4]
6401872b:	push   ecx
6401872c:	push   DWORD PTR [ebp-0x8]
6401872f:	push   eax
64018730:	call   DWORD PTR ds:0x640210c8
64018736:	cmp    eax,edi
64018738:	mov    DWORD PTR [ebp-0x8],eax
6401873b:	jne    0x64018750
6401873d:	call   DWORD PTR ds:0x64021044
64018743:	test   eax,eax
64018745:	je     0x64018750
64018747:	push   eax
64018748:	call   0x64011146
6401874d:	pop    ecx
6401874e:	jmp    0x6401871f
64018750:	mov    eax,esi
64018752:	sar    eax,0x5
64018755:	mov    eax,DWORD PTR [eax*4+0x6402d480]
6401875c:	and    esi,0x1f
6401875f:	shl    esi,0x6
64018762:	lea    eax,[eax+esi*1+0x4]
64018766:	and    BYTE PTR [eax],0xfd
64018769:	mov    eax,DWORD PTR [ebp-0x8]
6401876c:	mov    edx,DWORD PTR [ebp-0x4]
6401876f:	pop    edi
64018770:	pop    esi
64018771:	leave  
64018772:	ret    
64018773:	push   0x14
64018775:	push   0x64025bd0
6401877a:	call   0x640106f8
6401877f:	or     esi,0xffffffff
64018782:	mov    DWORD PTR [ebp-0x24],esi
64018785:	mov    DWORD PTR [ebp-0x20],esi
64018788:	mov    eax,DWORD PTR [ebp+0x8]
6401878b:	cmp    eax,0xfffffffe
6401878e:	jne    0x640187ac
64018790:	call   0x64011133
64018795:	and    DWORD PTR [eax],0x0
64018798:	call   0x64011120
6401879d:	mov    DWORD PTR [eax],0x9
640187a3:	mov    eax,esi
640187a5:	mov    edx,esi
640187a7:	jmp    0x6401887c
640187ac:	xor    edi,edi
640187ae:	cmp    eax,edi
640187b0:	jl     0x640187ba
640187b2:	cmp    eax,DWORD PTR ds:0x6402d460
640187b8:	jb     0x640187db
640187ba:	call   0x64011133
640187bf:	mov    DWORD PTR [eax],edi
640187c1:	call   0x64011120
640187c6:	mov    DWORD PTR [eax],0x9
640187cc:	push   edi
640187cd:	push   edi
640187ce:	push   edi
640187cf:	push   edi
640187d0:	push   edi
640187d1:	call   0x6400ee86
640187d6:	add    esp,0x14
640187d9:	jmp    0x640187a3
640187db:	mov    ecx,eax
640187dd:	sar    ecx,0x5
640187e0:	lea    ebx,[ecx*4+0x6402d480]
640187e7:	mov    esi,eax
640187e9:	and    esi,0x1f
640187ec:	shl    esi,0x6
640187ef:	mov    ecx,DWORD PTR [ebx]
640187f1:	movzx  ecx,BYTE PTR [ecx+esi*1+0x4]
640187f6:	and    ecx,0x1
640187f9:	jne    0x64018821
640187fb:	call   0x64011133
64018800:	mov    DWORD PTR [eax],edi
64018802:	call   0x64011120
64018807:	mov    DWORD PTR [eax],0x9
6401880d:	push   edi
6401880e:	push   edi
6401880f:	push   edi
64018810:	push   edi
64018811:	push   edi
64018812:	call   0x6400ee86
64018817:	add    esp,0x14
6401881a:	or     edx,0xffffffff
6401881d:	mov    eax,edx
6401881f:	jmp    0x6401887c
64018821:	push   eax
64018822:	call   0x6401a6a0
64018827:	pop    ecx
64018828:	mov    DWORD PTR [ebp-0x4],edi
6401882b:	mov    eax,DWORD PTR [ebx]
6401882d:	test   BYTE PTR [eax+esi*1+0x4],0x1
64018832:	je     0x64018850
64018834:	push   DWORD PTR [ebp+0x14]
64018837:	push   DWORD PTR [ebp+0x10]
6401883a:	push   DWORD PTR [ebp+0xc]
6401883d:	push   DWORD PTR [ebp+0x8]
64018840:	call   0x640186f0
64018845:	add    esp,0x10
64018848:	mov    DWORD PTR [ebp-0x24],eax
6401884b:	mov    DWORD PTR [ebp-0x20],edx
6401884e:	jmp    0x6401886a
64018850:	call   0x64011120
64018855:	mov    DWORD PTR [eax],0x9
6401885b:	call   0x64011133
64018860:	mov    DWORD PTR [eax],edi
64018862:	or     DWORD PTR [ebp-0x24],0xffffffff
64018866:	or     DWORD PTR [ebp-0x20],0xffffffff
6401886a:	mov    DWORD PTR [ebp-0x4],0xfffffffe
64018871:	call   0x64018882
64018876:	mov    eax,DWORD PTR [ebp-0x24]
64018879:	mov    edx,DWORD PTR [ebp-0x20]
6401887c:	call   0x6401073d
64018881:	ret    
64018882:	push   DWORD PTR [ebp+0x8]
64018885:	call   0x6401a740
6401888a:	pop    ecx
6401888b:	ret    
6401888c:	push   ebp
6401888d:	lea    ebp,[esp-0x514]
64018894:	sub    esp,0x590
6401889a:	mov    eax,ds:0x64028038
6401889f:	xor    eax,ebp
640188a1:	mov    DWORD PTR [ebp+0x510],eax
640188a7:	mov    eax,DWORD PTR [ebp+0x520]
640188ad:	push   esi
640188ae:	xor    esi,esi
640188b0:	cmp    DWORD PTR [ebp+0x524],esi
640188b6:	mov    DWORD PTR [ebp-0x64],eax
640188b9:	mov    DWORD PTR [ebp-0x60],esi
640188bc:	mov    DWORD PTR [ebp-0x68],esi
640188bf:	jne    0x640188c8
640188c1:	xor    eax,eax
640188c3:	jmp    0x64018e98
640188c8:	cmp    eax,esi
640188ca:	jne    0x640188f3
640188cc:	call   0x64011133
640188d1:	mov    DWORD PTR [eax],esi
640188d3:	call   0x64011120
640188d8:	push   esi
640188d9:	push   esi
640188da:	push   esi
640188db:	push   esi
640188dc:	push   esi
640188dd:	mov    DWORD PTR [eax],0x16
640188e3:	call   0x6400ee86
640188e8:	add    esp,0x14
640188eb:	or     eax,0xffffffff
640188ee:	jmp    0x64018e98
640188f3:	push   ebx
640188f4:	push   edi
640188f5:	mov    edi,DWORD PTR [ebp+0x51c]
640188fb:	mov    eax,edi
640188fd:	sar    eax,0x5
64018900:	lea    esi,[eax*4+0x6402d480]
64018907:	mov    eax,DWORD PTR [esi]
64018909:	and    edi,0x1f
6401890c:	shl    edi,0x6
6401890f:	add    eax,edi
64018911:	mov    bl,BYTE PTR [eax+0x24]
64018914:	add    bl,bl
64018916:	sar    bl,1
64018918:	cmp    bl,0x2
6401891b:	mov    DWORD PTR [ebp-0x70],esi
6401891e:	mov    BYTE PTR [ebp-0x71],bl
64018921:	je     0x64018928
64018923:	cmp    bl,0x1
64018926:	jne    0x6401895b
64018928:	mov    ecx,DWORD PTR [ebp+0x524]
6401892e:	not    ecx
64018930:	test   cl,0x1
64018933:	jne    0x6401895b
64018935:	call   0x64011133
6401893a:	xor    esi,esi
6401893c:	mov    DWORD PTR [eax],esi
6401893e:	call   0x64011120
64018943:	push   esi
64018944:	push   esi
64018945:	push   esi
64018946:	push   esi
64018947:	push   esi
64018948:	mov    DWORD PTR [eax],0x16
6401894e:	call   0x6400ee86
64018953:	add    esp,0x14
64018956:	jmp    0x64018e8b
6401895b:	test   BYTE PTR [eax+0x4],0x20
6401895f:	je     0x64018975
64018961:	push   0x2
64018963:	push   0x0
64018965:	push   0x0
64018967:	push   DWORD PTR [ebp+0x51c]
6401896d:	call   0x640186f0
64018972:	add    esp,0x10
64018975:	push   DWORD PTR [ebp+0x51c]
6401897b:	call   0x64018fce
64018980:	test   eax,eax
64018982:	pop    ecx
64018983:	je     0x64018bc2
64018989:	mov    eax,DWORD PTR [esi]
6401898b:	test   BYTE PTR [edi+eax*1+0x4],0x80
64018990:	je     0x64018bc2
64018996:	call   0x6401146b
6401899b:	mov    eax,DWORD PTR [eax+0x6c]
6401899e:	xor    ecx,ecx
640189a0:	cmp    DWORD PTR [eax+0x14],ecx
640189a3:	lea    eax,[ebp-0x7c]
640189a6:	sete   cl
640189a9:	push   eax
640189aa:	mov    eax,DWORD PTR [esi]
640189ac:	push   DWORD PTR [edi+eax*1]
640189af:	mov    DWORD PTR [ebp-0x78],ecx
640189b2:	call   DWORD PTR ds:0x640210c0
640189b8:	test   eax,eax
640189ba:	je     0x64018bc2
640189c0:	xor    ecx,ecx
640189c2:	cmp    DWORD PTR [ebp-0x78],ecx
640189c5:	je     0x640189cf
640189c7:	test   bl,bl
640189c9:	je     0x64018bc4
640189cf:	call   DWORD PTR ds:0x640210c4
640189d5:	mov    ebx,DWORD PTR [ebp-0x64]
640189d8:	mov    DWORD PTR [ebp-0x7c],eax
640189db:	xor    eax,eax
640189dd:	cmp    DWORD PTR [ebp+0x524],eax
640189e3:	mov    DWORD PTR [ebp-0x5c],eax
640189e6:	jbe    0x64018e33
640189ec:	mov    DWORD PTR [ebp-0x54],eax
640189ef:	mov    al,BYTE PTR [ebp-0x71]
640189f2:	test   al,al
640189f4:	jne    0x64018b37
640189fa:	mov    cl,BYTE PTR [ebx]
640189fc:	mov    esi,DWORD PTR [ebp-0x70]
640189ff:	xor    eax,eax
64018a01:	cmp    cl,0xa
64018a04:	sete   al
64018a07:	mov    DWORD PTR [ebp-0x78],eax
64018a0a:	mov    eax,DWORD PTR [esi]
64018a0c:	add    eax,edi
64018a0e:	cmp    DWORD PTR [eax+0x38],0x0
64018a12:	je     0x64018a32
64018a14:	mov    dl,BYTE PTR [eax+0x34]
64018a17:	mov    BYTE PTR [ebp+0x508],dl
64018a1d:	mov    BYTE PTR [ebp+0x509],cl
64018a23:	and    DWORD PTR [eax+0x38],0x0
64018a27:	push   0x2
64018a29:	lea    eax,[ebp+0x508]
64018a2f:	push   eax
64018a30:	jmp    0x64018a77
64018a32:	movsx  eax,cl
64018a35:	push   eax
64018a36:	call   0x640167e6
64018a3b:	test   eax,eax
64018a3d:	pop    ecx
64018a3e:	je     0x64018a74
64018a40:	mov    ecx,DWORD PTR [ebp-0x64]
64018a43:	sub    ecx,ebx
64018a45:	add    ecx,DWORD PTR [ebp+0x524]
64018a4b:	xor    eax,eax
64018a4d:	inc    eax
64018a4e:	cmp    ecx,eax
64018a50:	jbe    0x64018bac
64018a56:	push   0x2
64018a58:	lea    eax,[ebp-0x58]
64018a5b:	push   ebx
64018a5c:	push   eax
64018a5d:	call   0x64019501
64018a62:	add    esp,0xc
64018a65:	cmp    eax,0xffffffff
64018a68:	je     0x64018e2d
64018a6e:	inc    ebx
64018a6f:	inc    DWORD PTR [ebp-0x54]
64018a72:	jmp    0x64018a8c
64018a74:	push   0x1
64018a76:	push   ebx
64018a77:	lea    eax,[ebp-0x58]
64018a7a:	push   eax
64018a7b:	call   0x64019501
64018a80:	add    esp,0xc
64018a83:	cmp    eax,0xffffffff
64018a86:	je     0x64018e2d
64018a8c:	xor    eax,eax
64018a8e:	push   eax
64018a8f:	push   eax
64018a90:	push   0x5
64018a92:	lea    ecx,[ebp+0x508]
64018a98:	push   ecx
64018a99:	push   0x1
64018a9b:	lea    ecx,[ebp-0x58]
64018a9e:	push   ecx
64018a9f:	push   eax
64018aa0:	push   DWORD PTR [ebp-0x7c]
64018aa3:	inc    ebx
64018aa4:	inc    DWORD PTR [ebp-0x54]
64018aa7:	call   DWORD PTR ds:0x64021024
64018aad:	mov    esi,eax
64018aaf:	test   esi,esi
64018ab1:	je     0x64018e2d
64018ab7:	push   0x0
64018ab9:	lea    eax,[ebp-0x5c]
64018abc:	push   eax
64018abd:	push   esi
64018abe:	lea    eax,[ebp+0x508]
64018ac4:	push   eax
64018ac5:	mov    eax,DWORD PTR [ebp-0x70]
64018ac8:	mov    eax,DWORD PTR [eax]
64018aca:	push   DWORD PTR [edi+eax*1]
64018acd:	call   DWORD PTR ds:0x64021078
64018ad3:	test   eax,eax
64018ad5:	je     0x64018e24
64018adb:	mov    eax,DWORD PTR [ebp-0x54]
64018ade:	mov    ecx,DWORD PTR [ebp-0x68]
64018ae1:	add    eax,ecx
64018ae3:	cmp    DWORD PTR [ebp-0x5c],esi
64018ae6:	mov    DWORD PTR [ebp-0x60],eax
64018ae9:	jl     0x64018e2d
64018aef:	cmp    DWORD PTR [ebp-0x78],0x0
64018af3:	je     0x64018b98
64018af9:	push   0x0
64018afb:	lea    eax,[ebp-0x5c]
64018afe:	push   eax
64018aff:	push   0x1
64018b01:	lea    eax,[ebp+0x508]
64018b07:	push   eax
64018b08:	mov    eax,DWORD PTR [ebp-0x70]
64018b0b:	mov    eax,DWORD PTR [eax]
64018b0d:	mov    BYTE PTR [ebp+0x508],0xd
64018b14:	push   DWORD PTR [edi+eax*1]
64018b17:	call   DWORD PTR ds:0x64021078
64018b1d:	test   eax,eax
64018b1f:	je     0x64018e24
64018b25:	cmp    DWORD PTR [ebp-0x5c],0x1
64018b29:	jl     0x64018e2d
64018b2f:	inc    DWORD PTR [ebp-0x68]
64018b32:	inc    DWORD PTR [ebp-0x60]
64018b35:	jmp    0x64018b98
64018b37:	cmp    al,0x1
64018b39:	je     0x64018b3f
64018b3b:	cmp    al,0x2
64018b3d:	jne    0x64018b57
64018b3f:	movzx  esi,WORD PTR [ebx]
64018b42:	xor    ecx,ecx
64018b44:	cmp    si,0xa
64018b48:	sete   cl
64018b4b:	inc    ebx
64018b4c:	inc    ebx
64018b4d:	add    DWORD PTR [ebp-0x54],0x2
64018b51:	mov    DWORD PTR [ebp-0x58],esi
64018b54:	mov    DWORD PTR [ebp-0x78],ecx
64018b57:	cmp    al,0x1
64018b59:	je     0x64018b5f
64018b5b:	cmp    al,0x2
64018b5d:	jne    0x64018b98
64018b5f:	push   DWORD PTR [ebp-0x58]
64018b62:	call   0x6401a762
64018b67:	cmp    ax,WORD PTR [ebp-0x58]
64018b6b:	pop    ecx
64018b6c:	jne    0x64018e24
64018b72:	inc    DWORD PTR [ebp-0x60]
64018b75:	cmp    DWORD PTR [ebp-0x78],0x0
64018b79:	je     0x64018b98
64018b7b:	push   0xd
64018b7d:	pop    eax
64018b7e:	push   eax
64018b7f:	mov    DWORD PTR [ebp-0x58],eax
64018b82:	call   0x6401a762
64018b87:	cmp    ax,WORD PTR [ebp-0x58]
64018b8b:	pop    ecx
64018b8c:	jne    0x64018e24
64018b92:	inc    DWORD PTR [ebp-0x60]
64018b95:	inc    DWORD PTR [ebp-0x68]
64018b98:	mov    eax,DWORD PTR [ebp+0x524]
64018b9e:	cmp    DWORD PTR [ebp-0x54],eax
64018ba1:	jb     0x640189ef
64018ba7:	jmp    0x64018e2d
64018bac:	mov    ecx,DWORD PTR [esi]
64018bae:	mov    dl,BYTE PTR [ebx]
64018bb0:	inc    DWORD PTR [ebp-0x60]
64018bb3:	mov    BYTE PTR [edi+ecx*1+0x34],dl
64018bb7:	mov    ecx,DWORD PTR [esi]
64018bb9:	mov    DWORD PTR [edi+ecx*1+0x38],eax
64018bbd:	jmp    0x64018e2d
64018bc2:	xor    ecx,ecx
64018bc4:	mov    eax,DWORD PTR [esi]
64018bc6:	add    eax,edi
64018bc8:	test   BYTE PTR [eax+0x4],0x80
64018bcc:	je     0x64018dfd
64018bd2:	test   bl,bl
64018bd4:	mov    eax,DWORD PTR [ebp-0x64]
64018bd7:	mov    DWORD PTR [ebp-0x58],ecx
64018bda:	jne    0x64018c76
64018be0:	cmp    DWORD PTR [ebp+0x524],ecx
64018be6:	mov    DWORD PTR [ebp-0x5c],eax
64018be9:	jbe    0x64018e63
64018bef:	jmp    0x64018bf4
64018bf1:	mov    esi,DWORD PTR [ebp-0x70]
64018bf4:	mov    ecx,DWORD PTR [ebp-0x5c]
64018bf7:	and    DWORD PTR [ebp-0x54],0x0
64018bfb:	sub    ecx,DWORD PTR [ebp-0x64]
64018bfe:	lea    eax,[ebp-0x50]
64018c01:	cmp    ecx,DWORD PTR [ebp+0x524]
64018c07:	jae    0x64018c30
64018c09:	mov    edx,DWORD PTR [ebp-0x5c]
64018c0c:	inc    DWORD PTR [ebp-0x5c]
64018c0f:	mov    dl,BYTE PTR [edx]
64018c11:	inc    ecx
64018c12:	cmp    dl,0xa
64018c15:	jne    0x64018c21
64018c17:	inc    DWORD PTR [ebp-0x68]
64018c1a:	mov    BYTE PTR [eax],0xd
64018c1d:	inc    eax
64018c1e:	inc    DWORD PTR [ebp-0x54]
64018c21:	mov    BYTE PTR [eax],dl
64018c23:	inc    eax
64018c24:	inc    DWORD PTR [ebp-0x54]
64018c27:	cmp    DWORD PTR [ebp-0x54],0x400
64018c2e:	jb     0x64018c01
64018c30:	mov    ebx,eax
64018c32:	lea    eax,[ebp-0x50]
64018c35:	sub    ebx,eax
64018c37:	push   0x0
64018c39:	lea    eax,[ebp-0x6c]
64018c3c:	push   eax
64018c3d:	push   ebx
64018c3e:	lea    eax,[ebp-0x50]
64018c41:	push   eax
64018c42:	mov    eax,DWORD PTR [esi]
64018c44:	push   DWORD PTR [edi+eax*1]
64018c47:	call   DWORD PTR ds:0x64021078
64018c4d:	test   eax,eax
64018c4f:	je     0x64018e24
64018c55:	mov    eax,DWORD PTR [ebp-0x6c]
64018c58:	add    DWORD PTR [ebp-0x60],eax
64018c5b:	cmp    eax,ebx
64018c5d:	jl     0x64018e2d
64018c63:	mov    eax,DWORD PTR [ebp-0x5c]
64018c66:	sub    eax,DWORD PTR [ebp-0x64]
64018c69:	cmp    eax,DWORD PTR [ebp+0x524]
64018c6f:	jb     0x64018bf1
64018c71:	jmp    0x64018e2d
64018c76:	cmp    bl,0x2
64018c79:	mov    DWORD PTR [ebp-0x54],eax
64018c7c:	jne    0x64018d25
64018c82:	cmp    DWORD PTR [ebp+0x524],ecx
64018c88:	jbe    0x64018e63
64018c8e:	jmp    0x64018c93
64018c90:	mov    esi,DWORD PTR [ebp-0x70]
64018c93:	mov    ecx,DWORD PTR [ebp-0x54]
64018c96:	and    DWORD PTR [ebp-0x5c],0x0
64018c9a:	sub    ecx,DWORD PTR [ebp-0x64]
64018c9d:	lea    eax,[ebp-0x50]
64018ca0:	cmp    ecx,DWORD PTR [ebp+0x524]
64018ca6:	jae    0x64018cdb
64018ca8:	mov    edx,DWORD PTR [ebp-0x54]
64018cab:	add    DWORD PTR [ebp-0x54],0x2
64018caf:	movzx  edx,WORD PTR [edx]
64018cb2:	inc    ecx
64018cb3:	inc    ecx
64018cb4:	cmp    dx,0xa
64018cb8:	jne    0x64018cc9
64018cba:	add    DWORD PTR [ebp-0x68],0x2
64018cbe:	mov    WORD PTR [eax],0xd
64018cc3:	inc    eax
64018cc4:	inc    eax
64018cc5:	add    DWORD PTR [ebp-0x5c],0x2
64018cc9:	add    DWORD PTR [ebp-0x5c],0x2
64018ccd:	mov    WORD PTR [eax],dx
64018cd0:	inc    eax
64018cd1:	inc    eax
64018cd2:	cmp    DWORD PTR [ebp-0x5c],0x3ff
64018cd9:	jb     0x64018ca0
64018cdb:	mov    ebx,eax
64018cdd:	lea    eax,[ebp-0x50]
64018ce0:	sub    ebx,eax
64018ce2:	push   0x0
64018ce4:	lea    eax,[ebp-0x6c]
64018ce7:	push   eax
64018ce8:	push   ebx
64018ce9:	lea    eax,[ebp-0x50]
64018cec:	push   eax
64018ced:	mov    eax,DWORD PTR [esi]
64018cef:	push   DWORD PTR [edi+eax*1]
64018cf2:	call   DWORD PTR ds:0x64021078
64018cf8:	test   eax,eax
64018cfa:	je     0x64018e24
64018d00:	mov    eax,DWORD PTR [ebp-0x6c]
64018d03:	add    DWORD PTR [ebp-0x60],eax
64018d06:	cmp    eax,ebx
64018d08:	jl     0x64018e2d
64018d0e:	mov    eax,DWORD PTR [ebp-0x54]
64018d11:	sub    eax,DWORD PTR [ebp-0x64]
64018d14:	cmp    eax,DWORD PTR [ebp+0x524]
64018d1a:	jb     0x64018c90
64018d20:	jmp    0x64018e2d
64018d25:	cmp    DWORD PTR [ebp+0x524],ecx
64018d2b:	jbe    0x64018e63
64018d31:	mov    ecx,DWORD PTR [ebp-0x54]
64018d34:	and    DWORD PTR [ebp-0x5c],0x0
64018d38:	sub    ecx,DWORD PTR [ebp-0x64]
64018d3b:	push   0x2
64018d3d:	lea    eax,[ebp+0x3b4]
64018d43:	pop    esi
64018d44:	cmp    ecx,DWORD PTR [ebp+0x524]
64018d4a:	jae    0x64018d78
64018d4c:	mov    edx,DWORD PTR [ebp-0x54]
64018d4f:	movzx  edx,WORD PTR [edx]
64018d52:	add    DWORD PTR [ebp-0x54],esi
64018d55:	add    ecx,esi
64018d57:	cmp    dx,0xa
64018d5b:	jne    0x64018d67
64018d5d:	mov    WORD PTR [eax],0xd
64018d62:	add    eax,esi
64018d64:	add    DWORD PTR [ebp-0x5c],esi
64018d67:	add    DWORD PTR [ebp-0x5c],esi
64018d6a:	mov    WORD PTR [eax],dx
64018d6d:	add    eax,esi
64018d6f:	cmp    DWORD PTR [ebp-0x5c],0x152
64018d76:	jb     0x64018d44
64018d78:	xor    esi,esi
64018d7a:	push   esi
64018d7b:	push   esi
64018d7c:	push   0x2ab
64018d81:	lea    ecx,[ebp+0x104]
64018d87:	push   ecx
64018d88:	lea    ecx,[ebp+0x3b4]
64018d8e:	sub    eax,ecx
64018d90:	cdq    
64018d91:	sub    eax,edx
64018d93:	sar    eax,1
64018d95:	push   eax
64018d96:	mov    eax,ecx
64018d98:	push   eax
64018d99:	push   esi
64018d9a:	push   0xfde9
64018d9f:	call   DWORD PTR ds:0x64021024
64018da5:	mov    ebx,eax
64018da7:	cmp    ebx,esi
64018da9:	je     0x64018e24
64018dab:	push   0x0
64018dad:	lea    eax,[ebp-0x6c]
64018db0:	push   eax
64018db1:	mov    eax,ebx
64018db3:	sub    eax,esi
64018db5:	push   eax
64018db6:	lea    eax,[ebp+esi*1+0x104]
64018dbd:	push   eax
64018dbe:	mov    eax,DWORD PTR [ebp-0x70]
64018dc1:	mov    eax,DWORD PTR [eax]
64018dc3:	push   DWORD PTR [edi+eax*1]
64018dc6:	call   DWORD PTR ds:0x64021078
64018dcc:	test   eax,eax
64018dce:	je     0x64018dd9
64018dd0:	add    esi,DWORD PTR [ebp-0x6c]
64018dd3:	cmp    ebx,esi
64018dd5:	jg     0x64018dab
64018dd7:	jmp    0x64018de2
64018dd9:	call   DWORD PTR ds:0x64021044
64018ddf:	mov    DWORD PTR [ebp-0x58],eax
64018de2:	cmp    ebx,esi
64018de4:	jg     0x64018e2d
64018de6:	mov    eax,DWORD PTR [ebp-0x54]
64018de9:	sub    eax,DWORD PTR [ebp-0x64]
64018dec:	cmp    eax,DWORD PTR [ebp+0x524]
64018df2:	mov    DWORD PTR [ebp-0x60],eax
64018df5:	jb     0x64018d31
64018dfb:	jmp    0x64018e2d
64018dfd:	push   0x0
64018dff:	lea    ecx,[ebp-0x6c]
64018e02:	push   ecx
64018e03:	push   DWORD PTR [ebp+0x524]
64018e09:	push   DWORD PTR [ebp-0x64]
64018e0c:	push   DWORD PTR [eax]
64018e0e:	call   DWORD PTR ds:0x64021078
64018e14:	test   eax,eax
64018e16:	je     0x64018e24
64018e18:	mov    eax,DWORD PTR [ebp-0x6c]
64018e1b:	and    DWORD PTR [ebp-0x58],0x0
64018e1f:	mov    DWORD PTR [ebp-0x60],eax
64018e22:	jmp    0x64018e2d
64018e24:	call   DWORD PTR ds:0x64021044
64018e2a:	mov    DWORD PTR [ebp-0x58],eax
64018e2d:	cmp    DWORD PTR [ebp-0x60],0x0
64018e31:	jne    0x64018e90
64018e33:	cmp    DWORD PTR [ebp-0x58],0x0
64018e37:	je     0x64018e60
64018e39:	push   0x5
64018e3b:	pop    esi
64018e3c:	cmp    DWORD PTR [ebp-0x58],esi
64018e3f:	jne    0x64018e55
64018e41:	call   0x64011120
64018e46:	mov    DWORD PTR [eax],0x9
64018e4c:	call   0x64011133
64018e51:	mov    DWORD PTR [eax],esi
64018e53:	jmp    0x64018e8b
64018e55:	push   DWORD PTR [ebp-0x58]
64018e58:	call   0x64011146
64018e5d:	pop    ecx
64018e5e:	jmp    0x64018e8b
64018e60:	mov    esi,DWORD PTR [ebp-0x70]
64018e63:	mov    eax,DWORD PTR [esi]
64018e65:	test   BYTE PTR [edi+eax*1+0x4],0x40
64018e6a:	je     0x64018e78
64018e6c:	mov    eax,DWORD PTR [ebp-0x64]
64018e6f:	cmp    BYTE PTR [eax],0x1a
64018e72:	jne    0x64018e78
64018e74:	xor    eax,eax
64018e76:	jmp    0x64018e96
64018e78:	call   0x64011120
64018e7d:	mov    DWORD PTR [eax],0x1c
64018e83:	call   0x64011133
64018e88:	and    DWORD PTR [eax],0x0
64018e8b:	or     eax,0xffffffff
64018e8e:	jmp    0x64018e96
64018e90:	mov    eax,DWORD PTR [ebp-0x60]
64018e93:	sub    eax,DWORD PTR [ebp-0x68]
64018e96:	pop    edi
64018e97:	pop    ebx
64018e98:	mov    ecx,DWORD PTR [ebp+0x510]
64018e9e:	xor    ecx,ebp
64018ea0:	pop    esi
64018ea1:	call   0x6400f34e
64018ea6:	add    ebp,0x514
64018eac:	leave  
64018ead:	ret    
64018eae:	push   0x10
64018eb0:	push   0x64025bf0
64018eb5:	call   0x640106f8
64018eba:	mov    eax,DWORD PTR [ebp+0x8]
64018ebd:	cmp    eax,0xfffffffe
64018ec0:	jne    0x64018edd
64018ec2:	call   0x64011133
64018ec7:	and    DWORD PTR [eax],0x0
64018eca:	call   0x64011120
64018ecf:	mov    DWORD PTR [eax],0x9
64018ed5:	or     eax,0xffffffff
64018ed8:	jmp    0x64018f7a
64018edd:	xor    edi,edi
64018edf:	cmp    eax,edi
64018ee1:	jl     0x64018eeb
64018ee3:	cmp    eax,DWORD PTR ds:0x6402d460
64018ee9:	jb     0x64018f0c
64018eeb:	call   0x64011133
64018ef0:	mov    DWORD PTR [eax],edi
64018ef2:	call   0x64011120
64018ef7:	mov    DWORD PTR [eax],0x9
64018efd:	push   edi
64018efe:	push   edi
64018eff:	push   edi
64018f00:	push   edi
64018f01:	push   edi
64018f02:	call   0x6400ee86
64018f07:	add    esp,0x14
64018f0a:	jmp    0x64018ed5
64018f0c:	mov    ecx,eax
64018f0e:	sar    ecx,0x5
64018f11:	lea    ebx,[ecx*4+0x6402d480]
64018f18:	mov    esi,eax
64018f1a:	and    esi,0x1f
64018f1d:	shl    esi,0x6
64018f20:	mov    ecx,DWORD PTR [ebx]
64018f22:	movzx  ecx,BYTE PTR [ecx+esi*1+0x4]
64018f27:	and    ecx,0x1
64018f2a:	je     0x64018eeb
64018f2c:	push   eax
64018f2d:	call   0x6401a6a0
64018f32:	pop    ecx
64018f33:	mov    DWORD PTR [ebp-0x4],edi
64018f36:	mov    eax,DWORD PTR [ebx]
64018f38:	test   BYTE PTR [eax+esi*1+0x4],0x1
64018f3d:	je     0x64018f55
64018f3f:	push   DWORD PTR [ebp+0x10]
64018f42:	push   DWORD PTR [ebp+0xc]
64018f45:	push   DWORD PTR [ebp+0x8]
64018f48:	call   0x6401888c
64018f4d:	add    esp,0xc
64018f50:	mov    DWORD PTR [ebp-0x1c],eax
64018f53:	jmp    0x64018f6b
64018f55:	call   0x64011120
64018f5a:	mov    DWORD PTR [eax],0x9
64018f60:	call   0x64011133
64018f65:	mov    DWORD PTR [eax],edi
64018f67:	or     DWORD PTR [ebp-0x1c],0xffffffff
64018f6b:	mov    DWORD PTR [ebp-0x4],0xfffffffe
64018f72:	call   0x64018f80
64018f77:	mov    eax,DWORD PTR [ebp-0x1c]
64018f7a:	call   0x6401073d
64018f7f:	ret    
64018f80:	push   DWORD PTR [ebp+0x8]
64018f83:	call   0x6401a740
64018f88:	pop    ecx
64018f89:	ret    
64018f8a:	inc    DWORD PTR ds:0x64029ef4
64018f90:	push   0x1000
64018f95:	call   0x64012630
64018f9a:	test   eax,eax
64018f9c:	pop    ecx
64018f9d:	mov    ecx,DWORD PTR [esp+0x4]
64018fa1:	mov    DWORD PTR [ecx+0x8],eax
64018fa4:	je     0x64018fb3
64018fa6:	or     DWORD PTR [ecx+0xc],0x8
64018faa:	mov    DWORD PTR [ecx+0x18],0x1000
64018fb1:	jmp    0x64018fc4
64018fb3:	or     DWORD PTR [ecx+0xc],0x4
64018fb7:	lea    eax,[ecx+0x14]
64018fba:	mov    DWORD PTR [ecx+0x8],eax
64018fbd:	mov    DWORD PTR [ecx+0x18],0x2
64018fc4:	mov    eax,DWORD PTR [ecx+0x8]
64018fc7:	and    DWORD PTR [ecx+0x4],0x0
64018fcb:	mov    DWORD PTR [ecx],eax
64018fcd:	ret    
64018fce:	mov    eax,DWORD PTR [esp+0x4]
64018fd2:	cmp    eax,0xfffffffe
64018fd5:	jne    0x64018fe5
64018fd7:	call   0x64011120
64018fdc:	mov    DWORD PTR [eax],0x9
64018fe2:	xor    eax,eax
64018fe4:	ret    
64018fe5:	push   esi
64018fe6:	xor    esi,esi
64018fe8:	cmp    eax,esi
64018fea:	jl     0x64018ff4
64018fec:	cmp    eax,DWORD PTR ds:0x6402d460
64018ff2:	jb     0x64019010
64018ff4:	call   0x64011120
64018ff9:	push   esi
64018ffa:	push   esi
64018ffb:	push   esi
64018ffc:	push   esi
64018ffd:	push   esi
64018ffe:	mov    DWORD PTR [eax],0x9
64019004:	call   0x6400ee86
64019009:	add    esp,0x14
6401900c:	xor    eax,eax
6401900e:	pop    esi
6401900f:	ret    
64019010:	mov    ecx,eax
64019012:	and    eax,0x1f
64019015:	sar    ecx,0x5
64019018:	mov    ecx,DWORD PTR [ecx*4+0x6402d480]
6401901f:	shl    eax,0x6
64019022:	movzx  eax,BYTE PTR [ecx+eax*1+0x4]
64019027:	and    eax,0x40
6401902a:	pop    esi
6401902b:	ret    
6401902c:	mov    eax,0x64028c10
64019031:	ret    
64019032:	mov    eax,ds:0x6402d440
64019037:	test   eax,eax
64019039:	push   esi
6401903a:	push   0x14
6401903c:	pop    esi
6401903d:	jne    0x64019046
6401903f:	mov    eax,0x200
64019044:	jmp    0x6401904c
64019046:	cmp    eax,esi
64019048:	jge    0x64019051
6401904a:	mov    eax,esi
6401904c:	mov    ds:0x6402d440,eax
64019051:	push   0x4
64019053:	push   eax
64019054:	call   0x64012670
64019059:	test   eax,eax
6401905b:	pop    ecx
6401905c:	pop    ecx
6401905d:	mov    ds:0x6402c434,eax
64019062:	jne    0x64019082
64019064:	push   0x4
64019066:	push   esi
64019067:	mov    DWORD PTR ds:0x6402d440,esi
6401906d:	call   0x64012670
64019072:	test   eax,eax
64019074:	pop    ecx
64019075:	pop    ecx
64019076:	mov    ds:0x6402c434,eax
6401907b:	jne    0x64019082
6401907d:	push   0x1a
6401907f:	pop    eax
64019080:	pop    esi
64019081:	ret    
64019082:	xor    edx,edx
64019084:	mov    ecx,0x64028c10
64019089:	jmp    0x64019090
6401908b:	mov    eax,ds:0x6402c434
64019090:	mov    DWORD PTR [edx+eax*1],ecx
64019093:	add    ecx,0x20
64019096:	add    edx,0x4
64019099:	cmp    ecx,0x64028e90
6401909f:	jl     0x6401908b
640190a1:	push   0xfffffffe
640190a3:	pop    esi
640190a4:	xor    edx,edx
640190a6:	mov    ecx,0x64028c20
640190ab:	push   edi
640190ac:	mov    eax,edx
640190ae:	sar    eax,0x5
640190b1:	mov    eax,DWORD PTR [eax*4+0x6402d480]
640190b8:	mov    edi,edx
640190ba:	and    edi,0x1f
640190bd:	shl    edi,0x6
640190c0:	mov    eax,DWORD PTR [edi+eax*1]
640190c3:	cmp    eax,0xffffffff
640190c6:	je     0x640190d0
640190c8:	cmp    eax,esi
640190ca:	je     0x640190d0
640190cc:	test   eax,eax
640190ce:	jne    0x640190d2
640190d0:	mov    DWORD PTR [ecx],esi
640190d2:	add    ecx,0x20
640190d5:	inc    edx
640190d6:	cmp    ecx,0x64028c80
640190dc:	jl     0x640190ac
640190de:	pop    edi
640190df:	xor    eax,eax
640190e1:	pop    esi
640190e2:	ret    
640190e3:	call   0x6401aa41
640190e8:	cmp    BYTE PTR ds:0x640298ac,0x0
640190ef:	je     0x640190f6
640190f1:	call   0x6401a824
640190f6:	push   DWORD PTR ds:0x6402c434
640190fc:	call   0x640101e6
64019101:	pop    ecx
64019102:	ret    
64019103:	push   esi
64019104:	mov    esi,DWORD PTR [esp+0x8]
64019108:	mov    eax,0x64028c10
6401910d:	cmp    esi,eax
6401910f:	jb     0x64019133
64019111:	cmp    esi,0x64028e70
64019117:	ja     0x64019133
64019119:	mov    ecx,esi
6401911b:	sub    ecx,eax
6401911d:	sar    ecx,0x5
64019120:	add    ecx,0x10
64019123:	push   ecx
64019124:	call   0x6401696a
64019129:	or     DWORD PTR [esi+0xc],0x8000
64019130:	pop    ecx
64019131:	pop    esi
64019132:	ret    
64019133:	add    esi,0x20
64019136:	push   esi
64019137:	call   DWORD PTR ds:0x64021084
6401913d:	pop    esi
6401913e:	ret    
6401913f:	mov    eax,DWORD PTR [esp+0x4]
64019143:	cmp    eax,0x14
64019146:	jge    0x6401915e
64019148:	add    eax,0x10
6401914b:	push   eax
6401914c:	call   0x6401696a
64019151:	mov    eax,DWORD PTR [esp+0xc]
64019155:	or     DWORD PTR [eax+0xc],0x8000
6401915c:	pop    ecx
6401915d:	ret    
6401915e:	mov    eax,DWORD PTR [esp+0x8]
64019162:	add    eax,0x20
64019165:	push   eax
64019166:	call   DWORD PTR ds:0x64021084
6401916c:	ret    
6401916d:	mov    eax,DWORD PTR [esp+0x4]
64019171:	mov    ecx,0x64028c10
64019176:	cmp    eax,ecx
64019178:	jb     0x64019198
6401917a:	cmp    eax,0x64028e70
6401917f:	ja     0x64019198
64019181:	and    DWORD PTR [eax+0xc],0xffff7fff
64019188:	sub    eax,ecx
6401918a:	sar    eax,0x5
6401918d:	add    eax,0x10
64019190:	push   eax
64019191:	call   0x64016892
64019196:	pop    ecx
64019197:	ret    
64019198:	add    eax,0x20
6401919b:	push   eax
6401919c:	call   DWORD PTR ds:0x64021088
640191a2:	ret    
640191a3:	mov    ecx,DWORD PTR [esp+0x4]
640191a7:	cmp    ecx,0x14
640191aa:	mov    eax,DWORD PTR [esp+0x8]
640191ae:	jge    0x640191c2
640191b0:	and    DWORD PTR [eax+0xc],0xffff7fff
640191b7:	add    ecx,0x10
640191ba:	push   ecx
640191bb:	call   0x64016892
640191c0:	pop    ecx
640191c1:	ret    
640191c2:	add    eax,0x20
640191c5:	push   eax
640191c6:	call   DWORD PTR ds:0x64021088
640191cc:	ret    
640191cd:	mov    eax,DWORD PTR [esp+0x4]
640191d1:	push   esi
640191d2:	xor    esi,esi
640191d4:	cmp    eax,esi
640191d6:	jne    0x640191f5
640191d8:	call   0x64011120
640191dd:	push   esi
640191de:	push   esi
640191df:	push   esi
640191e0:	push   esi
640191e1:	push   esi
640191e2:	mov    DWORD PTR [eax],0x16
640191e8:	call   0x6400ee86
640191ed:	add    esp,0x14
640191f0:	or     eax,0xffffffff
640191f3:	pop    esi
640191f4:	ret    
640191f5:	mov    eax,DWORD PTR [eax+0x10]
640191f8:	pop    esi
640191f9:	ret    
640191fa:	push   ebp
640191fb:	mov    ebp,esp
640191fd:	sub    esp,0x10
64019200:	mov    eax,ds:0x64028038
64019205:	xor    eax,ebp
64019207:	mov    DWORD PTR [ebp-0x4],eax
6401920a:	push   ebx
6401920b:	push   esi
6401920c:	mov    esi,DWORD PTR [ebp+0xc]
6401920f:	test   BYTE PTR [esi+0xc],0x40
64019213:	push   edi
64019214:	jne    0x640193a9
6401921a:	push   esi
6401921b:	call   0x640191cd
64019220:	cmp    eax,0xffffffff
64019223:	pop    ecx
64019224:	mov    edi,0x64028810
64019229:	je     0x64019259
6401922b:	push   esi
6401922c:	call   0x640191cd
64019231:	cmp    eax,0xfffffffe
64019234:	pop    ecx
64019235:	je     0x64019259
64019237:	push   esi
64019238:	call   0x640191cd
6401923d:	sar    eax,0x5
64019240:	push   esi
64019241:	lea    ebx,[eax*4+0x6402d480]
64019248:	call   0x640191cd
6401924d:	and    eax,0x1f
64019250:	pop    ecx
64019251:	shl    eax,0x6
64019254:	add    eax,DWORD PTR [ebx]
64019256:	pop    ecx
64019257:	jmp    0x6401925b
64019259:	mov    eax,edi
6401925b:	mov    al,BYTE PTR [eax+0x24]
6401925e:	and    al,0x7f
64019260:	cmp    al,0x2
64019262:	je     0x640193a9
64019268:	push   esi
64019269:	call   0x640191cd
6401926e:	cmp    eax,0xffffffff
64019271:	pop    ecx
64019272:	je     0x640192a2
64019274:	push   esi
64019275:	call   0x640191cd
6401927a:	cmp    eax,0xfffffffe
6401927d:	pop    ecx
6401927e:	je     0x640192a2
64019280:	push   esi
64019281:	call   0x640191cd
64019286:	sar    eax,0x5
64019289:	push   esi
6401928a:	lea    ebx,[eax*4+0x6402d480]
64019291:	call   0x640191cd
64019296:	and    eax,0x1f
64019299:	pop    ecx
6401929a:	shl    eax,0x6
6401929d:	add    eax,DWORD PTR [ebx]
6401929f:	pop    ecx
640192a0:	jmp    0x640192a4
640192a2:	mov    eax,edi
640192a4:	mov    al,BYTE PTR [eax+0x24]
640192a7:	and    al,0x7f
640192a9:	cmp    al,0x1
640192ab:	jne    0x64019309
640192ad:	dec    DWORD PTR [esi+0x4]
640192b0:	mov    ebx,DWORD PTR [ebp+0x8]
640192b3:	js     0x640192c3
640192b5:	mov    eax,DWORD PTR [esi]
640192b7:	mov    BYTE PTR [eax],bl
640192b9:	mov    ecx,DWORD PTR [esi]
640192bb:	movzx  eax,BYTE PTR [ecx]
640192be:	inc    ecx
640192bf:	mov    DWORD PTR [esi],ecx
640192c1:	jmp    0x640192cf
640192c3:	movsx  eax,bl
640192c6:	push   esi
640192c7:	push   eax
640192c8:	call   0x64013465
640192cd:	pop    ecx
640192ce:	pop    ecx
640192cf:	cmp    eax,0xffffffff
640192d2:	jne    0x640192dd
640192d4:	or     ax,0xffff
640192d8:	jmp    0x640193c9
640192dd:	dec    DWORD PTR [esi+0x4]
640192e0:	js     0x640192f0
640192e2:	mov    eax,DWORD PTR [esi]
640192e4:	mov    BYTE PTR [eax],bh
640192e6:	mov    ecx,DWORD PTR [esi]
640192e8:	movzx  eax,BYTE PTR [ecx]
640192eb:	inc    ecx
640192ec:	mov    DWORD PTR [esi],ecx
640192ee:	jmp    0x640192fc
640192f0:	movsx  eax,bh
640192f3:	push   esi
640192f4:	push   eax
640192f5:	call   0x64013465
640192fa:	pop    ecx
640192fb:	pop    ecx
640192fc:	cmp    eax,0xffffffff
640192ff:	je     0x640192d4
64019301:	mov    ax,bx
64019304:	jmp    0x640193c9
64019309:	push   esi
6401930a:	call   0x640191cd
6401930f:	cmp    eax,0xffffffff
64019312:	pop    ecx
64019313:	je     0x64019343
64019315:	push   esi
64019316:	call   0x640191cd
6401931b:	cmp    eax,0xfffffffe
6401931e:	pop    ecx
6401931f:	je     0x64019343
64019321:	push   esi
64019322:	call   0x640191cd
64019327:	sar    eax,0x5
6401932a:	push   esi
6401932b:	lea    ebx,[eax*4+0x6402d480]
64019332:	call   0x640191cd
64019337:	and    eax,0x1f
6401933a:	pop    ecx
6401933b:	shl    eax,0x6
6401933e:	add    eax,DWORD PTR [ebx]
64019340:	pop    ecx
64019341:	jmp    0x64019345
64019343:	mov    eax,edi
64019345:	test   BYTE PTR [eax+0x4],0x80
64019349:	je     0x640193a9
6401934b:	push   DWORD PTR [ebp+0x8]
6401934e:	lea    eax,[ebp-0xc]
64019351:	push   0x5
64019353:	push   eax
64019354:	lea    eax,[ebp-0x10]
64019357:	push   eax
64019358:	call   0x6401a341
6401935d:	add    esp,0x10
64019360:	test   eax,eax
64019362:	jne    0x640192d4
64019368:	xor    ebx,ebx
6401936a:	cmp    DWORD PTR [ebp-0x10],ebx
6401936d:	jle    0x640193a3
6401936f:	dec    DWORD PTR [esi+0x4]
64019372:	js     0x64019386
64019374:	mov    eax,DWORD PTR [esi]
64019376:	mov    cl,BYTE PTR [ebp+ebx*1-0xc]
6401937a:	mov    BYTE PTR [eax],cl
6401937c:	mov    ecx,DWORD PTR [esi]
6401937e:	movzx  eax,BYTE PTR [ecx]
64019381:	inc    ecx
64019382:	mov    DWORD PTR [esi],ecx
64019384:	jmp    0x64019394
64019386:	movsx  eax,BYTE PTR [ebp+ebx*1-0xc]
6401938b:	push   esi
6401938c:	push   eax
6401938d:	call   0x64013465
64019392:	pop    ecx
64019393:	pop    ecx
64019394:	cmp    eax,0xffffffff
64019397:	je     0x640192d4
6401939d:	inc    ebx
6401939e:	cmp    ebx,DWORD PTR [ebp-0x10]
640193a1:	jl     0x6401936f
640193a3:	mov    ax,WORD PTR [ebp+0x8]
640193a7:	jmp    0x640193c9
640193a9:	add    DWORD PTR [esi+0x4],0xfffffffe
640193ad:	js     0x640193bc
640193af:	mov    ecx,DWORD PTR [esi]
640193b1:	mov    eax,DWORD PTR [ebp+0x8]
640193b4:	mov    WORD PTR [ecx],ax
640193b7:	add    DWORD PTR [esi],0x2
640193ba:	jmp    0x640193c9
640193bc:	movzx  eax,WORD PTR [ebp+0x8]
640193c0:	push   esi
640193c1:	push   eax
640193c2:	call   0x6401aa4a
640193c7:	pop    ecx
640193c8:	pop    ecx
640193c9:	mov    ecx,DWORD PTR [ebp-0x4]
640193cc:	pop    edi
640193cd:	pop    esi
640193ce:	xor    ecx,ebp
640193d0:	pop    ebx
640193d1:	call   0x6400f34e
640193d6:	leave  
640193d7:	ret    
640193d8:	mov    eax,ds:0x64028038
640193dd:	or     eax,0x1
640193e0:	xor    ecx,ecx
640193e2:	cmp    DWORD PTR ds:0x64029ef8,eax
640193e8:	sete   cl
640193eb:	mov    eax,ecx
640193ed:	ret    
640193ee:	push   ebp
640193ef:	mov    ebp,esp
640193f1:	sub    esp,0x10
640193f4:	push   ebx
640193f5:	push   esi
640193f6:	mov    esi,DWORD PTR [ebp+0xc]
640193f9:	xor    ebx,ebx
640193fb:	cmp    esi,ebx
640193fd:	je     0x64019412
640193ff:	cmp    DWORD PTR [ebp+0x10],ebx
64019402:	je     0x64019412
64019404:	cmp    BYTE PTR [esi],bl
64019406:	jne    0x64019418
64019408:	mov    eax,DWORD PTR [ebp+0x8]
6401940b:	cmp    eax,ebx
6401940d:	je     0x64019412
6401940f:	mov    WORD PTR [eax],bx
64019412:	xor    eax,eax
64019414:	pop    esi
64019415:	pop    ebx
64019416:	leave  
64019417:	ret    
64019418:	push   DWORD PTR [ebp+0x14]
6401941b:	lea    ecx,[ebp-0x10]
6401941e:	call   0x6400f4f1
64019423:	mov    eax,DWORD PTR [ebp-0x10]
64019426:	cmp    DWORD PTR [eax+0x14],ebx
64019429:	jne    0x6401944a
6401942b:	mov    eax,DWORD PTR [ebp+0x8]
6401942e:	cmp    eax,ebx
64019430:	je     0x64019439
64019432:	movzx  cx,BYTE PTR [esi]
64019436:	mov    WORD PTR [eax],cx
64019439:	cmp    BYTE PTR [ebp-0x4],bl
6401943c:	je     0x64019445
6401943e:	mov    eax,DWORD PTR [ebp-0x8]
64019441:	and    DWORD PTR [eax+0x70],0xfffffffd
64019445:	xor    eax,eax
64019447:	inc    eax
64019448:	jmp    0x64019414
6401944a:	lea    eax,[ebp-0x10]
6401944d:	push   eax
6401944e:	movzx  eax,BYTE PTR [esi]
64019451:	push   eax
64019452:	call   0x640167b0
64019457:	test   eax,eax
64019459:	pop    ecx
6401945a:	pop    ecx
6401945b:	je     0x640194da
6401945d:	mov    eax,DWORD PTR [ebp-0x10]
64019460:	mov    ecx,DWORD PTR [eax+0xac]
64019466:	cmp    ecx,0x1
64019469:	jle    0x64019490
6401946b:	cmp    DWORD PTR [ebp+0x10],ecx
6401946e:	jl     0x64019490
64019470:	xor    edx,edx
64019472:	cmp    DWORD PTR [ebp+0x8],ebx
64019475:	setne  dl
64019478:	push   edx
64019479:	push   DWORD PTR [ebp+0x8]
6401947c:	push   ecx
6401947d:	push   esi
6401947e:	push   0x9
64019480:	push   DWORD PTR [eax+0x4]
64019483:	call   DWORD PTR ds:0x6402103c
64019489:	test   eax,eax
6401948b:	mov    eax,DWORD PTR [ebp-0x10]
6401948e:	jne    0x640194a0
64019490:	mov    ecx,DWORD PTR [ebp+0x10]
64019493:	cmp    ecx,DWORD PTR [eax+0xac]
64019499:	jb     0x640194bb
6401949b:	cmp    BYTE PTR [esi+0x1],bl
6401949e:	je     0x640194bb
640194a0:	cmp    BYTE PTR [ebp-0x4],bl
640194a3:	mov    eax,DWORD PTR [eax+0xac]
640194a9:	je     0x64019414
640194af:	mov    ecx,DWORD PTR [ebp-0x8]
640194b2:	and    DWORD PTR [ecx+0x70],0xfffffffd
640194b6:	jmp    0x64019414
640194bb:	call   0x64011120
640194c0:	mov    DWORD PTR [eax],0x2a
640194c6:	cmp    BYTE PTR [ebp-0x4],bl
640194c9:	je     0x640194d2
640194cb:	mov    eax,DWORD PTR [ebp-0x8]
640194ce:	and    DWORD PTR [eax+0x70],0xfffffffd
640194d2:	or     eax,0xffffffff
640194d5:	jmp    0x64019414
640194da:	xor    eax,eax
640194dc:	cmp    DWORD PTR [ebp+0x8],ebx
640194df:	setne  al
640194e2:	push   eax
640194e3:	push   DWORD PTR [ebp+0x8]
640194e6:	mov    eax,DWORD PTR [ebp-0x10]
640194e9:	push   0x1
640194eb:	push   esi
640194ec:	push   0x9
640194ee:	push   DWORD PTR [eax+0x4]
640194f1:	call   DWORD PTR ds:0x6402103c
640194f7:	test   eax,eax
640194f9:	jne    0x64019439
640194ff:	jmp    0x640194bb
64019501:	push   0x0
64019503:	push   DWORD PTR [esp+0x10]
64019507:	push   DWORD PTR [esp+0x10]
6401950b:	push   DWORD PTR [esp+0x10]
6401950f:	call   0x640193ee
64019514:	add    esp,0x10
64019517:	ret    
64019518:	push   ebp
64019519:	lea    ebp,[esp-0x1f8]
64019520:	sub    esp,0x278
64019526:	mov    eax,ds:0x64028038
6401952b:	xor    eax,ebp
6401952d:	mov    DWORD PTR [ebp+0x1f4],eax
64019533:	mov    eax,DWORD PTR [ebp+0x200]
64019539:	push   ebx
6401953a:	mov    ebx,DWORD PTR [ebp+0x204]
64019540:	push   esi
64019541:	xor    esi,esi
64019543:	push   edi
64019544:	mov    edi,DWORD PTR [ebp+0x20c]
6401954a:	push   DWORD PTR [ebp+0x208]
64019550:	lea    ecx,[ebp-0x5c]
64019553:	mov    DWORD PTR [ebp-0x30],eax
64019556:	mov    DWORD PTR [ebp-0x2c],edi
64019559:	mov    DWORD PTR [ebp-0x64],esi
6401955c:	mov    DWORD PTR [ebp-0x18],esi
6401955f:	mov    DWORD PTR [ebp-0x40],esi
64019562:	mov    DWORD PTR [ebp-0x20],esi
64019565:	mov    DWORD PTR [ebp-0x3c],esi
64019568:	mov    DWORD PTR [ebp-0x68],esi
6401956b:	mov    DWORD PTR [ebp-0x44],esi
6401956e:	call   0x6400f4f1
64019573:	cmp    DWORD PTR [ebp-0x30],esi
64019576:	jne    0x640195a5
64019578:	call   0x64011120
6401957d:	push   esi
6401957e:	push   esi
6401957f:	push   esi
64019580:	push   esi
64019581:	mov    DWORD PTR [eax],0x16
64019587:	push   esi
64019588:	call   0x6400ee86
6401958d:	add    esp,0x14
64019590:	cmp    BYTE PTR [ebp-0x50],0x0
64019594:	je     0x6401959d
64019596:	mov    eax,DWORD PTR [ebp-0x54]
64019599:	and    DWORD PTR [eax+0x70],0xfffffffd
6401959d:	or     eax,0xffffffff
640195a0:	jmp    0x64019e8f
640195a5:	mov    eax,DWORD PTR [ebp-0x30]
640195a8:	test   BYTE PTR [eax+0xc],0x40
640195ac:	jne    0x64019656
640195b2:	push   eax
640195b3:	call   0x640191cd
640195b8:	cmp    eax,0xffffffff
640195bb:	pop    ecx
640195bc:	je     0x640195f4
640195be:	push   DWORD PTR [ebp-0x30]
640195c1:	call   0x640191cd
640195c6:	cmp    eax,0xfffffffe
640195c9:	pop    ecx
640195ca:	je     0x640195f4
640195cc:	push   DWORD PTR [ebp-0x30]
640195cf:	call   0x640191cd
640195d4:	push   DWORD PTR [ebp-0x30]
640195d7:	sar    eax,0x5
640195da:	lea    esi,[eax*4+0x6402d480]
640195e1:	call   0x640191cd
640195e6:	and    eax,0x1f
640195e9:	shl    eax,0x6
640195ec:	add    eax,DWORD PTR [esi]
640195ee:	pop    ecx
640195ef:	pop    ecx
640195f0:	xor    esi,esi
640195f2:	jmp    0x640195f9
640195f4:	mov    eax,0x64028810
640195f9:	test   BYTE PTR [eax+0x24],0x7f
640195fd:	jne    0x64019578
64019603:	push   DWORD PTR [ebp-0x30]
64019606:	call   0x640191cd
6401960b:	cmp    eax,0xffffffff
6401960e:	pop    ecx
6401960f:	je     0x64019647
64019611:	push   DWORD PTR [ebp-0x30]
64019614:	call   0x640191cd
64019619:	cmp    eax,0xfffffffe
6401961c:	pop    ecx
6401961d:	je     0x64019647
6401961f:	push   DWORD PTR [ebp-0x30]
64019622:	call   0x640191cd
64019627:	push   DWORD PTR [ebp-0x30]
6401962a:	sar    eax,0x5
6401962d:	lea    esi,[eax*4+0x6402d480]
64019634:	call   0x640191cd
64019639:	and    eax,0x1f
6401963c:	shl    eax,0x6
6401963f:	add    eax,DWORD PTR [esi]
64019641:	pop    ecx
64019642:	pop    ecx
64019643:	xor    esi,esi
64019645:	jmp    0x6401964c
64019647:	mov    eax,0x64028810
6401964c:	test   BYTE PTR [eax+0x24],0x80
64019650:	jne    0x64019578
64019656:	cmp    ebx,esi
64019658:	je     0x64019578
6401965e:	mov    dl,BYTE PTR [ebx]
64019660:	test   dl,dl
64019662:	mov    DWORD PTR [ebp-0x34],esi
64019665:	mov    DWORD PTR [ebp-0x28],esi
64019668:	mov    DWORD PTR [ebp-0x48],esi
6401966b:	mov    DWORD PTR [ebp-0x60],esi
6401966e:	mov    BYTE PTR [ebp-0x19],dl
64019671:	je     0x64019e7f
64019677:	inc    ebx
64019678:	xor    eax,eax
6401967a:	cmp    DWORD PTR [ebp-0x34],eax
6401967d:	mov    DWORD PTR [ebp-0x4c],ebx
64019680:	jl     0x64019e6e
64019686:	mov    cl,dl
64019688:	sub    cl,0x20
6401968b:	cmp    cl,0x58
6401968e:	ja     0x6401969d
64019690:	movsx  eax,dl
64019693:	movzx  eax,BYTE PTR [eax+0x64023380]
6401969a:	and    eax,0xf
6401969d:	mov    ecx,DWORD PTR [ebp-0x48]
640196a0:	imul   eax,eax,0x9
640196a3:	movzx  eax,BYTE PTR [eax+ecx*1+0x640233a0]
640196ab:	push   0x8
640196ad:	shr    eax,0x4
640196b0:	pop    esi
640196b1:	cmp    eax,esi
640196b3:	mov    DWORD PTR [ebp-0x48],eax
640196b6:	je     0x64019e57
640196bc:	push   0x7
640196be:	pop    ecx
640196bf:	cmp    eax,ecx
640196c1:	ja     0x64019e41
640196c7:	jmp    DWORD PTR [eax*4+0x64019ea8]
640196ce:	xor    eax,eax
640196d0:	or     DWORD PTR [ebp-0x20],0xffffffff
640196d4:	mov    DWORD PTR [ebp-0x74],eax
640196d7:	mov    DWORD PTR [ebp-0x68],eax
640196da:	mov    DWORD PTR [ebp-0x40],eax
640196dd:	mov    DWORD PTR [ebp-0x3c],eax
640196e0:	mov    DWORD PTR [ebp-0x18],eax
640196e3:	mov    DWORD PTR [ebp-0x44],eax
640196e6:	jmp    0x64019e41
640196eb:	movsx  eax,dl
640196ee:	sub    eax,0x20
640196f1:	je     0x6401972f
640196f3:	sub    eax,0x3
640196f6:	je     0x64019723
640196f8:	sub    eax,esi
640196fa:	je     0x6401971a
640196fc:	dec    eax
640196fd:	dec    eax
640196fe:	je     0x64019711
64019700:	sub    eax,0x3
64019703:	jne    0x64019e41
64019709:	or     DWORD PTR [ebp-0x18],esi
6401970c:	jmp    0x64019e41
64019711:	or     DWORD PTR [ebp-0x18],0x4
64019715:	jmp    0x64019e41
6401971a:	or     DWORD PTR [ebp-0x18],0x1
6401971e:	jmp    0x64019e41
64019723:	or     DWORD PTR [ebp-0x18],0x80
6401972a:	jmp    0x64019e41
6401972f:	or     DWORD PTR [ebp-0x18],0x2
64019733:	jmp    0x64019e41
64019738:	cmp    dl,0x2a
6401973b:	jne    0x6401975d
6401973d:	add    edi,0x4
64019740:	mov    DWORD PTR [ebp-0x2c],edi
64019743:	mov    edi,DWORD PTR [edi-0x4]
64019746:	test   edi,edi
64019748:	mov    DWORD PTR [ebp-0x40],edi
6401974b:	jge    0x64019e41
64019751:	or     DWORD PTR [ebp-0x18],0x4
64019755:	neg    DWORD PTR [ebp-0x40]
64019758:	jmp    0x64019e41
6401975d:	mov    eax,DWORD PTR [ebp-0x40]
64019760:	imul   eax,eax,0xa
64019763:	movsx  ecx,dl
64019766:	lea    eax,[eax+ecx*1-0x30]
6401976a:	mov    DWORD PTR [ebp-0x40],eax
6401976d:	jmp    0x64019e41
64019772:	and    DWORD PTR [ebp-0x20],0x0
64019776:	jmp    0x64019e41
6401977b:	cmp    dl,0x2a
6401977e:	jne    0x6401979d
64019780:	add    edi,0x4
64019783:	mov    DWORD PTR [ebp-0x2c],edi
64019786:	mov    edi,DWORD PTR [edi-0x4]
64019789:	test   edi,edi
6401978b:	mov    DWORD PTR [ebp-0x20],edi
6401978e:	jge    0x64019e41
64019794:	or     DWORD PTR [ebp-0x20],0xffffffff
64019798:	jmp    0x64019e41
6401979d:	mov    eax,DWORD PTR [ebp-0x20]
640197a0:	imul   eax,eax,0xa
640197a3:	movsx  ecx,dl
640197a6:	lea    eax,[eax+ecx*1-0x30]
640197aa:	mov    DWORD PTR [ebp-0x20],eax
640197ad:	jmp    0x64019e41
640197b2:	cmp    dl,0x49
640197b5:	je     0x640197fd
640197b7:	cmp    dl,0x68
640197ba:	je     0x640197f4
640197bc:	cmp    dl,0x6c
640197bf:	je     0x640197d6
640197c1:	cmp    dl,0x77
640197c4:	jne    0x64019e41
640197ca:	or     DWORD PTR [ebp-0x18],0x800
640197d1:	jmp    0x64019e41
640197d6:	cmp    BYTE PTR [ebx],0x6c
640197d9:	jne    0x640197eb
640197db:	inc    ebx
640197dc:	or     DWORD PTR [ebp-0x18],0x1000
640197e3:	mov    DWORD PTR [ebp-0x4c],ebx
640197e6:	jmp    0x64019e41
640197eb:	or     DWORD PTR [ebp-0x18],0x10
640197ef:	jmp    0x64019e41
640197f4:	or     DWORD PTR [ebp-0x18],0x20
640197f8:	jmp    0x64019e41
640197fd:	mov    al,BYTE PTR [ebx]
640197ff:	cmp    al,0x36
64019801:	jne    0x6401981a
64019803:	cmp    BYTE PTR [ebx+0x1],0x34
64019807:	jne    0x6401981a
64019809:	inc    ebx
6401980a:	inc    ebx
6401980b:	or     DWORD PTR [ebp-0x18],0x8000
64019812:	mov    DWORD PTR [ebp-0x4c],ebx
64019815:	jmp    0x64019e41
6401981a:	cmp    al,0x33
6401981c:	jne    0x64019835
6401981e:	cmp    BYTE PTR [ebx+0x1],0x32
64019822:	jne    0x64019835
64019824:	inc    ebx
64019825:	inc    ebx
64019826:	and    DWORD PTR [ebp-0x18],0xffff7fff
6401982d:	mov    DWORD PTR [ebp-0x4c],ebx
64019830:	jmp    0x64019e41
64019835:	cmp    al,0x64
64019837:	je     0x64019e41
6401983d:	cmp    al,0x69
6401983f:	je     0x64019e41
64019845:	cmp    al,0x6f
64019847:	je     0x64019e41
6401984d:	cmp    al,0x75
6401984f:	je     0x64019e41
64019855:	cmp    al,0x78
64019857:	je     0x64019e41
6401985d:	cmp    al,0x58
6401985f:	je     0x64019e41
64019865:	and    DWORD PTR [ebp-0x48],0x0
64019869:	and    DWORD PTR [ebp-0x44],0x0
6401986d:	lea    eax,[ebp-0x5c]
64019870:	push   eax
64019871:	movzx  eax,dl
64019874:	push   eax
64019875:	call   0x640167b0
6401987a:	pop    ecx
6401987b:	test   eax,eax
6401987d:	mov    al,BYTE PTR [ebp-0x19]
64019880:	pop    ecx
64019881:	je     0x6401989c
64019883:	mov    ecx,DWORD PTR [ebp-0x30]
64019886:	lea    esi,[ebp-0x34]
64019889:	call   0x640156fa
6401988e:	mov    al,BYTE PTR [ebx]
64019890:	inc    ebx
64019891:	test   al,al
64019893:	mov    DWORD PTR [ebp-0x4c],ebx
64019896:	je     0x64019e57
6401989c:	mov    ecx,DWORD PTR [ebp-0x30]
6401989f:	lea    esi,[ebp-0x34]
640198a2:	call   0x640156fa
640198a7:	jmp    0x64019e41
640198ac:	movsx  eax,dl
640198af:	cmp    eax,0x64
640198b2:	jg     0x64019a2c
640198b8:	je     0x64019aa7
640198be:	cmp    eax,0x53
640198c1:	jg     0x64019973
640198c7:	je     0x64019924
640198c9:	sub    eax,0x41
640198cc:	je     0x640198de
640198ce:	dec    eax
640198cf:	dec    eax
640198d0:	je     0x64019913
640198d2:	dec    eax
640198d3:	dec    eax
640198d4:	je     0x640198de
640198d6:	dec    eax
640198d7:	dec    eax
640198d8:	jne    0x64019d29
640198de:	add    dl,0x20
640198e1:	mov    DWORD PTR [ebp-0x74],0x1
640198e8:	mov    BYTE PTR [ebp-0x19],dl
640198eb:	or     DWORD PTR [ebp-0x18],0x40
640198ef:	cmp    DWORD PTR [ebp-0x20],0x0
640198f3:	lea    ebx,[ebp-0x14]
640198f6:	mov    eax,0x200
640198fb:	mov    DWORD PTR [ebp-0x24],ebx
640198fe:	mov    DWORD PTR [ebp-0x6c],eax
64019901:	jge    0x64019acb
64019907:	mov    DWORD PTR [ebp-0x20],0x6
6401990e:	jmp    0x64019b1a
64019913:	test   WORD PTR [ebp-0x18],0x830
64019919:	jne    0x64019990
6401991b:	or     DWORD PTR [ebp-0x18],0x800
64019922:	jmp    0x64019990
64019924:	test   WORD PTR [ebp-0x18],0x830
6401992a:	jne    0x64019933
6401992c:	or     DWORD PTR [ebp-0x18],0x800
64019933:	mov    ecx,DWORD PTR [ebp-0x20]
64019936:	cmp    ecx,0xffffffff
64019939:	jne    0x64019940
6401993b:	mov    ecx,0x7fffffff
64019940:	add    edi,0x4
64019943:	test   WORD PTR [ebp-0x18],0x810
64019949:	mov    DWORD PTR [ebp-0x2c],edi
6401994c:	mov    edi,DWORD PTR [edi-0x4]
6401994f:	mov    DWORD PTR [ebp-0x24],edi
64019952:	je     0x64019d07
64019958:	test   edi,edi
6401995a:	jne    0x64019964
6401995c:	mov    eax,ds:0x640288e4
64019961:	mov    DWORD PTR [ebp-0x24],eax
64019964:	mov    eax,DWORD PTR [ebp-0x24]
64019967:	mov    DWORD PTR [ebp-0x44],0x1
6401996e:	jmp    0x64019cfc
64019973:	sub    eax,0x58
64019976:	je     0x64019bb0
6401997c:	dec    eax
6401997d:	dec    eax
6401997e:	je     0x640199dd
64019980:	sub    eax,ecx
64019982:	je     0x640198eb
64019988:	dec    eax
64019989:	dec    eax
6401998a:	jne    0x64019d29
64019990:	add    edi,0x4
64019993:	test   WORD PTR [ebp-0x18],0x810
64019999:	mov    DWORD PTR [ebp-0x2c],edi
6401999c:	je     0x640199c5
6401999e:	movzx  eax,WORD PTR [edi-0x4]
640199a2:	push   eax
640199a3:	push   0x200
640199a8:	lea    eax,[ebp-0x14]
640199ab:	push   eax
640199ac:	lea    eax,[ebp-0x28]
640199af:	push   eax
640199b0:	call   0x6401a341
640199b5:	add    esp,0x10
640199b8:	test   eax,eax
640199ba:	je     0x640199d2
640199bc:	mov    DWORD PTR [ebp-0x68],0x1
640199c3:	jmp    0x640199d2
640199c5:	mov    al,BYTE PTR [edi-0x4]
640199c8:	mov    BYTE PTR [ebp-0x14],al
640199cb:	mov    DWORD PTR [ebp-0x28],0x1
640199d2:	lea    eax,[ebp-0x14]
640199d5:	mov    DWORD PTR [ebp-0x24],eax
640199d8:	jmp    0x64019d29
640199dd:	mov    eax,DWORD PTR [edi]
640199df:	add    edi,0x4
640199e2:	test   eax,eax
640199e4:	mov    DWORD PTR [ebp-0x2c],edi
640199e7:	je     0x64019a18
640199e9:	mov    ecx,DWORD PTR [eax+0x4]
640199ec:	test   ecx,ecx
640199ee:	je     0x64019a18
640199f0:	test   WORD PTR [ebp-0x18],0x800
640199f6:	movsx  eax,WORD PTR [eax]
640199f9:	mov    DWORD PTR [ebp-0x24],ecx
640199fc:	je     0x64019a0f
640199fe:	cdq    
640199ff:	sub    eax,edx
64019a01:	sar    eax,1
64019a03:	mov    DWORD PTR [ebp-0x44],0x1
64019a0a:	jmp    0x64019d26
64019a0f:	and    DWORD PTR [ebp-0x44],0x0
64019a13:	jmp    0x64019d26
64019a18:	mov    eax,ds:0x640288e0
64019a1d:	mov    DWORD PTR [ebp-0x24],eax
64019a20:	push   eax
64019a21:	call   0x64010b20
64019a26:	pop    ecx
64019a27:	jmp    0x64019d26
64019a2c:	cmp    eax,0x70
64019a2f:	jg     0x64019bb5
64019a35:	je     0x64019bad
64019a3b:	cmp    eax,0x65
64019a3e:	jl     0x64019d29
64019a44:	cmp    eax,0x67
64019a47:	jle    0x640198eb
64019a4d:	cmp    eax,0x69
64019a50:	je     0x64019aa7
64019a52:	cmp    eax,0x6e
64019a55:	je     0x64019a72
64019a57:	cmp    eax,0x6f
64019a5a:	jne    0x64019d29
64019a60:	test   BYTE PTR [ebp-0x18],0x80
64019a64:	mov    DWORD PTR [ebp-0x28],esi
64019a67:	je     0x64019ab2
64019a69:	or     DWORD PTR [ebp-0x18],0x200
64019a70:	jmp    0x64019ab2
64019a72:	mov    esi,DWORD PTR [edi]
64019a74:	add    edi,0x4
64019a77:	mov    DWORD PTR [ebp-0x2c],edi
64019a7a:	call   0x640193d8
64019a7f:	test   eax,eax
64019a81:	je     0x64019e57
64019a87:	test   BYTE PTR [ebp-0x18],0x20
64019a8b:	je     0x64019a96
64019a8d:	mov    ax,WORD PTR [ebp-0x34]
64019a91:	mov    WORD PTR [esi],ax
64019a94:	jmp    0x64019a9b
64019a96:	mov    eax,DWORD PTR [ebp-0x34]
64019a99:	mov    DWORD PTR [esi],eax
64019a9b:	mov    DWORD PTR [ebp-0x68],0x1
64019aa2:	jmp    0x64019e2e
64019aa7:	or     DWORD PTR [ebp-0x18],0x40
64019aab:	mov    DWORD PTR [ebp-0x28],0xa
64019ab2:	mov    ecx,DWORD PTR [ebp-0x18]
64019ab5:	test   cx,cx
64019ab8:	jns    0x64019bff
64019abe:	add    edi,esi
64019ac0:	mov    eax,DWORD PTR [edi-0x8]
64019ac3:	mov    edx,DWORD PTR [edi-0x4]
64019ac6:	jmp    0x64019c34
64019acb:	jne    0x64019adb
64019acd:	cmp    dl,0x67
64019ad0:	jne    0x64019b1a
64019ad2:	mov    DWORD PTR [ebp-0x20],0x1
64019ad9:	jmp    0x64019b1a
64019adb:	cmp    DWORD PTR [ebp-0x20],eax
64019ade:	jle    0x64019ae3
64019ae0:	mov    DWORD PTR [ebp-0x20],eax
64019ae3:	cmp    DWORD PTR [ebp-0x20],0xa3
64019aea:	jle    0x64019b1a
64019aec:	mov    esi,DWORD PTR [ebp-0x20]
64019aef:	add    esi,0x15d
64019af5:	push   esi
64019af6:	call   0x64012630
64019afb:	test   eax,eax
64019afd:	mov    dl,BYTE PTR [ebp-0x19]
64019b00:	pop    ecx
64019b01:	mov    DWORD PTR [ebp-0x60],eax
64019b04:	push   0x8
64019b06:	je     0x64019b12
64019b08:	mov    DWORD PTR [ebp-0x24],eax
64019b0b:	mov    DWORD PTR [ebp-0x6c],esi
64019b0e:	mov    ebx,eax
64019b10:	jmp    0x64019b19
64019b12:	mov    DWORD PTR [ebp-0x20],0xa3
64019b19:	pop    esi
64019b1a:	add    edi,esi
64019b1c:	mov    eax,DWORD PTR [edi-0x8]
64019b1f:	mov    DWORD PTR [ebp-0x80],eax
64019b22:	mov    eax,DWORD PTR [edi-0x4]
64019b25:	mov    DWORD PTR [ebp-0x7c],eax
64019b28:	lea    eax,[ebp-0x5c]
64019b2b:	push   eax
64019b2c:	push   DWORD PTR [ebp-0x74]
64019b2f:	movsx  eax,dl
64019b32:	push   DWORD PTR [ebp-0x20]
64019b35:	mov    DWORD PTR [ebp-0x2c],edi
64019b38:	push   eax
64019b39:	push   DWORD PTR [ebp-0x6c]
64019b3c:	lea    eax,[ebp-0x80]
64019b3f:	push   ebx
64019b40:	push   eax
64019b41:	push   DWORD PTR ds:0x64028af4
64019b47:	call   0x6401124f
64019b4c:	pop    ecx
64019b4d:	call   eax
64019b4f:	mov    edi,DWORD PTR [ebp-0x18]
64019b52:	add    esp,0x1c
64019b55:	and    edi,0x80
64019b5b:	je     0x64019b78
64019b5d:	cmp    DWORD PTR [ebp-0x20],0x0
64019b61:	jne    0x64019b78
64019b63:	lea    eax,[ebp-0x5c]
64019b66:	push   eax
64019b67:	push   ebx
64019b68:	push   DWORD PTR ds:0x64028b00
64019b6e:	call   0x6401124f
64019b73:	pop    ecx
64019b74:	call   eax
64019b76:	pop    ecx
64019b77:	pop    ecx
64019b78:	cmp    BYTE PTR [ebp-0x19],0x67
64019b7c:	jne    0x64019b97
64019b7e:	test   edi,edi
64019b80:	jne    0x64019b97
64019b82:	lea    eax,[ebp-0x5c]
64019b85:	push   eax
64019b86:	push   ebx
64019b87:	push   DWORD PTR ds:0x64028afc
64019b8d:	call   0x6401124f
64019b92:	pop    ecx
64019b93:	call   eax
64019b95:	pop    ecx
64019b96:	pop    ecx
64019b97:	cmp    BYTE PTR [ebx],0x2d
64019b9a:	jne    0x64019ba7
64019b9c:	or     DWORD PTR [ebp-0x18],0x100
64019ba3:	inc    ebx
64019ba4:	mov    DWORD PTR [ebp-0x24],ebx
64019ba7:	push   ebx
64019ba8:	jmp    0x64019a21
64019bad:	mov    DWORD PTR [ebp-0x20],esi
64019bb0:	mov    DWORD PTR [ebp-0x64],ecx
64019bb3:	jmp    0x64019bd6
64019bb5:	sub    eax,0x73
64019bb8:	je     0x64019933
64019bbe:	dec    eax
64019bbf:	dec    eax
64019bc0:	je     0x64019aab
64019bc6:	sub    eax,0x3
64019bc9:	jne    0x64019d29
64019bcf:	mov    DWORD PTR [ebp-0x64],0x27
64019bd6:	test   BYTE PTR [ebp-0x18],0x80
64019bda:	mov    DWORD PTR [ebp-0x28],0x10
64019be1:	je     0x64019ab2
64019be7:	mov    al,BYTE PTR [ebp-0x64]
64019bea:	add    al,0x51
64019bec:	mov    BYTE PTR [ebp-0x38],0x30
64019bf0:	mov    BYTE PTR [ebp-0x37],al
64019bf3:	mov    DWORD PTR [ebp-0x3c],0x2
64019bfa:	jmp    0x64019ab2
64019bff:	test   cx,0x1000
64019c04:	jne    0x64019abe
64019c0a:	add    edi,0x4
64019c0d:	test   cl,0x20
64019c10:	je     0x64019c27
64019c12:	test   cl,0x40
64019c15:	mov    DWORD PTR [ebp-0x2c],edi
64019c18:	je     0x64019c20
64019c1a:	movsx  eax,WORD PTR [edi-0x4]
64019c1e:	jmp    0x64019c24
64019c20:	movzx  eax,WORD PTR [edi-0x4]
64019c24:	cdq    
64019c25:	jmp    0x64019c37
64019c27:	test   cl,0x40
64019c2a:	mov    eax,DWORD PTR [edi-0x4]
64019c2d:	je     0x64019c32
64019c2f:	cdq    
64019c30:	jmp    0x64019c34
64019c32:	xor    edx,edx
64019c34:	mov    DWORD PTR [ebp-0x2c],edi
64019c37:	test   cl,0x40
64019c3a:	je     0x64019c54
64019c3c:	test   edx,edx
64019c3e:	jg     0x64019c54
64019c40:	jl     0x64019c46
64019c42:	test   eax,eax
64019c44:	jae    0x64019c54
64019c46:	neg    eax
64019c48:	adc    edx,0x0
64019c4b:	neg    edx
64019c4d:	or     DWORD PTR [ebp-0x18],0x100
64019c54:	test   WORD PTR [ebp-0x18],0x9000
64019c5a:	mov    ebx,edx
64019c5c:	mov    edi,eax
64019c5e:	jne    0x64019c62
64019c60:	xor    ebx,ebx
64019c62:	cmp    DWORD PTR [ebp-0x20],0x0
64019c66:	jge    0x64019c71
64019c68:	mov    DWORD PTR [ebp-0x20],0x1
64019c6f:	jmp    0x64019c82
64019c71:	and    DWORD PTR [ebp-0x18],0xfffffff7
64019c75:	mov    eax,0x200
64019c7a:	cmp    DWORD PTR [ebp-0x20],eax
64019c7d:	jle    0x64019c82
64019c7f:	mov    DWORD PTR [ebp-0x20],eax
64019c82:	mov    eax,edi
64019c84:	or     eax,ebx
64019c86:	jne    0x64019c8b
64019c88:	and    DWORD PTR [ebp-0x3c],eax
64019c8b:	lea    esi,[ebp+0x1eb]
64019c91:	mov    eax,DWORD PTR [ebp-0x20]
64019c94:	dec    DWORD PTR [ebp-0x20]
64019c97:	test   eax,eax
64019c99:	jg     0x64019ca1
64019c9b:	mov    eax,edi
64019c9d:	or     eax,ebx
64019c9f:	je     0x64019cc5
64019ca1:	mov    eax,DWORD PTR [ebp-0x28]
64019ca4:	cdq    
64019ca5:	push   edx
64019ca6:	push   eax
64019ca7:	push   ebx
64019ca8:	push   edi
64019ca9:	call   0x64016280
64019cae:	add    ecx,0x30
64019cb1:	cmp    ecx,0x39
64019cb4:	mov    DWORD PTR [ebp-0x6c],ebx
64019cb7:	mov    edi,eax
64019cb9:	mov    ebx,edx
64019cbb:	jle    0x64019cc0
64019cbd:	add    ecx,DWORD PTR [ebp-0x64]
64019cc0:	mov    BYTE PTR [esi],cl
64019cc2:	dec    esi
64019cc3:	jmp    0x64019c91
64019cc5:	lea    eax,[ebp+0x1eb]
64019ccb:	sub    eax,esi
64019ccd:	inc    esi
64019cce:	test   WORD PTR [ebp-0x18],0x200
64019cd4:	mov    DWORD PTR [ebp-0x28],eax
64019cd7:	mov    DWORD PTR [ebp-0x24],esi
64019cda:	je     0x64019d29
64019cdc:	test   eax,eax
64019cde:	je     0x64019ce7
64019ce0:	mov    ecx,esi
64019ce2:	cmp    BYTE PTR [ecx],0x30
64019ce5:	je     0x64019d29
64019ce7:	dec    DWORD PTR [ebp-0x24]
64019cea:	mov    ecx,DWORD PTR [ebp-0x24]
64019ced:	mov    BYTE PTR [ecx],0x30
64019cf0:	inc    eax
64019cf1:	jmp    0x64019d26
64019cf3:	dec    ecx
64019cf4:	cmp    WORD PTR [eax],0x0
64019cf8:	je     0x64019d00
64019cfa:	inc    eax
64019cfb:	inc    eax
64019cfc:	test   ecx,ecx
64019cfe:	jne    0x64019cf3
64019d00:	sub    eax,DWORD PTR [ebp-0x24]
64019d03:	sar    eax,1
64019d05:	jmp    0x64019d26
64019d07:	test   edi,edi
64019d09:	jne    0x64019d13
64019d0b:	mov    eax,ds:0x640288e0
64019d10:	mov    DWORD PTR [ebp-0x24],eax
64019d13:	mov    eax,DWORD PTR [ebp-0x24]
64019d16:	jmp    0x64019d1f
64019d18:	dec    ecx
64019d19:	cmp    BYTE PTR [eax],0x0
64019d1c:	je     0x64019d23
64019d1e:	inc    eax
64019d1f:	test   ecx,ecx
64019d21:	jne    0x64019d18
64019d23:	sub    eax,DWORD PTR [ebp-0x24]
64019d26:	mov    DWORD PTR [ebp-0x28],eax
64019d29:	cmp    DWORD PTR [ebp-0x68],0x0
64019d2d:	jne    0x64019e2e
64019d33:	mov    eax,DWORD PTR [ebp-0x18]
64019d36:	test   al,0x40
64019d38:	je     0x64019d5f
64019d3a:	test   ax,0x100
64019d3e:	je     0x64019d46
64019d40:	mov    BYTE PTR [ebp-0x38],0x2d
64019d44:	jmp    0x64019d58
64019d46:	test   al,0x1
64019d48:	je     0x64019d50
64019d4a:	mov    BYTE PTR [ebp-0x38],0x2b
64019d4e:	jmp    0x64019d58
64019d50:	test   al,0x2
64019d52:	je     0x64019d5f
64019d54:	mov    BYTE PTR [ebp-0x38],0x20
64019d58:	mov    DWORD PTR [ebp-0x3c],0x1
64019d5f:	mov    ebx,DWORD PTR [ebp-0x40]
64019d62:	sub    ebx,DWORD PTR [ebp-0x28]
64019d65:	sub    ebx,DWORD PTR [ebp-0x3c]
64019d68:	test   BYTE PTR [ebp-0x18],0xc
64019d6c:	jne    0x64019d7f
64019d6e:	push   DWORD PTR [ebp-0x30]
64019d71:	lea    eax,[ebp-0x34]
64019d74:	push   ebx
64019d75:	push   0x20
64019d77:	call   0x6401572d
64019d7c:	add    esp,0xc
64019d7f:	push   DWORD PTR [ebp-0x3c]
64019d82:	mov    edi,DWORD PTR [ebp-0x30]
64019d85:	lea    eax,[ebp-0x34]
64019d88:	lea    ecx,[ebp-0x38]
64019d8b:	call   0x64015751
64019d90:	test   BYTE PTR [ebp-0x18],0x8
64019d94:	pop    ecx
64019d95:	je     0x64019dac
64019d97:	test   BYTE PTR [ebp-0x18],0x4
64019d9b:	jne    0x64019dac
64019d9d:	push   edi
64019d9e:	push   ebx
64019d9f:	push   0x30
64019da1:	lea    eax,[ebp-0x34]
64019da4:	call   0x6401572d
64019da9:	add    esp,0xc
64019dac:	cmp    DWORD PTR [ebp-0x44],0x0
64019db0:	mov    eax,DWORD PTR [ebp-0x28]
64019db3:	je     0x64019e06
64019db5:	test   eax,eax
64019db7:	jle    0x64019e06
64019db9:	mov    esi,DWORD PTR [ebp-0x24]
64019dbc:	mov    DWORD PTR [ebp-0x6c],eax
64019dbf:	movzx  eax,WORD PTR [esi]
64019dc2:	dec    DWORD PTR [ebp-0x6c]
64019dc5:	push   eax
64019dc6:	push   0x6
64019dc8:	lea    eax,[ebp+0x1ec]
64019dce:	push   eax
64019dcf:	lea    eax,[ebp-0x78]
64019dd2:	inc    esi
64019dd3:	push   eax
64019dd4:	inc    esi
64019dd5:	call   0x6401a341
64019dda:	add    esp,0x10
64019ddd:	test   eax,eax
64019ddf:	jne    0x64019e00
64019de1:	cmp    DWORD PTR [ebp-0x78],eax
64019de4:	je     0x64019e00
64019de6:	push   DWORD PTR [ebp-0x78]
64019de9:	lea    eax,[ebp-0x34]
64019dec:	lea    ecx,[ebp+0x1ec]
64019df2:	call   0x64015751
64019df7:	cmp    DWORD PTR [ebp-0x6c],0x0
64019dfb:	pop    ecx
64019dfc:	jne    0x64019dbf
64019dfe:	jmp    0x64019e13
64019e00:	or     DWORD PTR [ebp-0x34],0xffffffff
64019e04:	jmp    0x64019e13
64019e06:	mov    ecx,DWORD PTR [ebp-0x24]
64019e09:	push   eax
64019e0a:	lea    eax,[ebp-0x34]
64019e0d:	call   0x64015751
64019e12:	pop    ecx
64019e13:	cmp    DWORD PTR [ebp-0x34],0x0
64019e17:	jl     0x64019e2e
64019e19:	test   BYTE PTR [ebp-0x18],0x4
64019e1d:	je     0x64019e2e
64019e1f:	push   edi
64019e20:	push   ebx
64019e21:	push   0x20
64019e23:	lea    eax,[ebp-0x34]
64019e26:	call   0x6401572d
64019e2b:	add    esp,0xc
64019e2e:	cmp    DWORD PTR [ebp-0x60],0x0
64019e32:	je     0x64019e41
64019e34:	push   DWORD PTR [ebp-0x60]
64019e37:	call   0x640101e6
64019e3c:	and    DWORD PTR [ebp-0x60],0x0
64019e40:	pop    ecx
64019e41:	mov    ebx,DWORD PTR [ebp-0x4c]
64019e44:	mov    al,BYTE PTR [ebx]
64019e46:	test   al,al
64019e48:	mov    BYTE PTR [ebp-0x19],al
64019e4b:	je     0x64019e6e
64019e4d:	mov    edi,DWORD PTR [ebp-0x2c]
64019e50:	mov    dl,al
64019e52:	jmp    0x64019677
64019e57:	call   0x64011120
64019e5c:	mov    DWORD PTR [eax],0x16
64019e62:	xor    eax,eax
64019e64:	push   eax
64019e65:	push   eax
64019e66:	push   eax
64019e67:	push   eax
64019e68:	push   eax
64019e69:	jmp    0x64019588
64019e6e:	xor    esi,esi
64019e70:	cmp    DWORD PTR [ebp-0x48],esi
64019e73:	je     0x64019e7f
64019e75:	cmp    DWORD PTR [ebp-0x48],0x7
64019e79:	jne    0x64019578
64019e7f:	cmp    BYTE PTR [ebp-0x50],0x0
64019e83:	je     0x64019e8c
64019e85:	mov    eax,DWORD PTR [ebp-0x54]
64019e88:	and    DWORD PTR [eax+0x70],0xfffffffd
64019e8c:	mov    eax,DWORD PTR [ebp-0x34]
64019e8f:	mov    ecx,DWORD PTR [ebp+0x1f4]
64019e95:	pop    edi
64019e96:	pop    esi
64019e97:	xor    ecx,ebp
64019e99:	pop    ebx
64019e9a:	call   0x6400f34e
64019e9f:	add    ebp,0x1f8
64019ea5:	leave  
64019ea6:	ret    
64019ea7:	nop
64019ea8:	imul   ebx,DWORD PTR [eax-0x69319bff],0x96eb6401
64019eb2:	add    DWORD PTR [eax+edi*1-0x69],esp
64019eb6:	add    DWORD PTR [edx+esi*2-0x69],esp
64019eba:	add    DWORD PTR [ebx+edi*2-0x69],esp
64019ebe:	add    DWORD PTR [edx+esi*4-0x69],esp
64019ec2:	add    DWORD PTR [esp+ebp*4-0x68],esp
64019ec6:	add    DWORD PTR [ebp+edx*2-0x75],esp
64019eca:	in     al,dx
64019ecb:	sub    esp,0xc
64019ece:	mov    eax,ds:0x64028038
64019ed3:	xor    eax,ebp
64019ed5:	mov    DWORD PTR [ebp-0x4],eax
64019ed8:	push   0x6
64019eda:	lea    eax,[ebp-0xc]
64019edd:	push   eax
64019ede:	push   0x1004
64019ee3:	push   DWORD PTR [ebp+0x8]
64019ee6:	mov    BYTE PTR [ebp-0x6],0x0
64019eea:	call   DWORD PTR ds:0x640210d4
64019ef0:	test   eax,eax
64019ef2:	jne    0x64019ef9
64019ef4:	or     eax,0xffffffff
64019ef7:	jmp    0x64019f03
64019ef9:	lea    eax,[ebp-0xc]
64019efc:	push   eax
64019efd:	call   0x6401a594
64019f02:	pop    ecx
64019f03:	mov    ecx,DWORD PTR [ebp-0x4]
64019f06:	xor    ecx,ebp
64019f08:	call   0x6400f34e
64019f0d:	leave  
64019f0e:	ret    
64019f0f:	push   ebp
64019f10:	mov    ebp,esp
64019f12:	sub    esp,0x34
64019f15:	mov    eax,ds:0x64028038
64019f1a:	xor    eax,ebp
64019f1c:	mov    DWORD PTR [ebp-0x4],eax
64019f1f:	mov    eax,DWORD PTR [ebp+0x10]
64019f22:	mov    ecx,DWORD PTR [ebp+0x18]
64019f25:	mov    DWORD PTR [ebp-0x28],eax
64019f28:	mov    eax,DWORD PTR [ebp+0x14]
64019f2b:	push   ebx
64019f2c:	mov    DWORD PTR [ebp-0x30],eax
64019f2f:	mov    eax,DWORD PTR [eax]
64019f31:	push   esi
64019f32:	mov    DWORD PTR [ebp-0x24],eax
64019f35:	mov    eax,DWORD PTR [ebp+0x8]
64019f38:	push   edi
64019f39:	xor    edi,edi
64019f3b:	cmp    eax,DWORD PTR [ebp+0xc]
64019f3e:	mov    DWORD PTR [ebp-0x34],ecx
64019f41:	mov    DWORD PTR [ebp-0x20],edi
64019f44:	mov    DWORD PTR [ebp-0x2c],edi
64019f47:	je     0x6401a0ac
64019f4d:	mov    esi,DWORD PTR ds:0x64021130
64019f53:	lea    ecx,[ebp-0x18]
64019f56:	push   ecx
64019f57:	push   eax
64019f58:	call   esi
64019f5a:	test   eax,eax
64019f5c:	mov    ebx,DWORD PTR ds:0x6402103c
64019f62:	je     0x64019fc2
64019f64:	cmp    DWORD PTR [ebp-0x18],0x1
64019f68:	jne    0x64019fc2
64019f6a:	lea    eax,[ebp-0x18]
64019f6d:	push   eax
64019f6e:	push   DWORD PTR [ebp+0xc]
64019f71:	call   esi
64019f73:	test   eax,eax
64019f75:	je     0x64019fc2
64019f77:	cmp    DWORD PTR [ebp-0x18],0x1
64019f7b:	jne    0x64019fc2
64019f7d:	mov    esi,DWORD PTR [ebp-0x24]
64019f80:	cmp    esi,0xffffffff
64019f83:	mov    DWORD PTR [ebp-0x2c],0x1
64019f8a:	jne    0x64019f98
64019f8c:	push   DWORD PTR [ebp-0x28]
64019f8f:	call   0x64010b20
64019f94:	mov    esi,eax
64019f96:	pop    ecx
64019f97:	inc    esi
64019f98:	cmp    esi,edi
64019f9a:	jle    0x64019ff7
64019f9c:	cmp    esi,0x7ffffff0
64019fa2:	ja     0x64019ff7
64019fa4:	lea    eax,[esi+esi*1+0x8]
64019fa8:	cmp    eax,0x400
64019fad:	ja     0x64019fde
64019faf:	call   0x6400fad0
64019fb4:	mov    eax,esp
64019fb6:	cmp    eax,edi
64019fb8:	je     0x64019ff2
64019fba:	mov    DWORD PTR [eax],0xcccc
64019fc0:	jmp    0x64019fef
64019fc2:	push   edi
64019fc3:	push   edi
64019fc4:	push   DWORD PTR [ebp-0x24]
64019fc7:	push   DWORD PTR [ebp-0x28]
64019fca:	push   0x1
64019fcc:	push   DWORD PTR [ebp+0x8]
64019fcf:	call   ebx
64019fd1:	mov    esi,eax
64019fd3:	cmp    esi,edi
64019fd5:	jne    0x64019f9a
64019fd7:	xor    eax,eax
64019fd9:	jmp    0x6401a0af
64019fde:	push   eax
64019fdf:	call   0x640102c3
64019fe4:	cmp    eax,edi
64019fe6:	pop    ecx
64019fe7:	je     0x64019ff2
64019fe9:	mov    DWORD PTR [eax],0xdddd
64019fef:	add    eax,0x8
64019ff2:	mov    DWORD PTR [ebp-0x1c],eax
64019ff5:	jmp    0x64019ffa
64019ff7:	mov    DWORD PTR [ebp-0x1c],edi
64019ffa:	cmp    DWORD PTR [ebp-0x1c],edi
64019ffd:	je     0x64019fd7
64019fff:	lea    eax,[esi+esi*1]
6401a002:	push   eax
6401a003:	push   edi
6401a004:	push   DWORD PTR [ebp-0x1c]
6401a007:	call   0x6400fa50
6401a00c:	add    esp,0xc
6401a00f:	push   esi
6401a010:	push   DWORD PTR [ebp-0x1c]
6401a013:	push   DWORD PTR [ebp-0x24]
6401a016:	push   DWORD PTR [ebp-0x28]
6401a019:	push   0x1
6401a01b:	push   DWORD PTR [ebp+0x8]
6401a01e:	call   ebx
6401a020:	test   eax,eax
6401a022:	je     0x6401a0a3
6401a024:	mov    ebx,DWORD PTR [ebp-0x34]
6401a027:	cmp    ebx,edi
6401a029:	je     0x6401a048
6401a02b:	push   edi
6401a02c:	push   edi
6401a02d:	push   DWORD PTR [ebp+0x1c]
6401a030:	push   ebx
6401a031:	push   esi
6401a032:	push   DWORD PTR [ebp-0x1c]
6401a035:	push   edi
6401a036:	push   DWORD PTR [ebp+0xc]
6401a039:	call   DWORD PTR ds:0x64021024
6401a03f:	test   eax,eax
6401a041:	je     0x6401a0a3
6401a043:	mov    DWORD PTR [ebp-0x20],ebx
6401a046:	jmp    0x6401a0a3
6401a048:	cmp    DWORD PTR [ebp-0x2c],edi
6401a04b:	mov    ebx,DWORD PTR ds:0x64021024
6401a051:	jne    0x6401a067
6401a053:	push   edi
6401a054:	push   edi
6401a055:	push   edi
6401a056:	push   edi
6401a057:	push   esi
6401a058:	push   DWORD PTR [ebp-0x1c]
6401a05b:	push   edi
6401a05c:	push   DWORD PTR [ebp+0xc]
6401a05f:	call   ebx
6401a061:	mov    esi,eax
6401a063:	cmp    esi,edi
6401a065:	je     0x6401a0a3
6401a067:	push   esi
6401a068:	push   0x1
6401a06a:	call   0x64012670
6401a06f:	cmp    eax,edi
6401a071:	pop    ecx
6401a072:	pop    ecx
6401a073:	mov    DWORD PTR [ebp-0x20],eax
6401a076:	je     0x6401a0a3
6401a078:	push   edi
6401a079:	push   edi
6401a07a:	push   esi
6401a07b:	push   eax
6401a07c:	push   esi
6401a07d:	push   DWORD PTR [ebp-0x1c]
6401a080:	push   edi
6401a081:	push   DWORD PTR [ebp+0xc]
6401a084:	call   ebx
6401a086:	cmp    eax,edi
6401a088:	jne    0x6401a098
6401a08a:	push   DWORD PTR [ebp-0x20]
6401a08d:	call   0x640101e6
6401a092:	pop    ecx
6401a093:	mov    DWORD PTR [ebp-0x20],edi
6401a096:	jmp    0x6401a0a3
6401a098:	cmp    DWORD PTR [ebp-0x24],0xffffffff
6401a09c:	je     0x6401a0a3
6401a09e:	mov    ecx,DWORD PTR [ebp-0x30]
6401a0a1:	mov    DWORD PTR [ecx],eax
6401a0a3:	push   DWORD PTR [ebp-0x1c]
6401a0a6:	call   0x6400f85e
6401a0ab:	pop    ecx
6401a0ac:	mov    eax,DWORD PTR [ebp-0x20]
6401a0af:	lea    esp,[ebp-0x40]
6401a0b2:	pop    edi
6401a0b3:	pop    esi
6401a0b4:	pop    ebx
6401a0b5:	mov    ecx,DWORD PTR [ebp-0x4]
6401a0b8:	xor    ecx,ebp
6401a0ba:	call   0x6400f34e
6401a0bf:	leave  
6401a0c0:	ret    
6401a0c1:	push   0xc
6401a0c3:	push   0x64025c10
6401a0c8:	call   0x640106f8
6401a0cd:	and    DWORD PTR [ebp-0x4],0x0
6401a0d1:	movapd xmm0,xmm1
6401a0d5:	mov    DWORD PTR [ebp-0x1c],0x1
6401a0dc:	jmp    0x6401a101
6401a0de:	mov    eax,DWORD PTR [ebp-0x14]
6401a0e1:	mov    eax,DWORD PTR [eax]
6401a0e3:	mov    eax,DWORD PTR [eax]
6401a0e5:	cmp    eax,0xc0000005
6401a0ea:	je     0x6401a0f6
6401a0ec:	cmp    eax,0xc000001d
6401a0f1:	je     0x6401a0f6
6401a0f3:	xor    eax,eax
6401a0f5:	ret    
6401a0f6:	xor    eax,eax
6401a0f8:	inc    eax
6401a0f9:	ret    
6401a0fa:	mov    esp,DWORD PTR [ebp-0x18]
6401a0fd:	and    DWORD PTR [ebp-0x1c],0x0
6401a101:	mov    DWORD PTR [ebp-0x4],0xfffffffe
6401a108:	mov    eax,DWORD PTR [ebp-0x1c]
6401a10b:	call   0x6401073d
6401a110:	ret    
6401a111:	push   ebp
6401a112:	mov    ebp,esp
6401a114:	sub    esp,0x18
6401a117:	xor    eax,eax
6401a119:	push   ebx
6401a11a:	mov    DWORD PTR [ebp-0x4],eax
6401a11d:	mov    DWORD PTR [ebp-0xc],eax
6401a120:	mov    DWORD PTR [ebp-0x8],eax
6401a123:	push   ebx
6401a124:	pushf  
6401a125:	pop    eax
6401a126:	mov    ecx,eax
6401a128:	xor    eax,0x200000
6401a12d:	push   eax
6401a12e:	popf   
6401a12f:	pushf  
6401a130:	pop    edx
6401a131:	sub    edx,ecx
6401a133:	je     0x6401a154
6401a135:	push   ecx
6401a136:	popf   
6401a137:	xor    eax,eax
6401a139:	cpuid  
6401a13b:	mov    DWORD PTR [ebp-0xc],eax
6401a13e:	mov    DWORD PTR [ebp-0x18],ebx
6401a141:	mov    DWORD PTR [ebp-0x14],edx
6401a144:	mov    DWORD PTR [ebp-0x10],ecx
6401a147:	mov    eax,0x1
6401a14c:	cpuid  
6401a14e:	mov    DWORD PTR [ebp-0x4],edx
6401a151:	mov    DWORD PTR [ebp-0x8],eax
6401a154:	pop    ebx
6401a155:	test   DWORD PTR [ebp-0x4],0x4000000
6401a15c:	je     0x6401a16c
6401a15e:	call   0x6401a0c1
6401a163:	test   eax,eax
6401a165:	je     0x6401a16c
6401a167:	xor    eax,eax
6401a169:	inc    eax
6401a16a:	jmp    0x6401a16e
6401a16c:	xor    eax,eax
6401a16e:	pop    ebx
6401a16f:	leave  
6401a170:	ret    
6401a171:	call   0x6401a111
6401a176:	mov    ds:0x6402d584,eax
6401a17b:	xor    eax,eax
6401a17d:	ret    
6401a17e:	push   ebp
6401a17f:	mov    ebp,esp
6401a181:	sub    esp,0x10
6401a184:	push   DWORD PTR [ebp+0x8]
6401a187:	lea    ecx,[ebp-0x10]
6401a18a:	call   0x6400f4f1
6401a18f:	movzx  eax,BYTE PTR [ebp+0xc]
6401a193:	mov    ecx,DWORD PTR [ebp-0xc]
6401a196:	mov    dl,BYTE PTR [ebp+0x14]
6401a199:	test   BYTE PTR [ecx+eax*1+0x1d],dl
6401a19d:	jne    0x6401a1bd
6401a19f:	cmp    DWORD PTR [ebp+0x10],0x0
6401a1a3:	je     0x6401a1b7
6401a1a5:	mov    ecx,DWORD PTR [ebp-0x10]
6401a1a8:	mov    ecx,DWORD PTR [ecx+0xc8]
6401a1ae:	movzx  eax,WORD PTR [ecx+eax*2]
6401a1b2:	and    eax,DWORD PTR [ebp+0x10]
6401a1b5:	jmp    0x6401a1b9
6401a1b7:	xor    eax,eax
6401a1b9:	test   eax,eax
6401a1bb:	je     0x6401a1c0
6401a1bd:	xor    eax,eax
6401a1bf:	inc    eax
6401a1c0:	cmp    BYTE PTR [ebp-0x4],0x0
6401a1c4:	je     0x6401a1cd
6401a1c6:	mov    ecx,DWORD PTR [ebp-0x8]
6401a1c9:	and    DWORD PTR [ecx+0x70],0xfffffffd
6401a1cd:	leave  
6401a1ce:	ret    
6401a1cf:	push   0x4
6401a1d1:	push   0x0
6401a1d3:	push   DWORD PTR [esp+0xc]
6401a1d7:	push   0x0
6401a1d9:	call   0x6401a17e
6401a1de:	add    esp,0x10
6401a1e1:	ret    
6401a1e2:	push   ebp
6401a1e3:	mov    ebp,esp
6401a1e5:	sub    esp,0x10
6401a1e8:	push   ebx
6401a1e9:	push   esi
6401a1ea:	mov    esi,DWORD PTR [ebp+0xc]
6401a1ed:	xor    ebx,ebx
6401a1ef:	cmp    esi,ebx
6401a1f1:	push   edi
6401a1f2:	mov    edi,DWORD PTR [ebp+0x10]
6401a1f5:	jne    0x6401a208
6401a1f7:	cmp    edi,ebx
6401a1f9:	jbe    0x6401a208
6401a1fb:	mov    eax,DWORD PTR [ebp+0x8]
6401a1fe:	cmp    eax,ebx
6401a200:	je     0x6401a204
6401a202:	mov    DWORD PTR [eax],ebx
6401a204:	xor    eax,eax
6401a206:	jmp    0x6401a287
6401a208:	mov    eax,DWORD PTR [ebp+0x8]
6401a20b:	cmp    eax,ebx
6401a20d:	je     0x6401a212
6401a20f:	or     DWORD PTR [eax],0xffffffff
6401a212:	cmp    edi,0x7fffffff
6401a218:	jbe    0x6401a235
6401a21a:	call   0x64011120
6401a21f:	push   0x16
6401a221:	pop    esi
6401a222:	push   ebx
6401a223:	push   ebx
6401a224:	push   ebx
6401a225:	push   ebx
6401a226:	push   ebx
6401a227:	mov    DWORD PTR [eax],esi
6401a229:	call   0x6400ee86
6401a22e:	add    esp,0x14
6401a231:	mov    eax,esi
6401a233:	jmp    0x6401a287
6401a235:	push   DWORD PTR [ebp+0x18]
6401a238:	lea    ecx,[ebp-0x10]
6401a23b:	call   0x6400f4f1
6401a240:	mov    eax,DWORD PTR [ebp-0x10]
6401a243:	cmp    DWORD PTR [eax+0x14],ebx
6401a246:	jne    0x6401a2e0
6401a24c:	mov    ax,WORD PTR [ebp+0x14]
6401a250:	cmp    ax,0xff
6401a254:	jbe    0x6401a28c
6401a256:	cmp    esi,ebx
6401a258:	je     0x6401a269
6401a25a:	cmp    edi,ebx
6401a25c:	jbe    0x6401a269
6401a25e:	push   edi
6401a25f:	push   ebx
6401a260:	push   esi
6401a261:	call   0x6400fa50
6401a266:	add    esp,0xc
6401a269:	call   0x64011120
6401a26e:	mov    DWORD PTR [eax],0x2a
6401a274:	call   0x64011120
6401a279:	cmp    BYTE PTR [ebp-0x4],bl
6401a27c:	mov    eax,DWORD PTR [eax]
6401a27e:	je     0x6401a287
6401a280:	mov    ecx,DWORD PTR [ebp-0x8]
6401a283:	and    DWORD PTR [ecx+0x70],0xfffffffd
6401a287:	pop    edi
6401a288:	pop    esi
6401a289:	pop    ebx
6401a28a:	leave  
6401a28b:	ret    
6401a28c:	cmp    esi,ebx
6401a28e:	je     0x6401a2be
6401a290:	cmp    edi,ebx
6401a292:	ja     0x6401a2bc
6401a294:	call   0x64011120
6401a299:	push   0x22
6401a29b:	pop    esi
6401a29c:	push   ebx
6401a29d:	push   ebx
6401a29e:	push   ebx
6401a29f:	push   ebx
6401a2a0:	push   ebx
6401a2a1:	mov    DWORD PTR [eax],esi
6401a2a3:	call   0x6400ee86
6401a2a8:	add    esp,0x14
6401a2ab:	cmp    BYTE PTR [ebp-0x4],bl
6401a2ae:	je     0x6401a231
6401a2b0:	mov    eax,DWORD PTR [ebp-0x8]
6401a2b3:	and    DWORD PTR [eax+0x70],0xfffffffd
6401a2b7:	jmp    0x6401a231
6401a2bc:	mov    BYTE PTR [esi],al
6401a2be:	mov    eax,DWORD PTR [ebp+0x8]
6401a2c1:	cmp    eax,ebx
6401a2c3:	je     0x6401a2cb
6401a2c5:	mov    DWORD PTR [eax],0x1
6401a2cb:	cmp    BYTE PTR [ebp-0x4],bl
6401a2ce:	je     0x6401a204
6401a2d4:	mov    eax,DWORD PTR [ebp-0x8]
6401a2d7:	and    DWORD PTR [eax+0x70],0xfffffffd
6401a2db:	jmp    0x6401a204
6401a2e0:	lea    ecx,[ebp+0xc]
6401a2e3:	push   ecx
6401a2e4:	push   ebx
6401a2e5:	push   edi
6401a2e6:	push   esi
6401a2e7:	push   0x1
6401a2e9:	lea    ecx,[ebp+0x14]
6401a2ec:	push   ecx
6401a2ed:	push   ebx
6401a2ee:	mov    DWORD PTR [ebp+0xc],ebx
6401a2f1:	push   DWORD PTR [eax+0x4]
6401a2f4:	call   DWORD PTR ds:0x64021024
6401a2fa:	cmp    eax,ebx
6401a2fc:	je     0x6401a312
6401a2fe:	cmp    DWORD PTR [ebp+0xc],ebx
6401a301:	jne    0x6401a269
6401a307:	mov    ecx,DWORD PTR [ebp+0x8]
6401a30a:	cmp    ecx,ebx
6401a30c:	je     0x6401a2cb
6401a30e:	mov    DWORD PTR [ecx],eax
6401a310:	jmp    0x6401a2cb
6401a312:	call   DWORD PTR ds:0x64021044
6401a318:	cmp    eax,0x7a
6401a31b:	jne    0x6401a269
6401a321:	cmp    esi,ebx
6401a323:	je     0x6401a294
6401a329:	cmp    edi,ebx
6401a32b:	jbe    0x6401a294
6401a331:	push   edi
6401a332:	push   ebx
6401a333:	push   esi
6401a334:	call   0x6400fa50
6401a339:	add    esp,0xc
6401a33c:	jmp    0x6401a294
6401a341:	push   0x0
6401a343:	push   DWORD PTR [esp+0x14]
6401a347:	push   DWORD PTR [esp+0x14]
6401a34b:	push   DWORD PTR [esp+0x14]
6401a34f:	push   DWORD PTR [esp+0x14]
6401a353:	call   0x6401a1e2
6401a358:	add    esp,0x14
6401a35b:	ret    
6401a35c:	push   ebp
6401a35d:	mov    ebp,esp
6401a35f:	sub    esp,0x20
6401a362:	push   ebx
6401a363:	push   esi
6401a364:	push   edi
6401a365:	call   0x64011246
6401a36a:	xor    ebx,ebx
6401a36c:	cmp    DWORD PTR ds:0x64029efc,ebx
6401a372:	mov    DWORD PTR [ebp-0x8],eax
6401a375:	mov    DWORD PTR [ebp-0x4],ebx
6401a378:	mov    DWORD PTR [ebp-0xc],ebx
6401a37b:	mov    DWORD PTR [ebp-0x10],ebx
6401a37e:	jne    0x6401a432
6401a384:	push   0x64023460
6401a389:	call   DWORD PTR ds:0x640210b0
6401a38f:	mov    edi,eax
6401a391:	cmp    edi,ebx
6401a393:	je     0x6401a512
6401a399:	mov    esi,DWORD PTR ds:0x64021014
6401a39f:	push   0x64023454
6401a3a4:	push   edi
6401a3a5:	call   esi
6401a3a7:	cmp    eax,ebx
6401a3a9:	je     0x6401a512
6401a3af:	push   eax
6401a3b0:	call   0x640111d8
6401a3b5:	mov    DWORD PTR [esp],0x64023444
6401a3bc:	push   edi
6401a3bd:	mov    ds:0x64029efc,eax
6401a3c2:	call   esi
6401a3c4:	push   eax
6401a3c5:	call   0x640111d8
6401a3ca:	mov    DWORD PTR [esp],0x64023430
6401a3d1:	push   edi
6401a3d2:	mov    ds:0x64029f00,eax
6401a3d7:	call   esi
6401a3d9:	push   eax
6401a3da:	call   0x640111d8
6401a3df:	mov    ds:0x64029f04,eax
6401a3e4:	lea    eax,[ebp-0xc]
6401a3e7:	push   eax
6401a3e8:	call   0x6401284f
6401a3ed:	test   eax,eax
6401a3ef:	pop    ecx
6401a3f0:	pop    ecx
6401a3f1:	je     0x6401a400
6401a3f3:	push   ebx
6401a3f4:	push   ebx
6401a3f5:	push   ebx
6401a3f6:	push   ebx
6401a3f7:	push   ebx
6401a3f8:	call   0x6400ed8a
6401a3fd:	add    esp,0x14
6401a400:	cmp    DWORD PTR [ebp-0xc],0x2
6401a404:	jne    0x6401a432
6401a406:	push   0x64023414
6401a40b:	push   edi
6401a40c:	call   esi
6401a40e:	push   eax
6401a40f:	call   0x640111d8
6401a414:	cmp    eax,ebx
6401a416:	pop    ecx
6401a417:	mov    ds:0x64029f0c,eax
6401a41c:	je     0x6401a432
6401a41e:	push   0x640233fc
6401a423:	push   edi
6401a424:	call   esi
6401a426:	push   eax
6401a427:	call   0x640111d8
6401a42c:	pop    ecx
6401a42d:	mov    ds:0x64029f08,eax
6401a432:	mov    eax,ds:0x64029f08
6401a437:	mov    ecx,DWORD PTR [ebp-0x8]
6401a43a:	cmp    eax,ecx
6401a43c:	je     0x6401a4b7
6401a43e:	cmp    DWORD PTR ds:0x64029f0c,ecx
6401a444:	je     0x6401a4b7
6401a446:	push   eax
6401a447:	call   0x6401124f
6401a44c:	push   DWORD PTR ds:0x64029f0c
6401a452:	mov    esi,eax
6401a454:	call   0x6401124f
6401a459:	cmp    esi,ebx
6401a45b:	pop    ecx
6401a45c:	pop    ecx
6401a45d:	mov    edi,eax
6401a45f:	je     0x6401a4b7
6401a461:	cmp    edi,ebx
6401a463:	je     0x6401a4b7
6401a465:	call   esi
6401a467:	cmp    eax,ebx
6401a469:	je     0x6401a484
6401a46b:	lea    ecx,[ebp-0x14]
6401a46e:	push   ecx
6401a46f:	push   0xc
6401a471:	lea    ecx,[ebp-0x20]
6401a474:	push   ecx
6401a475:	push   0x1
6401a477:	push   eax
6401a478:	call   edi
6401a47a:	test   eax,eax
6401a47c:	je     0x6401a484
6401a47e:	test   BYTE PTR [ebp-0x18],0x1
6401a482:	jne    0x6401a4b7
6401a484:	lea    eax,[ebp-0x10]
6401a487:	push   eax
6401a488:	call   0x64012886
6401a48d:	test   eax,eax
6401a48f:	pop    ecx
6401a490:	je     0x6401a49f
6401a492:	push   ebx
6401a493:	push   ebx
6401a494:	push   ebx
6401a495:	push   ebx
6401a496:	push   ebx
6401a497:	call   0x6400ed8a
6401a49c:	add    esp,0x14
6401a49f:	cmp    DWORD PTR [ebp-0x10],0x4
6401a4a3:	jb     0x6401a4ae
6401a4a5:	or     DWORD PTR [ebp+0x10],0x200000
6401a4ac:	jmp    0x6401a4f2
6401a4ae:	or     DWORD PTR [ebp+0x10],0x40000
6401a4b5:	jmp    0x6401a4f2
6401a4b7:	mov    eax,ds:0x64029f00
6401a4bc:	cmp    eax,DWORD PTR [ebp-0x8]
6401a4bf:	je     0x6401a4f2
6401a4c1:	push   eax
6401a4c2:	call   0x6401124f
6401a4c7:	cmp    eax,ebx
6401a4c9:	pop    ecx
6401a4ca:	je     0x6401a4f2
6401a4cc:	call   eax
6401a4ce:	cmp    eax,ebx
6401a4d0:	mov    DWORD PTR [ebp-0x4],eax
6401a4d3:	je     0x6401a4f2
6401a4d5:	mov    eax,ds:0x64029f04
6401a4da:	cmp    eax,DWORD PTR [ebp-0x8]
6401a4dd:	je     0x6401a4f2
6401a4df:	push   eax
6401a4e0:	call   0x6401124f
6401a4e5:	cmp    eax,ebx
6401a4e7:	pop    ecx
6401a4e8:	je     0x6401a4f2
6401a4ea:	push   DWORD PTR [ebp-0x4]
6401a4ed:	call   eax
6401a4ef:	mov    DWORD PTR [ebp-0x4],eax
6401a4f2:	push   DWORD PTR ds:0x64029efc
6401a4f8:	call   0x6401124f
6401a4fd:	cmp    eax,ebx
6401a4ff:	pop    ecx
6401a500:	je     0x6401a512
6401a502:	push   DWORD PTR [ebp+0x10]
6401a505:	push   DWORD PTR [ebp+0xc]
6401a508:	push   DWORD PTR [ebp+0x8]
6401a50b:	push   DWORD PTR [ebp-0x4]
6401a50e:	call   eax
6401a510:	jmp    0x6401a514
6401a512:	xor    eax,eax
6401a514:	pop    edi
6401a515:	pop    esi
6401a516:	pop    ebx
6401a517:	leave  
6401a518:	ret    
6401a519:	mov    ecx,DWORD PTR [esp+0x4]
6401a51d:	push   esi
6401a51e:	xor    esi,esi
6401a520:	cmp    ecx,esi
6401a522:	jl     0x6401a542
6401a524:	cmp    ecx,0x2
6401a527:	jle    0x6401a535
6401a529:	cmp    ecx,0x3
6401a52c:	jne    0x6401a542
6401a52e:	mov    eax,ds:0x6402951c
6401a533:	pop    esi
6401a534:	ret    
6401a535:	mov    eax,ds:0x6402951c
6401a53a:	mov    DWORD PTR ds:0x6402951c,ecx
6401a540:	pop    esi
6401a541:	ret    
6401a542:	call   0x64011120
6401a547:	push   esi
6401a548:	push   esi
6401a549:	push   esi
6401a54a:	push   esi
6401a54b:	push   esi
6401a54c:	mov    DWORD PTR [eax],0x16
6401a552:	call   0x6400ee86
6401a557:	add    esp,0x14
6401a55a:	or     eax,0xffffffff
6401a55d:	pop    esi
6401a55e:	ret    
6401a55f:	int3   
6401a560:	mov    eax,DWORD PTR [esp+0x8]
6401a564:	mov    ecx,DWORD PTR [esp+0x10]
6401a568:	or     ecx,eax
6401a56a:	mov    ecx,DWORD PTR [esp+0xc]
6401a56e:	jne    0x6401a579
6401a570:	mov    eax,DWORD PTR [esp+0x4]
6401a574:	mul    ecx
6401a576:	ret    0x10
6401a579:	push   ebx
6401a57a:	mul    ecx
6401a57c:	mov    ebx,eax
6401a57e:	mov    eax,DWORD PTR [esp+0x8]
6401a582:	mul    DWORD PTR [esp+0x14]
6401a586:	add    ebx,eax
6401a588:	mov    eax,DWORD PTR [esp+0x8]
6401a58c:	mul    ecx
6401a58e:	add    edx,ebx
6401a590:	pop    ebx
6401a591:	ret    0x10
6401a594:	push   0xa
6401a596:	push   0x0
6401a598:	push   DWORD PTR [esp+0xc]
6401a59c:	call   0x6401ade5
6401a5a1:	add    esp,0xc
6401a5a4:	ret    
6401a5a5:	push   0x2
6401a5a7:	call   0x640127a6
6401a5ac:	pop    ecx
6401a5ad:	ret    
6401a5ae:	mov    ecx,DWORD PTR [esp+0x4]
6401a5b2:	push   ebx
6401a5b3:	xor    ebx,ebx
6401a5b5:	cmp    ecx,ebx
6401a5b7:	push   esi
6401a5b8:	push   edi
6401a5b9:	jl     0x6401a616
6401a5bb:	cmp    ecx,DWORD PTR ds:0x6402d460
6401a5c1:	jae    0x6401a616
6401a5c3:	mov    eax,ecx
6401a5c5:	sar    eax,0x5
6401a5c8:	mov    esi,ecx
6401a5ca:	lea    edi,[eax*4+0x6402d480]
6401a5d1:	mov    eax,DWORD PTR [edi]
6401a5d3:	and    esi,0x1f
6401a5d6:	shl    esi,0x6
6401a5d9:	add    eax,esi
6401a5db:	test   BYTE PTR [eax+0x4],0x1
6401a5df:	je     0x6401a616
6401a5e1:	cmp    DWORD PTR [eax],0xffffffff
6401a5e4:	je     0x6401a616
6401a5e6:	cmp    DWORD PTR ds:0x64029520,0x1
6401a5ed:	jne    0x6401a60c
6401a5ef:	sub    ecx,ebx
6401a5f1:	je     0x6401a603
6401a5f3:	dec    ecx
6401a5f4:	je     0x6401a5fe
6401a5f6:	dec    ecx
6401a5f7:	jne    0x6401a60c
6401a5f9:	push   ebx
6401a5fa:	push   0xfffffff4
6401a5fc:	jmp    0x6401a606
6401a5fe:	push   ebx
6401a5ff:	push   0xfffffff5
6401a601:	jmp    0x6401a606
6401a603:	push   ebx
6401a604:	push   0xfffffff6
6401a606:	call   DWORD PTR ds:0x64021080
6401a60c:	mov    eax,DWORD PTR [edi]
6401a60e:	or     DWORD PTR [esi+eax*1],0xffffffff
6401a612:	xor    eax,eax
6401a614:	jmp    0x6401a62b
6401a616:	call   0x64011120
6401a61b:	mov    DWORD PTR [eax],0x9
6401a621:	call   0x64011133
6401a626:	mov    DWORD PTR [eax],ebx
6401a628:	or     eax,0xffffffff
6401a62b:	pop    edi
6401a62c:	pop    esi
6401a62d:	pop    ebx
6401a62e:	ret    
6401a62f:	mov    eax,DWORD PTR [esp+0x4]
6401a633:	cmp    eax,0xfffffffe
6401a636:	jne    0x6401a64f
6401a638:	call   0x64011133
6401a63d:	and    DWORD PTR [eax],0x0
6401a640:	call   0x64011120
6401a645:	mov    DWORD PTR [eax],0x9
6401a64b:	or     eax,0xffffffff
6401a64e:	ret    
6401a64f:	push   esi
6401a650:	xor    esi,esi
6401a652:	cmp    eax,esi
6401a654:	jl     0x6401a678
6401a656:	cmp    eax,DWORD PTR ds:0x6402d460
6401a65c:	jae    0x6401a678
6401a65e:	mov    ecx,eax
6401a660:	and    eax,0x1f
6401a663:	sar    ecx,0x5
6401a666:	mov    ecx,DWORD PTR [ecx*4+0x6402d480]
6401a66d:	shl    eax,0x6
6401a670:	add    eax,ecx
6401a672:	test   BYTE PTR [eax+0x4],0x1
6401a676:	jne    0x6401a69c
6401a678:	call   0x64011133
6401a67d:	mov    DWORD PTR [eax],esi
6401a67f:	call   0x64011120
6401a684:	push   esi
6401a685:	push   esi
6401a686:	push   esi
6401a687:	push   esi
6401a688:	push   esi
6401a689:	mov    DWORD PTR [eax],0x9
6401a68f:	call   0x6400ee86
6401a694:	add    esp,0x14
6401a697:	or     eax,0xffffffff
6401a69a:	pop    esi
6401a69b:	ret    
6401a69c:	mov    eax,DWORD PTR [eax]
6401a69e:	pop    esi
6401a69f:	ret    
6401a6a0:	push   0xc
6401a6a2:	push   0x64025c30
6401a6a7:	call   0x640106f8
6401a6ac:	mov    edi,DWORD PTR [ebp+0x8]
6401a6af:	mov    eax,edi
6401a6b1:	sar    eax,0x5
6401a6b4:	mov    esi,edi
6401a6b6:	and    esi,0x1f
6401a6b9:	shl    esi,0x6
6401a6bc:	add    esi,DWORD PTR [eax*4+0x6402d480]
6401a6c3:	mov    DWORD PTR [ebp-0x1c],0x1
6401a6ca:	xor    ebx,ebx
6401a6cc:	cmp    DWORD PTR [esi+0x8],ebx
6401a6cf:	jne    0x6401a707
6401a6d1:	push   0xa
6401a6d3:	call   0x6401696a
6401a6d8:	pop    ecx
6401a6d9:	mov    DWORD PTR [ebp-0x4],ebx
6401a6dc:	cmp    DWORD PTR [esi+0x8],ebx
6401a6df:	jne    0x6401a6fb
6401a6e1:	push   0xfa0
6401a6e6:	lea    eax,[esi+0xc]
6401a6e9:	push   eax
6401a6ea:	call   0x64018029
6401a6ef:	pop    ecx
6401a6f0:	pop    ecx
6401a6f1:	test   eax,eax
6401a6f3:	jne    0x6401a6f8
6401a6f5:	mov    DWORD PTR [ebp-0x1c],ebx
6401a6f8:	inc    DWORD PTR [esi+0x8]
6401a6fb:	mov    DWORD PTR [ebp-0x4],0xfffffffe
6401a702:	call   0x6401a737
6401a707:	cmp    DWORD PTR [ebp-0x1c],ebx
6401a70a:	je     0x6401a729
6401a70c:	mov    eax,edi
6401a70e:	sar    eax,0x5
6401a711:	and    edi,0x1f
6401a714:	shl    edi,0x6
6401a717:	mov    eax,DWORD PTR [eax*4+0x6402d480]
6401a71e:	lea    eax,[eax+edi*1+0xc]
6401a722:	push   eax
6401a723:	call   DWORD PTR ds:0x64021084
6401a729:	mov    eax,DWORD PTR [ebp-0x1c]
6401a72c:	call   0x6401073d
6401a731:	ret    
6401a732:	xor    ebx,ebx
6401a734:	mov    edi,DWORD PTR [ebp+0x8]
6401a737:	push   0xa
6401a739:	call   0x64016892
6401a73e:	pop    ecx
6401a73f:	ret    
6401a740:	mov    eax,DWORD PTR [esp+0x4]
6401a744:	mov    ecx,eax
6401a746:	and    eax,0x1f
6401a749:	sar    ecx,0x5
6401a74c:	mov    ecx,DWORD PTR [ecx*4+0x6402d480]
6401a753:	shl    eax,0x6
6401a756:	lea    eax,[ecx+eax*1+0xc]
6401a75a:	push   eax
6401a75b:	call   DWORD PTR ds:0x64021088
6401a761:	ret    
6401a762:	push   ebp
6401a763:	mov    ebp,esp
6401a765:	sub    esp,0x10
6401a768:	mov    eax,ds:0x64028038
6401a76d:	xor    eax,ebp
6401a76f:	mov    DWORD PTR [ebp-0x4],eax
6401a772:	push   esi
6401a773:	xor    esi,esi
6401a775:	cmp    DWORD PTR ds:0x64028f40,esi
6401a77b:	je     0x6401a7cb
6401a77d:	cmp    DWORD PTR ds:0x64028fb4,0xfffffffe
6401a784:	jne    0x6401a78b
6401a786:	call   0x6401ae71
6401a78b:	mov    eax,ds:0x64028fb4
6401a790:	cmp    eax,0xffffffff
6401a793:	jne    0x6401a79b
6401a795:	or     ax,0xffff
6401a799:	jmp    0x6401a80b
6401a79b:	push   esi
6401a79c:	lea    ecx,[ebp-0x10]
6401a79f:	push   ecx
6401a7a0:	push   0x1
6401a7a2:	lea    ecx,[ebp+0x8]
6401a7a5:	push   ecx
6401a7a6:	push   eax
6401a7a7:	call   DWORD PTR ds:0x64021098
6401a7ad:	test   eax,eax
6401a7af:	jne    0x6401a818
6401a7b1:	cmp    DWORD PTR ds:0x64028f40,0x2
6401a7b8:	jne    0x6401a795
6401a7ba:	call   DWORD PTR ds:0x64021044
6401a7c0:	cmp    eax,0x78
6401a7c3:	jne    0x6401a795
6401a7c5:	mov    DWORD PTR ds:0x64028f40,esi
6401a7cb:	push   esi
6401a7cc:	push   esi
6401a7cd:	push   0x5
6401a7cf:	lea    eax,[ebp-0xc]
6401a7d2:	push   eax
6401a7d3:	push   0x1
6401a7d5:	lea    eax,[ebp+0x8]
6401a7d8:	push   eax
6401a7d9:	push   esi
6401a7da:	call   DWORD PTR ds:0x64021094
6401a7e0:	push   eax
6401a7e1:	call   DWORD PTR ds:0x64021024
6401a7e7:	mov    ecx,DWORD PTR ds:0x64028fb4
6401a7ed:	cmp    ecx,0xffffffff
6401a7f0:	je     0x6401a795
6401a7f2:	push   esi
6401a7f3:	lea    edx,[ebp-0x10]
6401a7f6:	push   edx
6401a7f7:	push   eax
6401a7f8:	lea    eax,[ebp-0xc]
6401a7fb:	push   eax
6401a7fc:	push   ecx
6401a7fd:	call   DWORD PTR ds:0x64021090
6401a803:	test   eax,eax
6401a805:	je     0x6401a795
6401a807:	mov    ax,WORD PTR [ebp+0x8]
6401a80b:	mov    ecx,DWORD PTR [ebp-0x4]
6401a80e:	xor    ecx,ebp
6401a810:	pop    esi
6401a811:	call   0x6400f34e
6401a816:	leave  
6401a817:	ret    
6401a818:	mov    DWORD PTR ds:0x64028f40,0x1
6401a822:	jmp    0x6401a807
6401a824:	push   0x10
6401a826:	push   0x64025c50
6401a82b:	call   0x640106f8
6401a830:	xor    ebx,ebx
6401a832:	mov    DWORD PTR [ebp-0x1c],ebx
6401a835:	push   0x1
6401a837:	call   0x6401696a
6401a83c:	pop    ecx
6401a83d:	mov    DWORD PTR [ebp-0x4],ebx
6401a840:	push   0x3
6401a842:	pop    edi
6401a843:	mov    DWORD PTR [ebp-0x20],edi
6401a846:	cmp    edi,DWORD PTR ds:0x6402d440
6401a84c:	jge    0x6401a8a5
6401a84e:	mov    esi,edi
6401a850:	shl    esi,0x2
6401a853:	mov    eax,ds:0x6402c434
6401a858:	add    eax,esi
6401a85a:	cmp    DWORD PTR [eax],ebx
6401a85c:	je     0x6401a8a2
6401a85e:	mov    eax,DWORD PTR [eax]
6401a860:	test   BYTE PTR [eax+0xc],0x83
6401a864:	je     0x6401a875
6401a866:	push   eax
6401a867:	call   0x6401af2f
6401a86c:	pop    ecx
6401a86d:	cmp    eax,0xffffffff
6401a870:	je     0x6401a875
6401a872:	inc    DWORD PTR [ebp-0x1c]
6401a875:	cmp    edi,0x14
6401a878:	jl     0x6401a8a2
6401a87a:	mov    eax,ds:0x6402c434
6401a87f:	mov    eax,DWORD PTR [esi+eax*1]
6401a882:	add    eax,0x20
6401a885:	push   eax
6401a886:	call   DWORD PTR ds:0x6402108c
6401a88c:	mov    eax,ds:0x6402c434
6401a891:	push   DWORD PTR [esi+eax*1]
6401a894:	call   0x640101e6
6401a899:	pop    ecx
6401a89a:	mov    eax,ds:0x6402c434
6401a89f:	mov    DWORD PTR [esi+eax*1],ebx
6401a8a2:	inc    edi
6401a8a3:	jmp    0x6401a843
6401a8a5:	mov    DWORD PTR [ebp-0x4],0xfffffffe
6401a8ac:	call   0x6401a8ba
6401a8b1:	mov    eax,DWORD PTR [ebp-0x1c]
6401a8b4:	call   0x6401073d
6401a8b9:	ret    
6401a8ba:	push   0x1
6401a8bc:	call   0x64016892
6401a8c1:	pop    ecx
6401a8c2:	ret    
6401a8c3:	push   ebx
6401a8c4:	push   esi
6401a8c5:	mov    esi,DWORD PTR [esp+0xc]
6401a8c9:	mov    eax,DWORD PTR [esi+0xc]
6401a8cc:	mov    ecx,eax
6401a8ce:	and    cl,0x3
6401a8d1:	xor    ebx,ebx
6401a8d3:	cmp    cl,0x2
6401a8d6:	jne    0x6401a917
6401a8d8:	test   ax,0x108
6401a8dc:	je     0x6401a917
6401a8de:	mov    eax,DWORD PTR [esi+0x8]
6401a8e1:	push   edi
6401a8e2:	mov    edi,DWORD PTR [esi]
6401a8e4:	sub    edi,eax
6401a8e6:	test   edi,edi
6401a8e8:	jle    0x6401a916
6401a8ea:	push   edi
6401a8eb:	push   eax
6401a8ec:	push   esi
6401a8ed:	call   0x640191cd
6401a8f2:	pop    ecx
6401a8f3:	push   eax
6401a8f4:	call   0x64018eae
6401a8f9:	add    esp,0xc
6401a8fc:	cmp    eax,edi
6401a8fe:	jne    0x6401a90f
6401a900:	mov    eax,DWORD PTR [esi+0xc]
6401a903:	test   al,al
6401a905:	jns    0x6401a916
6401a907:	and    eax,0xfffffffd
6401a90a:	mov    DWORD PTR [esi+0xc],eax
6401a90d:	jmp    0x6401a916
6401a90f:	or     DWORD PTR [esi+0xc],0x20
6401a913:	or     ebx,0xffffffff
6401a916:	pop    edi
6401a917:	mov    eax,DWORD PTR [esi+0x8]
6401a91a:	and    DWORD PTR [esi+0x4],0x0
6401a91e:	mov    DWORD PTR [esi],eax
6401a920:	pop    esi
6401a921:	mov    eax,ebx
6401a923:	pop    ebx
6401a924:	ret    
6401a925:	push   esi
6401a926:	mov    esi,DWORD PTR [esp+0x8]
6401a92a:	test   esi,esi
6401a92c:	jne    0x6401a937
6401a92e:	push   esi
6401a92f:	call   0x6401a967
6401a934:	pop    ecx
6401a935:	pop    esi
6401a936:	ret    
6401a937:	push   esi
6401a938:	call   0x6401a8c3
6401a93d:	test   eax,eax
6401a93f:	pop    ecx
6401a940:	je     0x6401a947
6401a942:	or     eax,0xffffffff
6401a945:	pop    esi
6401a946:	ret    
6401a947:	test   WORD PTR [esi+0xc],0x4000
6401a94d:	je     0x6401a963
6401a94f:	push   esi
6401a950:	call   0x640191cd
6401a955:	push   eax
6401a956:	call   0x6401afab
6401a95b:	pop    ecx
6401a95c:	pop    ecx
6401a95d:	neg    eax
6401a95f:	sbb    eax,eax
6401a961:	pop    esi
6401a962:	ret    
6401a963:	xor    eax,eax
6401a965:	pop    esi
6401a966:	ret    
6401a967:	push   0x14
6401a969:	push   0x64025c70
6401a96e:	call   0x640106f8
6401a973:	xor    edi,edi
6401a975:	mov    DWORD PTR [ebp-0x1c],edi
6401a978:	mov    DWORD PTR [ebp-0x24],edi
6401a97b:	push   0x1
6401a97d:	call   0x6401696a
6401a982:	pop    ecx
6401a983:	mov    DWORD PTR [ebp-0x4],edi
6401a986:	xor    esi,esi
6401a988:	mov    DWORD PTR [ebp-0x20],esi
6401a98b:	cmp    esi,DWORD PTR ds:0x6402d440
6401a991:	jge    0x6401aa1a
6401a997:	mov    eax,ds:0x6402c434
6401a99c:	lea    eax,[eax+esi*4]
6401a99f:	cmp    DWORD PTR [eax],edi
6401a9a1:	je     0x6401aa01
6401a9a3:	mov    eax,DWORD PTR [eax]
6401a9a5:	test   BYTE PTR [eax+0xc],0x83
6401a9a9:	je     0x6401aa01
6401a9ab:	push   eax
6401a9ac:	push   esi
6401a9ad:	call   0x6401913f
6401a9b2:	pop    ecx
6401a9b3:	pop    ecx
6401a9b4:	xor    edx,edx
6401a9b6:	inc    edx
6401a9b7:	mov    DWORD PTR [ebp-0x4],edx
6401a9ba:	mov    eax,ds:0x6402c434
6401a9bf:	mov    eax,DWORD PTR [eax+esi*4]
6401a9c2:	mov    ecx,DWORD PTR [eax+0xc]
6401a9c5:	test   cl,0x83
6401a9c8:	je     0x6401a9f9
6401a9ca:	cmp    DWORD PTR [ebp+0x8],edx
6401a9cd:	jne    0x6401a9e0
6401a9cf:	push   eax
6401a9d0:	call   0x6401a925
6401a9d5:	pop    ecx
6401a9d6:	cmp    eax,0xffffffff
6401a9d9:	je     0x6401a9f9
6401a9db:	inc    DWORD PTR [ebp-0x1c]
6401a9de:	jmp    0x6401a9f9
6401a9e0:	cmp    DWORD PTR [ebp+0x8],edi
6401a9e3:	jne    0x6401a9f9
6401a9e5:	test   cl,0x2
6401a9e8:	je     0x6401a9f9
6401a9ea:	push   eax
6401a9eb:	call   0x6401a925
6401a9f0:	pop    ecx
6401a9f1:	cmp    eax,0xffffffff
6401a9f4:	jne    0x6401a9f9
6401a9f6:	or     DWORD PTR [ebp-0x24],eax
6401a9f9:	mov    DWORD PTR [ebp-0x4],edi
6401a9fc:	call   0x6401aa09
6401aa01:	inc    esi
6401aa02:	jmp    0x6401a988
6401aa04:	xor    edi,edi
6401aa06:	mov    esi,DWORD PTR [ebp-0x20]
6401aa09:	mov    eax,ds:0x6402c434
6401aa0e:	push   DWORD PTR [eax+esi*4]
6401aa11:	push   esi
6401aa12:	call   0x640191a3
6401aa17:	pop    ecx
6401aa18:	pop    ecx
6401aa19:	ret    
6401aa1a:	mov    DWORD PTR [ebp-0x4],0xfffffffe
6401aa21:	call   0x6401aa38
6401aa26:	cmp    DWORD PTR [ebp+0x8],0x1
6401aa2a:	mov    eax,DWORD PTR [ebp-0x1c]
6401aa2d:	je     0x6401aa32
6401aa2f:	mov    eax,DWORD PTR [ebp-0x24]
6401aa32:	call   0x6401073d
6401aa37:	ret    
6401aa38:	push   0x1
6401aa3a:	call   0x64016892
6401aa3f:	pop    ecx
6401aa40:	ret    
6401aa41:	push   0x1
6401aa43:	call   0x6401a967
6401aa48:	pop    ecx
6401aa49:	ret    
6401aa4a:	push   ebp
6401aa4b:	mov    ebp,esp
6401aa4d:	push   ecx
6401aa4e:	push   esi
6401aa4f:	mov    esi,DWORD PTR [ebp+0xc]
6401aa52:	push   esi
6401aa53:	call   0x640191cd
6401aa58:	mov    DWORD PTR [ebp+0xc],eax
6401aa5b:	mov    eax,DWORD PTR [esi+0xc]
6401aa5e:	test   al,0x82
6401aa60:	pop    ecx
6401aa61:	jne    0x6401aa7c
6401aa63:	call   0x64011120
6401aa68:	mov    DWORD PTR [eax],0x9
6401aa6e:	or     DWORD PTR [esi+0xc],0x20
6401aa72:	mov    eax,0xffff
6401aa77:	jmp    0x6401abb7
6401aa7c:	test   al,0x40
6401aa7e:	je     0x6401aa8d
6401aa80:	call   0x64011120
6401aa85:	mov    DWORD PTR [eax],0x22
6401aa8b:	jmp    0x6401aa6e
6401aa8d:	test   al,0x1
6401aa8f:	je     0x6401aaa8
6401aa91:	and    DWORD PTR [esi+0x4],0x0
6401aa95:	test   al,0x10
6401aa97:	je     0x6401ab28
6401aa9d:	mov    ecx,DWORD PTR [esi+0x8]
6401aaa0:	and    eax,0xfffffffe
6401aaa3:	mov    DWORD PTR [esi],ecx
6401aaa5:	mov    DWORD PTR [esi+0xc],eax
6401aaa8:	mov    eax,DWORD PTR [esi+0xc]
6401aaab:	and    DWORD PTR [esi+0x4],0x0
6401aaaf:	and    DWORD PTR [ebp-0x4],0x0
6401aab3:	push   ebx
6401aab4:	push   0x2
6401aab6:	and    eax,0xffffffef
6401aab9:	pop    ebx
6401aaba:	or     eax,ebx
6401aabc:	test   ax,0x10c
6401aac0:	mov    DWORD PTR [esi+0xc],eax
6401aac3:	jne    0x6401aaf1
6401aac5:	call   0x6401902c
6401aaca:	add    eax,0x20
6401aacd:	cmp    esi,eax
6401aacf:	je     0x6401aadd
6401aad1:	call   0x6401902c
6401aad6:	add    eax,0x40
6401aad9:	cmp    esi,eax
6401aadb:	jne    0x6401aaea
6401aadd:	push   DWORD PTR [ebp+0xc]
6401aae0:	call   0x64018fce
6401aae5:	test   eax,eax
6401aae7:	pop    ecx
6401aae8:	jne    0x6401aaf1
6401aaea:	push   esi
6401aaeb:	call   0x64018f8a
6401aaf0:	pop    ecx
6401aaf1:	test   WORD PTR [esi+0xc],0x108
6401aaf7:	push   edi
6401aaf8:	je     0x6401ab81
6401aafe:	mov    eax,DWORD PTR [esi+0x8]
6401ab01:	mov    edi,DWORD PTR [esi]
6401ab03:	lea    ecx,[eax+0x2]
6401ab06:	mov    DWORD PTR [esi],ecx
6401ab08:	mov    ecx,DWORD PTR [esi+0x18]
6401ab0b:	sub    edi,eax
6401ab0d:	sub    ecx,ebx
6401ab0f:	test   edi,edi
6401ab11:	mov    DWORD PTR [esi+0x4],ecx
6401ab14:	jle    0x6401ab33
6401ab16:	push   edi
6401ab17:	push   eax
6401ab18:	push   DWORD PTR [ebp+0xc]
6401ab1b:	call   0x64018eae
6401ab20:	add    esp,0xc
6401ab23:	mov    DWORD PTR [ebp-0x4],eax
6401ab26:	jmp    0x6401ab76
6401ab28:	or     eax,0x20
6401ab2b:	mov    DWORD PTR [esi+0xc],eax
6401ab2e:	jmp    0x6401aa72
6401ab33:	mov    ecx,DWORD PTR [ebp+0xc]
6401ab36:	cmp    ecx,0xffffffff
6401ab39:	je     0x6401ab56
6401ab3b:	cmp    ecx,0xfffffffe
6401ab3e:	je     0x6401ab56
6401ab40:	mov    eax,ecx
6401ab42:	and    eax,0x1f
6401ab45:	mov    edx,ecx
6401ab47:	sar    edx,0x5
6401ab4a:	shl    eax,0x6
6401ab4d:	add    eax,DWORD PTR [edx*4+0x6402d480]
6401ab54:	jmp    0x6401ab5b
6401ab56:	mov    eax,0x64028810
6401ab5b:	test   BYTE PTR [eax+0x4],0x20
6401ab5f:	je     0x6401ab76
6401ab61:	push   ebx
6401ab62:	push   0x0
6401ab64:	push   0x0
6401ab66:	push   ecx
6401ab67:	call   0x64018773
6401ab6c:	and    eax,edx
6401ab6e:	add    esp,0x10
6401ab71:	cmp    eax,0xffffffff
6401ab74:	je     0x6401aba3
6401ab76:	mov    eax,DWORD PTR [esi+0x8]
6401ab79:	mov    ebx,DWORD PTR [ebp+0x8]
6401ab7c:	mov    WORD PTR [eax],bx
6401ab7f:	jmp    0x6401ab9e
6401ab81:	push   0x2
6401ab83:	lea    eax,[ebp-0x4]
6401ab86:	push   eax
6401ab87:	push   DWORD PTR [ebp+0xc]
6401ab8a:	mov    edi,ebx
6401ab8c:	mov    ebx,DWORD PTR [ebp+0x8]
6401ab8f:	mov    WORD PTR [ebp-0x4],bx
6401ab93:	call   0x64018eae
6401ab98:	add    esp,0xc
6401ab9b:	mov    DWORD PTR [ebp-0x4],eax
6401ab9e:	cmp    DWORD PTR [ebp-0x4],edi
6401aba1:	je     0x6401abae
6401aba3:	or     DWORD PTR [esi+0xc],0x20
6401aba7:	mov    eax,0xffff
6401abac:	jmp    0x6401abb5
6401abae:	mov    eax,ebx
6401abb0:	and    eax,0xffff
6401abb5:	pop    edi
6401abb6:	pop    ebx
6401abb7:	pop    esi
6401abb8:	leave  
6401abb9:	ret    
6401abba:	push   ebp
6401abbb:	mov    ebp,esp
6401abbd:	sub    esp,0x14
6401abc0:	push   esi
6401abc1:	push   edi
6401abc2:	push   DWORD PTR [ebp+0x8]
6401abc5:	lea    ecx,[ebp-0x14]
6401abc8:	call   0x6400f4f1
6401abcd:	mov    eax,DWORD PTR [ebp+0x10]
6401abd0:	mov    esi,DWORD PTR [ebp+0xc]
6401abd3:	xor    edi,edi
6401abd5:	cmp    eax,edi
6401abd7:	je     0x6401abdb
6401abd9:	mov    DWORD PTR [eax],esi
6401abdb:	cmp    esi,edi
6401abdd:	jne    0x6401ac0b
6401abdf:	call   0x64011120
6401abe4:	push   edi
6401abe5:	push   edi
6401abe6:	push   edi
6401abe7:	push   edi
6401abe8:	push   edi
6401abe9:	mov    DWORD PTR [eax],0x16
6401abef:	call   0x6400ee86
6401abf4:	add    esp,0x14
6401abf7:	cmp    BYTE PTR [ebp-0x8],0x0
6401abfb:	je     0x6401ac04
6401abfd:	mov    eax,DWORD PTR [ebp-0xc]
6401ac00:	and    DWORD PTR [eax+0x70],0xfffffffd
6401ac04:	xor    eax,eax
6401ac06:	jmp    0x6401ade1
6401ac0b:	cmp    DWORD PTR [ebp+0x14],edi
6401ac0e:	je     0x6401ac1c
6401ac10:	cmp    DWORD PTR [ebp+0x14],0x2
6401ac14:	jl     0x6401abdf
6401ac16:	cmp    DWORD PTR [ebp+0x14],0x24
6401ac1a:	jg     0x6401abdf
6401ac1c:	mov    ecx,DWORD PTR [ebp-0x14]
6401ac1f:	push   ebx
6401ac20:	mov    bl,BYTE PTR [esi]
6401ac22:	mov    DWORD PTR [ebp-0x4],edi
6401ac25:	lea    edi,[esi+0x1]
6401ac28:	cmp    DWORD PTR [ecx+0xac],0x1
6401ac2f:	jle    0x6401ac48
6401ac31:	lea    eax,[ebp-0x14]
6401ac34:	push   eax
6401ac35:	movzx  eax,bl
6401ac38:	push   0x8
6401ac3a:	push   eax
6401ac3b:	call   0x64016315
6401ac40:	mov    ecx,DWORD PTR [ebp-0x14]
6401ac43:	add    esp,0xc
6401ac46:	jmp    0x6401ac58
6401ac48:	mov    edx,DWORD PTR [ecx+0xc8]
6401ac4e:	movzx  eax,bl
6401ac51:	movzx  eax,BYTE PTR [edx+eax*2]
6401ac55:	and    eax,0x8
6401ac58:	test   eax,eax
6401ac5a:	je     0x6401ac61
6401ac5c:	mov    bl,BYTE PTR [edi]
6401ac5e:	inc    edi
6401ac5f:	jmp    0x6401ac28
6401ac61:	cmp    bl,0x2d
6401ac64:	jne    0x6401ac6c
6401ac66:	or     DWORD PTR [ebp+0x18],0x2
6401ac6a:	jmp    0x6401ac71
6401ac6c:	cmp    bl,0x2b
6401ac6f:	jne    0x6401ac74
6401ac71:	mov    bl,BYTE PTR [edi]
6401ac73:	inc    edi
6401ac74:	mov    eax,DWORD PTR [ebp+0x14]
6401ac77:	test   eax,eax
6401ac79:	jl     0x6401adc8
6401ac7f:	cmp    eax,0x1
6401ac82:	je     0x6401adc8
6401ac88:	cmp    eax,0x24
6401ac8b:	jg     0x6401adc8
6401ac91:	test   eax,eax
6401ac93:	jne    0x6401acbf
6401ac95:	cmp    bl,0x30
6401ac98:	je     0x6401aca3
6401ac9a:	mov    DWORD PTR [ebp+0x14],0xa
6401aca1:	jmp    0x6401acd7
6401aca3:	mov    al,BYTE PTR [edi]
6401aca5:	cmp    al,0x78
6401aca7:	je     0x6401acb6
6401aca9:	cmp    al,0x58
6401acab:	je     0x6401acb6
6401acad:	mov    DWORD PTR [ebp+0x14],0x8
6401acb4:	jmp    0x6401acd7
6401acb6:	mov    DWORD PTR [ebp+0x14],0x10
6401acbd:	jmp    0x6401acc9
6401acbf:	cmp    eax,0x10
6401acc2:	jne    0x6401acd7
6401acc4:	cmp    bl,0x30
6401acc7:	jne    0x6401acd7
6401acc9:	mov    al,BYTE PTR [edi]
6401accb:	cmp    al,0x78
6401accd:	je     0x6401acd3
6401accf:	cmp    al,0x58
6401acd1:	jne    0x6401acd7
6401acd3:	inc    edi
6401acd4:	mov    bl,BYTE PTR [edi]
6401acd6:	inc    edi
6401acd7:	mov    esi,DWORD PTR [ecx+0xc8]
6401acdd:	or     eax,0xffffffff
6401ace0:	xor    edx,edx
6401ace2:	div    DWORD PTR [ebp+0x14]
6401ace5:	movzx  ecx,bl
6401ace8:	movzx  ecx,WORD PTR [esi+ecx*2]
6401acec:	test   cl,0x4
6401acef:	je     0x6401acf9
6401acf1:	movsx  ecx,bl
6401acf4:	sub    ecx,0x30
6401acf7:	jmp    0x6401ad13
6401acf9:	test   cx,0x103
6401acfe:	je     0x6401ad31
6401ad00:	mov    cl,bl
6401ad02:	sub    cl,0x61
6401ad05:	cmp    cl,0x19
6401ad08:	movsx  ecx,bl
6401ad0b:	ja     0x6401ad10
6401ad0d:	sub    ecx,0x20
6401ad10:	add    ecx,0xffffffc9
6401ad13:	cmp    ecx,DWORD PTR [ebp+0x14]
6401ad16:	jae    0x6401ad31
6401ad18:	or     DWORD PTR [ebp+0x18],0x8
6401ad1c:	cmp    DWORD PTR [ebp-0x4],eax
6401ad1f:	jb     0x6401ad48
6401ad21:	jne    0x6401ad27
6401ad23:	cmp    ecx,edx
6401ad25:	jbe    0x6401ad48
6401ad27:	or     DWORD PTR [ebp+0x18],0x4
6401ad2b:	cmp    DWORD PTR [ebp+0x10],0x0
6401ad2f:	jne    0x6401ad54
6401ad31:	mov    eax,DWORD PTR [ebp+0x18]
6401ad34:	dec    edi
6401ad35:	test   al,0x8
6401ad37:	jne    0x6401ad59
6401ad39:	cmp    DWORD PTR [ebp+0x10],0x0
6401ad3d:	je     0x6401ad42
6401ad3f:	mov    edi,DWORD PTR [ebp+0xc]
6401ad42:	and    DWORD PTR [ebp-0x4],0x0
6401ad46:	jmp    0x6401ada4
6401ad48:	mov    ebx,DWORD PTR [ebp-0x4]
6401ad4b:	imul   ebx,DWORD PTR [ebp+0x14]
6401ad4f:	add    ebx,ecx
6401ad51:	mov    DWORD PTR [ebp-0x4],ebx
6401ad54:	mov    bl,BYTE PTR [edi]
6401ad56:	inc    edi
6401ad57:	jmp    0x6401ace5
6401ad59:	test   al,0x4
6401ad5b:	mov    esi,0x7fffffff
6401ad60:	jne    0x6401ad7d
6401ad62:	test   al,0x1
6401ad64:	jne    0x6401ada4
6401ad66:	and    eax,0x2
6401ad69:	je     0x6401ad74
6401ad6b:	cmp    DWORD PTR [ebp-0x4],0x80000000
6401ad72:	ja     0x6401ad7d
6401ad74:	test   eax,eax
6401ad76:	jne    0x6401ada4
6401ad78:	cmp    DWORD PTR [ebp-0x4],esi
6401ad7b:	jbe    0x6401ada4
6401ad7d:	call   0x64011120
6401ad82:	test   BYTE PTR [ebp+0x18],0x1
6401ad86:	mov    DWORD PTR [eax],0x22
6401ad8c:	je     0x6401ad94
6401ad8e:	or     DWORD PTR [ebp-0x4],0xffffffff
6401ad92:	jmp    0x6401ada4
6401ad94:	mov    al,BYTE PTR [ebp+0x18]
6401ad97:	and    al,0x2
6401ad99:	neg    al
6401ad9b:	sbb    eax,eax
6401ad9d:	neg    eax
6401ad9f:	add    eax,esi
6401ada1:	mov    DWORD PTR [ebp-0x4],eax
6401ada4:	mov    eax,DWORD PTR [ebp+0x10]
6401ada7:	test   eax,eax
6401ada9:	je     0x6401adad
6401adab:	mov    DWORD PTR [eax],edi
6401adad:	test   BYTE PTR [ebp+0x18],0x2
6401adb1:	je     0x6401adb6
6401adb3:	neg    DWORD PTR [ebp-0x4]
6401adb6:	cmp    BYTE PTR [ebp-0x8],0x0
6401adba:	je     0x6401adc3
6401adbc:	mov    eax,DWORD PTR [ebp-0xc]
6401adbf:	and    DWORD PTR [eax+0x70],0xfffffffd
6401adc3:	mov    eax,DWORD PTR [ebp-0x4]
6401adc6:	jmp    0x6401ade0
6401adc8:	mov    eax,DWORD PTR [ebp+0x10]
6401adcb:	test   eax,eax
6401adcd:	je     0x6401add1
6401adcf:	mov    DWORD PTR [eax],esi
6401add1:	cmp    BYTE PTR [ebp-0x8],0x0
6401add5:	je     0x6401adde
6401add7:	mov    eax,DWORD PTR [ebp-0xc]
6401adda:	and    DWORD PTR [eax+0x70],0xfffffffd
6401adde:	xor    eax,eax
6401ade0:	pop    ebx
6401ade1:	pop    edi
6401ade2:	pop    esi
6401ade3:	leave  
6401ade4:	ret    
6401ade5:	push   ebp
6401ade6:	mov    ebp,esp
6401ade8:	xor    eax,eax
6401adea:	cmp    DWORD PTR ds:0x640298d4,eax
6401adf0:	push   eax
6401adf1:	push   DWORD PTR [ebp+0x10]
6401adf4:	push   DWORD PTR [ebp+0xc]
6401adf7:	push   DWORD PTR [ebp+0x8]
6401adfa:	jne    0x6401ae03
6401adfc:	push   0x64028808
6401ae01:	jmp    0x6401ae04
6401ae03:	push   eax
6401ae04:	call   0x6401abba
6401ae09:	add    esp,0x14
6401ae0c:	pop    ebp
6401ae0d:	ret    
6401ae0e:	int3   
6401ae0f:	int3   
6401ae10:	push   ebp
6401ae11:	mov    ebp,esp
6401ae13:	push   edi
6401ae14:	push   esi
6401ae15:	push   ebx
6401ae16:	mov    ecx,DWORD PTR [ebp+0x10]
6401ae19:	or     ecx,ecx
6401ae1b:	je     0x6401ae6a
6401ae1d:	mov    esi,DWORD PTR [ebp+0x8]
6401ae20:	mov    edi,DWORD PTR [ebp+0xc]
6401ae23:	mov    bh,0x41
6401ae25:	mov    bl,0x5a
6401ae27:	mov    dh,0x20
6401ae29:	lea    ecx,[ecx+0x0]
6401ae2c:	mov    ah,BYTE PTR [esi]
6401ae2e:	or     ah,ah
6401ae30:	mov    al,BYTE PTR [edi]
6401ae32:	je     0x6401ae5b
6401ae34:	or     al,al
6401ae36:	je     0x6401ae5b
6401ae38:	add    esi,0x1
6401ae3b:	add    edi,0x1
6401ae3e:	cmp    ah,bh
6401ae40:	jb     0x6401ae48
6401ae42:	cmp    ah,bl
6401ae44:	ja     0x6401ae48
6401ae46:	add    ah,dh
6401ae48:	cmp    al,bh
6401ae4a:	jb     0x6401ae52
6401ae4c:	cmp    al,bl
6401ae4e:	ja     0x6401ae52
6401ae50:	add    al,dh
6401ae52:	cmp    ah,al
6401ae54:	jne    0x6401ae61
6401ae56:	sub    ecx,0x1
6401ae59:	jne    0x6401ae2c
6401ae5b:	xor    ecx,ecx
6401ae5d:	cmp    ah,al
6401ae5f:	je     0x6401ae6a
6401ae61:	mov    ecx,0xffffffff
6401ae66:	jb     0x6401ae6a
6401ae68:	neg    ecx
6401ae6a:	mov    eax,ecx
6401ae6c:	pop    ebx
6401ae6d:	pop    esi
6401ae6e:	pop    edi
6401ae6f:	leave  
6401ae70:	ret    
6401ae71:	xor    eax,eax
6401ae73:	push   eax
6401ae74:	push   eax
6401ae75:	push   0x3
6401ae77:	push   eax
6401ae78:	push   0x3
6401ae7a:	push   0x40000000
6401ae7f:	push   0x640234ac
6401ae84:	call   DWORD PTR ds:0x640210a0
6401ae8a:	mov    ds:0x64028fb4,eax
6401ae8f:	ret    
6401ae90:	mov    eax,ds:0x64028fb4
6401ae95:	cmp    eax,0xffffffff
6401ae98:	push   esi
6401ae99:	mov    esi,DWORD PTR ds:0x64021040
6401ae9f:	je     0x6401aea9
6401aea1:	cmp    eax,0xfffffffe
6401aea4:	je     0x6401aea9
6401aea6:	push   eax
6401aea7:	call   esi
6401aea9:	mov    eax,ds:0x64028fb0
6401aeae:	cmp    eax,0xffffffff
6401aeb1:	je     0x6401aebb
6401aeb3:	cmp    eax,0xfffffffe
6401aeb6:	je     0x6401aebb
6401aeb8:	push   eax
6401aeb9:	call   esi
6401aebb:	pop    esi
6401aebc:	ret    
6401aebd:	push   ebx
6401aebe:	push   esi
6401aebf:	mov    esi,DWORD PTR [esp+0xc]
6401aec3:	push   edi
6401aec4:	xor    edi,edi
6401aec6:	or     ebx,0xffffffff
6401aec9:	cmp    esi,edi
6401aecb:	jne    0x6401aee9
6401aecd:	call   0x64011120
6401aed2:	push   edi
6401aed3:	push   edi
6401aed4:	push   edi
6401aed5:	push   edi
6401aed6:	push   edi
6401aed7:	mov    DWORD PTR [eax],0x16
6401aedd:	call   0x6400ee86
6401aee2:	add    esp,0x14
6401aee5:	or     eax,ebx
6401aee7:	jmp    0x6401af2b
6401aee9:	test   BYTE PTR [esi+0xc],0x83
6401aeed:	je     0x6401af26
6401aeef:	push   esi
6401aef0:	call   0x6401a8c3
6401aef5:	push   esi
6401aef6:	mov    ebx,eax
6401aef8:	call   0x6401b1f0
6401aefd:	push   esi
6401aefe:	call   0x640191cd
6401af03:	push   eax
6401af04:	call   0x6401b123
6401af09:	add    esp,0x10
6401af0c:	test   eax,eax
6401af0e:	jge    0x6401af15
6401af10:	or     ebx,0xffffffff
6401af13:	jmp    0x6401af26
6401af15:	mov    eax,DWORD PTR [esi+0x1c]
6401af18:	cmp    eax,edi
6401af1a:	je     0x6401af26
6401af1c:	push   eax
6401af1d:	call   0x640101e6
6401af22:	pop    ecx
6401af23:	mov    DWORD PTR [esi+0x1c],edi
6401af26:	mov    DWORD PTR [esi+0xc],edi
6401af29:	mov    eax,ebx
6401af2b:	pop    edi
6401af2c:	pop    esi
6401af2d:	pop    ebx
6401af2e:	ret    
6401af2f:	push   0xc
6401af31:	push   0x64025c98
6401af36:	call   0x640106f8
6401af3b:	or     DWORD PTR [ebp-0x1c],0xffffffff
6401af3f:	xor    eax,eax
6401af41:	mov    esi,DWORD PTR [ebp+0x8]
6401af44:	xor    edi,edi
6401af46:	cmp    esi,edi
6401af48:	setne  al
6401af4b:	cmp    eax,edi
6401af4d:	jne    0x6401af6c
6401af4f:	call   0x64011120
6401af54:	mov    DWORD PTR [eax],0x16
6401af5a:	push   edi
6401af5b:	push   edi
6401af5c:	push   edi
6401af5d:	push   edi
6401af5e:	push   edi
6401af5f:	call   0x6400ee86
6401af64:	add    esp,0x14
6401af67:	or     eax,0xffffffff
6401af6a:	jmp    0x6401af78
6401af6c:	test   BYTE PTR [esi+0xc],0x40
6401af70:	je     0x6401af7e
6401af72:	mov    DWORD PTR [esi+0xc],edi
6401af75:	mov    eax,DWORD PTR [ebp-0x1c]
6401af78:	call   0x6401073d
6401af7d:	ret    
6401af7e:	push   esi
6401af7f:	call   0x64019103
6401af84:	pop    ecx
6401af85:	mov    DWORD PTR [ebp-0x4],edi
6401af88:	push   esi
6401af89:	call   0x6401aebd
6401af8e:	pop    ecx
6401af8f:	mov    DWORD PTR [ebp-0x1c],eax
6401af92:	mov    DWORD PTR [ebp-0x4],0xfffffffe
6401af99:	call   0x6401afa3
6401af9e:	jmp    0x6401af75
6401afa0:	mov    esi,DWORD PTR [ebp+0x8]
6401afa3:	push   esi
6401afa4:	call   0x6401916d
6401afa9:	pop    ecx
6401afaa:	ret    
6401afab:	push   0x10
6401afad:	push   0x64025cb8
6401afb2:	call   0x640106f8
6401afb7:	mov    eax,DWORD PTR [ebp+0x8]
6401afba:	cmp    eax,0xfffffffe
6401afbd:	jne    0x6401afd2
6401afbf:	call   0x64011120
6401afc4:	mov    DWORD PTR [eax],0x9
6401afca:	or     eax,0xffffffff
6401afcd:	jmp    0x6401b07c
6401afd2:	xor    ebx,ebx
6401afd4:	cmp    eax,ebx
6401afd6:	jl     0x6401afe0
6401afd8:	cmp    eax,DWORD PTR ds:0x6402d460
6401afde:	jb     0x6401affa
6401afe0:	call   0x64011120
6401afe5:	mov    DWORD PTR [eax],0x9
6401afeb:	push   ebx
6401afec:	push   ebx
6401afed:	push   ebx
6401afee:	push   ebx
6401afef:	push   ebx
6401aff0:	call   0x6400ee86
6401aff5:	add    esp,0x14
6401aff8:	jmp    0x6401afca
6401affa:	mov    ecx,eax
6401affc:	sar    ecx,0x5
6401afff:	lea    edi,[ecx*4+0x6402d480]
6401b006:	mov    esi,eax
6401b008:	and    esi,0x1f
6401b00b:	shl    esi,0x6
6401b00e:	mov    ecx,DWORD PTR [edi]
6401b010:	movzx  ecx,BYTE PTR [esi+ecx*1+0x4]
6401b015:	and    ecx,0x1
6401b018:	je     0x6401afe0
6401b01a:	push   eax
6401b01b:	call   0x6401a6a0
6401b020:	pop    ecx
6401b021:	mov    DWORD PTR [ebp-0x4],ebx
6401b024:	mov    eax,DWORD PTR [edi]
6401b026:	test   BYTE PTR [esi+eax*1+0x4],0x1
6401b02b:	je     0x6401b05e
6401b02d:	push   DWORD PTR [ebp+0x8]
6401b030:	call   0x6401a62f
6401b035:	pop    ecx
6401b036:	push   eax
6401b037:	call   DWORD PTR ds:0x640210a4
6401b03d:	test   eax,eax
6401b03f:	jne    0x6401b04c
6401b041:	call   DWORD PTR ds:0x64021044
6401b047:	mov    DWORD PTR [ebp-0x1c],eax
6401b04a:	jmp    0x6401b04f
6401b04c:	mov    DWORD PTR [ebp-0x1c],ebx
6401b04f:	cmp    DWORD PTR [ebp-0x1c],ebx
6401b052:	je     0x6401b06d
6401b054:	call   0x64011133
6401b059:	mov    ecx,DWORD PTR [ebp-0x1c]
6401b05c:	mov    DWORD PTR [eax],ecx
6401b05e:	call   0x64011120
6401b063:	mov    DWORD PTR [eax],0x9
6401b069:	or     DWORD PTR [ebp-0x1c],0xffffffff
6401b06d:	mov    DWORD PTR [ebp-0x4],0xfffffffe
6401b074:	call   0x6401b082
6401b079:	mov    eax,DWORD PTR [ebp-0x1c]
6401b07c:	call   0x6401073d
6401b081:	ret    
6401b082:	push   DWORD PTR [ebp+0x8]
6401b085:	call   0x6401a740
6401b08a:	pop    ecx
6401b08b:	ret    
6401b08c:	push   esi
6401b08d:	mov    esi,DWORD PTR [esp+0x8]
6401b091:	push   edi
6401b092:	push   esi
6401b093:	call   0x6401a62f
6401b098:	cmp    eax,0xffffffff
6401b09b:	pop    ecx
6401b09c:	je     0x6401b0ee
6401b09e:	cmp    esi,0x1
6401b0a1:	mov    eax,ds:0x6402d480
6401b0a6:	jne    0x6401b0b1
6401b0a8:	test   BYTE PTR [eax+0x84],0x1
6401b0af:	jne    0x6401b0bc
6401b0b1:	cmp    esi,0x2
6401b0b4:	jne    0x6401b0d2
6401b0b6:	test   BYTE PTR [eax+0x44],0x1
6401b0ba:	je     0x6401b0d2
6401b0bc:	push   0x2
6401b0be:	call   0x6401a62f
6401b0c3:	push   0x1
6401b0c5:	mov    edi,eax
6401b0c7:	call   0x6401a62f
6401b0cc:	cmp    eax,edi
6401b0ce:	pop    ecx
6401b0cf:	pop    ecx
6401b0d0:	je     0x6401b0ee
6401b0d2:	push   esi
6401b0d3:	call   0x6401a62f
6401b0d8:	pop    ecx
6401b0d9:	push   eax
6401b0da:	call   DWORD PTR ds:0x64021040
6401b0e0:	test   eax,eax
6401b0e2:	jne    0x6401b0ee
6401b0e4:	call   DWORD PTR ds:0x64021044
6401b0ea:	mov    edi,eax
6401b0ec:	jmp    0x6401b0f0
6401b0ee:	xor    edi,edi
6401b0f0:	push   esi
6401b0f1:	call   0x6401a5ae
6401b0f6:	mov    eax,esi
6401b0f8:	sar    eax,0x5
6401b0fb:	mov    eax,DWORD PTR [eax*4+0x6402d480]
6401b102:	and    esi,0x1f
6401b105:	shl    esi,0x6
6401b108:	test   edi,edi
6401b10a:	pop    ecx
6401b10b:	mov    BYTE PTR [eax+esi*1+0x4],0x0
6401b110:	je     0x6401b11e
6401b112:	push   edi
6401b113:	call   0x64011146
6401b118:	pop    ecx
6401b119:	or     eax,0xffffffff
6401b11c:	jmp    0x6401b120
6401b11e:	xor    eax,eax
6401b120:	pop    edi
6401b121:	pop    esi
6401b122:	ret    
6401b123:	push   0x10
6401b125:	push   0x64025cd8
6401b12a:	call   0x640106f8
6401b12f:	mov    eax,DWORD PTR [ebp+0x8]
6401b132:	cmp    eax,0xfffffffe
6401b135:	jne    0x6401b152
6401b137:	call   0x64011133
6401b13c:	and    DWORD PTR [eax],0x0
6401b13f:	call   0x64011120
6401b144:	mov    DWORD PTR [eax],0x9
6401b14a:	or     eax,0xffffffff
6401b14d:	jmp    0x6401b1e0
6401b152:	xor    edi,edi
6401b154:	cmp    eax,edi
6401b156:	jl     0x6401b160
6401b158:	cmp    eax,DWORD PTR ds:0x6402d460
6401b15e:	jb     0x6401b181
6401b160:	call   0x64011133
6401b165:	mov    DWORD PTR [eax],edi
6401b167:	call   0x64011120
6401b16c:	mov    DWORD PTR [eax],0x9
6401b172:	push   edi
6401b173:	push   edi
6401b174:	push   edi
6401b175:	push   edi
6401b176:	push   edi
6401b177:	call   0x6400ee86
6401b17c:	add    esp,0x14
6401b17f:	jmp    0x6401b14a
6401b181:	mov    ecx,eax
6401b183:	sar    ecx,0x5
6401b186:	lea    ebx,[ecx*4+0x6402d480]
6401b18d:	mov    esi,eax
6401b18f:	and    esi,0x1f
6401b192:	shl    esi,0x6
6401b195:	mov    ecx,DWORD PTR [ebx]
6401b197:	movzx  ecx,BYTE PTR [ecx+esi*1+0x4]
6401b19c:	and    ecx,0x1
6401b19f:	je     0x6401b160
6401b1a1:	push   eax
6401b1a2:	call   0x6401a6a0
6401b1a7:	pop    ecx
6401b1a8:	mov    DWORD PTR [ebp-0x4],edi
6401b1ab:	mov    eax,DWORD PTR [ebx]
6401b1ad:	test   BYTE PTR [eax+esi*1+0x4],0x1
6401b1b2:	je     0x6401b1c2
6401b1b4:	push   DWORD PTR [ebp+0x8]
6401b1b7:	call   0x6401b08c
6401b1bc:	pop    ecx
6401b1bd:	mov    DWORD PTR [ebp-0x1c],eax
6401b1c0:	jmp    0x6401b1d1
6401b1c2:	call   0x64011120
6401b1c7:	mov    DWORD PTR [eax],0x9
6401b1cd:	or     DWORD PTR [ebp-0x1c],0xffffffff
6401b1d1:	mov    DWORD PTR [ebp-0x4],0xfffffffe
6401b1d8:	call   0x6401b1e6
6401b1dd:	mov    eax,DWORD PTR [ebp-0x1c]
6401b1e0:	call   0x6401073d
6401b1e5:	ret    
6401b1e6:	push   DWORD PTR [ebp+0x8]
6401b1e9:	call   0x6401a740
6401b1ee:	pop    ecx
6401b1ef:	ret    
6401b1f0:	push   esi
6401b1f1:	mov    esi,DWORD PTR [esp+0x8]
6401b1f5:	mov    eax,DWORD PTR [esi+0xc]
6401b1f8:	test   al,0x83
6401b1fa:	je     0x6401b21a
6401b1fc:	test   al,0x8
6401b1fe:	je     0x6401b21a
6401b200:	push   DWORD PTR [esi+0x8]
6401b203:	call   0x640101e6
6401b208:	and    DWORD PTR [esi+0xc],0xfffffbf7
6401b20f:	xor    eax,eax
6401b211:	pop    ecx
6401b212:	mov    DWORD PTR [esi],eax
6401b214:	mov    DWORD PTR [esi+0x8],eax
6401b217:	mov    DWORD PTR [esi+0x4],eax
6401b21a:	pop    esi
6401b21b:	ret    
6401b21c:	int3   
6401b21d:	int3   
6401b21e:	int3   
6401b21f:	int3   
6401b220:	lea    eax,[edx-0x1]
6401b223:	pop    ebx
6401b224:	ret    
6401b225:	lea    esp,[esp+0x0]
6401b22c:	lea    esp,[esp+0x0]
6401b230:	xor    eax,eax
6401b232:	mov    al,BYTE PTR [esp+0x8]
6401b236:	push   ebx
6401b237:	mov    ebx,eax
6401b239:	shl    eax,0x8
6401b23c:	mov    edx,DWORD PTR [esp+0x8]
6401b240:	test   edx,0x3
6401b246:	je     0x6401b25d
6401b248:	mov    cl,BYTE PTR [edx]
6401b24a:	add    edx,0x1
6401b24d:	cmp    cl,bl
6401b24f:	je     0x6401b220
6401b251:	test   cl,cl
6401b253:	je     0x6401b2a6
6401b255:	test   edx,0x3
6401b25b:	jne    0x6401b248
6401b25d:	or     ebx,eax
6401b25f:	push   edi
6401b260:	mov    eax,ebx
6401b262:	shl    ebx,0x10
6401b265:	push   esi
6401b266:	or     ebx,eax
6401b268:	mov    ecx,DWORD PTR [edx]
6401b26a:	mov    edi,0x7efefeff
6401b26f:	mov    eax,ecx
6401b271:	mov    esi,edi
6401b273:	xor    ecx,ebx
6401b275:	add    esi,eax
6401b277:	add    edi,ecx
6401b279:	xor    ecx,0xffffffff
6401b27c:	xor    eax,0xffffffff
6401b27f:	xor    ecx,edi
6401b281:	xor    eax,esi
6401b283:	add    edx,0x4
6401b286:	and    ecx,0x81010100
6401b28c:	jne    0x6401b2aa
6401b28e:	and    eax,0x81010100
6401b293:	je     0x6401b268
6401b295:	and    eax,0x1010100
6401b29a:	jne    0x6401b2a4
6401b29c:	and    esi,0x80000000
6401b2a2:	jne    0x6401b268
6401b2a4:	pop    esi
6401b2a5:	pop    edi
6401b2a6:	pop    ebx
6401b2a7:	xor    eax,eax
6401b2a9:	ret    
6401b2aa:	mov    eax,DWORD PTR [edx-0x4]
6401b2ad:	cmp    al,bl
6401b2af:	je     0x6401b2e7
6401b2b1:	test   al,al
6401b2b3:	je     0x6401b2a4
6401b2b5:	cmp    ah,bl
6401b2b7:	je     0x6401b2e0
6401b2b9:	test   ah,ah
6401b2bb:	je     0x6401b2a4
6401b2bd:	shr    eax,0x10
6401b2c0:	cmp    al,bl
6401b2c2:	je     0x6401b2d9
6401b2c4:	test   al,al
6401b2c6:	je     0x6401b2a4
6401b2c8:	cmp    ah,bl
6401b2ca:	je     0x6401b2d2
6401b2cc:	test   ah,ah
6401b2ce:	je     0x6401b2a4
6401b2d0:	jmp    0x6401b268
6401b2d2:	pop    esi
6401b2d3:	pop    edi
6401b2d4:	lea    eax,[edx-0x1]
6401b2d7:	pop    ebx
6401b2d8:	ret    
6401b2d9:	lea    eax,[edx-0x2]
6401b2dc:	pop    esi
6401b2dd:	pop    edi
6401b2de:	pop    ebx
6401b2df:	ret    
6401b2e0:	lea    eax,[edx-0x3]
6401b2e3:	pop    esi
6401b2e4:	pop    edi
6401b2e5:	pop    ebx
6401b2e6:	ret    
6401b2e7:	lea    eax,[edx-0x4]
6401b2ea:	pop    esi
6401b2eb:	pop    edi
6401b2ec:	pop    ebx
6401b2ed:	ret    
6401b2ee:	int3   
6401b2ef:	int3   
6401b2f0:	mov    eax,DWORD PTR [esp+0x4]
6401b2f4:	push   0x0
6401b2f6:	push   eax
6401b2f7:	call   DWORD PTR ds:0x64028fc0
6401b2fd:	ret    0x4
6401b300:	push   ebp
6401b301:	mov    ebp,esp
6401b303:	push   0xfffffffe
6401b305:	push   0x64025cf8
6401b30a:	push   0x64010760
6401b30f:	mov    eax,fs:0x0
6401b315:	push   eax
6401b316:	sub    esp,0x18
6401b319:	mov    eax,ds:0x64028038
6401b31e:	xor    DWORD PTR [ebp-0x8],eax
6401b321:	xor    eax,ebp
6401b323:	mov    DWORD PTR [ebp-0x1c],eax
6401b326:	push   ebx
6401b327:	push   esi
6401b328:	push   edi
6401b329:	push   eax
6401b32a:	lea    eax,[ebp-0x10]
6401b32d:	mov    fs:0x0,eax
6401b333:	mov    DWORD PTR [ebp-0x18],esp
6401b336:	mov    esi,DWORD PTR [ebp+0x8]
6401b339:	test   esi,esi
6401b33b:	je     0x6401b392
6401b33d:	push   esi
6401b33e:	call   DWORD PTR ds:0x6402107c
6401b344:	mov    edi,eax
6401b346:	add    edi,0x1
6401b349:	mov    DWORD PTR [ebp-0x20],edi
6401b34c:	push   0x0
6401b34e:	push   0x0
6401b350:	push   edi
6401b351:	push   esi
6401b352:	push   0x0
6401b354:	push   0x0
6401b356:	call   DWORD PTR ds:0x6402103c
6401b35c:	mov    esi,eax
6401b35e:	mov    DWORD PTR [ebp-0x28],esi
6401b361:	test   esi,esi
6401b363:	jne    0x6401b399
6401b365:	mov    esi,DWORD PTR ds:0x64021044
6401b36b:	call   esi
6401b36d:	test   eax,eax
6401b36f:	jg     0x6401b380
6401b371:	call   esi
6401b373:	push   eax
6401b374:	call   0x6401b2f0
6401b379:	xor    eax,eax
6401b37b:	jmp    0x6401b460
6401b380:	call   esi
6401b382:	and    eax,0xffff
6401b387:	or     eax,0x80070000
6401b38c:	push   eax
6401b38d:	call   0x6401b2f0
6401b392:	xor    eax,eax
6401b394:	jmp    0x6401b460
6401b399:	mov    DWORD PTR [ebp-0x4],0x0
6401b3a0:	lea    eax,[esi+esi*1]
6401b3a3:	cmp    esi,0x1000
6401b3a9:	jge    0x6401b3c3
6401b3ab:	call   0x6400fad0
6401b3b0:	mov    DWORD PTR [ebp-0x18],esp
6401b3b3:	mov    eax,esp
6401b3b5:	mov    ebx,eax
6401b3b7:	mov    DWORD PTR [ebp-0x24],ebx
6401b3ba:	mov    DWORD PTR [ebp-0x4],0xfffffffe
6401b3c1:	jmp    0x6401b3f5
6401b3c3:	push   eax
6401b3c4:	call   0x640102c3
6401b3c9:	add    esp,0x4
6401b3cc:	mov    ebx,eax
6401b3ce:	mov    DWORD PTR [ebp-0x24],ebx
6401b3d1:	mov    DWORD PTR [ebp-0x4],0xfffffffe
6401b3d8:	jmp    0x6401b3f5
6401b3da:	mov    eax,0x1
6401b3df:	ret    
6401b3e0:	mov    esp,DWORD PTR [ebp-0x18]
6401b3e3:	xor    ebx,ebx
6401b3e5:	mov    DWORD PTR [ebp-0x24],ebx
6401b3e8:	mov    DWORD PTR [ebp-0x4],0xfffffffe
6401b3ef:	mov    edi,DWORD PTR [ebp-0x20]
6401b3f2:	mov    esi,DWORD PTR [ebp-0x28]
6401b3f5:	test   ebx,ebx
6401b3f7:	jne    0x6401b407
6401b3f9:	push   0x8007000e
6401b3fe:	call   0x6401b2f0
6401b403:	xor    eax,eax
6401b405:	jmp    0x6401b460
6401b407:	push   esi
6401b408:	push   ebx
6401b409:	push   edi
6401b40a:	mov    ecx,DWORD PTR [ebp+0x8]
6401b40d:	push   ecx
6401b40e:	push   0x0
6401b410:	push   0x0
6401b412:	call   DWORD PTR ds:0x6402103c
6401b418:	test   eax,eax
6401b41a:	jne    0x6401b436
6401b41c:	cmp    esi,0x1000
6401b422:	jl     0x6401b365
6401b428:	push   ebx
6401b429:	call   0x640101e6
6401b42e:	add    esp,0x4
6401b431:	jmp    0x6401b365
6401b436:	push   ebx
6401b437:	call   DWORD PTR ds:0x64021188
6401b43d:	mov    edi,eax
6401b43f:	cmp    esi,0x1000
6401b445:	jl     0x6401b450
6401b447:	push   ebx
6401b448:	call   0x640101e6
6401b44d:	add    esp,0x4
6401b450:	test   edi,edi
6401b452:	jne    0x6401b45e
6401b454:	push   0x8007000e
6401b459:	call   0x6401b2f0
6401b45e:	mov    eax,edi
6401b460:	lea    esp,[ebp-0x38]
6401b463:	mov    ecx,DWORD PTR [ebp-0x10]
6401b466:	mov    DWORD PTR fs:0x0,ecx
6401b46d:	pop    ecx
6401b46e:	pop    edi
6401b46f:	pop    esi
6401b470:	pop    ebx
6401b471:	mov    ecx,DWORD PTR [ebp-0x1c]
6401b474:	xor    ecx,ebp
6401b476:	call   0x6400f34e
6401b47b:	mov    esp,ebp
6401b47d:	pop    ebp
6401b47e:	ret    0x4
6401b481:	int3   
6401b482:	int3   
6401b483:	int3   
6401b484:	int3   
6401b485:	int3   
6401b486:	int3   
6401b487:	int3   
6401b488:	int3   
6401b489:	int3   
6401b48a:	int3   
6401b48b:	int3   
6401b48c:	int3   
6401b48d:	int3   
6401b48e:	int3   
6401b48f:	int3   
6401b490:	push   esi
6401b491:	mov    esi,ecx
6401b493:	mov    eax,DWORD PTR [esi+0x8]
6401b496:	test   eax,eax
6401b498:	mov    DWORD PTR [esi],0x640234b8
6401b49e:	je     0x6401b4a8
6401b4a0:	mov    ecx,DWORD PTR [eax]
6401b4a2:	mov    edx,DWORD PTR [ecx+0x8]
6401b4a5:	push   eax
6401b4a6:	call   edx
6401b4a8:	cmp    DWORD PTR [esi+0xc],0x0
6401b4ac:	je     0x6401b4c5
6401b4ae:	call   DWORD PTR ds:0x640210f8
6401b4b4:	test   eax,eax
6401b4b6:	je     0x6401b4c5
6401b4b8:	mov    ecx,DWORD PTR [esi+0xc]
6401b4bb:	push   ecx
6401b4bc:	push   0x0
6401b4be:	push   eax
6401b4bf:	call   DWORD PTR ds:0x640210ec
6401b4c5:	pop    esi
6401b4c6:	ret    
6401b4c7:	int3   
6401b4c8:	int3   
6401b4c9:	int3   
6401b4ca:	int3   
6401b4cb:	int3   
6401b4cc:	int3   
6401b4cd:	int3   
6401b4ce:	int3   
6401b4cf:	int3   
6401b4d0:	sub    esp,0x10
6401b4d3:	mov    eax,DWORD PTR [esp+0x14]
6401b4d7:	mov    ecx,DWORD PTR [esp+0x18]
6401b4db:	push   0x64025d14
6401b4e0:	lea    edx,[esp+0x4]
6401b4e4:	push   edx
6401b4e5:	mov    DWORD PTR [esp+0x8],0x640234b8
6401b4ed:	mov    DWORD PTR [esp+0xc],eax
6401b4f1:	mov    DWORD PTR [esp+0x10],ecx
6401b4f5:	mov    DWORD PTR [esp+0x14],0x0
6401b4fd:	call   0x6400ef3d
6401b502:	int3   
6401b503:	int3   
6401b504:	int3   
6401b505:	int3   
6401b506:	int3   
6401b507:	int3   
6401b508:	int3   
6401b509:	int3   
6401b50a:	int3   
6401b50b:	int3   
6401b50c:	int3   
6401b50d:	int3   
6401b50e:	int3   
6401b50f:	int3   
6401b510:	mov    eax,DWORD PTR [esp+0x4]
6401b514:	push   esi
6401b515:	mov    esi,ecx
6401b517:	mov    DWORD PTR [esi],0x640234b8
6401b51d:	mov    ecx,DWORD PTR [eax+0x4]
6401b520:	mov    DWORD PTR [esi+0x4],ecx
6401b523:	mov    edx,DWORD PTR [eax+0x8]
6401b526:	mov    eax,edx
6401b528:	test   eax,eax
6401b52a:	mov    DWORD PTR [esi+0x8],edx
6401b52d:	mov    DWORD PTR [esi+0xc],0x0
6401b534:	je     0x6401b53e
6401b536:	mov    ecx,DWORD PTR [eax]
6401b538:	mov    edx,DWORD PTR [ecx+0x4]
6401b53b:	push   eax
6401b53c:	call   edx
6401b53e:	mov    eax,esi
6401b540:	pop    esi
6401b541:	ret    0x4
6401b544:	int3   
6401b545:	int3   
6401b546:	int3   
6401b547:	int3   
6401b548:	int3   
6401b549:	int3   
6401b54a:	int3   
6401b54b:	int3   
6401b54c:	int3   
6401b54d:	int3   
6401b54e:	int3   
6401b54f:	int3   
6401b550:	push   esi
6401b551:	mov    esi,ecx
6401b553:	mov    eax,DWORD PTR [esi+0x8]
6401b556:	test   eax,eax
6401b558:	mov    DWORD PTR [esi],0x640234b8
6401b55e:	je     0x6401b568
6401b560:	mov    ecx,DWORD PTR [eax]
6401b562:	mov    edx,DWORD PTR [ecx+0x8]
6401b565:	push   eax
6401b566:	call   edx
6401b568:	cmp    DWORD PTR [esi+0xc],0x0
6401b56c:	je     0x6401b585
6401b56e:	call   DWORD PTR ds:0x640210f8
6401b574:	test   eax,eax
6401b576:	je     0x6401b585
6401b578:	mov    ecx,DWORD PTR [esi+0xc]
6401b57b:	push   ecx
6401b57c:	push   0x0
6401b57e:	push   eax
6401b57f:	call   DWORD PTR ds:0x640210ec
6401b585:	test   BYTE PTR [esp+0x8],0x1
6401b58a:	je     0x6401b595
6401b58c:	push   esi
6401b58d:	call   0x6400eb52
6401b592:	add    esp,0x4
6401b595:	mov    eax,esi
6401b597:	pop    esi
6401b598:	ret    0x4
6401b59b:	int3   
6401b59c:	jmp    DWORD PTR ds:0x6402110c
6401b5a2:	ret    
6401b5a3:	mov    eax,0x6401c0ae
6401b5a8:	mov    ds:0x64028adc,eax
6401b5ad:	mov    DWORD PTR ds:0x64028ae0,0x6401b7aa
6401b5b7:	mov    DWORD PTR ds:0x64028ae4,0x6401b768
6401b5c1:	mov    DWORD PTR ds:0x64028ae8,0x6401b79c
6401b5cb:	mov    DWORD PTR ds:0x64028aec,0x6401b712
6401b5d5:	mov    ds:0x64028af0,eax
6401b5da:	mov    DWORD PTR ds:0x64028af4,0x6401c028
6401b5e4:	mov    DWORD PTR ds:0x64028af8,0x6401b728
6401b5ee:	mov    DWORD PTR ds:0x64028afc,0x6401b692
6401b5f8:	mov    DWORD PTR ds:0x64028b00,0x6401b621
6401b602:	ret    
6401b603:	call   0x6401b5a3
6401b608:	call   0x6401c134
6401b60d:	cmp    DWORD PTR [esp+0x4],0x0
6401b612:	mov    ds:0x64029fd4,eax
6401b617:	je     0x6401b61e
6401b619:	call   0x6401c0cf
6401b61e:	fnclex 
6401b620:	ret    
6401b621:	push   ebp
6401b622:	mov    ebp,esp
6401b624:	sub    esp,0x10
6401b627:	push   esi
6401b628:	push   DWORD PTR [ebp+0xc]
6401b62b:	lea    ecx,[ebp-0x10]
6401b62e:	call   0x6400f4f1
6401b633:	mov    esi,DWORD PTR [ebp+0x8]
6401b636:	movsx  eax,BYTE PTR [esi]
6401b639:	push   eax
6401b63a:	call   0x640101bf
6401b63f:	cmp    eax,0x65
6401b642:	jmp    0x6401b650
6401b644:	inc    esi
6401b645:	movzx  eax,BYTE PTR [esi]
6401b648:	push   eax
6401b649:	call   0x6400ff88
6401b64e:	test   eax,eax
6401b650:	pop    ecx
6401b651:	jne    0x6401b644
6401b653:	movsx  eax,BYTE PTR [esi]
6401b656:	push   eax
6401b657:	call   0x640101bf
6401b65c:	cmp    eax,0x78
6401b65f:	pop    ecx
6401b660:	jne    0x6401b664
6401b662:	inc    esi
6401b663:	inc    esi
6401b664:	mov    ecx,DWORD PTR [ebp-0x10]
6401b667:	mov    ecx,DWORD PTR [ecx+0xbc]
6401b66d:	mov    ecx,DWORD PTR [ecx]
6401b66f:	mov    al,BYTE PTR [esi]
6401b671:	mov    cl,BYTE PTR [ecx]
6401b673:	mov    BYTE PTR [esi],cl
6401b675:	inc    esi
6401b676:	mov    cl,BYTE PTR [esi]
6401b678:	mov    BYTE PTR [esi],al
6401b67a:	mov    al,cl
6401b67c:	mov    cl,BYTE PTR [esi]
6401b67e:	inc    esi
6401b67f:	test   cl,cl
6401b681:	jne    0x6401b676
6401b683:	cmp    BYTE PTR [ebp-0x4],cl
6401b686:	pop    esi
6401b687:	je     0x6401b690
6401b689:	mov    eax,DWORD PTR [ebp-0x8]
6401b68c:	and    DWORD PTR [eax+0x70],0xfffffffd
6401b690:	leave  
6401b691:	ret    
6401b692:	push   ebp
6401b693:	mov    ebp,esp
6401b695:	sub    esp,0x10
6401b698:	push   esi
6401b699:	push   DWORD PTR [ebp+0xc]
6401b69c:	lea    ecx,[ebp-0x10]
6401b69f:	call   0x6400f4f1
6401b6a4:	mov    eax,DWORD PTR [ebp+0x8]
6401b6a7:	mov    cl,BYTE PTR [eax]
6401b6a9:	test   cl,cl
6401b6ab:	mov    esi,DWORD PTR [ebp-0x10]
6401b6ae:	je     0x6401b6c5
6401b6b0:	mov    edx,DWORD PTR [esi+0xbc]
6401b6b6:	mov    edx,DWORD PTR [edx]
6401b6b8:	mov    dl,BYTE PTR [edx]
6401b6ba:	cmp    cl,dl
6401b6bc:	je     0x6401b6c5
6401b6be:	inc    eax
6401b6bf:	mov    cl,BYTE PTR [eax]
6401b6c1:	test   cl,cl
6401b6c3:	jne    0x6401b6ba
6401b6c5:	mov    cl,BYTE PTR [eax]
6401b6c7:	inc    eax
6401b6c8:	test   cl,cl
6401b6ca:	je     0x6401b702
6401b6cc:	jmp    0x6401b6d9
6401b6ce:	cmp    cl,0x65
6401b6d1:	je     0x6401b6df
6401b6d3:	cmp    cl,0x45
6401b6d6:	je     0x6401b6df
6401b6d8:	inc    eax
6401b6d9:	mov    cl,BYTE PTR [eax]
6401b6db:	test   cl,cl
6401b6dd:	jne    0x6401b6ce
6401b6df:	mov    edx,eax
6401b6e1:	dec    eax
6401b6e2:	cmp    BYTE PTR [eax],0x30
6401b6e5:	je     0x6401b6e1
6401b6e7:	mov    ecx,DWORD PTR [esi+0xbc]
6401b6ed:	mov    ecx,DWORD PTR [ecx]
6401b6ef:	push   ebx
6401b6f0:	mov    bl,BYTE PTR [eax]
6401b6f2:	cmp    bl,BYTE PTR [ecx]
6401b6f4:	pop    ebx
6401b6f5:	jne    0x6401b6f8
6401b6f7:	dec    eax
6401b6f8:	mov    cl,BYTE PTR [edx]
6401b6fa:	inc    eax
6401b6fb:	inc    edx
6401b6fc:	test   cl,cl
6401b6fe:	mov    BYTE PTR [eax],cl
6401b700:	jne    0x6401b6f8
6401b702:	cmp    BYTE PTR [ebp-0x4],0x0
6401b706:	pop    esi
6401b707:	je     0x6401b710
6401b709:	mov    eax,DWORD PTR [ebp-0x8]
6401b70c:	and    DWORD PTR [eax+0x70],0xfffffffd
6401b710:	leave  
6401b711:	ret    
6401b712:	fldz   
6401b714:	mov    eax,DWORD PTR [esp+0x4]
6401b718:	fcomp  QWORD PTR [eax]
6401b71a:	fnstsw ax
6401b71c:	test   ah,0x41
6401b71f:	jp     0x6401b725
6401b721:	xor    eax,eax
6401b723:	inc    eax
6401b724:	ret    
6401b725:	xor    eax,eax
6401b727:	ret    
6401b728:	push   ebp
6401b729:	mov    ebp,esp
6401b72b:	push   ecx
6401b72c:	push   ecx
6401b72d:	cmp    DWORD PTR [ebp+0x8],0x0
6401b731:	push   DWORD PTR [ebp+0x14]
6401b734:	push   DWORD PTR [ebp+0x10]
6401b737:	je     0x6401b752
6401b739:	lea    eax,[ebp-0x8]
6401b73c:	push   eax
6401b73d:	call   0x6401c18d
6401b742:	mov    ecx,DWORD PTR [ebp-0x8]
6401b745:	mov    eax,DWORD PTR [ebp+0xc]
6401b748:	mov    DWORD PTR [eax],ecx
6401b74a:	mov    ecx,DWORD PTR [ebp-0x4]
6401b74d:	mov    DWORD PTR [eax+0x4],ecx
6401b750:	jmp    0x6401b763
6401b752:	lea    eax,[ebp+0x8]
6401b755:	push   eax
6401b756:	call   0x6401c233
6401b75b:	mov    eax,DWORD PTR [ebp+0xc]
6401b75e:	mov    ecx,DWORD PTR [ebp+0x8]
6401b761:	mov    DWORD PTR [eax],ecx
6401b763:	add    esp,0xc
6401b766:	leave  
6401b767:	ret    
6401b768:	push   0x0
6401b76a:	push   DWORD PTR [esp+0x10]
6401b76e:	push   DWORD PTR [esp+0x10]
6401b772:	push   DWORD PTR [esp+0x10]
6401b776:	call   0x6401b728
6401b77b:	add    esp,0x10
6401b77e:	ret    
6401b77f:	test   edi,edi
6401b781:	push   esi
6401b782:	mov    esi,eax
6401b784:	je     0x6401b79a
6401b786:	push   esi
6401b787:	call   0x64010b20
6401b78c:	inc    eax
6401b78d:	push   eax
6401b78e:	push   esi
6401b78f:	add    esi,edi
6401b791:	push   esi
6401b792:	call   0x64010390
6401b797:	add    esp,0x10
6401b79a:	pop    esi
6401b79b:	ret    
6401b79c:	push   0x0
6401b79e:	push   DWORD PTR [esp+0x8]
6401b7a2:	call   0x6401b621
6401b7a7:	pop    ecx
6401b7a8:	pop    ecx
6401b7a9:	ret    
6401b7aa:	push   0x0
6401b7ac:	push   DWORD PTR [esp+0x8]
6401b7b0:	call   0x6401b692
6401b7b5:	pop    ecx
6401b7b6:	pop    ecx
6401b7b7:	ret    
6401b7b8:	push   ebp
6401b7b9:	mov    ebp,esp
6401b7bb:	sub    esp,0x10
6401b7be:	push   ebx
6401b7bf:	push   esi
6401b7c0:	push   edi
6401b7c1:	push   DWORD PTR [ebp+0x1c]
6401b7c4:	lea    ecx,[ebp-0x10]
6401b7c7:	mov    ebx,eax
6401b7c9:	call   0x6400f4f1
6401b7ce:	xor    esi,esi
6401b7d0:	cmp    ebx,esi
6401b7d2:	jne    0x6401b7ff
6401b7d4:	call   0x64011120
6401b7d9:	push   0x16
6401b7db:	pop    edi
6401b7dc:	push   esi
6401b7dd:	push   esi
6401b7de:	push   esi
6401b7df:	push   esi
6401b7e0:	push   esi
6401b7e1:	mov    DWORD PTR [eax],edi
6401b7e3:	call   0x6400ee86
6401b7e8:	add    esp,0x14
6401b7eb:	cmp    BYTE PTR [ebp-0x4],0x0
6401b7ef:	je     0x6401b7f8
6401b7f1:	mov    eax,DWORD PTR [ebp-0x8]
6401b7f4:	and    DWORD PTR [eax+0x70],0xfffffffd
6401b7f8:	mov    eax,edi
6401b7fa:	jmp    0x6401b920
6401b7ff:	cmp    DWORD PTR [ebp+0x8],esi
6401b802:	jbe    0x6401b7d4
6401b804:	cmp    DWORD PTR [ebp+0xc],esi
6401b807:	jle    0x6401b80e
6401b809:	mov    eax,DWORD PTR [ebp+0xc]
6401b80c:	jmp    0x6401b810
6401b80e:	xor    eax,eax
6401b810:	add    eax,0x9
6401b813:	cmp    DWORD PTR [ebp+0x8],eax
6401b816:	ja     0x6401b821
6401b818:	call   0x64011120
6401b81d:	push   0x22
6401b81f:	jmp    0x6401b7db
6401b821:	cmp    BYTE PTR [ebp+0x18],0x0
6401b825:	je     0x6401b845
6401b827:	mov    edx,DWORD PTR [ebp+0x14]
6401b82a:	xor    eax,eax
6401b82c:	cmp    DWORD PTR [ebp+0xc],esi
6401b82f:	setg   al
6401b832:	xor    ecx,ecx
6401b834:	cmp    DWORD PTR [edx],0x2d
6401b837:	sete   cl
6401b83a:	mov    edi,eax
6401b83c:	add    ecx,ebx
6401b83e:	mov    eax,ecx
6401b840:	call   0x6401b77f
6401b845:	mov    edi,DWORD PTR [ebp+0x14]
6401b848:	cmp    DWORD PTR [edi],0x2d
6401b84b:	mov    esi,ebx
6401b84d:	jne    0x6401b855
6401b84f:	mov    BYTE PTR [ebx],0x2d
6401b852:	lea    esi,[ebx+0x1]
6401b855:	cmp    DWORD PTR [ebp+0xc],0x0
6401b859:	jle    0x6401b873
6401b85b:	lea    eax,[esi+0x1]
6401b85e:	mov    cl,BYTE PTR [eax]
6401b860:	mov    BYTE PTR [esi],cl
6401b862:	mov    esi,eax
6401b864:	mov    eax,DWORD PTR [ebp-0x10]
6401b867:	mov    eax,DWORD PTR [eax+0xbc]
6401b86d:	mov    eax,DWORD PTR [eax]
6401b86f:	mov    al,BYTE PTR [eax]
6401b871:	mov    BYTE PTR [esi],al
6401b873:	xor    eax,eax
6401b875:	cmp    BYTE PTR [ebp+0x18],al
6401b878:	sete   al
6401b87b:	add    eax,DWORD PTR [ebp+0xc]
6401b87e:	add    esi,eax
6401b880:	cmp    DWORD PTR [ebp+0x8],0xffffffff
6401b884:	jne    0x6401b88b
6401b886:	or     ebx,0xffffffff
6401b889:	jmp    0x6401b890
6401b88b:	sub    ebx,esi
6401b88d:	add    ebx,DWORD PTR [ebp+0x8]
6401b890:	push   0x640234c8
6401b895:	push   ebx
6401b896:	push   esi
6401b897:	call   0x64010d18
6401b89c:	add    esp,0xc
6401b89f:	xor    ebx,ebx
6401b8a1:	test   eax,eax
6401b8a3:	je     0x6401b8b2
6401b8a5:	push   ebx
6401b8a6:	push   ebx
6401b8a7:	push   ebx
6401b8a8:	push   ebx
6401b8a9:	push   ebx
6401b8aa:	call   0x6400ed8a
6401b8af:	add    esp,0x14
6401b8b2:	cmp    DWORD PTR [ebp+0x10],ebx
6401b8b5:	lea    ecx,[esi+0x2]
6401b8b8:	je     0x6401b8bd
6401b8ba:	mov    BYTE PTR [esi],0x45
6401b8bd:	mov    eax,DWORD PTR [edi+0xc]
6401b8c0:	inc    esi
6401b8c1:	cmp    BYTE PTR [eax],0x30
6401b8c4:	je     0x6401b8f4
6401b8c6:	mov    eax,DWORD PTR [edi+0x4]
6401b8c9:	dec    eax
6401b8ca:	jns    0x6401b8d1
6401b8cc:	neg    eax
6401b8ce:	mov    BYTE PTR [esi],0x2d
6401b8d1:	inc    esi
6401b8d2:	cmp    eax,0x64
6401b8d5:	jl     0x6401b8e1
6401b8d7:	cdq    
6401b8d8:	push   0x64
6401b8da:	pop    edi
6401b8db:	idiv   edi
6401b8dd:	add    BYTE PTR [esi],al
6401b8df:	mov    eax,edx
6401b8e1:	inc    esi
6401b8e2:	cmp    eax,0xa
6401b8e5:	jl     0x6401b8f1
6401b8e7:	cdq    
6401b8e8:	push   0xa
6401b8ea:	pop    edi
6401b8eb:	idiv   edi
6401b8ed:	add    BYTE PTR [esi],al
6401b8ef:	mov    eax,edx
6401b8f1:	add    BYTE PTR [esi+0x1],al
6401b8f4:	test   BYTE PTR ds:0x64029fd8,0x1
6401b8fb:	je     0x6401b911
6401b8fd:	cmp    BYTE PTR [ecx],0x30
6401b900:	jne    0x6401b911
6401b902:	push   0x3
6401b904:	lea    eax,[ecx+0x1]
6401b907:	push   eax
6401b908:	push   ecx
6401b909:	call   0x64010390
6401b90e:	add    esp,0xc
6401b911:	cmp    BYTE PTR [ebp-0x4],0x0
6401b915:	je     0x6401b91e
6401b917:	mov    eax,DWORD PTR [ebp-0x8]
6401b91a:	and    DWORD PTR [eax+0x70],0xfffffffd
6401b91e:	xor    eax,eax
6401b920:	pop    edi
6401b921:	pop    esi
6401b922:	pop    ebx
6401b923:	leave  
6401b924:	ret    
6401b925:	push   ebp
6401b926:	mov    ebp,esp
6401b928:	sub    esp,0x2c
6401b92b:	mov    eax,ds:0x64028038
6401b930:	xor    eax,ebp
6401b932:	mov    DWORD PTR [ebp-0x4],eax
6401b935:	mov    eax,DWORD PTR [ebp+0x8]
6401b938:	push   ebx
6401b939:	push   esi
6401b93a:	push   edi
6401b93b:	mov    edi,DWORD PTR [ebp+0xc]
6401b93e:	push   0x16
6401b940:	pop    esi
6401b941:	push   esi
6401b942:	lea    ecx,[ebp-0x1c]
6401b945:	push   ecx
6401b946:	lea    ecx,[ebp-0x2c]
6401b949:	push   ecx
6401b94a:	push   DWORD PTR [eax+0x4]
6401b94d:	push   DWORD PTR [eax]
6401b94f:	call   0x6401c451
6401b954:	xor    ebx,ebx
6401b956:	add    esp,0x14
6401b959:	cmp    edi,ebx
6401b95b:	jne    0x6401b975
6401b95d:	call   0x64011120
6401b962:	push   ebx
6401b963:	push   ebx
6401b964:	push   ebx
6401b965:	push   ebx
6401b966:	push   ebx
6401b967:	mov    DWORD PTR [eax],esi
6401b969:	call   0x6400ee86
6401b96e:	add    esp,0x14
6401b971:	mov    eax,esi
6401b973:	jmp    0x6401b9e4
6401b975:	mov    eax,DWORD PTR [ebp+0x10]
6401b978:	cmp    eax,ebx
6401b97a:	jbe    0x6401b95d
6401b97c:	cmp    eax,0xffffffff
6401b97f:	mov    esi,DWORD PTR [ebp+0x14]
6401b982:	jne    0x6401b989
6401b984:	or     eax,0xffffffff
6401b987:	jmp    0x6401b99d
6401b989:	xor    ecx,ecx
6401b98b:	cmp    DWORD PTR [ebp-0x2c],0x2d
6401b98f:	sete   cl
6401b992:	sub    eax,ecx
6401b994:	xor    ecx,ecx
6401b996:	cmp    esi,ebx
6401b998:	setg   cl
6401b99b:	sub    eax,ecx
6401b99d:	lea    ecx,[ebp-0x2c]
6401b9a0:	push   ecx
6401b9a1:	lea    ecx,[esi+0x1]
6401b9a4:	push   ecx
6401b9a5:	push   eax
6401b9a6:	xor    eax,eax
6401b9a8:	cmp    DWORD PTR [ebp-0x2c],0x2d
6401b9ac:	sete   al
6401b9af:	xor    ecx,ecx
6401b9b1:	cmp    esi,ebx
6401b9b3:	setg   cl
6401b9b6:	add    eax,edi
6401b9b8:	add    ecx,eax
6401b9ba:	push   ecx
6401b9bb:	call   0x6401c2d9
6401b9c0:	add    esp,0x10
6401b9c3:	cmp    eax,ebx
6401b9c5:	je     0x6401b9cb
6401b9c7:	mov    BYTE PTR [edi],bl
6401b9c9:	jmp    0x6401b9e4
6401b9cb:	push   DWORD PTR [ebp+0x1c]
6401b9ce:	lea    eax,[ebp-0x2c]
6401b9d1:	push   ebx
6401b9d2:	push   eax
6401b9d3:	push   DWORD PTR [ebp+0x18]
6401b9d6:	mov    eax,edi
6401b9d8:	push   esi
6401b9d9:	push   DWORD PTR [ebp+0x10]
6401b9dc:	call   0x6401b7b8
6401b9e1:	add    esp,0x18
6401b9e4:	mov    ecx,DWORD PTR [ebp-0x4]
6401b9e7:	pop    edi
6401b9e8:	pop    esi
6401b9e9:	xor    ecx,ebp
6401b9eb:	pop    ebx
6401b9ec:	call   0x6400f34e
6401b9f1:	leave  
6401b9f2:	ret    
6401b9f3:	push   ebp
6401b9f4:	mov    ebp,esp
6401b9f6:	push   0x0
6401b9f8:	push   DWORD PTR [ebp+0x18]
6401b9fb:	push   DWORD PTR [ebp+0x14]
6401b9fe:	push   DWORD PTR [ebp+0x10]
6401ba01:	push   DWORD PTR [ebp+0xc]
6401ba04:	push   DWORD PTR [ebp+0x8]
6401ba07:	call   0x6401b925
6401ba0c:	add    esp,0x18
6401ba0f:	pop    ebp
6401ba10:	ret    
6401ba11:	push   ebp
6401ba12:	mov    ebp,esp
6401ba14:	sub    esp,0x24
6401ba17:	push   esi
6401ba18:	push   edi
6401ba19:	push   DWORD PTR [ebp+0x1c]
6401ba1c:	lea    ecx,[ebp-0x24]
6401ba1f:	mov    DWORD PTR [ebp-0x14],0x3ff
6401ba26:	xor    edi,edi
6401ba28:	mov    DWORD PTR [ebp-0x4],0x30
6401ba2f:	call   0x6400f4f1
6401ba34:	cmp    DWORD PTR [ebp+0x14],edi
6401ba37:	jge    0x6401ba3c
6401ba39:	mov    DWORD PTR [ebp+0x14],edi
6401ba3c:	mov    esi,DWORD PTR [ebp+0xc]
6401ba3f:	cmp    esi,edi
6401ba41:	jne    0x6401ba6e
6401ba43:	call   0x64011120
6401ba48:	push   0x16
6401ba4a:	pop    esi
6401ba4b:	push   edi
6401ba4c:	push   edi
6401ba4d:	push   edi
6401ba4e:	push   edi
6401ba4f:	push   edi
6401ba50:	mov    DWORD PTR [eax],esi
6401ba52:	call   0x6400ee86
6401ba57:	add    esp,0x14
6401ba5a:	cmp    BYTE PTR [ebp-0x18],0x0
6401ba5e:	je     0x6401ba67
6401ba60:	mov    eax,DWORD PTR [ebp-0x1c]
6401ba63:	and    DWORD PTR [eax+0x70],0xfffffffd
6401ba67:	mov    eax,esi
6401ba69:	jmp    0x6401bd7e
6401ba6e:	cmp    DWORD PTR [ebp+0x10],edi
6401ba71:	jbe    0x6401ba43
6401ba73:	mov    eax,DWORD PTR [ebp+0x14]
6401ba76:	add    eax,0xb
6401ba79:	cmp    DWORD PTR [ebp+0x10],eax
6401ba7c:	mov    BYTE PTR [esi],0x0
6401ba7f:	ja     0x6401ba8a
6401ba81:	call   0x64011120
6401ba86:	push   0x22
6401ba88:	jmp    0x6401ba4a
6401ba8a:	mov    edi,DWORD PTR [ebp+0x8]
6401ba8d:	mov    eax,DWORD PTR [edi]
6401ba8f:	mov    DWORD PTR [ebp-0xc],eax
6401ba92:	mov    eax,DWORD PTR [edi+0x4]
6401ba95:	mov    ecx,eax
6401ba97:	shr    ecx,0x14
6401ba9a:	mov    edx,0x7ff
6401ba9f:	push   ebx
6401baa0:	and    ecx,edx
6401baa2:	xor    ebx,ebx
6401baa4:	cmp    ecx,edx
6401baa6:	jne    0x6401bb3c
6401baac:	test   ebx,ebx
6401baae:	jne    0x6401bb3c
6401bab4:	mov    eax,DWORD PTR [ebp+0x10]
6401bab7:	cmp    eax,0xffffffff
6401baba:	jne    0x6401bac0
6401babc:	or     eax,eax
6401babe:	jmp    0x6401bac3
6401bac0:	add    eax,0xfffffffe
6401bac3:	push   0x0
6401bac5:	push   DWORD PTR [ebp+0x14]
6401bac8:	lea    ebx,[esi+0x2]
6401bacb:	push   eax
6401bacc:	push   ebx
6401bacd:	push   edi
6401bace:	call   0x6401b9f3
6401bad3:	add    esp,0x14
6401bad6:	test   eax,eax
6401bad8:	je     0x6401baf3
6401bada:	cmp    BYTE PTR [ebp-0x18],0x0
6401bade:	mov    BYTE PTR [esi],0x0
6401bae1:	je     0x6401bd7d
6401bae7:	mov    ecx,DWORD PTR [ebp-0x1c]
6401baea:	and    DWORD PTR [ecx+0x70],0xfffffffd
6401baee:	jmp    0x6401bd7d
6401baf3:	cmp    BYTE PTR [ebx],0x2d
6401baf6:	jne    0x6401bafc
6401baf8:	mov    BYTE PTR [esi],0x2d
6401bafb:	inc    esi
6401bafc:	mov    BYTE PTR [esi],0x30
6401baff:	inc    esi
6401bb00:	cmp    DWORD PTR [ebp+0x18],0x0
6401bb04:	push   0x65
6401bb06:	sete   al
6401bb09:	dec    al
6401bb0b:	and    al,0xe0
6401bb0d:	add    al,0x78
6401bb0f:	mov    BYTE PTR [esi],al
6401bb11:	inc    esi
6401bb12:	push   esi
6401bb13:	call   0x6401c160
6401bb18:	test   eax,eax
6401bb1a:	pop    ecx
6401bb1b:	pop    ecx
6401bb1c:	je     0x6401bd6e
6401bb22:	cmp    DWORD PTR [ebp+0x18],0x0
6401bb26:	sete   cl
6401bb29:	dec    cl
6401bb2b:	and    cl,0xe0
6401bb2e:	add    cl,0x70
6401bb31:	mov    BYTE PTR [eax],cl
6401bb33:	mov    BYTE PTR [eax+0x3],0x0
6401bb37:	jmp    0x6401bd6e
6401bb3c:	and    eax,0x80000000
6401bb41:	xor    ecx,ecx
6401bb43:	or     ecx,eax
6401bb45:	je     0x6401bb4b
6401bb47:	mov    BYTE PTR [esi],0x2d
6401bb4a:	inc    esi
6401bb4b:	mov    ebx,DWORD PTR [ebp+0x18]
6401bb4e:	mov    BYTE PTR [esi],0x30
6401bb51:	inc    esi
6401bb52:	test   ebx,ebx
6401bb54:	sete   al
6401bb57:	dec    al
6401bb59:	and    al,0xe0
6401bb5b:	add    al,0x78
6401bb5d:	mov    BYTE PTR [esi],al
6401bb5f:	mov    ecx,DWORD PTR [edi+0x4]
6401bb62:	inc    esi
6401bb63:	neg    ebx
6401bb65:	sbb    ebx,ebx
6401bb67:	and    ebx,0xffffffe0
6401bb6a:	and    ecx,0x7ff00000
6401bb70:	xor    eax,eax
6401bb72:	add    ebx,0x27
6401bb75:	xor    edx,edx
6401bb77:	or     eax,ecx
6401bb79:	jne    0x6401bb9c
6401bb7b:	mov    BYTE PTR [esi],0x30
6401bb7e:	mov    ecx,DWORD PTR [edi+0x4]
6401bb81:	mov    eax,DWORD PTR [edi]
6401bb83:	and    ecx,0xfffff
6401bb89:	inc    esi
6401bb8a:	or     eax,ecx
6401bb8c:	jne    0x6401bb93
6401bb8e:	mov    DWORD PTR [ebp-0x14],edx
6401bb91:	jmp    0x6401bba0
6401bb93:	mov    DWORD PTR [ebp-0x14],0x3fe
6401bb9a:	jmp    0x6401bba0
6401bb9c:	mov    BYTE PTR [esi],0x31
6401bb9f:	inc    esi
6401bba0:	mov    eax,esi
6401bba2:	inc    esi
6401bba3:	cmp    DWORD PTR [ebp+0x14],edx
6401bba6:	mov    DWORD PTR [ebp+0xc],eax
6401bba9:	jne    0x6401bbaf
6401bbab:	mov    BYTE PTR [eax],dl
6401bbad:	jmp    0x6401bbbe
6401bbaf:	mov    ecx,DWORD PTR [ebp-0x24]
6401bbb2:	mov    ecx,DWORD PTR [ecx+0xbc]
6401bbb8:	mov    ecx,DWORD PTR [ecx]
6401bbba:	mov    cl,BYTE PTR [ecx]
6401bbbc:	mov    BYTE PTR [eax],cl
6401bbbe:	mov    ecx,DWORD PTR [edi+0x4]
6401bbc1:	mov    eax,DWORD PTR [edi]
6401bbc3:	and    ecx,0xfffff
6401bbc9:	mov    DWORD PTR [ebp-0x8],ecx
6401bbcc:	ja     0x6401bbd6
6401bbce:	cmp    eax,edx
6401bbd0:	jbe    0x6401bc8b
6401bbd6:	mov    DWORD PTR [ebp-0xc],edx
6401bbd9:	mov    DWORD PTR [ebp-0x8],0xf0000
6401bbe0:	cmp    DWORD PTR [ebp+0x14],0x0
6401bbe4:	jle    0x6401bc33
6401bbe6:	mov    edx,DWORD PTR [edi+0x4]
6401bbe9:	and    edx,DWORD PTR [ebp-0x8]
6401bbec:	mov    eax,DWORD PTR [edi]
6401bbee:	movsx  ecx,WORD PTR [ebp-0x4]
6401bbf2:	and    eax,DWORD PTR [ebp-0xc]
6401bbf5:	and    edx,0xfffff
6401bbfb:	call   0x6401c5c0
6401bc00:	add    ax,0x30
6401bc04:	movzx  eax,ax
6401bc07:	cmp    ax,0x39
6401bc0b:	jbe    0x6401bc0f
6401bc0d:	add    eax,ebx
6401bc0f:	mov    ecx,DWORD PTR [ebp-0x8]
6401bc12:	sub    DWORD PTR [ebp-0x4],0x4
6401bc16:	mov    BYTE PTR [esi],al
6401bc18:	mov    eax,DWORD PTR [ebp-0xc]
6401bc1b:	shrd   eax,ecx,0x4
6401bc1f:	shr    ecx,0x4
6401bc22:	inc    esi
6401bc23:	dec    DWORD PTR [ebp+0x14]
6401bc26:	cmp    WORD PTR [ebp-0x4],0x0
6401bc2b:	mov    DWORD PTR [ebp-0xc],eax
6401bc2e:	mov    DWORD PTR [ebp-0x8],ecx
6401bc31:	jge    0x6401bbe0
6401bc33:	cmp    WORD PTR [ebp-0x4],0x0
6401bc38:	jl     0x6401bc8b
6401bc3a:	mov    edx,DWORD PTR [edi+0x4]
6401bc3d:	and    edx,DWORD PTR [ebp-0x8]
6401bc40:	mov    eax,DWORD PTR [edi]
6401bc42:	movsx  ecx,WORD PTR [ebp-0x4]
6401bc46:	and    eax,DWORD PTR [ebp-0xc]
6401bc49:	and    edx,0xfffff
6401bc4f:	call   0x6401c5c0
6401bc54:	cmp    ax,0x8
6401bc58:	jbe    0x6401bc8b
6401bc5a:	lea    eax,[esi-0x1]
6401bc5d:	mov    cl,BYTE PTR [eax]
6401bc5f:	cmp    cl,0x66
6401bc62:	je     0x6401bc69
6401bc64:	cmp    cl,0x46
6401bc67:	jne    0x6401bc6f
6401bc69:	mov    BYTE PTR [eax],0x30
6401bc6c:	dec    eax
6401bc6d:	jmp    0x6401bc5d
6401bc6f:	cmp    eax,DWORD PTR [ebp+0xc]
6401bc72:	je     0x6401bc88
6401bc74:	mov    cl,BYTE PTR [eax]
6401bc76:	cmp    cl,0x39
6401bc79:	jne    0x6401bc82
6401bc7b:	add    bl,0x3a
6401bc7e:	mov    BYTE PTR [eax],bl
6401bc80:	jmp    0x6401bc8b
6401bc82:	inc    cl
6401bc84:	mov    BYTE PTR [eax],cl
6401bc86:	jmp    0x6401bc8b
6401bc88:	inc    BYTE PTR [eax-0x1]
6401bc8b:	cmp    DWORD PTR [ebp+0x14],0x0
6401bc8f:	jle    0x6401bca2
6401bc91:	push   DWORD PTR [ebp+0x14]
6401bc94:	push   0x30
6401bc96:	push   esi
6401bc97:	call   0x6400fa50
6401bc9c:	add    esp,0xc
6401bc9f:	add    esi,DWORD PTR [ebp+0x14]
6401bca2:	mov    eax,DWORD PTR [ebp+0xc]
6401bca5:	cmp    BYTE PTR [eax],0x0
6401bca8:	jne    0x6401bcac
6401bcaa:	mov    esi,eax
6401bcac:	cmp    DWORD PTR [ebp+0x18],0x0
6401bcb0:	mov    cl,0x34
6401bcb2:	sete   al
6401bcb5:	dec    al
6401bcb7:	and    al,0xe0
6401bcb9:	add    al,0x70
6401bcbb:	mov    BYTE PTR [esi],al
6401bcbd:	mov    eax,DWORD PTR [edi]
6401bcbf:	mov    edx,DWORD PTR [edi+0x4]
6401bcc2:	inc    esi
6401bcc3:	call   0x6401c5c0
6401bcc8:	xor    ebx,ebx
6401bcca:	and    eax,0x7ff
6401bccf:	and    edx,ebx
6401bcd1:	sub    eax,DWORD PTR [ebp-0x14]
6401bcd4:	push   ebx
6401bcd5:	pop    ecx
6401bcd6:	sbb    edx,ecx
6401bcd8:	js     0x6401bce6
6401bcda:	jg     0x6401bce0
6401bcdc:	cmp    eax,ebx
6401bcde:	jb     0x6401bce6
6401bce0:	mov    BYTE PTR [esi],0x2b
6401bce3:	inc    esi
6401bce4:	jmp    0x6401bcf0
6401bce6:	mov    BYTE PTR [esi],0x2d
6401bce9:	inc    esi
6401bcea:	neg    eax
6401bcec:	adc    edx,ebx
6401bcee:	neg    edx
6401bcf0:	cmp    edx,ebx
6401bcf2:	mov    edi,esi
6401bcf4:	mov    BYTE PTR [esi],0x30
6401bcf7:	jl     0x6401bd1d
6401bcf9:	mov    ecx,0x3e8
6401bcfe:	jg     0x6401bd04
6401bd00:	cmp    eax,ecx
6401bd02:	jb     0x6401bd1d
6401bd04:	push   ebx
6401bd05:	push   ecx
6401bd06:	push   edx
6401bd07:	push   eax
6401bd08:	call   0x6401c4e0
6401bd0d:	add    al,0x30
6401bd0f:	mov    BYTE PTR [esi],al
6401bd11:	inc    esi
6401bd12:	cmp    esi,edi
6401bd14:	mov    DWORD PTR [ebp-0x10],edx
6401bd17:	mov    eax,ecx
6401bd19:	mov    edx,ebx
6401bd1b:	jne    0x6401bd28
6401bd1d:	test   edx,edx
6401bd1f:	jl     0x6401bd3f
6401bd21:	jg     0x6401bd28
6401bd23:	cmp    eax,0x64
6401bd26:	jb     0x6401bd3f
6401bd28:	push   0x0
6401bd2a:	push   0x64
6401bd2c:	push   edx
6401bd2d:	push   eax
6401bd2e:	call   0x6401c4e0
6401bd33:	add    al,0x30
6401bd35:	mov    BYTE PTR [esi],al
6401bd37:	mov    DWORD PTR [ebp-0x10],edx
6401bd3a:	inc    esi
6401bd3b:	mov    eax,ecx
6401bd3d:	mov    edx,ebx
6401bd3f:	cmp    esi,edi
6401bd41:	jne    0x6401bd4e
6401bd43:	test   edx,edx
6401bd45:	jl     0x6401bd66
6401bd47:	jg     0x6401bd4e
6401bd49:	cmp    eax,0xa
6401bd4c:	jb     0x6401bd66
6401bd4e:	push   0x0
6401bd50:	push   0xa
6401bd52:	push   edx
6401bd53:	push   eax
6401bd54:	call   0x6401c4e0
6401bd59:	add    al,0x30
6401bd5b:	mov    BYTE PTR [esi],al
6401bd5d:	mov    DWORD PTR [ebp-0x10],edx
6401bd60:	inc    esi
6401bd61:	mov    eax,ecx
6401bd63:	mov    DWORD PTR [ebp-0x10],ebx
6401bd66:	add    al,0x30
6401bd68:	mov    BYTE PTR [esi],al
6401bd6a:	mov    BYTE PTR [esi+0x1],0x0
6401bd6e:	cmp    BYTE PTR [ebp-0x18],0x0
6401bd72:	je     0x6401bd7b
6401bd74:	mov    eax,DWORD PTR [ebp-0x1c]
6401bd77:	and    DWORD PTR [eax+0x70],0xfffffffd
6401bd7b:	xor    eax,eax
6401bd7d:	pop    ebx
6401bd7e:	pop    edi
6401bd7f:	pop    esi
6401bd80:	leave  
6401bd81:	ret    
6401bd82:	push   ebp
6401bd83:	mov    ebp,esp
6401bd85:	sub    esp,0x10
6401bd88:	push   ebx
6401bd89:	push   esi
6401bd8a:	push   edi
6401bd8b:	push   DWORD PTR [ebp+0x14]
6401bd8e:	mov    ebx,eax
6401bd90:	mov    esi,DWORD PTR [ebx+0x4]
6401bd93:	mov    edi,ecx
6401bd95:	lea    ecx,[ebp-0x10]
6401bd98:	dec    esi
6401bd99:	call   0x6400f4f1
6401bd9e:	test   edi,edi
6401bda0:	jne    0x6401bdcf
6401bda2:	call   0x64011120
6401bda7:	push   0x16
6401bda9:	pop    esi
6401bdaa:	mov    DWORD PTR [eax],esi
6401bdac:	xor    eax,eax
6401bdae:	push   eax
6401bdaf:	push   eax
6401bdb0:	push   eax
6401bdb1:	push   eax
6401bdb2:	push   eax
6401bdb3:	call   0x6400ee86
6401bdb8:	add    esp,0x14
6401bdbb:	cmp    BYTE PTR [ebp-0x4],0x0
6401bdbf:	je     0x6401bdc8
6401bdc1:	mov    eax,DWORD PTR [ebp-0x8]
6401bdc4:	and    DWORD PTR [eax+0x70],0xfffffffd
6401bdc8:	mov    eax,esi
6401bdca:	jmp    0x6401be72
6401bdcf:	cmp    DWORD PTR [ebp+0x8],0x0
6401bdd3:	jbe    0x6401bda2
6401bdd5:	cmp    BYTE PTR [ebp+0x10],0x0
6401bdd9:	je     0x6401bdf3
6401bddb:	cmp    esi,DWORD PTR [ebp+0xc]
6401bdde:	jne    0x6401bdf3
6401bde0:	xor    eax,eax
6401bde2:	cmp    DWORD PTR [ebx],0x2d
6401bde5:	sete   al
6401bde8:	add    eax,esi
6401bdea:	add    eax,edi
6401bdec:	mov    BYTE PTR [eax],0x30
6401bdef:	mov    BYTE PTR [eax+0x1],0x0
6401bdf3:	cmp    DWORD PTR [ebx],0x2d
6401bdf6:	mov    esi,edi
6401bdf8:	jne    0x6401be00
6401bdfa:	mov    BYTE PTR [edi],0x2d
6401bdfd:	lea    esi,[edi+0x1]
6401be00:	mov    eax,DWORD PTR [ebx+0x4]
6401be03:	xor    edi,edi
6401be05:	inc    edi
6401be06:	test   eax,eax
6401be08:	jg     0x6401be17
6401be0a:	mov    eax,esi
6401be0c:	call   0x6401b77f
6401be11:	mov    BYTE PTR [esi],0x30
6401be14:	inc    esi
6401be15:	jmp    0x6401be19
6401be17:	add    esi,eax
6401be19:	cmp    DWORD PTR [ebp+0xc],0x0
6401be1d:	jle    0x6401be63
6401be1f:	mov    eax,esi
6401be21:	call   0x6401b77f
6401be26:	mov    eax,DWORD PTR [ebp-0x10]
6401be29:	mov    eax,DWORD PTR [eax+0xbc]
6401be2f:	mov    eax,DWORD PTR [eax]
6401be31:	mov    al,BYTE PTR [eax]
6401be33:	mov    BYTE PTR [esi],al
6401be35:	mov    ebx,DWORD PTR [ebx+0x4]
6401be38:	inc    esi
6401be39:	test   ebx,ebx
6401be3b:	jge    0x6401be63
6401be3d:	neg    ebx
6401be3f:	cmp    BYTE PTR [ebp+0x10],0x0
6401be43:	jne    0x6401be4a
6401be45:	cmp    DWORD PTR [ebp+0xc],ebx
6401be48:	jl     0x6401be4d
6401be4a:	mov    DWORD PTR [ebp+0xc],ebx
6401be4d:	mov    edi,DWORD PTR [ebp+0xc]
6401be50:	mov    eax,esi
6401be52:	call   0x6401b77f
6401be57:	push   edi
6401be58:	push   0x30
6401be5a:	push   esi
6401be5b:	call   0x6400fa50
6401be60:	add    esp,0xc
6401be63:	cmp    BYTE PTR [ebp-0x4],0x0
6401be67:	je     0x6401be70
6401be69:	mov    eax,DWORD PTR [ebp-0x8]
6401be6c:	and    DWORD PTR [eax+0x70],0xfffffffd
6401be70:	xor    eax,eax
6401be72:	pop    edi
6401be73:	pop    esi
6401be74:	pop    ebx
6401be75:	leave  
6401be76:	ret    
6401be77:	push   ebp
6401be78:	mov    ebp,esp
6401be7a:	sub    esp,0x2c
6401be7d:	mov    eax,ds:0x64028038
6401be82:	xor    eax,ebp
6401be84:	mov    DWORD PTR [ebp-0x4],eax
6401be87:	mov    eax,DWORD PTR [ebp+0x8]
6401be8a:	push   ebx
6401be8b:	push   esi
6401be8c:	push   edi
6401be8d:	mov    edi,DWORD PTR [ebp+0xc]
6401be90:	push   0x16
6401be92:	pop    esi
6401be93:	push   esi
6401be94:	lea    ecx,[ebp-0x1c]
6401be97:	push   ecx
6401be98:	lea    ecx,[ebp-0x2c]
6401be9b:	push   ecx
6401be9c:	push   DWORD PTR [eax+0x4]
6401be9f:	push   DWORD PTR [eax]
6401bea1:	call   0x6401c451
6401bea6:	xor    ebx,ebx
6401bea8:	add    esp,0x14
6401beab:	cmp    edi,ebx
6401bead:	jne    0x6401bec7
6401beaf:	call   0x64011120
6401beb4:	push   ebx
6401beb5:	push   ebx
6401beb6:	push   ebx
6401beb7:	push   ebx
6401beb8:	push   ebx
6401beb9:	mov    DWORD PTR [eax],esi
6401bebb:	call   0x6400ee86
6401bec0:	add    esp,0x14
6401bec3:	mov    eax,esi
6401bec5:	jmp    0x6401bf21
6401bec7:	mov    eax,DWORD PTR [ebp+0x10]
6401beca:	cmp    eax,ebx
6401becc:	jbe    0x6401beaf
6401bece:	cmp    eax,0xffffffff
6401bed1:	jne    0x6401bed7
6401bed3:	or     eax,eax
6401bed5:	jmp    0x6401bee2
6401bed7:	xor    ecx,ecx
6401bed9:	cmp    DWORD PTR [ebp-0x2c],0x2d
6401bedd:	sete   cl
6401bee0:	sub    eax,ecx
6401bee2:	mov    esi,DWORD PTR [ebp+0x14]
6401bee5:	lea    ecx,[ebp-0x2c]
6401bee8:	push   ecx
6401bee9:	mov    ecx,DWORD PTR [ebp-0x28]
6401beec:	add    ecx,esi
6401beee:	push   ecx
6401beef:	push   eax
6401bef0:	xor    eax,eax
6401bef2:	cmp    DWORD PTR [ebp-0x2c],0x2d
6401bef6:	sete   al
6401bef9:	add    eax,edi
6401befb:	push   eax
6401befc:	call   0x6401c2d9
6401bf01:	add    esp,0x10
6401bf04:	cmp    eax,ebx
6401bf06:	je     0x6401bf0c
6401bf08:	mov    BYTE PTR [edi],bl
6401bf0a:	jmp    0x6401bf21
6401bf0c:	push   DWORD PTR [ebp+0x18]
6401bf0f:	lea    eax,[ebp-0x2c]
6401bf12:	push   ebx
6401bf13:	push   esi
6401bf14:	push   DWORD PTR [ebp+0x10]
6401bf17:	mov    ecx,edi
6401bf19:	call   0x6401bd82
6401bf1e:	add    esp,0x10
6401bf21:	mov    ecx,DWORD PTR [ebp-0x4]
6401bf24:	pop    edi
6401bf25:	pop    esi
6401bf26:	xor    ecx,ebp
6401bf28:	pop    ebx
6401bf29:	call   0x6400f34e
6401bf2e:	leave  
6401bf2f:	ret    
6401bf30:	push   ebp
6401bf31:	mov    ebp,esp
6401bf33:	sub    esp,0x30
6401bf36:	mov    eax,ds:0x64028038
6401bf3b:	xor    eax,ebp
6401bf3d:	mov    DWORD PTR [ebp-0x4],eax
6401bf40:	mov    eax,DWORD PTR [ebp+0x8]
6401bf43:	push   ebx
6401bf44:	push   esi
6401bf45:	mov    esi,DWORD PTR [ebp+0xc]
6401bf48:	push   edi
6401bf49:	push   0x16
6401bf4b:	pop    edi
6401bf4c:	push   edi
6401bf4d:	lea    ecx,[ebp-0x1c]
6401bf50:	push   ecx
6401bf51:	lea    ecx,[ebp-0x30]
6401bf54:	push   ecx
6401bf55:	push   DWORD PTR [eax+0x4]
6401bf58:	push   DWORD PTR [eax]
6401bf5a:	call   0x6401c451
6401bf5f:	xor    ebx,ebx
6401bf61:	add    esp,0x14
6401bf64:	cmp    esi,ebx
6401bf66:	jne    0x6401bf83
6401bf68:	call   0x64011120
6401bf6d:	push   ebx
6401bf6e:	push   ebx
6401bf6f:	push   ebx
6401bf70:	push   ebx
6401bf71:	push   ebx
6401bf72:	mov    DWORD PTR [eax],edi
6401bf74:	call   0x6400ee86
6401bf79:	add    esp,0x14
6401bf7c:	mov    eax,edi
6401bf7e:	jmp    0x6401c019
6401bf83:	mov    ecx,DWORD PTR [ebp+0x10]
6401bf86:	cmp    ecx,ebx
6401bf88:	jbe    0x6401bf68
6401bf8a:	mov    eax,DWORD PTR [ebp-0x2c]
6401bf8d:	dec    eax
6401bf8e:	mov    DWORD PTR [ebp-0x20],eax
6401bf91:	xor    eax,eax
6401bf93:	cmp    DWORD PTR [ebp-0x30],0x2d
6401bf97:	sete   al
6401bf9a:	cmp    ecx,0xffffffff
6401bf9d:	lea    edi,[eax+esi*1]
6401bfa0:	jne    0x6401bfa6
6401bfa2:	or     ecx,ecx
6401bfa4:	jmp    0x6401bfa8
6401bfa6:	sub    ecx,eax
6401bfa8:	lea    eax,[ebp-0x30]
6401bfab:	push   eax
6401bfac:	push   DWORD PTR [ebp+0x14]
6401bfaf:	push   ecx
6401bfb0:	push   edi
6401bfb1:	call   0x6401c2d9
6401bfb6:	add    esp,0x10
6401bfb9:	cmp    eax,ebx
6401bfbb:	je     0x6401bfc1
6401bfbd:	mov    BYTE PTR [esi],bl
6401bfbf:	jmp    0x6401c019
6401bfc1:	mov    eax,DWORD PTR [ebp-0x2c]
6401bfc4:	dec    eax
6401bfc5:	cmp    DWORD PTR [ebp-0x20],eax
6401bfc8:	setl   cl
6401bfcb:	cmp    eax,0xfffffffc
6401bfce:	jl     0x6401bffd
6401bfd0:	cmp    eax,DWORD PTR [ebp+0x14]
6401bfd3:	jge    0x6401bffd
6401bfd5:	cmp    cl,bl
6401bfd7:	je     0x6401bfe3
6401bfd9:	mov    al,BYTE PTR [edi]
6401bfdb:	inc    edi
6401bfdc:	test   al,al
6401bfde:	jne    0x6401bfd9
6401bfe0:	mov    BYTE PTR [edi-0x2],bl
6401bfe3:	push   DWORD PTR [ebp+0x1c]
6401bfe6:	lea    eax,[ebp-0x30]
6401bfe9:	push   0x1
6401bfeb:	push   DWORD PTR [ebp+0x14]
6401bfee:	mov    ecx,esi
6401bff0:	push   DWORD PTR [ebp+0x10]
6401bff3:	call   0x6401bd82
6401bff8:	add    esp,0x10
6401bffb:	jmp    0x6401c019
6401bffd:	push   DWORD PTR [ebp+0x1c]
6401c000:	lea    eax,[ebp-0x30]
6401c003:	push   0x1
6401c005:	push   eax
6401c006:	push   DWORD PTR [ebp+0x18]
6401c009:	mov    eax,esi
6401c00b:	push   DWORD PTR [ebp+0x14]
6401c00e:	push   DWORD PTR [ebp+0x10]
6401c011:	call   0x6401b7b8
6401c016:	add    esp,0x18
6401c019:	mov    ecx,DWORD PTR [ebp-0x4]
6401c01c:	pop    edi
6401c01d:	pop    esi
6401c01e:	xor    ecx,ebp
6401c020:	pop    ebx
6401c021:	call   0x6400f34e
6401c026:	leave  
6401c027:	ret    
6401c028:	push   ebp
6401c029:	mov    ebp,esp
6401c02b:	mov    eax,DWORD PTR [ebp+0x14]
6401c02e:	cmp    eax,0x65
6401c031:	je     0x6401c092
6401c033:	cmp    eax,0x45
6401c036:	je     0x6401c092
6401c038:	cmp    eax,0x66
6401c03b:	jne    0x6401c056
6401c03d:	push   DWORD PTR [ebp+0x20]
6401c040:	push   DWORD PTR [ebp+0x18]
6401c043:	push   DWORD PTR [ebp+0x10]
6401c046:	push   DWORD PTR [ebp+0xc]
6401c049:	push   DWORD PTR [ebp+0x8]
6401c04c:	call   0x6401be77
6401c051:	add    esp,0x14
6401c054:	pop    ebp
6401c055:	ret    
6401c056:	cmp    eax,0x61
6401c059:	je     0x6401c079
6401c05b:	cmp    eax,0x41
6401c05e:	je     0x6401c079
6401c060:	push   DWORD PTR [ebp+0x20]
6401c063:	push   DWORD PTR [ebp+0x1c]
6401c066:	push   DWORD PTR [ebp+0x18]
6401c069:	push   DWORD PTR [ebp+0x10]
6401c06c:	push   DWORD PTR [ebp+0xc]
6401c06f:	push   DWORD PTR [ebp+0x8]
6401c072:	call   0x6401bf30
6401c077:	jmp    0x6401c0a9
6401c079:	push   DWORD PTR [ebp+0x20]
6401c07c:	push   DWORD PTR [ebp+0x1c]
6401c07f:	push   DWORD PTR [ebp+0x18]
6401c082:	push   DWORD PTR [ebp+0x10]
6401c085:	push   DWORD PTR [ebp+0xc]
6401c088:	push   DWORD PTR [ebp+0x8]
6401c08b:	call   0x6401ba11
6401c090:	jmp    0x6401c0a9
6401c092:	push   DWORD PTR [ebp+0x20]
6401c095:	push   DWORD PTR [ebp+0x1c]
6401c098:	push   DWORD PTR [ebp+0x18]
6401c09b:	push   DWORD PTR [ebp+0x10]
6401c09e:	push   DWORD PTR [ebp+0xc]
6401c0a1:	push   DWORD PTR [ebp+0x8]
6401c0a4:	call   0x6401b925
6401c0a9:	add    esp,0x18
6401c0ac:	pop    ebp
6401c0ad:	ret    
6401c0ae:	push   ebp
6401c0af:	mov    ebp,esp
6401c0b1:	push   0x0
6401c0b3:	push   DWORD PTR [ebp+0x1c]
6401c0b6:	push   DWORD PTR [ebp+0x18]
6401c0b9:	push   DWORD PTR [ebp+0x14]
6401c0bc:	push   DWORD PTR [ebp+0x10]
6401c0bf:	push   DWORD PTR [ebp+0xc]
6401c0c2:	push   DWORD PTR [ebp+0x8]
6401c0c5:	call   0x6401c028
6401c0ca:	add    esp,0x1c
6401c0cd:	pop    ebp
6401c0ce:	ret    
6401c0cf:	push   esi
6401c0d0:	push   0x30000
6401c0d5:	push   0x10000
6401c0da:	xor    esi,esi
6401c0dc:	push   esi
6401c0dd:	call   0x6401c5df
6401c0e2:	add    esp,0xc
6401c0e5:	test   eax,eax
6401c0e7:	je     0x6401c0f6
6401c0e9:	push   esi
6401c0ea:	push   esi
6401c0eb:	push   esi
6401c0ec:	push   esi
6401c0ed:	push   esi
6401c0ee:	call   0x6400ed8a
6401c0f3:	add    esp,0x14
6401c0f6:	pop    esi
6401c0f7:	ret    
6401c0f8:	push   ebp
6401c0f9:	mov    ebp,esp
6401c0fb:	sub    esp,0x18
6401c0fe:	fld    QWORD PTR ds:0x640234d8
6401c104:	fstp   QWORD PTR [ebp-0x10]
6401c107:	fld    QWORD PTR ds:0x640234d0
6401c10d:	fstp   QWORD PTR [ebp-0x18]
6401c110:	fld    QWORD PTR [ebp-0x18]
6401c113:	fdiv   QWORD PTR [ebp-0x10]
6401c116:	fmul   QWORD PTR [ebp-0x10]
6401c119:	fsubr  QWORD PTR [ebp-0x18]
6401c11c:	fstp   QWORD PTR [ebp-0x8]
6401c11f:	fld1   
6401c121:	fcomp  QWORD PTR [ebp-0x8]
6401c124:	fnstsw ax
6401c126:	test   ah,0x5
6401c129:	jp     0x6401c130
6401c12b:	xor    eax,eax
6401c12d:	inc    eax
6401c12e:	leave  
6401c12f:	ret    
6401c130:	xor    eax,eax
6401c132:	leave  
6401c133:	ret    
6401c134:	push   0x640234fc
6401c139:	call   DWORD PTR ds:0x64021118
6401c13f:	test   eax,eax
6401c141:	je     0x6401c158
6401c143:	push   0x640234e0
6401c148:	push   eax
6401c149:	call   DWORD PTR ds:0x64021014
6401c14f:	test   eax,eax
6401c151:	je     0x6401c158
6401c153:	push   0x0
6401c155:	call   eax
6401c157:	ret    
6401c158:	jmp    0x6401c0f8
6401c15d:	int3   
6401c15e:	int3   
6401c15f:	int3   
6401c160:	push   ebp
6401c161:	mov    ebp,esp
6401c163:	push   edi
6401c164:	mov    edi,DWORD PTR [ebp+0x8]
6401c167:	xor    eax,eax
6401c169:	or     ecx,0xffffffff
6401c16c:	repnz scas al,BYTE PTR es:[edi]
6401c16e:	add    ecx,0x1
6401c171:	neg    ecx
6401c173:	sub    edi,0x1
6401c176:	mov    al,BYTE PTR [ebp+0xc]
6401c179:	std    
6401c17a:	repnz scas al,BYTE PTR es:[edi]
6401c17c:	add    edi,0x1
6401c17f:	cmp    BYTE PTR [edi],al
6401c181:	je     0x6401c187
6401c183:	xor    eax,eax
6401c185:	jmp    0x6401c189
6401c187:	mov    eax,edi
6401c189:	cld    
6401c18a:	pop    edi
6401c18b:	leave  
6401c18c:	ret    
6401c18d:	push   ebp
6401c18e:	mov    ebp,esp
6401c190:	sub    esp,0x28
6401c193:	mov    eax,ds:0x64028038
6401c198:	xor    eax,ebp
6401c19a:	mov    DWORD PTR [ebp-0x4],eax
6401c19d:	push   ebx
6401c19e:	push   esi
6401c19f:	mov    esi,DWORD PTR [ebp+0x8]
6401c1a2:	push   edi
6401c1a3:	push   DWORD PTR [ebp+0x10]
6401c1a6:	mov    edi,DWORD PTR [ebp+0xc]
6401c1a9:	lea    ecx,[ebp-0x24]
6401c1ac:	call   0x6400f4f1
6401c1b1:	lea    eax,[ebp-0x24]
6401c1b4:	push   eax
6401c1b5:	xor    ebx,ebx
6401c1b7:	push   ebx
6401c1b8:	push   ebx
6401c1b9:	push   ebx
6401c1ba:	push   ebx
6401c1bb:	push   edi
6401c1bc:	lea    eax,[ebp-0x28]
6401c1bf:	push   eax
6401c1c0:	lea    eax,[ebp-0x10]
6401c1c3:	push   eax
6401c1c4:	call   0x6401d0cd
6401c1c9:	mov    DWORD PTR [ebp-0x14],eax
6401c1cc:	lea    eax,[ebp-0x10]
6401c1cf:	push   esi
6401c1d0:	push   eax
6401c1d1:	call   0x6401c649
6401c1d6:	add    esp,0x28
6401c1d9:	test   BYTE PTR [ebp-0x14],0x3
6401c1dd:	jne    0x6401c20a
6401c1df:	cmp    eax,0x1
6401c1e2:	jne    0x6401c1f5
6401c1e4:	cmp    BYTE PTR [ebp-0x18],bl
6401c1e7:	je     0x6401c1f0
6401c1e9:	mov    eax,DWORD PTR [ebp-0x1c]
6401c1ec:	and    DWORD PTR [eax+0x70],0xfffffffd
6401c1f0:	push   0x3
6401c1f2:	pop    eax
6401c1f3:	jmp    0x6401c224
6401c1f5:	cmp    eax,0x2
6401c1f8:	jne    0x6401c216
6401c1fa:	cmp    BYTE PTR [ebp-0x18],bl
6401c1fd:	je     0x6401c206
6401c1ff:	mov    eax,DWORD PTR [ebp-0x1c]
6401c202:	and    DWORD PTR [eax+0x70],0xfffffffd
6401c206:	push   0x4
6401c208:	jmp    0x6401c1f2
6401c20a:	test   BYTE PTR [ebp-0x14],0x1
6401c20e:	jne    0x6401c1fa
6401c210:	test   BYTE PTR [ebp-0x14],0x2
6401c214:	jne    0x6401c1e4
6401c216:	cmp    BYTE PTR [ebp-0x18],bl
6401c219:	je     0x6401c222
6401c21b:	mov    eax,DWORD PTR [ebp-0x1c]
6401c21e:	and    DWORD PTR [eax+0x70],0xfffffffd
6401c222:	xor    eax,eax
6401c224:	mov    ecx,DWORD PTR [ebp-0x4]
6401c227:	pop    edi
6401c228:	pop    esi
6401c229:	xor    ecx,ebp
6401c22b:	pop    ebx
6401c22c:	call   0x6400f34e
6401c231:	leave  
6401c232:	ret    
6401c233:	push   ebp
6401c234:	mov    ebp,esp
6401c236:	sub    esp,0x28
6401c239:	mov    eax,ds:0x64028038
6401c23e:	xor    eax,ebp
6401c240:	mov    DWORD PTR [ebp-0x4],eax
6401c243:	push   ebx
6401c244:	push   esi
6401c245:	mov    esi,DWORD PTR [ebp+0x8]
6401c248:	push   edi
6401c249:	push   DWORD PTR [ebp+0x10]
6401c24c:	mov    edi,DWORD PTR [ebp+0xc]
6401c24f:	lea    ecx,[ebp-0x24]
6401c252:	call   0x6400f4f1
6401c257:	lea    eax,[ebp-0x24]
6401c25a:	push   eax
6401c25b:	xor    ebx,ebx
6401c25d:	push   ebx
6401c25e:	push   ebx
6401c25f:	push   ebx
6401c260:	push   ebx
6401c261:	push   edi
6401c262:	lea    eax,[ebp-0x28]
6401c265:	push   eax
6401c266:	lea    eax,[ebp-0x10]
6401c269:	push   eax
6401c26a:	call   0x6401d0cd
6401c26f:	mov    DWORD PTR [ebp-0x14],eax
6401c272:	lea    eax,[ebp-0x10]
6401c275:	push   esi
6401c276:	push   eax
6401c277:	call   0x6401cb8b
6401c27c:	add    esp,0x28
6401c27f:	test   BYTE PTR [ebp-0x14],0x3
6401c283:	jne    0x6401c2b0
6401c285:	cmp    eax,0x1
6401c288:	jne    0x6401c29b
6401c28a:	cmp    BYTE PTR [ebp-0x18],bl
6401c28d:	je     0x6401c296
6401c28f:	mov    eax,DWORD PTR [ebp-0x1c]
6401c292:	and    DWORD PTR [eax+0x70],0xfffffffd
6401c296:	push   0x3
6401c298:	pop    eax
6401c299:	jmp    0x6401c2ca
6401c29b:	cmp    eax,0x2
6401c29e:	jne    0x6401c2bc
6401c2a0:	cmp    BYTE PTR [ebp-0x18],bl
6401c2a3:	je     0x6401c2ac
6401c2a5:	mov    eax,DWORD PTR [ebp-0x1c]
6401c2a8:	and    DWORD PTR [eax+0x70],0xfffffffd
6401c2ac:	push   0x4
6401c2ae:	jmp    0x6401c298
6401c2b0:	test   BYTE PTR [ebp-0x14],0x1
6401c2b4:	jne    0x6401c2a0
6401c2b6:	test   BYTE PTR [ebp-0x14],0x2
6401c2ba:	jne    0x6401c28a
6401c2bc:	cmp    BYTE PTR [ebp-0x18],bl
6401c2bf:	je     0x6401c2c8
6401c2c1:	mov    eax,DWORD PTR [ebp-0x1c]
6401c2c4:	and    DWORD PTR [eax+0x70],0xfffffffd
6401c2c8:	xor    eax,eax
6401c2ca:	mov    ecx,DWORD PTR [ebp-0x4]
6401c2cd:	pop    edi
6401c2ce:	pop    esi
6401c2cf:	xor    ecx,ebp
6401c2d1:	pop    ebx
6401c2d2:	call   0x6400f34e
6401c2d7:	leave  
6401c2d8:	ret    
6401c2d9:	push   ebp
6401c2da:	mov    ebp,esp
6401c2dc:	mov    ecx,DWORD PTR [ebp+0x14]
6401c2df:	push   ebx
6401c2e0:	push   esi
6401c2e1:	mov    esi,DWORD PTR [ebp+0x8]
6401c2e4:	xor    ebx,ebx
6401c2e6:	cmp    esi,ebx
6401c2e8:	push   edi
6401c2e9:	mov    edi,DWORD PTR [ecx+0xc]
6401c2ec:	jne    0x6401c30c
6401c2ee:	call   0x64011120
6401c2f3:	push   0x16
6401c2f5:	pop    esi
6401c2f6:	mov    DWORD PTR [eax],esi
6401c2f8:	push   ebx
6401c2f9:	push   ebx
6401c2fa:	push   ebx
6401c2fb:	push   ebx
6401c2fc:	push   ebx
6401c2fd:	call   0x6400ee86
6401c302:	add    esp,0x14
6401c305:	mov    eax,esi
6401c307:	jmp    0x6401c391
6401c30c:	cmp    DWORD PTR [ebp+0xc],ebx
6401c30f:	jbe    0x6401c2ee
6401c311:	mov    edx,DWORD PTR [ebp+0x10]
6401c314:	cmp    edx,ebx
6401c316:	mov    BYTE PTR [esi],bl
6401c318:	jle    0x6401c31e
6401c31a:	mov    eax,edx
6401c31c:	jmp    0x6401c320
6401c31e:	xor    eax,eax
6401c320:	inc    eax
6401c321:	cmp    DWORD PTR [ebp+0xc],eax
6401c324:	ja     0x6401c334
6401c326:	call   0x64011120
6401c32b:	push   0x22
6401c32d:	pop    ecx
6401c32e:	mov    DWORD PTR [eax],ecx
6401c330:	mov    esi,ecx
6401c332:	jmp    0x6401c2f8
6401c334:	cmp    edx,ebx
6401c336:	mov    BYTE PTR [esi],0x30
6401c339:	lea    eax,[esi+0x1]
6401c33c:	jle    0x6401c358
6401c33e:	mov    cl,BYTE PTR [edi]
6401c340:	cmp    cl,bl
6401c342:	je     0x6401c34a
6401c344:	movsx  ecx,cl
6401c347:	inc    edi
6401c348:	jmp    0x6401c34d
6401c34a:	push   0x30
6401c34c:	pop    ecx
6401c34d:	mov    BYTE PTR [eax],cl
6401c34f:	inc    eax
6401c350:	dec    edx
6401c351:	cmp    edx,ebx
6401c353:	jg     0x6401c33e
6401c355:	mov    ecx,DWORD PTR [ebp+0x14]
6401c358:	cmp    edx,ebx
6401c35a:	mov    BYTE PTR [eax],bl
6401c35c:	jl     0x6401c370
6401c35e:	cmp    BYTE PTR [edi],0x35
6401c361:	jl     0x6401c370
6401c363:	jmp    0x6401c368
6401c365:	mov    BYTE PTR [eax],0x30
6401c368:	dec    eax
6401c369:	cmp    BYTE PTR [eax],0x39
6401c36c:	je     0x6401c365
6401c36e:	inc    BYTE PTR [eax]
6401c370:	cmp    BYTE PTR [esi],0x31
6401c373:	jne    0x6401c37a
6401c375:	inc    DWORD PTR [ecx+0x4]
6401c378:	jmp    0x6401c38f
6401c37a:	lea    edi,[esi+0x1]
6401c37d:	push   edi
6401c37e:	call   0x64010b20
6401c383:	inc    eax
6401c384:	push   eax
6401c385:	push   edi
6401c386:	push   esi
6401c387:	call   0x64010390
6401c38c:	add    esp,0x10
6401c38f:	xor    eax,eax
6401c391:	pop    edi
6401c392:	pop    esi
6401c393:	pop    ebx
6401c394:	pop    ebp
6401c395:	ret    
6401c396:	push   ebp
6401c397:	mov    ebp,esp
6401c399:	push   ecx
6401c39a:	mov    edx,DWORD PTR [ebp+0xc]
6401c39d:	movzx  eax,WORD PTR [edx+0x6]
6401c3a1:	push   ebx
6401c3a2:	mov    ecx,eax
6401c3a4:	push   esi
6401c3a5:	push   edi
6401c3a6:	shr    ecx,0x4
6401c3a9:	and    eax,0x8000
6401c3ae:	mov    edi,0x7ff
6401c3b3:	and    ecx,edi
6401c3b5:	mov    DWORD PTR [ebp+0xc],eax
6401c3b8:	mov    eax,DWORD PTR [edx+0x4]
6401c3bb:	mov    edx,DWORD PTR [edx]
6401c3bd:	movzx  ebx,cx
6401c3c0:	mov    esi,0x80000000
6401c3c5:	and    eax,0xfffff
6401c3ca:	test   ebx,ebx
6401c3cc:	mov    DWORD PTR [ebp-0x4],esi
6401c3cf:	je     0x6401c3e4
6401c3d1:	cmp    ebx,edi
6401c3d3:	je     0x6401c3dd
6401c3d5:	add    ecx,0x3c00
6401c3db:	jmp    0x6401c405
6401c3dd:	mov    edi,0x7fff
6401c3e2:	jmp    0x6401c408
6401c3e4:	xor    ebx,ebx
6401c3e6:	cmp    eax,ebx
6401c3e8:	jne    0x6401c3fc
6401c3ea:	cmp    edx,ebx
6401c3ec:	jne    0x6401c3fc
6401c3ee:	mov    eax,DWORD PTR [ebp+0x8]
6401c3f1:	mov    cx,WORD PTR [ebp+0xc]
6401c3f5:	mov    DWORD PTR [eax+0x4],ebx
6401c3f8:	mov    DWORD PTR [eax],ebx
6401c3fa:	jmp    0x6401c448
6401c3fc:	add    ecx,0x3c01
6401c402:	mov    DWORD PTR [ebp-0x4],ebx
6401c405:	movzx  edi,cx
6401c408:	mov    ecx,edx
6401c40a:	shr    ecx,0x15
6401c40d:	shl    eax,0xb
6401c410:	or     ecx,eax
6401c412:	or     ecx,DWORD PTR [ebp-0x4]
6401c415:	mov    eax,DWORD PTR [ebp+0x8]
6401c418:	shl    edx,0xb
6401c41b:	test   esi,ecx
6401c41d:	mov    DWORD PTR [eax+0x4],ecx
6401c420:	mov    DWORD PTR [eax],edx
6401c422:	jne    0x6401c443
6401c424:	mov    ecx,DWORD PTR [eax]
6401c426:	mov    edx,DWORD PTR [eax+0x4]
6401c429:	mov    ebx,ecx
6401c42b:	add    edx,edx
6401c42d:	shr    ebx,0x1f
6401c430:	or     edx,ebx
6401c432:	add    ecx,ecx
6401c434:	add    edi,0xffff
6401c43a:	test   esi,edx
6401c43c:	mov    DWORD PTR [eax+0x4],edx
6401c43f:	mov    DWORD PTR [eax],ecx
6401c441:	je     0x6401c424
6401c443:	mov    ecx,DWORD PTR [ebp+0xc]
6401c446:	or     ecx,edi
6401c448:	pop    edi
6401c449:	pop    esi
6401c44a:	mov    WORD PTR [eax+0x8],cx
6401c44e:	pop    ebx
6401c44f:	leave  
6401c450:	ret    
6401c451:	push   ebp
6401c452:	mov    ebp,esp
6401c454:	sub    esp,0x30
6401c457:	mov    eax,ds:0x64028038
6401c45c:	xor    eax,ebp
6401c45e:	mov    DWORD PTR [ebp-0x4],eax
6401c461:	mov    eax,DWORD PTR [ebp+0x14]
6401c464:	push   ebx
6401c465:	mov    ebx,DWORD PTR [ebp+0x10]
6401c468:	push   esi
6401c469:	mov    DWORD PTR [ebp-0x30],eax
6401c46c:	push   edi
6401c46d:	lea    eax,[ebp+0x8]
6401c470:	push   eax
6401c471:	lea    eax,[ebp-0x10]
6401c474:	push   eax
6401c475:	call   0x6401c396
6401c47a:	pop    ecx
6401c47b:	pop    ecx
6401c47c:	lea    eax,[ebp-0x2c]
6401c47f:	push   eax
6401c480:	push   0x0
6401c482:	push   0x11
6401c484:	sub    esp,0xc
6401c487:	lea    esi,[ebp-0x10]
6401c48a:	mov    edi,esp
6401c48c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
6401c48d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
6401c48e:	movs   WORD PTR es:[edi],WORD PTR ds:[esi]
6401c490:	call   0x6401d78d
6401c495:	mov    esi,DWORD PTR [ebp-0x30]
6401c498:	mov    DWORD PTR [ebx+0x8],eax
6401c49b:	movsx  eax,BYTE PTR [ebp-0x2a]
6401c49f:	mov    DWORD PTR [ebx],eax
6401c4a1:	movsx  eax,WORD PTR [ebp-0x2c]
6401c4a5:	mov    DWORD PTR [ebx+0x4],eax
6401c4a8:	lea    eax,[ebp-0x28]
6401c4ab:	push   eax
6401c4ac:	push   DWORD PTR [ebp+0x18]
6401c4af:	push   esi
6401c4b0:	call   0x64010d18
6401c4b5:	add    esp,0x24
6401c4b8:	test   eax,eax
6401c4ba:	je     0x6401c4cb
6401c4bc:	xor    eax,eax
6401c4be:	push   eax
6401c4bf:	push   eax
6401c4c0:	push   eax
6401c4c1:	push   eax
6401c4c2:	push   eax
6401c4c3:	call   0x6400ed8a
6401c4c8:	add    esp,0x14
6401c4cb:	mov    ecx,DWORD PTR [ebp-0x4]
6401c4ce:	pop    edi
6401c4cf:	mov    DWORD PTR [ebx+0xc],esi
6401c4d2:	pop    esi
6401c4d3:	mov    eax,ebx
6401c4d5:	xor    ecx,ebp
6401c4d7:	pop    ebx
6401c4d8:	call   0x6400f34e
6401c4dd:	leave  
6401c4de:	ret    
6401c4df:	int3   
6401c4e0:	push   edi
6401c4e1:	push   esi
6401c4e2:	push   ebp
6401c4e3:	xor    edi,edi
6401c4e5:	xor    ebp,ebp
6401c4e7:	mov    eax,DWORD PTR [esp+0x14]
6401c4eb:	or     eax,eax
6401c4ed:	jge    0x6401c504
6401c4ef:	inc    edi
6401c4f0:	inc    ebp
6401c4f1:	mov    edx,DWORD PTR [esp+0x10]
6401c4f5:	neg    eax
6401c4f7:	neg    edx
6401c4f9:	sbb    eax,0x0
6401c4fc:	mov    DWORD PTR [esp+0x14],eax
6401c500:	mov    DWORD PTR [esp+0x10],edx
6401c504:	mov    eax,DWORD PTR [esp+0x1c]
6401c508:	or     eax,eax
6401c50a:	jge    0x6401c520
6401c50c:	inc    edi
6401c50d:	mov    edx,DWORD PTR [esp+0x18]
6401c511:	neg    eax
6401c513:	neg    edx
6401c515:	sbb    eax,0x0
6401c518:	mov    DWORD PTR [esp+0x1c],eax
6401c51c:	mov    DWORD PTR [esp+0x18],edx
6401c520:	or     eax,eax
6401c522:	jne    0x6401c54c
6401c524:	mov    ecx,DWORD PTR [esp+0x18]
6401c528:	mov    eax,DWORD PTR [esp+0x14]
6401c52c:	xor    edx,edx
6401c52e:	div    ecx
6401c530:	mov    ebx,eax
6401c532:	mov    eax,DWORD PTR [esp+0x10]
6401c536:	div    ecx
6401c538:	mov    esi,eax
6401c53a:	mov    eax,ebx
6401c53c:	mul    DWORD PTR [esp+0x18]
6401c540:	mov    ecx,eax
6401c542:	mov    eax,esi
6401c544:	mul    DWORD PTR [esp+0x18]
6401c548:	add    edx,ecx
6401c54a:	jmp    0x6401c593
6401c54c:	mov    ebx,eax
6401c54e:	mov    ecx,DWORD PTR [esp+0x18]
6401c552:	mov    edx,DWORD PTR [esp+0x14]
6401c556:	mov    eax,DWORD PTR [esp+0x10]
6401c55a:	shr    ebx,1
6401c55c:	rcr    ecx,1
6401c55e:	shr    edx,1
6401c560:	rcr    eax,1
6401c562:	or     ebx,ebx
6401c564:	jne    0x6401c55a
6401c566:	div    ecx
6401c568:	mov    esi,eax
6401c56a:	mul    DWORD PTR [esp+0x1c]
6401c56e:	mov    ecx,eax
6401c570:	mov    eax,DWORD PTR [esp+0x18]
6401c574:	mul    esi
6401c576:	add    edx,ecx
6401c578:	jb     0x6401c588
6401c57a:	cmp    edx,DWORD PTR [esp+0x14]
6401c57e:	ja     0x6401c588
6401c580:	jb     0x6401c591
6401c582:	cmp    eax,DWORD PTR [esp+0x10]
6401c586:	jbe    0x6401c591
6401c588:	dec    esi
6401c589:	sub    eax,DWORD PTR [esp+0x18]
6401c58d:	sbb    edx,DWORD PTR [esp+0x1c]
6401c591:	xor    ebx,ebx
6401c593:	sub    eax,DWORD PTR [esp+0x10]
6401c597:	sbb    edx,DWORD PTR [esp+0x14]
6401c59b:	dec    ebp
6401c59c:	jns    0x6401c5a5
6401c59e:	neg    edx
6401c5a0:	neg    eax
6401c5a2:	sbb    edx,0x0
6401c5a5:	mov    ecx,edx
6401c5a7:	mov    edx,ebx
6401c5a9:	mov    ebx,ecx
6401c5ab:	mov    ecx,eax
6401c5ad:	mov    eax,esi
6401c5af:	dec    edi
6401c5b0:	jne    0x6401c5b9
6401c5b2:	neg    edx
6401c5b4:	neg    eax
6401c5b6:	sbb    edx,0x0
6401c5b9:	pop    ebp
6401c5ba:	pop    esi
6401c5bb:	pop    edi
6401c5bc:	ret    0x10
6401c5bf:	int3   
6401c5c0:	cmp    cl,0x40
6401c5c3:	jae    0x6401c5da
6401c5c5:	cmp    cl,0x20
6401c5c8:	jae    0x6401c5d0
6401c5ca:	shrd   eax,edx,cl
6401c5cd:	shr    edx,cl
6401c5cf:	ret    
6401c5d0:	mov    eax,edx
6401c5d2:	xor    edx,edx
6401c5d4:	and    cl,0x1f
6401c5d7:	shr    eax,cl
6401c5d9:	ret    
6401c5da:	xor    eax,eax
6401c5dc:	xor    edx,edx
6401c5de:	ret    
6401c5df:	push   ebp
6401c5e0:	mov    ebp,esp
6401c5e2:	mov    eax,DWORD PTR [ebp+0x10]
6401c5e5:	mov    ecx,DWORD PTR [ebp+0xc]
6401c5e8:	and    eax,0xfff7ffff
6401c5ed:	and    ecx,eax
6401c5ef:	test   ecx,0xfcf0fce0
6401c5f5:	push   esi
6401c5f6:	je     0x6401c629
6401c5f8:	push   edi
6401c5f9:	mov    edi,DWORD PTR [ebp+0x8]
6401c5fc:	xor    esi,esi
6401c5fe:	cmp    edi,esi
6401c600:	je     0x6401c60d
6401c602:	push   esi
6401c603:	push   esi
6401c604:	call   0x6401e181
6401c609:	pop    ecx
6401c60a:	pop    ecx
6401c60b:	mov    DWORD PTR [edi],eax
6401c60d:	call   0x64011120
6401c612:	push   0x16
6401c614:	pop    edi
6401c615:	push   esi
6401c616:	push   esi
6401c617:	push   esi
6401c618:	push   esi
6401c619:	push   esi
6401c61a:	mov    DWORD PTR [eax],edi
6401c61c:	call   0x6400ee86
6401c621:	add    esp,0x14
6401c624:	mov    eax,edi
6401c626:	pop    edi
6401c627:	jmp    0x6401c646
6401c629:	mov    esi,DWORD PTR [ebp+0x8]
6401c62c:	test   esi,esi
6401c62e:	push   eax
6401c62f:	push   DWORD PTR [ebp+0xc]
6401c632:	je     0x6401c63d
6401c634:	call   0x6401e181
6401c639:	mov    DWORD PTR [esi],eax
6401c63b:	jmp    0x6401c642
6401c63d:	call   0x6401e181
6401c642:	pop    ecx
6401c643:	pop    ecx
6401c644:	xor    eax,eax
6401c646:	pop    esi
6401c647:	pop    ebp
6401c648:	ret    
6401c649:	push   ebp
6401c64a:	mov    ebp,esp
6401c64c:	sub    esp,0x2c
6401c64f:	mov    eax,DWORD PTR [ebp+0x8]
6401c652:	movzx  ecx,WORD PTR [eax+0xa]
6401c656:	push   ebx
6401c657:	mov    ebx,ecx
6401c659:	and    ecx,0x8000
6401c65f:	mov    DWORD PTR [ebp-0x14],ecx
6401c662:	mov    ecx,DWORD PTR [eax+0x6]
6401c665:	mov    DWORD PTR [ebp-0x20],ecx
6401c668:	mov    ecx,DWORD PTR [eax+0x2]
6401c66b:	movzx  eax,WORD PTR [eax]
6401c66e:	and    ebx,0x7fff
6401c674:	sub    ebx,0x3fff
6401c67a:	shl    eax,0x10
6401c67d:	cmp    ebx,0xffffc001
6401c683:	push   edi
6401c684:	mov    DWORD PTR [ebp-0x1c],ecx
6401c687:	mov    DWORD PTR [ebp-0x18],eax
6401c68a:	jne    0x6401c6b3
6401c68c:	xor    ebx,ebx
6401c68e:	xor    eax,eax
6401c690:	cmp    DWORD PTR [ebp+eax*4-0x20],ebx
6401c694:	jne    0x6401c6a3
6401c696:	inc    eax
6401c697:	cmp    eax,0x3
6401c69a:	jl     0x6401c690
6401c69c:	xor    eax,eax
6401c69e:	jmp    0x6401cb48
6401c6a3:	xor    eax,eax
6401c6a5:	lea    edi,[ebp-0x20]
6401c6a8:	stos   DWORD PTR es:[edi],eax
6401c6a9:	stos   DWORD PTR es:[edi],eax
6401c6aa:	push   0x2
6401c6ac:	stos   DWORD PTR es:[edi],eax
6401c6ad:	pop    eax
6401c6ae:	jmp    0x6401cb48
6401c6b3:	and    DWORD PTR [ebp+0x8],0x0
6401c6b7:	push   esi
6401c6b8:	lea    esi,[ebp-0x20]
6401c6bb:	lea    edi,[ebp-0x2c]
6401c6be:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
6401c6bf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
6401c6c0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
6401c6c1:	mov    esi,DWORD PTR ds:0x64029008
6401c6c7:	dec    esi
6401c6c8:	lea    ecx,[esi+0x1]
6401c6cb:	mov    eax,ecx
6401c6cd:	cdq    
6401c6ce:	and    edx,0x1f
6401c6d1:	add    eax,edx
6401c6d3:	sar    eax,0x5
6401c6d6:	mov    edx,ecx
6401c6d8:	and    edx,0x8000001f
6401c6de:	mov    DWORD PTR [ebp-0x10],ebx
6401c6e1:	mov    DWORD PTR [ebp-0xc],eax
6401c6e4:	jns    0x6401c6eb
6401c6e6:	dec    edx
6401c6e7:	or     edx,0xffffffe0
6401c6ea:	inc    edx
6401c6eb:	lea    edi,[ebp+eax*4-0x20]
6401c6ef:	push   0x1f
6401c6f1:	xor    eax,eax
6401c6f3:	pop    ecx
6401c6f4:	sub    ecx,edx
6401c6f6:	inc    eax
6401c6f7:	shl    eax,cl
6401c6f9:	mov    DWORD PTR [ebp-0x8],ecx
6401c6fc:	test   DWORD PTR [edi],eax
6401c6fe:	je     0x6401c791
6401c704:	mov    eax,DWORD PTR [ebp-0xc]
6401c707:	or     edx,0xffffffff
6401c70a:	shl    edx,cl
6401c70c:	not    edx
6401c70e:	test   DWORD PTR [ebp+eax*4-0x20],edx
6401c712:	jmp    0x6401c719
6401c714:	cmp    DWORD PTR [ebp+eax*4-0x20],0x0
6401c719:	jne    0x6401c723
6401c71b:	inc    eax
6401c71c:	cmp    eax,0x3
6401c71f:	jl     0x6401c714
6401c721:	jmp    0x6401c791
6401c723:	mov    eax,esi
6401c725:	cdq    
6401c726:	push   0x1f
6401c728:	pop    ecx
6401c729:	and    edx,ecx
6401c72b:	add    eax,edx
6401c72d:	sar    eax,0x5
6401c730:	and    esi,0x8000001f
6401c736:	jns    0x6401c73d
6401c738:	dec    esi
6401c739:	or     esi,0xffffffe0
6401c73c:	inc    esi
6401c73d:	and    DWORD PTR [ebp-0x4],0x0
6401c741:	sub    ecx,esi
6401c743:	xor    edx,edx
6401c745:	inc    edx
6401c746:	shl    edx,cl
6401c748:	lea    ecx,[ebp+eax*4-0x20]
6401c74c:	mov    esi,DWORD PTR [ecx]
6401c74e:	add    esi,edx
6401c750:	mov    DWORD PTR [ebp+0x8],esi
6401c753:	mov    esi,DWORD PTR [ecx]
6401c755:	cmp    DWORD PTR [ebp+0x8],esi
6401c758:	jb     0x6401c77c
6401c75a:	cmp    DWORD PTR [ebp+0x8],edx
6401c75d:	jmp    0x6401c77a
6401c75f:	test   ecx,ecx
6401c761:	je     0x6401c78e
6401c763:	and    DWORD PTR [ebp-0x4],0x0
6401c767:	lea    ecx,[ebp+eax*4-0x20]
6401c76b:	mov    edx,DWORD PTR [ecx]
6401c76d:	lea    esi,[edx+0x1]
6401c770:	cmp    esi,edx
6401c772:	mov    DWORD PTR [ebp+0x8],esi
6401c775:	jb     0x6401c77c
6401c777:	cmp    esi,0x1
6401c77a:	jae    0x6401c783
6401c77c:	mov    DWORD PTR [ebp-0x4],0x1
6401c783:	dec    eax
6401c784:	mov    edx,DWORD PTR [ebp+0x8]
6401c787:	mov    DWORD PTR [ecx],edx
6401c789:	mov    ecx,DWORD PTR [ebp-0x4]
6401c78c:	jns    0x6401c75f
6401c78e:	mov    DWORD PTR [ebp+0x8],ecx
6401c791:	mov    ecx,DWORD PTR [ebp-0x8]
6401c794:	or     eax,0xffffffff
6401c797:	shl    eax,cl
6401c799:	and    DWORD PTR [edi],eax
6401c79b:	mov    eax,DWORD PTR [ebp-0xc]
6401c79e:	inc    eax
6401c79f:	cmp    eax,0x3
6401c7a2:	jge    0x6401c7b1
6401c7a4:	push   0x3
6401c7a6:	pop    ecx
6401c7a7:	lea    edi,[ebp+eax*4-0x20]
6401c7ab:	sub    ecx,eax
6401c7ad:	xor    eax,eax
6401c7af:	rep stos DWORD PTR es:[edi],eax
6401c7b1:	cmp    DWORD PTR [ebp+0x8],0x0
6401c7b5:	je     0x6401c7b8
6401c7b7:	inc    ebx
6401c7b8:	mov    eax,ds:0x64029004
6401c7bd:	mov    ecx,eax
6401c7bf:	sub    ecx,DWORD PTR ds:0x64029008
6401c7c5:	cmp    ebx,ecx
6401c7c7:	jge    0x6401c7d6
6401c7c9:	xor    eax,eax
6401c7cb:	lea    edi,[ebp-0x20]
6401c7ce:	stos   DWORD PTR es:[edi],eax
6401c7cf:	stos   DWORD PTR es:[edi],eax
6401c7d0:	stos   DWORD PTR es:[edi],eax
6401c7d1:	jmp    0x6401c9e3
6401c7d6:	cmp    ebx,eax
6401c7d8:	jg     0x6401c9ed
6401c7de:	sub    eax,DWORD PTR [ebp-0x10]
6401c7e1:	lea    esi,[ebp-0x2c]
6401c7e4:	mov    ecx,eax
6401c7e6:	lea    edi,[ebp-0x20]
6401c7e9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
6401c7ea:	cdq    
6401c7eb:	and    edx,0x1f
6401c7ee:	add    eax,edx
6401c7f0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
6401c7f1:	mov    edx,ecx
6401c7f3:	sar    eax,0x5
6401c7f6:	and    edx,0x8000001f
6401c7fc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
6401c7fd:	jns    0x6401c804
6401c7ff:	dec    edx
6401c800:	or     edx,0xffffffe0
6401c803:	inc    edx
6401c804:	and    DWORD PTR [ebp-0xc],0x0
6401c808:	and    DWORD PTR [ebp+0x8],0x0
6401c80c:	or     edi,0xffffffff
6401c80f:	mov    ecx,edx
6401c811:	shl    edi,cl
6401c813:	mov    DWORD PTR [ebp-0x4],0x20
6401c81a:	sub    DWORD PTR [ebp-0x4],edx
6401c81d:	not    edi
6401c81f:	mov    ebx,DWORD PTR [ebp+0x8]
6401c822:	lea    ebx,[ebp+ebx*4-0x20]
6401c826:	mov    esi,DWORD PTR [ebx]
6401c828:	mov    ecx,esi
6401c82a:	and    ecx,edi
6401c82c:	mov    DWORD PTR [ebp-0x10],ecx
6401c82f:	mov    ecx,edx
6401c831:	shr    esi,cl
6401c833:	mov    ecx,DWORD PTR [ebp-0x4]
6401c836:	or     esi,DWORD PTR [ebp-0xc]
6401c839:	mov    DWORD PTR [ebx],esi
6401c83b:	mov    esi,DWORD PTR [ebp-0x10]
6401c83e:	shl    esi,cl
6401c840:	inc    DWORD PTR [ebp+0x8]
6401c843:	cmp    DWORD PTR [ebp+0x8],0x3
6401c847:	mov    DWORD PTR [ebp-0xc],esi
6401c84a:	jl     0x6401c81f
6401c84c:	mov    esi,eax
6401c84e:	push   0x2
6401c850:	shl    esi,0x2
6401c853:	lea    ecx,[ebp-0x18]
6401c856:	pop    edx
6401c857:	sub    ecx,esi
6401c859:	cmp    edx,eax
6401c85b:	jl     0x6401c865
6401c85d:	mov    esi,DWORD PTR [ecx]
6401c85f:	mov    DWORD PTR [ebp+edx*4-0x20],esi
6401c863:	jmp    0x6401c86a
6401c865:	and    DWORD PTR [ebp+edx*4-0x20],0x0
6401c86a:	dec    edx
6401c86b:	sub    ecx,0x4
6401c86e:	test   edx,edx
6401c870:	jge    0x6401c859
6401c872:	mov    esi,DWORD PTR ds:0x64029008
6401c878:	dec    esi
6401c879:	lea    ecx,[esi+0x1]
6401c87c:	mov    eax,ecx
6401c87e:	cdq    
6401c87f:	and    edx,0x1f
6401c882:	add    eax,edx
6401c884:	sar    eax,0x5
6401c887:	mov    edx,ecx
6401c889:	and    edx,0x8000001f
6401c88f:	mov    DWORD PTR [ebp-0xc],eax
6401c892:	jns    0x6401c899
6401c894:	dec    edx
6401c895:	or     edx,0xffffffe0
6401c898:	inc    edx
6401c899:	push   0x1f
6401c89b:	pop    ecx
6401c89c:	sub    ecx,edx
6401c89e:	xor    edx,edx
6401c8a0:	inc    edx
6401c8a1:	shl    edx,cl
6401c8a3:	lea    ebx,[ebp+eax*4-0x20]
6401c8a7:	mov    DWORD PTR [ebp-0x10],ecx
6401c8aa:	test   DWORD PTR [ebx],edx
6401c8ac:	je     0x6401c934
6401c8b2:	or     edx,0xffffffff
6401c8b5:	shl    edx,cl
6401c8b7:	not    edx
6401c8b9:	test   DWORD PTR [ebp+eax*4-0x20],edx
6401c8bd:	jmp    0x6401c8c4
6401c8bf:	cmp    DWORD PTR [ebp+eax*4-0x20],0x0
6401c8c4:	jne    0x6401c8ce
6401c8c6:	inc    eax
6401c8c7:	cmp    eax,0x3
6401c8ca:	jl     0x6401c8bf
6401c8cc:	jmp    0x6401c934
6401c8ce:	mov    eax,esi
6401c8d0:	cdq    
6401c8d1:	push   0x1f
6401c8d3:	pop    ecx
6401c8d4:	and    edx,ecx
6401c8d6:	add    eax,edx
6401c8d8:	sar    eax,0x5
6401c8db:	and    esi,0x8000001f
6401c8e1:	jns    0x6401c8e8
6401c8e3:	dec    esi
6401c8e4:	or     esi,0xffffffe0
6401c8e7:	inc    esi
6401c8e8:	and    DWORD PTR [ebp+0x8],0x0
6401c8ec:	xor    edx,edx
6401c8ee:	sub    ecx,esi
6401c8f0:	inc    edx
6401c8f1:	shl    edx,cl
6401c8f3:	lea    ecx,[ebp+eax*4-0x20]
6401c8f7:	mov    esi,DWORD PTR [ecx]
6401c8f9:	lea    edi,[esi+edx*1]
6401c8fc:	cmp    edi,esi
6401c8fe:	jb     0x6401c904
6401c900:	cmp    edi,edx
6401c902:	jae    0x6401c90b
6401c904:	mov    DWORD PTR [ebp+0x8],0x1
6401c90b:	mov    DWORD PTR [ecx],edi
6401c90d:	mov    ecx,DWORD PTR [ebp+0x8]
6401c910:	jmp    0x6401c931
6401c912:	test   ecx,ecx
6401c914:	je     0x6401c934
6401c916:	lea    ecx,[ebp+eax*4-0x20]
6401c91a:	mov    edx,DWORD PTR [ecx]
6401c91c:	lea    esi,[edx+0x1]
6401c91f:	xor    edi,edi
6401c921:	cmp    esi,edx
6401c923:	jb     0x6401c92a
6401c925:	cmp    esi,0x1
6401c928:	jae    0x6401c92d
6401c92a:	xor    edi,edi
6401c92c:	inc    edi
6401c92d:	mov    DWORD PTR [ecx],esi
6401c92f:	mov    ecx,edi
6401c931:	dec    eax
6401c932:	jns    0x6401c912
6401c934:	mov    ecx,DWORD PTR [ebp-0x10]
6401c937:	or     eax,0xffffffff
6401c93a:	shl    eax,cl
6401c93c:	and    DWORD PTR [ebx],eax
6401c93e:	mov    eax,DWORD PTR [ebp-0xc]
6401c941:	inc    eax
6401c942:	cmp    eax,0x3
6401c945:	jge    0x6401c954
6401c947:	push   0x3
6401c949:	pop    ecx
6401c94a:	lea    edi,[ebp+eax*4-0x20]
6401c94e:	sub    ecx,eax
6401c950:	xor    eax,eax
6401c952:	rep stos DWORD PTR es:[edi],eax
6401c954:	mov    ecx,DWORD PTR ds:0x6402900c
6401c95a:	inc    ecx
6401c95b:	mov    eax,ecx
6401c95d:	cdq    
6401c95e:	and    edx,0x1f
6401c961:	add    eax,edx
6401c963:	mov    edx,ecx
6401c965:	sar    eax,0x5
6401c968:	and    edx,0x8000001f
6401c96e:	jns    0x6401c975
6401c970:	dec    edx
6401c971:	or     edx,0xffffffe0
6401c974:	inc    edx
6401c975:	and    DWORD PTR [ebp-0xc],0x0
6401c979:	and    DWORD PTR [ebp+0x8],0x0
6401c97d:	or     edi,0xffffffff
6401c980:	mov    ecx,edx
6401c982:	shl    edi,cl
6401c984:	mov    DWORD PTR [ebp-0x4],0x20
6401c98b:	sub    DWORD PTR [ebp-0x4],edx
6401c98e:	not    edi
6401c990:	mov    ebx,DWORD PTR [ebp+0x8]
6401c993:	lea    ebx,[ebp+ebx*4-0x20]
6401c997:	mov    esi,DWORD PTR [ebx]
6401c999:	mov    ecx,esi
6401c99b:	and    ecx,edi
6401c99d:	mov    DWORD PTR [ebp-0x10],ecx
6401c9a0:	mov    ecx,edx
6401c9a2:	shr    esi,cl
6401c9a4:	mov    ecx,DWORD PTR [ebp-0x4]
6401c9a7:	or     esi,DWORD PTR [ebp-0xc]
6401c9aa:	mov    DWORD PTR [ebx],esi
6401c9ac:	mov    esi,DWORD PTR [ebp-0x10]
6401c9af:	shl    esi,cl
6401c9b1:	inc    DWORD PTR [ebp+0x8]
6401c9b4:	cmp    DWORD PTR [ebp+0x8],0x3
6401c9b8:	mov    DWORD PTR [ebp-0xc],esi
6401c9bb:	jl     0x6401c990
6401c9bd:	mov    esi,eax
6401c9bf:	push   0x2
6401c9c1:	shl    esi,0x2
6401c9c4:	lea    ecx,[ebp-0x18]
6401c9c7:	pop    edx
6401c9c8:	sub    ecx,esi
6401c9ca:	cmp    edx,eax
6401c9cc:	jl     0x6401c9d6
6401c9ce:	mov    esi,DWORD PTR [ecx]
6401c9d0:	mov    DWORD PTR [ebp+edx*4-0x20],esi
6401c9d4:	jmp    0x6401c9db
6401c9d6:	and    DWORD PTR [ebp+edx*4-0x20],0x0
6401c9db:	dec    edx
6401c9dc:	sub    ecx,0x4
6401c9df:	test   edx,edx
6401c9e1:	jge    0x6401c9ca
6401c9e3:	push   0x2
6401c9e5:	xor    ebx,ebx
6401c9e7:	pop    eax
6401c9e8:	jmp    0x6401cb47
6401c9ed:	cmp    ebx,DWORD PTR ds:0x64029000
6401c9f3:	mov    ecx,DWORD PTR ds:0x6402900c
6401c9f9:	jl     0x6401caac
6401c9ff:	xor    eax,eax
6401ca01:	lea    edi,[ebp-0x20]
6401ca04:	stos   DWORD PTR es:[edi],eax
6401ca05:	stos   DWORD PTR es:[edi],eax
6401ca06:	stos   DWORD PTR es:[edi],eax
6401ca07:	or     DWORD PTR [ebp-0x20],0x80000000
6401ca0e:	mov    eax,ecx
6401ca10:	cdq    
6401ca11:	and    edx,0x1f
6401ca14:	add    eax,edx
6401ca16:	mov    edx,ecx
6401ca18:	sar    eax,0x5
6401ca1b:	and    edx,0x8000001f
6401ca21:	jns    0x6401ca28
6401ca23:	dec    edx
6401ca24:	or     edx,0xffffffe0
6401ca27:	inc    edx
6401ca28:	and    DWORD PTR [ebp-0xc],0x0
6401ca2c:	and    DWORD PTR [ebp+0x8],0x0
6401ca30:	or     edi,0xffffffff
6401ca33:	mov    ecx,edx
6401ca35:	shl    edi,cl
6401ca37:	mov    DWORD PTR [ebp-0x4],0x20
6401ca3e:	sub    DWORD PTR [ebp-0x4],edx
6401ca41:	not    edi
6401ca43:	mov    ebx,DWORD PTR [ebp+0x8]
6401ca46:	lea    ebx,[ebp+ebx*4-0x20]
6401ca4a:	mov    esi,DWORD PTR [ebx]
6401ca4c:	mov    ecx,esi
6401ca4e:	and    ecx,edi
6401ca50:	mov    DWORD PTR [ebp-0x10],ecx
6401ca53:	mov    ecx,edx
6401ca55:	shr    esi,cl
6401ca57:	mov    ecx,DWORD PTR [ebp-0x4]
6401ca5a:	or     esi,DWORD PTR [ebp-0xc]
6401ca5d:	mov    DWORD PTR [ebx],esi
6401ca5f:	mov    esi,DWORD PTR [ebp-0x10]
6401ca62:	shl    esi,cl
6401ca64:	inc    DWORD PTR [ebp+0x8]
6401ca67:	cmp    DWORD PTR [ebp+0x8],0x3
6401ca6b:	mov    DWORD PTR [ebp-0xc],esi
6401ca6e:	jl     0x6401ca43
6401ca70:	mov    esi,eax
6401ca72:	push   0x2
6401ca74:	shl    esi,0x2
6401ca77:	lea    ecx,[ebp-0x18]
6401ca7a:	pop    edx
6401ca7b:	sub    ecx,esi
6401ca7d:	cmp    edx,eax
6401ca7f:	jl     0x6401ca89
6401ca81:	mov    esi,DWORD PTR [ecx]
6401ca83:	mov    DWORD PTR [ebp+edx*4-0x20],esi
6401ca87:	jmp    0x6401ca8e
6401ca89:	and    DWORD PTR [ebp+edx*4-0x20],0x0
6401ca8e:	dec    edx
6401ca8f:	sub    ecx,0x4
6401ca92:	test   edx,edx
6401ca94:	jge    0x6401ca7d
6401ca96:	mov    eax,ds:0x64029000
6401ca9b:	mov    ecx,DWORD PTR ds:0x64029014
6401caa1:	lea    ebx,[ecx+eax*1]
6401caa4:	xor    eax,eax
6401caa6:	inc    eax
6401caa7:	jmp    0x6401cb47
6401caac:	mov    eax,ds:0x64029014
6401cab1:	and    DWORD PTR [ebp-0x20],0x7fffffff
6401cab8:	add    ebx,eax
6401caba:	mov    eax,ecx
6401cabc:	cdq    
6401cabd:	and    edx,0x1f
6401cac0:	add    eax,edx
6401cac2:	mov    edx,ecx
6401cac4:	sar    eax,0x5
6401cac7:	and    edx,0x8000001f
6401cacd:	jns    0x6401cad4
6401cacf:	dec    edx
6401cad0:	or     edx,0xffffffe0
6401cad3:	inc    edx
6401cad4:	and    DWORD PTR [ebp-0xc],0x0
6401cad8:	and    DWORD PTR [ebp+0x8],0x0
6401cadc:	or     esi,0xffffffff
6401cadf:	mov    ecx,edx
6401cae1:	shl    esi,cl
6401cae3:	mov    DWORD PTR [ebp-0x4],0x20
6401caea:	sub    DWORD PTR [ebp-0x4],edx
6401caed:	not    esi
6401caef:	mov    ecx,DWORD PTR [ebp+0x8]
6401caf2:	mov    edi,DWORD PTR [ebp+ecx*4-0x20]
6401caf6:	mov    ecx,edi
6401caf8:	and    ecx,esi
6401cafa:	mov    DWORD PTR [ebp-0x10],ecx
6401cafd:	mov    ecx,edx
6401caff:	shr    edi,cl
6401cb01:	mov    ecx,DWORD PTR [ebp+0x8]
6401cb04:	or     edi,DWORD PTR [ebp-0xc]
6401cb07:	mov    DWORD PTR [ebp+ecx*4-0x20],edi
6401cb0b:	mov    edi,DWORD PTR [ebp-0x10]
6401cb0e:	mov    ecx,DWORD PTR [ebp-0x4]
6401cb11:	shl    edi,cl
6401cb13:	inc    DWORD PTR [ebp+0x8]
6401cb16:	cmp    DWORD PTR [ebp+0x8],0x3
6401cb1a:	mov    DWORD PTR [ebp-0xc],edi
6401cb1d:	jl     0x6401caef
6401cb1f:	mov    esi,eax
6401cb21:	push   0x2
6401cb23:	shl    esi,0x2
6401cb26:	lea    ecx,[ebp-0x18]
6401cb29:	pop    edx
6401cb2a:	sub    ecx,esi
6401cb2c:	cmp    edx,eax
6401cb2e:	jl     0x6401cb38
6401cb30:	mov    esi,DWORD PTR [ecx]
6401cb32:	mov    DWORD PTR [ebp+edx*4-0x20],esi
6401cb36:	jmp    0x6401cb3d
6401cb38:	and    DWORD PTR [ebp+edx*4-0x20],0x0
6401cb3d:	dec    edx
6401cb3e:	sub    ecx,0x4
6401cb41:	test   edx,edx
6401cb43:	jge    0x6401cb2c
6401cb45:	xor    eax,eax
6401cb47:	pop    esi
6401cb48:	push   0x1f
6401cb4a:	pop    ecx
6401cb4b:	sub    ecx,DWORD PTR ds:0x6402900c
6401cb51:	shl    ebx,cl
6401cb53:	mov    ecx,DWORD PTR [ebp-0x14]
6401cb56:	neg    ecx
6401cb58:	sbb    ecx,ecx
6401cb5a:	and    ecx,0x80000000
6401cb60:	or     ebx,ecx
6401cb62:	mov    ecx,DWORD PTR ds:0x64029010
6401cb68:	or     ebx,DWORD PTR [ebp-0x20]
6401cb6b:	cmp    ecx,0x40
6401cb6e:	jne    0x6401cb7d
6401cb70:	mov    ecx,DWORD PTR [ebp+0xc]
6401cb73:	mov    edx,DWORD PTR [ebp-0x1c]
6401cb76:	mov    DWORD PTR [ecx+0x4],ebx
6401cb79:	mov    DWORD PTR [ecx],edx
6401cb7b:	jmp    0x6401cb87
6401cb7d:	cmp    ecx,0x20
6401cb80:	jne    0x6401cb87
6401cb82:	mov    ecx,DWORD PTR [ebp+0xc]
6401cb85:	mov    DWORD PTR [ecx],ebx
6401cb87:	pop    edi
6401cb88:	pop    ebx
6401cb89:	leave  
6401cb8a:	ret    
6401cb8b:	push   ebp
6401cb8c:	mov    ebp,esp
6401cb8e:	sub    esp,0x2c
6401cb91:	mov    eax,DWORD PTR [ebp+0x8]
6401cb94:	movzx  ecx,WORD PTR [eax+0xa]
6401cb98:	push   ebx
6401cb99:	mov    ebx,ecx
6401cb9b:	and    ecx,0x8000
6401cba1:	mov    DWORD PTR [ebp-0x14],ecx
6401cba4:	mov    ecx,DWORD PTR [eax+0x6]
6401cba7:	mov    DWORD PTR [ebp-0x20],ecx
6401cbaa:	mov    ecx,DWORD PTR [eax+0x2]
6401cbad:	movzx  eax,WORD PTR [eax]
6401cbb0:	and    ebx,0x7fff
6401cbb6:	sub    ebx,0x3fff
6401cbbc:	shl    eax,0x10
6401cbbf:	cmp    ebx,0xffffc001
6401cbc5:	push   edi
6401cbc6:	mov    DWORD PTR [ebp-0x1c],ecx
6401cbc9:	mov    DWORD PTR [ebp-0x18],eax
6401cbcc:	jne    0x6401cbf5
6401cbce:	xor    ebx,ebx
6401cbd0:	xor    eax,eax
6401cbd2:	cmp    DWORD PTR [ebp+eax*4-0x20],ebx
6401cbd6:	jne    0x6401cbe5
6401cbd8:	inc    eax
6401cbd9:	cmp    eax,0x3
6401cbdc:	jl     0x6401cbd2
6401cbde:	xor    eax,eax
6401cbe0:	jmp    0x6401d08a
6401cbe5:	xor    eax,eax
6401cbe7:	lea    edi,[ebp-0x20]
6401cbea:	stos   DWORD PTR es:[edi],eax
6401cbeb:	stos   DWORD PTR es:[edi],eax
6401cbec:	push   0x2
6401cbee:	stos   DWORD PTR es:[edi],eax
6401cbef:	pop    eax
6401cbf0:	jmp    0x6401d08a
6401cbf5:	and    DWORD PTR [ebp+0x8],0x0
6401cbf9:	push   esi
6401cbfa:	lea    esi,[ebp-0x20]
6401cbfd:	lea    edi,[ebp-0x2c]
6401cc00:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
6401cc01:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
6401cc02:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
6401cc03:	mov    esi,DWORD PTR ds:0x64029020
6401cc09:	dec    esi
6401cc0a:	lea    ecx,[esi+0x1]
6401cc0d:	mov    eax,ecx
6401cc0f:	cdq    
6401cc10:	and    edx,0x1f
6401cc13:	add    eax,edx
6401cc15:	sar    eax,0x5
6401cc18:	mov    edx,ecx
6401cc1a:	and    edx,0x8000001f
6401cc20:	mov    DWORD PTR [ebp-0x10],ebx
6401cc23:	mov    DWORD PTR [ebp-0xc],eax
6401cc26:	jns    0x6401cc2d
6401cc28:	dec    edx
6401cc29:	or     edx,0xffffffe0
6401cc2c:	inc    edx
6401cc2d:	lea    edi,[ebp+eax*4-0x20]
6401cc31:	push   0x1f
6401cc33:	xor    eax,eax
6401cc35:	pop    ecx
6401cc36:	sub    ecx,edx
6401cc38:	inc    eax
6401cc39:	shl    eax,cl
6401cc3b:	mov    DWORD PTR [ebp-0x8],ecx
6401cc3e:	test   DWORD PTR [edi],eax
6401cc40:	je     0x6401ccd3
6401cc46:	mov    eax,DWORD PTR [ebp-0xc]
6401cc49:	or     edx,0xffffffff
6401cc4c:	shl    edx,cl
6401cc4e:	not    edx
6401cc50:	test   DWORD PTR [ebp+eax*4-0x20],edx
6401cc54:	jmp    0x6401cc5b
6401cc56:	cmp    DWORD PTR [ebp+eax*4-0x20],0x0
6401cc5b:	jne    0x6401cc65
6401cc5d:	inc    eax
6401cc5e:	cmp    eax,0x3
6401cc61:	jl     0x6401cc56
6401cc63:	jmp    0x6401ccd3
6401cc65:	mov    eax,esi
6401cc67:	cdq    
6401cc68:	push   0x1f
6401cc6a:	pop    ecx
6401cc6b:	and    edx,ecx
6401cc6d:	add    eax,edx
6401cc6f:	sar    eax,0x5
6401cc72:	and    esi,0x8000001f
6401cc78:	jns    0x6401cc7f
6401cc7a:	dec    esi
6401cc7b:	or     esi,0xffffffe0
6401cc7e:	inc    esi
6401cc7f:	and    DWORD PTR [ebp-0x4],0x0
6401cc83:	sub    ecx,esi
6401cc85:	xor    edx,edx
6401cc87:	inc    edx
6401cc88:	shl    edx,cl
6401cc8a:	lea    ecx,[ebp+eax*4-0x20]
6401cc8e:	mov    esi,DWORD PTR [ecx]
6401cc90:	add    esi,edx
6401cc92:	mov    DWORD PTR [ebp+0x8],esi
6401cc95:	mov    esi,DWORD PTR [ecx]
6401cc97:	cmp    DWORD PTR [ebp+0x8],esi
6401cc9a:	jb     0x6401ccbe
6401cc9c:	cmp    DWORD PTR [ebp+0x8],edx
6401cc9f:	jmp    0x6401ccbc
6401cca1:	test   ecx,ecx
6401cca3:	je     0x6401ccd0
6401cca5:	and    DWORD PTR [ebp-0x4],0x0
6401cca9:	lea    ecx,[ebp+eax*4-0x20]
6401ccad:	mov    edx,DWORD PTR [ecx]
6401ccaf:	lea    esi,[edx+0x1]
6401ccb2:	cmp    esi,edx
6401ccb4:	mov    DWORD PTR [ebp+0x8],esi
6401ccb7:	jb     0x6401ccbe
6401ccb9:	cmp    esi,0x1
6401ccbc:	jae    0x6401ccc5
6401ccbe:	mov    DWORD PTR [ebp-0x4],0x1
6401ccc5:	dec    eax
6401ccc6:	mov    edx,DWORD PTR [ebp+0x8]
6401ccc9:	mov    DWORD PTR [ecx],edx
6401cccb:	mov    ecx,DWORD PTR [ebp-0x4]
6401ccce:	jns    0x6401cca1
6401ccd0:	mov    DWORD PTR [ebp+0x8],ecx
6401ccd3:	mov    ecx,DWORD PTR [ebp-0x8]
6401ccd6:	or     eax,0xffffffff
6401ccd9:	shl    eax,cl
6401ccdb:	and    DWORD PTR [edi],eax
6401ccdd:	mov    eax,DWORD PTR [ebp-0xc]
6401cce0:	inc    eax
6401cce1:	cmp    eax,0x3
6401cce4:	jge    0x6401ccf3
6401cce6:	push   0x3
6401cce8:	pop    ecx
6401cce9:	lea    edi,[ebp+eax*4-0x20]
6401cced:	sub    ecx,eax
6401ccef:	xor    eax,eax
6401ccf1:	rep stos DWORD PTR es:[edi],eax
6401ccf3:	cmp    DWORD PTR [ebp+0x8],0x0
6401ccf7:	je     0x6401ccfa
6401ccf9:	inc    ebx
6401ccfa:	mov    eax,ds:0x6402901c
6401ccff:	mov    ecx,eax
6401cd01:	sub    ecx,DWORD PTR ds:0x64029020
6401cd07:	cmp    ebx,ecx
6401cd09:	jge    0x6401cd18
6401cd0b:	xor    eax,eax
6401cd0d:	lea    edi,[ebp-0x20]
6401cd10:	stos   DWORD PTR es:[edi],eax
6401cd11:	stos   DWORD PTR es:[edi],eax
6401cd12:	stos   DWORD PTR es:[edi],eax
6401cd13:	jmp    0x6401cf25
6401cd18:	cmp    ebx,eax
6401cd1a:	jg     0x6401cf2f
6401cd20:	sub    eax,DWORD PTR [ebp-0x10]
6401cd23:	lea    esi,[ebp-0x2c]
6401cd26:	mov    ecx,eax
6401cd28:	lea    edi,[ebp-0x20]
6401cd2b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
6401cd2c:	cdq    
6401cd2d:	and    edx,0x1f
6401cd30:	add    eax,edx
6401cd32:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
6401cd33:	mov    edx,ecx
6401cd35:	sar    eax,0x5
6401cd38:	and    edx,0x8000001f
6401cd3e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
6401cd3f:	jns    0x6401cd46
6401cd41:	dec    edx
6401cd42:	or     edx,0xffffffe0
6401cd45:	inc    edx
6401cd46:	and    DWORD PTR [ebp-0xc],0x0
6401cd4a:	and    DWORD PTR [ebp+0x8],0x0
6401cd4e:	or     edi,0xffffffff
6401cd51:	mov    ecx,edx
6401cd53:	shl    edi,cl
6401cd55:	mov    DWORD PTR [ebp-0x4],0x20
6401cd5c:	sub    DWORD PTR [ebp-0x4],edx
6401cd5f:	not    edi
6401cd61:	mov    ebx,DWORD PTR [ebp+0x8]
6401cd64:	lea    ebx,[ebp+ebx*4-0x20]
6401cd68:	mov    esi,DWORD PTR [ebx]
6401cd6a:	mov    ecx,esi
6401cd6c:	and    ecx,edi
6401cd6e:	mov    DWORD PTR [ebp-0x10],ecx
6401cd71:	mov    ecx,edx
6401cd73:	shr    esi,cl
6401cd75:	mov    ecx,DWORD PTR [ebp-0x4]
6401cd78:	or     esi,DWORD PTR [ebp-0xc]
6401cd7b:	mov    DWORD PTR [ebx],esi
6401cd7d:	mov    esi,DWORD PTR [ebp-0x10]
6401cd80:	shl    esi,cl
6401cd82:	inc    DWORD PTR [ebp+0x8]
6401cd85:	cmp    DWORD PTR [ebp+0x8],0x3
6401cd89:	mov    DWORD PTR [ebp-0xc],esi
6401cd8c:	jl     0x6401cd61
6401cd8e:	mov    esi,eax
6401cd90:	push   0x2
6401cd92:	shl    esi,0x2
6401cd95:	lea    ecx,[ebp-0x18]
6401cd98:	pop    edx
6401cd99:	sub    ecx,esi
6401cd9b:	cmp    edx,eax
6401cd9d:	jl     0x6401cda7
6401cd9f:	mov    esi,DWORD PTR [ecx]
6401cda1:	mov    DWORD PTR [ebp+edx*4-0x20],esi
6401cda5:	jmp    0x6401cdac
6401cda7:	and    DWORD PTR [ebp+edx*4-0x20],0x0
6401cdac:	dec    edx
6401cdad:	sub    ecx,0x4
6401cdb0:	test   edx,edx
6401cdb2:	jge    0x6401cd9b
6401cdb4:	mov    esi,DWORD PTR ds:0x64029020
6401cdba:	dec    esi
6401cdbb:	lea    ecx,[esi+0x1]
6401cdbe:	mov    eax,ecx
6401cdc0:	cdq    
6401cdc1:	and    edx,0x1f
6401cdc4:	add    eax,edx
6401cdc6:	sar    eax,0x5
6401cdc9:	mov    edx,ecx
6401cdcb:	and    edx,0x8000001f
6401cdd1:	mov    DWORD PTR [ebp-0xc],eax
6401cdd4:	jns    0x6401cddb
6401cdd6:	dec    edx
6401cdd7:	or     edx,0xffffffe0
6401cdda:	inc    edx
6401cddb:	push   0x1f
6401cddd:	pop    ecx
6401cdde:	sub    ecx,edx
6401cde0:	xor    edx,edx
6401cde2:	inc    edx
6401cde3:	shl    edx,cl
6401cde5:	lea    ebx,[ebp+eax*4-0x20]
6401cde9:	mov    DWORD PTR [ebp-0x10],ecx
6401cdec:	test   DWORD PTR [ebx],edx
6401cdee:	je     0x6401ce76
6401cdf4:	or     edx,0xffffffff
6401cdf7:	shl    edx,cl
6401cdf9:	not    edx
6401cdfb:	test   DWORD PTR [ebp+eax*4-0x20],edx
6401cdff:	jmp    0x6401ce06
6401ce01:	cmp    DWORD PTR [ebp+eax*4-0x20],0x0
6401ce06:	jne    0x6401ce10
6401ce08:	inc    eax
6401ce09:	cmp    eax,0x3
6401ce0c:	jl     0x6401ce01
6401ce0e:	jmp    0x6401ce76
6401ce10:	mov    eax,esi
6401ce12:	cdq    
6401ce13:	push   0x1f
6401ce15:	pop    ecx
6401ce16:	and    edx,ecx
6401ce18:	add    eax,edx
6401ce1a:	sar    eax,0x5
6401ce1d:	and    esi,0x8000001f
6401ce23:	jns    0x6401ce2a
6401ce25:	dec    esi
6401ce26:	or     esi,0xffffffe0
6401ce29:	inc    esi
6401ce2a:	and    DWORD PTR [ebp+0x8],0x0
6401ce2e:	xor    edx,edx
6401ce30:	sub    ecx,esi
6401ce32:	inc    edx
6401ce33:	shl    edx,cl
6401ce35:	lea    ecx,[ebp+eax*4-0x20]
6401ce39:	mov    esi,DWORD PTR [ecx]
6401ce3b:	lea    edi,[esi+edx*1]
6401ce3e:	cmp    edi,esi
6401ce40:	jb     0x6401ce46
6401ce42:	cmp    edi,edx
6401ce44:	jae    0x6401ce4d
6401ce46:	mov    DWORD PTR [ebp+0x8],0x1
6401ce4d:	mov    DWORD PTR [ecx],edi
6401ce4f:	mov    ecx,DWORD PTR [ebp+0x8]
6401ce52:	jmp    0x6401ce73
6401ce54:	test   ecx,ecx
6401ce56:	je     0x6401ce76
6401ce58:	lea    ecx,[ebp+eax*4-0x20]
6401ce5c:	mov    edx,DWORD PTR [ecx]
6401ce5e:	lea    esi,[edx+0x1]
6401ce61:	xor    edi,edi
6401ce63:	cmp    esi,edx
6401ce65:	jb     0x6401ce6c
6401ce67:	cmp    esi,0x1
6401ce6a:	jae    0x6401ce6f
6401ce6c:	xor    edi,edi
6401ce6e:	inc    edi
6401ce6f:	mov    DWORD PTR [ecx],esi
6401ce71:	mov    ecx,edi
6401ce73:	dec    eax
6401ce74:	jns    0x6401ce54
6401ce76:	mov    ecx,DWORD PTR [ebp-0x10]
6401ce79:	or     eax,0xffffffff
6401ce7c:	shl    eax,cl
6401ce7e:	and    DWORD PTR [ebx],eax
6401ce80:	mov    eax,DWORD PTR [ebp-0xc]
6401ce83:	inc    eax
6401ce84:	cmp    eax,0x3
6401ce87:	jge    0x6401ce96
6401ce89:	push   0x3
6401ce8b:	pop    ecx
6401ce8c:	lea    edi,[ebp+eax*4-0x20]
6401ce90:	sub    ecx,eax
6401ce92:	xor    eax,eax
6401ce94:	rep stos DWORD PTR es:[edi],eax
6401ce96:	mov    ecx,DWORD PTR ds:0x64029024
6401ce9c:	inc    ecx
6401ce9d:	mov    eax,ecx
6401ce9f:	cdq    
6401cea0:	and    edx,0x1f
6401cea3:	add    eax,edx
6401cea5:	mov    edx,ecx
6401cea7:	sar    eax,0x5
6401ceaa:	and    edx,0x8000001f
6401ceb0:	jns    0x6401ceb7
6401ceb2:	dec    edx
6401ceb3:	or     edx,0xffffffe0
6401ceb6:	inc    edx
6401ceb7:	and    DWORD PTR [ebp-0xc],0x0
6401cebb:	and    DWORD PTR [ebp+0x8],0x0
6401cebf:	or     edi,0xffffffff
6401cec2:	mov    ecx,edx
6401cec4:	shl    edi,cl
6401cec6:	mov    DWORD PTR [ebp-0x4],0x20
6401cecd:	sub    DWORD PTR [ebp-0x4],edx
6401ced0:	not    edi
6401ced2:	mov    ebx,DWORD PTR [ebp+0x8]
6401ced5:	lea    ebx,[ebp+ebx*4-0x20]
6401ced9:	mov    esi,DWORD PTR [ebx]
6401cedb:	mov    ecx,esi
6401cedd:	and    ecx,edi
6401cedf:	mov    DWORD PTR [ebp-0x10],ecx
6401cee2:	mov    ecx,edx
6401cee4:	shr    esi,cl
6401cee6:	mov    ecx,DWORD PTR [ebp-0x4]
6401cee9:	or     esi,DWORD PTR [ebp-0xc]
6401ceec:	mov    DWORD PTR [ebx],esi
6401ceee:	mov    esi,DWORD PTR [ebp-0x10]
6401cef1:	shl    esi,cl
6401cef3:	inc    DWORD PTR [ebp+0x8]
6401cef6:	cmp    DWORD PTR [ebp+0x8],0x3
6401cefa:	mov    DWORD PTR [ebp-0xc],esi
6401cefd:	jl     0x6401ced2
6401ceff:	mov    esi,eax
6401cf01:	push   0x2
6401cf03:	shl    esi,0x2
6401cf06:	lea    ecx,[ebp-0x18]
6401cf09:	pop    edx
6401cf0a:	sub    ecx,esi
6401cf0c:	cmp    edx,eax
6401cf0e:	jl     0x6401cf18
6401cf10:	mov    esi,DWORD PTR [ecx]
6401cf12:	mov    DWORD PTR [ebp+edx*4-0x20],esi
6401cf16:	jmp    0x6401cf1d
6401cf18:	and    DWORD PTR [ebp+edx*4-0x20],0x0
6401cf1d:	dec    edx
6401cf1e:	sub    ecx,0x4
6401cf21:	test   edx,edx
6401cf23:	jge    0x6401cf0c
6401cf25:	push   0x2
6401cf27:	xor    ebx,ebx
6401cf29:	pop    eax
6401cf2a:	jmp    0x6401d089
6401cf2f:	cmp    ebx,DWORD PTR ds:0x64029018
6401cf35:	mov    ecx,DWORD PTR ds:0x64029024
6401cf3b:	jl     0x6401cfee
6401cf41:	xor    eax,eax
6401cf43:	lea    edi,[ebp-0x20]
6401cf46:	stos   DWORD PTR es:[edi],eax
6401cf47:	stos   DWORD PTR es:[edi],eax
6401cf48:	stos   DWORD PTR es:[edi],eax
6401cf49:	or     DWORD PTR [ebp-0x20],0x80000000
6401cf50:	mov    eax,ecx
6401cf52:	cdq    
6401cf53:	and    edx,0x1f
6401cf56:	add    eax,edx
6401cf58:	mov    edx,ecx
6401cf5a:	sar    eax,0x5
6401cf5d:	and    edx,0x8000001f
6401cf63:	jns    0x6401cf6a
6401cf65:	dec    edx
6401cf66:	or     edx,0xffffffe0
6401cf69:	inc    edx
6401cf6a:	and    DWORD PTR [ebp-0xc],0x0
6401cf6e:	and    DWORD PTR [ebp+0x8],0x0
6401cf72:	or     edi,0xffffffff
6401cf75:	mov    ecx,edx
6401cf77:	shl    edi,cl
6401cf79:	mov    DWORD PTR [ebp-0x4],0x20
6401cf80:	sub    DWORD PTR [ebp-0x4],edx
6401cf83:	not    edi
6401cf85:	mov    ebx,DWORD PTR [ebp+0x8]
6401cf88:	lea    ebx,[ebp+ebx*4-0x20]
6401cf8c:	mov    esi,DWORD PTR [ebx]
6401cf8e:	mov    ecx,esi
6401cf90:	and    ecx,edi
6401cf92:	mov    DWORD PTR [ebp-0x10],ecx
6401cf95:	mov    ecx,edx
6401cf97:	shr    esi,cl
6401cf99:	mov    ecx,DWORD PTR [ebp-0x4]
6401cf9c:	or     esi,DWORD PTR [ebp-0xc]
6401cf9f:	mov    DWORD PTR [ebx],esi
6401cfa1:	mov    esi,DWORD PTR [ebp-0x10]
6401cfa4:	shl    esi,cl
6401cfa6:	inc    DWORD PTR [ebp+0x8]
6401cfa9:	cmp    DWORD PTR [ebp+0x8],0x3
6401cfad:	mov    DWORD PTR [ebp-0xc],esi
6401cfb0:	jl     0x6401cf85
6401cfb2:	mov    esi,eax
6401cfb4:	push   0x2
6401cfb6:	shl    esi,0x2
6401cfb9:	lea    ecx,[ebp-0x18]
6401cfbc:	pop    edx
6401cfbd:	sub    ecx,esi
6401cfbf:	cmp    edx,eax
6401cfc1:	jl     0x6401cfcb
6401cfc3:	mov    esi,DWORD PTR [ecx]
6401cfc5:	mov    DWORD PTR [ebp+edx*4-0x20],esi
6401cfc9:	jmp    0x6401cfd0
6401cfcb:	and    DWORD PTR [ebp+edx*4-0x20],0x0
6401cfd0:	dec    edx
6401cfd1:	sub    ecx,0x4
6401cfd4:	test   edx,edx
6401cfd6:	jge    0x6401cfbf
6401cfd8:	mov    eax,ds:0x64029018
6401cfdd:	mov    ecx,DWORD PTR ds:0x6402902c
6401cfe3:	lea    ebx,[ecx+eax*1]
6401cfe6:	xor    eax,eax
6401cfe8:	inc    eax
6401cfe9:	jmp    0x6401d089
6401cfee:	mov    eax,ds:0x6402902c
6401cff3:	and    DWORD PTR [ebp-0x20],0x7fffffff
6401cffa:	add    ebx,eax
6401cffc:	mov    eax,ecx
6401cffe:	cdq    
6401cfff:	and    edx,0x1f
6401d002:	add    eax,edx
6401d004:	mov    edx,ecx
6401d006:	sar    eax,0x5
6401d009:	and    edx,0x8000001f
6401d00f:	jns    0x6401d016
6401d011:	dec    edx
6401d012:	or     edx,0xffffffe0
6401d015:	inc    edx
6401d016:	and    DWORD PTR [ebp-0xc],0x0
6401d01a:	and    DWORD PTR [ebp+0x8],0x0
6401d01e:	or     esi,0xffffffff
6401d021:	mov    ecx,edx
6401d023:	shl    esi,cl
6401d025:	mov    DWORD PTR [ebp-0x4],0x20
6401d02c:	sub    DWORD PTR [ebp-0x4],edx
6401d02f:	not    esi
6401d031:	mov    ecx,DWORD PTR [ebp+0x8]
6401d034:	mov    edi,DWORD PTR [ebp+ecx*4-0x20]
6401d038:	mov    ecx,edi
6401d03a:	and    ecx,esi
6401d03c:	mov    DWORD PTR [ebp-0x10],ecx
6401d03f:	mov    ecx,edx
6401d041:	shr    edi,cl
6401d043:	mov    ecx,DWORD PTR [ebp+0x8]
6401d046:	or     edi,DWORD PTR [ebp-0xc]
6401d049:	mov    DWORD PTR [ebp+ecx*4-0x20],edi
6401d04d:	mov    edi,DWORD PTR [ebp-0x10]
6401d050:	mov    ecx,DWORD PTR [ebp-0x4]
6401d053:	shl    edi,cl
6401d055:	inc    DWORD PTR [ebp+0x8]
6401d058:	cmp    DWORD PTR [ebp+0x8],0x3
6401d05c:	mov    DWORD PTR [ebp-0xc],edi
6401d05f:	jl     0x6401d031
6401d061:	mov    esi,eax
6401d063:	push   0x2
6401d065:	shl    esi,0x2
6401d068:	lea    ecx,[ebp-0x18]
6401d06b:	pop    edx
6401d06c:	sub    ecx,esi
6401d06e:	cmp    edx,eax
6401d070:	jl     0x6401d07a
6401d072:	mov    esi,DWORD PTR [ecx]
6401d074:	mov    DWORD PTR [ebp+edx*4-0x20],esi
6401d078:	jmp    0x6401d07f
6401d07a:	and    DWORD PTR [ebp+edx*4-0x20],0x0
6401d07f:	dec    edx
6401d080:	sub    ecx,0x4
6401d083:	test   edx,edx
6401d085:	jge    0x6401d06e
6401d087:	xor    eax,eax
6401d089:	pop    esi
6401d08a:	push   0x1f
6401d08c:	pop    ecx
6401d08d:	sub    ecx,DWORD PTR ds:0x64029024
6401d093:	shl    ebx,cl
6401d095:	mov    ecx,DWORD PTR [ebp-0x14]
6401d098:	neg    ecx
6401d09a:	sbb    ecx,ecx
6401d09c:	and    ecx,0x80000000
6401d0a2:	or     ebx,ecx
6401d0a4:	mov    ecx,DWORD PTR ds:0x64029028
6401d0aa:	or     ebx,DWORD PTR [ebp-0x20]
6401d0ad:	cmp    ecx,0x40
6401d0b0:	jne    0x6401d0bf
6401d0b2:	mov    ecx,DWORD PTR [ebp+0xc]
6401d0b5:	mov    edx,DWORD PTR [ebp-0x1c]
6401d0b8:	mov    DWORD PTR [ecx+0x4],ebx
6401d0bb:	mov    DWORD PTR [ecx],edx
6401d0bd:	jmp    0x6401d0c9
6401d0bf:	cmp    ecx,0x20
6401d0c2:	jne    0x6401d0c9
6401d0c4:	mov    ecx,DWORD PTR [ebp+0xc]
6401d0c7:	mov    DWORD PTR [ecx],ebx
6401d0c9:	pop    edi
6401d0ca:	pop    ebx
6401d0cb:	leave  
6401d0cc:	ret    
6401d0cd:	push   ebp
6401d0ce:	mov    ebp,esp
6401d0d0:	sub    esp,0x7c
6401d0d3:	mov    eax,ds:0x64028038
6401d0d8:	xor    eax,ebp
6401d0da:	mov    DWORD PTR [ebp-0x4],eax
6401d0dd:	mov    eax,DWORD PTR [ebp+0x8]
6401d0e0:	push   ebx
6401d0e1:	xor    ebx,ebx
6401d0e3:	push   esi
6401d0e4:	xor    esi,esi
6401d0e6:	mov    DWORD PTR [ebp-0x7c],eax
6401d0e9:	mov    eax,DWORD PTR [ebp+0xc]
6401d0ec:	inc    esi
6401d0ed:	xor    ecx,ecx
6401d0ef:	cmp    DWORD PTR [ebp+0x24],ebx
6401d0f2:	push   edi
6401d0f3:	mov    DWORD PTR [ebp-0x70],eax
6401d0f6:	lea    edi,[ebp-0x20]
6401d0f9:	mov    DWORD PTR [ebp-0x74],ebx
6401d0fc:	mov    DWORD PTR [ebp-0x68],esi
6401d0ff:	mov    DWORD PTR [ebp-0x4c],ebx
6401d102:	mov    DWORD PTR [ebp-0x58],ebx
6401d105:	mov    DWORD PTR [ebp-0x5c],ebx
6401d108:	mov    DWORD PTR [ebp-0x60],ebx
6401d10b:	mov    DWORD PTR [ebp-0x64],ebx
6401d10e:	mov    DWORD PTR [ebp-0x50],ebx
6401d111:	mov    DWORD PTR [ebp-0x6c],ebx
6401d114:	jne    0x6401d135
6401d116:	call   0x64011120
6401d11b:	push   ebx
6401d11c:	push   ebx
6401d11d:	push   ebx
6401d11e:	push   ebx
6401d11f:	push   ebx
6401d120:	mov    DWORD PTR [eax],0x16
6401d126:	call   0x6400ee86
6401d12b:	add    esp,0x14
6401d12e:	xor    eax,eax
6401d130:	jmp    0x6401d74e
6401d135:	mov    edx,DWORD PTR [ebp+0x10]
6401d138:	mov    DWORD PTR [ebp-0x54],edx
6401d13b:	mov    al,BYTE PTR [edx]
6401d13d:	cmp    al,0x20
6401d13f:	je     0x6401d14d
6401d141:	cmp    al,0x9
6401d143:	je     0x6401d14d
6401d145:	cmp    al,0xa
6401d147:	je     0x6401d14d
6401d149:	cmp    al,0xd
6401d14b:	jne    0x6401d150
6401d14d:	inc    edx
6401d14e:	jmp    0x6401d13b
6401d150:	mov    bl,0x30
6401d152:	mov    al,BYTE PTR [edx]
6401d154:	inc    edx
6401d155:	cmp    ecx,0xb
6401d158:	ja     0x6401d38d
6401d15e:	jmp    DWORD PTR [ecx*4+0x6401d75d]
6401d165:	mov    cl,al
6401d167:	sub    cl,0x31
6401d16a:	cmp    cl,0x8
6401d16d:	ja     0x6401d175
6401d16f:	push   0x3
6401d171:	pop    ecx
6401d172:	dec    edx
6401d173:	jmp    0x6401d152
6401d175:	mov    ecx,DWORD PTR [ebp+0x24]
6401d178:	mov    ecx,DWORD PTR [ecx]
6401d17a:	mov    ecx,DWORD PTR [ecx+0xbc]
6401d180:	mov    ecx,DWORD PTR [ecx]
6401d182:	cmp    al,BYTE PTR [ecx]
6401d184:	jne    0x6401d18b
6401d186:	push   0x5
6401d188:	pop    ecx
6401d189:	jmp    0x6401d152
6401d18b:	movsx  eax,al
6401d18e:	sub    eax,0x2b
6401d191:	je     0x6401d1b0
6401d193:	dec    eax
6401d194:	dec    eax
6401d195:	je     0x6401d1a4
6401d197:	sub    eax,0x3
6401d19a:	jne    0x6401d32b
6401d1a0:	mov    ecx,esi
6401d1a2:	jmp    0x6401d152
6401d1a4:	push   0x2
6401d1a6:	pop    ecx
6401d1a7:	mov    DWORD PTR [ebp-0x74],0x8000
6401d1ae:	jmp    0x6401d152
6401d1b0:	and    DWORD PTR [ebp-0x74],0x0
6401d1b4:	push   0x2
6401d1b6:	pop    ecx
6401d1b7:	jmp    0x6401d152
6401d1b9:	mov    cl,al
6401d1bb:	sub    cl,0x31
6401d1be:	cmp    cl,0x8
6401d1c1:	mov    DWORD PTR [ebp-0x58],esi
6401d1c4:	jbe    0x6401d16f
6401d1c6:	mov    ecx,DWORD PTR [ebp+0x24]
6401d1c9:	mov    ecx,DWORD PTR [ecx]
6401d1cb:	mov    ecx,DWORD PTR [ecx+0xbc]
6401d1d1:	mov    ecx,DWORD PTR [ecx]
6401d1d3:	cmp    al,BYTE PTR [ecx]
6401d1d5:	jne    0x6401d1db
6401d1d7:	push   0x4
6401d1d9:	jmp    0x6401d188
6401d1db:	cmp    al,0x2b
6401d1dd:	je     0x6401d207
6401d1df:	cmp    al,0x2d
6401d1e1:	je     0x6401d207
6401d1e3:	cmp    al,bl
6401d1e5:	je     0x6401d1a0
6401d1e7:	cmp    al,0x43
6401d1e9:	jle    0x6401d32b
6401d1ef:	cmp    al,0x45
6401d1f1:	jle    0x6401d203
6401d1f3:	cmp    al,0x63
6401d1f5:	jle    0x6401d32b
6401d1fb:	cmp    al,0x65
6401d1fd:	jg     0x6401d32b
6401d203:	push   0x6
6401d205:	jmp    0x6401d188
6401d207:	dec    edx
6401d208:	push   0xb
6401d20a:	jmp    0x6401d188
6401d20f:	mov    cl,al
6401d211:	sub    cl,0x31
6401d214:	cmp    cl,0x8
6401d217:	jbe    0x6401d16f
6401d21d:	mov    ecx,DWORD PTR [ebp+0x24]
6401d220:	mov    ecx,DWORD PTR [ecx]
6401d222:	mov    ecx,DWORD PTR [ecx+0xbc]
6401d228:	mov    ecx,DWORD PTR [ecx]
6401d22a:	cmp    al,BYTE PTR [ecx]
6401d22c:	je     0x6401d186
6401d232:	cmp    al,bl
6401d234:	je     0x6401d1a0
6401d23a:	mov    edx,DWORD PTR [ebp-0x54]
6401d23d:	jmp    0x6401d356
6401d242:	mov    DWORD PTR [ebp-0x58],esi
6401d245:	jmp    0x6401d261
6401d247:	cmp    al,0x39
6401d249:	jg     0x6401d265
6401d24b:	cmp    DWORD PTR [ebp-0x4c],0x19
6401d24f:	jae    0x6401d25b
6401d251:	inc    DWORD PTR [ebp-0x4c]
6401d254:	sub    al,bl
6401d256:	mov    BYTE PTR [edi],al
6401d258:	inc    edi
6401d259:	jmp    0x6401d25e
6401d25b:	inc    DWORD PTR [ebp-0x50]
6401d25e:	mov    al,BYTE PTR [edx]
6401d260:	inc    edx
6401d261:	cmp    al,bl
6401d263:	jge    0x6401d247
6401d265:	mov    ecx,DWORD PTR [ebp+0x24]
6401d268:	mov    ecx,DWORD PTR [ecx]
6401d26a:	mov    ecx,DWORD PTR [ecx+0xbc]
6401d270:	mov    ecx,DWORD PTR [ecx]
6401d272:	cmp    al,BYTE PTR [ecx]
6401d274:	je     0x6401d1d7
6401d27a:	cmp    al,0x2b
6401d27c:	je     0x6401d207
6401d27e:	cmp    al,0x2d
6401d280:	je     0x6401d207
6401d282:	jmp    0x6401d1e7
6401d287:	cmp    DWORD PTR [ebp-0x4c],0x0
6401d28b:	mov    DWORD PTR [ebp-0x58],esi
6401d28e:	mov    DWORD PTR [ebp-0x5c],esi
6401d291:	jne    0x6401d2b9
6401d293:	jmp    0x6401d29b
6401d295:	dec    DWORD PTR [ebp-0x50]
6401d298:	mov    al,BYTE PTR [edx]
6401d29a:	inc    edx
6401d29b:	cmp    al,bl
6401d29d:	je     0x6401d295
6401d29f:	jmp    0x6401d2b9
6401d2a1:	cmp    al,0x39
6401d2a3:	jg     0x6401d27a
6401d2a5:	cmp    DWORD PTR [ebp-0x4c],0x19
6401d2a9:	jae    0x6401d2b6
6401d2ab:	inc    DWORD PTR [ebp-0x4c]
6401d2ae:	sub    al,bl
6401d2b0:	mov    BYTE PTR [edi],al
6401d2b2:	inc    edi
6401d2b3:	dec    DWORD PTR [ebp-0x50]
6401d2b6:	mov    al,BYTE PTR [edx]
6401d2b8:	inc    edx
6401d2b9:	cmp    al,bl
6401d2bb:	jge    0x6401d2a1
6401d2bd:	jmp    0x6401d27a
6401d2bf:	sub    al,bl
6401d2c1:	cmp    al,0x9
6401d2c3:	mov    DWORD PTR [ebp-0x5c],esi
6401d2c6:	ja     0x6401d23a
6401d2cc:	push   0x4
6401d2ce:	jmp    0x6401d171
6401d2d3:	lea    ecx,[edx-0x2]
6401d2d6:	mov    DWORD PTR [ebp-0x54],ecx
6401d2d9:	mov    cl,al
6401d2db:	sub    cl,0x31
6401d2de:	cmp    cl,0x8
6401d2e1:	ja     0x6401d2ea
6401d2e3:	push   0x9
6401d2e5:	jmp    0x6401d171
6401d2ea:	movsx  eax,al
6401d2ed:	sub    eax,0x2b
6401d2f0:	je     0x6401d312
6401d2f2:	dec    eax
6401d2f3:	dec    eax
6401d2f4:	je     0x6401d306
6401d2f6:	sub    eax,0x3
6401d2f9:	jne    0x6401d23a
6401d2ff:	push   0x8
6401d301:	jmp    0x6401d188
6401d306:	or     DWORD PTR [ebp-0x68],0xffffffff
6401d30a:	push   0x7
6401d30c:	pop    ecx
6401d30d:	jmp    0x6401d152
6401d312:	push   0x7
6401d314:	jmp    0x6401d188
6401d319:	mov    DWORD PTR [ebp-0x60],esi
6401d31c:	jmp    0x6401d321
6401d31e:	mov    al,BYTE PTR [edx]
6401d320:	inc    edx
6401d321:	cmp    al,bl
6401d323:	je     0x6401d31e
6401d325:	sub    al,0x31
6401d327:	cmp    al,0x8
6401d329:	jbe    0x6401d2e3
6401d32b:	dec    edx
6401d32c:	jmp    0x6401d356
6401d32e:	mov    cl,al
6401d330:	sub    cl,0x31
6401d333:	cmp    cl,0x8
6401d336:	jbe    0x6401d2e3
6401d338:	cmp    al,bl
6401d33a:	jmp    0x6401d2f9
6401d33c:	cmp    DWORD PTR [ebp+0x20],0x0
6401d340:	je     0x6401d389
6401d342:	movsx  eax,al
6401d345:	sub    eax,0x2b
6401d348:	lea    ecx,[edx-0x1]
6401d34b:	mov    DWORD PTR [ebp-0x54],ecx
6401d34e:	je     0x6401d312
6401d350:	dec    eax
6401d351:	dec    eax
6401d352:	je     0x6401d306
6401d354:	mov    edx,ecx
6401d356:	cmp    DWORD PTR [ebp-0x58],0x0
6401d35a:	mov    eax,DWORD PTR [ebp-0x70]
6401d35d:	mov    DWORD PTR [eax],edx
6401d35f:	je     0x6401d709
6401d365:	push   0x18
6401d367:	pop    eax
6401d368:	cmp    DWORD PTR [ebp-0x4c],eax
6401d36b:	jbe    0x6401d37d
6401d36d:	cmp    BYTE PTR [ebp-0x9],0x5
6401d371:	jl     0x6401d376
6401d373:	inc    BYTE PTR [ebp-0x9]
6401d376:	dec    edi
6401d377:	inc    DWORD PTR [ebp-0x50]
6401d37a:	mov    DWORD PTR [ebp-0x4c],eax
6401d37d:	cmp    DWORD PTR [ebp-0x4c],0x0
6401d381:	jbe    0x6401d730
6401d387:	jmp    0x6401d3e2
6401d389:	push   0xa
6401d38b:	pop    ecx
6401d38c:	dec    edx
6401d38d:	cmp    ecx,0xa
6401d390:	jne    0x6401d152
6401d396:	jmp    0x6401d356
6401d398:	mov    DWORD PTR [ebp-0x60],esi
6401d39b:	xor    ecx,ecx
6401d39d:	jmp    0x6401d3b8
6401d39f:	cmp    al,0x39
6401d3a1:	jg     0x6401d3c3
6401d3a3:	imul   ecx,ecx,0xa
6401d3a6:	movsx  esi,al
6401d3a9:	lea    ecx,[ecx+esi*1-0x30]
6401d3ad:	cmp    ecx,0x1450
6401d3b3:	jg     0x6401d3be
6401d3b5:	mov    al,BYTE PTR [edx]
6401d3b7:	inc    edx
6401d3b8:	cmp    al,bl
6401d3ba:	jge    0x6401d39f
6401d3bc:	jmp    0x6401d3c3
6401d3be:	mov    ecx,0x1451
6401d3c3:	mov    DWORD PTR [ebp-0x64],ecx
6401d3c6:	jmp    0x6401d3d3
6401d3c8:	cmp    al,0x39
6401d3ca:	jg     0x6401d32b
6401d3d0:	mov    al,BYTE PTR [edx]
6401d3d2:	inc    edx
6401d3d3:	cmp    al,bl
6401d3d5:	jge    0x6401d3c8
6401d3d7:	jmp    0x6401d32b
6401d3dc:	dec    DWORD PTR [ebp-0x4c]
6401d3df:	inc    DWORD PTR [ebp-0x50]
6401d3e2:	dec    edi
6401d3e3:	cmp    BYTE PTR [edi],0x0
6401d3e6:	je     0x6401d3dc
6401d3e8:	lea    eax,[ebp-0x3c]
6401d3eb:	push   eax
6401d3ec:	push   DWORD PTR [ebp-0x4c]
6401d3ef:	lea    eax,[ebp-0x20]
6401d3f2:	push   eax
6401d3f3:	call   0x6401e484
6401d3f8:	mov    eax,DWORD PTR [ebp-0x64]
6401d3fb:	xor    ecx,ecx
6401d3fd:	add    esp,0xc
6401d400:	cmp    DWORD PTR [ebp-0x68],ecx
6401d403:	jge    0x6401d407
6401d405:	neg    eax
6401d407:	add    eax,DWORD PTR [ebp-0x50]
6401d40a:	cmp    DWORD PTR [ebp-0x60],ecx
6401d40d:	jne    0x6401d412
6401d40f:	add    eax,DWORD PTR [ebp+0x18]
6401d412:	cmp    DWORD PTR [ebp-0x5c],ecx
6401d415:	jne    0x6401d41a
6401d417:	sub    eax,DWORD PTR [ebp+0x1c]
6401d41a:	cmp    eax,0x1450
6401d41f:	jg     0x6401d712
6401d425:	cmp    eax,0xffffebb0
6401d42a:	jl     0x6401d729
6401d430:	mov    esi,0x64029030
6401d435:	sub    esi,0x60
6401d438:	cmp    eax,ecx
6401d43a:	mov    DWORD PTR [ebp-0x54],eax
6401d43d:	je     0x6401d6f7
6401d443:	jge    0x6401d452
6401d445:	neg    eax
6401d447:	mov    esi,0x64029190
6401d44c:	mov    DWORD PTR [ebp-0x54],eax
6401d44f:	sub    esi,0x60
6401d452:	cmp    DWORD PTR [ebp+0x14],ecx
6401d455:	jne    0x6401d45b
6401d457:	mov    WORD PTR [ebp-0x3c],cx
6401d45b:	cmp    DWORD PTR [ebp-0x54],ecx
6401d45e:	je     0x6401d6f7
6401d464:	mov    eax,DWORD PTR [ebp-0x54]
6401d467:	sar    DWORD PTR [ebp-0x54],0x3
6401d46b:	add    esi,0x54
6401d46e:	and    eax,0x7
6401d471:	test   eax,eax
6401d473:	mov    DWORD PTR [ebp-0x4c],esi
6401d476:	je     0x6401d6ed
6401d47c:	imul   eax,eax,0xc
6401d47f:	add    eax,esi
6401d481:	mov    ebx,eax
6401d483:	cmp    WORD PTR [ebx],0x8000
6401d488:	mov    DWORD PTR [ebp-0x70],ebx
6401d48b:	jb     0x6401d4a1
6401d48d:	mov    esi,ebx
6401d48f:	lea    edi,[ebp-0x48]
6401d492:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
6401d493:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
6401d494:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
6401d495:	dec    DWORD PTR [ebp-0x46]
6401d498:	mov    esi,DWORD PTR [ebp-0x4c]
6401d49b:	lea    ebx,[ebp-0x48]
6401d49e:	mov    DWORD PTR [ebp-0x70],ebx
6401d4a1:	movzx  edx,WORD PTR [ebx+0xa]
6401d4a5:	mov    ecx,DWORD PTR [ebp-0x32]
6401d4a8:	xor    eax,eax
6401d4aa:	mov    DWORD PTR [ebp-0x50],eax
6401d4ad:	mov    DWORD PTR [ebp-0x2c],eax
6401d4b0:	mov    DWORD PTR [ebp-0x28],eax
6401d4b3:	mov    DWORD PTR [ebp-0x24],eax
6401d4b6:	mov    eax,edx
6401d4b8:	mov    edi,0x7fff
6401d4bd:	xor    eax,ecx
6401d4bf:	and    ecx,edi
6401d4c1:	and    edx,edi
6401d4c3:	and    eax,0x8000
6401d4c8:	cmp    cx,0x7fff
6401d4cd:	lea    edi,[edx+ecx*1]
6401d4d0:	movzx  edi,di
6401d4d3:	jae    0x6401d6d3
6401d4d9:	cmp    dx,0x7fff
6401d4de:	jae    0x6401d6d3
6401d4e4:	cmp    di,0xbffd
6401d4e9:	ja     0x6401d6d3
6401d4ef:	cmp    di,0x3fbf
6401d4f4:	ja     0x6401d503
6401d4f6:	xor    eax,eax
6401d4f8:	mov    DWORD PTR [ebp-0x38],eax
6401d4fb:	mov    DWORD PTR [ebp-0x3c],eax
6401d4fe:	jmp    0x6401d6ea
6401d503:	test   cx,cx
6401d506:	jne    0x6401d527
6401d508:	inc    edi
6401d509:	test   DWORD PTR [ebp-0x34],0x7fffffff
6401d510:	jne    0x6401d527
6401d512:	cmp    DWORD PTR [ebp-0x38],0x0
6401d516:	jne    0x6401d527
6401d518:	cmp    DWORD PTR [ebp-0x3c],0x0
6401d51c:	jne    0x6401d527
6401d51e:	and    WORD PTR [ebp-0x32],cx
6401d522:	jmp    0x6401d6ed
6401d527:	xor    ecx,ecx
6401d529:	cmp    dx,cx
6401d52c:	jne    0x6401d54f
6401d52e:	inc    edi
6401d52f:	test   DWORD PTR [ebx+0x8],0x7fffffff
6401d536:	jne    0x6401d54f
6401d538:	cmp    DWORD PTR [ebx+0x4],ecx
6401d53b:	jne    0x6401d54f
6401d53d:	cmp    DWORD PTR [ebx],ecx
6401d53f:	jne    0x6401d54f
6401d541:	mov    DWORD PTR [ebp-0x34],ecx
6401d544:	mov    DWORD PTR [ebp-0x38],ecx
6401d547:	mov    DWORD PTR [ebp-0x3c],ecx
6401d54a:	jmp    0x6401d6ed
6401d54f:	and    DWORD PTR [ebp-0x68],ecx
6401d552:	lea    esi,[ebp-0x28]
6401d555:	mov    DWORD PTR [ebp-0x58],0x5
6401d55c:	mov    ecx,DWORD PTR [ebp-0x68]
6401d55f:	mov    edx,DWORD PTR [ebp-0x58]
6401d562:	add    ecx,ecx
6401d564:	test   edx,edx
6401d566:	mov    DWORD PTR [ebp-0x64],edx
6401d569:	jle    0x6401d5c0
6401d56b:	lea    ecx,[ebp+ecx*1-0x3c]
6401d56f:	add    ebx,0x8
6401d572:	mov    DWORD PTR [ebp-0x5c],ecx
6401d575:	mov    DWORD PTR [ebp-0x60],ebx
6401d578:	mov    ecx,DWORD PTR [ebp-0x60]
6401d57b:	mov    edx,DWORD PTR [ebp-0x5c]
6401d57e:	movzx  edx,WORD PTR [edx]
6401d581:	movzx  ecx,WORD PTR [ecx]
6401d584:	and    DWORD PTR [ebp-0x78],0x0
6401d588:	imul   ecx,edx
6401d58b:	mov    edx,DWORD PTR [esi-0x4]
6401d58e:	lea    ebx,[edx+ecx*1]
6401d591:	cmp    ebx,edx
6401d593:	jb     0x6401d599
6401d595:	cmp    ebx,ecx
6401d597:	jae    0x6401d5a0
6401d599:	mov    DWORD PTR [ebp-0x78],0x1
6401d5a0:	cmp    DWORD PTR [ebp-0x78],0x0
6401d5a4:	mov    DWORD PTR [esi-0x4],ebx
6401d5a7:	je     0x6401d5ac
6401d5a9:	inc    WORD PTR [esi]
6401d5ac:	add    DWORD PTR [ebp-0x5c],0x2
6401d5b0:	sub    DWORD PTR [ebp-0x60],0x2
6401d5b4:	dec    DWORD PTR [ebp-0x64]
6401d5b7:	cmp    DWORD PTR [ebp-0x64],0x0
6401d5bb:	jg     0x6401d578
6401d5bd:	mov    ebx,DWORD PTR [ebp-0x70]
6401d5c0:	inc    esi
6401d5c1:	inc    esi
6401d5c2:	inc    DWORD PTR [ebp-0x68]
6401d5c5:	dec    DWORD PTR [ebp-0x58]
6401d5c8:	cmp    DWORD PTR [ebp-0x58],0x0
6401d5cc:	jg     0x6401d55c
6401d5ce:	add    edi,0xc002
6401d5d4:	test   di,di
6401d5d7:	jle    0x6401d614
6401d5d9:	test   DWORD PTR [ebp-0x24],0x80000000
6401d5e0:	jne    0x6401d60f
6401d5e2:	mov    esi,DWORD PTR [ebp-0x28]
6401d5e5:	mov    ecx,DWORD PTR [ebp-0x2c]
6401d5e8:	shl    DWORD PTR [ebp-0x2c],1
6401d5eb:	shr    ecx,0x1f
6401d5ee:	mov    edx,esi
6401d5f0:	add    esi,esi
6401d5f2:	or     esi,ecx
6401d5f4:	mov    ecx,DWORD PTR [ebp-0x24]
6401d5f7:	shr    edx,0x1f
6401d5fa:	add    ecx,ecx
6401d5fc:	or     ecx,edx
6401d5fe:	add    edi,0xffff
6401d604:	test   di,di
6401d607:	mov    DWORD PTR [ebp-0x28],esi
6401d60a:	mov    DWORD PTR [ebp-0x24],ecx
6401d60d:	jg     0x6401d5d9
6401d60f:	test   di,di
6401d612:	jg     0x6401d661
6401d614:	add    edi,0xffff
6401d61a:	test   di,di
6401d61d:	jge    0x6401d661
6401d61f:	mov    ecx,edi
6401d621:	neg    ecx
6401d623:	movzx  esi,cx
6401d626:	add    edi,esi
6401d628:	test   BYTE PTR [ebp-0x2c],0x1
6401d62c:	je     0x6401d631
6401d62e:	inc    DWORD PTR [ebp-0x50]
6401d631:	mov    ecx,DWORD PTR [ebp-0x24]
6401d634:	mov    ebx,DWORD PTR [ebp-0x28]
6401d637:	mov    edx,DWORD PTR [ebp-0x28]
6401d63a:	shr    DWORD PTR [ebp-0x24],1
6401d63d:	shl    ecx,0x1f
6401d640:	shr    ebx,1
6401d642:	or     ebx,ecx
6401d644:	mov    ecx,DWORD PTR [ebp-0x2c]
6401d647:	shl    edx,0x1f
6401d64a:	shr    ecx,1
6401d64c:	or     ecx,edx
6401d64e:	dec    esi
6401d64f:	mov    DWORD PTR [ebp-0x28],ebx
6401d652:	mov    DWORD PTR [ebp-0x2c],ecx
6401d655:	jne    0x6401d628
6401d657:	cmp    DWORD PTR [ebp-0x50],esi
6401d65a:	je     0x6401d661
6401d65c:	or     WORD PTR [ebp-0x2c],0x1
6401d661:	cmp    WORD PTR [ebp-0x2c],0x8000
6401d667:	ja     0x6401d67a
6401d669:	mov    ecx,DWORD PTR [ebp-0x2c]
6401d66c:	and    ecx,0x1ffff
6401d672:	cmp    ecx,0x18000
6401d678:	jne    0x6401d6ad
6401d67a:	cmp    DWORD PTR [ebp-0x2a],0xffffffff
6401d67e:	jne    0x6401d6aa
6401d680:	and    DWORD PTR [ebp-0x2a],0x0
6401d684:	cmp    DWORD PTR [ebp-0x26],0xffffffff
6401d688:	jne    0x6401d6a5
6401d68a:	and    DWORD PTR [ebp-0x26],0x0
6401d68e:	cmp    WORD PTR [ebp-0x22],0xffff
6401d694:	jne    0x6401d69f
6401d696:	mov    WORD PTR [ebp-0x22],0x8000
6401d69c:	inc    edi
6401d69d:	jmp    0x6401d6ad
6401d69f:	inc    WORD PTR [ebp-0x22]
6401d6a3:	jmp    0x6401d6ad
6401d6a5:	inc    DWORD PTR [ebp-0x26]
6401d6a8:	jmp    0x6401d6ad
6401d6aa:	inc    DWORD PTR [ebp-0x2a]
6401d6ad:	cmp    di,0x7fff
6401d6b2:	mov    esi,DWORD PTR [ebp-0x4c]
6401d6b5:	jae    0x6401d6d3
6401d6b7:	mov    cx,WORD PTR [ebp-0x2a]
6401d6bb:	mov    WORD PTR [ebp-0x3c],cx
6401d6bf:	mov    ecx,DWORD PTR [ebp-0x28]
6401d6c2:	mov    DWORD PTR [ebp-0x3a],ecx
6401d6c5:	mov    ecx,DWORD PTR [ebp-0x24]
6401d6c8:	or     edi,eax
6401d6ca:	mov    DWORD PTR [ebp-0x36],ecx
6401d6cd:	mov    WORD PTR [ebp-0x32],di
6401d6d1:	jmp    0x6401d6ed
6401d6d3:	neg    ax
6401d6d6:	sbb    eax,eax
6401d6d8:	and    DWORD PTR [ebp-0x38],0x0
6401d6dc:	and    eax,0x80000000
6401d6e1:	add    eax,0x7fff8000
6401d6e6:	and    DWORD PTR [ebp-0x3c],0x0
6401d6ea:	mov    DWORD PTR [ebp-0x34],eax
6401d6ed:	cmp    DWORD PTR [ebp-0x54],0x0
6401d6f1:	jne    0x6401d464
6401d6f7:	mov    eax,DWORD PTR [ebp-0x34]
6401d6fa:	movzx  ecx,WORD PTR [ebp-0x3c]
6401d6fe:	mov    esi,DWORD PTR [ebp-0x3a]
6401d701:	mov    edx,DWORD PTR [ebp-0x36]
6401d704:	shr    eax,0x10
6401d707:	jmp    0x6401d738
6401d709:	mov    DWORD PTR [ebp-0x6c],0x4
6401d710:	jmp    0x6401d730
6401d712:	xor    esi,esi
6401d714:	mov    eax,0x7fff
6401d719:	mov    edx,0x80000000
6401d71e:	xor    ecx,ecx
6401d720:	mov    DWORD PTR [ebp-0x6c],0x2
6401d727:	jmp    0x6401d738
6401d729:	mov    DWORD PTR [ebp-0x6c],0x1
6401d730:	xor    ecx,ecx
6401d732:	xor    eax,eax
6401d734:	xor    edx,edx
6401d736:	xor    esi,esi
6401d738:	mov    edi,DWORD PTR [ebp-0x7c]
6401d73b:	or     eax,DWORD PTR [ebp-0x74]
6401d73e:	mov    WORD PTR [edi],cx
6401d741:	mov    WORD PTR [edi+0xa],ax
6401d745:	mov    eax,DWORD PTR [ebp-0x6c]
6401d748:	mov    DWORD PTR [edi+0x2],esi
6401d74b:	mov    DWORD PTR [edi+0x6],edx
6401d74e:	mov    ecx,DWORD PTR [ebp-0x4]
6401d751:	pop    edi
6401d752:	pop    esi
6401d753:	xor    ecx,ebp
6401d755:	pop    ebx
6401d756:	call   0x6400f34e
6401d75b:	leave  
6401d75c:	ret    
6401d75d:	rol    DWORD PTR gs:[ecx],1
6401d760:	fs mov ecx,0xf6401d1
6401d766:	rol    BYTE PTR [ecx],cl
6401d768:	fs inc edx
6401d76a:	rol    BYTE PTR [ecx],cl
6401d76c:	fs xchg edx,edx
6401d76f:	add    DWORD PTR [edi+edi*4-0x2e],esp
6401d773:	add    DWORD PTR [ebx+edx*8-0x2e],esp
6401d777:	add    DWORD PTR [esi+ebp*1-0x2d],esp
6401d77b:	add    DWORD PTR [ecx+ebx*1-0x2d],esp
6401d77f:	add    DWORD PTR [eax+ebx*4-0x2d],esp
6401d783:	add    DWORD PTR [ebp+ecx*4-0x2d],esp
6401d787:	add    DWORD PTR [esp+edi*1-0x2d],esp
6401d78b:	add    DWORD PTR [ebp+edx*2-0x75],esp
6401d78f:	in     al,dx
6401d790:	sub    esp,0x74
6401d793:	mov    eax,ds:0x64028038
6401d798:	xor    eax,ebp
6401d79a:	mov    DWORD PTR [ebp-0x4],eax
6401d79d:	push   ebx
6401d79e:	mov    ebx,DWORD PTR [ebp+0x1c]
6401d7a1:	push   esi
6401d7a2:	push   edi
6401d7a3:	lea    esi,[ebp+0x8]
6401d7a6:	lea    edi,[ebp-0x10]
6401d7a9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
6401d7aa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
6401d7ab:	movs   WORD PTR es:[edi],WORD PTR ds:[esi]
6401d7ad:	mov    edx,DWORD PTR [ebp-0x8]
6401d7b0:	mov    ecx,edx
6401d7b2:	mov    eax,0x8000
6401d7b7:	and    ecx,eax
6401d7b9:	and    edx,0x7fff
6401d7bf:	test   cx,cx
6401d7c2:	mov    DWORD PTR [ebp-0x60],ebx
6401d7c5:	mov    BYTE PTR [ebp-0x30],0xcc
6401d7c9:	mov    BYTE PTR [ebp-0x2f],0xcc
6401d7cd:	mov    BYTE PTR [ebp-0x2e],0xcc
6401d7d1:	mov    BYTE PTR [ebp-0x2d],0xcc
6401d7d5:	mov    BYTE PTR [ebp-0x2c],0xcc
6401d7d9:	mov    BYTE PTR [ebp-0x2b],0xcc
6401d7dd:	mov    BYTE PTR [ebp-0x2a],0xcc
6401d7e1:	mov    BYTE PTR [ebp-0x29],0xcc
6401d7e5:	mov    BYTE PTR [ebp-0x28],0xcc
6401d7e9:	mov    BYTE PTR [ebp-0x27],0xcc
6401d7ed:	mov    BYTE PTR [ebp-0x26],0xfb
6401d7f1:	mov    BYTE PTR [ebp-0x25],0x3f
6401d7f5:	mov    DWORD PTR [ebp-0x74],0x1
6401d7fc:	mov    DWORD PTR [ebp-0x6c],ecx
6401d7ff:	je     0x6401d807
6401d801:	mov    BYTE PTR [ebx+0x2],0x2d
6401d805:	jmp    0x6401d80b
6401d807:	mov    BYTE PTR [ebx+0x2],0x20
6401d80b:	test   dx,dx
6401d80e:	mov    esi,DWORD PTR [ebp-0xc]
6401d811:	mov    edi,DWORD PTR [ebp-0x10]
6401d814:	jne    0x6401d844
6401d816:	test   esi,esi
6401d818:	jne    0x6401d844
6401d81a:	test   edi,edi
6401d81c:	jne    0x6401d844
6401d81e:	and    WORD PTR [ebx],di
6401d821:	cmp    cx,ax
6401d824:	setne  al
6401d827:	dec    al
6401d829:	and    al,0xd
6401d82b:	add    al,0x20
6401d82d:	mov    BYTE PTR [ebx+0x2],al
6401d830:	mov    BYTE PTR [ebx+0x3],0x1
6401d834:	mov    BYTE PTR [ebx+0x4],0x30
6401d838:	mov    BYTE PTR [ebx+0x5],0x0
6401d83c:	xor    eax,eax
6401d83e:	inc    eax
6401d83f:	jmp    0x6401e00b
6401d844:	cmp    dx,0x7fff
6401d849:	jne    0x6401d8ed
6401d84f:	mov    eax,0x80000000
6401d854:	cmp    esi,eax
6401d856:	mov    WORD PTR [ebx],0x1
6401d85b:	jne    0x6401d861
6401d85d:	test   edi,edi
6401d85f:	je     0x6401d870
6401d861:	test   esi,0x40000000
6401d867:	jne    0x6401d870
6401d869:	push   0x64023520
6401d86e:	jmp    0x6401d8c1
6401d870:	test   cx,cx
6401d873:	je     0x6401d888
6401d875:	cmp    esi,0xc0000000
6401d87b:	jne    0x6401d888
6401d87d:	test   edi,edi
6401d87f:	jne    0x6401d8bc
6401d881:	push   0x64023518
6401d886:	jmp    0x6401d895
6401d888:	cmp    esi,eax
6401d88a:	jne    0x6401d8bc
6401d88c:	test   edi,edi
6401d88e:	jne    0x6401d8bc
6401d890:	push   0x64023510
6401d895:	lea    eax,[ebx+0x4]
6401d898:	push   0x16
6401d89a:	push   eax
6401d89b:	call   0x64010d18
6401d8a0:	add    esp,0xc
6401d8a3:	xor    esi,esi
6401d8a5:	test   eax,eax
6401d8a7:	je     0x6401d8b6
6401d8a9:	push   esi
6401d8aa:	push   esi
6401d8ab:	push   esi
6401d8ac:	push   esi
6401d8ad:	push   esi
6401d8ae:	call   0x6400ed8a
6401d8b3:	add    esp,0x14
6401d8b6:	mov    BYTE PTR [ebx+0x3],0x5
6401d8ba:	jmp    0x6401d8e6
6401d8bc:	push   0x64023508
6401d8c1:	lea    eax,[ebx+0x4]
6401d8c4:	push   0x16
6401d8c6:	push   eax
6401d8c7:	call   0x64010d18
6401d8cc:	add    esp,0xc
6401d8cf:	xor    esi,esi
6401d8d1:	test   eax,eax
6401d8d3:	je     0x6401d8e2
6401d8d5:	push   esi
6401d8d6:	push   esi
6401d8d7:	push   esi
6401d8d8:	push   esi
6401d8d9:	push   esi
6401d8da:	call   0x6400ed8a
6401d8df:	add    esp,0x14
6401d8e2:	mov    BYTE PTR [ebx+0x3],0x6
6401d8e6:	xor    eax,eax
6401d8e8:	jmp    0x6401e00b
6401d8ed:	movzx  ecx,dx
6401d8f0:	mov    ebx,ecx
6401d8f2:	imul   ecx,ecx,0x4d10
6401d8f8:	shr    ebx,0x8
6401d8fb:	mov    eax,esi
6401d8fd:	shr    eax,0x18
6401d900:	lea    eax,[ebx+eax*2]
6401d903:	imul   eax,eax,0x4d
6401d906:	lea    eax,[eax+ecx*1-0x134312f4]
6401d90d:	sar    eax,0x10
6401d910:	movzx  ecx,ax
6401d913:	movsx  ebx,cx
6401d916:	mov    DWORD PTR [ebp-0x4c],ecx
6401d919:	xor    eax,eax
6401d91b:	mov    ecx,0x64029030
6401d920:	neg    ebx
6401d922:	sub    ecx,0x60
6401d925:	cmp    ebx,eax
6401d927:	mov    WORD PTR [ebp-0x16],dx
6401d92b:	mov    DWORD PTR [ebp-0x1a],esi
6401d92e:	mov    DWORD PTR [ebp-0x1e],edi
6401d931:	mov    WORD PTR [ebp-0x20],ax
6401d935:	mov    DWORD PTR [ebp-0x68],ecx
6401d938:	je     0x6401dbec
6401d93e:	jge    0x6401d94d
6401d940:	mov    ecx,0x64029190
6401d945:	neg    ebx
6401d947:	sub    ecx,0x60
6401d94a:	mov    DWORD PTR [ebp-0x68],ecx
6401d94d:	cmp    ebx,eax
6401d94f:	je     0x6401dbec
6401d955:	add    DWORD PTR [ebp-0x68],0x54
6401d959:	mov    ecx,ebx
6401d95b:	and    ecx,0x7
6401d95e:	sar    ebx,0x3
6401d961:	test   ecx,ecx
6401d963:	je     0x6401dbe2
6401d969:	imul   ecx,ecx,0xc
6401d96c:	add    ecx,DWORD PTR [ebp-0x68]
6401d96f:	cmp    WORD PTR [ecx],0x8000
6401d974:	mov    DWORD PTR [ebp-0x64],ecx
6401d977:	jb     0x6401d98c
6401d979:	mov    esi,ecx
6401d97b:	lea    edi,[ebp-0x3c]
6401d97e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
6401d97f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
6401d980:	lea    eax,[ebp-0x3c]
6401d983:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
6401d984:	dec    DWORD PTR [ebp-0x3a]
6401d987:	mov    DWORD PTR [ebp-0x64],eax
6401d98a:	mov    ecx,eax
6401d98c:	movzx  edi,WORD PTR [ecx+0xa]
6401d990:	mov    edx,DWORD PTR [ebp-0x16]
6401d993:	xor    eax,eax
6401d995:	mov    ecx,edi
6401d997:	mov    esi,0x7fff
6401d99c:	xor    ecx,edx
6401d99e:	and    edx,esi
6401d9a0:	and    edi,esi
6401d9a2:	mov    DWORD PTR [ebp-0x48],eax
6401d9a5:	mov    DWORD PTR [ebp-0x10],eax
6401d9a8:	mov    DWORD PTR [ebp-0xc],eax
6401d9ab:	mov    DWORD PTR [ebp-0x8],eax
6401d9ae:	and    ecx,0x8000
6401d9b4:	cmp    dx,si
6401d9b7:	lea    eax,[edi+edx*1]
6401d9ba:	movzx  eax,ax
6401d9bd:	jae    0x6401dbc6
6401d9c3:	cmp    di,si
6401d9c6:	jae    0x6401dbc6
6401d9cc:	cmp    ax,0xbffd
6401d9d0:	ja     0x6401dbc6
6401d9d6:	cmp    ax,0x3fbf
6401d9da:	ja     0x6401d9ec
6401d9dc:	xor    eax,eax
6401d9de:	mov    DWORD PTR [ebp-0x18],eax
6401d9e1:	mov    DWORD PTR [ebp-0x1c],eax
6401d9e4:	mov    DWORD PTR [ebp-0x20],eax
6401d9e7:	jmp    0x6401dbe2
6401d9ec:	xor    esi,esi
6401d9ee:	cmp    dx,si
6401d9f1:	jne    0x6401da10
6401d9f3:	inc    eax
6401d9f4:	test   DWORD PTR [ebp-0x18],0x7fffffff
6401d9fb:	jne    0x6401da10
6401d9fd:	cmp    DWORD PTR [ebp-0x1c],esi
6401da00:	jne    0x6401da10
6401da02:	cmp    DWORD PTR [ebp-0x20],esi
6401da05:	jne    0x6401da10
6401da07:	mov    WORD PTR [ebp-0x16],si
6401da0b:	jmp    0x6401dbe2
6401da10:	cmp    di,si
6401da13:	jne    0x6401da39
6401da15:	mov    edx,DWORD PTR [ebp-0x64]
6401da18:	inc    eax
6401da19:	test   DWORD PTR [edx+0x8],0x7fffffff
6401da20:	jne    0x6401da39
6401da22:	cmp    DWORD PTR [edx+0x4],esi
6401da25:	jne    0x6401da39
6401da27:	cmp    DWORD PTR [edx],esi
6401da29:	jne    0x6401da39
6401da2b:	mov    DWORD PTR [ebp-0x18],esi
6401da2e:	mov    DWORD PTR [ebp-0x1c],esi
6401da31:	mov    DWORD PTR [ebp-0x20],esi
6401da34:	jmp    0x6401dbe2
6401da39:	lea    edi,[ebp-0xc]
6401da3c:	mov    DWORD PTR [ebp-0x5c],esi
6401da3f:	mov    DWORD PTR [ebp-0x44],edi
6401da42:	mov    DWORD PTR [ebp-0x40],0x5
6401da49:	mov    edx,DWORD PTR [ebp-0x5c]
6401da4c:	mov    esi,DWORD PTR [ebp-0x40]
6401da4f:	add    edx,edx
6401da51:	test   esi,esi
6401da53:	mov    DWORD PTR [ebp-0x50],esi
6401da56:	jle    0x6401dab0
6401da58:	lea    edx,[ebp+edx*1-0x20]
6401da5c:	mov    DWORD PTR [ebp-0x58],edx
6401da5f:	mov    edx,DWORD PTR [ebp-0x64]
6401da62:	add    edx,0x8
6401da65:	mov    DWORD PTR [ebp-0x54],edx
6401da68:	mov    edx,DWORD PTR [ebp-0x58]
6401da6b:	mov    esi,DWORD PTR [ebp-0x54]
6401da6e:	movzx  esi,WORD PTR [esi]
6401da71:	movzx  edx,WORD PTR [edx]
6401da74:	mov    edi,DWORD PTR [edi-0x4]
6401da77:	imul   edx,esi
6401da7a:	and    DWORD PTR [ebp-0x70],0x0
6401da7e:	lea    esi,[edi+edx*1]
6401da81:	cmp    esi,edi
6401da83:	jb     0x6401da89
6401da85:	cmp    esi,edx
6401da87:	jae    0x6401da90
6401da89:	mov    DWORD PTR [ebp-0x70],0x1
6401da90:	cmp    DWORD PTR [ebp-0x70],0x0
6401da94:	mov    edi,DWORD PTR [ebp-0x44]
6401da97:	mov    DWORD PTR [edi-0x4],esi
6401da9a:	je     0x6401da9f
6401da9c:	inc    WORD PTR [edi]
6401da9f:	add    DWORD PTR [ebp-0x58],0x2
6401daa3:	sub    DWORD PTR [ebp-0x54],0x2
6401daa7:	dec    DWORD PTR [ebp-0x50]
6401daaa:	cmp    DWORD PTR [ebp-0x50],0x0
6401daae:	jg     0x6401da68
6401dab0:	inc    edi
6401dab1:	inc    edi
6401dab2:	inc    DWORD PTR [ebp-0x5c]
6401dab5:	dec    DWORD PTR [ebp-0x40]
6401dab8:	cmp    DWORD PTR [ebp-0x40],0x0
6401dabc:	mov    DWORD PTR [ebp-0x44],edi
6401dabf:	jg     0x6401da49
6401dac1:	add    eax,0xc002
6401dac6:	test   ax,ax
6401dac9:	jle    0x6401db06
6401dacb:	test   DWORD PTR [ebp-0x8],0x80000000
6401dad2:	jne    0x6401db01
6401dad4:	mov    edx,DWORD PTR [ebp-0x10]
6401dad7:	mov    edi,DWORD PTR [ebp-0xc]
6401dada:	mov    esi,DWORD PTR [ebp-0xc]
6401dadd:	shl    DWORD PTR [ebp-0x10],1
6401dae0:	shr    edx,0x1f
6401dae3:	add    edi,edi
6401dae5:	or     edi,edx
6401dae7:	mov    edx,DWORD PTR [ebp-0x8]
6401daea:	shr    esi,0x1f
6401daed:	add    edx,edx
6401daef:	or     edx,esi
6401daf1:	add    eax,0xffff
6401daf6:	test   ax,ax
6401daf9:	mov    DWORD PTR [ebp-0xc],edi
6401dafc:	mov    DWORD PTR [ebp-0x8],edx
6401daff:	jg     0x6401dacb
6401db01:	test   ax,ax
6401db04:	jg     0x6401db58
6401db06:	add    eax,0xffff
6401db0b:	test   ax,ax
6401db0e:	jge    0x6401db58
6401db10:	mov    edx,eax
6401db12:	neg    edx
6401db14:	movzx  edx,dx
6401db17:	mov    DWORD PTR [ebp-0x44],edx
6401db1a:	add    eax,edx
6401db1c:	test   BYTE PTR [ebp-0x10],0x1
6401db20:	je     0x6401db25
6401db22:	inc    DWORD PTR [ebp-0x48]
6401db25:	mov    edx,DWORD PTR [ebp-0x8]
6401db28:	mov    edi,DWORD PTR [ebp-0xc]
6401db2b:	mov    esi,DWORD PTR [ebp-0xc]
6401db2e:	shr    DWORD PTR [ebp-0x8],1
6401db31:	shl    edx,0x1f
6401db34:	shr    edi,1
6401db36:	or     edi,edx
6401db38:	mov    edx,DWORD PTR [ebp-0x10]
6401db3b:	shl    esi,0x1f
6401db3e:	shr    edx,1
6401db40:	or     edx,esi
6401db42:	dec    DWORD PTR [ebp-0x44]
6401db45:	mov    DWORD PTR [ebp-0xc],edi
6401db48:	mov    DWORD PTR [ebp-0x10],edx
6401db4b:	jne    0x6401db1c
6401db4d:	cmp    DWORD PTR [ebp-0x48],0x0
6401db51:	je     0x6401db58
6401db53:	or     WORD PTR [ebp-0x10],0x1
6401db58:	cmp    WORD PTR [ebp-0x10],0x8000
6401db5e:	ja     0x6401db71
6401db60:	mov    edx,DWORD PTR [ebp-0x10]
6401db63:	and    edx,0x1ffff
6401db69:	cmp    edx,0x18000
6401db6f:	jne    0x6401dba4
6401db71:	cmp    DWORD PTR [ebp-0xe],0xffffffff
6401db75:	jne    0x6401dba1
6401db77:	and    DWORD PTR [ebp-0xe],0x0
6401db7b:	cmp    DWORD PTR [ebp-0xa],0xffffffff
6401db7f:	jne    0x6401db9c
6401db81:	and    DWORD PTR [ebp-0xa],0x0
6401db85:	cmp    WORD PTR [ebp-0x6],0xffff
6401db8b:	jne    0x6401db96
6401db8d:	mov    WORD PTR [ebp-0x6],0x8000
6401db93:	inc    eax
6401db94:	jmp    0x6401dba4
6401db96:	inc    WORD PTR [ebp-0x6]
6401db9a:	jmp    0x6401dba4
6401db9c:	inc    DWORD PTR [ebp-0xa]
6401db9f:	jmp    0x6401dba4
6401dba1:	inc    DWORD PTR [ebp-0xe]
6401dba4:	cmp    ax,0x7fff
6401dba8:	jae    0x6401dbc6
6401dbaa:	mov    dx,WORD PTR [ebp-0xe]
6401dbae:	mov    WORD PTR [ebp-0x20],dx
6401dbb2:	mov    edx,DWORD PTR [ebp-0xc]
6401dbb5:	mov    DWORD PTR [ebp-0x1e],edx
6401dbb8:	mov    edx,DWORD PTR [ebp-0x8]
6401dbbb:	or     eax,ecx
6401dbbd:	mov    DWORD PTR [ebp-0x1a],edx
6401dbc0:	mov    WORD PTR [ebp-0x16],ax
6401dbc4:	jmp    0x6401dbe2
6401dbc6:	neg    cx
6401dbc9:	sbb    ecx,ecx
6401dbcb:	and    DWORD PTR [ebp-0x1c],0x0
6401dbcf:	and    ecx,0x80000000
6401dbd5:	add    ecx,0x7fff8000
6401dbdb:	and    DWORD PTR [ebp-0x20],0x0
6401dbdf:	mov    DWORD PTR [ebp-0x18],ecx
6401dbe2:	test   ebx,ebx
6401dbe4:	jne    0x6401d955
6401dbea:	xor    eax,eax
6401dbec:	mov    ecx,DWORD PTR [ebp-0x18]
6401dbef:	shr    ecx,0x10
6401dbf2:	cmp    cx,0x3fff
6401dbf7:	mov    ebx,0x7fff
6401dbfc:	jb     0x6401de4a
6401dc02:	mov    esi,DWORD PTR [ebp-0x26]
6401dc05:	inc    DWORD PTR [ebp-0x4c]
6401dc08:	movzx  edx,cx
6401dc0b:	mov    ecx,esi
6401dc0d:	xor    ecx,edx
6401dc0f:	and    edx,ebx
6401dc11:	and    esi,ebx
6401dc13:	and    ecx,0x8000
6401dc19:	cmp    dx,bx
6401dc1c:	lea    edi,[esi+edx*1]
6401dc1f:	mov    DWORD PTR [ebp-0x58],eax
6401dc22:	mov    DWORD PTR [ebp-0x10],eax
6401dc25:	mov    DWORD PTR [ebp-0xc],eax
6401dc28:	mov    DWORD PTR [ebp-0x8],eax
6401dc2b:	movzx  edi,di
6401dc2e:	jae    0x6401de30
6401dc34:	cmp    si,bx
6401dc37:	jae    0x6401de30
6401dc3d:	cmp    di,0xbffd
6401dc42:	ja     0x6401de30
6401dc48:	cmp    di,0x3fbf
6401dc4d:	ja     0x6401dc57
6401dc4f:	mov    DWORD PTR [ebp-0x18],eax
6401dc52:	jmp    0x6401de44
6401dc57:	cmp    dx,ax
6401dc5a:	jne    0x6401dc79
6401dc5c:	inc    edi
6401dc5d:	test   DWORD PTR [ebp-0x18],0x7fffffff
6401dc64:	jne    0x6401dc79
6401dc66:	cmp    DWORD PTR [ebp-0x1c],eax
6401dc69:	jne    0x6401dc79
6401dc6b:	cmp    DWORD PTR [ebp-0x20],eax
6401dc6e:	jne    0x6401dc79
6401dc70:	mov    WORD PTR [ebp-0x16],ax
6401dc74:	jmp    0x6401de4a
6401dc79:	cmp    si,ax
6401dc7c:	jne    0x6401dc92
6401dc7e:	inc    edi
6401dc7f:	test   DWORD PTR [ebp-0x28],0x7fffffff
6401dc86:	jne    0x6401dc92
6401dc88:	cmp    DWORD PTR [ebp-0x2c],eax
6401dc8b:	jne    0x6401dc92
6401dc8d:	cmp    DWORD PTR [ebp-0x30],eax
6401dc90:	je     0x6401dc4f
6401dc92:	and    DWORD PTR [ebp-0x54],0x0
6401dc96:	lea    eax,[ebp-0xc]
6401dc99:	mov    DWORD PTR [ebp-0x40],0x5
6401dca0:	mov    edx,DWORD PTR [ebp-0x54]
6401dca3:	mov    esi,DWORD PTR [ebp-0x40]
6401dca6:	add    edx,edx
6401dca8:	test   esi,esi
6401dcaa:	mov    DWORD PTR [ebp-0x50],esi
6401dcad:	jle    0x6401dd01
6401dcaf:	lea    esi,[ebp-0x28]
6401dcb2:	lea    edx,[ebp+edx*1-0x20]
6401dcb6:	mov    DWORD PTR [ebp-0x5c],esi
6401dcb9:	mov    DWORD PTR [ebp-0x48],edx
6401dcbc:	mov    edx,DWORD PTR [ebp-0x5c]
6401dcbf:	mov    esi,DWORD PTR [ebp-0x48]
6401dcc2:	movzx  esi,WORD PTR [esi]
6401dcc5:	movzx  edx,WORD PTR [edx]
6401dcc8:	and    DWORD PTR [ebp-0x44],0x0
6401dccc:	imul   edx,esi
6401dccf:	mov    esi,DWORD PTR [eax-0x4]
6401dcd2:	lea    ebx,[esi+edx*1]
6401dcd5:	cmp    ebx,esi
6401dcd7:	jb     0x6401dcdd
6401dcd9:	cmp    ebx,edx
6401dcdb:	jae    0x6401dce4
6401dcdd:	mov    DWORD PTR [ebp-0x44],0x1
6401dce4:	cmp    DWORD PTR [ebp-0x44],0x0
6401dce8:	mov    DWORD PTR [eax-0x4],ebx
6401dceb:	je     0x6401dcf0
6401dced:	inc    WORD PTR [eax]
6401dcf0:	add    DWORD PTR [ebp-0x48],0x2
6401dcf4:	sub    DWORD PTR [ebp-0x5c],0x2
6401dcf8:	dec    DWORD PTR [ebp-0x50]
6401dcfb:	cmp    DWORD PTR [ebp-0x50],0x0
6401dcff:	jg     0x6401dcbc
6401dd01:	inc    eax
6401dd02:	inc    eax
6401dd03:	inc    DWORD PTR [ebp-0x54]
6401dd06:	dec    DWORD PTR [ebp-0x40]
6401dd09:	cmp    DWORD PTR [ebp-0x40],0x0
6401dd0d:	jg     0x6401dca0
6401dd0f:	add    edi,0xc002
6401dd15:	xor    eax,eax
6401dd17:	cmp    di,ax
6401dd1a:	jle    0x6401dd58
6401dd1c:	test   DWORD PTR [ebp-0x8],0x80000000
6401dd23:	jne    0x6401dd53
6401dd25:	mov    edx,DWORD PTR [ebp-0x10]
6401dd28:	mov    ebx,DWORD PTR [ebp-0xc]
6401dd2b:	mov    esi,DWORD PTR [ebp-0xc]
6401dd2e:	shl    DWORD PTR [ebp-0x10],1
6401dd31:	shr    edx,0x1f
6401dd34:	add    ebx,ebx
6401dd36:	or     ebx,edx
6401dd38:	mov    edx,DWORD PTR [ebp-0x8]
6401dd3b:	shr    esi,0x1f
6401dd3e:	add    edx,edx
6401dd40:	or     edx,esi
6401dd42:	add    edi,0xffff
6401dd48:	cmp    di,ax
6401dd4b:	mov    DWORD PTR [ebp-0xc],ebx
6401dd4e:	mov    DWORD PTR [ebp-0x8],edx
6401dd51:	jg     0x6401dd1c
6401dd53:	cmp    di,ax
6401dd56:	jg     0x6401dda5
6401dd58:	add    edi,0xffff
6401dd5e:	cmp    di,ax
6401dd61:	jge    0x6401dda5
6401dd63:	mov    eax,edi
6401dd65:	neg    eax
6401dd67:	movzx  eax,ax
6401dd6a:	add    edi,eax
6401dd6c:	test   BYTE PTR [ebp-0x10],0x1
6401dd70:	je     0x6401dd75
6401dd72:	inc    DWORD PTR [ebp-0x58]
6401dd75:	mov    edx,DWORD PTR [ebp-0x8]
6401dd78:	mov    ebx,DWORD PTR [ebp-0xc]
6401dd7b:	mov    esi,DWORD PTR [ebp-0xc]
6401dd7e:	shr    DWORD PTR [ebp-0x8],1
6401dd81:	shl    edx,0x1f
6401dd84:	shr    ebx,1
6401dd86:	or     ebx,edx
6401dd88:	mov    edx,DWORD PTR [ebp-0x10]
6401dd8b:	shl    esi,0x1f
6401dd8e:	shr    edx,1
6401dd90:	or     edx,esi
6401dd92:	dec    eax
6401dd93:	mov    DWORD PTR [ebp-0xc],ebx
6401dd96:	mov    DWORD PTR [ebp-0x10],edx
6401dd99:	jne    0x6401dd6c
6401dd9b:	cmp    DWORD PTR [ebp-0x58],eax
6401dd9e:	je     0x6401dda5
6401dda0:	or     WORD PTR [ebp-0x10],0x1
6401dda5:	cmp    WORD PTR [ebp-0x10],0x8000
6401ddab:	ja     0x6401ddbe
6401ddad:	mov    edx,DWORD PTR [ebp-0x10]
6401ddb0:	and    edx,0x1ffff
6401ddb6:	cmp    edx,0x18000
6401ddbc:	jne    0x6401ddef
6401ddbe:	cmp    DWORD PTR [ebp-0xe],0xffffffff
6401ddc2:	jne    0x6401ddec
6401ddc4:	cmp    DWORD PTR [ebp-0xa],0xffffffff
6401ddc8:	mov    DWORD PTR [ebp-0xe],eax
6401ddcb:	jne    0x6401dde7
6401ddcd:	cmp    WORD PTR [ebp-0x6],0xffff
6401ddd3:	mov    DWORD PTR [ebp-0xa],eax
6401ddd6:	jne    0x6401dde1
6401ddd8:	mov    WORD PTR [ebp-0x6],0x8000
6401ddde:	inc    edi
6401dddf:	jmp    0x6401ddef
6401dde1:	inc    WORD PTR [ebp-0x6]
6401dde5:	jmp    0x6401ddef
6401dde7:	inc    DWORD PTR [ebp-0xa]
6401ddea:	jmp    0x6401ddef
6401ddec:	inc    DWORD PTR [ebp-0xe]
6401ddef:	cmp    di,0x7fff
6401ddf4:	jb     0x6401de14
6401ddf6:	neg    cx
6401ddf9:	mov    DWORD PTR [ebp-0x1c],eax
6401ddfc:	mov    DWORD PTR [ebp-0x20],eax
6401ddff:	sbb    ecx,ecx
6401de01:	and    ecx,0x80000000
6401de07:	add    ecx,0x7fff8000
6401de0d:	mov    DWORD PTR [ebp-0x18],ecx
6401de10:	xor    eax,eax
6401de12:	jmp    0x6401de4a
6401de14:	mov    ax,WORD PTR [ebp-0xe]
6401de18:	mov    WORD PTR [ebp-0x20],ax
6401de1c:	mov    eax,DWORD PTR [ebp-0xc]
6401de1f:	mov    DWORD PTR [ebp-0x1e],eax
6401de22:	mov    eax,DWORD PTR [ebp-0x8]
6401de25:	or     edi,ecx
6401de27:	mov    DWORD PTR [ebp-0x1a],eax
6401de2a:	mov    WORD PTR [ebp-0x16],di
6401de2e:	jmp    0x6401de10
6401de30:	neg    cx
6401de33:	sbb    ecx,ecx
6401de35:	and    ecx,0x80000000
6401de3b:	add    ecx,0x7fff8000
6401de41:	mov    DWORD PTR [ebp-0x18],ecx
6401de44:	mov    DWORD PTR [ebp-0x1c],eax
6401de47:	mov    DWORD PTR [ebp-0x20],eax
6401de4a:	test   BYTE PTR [ebp+0x18],0x1
6401de4e:	mov    edx,DWORD PTR [ebp-0x60]
6401de51:	mov    ecx,DWORD PTR [ebp-0x4c]
6401de54:	mov    WORD PTR [edx],cx
6401de57:	je     0x6401de8b
6401de59:	movsx  ecx,cx
6401de5c:	add    DWORD PTR [ebp+0x14],ecx
6401de5f:	cmp    DWORD PTR [ebp+0x14],eax
6401de62:	jg     0x6401de8b
6401de64:	and    WORD PTR [edx],0x0
6401de68:	cmp    WORD PTR [ebp-0x6c],0x8000
6401de6e:	mov    BYTE PTR [edx+0x3],0x1
6401de72:	setne  al
6401de75:	dec    al
6401de77:	and    al,0xd
6401de79:	add    al,0x20
6401de7b:	mov    BYTE PTR [edx+0x2],al
6401de7e:	mov    BYTE PTR [edx+0x4],0x30
6401de82:	mov    BYTE PTR [edx+0x5],0x0
6401de86:	jmp    0x6401d83c
6401de8b:	push   0x15
6401de8d:	pop    ecx
6401de8e:	cmp    DWORD PTR [ebp+0x14],ecx
6401de91:	jle    0x6401de96
6401de93:	mov    DWORD PTR [ebp+0x14],ecx
6401de96:	mov    esi,DWORD PTR [ebp-0x18]
6401de99:	shr    esi,0x10
6401de9c:	push   0x8
6401de9e:	sub    esi,0x3ffe
6401dea4:	mov    WORD PTR [ebp-0x16],ax
6401dea8:	pop    ebx
6401dea9:	mov    eax,DWORD PTR [ebp-0x20]
6401deac:	mov    edi,DWORD PTR [ebp-0x1c]
6401deaf:	mov    ecx,DWORD PTR [ebp-0x1c]
6401deb2:	shl    DWORD PTR [ebp-0x20],1
6401deb5:	shr    eax,0x1f
6401deb8:	add    edi,edi
6401deba:	or     edi,eax
6401debc:	mov    eax,DWORD PTR [ebp-0x18]
6401debf:	shr    ecx,0x1f
6401dec2:	add    eax,eax
6401dec4:	or     eax,ecx
6401dec6:	dec    ebx
6401dec7:	mov    DWORD PTR [ebp-0x1c],edi
6401deca:	mov    DWORD PTR [ebp-0x18],eax
6401decd:	jne    0x6401dea9
6401decf:	test   esi,esi
6401ded1:	jge    0x6401df05
6401ded3:	neg    esi
6401ded5:	and    esi,0xff
6401dedb:	jle    0x6401df05
6401dedd:	mov    eax,DWORD PTR [ebp-0x18]
6401dee0:	mov    edi,DWORD PTR [ebp-0x1c]
6401dee3:	mov    ecx,DWORD PTR [ebp-0x1c]
6401dee6:	shr    DWORD PTR [ebp-0x18],1
6401dee9:	shl    eax,0x1f
6401deec:	shr    edi,1
6401deee:	or     edi,eax
6401def0:	mov    eax,DWORD PTR [ebp-0x20]
6401def3:	shl    ecx,0x1f
6401def6:	shr    eax,1
6401def8:	or     eax,ecx
6401defa:	dec    esi
6401defb:	test   esi,esi
6401defd:	mov    DWORD PTR [ebp-0x1c],edi
6401df00:	mov    DWORD PTR [ebp-0x20],eax
6401df03:	jg     0x6401dedd
6401df05:	mov    eax,DWORD PTR [ebp+0x14]
6401df08:	inc    eax
6401df09:	test   eax,eax
6401df0b:	lea    ebx,[edx+0x4]
6401df0e:	mov    DWORD PTR [ebp-0x40],ebx
6401df11:	mov    DWORD PTR [ebp-0x4c],eax
6401df14:	jle    0x6401dfcf
6401df1a:	mov    edx,DWORD PTR [ebp-0x20]
6401df1d:	mov    eax,DWORD PTR [ebp-0x1c]
6401df20:	lea    esi,[ebp-0x20]
6401df23:	lea    edi,[ebp-0x3c]
6401df26:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
6401df27:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
6401df28:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
6401df29:	shl    DWORD PTR [ebp-0x20],1
6401df2c:	mov    edi,DWORD PTR [ebp-0x20]
6401df2f:	shl    DWORD PTR [ebp-0x20],1
6401df32:	shr    edx,0x1f
6401df35:	lea    ecx,[eax+eax*1]
6401df38:	or     ecx,edx
6401df3a:	mov    edx,DWORD PTR [ebp-0x18]
6401df3d:	mov    esi,eax
6401df3f:	shr    esi,0x1f
6401df42:	add    edx,edx
6401df44:	or     edx,esi
6401df46:	mov    eax,ecx
6401df48:	lea    esi,[ecx+ecx*1]
6401df4b:	shr    eax,0x1f
6401df4e:	lea    ecx,[edx+edx*1]
6401df51:	mov    edx,DWORD PTR [ebp-0x3c]
6401df54:	shr    edi,0x1f
6401df57:	or     ecx,eax
6401df59:	mov    eax,DWORD PTR [ebp-0x20]
6401df5c:	or     esi,edi
6401df5e:	lea    edi,[edx+eax*1]
6401df61:	cmp    edi,eax
6401df63:	jb     0x6401df69
6401df65:	cmp    edi,edx
6401df67:	jae    0x6401df81
6401df69:	lea    eax,[esi+0x1]
6401df6c:	xor    edx,edx
6401df6e:	cmp    eax,esi
6401df70:	jb     0x6401df77
6401df72:	cmp    eax,0x1
6401df75:	jae    0x6401df7a
6401df77:	xor    edx,edx
6401df79:	inc    edx
6401df7a:	test   edx,edx
6401df7c:	mov    esi,eax
6401df7e:	je     0x6401df81
6401df80:	inc    ecx
6401df81:	mov    eax,DWORD PTR [ebp-0x38]
6401df84:	lea    edx,[eax+esi*1]
6401df87:	cmp    edx,esi
6401df89:	mov    DWORD PTR [ebp-0x44],edx
6401df8c:	jb     0x6401df92
6401df8e:	cmp    edx,eax
6401df90:	jae    0x6401df93
6401df92:	inc    ecx
6401df93:	add    ecx,DWORD PTR [ebp-0x34]
6401df96:	shr    edx,0x1f
6401df99:	add    ecx,ecx
6401df9b:	or     ecx,edx
6401df9d:	lea    esi,[edi+edi*1]
6401dfa0:	mov    DWORD PTR [ebp-0x20],esi
6401dfa3:	mov    esi,DWORD PTR [ebp-0x44]
6401dfa6:	mov    DWORD PTR [ebp-0x18],ecx
6401dfa9:	shr    ecx,0x18
6401dfac:	add    esi,esi
6401dfae:	add    cl,0x30
6401dfb1:	mov    eax,edi
6401dfb3:	shr    eax,0x1f
6401dfb6:	or     esi,eax
6401dfb8:	mov    BYTE PTR [ebx],cl
6401dfba:	inc    ebx
6401dfbb:	dec    DWORD PTR [ebp-0x4c]
6401dfbe:	cmp    DWORD PTR [ebp-0x4c],0x0
6401dfc2:	mov    DWORD PTR [ebp-0x1c],esi
6401dfc5:	mov    BYTE PTR [ebp-0x15],0x0
6401dfc9:	jg     0x6401df1a
6401dfcf:	dec    ebx
6401dfd0:	mov    al,BYTE PTR [ebx]
6401dfd2:	dec    ebx
6401dfd3:	cmp    al,0x35
6401dfd5:	jge    0x6401dfe5
6401dfd7:	mov    ecx,DWORD PTR [ebp-0x40]
6401dfda:	jmp    0x6401e020
6401dfdc:	cmp    BYTE PTR [ebx],0x39
6401dfdf:	jne    0x6401dfea
6401dfe1:	mov    BYTE PTR [ebx],0x30
6401dfe4:	dec    ebx
6401dfe5:	cmp    ebx,DWORD PTR [ebp-0x40]
6401dfe8:	jae    0x6401dfdc
6401dfea:	cmp    ebx,DWORD PTR [ebp-0x40]
6401dfed:	mov    eax,DWORD PTR [ebp-0x60]
6401dff0:	jae    0x6401dff6
6401dff2:	inc    ebx
6401dff3:	inc    WORD PTR [eax]
6401dff6:	inc    BYTE PTR [ebx]
6401dff8:	sub    bl,al
6401dffa:	sub    bl,0x3
6401dffd:	movsx  ecx,bl
6401e000:	mov    BYTE PTR [eax+0x3],bl
6401e003:	mov    BYTE PTR [ecx+eax*1+0x4],0x0
6401e008:	mov    eax,DWORD PTR [ebp-0x74]
6401e00b:	mov    ecx,DWORD PTR [ebp-0x4]
6401e00e:	pop    edi
6401e00f:	pop    esi
6401e010:	xor    ecx,ebp
6401e012:	pop    ebx
6401e013:	call   0x6400f34e
6401e018:	leave  
6401e019:	ret    
6401e01a:	cmp    BYTE PTR [ebx],0x30
6401e01d:	jne    0x6401e024
6401e01f:	dec    ebx
6401e020:	cmp    ebx,ecx
6401e022:	jae    0x6401e01a
6401e024:	cmp    ebx,ecx
6401e026:	mov    eax,DWORD PTR [ebp-0x60]
6401e029:	jae    0x6401dff8
6401e02b:	and    WORD PTR [eax],0x0
6401e02f:	cmp    WORD PTR [ebp-0x6c],0x8000
6401e035:	mov    BYTE PTR [eax+0x3],0x1
6401e039:	setne  dl
6401e03c:	dec    dl
6401e03e:	and    dl,0xd
6401e041:	add    dl,0x20
6401e044:	mov    BYTE PTR [eax+0x2],dl
6401e047:	mov    BYTE PTR [ecx],0x30
6401e04a:	mov    BYTE PTR [eax+0x5],0x0
6401e04e:	jmp    0x6401d83c
6401e053:	xor    eax,eax
6401e055:	test   bl,0x10
6401e058:	je     0x6401e05b
6401e05a:	inc    eax
6401e05b:	test   bl,0x8
6401e05e:	je     0x6401e063
6401e060:	or     eax,0x4
6401e063:	test   bl,0x4
6401e066:	je     0x6401e06b
6401e068:	or     eax,0x8
6401e06b:	test   bl,0x2
6401e06e:	je     0x6401e073
6401e070:	or     eax,0x10
6401e073:	test   bl,0x1
6401e076:	je     0x6401e07b
6401e078:	or     eax,0x20
6401e07b:	test   ebx,0x80000
6401e081:	je     0x6401e086
6401e083:	or     eax,0x2
6401e086:	mov    ecx,ebx
6401e088:	mov    edx,0x300
6401e08d:	and    ecx,edx
6401e08f:	push   esi
6401e090:	mov    esi,0x200
6401e095:	je     0x6401e0ba
6401e097:	cmp    ecx,0x100
6401e09d:	je     0x6401e0b5
6401e09f:	cmp    ecx,esi
6401e0a1:	je     0x6401e0ae
6401e0a3:	cmp    ecx,edx
6401e0a5:	jne    0x6401e0ba
6401e0a7:	or     eax,0xc00
6401e0ac:	jmp    0x6401e0ba
6401e0ae:	or     eax,0x800
6401e0b3:	jmp    0x6401e0ba
6401e0b5:	or     eax,0x400
6401e0ba:	mov    ecx,ebx
6401e0bc:	and    ecx,0x30000
6401e0c2:	je     0x6401e0d0
6401e0c4:	cmp    ecx,0x10000
6401e0ca:	jne    0x6401e0d2
6401e0cc:	or     eax,esi
6401e0ce:	jmp    0x6401e0d2
6401e0d0:	or     eax,edx
6401e0d2:	test   ebx,0x40000
6401e0d8:	pop    esi
6401e0d9:	je     0x6401e0e0
6401e0db:	or     eax,0x1000
6401e0e0:	ret    
6401e0e1:	xor    eax,eax
6401e0e3:	test   dl,0x10
6401e0e6:	je     0x6401e0ed
6401e0e8:	mov    eax,0x80
6401e0ed:	test   dl,0x8
6401e0f0:	push   ebx
6401e0f1:	push   esi
6401e0f2:	push   edi
6401e0f3:	mov    ebx,0x200
6401e0f8:	je     0x6401e0fc
6401e0fa:	or     eax,ebx
6401e0fc:	test   dl,0x4
6401e0ff:	je     0x6401e106
6401e101:	or     eax,0x400
6401e106:	test   dl,0x2
6401e109:	je     0x6401e110
6401e10b:	or     eax,0x800
6401e110:	test   dl,0x1
6401e113:	je     0x6401e11a
6401e115:	or     eax,0x1000
6401e11a:	test   edx,0x80000
6401e120:	mov    edi,0x100
6401e125:	je     0x6401e129
6401e127:	or     eax,edi
6401e129:	mov    ecx,edx
6401e12b:	mov    esi,0x300
6401e130:	and    ecx,esi
6401e132:	je     0x6401e153
6401e134:	cmp    ecx,edi
6401e136:	je     0x6401e14e
6401e138:	cmp    ecx,ebx
6401e13a:	je     0x6401e147
6401e13c:	cmp    ecx,esi
6401e13e:	jne    0x6401e153
6401e140:	or     eax,0x6000
6401e145:	jmp    0x6401e153
6401e147:	or     eax,0x4000
6401e14c:	jmp    0x6401e153
6401e14e:	or     eax,0x2000
6401e153:	mov    ecx,0x3000000
6401e158:	pop    edi
6401e159:	and    edx,ecx
6401e15b:	cmp    edx,0x1000000
6401e161:	pop    esi
6401e162:	pop    ebx
6401e163:	je     0x6401e17b
6401e165:	cmp    edx,0x2000000
6401e16b:	je     0x6401e177
6401e16d:	cmp    edx,ecx
6401e16f:	jne    0x6401e180
6401e171:	or     eax,0x8000
6401e176:	ret    
6401e177:	or     eax,0x40
6401e17a:	ret    
6401e17b:	or     eax,0x8040
6401e180:	ret    
6401e181:	sub    esp,0x10
6401e184:	push   ebx
6401e185:	push   ebp
6401e186:	push   esi
6401e187:	push   edi
6401e188:	fstcw  WORD PTR [esp+0x14]
6401e18d:	mov    ebx,DWORD PTR [esp+0x14]
6401e191:	xor    edx,edx
6401e193:	test   bl,0x1
6401e196:	je     0x6401e19b
6401e198:	push   0x10
6401e19a:	pop    edx
6401e19b:	test   bl,0x4
6401e19e:	je     0x6401e1a3
6401e1a0:	or     edx,0x8
6401e1a3:	test   bl,0x8
6401e1a6:	je     0x6401e1ab
6401e1a8:	or     edx,0x4
6401e1ab:	test   bl,0x10
6401e1ae:	je     0x6401e1b3
6401e1b0:	or     edx,0x2
6401e1b3:	test   bl,0x20
6401e1b6:	je     0x6401e1bb
6401e1b8:	or     edx,0x1
6401e1bb:	test   bl,0x2
6401e1be:	je     0x6401e1c6
6401e1c0:	or     edx,0x80000
6401e1c6:	movzx  ecx,bx
6401e1c9:	mov    eax,ecx
6401e1cb:	mov    edi,0xc00
6401e1d0:	and    eax,edi
6401e1d2:	mov    ebp,0x300
6401e1d7:	mov    esi,0x200
6401e1dc:	je     0x6401e1fe
6401e1de:	cmp    eax,0x400
6401e1e3:	je     0x6401e1f8
6401e1e5:	cmp    eax,0x800
6401e1ea:	je     0x6401e1f4
6401e1ec:	cmp    eax,edi
6401e1ee:	jne    0x6401e1fe
6401e1f0:	or     edx,ebp
6401e1f2:	jmp    0x6401e1fe
6401e1f4:	or     edx,esi
6401e1f6:	jmp    0x6401e1fe
6401e1f8:	or     edx,0x100
6401e1fe:	and    ecx,ebp
6401e200:	je     0x6401e20e
6401e202:	cmp    ecx,esi
6401e204:	jne    0x6401e214
6401e206:	or     edx,0x10000
6401e20c:	jmp    0x6401e214
6401e20e:	or     edx,0x20000
6401e214:	test   bx,0x1000
6401e219:	je     0x6401e221
6401e21b:	or     edx,0x40000
6401e221:	mov    esi,DWORD PTR [esp+0x28]
6401e225:	mov    ecx,DWORD PTR [esp+0x24]
6401e229:	mov    eax,esi
6401e22b:	not    eax
6401e22d:	and    eax,edx
6401e22f:	and    ecx,esi
6401e231:	or     eax,ecx
6401e233:	cmp    eax,edx
6401e235:	mov    DWORD PTR [esp+0x1c],eax
6401e239:	je     0x6401e2e9
6401e23f:	mov    ebx,eax
6401e241:	call   0x6401e053
6401e246:	movzx  eax,ax
6401e249:	mov    DWORD PTR [esp+0x10],eax
6401e24d:	fldcw  WORD PTR [esp+0x10]
6401e251:	fstcw  WORD PTR [esp+0x10]
6401e256:	mov    ebx,DWORD PTR [esp+0x10]
6401e25a:	xor    edx,edx
6401e25c:	test   bl,0x1
6401e25f:	je     0x6401e264
6401e261:	push   0x10
6401e263:	pop    edx
6401e264:	test   bl,0x4
6401e267:	je     0x6401e26c
6401e269:	or     edx,0x8
6401e26c:	test   bl,0x8
6401e26f:	je     0x6401e274
6401e271:	or     edx,0x4
6401e274:	test   bl,0x10
6401e277:	je     0x6401e27c
6401e279:	or     edx,0x2
6401e27c:	test   bl,0x20
6401e27f:	je     0x6401e284
6401e281:	or     edx,0x1
6401e284:	test   bl,0x2
6401e287:	je     0x6401e28f
6401e289:	or     edx,0x80000
6401e28f:	movzx  ecx,bx
6401e292:	mov    eax,ecx
6401e294:	and    eax,edi
6401e296:	je     0x6401e2bc
6401e298:	cmp    eax,0x400
6401e29d:	je     0x6401e2b6
6401e29f:	cmp    eax,0x800
6401e2a4:	je     0x6401e2ae
6401e2a6:	cmp    eax,edi
6401e2a8:	jne    0x6401e2bc
6401e2aa:	or     edx,ebp
6401e2ac:	jmp    0x6401e2bc
6401e2ae:	or     edx,0x200
6401e2b4:	jmp    0x6401e2bc
6401e2b6:	or     edx,0x100
6401e2bc:	and    ecx,ebp
6401e2be:	je     0x6401e2d0
6401e2c0:	cmp    ecx,0x200
6401e2c6:	jne    0x6401e2d6
6401e2c8:	or     edx,0x10000
6401e2ce:	jmp    0x6401e2d6
6401e2d0:	or     edx,0x20000
6401e2d6:	test   bx,0x1000
6401e2db:	je     0x6401e2e3
6401e2dd:	or     edx,0x40000
6401e2e3:	mov    eax,edx
6401e2e5:	mov    DWORD PTR [esp+0x1c],edx
6401e2e9:	cmp    DWORD PTR ds:0x6402d584,0x0
6401e2f0:	je     0x6401e47c
6401e2f6:	and    esi,0x308031f
6401e2fc:	mov    edi,esi
6401e2fe:	stmxcsr DWORD PTR [esp+0x18]
6401e303:	mov    eax,DWORD PTR [esp+0x18]
6401e307:	xor    esi,esi
6401e309:	test   al,al
6401e30b:	jns    0x6401e310
6401e30d:	push   0x10
6401e30f:	pop    esi
6401e310:	test   ax,0x200
6401e314:	je     0x6401e319
6401e316:	or     esi,0x8
6401e319:	test   ax,0x400
6401e31d:	je     0x6401e322
6401e31f:	or     esi,0x4
6401e322:	test   ax,0x800
6401e326:	je     0x6401e32b
6401e328:	or     esi,0x2
6401e32b:	test   ax,0x1000
6401e32f:	je     0x6401e334
6401e331:	or     esi,0x1
6401e334:	test   ax,0x100
6401e338:	je     0x6401e340
6401e33a:	or     esi,0x80000
6401e340:	mov    ecx,eax
6401e342:	mov    ebp,0x6000
6401e347:	and    ecx,ebp
6401e349:	je     0x6401e375
6401e34b:	cmp    ecx,0x2000
6401e351:	je     0x6401e36f
6401e353:	cmp    ecx,0x4000
6401e359:	je     0x6401e367
6401e35b:	cmp    ecx,ebp
6401e35d:	jne    0x6401e375
6401e35f:	or     esi,0x300
6401e365:	jmp    0x6401e375
6401e367:	or     esi,0x200
6401e36d:	jmp    0x6401e375
6401e36f:	or     esi,0x100
6401e375:	mov    ebx,0x8040
6401e37a:	and    eax,ebx
6401e37c:	sub    eax,0x40
6401e37f:	je     0x6401e39d
6401e381:	sub    eax,0x7fc0
6401e386:	je     0x6401e395
6401e388:	sub    eax,0x40
6401e38b:	jne    0x6401e3a3
6401e38d:	or     esi,0x1000000
6401e393:	jmp    0x6401e3a3
6401e395:	or     esi,0x3000000
6401e39b:	jmp    0x6401e3a3
6401e39d:	or     esi,0x2000000
6401e3a3:	mov    edx,edi
6401e3a5:	and    edi,DWORD PTR [esp+0x24]
6401e3a9:	not    edx
6401e3ab:	and    edx,esi
6401e3ad:	or     edx,edi
6401e3af:	cmp    edx,esi
6401e3b1:	jne    0x6401e3ba
6401e3b3:	mov    eax,esi
6401e3b5:	jmp    0x6401e465
6401e3ba:	call   0x6401e0e1
6401e3bf:	push   eax
6401e3c0:	mov    DWORD PTR [esp+0x2c],eax
6401e3c4:	call   0x6401e650
6401e3c9:	pop    ecx
6401e3ca:	stmxcsr DWORD PTR [esp+0x28]
6401e3cf:	mov    eax,DWORD PTR [esp+0x28]
6401e3d3:	xor    edx,edx
6401e3d5:	test   al,al
6401e3d7:	jns    0x6401e3dc
6401e3d9:	push   0x10
6401e3db:	pop    edx
6401e3dc:	mov    edi,0x200
6401e3e1:	test   edi,eax
6401e3e3:	je     0x6401e3e8
6401e3e5:	or     edx,0x8
6401e3e8:	test   ax,0x400
6401e3ec:	je     0x6401e3f1
6401e3ee:	or     edx,0x4
6401e3f1:	test   ax,0x800
6401e3f5:	je     0x6401e3fa
6401e3f7:	or     edx,0x2
6401e3fa:	test   ax,0x1000
6401e3fe:	je     0x6401e403
6401e400:	or     edx,0x1
6401e403:	mov    esi,0x100
6401e408:	test   esi,eax
6401e40a:	je     0x6401e412
6401e40c:	or     edx,0x80000
6401e412:	mov    ecx,eax
6401e414:	and    ecx,ebp
6401e416:	je     0x6401e43a
6401e418:	cmp    ecx,0x2000
6401e41e:	je     0x6401e438
6401e420:	cmp    ecx,0x4000
6401e426:	je     0x6401e434
6401e428:	cmp    ecx,ebp
6401e42a:	jne    0x6401e43a
6401e42c:	or     edx,0x300
6401e432:	jmp    0x6401e43a
6401e434:	or     edx,edi
6401e436:	jmp    0x6401e43a
6401e438:	or     edx,esi
6401e43a:	and    eax,ebx
6401e43c:	sub    eax,0x40
6401e43f:	je     0x6401e45d
6401e441:	sub    eax,0x7fc0
6401e446:	je     0x6401e455
6401e448:	sub    eax,0x40
6401e44b:	jne    0x6401e463
6401e44d:	or     edx,0x1000000
6401e453:	jmp    0x6401e463
6401e455:	or     edx,0x3000000
6401e45b:	jmp    0x6401e463
6401e45d:	or     edx,0x2000000
6401e463:	mov    eax,edx
6401e465:	mov    ecx,DWORD PTR [esp+0x1c]
6401e469:	mov    edx,eax
6401e46b:	xor    edx,ecx
6401e46d:	or     eax,ecx
6401e46f:	test   edx,0x8031f
6401e475:	je     0x6401e47c
6401e477:	or     eax,0x80000000
6401e47c:	pop    edi
6401e47d:	pop    esi
6401e47e:	pop    ebp
6401e47f:	pop    ebx
6401e480:	add    esp,0x10
6401e483:	ret    
6401e484:	push   ebp
6401e485:	mov    ebp,esp
6401e487:	sub    esp,0x18
6401e48a:	mov    eax,ds:0x64028038
6401e48f:	xor    eax,ebp
6401e491:	mov    DWORD PTR [ebp-0x4],eax
6401e494:	mov    eax,DWORD PTR [ebp+0x10]
6401e497:	push   ebx
6401e498:	push   esi
6401e499:	xor    esi,esi
6401e49b:	cmp    DWORD PTR [ebp+0xc],esi
6401e49e:	push   edi
6401e49f:	mov    DWORD PTR [ebp-0x18],0x404e
6401e4a6:	mov    DWORD PTR [eax],esi
6401e4a8:	mov    DWORD PTR [eax+0x4],esi
6401e4ab:	mov    DWORD PTR [eax+0x8],esi
6401e4ae:	jbe    0x6401e5fa
6401e4b4:	mov    edx,DWORD PTR [eax]
6401e4b6:	mov    ebx,DWORD PTR [eax+0x4]
6401e4b9:	mov    esi,eax
6401e4bb:	lea    edi,[ebp-0x10]
6401e4be:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
6401e4bf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
6401e4c0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
6401e4c1:	mov    ecx,edx
6401e4c3:	shr    ecx,0x1f
6401e4c6:	lea    edi,[edx+edx*1]
6401e4c9:	lea    edx,[ebx+ebx*1]
6401e4cc:	or     edx,ecx
6401e4ce:	mov    ecx,DWORD PTR [eax+0x8]
6401e4d1:	mov    esi,ebx
6401e4d3:	shr    esi,0x1f
6401e4d6:	add    ecx,ecx
6401e4d8:	or     ecx,esi
6401e4da:	mov    DWORD PTR [ebp-0x14],edi
6401e4dd:	mov    esi,edi
6401e4df:	and    DWORD PTR [ebp-0x14],0x0
6401e4e3:	mov    ebx,edx
6401e4e5:	shr    ebx,0x1f
6401e4e8:	add    ecx,ecx
6401e4ea:	shr    edi,0x1f
6401e4ed:	or     ecx,ebx
6401e4ef:	mov    ebx,DWORD PTR [ebp-0x10]
6401e4f2:	add    esi,esi
6401e4f4:	add    edx,edx
6401e4f6:	or     edx,edi
6401e4f8:	lea    edi,[esi+ebx*1]
6401e4fb:	cmp    edi,esi
6401e4fd:	mov    DWORD PTR [eax],esi
6401e4ff:	mov    DWORD PTR [eax+0x4],edx
6401e502:	mov    DWORD PTR [eax+0x8],ecx
6401e505:	jb     0x6401e50b
6401e507:	cmp    edi,ebx
6401e509:	jae    0x6401e512
6401e50b:	mov    DWORD PTR [ebp-0x14],0x1
6401e512:	xor    ebx,ebx
6401e514:	cmp    DWORD PTR [ebp-0x14],ebx
6401e517:	mov    DWORD PTR [eax],edi
6401e519:	je     0x6401e535
6401e51b:	lea    esi,[edx+0x1]
6401e51e:	cmp    esi,edx
6401e520:	jb     0x6401e527
6401e522:	cmp    esi,0x1
6401e525:	jae    0x6401e52a
6401e527:	xor    ebx,ebx
6401e529:	inc    ebx
6401e52a:	test   ebx,ebx
6401e52c:	mov    DWORD PTR [eax+0x4],esi
6401e52f:	je     0x6401e535
6401e531:	inc    ecx
6401e532:	mov    DWORD PTR [eax+0x8],ecx
6401e535:	mov    ecx,DWORD PTR [eax+0x4]
6401e538:	mov    edx,DWORD PTR [ebp-0xc]
6401e53b:	lea    ebx,[ecx+edx*1]
6401e53e:	xor    esi,esi
6401e540:	cmp    ebx,ecx
6401e542:	jb     0x6401e548
6401e544:	cmp    ebx,edx
6401e546:	jae    0x6401e54b
6401e548:	xor    esi,esi
6401e54a:	inc    esi
6401e54b:	test   esi,esi
6401e54d:	mov    DWORD PTR [eax+0x4],ebx
6401e550:	je     0x6401e555
6401e552:	inc    DWORD PTR [eax+0x8]
6401e555:	mov    ecx,DWORD PTR [ebp-0x8]
6401e558:	add    DWORD PTR [eax+0x8],ecx
6401e55b:	and    DWORD PTR [ebp-0x14],0x0
6401e55f:	lea    ecx,[edi+edi*1]
6401e562:	mov    edx,edi
6401e564:	shr    edx,0x1f
6401e567:	lea    edi,[ebx+ebx*1]
6401e56a:	or     edi,edx
6401e56c:	mov    edx,DWORD PTR [eax+0x8]
6401e56f:	mov    esi,ebx
6401e571:	shr    esi,0x1f
6401e574:	lea    ebx,[edx+edx*1]
6401e577:	mov    edx,DWORD PTR [ebp+0x8]
6401e57a:	or     ebx,esi
6401e57c:	mov    DWORD PTR [eax],ecx
6401e57e:	mov    DWORD PTR [eax+0x4],edi
6401e581:	mov    DWORD PTR [eax+0x8],ebx
6401e584:	movsx  edx,BYTE PTR [edx]
6401e587:	lea    esi,[ecx+edx*1]
6401e58a:	cmp    esi,ecx
6401e58c:	mov    DWORD PTR [ebp-0x10],edx
6401e58f:	jb     0x6401e595
6401e591:	cmp    esi,edx
6401e593:	jae    0x6401e59c
6401e595:	mov    DWORD PTR [ebp-0x14],0x1
6401e59c:	cmp    DWORD PTR [ebp-0x14],0x0
6401e5a0:	mov    DWORD PTR [eax],esi
6401e5a2:	je     0x6401e5c0
6401e5a4:	lea    ecx,[edi+0x1]
6401e5a7:	xor    edx,edx
6401e5a9:	cmp    ecx,edi
6401e5ab:	jb     0x6401e5b2
6401e5ad:	cmp    ecx,0x1
6401e5b0:	jae    0x6401e5b5
6401e5b2:	xor    edx,edx
6401e5b4:	inc    edx
6401e5b5:	test   edx,edx
6401e5b7:	mov    DWORD PTR [eax+0x4],ecx
6401e5ba:	je     0x6401e5c0
6401e5bc:	inc    ebx
6401e5bd:	mov    DWORD PTR [eax+0x8],ebx
6401e5c0:	dec    DWORD PTR [ebp+0xc]
6401e5c3:	inc    DWORD PTR [ebp+0x8]
6401e5c6:	cmp    DWORD PTR [ebp+0xc],0x0
6401e5ca:	ja     0x6401e4b4
6401e5d0:	xor    esi,esi
6401e5d2:	jmp    0x6401e5fa
6401e5d4:	mov    ecx,DWORD PTR [eax+0x4]
6401e5d7:	mov    edx,ecx
6401e5d9:	shr    edx,0x10
6401e5dc:	mov    DWORD PTR [eax+0x8],edx
6401e5df:	mov    edx,DWORD PTR [eax]
6401e5e1:	mov    edi,edx
6401e5e3:	shl    ecx,0x10
6401e5e6:	shr    edi,0x10
6401e5e9:	or     ecx,edi
6401e5eb:	shl    edx,0x10
6401e5ee:	add    DWORD PTR [ebp-0x18],0xfff0
6401e5f5:	mov    DWORD PTR [eax+0x4],ecx
6401e5f8:	mov    DWORD PTR [eax],edx
6401e5fa:	cmp    DWORD PTR [eax+0x8],esi
6401e5fd:	je     0x6401e5d4
6401e5ff:	mov    ebx,0x8000
6401e604:	test   DWORD PTR [eax+0x8],ebx
6401e607:	jne    0x6401e639
6401e609:	mov    esi,DWORD PTR [eax]
6401e60b:	mov    edi,DWORD PTR [eax+0x4]
6401e60e:	add    DWORD PTR [ebp-0x18],0xffff
6401e615:	mov    ecx,esi
6401e617:	add    esi,esi
6401e619:	shr    ecx,0x1f
6401e61c:	mov    DWORD PTR [eax],esi
6401e61e:	lea    esi,[edi+edi*1]
6401e621:	or     esi,ecx
6401e623:	mov    ecx,DWORD PTR [eax+0x8]
6401e626:	mov    edx,edi
6401e628:	shr    edx,0x1f
6401e62b:	add    ecx,ecx
6401e62d:	or     ecx,edx
6401e62f:	test   ebx,ecx
6401e631:	mov    DWORD PTR [eax+0x4],esi
6401e634:	mov    DWORD PTR [eax+0x8],ecx
6401e637:	je     0x6401e609
6401e639:	mov    cx,WORD PTR [ebp-0x18]
6401e63d:	mov    WORD PTR [eax+0xa],cx
6401e641:	mov    ecx,DWORD PTR [ebp-0x4]
6401e644:	pop    edi
6401e645:	pop    esi
6401e646:	xor    ecx,ebp
6401e648:	pop    ebx
6401e649:	call   0x6400f34e
6401e64e:	leave  
6401e64f:	ret    
6401e650:	push   0x8
6401e652:	push   0x64025d48
6401e657:	call   0x640106f8
6401e65c:	xor    eax,eax
6401e65e:	cmp    DWORD PTR ds:0x6402d584,eax
6401e664:	je     0x6401e6bc
6401e666:	test   BYTE PTR [ebp+0x8],0x40
6401e66a:	je     0x6401e6b4
6401e66c:	cmp    DWORD PTR ds:0x64029304,eax
6401e672:	je     0x6401e6b4
6401e674:	mov    DWORD PTR [ebp-0x4],eax
6401e677:	ldmxcsr DWORD PTR [ebp+0x8]
6401e67b:	jmp    0x6401e6ab
6401e67d:	mov    eax,DWORD PTR [ebp-0x14]
6401e680:	mov    eax,DWORD PTR [eax]
6401e682:	mov    eax,DWORD PTR [eax]
6401e684:	cmp    eax,0xc0000005
6401e689:	je     0x6401e695
6401e68b:	cmp    eax,0xc000001d
6401e690:	je     0x6401e695
6401e692:	xor    eax,eax
6401e694:	ret    
6401e695:	xor    eax,eax
6401e697:	inc    eax
6401e698:	ret    
6401e699:	mov    esp,DWORD PTR [ebp-0x18]
6401e69c:	and    DWORD PTR ds:0x64029304,0x0
6401e6a3:	and    DWORD PTR [ebp+0x8],0xffffffbf
6401e6a7:	ldmxcsr DWORD PTR [ebp+0x8]
6401e6ab:	mov    DWORD PTR [ebp-0x4],0xfffffffe
6401e6b2:	jmp    0x6401e6bc
6401e6b4:	and    DWORD PTR [ebp+0x8],0xffffffbf
6401e6b8:	ldmxcsr DWORD PTR [ebp+0x8]
6401e6bc:	call   0x6401073d
6401e6c1:	ret    
6401e6c2:	int3   
6401e6c3:	int3   
6401e6c4:	int3   
6401e6c5:	int3   
6401e6c6:	int3   
6401e6c7:	int3   
6401e6c8:	int3   
6401e6c9:	int3   
6401e6ca:	int3   
6401e6cb:	int3   
6401e6cc:	int3   
6401e6cd:	int3   
6401e6ce:	int3   
6401e6cf:	int3   
6401e6d0:	mov    eax,DWORD PTR [ebp-0x10]
6401e6d3:	and    eax,0x1
6401e6d6:	je     0x6401e6e8
6401e6dc:	and    DWORD PTR [ebp-0x10],0xfffffffe
6401e6e0:	mov    ecx,DWORD PTR [ebp+0x4]
6401e6e3:	jmp    0x64001ab0
6401e6e8:	ret    
6401e6e9:	mov    edx,DWORD PTR [esp+0x8]
6401e6ed:	lea    eax,[edx-0xc]
6401e6f0:	mov    ecx,DWORD PTR [edx-0x10]
6401e6f3:	xor    ecx,eax
6401e6f5:	call   0x6400f34e
6401e6fa:	mov    eax,0x64025430
6401e6ff:	jmp    0x6400f010
6401e704:	int3   
6401e705:	int3   
6401e706:	int3   
6401e707:	int3   
6401e708:	int3   
6401e709:	int3   
6401e70a:	int3   
6401e70b:	int3   
6401e70c:	int3   
6401e70d:	int3   
6401e70e:	int3   
6401e70f:	int3   
6401e710:	mov    eax,DWORD PTR [ebp-0x10]
6401e713:	and    eax,0x1
6401e716:	je     0x6401e728
6401e71c:	and    DWORD PTR [ebp-0x10],0xfffffffe
6401e720:	mov    ecx,DWORD PTR [ebp+0x4]
6401e723:	jmp    0x64001ab0
6401e728:	ret    
6401e729:	mov    edx,DWORD PTR [esp+0x8]
6401e72d:	lea    eax,[edx-0x10]
6401e730:	mov    ecx,DWORD PTR [edx-0x14]
6401e733:	xor    ecx,eax
6401e735:	call   0x6400f34e
6401e73a:	mov    eax,0x6402545c
6401e73f:	jmp    0x6400f010
6401e744:	int3   
6401e745:	int3   
6401e746:	int3   
6401e747:	int3   
6401e748:	int3   
6401e749:	int3   
6401e74a:	int3   
6401e74b:	int3   
6401e74c:	int3   
6401e74d:	int3   
6401e74e:	int3   
6401e74f:	int3   
6401e750:	lea    ecx,[ebp-0x50]
6401e753:	jmp    0x640019a0
6401e758:	mov    edx,DWORD PTR [esp+0x8]
6401e75c:	lea    eax,[edx-0x44]
6401e75f:	mov    ecx,DWORD PTR [edx-0x48]
6401e762:	xor    ecx,eax
6401e764:	call   0x6400f34e
6401e769:	mov    eax,0x64025488
6401e76e:	jmp    0x6400f010
6401e773:	int3   
6401e774:	int3   
6401e775:	int3   
6401e776:	int3   
6401e777:	int3   
6401e778:	int3   
6401e779:	int3   
6401e77a:	int3   
6401e77b:	int3   
6401e77c:	int3   
6401e77d:	int3   
6401e77e:	int3   
6401e77f:	int3   
6401e780:	lea    ecx,[ebp-0x20]
6401e783:	jmp    0x64001ab0
6401e788:	lea    ecx,[ebp-0x1c]
6401e78b:	jmp    0x64001ab0
6401e790:	lea    ecx,[ebp-0x18]
6401e793:	jmp    0x64001ab0
6401e798:	lea    ecx,[ebp-0x24]
6401e79b:	jmp    0x64001ab0
6401e7a0:	lea    ecx,[ebp-0x2c]
6401e7a3:	jmp    0x64001ab0
6401e7a8:	lea    ecx,[ebp-0x28]
6401e7ab:	jmp    0x64001ab0
6401e7b0:	mov    edx,DWORD PTR [esp+0x8]
6401e7b4:	lea    eax,[edx+0xc]
6401e7b7:	mov    ecx,DWORD PTR [edx-0x88]
6401e7bd:	xor    ecx,eax
6401e7bf:	call   0x6400f34e
6401e7c4:	mov    ecx,DWORD PTR [edx-0x8]
6401e7c7:	xor    ecx,eax
6401e7c9:	call   0x6400f34e
6401e7ce:	mov    eax,0x640254d0
6401e7d3:	jmp    0x6400f010
6401e7d8:	int3   
6401e7d9:	int3   
6401e7da:	int3   
6401e7db:	int3   
6401e7dc:	int3   
6401e7dd:	int3   
6401e7de:	int3   
6401e7df:	int3   
6401e7e0:	mov    eax,ds:0x64029468
6401e7e5:	and    eax,0xfffffffe
6401e7e8:	mov    ds:0x64029468,eax
6401e7ed:	ret    
6401e7ee:	mov    edx,DWORD PTR [esp+0x8]
6401e7f2:	lea    eax,[edx-0x10]
6401e7f5:	mov    ecx,DWORD PTR [edx-0x14]
6401e7f8:	xor    ecx,eax
6401e7fa:	call   0x6400f34e
6401e7ff:	mov    eax,0x64025544
6401e804:	jmp    0x6400f010
6401e809:	int3   
6401e80a:	int3   
6401e80b:	int3   
6401e80c:	int3   
6401e80d:	int3   
6401e80e:	int3   
6401e80f:	int3   
6401e810:	lea    ecx,[ebp-0x14]
6401e813:	jmp    0x640069c0
6401e818:	mov    edx,DWORD PTR [esp+0x8]
6401e81c:	lea    eax,[edx+0xc]
6401e81f:	mov    ecx,DWORD PTR [edx-0x18]
6401e822:	xor    ecx,eax
6401e824:	call   0x6400f34e
6401e829:	mov    eax,0x640255a4
6401e82e:	jmp    0x6400f010
6401e833:	int3   
6401e834:	int3   
6401e835:	int3   
6401e836:	int3   
6401e837:	int3   
6401e838:	int3   
6401e839:	int3   
6401e83a:	int3   
6401e83b:	int3   
6401e83c:	int3   
6401e83d:	int3   
6401e83e:	int3   
6401e83f:	int3   
6401e840:	lea    ecx,[ebp-0x10]
6401e843:	jmp    0x64001ab0
6401e848:	mov    edx,DWORD PTR [esp+0x8]
6401e84c:	lea    eax,[edx-0x8]
6401e84f:	mov    ecx,DWORD PTR [edx-0xc]
6401e852:	xor    ecx,eax
6401e854:	call   0x6400f34e
6401e859:	mov    eax,0x640255d0
6401e85e:	jmp    0x6400f010
6401e863:	int3   
6401e864:	int3   
6401e865:	int3   
6401e866:	int3   
6401e867:	int3   
6401e868:	int3   
6401e869:	int3   
6401e86a:	int3   
6401e86b:	int3   
6401e86c:	int3   
6401e86d:	int3   
6401e86e:	int3   
6401e86f:	int3   
6401e870:	lea    ecx,[ebp-0x10]
6401e873:	jmp    0x640019d0
6401e878:	lea    ecx,[ebp-0x14]
6401e87b:	jmp    0x64001ab0
6401e880:	mov    edx,DWORD PTR [esp+0x8]
6401e884:	lea    eax,[edx-0x14]
6401e887:	mov    ecx,DWORD PTR [edx-0x18]
6401e88a:	xor    ecx,eax
6401e88c:	call   0x6400f34e
6401e891:	mov    eax,0x64025604
6401e896:	jmp    0x6400f010
6401e89b:	int3   
6401e89c:	int3   
6401e89d:	int3   
6401e89e:	int3   
6401e89f:	int3   
6401e8a0:	mov    eax,DWORD PTR [ebp-0x50]
6401e8a3:	and    eax,0x1
6401e8a6:	je     0x6401e8b8
6401e8ac:	and    DWORD PTR [ebp-0x50],0xfffffffe
6401e8b0:	mov    ecx,DWORD PTR [ebp-0x58]
6401e8b3:	jmp    0x64001ab0
6401e8b8:	ret    
6401e8b9:	lea    ecx,[ebp-0x4c]
6401e8bc:	jmp    0x64001ab0
6401e8c1:	lea    ecx,[ebp-0x54]
6401e8c4:	jmp    0x64001ab0
6401e8c9:	lea    ecx,[ebp-0x10]
6401e8cc:	jmp    0x64001ab0
6401e8d1:	lea    ecx,[ebp-0x10]
6401e8d4:	jmp    0x64001ab0
6401e8d9:	lea    ecx,[ebp-0x20]
6401e8dc:	jmp    0x64001ab0
6401e8e1:	lea    ecx,[ebp-0x48]
6401e8e4:	jmp    0x64001ab0
6401e8e9:	lea    ecx,[ebp-0x2c]
6401e8ec:	jmp    0x64001ab0
6401e8f1:	lea    ecx,[ebp-0x14]
6401e8f4:	jmp    0x64001ab0
6401e8f9:	lea    ecx,[ebp-0x18]
6401e8fc:	jmp    0x64001ab0
6401e901:	lea    ecx,[ebp-0x10]
6401e904:	jmp    0x64001ab0
6401e909:	lea    ecx,[ebp-0x10]
6401e90c:	jmp    0x64001ab0
6401e911:	lea    ecx,[ebp-0x18]
6401e914:	jmp    0x64001ab0
6401e919:	lea    ecx,[ebp-0x14]
6401e91c:	jmp    0x64001ab0
6401e921:	lea    ecx,[ebp-0x10]
6401e924:	jmp    0x64001ab0
6401e929:	lea    ecx,[ebp-0x3c]
6401e92c:	jmp    0x6400d270
6401e931:	lea    ecx,[ebp-0x14]
6401e934:	jmp    0x64001ab0
6401e939:	lea    ecx,[ebp-0x10]
6401e93c:	jmp    0x64001ab0
6401e941:	lea    ecx,[ebp-0x1c]
6401e944:	jmp    0x64001ab0
6401e949:	lea    ecx,[ebp-0x10]
6401e94c:	jmp    0x64001ab0
6401e951:	lea    ecx,[ebp-0x18]
6401e954:	jmp    0x64001ab0
6401e959:	lea    ecx,[ebp-0x14]
6401e95c:	jmp    0x64001ab0
6401e961:	lea    ecx,[ebp-0x10]
6401e964:	jmp    0x64001ab0
6401e969:	lea    ecx,[ebp-0x28]
6401e96c:	jmp    0x64001ab0
6401e971:	lea    ecx,[ebp-0x24]
6401e974:	jmp    0x64001ab0
6401e979:	lea    ecx,[ebp-0x18]
6401e97c:	jmp    0x64001ab0
6401e981:	lea    ecx,[ebp-0x10]
6401e984:	jmp    0x64001ab0
6401e989:	lea    ecx,[ebp-0x24]
6401e98c:	jmp    0x64001ab0
6401e991:	lea    ecx,[ebp-0x28]
6401e994:	jmp    0x64001ab0
6401e999:	mov    edx,DWORD PTR [esp+0x8]
6401e99d:	lea    eax,[edx+0xc]
6401e9a0:	mov    ecx,DWORD PTR [edx-0xa0]
6401e9a6:	xor    ecx,eax
6401e9a8:	call   0x6400f34e
6401e9ad:	mov    ecx,DWORD PTR [edx+0x130]
6401e9b3:	xor    ecx,eax
6401e9b5:	call   0x6400f34e
6401e9ba:	mov    eax,0x64025628
6401e9bf:	jmp    0x6400f010
6401e9c4:	int3   
6401e9c5:	int3   
6401e9c6:	int3   
6401e9c7:	int3   
6401e9c8:	int3   
6401e9c9:	int3   
6401e9ca:	int3   
6401e9cb:	int3   
6401e9cc:	int3   
6401e9cd:	int3   
6401e9ce:	int3   
6401e9cf:	int3   
6401e9d0:	lea    ecx,[ebp-0x30]
6401e9d3:	jmp    0x64001ab0
6401e9d8:	lea    ecx,[ebp-0x2c]
6401e9db:	jmp    0x640019a0
6401e9e0:	lea    ecx,[ebp-0x5c]
6401e9e3:	jmp    0x640019a0
6401e9e8:	mov    edx,DWORD PTR [esp+0x8]
6401e9ec:	lea    eax,[edx+0xc]
6401e9ef:	mov    ecx,DWORD PTR [edx-0x60]
6401e9f2:	xor    ecx,eax
6401e9f4:	call   0x6400f34e
6401e9f9:	mov    ecx,DWORD PTR [edx-0x4]
6401e9fc:	xor    ecx,eax
6401e9fe:	call   0x6400f34e
6401ea03:	mov    eax,0x6402574c
6401ea08:	jmp    0x6400f010
6401ea0d:	lea    ecx,[ebp-0x28]
6401ea10:	jmp    0x640019a0
6401ea15:	mov    edx,DWORD PTR [esp+0x8]
6401ea19:	lea    eax,[edx+0xc]
6401ea1c:	mov    ecx,DWORD PTR [edx-0x54]
6401ea1f:	xor    ecx,eax
6401ea21:	call   0x6400f34e
6401ea26:	mov    eax,0x64025794
6401ea2b:	jmp    0x6400f010
6401ea30:	lea    ecx,[ebp-0x28]
6401ea33:	jmp    0x640019a0
6401ea38:	mov    edx,DWORD PTR [esp+0x8]
6401ea3c:	lea    eax,[edx+0xc]
6401ea3f:	mov    ecx,DWORD PTR [edx-0x54]
6401ea42:	xor    ecx,eax
6401ea44:	call   0x6400f34e
6401ea49:	mov    eax,0x640257c0
6401ea4e:	jmp    0x6400f010
6401ea53:	mov    edx,DWORD PTR [esp+0x8]
6401ea57:	lea    eax,[edx+0xc]
6401ea5a:	mov    ecx,DWORD PTR [edx-0x14]
6401ea5d:	xor    ecx,eax
6401ea5f:	call   0x6400f34e
6401ea64:	mov    eax,0x64025968
6401ea69:	jmp    0x6400f010
6401ea6e:	int3   
6401ea6f:	int3   
6401ea70:	mov    eax,DWORD PTR [ebp+0x4]
6401ea73:	push   eax
6401ea74:	call   0x6400eb52
6401ea79:	pop    ecx
6401ea7a:	ret    
6401ea7b:	mov    edx,DWORD PTR [esp+0x8]
6401ea7f:	lea    eax,[edx-0x8]
6401ea82:	mov    ecx,DWORD PTR [edx-0xc]
6401ea85:	xor    ecx,eax
6401ea87:	call   0x6400f34e
6401ea8c:	mov    eax,0x64025ec0
6401ea91:	jmp    0x6400f010
6401ea96:	int3   
6401ea97:	int3   
6401ea98:	int3   
6401ea99:	int3   
6401ea9a:	int3   
6401ea9b:	int3   
6401ea9c:	int3   
6401ea9d:	int3   
6401ea9e:	int3   
6401ea9f:	int3   
6401eaa0:	mov    eax,DWORD PTR [ebp+0x4]
6401eaa3:	push   eax
6401eaa4:	call   0x6400eb52
6401eaa9:	pop    ecx
6401eaaa:	ret    
6401eaab:	mov    edx,DWORD PTR [esp+0x8]
6401eaaf:	lea    eax,[edx-0x8]
6401eab2:	mov    ecx,DWORD PTR [edx-0xc]
6401eab5:	xor    ecx,eax
6401eab7:	call   0x6400f34e
6401eabc:	mov    eax,0x64025eec
6401eac1:	jmp    0x6400f010
6401eac6:	int3   
6401eac7:	int3   
6401eac8:	int3   
6401eac9:	int3   
6401eaca:	int3   
6401eacb:	int3   
6401eacc:	int3   
6401eacd:	int3   
6401eace:	int3   
6401eacf:	int3   
6401ead0:	mov    eax,DWORD PTR [ebp-0x10]
6401ead3:	push   eax
6401ead4:	call   0x6400eb52
6401ead9:	pop    ecx
6401eada:	ret    
6401eadb:	mov    edx,DWORD PTR [esp+0x8]
6401eadf:	lea    eax,[edx-0x8]
6401eae2:	mov    ecx,DWORD PTR [edx-0xc]
6401eae5:	xor    ecx,eax
6401eae7:	call   0x6400f34e
6401eaec:	mov    eax,0x64025f18
6401eaf1:	jmp    0x6400f010
6401eaf6:	int3   
6401eaf7:	int3   
6401eaf8:	int3   
6401eaf9:	int3   
6401eafa:	int3   
6401eafb:	int3   
6401eafc:	int3   
6401eafd:	int3   
6401eafe:	int3   
6401eaff:	int3   
6401eb00:	mov    eax,DWORD PTR [ebp-0x10]
6401eb03:	push   eax
6401eb04:	call   0x6400eb52
6401eb09:	pop    ecx
6401eb0a:	ret    
6401eb0b:	mov    edx,DWORD PTR [esp+0x8]
6401eb0f:	lea    eax,[edx-0xc]
6401eb12:	mov    ecx,DWORD PTR [edx-0x10]
6401eb15:	xor    ecx,eax
6401eb17:	call   0x6400f34e
6401eb1c:	mov    eax,0x64025f44
6401eb21:	jmp    0x6400f010
6401eb26:	int3   
6401eb27:	int3   
6401eb28:	int3   
6401eb29:	int3   
6401eb2a:	int3   
6401eb2b:	int3   
6401eb2c:	int3   
6401eb2d:	int3   
6401eb2e:	int3   
6401eb2f:	int3   
6401eb30:	lea    ecx,[ebp-0x144]
6401eb36:	jmp    0x64001a00
6401eb3b:	mov    edx,DWORD PTR [esp+0x8]
6401eb3f:	lea    eax,[edx-0x144]
6401eb45:	mov    ecx,DWORD PTR [edx-0x148]
6401eb4b:	xor    ecx,eax
6401eb4d:	call   0x6400f34e
6401eb52:	add    eax,0xc
6401eb55:	mov    ecx,DWORD PTR [edx-0x4]
6401eb58:	xor    ecx,eax
6401eb5a:	call   0x6400f34e
6401eb5f:	mov    eax,0x64025f70
6401eb64:	jmp    0x6400f010
6401eb69:	int3   
6401eb6a:	int3   
6401eb6b:	int3   
6401eb6c:	int3   
6401eb6d:	int3   
6401eb6e:	int3   
6401eb6f:	int3   
6401eb70:	lea    ecx,[ebp-0x20]
6401eb73:	jmp    0x640075a0
6401eb78:	mov    edx,DWORD PTR [esp+0x8]
6401eb7c:	lea    eax,[edx-0x1c]
6401eb7f:	mov    ecx,DWORD PTR [edx-0x20]
6401eb82:	xor    ecx,eax
6401eb84:	call   0x6400f34e
6401eb89:	mov    eax,0x64025f9c
6401eb8e:	jmp    0x6400f010
6401eb93:	int3   
6401eb94:	int3   
6401eb95:	int3   
6401eb96:	int3   
6401eb97:	int3   
6401eb98:	int3   
6401eb99:	int3   
6401eb9a:	int3   
6401eb9b:	int3   
6401eb9c:	int3   
6401eb9d:	int3   
6401eb9e:	int3   
6401eb9f:	int3   
6401eba0:	mov    eax,DWORD PTR [ebp-0x10]
6401eba3:	and    eax,0x1
6401eba6:	je     0x6401ebb8
6401ebac:	and    DWORD PTR [ebp-0x10],0xfffffffe
6401ebb0:	mov    edi,DWORD PTR [ebp+0x8]
6401ebb3:	jmp    0x64007230
6401ebb8:	ret    
6401ebb9:	mov    edx,DWORD PTR [esp+0x8]
6401ebbd:	lea    eax,[edx-0x8]
6401ebc0:	mov    ecx,DWORD PTR [edx-0xc]
6401ebc3:	xor    ecx,eax
6401ebc5:	call   0x6400f34e
6401ebca:	mov    eax,0x64025fc8
6401ebcf:	jmp    0x6400f010
6401ebd4:	int3   
6401ebd5:	int3   
6401ebd6:	int3   
6401ebd7:	int3   
6401ebd8:	int3   
6401ebd9:	int3   
6401ebda:	int3   
6401ebdb:	int3   
6401ebdc:	int3   
6401ebdd:	int3   
6401ebde:	int3   
6401ebdf:	int3   
6401ebe0:	mov    edx,DWORD PTR [esp+0x8]
6401ebe4:	lea    eax,[edx+0xc]
6401ebe7:	mov    ecx,DWORD PTR [edx-0x2c]
6401ebea:	xor    ecx,eax
6401ebec:	call   0x6400f34e
6401ebf1:	mov    eax,0x64026054
6401ebf6:	jmp    0x6400f010
6401ebfb:	int3   
6401ebfc:	int3   
6401ebfd:	int3   
6401ebfe:	int3   
6401ebff:	int3   
6401ec00:	mov    ecx,DWORD PTR [ebp-0x10]
6401ec03:	jmp    0x6400ec6b
6401ec08:	mov    edx,DWORD PTR [esp+0x8]
6401ec0c:	lea    eax,[edx-0xc]
6401ec0f:	mov    ecx,DWORD PTR [edx-0x10]
6401ec12:	xor    ecx,eax
6401ec14:	call   0x6400f34e
6401ec19:	mov    eax,0x64026080
6401ec1e:	jmp    0x6400f010
6401ec23:	int3   
6401ec24:	int3   
6401ec25:	int3   
6401ec26:	int3   
6401ec27:	int3   
6401ec28:	int3   
6401ec29:	int3   
6401ec2a:	int3   
6401ec2b:	int3   
6401ec2c:	int3   
6401ec2d:	int3   
6401ec2e:	int3   
6401ec2f:	int3   
6401ec30:	mov    ecx,DWORD PTR [ebp+0x4]
6401ec33:	jmp    0x6400ec6b
6401ec38:	mov    edx,DWORD PTR [esp+0x8]
6401ec3c:	lea    eax,[edx-0x4]
6401ec3f:	mov    ecx,DWORD PTR [edx-0x8]
6401ec42:	xor    ecx,eax
6401ec44:	call   0x6400f34e
6401ec49:	mov    eax,0x640260ac
6401ec4e:	jmp    0x6400f010
6401ec53:	int3   
6401ec54:	int3   
6401ec55:	int3   
6401ec56:	int3   
6401ec57:	int3   
6401ec58:	int3   
6401ec59:	int3   
6401ec5a:	int3   
6401ec5b:	int3   
6401ec5c:	int3   
6401ec5d:	int3   
6401ec5e:	int3   
6401ec5f:	int3   
6401ec60:	mov    eax,DWORD PTR [ebp-0x18]
6401ec63:	push   eax
6401ec64:	mov    ecx,DWORD PTR [ebp-0x1c]
6401ec67:	push   ecx
6401ec68:	call   0x64002490
6401ec6d:	add    esp,0x8
6401ec70:	ret    
6401ec71:	mov    edx,DWORD PTR [esp+0x8]
6401ec75:	lea    eax,[edx+0xc]
6401ec78:	mov    ecx,DWORD PTR [edx-0x20]
6401ec7b:	xor    ecx,eax
6401ec7d:	call   0x6400f34e
6401ec82:	mov    eax,0x6402610c
6401ec87:	jmp    0x6400f010
6401ec8c:	int3   
6401ec8d:	int3   
6401ec8e:	int3   
6401ec8f:	int3   
6401ec90:	lea    ecx,[ebp-0x28]
6401ec93:	jmp    0x640019a0
6401ec98:	mov    edx,DWORD PTR [esp+0x8]
6401ec9c:	lea    eax,[edx-0x28]
6401ec9f:	mov    ecx,DWORD PTR [edx-0x2c]
6401eca2:	xor    ecx,eax
6401eca4:	call   0x6400f34e
6401eca9:	mov    eax,0x64026138
6401ecae:	jmp    0x6400f010
6401ecb3:	int3   
6401ecb4:	int3   
6401ecb5:	int3   
6401ecb6:	int3   
6401ecb7:	int3   
6401ecb8:	int3   
6401ecb9:	int3   
6401ecba:	int3   
6401ecbb:	int3   
6401ecbc:	int3   
6401ecbd:	int3   
6401ecbe:	int3   
6401ecbf:	int3   
6401ecc0:	mov    ecx,DWORD PTR [ebp-0x10]
6401ecc3:	jmp    0x640019a0
6401ecc8:	mov    edx,DWORD PTR [esp+0x8]
6401eccc:	lea    eax,[edx-0x10]
6401eccf:	mov    ecx,DWORD PTR [edx-0x14]
6401ecd2:	xor    ecx,eax
6401ecd4:	call   0x6400f34e
6401ecd9:	mov    eax,0x64026164
6401ecde:	jmp    0x6400f010
6401ece3:	int3   
6401ece4:	int3   
6401ece5:	int3   
6401ece6:	int3   
6401ece7:	int3   
6401ece8:	int3   
6401ece9:	int3   
6401ecea:	int3   
6401eceb:	int3   
6401ecec:	int3   
6401eced:	int3   
6401ecee:	int3   
6401ecef:	int3   
6401ecf0:	mov    edx,DWORD PTR [esp+0x8]
6401ecf4:	lea    eax,[edx+0xc]
6401ecf7:	mov    ecx,DWORD PTR [edx-0x2c]
6401ecfa:	xor    ecx,eax
6401ecfc:	call   0x6400f34e
6401ed01:	mov    eax,0x640261f0
6401ed06:	jmp    0x6400f010
6401ed0b:	int3   
6401ed0c:	int3   
6401ed0d:	int3   
6401ed0e:	int3   
6401ed0f:	int3   
6401ed10:	mov    eax,DWORD PTR [ebp-0x14]
6401ed13:	push   eax
6401ed14:	mov    ecx,DWORD PTR [ebp-0x18]
6401ed17:	push   ecx
6401ed18:	call   0x64002490
6401ed1d:	add    esp,0x8
6401ed20:	ret    
6401ed21:	mov    edx,DWORD PTR [esp+0x8]
6401ed25:	lea    eax,[edx+0xc]
6401ed28:	mov    ecx,DWORD PTR [edx-0x1c]
6401ed2b:	xor    ecx,eax
6401ed2d:	call   0x6400f34e
6401ed32:	mov    eax,0x64026250
6401ed37:	jmp    0x6400f010
6401ed3c:	int3   
6401ed3d:	int3   
6401ed3e:	int3   
6401ed3f:	int3   
6401ed40:	mov    ecx,DWORD PTR [ebp-0x10]
6401ed43:	jmp    0x640019a0
6401ed48:	mov    edx,DWORD PTR [esp+0x8]
6401ed4c:	lea    eax,[edx-0xc]
6401ed4f:	mov    ecx,DWORD PTR [edx-0x10]
6401ed52:	xor    ecx,eax
6401ed54:	call   0x6400f34e
6401ed59:	mov    eax,0x6402627c
6401ed5e:	jmp    0x6400f010
6401ed63:	int3   
6401ed64:	int3   
6401ed65:	int3   
6401ed66:	int3   
6401ed67:	int3   
6401ed68:	int3   
6401ed69:	int3   
6401ed6a:	int3   
6401ed6b:	int3   
6401ed6c:	int3   
6401ed6d:	int3   
6401ed6e:	int3   
6401ed6f:	int3   
6401ed70:	lea    ecx,[ebp+0x8]
6401ed73:	jmp    0x64004310
6401ed78:	mov    edx,DWORD PTR [esp+0x8]
6401ed7c:	lea    eax,[edx-0x14]
6401ed7f:	mov    ecx,DWORD PTR [edx-0x18]
6401ed82:	xor    ecx,eax
6401ed84:	call   0x6400f34e
6401ed89:	mov    eax,0x640262a8
6401ed8e:	jmp    0x6400f010
6401ed93:	int3   
6401ed94:	int3   
6401ed95:	int3   
6401ed96:	int3   
6401ed97:	int3   
6401ed98:	int3   
6401ed99:	int3   
6401ed9a:	int3   
6401ed9b:	int3   
6401ed9c:	int3   
6401ed9d:	int3   
6401ed9e:	int3   
6401ed9f:	int3   
6401eda0:	lea    ecx,[ebp+0x8]
6401eda3:	jmp    0x640019a0
6401eda8:	mov    edx,DWORD PTR [esp+0x8]
6401edac:	lea    eax,[edx-0x14]
6401edaf:	mov    ecx,DWORD PTR [edx-0x18]
6401edb2:	xor    ecx,eax
6401edb4:	call   0x6400f34e
6401edb9:	mov    eax,0x640262d4
6401edbe:	jmp    0x6400f010
6401edc3:	int3   
6401edc4:	int3   
6401edc5:	int3   
6401edc6:	int3   
6401edc7:	int3   
6401edc8:	int3   
6401edc9:	int3   
6401edca:	int3   
6401edcb:	int3   
6401edcc:	int3   
6401edcd:	int3   
6401edce:	int3   
6401edcf:	int3   
6401edd0:	mov    ecx,DWORD PTR [ebp-0x10]
6401edd3:	jmp    0x6400ec6b
6401edd8:	mov    edx,DWORD PTR [esp+0x8]
6401eddc:	lea    eax,[edx-0xc]
6401eddf:	mov    ecx,DWORD PTR [edx-0x10]
6401ede2:	xor    ecx,eax
6401ede4:	call   0x6400f34e
6401ede9:	mov    eax,0x64026300
6401edee:	jmp    0x6400f010
6401edf3:	int3   
6401edf4:	int3   
6401edf5:	int3   
6401edf6:	int3   
6401edf7:	int3   
6401edf8:	int3   
6401edf9:	int3   
6401edfa:	int3   
6401edfb:	int3   
6401edfc:	int3   
6401edfd:	int3   
6401edfe:	int3   
6401edff:	int3   
6401ee00:	mov    ecx,DWORD PTR [ebp-0x10]
6401ee03:	jmp    0x6400ec6b
6401ee08:	mov    edx,DWORD PTR [esp+0x8]
6401ee0c:	lea    eax,[edx-0x8]
6401ee0f:	mov    ecx,DWORD PTR [edx-0xc]
6401ee12:	xor    ecx,eax
6401ee14:	call   0x6400f34e
6401ee19:	mov    eax,0x6402632c
6401ee1e:	jmp    0x6400f010
6401ee23:	int3   
6401ee24:	int3   
6401ee25:	int3   
6401ee26:	int3   
6401ee27:	int3   
6401ee28:	int3   
6401ee29:	int3   
6401ee2a:	int3   
6401ee2b:	int3   
6401ee2c:	int3   
6401ee2d:	int3   
6401ee2e:	int3   
6401ee2f:	int3   
6401ee30:	lea    ecx,[ebp-0x30]
6401ee33:	jmp    0x640019a0
6401ee38:	mov    eax,DWORD PTR [ebp-0x4c]
6401ee3b:	push   eax
6401ee3c:	mov    ecx,DWORD PTR [ebp-0x50]
6401ee3f:	push   ecx
6401ee40:	call   0x64002490
6401ee45:	add    esp,0x8
6401ee48:	ret    
6401ee49:	mov    edx,DWORD PTR [esp+0x8]
6401ee4d:	lea    eax,[edx+0xc]
6401ee50:	mov    ecx,DWORD PTR [edx-0x54]
6401ee53:	xor    ecx,eax
6401ee55:	call   0x6400f34e
6401ee5a:	mov    ecx,DWORD PTR [edx-0x8]
6401ee5d:	xor    ecx,eax
6401ee5f:	call   0x6400f34e
6401ee64:	mov    eax,0x6402639c
6401ee69:	jmp    0x6400f010
6401ee6e:	int3   
6401ee6f:	int3   
6401ee70:	mov    ecx,DWORD PTR [ebp-0x10]
6401ee73:	jmp    0x64004310
6401ee78:	mov    edx,DWORD PTR [esp+0x8]
6401ee7c:	lea    eax,[edx-0x10]
6401ee7f:	mov    ecx,DWORD PTR [edx-0x14]
6401ee82:	xor    ecx,eax
6401ee84:	call   0x6400f34e
6401ee89:	mov    eax,0x640263c8
6401ee8e:	jmp    0x6400f010
6401ee93:	int3   
6401ee94:	int3   
6401ee95:	int3   
6401ee96:	int3   
6401ee97:	int3   
6401ee98:	int3   
6401ee99:	int3   
6401ee9a:	int3   
6401ee9b:	int3   
6401ee9c:	int3   
6401ee9d:	int3   
6401ee9e:	int3   
6401ee9f:	int3   
6401eea0:	mov    eax,DWORD PTR [ebp-0x14]
6401eea3:	push   eax
6401eea4:	mov    ecx,DWORD PTR [ebp-0x18]
6401eea7:	push   ecx
6401eea8:	call   0x64002490
6401eead:	add    esp,0x8
6401eeb0:	ret    
6401eeb1:	mov    edx,DWORD PTR [esp+0x8]
6401eeb5:	lea    eax,[edx+0xc]
6401eeb8:	mov    ecx,DWORD PTR [edx-0x1c]
6401eebb:	xor    ecx,eax
6401eebd:	call   0x6400f34e
6401eec2:	mov    eax,0x64026428
6401eec7:	jmp    0x6400f010
6401eecc:	int3   
6401eecd:	int3   
6401eece:	int3   
6401eecf:	int3   
6401eed0:	mov    ecx,DWORD PTR [ebp-0x10]
6401eed3:	jmp    0x64004310
6401eed8:	mov    edx,DWORD PTR [esp+0x8]
6401eedc:	lea    eax,[edx-0xc]
6401eedf:	mov    ecx,DWORD PTR [edx-0x10]
6401eee2:	xor    ecx,eax
6401eee4:	call   0x6400f34e
6401eee9:	mov    eax,0x64026454
6401eeee:	jmp    0x6400f010
6401eef3:	int3   
6401eef4:	int3   
6401eef5:	int3   
6401eef6:	int3   
6401eef7:	int3   
6401eef8:	int3   
6401eef9:	int3   
6401eefa:	int3   
6401eefb:	int3   
6401eefc:	int3   
6401eefd:	int3   
6401eefe:	int3   
6401eeff:	int3   
6401ef00:	lea    ecx,[ebp-0x54]
6401ef03:	jmp    0x640019a0
6401ef08:	mov    edx,DWORD PTR [esp+0x8]
6401ef0c:	lea    eax,[edx-0x4c]
6401ef0f:	mov    ecx,DWORD PTR [edx-0x50]
6401ef12:	xor    ecx,eax
6401ef14:	call   0x6400f34e
6401ef19:	mov    eax,0x64026480
6401ef1e:	jmp    0x6400f010
6401ef23:	int3   
6401ef24:	int3   
6401ef25:	int3   
6401ef26:	int3   
6401ef27:	int3   
6401ef28:	int3   
6401ef29:	int3   
6401ef2a:	int3   
6401ef2b:	int3   
6401ef2c:	int3   
6401ef2d:	int3   
6401ef2e:	int3   
6401ef2f:	int3   
6401ef30:	lea    ecx,[ebp-0x30]
6401ef33:	jmp    0x640019a0
6401ef38:	mov    edx,DWORD PTR [esp+0x8]
6401ef3c:	lea    eax,[edx+0xc]
6401ef3f:	mov    ecx,DWORD PTR [edx-0x44]
6401ef42:	xor    ecx,eax
6401ef44:	call   0x6400f34e
6401ef49:	mov    ecx,DWORD PTR [edx-0x8]
6401ef4c:	xor    ecx,eax
6401ef4e:	call   0x6400f34e
6401ef53:	mov    eax,0x64026514
6401ef58:	jmp    0x6400f010
6401ef5d:	int3   
6401ef5e:	int3   
6401ef5f:	int3   
6401ef60:	lea    ecx,[ebp-0x54]
6401ef63:	jmp    0x640019a0
6401ef68:	mov    edx,DWORD PTR [esp+0x8]
6401ef6c:	lea    eax,[edx-0x5c]
6401ef6f:	mov    ecx,DWORD PTR [edx-0x60]
6401ef72:	xor    ecx,eax
6401ef74:	call   0x6400f34e
6401ef79:	mov    eax,0x64026540
6401ef7e:	jmp    0x6400f010
6401ef83:	int3   
6401ef84:	int3   
6401ef85:	int3   
6401ef86:	int3   
6401ef87:	int3   
6401ef88:	int3   
6401ef89:	int3   
6401ef8a:	int3   
6401ef8b:	int3   
6401ef8c:	int3   
6401ef8d:	int3   
6401ef8e:	int3   
6401ef8f:	int3   
6401ef90:	lea    ecx,[ebp-0x54]
6401ef93:	jmp    0x640019a0
6401ef98:	mov    edx,DWORD PTR [esp+0x8]
6401ef9c:	lea    eax,[edx-0x5c]
6401ef9f:	mov    ecx,DWORD PTR [edx-0x60]
6401efa2:	xor    ecx,eax
6401efa4:	call   0x6400f34e
6401efa9:	mov    eax,0x6402656c
6401efae:	jmp    0x6400f010
6401efb3:	int3   
6401efb4:	int3   
6401efb5:	int3   
6401efb6:	int3   
6401efb7:	int3   
6401efb8:	int3   
6401efb9:	int3   
6401efba:	int3   
6401efbb:	int3   
6401efbc:	int3   
6401efbd:	int3   
6401efbe:	int3   
6401efbf:	int3   
6401efc0:	lea    ecx,[ebp-0x54]
6401efc3:	jmp    0x640019a0
6401efc8:	mov    edx,DWORD PTR [esp+0x8]
6401efcc:	lea    eax,[edx-0x5c]
6401efcf:	mov    ecx,DWORD PTR [edx-0x60]
6401efd2:	xor    ecx,eax
6401efd4:	call   0x6400f34e
6401efd9:	mov    eax,0x64026598
6401efde:	jmp    0x6400f010
6401efe3:	int3   
6401efe4:	int3   
6401efe5:	int3   
6401efe6:	int3   
6401efe7:	int3   
6401efe8:	int3   
6401efe9:	int3   
6401efea:	int3   
6401efeb:	int3   
6401efec:	int3   
6401efed:	int3   
6401efee:	int3   
6401efef:	int3   
6401eff0:	lea    ecx,[ebp-0x54]
6401eff3:	jmp    0x640019a0
6401eff8:	mov    edx,DWORD PTR [esp+0x8]
6401effc:	lea    eax,[edx-0x5c]
6401efff:	mov    ecx,DWORD PTR [edx-0x60]
6401f002:	xor    ecx,eax
6401f004:	call   0x6400f34e
6401f009:	mov    eax,0x640265c4
6401f00e:	jmp    0x6400f010
6401f013:	int3   
6401f014:	int3   
6401f015:	int3   
6401f016:	int3   
6401f017:	int3   
6401f018:	int3   
6401f019:	int3   
6401f01a:	int3   
6401f01b:	int3   
6401f01c:	int3   
6401f01d:	int3   
6401f01e:	int3   
6401f01f:	int3   
6401f020:	lea    ecx,[ebp-0x64]
6401f023:	jmp    0x64004310
6401f028:	lea    ecx,[ebp-0x48]
6401f02b:	jmp    0x64004570
6401f030:	mov    edx,DWORD PTR [esp+0x8]
6401f034:	lea    eax,[edx-0x6c]
6401f037:	mov    ecx,DWORD PTR [edx-0x70]
6401f03a:	xor    ecx,eax
6401f03c:	call   0x6400f34e
6401f041:	mov    eax,0x640265f8
6401f046:	jmp    0x6400f010
6401f04b:	int3   
6401f04c:	int3   
6401f04d:	int3   
6401f04e:	int3   
6401f04f:	int3   
6401f050:	lea    ecx,[ebp-0x64]
6401f053:	jmp    0x640019a0
6401f058:	lea    ecx,[ebp-0x48]
6401f05b:	jmp    0x64004520
6401f060:	mov    edx,DWORD PTR [esp+0x8]
6401f064:	lea    eax,[edx-0x6c]
6401f067:	mov    ecx,DWORD PTR [edx-0x70]
6401f06a:	xor    ecx,eax
6401f06c:	call   0x6400f34e
6401f071:	mov    eax,0x6402662c
6401f076:	jmp    0x6400f010
6401f07b:	int3   
6401f07c:	int3   
6401f07d:	int3   
6401f07e:	int3   
6401f07f:	int3   
6401f080:	mov    eax,ds:0x6402c2d8
6401f085:	and    eax,0xfffffffe
6401f088:	mov    ds:0x6402c2d8,eax
6401f08d:	ret    
6401f08e:	mov    edx,DWORD PTR [esp+0x8]
6401f092:	lea    eax,[edx]
6401f094:	mov    ecx,DWORD PTR [edx-0x4]
6401f097:	xor    ecx,eax
6401f099:	call   0x6400f34e
6401f09e:	mov    eax,0x64026658
6401f0a3:	jmp    0x6400f010
6401f0a8:	int3   
6401f0a9:	int3   
6401f0aa:	int3   
6401f0ab:	int3   
6401f0ac:	int3   
6401f0ad:	int3   
6401f0ae:	int3   
6401f0af:	int3   
6401f0b0:	mov    eax,ds:0x6402c2dc
6401f0b5:	and    eax,0xfffffffe
6401f0b8:	mov    ds:0x6402c2dc,eax
6401f0bd:	ret    
6401f0be:	mov    edx,DWORD PTR [esp+0x8]
6401f0c2:	lea    eax,[edx]
6401f0c4:	mov    ecx,DWORD PTR [edx-0x4]
6401f0c7:	xor    ecx,eax
6401f0c9:	call   0x6400f34e
6401f0ce:	mov    eax,0x64026684
6401f0d3:	jmp    0x6400f010
6401f0d8:	int3   
6401f0d9:	int3   
6401f0da:	int3   
6401f0db:	int3   
6401f0dc:	int3   
6401f0dd:	int3   
6401f0de:	int3   
6401f0df:	int3   
6401f0e0:	lea    ecx,[ebp-0x4c]
6401f0e3:	jmp    0x64004310
6401f0e8:	lea    ecx,[ebp-0x30]
6401f0eb:	jmp    0x64004310
6401f0f0:	mov    edx,DWORD PTR [esp+0x8]
6401f0f4:	lea    eax,[edx-0x5c]
6401f0f7:	mov    ecx,DWORD PTR [edx-0x60]
6401f0fa:	xor    ecx,eax
6401f0fc:	call   0x6400f34e
6401f101:	add    eax,0xc
6401f104:	mov    ecx,DWORD PTR [edx-0x8]
6401f107:	xor    ecx,eax
6401f109:	call   0x6400f34e
6401f10e:	mov    eax,0x640266b8
6401f113:	jmp    0x6400f010
6401f118:	int3   
6401f119:	int3   
6401f11a:	int3   
6401f11b:	int3   
6401f11c:	int3   
6401f11d:	int3   
6401f11e:	int3   
6401f11f:	int3   
6401f120:	lea    ecx,[ebp-0x4c]
6401f123:	jmp    0x640019a0
6401f128:	lea    ecx,[ebp-0x30]
6401f12b:	jmp    0x640019a0
6401f130:	mov    edx,DWORD PTR [esp+0x8]
6401f134:	lea    eax,[edx-0x5c]
6401f137:	mov    ecx,DWORD PTR [edx-0x60]
6401f13a:	xor    ecx,eax
6401f13c:	call   0x6400f34e
6401f141:	add    eax,0xc
6401f144:	mov    ecx,DWORD PTR [edx-0x8]
6401f147:	xor    ecx,eax
6401f149:	call   0x6400f34e
6401f14e:	mov    eax,0x640266ec
6401f153:	jmp    0x6400f010
6401f158:	int3   
6401f159:	int3   
6401f15a:	int3   
6401f15b:	int3   
6401f15c:	int3   
6401f15d:	int3   
6401f15e:	int3   
6401f15f:	int3   
6401f160:	lea    ecx,[ebp+0x4]
6401f163:	jmp    0x64001ab0
6401f168:	mov    edx,DWORD PTR [esp+0x8]
6401f16c:	lea    eax,[edx-0x30]
6401f16f:	mov    ecx,DWORD PTR [edx-0x34]
6401f172:	xor    ecx,eax
6401f174:	call   0x6400f34e
6401f179:	add    eax,0xc
6401f17c:	mov    ecx,DWORD PTR [edx-0x4]
6401f17f:	xor    ecx,eax
6401f181:	call   0x6400f34e
6401f186:	mov    eax,0x64026718
6401f18b:	jmp    0x6400f010
6401f190:	mov    ecx,DWORD PTR [ebp-0x10]
6401f193:	jmp    0x64001ab0
6401f198:	mov    edx,DWORD PTR [esp+0x8]
6401f19c:	lea    eax,[edx-0xc]
6401f19f:	mov    ecx,DWORD PTR [edx-0x10]
6401f1a2:	xor    ecx,eax
6401f1a4:	call   0x6400f34e
6401f1a9:	mov    eax,0x64026744
6401f1ae:	jmp    0x6400f010
6401f1b3:	int3   
6401f1b4:	int3   
6401f1b5:	int3   
6401f1b6:	int3   
6401f1b7:	int3   
6401f1b8:	int3   
6401f1b9:	int3   
6401f1ba:	int3   
6401f1bb:	int3   
6401f1bc:	int3   
6401f1bd:	int3   
6401f1be:	int3   
6401f1bf:	int3   
6401f1c0:	lea    ecx,[ebp-0x10]
6401f1c3:	jmp    0x64001ab0
6401f1c8:	mov    edx,DWORD PTR [esp+0x8]
6401f1cc:	lea    eax,[edx-0x8]
6401f1cf:	mov    ecx,DWORD PTR [edx-0xc]
6401f1d2:	xor    ecx,eax
6401f1d4:	call   0x6400f34e
6401f1d9:	mov    eax,0x64026770
6401f1de:	jmp    0x6400f010
6401f1e3:	int3   
6401f1e4:	int3   
6401f1e5:	int3   
6401f1e6:	int3   
6401f1e7:	int3   
6401f1e8:	int3   
6401f1e9:	int3   
6401f1ea:	int3   
6401f1eb:	int3   
6401f1ec:	int3   
6401f1ed:	int3   
6401f1ee:	int3   
6401f1ef:	int3   
6401f1f0:	mov    ecx,DWORD PTR [ebp-0x10]
6401f1f3:	jmp    0x64001ab0
6401f1f8:	mov    edx,DWORD PTR [esp+0x8]
6401f1fc:	lea    eax,[edx-0xc]
6401f1ff:	mov    ecx,DWORD PTR [edx-0x10]
6401f202:	xor    ecx,eax
6401f204:	call   0x6400f34e
6401f209:	mov    eax,0x6402679c
6401f20e:	jmp    0x6400f010
6401f213:	int3   
6401f214:	int3   
6401f215:	int3   
6401f216:	int3   
6401f217:	int3   
6401f218:	int3   
6401f219:	int3   
6401f21a:	int3   
6401f21b:	int3   
6401f21c:	int3   
6401f21d:	int3   
6401f21e:	int3   
6401f21f:	int3   
6401f220:	mov    eax,ds:0x6402c2f0
6401f225:	and    eax,0xfffffffe
6401f228:	mov    ds:0x6402c2f0,eax
6401f22d:	ret    
6401f22e:	mov    edx,DWORD PTR [esp+0x8]
6401f232:	lea    eax,[edx-0xc]
6401f235:	mov    ecx,DWORD PTR [edx-0x10]
6401f238:	xor    ecx,eax
6401f23a:	call   0x6400f34e
6401f23f:	mov    eax,0x640267c8
6401f244:	jmp    0x6400f010
6401f249:	int3   
6401f24a:	int3   
6401f24b:	int3   
6401f24c:	int3   
6401f24d:	int3   
6401f24e:	int3   
6401f24f:	int3   
6401f250:	mov    eax,ds:0x6402c2f8
6401f255:	and    eax,0xfffffffe
6401f258:	mov    ds:0x6402c2f8,eax
6401f25d:	ret    
6401f25e:	mov    edx,DWORD PTR [esp+0x8]
6401f262:	lea    eax,[edx-0xc]
6401f265:	mov    ecx,DWORD PTR [edx-0x10]
6401f268:	xor    ecx,eax
6401f26a:	call   0x6400f34e
6401f26f:	mov    eax,0x640267f4
6401f274:	jmp    0x6400f010
6401f279:	int3   
6401f27a:	int3   
6401f27b:	int3   
6401f27c:	int3   
6401f27d:	int3   
6401f27e:	int3   
6401f27f:	int3   
6401f280:	mov    eax,ds:0x6402c300
6401f285:	and    eax,0xfffffffe
6401f288:	mov    ds:0x6402c300,eax
6401f28d:	ret    
6401f28e:	mov    edx,DWORD PTR [esp+0x8]
6401f292:	lea    eax,[edx-0xc]
6401f295:	mov    ecx,DWORD PTR [edx-0x10]
6401f298:	xor    ecx,eax
6401f29a:	call   0x6400f34e
6401f29f:	mov    eax,0x64026820
6401f2a4:	jmp    0x6400f010
6401f2a9:	int3   
6401f2aa:	int3   
6401f2ab:	int3   
6401f2ac:	int3   
6401f2ad:	int3   
6401f2ae:	int3   
6401f2af:	int3   
6401f2b0:	mov    eax,ds:0x6402c308
6401f2b5:	and    eax,0xfffffffe
6401f2b8:	mov    ds:0x6402c308,eax
6401f2bd:	ret    
6401f2be:	mov    edx,DWORD PTR [esp+0x8]
6401f2c2:	lea    eax,[edx-0xc]
6401f2c5:	mov    ecx,DWORD PTR [edx-0x10]
6401f2c8:	xor    ecx,eax
6401f2ca:	call   0x6400f34e
6401f2cf:	mov    eax,0x6402684c
6401f2d4:	jmp    0x6400f010
6401f2d9:	int3   
6401f2da:	int3   
6401f2db:	int3   
6401f2dc:	int3   
6401f2dd:	int3   
6401f2de:	int3   
6401f2df:	int3   
6401f2e0:	mov    eax,ds:0x6402c310
6401f2e5:	and    eax,0xfffffffe
6401f2e8:	mov    ds:0x6402c310,eax
6401f2ed:	ret    
6401f2ee:	mov    edx,DWORD PTR [esp+0x8]
6401f2f2:	lea    eax,[edx-0xc]
6401f2f5:	mov    ecx,DWORD PTR [edx-0x10]
6401f2f8:	xor    ecx,eax
6401f2fa:	call   0x6400f34e
6401f2ff:	mov    eax,0x64026878
6401f304:	jmp    0x6400f010
6401f309:	int3   
6401f30a:	int3   
6401f30b:	int3   
6401f30c:	int3   
6401f30d:	int3   
6401f30e:	int3   
6401f30f:	int3   
6401f310:	mov    eax,ds:0x6402c318
6401f315:	and    eax,0xfffffffe
6401f318:	mov    ds:0x6402c318,eax
6401f31d:	ret    
6401f31e:	mov    edx,DWORD PTR [esp+0x8]
6401f322:	lea    eax,[edx-0xc]
6401f325:	mov    ecx,DWORD PTR [edx-0x10]
6401f328:	xor    ecx,eax
6401f32a:	call   0x6400f34e
6401f32f:	mov    eax,0x640268a4
6401f334:	jmp    0x6400f010
6401f339:	int3   
6401f33a:	int3   
6401f33b:	int3   
6401f33c:	int3   
6401f33d:	int3   
6401f33e:	int3   
6401f33f:	int3   
6401f340:	mov    eax,ds:0x6402c320
6401f345:	and    eax,0xfffffffe
6401f348:	mov    ds:0x6402c320,eax
6401f34d:	ret    
6401f34e:	mov    edx,DWORD PTR [esp+0x8]
6401f352:	lea    eax,[edx-0xc]
6401f355:	mov    ecx,DWORD PTR [edx-0x10]
6401f358:	xor    ecx,eax
6401f35a:	call   0x6400f34e
6401f35f:	mov    eax,0x640268d0
6401f364:	jmp    0x6400f010
6401f369:	int3   
6401f36a:	int3   
6401f36b:	int3   
6401f36c:	int3   
6401f36d:	int3   
6401f36e:	int3   
6401f36f:	int3   
6401f370:	mov    eax,ds:0x6402c328
6401f375:	and    eax,0xfffffffe
6401f378:	mov    ds:0x6402c328,eax
6401f37d:	ret    
6401f37e:	mov    edx,DWORD PTR [esp+0x8]
6401f382:	lea    eax,[edx-0xc]
6401f385:	mov    ecx,DWORD PTR [edx-0x10]
6401f388:	xor    ecx,eax
6401f38a:	call   0x6400f34e
6401f38f:	mov    eax,0x640268fc
6401f394:	jmp    0x6400f010
6401f399:	int3   
6401f39a:	int3   
6401f39b:	int3   
6401f39c:	int3   
6401f39d:	int3   
6401f39e:	int3   
6401f39f:	int3   
6401f3a0:	mov    eax,ds:0x6402c330
6401f3a5:	and    eax,0xfffffffe
6401f3a8:	mov    ds:0x6402c330,eax
6401f3ad:	ret    
6401f3ae:	mov    edx,DWORD PTR [esp+0x8]
6401f3b2:	lea    eax,[edx-0xc]
6401f3b5:	mov    ecx,DWORD PTR [edx-0x10]
6401f3b8:	xor    ecx,eax
6401f3ba:	call   0x6400f34e
6401f3bf:	mov    eax,0x64026928
6401f3c4:	jmp    0x6400f010
6401f3c9:	int3   
6401f3ca:	int3   
6401f3cb:	int3   
6401f3cc:	int3   
6401f3cd:	int3   
6401f3ce:	int3   
6401f3cf:	int3   
6401f3d0:	mov    eax,ds:0x6402c338
6401f3d5:	and    eax,0xfffffffe
6401f3d8:	mov    ds:0x6402c338,eax
6401f3dd:	ret    
6401f3de:	mov    edx,DWORD PTR [esp+0x8]
6401f3e2:	lea    eax,[edx-0xc]
6401f3e5:	mov    ecx,DWORD PTR [edx-0x10]
6401f3e8:	xor    ecx,eax
6401f3ea:	call   0x6400f34e
6401f3ef:	mov    eax,0x64026954
6401f3f4:	jmp    0x6400f010
6401f3f9:	int3   
6401f3fa:	int3   
6401f3fb:	int3   
6401f3fc:	int3   
6401f3fd:	int3   
6401f3fe:	int3   
6401f3ff:	int3   
6401f400:	mov    eax,ds:0x6402c340
6401f405:	and    eax,0xfffffffe
6401f408:	mov    ds:0x6402c340,eax
6401f40d:	ret    
6401f40e:	mov    edx,DWORD PTR [esp+0x8]
6401f412:	lea    eax,[edx-0xc]
6401f415:	mov    ecx,DWORD PTR [edx-0x10]
6401f418:	xor    ecx,eax
6401f41a:	call   0x6400f34e
6401f41f:	mov    eax,0x64026980
6401f424:	jmp    0x6400f010
6401f429:	int3   
6401f42a:	int3   
6401f42b:	int3   
6401f42c:	int3   
6401f42d:	int3   
6401f42e:	int3   
6401f42f:	int3   
6401f430:	mov    eax,ds:0x6402c348
6401f435:	and    eax,0xfffffffe
6401f438:	mov    ds:0x6402c348,eax
6401f43d:	ret    
6401f43e:	mov    edx,DWORD PTR [esp+0x8]
6401f442:	lea    eax,[edx-0xc]
6401f445:	mov    ecx,DWORD PTR [edx-0x10]
6401f448:	xor    ecx,eax
6401f44a:	call   0x6400f34e
6401f44f:	mov    eax,0x640269ac
6401f454:	jmp    0x6400f010
6401f459:	int3   
6401f45a:	int3   
6401f45b:	int3   
6401f45c:	int3   
6401f45d:	int3   
6401f45e:	int3   
6401f45f:	int3   
6401f460:	mov    eax,ds:0x6402c350
6401f465:	and    eax,0xfffffffe
6401f468:	mov    ds:0x6402c350,eax
6401f46d:	ret    
6401f46e:	mov    edx,DWORD PTR [esp+0x8]
6401f472:	lea    eax,[edx-0xc]
6401f475:	mov    ecx,DWORD PTR [edx-0x10]
6401f478:	xor    ecx,eax
6401f47a:	call   0x6400f34e
6401f47f:	mov    eax,0x640269d8
6401f484:	jmp    0x6400f010
6401f489:	int3   
6401f48a:	int3   
6401f48b:	int3   
6401f48c:	int3   
6401f48d:	int3   
6401f48e:	int3   
6401f48f:	int3   
6401f490:	mov    eax,ds:0x6402c358
6401f495:	and    eax,0xfffffffe
6401f498:	mov    ds:0x6402c358,eax
6401f49d:	ret    
6401f49e:	mov    edx,DWORD PTR [esp+0x8]
6401f4a2:	lea    eax,[edx-0xc]
6401f4a5:	mov    ecx,DWORD PTR [edx-0x10]
6401f4a8:	xor    ecx,eax
6401f4aa:	call   0x6400f34e
6401f4af:	mov    eax,0x64026a04
6401f4b4:	jmp    0x6400f010
6401f4b9:	int3   
6401f4ba:	int3   
6401f4bb:	int3   
6401f4bc:	int3   
6401f4bd:	int3   
6401f4be:	int3   
6401f4bf:	int3   
6401f4c0:	mov    eax,ds:0x6402c360
6401f4c5:	and    eax,0xfffffffe
6401f4c8:	mov    ds:0x6402c360,eax
6401f4cd:	ret    
6401f4ce:	mov    edx,DWORD PTR [esp+0x8]
6401f4d2:	lea    eax,[edx-0xc]
6401f4d5:	mov    ecx,DWORD PTR [edx-0x10]
6401f4d8:	xor    ecx,eax
6401f4da:	call   0x6400f34e
6401f4df:	mov    eax,0x64026a30
6401f4e4:	jmp    0x6400f010
6401f4e9:	int3   
6401f4ea:	int3   
6401f4eb:	int3   
6401f4ec:	int3   
6401f4ed:	int3   
6401f4ee:	int3   
6401f4ef:	int3   
6401f4f0:	mov    eax,ds:0x6402c368
6401f4f5:	and    eax,0xfffffffe
6401f4f8:	mov    ds:0x6402c368,eax
6401f4fd:	ret    
6401f4fe:	mov    edx,DWORD PTR [esp+0x8]
6401f502:	lea    eax,[edx-0xc]
6401f505:	mov    ecx,DWORD PTR [edx-0x10]
6401f508:	xor    ecx,eax
6401f50a:	call   0x6400f34e
6401f50f:	mov    eax,0x64026a5c
6401f514:	jmp    0x6400f010
6401f519:	int3   
6401f51a:	int3   
6401f51b:	int3   
6401f51c:	int3   
6401f51d:	int3   
6401f51e:	int3   
6401f51f:	int3   
6401f520:	mov    eax,ds:0x6402c370
6401f525:	and    eax,0xfffffffe
6401f528:	mov    ds:0x6402c370,eax
6401f52d:	ret    
6401f52e:	mov    edx,DWORD PTR [esp+0x8]
6401f532:	lea    eax,[edx-0xc]
6401f535:	mov    ecx,DWORD PTR [edx-0x10]
6401f538:	xor    ecx,eax
6401f53a:	call   0x6400f34e
6401f53f:	mov    eax,0x64026a88
6401f544:	jmp    0x6400f010
6401f549:	int3   
6401f54a:	int3   
6401f54b:	int3   
6401f54c:	int3   
6401f54d:	int3   
6401f54e:	int3   
6401f54f:	int3   
6401f550:	mov    eax,ds:0x6402c378
6401f555:	and    eax,0xfffffffe
6401f558:	mov    ds:0x6402c378,eax
6401f55d:	ret    
6401f55e:	mov    edx,DWORD PTR [esp+0x8]
6401f562:	lea    eax,[edx-0xc]
6401f565:	mov    ecx,DWORD PTR [edx-0x10]
6401f568:	xor    ecx,eax
6401f56a:	call   0x6400f34e
6401f56f:	mov    eax,0x64026ab4
6401f574:	jmp    0x6400f010
6401f579:	int3   
6401f57a:	int3   
6401f57b:	int3   
6401f57c:	int3   
6401f57d:	int3   
6401f57e:	int3   
6401f57f:	int3   
6401f580:	mov    eax,ds:0x6402c380
6401f585:	and    eax,0xfffffffe
6401f588:	mov    ds:0x6402c380,eax
6401f58d:	ret    
6401f58e:	mov    edx,DWORD PTR [esp+0x8]
6401f592:	lea    eax,[edx-0xc]
6401f595:	mov    ecx,DWORD PTR [edx-0x10]
6401f598:	xor    ecx,eax
6401f59a:	call   0x6400f34e
6401f59f:	mov    eax,0x64026ae0
6401f5a4:	jmp    0x6400f010
6401f5a9:	int3   
6401f5aa:	int3   
6401f5ab:	int3   
6401f5ac:	int3   
6401f5ad:	int3   
6401f5ae:	int3   
6401f5af:	int3   
6401f5b0:	mov    eax,ds:0x6402c388
6401f5b5:	and    eax,0xfffffffe
6401f5b8:	mov    ds:0x6402c388,eax
6401f5bd:	ret    
6401f5be:	mov    edx,DWORD PTR [esp+0x8]
6401f5c2:	lea    eax,[edx-0xc]
6401f5c5:	mov    ecx,DWORD PTR [edx-0x10]
6401f5c8:	xor    ecx,eax
6401f5ca:	call   0x6400f34e
6401f5cf:	mov    eax,0x64026b0c
6401f5d4:	jmp    0x6400f010
6401f5d9:	int3   
6401f5da:	int3   
6401f5db:	int3   
6401f5dc:	int3   
6401f5dd:	int3   
6401f5de:	int3   
6401f5df:	int3   
6401f5e0:	mov    eax,ds:0x6402c390
6401f5e5:	and    eax,0xfffffffe
6401f5e8:	mov    ds:0x6402c390,eax
6401f5ed:	ret    
6401f5ee:	mov    edx,DWORD PTR [esp+0x8]
6401f5f2:	lea    eax,[edx-0xc]
6401f5f5:	mov    ecx,DWORD PTR [edx-0x10]
6401f5f8:	xor    ecx,eax
6401f5fa:	call   0x6400f34e
6401f5ff:	mov    eax,0x64026b38
6401f604:	jmp    0x6400f010
6401f609:	int3   
6401f60a:	int3   
6401f60b:	int3   
6401f60c:	int3   
6401f60d:	int3   
6401f60e:	int3   
6401f60f:	int3   
6401f610:	mov    eax,ds:0x6402c398
6401f615:	and    eax,0xfffffffe
6401f618:	mov    ds:0x6402c398,eax
6401f61d:	ret    
6401f61e:	mov    edx,DWORD PTR [esp+0x8]
6401f622:	lea    eax,[edx-0xc]
6401f625:	mov    ecx,DWORD PTR [edx-0x10]
6401f628:	xor    ecx,eax
6401f62a:	call   0x6400f34e
6401f62f:	mov    eax,0x64026b64
6401f634:	jmp    0x6400f010
6401f639:	int3   
6401f63a:	int3   
6401f63b:	int3   
6401f63c:	int3   
6401f63d:	int3   
6401f63e:	int3   
6401f63f:	int3   
6401f640:	mov    eax,ds:0x6402c3a0
6401f645:	and    eax,0xfffffffe
6401f648:	mov    ds:0x6402c3a0,eax
6401f64d:	ret    
6401f64e:	mov    edx,DWORD PTR [esp+0x8]
6401f652:	lea    eax,[edx-0xc]
6401f655:	mov    ecx,DWORD PTR [edx-0x10]
6401f658:	xor    ecx,eax
6401f65a:	call   0x6400f34e
6401f65f:	mov    eax,0x64026b90
6401f664:	jmp    0x6400f010
6401f669:	int3   
6401f66a:	int3   
6401f66b:	int3   
6401f66c:	int3   
6401f66d:	int3   
6401f66e:	int3   
6401f66f:	int3   
6401f670:	mov    eax,ds:0x6402c3a8
6401f675:	and    eax,0xfffffffe
6401f678:	mov    ds:0x6402c3a8,eax
6401f67d:	ret    
6401f67e:	mov    edx,DWORD PTR [esp+0x8]
6401f682:	lea    eax,[edx-0xc]
6401f685:	mov    ecx,DWORD PTR [edx-0x10]
6401f688:	xor    ecx,eax
6401f68a:	call   0x6400f34e
6401f68f:	mov    eax,0x64026bbc
6401f694:	jmp    0x6400f010
6401f699:	int3   
6401f69a:	int3   
6401f69b:	int3   
6401f69c:	int3   
6401f69d:	int3   
6401f69e:	int3   
6401f69f:	int3   
6401f6a0:	mov    eax,ds:0x6402c3b0
6401f6a5:	and    eax,0xfffffffe
6401f6a8:	mov    ds:0x6402c3b0,eax
6401f6ad:	ret    
6401f6ae:	mov    edx,DWORD PTR [esp+0x8]
6401f6b2:	lea    eax,[edx-0xc]
6401f6b5:	mov    ecx,DWORD PTR [edx-0x10]
6401f6b8:	xor    ecx,eax
6401f6ba:	call   0x6400f34e
6401f6bf:	mov    eax,0x64026be8
6401f6c4:	jmp    0x6400f010
6401f6c9:	int3   
6401f6ca:	int3   
6401f6cb:	int3   
6401f6cc:	int3   
6401f6cd:	int3   
6401f6ce:	int3   
6401f6cf:	int3   
6401f6d0:	mov    eax,ds:0x6402c3b8
6401f6d5:	and    eax,0xfffffffe
6401f6d8:	mov    ds:0x6402c3b8,eax
6401f6dd:	ret    
6401f6de:	mov    edx,DWORD PTR [esp+0x8]
6401f6e2:	lea    eax,[edx-0xc]
6401f6e5:	mov    ecx,DWORD PTR [edx-0x10]
6401f6e8:	xor    ecx,eax
6401f6ea:	call   0x6400f34e
6401f6ef:	mov    eax,0x64026c14
6401f6f4:	jmp    0x6400f010
6401f6f9:	int3   
6401f6fa:	int3   
6401f6fb:	int3   
6401f6fc:	int3   
6401f6fd:	int3   
6401f6fe:	int3   
6401f6ff:	int3   
6401f700:	mov    eax,ds:0x6402c3c0
6401f705:	and    eax,0xfffffffe
6401f708:	mov    ds:0x6402c3c0,eax
6401f70d:	ret    
6401f70e:	mov    edx,DWORD PTR [esp+0x8]
6401f712:	lea    eax,[edx-0xc]
6401f715:	mov    ecx,DWORD PTR [edx-0x10]
6401f718:	xor    ecx,eax
6401f71a:	call   0x6400f34e
6401f71f:	mov    eax,0x64026c40
6401f724:	jmp    0x6400f010
6401f729:	int3   
6401f72a:	int3   
6401f72b:	int3   
6401f72c:	int3   
6401f72d:	int3   
6401f72e:	int3   
6401f72f:	int3   
6401f730:	mov    eax,ds:0x6402c3c8
6401f735:	and    eax,0xfffffffe
6401f738:	mov    ds:0x6402c3c8,eax
6401f73d:	ret    
6401f73e:	mov    edx,DWORD PTR [esp+0x8]
6401f742:	lea    eax,[edx-0xc]
6401f745:	mov    ecx,DWORD PTR [edx-0x10]
6401f748:	xor    ecx,eax
6401f74a:	call   0x6400f34e
6401f74f:	mov    eax,0x64026c6c
6401f754:	jmp    0x6400f010
6401f759:	int3   
6401f75a:	int3   
6401f75b:	int3   
6401f75c:	int3   
6401f75d:	int3   
6401f75e:	int3   
6401f75f:	int3   
6401f760:	mov    eax,ds:0x6402c3d0
6401f765:	and    eax,0xfffffffe
6401f768:	mov    ds:0x6402c3d0,eax
6401f76d:	ret    
6401f76e:	mov    edx,DWORD PTR [esp+0x8]
6401f772:	lea    eax,[edx-0xc]
6401f775:	mov    ecx,DWORD PTR [edx-0x10]
6401f778:	xor    ecx,eax
6401f77a:	call   0x6400f34e
6401f77f:	mov    eax,0x64026c98
6401f784:	jmp    0x6400f010
6401f789:	int3   
6401f78a:	int3   
6401f78b:	int3   
6401f78c:	int3   
6401f78d:	int3   
6401f78e:	int3   
6401f78f:	int3   
6401f790:	mov    eax,ds:0x6402c3d8
6401f795:	and    eax,0xfffffffe
6401f798:	mov    ds:0x6402c3d8,eax
6401f79d:	ret    
6401f79e:	mov    edx,DWORD PTR [esp+0x8]
6401f7a2:	lea    eax,[edx-0xc]
6401f7a5:	mov    ecx,DWORD PTR [edx-0x10]
6401f7a8:	xor    ecx,eax
6401f7aa:	call   0x6400f34e
6401f7af:	mov    eax,0x64026cc4
6401f7b4:	jmp    0x6400f010
6401f7b9:	int3   
6401f7ba:	int3   
6401f7bb:	int3   
6401f7bc:	int3   
6401f7bd:	int3   
6401f7be:	int3   
6401f7bf:	int3   
6401f7c0:	mov    eax,ds:0x6402c3e0
6401f7c5:	and    eax,0xfffffffe
6401f7c8:	mov    ds:0x6402c3e0,eax
6401f7cd:	ret    
6401f7ce:	mov    edx,DWORD PTR [esp+0x8]
6401f7d2:	lea    eax,[edx-0xc]
6401f7d5:	mov    ecx,DWORD PTR [edx-0x10]
6401f7d8:	xor    ecx,eax
6401f7da:	call   0x6400f34e
6401f7df:	mov    eax,0x64026cf0
6401f7e4:	jmp    0x6400f010
6401f7e9:	int3   
6401f7ea:	int3   
6401f7eb:	int3   
6401f7ec:	int3   
6401f7ed:	int3   
6401f7ee:	int3   
6401f7ef:	int3   
6401f7f0:	mov    eax,ds:0x6402c3e8
6401f7f5:	and    eax,0xfffffffe
6401f7f8:	mov    ds:0x6402c3e8,eax
6401f7fd:	ret    
6401f7fe:	mov    edx,DWORD PTR [esp+0x8]
6401f802:	lea    eax,[edx-0xc]
6401f805:	mov    ecx,DWORD PTR [edx-0x10]
6401f808:	xor    ecx,eax
6401f80a:	call   0x6400f34e
6401f80f:	mov    eax,0x64026d1c
6401f814:	jmp    0x6400f010
6401f819:	int3   
6401f81a:	int3   
6401f81b:	int3   
6401f81c:	int3   
6401f81d:	int3   
6401f81e:	int3   
6401f81f:	int3   
6401f820:	mov    eax,ds:0x6402c3f0
6401f825:	and    eax,0xfffffffe
6401f828:	mov    ds:0x6402c3f0,eax
6401f82d:	ret    
6401f82e:	mov    edx,DWORD PTR [esp+0x8]
6401f832:	lea    eax,[edx-0xc]
6401f835:	mov    ecx,DWORD PTR [edx-0x10]
6401f838:	xor    ecx,eax
6401f83a:	call   0x6400f34e
6401f83f:	mov    eax,0x64026d48
6401f844:	jmp    0x6400f010
6401f849:	int3   
6401f84a:	int3   
6401f84b:	int3   
6401f84c:	int3   
6401f84d:	int3   
6401f84e:	int3   
6401f84f:	int3   
6401f850:	mov    eax,ds:0x6402c3f8
6401f855:	and    eax,0xfffffffe
6401f858:	mov    ds:0x6402c3f8,eax
6401f85d:	ret    
6401f85e:	mov    edx,DWORD PTR [esp+0x8]
6401f862:	lea    eax,[edx-0xc]
6401f865:	mov    ecx,DWORD PTR [edx-0x10]
6401f868:	xor    ecx,eax
6401f86a:	call   0x6400f34e
6401f86f:	mov    eax,0x64026d74
6401f874:	jmp    0x6400f010
6401f879:	int3   
6401f87a:	int3   
6401f87b:	int3   
6401f87c:	int3   
6401f87d:	int3   
6401f87e:	int3   
6401f87f:	int3   
6401f880:	mov    eax,ds:0x6402c400
6401f885:	and    eax,0xfffffffe
6401f888:	mov    ds:0x6402c400,eax
6401f88d:	ret    
6401f88e:	mov    edx,DWORD PTR [esp+0x8]
6401f892:	lea    eax,[edx-0xc]
6401f895:	mov    ecx,DWORD PTR [edx-0x10]
6401f898:	xor    ecx,eax
6401f89a:	call   0x6400f34e
6401f89f:	mov    eax,0x64026da0
6401f8a4:	jmp    0x6400f010
6401f8a9:	int3   
6401f8aa:	int3   
6401f8ab:	int3   
6401f8ac:	int3   
6401f8ad:	int3   
6401f8ae:	int3   
6401f8af:	int3   
6401f8b0:	mov    eax,ds:0x6402c408
6401f8b5:	and    eax,0xfffffffe
6401f8b8:	mov    ds:0x6402c408,eax
6401f8bd:	ret    
6401f8be:	mov    edx,DWORD PTR [esp+0x8]
6401f8c2:	lea    eax,[edx-0xc]
6401f8c5:	mov    ecx,DWORD PTR [edx-0x10]
6401f8c8:	xor    ecx,eax
6401f8ca:	call   0x6400f34e
6401f8cf:	mov    eax,0x64026dcc
6401f8d4:	jmp    0x6400f010
6401f8d9:	int3   
6401f8da:	int3   
6401f8db:	int3   
6401f8dc:	int3   
6401f8dd:	int3   
6401f8de:	int3   
6401f8df:	int3   
6401f8e0:	mov    eax,ds:0x6402c410
6401f8e5:	and    eax,0xfffffffe
6401f8e8:	mov    ds:0x6402c410,eax
6401f8ed:	ret    
6401f8ee:	mov    edx,DWORD PTR [esp+0x8]
6401f8f2:	lea    eax,[edx-0xc]
6401f8f5:	mov    ecx,DWORD PTR [edx-0x10]
6401f8f8:	xor    ecx,eax
6401f8fa:	call   0x6400f34e
6401f8ff:	mov    eax,0x64026df8
6401f904:	jmp    0x6400f010
6401f909:	int3   
6401f90a:	int3   
6401f90b:	int3   
6401f90c:	int3   
6401f90d:	int3   
6401f90e:	int3   
6401f90f:	int3   
6401f910:	mov    eax,ds:0x6402c418
6401f915:	and    eax,0xfffffffe
6401f918:	mov    ds:0x6402c418,eax
6401f91d:	ret    
6401f91e:	mov    edx,DWORD PTR [esp+0x8]
6401f922:	lea    eax,[edx-0xc]
6401f925:	mov    ecx,DWORD PTR [edx-0x10]
6401f928:	xor    ecx,eax
6401f92a:	call   0x6400f34e
6401f92f:	mov    eax,0x64026e24
6401f934:	jmp    0x6400f010
6401f939:	int3   
6401f93a:	int3   
6401f93b:	int3   
6401f93c:	int3   
6401f93d:	int3   
6401f93e:	int3   
6401f93f:	int3   
6401f940:	mov    eax,ds:0x6402c420
6401f945:	and    eax,0xfffffffe
6401f948:	mov    ds:0x6402c420,eax
6401f94d:	ret    
6401f94e:	mov    edx,DWORD PTR [esp+0x8]
6401f952:	lea    eax,[edx-0xc]
6401f955:	mov    ecx,DWORD PTR [edx-0x10]
6401f958:	xor    ecx,eax
6401f95a:	call   0x6400f34e
6401f95f:	mov    eax,0x64026e50
6401f964:	jmp    0x6400f010
6401f969:	int3   
6401f96a:	int3   
6401f96b:	int3   
6401f96c:	int3   
6401f96d:	int3   
6401f96e:	int3   
6401f96f:	int3   
6401f970:	mov    eax,ds:0x6402c428
6401f975:	and    eax,0xfffffffe
6401f978:	mov    ds:0x6402c428,eax
6401f97d:	ret    
6401f97e:	mov    edx,DWORD PTR [esp+0x8]
6401f982:	lea    eax,[edx-0xc]
6401f985:	mov    ecx,DWORD PTR [edx-0x10]
6401f988:	xor    ecx,eax
6401f98a:	call   0x6400f34e
6401f98f:	mov    eax,0x64026e7c
6401f994:	jmp    0x6400f010
6401f999:	int3   
6401f99a:	int3   
6401f99b:	int3   
6401f99c:	int3   
6401f99d:	int3   
6401f99e:	int3   
6401f99f:	int3   
6401f9a0:	mov    eax,ds:0x6402c430
6401f9a5:	and    eax,0xfffffffe
6401f9a8:	mov    ds:0x6402c430,eax
6401f9ad:	ret    
6401f9ae:	mov    edx,DWORD PTR [esp+0x8]
6401f9b2:	lea    eax,[edx-0xc]
6401f9b5:	mov    ecx,DWORD PTR [edx-0x10]
6401f9b8:	xor    ecx,eax
6401f9ba:	call   0x6400f34e
6401f9bf:	mov    eax,0x64026ea8
6401f9c4:	jmp    0x6400f010
6401f9c9:	int3   
6401f9ca:	int3   
6401f9cb:	int3   
6401f9cc:	int3   
6401f9cd:	int3   
6401f9ce:	int3   
6401f9cf:	int3   
6401f9d0:	lea    edi,[ebp-0x58]
6401f9d3:	jmp    0x64007230
6401f9d8:	lea    edi,[ebp-0x40]
6401f9db:	jmp    0x64007230
6401f9e0:	lea    edi,[ebp-0x38]
6401f9e3:	jmp    0x64007230
6401f9e8:	lea    edi,[ebp-0x3c]
6401f9eb:	jmp    0x64007230
6401f9f0:	lea    edi,[ebp-0x40]
6401f9f3:	jmp    0x64007230
6401f9f8:	lea    ecx,[ebp-0x24]
6401f9fb:	jmp    0x640075a0
6401fa00:	mov    edx,DWORD PTR [esp+0x8]
6401fa04:	lea    eax,[edx-0x60]
6401fa07:	mov    ecx,DWORD PTR [edx-0x64]
6401fa0a:	xor    ecx,eax
6401fa0c:	call   0x6400f34e
6401fa11:	mov    eax,0x64026efc
6401fa16:	jmp    0x6400f010
6401fa1b:	int3   
6401fa1c:	int3   
6401fa1d:	int3   
6401fa1e:	int3   
6401fa1f:	int3   
6401fa20:	lea    eax,[ebp-0x2c]
6401fa23:	jmp    0x64008140
6401fa28:	lea    ecx,[ebp-0x14]
6401fa2b:	jmp    0x64001ab0
6401fa30:	lea    ecx,[ebp-0x18]
6401fa33:	jmp    0x64001ab0
6401fa38:	lea    ecx,[ebp-0x54]
6401fa3b:	jmp    0x640019a0
6401fa40:	mov    edx,DWORD PTR [esp+0x8]
6401fa44:	lea    eax,[edx+0xc]
6401fa47:	mov    ecx,DWORD PTR [edx-0x58]
6401fa4a:	xor    ecx,eax
6401fa4c:	call   0x6400f34e
6401fa51:	mov    ecx,DWORD PTR [edx+0x294]
6401fa57:	xor    ecx,eax
6401fa59:	call   0x6400f34e
6401fa5e:	mov    eax,0x64026f40
6401fa63:	jmp    0x6400f010
6401fa68:	int3   
6401fa69:	int3   
6401fa6a:	int3   
6401fa6b:	int3   
6401fa6c:	int3   
6401fa6d:	int3   
6401fa6e:	int3   
6401fa6f:	int3   
6401fa70:	lea    ecx,[ebp-0x1005c]
6401fa76:	jmp    0x640019a0
6401fa7b:	lea    ecx,[ebp-0x10074]
6401fa81:	jmp    0x64001a00
6401fa86:	lea    ecx,[ebp-0x10074]
6401fa8c:	jmp    0x64001a00
6401fa91:	lea    ecx,[ebp-0x1005c]
6401fa97:	jmp    0x640019a0
6401fa9c:	mov    edx,DWORD PTR [esp+0x8]
6401faa0:	lea    eax,[edx-0x10084]
6401faa6:	mov    ecx,DWORD PTR [edx-0x10088]
6401faac:	xor    ecx,eax
6401faae:	call   0x6400f34e
6401fab3:	add    eax,0x10
6401fab6:	mov    ecx,DWORD PTR [edx-0x4]
6401fab9:	xor    ecx,eax
6401fabb:	call   0x6400f34e
6401fac0:	mov    eax,0x64026f84
6401fac5:	jmp    0x6400f010
6401faca:	int3   
6401facb:	int3   
6401facc:	int3   
6401facd:	int3   
6401face:	int3   
6401facf:	int3   
6401fad0:	lea    ecx,[ebp-0x30]
6401fad3:	jmp    0x640019a0
6401fad8:	lea    ecx,[ebp-0x5c]
6401fadb:	jmp    0x640019a0
6401fae0:	mov    edx,DWORD PTR [esp+0x8]
6401fae4:	lea    eax,[edx-0x74]
6401fae7:	mov    ecx,DWORD PTR [edx-0x78]
6401faea:	xor    ecx,eax
6401faec:	call   0x6400f34e
6401faf1:	add    eax,0xc
6401faf4:	mov    ecx,DWORD PTR [edx-0x8]
6401faf7:	xor    ecx,eax
6401faf9:	call   0x6400f34e
6401fafe:	mov    eax,0x64026fb8
6401fb03:	jmp    0x6400f010
6401fb08:	int3   
6401fb09:	int3   
6401fb0a:	int3   
6401fb0b:	int3   
6401fb0c:	int3   
6401fb0d:	int3   
6401fb0e:	int3   
6401fb0f:	int3   
6401fb10:	mov    ecx,DWORD PTR [ebp-0x10]
6401fb13:	jmp    0x64001ab0
6401fb18:	mov    edx,DWORD PTR [esp+0x8]
6401fb1c:	lea    eax,[edx-0xc]
6401fb1f:	mov    ecx,DWORD PTR [edx-0x10]
6401fb22:	xor    ecx,eax
6401fb24:	call   0x6400f34e
6401fb29:	mov    eax,0x64026fe4
6401fb2e:	jmp    0x6400f010
6401fb33:	int3   
6401fb34:	int3   
6401fb35:	int3   
6401fb36:	int3   
6401fb37:	int3   
6401fb38:	int3   
6401fb39:	int3   
6401fb3a:	int3   
6401fb3b:	int3   
6401fb3c:	int3   
6401fb3d:	int3   
6401fb3e:	int3   
6401fb3f:	int3   
6401fb40:	lea    ecx,[ebp-0x1c]
6401fb43:	jmp    0x64001ab0
6401fb48:	mov    edx,DWORD PTR [esp+0x8]
6401fb4c:	lea    eax,[edx-0x1c]
6401fb4f:	mov    ecx,DWORD PTR [edx-0x20]
6401fb52:	xor    ecx,eax
6401fb54:	call   0x6400f34e
6401fb59:	mov    eax,0x64027010
6401fb5e:	jmp    0x6400f010
6401fb63:	int3   
6401fb64:	int3   
6401fb65:	int3   
6401fb66:	int3   
6401fb67:	int3   
6401fb68:	int3   
6401fb69:	int3   
6401fb6a:	int3   
6401fb6b:	int3   
6401fb6c:	int3   
6401fb6d:	int3   
6401fb6e:	int3   
6401fb6f:	int3   
6401fb70:	mov    edx,DWORD PTR [esp+0x8]
6401fb74:	lea    eax,[edx+0xc]
6401fb77:	mov    ecx,DWORD PTR [edx-0x16c]
6401fb7d:	xor    ecx,eax
6401fb7f:	call   0x6400f34e
6401fb84:	mov    ecx,DWORD PTR [edx-0x8]
6401fb87:	xor    ecx,eax
6401fb89:	call   0x6400f34e
6401fb8e:	mov    eax,0x64027068
6401fb93:	jmp    0x6400f010
6401fb98:	int3   
6401fb99:	int3   
6401fb9a:	int3   
6401fb9b:	int3   
6401fb9c:	int3   
6401fb9d:	int3   
6401fb9e:	int3   
6401fb9f:	int3   
6401fba0:	lea    esi,[ebp-0x840]
6401fba6:	jmp    0x640023f0
6401fbab:	lea    ecx,[ebp-0x848]
6401fbb1:	jmp    0x64001ab0
6401fbb6:	mov    edx,DWORD PTR [esp+0x8]
6401fbba:	lea    eax,[edx-0x84c]
6401fbc0:	mov    ecx,DWORD PTR [edx-0x850]
6401fbc6:	xor    ecx,eax
6401fbc8:	call   0x6400f34e
6401fbcd:	add    eax,0xc
6401fbd0:	mov    ecx,DWORD PTR [edx-0x8]
6401fbd3:	xor    ecx,eax
6401fbd5:	call   0x6400f34e
6401fbda:	mov    eax,0x6402709c
6401fbdf:	jmp    0x6400f010
6401fbe4:	int3   
6401fbe5:	int3   
6401fbe6:	int3   
6401fbe7:	int3   
6401fbe8:	int3   
6401fbe9:	int3   
6401fbea:	int3   
6401fbeb:	int3   
6401fbec:	int3   
6401fbed:	int3   
6401fbee:	int3   
6401fbef:	int3   
6401fbf0:	mov    eax,DWORD PTR [ebp-0x54]
6401fbf3:	and    eax,0x1
6401fbf6:	je     0x6401fc08
6401fbfc:	and    DWORD PTR [ebp-0x54],0xfffffffe
6401fc00:	mov    ecx,DWORD PTR [ebp+0x4]
6401fc03:	jmp    0x64001ab0
6401fc08:	ret    
6401fc09:	lea    ecx,[ebp-0x50]
6401fc0c:	jmp    0x640019a0
6401fc11:	lea    ecx,[ebp-0x50]
6401fc14:	jmp    0x640019a0
6401fc19:	mov    edx,DWORD PTR [esp+0x8]
6401fc1d:	lea    eax,[edx-0x54]
6401fc20:	mov    ecx,DWORD PTR [edx-0x58]
6401fc23:	xor    ecx,eax
6401fc25:	call   0x6400f34e
6401fc2a:	mov    eax,0x640270d8
6401fc2f:	jmp    0x6400f010
6401fc34:	int3   
6401fc35:	int3   
6401fc36:	int3   
6401fc37:	int3   
6401fc38:	int3   
6401fc39:	int3   
6401fc3a:	int3   
6401fc3b:	int3   
6401fc3c:	int3   
6401fc3d:	int3   
6401fc3e:	int3   
6401fc3f:	int3   
6401fc40:	lea    ecx,[ebp+0x4]
6401fc43:	jmp    0x64001ab0
6401fc48:	lea    ecx,[ebp-0x58]
6401fc4b:	jmp    0x640019d0
6401fc50:	lea    ecx,[ebp-0x50]
6401fc53:	jmp    0x640019a0
6401fc58:	lea    ecx,[ebp-0x50]
6401fc5b:	jmp    0x640019a0
6401fc60:	mov    edx,DWORD PTR [esp+0x8]
6401fc64:	lea    eax,[edx-0x58]
6401fc67:	mov    ecx,DWORD PTR [edx-0x5c]
6401fc6a:	xor    ecx,eax
6401fc6c:	call   0x6400f34e
6401fc71:	mov    eax,0x6402711c
6401fc76:	jmp    0x6400f010
6401fc7b:	int3   
6401fc7c:	int3   
6401fc7d:	int3   
6401fc7e:	int3   
6401fc7f:	int3   
6401fc80:	lea    ecx,[ebp-0x42c]
6401fc86:	jmp    0x64001ab0
6401fc8b:	mov    edx,DWORD PTR [esp+0x8]
6401fc8f:	lea    eax,[edx-0x430]
6401fc95:	mov    ecx,DWORD PTR [edx-0x434]
6401fc9b:	xor    ecx,eax
6401fc9d:	call   0x6400f34e
6401fca2:	add    eax,0x10
6401fca5:	mov    ecx,DWORD PTR [edx-0x4]
6401fca8:	xor    ecx,eax
6401fcaa:	call   0x6400f34e
6401fcaf:	mov    eax,0x64027148
6401fcb4:	jmp    0x6400f010
6401fcb9:	int3   
6401fcba:	int3   
6401fcbb:	int3   
6401fcbc:	int3   
6401fcbd:	int3   
6401fcbe:	int3   
6401fcbf:	int3   
6401fcc0:	lea    edi,[ebp-0x18]
6401fcc3:	jmp    0x64007230
6401fcc8:	lea    edi,[ebp-0x1c]
6401fccb:	jmp    0x64007230
6401fcd0:	lea    edi,[ebp-0x14]
6401fcd3:	jmp    0x64007230
6401fcd8:	mov    edx,DWORD PTR [esp+0x8]
6401fcdc:	lea    eax,[edx-0x1c]
6401fcdf:	mov    ecx,DWORD PTR [edx-0x20]
6401fce2:	xor    ecx,eax
6401fce4:	call   0x6400f34e
6401fce9:	mov    eax,0x64027194
6401fcee:	jmp    0x6400f010
6401fcf3:	int3   
6401fcf4:	int3   
6401fcf5:	int3   
6401fcf6:	int3   
6401fcf7:	int3   
6401fcf8:	int3   
6401fcf9:	int3   
6401fcfa:	int3   
6401fcfb:	int3   
6401fcfc:	int3   
6401fcfd:	int3   
6401fcfe:	int3   
6401fcff:	int3   
6401fd00:	mov    eax,DWORD PTR [ebp-0x54]
6401fd03:	and    eax,0x1
6401fd06:	je     0x6401fd18
6401fd0c:	and    DWORD PTR [ebp-0x54],0xfffffffe
6401fd10:	mov    ecx,DWORD PTR [ebp+0x4]
6401fd13:	jmp    0x64001ab0
6401fd18:	ret    
6401fd19:	lea    ecx,[ebp-0x50]
6401fd1c:	jmp    0x640019a0
6401fd21:	mov    edx,DWORD PTR [esp+0x8]
6401fd25:	lea    eax,[edx-0x58]
6401fd28:	mov    ecx,DWORD PTR [edx-0x5c]
6401fd2b:	xor    ecx,eax
6401fd2d:	call   0x6400f34e
6401fd32:	mov    eax,0x640271c8
6401fd37:	jmp    0x6400f010
6401fd3c:	int3   
6401fd3d:	int3   
6401fd3e:	int3   
6401fd3f:	int3   
6401fd40:	mov    eax,DWORD PTR [ebp-0x28]
6401fd43:	and    eax,0x1
6401fd46:	je     0x6401fd58
6401fd4c:	and    DWORD PTR [ebp-0x28],0xfffffffe
6401fd50:	mov    ecx,DWORD PTR [ebp+0x4]
6401fd53:	jmp    0x64001ab0
6401fd58:	ret    
6401fd59:	lea    ecx,[ebp-0x24]
6401fd5c:	jmp    0x64001ab0
6401fd61:	lea    ecx,[ebp-0x20]
6401fd64:	jmp    0x64001ab0
6401fd69:	lea    ecx,[ebp-0x1c]
6401fd6c:	jmp    0x64001ab0
6401fd71:	lea    ecx,[ebp-0x18]
6401fd74:	jmp    0x64001ab0
6401fd79:	lea    ecx,[ebp-0x14]
6401fd7c:	jmp    0x64001ab0
6401fd81:	lea    ecx,[ebp-0x10]
6401fd84:	jmp    0x64001ab0
6401fd89:	mov    edx,DWORD PTR [esp+0x8]
6401fd8d:	lea    eax,[edx-0x30]
6401fd90:	mov    ecx,DWORD PTR [edx-0x34]
6401fd93:	xor    ecx,eax
6401fd95:	call   0x6400f34e
6401fd9a:	mov    eax,0x64027224
6401fd9f:	jmp    0x6400f010
6401fda4:	int3   
6401fda5:	int3   
6401fda6:	int3   
6401fda7:	int3   
6401fda8:	int3   
6401fda9:	int3   
6401fdaa:	int3   
6401fdab:	int3   
6401fdac:	int3   
6401fdad:	int3   
6401fdae:	int3   
6401fdaf:	int3   
6401fdb0:	lea    ecx,[ebp+0xc]
6401fdb3:	jmp    0x64001ab0
6401fdb8:	lea    ecx,[ebp-0x28]
6401fdbb:	jmp    0x640019a0
6401fdc0:	lea    ecx,[ebp-0x6c]
6401fdc3:	jmp    0x640019a0
6401fdc8:	lea    ecx,[ebp-0x88]
6401fdce:	jmp    0x640019a0
6401fdd3:	lea    ecx,[ebp-0xc0]
6401fdd9:	jmp    0x640019a0
6401fdde:	lea    ecx,[ebp-0xa4]
6401fde4:	jmp    0x640019a0
6401fde9:	mov    edx,DWORD PTR [esp+0x8]
6401fded:	lea    eax,[edx+0xc]
6401fdf0:	mov    ecx,DWORD PTR [edx-0xc4]
6401fdf6:	xor    ecx,eax
6401fdf8:	call   0x6400f34e
6401fdfd:	mov    ecx,DWORD PTR [edx+0x80]
6401fe03:	xor    ecx,eax
6401fe05:	call   0x6400f34e
6401fe0a:	mov    eax,0x64027278
6401fe0f:	jmp    0x6400f010
6401fe14:	int3   
6401fe15:	int3   
6401fe16:	int3   
6401fe17:	int3   
6401fe18:	int3   
6401fe19:	int3   
6401fe1a:	int3   
6401fe1b:	int3   
6401fe1c:	int3   
6401fe1d:	int3   
6401fe1e:	int3   
6401fe1f:	int3   
6401fe20:	call   0x6400a2e0
6401fe25:	mov    ds:0x6402c234,eax
6401fe2a:	ret    
6401fe2b:	int3   
6401fe2c:	int3   
6401fe2d:	int3   
6401fe2e:	int3   
6401fe2f:	int3   
6401fe30:	call   0x6400a3c0
6401fe35:	mov    ds:0x6402c28c,eax
6401fe3a:	ret    
6401fe3b:	int3   
6401fe3c:	int3   
6401fe3d:	int3   
6401fe3e:	int3   
6401fe3f:	int3   
6401fe40:	call   0x6400a4a0
6401fe45:	mov    ds:0x6402c2a0,eax
6401fe4a:	ret    
6401fe4b:	int3   
6401fe4c:	int3   
6401fe4d:	int3   
6401fe4e:	int3   
6401fe4f:	int3   
6401fe50:	call   0x6400a580
6401fe55:	mov    ds:0x6402c224,eax
6401fe5a:	ret    
6401fe5b:	int3   
6401fe5c:	int3   
6401fe5d:	int3   
6401fe5e:	int3   
6401fe5f:	int3   
6401fe60:	call   0x6400a660
6401fe65:	mov    ds:0x6402c2a4,eax
6401fe6a:	ret    
6401fe6b:	int3   
6401fe6c:	int3   
6401fe6d:	int3   
6401fe6e:	int3   
6401fe6f:	int3   
6401fe70:	call   0x6400a740
6401fe75:	mov    ds:0x6402c220,eax
6401fe7a:	ret    
6401fe7b:	int3   
6401fe7c:	int3   
6401fe7d:	int3   
6401fe7e:	int3   
6401fe7f:	int3   
6401fe80:	call   0x6400a820
6401fe85:	mov    ds:0x6402c250,eax
6401fe8a:	ret    
6401fe8b:	int3   
6401fe8c:	int3   
6401fe8d:	int3   
6401fe8e:	int3   
6401fe8f:	int3   
6401fe90:	call   0x6400a900
6401fe95:	mov    ds:0x6402c280,eax
6401fe9a:	ret    
6401fe9b:	int3   
6401fe9c:	int3   
6401fe9d:	int3   
6401fe9e:	int3   
6401fe9f:	int3   
6401fea0:	call   0x6400a9e0
6401fea5:	mov    ds:0x6402c2a8,eax
6401feaa:	ret    
6401feab:	int3   
6401feac:	int3   
6401fead:	int3   
6401feae:	int3   
6401feaf:	int3   
6401feb0:	call   0x6400aac0
6401feb5:	mov    ds:0x6402c288,eax
6401feba:	ret    
6401febb:	int3   
6401febc:	int3   
6401febd:	int3   
6401febe:	int3   
6401febf:	int3   
6401fec0:	call   0x6400aba0
6401fec5:	mov    ds:0x6402c25c,eax
6401feca:	ret    
6401fecb:	int3   
6401fecc:	int3   
6401fecd:	int3   
6401fece:	int3   
6401fecf:	int3   
6401fed0:	call   0x6400ac80
6401fed5:	mov    ds:0x6402c23c,eax
6401feda:	ret    
6401fedb:	int3   
6401fedc:	int3   
6401fedd:	int3   
6401fede:	int3   
6401fedf:	int3   
6401fee0:	call   0x6400ad60
6401fee5:	mov    ds:0x6402c274,eax
6401feea:	ret    
6401feeb:	int3   
6401feec:	int3   
6401feed:	int3   
6401feee:	int3   
6401feef:	int3   
6401fef0:	call   0x6400ae40
6401fef5:	mov    ds:0x6402c22c,eax
6401fefa:	ret    
6401fefb:	int3   
6401fefc:	int3   
6401fefd:	int3   
6401fefe:	int3   
6401feff:	int3   
6401ff00:	call   0x6400af20
6401ff05:	mov    ds:0x6402c21c,eax
6401ff0a:	ret    
6401ff0b:	int3   
6401ff0c:	int3   
6401ff0d:	int3   
6401ff0e:	int3   
6401ff0f:	int3   
6401ff10:	call   0x6400b000
6401ff15:	mov    ds:0x6402c294,eax
6401ff1a:	ret    
6401ff1b:	int3   
6401ff1c:	int3   
6401ff1d:	int3   
6401ff1e:	int3   
6401ff1f:	int3   
6401ff20:	call   0x6400b0e0
6401ff25:	mov    ds:0x6402c258,eax
6401ff2a:	ret    
6401ff2b:	int3   
6401ff2c:	int3   
6401ff2d:	int3   
6401ff2e:	int3   
6401ff2f:	int3   
6401ff30:	call   0x6400b1c0
6401ff35:	mov    ds:0x6402c27c,eax
6401ff3a:	ret    
6401ff3b:	int3   
6401ff3c:	int3   
6401ff3d:	int3   
6401ff3e:	int3   
6401ff3f:	int3   
6401ff40:	call   0x6400b2a0
6401ff45:	mov    ds:0x6402c218,eax
6401ff4a:	ret    
6401ff4b:	int3   
6401ff4c:	int3   
6401ff4d:	int3   
6401ff4e:	int3   
6401ff4f:	int3   
6401ff50:	call   0x6400b380
6401ff55:	mov    ds:0x6402c290,eax
6401ff5a:	ret    
6401ff5b:	int3   
6401ff5c:	int3   
6401ff5d:	int3   
6401ff5e:	int3   
6401ff5f:	int3   
6401ff60:	call   0x6400b460
6401ff65:	mov    ds:0x6402c24c,eax
6401ff6a:	ret    
6401ff6b:	int3   
6401ff6c:	int3   
6401ff6d:	int3   
6401ff6e:	int3   
6401ff6f:	int3   
6401ff70:	call   0x6400b540
6401ff75:	mov    ds:0x6402c230,eax
6401ff7a:	ret    
6401ff7b:	int3   
6401ff7c:	int3   
6401ff7d:	int3   
6401ff7e:	int3   
6401ff7f:	int3   
6401ff80:	call   0x6400b620
6401ff85:	mov    ds:0x6402c238,eax
6401ff8a:	ret    
6401ff8b:	int3   
6401ff8c:	int3   
6401ff8d:	int3   
6401ff8e:	int3   
6401ff8f:	int3   
6401ff90:	call   0x6400b700
6401ff95:	mov    ds:0x6402c2b4,eax
6401ff9a:	ret    
6401ff9b:	int3   
6401ff9c:	int3   
6401ff9d:	int3   
6401ff9e:	int3   
6401ff9f:	int3   
6401ffa0:	call   0x6400b7e0
6401ffa5:	mov    ds:0x6402c244,eax
6401ffaa:	ret    
6401ffab:	int3   
6401ffac:	int3   
6401ffad:	int3   
6401ffae:	int3   
6401ffaf:	int3   
6401ffb0:	call   0x6400b8c0
6401ffb5:	mov    ds:0x6402c278,eax
6401ffba:	ret    
6401ffbb:	int3   
6401ffbc:	int3   
6401ffbd:	int3   
6401ffbe:	int3   
6401ffbf:	int3   
6401ffc0:	call   0x6400b9a0
6401ffc5:	mov    ds:0x6402c228,eax
6401ffca:	ret    
6401ffcb:	int3   
6401ffcc:	int3   
6401ffcd:	int3   
6401ffce:	int3   
6401ffcf:	int3   
6401ffd0:	call   0x6400ba80
6401ffd5:	mov    ds:0x6402c284,eax
6401ffda:	ret    
6401ffdb:	int3   
6401ffdc:	int3   
6401ffdd:	int3   
6401ffde:	int3   
6401ffdf:	int3   
6401ffe0:	call   0x6400bb60
6401ffe5:	mov    ds:0x6402c268,eax
6401ffea:	ret    
6401ffeb:	int3   
6401ffec:	int3   
6401ffed:	int3   
6401ffee:	int3   
6401ffef:	int3   
6401fff0:	call   0x6400bc40
6401fff5:	mov    ds:0x6402c254,eax
6401fffa:	ret    
6401fffb:	int3   
6401fffc:	int3   
6401fffd:	int3   
6401fffe:	int3   
6401ffff:	int3   
64020000:	call   0x6400bd20
64020005:	mov    ds:0x6402c270,eax
6402000a:	ret    
6402000b:	int3   
6402000c:	int3   
6402000d:	int3   
6402000e:	int3   
6402000f:	int3   
64020010:	call   0x6400be00
64020015:	mov    ds:0x6402c26c,eax
6402001a:	ret    
6402001b:	int3   
6402001c:	int3   
6402001d:	int3   
6402001e:	int3   
6402001f:	int3   
64020020:	call   0x6400bee0
64020025:	mov    ds:0x6402c260,eax
6402002a:	ret    
6402002b:	int3   
6402002c:	int3   
6402002d:	int3   
6402002e:	int3   
6402002f:	int3   
64020030:	call   0x6400bfc0
64020035:	mov    ds:0x6402c2ac,eax
6402003a:	ret    
6402003b:	int3   
6402003c:	int3   
6402003d:	int3   
6402003e:	int3   
6402003f:	int3   
64020040:	call   0x6400c0a0
64020045:	mov    ds:0x6402c2b8,eax
6402004a:	ret    
6402004b:	int3   
6402004c:	int3   
6402004d:	int3   
6402004e:	int3   
6402004f:	int3   
64020050:	call   0x6400c180
64020055:	mov    ds:0x6402c240,eax
6402005a:	ret    
6402005b:	int3   
6402005c:	int3   
6402005d:	int3   
6402005e:	int3   
6402005f:	int3   
64020060:	call   0x6400c260
64020065:	mov    ds:0x6402c248,eax
6402006a:	ret    
6402006b:	int3   
6402006c:	int3   
6402006d:	int3   
6402006e:	int3   
6402006f:	int3   
64020070:	call   0x6400c340
64020075:	mov    ds:0x6402c29c,eax
6402007a:	ret    
6402007b:	int3   
6402007c:	int3   
6402007d:	int3   
6402007e:	int3   
6402007f:	int3   
64020080:	call   0x6400c420
64020085:	mov    ds:0x6402c2b0,eax
6402008a:	ret    
6402008b:	int3   
6402008c:	int3   
6402008d:	int3   
6402008e:	int3   
6402008f:	int3   
64020090:	call   0x6400c500
64020095:	mov    ds:0x6402c264,eax
6402009a:	ret    
6402009b:	int3   
6402009c:	int3   
6402009d:	int3   
6402009e:	int3   
6402009f:	int3   
640200a0:	call   0x6400c5e0
640200a5:	mov    ds:0x6402c298,eax
640200aa:	ret    
640200ab:	mov    ecx,0x6402946c
640200b0:	call   0x6400e7fd
640200b5:	push   0x64020201
640200ba:	call   0x6400f481
640200bf:	pop    ecx
640200c0:	ret    
640200c1:	mov    ecx,0x640294a8
640200c6:	call   0x6400e7d7
640200cb:	push   0x6402020b
640200d0:	call   0x6400f481
640200d5:	pop    ecx
640200d6:	ret    
640200d7:	call   DWORD PTR ds:0x640210f8
640200dd:	push   0x64020215
640200e2:	mov    DWORD PTR ds:0x640294d4,0x64021b0c
640200ec:	mov    ds:0x640294d8,eax
640200f1:	mov    BYTE PTR ds:0x640294dc,0x0
640200f8:	call   0x6400f481
640200fd:	pop    ecx
640200fe:	ret    
640200ff:	push   0x640294d4
64020104:	mov    ecx,0x640294e0
64020109:	call   0x6400e970
6402010e:	push   0x6402021f
64020113:	call   0x6400f481
64020118:	pop    ecx
64020119:	ret    
6402011a:	int3   
6402011b:	int3   
6402011c:	int3   
6402011d:	int3   
6402011e:	int3   
6402011f:	int3   
64020120:	push   0x64020240
64020125:	call   0x6400f481
6402012a:	pop    ecx
6402012b:	ret    
6402012c:	int3   
6402012d:	int3   
6402012e:	int3   
6402012f:	int3   
64020130:	push   ebp
64020131:	mov    ebp,esp
64020133:	and    esp,0xfffffff8
64020136:	mov    eax,ds:0x6402c2d0
6402013b:	mov    edx,DWORD PTR [eax]
6402013d:	sub    esp,0xc
64020140:	push   esi
64020141:	push   eax
64020142:	mov    ecx,0x6402c2cc
64020147:	push   ecx
64020148:	push   edx
64020149:	mov    esi,ecx
6402014b:	push   esi
6402014c:	lea    eax,[esp+0x18]
64020150:	push   eax
64020151:	call   0x64005a70
64020156:	mov    ecx,DWORD PTR ds:0x6402c2d0
6402015c:	push   ecx
6402015d:	call   0x6400eb52
64020162:	add    esp,0x4
64020165:	xor    eax,eax
64020167:	mov    ds:0x6402c2d0,eax
6402016c:	mov    ds:0x6402c2d4,eax
64020171:	pop    esi
64020172:	mov    esp,ebp
64020174:	pop    ebp
64020175:	ret    
64020176:	int3   
64020177:	int3   
64020178:	int3   
64020179:	int3   
6402017a:	int3   
6402017b:	int3   
6402017c:	int3   
6402017d:	int3   
6402017e:	int3   
6402017f:	int3   
64020180:	push   ebp
64020181:	mov    ebp,esp
64020183:	and    esp,0xfffffff8
64020186:	mov    eax,ds:0x6402c2c4
6402018b:	mov    edx,DWORD PTR [eax]
6402018d:	sub    esp,0xc
64020190:	push   esi
64020191:	push   eax
64020192:	mov    ecx,0x6402c2c0
64020197:	push   ecx
64020198:	push   edx
64020199:	mov    esi,ecx
6402019b:	push   esi
6402019c:	lea    eax,[esp+0x18]
640201a0:	push   eax
640201a1:	call   0x640056e0
640201a6:	mov    ecx,DWORD PTR ds:0x6402c2c4
640201ac:	push   ecx
640201ad:	call   0x6400eb52
640201b2:	add    esp,0x4
640201b5:	xor    eax,eax
640201b7:	mov    ds:0x6402c2c4,eax
640201bc:	mov    ds:0x6402c2c8,eax
640201c1:	pop    esi
640201c2:	mov    esp,ebp
640201c4:	pop    ebp
640201c5:	ret    
640201c6:	int3   
640201c7:	int3   
640201c8:	int3   
640201c9:	int3   
640201ca:	int3   
640201cb:	int3   
640201cc:	int3   
640201cd:	int3   
640201ce:	int3   
640201cf:	int3   
640201d0:	mov    eax,ds:0x6402945c
640201d5:	test   eax,eax
640201d7:	je     0x640201e2
640201d9:	push   eax
640201da:	call   0x6400eb52
640201df:	add    esp,0x4
640201e2:	mov    DWORD PTR ds:0x6402945c,0x0
640201ec:	mov    DWORD PTR ds:0x64029460,0x0
640201f6:	mov    DWORD PTR ds:0x64029464,0x0
64020200:	ret    
64020201:	mov    ecx,0x6402946c
64020206:	jmp    0x6400e76b
6402020b:	mov    ecx,0x640294a8
64020210:	jmp    0x6400e8ac
64020215:	mov    ecx,0x640294d4
6402021a:	jmp    0x6400e8c4
6402021f:	mov    DWORD PTR ds:0x640294e0,0x64021b20
64020229:	ret    
6402022a:	mov    DWORD PTR ds:0x64029500,0x640212f4
64020234:	mov    ecx,0x64029500
64020239:	jmp    0x6400ec6b
6402023e:	int3   
6402023f:	int3   
64020240:	push   0x64028fc8
64020245:	call   DWORD PTR ds:0x64021180
6402024b:	ret    
